jge
inc
or
repnz
pop
add
adc
in
inc
inc
fwait
jne
push
lret
mov
xchg
insb
mov
adc
mov
xchg
mov
dec
hlt
int
mov
jbe
jne
mov
add
push
jle
or
repz
inc
mov
jg
xchg
insb
sbb
testl
fsub
int
repnz
jl
and
cs
sub
or
test
adc
cmp
push
jp
pop
xchg
add
sub
bound
out
adc
inc
push
enter
or
movsb
mov
rcr
cmc
sub
pop
outsb
js
mov
and
mov
mov
xor
inc
rclb
loope
popf
aam
push
scas
scas
dec
in
push
sbb
cmp
sbb
fwait
outsb
mov
js
sbb
jb
lcall
cmp
mov
pushf
call
neg
pushf
call
or
in
mov
inc
push
mov
dec
sbb
loope
lret
cmp
push
mov
mov
les
pop
jnp
xor
cmp
push
jge
inc
dec
sarl
push
ret
xchg
pusha
add
xor
dec
inc
inc
fdivr
add
pop
jle
xor
adc
dec
xchg
in
andb
mov
mov
fs
sarl
adc
or
addr16
rcr
cmpsl
loope
or
mov
test
or
outsb
mov
insl
push
add
jno
movsb
pop
insb
loopne
sub
gs
inc
push
in
sbb
jg
call
and
outsl
xor
adc
push
out
push
test
adc
cmpsl
iret
cld
fbld
push
mov
add
outsl
jae
push
jb
outsb
je
jb
mov
mov
test
xchg
lret
movsl
outsl
or
lahf
hlt
jmp
jne
movsb
mov
mov
pop
lock
ret
bound
push
test
rclb
xorb
mov
shrb
rcll
mov
sub
mov
xchg
leave
stos
add
cmpsl
inc
cmp
jg
add
sbb
dec
stos
cmpsb
pop
andps
mov
cmp
pop
lods
icebp
sub
in
shlb
adc
and
loop,pn
ja
fiadds
and
popa
mov
mov
lods
mov
pushf
pusha
pushf
pushl
ret
sub
jle
add
setnp
dec
cmc
ror
mov
push
test
pusha
pusha
pushf
pushf
lea
je
jmp
ror
push
lea
jge
xor
call
add
dec
outsl
popa
fs
imul
add
orb
in
movsl
les
mov
pusha
push
pushl
push
lea
jmp
popa
dec
test
sbb
lahf
mov
cld
test
sbb
or
loop
push
dec
jnp
cli
bnd
rcrl
dec
and
cmc
pop
jnp
add
fcmovnbe
push
int3
pop
sub
adc
dec
iret
subb
sbb
daa
nop
fcompl
out
jns
ja
sbb
cmp
iret
int
lret
cmc
xor
cltd
jb
lea
pop
mov
shrl
test
xchg
icebp
lahf
sub
cltd
popf
iret
jns
fcoms
and
cmpsb
mov
das
std
mov
xchg
xchg
sahf
cmp
out
in
sbb
mov
cmp
int
adc
dec
scas
xchg
adc
roll
pusha
add
push
imul
cs
popf
ror
neg
jb
jle
mov
mov
outsl
pop
movsb
push
nop
dec
fisttps
jle
stos
jmp
pop
call
jo
adc
loopne
ficoml
stos
inc
mov
cmp
xor
or
mov
cmpsl
add
loope
in
ja
dec
adc
stc
test
loopne
insl
mov
jl
rclb
int3
fdivr
ss
dec
mov
negb
in
mov
loop
jle
add
push
xor
xlat
out
push
mov
mov
iret
lret
in
pop
xor
shrl
xor
dec
out
mov
sbb
jp
imul
nop
lock
sbb
daa
test
subb
mov
test
stos
xor
rorl
js
inc
pop
ret
pop
mov
in
jecxz
mov
and
bound
mov
adc
xor
frstpm(287
lret
xor
jno
adc
push
addr16
mov
lods
add
mov
sub
mov
faddl
pop
sub
push
roll
cwtl
push
call
sbb
pop
pop
jno
add
jle
stos
jecxz
cwtl
inc
push
mov
cltd
xor
dec
sub
test
test
out
movsb
sub
je
loopne
in
and
out
mov
in
lea
sarl
jp
lock
pop
call
xchg
ss
leave
nopl
dec
ja
sub
pop
mov
addr16
pusha
push
rcll
jge
push
aas
inc
enter
icebp
dec
lods
scas
les
jmp
out
mov
jno
jmp
push
or
xchg
clc
lds
sti
shlb
hlt
cld
cltd
mov
push
xchg
sahf
pop
xor
ret
mov
jle
add
pop
popf
cld
leave
out
lea
jae
test
xor
jmp
pushf
neg
dec
inc
rol
bt
ror
xor
test
pushf
add
pushf
rcr
rol
cmc
ror
pusha
pushf
dec
inc
inc
shl
neg
not
pushf
not
stos
not
sete
mov
movw
pushl
lea
call
call
cltd
lds
test
int3
xor
dec
in
or
xorl
jmp
mov
icebp
pop
aad
jo
cli
mov
push
aas
imul
sbb
or
in
cli
stos
push
cmp
pop
mov
and
mov
lcall
fcomps
les
mov
les
cmp
xor
add
call
lods
lock
adc
push
jae
jne
adc
push
fadds
sub
repz
sarb
add
sub
mov
scas
sbb
fsubr
xor
push
movsl
push
movsl
mov
add
test
xchg
add
mov
mov
adc
in
mov
sub
pop
sub
aaa
fldt
fdivrs
mov
lahf
cmp
adc
repz
cmpsl
push
ds
imul
in
inc
mov
xchg
mov
orb
cli
sbb
arpl
cmc
mov
xor
aas
scas
lock
pop
and
fsts
out
clc
inc
adc
clc
fwait
leave
hlt
dec
call
paddsw
rol
lock
fists
and
shrb
sahf
xchg
mov
shll
sahf
adc
and
lret
or
jnp
stos
sbb
or
scas
and
push
arpl
push
add
loop
in
push
mov
adcl
pop
sub
imul
or
xchg
pop
es
adc
sbb
pop
mov
js
rolb
fdivs
xchg
and
and
sbb
xor
cwtl
stos
inc
outsl
lods
mov
fnsetpm(287
or
jno
and
sbb
add
jo
out
sti
pop
adc
iret
fidivrs
imul
les
lret
jmp
xchg
pop
adc
test
or
sbb
lahf
repz
aaa
icebp
lret
and
adc
mov
xchg
dec
aad
jle
in
jge
xchg
pmaxub
aad
sub
out
ret
sahf
loope
sbb
push
push
xor
jge
aas
sub
mov
js
loopne
cmc
icebp
inc
inc
adc
rclb
dec
push
out
and
push
sbb
in
add
rorb
lret
call
mov
stc
sub
bt
pusha
jmp
and
jae
imulb
push
cld
cli
ret
xchg
cmp
mov
or
pop
push
inc
xor
dec
into
adc
lret
clc
inc
and
fsts
push
cli
pop
arpl
inc
jge
lock
xchg
cmp
leave
mov
sub
mov
push
dec
les
out
mov
mov
cltd
jae
adc
sahf
push
sbb
xor
xchg
mov
push
mov
movw
pushl
ret
btc
lea
add
stc
cmp
inc
mov
not
cmc
mov
jmp
pusha
pusha
lea
jb
bt
push
cmp
pushf
call
repz
test
xlat
mulb
outsl
mov
push
pop
sub
aad
push
mov
sub
mov
mov
aad
das
dec
mov
cmp
mov
lret
sahf
jbe
inc
test
hlt
js
repnz
push
sub
or
or
int3
jmp
inc
lret
fwait
scas
mov
xchg
push
xchg
in
les
jle
xchg
std
adc
outsb
test
xchg
ret
mov
mov
pop
fimuls
loopne
test
mov
ror
shld
mov
call
pushf
mov
jmp
pushf
call
int3
inc
or
test
xchg
je
pusha
sub
data16
mov
push
jo
cli
add
arpl
lock
mov
mov
out
add
enter
test
nop
not
test
jnp
in
stos
adc
or
aaa
hlt
lods
cmc
xor
push
cmp
push
pop
dec
jge
repnz
jns
lcall
or
xchg
std
jb
arpl
imul
mov
add
popa
fstpl
imull
sbb
lcall
pop
std
add
stos
test
jne
or
ja
lret
ret
popa
or
ficoml
jne
insl
lahf
or
test
sub
rol
clc
mov
call
das
mov
mov
dec
movzbw
mov
call
inc
cmp
jmp
jg
mov
push
imulb
test
insb
clc
in
lods
push
adcl
xchg
jns
mov
jnp
adc
rol
subb
xchg
sbb
mov
adc
xchg
test
jne
ficomps
or
jg
mov
sub
xchg
daa
push
push
xchg
inc
sahf
dec
sbb
push
rcrb
mov
push
push
std
in
pusha
sbb
xchg
ret
and
out
jg
push
aam
cltd
or
rcrl
shr
jnp
xchg
mov
fnsave
xor
dec
fs
clc
dec
and
out
jle
imul
push
adc
mov
xchg
out
mov
inc
or
push
lea
mov
sub
cli
sahf
cmp
jecxz
pop
in
fdivr
xor
cmpsb
dec
mov
cmp
push
inc
mov
inc
clc
xor
mov
adc
dec
xor
mov
xchg
sahf
mov
mov
mov
cmp
cmc
test
call
pusha
mov
pushf
lea
jmp
jle
js
test
out
push
add
in
std
lods
mov
ss
dec
mov
lahf
pop
divl
pop
test
bound
xchg
mov
jno
js
jno
jmp
push
push
dec
xor
push
add
xor
xor
stos
lock
jmp
pop
es
lods
and
or
cmpsb
into
mulb
push
das
sbb
ret
lea
enter
scas
push
aad
dec
or
sahf
jmp
cmp
lret
lret
je
cmp
push
enter
jbe
and
lcall
lcall
jge
movsb
inc
and
mov
mov
jno
lcall
shr
push
lea
mov
cmc
pusha
bsf
ror
add
pushf
bswap
movsbw
mov
call
jmp
inc
arpl
call
push
adc
jecxz
fdivr
mov
sarb
ret
pop
outsl
je
loopne
into
and
dec
inc
or
popa
loope
icebp
ljmp
inc
testb
xor
fsubs
mov
xor
inc
loop
cmp
lea
mov
jns
fisubl
arpl
dec
xor
pop
sub
neg
dec
aad
pop
dec
mov
out
mov
ret
lahf
icebp
out
xchg
icebp
mov
aam
xchg
jg
nop
and
imul
jno
ja
lret
js
jl
mov
adc
cmp
mov
into
and
mov
jo
mov
push
setbe
xor
popf
xchg
push
add
inc
frstor
shl
loopne
sbb
push
fidivrl
xor
mov
pop
inc
cwtl
lret
jle
add
fsubrp
cld
shrl
jb
jns
pushf
xchg
sbb
out
rcll
xchg
jecxz
or
fimull
inc
pop
pop
popa
or
push
pop
lods
loop
xor
push
jmp
and
jmp
in
push
cmp
sbb
mov
testl
mov
inc
in
sbb
ss
testb
sub
xchg
mov
and
inc
imul
lret
or
mov
imull
dec
cli
xchg
call
jge
sarl
push
pop
repz
dec
pop
cltd
aaa
mov
xor
inc
das
hlt
js
andl
fnsave
inc
movsb
pusha
sub
xchg
rol
mov
push
popa
imul
mov
mov
ljmp
out
push
lret
xchg
sub
xchg
push
stc
inc
pop
icebp
cltd
neg
je
jl
inc
inc
idivb
jnp
mov
or
sahf
and
movsl
shll
pop
and
jo
insb
popa
in
pop
addr16
cmp
gs
push
pop
and
mov
xchg
loope
push
aaa
sarb
or
incb
mov
inc
fxch
mov
clc
out
xor
sub
neg
dec
ljmp
int
mov
cmp
arpl
jo
iret
or
adc
loop
negb
xor
leave
cmpsb
add
or
cmp
fldl
cmp
mov
inc
sbb
loop
in
jecxz
pop
jmp
xchg
iret
ret
in
scas
popa
mov
test
cmp
xchg
push
dec
in
sahf
pop
jmp
xor
or
add
add
jne
outsl
sahf
mov
in
icebp
into
cmp
and
xchg
cmc
test
jb
adc
push
iret
loopne
add
cmc
cmc
pushf
ror
jmp
cmp
cmc
neg
call
daa
or
pop
icebp
popa
js
repnz
stc
xlat
cmp
mov
sub
jb
ss
pop
andl
add
dec
shll
inc
push
push
and
xor
inc
rclb
shl
lods
pop
mov
push
xchg
mov
daa
mov
push
mov
pop
into
pusha
dec
and
dec
js
jns
and
xchg
adc
adc
jae
adc
orl
test
mov
xchg
in
scas
sub
jmp
or
lcall
fcoml
add
inc
int
cwtl
mov
into
dec
add
jae
repnz
mov
lods
pop
inc
push
or
mov
cmpsl
aas
insl
xchg
jae
shrb
jo
cmp
add
clc
je
aaa
movsl
and
cmpsl
inc
sub
mov
lea
push
bt
movw
mov
xor
mov
jmp
in
mov
ja
in
pop
xchg
icebp
in
xchg
iret
add
pushf
dec
push
dec
dec
std
xor
mov
das
and
jbe
ljmp
xadd
push
mov
xchg
xor
cmp
daa
mov
out
dec
push
stos
repz
inc
test
mov
movsl
pop
xchg
mov
rcrl
cmp
pop
mov
push
cmp
test
xor
icebp
lahf
les
cmp
dec
add
scas
out
pop
fwait
inc
cmp
dec
out
mov
and
je
test
stc
pushf
pusha
sub
stc
pusha
clc
cmp
pushf
push
pushf
lea
ja
clc
cmc
imul
clc
clc
stc
add
pushf
mov
lea
jmp
stc
pop
lret
in
push
mov
stos
push
pushf
and
cmp
push
js
fldenv
sahf
mov
sbb
sub
sbb
pop
fnstenv
xchg
outsl
mov
roll
add
ljmp
push
popa
mov
pop
add
mov
cmc
and
pop
sbb
fstl
xchg
fwait
cltd
pop
out
cmpb
mov
dec
arpl
es
push
sbb
jno
dec
jecxz
adc
and
mov
in
std
subb
sub
mov
cmp
adc
mov
pop
pop
insl
inc
xchg
mov
leave
adc
cmpsl
pop
mov
jbe
inc
fnstsw
inc
push
loopne
dec
aam
xchg
fimuls
out
std
movsb
sahf
out
rcl
push
dec
adc
out
bound
push
xchg
orb
movsb
aam
xchg
loop
cmp
cli
jnp
mov
cmp
jo
mov
lret
xor
jb
je
dec
xchg
xchg
test
ffreep
push
testb
out
dec
cmc
fst
dec
sub
call
jnp
nop
inc
fsubs
inc
push
push
inc
and
adc
repnz
jbe,pn
cmp
xorb
pop
push
movsb
pop
dec
adc
push
mov
push
in
jecxz
movsb
dec
xchg
daa
mov
adc
dec
dec
inc
iret
fsubl
push
push
jno
cld
fistpll
das
pop
ja
push
loop
jge
movsl
mov
xchg
orb
mov
andl
mov
push
out
sbb
hlt
cmc
mov
jae
push
mov
push
call
lods
call
loop
xlat
testb
and
xchg
dec
dec
out
push
loope
hlt
or
aam
mov
pop
inc
out
adc
mov
cmpsb
gs
push
dec
outsb
inc
adc
sbb
push
shrl
int
push
data16
sub
xor
mov
lods
jle
sbb
dec
dec
mov
cld
ja
jno
sbb
mov
and
sub
xor
test
mov
dec
sub
mov
popa
push
pop
clc
jae
dec
shll
movsl
out
jno
add
addr16
mov
push
jmp
sub
setbe
shl
bswap
sub
movsbw
lea
pop
movsbw
push
lea
pushf
mov
pushf
pop
mov
movsbw
jmp
xchg
scas
icebp
test
insl
push
int3
out
jecxz,pn
iret
ds
mov
pop
xchg
hlt
sbb
cmp
ss
sahf
stos
into
gs
incl
fs
and
sarb
es
ja
jns
sub
sti
xor
ret
int3
add
bnd
mov
xchg
ljmp
ds
inc
fdivl
mov
jle
xchg
andb
adc
push
ja
push
popa
movd
repz
aad
movsb
and
sbb
mov
sarl
inc
daa
ret
out
shrl
mov
mov
in
pushf
mov
cmp
jmp
ret
stos
jecxz
cltd
test
xlat
or
and
ljmp
imul
rolb
cmp
pop
xor
jo
ficoml
repnz
dec
out
cmp
dec
jp
faddl
movsb
mov
test
lcall
mov
rolb
sbb
lods
pop
not
xor
fs
pop
and
sub
mov
xchg
sub
call
addr16
lock
in
je
mov
repnz
sbb
cmp
outsl
fsubl
aam
dec
sub
inc
rolb
jbe
daa
and
or
and
in
and
and
add
dec
mov
add
inc
cmp
dec
add
cwtd
jno
pop
xchg
push
or
movsb
inc
jae
pop
cwtl
fs
scas
jge
push
cmp
ss
popa
cmp
xor
vpshld
pop
xor
cld
ret
jb
cmp
adc
loopne
jge
sbb
push
aad
inc
ja
jg
scas
lea
jae
inc
xor
mov
pusha
mov
bts
mov
jmp
outsl
insb
gs
cs
insb
add
pusha
movb
movb
inc
inc
pushf
bt
ror
xchg
call
cmc
bt
stc
repnz
push
lea
jne
pushf
movb
not
movzbw
push
mov
bswap
lea
jmp
lea
ret
adc
mov
cwtl
dec
push
cltd
xchg
push
sar
or
jmp
sahf
mov
das
imul
ret
cmp
pushf
iret
jge
inc
mov
jmp
jnp
ljmp
fs
insl
add
mov
test
aas
jbe
jmp
xor
push
jl
push
xor
movsl
outsb
loop
and
or
insb
shlb
pop
rcl
cs
or
js
sub
repnz
in
dec
jns
add
add
ds
inc
stc
fistpl
into
sahf
mov
ret
stos
add
xchg
jnp
pop
push
and
imul
inc
xchg
das
lea
dec
or
jp
jg
inc
and
inc
jns
mov
sbb
adc
mov
xchg
addr16
clc
lahf
adc
xor
test
pop
jge
pop
push
push
ja
sub
jle
test
pop
pop
pop
push
loope
mov
js
sbb
imul
sbb
lahf
push
out
inc
scas
push
dec
pop
stos
fcomps
add
fs
imul
push
and
inc
stos
xchg
fldenv
xchg
bound
std
aam
sahf
lcall
push
mov
sahf
mov
cmp
clc
test
mov
iret
js
cltd
mov
cmp
jnp
es
sahf
cltd
push
aaa
mov
out
and
pop
pop
xor
pop
cmp
cmc
cmp
pusha
push
pushf
lea
jae
jb
cmc
cmp
pusha
pusha
push
lea
jae
xor
dec
stc
mov
test
mov
setae
rcr
movsbw
mov
clc
cmc
jmp
and
xchg
std
test
or
lds
fcoms
mov
jle
add
dec
xlat
cmpb
aad
scas
sahf
add
adc
pop
pop
xor
mov
mov
mov
mov
jne
jb
mov
lock
cmpsb
aas
or
sub
xchg
dec
jecxz
dec
jno
add
fdivrs
sub
push
mov
cmp
or
sarl
and
jns
or
test
or
adc
mov
pop
mov
and
jmp
movl
push
mov
push
lea
jmp
test
in
pop
cmp
push
push
xor
push
leave
xorl
insb
jnp
mov
ja
aad
inc
enter
mov
xlat
inc
xor
add
sub
dec
cmpl
sbb
out
inc
repz
repz
leave
or
jmp
add
jge
mov
jl
not
or
daa
fsts
or
test
popf
addl
popf
popa
push
cmp
fxtract
add
mov
sbb
sbb
xchg
sbb
imul
rclb
pop
mov
and
pop
sub
hlt
outsl
xchg
outsb
movsl
jecxz
push
sub
repz
sbb
jmp
jg
pop
dec
push
mov
int3
scas
mov
loopne
jne
int
or
cltd
shlb
shlw
pop
icebp
stos
dec
pop
sub
jecxz
xor
mov
sahf
aaa
pop
sub
add
pushf
ret
mov
mov
jmp
sub
jmp
push
incl
mov
fmull
test
test
cltd
outsl
sub
mov
xchg
fstpl
sub
mov
ds
jae
mov
dec
ja
lods
loope
or
out
push
movsb
add
push
mov
aad
dec
xchg
inc
and
pop
in
mov
add
fnstenv
mov
dec
adc
daa
imul
xor
jnp
dec
sbb
sub
sbb
cmp
inc
and
fstpt
push
fwait
or
mov
loop
test
jge
sbb
jnp
mov
lahf
movhps
clc
mov
aaa
fnstenv
push
xor
add
and
cs
gs
fldenv
lods
daa
test
loopne
push
or
in
and
inc
inc
test
adc
adc
ss
push
dec
nop
xchg
xchg
pop
sub
imul
dec
loope
mov
dec
dec
pop
jno
subl
shll
das
or
aaa
push
adc
push
mov
push
dec
std
lretw
dec
lock
insl
ret
call
sti
loope
push
xchg
xchg
cmp
xor
xor
subb
pop
mov
xchg
jle
sub
daa
mov
sti
pushf
cmp
movb
sub
lea
push
pushf
jmp
lea
jae
test
pusha
add
call
mov
in
pop
push
repz
jl
pop
jbe
es
hlt
jmp
bound
fwait
pop
popa
negb
inc
push
inc
cmc
or
decl
xchg
push
inc
xor
popa
test
mov
roll
push
push
and
push
add
xorl
rorb
and
add
call
insl
mov
movw
pushf
pushl
pushl
ret
sub
test
push
dec
mov
xchg
dec
shlb
jl
outsb
cwtl
adc
insb
xchg
ljmp
lds
mov
popa
push
xor
sub
int3
pop
test
cmp
lods
or
lcall
adc
add
push
mov
mov
movsb
or
call
pop
xrelease
lods
or
sbb
pusha
add
ret
add
xchg
ret
stos
pusha
mov
call
lea
jae
or
shld
mov
add
bt
not
mov
mov
cmc
mov
pusha
clc
pushl
sub
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
repnz
pushf
push
push
pusha
lea
jne
call
inc
pop
leave
clc
test
push
jbe
lcall
push
adc
or
sbb
addl
lahf
incl
xchg
sbb
pop
fldt
imul
xor
test
adcb
push
mov
jb
mov
call
mov
gs
sub
adc
inc
stos
mov
fdivs
loope
mov
mov
add
dec
not
xchg
roll
cltd
dec
add
lea
jae
cmp
cmp
test
bt
sub
push
lea
call
push
jmp
movzbl
bswap
pop
lea
pop
bswap
pop
mov
pushf
jmp
mov
lea
pusha
pushf
pushl
call
loop
mov
test
lods
mov
cld
adc
jle
movsl
xchg
dec
negb
pop
cmpsl
pop
sub
mov
addr16
enter
push
aad
int
call
dec
inc
mov
outsb
pop
or
push
clc
pop
fisubl
cmp
cmp
mov
daa
movsb
dec
fadd
leave
jecxz
mov
and
out
dec
es
push
push
lret
out
sbb
sar
pop
or
fs
rcrl
jns
scas
sub
insb
pusha
call
outsl
mov
mov
mov
push
leave
insb
mov
mov
dec
jg
sub
dec
push
ret
mov
addr16
pop
repnz
rolb
les
inc
dec
shl
xchg
aam
mov
das
and
arpl
and
fidivl
movsb
pusha
loop
jmp
in
mov
jge
cld
xchg
cld
addl
sti
ljmp
rorb
xchg
and
adc
pusha
stos
in
and
sbb
push
lret
xchg
cmp
test
push
mov
mov
mov
dec
cmp
daa
es
sbb
in
repz
push
mov
xchg
test
enter
shll
or
mov
in
lds
cmpsl
jb
pop
cld
cmp
hlt
xchg
adc
aaa
rcrl
out
movsbl
mov
cmc
not
sbb
call
stc
xchg
or
xor
rcl
mov
mov
sub
call
outsl
insb
xor
cs
insb
add
je
cmp
add
stc
test
test
push
cmp
pushf
lea
jb
test
push
cmp
call
mov
in
cmp
jmp
or
test
sbb
push
jge
leave
out
sub
fsubs
fwait
push
xor
rcrb
cmpsb
pop
ret
jne
clc
cmp
mov
dec
fistps
push
jno
dec
rcrb
aad
cmp
xor
sbb
dec
push
and
xchg
xchg
out
mov
dec
shlb
scas
pop
pop
rcrb
mov
pop
add
outsl
jmp
pop
push
or
js
int
xchg
xchg
inc
out
cmc
mov
mov
pop
jne
out
sbb
mov
aaa
lea
or
add
push
inc
mov
call
mov
mov
setge
not
mov
movb
pushf
push
call
leave
inc
push
test
icebp
dec
jge
cld
sub
adc
lods
movsl
es
scas
test
or
and
jae
mov
sub
mov
repz
mov
xor
jb
aam
cvtps2pd
stos
mov
push
cmp
xor
pop
pop
imul
aaa
fnstenv
mov
jecxz
ret
sub
push
or
mov
mov
dec
pushl
sub
inc
addb
or
test
rcr
jo
sub
pop
mov
shr
adc
sbb
dec
mov
and
or
and
pop
aas
mov
loope
lds
ss
push
sub
mov
xor
xchg
adc
inc
xor
ljmp
fwait
jb
adc
stc
ja
in
add
adc
rcr
fistpll
sub
cld
je
repz
cmp
or
ljmp
mov
lds
enter
jo
cmp
mov
xor
hlt
mov
in
xor
fdivs
arpl
or
addr16
test
dec
dec
cli
arpl
movsb
pop
push
or
scas
into
in
stos
mov
nop
xor
and
imul
push
scas
mov
ret
cld
test
cmpl
mov
icebp
xchg
negl
jnp
mov
or
xchg
mov
jnp
fisubrs
adcl
adc
add
sub
std
mov
cmp
sbb
in
dec
stos
sbbl
repnz
mov
addr16
mov
mov
pushf
pushf
pushl
ret
pushf
pusha
lea
jne
adc
mov
test
add
cmp
cmp
pushf
movzwl
sar
sbb
sar
mov
push
add
pushf
bt
mov
mov
clc
jmp
pushf
push
lea
ja
jmp
add
push
gs
jb
popa
je
dec
gs
add
pop
std
std
mov
les
dec
add
enter
das
adc
cltd
adc
mov
inc
and
aas
cmp
jge
sbb
loope
dec
dec
mov
pop
lret
loopne
and
test
mov
dec
add
aad
inc
ss
xchg
stos
xchg
jne
aas
and
lds
enter
fiaddl
jne,pt
test
ljmp
inc
jne
cmpsb
std
xchg
mov
jle
fsts
xchg
add
push
mov
inc
xchg
push
cmp
rolb
popa
lock
sbb
inc
movsb
call
jg
test
ficomps
and
fistpl
insl
fidivs
cmpsl
and
pop
and
dec
movsl
push
mov
and
mov
cmp
sbb
int3
mov
add
cld
pop
add
sbb
pop
dec
and
mov
add
inc
mov
dec
mov
subb
xchg
pusha
and
in
ja
sbb
push
and
push
adc
push
mov
cli
shll
pop
mov
shlb
sarb
xor
pop
adc
cmpsb
mov
popf
scas
mov
loop
repz
pop
fistpl
int
mov
cmpl
jmp
dec
out
insb
push
pusha
add
sub
pop
inc
add
push
out
add
or
mov
int3
pop
roll
ja
xor
inc
mov
jns
pop
and
aas
xor
or
sub
aas
les
fcomp
sahf
pop
repz
rol
arpl
lds
mov
fcomps
js
mov
mov
shrl
adc
jno
xor
cmc
or
xchg
int
add
xchg
cmp
in
sub
test
sbb
bound
popa
lock
addr16
cmp
mov
out
nop
pop
movsb
xor
test
cmp
mov
cmc
sbb
rcr
or
test
cmpsl
mov
std
jmp
pop
pop
stos
std
push
mov
mov
fstps
jg
mov
xor
push
xor
mov
lahf
xchg
sub
movsl
movsb
cmc
out
xchg
mov
xlat
mov
out
negb
imul
jecxz
pop
add
and
je
xchg
es
fldenv
cmp
lds
icebp
stos
sbb
bound
outsb
xchg
inc
adc
dec
or
and
sti
out
scas
pop
xor
dec
inc
mov
and
ret
pop
mov
pop
and
sbb
pop
xor
mov
dec
cmpl
nop
clc
sub
movsl
loope
push
dec
mov
pop
fcomps
popa
mov
mov
pushf
lea
jmp
push
movl
call
push
push
stos
movw
pushl
push
lea
jmp
lods
push
xor
push
ror
pusha
xor
cmp
movb
call
stc
cmp
jmp
je
cli
addl
or
cmp
andb
lret
ret
and
lcall
daa
addb
sub
push
xor
inc
clc
clc
and
outsb
xchg
aaa
andb
ss
fdivp
mov
pop
ret
inc
cld
cltd
inc
dec
aas
inc
jne
lahf
sbb
mov
ret
jo
div
movsl
sbb
mov
xchg
std
push
ja
cli
pusha
jno
shl
scas
adcl
jmp
int
jl
incl
mov
jmp
iret
fwait
fwait
xchg
fwait
ror
inc
and
push
test
cmc
cmp
jmp
jle
movsl
addb
xchg
aas
scas
mov
jge
push
adcl
ficoms
pop
jge
sub
jbe
stos
outsb
mov
in
lret
pop
aaa
mov
call
inc
fildll
aam
icebp
lea
sub
popf
imul
or
jp
fcmovne
and
mov
leave
inc
lods
dec
loope
xchg
aaa
pop
in
arpl
test
push
push
adc
mov
iret
and
shrb
out
adc
lea
and
leave
movsl
jo
cmpsb
inc
sub
sub
push
pop
push
dec
shrl
add
push
xor
aad
add
jg
lods
mov
mov
or
xlat
adc
lea
in
sbb
outsl
inc
cmpsl
adc
push
mov
mov
mov
jg
in
dec
ror
test
jmp
and
movsl
inc
xor
in
adcb
std
pop
lods
jns
or
push
mov
sub
rorb
pop
xchg
stc
rol
mov
fcomps
jg
dec
sub
push
out
addr16
xchg
pop
cwtl
adc
push
xchg
test
xchg
sub
pop
adc
cs
cs
and
sbb
or
and
jge
jmp
inc
test
out
into
pushf
and
lret
cmp
and
aaa
xchg
insl
stos
int
or
push
xchg
ret
mov
xchg
cmc
mov
setp
mov
call
aas
fmuls
test
shll
ret
push
fdivs
mov
mov
sbb
and
ds
sarb
xchg
cltd
jb
leave
bound
in
insl
push
pusha
rcrb
or
fiaddl
lcall
jmp
das
push
es
gs
mov
dec
pop
mov
and
or
sbb
roll
cmpsb
dec
stos
xor
adc
sbb
fwait
popl
repz
rclb
ret
fwait
iret
ror
jmp
fwait
mov
jmp
ror
rol
xchg
jecxz
shr
xchg
adc
iret
shl
xchg
filds
jmp
xor
rol
mov
shl
jmp
shl
fistpl
int3
xchg
fisttps
bound
decl
cmpb
push
pushf
pusha
movb
lea
jne
shrd
not
btc
sub
cwtl
mov
cmp
add
cmp
shl
pushf
mov
clc
test
pushf
lea
je
cmp
sub
cmp
push
cmp
pushl
mov
push
call
gs
test
mov
push
enter
jle
xor
sbb
es
push
dec
jae
inc
add
sbb
aad
lcall
sbb
call
rorb
cmc
dec
sbb
lea
gs
pop
or
dec
ja
mov
sub
jae
xlat
loopne
dec
sahf
inc
inc
add
push
mov
stc
outsb
and
cld
lods
pop
and
add
add
cmp
pusha
movzwl
not
bsf
mov
call
cmpb
jmp
movzwl
sub
bsf
mov
test
stc
jmp
adc
mov
popf
push
adc
lcall
lods
cmpsl
fwait
xchg
jns
lods
or
add
adc
mov
repnz
pop
in
sub
bound
testl
fidivs
mov
stc
mov
movsl
cmp
cmpsl
test
std
cltd
cltd
cld
stc
testb
dec
dec
mov
sub
and
fs
mov
das
bound
cmp
gs
test
cmp
fdivl
ljmp
je
insl
js
sti
sbb
movsb
mov
push
iret
sub
push
cld
and
jg
sti
mov
or
xchg
sahf
or
nop
mov
xchg
gs
mov
sbb
or
sub
aas
mov
pop
loopne
jo
inc
mov
in
add
sub
xchg
sub
adc
test
xrelease
cmp
inc
cs
dec
mov
loope
test
fdivrs
pop
popf
pop
sahf
rol
jmp
jmp
mov
push
movl
pusha
push
lea
jmp
clc
xor
inc
add
movsbw
not
pushf
mov
lea
pushf
mov
mov
push
jmp
lea
jae
jmp
add
mov
cmp
sub
push
inc
and
pop
fwait
cwtl
lock
fs
jbe
sbb
jp
adc
divl
es
xchg
xlat
and
movsb
jo
and
jae
je
inc
jg
sbb
and
cld
cwtl
scas
dec
and
dec
push
push
inc
jb
loopne
inc
jne
mov
pop
mov
push
jl
inc
loopne
add
cmp
mov
test
cmp
xchg
cld
pusha
sbb
add
add
add
and
add
add
scas
or
add
add
add
add
add
mov
add
js
and
add
add
and
add
add
add
add
add
add
adc
add
or
add
add
add
mov
add
add
mov
add
add
add
or
add
mov
and
adc
add
xorb
addr16
xor
add
add
push
push
inc
push
xor
cs
insb
add
in
jno
aas
xchg
lods
sbb
dec
xchg
ret
stc
stc
cmp
call
inc
scas
rcrl
shr
call
in
sub
sbb
loopne
cli
push
adc
mov
mov
test
mov
push
ss
jb
and
xchg
addr16
mov
mov
dec
in
rorl
push
mov
lret
jno
std
fiadds
xchg
sub
fidivl
pushf
outsl
cmpsl
outsl
cmp
xchg
mov
fs
mov
pop
dec
enter
inc
sahf
and
mov
out
lret
test
test
ror
add
aas
call
jge
push
or
pop
fidivrl
test
pop
mov
push
inc
jne
dec
jp
shrb
mov
xchg
mov
das
sub
daa
test
fdivp
sub
aas
dec
cld
pop
ret
in
lret
cmp
jae
mov
aam
mov
jns
cmp
or
incl
pop
pop
jle
adc
scas
mov
rcrl
in
dec
dec
sbb
jg
test
or
jb
pop
in
fnstenv
xchg
inc
bound
adc
mov
in
sbb
dec
shlb
dec
ret
popa
or
xchg
enter
lds
mov
rcll
push
push
test
mov
lds
mov
js
arpl
dec
sahf
mov
rcrb
jae
test
xchg
paddw
mov
mov
cmc
pop
cltd
popf
sti
adc
fidivrl
sub
sbb
sub
xor
inc
and
and
gs
sub
sub
arpl
les
cmc
mov
scas
adc
add
ja
xor
pop
mov
fucomp
das
inc
add
out
and
out
adc
aas
sbb
pop
mov
popa
inc
add
ss
mov
cmpsb
and
rclb
test
xchg
shlb
and
js
jb
sti
or
pop
imul
arpl
jle
xchg
jb
out
imul
sbb
mov
int
imul
push
sub
inc
jp,pt
loop
addr16
lahf
movsb
pop
add
inc
xchg
pop
cmp
sbb
inc
negb
jno
sub
dec
pop
shlb
xchg
ret
dec
xchg
loopne
enter
orb
dec
sub
mov
scas
sahf
mov
outsl
insl
fs
xor
cs
insb
add
in
bound
mov
cmp
mov
push
call
pushf
lods
ljmp
repz
push
pusha
mov
push
pop
push
jl
pop
in
sahf
fnstsw
jmp
lret
dec
or
test
and
or
aad
inc
sbb
xchg
pop
loopne
mov
mov
inc
repnz
jnp
vpsrlq
rorl
stos
inc
lock
pushf
movsb
mov
mov
mov
movsl
rorb
sbb
cli
mov
mov
fsubr
and
rcrb
and
xchg
add
sub
ss
vpmacssdqh
decb
imul
sbb
cwtl
mov
aam
dec
dec
sbb
jp
rclb
out
test
jnp
inc
cmc
pop
sbb
cmpsl
test
cmp
xchg
stos
mov
out
adc
inc
xchg
loope
lahf
stos
jb
lock
dec
insl
sbb
cmp
mov
ljmp
adc
in
mov
xchg
and
jae
bt
sub
pusha
lea
call
call
cmp
pushf
call
mov
in
add
ss
add
inc
dec
sub
mov
in
mov
call
test
ljmp
popa
inc
xchg
lahf
push
mov
shrb
xor
daa
xchg
xchg
xchg
stc
mov
pop
popa
mov
aam
ret
cmpsl
cmpsb
jbe
sahf
outsl
xchg
cmpsl
xor
sub
stos
jbe
push
xor
sub
mov
js
icebp
pushf
ret
mov
add
mov
lahf
pusha
add
mov
sarb
mov
push
jns
mov
test
loop
push
rorl
push
add
popa
jbe
dec
jne
push
outsb
jo
gs
jb
dec
gs
fs
pusha
add
cmp
jmp
pop
dec
fstl
sbb
in
stos
dec
dec
daa
repnz
rcrb
sbb
jno
push
mov
test
xor
fldt
into
imul
xchg
addb
ss
movsl
leave
lods
sub
aad
mov
push
sub
xor
or
sbb
rorb
fadds
add
es
mov
mov
clc
int
dec
sbbb
icebp
add
imul
sbbl
popf
mov
mov
cmp
fcomp
popf
pop
dec
loop
gs
fcomps
ljmp
iret
movsb
mov
shll
push
mov
jg
push
xchg
test
cmp
push
fiaddl
xchg
adc
add
mov
sub
fistl
lods
aam
jb
jmp
mov
and
add
xchg
mov
or
inc
outsl
add
xor
dec
or
jbe
aaa
pop
cmpsb
push
cmp
test
xchg
adc
mov
mov
mov
and
div
mov
cltd
mov
jno
pop
lods
and
testl
add
mov
adc
scas
aas
es
es
aas
jbe
testl
push
nop
sahf
and
int3
sub
scas
dec
cmp
loopne
shll
mov
loop
outsb
add
sub
or
adc
mov
adc
push
imul
jecxz
pop
andb
jbe
sub
int
xchg
sub
movsl
cli
mov
gs
jne
movsl
mov
out
mov
nop
out
les
mov
ss
or
xchg
sbb
fists
pop
dec
popa
lcall
add
shlb
or
mov
sbb
test
xchg
add
mov
adc
cmp
mov
mov
mov
in
imul
xchg
movsb
mov
sbb
dec
fmull
pushf
movsb
xchg
lcall
mov
pop
mov
cs
loopne
xor
xor
movsl
cmc
pop
cwtl
jp
std
aas
pushf
or
jne
daa
sbb
and
jae
icebp
pop
fsubrp
out
imul
xchg
adc
mov
cli
loop
push
mov
sbb
or
sar
add
add
fcoms
scas
adc
inc
idivl
je
cmpsl
mov
sub
mov
jge
fisubrs
ljmp
movsb
pop
or
adc
jb
xor
pop
jle
push
loopne
ss
xor
jecxz
mov
adc
loopne
fs
mov
xor
mov
mov
push
test
and
inc
push
dec
and
add
jb
nop
test
jnp
mov
mull
sbb
pop
adc
or
loopne
shll
arpl
mov
mov
call
add
testb
add
pushf
add
icebp
pop
pop
stos
and
out
les
dec
pop
mov
mov
sub
test
scas
and
pop
adc
cmp
fcomps
sub
push
rep
int3
out
and
out
fldl
out
iret
dec
or
mov
popf
mov
add
push
xchg
sarl
and
jo
pushf
jmp
daa
addr16
test
mov
sub
or
ret
inc
sbb
jmp
dec
add
hlt
in
jae
mov
sub
or
shll
add
leave
mov
mov
int3
adc
sbb
les
push
test
xchg
push
xchg
test
fildl
pop
inc
jmp
rcll
sbb
jmp
xchg
ficomps
cmc
dec
push
jl
pop
and
adc
mov
clc
and
add
cmp
iret
mov
inc
push
lahf
pop
addr16
xlat
cltd
lds
xor
aam
inc
shll
or
daa
cmp
clc
dec
cmp
and
popf
stc
ds
pop
aam
fldl
mov
jne
xchg
in
pop
and
push
ljmp
xchg
aas
clc
mov
cmp
in
lret
mov
iret
mov
in
jl
jae,pn
sahf
ds
aad
data16
inc
mov
adc
arpl
or
lds
lock
push
adc
push
les
fcoms
xor
sbb
mov
in
jg
or
ret
stos
rol
lock
std
stos
lds
mov
pop
inc
jno
xor
das
xor
lea
pusha
imul
mov
lock
loop
addr16
ds
test
cmp
shll
pop
ficoms
sbb
mulb
pop
out
cs
test
add
add
pusha
test
cmpb
jmp
add
iret
rclb
ror
rol
xchg
jecxz
shr
xchg
adc
iret
shl
xchg
filds
jmp
xor
rol
mov
shl
jmp
shl
fistpl
int3
xchg
mov
divb
movl
pushf
push
mov
lea
js
push
pushf
push
lea
jmp
add
clc
mov
test
test
call
cmpsl
push
popf
test
into
out
jl
imul
adc
nop
dec
push
andl
and
lods
rcll
pop
pop
iret
lds
stc
xor
mov
fcmove
sti
fisttps
mov
dec
cmpsb
scas
loop
xchg
sahf
push
pushf
lock
sbb
data16
test
adc
je
push
fcmovbe
xor
sbb
je
xor
jae
jbe
sub
push
xchg
jp
leave
inc
inc
mov
insb
mov
int3
mov
rolb
popa
movsl
fdivl
and
test
insb
mov
stc
xchg
xor
xchg
cmc
jne
fwait
sbb
cwtl
jbe
adc
in
insl
or
mov
mov
rorl
lahf
push
or
adc
cmc
pop
dec
lods
sub
in
sub
xchg
xchg
out
into
pop
adc
xchg
mov
scas
and
mov
out
inc
ljmp
xchg
and
popl
pop
ds
cmpsl
push
pop
jmp
sub
clc
lcall
nop
repz
sbb
cmp
push
imul
jb
cmp
sub
push
push
ret
js
dec
push
xchg
mov
adc
xor
sub
aad
call
ljmp
mov
bound
mov
mov
repz
push
das
push
mov
movsb
in
scas
jmp
lea
jl
lcall
mov
push
test
in
or
xchg
out
fwait
int3
jl
mov
hlt
mov
sub
hlt
repnz
mov
lahf
push
sbb
out
cmp
or
sbb
aaa
push
fadd
fs
mov
sbb
cwtl
ret
or
insb
sub
mov
dec
push
and
test
call
shlb
jne
xchg
mov
or
xchg
push
fdecstp
and
inc
dec
lods
xor
pop
adc
inc
add
mov
es
lahf
cmp
int
movsl
int3
sbb
outsb
dec
iret
or
adc
scas
les
std
jmp
scas
cmp
cli
jmp
insb
sub
sub
xor
xor
xchg
ja
jmp
dec
mov
pop
ljmp
test
fwait
cmp
sub
sbb
insb
xor
insl
pop
aaa
jge
cmp
xchg
jae
filds
dec
imulb
or
add
xor
jbe
pushf
aas
xorb
jecxz
jg
test
ret
lods
push
adc
loope
fwait
pusha
shr
lret
jns
stos
mov
scas
aas
dec
lods
fwait
and
or
sub
pushf
stos
dec
mov
into
lret
pop
lea
jne
mov
clc
adc
dec
mov
pusha
clc
sub
push
push
lea
jmp
jge
mov
test
stos
outsl
aam
popa
jbe
nop
fcoms
stos
or
adc
mov
sbb
sub
ljmp
in
mov
cwtl
sub
daa
ja
and
pop
mov
das
outsl
lock
dec
stc
outsb
pushf
sbb
sahf
cld
inc
push
jecxz
pop
stos
popf
arpl
or
gs
test
fwait
sub
sub
fimull
sbb
fstps
push
popf
aas
xchg
adc
or
push
push
jo
dec
dec
push
push
dec
dec
dec
cs
push
push
add
in
push
imul
lret
sarb
gs
mov
into
icebp
adc
fsubs
add
and
divb
push
mov
es
ret
dec
sbb
pop
jl
jb
dec
add
shlb
nop
stos
xchg
push
movsl
adc
subl
mov
xchg
jne
push
mov
xchg
dec
aad
decl
out
outsl
push
inc
and
cltd
test
mov
push
mov
or
mov
mov
stc
loope
aaa
push
dec
sbb
loopne
and
mov
insl
fwait
sub
imul
loope
sbbb
inc
negl
lcall
cld
xor
adc
dec
outsb
and
xor
mov
mov
pusha
or
mov
sub
jle
mov
and
loopne
sub
adc
add
aas
pop
mov
lea
jne
dec
sub
rcr
bswap
mov
xor
lea
bt
add
sub
pushf
shld
lea
test
sub
cmc
pushl
popl
cmc
cmp
pushf
jmp
mov
in
gs
push
popf
in
divl
ret
sbb
xor
rorl
add
das
xor
fdivrs
push
out
out
ljmp
fidivl
add
mov
movsb
cli
rorl
dec
pop
push
bound
pop
sub
mov
icebp
mov
and
lcall
loopne
nop
lock
in
mov
sub
dec
mov
arpl
add
push
xor
xor
nop
scas
add
imul
inc
inc
and
cmp
mov
out
dec
cmpsl
data16
or
andb
cmpsb
xlat
mov
mov
movsl
dec
mov
and
sarl
mov
adc
cmpsl
xor
int
xor
in
mov
push
xchg
fcompl
in
rcr
jae
add
ret
mov
xor
dec
mov
xor
fstpt
fwait
cmc
sti
xchg
stos
mov
in
cmp
xlat
xchg
add
fwait
test
and
cmp
sbb
fldt
xchg
push
loopne
jo
fdivrp
iret
push
mov
int
in
int
adc
cmp
repz
aaa
add
and
mov
mov
rolb
int
inc
lods
and
push
mov
adc
and
jge
push
pop
jge
add
lret
push
jp
lods
dec
pusha
push
in
mov
mov
dec
lahf
adc
iret
jecxz
xchg
in
adc
push
xor
mov
push
mov
int
inc
mov
cs
pop
inc
inc
cmpsl
cvttps2pi
imul
sbb
or
jo
xchg
test
dec
xchg
sbb
adc
cmp
xor
insw
xchg
pusha
add
fwait
out
iret
daa
cmpsb
jo
xor
sbb
add
roll
xchg
ficompl
jg
sbb
inc
mov
mov
inc
rolb
ljmp
out
mov
aam
lea
clc
bt
ror
pushf
inc
bt
call
rclb
test
add
and
mov
mov
iret
and
dec
cmpsl
loope
int
xchg
loopne
xor
inc
aaa
mov
mov
into
adc
mov
pusha
scas
enter
adc
dec
pop
lea
mov
xorl
lods
lods
xor
ret
xchg
cmp
stos
mov
cld
shrb
dec
out
add
imul
loope
xchg
lret
pop
movsl
test
ret
add
outsl
xchg
test
pop
pop
cld
loope
mov
pop
lds
stos
jle
add
ja
inc
stos
xor
test
nop
fwait
je
adc
lods
mov
fs
negl
lret
jb
nop
mov
out
jg
nop
outsb
add
cmpsb
hlt
cmp
xlat
xor
adc
xor
adc
jo
mov
pop
lcall
shl
neg
setb
mov
push
jmp
test
cmp
cmp
xor
cmc
clc
cmc
stc
repnz
jmp
das
mov
push
push
addl
mov
decl
aas
lahf
mov
leave
jmp
lcall
loop
xor
add
shlb
pop
mov
frstor
aas
inc
test
push
icebp
jp
test
add
mov
push
mov
adc
cmpsb
sarb
fadds
cs
pop
mov
push
or
inc
fldcw
les
out
mov
mov
enter
xor
sar
call
lea
ja
cmc
pushf
push
push
imul
movb
bt
movb
add
pusha
lea
jmp
insl
xchg
movsb
test
scas
sub
push
iret
pop
push
inc
scas
fidivrs
and
lahf
daa
int
insl
movd
inc
incl
adc
add
lock
repz
lcall
dec
inc
push
jns
or
lods
jne
xor
addl
xor
leave
or
jp
aas
or
idivl
mov
pop
cmp
push
xor
inc
outsb
cmp
sti
xlat
fs
push
inc
mov
test
mov
out
add
cmpsl
test
shl
nop
xchg
fbstp
out
and
lods
inc
jl
mov
lcall
xor
mov
cmc
movsb
mov
adc
fmuls
pop
jb
mov
or
push
fwait
jb
inc
cmpsb
mov
xchg
sub
pop
mov
stc
out
ds
stc
sbb
movsb
loope
or
arpl
orb
orb
adc
mov
xor
sti
fcomip
xchg
jno
inc
addb
aaa
das
mov
xchg
dec
jbe
mov
add
frstor
and
test
inc
outsl
push
or
push
in
bound
pusha
jns
fimull
jb
gs
pop
sub
repnz
mov
cwtl
mov
inc
not
cmpsb
inc
jae
fisttpll
cmp
jmp
decl
repz
aaa
inc
mov
ja
jg
mov
test
fnsetpm(287
or
push
pop
mov
outsl
push
add
test
and
sub
inc
pop
rorb
jbe
add
daa
cwtl
imul
pop
stos
xchg
scas
loope
mov
xor
push
and
jo
mov
aad
mov
mov
mov
and
testl
dec
int
test
adc
cmp
mov
loopne
sahf
pop
int
rcll
mov
lock
imul
loopne
jp
pusha
bound
inc
and
or
jle
stc
jmp
dec
push
lds
lret
repnz
inc
push
pushf
jno
je
pop
iret
imul
movsb
sbb
xchg
scas
shl
test
out
rcr
xchg
jnp
inc
ss
mov
cld
add
xchg
inc
pop
pop
addb
mov
movsb
adc
mov
lds
jp
sub
das
or
mov
addr16
ja
jbe
dec
cltd
mov
jp
pop
sbb
pop
out
cmpb
push
pop
xor
mov
push
mov
and
sub
sti
add
inc
gs
jns
je
insl
dec
gs
imul
mov
test
cli
addr16
stc
btc
pop
mov
mov
test
cmp
sub
test
pushl
cmc
cmp
pushf
pushf
push
push
lea
ja
ror
test
bt
sar
sub
bsr
rol
cmp
sets
add
add
xor
mov
shl
pushf
clc
mov
cmc
test
repnz
movb
pushl
movw
jmp
xchg
andl
aas
push
insl
xchg
pop
sbbl
dec
aam
push
out
leave
int
mov
cmpsb
jne
sub
sub
addr16
xor
test
push
xor
rolb
xor
lea
movsl
xchg
ret
pop
in
adc
out
js
dec
nop
fisttps
imul
leave
scas
push
or
test
cmpsl
inc
imul
pop
aaa
inc
push
mov
out
pop
jmp
in
or
jnp
pushf
mov
cld
lret
in
stos
les
dec
cmp
in
andb
iret
sub
in
mov
jns
fisubl
inc
sbb
pop
rolb
movsb
enter
adc
xchg
push
cmp
cmp
js
pusha
insl
sbb
in
push
nop
fistpl
cmp
pop
ljmp
mov
aas
sub
popa
sahf
pushf
das
ja
mov
and
or
mov
and
int
push
out
ret
sub
mov
cltd
bt
and
fdivrp
adc
lahf
js
pop
call
cmp
or
adc
push
fnstcw
jb
outsl
arpl
cmp
cmp
jne
inc
xchg
jle,pt
hlt
lret
in
pop
call
mov
popa
ja
push
dec
daa
faddp
cmpsl
sbb
insb
nop
bound
mov
dec
pop
test
lock
pop
call
lret
popa
ja
mov
outsb
cmp
pop
jb
pop
sbb
shlb
push
mov
mov
pusha
xor
popf
lret
cmp
imull
dec
outsl
sub
fdivs
ror
jg
clc
inc
mov
loop
out
cltd
push
inc
mov
mov
int3
rol
mov
push
rorb
xchg
in
aas
xchg
xchg
pop
mov
add
inc
lods
loopne
stos
adc
add
push
mov
stc
sbb
or
setg
inc
add
shl
shr
rcr
mov
pushf
call
call
movl
jmp
fwait
inc
mov
push
mov
lds
adc
xchg
sub
lods
movsl
scas
cmpsl
dec
mov
and
mov
cli
pop
aaa
hlt
outsb
into
inc
popa
pop
ret
fs
jbe
ljmp
jmp
cmp
pop
dec
mov
popf
xor
movsb
js
imul
cs
fwait
call
leave
pop
insl
dec
or
daa
cli
test
mov
mov
negb
add
mov
mov
test
push
add
mov
les
sub
add
cwtl
push
xchg
or
ja
adc
subb
fdiv
gs
inc
aad
cmc
add
stos
pop
ret
xor
gs
and
loop
add
and
lea
xor
dec
mov
jge
xchg
sub
aaa
jmp
into
or
iret
mov
rcll
hlt
mov
subl
sub
push
push
sub
jo
jl
repz
fmull
pop
jp
xor
cmpsb
push
je
fdivs
push
shlb
push
sbb
mov
arpl
xchg
cmc
mov
clc
clc
bt
test
lea
jno
je
pusha
call
add
call
pushf
sub
clc
cmc
pusha
clc
pushl
popl
pushf
pushf
movw
cmp
jmp
sahf
adc
lods
test
shlb
xor
fidivrl
cmpsb
inc
mov
cmp
xorb
stos
mov
data16
sub
jp
bound
cmp
hlt
int3
pop
jne
push
inc
fisubrl
lock
cltd
xlat
ja
push
dec
scas
or
sbb
jno
fbstp
pop
mov
dec
out
dec
fs
repz
cmp
mov
sbb
adc
lods
test
ljmp
imul
jns
int3
cwtl
in
hlt
adc
rorb
inc
push
test
mov
pop
xchg
xchg
push
lds
dec
pop
push
test
aaa
pop
ret
pop
cmp
out
ret
inc
out
pusha
mov
aam
cmp
mov
dec
insl
rorb
mov
adc
adc
jbe
mov
lahf
lea
jl
in
xor
push
fsubrs
dec
movsb
mov
shll
int3
es
es
jno
inc
test
jo
fistpll
adc
dec
pop
mov
mov
in
pop
cmp
jne
dec
mov
xchg
and
xchg
popa
sti
aam
mov
jb
jmp
outsb
gs
push
cwtl
dec
iret
popa
cli
cwtl
mov
inc
pusha
fsts
mov
adc
fbstp
add
push
cmp
je
sbb
repnz
in
xlat
adc
push
or
repz
ja
lods
loope
or
roll
scas
loopne
jnp
fidivl
fcmove
popf
addr16
lret
push
xor
adc
shrb
cmc
and
popf
jae
jmp
stc
cmc
cmc
add
push
pushf
pushl
pushl
lea
jmp
push
in
inc
out
loope
push
inc
popf
mov
movsl
adc
sub
scas
popf
rolb
sbb
sub
das
inc
enter
ret
add
cmp
xor
mov
sbb
lds
dec
sub
insl
jle
outsb
pop
lods
ss
adc
sub
leave
jecxz
dec
cwtl
cmpsl
rclb
lret
push
xchg
je
notl
lods
rcrb
call
sbb
mov
xchg
aaa
mov
mov
out
andps
out
stos
dec
cmp
add
push
push
in
icebp
or
or
fiadds
jmp
sbb
scas
test
mov
aam
sbb
out
jle
adc
stos
inc
pop
dec
or
push
std
test
sub
int
mov
mov
add
dec
ss
jb
sub
jecxz
in
or
negb
sbb
aas
mov
adc
dec
iret
testw
pop
pop
dec
mov
test
ja
push
popa
push
xor
jno
ret
test
jmp
and
imul
in
divb
or
jp
ja
add
push
not
xor
pop
xchg
cmp
fcomi
cwtl
sti
inc
int
fsubl
cli
adc
lock
and
mov
pop
cld
aad
add
pop
dec
lods
pop
cli
xchg
loope
jmp
adc
int3
mov
ljmp
push
test
mov
cli
sbb
jno
cmpsl
lret
ss
adc
add
cmc
test
jmp
incl
test
push
cli
ret
addr16
loope
jns
sub
xchg
pop
or
cmp
pop
shlb
push
negb
mov
cmp
jp
mov
fcomps
jg
mov
pusha
fstpt
xchg
mov
push
fsubl
or
scas
rclb
mov
sbbl
sub
mov
addb
pop
jle
xor
cmp
lds
inc
sub
sti
xchg
out
orb
xor
adc
or
rcll
mov
cs
in
cli
pop
pop
aas
fbstp
and
jp
xorb
in
jbe
sbb
sub
jns
js
xchg
sahf
cmp
repz
and
mov
push
xor
dec
xchg
fildl
dec
push
shll
test
xchg
xor
pop
xchg
aaa
das
push
out
gs
mov
ja
idivl
pop
add
xchg
test
lods
rcll
movsl
cmp
sbb
xchg
mov
jno
ljmp
mov
mov
je
cmp
out
int
lods
xchg
adc
testb
in
or
jg,pt
shlb
aad
mov
jbe
fimull
cmp
je
ficomps
in
lret
scas
cmp
sbb
or
lods
loopne
fcomp
adc
scas
sarb
ljmp
inc
push
jae
popf
iret
add
jo
rorb
in
sbb
xchg
add
loope
and
or
mov
rolb
or
call
daa
inc
shrl
adc
aad
push
mov
add
fidivl
xchg
das
aam
repnz
cmp
mov
cltd
inc
jg
out
inc
sti
inc
iret
add
lods
dec
and
into
dec
dec
mov
es
das
mov
outsb
rclb
stos
mov
icebp
pop
ja
mov
jmp
out
jns
and
shll
sub
xchg
inc
push
mov
inc
sub
cmc
incl
loop
test
jge
jo
test
jae
sub
cmp
movsl
sub
add
or
inc
fisttps
xlat
mov
test
xorl
dec
mov
pop
mov
aaa
adcb
cmpsl
sub
or
mov
and
ljmp
xchg
insl
test
nop
cwtl
xor
push
mov
out
cs
call
shlb
stos
test
jmp
inc
test
and
xchg
pop
mov
add
push
jge
shlb
cld
lret
fcmovbe
movsl
or
dec
mov
rcr
pop
cli
xchg
pop
add
setp
jnp
pop
fdivr
adc
imul
xor
nop
das
shrl
push
jns
add
adc
and
lret
dec
xchg
push
pop
xor
add
pop
test
mov
xchg
pushf
rcrb
add
inc
movsbw
push
mov
pushf
lea
ja
pushf
pusha
pushf
movb
lea
jb
clc
stc
jmp
inc
in
cmpsb
stos
test
cmp
clc
cmpsl
xchg
xor
inc
enter
cmp
push
jp
xor
aam
ss
in
js
xchg
sbb
inc
mov
mov
dec
std
dec
sahf
dec
mov
xchg
ret
test
leave
cltd
es
fwait
or
leave
mov
das
fnstenv
xchg
int
loopne
popa
sub
cmp
repz
push
sub
je
push
sarl
pusha
xchg
jge
dec
mov
dec
popf
push
scas
shl
jle
push
xor
test
lea
jae
shl
shl
sbb
clc
mov
setns
cmc
pusha
mov
bsf
pop
btc
mov
test
cmc
pushl
xor
push
cmc
repnz
jmp
sub
leave
mov
in
push
je
repnz
mov
cmp
or
pushf
lahf
jno
into
jg
push
mov
popf
rol
mov
test
cmp
sbb
pop
fistps
lret
jp
xchg
mov
rcrl
push
push
test
mov
fmulp
daa
mov
cmpsl
aaa
jl
out
adc
pop
dec
inc
ret
scas
fisttpll
ss
nop
aad
pop
push
nop
arpl
add
or
mov
mov
in
and
mov
xor
popf
xchg
addb
out
rcr
mov
fcmovu
mov
ds
push
mov
or
fsubrs
push
sub
mov
xor
add
aam
cmpsl
mov
sbb
lock
mov
ljmp
dec
jmp
mov
or
push
ljmp
in
and
sub
inc
test
movb
pushf
mov
lea
je
pusha
bt
add
test
cmp
bt
mov
cmp
movw
lea
jb
bt
clc
cmp
push
pusha
lea
jae
shr
mov
push
mov
sar
sub
shr
mov
bt
cmp
xor
stc
jmp
cmpb
push
pushl
lea
jg
push
lea
jne
ror
sbb
mov
js
cmp
add
test
call
cmp
mov
stc
cmp
stc
and
call
adc
pusha
mov
pushf
lea
jmp
lret
mov
in
push
daa
ss
jo
popf
mov
cmp
nop
pop
jmp
adc
bound
mov
stos
mov
push
and
cwtl
imul
rdtsc
stos
test
jb
and
mov
jnp
into
leave
jns
jbe
pop
fstpl
xchg
mov
leavew
rorl
aaa
mov
les
imul
lock
cmp
adc
and
xor
imul
pop
adc
enter
test
loopne
or
imul
scas
leave
cmpsb
sarl
jo
lret
push
xor
xor
fs
insb
add
cmp
lea
call
jmp
add
mov
in
dec
stc
mov
and
xchg
aad
hlt
jo
shrl
es
xor
lcall
jle
jmp
nop
push
dec
jae
bound
in
push
imul
test
xchg
out
lret
leave
cmp
jae
inc
pop
lods
mov
mov
inc
push
and
push
dec
xor
pop
jmp
dec
mov
mov
push
rcrl
jge
les
into
adc
lock
adc
xchg
mov
xor
and
movsb
not
bswap
pushf
mov
push
lea
jmp
or
mov
in
loop
ja
push
repnz
add
in
sar
adc
sub
loope
cmc
or
sub
ja
iret
out
dec
call
jae
gs
icebp
push
pop
inc
repz
gs
sbb
inc
lahf
sbb
nop
shll
popf
pop
push
cwtl
in
sub
test
jg
or
sub
popf
ljmp
leave
adc
cmc
inc
dec
out
jo
dec
movsl
lret
add
cmp
jo
xchg
push
fs
shl
stc
movzbw
mov
jmp
jmp
divl
movsb
mov
in
cmp
imul
and
xor
inc
test
jl
dec
notl
out
das
aad
sbb
cmp
nop
inc
ror
aas
push
cmp
test
pop
inc
cld
aas
addr16
sbb
xor
dec
jne
lods
mov
enter
dec
icebp
sbb
lcall
je
aas
sub
cmp
or
pushf
cwtl
repnz
push
out
xor
bound
cmpsl
aam
imul
mov
xchg
fidivl
dec
movw
lea
call
push
lea
jae
push
mov
not
sets
movb
mov
inc
push
jmp
adc
call
jecxz
push
mov
in
cltd
addr16
fdiv
sti
std
fistpll
inc
in
std
pusha
out
stos
sub
popa
xchg
mov
mov
sbb
addr16
inc
and
iret
sbb
mov
je
cld
movsb
sarb
jo
mov
clc
mov
xor
movsb
dec
xlat
cli
add
orb
stos
in
jns
cli
das
addb
test
and
and
push
jbe
cltd
lcall
into
mov
in
ret
push
mov
es
and
inc
es
push
dec
lret
sbb
cmp
pusha
call
lock
test
outsl
ss
or
pop
mov
movsl
cmp
imul
test
push
sbb
cmp
adc
and
push
and
pop
pushf
shr
cmp
push
adc
lahf
pop
aad
dec
cmp
lds
shlb
stos
dec
and
lods
cmp
gs
xor
cli
dec
sbb
mov
push
and
adc
stos
mov
das
mov
movb
call
repnz
lahf
call
ja
out
lock
push
cs
jle
loop
dec
loope
movsb
mov
mov
aad
out
in
mov
xchg
push
inc
dec
int
sbb
push
mov
mov
aad
sub
outsl
mov
adc
xchg
add
out
push
cmp
out
call
mov
adc
pop
cwtl
ret
xchg
cmc
jns
sbb
les
pop
bound
sbb
mov
xor
mov
in
arpl
mov
push
pop
test
aaa
jge
push
cmp
mov
loope
scas
shrl
cmp
aad
aaa
push
xor
test
jo
mov
jle
sub
xchg
and
xchg
push
or
cmp
xchg
push
mov
inc
lock
iret
sub
movsb
sti
add
orl
mov
mov
mov
dec
data16
jo
pop
mov
sbb
rcr
mov
mov
jle
push
rcrb
popa
and
push
xlat
adc
das
imul
mov
or
sarl
das
dec
sub
or
add
loopne
xor
sbb
fisttpll
scas
insb
ret
dec
push
in
or
cli
xchg
flds
mov
insl
nop
jo
inc
loope
adc
arpl
xchg
cwtl
pop
add
pop
jmp
lcall
add
lods
data16
dec
cmp
cld
gs
mov
fwait
or
mov
mov
shll
movsl
lret
imul
cmp
cld
scas
outsb
dec
scas
xlat
and
out
ja
xchg
aaa
push
fdivrp
mov
sub
ret
jp
sbb
cmpsb
push
add
or
jmp
ret
mov
mov
pop
mov
or
popa
push
or
dec
xor
imul
test
out
fidivl
sub
push
or
mov
mov
movsb
imul
push
push
xchg
test
add
stos
push
movsb
pop
je
ret
add
xchg
stos
test
fcoms
jo
les
mov
sbb
std
ljmp
loopne
arpl
xchg
jnp
mov
xchg
jge
jae
xchg
js
xor
adc
cmp
xchg
lea
jne
shl
adc
xor
dec
mov
call
shld
mov
movl
stc
pusha
add
cmc
jmp
das
add
push
sub
push
clc
mov
xchg
repnz
jbe
testl
fnstcw
cmp
outsl
adc
and
mov
frstor
test
clc
fstl
mov
and
lahf
rcll
ja
add
pop
xor
mov
in
xchg
pusha
lcall
push
mov
xchg
loope
push
xor
adc
out
lds
mov
subl
xchg
mov
out
inc
cmp
pop
aam
sar
popf
out
ret
lock
neg
inc
lea
jae
clc
cmp
jmp
clc
cmpb
call
push
sbbl
pop
loope
addr16
sbbl
loope
addr16
adc
cld
js
fs
add
jmp
add
cmpl
leave
pushf
pusha
pushl
push
lea
jmp
jmp
xchg
mov
loope
pop
cli
cmp
in
xchg
or
iret
sub
movsb
pusha
loope
loopnew
inc
push
loopne
fcomp
and
jnp
jg
mov
movsb
xchg
and
les
call
dec
sub
jno
and
dec
inc
and
mov
mov
xchg
xchg
adc
pusha
sarl
xchg
insb
loopne
push
lods
cmp
mov
loopne
push
pop
xor
pop
mov
fimull
in
jbe
stos
cli
jns
push
mov
aad
mov
lea
in
subb
adc
out
sub
aad
in
into
mov
jne
fstpt
push
xchg
jge
cmp
adc
hlt
adc
ja
add
aad
jno
lret
and
cwtl
in
dec
jno
mov
das
pushf
mov
fcomi
push
fxam
test
xor
insb
ljmp
aaa
pop
add
lods
and
hlt
mov
and
or
mov
pop
repnz
mov
add
insb
lds
add
inc
push
loop
add
add
add
fldl
sbb
jb
in
loope
into
or
add
jns
mov
movsl
daa
push
pop
jo
mov
popf
fcompl
xchg
mov
cmp
or
add
mov
rorb
or
mov
insl
imul
mov
test
xchg
jne
lods
movsl
jle
enter
push
les
sbb
mov
mov
in
loope
insl
loope
and
cmovns
xlat
mov
jb
mov
aam
sbb
out
cmc
mull
rorl
and
jmp
sub
mov
cli
stos
iret
insl
les
jb
ds
xchg
pop
pusha
push
jae
test
test
cltd
mov
test
vpaddd
aas
push
nop
mov
and
mov
jne
das
jle
inc
inc
cmpsb
mov
xor
cmp
xor
mov
dec
dec
loopne
pusha
jns
icebp
xchg
mov
leave
test
or
sub
sbbb
loop
cli
cmp
xor
loopne
xchg
adc
fs
xchg
xor
stos
ds
mov
test
mov
in
mov
cmp
shrl
xor
or
jp
mov
test
mov
nop
ret
cld
flds
les
sarb
jb
mov
inc
js
sbb
cmp
stos
push
iret
pop
aam
adc
cmpsb
jno
or
repnz
cmpsl
xor
mov
xor
or
cmp
or
sub
xor
in
xlat
inc
inc
and
loope
add
adc
je
or
addps
pusha
jno
xchg
ds
push
and
ret
out
mov
or
daa
pop
xor
ss
jmp
sbb
xor
enter
mov
aad
rorb
fnsave
addl
mov
cld
std
scas
lret
adc
shr
jmp
dec
cmp
dec
rcrl
and
inc
insb
out
dec
mov
call
mov
cmp
push
stos
in
stc
je
andl
adc
dec
cld
ret
push
cmp
cmp
sbb
push
dec
adc
scas
dec
sub
lahf
je
or
daa
orl
outsb
inc
sar
lret
pop
icebp
push
fmuls
inc
cmp
call
sahf
roll
test
fidivrl
pop
cmp
inc
iret
lahf
mov
lds
mov
sbb
loopne
jmp
movsb
stos
in
cmc
testb
push
in
in
or
adc
addr16
addr16
inc
xchg
sbb
test
add
movsl
cmc
arpl
mov
jnp
cwtl
push
xor
lahf
pop
cmp
inc
popa
lahf
cmp
adc
aaa
loopne
mov
xchg
cmp
mov
add
cld
lret
pushf
and
scas
repnz
icebp
mov
ds
fs
pushf
pushf
insb
incl
add
cli
outsb
cmp
mov
add
sub
push
cltd
out
mov
cmp
and
add
cmpsl
mov
push
inc
cmpsl
adc
xchg
in
sub
sub
push
test
aad
adc
or
fsubs
rol
inc
and
cmp
popa
add
sbb
add
mov
mov
pushf
pushl
lea
call
push
movb
adc
pusha
pushf
lea
jae
push
call
jecxz
pop
mov
pop
inc
xchg
test
or
fidivl
inc
jp
and
ljmp
aam
pop
dec
lret
call
inc
mov
leave
in
into
dec
arpl
out
or
stc
or
push
pop
or
ds
xchg
xor
pop
push
push
loop
loop
imul
dec
ja
into
mov
cmp
adc
jl
mov
pop
inc
out
mov
stos
int3
setno
cmpsb
and
pop
sbb
push
or
mov
daa
pusha
movb
lea
je
pushf
test
add
mov
cmc
pusha
clc
cmp
pusha
jmp
jnp
inc
inc
test
and
insb
out
cmc
cmp
negl
jle
mov
outsl
mov
ret
out
pop
js
cld
adc
pop
xchg
push
call
out
cltd
cmp
ret
jl
lret
outsl
and
inc
movsb
mov
cmp
dec
jno
in
in
cs
or
dec
dec
sbb
divl
in
into
scas
mov
inc
mov
and
adc
pop
ret
outsb
ds
inc
jmp
call
inc
jmp
divb
loope
jp
leave
mov
and
push
loopne
gs
or
dec
clc
mov
mov
ss
and
xor
pop
mov
nop
pop
hlt
repz
push
call
imul
ds
mov
or
imul
mov
out
loopne
int3
lods
pop
xchg
sub
inc
test
jnp
neg
xchg
in
mov
mov
cmp
mov
imul
lods
sub
std
mov
les
xor
sbb
fcompl
jecxz
pop
pop
pop
rcl
rol
push
inc
add
mov
test
sub
mov
cmp
push
push
incb
mov
fidivs
divl
js
sbb
push
scas
sub
cmc
jmp
push
mov
xchg
mov
jg
sub
daa
arpl
out
cli
arpl
outsb
and
pop
jmp
jbe
popl
xchg
xchg
test
inc
popa
xor
mov
sbb
and
push
call
mov
cmpsl
xchg
enter
outsb
subb
jns
mov
cmpsl
push
push
dec
sub
jnp
adc
popa
cs
notb
and
daa
es
xchg
sbbl
bnd
sub
fidivs
int3
repz
pop
dec
sbb
or
mov
hlt
cmpl
xor
jg
mov
or
xor
lcall
inc
test
movsb
and
push
pop
mov
dec
lret
sbb
add
jmp
and
bound
xchg
inc
jg
push
inc
dec
mov
jnp
test
pop
arpl
fstps
ret
jnp
idiv
ds
jp
inc
mov
and
push
mov
gs
les
xchg
sub
mov
mov
into
mov
xchg
xor
pusha
sub
mov
or
xchg
sub
push
jmp
add
inc
test
inc
cmpsl
sub
adc
mov
push
lahf
xchg
pusha
xchg
lahf
pop
mov
and
dec
fs
imul
cmp
inc
xlat
xchg
inc
lret
test
lret
dec
inc
jl
add
movsb
pop
sbb
loop
push
outsb
mov
fdivs
xor
mov
repz
push
inc
in
hlt
pop
das
mov
mov
xlat
lock
cmp
repnz
xchg
imull
lcall
mov
push
mov
inc
lret
xor
repz
test
enter
and
adc
hlt
fsubrp
loop
fstpt
xchg
inc
push
jb
bound
cltd
popf
pop
dec
pop
mov
cmc
clc
repnz
call
xor
popl
in
xchg
or
adc
fnstcw
xor
xchg
cmp
out
orb
aad
inc
jne
inc
mov
push
shll
add
leave
pusha
dec
push
mov
clc
gs
hlt
sbb
div
scas
adc
cmp
andb
aaa
xlat
push
mov
popf
pop
mov
inc
sub
cmp
fsubl
mov
mov
mov
movsl
xor
in
lock
ret
pop
push
jp
push
cmp
cmpsl
adc
push
rolb
adc
sti
lds
fcompl
push
idivb
int
or
sub
jbe
dec
pop
rcl
sbb
loope
sbb
cltd
test
mov
inc
cmpsb
sti
lahf
add
jle
xchg
dec
mov
imul
fidivs
int3
pand
popf
stos
cmc
flds
dec
fs
icebp
daa
cld
jne
jne
roll
hlt
leave
addr16
inc
or
lret
es
mov
mov
mov
cmp
inc
sti
mov
std
inc
test
bound
enter
sub
fildll
adc
jl
jge
sub
aaa
add
popf
mov
daa
jl
inc
mov
adc
stos
inc
sbb
repz
mov
aad
jns
not
setbe
pushfw
popw
pusha
mov
jmp
pop
cs
test
cli
pop
jb
leave
sbb
cld
mov
push
cmp
adc
pop
sub
fcompl
jae
mov
mov
in
aad
push
xchg
arpl
in
push
sti
rcr
popa
cmp
add
mov
push
jg
movsb
mov
movsl
push
jo
pop
or
sub
pop
sub
in
inc
cli
popf
scas
dec
pusha
loope
add
push
aaa
or
jb
mov
mov
jge
call
push
cmpb
call
call
mov
inc
test
popf
subb
mov
ja
outsb
sub
shl
adc
iret
cs
test
inc
fdivrl
sti
push
xlat
div
sbb
adc
das
adc
mov
repnz
cli
ljmp
xor
mov
jno
mov
and
pusha
rcl
lds
dec
push
jns
pushf
lea
scas
sbb
add
pop
sub
and
and
insb
les
xchg
movsb
ret
shrd
jecxz
insl
sbb
dec
lret
lea
je
pusha
bt
test
test
sub
clc
stc
cmp
pushf
lea
ja
clc
stc
stc
push
imul
cmc
test
call
pop
add
loopne
movb
je
push
mov
sub
jno
sarb
mov
push
mov
xor
pop
xor
jnp
fdivs
xor
jecxz
sub
mov
test
jl
movsl
testl
les
mov
mov
clc
pop
xor
sbb
pushf
or
sub
jmp
and
jne
lea
lahf
mov
pusha
movb
bswap
mov
push
lahf
lea
lea
jmp
shl
movsbw
cmc
shld
mov
cmc
jmp
xlat
cltd
rolb
in
adc
loopne
daa
ds
adc
rcll
inc
xchg
push
push
ljmp
cmpxchg
lea
cmp
xor
pop
es
jns
mov
ret
enter
mov
mov
ss
pop
mov
xor
scas
pop
ds
aam
ss
adc
ficomps
rcr
mov
adc
dec
cmp
rcl
push
movb
pop
mov
jo
adc
je
jl
mov
sbb
popa
bound
inc
clc
adc
pop
cmp
cmpsb
test
mov
mov
fisttpl
add
cmp
popf
add
add
movsb
cwtl
mov
stos
addr16
xchg
pop
pop
scas
mov
jae
or
dec
roll
out
jg
push
mov
test
sub
leave
cmp
iret
push
mov
ret
faddl
sarb
sbb
scas
pop
cld
inc
call
popa
cwtl
jg
dec
cmpsb
aas
pop
cmp
push
xor
gs
pop
call
fisttps
popf
dec
test
add
out
ss
call
fcoms
mov
in
sub
mov
addr16
aam
out
mov
jp
adc
and
lret
imul
xlat
mov
out
fisubs
or
push
inc
fs
xchg
and
wrmsr
addr16
pop
xchg
cmpsb
lock
mov
push
dec
fs
cmp
jl
adc
orl
daa
enter
mov
scas
out
popf
subb
push
xchg
adc
pop
inc
inc
and
push
or
adc
add
cmp
jae
cmp
jne
jno
adc
idivb
mov
imul
test
mov
frstor
fisubrs
add
mov
movb
pushl
ret
repz
ljmp
xor
lahf
mov
fdivp
fs
inc
inc
mov
mov
pop
std
shll
insb
jle
idivl
or
sub
inc
or
inc
jg
fdivs
aad
xchg
mov
aas
adc
mov
cmc
mov
in
aas
push
sbb
test
jp
xor
cltd
les
sub
negl
mov
xor
jo
repz
hlt
imul
mov
clc
push
pop
cmp
pop
shl
das
lea
ret
neg
push
call
pop
xchg
add
in
arpl
pop
iret
xchg
out
int3
or
test
iret
scas
mov
dec
aas
andb
jl
jmp
xchg
gs
pop
imul
outsb
andl
sub
dec
mov
inc
push
xor
jg
lahf
mov
pop
rorb
adc
push
dec
loope
or
xor
ret
lret
inc
gs
cmp
js
adc
lea
je
stc
sub
cmc
pushf
cmp
pushf
call
jecxz
call
mov
pop
jb
jle
jmp
add
cs
cwtl
div
ror
lods
inc
push
mov
out
mov
adc
gs
xchg
xchg
inc
sub
outsl
inc
in
in
jp
cld
adc
mov
mov
stc
xchg
imul
push
in
push
add
mov
push
call
bound
scas
jae
jp
push
cld
hlt
add
mov
inc
and
outsl
ja
sub
stos
mov
popf
pop
and
cmp
and
ret
cmpsb
ret
jle
pop
add
inc
ret
test
lret
jmp
into
jg
jne
pop
inc
pop
cmp
xor
sbb
add
loope
jae
xor
mov
jl
mov
pop
push
sbb
addb
add
xchg
mov
sbb
test
adc
popf
int3
lds
icebp
out
fisttpll
xor
mov
ficoms
xor
repnz
adc
xor
xor
jle
movsl
testl
or
fwait
sbb
mov
adc
and
iret
add
mov
or
in
enter
repnz
pop
mov
inc
in
mov
scas
or
lods
dec
rol
mov
jns
loop
inc
push
mov
fildl
mov
test
cwtl
pop
cs
scas
inc
push
jae
pop
enter
cmc
lret
xchg
insb
fdivs
push
lods
fsubrl
sub
rcr
pop
out
mov
push
stc
push
add
push
in
popf
pop
pop
je
adc
icebp
xchg
xchg
inc
or
imulb
pop
int
xchg
pusha
mov
in
test
jns
mov
les
popf
inc
js
cmp
sbb
shrb
adc
adc
test
sub
bound
fdivrl
leave
jo
cmp
stos
dec
dec
js
div
ljmp
test
pop
push
jg
das
pop
out
jp
loop
inc
sub
push
inc
xchg
jge
cmc
sbb
movsb
xchg
adc
mov
ljmp
and
call
pusha
pushf
call
add
repnz
test
out
mov
push
sbb
test
addr16
or
or
stos
adc
faddl
push
jae
cld
lock
push
stos
xchg
lret
mov
cli
xor
jb
pusha
clc
adc
aaa
test
mov
mov
loopne
inc
js
sbb
loopne
inc
cmp
mov
dec
xchg
fs
ss
lahf
cmc
in
pop
cmc
in
inc
fidivrl
xor
or
pop
imul
mov
inc
sub
jle
mov
ja
jmp
lahf
icebp
ficoml
test
push
mov
fstp
adc
mov
pop
aad
enter
dec
pushf
mov
xor
insb
sub
in
push
dec
mov
lret
push
sbb
lds
nop
fmul
lret
pop
dec
pop
mov
lcall
jnp
lret
addr16
xchg
xchg
push
pop
rorl
xchg
lretw
pop
fnsave
adc
xchg
lret
inc
outsb
mov
push
ljmp
movsl
lcall
nop
jmp
in
xchg
sub
repz
xchg
dec
notl
dec
das
rcrl
pop
cmp
mov
dec
cltd
fs
xchg
jp
fdivl
cltd
mov
or
sahf
lds
sbb
inc
pop
sub
rolb
int3
sbb
iret
adc
testb
mov
mov
js
test
out
adc
xchg
out
and
inc
sub
inc
test
shrb
ljmp
mov
test
push
stos
les
cmp
mov
and
xor
pop
sub
stc
iret
xor
pop
adc
jmp
inc
cmpsl
es
mov
lods
mov
les
xor
inc
out
sub
mov
xchg
iret
xor
imul
outsb
add
addr16
das
jmp
push
cmpsl
lret
pop
aam
ds
mov
hlt
rep
int3
add
push
and
xchg
xchg
xor
push
loopne
sub
xchg
pop
in
out
loopne
push
in
lods
add
dec
test
and
jle
lcall
shl
movsl
jmp
daa
inc
sub
xchg
lcall
into
sbb
mov
ljmp
daa
insl
lea
in
faddl
pushf
jecxz
sti
jecxz
and
push
push
jne
test
outsb
mov
punpcklwd
sbb
push
xchg
cmpsl
mov
data16
enter
cmp
cmp
jmp
pop
cs
scas
xchg
fdiv
cltd
ret
push
in
insb
cmc
dec
scas
gs
adc
pop
adc
scas
cmpl
in
mov
jge
push
mov
ljmp
adc
loopne
jbe
fsubrl
add
adc
push
add
incb
negl
daa
dec
mov
mov
pusha
ret
mov
and
sbbl
rclb
pop
mov
call
cmp
xchg
mov
outsl
inc
dec
push
loope
insw
leave
adc
rcl
cmpb
adc
and
ficomps
jae
or
dec
fbstp
and
std
push
pop
out
mov
mov
push
test
arpl
pop
push
lret
cmp
sub
inc
add
and
mov
popa
add
jg
rcrb
sbb
sub
inc
dec
add
test
xorb
mov
push
in
nop
test
add
lea
das
inc
jge,pt
lock
mov
sub
divl
sahf
in
push
pushf
mov
or
outsb
dec
lods
mov
scas
out
inc
fsubl
push
mov
add
in
mov
push
test
inc
repnz
inc
mov
mov
das
icebp
or
lods
out
pop
jne
pop
cmpl
stos
mov
xchg
push
push
rorb
inc
push
and
popa
dec
enter
in
xchg
mov
aas
ret
or
scas
je
sti
cmp
add
into
iret
pop
fs
outsb
lret
movsl
adc
les
in
fsubrl
fcoms
call
inc
daa
popf
test
rolb
add
mov
test
jb
xchg
mov
or
bound
push
sub
lods
pop
stc
xchg
sbb
lods
push
mov
mov
mov
lods
push
pop
pop
in
mov
xchg
addl
enter
xchg
ficoml
push
mov
push
movsb
test
je
insl
clc
mov
and
jb
sub
testl
dec
and
sbb
pop
shr
pop
cmc
and
adc
pop
jle
pushf
ss
push
pushf
lea
je
or
shld
clc
bsr
xor
rcr
call
jbe
or
in
xchg
stos
fnstsw
sti
lahf
jg
mov
mov
dec
lret
clc
movsb
or
jb
adcb
andb
ja
ret
jne
cmp
test
adc
inc
and
push
in
das
or
in
cli
mov
sbb
mov
shll
cwtl
notb
sahf
test
packsswb
in
xchg
mov
adc
mov
pop
shlb
mov
dec
xor
ret
and
lea
jne
push
lahf
movb
pusha
setno
bswap
call
mov
cmc
call
cmp
ret
call
pop
not
xchg
pop
pop
gs
cmp
inc
and
xor
out
xchg
xchg
push
cld
sub
mov
enter
xchg
mov
lods
ficoml
inc
mov
and
cli
push
push
push
aam
jae,pn
rcl
add
push
rorb
cmp
and
not
lahf
lea
movw
jmp
sbb
push
test
add
sub
cmp
sti
mov
xchg
push
mov
leave
out
add
sub
sub
gs
cli
arpl
xchg
fcomi
std
faddl
addr16
sahf
test
das
mov
mov
ror
scas
rclb
sbbb
fstps
xchg
push
sbb
inc
jge
rorl
dec
fidivrs
fdivr
repz
or
popl
or
jns
pop
aam
scas
add
pop
pop
popa
int
cmp
call
mov
push
jno
andb
mov
call
fs
jb
push
bt
jmp
add
push
test
aaa
scas
dec
mov
mov
imul
shll
sbb
dec
mov
inc
and
mov
shlb
xor
sbb
imul
and
ret
mov
out
mov
shll
nop
push
fcomps
pop
jbe
dec
pop
jge
dec
and
mov
push
xchg
push
loopne
add
dec
xchg
add
jbe
pop
sbb
insl
loope
mov
das
movsl
cmp
jmp
gs
enter
int3
pusha
imul
pushl
inc
cmp
sub
jnp
test
neg
bt
popfw
push
call
aam
shrd
or
push
xchg
cmc
cmc
mov
shr
btr
sub
clc
and
aaa
test
push
dec
sar
pusha
mov
aaa
xor
mov
shld
mov
shrd
bsr
lea
stc
mov
test
jmp
jmp
in
push
icebp
push
sarb
sbb
jg
mov
mov
hlt
in
imulb
xchg
xor
aam
mov
xor
sub
mov
push
jp
shl
clc
adc
push
loop
mov
movsb
fdiv
push
pop
bound
icebp
inc
fucom
mov
mov
out
adc
jb
movsl
xchg
in
push
fistpll
out
inc
stos
ja
mov
dec
outsb
clc
push
test
test
dec
out
in
inc
sub
in
lahf
lea
dec
imul
dec
scas
mov
inc
push
pause
lret
cmp
xchg
mov
test
aas
add
mov
push
cld
jmp
jo
pushf
jecxz
sub
sti
adc
cmp
pop
fcmove
mov
sarl
fidivrs
cmp
into
mov
ja
mov
push
lea
jb
bt
cmp
push
pushf
mov
lea
jae
not
cmc
clc
bt
mov
ror
mov
rcl
rcr
jmp
xchg
pusha
mov
jmp
add
dec
insb
gs
insb
jne
push
bound
jb
add
in
push
push
jbe
repnz
loop
xchg
stc
lret
push
daa
dec
lods
adc
fs
out
jno
xor
shr
repz
ds
jae
push
add
sti
rolb
pushf
ja
loop
cmp
sub
cmpl
sub
out
out
int3
adc
dec
sub
or
push
pusha
in
mov
or
das
mov
sbb
adc
add
fcomp
mov
or
mov
push
test
mov
lods
mov
add
mov
shll
inc
cmpl
stos
mov
lods
loope
outsl
cmp
pop
xchg
ret
and
push
xchg
mov
jp
xchg
xor
stos
sbb
cmc
pop
ret
lret
leave
in
mov
incb
out
mov
std
cld
inc
dec
push
iret
outsb
sub
enter
movsl
movsb
lods
aaa
lcall
aam
inc
in
adc
cmp
mov
adc
ss
bound
lcall
into
xor
push
add
in
mov
xor
jno
push
fidivrl
aas
and
xor
imul
ja
rclb
insl
push
out
inc
xchg
stc
sub
mov
mulb
mov
cld
pop
les
inc
notl
pusha
xor
pop
clc
mov
pop
xor
xchg
sub
mov
insb
mov
mov
xchg
addr16
fistpl
test
and
clc
mov
push
aam
xchg
cmpl
jg
stos
jg
gs
es
inc
push
mov
mov
stos
pop
test
mov
fisttps
xor
js
cmp
int
jbe
int3
pop
out
inc
negl
cmpsb
and
es
stos
inc
cs
mov
add
movsl
and
cmpsb
cmpsb
xchg
in
notl
ss
pop
mov
movsl
and
stos
xor
mov
stc
out
jle
rol
mov
cmp
jmp
imul
test
xchg
dec
movsl
sti
in
and
mov
sbb
cmc
sti
jbe
int3
jle
sub
mov
add
push
xor
int3
cltd
outsl
imul
pmuludq
xchg
and
xorl
loop
out
push
cmp
mov
sub
sbb
push
imul
mov
loopne
mov
ficompl
inc
and
xor
mov
test
lock
mov
movsb
test
in
jmp
mov
sar
insb
idivl
mov
mov
sub
fld
mov
lods
bound
in
jne
lret
data16
mov
in
lret
xchg
inc
clc
sarl
sahf
dec
mov
rorl
or
daa
mov
in
addb
jg
in
data16
dec
xchg
mov
mov
int3
cli
mov
loope
mov
repnz
cmc
push
in
pop
inc
push
mov
das
ret
mov
dec
jp
mov
push
cmp
jno
xor
stos
jl
inc
mov
out
in
push
lock
mov
sub
dec
aaa
pop
jno
xchg
rcll
jne
ss
test
sub
add
mov
pop
xchg
dec
xchg
repz
enter
bound
pop
mov
mov
test
mov
test
push
shll
mov
jge
data16
lret
xor
adc
arpl
dec
fdivl
jo
loope
data16
cld
aaa
and
lods
sub
and
xchg
das
dec
out
xor
call
sub
pop
push
jnp
rclb
pop
mov
stos
fisubl
dec
adc
enter
mov
out
dec
sub
xchg
mov
cltd
pop
lret
in
lea
inc
fs
into
mov
fdivrs
sub
xchg
out
adc
dec
sub
shlb
rcr
mov
cmp
xchg
jns
xor
or
stos
mov
push
pop
cmp
inc
daa
xor
xor
lds
repnz
push
loopne
loop
arpl
xor
mov
cmp
ds
push
js
pushf
mov
pop
dec
fmul
fsubrl
xchg
cwtl
push
push
add
dec
test
int3
loope
xor
call
inc
in
mov
add
lock
push
imul
mov
add
pusha
call
setl
pop
bswap
pop
movzbw
pusha
jmp
and
in
clc
lcall
rcr
jae
jl
pop
jnp
scas
add
mov
scas
stc
pop
out
lahf
movsl
call
leave
xchg
jp
mov
cmp
loope
enter
leave
int
xorb
pop
xor
aam
cmp
cmc
dec
rcrl
in
imulb
add
lcall
in
les
outsb
fsubrs
push
mov
js
test
mov
sub
dec
clc
sub
inc
mov
and
push
addr16
test
stos
sub
inc
push
pop
dec
imul
pop
fidivs
cltd
popa
add
add
pushf
movsl
fs
ss
add
adc
add
cli
push
stos
add
add
add
add
std
xchg
pusha
xorb
xor
add
lds
fwait
outsb
cmp
add
test
xor
add
add
add
pop
popa
add
add
sub
movl
pop
add
or
push
mov
xor
add
xorl
add
mov
mov
add
inc
add
loopne
popa
mov
and
mov
add
add
add
out
and
add
mov
xor
add
add
add
mov
add
aam
xor
xor
add
add
ds
add
add
lock
jbe
outsl
inc
add
sbb
inc
add
add
add
add
add
aad
lods
inc
into
dec
add
mov
cmp
inc
add
add
add
js
cmp
add
add
dec
jb
cmp
dec
add
dec
mov
adc
inc
add
add
add
into
inc
add
adc
hlt
mov
add
mov
jne,pt
jp
add
arpl
add
gs
inc
add
add
add
hlt
inc
add
adc
add
push
bound
inc
inc
add
fwait
and
add
add
jecxz,pn
or
xor
add
add
add
in
sbbb
add
adc
cmp
inc
add
adc
and
or
leave
mov
cmp
jne
mov
add
add
add
fdivl
inc
add
add
arpl
cwtl
sub
xor
add
sbb
lahf
popa
add
add
mov
arpl
xchg
bound
add
jl
add
dec
add
add
test
popf
pop
xchg
popa
add
test
sti
insl
inc
add
dec
sbb
xor
add
adc
add
add
test
mov
or
fdivp
aaa
aam
fcompl
add
clc
lret
jbe
cmpl
movsb
sbb
cmp
shl
scas
mov
jo
jle
xor
movsb
push
repz
lock
mov
jns
cmp
sbb
ret
enter
in
mov
fdecstp
in
lods
out
test
cli
jle
jnp
jle
xchg
cld
lds
jp
xor
jp
push
repz
mov
aas
pop
jp
fwait
pop
adc
aas
mov
mov
outsl
and
xor
pop
add
mov
cmp
or
mov
adc
xchg
outsb
into
mov
inc
jmp
ffree
int
fistl
ja
dec
inc
test
divb
pop
xchg
push
push
jns
fisttpl
out
cmp
loop
xor
inc
pop
test
es
dec
xchg
jl
test
ret
daa
test
sub
jbe
mov
cs
shll
add
loope
cltd
outsb
into
aas
js
out
or
mov
xor
das
aad
fwait
sub
jno
cmc
fprem1
das
add
mov
dec
ret
jmp
add
lret
dec
xchg
jno
adc
inc
sbb
pop
in
push
or
enter
ret
jle
fisttpll
cmp
lods
lock
cs
or
in
les
add
fadds
mov
pushf
sub
daa
mov
jb
add
mov
xchg
stc
dec
fs
push
push
dec
lret
cmp
jbe
xchg
mov
fsubrs
je
mov
sub
sub
jns
aaa
insl
stos
xchg
xchg
cwtl
jmp
sarb
jg
daa
sbb
cli
inc
test
scas
in
mov
bound
push
mov
bound
stos
jecxz
fiadds
stc
out
cmc
in
adc
fdivs
mov
mov
out
jo
cmp
xlat
ret
arpl
fisttpl
pushf
out
out
pop
mov
in
mov
mov
xchg
nop
cmpsl
inc
push
aaa
iret
mov
push
in
hlt
out
sub
pop
les
or
or
and
inc
das
add
jmp
ficoms
call
sub
stos
out
jmp
xchg
gs
jmp
ss
idivb
pop
int3
sbb
shr
or
sbb
push
xchg
mov
loop
jb
cld
xchg
int3
into
arpl
out
loop
out
sti
inc
or
jl
cmc
fdivl
repnz
lret
dec
adc
jle
ficoms
xchg
das
add
sbb
jne
mov
in
or
mov
jge
enter
mov
pop
push
call
or
fs
inc
pop
jmp
jge
sub
in
fcmovu
lea
dec
jmp
push
sbb
dec
ret
js
in
out
sub
repnz
jo
fsincos
or
adc
sbb
xor
push
dec
loopne
fimull
ds
call
add
leave
jp
repnz
adc
cmp
clc
dec
scas
inc
add
loope
das
imul
sub
sbb
xor
cmp
in
imul
mov
add
andb
insl
lea
int3
hlt
shrb
lock
imull
lods
dec
jbe
lods
pop
xor
sahf
jl
push
jmp
push
jno
xchg
test
xor
sbb
cli
adc
es
pop
adc
ja
lods
mov
sub
aaa
xchg
ret
and
js
cmp
leave
dec
xchg
popf
adc
sahf
xor
insl
imul
int3
loope
aam
xchg
pop
je
and
sub
adc
test
xlat
lods
xor
mov
aaa
jg
push
mov
pop
mov
jnp
cmpsl
dec
test
les
ds
shlb
js
sub
xor
xchg
sbb
add
mov
or
jge
cwtl
js
int
iret
mov
adc
jecxz
dec
mov
mov
outsl
pop
dec
leave
inc
jle
adc
add
insl
pop
sub
std
sbb
fs
lock
addr16
test
loope
adc
cwtl
jbe
aas
push
mov
in
or
mov
sub
inc
out
mov
xor
mov
icebp
mov
add
dec
inc
pop
mov
push
cltd
jnp
pop
stc
repz
call
neg
in
sarl
out
arpl
xchg
sbb
jo
mov
sub
cs
pop
jbe
imul
ja
cmp
adc
shll
inc
data16
fnstcw
incl
push
movsb
fbstp
mov
xchg
mov
imul
xchg
lret
jle
xlat
ret
ss
cmpsl
mov
push
adc
jp
cmc
sub
push
dec
lods
fcoml
xor
mov
pop
dec
in
in
lock
pop
mov
jo
add
into
mov
imul
adc
xlat
imul
lods
bswap
imul
movsb
lds
cmpl
cltd
popa
fdivs
jg
cli
jb
ss
testb
jecxz
out
enter
cwtl
push
mov
mov
push
mov
sbb
jns
test
inc
mov
push
mov
xor
and
mov
pop
dec
mov
scas
jbe
dec
and
popa
xor
negl
dec
negb
fadds
imul
cwtl
daa
cld
mov
jecxz
pop
sub
scas
lret
mov
xor
movsb
add
adc
cld
es
ljmp
fiadds
jae
nop
and
rclb
xchg
into
cmp
mov
xchg
mov
push
pop
ljmp
cs
lcall
add
mov
sub
in
jl
push
adc
movsl
pop
add
aaa
xchg
ljmp
or
xor
nop
das
xchg
push
cmp
rcll
and
or
pop
cs
sub
fldl
sub
add
push
imul
jo
addr16
inc
mov
shlb
mov
mov
cmp
inc
cwtl
out
push
jge
dec
test
mov
call
jbe
and
pop
leave
insb
lret
sbb
push
dec
mov
scas
lret
or
dec
imul
mov
cmpsl
push
or
clc
repnz
xchg
jbe
rcr
pop
in
push
cmpl
addl
or
mov
and
mov
jbe
rcl
ret
xchg
mov
leave
dec
mov
sub
imul
cmp
cmp
rol
in
mov
repz
test
movsl
xchg
dec
cmc
andb
pop
or
mov
push
sub
rclb
ret
div
mov
ja
arpl
and
adc
scas
xchg
icebp
enter
xor
les
xor
idivl
sbb
push
dec
pop
push
outsb
mov
ret
jge
mov
lock
icebp
insb
or
movsb
les
roll
dec
inc
lea
test
ss
or
mov
pop
mov
and
ret
sbb
fdivrl
sub
adc
push
mov
add
cmp
hlt
cs
push
in
popa
ror
sub
in
fisubs
cmp
movsb
in
mov
pop
or
je
sbb
cmc
cli
xor
sarb
andl
outsl
mov
loopne
pusha
dec
outsl
mov
dec
into
nop
fbstp
cmp
in
cmpsb
push
mov
loopne
lahf
scas
sbb
sbb
mov
mov
insb
push
test
mov
adc
and
pxor
stos
aad
xrelease
mov
xchg
sar
xlat
outsl
mov
sbb
sbb
push
sub
fs
cmpsl
ss
rclb
jp
pop
or
inc
adc
imul
jnp
arpl
push
bound
cmc
xchg
in
subb
sbb
out
mov
pop
bound
mov
pop
xor
adc
mov
jo
inc
mov
lret
or
xchg
sbb
inc
daa
inc
cmp
lcall
ss
fnstcw
in
fdivrs
jecxz
in
sub
xchg
and
push
lahf
xor
gs
push
test
fldenv
mulb
out
adc
jo
in
cmc
xchg
mov
jp
dec
mov
int3
insb
mov
push
in
into
pushf
loopne
push
mov
xor
sub
jnp
xor
dec
sub
sbb
aas
movsl
push
lret
dec
jle
mov
in
dec
jae
inc
icebp
sbb
cmp
mov
aaa
jae
pushf
mov
scas
inc
fsubs
aam
and
adc
ret
int3
lahf
push
xor
push
je
push
xchg
sub
inc
imull
xchg
jl
lock
rcl
fnsave
pop
arpl
push
aas
cli
jmp
pop
jnp
pop
loope
push
push
test
xor
subl
cmpsb
test
aas
sub
test
xchg
je
mov
stc
arpl
inc
aam
pushf
xor
or
fcomi
hlt
sbb
mov
aas
out
jne
dec
xchg
fiadds
aaa
lret
cmpsl
rorl
sbb
mov
lahf
adc
repnz
je
sahf
pop
jge
jmp
pop
push
push
add
popf
test
into
and
mov
adc
adc
std
pushf
test
mov
in
adc
add
test
aam
stos
jno
jl
sbb
aam
cmp
call
ffree
fs
fstl
jae
xor
clc
mov
das
dec
inc
or
sbb
insl
cmp
mov
test
mov
sarb
dec
enter
std
xchg
arpl
xor
stos
jmp
lret
inc
rcl
add
cmp
ss
mov
sub
mov
in
iret
insb
cmc
dec
out
enter
cltd
jae
lock
mov
insb
test
js
movsl
pop
cmp
ljmp
daa
outsl
mov
push
std
ret
mov
mov
sub
sbbl
pop
jae
loopne
shrb
jne
sahf
mov
and
cmpsb
cmp
dec
in
stc
rolb
cmp
ror
adc
pop
pop
mov
or
jb
xor
push
loop
add
ss
and
sbb
and
inc
rorl
fimuls
jno
push
jg
nop
mov
out
in
call
pop
orl
out
xor
xchg
je
add
mov
xchg
sub
jae
dec
dec
inc
inc
push
push
xor
cs
insb
add
bt
mov
cmp
bt
stc
jmp
rcr
dec
outsl
test
sub
lods
out
aas
xor
pop
dec
sub
pop
pop
jbe
cmp
inc
int3
cwtl
stos
aam
stos
inc
and
aam
push
ret
cmpsl
lds
inc
insb
outsl
jg
mov
sti
pop
sbb
pop
jo
mov
ret
jmp
and
inc
mov
pop
xor
jge
das
xchg
shr
pop
jl
lock
mov
loopne
test
and
mov
fstpl
imul
jbe
mov
repz
dec
jecxz
mov
lahf
testl
inc
jp
int
loop
lea
in
xchg
dec
into
pop
cmp
cmpsl
lahf
rcl
insb
pop
lret
sbb
mov
lods
out
add
imul
ret
ret
mov
or
or
pop
xor
iret
insl
jge
jmp
outsl
push
cli
stc
xor
adc
push
aas
test
jmp
push
adc
xor
push
clc
push
test
inc
neg
jp
sbb
popa
insl
or
arpl
inc
mov
cmpsl
mov
jo
std
sub
mov
pop
mov
mov
cmp
lock
test
shr
or
add
popa
sub
in
mov
pop
push
arpl
jne
or
mov
cld
xor
inc
add
imul
mov
sub
cmp
xor
cmp
inc
mov
popa
sarl
lods
mov
adc
push
arpl
cmpsb
xor
sbb
sbb
out
adc
out
mov
ret
loope
xchg
add
rolb
popfw
mov
push
stos
jae
sarl
sarb
jno
test
out
push
ret
push
sbb
lock
xchg
shll
fstl
dec
xor
xchg
es
sbb
xor
sbb
pop
inc
stos
scas
lret
sub
cli
test
rcrb
and
loopne
mov
mov
repz
and
push
mov
cmp
sub
or
repnz
mov
movsb
clc
outsb
imul
mov
cmp
loop
mov
adc
icebp
fnstsw
rolb
inc
gs
pushf
pop
fstl
dec
rol
cmpl
cmpsb
add
adc
mov
pop
aad
ja
mov
pop
pop
in
hlt
sbb
cmpsl
pop
out
out
sub
mov
sub
inc
in
ss
sbb
imul
mov
mov
adc
dec
fisubrs
in
inc
lahf
dec
xchg
mov
enter
xor
sbb
xchg
sbb
shrl
mov
mov
jmp
jbe
jmp
push
out
xchg
cmp
sarb
ficompl
sbb
test
mov
pop
dec
sti
les
sub
pusha
add
and
jne
jbe
push
pusha
lea
call
pushf
pusha
pushl
lea
jmp
mov
mov
in
nop
dec
mov
or
sub
ss
scas
xor
sbb
out
xor
gs
xchg
dec
call
leave
fcompl
test
dec
mov
mov
out
mov
sub
mov
cltd
js
ret
cltd
les
cli
fnstenv
add
aas
aaa
sbb
leave
js
cmp
popf
xchg
lret
iret
mov
ljmp
ds
pop
jnp
cmp
adc
mov
test
mov
inc
les
fucom
sahf
mov
and
mov
mov
lds
dec
leave
mov
sti
lahf
das
or
inc
repz
lahf
std
subb
jns
sbb
mov
imul
fdivrl
imul
sub
dec
inc
pop
dec
test
push
jecxz
cmpsl
pop
push
sub
loop
jge
push
fs
cld
mov
cmp
in
fwait
push
jmp
mov
sbb
adc
sbb
xchg
cli
push
lahf
sti
cmp
or
or
rcl
jo
ret
inc
sbb
int
xchg
sub
adc
outsl
jmp
lar
push
xchg
lret
adc
out
or
xor
in
outsb
ljmp
add
adc
mov
inc
mov
in
add
mov
mov
dec
dec
sub
stc
movsb
push
test
testb
jmp
lea
jae
shr
clc
sar
or
mov
shl
adc
shrd
xor
mov
shld
mov
pushf
cmp
bt
stc
xor
movb
test
clc
repnz
movb
push
pusha
pushf
lea
jne
bsr
call
adcb
push
in
lcall
and
pop
mov
dec
push
adc
xchg
mov
ret
push
lret
sbb
pop
aam
cwtl
cmp
loopne
jae
xor
sarl
mov
mov
insb
jmp
xchg
mov
pop
out
cmp
mov
jg
lods
xchg
pop
cmpb
sbb
cmp
addr16
cmp
inc
pop
xor
mov
outsb
cmovo
jnp
outsb
pop
pusha
mov
or
pop
stos
push
lret
sub
out
jne
dec
jne
in
shlb
pushl
dec
ret
loopne
cmpsl
xor
fisubrl
sbb
xchg
jae,pt
ds
int3
imulb
loop
test
test
mov
inc
out
in
sub
jg
sub
or
xor
cmpsb
fistpll
or
adc
mov
movsb
pop
imul
xchg
sub
add
add
and
int
incl
icebp
lds
insl
xchg
jne
in
rorb
fists
clc
mov
mov
push
call
jmp
mov
xchg
dec
scas
cmpsb
arpl
xor
mov
inc
es
leave
mov
push
lods
push
in
stc
fcmovu
jne
xchg
and
push
cmp
clc
push
frstor
jbe
lds
pop
inc
loope
mov
movsl
movsl
dec
push
out
pushf
mov
into
outsl
ja
xor
adc
test
lahf
cmp
xor
or
mov
jo
add
mov
je
in
cld
test
cmovns
lret
outsb
pusha
leave
pop
xor
daa
mov
mov
sti
mov
or
xor
jb
inc
clc
nop
movsb
stos
mov
mov
xchg
lea
jae
sub
lcall
jae
notl
add
es
pusha
add
jae
fdivrp
push
xor
or
dec
or
mov
int
shr
int3
mov
or
imul
add
inc
pusha
inc
loopne
fcomps
lea
ja
mov
jnp
pusha
mov
inc
lea
seto
inc
xor
mov
bt
stc
xchg
jmp
mov
mov
in
adc
jecxz
sbb
not
aad
mov
xchg
cs
add
fstpt
xchg
xor
pop
fucomip
shrb
cmp
dec
xchg
xor
rcll
push
pop
xlat
mov
jno
ret
and
mov
nop
dec
rcrb
cmpsl
les
rcr
and
sbb
inc
mov
dec
mov
inc
inc
in
dec
out
aam
jne
jge,pt
sahf
movsl
in
push
push
stc
cld
xchg
cmp
lea
lret
inc
lods
movsb
xor
xor
lea
jne
setno
call
xchg
inc
shll
in
dec
outsl
mov
mov
inc
sub
cmp
sub
mov
xchg
addr16
popf
clc
movsb
cmpsl
mov
push
in
out
xchg
mov
jp
icebp
int
xchg
fwait
xor
out
imul
mov
int
out
testb
pop
push
xor
add
inc
in
xor
add
xchg
xchg
jge
or
stos
mov
repz
lods
cmpsl
inc
movsl
and
sbb
clc
push
jo
add
in
popf
jnp
xor
popf
arpl
call
icebp
icebp
clc
outsb
jbe
in
jb
stos
dec
push
aas
adc
mov
xor
pop
inc
mov
stos
dec
test
jge
in
aam
loope
ljmp
icebp
xchg
or
popf
shl
push
stos
fisubrs
push
or
jnp
cmp
cmp
cmp
pop
inc
dec
adc
mov
push
jecxz
in
xchg
jecxz
arpl
sbb
jecxz
xor
xchg
insb
in
lods
jmp
mov
lcall
mov
mov
pop
cmp
fldenv
outsl
mov
jg
mov
cld
dec
icebp
adc
sub
xor
andl
and
and
adc
stos
or
or
and
lahf
mov
add
inc
inc
dec
test
fdivp
jo
insl
push
pop
cmpsl
push
clc
std
sbb
fucomp
jns
outsl
faddl
gs
or
mov
lcall
push
mov
inc
in
fbstp
mov
lret
mov
sub
outsb
xlat
mov
push
jecxz
test
call
sarl
add
imulb
icebp
and
jb
insl
iret
xchg
popf
stc
roll
test
mov
inc
scas
adc
xchg
sub
test
mov
xchg
loop
stc
mov
es
mov
stos
jecxz
push
push
pop
fldenv
fisttps
cltd
test
fsubrs
test
mov
movl
dec
dec
test
dec
cwtl
fwait
push
jns
dec
xchg
push
icebp
cmc
rcr
imul
or
fucomip
movsl
iret
lods
cmp
ja
jge
in
fsubrl
andl
cmp
or
push
adc
roll
jmp
dec
dec
xor
mov
adc
push
xor
and
adc
icebp
push
fsts
mov
xor
rcrl
mov
test
and
push
push
frstor
push
and
pop
stos
call
xor
pop
adc
add
xor
sbb
or
add
adc
out
pop
inc
mov
loope
lcall
pop
xor
mov
inc
cmp
or
sub
mov
dec
es
inc
adc
and
xor
push
in
xchg
jns
aam
push
adc
jns
push
sbb
inc
adc
mov
and
jmp
mov
movsb
and
jne
mov
aam
jns
adc
or
movsl
sbb
repnz
arpl
sbb
push
adc
xchg
popa
fst
pop
and
or
mov
push
subl
and
adc
cltd
or
mov
inc
xor
adc
adc
sub
adc
ldmxcsr
dec
xchg
pop
dec
xchg
adc
nop
and
xor
repnz
dec
push
aam
push
in
sub
xchg
or
fstpl
mov
notb
in
loope
xor
pop
xchg
xchg
add
xchg
mov
xchg
add
stos
xor
push
adc
fldenv
mov
adc
push
xchg
sbbl
and
xor
sbb
xchg
pop
cltd
add
and
and
sub
dec
imul
sbb
add
je
pop
xor
enter
adc
adc
push
xor
push
mov
pop
les
adc
dec
adc
repnz
scas
cld
sbb
popa
add
pop
popa
cmp
add
push
das
inc
add
aam
and
arpl
dec
and
mov
sbb
and
mov
cmp
inc
das
add
jae
add
dec
push
sbb
loop
stc
ret
popa
test
xchg
shlb
int3
adc
sbb
cmc
and
sti
mov
adcl
push
xchg
xor
adcb
xchg
repnz
ret
ret
xor
mov
xor
xor
mov
pop
xor
and
aas
outsl
es
pop
inc
sub
sbb
cmpb
mov
jb
and
shll
inc
jno
xor
and
adc
add
xchg
push
and
and
aaa
loope
jns
mov
and
iret
ret
call
ds
cmc
shlb
mov
lea
nop
mov
out
inc
sbb
orl
aaa
stos
pop
xor
push
sub
inc
ja
and
dec
sbb
push
sahf
adc
cmp
dec
sbb
and
cmp
cs
cmp
push
mov
cmp
fwait
cmp
popa
cltd
repnz
cltd
mov
xchg
mov
and
icebp
pop
sub
and
out
or
cmp
sub
cli
arpl
shl
add
sub
push
incl
jl
rcll
sub
add
loope
inc
int
cmpsl
mov
pop
fists
or
daa
loope
inc
int
jno
mov
push
and
mov
push
mov
ds
pop
jb
out
add
and
cli
insb
sarl
sub
xor
pop
repnz
dec
push
sub
add
add
or
sbb
pop
shll
aas
or
xchg
pop
push
jne
xor
mov
xchg
cmpsl
and
pop
repnz
sahf
cmpsl
mov
cld
into
dec
sub
and
mov
orb
popa
lret
imul
xchg
aas
pop
mov
das
inc
inc
inc
and
daa
adcb
loopne
adc
sub
xor
inc
imul
repnz
loope
je
xchg
inc
repnz
mov
test
arpl
ret
mov
mov
ret
push
mov
mov
push
movsb
cwtl
cmp
mov
adc
fwait
std
push
sub
cmc
push
pushl
jl
pop
ja
push
mov
test
pop
negl
jnp
push
sub
lcall
call
ds
xor
add
mov
pop
lret
push
pop
bound
pop
clc
pop
orl
and
sub
and
push
das
mov
pop
pop
add
xchg
push
pop
dec
add
push
test
dec
pop
push
ror
push
int
loope
cmp
push
pop
xor
xor
xor
push
push
roll
sub
mov
repnz
das
jns
cmp
or
frstor
xchg
sub
and
es
sub
xchg
jns
in
pop
jnp
sbb
imul
cmp
add
daa
pop
movsb
rolb
pop
lods
or
rorl
daa
loopne
add
adc
cwtl
pop
das
and
jmp
inc
icebp
fsubrl
cltd
es
mov
mov
jmp
xor
jns,pn
icebp
adc
ss
cmpsb
sub
ss
orl
cs
jp
icebp
push
add
adc
pop
pushf
rorb
xchg
pop
mulb
ficompl
mov
rclb
cmc
loope
mov
or
mov
or
jno
and
push
mov
in
cli
insl
adc
das
or
adc
cmp
adc
cmp
xor
repnz
movsl
sbb
jmp
cmp
loope
popa
mov
add
jge
sbb
movsb
clc
sub
cmp
adc
or
movl
popf
lret
mov
popf
xor
jmp
dec
scas
dec
cmp
or
mov
and
adcb
pop
popa
testb
mov
jl
ja
xor
pop
sbb
sub
jbe
popf
push
jno
ds
push
cmp
sbb
jmp
rcll
xchg
icebp
sub
leave
jnp
cltd
dec
out
dec
cmp
jno
sbb
lods
fsubl
cmp
fwait
lods
mov
push
and
inc
and
mov
xchg
mov
and
lahf
sbbb
xlat
inc
movl
xor
sbb
sbb
sub
jmp
lcall
popa
sub
fsts
and
loope
jecxz
ffree
mov
mov
mov
popa
push
dec
outsl
pop
test
popa
and
test
fisubs
scas
lahf
and
xor
dec
push
dec
rcll
xchg
mov
jmp
mov
sahf
fwait
and
arpl
test
sbb
mov
add
jle,pt
adc
lods
imul
xor
in
adc
push
leave
sub
push
mov
je
icebp
fstpt
xor
and
clc
sarb
mov
sub
mov
jg
arpl
jne
pop
dec
jge
mov
adc
arpl
xchg
adc
fsts
adcl
push
call
sbb
sbbl
scas
stos
sbb
cld
fs
insl
mov
cltd
and
adc
mov
ds
sbb
stos
xchg
jbe
sbb
out
pushf
sbb
jecxz
inc
cmp
cs
divb
ja
aaa
pop
rcll
cmp
insb
sbb
pop
popa
xor
jno
mov
mov
fwait
mov
icebp
stos
sbb
ret
sbb
xchg
fwait
jbe
adcl
or
iret
push
sbb
pop
mov
xor
xchg
aas
loop
int3
scas
rol
jecxz
imul
mov
and
sbb
sahf
and
push
inc
mov
lret
add
int
and
jns
inc
add
push
pop
test
out
cmp
lods
inc
push
xchg
pop
and
cmp
sub
and
sbb
xor
pop
ja
and
dec
icebp
out
sub
sbb
addl
in
add
pop
imul
adc
push
or
notb
sub
xchg
xor
xchg
push
push
dec
jb
stos
mov
fprem1
inc
push
dec
out
jno
xorl
dec
out
loop
sub
and
inc
dec
ljmp
imul
pop
mov
icebp
rorl
xchg
int3
aas
popf
loope
and
and
push
repnz
dec
test
push
ret
push
mov
imul
movsl
or
add
imul
sbbl
xor
cs
sbb
mov
jno
and
xor
test
push
mov
jmp
movsl
out
xchg
sbbl
xorl
adcb
mov
cs
stos
call
arpl
bound
mov
or
jns
xchg
ja
ret
jmp
jnp
add
xchg
xlat
popa
mov
xor
pusha
adc
sbb
ficoms
add
dec
inc
pop
jecxz
jae
or
fisubl
outsl
push
stos
xor
mov
cmpsl
or
mov
jb
push
push
mov
ret
sub
xor
mov
jecxz
xchg
cmpsl
clc
fstl
filds
das
cli
es
push
xor
fldt
mov
and
xchg
lods
leave
imul
adc
push
mov
imul
xor
sbb
sbb
xchg
leave
imul
shll
adc
pop
mov
pop
mov
outsl
mov
adc
push
std
and
inc
popf
push
pop
rolb
pop
pop
iret
inc
int
add
lret
and
pop
and
jp
dec
sbb
sbb
mov
cmp
jno
adc
ret
std
mov
sarl
fldt
iret
imul
push
cmp
icebp
aaa
xchg
pop
insl
lods
sbb
cmc
ret
jns
mov
scas
sbb
xchg
arpl
inc
pop
mov
cmpl
pusha
jbe
jmp
sbb
push
ljmp
xchg
ret
add
insb
mov
mov
mov
mov
pop
mov
rclb
xchg
mov
lea
mov
xor
stos
push
mov
test
push
mov
leave
pop
mov
push
cmp
lods
mov
int
pop
mov
es
pop
int
add
pop
shlb
inc
push
out
adc
sbb
enter
pusha
sub
mov
icebp
mov
sbb
and
adc
test
pop
loope
inc
shlb
inc
ficoml
sub
xchg
loope
ss
jns
mov
sub
std
and
lods
xor
jns
and
rcrb
aad
jmp
je
out
bound
mov
jno
sbbl
andl
add
mov
mov
popf
cmp
repnz
lds
lahf
adc
xor
dec
push
les
divl
sbb
mov
mov
and
aad
clc
sub
jmp
imul
ret
pushf
push
jmp
pop
fbstp
mov
cmpsl
jp
inc
movl
jp
pop
sub
shr
push
and
out
mov
adc
inc
mov
inc
pusha
dec
jmp
stos
xchg
sbb
test
aad
sbbl
mov
bound
xor
sub
lret
push
mov
cmp
xor
sub
adc
mov
add
rclb
mov
push
mov
js
bound
dec
xor
lcall
sub
push
jb
pop
int
mov
push
lcall
inc
cltd
scas
sub
aaa
testb
mov
adcl
arpl
das
xor
mov
and
pop
jmp
lcall
push
push
fldenv
popf
aam
insl
cmp
fs
and
xchg
fidivrl
mov
psubd
cmc
fldcw
xor
pop
loope
sbb
insl
imul
sarl
mov
scas
sub
push
call
bnd
xor
call
cmp
sbb
pop
test
mov
shrb
stos
movsl
mov
jp
push
fnstcw
mov
mov
xorl
xchg
scas
out
mov
bound
leave
js
out
repz
loop
mov
sub
pop
dec
fisubl
adc
inc
xor
test
jo
jp
ss
cmpsl
stc
insl
and
adc
fistpl
loope
sahf
mov
fisttps
mov
outsl
mov
mov
cmp
mov
inc
iret
adc
lods
jno
pop
mov
cmp
aam
out
rcll
sub
mov
sub
outsl
xor
push
lods
fstps
mov
iret
ret
cltd
sub
xor
xor
jmp
sub
sbb
xchg
mov
push
cmp
negl
push
jge
pushl
add
cltd
sbb
pop
sbb
dec
xlat
sbb
jae
pop
sub
xor
leave
addl
mov
cmp
jbe
jno
or
mov
popa
pop
push
popa
sub
inc
xchg
sbb
roll
jecxz
sbb
push
push
fldenv
xor
dec
xor
xor
jb
sub
mov
xor
fisubrl
push
jmp
dec
cld
xor
inc
xor
mov
adc
jmp
jno
push
pop
ds
int
lods
add
fisttpl
jp
xor
and
ret
or
in
in
pop
or
jmp
in
xor
jns
arpl
lea
roll
cwtl
xchg
xchg
and
movsl
and
aad
cmpsb
cmp
xchg
jae
pop
popa
pop
jecxz
and
pop
xlat
leave
sub
pop
cmpsb
stc
push
lret
cmp
cltd
out
fnstsw
rcll
mov
adc
in
loop
pop
or
mov
xor
imul
and
or
loope
push
push
jae
push
pop
out
inc
sbb
jle
mov
sub
cmp
and
mov
popa
mov
mov
sub
popa
jmp
xchg
mov
push
push
ss
aaa
xchg
xlat
outsb
cmp
jno
lods
push
sbb
push
daa
inc
inc
lcall
fists
outsl
xchg
pop
aad
call
test
cmp
int
ss
push
leave
int
and
mov
das
iret
adc
ja
mov
mov
cmp
inc
xchg
and
push
sub
mov
iret
lret
xchg
dec
pop
out
ds
add
pop
pusha
xor
repz
aad
and
pop
icebp
aam
imul
inc
lods
sub
sahf
add
sbb
pop
mov
jge
std
mov
lods
xchg
jno
inc
mov
ror
mov
out
mov
inc
push
out
sbb
cltd
inc
mov
inc
mov
mov
sti
cmp
sub
negb
daa
jne
inc
mov
icebp
pusha
adc
and
jp
add
lret
pop
mov
sahf
mov
adc
popa
outsb
xor
inc
lea
daa
cli
xlat
xor
mov
test
and
loop
xor
mov
mov
sbb
ret
cmp
jp
popf
sbb
aaa
jp
cmpsb
and
inc
jns
xchg
sbb
jns
inc
push
mov
pop
fcmovne
pop
sbbb
pushf
inc
pop
jp
push
ret
push
sbb
stos
add
add
aad
push
adc
xchg
sub
and
fildll
pop
divl
fst
pop
xchg
fnsave
pop
dec
jl
push
es
stc
and
and
xchg
cmc
mov
mov
lods
and
dec
cmpsb
cmp
and
mov
fnsave
jb
aad
mov
mov
adc
mov
lods
int3
xor
cmp
cmp
cmp
push
sub
fstps
mov
mov
pop
lock
mov
ret
inc
roll
sbb
sub
ja
xor
mov
daa
sbb
popa
lcall
lds
pop
or
mov
inc
mov
std
pop
lcall
cs
je
mov
xchg
les
sbb
sbb
push
faddl
pop
sbb
push
cmpsl
sub
jb
mov
cltd
xchg
mov
jns
xchg
nop
ficoms
push
clc
call
jl
test
test
sbb
lea
lcall
mov
jo
xchg
xchg
iret
add
sahf
in
pop
mov
push
test
fs
push
jecxz
mov
jbe
insl
xchg
push
ljmp
push
dec
pop
in
cmc
jg
jae
fldl
aam
jecxz
testl
mov
fsubs
xor
sbb
pushl
xlat
out
fs
int3
add
inc
loope
mov
and
stos
in
insl
aaa
enter
cwtl
pop
sub
and
push
dec
stos
push
inc
aam
ret
cs
fisubl
xchg
fisubrs
hlt
insb
xchg
clc
adc
iret
xchg
cli
imul
adc
jne
xchg
push
jb
push
xor
mov
sub
add
xor
sbb
and
or
mov
repz
push
push
xchg
lret
loopne
stos
xchg
jg
adc
xor
xor
popf
adc
inc
shll
out
adc
add
pushf
inc
adc
popa
int
dec
js
and
and
daa
sbb
sbb
sbb
sbb
in
cmpl
sub
sub
sbb
xchg
and
xor
jmp
sarb
fcoms
and
pusha
lods
mov
and
mov
xor
in
xchg
fdivs
pop
or
add
mov
inc
cmpsb
clc
loop
mov
stos
loope
xor
jns
pop
adcb
xor
sahf
jb
mov
mov
js
mov
mov
cmpsb
xor
jb
add
adc
shlb
jbe
dec
mov
pusha
xchg
jne
sti
and
push
fstps
adc
jae
je
cmpb
leave
and
repnz
mov
adc
xlat
fcomi
pop
stc
jecxz
in
xchg
inc
cmp
out
stc
mov
icebp
fadd
cmc
lret
insb
imul
insb
push
dec
mov
fstl
adc
mov
mov
push
pop
xchg
jne
testl
icebp
cmc
in
xchg
jp
and
lret
lcall
insl
arpl
mov
mov
lahf
cmp
dec
add
and
and
jle
rol
scas
xchg
jno
fidivs
push
adc
sbb
and
xchg
dec
mov
xor
pop
sub
inc
arpl
sbb
jns
xor
pop
in
inc
shlb
cmp
add
daa
mov
mov
adc
cmp
cmp
cmp
cmp
xor
mov
cmp
inc
popa
loope
stc
sbb
cmc
and
lret
push
adc
adc
lret
push
cmp
sbb
and
cmp
pop
popa
fisttpl
jge
pop
xor
shl
cmp
stos
call
sbb
mov
jne
ljmp
adc
and
and
push
adc
fs
jp
lcall
hlt
lcall
dec
mov
push
frndint
sub
mov
pop
out
loop
js
int
test
movsl
cmp
and
jno
scas
and
hlt
leave
iret
cmp
or
shlb
adc
cmp
pop
inc
outsb
cld
enter
mov
adc
pop
dec
or
pusha
mov
adc
add
rorb
negb
push
xchg
popa
lds
cmp
and
mov
jecxz
add
mov
xlat
xchg
and
and
lahf
leave
test
and
in
and
jecxz
sbb
jle
or
dec
add
sbb
and
cmpsl
in
outsl
dec
xor
nop
ds
ss
mov
mov
pop
mov
idivb
and
lock
cld
jl
leave
xor
add
adc
xchg
cmp
test
stc
mov
cmp
mov
jmp
or
cmp
mov
mov
mov
imul
lock
divl
movsl
int3
mov
adc
push
adc
mov
in
mov
pushf
cld
or
cmp
fidivl
xor
push
call
cmp
sbb
fmull
fisttps
sbb
lods
cmovg
mov
sub
xor
arpl
and
mov
xor
xor
mov
and
les
and
and
jp
and
enter
and
stos
sub
fisttpll
fcmove
push
fisttps
pop
add
hlt
pop
fcomps
mov
sbb
dec
hlt
imul
dec
pop
int3
jle
pop
jne
and
adc
and
cmp
adc
and
jp
movsl
out
loope
mov
bnd
das
arpl
adc
gs
mov
xor
imul
mov
icebp
xchg
loopne
adc
call
shrb
xchg
adc
xchg
push
mov
mov
adc
hlt
cmpsb
inc
nop
mov
push
sub
and
dec
int
mov
xchg
dec
in
ror
push
add
aam
cmp
and
icebp
dec
jmp
rclb
in
fcoml
fildll
leave
and
pop
adc
mov
aam
xor
cmp
adc
or
in
repnz
adc
adc
mov
mov
rorl
push
lock
and
push
cmp
pusha
xor
cmp
outsl
cmc
sbb
stc
mull
add
dec
mov
cmpsl
pop
test
mov
test
fwait
add
adc
repz
cmp
or
cs
mov
xchg
sub
push
inc
adc
inc
push
xor
jno
adc
xor
dec
pop
adc
xchg
arpl
pop
ret
mov
sub
stc
inc
and
mov
push
cltd
cltd
xorl
fyl2x
sub
stos
icebp
cmc
and
mov
mov
sub
popf
cmpsl
insl
loope
or
test
daa
stos
aam
fs
data16
mov
xchg
mov
addb
clc
xchg
xchg
push
jb
ret
bound
sbb
xchg
out
inc
popa
inc
scas
push
cmp
ret
call
xor
cmpsb
mov
sub
jno
and
mov
mov
mov
test
mov
adc
cmpl
pusha
cs
je
cmpb
add
push
mov
mov
mov
test
xor
xchg
lods
sbb
or
popa
mov
test
jp
cmpb
jae
mov
ljmp
and
stos
jno
xchg
push
xor
push
jae
add
test
clc
adcb
mov
jp
mov
mov
sahf
pop
pushf
fcmovbe
mov
movsb
mov
mov
int3
out
sbb
ds
xchg
sbb
pop
cs
cmp
shll
mov
orb
nop
mov
sarb
push
repz
mov
jae
gs
push
adc
bound
mov
mov
mov
cltd
mov
flds
jno
xchg
mov
adc
popa
pushf
pop
inc
rep
and
or
cmp
cmp
jno
je
test
test
mov
in
xlat
scas
jmp
roll
inc
insl
loope
stc
push
dec
and
and
jecxz
stc
pop
test
ljmp
test
xchg
push
mov
mov
ret
cltd
sar
cmp
pop
lcall
xchg
xor
mov
in
xlat
lock
cmc
jecxz
fbld
push
test
divb
sbb
mov
ja
xchg
ret
push
out
xor
add
add
mov
rcl
jb
in
and
ud2
in
push
movsb
mov
xor
sahf
cli
popa
jle
push
test
adc
push
xchg
insb
add
pop
pop
divl
mov
call
and
gs
xor
rcrb
lcall
push
cmpsl
iret
loopne
dec
sub
loop
push
xchg
call
inc
and
fwait
push
mov
mov
fbld
sti
out
mov
sbb
mov
inc
adc
xchg
mov
xchg
fisubs
push
shrd
sbbb
lds
mov
stos
fdivl
jns
adc
cmpsb
xchg
jp
jno
pop
or
pop
sbb
stos
subb
shlb
loopne
mov
mov
jmp
xchg
xchg
nop
fdivs
inc
and
jns
fwait
cli
out
or
cmp
inc
sbb
add
and
mov
xchg
fsubl
or
sbb
sbb
sub
pop
sub
fs
gs
lods
outsl
xchg
in
mov
dec
sub
sub
loope
jp
mov
and
xchg
xor
sbb
scas
inc
inc
push
push
mov
xor
jno
aaa
lods
and
jne
push
sbb
inc
cltd
sub
pop
xchg
cmp
test
cmp
std
dec
test
lds
adc
cmp
bswap
pop
add
out
cmp
adc
imul
xchg
xor
mov
popa
pop
dec
insb
fistpll
insl
pop
cmp
orb
in
imul
cli
loope
icebp
mov
or
jno
push
sbb
out
inc
xchg
rcrb
push
sub
je
pop
cs
test
sub
pop
cmp
in
je
cmp
jle
dec
cli
pop
rol
outsb
pop
mov
jmp
xor
aaa
mov
cltd
xor
negl
test
cld
sbb
inc
ss
xchg
mov
popf
sarl
cltd
push
dec
jg
popf
jne
enter
sub
xor
xchg
adc
pop
mov
jge
in
enter
add
cmp
or
outsb
push
rorl
sarb
lods
sbb
lret
lret
mov
imul
or
dec
and
stc
xchg
movsl
or
cmc
xor
lods
imul
jne
test
cmc
push
sub
and
sbb
mov
sbb
cmp
lods
mov
sbb
adc
jle
xor
sbb
sbb
mov
and
lea
ss
pop
sbb
inc
shll
loope
imul
mov
sbb
jge
xor
andl
sbb
pop
mov
in
inc
sahf
arpl
in
pop
popf
out
cmc
jmp
out
and
mov
push
sub
dec
mov
test
xor
inc
xor
inc
sbb
dec
cltd
and
dec
xor
gs
inc
pop
and
xor
es
push
push
cltd
sbb
push
xor
and
das
lcall
cmpl
ja
cmp
sbb
stos
and
and
fisubs
mov
adc
cltd
cmp
in
adc
and
xor
sbb
push
sbb
jmp
mov
and
leave
xor
sub
xor
xor
push
xor
xor
cmp
push
cmp
xor
inc
xor
push
inc
cltd
pop
inc
and
xor
push
cltd
inc
dec
and
xor
dec
xor
push
push
cltd
and
sbb
push
push
or
cltd
pop
cli
and
xor
fidivl
push
rcrb
xor
mov
cltd
imul
xor
push
xchg
cltd
jno
and
xor
jp
ja
jb
jns
and
xor
pop
xor
push
push
xor
adc
xlat
out
jmp
cmc
idiv
adc
add
adc
adc
sbb
xor
aas
xor
xlat
cmp
divl
cs
jmp
inc
stc
xchg
dec
adc
pop
push
dec
inc
inc
jge
inc
dec
inc
imul
gs
popa
pop
jno
imul
dec
jns
arpl
jmp
fldl
shr
fildl
inc
inc
inc
dec
dec
dec
dec
push
dec
push
push
push
fidivl
inc
cmp
inc
mov
or
adc
adc
enter
adc
stc
inc
pop
adc
cs
sbb
test
dec
pop
adc
bound
add
push
mov
adc
and
jge
jg
xchg
loopne
movsl
sub
imul
lahf
addr16
outsl
xor
pop
cmp
push
loop
mov
sub
xor
jo
sub
std
inc
inc
xor
inc
inc
aaa
cmpsb
popa
dec
adc
cmp
sbb
adc
adc
and
sbb
inc
cmp
inc
adc
inc
xor
dec
adc
mov
cmp
xor
inc
or
gs
and
sbb
push
add
adc
popa
test
adc
and
jg
ljmp
adc
ja
sbb
inc
fs
aad
popa
xchg
mov
adc
add
gs
lahf
imul
gs
push
bound
adc
testb
inc
sub
mov
insl
push
and
inc
adc
push
inc
mov
adc
arpl
imul
xor
cmp
addr16
pop
adc
cmpl
dec
pusha
adc
mov
adc
movsl
adc
pop
adc
lea
negb
jnp
xchg
mov
sbb
lods
adc
dec
sbb
adc
inc
das
cltd
adc
pop
inc
fwait
cmp
push
dec
xor
ljmp
sub
sbb
mov
mov
xor
push
push
inc
sub
adc
dec
xchg
cmpsl
adc
rcll
stos
inc
lods
sub
adc
sbb
xor
ljmp
mov
sub
xchg
arpl
ret
int3
jmp
inc
mov
fiaddl
adc
push
ss
jge
inc
loop
push
adc
mov
mov
shll
adcl
inc
imul
scas
adc
adc
push
jns
in
adc
arpl
xor
gs
adc
xor
xchg
xlat
jne
adc
add
fistl
mov
sbb
imul
ja
sbb
xchg
js
pop
inc
and
cmp
out
imul
or
cmpl
es
adc
lahf
repz
cmc
cmp
mull
stc
scas
sti
mov
adc
lcall
cmp
repz
cmp
pop
adc
inc
stos
pop
sbb
ret
jg
jg
mov
or
gs
mov
and
mov
inc
pop
xor
sub
adc
push
add
jo
movsl
inc
adc
mov
and
mov
adc
adc
cmpsb
dec
xor
inc
and
test
jg
jns
arpl
and
dec
push
imul
and
cmp
push
mov
sub
inc
inc
adc
dec
pop
cs
fbstp
and
push
xor
mov
xor
xor
jge
mov
mov
jbe
jns
cmp
cmp
sub
jae
lahf
pop
jbe
aas
inc
andb
push
dec
fidivrl
sub
xor
inc
popf
dec
adc
jno
sbb
inc
adc
jnp
adc
dec
dec
es
and
xor
dec
leave
and
sbb
push
mov
adc
push
sbb
adc
testb
and
xchg
arpl
push
aam
mov
and
sbb
and
addr16
mov
push
insl
xor
data16
sbb
jge
jg
insb
popa
scas
cmpsb
jg
lret
push
outsb
adc
sub
je
testb
jbe
dec
inc
sbb
dec
and
sbb
inc
push
jge
jp
mov
clc
pop
sub
jl
jle
outsl
pusha
adc
imulb
popa
and
and
cmp
adcl
dec
xchg
inc
and
sub
xchg
sbb
mov
mov
adc
and
inc
mov
adc
cmp
mov
jae
pop
pop
mov
shrl
nop
inc
push
xlat
adc
sub
adc
mov
pushf
sahf
sub
jge
and
movsb
test
cmpsb
pop
mov
int
gs
xchg
imul
scas
imul
sbb
arpl
xchg
mov
sub
xchg
mov
ds
mov
adc
mov
mov
cltd
pop
insl
xor
mov
xor
rcl
sub
sub
inc
jne
sbb
xchg
dec
push
push
xchg
dec
testb
fisubl
push
dec
xor
gs
sub
adc
jnp
cmp
inc
inc
jne
inc
inc
dec
dec
push
in
lret
push
dec
xor
sbb
into
sub
inc
shlb
adc
adc
cmp
dec
adc
adc
gs
adc
testb
dec
ficoml
fsubl
jge
aam
adc
pop
and
sub
call
adc
ljmp
out
xor
jns
sbb
inc
pop
sbb
imul
hlt
xchg
jnp
adc
or
lcall
cmp
jbe
cmpl
cld
adc
imul
push
xchg
jnp
dec
es
add
push
or
adc
add
inc
dec
adc
dec
adc
and
inc
test
add
imul
inc
pop
daa
mov
push
jg
gs
lcall
jnp
dec
pcmpgtb
xor
testb
push
icebp
fstl
inc
sbb
adc
mov
xchg
adc
pop
arpl
ret
inc
and
sahf
xchg
push
sbb
sbb
xor
pop
sbb
repnz
mov
adc
and
and
daa
or
loope
sub
push
loope
inc
adc
das
mov
adc
and
adc
outsl
cmp
cmp
sub
xchg
pop
push
cmp
sub
insl
addr16
jg
leave
pop
sbb
aas
sub
arpl
ret
jno
jne
mov
pop
inc
adc
push
inc
inc
adc
fwait
dec
inc
adc
dec
or
icebp
dec
adc
dec
pop
sub
push
sbbl
mov
loope
adc
push
or
xchg
push
adc
sub
adc
push
and
addr16
pop
int
arpl
mov
adc
cmp
inc
sbb
sub
xchg
push
push
inc
xchg
arpl
inc
jne
sbb
adc
in
sbb
dec
xor
imul
lahf
outsl
aad
push
cmp
mov
inc
sbb
jne
cmp
dec
gs
inc
push
jns
and
inc
les
jnp
push
adc
adc
arpl
popf
sbbl
test
jg
arpl
push
cmp
mov
lea
fisttpl
jne
jnp
xchg
adc
and
arpl
pushf
xchg
loope
popa
pop
adc
mov
adc
pop
mov
imul
cltd
cmp
jg
test
adc
inc
and
cld
cli
das
lahf
adc
dec
push
sbb
xor
sbb
aas
jge
jnp
add
cli
aad
xor
scas
sub
icebp
mov
inc
add
insl
das
jge
push
cmp
jecxz
pop
les
and
inc
das
jno
jge
sub
mov
xchg
nopl
jns
jns
bound
mov
sub
inc
inc
daa
push
add
arpl
fnstenv
mov
inc
stc
jge
aas
inc
lcall
push
xchg
cs
adc
cmp
dec
push
jecxz
test
faddl
xchg
push
test
and
push
dec
dec
jnp
lods
push
out
dec
cmpb
jno
addr16
adc
popa
sbb
daa
push
push
insl
jl
sub
icebp
popa
scas
adc
pop
inc
das
imul
push
aas
push
xchg
xor
popa
das
add
push
mov
add
aaa
adc
inc
sbb
jae
jnp
xchg
inc
or
inc
imul
and
fdivl
ja
aaa
inc
mov
cmp
xchg
sub
popa
sub
bnd
andb
aad
stos
push
sbb
adc
sbb
lea
dec
lret
imul
fisubrl
cli
outsl
xor
in
popa
mov
pop
sub
add
dec
xor
movb
pop
push
popf
mov
pop
leave
adcl
pop
dec
push
ljmp
pop
xor
popa
adc
jns
and
lcall
add
imul
aas
xor
rcll
xchg
adc
sub
pop
push
jae
push
jne
add
mov
in
jae
in
xchg
dec
lret
sbb
mov
xchg
sbb
xor
stc
subb
push
inc
xor
jne
inc
rcrl
cmp
jno
loop
and
aad
pop
mov
outsl
mov
aad
or
xchg
outsb
and
insl
popa
mov
xor
add
loope
gs
dec
xchg
sub
inc
shlb
jne
dec
and
sti
xor
movsl
jl
pop
pop
insl
xchg
and
inc
bound
sarl
xchg
sbb
test
mov
adc
subl
dec
popa
and
xor
pop
adc
adc
outsl
ret
or
cmp
push
add
cmpsb
pop
or
push
popa
in
add
in
jns
lds
and
inc
and
dec
dec
and
push
jbe
mov
jbe
xchg
sbb
pop
movsl
bnd
gs
xor
movsl
and
dec
pop
jne
pop
sbb
mov
sbb
or
lret
int
xor
sbbb
popa
xor
movsl
jp
add
dec
push
xchg
pop
jae
adc
push
fwait
dec
and
xor
mov
loopw
xor
repnz
adcl
rorl
aad
jg
lds
loop
sub
xor
sbb
mov
pop
pop
mov
jp
mov
stos
cmp
rcll
lret
push
push
jae
adc
sbb
push
sbb
fistpl
sub
inc
and
fucom
fistps
das
mov
stc
mov
lds
jp
cmp
xor
adc
mov
flds
xor
pop
jecxz
jbe
in
inc
je
push
pop
jmp
lea
sbb
test
fldenv
xor
jno
mov
inc
scas
ret
and
jae
enter
cmp
icebp
hlt
imul
pop
sub
mov
inc
jle
xchg
jecxz
mov
cmpsb
adc
inc
lcall
loope
test
pop
push
inc
stc
in
mov
dec
sbb
and
push
es
jmp
mov
imul
gs
adc
into
xor
mov
and
jb
inc
lret
and
sbb
inc
push
push
popa
outsl
pop
mov
test
mov
push
scas
xor
jbe
in
push
inc
adc
adc
shrb
cmp
pop
mov
je
push
in
aaa
shll
mov
imul
adc
test
mov
cmc
sub
push
jb
sbb
dec
xor
outsb
sbb
adc
insl
stc
inc
jp
push
or
movsb
aaa
in
pop
xchg
xor
sbb
and
sub
cmp
inc
sbb
ds
mov
adc
pop
cmp
mov
jmp
imul
adc
lret
fisubrl
cmp
and
add
dec
jbe
push
jle
sbb
call
push
ret
ficoml
pop
lret
mov
add
push
sbb
das
stos
ret
insl
xor
inc
imul
repnz
push
aaa
bound
lods
mov
inc
movsl
hlt
inc
pop
lcall
inc
and
ja
movsl
push
insb
push
call
sbb
leave
cmp
xor
mov
loope
add
lret
je
adc
push
aam
cmp
sbb
scas
cmpsl
adc
sarl
inc
stos
sbb
mov
add
and
jne
arpl
sbb
push
push
adc
shrl
pop
sbb
mov
in
fstps
xor
dec
mov
ret
mov
sub
push
sub
dec
cwtl
cmp
adc
xchg
adc
and
sbb
lcall
ficoml
bound
inc
arpl
dec
bound
pop
ret
inc
inc
add
sbb
and
adc
jo
sub
dec
sbb
clc
adc
and
mov
es
jne
dec
sbb
pop
ja
sbb
push
mov
pop
pop
xor
add
xchg
push
lahf
mov
movl
cmp
popa
and
ficompl
test
iret
cmp
mov
movb
and
sbb
jge
adc
inc
in
stc
int
loope
das
push
pop
std
cmp
cmp
jmp
lret
jnp
push
mov
dec
sub
adc
push
cmp
and
cmp
mov
das
sub
jae
imul
sub
and
popf
inc
aaa
pop
push
pop
dec
int
mov
cmp
mov
mov
jbe
mov
sub
adc
test
sbb
ja
aas
pop
sub
stos
cltd
push
mov
daa
pop
inc
adc
jb
jno
sub
cmpb
aad
aad
mov
cmp
push
ds
cmc
xchg
lret
sbb
insl
mov
add
push
jge
xlat
shrl
adc
xchg
movsb
push
pop
imul
xchg
stc
push
aad
ds
imul
xchg
inc
jle
movsl
jns
int
push
rcrl
adc
inc
cmp
xchg
mov
cli
xor
out
gs
and
loope
push
mov
stos
outsl
movsb
dec
fwait
mov
mov
lret
ss
insl
cmp
lret
xor
in
aad
and
sbb
jmp
shl
mov
sub
adc
pop
repnz
rorb
gs
cmpsb
mov
cmp
imul
pop
cmp
ds
mov
xor
pop
push
rclb
sub
pushf
leave
out
sbb
push
pop
outsb
pop
imul
rcll
adc
stos
cmp
jge
imul
imul
adc
cmp
lret
inc
and
test
sub
dec
dec
push
xacquire
push
pop
bound
roll
xchg
in
sub
nop
push
popa
mov
cwtl
mov
ja
test
sbb
dec
mov
mov
pop
std
pop
sahf
arpl
pop
mov
imul
jb
sub
mov
mov
dec
jge
sub
pop
das
in
inc
mov
pop
and
dec
cmp
cld
pop
adc
adc
dec
pop
cmp
xor
popa
adc
xor
cs
dec
jb
jb
mov
aas
cmp
push
xchg
and
int
bound
gs
push
sub
movsb
jb
mov
xchg
imul
xor
aad
shl
adc
xor
xchg
cmpsl
pop
pop
sbb
sbb
movsl
sbb
jnp
nop
push
lods
inc
push
popa
dec
outsl
adc
jns
imul
jns
jno
sbb
imul
cmp
loope
sbb
jl
xchg
push
jne
fisubl
ss
pop
arpl
cmp
jne
mov
outsb
cmp
out
inc
cli
mov
push
loop
xlat
sub
mov
fldcw
push
cwtl
insl
dec
mov
add
mov
push
sub
and
mov
sbb
xchg
push
out
mov
adc
jge
pop
mov
xor
adc
jno
dec
je
sbb
dec
ja
lcall
pop
adc
sbb
imul
imul
stos
inc
pop
sbb
push
stos
and
push
sbb
sbb
hlt
push
jae
jns
daa
ss
add
insl
aas
dec
pop
jne,pt
sub
sbb
sbb
mov
imul
sub
loope
pop
adc
sub
cltd
jle
push
mov
sub
and
xchg
pop
loop
in
pop
rcll
cmc
xor
jns
cwtl
popa
pop
mov
xchg
push
sub
xor
add
jle
xor
std
and
jno
jns
cmp
mov
stos
in
push
roll
movb
adc
xor
mov
push
sbb
push
and
cltd
pop
outsb
push
inc
dec
add
in
pop
mov
xor
fstl
adc
popa
adc
sbb
sbb
mov
pop
scas
jae
add
jb
leave
arpl
aaa
aaa
jne
xchg
dec
pop
pop
jbe
out
sbb
sbb
cmp
jne
sub
hlt
arpl
imul
orb
mov
mov
push
pop
and
and
jae
mov
in
mov
inc
sub
xchg
xor
icebp
push
rcrb
push
inc
outsb
or
mov
jne
outsb
sbb
xchg
into
stos
and
xor
in
imul
test
data16
pop
sbb
or
inc
jo
xor
stos
in
inc
in
and
xor
mov
and
jp
cmpsl
dec
sbb
in
mov
xchg
jb
shll
je
jbe
push
push
adc
cmp
xor
icebp
jmp
mov
popa
jb
jae
sbb
add
imul
popa
in
xor
inc
mov
shrl
inc
dec
inc
adc
mov
mov
and
dec
adc
pop
dec
ret
push
mov
cmp
cmp
cmc
sub
imul
add
iret
pop
push
pop
incb
xchg
js
xchg
mov
pop
sbb
push
jp
leave
xchg
es
xor
xorb
arpl
aad
movsl
dec
add
ljmp
jle
fcomps
addl
hlt
bound
sub
lahf
mulb
fidivrs
adc
dec
dec
movsl
andl
popw
cmpsb
lea
jnp
xchg
in
sbb
push
lods
addl
or
mov
pop
das
xchg
cli
and
xchg
in
ret
dec
aad
das
pop
sub
pop
rcll
pop
orl
mov
jge
xchg
inc
mov
cmp
cmpsb
cmp
pop
ja
outsl
aam
dec
inc
repnz
rcll
mov
mov
insl
inc
cmp
lds
leave
inc
nop
xor
sub
push
xor
xor
xor
into
xor
jno
jnp
xor
roll
cmp
dec
xchg
out
sahf
lods
popa
sbb
xlat
push
xchg
mov
mov
cmp
mov
lret
sbb
cmp
pop
adc
addr16
cwtl
fstp
dec
jecxz
ljmp
and
dec
popa
add
inc
lcall
jb
in
dec
sub
xchg
inc
xchg
inc
aam
inc
bound
sub
push
sbb
jno
pop
xchg
push
dec
pop
push
xchg
mov
stos
addr16
jns
sbb
jae
or
ret
sub
mov
and
pop
lret
or
inc
xor
ret
data16
sub
imul
sub
inc
je
jge
mov
lcall
mov
pushf
in
stc
mov
or
push
movsl
mov
xchg
adc
cltd
xchg
and
mov
mov
sahf
pop
ret
es
aas
mov
inc
inc
cmp
xor
nop
imul
sub
out
mov
pop
movsb
add
rcrl
push
stc
rcrl
mov
jne
mov
outsb
xchg
mov
and
sub
pop
push
ss
mov
jno
push
mov
loope
and
test
pop
popa
test
aaa
in
cltd
pop
mov
dec
adc
mov
inc
popf
jmp
ljmp
sbb
pop
sub
mov
das
mov
xor
cmp
jp
sbb
sbb
sub
cs
cmp
outsb
cltd
and
xor
jns
cmp
xor
push
xor
daa
jns
sbb
movsb
adc
and
popa
into
push
pop
xchg
inc
adc
mov
imul
addr16
fnstsw
int
outsb
mov
in
xchg
pop
mov
mov
push
cmpsb
add
push
lret
test
xor
jbe
pop
add
adc
sbb
fldenv
mov
stos
imul
fildl
jno
test
sbb
out
in
sbb
cmc
out
cmp
repnz
subb
jge
dec
xchg
pop
jg
jne
pop
cmp
and
pop
xor
sbb
sub
and
shll
adc
movsb
mov
mov
push
push
sub
jno
loope
mov
pop
adc
aaa
das
or
push
mov
mov
mov
mov
inc
dec
push
jmp
mov
push
pop
imul
movsl
sub
adc
mov
dec
push
daa
xchg
stc
outsl
push
scas
jae
popf
or
pop
pop
insl
add
pop
stos
pop
movsb
cmpsb
pop
pop
popa
lcall
inc
outsl
cmp
push
xchg
xor
leave
xchg
inc
mov
and
pop
adc
pop
and
jnp
cmp
loope
jns
mov
xlat
dec
je
pop
cmpsb
leave
jbe
cmp
sbb
stc
jne
roll
xor
sbb
dec
sub
out
punpcklwd
xor
xchg
bound
sub
pop
lcall
cmp
cli
sub
arpl
xor
cmpsb
xchg
sub
mov
ficoml
fdiv
mov
jmp
and
push
loope
outsb
aaa
sti
out
sbb
inc
rorb
cmp
sub
mov
cmp
jmp
test
pop
aaa
xchg
push
outsl
insb
xor
sub
xchg
popa
mov
addr16
stos
cmp
cmpsl
mov
xor
fs
icebp
gs
outsl
jns
gs
and
xchg
cltd
movsl
mov
xchg
mov
dec
xchg
lret
pop
xchg
scas
aas
xor
enter
mov
dec
fidivrl
xor
mov
inc
aam
fcompl
mov
cmp
mov
jecxz
xchg
out
sub
imul
dec
ret
push
xor
sub
in
pop
mov
pop
sbb
cmp
aas
ret
and
test
inc
daa
outsl
and
mov
sub
mov
xor
jns
sub
in
std
rcll
lods
cmp
jge
addb
mov
movsl
imul
outsl
sub
adc
push
ljmp
push
dec
aad
push
pop
inc
sub
cs
movsl
aaa
pop
xchg
or
arpl
fdivp
enter
sub
xor
je
jns
xor
into
lret
lods
aad
popa
pop
fisubl
and
mov
addr16
lds
sbb
xchg
jle
call
dec
and
inc
daa
mov
out
ret
jmp
test
xchg
cmp
icebp
and
leave
jge
das
gs
int
lea
pop
and
push
icebp
out
cld
cmp
fnstenv
stos
lret
icebp
mov
adc
outsl
xchg
or
dec
cmpsb
push
jecxz
pop
pop
pop
clc
loop
mov
sub
jnp
xchg
cltd
adc
xchg
adc
xchg
pop
outsl
push
cwtl
and
cmp
insl
imul
push
sub
mov
dec
jno
sbb
or
ret
test
xor
ljmp
leave
out
jns
sbb
adc
jmp
and
jae
negb
in
push
pop
daa
cmp
fsubp
jns
inc
and
dec
loope
jp
pop
test
dec
rorl
xor
sbb
sub
imul
or
insl
adc
pop
jae
bound
jno
dec
inc
test
push
scas
mov
and
dec
xchg
or
dec
nop
shll
add
push
sub
mov
sbb
dec
xor
fs
or
and
out
gs
push
sbb
sub
jg
xchg
adc
aaa
fs
sbb
jge
sbb
stc
push
enter
bound
pop
cmc
mov
sbb
repnz
sbb
push
int3
sub
pop
mov
fs
xchg
sub
mov
mov
ja
jnp
sbb
cmp
aaa
push
adcb
jl
hlt
dec
jle
and
and
pop
push
or
pop
sbb
in
fidivrs
jo
cmpsb
jne
or
dec
push
jg
push
xor
jns
push
sub
jns
and
xor
pop
sub
jae
xchg
jae
jge
cmpsb
pop
sbb
pop
push
dec
xor
jg
stos
mov
push
es
out
adc
and
mov
sub
push
jae
sahf
lea
dec
sub
cli
inc
out
jmp
inc
sub
sub
push
cmp
out
sub
pop
xor
push
mov
jl
popf
iret
pop
inc
sbb
jns
xchg
push
test
xor
ds
mov
gs
sub
push
mov
sub
jecxz
sub
jge
sbb
ja
push
xor
jg
sub
int3
inc
cmp
sbb
sbb
push
sbb
sbb
adc
stc
mov
inc
xor
jnp
push
sub
sbb
fldcw
mov
sbb
outsb
shrl
fwait
into
jnp
fcomps
inc
cmp
aaa
dec
xor
sub
inc
pop
sbb
mov
jp
sahf
mov
dec
push
jnp
aam
sbb
push
mov
xchg
xchg
in
ds
adc
dec
xor
jg
stos
xor
xchg
imul
bound
xor
sub
mov
lcall
dec
inc
pop
jp
or
pop
es
sbb
dec
sbb
movsl
xchg
push
bound
xchg
push
mov
and
push
fwait
push
xor
jnp
inc
fnsave
sub
loope
sbb
sbb
push
jb
push
jg
bound
inc
test
test
cmc
push
sbb
sub
jae
sbb
movsb
sub
sub
je
sbb
mov
fdivl
ds
sub
xchg
xor
cmp
lods
inc
and
xor
je
test
sub
dec
rcll
cltd
jg
add
mov
shrw
jno
imul
add
test
pop
push
in
xor
sbb
or
push
inc
test
sti
and
jo
xchg
aaa
loopne
pusha
sub
sub
inc
jb
cmp
sub
dec
sub
dec
shll
mov
arpl
imul
jp
xchg
stc
fdivrl
sbb
insl
sub
ror
and
inc
pusha
sub
add
jge
ds
jge
mov
adc
jecxz
and
aaa
insl
jbe
jle
push
sbb
and
cltd
jnp
push
pop
cmc
sahf
sbb
imul
sub
imul
push
inc
xor
icebp
dec
sbb
das
es
dec
push
sbb
pop
mov
pop
mov
and
cmp
test
sbb
push
iret
sbb
sbb
and
dec
sub
jae
inc
or
ljmp
out
and
push
xor
inc
es
icebp
ljmp
dec
or
push
cmc
dec
pop
cmp
les
adc
jle
xchg
imul
fstps
hlt
popa
jbe
lea
pop
sbb
test
mov
jp
cmp
xor
xor
hlt
mov
sbb
dec
push
stos
mov
push
inc
mov
es
xor
aas
stc
popa
test
iret
sub
push
movsb
jae
xor
lahf
pop
loope
mov
xor
pop
test
xor
mov
and
inc
sub
jg
sub
insl
movsb
add
jbe
aaa
outsb
pop
fidivrl
das
xor
jl
mov
je
xor
cmp
aaa
imul
test
xor
je
dec
inc
cmp
popa
fs
inc
aaa
xor
and
pop
dec
cmp
rorl
subl
mov
jecxz
ljmp
jg
cmp
pop
dec
xor
arpl
mov
and
ss
fisubl
dec
jp
push
mov
jns
and
cmp
ss
push
repnz
push
repnz
stos
xchg
mov
xor
sub
lea
popa
or
movsl
mov
inc
pop
xor
jmp
pop
pop
sub
imul
imul
aad
aad
adc
gs
mov
mov
sbb
ss
movsl
js
movsl
je
mov
push
sbb
inc
aad
sub
dec
sbb
shrl
ljmp
jno
pop
pop
jp
mov
sub
push
add
adcb
pop
mulb
pop
inc
push
popa
jae
imul
pop
add
push
jp
mov
fst
movsl
xor
or
xor
mov
sub
jge
test
adc
cmpsb
shll
jns
and
imul
and
in
mov
aaa
inc
jp
sbb
xor
cmp
add
lds
mov
mov
cmp
adc
pop
insl
mov
aad
and
imul
iret
sbb
test
ret
ljmp
mov
or
int
es
mov
add
push
in
in
xor
cmpsl
sub
in
and
add
add
sub
xchg
bound
xor
enter
aam
inc
int3
adc
fs
cmc
arpl
and
cmp
mov
and
and
xor
add
push
in
loope
es
in
stc
and
xor
icebp
xor
ja
xlat
push
and
cmp
cmp
arpl
push
and
cmp
lods
adc
adc
push
insl
shlb
jp
mov
mov
mov
sbb
imul
or
lret
or
loope
mov
je
mov
fcmovnb
adc
je
mov
cmp
nop
jp
and
leave
sub
xor
xor
in
push
adc
test
iret
loop
lods
mov
sahf
push
pop
xchg
inc
adc
mov
xor
lret
fsubrl
push
mov
rorl
xchg
mov
loope
mov
sbb
push
dec
mov
jnp
aas
xor
imul
inc
dec
stc
add
in
std
inc
negb
sub
repz
sub
shrl
mov
push
xchg
cltd
xorl
inc
mov
and
icebp
adc
xor
ret
push
mov
jb
bound
mov
cmp
xor
or
push
stc
or
iret
push
cltd
mov
and
xor
popa
xor
push
xor
ljmp
mov
pop
cltd
inc
sub
xor
mov
cltd
pop
cmp
xor
in
adc
lcall
inc
adc
rclb
xchg
push
cltd
cltd
fwait
popf
and
xor
movsl
xor
push
test
scas
xor
mov
mov
mov
mov
cmpsl
lds
imul
int
js
ds
scas
or
icebp
and
pop
cmc
mov
sti
cltd
std
jmp
xor
rcrl
aas
mov
xor
sub
iret
push
add
mov
sub
push
hlt
aas
mov
xor
sub
iret
push
add
mov
and
aad
fcmovnbe
mov
in
cwtl
loope
stc
cmc
mov
jecxz
std
dec
popf
jae
xor
jno
icebp
xorl
xor
mov
push
ja
jne
jae
dec
mov
scas
xor
js
mov
lret
out
cmp
and
push
xchg
dec
dec
aam
inc
icebp
pusha
cmp
xor
xchg
sub
rcr
jno
sbbl
adcl
fidivrl
ja
jne
push
outsb
fists
iret
and
scas
mov
jle
outsb
mov
stos
lds
lahf
ret
push
shll
mov
xorl
push
mov
scas
mov
test
cs
mov
mov
cltd
xchg
cmc
xchg
adcl
into
stos
fs
cmp
jecxz
pop
mov
pop
mov
cli
mov
mov
mov
or
dec
jns
xorl
popf
mov
int3
jp
fnstsw
std
mov
cmp
pop
enter
out
fs
pop
pop
ret
xchg
pop
mov
insl
sbb
les
ljmp
out
pop
mov
dec
std
jecxz
push
xor
es
jno
lret
push
cmc
xchg
or
inc
xor
fxam
jne
and
xor
outsl
sti
mov
lahf
sub
fsts
nop
jl
push
divl
rorb
xlat
or
xor
cltd
xor
sub
mov
xor
mov
add
bound
push
inc
cltd
sbb
xor
mov
cltd
idivb
hlt
xor
xor
icebp
and
xor
or
ljmp
out
xorl
xor
push
xor
xor
push
cltd
fsubrs
pop
aam
sub
xor
add
rcrb
xor
lret
push
enter
and
xor
ret
push
rclb
cltd
mov
push
mov
push
and
mov
mov
scas
xor
xor
xor
call
cltd
mov
and
xor
mov
cltd
icebp
sahf
sub
mov
lcall
jb
fstl
xchg
cmp
push
nop
push
repnz
cltd
mov
and
xor
jp
mov
cltd
xchg
and
xor
mov
cltd
jle
xchg
sti
jl
loop
jp
ret
xor
push
jbe
or
mov
or
jl
cwtl
lret
jecxz
scas
pop
lret
in
popa
repnz
or
and
out
repnz
scas
jp
in
inc
push
imul
stc
mov
mov
lea
jb
pop
add
rcrb
call
mov
call
adc
nop
add
test
jae
pop
stos
cld
xor
jp
in
mov
mov
cmp
out
ficoml
pop
das
int
jbe
mov
jns
rorb
jb
adc
mov
jp
je
dec
push
mov
mov
popa
nop
mov
jb
mov
pop
jno
sarb
sarb
jns
push
inc
leave
and
jle
push
or
enter
push
pop
push
push
push
sub
loop
cwtl
js
xchg
push
es
xor
and
mov
adc
mov
mov
and
cmc
mov
pop
bound
sbb
outsl
test
jp
mov
pop
mov
inc
adc
mov
int3
jno
mov
rcl
push
mov
addr16
arpl
mov
mov
incb
imul
mov
pop
fnstcw
push
cmp
xchg
movsl
imul
pop
xchg
fistpl
xor
mov
sbb
stc
xchg
add
and
sbb
cmp
mov
cmp
cmp
xor
xchg
nop
mov
cmp
mov
cmc
daa
mov
adc
cmp
out
cmp
push
jne
pop
dec
pop
xorl
cmc
scas
mov
xor
stos
push
xchg
movsl
scas
xchg
insb
je
fnsave
and
jno
sbb
mov
aaa
and
mov
jne
pop
inc
cmp
popa
sub
mov
cltd
and
or
push
test
push
arpl
sbb
jecxz
inc
cmp
xor
xchg
test
inc
adc
mov
jge,pt
test
mov
xchg
repz
fs
inc
not
adc
add
jno
ss
movsl
notb
mov
bound
push
fisubl
add
pop
sub
mov
imul
rol
sub
andb
ja
mov
add
jl
add
fs
imul
cmc
cmp
ss
mov
popf
xchg
mov
sahf
mov
xor
xor
xchg
sbb
lods
mov
imul
jae
mov
sub
jns
pushf
or
test
cmp
arpl
pop
ret
push
mov
pushf
shrl
mov
rol
xor
je
pop
movsb
arpl
aad
fsubl
mov
mov
ljmp
movsl
loope
mov
stc
xchg
push
cltd
pop
es
xor
sbb
loope
xchg
mov
xchg
xchg
jbe
cmc
cmp
jecxz
and
popl
fisttpl
inc
dec
sarl
mov
xchg
pop
out
jmp
jecxz
xlat
out
mov
mov
rcr
mov
fucomp
aaa
jbe
cmpsl
xchg
lcall
popf
sahf
xor
loop
lcall
add
and
gs
leave
nop
inc
jno
pop
bound
std
cmp
mov
loop
push
inc
xor
mov
xor
push
repz
mov
icebp
adc
sar
pop
lret
push
pop
cmpl
lock
jge
xor
shrl
nop
adc
sub
pushf
mov
pop
mov
inc
add
sbb
test
xor
and
js
popf
inc
daa
pop
fldcw
xchg
jne
sbb
pop
leave
mov
iret
cltd
rcl
and
aaa
adc
push
stc
xor
dec
push
cmp
push
sbb
mov
lods
test
loope
sbb
nop
in
sbb
cld
and
fstps
add
mov
out
and
daa
loope
cli
mov
int
sub
imul
sbb
or
jnp
ficompl
pushf
fwait
or
and
pop
jmp
xchg
xchg
out
mov
adcb
inc
ret
lds
jno
mov
inc
adc
aam
mov
xchg
and
and
stc
push
push
sbb
and
xor
xchg
icebp
adc
jnp
icebp
or
icebp
and
fdivrs
xor
das
xor
and
mov
xchg
aas
pop
jno
out
andl
adc
sarl
adc
push
xor
bound
aad
jno
and
add
ja
push
icebp
repnz
out
inc
loop
or
and
xor
mov
rcll
mov
lret
xchg
and
stos
sub
js
mov
jle
pushf
test
ljmp
mov
das
add
and
lcall
dec
dec
xchg
mov
xchg
xchg
and
jbe
xchg
inc
sub
add
and
sub
xor
or
icebp
push
jno
mov
mov
xor
mov
xchg
and
xor
xchg
pop
xchg
and
loope
rorl
dec
xlat
inc
fldenv
dec
cmpsb
fisubl
shlb
popf
popa
jno
imul
jo
fidivl
lahf
stos
or
mov
jb
adc
pop
cmp
loope
sub
push
cmp
adc
imul
sub
pop
mov
xor
jg
push
ljmp
mov
mov
test
test
cli
mov
arpl
or
sub
leave
addr16
cmp
mov
dec
cmp
jno
cmp
xor
dec
ja
push
sub
or
push
dec
es
push
mov
jns
shrb
mov
push
push
insb
cmp
xor
fcomps
push
test
stos
and
adc
mov
movsl
jp
and
jae
mov
cmp
jno
jbe
pop
push
or
xor
and
or
dec
cli
imul
ljmp
pop
mov
xor
stos
out
shll
xor
push
and
fwait
jns
add
es
sbb
mov
inc
inc
lret
aaa
add
jmp
mov
sbb
pop
mov
cmp
dec
add
movsl
xor
fidivl
add
mov
jne
sbb
cmp
sub
push
cld
test
mov
sarl
sbb
fildl
andb
inc
cmc
jmp
inc
lods
es
xchg
in
push
or
xchg
xchg
subl
neg
pop
cmpsb
pop
mov
cmpsb
mov
and
xchg
loopne
test
sbb
js
inc
fnstsw
cwtl
fisubs
popa
sub
cmc
fldl
adc
cli
mov
mov
scas
mov
push
negb
or
pop
js
mov
ds
rorb
filds
jb
notb
mov
cmp
fucomi
stos
sbb
adc
insl
cmpsb
adc
mov
insb
repnz
push
sbbl
jae
scas
fstpl
aaa
xchg
call
sahf
mov
mov
mov
arpl
movsl
je
push
aas
stos
fsubrl
popa
popf
xor
mov
xor
mov
jmp
out
pop
cmc
ret
ret
mov
sub
jecxz
not
aad
jecxz
icebp
les
std
pop
popa
xchg
nop
movsb
cmpsb
mov
pop
fimull
fninit
mov
and
incl
fld1
pop
mov
lea
icebp
mov
pop
je
test
and
clc
xor
cmp
adc
jp
push
xchg
sbb
cltd
cmp
aaa
mov
pop
jp
in
fdivl
and
adc
in
sarb
gs
inc
xor
sub
jmp
inc
pop
cltd
loope
push
pop
loope
push
mov
xor
cmp
cmp
xor
xor
dec
inc
fiaddl
lods
sbb
push
mov
addb
in
repnz
sub
jns
shlb
outsb
xchg
mov
push
pop
mov
mov
cmp
sub
cltd
pop
add
push
sbb
repz
push
jb
pop
push
ret
jl
xor
xor
adc
ffreep
push
sbb
push
jmp
mov
icebp
mov
in
xor
dec
add
lods
jp
sbb
cmp
jecxz
push
lods
cmp
movsl
jecxz
cmp
cmp
add
lret
jmp
xchg
std
xchg
inc
add
xchg
add
pop
cli
xor
push
mov
sub
cmpb
add
ss
mov
xchg
ret
out
aaa
pushf
mov
inc
bnd
mov
sbb
nop
mov
jp
xor
aad
stc
mov
sbb
fistpl
cwtl
nop
pop
sub
nop
and
push
outsb
movsb
xor
rolb
lods
bound
push
push
xor
jle
leave
push
sub
xchg
adc
pop
out
cmpsb
xchg
aad
ja
adc
mov
ss
mov
sbbw
push
mov
test
jecxz
mov
jecxz
pop
fidivrl
push
fisubl
and
into
jnp
dec
popa
xor
out
lods
xor
inc
add
jnp
mov
outsl
leave
lds
daa
inc
inc
popf
push
int
testb
mov
push
sbb
test
leave
jbe
scas
xchg
sub
js
inc
nop
mov
xchg
push
leave
push
jbe
mov
out
aas
xor
adc
pop
lcall
xor
push
cmpsb
neg
xorl
push
mov
test
inc
in
pop
cmp
enter
test
sub
push
and
xchg
xchg
adc
dec
and
jge
and
aaa
mov
xor
cltd
jno
and
test
repz
xchg
or
pop
jno
aad
cld
cwtl
dec
lahf
mov
jmp
cmpsl
xchg
push
test
mov
dec
push
cmp
or
mov
cmp
rcrb
outsl
inc
push
jg
push
adc
xchg
inc
dec
cltd
jp
test
and
dec
push
inc
call
inc
sbb
jecxz
or
mov
loope
mov
stos
jns
mov
mul
outsl
mov
fbld
inc
xor
jl
add
push
xlat
or
jb
add
mov
lcall
inc
inc
dec
fcmovu
arpl
cltd
jecxz
shr
out
fistpll
mov
mov
idiv
imul
mov
xor
mov
out
in
dec
xchg
iret
scas
popf
roll
ja
cltd
std
mov
aam
iret
xchg
sub
jbe
add
popa
cmpsl
mov
xchg
xchg
xchg
sti
stc
sahf
xchg
arpl
ret
jmp
jg
mov
xor
sbb
inc
cwtl
mov
mov
xor
mull
icebp
mov
or
and
jns
xor
test
xchg
inc
repnz
xor
mov
stos
scas
cltd
mov
or
pop
popf
loope
mov
fwait
lods
ljmp
cmp
adc
mov
cmp
adc
loope
fcmovnbe
fsts
adc
lods
add
pushf
xchg
mov
jg
fyl2x
sub
mov
push
vpsllq
inc
in
dec
adc
mov
pop
dec
cmp
push
jge
dec
add
notb
lods
rclb
or
loope
and
fstps
jp
cmpl
popa
xchg
or
dec
xor
mov
cltd
shr
cmc
fnstcw
mov
roll
loop
mov
loopne
div
adc
jb,pt
push
mov
jns
out
daa
scas
mov
jns
jmp
mov
outsl
mov
mov
rol
ss
cmc
mov
cmp
mov
cs
mov
stc
iret
in
cli
xchg
test
inc
arpl
popa
std
mov
cmp
mov
arpl
push
mov
sbb
pop
mov
loope
pop
in
add
sub
mov
xorl
test
es
and
jb
xor
push
jb
cmp
cmpsl
cmp
jnp
test
pop
fwait
dec
aaa
jmp
sbbl
sahf
shll
fsts
xor
negb
mov
test
jnp
xchg
add
fisttpl
inc
adc
mov
ss
test
jmp
and
cmp
dec
loope
mov
push
sub
mov
add
add
cmc
jge
mov
imul
in
jecxz
add
inc
pop
mov
inc
mov
shr
inc
mov
push
inc
and
push
cltd
xchg
pop
fwait
std
mov
inc
push
xchg
mov
and
and
and
mov
inc
pop
dec
cmp
dec
push
xchg
mov
mov
mov
push
std
mov
repnz
imul
add
popa
arpl
pushf
xor
shll
adc
mov
insl
push
nop
popf
jb
push
sub
pop
rolb
and
movsb
push
mov
push
xor
popa
rcrb
test
adc
dec
gs
xor
ljmp
fldcw
or
push
and
cmp
inc
mov
cli
push
subb
push
jecxz
and
mov
push
sbb
test
add
xor
xchg
sti
testl
scas
jmp
popf
cltd
xchg
jne
inc
and
imul
push
or
mov
push
rorb
mov
fucomp
pop
aas
adc
sahf
mov
dec
and
inc
jp
mov
sbb
and
loope
sarl
cs
sbb
inc
aam
adc
mov
sarl
pusha
or
and
adc
mov
loop
popf
adc
pop
sbb
push
pop
or
xchg
iret
push
sub
jne
and
pop
stc
mov
loope
rol
and
xor
jno
pop
push
push
cltd
dec
inc
and
xor
and
icebp
and
inc
adc
xor
shlb
push
mov
jno
inc
xor
pop
pop
mov
and
xor
cmp
and
xor
and
push
sub
and
cmp
das
inc
shll
cmp
and
stos
sbb
test
xchg
arpl
cmpsb
mov
fstpt
or
test
xor
cmc
push
sbb
jp
test
lahf
sbb
mov
mov
xor
xor
pop
icebp
mov
push
scas
inc
push
rorb
pop
sub
adc
pop
pop
adc
push
add
push
jg
cmp
and
push
pop
rcll
rclb
adc
dec
xchg
pop
cmp
adc
adc
and
xchg
fdivrl
mov
mov
fidivrl
inc
sbb
js
xchg
jnp
xor
sbb
int
xchg
std
iret
add
xchg
jne
mov
add
push
test
xchg
daa
test
sbb
mov
and
and
xor
xor
xor
ss
das
pop
pop
xor
add
pop
popa
dec
cmpsl
xor
mov
xor
repnz
xchg
inc
stos
xor
sub
hlt
inc
test
push
cltd
inc
loop
inc
inc
and
xor
cltd
mov
and
xor
add
and
push
add
or
xchg
or
cmp
lahf
outsl
sbb
adc
rolb
xchg
arpl
push
cmp
jge
sub
sub
cmp
or
arpl
icebp
add
hlt
inc
icebp
cmpsb
or
xor
inc
hlt
xchg
adc
loope
push
push
das
movsb
xchg
fcomip
sbb
mov
add
or
dec
sbb
dec
dec
sub
and
dec
sahf
cli
xor
xor
lret
push
mov
das
xor
mov
push
jp
xor
push
push
push
bound
xor
xor
push
and
xor
icebp
xor
push
loope
aas
shll
mov
mov
cmpsl
add
push
lock
adc
jmp
repnz
popa
jno
movsl
cmp
jne
and
pop
mov
and
sbb
mov
icebp
xchg
pop
and
ficoms
adc
mov
and
pop
cmp
inc
xor
push
pop
cltd
push
and
xor
out
and
insl
cltd
int
xlat
xor
push
xor
push
scas
cltd
adc
push
xor
lds
xor
cmpsb
xor
push
sqrtps
and
xor
cs
push
xchg
xor
jo
xor
cltd
int
and
xor
jle
mov
jb
mov
aaa
ret
loop
xchg
insb
push
cmp
xor
and
sub
lcall
jbe
xor
mov
ljmp
cmpsl
adc
xchg
cmp
adc
mov
and
jb
mov
jl
adc
data16
fimull
rcll
xor
pop
and
fwait
in
inc
jo
xchg
push
mov
imul
xor
adc
xchg
add
or
mov
mov
mov
cltd
xchg
loop
mov
and
sub
es
jns
xor
ds
push
mov
outsl
xor
jmp
sbb
push
or
jnp
daa
xchg
sub
pop
sbb
test
and
cmp
mov
shrl
sbb
adc
loope
rcll
add
mov
sbb
pop
and
add
dec
sub
mov
das
daa
and
xor
inc
cmp
inc
sub
jns,pn
push
in
mov
lods
adc
dec
jl
pop
bound
dec
jecxz
mov
or
pop
faddl
scas
inc
call
sarb
sbb
lea
adc
nop
push
cltd
in
adc
divl
lea
test
adc
mov
adc
sahf
shrb
in
adc
mov
out
pop
subl
rorb
cs
add
adc
data16
push
fdivrp
fcoms
stos
mulb
sbb
aas
add
fcomps
pusha
mov
movsl
push
cmp
mov
fldt
adc
inc
fcomps
sub
aas
sub
adc
xchg
std
movsb
mov
fisubl
addl
mov
sub
adc
or
push
push
xchg
mov
sub
xchg
ret
and
adc
fbld
add
pop
nop
lea
adc
adc
test
push
es
sti
pop
add
push
adc
and
sbb
adc
flds
inc
in
xor
mov
sarl
mov
add
lahf
inc
push
push
pusha
out
add
jmp
lea
call
xchg
push
fdivrl
and
sbb
das
ljmp
test
lcall
ss
mov
sti
dec
cltd
lods
cmp
inc
jo
into
filds
insb
dec
je
adc
pop
push
sahf
mov
xchg
jae
sub
dec
adc
mov
or
out
outsl
sub
pop
mov
sbb
add
pop
in
xchg
pop
out
bound
or
adc
popf
mov
adc
stos
push
mov
xor
mov
test
push
xlat
pop
xchg
jae
push
adc
mov
push
lahf
inc
adc
adc
xchg
and
and
pop
loop
push
pop
pop
xchg
sahf
sbb
inc
sti
jg
insl
test
ja
dec
mov
adc
mov
pop
and
pop
push
adc
jne
loope
xor
pusha
mov
cltd
ret
xorb
adc
fisubrl
jns
mov
outsb
scas
out
xor
sbb
into
adc
dec
dec
loopne
and
mov
sbb
push
inc
lods
cmpsl
fcmovnbe
or
xor
sbb
into
adc
mov
sbb
pop
ret
push
icebp
dec
jmp
jb
icebp
outsl
xchg
cmp
pop
icebp
lahf
not
mov
mov
sub
inc
mov
push
inc
inc
cmpsl
cmp
icebp
idivl
stos
cmp
in
scas
cmp
sbb
jbe
mov
cmp
mov
loopne
sbb
sub
cmp
push
mov
dec
sbb
cmp
fs
push
sbb
add
xchg
jno
add
ja
div
push
push
jns
aaa
or
jae
or
int
xor
or
xchg
sahf
movsb
orl
adc
jno
xor
xchg
iret
xor
push
mov
cwtl
cmp
adc
sahf
sbb
icebp
repz
mov
or
push
fmull
jmp
adc
xor
pop
stos
aaa
and
add
inc
inc
xor
xchg
enter
lcall
cmpl
pop
inc
icebp
push
mov
pop
in
inc
xchg
inc
or
mov
adc
cmc
cmc
mov
shll
sbb
or
sbb
ffree
popf
cli
sbb
fildll
leave
xor
and
pop
out
cmpsl
ret
jmp
mov
addl
sahf
xchg
push
push
sti
movsl
push
sub
inc
sub
dec
and
xlat
rcl
pop
adc
mov
outsl
aad
xchg
in
mov
mov
jae
xchg
stos
and
imul
jns
cmp
jnp
sti
push
in
cmc
ret
jb
adc
cmp
sub
xor
mov
pop
fxam
push
mov
push
xor
pop
jmp
cmp
out
xchg
fs
in
data16
xchg
sbb
out
pusha
xchg
cwtl
xchg
cmp
movsl
dec
and
sbb
lahf
jg
dec
lcall
xorl
xchg
fsubs
push
cmpsl
xchg
jns
pusha
js
stos
jge
outsl
sbb
scas
jae
sti
xor
mov
cltd
std
mov
jno
and
sbb
cmc
sbb
and
and
sub
cmpsl
sub
cmp
push
and
test
test
add
pop
sbb
pop
add
mov
insb
out
adc
xchg
jne
jp
popa
pop
sbb
orb
push
inc
in
sbb
sub
mov
call
cmp
hlt
pop
cmp
jae
shlb
cmp
shrb
cmp
das
fidivs
add
in
pusha
xor
lahf
mov
or
js
jp
icebp
fldcw
mov
push
add
loopne
lock
std
std
test
outsb
fidivs
inc
fwait
dec
lret
lret
and
pushf
mov
pop
test
daa
xor
jns
in
clc
dec
inc
lea
add
loop
es
test
repz
adc
dec
test
repz
in
xchg
push
xchg
lods
fs
jb
sub
add
inc
xorb
enter
fadds
int3
xchg
test
fwait
sbbl
pop
mov
cmp
es
movsl
jle
mov
shrb
aam
ret
jmp
xchg
addr16
jns
testl
test
call
fs
mov
push
insb
sbb
mov
lcall
aaa
xchg
jo
mov
mov
pusha
jnp
xchg
aaa
mov
mov
jmp
fiadds
dec
dec
fsts
insl
loop
cmpsl
arpl
dec
rolb
sub
push
pop
repz
outsl
fildl
push
pand
cmp
mov
orl
xchg
jl
mov
jnp
testb
outsl
mov
pop
movsl
mov
pop
dec
or
jp
push
gs
mov
fs
repnz
dec
aas
add
mov
inc
out
cmp
jne
sub
and
or
pop
adc
test
inc
fcompl
xchg
mov
jg
pop
xchg
and
lahf
push
movsl
repz
pop
mov
fsubl
clc
repnz
push
inc
out
jg
in
sub
in
cmp
mov
pop
cmp
inc
sub
mov
mov
aam
cmp
lret
and
dec
outsl
arpl
adc
cmp
and
ss
iret
pop
fldl
mov
jnp
mov
dec
mov
loop
ret
mov
stos
sbb
mov
gs
gs
or
sub
mov
sub
mov
sub
scas
scas
ljmp
jns
jle
push
jo
add
cmp
pop
jne
sbb
add
es
mov
cmp
add
cli
or
cmp
push
incb
jbe
das
outsb
sbb
jmp
cmp
fldl
jl
sub
add
cmc
cmp
roll
or
icebp
or
cld
in
push
lea
sbb
in
mov
dec
fcomps
adc
pusha
xor
jecxz
and
popa
pop
cltd
rcrb
movsl
in
dec
push
lret
sbb
jbe
sbb
or
fsubrs
mov
pop
int
sbb
and
scas
clc
pop
or
int
into
stc
dec
adc
fcmovu
and
das
stos
cmp
or
pusha
sti
jnp
call
mov
dec
int
or
jmp
call
jmp
xchg
mov
faddl
xor
dec
dec
icebp
rcl
and
pop
in
xor
les
into
cli
addr16
xor
inc
enter
ret
xchg
jo
in
xor
xchg
daa
leave
sub
adc
pop
loop
add
ret
std
and
adc
scas
sbb
push
inc
mov
push
aas
into
les
cmp
jmp
jge
mov
out
shr
sub
push
mov
xchg
and
add
imul
or
add
and
jecxz
and
adc
add
and
xor
sbb
add
and
jne
xor
and
add
and
and
and
sub
add
and
xchg
add
add
add
add
add
add
add
add
add
add
shlb
inc
or
add
add
add
add
add
sub
add
add
add
add
add
add
xor
push
or
add
add
add
add
add
or
add
add
add
add
add
repz
or
add
add
add
add
add
or
add
add
add
add
add
int
add
add
int
add
imul
jl
add
add
inc
push
fiadds
stc
cmp
jae
shlb
test
xor
int
lahf
mov
loopne
ja
pop
lds
scas
cmp
and
testb
popa
out
and
push
btc
pop
aaa
scas
sbb
mov
lcall
xchg
mov
imul
lahf
adc
sbb
xchg
sti
in
in
mov
mov
dec
and
jge
stos
stos
mov
into
fnstsw
lds
test
int
insb
cmp
cmc
cmp
movzbl
lahf
jmp
pushl
lea
ja
and
call
imul
pushf
add
mov
lea
jmp
adc
pushf
lea
jae
call
rep
bswap
not
lea
mov
pushf
lea
jmp
ss
flds
sub
mov
sub
lock
or
push
xchg
and
xor
lods
aaa
inc
and
inc
test
dec
adc
lock
adc
in
xor
push
mov
push
dec
lds
pop
adc
add
je
jo
outsb
inc
imul
add
mov
add
or
in
fildl
push
stos
push
lahf
pop
ret
movsb
ja
adcl
movsb
adc
das
adc
gs
lods
repz
pop
test
or
and
push
xlat
push
or
out
inc
or
adc
sbb
mov
cmp
jbe
movsb
push
lock
test
fmull
scas
arpl
sbb
push
je
movsl
or
loope
rcrb
sub
orb
insl
rcrl
pop
fmull
nop
and
sbb
jmp
in
leave
aaa
inc
psubusb
add
add
sahf
mov
pop
jl
fistpl
mov
lret
sti
test
pop
dec
insb
inc
out
dec
movsl
and
sbb
fcoml
adc
xchg
sarb
jb
movsl
data16
mov
pop
xor
fnstsw
xchg
shl
jno
sti
ficompl
lds
sub
pushf
in
mov
jne
fisttpll
mov
cwtl
cmp
push
inc
jae
pushf
xchg
pop
ss
cmp
mov
mov
pop
xor
mov
rclb
jnp
cmpsb
push
shrb
in
cwtl
jns
adc
and
and
cltd
mov
fdivr
jmp
scas
sub
scas
push
mov
push
das
jb
dec
mov
mov
and
mov
cmc
jle
andb
xchg
mov
arpl
test
mov
aam
adc
adc
add
mov
mov
stos
cmp
push
repz
rol
add
loopne
adc
xchg
outsl
sub
leave
fs
cld
push
adc
mov
push
jne
inc
and
mov
call
inc
sbb
mov
inc
arpl
xchg
xor
pop
fidivrl
add
mov
dec
scas
andl
mov
sahf
leave
scas
shlb
dec
dec
dec
xor
dec
cmp
mov
push
int
jnp
add
mov
ficoml
xor
mov
pop
les
cmp
andb
dec
imul
mov
pop
add
bound
stos
out
mov
fs
test
in
sub
outsl
or
cmp
sub
fiaddl
aad
cli
pop
ds
adc
idivl
aad
aas
xchg
lret
inc
xchg
push
lock
inc
or
sbb
pop
mov
mov
clc
pop
jg
mov
jnp
push
dec
mov
pop
pop
cld
aaa
mov
shrw
xlat
pusha
repz
shll
jbe
inc
enter
or
xchg
mov
shlb
dec
mov
dec
or
or
pop
jb
jl
jmp
jb
pop
sbb
jg
sbb
cmp
int
popa
arpl
jae
add
testb
test
xchg
lds
xchg
cmp
imul
mov
mov
xchg
push
stc
movsl
divb
mov
xchg
sub
xor
cmp
fcomip
sar
rcr
sar
mov
cmp
cmp
clc
repnz
push
lea
jne
lahf
cwtl
push
movzbw
movb
pop
push
mov
sete
mov
movzbl
lea
call
outsb
push
cwtl
in
in
pop
and
insb
mov
jmp
popl
pop
xchg
in
pop
hlt
mov
arpl
push
or
mov
inc
inc
out
dec
jg
and
lret
pop
jmp
sub
fcomi
xchg
mull
loope
inc
xchg
mov
lods
leave
xchg
xchg
jnp
ljmp
sbb
jl
and
sub
popf
mov
int3
inc
repz
mov
xor
fstcw
or
inc
push
rep
es
cs
push
mov
frstor
insl
in
in
jno
inc
mov
shrb
subl
bound
pop
ss
iret
jb
cwtl
cli
xor
sbb
mov
xlat
fidivrs
fcmovnb
ljmp
test
aad
cmpsb
inc
inc
push
repnz
xor
hlt
cli
inc
cmp
lret
cmc
je
mov
insb
repz
xor
mov
mov
dec
and
int3
xchg
daa
adc
aam
dec
flds
or
pop
adc
rorl
sti
jnp
pop
cmc
or
lea
int
addr16
pop
sbb
dec
jbe
inc
lods
pop
dec
adc
addr16
sbbl
mov
outsb
xor
gs
in
stc
mov
add
adc
xchg
mov
push
mov
xchg
sbb
cld
sub
test
mov
fnstenv
inc
mov
or
pop
push
imul
xchg
jg
lcall
rcll
inc
in
imul
in
stos
jnp
lret
in
xchg
leave
xor
pop
mov
mov
add
in
shlb
mov
inc
jo
mov
scas
sti
in
rorb
imul
in
jbe
subb
adc
or
repz
shrl
mov
add
and
roll
xchg
fisubs
and
sbb
jb
sub
push
sub
add
add
sub
xchg
bound
hlt
push
lret
jns
cmc
push
jbe
enter
ljmp
mov
scas
aas
pop
or
mull
ja
andb
pop
insb
push
push
push
jp
or
add
mov
cmpsl
loope
fimuls
int
negb
fiadds
lods
xchg
fstl
call
sbb
cmovge
popa
movsl
lods
lds
dec
dec
push
jo
jb
push
add
lahf
mov
push
ret
ret
jmp
push
push
pop
js
test
mov
jmp
lahf
loope
adc
mov
inc
mov
mov
hlt
mov
orb
inc
stos
mov
sbb
idivb
popf
cmpsl
add
push
push
mov
outsb
mov
xchg
cmp
pushf
dec
bound
add
dec
mov
out
dec
inc
sbb
sub
jae
out
in
cmpsl
movl
hlt
mov
mov
pop
sub
int
in
sbb
and
pushl
dec
faddl
add
mov
shr
cmp
movsl
cmpsb
in
call
mov
add
gs
jecxz
dec
in
subb
clc
cmp
mov
int3
xchg
sbb
imul
cmp
out
mov
fbstp
call
bound
dec
loope
in
sub
add
push
cmc
jnp
je
mov
mov
xor
scas
xlat
xlat
test
fs
push
dec
inc
and
add
mov
ja
int3
das
xchg
mov
pop
nop
scas
lds
arpl
mov
cmp
add
jge
aam
pop
fwait
cmp
sbbl
push
mov
push
out
mov
pop
sbb
add
in
sti
imul
jl
data16
jnp
outsl
pop
xchg
lds
sub
mov
mov
jb
scas
inc
mov
cmp
mul
test
imul
and
sbb
fsincos
test
pop
dec
add
movsl
cld
add
jmp
ficomps
lds
int3
mov
push
xorl
mov
cmpl
push
add
and
adc
dec
jbe
js
in
push
push
cli
pop
sbb
add
push
push
jno
jp
push
mov
pop
cmp
call
mov
xor
test
das
cmc
and
dec
jle
push
push
xchg
fdivr
and
jno
cmpsb
fildl
ljmp
sub
sbb
es
xor
add
pushf
mov
xlat
or
xor
push
lret
aas
data16
xor
fs
pop
inc
fs
cwtl
out
lahf
sub
imul
mov
in
outsl
push
xor
pop
or
add
pop
mov
xor
ds
rcll
sbb
mov
int
in
stos
call
movsb
pop
inc
pop
inc
cld
cmp
rcrl
cmp
push
or
push
ljmp
push
mov
sbb
sbb
mov
popa
pop
cwtl
sub
inc
xchg
push
pushf
in
add
dec
test
loope
scas
mov
fdivrl
int
or
outsb
fnsave
sub
lahf
xor
fisttps
loope
push
sbb
sbb
notl
and
mov
push
inc
push
dec
xor
cs
insb
add
in
cld
cmp
inc
outsb
pop
and
out
or
or
test
mov
or
inc
jmp
adc
fdivp
mov
pop
sbb
mov
fs
xchg
push
mov
lret
add
scas
int3
arpl
inc
test
daa
loope
mov
push
lahf
mov
stos
pop
mov
cmp
aaa
test
out
dec
jbe
lret
jmp
mov
cmc
lea
and
xchg
loop
hlt
pop
sbb
inc
push
outsl
jmp
stos
popa
js
stos
mov
mov
dec
insl
loope
sub
test
aaa
lods
jb
xor
popl
das
sub
mov
gs
ds
out
mov
icebp
push
dec
jo
cmp
mov
repnz
mov
pop
fcmovnbe
push
insl
data16
adc
xchg
add
or
sub
and
loopne
mov
add
mov
repnz
punpckhbw
dec
loope
or
ja
xchg
cwtl
xor
sub
and
sub
pop
sbb
sub
sbb
stc
and
push
sbb
inc
das
sbb
lret
in
adc
adc
das
push
push
and
mov
jno
push
mov
icebp
xchg
gs
test
popa
jne
mov
imul
and
push
out
pop
xor
inc
popf
add
sti
xchg
loope
mov
pop
and
andl
fs
mov
push
scas
and
lret
cwtl
xchg
mov
xchg
and
sti
mov
movsb
stc
sbb
adc
and
test
xchg
stos
adc
jg
adc
and
inc
shll
inc
xchg
loop
dec
xchg
adc
pop
pop
xor
push
xchg
or
mov
lds
mov
push
adc
stc
cmp
jae
xchg
adc
xchg
dec
ret
fsubs
push
insb
fnstsw
int
mov
test
lcall
movsb
dec
dec
gs
popa
daa
loop
pop
cwtl
pop
inc
cmc
ret
cmpsb
test
sbb
es
and
dec
lea
push
les
and
fcomi
jbe
das
daa
icebp
andb
push
stos
repz
sub
sbb
xor
mov
xchg
xor
lret
mov
cmpsb
xor
mov
pop
push
adc
ja
or
mov
push
push
ljmp
lret
mov
mov
inc
adc
and
test
adc
jg
push
or
lods
cld
mov
mov
sub
adc
inc
into
sbb
fwait
loop
push
test
stos
das
sbbl
int3
das
pop
mov
pop
call
add
pushf
jmp
xchg
sbb
adc
pop
xchg
shll
inc
das
and
sbbl
adc
cmp
mov
xor
cmc
pop
arpl
cmp
push
out
in
lahf
or
and
cltd
pop
js
movsl
xor
in
sbb
mov
add
popa
mull
cmp
pop
outsl
xchg
or
scas
clc
cld
cmp
lret
enter
dec
lret
arpl
imul
or
addr16
cli
push
clc
jge
pop
xor
and
test
loopne
or
imul
lcall
out
add
aam
inc
dec
xor
gs
out
cmp
and
imul
or
push
xchg
out
mov
testl
push
lahf
jne
mov
adc
and
adc
inc
or
hlt
pop
or
and
jne
push
cli
sub
repnz
xchg
jp
repnz
sbb
clc
jno
and
dec
in
js
and
mov
mov
sbb
jmp
ss
sahf
adc
test
xchg
es
adc
mov
sub
xchg
mov
ss
xchg
shll
mov
or
xchg
or
dec
lret
or
xchg
adc
packuswb
cwtl
mov
jne
gs
xchg
xchg
xor
adc
pop
cmpsl
mov
adc
sbb
repz
imul
pop
daa
loop
repnz
pop
mov
jnp
or
andb
sahf
pop
test
or
cmp
out
repnz
mov
test
mov
addr16
loope
test
fwait
ret
aas
mov
sti
xor
xor
imul
pop
mov
xor
and
xchg
mov
adc
xor
or
and
bsr
lock
fisubl
sbb
lock
sbb
div
and
imul
jne
add
mov
out
jns
arpl
xor
jp
out
mov
in
cli
push
stos
out
hlt
insb
pop
cmp
call
mov
out
out
push
cli
mov
push
repz
inc
cmp
shlb
popf
repnz
pop
and
and
pop
das
and
inc
aaa
loop
in
arpl
mov
and
push
js
in
pop
sub
add
sub
movsl
cs
popa
lea
es
xor
jb
popa
sbbb
cltd
cmpl
lret
data16
jno
and
loope
pop
mov
jnp
xchg
das
in
mov
and
lret
repnz
mov
xchg
mov
mov
xchg
movsl
add
lods
repnz
xchg
add
addb
cs
jb
mov
xchg
in
lods
xor
push
sub
popa
inc
inc
imul
dec
jmp
mov
cmpsl
ljmp
sbb
cmp
or
repz
and
ds
aas
xor
stos
push
cwtl
ret
lods
scas
fs
cld
jmp
xchg
pop
jae
xlat
pop
ljmp
gs
mov
sbb
xor
call
cmpsl
jnp
frndint
mov
xchg
call
lock
add
out
or
push
lods
out
xor
in
int
or
add
in
xchg
daa
xor
in
and
lahf
xor
jge
sbb
jo
icebp
xor
stos
addr16
xchg
sub
cli
aaa
dec
mov
push
or
subb
lahf
imul
xor
xchg
rol
sub
push
sub
add
mov
and
in
fiadds
push
xchg
jo
pop
mov
xor
sub
arpl
sti
lock
ja
push
pop
faddp
fisubs
iret
jp
pop
les
or
jmp
cmp
gs
xchg
jg
jge
push
fwait
xchg
fsubs
mov
inc
xor
ljmp
sbb
pop
loop
jb
addr16
int
mov
icebp
ljmp
subl
xor
cmp
or
inc
aaa
icebp
dec
xchg
arpl
push
lahf
or
push
adc
adc
mov
decb
mov
mov
sbb
jg
lock
xlat
mov
std
movsl
repz
inc
xchg
fcmove
push
mov
mov
cltd
or
and
repnz
push
sub
jmp
ss
add
inc
mov
xor
and
add
jbe
pop
bound
or
pop
imull
xchg
cmp
jae
and
and
repz
sti
popa
stc
adc
rcll
xchg
pop
jbe
or
sbb
sbb
fnstenv
and
pop
test
mov
mov
xor
sbb
fdivs
movl
stos
aaa
iret
sbb
sbb
in
lret
mov
cld
sbb
sbb
aam
ret
jge
fstps
insl
xor
loopne
xor
sbb
loop
or
repnz
andb
push
add
xor
pop
adc
aaa
in
inc
dec
rol
aas
out
test
fimuls
ljmp
adc
je
out
aas
sbb
rcll
loop
movsl
push
mov
movsb
sub
xor
arpl
addr16
inc
pop
insl
mov
mov
aam
aad
aam
cltd
xor
stos
jno
fwait
add
xchg
sub
inc
or
pop
push
add
jle
movsl
inc
stos
sbb
xor
pusha
xlat
sarb
mov
dec
fs
jns
push
pushf
ret
rorb
es
lret
cltd
cmc
stos
cmp
and
sarb
popf
lcall
and
or
jbe
stc
xor
pop
push
movsl
mov
sahf
mov
pop
es
mov
stos
dec
fcompl
mov
sarb
xor
je
shlb
sbb
sar
lock
test
xchg
inc
aam
jmp
in
push
mov
mov
shlb
cmp
mov
and
repnz
jle
movsl
sub
das
push
movsl
ljmp
lea
into
xchg
mov
loopne
or
and
add
adc
int
push
aas
pop
lock
inc
sub
sub
int3
loopne
sbb
out
push
adc
repnz
inc
mov
xchg
cmpsb
daa
repnz
pop
dec
xor
andb
xor
cmpsb
rolb
sub
mov
shl
push
jl
add
push
sbb
mov
loope
ret
cmp
sti
jle
shld
sbb
cltd
icebp
loope
andb
in
jae
cmpsl
mov
and
ds
xor
jmp
stos
push
or
mov
and
in
inc
xchg
inc
pop
nop
or
mov
jp
loop
popf
pop
sbb
test
pop
lock
xor
mov
enter
xchg
mov
push
mov
mov
cmp
ret
push
add
xchg
ret
outsb
dec
mov
fs
test
mov
jge
into
xor
data16
xor
sub
sbb
mov
xchg
xchg
cmp
rclb
add
sarb
pop
addr16
push
ss
ja
cld
roll
lea
das
or
les
in
xlat
jg
jp
frstor
pop
mov
inc
and
push
push
insb
hlt
mov
dec
cs
shll
das
sbb
dec
or
jecxz
lods
dec
rcll
sbbl
imul
adc
mov
loop
add
ljmp
jno
std
stos
xchg
ret
je
jo
addr16
iret
cmp
ret
xor
pop
inc
jmp
push
dec
add
push
popa
lahf
mov
gs
lock
movsl
xchg
jl
mov
rep
lcall
cltd
adc
adc
pcmpeqb
lods
xchg
lcall
xchg
or
xorl
mov
cld
mov
mov
cmp
pop
jmp
cwtl
lds
int
or
fdivr
cmpsb
mov
xchg
fidivl
xchg
sub
jns
mov
sub
into
lcall
dec
das
push
cmp
mov
add
sub
lds
test
and
inc
shrl
or
sbb
les
mov
xlat
jno
xor
adcb
sub
jp
xchg
sbb
adc
insl
sub
ljmp
mov
movsl
sub
addr16
es
cmp
hlt
or
lods
mov
mov
mov
xor
repnz
sub
inc
mov
popa
mov
loope
popf
xchg
xor
xor
mov
movb
jnp
cmp
imul
into
add
inc
dec
ret
xchg
arpl
mov
xor
cmp
dec
sub
sbb
cmc
add
es
in
insl
repnz
loop
sub
adc
push
loop
repnz
mov
movsl
movsb
jnp
push
dec
cmc
push
aam
and
mov
xor
xchg
push
dec
or
adc
aaa
clc
mov
mov
or
push
in
xor
lods
xchg
pop
mov
xor
fidivl
adc
mov
xor
mov
inc
outsb
push
sub
hlt
mov
and
mov
mov
jge
cli
loop
repnz
scas
push
rcrl
or
jle
loop
pop
ret
fldcw
push
jo
xor
pop
ss
jne
cmp
pop
out
ret
mov
mov
adc
inc
mov
test
mov
cmp
loop
pop
gs
lahf
xchg
push
lret
fidivl
push
sbb
rolb
mov
mov
movsl
jecxz
push
pusha
in
dec
cmp
dec
test
cmc
jae
out
mov
add
cmp
and
into
test
pushf
pop
xchg
and
ss
dec
xor
scas
sub
loopne
xor
and
add
adc
xor
push
cmpsl
adc
pop
sbb
scas
mov
je
test
mov
mov
mov
jge
lods
sbb
les
frstor
cmc
xchg
adc
imul
jg
or
fisttpl
inc
sbb
mov
cmp
lea
cmp
pushf
jnp
cmc
xchg
push
pop
data16
cmp
xor
js
xchg
popf
lcall
loop
loope
iret
mov
pop
int
es
mov
pop
popa
sbb
loop
lods
cmpb
dec
ds
enter
lret
mov
sbb
inc
fcmove
add
daa
loop
push
cwtl
pop
stos
and
in
adc
mov
loop
mov
mov
mov
xchg
push
mov
neg
data16
or
push
das
push
shrb
jne
lahf
add
mov
dec
mov
or
sbb
in
sub
int
xor
sbb
dec
xor
mov
mov
xor
pop
or
sar
scas
xorl
inc
mov
push
mov
iret
shrb
mov
xor
and
jg
and
adc
jmp
imulb
test
in
dec
cmc
xchg
dec
push
mov
loop
pushf
pop
test
andb
dec
in
gs
xchg
pop
test
scas
pop
add
pop
jns
enter
jae
dec
and
jns
mov
jae
mov
and
aad
adc
mov
and
ret
aam
jne
lcall
addr16
and
inc
aad
addb
add
pusha
cmp
add
and
lret
rcrl
and
fldt
test
dec
loope
int
adc
rorl
cmpsb
sub
cmp
scas
in
out
mov
out
into
lods
pop
jl
movsl
hlt
cmpsl
push
cli
repz
scas
mov
js
push
cmp
movsb
jo
out
andb
and
icebp
mov
adc
or
sbb
loope
jmp
xchg
sub
xor
fisubrl
popf
cmpsl
xchg
jb
inc
mov
ret
punpcklwd
cmp
mov
out
cmc
cs
enter
dec
ret
inc
int3
mov
pop
dec
repnz
adc
stos
push
mov
jo
imul
ret
push
popa
cmp
mov
std
in
icebp
pop
aad
mov
mov
mov
rol
shll
mov
cmp
push
inc
sub
mov
mov
xor
movsb
test
mov
jns
mov
fwait
push
ljmp
xchg
mov
and
mov
fdivl
and
mov
sub
rcll
cmp
xor
cmp
inc
mov
sbb
loope
inc
fstps
cs
push
add
xor
cs
das
cmc
sarb
and
sahf
xorps
fistps
add
pop
jge
vpshlw
sub
mov
mov
xchg
pop
lcall
orl
inc
push
lds
dec
sbb
addr16
fistpl
lcall
or
stc
xchg
cwtl
xchg
xadd
push
jns
fisttps
mov
icebp
cld
xchg
cs
xor
lds
sbb
jge
push
xor
pop
and
xchg
xchg
jns
mov
pop
out
and
xlat
and
and
jecxz
push
cltd
in
mov
jnp
cmp
lahf
xchg
sub
lock
call
xchg
jmp
cli
cld
sbbl
aam
rcrb
jmp
sbb
mov
or
xchg
mov
notl
dec
push
fsts
stos
inc
outsl
sbb
adcb
pop
xchg
stos
ret
jae
inc
leave
cli
mov
pusha
arpl
ficompl
inc
in
sub
jns
cmp
xor
aaa
push
sub
gs
imul
xchg
dec
dec
movsb
xor
je
jne
sub
test
pop
mov
mov
loope
sbb
push
xlat
xchg
dec
jbe
movsl
xchg
repz
inc
dec
aad
xchg
orl
cmpsb
icebp
sbb
xchg
nop
insl
sub
mov
loopne
mov
mov
xor
mov
xchg
loop
mov
xor
nop
pop
mov
dec
pop
loop
dec
in
pop
add
lods
push
in
cmp
lea
push
mov
xor
push
jmp
adc
mov
enter
lret
shrl
lret
jbe
inc
shrb
repnz
mov
test
aaa
mov
pop
ret
popa
and
std
mov
test
cltd
dec
mov
push
mov
cltd
cli
xchg
inc
xchg
cmp
stc
daa
mov
loop
mov
push
add
loop
clc
mov
stos
or
sbbb
cmp
cmpsl
xlat
or
out
push
mov
sub
inc
arpl
mov
xchg
and
dec
scas
es
ret
mov
sub
ljmp
and
and
sbb
xchg
clc
data16
or
mov
push
inc
push
cli
fistpll
xchg
std
ret
daa
xor
aaa
pop
pop
ret
bound
xor
add
mov
and
and
pop
int3
inc
test
jae
jbe
lahf
outsl
xor
lea
mov
and
mov
nop
mov
mov
and
out
adc
cmp
popa
ds
outsb
sbb
adc
adc
movsb
pop
gs
and
fadd
dec
aad
or
addl
and
or
mov
test
xchg
sti
je
inc
or
repz
into
test
xor
lods
in
sub
cmp
ljmp
icebp
test
push
jo
push
inc
push
xor
sbb
xchg
mov
cltd
int
pop
cmpsb
add
pop
mov
and
das
push
xor
sbb
push
sub
or
cmp
or
push
xor
pop
in
test
mov
aam
pop
sarb
lods
loope
rorl
jns
xchg
ja
sbb
pushl
mov
inc
icebp
test
repnz
pop
cmpsb
test
inc
pushf
enter
shrl
dec
inc
cltd
test
imul
loope
ds
scas
fildl
clc
ficoms
adc
out
popa
pop
and
sub
je
pop
and
cltd
cmp
sbb
push
cmpsb
or
pop
addr16
cltd
icebp
std
pop
mov
pop
xor
iret
hlt
movsl
daa
in
or
mov
push
popa
sub
outsb
adc
addr16
stos
dec
xor
pusha
cli
sub
push
mov
ss
mov
popf
xorb
jns
mov
dec
mov
lds
inc
mov
arpl
cmp
pop
frstpm(287
ljmp
fs
inc
and
aas
mov
pop
inc
cld
jae
ficompl
xchg
test
outsl
fisubl
cli
cmp
jle
and
inc
ds
out
or
push
mov
mov
and
popf
jle
adc
cltd
popa
push
dec
jle
pop
test
or
mov
xor
jl
enter
xor
or
test
pop
enter
mov
pop
loope
cmpsl
push
cs
sbb
in
push
lret
jl
xor
ds
outsl
arpl
aad
pusha
test
and
push
jcxz
mov
mov
mov
mov
cmp
in
in
xchg
jp
negb
enter
inc
inc
mov
imul
fldt
pop
andl
cwtl
stc
sbb
imul
lock
cld
dec
pusha
xor
arpl
sub
js
fstpl
js
ret
cmp
pop
or
sbb
js
jl
ss
loop
xchg
out
jge
test
fnstsw
dec
insl
in
mov
adc
xchg
sbb
or
push
lret
mov
sub
or
and
jbe
dec
push
add
ja
sub
and
test
mov
push
hlt
hlt
cli
mov
in
sbb
inc
mov
xchg
stc
and
int
loope
xor
lahf
or
and
push
jge
and
xor
aas
clc
pop
movsl
cmp
sbb
test
loop
jbe
loopne
add
sahf
add
popa
popa
push
and
movsl
mov
pop
push
pop
lret
sbb
ss
adc
das
xor
je
stos
xlat
mov
loop
fsub
lock
popa
push
xor
cwtl
push
mov
add
xor
arpl
dec
cmp
lahf
dec
insb
fucomp
inc
rcrb
enter
fisubl
sbb
cwtl
cmpb
mov
out
ret
push
inc
mov
iret
mov
gs
stos
lret
inc
xchg
cmc
stos
mov
sub
mov
xor
pusha
cmpsb
aad
jb
xor
lret
stos
sbbl
ret
jb
fisttpll
dec
pop
movsl
and
fcomip
mov
cmpsl
sbb
fdivl
dec
sub
cltd
in
mov
jae
in
jo
loope
jle
mov
dec
push
push
aad
jo
js
push
jo
jb
lret
addr16
adc
xchg
mov
ret
cmpsb
icebp
push
jae
rcll
push
stos
mov
sub
mov
add
rolb
outsb
cmp
mov
dec
fwait
outsb
ja
aas
loope
imul
dec
imul
lock
xchg
xor
sub
mov
dec
pop
lea
pusha
mov
pusha
xor
add
insb
xor
jb
sbb
and
pop
jl
imul
imul
pop
sub
xchg
xor
sbb
sbb
pop
mov
clc
popa
dec
mov
jecxz
arpl
and
add
cmp
sbb
jmp
dec
nop
jp
cltd
cmc
sarb
movsl
cltd
dec
jns
sbb
loop
add
fwait
imul
push
lahf
push
pop
push
push
cmp
cmp
hlt
mov
sub
ja
stc
xchg
dec
push
or
xchg
mov
pop
fsubs
lret
lock
negl
sti
lods
inc
popf
ljmp
and
jp
or
test
jmp
fimull
lret
scas
xor
push
loop
inc
cmp
imull
shrl
cwtl
xorl
cmc
addl
clc
inc
call
bound
addr16
cmp
test
mov
push
test
dec
lods
cmp
push
fwait
negl
lods
ja
cmp
xor
xor
sbb
data16
je
out
sub
repnz
jno
push
and
jns
cmp
fmuls
movsb
and
sbb
shlb
fisubrl
push
fcompl
jo
popa
mov
imul
gs
xchg
add
and
pop
pop
or
mov
clc
adc
scas
mov
jl
test
sub
inc
cli
cmpsl
jg
out
ljmp
scas
pop
push
lea
mov
xorb
mov
rclb
lret
loopne
hlt
imull
lret
int
ret
jns
jmp
mov
pushf
add
ret
sahf
rorb
cwtl
xchg
jae
mov
test
or
sub
mov
fldt
cld
mov
cli
pusha
mov
or
mov
pusha
mov
xor
jae
inc
in
mov
jb,pt
and
mov
pop
mov
in
pop
js
sbb
add
popa
mov
push
pusha
dec
gs
rclb
das
sub
mov
ret
test
aad
int
mov
adc
cmp
test
and
inc
add
pop
jg,pn
adc
js
add
dec
cmp
push
mov
xor
addr16
adc
fcmovbe
jbe
cmp
push
sub
rcl
mov
popa
and
push
lret
and
pop
sti
cmp
addr16
ret
in
or
loop
movsl
xchg
jne
add
xchg
xor
hlt
jns
popa
aam
ss
and
adc
mov
loopne
push
pushf
shll
and
add
dec
test
sub
jmp
mov
stos
aas
add
pop
in
bound
sub
fmull
push
lock
into
pop
inc
clc
or
cmp
jbe
lahf
std
and
fdivrs
das
jne
pop
stos
sbb
imul
leave
mov
pop
daa
lret
pop
shlb
sbb
mov
push
pop
pop
shll
jge
push
cli
or
lret
pop
ljmp
gs
gs
pop
pop
adc
cwtl
mov
mov
and
cld
and
daa
mov
jp
shr
cmpl
xchg
rol
loop
xchg
mov
ret
jge
mov
cmp
mov
mov
push
repnz
jno
add
ljmp
mov
call
lods
sarb
lcall
aam
push
and
push
cmp
fcoml
loop
cltd
mov
fs
add
pop
fbstp
inc
pop
ljmp
fbld
in
fs
mov
mov
inc
xor
jae
sub
cmp
lcall
xor
push
mov
sbb
mov
sub
jo
push
push
mov
mov
imul
imul
jle
pop
push
add
cmc
jle
ret
and
jns
mov
xor
hlt
push
pushf
lcall
shlb
outsb
es
push
xor
gs
push
push
test
jecxz
cmp
push
in
cltd
sub
xchg
pusha
lcall
lret
xchg
insb
xor
pop
pop
xchg
inc
dec
shr
mov
popa
pop
aad
push
cmp
das
push
popa
xchg
sahf
dec
std
into
push
popa
add
insb
cmp
cltd
movsb
push
lret
dec
jo
cli
jbe
addb
pop
xchg
cmp
or
xchg
lds
andb
and
dec
xor
dec
and
imulb
cmp
inc
push
sub
push
mov
add
sub
popf
mov
test
dec
push
mov
cltd
jne
je
andl
dec
aam
dec
dec
arpl
or
aad
or
scas
pop
add
mov
dec
cs
xor
sub
jg
xor
pop
dec
stc
stos
mov
test
movsl
test
xorb
lea
mov
cmp
dec
loopne
cmp
cli
and
adc
movsl
dec
pop
add
xchg
repnz
lahf
dec
push
repnz
xchg
xor
and
xchg
orl
test
xchg
inc
mov
inc
fsubl
xor
cmc
iret
xor
test
imulb
dec
and
inc
add
addr16
jne
sub
cmpsl
xchg
push
jnp
and
inc
sarl
mov
int3
cmp
and
insl
and
inc
in
ror
xor
scas
fisttpl
gs
push
lods
idivl
mov
in
das
cmp
aam
add
mov
and
popl
rcrl
and
mov
bound
mov
dec
xchg
addr16
dec
xchg
xor
les
pop
fs
aad
inc
cmp
lahf
jbe
popa
add
push
js
cmpsl
add
adcb
popa
push
xchg
sub
pop
cmpsl
fstpt
and
inc
inc
popa
cmp
jg
or
mov
push
xlat
je
test
jno
add
outsl
cmpsb
gs
ds
push
test
mov
movsl
and
sbb
cmp
dec
or
jecxz
lret
testl
mov
xor
mov
jns
push
jle
aad
hlt
dec
loope
sbb
pop
cmc
inc
pop
xchg
mov
cmp
xlat
inc
pop
cli
out
stos
scas
inc
mov
inc
dec
push
arpl
cmc
mov
nop
pusha
add
aad
cmp
xchg
xchg
cmp
pop
xor
and
dec
jns
and
dec
loope
stos
xchg
xor
push
lea
repnz
xor
std
and
cltd
scas
pop
or
loop
pop
push
cmp
pushf
out
enter
rcl
cmp
mov
inc
ds
xlat
mov
test
and
and
push
pop
push
cmp
cmp
js
or
das
sub
imul
lea
popf
subl
mov
pop
sbb
insb
add
ss
ss
stos
stos
push
xchg
or
or
mov
cltd
aaa
scas
cld
sbb
arpl
sub
jge
and
in
into
push
cmpsl
or
leave
mov
test
xor
ret
pop
repnz
and
rorl
imul
and
xor
in
cmp
push
in
xor
xor
dec
pop
lods
and
sub
negl
jnp
cs
leave
push
out
xor
andl
movsb
xor
jle
lods
cmpsb
out
sbb
xor
mov
shrb
jmp
movsb
ljmp
ljmp
cmp
ljmp
inc
mov
dec
cs
outsl
popf
repnz
xor
or
popf
and
or
rcrb
adc
xor
xor
fwait
mov
add
adc
rcrb
lret
sub
or
lods
push
cli
cmpb
lock
cs
xchg
dec
dec
lock
pushf
sub
pop
out
push
and
gs
inc
subb
lcall
mov
xchg
xor
cwtl
js
iret
xchg
insl
or
imul
les
shrb
or
xchg
mov
mov
xor
xor
push
in
stos
cmp
and
fisubrs
dec
and
mov
fsts
addr16
or
push
mov
mov
xchg
sub
cli
gs
cmp
cmpsl
and
lds
sub
and
and
es
sub
pop
outsb
push
mov
jnp
lds
imul
lods
xor
jns
adc
fsubs
lods
cmp
pop
and
sbb
adc
dec
mov
push
add
orl
xchg
imul
xchg
aad
jge
stos
sbb
jle
mov
pop
sbb
std
cmp
pusha
popa
adc
jns
outsb
sub
xchg
add
mov
sub
jge
mov
in
movsl
inc
xorps
and
or
lahf
and
je
pop
jne
icebp
mov
imul
cmpsl
jbe
sub
sub
adc
fbstp
and
mov
xorb
and
dec
fidivl
fisttps
iret
and
and
xor
ss
push
add
mov
arpl
lods
xchg
mov
jle
mov
imul
rol
aam
shrb
out
inc
mov
push
add
mov
mov
xor
jae
into
std
mov
cmp
out
push
mov
repz
test
push
xor
sub
out
pop
mov
cmp
arpl
mov
shrl
cmp
ret
aaa
je
sbb
rcrb
jp
ljmp
mov
mov
dec
ret
fnstenv
inc
xor
pop
out
pop
and
jns
cmpsl
sbb
popf
inc
mov
sbb
jmp
jo
dec
xor
loop
int
test
or
repnz
and
sbb
mov
ss
mov
mov
push
test
adc
repz
sbb
jl
mov
jne
and
fmuls
mov
push
mov
lds
mov
cmc
or
xchg
xorb
jp
addb
sbb
xchg
fimull
sahf
push
popa
fcmovbe
cmp
mov
sub
pop
mov
xchg
dec
subb
push
mov
in
push
mov
and
push
cs
mov
sbb
inc
push
xchg
fldcw
daa
push
mov
out
mov
mov
cltd
rclb
jecxz
dec
pop
mov
push
jno
popf
mov
push
sub
sahf
dec
xor
je
adc
aam
adc
popa
sti
mov
adc
or
ficoml
cmp
in
sbb
xor
adc
jno
gs
insl
lcall
addr16
adc
push
adc
mov
loop
cs
dec
inc
shr
and
orb
and
push
or
push
mov
push
aas
push
fidivrl
repz
inc
and
dec
xor
pusha
mov
or
xor
or
xor
or
jbe
xor
and
jae
or
inc
rcll
shrb
push
or
stos
sub
outsb
mov
sbb
pop
insb
dec
aad
or
inc
xlat
xchg
pop
or
fwait
mov
ja
push
xchg
icebp
loop
jbe
mov
das
xor
into
or
push
jb
scas
xor
popf
jb
loope
and
dec
aaa
xchg
sbb
xor
or
cmp
jb
dec
aad
push
aas
aad
push
dec
and
adc
and
push
hlt
dec
xchg
push
mov
jno
push
dec
enter
es
mov
xchg
jle
pop
mov
or
dec
push
test
lds
mov
jecxz
jge
and
sbb
add
pop
fwait
adc
out
sbb
jno
add
cmp
sub
jns
jmp
or
jno
and
inc
aaa
sbb
iret
add
lock
fwait
push
xchg
adc
addr16
xor
push
movsl
ret
xor
in
ss
push
push
ret
ret
aad
add
lret
add
pop
movsl
stc
aaa
popl
loop
add
sbb
repnz
add
out
movsb
mov
aad
add
xchg
mov
jle
cmpsb
xchg
xor
sarb
xor
mov
orb
lcall
or
pop
add
imul
adc
mov
push
test
out
jo
or
cmp
out
std
movups
pushl
mov
mov
dec
pusha
pop
mov
and
xor
cs
jbe
add
fs
arpl
mov
into
xor
jp
aad
lcall
xchg
movsl
and
daa
cltd
sub
mov
add
lods
std
jb
stos
shr
xchg
repnz
push
dec
aad
adc
ja
repnz
cmp
cmc
xor
scas
xchg
sbb
imul
adc
push
push
cs
ljmp
repz
sti
and
inc
idivb
inc
sbb
in
sahf
adc
hlt
lock
std
loope
mov
js
and
push
push
jb
fs
mov
push
push
pusha
push
sub
cltd
cmp
sub
xchg
jbe
pop
lods
lods
sub
jl
mov
sbb
sbb
sbb
dec
ljmp
jno,pt
stos
push
cmp
repz
and
cltd
mov
pusha
insl
insb
icebp
inc
imull
push
aad
xchg
mov
scas
mov
insb
sub
std
xor
outsb
insl
insb
shll
xchg
mov
ss
mov
xchg
cmc
mov
lahf
adc
in
daa
loope
push
adc
aam
popf
xchg
fwait
test
mov
cmc
stc
mov
or
sub
lea
lcall
inc
or
cmc
lock
es
imul
aam
lret
loop
ss
or
cmp
scas
mov
push
sub
dec
cli
movsl
jnp
pop
sbb
repz
repz
jo
test
adc
xchg
repz
je
repz
fbstp
ficoml
lea
sbb
pop
out
lahf
and
leave
fisttpl
push
das
repz
loop
iret
add
filds
ret
mov
addb
jns
daa
xchg
lcall
movb
lds
push
mov
aaa
and
inc
adc
out
fs
or
adc
lcall
into
pushl
in
insb
stc
cmc
or
ss
pop
cmp
xchg
inc
bound
lahf
in
imul
roll
mov
inc
cld
xchg
sahf
mov
xchg
jo
push
mov
pop
cwtl
shl
dec
xor
mov
outsb
std
dec
and
xchg
mov
xor
cmpsb
mov
jmp
push
lods
jmp
cmpsb
cmc
cmp
mov
cli
sti
mov
inc
mov
push
fisttpl
xchg
jnp
mov
or
psubsw
xor
inc
lds
std
mov
push
dec
jmp
aaa
in
loop
and
mov
sub
push
in
incl
jp
out
xor
xchg
mov
push
push
scas
cli
push
sub
dec
cmp
xchg
sub
cli
movsl
mov
inc
push
mov
cli
add
xor
loope
test
test
out
mov
push
jb
push
fisttpll
mov
in
inc
outsl
leave
call
dec
and
in
mov
adc
adc
adc
mov
popf
in
pop
mov
and
fwait
aad
in
rorb
rclb
xor
ret
and
mov
mov
mov
adc
fcmovbe
sar
lcall
lret
insb
push
das
repnz
add
aam
adc
mov
int3
sbb
mov
mov
nop
scas
lock
mov
cmp
add
xchg
jno
adcl
adcl
imul
enter
fimull
jmp
scas
mov
sbb
lcall
xor
inc
push
ljmp
lret
cmp
rorb
xor
aam
fbld
test
and
push
lret
stos
adc
loopne
cmp
andb
popf
fisttps
sub
shl
push
lock
xor
lcall
ja
cmp
pop
imul
dec
xor
inc
xor
fstl
sbb
loop
sub
fisttpll
and
inc
fnstsw
mov
pop
mov
push
and
js
orb
imul
cmp
adc
imul
arpl
or
add
cmpsl
fnsave
push
fimull
pusha
jnp
jp
fidivrl
shr
jecxz
xlat
popa
pop
mulb
mov
mov
mov
fs
jns
cmp
loopne
mov
inc
insl
sbb
out
and
xchg
fnstenv
sub
dec
scas
repnz
xor
fldenv
in
jns
int
ss
out
hlt
add
push
popf
xlat
lcall
hlt
ss
lret
orb
xlat
mov
xchg
aad
xor
jo
fst
mov
xchg
cmp
sub
xor
aad
lock
sarl
push
rcll
pusha
shrl
lahf
cli
xorb
add
repnz
and
sub
push
sbb
xchg
sarl
fs
cmp
insb
inc
mov
and
inc
adc
shr
ss
dec
adc
and
xor
iret
mov
cmp
repz
add
inc
aam
imul
inc
jbe
mov
xchg
mov
fmull
push
fmulp
mov
int
in
push
loop,pt
and
int
pop
icebp
test
push
shrl
dec
int
mov
int
lret
jnp
nop
lret
mov
and
sbb
mov
push
sti
call
loope
lock
leave
aam
leave
fidivs
pushf
mov
ljmp
and
fld
mov
mov
mov
loop
push
push
je
or
sti
cld
loop
iret
int3
int3
or
mov
inc
add
lret
jg
daa
loop
leave
pavgw
andb
repnz
lret
dec
loop
inc
cli
imul
cwtl
mov
pop
and
push
adc
cmc
sub
sub
arpl
mov
sub
xor
and
jae
add
sbb
lds
scas
cmp
bound
or
lds
icebp
lds
xor
add
add
sub
push
sub
ret
mov
movsl
or
xor
mov
and
pop
jbe
push
fcmovnb
das
push
cli
and
imul
cmpsl
cmp
imul
mov
imul
dec
ljmp
push
ret
jp
leave
in
adc
insb
shl
add
leave
mov
and
adc
sub
lds
je
shll
cli
sub
shll
push
sarb
mov
push
sub
mov
dec
pop
adc
or
aad
or
rclb
mov
test
cli
clc
xchg
mov
mov
mov
mov
in
adc
xchg
sbb
lods
mov
fisubrl
out
icebp
daa
dec
or
and
and
and
adc
push
adc
adc
sub
pop
ret
sbb
gs
addr16
fiaddl
and
xor
in
fbld
call
jle
cltd
shrb
cwtd
movsl
loop
ljmp
fmull
jnp
cs
stos
add
push
mov
rcl
xchg
mov
rcrl
sbb
fisttpl
adc
pushf
or
xor
flds
jl
dec
int3
jo
test
mov
or
cs
or
mov
mov
adcl
xchg
mov
clc
or
pushf
and
and
jnp
adc
sbb
ja
mov
xchg
sbb
mov
xor
lcall
pusha
mov
bound
outsl
sbb
add
and
sub
mov
es
mov
pop
shl
cmp
out
or
mov
ret
push
addb
shl
ret
cmpsb
es
and
and
test
ja
or
mov
je
or
ds
out
int
xlat
mov
scas
jb
inc
dec
push
enter
iret
addl
fwait
rolb
out
repnz
xor
pop
xorb
sub
sbb
push
divb
int3
cwtl
imull
cmp
mov
gs
xor
xor
lret
inc
push
and
mov
cltd
xor
mov
push
paddsw
lret
loope
push
push
pop
shll
lods
lret
xor
push
sahf
sbb
addr16
xchg
mov
and
push
rcrb
aam
out
pushf
bound
test
das
mov
cmc
out
fists
cmp
loopne
xchg
xor
rcrb
or
cmp
dec
cltd
cs
in
xchg
sub
test
lock
and
jle
adc
insb
cmpsl
iret
inc
inc
popa
outsl
sub
mov
std
xor
dec
inc
cltd
arpl
mov
insb
inc
jge
arpl
mov
mov
mov
hlt
lods
inc
or
adc
sarb
adcl
adc
pop
mov
fistl
icebp
lods
and
jp
outsb
or
push
cmpsl
lods
js
xor
sbb
pop
in
xchg
pop
xor
lods
jbe
jne
iret
sub
shrl
ret
and
lds
mov
and
in
and
shlb
mov
js
xchg
xor
mov
xchg
cmp
push
cmp
in
xchg
adc
ss
bound
pushf
popf
loope
jae
popa
cmp
inc
inc
cmp
test
loop
test
in
jle
mov
movsb
test
shrl
push
push
insl
pop
test
cmc
add
nop
lock
inc
add
std
je
loop
fildll
push
aam
test
test
push
fnclex
mov
sbb
fcoml
popf
popa
xchg
aaa
addr16
cmpsl
jb
rolb
and
pop
pop
mov
xchg
out
inc
ljmp
cltd
push
arpl
lcall
addr16
cmpsl
js
add
leave
in
mov
or
mov
loop
pop
xor
movsl
cmc
cmpsl
jp
aam
stc
mov
sub
xor
je
movsl
jge
mov
clc
outsl
out
les
xlat
sub
int3
cmpsb
adcb
orb
dec
in
arpl
jp
pop
rclb
inc
lret
adc
xor
jnp
push
pop
push
xchg
cltd
push
popa
lcall
nop
xchg
xor
sub
shll
lods
in
loop
orb
add
or
pop
mov
jle
mov
add
mov
stos
add
mov
xchg
aam
mov
and
mov
xchg
mov
push
popf
daa
aas
mov
pop
mov
jbe
xor
push
stos
xchg
lahf
xor
jl
push
adc
jp
popf
cmp
negb
arpl
xor
movsb
and
jb
mov
dec
push
fisttps
dec
cmp
xor
sbb
dec
loope
and
dec
dec
repz
iret
mov
scas
data16
fs
mov
and
cmpsl
fldenv
sub
mov
repz
xor
data16
lds
xchg
xor
sbb
mov
xchg
xor
js
or
jge
adc
or
push
popf
popf
rolb
xchg
shrl
xchg
popf
ljmp
enter
rcll
push
cmpl
xor
cltd
push
cs
insl
rol
or
mov
fwait
cmp
das
aaa
xor
shll
sti
pop
dec
sti
std
repnz
lock
filds
cmp
sub
inc
pop
fwait
aam
pop
sbb
pop
inc
sbb
fwait
ljmp
ss
pop
inc
pop
dec
ret
and
fmuls
lods
mov
xor
mov
cmp
jo
pop
push
inc
push
sbb
xlat
out
int
or
ljmp
daa
outsl
pop
lret
and
call
xchg
xchg
push
fcmovb
jge
xchg
push
pushf
xchg
loopew
jb
pop
lret
cmpsl
jl
arpl
lret
repz
ret
orb
xchg
lds
loop
xor
dec
repnz
subb
sub
std
out
push
mov
cmp
xchg
ret
sbb
adc
loop
iret
repz
mov
mov
mov
inc
xchg
js
or
pushf
aam
jle
hlt
adc
cmpsl
ds
ss
leave
push
cwtl
pop
xchg
sbb
fidivl
lret
xchg
test
and
ret
test
lret
mov
shlb
ret
lret
mull
dec
or
jle,pn
xor
mov
cmp
xchg
cmp
inc
inc
pop
cmp
in
sysenter
xchg
punpckhwd
sub
clc
scas
icebp
insl
dec
bound
and
test
mov
cli
xchg
rorb
jnp
mov
and
dec
xchg
xchg
ss
xchg
lret
jmp
xchg
cmp
or
js
mov
and
xchg
sbbl
test
in
js
pop
mov
mov
movsl
and
dec
dec
push
add
xor
push
dec
and
loope
add
movsl
lcall
add
cmpsb
push
mov
inc
add
push
add
lea
xchg
int
add
mov
ja
in
gs
xor
push
test
movsl
mov
dec
adc
cli
icebp
insb
mov
cmp
cs
pop
xor
rolb
testl
test
pop
sbb
add
ljmp
mov
jge
mov
aaa
xchg
add
sbb
mov
hlt
ss
in
stos
ret
or
fadds
sub
popf
mov
or
xor
lcall
aam
add
xchg
inc
loop
adc
and
pop
test
dec
fistpll
adc
jne
repnz
gs
out
cmc
pop
lcall
fistps
out
xor
add
fisttpl
xchg
jnp
xor
xor
push
mov
xlat
mov
xchg
enter
les
mov
mov
or
sbb
outsb
xor
fstpl
or
clc
jmp
pusha
bound
scas
test
cmp
push
jl
mov
cs
xor
adc
jns
sti
mov
icebp
iret
out
cs
cmpl
add
sub
and
push
inc
jns
dec
cmpsl
fiaddl
xchg
ja
cmc
aaa
in
jne
sub
out
loopne
push
cli
loopne
push
ljmp
movsb
mov
mulb
cmp
adc
pusha
out
dec
lock
test
shl
imul
push
push
adc
in
fcom
mov
jbe
mov
xor
enter
cmp
out
jb
ja
cmp
xchg
dec
push
aam
sub
xchg
inc
push
inc
dec
mov
icebp
xchg
add
jg
cmp
int
jg
addr16
sti
insb
add
add
jge
mov
ficomps
int
sti
mov
jge
ds
flds
loop
shl
add
push
jle
and
add
lret
roll
fmuls
out
xchg
ljmp
lahf
jnp
test
scas
jle
ss
xor
xor
jnp
mov
cmp
pop
dec
outsl
leave
lea
fidivrs
in
and
jns
pop
mov
push
testb
xor
cmp
jns
cmp
into
in
mov
pop
jae
lock
testb
mov
and
xor
cmp
loopne
cmp
and
ja
jmp
push
testb
dec
icebp
ja
add
ja
fcmovnu
xchg
xor
lds
and
pop
mov
mov
incl
movsb
fimull
mov
das
ja
sub
jne
mov
xchg
xchg
xor
fsts
sti
xor
sub
inc
loop
pusha
cmc
adc
dec
inc
or
jne
push
rorb
lret
inc
aas
push
pop
cmp
aad
jbe
dec
xor
arpl
push
dec
outsl
std
mov
lcall
xor
push
out
xchg
mov
adcb
rcll
ljmp
mov
jae
xor
mov
aad
jo
and
in
fwait
sub
int
shlb
xchg
loop
push
cwtl
jno
cmc
mov
outsl
xchg
mov
loop
mov
out
and
repz
test
lds
testl
pushf
push
add
bound
in
push
int
mov
dec
fisubl
add
test
je
outsl
and
adc
mov
jnp
xchg
cmp
cmpsl
loop
jbe
xorb
sub
imul
mov
sub
jb
decl
adc
inc
loop
shl
in
mov
xor
push
outsl
cmc
fidivl
andl
mov
inc
push
push
add
sbb
test
xor
sahf
mov
int
call
adc
xor
xchg
sub
mov
mov
iret
pop
mov
and
sarl
in
or
inc
leave
bnd
ret
sbb
movsb
mov
mov
xor
imul
pop
pusha
mov
ret
pop
inc
xor
imul
imul
mov
push
jno
jp
xchg
sub
push
push
and
pop
int
pop
clc
imul
fxch
mov
imul
mov
insl
or
inc
loope
test
jae
jp
ja
lcall
xorl
jno
lahf
sub
in
cmpl
fisubrl
clc
mov
xor
loope
cmpsb
and
shll
fwait
repz
xchg
mov
jnp
cmp
push
cmpsb
cltd
xchg
dec
lcall
xchg
lock
mov
sub
stos
mov
test
push
pop
lcall
push
scas
iret
sahf
out
imul
popa
lret
xor
sub
sbb
push
sbb
sbb
or
aad
sbb
sbb
bound
arpl
sub
ss
push
je
pusha
push
ljmp
push
adc
add
arpl
push
inc
aad
jmp
jne
inc
popf
jne
cli
add
das
jl
aam
fsubrp
mov
cmpl
repnz
subb
loope
mov
fisttps
repnz
xor
push
in
out
aad
sbb
lds
aas
xor
or
stos
mov
dec
lea
pop
test
mov
and
sbb
jns
or
xor
cmp
int3
imull
pop
nop
imul
ds
pop
or
insl
sub
movb
scas
xchg
fstpl
push
popf
mov
lret
cmpsb
inc
lahf
andb
jge
mov
dec
inc
or
negb
or
and
cmp
movsl
and
xchg
dec
and
pop
jno
and
inc
sub
aam
mul
fidivs
mov
adc
out
dec
int3
call
in
addr16
outsl
fwait
sub
fidivs
aaa
ficomps
daa
test
jbe
pushf
les
loop
sub
pop
xchg
ror
and
xchg
mov
es
sub
ret
jmp
scas
in
pop
ficompl
filds
adc
mov
add
repz
dec
push
sub
xor
pushf
mov
fadd
cmpsb
or
fistpl
fs
addr16
ds
sbb
pop
sar
repz
loope
mov
pop
cmpsb
push
subl
sub
dec
xchg
jne
dec
dec
xchg
push
scas
cmc
repnz
adcb
cmc
dec
aad
mov
rorl
mov
daa
mov
mov
dec
les
add
lcall
jbe
xor
or
push
mov
hlt
add
popf
push
mov
repnz
pop
scas
bound
xor
aas
dec
push
test
rorb
std
shrl
lcall
and
inc
adc
push
sbbl
cmpsl
push
and
cltd
lret
jae
test
mov
xor
sub
or
cmp
and
push
cmc
mov
loop
rcrl
dec
in
dec
cld
mov
push
imul
mov
ret
repnz
inc
inc
or
stos
sahf
inc
dec
lea
push
test
push
mov
push
or
xchg
push
and
dec
fwait
xor
sub
popa
or
push
popf
push
cmp
dec
je
dec
sub
jp
das
lcall
and
dec
leave
push
pusha
pop
adc
pop
dec
std
push
int3
dec
leave
push
jo
ret
and
dec
and
leave
dec
mov
cmp
sbb
push
aad
lcall
dec
sub
xor
aas
push
dec
addr16
loopne
hlt
sbbb
inc
and
outsl
dec
cli
ja
push
iret
popa
insb
push
cld
pop
outsl
sbb
sarl
xor
dec
cmp
pop
push
lret
pusha
pop
or
out
sbbl
mov
adc
mov
adc
mov
cwtl
lock
dec
xor
iret
dec
pop
rol
stos
and
daa
push
jg
inc
ja
mov
pop
aam
movsb
fucompp
cld
cmp
fldl
or
xorb
sbb
push
fwait
dec
inc
dec
leave
insl
test
std
xchg
inc
or
fwait
pusha
rcpps
and
xchg
out
seto
addl
xor
js
mov
inc
inc
and
or
and
inc
pushf
mov
lcall
pop
xor
lock
aad
bound
insb
cmp
mov
data16
xchg
jecxz
inc
cli
lret
jp,pn
push
push
movsl
or
fisubl
cmp
fadds
xor
jmp
lahf
dec
xor
xor
pop
sub
notb
and
inc
mov
cmp
mov
inc
sbb
mov
jns
movsb
mov
jnp
adc
cmp
lcall
push
movsl
jmp
addr16
cmp
dec
or
pop
xor
inc
out
scas
movsl
lret
dec
loopne
orb
mov
leave
cmp
and
aas
lret
aas
push
push
pop
aas
shrl
sbb
add
dec
xchg
mov
jne
and
mov
push
or
xchg
cmp
imul
cmp
addr16
cmp
hlt
sub
and
xor
cmp
dec
addr16
jnp
jmp
mov
test
cmp
aas
mov
imul
jbe
sbb
mov
std
jp
push
adcb
adc
add
repz
mov
bound
outsl
push
cld
aaa
and
lock
insl
xor
mov
jle
cltd
pop
xor
mov
in
arpl
scas
mov
sub
sub
xor
test
xor
adc
loope
daa
mov
subb
in
lea
fwait
xor
ds
cmp
popf
and
jmp
push
std
sbb
xor
out
lock
push
mov
mov
dec
xchg
mov
mov
inc
iret
xchg
lea
mov
dec
inc
push
mov
push
stos
sub
mov
or
aam
stos
sub
fnsave
xor
gs
lcall
sbb
mov
popa
int3
insb
mov
jbe
add
mov
sbb
xchg
pop
in
rorb
jmp
dec
xchg
add
mov
xor
and
or
pop
mov
sbb
dec
addr16
jmp
xor
ffree
js
xor
hlt
mov
jg
lret
xor
sbb
flds
sbb
cmp
and
inc
inc
daa
icebp
xchg
dec
inc
push
scas
das
rorl
pop
or
mov
push
or
xchg
xor
xor
mov
xor
xchg
rclb
insb
jmp
sbb
xchg
and
fxch
call
or
aaa
inc
sub
insb
aam
cmc
sub
mov
aam
aad
jl
int
movl
and
xor
dec
sub
mov
out
push
add
push
rcrb
push
in
js
cmpsb
std
scas
cmp
aaa
popa
outsb
arpl
adc
xchg
subl
push
push
jnp
enter
enter
push
insb
jecxz
lea
xor
sub
xchg
sub
test
ficoml
xor
and
arpl
and
pop
mov
out
adc
lds
fwait
push
lcall
push
adc
daa
and
jl
les
aas
push
xor
nop
xor
mov
in
daa
and
int
pop
lcall
cmpsb
inc
mov
push
lcall
adc
push
push
cmp
ja
dec
xor
push
subb
std
and
popf
jp
loopne
add
push
out
sbb
dec
loopne
xchg
pushf
in
add
jns
loope
push
push
lcall
and
lahf
and
pop
lcall
testl
sti
lods
je
sbb
shlb
and
and
mov
push
pop
cmp
imul
adc
pop
adc
iret
xlat
push
xor
or
sbb
scas
and
jcxz
mov
addl
in
cmp
je
and
or
fisttpl
vrcpss
and
adc
out
jle
pushl
adc
in
les
gs
push
lods
cmp
mov
pop
cmpsl
mov
mov
or
fwait
cli
sub
jecxz
jge
or
aas
movsl
jb
or
ds
mov
daa
mov
loop
jmp
xchg
cmpsl
fxch
jecxz
push
add
mov
or
stc
pop
movsb
sbb
sbb
gs
push
xor
push
xchg
sbb
add
cmpb
loopne
movsl
and
lods
sbb
jg
test
jbe
xor
js
cmp
push
pushf
xchg
push
gs
xor
sbb
lds
mov
ret
jb
ret
mov
sar
inc
mov
orl
push
pop
adc
pusha
cmp
mov
or
ljmp
cmp
pop
aad
or
loop
jge
stos
aas
sbb
andnps
vpackssdw
cmp
daa
icebp
sbb
or
push
stos
dec
loopne
jecxz
mov
mov
mov
adc
dec
in
lea
test
mov
jnp
adc
add
sbb
sarl
or
jno
pop
jo
or
dec
mov
ss
into
pushf
push
gs
push
out
mov
adc
movsb
dec
pushf
push
into
xchg
mov
jns
sbb
dec
mov
scas
movsl
dec
add
jp
mov
mov
push
push
xor
sub
aad
adc
pop
adc
sarl
jns
push
xchg
ja
xor
scas
pop
cmc
dec
fimull
lock
call
sbb
iret
lods
mov
pop
outsb
mul
xchg
lods
mov
popa
pop
shrb
subl
jge
dec
jns
xor
arpl
sbb
sub
aam
int3
xchg
xor
or
gs
mov
mov
mov
or
stos
pop
orl
xchg
mov
ret
pushf
ret
shlb
imul
repz
movsl
cmpb
mov
sub
mov
outsb
les
sbb
test
cs
push
xchg
loop
jae
jp
inc
sahf
aad
cmp
inc
nop
and
xchg
cwtl
daa
or
fcoms
and
arpl
pop
out
cmpb
dec
adc
cwtl
or
fndisi(8087
mov
jne
inc
mov
sub
push
xchg
rcll
xor
jnp
pop
mov
pop
and
stc
lahf
lret
sbb
sbb
enter
and
sbb
test
mov
mov
movsb
or
xchg
cltd
pop
sub
add
out
sbb
pop
mov
fbstp
test
stc
fldenv
adc
cwtl
xchg
sti
orl
mov
xchg
jae
adc
sbb
xchg
mov
adc
sbb
mov
cmpsl
pop
inc
cld
cmp
jns
inc
and
xor
and
and
cmpsl
adc
mov
leave
inc
adc
sbb
pop
sub
xor
xor
lcall
iret
sbb
cmp
push
ret
adc
sub
dec
dec
mov
sub
push
int
fdivrp
orl
sub
pop
cmp
or
add
mov
mov
loop
push
or
cmp
pop
stc
sub
out
add
jns
push
adc
cmp
mov
push
pushl
mov
push
xchg
enter
js
inc
cltd
jmp
mov
adcl
cmpsb
fwait
xorl
scas
and
sub
add
mov
andb
mov
leave
mov
rcrl
xor
stc
mulb
push
popf
and
cmp
cmpsb
mov
adc
outsl
stc
pop
pop
sbb
mov
scas
pop
push
cs
cmpsb
adc
pop
loope
sbb
inc
xchg
movsl
cli
jno
sub
aam
xchg
mov
xchg
int
xor
jmp
add
and
add
arpl
add
mov
mov
add
dec
mov
sahf
fldenv
adc
aam
test
jge
jecxz
mov
inc
vphsubwd
mov
ja
sub
cmp
shrl
iret
int
or
add
mov
das
cmp
andb
xchg
int3
dec
sbb
mov
sti
inc
mov
push
fwait
xor
pop
ficomps
int3
and
ret
stc
das
out
fcompl
sbb
subl
and
daa
dec
and
popf
hlt
ror
jg
or
out
mov
jns
fildl
push
jns
pop
mov
xor
andb
jno
push
rcll
loopne
xchg
adc
test
mov
sub
test
rcr
popf
jg
mov
sbb
test
pop
stos
xchg
call
mov
adc
xchg
or
loop
aad
inc
push
sbb
daa
shrb
and
sbb
adc
jb
inc
insl
inc
pop
test
adc
adc
add
inc
xchg
fdivr
cmp
sbb
pop
imul
cmp
xchg
sbb
and
rcrl
das
das
mov
loop
dec
rorb
xor
jmp
dec
sarb
inc
shl
cmp
imul
xchg
sub
cmp
fnstenv
cmc
sbb
sbb
push
push
dec
mov
mov
jb
cmpsl
movsb
enter
mov
inc
adc
and
sub
mov
xor
mov
cmp
cmp
lock
pop
sti
movsl
sbb
pop
sub
imul
cmpl
push
xor
call
fstl
push
sarb
enter
mov
push
imul
and
push
lahf
push
inc
cwtl
adc
frstor
call
and
jb
mov
pop
popa
mov
xor
pop
notl
xchg
adc
fbld
cmp
fldenv
cmp
ret
es
jg
in
pop
hlt
mov
jb
movsb
sar
jge
sbb
xchg
mov
int
jbe
icebp
rcl
loop
sbb
xchg
test
push
adc
xor
stos
mov
das
pop
dec
xchg
movsl
push
mov
divb
cmp
jns
adc
sub
lret
pop
xchg
mov
add
xchg
mov
sti
and
dec
adc
cwtl
addr16
mov
nop
sbb
xchg
test
loop
mov
sub
lods
lahf
lcall
mov
xor
sarl
mov
cltd
daa
sbb
mov
ss
jae
xchg
test
mov
and
inc
adc
sbb
daa
adc
ja
jae
icebp
push
adc
push
and
dec
xchg
fdivl
inc
iret
xchg
sbb
addr16
gs
lcall
pop
mov
sbb
add
xlat
xchg
jb
inc
adc
mov
or
push
pushw
push
dec
sub
adc
addr16
pop
repnz
loopne,pt
add
fwait
cmpsb
dec
or
jb
sub
mov
xor
and
in
xor
mov
loopne
sbb
mov
mov
xchg
dec
imull
lods
cmp
pop
and
cmp
scas
testl
lret
das
mov
mov
mov
les
xor
cmp
cmp
xchg
xchg
push
push
mov
lds
inc
xchg
xlat
xor
mov
loopne
xchg
xor
movsb
and
and
in
and
mov
sub
fsubrs
xor
xor
push
sahf
inc
sbb
mov
cwtl
cmpsl
push
stos
mov
jbe
roll
jno
sar
xor
gs
lret
sbb
repnz
loop
fwait
inc
cmp
and
lock
sub
mov
or
ret
cmpsl
dec
sti
mov
cs
xor
push
xchg
movsb
adc
das
xchg
or
aas
iret
ljmp
pop
call
mov
cmpsl
push
cli
sti
test
cmp
int3
addr16
xchg
mov
mov
pop
cmpxchg
and
clc
pop
and
hlt
outsl
stos
and
fwait
xchg
cli
and
ljmp
lods
sbb
cmp
or
sub
jae
sub
sarl
and
pandn
in
cs
mov
lock
loope
inc
mov
cmp
xor
pop
sbbb
and
loope
aam
es
jns
gs
xchg
dec
add
das
and
cmp
adc
sbb
sbb
pop
inc
cmp
xor
sbb
push
inc
sbb
sub
push
in
and
rcrb
xchg
xor
movsb
out
or
xchg
xor
sti
jae
icebp
sub
lods
mov
mov
cltd
lds
push
lahf
mov
or
adc
push
jno
jmp
cmp
leave
pop
mov
shlb
push
add
pop
jnp
add
mov
gs
push
pop
inc
int
int
andb
cmp
ret
mov
pop
mov
xor
dec
jl
mov
fistpll
and
sub
stc
push
mov
adc
fstpt
rcll
cltd
mov
sbb
ficoml
mov
and
xor
xor
add
pop
movsl
sti
mov
ja
push
and
cmpsl
sbb
cwtl
jbe
inc
sti
mov
sub
push
jbe
inc
sbb
sbb
pop
and
add
test
adc
and
sub
sbb
sub
int
push
xchg
daa
aaa
xchg
xor
adc
popa
add
push
and
dec
xor
fldln2
cmc
xchg
cmp
dec
aad
xor
and
pop
frstor
and
dec
ret
cmp
jle
jbe
test
and
mov
aam
stc
imul
test
xchg
mov
inc
push
nop
ja
xor
pop
mov
es
popa
lahf
push
fsts
pop
sub
ret
icebp
adc
push
sahf
xchg
or
push
stos
cs
adc
and
dec
and
pop
push
mov
cmp
mov
ja
mov
nop
sbb
sbb
jae
and
jbe
push
pop
inc
jne
jp
xchg
das
jne
repz
ds
fcoms
or
inc
aaa
jno
mov
sub
mov
jg
sbb
xor
ja
loop
leave
inc
sbb
xchg
xchg
aas
aaa
into
xor
xchg
inc
jae
icebp
into
push
test
push
sti
inc
sbbl
mov
and
cmpsl
rolb
fists
inc
dec
pop
dec
mov
dec
mov
adc
es
fists
push
add
ja
adc
sub
inc
test
mov
sbb
jno
xchg
adc
arpl
sub
sti
das
int3
jp
aad
sti
subb
decb
pop
aas
sub
lock
xor
pop
popa
xor
pop
push
xchg
push
and
and
fisubrl
sbbb
adc
add
push
xchg
popf
call
push
cmp
mov
xor
mov
xor
into
inc
push
repnz
sbb
in
imul
mov
mov
add
sub
push
imul
inc
cmpsb
jmp
adc
mov
cltd
add
fcoml
mov
ret
pop
and
lahf
or
popa
lahf
jns
jb
mov
inc
mov
jmp
and
mov
jge
or
xor
cli
ja
mov
popa
push
lock
mov
pop
test
xchg
pmaxub
mov
cmp
dec
or
out
add
or
bound
xor
out
and
push
daa
loopne
pop
test
xchg
xor
pop
sub
int3
mov
popf
mov
loop
dec
outsl
mov
pop
shlb
xchg
add
sub
das
sub
xchg
cmp
inc
mov
and
fcoml
sbb
pop
stos
leave
imul
add
aaa
adc
add
mov
xchg
insl
es
mov
push
test
fcoms
out
roll
xchg
lods
call
popa
push
inc
and
xchg
push
push
cmp
xchg
and
inc
cmp
inc
mov
cmp
sub
fadds
cmp
mov
iret
mov
add
mov
loop
inc
push
movsl
popl
test
cwtl
cmp
xor
call
mov
sub
in
push
pop
jno
xor
xchg
iret
inc
imul
loop
test
pop
rolb
xchg
repnz
in
or
cmp
xor
inc
stos
sti
sbb
cmp
xor
cwtl
or
push
test
adc
fisubl
scas
inc
int
fnstcw
mov
adc
cwtl
stc
arpl
popa
pop
and
pop
adc
cmpsl
aad
jae
mov
xchg
lahf
inc
in
mov
jmp
adc
stc
mov
lahf
addr16
ret
loop
push
add
ja
pop
popa
xchg
lock
mov
leave
adc
in
popf
inc
sub
adc
mov
inc
or
jae
push
jmp
shll
jb
out
mov
push
cld
mov
xchg
repnz
sbb
call
fstps
jno
adc
mov
pop
mov
mov
cmpsl
mov
xchg
loop
adc
ss
sub
sbb
adc
or
xchg
add
jge
fcompl
adc
das
jo
or
sub
xchg
pop
mov
push
outsl
pop
xchg
inc
sti
popf
decb
cmp
or
sub
mov
and
sub
ss
rcll
lds
adc
cwtl
pop
mov
xor
jno
jno
outsl
xchg
test
cmp
xchg
or
cmc
scas
stc
mov
les
data16
cltd
push
data16
and
sahf
sbb
mov
mov
xor
and
add
aam
push
or
pop
leave
aas
sub
sbb
and
sub
stos
testb
push
cmpsl
popf
xlat
call
sti
and
adc
test
xchg
xchg
sbb
call
pop
shll
push
dec
dec
fsts
dec
cltd
and
sbb
mov
rcrl
pop
nop
xchg
stc
and
movsl
in
sub
and
cmc
add
or
xor
movsl
pop
cmp
pop
shlb
push
movsb
pop
shl
gs
pop
mov
sbb
mov
cld
addr16
inc
mov
nop
and
push
sbb
imul
testl
add
xchg
mov
cmp
jne
imul
jl
daa
jg
push
and
pusha
lods
push
pop
pop
xlat
loop
cmp
pop
imul
movsb
mov
jno
and
adc
sub
adc
push
mov
sub
loop
sbb
cmp
mov
mov
jo
jnp
enter
sbb
and
pop
xor
and
cltd
xchg
push
repnz
hlt
cwtl
dec
int
sbb
mov
dec
cmc
jno
loop
lcall
pushf
jno
mov
das
sbb
push
xchg
cli
pop
mov
testl
lea
ja
xchg
push
jbe
movsl
sahf
daa
cmp
and
pop
sub
ret
cmp
jns
and
sbb
inc
add
lods
shll
mov
or
test
popa
sbb
and
sub
or
pop
addr16
fisttps
mov
and
add
xor
hlt
mov
jp
or
repz
gs
out
push
and
addr16
push
xor
xchg
mov
or
sbb
adc
pop
xchg
add
arpl
push
loopne
gs
clc
popa
cli
arpl
jno
cmp
xor
aam
lret
shrb
inc
dec
jb
or
jl
ss
pop
mov
and
cmp
mov
pop
add
or
sub
sub
push
mov
addl
dec
fs
add
mov
stc
inc
sub
adc
sbb
ficomps
push
daa
shll
cld
inc
xor
ss
and
cmpsl
mov
xor
adc
fisubl
cmpsl
sub
cli
loop
cmp
xor
sbb
subl
test
sbb
mov
and
sbb
adc
test
ss
sub
mov
xor
sbb
addb
stc
popf
mov
mov
pop
push
inc
and
test
sar
cmpsb
cmpsl
push
and
jmp
push
mov
test
test
xor
and
mov
lahf
ret
and
jno
mov
dec
jge
and
out
aad
dec
inc
sti
pop
outsb
pop
adc
adc
movsb
cmp
inc
xchg
mov
xchg
into
push
call
jns
jp
fisubrs
inc
add
sub
jbe
cmp
or
insb
ds
jnp
fmul
lret
pop
push
jg
sub
pop
ret
mov
ficoml
sbb
movsb
sbb
pop
adc
aam
xor
cwtl
sbb
sti
std
and
ss
movsb
loop
mov
fiaddl
fldl
insl
sub
call
movsl
sti
mov
dec
inc
jge
adc
cmpsl
cmp
shlb
push
test
and
lahf
cmpsb
mov
xchg
jbe
shlb
outsb
nop
dec
xchg
popf
add
cmp
test
sub
sti
pop
mov
and
repnz
add
fsts
dec
cwtl
or
lret
fnsave
addl
jne
adc
loop
sub
mov
subb
mov
and
arpl
push
dec
and
pop
xor
scas
popa
xor
xor
mov
sbb
push
js
sbb
jle
or
ret
push
aad
loope
mov
sbb
push
call
fisttpl
jg
loope
adc
sub
loop
jne
insl
sbb
ret
cmp
loop
pop
jl
xchg
xor
sbb
add
outsl
imul
jg
ficoms
repnz
or
sub
std
aam
xor
mov
xchg
push
and
loop
jno
cmp
shll
sbb
mov
pop
out
mov
xchg
cld
imul
iret
test
int3
std
push
je
loop
orb
sub
test
int
pop
sbb
jbe
gs
lret
cmpsb
pop
xor
jne
mov
adc
sti
ret
mov
xchg
lret
in
popa
outsb
call
pop
and
adc
pop
notb
sub
cs
mov
repnz
sbb
inc
cmp
push
fadd
jmp
test
cmpsb
and
cmp
sub
lods
sbb
out
sub
rclb
and
in
leave
jns
imulb
mov
bound
int
mov
sbb
movsl
pop
rcll
and
iret
negl
aaa
dec
cwtl
pop
xchg
xchg
and
mov
pop
or
jno
mov
in
pop
cmp
cmp
dec
xor
test
mov
fnstcw
jle
loop
pop
ss
pop
jns
lcall
leave
lds
inc
insl
lret
cmp
sarl
test
push
sbb
aam
inc
mov
arpl
xor
popa
mov
inc
add
out
push
jmp
lods
cmpsb
int3
cmc
mov
xor
popa
ret
mov
dec
daa
mov
adc
loop
inc
inc
cmpsb
cmp
hlt
jp
dec
pop
cmc
pop
dec
push
or
pop
mov
int3
jecxz
adc
data16
cli
sbb
and
movsb
aas
leave
jp
sbb
subl
adc
push
decl
imul
and
xor
icebp
adc
daa
add
fdivl
sub
xor
push
push
inc
sti
mov
sbb
dec
sbb
and
adc
xor
call
lock
loopne
popa
mov
push
push
fwait
daa
mov
dec
xchg
aas
mov
and
popf
adc
dec
popa
add
fwait
pop
cltd
popa
mov
imul
jmp
movsl
mov
pop
idiv
pop
in
adc
dec
fdivrs
jne
and
push
mov
xchg
sbb
leave
mov
sbb
mov
mov
fxch
pop
jns
sbb
loop
pushw
stos
push
adc
push
xchg
dec
xchg
push
push
mov
and
lret
loop
xchg
mov
jb
mov
push
cmp
enter
test
cmp
aad
jmp
push
stc
and
addr16
and
pop
sub
int
outsl
mov
adc
cmpsl
push
mov
aad
and
and
rclb
or
int3
inc
in
sbb
mov
fstpt
inc
jns
push
das
jg
out
mov
orb
sub
divb
xchg
cmp
mov
mov
outsl
sub
insl
lods
mulb
add
test
inc
cmp
jns
daa
push
and
ljmp
ljmp
xchg
push
ds
test
fldenv
rcrl
push
movsl
and
inc
inc
andb
mov
mov
sub
jno
popa
inc
imul
movsl
mov
xchg
sub
mov
and
pop
mov
fs
xor
sahf
pop
ret
cmpsl
jno
dec
and
jns
cmp
pusha
sbb
outsb
mov
int
sti
pushf
xor
outsb
mov
in
add
leave
sub
mov
pop
les
sbb
xchg
lock
mov
pop
sbb
jno
pop
lods
push
in
mov
sbb
andl
sbb
shr
shll
mov
js
inc
out
jno
pop
mov
movsb
imul
xchg
iret
jae
arpl
stos
or
ss
jp
mov
dec
push
mov
sahf
lret
popa
scas
cmp
add
xchg
cmp
sbb
jo
icebp
jle
aad
pop
xor
sub
xchg
dec
arpl
push
pop
sbb
loopne
and
inc
test
fisubrl
ds
mov
pop
mov
mov
and
inc
jnp
pop
mov
test
cmp
jp
dec
xor
push
sub
jmp
insl
dec
pop
ds
mov
push
daa
mov
lea
pop
stc
inc
sub
or
lds
push
arpl
dec
movsl
add
inc
lcall
push
dec
es
jo
xor
inc
add
dec
in
pop
mov
inc
test
jo
mov
in
cs
inc
jne
sub
fwait
inc
cmp
lcall
loop
mov
push
or
adc
in
inc
addb
mov
dec
imul
push
jle
pop
out
cmp
push
and
into
push
imul
fistl
or
jmp
into
push
push
sub
jo
cmp
or
lods
gs
xchg
lcall
imul
outsl
cmpsl
push
pop
xchg
pop
insl
push
decl
adc
add
dec
shrl
icebp
pop
mov
ret
or
iret
xchg
mov
sti
das
bound
loope
lret
push
outsb
fstps
jb
getsec
ljmp
push
pop
xor
imul
sub
cmp
pop
add
pop
adc
and
jg
mov
cmp
sbb
scas
cbtw
sub
adc
sub
clc
jno
push
or
daa
mov
pop
aam
sbb
push
add
pop
xchg
and
je
push
sbb
and
movsb
test
sbb
and
in
inc
xchg
dec
push
fs
out
jno
xchg
and
cmpsl
xchg
sub
test
je
sbb
xor
pop
xchg
shrl
mov
jle
sbb
mov
sub
add
push
call
aas
pop
inc
imul
int3
push
cmp
mov
mov
dec
adc
je
rcrb
sbb
xchg
cmc
cmp
pop
jl
lods
cli
cmp
dec
adc
push
ja
push
dec
cmp
inc
stos
outsl
fiadds
sbb
test
xchg
xchg
inc
push
dec
mov
push
mov
js
cli
jmp
or
adc
add
popf
sbb
xchg
ja
mov
xchg
inc
xchg
les
fldenv
sbb
mov
pop
mov
popa
test
lcall
cmpsl
sbb
and
daa
push
repnz
dec
mov
sbb
sbb
inc
and
sbb
aam
call
ljmp
and
adc
cmp
mov
sarl
rorb
xor
mov
fxch
or
push
mov
daa
xchg
mov
lret
dec
rcrb
das
sub
dec
mov
xchg
out
cld
cmp
pusha
lret
jge
sub
out
dec
movups
add
fcomip
aaa
mov
inc
pop
sub
sti
sub
aad
sbb
lret
jbe
or
mov
test
lock
cmpsl
mov
mov
flds
xchg
sti
xchg
lret
les
pop
mov
repnz
test
adc
sbb
xchg
jecxz
addr16
clc
pop
popa
adc
jmp
fisttps
dec
stos
ret
sti
or
mov
xlat
jle
mov
cmc
lock
testb
cmpsb
notl
sbb
add
push
add
mov
and
fstpt
push
mov
mov
push
jae,pn
mov
fidivrl
mov
sti
test
idivb
and
insl
fxch
dec
cmp
std
loopne
ja
xchg
mov
shll
fdivrp
mov
popf
adc
add
imul
notl
jge
addr16
sbb
in
mov
pop
xchg
xchg
add
xchg
rcr
or
sahf
popa
pop
leave
dec
sbb
mov
iret
test
or
sub
sbb
pop
sbb
inc
cmp
push
cltd
roll
jns
jae
sub
outsl
ficomps
out
cmp
mov
cmc
xchg
inc
popa
fstl
jns
adc
pop
xchg
mov
leave
add
mov
xchg
adc
cli
pop
movsb
cmp
add
push
pusha
icebp
cli
and
int3
cmp
jmp
push
sub
scas
inc
xchg
sub
push
xor
cmpsb
incb
mov
fildl
xchg
push
cmp
pop
mov
movsl
cmp
inc
popa
bswap
push
outsb
xchg
sbb
xchg
mulb
and
daa
sbb
add
sub
push
sahf
push
ja
mov
and
add
pop
arpl
mov
popa
sub
adc
xchg
popfw
mov
sbb
sbb
and
cmp
pop
mov
xlat
xchg
or
xchg
lods
js
and
adc
das
movsb
add
xchg
push
inc
aas
cmp
adc
sar
iret
pop
mov
dec
dec
lods
xchg
mov
imul
push
insb
out
push
pop
leave
jnp
cltd
sbb
loop
sbb
sbb
cmp
pop
sti
fbld
iret
jl
shll
adc
pop
add
mov
dec
xor
add
mov
fistpl
dec
dec
aas
les
int
jecxz
or
in
lcall
imul
call
pushf
adcl
jae
imul
and
mov
add
outsl
push
push
ss
movsb
out
push
mov
inc
inc
bound
bound
mov
mov
ljmp
stc
fsubrl
pop
mov
popa
add
les
nop
pop
movsb
fldenv
stos
xor
adc
popa
gs
sbbb
inc
inc
test
or
push
out
push
ljmp
into
lods
movsb
pushf
inc
dec
pop
mov
fistps
shrl
xor
daa
cmp
jb
ljmp
insl
loop
outsb
push
add
cmp
es
addr16
jg
cmc
mov
xor
mov
xchg
pop
sub
test
sbb
leave
sub
inc
or
addr16
lock
outsl
xchg
mov
adc
inc
mov
add
aaa
pop
loope
jns
sbb
mov
inc
dec
xor
lret
aad
ljmp
shll
movsb
xor
lcall
xchg
sub
dec
stos
add
repz
mov
mov
mov
pop
push
iret
mov
xor
cld
push
loop
leave
pop
ret
pop
xchg
xor
dec
addr16
ret
test
add
push
mov
mov
pop
pop
test
stc
imul
sbb
sbb
pop
insl
add
notb
pop
jbe
sub
xchg
pop
jge
cmp
jns
pop
ljmp
mov
mov
push
int
add
push
push
fistpll
add
pop
jg
fcomip
sub
adc
popf
and
push
lret
push
popf
inc
mov
xor
pop
and
push
nop
mov
cmp
mov
sbb
testl
call
loop
cmp
daa
pusha
aaa
aas
stos
cwtl
mov
jg
or
out
daa
mov
push
or
push
sahf
mov
aas
inc
inc
icebp
sbb
mov
mov
test
inc
mov
bound
push
or
imul
insl
xor
andb
and
jl
jbe
jle
sbb
ret
sub
pop
ret
and
pop
mov
pop
fadds
pop
sub
insb
sbb
pop
dec
mov
mov
inc
cmpsb
jle
test
frstor
daa
cltd
mov
fbld
mov
sbb
lcall
iret
mov
addl
mov
adc
mov
xchg
xor
mov
fxam
sbb
push
enter
push
or
or
jo
sarl
ret
call
loop
jl
mov
aas
cmp
xchg
ret
inc
xchg
adc
loop
push
lret
cmp
test
mov
and
add
fwait
cmp
pop
cltd
cltd
push
lods
subl
and
or
inc
loope
lret
mov
xor
xchg
in
inc
and
bound
lds
add
icebp
dec
das
mov
dec
fisubs
dec
pop
ja
xor
push
mov
push
mov
adc
mov
xor
push
sbb
out
popf
sub
sahf
jns
mov
std
push
inc
sbb
cmp
es
dec
mov
dec
divl
in
and
push
aad
mov
or
sbb
mov
push
adc
loope
sbb
shll
loop
and
daa
mov
pop
pop
jnp
mov
dec
mov
jl
and
test
jbe
jns
imul
jbe
mov
sub
xchg
pop
and
mov
add
int
pop
jno
push
mov
inc
mov
mov
pop
ja
xor
mov
popa
call
cmp
call
aaa
orb
bound
cmp
sbb
pop
aaa
sbb
fsub
cltd
push
mov
punpckhdq
mov
scas
idivb
test
and
pop
or
and
adc
dec
lahf
push
inc
pop
lock
xor
push
je
sbb
sub
push
pusha
aam
sub
scas
cltd
or
or
adc
mov
cltd
jecxz
mov
cld
mov
mov
cmp
mov
iret
dec
push
xor
push
cmp
ja
push
addl
or
mov
and
mov
xorl
popf
fistl
in
jbe
pop
cmp
push
loop
xor
test
cmc
sub
sub
stos
push
sbb
sbb
and
mov
xor
mov
ret
nop
push
jp
loop
fsubrl
mov
fnclex
mov
daa
mov
mov
sti
shll
inc
lods
xchg
dec
sub
cmp
adc
in
xlat
jno
js
cmp
fistl
add
lds
xchg
icebp
sbb
andb
adc
jge
lods
leave
or
dec
fs
lahf
call
mov
xchg
dec
jb
inc
pop
push
jbe
inc
ljmp
movsb
sbb
data16
xor
or
lahf
dec
push
push
lahf
fldpi
mov
pop
xor
ja
or
sbb
cmp
lods
subb
ret
fcmovu
ja
gs
push
loopne
dec
rclb
xchg
lock
mov
lods
dec
push
and
sbb
mov
loopne
mov
xlat
add
inc
jge
inc
mov
aad
jge
mov
cmp
cmp
and
das
hlt
mov
sub
xchg
sbb
lahf
aas
push
das
inc
sub
sbb
xchg
cltd
inc
test
std
cmp
roll
enter
xor
das
leave
jno
inc
mov
popa
lods
mov
push
mov
pop
loop
fisubl
push
mov
adcl
push
xor
jl
xchg
adc
mov
xor
sub
add
ss
pop
aaa
mov
xchg
imull
sbb
push
mov
sub
or
mov
daa
mov
aaa
xor
mov
or
xchg
xor
aaa
call
das
lock
mov
mov
loope
dec
cmp
xchg
hlt
push
insb
mov
scas
test
subb
mov
scas
dec
loope
mov
out
mov
push
dec
mov
in
loop
mov
and
and
movl
push
jp
dec
jb,pt
sub
shr
aas
pusha
lds
cmp
push
adcl
mov
lgs
pop
jg
pop
ret
daa
imul
mov
dec
push
adc
cmp
jae,pt
mov
xor
push
cld
stc
xor
inc
and
js
mov
xchg
lcall
cmp
push
inc
aas
xchg
or
dec
push
shll
push
es
movsl
inc
cltd
xchg
addb
popf
add
xchg
shll
and
dec
sub
mov
ret
int
mov
sub
xor
movsl
lret
call
ret
negb
icebp
and
imul
cltd
sti
xchg
ret
and
or
add
subb
ss
mov
and
arpl
sbb
test
mov
push
mov
fimull
xor
sub
sbb
aam
test
ret
lds
and
xchg
sub
in
out
insb
fnstcw
pop
popa
mov
mov
jecxz
push
sbb
rolb
popa
shll
mov
arpl
dec
inc
jae
mov
mov
fidivl
loop
push
popf
xchg
loope
fwait
pushf
enter
lahf
sahf
pop
inc
xchg
sub
xchg
fs
rcr
movsb
push
and
mov
sbb
icebp
addr16
ljmp
dec
xchg
push
add
sub
mov
jae
jae
push
sbb
xchg
jecxz
xorb
in
dec
sbb
add
dec
mov
cmc
std
fnsave
jae
sub
pop
clc
add
stc
std
incl
mov
test
je
movsb
fwait
mov
inc
cmp
mov
sub
loop
orl
jnp
loope,pn
test
xor
into
sbbb
addr16
dec
sub
sub
or
adc
cli
out
jg
lcall
sbb
out
outsb
sti
jle
jae
inc
cmp
pop
jno
dec
pop
js
sub
mov
aam
xchg
or
xor
pop
xor
add
push
mov
adc
js
cmpsb
iret
pop
sub
xchg
mov
jns
mov
xor
xchg
sub
inc
dec
inc
pushfw
in
xor
arpl
stos
adc
outsb
es
pop
mov
add
movsb
sbb
adc
cmp
adc
mov
je
sbb
nop
adc
xchg
mov
cld
imul
aas
inc
insl
mov
lret
nop
bound
out
mov
inc
push
adc
xchg
push
dec
inc
test
js
dec
push
lcall
cmp
loope
cmp
cmp
and
jecxz
lret
push
inc
pop
loope
mov
cmp
loop
popf
pop
inc
push
repz
mov
xor
jae
popa
stos
jp
imul
out
stos
mov
sbb
enter
sub
es
pop
sbb
xchg
jb
pop
and
inc
mov
fstps
gs
popa
mov
and
jns
jmp
enter
cwtl
xor
inc
daa
sub
mov
loop
stc
addr16
xor
in
mov
loop
data16
xor
test
out
jnp
lock
sbb
xor
test
clc
or
xchg
mov
lcall
int
cmpsl
sbb
xor
cmpsl
cmp
cmc
fsts
sbb
and
sbb
push
pop
das
sbb
and
sbb
pop
pop
imul
and
jno
cmc
sbbl
aad
sbb
and
lcall
loop
aam
popf
adcb
mov
xchg
loop
pop
xchg
sbb
add
outsl
adc
scas
pop
sub
pop
bound
pop
cmp
mov
push
xor
or
inc
dec
in
adc
push
hlt
pop
xchg
push
and
loop
xor
mov
xor
imul
pop
xor
cmpsb
outsb
sbbb
call
addr16
xchg
jne
call
sub
dec
scas
dec
dec
loope
sbb
in
cmc
cs
jne
sbb
sahf
dec
push
into
adc
xor
inc
ja
xor
mull
sbbb
mov
mov
xchg
jge
insl
xchg
sbb
inc
adc
std
xchg
lods
pop
imul
call
pop
sbb
nop
jns
ljmp
fistpl
loop,pn
adc
xchg
daa
and
and
adc
out
pop
jo
push
xor
mov
or
jl
cmpsl
mov
push
dec
sbb
cmp
mov
cmp
stos
pop
mov
rcll
mov
dec
jbe
jne
sbb
cmp
mov
add
popa
stc
inc
dec
imul
push
sub
or
sti
sbb
fwait
xchg
dec
sub
mov
inc
fdivs
cmpsl
cmc
pusha
mov
or
mov
inc
enter
adc
xor
sbb
mov
sbbb
cmp
mov
rorl
mov
mov
movsb
push
aas
loop
fs
int
stos
lahf
in
pop
cmpb
loope
jb
mov
xchg
jae
mov
cld
pushf
adc
std
xorl
jle
test
jno
jmp
sbb
ret
add
and
shl
enter
push
loop
ja
fists
xchg
imul
cltd
mov
fistpll
mov
mov
mov
ret
aas
aas
sub
push
push
int
or
inc
inc
rcll
push
lds
add
rcrl
shrb
sub
add
push
mov
push
les
adc
xor
and
aas
and
icebp
xor
mov
dec
je
inc
and
mov
sbb
fldenv
cmp
aad
ljmp
ficoms
xchg
dec
aaa
imul
cltd
sarb
aaa
les
inc
cltd
mov
jge
js
mov
push
dec
xor
xchg
in
xchg
xchg
mov
imul
mov
pop
loop
into
insb
ss
mov
adc
adc
das
inc
inc
sar
push
push
mov
daa
cmp
cmc
xchg
test
fwait
mov
dec
mov
loop
mov
push
rcrb
stc
mov
mov
sub
shlb
lods
add
mov
notb
jg
cmp
mov
enter
fucom
fs
nop
jnp
pusha
stos
jno
int
repnz
cmp
rcrl
sbb
stc
stc
jae
xchg
icebp
xchg
lods
jae
daa
aaa
cwtl
sbb
enter
mov
lods
pushf
out
std
into
pushf
mov
movsb
je
fnstcw
xor
sbb
xlat
into
test
outsb
jno
cmp
stc
inc
mov
dec
cld
dec
lods
sub
xor
mov
xor
and
or
scas
cwtl
imul
xor
jns
stc
imul
push
sbb
mov
les
stc
gs
push
dec
cmp
xor
negb
sbb
push
ret
cwtl
loop
je
mov
mov
and
loope
aaa
mov
cmpsl
ret
push
and
xor
aas
test
sbb
repz
push
ljmp
nop
outsb
cmp
pop
xor
sbb
arpl
in
jecxz
sbb
push
adcl
mov
and
xor
inc
push
cs
adcl
mov
jns
lock
fidivs
rorl
andl
mov
and
xchg
xor
aaa
jmp
pop
and
xor
xor
popf
xor
xchg
jp
mov
inc
orb
movsb
lret
cmc
dec
fxch
jns
cmp
es
xor
jle
fisttpll
inc
mov
popa
mov
mov
ftst
test
inc
cli
cmp
outsl
sbb
push
mov
push
jp
inc
call
mov
scas
xchg
inc
add
shlb
lcall
xor
xor
push
or
xor
add
xchg
push
test
sbb
int3
sti
subl
inc
test
pop
adc
jmp
inc
dec
pop
fidivrl
jg
add
mov
jno
gs
call
and
mov
xorl
icebp
mov
mov
test
jmp
adc
jg
adc
mov
xor
shlb
sub
sbb
sbb
stos
inc
stc
xor
stos
xor
movsl
lcall
out
imul
xchg
and
jg
icebp
inc
aam
and
adc
cmpsl
cwtl
bound
and
mov
fdivl
mov
xchg
cmp
xchg
push
mov
das
aad
repnz
andb
sbb
enter
and
ret
sub
int3
mov
xor
dec
call
int3
push
pusha
mov
or
or
loop
negb
jmp
sub
lahf
jle
add
lods
jge
sub
xchg
push
aad
inc
or
xchg
enter
mov
push
xor
dec
int3
imul
nop
pop
jmp
push
xor
mov
mov
mov
push
xchg
out
popa
js
nop
xor
aad
fimull
or
hlt
adc
pushf
in
scas
xor
popa
pop
mov
pop
mov
xor
out
mov
push
scas
xchg
das
add
jnp
das
mov
sarl
inc
xchg
xor
inc
sarl
es
jb
inc
loop
push
inc
std
and
mov
addr16
and
xchg
pop
lcall
fdiv
mov
popa
or
into
mov
das
sub
push
adcl
test
sti
cmpsb
fwait
sbb
fwait
and
add
push
lcall
pop
divb
lock
std
cmp
movsb
sub
in
sub
xchg
push
jb
lds
sbb
stc
fistps
mov
shll
jae
sub
dec
cmp
mov
aas
mov
lcall
dec
loop
and
lret
mov
aaa
cmp
push
leave
push
aas
rcrl
add
sbb
mov
scas
rcrl
test
xchg
cmp
xchg
pop
scas
jnp
push
sti
shl
popf
mov
push
repnz
shll
jle
fwait
aaa
loop
lds
in
roll
sbb
arpl
xor
loop
dec
dec
inc
das
dec
mov
cmp
ds
das
cwtl
sub
pop
fdivl
daa
mov
or
fs
test
popf
mov
mov
lahf
dec
shl
sbb
sub
fs
out
sub
loop
xor
movsb
fildll
push
js
cmp
fwait
or
pop
sbbb
push
mov
mov
lret
sarl
push
jae
sti
cmp
inc
and
les
xchg
into
dec
pop
loop
fimull
jbe
sbb
or
push
sarl
and
das
aaa
loop
nop
inc
ss
sub
or
jmp
cmpsl
xor
pop
imul
push
iret
fld
pop
inc
jbe
fucomi
pop
imul
xchg
fbstp
or
iret
xor
and
mov
cmp
ret
adc
adc
in
xchg
lods
stc
xlat
subl
popa
sti
mov
push
mov
inc
pop
sub
inc
pop
and
pop
vpcmpgtw
sarb
jle
push
mov
ds
cmp
jno
stos
ljmp
ljmp
arpl
mov
mov
std
movsl
nop
stc
std
movsl
xchg
mov
xor
fwait
inc
int3
mov
pop
cltd
mov
xchg
icebp
sub
stos
jle
stc
xchg
sbb
jne
inc
and
mov
addr16
sbb
pop
sbb
mov
and
or
xor
pop
sub
outsl
pop
adcl
leave
push
movsb
jmp
int3
xor
mov
mov
mov
test
jns
out
mov
rclb
scas
in
aaa
ret
call
sti
push
mov
mov
lock
cmp
and
xor
adc
pop
ljmp
sbb
cltd
shll
and
bnd
leave
mov
mov
popa
mov
imul
xor
popf
flds
mov
push
cmp
add
sub
cmp
leave
in
lock
call
fstps
push
push
push
pop
nop
sbb
js
mov
add
cmp
sbb
jge
pop
xchg
jns
fidivl
int
imul
push
mulb
outsb
fbstp
inc
mov
icebp
bound
pop
sbb
add
orl
jno
xchg
fwait
jp
in
test
and
lea
jns
pop
add
sub
adc
sub
jns
mov
push
shrb
cmpsl
cmc
mov
in
stos
xchg
or
ljmp
xor
adc
inc
xor
test
mov
repnz
mov
cli
mov
mov
lock
jb
rcll
and
xor
xchg
push
in
jge
daa
pop
cmpsb
jnp
xchg
leave
mov
or
loopne
cld
mov
rorb
inc
adc
test
dec
mov
les
mov
sbb
xchg
stc
and
or
jne
sbb
and
inc
jnp
or
inc
xorl
js
out
jae
push
xor
xor
sub
pop
test
sahf
and
push
xor
cmp
push
bound
mov
sbb
icebp
sub
mov
stos
adc
and
sbb
xor
aas
add
dec
shlb
ja
stc
addb
inc
lahf
pop
ret
xchg
shr
mov
movsb
inc
push
adc
and
cltd
inc
bound
mov
push
dec
outsl
push
pop
sub
dec
add
xchg
aam
sub
and
out
inc
and
loop
adc
inc
mov
stc
inc
fbld
mov
jne
jbe
aaa
loope
mov
fidivrl
loope
jo
mov
fstpt
xor
and
xor
aad
adc
mov
ret
jns
inc
inc
into
sbb
imul
push
loope
cmp
das
xor
movsb
inc
inc
xchg
sbb
mov
push
pop
ja
addl
xor
push
and
dec
leave
or
and
cld
stc
xchg
ljmp
xchg
mov
ss
sub
or
jno
leave
pop
loope
push
repnz
daa
dec
loop
pop
sub
jo
dec
sub
in
pop
lods
sub
into
jb
mov
jne
lea
sbb
sbb
ror
pop
jmp
ja
pushf
xchg
inc
loopne
in
xor
xchg
xchg
sub
mov
enter
mov
mov
outsl
clc
fdivs
leave
push
loop
and
popa
sbb
push
dec
mov
ljmp
jae
shl
pushf
push
out
cmc
sub
aaa
lcall
adc
stos
lea
mov
push
mov
xorl
push
ss
jb
cmp
mov
push
pop
leave
mov
addb
mov
popa
or
mov
mov
adc
sub
test
sbb
pop
call
sbb
and
push
xor
push
adc
out
push
dec
hlt
and
push
pop
popa
sbb
sbb
mov
add
pushf
andb
push
pop
popa
sti
xchg
mov
mov
in
jnp
lcall
imul
repnz
frstor
mov
add
inc
movsb
push
hlt
add
xor
mov
mul
popa
call
pop
mov
and
ljmp
call
push
loope
xor
mov
push
loop
mov
mov
cld
jo
movsb
or
pop
sbb
mov
sbb
les
sbb
jp
push
push
dec
jbe
test
inc
pop
loop
jnp
sbb
lds
and
xlat
addr16
xor
sbb
or
mov
aam
sbbl
outsb
mov
packuswb
movsl
or
and
test
stos
mov
das
loop
inc
call
mov
shl
push
sub
insl
fisubl
xor
pop
jecxz
inc
out
dec
hlt
loope
aam
loop
cmp
imul
std
cmpsl
ss
pop
cmp
ret
scas
mov
pop
movsl
and
divb
cli
jnp
jae
ficoms
lcall
cmpl
jns
lds
shr
xor
adc
and
sbbb
rcrb
das
and
ret
in
leave
in
push
inc
ret
xor
mov
loope
jmp
test
cmp
add
pop
outsl
mov
movb
fstl
adc
xchg
xchg
loop
pop
mov
xor
push
push
mov
xchg
mov
xchg
cli
add
push
cltd
sbb
adc
fucom
jbe
and
sbb
loope
loop
bnd
inc
outsl
inc
mov
imul
cmc
xor
or
fldl
dec
stc
push
jbe
sbb
jge
jns
rorl
cli
ja
xor
lods
lds
adc
int3
mov
push
fnstenv
pop
maxps
int3
add
sbb
xorb
inc
cmp
imul
cs
fwait
mov
mov
mov
sbb
xchg
mov
xchg
aam
orl
xor
xchg
xchg
jecxz
and
insl
outsl
xchg
xor
loop
cmpsl
mov
push
push
repz
addr16
shll
je
xchg
popf
stc
mov
adc
pop
pop
stc
icebp
loope
jae
jg
gs
fwait
or
loop
hlt
call
divb
subl
adc
or
lret
sbb
mov
add
and
movsb
dec
add
out
fsubrs
inc
dec
mov
mov
sbb
movsb
test
popf
push
sbb
int
in
cmpsb
mov
mov
daa
sub
and
in
pop
mov
icebp
aas
pop
or
jle
xchg
lods
les
das
sbb
sub
fidivl
das
mov
pop
cwtl
dec
xor
push
xchg
sub
pop
and
sbb
mov
jmp
fstpl
gs
inc
pop
mov
pop
xchg
stos
and
xchg
pop
dec
aad
pop
in
push
and
xchg
mov
pushf
pop
pop
andb
dec
push
lods
pop
mov
pushf
aas
iret
inc
cmpb
mov
pop
and
andb
inc
and
pop
push
and
cmp
popf
cmp
mov
pop
loop
push
and
sbb
cmp
ror
andb
shrb
mov
push
pop
and
out
ljmp
les
out
aas
cmp
mov
into
clc
sahf
stos
mov
or
daa
mov
call
xchg
push
and
fwait
jo
xchg
lret
insb
mov
or
cmp
mov
test
out
fistl
mov
rorl
pop
mov
aaa
add
lods
or
dec
pop
test
clc
leave
push
ljmp
sub
xor
and
xor
jbe
xor
adc
into
iret
lahf
mov
cmp
nop
cltd
out
mov
popf
mov
pop
mov
movsl
xor
mov
rcrl
inc
ficomps
dec
sub
dec
std
lods
adc
sbb
lret
call
movsw
xchg
rorb
and
out
sbb
pop
loop
cwtl
in
fldl
pop
xchg
add
jno
xor
fdivs
xchg
scas
iret
mov
movsb
cltd
xchg
xchg
xchg
mov
popf
sarl
sub
xchg
push
xchg
cltd
addr16
pop
loope
mov
orb
in
jne
ds
dec
sub
f2xm1
lcall
lcall
insl
sub
dec
inc
fisubs
in
add
pusha
ret
hlt
pop
lret
dec
leave
xchg
fstl
stc
aas
int
out
sahf
mov
rcr
fldl
cli
jge
jmp
jb
notb
clc
sti
pop
adc
jl
nop
adc
mov
bound
sub
sahf
int3
push
ret
and
lods
xchg
sti
das
or
sbb
arpl
adc
cmp
xchg
adc
cmpsl
or
xor
push
sbb
dec
lds
in
mov
stc
xchg
scas
mov
inc
cmp
push
xor
sbb
cs
adc
push
or
fwait
aas
push
scas
lods
fcmovne
stos
sub
je
sub
pop
xchg
leave
mov
and
psllw
sbb
mov
dec
fwait
adc
pop
stos
push
and
sbb
dec
inc
ret
sub
xor
push
cmp
lret
push
test
scas
sbb
push
mov
xor
repz
xchg
out
xor
enter
and
pop
adc
pop
stos
outsb
daa
mov
push
les
push
fs
xchg
and
mov
mov
xchg
cld
movsl
xchg
loop
mov
sbb
lods
aas
dec
in
mov
xor
lea
sub
leave
clc
jno
xor
roll
mov
jl
xor
mov
xor
cltd
and
push
and
cmp
mov
icebp
outsl
loop
enter
cpuid
cmp
xchg
lret
pop
xor
inc
dec
orb
ljmp
fld1
push
lods
or
imul
loop
push
pop
dec
fwait
cli
push
mov
xchg
hlt
daa
loope
ds
jl
daa
cmp
inc
sti
icebp
int
sarl
adc
mov
sub
aaa
dec
fisubrl
leave
mov
test
push
sbb
repnz
insl
fiadds
popa
jns
fwait
adc
loop
xchg
addl
cwtl
outsl
enter
data16
cmp
lahf
push
jle
imul
cmp
popf
cmp
in
mov
xchg
jmp
jmp
inc
lcall
subb
xchg
nop
push
lds
sbb
adc
jo
cmc
sahf
stos
inc
push
xchg
icebp
xor
and
xchg
lcall
and
cmc
push
inc
fdivl
inc
adc
mov
sub
ret
mov
push
pop
xlat
mov
imul
popf
je
js
fwait
lods
sub
pop
push
xor
mov
push
sbb
lods
imul
inc
dec
sub
xchg
cmp
xor
fnsave
fidivl
and
pop
bound
mov
scas
enter
adcl
stc
lods
arpl
and
mov
xor
sub
or
int
xor
outsb
push
xchg
dec
or
es
popf
xor
adc
xor
mov
lods
dec
xor
xor
cmp
mov
add
fwait
cli
test
jne
ret
and
dec
fld
cltd
sub
lds
add
test
adc
cli
lds
inc
in
es
mov
stos
icebp
loop
sahf
jle
jbe
lods
xor
sub
dec
nop
push
and
sti
inc
dec
xor
lods
jb
jg
imul
addb
cltd
push
lea
idivb
andl
leave
js
push
int
mov
or
mov
scas
mov
cmp
sbbb
in
mov
or
mov
add
loope
sub
ljmp
daa
aaa
cmp
and
sub
stc
xlat
sub
sbb
xchg
in
insl
inc
sbb
sbb
repnz
lahf
in
mov
dec
ret
andb
and
mov
mov
out
mov
sub
imul
scas
jo
cmp
pop
sbb
inc
dec
and
xor
and
insb
adc
xchg
push
xchg
adc
adc
add
add
dec
xor
xor
lock
outsb
lcall
mov
sbb
inc
mov
lock
lret
outsb
icebp
mov
add
adc
add
mov
ja
loopne
or
mov
adc
movsl
jmp
lret
fildl
xor
push
push
xorl
fwait
arpl
mov
stc
dec
adc
insb
out
addr16
mov
inc
adc
add
addr16
rcr
dec
pop
outsl
ja
sti
xlat
in
imul
push
or
push
sbb
sbb
adc
aas
mov
scas
and
dec
mov
cmpsb
dec
das
sub
int
add
sub
clc
adc
ja
xchg
fcoml
sbb
insb
lock
fistpll
sbb
cmp
push
rcl
inc
sti
adcl
push
popa
sbb
notb
lock
setl
sbb
jb
adc
and
and
mov
or
fstp
jbe
loop
gs
xor
test
pop
leave
sbb
dec
and
aam
and
xchg
and
aad
sarb
xchg
popa
and
mov
cltd
push
mov
icebp
xchg
mov
loop
arpl
or
inc
push
jg
add
std
mov
xchg
xlat
mov
and
pop
arpl
movsl
and
shll
mov
inc
jne
push
shll
xchg
loop
mov
lcall
ret
int3
mov
mov
sbb
inc
adc
enter
inc
arpl
ret
push
mov
jb
jg
and
sub
xchg
lret
pop
or
mov
xlat
jp
shll
bound
mov
cmp
popa
xor
mov
shrl
and
sbb
xchg
ljmp
mov
aas
xchg
push
cmp
push
lock
jb
scas
mov
jno
arpl
icebp
dec
pusha
xorb
push
arpl
cmp
in
ficoml
ja
mov
sti
imul
pop
push
daa
ficompl
sti
sbb
fcomps
dec
mov
loope
outsl
xchg
mov
popa
popf
xchg
loop
idivb
or
mov
mull
mov
leave
inc
push
and
mov
std
pusha
or
lahf
xchg
push
icebp
stos
stc
data16
dec
pusha
test
shll
mov
mov
pop
adc
popf
adc
nop
cmp
fabs
gs
jno
mov
adc
lods
adc
lds
popa
and
push
push
lods
cmpsb
fidivrs
cmp
cmp
adc
mov
mov
adc
pop
pusha
stos
cli
pop
jmp
sbb
inc
sahf
xor
loop
mov
sbb
stc
mov
sub
into
mov
pop
cmp
dec
shrl
xor
subb
sbb
sti
push
and
pop
or
loop
stos
mov
mov
jp
dec
pop
in
inc
pop
mov
push
ja
mov
stc
jecxz
inc
or
shlb
mov
pusha
mov
popa
push
cmp
cmp
jg
mov
je
loope
xor
in
mov
add
xor
repz
in
ss
jmp
popa
mov
ljmp
cmp
dec
mov
loope
xor
lret
ss
cmpsl
inc
pusha
sarl
in
sub
pop
in
sbbl
pop
push
rclb
add
jbe
ss
inc
xor
leave
mov
mov
pop
rol
jb
jmp
imul
loope
and
stos
aam
arpl
jecxz
pusha
mov
out
xor
adc
dec
sarl
sub
inc
lods
xchg
ljmp
dec
inc
sti
sub
loop
lods
fwait
scas
icebp
xor
loop
sahf
inc
dec
fstpt
dec
push
mov
cmpsb
daa
aad
popa
inc
inc
inc
add
sub
sbb
mov
add
scas
mov
loop
movsl
cltd
stc
loopne
pop
fdivr
adc
mov
imul
ljmp
mov
lods
cmp
jle
xor
cmp
xor
cmp
sub
test
mov
push
push
xor
sbb
pop
mov
cmp
mov
pop
mov
shrb
and
mov
mov
cmc
mov
insb
lods
fnstenv
mov
mov
add
mov
pop
mov
dec
fnsave
sbb
lea
and
cld
add
and
adc
popa
stc
shrl
fwait
es
movsl
adc
fnstcw
stos
cmp
lds
insb
mov
stos
pop
sbb
aad
adc
aas
dec
dec
xor
sub
aas
and
shll
out
mov
cmp
push
inc
jns
lret
mov
or
pop
add
sbb
scas
fwait
sbb
add
and
lret
loop
lcall
cld
xor
bound
cmp
lahf
shll
bound
jp
mov
testl
imul
xchg
lea
popf
stc
js
aad
dec
aas
aas
jns
cmp
int
call
gs
femms
xchg
adc
mov
cmp
cs
jns
push
test
data16
push
mov
adc
mov
addr16
shll
mov
daa
ret
pusha
sub
out
push
cmp
cmp
cmp
mov
cmp
es
xchg
jbe
divb
lods
and
adc
jno
ds
mov
mov
popa
xor
push
jno
mov
push
jne
cltd
jge
xchg
loop
andb
sbb
add
push
aas
dec
adc
in
pop
mov
pop
xchg
push
addr16
imul
dec
or
insb
sbb
loop
shlb
and
lods
add
push
mov
jle
jo
fiaddl
gs
dec
mov
icebp
fldcw
mov
cmpsb
mov
stos
xor
sub
pop
or
bound
mov
scas
orb
sbb
pop
push
pop
or
and
push
jno
orl
lret
and
xor
lds
lock
add
xor
pop
cmpsb
and
and
push
sbb
mulb
test
inc
jg
xchg
mov
push
adc
ret
xor
dec
hlt
inc
ret
sub
movsl
cmp
es
int
push
popa
jns
lahf
inc
push
sub
dec
push
fidivrl
sub
mov
lea
mov
xchg
pop
in
mov
call
iret
popa
jge
pop
cmpsl
pop
lret
cmp
test
mov
scas
inc
imul
lock
movsb
and
repnz
call
jnp
lcall
fwait
mov
scas
gs
mov
mov
push
fs
push
daa
and
or
daa
and
mov
xor
mov
sbb
xchg
mov
les
sub
push
sub
test
jmp
fidivs
sub
loop
sbb
mov
xchg
fs
lods
lds
and
loop
mov
test
enter
lods
and
sbb
stc
dec
mov
lods
and
xor
push
mov
lcall
pop
fadd
ja
pusha
sub
sbb
imul
mov
jno
mov
push
dec
mov
inc
adc
jo
mov
mov
loop
and
or
hlt
ret
loopne
adc
cltd
fcmovnbe
cmp
loop
imul
sbbb
jbe
mov
mov
loope
cmpsl
xor
mov
les
int
fwait
and
cmp
mov
push
push
ss
cmpsb
add
jb
add
movsl
sbb
out
stos
inc
push
inc
shll
sub
sti
xor
adc
orb
push
push
jno
mov
in
lods
cltd
lcall
int3
jae
xchg
mov
dec
adc
sub
mov
xchg
add
xchg
cltd
push
in
xchg
in
pop
mov
mov
xchg
fiaddl
xor
int3
insl
popa
jnp
mov
hlt
inc
mov
in
sub
in
pusha
je
inc
mov
xor
lods
xchg
mov
adc
sbb
jmp
dec
pop
shll
bound
leave
loop
test
sbb
dec
and
pop
push
mov
int
decb
aas
mov
pop
jae
lods
fldenv
pusha
mov
loop
cmp
arpl
cmpsl
and
jbe
cltd
add
xor
and
xor
shlb
mov
push
and
movsl
push
xchg
sub
cltd
in
mov
repz
fiaddl
jbe
cwtl
pop
mov
gs
rcr
inc
and
mov
icebp
test
and
push
push
mov
push
and
pop
adcb
in
cltd
add
inc
mov
sbb
adc
mov
mov
mov
sub
mull
pop
mov
fnstcw
popa
xor
mov
test
jge
mov
pop
sti
std
push
adc
cmp
sub
jge
push
int3
or
push
xor
add
cltd
xor
xchg
cmp
pop
sahf
cwtl
loop
mov
imul
lcall
push
push
and
xor
pusha
push
dec
and
fbld
xchg
faddp
scas
push
jns
mov
xor
or
push
adc
xchg
sbb
std
gs
sbb
xor
dec
mov
out
and
cli
out
sub
shlb
fwait
pop
inc
mov
mov
cmp
sub
and
jl
leave
out
scas
ss
in
call
addb
jb
sbb
popf
nop
jns
ror
sti
sub
loop
mov
cmp
pop
loope
pop
sbb
and
in
cmp
mov
jne
dec
push
cmc
subl
xor
or
jbe
ficoms
xchg
lret
xchg
jb
inc
cmp
mov
dec
test
cwtl
std
dec
or
or
sub
dec
dec
iret
sbb
sbb
sbb
lcall
or
dec
mov
mov
adc
sub
jecxz
sub
mov
mov
dec
jecxz
adc
pop
inc
mov
cmp
cmp
js
mov
rcl
jbe
je
popl
lds
cmp
sahf
test
out
adc
lret
fwait
std
mov
inc
push
and
mov
pusha
fistps
icebp
adc
adc
scas
mov
jbe
sti
inc
lret
dec
adc
push
cs
mov
jns
push
xchg
xorb
repnz
into
out
xor
jb
mov
dec
out
sbb
and
and
sti
jne
xchg
insl
mov
in
bound
cmpsl
mov
cltd
push
and
pop
fcoms
push
loope
xchg
mov
and
popa
jns
subl
loop
push
jno
ds
ja
loope
gs
loope
xchg
lds
lret
sbb
push
adc
movsl
dec
xchg
add
sbb
stc
sbb
xchg
jg
mov
daa
popa
test
iret
jmp
cmp
and
sahf
sbb
sub
xor
mov
pop
aad
ret
xchg
pusha
es
ja
lock
push
xchg
imul
mulb
add
xchg
pop
jecxz
arpl
cmpsb
dec
inc
loopne
std
gs
out
mulb
stos
pop
dec
ret
mov
mov
inc
lret
adc
ja
xor
dec
add
cmp
scas
mov
or
repnz
aas
mov
jp
bound
test
add
jo
test
pop
daa
or
out
mov
popa
gs
imul
mov
inc
cmpsb
mov
cli
mov
mov
and
bound
ds
repz
sub
aas
lock
jmp
stc
aad
and
xor
adc
dec
aas
push
orl
shr
inc
sbb
iret
mov
mov
fldl
cmp
les
jb
mov
mov
add
and
or
mov
out
sub
nop
scas
or
jmp
out
lock
mov
xchg
cmc
inc
cli
or
push
inc
arpl
mov
cmp
loopne
aaa
loope
pop
and
mov
fwait
xor
popa
inc
jl
pusha
push
shrl
xor
sbb
xor
mov
adc
inc
aas
mov
push
push
push
jno
arpl
sub
leave
cs
cmp
int
out
inc
pop
shrb
cmp
ficomps
add
sahf
sub
sbb
stc
and
imul
mov
scas
mov
xor
fnstenv
dec
gs
movsl
sbb
sbb
adc
mov
mov
mov
dec
mov
in
xchg
daa
and
mov
and
test
pop
sti
mov
pop
test
push
addr16
jno
and
scas
cmp
push
call
jl
inc
lds
pop
insb
insb
xorl
sub
add
and
gs
test
mov
dec
lret
mov
jne
sbb
lcall
in
loop
aas
jb
mov
add
aas
and
cmp
dec
idivb
dec
loop
imul
sub
lds
imul
adc
jg
lahf
ret
xlat
fnstsw
aas
cltd
mov
xchg
and
mov
mov
sbb
gs
push
sbb
adc
in
call
and
int
cmp
mov
xchg
lahf
pop
inc
gs
mov
sahf
cmp
cwtl
cmp
xor
mov
add
cmp
push
enter
xor
add
mov
xchg
inc
repnz
test
xchg
xchg
sbb
mov
aad
icebp
xor
dec
push
dec
and
adcl
scas
cmpl
jge
or
dec
inc
sbb
fidivs
sti
pop
clc
pushf
lds
mov
xor
push
dec
cmc
mov
popf
sbb
and
jl
insb
cltd
pusha
push
jno
lock
mov
sbb
aas
jp
lock
in
je
adc
sbb
addl
imul
daa
lods
cltd
cmp
pop
and
adc
cltd
adc
jl
inc
push
sub
mov
mov
pop
dec
lds
jl
outsb
cmp
test
dec
jl
repz
mov
mov
test
jae
sub
ret
mov
cltd
inc
mov
lea
dec
divb
test
sbb
pusha
pop
sbb
jmp
repnz
pop
shl
mov
andb
lret
push
scas
gs
push
js
mov
nop
jne
sub
sub
out
bound
and
pop
sbb
push
and
lcall
inc
xchg
popf
iret
cmp
mov
sti
dec
push
push
pop
jbe
lahf
notb
outsl
jle
push
add
mov
mov
sahf
xchg
mov
or
or
mov
sahf
inc
imulb
pop
test
repz
push
pop
push
in
js
jbe
cli
out
pusha
les
push
inc
sbb
lret
sahf
movsl
push
mov
fiadds
cmpsl
popf
sbb
mov
mov
mov
icebp
lcall
jmp
dec
inc
push
dec
xchg
adc
dec
fsts
and
stc
aaa
mov
mov
lcall
aaa
fistpll
inc
adc
jp
and
or
sbb
test
xchg
int
shll
out
push
add
push
adc
jge
cmp
pop
and
push
mov
and
pop
lcall
pop
jae
sub
lahf
dec
push
fisubl
test
mov
movsb
dec
mov
mov
sbb
and
out
icebp
fcmovu
loope
push
movsb
adc
vmovlpd
icebp
std
cwtl
adc
and
and
xchg
sbb
std
lods
aaa
adc
aad
shr
xchg
pop
not
cmp
mov
aad
addr16
cltd
mov
pop
bound
xchg
pop
sub
jae
inc
push
sbb
fldenv
cmpsb
push
jbe
sar
lcall
inc
xor
pop
dec
pop
mov
mov
adc
and
mov
rorl
adcl
ret
add
dec
cmp
out
xor
mov
imul
cwtl
int
push
jns
fcoml
xchg
in
push
lea
leave
adc
flds
adc
xchg
ja
sub
push
pop
or
ja
inc
aam
pop
pop
pop
jo
test
dec
fildl
hlt
adc
outsl
iret
lret
mov
test
dec
setp
aad
xor
addl
andb
sarb
pop
inc
adc
push
mov
lahf
push
and
or
rcrb
mov
dec
lahf
push
xor
bound
add
fsubrl
rclb
cli
add
mov
push
adc
fsub
and
mov
or
fidivl
push
cmp
jb
jb
fimull
jno
and
push
push
loopne
shl
sub
mov
xor
bound
negb
in
adc
push
lcall
sbb
icebp
rolb
mov
cs
mov
ss
mov
pop
jg
and
jbe
and
sbb
pushf
daa
enter
push
xlat
mov
sub
adc
popf
xchg
pop
or
cmpsl
push
cwtl
and
lcall
push
shll
mov
sbb
add
orl
scas
inc
pop
js
mov
jecxz
pop
xchg
xchg
sbb
outsl
or
adc
or
cmpsb
or
mov
jae
xor
inc
xchg
jae
sub
mov
cmc
and
ficomps
addr16
aam
into
clc
inc
aad
lret
sbb
fistl
sbb
sbb
push
movsb
mov
mov
add
and
in
in
mov
mov
ljmp
mov
testl
ja
mov
mov
push
mov
push
or
adc
rolb
ja
jae
add
das
cs
mov
jns
adc
sbb
sub
pop
call
xchg
xor
jne
jle
sub
and
std
lock
int
xlat
addr16
jne
mov
pop
add
jne
and
outsl
mov
pop
xchg
loop
lcall
out
cs
cmpsl
nop
cmc
lock
dec
lods
bound
add
adc
xor
push
push
sbb
xor
repz
mov
push
and
and
mov
scas
sbb
fdivrp
jg
push
sbb
lahf
hlt
adcl
les
xor
sbb
stos
or
add
jmp
xchg
push
hlt
add
dec
je
push
inc
aam
stc
inc
sbb
adc
dec
in
add
mov
mov
sbb
xchg
and
inc
sub
sbb
mov
pop
mov
inc
pop
push
insl
xor
aad
jae
xor
ja
xchg
subb
pop
dec
sbb
push
and
popa
xchg
frstor
in
cmp
push
jns
add
dec
xchg
and
xor
test
sbb
push
rcrl
loope
jmp
stc
dec
add
lahf
or
xor
and
fldcw
aad
pop
add
dec
inc
push
inc
pop
and
pop
mov
adc
and
push
sbb
jp
pop
mov
mov
pop
xchg
xor
xchg
sbb
stos
sbb
scas
mov
lret
dec
xchg
push
loop
xchg
popa
mov
fcompl
sbb
sub
in
scas
rorl
and
inc
sub
mov
sub
mov
add
inc
pop
and
pop
sti
or
daa
xchg
adc
push
in
jne
sub
lcall
and
dec
mov
mov
push
lock
loop
cs
xlat
sbb
mov
js
fbld
sub
in
dec
addl
inc
dec
inc
movsl
mov
leave
sahf
jnp
mov
push
cmp
xchg
xchg
or
add
mov
push
dec
push
icebp
movsl
es
dec
jmp
mov
mov
xchg
sbb
adc
xor
in
adc
adc
in
push
jnp
rcr
xor
xchg
cmp
addr16
insl
and
in
iret
pop
aas
add
into
cmp
std
and
idivb
sbb
movsb
std
int
icebp
dec
jg
mov
ds
test
cmp
icebp
imul
jns
cli
add
mov
data16
cmp
ret
test
sbb
loop
pop
jno
ja
sbb
cli
cltd
xchg
mov
lock
ficoms
fldcw
adc
lock
mov
aaa
jecxz
jne
mov
sub
mov
cs
mov
scas
dec
out
mov
dec
fnstsw
and
clc
sub
mov
mov
cltd
xorl
xor
fcoml
mov
in
jmp
test
push
sbb
add
push
jmp
add
xor
push
fidivrs
and
scas
movsl
jb
insb
repz
jne
ret
jmp
pop
mov
mov
jl
xchg
sub
push
mov
push
hlt
int3
movsl
rep
pop
arpl
cmp
dec
push
scas
cmp
add
mov
lret
shlb
in
jno
shrb
xchg
cmp
andl
and
and
xchg
in
xlat
les
jno
jmp
dec
lock
movsb
mov
push
or
ljmp
fs
popf
dec
sub
inc
push
mov
and
aam
test
test
lcall
cs
cltd
mov
ficoml
inc
mov
mov
cwtl
stos
lea
inc
push
leave
les
jecxz
shll
mov
inc
in
jl
sbb
push
pop
dec
mov
add
jmp
xchg
loop
adc
push
movsl
ss
cwtl
or
add
sbb
mov
in
and
mov
addb
mov
and
ljmp
push
addr16
pop
xor
sbb
fldcw
pop
pop
dec
xchg
sbb
fnstenv
jge
push
je
pop
rolb
mov
cmp
cmpsl
and
pop
fnsave
xor
mov
xor
je
and
adc
push
jns
xor
xchg
mov
stc
and
loop
push
lahf
jle
xchg
lcall
packsswb
int
mov
scas
inc
pop
loop
jnp
in
sbb
pop
xchg
xor
insb
sbb
mov
adc
mov
aas
scas
mov
sbb
int3
lods
xchg
and
push
mov
add
mov
adc
cld
pop
and
push
rcrl
call
xor
inc
mov
and
xor
test
xchg
mov
std
insl
or
push
jg
addr16
sbb
adc
mov
repnz
rorb
sbb
jmp
push
jne
dec
pop
mov
sarl
sub
addr16
rolb
xor
lret
adc
loop
xor
pop
jecxz
js
movl
or
out
add
xor
and
push
fcompl
shlb
mov
xchg
dec
cmpsl
imul
or
jle
jl
ss
xchg
xor
xor
pop
loop
popf
push
cmp
jl
out
sbb
sbb
sbb
imul
test
fldenv
jp
xchg
xchg
mov
jge
inc
bt
test
mov
cmpsl
lods
sbb
je
arpl
jle
ss
jno
push
ror
or
pop
adc
pop
dec
mov
pop
clc
pop
lods
insl
sbb
xor
cmp
mov
call
mov
inc
loop
fistpl
push
clc
imul
js
xor
and
mov
sbb
loop
nop
pop
inc
mov
mov
in
and
adc
out
or
stc
push
inc
call
and
lret
outsl
ljmp
ss
aad
add
aaa
sbb
inc
pop
push
xor
jp,pn
push
fwait
sub
test
in
add
ret
popf
pop
int
cmpsl
and
popf
loop
sbbl
and
mov
das
lret
jbe
popa
mov
js
or
cltd
shrl
mov
xchg
cmpsl
outsb
jg
pop
mov
xor
push
xchg
test
inc
dec
rorb
adc
push
loop
pop
hlt
sbb
or
pop
lcall
pop
sbb
movsl
jne
movsl
xchg
inc
mov
push
xor
xchg
mov
notb
cmp
mov
push
and
fcoml
pop
jbe
push
push
mov
mov
cmpsb
adc
enter
mov
sub
popa
nop
aad
jg
bound
mov
sub
das
int
inc
jbe
pop
mov
pop
pushf
mov
test
mov
jb
sbb
xorb
mov
jnp
mov
cmp
inc
xor
mov
dec
xchg
mov
and
mov
dec
xor
or
pop
add
sbb
popa
jae
sbb
fildl
es
inc
sbb
dec
xor
jle
inc
pop
das
add
gs
cmp
imul
mov
xor
sub
cltd
cli
mov
in
and
lods
push
xchg
mov
mov
popa
adc
xor
and
cltd
jmp
cmp
flds
push
or
adc
sbb
push
jnp
cmp
pop
and
jbe
sahf
jae
inc
adc
xor
jae
sub
xchg
scas
xor
cmp
cmp
es
sti
xor
pop
cltd
bound
jae
mov
jp
andb
sbb
mov
push
mov
dec
mov
lret
and
sbb
xchg
repnz
cli
xor
and
scas
and
lahf
sbb
cmp
sbb
mov
cmp
dec
push
inc
xor
push
cltd
pop
aad
inc
imul
push
xorl
cltd
xor
mov
mov
mov
and
lcall
jmp
sub
or
adc
mov
sub
jp
nop
les
divb
mov
in
test
enter
sub
leave
pop
xchg
nop
xchg
ljmp
lcall
das
sbb
push
and
popa
fstpt
sub
jnp
pop
adc
stos
pop
jno
lret
shrb
push
sbb
rclb
sub
xlat
imul
jmp
movsl
in
jae
dec
mov
jns,pn
loop
fwait
scas
cmp
mov
add
push
mov
xchg
jno
outsl
rolb
push
fistl
dec
dec
xchg
sub
gs
xor
dec
pop
jl
cmc
pop
mov
repz
adc
popf
ret
sub
add
in
and
mov
jle
mov
and
fidivs
sub
daa
aam
cmp
fisubrl
dec
and
mov
sbb
mov
mov
xor
sbb
cli
jg
shll
jns
out
xor
push
pop
mov
xchg
cwtl
xor
mov
mov
lods
mov
dec
lret
xor
xchg
sub
shlb
ljmp
xor
xchg
pop
loop
loop
nop
repnz
popa
mov
aas
sbb
psrld
mov
iret
mov
out
stc
dec
mov
out
lret
xor
xor
aaa
adc
pop
or
loope
outsl
sub
cltd
pop
jge
in
mov
movsl
push
sub
mov
icebp
and
imul
cmp
mov
inc
rclb
sbb
xchg
push
adc
push
leave
insl
shrw
mov
adc
sbb
jno
adc
sarl
mov
sbb
cmp
dec
sub
popa
mov
rorl
inc
mov
mov
call
into
push
imul
cs
adc
ds
or
in
xchg
lea
mov
xchg
es
push
xchg
mov
js
mov
fildll
sub
mov
add
loope
pop
cwtl
lret
xchg
iret
lret
stc
xor
cmpb
mov
mov
push
dec
sarl
mov
cmp
sub
imul
cmp
test
rorl
pop
xor
xor
mov
sub
ret
add
ret
or
aaa
dec
out
sub
cmp
fwait
add
scas
addl
in
jmp
ret
into
das
mov
or
aas
xchg
xor
ds
jno
lret
cmp
clc
and
fistl
stos
xchg
xorl
repnz
and
andl
test
cmc
xor
cmp
mov
jne
cmp
push
sbb
jmp
jle
imul
aas
inc
call
sbb
es
push
int3
jae
dec
inc
dec
push
in
and
jae
add
incl
lret
jb
lea
ds
push
shld
inc
xchg
enter
push
sbb
adc
dec
pop
rclb
add
scas
mov
jb
xor
and
in
pop
sub
leave
or
int
xor
push
cmp
test
ljmp
or
adc
adc
std
nop
xchg
push
sub
adc
xor
adc
pop
cwtl
sub
cmpsb
roll
sbb
cmp
popa
and
aaa
adc
inc
xor
dec
shl
popf
xchg
mov
push
push
loop
iret
std
cmpsb
mov
sbb
cmp
cltd
and
movsl
sbb
mov
pop
inc
cmp
pop
mov
pop
sti
sub
cltd
xchg
pop
inc
popf
mov
xchg
ret
andl
stc
movsl
repnz
or
movsb
lock
add
stc
jecxz
jp
xchg
push
xor
mov
mov
sub
daa
rclb
jg
and
jge
scas
dec
push
sahf
mov
cmp
loope
out
dec
leave
pop
daa
lahf
call
stos
push
leave
pop
loop
dec
jl
mov
push
mov
mov
mov
inc
xchg
sti
lods
clc
inc
test
in
push
sub
popa
stos
lds
cmpl
sub
cmpsb
fs
mov
test
loop
iret
mov
popa
push
orb
sbb
mov
shl
pop
push
subb
pusha
or
ss
push
add
mov
nop
aam
pop
dec
mov
decb
push
or
aad
adc
jno
push
inc
mov
cmpsl
mov
add
and
cltd
mov
xchg
js
mov
pop
movsl
divb
les
out
fwait
iret
or
push
cmp
ror
and
and
std
mov
push
mov
and
sti
jecxz
inc
cmp
jne
loop
push
add
jmp
adc
int3
inc
mov
xlat
mov
dec
jb
push
loop
xor
subb
jb
outsl
icebp
add
pop
insb
jno
mov
cmp
out
sbb
aam
hlt
nop
hlt
push
ret
fwait
dec
lret
in
out
mov
shll
gs
and
shrb
int
clc
loope
and
sahf
adc
mov
dec
daa
adcl
fistpl
xchg
test
js
jnp
outsl
mov
enter
ljmp
loop
addb
xor
jecxz
ret
std
std
shr
add
mov
dec
sbb
xor
push
inc
aad
sbb
inc
inc
and
loop
or
cltd
cmp
out
and
mov
mov
jmp
pop
dec
or
imul
xlat
sbb
lds
sub
xor
or
push
xor
xor
sti
dec
sbb
scas
inc
mov
pop
movsb
pop
shrb
jle
fbld
mov
push
xor
mov
xchg
test
mov
call
or
stc
and
xchg
sub
push
cmp
cwtl
push
xchg
push
push
and
dec
xchg
mov
jo
and
inc
repz
push
xor
xor
cmp
shll
sahf
mov
pop
fldl
mov
push
inc
ret
sbb
and
fs
mov
jns
jo
ror
xor
repnz
mov
jae
loope
jnp
stc
arpl
cmpsl
push
mov
mov
pusha
and
in
jbe
dec
aaa
mov
cmpsl
mov
and
sbb
sbb
xchg
and
sub
pop
arpl
js
in
xchg
repz
loope
clc
faddl
fsubrl
dec
je
mov
imul
cmpsb
xor
xchg
aaa
loope
fdiv
xlat
xchg
decl
dec
mov
mov
xor
fisubrs
inc
sub
popa
in
lret
adc
int
sub
stc
push
jp
repnz
jp
popf
das
dec
xor
cwtl
cld
dec
mov
sahf
jecxz
pop
rcrb
imul
fisubl
xor
lods
and
stos
lret
test
xor
xchg
pop
sbb
mov
call
in
jb
sub
sarb
in
mov
xchg
xor
jle
push
int3
xor
xchg
push
icebp
scas
xchg
xchg
cwtl
and
or
sub
int
inc
xlat
mov
jno
rcrl
add
inc
sub
mov
stc
lret
inc
sbb
pop
mov
push
mov
jg
xor
cmpsb
push
arpl
lea
adc
xchg
outsb
and
movsb
adc
mov
cmc
test
xchg
pop
ljmp
mov
push
outsl
mov
arpl
lods
cmp
push
push
cmc
mov
mov
sti
and
xor
mov
mov
cmp
mov
ss
adc
pop
adc
xor
xor
movsl
sub
addr16
enter
adc
jecxz
push
sub
ret
push
dec
pop
cmp
sbb
and
mov
test
daa
daa
jns
idiv
pop
les
scas
adc
xor
ret
test
and
lods
adc
rcr
or
mov
setno
mov
mov
fimull
cmp
push
mov
lea
inc
inc
daa
cwtl
cmpsb
xor
cmc
lret
test
and
and
adc
shrb
ljmp
fld
fadds
lea
cwtl
xorb
and
push
cmp
inc
stc
mov
fidivs
int3
push
fmul
inc
push
hlt
aaa
and
aaa
sub
mov
fldl
sub
or
cmp
cmc
inc
sub
xor
idivb
mull
ret
std
jnp
and
xchg
lods
les
pop
or
or
xor
loop
dec
cli
jbe
fldenv
ljmp
lret
rcrl
mov
movsl
push
fwait
dec
xor
insb
push
mov
out
and
fcmovnbe
int3
or
xchg
loopne
adc
cmp
mov
imul
inc
imul
push
push
mov
pushf
popa
sbb
popf
ficomps
add
je
aad
lods
movsb
mov
lea
loop
mov
ljmp
aaa
out
mov
ds
xor
fwait
sub
daa
notb
testb
insl
fcompl
jo
add
repz
lea
and
jge
pop
call
add
mov
xor
rorb
in
out
xorb
cmc
out
xchg
addr16
stos
xor
out
mov
stos
mov
mov
xor
add
nopl
daa
cmp
or
cmp
push
mov
pop
sbb
push
xchg
lret
int
shrb
je
notl
pop
and
out
add
int
jae
add
and
imul
sbb
clc
jmp
xchg
iret
or
in
movsl
sbb
xor
test
mov
push
sub
cmp
pop
sahf
int
and
cltd
fstpl
mov
enter
loopne
mov
rclb
or
sbb
adc
bound
dec
xchg
or
sub
gs
add
adc
pushf
and
loope
jmp
outsb
push
jno
imul
shrb
pushf
or
je
mov
pop
or
sbb
dec
jbe
mov
nop
rcll
in
mov
pop
js
adc
lods
shlb
mov
fdivl
mov
cmp
inc
xor
push
push
push
out
jnp
in
lds
or
mov
push
out
aaa
cmp
loop
test
icebp
sbb
add
cmpxchg
sti
aas
push
fwait
and
push
sti
mov
fstp
gs
pop
sub
fadds
pop
cmp
jno
push
or
adc
mov
or
sbb
push
mov
pop
ret
pushf
and
xor
lcall
jb
inc
fwait
sub
mov
ljmp
xchg
xchg
fcompl
xor
stc
cs
loope
ret
into
mov
or
xor
int
notb
push
pop
popa
sbb
xchg
sub
push
js
aad
xchg
mov
adc
cmp
cmp
popf
mov
sbb
dec
or
ficoml
mov
stc
inc
push
sbb
das
testb
xor
pop
xor
xor
fiadds
test
jo
mov
andb
inc
jle
fwait
xor
fwait
adc
xchg
mov
xorb
sarb
cltd
sbb
adc
adc
rcrb
adc
jae
fldl
xchg
scas
mov
sbb
stos
lods
je
mov
mov
ds
mov
out
adc
adc
inc
test
mov
add
cmp
js
mov
divb
inc
cs
lret
fwait
and
mov
in
sbb
cmpsl
clc
loop
or
scas
mov
mov
lcall
lock
mov
popa
out
pop
sub
xchg
es
loopne
pop
stc
das
pop
inc
in
jge
loop
ss
call
push
mov
mov
jae
add
cmpsb
sti
and
xlat
inc
add
fwait
mov
pop
insl
xor
or
jns
sbb
adcl
mov
fisubl
and
sbbl
mov
xor
and
add
add
icebp
scas
xor
aad
stos
ja
and
xchg
jbe
lret
fdivp
or
loope
mov
mov
stos
dec
sub
xchg
adc
cmp
in
or
mov
mov
pushl
xor
jbe
xchg
pop
loop
mov
pop
add
call
sub
pop
sbb
cmovns
push
sub
add
rcl
and
mov
and
sub
stc
sbb
add
sahf
data16
fwait
stos
add
outsl
mov
xchg
push
subb
clc
cmpsl
imul
ja
mov
loop
sbb
xor
mov
xor
cli
adc
sub
adc
pop
xchg
and
les
in
test
fstpl
sahf
cmp
out
add
popa
cmp
pop
cmpsl
pushf
xor
test
pop
stc
sub
hlt
dec
dec
and
test
xor
mov
xor
shll
fnstcw
fistpl
ret
insl
cmpl
into
repnz
inc
and
jp
sbb
in
fwait
pushf
xchg
and
and
in
adc
pop
adcl
adc
jb
xchg
fstpl
loop
mov
add
int3
ret
sbb
or
inc
in
xor
sbb
mov
or
and
mov
test
loope
sbb
push
jg
addb
out
jbe
cli
jo
icebp
add
xor
pop
push
xor
in
adcb
jmp
cli
lret
xchg
rcrl
mov
mov
imul
loope
dec
outsb
test
pusha
cmp
pop
stc
jb
xchg
inc
xchg
test
sbb
out
lcall
mov
jmp
lcall
pop
inc
inc
movsl
testb
in
aad
sub
mov
movsb
xor
pop
stos
mov
loope
fisttps
mov
popf
and
sbb
push
iret
sub
jecxz
pop
roll
sub
xchg
and
adc
xor
or
cld
in
addr16
subb
mov
and
sbb
mov
or
inc
lock
sub
in
xor
xchg
rolb
sbb
ds
jnp
cmp
popa
pusha
cmp
iret
imul
inc
pusha
and
add
in
xor
pusha
sbb
and
adc
xchg
into
fisubl
xor
fcmovb
cmp
mov
mov
or
lret
shrb
jb
mov
dec
xor
jmp
lock
cmp
mov
movsl
xchg
pop
iret
pop
xor
int3
push
pusha
sbb
dec
pushf
sbb
nop
ljmp
ljmp
hlt
push
dec
adc
sti
pop
xchg
add
cmp
mov
mov
push
sbb
lahf
loop
cli
mov
dec
inc
jnp
sbb
subb
loop
popf
xchg
sub
jno
call
and
jne
push
mov
xor
dec
or
add
cmp
shlb
jns
lret
out
push
mov
repnz
pushf
movsb
loop
popa
lods
push
mov
fs
mov
sub
std
adc
stos
xor
aam
adc
or
pop
leave
pop
fldz
movsb
pop
insl
shrb
repnz
xchg
sub
repnz
or
and
jmp
scas
pusha
lahf
mov
jno
ljmp
loop
mov
out
test
pop
mov
outsb
mov
lgs
push
or
imul
outsb
mov
add
push
gs
out
jo
xchg
add
sbb
sahf
sbb
ret
jno
mov
fnstenv
xor
jo
xor
pop
loop
cmpsl
out
xor
jno,pt
push
lods
popf
pushf
mov
les
sbb
insl
adc
lea
insl
dec
sub
pop
dec
adc
rorl
pop
and
xchg
push
xchg
imul
enter
popa
inc
pop
iret
fbstp
lods
adc
sbb
xchg
xchg
aaa
ja
xor
xchg
xor
mov
js
jp
push
jle
sub
push
cltd
mov
adc
icebp
sbb
sbb
and
fisttpll
and
xor
xchg
and
ret
cmpl
adcb
sub
ret
and
scas
xor
xor
jg
and
push
roll
jmp
or
sub
pop
pusha
decl
pop
sbb
pushf
gs
jl
inc
pop
xor
repz
lods
sbb
jecxz
push
push
pop
cs
and
mov
sub
push
lret
loop
adc
inc
mov
xchg
sbb
and
les
test
push
aas
mov
xchg
lcall
sub
in
mov
aaa
push
jns
mov
das
push
leave
xor
icebp
jae
das
push
sbb
daa
testb
cmpsl
and
push
fdiv
cs
xor
push
jbe
sbb
adc
sbb
add
and
dec
sub
push
inc
sbb
xor
and
icebp
cs
push
cmp
xchg
stc
push
push
xchg
dec
push
xchg
xor
xchg
push
pop
inc
loop
lea
cmp
pop
xor
inc
loop
pop
sbb
jmp
or
sbb
mov
xor
sub
inc
dec
cmp
dec
loop
shll
mov
cmpsb
mov
sbb
lcall
sbb
mov
jl
test
cmp
adc
insl
sbb
and
pop
mov
push
shlb
push
xchg
loop
cli
xor
lcall
ret
mov
xor
aad
pop
xor
xor
mov
inc
inc
dec
sub
xchg
stos
gs
mov
shl
push
dec
xchg
ja
mov
cmp
lret
cmpsb
inc
add
aad
add
adc
sahf
and
pusha
in
push
cmp
sbb
cmpsl
xchg
aam
outsl
lds
sbb
sub
jg
lcall
adc
mov
lcall
push
xor
psadbw
repnz
fs
mov
repnz
mov
or
push
data16
push
add
mov
add
inc
jecxz
mov
lcall
mov
and
add
mov
out
hlt
jge
pop
in
sub
push
jg
add
mov
add
sbb
xor
mov
cmp
nop
jbe
sbb
lcall
jns
mov
cmp
lahf
jle
mov
ffreep
pop
int
arpl
cmp
pop
xchg
fsubl
daa
fildl
jne
inc
xor
dec
and
psllw
dec
jne
xchg
xor
or
aas
cs
ficoms
xor
mov
cmp
lahf
cmp
xor
mov
sub
add
jae
dec
aad
lahf
lret
fstps
jne
ret
das
loop
push
test
sub
sub
cmpsb
sub
andl
repnz
lahf
push
icebp
xor
mov
and
lahf
and
xor
mov
push
sbbl
sbb
lcall
loop
cli
mov
out
aaa
xor
xlat
push
inc
sbb
arpl
xlat
and
scas
mov
xor
inc
adc
xor
inc
mov
and
mov
mov
rcll
adc
aad
jne
jno
loop
mov
adc
repz
out
jp
sbb
pop
imul
sahf
sbb
and
enter
inc
sub
mov
loop
mov
ja
mov
movsl
cmp
shlb
jmp
mov
mov
sub
adc
pop
sahf
out
insl
sti
mov
xchg
hlt
jmp
in
and
js
add
mov
pop
mov
mov
mov
push
xor
popa
mov
xor
xor
xor
inc
xor
add
sub
sbb
pop
ja
in
pop
jns
jno
xor
sbb
fldcw
in
lds
pop
adc
push
mov
mov
imul
cmp
mov
sbb
jne
arpl
daa
mov
mov
imul
stc
orl
in
cmp
rclb
ljmp
adcl
mov
and
sbb
jns
rcrb
roll
mov
orl
sbb
loope
fwait
out
not
cmp
inc
fwait
mov
sub
mov
push
ret
dec
in
sbb
lds
dec
inc
jns
xchg
and
jl
mov
fmuls
pop
sahf
in
lds
movsb
mov
in
std
arpl
mov
loop
rorl
cmp
fstps
xchg
dec
popa
in
and
stc
arpl
and
movsl
sub
mov
cltd
xor
ja
aas
mov
popf
leave
arpl
int
fnstenv
push
mov
movsl
dec
lahf
mov
and
xor
popa
sub
xchg
and
inc
push
leave
in
test
jnp
jnp
daa
fdivl
and
lds
stc
lcall
jno
sbb
ret
jo
jle
inc
cmpsl
xchg
aam
and
pushf
fildll
push
sbb
add
fidivl
test
fldenv
sub
inc
sbb
or
lret
loopne
hlt
std
xchg
xor
in
xor
mov
imul
cltd
mov
mov
in
sbb
sahf
pop
jb
adc
xchg
and
dec
and
sarl
pushf
xor
inc
pop
push
push
dec
subl
push
mov
adc
int3
rorb
aaa
repz
mov
push
and
mov
das
jbe
std
mov
fiadds
push
add
mov
jle
dec
and
sub
dec
loopne
aas
pop
adc
loope
or
add
ret
pop
dec
rcll
pop
push
xchg
leave
and
popa
mov
daa
mov
mov
movsl
mov
daa
sub
pusha
jae
dec
ret
mov
sbb
enter
in
cmpb
mov
or
mov
and
ficoml
in
sub
xor
or
inc
in
and
jnp
es
inc
push
or
and
xor
inc
or
fwait
pop
in
push
xor
fidivl
pushf
addr16
push
fbstp
and
pop
inc
fcoms
pop
xor
mov
movsb
pop
xchg
mov
push
notb
std
jne
gs
leave
inc
sti
sub
es
sbb
xchg
xor
popf
xor
dec
stos
dec
out
lret
pop
adc
dec
or
xchg
mov
push
lds
test
mov
daa
lret
lcall
in
subb
loope
cmp
xor
or
lahf
ret
and
sbb
sbb
mov
cmp
mov
push
sbb
mov
cld
fidivs
jae
arpl
xor
ss
dec
fsubl
out
fists
mov
mov
scas
cli
int
das
mov
dec
out
je
fwait
adc
je
mov
ds
stos
mov
mov
cmp
pop
aam
pop
push
sbb
pop
and
xor
call
stos
ret
cli
lods
insb
es
outsl
jne
out
sub
lret
push
push
icebp
adc
sahf
shll
sub
cltd
mov
lods
fstpt
or
imul
enter
xor
stos
push
mov
or
addb
cmp
push
and
sbb
outsl
sub
sbb
sbb
xchg
pushf
cltd
mov
and
adc
and
rcll
add
xor
xor
outsb
sub
in
pop
sbb
sub
adc
and
sub
mov
mov
push
lods
inc
test
andl
arpl
pop
pop
bound
mov
ffree
mov
aas
insl
mov
push
lahf
sbb
and
jo
add
and
fwait
aaa
sbb
and
mov
in
pop
fstpl
sbb
loop
pop
mov
je
in
test
aad
cmp
cmpsl
pop
jns
sub
mov
push
xor
in
jbe
inc
xchg
pop
test
movsl
fistpl
leave
xchg
cmp
sbb
xor
push
or
xor
push
lcall
push
pop
addr16
push
pop
inc
stos
add
call
sbb
aaa
test
adc
int
sub
adc
sub
jno
sub
ret
mull
cmp
xchg
jnp
pop
and
jnp
push
push
test
sub
adc
fnsave
inc
push
dec
xchg
dec
pop
pop
jecxz
pop
add
and
push
sub
jno
adc
dec
jne
cmpsl
loope
xchg
cmp
sub
inc
xor
popa
and
lahf
scas
mov
inc
xor
mov
xchg
mov
pushf
adcl
pop
adc
into
ja
out
enter
mov
popa
cli
cld
popf
jo
in
xor
sbb
and
jae
andl
les
mov
in
stos
xchg
jb
xor
sub
lret
mov
push
lods
sbb
push
cmpsb
gs
lock
sub
mov
hlt
xlat
gs
adcl
cmc
movsl
movsl
ret
sbb
mov
xorb
jns
cmp
sub
mov
out
and
es
arpl
in
lea
add
in
popa
inc
inc
pop
loope
mov
sbb
gs
aaa
addl
mov
and
ss
aas
sub
and
das
pop
mov
push
pop
jg
xchg
mov
fisttpll
rol
cmp
push
and
sahf
out
test
test
dec
pop
cmp
pop
mov
pushf
fwait
arpl
mov
js
shlb
fsts
call
add
inc
movsl
sub
insl
mov
mov
pop
mov
repz
push
fwait
lock
repnz
pop
dec
cltd
mov
lcall
jmp
sbb
aaa
xor
pop
clc
inc
jns
arpl
fsubs
out
pop
inc
rep
cli
adc
lock
xchg
sub
xor
shlb
add
bound
inc
or
add
in
push
jb
xchg
push
add
add
lds
xor
pop
adc
lcall
iret
xor
mov
addr16
and
int3
je
sub
addb
aad
push
xchg
cmp
int
jo
xchg
ja
dec
addr16
jp
pushf
jnp
out
cmc
mov
and
dec
adc
imul
out
inc
sbb
cmp
adcb
cmpsl
lock
sub
and
mov
inc
loope
cli
in
cmp
icebp
arpl
in
sub
dec
xchg
and
add
movsl
xlat
add
lds
mov
push
adc
push
ss
sbbb
sbb
push
cmpsb
leave
or
fisubrs
imul
leave
and
and
ds
popf
cmp
out
movsb
aam
cld
sahf
loope
dec
dec
cmp
rclb
pushf
nop
mov
dec
mov
out
add
and
and
imul
mov
jo
push
push
lods
std
mov
cltd
xor
int
or
imul
mov
xchg
add
xlat
scas
fs
loop
or
or
arpl
cmp
or
adc
stos
mov
sbb
shl
lea
mov
pop
xor
call
jmp
lods
sbb
shlb
shr
insb
leave
std
call
adc
arpl
inc
divl
mov
call
adc
sub
ljmp
push
xchg
jecxz
and
xor
mov
out
pop
iret
fsts
stc
xor
pop
mov
rorl
loop
push
xchg
sti
mov
inc
cmp
adc
push
iret
lret
lret
call
shll
aaa
sub
mov
addb
rcr
cmp
xchg
add
push
sbb
mov
xchg
jns
pop
push
sti
sub
mov
pop
pop
addr16
iret
lret
fstpt
mov
mov
jns
lret
jecxz
and
fldt
fs
jns
imul
and
dec
jb
inc
push
mov
add
push
out
xchg
adcb
loop
cmp
lea
add
adc
das
lahf
mov
enter
lock
lret
mov
push
stos
inc
pusha
stos
cltd
jg
jmp
add
pop
push
inc
or
mov
rcrb
push
jo
mov
outsl
cltd
xchg
mov
xchg
sub
push
sarb
andl
dec
cmp
lret
inc
jecxz
sbbb
cmp
xor
xchg
adc
mov
mov
in
int3
cmp
xor
jnp
fstpt
cmp
ljmp
sub
jb
add
lret
or
xor
xor
push
xor
sbb
pusha
xlat
in
lcall
mov
mov
adc
adc
sbb
bnd
mov
fstpt
dec
inc
push
imul
and
jns
xor
ljmp
xchg
out
es
add
pop
xchg
cmpsl
push
cmpsb
sbb
das
dec
mov
sbb
or
movsb
jle
sbb
jns
int
mov
push
fcomps
xor
sbb
test
push
jp,pn
and
jb
loop
mov
popa
push
pop
sub
mov
cmpsb
or
jecxz
stos
push
adc
lret
ret
fcmovu
mov
imul
cli
lods
outsl
push
loopne
lea
pop
loopne
jns
loope
dec
sub
inc
into
dec
jno
mov
mov
add
xcrypt-ctr
cmpsl
pop
leave
lock
push
push
mov
movsl
stc
sbb
pop
cmpsb
jae
popa
addr16
push
test
or
ja
dec
fisubrl
push
push
push
ret
mov
dec
cltd
xchg
imul
lods
jno
icebp
push
sub
pop
loopne
popf
pop
jns
xor
subl
ret
jns
pop
mov
xlat
mov
lods
jp
and
mov
cmp
nop
fs
inc
and
xchg
out
sbb
adc
mov
sub
jnp
sbbb
cmp
out
out
jle
pop
sub
cmp
test
push
add
and
xor
and
or
sub
cmpsl
jp
sbb
sub
pushf
adc
inc
es
and
fisubrl
push
sub
int3
sub
pop
push
dec
xchg
xor
mov
xor
ss
and
and
adc
out
iret
add
iret
sbb
outsl
in
push
fnstcw
test
orb
push
bound
mov
ja
mov
cmp
mov
sbb
mov
mov
out
call
gs
xchg
and
push
lahf
pop
mov
cmpsl
xlat
pop
mov
pop
mov
dec
in
stos
faddl
or
jbe
cmp
int
addr16
lods
movsl
test
dec
jno
push
mov
cmp
in
mov
sbb
mov
fidivs
cwtl
mov
push
adc
iret
shll
cltd
mov
jbe
or
outsb
inc
push
pop
mov
mov
xchg
xor
pop
icebp
pop
xchg
adc
push
sahf
lock
lods
outsb
fcomip
cli
add
cmp
add
arpl
push
pop
fstl
mov
aaa
xor
xor
mov
jg
in
add
sub
jl
adc
jecxz
cmp
jg
call
push
in
leave
xor
jge
das
out
jmp
cmp
add
sub
and
sbb
pop
mov
test
out
jecxz
inc
aam
jne
arpl
in
and
test
ror
mov
cwtl
imul
sub
imul
mov
loop
jbe,pn
mov
out
dec
adc
dec
cmp
xor
mov
jb
out
sbb
dec
pop
mov
imul
sbb
loope
loop
cmpsl
push
ficoms
jecxz
add
xchg
inc
cmp
clc
out
add
in
int3
jnp
nop
mov
call
pop
and
xchg
inc
mov
ds
test
lret
push
shll
fwait
out
in
inc
xchg
pop
xor
push
subl
clc
call
out
sahf
xchg
es
in
aaa
and
int3
mov
in
rol
stos
sti
aam
stos
stc
push
incl
into
inc
in
movsl
mov
or
inc
notb
cmp
movsl
ret
loope
push
jnp
xor
mov
mov
mov
pop
adc
lds
popa
sub
xor
loop
es
lahf
xor
mov
cmp
out
inc
pop
jns
xor
fs
jnp
sbb
jno
mov
cmp
int
mov
loope
int
push
or
cwtl
push
xlat
mov
mov
leave
mov
mov
pop
ja
push
daa
sahf
add
sbb
insb
lahf
sbb
sub
adc
cltd
mov
sbb
repnz
sbb
fnstenv
leave
arpl
in
pushl
jmp
jne
xchg
push
sub
xorl
mov
and
pop
sahf
add
xchg
and
call
scas
dec
outsb
sub
loop
lds
add
aas
sub
adc
cwtl
mov
mov
loope
mov
popf
popf
xchg
xchg
enter
cmp
jle
mov
fiaddl
ds
or
rcrl
or
jnp
adc
sbb
jle
fstps
dec
dec
or
add
imul
cmp
daa
sbb
mov
aaa
frstor
das
pop
lahf
push
or
xor
scas
adc
adc
imul
mov
xchg
pop
and
es
loop
jp
and
arpl
into
pusha
sbb
adcb
lret
enter
xchg
stc
mov
push
push
push
stos
pop
push
mov
loop
ljmp
mov
shll
mov
and
mov
xor
and
lcall
inc
sub
je
lcall
cli
or
ljmp
test
mov
pop
cmp
ja
mov
lcall
xchg
data16
stos
and
mov
adc
mov
mov
jnp
mov
mov
xchg
aam
jno
sarl
loope
rorb
cltd
adc
xchg
push
popf
dec
mov
stos
mov
mov
jge
push
popa
push
out
leave
xlat
sbb
sub
les
testb
outsl
sub
arpl
repz
sbb
ret
adc
push
push
icebp
pop
in
mov
stc
cmp
lods
cmpsl
fadd
test
fists
and
pushf
fisubrl
xor
dec
xor
mov
xor
fsubrs
scas
rcl
sub
mov
test
dec
test
andl
insl
fnstenv
adc
add
mov
jb
into
test
test
mov
hlt
sti
push
es
mov
adcl
cmp
lds
das
aad
cmp
mov
mov
push
out
sbb
xchg
dec
inc
sbb
das
sti
inc
mov
mov
pop
pop
sarb
inc
popa
lods
push
mov
mov
cmpsl
hlt
xorps
pop
int
pop
pop
sub
ret
xchg
dec
or
xor
mov
sub
pop
test
xchg
lock
lods
adc
inc
push
mov
inc
mov
mov
movsb
shlb
stos
push
std
or
jnp
xchg
inc
pop
and
outsb
mov
bound
rcrl
es
dec
inc
out
xchg
ficomps
cltd
call
fwait
and
call
sbb
sbb
cmp
xor
inc
in
sti
mov
stos
cmp
pop
lcall
sub
fbld
cwtl
ret
outsb
xchg
cs
jae
mov
mov
rol
cwtl
addr16
int
xor
pop
pop
stc
jl
mov
call
xchg
and
in
mov
mov
hlt
pushf
stos
sub
stos
iret
push
xchg
daa
push
sbb
out
or
out
stos
insl
daa
and
adc
sub
addb
inc
clc
inc
push
jne
aaa
or
xchg
sti
imul
imul
mov
sub
jge
dec
fwait
push
xchg
sbb
push
out
xor
jbe
mov
stos
xchg
cs
ret
pushf
sbb
add
test
clc
pop
test
notl
jns
dec
movsb
cmc
mov
cmp
and
inc
shrl
imul
add
in
addr16
xchg
pop
outsl
int3
test
mov
enter
ficoms
adcb
ja
movsl
push
sti
xchg
add
andl
xchg
xchg
mov
pop
insb
xchg
shlb
jbe
push
xchg
lret
lret
adc
jno
cmpl
test
sub
dec
call
inc
mov
jne
cltd
out
inc
cmpsl
sti
pop
push
pop
sahf
mov
aas
outsl
xchg
xchg
add
rcrl
mov
jno
pop
adcl
stc
rcrl
jnp
fwait
pop
jp
dec
ja
sbb
add
mov
dec
mov
jae
outsl
outsb
sub
jno
push
mov
subl
and
xchg
adcl
pop
faddp
cli
sub
push
sbb
int
loop
cmpsl
dec
add
gs
pop
inc
xlat
and
dec
loop
es
cltd
fisttps
into
pop
dec
shrl
dec
sbb
xchg
and
jl
nop
mov
popa
adc
xor
or
sbb
test
add
sti
bound
inc
popa
mov
cld
nop
or
xchg
xor
adc
aam
out
push
dec
and
ret
rcll
or
push
and
pushf
inc
into
mov
cli
xchg
ds
out
add
inc
clc
mov
mov
xor
sbb
adc
mov
fdivrl
fwait
lock
xchg
mov
stc
jns
outsb
sbb
cld
shrl
xchg
mov
addr16
mov
adc
shlb
jg
out
pop
dec
lods
add
or
push
and
pushf
lods
roll
les
cmpsb
jnp
inc
hlt
out
jbe
aad
icebp
in
invd
push
in
mov
pop
addr16
mov
mov
add
out
ja
sbb
ss
xchg
stc
dec
sbb
xor
xchg
aad
cmpsl
mov
sahf
mov
cmpsb
cmp
orb
xchg
cmp
iret
xor
mov
mov
cmpl
ss
adc
cmp
lret
jle
arpl
inc
adc
adc
lds
mov
in
icebp
inc
add
adc
pop
pop
mov
out
out
iret
imul
mov
lcall
mov
or
mov
jge
sbb
test
in
mov
std
aam
fstpt
xor
dec
xor
xor
mov
sub
int3
pslld
dec
lock
in
xchg
xor
rcrb
sti
jne
lods
insb
lds
mov
sub
je
jno
mov
mov
mov
push
xchg
jno
stos
andl
jecxz
call
arpl
ret
dec
push
mov
and
sahf
mov
mov
or
cmp
inc
lcall
inc
mov
and
loope
leave
sbb
xor
push
mov
cmp
aam
repnz
jbe
sbb
xlat
ss
xor
adc
repz
jo
fwait
cmpsl
xchg
mov
xor
iret
cmp
and
cmp
pop
inc
mov
push
inc
sbb
xchg
test
pop
sbb
scas
inc
jb
shl
sbb
cmp
jae
loopne
sub
bound
out
sub
xor
and
in
xchg
das
or
pop
xor
cmp
mov
xor
lods
cmp
mov
es
sub
repz
and
xchg
xchg
ret
in
jge
sbb
popa
loope
add
and
mov
imul
scas
ret
and
sub
jge
add
mov
xchg
jns
adc
sub
adc
sub
adcl
pop
lds
mov
xchg
mov
daa
push
xor
insb
jl
loope
pushf
jne
cwtl
sahf
cmp
pop
mov
push
xrelease
xlat
pushf
add
lods
and
int
mov
inc
sti
cmp
stos
mov
mov
lods
inc
cltd
push
pusha
adc
inc
arpl
adc
sbb
shlb
popa
xchg
mov
mov
movsb
mov
aaa
xchg
test
sub
cmpsl
cwtl
imul
and
sub
xchg
lret
and
and
lds
fwait
subl
outsl
adc
loop
jnp
adc
mov
mov
mov
add
jecxz
fidivrl
fisttpl
cmp
or
arpl
jbe
sub
in
daa
mov
aad
sti
push
out
mov
mov
enter
dec
and
mov
cmpsl
mov
mov
dec
sub
dec
xchg
enter
cltd
cmp
or
mov
lret
adc
inc
call
sbb
sub
push
les
or
imul
or
in
lea
pop
inc
xor
aaa
sbb
adc
mov
lret
adc
or
test
inc
add
fwait
xchg
push
jno
repnz
imul
or
imul
xor
mov
out
mov
loop
aaa
or
pop
jno
lahf
cli
or
dec
in
and
xor
dec
xorl
xor
sub
and
and
xor
xor
add
xor
stos
lret
jg
mov
shr
rcr
jb
xor
push
insb
aam
pop
leave
jp
sbb
fstps
popa
sbb
jns
sbb
and
movsl
inc
or
and
iret
xor
in
xor
push
jbe
adc
sbb
sub
inc
mov
pop
addr16
cmp
adc
push
inc
sub
xchg
sbb
and
cmp
loop
mov
js
mov
sub
xchg
xchg
xchg
cs
mov
or
stos
popa
xchg
mov
rcl
inc
loope
dec
mov
sbb
xor
aam
push
loope
inc
xor
imul
jns
and
add
dec
cmp
mov
push
cld
popf
and
sbb
testl
sbb
sbb
addr16
cli
jecxz
add
cmpsb
cmp
ljmp
mov
sti
sbbl
xor
jns
cmp
out
pop
sbb
mov
fisubs
adc
sub
mov
sub
cld
sbb
add
fwait
cmpsb
push
jge
mov
test
rcll
fdivrs
push
sub
mov
imul
sbb
or
jg
sbb
and
cwtl
push
xor
sbb
shll
aad
cmc
push
stos
std
sub
faddl
addl
rorl
pop
xchg
rcrb
ja
pop
inc
daa
sbb
jbe
jecxz
sahf
add
mov
pushf
sbb
inc
push
and
and
sub
sbb
call
ficoms
out
mov
call
mov
push
mov
mov
inc
mov
and
imul
dec
sahf
popf
maskmovq
notl
out
mov
xor
mov
or
adc
fldl
adc
xchg
xchg
sub
lods
mov
and
cwtl
orl
mov
sub
and
mulb
stc
dec
add
icebp
push
adc
push
ds
push
loopne
dec
and
or
insl
pop
mov
push
xor
out
loop
sub
inc
out
mov
push
jmp
movsb
movsl
mov
jp
pop
gs
out
push
mov
mov
sti
adc
xor
xor
mov
sub
xor
mov
das
cmp
ss
mov
cmp
lahf
mov
mov
sub
push
sti
and
jecxz
add
dec
loop
xchg
lds
out
stos
fidivl
xor
mov
dec
int3
jecxz
dec
and
notb
dec
cmp
sbb
xor
fisubrl
and
push
or
imul
arpl
push
xor
repnz
push
ffree
lret
push
cmc
insl
movsb
push
mov
jg
pop
inc
out
jno
xlat
ficompl
rclb
loop
jno
idivb
cmp
fsubl
cmp
mov
or
or
push
inc
das
xchg
jo
xor
stos
jae
jno
cmp
mov
in
mov
mov
dec
xchg
in
sub
stc
imul
mov
daa
loop
dec
dec
push
push
imul
pusha
repz
out
inc
cli
adc
lock
fwait
repnz
push
pop
or
push
pop
lret
mov
int
push
lock
imul
cli
xor
sub
ljmp
or
call
xchg
lea
call
and
inc
sbb
ret
mov
stos
jae
pop
jg
pop
mov
mov
and
jnp
push
imul
or
and
sbb
int
sbbl
push
jns
jne
inc
jo
ljmp
jo
dec
or
mull
stos
aaa
das
sub
imul
and
outsl
call
fisttpl
lock
mov
lcall
jae
mov
fsubs
roll
mov
fnsave
xor
push
mov
std
xor
cmpsl
push
mov
add
insl
ss
lcall
adc
sub
pop
push
mov
pop
push
mov
es
and
cltd
daa
shll
jnp
adc
push
fisubrl
pop
xchg
movsb
dec
ret
and
xchg
mov
cs
mov
scas
mov
mov
ficomps
nop
loope
sub
push
sbb
push
pop
cmp
mov
loope
fs
push
mov
mov
fidivrs
das
iret
and
inc
inc
pop
addr16
adc
enter
or
jns
jns
ret
dec
popa
jl
les
repnz
cmpsl
push
mov
mov
inc
or
push
loopne
push
push
jo
push
popa
jns
cwtl
mov
pop
xchg
pop
sub
cmp
gs
mov
loop
in
aaa
sub
divb
and
mov
sbb
jne
jmp
adc
xor
daa
inc
xchg
pop
loope
aas
sarl
pop
xchg
sbb
mov
lods
dec
xchg
xlat
ja
xchg
xchg
dec
sti
xchg
mov
std
imul
lcall
cmpl
jo
int3
add
pop
pop
int3
push
xor
aas
xor
xor
inc
gs
add
push
mov
mov
outsl
loopne
leave
or
or
mov
or
loope
rorl
cs
aad
inc
cmp
js
int3
icebp
inc
push
mov
rorl
sbb
ja
add
test
into
xchg
out
inc
arpl
inc
and
and
sbb
xchg
pop
xor
and
xor
aas
loop
test
sub
xchg
pop
pop
gs
loop
xchg
push
jne
lea
jno
shl
sbb
adc
les
outsl
jno
push
and
push
dec
daa
sub
xor
loopne
xor
push
fcoml
push
loop
jmp
jb
sub
imul
lds
or
mov
or
fsubrl
sub
cld
cwtl
rorl
inc
stos
and
lret
sub
fcoms
loop
sub
out
xor
mov
xor
pop
test
sub
test
xchg
imul
add
sub
push
push
lret
jno
add
int3
or
pop
inc
mov
xor
mov
and
sub
ficoms
mov
shll
into
xlat
dec
lret
ds
xor
and
cltd
and
adc
jge
decl
pop
sarl
je
call
push
sbb
cmp
sub
sub
loop
sti
pop
cmp
or
into
insl
sbb
or
push
xchg
int3
inc
mov
pop
adc
or
push
xchg
push
cmp
inc
aaa
dec
mov
rclb
xor
bound
sti
cmp
add
dec
out
insl
scas
sbbb
cmpsb
iret
or
xchg
push
push
sub
fcomps
cmp
mov
and
jp
testb
push
movsb
sahf
aam
jmp
test
cmpsl
sub
pop
bound
arpl
or
sahf
mov
sahf
and
dec
fs
xchg
ljmp
or
leave
stos
sbb
push
nop
js
shrl
xor
and
pop
pop
push
dec
jne
mov
addl
mov
mull
or
lret
cmp
pop
dec
cltd
add
mov
mov
sub
xor
mov
popf
rolb
pop
pop
add
scas
pop
mov
mov
push
pop
cltd
lods
clc
es
icebp
sbb
pop
sbb
out
mov
jp
leave
lds
jle
add
cmp
or
daa
lds
or
pushf
cmp
dec
dec
xchg
jb
stc
lock
popa
mov
shl
outsl
sti
push
insl
xchg
sub
iret
lret
or
cmp
mov
xor
mov
and
jl
mov
ja
and
inc
scas
jb
lea
adc
leave
into
add
lcall
push
push
test
imul
xor
cltd
xor
addl
pop
cmp
add
sbb
pop
movsb
inc
lret
das
sub
inc
pop
mov
add
mov
ret
ss
or
std
cmpsl
leave
cli
jecxz
les
add
jae
xor
shll
dec
xor
mov
xchg
and
ret
inc
add
jne
adc
jg
jno
pop
imul
push
jne
xor
pushf
xchg
push
and
jge
hlt
or
xor
jno
adc
pop
sbb
ss
push
negb
inc
mov
and
mov
push
mov
push
mov
and
out
addb
fwait
enter
push
fistps
and
sti
dec
repz
popa
pusha
adcl
sbb
mov
dec
repnz
ljmp
jns
adc
dec
imul
xchg
loop
fadds
test
xchg
sub
int
mov
movsl
pop
mov
popa
jno
or
push
fwait
mov
es
leave
fnstcw
xor
xchg
filds
inc
mov
or
cld
xchg
push
and
or
xor
mov
xchg
mov
jne
xchg
jle
cmc
mov
mov
fsubrl
sub
add
mov
xor
xchg
fidivrl
jne
sbb
pop
mov
aad
test
xchg
fs
and
scas
jbe
leave
das
mov
arpl
sbb
mov
mov
imul
mov
mov
movsl
lcall
inc
aam
sub
dec
lds
dec
inc
imul
xor
and
scas
jbe
out
rol
fisubrs
popa
cmpsl
inc
sub
outsl
pop
push
cmp
aaa
push
ljmp
pop
cmpsl
mov
pop
dec
xchg
sub
lock
out
rolb
nop
test
es
and
cmp
mov
int3
mov
ds
lds
mov
cli
push
xchg
ds
imul
mov
mov
loope
int3
je
pusha
out
cmp
mov
or
sbb
imul
outsl
or
cmp
and
dec
je
sbb
js
xor
jne
cli
jae
cmp
inc
cmpsb
push
and
das
cmp
test
mov
cld
adc
aas
into
xor
sub
fimuls
in
sbb
jns
addr16
mov
adc
sub
cmp
pop
or
loope
jae
scas
gs
xchg
pushf
test
xchg
push
jge
adc
sbb
clc
pop
sti
jg
stos
and
iret
es
test
daa
stos
push
popa
sub
adcl
stc
mov
fldt
sub
dec
sahf
or
fisubrs
pop
or
mov
sarb
mov
das
inc
iret
sub
imul
mov
in
movsb
xor
lret
iret
js
xchg
push
stos
sub
push
jp
dec
xchg
xor
lahf
lock
inc
adc
add
or
pop
mov
push
sarl
and
flds
out
cltd
adc
mov
in
adc
addr16
or
fnstsw
in
cmp
lods
adc
jp
add
xchg
push
xchg
in
dec
cmp
movsb
pop
push
imul
xchg
sbb
mov
inc
sti
sbb
in
sbb
push
leave
sbb
sbb
ss
xor
xchg
add
popf
mov
mov
sbb
mov
popl
jne
repnz
cli
adc
push
lock
lods
aaa
mov
out
lods
clc
mov
xchg
insb
negb
cld
xchg
and
lret
ljmp
add
xor
or
sub
andl
add
push
inc
rcll
and
mov
and
cmp
pop
mov
push
mov
add
sbb
test
inc
inc
mov
mov
push
testb
push
iret
loope
incl
insl
jne
and
push
outsl
xor
jge
inc
adc
pop
sbb
add
inc
sub
sbb
xor
and
xor
int
icebp
push
loop
in
mov
popf
xchg
imul
or
jle
and
jnp
call
stc
jb
pop
shr
insb
out
clc
sub
xchg
jmp
and
inc
cltd
sub
sub
jno
xchg
sti
sbb
xchg
pop
pop
mov
in
add
add
mov
or
mov
xlat
aam
lea
mov
das
pushf
loope
xchg
loop
pop
sahf
enter
pop
enter
sub
and
push
inc
push
clc
shll
cmp
jno
lcall
and
std
jge
push
pop
adc
push
imull
loop
and
aas
pop
out
inc
test
jmp
mov
inc
loope
cmp
push
cld
hlt
jbe
xchg
leave
das
js
fisubl
xchg
shl
popf
mov
rcll
push
pop
add
lds
out
add
adc
push
das
dec
xchg
push
mov
mov
mov
xchg
cmp
xor
cmp
push
jb
loop
std
bound
dec
rolb
pop
jb
icebp
aad
dec
mov
scas
bound
and
dec
fs
ss
jns
mov
std
push
daa
xchg
or
pop
mov
dec
push
mov
adc
and
lahf
insb
cmp
insl
push
dec
pushf
sti
pop
iret
jmp
adc
movsl
lock
les
rcrl
xchg
sbb
pop
cmp
test
arpl
orl
xor
jns
adc
cmp
xor
jnp
je
btc
adc
shlb
xor
iret
stos
out
inc
popf
clc
int
clc
cs
loop
push
fucompp
dec
aas
mov
rcll
mov
test
jl
push
sbb
mov
nop
cli
xchg
inc
iret
mov
daa
call
pusha
out
xor
mov
add
mov
dec
lock
or
ret
dec
xchg
or
and
push
call
and
sbb
cli
rcr
mov
cltd
xor
cmpsb
and
add
cwtl
jnp
xor
mov
test
cmp
mov
call
push
sbb
xchg
inc
test
and
xchg
mov
jmp
sub
xor
xchg
sbb
repnz
mov
and
cmp
movsb
mov
arpl
int
movsb
pop
adc
dec
pusha
cli
scas
aad
dec
and
iret
jge
jns
loope
pop
mov
fidivl
mov
lea
jae
dec
dec
inc
icebp
and
cmc
hlt
aaa
dec
pop
pop
push
int
xor
xor
and
sbb
adc
xor
jae
idivl
jge
cmp
outsb
sub
or
test
call
push
test
loop
in
loop
add
mov
outsl
push
push
rolb
shrl
mov
sbb
pop
xor
and
cmp
lods
lret
imul
pop
mov
jo
mov
inc
mov
pop
cmp
pop
adc
inc
or
dec
xor
arpl
jbe
lret
pop
mov
imul
pop
mov
sbb
xor
adc
loop
adc
jae
mov
mov
stos
loop
fnstenv
mov
ret
stc
pop
add
add
sbb
and
notl
xchg
repz
fucomp
and
jo
push
adc
daa
mov
and
fwait
and
xchg
xchg
sbb
inc
mov
addr16
in
ret
inc
and
icebp
lcall
cmp
inc
jo
push
pop
addr16
mov
mov
cmp
jo
xor
clc
or
dec
iret
int3
sbb
sbb
enter
inc
out
xchg
pop
xchg
movsl
add
sub
jo
xor
cmp
stc
test
jg
fs
push
inc
scas
es
lods
fsts
imul
xor
sbb
add
lods
jl
popl
dec
cli
orl
lcall
lods
pop
lcall
push
gs
and
cwtl
xchg
popa
in
fisubrs
loop
pusha
out
stos
adc
outsl
cs
out
in
cmp
int3
xor
and
fs
sub
lods
xorl
int
push
lret
mov
aam
push
xor
adc
or
adc
dec
das
cmp
sub
push
and
sub
mov
aaa
stos
out
jno
daa
xor
mov
adcb
jnp
mov
insl
es
and
mov
pop
lret
xor
mov
jle
mov
jae
imul
sbb
and
cli
pop
mov
xor
ret
mov
adc
jae
aam
shlb
mov
aam
or
pop
sub
sub
insl
and
jg
scas
call
sbb
lret
mov
sub
and
shlb
shll
jne
pushf
adc
jns
adc
shrl
push
popa
in
dec
push
push
jecxz
fwait
cltd
sub
cmp
mov
enter
lahf
mov
scas
outsl
clc
aas
popa
mov
jne
mov
cmp
dec
or
loope
mov
dec
popf
jb
push
cs
stos
push
mov
jns
addr16
mov
inc
jl
test
jg
or
adc
es
dec
push
hlt
imul
ds
pop
jecxz
xchg
pop
loop
sarb
push
es
pop
sub
test
xor
mov
xchg
and
cmp
sbb
mov
jg
jne,pn
dec
dec
and
jne
pop
xor
jae
movsb
adc
jnp
out
jmp
and
add
xor
test
in
int
sarl
sbb
es
into
xchg
push
call
cmp
mov
inc
aad
cmp
xchg
push
imul
inc
loop
rorb
xlat
add
ja
jp
lods
inc
imul
xchg
mov
cmp
in
int
fwait
pop
inc
xor
roll
fwait
adc
cmp
sarl
daa
sbb
cmp
in
test
std
cmp
mov
push
or
xchg
test
jmp
ret
inc
fstps
data16
ficoml
mov
clc
cmp
pop
push
dec
fiaddl
xorl
orl
mov
mov
mov
sbb
pop
sti
hlt
or
pop
pop
shl
outsb
cmp
xchg
cli
inc
and
xor
sub
cmp
lods
fistl
push
cmp
cmp
sbb
lock
dec
loop
mov
aas
sub
sub
cmp
mov
fistl
xchg
xlat
mov
scas
cwtl
xchg
xchg
sub
int3
dec
and
movsb
adc
jg
dec
xor
push
sub
aam
fists
sbb
adc
cmp
mov
repnz
jle
push
daa
sarl
or
or
mov
insl
insl
nop
cmpsl
adcl
cmp
lgs
xchg
add
inc
mov
xor
push
into
inc
lcall
push
pop
adc
add
and
add
and
jae
mov
test
fsubrs
xor
add
insb
mov
scas
out
and
mov
push
shrb
sub
addl
mov
inc
mov
out
test
aam
scas
or
repnz
inc
push
in
pop
xchg
cld
mov
cmp
pushf
mov
sub
xchg
call
push
outsb
int3
mov
ret
imul
xchg
les
add
adc
and
xchg
and
aam
and
in
lea
insl
loop
pop
adc
jp
jb
and
fisubl
cmp
movsb
mov
cmp
popa
and
movsb
lcall
xor
inc
xor
push
arpl
dec
sbb
stc
xchg
cmp
and
movsl
sbb
mov
pop
mov
cmpl
cmp
ds
imul
cltd
xchg
xchg
xor
cmp
ja
inc
xor
mov
mov
cmp
mov
mov
aas
gs
dec
pop
dec
popa
popa
test
adc
loop
mov
xor
aas
inc
aaa
sub
push
jl
or
cmc
and
in
sub
mov
in
cmc
push
aam
in
lds
lods
xor
mov
dec
rcll
out
mov
outsb
repz
das
pop
or
lahf
dec
mov
inc
push
mov
jp
inc
and
test
testl
push
mov
cmp
popf
sar
adc
icebp
sbb
mov
jge
loope
sbb
or
fldl2t
testb
xchg
dec
sbb
xlat
dec
lahf
popa
in
cmpsb
push
cmpsl
fnstcw
xorb
sbb
cmp
pop
scas
xor
xor
inc
mov
cmpsl
mov
pop
sub
jno
push
pop
mov
subl
repnz
jl
mov
pop
push
dec
adc
or
fsts
and
xchg
incb
mov
mov
popa
xchg
push
jecxz
mov
and
xor
dec
sbb
test
insb
and
xor
mov
mov
jae
inc
sub
dec
mov
add
cwtl
sbb
pop
lret
int
cltd
push
jg
xor
ret
nop
mov
int3
adc
push
cmp
popf
xchg
movsl
outsb
imul
gs
jmp
sub
or
cwtl
mov
and
arpl
adc
adc
movsl
andb
adc
push
outsb
push
mov
fstpl
xor
hlt
fwait
adc
sbb
xlat
sbbl
sarl
push
shll
sbb
icebp
andb
cmpsb
or
mov
mov
addb
push
int3
mov
mov
repz
mov
mov
mov
mov
call
loop
aad
sbb
and
inc
xor
cmp
aaa
or
xorl
sbb
sbb
mov
ja
mov
fstps
loope
jmp
xor
push
icebp
jne
add
mov
cmpsb
sbb
push
loop
sbb
mov
arpl
aaa
cmp
loop
sub
es
xchg
add
push
xchg
sbb
sbb
test
jae
popa
lahf
and
mov
pop
nop
or
inc
movsb
cmp
adc
xor
push
sbb
sub
popa
adc
mov
sub
scas
test
push
mov
pop
xchg
imul
in
or
cmp
sbbl
xor
mov
jmp
xor
jno
sbb
adc
lea
mov
dec
pop
call
insl
cmc
xor
and
fwait
mov
xor
push
cmp
sbbl
out
sbb
and
push
jbe
xchg
lods
sbb
arpl
sub
stc
cmp
sbb
push
fwait
xor
xlat
outsl
xchg
pop
rclb
adc
xchg
sbb
cmp
js
and
mov
dec
sub
pushf
jno
daa
adc
adc
xchg
xor
mov
mov
xchg
push
popa
push
pop
daa
jne
imul
imul
and
outsb
sti
mov
cwtl
or
lcall
jae
cmp
arpl
xor
xchg
repz
mov
aas
xor
ljmp
xchg
add
loope
xchg
or
inc
dec
aaa
xor
or
and
sbb
sub
sub
sahf
push
iret
inc
mov
xor
mov
loop
loop
push
rcll
fnstcw
pop
test
out
lret
negb
mov
pop
push
sbb
clc
mov
daa
fidivrs
mov
repnz
loop
xor
fsubl
or
test
add
inc
push
roll
mov
lahf
iret
mov
mov
mov
mov
adc
sahf
or
sbb
and
xchg
lret
push
sahf
in
loop
enter
cmp
inc
repnz
push
pop
pop
cmp
es
sti
ds
push
push
push
dec
stc
sbb
test
dec
test
rcrl
sub
ss
sub
xchg
into
insl
push
inc
cmp
mov
xchg
test
cmp
dec
shlb
outsb
sbb
in
repnz
pop
imul
xor
push
or
jnp
mov
or
jno
sub
push
and
enter
insl
mov
cs
adc
push
iret
popf
cmp
sub
ds
dec
mov
out
mov
mov
mov
sti
inc
nop
repnz
sbb
pop
lds
sub
xchg
and
mov
lods
pushaw
mov
popf
adc
pop
xor
pop
add
inc
mov
xor
lods
xor
jne
clc
dec
push
xchg
imul
mov
adc
lahf
pop
jecxz
lret
add
lock
ljmp
inc
int
push
daa
loope
mov
mov
xchg
inc
mov
pop
pop
roll
add
inc
insl
push
sbb
lret
mov
sbb
in
xchg
mov
sbb
daa
sub
xor
daa
popf
mov
inc
call
push
add
inc
sub
inc
in
subb
iret
into
lret
jmp
ss
add
sub
and
push
insb
loop
or
jl
push
aas
xor
xchg
dec
aad
push
lds
push
cmpb
mov
cmp
xchg
scas
mov
xor
outsl
imul
pop
cs
mov
stc
mov
shlb
xchg
cmpl
mov
dec
mov
cltd
jmp
jmp
aas
pop
into
neg
sbb
xchg
adc
das
dec
dec
cmpl
xchg
adc
jns
adc
pop
cltd
sbb
xchg
sub
xchg
jmp
adc
fabs
lods
xor
push
adc
fmul
pop
notb
icebp
mov
inc
jecxz
ljmp
ficoml
rcll
cmp
call
push
loop
mov
inc
push
outsl
or
ja
inc
test
in
dec
cmp
jp
add
mov
xor
lock
sub
aaa
mov
xchg
jb
pop
mov
cmp
jns
and
add
mov
insl
sbb
cwtl
dec
loope
and
mov
and
lret
mov
cmp
sub
cltd
andb
sbb
sar
push
stos
pop
scas
mov
mov
icebp
andl
lock
cltd
mov
or
mov
push
and
or
ja
sbb
push
ficomps
cmp
sub
test
sub
int3
incl
sub
xor
jp
xor
pop
cmpsb
mov
xor
sbb
adc
stc
xor
and
inc
adc
xchg
xchg
mov
bound
idivb
cmp
xor
dec
pop
ss
add
cmpsl
sub
arpl
pop
and
mov
add
int
xchg
sti
pop
mov
jb
push
inc
dec
dec
push
push
push
sub
sbb
and
repnz
xchg
mov
sub
nop
les
sahf
adc
andl
xchg
andl
mov
shlb
mov
mov
sbb
repnz
push
movsb
pop
js
pop
mov
jmp
je
imul
rdmsr
sbb
fsts
adc
loope
lcall
sub
aaa
shrb
ret
jg
jbe
imul
pop
xor
cld
jb
jne,pt
lret
bound
mov
shll
outsl
pop
sbb
lds
xor
aam
xchg
or
push
hlt
jns
jb
idivl
sub
test
adc
pushf
mov
cmpsb
call
movsb
bnd
sbb
das
cmp
sbb
imul
inc
inc
mov
or
daa
sub
mov
or
and
sbb
int
cltd
sbb
mov
jo
xor
lods
mov
lds
test
adc
ljmp
mov
divb
dec
out
nop
adcl
xor
xchg
jne
fsubr
cmp
xor
pusha
ret
xchg
cmp
add
into
dec
mov
push
lahf
insl
lods
mov
jno
sub
sub
mov
and
pop
idivl
cld
inc
cld
hlt
mov
or
add
pop
xchg
mov
hlt
or
iret
and
mov
push
jmp
or
cmp
test
movsb
scas
and
add
jle
adc
adc
cli
mov
loop
aas
stos
inc
or
xchg
sbb
leave
imul
fwait
pop
jo
mov
cs
inc
mov
scas
push
pop
shlb
jecxz
dec
cmpb
sub
ss
cltd
sub
jnp
xchg
mov
push
push
xor
mov
inc
loop
sub
cwtl
sub
add
mov
lods
jp
push
mov
mov
or
ja
cmp
cltd
lcall
cmpsl
mov
and
in
mov
pop
push
lea
aas
jecxz
test
sti
mov
mov
push
mov
mov
jecxz
push
xor
push
testb
pop
insl
pop
push
cmp
cld
mov
xchg
inc
lods
pop
jmp
dec
push
xchg
xor
leave
xchg
mov
or
pop
dec
add
scas
ds
int
stos
shll
jns
arpl
push
lods
xor
push
xchg
pop
mov
xor
sub
dec
lods
xor
xorb
xor
dec
adc
inc
pop
and
lea
xlat
pop
mov
push
push
sub
inc
mov
loope
inc
push
mov
adcb
add
xadd
or
cmp
arpl
in
in
mov
in
mov
or
out
fwait
loop
push
movsl
jno
mov
add
cmpsb
xchg
xor
outsb
mov
dec
pop
or
xor
pop
sub
iret
lcall
xor
xor
pop
iret
in
pusha
mov
and
push
stos
xor
pop
stc
incb
mov
push
add
jb
lods
cltd
mov
xor
mov
xlat
and
mov
rcll
xor
push
sbb
ret
sbb
adc
fists
cltd
stc
push
and
inc
push
mov
mov
push
fbld
sar
cs
adc
test
lret
lds
int
push
mov
pop
loope
mov
das
int
mov
daa
popf
leave
mov
fistpll
dec
out
xor
push
ds
pushf
popf
mov
shrl
test
inc
lret
cmpsl
cmp
mov
mov
mov
mov
loope
je
sbb
cmp
or
imul
ja
shll
mov
xchg
adc
int
jbe
lahf
stc
mov
and
and
mov
and
mov
pop
jecxz
jne
lea
push
jb
xor
pop
dec
xor
lcall
fisubrs
je
dec
cwtl
push
and
outsl
and
xor
data16
push
or
leave
cltd
mov
and
xor
xchg
push
ficompl
push
es
cltd
xchg
mov
sub
push
daa
imul
push
out
popf
and
repnz
iret
test
mov
nop
jmp
push
loop
mov
inc
or
push
adc
xor
mov
sbb
mov
leave
lahf
xor
sbb
in
xor
imul
and
cld
mov
call
adc
hlt
bound
stos
nop
mov
mov
sbb
sahf
mov
cmc
in
stos
imul
pop
mov
daa
movsl
xchg
add
adc
out
bnd
add
std
bound
pop
adc
jb
mov
shll
js
pop
test
xchg
add
and
mov
das
mov
jg
sub
inc
or
add
cli
cwtl
sub
fnstsw
dec
lock
pop
sub
sbb
cmpsl
cmp
jae
cmp
sahf
insl
call
in
shll
stc
iret
inc
outsl
pop
insl
and
cmp
cmp
mov
mov
xchg
dec
sbb
xor
and
xor
lea
push
sbb
sbb
push
sub
xor
mov
xchg
imul
push
sub
gs
sub
and
out
dec
lods
inc
sahf
push
sbb
fbld
lock
adc
and
adc
int3
jg
lods
xor
les
ss
fwait
loopne
dec
mov
cli
pop
cmovle
fnstcw
adc
sahf
jne
dec
fcoml
leave
test
push
xchg
push
test
fs
pinsrw
mov
sbb
int3
punpcklwd
mov
cs
push
push
jne
mov
sub
inc
adc
dec
sbb
lret
into
sub
push
loop
in
sbb
fisubrs
jbe
inc
xor
ljmp
inc
push
loop
mov
addr16
sbbl
xchg
loop
jno
mov
cmp
dec
fnstsw
lcall
xor
push
scas
xchg
sub
rorb
xor
sub
pop
stos
xchg
jns
insb
or
rcl
xchg
and
and
sub
xchg
in
sbb
add
cmp
cmp
mov
orb
icebp
mov
or
or
mov
sub
add
push
mov
mov
xor
pop
add
xchg
inc
sub
into
dec
inc
lds
mov
mov
xchg
mov
xor
inc
ljmp
sarl
movsb
pop
push
xchg
dec
sub
cwtl
nop
ret
cmp
dec
sbb
dec
push
xchg
ret
push
mov
pop
pop
mov
sub
push
xchg
lret
xor
lcall
mov
pop
sbb
inc
jb
lret
sub
fs
mov
push
aaa
push
bound
adc
adc
lahf
sbb
jae
xor
movsl
iret
addb
push
out
enter
sbb
or
lahf
test
jns
mov
pusha
mov
lahf
sbb
pop
sub
frstor
cmp
fisttpll
pop
out
push
bound
sub
mov
pop
jle
pop
push
stc
cmp
xor
sbb
mov
xor
push
icebp
xchg
nop
leave
xor
cmp
aas
and
dec
pop
cld
and
pop
and
push
stos
mov
push
pop
addl
and
dec
or
push
hlt
xchg
sub
add
out
jbe
pop
inc
aad
inc
xor
xor
ficompl
lods
or
imul
pop
push
push
lcallw
adc
ljmp
mov
sti
pop
sbb
nopl
imul
inc
push
inc
mov
lods
adc
sbb
and
jno
add
clc
out
add
in
je
add
inc
mov
pop
in
mov
jl
cmpsb
rolb
in
cmp
xor
outsl
xchg
lds
inc
mov
std
add
daa
mov
shrl
int
add
xchg
sti
mov
sub
sbb
sti
lahf
mov
adcb
test
xor
in
fs
and
jno
jns
ljmp
cmp
nop
int
xor
cmpsl
cmp
clc
push
shll
into
roll
jae
xor
and
in
dec
cwtl
bound
fistl
gs
fsqrt
lods
mov
psrlw
in
call
sub
pop
mov
xcrypt-cbc
cmpsl
xchg
fsts
push
adc
loop
arpl
or
mov
dec
xor
pop
mov
stc
push
xor
dec
push
push
sbb
xor
shl
addr16
inc
xchg
popa
imul
inc
or
stos
xchg
pushf
pop
sti
arpl
fcomps
cltd
and
cmp
fidivs
inc
xchg
sbb
pop
cwtl
movsl
test
aaa
mov
clc
and
repz
dec
std
jnp
xchg
popa
cs
inc
sub
cmp
fisttps
push
mov
addb
mov
push
rcr
push
das
dec
sub
adc
adc
stc
sub
inc
cmp
clc
mov
cltd
mov
arpl
out
mov
rcll
or
dec
rol
and
xor
ja
jmp
or
push
mov
push
sbb
sbb
mov
xor
jne
in
pop
sbb
fistpl
cmp
scas
adc
cli
scas
lock
mov
cmpsb
cmp
jne
sbb
mov
jg
insb
push
ss
test
popa
dec
lcall
mov
cmp
or
adc
pushf
inc
sbb
pop
xchg
xor
mov
add
in
stc
aad
dec
pop
imul
rorl
call
cmp
shl
sbb
sahf
jp
mov
cmpsb
push
pop
js
ljmp
pop
mov
adc
cmp
pop
call
sub
dec
xchg
or
push
mov
mov
push
xchg
in
call
jbe
addr16
mov
jmp
dec
and
lret
mull
sbb
aaa
dec
adc
pop
shll
mov
jno
push
lret
scas
call
loop
mov
in
mov
lret
js
and
fdivl
pop
xchg
sbbb
fdivl
sbb
xor
inc
xchg
sti
mov
ret
lcall
or
shll
jnp
sbbl
lcall
int3
mov
inc
lahf
in
leave
aaa
xlat
fisttps
xor
cmc
imul
add
lea
or
outsl
mov
push
sub
and
or
push
mov
xor
inc
mov
ds
add
mov
daa
sbb
test
or
adc
xchg
iret
hlt
push
mov
cmp
adc
gs
data16
mov
cmp
mov
aas
jp
push
push
xor
cs
shrl
push
pop
outsl
insl
or
cmpsl
mov
xchg
rcrb
lods
lods
das
lea
mov
adc
lds
jno
fadd
push
ror
leave
inc
cmp
lret
repz
cli
and
insb
leave
je
imul
enter
in
clc
xor
pop
aas
js
fcomps
iret
test
sbb
xchg
dec
sub
adc
addr16
and
inc
mov
cmp
cmp
mov
les
fmulp
test
mov
daa
sbb
addr16
mov
or
dec
mov
mov
adc
mov
push
fcoms
rep
out
test
fucomip
cltd
leave
mov
mov
ss
and
or
rcrb
dec
jecxz
jmp
orl
int3
sarl
mov
lds
mov
sahf
inc
cltd
loop
out
mov
sub
inc
xor
and
out
jbe
xor
adc
xchg
sub
movsl
test
movsb
push
ret
pop
adc
mov
decl
cmpsl
mov
xchg
push
pop
mov
adc
mov
and
mov
pop
mov
les
mov
leave
xor
mov
inc
push
cltd
push
mov
sbb
push
xor
pop
cmpsl
pop
mov
insl
push
xchg
pop
movsl
cs
sub
jno
and
ret
adc
scas
ljmp
mov
gs
repz
adc
rcll
lods
pop
in
andb
adc
mov
repnz
lret
xor
jno
push
xlat
enter
and
hlt
inc
sub
cmp
pop
ds
jg
mov
pop
sbb
pop
cld
and
lahf
cmp
mov
mov
mov
hlt
lds
inc
dec
lret
cmpsl
shl
fwait
adc
fwait
mov
loop
movsb
sbb
ljmp
dec
xor
mov
or
mov
push
mov
cld
inc
push
outsb
add
jnp
ret
mov
inc
dec
pop
jecxz
loopne
push
lds
xchg
pop
mov
prefetch
sub
iret
push
movsl
gs
pop
icebp
sbb
or
jge
mov
mov
jl
sbb
mov
adc
sbb
fucomp
adc
pop
push
pop
jge
neg
movsl
ficompl
loope
imul
xor
push
dec
out
aad
iret
lock
adc
mov
aam
add
sub
cwtl
imul
lods
das
push
push
inc
dec
mov
enter
lock
jle
inc
orl
push
loopne
rolb
int3
jo
stos
out
and
jmp
jmp
loopne
lret
mov
xchg
imul
mov
sub
test
addb
jl
insb
pop
je
mov
xchg
and
iret
mov
lret
or
dec
pop
pop
sbb
sub
inc
push
clc
adc
ficompl
sbb
sbb
cmpsb
clc
mov
jo
outsl
sarb
add
xchg
mov
and
and
push
ret
aam
stc
ja
push
jne
mov
stc
nop
inc
push
andl
sbb
in
lods
data16
cltd
jno
and
adc
mov
cmp
xchg
mov
mov
mov
mov
mov
lods
mov
mov
cmp
xchg
notl
stos
outsl
int
ret
daa
out
adc
sbb
ror
mov
and
lahf
mov
lods
inc
mov
fs
cmp
mov
or
mov
fdivr
inc
rcrb
das
rcrb
lahf
jno
push
sub
sub
bound
iret
cli
sbb
clc
and
and
ret
out
loop
add
xchg
iret
push
push
mov
es
xor
or
shlb
push
int3
xchg
mov
ret
dec
push
ljmp
gs
and
mov
cmp
into
subl
enter
call
xlat
sbb
mov
push
cmp
pop
push
mov
iret
jns
ret
bound
nop
fidivrl
xor
in
fiaddl
in
mov
pop
and
lret
imul
mov
subb
mov
inc
dec
inc
cmp
or
mul
subb
fidivl
fstpl
fs
sbb
pop
arpl
pop
lret
push
mov
loopne
ds
in
fimull
nop
jp
mov
jnp
hlt
lahf
insl
outsb
jae
sub
pop
movsl
gs
push
arpl
push
in
and
cs
push
stc
int
inc
mov
movsb
add
pop
xchg
sub
je
test
ret
jns
lods
mov
and
lcall
pop
addr16
in
xchg
jae
decb
cld
mov
mov
ret
out
js
cmpsl
jo
out
xchg
mov
psubw
int3
cmpsl
subb
or
xor
aam
je
inc
fidivrl
repz
sub
sbb
shlb
popa
xlat
xor
and
sbb
lea
sbb
adc
fildl
sbb
fistpl
or
testb
jbe
cld
adc
popa
mov
cwtl
push
out
movsl
jecxz
adc
inc
nop
sbb
int
js
xchg
mov
out
mov
test
adc
push
xor
ljmp
mov
aas
xor
xchg
mov
and
fwait
int
and
xchg
mov
sarb
ljmp
dec
cltd
scas
mov
and
stc
pop
inc
es
shll
cs
popf
cmpsl
xchg
mov
sbb
sbb
sbb
aam
mov
cmp
mov
sbb
or
dec
imul
xchg
mov
stc
and
div
aaa
or
call
jns
xchg
sarb
les
in
rcrb
pop
or
push
movsl
xor
stos
mov
jnp
sbb
inc
cmp
imul
xchg
lret
outsl
fistpll
aaa
pusha
adc
adc
sub
mov
pop
in
mov
aaa
or
xor
jg
sub
iret
or
dec
loope
and
shlb
inc
xor
lds
and
daa
jo
push
outsl
cld
test
or
test
dec
nop
inc
or
bound
fs
push
addb
and
mov
cld
bound
jns
stc
mov
inc
inc
loop
jbe
mov
outsb
pop
rcl
int
outsl
push
and
adc
adc
mov
lret
jge
sbb
fcompl
cmp
mov
outsb
jo
push
cltd
mov
dec
fdivs
dec
jecxz
in
iret
repz
push
xadd
aad
movsl
cmp
mov
popf
lods
ss
imul
loopne
stc
iret
jbe
cmp
out
or
sti
cltd
and
aad
sysret
lods
pop
add
fistps
and
inc
mul
mov
vmwrite
adc
jns
cmp
adc
call
cs
pop
sbb
dec
mov
shll
lcall
iret
ficomps
es
dec
xor
int3
pop
mov
outsl
inc
les
mov
mov
ljmp
jge
adc
ret
xlat
cmp
push
mov
mov
push
xchg
mov
gs
jbe
sub
ljmp
xchg
arpl
or
out
mov
add
dec
cmp
push
scas
aam
pop
sub
pop
and
mov
mov
xchg
popa
push
jp
aaa
icebp
test
and
and
jne
xor
movsb
sbb
cltd
leave
sbb
dec
adc
jo
subl
and
sbb
in
sti
or
in
mov
ret
aam
les
jae
in
jbe
inc
pop
mov
lock
sbb
fstl
xor
cmp
mov
xchg
xor
or
popa
mov
daa
xor
pushl
lock
lret
lea
scas
cli
sbb
orb
aas
sub
imul
pop
sbbb
mov
mov
sub
fwait
popf
rclb
or
in
imul
or
daa
and
jb
xchg
cltd
xor
sbb
or
in
lods
jmp
mov
mov
or
divb
adc
loop
sub
imulb
inc
xor
dec
mov
subl
jns
popf
ficompl
shl
mov
pop
in
ss
aad
rorl
js
les
add
dec
outsl
xchg
or
bound
jb
add
inc
adc
pop
mov
ss
hlt
out
and
in
inc
mov
icebp
andnps
nop
cmp
jne
stos
lea
loop
data16
lods
xchg
or
mov
sbb
jle
sub
aas
xchg
loop
jno
mov
jae
leave
jae
mov
pop
xchg
int
jge
xchg
xor
xchg
jbe
pop
cld
addr16
daa
aam
repz
sbb
sbb
insl
push
mov
jle
imul
or
sub
loop
mov
pop
lret
mov
push
int
sub
xorl
cmp
dec
mov
push
mov
loop
data16
out
lock
mov
xor
xor
mov
lcall
pop
es
test
arpl
adc
add
inc
sub
js
xor
mov
popf
pushf
sbb
push
jp
jmp
jo
scas
lret
xor
in
or
shrl
xor
push
pusha
int3
gs
or
sbb
xor
xchg
lods
mov
mov
push
add
or
mov
in
shll
decb
inc
inc
arpl
aas
cltd
insb
push
aaa
jg
scas
add
inc
popf
incb
stc
dec
mov
sub
pop
iret
cmp
push
stc
popf
ja
and
test
dec
inc
and
mov
jb
push
push
xchg
sub
lret
jb
sub
sbb
out
lods
sbb
sti
imul
pusha
int3
inc
rclb
mov
xchg
cwtl
loopne
push
and
and
mov
lods
xchg
cmp
iret
dec
pop
cmp
push
mov
xorl
mov
xchg
ret
dec
cwtl
jo
pop
es
int3
pop
mov
pop
push
cmp
fs
sbb
ret
mov
inc
mov
push
pop
inc
insb
cmp
out
lods
int3
sub
mov
push
lcall
mov
and
cltd
mov
mov
stos
popa
sub
lcall
jbe
push
pop
and
ret
and
cmp
sbb
sbb
insb
dec
repnz
xchg
jmp
mov
dec
mov
aad
das
push
dec
loop
jo
rclb
pop
fsts
mov
lahf
sbb
mov
call
mov
xchg
loop
sti
stos
sub
popf
cmpsb
xchg
inc
push
sub
dec
test
dec
add
mov
and
push
jns
test
aad
inc
xor
jbe
mov
xor
cmpsb
and
inc
leave
sbb
xor
add
or
es
mov
push
lds
test
xchg
sti
jne
test
jmp
rorb
addr16
jmp
mov
mov
mov
dec
sbb
pusha
inc
pop
test
daa
stc
test
fs
rclb
sub
aam
mov
push
or
clc
push
movsb
jle
cmp
sub
pop
jae
xchg
mov
cmp
push
ret
or
pop
xlat
mov
cmp
loope
mov
lret
in
dec
mov
adc
stos
adc
bswap
mov
shll
ja
pop
inc
addr16
mov
add
pop
pop
les
fdivl
jb
imul
jmp
in
push
sbb
inc
ljmp
jge
loop
pop
inc
mov
fwait
xchg
mov
leave
mov
xchg
mov
pop
jl
push
in
sbb
subl
sbb
nop
cmc
pop
mov
mov
cmpsb
push
and
daa
and
sub
inc
lds
imul
add
mov
loop
movsb
inc
mov
sub
repnz
dec
das
mov
out
dec
mov
ret
pushf
shr
sbb
les
lret
inc
cwtl
adc
xchg
loop
mov
test
push
xor
lods
je
pop
inc
and
test
outsl
bnd
js
xchg
cmp
push
jbe
mov
cmpsb
mov
mov
in
pop
push
mov
cld
aaa
sarl
pop
stos
pop
nop
xchg
push
test
xchg
in
mov
mov
es
push
pop
in
mov
sub
in
pop
mov
bound
sbb
and
clc
mov
push
fsts
mov
mov
pop
xlat
std
sub
iret
aad
das
inc
xchg
sub
mov
rcl
std
ss
or
or
xchg
movsb
cld
sahf
sbb
popa
or
push
pop
or
cmp
sti
push
das
mov
mov
cmp
adc
inc
test
inc
push
push
aaa
adc
sbb
shlb
in
int3
pop
cli
sti
cmp
jne
ret
or
mov
jg
fucomi
and
rclb
mov
xor
in
sahf
aad
inc
loop
ret
pop
xchg
mov
in
shlb
insl
cmp
les
sbbl
sbb
cmp
sbb
push
out
fdivrl
and
dec
mov
pop
mov
add
sbb
and
sub
adc
and
addr16
inc
and
int3
in
test
mov
bound
or
mov
xor
rdmsr
push
and
pop
mov
pop
mov
movsl
adc
sbb
outsl
lock
movsb
cmp
ljmp
inc
sahf
arpl
or
shrl
aas
jle
popf
mov
arpl
add
and
cltd
pop
pop
loop
arpl
mov
lahf
repnz
in
jae
mull
pop
jge
push
mov
scas
xor
jbe
add
lds
into
push
push
sbb
mov
frstor
imul
sti
fsubl
daa
ret
aaa
mov
das
insl
push
sbb
xor
and
pop
inc
inc
lcall
ja
cmp
push
dec
inc
push
adc
pusha
andl
inc
sarb
add
jno
cmpsl
ljmp
ja
cli
push
aas
fdiv
movsl
cli
jno
add
mov
adc
pop
nop
sbb
sbb
and
ret
lock
mov
hlt
cmp
fdivs
add
pop
adc
cmp
and
add
xchg
rorb
pop
xor
inc
sbb
lret
movsl
xchg
lret
dec
add
lea
les
add
and
xchg
das
sub
seto
kandb
aaa
es
adc
je
inc
call
jnp
loop
xchg
lds
sti
inc
fistpl
dec
iret
fnsave
nop
cmp
int
inc
mov
es
int
xor
mov
lcall
inc
xchg
pop
dec
loop
imul
pusha
xchg
aam
cwtl
test
cmp
pop
out
push
insl
inc
adc
mov
inc
aaa
stc
mov
jbe
lcall
dec
inc
js
inc
push
push
dec
loope
xor
pushf
add
js
push
adc
jb
bound
lea
sub
inc
cmp
aaa
jl
pop
mov
and
loopne
lods
jns
pop
xchg
testl
push
fiadds
cmp
lock
dec
insl
xchg
inc
aaa
adc
pop
int
icebp
mov
shlb
inc
xor
stc
and
movsb
repnz
fidivrs
xor
nop
pop
sub
hlt
pop
jo
call
addr16
dec
jns
sbb
shll
mov
insl
or
fcoml
xchg
sub
insb
fisubrs
jl
daa
outsl
movsl
cltd
rcpps
xor
pop
stc
fldcw
push
jmp
fmul
fldcw
dec
arpl
call
or
xchg
outsb
jg
xor
out
test
aaa
cmp
pop
outsb
xor
xor
adc
cmp
arpl
or
adc
popa
stos
mov
jg
add
shll
sub
mov
xor
mov
xor
rclb
jge
jo
mov
js
cmp
pop
mov
push
cs
sub
jb
shrl
mov
push
fwait
pop
cmp
fwait
mov
sti
insl
add
and
fldcw
je
jne
cwtl
and
loope
nop
mov
sahf
xlat
mov
mov
popa
jns
sbb
jne
popf
push
and
fimull
xor
mov
mov
xlat
cmpsl
fs
popf
mov
push
inc
es
xchg
dec
ss
data16
aas
mulb
in
pop
jne
cmpsl
mov
and
adc
je
push
jg
sahf
out
jl
cmp
jne
cmp
loop
popa
in
js
sbb
cmp
inc
adc
mov
cmpsl
or
xchg
and
jno
hlt
xchg
test
xor
das
and
sbb
or
pop
rolb
xchg
xor
test
push
cmp
pop
sarl
xor
xchg
jg
mov
adc
dec
cltd
dec
lcall
jg
mov
je
aaa
and
jo
in
pop
je
pop
sub
mov
xchg
loop
inc
popa
adc
loope
popa
das
and
push
cmp
scas
mov
push
and
sar
mov
icebp
sbb
ja
mov
and
xor
and
scas
pop
ficoms
or
and
popf
xchg
pop
test
dec
mov
jo
out
sub
in
fisttpll
sub
mov
xchg
in
xor
mov
rorl
enter
outsl
sbb
xor
xor
add
add
movsl
mov
notl
pop
sbb
and
cmp
pop
addl
dec
jno
lahf
and
xor
adc
andb
adc
push
push
mov
fs
pop
cmp
cmp
shlb
mov
pop
jb
xor
loopne
push
mov
inc
pop
test
pusha
xchg
pop
into
push
es
aaa
push
add
sbb
pop
popa
fildl
and
out
push
mov
loope
adc
pop
stc
cs
add
add
cmp
xor
sbb
xor
iret
and
and
xor
mov
or
cmp
inc
clc
and
scas
icebp
push
je
sub
sbb
in
lret
and
push
mov
imul
xchg
push
sahf
mov
sbb
and
xchg
sub
and
clc
inc
lret
mov
pop
or
repz
dec
movsl
std
mov
sbb
inc
push
loop
fisttpl
rcll
add
sub
aaa
xor
js
dec
jmp
jmp
stc
leave
out
pop
push
insb
xor
sub
repz
mov
rolb
xchg
popa
insl
xchg
mov
mov
mov
idivb
int
or
hlt
les
iret
cli
pop
or
loop
jl
ficoms
pop
mov
cwtl
and
ret
cs
and
mov
cmc
fildl
lds
jno
xor
xchg
nop
sbb
ljmp
dec
xchg
popa
imul
push
fsubrl
pop
shl
out
imul
jge
adc
fsts
loop
cmp
les
lcall
jb
fldt
jae
mov
out
out
pop
icebp
and
mov
inc
mov
mov
loope
test
xor
cmpsl
lret
loopne
inc
mov
bound
pop
adc
push
push
sbb
pop
xor
xor
mov
push
nop
xchg
in
notl
pop
sti
and
xchg
mov
add
xchg
das
cmpsl
add
dec
outsb
push
fildl
lods
imul
inc
xor
mov
dec
add
adc
sub
jg
mov
into
popa
lahf
push
lahf
lods
jp
call
aaa
push
xchg
xor
add
cmpsl
cmp
mov
xlat
and
subl
add
negb
inc
lock
push
stos
addb
inc
ljmp
testb
mov
mov
enter
imul
les
xchg
rsqrtps
movsb
pop
mov
push
flds
jnp
mov
and
cmp
xchg
mov
cmp
xchg
loop
mov
mov
and
jns
dec
mov
dec
or
mov
sbb
add
loop
jbe
adc
loop
ss
imul
mov
mov
pop
int
mov
jo
or
int
cltd
aaa
sar
daa
orb
sti
cmpsb
and
int3
lcall
mov
in
in
mov
cwtl
jp
mov
inc
mov
mov
leave
mov
and
dec
mov
mov
inc
mov
fxch
push
inc
mov
aaa
insb
loop
or
sti
cmp
data16
mov
push
xchg
add
or
or
test
or
dec
sub
jb
push
pop
xchg
clc
popa
mov
pushf
inc
cld
imul
mov
pop
adc
push
pop
xor
or
test
cmc
cltd
push
mov
inc
in
pop
call
adc
sahf
push
pop
imul
hlt
jl
mov
xchg
xlat
jge
add
add
mov
hlt
and
sbb
out
xchg
popa
mov
jb
pop
mov
sub
sub
push
bound
clc
into
sbb
fs
and
sbb
adc
xchg
push
in
andl
mov
mov
inc
lret
cwtl
stos
push
or
push
mov
loope
push
inc
xchg
pop
mulb
adc
push
mov
stos
int
in
outsl
or
pop
imul
popf
sub
inc
sub
jne
sbb
and
call
bound
mov
xor
pop
notb
loop
roll
imul
and
je
mov
test
ja
sbb
and
adc
xchg
jb
loop
xor
xchg
cmc
fstp
fsubrl
cwtl
push
and
push
idivl
mov
dec
adc
sub
push
cmp
sarb
pop
cltd
sub
ds
fwait
sub
and
pop
push
js
push
inc
sarl
cltd
xchg
mov
sbbb
popf
jge
jmp
inc
push
inc
add
cmp
sbb
add
mov
out
aam
mov
cmp
popa
orb
push
sbb
sbb
xchg
in
sub
loop
ss
push
cs
lods
inc
in
push
sub
inc
or
test
repnz
ret
and
leave
roll
test
mov
scas
scas
sar
sbb
mov
adc
mov
addb
lahf
sub
cltd
jg
and
pop
adc
hlt
pop
dec
js
ficompl
out
icebp
push
inc
daa
jge
std
lahf
xchg
pop
xchg
jns
sbb
xchg
jg
pop
xchg
mov
push
mov
ficoml
ret
xor
mov
or
bound
sbb
leave
adc
push
lds
or
addr16
into
aaa
fstl
sub
xor
lcall
popa
mov
xor
jmp
and
fwait
popf
jbe
aaa
mov
pop
adc
dec
in
sbb
and
pop
sarl
stos
push
pop
push
and
dec
inc
ficoms
mov
xchg
in
jb
add
adc
popa
xchg
sbb
ljmp
cmp
fwait
idivl
mov
sbb
clc
jmp
lcall
sbb
sbb
sbb
mov
cmp
sbb
and
ret
lret
stos
xor
adc
stos
adc
xchg
pop
iret
pushf
sub
mov
sbb
ret
sbb
xchg
lret
fisubrl
cmp
std
lret
pop
push
push
cmp
xor
stos
pop
leave
sub
fcoml
xchg
inc
push
cmp
xor
movsl
and
cli
jb
mov
lods
aas
and
scas
cmc
stos
and
mov
xor
add
ja
dec
xchg
xor
cmc
insb
sub
std
sub
popa
inc
popf
insl
or
dec
jg
jns
imul
loop
aam
jne
sub
pop
push
negl
fbstp
roll
imul
das
push
sbb
push
dec
outsb
push
jbe
nop
mov
xchg
and
sarb
xchg
in
stos
cmpsb
mov
dec
mov
pop
xor
stos
mov
pop
lret
cmpsb
cs
andl
mov
lea
mov
mov
cmpsb
jns
addr16
or
into
out
pop
xchg
add
insl
mov
adc
stc
pop
pusha
fisubs
add
mov
mov
sbb
int3
pop
clc
add
xchg
iret
cmp
adc
pop
xorb
push
push
pushl
bound
mov
loope
dec
mov
xchg
pusha
lods
jo
add
pop
or
jne
repz
lods
add
sub
pop
test
sbb
add
out
xchg
rorb
iret
and
popa
imul
cmp
sbb
jg
cmp
insl
inc
mov
scas
xchg
jne
mov
rcrb
shrl
pop
sbb
sbb
push
xor
jo
push
nop
cld
in
and
and
lods
jae
or
and
xchg
call
sti
arpl
cwtl
inc
mov
daa
and
movsb
and
xchg
adc
les
dec
xchg
notl
in
jg
fcmovu
adc
cwtl
mov
pop
xor
dec
mov
rcrl
adc
pusha
mov
sub
hlt
fstpl
psrlw
mov
sub
jmp
addr16
xor
add
push
cmp
mov
xor
xchg
inc
xor
cmp
jge
jg
sti
pop
mov
in
inc
cli
push
pusha
pop
out
rorb
push
inc
mov
push
stc
fstps
pop
lea
push
pop
sbbb
call
add
sbb
or
and
inc
adc
pop
pop
pop
mov
push
push
mov
je
pop
lret
loop
aas
adc
out
sub
andnps
jecxz
insl
xor
mov
adc
sbb
sbb
jge
xor
jbe
adc
mov
sti
xor
xor
push
cmc
sahf
mov
fs
inc
or
sbb
sbb
mov
movsl
push
fs
test
sub
xchg
sti
sti
jne
add
mov
adc
mov
push
andl
dec
sub
xchg
xor
xchg
sub
fwait
inc
lahf
fists
rol
ljmp
add
hlt
imul
lock
ror
cmp
rorb
and
rclb
das
mov
das
and
or
or
loop
loopne
and
pusha
pop
sub
fdiv
ficoms
dec
loop
pop
xchg
jae
add
rol
sbb
out
xor
lret
call
popa
cmp
frstor
push
sub
aad
cmp
mov
cltd
rcrb
aam
sbb
test
repnz
mov
or
inc
insb
pop
fcmove
dec
lock
in
mov
flds
cltd
scas
xchg
and
dec
repnz
jmp
int
jns
cmp
or
mov
movsb
movsl
dec
dec
cmp
mov
imul
fisubrl
decl
stc
int3
dec
xchg
loope
in
into
push
imul
in
xchg
call
mov
inc
and
shlb
test
xor
repz
shlb
sbb
mov
sub
mov
adcb
mov
out
js
dec
sub
sub
and
leave
test
push
mov
jno
sbb
inc
add
dec
ret
lock
cwtl
pop
adc
dec
lahf
adc
cmp
xor
lods
fucomi
jge
xor
mov
stos
cmpsl
test
ja
outsl
mov
imul
loop
mov
sub
mov
and
repnz
pop
daa
and
pop
movsl
sub
icebp
push
mov
repnz
int3
push
out
mov
mov
dec
cli
aam
mov
push
aaa
inc
mov
sub
sbb
out
cmp
cltd
jg
loope
xor
push
cmpsl
call
inc
xor
js
jnp
in
sub
or
dec
xchg
scas
jo
fldenv
rcrb
jmp
pop
xchg
pop
es
mov
xchg
cmp
dec
es
lahf
xchg
pop
dec
inc
js
mov
lea
mov
sbb
je
sbb
mulb
add
inc
sbb
dec
sbb
stc
lods
mov
gs
cmp
call
std
sub
add
jne
jb
adc
fnstsw
dec
cmpsl
dec
iret
mov
divb
mov
sub
cmp
lods
and
loop
sti
add
mov
es
pop
popa
xchg
sub
jae
aaa
ja
movsb
enter
jne
divl
push
enter
mov
leave
out
adc
jno
push
ds
sub
loopne
mov
scas
mov
rclb
push
ficomps
jno
popa
test
imul
and
inc
hlt
push
mov
mov
sbbb
sbb
rorl
xor
leave
push
fmuls
cmp
xchg
push
dec
xor
cmp
xchg
mov
push
call
xorl
repz
push
mov
fsubl
sbb
jmp
inc
adc
mov
insb
sar
push
lret
fidivrs
xor
add
and
cmp
xchg
lcall
push
lahf
fstl
xor
dec
xlat
ja
insb
sbb
fucomip
ja
iret
push
mov
outsb
xor
inc
lods
lret
lea
xor
cwtl
das
sbb
incl
leave
faddl
add
mov
lret
inc
cmp
dec
lret
repnz
mov
add
or
sub
jo
push
push
mov
in
mov
pushf
int
int
dec
out
mov
sbb
lcall
mov
nop
fsts
imul
addr16
stc
adc
inc
loop
sub
test
push
rcrb
insl
ja
push
es
test
shrb
cmp
insl
cli
aas
loop
out
sbb
ja
lds
jb
xchg
mov
cmp
clc
mov
imul
mov
outsl
das
sahf
scas
int
or
gs
mov
sub
sub
mov
cmpsl
pop
add
outsl
lret
adc
xor
add
cmp
mov
mov
mov
jnp
adc
test
push
cwtl
adc
outsb
lock
cmp
lock
push
std
and
or
sub
stc
adc
xor
push
inc
dec
adc
inc
pop
or
add
clc
xchg
repz
ret
sbb
push
inc
push
imul
jl
xchg
mov
adc
pop
push
sbb
testb
inc
lds
rorl
fstl
ljmp
je
xor
ret
mov
pusha
jge
cli
je
jmp
push
sbbl
sti
pop
pop
mov
cltd
sub
and
nop
and
aam
nop
daa
movsb
and
cmc
ds
fisubl
sbb
outsl
cld
arpl
mov
inc
dec
jbe
and
dec
sub
lahf
jo
loope
push
jg
xchg
inc
cmp
aad
or
clc
jno
or
xchg
cli
mov
inc
or
sub
ss
cwtl
pop
push
mov
ret
popa
mov
mov
pop
mov
lea
jecxz
loope
sbb
scas
inc
push
aaa
mov
nop
and
or
cwtl
pop
inc
sub
in
stc
xlat
ror
sub
loopne
packuswb
pop
aaa
into
jo
mov
cmp
shll
pop
movsb
shlb
daa
cmp
pop
divb
cltd
fmuls
stos
movsl
xor
fwait
insl
push
es
mov
dec
call
mov
and
xchg
sub
int3
mov
mov
xchg
loop
and
mov
mov
inc
fimull
mov
xchg
mov
lret
ljmp
adc
mov
jae
jns
sbb
outsl
sbb
or
jno
mov
adc
test
fists
jecxz
or
ret
adc
shlb
lds
sub
push
ljmp
xchg
loop
jg
lret
sti
lcall
mov
addr16
in
neg
jl
arpl
and
cltd
movsl
addr16
inc
jo
sub
sub
loop
mov
sbb
lds
dec
imul
sarl
dec
sub
and
dec
dec
push
dec
fidivrl
shll
int3
inc
cmp
call
adc
iret
aaa
out
rol
stc
adc
pop
cmp
push
ljmp
mov
mov
add
add
fisttpll
xor
leave
das
pop
insl
aas
adc
shll
push
in
imul
or
popf
lea
xchg
push
movsb
imul
fnstenv
test
or
mov
mov
inc
dec
push
xchg
sbb
sbb
shr
xor
sub
and
pop
andb
and
xchg
mov
xchg
sbb
cld
push
jb
xor
mov
aam
popf
icebp
inc
mov
jns
decl
aas
sbb
pop
adc
dec
sbb
stos
je
andb
pop
popf
mov
dec
stc
call
sub
inc
sbbb
xor
sub
jnp
xor
pop
mov
push
sub
jb
and
sub
adc
pop
mov
push
mov
xor
cmpsb
cmp
xor
ficomps
out
bound
jo
dec
imull
fdivrl
sbb
sbb
rorb
and
add
aaa
out
sub
lret
pop
in
sub
lock
xchg
xchg
and
test
adc
and
rol
jmp
in
pop
and
fidivl
imul
jns
mov
sub
pop
push
add
sub
in
adc
xor
sbb
loope
call
add
or
adc
jns
and
outsl
sbb
filds
sbb
das
mov
idivl
mov
arpl
cmp
sti
inc
and
ret
push
inc
sbb
pop
incb
cmp
daa
stos
inc
cld
sbbl
mov
pop
sbb
lods
je
push
lods
pushf
xchg
sub
outsl
sbb
and
dec
bound
xchg
xchg
or
add
push
cltd
and
and
cmp
xchg
imul
es
adc
push
push
push
mov
dec
xor
std
aas
mov
daa
divl
sub
add
sti
loop
pop
fnstenv
bound
cmp
popf
sub
inc
add
ss
data16
cmpxchg
cmc
xchg
xchg
cltd
sti
xor
sbb
mov
dec
jp
inc
imul
fsts
adc
ror
cmp
xor
pop
mov
imul
popf
shlb
stc
daa
leave
sub
stos
sbb
fimull
ja
test
push
add
pop
mov
mov
icebp
adc
push
lds
fsubs
loope
imul
loop
mov
sub
adc
jb
jmp
sahf
xchg
adc
jns
ljmp
xchg
mov
push
pop
pusha
xchg
sbb
fstl
dec
lea
hlt
push
inc
int
mov
dec
push
xor
in
aas
loop
inc
aad
push
mov
sahf
addr16
in
mov
addr16
push
pop
sub
loope
adc
xor
mov
in
jno,pt
sub
sbb
dec
sbb
mov
add
stc
or
xor
and
cmp
jle
xor
jg
jge
imul
mov
xor
push
cmp
push
and
xor
push
pop
xor
push
inc
ja
and
pop
das
cltd
cmp
xchg
pop
or
shll
ljmp
test
jne
adc
push
bound
subb
sbb
add
mov
pop
mov
mov
adc
in
inc
jmp
movsl
xor
sub
sub
cmp
jbe
ljmp
pop
adc
jg
addr16
pop
xchg
inc
jge
enter
xchg
adc
add
movsb
or
add
outsb
or
push
mov
clc
pop
pop
cmp
popa
roll
cmc
fnstsw
cmpsl
int3
fcoml
ss
cmp
testl
rcr
mov
dec
push
mov
jo
mov
push
sbb
std
gs
or
adc
mov
add
mov
ljmp
pop
sti
push
or
popf
adc
xchg
pusha
jl
out
les
xchg
pop
std
cmc
inc
inc
mov
sbbb
mov
mov
jp
popf
push
pop
xor
dec
test
int
loopne
in
stos
fmul
mov
fidivrs
fs
lret
pop
mov
add
mov
adc
mov
fisubs
sub
mov
and
inc
and
cld
fsubrs
fcmovu
and
dec
mov
mov
cmp
push
stos
sub
and
lcall
jmp
mov
sbb
jge
sahf
cmp
xchg
sub
cmpsb
movsb
lods
out
push
dec
adc
add
scas
movsb
xchg
stc
xchg
and
inc
aam
lds
in
dec
in
sbb
add
mov
lret
out
les
and
pop
or
add
and
and
das
repnz
inc
add
nop
daa
mov
xor
mov
mov
cmpb
enter
xchg
popf
cmpb
es
fistpll
and
loope
movsb
mov
pushf
fisubs
and
pop
enter
icebp
and
xor
stos
sub
inc
subb
dec
sbb
or
sbb
out
shl
shr
and
adc
imul
pop
and
mov
call
cmp
xor
xchg
dec
mov
xchg
addr16
xor
dec
pop
add
out
cmp
das
cs
jl
stos
cmpsb
test
cmc
xchg
sub
lret
jmp
mov
push
xchg
adc
mov
aaa
xchg
add
leave
dec
sbb
pop
xorb
xchg
add
cmp
fldcw
dec
adcb
mov
cli
leave
mov
inc
mov
mov
bound
and
mov
das
flds
scas
icebp
mov
repnz
dec
ret
sub
and
inc
das
sbb
cwtl
xor
rcll
jge
jns
test
ret
mov
adcb
mov
jno
sbb
cmp
arpl
imul
clc
pop
mov
dec
push
xchg
imul
lret
enter
ss
pop
or
ja
out
mov
mov
sbb
repz
add
imul
mov
xor
xchg
cmp
out
cs
jp
call
out
test
shll
je
xor
repnz
mov
pop
mov
xchg
ret
es
pop
push
xchg
sbb
shrl
xchg
jns
lods
dec
es
faddl
dec
sbb
imul
scas
loop
jb
cmc
ja
mov
mov
pop
adc
stc
pop
and
cmp
sub
cmp
das
test
and
sbb
dec
xchg
push
xchg
mov
xor
inc
push
and
sbb
mov
fwait
sub
mov
jp
xchg
inc
push
dec
pop
into
inc
mov
scas
arpl
add
mov
mov
cmpsl
jle
adc
daa
imul
imul
or
insl
repnz
push
mov
daa
popf
mov
mov
pop
xchg
mov
mov
mov
inc
pop
sbb
adc
and
pusha
jl
vmclear
sub
ds
mov
xchg
mov
sub
mov
mov
cmp
mov
outsb
sbb
nop
sahf
scas
outsl
pop
push
loop
imul
pop
jns
sub
pop
dec
lods
cltd
in
jp
inc
jp
out
mov
out
cmp
jle
pop
or
ret
jge
insl
gs
mov
fdivrs
stc
pop
pop
bound
rcrb
fwait
push
sub
and
push
push
popf
jl,pn
pop
xchg
xchg
cmpsb
hlt
shlb
aas
or
xchg
fsts
cmp
in
dec
rolb
out
les
je
aam
sbb
fstl
push
inc
addr16
adc
les
mov
repz
aaa
push
cmp
inc
pop
jb
sbb
outsb
mov
jl
mov
sbb
inc
xor
daa
adc
mov
xor
icebp
ja
enter
mov
and
mov
loope
and
push
sbb
dec
aaa
loop
rcrl
sbb
pop
iret
xorl
xchg
mov
xchg
nop
imul
and
cmp
xor
and
rcr
push
les
or
jb
loop
mov
xor
lea
clc
movsb
xlat
xchg
andl
jns
inc
int
push
loop
cs
mov
push
test
mov
cmp
and
xchg
mov
mov
mov
mov
push
pop
add
lea
popa
sbb
jno
sti
xor
xchg
rcll
rorl
sbb
insw
cltd
loope
add
cwtl
pop
jno
lds
icebp
inc
push
sti
ds
frstor
pop
inc
jp
clc
lods
rcrl
aas
push
dec
into
rcrb
push
add
push
jecxz
outsl
and
mov
xor
orl
rcrl
mov
pop
repnz
jno
jns
in
mov
xor
mov
jbe
or
out
xlat
xor
and
push
rol
cli
sahf
add
mov
sarl
and
es
or
mov
jns
adc
cli
rcrl
sub
inc
add
pop
jne
pushf
jecxz
jo
jne
fnstcw
jne
cmp
enter
mov
bound
push
loop
inc
lahf
cmp
test
xor
mov
dec
iret
inc
mov
movsl
mov
into
movsb
mov
mov
int
mov
popf
inc
adc
out
adc
insb
xor
jbe
lcall
push
nop
hlt
inc
xchg
push
rcll
adc
cmp
and
lods
loope
adc
jae
or
inc
fldenv
and
sbb
xchg
lcall
rcrl
cmp
mul
icebp
loope
out
jmp
sbb
sbb
fstl
dec
movsb
stc
inc
mov
inc
xchg
sub
xchg
mov
pusha
insb
fwait
cltd
push
hlt
jp
push
sbb
dec
push
mov
lahf
aas
iret
testb
mov
lods
mov
ljmp
lret
sub
loop
shrl
pushf
xchg
int
push
cld
jo
icebp
xor
mov
xchg
fcomi
inc
or
gs
xchg
jl
jnp
pop
sub
and
ja
mov
jmp
loop
icebp
add
popa
xor
and
or
cmc
mov
pop
push
sub
sub
sbb
dec
pop
cmc
test
xchg
dec
fs
sub
jno
push
pop
push
xor
call
popa
shrb
cs
push
cmpsb
sub
dec
jnp
mov
adc
jae
xchg
xchg
iret
inc
mov
or
xchg
lcall
mov
adc
ret
jnp
scas
sub
icebp
outsl
mov
adc
push
ljmp
insb
push
and
and
jo
mov
imul
pop
xchg
xor
pop
or
cmpsl
cmp
sub
mov
fwait
and
sub
sub
frstor
pop
ja
push
xchg
and
push
cmp
cmpsb
push
mov
push
xchg
xor
sbb
daa
adc
pop
shlb
stos
bound
pop
inc
pop
dec
jnp
je
divl
adcb
fwait
in
mov
or
and
popf
or
sub
std
rcrl
rorl
ret
pop
xor
ljmp
jg
sbb
cmpl
call
pop
les
pop
call
push
int3
inc
movl
jp
push
and
mov
cwtl
inc
mov
ljmp
mov
pop
icebp
cmp
add
cmpsl
or
daa
ss
fldcw
fwait
push
and
jle
loop
pop
mov
xlat
fnstenv
dec
call
int3
xor
mov
ds
sarb
mov
sub
sbb
lahf
sbb
cs
inc
in
adc
clc
pop
stc
pop
push
in
or
lcall
and
push
das
imul
and
std
cltd
or
popf
clc
and
test
add
lds
adc
es
adc
adc
lret
cmp
pop
push
jg
stos
or
inc
rcrl
ds
jbe
cld
addr16
cmp
sbb
cs
cwtl
sub
fcmovbe
aaa
loop
and
dec
or
mov
adc
ja
neg
scas
jbe
push
std
mov
lret
lret
push
rcrl
jecxz
loope
adc
pop
mov
xchg
pop
das
jo
sarl
sub
xor
sti
xchg
fnstsw
mov
loope
add
aas
in
and
stos
xlat
mov
stos
inc
loop
push
les
mov
cmpsl
sbb
cli
mov
mov
dec
fidivl
sub
mov
xchg
push
sbb
sahf
add
stc
sbb
out
std
mov
jnp
imul
icebp
xor
mov
and
test
sbb
push
ret
lods
faddl
sub
fsubl
inc
mov
pop
xchg
cmp
insb
loope
xchg
dec
cltd
cmp
sti
dec
sub
xchg
dec
sbb
xchg
cmp
test
repnz
in
data16
sbb
aas
and
out
pop
inc
sub
clc
push
adc
lret
stc
mov
lcall
mov
lea
lret
mov
adc
shll
scas
movb
xor
shlb
jge
and
xor
push
cmp
in
aas
stos
sub
sbb
mov
sbb
xchg
and
jg
jecxz
cmp
xlat
xor
dec
cmpsb
and
xor
xlat
bound
mov
out
sub
cmp
fiaddl
and
xchg
push
mov
test
mov
xchg
lock
push
mov
out
subl
out
mov
inc
repz
mov
adc
mov
gs
xor
mov
dec
inc
in
ret
add
stc
cmpsb
sub
jns
xor
adc
mov
test
mov
push
sub
mov
aad
test
pop
out
mov
es
inc
fwait
loopne
add
call
pop
jno
sbb
out
loopne
xor
test
aad
cmp
cmp
nop
jnp
fldl
int
test
xor
stos
pop
shr
jl
shl
and
outsb
dec
fwait
mov
es
jae
mov
ret
cmp
sbb
inc
mov
and
cmp
pop
mov
mov
inc
jne
sbb
mov
daa
add
pop
push
mov
mov
aad
and
xor
and
mov
jns
icebp
cmpsl
adc
fwait
pop
repz
mov
push
cmpsb
icebp
xchg
pushf
jge
stc
mov
arpl
lcall
repz
cltd
sbb
and
xor
js
push
sahf
jne
and
push
pop
xor
jnp
mov
xor
movsb
push
fistpl
cmp
xor
dec
and
mov
xor
sub
adc
sub
mov
cld
cltd
sub
les
xchg
shrl
scas
pushl
insl
jne
icebp
loop
mov
cmp
int
pop
push
icebp
mov
mov
iret
in
icebp
lods
daa
fcomps
mov
fdivrs
and
std
mov
nop
push
stos
icebp
loop
sbb
outsl
or
ss
cmpb
imul
pop
std
fsts
fdiv
mov
lds
xchg
cld
popf
or
push
daa
sub
xor
mov
jbe
sub
iret
xchg
xchg
pop
stos
mov
or
mov
or
sbb
sbb
iret
jge
xor
orl
xor
add
lahf
punpcklbw
jmp
lret
add
xor
insl
lods
push
aaa
jecxz
xchg
sbb
lcall
xchg
clc
cmp
stos
and
xor
out
rcrl
idivl
and
cmp
fistl
js
int3
fistps
loop
adc
push
xor
and
xchg
cs
bound
cmp
xor
xchg
pop
jb
sbb
mov
mov
mov
pop
cmpsb
xor
inc
arpl
adc
sbb
flds
pop
jb
imul
leave
inc
loop
adc
inc
mov
cs
cli
daa
loop
adc
or
adc
sbb
or
push
dec
inc
test
repnz
xchg
ret
cmp
in
and
repnz
cmp
ss
pop
ficompl
aas
popa
adc
das
and
hlt
lcall
cmp
testb
add
sti
sti
push
jle
ficompl
sbb
add
imul
aam
inc
movsl
popl
mov
push
scas
repnz
xor
sub
and
aad
add
bound
inc
xchg
xchg
fsubl
mov
adc
rclb
popf
das
scas
jle
cmp
jge
es
cltd
xchg
or
adc
daa
pop
mov
xor
push
inc
and
popf
pop
lods
inc
dec
cmpb
pop
movsl
mov
in
xchg
cmp
pop
test
lods
adc
inc
lods
inc
rcrl
mov
mov
jecxz
leave
jg
pop
scas
add
ret
add
cltd
push
stc
loop
mov
pop
int3
pop
cmp
mov
mov
inc
mov
sarl
add
sbb
xchg
and
inc
das
inc
loope
xchg
scas
push
adc
cmp
push
loope
adc
repz
inc
inc
add
lods
dec
incb
stos
sti
cmp
loope
xor
push
lds
arpl
ss
or
sbb
xchg
lcall
je
mov
inc
xorl
test
sub
inc
cmp
cmp
mov
push
shrb
xchg
mov
mov
mov
in
push
xor
mov
insb
pop
inc
inc
cli
icebp
push
push
icebp
xor
mov
mov
xor
adcl
or
cmp
rorl
inc
jbe
push
inc
inc
loope
or
outsb
xor
mov
adc
push
stc
leave
dec
adc
xchg
adc
enter
mov
int3
and
shlb
gs
xlat
add
loop
imul
xchg
fildl
test
movsb
mov
and
dec
imul
incb
inc
xchg
leave
ss
inc
rclb
movsb
and
shlb
lods
xchg
lds
cmpsl
push
or
and
dec
and
aam
std
jl
stc
mov
add
orb
cmp
xchg
push
rcrl
bound
fstpl
cmp
jae
pop
int
call
lods
leave
popa
push
rclb
adc
jl
mov
movsl
mov
dec
cmp
xor
mov
xor
mov
out
imul
sbb
mov
mov
jns
push
or
mov
ja
test
mov
loop
add
push
xor
xor
add
cmpsl
mov
mov
inc
xchg
mov
sbb
or
mov
adc
adc
sti
rcrl
stc
sbb
sti
adc
in
push
imul
push
mov
pop
sbb
mov
sbb
iret
cli
xlat
popf
mov
cmp
cmpsl
xor
push
aam
mov
cmp
arpl
ja
enter
andl
and
cli
xchg
dec
stc
inc
cwtl
sub
stos
mov
leave
test
cli
push
and
rcll
push
and
xor
pop
jno
jmp
lret
xchg
mov
dec
flds
mov
mov
ljmp
mov
and
mov
fwait
cs
jno
mov
pop
or
stc
daa
in
push
push
cmp
pop
push
stos
xor
jle
loopne
iret
outsb
xchg
or
loope
mov
scas
xchg
clc
insl
sub
sub
daa
xor
dec
push
cmp
fwait
and
add
dec
push
add
mov
mov
push
mov
pop
iret
jmp
rcrl
fldl
aas
cmp
push
lods
cmp
mov
mov
mul
sarb
rcrw
mov
mov
aaa
mov
arpl
out
rorl
out
clc
data16
jno
add
dec
mov
mov
cmpsl
push
xchg
cli
or
movsl
sub
mov
mov
pushl
mov
lcall
jb
int
lahf
mov
jno
sbb
jo
or
and
push
mov
xor
arpl
loopne
inc
ljmp
and
gs
mov
cli
gs
test
pop
popa
xor
xchg
sti
pop
movsb
sbb
cmp
sti
jnp
in
push
fildl
dec
enter
mov
sbb
xor
andb
jle
sub
daa
add
sti
sbb
pop
enter
and
cmp
inc
testb
das
push
sbb
clc
divl
dec
pop
insb
ret
sbb
orl
adc
mov
pushl
mov
adcl
call
mov
pop
in
aad
jg
xor
loop
aad
adc
mov
push
jp
rcl
mov
lret
lcall
sub
fs
xlat
jne
rcrb
fbstp
movsl
das
xchg
inc
xlat
lret
cmpl
or
xor
addr16
stos
push
jg
lahf
dec
jbe
xchg
adc
inc
inc
jbe
jbe
or
jmp
pop
push
out
sbb
fnstenv
fildll
xor
jge
fsubrl
adc
mov
jae
andb
lea
push
dec
subl
mov
lods
out
add
cmp
cmp
lea
mov
push
adc
dec
rcrb
mov
add
sub
iret
cmc
ljmp
cld
in
adc
shl
pop
mov
push
mov
sbb
jg
inc
fcompl
pop
mov
xor
mov
mov
dec
push
mov
xorb
push
and
int3
pop
adc
mov
xor
cmp
jae
mov
leave
jl
inc
repz
xor
imul
cmp
dec
repz
pop
sti
test
mov
fisubs
pop
call
loop
push
ljmp
in
in
and
rcr
jl
arpl
pop
lret
subl
and
sti
mov
cmp
jb
jmp
adc
inc
cmp
xor
push
mov
imul
xor
xor
push
mov
dec
adc
sarb
cli
mov
adc
xchg
sbb
push
sahf
mov
sub
mov
sub
lods
jl
sahf
aad
adc
pop
in
cmp
movsb
dec
das
aam
mov
testl
mov
jno
and
push
fnstcw
fildll
ud1
filds
xchg
jo
sti
lea
xchg
adc
mov
cmpxchg
insl
scas
scas
lret
lods
xor
vpshufd
out
call
popf
inc
shll
in
shll
xchg
mov
stc
mov
lods
imul
mov
mov
scas
mov
in
mov
or
push
push
or
push
cmp
sub
cmc
push
insl
nop
pop
mov
cmp
loop
mov
xchg
cmp
cltd
xor
mov
xchg
repz
inc
pop
push
fistps
adc
pop
fxam
stos
pop
add
cld
push
pop
ds
xchg
cld
insl
mov
mov
xor
gs
or
int
and
sbb
push
push
cwtl
mov
mov
aam
lcall
les
std
lret
aaa
fldcw
js
lret
sub
test
aam
sbb
icebp
test
aad
mov
jae
imul
mov
push
outsb
or
sti
xlat
push
sub
cwtl
xchg
fsubrl
andl
jmp
cwtl
pop
ret
sub
idivb
or
xchg
call
cmpsl
sub
sub
sbb
loop
movsl
xor
mov
popa
cmp
mov
loop
movsb
jno
xchg
lods
cltd
push
sar
push
pop
mov
xchg
push
mov
jbe
inc
and
daa
sbb
cmpsb
loopne
fstps
or
or
cmp
in
in
xor
jno
rorb
daa
aam
sti
mov
sti
and
aas
cwtl
cmp
test
pop
test
xor
push
dec
mov
imul
mov
out
cmpsl
movsl
in
loope
repnz
loop
aad
call
lds
popf
pop
cmp
shlb
mov
insb
pop
insb
jl
push
jnp
sbb
out
sub
mov
enter
aaa
loop
ds
das
push
jae
cmp
push
jns
sub
mov
cmpsb
xor
and
or
fstl
or
addl
rcrl
jo
je
mov
sub
hlt
mov
sub
mov
xchg
cli
pop
sub
or
mov
mov
or
fdiv
pop
dec
repz
cmp
cltd
int3
push
cmpsl
ret
sarl
ds
in
xchg
mov
push
mov
mov
and
sbb
jmp
movsl
lods
xchg
pop
adc
setge
dec
sbb
add
mov
scas
sti
mov
mov
mov
pop
aaa
mov
adc
jecxz
jmp
pusha
repz
or
popa
loop
and
cld
add
aad
sub
and
mov
cmpl
int3
ret
mov
aas
mov
mov
stc
sub
mov
pop
add
cwtl
in
xchg
das
std
or
cltd
mov
ss
sub
cmp
push
xchg
stc
lret
les
jg
icebp
insl
gs
mov
dec
flds
lea
sti
cmp
pop
sbbl
out
pop
mov
ficomps
pushf
xor
movsl
mov
bound
lret
add
popw
mov
and
test
jmp
sbb
xchg
push
mov
sbbl
sub
mov
adc
pop
repz
ret
cwtl
das
cmpl
sub
insl
push
cs
xor
xchg
sbb
pop
adc
pop
mov
push
popa
testb
test
scas
push
dec
sbb
imul
ss
xor
loop
dec
shl
loopne
xchg
mov
sbb
cltd
outsb
das
paddusb
inc
jbe
popf
mov
mov
cld
repz
test
cmp
repz
cmp
xchg
aad
mov
and
sub
xor
or
and
out
xchg
add
adc
push
or
cmp
stos
mov
xor
sbb
inc
push
dec
push
rorl
xchg
movsl
mov
int
lods
inc
or
xchg
dec
xchg
mov
jle
std
fdivrl
ds
out
mov
push
pop
std
repz
sbb
repnz
js
daa
popa
push
orb
jmp
cli
loope
lods
repz
fsubr
and
in
mov
push
and
mov
in
sbb
mov
test
xor
adc
shr
or
es
adc
sbb
sbb
and
pop
bound
push
insb
jecxz
dec
sbb
cmp
xor
mov
cld
inc
lods
cltd
mov
cmp
int
idivl
std
iret
cmpsl
add
call
mov
cmp
mov
sar
pop
or
xor
daa
sti
mov
fimuls
inc
push
cltd
stc
mov
mov
lods
inc
cmp
sub
or
add
sbb
mov
xchg
cltd
xor
xchg
mov
push
popa
sub
movsb
jecxz
and
cmp
push
das
stos
enter
popa
mov
stos
sub
and
cmp
mov
adc
mov
sbb
in
and
cltd
inc
rcrb
mov
push
sub
bound
push
inc
mov
jmp
xchg
push
lds
outsl
xor
or
jne
pop
inc
out
int3
sahf
testl
sti
and
addb
lods
sbb
lcall
push
mov
arpl
mov
inc
mov
imul
and
xor
loope
cltd
mov
pop
sbb
sub
sbb
dec
mov
hlt
loop
aaa
cmpsb
cmp
popa
ficoml
and
out
sti
xor
sahf
test
mov
in
in
ds
test
in
lods
cmp
xchg
cmc
add
pop
rcrb
mov
xchg
in
loop
pop
xchg
les
mov
xchg
push
sti
jne
mov
push
out
das
jo
rorl
jo
sete
pop
int
scas
das
or
or
adc
std
sub
popa
mov
cmpb
clc
inc
sbb
shrb
and
mov
inc
cmc
stc
idivl
popf
push
sub
push
cmp
lcall
push
cbtw
call
pop
push
rcl
sti
lea
ja
push
inc
xor
push
icebp
sbb
xchg
mov
stos
sahf
adc
push
adc
adc
push
mov
hlt
into
je
dec
ficoml
mov
add
pushf
dec
and
and
leave
in
and
repnz
ss
adc
mov
loop
test
int3
out
jae
add
es
scas
sub
aad
adc
xchg
mov
cmp
xor
sub
fwait
mov
adc
stos
sub
and
and
pop
in
mov
cwtl
movl
insl
or
jne
dec
or
fsts
pop
notb
mov
es
adc
add
adc
pushf
ljmpw
xchg
shl
xchg
xchg
imul
daa
test
aas
xchg
xor
jbe
divl
mov
fwait
jb
sbb
sahf
or
mov
sahf
adc
or
inc
pusha
iret
dec
stos
stc
jnp
loop
xchg
int
fdivrl
mov
or
add
sbb
mov
add
in
fnstenv
aaa
enter
pop
adc
inc
or
add
sbb
add
idiv
shll
cs
in
xor
andl
mov
mov
ficomps
xor
mov
pop
test
push
loop
pop
aad
lret
cmpsl
lds
aad
and
push
lcall
imul
mov
and
jbe
xchg
rolb
push
adc
or
jnp
dec
adc
adc
jp
sti
push
mov
pop
adc
pushf
in
cmc
add
outsl
mov
adc
loope
inc
arpl
push
jo
and
push
jno
adc
lea
xchg
rorl
push
adc
xor
cltd
je
adc
adc
stc
pop
push
pushf
lret
loop
and
sub
mov
sahf
stos
mov
push
xor
push
shlb
push
mov
push
addl
xor
cmp
inc
push
xchg
dec
mov
add
xchg
call
and
mov
in
pop
jno
in
fstpt
outsl
jns
mov
inc
leave
adc
mov
add
add
pop
jmp
push
pop
sub
add
sub
or
pop
adc
repnz
cmp
push
sub
mov
xchg
sbb
pop
mov
and
cmpl
loop
arpl
fisttpll
scas
dec
test
cwtl
push
lret
sbb
clc
sub
inc
jg
xor
orl
fucomip
cltd
mov
loope
ret
adc
mov
lods
jae
es
shlb
mov
and
jne
mov
imul
adc
fnstsw
lret
mov
jno
sbb
mov
push
add
adc
int3
cmp
push
imul
dec
xor
popa
pop
jle
pop
cmp
cmp
pop
or
pop
jp
stc
cmc
addb
leave
mov
outsb
fsubrl
pop
mov
cld
in
dec
and
outsl
mov
lahf
push
sub
mov
int
fwait
sbb
sub
dec
sbb
popa
cwtl
cltd
mov
xor
into
sub
and
pushf
jno
mov
push
out
fwait
mov
mov
pop
adc
push
sbb
popa
mov
mov
or
rcrl
popf
imul
mov
xor
sbb
and
sub
in
inc
mul
push
rcrl
mov
cmp
leave
es
popf
push
repnz
les
dec
jmp
lcall
cmp
jno
lret
repnz
add
fwait
xor
lods
pop
movsb
push
popa
mov
sti
notb
xor
mov
into
bound
xchg
movsl
cmp
xchg
repnz
push
xchg
jmp
jp
aaa
cli
mov
sub
sbb
xchg
out
push
sti
sbb
std
pop
sub
icebp
mov
ja
lods
mov
mov
xor
dec
rolb
mov
and
mov
repz
mov
sub
xchg
pop
cmp
xor
imul
icebp
sbb
scas
es
cmpsl
test
scas
pop
dec
jnp
xor
mov
and
xchg
mov
cmpsb
popa
loope
leave
pop
sbb
and
inc
add
xor
scas
pop
lods
push
jb
pop
insl
mov
adcl
orl
dec
test
xor
ss
rorb
xchg
sbb
aad
add
sub
mov
or
rorb
cli
ja
adc
jo
add
mov
lods
out
sbbl
push
cmpsl
icebp
pop
pop
imul
sar
cmpsb
cltd
sub
pushf
inc
int3
add
inc
push
sbbl
aaa
and
xor
mov
xor
and
mov
cmp
mov
inc
dec
mov
push
daa
test
xchg
mov
sub
adc
loop
jg
push
fs
sub
or
inc
shll
jl
add
lcall
mov
bound
inc
ret
daa
hlt
clc
dec
jnp
sbb
push
sahf
pop
or
cmp
xchg
stc
cld
cltd
jb
jae
lods
xchg
sub
fs
xchg
imul
mov
mov
shll
push
jae
or
and
xor
push
jb
dec
cmc
or
push
xchg
adc
adc
push
mov
add
and
add
scas
xchg
and
jg
and
sbb
sub
mov
cmp
inc
orl
divl
xor
sub
insb
lahf
movsl
cmc
int
pop
xor
das
jo
test
and
test
xchg
adc
jno
loope
push
in
in
adc
and
cmp
cmpsl
in
ds
and
add
loop
xor
fldcw
jl
xor
icebp
rorl
jae
push
or
andb
stos
in
stos
cmp
lds
scas
xor
xchg
and
push
imul
sub
push
mov
jle
icebp
fists
inc
push
cmp
hlt
xor
mov
enter
faddl
test
mov
repnz
dec
push
mov
out
adc
mov
mov
dec
add
ds
pop
jns
mov
sub
sub
sar
xor
les
ret
adc
aaa
or
pop
mov
mov
add
cmp
in
push
and
in
es
mov
les
xchg
call
dec
adc
jle
mov
mov
iret
pop
inc
push
fnstcw
out
es
fldl
pop
xor
push
or
jmp
cmp
int3
fidivl
pop
mov
xchg
mov
orl
arpl
addr16
into
mov
inc
mov
adc
mov
sbb
or
mov
std
mov
xchg
pop
xchg
call
mov
test
std
ret
lock
mov
sub
aad
cmp
xchg
shll
pop
outsb
pop
aas
cmp
lds
shll
xchg
mov
xor
adcb
xchg
adc
dec
div
arpl
out
xchg
push
inc
xor
ja
pop
xor
jg
cwtl
mov
adc
cmpsl
or
push
xchg
mov
inc
sub
lahf
sbb
add
mov
leave
inc
adc
push
adc
xchg
mov
jno
test
sti
push
stos
sti
and
xchg
test
add
push
mov
inc
popa
pop
je
shrl
xor
arpl
int3
shrl
lahf
rcrb
loopne
mov
je
xchg
push
lret
push
pop
fdivl
sti
enter
jecxz
jnp
cltd
push
mov
fwait
addl
repnz
popf
xor
and
mov
adc
cmp
xchg
shlb
sub
adc
cmp
cmpsb
std
push
or
out
nop
aas
or
dec
mov
jnp
and
mov
jae
lods
les
pop
repz
xchg
mov
or
and
push
ficoms
test
nop
add
xor
test
aad
push
ss
lock
les
pushf
push
jp
scas
movsl
jge
je
jmp
mov
sbb
xor
insl
cli
sub
and
incb
add
fiadds
add
mov
inc
mov
pop
mov
sub
or
jl
outsl
mov
pop
sahf
pushf
inc
pop
leave
add
nop
xchg
pop
addl
loope
push
movsb
pop
and
cltd
inc
or
iret
and
xchg
and
mov
add
pop
dec
lret
pop
adc
adc
les
or
fucomp
pop
data16
xchg
dec
inc
lods
popf
mov
test
sbb
xchg
test
das
jecxz
in
sub
add
leave
andb
mov
push
je
test
pop
or
pop
inc
xor
inc
mov
loop
mov
je
dec
xchg
and
in
push
outsb
mov
push
and
inc
adc
cltd
jne
addr16
xchg
in
out
xor
shlb
xchg
adc
aas
mov
ljmp
jge
ds
popa
iret
adc
mov
loope
loope
sti
and
shrl
popa
stc
out
loop
inc
xor
addr16
test
push
xchg
cmp
cmpsl
add
mov
int
and
imul
ljmp
mov
mov
loop
ret
cld
cmp
add
xor
sbbl
daa
sti
cmp
shr
mov
clc
loop
xchg
jp
sbb
dec
pop
insl
sbb
dec
adcl
sahf
mov
insl
jae
ljmp
test
test
mov
adc
inc
xor
lock
js
sub
push
inc
sbb
stc
jl
outsl
add
sahf
push
mov
xchg
cltd
pop
fsubrl
jmp
loop
fcompl
dec
add
cmp
fstpt
xchg
pop
call
loop
xor
ss
call
rolb
pop
loope
pushf
add
mov
and
push
and
adc
jmp
dec
or
js
das
jmp
sub
leave
or
das
cs
cmpsl
outsl
rorb
pop
cmp
xchg
sub
mov
xor
or
stos
popf
mov
or
cwtl
mov
lods
in
mov
cs
lret
out
cwtl
jnp
jne
addr16
pop
inc
xchg
adc
nop
insl
sbb
ret
cmc
pop
mov
sbb
jne
sbb
mov
push
and
sbbb
mov
outsb
fsts
inc
cmp
pushf
mov
mov
mov
cwtl
in
jecxz
andl
imul
cmp
cltd
aaa
jl
cs
mov
xchg
mov
pop
and
mov
in
arpl
out
dec
or
rcll
cmpsb
stc
inc
xchg
addr16
and
iret
mov
mov
cli
outsb
sub
stos
dec
adc
adc
and
mov
sub
or
pushf
or
add
mov
loop
rorb
es
pop
sbb
xchg
sub
fwait
lds
push
inc
nop
add
nop
mov
sbb
xchg
stos
enter
fists
xor
push
xor
test
adc
push
loope
popa
insb
xor
sbb
push
push
jae
add
data16
int3
mov
mov
inc
rcl
arpl
xchg
add
sbb
das
mov
push
mov
sub
xor
push
cmpsl
push
popa
xor
mov
int
sbb
lods
push
sbb
add
inc
pop
int3
in
mov
lret
test
mov
jmp
sub
inc
aas
mov
aam
push
mov
pushf
lret
repz
int3
dec
nop
bound
outsb
adc
jns
mov
ja
sub
sub
pop
dec
xchg
in
sbbl
sub
fcompl
pushf
push
push
and
xchg
rclb
xchg
dec
sti
daa
cmpb
call
into
daa
adc
adc
cltd
lea
adc
stc
and
call
fcmovbe
adc
call
sub
xor
or
sbb
adc
or
shl
ja
ud1
cmp
cmp
fsts
mov
idiv
andl
inc
mov
push
sub
mov
pusha
dec
mov
fnstenv
inc
fldl
call
adc
sub
or
mov
das
sub
xor
xchg
scas
inc
popa
pop
movsl
sti
clc
call
ret
mov
or
xchg
lret
push
lahf
push
aaa
cli
add
insl
or
jae
in
mov
dec
cltd
mov
jae
dec
leave
setnp
mov
fwait
cmp
add
nop
add
xchg
dec
jmp
loop
test
arpl
jl
in
and
test
sub
sarl
icebp
sahf
mov
jns
nop
dec
lret
loop
ret
aam
sub
dec
push
fstps
cmp
or
push
sahf
push
fwait
shlb
pushf
dec
sahf
stc
and
jmp
add
mov
xor
xor
inc
incb
mov
inc
popf
sbb
js
mov
pusha
iret
icebp
rcrl
mov
fstpl
pop
sbb
lcall
lds
dec
out
mov
clc
pop
std
add
loop
mov
mov
mov
mov
pop
mov
add
adc
ljmp
mov
in
or
data16
adc
mov
adc
mov
or
mov
xor
popf
fcmovnbe
loop
mov
loopne
and
insb
in
xchg
add
aad
xor
addb
jl
mov
popf
clc
push
cmpsb
xchg
cmp
out
xor
out
mov
cli
mov
add
jb
loop
cltd
xorb
mov
mov
jno
adc
leave
pop
mov
jbe
pop
decb
inc
cmp
push
dec
ss
jae
mov
sub
fnstsw
ret
ljmp
stos
shl
jae
mov
mov
mov
sub
xlat
or
dec
add
mov
ljmp
fsubr
movlps
push
imul
bound
pop
and
fcmovnb
das
outsl
lret
cwtl
rsm
aad
imul
shll
pushf
sub
xlat
and
inc
cmp
lods
sti
cmpsl
repnz
sbbb
or
jecxz
or
rcrl
xor
aaa
mov
xor
adc
xchg
popf
cltd
ss
xchg
in
mov
push
jge
sbb
enter
in
mov
jns
and
add
push
iret
stc
adc
popa
repnz
repnz
ss
mov
imul
cwtl
movsl
pop
decb
xor
fwait
repnz
push
mov
and
popf
mov
cmp
inc
ds
shll
nop
inc
gs
ja
es
xchg
mov
push
cmp
adc
ss
or
andl
or
xchg
std
jae
pushf
dec
and
xchg
call
xchg
bnd
inc
lcall
fwait
iret
jae
inc
mov
xchg
and
sub
std
test
jg
int3
jnp
cmpxchg
mov
pop
cmp
cmp
call
inc
push
mov
loop
cmp
lret
pop
mov
inc
dec
cli
push
mov
mov
cmp
lds
mov
push
mov
push
jmp
xor
in
and
and
daa
vandnps
je
ds
arpl
xor
fstpt
das
sti
mov
push
addb
gs
jg
popf
xor
mov
push
movsb
mov
sahf
scas
add
fldenv
inc
mov
mov
mov
filds
ja
mov
sub
mov
movsb
pop
call
es
push
mov
jae
push
xchg
shrb
cmp
pop
and
inc
ljmp
cmp
pop
popa
shlb
mov
and
fisubs
fdivl
arpl
jne
pop
xchg
repz
xor
inc
subl
test
mov
das
rcrl
int3
mov
dec
cltd
and
negb
and
mov
sub
xor
lods
ds
mov
push
mov
aad
adc
lcall
sub
aad
xchg
jmp
inc
push
mov
stos
and
mov
sbbl
add
mov
sbb
adc
dec
mov
or
cmp
cmp
daa
fstpt
jae
cmp
subl
cmp
cmpsl
sbb
das
shl
xchg
push
mov
dec
push
and
lock
ret
lret
aas
mov
ret
and
iret
fldenv
mov
shrl
sub
imul
fidivrs
mov
loope
cs
mov
jne
fbstp
sbb
cltd
mov
sbb
jne
and
inc
test
in
xor
sub
and
lock
std
in
outsb
cmp
stos
insl
jno
fldl
nop
jne
jge
xorl
ja
sbb
test
or
and
test
mov
jp
pop
xchg
pop
iret
shlb
xor
mov
lret
rcl
sti
fcoml
cltd
mov
rcr
loop
cmp
lods
lcallw
adc
inc
xor
mov
mov
jne
dec
sub
add
out
aas
enter
or
hlt
stos
pop
popa
adc
js
pop
je
rorl
fimull
dec
iret
xor
mov
xchg
inc
or
scas
out
loop
fisttps
aaa
push
sbb
xchg
imul
inc
rorl
cli
movsb
jno
cmp
or
imul
jno
aam
inc
pop
movsb
sbbb
or
pop
ja
push
shrl
out
cld
lea
pushf
insb
xor
int3
cmp
mov
sahf
scas
pusha
pop
lods
jmp
mov
shl
jb
pushf
jo
call
inc
xchg
arpl
sbb
push
jp
bound
loope
xchg
sbb
dec
dec
daa
pop
outsl
dec
mov
and
push
jno
loope
inc
xor
and
ja
outsl
jns
clc
stc
in
daa
popa
bound
sbb
repz
push
insb
and
lods
mov
jg
xchg
jmp
sub
sahf
rclb
cmc
mov
jmp
out
pop
pop
arpl
test
cmp
fdivrl
jo
stc
push
xor
addr16
sahf
or
push
push
or
mov
mov
xchg
cmp
jnp
mov
dec
mov
sub
mov
sbb
lds
xor
outsl
arpl
push
scas
mov
mov
cld
xor
dec
shl
jb
mov
or
fstps
add
or
scas
sub
sbbb
imul
fdivrs
xchg
js
inc
push
pop
test
mov
fnstenv
jmp
pop
stc
push
rcrl
ljmp
jp
or
lahf
xor
test
pusha
or
xchg
pusha
mov
dec
movsl
mov
outsb
ficoml
xchg
xchg
movsb
in
cmp
stos
and
and
xor
fcmovu
push
pop
and
es
lret
and
xor
mov
imul
xor
cmp
stc
dec
repz
aas
cli
cmpb
jmp
cmp
imul
test
mov
sbb
mov
jbe
sti
sub
jg
cltd
xlat
push
jg
add
inc
fnstcw
clc
push
and
mov
cmp
scas
mov
insl
arpl
das
sbb
jp
or
stc
ror
xchg
or
pop
fbstp
dec
push
inc
mov
and
pop
or
add
sub
cmp
sbb
mov
sbb
jmp
aad
dec
cmpb
or
popf
dec
shr
lret
sub
insl
jbe
sub
jae
rclb
mov
stos
lods
jb
mov
and
mov
mov
or
push
xor
movsl
int3
sbb
outsb
sub
sub
mov
lea
inc
fs
pop
cmp
sub
push
popa
jae
ret
aad
in
xchg
adc
jno
sub
adc
fs
jl
ja
or
inc
pop
outsl
push
test
pop
repnz
cltd
jp
cvtdq2ps
pusha
push
es
lcall
xchg
mov
cmpsl
in
lahf
and
jb
fcompl
mov
adc
mov
mov
clc
xor
cmp
hlt
sbb
sbb
xchg
stos
popf
inc
dec
icebp
pop
dec
lret
adc
sahf
lahf
adc
sti
mov
cld
stc
jge
push
inc
insl
push
les
in
or
push
adc
sub
mov
sub
mov
mov
daa
mov
xor
in
pop
dec
lods
nop
ret
sbb
imul
mov
sahf
aaa
sub
and
mov
mov
movsl
stos
cli
data16
imul
popf
pop
cmp
xor
and
xchg
and
push
iret
cltd
cmp
xor
sub
dec
pop
and
test
adc
or
xchg
add
sarl
add
sub
cld
cs
cmpsl
aaa
prefetch
movsl
nop
mov
push
mov
mov
xchg
pop
loop
and
xchg
cmp
push
iret
pop
leave
in
lea
daa
lcall
je
adc
cmp
cmp
das
sub
cmp
pop
adc
xor
pop
xchg
sti
int
ljmp
dec
and
push
popa
or
test
sbb
mov
pop
mov
or
inc
add
cltd
sub
mov
sbb
jnp
shlb
inc
mov
icebp
mov
sti
insl
and
les
sub
pop
sbbl
add
jg
test
shrl
in
divl
testb
sub
mov
aaa
pop
jbe
xor
pop
sti
vmread
sbb
inc
xor
push
jecxz
jno
and
in
add
loopne
out
into
insl
and
cmp
adc
jae
fsubrl
sub
mov
dec
lret
arpl
dec
jle
xlat
sub
pop
lock
popa
cmpsl
mov
jl
mov
push
daa
lcall
sub
repz
movsl
pusha
mov
sbb
imul
inc
ja
jno
ja
push
cmp
psrad
lea
lret
mov
mov
push
ss
and
mov
and
jp
and
popa
fimuls
fstpt
es
dec
pop
or
pop
or
mov
and
cs
inc
or
in
scas
lcall
xchg
arpl
popa
push
add
inc
mov
ficomps
push
xchg
adc
mov
dec
or
and
or
sbb
call
std
cmp
call
rcll
lods
jns
cwtl
xchg
add
in
or
cmp
hlt
stos
mov
mov
stc
sbb
push
inc
data16
or
mov
xchg
shrl
popa
scas
lea
mov
lods
lds
insb
or
xorl
mov
outsb
loop
and
inc
jmp
inc
add
movups
push
push
xor
inc
orl
sti
movsl
add
xor
sti
adc
cmpl
or
mov
call
add
add
cmp
adc
and
loop
mov
and
orb
add
fwait
imul
imul
fiadds
fs
adc
dec
xor
dec
push
lcall
mov
data16
jb
stos
test
and
sub
and
add
inc
shrl
jne
xchg
inc
mov
xor
mov
jo
adc
sub
mov
aas
mov
push
lcall
jns
and
cvttps2pi
cmp
push
shrl
ja
adc
sbb
mov
add
outsl
add
adc
adc
orl
add
inc
cmc
push
xorl
jno
icebp
dec
shr
pop
inc
lea
xchg
int
pop
call
ret
cmp
movsl
inc
jno
mov
mov
aas
xchg
test
adc
or
jno
xor
xchg
popa
fiaddl
mov
test
add
adc
mov
lret
out
push
and
ja
lahf
repnz
mov
inc
push
fisubrl
xor
and
add
daa
sti
mov
inc
movsl
cmpl
adc
xchg
sbb
sahf
out
add
cld
sti
mov
add
out
adc
and
lods
mov
add
cli
pop
test
push
out
dec
jbe
cld
xor
aas
and
and
ret
negb
sub
hlt
addr16
iret
pop
xchg
cmc
push
inc
add
mov
mov
xor
ds
lock
mov
pop
adc
cld
fwait
or
or
cmpsb
es
jne
lret
mov
mov
mov
pushf
xlat
stc
jnp
cmp
lock
jle
lods
sbb
and
xor
jo
test
xchg
mov
mov
sahf
pusha
imul
or
scas
cwtl
add
lcall
add
sbb
lea
or
inc
fldcw
inc
pop
pop
pop
push
sbb
push
push
insl
sub
roll
mov
adc
mov
xor
mov
fldenv
call
sbb
std
nop
xchg
scas
inc
movsb
pushl
push
cmp
int
dec
loop
hlt
adcb
mov
or
dec
push
iret
pop
rcl
cmp
or
xor
or
mov
and
sbb
mov
int
mov
aaa
xor
push
sbbl
cwtl
nop
inc
int3
cmpb
push
aad
and
ret
and
loop
mov
das
rolb
fsts
stos
sub
add
mov
fistpll
lea
std
inc
mov
inc
sub
cmp
mov
cmp
les
addr16
mov
cmp
push
gs
mov
popf
xor
cli
gs
sub
fdivr
xchg
mov
mov
lock
and
loopne
insb
int
mov
sahf
pop
sahf
jmp
aam
stc
icebp
mov
push
movsb
xchg
push
bnd
push
and
test
aad
inc
loop
push
sub
mov
dec
xor
inc
mov
shlb
add
xchg
mov
cmpsl
ret
test
das
shl
daa
push
xchg
cmp
jecxz
loop
pop
jge
mov
clc
scas
bound
adc
sub
pusha
push
sub
ljmp
sbb
scas
cmpb
mov
adc
sub
sbb
xchg
stc
dec
and
shl
jge
sub
mov
xor
call
xor
add
ljmp
mov
jb
ja
movsl
inc
test
inc
cli
sbb
sti
and
jecxz
inc
mov
dec
out
inc
xor
xchg
aad
pusha
outsl
pushf
call
xchg
fidivrs
mov
xchg
and
addr16
xor
test
shl
pop
call
inc
ja
push
ljmp
jmp
pop
inc
ret
add
mov
ret
or
dec
fidivs
mov
lds
stc
test
addr16
mov
xor
push
lock
dec
push
pop
subl
jmp
or
outsl
or
ljmp
frstor
sbb
pop
cwtl
mov
and
in
bound
sti
sbb
or
push
push
stos
cmp
and
xchg
test
sbb
roll
sub
shrl
ror
xchg
icebp
loopne
mov
aaa
test
xchg
xchg
lcall
scas
mov
jno
lahf
addr16
push
in
push
xor
push
xorl
xchg
nop
mov
xchg
adc
pop
jb
xchg
bound
ret
fnstsw
out
add
cmpsb
sbb
push
imul
xchg
xchg
lock
mov
dec
pop
add
leave
clc
loop
scas
arpl
pushf
stc
inc
mov
jbe
pop
cmp
popa
call
iret
or
xor
pop
sbb
or
lahf
dec
and
fstpl
xchg
mov
enter
icebp
sbb
push
dec
fnstsw
adc
sub
mov
push
sbb
sbb
adc
int
nop
adc
sbb
jno
jl
cmp
loop
xor
sti
arpl
add
inc
cmp
sub
xor
insb
cli
outsl
and
lahf
sbb
mov
std
das
leave
sub
out
das
and
test
lahf
xchg
xor
mov
pop
mov
popa
and
lahf
add
xor
inc
cld
int3
sahf
cmc
or
rorb
data16
ret
pop
sbb
xchg
call
adc
and
addr16
xor
mov
sub
call
push
or
fbld
lret
push
jle
mov
xchg
mul
pop
cmp
sbb
repnz
inc
test
test
adc
sahf
arpl
mov
mov
and
sbb
movhps
popa
dec
push
mov
push
cmp
xchg
xchg
rcl
hlt
icebp
out
and
push
or
xor
shll
hlt
adc
clc
shlb
dec
fmull
inc
lds
shll
jae
cmp
out
in
mov
sahf
add
sub
aam
adc
mov
sti
xchg
inc
negl
cmc
jg
aas
popa
and
aad
fdivl
rcl
pop
pop
sbb
adc
popf
add
jae
lods
gs
sbb
sub
adc
dec
sti
cmp
xor
pop
jecxz
lahf
adc
push
sti
es
movl
repz
xchg
test
sahf
pop
xor
aaa
mov
ficoms
push
out
pop
fwait
daa
sub
or
adc
and
daa
add
scas
sbb
iret
dec
add
push
sbb
add
xlat
es
test
inc
jecxz
insl
jnp
pop
pop
icebp
pop
pushf
sub
and
scas
ret
dec
sbb
leave
cmp
fnsave
jecxz
fnsave
jle
sbb
imul
sbb
icebp
xor
add
fldenv
das
lock
xor
aaa
das
and
lds
push
sti
mov
pop
mov
loop
pop
add
xchg
push
pusha
daa
movd
lea
mov
xchg
xchg
mov
movsb
rolb
mov
js
icebp
pop
mov
inc
lret
inc
dec
aaa
xor
std
pop
push
mov
rcl
mov
gs
bound
cmp
pop
add
pop
ja
sti
xchg
and
mov
pushf
popf
es
daa
xchg
les
lods
jmp
stc
sbb
arpl
iret
mov
fsubs
inc
adc
sub
loop
or
cmpl
icebp
mov
mov
xchg
in
in
adc
jns
push
mov
add
mov
lret
fbstp
loop
sbb
adc
push
mov
iret
inc
lds
cmp
sbb
dec
inc
push
cmpsl
test
hlt
movsb
into
xor
loop
jo
mov
icebp
adc
xor
dec
and
pop
cwtl
and
sahf
test
sub
das
mov
daa
dec
iret
out
cmpsl
and
push
movsb
shlb
into
shlb
icebp
stos
mov
inc
adc
adc
popa
xor
jno
xchg
jns
cmp
adcl
cltd
ds
test
push
iret
adc
mov
push
push
stc
inc
test
aas
xchg
jo
clc
je
dec
xchg
out
sbb
loopne
shrb
xchg
loope
icebp
in
stc
fnstenv
and
scas
jb
add
in
test
shlb
jmp
es
xor
cltd
xor
mov
mov
add
and
bound
inc
sub
xchg
xor
mov
outsl
sbb
and
and
sub
jo
aaa
sbb
xor
subl
sub
or
cmp
lahf
mov
fsubrs
cli
lods
jns
cltd
mov
cmove
je
mov
and
mov
arpl
adc
out
daa
in
cmpsb
inc
out
in
pop
dec
cwtl
fidivrs
jg
and
popa
sbb
add
sbb
mov
movsl
sbb
xchg
nop
adc
stos
cmp
dec
shll
mov
lock
es
lods
mov
sbb
and
sub
cmp
leave
sub
gs
xchg
cmp
stos
cmp
subb
fistl
rcrl
xchg
cmpsl
push
insb
add
iret
lods
addb
jne
push
push
je
mov
pop
cmp
mov
aaa
gs
ljmp
pop
jnp
mov
xor
jl
xor
sbb
sub
push
aaa
ljmp
cmp
mov
sub
mov
ja
cmp
xor
loope
mov
cltd
xchg
adc
xchg
xor
out
sbb
pop
idivl
pop
adc
mov
inc
fwait
xchg
sub
pop
mov
loope
push
push
loop
mov
ja
lds
push
mov
das
jns
and
pop
add
sub
adc
inc
sub
xor
mov
push
mov
jmp
mov
dec
stos
flds
ds
mov
push
mov
sub
xchg
xchg
jns
inc
push
jecxz
dec
mov
fistl
jp
out
movsb
loopne
fldenv
aaa
push
ja
addr16
mov
jae
mull
xchg
inc
and
arpl
or
sarb
fldenv
jmp
adc
push
std
push
jmp
mov
push
cwtl
aam
adc
inc
xchg
jecxz
sub
jno
test
adc
sti
sahf
push
adc
popf
inc
and
inc
mov
lods
mov
int3
inc
ljmp
pop
cld
adc
add
xchg
outsb
repz
inc
xor
add
ds
imul
mov
ss
in
test
inc
xor
jb
push
fnstenv
stos
lods
and
sahf
imul
xchg
mov
sbb
fistl
push
inc
xchg
sti
cmc
pusha
inc
sti
pop
and
add
jmp
mov
daa
mov
dec
cmpsl
jo
stc
mov
jle
out
and
dec
xchg
or
shll
cmp
inc
pop
sti
xor
jmp
dec
cmc
aad
jns
and
mov
mov
push
mov
sub
bound
sub
inc
sbb
and
dec
jl
iret
and
inc
popa
cwtl
jb
mov
lods
je
ljmp
mov
cmp
int3
sbb
sub
adc
adc
jne
mov
cltd
insl
cmp
jbe
jno
inc
fwait
sbb
cmc
jp
iret
popa
cld
cmp
lret
adc
xor
mov
adc
ds
mov
fs
xchg
sbb
push
xor
push
dec
jae
stc
pop
pop
test
or
in
popf
push
jnp
inc
imul
xor
cmpb
cltd
mov
cmpsl
cmpsl
jmp
inc
adc
leave
fwait
xchg
arpl
sub
lock
push
or
push
or
sti
aas
or
cld
mov
jno
inc
stc
jnp
orl
sbbb
xor
ds
inc
aad
mov
mov
or
inc
jle
mov
fstpt
lods
fnstcw
inc
mov
idivl
push
sub
arpl
xchg
adc
cld
imul
call
mov
int3
push
mov
mov
cmp
pop
xor
pop
sub
adc
std
pusha
xor
sbb
inc
test
cmp
and
jge
lret
add
aas
xor
fcmovbe
aas
adc
sbb
inc
ret
and
mov
push
add
or
movsb
or
sub
mov
sbb
xchg
sbb
es
mov
cwtl
dec
ljmp
addr16
mov
bound
rol
sti
iret
sti
dec
cmp
movsb
in
shll
lahf
sbb
dec
xchg
pop
repnz
scas
sbb
adc
adc
mov
mov
fldenv
xor
mov
and
enter
and
jbe
pop
mov
add
jmp
jb
xor
jae
mov
fwait
shll
push
fcoml
push
mov
sub
xor
ret
jl
sbb
jne
push
and
add
xchg
xchg
repnz
xorb
outsb
movsb
add
xor
fwait
sbb
nop
mov
xor
es
imull
mov
add
or
push
inc
fimuls
fidivrl
mov
and
daa
sub
movsb
in
cli
inc
je
cmpsb
push
aam
mov
inc
mov
es
jbe
lahf
daa
xchg
mov
mov
adc
sbb
push
mov
call
and
jp
loop
lahf
sub
dec
and
jg
ret
cltd
lods
pop
aas
fwait
xchg
sti
pop
shlb
jge
mov
jg
sub
and
test
shl
jno
jbe
adc
xor
in
dec
push
xchg
out
push
sbb
fsubl
insb
jne
push
add
test
adc
ficomps
daa
repnz
mov
sti
lock
jae
clc
repz
mov
add
lea
lret
pop
mov
mov
and
fwait
test
push
imul
inc
cmpl
and
pop
inc
fistps
dec
mov
scas
std
pop
inc
add
icebp
daa
in
mov
and
jle
aam
neg
iret
pop
jns
lea
jne
and
pop
mov
mov
or
xchg
push
sub
pop
or
cwtl
add
jns
mov
mov
adc
mov
xchg
adc
push
sahf
mov
xchg
andl
sbb
push
insb
iret
pop
mov
push
jp
adc
inc
or
std
pop
ficoml
push
add
sbb
out
jmp
ljmp
imul
ds
lods
xchg
pop
xchg
mov
push
xlat
cmp
mov
fisubl
cmpsl
jl
adc
jbe
cltd
das
popa
or
and
pop
mov
mov
xchg
mov
and
std
jp
mov
sti
sub
pop
les
loope
fwait
and
mov
orl
es
xchg
sbb
rol
popf
bound
sub
test
iret
loope
sti
insl
inc
xor
mov
daa
jecxz
pop
loop
mov
jb
add
mov
fsub
sbb
cwtl
test
sub
sub
leave
lods
ret
and
xor
jmp
ret
cltd
push
sub
or
repz
or
adc
push
mov
dec
stc
mov
inc
xchg
outsb
mov
jno
adc
imul
das
notl
out
out
sti
cmc
cmp
pop
cmpsl
shll
push
or
call
push
mov
std
jecxz
dec
into
jl
sbb
addl
cmp
and
pop
mov
jno
mov
jae
loop
jbe
rclb
loopne
and
mov
xchg
mov
xor
addr16
fcmovnu
xchg
mov
jbe
cmp
sbb
mov
mov
lcall
mov
or
fiaddl
xor
xchg
sbb
leave
outsl
jg
jnp
pop
mov
popa
sub
mov
and
int
jne
mov
cmpsl
fistpl
mov
cli
sbb
xor
inc
das
sbb
sbb
fs
mov
test
mov
aam
sub
xchg
mov
sti
mov
or
push
sub
sbb
dec
outsb
push
repnz
cmp
les
movhps
dec
inc
inc
ret
addr16
xchg
rcrl
lret
sub
or
pushw
inc
scas
mov
inc
mov
movsl
xchg
inc
jp
shrb
data16
int
push
adc
mov
outsb
or
adc
mov
int
mov
pushf
sbb
xchg
or
mov
jne
sbb
xor
subb
sbbl
cltd
mov
pop
push
cmp
test
pop
sbb
xchg
mov
popf
and
imul
push
sub
out
pop
mul
xlat
mov
push
dec
scas
fdivr
sbb
fsincos
inc
mov
cmp
andl
push
push
into
leave
jbe
add
add
push
mov
sbb
inc
shlb
cmp
mov
adc
push
xchg
cwtl
mov
es
or
test
mov
adc
mov
jae
dec
sbb
mov
mov
adc
aam
in
rcll
jnp
mov
mov
jl
aas
out
inc
jbe
notl
xor
pop
fsubs
lds
mull
cld
lock
sub
iret
add
adc
sahf
pop
repnz
mov
or
stc
pop
adc
call
pop
fldcw
popa
sub
sbb
cld
addr16
or
movsl
lods
sbb
and
add
stc
pop
orb
and
jbe
mov
jo
push
xchg
adc
fistps
xchg
inc
es
popf
subl
test
lret
adc
sarl
mov
bound
cmp
pop
inc
ret
fldt
inc
rcl
jl
mov
and
orl
xor
inc
xor
mov
lock
out
sub
out
fwait
out
pop
sti
out
std
xchg
cmp
inc
addps
dec
call
add
mov
mov
xor
int3
fwait
out
xor
fildl
ds
repnz
ss
lds
scas
sub
mov
xchg
mov
fadds
lcall
jne
scas
pop
pop
cmp
xlat
xchg
jne
cmc
inc
lods
int3
xor
addr16
sbb
cmpsb
sbb
and
lods
adc
out
imul
fs
stc
jo
mov
jnp
dec
ljmp
repnz
rcrl
xchg
inc
or
in
pop
std
dec
push
int3
add
inc
jl
push
arpl
sti
fcoml
out
xor
test
les
xor
pop
std
mov
addr16
add
cwtl
adc
mov
jbe
loop
sub
push
movsb
popl
test
fsts
xchg
mov
adc
out
mov
decb
scas
int3
add
mov
xchg
push
lock
leave
dec
outsl
mov
subl
clc
mov
or
stc
pop
xchg
inc
mov
sbb
cmpsb
divb
nop
int
sub
mov
loop
test
mov
cmpsl
or
sbb
subl
push
and
rclb
xchg
stc
cmp
xor
pusha
clc
lods
cmp
popf
stos
mov
push
js
jmp
jne
addr16
xor
aam
shlb
out
leave
ret
dec
ja
loop
out
subl
loopne
add
xchg
es
test
in
dec
lcall
rolb
cmpsb
xchg
mov
repz
stc
ret
inc
sub
sbb
mov
pop
add
outsb
push
adc
cmpsl
ljmp
jg
cmp
sbb
negl
jecxz
lods
mov
shll
jbe
xor
adc
addr16
lock
icebp
lahf
or
xchg
ds
test
mov
loop
and
movsb
cmp
fs
mov
xor
pop
pop
pop
mov
cmp
jmp
in
cmp
cmp
adc
test
add
pop
mov
adc
test
jne
mov
stos
inc
inc
inc
insb
lds
int
insl
push
test
daa
dec
xchg
xorl
xor
cmpsb
mov
pop
ss
add
mov
sub
andl
push
stos
mov
fnsave
mov
rcrb
ret
add
out
push
xor
fcmovu
xchg
aaa
sub
mov
inc
mov
stc
cmc
popf
popa
mov
mov
xor
mov
adc
jle
mov
xchg
mov
cltd
stc
add
stos
push
jne
mov
push
in
in
adc
lods
adc
mov
movsb
push
sbb
fnstenv
sbb
mov
scas
jbe
sbb
dec
or
xchg
xchg
in
cs
push
jg
insb
cltd
adc
add
test
mov
cmp
test
enter
ss
mov
and
inc
cmp
ss
sbb
sahf
sub
jbe
popa
repz
jecxz
es
push
aas
dec
xorb
jo
mov
loop
subb
sub
mov
jns
mov
xchg
cmp
jb
mov
imul
repnz
pop
loop
int3
subl
sbb
mov
xchg
mov
or
or
mov
lret
pop
cmp
pop
pop
outsb
popa
mov
dec
push
incb
repz
mov
xchg
push
inc
in
dec
sbb
out
sbb
cmp
xchg
sbb
in
xor
inc
dec
loop
mov
sbb
pushf
leave
sbb
xor
jbe
int3
repnz
icebp
lret
iret
or
test
pop
xchg
push
mov
aam
lods
pop
lcall
push
cltd
inc
daa
in
push
or
inc
pop
das
data16
cltd
adc
push
in
fiadds
mov
js
ljmp
sbb
mov
push
jnp
frstor
movsb
outsl
adc
andl
lcall
pop
pop
sti
jbe
shlb
loop
xchg
clc
orb
xchg
orb
cmpsl
add
fwait
gs
adc
es
jecxz
sub
popa
mov
sbb
push
inc
gs
mov
lret
lret
aas
pop
adc
xchg
test
popa
adc
cmp
fnstcw
test
outsl
popa
int3
clc
std
push
mov
cmp
sbb
lock
jno
xchg
popf
adc
in
loope
adc
inc
add
divb
pop
loop
push
mov
or
inc
inc
xor
mov
insb
sbb
stos
out
lock
gs
shlb
stc
mov
imul
int
xor
adc
cmc
mov
test
lods
leave
or
icebp
add
push
add
aaa
jg
ret
movsl
dec
movb
push
mov
sub
cmp
mov
mov
add
iret
xchg
sti
cmp
inc
fld
cltd
push
imul
rol
and
loop
adc
push
scas
mov
arpl
iret
cmp
popf
sbb
mov
sub
mov
jl
jb
cli
scas
push
add
and
pop
cwtl
push
cmp
in
out
cld
pop
addr16
movsb
dec
pop
pop
jmp
aas
xchg
rclb
adc
push
lea
adc
mov
and
xchg
and
stos
fwait
mov
fidivrs
push
jge
xor
aas
mov
or
mov
fsubrl
push
xchg
pop
ret
fcomps
loop
cltd
out
adc
push
mov
push
mov
pop
add
pop
xchg
push
js
pop
fcoml
or
gs
pop
and
mov
mov
sub
sub
sar
in
jns
cltd
xor
test
orb
push
mov
call
lret
push
fs
adc
fisubs
rep
pop
les
mov
mov
aad
add
or
xor
jl
adcb
int
or
addr16
pop
cwtl
mov
stos
or
sbb
xchg
test
fdivp
pop
xchg
test
push
mov
xor
jns
pop
int3
stos
sub
fnsave
xor
or
pushf
adc
sbb
mov
sub
xchg
loop
cld
pop
out
jne
dec
lret
mov
scas
cmc
xchg
xchg
push
mov
pop
retw
jmp
xchg
or
sbb
movl
push
ja
cmp
jne
mov
xchg
hlt
mov
adc
add
testl
lcall
testl
cli
xor
and
mov
or
xchg
inc
mov
les
cwtl
xor
cwtl
daa
in
insb
cmp
outsb
and
add
xor
sbb
and
call
xor
or
mov
and
pop
add
push
rorb
cmp
and
inc
cmpsl
repnz
push
sbb
mov
in
outsb
xchg
inc
mov
pop
clc
pop
clc
cli
fs
repnz
mov
inc
jl
jae
add
test
xor
push
sbb
xor
stos
adc
jo
jl
int
xor
hlt
pop
sub
sbb
mov
xchg
mov
cmp
and
in
adc
jno
mov
pop
push
mov
mov
mov
dec
inc
sbb
test
test
aaa
mov
lahf
aad
xlat
xorb
push
out
cmp
in
aas
jbe
mov
xchg
dec
pop
push
xchg
int
inc
inc
xchg
add
xchg
pop
sbb
or
fucomp
sub
mov
push
sbb
xchg
push
sub
or
mov
stc
pop
data16
mov
mov
aas
divl
sbb
add
or
imul
xchg
push
stc
push
sub
popa
jmp
xchg
inc
inc
jp
pop
sarl
cmpsb
test
lock
pop
lods
cmp
mov
mull
imul
sub
or
sub
pcmpeqd
mov
xorl
or
or
shl
inc
adc
lods
cmpsb
in
cmp
pop
imul
repnz
xor
push
sbb
stos
mov
or
xchg
or
inc
xor
xor
cmpsl
psllw
or
cmp
insb
cmpsl
and
sbbl
stos
and
sbb
jg
cmpsl
cmp
cmp
cwtl
mov
add
or
frstor
pop
imul
mov
mov
mov
mov
mov
cmp
nop
push
mov
xor
sub
loop
pop
cmp
pop
xor
pusha
sbb
mov
outsb
icebp
and
sbb
shll
xchg
mov
push
cmp
xchg
pand
push
jae
decl
sbb
lcall
in
and
aaa
movl
xor
popa
aam
mov
dec
cmpsb
adc
adc
inc
xor
lds
cmpsb
inc
push
cmp
stos
or
imul
rorl
scas
ret
xor
lcall
sti
stos
jno
loop
dec
jne
mov
shrl
jb
sarl
or
jno
imul
andb
int
lret
and
sti
jmp
sub
mov
mov
ficoml
insl
xor
movlhps
stc
xor
fistpl
and
inc
dec
xchg
int
pop
jmp
add
iret
mov
push
stos
push
push
pushl
loop
lahf
inc
test
int3
pop
dec
xor
add
xchg
inc
cld
sbb
cwtl
imul
xor
cmp
out
or
das
push
push
inc
jns
mov
stos
dec
xor
xchg
test
and
scas
hlt
jmp
adc
mov
popa
fisubl
in
je
arpl
insb
pushf
pop
and
jp
inc
mov
inc
push
fmull
adc
mov
pop
mov
mov
push
pop
xor
mov
inc
gs
push
inc
inc
mov
test
popf
ss
xchg
icebp
fs
btr
fists
and
and
dec
mov
test
adc
or
xor
lcall
aam
faddl
xor
test
out
lret
ja
and
negl
sbbl
push
int
into
ss
stos
cld
add
pop
push
test
mov
out
adc
mov
sbb
sbb
montmul
cmpsb
ret
psubw
add
push
mov
jnp
icebp
pop
lock
mov
rol
icebp
int
mov
pusha
mulb
je
jecxz
sbb
mov
push
mov
fsubs
pop
test
xchg
jg
mov
cmp
mov
cmp
inc
push
xor
mov
push
and
repnz
xor
inc
xchg
sub
cltd
mov
push
pslld
push
pop
mul
or
sbb
fcomi
push
add
push
fisttpll
ss
xor
add
xor
inc
xor
or
jo
cltd
gs
cmp
sbb
mov
in
pop
movsb
mov
fcmovu
psrad
fists
jb
out
dec
adc
xor
loop
sbb
and
add
dec
addr16
imul
ret
sti
jo
mov
add
popl
inc
imul
xlat
pop
ds
mov
mov
fnstenv
sub
sub
psllq
lods
cli
jl
sahf
test
and
add
sub
mov
out
cltd
pop
push
ret
mov
outsl
fdivl
out
lret
mov
cmp
add
push
inc
dec
addr16
fsubr
push
loope
push
adc
adc
cmp
push
fbld
lods
xchg
push
dec
iret
clc
call
loop
fiaddl
lcall
mov
data16
sub
add
bound
mov
scas
add
jb
mov
cmp
adc
sub
mov
lcall
out
std
and
xchg
and
shlb
dec
aaa
int
daa
and
shrl
inc
scas
lahf
mov
adc
loop
mov
stos
push
mov
add
loop
push
adc
addb
out
sbb
ljmp
inc
and
sbb
sbb
les
inc
pusha
ss
inc
push
gs
jne
mov
dec
aas
clc
jnp
mov
inc
sti
dec
cli
outsb
mov
pop
sbb
lahf
cwtl
leave
push
mov
test
rolb
xchg
fnstcw
cs
push
int3
aad
rolb
popf
popf
frstor
and
inc
sub
call
fwait
and
sub
cs
mov
xchg
xchg
push
ljmp
insb
sbb
mov
test
pop
clc
sbb
pop
dec
lock
xor
mov
pop
in
sub
stos
sbb
loope
xor
aaa
movsl
outsb
test
jmp
pop
lea
mov
fcoms
push
aas
lcall
call
and
adc
loop
std
sbb
xchg
test
jae
sub
sti
cmp
loop
jae
sub
stc
jne
dec
mov
push
xchg
xor
mov
mov
fwait
bound
das
push
loop
xor
shrb
mov
cmp
and
cmp
dec
mov
cmp
xchg
daa
loop
inc
or
sbb
cmp
popa
mov
stc
push
inc
sub
and
icebp
popa
scas
rclb
fnclex
leave
push
cmp
shl
cmp
dec
ret
pop
loop
inc
dec
and
adc
int
xor
es
xor
mov
rclb
in
jo
cmp
subb
sarl
xchg
sub
push
jne
sbb
mov
sub
or
mov
stc
jns
and
fdiv
mov
cmc
mov
cmc
mov
idivl
cmc
mov
idivl
idivl
idivl
idivl
idivl
sbb
push
push
xor
icebp
mov
fincstp
inc
jns
push
loop
and
push
loop
mov
jns
and
popa
idivl
repz
repz
repz
repz
push
mov
cmp
int
rorl
movsl
popa
inc
adc
lcall
or
xchg
int
imul
mov
push
push
sbb
imul
xchg
cmp
pop
push
dec
icebp
sub
sbb
and
sbb
and
adc
cs
pop
xor
std
add
xor
sti
push
cmc
jecxz
xor
sti
adc
adc
stos
xor
in
bound
pop
sub
mov
xor
mov
jb
mov
jb
mov
adc
xor
lds
lahf
add
lods
gs
icebp
mov
xor
movsl
xor
gs
loop
mov
lcall
xchg
and
xor
xchg
out
add
jb
mov
inc
shll
xor
shll
fwait
out
insl
in
xor
pop
sbb
xor
sti
nop
lcall
push
push
fidivs
mov
ret
adc
lcall
lock
and
jno
sbb
xor
leave
lods
stc
and
rolb
dec
sbbl
adc
std
mov
icebp
and
nop
cmp
push
shll
dec
xchg
mov
sub
pop
xor
push
lock
mov
mov
or
cmp
bt
pop
shl
aaa
ds
xchg
push
sahf
ret
ds
push
mov
mov
xor
pushf
push
xor
push
push
sub
inc
das
sbb
mov
push
daa
mov
nop
mov
sub
mov
add
inc
sub
ret
inc
adc
aas
lahf
inc
loope
in
stc
or
fbstp
fnstsw
or
out
xchg
ret
int3
push
cmpb
add
lret
stc
cltd
mov
push
fdivrs
pop
cmp
imul
inc
or
sti
pop
push
add
ss
stc
sbb
leave
fistl
aaa
push
mov
fsubl
pop
jbe
mov
dec
gs
push
mov
es
xor
xchg
call
fldcw
inc
leave
and
push
in
adc
popf
icebp
sbb
sbb
movsb
ljmp
cmp
rcll
into
push
mov
cltd
stos
jne
sti
pop
add
mov
mov
popf
sarl
mov
dec
add
loope
jns
cwtl
iret
adc
pop
sub
push
pop
jp
xchg
sbb
or
dec
loop
call
ret
mov
iret
icebp
pop
fwait
popa
sub
and
and
or
insl
inc
xor
jmp
cmpsl
imul
inc
pop
mov
repnz
lds
add
test
inc
add
je
mov
pusha
jecxz
mov
dec
xor
hlt
in
sbb
sbb
pop
popa
cmp
cmp
sub
cmpl
xor
and
ds
mov
lods
aam
or
jecxz
pushl
dec
add
push
loopne
mov
jnp
fidivl
xchg
sub
repnz
inc
loop
pop
jmp
add
psubq
repz
aad
mov
fsts
jne
leave
sarb
inc
inc
add
pusha
jmp
mov
xchg
lahf
cmp
jecxz
loopw
add
xor
sbb
add
adc
jns
icebp
adc
push
clc
mov
pop
adc
daa
jo
mov
fdivr
out
mov
xor
daa
and
pop
scas
orb
jp
lods
or
arpl
inc
cmp
cmpsl
fistl
adc
xor
xchg
roll
invd
in
mov
jne
sub
sahf
add
adc
xchg
cs
xchg
xor
fsubr
mov
add
mov
nop
and
push
lahf
gs
xchg
mov
mov
push
push
xchg
aad
cmp
sbb
xchg
jnp
cmp
add
jp
push
jbe
jno
iret
xor
fsubrl
mov
xor
out
or
pushf
xchg
adc
cmpsb
add
mov
inc
jns
movsb
mov
movsb
lods
das
lahf
pushf
push
sub
lcall
mov
sti
std
inc
dec
dec
mov
push
fstl
mov
jne
fsubl
repnz
push
dec
cmp
out
cmp
or
jmp
sbb
and
add
popa
mov
stc
push
rclb
dec
sbbl
ret
jp
sbb
addr16
aas
andl
out
jbe
rorl
mov
cs
sub
sti
pop
repz
pop
loope
push
aas
mov
adc
aam
mov
sbb
xchg
rolb
iret
sbb
movl
fadds
ret
mov
sub
mov
and
xchg
and
out
iret
cmp
mov
sub
icebp
jmp
lcall
ss
int3
mov
popa
movsl
ds
jne
sub
jmp
xor
lods
jmp
ljmp
aaa
cmpl
sbb
ss
push
mov
push
imul
xorl
popa
movsl
leave
pushf
les
decl
leave
or
shlb
jnp
and
lcall
xor
inc
movl
iret
mov
mov
in
popl
inc
push
xor
or
mov
cmp
cmp
dec
repnz
and
or
mov
adc
idivl
jg
call
mov
lds
mov
outsb
cmpsl
pop
mov
mov
cld
xor
cmpsb
test
movsb
stc
cmp
mov
dec
inc
mov
lret
addl
aam
inc
add
inc
jne
xor
hlt
bound
dec
sbb
jb
cmp
addl
repz
cmp
mov
es
xchg
pop
mov
or
adc
stc
pop
and
sub
clc
outsl
cli
mov
pushf
sbb
adc
jg
out
popf
or
sbb
and
sti
dec
arpl
jmp
push
test
push
mov
hlt
adc
pop
push
jae
sub
jecxz
cld
stc
sbb
fwait
popf
jmp
out
clc
and
movsb
pop
xchg
and
add
inc
mov
idiv
push
sub
cmp
adc
sbb
lret
push
push
sbb
shll
loopne
xchg
lret
mov
aad
ja
fdivrl
sub
mov
mov
adc
sub
mov
push
inc
into
inc
out
or
xchg
fsubrs
dec
mov
or
mov
adc
incb
subb
repnz
sub
xor
cmp
adc
mov
sbb
loop
sub
and
mov
imul
xchg
adc
pop
xchg
sbb
jns
cmp
xchg
cmp
es
push
mov
int
mov
pop
sti
cmp
xchg
pop
xor
and
inc
cwtl
pop
or
cmp
call
sub
and
sbb
inc
mov
mov
add
and
sahf
nop
in
fists
xchg
mov
and
add
lods
insl
scas
loopne
mov
pushf
popf
sub
fadds
test
mov
jne
xor
fnstenv
dec
rclb
mov
loopne
jns
icebp
push
adcl
lahf
add
arpl
lods
clc
xchg
pop
mov
movsl
xchg
adc
stos
cmp
add
and
test
lret
popf
rorl
leave
dec
mov
add
sbb
mov
push
inc
sbb
ja
and
mov
xchg
add
xchg
jl
out
and
popa
inc
sub
mov
pushf
negl
je
cwtl
out
xor
test
pop
cmp
jno
loop
clc
lcall
subl
stc
jo
aaa
leave
cmp
dec
data16
xor
pop
jbe
je
adcl
adc
fnstcw
adc
adc
xor
gs
shll
cmp
cmp
xor
sub
sub
xor
cli
lds
sbb
inc
lcall
nop
xchg
imul
mov
cmp
repnz
lods
decl
fisttpll
dec
adc
sti
sub
pop
roll
push
adc
pshufw
sub
inc
int
mov
and
push
xchg
jb
sbb
nop
and
lret
sub
adc
mov
sti
push
inc
xchg
repnz
sub
push
push
sti
push
loop
jno
lods
or
mov
cs
je
dec
sbb
cmpsl
push
shlb
xor
and
mov
in
jnp
jbe
pop
fs
mov
pop
push
iret
iret
jns
or
push
rorb
loop
mov
outsb
mov
lea
push
add
test
dec
in
xor
sub
insb
aaa
lahf
lock
das
xor
sbb
mov
inc
xor
adc
adc
adc
cmp
adc
sbb
or
fsts
andb
sbb
and
imul
add
and
lods
in
push
dec
adc
cs
loop
sub
iret
push
xchg
mov
daa
out
sub
shrl
clc
push
lock
scas
stc
jae
mov
gs
inc
mov
test
push
xor
mov
cs
mov
les
adc
out
inc
aad
mov
fucom
sbb
aas
movsb
pushf
mov
scas
mov
sbb
jge
push
mov
sub
mov
mov
lock
push
xchg
ljmp
aad
lods
push
icebp
ja
frstor
mov
or
and
push
or
jne
lods
js
xor
cmp
sub
and
stos
std
js
sahf
jns
orl
mov
xchg
jns
bnd
cmp
cs
test
xchg
mov
stc
push
int
mov
push
and
jb
das
add
pop
lock
cmp
pop
pop
nop
and
cmp
xor
test
adc
ja
aam
stos
jne
lret
outsb
movsb
fstps
pop
lcall
adc
pop
cmpsl
cmp
loop
push
cltd
call
xor
mov
outsb
and
jno
aas
into
sub
add
in
adc
sub
and
cmc
jo
icebp
adc
cmp
ret
add
aas
pop
scas
ja
stc
inc
gs
inc
push
addr16
stos
cmp
mov
jae
mov
fisubrl
je
mov
or
pushf
lds
xor
sti
call
aaa
leave
popa
and
dec
int
jne
loope
andb
negb
lods
jmp
jns
filds
ss
push
push
lds
ja
pop
and
dec
mov
xchg
fwait
inc
sbb
add
and
sahf
test
sti
xor
or
xor
loope
mov
xchg
std
repz
sbb
xor
cmp
cmp
adc
fwait
xchg
sub
loopne
call
sti
pushf
mov
add
or
push
mov
xchg
xor
jle
popf
test
sti
jae
leave
mov
mov
sahf
cmp
lahf
aad
cmpsl
pop
scas
cmp
dec
and
mov
sub
cmp
out
mov
inc
jmp
inc
movsl
and
loop
shl
pop
xchg
iret
or
mov
ja
movsb
ss
imulb
inc
imul
lahf
scas
jbe
sbb
shlb
pop
sti
and
pop
call
pop
gs
lahf
fldl2t
mov
xor
leave
mov
or
aad
mov
adc
xlat
and
adc
sbb
cmp
divb
mov
push
xor
xchg
push
sahf
and
pushf
ja
hlt
scas
data16
or
pop
mov
stos
push
add
not
sub
add
push
in
pop
xor
or
outsl
xor
ljmp
in
sbb
mov
ljmp
mov
sbb
enter
or
imul
rorb
push
inc
sub
ret
daa
push
mov
int3
sub
cmpl
mov
pop
sub
pop
pop
out
jb
and
incl
sbb
pushf
xchg
xor
mov
cltd
ja
shlb
cmp
popa
sbb
mov
adc
stc
dec
sub
jecxz
dec
cmp
add
fcomps
in
inc
xchg
movsl
xchg
movsb
xchg
mov
mov
jl
or
cmpb
test
loop
sbb
sbb
jo
lcall
push
fildl
int
fs
icebp
sbb
insl
daa
push
and
lret
rcll
xchg
jl
mov
push
sarb
mov
into
xlat
mov
and
adc
cs
mov
inc
mov
popf
rorl
pop
jb
sbb
fmull
popl
push
pop
cmp
pop
add
or
mov
xchg
into
std
mov
int3
pop
inc
push
push
loop
jns
cmp
cmpsl
mov
pop
popf
test
stc
adc
or
and
cmp
push
loop
mov
jecxz
insb
sbb
mov
pop
divb
pop
test
sbb
xchg
data16
sub
xor
inc
push
cmp
leave
inc
mov
outsl
mov
xchg
pop
cs
mov
addb
popa
loopw
sub
push
jg
dec
movsl
push
push
push
cwtl
dec
cmp
mov
xchg
cli
and
mov
jecxz
cld
mov
dec
jno
xchg
int3
inc
jno
or
aad
in
repz
inc
ljmp
lret
inc
jno
rorl
bound
sbb
pop
pop
movl
sub
pop
cmp
mov
cs
xchg
jno
mov
xchg
jmp
and
pop
push
insl
pop
mov
cmpsl
loope
mov
cmp
and
mov
lret
adcl
lock
xor
adc
nop
push
mov
pushf
repnz
inc
data16
sub
cs
loop
insb
aam
out
push
test
adc
jo
or
lds
std
aam
je
push
shrl
enter
arpl
test
xor
push
movl
pop
aam
aas
push
adc
push
pop
cmpxchg
ror
popa
je
pop
adc
add
imul
xor
jb
bound
cmp
mov
shlb
adc
movsl
sbb
in
fisubrs
jp
lret
sbb
mov
inc
jb
mov
lods
scas
bound
mov
dec
out
cmpsl
mov
xchg
or
jne
das
push
mov
push
out
adc
add
ret
mov
xor
xchg
cmp
dec
test
setbe
and
adc
out
xchg
lods
dec
xchg
loop
lds
pop
cmp
mov
pop
fs
add
aad
dec
movsb
mov
mov
mov
mov
fabs
lea
push
inc
ret
pop
xchg
xchg
or
mov
mov
jb
shrl
test
mov
int
dec
repz
mov
fcmovu
push
inc
xor
lea
movsl
lock
add
in
pop
xor
addr16
mov
ret
fnsave
inc
add
add
push
lock
dec
mov
add
mov
or
mov
dec
es
loop
inc
lcall
xor
les
mov
sub
jge
sbb
hlt
call
sub
sbb
or
mov
and
sub
xlat
mov
pop
stos
pop
add
outsb
adc
mov
insl
idivb
pop
into
aad
cmp
int3
lods
sbb
jns
and
cmp
or
cmp
xor
imul
push
adc
je
or
mov
cmp
dec
or
mov
iret
mov
sbb
jmp
push
in
xor
loop
cmp
push
ja
mov
cmp
sbb
aad
xor
cmp
pop
test
push
mov
and
push
mov
xor
nop
mov
jp
inc
xor
out
cmpsl
fidivrl
outsb
dec
cmpsb
call
mov
lret
or
xor
imul
faddl
cmp
adc
dec
cmc
sub
add
cli
or
test
or
and
adc
lock
pop
and
ljmp
and
out
and
push
xchg
sysenter
mov
mov
cmpsb
stos
sbb
mov
out
pop
pop
mov
popa
pop
sub
jg
ljmp
arpl
fsubr
sbb
mov
pop
dec
jns
andl
dec
leave
fs
and
or
mov
inc
cmpsl
cld
and
mov
cmp
pop
outsb
xchg
lea
movb
pusha
sub
inc
mov
shlb
xorb
pop
mov
mov
lea
inc
and
notb
repz
jbe
call
mov
sbb
mov
xor
popf
pop
roll
pop
mov
pop
adc
or
cmp
jl
inc
mov
fnsave
fiadds
mov
dec
mov
xor
mov
aad
sbb
cmp
xchg
jge
and
imul
movsl
push
push
imul
inc
xor
outsb
and
sbbb
nop
jbe
mov
mov
pop
inc
loope
push
sbb
iret
inc
lcall
inc
push
dec
dec
cmp
add
push
sbb
cltd
stos
and
jmp
xor
mov
mov
sub
jmp
xor
and
or
sbb
cli
jnp
int3
xchg
leave
mov
add
ja
push
push
mov
fwait
xchg
pusha
mov
sbb
out
loop
imul
gs
mov
add
and
fldlg2
ljmp
and
int
fisubrl
add
sub
stos
pop
push
stos
les
aaa
fnstcw
cmp
cmp
sbb
jecxz
mov
lods
mov
cmp
test
mov
aad
pop
mov
add
jge
inc
xchg
cltd
fwait
xchg
add
mov
hlt
outsl
dec
mov
lret
popa
loop
inc
jmp
adc
inc
and
aas
push
mov
daa
loop
xor
fsts
pop
push
jmp
icebp
xor
or
adc
and
lcall
mov
aam
cmpsl
and
or
into
and
or
push
pop
inc
jl
push
xor
jo
outsb
insl
sti
and
iret
mov
mov
adc
xlat
outsl
inc
arpl
das
sarb
outsb
inc
daa
mov
lods
mov
std
push
xor
jae
xor
xor
jmp
or
xchg
pop
nop
xor
add
subb
xor
ja
fwait
es
notb
adcb
push
dec
arpl
outsb
lahf
mov
and
adcl
add
in
cmovno
xchg
dec
pop
dec
mov
pop
pop
inc
int3
sti
fs
push
cmp
xor
adc
loop
cmc
inc
mov
sbb
mov
mov
cmp
add
or
add
jne
sub
js
popf
mov
jmp
jg
mov
repnz
fnop
dec
ret
cmp
out
mov
mov
jp
mov
or
cmp
mov
pop
addr16
ss
hlt
imul
nop
mov
mov
jb
adc
add
or
jl
jecxz
mov
sub
or
push
das
xlat
mov
cmpsl
imul
roll
xchg
inc
test
or
jle
xchg
andl
test
fstpl
mov
ss
xchg
add
sbb
scas
pusha
mov
movsb
jg
std
mov
mov
xchg
cmpsb
lret
ret
mov
mov
mov
add
loop
imul
cmp
mov
in
adcl
sub
sbb
push
sub
out
pop
push
xor
fwait
mov
arpl
outsb
fld
push
insb
loope
and
cmpsb
test
mov
adc
loope
adc
sub
lahf
pop
psrlq
xchg
or
adc
pop
xchg
cli
pop
pusha
adc
sub
addr16
pushf
mov
inc
mov
push
push
mov
testl
ss
mov
push
adc
push
mov
addb
mov
sbb
or
and
or
push
cmp
pop
cmp
mov
push
icebp
or
je
outsb
mov
movsl
push
dec
lcall
cld
cmc
jne
xor
adc
or
and
addr16
or
loopne
and
in
test
sahf
scas
xor
cmp
in
jecxz
cmp
xchg
loop
in
jno
pop
in
cltd
out
mov
test
sub
and
add
pop
cmp
pop
sbb
shll
push
and
and
bound
mov
pop
pop
sub
jbe
and
mov
push
mov
arpl
popf
aas
xchg
xor
rorb
fisubs
push
push
sub
mov
mov
adcl
paddsw
mov
pop
addr16
cld
arpl
push
sbb
pop
sbb
addl
dec
push
cltd
jbe
lds
ljmp
fwait
and
mov
and
out
lret
hlt
add
outsl
mov
in
xor
test
into
push
das
sbb
jmp
cld
xor
and
sub
sbb
mov
adc
mov
mov
dec
pop
mov
loop
cmovne
scas
movsb
lods
mov
rolb
pusha
jp
sbb
xchg
xor
shrl
sarl
xchg
ds
xorl
call
or
rcrl
repz
sub
gs
push
push
cld
and
push
and
jne
push
jno
or
aad
fwait
test
scas
popa
dec
shll
sbb
leave
gs
gs
mov
lea
adc
and
pop
xchg
mov
mov
dec
push
cli
pop
call
arpl
popf
or
dec
push
movsl
jbe
rol
xor
sarl
push
aam
and
inc
xor
lods
stc
xchg
xchg
adc
mov
or
out
daa
xor
sti
mov
push
and
push
add
roll
jmp
and
imul
dec
or
imul
add
pusha
popf
add
loop
faddl
push
sbb
and
mov
xchg
dec
xchg
sbb
mov
and
xchg
in
xor
mov
dec
fwait
mov
inc
push
aaa
xchg
dec
scas
adcb
fldcw
cmc
cmp
pop
jl
addl
mov
push
rcll
xor
xchg
out
cmp
rorl
xchg
in
orl
pop
es
cmp
jl
flds
enter
loopne
xchg
dec
jbe
test
jp
movsl
push
cmp
dec
push
jbe
faddl
lret
insl
std
sbb
inc
adc
fistpl
ja
lock
popf
jmp
loop
push
mov
inc
fidivrs
nop
xchg
iret
out
mov
and
pop
mov
icebp
jp
lcall
lods
pop
xchg
ficompl
ficompl
pop
inc
dec
call
or
pop
xor
xchg
jl
mov
call
popa
xchg
ret
roll
jae
mov
movsl
sub
fdivl
popa
or
inc
ja
aaa
std
mov
loop
inc
dec
mov
int3
and
mov
jbe
push
addr16
aam
cmp
jmp
cli
jmp
cli
pop
insl
insb
out
rorl
aam
loop
mov
pop
mov
add
mov
lcall
stc
lods
or
scas
in
xchg
sbb
mov
or
pop
cmp
loopne
mov
push
addr16
jbe
xor
and
cmp
cmp
mov
mov
and
imul
test
mov
je
sti
sbbb
frstor
enter
mov
mov
cmp
adc
imul
adc
cmp
mov
push
xchg
mov
and
sub
xor
icebp
mov
aam
inc
fadds
shll
jns
imul
push
sahf
xchg
mov
ss
cmp
adc
icebp
and
mov
or
mov
mov
ss
cmpsl
add
sahf
jmp
shll
repnz
dec
out
mov
push
adc
call
rorb
jl
arpl
xor
mov
sub
push
push
popa
data16
xor
xchg
xlat
add
sbb
or
in
xchg
cmc
mov
push
jno
mov
cmp
test
dec
imul
or
fbstp
or
fisubrs
and
fucom
push
sahf
pop
xchg
jmp
fxch
insl
jle
jae
shr
negl
jb
cmp
cmpsb
in
outsl
mov
mov
or
cmp
mov
popf
movsb
cltd
jno
shll
sub
fxtract
repnz
mov
cmpsl
lcall
pop
stos
dec
mov
fwait
jno
and
sbb
fsubrs
faddl
mov
fldcw
mul
or
std
aaa
aad
fstps
jmp
sub
xchg
cs
or
jge
jbe
mov
sub
das
cs
aaa
movl
out
jno
sbb
jge
pop
xorb
lcall
adc
jb
arpl
mov
sbb
jne
addr16
ret
ret
adc
push
in
push
das
loop
xorb
cmp
ret
push
ss
orb
iret
dec
clc
push
popa
rcr
in
out
jbe
je
inc
sub
cmp
sbb
sub
sub
inc
popf
jns
and
cmp
out
fyl2x
filds
icebp
cmp
sub
aas
loop
cltd
stc
sbb
loop
mov
and
push
pushf
inc
loop
ss
cmc
dec
ds
adc
loop
inc
test
inc
loop
lcall
fwait
xorl
or
rol
shll
xorl
hlt
outsl
aad
xchg
pop
xchg
cmp
mov
jnp
sbb
cs
dec
jb
ds
adc
push
sbb
inc
jbe
xor
fldcw
or
lods
jo
xchg
sub
cmp
imulb
int
xchg
push
iret
pop
jle
pop
outsl
mov
cs
push
sub
aam
popa
dec
and
cmp
pop
fnstcw
ja
sbb
push
dec
mov
push
and
jle
cmp
movsb
gs
xchg
int
add
cmp
subl
adc
arpl
je
inc
or
out
hlt
mov
lret
mov
push
mov
adc
mov
fcoml
call
test
add
in
test
lods
inc
dec
ds
mov
cmpsb
inc
test
mov
xchg
add
cmp
mov
mov
int3
inc
pop
lock
mov
repz
popa
mov
test
cmpsl
inc
sub
mov
test
loop
dec
fmull
mov
mov
movsb
push
mov
loop
decb
ret
xchg
stos
outsb
cmpl
repnz
jnp
inc
mov
cmc
mov
aaa
xor
test
jno
xor
sbb
add
push
jae
mov
mov
testl
mov
jmp
sub
je
int3
inc
cmp
aad
push
or
sbb
rcrl
cld
aas
cmpsl
dec
or
push
bound
rcr
cmpsl
ret
int
mov
jg
xchg
nop
jecxz
mov
loop
inc
fstp
mov
mov
cmp
mov
sbb
popa
in
ja
sub
adc
sub
and
testl
pop
inc
mov
aad
sti
xor
and
jae
xor
cmpsb
jecxz
and
or
mov
pop
loop
push
sahf
push
xchg
loop
push
inc
shll
popf
dec
scas
push
push
push
jno
das
orb
xchg
cmpl
imul
adc
sub
fwait
outsl
repnz
xchg
xchg
test
and
dec
jns
aaa
xor
mov
pop
xchg
cmp
in
in
pop
xor
add
mov
jno
add
aas
aaa
mov
cmp
icebp
xchg
xor
jg
mov
sahf
mov
lret
les
push
out
adc
arpl
sbb
push
jp
dec
mov
mov
mov
leave
mov
push
mov
movsl
lret
push
testb
ret
stc
push
cmpsl
cli
mov
pop
sub
repz
xor
cwtl
cld
jb
loop
mov
mov
adc
lock
inc
push
lret
dec
adcb
xchg
test
clc
jbe
pop
leave
les
inc
pop
ret
pop
test
and
xlat
push
xchg
jg
pop
mov
fimull
enter
cmp
cmp
and
adc
dec
jns
outsl
sbb
insl
mov
in
leave
mov
lret
ret
push
test
inc
aad
mov
imul
and
rcrl
daa
dec
ss
js
divl
sub
or
pop
cmpsl
call
mov
sub
aaa
out
jle
jns
int
gs
cmpsb
aaa
cwtl
xchg
loopne
cli
or
adc
xor
jne
mov
pop
cmp
dec
out
aas
leave
inc
mov
cmp
xchg
inc
xchg
mov
xchg
cltd
pop
xor
jmp
mov
leave
mov
addr16
push
pop
cltd
jns
fwait
adc
xor
push
test
mov
dec
mov
roll
pop
enter
or
sbb
jb
lcall
outsb
and
and
mov
out
ja
push
outsl
add
xchg
mov
xor
mov
pop
out
sub
cmpsl
fwait
out
iret
test
ret
sar
outsb
mov
mov
and
sbb
fadds
shl
out
mov
and
leave
movsl
lds
xlat
xchg
sarb
popf
stos
inc
mov
scas
fnstenv
lcall
sbb
mov
cmp
push
mov
aaa
pop
inc
test
mov
mov
pop
loopne
stc
inc
mov
icebp
leave
mov
or
push
imul
pushf
js
loope
std
inc
cmp
icebp
testl
mov
push
lcall
xchg
dec
jns
adc
mov
add
jmp
sti
dec
mov
pop
stc
cltd
inc
xchg
test
mov
push
aas
cmp
mov
jne
add
dec
test
jecxz
jns
sbb
in
push
push
mov
aam
xchg
jo
jb,pn
sbb
dec
es
cmp
jmp
pop
fldcw
aaa
mov
cmpsb
xchg
and
mov
imul
cmp
mov
aam
movsb
or
mov
dec
cmpsb
cmp
cmp
fcom
in
daa
mov
stc
cmpsl
mov
lret
dec
jmp
ret
jb
or
scas
mov
jb
xor
and
and
jbe
ss
cmp
daa
decb
mov
adc
insl
mov
movsl
jle
mov
test
into
enter
and
sub
ss
loope
xor
sti
cs
popa
xor
iret
int
sub
imul
daa
test
or
jno
pop
jecxz
dec
mov
mov
jbe
leave
push
sub
imul
pusha
xchg
mov
jne
ljmp
iret
stos
test
push
cmp
adc
aad
mov
and
ja
mov
mov
and
insb
inc
arpl
mov
pop
scas
in
mov
out
xchg
adc
jp
rcrl
sbb
shrl
xchg
mov
sbb
daa
in
jg
xor
push
imul
mov
aaa
imul
insl
shll
arpl
xorl
das
or
or
push
mov
lods
push
flds
cmc
sbb
fbstp
jg
cmpsb
sbb
or
mov
mov
int
dec
mov
mov
cmp
xchg
loop
cmp
movsb
lret
mov
mov
mov
mov
scas
cmp
inc
and
inc
add
inc
mov
inc
inc
mov
imul
xchg
lds
sub
cld
std
sarl
lds
mov
int3
mov
pop
push
dec
and
stc
aaa
pushf
mov
mov
sbb
xchg
pop
cld
dec
mov
push
mov
mov
xor
imul
pop
push
inc
jnp
push
fistl
dec
xor
lret
jbe
rcrl
enter
push
pop
stc
insb
sti
push
out
dec
loopne
jae
xor
pop
divb
jp
cltd
mov
lods
or
xlat
add
xchg
sub
pop
rcrb
rorl
scas
sub
popa
xor
jno
loop
or
popa
ja
lea
mov
xchg
loop
call
pop
popf
inc
inc
pop
test
xor
jno
scas
sarb
imul
inc
jge
je
imulb
add
rclb
push
cmp
push
cs
cmp
ret
mov
or
aaa
xorb
repnz
addr16
xchg
stos
xchg
push
pop
cltd
ss
and
inc
inc
add
pop
or
outsl
lock
mov
negl
and
out
ss
fbld
and
inc
movsl
jne
negb
xchg
dec
mov
cmp
add
gs
daa
push
adc
fldenv
inc
sbb
mov
jmp
mov
aam
push
sbb
mov
xchg
mov
add
int3
and
mov
mov
cmp
and
sub
pop
cwtl
call
les
jns
das
int3
movsl
cmp
pushf
les
inc
push
pop
mov
loope
shll
aaa
stc
push
cmc
scas
hlt
xchg
aas
mov
jnp
adc
les
or
sub
movsb
push
rol
and
inc
pop
push
or
push
xor
xor
flds
inc
and
cmp
bound
push
mov
ret
xchg
add
jge
insb
pop
call
cmp
fdivl
nop
cli
mov
rorl
jg
mov
push
cmp
js
xchg
xchg
test
call
and
stos
and
test
popa
sub
orl
andl
cmpsb
mov
mov
fucomp
test
xlat
add
aas
push
mov
mov
sbbl
pop
in
scas
mov
in
leave
pop
inc
pop
fcomp
iret
push
repnz
jbe
test
xor
and
pop
mov
and
inc
les
or
xchg
cmp
sub
dec
dec
xchg
dec
je
push
sbb
and
mov
outsl
mov
mov
cmpsl
push
push
dec
cmp
jno
leave
lods
leave
mov
push
inc
pop
les
mov
sub
imul
adc
jno
test
movsb
or
adc
movsl
adc
mov
jnp
lods
loop
dec
lcall
lcall
xor
sbb
jmp
adc
push
jne
pop
xchg
ja
mov
sti
sub
outsb
cmp
imul
fisubrs
inc
push
fstpt
jge
sbb
loop
fisubrs
xor
add
add
push
cmp
loop
sub
mov
popa
fdivr
loop
sbb
lcall
jnp
sbb
js
push
pop
push
pop
xor
add
and
xor
jecxz
xchg
sub
mov
ljmp
mov
sahf
mov
adcb
inc
adc
sahf
xor
jp
ljmp
mov
dec
jbe
or
pop
cmp
pop
adc
sub
fildl
push
popa
fsts
fs
js
jecxz
inc
leave
xchg
loop
xchg
adc
fcmovnb
loop
lods
jle
xor
cli
mov
xor
sbb
je
std
cld
pop
or
jg
pop
call
test
pop
daa
inc
mov
fwait
push
pop
int
filds
in
xchg
sbb
cwtl
addr16
mov
out
lods
and
sbb
into
rorb
leave
sbb
mov
or
mov
add
cmp
mov
sub
scas
and
inc
adc
inc
movsb
sti
pop
or
sbb
xchg
stos
and
int
shlb
pop
jne
test
sbbl
xchg
or
pop
xor
ljmp
mov
pushf
mov
pushl
loop
mov
cltd
lret
push
sahf
ficoms
cmp
add
in
mov
fiadds
mov
sarl
sar
jmp
cmpsl
int
pop
mov
mov
mov
fisubl
cmp
xchg
jp
pop
push
nop
xchg
stos
stc
sbb
xchg
or
lods
out
sahf
jl
rcll
pop
sbb
mov
clc
mov
addb
cmp
movsl
jbe
pop
iret
mov
scas
cmp
inc
outsl
push
push
sbb
cltd
shrb
sbb
scas
sub
sbb
sbb
push
loop
sub
jno
push
pop
mov
cmp
or
cmp
pop
test
mov
jns
cmp
mov
loop
cmp
adc
mov
cwtl
mov
sub
fldenv
push
fcomi
loope
stos
test
cmpsb
jae
clc
pop
sbb
pop
mov
int3
mov
mov
imul
jno
dec
shl
test
inc
sbb
sbb
sbb
dec
xchg
in
add
stos
adc
scas
mov
sub
ja
fdivrl
dec
jl
out
sbb
pusha
fldl
adc
push
add
or
push
inc
mov
push
stc
push
dec
dec
sbb
inc
and
pop
loop
aas
sbb
sti
inc
sub
jge
push
push
leave
dec
xchg
gs
sbb
and
dec
or
pop
and
push
dec
negb
sub
mov
xchg
fldcw
and
aaa
fsubrp
push
imul
sbb
lods
push
push
xchg
xor
pop
cmp
xchg
leave
jbe
je
pop
aad
adc
mov
pop
lea
daa
nop
and
cwtl
daa
lret
pop
adc
cli
imul
and
sbb
popa
pop
cmp
into
push
push
sbb
fstpl
movsb
inc
xchg
loop
mov
mov
stc
push
data16
mov
sbb
out
sub
xor
mov
mov
int
push
scas
mov
sbb
inc
xor
cmp
shlb
jns
test
sahf
js
test
pusha
int
jno
mov
and
and
loop
scas
out
cmp
jg
dec
sbb
mov
add
inc
insl
in
fwait
jmp
mov
icebp
outsb
pop
xchg
imul
mov
mov
movb
cmpsl
leave
pusha
jbe
daa
inc
into
testb
pop
inc
mov
xchg
jne
and
or
lret
inc
add
jmp
add
push
pop
fisubrl
mov
cwtl
fwait
leave
stos
lds
mov
cmp
mov
mov
imull
mov
pop
stc
mov
loop
and
and
mov
xor
push
sub
push
and
push
jne
push
inc
cwtl
dec
sub
int3
mov
imul
movsl
sbb
xchg
lods
xchg
fists
cltd
adc
push
pop
xor
arpl
icebp
mov
and
xor
nop
mov
inc
std
int3
lods
mov
js
stc
pop
in
movl
sub
leave
stc
out
pop
jae
leave
cli
scas
or
stos
adc
inc
xor
imul
out
mov
les
stc
and
mov
leave
shll
daa
inc
sbb
movsl
pop
sub
inc
stc
jmp
data16
jmp
push
and
sub
lods
int
and
jle
and
xchg
cld
fiadds
leave
test
jle
inc
mov
test
test
outsl
or
ret
sub
popa
sar
xor
jg
jbe
les
bound
pop
mov
pushf
imul
sub
pop
push
popf
mov
jecxz
lds
sub
xor
stos
sub
jae
notb
push
leave
enter
cld
adc
dec
cmp
dec
shlb
or
insl
xchg
dec
and
push
sarb
dec
movsb
cmp
mov
mov
mov
cmp
inc
shl
mov
sti
cmp
dec
add
mov
loop
sahf
cmp
test
mov
test
push
sub
lcall
fwait
jp
imul
mov
loop
movsb
mov
shrl
in
test
pop
jne
daa
xchg
popaw
jne
or
mov
ret
mov
imul
cltd
das
cmp
xchg
sbb
aas
lods
xchg
inc
sub
mov
and
adc
mov
iret
scas
dec
cltd
dec
cmp
or
lods
cmc
mov
mov
xchg
adc
jl
loopne
push
flds
leave
stc
inc
shlb
movsl
dec
xor
jge
sbb
aas
add
stos
fcmove
mov
loop
pushf
xchg
sahf
fwait
sbb
pop
das
mov
aaa
dec
in
ljmp
ret
loop
loop
xchg
add
xchg
xchg
pop
push
push
cmp
iret
pop
and
fs
or
int3
jbe
ljmp
mov
lret
sub
repnz
call
adc
sti
pop
shll
xchg
sub
out
xor
movsb
push
add
push
and
mov
scas
adc
lods
cmp
ficompl
or
xchg
pop
cmc
mov
shll
adc
push
jmp
add
pop
xor
int3
xchg
inc
dec
mov
sbb
push
inc
mov
scas
cltd
xchg
jmp
mov
mov
test
xor
idiv
xchg
ret
push
push
xchg
mov
mov
sarl
cmpl
dec
sti
xor
mov
pop
push
sub
mov
add
sbb
imul
add
cli
dec
cltd
jno
sub
imul
inc
pop
dec
inc
ss
xlat
notb
add
mov
push
jnp
sbb
insb
fs
jg
int
mov
and
mov
dec
and
inc
xchg
add
add
test
nop
aaa
stc
fcoml
ss
addr16
ret
lcall
xchg
or
push
jle
sbb
jne
mov
sbb
jb
out
xlat
jb
sub
sbb
repnz
lds
ja
mov
dec
xor
icebp
mov
scas
xor
aaa
xchg
inc
mov
mov
mov
mov
add
sub
insl
xchg
mov
push
repz
cmpsl
clc
add
push
test
push
mov
sti
shlb
xlat
xchg
lods
push
mov
cmp
push
inc
aad
or
bound
es
lahf
rol
sbb
loop
inc
sbbl
jecxz
push
pop
mov
xlat
popf
roll
mov
push
jns
jo
sbb
clc
outsl
mov
ja
ss
repz
adc
jp
add
cwtl
sub
add
xchg
mov
pop
call
cld
lock
sub
inc
insb
mov
sbb
inc
or
xchg
shrb
cwtl
sub
and
pop
and
ds
and
xchg
pop
sbb
test
and
pop
push
mov
adc
lret
mov
xor
dec
mov
push
mov
push
insb
push
push
rcll
loop
pushf
sbb
pop
mov
pop
xchg
mov
push
sub
loop
xor
ja
rclb
stos
test
xorb
push
push
cltd
and
rolb
shlb
xchg
js
sbb
xor
cmp
iret
andb
rolb
inc
daa
mov
sub
adc
int
pop
push
jno
lcall
lcall
jle
mov
pop
dec
xchg
or
orl
xchg
push
mov
fidivrs
push
mov
cmpsl
push
jns
and
xchg
pusha
cmpsb
adc
aaa
shrb
loop
fst
insb
movsb
mov
fwait
imul
addr16
leave
ja
sbb
mov
jne
cwtl
sub
mov
or
and
lret
mov
jbe
rorl
insl
mov
cmp
or
std
out
cmp
ljmp
xchg
pop
hlt
and
pop
ja
inc
xchg
int3
and
push
adc
loop
adcb
xchg
mov
push
test
or
cmp
shl
and
loop
jo
xor
pop
xorb
call
push
or
test
adc
loop
xor
mov
movsb
ret
push
ret
icebp
pop
mov
mov
ja
fs
or
sub
lds
ret
mov
pop
popa
pop
cmpsl
pop
pop
cli
popf
das
push
loop
dec
push
mov
push
push
jg
xchg
sti
sub
out
imul
inc
sub
xchg
das
sbb
adc
popf
pop
outsl
popf
cmp
inc
dec
xchg
test
ss
dec
cmpsl
cmp
cmp
fsubs
cmp
test
and
xchg
sbb
out
mov
xor
pop
insl
fwait
mov
jne
and
mov
aad
mov
mov
pop
sbb
sub
jnp
and
psubd
xchg
aaa
aaa
sbb
ds
xor
mov
cmp
imul
aad
punpckhwd
dec
enter
dec
mov
aas
dec
hlt
sti
xor
cmpl
pop
dec
fstps
ss
mov
mov
jne
add
pop
and
jae
xchg
aaa
sbb
outsl
icebp
inc
aam
xchg
jbe
and
jne
mov
dec
scas
arpl
mov
and
jbe
pop
dec
push
sub
sbbb
push
xchg
cmpsl
mov
call
xchg
xor
and
xchg
stc
cmp
dec
pop
ret
popf
sti
jb
xchg
sbb
mov
pop
ja
cld
ja
sub
popa
test
test
shrb
mov
ljmp
jbe
and
xchg
mov
nop
and
push
cmp
subb
sbb
cmp
xchg
jns
roll
xor
inc
xor
cmp
dec
mov
sbb
sbb
js
add
and
jno
fwait
test
mov
movsl
aad
cmp
jns
les
push
push
xchg
test
jne
add
xchg
imul
xchg
cltd
bound
jbe
fwait
movsl
jns
int3
lahf
mov
xor
loope
cmpsl
hlt
fcoml
mov
lahf
call
ret
out
lock
roll
leave
mov
sarl
loop
jle
leave
test
stc
test
fildl
mov
push
jmp
mov
lcall
fimuls
gs
xorb
mov
leave
cmc
aaa
mov
push
lcall
out
ja
imul
cmp
or
dec
popl
cmpsl
addr16
sub
jl
mov
dec
test
mov
xchg
mov
dec
popa
and
mov
sbb
outsb
add
mov
iret
mov
lret
sbb
xor
mov
out
sbb
mov
fcomps
dec
daa
in
js
jp
xchg
xor
mov
sub
push
icebp
inc
movsl
or
je
sub
mov
cltd
lret
mov
jne
mov
iret
pop
or
dec
push
add
push
stos
movsl
push
push
and
popa
addr16
test
sub
mov
aam
sbb
in
movsbl
push
mov
pushl
es
sbb
xor
mov
and
test
lret
mov
lret
mov
stos
lods
sbb
fisubrs
jns
mov
dec
fiaddl
ss
addr16
mov
or
lock
pop
clc
and
or
cmc
rcll
iret
sub
out
lcall
or
dec
mov
inc
sbb
sbb
xor
ret
and
xor
cmp
and
leave
std
jecxz
les
je
cmp
lods
scas
aam
sbb
add
rcrl
mov
mov
xor
out
in
pop
xor
mov
mov
mov
dec
push
push
call
jle
mov
dec
sub
and
push
shlb
test
sbb
jns
loop
cld
insb
mov
outsb
pop
xchg
mov
mov
mov
out
imul
shrb
mov
jb
push
mov
mov
loope
mulb
xchg
adc
popa
adc
sbbb
adc
loop
xchg
stc
leave
loope
lods
cmp
jmp
arpl
xchg
push
cltd
xchg
xchg
movsl
mov
popf
pop
shrl
cwtl
and
add
stc
fcos
fwait
icebp
jb
xlat
mov
fs
es
imul
jb
loope
outsb
mov
imul
das
mov
sub
les
aas
push
push
mov
add
push
loope
xchg
stc
stc
sub
into
fnstenv
in
sbb
cld
or
mov
inc
pop
dec
test
lcall
push
or
daa
lcall
les
push
divl
xor
and
jmp
xchg
adc
pushf
sub
jno
jmp
test
mov
pop
xor
mov
sbb
push
push
inc
jno
sarb
mov
call
or
jp
cwtl
mov
add
arpl
arpl
add
sub
push
and
xorl
sub
add
lods
jo
cltd
mov
inc
dec
xchg
mov
mov
cmpsb
or
mov
push
cmp
xchg
inc
push
cmpl
outsl
sub
jl
jg
or
xchg
inc
adc
jmp
jge
in
cs
shll
jp
in
loopne
imul
mov
xchg
in
pop
call
cmp
cs
cmp
add
mov
inc
fildl
punpckhdq
or
incb
mov
cmpb
inc
push
insl
aaa
sub
sbb
shrl
pusha
sbb
adc
and
stos
sbb
sbb
inc
inc
mov
enter
pop
jne
es
icebp
pop
loopne
repz
cltd
icebp
pop
fcoml
mov
pop
popf
pop
sarl
adc
jp
mov
inc
xchg
xor
fcomps
push
jp
push
mov
daa
test
mov
lods
aaa
mov
lods
repz
or
dec
aam
cld
and
add
pop
jns
lock
and
movsl
popf
popa
shll
jmp
sahf
sub
loop
aad
push
adc
add
ret
rcrl
add
aad
in
mov
mov
fwait
out
inc
outsl
cltd
lods
push
and
mov
lcall
cmpsl
aaa
push
sti
add
inc
sub
iret
popf
cmp
popf
mov
xor
js
leave
sbb
add
roll
mov
pop
mov
sahf
imul
kmovb
in
xorl
mov
xchg
sti
add
addr16
rorb
popa
fdivrs
out
ds
inc
out
repnz
das
lret
mov
sbb
dec
popf
icebp
cmp
push
dec
rclb
mov
dec
fisttps
xor
ret
jmp
jno
clc
cmp
mov
lods
cmp
dec
insl
popf
dec
inc
push
cmp
dec
cmpb
jmp
push
sti
lcall
icebp
jl
pop
mov
stos
pop
mov
popf
bnd
push
std
loopne
pop
cmp
fidivrs
clc
fistpl
adc
or
mov
aaa
add
aas
daa
hlt
stc
int3
pop
and
dec
inc
push
push
sub
or
push
mov
dec
jne
call
aad
mov
push
fsubrl
jge
adc
cmp
stc
jg
iret
inc
sub
sbb
lret
mov
xchg
mov
mov
push
cltd
in
pusha
push
imul
stc
dec
xor
sub
js
dec
cmp
fisttps
inc
neg
arpl
movsl
hlt
rol
xor
call
and
insb
or
pop
jno
xchg
adc
push
xor
inc
and
ret
sbb
xorl
aad
mov
es
inc
call
cltd
mov
cmpsl
std
add
push
fs
aad
shrl
and
fcomps
fmull
pop
inc
jae
fldcw
or
orb
mov
movsl
mov
fwait
call
push
scas
dec
scas
mov
fadd
jnp
jno
loop
xchg
popa
imul
adc
cli
imul
icebp
adc
sbb
daa
push
adc
pop
fiadds
mov
cmp
lcall
jle
ja
jne
and
add
int
fwait
stc
inc
cmovae
insb
inc
stc
imul
sahf
call
popa
ret
scas
sbb
add
xchg
inc
jmp
cmp
movsb
mov
push
jbe
or
jo
fbstp
sbb
in
pop
cld
nop
mov
or
inc
pop
adc
xor
adc
lcall
lea
lods
inc
icebp
in
push
lret
scas
lea
sahf
cmp
pop
cs
dec
imul
in
xor
mov
and
loop
into
insl
mov
lea
xchg
sbb
and
mov
stc
jns
sbb
inc
pop
sti
sarl
cmpsb
jno
mov
dec
jb
inc
inc
insl
mov
lahf
xor
pop
cmp
jbe
addr16
ret
xchg
xor
xchg
push
fcoms
sbb
cmp
jp
fcoms
cltd
jl
out
movsb
test
pop
cmpsl
add
arpl
sub
pop
mov
test
or
adc
call
push
ret
inc
std
xchg
stos
fwait
add
lcall
fisttpll
aaa
mov
lret
data16
sub
mov
fwait
cmp
jg
xorb
inc
adc
inc
jo
jbe
aad
jp
test
shrb
lock
rclb
and
bound
mov
fwait
iret
push
xchg
or
shl
rorb
pusha
clc
mov
jne
stos
xchg
inc
sarb
and
pop
in
jno
outsb
data16
jmp
dec
inc
or
gs
cmp
add
sbb
les
inc
divb
inc
adc
mov
loope
aaa
loop
push
mov
mov
xchg
adc
fsubrs
pop
lahf
or
pop
dec
cwtl
outsl
add
sbb
loop
dec
mov
sbb
sbb
mov
loop
push
sbb
decb
sahf
movsb
xor
mov
cmpsl
repz
test
cmpl
dec
outsb
data16
push
bound
aas
loope
sbb
pop
adc
int3
xor
mov
xor
mov
add
repnz
outsl
mov
cmp
or
gs
lea
xor
mov
aaa
hlt
das
push
cli
mov
or
add
pop
push
mov
aam
xchg
sti
inc
and
xchg
and
jns
sub
inc
pop
sbb
xchg
xor
ret
fwait
arpl
insl
loope
nopl
inc
jno
lock
cmp
mov
aaa
sub
add
cmpsl
sti
ljmp
cmpsb
popa
lods
lods
mov
pop
xchg
hlt
xchg
add
shr
cmp
inc
aam
mov
sbb
xor
mov
mov
into
das
lock
xchg
xchg
arpl
xchg
mov
xor
daa
cltd
push
popa
loop
int
mov
dec
and
dec
dec
in
pop
mov
push
orb
xchg
jb
xchg
mov
insl
pop
jb
mov
ja
cmc
dec
in
sbb
jp
mov
test
ret
adc
dec
mov
dec
pop
cmpsb
test
popl
xor
std
adc
bound
push
into
pop
ja
pop
test
lret
cmp
jle
push
andl
rcll
popf
fildll
bound
in
adc
mov
or
or
xchg
mov
and
mov
xchg
adc
mov
testb
mov
jp
and
xchg
cmpsl
pusha
inc
sub
iret
sti
and
sub
call
xor
test
push
cmc
faddl
ret
movsb
push
inc
or
shlb
imul
scas
mov
shr
xor
xchg
mov
mov
ss
dec
mov
inc
lds
and
jnp
sarb
jbe
cmp
push
pusha
or
les
cmovno
or
fwait
cwtl
dec
std
jb
lret
popf
repz
push
jp
js
mov
ja
popa
sti
clc
add
mov
in
mov
fdiv
mov
scas
cltd
pop
ja
pop
sbb
stos
mov
jecxz
mov
clc
dec
rcrb
mov
mov
popa
enter
jns
push
mov
pop
popa
in
mov
mov
insl
test
pop
and
push
xor
in
movsl
aas
pop
ret
cmc
mov
mov
movsl
jmp
pop
pusha
cmpsl
outsl
pop
inc
mov
pop
pop
ds
cld
or
pushf
xor
cmp
adc
pusha
mov
out
icebp
or
mov
shlb
iret
rorb
lcall
sbb
andb
mov
xchg
movsb
cmp
icebp
cmp
mov
fs
and
sbb
sbb
xchg
stc
mov
iret
pop
cmp
xchg
cmp
inc
lods
add
dec
das
adc
pusha
rorb
jae
jp
scas
cmpsb
and
xchg
call
movsb
mov
xchg
les
arpl
out
push
les
pop
jecxz
out
iret
mov
aam
je,pt
and
mov
outsl
push
cmp
aaa
lock
icebp
mov
jle
cli
and
push
pmullw
pop
ds
xchg
out
inc
scas
push
cmp
and
push
xchg
adc
imul
pop
mov
dec
loopne
inc
stc
jge
repz
loop
push
cmp
xor
nop
popf
enter
inc
mov
mov
in
and
mov
push
xchg
add
pusha
loope
sti
lods
out
xchg
adc
pop
mov
sbb
bound
xchg
mov
jmp
inc
mov
jl
adc
mov
and
pop
pop
add
and
add
and
sti
fisttpl
push
mov
iret
sub
pop
mov
xlat
js
out
out
mov
std
nop
fisubl
sbb
dec
xlat
daa
test
dec
cmp
push
sub
mov
xor
dec
xor
xor
inc
jle
insb
insl
jle
xchg
xchg
mov
movsl
cmc
add
sahf
imul
or
adc
lds
aaa
rorl
xchg
mov
xor
pop
jae
pop
cmp
and
jnp
repnz
xchg
fcoms
aaa
in
mov
mov
xor
dec
scas
pop
cmp
mov
jb
inc
mov
sahf
int
jp
push
dec
jge
mov
and
adc
or
mov
adc
popa
je
mov
cmp
inc
rclb
call
xchg
lods
xor
adc
and
jecxz
cli
pushf
popa
push
xor
and
xor
in
in
or
cmp
jno
movsl
rorb
add
lcall
push
movsl
stos
cmp
iret
popa
push
shll
loop
rolb
enter
gs
and
or
cmp
sbbl
in
daa
loop
dec
dec
jae
nop
adc
mov
sub
cmp
sbb
repnz
cld
arpl
das
fmull
addr16
pop
popa
xor
test
mov
xor
sti
push
push
subb
mov
inc
cmp
add
repnz
pop
int
cmp
stc
inc
gs
add
xorl
dec
mov
popa
mov
jecxz
cmp
and
pop
push
xchg
in
test
add
add
gs
inc
pop
or
shrb
mov
jp
mov
pop
sbb
cltd
mov
mov
sbb
popf
cli
and
dec
sbb
jne
xor
mov
nop
add
add
dec
mov
jns
jbe
daa
cmpsb
inc
fs
out
or
push
loop
lods
ljmp
cmp
ret
pop
pushf
mov
cli
adc
pusha
fucom
aas
adc
nop
sub
push
les
loop
push
addr16
popa
gs
push
mov
mov
push
ljmp
out
ss
push
dec
sbb
xchg
pop
mov
inc
jecxz
and
fwait
addl
addr16
hlt
mov
pop
inc
inc
mov
mov
sub
mov
fists
lahf
cltd
push
adc
mov
andl
jae
mov
cmpsb
push
inc
mov
xor
and
repz
inc
push
xchg
repz
repnz
fiaddl
adc
fwait
xchg
cmp
iret
mov
fidivs
or
sbb
rol
push
xor
sub
fs
loop
adc
out
push
inc
add
or
iret
inc
pop
lods
int
lea
push
push
mov
and
push
sub
mov
addl
cmpsb
sahf
aas
xchg
adc
int
leave
jno
adc
mov
lock
andl
cltd
inc
dec
lea
or
rcrl
xchg
lret
jnp
dec
rclb
adc
inc
sbb
push
jbe
cmp
xchg
cwtl
mov
xchg
or
loop
cs
in
dec
subl
inc
jne
adc
ret
push
inc
test
sbb
adc
xor
push
adc
mov
or
inc
mov
sbb
lock
xchg
or
daa
decb
stos
push
insb
outsl
lret
roll
adc
fisubl
xchg
inc
mov
inc
adcb
cwtl
sub
lods
lcall
lods
jo
pop
jl
stc
in
aaa
mov
cmp
daa
pop
mov
add
mov
push
add
pop
sti
sub
and
sub
daa
cli
sub
sub
push
pop
loop
cmc
aam
shl
xchg
lcall
sub
and
jno
mov
mov
mov
jb
scas
sub
imul
or
adc
jno
inc
jp
ret
pop
ret
jecxz
daa
sbb
cmpsb
cmp
fs
arpl
stc
andl
inc
movsb
iret
inc
dec
mov
lahf
xor
sub
inc
imul
mov
sub
jb
pop
xchg
jnp
sbbl
add
xchg
mov
mov
add
dec
adc
mov
movsl
lods
inc
outsb
push
pop
sub
addr16
cmp
fs
loope
and
xchg
or
daa
sbb
loopne
and
out
mov
sub
sbb
xchg
or
das
pop
mov
insl
sub
out
adc
das
jo
pop
xor
testl
rol
rcll
in
xchg
int
mov
nop
adc
daa
stos
xchg
push
sub
jno
xor
cmp
ja
fisubrl
and
mov
out
bnd
xor
daa
sbb
or
push
xchg
push
cmp
orl
xchg
xchg
sbb
mov
dec
scas
mov
xchg
push
out
in
cmp
out
jbe
push
repnz
add
xlat
and
in
xchg
out
ss
pop
mov
insb
inc
pop
outsl
iret
ficoml
dec
mov
cltd
mov
cmp
addr16
and
mov
sbb
fistl
mov
mov
es
xor
loop
lcall
dec
jmp
in
add
inc
adc
mov
lea
loop
mov
pop
adc
pop
mov
arpl
xchg
push
rclb
sbb
in
adc
cmp
xor
outsl
data16
cwtl
scas
roll
xor
sti
pop
or
mov
push
add
into
xor
notl
sbb
cmpsl
sti
in
lret
push
iret
xor
fcompl
sub
mov
notl
cmpsl
sbb
mov
mov
int3
xor
pop
sbb
xorl
mov
jno
jmp
movsl
stc
adc
push
aaa
jne
lods
cmp
cld
add
jbe
int3
or
aad
xchg
aas
xor
popa
fcomi
imul
sbb
cmp
cmp
jns
xchg
mov
mov
push
or
stos
xchg
inc
outsl
adc
dec
adc
shll
sbb
xchg
ja
popf
xor
sbb
mov
das
out
or
push
jmp
cmpb
loop
popa
cwtl
popf
lret
pop
inc
ljmp
lods
and
sbb
stos
xchg
xchg
das
fwait
push
adc
mov
fdivl
lret
and
daa
orb
lcall
fiaddl
lret
xor
mov
lret
sbb
subb
imul
imul
add
xchg
cmpsl
xchg
adc
xor
fwait
sbb
push
or
and
or
mov
stos
dec
mov
sarl
pop
cwtl
mov
repnz
cmovae
xor
lcall
or
aaa
sub
outsb
jnp
pop
pop
stos
test
jl
rolb
xchg
xor
fcoms
mov
mov
shll
adc
or
mov
xlat
sar
adc
and
dec
iret
fsubrs
mov
push
pop
pop
pushf
pop
loopne
xchg
xor
sub
dec
in
in
push
mov
repnz
and
cltd
fldcw
mov
loop
or
mov
leave
cmp
mov
sahf
imul
ljmp
and
pop
mov
sub
sbb
and
mov
clc
or
push
mov
out
jp
push
test
arpl
pop
xchg
mov
mov
lcall
loope
or
les
push
hlt
lret
dec
stc
sbb
xchg
scas
sbb
lahf
sbb
add
shll
push
in
loop
repz
mov
sub
jp
sbb
push
xlat
dec
call
ss
jno
inc
or
or
xor
and
insb
cs
notb
cmp
mov
ficompl
movsl
aam
sbb
into
jne
sub
pop
sbb
es
ficoml
imul
sub
jp
or
imul
movsb
stc
sub
ljmp
sahf
mov
sub
movsb
push
out
sbb
rorl
mov
and
repz
aaa
xor
or
loopne
sbb
btc
jno
mov
sbb
sar
pop
lcall
mov
icebp
adcb
or
xor
jno
adc
mov
fwait
outsl
mov
subb
daa
and
sub
stc
or
jno
mov
lds
xchg
jne
mov
inc
xchg
sbb
scas
arpl
xor
es
and
sbb
sub
add
std
sbb
push
mov
rcl
sub
jecxz
adc
mov
cmp
inc
pop
shrl
dec
push
xchg
add
call
hlt
mov
xor
les
ss
push
cmp
outsb
and
or
sub
sbb
sbb
jp
aam
mov
jbe
jle
xor
loopne
nop
add
movsb
loop
outsl
or
ljmp
mov
leave
pop
sub
inc
adc
leave
jno
push
xchg
sti
aam
fwait
pushf
jne
push
iret
and
sbb
ret
sbb
cmp
aam
out
movsb
xor
xchg
adc
mov
lret
mov
bnd
mov
push
dec
rolb
push
aaa
mov
cmp
push
add
xchg
adc
push
fwait
xchg
push
std
xorl
hlt
jbe
lods
jbe
cmp
pop
xlat
stc
push
mov
fwait
sbb
adc
jp
popf
jmp
push
gs
or
and
cmp
dec
push
inc
pop
scas
popf
mov
mov
loope
push
in
push
push
or
mov
add
mov
dec
stos
repnz
loop
pop
pop
dec
mov
cmpsl
repnz
roll
jle
repz
jmp
xlat
jg
cmpsb
les
xchg
inc
fcmovnu
add
push
lods
jae
out
mov
out
sar
sti
lret
popa
xchg
lds
pop
inc
aas
call
sub
adc
mov
or
int
test
daa
mov
popf
cltd
fisubs
jg
or
nop
ljmp
mov
xor
dec
in
outsl
out
dec
sti
ret
mov
inc
mov
dec
es
dec
cmp
iret
push
mov
mov
mov
jg
mov
inc
cmc
je
add
xor
mov
xor
xchg
ljmp
jno
stc
jmp
sub
lret
lds
inc
loop
fyl2x
pop
fs
xor
jnp
popf
jns
xchg
mov
xorb
inc
add
decl
or
xchg
xor
sbb
std
pop
dec
ljmp
and
push
popf
dec
or
pop
imul
dec
divb
push
mov
mov
sbb
iret
xchg
and
notb
and
push
add
sbb
pop
movsl
cmpb
sahf
mov
rorb
sbb
sbb
add
cld
sbb
mov
sbb
icebp
lds
nop
pop
cli
mov
cmp
daa
push
adc
ret
jl
and
loope
arpl
mov
fcomi
sbb
xor
mov
rcl
xor
mov
or
cld
icebp
and
cmp
pop
or
es
sbb
dec
jp
push
pusha
mov
out
lret
sub
lds
sti
mov
mov
inc
sub
mov
stos
pop
gs
pop
or
inc
pop
les
shl
and
mov
pop
mov
loope
test
imul
loopne
inc
das
mov
xchg
and
xchg
mov
sbb
pop
mov
shll
jmp
cmp
xchg
mov
loop
out
and
xor
rorb
stos
sbb
lret
pop
xchg
xor
mov
push
inc
fldt
lods
mov
xlat
mov
pop
cwtl
sbb
and
and
cmc
lods
mov
xchg
sub
repnz
idivb
int3
bound
negb
or
mov
push
lods
rcrl
inc
cli
out
jmp
or
jmp
loopne
mov
xchg
and
adc
pusha
sub
pop
out
leave
shll
loope
fnsave
popf
ds
and
mov
fwait
sbb
adcb
out
push
push
cltd
and
push
sub
xchg
cli
sbb
ljmp
es
sub
jno
pop
jo
aas
cmp
mov
lods
icebp
stos
add
divl
ret
mov
mov
daa
sbb
bound
stos
or
xchg
add
push
pop
pop
mov
mov
pusha
adc
mov
icebp
cmp
out
jne
sahf
sub
pop
or
shrl
loop
fwait
xor
xchg
sub
jno
push
xchg
sbb
push
jno
stos
mov
mov
mov
adc
js
inc
mov
loop
push
dec
add
ljmp
in
pop
ss
jns
sub
cltd
or
cmp
lods
imul
cmpsb
roll
push
push
jae
aaa
sub
mov
movsl
loop
in
cmp
and
aas
xchg
or
mov
sub
push
pop
sbb
jecxz
out
cmp
mov
pusha
syscall
incl
xchg
and
adcl
lcall
mov
push
lret
dec
cmp
sarl
arpl
pop
sbb
mov
mov
ljmp
adc
rcl
popa
push
cmp
aas
test
and
mov
pop
push
sar
imul
hlt
cmpxchg
mov
or
mov
movsl
mov
mov
push
cmp
das
xor
mov
into
sbb
or
lods
or
push
jb
int
dec
push
push
addr16
cmpsl
push
push
push
mov
mov
sbb
jb
mov
int
daa
cmp
stc
or
stc
sbb
inc
mov
rcr
ds
cmc
int
rcrl
jne
mov
mov
sbb
cltd
or
test
mov
scas
mov
sbb
sar
shlb
imul
clc
sbb
sbb
loop
in
and
add
xor
inc
aaa
fwait
pusha
sub
out
or
mov
sahf
in
fcmovnb
in
xor
fucom
movsl
and
aaa
pop
in
xor
in
outsl
cmc
addr16
sbb
xor
sarl
or
test
mov
mov
dec
das
mov
out
test
cltd
daa
cmp
mov
or
sub
inc
loope
scas
pop
inc
sbb
mov
fdivl
mov
sbb
imul
orl
loopne
push
xchg
rolb
dec
pop
cmp
lahf
mov
nop
bound
out
mov
jmp
and
xchg
leave
mov
xor
aas
add
jo
mov
mov
jl
cli
push
mov
sbb
push
cli
xor
bound
ds
out
push
mov
mov
lahf
mov
movsl
mov
cmpsl
or
mov
stos
fcmovne
jns
xor
add
sub
lea
sub
pop
dec
push
cmp
lds
dec
mov
jbe
and
mov
in
xor
out
pop
sbb
xchg
or
loop
xchg
lea
dec
testb
fldenv
push
add
sahf
ljmp
test
cmpsl
pop
movsl
pop
pop
jae
popf
inc
call
sarb
sbb
lret
xor
shlb
ret
idivl
aad
call
mov
mov
je
add
cmpsl
lcall
repz
movsl
sbb
mov
pop
or
stc
xor
pop
sti
sahf
loopne
or
or
std
push
repnz
sti
out
popl
push
sahf
imul
mov
out
mov
repnz
jne
cmc
mov
jno
jmp
cwtl
sbb
cmp
bound
int
iret
ljmp
mov
mov
shrb
inc
ffree
xor
outsl
xor
pop
mov
ja
cmp
sub
jbe,pn
cmp
rclb
outsb
mov
call
cmp
and
and
into
push
pop
and
shll
pop
xor
and
inc
push
xor
lahf
popf
jno
mov
pop
scas
sbb
xor
xor
jnp
ja
iret
pop
xchg
mov
push
xchg
mov
xchg
cmp
insl
aas
and
dec
or
inc
mov
push
sub
adc
push
dec
orl
hlt
in
xchg
adc
pop
ret
iret
push
stos
das
sbb
cmpsl
das
movsl
sbb
jp
aas
int3
pop
lret
scas
imul
mov
sub
sub
lea
pop
dec
inc
push
unpckhps
sbb
popa
call
outsl
je
mov
mov
xchg
popf
jno
or
xor
sbb
in
jnp
mov
daa
popa
loop
push
xor
cmp
adc
jb
call
sub
test
lret
adc
xchg
imul
movsb
clc
in
inc
cmp
arpl
sub
and
adc
adc
iret
sub
mov
jbe
push
and
xor
push
inc
cltd
xchg
call
cmpsl
cmp
xchg
pop
lock
data16
push
inc
popa
mov
mov
sti
xor
popf
sbb
iret
push
xlat
fdivrs
adc
lods
mov
mov
lret
mov
pop
aaa
xchg
cld
pop
outsl
xchg
sbb
imul
stos
popa
and
or
test
push
fs
fs
push
jmp
pop
adc
xchg
lret
imul
xor
popf
inc
push
mov
and
jae
cmp
test
push
mov
je
lret
cmp
lret
aaa
popf
movsb
push
adc
sub
xor
sub
je
out
loope
push
pop
sub
outsl
div
xchg
nop
ficompl
es
and
popa
and
into
popa
sbb
xchg
xchg
xchg
adc
jl
push
sub
loope
and
dec
mov
sub
and
sbb
xchg
lea
test
fisttpl
and
inc
sub
mov
dec
movsb
or
xchg
cmp
jb
je
jp
fs
pop
add
popa
pop
sti
adc
pop
cmpsb
push
inc
and
xor
pop
popa
cmp
mov
fcomps
les
sub
xchg
jo
stos
dec
divps
jo
test
sbb
fcoms
idiv
mov
sbb
adc
scas
cmp
pop
mov
inc
and
gs
and
push
push
je
dec
ja
xchg
es
sub
mov
enter
inc
xor
repz
or
cmp
dec
iret
ret
adc
mov
jae
mov
das
push
addr16
int3
push
jl
push
mov
iret
imul
test
sbb
mov
lret
mov
cmp
inc
shlb
mov
or
sahf
cmp
jbe
xor
lret
mov
test
das
jo
int3
pop
xchg
xor
jb
mov
and
or
rcr
jne
je
clc
cmovle
or
and
int
dec
push
mov
out
dec
and
and
cli
sbb
movsl
and
mov
aaa
adc
cmpsl
call
xor
xchg
mov
cmpsl
jno
cltd
mov
jo
xlat
mov
and
mov
xchg
jno
xor
mov
mov
jno
cmp
nop
subb
repnz
mov
push
dec
mov
push
std
push
hlt
push
and
or
scas
pop
pop
or
lcall
out
mov
push
jge
xor
sahf
rol
mov
lods
jo
nop
inc
mov
ljmp
fwait
xchg
or
pop
mov
jne
les
xchg
and
pop
loopne
and
sti
dec
mov
xor
imul
push
dec
lods
jno
push
aam
in
in
cmp
mov
xchg
sub
mov
and
in
cmp
jge
mov
jo
sbbl
imul
imulb
push
gs
rclb
sbb
pop
xchg
daa
nop
cltd
add
xor
jecxz
xchg
insb
and
addr16
jne
mov
mov
outsl
and
nop
bound
or
xchg
cmp
push
aaa
shlb
sub
aad
or
es
adc
leave
adc
negl
insl
xchg
jmp
mov
and
xchg
sub
insl
das
icebp
notl
push
sbb
mov
xlat
push
stc
push
testl
or
scas
pop
push
orb
in
outsb
inc
inc
insl
mov
jmp
mov
loope
push
cmpsl
push
rol
int3
push
imull
outsl
jl
leave
xchg
stos
outsl
pop
sahf
out
idivb
dec
aaa
jecxz
pop
mov
mov
lcall
or
divb
xor
testb
push
lea
push
ret
xor
push
mov
or
bswap
call
nop
add
and
mov
adc
mov
cmp
outsl
mov
sahf
scas
cmp
push
xchg
xor
imul
push
sub
fimull
lcall
popf
scas
lods
cld
cld
lea
insl
and
sbb
sbb
fisttpll
pop
movsl
sub
jge
mov
xor
xor
in
push
xchg
imul
push
out
mov
jns
push
outsl
jmp
push
jo
loop
call
outsb
sbb
lods
andl
iret
sti
xor
inc
loope
xor
test
imul
cmpl
dec
fwait
sub
mov
jbe
inc
lcall
addr16
sub
pop
xor
push
mov
lods
mov
aas
shll
cmp
test
mov
ret
test
sbb
ja
jmp
movsb
jl
shrl
mov
imul
push
jbe
lahf
es
sbb
pushf
jns
mov
xchg
imul
cmp
imul
mov
pop
js
mov
int3
inc
cmp
mov
xchg
cmp
and
mov
into
or
xchg
insl
popf
sbb
push
cmp
mov
add
rcrb
inc
xchg
sbb
add
lods
aas
jbe
test
cld
fs
push
test
shll
sahf
repnz
xor
call
lcall
pop
leave
dec
or
push
sarb
loope
xchg
nop
mov
mov
mov
mov
sbb
pop
out
stos
pushf
inc
push
andl
and
cmpsl
pop
jne
or
lcall
sahf
xchg
mov
sub
sbb
add
sub
nop
xor
mov
xchg
jae
loop
add
xchg
adcl
mov
and
lods
push
test
scas
xchg
bound
adc
pop
jne
test
popa
add
mov
jo
xor
lcall
sub
pop
lcall
xchg
daa
scas
sbb
push
add
sbb
xchg
cmp
test
test
add
out
push
pop
jno
jnp
xchg
outsb
sub
gs
cmp
lret
xchg
int
mov
in
ret
popf
push
push
inc
push
push
and
and
cld
jecxz
sbb
jo
add
mov
sbb
pop
je
out
hlt
in
xor
or
bound
sub
sbb
daa
es
daa
scas
movsl
insl
jae
cli
inc
enter
xchg
jmp
xor
mov
jl
inc
leave
xor
stc
fstpl
pop
pop
fwait
movsb
lods
adc
xchg
sub
das
add
in
aas
cmp
mov
jne
mov
call
pop
cltd
push
add
push
iret
jl
cmp
mov
jp
mov
and
pushf
pop
push
sbb
negl
mov
lds
pop
xchg
cmp
dec
sahf
sbb
pop
insb
sub
into
mov
or
push
push
jp
out
lret
xor
mov
mov
lods
loop
or
ret
push
jg
mov
js
jne
gs
inc
data16
cmpsl
add
cmp
xorb
int
arpl
inc
mov
in
mov
mov
jae
cltd
stc
mov
push
mov
stc
cli
push
mov
and
aas
outsb
stc
jo
pop
mov
xor
hlt
push
cmp
jle
mov
pop
and
mov
cmp
pushf
mov
xor
pop
cmp
sub
or
push
loopne
and
or
mov
in
add
daa
sahf
in
adc
pop
jno
std
fstps
xchg
jns
push
dec
sbb
test
cwtl
lret
push
adc
jmp
sbbl
xchg
or
es
jecxz
sub
mov
jl
and
mov
adc
lds
cmp
cmpb
mov
mov
imul
xor
test
mov
jae
and
js
decl
mov
adc
sub
sbb
xor
xor
popf
fistpl
mov
popf
jge
lcall
sub
xor
rorl
and
dec
lret
jp
movsb
mov
pop
add
loop
mov
fidivrl
ffree
jae
sub
out
aas
cmp
cmp
xor
test
cltd
fs
mov
mov
mov
add
sbb
xchg
stc
jge
int
sti
pop
dec
daa
lret
pop
inc
ljmp
idivb
pop
popf
call
pop
in
dec
mov
mov
xlat
fimuls
pop
add
and
push
add
mov
xchg
es
test
ds
mov
sbb
in
div
xor
out
daa
inc
inc
insl
sti
repnz
in
fistpl
ds
mov
pop
sub
mov
loop
fwait
inc
bound
jmp
aad
cmp
push
xchg
shr
sbb
imul
out
loopne
xor
leave
mov
cmp
xor
inc
mov
das
std
shll
fsubrs
aam
push
sahf
call
lcall
call
xchg
loope
push
adc
mov
hlt
add
push
imul
mov
test
fs
out
xor
subl
in
mov
xor
mov
je
xchg
xchg
stos
cltd
mov
adc
aaa
addr16
imul
add
cmp
cmpsl
movsl
push
mov
cmpsl
adc
int
jecxz
inc
into
fnstenv
pcmpgtw
push
clc
mov
dec
iret
or
in
xchg
mov
push
xor
jp
ret
mov
jns
cltd
sub
imul
fimuls
movsl
or
mov
nop
stc
nop
movsb
fnstenv
sub
data16
inc
arpl
loop
push
pop
aas
scas
mov
shrl
movsl
jmp
dec
shrb
sahf
aaa
mov
push
mov
add
shrb
addr16
std
xor
push
inc
icebp
pop
pop
or
outsl
cmp
push
xchg
xchg
jecxz
cltd
mov
cwtl
mov
pop
mov
or
movsl
xchg
mov
mov
mov
jl
fistps
sbb
pusha
xchg
in
xchg
scas
xor
xor
or
xchg
dec
lods
sbb
in
xchg
cmc
pop
int
push
shrl
fsubrp
mov
lock
jp
pop
mov
mov
xchg
out
pop
jno
sti
xchg
pop
xchg
icebp
cmp
mov
imul
cmp
or
test
adc
aas
lods
xchg
loopne
pop
pushf
pop
jmp
cld
test
push
pop
ja
mov
stos
mov
sbb
cmpl
mov
popa
mov
push
mov
dec
stos
hlt
sbb
push
or
adc
aad
xchg
dec
sbb
sbb
loop
push
mov
push
cs
mov
push
cmpsl
jno
lods
dec
in
imul
hlt
dec
in
mov
fldl
cmp
mull
pop
mov
push
loop
ljmp
cmpsb
mov
addb
out
idivl
inc
cltd
push
mov
xor
insl
jge
shl
push
or
aam
and
mov
icebp
fmull
mov
sub
aad
ljmp
cwtl
lods
pop
xor
out
jno
outsl
int3
mov
call
pop
popf
dec
cwtl
pop
mov
in
add
minps
gs
hlt
cwtl
in
fimuls
pop
jb
iret
pop
ret
fcoml
sub
push
xchg
fldl2e
push
xchg
fstps
and
call
lea
sbb
stos
adc
inc
sbb
mov
and
pop
jne
sub
je
fsub
test
adc
mov
add
xchg
sbb
pushf
pop
dec
out
std
or
stos
loop
dec
mov
out
cmpsb
pop
mov
jge
leave
sbb
push
imul
cli
daa
mov
test
insb
xchg
mov
mov
pop
jnp
mov
stos
sub
lcall
mov
mov
cmp
mov
jle
pop
cs
push
mov
push
push
out
inc
dec
pop
int
and
mov
out
pop
jg
and
in
faddp
push
int
enter
fsubs
push
mov
sub
inc
cmc
cmp
sahf
jno
dec
xchg
mov
mov
in
inc
movsb
pop
jno
mov
outsl
mov
jne
adc
cmpsb
mov
xchg
jmp
add
addr16
fisubs
and
cltd
dec
frstor
and
adc
jns
dec
or
dec
mov
stos
sti
jo
popa
loop
cmp
xchg
cmp
mov
adc
stos
lret
into
cmp
ficomps
incl
cmp
cmp
daa
fcoml
test
and
jne
in
in
stos
enter
lahf
xor
adc
cmp
das
aaa
adc
aad
adc
pusha
sti
aad
loopne
sbb
push
test
xchg
jmp
xlat
xchg
pop
les
mov
adc
repz
insl
int3
cmpsl
push
stos
aaa
orl
stos
ret
inc
mov
cmpsl
ss
mov
dec
xchg
sub
fldenv
fisubl
cltd
ss
add
sbb
xor
inc
test
and
pop
jb
cltd
fisttpll
jp
xlat
leave
mov
dec
imul
fnstenv
inc
sbb
scas
sub
sub
cmp
sbb
popa
mov
repnz
cmpsl
loopne
inc
sahf
push
xor
push
pop
push
sar
mov
xor
mov
stos
dec
jl
mov
gs
in
or
jo
xor
adc
scas
dec
cwtl
das
adc
jecxz
mov
dec
out
mov
ss
repz
sub
pop
xor
outsb
mov
jp
xchg
fsubrs
iret
gs
cmp
aam
xchg
hlt
stc
out
pushf
and
sub
loope
cmp
cmpsl
sti
cmp
fs
aas
fmulp
lods
lods
push
jo
icebp
sub
and
mov
sub
adc
mov
lds
pop
cwtl
leave
push
xchg
out
mov
sub
xorb
outsl
push
std
mov
ja
mov
leave
int
movsb
ja
cmp
mov
or
mov
pop
sti
out
lods
inc
cmpsl
es
cmc
roll
or
fistl
and
jno
xchg
pop
rcrl
scas
andl
pushf
rclb
fwait
jae
inc
pop
sbb
or
call
sti
push
nop
sahf
inc
sbbl
daa
and
sub
cli
adc
nop
mov
and
push
push
inc
dec
testb
xor
imul
insl
rol
xchg
lea
push
sub
and
orl
inc
xchg
dec
push
cmp
aad
fnstcw
clc
test
push
pop
sti
xchg
push
push
shlb
mov
imulb
xor
sub
xchg
loop
rorb
imul
insb
lret
or
xlat
and
stc
fwait
cwtl
orps
xchg
jbe
sub
and
sbb
loopew
call
test
data16
cli
push
test
pop
shll
or
cmp
sbb
pop
push
enter
pop
cmp
push
fdivrl
loopne
and
cmp
lcall
push
mov
cli
and
loop
cmpl
jnp
mov
aas
mov
in
pop
arpl
pop
jmp
adc
fstpl
mov
push
sub
aaa
into
xchg
pop
xor
shlb
negl
rclb
ss
es
sarl
notb
inc
out
pushf
pushf
cld
mull
mov
jecxz
outsl
xchg
pop
repz
in
insl
pop
fnstenv
jb
add
aas
dec
stc
ficomps
pop
syscall
pop
rclb
add
bound
inc
das
sbb
out
inc
cmpl
inc
sarb
mov
sub
roll
xchg
daa
addl
sbb
mov
pushf
sahf
jmp
stc
pop
push
mov
adc
sub
outsl
pop
pushf
push
inc
adc
scas
push
adc
mov
push
or
sub
aas
cmc
mov
xor
fndisi(8087
imul
pusha
xchg
xor
out
sub
outsl
outsl
dec
mov
int
cmp
in
sbb
enter
dec
mov
pop
cmp
or
fstl
hlt
mov
out
xor
test
add
mov
mov
je
pop
add
jo
incb
cs
sbb
jp
adc
sub
dec
es
jno
shll
sub
pop
cmp
mov
inc
xchg
push
xchg
push
aaa
mov
loop
xchg
inc
mov
mov
loop
mov
aad
jns
cmp
shlb
jge
fs
xchg
leave
scas
fisttps
cmp
mov
and
mov
lret
mov
mov
das
aaa
fldl
daa
mov
xchg
fisubl
iret
lret
xor
mov
cmp
sti
repz
out
cmp
pop
dec
mov
addr16
test
popf
and
xchg
sbb
push
xchg
aam
jle
icebp
pop
inc
xchg
pop
shll
mov
loop
inc
lods
pop
push
push
bound
mov
jg
fldenv
in
cmpsb
mov
sub
scas
lahf
icebp
add
outsb
push
mov
mov
mov
aas
pusha
jl
mov
cltd
pop
sbb
cwtl
mov
sbb
jo
jb
sbb
and
jl
pop
jecxz
cmp
mov
loop
fwait
mov
and
mov
fstl
xchg
inc
pop
push
and
mov
cmp
shrl
leave
and
sbb
mov
in
pop
in
stos
pusha
imul
inc
push
adc
and
mov
mov
dec
pop
adc
loope
dec
mov
lock
int
mov
movsl
adc
loop
imul
xchg
stc
neg
int
cmp
fnstcw
xor
cmp
adc
mov
mov
xchg
sub
adc
pop
and
sahf
jbe
stc
arpl
dec
pop
push
push
xchg
in
loop
mov
and
loopne
push
out
mov
je
mov
push
das
sub
stc
mov
mov
js
pushf
andb
xor
lds
push
loop
sbb
inc
mull
sbb
xchg
popf
mov
xor
jmp
pop
scas
popf
mov
call
fnstcw
ljmp
push
mov
inc
out
cmp
lahf
dec
popf
in
mov
adcb
sbb
jns
and
xchg
es
xor
je
jmp
lret
iret
int
jmp
nop
push
das
stc
and
pop
jmp
sahf
aad
cmpsb
or
inc
inc
test
jmp
jns
aam
das
lret
roll
in
test
mov
out
fistps
fs
adcl
mov
jg
mov
sub
mov
xchg
mov
loop
pop
jl
jg
shlb
sbb
inc
scas
seto
cmp
xor
add
mov
mov
push
mov
dec
clc
mov
int3
xchg
dec
push
and
out
mov
stos
movsb
repz
js
out
sar
or
mov
mov
xchg
ret
xchg
cmpsl
mov
or
inc
push
lret
and
lods
cmpsl
mov
repnz
push
and
xor
xor
dec
mul
push
outsl
mov
icebp
iret
mov
adc
lret
ret
jbe
inc
pop
mov
arpl
cmp
jno
mov
inc
in
and
pop
sbb
dec
mov
mov
scas
sbb
jae
stc
and
cmp
inc
movsb
jno
pop
loope
lods
xchg
add
out
shll
mov
in
repz
xchg
push
mov
fcompl
addr16
daa
pushf
les
mov
mov
icebp
mov
push
decl
int3
testl
sub
pop
sub
sahf
es
adc
mov
cmp
jns
popf
pop
sbb
rcll
push
cmp
pop
mov
jno
ds
or
cltd
mov
and
sbb
and
cmp
adc
out
sbb
pop
cmp
mov
mov
imul
sbb
inc
mov
scas
scas
push
sbb
sbb
adc
cltd
mov
jl
outsb
movsl
jae
mov
call
in
and
mov
data16
ss
sub
xor
or
movsb
sahf
sub
scas
stos
jb
jp
mov
or
lea
insl
pop
cmp
mov
cld
mov
push
mov
adc
enter
lret
lea
and
adc
fsubrl
dec
mov
mov
test
out
lcall
scas
aaa
and
or
mov
insl
call
pop
loop
stc
ss
mov
and
cltd
mov
mov
dec
xchg
loope
rcll
pop
sbb
iret
adc
add
lock
pop
mov
jne
cltd
je
sub
mov
pop
mov
pop
in
jb
sbb
adc
lret
sbb
lods
jae
je
adc
jno
mov
xor
out
add
inc
arpl
mov
and
sub
mov
movsb
stc
outsl
lret
aaa
nop
jg
ja
insb
sub
push
sub
out
fcomps
dec
daa
adc
inc
test
es
adc
and
popa
sub
jmp
sahf
lds
nop
and
sub
lahf
movsb
sub
cmpb
iret
xor
addr16
outsl
mov
outsl
sahf
shrl
cwtl
mov
push
adc
mov
inc
xchg
aas
cmp
or
inc
adc
xchg
shll
and
push
add
sbb
and
inc
mov
push
dec
sti
out
adc
loop
lds
jb
in
and
sub
fldpi
dec
pop
in
aad
loope
int
xor
pop
out
in
call
mov
test
dec
shrl
loop
fstp
cld
jmp
into
adcb
leave
cmpsl
mov
loop
xchg
mov
and
xchg
push
mov
mov
mov
push
inc
push
inc
out
pop
xchg
adc
pop
pop
lods
sbb
mov
cmp
or
and
cld
aad
in
addl
push
leave
clc
call
aas
loope
fsts
lret
lret
imul
inc
jge
mov
nop
cmp
vmread
xor
dec
inc
ja
dec
xchg
pop
sti
sbb
adc
jp
int
cs
loop
jle
and
jo
mov
lods
push
cmp
jbe
xor
sahf
push
cltd
fs
cmpsl
adc
ret
cmpsl
mov
sti
push
es
and
push
and
sbb
sub
push
insl
cltd
cmp
ja
xor
sub
mov
sub
sub
cmp
enter
pop
sbb
pop
aaa
stos
jmp
leave
mov
add
call
jns
popa
xor
mov
sarl
jne
adc
popf
sbb
arpl
cmpsb
mov
lods
xor
lods
xor
aas
sub
lea
cmp
pop
popf
in
and
lcall
pop
mov
test
or
es
inc
jecxz
mov
imul
arpl
mov
xchg
mov
cli
out
mov
loop
jnp
in
test
ja
and
pop
stos
sub
pop
mov
xor
mov
in
xchg
fst
push
fwait
loop
sub
mov
loop
xor
mov
add
mov
inc
mov
cmpsl
or
xchg
setl
call
xchg
inc
push
bound
cmp
leave
pushf
push
jb
aaa
and
xchg
movsl
pop
fs
mov
loope
loop
repnz
jecxz
loope
jl
push
lahf
inc
jmp
pop
xlat
lahf
mov
push
cmp
mov
push
adc
imul
ret
sub
xchg
jb
xchg
stc
xor
pop
cmp
mov
dec
pop
jne
xor
mov
addb
addr16
cltd
enterw
movsl
sti
loope
scas
mov
ja
flds
adcb
cld
jae
in
pop
das
mov
add
pop
fildll
jecxz
sbb
cmp
daa
fstpl
out
or
cmp
add
test
jne
jbe
fildl
sbb
call
popf
mov
xor
xor
cmp
popa
inc
in
xchg
imul
imul
xchg
ret
aad
or
mov
sbb
inc
fld
pop
xor
shll
mov
lcall
enter
jno
hlt
sub
fyl2xp1
ror
inc
lret
movsl
push
mov
adc
lret
pop
leave
push
pop
push
pop
jg
and
int3
push
subl
popa
mulb
iret
cmpl
mov
dec
xor
aad
popl
xor
fwait
cmp
and
leave
mov
ret
inc
xor
lcall
jne
mov
loope
ds
ss
add
int3
call
test
lods
xchg
int
fldenv
cld
and
leave
or
fldenv
lods
sbbb
pushf
cmp
aad
mov
mov
fldcw
pop
and
dec
xchg
sti
mov
inc
mov
push
xchg
and
xchg
repz
incl
aas
push
inc
hlt
psrad
sbb
shll
test
sti
insb
ret
cmpl
icebp
xchg
sbb
jae
aam
and
ret
testl
add
jne
xchg
xor
cltd
es
call
lcall
sti
and
and
test
leave
jnp
loop
movsb
repnz
popa
jmp
lret
idivl
loop
and
cld
mov
std
inc
adc
pop
mov
add
loop
jg
mov
outsl
std
out
movsb
pop
xor
and
movsl
jb
imul
aad
cmp
and
ret
pop
fldcw
push
std
and
arpl
jno
icebp
mov
fs
call
fnstsw
jg
xor
push
int
sbb
push
mov
mov
fs
mov
cli
loop
fstpt
sub
into
icebp
and
adc
lods
mov
scas
mov
inc
mov
sbb
test
jb
insl
adc
cld
fstpt
jae
and
fwait
inc
insb
scas
lds
subb
adc
dec
sbb
addr16
add
rol
jp
hlt
sub
cmp
mov
push
mov
xor
mov
ljmp
push
xor
pop
and
arpl
fstpt
xchg
cmp
in
jno
and
mov
cltd
loop
push
sbb
pop
aam
pop
xor
shrl
sub
lcall
btc
or
mov
pop
mov
cmp
cld
repnz
mov
mov
cmp
jecxz
mov
lret
cltd
sub
pop
ljmp
mov
ljmp
mov
shlb
cli
addl
gs
lods
pop
pop
inc
lret
dec
test
in
data16
cmp
call
push
xor
sbb
ret
imul
loopne
push
shrl
int3
inc
xchg
pop
push
mov
xor
lcall
iret
and
lcall
leave
test
pusha
outsb
lods
dec
sub
inc
xchg
fs
ss
roll
popa
sub
jge
repnz
mov
adc
ds
mov
and
stos
inc
or
and
push
add
mov
and
jbe
mov
mov
jl
fnstsw
sub
and
rcrl
push
sbb
xchg
inc
xchg
dec
and
mov
jne
push
and
adc
rcrl
loop
jns
inc
sub
test
lds
or
mov
lods
xor
push
inc
or
mov
test
push
ror
sarl
adc
mov
je
xor
imul
or
push
mov
sbb
mov
lret
sbb
shl
mov
rol
mov
inc
ret
imul
outsl
outsb
mov
loop
movsb
dec
mov
pop
xor
incl
mov
fsubs
test
js
push
mov
inc
ss
cmpsl
pop
mov
shr
outsb
xor
stos
inc
xchg
ret
jne
xchg
dec
cmc
mov
sub
push
les
and
int
sbb
adc
push
mov
into
mov
inc
fs
leavew
div
aas
mov
xor
stos
dec
ss
cmp
call
popf
mov
add
mov
decl
add
xorb
movsl
jns
cmc
push
adc
or
fstps
insb
mov
cltd
clc
push
rcrl
popa
test
cmp
dec
mov
outsl
push
and
mov
jne
fisttpll
pop
xor
daa
sbb
adc
adc
sub
sar
pop
call
imul
in
adc
add
ljmp
cmp
sbb
popa
or
inc
add
sbb
xchg
leave
rcrb
out
mov
cmp
addb
cmp
mov
sbb
movsl
rolb
mov
aad
cwtl
mov
loop
pop
pop
cwtl
sbb
jnp
flds
jle
and
xor
aaa
xor
das
mov
repz
and
mov
push
insl
sbb
fldcw
xor
sub
sbb
or
das
cs
pop
jno
cmp
or
lahf
push
mov
adc
popf
adc
sub
xchg
adcl
mov
and
sbb
ret
movsl
xchg
add
shlb
inc
inc
stos
and
mov
xchg
addr16
in
or
stc
lcall
aam
test
xchg
mov
cmpsl
in
mov
aaa
xchg
sub
add
sbb
lock
jle
stos
mov
sub
scas
jbe
popa
mov
mov
ficompl
sub
sub
add
popa
inc
jmp
pop
sbb
xchg
mulb
clc
mov
and
stc
loop
sub
xor
jbe
jp
adc
cmp
in
mov
es
dec
mov
dec
jb
pop
outsb
loope
xor
ds
popa
or
xchg
and
lret
pop
inc
pop
fsts
cmp
mov
pop
das
das
dec
add
sbb
arpl
xchg
sahf
sbb
push
cwtl
pop
mov
inc
add
sub
in
outsl
mov
cltd
jp
mov
cmc
repz
push
mov
test
cwtl
mov
outsl
ljmp
pop
push
dec
sub
adc
mov
xor
aaa
sbb
adc
and
adc
pop
xchg
cltd
fcomps
mov
imul
out
mov
fdivrl
and
ja
arpl
xchg
push
jno
sbb
dec
xor
sbb
jg
insl
pushf
and
mov
sub
mov
sub
inc
sahf
sbb
cmpsl
rclb
lods
es
test
or
loop
xor
push
push
jno
or
mov
push
stos
repnz
inc
cmc
sahf
mov
add
xchg
adc
xor
mov
addb
lret
jecxz
fnstenv
sbb
call
dec
aam
and
or
adc
ret
ficomps
inc
popf
xchg
lcall
jns
call
inc
cmp
mov
and
test
mov
jge
adc
adc
aas
sub
or
sub
xor
xchg
pop
int
mov
lahf
adc
pop
adc
stos
inc
mov
sbb
clc
iret
adc
push
or
jns
sub
cld
call
js
outsb
mov
mov
sub
push
xchg
mov
inc
xor
dec
popf
mov
test
adc
sub
pextrw
mov
lods
das
pop
jo
pop
sbb
jae
and
loop
xlat
and
test
mov
addb
push
sub
popa
dec
and
orb
cmpsb
mov
mov
icebp
xchg
xor
or
add
inc
push
sbb
shlb
data16
add
movb
outsl
mov
sub
push
sbb
stos
mov
sbb
mov
popa
mov
orl
or
imul
push
imul
mov
icebp
rclb
cmp
push
fs
cmp
adc
pop
mov
add
push
insb
xchg
and
sub
and
xor
mov
push
cmpsb
daa
gs
and
jne
and
daa
fwait
lcall
fs
sub
xlat
mov
lret
mov
lds
jne
test
sub
out
pop
out
ds
xchg
lahf
mov
or
or
lahf
xchg
nop
xchg
push
lret
mov
out
push
xchg
and
dec
fs
inc
lods
fwait
push
and
or
cltd
xor
test
sub
pop
sub
jae
sub
rcr
xor
push
mul
popf
addr16
loope
inc
xchg
xchg
mov
mov
push
and
push
jo
mov
push
les
xchg
mov
out
jecxz
or
insl
addr16
frstor
mov
mov
imul
cmc
fldt
dec
cmp
mov
mov
mov
scas
dec
inc
fstl
add
bound
test
xchg
mov
xor
push
aaa
ret
shlb
popa
call
aas
movsl
mov
inc
xchg
loopne
push
and
jg
cmpsb
cmp
and
mov
cltd
jl
mov
mov
aaa
jo
mov
mov
or
pop
enter
xchg
addr16
xchg
andl
mov
mov
mov
ljmp
cmpsb
ficoms
xor
adc
jecxz
inc
cmp
out
test
mov
and
cmpsb
sahf
mov
sbb
ja
adc
cmp
cmp
sar
popf
imul
out
out
movsl
push
mov
mov
fcoml
cmc
rcrb
mov
out
push
aam
mov
mov
pop
mov
inc
and
cmp
cmp
aaa
inc
cmc
popa
popa
inc
pop
push
adc
jns
cmc
in
rcr
sub
push
mov
jno
or
mov
adc
leave
mov
ficompl
in
jmp
inc
cmp
xor
movsb
or
jge
pop
aas
mov
xor
rol
mov
movsl
jne
ja
lock
lods
and
fidivrl
fimull
cmpsb
xchg
inc
mov
bound
dec
sbb
and
lret
sub
push
and
pop
outsl
and
cmc
shll
adc
mov
push
mov
aad
xchg
cmp
inc
push
rolb
mov
addr16
sbb
sbb
iret
rcll
mov
xchg
loopne
mov
lds
adc
mov
daa
fwait
std
inc
jg
pop
fldenv
test
or
adc
sbb
cmp
imul
cltd
pop
sbb
clc
mov
das
out
jo
mov
mov
adc
add
jmp
outsl
test
ret
sub
sbb
jne
pop
xchg
out
mov
bound
mov
sbb
dec
lods
xchg
adc
jb
int3
inc
mov
and
jne
test
std
sub
test
mov
sarl
ret
sbb
jne
pop
jae
or
push
adc
xlat
mov
sub
pusha
inc
mov
arpl
cmp
push
push
adc
xchg
add
sbb
iret
rcll
and
addr16
jnp
cmp
cmp
iret
or
jmp
jmp
cmp
aas
pushf
mov
and
adc
fnsave
jae
pop
pop
jne
sbb
inc
mov
and
lods
xor
cmp
jno
shll
andb
in
adc
lcall
lcall
pop
mov
dec
imul
mov
stos
mov
cli
push
mov
mov
push
mov
sbb
xor
rcll
ret
inc
sbb
dec
or
lods
cmp
pop
add
cmp
pop
aas
popa
mov
or
pushf
test
lret
fistps
xor
je
mov
inc
std
daa
push
mov
xor
pop
das
push
loope
mov
mov
xor
or
mov
gs
fstpt
cmp
fdivl
hlt
call
and
xchg
mov
ja
inc
push
fxch
mov
stc
iret
xchg
sti
cmp
ss
ss
sub
inc
loop
push
mov
iret
and
das
jbe
push
xchg
sbb
negb
out
add
and
out
mov
stc
pop
scas
mov
ss
pop
mov
dec
mov
das
push
cltd
test
mov
xlat
and
sbb
call
xor
aas
imulb
gs
mov
push
inc
mov
lret
out
ja
cmp
and
lds
lahf
xchg
leave
inc
mov
xchg
pop
or
test
mov
aam
inc
inc
imul
xchg
mov
add
lds
loop
or
popf
pop
or
pop
push
sub
loopne
out
xor
leave
in
push
sti
cmpsl
popf
mov
push
shl
aad
mov
inc
cmc
lret
lahf
loop
or
movsb
das
out
cmp
xor
cmp
or
mov
imul
push
insb
fidivs
sub
cmpsl
dec
call
xor
inc
or
fimull
pop
data16
xchg
repz
cmp
cltd
sbb
sbb
and
fs
test
addr16
sbb
and
cmpsb
push
inc
cwtl
xchg
push
stc
movsl
pop
and
cmc
out
sub
jbe
sbb
pop
idiv
movsb
xor
mov
inc
xor
cld
aad
cld
or
jo
add
out
ss
or
xor
cmc
lods
leave
dec
push
xchg
jne
stc
mov
and
ret
mov
mov
enter
cmc
and
xchg
sbb
mov
or
xor
ret
xor
fbstp
aaa
xchg
inc
or
imul
pop
fnstenv
push
add
sub
das
rorb
xor
cmpsb
aas
fdivl
outsb
repz
push
cltd
pop
nop
jb
sbb
jge
inc
or
push
mov
mov
mov
aaa
sub
push
pop
scas
pop
in
mov
std
lods
inc
xor
pop
daa
aam
daa
mov
mov
add
orl
push
sub
scas
sahf
sbb
push
scas
sti
clc
iret
mov
repnz
jle
cmp
and
push
bound
adc
xor
call
cld
flds
xor
ret
hlt
add
rclb
xchg
fstl
xchg
rcr
jae
push
lea
lret
cltd
addr16
jno
pusha
xchg
sti
xchg
pop
dec
lock
jbe
cmpsl
fildll
dec
and
and
and
push
and
repnz
loop
push
fildl
jge
es
arpl
sub
add
adc
sub
jb
mov
out
mov
int
adc
bound
scas
test
enter
shrb
cmp
adc
nop
jae
daa
cmp
icebp
rcrb
push
les
arpl
push
push
hlt
push
jp
shrl
leave
mov
ss
pop
lods
lock
sbb
xchg
imul
jmp
fiaddl
push
xchg
fstps
das
jno
and
rorl
add
pop
mov
ljmp
loop
adc
pusha
ror
aas
xlat
nop
shll
nop
xor
mov
jo
jle
popa
cmp
je
in
sub
or
sub
mov
mov
clc
adc
loop
shll
and
sub
iret
and
sub
xchg
mov
dec
ss
add
and
enter
ficomps
xor
and
xchg
in
and
adc
std
jg
test
adc
loope
dec
outsl
repz
and
and
std
sbb
push
jg
jne
lds
test
js
aas
sbb
pop
pop
lock
andl
imul
inc
rcrl
sub
dec
push
inc
mov
pop
jmp
sbb
dec
adc
sarb
add
popa
sub
cmp
xchg
xor
jno
adc
inc
leave
inc
mov
loope
ret
in
xchg
mov
aas
pop
jb
dec
mov
jno
mov
push
mov
insl
mov
popa
popa
loope
xchg
cmp
dec
xchg
jae
mov
inc
arpl
sub
xor
mov
repnz
fists
das
mov
scas
mov
mov
shlb
cmpsl
call
fisubrs
out
roll
outsl
fiaddl
cmp
pop
nop
cmpsb
pop
cmp
sub
loopne
xchg
cli
int3
stc
movsl
cmp
mov
inc
std
std
cwtl
xchg
imul
xchg
loop
fnstenv
xchg
jns
inc
add
mov
sbb
add
and
jg
out
prefetch
ljmp
mov
and
xchg
loop
pop
mov
cmpsb
imul
repnz
scas
rcr
imull
ja
into
mov
je
jno
ds
and
jne
aaa
addr16
pop
xlat
push
lahf
mov
xor
xor
int
adc
cli
call
or
push
mov
addr16
stc
sub
jb
mov
or
scas
fcmovnb
sub
mov
sub
pop
adc
mov
xchg
sub
int
pop
xchg
imul
mov
xchg
and
jecxz
push
imul
adcb
fwait
popa
mov
pop
adc
sbb
int
xlat
mov
out
mov
xchg
call
inc
jmp
cmp
xchg
push
int3
pop
jle
mov
cmp
test
subb
ficoml
stos
sub
xchg
xor
jb
stos
push
and
cmpsb
shll
pop
dec
sbb
addr16
mov
arpl
popa
pop
sbbb
call
sub
pop
xchg
push
enter
int
xchg
mov
cltd
inc
and
sbb
fsubl
xor
cmp
pop
mov
std
adc
sub
jno
adc
add
and
or
pushf
fnstcw
test
push
xchg
cmp
adc
addr16
loopne
leave
mov
scas
mov
lods
and
scas
inc
pop
push
popa
and
push
xlat
push
and
vmulpd
cmp
nop
xchg
mov
sahf
in
psubq
jle
gs
lret
push
inc
pop
xchg
pop
add
sub
xchg
pop
add
aaa
dec
movb
test
btc
call
sahf
pop
xchg
dec
fldcw
imul
jge
xorl
jnp
lcall
jle
mov
xchg
imul
in
sub
sbb
jb
and
sbb
sbb
mov
adc
push
cmp
or
mov
stos
outsl
cwtl
sub
dec
mov
adc
fwait
push
int
out
movsl
inc
mov
or
xlat
xchg
popa
mov
sub
pop
jno
jmp
xchg
add
clc
dec
jg
rolb
mov
mov
or
fxch
fwait
dec
mov
inc
loope
push
add
popa
movsl
iret
daa
adc
ss
aas
sub
movsl
mov
sbb
aas
and
jle
mov
stos
jb
cmp
dec
testb
pop
outsb
add
dec
mov
jmp
mov
lahf
or
insl
lods
mov
sbb
daa
adcl
xor
je
hlt
cmp
lret
mov
mov
je
gs
xchg
xchg
pop
sti
out
sbb
sub
jae
mov
ss
out
enter
stos
sub
jg
movsl
mov
adc
sub
mov
mov
sub
xchg
jb
xchg
pop
inc
cmp
mov
xor
popf
or
jne
adc
sahf
inc
add
sub
push
and
push
sti
aas
test
test
or
or
pop
les
iret
mov
pop
aad
cmp
das
lods
imul
sub
cmp
mov
cmp
cmp
scas
addr16
outsb
mov
andl
repnz
out
mov
sbb
push
and
xorb
xchg
xchg
xchg
add
sahf
cld
jecxz
sarb
mov
xchg
mov
outsb
popf
and
mov
mov
xor
jb
icebp
leave
or
in
xchg
and
sti
hlt
push
add
popf
das
cmp
jno
mov
jbe
fsub
ficomps
int
jae
jecxz
mov
loope
fucomp
cmpsb
mov
int
pop
mov
xor
cltd
mov
flds
mov
or
mov
ficoml
inc
xor
les
xchg
adc
push
shrb
decl
lret
add
sbb
jl
push
icebp
fbld
sbb
stc
std
inc
add
cmpsb
outsl
and
pop
xor
add
pop
xchg
popf
push
cmp
lds
pop
test
pop
test
mov
inc
mov
mov
ja
inc
lret
and
jo
xor
js
xchg
jae
xor
pop
imul
shll
push
xchg
mov
mov
cmp
cmp
lahf
outsl
jge
xor
gs
loope
xor
xchg
call
popf
or
inc
xchg
loopne
lea
xor
mov
and
sbb
insl
add
dec
xor
iret
add
pushf
jg
xchg
push
dec
sub
out
aas
push
arpl
int
mov
xor
sub
xchg
adc
jns
adc
jne
mov
cmp
xor
movsl
mov
sub
mov
dec
push
push
inc
pop
xchg
mov
shlb
es
xchg
lcall
cmp
rolb
icebp
or
mul
lret
xor
and
and
mov
ja
mov
push
adc
leave
adc
pop
scas
enter
rorb
mov
xchg
imul
repnz
sbb
xchg
adcb
addr16
pop
popa
cmp
dec
cmp
xchg
cmpsl
push
fprem1
aad
and
push
mov
sub
sub
push
cmp
sbb
rcrl
aas
lret
lcall
xchg
adc
or
popf
xchg
or
mov
add
sub
push
lods
sbb
and
imul
jne
xor
sub
xor
mov
mov
out
dec
mov
shrb
lret
cmc
gs
out
push
xor
pop
aad
xor
mov
aam
push
popf
mov
cltd
and
mov
hlt
lret
inc
roll
pop
push
xor
popa
mov
xchg
iret
insl
and
daa
jae
xchg
mov
sub
loop
sbb
cmovb
shll
popa
daa
xchg
inc
in
and
cmp
push
imul
and
mov
and
rclb
or
mov
sbb
push
shl
addr16
sub
jp
mov
inc
loop
test
sub
mov
imul
shlb
and
lret
std
lahf
inc
andl
bt
pop
pop
repnz
xor
sub
sbb
xor
lods
lods
or
jno
and
call
into
cmp
cmp
test
shl
and
sbb
and
add
jno
sub
insb
dec
xchg
fcompl
xor
mov
lods
jnp
sbb
fwait
daa
stc
rcrl
xor
lret
fiaddl
sbb
xor
sbb
xchg
cmp
push
loop
add
gs
filds
and
cmp
and
loop
jnp
pushf
or
das
out
sahf
out
xchg
cltd
and
xchg
and
pop
cmp
std
sbb
es
mov
test
mov
pop
leave
lret
loop
shlb
popa
sub
jmp
cld
cltd
push
xchg
adc
or
xchg
stos
daa
mov
orb
sbb
ljmp
ljmp
sti
fcomi
imul
jb
xchg
movsb
push
sub
rdmsr
jbe
adc
add
or
dec
mov
pop
cld
sahf
mov
or
adc
or
aaa
sbb
mov
call
add
cli
fnsave
loope
out
incl
lea
add
add
call
fisubrl
je
jae
xchg
sti
push
pop
xchg
sbb
adc
pop
in
nop
nop
sub
inc
nopl
push
xchg
push
mov
test
lods
mov
cmp
and
loopne
sbb
inc
sub
or
add
fidivrs
in
dec
das
aaa
enter
sarb
xor
cwtl
pop
dec
movsl
push
dec
add
xchg
rcrl
scas
repnz
call
pop
mov
pop
jae
and
add
add
fbstp
or
leave
xchg
call
dec
das
or
fwait
add
cmp
add
test
movsb
sahf
pushf
mov
xchg
sbb
and
jmp
sub
pushf
aaa
xor
xor
and
cwtl
cmp
or
cmp
cwtl
mov
inc
push
cmp
les
dec
xchg
mov
ret
or
mov
notb
pop
fldl
push
divb
movsb
or
xor
push
xor
push
sub
push
mov
xor
je
or
xor
xchg
cmpsb
push
test
ror
sub
mov
or
leave
sub
mov
dec
fnsave
shlb
and
xor
cltd
inc
and
xor
push
les
mov
cmp
inc
or
cmp
add
out
dec
pushf
fld
jno
xchg
add
pop
push
das
popf
xor
cmp
rcl
sub
popa
das
push
and
nop
cli
shll
in
jne
out
mov
pop
sbb
jno
out
adc
xchg
iret
sbb
daa
stos
and
fsts
ret
imul
cmp
xchg
js
xchg
sbb
mov
test
mov
stc
xchg
test
int
pop
push
xor
das
xchg
add
mov
push
mov
xchg
fsubp
pop
xor
loope
xor
push
mov
fisttps
lret
xor
pop
cwtl
push
sbb
fmuls
je
imul
and
mov
jnp
leave
sahf
jg
mov
cltd
adc
mov
mov
cwtl
sub
ret
leave
cmp
test
ficoms
lods
cltd
xor
mov
cmp
add
movsb
xchg
push
lock
xor
cltd
or
push
sti
dec
xchg
lods
imul
pop
les
xlat
xchg
popf
bound
pop
fs
push
test
mov
aas
sbb
xor
sbb
pop
adc
mov
mov
sbb
clc
fcmovnb
xchg
pop
cmp
cmp
adc
push
pop
out
xor
daa
jno
inc
inc
les
xor
adc
sbb
fsubs
push
pop
jbe
ret
sub
mov
popa
out
mov
jnp
sub
or
cltd
and
mov
test
mov
stc
pop
adc
aas
and
sub
push
pushf
jne
ret
adc
es
shlb
push
std
cmpsb
cmp
ja
mov
xchg
daa
xchg
addl
or
pop
imul
ja
sbb
test
repz
sbb
daa
cmp
mov
hlt
push
jl
rorl
jmp
push
sbb
xor
aaa
sbb
fsts
jns
sbb
sub
xchg
adc
add
fcomps
shlb
icebp
jno
in
and
jmp
cmp
loop
fs
into
cmpsl
lcall
data16
dec
loop
lods
dec
pop
test
adc
xchg
mov
sbb
push
jbe
ja
mov
enter
jns
icebp
xor
pop
aas
sbb
mov
ja
mov
adc
sbbl
add
pop
xchg
dec
adc
pop
pop
push
out
inc
mov
pop
dec
jecxz
jne
test
and
lock
lcall
out
loop
or
dec
and
cltd
pop
and
in
mov
or
mov
xorl
repnz
outsb
fldcw
fmulp
lea
pop
faddl
and
dec
push
jge
aaa
or
xor
cltd
popa
cmp
rclb
cwtl
loope
push
cmp
mov
popa
xchg
mov
xor
sub
add
mov
mov
arpl
cmp
inc
mov
mov
fdivl
mov
inc
or
cmp
shll
outsb
imul
and
pusha
push
arpl
push
das
jl
add
js
or
popa
mov
cmp
inc
adc
ret
fcmovnb
in
fwait
mov
inc
loopne
test
imul
xor
and
lret
cmp
xor
loopne
adc
or
lock
inc
lods
sub
xlat
mov
xor
push
xchg
loope
xor
push
sti
or
xchg
popa
push
push
xor
adc
out
and
xor
aam
mov
leave
xor
adc
loope
fisubrs
xchg
pop
mov
push
sarb
adc
xchg
xchg
adc
int
test
fimull
cmpsb
scas
sbb
fwait
mov
dec
push
xor
and
mov
shrb
jno
jne
adc
push
mov
push
sbb
push
jg
filds
inc
lock
jnp
test
push
jno
xor
popa
nop
inc
push
loope
mov
or
jne
imul
mov
push
call
push
popa
xor
inc
popf
int
pop
in
jno
mov
inc
pop
jp
outsl
xlat
clc
mull
push
xchg
xchg
popf
shl
push
popf
iret
mov
jns
pop
bound
rorb
pand
sahf
push
iret
repz
push
xor
push
cmc
fildll
and
adc
fsubrs
mov
and
out
jge
pop
mov
or
mov
push
sbb
adc
fildll
lock
inc
dec
sar
jne
xchg
iret
jle
loope
pop
mov
in
jle
cmpsl
adc
pop
repnz
and
xor
sub
mov
pop
sub
and
adc
lea
xchg
xchg
shl
int
in
mov
push
and
push
in
xchg
pop
xor
mov
xchg
imul
dec
add
cmc
sbb
add
mov
cmp
jmp
add
test
out
imul
jp
cmpsb
mov
inc
enter
insb
call
mov
mov
ljmp
mov
lcall
insb
shlb
mov
cs
insl
in
out
add
insb
jb
add
cmpsb
scas
mov
push
stos
xchg
sbb
and
inc
clc
pop
or
lock
and
es
mov
notb
jbe
sbb
cmpsb
xchg
loop
mov
imull
or
sbb
dec
sub
dec
addr16
pop
inc
xchg
mov
mov
or
je
cmpsl
addr16
or
lret
xchg
adc
inc
sti
inc
icebp
adc
rcl
xchg
sahf
dec
dec
mov
in
jecxz
jo
mov
pop
pop
jae
sub
aas
mov
imull
pop
fbld
imulb
data16
lods
sbb
cmp
stos
mov
mov
mov
mov
sub
and
in
sub
repnz
stc
fisttpl
loop
inc
xchg
icebp
cltd
mov
or
stc
inc
sub
adc
loop
ret
aam
sti
jg
mov
xchg
jle
in
mov
repz
mov
addr16
iret
dec
xor
push
bound
mov
leave
mov
das
jo
push
push
adc
xchg
jno
mov
pop
adc
addr16
cmc
in
dec
loop
mov
jae
mov
and
xchg
stos
xchg
mov
jecxz
jns
pushf
mov
push
cmp
xchg
jae
ss
push
xchg
push
es
fwait
bound
inc
cmp
sbb
lds
call
aas
inc
and
jne
inc
aas
addr16
pusha
mov
xchg
sbb
movl
xor
fcoml
test
mov
push
xchg
test
mov
adc
sahf
fwait
shlb
sbb
pop
imul
jne
cmp
mov
mov
test
cmp
push
and
pop
cmp
js
loopne
fwait
test
enter
lods
sti
rol
int
cwtl
mov
ja
aad
sbb
push
pop
movsl
addr16
dec
sub
mov
bound
in
jo
xchg
xor
repnz
aam
adc
arpl
fdivrs
mov
sub
mov
nop
xchg
lods
or
fcoms
xchg
or
cltd
nop
add
shll
fcoms
cmpsl
inc
int
push
push
xchg
cmp
mov
sub
loop
lret
in
imul
mov
orb
lods
in
aaa
fstl
or
xchg
das
loop
or
pop
sbb
rorb
mov
xchg
stc
fldcw
xor
lods
sub
cs
push
inc
int3
add
xor
push
insb
test
lods
dec
std
scas
xor
and
sub
movsb
in
inc
or
es
sarb
in
inc
mul
xchg
push
sub
adc
add
and
adc
imul
add
das
pop
cmp
scas
les
cmp
push
mov
jge
push
cwtl
push
rcll
test
sbb
loop
jne
push
jmp
push
push
ljmp
shlb
and
scas
imul
sbb
adc
xchg
mov
mov
popa
jae
rolb
inc
ds
popf
pop
in
daa
push
ljmp
or
xchg
and
dec
sbb
adc
pop
addr16
inc
inc
mov
fcmovnb
popa
sarb
imul
outsl
sub
xor
test
jno
add
mov
ret
xchg
call
jne
rclb
lods
jns
sbb
lret
ret
das
sub
aad
hlt
fstl
sbb
inc
pop
and
sub
cltd
inc
mov
cmp
sbb
adc
and
cwtl
xor
cli
sbb
sub
test
xchg
lea
gs
mov
lock
pop
call
push
mov
fimuls
xchg
dec
flds
add
and
xor
stos
mov
outsl
sahf
pop
cwtl
pop
lret
mov
cmpsb
mov
cmp
and
test
xor
or
xchg
movsl
sub
into
mov
ljmp
rclb
jge
int3
rclb
mov
enter
xlat
in
jecxz
popf
and
and
sbb
xchg
pop
stc
lahf
sub
adc
xchg
or
insl
xor
jl
sbb
xor
xchg
enter
xor
or
cmp
mov
das
je
push
in
mov
jae
xchg
js
xchg
mov
es
mov
aaa
mov
pop
push
sub
xor
in
ljmp
inc
mov
and
pop
out
mov
loopne
push
jnp
dec
jmp
int3
pop
sbb
out
pop
shrb
outsb
xchg
push
es
daa
and
std
paddusw
or
inc
gs
jle
in
cwtl
test
hlt
clc
and
xor
mov
adc
popa
stos
loop
add
gs
xchg
cs
out
mov
mov
adc
data16
mov
dec
push
fyl2x
fsubl
shr
xor
xchg
pop
ret
insb
mov
push
int
outsl
fldt
cli
scas
into
stc
inc
clc
cmc
dec
idivl
mov
loopne
sbb
pop
lock
and
int
mov
xchg
loope
or
jbe
push
jb
fstpt
pop
rclb
sub
iret
ret
fsubrl
cmp
jae
and
mov
imul
xor
push
sbb
ljmp
pop
ret
or
lcall
or
or
add
and
cmpsl
jno
add
or
xor
mov
repnz
mov
pop
xor
push
jno
loope
sub
mov
fwait
sub
push
das
jb
sbb
and
lcall
shll
pop
cmpb
cmp
xor
mov
aaa
mov
inc
lcall
mulb
dec
xor
xchg
xchg
sbb
xchg
cmc
aas
sbb
hlt
sbb
jo
xorl
xor
sub
mov
out
aaa
mov
mov
add
fwait
push
sbb
mov
jecxz
pusha
adc
sub
leave
cs
xor
xor
inc
fbstp
xor
mov
pop
push
mov
jmp
and
xor
adc
lcall
adc
sub
xchg
jecxz
add
mov
fwait
inc
repnz
imul
mov
jge
divb
xchg
sub
clc
and
push
mov
lea
dec
mov
xchg
fs
shll
mov
cltd
lods
jne
inc
mov
scas
push
xchg
pop
xor
sbb
mov
xor
mov
cltd
adc
sahf
sbb
mov
jmp
pusha
into
repz
jl
xchg
lcall
test
fsubrs
sbb
and
loope
adc
cmp
lds
and
pop
fs
std
movsl
outsl
mov
cmpsl
mov
jecxz
xchg
add
mov
adc
loop
mov
outsl
mov
sbb
out
fsub
shll
icebp
push
push
mov
int
mov
leave
aad
mov
cs
insb
xchg
adc
jg
sub
add
daa
orb
mov
adc
lock
dec
xchg
sub
mov
dec
push
nop
inc
jl
dec
or
cmp
call
outsb
in
mov
fsts
xchg
mov
cmp
cmp
in
mov
mov
xor
cmp
std
popf
stos
add
cmp
outsl
int
test
mov
test
mov
xor
cmp
loop
dec
test
xchg
mov
cli
popf
push
and
jns
iret
xor
push
jns
das
and
and
movl
enter
jmp
adc
cld
repnz
inc
dec
xor
dec
mov
pop
add
pop
dec
cmp
rcr
push
test
mov
adc
add
inc
sarb
adc
pop
sbb
push
pop
xor
out
cmp
mov
jns
call
sti
sbb
cmp
popa
outsb
sub
loop
inc
sub
lods
xchg
cmp
sub
push
inc
dec
mov
dec
loope
push
pop
mov
mov
lahf
mov
xor
mov
inc
into
dec
dec
mov
adc
loop
cmpb
stos
scas
mov
adc
movsb
push
xchg
mov
dec
xchg
mov
mov
or
insl
mov
sahf
sub
sub
cli
jecxz
mov
and
adc
loope
rorl
push
into
sub
repz
xor
fs
pop
xchg
stc
dec
push
sbb
push
mov
jle
shl
cmp
fs
notl
adc
pop
divl
jno
inc
push
hlt
jae
inc
mov
mov
jno
loope
sbb
mov
mov
and
ret
xchg
mov
bound
lcall
and
mov
pop
pop
ss
in
inc
iret
jno
mov
or
cmpb
pusha
jno
inc
xor
rcrl
adc
jno
rcrl
loop
gs
jae
pop
xor
ret
dec
mov
adc
cltd
sub
cli
pop
cmpsl
push
out
lret
mov
adc
push
pop
cli
fcompl
int
pop
push
fcmovu
push
leave
fildl
outsl
sbb
sub
ret
dec
iret
cmp
push
xlat
add
dec
pop
hlt
and
scas
lods
adc
cmp
dec
xchg
and
push
push
cmp
ss
leave
push
xchg
cld
push
movsb
push
push
inc
and
popf
popf
adc
mov
lock
xchg
mov
loop
rorl
rclb
and
sbb
pop
xchg
push
or
xchg
lret
int
ljmp
push
leave
scas
xchg
loope
xor
arpl
mov
and
sti
mov
adc
or
jge
test
leave
or
sbb
pop
adc
add
sti
sub
call
and
or
cmp
ja
outsb
jne
mov
or
xchg
loop
lret
loope
push
lcall
pop
aas
rcr
loope
xchg
pop
lcall
loope
and
xchg
push
xor
mov
mov
inc
adc
mov
mov
cs
mov
mov
imul
inc
popa
sbb
sub
aam
sbb
pop
pop
lock
test
ret
inc
mov
and
lret
jae
mov
xorl
inc
ds
rcrb
push
loop
loop
sbb
orl
aam
fwait
cwtl
xor
inc
mov
add
dec
lea
bnd
popa
popa
mov
ja
cli
mov
hlt
call
aam
call
sbb
or
cli
lds
mov
push
add
push
addl
mov
call
jl
outsl
and
xor
fs
mov
or
xchg
mov
add
pop
sbb
mov
repnz
mov
shlb
or
push
mov
movsb
loop
das
push
mov
hlt
adc
cmc
imul
imul
es
jb
loope
pop
inc
mov
sarl
dec
int
cmp
popa
inc
jle
cltd
sbb
lods
arpl
dec
pop
cs
mov
or
push
inc
sbb
xor
aas
jbe
jne
add
cltd
mov
js
mov
and
push
push
xchg
insb
inc
sti
sbb
inc
test
jns
pop
pop
mov
cmpsl
xor
and
mov
addr16
stc
sbb
icebp
ss
mov
jbe
cmp
fidivrl
fldenv
xchg
pop
sbbb
xor
xor
sbb
test
and
sub
rorl
nop
pop
cld
shlb
call
sbb
adc
iret
lahf
xchg
mov
add
pop
or
add
sbb
sahf
pop
imul
scas
mull
jno
imul
orl
shlb
addr16
push
mov
push
out
nop
cmpsl
xchg
and
adc
lret
ja
mov
ret
shlb
xchg
sub
aaa
sub
popa
div
or
add
and
and
clc
in
mov
js
sub
pop
add
xor
dec
leave
mov
inc
xor
fistpll
push
popf
pop
mov
and
mov
sbb
adc
sarb
loopne
pop
and
mov
fld
mov
lret
inc
js
test
addr16
mov
sbb
or
mov
es
pop
inc
add
push
or
lahf
fnstcw
jne
jne
push
inc
sbb
fwait
imul
sahf
add
and
jge
cwtl
shlb
fbld
pop
sub
adc
std
lret
negl
loopne
icebp
out
nopl
rcr
or
sbb
xor
sbb
dec
push
jg
mov
push
inc
or
je
mov
xor
popf
daa
call
dec
push
sub
and
arpl
cmp
ficomps
cli
ret
loopne
adc
sub
inc
push
fwait
cmp
sub
cmpsl
and
sub
dec
jge
addr16
ret
xor
xchg
push
add
dec
xchg
in
icebp
push
movsb
adc
cltd
faddl
mov
sub
aad
mov
in
xchg
and
loope
jmp
mov
dec
or
out
call
imul
jbe
xor
jne
jae
out
push
jne
jp
jns
push
gs
repz
rcr
daa
test
cmp
push
adc
loop
mov
iret
dec
mov
loop
jl
push
mov
inc
cmp
jmp
popa
sub
xchg
jmp
jb
ret
mov
jno
scas
int
xchg
mov
imul
cwtl
ljmp
das
and
fimull
out
rcll
push
push
cmp
sbb
es
ret
push
push
mov
popa
mov
inc
and
dec
lods
push
and
xor
repnz
and
push
and
or
dec
and
push
add
jecxz
mov
insb
js
loop
rolb
lock
push
mov
mov
aaa
lahf
push
and
cltd
js
xchg
sub
and
xor
xor
and
ficomps
mov
inc
mov
inc
arpl
xor
push
xchg
mov
inc
or
insl
in
push
jbe
rclb
dec
mov
rol
je
lds
pop
repz
pusha
pop
xor
mull
lea
cmp
addr16
jecxz
xor
sub
icebp
push
push
push
dec
inc
xor
and
cmp
fisubl
in
enter
addl
out
add
xor
fbstp
jo
or
mov
inc
mov
jns
push
insl
and
movsb
adc
repnz
mov
pop
push
xor
repnz
sub
dec
mov
pop
push
mov
adc
popa
pop
pop
xor
es
std
loopne
imul
adc
fldenv
and
mov
mov
sbb
adc
and
int3
dec
cli
loop
mov
dec
es
mov
stos
jne
imul
sub
or
xor
fptan
pop
push
cmp
and
sub
or
addr16
xor
imul
cmp
cmc
sub
cmp
mov
lods
hlt
addr16
sahf
sub
movsl
rcr
pop
jecxz
xchg
mov
mov
out
ja
mov
jo
pop
cmp
or
lahf
mov
xchg
shl
repz
mov
xor
int
imul
push
jle
or
jmp
push
arpl
mov
or
test
push
shrb
jl
hlt
jo
sub
xchg
mov
lock
cmp
xor
mov
mov
mov
call
xchg
mov
dec
mov
inc
sarb
mov
xchg
scas
aam
loop
mov
cmc
fbld
popa
pop
cltd
stc
mov
sbb
sahf
adc
or
cmovno
mov
mov
stos
sbb
loop
cmp
fwait
pop
out
in
cmp
rep
pop
aaa
mov
sub
push
push
push
movsl
sbb
and
xor
adc
int
enter
movsb
cs
and
inc
popa
adc
jg
out
shlb
sbb
cmpl
jae
loop
lea
dec
dec
scas
stos
sub
xchg
mov
mov
sub
and
sahf
sub
jne
sub
sub
adc
adc
pop
push
lods
ljmp
dec
into
xchg
or
mov
jno
sbb
int3
hlt
scas
cmp
outsl
and
pop
cmp
notb
mov
jg
mov
push
push
push
cltd
jne
sub
jb
ljmp
sbb
inc
xchg
sahf
inc
push
sbb
scas
inc
ret
xor
daa
mov
sbb
and
lret
ret
outsl
jecxz
pop
sbb
mov
mov
jae
nopl
cmc
mov
mov
test
iret
mov
adc
push
mov
sbb
pop
adc
int
adc
ljmp
mov
inc
icebp
push
push
jp
repz
ds
sub
sub
mov
sbb
mov
pop
scas
xchg
jg
roll
cmp
gs
fsts
lock
xorl
jge
mov
int
add
pop
daa
sub
iret
mov
dec
mov
lods
jb
xchg
loopne
cmp
jno
sub
movsl
sbb
jns
sbb
cmpsb
and
and
loope
and
mov
aaa
jge
mov
test
sub
xchg
mov
mov
jns
insl
jg
test
pop
sub
mov
sbb
shrl
lods
lret
outsb
pop
gs
xor
div
rcll
push
mov
xchg
jns
daa
mov
je
push
data16
mov
inc
xchg
and
mov
or
jmp
andb
mov
iret
xor
mov
push
aad
and
outsl
int3
jno
lods
xchg
nop
psrld
xchg
fs
stc
inc
rcl
iret
popa
mov
xor
push
clc
out
outsl
sub
in
test
aas
fistpl
sub
jnp
outsb
ss
and
mov
add
inc
test
flds
adcb
dec
push
cmp
pusha
dec
fcomps
pop
xchg
pop
cmpsb
mov
xchg
in
and
jb
in
or
pop
shlb
in
mov
adc
outsl
xor
inc
loopne
scas
mov
ja
sub
adc
popa
scas
mov
jmp
or
into
loopne
sub
mov
push
push
pop
jecxz
int3
pop
sbbl
xchg
mov
dec
or
mov
mov
jo
icebp
add
or
or
cmpsb
and
and
cmp
and
push
push
push
inc
adc
mov
and
imul
cmp
icebp
std
mov
mov
out
sbb
or
sarb
dec
pop
nop
std
ds
xor
gs
inc
and
adcl
pop
inc
add
sub
data16
dec
mov
sbb
mov
inc
shlb
pop
or
lods
mov
aaa
push
jge
push
das
push
mov
aaa
outsb
out
loope
cmp
pop
push
or
in
into
loop
outsb
outsl
mov
int
sbb
inc
sbb
mulb
jb
mov
pop
dec
lods
js
popf
repnz
movsb
xor
lea
scas
jmp
repnz
stc
inc
fwait
bound
jne
pushf
mov
pusha
mov
lea
gs
ja
lods
jecxz
and
cltd
repz
cs
and
data16
xor
lcall
outsb
dec
xchg
sbb
aas
cmp
arpl
imul
mov
xchg
jns
dec
pop
adc
enter
xorl
std
nop
rorb
outsb
and
hlt
outsl
mov
test
and
ret
shrb
sub
and
push
pushl
jge
lods
pop
inc
jl
adc
out
or
push
pop
cmp
mov
lock
inc
aaa
or
cmp
ja
mov
mov
out
aaa
and
pmovmskb
iret
cwtl
imul
sub
cmp
push
stos
add
pop
or
jnp,pn
adc
call
sbb
pop
jecxz
mov
pop
loop
mov
sbb
popa
add
rclb
loop
cmp
xchg
push
leave
xchg
aam
divb
lret
fwait
sar
pop
lahf
lods
mov
push
stc
iret
repnz
cmc
or
stc
push
inc
sarb
or
sub
ret
jne
stc
sbb
popf
dec
mov
ror
jbe
frstor
leave
pop
movsl
push
call
cmpsb
addr16
mov
pop
adc
and
add
imul
adc
sti
outsl
push
sahf
cmp
nop
decb
rcrb
xchg
dec
aas
jno
sub
ds
adc
insb
cmpsb
mov
sub
sub
xchg
push
mov
in
cmp
lcall
aaa
inc
into
sti
jecxz
cmp
jmp
push
dec
scas
js
iret
popa
jne
adcl
cmp
sbb
out
jbe
push
inc
adc
mov
dec
push
lret
pop
bnd
notb
roll
xor
cmp
sub
shll
fwait
test
jmp
ss
icebp
jo
rorl
inc
addr16
sti
add
inc
shll
jne
lods
jge
mov
fnstenv
jmp
sub
fld
cmp
lret
or
in
pop
push
test
insb
leave
outsb
mov
jbe
ror
pop
outsl
mov
insb
mov
mov
insb
push
add
dec
mov
ljmp
pop
dec
cmp
out
and
pop
mov
sbb
pushf
sub
rorb
add
push
ret
daa
sub
jecxz
cmp
xchg
hlt
repz
in
ja
or
push
or
mov
xor
ret
sub
lret
mov
mov
cmp
mov
lds
adc
std
flds
add
cmp
pop
mov
pusha
add
test
mov
loope
call
inc
mov
nop
fldcw
push
and
or
outsl
mov
insl
pop
loop
outsl
xor
jns
inc
inc
sbb
fwait
lea
fucomip
dec
push
rclb
aaa
push
cmp
dec
dec
int
imul
xor
xor
jle
cmp
aas
xor
and
jae
ja
mov
pop
dec
mov
inc
or
stc
jge
dec
and
daa
loop
cli
cltd
dec
inc
sbb
inc
dec
jnp
mov
jl
into
aam
push
mov
mov
or
loop
cwtl
cli
add
f2xm1
sti
clc
mov
adc
xorb
fwait
imul
and
mov
pushf
sub
out
xor
cltd
fistl
test
adc
andl
aam
push
jecxz
call
aad
aam
loop
fs
shlb
mov
sub
inc
inc
add
cmp
sbb
iret
adc
outsw
sbb
insb
xchg
mov
pop
lods
or
cmp
mov
ror
jbe
jns
popa
inc
and
adc
fsts
sbbl
mov
mov
jne
popf
lret
test
mov
xor
sahf
adc
popa
add
popa
adc
addr16
fwait
xchg
loop
rcr
push
stc
rcll
and
cwtl
adcl
repnz
les
inc
mov
mov
cltd
sub
push
push
mov
mov
inc
sbb
inc
into
sti
sub
pop
inc
adc
popa
sub
popa
in
sarl
stos
ffree
movsl
push
adc
jo
xchg
push
cmp
adc
cli
lcall
les
sti
pop
push
pop
and
je
repz
and
rcll
xor
add
gs
push
sbb
insl
outsl
sub
lods
dec
mov
pop
popa
add
inc
xor
xorl
mov
roll
lahf
mov
mov
aaa
pop
jo
adc
mov
xchg
mov
jbe
mov
in
push
addr16
mov
push
mov
sahf
dec
and
adc
icebp
dec
pop
in
mov
mov
inc
push
sub
sbb
cmp
subl
inc
cmp
lcall
lea
movsb
or
movsb
mov
shll
xor
es
adc
lahf
call
dec
rolb
xchg
arpl
call
stc
arpl
sub
adc
pop
xchg
mov
adc
sub
stos
xchg
mov
rcl
inc
or
cmp
movl
inc
or
lods
cmp
addr16
sbbl
mov
xor
es
cmpsb
stos
mov
and
mov
in
lret
cmp
xorl
add
pop
xchg
pop
or
xchg
mov
pop
push
les
and
sub
mov
iret
xchg
push
js
jbe
out
data16
and
pushl
movl
sbb
fwait
or
xchg
les
mov
sub
outsl
and
sbbb
xchg
mov
sahf
outsl
in
loope
mov
mov
jns
mov
and
push
es
and
xchg
xor
add
mov
mov
push
mov
inc
or
xchg
addr16
sub
lods
dec
xor
bound
and
pop
jg
adc
and
mov
sub
imul
shrb
popf
sbb
in
or
inc
in
xchg
pop
xor
sbb
out
and
orb
lret
pop
pop
sbb
mov
pop
push
push
pop
jbe
and
or
icebp
leave
add
leave
pop
lahf
das
add
xor
mov
jns
lds
in
aaa
leave
lods
pop
sbb
adc
mov
mov
jecxz
iret
inc
out
in
pop
dec
stc
push
push
ds
iret
in
and
lea
iret
out
sti
in
sbb
mov
in
cmp
out
aad
jno
ljmp
xor
ret
pop
mov
xor
in
adc
push
mov
cmpsl
pop
call
lock
movsb
stc
leave
cld
ret
add
jbe
iret
sbb
int
mov
sbb
sub
dec
pop
xchg
mov
in
and
xchg
lds
xor
popa
pusha
inc
mov
inc
iret
mov
mov
jno
call
xchg
and
sarb
sub
cli
sbb
push
mov
sarb
sarl
adcb
lahf
xor
push
mov
xchg
inc
sti
adcb
ja
sbb
add
pop
inc
mov
in
mov
in
pop
sbb
adc
mov
pushf
jb
sbbb
loop
sub
and
sti
add
xchg
push
test
push
loope
int3
inc
mov
dec
aad
rcl
test
xchg
bound
out
frstor
push
jp
jle
sub
cli
cmp
push
inc
rorl
lcall
stc
fimull
mov
mov
out
loopne
xorb
loope
hlt
pop
sarl
sub
call
sub
push
xor
push
pusha
mov
adc
nop
sub
call
xor
sbb
rcll
cmp
inc
fnstcw
mov
cmp
stos
adcb
jnp
sbb
insl
add
mov
mov
inc
rorl
sti
jmp
repz
outsl
jbe
pop
xor
aad
cmp
inc
xor
inc
xchg
cmp
cmp
mov
push
mov
mov
mov
mov
and
mov
pop
ja
add
add
or
mov
push
movsb
dec
sbb
fsts
jb
popa
mov
mov
pop
loop
mov
push
pop
sub
push
xor
out
inc
and
jne
sub
mov
repnz
inc
cmp
stc
pop
cmp
aad
push
xchg
or
icebp
loop
xchg
inc
xorl
push
cmpsl
sbbl
push
cmp
and
mov
nop
lret
sahf
or
repz
jnp
mov
popa
mov
sbb
pop
mov
aam
loop
scas
std
cld
ljmp
sub
xchg
pop
cmpsl
ficoml
cmp
pop
adc
push
in
icebp
cltd
stos
inc
push
sbb
or
jo
add
dec
pushl
imul
xchg
mov
jo
inc
jnp
push
add
fsubl
stos
mov
in
ror
and
add
dec
pmullw
mov
xor
mov
mov
mov
sbb
add
mov
clc
add
ret
cmpsb
adc
pop
inc
outsb
or
mov
jb
in
pop
jl
mov
mov
xor
mov
cs
cmp
jb
clc
pop
mov
les
jb
adcl
mov
xchg
sbb
test
xchg
in
in
fistps
and
ficoml
in
imul
pusha
and
pushl
inc
adc
clc
push
xor
sti
inc
cmp
mov
and
lea
imul
inc
lcall
clc
push
pop
add
fnstsw
cmp
adc
mov
inc
xchg
movsb
push
add
mov
das
or
out
incl
xchg
addr16
cld
and
cld
or
pop
jnp
pop
jb
ja
out
mov
test
sahf
ds
mov
xor
jo
movsb
mov
inc
test
or
cltd
push
xchg
sti
dec
sbb
imul
or
add
and
adc
cld
cmp
xor
mov
shl
lahf
adc
adc
and
push
xchg
stc
aas
mov
fsubl
aad
sub
inc
fdivl
movsl
ljmp
ja
popa
js
xchg
xorl
sub
pop
iret
pop
pop
cmp
xchg
lods
or
or
ficoms
shlb
cmp
pop
and
cmp
cltd
sub
pop
fnstenv
icebp
dec
xchg
dec
js
aad
repz
ja
mov
sti
outsb
dec
mov
mov
or
xchg
jp
xchg
pop
adc
mov
adc
sbb
aad
gs
pop
xchg
or
mov
pop
add
sub
inc
xchg
shrb
push
xchg
mov
push
dec
jno
clc
inc
xor
jb
movsb
jbe
xchg
mov
dec
js
loopne
loope
mov
dec
dec
and
mov
fnsave
jo
mov
push
cwtl
sub
cs
xchg
inc
add
add
jb
call
mov
xchg
xor
aad
je
inc
mov
call
mov
sub
xchg
lret
mov
xor
xor
inc
and
dec
je
xchg
sub
repz
ja
push
fisttpl
je
push
mov
sbb
xchg
inc
push
loop
adc
ret
inc
mov
mov
xor
les
ja
mov
inc
or
rcrb
shrb
flds
jb
lock
mov
movsb
dec
pop
popa
sbb
pop
adc
sbb
test
sub
je
imul
pop
xor
xor
test
movsb
mov
das
sbb
add
cmpb
cwtl
xchg
outsb
dec
mov
rcll
inc
mov
mov
mov
das
iret
pop
push
cli
in
cmpsl
outsw
pop
lods
lock
adc
or
mov
or
imul
dec
lcall
cltd
pop
insl
mov
pop
inc
jo
sub
or
clc
lods
loop
aam
xchg
adc
mov
leave
push
inc
sbb
sbb
sub
add
in
test
shr
loope
das
in
inc
sbb
in
mov
ret
and
xor
sbb
or
pop
xor
push
and
ret
aas
push
mov
xchg
inc
xchg
lds
xchg
icebp
sub
inc
cwtl
jne
xor
jecxz
and
and
push
mov
lret
jecxz
add
shrl
scas
jne
shlb
ljmp
xlat
call
inc
cmp
cs
sub
sbb
add
pop
test
sub
xor
mov
loope
stos
test
leave
subl
pop
test
and
sbb
mov
loop
arpl
fs
mov
sbb
pop
bound
dec
or
repz
xchg
add
movsl
addl
xor
xchg
fbstp
lahf
dec
and
loop
inc
xchg
inc
xchg
imul
push
adc
pop
jl
fbld
sarb
sub
loope
xor
xchg
xchg
clc
andb
xchg
sti
pop
mov
or
inc
iret
adc
rcr
mov
jnp
xchg
adc
inc
push
xor
shl
inc
in
aam
pop
push
and
inc
sbb
aam
jmp
out
sahf
sub
out
and
inc
into
mov
rolb
std
loop
xchg
andb
mov
xchg
enter
imul
jne
shll
or
xor
hlt
ss
xchg
lock
shl
mov
jbe
push
repnz
dec
movb
sub
pop
xor
loope
fsub
inc
mov
sbb
mov
dec
push
jge
mov
lods
and
xchg
pop
xor
mov
repnz
out
mov
inc
lds
sti
in
wbinvd
das
sbb
mov
movsb
mov
mov
or
clc
in
cmp
ret
mov
mov
cmp
pop
and
cltd
push
ret
mov
gs
add
sub
into
pop
sti
std
push
fstpl
lea
sbb
inc
inc
mov
mov
jp
scas
xchg
mov
adc
push
sbb
fistpl
shll
pop
xchg
mov
sub
sti
add
sbb
call
ljmp
sub
add
xchg
clc
mov
divb
fnstsw
and
push
repnz
mov
xor
lods
push
in
xor
xchg
lea
sbb
pop
and
xor
fld
repz
push
cmp
repnz
movsb
adc
int3
stos
mov
xchg
lods
cmpsb
cmp
repz
sbb
dec
sbb
stos
fwait
mov
arpl
mov
lret
inc
inc
sbb
jo
cltd
sbb
xchg
sub
shll
and
in
dec
dec
and
mov
push
inc
sub
xor
sti
xchg
rcrl
stc
arpl
jb
xchg
xchg
out
pop
jb
jo
xor
mov
xchg
inc
loop
adc
bound
psubusw
xlat
cld
sub
or
addr16
and
mov
loop
jae
rcrb
or
call
xorl
push
dec
pop
xlat
sbb
or
std
inc
insl
in
xchg
push
sbb
mov
inc
das
mov
or
loope
push
xchg
loope
icebp
cwtl
or
outsl
cli
stos
sub
mov
xchg
push
shll
test
inc
add
js
outsl
adc
shll
jb
shld
mov
popf
icebp
mov
orl
ja
sub
in
inc
or
pop
pop
gs
mov
lds
and
cmp
xor
sub
cmp
inc
sbb
insb
jae
push
fs
ret
and
andl
push
lea
xchg
jecxz
sbb
arpl
adc
jno
push
jns
push
bnd
xor
loopne
mov
add
push
sub
in
cmp
jb
jge
out
sbb
push
push
sti
insb
add
lcall
sbb
cmp
ljmp
mov
xchg
fisttpl
xor
addb
xchg
mov
dec
xlat
aad
inc
xchg
xchg
xchg
aam
lret
mov
adc
pop
sahf
xchg
in
les
push
in
jne
cmpsb
xor
mov
insl
or
out
inc
xchg
aas
bound
pop
xor
popa
add
pop
mov
inc
mov
jae
inc
das
push
sub
xchg
jmp
out
clc
adc
mov
mov
sti
cmp
mov
shll
mov
cmp
xchg
xor
stc
dec
xchg
xorb
jns
aad
cmp
cs
or
aam
add
xor
jmp
mov
call
pop
call
xor
cmpsl
ret
sahf
cmp
shl
jl
and
ds
orb
xchg
daa
ret
jecxz
fisubl
push
nop
into
ret
sbb
mov
adc
popa
mov
aas
and
ret
sbb
mov
and
or
mov
push
shrl
xor
shll
fidivrs
popl
sub
xchg
xor
push
cld
gs
cmp
rcrl
cmpb
sbb
sub
sbb
jns
test
xor
call
jno
mov
rcll
jnp
mov
and
xchg
fimuls
das
pop
stc
ljmp
stos
leave
or
mov
xchg
push
dec
shlb
xchg
push
dec
fldenv
lret
sub
imul
lcall
les
aad
lahf
adc
mov
call
sub
fisubl
mov
je
add
push
cltd
popf
cltd
sbb
in
inc
out
negb
gs
data16
ss
xchg
or
jl
mov
fmull
xor
cli
pushf
fidivs
mov
inc
cmp
jle
mov
cmp
xchg
push
and
pop
push
fidivrl
sbb
sub
icebp
lahf
xchg
addr16
mov
pop
inc
pop
imul
sbb
push
popa
fwait
mov
ret
push
sub
fsubs
and
test
jecxz
scas
cmp
xor
movsl
sbb
rcll
out
rorl
push
sbb
or
cmp
nop
push
jp
lahf
mov
pop
mov
xor
cmp
inc
cmpl
fsubrl
or
shlb
shll
pop
in
push
imul
ret
or
fsts
addr16
pop
add
or
jl
sub
xchg
jns
mov
xor
pop
cmp
and
repz
fbstp
or
pop
push
and
dec
mov
bound
lods
loop
jmp
mov
shll
mov
test
mov
dec
imul
or
test
lods
adc
add
stc
and
sub
sub
stos
gs
adc
cltd
cmp
loop
add
daa
imul
mov
mov
mov
and
test
xor
int
push
test
jge
add
fldenv
add
push
out
add
mov
je
jo
in
lods
mov
push
mov
aaa
ds
and
std
jge
push
sub
aaa
cmp
pop
loope
sbb
jno
sub
lods
ljmp
mov
xadd
sti
cmc
aad
xor
ds
clc
loop
push
rol
xchg
sub
in
cmpsl
repz
and
aaa
mov
sysexit
adc
mov
stc
std
mov
aad
sbb
mov
subb
popa
cwtl
xor
sub
ficomps
mov
cmp
jbe
ljmp
and
lea
test
push
jl
arpl
mov
aas
mov
aas
dec
xchg
je
mov
je
sbb
add
adc
fsts
dec
adc
movsl
cld
mov
mov
dec
sbb
das
sbb
movsl
mov
push
jno
aaa
sub
shll
bound
xchg
add
push
xchg
mov
js
jecxz
jns
dec
not
cmp
das
test
cltd
inc
pop
pop
out
and
sub
xor
repz
std
mov
pop
inc
inc
pop
cmp
push
in
push
div
daa
addr16
jnp
mov
cmp
int
inc
fucom
jle
cmp
jne
mov
xor
fcomps
mov
jb
sbb
sarl
sbb
mov
xor
mov
xor
cmp
push
cmp
pop
call
jne
repnz
xor
dec
jle
test
sti
lcall
fdivs
xor
mov
cmp
arpl
lcall
fcoml
mov
or
push
lock
es
leave
adcl
in
add
push
mov
mov
repnz
ds
out
mov
es
daa
out
jae
int
insl
mov
or
gs
inc
dec
jbe
ja
xchg
push
sbb
mov
pop
lods
bound
push
sub
insb
jbe
divl
jl
add
rcll
sbbl
inc
add
jno
call
fs
push
dec
stos
and
jl
rorl
mov
sbb
roll
cwtl
btr
lcall
push
and
push
mov
loope
vrcpps
aas
in
xchg
rcrl
test
ljmp
or
pop
or
daa
mov
roll
xor
and
cmp
mov
xor
xchg
mov
push
inc
imul
test
test
sub
push
sbb
popf
sbb
sbb
pop
mov
sbb
je
and
mov
into
scas
in
leave
pop
sbb
xor
xor
in
scas
jecxz
xor
loopne
sbb
mov
pop
sub
faddp
and
dec
add
add
addl
lret
and
pop
fidivrl
cmp
mov
loopne
jg
movsl
cltd
test
addr16
cmp
dec
mov
cs
into
push
push
pop
and
fstl
jae
mov
inc
jno
xchg
push
xor
gs
push
es
std
into
pop
mov
mov
adc
xchg
and
mov
push
adc
mov
cmp
inc
aam
sahf
mov
mov
jg
out
xchg
imul
or
lahf
xor
pop
ret
jp
fistps
sub
jge
loop
xor
test
rcll
xor
mov
push
loop
or
testl
dec
addb
inc
cld
mov
cmp
icebp
and
lcall
jae
sbbl
add
insb
push
out
arpl
negl
cmp
and
sbb
loop
cli
adc
add
psadbw
rclb
movsl
jae
rorl
mov
push
mov
sub
loop
push
out
fadds
les
add
mov
stc
sub
and
hlt
cmp
loop
sti
or
add
xor
push
divl
fnstcw
sub
test
sbbb
lds
enter
dec
and
sbb
and
sbb
aad
jbe
cmp
sbb
int
cmp
xchg
lods
bsr
popf
sub
and
mov
push
and
and
push
test
pop
daa
push
iret
sub
repnz
idiv
pop
cld
xor
pushf
xor
sub
data16
shr
ja
jae
ret
cli
mov
mov
bound
mov
push
mov
stc
push
inc
jp
adc
xchg
popa
dec
xchg
pushf
xchg
push
adc
mov
leave
sub
sbb
xchg
sbb
mov
cmpsb
cltd
popf
mov
mov
xchg
jbe
push
mov
or
cmp
movsb
xor
mov
jno
std
sbb
rcll
cmpsb
cmp
out
and
sub
xchg
push
outsl
mov
xor
and
in
dec
and
xor
sbb
xchg
mov
push
mov
xor
icebp
das
mov
fistpl
lea
jno
sbb
and
mov
mov
push
loopne
inc
dec
insl
lods
daa
push
xlat
or
pop
sbb
and
cmp
mov
adc
xor
stc
aaa
fwait
fwait
pop
and
inc
inc
xor
gs
ret
sarl
mov
jnp
call
nop
lahf
cmp
adc
outsl
dec
xchg
adc
data16
icebp
mov
or
sbb
mov
inc
imul
cmp
mov
xchg
cmp
sub
xlat
inc
cmp
push
pop
adc
sub
sbb
repnz
into
out
sbb
js
inc
jae
leave
ds
js
push
and
sbb
loope
jmp
cmp
pop
push
scas
dec
or
lds
js
roll
xchg
push
in
insl
mov
mov
dec
mov
xor
movsb
add
xor
jb
inc
mov
aaa
pop
mov
jp
mov
or
sti
adc
jg
int
jb
adc
add
sub
shr
jno
popf
xchg
xor
sub
dec
pushf
cwtl
movsb
dec
test
popf
and
and
xor
fists
es
mov
adc
mov
outsl
inc
pop
arpl
loopne
fbld
sti
and
push
xchg
es
push
push
notb
adc
imul
xchg
in
push
push
xchg
jno
in
cmp
insl
popa
and
sbb
pop
mov
sahf
and
push
js
inc
cmp
sbb
sub
sub
cmp
mov
xor
xchg
lock
push
dec
mov
shrb
mov
push
inc
sub
xchg
jg
mov
xor
inc
ss
loopne
cmp
das
cmp
sbb
adc
cwtl
iret
call
pop
lods
das
hlt
addr16
adc
mov
inc
push
mov
popf
xchg
popa
mov
dec
test
sbb
sbb
es
xchg
push
push
xchg
hlt
ss
aaa
sbb
cmp
add
lret
cmp
in
inc
adc
hlt
adc
int
xchg
and
mov
out
sub
jb
cmp
ret
xchg
jecxz
fwait
cmp
dec
cmp
dec
push
lds
mov
mov
mov
jmp
xchg
outsl
mov
ljmp
lret
into
pop
pop
mov
inc
bound
dec
sahf
adc
xchg
adc
cmp
stos
add
or
push
cltd
iret
push
add
inc
int
cmp
daa
decb
pop
roll
test
or
or
adc
xchg
mov
and
lahf
pop
inc
pushl
xor
xchg
mov
loop
and
jno
mov
xorl
sbb
xchg
icebp
ror
xor
push
add
movsl
and
xchg
adc
sbb
nop
mov
mov
pop
or
push
lods
movsl
xor
fnstcw
push
ss
cmp
popa
jecxz
xor
inc
cmp
adc
dec
sbb
sbb
cltd
or
xor
pop
lcall
adc
mov
xor
cltd
enter
pop
aas
mov
test
xchg
and
jo
fsubs
xor
loopne
xor
and
iret
adc
or
into
xor
mov
adc
mov
xchg
adc
xor
xchg
lods
or
test
sub
cmp
push
dec
mov
sub
mov
es
pop
mov
imul
xchg
sub
xor
dec
cmp
jb
dec
jmp
insl
sbb
pushf
pop
xor
mov
cmp
imul
pop
fwait
inc
inc
inc
fwait
mov
sahf
jnp
pop
sub
push
and
popf
rcll
cmc
lock
in
fwait
jb
cs
movsl
push
pushf
shll
and
mov
pop
icebp
or
mov
mov
dec
xor
adc
mov
cmp
leave
xor
js
xchg
xchg
xor
mov
sbb
adc
sti
adc
adc
and
fnstcw
dec
pop
pop
pop
cmpsl
push
sub
push
push
jno
and
lods
nopl
xor
popa
jns,pn
mov
imul
adc
push
ja
cmp
mov
lods
test
das
je,pn
lods
sbb
mov
mov
jo
rcrb
jecxz
pop
je
int3
aam
jns
rorb
fwait
stos
xor
xor
cwtl
mov
int
pop
int3
and
rclb
push
std
sub
mov
cmp
xor
sti
rorb
dec
mov
mov
xchg
ss
das
sub
mov
lret
popf
cmp
pusha
adc
int
sbb
or
pop
or
sub
mov
and
jge
stc
out
lahf
arpl
fwait
or
or
loopne
orb
pop
nopl
xchg
sbb
xchg
add
mov
xor
sbb
in
push
gs
push
popa
test
jp
pop
sub
pop
and
sub
jge
pop
clc
dec
push
xor
inc
or
iret
shlb
and
gs
mov
aaa
jns
and
movsl
cmp
push
xlat
movsb
imul
jo
es
leave
stos
sti
push
movsl
inc
mull
ror
jp,pn
mov
cli
cmp
cwtl
scas
stc
add
xchg
adc
dec
jmp
int
xlat
mov
and
add
cmp
je
out
mov
lret
sbb
sbb
test
push
push
loopne
push
stos
push
das
xchg
pusha
mov
test
inc
js
enter
cmpsb
mov
mov
or
add
sub
or
mov
daa
jl
jne
ds
or
push
adc
ljmp
xor
adc
mov
insb
hlt
fwait
movsb
add
andl
cmp
fimuls
mov
cmp
aaa
mov
jnp
push
push
gs
scas
repnz
pushf
jne
dec
pop
fisttpll
ds
lcall
adc
adc
adc
fisttpll
fwait
loope
inc
cmc
insl
xor
out
xchg
jle
pop
xor
fwait
add
push
mov
jp
xchg
and
xchg
into
rorb
das
ret
mov
push
cwtl
mov
clc
lods
out
fcomip
sti
cmp
fmull
sti
arpl
or
loopne
scas
cwtl
xor
movsl
jo
xor
sub
fwait
jmp
mov
sbbl
setb
or
pop
nop
xor
xor
mov
or
popf
sub
cmpsl
adc
aam
fcoml
jge
sub
xchg
push
cmp
xchg
sbb
pop
sbb
repnz
xchg
adc
je
xchg
jbe
mov
dec
shrl
sub
insl
jp
mov
movsb
pop
mulb
rcll
adc
fistps
sar
repnz
sti
dec
scas
mov
sub
jle
cmp
xchg
lods
es
lahf
mov
sub
mov
and
sar
dec
jg
mov
lods
xchg
xor
mov
pop
ret
sti
popa
call
adc
jecxz
xchg
mov
in
int3
cmc
pushl
xor
adc
in
dec
cmp
mov
dec
popa
cli
icebp
leave
sbb
sub
adc
cmp
and
xchg
adc
out
cltd
aam
outsl
fldcw
xchg
in
sbb
cmpsb
push
ds
ds
xor
xchg
sub
inc
cmp
mov
outsl
xor
mov
inc
or
push
jnp
and
xor
icebp
mov
pop
xor
fwait
push
out
out
movsl
jmp
pop
and
cmp
pop
sti
daa
or
inc
and
mov
add
lods
and
jae
pop
lahf
pop
xor
xor
push
mulb
in
pop
jg
das
das
lods
xor
jne
dec
sub
std
out
push
jo
sbb
icebp
jg
es
dec
lods
and
push
jnp
or
sbb
daa
in
mov
xor
es
cmp
test
adc
sub
addl
popa
inc
sbb
pop
push
xor
mov
jno
call
push
inc
cwtl
jg
inc
adc
and
mov
push
jle
jmp
add
out
jne
lea
and
dec
dec
cs
outsl
pop
push
into
leave
sbb
and
push
adc
pop
mov
mov
inc
and
outsb
js
and
mov
pop
xchg
fnstenv
push
bound
imulb
shrb
or
lret
mov
dec
popa
aaa
imul
mov
pop
loop
xor
mov
push
push
mov
xor
push
cmc
ret
inc
dec
mov
call
add
popa
fadd
xchg
and
into
test
mulb
pop
mov
daa
push
mov
aas
pop
out
enter
sub
push
lods
je
and
enter
stc
jmp
and
sahf
rorl
je
xor
mov
sti
mov
sbb
fscale
mov
push
xchg
aas
aad
xchg
lret
flds
mov
repz
dec
in
pop
fnstsw
and
cmpsb
xchg
inc
add
insl
cmp
jecxz
shll
push
aad
das
je
xor
rcrl
pop
cmpsb
push
inc
inc
mov
lds
xchg
es
ret
dec
sbb
push
aad
or
push
imul
scas
es
xchg
sti
mov
mov
dec
and
xchg
and
adc
es
and
in
dec
insl
mov
leave
scas
add
cmpsl
fwait
cmp
mov
mov
sbb
scas
push
repnz
or
out
sti
insl
inc
mov
and
fs
jbe
insb
imul
or
repz
push
leave
jge
sub
or
lods
das
and
xor
shrb
loop
adc
mov
pop
inc
test
jge
pop
sub
push
ss
add
leave
imul
cmpsb
inc
outsl
mov
mov
cmc
and
orl
push
daa
cmp
aad
sub
icebp
icebp
cmp
mov
add
and
sub
cmp
bound
aam
cmp
mov
mov
stc
mov
mov
inc
aaa
fistpll
outsl
pop
pop
inc
push
cmp
popa
jecxz
jbe
int
xchg
or
dec
cmp
inc
push
and
fs
push
ss
mov
pop
and
xor
mov
fcoml
push
push
sbb
sbb
inc
adc
and
and
sub
fwait
das
push
pop
mov
mov
sbb
mov
popl
mov
test
andb
jbe
and
repnz
repz
sub
imul
dec
cmp
sbb
fs
inc
aaa
and
jp
fnstsw
mov
aaa
xchg
push
xchg
push
mov
dec
sbb
idiv
dec
mov
sti
sbb
sbb
or
adc
jg
adc
adc
adc
xlat
adc
adc
pop
lods
pop
mov
test
xor
inc
das
aaa
pop
mov
sbb
dec
mov
mov
dec
out
add
mov
daa
xchg
in
outsl
sbb
inc
jle
sbb
inc
inc
test
pop
pop
in
repnz
rcrb
das
xor
lods
mov
xchg
push
lahf
mov
in
mov
or
xchg
pop
mov
xchg
dec
sahf
dec
std
sub
adc
pop
adc
daa
xchg
xor
pop
sub
insl
or
imul
or
push
out
loop
movsl
pop
xchg
imul
mov
sub
in
fwait
popa
test
pop
jae
or
iret
inc
das
jbe,pn
call
push
ret
sti
inc
pusha
ret
push
test
push
ficompl
outsl
or
mov
shrb
xchg
pop
aam
ret
mov
ret
and
add
lods
jno
cmp
fldt
mov
jmp
addr16
dec
push
cmp
mov
movsl
pop
and
xchg
jecxz
idivb
push
ja
cmp
cmp
push
dec
xor
bound
and
and
add
mov
push
loop
pusha
data16
and
stos
and
popa
lahf
lret
mov
adcb
sti
add
add
xchg
fdivp
cltd
mov
xor
popa
sbbb
xor
cmp
test
mov
das
push
aaa
xor
outsl
cmp
mov
ds
mov
mov
pushf
aaa
xor
pop
xchg
stc
imul
xchg
cmp
xor
push
hlt
push
fdivs
pop
in
xorl
xchg
mov
pop
rorb
cmp
popa
and
inc
and
push
sub
fwait
mov
add
jbe
lea
xchg
sub
mov
xchg
sbb
sbb
inc
pusha
outsl
sarb
sub
add
stos
and
and
jns
clc
in
sbb
cwtl
pusha
xchg
jecxz
or
cmp
xchg
test
ja
inc
inc
mov
adc
pop
lretw
fistl
mov
insl
cmp
sti
inc
pop
js
sbb
push
pop
or
pop
in
jmp
movsb
sbb
mov
jnp
mov
cmp
xor
in
add
mov
adc
out
es
jp
inc
popf
addl
shlb
adc
mov
cmc
and
xor
pop
es
mov
add
loope
push
inc
filds
imulb
push
clc
cmp
dec
das
xor
adc
add
ja
rolb
loope
jp
fildl
jno
push
outsl
sbb
dec
jno
loopne
pop
outsl
pop
iret
xchg
cmpsl
fistpl
fwait
mov
xchg
push
int3
push
mov
lods
stos
mov
add
mov
enter
shll
sbb
lods
pop
jl
fwait
bnd
fistpll
pop
subb
dec
imul
xchg
inc
sub
cmpsl
mov
lahf
and
iret
xor
and
mov
test
xchg
popf
xchg
push
cmp
rdtsc
push
mov
mov
out
ret
mov
loop
test
daa
pop
xor
in
adc
test
in
sub
jne
ret
or
rcrl
dec
push
jne
and
movsb
clc
mov
cs
es
stos
sbbl
sar
push
addr16
bound
stc
add
fisubrl
inc
cltd
adc
jp
int
bound
pop
push
daa
js
and
jbe
int
add
cmp
repz
sub
rorl
xor
pushl
jb
jns
sub
and
lret
shrl
test
gs
outsl
xor
decl
ds
orl
ss
pop
jne
xor
xchg
mov
push
or
sti
or
imul
mov
lea
and
xor
call
and
adc
and
mov
jns
leave
lcall
das
cwtl
popf
xchg
add
shrl
mov
mov
das
pop
and
or
imul
adc
icebp
das
inc
lret
push
sbb
mov
fs
xor
ror
icebp
mov
pushf
aad
fwait
pop
xor
xchg
ret
daa
fidivrs
and
sbb
push
push
sub
scas
sbb
mov
jmp
or
jl
scas
xchg
mov
int3
and
rorl
adc
movsl
das
sub
andl
add
adc
scas
jns
pop
rorb
add
cmpsl
sti
out
mov
paddq
xchg
sbb
loope
stc
and
mov
dec
outsl
psubb
push
cld
stos
ljmp
test
scas
sub
mov
repnz
shl
pushf
xor
push
cli
pop
inc
lods
fwait
jecxz
gs
add
daa
aam
xchg
jnp
aaa
inc
mov
mov
mov
rcll
cmp
add
scas
dec
sub
stos
shll
inc
dec
mov
fnstenv
jae
inc
push
popf
cmpsl
popa
call
add
pop
adc
and
sbb
stc
sbb
xor
ret
ret
lret
inc
outsl
xor
push
pop
jl
adc
ljmp
adc
ds
add
push
mov
mov
imul
mov
sub
add
lock
jl
daa
and
xchg
sub
insb
nop
sub
insb
sbb
pop
sahf
sub
mov
inc
add
xchg
add
and
movsb
dec
xchg
out
mov
pushf
popf
in
ljmp
push
inc
adc
clc
sti
sub
inc
and
mov
lock
sbb
and
sbb
xor
lcall
sbb
push
jno
cmp
add
icebp
popa
xchg
pop
push
xchg
out
and
imul
push
pop
roll
jg
loop
jno
mov
loope
push
shll
pop
pop
enter
ss
xor
pop
sub
mov
std
scas
and
push
xchg
xchg
std
push
sbb
arpl
aaa
sub
call
cmp
notb
scas
pop
popf
aas
shlb
rorl
adc
sarb
sub
movsb
sbb
imul
aad
scas
push
cmp
and
outsl
stc
fs
xchg
push
psllq
ja
cmp
enter
bound
mull
test
xor
xor
sbb
in
jl
and
xor
rcll
sub
in
cld
adc
sub
xor
cwtl
adc
out
cmp
adc
mov
xchg
stc
int3
addr16
add
pop
pop
fisubrl
cmp
addr16
and
and
and
jno
call
and
sbb
or
xor
mov
jo
and
addr16
orb
mov
loop
xor
popf
pop
int
out
pop
sub
cmp
sbb
jno
sub
ja
mov
lock
push
adc
xchg
loop
pop
lahf
and
push
sub
push
sahf
pop
sub
out
xor
leave
sbbb
xchg
jne
and
outsb
mov
mov
fsts
xor
and
cld
adc
lods
inc
testb
fwait
dec
sub
ljmp
std
int
sub
jbe
enter
sub
scas
xchg
ja
jo
push
jge
imul
std
cmp
or
pop
adc
xchg
sbb
xchg
push
cmc
cmpsb
ret
dec
push
jno
xchg
fcomps
pop
pop
mov
std
mov
cmp
bound
mov
xor
movsb
jbe
pop
cmp
adc
sbb
imul
test
bound
repz
mov
test
jno
test
add
ja
sub
aam
popa
popa
cmp
lods
xor
imul
and
mov
sbb
xor
mov
jbe
iret
push
cmpsb
mov
pop
push
xor
pop
jnp
xchg
imul
pop
sbb
pop
arpl
rclb
aaa
adc
fwait
rclb
mov
cmp
xor
or
nop
das
cmpsb
inc
adc
sub
pop
es
bound
mov
stc
jmp
lea
rcrl
mov
mov
and
xor
pop
cmc
adc
mov
sub
lods
loop
pop
mov
sbb
mov
mov
inc
xor
loop
jne
xor
test
xchg
or
sbb
std
imul
icebp
sbb
xchg
popa
les
cmp
mov
mov
popf
adc
sub
sbb
jae
xchg
mov
shll
mov
push
bound
popa
mov
jmp
push
push
sub
test
mov
xchg
dec
negb
movsl
popa
mov
aas
mov
mov
lahf
loop
and
adc
and
and
shll
adc
in
mov
dec
and
pmaddwd
repnz
dec
jge
mov
imul
int
ret
std
mov
cs
in
dec
and
inc
ret
dec
cmp
and
cmp
push
push
jae
popa
cmc
ljmp
jno
pop
es
dec
mov
jg
push
xchg
cmp
pop
push
sub
data16
jae
mov
mov
shrl
push
mulb
jecxz
jp
push
stos
push
incl
cmp
lcall
xchg
sarl
mov
addr16
ficomps
sahf
loope
lahf
std
int
clc
sbb
mov
loop
sub
or
test
popf
jno
pop
cmp
or
mov
xor
call
dec
les
mov
bound
in
sbb
ret
in
int3
dec
push
int
mov
orl
add
mov
and
dec
ja
xchg
int
loop
inc
pushl
and
sub
enter
xchg
ret
xor
jnp
lret
jg
xor
lcall
int3
mov
in
in
js
xor
repz
ss
fdivr
popf
and
adcl
xchg
jg
push
ret
imul
jge
test
jns
inc
or
mov
into
or
xchg
mov
adc
jns
ficoms
ret
mov
test
mov
data16
mov
mov
aas
sub
xor
xchg
inc
loop
pminub
mov
jl
mov
mov
orl
mov
push
xor
movsb
sub
pop
mov
and
xor
cmp
pop
or
nop
jg
add
dec
sbb
sub
mov
aam
mov
add
mov
push
sub
pop
cmp
mov
or
mov
sub
inc
push
inc
adc
and
adc
jle
scas
fcoms
imul
pop
sub
pushf
sahf
leave
aaa
mov
pop
mov
and
or
cmp
or
rorb
sar
cmp
push
call
sbb
fldenv
sbb
sbb
imul
adc
jmp
jns
aam
pop
negb
xor
mov
icebp
inc
movsb
and
mov
cmpsl
mov
mov
dec
xor
mov
xchg
sbb
sbb
or
testb
pop
test
adc
adc
adc
aas
loop
adc
mov
xchg
adc
pop
rcll
xchg
jp
test
ds
or
insb
pusha
pusha
lds
enter
cmpsl
sbb
xor
shll
mov
and
sbb
popa
mov
mov
xchg
sbb
fcomps
test
push
pop
iret
mov
xchg
dec
cltd
mov
add
inc
fadds
das
aaa
sbb
mov
or
pusha
xchg
int
sti
out
pop
xor
or
lea
jmp
pop
ret
xor
mov
je
test
or
xor
lods
xchg
cli
movsl
testl
add
cli
movsl
arpl
push
outsl
shll
lret
adcl
popa
adc
add
stos
sub
ret
add
push
push
xchg
xchg
fnop
jb
add
orl
sub
xchg
rol
push
pop
jp
inc
pop
sub
inc
aad
pop
sti
roll
sbb
and
push
nop
iret
je
push
or
xor
aad
rolb
cwtl
rcrb
cli
xchg
icebp
or
loop
or
inc
xor
loop
sahf
mov
shll
and
sub
daa
in
inc
xchg
jbe
cmp
iret
ss
sbb
adcl
fstps
pop
add
stc
rep
cltd
je
scas
adc
inc
pop
xor
pop
mov
mov
and
mov
loope
into
cmp
leave
and
mov
loopne
xor
pop
outsl
xor
cmp
insl
jmp
dec
sub
pop
ds
mov
inc
fcoms
mov
data16
inc
mov
sub
mov
movsl
subl
mov
jne
outsb
jge
shll
aam
call
movsl
and
loop
pop
sub
dec
daa
mov
popa
push
xor
sbb
mov
sub
xchg
popf
jmp
add
jnp
fwait
cs
mov
lahf
mov
bound
sbb
jecxz
jae
stc
xchg
mov
pusha
lret
shl
xchg
adc
mov
imul
dec
popf
jo
push
jmp
sub
push
outsb
xchg
pusha
cmp
test
movsl
xor
leave
and
push
loope
adc
xor
mov
jp
adc
jns
or
sahf
inc
subl
push
ljmp
adc
cmp
sti
xchg
sbb
jmp
sub
lea
mov
test
push
pop
mov
push
scas
mov
push
into
push
scas
jno
stos
out
jne
mov
and
xchg
jle
sbb
pop
jns
shrb
mov
jl
stos
cwtl
sti
test
leave
mov
xor
cmpsl
int3
je
mov
jne
and
repz
push
pop
push
jge
call
mov
outsb
stos
jo
push
fucom
sbbb
rcll
popa
cmp
and
lcall
sbb
pop
jb
mov
pushf
mov
push
insb
les
mov
ja
gs
jae
pop
movsb
push
push
adcb
lahf
xchg
stos
push
dec
push
cmpsl
xchg
cmp
cmpsb
mov
xor
or
mov
and
pop
push
icebp
cmp
dec
es
pop
xor
and
push
inc
jecxz
ret
xchg
mov
sub
jno
mov
aaa
int
xchg
or
and
mov
insb
xor
adc
push
fcoms
mov
pop
sbb
ljmp
in
cltd
leave
lods
lods
out
pop
icebp
scas
daa
cmpsl
mov
pop
pop
mov
pop
outsl
and
out
iret
pop
mov
sbb
mov
push
gs
xchg
cmpsb
insl
add
shll
sbb
daa
stc
xchg
mov
fdivrp
adc
into
imul
xor
mov
xchg
lds
push
leave
cmp
pop
cltd
into
sbb
add
xchg
jae
cld
xchg
stc
arpl
mov
fwait
or
subl
fbstp
xchg
adc
and
mov
add
jbe
xchg
nop
xchg
sub
sbb
je
mov
pop
inc
jle
xchg
lahf
add
mov
cmpsb
xor
aad
cmc
xor
push
cmp
sbb
sarl
mov
lcall
les
push
imul
cmp
inc
sbb
dec
mov
imul
or
loope
xchg
fwait
inc
mov
push
push
hlt
xchg
cmp
add
xor
jecxz
shll
inc
push
fwait
xor
inc
inc
push
xchg
std
mov
cmp
inc
or
mov
cmpb
and
mov
cmpsb
cli
pop
shll
fscale
adc
sbb
or
les
pop
pop
pusha
shl
adc
pop
adc
cmp
xor
stc
push
mov
xor
cmpsb
and
stos
mov
push
jno
jns
and
out
push
push
sub
xor
and
and
movsl
pop
fisubrs
push
push
shlb
mov
sub
sub
mull
and
jae
cmp
adc
push
and
out
xchg
xchg
or
sub
je
push
jnp
outsl
sub
cmp
sub
cmc
adc
push
jne
lock
lret
pop
les
dec
leave
gs
xor
inc
add
ret
stos
popa
lods
inc
jle
push
lea
cmp
repnz
cltd
inc
jle
shlb
mov
jns
les
test
ja
mov
imul
sbb
gs
or
scas
sti
ljmp
ja
int
and
mov
imul
and
inc
sti
hlt
int3
pop
cmpsl
stc
pop
fsubrs
leave
inc
push
xor
cltd
sti
and
pop
add
sub
mov
mov
jle
mov
aad
jno
cmpsb
sbb
lods
and
or
movsb
lahf
sbb
jno
dec
movl
orl
icebp
lea
fnstsw
push
dec
pop
cmc
pop
dec
xchg
es
jl
fldcw
dec
xchg
pop
mov
lea
jnp
xor
sbb
shl
repnz
test
add
cltd
outsl
fstps
loop
mov
lods
or
das
sbb
mov
mov
sub
mov
mov
mov
adcl
mov
das
push
jbe
mov
popa
das
popa
sbb
fistpll
arpl
in
mov
mov
in
and
ds
sbb
xchg
mov
movsb
add
xor
fildl
and
inc
pop
add
movsl
pop
push
movsb
cwtl
cmp
fdivl
jno
jno
xchg
lds
cmp
push
out
pop
add
sbb
cs
std
pushf
sub
test
xchg
daa
jae
imul
movsb
sub
mov
arpl
inc
stos
rol
mov
sub
push
pop
aaa
add
out
mov
sub
mov
test
cmp
inc
out
push
or
sbb
shl
inc
mov
jmp
adcb
xlat
sti
jl
je
jns
pop
leave
daa
lods
xchg
push
dec
mov
and
iret
sbb
mov
repz
mov
push
dec
cmp
push
das
sub
idivl
sbb
cmpsl
scas
add
mov
cwtl
imul
mov
pusha
mov
popf
dec
push
or
sub
int
sbbl
sub
inc
sbb
sbb
push
hlt
inc
sub
mov
or
sti
cld
xor
push
or
sub
pop
movl
and
mov
add
ljmp
in
jle
dec
loope
cmp
cltd
bound
jb
outsl
xchg
and
xchg
daa
xchg
sub
mov
xor
cmp
lret
adc
push
rcll
jno
cwtl
mov
xchg
sbb
stc
pop
das
nop
mov
mov
mov
mov
lods
sbb
push
rclb
sub
mov
pop
jno
push
gs
cmpsl
xchg
fcmovnb
data16
xor
and
bound
dec
sbb
sub
xor
ret
xor
loope
in
mov
push
xchg
pop
sbb
bound
push
repnz
mov
push
and
sub
mov
pop
xchg
dec
ss
push
notb
gs
xor
mov
je
xchg
push
test
int
mov
les
mov
xor
cld
dec
adc
bound
pop
jnp
push
mov
lret
popa
mov
xchg
push
mov
cmp
xor
inc
xor
daa
xchg
sub
pop
pop
xchg
xchg
mov
bound
mov
sbb
or
test
decb
and
mov
push
sahf
push
sub
pushl
stos
int
popf
cmp
neg
xor
xchg
mov
push
push
out
lcall
inc
or
cmp
add
inc
out
and
cmp
lods
mov
in
and
and
sbb
lret
xchg
jmp
ja
and
jns
and
lock
add
xor
pop
or
push
mov
fldt
mov
xlat
inc
jno
or
addl
rolb
mov
aas
popa
sub
xchg
pop
imul
push
test
mov
or
movsb
mov
inc
rcll
cmpsl
push
lcall
jns
fs
xor
cmp
cli
pop
fidivl
dec
jno
sbb
fiadds
aad
mov
xchg
dec
jl
mov
push
pop
sbb
fimull
sbb
adcl
sub
push
divl
jns
xchg
jo
mov
aam
push
xchg
add
js
sbb
stos
ljmp
cmp
mov
gs
insl
mov
jl
pop
pushf
inc
sbbl
mov
arpl
inc
out
jo
cs
mov
adcb
mov
xchg
ljmp
cmp
lods
lcall
cs
adc
and
aad
arpl
imul
repnz
xchg
jle
xor
fidivrl
or
push
xchg
cltd
jmp
xchg
sbb
jns
xchg
out
jl
mov
lret
popa
inc
lods
jne,pn
mov
or
mov
mov
xchg
jno
cli
scas
std
shl
or
mov
xorl
jmp
sub
ret
cmc
inc
inc
sbb
xchg
pop
fisttpl
leave
fwait
jg
adc
xchg
ja
mov
dec
adc
sub
inc
inc
sbb
sbb
std
push
pop
xchg
std
cmp
in
or
pop
xchg
sahf
add
test
mov
jp
push
test
scas
mov
cs
xchg
sub
jp
fcmovb
rorl
sub
lahf
push
mov
cltd
mov
fnstcw
add
and
xor
jne
ret
cmp
insl
push
loope
out
or
jmp
test
adc
inc
scas
sbb
jno
popa
lret
pop
fdivl
xor
mov
push
aad
xor
outsb
mov
xor
sub
pop
cmp
inc
dec
lds
mov
sbb
leave
test
fidivrs
fldenv
mov
push
jmp
jecxz
sbb
or
pop
iret
mov
cld
in
mov
sti
sbb
loop
and
add
das
sbb
fs
popf
mov
aam
mov
push
sub
popa
pop
xchg
pop
add
inc
in
fs
sarl
dec
movsl
setge
aas
jmp
mov
and
jns
push
aam
push
mov
mov
fiaddl
mov
xor
xchg
xor
jns
add
cmp
mov
xor
ljmp
cmpsl
add
movsl
out
mov
pop
add
adc
cmc
push
jg,pt
mov
and
aaa
inc
xchg
lret
xchg
aad
push
ljmp
xchg
pop
mov
and
pop
jl
cld
shr
dec
adcl
sub
xor
icebp
mov
add
in
inc
data16
cmp
push
test
jno
sub
dec
xchg
xchg
test
sti
lcall
pop
pop
test
sbb
fstpl
andl
sub
xor
adc
push
das
repz
xor
in
mov
sbb
sbb
mov
loopne
sbb
aas
popa
and
adc
mov
std
insl
xchg
aad
clts
movsb
push
xchg
xor
rclb
push
inc
sbb
insl
fistpll
pop
mov
adcb
cmpb
aas
jns
and
inc
cmp
stos
sahf
pop
and
out
lock
push
loop
lods
sub
adc
sti
out
jno
pop
popa
jo
xor
pop
jns
das
jl
mov
decl
daa
lock
cld
cmc
xor
push
push
jbe
jns
data16
aad
nop
loope
xlat
dec
or
inc
adc
cmpb
dec
outsl
sahf
push
or
sbb
popa
jge
mov
adc
jle
stos
sub
xchg
ss
fcompl
imul
or
loope
sti
sbb
pop
xchg
and
sub
and
sbb
lods
adc
hlt
sub
ficomps
lret
sti
push
add
sub
and
and
jns
pop
lahf
popa
call
addr16
je
lods
movsl
xchg
xchg
mov
xchg
or
test
ss
push
fwait
outsb
frstor
out
xlat
push
xor
jmp
xor
push
stc
dec
xor
sub
fisubl
inc
cs
lea
sbb
xchg
and
xor
cmp
lret
and
sbb
in
jg
movsl
test
add
cmp
jle
popf
xchg
sbb
cmp
or
sub
xor
lds
xchg
scas
add
pop
das
nop
jne
mov
cmp
xor
xchg
push
sbb
lcall
push
cld
ljmp
lret
subl
scas
data16
push
ljmp
test
aas
mov
pop
loop
jp
jge
cmpl
jle
movsl
jo
xor
and
sbb
ss
shrl
in
inc
jb
andb
les
das
pop
xchg
inc
rcr
and
or
fisttpll
outsl
lcall
jle
xchg
or
dec
xchg
sub
ret
mov
push
push
cmpsl
mov
and
filds
sub
or
out
pop
mov
subb
stos
clc
popa
stos
stc
aas
sub
xor
inc
dec
push
loop
movsb
sbb
or
testb
sbb
xchg
addr16
dec
xlat
subl
fnsave
sbb
adc
or
sbb
dec
mov
in
inc
cld
sub
shll
xor
xor
cli
addr16
dec
test
rcl
lcall
sbb
or
scas
stc
mov
lock
mov
ficoml
add
dec
sub
ja
nop
hlt
cmp
and
mov
fsubl
sbbb
xchg
je
outsl
std
mov
das
pop
push
outsb
mov
lods
mov
sbb
pcmpeqw
xor
pop
pop
or
xchg
insl
add
gs
call
scas
icebp
xor
xchg
inc
push
cwtl
movsb
sbb
loope
mov
cmc
outsb
fwait
pop
je
and
cmp
lock
and
aaa
int
dec
repz
cs
sbb
adc
jns
outsl
xlat
jno
loope
insb
sub
gs
lea
popa
jb
dec
das
xchg
push
mov
xchg
arpl
pusha
repnz
hlt
sbb
pop
or
inc
sbb
xchg
cmpsb
shll
in
add
xor
mov
ret
and
lods
mov
insl
mov
sahf
popf
dec
xchg
sbb
xor
test
cmp
es
sbb
stc
addr16
mov
sbb
inc
xchg
push
jmp
and
xchg
stc
repnz
mov
popf
adc
sti
mov
sub
cmp
xor
cmp
jne
icebp
adc
mov
or
mov
inc
pop
fdecstp
arpl
psubd
test
xchg
push
std
filds
pop
stos
cli
and
push
das
fadd
call
mov
cmc
call
jbe
addr16
std
pop
cwtl
adc
je
push
sahf
cld
sahf
dec
sbb
test
pop
sbb
xor
inc
je
in
rcrb
adc
cmc
pop
pushl
clc
xchg
scas
and
adc
adc
and
sti
xchg
adcl
cmp
xlat
cmpsl
mov
scas
adc
lahf
xchg
clc
cmp
jae
fwait
mov
int
mov
bound
cmc
iret
or
inc
xchg
mov
sbb
sub
jle
cmpsl
mov
scas
jmp
movsl
cmp
mov
popf
mov
sbb
outsb
dec
in
mov
adc
xchg
stc
mov
daa
call
xchg
push
aas
or
xor
movsb
out
and
in
mov
pop
add
into
in
cmp
pushf
or
jp
popa
xchg
sub
popa
out
aad
xchg
dec
in
xor
in
in
incl
mov
xor
or
nop
inc
xchg
mov
call
inc
jnp
jmp
pop
jecxz
or
call
mov
clc
mov
fdivl
popa
rcrb
cltd
stos
push
cld
clc
outsl
xchg
xchg
mov
fidivs
dec
aas
pop
pop
mov
xchg
dec
sbb
jbe
popf
mov
sbb
fcomp
fcoml
sub
cld
xchg
and
insl
push
lods
hlt
popa
adc
fstp
incl
cld
jo
int
xor
pop
daa
mov
pop
mov
mov
call
leave
rclb
jg
cltd
jne
mov
pop
addr16
mov
jno
dec
fwait
sbb
dec
sub
inc
mov
mov
faddl
jne
iret
ds
outsb
and
xchg
fldl
ja
xor
movsb
xor
jne
xor
int3
jp
cmp
inc
pop
fldcw
flds
jl,pn
sub
idivl
cmpsl
ds
mov
stc
sbb
mov
add
or
loop
sbb
push
enter
fisttps
mov
fsubrl
xchg
outsl
sub
mov
push
pop
jnp
flds
sub
imul
and
add
lcall
imulb
jo
arpl
inc
enter
sub
movsl
dec
xchg
mov
pop
or
sbb
test
stos
pop
mov
test
cwtl
xor
cltd
sub
sbb
mov
xchg
scas
stc
dec
push
test
pop
aas
or
jo
ds
stos
cwtl
lds
and
scas
jl
sbb
dec
int
fidivs
xchg
hlt
or
sarl
sub
jbe
mov
or
mov
js
cmpsl
test
aas
int
mov
mov
test
xchg
lds
and
mov
jne
push
fidivs
pop
adc
xchg
xchg
cmp
imul
sub
sbb
push
loop
stos
add
sbb
lods
mov
or
xor
call
sbb
sarb
cmp
mov
int
das
mov
call
hlt
test
pop
pop
iret
jbe
cltd
jb
loope
in
mov
out
push
repz
into
fstpl
iret
adc
mov
mov
sbb
lods
repz
popa
scas
lods
xchg
test
movsl
cli
sarb
or
or
movsl
push
movsb
xchg
dec
daa
pop
imul
adc
push
jno
push
xor
jnp
xchg
nopl
and
xchg
xlat
jae
inc
jne
lcall
lahf
fucomp
fidivrs
push
pushf
pop
aad
fnstcw
add
xor
xor
in
adc
das
stc
fists
in
cmp
or
cmp
outsl
sub
dec
xor
adc
pop
das
aaa
sbb
sbb
pushf
fisttpl
dec
cmp
and
js
add
movsl
pop
das
xor
cmp
xor
jno
daa
call
sub
mov
pop
jl
ja
out
mov
cmpsl
xchg
movsb
lea
stos
jbe
mov
scas
mov
jp
shrl
pop
and
ret
cs
dec
leave
and
or
mov
push
jns
lret
inc
xor
mov
int
repz
paddb
stc
jb
jl
jb
sub
repnz
sub
inc
hlt
push
repnz
mov
leave
xchg
add
jg
mov
mov
fsts
pop
adc
std
mov
aas
sub
cmp
fdivrs
sub
aad
xchg
adc
fstps
xor
scas
pop
dec
hlt
test
cld
inc
xor
xchg
push
test
insl
rclb
sbb
pop
out
mov
mov
push
and
lcall
or
sub
loop,pn
sbb
test
pop
outsl
stos
push
clc
jecxz
rol
test
ficomps
and
ljmp
in
fnsave
and
pop
pusha
cmp
and
out
and
stc
xor
cmc
lds
dec
mov
and
sbb
test
cmp
sub
fwait
xor
cltd
inc
mov
popa
adc
sub
push
sub
mov
cs
scas
sub
outsb
jge
sbb
lret
pop
pop
add
rcl
aam
xchg
cmp
push
decb
inc
fwait
push
jno
ret
dec
sub
push
mov
jo
mov
stc
jns
push
inc
xor
cmp
sbb
push
movsb
cld
push
ret
cwtl
push
cmp
lcall
idivl
popa
and
adc
push
add
sub
aaa
push
cltd
arpl
pop
cmp
pop
jb
imul
inc
shlb
stos
fwait
aad
sti
push
lcall
sub
out
fldl
sbb
clc
mov
call
pop
jbe
push
cltd
jo
jno
leave
subb
sbb
lcall
mov
test
adc
mov
xchg
daa
inc
and
in
dec
and
sbb
mov
mov
sub
jno
cltd
xor
mov
or
sbb
sbb
aad
sbb
xrelease
stc
push
imul
loop
adc
setnp
push
loopne
mov
mov
imul
xor
xchg
sub
sbb
std
nop
scas
cmc
insb
xlat
leave
xchg
sub
fldl2e
out
or
and
and
mov
sub
inc
mov
movsl
imul
loop
xchg
cli
mov
mov
leave
leave
lods
mov
sahf
cmp
leave
dec
push
mov
sub
clc
fldt
jbe
inc
or
shrb
rcrl
shlb
roll
dec
jne
fisubrs
cmp
jne
sbbl
in
cld
jbe
ljmp
xor
xchg
xchg
jno
cmp
and
jae
mov
mov
stos
xor
repz
push
push
cmp
pop
dec
inc
pop
loopne
mov
stos
imul
pop
ljmp
inc
add
cmc
fstps
fs
mov
and
sbb
xchg
mov
outsl
jno
clc
cmpsl
inc
and
and
mov
xchg
scas
xor
sbb
cmp
divl
mov
popa
jmp
es
xor
out
out
xor
sub
frstor
xor
xor
scas
adc
jge
sub
hlt
cmp
push
inc
and
lods
jge
cmp
xor
mov
testb
cmpsl
fucomi
jo
iret
into
xchg
scas
add
jb
mov
ss
sbb
and
bnd
cmpsl
subl
mov
dec
scas
pop
lds
sbb
and
add
leave
or
xchg
xchg
aaa
xchg
callw
pop
fildll
adc
stc
jg
cwtl
or
loope
and
mov
andl
std
lcall
push
mov
inc
push
fbld
nop
xor
cmp
and
mov
stos
mov
xor
iret
mov
inc
xor
lcall
dec
icebp
cmp
pop
mov
mov
push
popa
lahf
rclb
popa
inc
mov
mov
enter
sub
inc
imul
inc
or
fstps
or
sbbl
pop
aam
or
in
mov
mov
mov
insl
lock
stc
inc
or
hlt
out
divb
xchg
or
rolb
mov
sub
and
or
mov
inc
and
mov
loop
push
scas
inc
sub
mov
pop
mov
test
inc
xor
fnsave
jo
or
out
popa
mov
pop
mov
and
mov
fwait
adc
loop
add
nop
push
test
test
lret
insl
mov
xchg
and
stc
xor
sti
and
or
cmp
add
sub
clc
jecxz
addb
xlat
cmp
pop
stc
shl
xchg
jecxz
leave
xchg
shrl
xchg
adc
xchg
mov
loop
cwtl
in
pop
sarl
stc
imul
rdmsr
andb
rorl
pop
mov
and
hlt
xchg
push
out
fiaddl
pop
test
mov
insl
loope
dec
sub
cltd
in
sbb
iret
cmp
sub
or
adc
or
jmp
cmp
cmpsl
mov
addr16
inc
push
add
mov
inc
jo
sbb
cmp
cmp
mov
mov
inc
push
imul
cmp
xchg
pop
mov
mov
xor
ljmp
imul
adc
push
dec
xchg
mov
rep
mov
imul
push
cmc
add
add
mov
pop
dec
xchg
push
cmpsl
mov
leave
fsub
std
addr16
nop
xor
pusha
ret
xor
in
subl
rcrl
ror
xchg
sbb
fs
shll
nop
jne
loopne
movsb
adc
inc
stc
mov
mov
jb
push
mov
repnz
cwtl
movb
inc
scas
imul
clc
cmpsl
leave
iret
mov
das
push
pop
addb
push
repz
sub
shll
pop
adc
push
stc
stos
loope
lcall
xor
movsb
bound
ret
dec
jmp
xor
jecxz
aad
adc
jg
cmp
xor
pop
test
mov
jb
inc
leave
add
mov
mov
adc
aaa
xor
out
adcb
cwtl
mov
cmp
leave
jno
pop
sbb
or
jne
lahf
inc
frstor
sti
in
adc
push
lcall
jae
test
sti
subb
mov
xor
mull
mov
push
call
test
xlat
clc
push
cmpsl
push
das
cltd
pushf
andnps
fsts
and
sahf
iret
lret
mov
push
xor
js
mov
add
fldenv
and
ss
add
stc
mov
jbe
mov
das
and
sub
ja
push
pushf
and
rcll
push
mov
xor
xchg
or
xlat
fiaddl
lods
xor
dec
sbb
cmp
fistpll
sar
inc
popa
addr16
sub
jno
icebp
arpl
and
fdivrs
es
nop
ficoms
mov
mov
cmp
and
add
dec
fldl
fstpl
test
les
mov
movsb
iret
shr
sbb
mov
cwtl
or
pop
xchg
and
cmp
fdiv
push
mov
ljmp
mov
lds
or
or
mov
pop
aaa
xchg
sti
xor
and
adc
sub
aaa
addr16
push
imul
push
pop
adc
add
xchg
add
mov
jmp
jns,pn
inc
rclb
in
jae
popa
shll
or
mov
stc
sbb
rdmsr
push
scas
iret
sbbb
jecxz
pop
shl
push
lret
jne
adc
jmp
nop
popa
sub
and
cltd
push
inc
pop
jno
xchg
int3
jbe
enter
or
mov
push
fstps
imul
push
mov
xchg
and
xchg
icebp
mov
in
jbe
fstpl
pop
outsl
inc
lret
imul
xorl
jg
repnz
sbb
mov
and
dec
xchg
mov
mov
xor
int3
mov
inc
push
lods
and
inc
xor
jnp
fwait
sub
cmpsb
xchg
jge
mov
stc
jg
sub
xor
jecxz
mov
mov
and
mov
push
mov
addr16
popf
sub
lea
mov
dec
sbb
mov
dec
aaa
adc
stos
and
jmp
mov
pop
xor
jnp
subl
push
iret
cltd
std
int3
or
and
ds
aas
aaa
mov
xchg
out
push
sbb
rol
pop
leave
cltd
mov
pop
mov
repz
cmpsl
mov
inc
subl
bnd
outsb
fsubl
pusha
rcrb
fisubl
sbb
daa
jo
mov
pop
je
mov
ljmp
push
pop
lods
mov
adcl
push
mov
lret
cmc
sub
xchg
scas
jnp
push
cmc
push
js
jb
mov
sbb
mov
xchg
push
in
roll
imul
push
leave
xchg
cmpsl
ret
pop
shr
stc
jmp
xchg
sub
cmp
mov
js
cmp
adc
mov
lahf
fwait
and
jae
lret
int
rcl
xor
adc
insb
je
lahf
jno
cli
ljmp
mov
xchg
and
xchg
mov
rolb
push
into
mov
pop
xchg
pop
dec
orl
or
imul
inc
jmp
dec
fimuls
ret
jno
in
adc
out
push
arpl
repnz
mov
lods
push
sub
rolb
sti
sbb
jns
scas
dec
mov
cmpsl
out
aad
sub
pop
push
sti
daa
xchg
inc
xor
jnp
pop
mov
cmpsb
cs
xor
into
mov
shll
bound
sbb
mov
xchg
push
lahf
adcb
arpl
aaa
dec
or
adc
mov
sbb
xor
lods
je
or
add
stos
push
cltd
lods
test
push
test
int3
mov
sbb
sbb
add
test
push
mov
push
jns
sahf
xlat
xor
test
mov
xor
mov
popa
shll
dec
pushf
pop
leave
and
sub
mov
je
and
add
or
ljmp
fstpt
pop
xor
es
aaa
jp
fldl
mov
dec
inc
pop
push
popf
push
aam
imull
gs
pop
mov
xchg
mov
jp
gs
shlb
ljmp
xchg
outsb
sahf
es
hlt
jecxz
mov
leave
push
divl
imulb
sub
aad
jno
loop
mov
movsl
lods
sub
lcall
iret
sbb
xchg
lcall
cmp
sahf
xchg
mov
repnz
leave
addr16
or
lret
pop
and
pop
dec
xchg
ret
sbb
sbb
jo
xor
xor
lahf
lock
jno
shrb
dec
inc
sti
jb
or
sbb
movsl
or
iret
pop
ja
mov
fistpll
sub
pop
dec
dec
ds
jns
pop
fisttpl
cld
sbb
adc
inc
dec
popa
mov
in
xor
icebp
ja
jge
and
out
adc
adc
imul
mov
mov
rorl
jbe
sub
ss
leave
outsb
jns
or
mov
jmp
push
insl
or
popa
sbb
adc
push
push
and
arpl
sub
cmovle
rcrb
popf
cmp
xor
jecxz
lods
sbbl
pop
aad
mov
fnstcw
push
jb
add
mov
mov
push
push
xchg
push
xchg
ja
addr16
sub
sub
outsl
xorb
imull
es
jmp
clc
gs
into
cmova
push
or
int
sbb
shll
ds
mov
outsl
and
fdivrl
xor
pushf
pop
std
cmp
test
lcall
mov
mov
repnz
loop
pushf
mov
mov
cmp
and
pop
mov
pop
mov
xlat
in
jno
mov
es
lock
rorb
test
sbb
and
sub
lea
xor
rcll
sub
inc
adc
mov
cs
xchg
fs
insb
out
stc
insl
lock
mov
cmpsl
sub
mov
mov
shld
inc
sbb
sub
stos
sti
mov
int
mov
ret
or
pop
test
sub
pop
stos
mov
jns
fstpt
fisubrl
imul
push
std
iret
stc
icebp
mov
sub
iret
add
push
mov
pop
aaa
sbb
mov
ds
inc
ret
dec
insl
add
call
addb
sbb
push
sub
and
xchg
mov
pop
int
cmpsb
jb
mov
aas
das
popa
adc
das
std
pop
negb
xchg
pushf
adc
inc
jl
movsb
daa
loopne
addr16
and
jnp
icebp
mov
xor
dec
sub
popa
add
sbb
xchg
stc
lahf
insb
sbb
mov
push
lea
leave
lds
and
adc
push
or
mov
add
adc
mov
jns
mov
sbb
xchg
mov
mov
add
cltd
xchg
adc
insl
sub
push
lret
fdivl
int
sbb
xchg
xor
mulps
int
or
push
int
in
mov
jecxz
jne
call
mov
push
sub
test
pop
aam
imul
cld
cmp
pop
cmpsl
mov
mov
fldt
outsb
lods
push
lret
mov
pop
and
lods
pop
sti
add
pop
stc
lahf
cmpsl
add
xchg
add
dec
repnz
pop
outsb
fstpt
out
push
pop
and
ficoms
in
pop
inc
sar
sub
xchg
ss
jmp
push
pop
mov
sti
xor
push
cwtl
call
sti
and
fdivr
test
or
stc
in
das
or
and
insl
xlat
icebp
movsl
xchg
mov
sbb
jmp
xchg
jmp
test
add
cmpsb
and
outsb
mov
and
dec
xor
lea
pop
sti
lock
push
test
addb
andb
and
popf
add
or
inc
sbb
cld
outsb
into
cmp
xchg
xor
xor
jno
pop
and
xlat
jecxz
sbb
sub
outsb
test
sub
sub
jae
add
cmp
jns
fnsave
cmp
push
loope
pop
xor
call
sub
xor
inc
shl
rcr
add
test
test
js
and
mov
icebp
in
adc
lcall
cmp
xor
repnz
add
xchg
stos
xchg
xor
outsb
jns
popa
iret
and
insl
imul
mov
pandn
arpl
cs
out
imul
rcr
and
xor
cmp
pop
cmp
sub
mov
enter
mov
cld
push
pop
hlt
repnz
das
mov
pop
mov
pop
mov
dec
add
jbe
cmp
mov
imulb
flds
into
adc
or
mov
push
add
and
xcrypt-cfb
cmpsl
or
cmpps
mov
lods
dec
gs
shrb
pop
xorl
pop
jnp
pusha
sub
jae
dec
mov
aas
outsb
lahf
mov
pop
push
mov
xchg
aam
push
div
fnstcw
jb
mov
push
jno
mov
fwait
mov
pop
sub
cmp
adc
sahf
sbb
std
adc
and
bound
and
pop
movb
mov
pusha
sbb
ficoms
inc
xchg
popa
sti
fs
dec
icebp
les
popa
pop
mov
push
mov
jp
adc
lds
xor
pop
lods
stc
in
sub
lcall
mov
adc
pop
and
jns
repnz
mov
push
mov
add
sub
cltd
dec
jae
sahf
sub
popa
out
insb
mov
ljmp
or
sbb
mov
jo
cmpsb
jp
cmp
cmp
jne
cmp
push
sbb
cmp
mov
xor
cltd
or
hlt
inc
cmp
call
popf
pop
dec
mov
pop
addr16
mov
es
fcmove
sbb
popf
inc
lods
and
xor
movsl
or
jnp
imul
inc
pop
test
cwtl
xor
lcall
subb
shll
das
jo
icebp
mov
popa
add
adc
sti
imul
pop
mov
sub
cmp
lret
push
mul
insl
mov
push
mov
mov
mov
loop
stc
dec
mov
xchg
test
daa
and
xchg
xor
cmp
push
dec
imul
xchg
out
pop
push
imul
cmpsl
adc
lahf
out
xor
jne
jno
mov
pop
jp
sub
xchg
fisubrs
mov
aaa
mov
popa
lods
stos
push
popf
call
hlt
sbb
fwait
xchg
aad
outsl
pop
sbb
imul
adc
inc
aaa
std
and
add
inc
add
sub
insl
cltd
mov
add
popa
push
sub
inc
lds
pop
addr16
inc
les
sti
pop
orl
or
cmp
into
dec
ss
sbb
cmp
sti
xchg
ds
jl
sahf
push
xchg
and
rcrl
divl
cld
cmp
push
movsb
or
xchg
sub
in
mov
and
xor
cmp
push
xor
stc
sahf
jecxz
lcall
arpl
sbb
mov
push
jns
xor
insl
mov
out
sbb
inc
shrl
mov
outsl
pop
daa
push
cltd
repz
pop
cmp
pop
push
xchg
addr16
ss
test
xchg
outsb
scas
out
cltd
hlt
inc
jb
dec
imul
pop
int3
xchg
imul
lahf
and
pop
sub
insl
les
add
or
lahf
popa
cmc
mov
dec
push
or
popa
arpl
in
lock
mov
sub
lods
fistpl
adc
fwait
icebp
adc
lahf
fs
cmp
inc
inc
sub
out
mov
push
push
data16
cmp
cmp
and
in
xchg
and
icebp
pop
mov
cmp
push
roll
sbb
xor
fldl
cmp
fisubrl
jl
push
sarl
int3
inc
inc
std
cmp
mov
mov
and
les
mov
push
repz
movsb
xor
scas
dec
fidivrl
push
aaa
movsl
pop
fisubrl
leave
imull
pop
or
fcoml
pop
pop
inc
or
cmp
dec
fwait
in
mov
cmp
cmp
cmp
mov
leave
pop
lock
add
cmp
pop
adc
or
jne
cmp
mov
pop
pop
imul
and
lds
mov
loope
mov
fcom
adc
cmp
mov
xchg
ss
aas
cmp
sbb
jns
add
mov
test
or
icebp
dec
dec
xstore-rng
cmpsl
pop
mov
mov
cmp
inc
adc
outsl
fs
inc
adc
popa
adc
cmpsb
push
pop
pop
les
mov
dec
in
sbb
mov
cwtl
add
and
mov
in
ret
xchg
lret
daa
pop
push
ret
fbstp
popa
cvtdq2ps
sbb
add
mov
mov
xchg
lahf
ss
cmp
out
scas
sbbb
aaa
adc
or
int3
and
adc
fistpll
int
sbb
cmp
sub
lods
pop
daa
pop
mov
xor
sbb
pop
pop
mov
rorl
and
inc
lds
icebp
iret
dec
in
lret
mov
incl
add
cmp
into
repnz
inc
inc
mov
or
or
pop
lcall
cld
mov
test
cltd
fdiv
cmp
aas
mov
mov
cmpsl
stos
pop
sti
hlt
sub
xchg
jno
xchg
sub
cwtl
insl
add
xchg
add
out
movb
xchg
lea
test
pop
jno
in
adc
xor
adc
scas
cmp
mov
les
sahf
mov
out
notb
sub
scas
shlb
sbb
push
mov
aaa
pop
and
sbb
ficoms
imul
xchg
ficoml
icebp
mov
in
sub
pop
xor
stos
arpl
xor
push
push
add
and
inc
cltd
xchg
popf
ss
andb
sbb
xchg
add
mov
mov
stc
mov
pop
dec
xchg
fdivl
movsb
popf
popa
adc
or
or
das
mov
cltd
insb
pop
cmp
mov
aaa
cmp
js
jl
and
xchg
cmpsl
sti
out
cmpsl
bound
jo
lods
cltd
repnz
push
xor
repz
pop
push
lds
cmp
sbb
std
test
or
cmp
adc
sbb
push
stos
ja
adc
aaa
sub
push
fisttpll
lock
xor
sbb
or
add
add
xchg
inc
scas
sti
mov
lea
or
cmc
cltd
add
ret
xor
mov
sbb
aaa
mov
sbb
and
das
cs
decl
and
cmp
popa
out
in
push
add
std
fnstenv
xchg
flds
ss
popf
mov
push
call
lahf
xchg
adc
loopne
repz
inc
or
pop
negl
xor
imul
shld
and
test
xor
mov
lods
dec
js
in
adc
jne
sub
adc
mov
das
xchg
xchg
dec
xchg
inc
into
mov
sbbb
add
xor
loop
xchg
add
or
pop
mov
loop
xchg
xchg
fcomps
outsb
js
fidivrs
mov
mov
mov
mov
add
jne
popa
sti
add
mov
mov
jb
mov
fwait
adc
adc
xor
cmp
and
je
sbb
sub
and
arpl
xor
mov
nop
and
cld
or
popa
mov
les
mov
cmp
hlt
in
xor
xchg
pushf
add
test
xor
mov
aam
dec
pop
sbb
and
cmp
pop
xchg
sti
adc
iret
dec
pop
xor
sbb
dec
cmp
jl
cltd
mov
jl
mov
out
test
and
mov
aaa
insl
sbb
jl
pop
xchg
mov
mov
xlat
push
mov
adc
cmp
iret
insl
cmpsb
call
add
mov
inc
xchg
addr16
das
jo
and
inc
outsb
cmc
jbe
xchg
dec
push
adc
mov
xchg
insl
xchg
xchg
hlt
addr16
sub
into
lret
pop
mov
fld
lret
mov
out
daa
or
lcall
adc
mov
cwtl
add
das
pop
mov
imul
insl
push
inc
pop
sahf
mov
rolb
mov
cmp
xchg
pop
adc
call
jno
mov
sbb
inc
std
dec
pop
jne
iret
sub
jns
or
adc
nop
xchg
push
sahf
and
xor
jp
mov
cs
movl
test
jne
jl
gs
mov
sbb
sbb
sub
xchg
adc
test
xor
adc
mov
sub
push
sub
cs
add
into
sub
xchg
gs
js
push
jno
pop
and
cmp
cmp
insb
mov
imul
and
jne
das
xchg
je
push
and
test
or
push
es
xor
mov
imul
lahf
dec
jp
ds
sbb
in
ret
sub
std
xor
and
or
sub
mov
sbb
sbb
test
cmp
sbbl
arpl
dec
and
pop
xchg
out
add
lods
jecxz
adcb
jge
push
aas
or
mov
sti
mov
sbb
in
mov
sub
dec
mov
in
mov
push
jecxz
adc
shll
xor
dec
pop
in
mov
mov
jg
pusha
shll
into
push
in
cmp
mov
adc
xor
inc
stc
lea
lock
jo
mov
sub
into
xchg
int
mov
xchg
mov
push
mov
loop
jo
add
aad
xor
bound
xor
fisubrl
push
and
pop
cwtl
sti
lahf
pop
fdivr
push
and
in
push
mov
jne
jno
jg
das
sub
cmp
mov
cmp
mov
cmpsb
in
mov
divb
and
mov
stc
lds
add
nop
mov
jne
mov
or
es
sub
dec
push
sbb
es
cmp
mulb
adc
popa
imul
mov
xor
cmp
arpl
bound
sbb
jb
shr
mov
in
idivl
xor
fistpl
add
sbb
jge
es
test
sbb
js
adc
push
movsl
sub
sti
ds
jb
xor
pop
xchg
cltd
mov
fnstenv
cs
jmp
lahf
cmp
mov
or
leave
divb
xor
loope
shrl
jge
bound
repnz
mov
mov
inc
mov
or
mov
cmpl
lahf
cltd
adc
lahf
adc
fnstcw
adc
sub
and
sbb
lods
aam
popa
and
in
inc
and
test
mov
icebp
fwait
xchg
jnp
pop
mov
dec
xchg
jno
das
sbb
mov
xchg
pusha
cltd
and
fstl
add
dec
mov
mov
cmpsl
sbb
leave
pop
and
lret
aad
es
or
dec
rcrl
aaa
lods
sub
out
mov
int3
aad
adc
xor
test
cltd
sbb
xor
xchg
inc
enter
mov
cwtl
popf
sbb
sub
cmp
fnstenv
and
out
jle
sbb
call
aad
fsts
call
xchg
aas
pop
and
imul
testl
inc
adc
mov
add
pop
icebp
xchg
pop
mov
xor
add
xchg
or
jbe
repnz
cmp
movsb
push
mov
mov
push
xchg
adc
push
into
adc
cmp
pushf
adc
xchg
mov
leave
nop
mov
pop
xchg
sbb
pop
popfw
ja
xchg
inc
add
lret
xchg
cmp
pop
sahf
mov
loope
push
imul
ds
fstps
sbbl
aam
cmc
pop
mov
push
push
or
je
pop
icebp
loope
sub
popf
mov
sbb
insl
push
ja
xchg
mov
or
cltd
or
push
xchg
sbb
mov
add
andnps
pop
arpl
cld
mov
mov
xchg
adc
jg
nop
cmp
pop
sbb
pop
pop
sahf
push
xor
xor
stc
adc
sti
and
xchg
lahf
loope
add
mov
xor
sahf
into
and
pop
sbb
push
dec
loope
and
xchg
lea
add
add
and
and
mov
sbb
or
inc
adc
fwait
mov
sbb
pop
adc
or
arpl
arpl
aaa
mov
xor
mov
push
out
bound
notb
sub
popa
pop
xchg
sub
xchg
and
sbb
sahf
and
inc
aaa
mov
pop
and
xor
push
pop
in
daa
int3
push
and
push
push
push
fldenv
cltd
sbb
push
or
jecxz
es
ficoms
xchg
leave
and
movsl
lds
mov
sbb
rolb
add
mov
out
xchg
pop
das
jo
aam
rcl
sbb
xor
cmp
test
pop
ja
mov
icebp
push
nop
test
xchg
add
repz
sub
pop
sub
mov
imul
cmpsl
lahf
out
sbb
push
mov
sbb
adc
stc
jbe
adc
add
fdivl
adc
push
xorb
sti
push
or
jecxz
fdivrp
push
fcompl
in
nop
enter
cmp
and
daa
add
push
adc
push
xor
dec
pop
in
sub
stc
and
jmp
mov
adc
loop
mov
or
cli
aad
into
push
inc
fwait
aas
sub
cli
and
add
add
fstpt
pop
xor
pop
rorb
or
mov
in
jmp
shrl
cmp
cli
or
mov
shrl
jbe
mov
mov
test
mov
stos
or
xor
inc
inc
sti
lea
adc
cmp
pushf
inc
cmp
jno
xchg
mov
call
inc
dec
cmp
xor
sbb
push
sbb
and
mov
mov
jne
sub
adc
and
push
jnp
adc
or
mov
push
mov
mov
dec
mov
mov
dec
sub
dec
adc
xor
ret
or
lret
xchg
fidivl
divb
dec
loop
iret
mov
xchg
dec
fsts
inc
std
repz
loop
lock
inc
inc
incl
subl
inc
mov
aaa
imul
ret
iret
xor
mov
pop
mov
mov
out
or
or
cli
mov
std
pushf
loope
addr16
test
imul
jne
repnz
adc
imul
sbb
int
iret
fidivl
and
cld
popf
enter
pop
mov
push
push
cmp
mov
mov
pop
call
xor
adc
dec
les
mov
pop
loopne
jg
outsb
dec
ss
loop
and
push
lcall
jbe
popf
push
aas
sti
adc
fwait
jle
pop
popa
imul
add
arpl
jne
rorl
inc
xor
add
jne
and
mov
pop
cmp
xor
iret
imul
pop
mov
mov
sbbl
repnz
shll
ja
inc
or
pop
icebp
push
hlt
inc
mov
mov
sub
bound
adc
ror
adc
jge
pop
mov
lcall
je
mov
gs
es
stos
mulb
push
nop
push
test
push
mov
dec
jb
xchg
mov
stc
and
stos
xchg
lock
out
int3
mov
mov
iret
addl
sub
xchg
sahf
sahf
test
std
add
popf
iret
or
push
aad
iret
enter
jns
fwait
mov
arpl
js
dec
mov
shrl
adc
xchg
jnp
sbb
mov
sub
or
lret
movsl
xchg
pop
fcoml
bound
or
scas
mov
loopne
test
mov
add
std
dec
sub
mov
into
decl
fcoml
lea
pushl
dec
or
push
mov
sbb
xchg
in
push
and
sub
or
sti
pop
or
adc
adc
push
mov
sub
inc
and
bound
clc
push
mov
pop
mov
imul
push
inc
scas
sbb
repnz
lret
sbb
clc
sub
mov
stos
pushf
dec
sub
adc
mov
xchg
sub
adc
je
loop
sti
rolb
sub
add
int3
xor
inc
inc
adc
rolb
sub
adc
xor
jns
andb
xchg
fisubs
int
xchg
int
mov
cwtl
ljmp
push
dec
cwtl
lods
shl
fnstcw
dec
sti
cltd
sub
out
rcpps
mov
or
mov
inc
or
mov
movsl
inc
insl
std
jns
cmp
adc
dec
jns
or
leave
cmpsl
ret
cmp
scas
fisttpl
sahf
sbb
xorb
movsl
push
cmp
addb
lods
mov
cltd
and
inc
mov
jl
out
hlt
push
aas
sahf
sti
popa
xchg
xchg
loop
pop
inc
movsb
xor
insl
adc
es
add
fstpt
lods
push
mov
fucomip
aam
test
or
cmp
cmp
adc
imul
or
mov
cmp
sbb
pop
cwtl
shll
iret
bound
mov
pop
movsb
cmp
add
xchg
inc
cltd
fisubrs
sub
and
push
lea
or
mov
lcall
xchg
fimuls
inc
sti
push
in
jl
pop
fidivs
scas
scas
cmp
std
cs
pop
rcrb
sbb
mov
lahf
test
test
fists
and
mov
mov
jbe
icebp
and
loope
xor
xchg
push
repz
push
mov
xor
in
mov
fcoml
fldt
mov
mov
sub
clc
pop
pop
dec
ja
push
push
mov
or
stos
cwtl
inc
xor
add
mov
pop
push
daa
lea
fs
stos
xchg
pop
xor
and
sahf
xchg
ret
daa
cltd
sbb
lret
mov
mov
popf
ficoml
repnz
movsb
mov
nop
and
mov
and
mov
call
push
pop
sub
cli
xchg
insb
pop
or
pop
das
dec
rolb
mov
shlb
add
inc
or
je
mov
imul
pop
cld
daa
mov
add
leave
mov
jle
cmp
pop
pop
cs
in
es
shll
add
jb
jns
xchg
cwtl
std
movsl
pop
pushl
test
push
push
inc
paddq
hlt
rcrb
adc
cmpsb
popf
scas
sti
out
or
lret
and
xchg
jmp
pop
sti
sahf
mov
in
and
pop
fsubs
inc
jno
iret
inc
shll
js
cmpsb
cmp
icebp
call
push
jmp
cmp
pop
nop
fbstp
add
cmpsl
mov
das
push
pop
leave
pop
jno
xchg
inc
jae
jl
xchg
in
andl
pop
cmp
es
cmpsl
aas
test
movsb
jge
push
inc
and
rol
insb
pop
jnp
inc
mov
scas
pusha
lods
mov
xor
es
xchg
xor
popf
sbb
rorb
scas
jb
clc
cs
lret
xor
addr16
sbbb
daa
mov
cld
xchg
rorb
aad
vmwrite
pop
sbb
jo
xchg
in
aad
xchg
sbb
ficomps
arpl
mov
inc
sahf
mov
push
pop
inc
rorb
pop
xchg
pop
sets
andl
mov
xor
dec
mov
movb
inc
adc
and
xchg
shll
sti
movsl
ret
bound
lret
jns
mov
and
gs
outsl
dec
and
add
push
jl
test
ret
jne
divl
test
mov
mov
icebp
push
movsl
and
sbb
mov
push
fdiv
popf
pop
ds
push
cmpsl
fsubrl
cwtl
mov
sahf
rol
fs
ja
push
sbb
sub
jb
pop
mov
add
out
scas
mov
mov
scas
or
inc
pop
imul
jne
mov
push
fnstenv
pop
in
aam
popa
xchg
lret
dec
js
xchg
inc
mov
mov
xchg
xor
and
lcall
sub
fwait
gs
clc
xchg
shrb
int3
xchg
add
lods
jbe
jne
pusha
popf
decl
fst
mov
pop
jns
cltd
inc
sub
adc
stc
mov
mov
pop
xor
xor
push
scas
xchg
jbe
add
mov
mov
ret
sbbb
pop
lret
inc
push
insl
cwtl
jmp
xchg
cltd
jge
mov
out
mov
lahf
sub
nop
test
stc
imul
mov
test
nop
mov
mov
cltd
sbb
sti
stos
lods
xchg
mov
pop
fcoms
call
dec
mov
mov
dec
aaa
rcll
jns
cmp
xchg
add
xchg
mov
aas
das
push
push
ljmp
cmp
notb
ja
jns
loopne
pop
mov
stos
lds
sub
mov
and
mov
lock
sub
xlat
outsl
cmpsb
ret
mov
jecxz
cmp
and
fwait
push
jae
push
movsl
mov
push
stc
pop
sti
es
adcl
cmp
xchg
xchg
pop
popa
paddsw
roll
cmp
call
adc
cmp
xchg
iret
push
lods
mov
hlt
lahf
inc
xor
add
gs
outsl
add
orl
cmc
imul
mov
in
bound
je
xchg
xchg
inc
imul
sub
mov
or
xor
inc
xchg
xor
mov
jno
popa
jne
and
daa
mulps
sbb
xchg
cmp
shrl
push
ljmp
xor
mov
xchg
jl
inc
xor
sbb
mov
push
xchg
xor
leave
aam
inc
mov
inc
into
or
popa
push
int3
inc
pop
jne
sbb
outsl
inc
jmp
pop
addr16
std
sbb
lock
imul
mov
shlb
sbb
pushf
sub
out
inc
jge
jns
add
and
xchg
mov
insb
sbb
addr16
dec
test
mov
clc
cmp
js
ret
adc
mov
cmp
ss
dec
pusha
dec
mov
aas
cmp
scas
insl
inc
add
inc
shrl
cwtl
lds
pop
icebp
cmp
int3
mov
adc
pop
sub
adc
push
outsl
push
pop
int3
in
enter
ljmp
xchg
sub
popa
repz
mov
jecxz
xchg
ja
or
fistpl
mov
pop
and
adc
or
sub
cltd
add
daa
adc
popa
or
mov
xchg
sbb
and
xor
adc
jecxz
and
addr16
push
mov
imul
aad
test
je
subb
ret
mov
jecxz
mov
cmp
les
inc
or
or
cli
push
inc
mov
nop
push
cmp
sbb
test
push
inc
arpl
sbb
xor
dec
mov
push
jo
jbe
pop
mov
popa
and
xor
push
stc
cwtl
insb
ss
xor
or
cmpsb
adc
test
stos
mov
mov
cli
mov
mov
mov
inc
jbe
sub
leave
mov
jg
stc
sbb
dec
cmp
mov
lsl
gs
sub
clc
shlb
cmp
cmp
adc
pop
shrl
xchg
pop
adc
xchg
sbb
mov
pop
mov
cmp
in
cmp
and
sbb
enter
dec
add
loope
lock
fildll
test
pop
stos
aas
xor
imul
pop
jmp
cmp
aas
adc
cs
loop
push
pushf
pop
mov
xor
pop
fs
pop
jp
push
inc
inc
les
inc
movsl
fcmove
jne
mov
cmc
xor
js
daa
jne
jnp
subl
mov
jns
mov
loop
pop
stos
mov
cltd
lret
cwtl
add
into
scas
data16
iret
dec
jo
lock
cmp
pop
das
jbe
cltd
cmpsb
push
mov
addr16
cmp
sub
mov
adc
mov
out
xchg
es
pop
mov
jb
push
cmpsb
lds
push
xor
xor
cwtl
or
andl
xor
imul
sti
adc
in
mov
aad
aad
jns
push
or
sbb
mov
pop
ljmp
sub
cmp
in
dec
mov
mov
imul
negb
neg
cmp
pop
inc
arpl
popf
rcll
icebp
fwait
in
dec
fildl
and
imul
jno
push
add
inc
jne
lock
gs
mov
inc
mov
sbb
jo,pt
sbb
in
add
jmp
sbb
ljmp
inc
enter
mov
sbb
std
adc
test
repz
pop
insb
push
adc
in
test
stos
xor
xor
or
aas
addr16
ja
clc
inc
sub
inc
inc
dec
sub
mov
pop
add
mov
cltd
cmp
test
enter
mov
rcll
sub
and
cmpsl
add
cmp
test
sbb
lea
inc
inc
aaa
out
xor
mov
fmull
sbb
adc
cmp
icebp
out
into
je
pop
and
insl
add
mov
mov
mov
icebp
aas
or
push
cmp
cmp
dec
testb
aad
call
or
and
push
cmp
and
and
push
es
sarb
imul
pop
xchg
std
mov
testb
xor
andl
movsb
dec
xor
inc
jb
push
dec
lods
aaa
mov
pop
and
scas
lods
daa
push
fnstsw
mov
mov
dec
cmp
mov
repnz
and
and
sub
lret
mov
lods
xor
sub
jecxz
jecxz
mov
jmp
dec
shlb
call
push
or
out
jne
xor
gs
mull
cmp
mov
push
sbb
adc
adc
in
add
xor
add
repnz
sub
xor
sbb
test
mov
call
add
add
sub
cmp
in
or
mov
xchg
out
shlb
les
sub
xchg
cmpsb
xchg
aam
pop
sub
mov
cmp
outsl
mov
mov
or
addr16
mov
or
cmp
lds
mov
inc
add
jne
push
ljmp
pop
aaa
add
inc
jg
fxch
jne
pop
mov
out
iret
orl
scas
aas
mov
xchg
stos
lea
jl
gs
sub
mov
pop
addr16
cmp
or
outsl
add
fs
testl
cmpb
mov
fisubs
js
ljmp
pop
lcall
inc
mov
cmpsl
xor
adc
cwtl
dec
mov
push
push
imul
aad
and
icebp
pop
and
insl
out
or
fucomp
enter
and
mov
sbb
xor
xchg
mov
test
cmp
jb
inc
cmp
xchg
xchg
imul
into
movsb
pop
sub
lret
test
ss
inc
cmc
mov
jge
xchg
dec
js
popf
push
jle
mov
inc
rclb
jno
push
and
nop
imul
inc
sub
test
subl
cltd
mov
pushf
movsl
cmp
push
cmp
repnz
fldl
shll
cltd
push
imul
fldenv
pop
popa
inc
cmp
xor
pop
iret
inc
jne
inc
cmp
data16
ret
jns
push
and
stc
mov
icebp
push
push
jl
jbe
xor
pushf
push
in
sub
mov
lds
xchg
or
dec
imul
xor
push
lcall
pushf
inc
push
push
aaa
inc
out
ret
mov
adc
push
rcl
mov
jbe
inc
lods
and
xchg
sbb
les
mov
popf
test
dec
fldl
mov
push
mov
movsb
mov
cmp
xchg
push
xor
nop
and
xchg
stc
sub
fucomp
out
test
push
add
popf
dec
mov
xchg
lods
mov
leave
lahf
xor
aam
mov
std
lret
mov
mov
dec
pop
ret
mov
sbb
sbbl
cmp
and
loop
icebp
mov
lahf
mov
loop
fwait
sbb
sub
dec
ljmp
loop
mov
push
cmpsb
cmp
repnz
or
ret
sbb
sarl
cmc
faddl
add
popf
push
dec
pop
push
inc
imul
addr16
loopne
mov
test
cmc
leave
push
pop
out
rcll
inc
pop
xchg
inc
bound
das
mov
fstp
imul
push
in
mov
repz
imul
aaa
lret
mov
mov
xor
sbb
jo
jb
pop
shll
inc
xchg
xor
mov
jb
cmp
lcall
daa
mov
ja
icebp
cld
stos
and
mov
insl
into
cmp
enter
lret
push
daa
jo
iret
adc
and
shrb
xchg
in
mov
pop
xor
jmp
ret
pop
xchg
push
sub
mov
add
mov
xchg
and
mov
sbb
adc
imul
sub
adc
sub
adc
or
cmpb
cmpsb
std
repnz
sub
inc
jmp
xchg
sub
push
insb
sahf
push
cmpsl
mov
xlat
orb
shl
addr16
jecxz
in
and
dec
push
pop
dec
sbb
mov
push
in
sub
inc
sub
inc
xchg
jmp
out
xor
mov
lds
xchg
sbb
or
push
es
mov
sub
cmpl
out
sub
adc
inc
daa
sub
sbb
pop
inc
pusha
adc
add
and
out
xor
cmp
pop
sahf
sbb
sub
pop
push
push
movsl
popa
lcall
rcll
xor
daa
sbb
ljmp
pop
movnti
jno
mov
push
sbb
lcall
push
movsb
adc
mov
inc
sbb
testb
pop
add
push
add
dec
cmp
jle
and
dec
xor
mov
sbb
outsl
insl
ret
fildl
stc
jno
fsub
xor
jecxz
mov
and
cld
cmc
andl
dec
xchg
nop
pop
fidivs
cmp
jno
cmp
cmc
shrl
jmp
push
mov
cmpsb
or
push
lea
pusha
int3
dec
out
call
xor
sub
mov
cmp
dec
and
pusha
xchg
add
stc
xor
mov
xor
sbb
aaa
clc
ja
mov
xor
arpl
das
bound
jb
stos
push
add
sahf
push
sub
mov
xor
pop
push
fnstcw
cmpsb
adc
fldenv
mov
mov
push
aam
scas
out
xor
mov
mov
xor
sub
jp
dec
add
mov
sbb
sbb
xor
adc
cwtl
out
repnz
dec
or
lahf
and
sub
pop
mov
xor
sub
or
cmp
cmp
loopne
jne
sbb
push
jle
pop
and
mov
sbb
xor
mov
pop
or
mov
rcrl
cmp
fsubrs
aas
dec
fstpt
jl
push
cmp
sarb
jnp
pop
and
movsb
xor
xor
adc
push
mov
mov
and
lds
sub
and
jecxz
mov
jb
mov
lret
shll
adc
lahf
ret
sbb
loope
gs
daa
cmc
cwtl
dec
sahf
pop
or
xchg
out
dec
xor
pop
loopne
sbb
pop
call
outsl
fstl
mov
dec
divb
add
jne
xchg
dec
sbb
dec
das
cmpsl
sub
mov
out
dec
push
pop
hlt
pop
xchg
inc
cmp
and
mov
orb
xor
and
adc
jmp
shrb
psrlw
or
pop
cld
fisttpll
repnz
iret
sbb
out
xchg
push
xchg
mov
lods
push
push
xor
imul
decb
and
add
cmc
adc
loop
mov
mov
cltd
lea
adc
loope
pop
xchg
popa
divl
jo
ja
sahf
sbb
iret
movl
dec
xor
bnd
inc
mov
inc
mov
xchg
and
or
sub
out
lea
sbb
sbb
mov
sbb
cmp
pop
xor
push
daa
xor
sbb
mov
adc
sti
xor
lret
or
rcpps
mov
xor
cmp
dec
pop
mov
aad
frstor
sti
adc
push
arpl
loope
adc
xchg
mov
imul
insl
daa
sti
mov
mov
loop
inc
scas
add
xchg
data16
jns
sub
mov
mov
or
and
xacquire
push
xchg
imul
add
sbb
lods
fsubs
lcall
xchg
pushf
sub
sub
push
ret
sbb
js
popa
push
sub
cmp
or
out
or
les
push
cmp
or
jle
adc
daa
dec
sbb
sbb
clc
lds
out
das
xchg
push
add
cmp
inc
mov
and
pop
test
cmp
jno
sbb
imul
mov
and
js
push
jmp
mov
fsts
pop
in
loope
xor
int3
add
shrl
or
and
out
jns
sbb
xchg
and
ret
or
je
pop
adc
out
out
or
mov
iret
cmp
xor
mov
loop
sub
bound
pop
or
cmp
and
lret
movl
outsl
sbb
jo
into
popl
dec
iret
xor
or
pop
add
aaa
loop
mov
sarl
sti
movsl
and
adc
imul
or
push
fisubrl
mov
fmull
stos
sbb
loop
iret
inc
xchg
out
popf
sahf
sub
nop
test
cmp
fiaddl
push
xor
xlat
or
xor
push
notl
cli
loop
and
jns
lret
fistpl
ja
sti
es
out
mov
pop
add
push
xchg
mov
adcl
in
sbb
imul
cwtl
repnz
hlt
sub
xor
lea
sbb
stos
scas
sti
cmp
push
pop
cmp
xchg
xchg
inc
mov
int
mov
xor
and
jge
pop
pop
mov
movsb
mov
inc
or
sub
inc
movsb
add
call
mov
pop
popf
shll
inc
arpl
dec
jno
and
outsl
xor
adc
push
mov
int
mov
outsl
sub
sbb
inc
shlb
movsl
icebp
inc
xorb
sbb
mov
xchg
sti
xor
jecxz
dec
test
data16
sub
in
and
inc
stos
xchg
pop
pop
mov
jo
inc
push
mov
xchg
sti
xor
push
add
jns
xchg
aas
in
dec
ss
cmp
mov
xor
movsb
jno
imul
test
xor
lret
jp
sti
loop
out
jb
xor
jns
sbb
stos
cmp
dec
outsb
repnz
adc
inc
sti
sahf
insl
hlt
in
nop
mov
pusha
loop
mov
mov
cmpsl
jbe
cmp
ret
fldenv
push
loop
sub
or
xor
jmp
sarl
mov
scas
pop
ss
mov
push
push
push
fs
lods
fwait
mov
shll
loop
sahf
push
push
mov
push
inc
js
int3
push
pop
add
and
aam
xor
pop
sub
xchg
add
xchg
jno
and
xor
and
mov
aas
out
int
adc
mov
ds
mov
mov
jp
xor
push
sbb
xor
sarl
mov
add
cmpsl
jmp
enter
xchg
cli
nop
movsl
xchg
mov
loop
push
nop
ss
xchg
in
in
inc
fistpll
adc
fscale
mov
aas
fstps
bnd
fs
inc
mov
inc
shlb
movsb
enter
test
mov
or
jle
cmp
sub
bnd
xor
pop
sbb
int3
loope
sbb
push
mov
jns
call
mov
pop
pop
mov
sbb
xlat
ret
shrb
mov
or
xchg
xchg
mov
ss
cmpsl
pop
sti
cmpsb
sarb
cmp
xchg
dec
pop
pop
sbb
sbb
loope
cs
push
cmc
lcall
sub
repnz
mov
call
or
insl
adc
and
push
push
dec
mov
int3
xchg
push
xchg
dec
pop
pop
bnd
cmovle
adc
int
test
xor
iret
mov
jecxz
out
fs
mov
sbb
sbb
int
and
sbb
push
or
mov
testb
add
hlt
rolb
leave
adc
jp
fmulp
pop
enter
push
mov
lahf
pop
mov
push
dec
xchg
scas
stos
sti
fcmovu
lret
mov
enter
test
in
lcall
and
inc
cs
mov
xchg
test
push
out
cmpsl
shl
xchg
lds
and
sbb
stos
jl
jl
jmp
jae
push
cli
shrb
mov
ljmp
pusha
iret
pop
mov
sbb
lds
inc
je
popa
inc
adc
push
cli
push
movsb
fnstcw
loop
jno
rolb
xchg
rcr
pop
inc
fnstcw
xorb
lods
jno
sub
xchg
aaa
pusha
je
sub
mov
hlt
xchg
outsl
jo
cmp
cmpsl
outsl
out
ljmp
add
adc
lds
popa
into
pop
ret
js
je
inc
inc
cmove
sti
sbb
mov
and
popa
shlb
mov
das
sbb
iret
filds
xor
push
mov
loopne
leave
pop
int
add
cmp
mov
das
sub
mov
jle
pop
push
lcall
imul
popa
add
lea
jl
out
jb
addl
aas
call
inc
fnstenv
push
fistpl
shrl
cmc
mov
cld
mov
flds
dec
int
dec
pop
pop
jns
loop
pop
push
mov
fstpt
sub
imul
imul
mov
clc
gs
addr16
cmp
int
mov
push
fcoms
roll
mov
loop
int
stc
sahf
inc
xchg
inc
mov
mov
mov
subl
add
xchg
and
inc
and
xchg
int
adc
mov
dec
sbb
push
xchg
imul
cmp
stc
movsl
loop
cmp
mov
cs
and
test
cmp
inc
jne
and
adcl
adc
int
ficompl
push
dec
add
loop
mov
sbb
shll
stc
in
and
jl
inc
jns
cwtl
adc
scas
shr
xchg
icebp
push
sub
pop
xor
repnz
ret
in
movsl
sub
sarl
xor
adc
sub
lret
inc
mov
sbb
xor
arpl
lcall
mov
mov
ret
ljmp
mov
scas
in
xchg
or
fdivr
pop
dec
adc
xchg
and
mov
cmp
aas
xor
cmp
cwtl
in
mov
sbb
push
pushf
lock
mov
sbb
cmpsl
stos
xor
out
adc
pop
push
adc
pop
and
enter
stos
aas
scas
pop
push
shrb
mov
jb
inc
scas
dec
xor
imul
cli
and
out
ja
adcb
push
jl
loope
ror
sbb
pop
andl
lret
push
dec
loop
out
popa
or
mov
inc
pop
jg
fldcw
sbb
mov
or
popa
subl
ds
xor
enter
out
lock
icebp
bound
push
inc
cltd
popf
adc
stos
mov
iret
cmp
test
dec
imul
mov
or
fwait
xchg
xor
sub
mov
push
cli
mov
inc
into
jnp
in
mov
jne
mov
xchg
dec
test
or
adc
jne
mov
pop
adc
inc
adc
pop
into
xchg
divl
jecxz
cmp
sub
xor
cmp
cwtl
sti
sbb
stos
popa
or
dec
lret
repnz
fsin
lret
inc
sbb
mov
data16
sbb
mov
mov
push
mov
nop
mov
arpl
into
push
adc
rcll
mov
pop
push
and
xchg
push
rol
sbb
and
mov
jbe
imul
jbe
adc
repnz
popf
cmp
rcrb
mov
dec
sbb
aas
or
pop
loop
insb
jp
xchg
add
xchg
sbb
ljmp
imul
loope
and
and
ret
ss
xchg
ret
xchg
cmpsl
imul
mov
scas
out
push
popf
cmp
sub
imul
inc
inc
pop
popa
out
xor
sub
pop
outsb
xchg
mov
addr16
adc
xor
arpl
pusha
ja
fstl
scas
fs
repnz
call
xchg
fwait
jbe
movsl
arpl
repz
sub
sub
movsl
jbe
aas
xor
popf
sbb
jns
loop
xor
pop
mov
in
push
sbb
shrb
ljmp
stos
loop
push
push
mov
mov
pop
lret
xor
mov
or
lcall
inc
data16
xchg
test
fisubrl
inc
hlt
and
outsl
fdivrl
js
push
cmp
daa
mov
mov
jmp
add
add
cmp
out
cld
out
icebp
xor
mov
xor
push
mov
jne
popa
mov
cmp
cmp
iret
cmc
cmp
loop
es
in
sbb
xchg
and
jge
sahf
test
mov
inc
test
test
jae
xor
mov
aam
jl
sub
xchg
loope
xorb
mov
inc
cmc
sbb
push
sbbl
dec
inc
dec
and
xchg
pop
push
clc
push
popa
jb
test
in
loop
jbe
pusha
or
divb
mov
cmp
cmc
pop
xchg
sti
cmp
ror
xor
xchg
or
push
and
cmp
mov
ja
int3
daa
jbe
sahf
or
xchg
and
icebp
dec
hlt
in
mov
cmp
and
and
cmpsb
jecxz
imul
adcl
adc
mov
dec
sub
cmc
xor
or
mov
fnstsw
push
mov
push
mov
push
mov
and
adc
es
sbb
nop
fs
lret
cmpsb
adc
xchg
imul
es
daa
cmpsl
cmp
sub
fildl
test
jp
mov
insl
jo
xchg
pop
adc
dec
outsb
or
xchg
mov
loop
push
fiadds
popa
dec
dec
dec
or
jecxz
jle
call
pop
mov
test
arpl
test
and
leave
loop
and
cwtl
shl
inc
sbb
adc
mov
mov
sbb
loope
xchg
xchg
fidivrs
outsb
pop
inc
and
dec
dec
sbb
sub
xor
dec
adc
push
icebp
sbb
mov
ss
cltd
mov
cld
sub
inc
push
nop
or
dec
rcrb
and
pusha
into
cltd
mov
shrl
shr
and
popf
pop
sub
adc
ja
int
push
pop
test
pop
jmp
push
imul
mov
mov
movsb
mov
mov
pop
fldl
sub
inc
flds
fisubrl
mov
ror
gs
cmp
mov
sbb
mov
add
xchg
xlat
out
pusha
xor
popa
popf
push
push
les
lock
cltd
add
call
sub
mov
jle
rcrb
pop
hlt
xchg
sub
xchg
das
sti
in
pop
cltd
push
xor
adc
sarl
loope
movsl
pop
and
cmp
cmp
lods
cmpsb
and
scas
add
addr16
inc
iret
lods
les
mov
iret
sub
push
mov
adc
mov
pusha
dec
leave
mov
adc
test
outsb
cmpb
call
sahf
add
into
out
cs
add
adc
mov
and
incl
xchg
inc
cwtl
imul
push
sbb
push
mov
xor
popf
xchg
mov
jecxz
and
xor
aaa
mov
in
cmpsl
cwtl
push
and
sbb
ret
or
mov
jle
and
sarl
add
iret
stos
sub
je
fisubl
jne
and
shl
sti
pop
dec
bound
outsl
mov
or
push
daa
sbb
mov
jno
shrb
mov
rcr
jb
pop
dec
mov
add
lahf
sbb
inc
sahf
xchg
loop
xor
xchg
fnsave
lea
mov
or
ret
cmp
cmp
mov
mov
push
mov
mov
sbb
aad
scas
sbb
lcall
ljmp
mov
jns
or
dec
adc
xchg
xlat
loop
icebp
jb
les
int
push
and
andb
mov
xchg
imul
sbb
sbb
fnstenv
mov
push
rcrl
add
adc
rcrl
imulb
leave
icebp
aaa
imul
loop
sahf
rorb
push
mov
es
xor
loop
test
sbb
stos
in
dec
es
loop
sub
xchg
or
jnp
ja
rcrl
lods
adc
mov
add
in
test
inc
ja
jns
lret
test
imul
or
je
cli
mov
xlat
cmp
push
xor
cltd
xchg
mov
inc
out
sbb
imul
jb
mov
pop
sbbl
movsb
pop
mov
outsb
mov
sbb
call
mov
outsl
rcll
sti
pop
clc
fdivs
dec
lea
stc
cwtl
inc
or
adc
sub
loope
cltd
sub
les
sub
outsb
and
push
xor
fwait
cltd
and
negb
test
out
sbb
adc
mov
loope
xlat
and
push
nop
sub
icebp
push
fs
mov
mov
xor
fimuls
dec
dec
popa
iret
das
sti
ss
fistl
xor
mov
call
lods
xchg
and
test
push
bound
adcb
and
pushf
out
xor
data16
push
stos
xchg
jp
loopne
leave
push
cmpsb
mov
push
xchg
hlt
and
push
popa
mov
mov
sahf
pop
adc
sub
pop
and
push
jl
or
bound
mov
stos
sbb
add
sti
imul
test
xor
cmp
xchg
sbb
nop
pusha
test
sbb
sti
fisubrl
jb
loope
aam
scas
pop
inc
pop
fs
fistpll
into
jp
and
add
cmpsb
js
repnz
je
mov
mov
xchg
aas
and
insb
ret
iret
inc
jg
mov
imul
xor
hlt
mov
mov
or
pusha
lods
mov
testb
mov
and
pop
pushf
or
jbe
sbb
jno
jns
jmp
icebp
mov
sbb
mov
cld
mov
or
jo
sbb
xchg
xor
mov
popl
mov
pop
jnp
addr16
xor
cmpsb
mov
sub
cltd
xor
test
xchg
adc
sub
xor
int
add
orl
dec
inc
dec
dec
xor
cltd
mov
mov
rcrb
jecxz
push
shrl
mov
das
ss
lcall
adc
adc
popa
sbb
pop
addr16
inc
int
cltd
xor
inc
cmpsl
or
push
je
aas
daa
add
mov
daa
in
aaa
bound
popf
and
sbb
in
jne
sbb
xorb
sbb
mov
xchg
mov
sti
push
and
push
mov
rorl
outsb
sbb
test
add
cltd
pop
push
xor
adc
inc
cmpsb
iret
adcl
lods
xchg
gs
cmp
xor
movsl
and
sub
das
repnz
fxch
or
xor
push
iret
lds
cmp
xchg
das
sub
push
push
outsl
mov
push
mov
lret
sti
sub
pop
xor
adc
xor
rcrl
sub
in
sbb
push
mov
sub
xchg
shll
rep
push
cmp
flds
xchg
int3
xchg
pop
outsb
lcall
test
sub
adc
in
inc
mov
inc
out
add
adc
test
ret
sti
int
sub
xchg
xchg
mov
mov
cmc
lock
xchg
or
pop
cmpsl
testl
and
add
iret
repz
pop
mov
fldt
sbb
mov
aad
and
lds
and
imull
insl
ss
sti
cmp
adc
lods
cmp
sahf
and
out
aam
fdiv
iret
cwtl
out
mov
popf
adc
cmc
imul
notl
adc
loop
inc
pop
and
adc
xchg
xchg
add
jno
jno
sbb
mov
or
cmc
movsb
xchg
and
popf
sbb
mov
xor
push
cmc
iret
add
push
mov
inc
insb
cmp
bound
jae
sbb
ss
in
decl
sub
mov
ljmp
mov
iret
adc
mov
inc
xlat
and
jns
sbb
mov
push
jecxz
iret
xor
jl
aas
adc
fcmovne
or
inc
sub
cmp
push
dec
cmp
pop
mov
mov
inc
or
lods
sbb
adc
scas
inc
fldt
popa
shll
adc
mov
subb
pushf
lds
sbb
js
cmp
movsb
mov
jge
cmp
cmp
push
or
jecxz
xchg
xchg
cwtl
add
and
test
cmpsl
push
outsl
sub
and
sbb
xor
in
sbb
fmul
cwtl
mov
stos
shrl
rorl
push
cmp
sti
sbb
fld
cld
adcb
xchg
push
ljmp
bnd
mov
repnz
xchg
test
stos
jne
xor
aaa
push
push
insb
imul
cmpl
push
es
mov
aaa
sbb
stc
jne
aad
aaa
aas
and
or
test
inc
je
xor
daa
sbb
or
lods
sbb
sub
out
lahf
test
aas
int
test
add
sti
and
cmp
dec
imul
inc
xor
ret
mov
repnz
jle
cwtl
adc
lret
push
jp
xor
inc
mov
pushf
mov
sub
pop
and
adc
cmp
mov
addb
xor
cltd
data16
or
mov
push
mov
mov
cmp
icebp
ja
call
addr16
push
fld
lods
mov
movsl
jmp
lds
cmp
push
ffreep
pop
inc
jl
je
rcll
loop
fs
cwtl
mov
mov
popf
dec
mov
imul
cmpsl
stos
mov
pop
inc
fistps
cltd
add
stc
inc
and
adc
mov
rcll
xor
dec
pop
mov
push
adc
fstps
bound
pop
das
bound
or
adc
stos
xchg
repnz
imul
push
xor
push
lods
lods
pop
sub
rcrb
adc
mov
or
xlat
std
pusha
int
push
adc
fdivs
mov
adcb
pop
sub
cld
repz
sbbl
sbb
ja
fs
mov
inc
jbe
xorl
bound
outsb
fwait
mov
mov
jp
push
sbb
arpl
popa
and
cmp
hlt
sub
jns
lock
pop
adc
out
sbb
adc
loope
popa
inc
lods
mov
loop
jl
aam
jns
sbb
fcomip
inc
xchg
xlat
xor
lcall
out
sti
and
sub
mov
pop
sahf
int
cmp
ljmp
addl
ds
inc
dec
dec
mov
call
inc
out
lahf
sbb
stos
aaa
xor
rorl
mov
xchg
shlb
sbb
dec
and
sub
xor
or
dec
sub
mov
out
data16
xchg
mov
xchg
outsl
cmpsl
lods
addr16
sub
adc
push
jnp
gs
or
js
sub
in
ficoml
stos
sub
push
aad
adc
inc
cmp
mov
orl
clc
or
scas
dec
push
xor
iret
add
xor
inc
loop
sbb
mov
add
push
mov
aaa
or
fisttpll
adc
jno
ljmp
mov
cmp
pop
xchg
sbb
or
addr16
insb
push
xor
lea
sarl
in
dec
loopne
jmp
ja
aas
loope
aam
rorl
ret
add
add
fldl
inc
imul
xchg
mov
mov
push
aad
dec
push
xor
mov
inc
push
adc
stc
cvtpi2ps
xorl
repnz
icebp
xchg
pop
jmp
sbb
pop
and
ret
in
cmpsl
mov
stos
data16
mov
lea
outsl
pop
rcrb
and
gs
xor
rcrl
loop
mov
xlat
mov
xchg
out
mov
das
inc
lret
sub
mov
add
inc
adc
xor
mov
inc
or
xorl
enter
cmp
loop
dec
pop
push
cmp
jne
scas
decb
or
lods
ss
sub
ja
sbb
jae
sub
fnstcw
mov
icebp
and
ds
fildl
lcall
inc
jns
jo
adc
or
sahf
les
add
aas
dec
in
in
push
je
jno
mov
mov
xor
cmpsl
jp
scas
mov
mov
aas
lods
in
cmpsl
mov
mov
adc
mov
sub
inc
adc
adc
push
cmp
roll
pop
call
inc
or
mov
xchg
and
push
lods
xchg
and
xor
cmp
sbb
repnz
js
fwait
out
mov
add
test
xchg
scas
int
setns
inc
scas
jg
xchg
stos
push
mov
and
xchg
sub
cmpsl
push
sbb
mov
iret
jg
pop
add
and
fsts
xlat
lret
mov
cli
push
test
out
and
pop
les
sarl
stc
sbb
jb
sbb
push
adc
ja
sbb
sarb
imul
push
mov
cmp
jl
fldt
and
clc
xchg
xchg
test
push
mov
lea
push
shrb
jne
imul
inc
iret
clc
cmpsl
sbb
in
movsl
xchg
cwtl
xchg
in
ja
lods
pop
popa
enter
popf
leave
and
repnz
jecxz
lods
int3
add
ja
in
sbb
mov
lret
dec
or
cwtl
cmp
push
jmp
xchg
and
mov
mov
dec
adc
adc
jl
xchg
mov
mov
loope
shll
ss
iret
nop
xchg
push
mov
loop
cmp
cmp
cltd
int
or
insl
xor
test
in
xchg
sbb
ljmp
mov
or
jo
repz
stos
repnz
es
push
jns
andl
fidivl
dec
fldl
bound
inc
mov
shlb
xchg
push
jp
dec
mov
ja
loop
or
out
pop
cmp
inc
aaa
xchg
mov
mov
or
push
and
and
lea
fs
adc
pop
arpl
pop
repz
pop
xor
adc
pop
lret
sbb
mov
sti
cmp
mov
dec
xchg
inc
sub
mov
subl
dec
xor
divb
and
push
jnp
sbb
xor
popa
jge
sub
aad
mov
and
mov
jmp
popf
subl
xor
pop
les
sbb
movb
or
iret
lcall
lods
jno
inc
jo
xor
shll
sub
and
int
jecxz
adc
mov
arpl
inc
xor
cli
ljmp
push
mov
cmp
loop
cs
jbe
cmp
scas
fistl
imul
fnsave
roll
daa
push
push
pop
push
mov
add
leave
cltd
add
mov
gs
addr16
and
std
mov
xchg
bound
mov
pop
inc
divb
pop
adc
xchg
cs
inc
add
je
inc
xchg
xchg
sbb
cmp
aas
repnz
xchg
or
jecxz
inc
int
mov
mov
inc
adc
dec
adc
and
sbb
inc
cli
mov
ss
es
jge,pn
adcl
and
pop
mulb
out
imul
xor
enter
and
dec
add
or
mov
out
loopne
loop
sbb
js
push
mov
fildll
xchg
cwtl
clc
daa
into
dec
mov
xor
or
or
mov
sub
loop
outsl
jae
mov
cltd
repnz
sbb
in
xchg
jo
ficomps
cmpsb
das
cmpsb
pop
dec
rcrl
mov
inc
out
dec
mov
and
pop
sub
add
dec
shlb
out
ficompl
add
push
rorl
jle
push
mov
fs
push
and
xchg
and
int
movsb
mov
lock
dec
hlt
xchg
inc
cltd
mov
das
mov
cmp
dec
out
lds
pop
sti
mov
hlt
pop
test
sti
mov
adcb
call
xchg
scas
pushf
xacquire
aas
or
cmpsb
in
mov
test
cwtl
cmpsl
cld
jmp
xor
sub
popa
cmp
mov
cltd
lcall
or
mov
mov
cld
cmp
jecxz
add
xchg
xor
lods
cmp
sub
cmc
cmp
cmp
sub
sbb
push
and
add
es
cmp
xlat
lcall
push
int
leave
sbb
jp
lret
sti
fnstcw
pop
add
adc
loop
in
sahf
orl
outsl
cmp
fadds
mov
mov
iret
repnz
push
inc
popa
sub
cmpsl
inc
mov
shrl
scas
push
mov
jno
mov
mov
mov
dec
mov
xor
adc
stos
inc
adc
xor
or
lcall
ljmp
cli
xor
test
mov
outsl
mov
cmp
adc
pop
mov
int
xorl
rol
jb
dec
jae
aas
lea
xor
sub
sti
sub
gs
call
mov
add
jnp
and
mov
pop
test
jae
ljmp
enter
pop
mov
mov
or
sub
fimuls
loop
adc
xor
push
adc
xchg
pop
pop
or
les
inc
mov
lret
pop
mov
repnz
mov
test
mov
scas
sub
lahf
or
imul
cli
jmp
jg
xchg
mov
daa
enter
and
out
cmp
ja
cmp
sub
jnp
enter
jmp
and
lods
repz
jae
popa
mov
fildl
and
cltd
xor
pop
cld
fistl
add
mov
mov
stc
xor
mov
mov
fs
cmp
pop
add
mov
xor
push
inc
or
aad
mov
pop
and
movsb
dec
pop
adc
cwtl
int
sub
das
push
xor
xor
or
pop
fwait
and
sti
jne
adcb
inc
movl
inc
test
movsl
xchg
mov
dec
and
or
jo
mov
fisttpl
into
jl
add
rcrl
mov
mov
pop
lcall
enter
addr16
pop
pop
adc
sbb
std
sub
aas
out
xor
push
inc
xchg
decl
in
sbb
mov
add
add
pop
mov
mov
and
packuswb
mov
sub
push
sub
adc
lock
out
mov
mov
dec
pop
das
and
loopne
fcmove
adc
sub
adc
xor
faddl
push
pop
ret
inc
rorl
clc
movsb
xchg
mov
dec
int3
sbb
pusha
lds
rcl
dec
pop
int
mov
push
push
test
xchg
dec
inc
std
sbb
bound
into
stos
xor
sbb
sbb
push
pop
cmp
int3
dec
pop
adc
mov
insb
sbb
and
lret
ret
fcomps
loope
push
js
xchg
adc
nop
je
adc
ret
sub
xor
xor
adc
xchg
and
inc
ss
movsb
cli
outsl
das
adc
enter
lea
frstor
jnp
test
repnz
ljmp
sub
jle
sbb
sub
adc
and
fwait
nop
cltd
ret
add
out
add
cmc
dec
imulb
repnz
cli
in
mov
push
ja
mov
inc
inc
pop
in
dec
sbb
cmp
mov
mov
clts
xchg
imul
jbe
into
xor
or
ja
shl
jle
pop
in
lret
aaa
ds
fsubr
sub
popf
xchg
stos
xchg
add
fists
sbb
add
sub
addr16
popa
pop
inc
and
sub
inc
sti
and
adc
call
mov
insl
sbb
xchg
cmp
aam
rol
into
popa
enter
fiadds
popa
std
sbb
dec
add
ja
shrl
jo
clc
pop
push
push
push
pop
and
and
lret
cmp
push
ds
jge
xor
mov
xor
cmpsb
into
in
and
jl
mov
ret
cmp
sub
sub
daa
cmp
aas
pop
mov
adc
mov
stos
push
int
push
notl
repnz
xlat
xchg
sbb
cli
mov
inc
fstps
arpl
test
sbb
test
sub
data16
in
jle
xor
add
mov
mov
dec
cmpb
mov
enter
adc
movsb
movsl
cwtl
aam
push
and
push
ljmp
lret
imul
shlb
fisubl
imul
sti
inc
stc
pop
xchg
loopne
mov
push
fimuls
mov
dec
int
mov
dec
sbb
xor
sub
and
xor
dec
outsl
sti
xchg
idivl
xchg
insb
pop
mov
cmp
cmpsb
add
adc
je
lret
add
inc
lret
mov
sbb
jbe
cmp
fbstp
lea
aad
or
inc
cmp
adc
mov
lret
pop
xchg
inc
inc
es
loope
outsl
dec
pop
or
popa
inc
inc
and
dec
mov
mov
ds
jle
mov
add
mov
xor
fwait
cmp
add
ds
or
xlat
mov
and
test
in
dec
mov
pop
aas
mov
bound
rorb
lods
xor
jmp
lret
mov
jb
or
movsb
push
xchg
daa
movsb
hlt
jne
scas
jns
mov
sub
mov
adc
sti
jne
shl
inc
lret
sbb
adc
aas
push
pop
out
fcmove
xchg
popf
loop
xchg
sti
jae
sub
lret
xor
popa
add
jmp
mov
stos
mov
movsl
inc
inc
pop
inc
jae
decb
mov
pop
pop
sbb
ficoml
in
adcl
stc
mov
add
imul
jmp
frstor
push
cmp
sbb
jns
sub
movsl
cmp
sbb
push
xor
mov
es
sub
mov
loope
xchg
mov
shl
inc
mov
and
repnz
popf
add
mov
push
add
lcall
in
outsb
mov
jno
lahf
aas
pop
fs
mov
sbb
adcl
stos
test
daa
add
outsl
jno
mov
cwtl
jecxz
push
sbb
dec
push
pop
pop
cmp
jp
adc
mov
ljmp
lea
adc
xchg
sbb
push
add
push
and
xchg
pushf
and
mov
and
sbbb
xor
out
jb
mov
test
push
push
mov
lods
ljmp
mov
mov
xchg
sahf
dec
ret
add
xchg
mov
enter
sub
stc
xor
adc
in
sbb
bound
sub
xchg
jae
cmp
loope
adc
or
shll
lret
stc
iret
loope
outsb
xor
imul
loope
fnstcw
push
imul
adc
loope
and
int
fs
adc
sub
sub
push
xchg
xor
xor
xchg
cmp
pop
and
mov
mov
loop
or
inc
mov
xchg
stos
jge
or
pop
bound
jno
push
out
inc
and
sbb
sti
xor
or
lret
and
popf
sbb
test
adc
xor
mov
bt
sub
inc
call
aaa
pop
xor
imul
jae
cmpsl
pusha
push
imul
inc
mov
add
lcall
out
and
sub
mov
out
xchg
jmp
push
inc
aas
in
sbb
adc
sti
xlat
sub
xchg
sahf
incb
sbb
int
ljmp
sbb
out
xchg
mov
sbb
xchg
ljmp
subb
fdivrp
jge
pop
adc
sub
xor
rclb
lcall
mov
xor
cmp
push
in
mov
jmp
scas
cwtl
mov
in
push
movsb
je
inc
es
das
orb
xchg
sub
scas
shlb
out
sub
test
jae
lahf
xor
in
cmpsb
mov
sbbb
mov
push
and
repnz
fcmovbe
pop
mov
xchg
sub
mov
pop
je
xor
pop
mov
xor
push
cmpsl
scas
lcall
add
ds
dec
push
dec
push
push
rcr
bound
cmp
loop
mov
sbb
mov
adcb
clc
sbb
int3
jne
popa
movsl
rolb
into
ljmp
fs
popf
shr
push
dec
jns
btc
cli
call
or
xor
pop
mov
rcrl
pop
fsubrs
rcll
ja
mov
add
popa
std
mov
lods
ja
imul
mov
bound
popa
mov
cltd
mov
and
movsb
mov
jge
cwtl
es
or
xchg
adc
sti
pop
loop
lret
and
aaa
mov
and
jns
xor
andb
fwait
mov
jbe
jae
stc
sbb
out
add
int
sti
outsl
sub
dec
and
push
outsl
sbb
fcmovne
gs
pusha
sbb
adc
push
js
xchg
stc
sbb
stos
ss
inc
cmp
cmp
adc
cwtl
and
and
movsl
sbb
dec
sti
jne
xchg
lcall
and
xor
dec
popa
sbb
xchg
and
cltd
sbb
mov
inc
test
sub
sub
daa
xor
hlt
ljmp
dec
movl
imul
bound
xchg
xchg
sub
push
mov
ljmp
stos
int3
es
stc
movsw
outsl
and
dec
inc
loop
inc
call
jl
ficompl
lock
insb
or
mov
cwtl
push
es
cmp
pop
xchg
cmc
loop
cltd
mov
and
imul
mov
jbe
lahf
jl
inc
push
push
inc
rclb
mov
imul
dec
pop
cmp
mov
fiadds
xor
and
xchg
stc
add
jmp
sub
jmp
or
cmp
jne
mov
and
rorl
repz
enter
aas
scas
jo
repnz
xchg
xor
stc
inc
ss
xor
push
mov
push
sub
mov
sub
mov
mov
imul
mov
stc
arpl
aaa
add
and
add
sbb
dec
in
aaa
xchg
jb
inc
es
push
add
call
sbb
inc
sbb
sub
jae
adc
cmpsb
cmp
cmp
mov
flds
xor
sti
mov
xor
xor
ja
mov
repz
aaa
sbb
dec
inc
add
and
lret
pop
out
in
add
mov
scas
jmp
push
aaa
cmp
sub
mov
int
add
adc
inc
pop
dec
add
mov
aaa
lods
dec
mov
insb
fbld
and
or
dec
pop
adc
sbb
std
mov
fsubrs
and
stos
aam
cmp
inc
shll
gs
adc
addr16
sbb
adc
cltd
or
rorl
in
aam
mov
adc
stos
mov
gs
mov
jnp
outsl
pop
aas
lods
dec
and
xlat
ljmp
stos
in
iret
adcl
jnp
jge
cmpsl
pushf
arpl
jge
popa
sub
xchg
icebp
hlt
into
stos
imul
mov
andl
pop
pop
std
or
cmp
imul
and
sti
mov
lods
jo
sub
stc
inc
xorb
xor
inc
stos
shll
les
or
push
ja
xchg
push
dec
loop
or
test
cwtl
adc
sbb
iret
jmp
popa
xlat
inc
sub
xor
ljmp
cmp
out
fs
pop
in
cltd
sub
loop
add
and
sbb
stos
mov
rsm
cmp
mov
call
insl
xor
incl
movsb
mov
pop
xchg
mov
sbb
dec
bound
sub
cmp
jg
pop
lahf
lcall
aaa
sahf
xor
push
sub
and
adc
sbb
add
mov
ds
mov
gs
cmpsb
adc
std
push
in
cmp
std
jecxz
adc
scas
and
jno
lret
add
loop
pop
sbb
xor
jp
popa
push
cmpsl
jae
and
push
sbb
mov
jne
and
inc
or
pop
arpl
bound
pop
mov
mov
cmp
icebp
inc
in
push
mov
adc
movsb
aad
int
xchg
sbb
stc
xchg
aad
cmp
mov
push
mov
cmp
stos
and
push
test
cmpsl
imul
cmc
jne
add
pop
and
push
movsb
mov
mov
inc
inc
movsl
daa
mov
push
in
out
xchg
sbb
xor
pop
mov
cmp
hlt
push
and
stos
rcrb
lcall
dec
mov
jmp
addr16
xchg
aam
push
cmp
das
cmp
fstps
xor
inc
std
sub
and
sub
daa
shll
andl
push
pop
loop
icebp
jbe
ja
sbb
mov
popa
sbb
mov
cli
cmc
orl
cmp
scas
mov
sub
fucomi
jne
sbb
lcall
mov
dec
or
mov
pop
xor
push
jl
and
add
dec
stos
mov
cwtl
sbb
sub
shll
push
mov
lods
into
jb
pop
ret
sti
in
or
sub
and
and
dec
mov
xor
iret
in
xchg
outsl
int
jns
xchg
fsts
call
lods
xor
movsl
push
pop
lock
push
xchg
sbb
testl
mov
loop
iret
and
les
gs
movsl
sbb
pop
int3
mov
lret
jl
dec
je
mov
das
ja
fcoms
mov
dec
test
aad
daa
push
mov
mov
clc
xchg
cmp
mov
lds
repnz
xchg
push
pop
jnp
jae
popf
xor
les
shrb
mov
add
dec
mov
sti
cld
imul
jo
shl
jae
std
test
mov
daa
cltd
insl
pop
jecxz
andb
cmc
add
mov
ds
push
sub
stc
xor
das
mov
mov
andl
or
pop
xchg
or
or
xor
cmp
icebp
and
mov
mov
sub
xor
adc
inc
cmp
xor
adc
daa
movsl
cmpsl
ds
adc
or
inc
adc
imul
out
je
jo
adc
lock
push
adc
dec
and
loop
push
mov
stos
fnstsw
mov
mov
pop
adc
loop
push
daa
xchg
das
inc
mov
jnp
sbb
inc
mov
mov
cmpsl
xor
arpl
xchg
fwait
or
adc
cmp
in
adc
push
loop
shlb
ljmp
xor
push
push
jmp
pop
or
ret
jb
inc
fisubrl
pop
jne
out
inc
lods
mov
push
push
and
lcall
pusha
xchg
test
stos
loopne
dec
and
test
lahf
call
loop
dec
inc
movsl
mov
xchg
push
and
stc
inc
cltd
jae
ljmp
sub
call
xor
daa
xorb
test
fwait
js
int
push
outsb
or
jns
sti
dec
push
int
cltd
lcall
sbb
ds
mov
loop
push
sub
mov
cwtl
jae
inc
cwtl
loop
imul
push
sbb
cs
xorb
loope
sbb
mov
mov
sahf
pushl
sbb
outsl
int
push
and
adc
fstl
adc
das
cmp
mov
sbb
pop
and
in
pusha
aam
int
movsl
out
jne
imul
pop
sahf
cld
mov
mov
sub
jp
lahf
das
sti
xor
roll
mov
mov
movsl
inc
out
adc
es
std
jo
fstpl
inc
jp
and
sti
dec
cltd
inc
cltd
das
subb
adc
pushw
das
stc
pop
push
sti
shrb
and
aam
je
pop
out
cmp
cmp
inc
sbb
xchg
xor
in
test
mov
xchg
xor
ss
cmp
mov
jg
pop
sub
lret
std
test
lahf
inc
out
lods
out
mov
xchg
xchg
adc
xor
pop
and
pop
sub
sbb
ds
pop
xor
mov
push
sbb
xor
xchg
loope
cmp
std
push
lcall
popa
jle
js
jne
dec
or
ret
popf
adc
addr16
ja
pushl
pop
pop
add
cmp
into
aaa
cli
mov
pop
push
xorl
shll
cmc
adc
int3
mov
mov
mov
aaa
cli
loop
and
pop
adc
mov
add
mov
adc
sub
clc
push
and
jbe
push
add
adc
sub
inc
sbb
pushf
faddp
dec
mov
ds
xchg
pop
clc
test
cmp
loope
pop
xchg
sbb
mov
lret
sbb
xchg
vcvttss2si
cmpl
jae
mov
loop
dec
test
xor
test
popa
test
mov
daa
lret
cli
sti
pop
inc
call
or
mov
jo
daa
jae
mov
ret
lea
adc
mov
icebp
addr16
aaa
push
loopne
std
push
pop
in
pop
aaa
cmp
pop
pop
xor
dec
addb
inc
fisubl
jnp
out
mov
adc
sub
orl
cmpsl
xor
add
sub
aaa
push
xor
push
add
movsb
push
cli
repnz
out
sub
push
rcrb
xor
ret
fldl
lods
lahf
lea
div
aas
sbb
std
pop
jmp
xor
sub
adc
and
sbb
and
xor
popf
sbb
idiv
dec
jne
dec
mov
sbb
stc
jmp
in
pop
leave
call
cltd
iret
cmp
mov
cwtl
sub
mov
adc
push
arpl
outsl
ljmp
jmp
mov
imul
mov
jb
or
loop
addb
mov
sbb
push
xchg
sbb
mov
push
ds
xlat
cmc
xor
inc
repnz
test
sbb
push
inc
ljmp
jne
sub
xor
mov
lcall
adc
loopne
pop
jb
rcr
xor
or
bound
and
push
lcall
cmpsb
cmp
adc
sub
push
push
inc
lret
or
or
jnp
and
bnd
adc
pop
sbb
cmc
pop
imul
mov
push
movsl
scas
lret
popf
mov
addr16
aas
cmc
and
out
inc
mov
movsb
loopne
or
pushf
push
stc
outsl
cmpsl
xchg
lcall
or
push
sub
subl
dec
push
jmp
adc
pop
pop
cmp
cmp
push
cmp
cs
decb
xor
inc
ret
xor
sub
pop
xor
push
fwait
data16
cmp
inc
jno
bound
sub
stos
dec
or
and
sub
xchg
mov
subl
jb
loope
fstp
lcall
sarl
scas
push
sbb
cwtl
divb
cmc
push
das
dec
lods
jmp
popa
clc
mov
push
repnz
jbe
hlt
pop
stos
mov
lret
push
pusha
pop
popf
mov
cmc
and
mov
dec
cld
xchg
lret
xchg
cmp
jecxz
push
and
mov
inc
imul
adc
lcall
stc
ret
jae
cmp
sti
jno
push
sbb
sub
push
test
loope,pn
lods
sub
in
ret
test
or
addr16
ss
add
call
jae
je
jne
mov
adcl
sub
rol
sbb
push
inc
leave
stc
jmp
or
xchg
lcall
ss
push
adc
inc
or
ret
mov
orb
popf
fadds
inc
leave
aaa
xchg
sub
or
fwait
dec
scas
pop
into
jge
in
cmp
sbb
xchg
fsubr
jb
mov
adc
xchg
inc
cmp
xor
dec
stos
daa
loop
mov
mov
and
mov
and
sub
dec
lahf
or
or
mov
loop
in
xchg
cmp
aaa
or
aaa
mov
pop
xor
icebp
push
xchg
pop
into
adc
inc
ljmp
cli
insb
loop
xor
adc
js
iret
pop
xor
imul
and
xor
in
imul
xchg
xlat
imul
shll
push
pop
jae
or
aad
push
inc
push
fs
rcr
push
dec
test
iret
fistpl
outsl
cmc
push
daa
sbb
adc
mov
sub
xchg
jmp
mov
popa
jl
adc
pop
popf
mov
outsl
sti
inc
pop
hlt
push
jne
and
shll
push
adc
sub
push
pop
xor
adc
lods
popf
lea
pop
xor
fmuls
popa
loope
jne
adc
xchg
jae
jno
iret
mov
pop
ret
jbe
imul
mov
hlt
mov
sub
xor
ds
cmp
sub
sti
jae
add
das
popf
and
sbb
gs
leave
pop
add
stc
mov
cmp
adc
xchg
mov
dec
gs
call
inc
popf
in
push
pusha
pop
dec
xchg
leave
loopne
aas
popf
das
mov
pop
stos
xchg
inc
mov
in
sbb
dec
loope
pop
jecxz
mov
sbb
aam
inc
pop
sub
clc
and
inc
pop
fisubs
mov
scas
test
lcall
imul
faddl
rorl
jle
xor
inc
mov
and
loop
nop
fs
pop
xchg
leave
dec
lret
mov
push
or
xorb
das
mov
outsl
lcall
out
into
lods
popa
or
hlt
xchg
in
aam
push
nop
test
mov
data16
nop
dec
mov
pop
mov
jg
mov
jne
inc
inc
cmp
push
mov
sbb
andb
xor
mov
and
lcall
sub
shll
cltd
in
xor
mov
cmp
mov
gs
loop
sbb
push
sbbl
xchg
mov
negl
add
iret
and
fwait
lds
sbb
mov
iret
mov
add
push
adc
loop
dec
rcrb
dec
cmpsl
xchg
scas
sbb
sbb
jo
jmp
and
loope
push
cmp
and
jg
js
pop
adc
fwait
sti
push
jnp
jbe
movsl
xor
xchg
push
sub
int
hlt
mov
push
ljmp
push
sub
dec
mov
les
test
cmp
call
addr16
jmp
dec
cmp
in
test
out
cmpsl
test
enter
aaa
pop
sub
outsb
cmpsl
push
stc
loop
in
movsl
and
nop
inc
adc
push
xor
sbb
inc
pop
dec
cld
cltd
lea
pop
and
fildll
test
xchg
push
xchg
loope
imul
cwtl
scas
mov
pop
loop
out
inc
pop
addb
cld
mov
sahf
movsb
cltd
mov
or
mov
dec
loope
popf
lods
cmp
and
popf
imul
jbe
xor
xchg
das
dec
pushf
jge
mov
push
sahf
loope
xor
sbb
adc
les
adc
rep
mov
sub
subl
sub
sbb
sub
repnz
inc
iret
pop
inc
mov
sub
inc
push
xor
sub
sti
lret
mov
cmp
and
scas
movsb
lret
mov
lods
xchg
mov
xchg
mov
mov
lret
scas
loope
sbb
xchg
jl
pop
and
sub
pop
adc
sbb
call
cmpb
jnp
pop
mov
stos
aas
loop
mov
dec
mov
mov
loope
inc
pop
xchg
xor
adc
sbb
cmpsb
shlb
lock
loope
fwait
cmp
test
jmp
push
mov
mov
not
mov
mov
jge
shll
adc
cwtl
push
movsl
pop
pop
and
sbb
push
mov
cli
or
jge
pushf
xor
mov
or
out
adc
sub
mov
ja
mov
jnp
jl
aas
ja
stc
mov
or
mov
push
scas
xchg
cmp
or
imul
das
dec
and
jmp
mov
xor
leave
push
pop
and
test
cmpsl
jg
not
data16
cwtl
loop
sbb
pop
cmp
das
js
push
test
mov
and
fstps
popf
jle
pop
inc
test
and
xchg
dec
enter
or
pop
xor
dec
inc
xchg
aaa
pop
loop
and
enter
add
or
dec
aas
cli
mov
sbb
push
sbb
imulb
dec
pop
or
nop
pop
out
popf
ss
sbb
sti
sbbl
sub
andl
add
iret
ret
loope,pt
cmp
push
mov
jg
inc
push
call
orl
adcl
arpl
mov
or
pop
int
mov
adcb
ret
xor
adc
icebp
add
pop
hlt
imul
mov
inc
push
mov
int
pop
arpl
int
xor
xor
and
fsubrl
sub
dec
pusha
insl
mov
sub
bound
adc
cmp
inc
mov
push
movsb
mov
nop
or
xor
fcmove
adc
and
inc
adc
cmp
pop
loope
dec
insb
xchg
or
fimuls
test
dec
xor
jns
das
nop
pop
inc
xchg
push
jnp
jb
xchg
jo
and
out
or
sbb
jnp
jne
mov
sbb
clc
in
dec
shr
push
fprem
inc
stos
andl
fnstenv
inc
fsubrp
movsb
xor
pop
lret
movsb
mov
xor
cmp
mov
pop
pop
hlt
mov
pop
ds
pop
and
sbb
pop
mov
jg
data16
cmp
bound
mov
loop
sbb
loopne
inc
xor
sti
insl
adc
icebp
mov
adc
push
jecxz
popf
sub
adc
mov
fldt
jne
jns
sub
daa
dec
clc
stc
xlat
shll
sbb
movsb
hlt
out
roll
loope
sbb
or
ss
mov
pop
mov
and
stos
or
mov
fmuls
iret
push
sti
je
inc
cmp
push
fs
in
adc
and
repnz
adc
push
xchg
sti
call
sub
xor
fcomp
jp
shlb
scas
pop
or
push
popf
fisubl
out
jne
cmp
test
xchg
mul
xor
mov
movsb
ljmp
fnsave
int
jecxz
ds
adc
pusha
gs
sbb
hlt
mov
fwait
xor
xor
loop
add
adc
aaa
xor
add
outsb
add
mov
fcomps
inc
sbb
or
mov
mov
inc
push
stos
aad
dec
cmp
pop
push
lret
sbb
push
bound
cmp
je
jb
aaa
loop
or
xchg
imul
jno
pusha
repz
dec
and
sub
inc
fisubl
mov
lods
lods
cmp
cmp
and
mov
inc
in
and
mov
xchg
dec
jg
xor
mov
mov
sub
or
jp
popf
dec
push
xor
leave
dec
leave
loop
ss
cmpsb
ja
scas
mov
mov
test
in
pop
repz
pushl
in
xchg
cld
in
jle
push
fwait
sbb
cmpsl
inc
imul
push
xchg
mov
sbb
jmp
xor
nop
push
dec
pop
adc
fsubs
repnz
subb
xchg
aas
jl
mov
insb
xchg
mov
jge
xchg
add
add
arpl
pop
dec
sbb
stos
xor
jbe
cmp
push
addl
inc
xchg
xchg
push
pop
nop
aad
fwait
add
ss
xchg
jg
xor
jnp
adc
mov
or
ds
sub
cmpsl
fs
sbb
add
and
sti
dec
or
mov
fmul
adc
scas
mov
jge
add
cmp
jae
inc
daa
cmp
push
push
and
pop
cltd
clc
cmp
and
pop
sub
loope
outsb
out
aas
cli
mov
dec
and
lea
fucomp
loop
or
jo
xlat
lret
lea
sbb
nop
shrl
sub
sbb
xor
inc
pop
adc
xor
repnz
adc
ja
fldl
pop
inc
pop
fisubl
mov
iret
movsl
xchg
sbb
pop
mov
stc
test
xchg
jno
out
cmc
cmp
call
stos
add
cltd
push
cltd
push
shlb
xor
mov
push
pop
bound
das
lret
outsl
faddl
xor
test
repnz
add
jmp
mov
xchg
pusha
sub
inc
imul
dec
sub
stc
lcall
test
mov
sbb
mov
mov
mov
cmc
je
movsb
cwtl
ja
cmpsl
jns
ljmp
jmp
sbb
or
stc
or
fsts
adc
jmp
pop
mov
add
mov
sti
dec
in
or
movsb
pop
mov
cmc
sbb
adc
sbb
xor
xor
sbb
arpl
jle
inc
leave
fcomp
mov
inc
sti
and
lds
rorb
adcl
les
shll
loope
inc
ret
iret
mov
hlt
mov
sbb
popf
repz
mov
sbb
and
test
jecxz
loope
jg
push
and
xor
mov
xchg
jge
inc
mov
jmp
or
dec
adc
stc
cmp
xor
jnp
xlat
and
in
adc
movsl
int
add
inc
xchg
les
gs
mov
and
mov
sbb
loop
lret
and
inc
aad
iret
and
int
lods
cmp
inc
and
in
movsb
nopl
popa
or
or
popf
dec
inc
scas
imul
mov
sarl
xchg
gs
jl
dec
sbb
loope
out
test
or
mov
lea
mov
lods
scas
pusha
aaa
lods
int
loope
inc
insb
mov
adc
lcall
sbb
xor
and
push
rclb
shll
call
mov
andb
xchg
movsl
sbb
or
cmp
sub
fwait
sub
out
push
mov
test
mov
push
xchg
and
sbb
xchg
adc
sub
cwtl
pop
mov
cli
mov
sbb
rcrb
dec
jno
mov
cwtl
imul
mov
mov
loope
fwait
mov
lret
leave
xlat
cmpsb
adc
in
xchg
addr16
push
mov
or
jbe
sbb
fstl
dec
cmc
in
call
outsl
repz
ljmp
xor
push
jmp
in
loope
movsl
insl
scas
add
loop
dec
neg
sbb
mov
dec
adc
dec
sti
xor
jno
mov
fisubl
repnz
mov
loope
movntps
mov
or
pop
lahf
adc
lahf
xchg
loopne
and
and
mov
push
notl
push
loop
mov
xchg
ds
out
xor
stos
adcb
loope
sub
pop
popa
loope
xchg
adc
loope
xchg
ss
pop
jne
imul
adc
jmp
loope
xor
sub
sbb
ss
push
push
sub
sub
push
mov
lods
inc
sarl
in
and
push
ret
xlat
inc
jg
jae
push
xchg
outsl
sbb
pop
outsl
fcoms
cli
pop
in
cmp
mov
mov
test
sbb
push
test
pop
or
and
mov
push
and
mov
call
pop
mov
mov
xchg
addw
lods
and
into
xor
push
inc
loopne
adc
or
mov
stos
push
mov
mov
scas
push
push
mov
iret
in
test
inc
xlat
dec
fildl
lods
lcall
sub
jle
adc
jnp
repnz
sbb
shl
xor
push
adc
inc
dec
inc
mov
pop
shl
jge
cs
fwait
mov
ljmp
mov
xchg
icebp
add
lock
inc
xchg
popa
and
and
fdivl
imul
sbbl
mov
and
xlat
lods
in
sarl
aas
mov
mov
dec
jmp
addb
adc
ret
sbb
test
mov
inc
movsl
stos
and
sbb
outsl
mov
call
push
add
cltd
cmp
lods
lret
mov
cwtl
icebp
xchg
push
mov
aaa
sbb
pop
cwtl
push
mov
leave
popf
imul
lock
cwtl
pop
jne
adc
adc
cltd
test
sbb
xchg
stos
add
xchg
lock
cmp
mov
fstpt
iret
cmp
les
out
xor
ret
and
cmp
test
xchg
pusha
fdivr
aas
aam
jl
mov
loop
loop
lret
or
jns
and
and
jb
call
rcll
xchg
xor
inc
add
inc
xchg
out
scas
sbb
out
mov
cmp
cmp
pusha
movsl
cmp
lock
pop
je
popf
cltd
sbb
movsl
mov
add
rorl
stos
xchg
aad
mov
sub
pop
pop
in
sbb
loope
stos
jl
xchg
ljmp
insl
pushf
dec
push
cmpb
mov
xor
jp
sarl
jae
mov
cmp
fs
dec
std
lods
sbb
mul
push
xor
pusha
in
and
sbb
in
xor
push
mov
ss
js
scas
and
mov
loop
daa
xchg
lret
imul
popf
sti
push
mov
test
mov
outsl
pushf
ds
sbb
xor
repz
in
das
scas
add
pushf
and
jne
sbb
mov
or
das
sbbb
jne
and
shll
jle
sbb
icebp
data16
je
jmp
repnz
cmp
jp
jb
out
push
sub
jecxz
adc
movaps
xor
jno
jle
sbb
imul
jns
aas
jbe
sbb
sub
fisubs
jno
cmpsl
lret
cmpsb
jmp
dec
dec
popf
mov
push
sbb
call
sahf
lret
repnz
icebp
in
gs
or
shlb
pop
cmp
addl
sub
adc
call
sbb
and
inc
and
lahf
push
xor
and
cld
sub
nop
mov
pop
xchg
loop
lahf
pop
movsb
push
pushf
and
and
sbb
add
insl
pop
les
sbb
xor
repz
mov
pop
ss
lock
inc
and
add
add
out
mov
pop
loope
sarb
loop
push
and
insb
cld
and
sbb
jecxz
inc
cmp
int3
shll
mov
add
xchg
adc
push
pop
scas
xchg
pusha
scas
loop
sub
loop
pop
add
sbb
les
test
ja
mov
adc
fimull
xchg
pop
or
popa
xor
arpl
push
cwtl
inc
and
cmp
pop
aaa
call
icebp
cmp
mov
cmp
fistl
xchg
sbb
jnp
aas
push
dec
jne
xor
test
mov
cmp
shll
cli
xor
loop
aas
cmp
xchg
mov
lock
mov
and
mov
cmp
insb
adc
rcr
mov
dec
push
shlb
fnstenvs
mov
ror
aam
mov
test
mov
movsb
pop
jb
loop
pop
sub
and
inc
jecxz
sub
xchg
xor
and
cmp
sub
jl
pop
xlat
dec
or
in
jae
jle
push
sub
lret
cmp
inc
cwtl
sbb
repnz
ret
mov
aad
in
and
lds
loop
stos
mov
add
lret
jne
cltd
sub
popf
xlat
les
xor
fildll
pusha
xor
add
pop
gs
mov
sti
pop
pop
sbb
dec
enter
bound
stos
cmpsb
mov
xlat
pop
aaa
xor
sub
ljmp
mov
cmp
cli
mov
or
adc
insl
inc
ljmp
xchg
aad
lcall
fcoms
cmp
sub
sub
stos
mov
outsl
cmp
and
scas
mov
out
and
loope
ret
mov
xor
cmpsl
or
dec
outsl
mov
mov
mov
adc
inc
adc
mov
xchg
push
mov
adc
pop
mov
adc
addl
in
sub
es
adc
pop
aam
mov
xchg
ss
sub
ret
sbb
sub
sbb
sub
gs
cmp
and
lods
ror
cmpsl
fchs
outsl
aas
repz
push
cmpsb
stos
test
fisubrl
push
inc
push
mov
pop
aad
arpl
fldt
inc
xor
add
ficompl
inc
adcl
cwtl
xchg
jae
sbb
pop
mov
ret
dec
cmp
pop
sub
and
pusha
mov
jp
cld
pop
pop
movsl
scas
test
xor
xorl
aaa
sub
pop
lret
daa
in
mov
sub
cli
aaa
add
xor
std
stc
cmp
mov
xchg
repnz
jecxz
popf
ss
pop
jnp
ja
out
into
push
cmp
and
cmp
in
fsubrl
movsb
shlb
mov
popa
push
pop
xchg
pop
mov
lret
shlb
mov
loop
popa
arpl
jp
into
push
int3
sbb
jns
je
sub
mov
push
inc
cltd
push
in
pop
jo
mov
fisttpl
jb
pop
test
add
and
sub
sbb
xor
jmp
add
sbb
cmp
pop
sub
push
sbb
mov
cmp
push
ss
aaa
int
ss
mov
inc
mov
into
repnz
loop
mov
lret
fdivrs
cmp
xchg
and
fs
mov
ror
divb
sahf
mov
ss
repnz
popf
add
or
push
sbbb
and
cli
shr
int3
lret
into
clc
addl
push
dec
push
dec
push
xchg
orl
push
popf
dec
xchg
pusha
add
xchg
xor
xchg
xor
fsts
leave
aaa
ret
cs
push
dec
mov
mov
cmp
bound
ljmp
ret
xor
lahf
das
push
enter
xchg
mov
push
dec
test
sub
xchg
inc
xchg
mov
popa
jle
adc
add
pop
insl
aaa
cmpsb
inc
ja
jns
pop
xor
test
fbstp
jno
in
push
rclb
adc
cmp
add
cmc
sbb
popa
push
cmp
cwtl
sbb
iret
lods
add
mov
out
inc
arpl
out
xor
sub
push
or
pop
fsts
std
add
hlt
push
add
sbb
lds
xorb
icebp
push
push
data16
sub
std
push
xchg
or
out
mov
mov
and
jae
lahf
push
out
sbb
and
loop
pop
lea
lods
repz
out
iret
ds
mov
lcall
dec
xlat
mov
insl
inc
in
insl
push
xor
sbb
es
push
jbe
add
dec
sarb
stc
gs
loop
sub
sbb
pop
sbb
cli
xor
sub
sub
push
orl
adc
or
iret
add
and
xorb
or
dec
cmp
mov
cmpsl
mulb
into
imul
mov
push
cmc
icebp
xor
ret
mov
ds
mov
mov
add
xchg
imul
fldln2
mov
sub
addr16
mov
mov
push
jne
push
stos
xor
loop
out
out
mov
sbb
out
sub
lret
xor
lds
test
lea
lcall
lcall
xchg
pop
xchg
in
sub
out
loope
inc
cmp
ror
stos
xchg
out
and
push
imul
jmp
mulb
pop
jmp
fldt
test
repnz
sub
cmp
push
push
cmp
stc
mov
pop
imul
pop
dec
loopne
push
je
lock
mov
popf
add
inc
cmp
cmpsl
push
popa
dec
push
pslld
rclb
int
es
push
cmpsl
push
cli
mov
pop
and
xchg
inc
push
jno
and
add
lea
xor
or
xchg
xor
or
or
xor
pop
jnp
cmp
cltd
adcl
ds
sub
dec
pop
mov
int
stos
mov
rclb
in
fistl
xor
push
and
sbb
jg
ret
mov
outsb
icebp
add
xor
push
scas
xchg
jno
enter
iret
sub
mov
jbe
mov
cmp
xor
pop
and
mov
sahf
mov
aaa
ret
stc
aaa
push
and
sub
xorl
jge
mov
dec
cld
sbb
mov
mov
insl
jo
xchg
mov
dec
add
aas
vcvttsd2si
icebp
aaa
shrl
xchg
aam
test
fs
scas
les
mov
ss
ja
and
out
insb
jge
mov
sub
sbb
fisubl
adc
inc
cmp
sub
iret
leave
popf
rcrl
imul
or
adc
pop
aas
and
mov
push
sub
scas
inc
popf
jnp
sbb
jns
add
into
ds
push
xchg
insl
cmp
scas
in
cmp
bound
push
and
dec
fdivrs
repnz
ret
or
sti
leave
jge
cmp
sbb
movsl
sbb
sub
mov
inc
and
mov
xchg
adc
lcall
add
mov
pushf
sub
test
mov
or
int
lods
lds
arpl
or
ljmp
mov
jg
and
movsb
adc
and
jne
inc
dec
ss
lret
adc
cltd
daa
lods
pop
cli
std
cwtl
cmpsl
popa
lds
adc
mov
sbb
jmp
adc
rcrl
mov
sbb
lods
and
nop
push
or
xor
loop
test
and
les
lret
imul
sub
movb
shlb
sbb
push
lret
or
dec
or
lock
inc
push
sbb
leave
xchg
adc
adc
js
mov
test
imul
pop
out
sub
jnp
aaa
repz
stos
xor
data16
test
js
sbb
fildl
stos
imul
popf
sub
mov
xor
push
cmp
push
adc
nop
dec
xor
ret
addr16
cmp
popf
xchg
or
inc
mov
push
cmpsl
pushf
mov
xchg
jg
imul
dec
push
and
add
adc
sub
and
insl
data16
jns
sti
ss
nop
mov
inc
pop
vmwrite
mov
sbbl
sub
in
xchg
dec
mov
adcl
or
sbb
add
mov
imul
mov
pop
leave
aam
dec
imul
xor
ret
sti
fildl
movsb
fiaddl
xchg
pop
mov
or
inc
jmp
sbb
test
sub
cmp
mov
iret
dec
adc
and
inc
and
call
adc
cmp
test
adc
mov
call
add
popa
sub
dec
lds
mov
fstps
sti
shlb
sub
and
xchg
mov
or
sahf
adc
and
xchg
cltd
jmp
fstpl
icebp
cs
stc
push
xor
fcmovnb
mov
mov
loop
sbb
orb
xor
mov
mov
push
in
adc
pop
aam
pop
inc
pop
sub
jns
jno
inc
jmp
pusha
pop
add
cmp
loopne
outsl
das
push
add
inc
or
mov
sub
mov
push
and
adc
sbb
mov
sub
inc
xor
mov
outsb
jl
lret
mov
jns
int
lcall
add
push
push
in
loop
sbb
out
test
icebp
pop
aam
pop
inc
insl
mov
and
call
xchg
sbb
mov
xlat
push
and
lea
inc
cmp
ret
xor
cmp
or
popf
xor
flds
ja
jg
jmp
cltd
jmp
push
out
out
jmp
jmp
or
jge
adc
je
jl
jbe
push
fwait
push
jbe
adc
add
pop
push
xor
cmp
push
aas
sbb
test
in
mov
or
sbb
xor
test
aas
stos
inc
pop
lods
popf
gs
in
inc
xlat
jl
in
cmp
pop
sbb
adc
movhps
sub
and
xor
sahf
adc
jge
mov
sarb
scas
ret
sti
test
ret
insl
lret
dec
scas
mov
lds
xor
repnz
sub
outsb
mov
aas
mov
aam
inc
imul
fdivs
inc
dec
jmp
into
cmc
fildll
daa
sub
xor
mov
icebp
dec
iret
xchg
test
add
inc
inc
push
and
ret
jmp
and
imul
outsl
sub
repz
ljmp
xchg
or
push
inc
xchg
sbb
call
add
stos
call
inc
loop
test
cwtl
adc
movsl
cmp
shrl
in
jmp
ja
jnp
cmp
xor
outsl
sbb
repz
rorb
call
sub
mov
roll
clc
pusha
sbb
mov
cmp
push
stos
xchg
and
xchg
fs
sti
sub
cmp
adc
xorl
push
ret
addl
test
fwait
sets
jecxz
mov
sbb
adc
jae
inc
rcrl
push
out
ds
shll
or
out
adc
inc
mov
sub
and
sbb
gs
stc
daa
cmp
ljmp
rol
mov
cs
adc
imul
xchg
mov
xchg
int
mov
std
mov
movsl
pop
sub
and
dec
and
das
push
out
movsl
xchg
and
jae
sub
mov
push
sahf
jmp
leave
adc
adc
outsl
jp
arpl
sub
rorb
mov
adc
xchg
cmp
jno
adc
cmc
cli
jne
call
int
in
popa
stc
push
loopne
loop
sbb
sahf
xchg
call
pop
addr16
in
jb
data16
jne
mov
sbb
xchg
xchg
sub
loop
xchg
addr16
push
jecxz
pop
jbe
es
imul
jecxz
lahf
cmp
push
fsts
dec
lods
jp
xor
sbb
imul
sbb
jge
lret
pop
xor
push
mov
xchg
mov
lods
xor
addl
pop
cs
js
out
mov
adc
jmp
push
xor
jno
xchg
mov
xor
das
cs
out
adc
inc
push
int3
adc
lods
rcrl
stc
repz
sbb
push
rcrl
insb
je
and
mov
xor
push
imul
xchg
into
or
add
addl
sbb
sbb
orl
push
or
clc
dec
mov
fstpl
jl
cwtl
mov
sub
cmp
lods
popa
mov
sub
jl
mov
add
cmp
sub
mov
mov
imul
push
cmpsl
xchg
stos
or
in
ss
ret
xor
icebp
sub
pop
mov
mov
and
in
clc
cmp
inc
ja
xorl
mov
cmpsb
push
insb
push
inc
sub
and
xchg
inc
aas
cmp
mov
xchg
movsb
cmp
fstps
aaa
shrl
xor
sub
add
mov
jl
and
aad
test
push
add
sbb
popf
iret
mov
dec
fistpl
out
pop
inc
adc
bound
mov
jl
inc
popf
pop
mov
popf
push
inc
cli
inc
insl
push
push
test
pushf
lods
loop
add
sbb
hlt
cmp
pop
imul
movsb
dec
ss
pop
cwtl
cmp
adc
dec
lds
sbb
pop
inc
pop
add
push
jle
rolb
mov
adc
jne
jae
xchg
inc
adc
sbb
cmp
scas
pop
mov
xchg
push
lods
fdiv
das
cltd
and
dec
shlb
ficoml
sbb
add
add
scas
sub
shrl
xchg
int3
lret
shll
in
test
or
dec
ss
sub
sub
lret
outsb
push
mov
dec
sbb
fnstenv
aad
mov
jl
sub
subl
stc
leave
xchg
sub
jb
dec
ds
in
loope
je
add
inc
sub
sbb
jg
icebp
and
cltd
jmp
lahf
ret
les
dec
xor
sbb
test
punpckhdq
popa
in
xor
ss
sbb
adc
and
lea
and
xor
jo
xor
and
sbb
mov
in
sub
call
loop
pop
sub
and
mov
xchg
dec
in
adc
fsubr
aas
or
packsswb
daa
ret
lahf
pop
mov
js
cmp
pop
add
xor
xor
push
mov
loop
push
mov
add
mov
mov
adc
jmp
or
sub
movsl
ret
mov
cld
aaa
daa
icebp
clc
xor
insb
popw
stos
mov
cmp
jmp
dec
insb
xor
dec
movsl
fisttpl
pop
pop
aaa
dec
and
jmp
imul
jno
sbb
test
jg
sub
sbb
cs
bound
add
sbb
adc
mov
jecxz
shll
fwait
mov
stos
mov
mov
add
imul
mov
xor
push
push
or
and
mov
imul
and
cmp
push
addr16
in
add
inc
int3
xchg
adc
lret
ljmp
int3
lret
stos
movsl
push
fstl
shlb
sub
sub
out
bsf
xor
cmp
xor
rclb
loop
daa
xchg
aas
in
fbld
xor
leave
dec
test
scas
loop
push
dec
repnz
inc
pop
xor
and
ja
mov
adc
bound
int3
cmp
adc
cmp
jae
das
loop
bound
popa
in
cltd
pushl
inc
mov
mov
pop
shr
test
fwait
movsb
mov
jb
sub
dec
xchg
lret
mov
ljmp
sbb
dec
loop
mov
xchg
fcom
dec
pop
and
or
jmp
setp
cmpsb
jle
xchg
loop
addr16
or
and
loop
push
ret
sbb
add
popf
xchg
inc
jmp
in
inc
push
fdivrl
leave
mov
sub
jge
lods
arpl
xor
cs
pop
pop
call
mov
add
xchg
jne
fwait
push
push
push
dec
dec
adc
pop
xor
and
xchg
addb
and
push
out
test
rorl
movsb
adc
lahf
cltd
std
mov
sbb
lods
mov
push
sbb
xchg
mov
cmp
imul
mov
adc
and
xchg
test
shl
xchg
or
sahf
fstpt
lcall
bound
adc
jecxz
in
sbb
xchg
mov
jns
pop
cmp
sbb
lahf
pop
in
inc
jns
mov
or
repz
aaa
lret
mov
inc
and
jae
popf
test
lea
fidivl
mov
je
js
sub
xchg
dec
push
cmpl
pcmpeqw
js
fidivrl
sbb
lods
sub
dec
or
xor
mov
int3
xor
and
aaa
xor
xor
fildll
jle
xchg
xchg
xchg
mov
push
loop
push
in
fistps
rcr
and
movsl
adc
inc
cli
or
xor
orl
xor
ljmp
sub
xor
int
negl
inc
sub
mov
jno
pop
xor
popa
iret
inc
les
mov
mov
std
scas
xor
and
sub
popf
sbb
mov
mov
mov
sti
pop
adcb
push
jb
mov
cmc
dec
jp
pusha
decl
sbb
mov
rcll
cmpsl
movsb
stos
repnz
pop
adc
stc
ss
clc
lods
pushf
or
cmp
add
or
cltd
out
xor
and
pop
scas
jae
pushf
mulb
sub
xchg
sub
inc
and
mov
sub
xor
mov
and
adc
xchg
dec
int
pop
call
dec
cmp
loop
mov
and
rcll
jo
mov
cmp
add
add
and
jecxz
bound
adc
sub
mov
popf
cmp
sub
test
scas
mov
loop
dec
fstpl
pop
and
es
jge
int3
in
xchg
fs
sbb
push
ds
mov
and
ret
xor
cmp
dec
cmpsl
push
sbb
xor
xor
pop
xor
in
cli
jmp
fnstcw
cmc
xchg
cmp
popa
jmp
ret
shl
jae
and
adc
push
xor
loop
and
popa
pop
aaa
jno
insl
int3
aam
ds
aad
pop
xor
and
jo
xor
lcall
mov
adc
lahf
cmp
mov
sub
xor
sub
sbb
and
jecxz
pop
into
popf
sub
call
xchg
inc
aaa
es
jge
and
test
popf
push
std
xor
mov
inc
sub
push
jae
into
adc
sub
divl
and
fmuls
pop
pop
mov
jl
dec
je
popa
scas
adc
ror
sub
mov
xor
inc
and
xchg
out
fsub
hlt
mov
fstps
sub
daa
outsl
sbb
adc
inc
and
loop
sbb
cmp
or
inc
mov
and
sub
inc
ja
loop
dec
std
inc
inc
fldl
bound
and
mov
push
xor
outsb
dec
and
xor
push
xor
gs
mov
lods
jle
ljmp
mov
in
pop
scas
ss
sti
inc
stos
or
cmp
push
cmp
stos
ja
call
sahf
inc
mov
in
cmp
or
push
adc
ret
jl
rep
and
insl
add
mov
movsl
lods
jg
js
push
mov
mov
nop
incl
mov
push
xchg
in
add
sbb
and
jno
popf
xchg
cs
xchg
orl
push
pop
or
mov
push
out
add
andl
sti
xor
xchg
test
push
xchg
push
or
cmp
lods
stos
pop
adc
xor
mov
mov
mov
xchg
inc
shrl
arpl
pop
nop
orl
aam
daa
push
int
dec
add
fisubrl
fidivrl
flds
sub
mov
sub
mov
outsl
mov
and
cltd
push
inc
int
adc
shld
mov
xor
insb
cmp
mov
push
dec
and
stc
pop
dec
and
mov
mov
and
scas
sbb
xchg
pop
cmp
mov
les
lcall
sub
and
adc
fistl
lea
setl
bound
sub
loop
shlb
das
mov
xchg
push
sbb
cmp
push
rclb
stos
popa
test
mov
std
nop
and
sbb
call
pop
movsb
xor
stc
fildl
lret
inc
mov
cmpsl
mov
cs
and
mov
lcall
or
sub
leave
mov
push
and
cltd
sub
hlt
mov
in
popa
int3
inc
movsl
pop
test
inc
in
dec
incb
and
xor
xchg
cmc
xchg
lock
xorl
fcoms
add
test
hlt
jns
mov
jl
lods
adc
sub
jecxz
scas
sahf
pop
das
shll
cmp
push
xor
leave
cmp
sub
xchg
adc
sub
out
xor
xor
sti
outsl
outsl
jecxz
lret
loop
cmp
rcrl
out
jns
movb
push
outsb
lock
push
adc
xchg
jno
mov
sub
pop
jp
ja
mov
stc
sbb
xchg
pop
stos
int
cmpsb
dec
lods
and
mov
stc
xor
push
sub
adc
negb
push
loop
adc
sbbb
test
push
xchg
mov
nop
push
pop
sbb
add
in
mov
daa
jecxz
mov
int3
and
aaa
or
xor
into
mov
cwtl
call
xchg
xor
jge
and
movsl
jecxz
pop
mov
aas
lcall
push
xor
call
insb
dec
ficoms
lods
cmp
inc
push
test
test
sub
jno
and
or
faddl
add
adc
cmpsl
and
fdivl
stc
icebp
fld1
in
mov
xor
icebp
sub
mov
in
mov
mulb
cld
das
fisttps
mov
cmp
daa
add
push
shrb
lds
test
xchg
dec
sbb
mov
adcl
mov
dec
jo
mov
sub
call
cmp
mov
in
fnstcw
mov
mov
cld
jbe
sub
xchg
movsb
and
outsl
mov
out
dec
aaa
and
jno
mov
xchg
xchg
jno
ja
in
inc
xchg
xor
fs
push
inc
insb
lods
outsl
jb
xor
xor
and
xchg
into
or
ds
inc
xchg
cltd
adc
xchg
xchg
or
out
cmp
sbb
adc
jg
adc
dec
stc
insl
scas
and
pop
jbe
shr
sti
and
xchg
mov
jp
xor
es
fwait
cmp
mov
jae
cmp
sbb
mov
shr
xchg
das
or
lcall
and
sub
jmp
push
aam
cmp
sbb
xchg
jns
xor
or
mov
stc
sbbl
push
jb
std
ja
add
xchg
jl
movl
and
pop
rcr
mov
out
je
sbb
insb
rcrl
jecxz
cmpsb
outsb
cmp
loop
mov
std
sub
inc
jge
and
dec
xor
ja
pop
pop
inc
or
and
mov
mov
daa
mov
push
xor
mov
das
jle
adc
jnp
mov
cmpsl
xchg
jb
xchg
cltd
lcall
cmp
dec
or
and
and
xchg
sbbl
inc
jae
loop
add
jae
fisttpll
or
cmpsb
pushf
or
int3
sahf
repnz
xchg
push
jae
fwait
mov
push
inc
in
adcl
fstl
and
pop
adc
ret
shll
push
into
mov
inc
push
xchg
xchg
imul
jecxz
mov
stc
mull
das
cmp
xchg
sub
dec
mov
ss
adc
push
dec
pop
add
in
add
fisubrs
push
or
dec
push
pop
adc
out
fwait
sbb
popa
jo
fnstsw
jae
sub
sarl
xor
rcll
inc
push
cmp
cmpsb
dec
xor
call
outsl
imul
sub
insl
pop
xor
xor
addr16
ret
stc
inc
mov
int
adc
das
sub
call
xor
push
add
sarb
cmpsl
stos
dec
xchg
sti
sub
or
xchg
jo
xchg
add
shll
fcompl
std
add
mov
sbb
xchg
hlt
stos
xor
daa
fmull
fisubrs
sub
pop
clc
and
pop
push
das
and
out
sbb
inc
ret
loop
cmp
cld
pushf
scas
cmp
sbb
out
xchg
pop
jmp
jb
or
xchg
jmp
mov
mov
xchg
mov
fwait
lret
std
adcl
jns
xchg
and
xor
rcrl
adc
sub
pusha
je
rcrb
iret
aad
pop
sub
push
fildl
fldl
inc
aad
mov
fstps
mov
scas
cmp
and
push
movsb
xabort
in
out
aaa
pop
mov
push
sbb
mov
movsl
movsb
clc
das
les
and
lret
and
fwait
jns
jg
inc
fldt
stos
cmpsl
fcmovu
ret
xchg
fidivl
div
adc
xor
xchg
stc
imul
pop
adc
cmp
or
and
or
lods
fistpl
loop
sbb
cmp
push
dec
in
ja
add
mov
push
das
test
movsl
sub
sbb
xlat
cmp
aas
fwait
ljmp
notl
mov
movsb
xchg
and
mov
popa
je
xor
ja
fstpl
dec
push
pushf
jae
in
lret
scas
push
popf
cmpsl
cmp
idivl
lahf
int
mov
push
mov
or
sbb
fsubl
and
shlb
cmp
movq
xchg
lds
xor
andb
xchg
pop
addr16
jno
mov
shll
aad
mov
ja
insl
xchg
mov
sub
shrl
and
rcrb
ss
xor
loope
lock
cmpsl
pop
lret
shrb
cmpsl
push
mov
jl
loop
sbb
ret
call
aad
cltd
cmpsb
rcrb
dec
sbb
and
adc
adc
jmp
mov
xor
push
cmp
add
xor
lahf
inc
ss
inc
out
jne
inc
outsl
adc
jl
mov
ss
outsb
movsl
sbb
and
and
stos
sub
cmp
xchg
sbb
mov
dec
add
addl
sti
pop
into
jecxz
rorl
mov
cmp
data16
fucom
jmp
add
lcall
sbb
popa
adc
int3
push
jle,pt
rol
lret
nop
negb
jg
push
mov
or
or
and
fwait
cmc
data16
and
sub
bound
clc
sahf
dec
popa
loope
pop
lahf
std
scas
sbb
lods
rorl
ret
stc
inc
pop
cltd
loop
sub
cmc
in
xchg
arpl
pop
sub
xchg
mov
xchg
inc
sti
xchg
cmp
repz
imul
mov
xchg
dec
cmp
es
xchg
bnd
popf
test
ret
mov
jl
and
cli
sub
mov
jae
jmp
and
mov
push
mov
fnstenv
imul
pop
mov
mov
and
cmp
movsb
stc
mov
inc
sub
ja
loop
les
divl
and
imul
mov
or
push
inc
ljmp
sbb
aaa
stos
fs
call
outsl
xor
call
cld
xchg
mov
testb
loop
mov
iret
mov
jne
sahf
imul
data16
lods
mov
loop
fcoml
pop
andb
inc
mov
ret
stc
push
xchg
xchg
add
xor
inc
cmpsl
jbe
imul
push
inc
cmpsl
and
clc
jp
jne
inc
imul
sbb
loope
aad
lret
xchg
call
call
out
push
xchg
adcl
xor
or
iret
fwait
in
lret
or
jbe
push
adc
popf
jp
xor
mov
inc
adc
adc
addr16
push
lcall
or
adc
adc
dec
push
imul
and
pop
mov
and
adc
dec
add
ljmp
dec
aaa
mov
mov
rcrb
pop
fwait
cmpsl
push
ljmp
fs
cltd
shlb
int
pusha
sar
or
mov
scas
and
aad
inc
sub
mov
sub
cltd
push
inc
sbb
call
mov
push
mov
dec
pop
pop
mov
pop
xchg
or
loop
pop
push
pop
xchg
mov
and
pop
mov
stos
out
movsb
leave
cmpsb
loop
mov
movsl
cs
and
mov
jle
rcrl
testb
std
gs
add
fcompl
lods
or
sti
mov
xchg
sbb
xchg
pop
xor
call
pop
test
mov
jno
add
lret
push
out
dec
jno
mov
fcomps
cmc
lods
push
mov
out
xchg
aas
cli
inc
and
sbb
sti
adc
jge
sub
in
dec
imul
jno
xorl
test
inc
inc
test
js
mov
imul
or
insb
xor
inc
stos
enter
push
enter
stos
push
sti
sub
add
sti
ror
iret
dec
insl
fmuls
pop
icebp
sub
push
push
cmpsl
mov
xorb
ja
cmpsl
cmp
xchg
sahf
lret
subl
ror
andb
mov
pop
jno
cltd
pop
addb
dec
jnp
test
xor
int
aaa
sti
inc
out
cmp
js
mov
in
andl
xchg
scas
stos
aaa
push
bound
das
cld
arpl
call
arpl
subps
in
testb
aam
xor
pushf
and
or
popa
cmpsb
push
cmp
test
push
cmp
push
inc
mov
pop
and
push
insl
in
cmp
loope
loope
jno
inc
cmp
test
push
ljmp
dec
sbb
rcl
mov
loopne
sbb
pop
mov
adc
fadd
adc
mov
and
cmp
pop
adc
adc
and
push
pop
xchg
pop
iret
xor
sub
cmp
mov
mov
xor
test
xor
je
inc
lret
movsb
das
xor
in
pop
and
mov
xor
dec
gs
cltd
adc
ja
or
inc
fisttpll
and
and
cpuid
xchg
adc
das
mov
sbb
stc
pop
mov
sbb
pop
push
sti
in
imul
sti
fcmovb
psadbw
sbb
sbb
xchg
cmp
pop
adc
in
mov
cli
in
cmp
fldl
and
jns
ds
push
leave
xchg
aas
stc
popa
cltd
loopne
add
and
bound
fwait
add
inc
lods
sbb
pop
cwtl
or
test
push
mov
arpl
hlt
loop
push
or
cmpsl
sbb
jb
cmp
cmpsl
in
adc
pop
push
xor
stos
mov
cmc
xor
xchg
popf
movsl
sub
and
push
mov
inc
xor
test
push
mov
or
daa
inc
je
loop
popa
cmp
ljmp
sub
xchg
daa
jnp
test
loop
fdivrs
pop
push
sahf
mov
dec
mov
mov
lret
cmp
push
or
push
mov
cli
lahf
xchg
mov
and
push
lods
cmp
test
cmpsl
adc
or
lock
inc
cmp
or
and
push
sar
xchg
add
xor
jmp
in
dec
in
pop
pop
lret
cltd
insb
mov
pop
pop
cs
test
push
fldenv
add
aad
mov
stos
or
jge
lods
adc
and
sahf
sub
aaa
mov
das
lock
cmp
mov
mov
push
sub
push
popf
in
pusha
outsl
aaa
enter
xor
loope
fildl
fisubrl
jecxz
iret
packsswb
lea
insl
iret
in
cvtpi2ps
insl
and
jle
outsl
fmuls
out
and
and
mov
cmp
push
es
xchg
sbb
cltd
inc
test
loop
fwait
sbb
and
dec
js
fnstenv
adc
ds
sti
stos
push
xchg
popa
in
xchg
push
xor
in
fsts
cmp
push
or
inc
out
shlb
xor
xlat
fidivrl
pop
lcall
mov
popf
mov
lods
test
push
imul
lock
xor
sbb
mov
rorb
dec
xchg
sbb
pop
cmpsb
push
cmp
pop
cmp
xor
pop
xchg
ljmp
bound
leave
sbb
push
dec
mov
add
stc
cli
cmp
loop
xchg
sarb
stos
adc
les
adc
sub
xor
mov
repnz
mov
rcll
mov
inc
xchg
and
push
xor
add
inc
gs
or
fst
inc
push
cwtl
sbb
sbb
cmpsl
pop
pop
sub
inc
pop
aaa
loope
fiadds
cmp
popa
dec
shll
xor
push
sub
ret
rcrl
xlat
push
inc
cwtl
idivb
pushf
xchg
jmp
enter
adc
adc
mov
cmp
cmp
jge
inc
aaa
dec
cltd
push
repz
cmp
je
sbb
push
cwtl
stos
movsl
adc
movsb
mov
or
sbb
sub
mov
inc
pop
mov
les
and
xor
pusha
jnp
arpl
and
add
add
loop
movsl
jg
and
es
jecxz
adc
aam
xor
rcrl
hlt
loop
mov
hlt
adc
loope
fnsave
stc
imull
inc
mov
dec
xchg
dec
jo
push
dec
push
mov
sbb
push
pop
movl
cmp
sbb
andb
sub
xor
mov
and
rcrb
mov
pop
xchg
clc
stc
arpl
push
cmp
daa
xchg
les
push
adc
movsl
pop
xor
leave
pop
dec
cwtl
repz
pop
ret
fcom
loopne
adc
jb
sub
in
xchg
pop
push
sub
xchg
lcall
cmp
stc
mov
add
xchg
inc
in
pop
add
imul
jb
push
sbb
sub
jbe
xchg
mov
imul
stos
rcrb
jnp
out
fwait
insl
add
sbb
outsb
push
xor
clc
xchg
mov
xor
ret
xchg
dec
rclb
rorb
aas
lret
pop
leave
cmpxchg
adc
out
ret
mov
push
int
mov
in
es
out
jno
sub
pop
mov
push
sbb
sub
sbb
lea
dec
fs
mov
jl
sti
pop
push
scas
adc
ljmp
jg
mov
mov
shl
popf
fwait
imul
popf
inc
or
ja
add
dec
lock
inc
call
ja
pusha
stc
mov
iret
jge
scas
xor
xchg
xchg
xchg
ret
cmpsb
xchg
js
sub
call
in
aaa
and
in
cld
sbb
inc
es
call
in
and
dec
lret
call
arpl
xchg
xchg
and
rcrl
and
mov
mov
mov
out
arpl
cltd
in
and
stos
dec
push
inc
loopne
xlat
mov
fcomps
les
lods
add
and
psrld
clc
pop
aaa
es
or
mov
sbb
mov
xchg
int
dec
add
movsl
xor
xor
icebp
sbb
leave
sub
inc
lds
std
sub
fnstcw
mov
push
pop
adc
imul
and
push
shll
loop
mov
icebp
fidivrs
movsl
lret
aad
dec
mov
sahf
pop
lea
iret
mov
mov
add
sti
loope
inc
popl
xor
mov
mov
cli
sbb
or
pop
outsb
dec
dec
lahf
adc
add
cli
lods
sub
pop
enter
lret
add
cmp
aad
cmc
out
adc
or
xchg
cmpsb
push
cltd
or
push
pop
mov
mov
xchg
mov
adc
mov
in
sub
jbe
lods
push
daa
adc
lods
cld
bound
loope
fstpl
mov
sub
dec
add
insb
and
in
push
pop
pop
xor
adc
imul
dec
sarl
daa
push
sbb
adc
mov
xchg
push
inc
iret
jno
jecxz
or
movsl
adc
fsubrl
fstpl
pop
mov
cmp
push
sbb
and
sahf
int
jae
and
push
xor
loope
mov
cli
inc
cmpl
loop
mov
dec
cmp
inc
mov
lea
nop
pop
dec
ret
mov
outsl
mov
jb
or
push
std
aas
adc
mov
fnstenv
lret
xchg
pop
sahf
inc
inc
mov
adcl
and
cmc
scas
stc
fnstenv
pop
insl
pop
cmp
ficoms
jmp
and
pop
dec
push
pop
je
mov
mov
popf
aaa
loopne
xchg
divb
hlt
sub
or
arpl
addb
mov
sahf
cltd
and
sbb
or
dec
xchg
sbb
in
push
mov
jnp
cmp
test
pop
fdivrl
pop
mov
jns
ss
cli
popa
es
and
call
mov
sub
sbb
fldt
aam
push
inc
mov
aaa
loop
std
add
test
iret
mov
icebp
add
pop
mov
push
sbb
mov
lcall
addr16
cmpsb
push
sub
dec
mov
push
and
cltd
add
lcall
stos
jmp
pop
dec
xor
negl
cltd
stos
adc
mov
sub
testb
jno
fmull
inc
cmp
xchg
mov
mov
je
cmpsl
ret
lods
fs
stos
data16
clc
mov
aaa
sbb
fisttpll
mov
pop
lahf
call
out
cmp
sbb
jnp
repz
cmp
daa
arpl
cmpsl
sub
aad
popf
jnp
dec
mov
push
dec
inc
js
pop
lret
out
cld
push
incl
iret
inc
add
stos
lret
or
sbb
push
orb
subl
sbb
sbb
fisubs
stos
pop
stos
out
mov
adc
jae
sub
pop
adc
dec
pop
xchg
mov
std
mov
repnz
gs
scas
mov
and
repnz
popf
push
xchg
push
xor
sbb
push
in
add
inc
sbb
xor
in
aaa
adc
jecxz
pop
or
sbb
outsl
sbb
rcl
inc
data16
insl
add
jo
cmp
mov
mov
loope
jns
or
sarl
xor
movsb
cmp
xchg
mov
mov
jecxz
mull
xorb
sbb
sub
push
call
divb
sbb
sub
cli
loopne
inc
or
int
push
xchg
adc
repz
cmp
popa
insl
xchg
sti
repz
cmp
sbb
pop
xor
dec
ljmp
xor
int3
popa
xchg
xor
cmp
psubusw
mov
stc
scas
repnz
mov
out
mov
sbb
xor
fstps
fiaddl
and
icebp
dec
push
mov
out
dec
stos
leave
popf
mov
jae
inc
mov
or
cwtl
sti
cmp
mov
pop
je
mov
inc
xchg
inc
push
xchg
aas
cmpsl
adc
inc
jge
insb
dec
and
idiv
popa
arpl
push
addr16
out
and
mov
testb
inc
pop
mov
cmp
subb
test
ljmp
call
cltd
pushf
sub
mov
outsb
push
mov
fs
mov
sahf
mov
xor
mov
and
movsl
aam
popf
mov
sub
ret
mov
and
mov
cmp
sub
or
in
lcall
fidivl
popa
ret
fldl
icebp
add
adc
in
sbb
sbb
sub
and
lahf
add
pop
mov
sahf
movsl
mov
popf
pop
and
es
xchg
out
mov
fldl
jb
cs
inc
fldl
sub
ret
pop
fsts
jae
aad
cmp
push
sub
xchg
adc
fstp
movsb
ret
pop
or
adc
add
adc
mov
es
lods
adc
stc
mov
dec
or
push
into
or
out
pushf
rcl
sbb
dec
sbb
loop
neg
mov
xor
call
inc
cmpb
fwait
or
mov
cwtl
call
and
fiadds
fdivrp
fbld
mov
adc
adc
out
repz
lea
sub
call
cmp
cmc
sub
xchg
cmp
xchg
bound
and
sub
les
push
and
mov
aas
inc
movsl
out
bswap
dec
fists
mov
in
sarb
jne
xor
xlat
cmp
inc
xchg
dec
add
push
fcmovnbe
and
mov
push
xchg
testb
daa
xchg
or
lahf
cmp
ret
sbb
sti
add
cmp
loopne
sti
mov
cmp
iret
push
je
xor
mov
inc
push
mov
fcmovb
loop
ljmp
xchg
repnz
dec
les
pop
mov
sub
and
jno
std
adc
scas
xchg
pop
ffreep
sbb
shll
mov
xchg
sub
xor
cltd
add
inc
inc
es
mov
xor
sub
inc
sub
lods
call
popf
clc
sub
mov
sub
xor
lcall
cmova
xor
pop
xor
test
mov
jne
xor
jge
xchg
xor
mov
push
add
push
ret
add
pop
add
push
aad
cmp
lods
add
stos
arpl
pop
or
mov
adc
in
cmc
inc
cwtl
stc
int3
sahf
inc
jno
sbb
mov
jne
xor
jmp
imul
adc
and
mov
dec
sub
adc
sahf
mov
sub
arpl
pop
loope
xchg
fidivs
pop
daa
arpl
pop
mov
fwait
lahf
and
mov
das
mov
jp
push
pop
mov
sub
fidivl
sub
xor
ljmp
cli
sub
add
sub
in
push
imul
pushf
push
hlt
repnz
and
jns
rcrl
cli
pushl
pop
dec
and
push
pop
push
xor
data16
sub
sub
jae
or
pop
xchg
sub
push
fimull
hlt
push
icebp
ret
and
les
push
xchg
in
mov
inc
sbb
shll
ret
inc
and
xor
mov
lret
xchg
out
cmpsb
js
mov
cs
pusha
pop
inc
out
sbb
sub
xor
cmpsl
push
out
and
sbb
leave
loopne
das
imul
cltd
xor
push
mov
dec
insl
inc
xor
mov
xor
mov
and
mov
inc
cmpsb
push
sahf
adc
fldenv
and
push
sub
adcb
and
jo
push
cmp
inc
lock
lds
adc
sahf
adc
add
into
cmp
sub
mov
cs
das
sbb
adc
jno
pop
inc
xchg
sbb
inc
add
aas
fdivrl
outsb
xor
xchg
lahf
xchg
cmc
imulb
sahf
ja
mov
and
mov
fwait
stos
ss
add
fcompl
or
lcall
mov
fwait
and
xor
dec
sub
stos
or
inc
imull
cmp
xlat
enter
mov
inc
insb
pop
loope
mov
aaa
je
adc
imul
add
sbb
sub
push
dec
imul
push
aam
cli
mov
outsb
xor
sbb
sbb
adc
cmpsb
cmc
or
adc
pop
xlat
lods
aam
sub
cmp
xchg
shr
out
cmc
ljmp
adc
add
push
push
sbb
pop
out
outsl
das
loopne
dec
pop
loop
andb
push
sbb
inc
mov
sub
pushf
leave
aam
scas
ret
lock
mov
cmp
xor
adc
jmp
loopne
and
mov
ffree
xor
cmp
adc
sub
sbb
adc
imul
fwait
sub
lcall
iret
mov
lock
adc
jp
cli
lahf
sti
in
mov
insb
jge
in
stos
add
pop
or
or
dec
sti
aaa
xor
and
cmp
add
mov
jns
imul
testb
pop
leave
and
flds
pop
cmpsl
add
mov
in
out
repz
daa
fadd
fwait
addr16
dec
rep
jle
ss
sar
les
in
ljmp
add
out
call
cwtl
lahf
loope
sahf
adc
arpl
sub
call
sbb
psubw
outsl
cmpsl
mov
push
xchg
cwtl
ljmp
test
out
pop
xchg
jmp
mov
and
shrl
jo
orl
repnz
xchg
fdivrl
sub
into
sbb
sub
add
sub
xor
call
outsb
jbe
sub
gs
sbb
jg
and
sar
add
je
sbb
pop
addb
mov
push
adc
fsubs
and
popa
sbb
in
mov
sti
jmp
addr16
and
jge
mov
sbb
into
call
cmp
mov
pushf
outsl
jle
scas
push
pop
mov
bound
dec
push
inc
lret
push
xchg
ret
ss
lret
dec
jnp
mov
lods
sbb
sbb
jnp
rcll
iret
inc
pop
inc
gs
aaa
int
pop
pop
sbb
or
sar
push
cmp
and
pop
mov
pop
cmp
xor
and
push
cwtl
into
ja
dec
pop
xor
dec
ret
xchg
pop
jae
jno
mov
das
and
mov
push
xor
dec
popf
out
xchg
test
sub
jg
jmp
push
mov
pop
push
out
test
sub
das
repnz
and
sub
insl
mov
inc
add
loop
jl
fadds
pop
imul
sbb
stos
xchg
sbb
pop
repnz
test
lahf
into
xchg
push
push
popa
mov
fldcw
pop
lcall
or
ficomps
inc
in
push
cwtl
sbb
inc
push
inc
xor
inc
push
pop
mov
loop
inc
mov
and
add
sbbb
movsb
xorb
popa
cmp
and
mov
nop
leave
arpl
ja
out
xchg
push
hlt
push
sbb
bndstx
jle
nop
bound
dec
sub
sbb
mov
and
dec
xchg
adc
inc
dec
jmp
int
cwtl
xchg
aas
adc
xchg
pop
jmp
fdivs
xchg
cmc
aas
mov
xchg
sti
fldenv
add
xchg
dec
sbb
mov
pop
mov
outsl
test
daa
dec
xchg
popf
dec
push
stos
inc
jb
test
fyl2xp1
imul
or
and
loop
sarb
popf
xchg
cmp
and
loope
insl
inc
pop
jp
sub
xor
push
pop
testb
testl
imul
add
imul
xchg
add
mov
sbb
push
sub
in
xchg
in
imul
pop
inc
ret
and
push
add
stos
iret
ret
mov
sub
xchg
ficoml
pop
inc
jl
push
pop
and
test
dec
in
aaa
stos
cmp
cwtl
add
or
cltd
dec
push
adc
mov
mov
sbb
dec
sbb
pop
stc
sub
aaa
xor
adc
sbb
adc
mov
nop
andb
add
lods
icebp
popa
sbb
adc
das
sub
jo
call
clc
imul
cltd
dec
movsl
and
scas
xor
pushf
adc
int
mov
xchg
jl
out
cmp
and
idiv
cltd
movsl
adc
pop
bound
xchg
and
call
stos
jp
cmpsl
mov
sub
hlt
lods
pop
cli
fsubs
loop
je
popa
inc
push
dec
aaa
push
daa
fnstenv
push
xor
gs
xchg
sbb
jmp
dec
shlb
daa
pop
in
aaa
cmp
push
xor
cmc
adc
jecxz
repz
fsubrl
cmp
pop
popf
xorl
daa
and
and
sti
cmp
xor
loop
sub
push
or
popa
daa
xchg
xchg
adc
xchg
pop
fildl
fst
push
xchg
into
push
push
shr
je
lcall
sub
or
mov
int3
hlt
imul
cmpsl
fcomi
cmp
mov
sub
ds
mov
cmp
pop
hlt
stos
orl
ljmp
xor
jo
sti
adc
test
xchg
mov
sub
movb
add
imul
lods
out
pop
lret
dec
dec
xor
sub
or
out
fistpl
es
mov
pop
int3
push
in
xchg
repz
adc
es
mov
sbb
in
daa
ret
push
xor
jg
int
outsl
test
push
and
sbb
or
sahf
icebp
pop
sbb
aam
xchg
sti
dec
pop
andl
fisubrs
adc
iret
lods
adc
xchg
or
adcl
mov
sbb
or
xor
sbb
leave
inc
jbe
rsqrtps
pop
popf
or
pop
lods
icebp
dec
and
sbb
add
scas
es
push
or
call
add
mov
cltd
lret
pop
sti
xor
mov
xor
ja
xchg
sbb
xor
xchg
inc
popa
fnstenv
mov
xor
or
sbb
hlt
fwait
mov
daa
sub
jb
mov
mov
push
sbb
xchg
jmp
ret
rcll
out
int
adc
or
ljmp
cmp
lcall
mov
cmp
sbb
inc
popf
rcr
sub
mov
bound
in
repnz
mov
es
aaa
xchg
mov
call
cltd
aas
dec
pop
mov
rcrb
and
push
dec
jp
sub
addr16
cmc
push
mov
jg
dec
jno
mov
imul
lods
ja
xor
jmp
nop
sbb
cmc
xor
jnp
pop
mov
pop
xor
call
xchg
and
lea
adc
in
mov
mov
imul
xor
jecxz
lret
aas
sub
dec
mov
flds
inc
xor
and
fcmovb
movsb
and
sub
aad
sub
pop
setne
jno
xchg
mov
ficomps
xor
gs
enter
xchg
daa
roll
and
pop
mov
aaa
dec
call
aaa
mov
loope
dec
push
insl
push
in
adc
sbb
push
imul
sbb
push
cmp
sbb
inc
flds
pop
loop
cmpsb
negb
dec
jno
xchg
imul
daa
test
inc
mov
cmp
add
push
add
ds
dec
push
dec
subl
mov
out
inc
das
mov
lcall
xchg
test
dec
jl
cmp
stc
scas
cmp
or
mov
not
or
loop
movsl
and
xchg
mov
jne
jbe
movsb
data16
xchg
ljmp
xchg
and
or
pop
jae
jae
pop
out
adc
nop
lods
sti
dec
or
jae
pusha
push
pop
arpl
pop
sbbl
movsl
out
xor
aaa
inc
popa
or
sbb
dec
into
inc
xlat
psubd
ret
fstpt
test
es
pop
mov
scas
fidivrl
testb
loope
mov
enter
fsts
xchg
add
imul
pop
arpl
rcl
movsb
adcl
xchg
sub
cld
jp
sbb
iret
in
test
mov
lahf
scas
pop
sbb
xchg
push
lds
inc
pop
nop
or
aad
xchg
int
pop
lcall
jb
mov
sbbl
sahf
ficoms
fstpt
sbbl
adc
pop
and
in
push
lods
mov
and
mov
insb
sbb
popa
in
popa
and
sub
cli
adc
in
push
jle
jns
and
mov
mov
adcb
movsl
andl
lret
rclb
and
stos
js
or
aad
shll
xchg
ret
imul
xchg
movsb
pop
ljmp
loope
popa
and
lret
lret
icebp
idivl
stc
gs
xor
adc
mov
pop
adc
xchg
hlt
pop
shrl
pop
sbb
xchg
inc
cmpl
sti
cmpsl
push
pop
sbb
outsl
sbb
mov
push
xor
add
cltd
push
outsl
push
in
pop
cmp
lcall
sti
push
mov
mov
mov
movsb
and
fwait
lds
and
adc
je
inc
mov
push
repz
pusha
cmpsl
int3
add
dec
jnp
jnp
fwait
pop
inc
test
lahf
jnp
pushl
cmp
clc
push
and
cmp
popf
clc
xor
mov
xor
sub
leave
mov
sbb
or
add
xchg
test
call
xchg
sbb
idivl
movl
movnti
push
or
inc
outsb
iret
nop
mov
sti
push
or
popf
cltd
gs
mov
jge
mov
xor
nop
and
mov
icebp
pop
lahf
xor
sbb
aaa
sbb
push
icebp
inc
fwait
add
sti
fnstsw
mov
mov
icebp
sbb
call
inc
call
pushf
cli
push
mov
jbe
loop
lret
or
xchg
sub
sahf
stc
add
inc
sub
mov
imul
sbb
out
xchg
ret
and
out
sub
push
xchg
cmp
jmp
xchg
xchg
inc
out
aas
xchg
inc
out
jnp
xchg
inc
das
das
or
and
xor
mov
xchg
ljmp
jno
mov
mov
jb
js
lret
sub
jb
test
and
jle
xchg
aam
icebp
sub
pop
ja
fnstenv
jmp
mov
cmp
jl
push
xchg
jne
mov
mov
add
and
xor
addr16
mov
add
mov
scas
scas
mov
inc
mov
jmp
mov
cmp
out
jo
dec
push
inc
std
adc
insb
popf
sbb
dec
jb
jne
movsl
xor
leave
and
ret
add
mov
sbbl
sub
inc
call
dec
mov
popf
les
ret
xor
cs
sub
jb
ret
ret
sbb
pop
aam
pop
pop
or
push
sbb
mov
shll
jb
stc
packuswb
pop
sub
mov
push
xor
stc
inc
sbb
mov
pop
sub
es
dec
and
xchg
mov
aas
jb
lret
aam
roll
pop
xchg
divl
xchg
lcall
add
sti
hlt
sbb
xor
push
stos
sub
adc
scas
popf
aaa
das
mov
mov
psubusw
sbb
or
adc
add
repz
int
push
pop
mov
adc
sub
and
movsb
mov
and
mov
push
mov
movsl
and
loop
shlb
dec
mov
xchg
mov
mov
jge
icebp
mov
loop
mov
mov
mov
xor
fcoms
xor
push
inc
ret
and
dec
push
int3
and
add
mov
daa
sarb
or
mov
es
popf
lahf
test
pop
aas
xorl
cmp
loop
out
xchg
push
xchg
stos
mov
clc
pusha
pop
pop
imulb
test
jg
push
out
out
dec
adc
inc
xchg
iret
sbb
or
xchg
out
andl
shrb
arpl
in
mov
xchg
rol
xchg
jle
pop
xchg
add
rolb
iret
add
ficompl
inc
inc
imul
or
or
lret
icebp
aaa
adc
jne
sub
repz
test
sti
jmp
jae
test
mov
pusha
mov
and
mov
test
arpl
inc
mov
pusha
repnz
fldl
shl
xchg
mov
dec
fs
lea
or
push
loop
push
scas
jbe
push
jns
xor
sbb
loop
arpl
sub
push
daa
arpl
dec
jae
mov
xor
daa
cmpsl
pop
mov
and
inc
xchg
adc
mov
scas
rcrb
sbb
aad
xchg
mov
and
cltd
ficomps
sbb
and
and
xor
roll
das
call
jns
lret
sbb
inc
idivb
push
jbe
stos
scas
test
mov
pop
cld
push
sarl
gs
xchg
pop
pushf
pop
iret
pop
adc
push
ss
and
sbb
cmpsl
and
mov
nop
pop
xor
sub
sub
in
xor
pop
sbb
out
push
ror
daa
testl
and
stos
mov
cmp
add
pop
inc
mov
pop
std
adc
mov
loop
in
fcmovb
nop
cli
dec
xchg
push
and
arpl
mov
popf
push
lret
in
outsl
cmp
cmp
xor
ret
inc
or
scas
jg
jmp
addr16
aam
inc
sub
jl
sbb
outsl
arpl
shlb
popf
sbb
mov
sbb
in
adc
ret
rcrb
in
or
loope
sub
inc
add
inc
push
push
push
inc
inc
in
xchg
ret
enter
xchg
cmp
popf
sub
lret
cwtl
or
push
mov
push
push
sbb
sbb
dec
or
sbb
adc
mov
call
orb
and
mov
clc
push
inc
repnz
mov
faddl
mov
daa
ret
dec
xchg
outsl
les
push
daa
dec
sar
push
or
shlb
cmpb
jp
das
xor
int3
std
xchg
mov
mov
xor
sub
cs
mov
iret
sbbl
stc
lods
inc
mov
mov
sahf
pop
mov
mov
inc
xchg
nop
jl
adc
and
daa
arpl
push
stos
sbb
xchg
cmc
mov
sbb
adc
xorb
imul
cmp
loope
inc
and
or
lahf
xor
enter
pop
jae
inc
iret
cwtl
mov
sbb
jae
aas
pop
in
fisubrl
mov
and
fs
xchg
or
in
add
push
fwait
dec
add
iret
and
cmp
popf
push
iret
mov
clc
jg
and
mov
add
shlb
gs
dec
fidivs
roll
pop
and
or
sysexit
lcall
in
or
push
insb
mov
popf
movsb
in
sub
divl
fwait
stos
sbb
jle
lret
stos
sbb
pop
jnp
sbb
xor
inc
xchg
sbb
sbb
call
mulb
shrl
sub
adc
xor
ds
dec
cwtl
xchg
ret
call
mov
js
movl
mov
fwait
cmpl
fstps
popf
and
mov
mov
mov
daa
sub
or
shrb
faddp
fs
mov
nop
lods
mov
inc
dec
xchg
cmpsl
pop
sbb
insb
push
push
push
daa
das
jle
int3
xchg
call
adc
cmp
sbb
insl
int
in
addr16
loop
cltd
inc
jns
add
sbb
pusha
repz
mov
pop
and
es
sub
adc
or
mov
cwtl
push
repz
pusha
addr16
lahf
sbb
popf
call
imul
sbb
clc
sbb
addr16
movsl
mov
pusha
inc
adc
add
and
xor
pop
in
ret
sti
ror
jno
and
mov
es
sbb
cmp
aaa
push
and
dec
dec
xchg
roll
mov
pop
adc
fsts
nop
pop
mov
mov
mov
and
mov
cmp
jne
mov
rcll
mov
and
mov
sub
mov
out
inc
xchg
out
cli
std
cmc
sub
cmpsb
std
pop
sbb
mov
out
fs
popf
xchg
pop
lahf
cmp
daa
cmpsb
mov
lea
sbb
xor
or
pop
call
das
lahf
adc
inc
insl
adc
repnz
pop
adc
ret
adc
clc
outsl
sbb
sub
pop
loop
push
mov
push
cmp
stc
int3
add
pop
adc
pop
fstpl
sbb
iret
std
mov
add
mov
adc
pop
test
or
sbb
lock
and
xor
fimuls
sbb
push
dec
inc
cmc
hlt
scas
add
mov
pop
decl
loop
arpl
mov
xchg
subl
jb
cwtl
adc
xlat
mov
cmp
cmpsb
leave
decl
inc
into
pop
sub
cwtl
mov
ljmp
push
pusha
pushl
cmp
fwait
sarl
cmp
mov
outsl
mov
or
mov
xor
sub
das
add
movsb
fdivrs
cmp
adc
xor
mov
das
push
or
xchg
shl
sbb
loop
push
pop
mov
mov
mov
inc
jecxz
jmp
xchg
or
sbb
scas
popf
mov
jns
or
out
mov
gs
inc
push
dec
sub
sub
std
mov
pushf
dec
xorb
xchg
push
xchg
add
add
mov
ss
and
negl
push
xchg
dec
notb
popf
jno
dec
sub
mov
xor
sbb
inc
push
dec
mov
pop
and
and
xor
and
loope
nop
jle
pop
int
outsl
pop
loop
dec
ss
dec
xchg
cmp
ret
movsl
incb
jno
mov
adc
roll
push
push
mov
mov
sub
jg
stc
sbb
sbbb
lds
ljmp
jno
ja
loop
sub
pop
mov
sbb
xchg
adc
in
loop
xlat
int3
dec
and
sub
ret
out
pop
ss
nop
adc
pop
jp
lea
mov
mov
rolb
pop
notb
sbb
mov
adcb
dec
or
inc
xchg
das
cmp
cmpb
adc
test
in
inc
pop
in
inc
arpl
and
jg
inc
push
iret
or
sti
jp
das
xchg
pop
dec
jecxz
adc
hlt
pop
repnz
cmp
mov
iret
sbb
xchg
sbb
pop
mov
pop
cmp
mov
sub
mov
pop
xchg
cmp
cmpsb
jae
cmp
jle
hlt
aad
cli
repz
sbb
xchg
mov
sbb
push
popf
jae
dec
lret
or
idivb
push
pop
into
adcl
notw
aas
lret
cmp
icebp
imul
add
mov
dec
addl
divb
mov
pop
push
mov
loop
pop
lret
inc
or
jo
or
ret
int3
adc
sti
inc
shlb
icebp
pop
jb
sbb
clc
push
das
push
call
out
cmp
mov
sub
lock
xor
inc
jo
cwtl
jle
or
mov
push
push
sbb
push
outsb
jne
xchg
xor
ss
icebp
push
cmp
xchg
test
imul
jl
adc
xchg
or
ss
mov
cld
xchg
jmp
jnp
mov
unpckhps
xor
sbb
and
xchg
ret
loop
scas
inc
mov
add
icebp
adcl
sub
or
lcall
xchg
mov
xlat
xor
xor
jnp
mov
push
and
push
mov
xor
das
or
in
push
sbb
jns
pop
xchg
movsb
lret
inc
je
mov
sti
xor
loopne
shl
stc
cmpsb
aas
mov
adc
cmp
or
das
push
push
xor
pop
xchg
movsl
imul
in
push
mov
out
test
sub
fstpt
pop
inc
dec
cwtl
addb
xchg
cmpsb
xor
dec
xor
mov
xchg
mov
push
ficoms
movsl
iret
sub
cmp
cmpsl
inc
test
aaa
xchg
cmp
dec
sbb
cmp
sbb
sbb
ljmp
cli
es
divb
sbb
jg
mov
test
loope
dec
addr16
mov
xchg
adcb
push
xor
loopne
pop
lods
xor
in
aas
mov
je
xor
pop
cmpsl
enter
mov
add
pop
xor
xor
mov
loop
xchg
pop
xor
test
lahf
xor
mov
push
neg
sub
cmp
cmp
fisttpl
call
popf
xor
jno
call
dec
push
es
fwait
mov
nop
call
cwtl
aaa
clc
inc
pop
and
dec
mov
movsl
rorl
shl
aaa
sbb
push
ljmp
in
call
mov
xchg
sti
xor
cmc
int3
ret
xchg
or
cmp
sbb
adc
push
or
scas
mov
cmp
int
pop
sub
add
popa
nop
pop
lock
fprem1
mov
xchg
xchg
mov
ljmp
mov
xor
or
mov
cmpsl
mov
xchg
loop
and
flds
pop
adc
push
inc
lret
cmp
rorb
dec
lds
int
add
add
xor
pop
push
leave
pop
outsl
roll
daa
mov
sbb
inc
insl
cmp
stos
sub
cmpsb
adc
sub
mov
xchg
aam
add
inc
flds
pop
push
dec
adc
or
pop
shll
cs
push
jne
and
and
xor
xor
xor
push
lea
and
sub
push
and
mov
cltd
push
push
sub
pop
es
mov
iret
call
mov
mov
and
jp
rcrb
into
sub
xorl
add
mov
jb
adc
sti
cld
sub
push
cld
rorl
sub
ds
xor
ss
mov
cmp
or
jae
xor
or
push
aaa
ficomps
sub
std
sbb
incl
in
mov
push
in
mov
popa
push
xor
jle
xor
ja
mov
test
dec
mov
repnz
in
sti
cmc
stc
add
sbb
mov
xchg
and
fdivrs
and
xor
mov
dec
adc
sbb
in
ljmp
push
mov
dec
xchg
outsl
aad
mov
jne
dec
xor
icebp
and
sbb
loop
cs
popa
and
sub
dec
xor
std
push
jne
jge
push
or
xlat
xor
mov
xor
mov
push
xchg
and
jno
add
jmp
aas
loop
notb
sbb
and
pusha
mov
cmc
rclb
xchg
dec
mov
shlb
aas
jge
sahf
mov
mov
dec
pop
pop
pop
das
popf
inc
mov
repnz
nop
sarl
and
sti
xor
pop
pop
mov
or
outsb
hlt
sbb
adc
mov
add
mov
dec
mov
add
out
mov
pop
sub
sbb
test
xchg
pop
xor
xchg
push
es
xor
pop
jns
inc
and
lods
push
and
pop
xor
mov
mov
fisttpll
cwtl
cmpsl
dec
and
jp
and
pop
mov
mov
mov
xchg
push
notb
push
adc
xchg
call
imul
cmp
in
das
sub
add
mov
cmp
inc
and
jl
push
inc
inc
dec
das
cmp
sub
cmpsl
push
es
sbb
adc
stos
adc
lds
mov
test
mov
mov
sbb
xor
enter
in
out
cmp
push
mov
pop
pop
sbb
jo
sub
or
cwtl
inc
movsl
pop
push
sbb
lahf
push
jne
adc
repz
dec
pop
fs
sti
and
sub
aaa
inc
call
cmpsb
dec
inc
pop
or
sti
xor
cmp
lods
adc
pop
cltd
sub
mov
orl
aas
ljmp
add
adc
addr16
mov
mov
add
jecxz
sbb
mov
cmp
xchg
stc
jne
cmp
pop
push
push
pushf
test
out
cltd
sar
sub
mov
xchg
xchg
leave
sub
and
aad
lret
sbb
mov
test
cmpsb
xor
push
jbe
stc
mov
dec
mov
add
pop
sbb
addr16
mov
mov
mov
cmp
call
inc
lcall
mov
pop
dec
adc
xor
loop
pop
mov
movsl
and
lock
testb
push
fwait
sub
adc
repnz
addl
mov
sahf
popf
sbb
mov
push
call
adc
jno
xchg
push
cmpsl
push
mov
test
addr16
lret
daa
subl
mov
sbb
mov
sub
cmp
sbb
sbb
sub
test
dec
push
rcll
sbb
sub
xchg
test
sbb
push
es
push
test
mov
sbb
sbb
sbb
daa
mov
jno
ss
scas
mov
push
xchg
sub
inc
sbb
adc
es
and
in
sbb
popf
xchg
xchg
or
sub
xchg
sbb
push
sti
stos
sbb
push
das
push
movsb
adc
push
cmp
inc
leave
cld
pusha
rcrl
out
cmp
pop
stc
aas
sub
xor
inc
pop
fsubrs
pop
jl
cmc
mov
adc
mov
and
into
sub
or
or
inc
test
jmp
les
inc
push
add
or
xor
lahf
icebp
mov
adc
sbb
xor
icebp
movsl
loope
push
mov
fstpl
xchg
or
ljmp
mov
outsl
sub
xchg
pop
push
mov
lahf
push
nop
sbb
sub
fs
sub
add
popf
in
cmpsb
enter
mov
pushl
jne
call
cmpb
xorl
in
pop
push
shll
imul
sub
sub
xchg
es
and
popf
scas
adc
subb
or
stos
cwtl
cs
loope
mov
cmpsl
cmp
insb
addb
pop
inc
sbb
xor
outsl
test
adc
in
sbb
ljmp
ds
push
iret
bound
mov
push
xorl
test
and
push
adc
imul
inc
and
adcb
inc
lods
mov
inc
inc
call
lcall
dec
push
mov
movb
mov
xchg
xchg
movsb
inc
scas
mov
stc
in
imul
test
sbb
mov
adc
inc
call
and
ljmp
mov
mov
jae
adc
sbb
pop
mov
out
jl
fsubrl
mov
sbb
fs
fcmovnbe
sub
rorl
in
cmp
and
test
cld
cltd
fisttps
pop
sbbb
mov
pop
push
frstor
dec
xchg
jne
xchg
in
fsts
clc
xchg
xchg
gs
and
sbb
iret
inc
js
dec
imul
mov
test
lods
shll
adcl
mov
mov
xor
mov
ja
mov
mov
push
clc
sub
jp
or
mov
nop
xchg
sub
jns
call
xchg
popf
shlb
or
ljmp
hlt
sub
sahf
xchg
dec
mov
mov
pop
cmp
in
arpl
dec
adc
cltd
mov
dec
mov
add
push
loope
adc
int3
xchg
push
and
scas
mov
cmp
adc
pop
lods
cli
imul
in
adc
dec
xchg
push
xchg
mov
outsl
cmc
hlt
rcll
ficoms
xchg
cmp
lds
dec
push
loop
fsubrs
call
pop
sub
inc
hlt
es
xchg
jne
mov
and
aaa
inc
xchg
orb
loop
arpl
test
add
out
shlb
mov
arpl
mov
enter
sub
in
mov
test
cmpsb
notb
jge
in
dec
mov
mov
and
xor
sub
mov
hlt
jle
cltd
mov
dec
loope
xor
popa
and
aad
imull
jp
aaa
iret
call
pop
jae
insl
jp
cmp
fdivr
dec
mov
ror
mov
aaa
lods
outsb
mov
loop
or
rolb
sbb
shlb
fdivl
fwait
inc
lret
dec
stos
jg
jmp
loop
loopne
dec
gs
outsb
fidivs
xor
test
ja
or
mov
cmp
mov
mov
in
jo
add
sbb
sub
adc
add
jne
andl
test
sub
fistpl
lea
sbb
out
dec
inc
and
sub
mov
cli
out
pop
das
out
inc
sbb
adc
fcmovnu
jns
fwait
push
addr16
mov
pop
pop
xor
adc
xchg
in
test
gs
inc
add
cltd
cmc
add
cltd
ss
notb
loop
ljmp
and
pop
cltd
mov
in
cmp
mov
loop
jge
popa
jge
mov
nop
leavew
leave
pop
cmc
push
mov
gs
pop
cmp
popf
adc
cmc
pop
imul
and
xchg
pop
mov
cmpsb
xor
jmp
mov
mov
push
jl
cli
jge
fnstenv
adc
int
mov
or
sbb
cmp
push
mov
fwait
mov
mov
std
adc
push
sub
mov
push
xor
jns
xor
push
out
dec
lret
mov
fisubrl
pop
sti
push
mov
fwait
sahf
outsl
adc
popf
rcr
int
cmpsl
add
add
nop
mov
xor
dec
iret
insb
shlb
sub
and
jne
mov
push
ret
and
push
imulb
or
inc
pop
add
imul
insl
mov
insb
sbb
clc
nop
xchg
out
stc
inc
aad
sti
cmp
sarb
incb
shrl
cmp
add
or
and
dec
sbb
outsl
jno
lahf
imul
push
cltd
push
inc
pop
xor
ret
ror
std
pop
sbb
jo
inc
or
adc
or
and
cmp
push
mov
sub
jno
dec
leave
enter
or
or
ljmp
sti
popa
add
push
adc
or
push
mov
cli
dec
and
xchg
shlb
push
ret
or
cwtl
or
push
cld
and
sti
add
punpcklbw
lret
pop
dec
fsubr
cmp
call
mov
aas
orb
cmp
and
xor
jecxz
sub
jne
sub
fnsave
mov
lods
mov
or
jl
call
pop
mov
jae
inc
movsb
and
cmp
in
add
cmp
int
mov
shl
inc
in
sti
dec
cmpsl
les
xor
or
into
lods
movsb
inc
lods
dec
into
xchg
xchg
sbb
or
jns
cmp
cmpsb
or
into
hlt
xor
and
xchg
xchg
rcrb
or
sar
sub
in
jns
loop
popf
repz
cmp
add
aam
push
in
xchg
lea
xor
xchg
repz
mov
xchg
push
repz
xchg
sti
mov
cmp
xchg
mov
int
push
push
ja
inc
outsb
mov
mov
mov
out
out
push
fstps
in
xor
inc
call
adc
sarl
mov
cmpsl
push
sbb
rclb
mov
jo
mov
fnstcw
bound
xchg
in
mov
cmp
inc
mov
add
repnz
xchg
or
test
jle
inc
inc
lret
mov
stc
cmpsl
sub
adc
pop
adc
stc
mov
cmpsb
aaa
sbb
aas
enter
cmp
xor
int
test
cwtl
sbb
sub
dec
leave
adc
dec
mov
xchg
loopne
js
call
xchg
and
fwait
insb
adc
push
and
and
jmp
lahf
jb
pop
icebp
push
test
and
sbb
pop
subl
das
mov
shll
pop
adc
or
and
stos
mov
lods
add
lods
or
pushf
dec
push
out
pusha
push
mov
and
loop
jnp,pt
pop
jl
push
inc
cmp
mov
pop
xchg
sub
mov
push
and
and
sbb
in
sub
adc
sbb
and
movsb
pop
imul
insl
lcall
mov
adc
mov
pusha
mov
out
mov
repnz
call
es
or
cmp
in
ljmp
sbb
dec
rep
pop
add
shl
xchg
dec
pop
jmp
push
dec
je
sub
aam
xchg
aad
lcall
packssdw
sub
mov
sbb
cwtl
fs
push
fsub
movsb
jl
xchg
ja
imul
aaa
push
sub
stos
int3
mov
xor
adc
push
inc
sbb
pop
mov
lock
mov
and
imul
pusha
cmpsb
xchg
push
fyl2x
mov
cltd
cmpsb
adc
xchg
ffree
lds
fcoms
mov
rclb
cmp
and
sub
in
in
cmp
ja
hlt
push
push
mov
cmp
and
iret
cmc
ret
gs
push
sbb
inc
into
and
dec
or
cmp
int
mov
fistl
int3
sbb
cltd
jne
popa
sbb
test
dec
mov
jb
xlat
test
mov
ficompl
pop
and
into
sbb
pop
std
or
movsb
cmp
xorb
daa
pop
or
jns
mov
int3
loope
push
fldt
nop
fchs
sbb
ljmp
inc
subl
xor
pop
sbb
xorb
and
ss
xor
inc
es
cmp
repz
fisttpl
roll
rorl
cmp
pop
xor
fwait
call
sub
sbbl
cmp
data16
lods
int
movsl
jno
xor
push
push
stos
sub
mov
lock
imul
dec
add
adcl
fildl
movsl
pop
inc
testb
lods
arpl
popa
sub
mov
lret
push
cmpsl
adc
push
sbb
scas
add
outsl
lcall
out
pop
lods
enter
fcmovbe
and
loop
pop
xor
les
push
jge
pop
insb
stos
lods
push
pop
loop
shrb
mov
push
inc
push
outsb
fldt
and
aam
pop
inc
push
jae
sbb
cmpsb
pop
inc
imul
int3
push
dec
lcall
sbb
mov
cmp
int3
pop
dec
out
jns
inc
xchg
inc
in
jl
sbb
cmpsl
cmp
jae
sub
cs
pop
mov
xor
xchg
and
sbb
mov
cmp
sbb
xor
stc
cmpsl
sbb
cs
add
mov
inc
addr16
lcall
mov
add
lock
or
ficomps
sbb
dec
jge
push
jno
out
sub
ja
insl
add
push
push
mov
or
sbb
setns
loop
mov
push
in
sbb
js
or
int3
sub
add
push
mov
jb
jb
or
stc
jns
xchg
cmpsl
rorl
sbb
popa
lahf
or
inc
pop
call
jle
mov
and
test
loopne
dec
fwait
and
cltd
pop
jg
cmp
push
fsubr
inc
cs
lea
xchg
fcoms
rcrb
sbb
xor
dec
aam
je
mov
add
in
inc
int
cli
sub
dec
jae
cwtl
sti
pop
shll
xchg
mov
push
decb
dec
cltd
xor
int3
pop
lea
lret
aaa
mov
push
ja
loop
popa
push
inc
test
pop
jne
aaa
sbb
add
roll
pusha
outsl
xchg
inc
mov
mov
mull
out
and
lods
adc
shr
mov
lods
dec
pop
bound
and
sbb
push
cmp
aam
and
mov
aad
gs
xor
mov
sub
xchg
fimuls
repz
mov
mov
pop
loopne
jbe
jp
stc
cmp
cs
push
das
mov
or
mov
loopne
in
xchg
pop
cmp
jg
push
loop
xor
in
jb
or
inc
mov
xor
xor
sub
out
and
sbbb
outsb
inc
push
mov
add
jnp
xor
popa
xchg
jno
xor
sub
adc
cmpsb
xchg
sbb
sahf
je
xor
mull
in
push
out
mov
popa
popf
sbb
popa
cmc
inc
jns
dec
icebp
mov
push
pmulhuw
adc
fcoms
add
adc
sub
repz
push
adc
ss
sub
sbb
xchg
or
and
fst
sub
mov
subl
push
mov
dec
fwait
pop
sbb
das
sbb
outsl
adcb
cmp
addr16
addr16
jecxz
shll
mov
add
add
stos
inc
adc
sti
fsubrs
rclb
mov
fnstsw
and
push
inc
jl
cltd
scas
ss
es
in
xchg
cmp
aas
lock
rclb
or
pop
call
test
xor
movsb
fnstcw
cmp
stos
fucom
cmp
fbld
sti
aaa
push
loop
scas
and
lds
jecxz
pop
insl
repnz
aam
push
push
int
mov
adc
inc
iret
cmp
xchg
push
mov
mov
rorl
pop
adc
loop
int
int
ja
cwtl
mov
sub
ljmp
imul
stos
xchg
inc
pop
adc
dec
sbb
dec
fisttpl
cld
xchg
pusha
cmp
adc
fwait
jno
sbb
pop
shll
jle
pop
jmp
dec
mov
cmpsl
sub
mov
fst
imul
ds
jmp
cmpsl
psubq
adc
push
out
pop
sti
and
cmp
push
or
cmp
add
stc
data16
pop
sbb
add
aaa
cpuid
dec
pop
adc
pusha
ret
xchg
into
sbb
lods
lret
dec
stos
push
jecxz
dec
cmp
in
sub
xor
and
in
adcb
fnsave
sub
lret
stos
cmp
adc
int
xor
mov
sub
xor
sbb
sbb
lods
call
sub
pop
lods
aaa
fisubl
push
mov
fs
shrb
es
aaa
sub
adc
sbb
pop
mov
out
cltd
pop
data16
inc
and
and
mov
imul
das
mov
xchg
push
or
fnsave
or
lods
daa
mov
hlt
jmp
lahf
divb
es
imul
enter
mov
lret
ss
mov
xor
xor
fiadds
leave
jbe
test
inc
sarl
dec
hlt
mov
mov
or
push
inc
enter
adc
lcall
int
mov
loop
lahf
testb
xorl
jg
cmp
mov
mov
push
dec
lea
loop
hlt
mov
int3
pop
lahf
pop
push
loop
ss
xor
jno
dec
adc
xchg
das
aaa
push
pop
sub
adc
inc
adc
mov
mov
iret
lds
in
push
sti
test
gs
push
and
push
test
inc
jno
sub
ja
dec
mov
leave
imul
and
jno
xchg
call
cmp
or
fdivrl
insl
daa
loop
or
mov
loope
add
je
dec
inc
testl
inc
call
push
lahf
push
mov
sbb
ljmp
and
std
and
sbb
cmpsl
push
sti
inc
or
shrb
mov
pop
pop
adc
dec
push
xor
es
iret
rcrl
arpl
xchg
sub
xlat
push
mov
es
ja
adc
dec
and
outsb
jle
lock
xchg
lcall
mov
lods
pop
imul
or
xchg
pop
ret
jl
push
dec
jmp
and
fs
cmp
int
cli
fldenv
sbb
pop
xchg
das
sbb
jae
jnp
sub
pop
into
imul
adc
xchg
das
out
push
ret
jge
stc
fisttps
or
xchg
sub
sbb
mov
imul
ret
icebp
sub
inc
fwait
dec
jbe
dec
stc
dec
aas
lcall
sub
arpl
in
mov
inc
jne
cmp
mov
and
loope
hlt
xor
add
cmp
cltd
adc
in
mov
or
sbb
imul
mov
pop
mov
ret
cwtl
mov
add
xor
aas
scas
cmp
ljmp
dec
fs
movsb
hlt
test
popf
adc
and
loope
int
roll
cmp
loope
arpl
test
imul
mov
sub
cmpsb
inc
xchg
add
out
icebp
cmp
or
jb
and
dec
mov
inc
fwait
sbb
imul
test
les
add
loope
popf
clc
cli
imul
sbb
push
sub
inc
mov
sub
test
int
sahf
inc
arpl
test
pusha
ret
dec
out
dec
mov
popf
adc
xor
mov
pop
push
sub
loopne
imul
stos
aaa
jbe
jle
xchg
stos
addr16
dec
mov
push
lret
pop
mov
out
xor
mov
inc
fwait
inc
loope
lods
pop
int
push
and
jp
iret
js
lret
cmp
and
push
sbb
push
sub
sbb
pop
mov
pop
int
movb
pop
xor
jbe
inc
mov
dec
out
dec
mov
popf
cmp
test
es
loop
mov
lret
imul
xchg
fstpl
setnp
aaa
mov
cmp
adc
sbb
out
cmpl
shlb
and
inc
andl
inc
enter
push
dec
ret
scas
and
aam
test
out
xor
xor
int
push
cs
and
and
shlb
inc
pop
cmp
enter
loopne
xchg
fimuls
lea
xchg
cmpsb
and
or
je
lcall
xchg
and
xchg
sub
mov
sub
inc
cmp
or
mov
sarb
test
das
sbb
mov
mulb
adc
sbb
push
ljmp
pop
and
insl
jge
fwait
stos
sub
sub
jge
sub
xor
addl
out
mov
adc
sub
addr16
imul
std
or
mov
xchg
inc
push
fildll
lock
push
lret
adc
mov
sbb
int3
ret
outsl
add
dec
test
xor
push
movsb
movl
mov
cwtl
adc
xor
pop
cmc
and
and
xchg
aam
pop
xor
je
call
sbb
adc
fisubl
mov
stos
ret
dec
cli
imul
popa
mov
jns
sahf
stc
sub
pop
push
fnstenv
out
and
inc
xchg
adc
xchg
in
xor
ret
push
fs
mov
jns
daa
xor
jns
adc
jae
or
xchg
mov
dec
pop
ret
sbb
inc
inc
jns
ja
mov
sbb
stc
and
sbb
cwtl
mov
sbb
daa
and
stc
add
add
stc
and
pushf
fwait
lods
xor
and
sub
inc
popa
mov
push
lds
jg
and
push
mov
and
cs
mov
lcall
pop
dec
sub
cwtl
or
cld
adc
or
xchg
sub
mov
loop
cs
adc
xchg
mov
sbb
stos
mov
jnp
in
ljmp
fiaddl
enter
sbb
add
scas
mov
pop
sbb
add
sbb
nop
popa
xor
xchg
sub
jns
cmpsb
lods
push
sti
xchg
xor
add
call
mov
and
cwtl
jge
mov
pop
inc
aam
jbe
es
sbb
imul
insb
fbld
pushf
out
mov
dec
movsb
mov
lds
jle
and
sub
fwait
mov
sub
mov
fidivrs
cmp
inc
rcll
inc
and
stc
lea
dec
pop
xor
sub
mov
push
push
pushf
outsb
stc
dec
cpuid
aad
lods
inc
pop
pop
ret
lret
mov
cwtl
mov
cld
nop
mov
test
int3
loop
clc
cmpb
add
add
xchg
addl
fsubrs
mov
adc
cmp
into
lret
push
dec
shlb
pop
dec
sahf
cmp
and
mul
mov
hlt
push
outsl
jne
into
lock
lea
xchg
dec
xor
lds
fcompl
xorb
stc
shlb
aaa
jg
dec
aaa
fwait
lcall
cltd
popa
out
arpl
adc
sbb
insb
mov
mov
data16
cmp
cli
mov
popf
or
sub
xchg
or
std
or
push
jb
inc
mov
outsl
call
sbb
push
pop
inc
int
das
into
sub
jl
mov
loop
mov
popa
rcr
ds
pop
sub
fldcw
xor
popf
mov
repz
xor
emms
jp
mov
pop
dec
sahf
dec
addr16
push
add
shl
xchg
add
mov
lods
adcl
add
cmp
cmpsl
imul
mov
lcall
adc
mov
popf
inc
fnsave
sbb
mov
cwtl
xor
nop
aas
test
pop
inc
sub
inc
inc
out
dec
sub
xchg
or
inc
and
jnp
outsb
jp
loop
pop
outsb
sahf
out
sbb
push
pushf
add
or
bound
aaa
mov
sbb
adc
add
in
pop
fidivl
pushf
mov
ljmp
out
fbstp
mov
das
xor
mov
sub
sub
adc
xchg
pop
or
inc
xor
mov
fldenv
aas
mov
xlat
daa
out
call
imul
sub
fdivl
leave
jmp
xor
daa
pop
mov
inc
shlb
frstor
sub
sub
xor
clc
inc
adc
nop
push
sbb
jno
lea
and
dec
xchg
push
fbld
aad
dec
sbb
jecxz
cmp
add
insl
js
jg
ret
adc
xlat
imul
movsl
shrb
xor
cmp
push
pop
xchg
adc
add
aaa
mov
mov
push
call
pushf
pop
imul
push
push
push
jbe
inc
inc
inc
adc
adc
shl
repnz
jns
inc
xchg
sub
mov
mov
adc
xor
pop
sti
aad
test
jp
cmp
jnp
dec
scas
add
xor
xchg
jb
aam
xchg
and
shll
dec
ljmp
pop
aad
lcall
push
test
sub
enter
mov
fwait
lret
inc
jnp
or
repnz
mov
push
mov
add
fldenv
cmc
dec
ja
xchg
mov
or
push
stos
sub
xor
push
insb
cltd
or
sub
sbb
dec
adc
dec
jg
jbe
mov
or
add
orl
into
push
xor
dec
daa
mov
outsl
mov
jnp
clc
ja
dec
cmpb
nop
fxch
pop
cmp
bt
in
or
repz
cwtl
cmp
and
stos
daa
mov
xchg
call
push
sbb
jno
mov
jmp
or
jno
loop
fwait
xor
xchg
es
pop
ret
sub
scas
pop
lea
xchg
stos
cwtl
adc
cmpsl
xor
fistpl
cmp
shll
repnz
int3
xchg
sub
ljmp
fs
movsl
mov
ret
js
lahf
xchg
or
movsl
adc
cs
dec
mov
mov
lods
sbb
insl
xchg
cmp
sbb
jo
insb
test
mov
popf
das
and
push
call
mov
xchg
lds
repnz
push
je
cmp
notl
xchg
loope
xor
mov
sbb
inc
mov
movsb
fstpl
pop
xchg
sub
pop
mov
in
lock
push
out
pop
or
sbb
jns
mov
sahf
loopnew
mov
jl
or
xor
push
jbe
push
dec
mov
cltd
cmp
push
push
pop
mov
push
pop
mov
loop
ret
sub
out
popa
cmpsl
sbb
cld
negl
push
cmpsb
imull
dec
cmp
mov
pop
jl
dec
push
adc
lods
adc
and
inc
enter
cmp
pop
and
sub
loop
lods
fcoml
jp
jne
pop
sarb
push
or
xchg
and
or
mov
test
mov
mov
jge
in
mov
push
mov
lahf
sub
jge
jmp
in
cmpb
sti
js
out
xor
sub
es
ret
sbb
mov
push
sbb
icebp
adc
push
arpl
adc
cmp
ret
scas
dec
sub
stc
sub
mov
adc
sub
subb
jb
mov
aaa
int3
pop
inc
and
dec
mov
stc
pop
dec
sub
sti
arpl
add
out
sub
adc
or
pop
and
decb
sub
std
xchg
inc
scas
lods
pop
cmp
jno
bswap
pop
push
cmp
cmp
xchg
les
and
pop
xchg
pop
imul
notl
and
ret
mov
pop
sarb
aad
imul
or
das
jae
mov
pop
xchg
push
jp
adc
scas
jns
cmp
push
sub
arpl
stc
push
sbb
adc
xor
arpl
daa
call
pushf
mov
mov
negl
in
je
push
xchg
sub
and
lahf
sahf
fldpi
and
addr16
imulb
adc
pop
roll
nop
mov
jnp
lcall
cwtl
jl
ret
and
sbb
push
sub
loope
mov
mov
fwait
sub
add
fisttpl
adc
mov
pop
sahf
iret
sbb
sub
push
sub
xchg
or
or
xor
or
mov
not
sbb
pop
mov
mov
int3
lret
arpl
cmpsl
call
cmp
test
fwait
pop
lret
ret
or
fwait
pop
shlb
push
movsl
push
adc
xor
stc
dec
fistpll
loop
push
roll
and
call
je
xor
xchg
push
xor
bound
xor
cmpsl
mov
adcb
mov
pusha
lahf
or
sub
outsb
int3
cltd
push
cmpsl
ss
shrl
sub
push
push
call
and
clc
pop
ret
pop
xchg
adc
xchg
adc
outsl
sar
adc
or
repz
andl
mov
jl
outsb
cmp
mov
cmpb
mov
xchg
push
adc
mov
jne
or
sahf
sti
lock
and
pop
inc
xor
nop
jge
ret
fwait
and
push
aam
mov
outsb
xlat
pop
mov
adc
mov
shll
lds
loop
mov
mov
pop
sub
dec
dec
xchg
dec
jge
mov
or
test
inc
sub
inc
leave
sub
xchg
sahf
sub
xchg
xlat
scas
shrb
shlb
jbe
sbb
mov
cmpsb
cltd
movsb
stos
xchg
ds
cmpsl
xchg
push
push
iret
sbb
arpl
sbb
cmp
jo
loop
int3
icebp
cmp
and
pop
and
push
jne
subb
iret
mov
jno
ret
mov
pop
sbb
outsb
aad
dec
ljmp
mov
cmp
sbb
into
or
fwait
push
jne
enter
loop
outsl
insl
sbb
push
sbb
xchg
repnz
rol
and
ficompl
rclb
ss
pop
sbb
inc
pop
jbe
insl
push
pop
pop
add
call
hlt
loope
xor
loop
fstl
sti
sbb
mov
shll
pop
pop
bnd
int
nop
xchg
ljmp
fwait
sub
icebp
inc
jne
dec
divb
xchg
mov
xorl
mov
sub
lret
mov
push
fcompl
sbb
shlb
xor
js
or
stc
jp
cmp
xchg
loop
sub
bound
jp
sti
sbb
call
mov
push
adc
loope
movsl
adc
repnz
sbb
in
xor
gs
sub
sub
xchg
sub
mov
inc
int
jmp
addr16
sbb
fdivrl
mov
mov
cmp
xchg
pop
fimull
pop
dec
lahf
sbbl
adc
ljmp
pop
dec
mov
xchg
movsl
jb
call
sbb
xor
in
jno
and
add
adc
or
sbb
popa
outsl
out
insb
dec
aam
adc
xchg
xor
push
mov
xor
ret
arpl
push
data16
mov
cmp
sbbl
lock
aas
and
call
je
sub
daa
xor
hlt
xchg
ret
mov
mov
andl
repnz
fwait
cltd
push
int
or
sahf
in
int
pop
divb
out
addr16
jae
and
mov
sub
cmp
xor
xor
sub
ljmp
aas
loop
sub
std
lret
add
inc
data16
lods
jo
add
inc
pop
test
les
inc
aam
sub
pop
xchg
xor
jb
mov
push
aam
sub
and
dec
sub
adc
test
je
mov
mov
adc
jns
xor
call
test
outsb
mov
push
imul
sahf
dec
or
pop
xchg
lock
repnz
movsb
sbb
sub
mov
bound
adc
cmp
dec
adc
or
adc
sahf
xor
rorl
xchg
pop
sbb
pop
stc
in
lds
cmpsl
dec
xchg
and
push
sbb
sub
adc
push
leave
sbbb
push
ljmp
push
orl
fwait
sbb
sub
daa
and
shlb
lds
insl
mov
aaa
mov
mov
fbld
inc
mov
jl
mov
pop
xchg
jnp
sbb
adc
cmpsl
int
into
std
test
mov
and
inc
xchg
stc
xlat
bound
scas
adc
mov
test
mov
stc
push
xchg
pop
inc
imul
cmpsl
shlb
dec
cmp
addb
xchg
cmp
cmp
sbb
mov
into
add
pop
jbe
ret
and
shll
cmp
sbb
pop
shll
push
data16
and
inc
testl
sub
and
in
es
outsb
arpl
xor
fidivrl
pop
mov
out
sbb
popa
lods
mov
sbb
aaa
inc
xor
imul
lret
sub
call
push
das
pop
mov
adc
xchg
xchg
push
and
ss
popa
ja
shll
mov
mov
or
popf
mov
push
pop
xchg
mov
add
adc
sbb
sbb
or
add
sub
sub
jo
inc
and
inc
sub
pop
sbb
mov
addr16
test
mov
sbb
lcall
push
push
std
push
cmpsl
jmp
and
outsl
jecxz
mov
fwait
and
pop
push
jl
push
sub
mov
imul
mov
mov
sbb
sub
daa
outsb
mov
xchg
sub
mov
mov
cld
push
loope
and
inc
and
inc
fistl
enter
jl
sub
and
cwtl
cmp
or
cmc
loopne
sti
add
adc
mov
pop
cmp
sbb
fidivrs
ret
aaa
cmpsl
divl
add
es
pop
push
sub
jno
out
daa
sub
stos
mov
pop
stc
movsl
cmp
fisttpll
adcb
sti
adc
or
addr16
dec
pop
in
gs
pop
xchg
mov
sub
pop
jp
or
cltd
popa
and
add
pop
mov
bound
pop
daa
inc
pop
rolb
aas
stos
xor
xchg
pop
xchg
xchg
jb
repnz
sar
inc
inc
xchg
inc
ja
mov
call
cmp
in
test
iret
mov
adc
mov
lahf
call
mov
addr16
inc
hlt
int
sahf
psubd
push
loopne
int
test
sub
sub
pop
sbb
adc
or
ljmp
and
das
sti
cmpsl
xorl
cmp
imul
out
inc
push
imul
jbe
mov
test
add
and
xor
es
data16
cmpsb
xchg
sub
mov
mov
mov
mov
rorb
xchg
xor
or
aaa
xchg
dec
inc
add
les
nop
test
lock
popa
or
call
sub
shrb
pop
mov
mov
shrl
and
imul
cmc
and
iret
jns
dec
sti
repnz
or
lods
sub
push
incb
xchg
scas
sub
xor
cmp
stos
pop
and
and
pop
push
sub
aaa
aas
jno
lret
and
sbbb
pushf
pusha
das
dec
cmpsb
mov
stc
and
inc
dec
mov
push
lea
cmpsl
loope
mov
popf
pop
jae
adc
loop
dec
icebp
aas
rcll
and
xor
pop
gs
cmc
push
pop
ret
out
cmp
fsubr
inc
cmp
xor
andl
icebp
pop
inc
or
lods
push
xchg
sahf
in
mov
sbb
lods
sbb
push
outsl
aaa
ds
sub
adc
sub
rclb
jecxz
mov
test
add
xchg
les
push
xchg
loopne
int3
dec
add
loope
xor
adc
push
dec
jecxz
cmp
mov
cmp
icebp
xchg
decl
sar
mov
ljmp
mov
repnz
jb
mov
loop
adc
xor
out
lds
xor
push
jg
scas
jge
fnstsw
sub
push
mov
popf
xchg
mov
xchg
mov
and
and
sbb
add
cwtl
loopne
cmp
or
repnz
adc
sub
aas
addr16
out
sbb
push
push
das
xchg
sbb
sbb
scas
or
imul
pop
add
iret
xchg
lret
scas
lcall
xor
hlt
cmp
sbb
xor
iret
dec
fcmovbe
shll
aad
xchg
add
adc
addr16
mov
xor
dec
xor
pusha
and
and
jno
scas
out
add
loop
data16
ds
gs
scas
es
jae
aaa
and
dec
add
xchg
xor
popf
inc
mov
lcall
sub
sbb
fisubl
push
mov
fiadds
pop
cmpsl
push
xor
out
mov
insl
scas
pop
push
mov
imul
push
jb
gs
lahf
cld
or
call
xchg
das
das
sub
pusha
sub
pop
aad
in
leave
ja
pop
in
push
mov
in
push
sbb
ret
outsb
sbb
leave
sub
add
pop
jne
gs
push
xchg
dec
jmp
sbb
fwait
jmp
lahf
jmp
mov
sub
das
jno
xor
into
fdivrp
sub
or
cmpsl
in
or
add
and
bound
dec
outsb
out
fcoms
push
aad
scas
cltd
das
pop
sub
xchg
push
add
aad
lods
mov
and
pop
test
and
test
push
xchg
push
data16
imul
push
out
cmp
test
aas
mov
xor
adc
popf
mov
cmp
and
rolb
int3
insb
loope
mov
insb
xchg
xchg
or
inc
repnz
dec
fisubl
and
and
jp
dec
mov
call
push
and
sbb
and
sub
sub
dec
loope
or
or
iret
call
in
test
mov
or
das
dec
xchg
movsl
push
divl
fidivrl
imul
loopne
or
daa
daa
adc
jb
adc
cwtl
xchg
testl
std
xor
mov
inc
adc
jl
call
pop
dec
mov
inc
int3
jns
push
stc
das
mov
pop
and
inc
jle
jae
loope
stos
js
aas
cmc
cmpl
mov
jns
cmp
xchg
push
notl
sub
sbb
mov
mov
cmp
dec
icebp
dec
mov
dec
push
test
or
jae
cli
cmp
sbb
loopne
xchg
leave
sbbl
push
shll
inc
mov
and
sub
aaa
pop
loopne
mov
and
mov
mov
fucomi
mov
cmp
adc
jno
sbb
xchg
in
jbe
push
push
mov
hlt
in
repnz
inc
or
lea
push
sbbl
jne
and
xchg
xchg
sub
pop
stc
and
xor
mov
repz
sahf
cmpsb
xchg
and
and
out
bound
das
sti
jae
mov
adc
lds
push
movsl
les
sub
ret
addr16
int3
dec
sub
mov
cmpsb
push
lods
xor
addr16
add
sub
insb
add
adc
jle
adc
adc
inc
adcl
aas
adc
ss
push
mov
mov
push
insb
sarb
jmp
jp
ftst
add
test
push
aaa
mov
js
pop
inc
shrb
mov
xchg
test
das
mov
inc
or
std
cmp
mov
pop
test
and
pop
mov
mov
popf
sbb
bound
inc
pop
add
sbb
xchg
outsl
divl
adc
stos
cmp
leave
scas
pop
lods
inc
adc
stos
push
adc
xchg
cmc
mov
popf
jge
test
in
movsl
jmp
dec
cmp
in
xor
sarl
or
addr16
pop
xor
loop
iret
repz
clc
ja
add
xor
push
fisubs
rdpmc
out
lods
out
or
adcl
rcrb
test
adc
subb
jmp
popa
rcl
bound
mov
test
js
xorb
and
je
dec
mov
push
mov
dec
xor
xchg
dec
push
xchg
and
sti
cmp
cmp
jg
xchg
add
sbb
add
aaa
lahf
sub
cmp
pop
out
xor
or
push
pop
out
pop
std
jns
pop
add
cmp
ret
jne
inc
in
std
loope
std
sub
aad
xchg
push
jb
mov
popa
sub
jns
shlb
div
push
mov
cli
pop
xchg
fists
inc
inc
ss
sub
bound
sub
aas
and
adc
arpl
add
and
es
int3
mov
scas
pop
add
lea
outsl
mov
xor
es
sbb
sti
jno
mov
fmulp
outsl
adc
jae
add
lods
notb
push
or
negl
mov
stos
xor
cwtl
call
pop
xchg
ja
loop
cwtl
repz
add
push
dec
cmp
outsb
cli
mov
loope
xchg
pop
xchg
ljmp
popa
and
loope
inc
mov
adc
xchg
call
divl
arpl
pop
bnd
pop
repnz
xchg
insb
mov
and
movsb
das
int
add
pop
cmp
movsl
sub
mov
push
xor
pop
xchg
cmp
sub
or
adc
addr16
lea
das
pop
lahf
aam
call
arpl
mov
sbb
xchg
test
and
stos
xor
inc
lret
les
mov
addr16
cltd
std
pop
shrl
cmp
and
sbbl
rcrl
sub
shlb
out
aad
aaa
and
xor
outsb
addl
clc
imul
ja
mov
inc
mov
inc
xor
sbb
push
xor
xor
call
xchg
cmp
daa
sbb
sbb
sub
lahf
adc
add
or
orb
rolb
xchg
ret
outsb
adc
int3
cmp
adc
cmp
popf
add
rclb
mov
xchg
nop
sub
in
mov
push
stc
xchg
and
dec
repz
sub
pop
cmp
or
sbb
cmp
adc
or
dec
adc
gs
push
outsl
push
push
jg
ret
iret
test
stos
in
dec
sub
stos
cltd
xchg
cmp
lret
push
mov
fsts
sub
xchg
in
mov
in
andl
mov
jmp
sbb
shl
aam
push
mov
fs
push
mov
test
cmp
adc
sub
or
push
fistpl
cld
fucomip
cld
dec
jo
push
pop
aaa
inc
add
out
push
push
mov
cmc
popf
mov
inc
outsb
imul
sub
cmc
sahf
cmpsb
xor
push
test
pop
ljmp
out
xor
icebp
inc
and
push
xchg
sub
frstor
shr
xchg
mov
pop
cmp
rcrl
jae
ficompl
mov
or
cli
es
sbb
sti
and
mov
cmpsb
inc
pop
xchg
push
mov
lds
dec
fnsave
cmp
adc
std
adc
push
cmp
rorb
insb
push
in
je
xchg
add
jle
sbb
and
jnp
loop
es
hlt
sbb
sbbl
ret
adc
fwait
call
stc
ljmp
or
pop
inc
and
and
mov
test
inc
xchg
jae
pop
sbb
aad
sub
popa
adc
aas
shrl
cmp
fsub
out
outsb
je
imul
xor
ja
mov
cld
push
cltd
loop
cmp
ret
shrb
jnp
dec
pop
push
pop
bound
pop
push
and
pop
ret
sbb
aad
loop
or
sbb
or
loop
cli
lcall
pop
sub
out
daa
in
xchg
pop
and
and
cmp
stos
jp
xchg
fldcw
jbe
test
fwait
hlt
cmp
les
aad
jmp
sub
fnstcw
and
sub
mov
dec
inc
imul
enter
fidivs
cld
pop
add
mov
xor
dec
lcall
cltd
popf
xor
mov
push
xor
arpl
pop
push
js
adc
insb
and
rclb
adc
and
movsb
xorl
insb
ficoml
cmp
add
lea
adc
xor
stc
leave
es
sahf
add
inc
jno
mov
lret
and
call
and
dec
test
mov
mov
and
iret
add
sbb
mov
icebp
xor
mov
add
mov
sub
call
push
cmp
xchg
jno
sub
cld
movsb
fcmovnb
adc
xchg
inc
call
sub
push
and
xchg
mov
stos
and
ja
inc
cmp
dec
fsubs
adc
int
daa
divl
icebp
mov
jns
shl
xor
popa
cld
inc
sbb
sti
sbb
and
mov
outsl
sbbl
mov
daa
fisubrl
lret
js
in
and
add
dec
push
stc
xor
sti
outsl
mov
lret
loopne
sub
cwtl
jno
xor
add
jbe
lret
stos
jg
jno,pn
inc
call
inc
push
sbb
sar
and
and
cmpsl
xchg
sub
adc
adc
or
push
ss
or
mov
in
pop
out
sti
adc
call
addr16
and
rol
sbb
mov
sbb
jl
lret
cmp
pop
cmpsl
gs
xchg
xor
jnp
dec
xor
lds
pop
jne
jno
add
jecxz
sbbl
insl
cmpsl
cmpsb
add
test
std
mov
fmuls
push
and
inc
loop
pop
lea
sub
arpl
ret
pop
add
sbb
loop
pop
dec
call
addr16
xor
sbb
lock
xor
and
fnstsw
pop
add
dec
pop
rcrb
cli
and
adc
stos
test
adc
or
loop
es
dec
adc
call
pop
jp
leave
ret
push
lds
sbb
push
add
icebp
in
or
mov
pushf
push
push
bnd
xor
ret
cmp
push
push
fnsave
lea
cltd
push
adc
out
js
cmpsl
cmc
fistpl
or
xor
popf
jmp
push
xor
inc
jg
and
out
sbb
push
push
aas
mov
sub
jno
mov
or
ffree
mov
andl
das
mov
pop
iret
fimull
xchg
shrb
icebp
rcl
mov
and
mov
xchg
sub
fiaddl
aas
or
and
pop
mov
mov
fsubrs
mov
dec
fldcw
test
int
inc
call
push
jnp
mov
mov
push
xchg
cmp
inc
subl
es
idivb
test
mov
lock
dec
push
or
test
pop
aam
add
xor
mov
dec
adc
repz
and
mov
mov
mov
add
xchg
xchg
mov
in
add
xor
adc
push
popa
adc
lret
mov
fisubrl
add
out
xchg
dec
xchg
push
pop
push
or
ljmp
aam
xchg
rol
mov
arpl
arpl
add
or
jns
add
mov
gs
xchg
inc
or
loop
and
repnz
movsb
sbb
sbb
js
jge
popf
sub
ret
shll
ret
int
xchg
push
es
pop
or
mov
pop
adc
adc
xchg
add
cltd
in
loopw
mov
mov
lods
aaa
pop
cmp
sub
sub
stc
ds
or
shl
lods
or
test
or
and
dec
mov
pop
repnz
cmpsb
jg
arpl
icebp
jmp
ret
cmpl
stc
test
jb
xor
push
popa
ret
mov
arpl
add
scas
enter
sub
fists
mov
dec
or
popa
call
pusha
lret
mov
loopne
jecxz
jnp
xor
adc
ds
xchg
or
mov
sti
pop
cmp
jne
sbb
mov
mov
mov
and
jp
and
fisubrs
je
in
push
inc
je
dec
sti
and
mov
sbb
testb
out
sbb
sub
pusha
mov
xor
lcall
xor
aas
out
in
push
inc
aam
dec
pop
mov
push
pop
xor
pop
nop
ret
adc
scas
sbb
adc
mov
sbb
add
inc
lds
sub
stc
and
hlt
mov
sub
xchg
xchg
pop
xor
addl
pop
cmovl
push
aam
cmp
adc
js
outsl
jle
into
fisubl
pop
and
push
adc
or
sbb
aas
ficomps
cmp
dec
sti
sub
xor
test
lcall
sub
sub
mov
mov
test
push
daa
sbb
push
subb
push
xchg
jnp
cmp
addr16
push
mov
pop
or
mov
std
inc
cmc
adc
mov
xlat
pusha
cmpb
push
das
movsb
xor
xchg
iret
arpl
cs
js
inc
ljmp
fstps
inc
cltd
adc
test
jno
ficompl
movsl
call
sbb
xor
sbb
imul
mov
inc
xchg
xor
xchg
testl
mov
sarl
movsl
pop
pop
and
sbb
jmp
jo
ds
out
aaa
adc
and
test
and
cltd
in
and
xor
sub
add
cli
sahf
inc
fwait
clc
adc
int
jnp
sbb
mov
or
xor
cmp
movsl
xchg
aas
mov
fistpl
add
stc
int
int
dec
jb
popf
inc
mov
adc
dec
mov
jge
imul
popf
pusha
ds
or
ljmp
popf
divb
gs
and
xchg
and
xor
enter
and
daa
adc
aam
scas
in
repnz
es
stos
out
sub
lods
mov
add
mov
inc
jmp
or
les
outsl
xor
cmpsb
cmp
stos
paddsw
lcall
cmp
or
insl
imul
and
pop
sbb
add
testl
outsb
ljmp
push
iret
and
inc
fucomp
fidivl
int
adc
cmp
repnz
sub
sbb
mov
push
andl
adc
lea
push
daa
in
int
inc
ljmp
adc
adc
push
ret
sub
imul
sub
xor
mov
sti
aas
jnp
mov
cltd
pusha
mov
lcall
pop
outsl
out
mov
cli
pop
inc
iret
push
xor
iret
loop
ficoml
or
xor
push
jge
cmp
aas
jb
jo
andb
jae
pop
sub
arpl
push
push
dec
and
in
out
xchg
rolb
pop
sti
inc
cmpsl
sbb
fildl
and
or
adcl
test
sub
sbb
mov
imul
sub
xor
inc
cmp
int
sub
push
fstl
pop
sbb
lret
jmp
pop
pop
shrb
push
jp
mov
mov
adc
xor
mov
arpl
mov
and
xor
pop
or
inc
nop
add
sub
icebp
sbbb
pop
jecxz
ss
pop
jle
xor
xchg
mov
dec
sarb
inc
pusha
pop
cmp
cwtl
sbb
dec
in
xchg
cmc
mov
jno
and
adc
xor
mov
inc
sub
xchg
jne
fs
and
inc
cltd
repnz
daa
hlt
adc
xor
jge
add
adc
pop
xchg
xlat
inc
xchg
outsl
xor
mov
push
cmp
sbb
out
int
cmp
test
rcll
jge
jno
in
mov
nop
mov
xchg
sbb
add
mov
xor
loop
iret
xchg
xlat
dec
aas
push
jmp
decb
or
push
sti
lret
test
jbe
lahf
mov
cmpl
stc
iret
lahf
daa
jge
inc
push
mov
pop
jge
test
dec
and
call
ja
sbb
popf
sub
or
addr16
lret
pop
xchg
lods
sti
shlb
jp
cltd
mov
mov
call
adc
cmp
pop
movsl
lods
mov
inc
mov
aam
mov
mov
pop
mov
lock
sub
inc
push
mov
jmp
mov
push
sub
mov
inc
imul
dec
xchg
jno
pop
cmp
ja
sbb
stc
rcrl
sub
pop
cmp
cmpsl
mov
imul
mov
movsb
jbe
cmp
jae
and
aam
iret
and
and
sbb
dec
mov
cmc
mov
leave
and
pop
push
andl
pop
dec
popa
fisubrs
fisubs
push
cmpsl
mov
jno
rcrl
insl
xor
xchg
clc
adc
cmpsb
insl
sti
sbb
mov
lock
decb
fadds
lea
sti
scas
fstpt
shlb
jg
mov
es
aas
arpl
ret
lret
ret
loop
mov
rorb
or
lods
ret
mov
je
mov
out
popa
sti
cmp
mov
pop
xor
addl
hlt
and
inc
loop
iret
add
xchg
inc
mov
adc
sbb
sbb
pop
fcmovu
jge
push
in
pop
loope
or
and
in
sbb
mov
stos
inc
add
fwait
mov
cwtl
les
and
jbe
stc
scas
and
ret
and
jmp
call
mov
sar
lods
sbb
mov
int
pop
out
jmp
cmp
sub
addr16
mov
xchg
rcll
xchg
leave
lcall
add
sub
lods
xchg
and
arpl
mov
mov
call
jg
nop
movsb
sbbl
cmp
sub
aam
lcall
pop
movsb
sub
pop
mov
xor
xorb
popa
sub
lea
xchg
fidivs
pop
add
cmp
sbb
in
clc
cltd
cmpsb
repnz
insb
and
jo
jecxz
popf
loopne
sub
pop
loope
dec
inc
cltd
testl
adcl
test
test
mov
pop
mov
aam
jecxz
inc
push
or
rcrb
pop
fidivs
out
pop
insb
pop
into
dec
xchg
or
cld
and
cwtl
mov
popf
clc
insl
push
das
or
jle
xor
ret
nop
clc
xor
mov
loop
push
add
add
push
mov
adc
ss
es
xchg
xor
testl
adc
dec
mov
fildll
popa
and
cmp
push
mov
aaa
and
clc
xchg
and
pop
fadds
popf
adc
loope
out
ret
mov
sti
cmp
pusha
jb
cmpsb
inc
ljmp
dec
rcl
sub
mov
xor
mov
movsl
inc
sbb
xchg
mov
pop
fimuls
xchg
add
jb
sbb
inc
adc
out
mov
cmp
cmp
add
mov
inc
mov
sub
fistps
sub
add
sti
jecxz
sbb
and
data16
bound
xchg
push
push
cmp
and
std
cmp
fildl
lret
inc
jo
cs
mov
jle
test
sub
xchg
and
add
adcl
call
and
mov
xchg
sbb
or
and
int
sub
mov
ljmp
and
inc
insl
ss
stc
mov
jns
mov
xor
icebp
cmp
push
in
int
test
cli
mov
mov
mov
add
ss
pop
xor
pop
sahf
push
scas
xchg
in
ss
xchg
and
adc
sbb
xchg
and
sbb
mov
imul
add
jo
not
xor
mov
cmp
sbb
adc
cmp
sbb
inc
popa
in
dec
mov
inc
cwtl
fwait
xchg
adc
xor
inc
pop
sub
test
ret
xor
xor
mov
and
cmp
lahf
mov
dec
sbb
es
xor
das
xchg
and
arpl
push
scas
or
dec
call
pop
loop
push
xchg
push
add
xchg
push
cmp
push
lret
lret
mov
cmp
adc
xchg
fisttps
rcrl
and
xchg
sbb
xchg
mov
mov
mov
das
int
inc
gs
imul
cmp
int
xor
hlt
pop
insb
cmc
add
idivb
outsl
cli
cmp
mov
sbb
push
cmp
data16
cmp
stos
lea
mov
bound
push
push
add
push
xor
out
push
mov
cmp
jno
into
sub
and
stc
push
mov
xchg
pop
lock
cmpb
daa
lss
adc
repnz
sub
or
pusha
out
fst
add
lods
ffreep
adc
popa
inc
mov
push
gs
mov
icebp
mov
inc
call
testb
cmp
and
sbb
sbb
push
stc
sub
pop
fisubl
and
sbb
and
xchg
jne
jae
hlt
iret
xchg
mov
xorl
stc
sbb
insb
mov
les
pop
and
lret
repnz
scas
dec
stc
push
inc
dec
loopne
mov
in
insl
jo
shlb
sbb
and
ret
repnz
jo
fnsave
push
and
mov
jns
mov
out
fsts
adc
sub
cwtl
or
cld
pop
sbbb
cmp
or
and
push
out
jge
ljmp
pop
xor
aas
jg,pt
es
add
cmp
sahf
shrb
mov
mov
pop
cmpsb
into
push
aad
stos
and
push
sub
push
xor
stc
xchg
push
xchg
pop
mov
inc
mov
cmpsb
push
sarl
in
aaa
cmp
jns
outsb
ss
call
push
test
inc
dec
sub
fists
call
adc
imul
sbb
inc
clc
mov
mov
mov
imul
xchg
add
mov
ds
inc
andl
dec
push
mov
mov
repnz
xchg
and
adc
mov
adc
xchg
das
push
clc
aam
rcll
push
and
clc
sub
pop
cmc
push
xchg
xchg
rcrb
shlb
sbb
psubw
push
sub
pop
ss
fdivrs
mov
mov
icebp
in
sub
xchg
sti
xor
xchg
cmc
imulb
xchg
ret
stc
inc
xchg
idivl
jg
pusha
shrl
jp
aaa
or
lods
xchg
cmp
int
cld
ss
xchg
fdivr
mov
sbb
adc
dec
mov
xchg
add
arpl
jns
adc
pop
jp
jmp
dec
cmp
sbb
cld
dec
xor
dec
cmp
cmc
xor
xor
inc
sbb
fsubs
push
inc
ja
xchg
lcall
sub
je
out
stos
ret
leave
int
aam
mov
lods
fisubrl
nop
sahf
mov
cmp
push
clc
stc
arpl
arpl
mov
mov
mov
xor
movsl
add
into
das
div
adc
or
and
fldcw
aad
repnz
or
hlt
daa
inc
loop
xor
jl
and
cltd
cmp
movsb
loope
or
push
xchg
inc
lret
xchg
mov
pop
push
fistps
repnz
jmp
scas
sub
adc
andb
xchg
xor
or
sarl
fisubrl
and
and
push
pop
adc
sub
cmpsl
xchg
shll
add
mov
jns
xchg
roll
cmp
dec
les
pop
stos
mov
sbb
scas
sub
adc
outsl
rcll
sub
xor
adc
or
repnz
push
shlb
movsl
out
jg
cli
aas
pushf
adc
adc
movsb
movsb
aaa
out
incl
es
jmp
lds
xor
lea
sbb
daa
loop
inc
mov
push
xor
pop
or
orl
add
mov
xchg
int
and
pop
jns
sub
das
xchg
inc
and
xchg
addr16
mov
stos
lcall
jbe
xchg
mov
cmp
xchg
es
lods
push
cmp
pop
push
xchg
cmp
sub
fsub
xchg
mov
andl
or
adc
pop
out
sbb
cmp
out
xchg
adc
aad
inc
inc
push
icebp
das
mov
xchg
mov
test
popa
call
push
sub
or
sbb
sub
nop
push
loopne
lods
sub
xor
cli
out
xor
mov
dec
inc
adc
xor
mov
sub
push
push
cmp
mov
lock
aaa
push
xor
xchg
push
fidivs
jns
push
stc
je
xor
in
xor
roll
jnp
inc
pop
out
test
gs
xchg
icebp
jae
cli
cwtl
leave
je
jbe
pop
sub
not
pop
mov
mov
add
sub
pop
cld
movsb
push
sub
lds
data16
pop
fldl
cli
mov
addb
dec
popf
inc
bound
lods
sarb
and
mov
fwait
popf
cmpsl
inc
iret
push
xor
test
adcl
or
sti
lods
xor
scas
mov
pop
pop
mov
push
clc
xor
pop
sub
movsb
mov
les
push
es
cltd
dec
cmp
sub
nop
jb
loop
in
and
movsl
xor
call
push
cmp
sbb
dec
enter
gs
adc
add
bound
lods
jl
sbb
iret
lds
out
popf
and
inc
inc
sub
bound
jo
cs
lds
dec
ret
mov
frstor
imul
push
sti
dec
xor
fldenv
aaa
mov
inc
push
aad
push
dec
call
cmp
test
sub
inc
mov
jne
pushf
sub
pop
mov
and
nop
xchg
inc
sti
popa
cmp
xor
jne
sub
rclb
cmp
xchg
dec
es
or
call
and
mulb
lahf
stos
or
xchg
xor
and
shrl
dec
mov
daa
xchg
lods
dec
xchg
subb
and
cmpsb
push
popa
repnz
jl
mul
sub
or
pop
adc
gs
add
outsl
push
lock
loop
sub
jns
push
mov
dec
xchg
lret
or
xchg
jb
dec
inc
lock
xor
fwait
xor
dec
cmp
cs
sbb
jecxz
and
mov
insl
call
sub
ret
jecxz
outsl
jns
xchg
pop
sbb
add
pop
pop
adc
pop
dec
xchg
and
inc
add
dec
inc
xchg
xchg
sub
addr16
push
pop
cld
out
hlt
add
and
xchg
out
sbb
subl
jle
sub
sbb
scas
pop
push
push
sbb
pop
cld
inc
mov
sbb
sbb
adc
push
aaa
fidivl
stos
xchg
or
adc
addr16
pop
shll
popaw
xchg
filds
sub
or
xor
call
imul
jo
cwtl
das
addr16
fldl
sub
dec
leave
pop
cmp
xchg
aaa
xchg
xchg
aaa
sbb
push
mov
jle
mov
sbb
mov
dec
or
sub
adc
sbb
push
adc
call
cltd
push
xchg
cmp
xchg
loope
xchg
add
xchg
aad
push
pop
insl
pop
jnp
aas
pop
loope
cmc
outsl
test
cmp
sbb
mov
lret
sbb
sbb
int3
inc
les
das
push
popf
sub
xchg
shll
sbb
sbb
popa
push
cmp
call
mov
movsb
addr16
cltd
imul
pop
add
idivl
daa
or
mov
jmp
call
cli
push
divb
cmp
ret
xlat
bound
pop
inc
in
shll
and
mov
das
adc
aas
inc
xor
adc
cltd
dec
rolb
test
sub
int3
cltd
xor
mov
dec
push
xor
inc
inc
mov
loop
adc
stos
adc
int
or
sub
popa
call
lret
mov
push
add
fwait
mov
fsubl
jp
inc
mov
push
add
sub
mov
addr16
xchg
add
and
jno
add
call
push
inc
sbb
mov
jmp
outsl
sbb
cmp
sbb
jae
ljmp
jns
mov
sarb
cmpsb
sbb
or
sbb
jb
orl
push
cmpl
push
or
in
call
cmp
scas
stos
push
and
xlat
js
dec
ret
aad
pop
mov
loop
mov
dec
push
lods
add
ss
cmp
aaa
test
lock
push
loopne
stos
xchg
or
cltd
mov
mov
rcll
mov
int
test
push
pop
cmp
es
ficoml
stos
and
adc
scas
sbb
xchg
in
fsubrl
adc
sub
rolb
loope
ficoms
jl
mov
or
sbb
xchg
xchg
mov
xabort
adc
sub
mov
jno
jns
adc
or
mov
push
adc
repz
xchg
push
add
xorb
push
jge
or
push
sbb
xor
gs
cmp
jb
pop
fisubs
lcall
scas
enter
daa
mov
in
cmp
sbb
popf
out
sti
lret
cli
in
scas
add
ret
push
inc
xchg
rorb
das
xchg
adc
lcall
xor
xor
fisttps
sbb
test
add
call
or
mov
pop
push
mov
dec
call
jno
jp
rolb
js
jbe
sub
sub
add
jecxz
and
mov
pop
ja
icebp
sbb
adc
in
arpl
ret
xchg
stos
xor
leave
xchg
jmp
push
xor
cmpsl
push
outsl
aam
adc
scas
shll
dec
fs
call
adc
inc
pop
xor
std
jecxz
xchg
cli
outsb
cmpsl
cmpsl
xor
xchg
xor
cmp
in
dec
lahf
xchg
popa
aas
gs
int
xor
and
ljmp
jg
push
in
out
jb
adc
add
clc
loop
and
mov
push
dec
lcall
mov
add
int
jno
daa
hlt
jo
add
or
ss
shrb
pop
push
push
sti
sbb
jae
jmp
rcrl
clc
add
jmp
popf
jns
mov
lea
xor
pop
mov
imul
dec
xchg
cmp
insb
or
ret
push
adc
push
testb
push
ja
xor
mov
jno
and
xchg
mov
dec
add
or
sub
dec
test
ret
jae
or
mov
mov
bnd
shl
je
dec
sbb
mov
sub
cmp
lods
and
dec
out
daa
mov
xor
or
loop
dec
loop
outsl
mov
cmp
xchg
and
nop
jbe
inc
sbb
mov
and
push
aad
xlat
imul
pop
mov
fstl
sbb
adc
inc
in
push
mov
subb
xor
imul
iret
bound
pop
mov
sub
test
mov
pop
popa
nop
aam
in
repz
dec
xor
and
xor
cmp
cmpsl
push
lods
adc
mov
push
outsb
cmp
repz
in
mov
mov
sarb
cwtl
scas
dec
sti
dec
sub
pop
movsb
adc
xchg
call
sub
xor
mov
pop
call
mov
mov
je
fwait
xchg
xchg
xchg
or
inc
mov
pop
bound
mov
jle
mov
adc
push
pop
xchg
sti
in
in
call
fldcw
fnstenv
mov
inc
cli
mov
mov
adc
cmpl
xor
cmp
lea
popf
cmp
int3
popf
mov
lret
mov
movsb
pop
nop
ret
lods
xor
sbb
bound
jmp
pushf
sub
loop
inc
push
lea
cmp
daa
sbb
xor
and
popf
daa
arpl
sub
adcl
and
icebp
adc
int
dec
mov
sub
mov
sbb
mov
fsubs
aas
sbb
das
sbb
mov
aaa
jae
push
xchg
push
xor
je
pop
mov
lret
dec
movsl
gs
pushf
loop
mov
dec
das
mov
loop
xor
mov
mov
cmp
std
sbb
push
cmpsl
lret
sub
sahf
jge
and
cmpsl
inc
push
jns
int3
mov
pop
or
mov
inc
or
xchg
cmp
sub
loop
mov
rorb
jo
mov
sbb
adc
adc
cmpsb
or
ret
test
cli
and
and
std
insb
xchg
push
mov
mov
mov
jae
dec
dec
sub
adc
push
add
and
in
push
aas
pop
push
mov
in
cmp
shlb
dec
mov
xchg
aad
xchg
stc
add
std
cmpsl
lret
lock
cmp
xor
sbb
nop
or
sti
inc
mov
push
sub
add
mov
and
shlb
addr16
shl
clc
insl
jbe
es
out
out
ret
gs
nop
mov
in
xchg
loope
stc
imul
inc
test
cmp
push
mov
add
lret
sub
jp
or
mov
cmpsb
sti
mov
mov
or
push
popf
lds
dec
dec
cli
xchg
adc
dec
sbb
fnsave
and
stc
cmp
inc
xor
pop
mov
leave
cmp
movsl
dec
inc
pop
push
roll
add
sbbb
push
shlb
push
add
loop
push
stc
scas
daa
and
addl
sbb
sbb
pop
lahf
call
lret
xchg
je
mov
cmp
loop
cmp
or
pop
adcl
inc
in
jae
outsl
sub
push
dec
sbb
addr16
dec
pop
push
sub
adc
and
and
shr
out
mov
push
pop
push
repnz
cmp
cmpsl
ss
push
js
es
and
jno
mov
and
inc
sbb
dec
or
add
jae
cmc
aaa
in
out
in
mov
cmc
sub
sub
test
jge
inc
dec
adc
jl
lahf
sub
inc
cmpl
push
xor
in
js
push
add
pop
call
push
sahf
iret
push
shll
aaa
inc
divl
push
dec
popf
adc
jno
jl
mov
iret
gs
cmc
daa
fists
rolb
nop
sbb
lock
and
clc
or
dec
push
popf
xor
xchg
loop
test
push
adc
and
adc
mov
in
shll
dec
test
sub
pop
sub
mov
mov
call
lods
fwait
sbb
cmpsl
fisttps
and
sub
call
sub
push
shrl
sti
sti
cltd
call
inc
stc
gs
or
les
sbb
jl
pop
nop
inc
and
pop
and
and
insb
and
in
pop
pop
rcl
and
and
pop
imull
jb
jnp
dec
bound
aas
adc
mov
repnz
pushf
mov
inc
mov
xor
xorl
repnz
push
cmpl
adc
cmp
or
sbb
pop
syscall
lods
mov
push
call
sbb
dec
je
movsl
clc
mov
jg
mov
iret
and
rol
repnz
add
and
cmp
mov
xor
inc
push
lret
arpl
xchg
daa
push
jno
push
lret
xor
pop
add
insl
test
sbb
fsts
mov
ljmp
jb
in
aad
mov
aaa
pushf
insb
xchg
or
ja
sub
scas
ss
xchg
sahf
adc
sub
call
push
xlat
mov
addr16
xor
insl
and
das
pop
aas
push
and
and
adc
iret
and
negl
stos
xchg
and
xor
push
and
fnstenv
xor
xor
aaa
push
inc
cltd
aam
and
add
xchg
mov
mov
sbb
inc
popf
popa
xchg
adc
lock
pop
xchg
mov
pop
mov
loopne
imul
rcrl
push
rcrb
movsl
mov
sbb
or
arpl
push
repz
pop
adc
into
test
fstl
imul
sub
and
sarl
cli
cwtl
lods
mov
mov
aaa
bound
das
fndisi(8087
bound
sub
out
into
nop
inc
aas
aam
pandn
mov
fmul
insl
jae
xchg
ljmp
cwtl
fiaddl
aad
pop
test
xchg
aad
loop
inc
mov
and
sahf
adc
sub
sub
in
test
ret
inc
cmp
fsubs
out
push
lock
sti
jns
fsubl
in
jno
pop
add
inc
ds
adc
xor
gs
fisubs
loop
popf
mov
dec
push
mov
xchg
xor
out
stc
mov
call
sub
cmp
pop
aaa
pop
iret
cmp
and
adc
loop
pop
inc
ror
ljmp
and
sti
scas
frstor
xor
inc
dec
lea
xor
pop
or
cmp
lret
and
pop
mov
sbb
cmp
daa
inc
jae
sbb
add
stos
jno
stc
in
fdivl
adcl
aam
test
lods
push
xor
imul
subl
outsb
and
cmp
sbb
leave
mov
sbbl
imul
mov
out
cmp
mov
lahf
into
xchg
scas
das
std
xor
call
repnz
xchg
mov
std
or
popf
dec
cmp
cmpsb
mov
push
jbe
lret
jb
jne
adc
add
subps
sbb
and
sbb
xchg
and
xchg
cmp
push
mov
xor
inc
mov
clc
xor
push
ss
aam
lods
and
sub
add
imul
jg
mov
aas
mov
jb
mov
test
mov
cli
call
jle
and
cmp
mov
sbb
jno
or
or
gs
movsl
push
lock
sbb
dec
sub
and
dec
adc
add
inc
sbbb
mov
xchg
cmp
sti
mov
pop
sbb
mov
inc
jge
out
popa
sbb
dec
cmc
sub
jno
sub
iret
dec
scas
mov
cmp
aas
jne
jg
gs
pop
sub
add
mov
xchg
inc
loopne
jno
loop
add
in
mov
pop
loopne
lcall
fcoml
sbb
inc
insl
and
in
dec
sub
aam
nop
xchg
sbb
xchg
xor
dec
shll
jnp
fwait
cmp
mov
xor
xorl
push
dec
call
jg
sbb
jge
dec
xlat
shll
mov
jno
in
ja
mov
aas
les
inc
popaw
loop
inc
jp
and
lret
mov
cli
and
sbb
sbb
inc
sub
jb
lods
clc
add
popf
jge
and
pop
cli
jae
sarl
mov
daa
pop
xchg
sbbb
popa
push
pop
mov
mov
icebp
lret
fcompp
testb
mov
xchg
pop
pop
daa
xchg
and
ss
inc
adc
inc
daa
mov
jp
or
lock
lahf
cmp
add
mov
sbb
and
repz
mov
pop
cmc
int
dec
xchg
mov
lock
mov
sbb
push
mov
das
pop
rolb
or
sbb
or
xorl
jl
jg
ja
push
jb
iret
jne
cld
push
push
xchg
aas
xchg
sub
mov
or
mov
stos
push
aas
ud0
xor
push
add
dec
adc
dec
jno
add
and
adc
xchg
in
daa
hlt
popa
mov
pusha
call
adc
icebp
lahf
insl
jg
jge
int
or
jb
xchg
test
daa
scas
and
dec
and
inc
clc
out
mov
mov
out
shrb
sub
test
ret
xchg
lods
xchg
dec
and
sub
std
mov
in
pop
clc
sub
repnz
xor
decl
in
outsb
push
mov
movsl
into
int3
fildll
das
mov
push
mov
aam
jno
dec
in
mov
mov
call
mov
popa
and
bound
iret
push
aam
mov
bound
push
or
call
push
sbb
fnstenv
push
ds
int3
mov
pop
or
fisttpll
dec
mov
pop
xor
inc
jge
and
lcall
mov
mov
push
loopne
loop
and
xor
in
and
add
dec
fidivl
adc
sub
and
sti
dec
cld
add
cmp
sbb
sub
pop
xchg
adc
inc
jno
movntq
out
in
sbb
push
adc
mov
out
ret
or
pop
loope
mov
cmp
popf
inc
and
cmp
aad
repz
push
shrl
jno
inc
das
push
fists
sub
popa
push
sub
jp
mov
mov
fld
jae
in
mov
lea
mov
das
adcb
sbb
stos
test
pusha
fcomi
fisttpl
push
mov
pop
out
stos
xlat
or
in
adc
in
mov
and
mov
sahf
add
mov
aad
mov
pop
or
test
popf
xor
arpl
decl
into
inc
jno
ja
xor
jmp
mov
in
in
or
lcall
sbb
sti
pop
add
add
dec
and
xlat
insl
or
dec
ret
imul
xchg
lea
add
sbb
sub
jge
out
gs
adc
push
push
int
sub
and
sti
and
inc
popf
push
pop
xchg
sbb
or
mov
and
cmp
inc
add
outsb
test
cmp
mov
add
sbb
xchg
out
jle
negb
xchg
adc
jnp
rcrl
or
out
cmc
das
in
sbb
jbe
pop
sbb
adc
imul
stos
dec
xchg
fadds
cmp
repz
sti
fsts
les
fidivl
adc
sbb
mov
lea
adc
cmpsl
and
ljmp
popf
and
data16
add
sbb
fst
mov
cmp
jb
ret
adc
or
pop
sahf
pop
pop
call
es
imul
in
jl
push
add
dec
mov
cmp
xor
sti
pop
mov
mov
daa
fnstenv
or
sub
pop
xchg
jo
inc
mov
lods
and
adc
and
inc
xor
and
jo
mov
out
adc
test
aam
dec
mov
dec
sbb
inc
or
ret
daa
adc
lods
and
in
pop
push
pop
ret
and
add
daa
and
sub
dec
adc
mov
sub
adc
lret
mov
xchg
mov
mov
daa
or
mov
and
das
sub
iret
sbb
and
into
ljmp
pop
cmp
jecxz
popf
xchg
in
jb
stc
add
mov
sub
cli
cld
lock
mov
pusha
testl
mov
sbb
xchg
ficompl
call
or
or
xchg
jge
and
pop
sbb
and
and
dec
or
mov
push
hlt
push
rorl
xor
sub
add
fs
xor
out
or
push
xor
cwtl
mov
pop
rcrb
sbb
stc
pop
sub
jbe
mov
add
sti
jns
dec
inc
popa
xchg
cli
cmpsb
xchg
fsin
out
addb
sbb
or
add
hlt
icebp
cmp
stos
adc
loop
aas
inc
andb
insb
decl
sar
add
adc
xor
jne
sub
decl
cmp
loop
dec
into
dec
xchg
clc
mov
jo
aas
mov
mov
aas
loop
int
test
pop
adc
in
cltd
mov
in
bound
sbb
inc
mov
mov
lods
test
les
pop
push
inc
ljmp
iret
cmp
mov
xor
cmp
aam
mov
fwait
inc
add
popa
cmp
sub
sbb
iret
call
cmp
push
bound
dec
xchg
stc
iret
inc
aam
mov
pop
cmpxchg
sbb
and
sub
arpl
adc
pop
je
cmp
imul
popa
add
iret
xchg
mov
jge
and
or
adcl
scas
xorb
pop
cmpsl
cmp
pop
sbb
or
ja
mov
xchg
gs
rorl
mov
jne
ret
add
inc
pop
xchg
add
int
sti
xchg
cmp
les
mov
push
add
movsb
jp
jge
push
pop
jne
int
or
pop
sbb
pop
jne
jae
aas
scas
push
xor
lea
mov
out
xor
popa
dec
lahf
das
sbb
popa
test
cmp
or
es
adc
xor
and
sbb
dec
xchg
addr16
cmp
add
ret
outsl
add
adc
mov
or
nop
xchg
xchg
pop
aaa
mov
xlat
ret
push
bound
push
ja
xchg
mov
mov
push
xlat
das
cmp
sbb
pusha
push
or
pop
call
movsb
push
ret
jno
sub
lea
ss
pop
push
setp
adcl
arpl
movsl
gs
xchg
cmp
movsl
inc
stos
fistps
lea
mov
movsl
je
call
xor
sti
push
mov
dec
mov
and
rcrl
mov
cli
and
pop
loope
out
fwait
test
in
into
or
pop
inc
fwait
jge
sbb
call
sti
xor
and
lods
sub
xchg
nop
mov
mov
popf
cld
push
cld
test
mov
xor
sbb
inc
fs
and
les
daa
pop
jns
xlat
arpl
xor
jbe
lret
ljmp
ret
addr16
and
xor
mov
or
loope
push
sbb
jecxz
xor
and
and
xor
pop
sub
mov
pushf
cmp
pop
and
imul
gs
jge
out
pop
mov
xor
and
sti
dec
addl
mov
aas
dec
in
int
imul
cmp
xchg
cmp
bound
gs
cltd
enter
clc
or
rclb
mul
cmp
xchg
sub
lea
mov
pop
sub
jne
nop
inc
and
cli
cwtl
mov
ret
int3
jb
fimuls
pop
xchg
or
bound
pushf
jl
inc
popl
add
sbb
jne
insl
mov
push
decb
mov
stc
mov
sbb
pop
inc
loope
cmp
inc
push
int
call
cmp
popa
cmp
mov
mov
push
adc
lods
and
or
adc
fninit
lods
repnz
or
movsl
out
sub
rcll
dec
popf
xchg
dec
scas
in
jae
ja
fucomi
or
cmp
sub
sub
sub
cmp
jbe
jle
sub
hlt
or
adc
mov
ffree
mov
or
lret
daa
inc
pop
cld
mov
jae
xor
hlt
xchg
mov
mov
cs
out
sti
je
and
mov
in
mov
aas
mov
jl
in
xorl
xor
mov
push
cltd
hlt
inc
and
xor
popf
lods
jp
enter
iret
pop
imul
sub
adc
mov
xchg
sbb
in
mov
add
bsr
adc
xchg
mov
sbb
mov
cmp
je
and
mov
ret
mov
sub
xor
push
dec
xchg
and
cli
adc
cmp
sub
add
or
cltd
adc
xor
lea
add
dec
jmp
mov
sub
daa
cmp
lea
inc
push
xor
and
ja
mov
arpl
push
sub
lahf
xchg
das
mov
mov
mov
addr16
fsubr
insb
and
sub
mov
jnp
sub
pop
pop
in
xor
sub
jns
inc
push
mov
sbb
jbe
sbb
out
sub
inc
shl
push
pop
or
data16
or
mov
add
arpl
dec
addr16
popf
nop
push
and
sbb
mov
xchg
jge
and
sbb
push
imul
bound
imul
adc
cmp
inc
cmp
lock
adc
push
push
shll
xorb
test
sbb
sbb
rorl
mov
test
lea
shr
sbb
xlat
andb
jne
inc
mov
fs
and
movsb
lods
insb
pop
push
mov
lcall
adc
xor
mov
pop
sbb
adc
sbb
fs
mov
sub
enter
jae
stos
repnz
jo
sbb
pop
cli
das
aam
xchg
mov
loop
pop
inc
push
xor
fstps
adc
out
rclb
or
daa
xchg
loop
push
mov
inc
add
sub
mov
ret
jae
push
dec
icebp
dec
sbb
in
push
shll
xor
mov
xorl
sub
push
repz
dec
dec
cli
mov
add
adc
cmc
cs
dec
inc
mov
cmp
dec
cltd
pop
add
push
call
and
push
adc
in
test
cwtl
fcmovu
xor
hlt
dec
mov
scas
jb
xchg
jl
lahf
and
fcoms
mov
cltd
pop
stc
mov
negb
add
aas
punpcklbw
mov
ror
rcl
cmp
sub
rcrb
mov
and
mov
push
xor
adc
xchg
xor
std
cmp
popf
ljmp
xor
call
push
sahf
xor
loop
outsb
or
shlb
mov
xor
arpl
iret
icebp
loop
ret
mov
pause
sbb
bound
icebp
sbbb
and
scas
push
ljmp
and
mov
fsubrl
jae
push
icebp
adc
push
mov
cmp
xchg
jae
pop
icebp
sbb
inc
mov
jmp
xchg
xor
sbb
sub
sbb
jne
xchg
sbb
lods
icebp
and
int3
test
add
inc
stos
pop
mov
cmp
cmp
mov
xchg
sub
or
test
sahf
pusha
inc
lret
lea
scas
jecxz
data16
sub
sbb
cli
mov
cmp
js
test
xchg
sbb
mov
mov
nop
mov
popa
call
test
rcr
jp
push
ljmp
xorb
stos
dec
repz
shl
inc
and
mov
hlt
or
xchg
loop
cmpl
jbe
aaa
jno
das
pop
dec
xor
popf
inc
push
test
cltd
xor
popa
xor
sub
cmp
and
or
gs
in
sub
pop
gs
xchg
outsl
xor
imul
or
and
adc
lcall
and
incl
and
je
sti
fistl
aas
sbb
mov
xchg
call
mov
adc
push
jl
push
sbb
pop
inc
xor
stos
adc
cld
push
sbb
sub
cmp
scas
xchg
in
ret
inc
dec
popa
movsl
ljmp
lret
clc
fnstenv
test
test
or
mov
repz
mov
inc
or
jecxz
daa
daa
and
mov
cmp
xor
add
ss
sbb
add
xchg
or
pop
test
sbb
cmove
sar
lcall
icebp
lds
imul
mov
and
sbb
lock
sub
push
dec
push
loopne
cmpsl
push
std
add
mov
push
mov
add
mov
inc
test
cwtl
jnp
mov
test
daa
loop
jnp
jmp
sti
sbb
xchg
xor
cmp
loope
repnz
or
cli
adc
shlb
sub
add
mov
lods
data16
test
xchg
push
mov
fisttps
aas
push
and
mov
jno
fistpl
in
popa
stc
lcall
inc
lea
xor
pop
pop
stos
dec
xor
jb
mov
and
or
mov
cwtl
loop
push
push
andl
loope
cld
add
xchg
sub
mov
jae
mov
inc
out
ljmp
inc
sub
icebp
cmp
out
add
stos
push
pop
pop
push
pushf
xor
scas
dec
loope
inc
cmp
test
cwtl
pop
mov
jp
and
sub
xchg
mov
xor
imul
cmp
dec
iret
sub
stos
or
dec
sub
scas
sbbb
pop
dec
cmc
clc
mov
mov
ljmp
scas
ret
aad
test
sub
pop
cmpsb
dec
fcmovnb
sub
fisttpl
jno
pusha
bt
mov
test
lds
sbb
xor
repnz
mov
pop
ret
sub
adc
cmpsl
xchg
fnstenv
mov
push
jae
dec
call
negl
add
push
insl
mov
aad
aad
sub
inc
std
inc
and
dec
je
xor
call
sub
mov
lods
repnz
movsb
outsl
xor
xor
stos
push
add
mov
loope
ret
and
adc
orl
mov
aas
mov
das
daa
nop
movsb
and
mov
notb
inc
push
adc
mov
ror
and
cs
test
jo
pop
dec
add
fdivrs
addb
and
into
aaa
daa
addr16
cmpb
push
cmpsb
pop
inc
stos
and
dec
mov
popa
sub
fwait
jge
xor
shll
repnz
pop
sar
mov
mov
pop
sahf
repnz
jae
cmp
mov
aaa
pop
mov
inc
sbb
daa
and
xchg
mov
cmc
aam
call
popf
mov
or
xor
inc
int
sub
push
shrl
pop
call
or
pop
dec
subl
shlb
mov
dec
es
sbb
cmpb
divb
sbb
cmc
fs
cmp
maxps
xor
rcrl
mov
out
unpckhps
ret
mov
sbb
pop
aaa
andb
mov
mov
sub
out
aaa
imul
nop
xor
mov
call
mov
sbb
in
les
mov
out
adc
push
wbinvd
fsub
pop
inc
sub
mov
xchg
adc
sti
loope
cwtl
data16
push
lcall
sarl
daa
notl
cltd
js
sub
and
orl
outsb
mov
adc
arpl
stos
add
aaa
mov
outsb
paddb
mov
scas
adc
ret
sub
or
clc
pop
mov
test
push
inc
stc
jns
cmpb
mov
loop
xor
sahf
xor
cmpsl
dec
and
or
mov
leave
pop
lcall
and
sbb
out
cmp
mov
fwait
movsl
push
pop
fstpt
inc
cmpsl
addr16
and
xchg
loopne
aaa
loop
daa
iret
jb
mov
aam
or
fnclex
push
es
repnz
imul
popw
cmp
in
ret
jae
xchg
xor
sub
mov
rol
mov
pushf
in
sub
cmc
mov
jp
ja
or
in
je
popa
icebp
xor
sarl
add
aad
pop
sbb
int3
dec
loopne
fldl
shll
jg
int
cmp
adc
mov
dec
arpl
mov
mov
and
call
xor
mov
out
jmp
stc
sub
jmp
add
cmp
popa
imul
cmp
dec
imul
movsl
mov
pop
cmp
mov
xor
repz
mov
xor
sbb
cmp
or
inc
ljmp
icebp
xchg
push
inc
xor
dec
call
mov
push
mov
jno
inc
push
movsb
jg
leave
and
mov
test
repnz
aam
jb
push
xchg
sti
add
mov
mov
inc
mov
roll
sbb
mov
rcll
inc
xor
pop
bound
fisubl
sti
mov
ja
popa
pop
xor
add
addr16
pop
das
aam
mov
loope
daa
jecxz
es
imul
jg
mov
cmp
add
movb
mov
and
pop
jae
insb
cmpsb
test
pop
cmp
mov
test
pop
lock
fadd
adc
lods
push
pop
cmc
test
jb
push
push
pop
xchg
push
mov
sarl
cmp
adc
sub
out
mov
pop
das
jecxz
cmc
movsl
adc
adc
or
push
stos
sub
pop
movsb
push
scas
ret
in
adc
xor
ret
push
outsb
sbb
push
das
push
out
sti
fs
mov
jecxz
cld
mov
ja
sub
sub
outsl
jno
xchg
outsl
dec
and
mov
pop
sbb
sbb
jmp
xor
outsl
das
test
add
push
mov
sub
pop
lock
sti
sbb
xor
xor
cmp
sti
and
flds
daa
push
pop
inc
cmp
mov
cwtl
mov
lock
push
pop
test
ret
adc
ret
pop
mov
sbb
mov
lahf
mov
imul
sbb
mov
push
test
loope
rclb
sub
clc
jnp
test
not
pop
mov
aam
mov
addr16
nop
and
dec
addl
push
push
jne
loope
sti
js
and
insl
je
cmp
mov
sti
mov
bound
xchg
ljmp
or
or
sub
cmc
ss
push
lret
jbe
iret
into
lcall
cwtl
rcr
mov
popw
mov
popa
sub
pop
dec
loop
movsl
or
shll
fwait
pop
les
out
aaa
add
and
arpl
clc
jb
cmpsl
xchg
sbb
mov
xchg
sbb
mov
push
jbe
sbb
ss
iret
stc
addl
or
lahf
xchg
in
call
push
or
cmp
je
and
sbb
and
sarl
lret
daa
dec
adc
jnp
sub
pop
push
add
bound
pop
scas
loopne
call
and
les
js
mov
add
xor
and
push
add
add
movsb
hlt
or
addr16
sbb
stc
inc
mov
pop
test
js
xor
std
ljmp
jo
cld
js
pop
dec
cmp
loop
xchg
adc
mov
cmp
jo
imul
jnp
cmc
shll
pop
subl
aad
and
fsubrs
addl
adc
sahf
and
les
sbb
dec
adc
push
and
je
outsl
inc
push
jo
pop
mov
movsl
push
push
add
lods
xor
or
stc
cmp
mov
fstpl
push
adc
xchg
mov
push
adc
and
in
and
mov
push
dec
jno
adc
sbb
pop
loop
in
call
jb
jo
cs
push
pop
push
or
mov
into
dec
add
and
sbb
pop
sub
jae
and
daa
cmp
pop
xchg
xchg
aad
imul
mov
xchg
mov
test
add
push
mov
popa
cmp
mov
imul
inc
jno
or
ret
cld
aas
mov
or
subb
es
cmc
adcl
mov
jne
cmp
jbe
mov
cltd
inc
sbb
loop
inc
jb
bound
lcall
and
or
sub
bnd
and
push
stc
shll
je
outsl
outsl
in
jo
pop
inc
mov
jmp
jp
mov
mov
and
cli
or
xor
dec
rcrb
stos
ficompl
das
pop
and
or
inc
mov
or
loop
mov
jecxz
testl
or
stc
ret
call
pop
push
fsts
icebp
jge
out
aam
lea
int
mov
std
xorb
cli
jecxz
xchg
cmpsl
nop
sbb
jno
jne
and
ds
into
popa
dec
call
cmc
test
fistpll
mov
stos
mov
popf
sbb
xchg
sti
jecxz
push
mov
jae
and
sbb
and
xchg
adc
push
push
jae
popa
loop
inc
or
xor
mov
xor
mov
mov
xchg
stc
int
ficompl
loope
xchg
sbb
bound
mov
jle
sub
imul
push
outsl
mov
xchg
jg
andl
iret
mov
outsb
fsubs
movsl
insl
or
ja
cmp
jg
or
mov
mov
gs
leave
xchg
lsl
movsl
inc
movsl
imul
pop
push
fstps
xchg
adc
cmp
repz
jbe
xchg
xor
sub
xchg
call
ljmp
stc
push
aaa
dec
push
icebp
mov
test
cmp
sub
lds
add
mov
mov
xor
cmpsb
jp
psubw
outsl
mov
mov
and
inc
push
lods
sbb
xor
jecxz
mov
loop
lret
xchg
or
pop
ds
push
js
inc
addl
mov
jl
pop
jno
sbb
cmp
ss
adc
and
sti
inc
sbb
sbb
sbb
mov
and
pop
iret
aam
lea
dec
mov
ret
and
clc
xchg
sub
sub
xor
sbbl
mov
sbb
inc
leave
jecxz
cmp
push
xor
clc
xchg
aas
xor
push
push
adc
ja
sub
xchg
and
dec
mov
imul
and
vpmacsdql
iret
xor
fcoms
inc
adc
loope
cmc
mov
sbb
or
or
push
cmpsl
push
sub
cltd
lds
xchg
pop
sbb
das
cmc
xor
aaa
mov
mov
lods
cwtl
mov
push
xor
popf
repnz
jnp
jle
push
test
cld
xlat
mov
or
mov
inc
shrb
add
pop
aas
sbb
push
sarb
out
or
xchg
push
jecxz
in
xor
sarl
int3
inc
pop
pop
sub
cld
data16
jns
and
push
mov
imul
inc
ror
push
push
add
hlt
push
mov
in
xchg
push
mov
arpl
dec
xchg
sbb
add
insb
adc
hlt
xchg
aad
pop
adc
stos
mov
and
jecxz
in
or
ror
loope
out
mov
pop
sahf
sub
jns
sbb
daa
fnsave
xor
pusha
aas
add
or
xchg
pop
mov
push
mov
test
adc
adc
add
cli
jnp
sub
mov
pop
scas
push
xchg
adc
xor
jno
sbb
pop
loopne
mov
jo
pop
or
in
sbb
adc
cwtl
loope
test
cmp
cltd
aas
in
aas
and
push
jae
xor
test
and
sbb
cmp
mov
xor
push
xor
stos
push
sub
adc
icebp
inc
lahf
and
sub
insl
fistl
jo
data16
pop
pop
and
sub
call
cmp
pop
mov
scas
sbb
call
inc
jae
pop
pop
sub
adc
fsts
mov
iret
call
push
and
mov
and
fnstenv
nop
sahf
iret
push
inc
mov
sub
xchg
push
mov
in
andb
mov
xchg
xor
add
scas
loope
repnz
mov
loop
andnps
adc
sub
mov
jb
pop
sti
dec
stc
mov
adc
add
jnp
lret
lods
lea
xor
lea
je
outsl
movsb
inc
loope
sbb
stos
cmp
push
mov
loope
pop
fwait
aam
xor
push
add
jg
cli
add
loop
inc
xor
add
fs
sub
inc
dec
subb
pop
rorl
sbb
das
les
cmc
out
testl
pop
mov
mov
ficomps
imul
mov
add
in
cmp
lds
shll
pop
cltd
lock
int
gs
stos
das
gs
cltd
push
sbb
adc
stc
jge
cwtl
in
sbb
push
daa
das
addb
cmp
mov
in
cmp
repz
push
xchg
or
mov
pop
jg
es
pop
mov
aam
mov
pop
imul
jns
push
adc
out
dec
lods
adc
pop
movsl
iret
out
mov
mov
lret
sahf
dec
mov
sbb
add
adc
aam
jmp
xchg
add
jle
sbb
movsl
sti
xor
jg
test
or
movsb
xchg
cmp
jge
or
jne
inc
ljmp
fcomp
pop
movsb
adc
xlat
push
or
pop
ljmp
sbb
push
stc
sbb
pop
and
lds
int3
jb
sub
dec
ss
cld
xchg
es
shl
and
imul
dec
popa
ss
lea
jns
scas
push
pop
push
insl
ja
hlt
lcall
mov
and
shl
pop
mov
repz
add
adc
out
add
or
add
push
loope
jl
lods
int3
mov
movsl
mov
xor
add
mov
stc
cmp
sti
popf
pop
mov
push
imul
sub
je
mov
shld
push
inc
mov
mov
les
lods
test
das
adc
mov
xchg
jmp
jae
stos
inc
and
es
xchg
mov
push
mov
add
mov
adc
scas
sbb
pop
ss
mov
mov
cmpsl
jo
sub
inc
sbb
subl
mov
inc
divb
sub
adc
cli
sbb
cltd
pop
loope
dec
pop
pop
jb
push
add
inc
pushl
push
or
and
xchg
add
dec
cmp
sub
sbb
lcall
cmp
xchg
das
jle
inc
int
daa
in
dec
mov
pop
aaa
pop
xor
clc
sti
xor
dec
mov
adc
dec
mov
daa
inc
loop
sbb
cwtl
push
sbb
and
jno
out
fldl
cmp
stos
mov
and
repz
setge
sahf
js
aas
mov
cwtl
popf
push
addb
and
push
daa
sbb
sti
stc
cmp
add
mov
xchg
lret
cli
pop
jne
pusha
insb
mov
push
xchg
movsl
repnz
add
cmp
std
adc
dec
iret
cs
mov
push
inc
outsl
sbb
or
in
fs
movsl
sbb
and
mov
incl
bound
popa
data16
sarl
pop
sub
xor
hlt
dec
lods
in
int3
test
icebp
sbb
cltd
cmp
inc
pop
mov
mov
or
out
add
mov
jecxz
add
mov
xchg
jge
inc
sbb
shlb
pusha
movl
jecxz
xchg
mov
pop
and
fs
bnd
or
mov
iret
mov
dec
xor
movl
or
jl
es
cltd
dec
cmp
cmp
sub
sbb
sbb
cmpsl
mov
push
int
inc
adc
and
pop
jbe
iret
sbb
sbb
aad
cmc
mov
and
popa
xchg
and
loopne
push
int
fnstcw
xchg
movsl
or
pop
lods
dec
pop
sub
scas
adc
stos
adc
test
loop
add
nop
in
cmp
mov
cmpsb
dec
add
push
rclb
addr16
insl
outsb
and
mov
cmp
pop
xchg
mov
xor
mov
xor
outsl
jno
or
dec
pop
shr
ret
xor
fildl
adc
mov
out
pop
push
mov
sbb
mov
dec
mov
inc
xchg
push
insb
push
testb
repz
jns
pop
push
pop
aaa
dec
add
lcall
add
xor
xorb
popa
push
cmp
loop
mov
xchg
jmp
iret
sahf
jae
lods
inc
mov
ja
mov
call
mov
popf
ss
je
and
sub
mov
pop
mov
daa
mov
movsl
aas
add
jecxz
sub
jmp
xlat
movsb
cmp
jg
es
adc
cmpsb
cli
aas
xchg
subl
inc
and
in
mov
gs
or
test
arpl
mov
push
push
push
cmpsl
mov
jns
adc
mov
sub
cmp
sahf
sti
mov
call
lcall
add
movsb
stos
cmc
push
mov
cmp
sbb
sub
jb
mov
xor
cwtl
jmp
sub
cmp
ss
movsl
gs
movsb
push
add
movsl
sbb
nop
stc
fldt
ja
mov
loop
jecxz
xchg
popa
ror
sub
pushf
cmp
mov
repz
xor
out
push
xor
cmp
sub
arpl
lods
adc
arpl
push
sbb
pop
jmp
push
out
int
cmp
cmp
ret
cmp
jno
rorl
scas
xchg
sub
insl
and
mov
imul
test
imul
or
into
cld
fnstsw
pushf
jbe
push
push
in
aam
lret
lret
ja
sub
outsl
mov
leave
imul
push
pop
clc
inc
xchg
stc
xchg
sub
sti
pop
and
mov
sbb
sbb
bound
push
movsb
mov
xor
aas
jae
cld
out
sarb
mov
lock
movsb
sbb
imul
cmc
pusha
jne
stos
mov
mov
mov
mov
das
and
aas
pop
je
or
jb
cmovp
das
adc
pop
add
into
pushf
outsl
adc
sbb
xor
ret
and
and
lret
pop
das
lods
xchg
sub
jp
aaa
push
push
sub
and
fucom
pop
inc
mov
insl
and
and
add
imul
push
or
shlb
enter
push
cmpsl
ja
push
jnp
cmc
xor
add
add
lods
jl
dec
push
xorl
xor
outsl
mov
xor
pop
call
test
xchg
cmpsl
xchg
xchg
cli
adc
aad
loop
sti
addr16
xor
mov
loope
hlt
mov
aas
fisubrs
push
cmp
pop
mov
sub
pop
les
push
pop
jne
stos
cwtl
repz
arpl
aaa
xor
repnz
iret
mov
daa
fdecstp
add
mov
js
jmp
leave
sahf
push
fnsave
leave
sub
in
pop
cli
scas
in
repnz
sbb
xchg
negb
lea
pusha
sti
lds
out
test
pop
fimuls
xor
sahf
test
aas
aas
add
adc
inc
xor
and
movsl
mov
aam
or
pop
pop
lret
gs
das
sahf
push
pop
sub
mov
shll
mov
scas
adc
xchg
icebp
pop
pop
negl
pop
sub
cmp
mov
xchg
add
loop
xchg
mov
inc
cmp
ljmp
pushf
jb
lock
mov
lods
cmp
imul
popf
jmp
iret
cmp
push
pop
xor
lea
xchg
mov
adcb
cmp
bnd
inc
xlat
xchg
bswap
or
dec
addb
add
mov
or
xor
xchg
pop
inc
xor
cmp
mov
stos
stos
adc
xor
lods
xchg
arpl
cmp
mov
sub
jg
jne
fsubrs
and
out
shrb
loop
scas
fcmovu
mov
mov
inc
mov
gs
sbb
call
sahf
clc
mov
pop
cld
pminsw
pop
loope
aaa
aad
cli
xorl
int3
mov
repnz
xchg
and
push
ds
fiadds
jb
icebp
mov
xchg
aas
hlt
imul
push
ljmp
xor
mov
stos
aad
movsb
sbb
sbb
lcall
ret
adc
lahf
adc
and
sub
insl
and
dec
ficompl
jp
xor
int
addr16
jg
cmp
cld
add
cmp
cwtl
ljmp
xchg
gs
cmp
adc
add
sbb
jg
push
lds
adc
mov
cmp
out
sbb
jbe
and
push
aaa
lahf
and
aam
fstps
push
inc
iret
lea
mov
mov
leave
mov
sub
mov
movsl
push
xor
cmp
inc
fcoml
cmp
push
mov
add
cmc
test
pop
stos
add
xchg
push
int
or
sub
lods
mov
jo
add
ljmp
mov
shlb
push
lds
and
xchg
and
push
mov
int
aad
lods
pusha
mov
ficoml
and
cmpsl
lret
and
shl
inc
mov
and
push
mov
add
cmp
lret
popf
xlat
cmp
sbb
xchg
adc
add
cmp
lods
cmpsl
test
popa
gs
xchg
add
push
lret
fs
jg
xor
cmp
mov
or
xlat
xlat
mov
fnsave
shrb
xor
clc
addl
push
xlat
pop
les
mov
loopnew
dec
iret
or
xchg
ret
rcrl
pop
loop
dec
lcall
lcall
loop
imul
inc
or
out
nop
xchg
dec
jne
call
loop
clc
inc
mov
sarl
rolb
dec
shrb
stc
and
pusha
adc
popf
dec
sti
and
repnz
rcr
inc
mov
mov
jo
dec
xor
imul
xor
and
pop
call
insl
jg
cli
stc
pop
push
loop
lds
mov
sbb
mov
push
xor
sbb
mov
in
cmpsl
xchg
cmp
ss
roll
xor
or
or
push
xor
pop
rolb
push
mov
in
fmuls
aas
pop
xor
push
pop
pop
ja
push
and
and
js
sbb
and
push
add
test
mov
pushf
add
sub
wrmsr
mov
jp
stos
add
mov
xor
sbb
lds
inc
dec
iret
leave
test
mov
les
movsl
and
xchg
pop
push
lds
iret
test
xchg
cmpsb
lcall
cmc
xlat
push
popa
insl
lods
das
fadd
xchg
pop
ret
mov
sbb
sbb
jno
and
ja
jmp
dec
pop
sub
ljmp
sbb
xlat
sbb
or
lahf
cltd
and
pop
ret
cmp
xchg
jmp
mov
cmp
or
cli
sbb
ret
sar
jg
adc
adc
inc
das
lods
sub
jno
and
cmp
fldenv
cmp
and
inc
sti
das
imul
enter
jbe
movsb
cwtl
int3
xchg
adc
loop
push
out
and
insl
mov
sti
cli
incb
int3
popa
sub
jb
push
sub
cmc
insl
inc
mov
pop
shlb
mov
jns
stos
cwtl
cmp
out
jmp
and
sbb
mov
pop
pop
movsb
jnp
lds
pusha
or
push
sbb
xchg
mov
cwtl
push
sbb
lea
push
popa
loope
lea
lods
fwait
pop
in
jmp
mov
push
and
sbb
add
test
xor
sub
lcall
xchg
ljmp
int
or
jecxz
imul
lgs
xchg
and
push
adc
sar
out
cltd
pusha
es
pop
jmp
pusha
popa
cmpsl
or
outsl
sarb
push
jae
adcl
mov
mov
rcll
mov
jl
ljmp
sub
jno
addr16
adc
sbb
xchg
cmp
pop
sbbl
add
xor
add
scas
std
lock
pop
or
test
aam
adc
int3
loop
sbb
aaa
push
mov
loop
push
or
mov
lret
lds
jbe
push
and
sbb
pop
cli
bnd
in
dec
leave
fnstsw
and
popa
imul
pop
aas
int3
faddl
xchg
int
inc
push
fdivr
mov
pop
stc
adc
inc
and
xchg
cmpsl
ret
ljmp
mov
sbb
mov
push
or
call
cld
xor
in
pop
and
dec
loopew
rsqrtps
fistl
adc
xor
and
and
movsl
push
loope
aas
pop
push
xor
and
xor
sub
int
mov
sbb
dec
pop
pop
inc
lock
adc
dec
cmp
or
popa
adc
lcall
and
mov
int
jmp
ret
in
lea
cmp
scas
xchg
cmp
or
mov
mov
and
testl
fiadds
icebp
mov
int
sub
cmpsl
call
inc
sub
cmpsb
xor
pop
jecxz
xor
xchg
arpl
arpl
xor
jns
sarl
mov
out
add
rep
mov
sahf
lret
call
xchg
in
loop
ljmp
popa
and
test
subl
xchg
cltd
jp
gs
outsl
mov
sbb
xlat
aas
setge
movsb
jg
das
nop
mov
add
daa
sbb
icebp
cmp
and
sub
sbb
push
lcall
xchg
and
bound
stc
jp
cmp
mov
shlb
insb
aaa
add
mov
loope
inc
clc
mov
cwtl
insl
dec
jp
sub
imulb
pop
sti
popf
xlat
jecxz
sti
mov
ss
inc
sub
push
scas
pushf
rorl
jmp
scas
pop
test
xchg
jae
add
int
sub
scas
mov
mov
pop
dec
jno
dec
gs
ds
dec
enter
cli
stc
inc
scas
pushf
in
mov
mov
ffree
and
cmpl
and
push
jg
test
xor
and
jo
cmp
fstpl
mov
aaa
daa
cmpb
mov
rcll
pop
and
ljmp
add
inc
test
inc
loop
daa
inc
inc
mov
jns
out
xchg
sbb
addr16
lret
add
lds
or
pusha
mov
iret
bnd
mov
mov
movsl
lods
mov
adc
sbb
loop
xchg
call
repnz
xorb
ljmp
or
push
pop
cs
pop
and
xor
push
imul
inc
loopne
testb
call
idivl
stos
cmp
aad
nop
push
pavgw
push
or
lret
add
cwtl
call
xor
lahf
cmp
and
mov
lahf
push
jp
and
push
push
inc
jae
push
jo
scas
adc
in
or
icebp
in
jp
mov
nop
scas
push
mov
daa
xchg
loop
aad
push
sub
rolb
cmc
add
in
int
push
xchg
loope
fadds
xchg
add
adc
mov
jb
lahf
or
push
xor
xchg
inc
sbbl
xchg
and
sti
dec
inc
aad
push
mov
loope
xchg
loop
inc
xlat
mov
das
pop
arpl
or
dec
stc
push
mov
inc
lahf
movsl
pop
xor
arpl
jno
imul
ret
shlb
insb
icebp
xchg
xorl
sbb
das
das
jle
push
mov
and
ja
push
or
jecxz
mov
aam
insb
xor
cltd
mov
and
inc
or
inc
xchg
lret
cmovns
cltd
sbb
push
cmp
jae
aas
push
stos
jnp
stos
in
push
mov
outsl
xchg
mov
rcll
xchg
jecxz
pop
test
push
iret
inc
sbb
loopne
pop
cmp
ret
fbstp
iret
jle
pop
rcll
arpl
sbb
mov
stos
pop
popf
sbb
xor
pop
pop
and
or
jns
inc
xor
test
mov
imul
sub
mov
into
inc
popf
rorl
mov
popa
cmpsl
cmp
iret
es
cwtl
cmp
das
mov
pop
cmp
inc
insb
int
cltd
adc
jns
popf
mov
loop
push
dec
mov
or
dec
mov
jg
fs
gs
cmp
aad
lods
sti
pop
mov
cmp
popa
adc
fucom
sbb
xorl
sub
movsb
adc
in
jae
xchg
test
hlt
xchg
mov
xor
adc
cmp
jno
lret
testb
cmp
dec
stc
addr16
mov
push
loop
xchg
jne
pusha
fimull
mov
xchg
xor
or
mov
daa
mov
aad
or
test
add
jae
stc
xor
mov
cmp
xor
xor
scas
fnstenv
bound
xchg
cli
add
lcall
jnp
lock
sbb
imul
cmp
in
dec
mov
sub
frstor
leave
pop
sub
insl
call
and
cmp
pop
xor
rclb
fcmovnb
or
movsl
pop
pop
add
loop
xchg
ss
xor
cmp
xor
imul
popa
daa
and
shr
lea
int3
int
or
fwait
cmpsb
or
nop
test
add
dec
ficompl
and
pop
cmpsl
sahf
add
mov
lret
mov
imul
aaa
adc
sbb
add
outsl
push
sub
and
xchg
cmp
and
xchg
cli
mov
jns
adc
popf
cmp
push
sbb
mov
popa
add
aas
push
and
pop
cmpsl
lods
xchg
mov
mov
inc
insb
pop
dec
sub
incl
pop
sbb
stc
adc
loop
push
pop
js
sarl
inc
mov
rorl
test
sbb
xor
iret
dec
cmp
outsb
stos
aaa
jno
test
add
int
call
mov
rcrl
int
repz
mov
cmpsb
inc
jecxz
mov
cld
sbb
mov
adc
cmp
pop
or
movsb
fadds
mov
push
int3
sbb
and
lret
ret
fbstp
aas
outsl
insb
mov
fstps
mov
add
jns
loop
std
test
mov
jle
sub
cmp
pop
sbb
fsubs
add
push
jbe
rcrl
rol
ficoms
cmp
or
cmp
jns
movsb
jle
aaa
xchg
rorb
sub
mov
sbb
insl
mov
push
popa
stos
icebp
addr16
xchg
sub
cli
sub
fidivs
ds
cmp
cmp
data16
iret
popa
push
ljmp
xor
cmp
mov
imul
sahf
dec
adc
jmp
push
stos
sahf
lcall
xor
aad
mov
cltd
xor
sub
dec
dec
bnd
inc
das
insl
mov
ss
jb
or
cmp
or
test
mov
loop
mov
inc
aaa
stos
mov
aas
leave
adc
das
adcb
sbb
sub
adc
gs
or
mov
sub
sbb
test
adc
movsb
ret
mov
nop
stc
cmpsb
fwait
pop
call
sti
insl
inc
xor
add
lcall
mov
mov
mov
lods
arpl
into
xchg
addr16
sbb
adc
sbbb
stc
test
fidivl
push
icebp
insb
xchg
fnstsw
loop
jno
jae
sub
outsl
jae
call
inc
xor
inc
mov
push
and
mov
mov
nop
in
andl
call
cli
imul
enter
adc
loop
ret
cmpsl
xor
cltd
mov
xchg
sub
loope
fs
inc
addr16
movsl
push
hlt
push
shlb
lods
fcompl
and
jno
outsl
mov
dec
cmpsb
clc
xchg
inc
call
pop
loopne
test
or
dec
jae
imul
repnz
cmp
filds
fdivrp
ds
adc
mov
movsb
mov
bound
jbe
jecxz
repz
pop
int
push
ss
out
sub
outsb
insl
aaa
les
std
sbb
sub
aad
clc
addl
movsl
movsl
sub
xchg
sub
jbe
sbb
or
adc
jmp
sbbl
jne
movl
repz
jb
jbe
jbe
xor
sbb
fwait
or
shlb
sub
jns
adc
sbb
lret
daa
sti
mov
sub
sarl
jbe
xchg
test
or
or
mov
jecxz
movsb
fdivrs
add
or
imul
push
imul
shl
jmp
xor
popf
mov
xor
mov
mull
ljmp
movsb
shll
push
cli
ds
loopne
add
pop
xchg
rolb
xor
or
dec
fcomi
push
cli
or
loop
movsb
xlat
lahf
test
movsb
jle
fisubrl
jo
mov
mov
push
cli
loop
xor
xchg
subl
in
mov
mov
sbb
rolb
sbb
xchg
pop
addr16
icebp
inc
xchg
sbb
repnz
mov
dec
pop
inc
xor
or
or
jle
push
repnz
int3
popa
test
add
pop
cltd
and
add
push
arpl
in
or
xchg
mov
xchg
mov
sub
pushf
adc
int
pop
xchg
mov
push
push
shll
jmp
mov
dec
out
push
clc
mov
pop
rcl
movsl
cwtl
or
mov
mov
or
xchg
add
aaa
cwtl
inc
call
sti
incb
cmpsl
and
cmc
cmp
ljmp
stos
xlat
in
add
ss
and
push
ret
pop
xor
out
cmp
sbb
fidivrl
test
xorb
cmp
mov
mov
push
pop
xchg
mov
mov
sbb
pop
xor
pop
xor
aaa
repnz
or
movl
es
rcrl
repnz
xor
gs
lcall
mov
stc
mov
jns
pop
out
es
fcompl
test
ret
cmp
push
mov
iret
inc
mov
mov
dec
cmp
pop
iret
adc
sti
imul
mov
insl
adc
and
out
mov
dec
movsb
or
incl
insb
xor
sub
and
test
sar
dec
call
xchg
xchg
sbb
lar
mov
xchg
in
daa
inc
into
into
cmp
jo
or
mov
mov
and
lods
jne
xor
sub
cmp
add
loop
adc
call
rclb
xor
lret
lea
je
push
pop
add
inc
mov
or
mov
mov
inc
xchg
pop
aad
mov
lods
das
and
int
movsl
jp
jecxz
jg
in
and
sbb
sub
push
mov
add
push
sub
sbb
jb
sub
jge
pop
jb
push
cs
loop
loop
scas
out
push
rcrl
loop
lock
jns
adc
push
adc
jb
scas
push
inc
pop
lret
cltd
pusha
movsl
push
cli
leave
lret
stos
into
mov
dec
mov
adc
and
leave
pop
ror
call
jne
rolb
sub
mov
test
jns
jge
mov
addr16
lret
mov
mov
out
arpl
pop
das
sub
xorb
cmp
or
mov
and
mov
push
or
cmp
dec
and
xchg
jmp
xor
mov
popa
scas
lods
inc
fdivs
xor
nop
adc
decl
cmp
dec
xchg
ljmp
jae
add
repnz
cltd
test
adc
mov
and
sbb
and
inc
fs
pusha
aas
or
push
jmp
xchg
sbb
pop
ret
js
icebp
mov
pop
jae
xor
pop
imul
mov
push
call
sbb
mov
cmpxchg
lahf
cmp
pop
repz
cld
push
mov
dec
cltd
pop
test
inc
or
loope
jns
aaa
pop
sub
xor
jmp
mov
pop
cmp
and
or
and
sub
add
mov
int3
insl
mov
inc
and
push
adc
xor
cmp
aaa
test
xchg
push
jbe
and
out
and
cmp
jns
xchg
test
pop
add
rsqrtps
fistl
sbb
sbb
push
imul
cmp
add
and
mov
movsl
cmp
pop
gs
and
and
popa
xchg
ss
imul
stc
test
xor
jb
iret
mov
inc
cmp
sub
ret
sbb
jge
jns
imul
and
out
in
repnz
outsl
stc
sub
pop
repz
mov
lods
stos
jae
addl
movsb
iret
inc
lcall
xchg
cmp
arpl
call
mov
arpl
dec
mov
andl
fsubrs
adc
jno
lods
repz
sub
ds
ja
mov
mov
mov
xchg
dec
mov
mov
data16
in
aad
jb
mov
outsl
std
dec
stc
pop
xor
movsl
repnz
test
xor
push
daa
pop
or
pop
call
daa
test
and
and
je
call
out
jnp
jl
gs
mov
xchg
pop
jmp
jno
imulb
hlt
pop
xor
inc
and
jl
xor
push
cltd
push
sbb
dec
sbb
cmp
sti
aaa
add
fld
inc
movsb
jb
lods
int
ss
mov
sbb
sub
push
mov
popa
push
mov
movsl
lock
popa
icebp
pushf
data16
and
insl
cwtl
outsl
shlb
mov
push
jl
cmp
icebp
pop
loop
in
insl
pushl
jmp
stc
push
jp
movsl
addl
dec
shrl
in
cmp
ss
mov
and
cmpl
dec
cmc
mov
data16
jl
loopne
test
enter
inc
cmpsb
loope
push
cmp
incb
cmp
mov
mov
xchg
or
add
stos
loope
jl
movl
sbb
sbb
xor
int
pushf
cmpsb
adcl
leave
lds
cmp
idivb
xor
movsl
lcall
mov
lcall
or
push
in
mov
adc
dec
popf
cmc
arpl
xchg
fldl
jne
xor
mov
loopne
push
das
sub
insl
nop
sbb
xchg
lret
andb
call
sbb
jmp
cmp
mov
xchg
mov
push
cmp
leave
lock
lcall
in
sbb
jmp
xor
divb
mov
pop
nop
lcall
mov
push
dec
dec
stos
andb
lods
out
clc
je
out
push
cmp
nop
xlat
mov
sub
loop
in
fbstp
sub
ret
xchg
jge
and
sbbl
dec
mov
fidivl
mov
add
xchg
adc
pop
int
cmc
sub
sbbl
int3
cltd
mov
mov
inc
hlt
nop
faddl
cltd
call
jmp
addr16
push
mov
jb
outsl
std
rep
and
lods
imul
imul
maxps
or
cmp
adc
int3
cmp
fnstsw
xlat
mov
jg
xchg
xor
pop
xchg
inc
call
jle
mov
dec
das
std
pop
jo
dec
jle
cmp
push
lods
je
out
fstps
cli
xor
orl
shlb
mov
imul
ficompl
outsl
or
fcmovb
push
cli
ret
loope
mov
loop
jecxz
cmpl
pop
fnstsw
cmp
cmpsl
push
sbb
cs
push
adc
int3
loop
jl
mov
fisubl
cmp
push
rorl
imul
push
or
mov
scas
dec
inc
push
test
aad
lret
outsl
das
loope
and
or
jge
test
lret
imul
popa
inc
loope
into
pushf
cmp
imul
roll
sub
mov
sub
aam
aad
aas
sbb
ficoml
movsl
dec
sub
ret
andl
mov
aaa
pop
pop
inc
aaa
addl
and
sbb
pop
leave
cli
lds
push
add
mov
rcl
movsl
mov
xor
xor
aaa
push
dec
mov
popf
pusha
movsb
ret
in
and
aam
dec
cmpsl
add
faddl
popf
rclb
movsl
vmread
xchg
sbb
dec
cmp
pusha
loopne
cmp
push
and
xor
mov
mov
sti
push
sbbl
or
insb
xchg
mov
push
aas
xor
fnsave
xlat
pop
stc
icebp
gs
dec
inc
push
xor
ds
imul
cmpsl
and
push
pop
inc
add
mov
mov
sbb
pop
push
mov
outsb
shlb
jbe
fisubl
out
cmp
xchg
out
mov
call
cmp
insl
ss
paddq
repz
mov
pop
ds
mov
imul
sbb
in
mov
cmp
loop
xor
pop
aas
test
push
test
sti
aaa
popf
pop
push
das
lret
cmp
xlat
mov
jp
add
adc
mov
sbb
test
insb
aaa
mov
test
fisttpll
jge
movl
inc
adc
dec
in
or
mov
mov
or
sbb
lds
popa
in
pop
subb
pop
push
orb
jo
lret
fs
jae
or
cld
xor
push
cmp
sbb
lea
cltd
mov
jg
call
dec
frstor
stos
fs
arpl
and
mov
mov
add
xchg
jl
pop
push
scas
std
jl
not
jnp
incl
adc
loop
and
push
and
call
xchg
jecxz
or
mov
out
lret
dec
aas
push
ss
out
mov
adc
mov
outsl
mov
sub
jno
inc
in
xor
cmp
stc
pop
push
pop
push
pusha
jmp
cld
push
popa
xchg
sti
test
cld
popf
push
lods
imul
mov
fmull
fnstcw
jle
mov
and
mov
push
sub
mov
jnp
flds
mov
data16
pop
call
pop
or
sbb
sub
inc
and
push
shlb
fstpt
dec
cmp
rclb
xchg
addr16
or
xchg
inc
mov
imul
add
dec
fwait
stos
pop
pop
and
repnz
cwtl
das
jg
packuswb
push
rorb
test
xor
repnz
add
shlb
ja
mov
jg
call
lret
cli
jae
and
addr16
out
cmpb
cmp
icebp
add
sahf
mov
cmp
outsb
pop
sahf
lods
xchg
or
stc
jnp
mov
leave
test
pop
loope
enter
mov
push
cwtl
xchg
inc
enter
testb
mov
cmp
sbb
int
add
popa
mov
outsl
imulb
rcrb
sub
pop
adc
popf
lods
dec
sbb
adc
mov
push
inc
stc
dec
xor
adcb
sti
inc
addl
popa
inc
adc
sbb
lret
mov
daa
repz
sub
stc
sbb
inc
aam
mov
xchg
pop
idiv
rol
ss
fidivs
xchg
sbb
or
divb
cmp
out
loope
iret
inc
push
loop
push
fidivl
mov
xchg
pushf
or
into
lcall
das
jne
das
mov
lret
dec
insl
lods
shrl
jmp
std
cmp
daa
popa
sbb
pop
lcall
dec
sbb
loop
sbb
arpl
je
imul
lea
lods
scas
push
fstl
lods
ljmp
adcb
inc
stc
std
mov
cltd
std
cmp
xor
pop
ret
cmpl
lods
in
in
or
xchg
jl
sub
jno
cmpl
test
mov
lcall
mov
in
pop
orl
cwtl
es
inc
call
sub
insb
fnstsw
ss
cmp
push
inc
cld
pop
inc
cmp
and
jno
mov
jecxz
loop
movsl
cltd
mov
sub
push
push
rcrb
iret
sbb
cs
xor
das
arpl
sub
or
test
and
pop
loopne
imul
mov
dec
xchg
pop
int
fistpl
imul
lock
ficomps
pop
push
scas
rorl
jl
outsb
fcomps
and
ret
pop
aaa
inc
test
iret
or
test
cmp
popa
daa
icebp
loope
adc
iret
cli
inc
xchg
movsb
cwtl
loopne
pop
xchg
mov
mov
add
in
mov
repnz
out
ds
jbe
lods
xchg
add
mov
add
loop
dec
jecxz
fst
inc
fdivrs
nop
cwtl
aas
cmp
pop
xor
insl
pop
cmp
call
mov
pop
aaa
xor
mov
es
push
test
adc
aad
sbb
clc
sub
mov
jns
ret
popa
movsl
xchg
xchg
inc
add
add
and
adc
mov
add
cmpsl
inc
out
rolb
sub
in
pop
in
adc
lret
mov
andb
dec
sub
jmp
test
daa
pop
ljmp
loop
ficoms
filds
sbb
sub
jbe
xor
scas
push
mov
or
push
bound
addr16
pop
sti
mov
add
rcll
push
into
ret
inc
mov
loop
fisttpll
rcrl
sbb
test
arpl
adc
dec
out
inc
ret
xorw
adc
out
inc
dec
mov
loope
rcll
popa
sub
mov
aad
xchg
daa
repnz
popf
jno
xchg
lahf
xchg
stc
cmp
fstl
stc
aas
pop
loope
add
dec
jne
lcall
mov
xchg
pusha
add
pop
inc
inc
adc
jmp
xchg
fimuls
xor
xchg
aaa
xorl
push
icebp
nop
cltd
and
xchg
mov
les
dec
push
sbb
xor
push
add
and
cs
cmp
inc
cmpsb
adc
xchg
int3
inc
scas
xchg
mov
or
xor
push
sbb
xchg
and
inc
jb
xchg
sbb
cmpsb
rcrl
sub
xor
sub
cmc
push
outsb
addr16
xchg
movsb
jns
xchg
dec
adc
jbe
adc
adc
std
adc
push
stc
loopne
push
dec
loop
les
cltd
outsl
inc
pushf
push
cmpsl
shrl
test
xor
sbb
lea
xor
data16
mov
stos
inc
mov
divb
jns
ret
inc
roll
push
sbb
shrb
mov
or
mov
orl
and
inc
cmp
imul
inc
pushf
push
call
aas
push
pushf
icebp
bound
gs
outsl
ret
out
sbb
das
negb
leave
jmp
ficoml
dec
es
and
mov
addr16
cs
out
cmp
adc
pop
stc
xor
push
adc
push
subb
xrelease
addl
adc
mov
movsb
call
loop
add
jns
fisubs
xchg
cmp
cwtl
pop
pop
addr16
inc
xor
daa
mov
push
inc
cmp
jle
dec
movsl
fmuls
or
mov
mov
aas
sbb
add
mov
xor
xor
das
cmp
pop
call
push
xchg
mov
addr16
das
and
pop
out
sbb
push
cmp
and
push
mov
jl
aas
push
mov
inc
popf
jnp
xchg
dec
mov
aad
xchg
sub
into
mov
mov
jne
mov
test
dec
fs
inc
pop
adc
push
jmp
mov
push
pop
jae
adc
xchg
sbb
test
in
sub
sub
xor
jo
sbb
divps
mov
lock
inc
push
sub
push
stc
addr16
in
adc
cwtl
stc
cmp
add
fistl
jae
sub
mov
push
movsl
ljmp
add
jle
imul
cmpsl
pop
movsb
add
jp
movsb
xor
cmpb
xor
inc
sti
cmp
mov
inc
enter
xchg
push
jo
loop
mov
mov
and
shll
fcomi
pop
das
stos
sub
mul
imul
ljmp
jbe
sti
sub
ds
cmp
fwait
int
enter
pop
xchg
jno
mov
seta
rcrl
inc
pop
loope
outsl
call
addr16
sbb
jo
push
test
xor
add
pushf
mov
push
sbb
mov
test
mov
fidivl
jnp
xor
popa
adc
jmp
pop
in
add
add
or
out
push
aaa
jmp
inc
sub
mov
adc
loop
mov
cmp
dec
xchg
cmp
sub
xlat
adc
cmp
aas
mov
fcompl
scas
or
push
sbb
jbe
sbb
xchg
stc
lock
fistpll
push
adc
dec
aas
das
xor
dec
inc
popf
sbb
pop
push
sbb
or
dec
add
pop
daa
jne
out
mov
mov
xor
xor
xchg
cmp
push
mov
in
xchg
and
mov
sbb
bound
sar
jmp
inc
xor
test
sbb
jmp
out
sub
loop
dec
pop
mov
sti
push
cmp
add
cmpsl
lahf
nop
inc
dec
out
loope
popa
out
stc
push
in
cmp
mov
inc
call
mov
push
in
push
les
xor
mov
out
jno
adc
mov
insl
mov
scas
inc
test
insl
pop
inc
inc
int3
mov
cmp
and
adc
aam
add
movlps
sbb
int3
das
add
lret
inc
sbb
out
hlt
aaa
xchg
iret
dec
pop
stos
or
int3
add
fwait
int3
pop
mov
jge
mov
loop
addr16
pop
sbb
repz
sbb
lahf
mov
add
rclb
addr16
or
xor
mov
xor
jmp
gs
popa
inc
ja
and
xchg
loope
ja
mov
jp
mov
sbb
inc
cmp
inc
cwtl
xorb
sbb
ret
gs
pop
test
or
mov
les
test
out
adc
xchg
jae
in
test
dec
adc
popa
push
push
lock
loop
negb
cmp
pop
mov
inc
jmp
jno
xchg
and
cmp
mov
sub
ds
fldenv
and
sub
fwait
mov
sub
jno
push
inc
jno
mov
scas
push
xlat
lea
pop
mov
sbb
inc
jne
xchg
cmp
out
test
sti
sub
ss
xchg
mov
dec
cmp
fidivs
nop
pop
ret
dec
int3
in
mov
sub
cmpsl
addr16
cmp
jns
inc
push
das
or
adc
mov
inc
sarb
sub
mov
cwtl
aam
cmpsb
xchg
adc
cmc
stc
lret
and
imul
xor
lcall
orl
jno
mov
call
dec
sbb
cmp
loopne
test
jae
shlb
roll
sahf
xor
je
mov
out
imul
xchg
ret
xchg
pop
xor
xor
mov
inc
fwait
jecxz
lcall
mov
ss
push
fsubrl
push
icebp
int3
sbb
push
sti
cld
repnz
cmp
mov
andb
sbb
dec
cmpsl
push
inc
in
jg
int
sub
loop
cmp
or
mov
and
push
xchg
xor
loop
lods
int3
ljmp
icebp
loop
adc
ja
shrb
mov
loope
or
nop
or
sbb
pop
add
inc
sbb
sub
pop
xchg
or
fs
or
pop
adc
bound
repnz
mov
mov
cmp
loop
pop
and
mov
pop
or
sbb
out
lods
out
fisubl
out
xchg
dec
cmp
mov
and
add
mov
fadd
and
mov
cmp
test
and
sarb
aas
fldt
cmp
mov
mov
jnp
aaa
addl
inc
clc
jns
hlt
cmp
orl
pop
sbb
out
lock
sahf
stc
jnp
dec
xor
jno
mov
int3
gs
and
push
sub
sub
inc
mov
and
pop
push
cmp
test
xchg
xor
xchg
arpl
orb
pop
add
pop
mov
iret
popf
sub
test
iret
jle
sbb
push
mov
arpl
xchg
clc
out
fldz
out
sbb
lahf
bound
sbb
and
push
sub
push
push
lea
adc
std
cmp
shll
push
fdivr
daa
lock
in
scas
and
cmpsl
sub
loop
jecxz
in
aam
pop
pop
cltd
into
fbstp
and
dec
cmp
ljmp
inc
in
jno
pop
mov
push
or
jg
mov
loop
out
sub
cs
shll
inc
icebp
shll
nop
cltd
leave
pop
les
fldenv
popf
pushf
push
cmp
push
movsl
pusha
and
and
dec
jne
loope
push
push
lods
add
sysret
mov
push
cltd
xor
sbb
jecxz
inc
xor
aaa
sub
popl
xor
pop
add
adc
xchg
fldenv
loopne
xor
inc
and
or
dec
loop
xchg
cmpsl
popf
pop
rcrl
xorl
xor
dec
mov
adc
xchg
cmpl
pushf
jp
adc
jns
mov
ret
int
stos
mov
aad
mov
mov
add
rcrb
jno
lahf
aas
sbb
xchg
pop
loope
loopne
cmp
push
push
fildl
and
sub
outsb
cmpsb
lds
mov
sbb
cmp
push
movsb
mov
stos
cltd
cmp
dec
inc
or
mov
rcrl
loop
mov
sahf
loop
sti
sub
sbb
mov
sbb
std
mov
cmp
sub
cld
xor
sbb
and
mov
add
cltd
fstps
dec
cmpsb
xor
and
push
in
and
fisubrl
insb
outsl
mov
pop
inc
nop
lds
mov
or
shl
xor
movsl
ret
movsl
jns
js
call
lcall
sbb
push
outsl
dec
shll
call
decb
jb
movsl
jbe
cmp
cmpsl
add
sbb
sub
push
ljmp
addr16
sub
test
popw
lret
orl
sbb
mov
into
lock
push
int3
sbb
sahf
arpl
ds
jmp
adc
cmp
mov
dec
jae
out
sarl
imul
fwait
mov
push
cmp
adc
cmpsl
add
cltd
shlb
icebp
call
andl
icebp
shr
sub
dec
int
mov
add
add
std
icebp
test
push
pop
rol
pop
int
mov
iret
cmp
aas
cmp
lcall
adc
dec
jecxz
inc
push
fs
or
ret
popa
xchg
adc
cwtl
stc
sti
mov
xor
push
in
pusha
addr16
imul
leave
xor
fcmovne
lea
inc
test
cltd
or
xchg
mov
ds
ret
dec
aas
jne
sbbb
fimuls
iret
int
adc
pop
cli
pop
in
sub
xor
loop
xchg
adc
ljmp
add
dec
movsb
lods
inc
das
scas
or
xor
lcall
cwtl
cltd
xchg
rcll
in
popf
inc
fstps
pop
dec
mov
sbb
lods
xorb
rol
mov
mov
cwtl
adc
loop
pop
repnz
inc
mov
shlb
mov
mov
and
xchg
cmp
sub
lcall
mov
cmp
dec
leave
lds
sahf
lock
lods
xor
dec
sub
jno
add
jbe
inc
pop
dec
pop
adc
push
jns
lock
push
xlat
and
sub
lds
inc
nop
popf
or
popf
inc
scas
sbb
inc
cmc
inc
push
shl
xor
bound
jge
xchg
cmpsb
movsl
sti
pop
nop
jmp
adc
cmp
inc
stos
scas
cmp
mov
arpl
cmc
int
cmp
les
mov
loope
scas
data16
scas
pop
aas
fwait
std
outsl
push
add
adc
lea
inc
loope
xchg
mov
lods
gs
notl
mov
test
gs
or
ljmp
pusha
push
mov
sbb
test
mov
add
mov
dec
addr16
cmp
idiv
dec
and
add
lret
enterw
inc
mov
data16
jo
loop
andb
push
stc
stos
mov
out
scas
bnd
inc
and
pop
sarb
sub
pop
sbb
sub
fs
push
adc
test
lea
pop
gs
stc
adc
xchg
addl
push
xchg
int
adc
daa
scas
sub
fadds
sbb
dec
dec
sbb
inc
inc
incl
stc
mov
inc
inc
imul
in
mov
int3
jle
pop
adc
pop
ljmp
daa
push
ret
dec
nop
lcall
push
mov
sbb
sbb
in
call
push
push
popf
push
push
sbb
aad
scas
sbb
adc
call
stos
and
xchg
xor
mov
stc
and
xchg
jno
lcall
rorl
sahf
jns
fnstenv
iret
sub
mov
and
push
cmpsl
inc
inc
je
or
push
xchg
mov
shl
aam
and
xor
cmp
sbb
mov
push
cmp
sti
adcb
jmp
mov
dec
cmp
test
dec
sbb
inc
cwtl
mov
xor
int3
mov
jbe
sbb
jns
test
xchg
cmp
aas
ljmp
arpl
cmp
push
stc
and
in
dec
in
mov
sarl
sbbb
pop
stc
push
cltd
fwait
push
test
in
push
sti
pop
in
aaa
cmp
pop
gs
sub
jne
cmp
daa
aaa
das
lods
pop
sbb
test
mov
pop
push
sub
sbb
mov
dec
popf
xor
and
cmpl
rcrl
in
andl
pop
movsl
mov
xlat
cmp
or
add
sbb
or
sarl
insb
cs
push
call
scas
jg
test
lahf
cmp
mov
xchg
add
push
ret
jae
cwtl
or
int3
cmp
int
push
clc
and
mov
dec
push
sub
or
mov
cli
xchg
jp
jmp
aaa
push
sbb
or
xor
add
xor
loop
pop
sti
repz
out
push
outsb
mov
je
and
and
adcl
outsb
fcoml
cs
insb
aaa
sarl
loop
jo
pusha
xorb
hlt
ret
pop
mov
scas
inc
je
cmp
push
lods
neg
xchg
int3
enter
int3
hlt
pusha
pop
mov
ret
enter
call
jle
mov
or
xchg
xor
ljmp
ret
inc
xchg
rcrl
mov
push
les
mov
aaa
dec
cli
mov
xlat
mov
add
mov
mov
movsb
and
inc
xchg
xchg
fcmovne
test
mov
fistps
sbb
pop
jl
enter
stos
es
sbbb
mov
movsl
xchg
imulb
ret
mull
xchg
sbb
and
xor
std
push
call
dec
cmp
pop
pop
test
jp
ds
cmp
pushl
arpl
addr16
mov
int
das
cmp
adc
andb
and
mov
int
sbb
adc
or
insl
push
xchg
pop
sbb
pop
aad
mov
sub
mov
data16
jns
xchg
adc
pushf
cltd
bswap
dec
cmp
sahf
repz
mov
in
push
icebp
pop
sbb
fwait
mov
dec
les
push
inc
inc
sub
and
adc
mov
adc
or
xchg
cmpl
mov
cmp
dec
add
adc
cmp
and
and
xor
sub
dec
ljmp
out
mov
loop
push
lock
pop
scas
imul
adc
add
or
jle
push
ret
cmp
mov
ja
dec
pop
mov
leave
sbb
ljmp
pop
inc
sbb
cmp
aas
and
pop
aad
xor
bswap
mov
xchg
lret
inc
ss
mov
stos
sbb
test
cmp
lcall
cmp
push
pop
jb
pop
hlt
xchg
cltd
fldenv
rcrb
dec
lahf
ljmp
jl
loope
sbb
adc
mov
shlb
cmp
movsl
cmp
sarb
push
fildl
dec
sbb
mov
jne
add
ljmp
hlt
and
adc
push
sbb
pop
push
jne
call
pop
out
add
pop
sub
and
inc
out
shrb
and
push
xor
xchg
daa
xchg
xchg
jp
and
adc
xchg
les
cltd
lahf
or
in
mov
cmpsl
aam
sbb
and
std
sarl
rcrb
mov
leave
orb
push
mov
jbe
xor
and
dec
xchg
loope
push
das
lahf
pop
in
and
movsl
mov
addr16
jl
push
movsb
or
adc
bound
shl
bndstx
inc
cmp
or
ja
movsb
imul
lcall
jno
pop
cmp
dec
pop
mov
mov
pop
sub
stos
mov
mov
arpl
daa
add
and
shlb
or
jae
lock
mov
jnp
frstor
mov
pop
dec
xchg
push
pop
mov
xor
pop
xchg
sub
push
orl
es
xchg
lods
test
js
mov
push
sbb
outsb
push
ja
jno
sub
popf
shll
pushf
add
into
push
cmp
sub
pop
mov
or
mov
outsl
iret
pusha
or
in
cmp
push
xor
jmp
imul
ret
sbb
bound
inc
cltd
repnz
lods
mov
push
imul
stos
xchg
xor
pusha
push
lea
cmpsl
xor
push
sbb
aad
inc
pop
push
mov
xor
popa
sbb
iret
or
pop
cwtl
adc
mov
dec
nop
in
push
jo
cmp
inc
hlt
negb
and
sbb
mov
mov
adc
add
sub
lret
cmpsl
out
out
mov
fwait
test
add
add
aad
xor
jae
movsb
dec
sbb
xor
xlat
hlt
xchg
or
dec
mov
fstpl
mov
test
mov
sub
jnp
lea
sbb
into
dec
insl
xor
imul
sbb
aam
fldt
pop
sub
cwtl
std
cmp
out
fwait
push
daa
xchg
sub
push
xchg
scas
loope
andb
push
call
ds
xchg
jnp
or
sbb
add
shr
rclb
lock
xlat
lret
dec
ds
je
aaa
pop
je
enter
cmpsb
jnp
jns
or
and
sbb
xchg
xchg
ffree
sub
mull
movsb
mov
inc
mov
movsb
sti
roll
and
push
xchg
xor
out
mov
xor
adc
jmp
test
cmp
xchg
jae
xchg
sbb
popf
es
dec
push
rorl
jecxz
and
ljmp
es
enter
lods
add
cmpsl
jmp
pop
js
push
cmpsl
aad
mov
test
jno
insl
loope
cld
lods
sub
dec
or
jbe
mov
inc
push
mov
cmp
adcb
lea
sub
sbb
insl
stc
sub
ds
adc
cmp
push
cltd
les
jl
xchg
jo
xchg
xchg
xchg
pop
cmp
ds
popfw
lods
sbb
sahf
into
stos
pop
pop
mov
fstp
xchg
stos
jno
popa
movsl
into
cld
xchg
out
xor
push
jnp
mov
std
popa
adc
fidivrl
xchg
imul
rolb
outsb
jecxz
mov
xchg
cmp
shl
cltd
aad
and
cmp
sbb
xor
dec
or
inc
pop
jl
mov
push
pop
xchg
xchg
pushf
leave
stc
dec
lahf
int
cmp
mov
mov
cmpl
jns
daa
sbb
ret
xchg
push
lahf
xchg
cli
add
cmp
jp
mov
cli
cmpsl
in
shl
leave
imul
lea
mov
hlt
xlat
sbb
cmp
stc
mov
insb
gs
aad
lea
sbbl
lds
pop
insl
not
pop
shrb
cmp
bound
sarl
je
inc
sbb
and
leave
adc
lret
ds
nop
lret
pop
stc
push
jecxz
and
cs
xor
cs
or
jg
sub
cmp
mov
leave
popf
xchg
sub
test
mov
test
aas
sti
and
ret
aaa
inc
insl
xor
xchg
mov
aaa
push
inc
mov
sbb
sbb
cmp
repnz
lret
fsubrs
push
mov
repnz
cmpsl
js
lods
sub
pushf
imul
daa
sti
sbb
adc
imul
arpl
and
push
js
das
add
cli
arpl
push
xor
loop
dec
push
dec
lret
add
cld
add
pop
leave
xchg
inc
sub
jg
jge,pt
xor
cmp
mov
ss
push
and
cld
sahf
cmp
inc
pushf
hlt
pusha
or
sbb
in
aas
lock
xor
bound
insb
rcl
mov
adc
subl
sub
and
xor
and
fs
aam
stc
dec
ret
daa
and
mov
jae
lods
or
jno
fidivrs
mov
mov
cmp
adc
xor
loop
pushfw
push
dec
xor
dec
je
hlt
mov
testb
and
jns
or
cmp
js
in
pop
xchg
repnz
fs
mov
pop
jge
ds
adc
sbb
cli
cli
push
pop
and
adcb
xor
mov
jecxz
add
cli
aad
jp
jecxz
daa
push
xchg
mov
daa
push
dec
add
repz
pusha
dec
xor
or
sbb
sti
xor
mov
loope
loop
les
jmp
add
add
fwait
pop
mov
pop
sahf
int
mov
lock
and
cmc
cli
jle
and
adc
loop
insb
insb
int3
push
jmp
cli
outsl
jle
jns
mov
mov
lea
loopne
jp
cmpb
push
sbb
repz
daa
push
push
xor
push
add
cmpsl
push
cmpb
ret
incb
cmp
mov
and
and
ja
dec
push
jno
cmp
jp
inc
inc
cmp
sbb
jp
cld
dec
adc
and
push
sbb
mov
inc
push
aam
inc
jbe
cmpsl
mov
test
test
popf
mov
pushf
mov
fcoms
xor
add
orb
ljmp
mov
loop
xor
lret
out
aas
xchg
xor
hlt
ljmp
sbb
jge
lahf
test
sub
xchg
jmp
leave
jp
xchg
movsb
divb
jae
bound
pop
shll
test
idivb
pop
dec
push
vhaddpd
lret
sbb
and
adcb
sub
repnz
movsl
push
aaa
cltd
xor
sbb
and
sub
clc
xor
xor
sub
inc
mov
sub
and
mov
daa
xchg
call
pop
dec
xchg
mov
or
loop
pop
sub
stc
jecxz
gs
xchg
pop
cmp
sbb
mov
sahf
ljmp
std
ljmp
aas
lahf
xchg
xchg
dec
ja
ds
mov
or
push
negl
call
int3
pop
jo
xchg
sbb
iret
pop
stos
or
sub
and
fwait
push
mov
call
sbb
pop
int3
inc
inc
sbb
inc
mov
jns
jge
mov
sbb
sbb
push
sub
comiss
jo
ss
sub
inc
scas
cmpsl
lock
lret
outsl
sbb
adc
cmp
mov
aaa
fdiv
ja
cwtl
xlat
and
test
sbb
or
xor
mov
sbb
das
int3
jmp
stos
xor
divl
sbb
out
jns
addb
test
jbe
xchg
mov
mov
test
pop
inc
mov
sbb
mov
ja
add
sbb
test
sbb
or
mov
hlt
je
aaa
xchg
popf
in
push
mov
xor
push
jno
cli
test
and
fldl
iret
into
xchg
pop
shr
sbbl
dec
pop
cld
xchg
adc
xchg
movsl
fiaddl
xchg
sub
inc
lcall
imul
xchg
jl
fistps
pop
sahf
xchg
jecxz
xorb
lods
cmpb
push
inc
daa
add
jns
aad
ljmp
adc
add
jae
lods
lds
pop
inc
scas
stc
int3
mov
mov
sub
fisubrs
test
push
xor
mov
xor
lds
fstl
repnz
lock
stos
adc
adc
negb
push
xchg
loope
popa
addr16
in
shl
mov
add
insb
jg
stos
andl
add
pop
rolb
outsl
sub
pushf
mov
mov
cs
mov
xchg
fwait
aad
add
stos
sar
std
sbb
shlb
add
or
sti
fwait
popa
sbb
call
mov
add
cltd
pop
lock
sub
imul
lret
sbb
xorl
pmuludq
xchg
daa
xchg
inc
xor
mov
pop
mov
test
es
push
mov
inc
cwtl
add
pop
jnp
call
lds
scas
push
sbb
stc
xor
loop
jns
cmp
pop
mov
mov
push
adcb
cmp
loop
push
int
or
and
gs
in
popa
mov
jae
addr16
jb
stc
orl
call
imul
and
stc
jnp
xchg
mov
call
lea
and
rol
mov
cmp
jp
pop
xor
xor
pop
pop
iret
inc
mov
sbb
add
pop
and
sbb
pop
mov
sti
leave
cmp
xchg
cltd
std
or
outsl
push
pop
cmp
cli
cmp
jp
mov
lcall
pop
xor
jnp
cltd
mov
sub
add
cmc
rcl
mov
xchg
and
push
call
jge
push
mov
popa
push
push
adc
jno
sub
divl
mov
arpl
push
movsb
into
out
outsb
mull
push
sub
ds
inc
cmp
mov
add
xchg
shrl
ud1
sbb
loope
push
xor
call
das
loop
mulb
in
sbb
subb
ficoms
and
xchg
sub
inc
and
cmp
jmp
jmp
and
add
or
push
xchg
cmp
add
sbb
mov
fucomp
and
adc
addr16
xchg
xor
xchg
rclb
mov
sbb
push
loop
xor
sub
inc
cwtl
sbbw
loop
out
adc
push
sub
jecxz
and
loop
cwtl
jge
dec
loope
sbb
aas
push
jmp
xor
adc
call
ret
roll
push
jne
mov
pop
lds
cmpsl
mov
popf
mov
daa
mov
shlb
imul
stc
pop
outsl
pop
dec
sub
daa
mov
and
mov
push
dec
icebp
jle
push
mov
leave
rcrl
adc
sahf
rcr
xchg
js
adc
data16
mov
ljmp
test
arpl
sahf
xchg
cs
je
iret
lock
mov
aas
sbb
stos
inc
cltd
stc
sub
in
lret
les
push
fwait
test
sbb
pop
cmp
out
jne
shll
cmp
mov
aaa
lds
adc
dec
popa
push
stos
cmp
jbe
jg
push
jp
out
inc
xchg
ja
mov
cmp
jp
fadds
stc
das
ret
loop
shl
sahf
mov
jnp
scas
mov
insb
lock
add
push
movsb
imul
les
jg
rcrl
xchg
sti
dec
es
rcrb
sub
iret
jmp
divb
mov
je
and
mov
sbb
dec
insl
enter
fldl
addr16
cmpsb
sbb
mov
cli
mov
sbb
xlat
jo
mov
mov
adc
mov
and
xchg
xor
and
push
test
or
sub
xchg
add
sbb
push
dec
gs
test
loop
inc
dec
cltd
mov
dec
add
cmp
dec
icebp
jg
pop
lods
out
aaa
sti
fs
ss
shl
mov
scas
repnz
out
and
aaa
pop
fidivs
sub
test
bound
idivb
cmpb
push
lret
fs
xor
lods
repnz
inc
and
adc
or
sub
fimull
pop
add
testb
imul
push
push
sahf
cld
popf
or
mov
sti
or
cmp
xchg
mov
and
xor
jo
push
lock
add
out
xchg
std
xchg
mulps
sbb
syscall
outsl
mull
int3
sbb
cmc
pop
push
pop
push
and
lret
hlt
aas
mov
gs
mov
dec
inc
iret
iret
mov
std
sbb
cmp
iret
dec
mov
jbe
xor
jo
es
pop
daa
rol
mov
mov
xchg
push
mov
cmp
daa
enter
mov
out
sbb
inc
pop
dec
xchg
shll
cmp
mov
cmp
dec
dec
jle
push
mov
scas
or
cmp
and
and
cmp
ds
dec
jns
xor
iret
sub
cmp
pop
mov
daa
insl
pusha
adc
xorb
push
lods
mov
sub
ret
lds
sbb
sub
pop
jl
sub
push
push
mov
mov
inc
in
es
jns
xor
repnz
cmpb
or
jl
bndldx
hlt
je
popf
lds
hlt
rclb
fwait
and
mov
xor
xchg
and
mov
xor
cmp
jae
push
adc
popa
sbb
sti
sbb
cmp
popf
dec
pop
int
pop
mov
push
std
iret
xor
cmp
add
mov
loope
cld
fs
cld
jbe
sbb
int
cmc
sub
pop
rorl
out
dec
or
jnp
ja
xchg
inc
hlt
mov
lret
xchg
es
sbb
add
dec
into
lods
sbb
and
cwtl
js
scas
out
add
int3
out
adc
lds
repnz
cs
sti
pop
cmp
adc
sbb
xchg
jae
jnp
xchg
mov
inc
sub
ljmp
sub
sbb
les
mov
adc
fildll
xorb
dec
dec
por
xchg
pushf
inc
insl
or
cmp
cmpsl
into
xor
sahf
fmull
aad
repz
sbb
mov
enter
frstor
xor
jno
add
cmpsl
repnz
push
dec
push
bound
daa
jmp
or
sti
xor
fs
ss
test
movsb
stc
stc
ret
cmpsb
mov
cmp
loopne
dec
or
xchg
adc
aam
xchg
pop
xchg
test
mov
push
xchg
or
sbb
and
pop
rcll
push
sub
jo
rcrl
xchg
scas
mov
out
add
inc
xchg
call
cltd
dec
pop
lret
hlt
popf
insb
mov
mov
cmpsl
lcall
cli
cmc
imul
mov
in
movb
push
aaa
or
aaa
mov
xor
lds
negl
mov
adc
inc
and
pop
pusha
aaa
lahf
cmp
cmp
pop
aas
lods
sbb
cmp
jo
sub
or
daa
pop
rcll
pop
jo
nop
mov
imul
xor
dec
mov
popa
sub
add
dec
sub
jae
mov
lret
pushf
daa
sarl
mov
sub
xchg
dec
mov
ss
xor
or
sbb
and
scas
inc
cmp
lds
xor
sbb
sub
dec
sbb
and
push
sub
pop
aad
push
xchg
lret
mov
movsl
lcall
ds
lcall
inc
add
add
orl
adc
add
popf
xor
ljmp
push
xchg
sub
mov
adc
mov
into
xor
mov
sbb
add
test
cmp
lea
sbb
mov
stos
mov
shrb
stos
mov
cwtl
int3
push
pop
loop
out
sti
aad
cmp
inc
scas
jl
mov
leave
mov
popa
sbb
jno
push
sub
sti
xchg
adc
adc
rclb
sbb
adc
inc
and
mov
call
lahf
push
xchg
mov
mov
int3
imul
jle
pop
fs
adc
rcrb
pop
pop
cmp
repz
sbb
ljmp
dec
scas
mov
push
xchg
outsl
repnz
pop
cmp
aaa
sbb
mov
cli
or
add
pop
dec
fisubl
pop
lahf
scas
popf
push
call
inc
leave
rorl
mov
cmp
daa
shrb
leave
movsl
sbb
cltd
add
dec
aam
pop
inc
loop
cmp
and
adcl
mov
addr16
aaa
mov
je
cmp
xor
jnp
jbe
cmpsl
jnp
icebp
scas
add
es
adc
adc
fcmovne
daa
andl
and
inc
inc
rcr
fstl
push
add
cmp
fs
bound
out
pop
aad
pop
cltd
fwait
loop
js
mov
gs
cltd
jb
lods
xchg
les
xor
test
daa
out
sub
sbbl
mov
inc
dec
jne
xchg
xor
mov
stc
or
lahf
dec
lcall
insb
aaa
pop
js
dec
icebp
lcall
mov
out
jmp
xor
sti
xor
cmp
rcrl
loope
add
jbe
mov
iret
das
aam
sahf
aam
or
aas
inc
xchg
push
adc
insl
bound
ret
and
and
orb
pop
aaa
out
std
dec
std
inc
mov
mov
mov
daa
pop
mov
pop
ljmp
sub
lock
ds
aad
aaa
popa
aas
mov
or
inc
xor
movsb
fistl
in
sbb
dec
cmpsb
mov
mov
outsb
push
sbb
and
test
sbb
sub
aas
push
pop
add
fldenv
aaa
and
and
and
pop
mov
inc
mov
dec
push
test
push
mov
pop
sub
loop
inc
or
outsb
insl
and
mov
shlb
orb
fcompl
lds
ljmp
mov
sbb
repnz
adc
add
xchg
mov
inc
pop
and
aaa
and
mov
xor
jnp
add
call
lahf
xor
daa
mov
xor
and
inc
add
xlat
mov
outsb
mov
cmp
fsts
sbb
loop
xor
mov
stos
xor
nop
sahf
dec
mov
leave
cmp
fldt
mov
pop
xchg
or
sti
mov
mov
lds
repz
sub
and
das
sub
jo
addl
out
sub
xor
filds
mov
insl
inc
add
xlat
pop
aaa
cli
and
repnz
mov
mov
popa
jp
jns
mov
lahf
shlb
cmpb
ficoml
mov
scas
je
rolb
pushf
int3
jle
ds
fisubl
adc
sbb
lds
imul
imul
lret
mull
jne
cmpsl
aaa
xchg
rclb
or
and
fsubs
push
stos
xchg
addr16
sub
data16
mov
dec
or
pop
loop
insl
add
sbb
daa
daa
fcomi
rcrb
sub
mov
pop
scas
push
nop
iret
ja
push
mov
cmpsl
fs
add
pop
mov
sub
cmp
mov
loop
and
mov
ss
push
xchg
add
xlat
mov
inc
push
jp
or
adc
push
adc
lea
mov
and
out
add
into
mov
das
cmp
frstor
stc
dec
sbb
and
and
inc
pushf
mov
pop
sbbb
dec
jnp
mov
test
ss
fcompl
xor
mov
xor
lods
mov
jg
jmp
jmp
dec
dec
push
je
fisttpll
mov
ljmp
das
sbb
cwtl
sub
in
mov
cmp
sub
add
cmp
or
adc
lahf
sub
aad
inc
xchg
cmp
push
cmc
loop
lcall
adc
xor
stc
cmpsl
scas
leave
dec
loop
or
daa
sbb
dec
xor
xchg
push
dec
inc
push
test
xor
cmp
loope
jmp
test
imulb
pop
xchg
jb
pop
mov
lods
test
lcall
or
sbb
jmp
sub
stos
add
or
adc
pushf
push
shr
push
xor
xor
sub
mov
pop
scas
push
mov
push
adc
xchg
sbb
mov
dec
jg
inc
mulb
or
mov
arpl
dec
cli
cmc
jno
push
cmc
sbbl
mov
fsubl
mov
adc
ret
daa
or
push
pop
jecxz
cmp
lea
sbb
les
gs
in
pop
cmp
sub
mov
orb
out
jbe
add
sub
repz
imul
popa
lret
lods
sti
hlt
cmp
setle
inc
call
xchg
lret
jp
push
push
sbbb
out
cmpsl
es
aaa
pop
pop
repz
and
jne
hlt
test
shl
pop
iret
loopne
push
sbb
mov
mov
in
adc
push
dec
repz
jle
fldcw
adc
jp
push
push
cmp
push
sub
mov
mov
cltd
adc
mov
sbb
inc
sub
cmp
dec
sbb
push
sti
pop
rcl
inc
mov
ret
movsb
mov
dec
xor
scas
movsl
add
mov
popf
mov
int
jne
push
mov
movsl
mov
loope
push
jne
jmp
je
dec
lahf
ss
dec
xchg
movsb
jg
iret
cmp
imul
push
sub
or
and
sbb
push
ljmp
jns
mov
dec
cmp
xchg
mov
insb
push
rorl
pushf
jns
jp
mov
mov
mov
or
sub
pop
pop
gs
int
and
enter
shlb
lahf
inc
push
mov
mov
and
push
xor
sarb
add
add
push
and
out
je
mov
push
xchg
int
xor
sub
mov
sub
sti
inc
ja
adcb
int3
cltd
xchg
shrl
lcall
add
dec
cmp
mov
sbb
cmpsl
mov
clc
addr16
dec
loop
movsl
add
outsl
adc
mov
std
divb
subl
cmpsb
in
lcall
data16
xchg
xchg
gs
sbb
loop
call
in
inc
sbb
adc
popa
mov
cli
cmp
int
jp
clc
sub
push
jno
dec
gs
out
mov
and
es
push
mov
cwtl
and
lahf
jp
push
and
pop
cmp
out
cmp
std
insb
addb
cwtl
loop
out
sbb
adc
mov
push
loop
push
jb
add
cmpsl
orb
loope
nop
and
sbb
add
out
or
pop
fidivl
shlb
test
or
in
and
push
sbb
mov
adc
popf
pop
jp
xor
shll
mov
addr16
push
int3
fildl
aaa
add
mov
fwait
sub
xor
push
sbb
xor
icebp
clc
cltd
ljmp
adc
jbe
hlt
inc
aaa
mov
push
ret
adc
iret
sbbl
daa
jl
jbe
adc
inc
into
mov
add
lahf
scas
sbb
pusha
into
fstpt
push
outsl
mov
push
and
push
jne
in
xor
mov
icebp
inc
mov
jno
xchg
and
test
cmp
pop
and
outsb
sub
ret
xor
in
and
daa
inc
jnp
and
sub
loope
fstpl
and
fsubl
mov
push
mov
mov
and
test
lahf
or
xor
je
out
stc
sub
fcompl
mov
in
outsl
bound
divb
jb
pop
pop
push
push
int
aam
loop
xchg
sbb
js
and
mov
xchg
mov
pop
in
pop
and
hlt
xchg
fdivl
push
in
xchg
cld
jecxz
mov
push
or
pop
xchg
sbbl
call
aam
das
cltd
sub
push
push
pop
add
jne
pop
add
xor
cmp
sub
inc
clc
xor
mov
mov
in
xor
dec
arpl
and
subb
movsl
fldl
jecxz
pop
out
sbb
sub
jno
mov
psrlw
clc
pop
sbb
loope
inc
flds
jns
sub
nop
and
push
je
inc
fcoms
sbb
mov
add
lcall
push
mov
sbb
mov
sbb
xchg
push
fsubl
in
xor
xor
subl
xor
xor
nop
loope
jno
iret
loop
xchg
cmp
inc
pop
push
loop
popf
imul
imul
lods
sti
outsl
les
cwtl
pop
pop
sbb
xor
sub
jp
dec
xor
mov
and
push
cmp
dec
xor
popa
push
xor
sbb
push
test
xchg
mov
mov
inc
aam
loop
mov
sub
jmp
popa
orb
jecxz
lret
mov
add
in
sahf
push
aam
cltd
adc
clc
push
cmp
jmp
push
xchg
inc
hlt
mov
mov
push
cs
jg
loop
pop
push
xchg
es
and
jmp
repnz
popa
daa
test
mov
push
lea
mov
jmp
xchg
or
jmp
xlat
loope
inc
sub
dec
mov
xor
adcl
shll
loop
roll
fimull
jne
in
mov
mov
subl
jmp
xor
mov
pop
add
cli
das
loope
insl
aam
cmp
imul
or
cmp
popa
popf
push
pop
xbegin
repz
mov
jo
sbb
cld
jne
test
sti
mov
jbe
iret
int3
lods
sbb
xor
mov
loope
mov
aaa
aaa
rcpps
or
stos
test
test
ret
movl
jbe
cmp
mov
xor
mov
rol
cmp
xchg
pop
ja
aam
shlb
jo
and
jns
cmp
mov
test
addl
or
nop
xchg
mov
jno
xchg
call
dec
sbb
add
divl
lret
clc
outsl
and
rcll
test
pusha
xor
sbb
call
mov
cmp
mov
mov
mov
pop
or
adc
scas
push
cmp
arpl
mov
jo
pop
and
mov
test
pop
mov
sbb
sbb
sub
xor
cmp
inc
gs
mov
pop
sbb
push
jge
xor
paddsb
and
jbe
mov
or
ds
repnz
add
stos
aad
lahf
jo
je
sbb
adc
push
iret
outsb
or
and
add
push
xor
xor
and
cmp
movsb
rol
mov
test
mov
push
inc
arpl
dec
xchg
and
pop
push
test
aaa
lods
jno
clc
and
sub
cmp
inc
jge
push
add
xchg
shl
test
push
adc
cmp
out
jecxz
mov
xchg
ret
cmp
jg
loope
dec
push
popa
shll
xchg
movsl
cmp
ss
inc
rcrb
or
pop
fwait
int
mov
mov
xchg
or
add
sbb
lods
pop
cwtl
xchg
aam
call
and
cmpsb
sub
stos
das
movl
popa
fwait
push
and
insb
incb
bound
lret
ret
cmp
test
xchg
out
lcall
in
sub
or
or
inc
testl
sbb
sub
add
push
ret
mov
push
ljmp
enter
sbb
aas
inc
xchg
iret
sub
push
movsl
pop
xor
adc
cmc
bound
xchg
rcll
and
mov
sbb
lret
rclb
jmp
cmpsb
or
and
testb
mov
sbb
pop
push
lock
xor
aaa
sub
cwtl
cmp
xor
out
inc
inc
sahf
mov
or
and
push
cs
pop
sub
mov
pop
or
adc
ret
repnz
out
fs
pop
mov
cld
sub
movsb
lods
mov
loopne
and
xor
aaa
push
orl
outsl
pushf
sti
xor
iret
push
xor
sti
or
shlb
pop
xor
das
sbb
mov
call
movsb
adc
mov
xorl
or
push
test
mov
sub
inc
lods
push
iret
push
mov
jp
and
pop
rclb
jp
loop
push
dec
vdivsd
mov
mov
dec
cs
pop
cmp
insl
xchg
or
push
orb
clc
mov
repz
call
test
lcall
shr
iret
mov
imul
aad
add
movsb
add
cmp
push
pushf
cli
dec
jg
lcall
loop
fiaddl
mov
and
gs
xchg
pop
mov
sub
or
jno
or
mov
xchg
bound
sub
pop
and
or
jns
pop
pop
mov
and
or
lods
cwtl
inc
setle
xor
jmp
mov
add
sbb
xchg
stc
pop
pop
stc
in
and
std
insl
jmp
lcall
sbb
insl
pushf
out
cld
cmp
jbe
push
inc
and
and
pop
sbb
bound
sub
nop
std
movsb
nop
sbb
cwtl
imul
cmp
and
enter
sbb
sti
cmp
clc
pop
movsl
nop
pop
das
pop
fs
cmp
pop
nop
arpl
add
pop
sbb
add
xchg
jmp
outsl
push
pushf
sbbb
push
mov
xor
stc
sub
es
jb
push
call
ret
xor
mov
and
add
mov
les
ret
repz
imul
cmpsb
mov
test
add
das
mov
fnsave
xor
push
push
push
scas
pop
aaa
out
mov
jp
mov
xorb
jp
push
pop
shl
and
je
or
imul
adc
scas
xorb
stos
xor
mov
ror
cwtl
or
jns
cmp
bound
and
push
jp
push
fs
cld
jbe
iret
aam
test
pushf
fwait
push
into
cmpsb
cs
stos
popa
inc
xor
out
xchg
add
loop
insl
scas
adcl
xorl
pop
loopne
andb
fstps
push
notl
xor
jb
mov
cltd
add
imul
das
and
push
iret
xor
sbb
rcl
incb
xchg
insl
sar
ret
insb
pushf
sbb
mov
or
and
jle
cwtl
jl
daa
sub
inc
xor
push
flds
or
sbb
es
adc
ss
dec
mov
loop
jp
adc
push
jp
pop
or
jb
xchg
les
push
loop
into
or
or
push
pop
std
sbb
xor
es
pop
or
mov
popf
ret
subl
leave
xor
mov
sub
inc
adc
popf
aad
popf
adcl
mov
and
pop
add
add
aad
popf
xor
popf
mov
mov
filds
or
xor
add
sbb
hlt
cltd
lret
icebp
push
sbb
cmpsl
sub
and
in
push
xorb
sub
pop
mov
arpl
imul
adc
das
nop
ret
lcall
inc
push
pop
jmp
cmp
mov
into
sbbl
nopl
outsl
mov
lahf
addr16
loop
cwtl
mov
cmp
das
lcall
pop
aas
mov
movups
test
pop
xchg
push
push
out
mov
das
jo
pop
out
dec
out
mov
cmp
mov
das
jle
mov
ja
add
xchg
adc
sbb
push
mov
or
sbb
cmp
or
leave
lret
cmp
fcoms
repz
or
gs
cmp
scas
imul
roll
push
dec
push
out
sbb
pop
lock
mov
popf
test
cmc
mov
cmp
lods
dec
jnp
push
sbb
jns
sbb
dec
xchg
or
xor
jae
insl
int
aam
addr16
sbbl
cmp
xchg
mov
cmp
xor
sbb
lea
decb
xor
mov
add
sbb
lods
or
cmp
popf
cmp
jb
xchg
sbb
and
cld
xor
mov
and
jmp
xchg
orl
pop
outsl
adc
push
pushf
test
rolb
sbb
shrb
jmp
cli
xchg
popa
fs
and
jmp
icebp
cltd
sub
dec
cltd
loop
dec
or
roll
or
push
into
dec
push
inc
scas
test
into
push
out
and
pop
mov
icebp
out
xchg
xor
inc
adc
mov
sbb
hlt
aas
mov
and
push
pop
sub
std
xlat
jecxz
bound
icebp
loope
mov
sub
stc
les
mov
or
std
imul
movsl
jg
and
roll
rcr
cltd
mov
inc
popf
loope
mov
lahf
and
sub
cli
or
in
dec
cltd
sbb
test
and
insl
mov
outsb
push
inc
mov
or
push
pop
aaa
dec
pop
orl
aaa
dec
test
movsl
test
cmp
or
sti
jne
lret
or
sub
adc
mov
and
mov
sbb
push
ficomps
sbb
sub
jb
and
add
lret
or
ret
mov
mov
int3
xor
pop
push
adc
push
sbb
and
sub
cmp
push
push
sub
cld
mov
push
mov
es
mov
in
aam
and
mov
push
xor
les
xor
scas
xor
xchg
je
inc
mov
aas
cmp
mov
sub
out
xor
sti
push
out
cmpl
add
push
adc
xchg
hlt
movsl
mov
mov
pop
pop
cmp
jge
mov
xchg
jns
inc
loope
sbbl
cmp
and
sti
call
dec
das
mov
xor
in
sub
sbb
rcll
mov
push
inc
inc
cmp
outsl
inc
mov
iret
in
fcompl
pop
andl
mov
push
fnstsw
mov
aad
pop
dec
pop
int
pop
lea
cmp
cmpsl
cs
cmp
inc
ja
jno
sub
loop
adc
lods
mov
dec
mov
cmp
inc
jb
test
mov
push
sarl
loope
xor
push
dec
mov
xchg
cmp
adc
lea
cli
repnz
and
mov
shl
and
mov
mov
jg
jge
sbb
cmp
inc
xor
pushl
adc
sub
push
stos
push
xchg
mov
add
in
mov
mov
loop
push
mov
int
jnp
and
push
lods
sbb
test
cwtl
imull
fs
ret
adc
jg
and
mov
and
inc
mov
negl
popa
push
jno
int
sbb
cltd
or
push
popa
sti
jnp
loopw
fcmovnb
inc
xorb
das
mov
lds
fs
sub
and
ja
or
iret
mov
cmp
repz
inc
xor
mov
dec
mov
popf
loop
mov
jns
sub
arpl
or
inc
sbb
sbb
aaa
lcall
xchg
xor
popf
lret
pop
inc
pop
stc
outsl
loop
mov
xchg
push
test
loop
xor
push
xchg
andb
mov
out
popf
mov
std
pop
ja
imul
jns
adc
mov
pop
mov
add
add
fwait
push
sti
test
je
cwtl
or
testl
mov
mov
mov
jb
das
or
fists
call
sbb
add
inc
mov
ja
dec
int
cmp
mov
add
fisubs
mov
and
adc
mov
repnz
mov
sub
sarl
mov
fs
hlt
pop
mov
sub
xchg
sub
sub
mov
push
test
cmp
pop
rcr
push
mov
inc
lds
addr16
je
outsl
rorb
pop
mov
and
mov
jno
mov
mov
push
lcall
daa
test
test
rcrb
xchg
inc
push
inc
loope
aaa
jecxz
jno
das
and
aaa
pop
sbb
sbb
cmp
aas
loop
sub
pop
fidivl
pop
stos
jne
pop
xchg
jne
pop
jp
push
pop
push
jne
pop
sbb
lcall
orb
sub
sti
sbb
mov
sub
and
cs
adc
xlat
rolb
pop
dec
or
nop
iret
pop
mov
mov
dec
je
push
sub
stos
shll
sbb
aas
mov
sbbb
xchg
mov
inc
adc
shl
rclb
xor
inc
ret
add
repnz
and
outsl
andl
push
push
push
mov
iret
mov
jl
das
addb
jb
pop
sti
das
xchg
xchg
cs
repz
cmp
push
xor
jbe
xchg
xchg
call
push
popa
ds
xchg
cmc
mov
xor
dec
dec
push
or
push
and
std
sub
sbb
xchg
cmp
es
mov
push
cmp
mov
mulb
and
jns
mov
xor
and
imul
adc
and
pop
jbe
lcall
std
test
mov
andb
sub
lahf
inc
lods
inc
push
add
cltd
dec
and
or
push
push
shll
in
leave
addb
mov
lods
nop
test
and
mov
aam
leave
sub
jp
in
push
dec
or
loope
push
pop
pop
mov
loop
std
cmp
sub
adcb
inc
sbb
pop
or
xor
cmpsl
clc
add
cmp
inc
pop
roll
fs
xchg
loop
add
repz
inc
inc
or
lret
jo
int3
int
mov
daa
stos
push
adc
push
xchg
mov
cwtl
or
pop
aas
orb
jnp
dec
mov
stc
push
mov
dec
inc
mov
ret
cmp
loope
xchg
mov
dec
xchg
pop
pop
push
cmp
sti
xchg
outsb
pop
shlb
cltd
orl
mov
push
push
sbbl
pop
in
pop
mov
xchg
xchg
daa
jnp
and
xor
sub
scas
movzbl
scas
cmp
cwtl
mov
pop
and
push
out
int
subb
fmuls
mov
pusha
adc
push
cmpsl
xchg
cmp
push
sbb
sbb
xchg
iret
or
lret
xchg
ret
xchg
or
pop
lret
aad
int3
mov
mov
sbb
stc
xchg
mov
sar
icebp
inc
rorl
or
ljmp
push
mov
outsb
nop
sub
std
fwait
lahf
fwait
in
das
xor
test
mov
or
cmp
pop
xor
adc
push
push
pop
xchg
sbb
dec
notl
dec
pop
seto
adc
lret
xchg
mov
sahf
fistps
jl
nop
lods
bound
jg
dec
cli
jns
mov
sbb
testb
cmp
lds
adc
xor
int3
cmp
push
aas
lds
test
stos
int
aaa
lods
leave
out
adc
repnz
cs
mov
fstl
pop
jb
sbb
cmp
xor
sub
shl
imul
shll
pop
icebp
mov
insb
xor
mov
jge
and
xor
lock
icebp
inc
xchg
mov
xchg
mov
test
imul
in
sbbl
in
fisttpl
fistpl
sub
cmpsb
cmpl
push
rcrl
push
insl
jne
lds
push
and
sub
adc
shr
pop
push
lds
mov
xor
rcrl
std
stc
inc
cmp
cmp
mov
gs
data16
sti
ret
mov
iret
fisubrs
mov
or
push
cwtl
jne
popa
dec
imul
sbb
arpl
xchg
stos
sub
imul
xor
xor
inc
sbb
hlt
mov
and
cmp
ficoms
add
cs
popa
xchg
imul
adc
mov
jo
mov
test
sbb
outsl
shl
cltd
movsl
add
push
sub
inc
mov
xchg
or
mov
lds
cmp
jmp
in
in
cld
bswap
lea
aad
jb
imul
aas
popa
int
stc
mov
sub
stos
loop
rcrl
aas
fsubrl
das
popf
cmp
test
aas
rorb
out
sub
adcl
push
sub
stos
mov
mov
lret
cmpsl
in
loopne
mov
xor
lret
gs
sarl
lods
mov
outsb
or
pop
add
stos
xchg
imul
lods
loop
pop
push
cmpsb
outsb
cwtl
mov
cmc
rcl
inc
subl
lds
cld
cltd
cmc
in
out
je
lret
xor
jmp
push
icebp
bound
sub
push
stc
lods
dec
or
inc
insb
aaa
xchg
icebp
out
imul
sub
or
cmc
push
pop
sub
sbb
roll
icebp
sub
shl
mov
outsb
mov
leave
movsb
add
stos
and
lahf
jl
loopne
mov
xor
pop
xchg
pop
aas
dec
cmp
jns
repz
adc
or
clc
fwait
add
xor
and
daa
xlat
pop
mov
stos
cmp
pop
insl
xor
push
scas
loopne
push
data16
loope
pop
cltd
or
lahf
pop
popa
or
jnp
cltd
imul
outsb
cli
jae
cmpb
sbb
cmp
jb
lahf
add
hlt
xchg
push
xchg
mov
xchg
es
pop
inc
mov
mov
pushf
bound
jnp
sbb
lret
mov
pop
mov
jecxz
dec
xchg
xchg
jp
pop
adc
mov
sti
stos
lock
jo
mov
pop
mov
xor
jecxz
lret
pop
sbb
into
ret
orb
add
sub
and
sbb
repnz
outsl
stc
xor
cmp
fstl
incb
add
adc
inc
push
inc
mov
ss
push
fildll
leave
push
imul
xchg
mov
xchg
mov
jg
pop
add
aam
hlt
and
xorl
sbb
loop
push
push
push
sbb
out
daa
mov
xchg
or
fwait
std
push
popw
mov
pop
sub
test
inc
pop
cmp
mov
add
stos
stos
fisubrs
cmp
jo
xchg
push
push
mov
pop
mov
out
sbb
pop
mov
movsl
mov
mov
stos
cmpb
pushf
push
xor
mov
mov
inc
xor
call
and
pop
lds
cli
sub
and
push
arpl
adc
sbb
clc
xlat
dec
int
in
jbe
sbb
mov
adc
jge
mov
pop
and
cltd
lcall
push
and
cli
incb
stos
mov
fidivl
repz
cmp
mov
outsl
mov
daa
in
xchg
mov
mov
pop
cmp
push
mov
jmp
xchg
mov
loope
mov
push
ss
nop
mov
sbb
imul
stos
and
xchg
fsubs
aaa
imul
sub
jl
and
sbb
push
pusha
cwtl
movsl
push
lcall
sbb
daa
mov
jl
enter
cmp
pandn
ljmp
popa
icebp
sbb
mov
cmp
sub
inc
loope
sub
mov
jns
push
fisttpl
incb
fimull
test
sub
incl
xchg
xor
pop
adc
and
mov
sub
mov
xchg
pop
rcr
jb
addr16
loope
ljmp
lods
cmc
cmpsb
sub
orl
push
loop
rorl
add
sub
dec
iret
lret
xor
bound
jb
nop
or
das
adc
push
and
sub
sysexit
mov
imul
push
stos
out
and
or
sbb
sbb
das
sub
and
sub
or
dec
jmp
cmpsb
sbb
pop
jg
jge
pushf
cmp
in
and
jle
jnp
cmp
xor
xchg
add
push
aas
mov
iret
leave
ja
jecxz
mov
loop
out
push
mov
jno
iret
push
pop
jg
and
clc
imul
or
mov
gs
lret
mov
loop
andl
pop
arpl
push
mov
repz
or
cmp
lret
loope
xor
in
pop
jo
mov
sbb
pop
pop
out
push
jmp
call
nop
mov
xor
jno
pop
xchg
mov
add
shll
jmp
xor
out
fimuls
push
pop
adc
dec
jae
lods
pop
xchg
sbb
test
pop
fldl
sub
lcall
iret
outsl
test
mov
sub
addb
cmp
jp
clc
aad
lds
mov
xchg
mov
or
arpl
sbb
xorl
and
stc
inc
mov
lock
es
push
mov
daa
sbb
xor
fiadds
adc
xchg
xchg
outsl
xchg
adc
or
das
imul
pop
fwait
lcall
shll
lods
sahf
fwait
lods
mul
push
mov
popw
dec
js
mov
rorb
cmp
xchg
cmp
mov
pop
jg
inc
imul
js
inc
in
xchg
push
dec
push
sub
lods
cmp
cltd
sub
add
cmp
cmp
adc
loop
adc
sti
adc
loop
in
xchg
mov
lods
inc
and
inc
cmp
sbb
mov
push
sbb
fldl
outsl
jg
dec
stc
gs
mov
movsb
sbb
cmp
push
or
xchg
movsl
les
mov
sbb
mov
fbstp
push
stos
stos
and
xchg
jecxz
cmp
pop
cmp
jle
aas
cmp
int3
jo
mov
add
in
loopne
and
call
ja
lcall
call
mov
pop
lea
sub
and
js
cs
sbb
leave
daa
and
xor
rep
inc
adc
ja
push
push
jae
adc
cmp
cltd
sub
xor
arpl
sbb
arpl
cmpl
cltd
scas
iret
pop
sub
sub
dec
push
mov
loopne
es
mov
sub
int
pop
lock
sub
hlt
aas
cmp
std
add
lds
sbbl
or
aas
sbb
jb
lds
stc
pop
mov
inc
rcl
mov
xchg
das
in
jbe
aam
pop
sbb
xchg
test
hlt
fwait
sub
icebp
jno
and
pop
add
clc
popa
pop
pop
movsl
sub
gs
mov
adc
stos
and
decb
xor
sbb
mov
pop
sbb
mov
lods
mov
andb
mov
mov
adc
pop
arpl
lods
into
imul
or
sahf
cmpsl
into
fwait
movsl
sbb
cli
cmp
aas
pop
add
subb
cmpsb
imul
mov
pop
ret
sub
jns
mov
mov
sbb
pop
bound
push
stos
loope
pop
sub
adcl
stc
cmp
mov
cld
jg
imul
gs
arpl
ret
add
sti
gs
movl
in
xor
xor
and
or
add
mov
xor
push
sahf
pop
sti
aaa
cmp
fnstcw
mov
in
xor
out
mov
lcall
stos
sub
xor
xchg
mov
call
jg
sti
daa
aam
popf
jmp
push
mov
sbb
imul
jecxz
jo
xlat
dec
and
pop
dec
xchg
mov
setns
xor
pop
call
in
jnp
das
subb
pushf
or
aad
das
es
lds
cld
sbb
xor
fnstcw
cmp
jmp
add
cmp
push
cmp
scas
iret
xchg
jne
adc
lock
loop
mov
xchg
movsl
outsl
or
mov
sti
add
js
test
mov
xchg
or
incl
stc
sbb
in
jl
cmovnp
mov
push
lds
ret
push
lret
pop
pop
in
rcll
jg
popf
and
sbb
fxtract
push
pusha
pusha
ret
loop
dec
push
push
icebp
and
cmpsl
xor
lret
shll
xchg
aas
imul
sti
mov
push
fdivs
xor
sub
and
adc
jmp
je
icebp
rclb
js
stos
cltd
cmp
loop
inc
sbb
nop
das
popf
in
and
xchg
sbb
or
or
and
jmp
inc
ret
jmp
call
aaa
int3
mov
mov
loop
pop
xor
outsb
pop
les
xchg
jp
stos
cmp
inc
icebp
sti
fcmovbe
imul
xor
inc
xor
push
jg
in
sub
into
ret
sbb
sbb
shrl
call
pop
xchg
sub
aaa
adc
push
pop
lret
xor
dec
adc
sbb
int3
fidivl
push
xor
aad
leave
call
mov
sub
pop
mull
mov
popa
cltd
sbb
stos
sub
push
add
das
cmpsl
adc
pop
out
out
sbb
sti
mov
push
xor
iret
pop
stos
divb
pop
mov
jbe
push
mov
test
jno
popf
xor
cmpsl
sbb
mov
sub
sbb
or
bound
lret
lahf
std
adcl
inc
mov
mov
dec
cmp
inc
pop
push
lea
negl
or
mov
jg
jne
shrb
push
inc
lcall
xchg
imul
ljmp
orb
fadds
sbb
out
idivl
decb
and
mov
inc
imul
sbb
cmp
repnz
adc
test
push
dec
or
bound
jmp
jno
ljmp
push
mov
loop
leave
cmp
sub
xchg
jp
mov
icebp
add
lcall
mov
mov
adc
cmp
xchg
callw
push
jb
movsl
fcompl
cli
mov
pop
and
jnp
out
and
dec
call
xchg
inc
dec
cmp
cli
push
jg
mov
and
scas
out
cmp
fldt
cltd
fbstp
cmp
sti
cmpsl
loop
mov
push
iret
and
fisttps
or
fisubs
mov
sub
les
mov
and
push
jb
scas
adc
arpl
lahf
sub
mov
cmp
cld
into
adc
jo
inc
pop
adc
sub
fimull
xchg
mov
xor
lds
shlb
rcrl
jge
cmp
sub
and
add
je
int3
mov
xor
movb
xchg
pop
adc
fs
jno
and
jecxz
or
shlb
rclb
add
push
ret
lahf
inc
jbe
loopne
cmp
adc
or
fs
or
push
rolb
lea
pushf
sbb
cmp
ja
lds
les
dec
addr16
aam
or
lcall
stc
mov
or
loopne
cmp
pop
outsb
jmp
pop
mov
xor
out
jecxz
shll
and
icebp
ret
mov
dec
bnd
stos
pushf
jl
test
adc
xchg
adc
js
adc
into
insb
sbb
fs
movsl
aas
ret
icebp
push
aaa
push
inc
cmpsb
mov
sub
push
mov
ss
pushf
repnz
andb
push
xchg
cmp
fmuls
daa
inc
pop
fwait
sub
imul
loop
pop
cld
fstps
std
pop
or
shrl
push
xchg
loope
inc
dec
call
dec
out
mov
sbb
sub
pushf
jns
xchg
hlt
cld
outsl
push
push
push
jae
and
movsb
mov
enter
icebp
push
cmp
ja
call
jae
jmp
lret
lods
xlat
xchg
das
sbb
cmpsl
test
or
and
out
sub
xchg
and
lret
and
fwait
adc
jno
mov
pop
imul
mov
cld
sub
push
fidivl
mov
add
int3
cmp
adc
xchg
lret
leave
jnp
sbb
push
jno
fidivs
ja
loop
and
add
xchg
xor
and
mov
and
mov
pop
or
adc
push
xchg
loope
shll
repnz
sub
jno
mov
or
push
addb
fsts
or
in
add
ret
and
and
mov
mov
push
and
inc
sub
mov
arpl
faddl
scas
push
mov
lahf
pop
jle
pushf
or
in
cmp
clc
dec
jb
mov
lahf
bound
popf
cmp
and
push
dec
jl
ret
std
ror
xchg
mov
mov
adc
push
jno
xor
xchg
fsts
rcll
push
and
xor
sbb
jae
fistl
xor
movsl
push
xchg
mov
imul
rclb
push
mov
add
ds
rolb
ljmp
daa
mov
jno
popl
imul
xorl
mov
push
popf
in
fwait
and
inc
xor
aam
xor
inc
push
or
cmp
add
rorb
jp
loop
fs
sbb
pcmpeqb
mov
shlb
andl
push
push
fwait
cmc
loopne
push
ds
jno
pop
sub
sub
xor
mov
push
andl
add
int3
cmpsl
push
adc
in
dec
mov
lret
or
sbb
mov
stc
xor
sbb
aam
test
out
test
out
xor
push
mov
stos
sarl
bound
add
scas
jp
xor
push
loope
and
lods
xor
loop
jo
add
adc
sub
repnz
adc
xchg
add
je
and
cmp
shl
cmp
dec
insl
xor
dec
aad
roll
pop
test
cwtl
inc
fcompl
inc
xchg
sbb
xlat
sbb
test
popa
xor
into
sbb
mov
stc
arpl
dec
xchg
mov
sub
cmpb
or
add
adc
push
insl
notl
xchg
sbb
xchg
adc
pop
adc
lea
push
imul
in
xchg
icebp
cmp
push
push
dec
loop
xchg
inc
imull
push
leave
dec
mov
jge
fisubrs
icebp
roll
jb
sub
or
fwait
push
cltd
or
jae
mov
adc
adc
dec
call
addr16
xchg
in
stc
or
and
neg
adc
insb
xor
xchg
cmp
sbb
daa
ljmp
aas
jp
mov
sbb
movsl
mov
and
imul
jno
push
stos
imul
outsb
imul
cs
xchg
lret
xor
ljmp
ret
sub
xchg
push
insl
cmp
inc
and
icebp
clc
shr
push
mov
sub
cltd
mov
and
icebp
push
scas
aas
nop
lret
xorl
sub
push
add
shll
loope
push
addb
cs
dec
mov
imul
sbb
mov
inc
clc
inc
xchg
shrb
push
mov
sarb
push
mov
icebp
adcb
aad
das
jno
push
pop
push
arpl
xchg
inc
rclb
lock
sbb
push
hlt
add
push
push
adc
fisubrs
jne
pop
jno
xor
dec
imul
pushf
rcll
inc
ljmp
push
jbe
inc
sub
lcall
mov
aas
loope
imull
and
push
ja
inc
inc
cld
hlt
and
and
lock
pop
sub
jecxz
ret
int
daa
cmp
mov
xchg
popa
xchg
jge
fsubl
cmp
mov
push
and
mov
lcall
push
push
cmp
lret
inc
dec
scas
xor
and
add
add
xchg
jns
sbbl
cltd
icebp
push
sub
sbb
inc
xor
jae
push
fisubl
sbb
inc
jle
sub
lret
cmp
and
adc
push
cltd
xor
sbb
stc
popa
rcrl
xchg
frstor
stc
cltd
shll
xchg
movsl
and
sub
xor
mov
sbb
sbb
arpl
pop
xor
sarl
lcall
mov
sub
inc
lcall
push
mov
pop
sbb
push
test
repz
jno
or
sub
mov
sbb
popa
cmc
lret
inc
cs
repnz
dec
mov
sbb
dec
pop
xchg
lock
cs
xor
out
cs
icebp
or
xor
and
mov
and
lcall
jle
sub
sub
xor
ret
adcl
push
and
mov
and
sbb
test
and
xorl
and
mov
xchg
or
jns
popf
push
mov
and
jb
cmpl
mov
sub
and
xchg
shll
add
lods
stos
pop
xchg
cli
loop
sbb
xchg
movsl
cwtl
mov
xor
movsl
pop
arpl
in
mov
xchg
xor
lret
lahf
add
and
xor
pop
sbbb
in
pop
lret
loope
jp
mov
mov
and
xchg
int3
sub
pop
jle
int
jmp
aad
pop
and
sbb
sbb
pop
loope
bound
scas
daa
int
jb
push
push
add
outsb
and
loope
push
xor
sub
push
in
aas
push
adc
setne
push
lods
ret
sub
cli
xchg
add
shll
rcr
add
mov
add
cmp
fistps
je
jge
gs
adc
push
cmp
jp
pop
faddl
mov
sub
push
fdivrl
pop
test
sub
mov
ret
into
out
cmp
xor
mov
sar
dec
inc
pop
dec
xor
pop
push
out
dec
mov
fidivl
lods
ret
mov
out
cltd
fsts
pop
jmp
sti
sbb
repnz
mov
js
and
es
arpl
adc
mov
repz
xchg
cltd
xor
push
sarl
add
popa
lds
jmp
xchg
mov
je
loop,pt
xor
hlt
out
movsl
pop
cmpl
cmp
outsl
popf
mov
je
add
sbb
outsl
aas
xchg
dec
inc
test
sub
sbbl
imul
xor
xor
push
inc
int
xor
outsl
pop
adc
daa
cs
mov
xchg
inc
fstl
xor
lods
jp
jno
xchg
add
popa
sbb
sub
xchg
adc
ljmp
sahf
out
xor
popa
adc
push
aam
dec
and
loop
movsb
jp
push
mov
xor
xor
shrl
push
jp
fistpl
scas
and
sbb
push
aad
push
addb
sbbl
rorl
and
cmpsl
push
leave
adc
lods
push
jle
int
dec
push
xor
xchg
insl
jbe
aaa
sub
aas
push
adc
loopne
add
pop
jno
mov
bound
sbb
adc
aaa
push
and
fwait
pop
push
jl
lret
xor
mov
adc
dec
or
jb
mov
in
pop
cltd
mov
daa
jg
cmp
outsl
arpl
push
imul
mov
adc
pop
cmpsl
inc
movsl
push
xchg
aaa
and
push
ret
loop
shld
mov
ljmp
xor
xor
and
mov
inc
loop
push
xor
adc
pop
daa
shll
mov
xchg
orl
mov
push
xor
push
insl
xchg
pop
cmc
xchg
add
sar
lea
dec
pop
mov
dec
or
xchg
push
xor
dec
and
cli
fcompl
lcall
adc
cmp
js
sub
dec
cmp
adc
test
mov
dec
daa
jbe
fmul
inc
dec
adc
dec
push
sahf
popa
mov
shll
roll
sub
push
dec
in
jb
mov
push
insb
and
xchg
imul
jge
cs
lahf
adc
mov
rcr
fisubl
fisubs
in
pop
enter
aas
sbb
cld
dec
stc
adc
jp
loop
pusha
pop
xor
and
mov
mov
or
mov
or
and
xor
movsl
cmp
addb
inc
jecxz
adc
dec
xor
shll
dec
push
and
mov
push
jb
in
push
xchg
popa
xchg
push
lea
mov
push
dec
sbb
loop
cmp
xchg
add
mov
and
mov
pop
push
pop
or
inc
dec
bound
cwtl
xor
xor
and
es
shll
jp
jb
inc
xor
rol
mov
xchg
fadds
jp
fwait
add
lcall
mov
jmp
jecxz
and
pop
xor
mov
mov
dec
cmp
push
aas
adc
inc
sbb
jp
push
adc
shll
xchg
xor
adcb
inc
jbe
rcrl
sar
and
shrl
push
rcrb
push
mov
mov
fnstenv
mov
push
xor
dec
or
ja
inc
and
xor
repnz
sbb
out
add
jae
xchg
adcb
inc
aam
pop
or
inc
push
or
fwait
mov
sub
sbbl
jl
push
lcallw
sti
and
and
fstpl
inc
aam
xchg
popa
xor
adcl
inc
mov
scas
xor
loop
pop
loope
sub
loop
sub
fbld
push
xchg
adc
xchg
pop
add
mov
push
scas
pop
jge
mov
push
add
xchg
outsb
jbe
xor
and
daa
mov
and
cmp
cmp
icebp
sbb
pop
hlt
inc
mov
mov
imul
mov
xchg
push
xchg
loope
sbb
add
xchg
daa
dec
imul
addb
and
push
in
mov
iret
push
push
sub
and
dec
cltd
sbb
inc
xchg
and
push
xchg
or
push
adcl
daa
mov
mov
jae
or
xor
xchg
push
push
sbb
lret
stos
and
cmp
daa
push
mov
xor
inc
stos
and
push
adc
and
mov
cltd
or
adc
xor
xor
dec
pop
je
inc
daa
mov
scas
lret
add
xor
inc
js
lret
add
mov
push
icebp
js
lret
add
mov
xchg
mov
icebp
je
inc
daa
xor
inc
je
inc
daa
mov
xchg
int3
or
lcall
fldt
pop
test
lock
in
pop
jb
push
inc
pop
add
push
add
addr16
adc
cltd
test
and
je
mov
xchg
adc
mov
add
je
xor
out
dec
push
lret
jb
imul
loope
xchg
push
pop
xor
push
shlb
pop
push
dec
sbb
pop
inc
dec
rcrl
xchg
icebp
popa
cmp
mov
or
in
mov
and
cwtl
sbb
xchg
sbb
jne
imul
sarl
es
and
stos
fsubrl
mov
xor
xchg
daa
out
and
push
shlb
sub
pop
out
enter
out
fadds
adc
cmp
aaa
mov
add
es
adcb
xor
insb
test
arpl
daa
aaa
xchg
xor
ret
push
bound
pop
pop
jae
add
daa
jae
aas
adc
pop
adc
adc
push
xor
pop
in
aaa
aas
xchg
and
lods
and
inc
push
shll
insl
sub
and
cmp
cmp
xor
xor
ret
les
outsb
dec
xor
popa
cltd
xchg
xor
jns
dec
and
adc
add
dec
push
add
xchg
daa
cmp
and
push
push
rorb
cmovg
xchg
xchg
push
clc
and
mov
daa
cltd
ljmp
and
xchg
daa
pop
inc
mov
push
or
lret
xchg
daa
pop
and
xchg
daa
jge
int
xchg
dec
jne
xor
mulps
sti
and
mov
and
mov
xchg
cltd
add
add
pop
mov
stc
mov
int3
imul
pop
icebp
and
sbb
hlt
aas
pop
addb
xchg
aas
xor
or
rclb
add
insl
pop
and
pop
inc
mov
in
xor
xor
push
xlat
or
mov
gs
roll
push
xacquire
xchg
pop
mov
mov
sub
mov
push
adc
adc
fisttpll
xchg
push
pop
xchg
call
push
push
popf
in
adc
push
icebp
push
cli
les
push
out
xor
andb
movsb
sbb
outsb
daa
loope
imul
das
es
outsl
loop
sahf
repnz
and
cmpsb
jno
adcl
adc
xchg
icebp
sbb
das
adc
or
mov
xor
cmpsl
xchg
aad
clc
or
add
push
push
push
inc
xor
adc
xor
sub
add
ljmp
mov
xor
jno
shll
fwait
bound
repz
pop
outsl
add
mov
adc
pop
daa
movsl
push
adc
push
push
repz
mov
push
in
ror
xchg
orl
adc
loop
loopne
add
mov
imul
sub
sbb
iret
sub
add
inc
adc
xor
mov
cmp
sbb
xor
fs
decb
add
push
push
dec
cmp
repz
in
shl
jnp
aas
stc
negl
push
inc
xor
jno
dec
lea
test
mov
movsl
push
movsb
ret
mov
push
adc
xor
sbb
xor
sbb
dec
popa
xor
push
mov
ss
fwait
sub
push
inc
arpl
lds
sbbl
push
int
mov
xor
bound
mov
fdivrl
adc
fsubrl
cmpsb
push
popa
loope
push
cmp
ret
push
cltd
decl
mov
push
push
mov
inc
push
icebp
xor
inc
push
dec
dec
xor
and
test
lahf
xor
and
xor
out
and
cmpsl
rcrl
mov
xor
popa
xchg
cmp
push
icebp
and
and
xor
inc
xchg
mov
push
push
xor
mov
sbb
add
arpl
in
cmp
lcall
or
and
sub
sar
scas
daa
adc
aas
xchg
mov
xor
xor
enter
push
and
rclb
sub
rclb
adcb
aas
ljmp
mov
repnz
push
add
pop
and
push
jb
adc
jle
xchg
xor
xchg
addr16
dec
and
rcrl
jne
xchg
adc
int
mov
push
xchg
lret
jbe
pop
and
sbb
fwait
andb
insl
int
aad
or
cmp
push
push
sub
cmp
pop
jmp
lods
out
mov
scas
pop
sub
adc
add
xor
sbb
test
push
add
cmp
push
pop
mov
xor
mov
cmp
outsb
inc
mov
xor
int
fimull
jp
and
mov
and
and
pop
in
cmp
push
es
loop
mov
loopne
loop
cmp
jns
mov
push
sub
sub
add
push
loop
enter
lods
sub
nop
pop
lahf
je
mov
pop
jns
cmp
and
jns
pop
and
ljmp
xchg
sub
ja
xchg
out
push
loop
push
mov
xor
hlt
cmp
xor
mov
xchg
push
or
cmp
mov
adcb
sbb
mov
jns
fwait
lcall
test
xchg
push
rcrl
xchg
lods
cld
ljmp
out
add
les
pop
orb
jno
leave
cmp
sbb
mov
or
cmp
or
aam
cmp
mov
push
popf
cwtl
iret
push
adc
push
popa
adc
sbb
xor
mov
xchg
or
or
int3
push
mov
pop
outsl
xchg
aaa
fwait
pop
cmp
popf
push
arpl
cmp
test
and
and
fnstcw
adc
xchg
sbb
jnp
repnz
scas
sbb
and
cmp
repz
mov
xor
sbb
inc
mov
scas
sbb
in
adc
aaa
je
and
mov
jmp
add
sbb
xor
sub
cmp
or
and
xor
xchg
rol
adc
icebp
rcrl
shr
sbb
or
dec
orb
cmp
add
bound
lock
push
pushf
das
mov
pop
jno
int
push
xor
into
fdivs
cltd
rcrb
pop
push
mov
into
out
push
bound
sub
xor
cmp
add
sbb
ficomps
push
in
outsl
mov
xchg
mov
lods
sbb
xchg
adc
xor
xchg
js
push
push
push
sub
mov
push
call
sub
inc
call
add
and
mov
inc
jae
xor
cmp
imul
pop
push
loop
add
xor
call
adc
pop
lods
outsl
mov
ret
lret
xchg
and
popa
pop
jle
arpl
add
inc
pop
sub
mov
out
adc
mov
and
inc
jb
loope
cmp
push
push
outsb
add
popf
push
or
or
ljmp
adc
pushf
movsb
and
cltd
movl
push
bound
dec
mov
repnz
mov
dec
test
cmpsl
push
push
mov
shl
xor
cs
aas
imul
push
xchg
xchg
xor
push
mov
in
pop
shll
mov
psrlw
xchg
or
loope
mov
faddl
inc
push
fwait
cmc
sahf
sbb
xlat
xlat
icebp
and
cmp
mov
loop
popf
movl
push
xor
push
fwait
cmp
push
push
xor
popa
dec
dec
pop
rorl
andl
daa
pop
jmp
aam
cltd
xchg
arpl
test
xchg
and
rol
sbb
int3
out
dec
icebp
movb
sbb
pusha
mov
aam
xor
xor
push
push
xchg
xchg
push
aas
test
sbbl
pop
xchg
push
arpl
push
mov
xor
adc
loopne
dec
imul
pop
adc
pop
cld
pop
shll
fistl
movsl
sar
and
cmp
xor
cmpsl
rcl
loop
push
popa
and
add
pop
add
xor
inc
gs
cmpsb
mov
cmp
adc
add
rcrb
mov
xchg
lds
test
out
and
mov
sub
int
adcl
and
jo
test
cmove
sub
adc
imul
loopne
push
jb
inc
sub
xor
std
ss
shr
aaa
xor
imul
mov
pusha
filds
pop
sahf
sub
xchg
sbb
add
loope
and
push
or
andb
es
jns
mull
std
shl
inc
test
push
sub
cmp
mov
mov
cmp
cmp
daa
push
xor
xor
sbb
add
xor
daa
xor
iret
xor
push
mov
pop
xor
shlb
adc
mov
inc
daa
xor
notb
xor
je
dec
and
pop
push
aad
inc
popa
ret
xor
jge
adc
movsl
inc
inc
cltd
xor
es
cmp
and
lods
popf
lret
loop
mov
xchg
push
xor
pop
stc
dec
add
adc
jecxz
push
cmp
dec
jno
lock
and
icebp
jp
mov
rclb
jb
sahf
or
sbb
jbe
xor
imul
popa
cmp
outsb
mov
push
and
xor
xchg
cmp
test
aaa
xor
xchg
jp
jno
pushf
mov
aaa
mov
fyl2x
adcl
mov
popa
and
mov
mov
xchg
inc
mov
sbb
scas
fsubrs
inc
mov
in
xchg
pop
add
and
fstpl
ret
cmp
lret
jb
cmpsl
in
ss
xor
push
inc
shll
add
pop
cmp
jp
cmp
mov
pop
pop
or
push
mov
push
push
repz
xor
xor
cmp
jge
adc
dec
neg
xor
add
stc
push
aad
cmp
addr16
test
mov
pop
add
cmp
add
mov
xchg
adc
cmp
dec
leave
cmp
es
loope
fiaddl
mov
fabs
cmp
addr16
cmp
je
repz
mov
and
ja
cmp
inc
les
push
dec
inc
fsts
cmp
cmp
cmp
and
add
dec
call
push
aad
jnp
shll
sub
lcall
dec
xchg
adc
jb
ljmp
cltd
mov
out
add
repnz
mov
push
push
js
mov
xor
jno
and
and
cli
sarl
lds
sbb
push
popf
inc
sub
push
sbb
bound
aad
push
add
xor
lods
sbb
add
add
sbb
xor
incb
cltd
in
mov
push
mov
cmp
push
scas
cmp
xor
and
test
cmp
adc
xor
add
jns
ficoml
roll
jns
imul
mov
lods
leave
jmp
inc
mov
inc
rcll
jns
ret
mov
out
adc
popa
push
mov
notb
sub
push
adc
xchg
lcall
pop
adc
sub
fs
dec
js
cmp
shrl
push
pop
pop
insl
add
ljmp
push
dec
es
loop
lock
loop
ljmp
xor
imul
movsl
mov
shll
lea
push
ret
daa
cli
scas
fidivl
adc
arpl
aad
sarb
push
and
dec
shll
jno
adc
dec
xorl
xor
push
popa
cli
sub
xor
daa
scas
pop
inc
adc
dec
repnz
insb
push
add
es
xor
popa
jmp
aad
inc
cwtl
fldenv
pop
repz
jae
andl
mov
push
mov
lcall
mov
mov
daa
jne
fwait
bound
sub
and
inc
and
lahf
sub
sbb
out
sbb
mov
xchg
push
ljmp
subl
push
xchg
and
jb
aam
jecxz
xchg
xor
lods
sbb
xor
cmp
repz
rclb
cmp
and
xor
insl
sar
pop
into
imul
xor
push
cli
pop
push
and
mov
xor
clc
jmp
jo
xor
lahf
and
cmc
pop
repz
cmp
imulb
push
xor
cmp
and
mov
cmpsb
aad
xor
jbe
cmc
cmp
sub
movsl
mov
add
aas
add
pop
push
inc
push
xor
and
in
xchg
jge
fiadds
mov
popa
sub
push
lcall
rclb
es
stc
pop
cltd
ja
push
cmp
lret
xchg
cmp
dec
mov
bound
push
loope
insb
hlt
jb
lret
xchg
repnz
cmp
data16
int
sbb
fldenv
xchg
or
icebp
and
cmp
scas
movsl
mov
push
jmp
sub
push
icebp
repz
test
pop
nop
xorl
movsl
inc
xor
popl
cmp
outsl
lods
jns
out
add
cmp
cmp
pusha
testb
in
sub
or
sub
mov
daa
stos
mov
or
xchg
rorb
imull
push
bound
repnz
bound
and
dec
or
and
pop
sbb
in
iret
mov
stos
inc
push
push
enter
and
jecxz
adc
les
cmp
cmpsb
ds
shlb
cmp
scas
repz
push
jne
xchg
push
pop
and
push
fwait
sub
and
mov
cmp
popa
loop
xchg
fdivp
cmp
fdivs
xor
mov
aas
inc
fisubrl
inc
adc
cmpsl
es
mov
cmp
jo
adc
adc
mov
adc
movsl
adcb
flds
sbb
arpl
mov
popa
movsl
nop
hlt
jno
sub
fwait
jb
icebp
nop
push
push
xor
es
cmc
xor
loop
push
mov
arpl
dec
nop
jmp
sub
test
dec
add
pop
or
scas
pop
scas
sbbl
jmp
mov
es
lods
loop
insb
cmp
pop
inc
sub
jle
in
mov
mov
test
xchg
loope
adcb
and
mov
mov
ljmp
lods
mov
sbb
jge
daa
adc
cmc
inc
mov
dec
loop
add
inc
inc
movsb
cwtl
xchg
jl,pt
pop
ja
dec
jl
jge
aas
add
mov
jb
mov
or
xor
int3
enter
stc
mov
sub
mov
mov
push
adc
mov
sbb
xor
test
testb
int3
pop
push
test
mov
jae
push
lcall
test
hlt
ja
or
or
clc
int
push
or
lods
push
xchg
push
pop
test
test
faddp
pop
fsubl
shrb
xchg
xchg
mov
cltd
sub
outsl
fildl
aas
adc
and
pop
test
lods
repnz
or
test
mov
or
xor
mov
loop
inc
sub
mov
pusha
add
jg
inc
xchg
cld
icebp
repnz
jb
jb
rol
push
rorb
orl
movsb
out
sarl
pop
cmp
fildll
add
outsl
cmp
add
test
inc
jne
lcall
mov
push
lods
test
pop
enter
xor
jno
inc
xchg
aas
push
movb
pop
mov
lods
inc
sbb
jmp
shlb
inc
lret
int3
loop
xor
mov
addl
cmp
inc
sahf
addr16
int3
push
or
inc
mov
fmull
push
andl
enter
movsb
addb
pushf
pop
xor
jmp
push
leave
test
mov
inc
sub
inc
cmpsl
icebp
pushf
sub
jge
sbbb
movsl
lds
mov
cmp
push
jmp
adc
jbe
mov
add
iret
sbb
stos
fistpll
sub
mov
leave
loop
stc
dec
inc
push
aaa
fwait
ljmp
jmp
outsb
adc
insl
mov
push
xor
cmp
loope
cmpsl
add
jg
pushf
mov
pushf
mov
mov
pop
push
pusha
pushl
ret
push
push
push
inc
sub
rcl
inc
fsubs
fsts
push
scas
jp
push
sahf
xor
inc
inc
mov
push
jne
mov
out
add
push
dec
mov
hlt
mov
fcompl
inc
inc
adc
outsb
aad
jecxz
cwtl
push
mov
adc
js
js
dec
fwait
xor
aad
arpl
cmp
sbb
or
xchg
jg
outsb
sarb
xor
int3
push
inc
cltd
and
fidivs
or
mov
fmuls
fidivl
jg
push
jns
scas
inc
and
and
popa
clc
fidivl
jmp
jle
xchg
notl
rorl
fstpt
cld
rcrl
out
mov
dec
mov
mov
lahf
insb
data16
call
push
jno
and
insl
xchg
lock
mov
add
mov
scas
jbe
mull
add
lret
loope
or
sbb
sar
sbb
popf
dec
xor
int3
push
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
outsb
sbb
sbb
add
add
add
and
add
add
scas
or
add
add
add
add
add
mov
add
js
and
add
add
and
add
add
add
add
add
add
adc
add
or
add
add
add
mov
add
add
mov
add
add
add
or
add
mov
and
adc
add
xorb
addr16
xor
add
add
add
add
cmpsb
jmp
lock
sub
push
out
jecxz
daa
mov
pop
mov
push
int
aas
in
je
ds
mov
shll
xor
outsb
cmp
mov
mov
adc
movsl
cmp
frstor
out
in
inc
out
sbb
neg
loopne
sbb
daa
out
gs
call
stc
sbb
dec
xchg
mov
xchg
mov
mov
add
cli
sub
mov
les
popa
fistpl
lds
cmp
pushf
pushl
lea
je
cmc
clc
cmp
cmp
pusha
lea
je
stc
pushf
clc
cmp
jmp
add
push
dec
sub
leave
loope
or
and
je
pop
jp
push
xor
icebp
push
xor
int
out
push
jne
je
pop
test
adc
mov
push
xor
std
jg
xchg
pop
ret
jne,pt
add
mov
xchg
dec
inc
sbb
mov
aaa
cld
test
repz
aad
leave
test
popf
jp
ja
sub
xchg
jg
cmp
push
incb
pop
fiaddl
outsb
clc
dec
sub
vpunpckhwd
aam
rcl
pop
outsb
inc
dec
and
adc
out
dec
mov
in
outsl
int
dec
adc
dec
mov
push
dec
shl
xor
xchg
popl
popf
mov
sub
lret
sbb
sub
in
ret
sti
jns
enter
bound
adc
sarb
mov
insb
scas
int3
shlb
in
loop
pop
into
or
dec
jb
into
lods
jno
lcall
cmp
icebp
push
pop
and
lock
pop
inc
mov
dec
ret
push
fwait
xor
in
scas
inc
xchg
fwait
xor
lds
pop
les
pop
add
jo
clc
mov
btr
jmp
add
inc
gs
gs
inc
inc
add
les
add
pushf
push
lea
jmp
lret
stos
cmp
cmp
shlb
ds
pop
aad
pop
mov
mov
pusha
es
jne
adc
imul
cld
add
repnz
js
adc
mov
shrl
jns
ja
imul
fwait
dec
inc
ja
icebp
shll
mov
out
pop
sbb
push
loope
hlt
xor
push
inc
or
dec
cs
arpl
in
cld
sbb
idivl
loope
pop
pop
pop
dec
nop
enter
bnd
mov
int
shll
mov
push
mov
subl
in
inc
pop
push
mov
mov
rcrb
cmp
dec
mov
adc
sbb
scas
inc
cmp
xor
into
push
mov
test
fsts
mov
inc
jecxz
out
out
cmp
leave
push
imul
jne
and
aam
arpl
xchg
mov
push
mov
fsubl
shrl
and
repnz
inc
cmp
jmp
sahf
and
mov
push
or
xchg
fstl
push
sub
jo
fdivs
sbb
xchg
ret
scas
add
jmp
pop
xchg
adc
cmpsb
pop
in
jno
mov
xor
sbb
add
popa
jbe
cmpsb
mov
pop
and
pcmpeqb
and
jne
pop
fnsave
jno
cmp
xchg
push
pop
jae
cmp
adc
popf
daa
setne
xor
add
shlb
add
and
fs
ja
pusha
lea
jb
cmp
call
call
xchg
pop
orl
pusha
les
rol
xchg
dec
cwtl
repz
mov
push
and
loop
push
out
add
ds
addb
repnz
add
mov
fucom
in
inc
or
add
sar
fstps
lock
pop
dec
add
icebp
inc
mov
cld
scas
cmc
mov
stc
mov
ljmp
add
pop
dec
ret
aad
adc
sarl
mov
jnp
inc
dec
jge
sbb
stc
inc
pop
pop
dec
pop
aaa
mov
mov
out
xor
pop
cmp
sbb
xchg
adc
or
adc
xchg
adc
mov
xor
add
outsw
mul
shll
inc
or
lds
push
clc
dec
mov
xchg
mov
xchg
in
test
shll
popa
sbb
pop
jmp
sub
in
pop
mov
loope
lret
lods
xor
ljmp
imul
push
inc
mov
nop
stc
out
hlt
xor
js
sub
push
sbb
xchg
inc
and
inc
push
cmp
cltd
lahf
cld
mov
sub
xchg
out
cli
xorl
xor
call
lods
sbb
lcall
and
scas
das
data16
pushf
dec
sub
cltd
icebp
inc
movsb
loop
movsl
jb
aad
in
sarb
dec
cmp
xchg
or
push
xor
addr16
inc
ret
or
xchg
int
jmp
out
jbe
xlat
sub
into
int3
xchg
fidivrl
push
lea
add
inc
xchg
pop
push
fwait
lret
adc
and
test
dec
mov
xchg
movsl
push
pop
adc
iret
push
xor
sub
inc
xor
pmullw
inc
aas
adc
adc
sub
ficompl
or
jp
sbb
mov
jne
clc
sub
aad
inc
sub
not
mov
sete
rcl
shl
add
shl
mov
push
stc
test
call
iret
scas
cmp
in
cmpsb
pop
ficomps
loopne
and
pop
mov
jecxz
lret
sbb
push
call
out
or
ljmp
in
pusha
sbb
popa
xor
pop
aaa
push
cmpsl
movsl
inc
jb
cmp
mov
dec
jmp
mov
cmpsl
cli
iret
adc
inc
inc
mov
js
or
cmp
dec
fisttpll
icebp
push
cmp
lock
pop
mov
sub
ret
int3
and
stos
das
rclb
out
arpl
ds
imul
lds
sub
insb
sti
mov
shlb
int
mov
pop
cmc
lods
pop
xlat
and
sub
push
loopne
nop
mov
enter
mov
push
xor
ret
out
jg
pushf
push
sub
pop
outsl
sbb
cmp
gs
into
dec
ss
push
fcoms
ljmp
subb
jecxz
dec
dec
cs
jl
jmp
call
mov
cmp
rolb
ljmp
in
fsts
or
mov
iret
je
pop
pop
push
jns
imul
push
rcl
lahf
negl
mov
repnz
aam
push
sub
jg
test
popf
mov
pushf
arpl
pop
push
out
cwtl
pop
shl
dec
pop
jo
cli
or
popl
pusha
ror
je
lret
pop
pop
ljmp
or
filds
xrelease
fs
int3
clc
movl
mov
push
inc
mov
loope
call
mov
add
jo
movsl
or
imulb
adc
or
push
lock
enter
dec
pop
lods
push
in
movb
movsl
test
les
sbb
lods
cs
cmp
adc
xchg
sbb
daa
jp
pop
popa
xor
popf
add
mov
arpl
push
mov
xlat
xchg
scas
mov
inc
addl
mov
imul
out
popa
mov
adcl
nop
adc
popf
dec
pop
cmp
cmpsl
xchg
mov
int
push
into
scas
xchg
jge
pop
repz
inc
push
out
xor
and
adc
xchg
in
mov
out
leave
jbe
jae
and
or
iret
mov
adc
xor
sub
sbb
add
push
cmp
sahf
lods
cmp
xchg
push
push
xchg
mov
cld
inc
daa
add
out
inc
pop
leave
jno
and
xchg
fcoms
in
sbb
aam
inc
adc
push
mov
into
xlat
mov
add
pop
and
fs
mov
jge
mov
push
dec
neg
insl
dec
int3
popa
push
mov
sbb
lds
jmp
dec
sub
sub
mov
or
jp
xchg
cmpsb
std
add
lfs
rclb
test
dec
or
adc
pushf
fdivs
xor
pop
mov
pop
push
shll
sub
push
lods
mov
push
mov
negb
call
je
add
inc
and
lcall
and
icebp
scas
or
mov
mov
movw
lea
jmp
pop
sahf
aad
sub
xor
mov
mov
mov
jle
dec
mov
jns
in
dec
push
shrb
mov
mov
fcmovne
mov
mov
dec
jns
jne
jae
js
mov
call
bsf
int3
xlat
sti
xchg
out
jmp
mov
aaa
repnz
dec
fists
hlt
dec
cs
mov
dec
gs
cli
incl
mov
sub
mov
iret
and
jl
mov
push
int
lds
mov
cmpsl
or
sbb
jns
inc
decl
lahf
loopne
js
pop
outsb
mov
lahf
add
lods
mov
cmp
bound
mov
adc
jno
cmpsl
sub
cmp
jo
scas
pusha
pop
nop
pop
clc
jb
push
push
punpcklwd
add
xchg
fcomps
adc
outsb
or
into
cmpsb
dec
enter
cld
loop
push
jb
mov
push
clc
add
bt
call
mov
pusha
bswap
mov
jmp
adc
lods
push
sub
adc
nop
and
dec
enter
nop
cmc
dec
jno
int3
jl
add
sbb
pop
scas
lret
jbe
leave
mov
sahf
dec
into
out
fistpll
pusha
and
cld
sub
mov
mov
in
inc
lock
add
adc
add
lods
imul
fldl
mov
xchg
pop
dec
cli
inc
jl
lea
call
add
push
sub
xor
adc
sub
dec
sbb
idiv
sti
mov
sub
repz
nop
das
inc
xor
jnp
dec
mov
arpl
fisubrl
addl
insl
in
and
insl
push
fs
xor
push
sub
adc
push
mov
in
push
popf
add
cld
sub
fistpll
or
out
mov
shll
in
out
sahf
outsb
adc
aas
fwait
lods
mov
lahf
push
dec
aaa
sarb
leave
rclb
or
ficomps
pop
xchg
xchg
mov
in
hlt
lcall
inc
leave
je
sub
add
into
imul
loop
mov
das
mov
gs
cltd
clc
dec
mov
add
push
call
bt
stc
jmp
imul
push
sub
icebp
mov
or
clc
lds
xchg
mov
aam
jne
in
iret
outsl
das
mov
shrl
aam
sub
push
inc
mov
mov
jmp
inc
sbb
stos
movsl
cmp
pusha
lret
clc
adc
lret
and
sbb
fdivrl
movsb
daa
js
test
enter
lcall
fwait
nop
scas
inc
fs
in
mov
adc
std
lods
dec
mov
dec
mov
jle
pusha
lods
pushf
push
call
bound
push
sub
loopne
nop
jge
cmp
daa
int3
fwait
cmpsb
dec
mov
mov
xor
or
lods
loop
idiv
xchg
inc
sarl
arpl
xor
and
inc
dec
and
inc
sub
out
dec
mov
pop
mov
lods
sahf
gs
lahf
ss
aas
adc
lret
leave
mov
xor
ds
mov
sbb
xchg
inc
repz
lds
lods
cli
and
lock
cmp
push
push
jmp
adc
insb
push
sub
rcl
dec
sub
sub
xchg
inc
adc
psubd
sbb
stos
mov
loopne
pop
mov
push
jle
mov
mov
or
clc
cld
inc
test
fildl
lret
mov
pop
adc
lret
les
lfs
mov
pushf
mov
pushf
pop
outsb
xor
mov
push
fs
adc
out
push
inc
lret
lret
sub
add
ds
aaa
fmull
popa
das
movsl
lret
pop
pop
mov
inc
push
mov
in
xchg
sar
sahf
cmpsl
pushf
jl
jb
adc
cmp
mov
fnsetpm(287
sbb
loope
push
lcall
bound
cld
xchg
into
aam
dec
lcall
inc
push
mov
ja
adc
jle
pop
mov
jl
cmp
daa
xorb
aam
sub
push
std
in
or
sbb
xchg
pop
pop
stc
dec
sub
sub
sbb
and
neg
lea
jno
stos
push
pushl
mov
lea
pusha
call
pusha
mov
call
call
sbb
pop
sub
add
scas
inc
push
add
xchg
jnp
sbb
dec
pop
cmp
jns
addr16
or
insb
test
and
in
insb
jl
add
out
pop
adc
loope
xchg
jl
adc
fstps
insb
outsb
cmp
pop
mov
jnp
out
mov
adc
mov
sbb
push
xor
in
pop
add
push
iret
dec
inc
sub
stc
cmp
shrl
test
dec
jp
jp
add
jb
popa
mov
aaa
bound
sbb
loope
aaa
add
outsl
in
dec
mull
test
pop
mov
imul
lea
cmp
xor
mov
cmc
push
cld
cmp
test
cli
jmp
cld
add
add
shll
icebp
mov
stc
sub
push
lea
pusha
sub
mov
pushl
popl
stc
stc
call
ror
jmp
std
inc
or
xchg
je
pop
jae
iret
gs
jbe
mov
xchg
xlat
push
pushf
xlat
or
dec
jb
roll
int3
sahf
pop
add
daa
das
xchg
push
sub
out
imul
inc
mov
outsb
add
dec
lahf
sub
test
mov
inc
adc
mov
daa
test
xlat
into
stos
add
push
inc
xor
loopne
adc
enter
pop
pushf
lods
in
mov
cmp
inc
pop
jne
aad
inc
int3
aaa
push
inc
sarl
int3
or
lcall
leave
push
fnstenv
mov
icebp
adc
sti
imul
push
je
in
adc
adc
leave
push
push
sahf
jno
xchg
mov
cmp
or
imull
ffree
enter
pop
jmp
push
ret
jns
leave
push
mov
sub
pop
repz
cmp
dec
inc
lds
iret
in
or
mov
jp
xchg
ss
push
mov
stos
mov
cmpsb
push
fwait
sahf
lret
fstpl
dec
aaa
pop
lods
les
dec
cs
iret
cmp
movb
mov
push
pushl
ret
out
in
pop
sub
xchg
mov
mov
fcomps
or
es
int
popa
popa
sub
sbb
push
sbb
jle
hlt
xchg
xlat
aad
jb
cmp
pop
sahf
in
pop
mov
ret
dec
sub
call
mov
jo
inc
pop
jae
jge
loopne
pop
and
adc
inc
mov
insl
cmp
jb
fnstsw
ret
mov
or
repz
xor
xor
push
and
cmpsb
mul
in
dec
test
in
icebp
pavgw
xor
jmp
test
dec
or
icebp
popf
or
and
xor
lds
sahf
ficompl
cmp
sbb
aam
adc
repz
pop
mov
fimull
cmp
push
addr16
popf
cwtl
pop
push
mov
scas
push
shl
push
mov
loopne
pop
cld
je
mov
xchg
or
xchg
and
sub
clc
call
pop
addr16
popf
cmp
sbb
lret
or
mov
repz
and
push
outsl
adc
jo
lds
sub
xor
inc
sbb
fidivs
lock
loop
rcrl
sti
cltd
adc
clc
xor
adc
cmpsb
and
add
int3
dec
jmp
cmp
stos
in
dec
mov
cmp
shl
push
jle
inc
mov
mov
xchg
adc
fidivl
pop
ds
push
pop
mov
stos
cmovg
sub
add
push
out
into
sbb
inc
fsincos
pop
mov
lret
mov
bswap
sbb
shrb
pop
or
push
push
mov
xchg
lock
push
mov
je
ret
outsb
xchg
ja
fsubs
lock
jno
sub
ljmp
mov
xchg
adc
testb
jmp
mov
in
nop
shr
sahf
and
rcll
push
mov
imul
popf
jg
xchg
xor
jnp
push
or
mov
pop
sub
push
js
sbb
add
pop
sbb
fldcw
lret
aam
lret
je
lcall
ja
clc
mov
pop
mov
lock
test
xchg
roll
sub
aas
fwait
adc
add
fnstsw
push
lea
ja
sbb
shl
sub
not
bts
sar
add
call
xor
pop
sub
movb
push
mov
mov
mov
jge
fistps
mov
mov
or
sub
pop
scas
fwait
je
add
inc
daa
mov
mov
lds
or
mov
fnsave
push
es
dec
scas
add
jns
test
xor
lock
in
leave
sub
jmp
vaddsd
movb
inc
cmc
cmc
cmc
clc
ror
test
clc
pushf
call
aas
cmp
push
push
mov
jl
or
mov
mov
mov
lret
pop
jle
fucom
int3
sub
shll
jge
cli
cs
pop
jl
pop
pop
inc
sub
xlat
jecxz
in
pusha
rolb
in
sbb
mov
sahf
xchg
lret
shlb
fwait
pop
cmp
add
shrb
pop
fdivrs
popl
movsb
mov
inc
lock
inc
dec
push
movsl
lock
mov
xor
out
xor
inc
cmp
sbbl
pushf
adc
push
bt
bt
xor
push
push
pushf
pushf
lea
call
pushf
lea
jae
pusha
mov
not
pushf
mov
call
neg
mov
shr
call
movl
pushf
mov
pushf
lea
jmp
movw
movl
push
jmp
dec
arpl
pop
sub
int
mov
mov
or
mov
scas
and
xchg
inc
xlat
in
mov
decb
inc
ficoms
ja
std
xchg
mov
aam
cmc
dec
mov
pop
push
adc
jnp
ljmp
xor
mov
fld
xlat
aaa
fnstenv
imul
punpckhbw
mov
mov
ret
push
jae
data16
das
test
mov
push
cmp
fs
call
pusha
pushf
call
adc
mov
in
xchg
lea
add
dec
cmp
inc
mov
fildl
fucom
xchg
inc
cmp
lcall
xchg
or
push
xchg
iret
lcall
stc
inc
pop
push
sbb
push
add
mov
stos
and
mov
or
push
es
sahf
ljmp
mov
mov
and
fs
call
pushf
mov
pusha
pushf
pusha
lea
jmp
sbb
xchg
gs
adc
cs
pusha
add
shrb
movsl
lahf
lods
fmul
out
jo
sub
int
out
sti
bound
and
imul
xor
sti
add
cmp
mov
push
xchg
push
popf
push
cmp
imul
push
test
stc
in
dec
xor
lds
sub
stc
and
mov
mov
and
push
fsubrl
lahf
pop
fstpt
loope
test
sub
dec
jne
mov
mov
outsb
jne
and
lods
sub
fsub
bswap
sbbb
aam
or
outsl
push
enter
lret
dec
pushf
push
pop
gs
and
lods
gs
or
adc
add
int
ljmp
lret
or
mov
test
adc
and
push
fbld
popa
pop
loop
lods
stos
cmp
in
cld
lahf
jg
inc
fsubl
mov
or
mov
add
or
ret
sbb
js
push
bound
adc
popf
pop
or
shrb
cmp
dec
sbb
adc
fisubrs
jno
sub
dec
xchg
push
add
adc
je
mov
sbb
mov
cmp
adc
stos
mov
push
repz
jp
in
mov
adc
lret
xchg
fiadds
jl
dec
adc
inc
hlt
add
xchg
out
mov
dec
and
add
orl
gs
hlt
mov
iret
sub
clc
lcall
int3
push
arpl
ret
stos
push
loop
cs
push
jno
bound
mov
scas
fldcw
and
push
jns
bound
push
shrb
xor
test
mov
mov
shll
lahf
je
push
pop
jmp
lret
cmp
mov
xor
inc
aas
adc
xor
mov
jecxz
mov
andb
dec
test
xlat
mov
or
fdivl
in
lret
sbb
fnstenv
loop
out
or
in
daa
push
sub
push
cmp
je
aad
inc
bound
push
adc
fs
cmpsl
mov
jge
shll
pop
mov
sbb
jl
mov
ja
and
cmp
xor
mov
push
sbb
cli
mov
push
mov
sub
sub
lret
inc
pop
je
fisubs
xor
or
push
jecxz
adc
sahf
in
xor
in
jmp
testl
mov
inc
adc
mov
push
pusha
sbb
sub
addr16
iret
mov
fimull
ss
sub
pushf
mov
pop
pop
pop
std
fists
int3
outsb
orl
lock
mov
push
push
out
xorl
test
cmp
inc
out
jge
jmp
mov
inc
test
repnz
adc
mov
push
jg
cmpsl
mov
push
pop
repnz
lods
xor
pop
and
xchg
pop
sbbb
out
xchg
xchg
outsb
adc
xor
pop
aaa
test
out
xchg
pusha
push
int
inc
inc
push
ss
or
cltd
jb
cmpsl
xor
or
std
pushf
fdivs
not
mov
mov
or
cmpsl
ja
and
adc
out
orb
pop
aas
test
mov
popf
xor
lret
rep
movsb
jmp
sbb
in
push
sub
nop
cmp
ficoml
sbb
inc
and
add
xchg
or
push
fdivrp
inc
rcll
mov
clc
popa
cwtl
jo
clc
cli
fwait
int3
add
jge
insl
push
ffreep
mov
cmc
xchg
hlt
sub
lahf
sbb
cmp
imul
js
jns
repnz
sbb
in
sub
or
out
addb
xchg
adc
inc
adc
adc
mov
call
call
in
dec
outsl
jns
mov
pop
out
xchg
mov
sub
jne
or
rolb
outsb
test
scas
test
pop
sahf
and
inc
lds
mov
test
jg
shlb
mov
push
mov
jecxz
popa
lahf
and
aad
mov
mov
cwtl
dec
pop
mov
lods
lcall
sbb
mov
and
add
jl
shlb
pop
mov
cmpsb
cmp
call
sub
mov
out
das
mov
rorl
fistl
add
xchg
jge
jecxz
push
inc
cltd
lret
push
js
int3
mov
sbb
cmp
xchg
ds
sarl
jnp
dec
test
stos
je
pop
inc
push
ret
mov
shrl
inc
fisubrs
mov
pop
mov
jns
fcoml
scas
or
jg
xor
test
pushf
add
cmc
call
call
scas
or
pusha
sub
add
dec
mov
xor
push
lret
pop
add
rcrb
xor
and
jge
pop
adc
dec
xchg
js
repnz
nop
adc
xor
sbb
inc
hlt
mov
loope
aam
dec
cld
bound
sbb
in
je
out
out
loope
shrb
mov
add
push
add
inc
jecxz
cmp
sub
lea
ret
jecxz
mov
jne
xchg
sbb
and
test
shll
sbb
jae
rcrb
jmp
movb
test
jmp
sub
xchg
arpl
int3
loopne
pop
mov
stc
mov
dec
scas
enter
sbb
or
loope
enter
lahf
int
sti
jecxz
or
or
jge
pusha
push
shlb
xchg
push
cmp
scas
cmp
mov
idivb
lret
movsb
adcb
into
test
sub
les
dec
lods
loop
in
loopne
and
xchg
outsb
loope
fs
inc
inc
lock
cmp
cltd
fistps
mov
mov
ret
add
pop
jl
and
sub
adc
sbb
push
push
ja
mov
cli
adc
mov
sbbl
cmp
rcrb
mov
iret
aam
inc
dec
xchg
shlb
mov
jge
mov
cltd
out
movsl
bound
xchg
pushf
xor
repnz
stc
push
push
inc
push
lods
pop
push
enter
push
pop
ds
xchg
xchg
sbb
shl
push
dec
arpl
or
add
out
cwtl
and
cmp
call
pushf
cmc
sub
mov
mov
lea
jmp
lods
lcall
xor
push
scas
sarl
aam
mov
shl
xchg
xor
xor
cmpsb
cmp
jae
and
push
sahf
pop
and
and
jbe
push
push
in
push
or
fists
jno
mov
out
inc
dec
sub
xlat
push
dec
cmpsb
test
dec
outsl
add
imull
add
gs
aas
mov
lret
push
daa
sbb
and
mov
or
cmpsb
rcll
ja
jmp
sub
mov
enter
cli
in
cli
or
lea
mov
or
xor
iret
imul
jno
mov
or
lea
and
fldcw
aad
dec
dec
scas
inc
test
jecxz
xor
sub
inc
jecxz
pop
cmc
xchg
sahf
jbe
imul
pop
sahf
test
sar
loope
aad
insl
sub
lds
dec
imul
outsb
les
mov
dec
nop
xor
sbb
pop
icebp
dec
add
mov
jecxz
adcb
ss
inc
or
je
jmp
popf
push
xchg
test
pop
repz
and
es
insl
sub
push
nop
fcompl
fildll
inc
add
test
and
sarl
mov
in
shl
orb
bound
sub
pop
jge
insb
sub
mov
subb
loope
add
les
inc
movsl
cmp
add
sbb
pusha
pop
andb
push
mov
aam
cltd
xor
lcall
dec
jmp
sbb
leave
adc
and
add
jae
fwait
sbb
inc
xor
jle
xor
xlat
rorl
faddp
das
or
mov
pop
out
pop
gs
stos
out
sub
pusha
popa
jo
jecxz
test
cs
push
jle
cmp
lods
add
in
or
call
dec
ljmp
sahf
fimull
adc
pop
icebp
push
out
popa
push
xchg
es
lods
or
stc
jge
lcall
adc
out
cli
mov
outsl
add
scas
and
adc
pop
movsl
std
sbb
shlb
test
add
pop
scas
jnp
xor
add
jbe
notb
sbb
dec
pmaxsw
jb
xchg
sti
dec
xchg
xchg
sub
jle
sahf
cmp
stos
xor
loopne
andl
les
sub
lcall
cli
mov
lock
sti
sbb
dec
adcl
aam
pop
dec
movsl
xchg
dec
pop
neg
insl
adc
xor
jne
aad
divl
or
mov
repz
fistpl
mov
stos
stos
dec
vpcmpgtw
cmpl
sahf
cli
push
inc
call
jmp
xchg
in
outsl
sub
push
inc
aas
xchg
ret
rorb
xlat
push
in
or
clc
xchg
les
push
mov
jg
sbb
pop
aas
movsl
outsl
jp
mov
rcr
mov
shll
add
jns
adc
imul
arpl
xor
fcomi
mov
jge
and
int
add
or
xchg
shl
stos
sarb
adc
xor
pop
adc
mov
rcrl
lds
mov
push
cmpsl
testl
push
dec
mov
pop
lcall
cmpsl
mov
dec
fisttps
jne
fwait
ja
sbb
xor
in
pop
add
movsl
test
aas
ficoms
decl
lods
pop
adc
lretw
cltd
aad
data16
pusha
mov
lcall
xor
sahf
hlt
jne
or
xchg
and
icebp
cmp
xor
lea
jae
pusha
xor
push
mov
lea
call
call
add
stc
jmp
lds
imul
mov
xchg
or
loop
rcl
js
or
adc
adc
lea
lahf
cld
mov
mov
aam
jp
movsl
jmp
push
repz
cmc
cmp
jne
sbb
sbb
adc
push
loopne
in
mov
arpl
mov
pop
dec
lods
add
inc
lds
add
pop
jp
push
xchg
adc
div
adc
test
lea
push
xchg
jp
sbb
push
ljmp
decl
in
outsb
int3
jns
mov
pop
dec
aad
or
pusha
daa
scas
mov
bound
shll
cmp
lret
lods
add
and
ljmp
add
sub
jl
mov
push
clc
cmp
pop
pop
jo
lods
xchg
cmp
jl
lea
int
jle
push
nop
jb
or
adc
stc
push
arpl
push
xor
mov
int3
aaa
jl
sub
jns
jno
setl
std
mov
lahf
aaa
leave
in
in
xor
insl
pop
xchg
sti
ds
or
push
mov
sbbl
add
sub
not
out
mov
cmp
pop
xchg
or
dec
fldenv
inc
jl
popf
iret
cmp
in
cmpb
cmp
cli
push
out
ja
aad
xchg
push
dec
xchg
adc
dec
sub
subb
lahf
sbb
and
and
fs
jae
call
icebp
mov
push
jl
lods
mov
xor
mov
fdivr
push
adc
mov
sbb
cwtl
shl
cmc
stc
dec
jb
shlb
repz
fistl
out
aad
jp
and
mov
cmpsl
pop
lea
nop
adc
fcmovnb
adc
nop
xor
cmp
mov
scas
jno
push
dec
add
mov
int3
pop
adc
sub
rclb
mov
les
xchg
insb
fdivrs
leave
cmc
jmp
mov
add
xchg
mov
imul
aas
out
add
popaw
imul
aaa
mov
mov
call
lea
jne
movsbw
pushf
mov
movb
pop
pushf
push
mov
cwtl
mov
lea
push
mov
call
mov
lea
in
adc
loopne
mov
inc
iret
lods
daa
mov
jp
mov
out
jge
ja
sbb
pop
cmp
clc
fcompl
mov
popf
adc
mov
shr
pusha
ret
jge
ret
pop
or
inc
mov
clc
mov
mov
stos
mov
nop
sahf
testl
aam
pop
mov
mov
inc
movsb
push
cmp
in
inc
xchg
loopne
xchg
fistps
bound
stc
adc
jo
xchg
imulb
mov
insl
and
or
fsubrl
dec
pushl
jmp
jno
jp
sub
fcoms
and
and
add
test
add
mov
dec
dec
repnz
push
sbb
cmp
in
data16
push
jae
push
dec
mov
dec
icebp
xchg
std
mov
jecxz
and
and
cs
loopne
xchg
jp
test
pop
stos
into
mov
je
aas
inc
xchg
test
decl
jp
addr16
pop
adc
or
pop
cld
mov
pop
lcall
fdivl
sti
ds
jmp
push
in
dec
scas
inc
add
pop
xor
test
xor
push
repz
and
cmp
mov
lods
outsl
sub
mov
pop
jmp
add
ror
ds
dec
mov
mov
std
add
inc
push
in
push
pop
pop
dec
in
ja
sbbb
mov
test
rcll
jae
xor
sub
mov
loop
pushf
sbb
bnd
jl
stos
jecxz
push
adc
pop
cmp
jmp
addr16
mov
lret
and
stos
scas
cmp
ja
stc
popa
sub
pop
sub
lods
sub
lret
push
mov
inc
repz
aad
cs
rolb
fstp
bound
or
mov
xchg
mov
ljmp
scas
orl
jp
stos
cmp
cwtl
cld
je
pop
out
push
lods
popl
cmp
pop
in
jno
icebp
add
fsubl
mov
subl
insb
mov
loope
mov
call
sub
subl
inc
xchg
fwait
cs
shl
xor
push
ss
pushf
stc
enter
call
xorb
aam
std
rcll
shrb
mov
dec
mov
ds
lret
sbb
dec
sub
cmp
imul
ljmp
popf
mov
in
adc
ret
add
adc
in
inc
scas
adc
mov
subl
cwtl
aad
aaa
mov
lock
lret
int
call
mov
mov
les
cltd
mov
cmp
mov
jo
sbb
sub
sbb
push
and
inc
and
add
es
shrl
push
int3
notb
xor
inc
or
jns
neg
out
xor
aad
jbe
push
rcll
pop
mov
lds
pop
mov
cmp
xor
pop
or
popa
sub
lret
and
stos
and
stc
clc
cmc
cmp
bt
xor
push
stc
add
bt
cmp
push
seta
lea
jno
lahf
lea
mov
pusha
setno
mov
jmp
sub
and
aas
test
push
jns
or
push
and
out
pop
in
inc
shll
sahf
repnz
jp
rcr
test
fdiv
scas
fdivl
call
cmp
into
jle
je
rcr
jl
xlat
xor
icebp
jns
pop
mov
adc
adc
adc
ret
or
sub
icebp
cmp
xchg
fiadds
xchg
cmovp
push
push
add
jge,pt
data16
inc
dec
adc
std
fcmovnu
pop
into
out
enter
mov
lcall
and
mov
mov
inc
lock
push
hlt
push
xor
iret
in
jg
or
cmp
imul
and
xchg
aad
aaa
push
mov
ret
ret
inc
pop
test
mov
idivb
add
fs
jbe
sar
mov
sbb
add
add
bsf
pushf
cmc
mov
xor
clc
add
rcr
movl
cmc
stc
btr
mov
cmp
clc
test
cmp
pusha
pushf
lea
jbe
bswap
sar
stc
test
sub
stc
mov
xchg
sub
rol
adc
mov
btr
bt
add
add
btr
not
xadd
push
shr
test
jmp
arpl
jbe
in
xchg
cwtl
push
mov
sbb
leave
pop
cmp
push
hlt
outsb
test
negb
and
aad
sbb
mov
xor
adc
push
sbb
fmul
rorb
rcl
mov
sub
cmp
inc
fldt
clc
mov
cmpsl
pop
fdivl
cmp
xchg
nop
adc
adc
jle
add
js
jg
mov
sub
cmpsb
test
idivl
fimull
mov
gs
orb
sub
cmp
cmp
andb
or
mov
xchg
cmpsb
mov
fldenv
inc
or
mov
push
icebp
push
push
sbb
inc
sbb
cmp
insb
mov
fs
frstor
popa
shl
mov
xchg
xor
jecxz
sahf
das
ret
mov
iret
and
inc
popa
pop
xor
sub
sbb
imul
xchg
repz
mov
lret
shll
stos
mov
movsb
dec
add
addl
push
sub
loope
push
push
shl
xchg
inc
movsl
fisubl
inc
movsl
repnz
shr
in
dec
adc
fnstsw
push
ss
pop
clc
outsb
sub
fwait
ret
mov
fldenv
out
or
mov
std
lahf
push
pop
mov
scas
xchg
or
dec
inc
xor
mov
int3
push
cmp
adc
addb
add
int
aad
sbb
mov
cld
cmc
arpl
in
cld
push
out
pop
pop
cmp
roll
cs
cmp
dec
sub
xchg
rcrl
popf
jns
mov
xchg
pop
dec
stos
jbe
cmp
lahf
jae
mov
test
ljmp
sbb
test
cwtl
mov
add
adc
pop
mov
lods
aad
inc
fdivrl
jb
mov
dec
mov
lods
gs
loope
fdiv
shlb
aam
or
xor
sub
push
sub
sub
add
jns
cmp
or
pop
into
mov
clc
test
cmp
push
push
mov
push
lea
jb
call
mov
pusha
clc
cmp
pushf
jmp
ja
xor
mov
lock
pop
jno
add
lea
icebp
add
call
daa
mov
jp,pt
imul
jae
outsb
dec
fildll
adc
mov
arpl
mov
pop
les
lds
sbb
popa
or
sti
test
sahf
fistpl
add
add
push
bound
cmc
jecxz
nop
jp
call
aaa
jp
mov
lret
jmp
adc
popa
cld
inc
js
adc
mov
enter
leave
jae
in
push
test
xor
dec
dec
sbb
push
mov
cmc
sub
test
mov
sahf
call
inc
in
int3
push
andl
scas
or
aaa
out
xor
and
dec
jae
testb
or
xchg
jg
adc
cmp
push
mov
add
mov
aas
mov
out
fdivrl
lret
imul
or
or
xor
sbb
lcall
cmp
cmpsb
subb
leave
leave
test
testl
xor
iret
pop
mov
mov
adc
in
mov
adc
lods
fistl
mov
adc
rcl
add
xchg
cmp
int
in
ret
cmc
adc
lret
jmp
repnz
sbb
ds
jo
adc
adc
daa
in
mov
and
mov
test
or
jae
cmp
pop
or
das
push
sahf
lock
or
fucomip
pop
jo
gs
xchg
shl
cltd
cmpsb
and
ret
aam
mov
sub
out
pusha
xchg
or
cld
int3
mov
pop
aad
testl
mov
clc
push
pop
jbe
push
es
inc
imul
cwtl
mov
or
and
jle
fstpt
je
out
cld
test
sbb
cmpsb
mov
fstps
pop
mov
xchg
jg
enter
and
fnstsw
cmc
in
inc
xchg
sbb
imul
roll
push
outsb
cmp
pop
adc
sub
sub
mov
or
xor
mov
aam
lret
popa
jmp
sbb
pop
fcmovbe
jae
push
xor
xor
gs
pop
ffree
inc
dec
shlb
aas
icebp
jb
notb
mov
pop
and
mov
mov
cmpsb
sub
gs
fldl
ds
lcall
scas
adc
movsb
clc
mov
add
add
xor
pusha
jl
in
add
xchg
notl
rorb
add
push
gs
adc
xchg
pop
shrb
pop
mov
add
push
jp
pushf
cwtl
and
pop
cmp
imul
mov
cli
cmp
andl
fldt
xor
push
leave
testb
loopne
xchg
mov
pushf
xor
mov
xor
shll
pushf
repnz
ss
push
aaa
mov
out
test
or
lods
mov
in
cwtl
sar
sarl
lahf
mov
mov
lods
xor
sahf
mov
dec
fisttpll
inc
inc
cmp
fildll
ret
loope
ss
adc
sbb
loope
adc
fwait
xor
jb
xchg
ljmp
lret
ret
cmpsl
cmp
push
add
and
adc
jl
pushf
dec
jg
push
inc
pop
mov
out
bound
cmp
cltd
orl
dec
mov
rclb
imul
mov
mov
mov
mov
jmp
lods
cmp
pushf
xor
jmp
pushf
inc
test
neg
movl
mov
pushf
inc
bt
stc
ror
cmp
cmc
stc
cmp
add
call
push
mov
sub
aaa
scas
lods
int3
push
xchg
addb
mov
test
mov
or
cmpl
push
pop
jle
sbb
nop
jb
mov
fistpl
test
loop
fildl
clc
jmp
or
mov
addl
inc
outsb
add
int3
mov
pop
shr
ret
pop
mov
cmp
xchg
mov
jg
in
adc
das
sarl
dec
push
mov
inc
cmpsb
push
mov
pop
ficoms
je
aam
jno
push
fstl
sub
mov
fisubrs
adc
cmpsl
in
cmp
jne
fldt
das
pop
jno
mov
fucomi
pop
mov
repnz
dec
mov
mov
out
mov
xchg
cmc
outsb
into
pop
popa
pusha
movl
movw
pushl
movb
pushl
movl
pushf
pushf
push
lea
jmp
jl
mov
sub
xlat
clc
pop
fnsave
add
les
lcallw
or
lods
dec
loopne
loopne
lahf
fldcw
fiadds
jp
and
and
jmp
or
call
inc
inc
jecxz
xchg
nop
lds
lea
dec
mov
sub
push
mov
push
pop
dec
mov
cwtl
cli
ja,pt
rcr
xor
lea
stc
sahf
ret
sub
loop
lods
hlt
push
jns
in
fistpl
lods
mov
pop
iret
sbb
std
jge
ficomps
ror
mov
inc
pop
mov
fwait
xor
lahf
cmc
dec
sbb
mov
pop
push
lock
sub
lods
arpl
mov
and
dec
test
repz
int
push
or
test
cmp
jnp
jge
push
imull
mov
push
mov
xchg
cs
jmp
xor
fs
jns
in
mov
cmpsl
push
xchg
sbb
inc
sub
cmp
test
and
add
fstps
dec
enter
sub
xor
rclb
pop
xchg
jne
int3
rcr
adc
inc
inc
mov
push
pop
pop
sbb
lret
in
sbb
addr16
aas
out
sub
rcrl
mov
mov
scas
jbe
aam
push
dec
lcall
add
nop
jb
inc
push
push
aam
mov
xor
ret
sub
jo
sub
mov
adc
cld
out
shrb
ja
in
test
mov
fisttpl
mov
or
mov
mov
jecxz
pop
jns
dec
insl
mov
insb
cmp
adc
in
int
lea
in
popf
push
cs
pop
mul
xchg
cs
insb
lret
ficoml
pop
sbb
fs
je
shrd
add
cmp
pushf
sub
movzbw
shld
stc
shr
adc
mov
btr
cmc
ror
mov
add
btr
add
sub
dec
movzbw
shr
neg
mov
pushf
stc
jmp
stos
leave
cmpb
sahf
inc
decl
js
jge
sarl
loop
adcl
jmp
mov
xchg
divb
xor
lret
mov
inc
adc
test
dec
mov
pop
jmp
mov
mov
jne
outsb
pop
pop
xlat
fs
cltd
fbld
int
mov
sbb
pop
aaa
pop
jae
adc
repz
jo
mov
add
popl
cmp
neg
cmp
bt
popfw
pushf
mov
inc
call
inc
inc
or
sub
mov
xor
cmp
xor
mov
out
mov
mov
pop
pop
cmp
push
sub
mov
icebp
xor
fwait
inc
pushf
xchg
cmp
dec
or
imul
les
xor
in
adc
mov
cmp
js
out
sub
sub
loopne
add
add
cli
clc
push
add
stc
movzwl
cmc
cmp
mov
bt
add
call
mov
inc
jp
in
pop
pop
mov
or
sti
dec
xor
cmc
jge
orl
fcoms
iret
adc
push
les
inc
sbbb
cs
into
or
xchg
push
outsl
or
push
notl
loope
mov
inc
ljmp
add
sbb
scas
and
cli
mov
xsaveopt
add
dec
mov
mov
in
hlt
fdivrl
xchg
sub
cld
mov
jle
or
lea
ja
mov
sub
pushf
movsbw
clc
add
add
lea
push
or
mov
cmp
test
pushf
mov
jmp
xor
shld
cmp
mov
pushf
call
sub
push
cmp
mov
pusha
pushf
lea
ja
jge
bt
push
imul
pusha
pusha
add
pushf
lea
jmp
adc
pushl
pusha
movb
movb
pushl
ret
lea
jne
bt
mov
shl
ror
rol
sub
shl
sar
and
mov
push
stc
call
popa
icebp
addr16
push
ja
inc
cs
std
xchg
test
jge
ds
inc
sbbl
xchg
push
xchg
loope
mov
sbb
or
inc
jno
push
mov
dec
or
in
fnstcw
mov
jecxz
mov
sahf
iret
xor
xchg
xor
ret
jno
pop
dec
movsl
xchg
scas
pop
pop
inc
cmc
sbb
pusha
andl
test
pop
push
dec
add
xor
jno
inc
or
call
pop
mov
rorb
nop
sbb
add
cmp
mov
imul
jae
in
and
mov
xchg
sbb
dec
fistpl
sub
sbb
xchg
sub
pusha
pop
icebp
rorb
adc
ja
jno
pop
mov
addr16
lret
icebp
pop
jge
stc
call
sub
add
stos
mov
add
out
outsl
pop
data16
ret
push
pop
xchg
fwait
stos
mov
sahf
mov
jno
mull
sub
out
stos
sub
jnp
adc
xchg
out
or
sahf
mov
pop
rolb
mov
jno
push
lods
mov
inc
fs
mov
add
and
xor
adc
int3
cs
xchg
sbb
popa
jmp
in
adc
punpcklbw
mov
adc
xor
outsb
mov
jle
or
pop
pop
es
cmp
sub
inc
adc
and
cld
mov
flds
mov
jmp
pop
sbb
pop
shlb
scas
int3
mov
popf
fidivrl
push
clc
aas
dec
or
int3
flds
inc
dec
shl
mov
inc
mov
mov
sbb
inc
mov
dec
stc
jbe
and
rcll
xchg
jno
or
stc
mov
and
sub
lea
xchg
mov
movsbl
movzbw
movb
bswap
mov
not
pushf
movsbw
call
xor
jno
mov
jl
stos
inc
dec
es
mov
outsb
hlt
add
jle
sarb
mov
xchg
shl
es
or
push
popf
dec
jmp
push
addr16
fadds
push
sub
in
scas
insb
out
cmpsl
sbb
mov
repz
shll
push
out
push
lds
jecxz
popf
mov
dec
sub
out
lock
in
sar
sub
xchg
sub
inc
test
outsl
inc
dec
bound
flds
sbb
fcomp
fsubrl
scas
dec
outsb
cmp
cmc
sub
jmp
jecxz
pushf
push
sub
mov
lret
loopne
stos
lret
fwait
jno
mov
push
ficompl
fildl
pop
adc
sbb
mov
xchg
xchg
mov
or
ja
add
daa
lcall
push
in
addr16
fnstcw
and
test
ret
mov
gs
push
jp
arpl
roll
call
dec
cli
push
adc
mov
out
out
leave
dec
mov
jbe
jmp
insl
cmpsl
loope
mov
imul
pop
and
cmp
sub
or
and
movsl
and
xchg
test
ljmp
shll
and
in
mov
xchg
aas
daa
cwtl
stos
test
jecxz
fwait
insl
movsb
sub
js
addr16
ret
enter
xlat
out
fidivl
cwtl
sub
lcall
push
sarb
jae
cmc
inc
xor
ret
inc
iret
decl
inc
xchg
cmp
lret
idivb
push
push
aam
mov
add
cmp
fcomps
push
jmp
rclb
inc
and
xor
mov
pop
mov
add
sbb
imul
push
cmp
and
das
mov
out
pop
add
fsub
imul
adc
cmp
push
cmp
mov
fmuls
outsl
pop
dec
jmp
mov
gs
insl
loop
in
push
mov
adc
in
or
rcr
mov
cmp
test
adc
sub
ja
xchg
ret
inc
test
ds
xchg
aad
add
add
imul
cmpsb
fidivl
inc
xlat
lahf
ret
in
fnstcw
dec
pop
dec
scas
add
ljmp
push
jnp
add
test
and
inc
addr16
imul
add
mov
jmp
loope
std
or
sbb
fs
jbe
ror
bsf
mov
bts
not
btr
add
bswap
xadd
not
mov
test
push
inc
add
xor
clc
xor
movl
clc
pushf
mov
lea
stc
cmp
call
lea
je
pushf
movb
pusha
lea
jmp
jmp
in
or
xor
inc
cmpsb
lods
pop
aas
push
mov
push
ret
cmp
pop
icebp
jnp
cmp
cwtl
ret
aam
ja
or
divb
js
mov
testl
orb
xor
mov
sub
mov
xchg
mov
pop
jle
dec
sti
jp
or
pop
scas
pop
adc
or
icebp
stc
adc
mov
iret
in
mov
inc
mov
jnp
in
add
pop
lret
mov
mov
cmp
jb
inc
jmp
pop
cmp
or
out
repz
adc
je
jae
inc
jae
sbbl
mov
jle
insb
or
dec
and
aad
leave
cmp
push
andl
popa
arpl
iret
cmp
lea
arpl
mov
ss
jecxz
add
sahf
shr
sbb
sbb
jl
sahf
push
jmp
cmpsl
lahf
jno
insb
adcl
or
mov
in
ret
xchg
mov
jbe
xor
add
repnz
xchg
leave
inc
cmpsb
sbb
lahf
std
ljmp
enter
jb
adc
pcmpgtd
ja
jae
loopne
adc
lods
mov
fildl
sub
dec
call
inc
jmp
jno
jge
icebp
outsb
pop
test
pop
push
cmc
sbb
jmp
movhps
jns
and
in
push
icebp
fldenv
pop
lahf
jae
test
and
mov
iret
test
lea
pop
fimull
add
in
cmc
mov
mov
cmp
iret
lsl
and
dec
add
bound
xchg
inc
pop
xor
pushl
inc
mov
test
cwtl
sbb
jge
mov
xchg
aam
sbb
adc
jp
xchg
push
jecxz
xchg
mov
cld
nop
shl
repz
imulb
or
cmp
scas
push
lret
push
stc
sbb
ljmp
mov
adc
outsb
stos
cmp
mov
loope
fs
sub
lret
push
insl
cwtl
xor
cli
jge
js
vpunpckhqdq
lretw
pop
std
bound
faddl
dec
aad
fwait
testl
sub
test
in
jmp
aad
fsubrl
stos
test
mov
fmull
sahf
fcoml
push
jno
cmpsl
mov
push
cmpsl
int3
lahf
clc
out
aas
popa
jo
leave
push
pop
mov
inc
insl
into
inc
or
jnp
ret
insl
or
outsb
mov
xchg
repnz
cli
leave
das
in
and
std
cmp
arpl
in
pusha
loopne
std
push
and
popf
dec
addb
aad
adc
sub
pop
jecxz
push
mov
in
and
std
enter
sbb
insl
mov
cmp
adc
xchg
jo
lods
cld
js
jge
lock
iret
hlt
mov
mov
lahf
cmp
or
mov
pop
push
mov
subb
mov
shll
push
in
pushf
imul
adcl
or
in
popf
clc
xlat
push
sbb
xor
inc
stos
es
hlt
sbb
lods
dec
shlb
sub
pop
lcall
test
xchg
or
xchg
jb
aam
adc
xchg
sub
jae
pop
inc
ds
in
jl
fisubs
or
push
or
rclb
dec
rorl
push
xor
xor
inc
hlt
repz
inc
cmc
outsl
xchg
loopne
adc
popf
jp
push
and
test
fisubrs
pop
ja
movsb
ret
test
popf
fnstcw
sarl
orl
fninit
mov
lea
sub
scas
sti
cli
sub
xchg
andl
subb
outsl
movsb
xlat
cmp
dec
jbe
jecxz
mov
in
out
insb
mov
int3
sub
jns
ficoml
xchg
imulb
mov
jg
cmc
loopne
movsl
jle
cltd
outsb
roll
sti
fnstsw
push
xor
jb
jle
adc
imul
xchg
dec
repz
mov
out
sub
and
jo
lcall
cmp
cwtl
xlat
jne
loop
mov
dec
scas
mov
add
cmp
and
xchg
xor
push
mov
fwait
aam
cmp
mov
inc
add
adc
adc
pop
push
jo
lahf
aas
adc
mov
add
or
leave
pop
jo
daa
or
cmp
repnz
adc
pop
add
inc
jbe
outsb
lea
or
mov
aaa
xchg
outsb
push
adc
ja
test
push
shl
mov
sub
ds
pusha
xorb
or
jae
fs
movsb
push
js
pop
lahf
shrb
dec
cld
pushf
call
xlat
cltd
rorb
sub
lods
arpl
dec
daa
ds
rol
jl
or
mov
mov
xor
inc
lret
testb
rcr
out
push
or
les
push
xchg
cmpsb
pop
ljmp
xor
fistpl
movsl
dec
lret
xor
cmpsl
mov
pop
loop
test
les
lds
sahf
add
push
cld
cmp
les
and
and
push
and
add
int
cmp
push
push
in
imul
lock
xchg
pop
jle
add
insl
and
sub
mov
imul
mov
cwtl
and
or
xor
sub
negl
stc
mov
sbb
rcl
xchg
aaa
inc
bound
notb
mov
jle
sbb
pop
xor
loopne
rolb
shll
inc
bound
pop
fidivl
fldcw
jnp
dec
call
mov
rcrl
xchg
sbb
leave
rcl
mov
mov
in
jno
in
xor
sbb
pop
fld
push
popf
or
add
mov
ss
roll
loopne
ret
pop
sub
jnp
ret
xor
movsb
loop
xor
clc
subl
or
lahf
ja
clc
add
push
fs
test
cmove
enter
push
iret
jo
and
jae
xchg
pop
inc
inc
dec
ja
sub
into
xor
jno,pn
fnstcw
jl
sub
adc
addl
xor
xor
cmp
mov
mov
movsb
ds
mov
sbb
lock
ret
je
mov
scas
lods
xor
in
icebp
popf
jae
jge
mov
jge
cmpsb
push
jle
sub
rcr
lahf
jo
sbbb
pop
pop
in
jb
data16
fwait
in
mov
daa
aaa
jo
mov
sub
or
popf
jo
jl
sbb
or
pop
fcomps
ret
add
mov
pop
test
cmp
cmp
inc
aas
sbb
rcrb
sbb
push
push
xor
out
test
out
inc
xchg
mov
movsl
push
cmp
sbb
mov
sub
or
mov
jge
scas
test
cmpsl
pop
pop
test
out
pop
jmp
ret
jne
ss
gs
inc
daa
out
adc
jmp
mov
inc
jp
ljmp
in
push
dec
ret
jg
and
jno
pop
jg
rolb
adc
jae
out
mov
popf
add
pop
jle
pushf
andb
loope
call
pop
ret
inc
and
cmpsl
ret
sub
fsubr
into
jp
mov
cs
sbb
jmp
sub
mov
into
lea
sub
jnp
xor
clc
out
int
mov
jle
add
aas
mov
lock
enter
sbb
shll
sti
lahf
add
ficomps
rcrl
and
or
mov
popa
push
iret
cmpsb
enter
mov
cmc
inc
scas
sub
inc
clc
adc
lods
adc
xlat
and
or
into
fstpt
dec
aam
lcall
inc
dec
fmuls
sub
cmpsl
imul
bound
lahf
xchg
cmp
or
dec
push
jb
lods
dec
inc
xchg
sub
imul
or
jae
popa
push
and
mov
jmp
daa
xchg
xor
daa
inc
fisubrl
jle
mov
cli
or
in
add
inc
dec
add
shlb
cmp
push
xor
sub
jns
pop
pushf
sti
ss
or
push
mov
mov
mov
mov
mov
mov
and
dec
in
xchg
insl
js
add
jl
cmp
adc
xchg
xchg
sarb
pop
fidivl
xor
and
push
das
add
pop
jbe
in
xlat
cs
or
mov
inc
int
popf
push
sti
loopne
or
js
mov
sbb
mov
add
movsl
sahf
pop
and
in
jle
dec
push
pop
mov
jo
jbe
loopne
pop
movsl
clc
jl
pop
push
test
aas
fwait
nop
ficompl
sbb
xchg
fcompl
rcrl
sbb
sarl
pusha
and
mov
pop
mov
jnp
inc
icebp
push
fs
pusha
clc
test
pusha
jmp
test
adc
sbb
xchg
iret
push
pop
push
dec
inc
mov
sbb
mov
imul
aas
sbb
xchg
push
sub
xchg
lds
xor
enter
sbb
sbb
loopne
in
ret
movsl
imul
sub
ljmp
lcall
xchg
xchg
jo
mov
dec
int3
xchg
dec
or
pop
orl
or
xor
cmc
cmp
adc
scas
test
mov
cmpsb
sbb
and
mov
stc
pop
jb
adc
int
hlt
scas
inc
leave
pop
lock
pop
inc
cltd
test
arpl
inc
ja
into
gs
iret
dec
or
sti
test
lcall
dec
mov
js
aas
inc
jne
mov
jg
sahf
add
push
daa
xchg
fisubrl
or
cmpsl
stos
mulb
mov
cwtl
mov
push
adc
mov
insl
xlat
outsl
xchg
in
mov
push
in
or
and
or
xchg
or
aas
pop
dec
xchg
jbe
lcall
mov
pop
pop
in
insl
push
push
mov
cmovae
ret
push
fcmovne
enter
aad
in
mov
pop
mov
ja
dec
pop
mov
out
je
mov
test
pop
jns
add
pop
inc
mov
mov
mov
aam
jns
cmp
adc
cmp
jnp
cmpsl
xor
mov
inc
xchg
lea
stos
mov
repnz
stc
xchg
mov
test
ljmp
mov
inc
jge,pn
mov
lcall
mov
out
mov
in
mov
push
aad
fisttps
inc
xorb
cmc
aad
sbb
pop
jno
cmp
pop
pop
pop
add
cmpsl
mov
in
stos
adc
cmp
fcoml
add
cli
lea
aad
dec
lods
sub
mov
and
lods
xchg
add
aas
jno
cmc
xchg
and
repz
and
mov
or
scas
add
xchg
dec
lods
lret
and
or
add
ret
lcall
gs
test
popf
inc
fwait
mov
lret
fisttps
mov
jns
xor
sbb
xor
sub
jbe
or
call
leave
jae
js
push
pop
jnp
inc
daa
aas
test
dec
insb
xor
jbe
mov
jne
or
cmpsl
push
mov
in
rcll
xchg
xchg
outsl
xor
stos
pop
fdivrs
sub
iret
daa
mov
int
shrd
out
shlb
insl
subl
cltd
pop
or
in
out
fbld
inc
sti
cmp
jns
inc
fstpl
mov
pop
jo,pn
xor
cmp
jb
xor
or
xor
mov
aas
outsb
sub
inc
push
cwtl
jo
test
xchg
dec
jg
stos
cmp
es
idiv
mov
add
pop
dec
stc
imul
cmp
mov
mov
ret
rorb
sbb
mov
cmpsl
adc
jle
fadds
inc
cli
jmp
pop
js
fists
add
cld
mov
mov
ficomps
inc
mov
arpl
out
stos
scas
add
iret
sti
jge
mov
push
xlat
cmp
pop
add
cmp
adc
add
lods
fnstsw
out
fwait
stc
jle
stos
lds
call
test
or
adc
cmp
rorb
fistpll
add
jne
popa
inc
inc
stos
sbb
add
jle
jge
fiadds
insl
adc
mov
xor
jne
ljmp
movsl
cmp
cmpsl
ret
inc
xlat
and
and
stos
movsb
mov
ja
cmp
push
lds
mov
test
xchg
jg
jnp
dec
mov
das
sti
dec
mov
subb
jmp
mov
mov
sahf
add
mov
pop
data16
add
sub
ds
dec
dec
fbstp
xchg
std
mov
fiadds
inc
inc
jae
mov
shl
call
pusha
push
inc
iret
rorb
or
dec
out
loop
add
ljmp
movsb
jecxz
jmp
cmpsl
ret
pop
js
or
mov
out
lcall
mov
out
repz
adc
js
jmp
ret
push
les
hlt
or
clc
mov
lret
pop
push
jnp
movsb
jmp
aam
jno
push
mov
pop
outsb
xchg
daa
adc
aam
int
mov
in
cmp
imul
in
jg
insl
popa
ja
rorl
and
push
loope
cmp
mov
sbb
repnz
pop
dec
leave
lret
pop
in
imul
sbb
pop
cltd
push
xor
sbb
xlat
adc
jo
sub
lea
lods
orb
jbe
add
scas
mov
fimuls
pop
mov
sub
in
mov
dec
inc
pushf
and
jecxz
mov
shl
pop
stos
ss
inc
inc
cmp
neg
in
adc
pop
add
push
dec
iret
dec
not
inc
test
fsqrt
pop
push
mov
ds
lock
mov
pop
inc
scas
loope
loopne
ljmp
nop
int3
mov
adc
nop
mov
xor
push
mov
data16
push
mov
out
add
dec
lea
mov
fwait
inc
cmp
adc
mov
add
cli
mov
or
shlb
mov
pop
xchg
shll
lods
icebp
xlat
pop
mov
sub
push
and
int3
sahf
pop
iret
xor
enter
test
xchg
sbb
lds
repnz
or
mov
ja
or
and
and
repnz
sbb
stos
push
fcomip
mov
out
pop
insl
lods
push
scas
mov
std
std
fildll
ret
cmp
mov
jo
mov
sti
push
cwtl
lcall
push
mov
pop
out
add
cltd
test
sub
pop
or
mov
jne
lods
inc
cmpsl
cmp
mov
inc
out
xchg
mov
inc
dec
out
jp
outsl
mov
xchg
pop
mov
rorb
les
mov
xor
fs
cs
loop
ljmp
xchg
repz
push
lds
jb
ja
jns
lcall
add
mov
xchg
pushf
sbbb
cmp
out
sahf
aaa
inc
inc
outsl
loopne
adc
cltd
lods
cmp
sub
dec
sub
dec
je
fnsetpm(287
jae
mov
sbb
adc
popf
add
cmp
xor
mov
jne
ja
or
sbb
xor
lea
lcall
loope
lds
imul
repz
subl
ljmp
jno
cltd
mov
mov
shrl
out
or
dec
jmp
push
sbb
mov
aad
mov
cmp
sub
addr16
sub
daa
inc
xchg
std
stos
inc
lret
dec
lds
fs
dec
or
imul
sub
cli
add
iret
je
mov
aaa
sub
cltd
aas
jne
xchg
push
adc
adcb
jge
stc
jo
jle
jbe
sub
mov
out
das
sbb
mov
sti
or
jmp
iret
leave
inc
div
into
sub
loop
pop
or
stc
pop
out
adc
adc
dec
loope
loopne
arpl
jne
testb
cmp
sbb
jmp
inc
and
sarl
mov
lods
sub
push
and
test
mov
push
cli
cmpsb
jae
xor
dec
addr16
push
leave
test
xchg
mov
cli
test
xchg
idivb
add
cltd
jbe
or
mov
call
daa
inc
into
or
js
add
xor
ficompl
movsb
iret
dec
xchg
insl
dec
nop
push
mov
ljmp
sub
cmp
lea
jecxz
andb
add
add
mov
inc
popa
push
mov
and
cmc
pushf
test
push
push
lea
je
cmc
call
jle
adc
in
push
mov
jb
popa
mov
mov
es
push
idivb
pushf
ror
shlb
dec
mov
shrb
andb
and
test
add
add
dec
pushf
add
sbb
pushf
ljmp
aaa
add
dec
inc
sub
outsb
ret
sbb
enter
daa
ret
dec
stos
hlt
in
sbb
fadd
inc
iret
dec
xchg
xor
push
lea
jmp
scas
fcoml
negb
movl
mov
andl
flds
inc
mov
xchg
xor
imul
inc
dec
fldl
pop
sbb
imul
pop
cmp
fucomip
mov
cwtl
cld
jg
push
and
or
lock
inc
iret
int
jo
gs
push
arpl
ret
gs
adc
xchg
movsl
xchg
cmp
inc
out
xor
xor
mov
dec
das
dec
mov
inc
andb
jnp
scas
in
sub
in
jns
call
xor
dec
das
mov
jne
aad
aam
xlat
call
shll
add
sbb
xchg
movsl
ljmp
inc
jno
add
add
or
daa
push
out
imull
movsl
leave
add
inc
out
xchg
mov
xchg
and
dec
loopne
pushf
pop
sub
outsb
push
test
xchg
pop
sar
andl
mov
insw
xchg
cld
mov
xor
lret
mov
jb
mov
sub
in
mov
push
int3
mov
dec
cmp
jmp
push
repz
sbb
sti
daa
sub
pop
fs
adc
pushf
cmp
adc
sbb
pop
imul
test
dec
inc
lods
push
adc
aas
push
out
mov
lea
je
push
pusha
adc
lea
pusha
push
jmp
pop
push
xchg
stos
outsl
out
and
stos
stos
dec
daa
lods
xchg
sarl
imul
adc
mov
mov
es
imul
pop
inc
xchg
mov
xor
pop
dec
or
inc
test
ljmp
ss
mov
fadds
movsl
sub
stos
push
movsb
xchg
jle
pusha
sbb
lret
stos
lds
jnp
out
push
mov
jg
or
mov
dec
movsb
and
or
outsb
rorl
xor
cli
decl
cmp
mov
xor
mov
sub
xor
lea
pushf
lods
dec
pushf
lea
jae
inc
inc
dec
neg
dec
inc
push
bt
ror
sar
add
mov
rcl
bt
ror
call
in
mov
push
je
loope
mov
xor
mov
jo
repnz
add
mov
mov
xor
scas
mov
push
in
push
dec
repz
imul
hlt
aaa
push
cmp
in
int
sub
jo
sbb
cmc
lcall
add
sar
scas
or
and
fsubrl
aad
lret
jne
push
cltd
loop
jg
dec
xchg
into
test
sub
cmp
add
inc
clc
gs
push
cmp
sub
pop
fisubl
jle
sub
pushf
xor
push
pop
pop
or
and
mov
xchg
sub
cmc
mov
rcr
not
sub
shrd
pop
dec
add
movzbw
test
xor
mov
bt
stc
sar
rcr
mov
pusha
pushl
repnz
jmp
inc
inc
or
sub
hlt
and
push
jle
imull
push
ja
pop
mov
and
pop
xchg
loopne
rcll
test
dec
ljmp
call
pop
mov
fcompl
hlt
add
inc
lret
jns
xchg
repz
inc
dec
leave
fsubrl
pop
shll
aas
int
and
stos
jno
jp
lock
outsl
jns
pop
push
aas
push
add
mov
hlt
cmpsb
add
xor
scas
jmp
sub
push
mov
imul
inc
and
cltd
js
push
cld
inc
mov
mov
sub
mov
icebp
add
lods
sub
aam
lock
sbb
mov
pop
arpl
je
dec
ljmp
inc
and
stc
xchg
add
int
dec
mov
or
push
test
stos
adc
dec
sub
or
inc
push
add
ret
mov
push
daa
daa
or
mov
jmp
mov
sbb
out
int3
les
mov
adc
sbb
xor
pop
pop
jmp
ficoml
pop
jle
mov
pop
shlb
loope
or
aam
mov
sub
push
lods
and
stc
add
in
adcl
sub
ret
inc
lods
cmp
gs
jne
movsl
hlt
js
ss
dec
lds
pop
outsl
inc
pop
jge
sahf
js
inc
lea
or
sub
xor
push
mov
fs
mov
lds
into
or
lret
notb
push
sbb
cmpsb
pop
pop
mov
xchg
call
test
inc
fmul
loopne
je
cli
rorl
xchg
daa
movsb
cmp
pushf
pop
pop
lret
push
jmp
scas
fsubrl
mov
xor
pop
fbld
jbe
jae
push
jae
test
and
xlat
pop
fadd
dec
xchg
lock
add
mov
adc
push
add
mov
xor
dec
movw
push
mov
lea
jne
shr
pushf
cmc
mov
cmp
clc
cmp
lea
jnp
ja
setle
pusha
mov
pushf
call
cmp
lcall
movsl
xorl
jle
dec
mov
loope
inc
jbe
fwait
jnp
xor
and
pop
xor
lahf
lcall
push
loop
pusha
clc
mov
aas
call
push
addr16
push
xchg
lahf
test
jnp
scas
pop
orb
jmp
pop
mov
xor
aam
or
fsubp
mov
mov
add
xchg
jmp
jne
push
xor
push
cmpb
and
cmp
cltd
lret
icebp
xchg
push
jae
sti
in
insb
dec
pushl
lea
call
call
rol
shld
shld
mov
stc
and
test
add
pusha
pushl
push
push
lea
jmp
fmuls
and
mov
push
testl
repz
fdivrl
lcall
adc
movsl
xor
pop
dec
jge
or
pop
push
jmp
in
push
fdivrs
in
call
test
xchg
leave
mov
stc
adc
mov
mov
add
fsubs
sti
cmp
mov
fs
inc
and
xorb
pop
adc
jo
add
adc
jge
mov
lret
mov
jecxz
out
lock
sub
rcrb
arpl
sub
pop
shlb
inc
shl
pusha
or
mov
icebp
add
pop
lea
add
mov
lock
lock
mov
imulb
mov
dec
cmc
dec
hlt
scas
xor
xor
sbb
xchg
loop
test
xor
mov
adc
lds
add
insb
and
notb
fdivs
shl
mov
imul
mov
and
or
test
dec
mov
stc
loopne
das
out
and
in
out
inc
mov
mov
movsl
xor
xchg
pop
push
jb
or
mov
cmp
mov
add
mov
sbb
fiadds
enter
cli
dec
cmp
sbb
nop
jnp
mov
test
sarb
ret
int
loope
aad
fldcw
cwtl
pop
pop
and
jmp
shrb
aad
adc
shl
inc
hlt
inc
insb
dec
mov
ss
sbb
and
mov
daa
lea
add
add
es
xor
jle
cmp
mov
cmp
rol
insl
pop
jge
lock
repz
xchg
mov
ret
dec
inc
push
scas
jne
xor
cmpsl
push
jle
lds
scas
cs
subl
aas
jecxz
insb
loopne
fimull
mov
outsb
jnp
xchg
mov
repnz
xor
pusha
mov
inc
push
insb
loop
outsl
loopne
lea
stos
imul
icebp
sbb
call
outsl
inc
mov
inc
and
out
adc
pushl
pushf
lea
jmp
call
out
pop
es
pusha
in
lretw
shrl
je
rcl
mov
sbb
pop
mov
lcall
sti
xchg
xor
mov
test
cmp
movsb
cmpsb
cmp
out
mov
add
fcmove
test
dec
mov
orb
insl
loop
adc
in
add
ror
les
les
xor
mov
lret
xor
pop
xor
xchg
xchg
bts
sahf
dec
scas
jle
xchg
sub
mov
sub
add
and
xor
ret
stos
arpl
cwtl
cmp
fisubl
jmp
jge
adc
xchg
insb
dec
adc
xchg
xchg
cmp
leave
jmp
cli
pop
repz
inc
repz
or
cli
cltd
mov
cmc
push
add
sbb
jo
push
or
cmp
inc
push
js
mov
into
mov
mov
cmp
adcb
iret
mov
mov
dec
ret
out
imulb
leave
sbb
data16
imulb
mov
jmp
add
test
lea
jne
setp
rcr
movsbw
bt
sub
das
cwtl
mov
sar
rcr
call
stc
fwait
shlb
sub
cs
push
mov
out
mov
adc
fwait
cld
pop
data16
sbb
and
and
cmp
addr16
mov
jge
aam
push
jmp
fstps
add
mov
iret
mov
lea
sub
in
subl
mov
and
pop
add
aam
push
pushf
inc
jmp
add
in
in
test
pop
rcl
cmp
fcoml
rolb
leave
shrb
rcr
push
fdivl
inc
inc
jnp
test
adc
lahf
loopne
dec
xchg
test
aaa
inc
fdivrl
enter
xor
xor
xorl
loope
nop
insb
push
icebp
mull
jb
pop
icebp
scas
push
xchg
subb
dec
push
scas
repnz
inc
insb
in
cld
ret
repnz
dec
sbbb
imul
std
pop
adc
lea
jbe
movzbw
bts
sub
sbb
neg
btc
mov
dec
xchg
sbb
mov
shr
neg
add
cmp
shld
xor
shr
rol
ror
mov
jmp
push
in
cli
and
es
aas
mov
pop
inc
xor
es
call
pusha
pop
inc
js
jnp
or
sub
xor
movsl
jl
daa
pop
mov
jbe
fldcw
mov
ds
in
clc
cmpsb
xchg
push
cmp
or
pop
pusha
imul
stos
push
and
aad
and
ret
test
aam
push
call
aad
loope
test
or
cli
pusha
repz
popa
addb
mov
xchg
test
cmp
sub
fidivs
xchg
enter
shlb
dec
mov
ds
addr16
or
out
call
inc
or
mov
xchg
int
test
in
add
addr16
xlat
push
pop
sti
rol
data16
inc
andl
jle
int3
jecxz
fisubrs
dec
inc
mov
pop
sbb
or
xor
loope
in
xor
iret
mov
sahf
xchg
dec
adc
loope
lret
add
dec
fs
mov
inc
add
and
sub
push
xor
andb
pop
sahf
mov
test
test
test
popa
push
cld
cmpsl
je
sub
lods
call
mov
jno
jno
in
jns
jg
xchg
mov
mov
dec
sub
sub
and
hlt
xor
in
dec
pop
dec
push
lods
and
es
dec
jge
jae
cmp
dec
pop
xchg
in
outsb
sbb
add
fnsave
pop
das
leave
inc
mov
dec
mov
mov
in
sub
not
cmp
insl
pop
dec
fidivs
pop
mov
mov
push
push
stos
xchg
pop
pop
cltd
inc
test
jg
sub
imul
mov
inc
sbb
xchg
jo
sbb
adc
sbb
int3
pop
cwtl
xor
out
xor
addr16
xchg
xchg
js
in
cmp
ror
cmp
mov
xchg
nop
pop
and
sti
cmp
out
push
lret
ljmp
sbb
mov
aas
test
test
sub
dec
sbb
xchg
repz
cmp
aam
inc
and
fsts
and
or
mov
xchg
stos
out
mov
mov
fcmovnu
xor
or
mov
loopne
shlb
xchg
in
lret
aaa
fisubl
rcll
shr
dec
stc
into
jge
stos
sub
or
sub
inc
fs
mov
pop
leave
xor
cmpsb
repz
add
in
arpl
lds
cld
lcall
sbb
andb
dec
bswap
imul
ja
pop
es
push
cmp
or
and
call
or
fimuls
gs
dec
sub
fnstenv
mov
push
loopne
ljmp
dec
dec
or
push
mov
ret
cld
jl
xlat
mov
in
sub
fsubr
in
in
pop
pop
cmc
rolb
imul
clc
sbb
inc
inc
pusha
push
sbb
sub
sbb
or
in
dec
cld
js
dec
or
add
fidivrl
inc
and
mov
cmp
lret
inc
leave
fwait
push
or
or
add
ret
pop
xor
pushf
sbb
mov
stc
sbb
mov
aas
les
lahf
xorl
int
fisubs
pop
neg
hlt
bswap
insl
and
rcll
push
fimull
sbb
pop
jbe
jne,pt
sub
push
ret
dec
xor
dec
or
sub
lea
int3
shlb
mov
mov
lods
adc
in
sub
les
rcll
les
push
scas
jge
cmp
jne
push
pop
ja
std
rcrb
push
inc
mov
fistpl
in
xchg
in
mov
fs
pop
outsl
push
jge
rcll
jo
cmp
push
cltd
jns
call
add
xorl
cli
inc
push
mov
push
pop
shl
adc
mov
shrd
mov
bt
cmc
jmp
add
mov
sub
stos
mov
rclb
scas
mov
mov
pop
mov
sbb
jl
mov
pop
cmp
ja
cmp
icebp
sbb
leave
mov
xchg
sbb
add
pusha
xchg
pusha
xchg
cmp
push
or
mov
pop
cmc
inc
in
loope
fdivs
mov
out
dec
cmp
mov
dec
inc
push
dec
inc
dec
xor
cs
insb
add
in
gs
xchg
scas
dec
xchg
ret
or
sub
xchg
inc
lds
sbb
lods
sub
mov
jb
pusha
rolb
add
out
imul
cmc
paddb
movsb
dec
push
movsb
cltd
xchg
adcb
lods
test
mov
fs
mov
inc
movsl
jnp
jmp
sbb
mov
xor
out
xlat
adc
cs
rolb
push
int
pusha
mov
mov
and
iret
int
hlt
adc
inc
xchg
in
orl
scas
pop
lock
jl
pop
shlb
bound
out
lcall
push
les
xor
sbb
adcl
sahf
call
mov
lahf
inc
inc
jecxz
add
shr
and
jle
jbe
shrb
mov
dec
outsl
arpl
inc
jb
add
fs
jne
sar
mov
bt
push
clc
clc
add
clc
pushf
cmp
test
movzwl
jmp
aad
push
adc
mov
scas
les
outsl
addr16
lods
jb
adc
push
mov
iret
jl
cmpsl
loop
sbb
lods
outsb
frstor
sub
fimull
mov
xor
add
sbb
mov
mov
lret
xor
fwait
xor
xor
jno
inc
sbb
arpl
test
sbb
pop
xchg
push
sub
add
jmp
add
xor
dec
pop
loop
jae
loopne
pop
add
mov
cs
mov
push
cmp
adc
xchg
sti
add
js
cli
jo
sbb
dec
mov
ror
push
inc
iret
dec
out
jno
inc
xchg
mov
sub
ret
out
addr16
shlb
xchg
xchg
fwait
jo
inc
add
loop
mov
lahf
add
insb
add
outsl
mov
fisubrl
jp
stc
cmp
movb
sarb
jns
cli
mov
stc
xchg
icebp
add
or
scas
pop
pusha
lea
ja
xchg
jmp
pop
adc
inc
pop
xor
decl
push
lods
dec
cmp
sbb
mov
lahf
pop
fidivl
aam
mov
cmpsl
and
ret
setbe
jecxz
sbb
sub
stc
lahf
push
xor
and
fmulp
sub
adc
sub
mov
add
mov
stc
and
fists
push
lds
pop
sbb
fstl
push
cmpsl
dec
sbb
xlat
jns
pop
dec
outsb
imul
add
outsb
or
or
mov
mov
lods
lods
lea
mov
push
push
cmpsl
pop
xor
lea
fsubrl
mov
mov
lcall
out
std
ret
xor
xchg
xchg
aaa
pop
cmc
outsl
wrmsr
loop
pop
mov
insl
nop
mov
lods
sbb
movsl
enter
xor
sbb
ss
lods
mov
cli
inc
inc
and
fcos
je
add
fs
jne
pushf
push
call
and
stc
add
lea
clc
pushf
pushl
add
call
push
fistl
das
xor
je
mov
push
jge
push
mov
sub
adc
push
lret
xchg
add
pushw
adc
arpl
in
add
popf
movsb
push
push
arpl
lret
ret
mov
ficoms
loop
pop
int3
test
ret
call
mov
outsb
in
and
fbstp
call
bound
lretw
loopne
negl
fcompl
cmpsb
add
xor
xor
in
sub
lock
xchg
ss
dec
test
inc
outsb
mov
mov
jmp
dec
push
fdivl
jae
jg
das
xlat
int
lret
adc
stc
inc
dec
mull
pop
add
push
lret
cmp
imul
jnp
pop
mov
mov
fsqrt
inc
xchg
outsl
jnp
mov
inc
mov
push
mov
in
adc
or
cmp
mov
pop
cwtl
rcrb
cld
push
cltd
and
mov
jne
xlat
cmp
mov
push
lea
jae
pushf
lea
jmp
gs
subb
in
pop
std
xchg
test
inc
sahf
out
pop
cmp
daa
or
add
es
push
dec
xor
lcall
lds
dec
mov
test
sub
bound
loope
dec
out
hlt
mov
jae
xorb
push
push
iret
or
push
xor
fsubl
or
imul
sub
xchg
push
add
cmp
xorl
and
lods
cmpb
addb
sbb
rcl
test
fcmovnbe
out
jp
ror
repz
pop
xor
adc
enter
shl
adc
or
daa
xchg
and
aaa
leave
push
cmp
mov
dec
jp
xchg
cld
mov
enter
add
dec
in
pop
mov
xchg
xor
fyl2x
dec
insb
pop
sti
xor
out
xor
mov
push
arpl
subb
ja
push
rcrb
xchg
xchg
enter
inc
adc
lret
mov
aaa
mov
fmul
insl
loopne
sbb
ss
insb
pusha
sti
and
ja
cld
or
cmp
sbb
sub
mov
rcll
and
stos
or
mov
sahf
jl
cmc
pushl
test
sub
pusha
lea
call
pushf
call
xchg
cmc
arpl
in
add
popf
xchg
cld
and
dec
stos
mov
push
decl
push
ret
mov
fnsave
jle
push
ds
fwait
test
out
fldl
lds
push
and
mov
fadds
adc
std
iret
in
js
ja
ja
cli
mov
dec
dec
in
pusha
pop
insb
faddp
movsb
orl
aad
pop
lret
or
or
loopne
push
add
out
inc
data16
aaa
shlb
and
fs
call
pushf
pusha
movw
lea
jmp
mov
mov
mov
call
mov
pop
cmp
dec
or
adc
push
test
cli
cmc
std
nop
mov
pop
mov
femms
cmc
pop
mov
arpl
add
popl
popa
mov
xchg
adc
xchg
mov
sarb
push
push
je
add
mov
cwtl
mov
cmp
loopne
mov
lret
xor
test
movsb
and
mov
and
mov
cld
cli
loope
adc
add
inc
arpl
jmp
fs
xor
fnsave
lods
sbbb
shll
push
jne
ror
mov
push
mov
mov
add
cmp
mov
jmp
shll
in
insl
or
call
pop
mov
repz
cmp
xchg
adc
sbb
outsl
pop
pop
mov
idivl
es
rcrb
enter
mov
hlt
and
mov
orl
xor
xor
loope
je
inc
insl
jae
lret
adc
lret
movsl
dec
xorl
or
jg
cmc
sub
enter
sahf
mov
call
jl
nop
popa
in
int3
jae
jl
pop
push
ss
call
std
mov
call
jae
out
mov
and
pop
loope
sub
pop
out
mov
mov
push
out
adcb
pop
xchg
leave
push
jge
ja
or
test
popf
inc
push
or
sbb
aas
push
cmp
sbb
adc
bound
fists
or
mov
sub
mov
pop
adc
lret
lcall
subb
in
or
sbb
push
arpl
push
xor
stc
push
jns
jns
cmp
gs
in
jbe
xor
pop
inc
outsl
xor
mov
pusha
mov
ret
cs
adc
cmpsl
out
sbb
mov
add
mov
sub
mov
repz
lods
fstpl
mov
pmaxsw
adc
jno
mov
nop
aas
daa
lock
lret
call
lret
jmp
data16
sbb
pop
cmp
subl
xor
std
jne
dec
jns
push
aaa
cmpsb
out
shll
mov
lret
xor
arpl
stos
shr
ja
and
cmp
jg
mov
jno
cmp
std
and
lret
mov
sbbb
fsubrp
push
mov
xor
mov
mov
fldenv
push
jno
jg
outsb
pop
and
adc
add
jg
dec
inc
inc
addr16
sti
mov
subl
or
and
inc
adc
shll
shlb
inc
std
adc
cmp
js
idivl
lea
ja
bt
shl
sub
sub
pushf
jmp
push
cmp
xor
enter
cli
mov
call
cmpsb
sub
xchg
xchg
xchg
aas
mov
cmp
test
inc
enter
mov
cmp
dec
add
mov
stos
pop
lock
sub
mov
sub
add
inc
cmpsb
sbb
out
insb
int
push
push
xchg
xor
sub
in
sbb
mov
push
and
rcrl
mov
lods
cs
mov
adc
test
mov
inc
jle
jb
xor
sub
inc
and
xchg
mov
adc
mov
mov
cmp
adc
bound
sbb
aam
jle
push
inc
jp
adc
xor
mov
movd
dec
adc
inc
sbb
xlat
sub
lea
int
xchg
lret
push
stos
cld
ljmp
ficoms
xchg
sti
mov
push
insb
cli
fnsave
jnp
sub
movsb
xlat
outsb
dec
sahf
sarb
xchg
or
sbb
daa
or
xor
dec
loopne
sti
aad
push
mul
cmpsl
mov
in
test
cmp
lcall
jle
cmpsb
adc
sbb
xchg
int
call
loop
cmpsl
xlat
and
fsubl
mov
push
je
mov
insl
cs
inc
test
sahf
arpl
xchg
jno
stos
loop
lret
dec
or
adc
push
sub
mov
adc
fisttpl
xchg
mov
fidivrs
loop
jo
adc
mov
stos
dec
cmc
dec
mov
sub
lods
imul
out
mov
push
ja
shll
rcll
sahf
rorl
sub
push
outsl
fisttpll
mov
aaa
inc
jbe
or
rcll
sbb
cmp
mov
push
inc
inc
leave
jp
ret
fwait
xchg
dec
xchg
lret
cmp
imul
sub
dec
xchg
hlt
mov
ja
mulps
pop
pushl
test
cltd
xor
dec
or
fsincos
fcomi
inc
xchg
pushf
mov
fs
movsl
lret
ja
mov
mov
loopne
je
fyl2x
jnp
mov
movq
pop
sub
test
pop
dec
test
jp
ret
dec
adcb
adc
aam
jle
adc
pop
insb
mov
repz
dec
pop
fildl
xor
push
push
mov
mov
scas
cmpsl
fldcw
sbb
fwait
pop
xor
aad
loopne
sti
or
inc
sub
outsb
ret
dec
mov
sbb
ret
push
jnp
sub
aas
jae
sub
das
lds
sub
xchg
nop
push
fdivrl
in
inc
inc
fidivrl
sbbb
les
sub
movsl
push
test
icebp
stos
daa
stos
ror
cmpsb
pop
xor
adcb
mov
repz
push
ss
lcall
stos
mov
pop
ja
fwait
popf
pop
lods
push
or
imul
adc
cmp
jmp
aaa
xchg
add
sub
cmp
inc
jmp
in
fmul
adc
shlb
pop
dec
mov
mov
jge
add
out
sti
int3
and
jmp
jne
test
pop
lock
mov
add
jg
popa
mov
js,pt
shrb
adc
inc
jecxz
jbe
sub
ds
jg
jbe
jns
pop
popf
dec
sub
dec
or
jmp
cld
jb
mov
or
jmp
daa
push
pop
cmp
in
jge
mov
dec
lea
js
adc
cmp
pop
ljmp
sbb
or
jb
pop
iret
add
inc
daa
cmpsl
xchg
enter
ret
out
mov
or
lahf
pushf
push
sbb
sbb
lret
movsl
lret
and
movsl
repz
jns
jl
daa
stos
jmp
mov
cmpsb
leave
adc
jl
dec
xchg
sahf
mov
inc
int
push
pop
test
xchg
rorb
push
push
xchg
cmp
mov
les
sbb
pop
in
int3
insl
mov
add
inc
gs
popa
jae
inc
jb
outsl
jb
call
ja
xor
insb
push
mov
jp
push
mov
cmp
mulb
adc
cmpsl
dec
repnz
shll
movsb
mov
dec
xchg
push
xchg
out
ja
adc
int
cs
inc
mov
and
sbb
jo
jl
loop
into
ja
popf
cmp
xor
push
jns
pop
hlt
imul
and
xor
sub
cwtl
inc
add
sub
xchg
xor
pop
sub
je
pushf
jmp
es
sub
push
cltd
insb
mov
inc
adc
xchg
push
stos
xchg
inc
and
in
orl
aam
xor
je
sbb
xor
mov
adc
scas
jb
lock
pop
int
pop
cli
shrl
sbb
hlt
movsl
mov
jmp
adc
dec
pushl
pop
ja
adc
jge
insb
add
les
sbb
imul
sbb
jns
push
imul
lret
add
in
fbstp
lds
adc
ss
push
pop
int3
add
push
test
fs
je
btr
bsr
mov
rcr
rcr
add
add
setns
bsr
mov
cmp
test
pushf
pushl
lea
je
dec
add
pushf
adc
clc
pop
mov
jmp
stos
insb
daa
ds
push
sbbb
and
iret
addr16
mov
shlb
scas
xor
sbb
cltd
es
cmp
ja
pop
adc
add
sbb
test
xor
test
aam
xchg
mov
ja
push
mov
add
jmp
add
xchg
fstl
fs
loopne
or
mov
in
xchg
test
xchg
xchg
sbb
aad
add
jmp
adc
adc
and
call
icebp
shrl
ficoml
xor
movsb
roll
mov
imul
mov
pop
lods
cmpb
adc
popa
sbb
je
test
xchg
add
mov
xchg
dec
sti
fistpl
lds
in
lret
fs
sub
jl
push
dec
rcl
cmp
call
scas
rcl
push
not
push
xor
inc
inc
out
movsl
out
fs
shl
and
mov
xor
sub
mov
cs
imul
push
xchg
addr16
mov
test
pop
jno
out
popf
mov
push
ja
and
sbb
mov
push
sbb
cmp
and
repnz
adcb
cmp
movsb
adc
mov
xor
pushf
inc
in
xchg
in
mov
testb
das
push
or
dec
and
jo
lret
mov
adc
insb
push
ficoms
mov
test
icebp
shlb
sti
std
ss
mov
lahf
jecxz
loopne
mov
addr16
jle
out
lock
mov
or
adc
test
rclb
mov
mov
lret
pop
and
inc
xchg
aas
adc
mov
mov
and
repz
inc
xchg
mov
std
cmp
pushf
adc
stos
cltd
add
adc
push
adc
mov
or
fstpl
push
mov
sbb
ret
inc
ret
adc
testl
ljmp
pop
gs
in
adc
shlb
pop
mov
test
sbb
adc
sbb
inc
mov
leave
jl
adc
mov
or
mov
cmp
fcoms
xor
insb
push
inc
adc
sub
xor
lea
movl
adc
popf
add
adc
or
enter
cmp
sub
dec
adc
ss
arpl
fnclex
or
rclb
in
pushf
adc
pop
idivl
in
jge
lea
cmp
cwtl
int3
pop
inc
fwait
push
push
add
xchg
cmp
mov
or
call
pop
insl
movsl
adc
mov
adc
jl
fbstp
sbb
leave
pop
jo
sub
push
mov
adc
iret
dec
sbb
cs
xchg
mov
adc
and
sbb
fisubrs
push
inc
mov
mov
jno
filds
pop
xchg
fstpt
out
pop
adc
scas
lods
cs
inc
cwtl
jle
mov
dec
mov
mov
aad
aam
pop
adc
test
js
mov
leave
jg
out
cli
adc
loopne
mov
leave
aam
rcll
sbb
arpl
dec
and
xor
sub
cmpsl
cmp
dec
adc
cmp
adc
jmp
fwait
sub
sbb
adc
popa
mov
inc
enter
shll
cmp
xor
mov
lods
push
cwtl
mov
lahf
inc
mov
imul
loop
mov
push
sub
mov
imul
and
stos
inc
adc
test
in
aad
or
or
adc
mov
jge
in
mov
int
sbb
nop
adc
iret
or
je
mov
push
mov
pushf
das
adc
mov
lds
adc
and
outsl
inc
xchg
scas
sti
fimuls
adc
jnp
dec
add
xorw
lock
jle
cmpsl
test
jns
mov
mov
shrl
les
test
insb
fistl
sub
mov
out
rclb
mov
dec
dec
cld
adcl
sbb
inc
lods
xorl
jne
das
jno
fisttpl
xor
adc
mov
xor
fistl
inc
scas
sub
das
outsl
sbb
mov
ja
jge
test
adc
push
and
push
dec
sbb
jl
adc
xchg
fidivrl
pop
jmp
xor
xchg
sbb
mov
cs
vmread
or
sub
lret
mov
fistl
xlat
sbb
push
test
xor
lahf
sub
and
inc
dec
dec
adcb
pop
add
xchg
inc
ljmp
out
mov
ret
xchg
lcall
or
int
xchg
inc
gs
xchg
adc
pop
inc
roll
adc
inc
scas
adc
stos
imul
shll
xchg
push
fadds
jne
fstl
pop
icebp
fcmovbe
cli
iret
sub
mov
adc
je
adc
cmp
popa
fidivl
out
adc
jnp
call
push
std
pop
xchg
loope
or
mov
adcl
mov
or
inc
fcompp
or
sub
fwait
jecxz
pop
sbb
mov
sub
xchg
and
aad
inc
imul
orb
xor
xor
aaa
sub
jge
adc
and
adc
inc
jecxz
stc
push
insb
fcompl
xchg
outsl
mov
cld
pop
adc
mov
in
repnz
mov
xor
pop
fs
sti
shlb
mov
dec
sub
shlb
mov
adc
ds
cmp
adc
iret
aas
outsb
jp
dec
jle
mov
mov
push
rolb
in
xor
jl
pop
rcrb
inc
pop
jns
adc
or
inc
mov
adc
rcrb
mov
lock
dec
mov
jmp
mov
xchg
iret
sbb
dec
adc
jbe
push
ljmp
loopne
mov
mov
lds
cltd
data16
cmpsb
push
fistpl
xor
xchg
inc
ret
outsl
mov
daa
aad
jmp
xchg
sarl
lods
adc
pop
or
orl
adc
in
aas
pop
mov
popa
lock
fs
dec
negl
stos
xchg
jbe
xchg
mov
lcall
adc
shll
mov
movsl
imul
lret
mov
icebp
scas
adc
mov
add
inc
loop
sahf
mov
ret
fwait
not
fistps
xchg
icebp
cld
dec
insb
push
jle
dec
jmp
inc
mov
cmp
repz
add
adc
ror
mov
adc
pop
in
shlb
dec
mov
xchg
lea
dec
adc
sbb
popa
cmp
adc
jo
aas
or
hlt
jg
xchg
outsl
gs
adc
pop
in
jmp
inc
popf
sub
hlt
mov
repnz
jno
pop
xchg
scas
popa
adc
jns
rolb
jbe
popa
xor
icebp
push
adc
xchg
cmc
dec
adc
fcomps
mov
mov
loopne
cli
dec
inc
call
dec
nop
popf
pop
dec
jo
sub
fcoml
jb
fs
xor
mov
loop
sbb
xor
xchg
lods
adc
mov
lret
adc
mov
call
and
xchg
nopl
fdivrl
adc
outsl
xor
cmc
adc
movlps
or
xchg
xor
bound
shll
scas
shlb
sub
lock
int3
cltd
repz
fnstcw
call
mov
arpl
shll
xor
jmp
and
dec
daa
rclb
xchg
jne
jg
adc
pop
sahf
pop
adc
mov
fbstp
add
adc
icebp
adc
out
xchg
xor
mov
sbb
mov
adc
and
mov
jmp
lahf
out
inc
das
rclb
clc
add
gs
adc
jle
cmp
call
stos
and
cmp
andl
xor
loope
cmp
xor
js
mov
sahf
int3
adc
mov
mov
sbb
imul
es
push
adcb
sbb
stc
daa
je
sbb
gs
imul
cmp
xchg
adc
orl
sbb
inc
pop
push
jno
mov
xor
pop
filds
loope
jns
adc
xor
xorl
mov
xor
xchg
xor
push
xchg
cltd
xchg
cltd
and
xor
push
cltd
mov
test
xor
push
mov
mov
and
xor
mov
cltd
ret
lds
xor
int
iret
push
rcrl
xor
fnsave
push
loope
jecxz
pop
out
jmp
cltd
out
icebp
and
xor
stc
xor
push
std
cltd
incl
and
xor
or
push
push
cltd
adc
and
xor
sbb
push
push
cltd
push
outsb
and
xor
in
and
and
xor
push
pop
fwait
jg
pop
mov
or
cs
and
xor
into
xor
push
add
jmp
mov
aad
or
ss
dec
jo
mov
add
jmp
xor
arpl
cltd
cltd
stos
and
xor
add
push
inc
cltd
push
and
xor
mov
in
xor
push
pop
cltd
test
pop
xor
xchg
cltd
stos
and
xor
sbb
mov
mov
or
xchg
xchg
cmc
fcmovnbe
idiv
cmpl
jne
in
or
stc
mov
scas
xlat
fcmovne
hlt
pop
popf
jecxz
mov
xchg
jmp
shr
flds
sub
jns
lret
fwait
or
xlat
sti
xor
xchg
test
lea
inc
mov
fdivl
cli
rcrb
popl
ljmp
mov
pop
add
out
inc
pop
and
sub
cmc
loop
jmp
dec
stos
inc
icebp
dec
xlat
mov
inc
push
jmp
stc
jmp
xchg
mov
add
push
dec
js
icebp
jae
fsincos
push
xor
adc
icebp
push
push
xor
mov
mov
fildl
mov
inc
xor
mov
inc
loop
dec
jmp
add
stos
lods
cmp
add
jae
dec
xchg
pop
adc
cltd
ja
sti
lahf
gs
fwait
cli
lods
push
gs
rcrb
push
sbb
or
pavgw
pop
push
inc
fsts
mov
in
in
mov
loope
leave
and
mov
ss
cmpsb
mov
mov
mov
push
jecxz
data16
pop
fildll
scas
sbb
jns
push
inc
insl
loope
ds
lcall
xor
fwait
stc
std
in
jbe
mov
mov
xor
cmp
mov
cmp
std
jecxz
or
push
cmp
rcll
daa
in
fisubl
jecxz
add
lods
mov
mov
testl
dec
add
dec
xor
test
hlt
aad
xchg
sub
xor
lods
pusha
rcl
cmp
into
mov
mov
jmp
or
or
hlt
fs
xor
mov
fildl
mov
movsl
inc
in
xchg
adc
frstor
xchg
imul
mov
mov
stos
jg
sub
mov
xchg
jne
sahf
cmp
inc
jne
test
push
add
popf
cmp
add
bound
gs
jmp
sbb
push
xor
test
add
icebp
sub
mov
xchg
sti
mov
mov
popf
mov
mov
pop
xor
xor
cltd
test
adc
jns
pop
xor
inc
pop
jp
icebp
cltd
icebp
push
and
cli
fistpl
cmc
xor
or
cmp
and
push
xchg
adc
xchg
mov
pop
cmc
pop
pop
fyl2xp1
cmp
jp
cmp
popa
xchg
pop
mov
xor
mul
fcmovbe
and
adc
xchg
sub
cmp
sub
xchg
icebp
adc
lds
mov
mov
pop
insl
adc
xor
xor
push
xchg
dec
stc
dec
pushf
sbb
lcall
ja
xor
mov
push
sbb
xchg
dec
xorl
add
cmp
xor
jg
imul
js
test
lcall
imul
and
pop
jb
aaa
jno
dec
xor
fnstenv
cmpl
inc
inc
and
pop
xchg
icebp
push
pop
popa
xor
dec
jae
adcl
inc
and
inc
xor
sub
push
insl
frstor
shll
xor
pop
repz
sub
inc
arpl
xorl
and
rcll
ret
mov
sbb
sub
xchg
push
push
aas
adc
and
inc
aam
inc
push
inc
and
les
push
xor
rcrl
xor
push
inc
lods
xorl
sub
lahf
jge
inc
sub
jns
pop
xor
stos
pop
mov
cmp
xor
xor
pop
lcall
leave
pop
xchg
lea
fldl
subl
xchg
jge
xor
push
xchg
shrb
jns
jne
aad
mov
frstor
jae
pusha
int3
or
add
push
push
jge
push
or
movsb
fs
jno
mov
adc
cltd
sbbl
push
daa
push
dec
mov
pusha
lea
adc
push
pop
lcall
nop
imulb
mov
xchg
mov
sub
push
and
sub
icebp
aad
dec
adc
icebp
mov
jno
xchg
and
sub
mov
or
add
mov
fcomip
lret
jbe
pop
pop
daa
pop
cmp
dec
sub
xor
jbe
pop
cmp
bound
adc
inc
mov
jle
stos
das
and
xchg
mov
ja
and
pop
adcb
pop
pop
xor
mov
jp
jb
aaa
fcomps
adc
in
pop
shlb
pop
mov
lcall
clc
mov
adc
cmp
cmp
sbb
hlt
outsl
mov
ret
cli
cmpsl
popa
jbe
aas
xor
ljmp
cmp
popa
mov
sub
cmpb
mov
addr16
sub
pop
stos
pop
jb
pushf
pop
adc
test
hlt
aas
in
jp
cmp
lahf
cld
adc
mov
jp
dec
mov
add
mov
mov
sub
mov
cmp
add
mov
mov
in
lods
adcb
or
xchg
aad
jmp
push
or
sub
pop
or
call
mov
jmp
ljmp
incl
dec
cli
mov
cli
and
dec
mov
xchg
sub
push
inc
adc
inc
push
xor
jno
adc
xor
dec
pop
adc
xchg
arpl
pop
shll
rcrl
flds
mov
fcomi
test
mov
mov
add
cmpb
cli
andb
insl
mov
mov
and
jg
jae
loope
and
test
aad
notl
insl
push
fnstsw
xorl
jmp
inc
push
sbb
icebp
jmp
pushf
add
das
stos
aam
mov
jno
pop
leave
lods
scas
xor
jmp
sub
stos
imul
lcall
and
add
adc
sub
jp
and
mov
push
icebp
cmc
out
fisttps
sbb
mov
pop
out
clc
jecxz
sbb
jmp
fldenv
push
sub
adc
das
mov
popa
pop
sub
repnz
inc
and
xor
lea
push
or
dec
mov
pusha
mov
sub
xor
addr16
add
shrl
jne
hlt
js
xor
jecxz
icebp
sbb
cwtl
imul
xchg
dec
inc
addr16
pop
mov
adc
push
test
push
xor
aaa
adc
das
push
push
pop
sub
push
sub
lret
lods
inc
scas
dec
and
pop
cmpl
movsb
xor
xor
sub
dec
mov
xor
jmp
bound
stos
sbb
movsb
cs
test
and
xor
ljmp
shrl
fs
push
jge
or
pop
sbb
insl
pop
mov
and
xor
xchg
dec
push
testl
cli
xchg
lcall
movsb
sub
sbb
and
pop
sub
popa
xchg
aam
adc
adc
cwtl
xor
sub
in
sbb
fmul
cwtl
mov
pop
pushf
loop
popa
aaa
adc
xchg
sub
or
or
mov
test
stc
sub
sbb
sbb
mov
sbb
mov
sub
adc
cwtl
inc
cmp
test
xchg
cli
fs
das
jg
adc
and
rorl
push
int
xchg
inc
xchg
loop
aam
adc
das
jno
sub
xchg
sbb
xchg
loopne
jge
mov
testl
adc
sub
es
xchg
ret
fsubs
and
int
mov
test
lcall
mov
or
icebp
sbb
push
daa
adc
sbb
adc
mov
arpl
out
and
add
cli
or
in
ss
sub
jno
sub
xchg
sti
adc
xorb
push
cmc
mov
add
out
mov
lret
cltd
adc
loop
mov
push
adc
jno
xor
cli
sub
or
fs
add
cmc
das
cmp
repnz
cmpb
ljmp
std
mov
mov
int3
andb
stos
imulb
loop
lods
xchg
cmpl
jp
sbb
xor
imul
sbb
adcb
add
cmc
repnz
es
bound
or
stc
sbb
mov
in
cli
addb
jne
cmp
mov
fsts
xor
nop
mov
ret
test
data16
mov
sbb
mov
lods
push
rorl
jle
popa
mov
cmpsl
xor
push
cmp
pop
test
dec
sub
xchg
subb
xor
daa
sbb
and
xor
jl
imul
xor
mov
and
push
lret
mov
das
sbb
sub
dec
andb
out
ficoml
inc
in
mov
sub
push
or
out
push
hlt
xor
and
sub
sbb
jp
and
xchg
cmp
iret
push
mov
add
clc
jmp
push
imul
fldenv
loope
ja
mov
and
sbb
shrb
dec
mov
imul
stos
jle
insl
sti
pop
mov
xchg
xor
adc
sbb
xchg
sbb
hlt
sub
xchg
mov
sbb
aas
ja
movsl
sub
adc
stc
loop
xchg
or
insl
lds
dec
fs
divl
sub
xchg
andl
or
cmp
sbb
rclb
pop
mov
sbb
int
sti
and
dec
sbb
repz
or
adc
adc
adc
fwait
mul
push
icebp
add
sub
dec
pop
mov
or
xor
pop
mov
rol
cmp
xchg
adc
pop
mov
js
imul
out
adc
fwait
cmp
sbb
js
idiv
and
cmp
mov
pop
data16
out
shlb
ret
sbbl
mov
pop
and
or
pop
dec
call
xor
ss
mov
sub
jo
call
or
fdivl
movsb
mov
xlat
insb
fisttpl
sti
adc
mov
sbbb
mov
jbe
js
or
lods
adc
repz
pop
pop
gs
push
lods
mov
or
out
push
cmp
sbb
ret
lods
add
sbb
pop
pop
insl
lods
jbe
enter
sub
pop
ret
repz
adc
cmp
insl
mov
pushf
je
and
sbb
xor
jle
cmpsb
imul
mov
mov
in
ss
mov
xor
mov
je
cmpsl
arpl
lahf
arpl
cld
cmpsl
pop
xor
jb
daa
repnz
and
push
or
frstor
sbb
je
shr
outsl
and
lret
jb
rolb
sub
hlt
and
shlb
and
push
call
jno
mov
stc
cmc
test
sub
push
popf
es
dec
std
add
clc
pop
push
fcoml
or
inc
push
loop
cmp
pop
cmp
sbb
jo
clc
push
xor
and
ljmp
aad
test
cld
cmp
repnz
das
push
push
lcall
hlt
cmp
sbb
and
in
mov
neg
inc
subl
or
arpl
cmp
bound
adc
rcll
xchg
pop
jbe
ljmp
imul
shlb
adc
and
add
mov
scas
pop
pop
outsb
sub
rol
aam
outsb
sub
cwtl
and
enter
dec
pop
out
out
and
insb
fcmovbe
js
fisubl
mov
and
mov
daa
shl
push
cli
ret
xchg
icebp
insb
in
jae
lret
insb
ret
and
decl
bound
insb
dec
push
adc
jns
loop
cld
add
aas
and
outsb
sbb
js
adc
aaa
in
inc
rorl
imull
add
in
adc
in
and
clc
rcrl
pop
lret
mov
addr16
leave
fisubrl
sub
pusha
sbb
push
dec
js
xchg
divb
push
addr16
test
sbb
push
xor
xor
xor
and
mov
push
lds
mov
mov
jecxz
push
mov
fs
jns
mov
push
or
fidivl
addr16
gs
inc
mov
notl
in
cmp
jbe
mov
mov
pop
sbb
inc
loopne
lahf
pop
das
pop
and
ffree
lret
cs
dec
fcoml
movsl
dec
sub
loop
divw
jecxz
xchg
sub
and
and
xchg
cs
cmp
movsl
mov
outsb
xor
pop
mov
push
mov
in
test
icebp
test
cmc
pop
mov
and
adc
test
es
test
jne
xor
and
pop
xor
pop
xor
and
ds
ret
shrl
out
div
fnclex
mov
mov
push
loop
mov
subl
mov
lea
pop
and
sbb
push
or
pop
mov
push
mov
mov
jno
mov
mov
dec
insb
ss
aas
and
xchg
lahf
test
cld
cld
clc
pushf
pop
push
insb
scas
movsl
push
daa
lcall
movl
pusha
inc
into
xor
sub
mov
testl
fisubrl
mov
clc
fidivs
push
adc
mov
pushf
jmp
xchg
sbb
sbb
loop
push
xchg
shl
jle
aad
pop
xor
fldt
push
faddl
fwait
bnd
xor
inc
xchg
mov
mov
and
and
xlat
loop
inc
push
in
dec
movsb
repz
xor
xor
test
pop
jmp
add
outsl
xchg
clc
pop
scas
cmp
xor
cmp
sti
jle
shld
sbb
cltd
outsb
loope
inc
push
xchg
xor
and
pop
fldl
xor
xchg
adc
or
mov
or
add
pop
rclb
fldpi
mov
test
pop
add
loop
ret
mov
es
sahf
int
shll
xchg
iret
cmp
fcomip
lret
ljmp
std
pusha
dec
xor
fidivrs
sub
aaa
and
lret
popf
pop
mov
hlt
out
mov
pusha
adc
repz
or
sar
pop
addr16
es
addr16
mov
mov
test
loop
pop
push
adc
xchg
in
push
lcall
ss
stos
mov
lcall
lcall
mov
mov
or
pop
inc
fimuls
adc
dec
xlat
clc
dec
cmp
jno
pop
loop
lods
add
cwtl
loop
je
push
inc
jnp
das
std
push
and
add
pop
jns
ljmp
dec
je
cmp
mov
sbb
xor
adc
popa
sbb
push
fsubr
push
sbbl
jecxz
cmp
mov
cmpsb
movsl
xor
xor
clc
movsl
push
or
cltd
adc
adcl
and
or
mov
fstl
int
push
sbb
or
push
or
sbb
or
mov
cmp
push
mov
cmpsb
clc
aas
mov
cwtl
pop
aad
lcall
int3
mov
mov
mov
cmp
xchg
add
movsl
mov
sbb
mov
movsb
add
js
ficompl
jnp
lds
ficompl
dec
clc
push
stos
fmul
aad
ljmp
flds
arpl
jp
jno,pn
xor
adcl
mov
sbb
or
insl
jne
ljmp
dec
pop
es
mov
popa
nop
and
sbb
adc
sbb
adc
cs
jl
xor
pop
lahf
dec
sub
cmp
or
repz
xor
into
dec
push
xchg
test
arpl
add
movsl
sbb
xchg
xor
pop
dec
js
or
ja
add
jnp
xor
das
scas
and
xchg
ljmp
push
orl
pop
jg
pop
push
out
push
sub
fs
dec
fiaddl
ljmp
jecxz
lcall
lret
loop
fstps
cli
and
repnz
and
xchg
dec
mov
jnp
push
fcomip
and
aad
dec
repz
and
dec
lahf
sub
inc
push
mov
xchg
jg
jmp
push
push
fcomps
in
bound
aam
mov
mov
cmpsb
dec
sub
popf
push
push
es
dec
xchg
or
mov
subb
and
leave
out
dec
cs
xor
adc
pop
div
jle
sbb
and
inc
leave
incb
add
inc
mov
push
in
roll
repnz
jl
pop
cmp
adc
xor
test
pop
sbb
or
sbbb
dec
fwait
and
in
iret
fwait
and
mov
inc
sub
lcall
dec
inc
push
adc
jge
icebp
dec
sbb
inc
xlat
lcall
sbb
jmp
std
in
pop
add
xor
in
int
push
push
ficompl
loope
es
int3
xchg
aad
push
pop
add
arpl
inc
mov
stos
or
xor
andb
imul
mov
adc
in
cmp
mov
cmp
clc
loop
mov
jbe
cmpsb
dec
mov
cmp
jno
mov
xor
scas
jbe
mov
mov
or
push
or
stc
test
icebp
ret
clc
lret
and
or
add
mov
je
inc
mov
mov
ret
mov
mov
mov
insl
fwait
sub
out
sbb
jae
inc
mov
cli
jae
add
mov
sahf
ds
push
inc
and
les
and
aad
ds
xor
and
push
daa
cli
add
js
and
ds
mov
addr16
mov
sub
sub
in
mov
jg
ret
ja
push
lods
sbb
incl
xchg
inc
push
jle
push
mov
jns
jns
adc
push
or
mov
mov
hlt
xchg
and
push
packuswb
cltd
cli
les
fstpl
push
adc
add
lods
rcrb
pop
lret
add
fisttpll
xchg
cmp
in
testl
shll
or
daa
nop
jle
cmpsl
test
js
cmp
sub
sbb
sbb
lret
mov
loope
cmp
fisubl
cmpsl
das
loope
or
cmp
add
mov
adc
loope
push
and
push
push
loope
nop
lsl
cmp
dec
jns
push
sub
mov
pop
xor
je
cmp
lea
aad
cmp
jge
pop
pop
hlt
pushf
inc
cmp
pushl
sub
loopne
outsb
cmp
mov
repnz
xor
cwtl
ss
adc
idivb
sbb
lahf
ss
or
cmpsb
cltd
scas
xchg
inc
xor
ss
or
test
pusha
mull
jp
and
inc
cmp
inc
ds
xor
flds
cltd
enter
ds
cmp
lret
sub
xchg
jo
dec
push
popa
jmp
mov
sub
mov
sub
push
sbb
pop
fadds
and
popf
xor
nop
scas
push
movsb
les
xor
pop
add
out
addr16
jmp
add
xor
xchg
xor
cmp
cmc
xor
cli
mov
aas
xchg
popa
xor
dec
sbb
xor
or
xor
dec
xor
mov
xor
or
push
sbb
movsb
mov
sbb
cltd
popa
jnp
xor
jp
inc
push
fisubrl
and
mov
xchg
add
xchg
add
imul
cmpsb
cmp
iret
adcb
movsl
sub
lods
jmp
push
mov
lcall
dec
rolb
dec
cmp
xor
cmp
cmp
cmp
sub
ljmp
out
inc
lcall
push
sbb
cmp
xor
mov
mov
dec
push
xor
cmp
dec
push
adc
xchg
fsubrl
cmp
mov
es
mov
push
xchg
cltd
repz
roll
fs
sub
cmp
mov
pop
dec
cltd
and
jbe
cmp
cmp
ret
cmpb
dec
inc
in
inc
fs
and
fcomps
jmp
xchg
pop
es
pop
es
out
into
mov
dec
cmpsl
imull
je
adc
mov
sbb
gs
jne
cmp
mov
mov
push
lahf
addr16
xchg
lcallw
and
lea
pop
sub
cli
xchg
sbb
js
stc
adc
xor
push
sarl
in
loopne
stc
and
fimull
clc
and
cmp
rcrl
xchg
pushf
lcall
xor
nop
popf
loop
outsl
inc
stc
scas
das
push
push
fisubl
jecxz
aas
loopne
and
shl
mov
xor
clc
xor
outsl
push
lret
jnp
lahf
mov
push
push
cltd
dec
outsl
scas
sahf
popa
imul
hlt
mov
cwtl
mov
jb
mov
pop
loopne
push
mov
js
jg
or
mov
mov
ret
xor
xor
mov
cmp
add
movsl
icebp
sbb
sub
fstpl
cmp
daa
je
sbb
paddb
push
clc
sbb
mov
sbb
cmp
es
loope
and
push
pop
mov
popf
aad
push
cmp
fsts
sbb
fwait
push
mov
dec
ret
adc
out
popa
adc
xor
cmpsb
icebp
loope
popf
cs
mov
out
xchg
imul
lret
mov
adcl
jmp
cmp
fstl
xor
fistpl
ja
xchg
ret
mov
lock
xchg
nop
or
lahf
repnz
inc
xor
loop
repnz
inc
js
mov
repz
xor
sbb
cmpl
shlb
fidivrl
lds
xchg
imul
mov
jecxz
inc
inc
cmp
imul
mov
into
push
dec
adc
adc
adc
mov
push
adc
imul
addb
adc
and
into
outsl
or
cmp
insb
add
push
shll
and
movsb
or
push
sub
and
or
xor
cwtl
or
outsb
or
inc
or
adc
sub
cmpsl
cmpsb
mov
xchg
pop
xor
add
xchg
movsb
je
or
lcall
push
pop
xor
fadds
aad
and
inc
xlat
xchg
push
inc
movsl
cmpsb
add
jbe
cmp
into
imul
rorb
add
pop
or
and
add
mov
daa
xor
or
jecxz
loop
sbb
cmp
lahf
or
addl
sbbb
aad
or
pop
fwait
hlt
roll
inc
pushf
xchg
push
call
push
mov
hlt
mov
and
mov
add
int3
add
inc
lahf
add
and
ret
pusha
loope
je
aam
or
cmp
add
rcrb
cmp
cmp
hlt
inc
or
and
xchg
mov
mov
iret
int
mov
cmp
jb
pop
test
mov
pop
pop
outsb
pop
aaa
mov
xchg
lret
int3
call
clc
push
cmp
mov
mov
lcall
rorl
pop
inc
jae
aad
int
call
add
fcmovu
decl
jp
jne
mov
pop
mov
sub
mov
xor
pop
cmp
cmp
aam
std
dec
lcall
mov
xchg
adc
xchg
insl
mov
out
ss
mov
sub
adcb
pop
push
loop
std
push
jmp
inc
cmp
loop
fstp
lods
xor
or
leave
imul
dec
cmp
in
ds
cmpsl
jmp
dec
imul
push
repnz
xor
mov
jecxz
arpl
enter
pop
pop
pop
in
movsb
mov
adc
cli
pushf
jo,pn
push
mov
push
xlat
sti
mov
pop
jge
push
cmp
int
loop
mov
mov
and
sbb
xchg
lret
jge
push
in
aad
adc
lahf
lahf
cwtl
rcl
pop
sub
enter
jnp
push
sbb
xchg
jp
stos
arpl
fsubrs
enter
dec
inc
movntq
dec
add
pop
sbb
in
int
fimuls
loop
xchg
ds
mov
stos
xchg
stos
xor
mov
xchg
push
and
push
dec
int
mulb
adc
fs
xchg
divl
cld
xchg
xor
and
fistl
or
ds
dec
and
ret
push
dec
andb
loop
idivl
adc
dec
push
out
push
idivb
idivl
or
orl
mov
cmp
sar
pop
and
pop
insw
fwait
dec
mov
inc
in
push
add
pusha
aam
and
testb
push
shl
dec
scas
test
int
test
smsw
jge
push
and
fsub
sub
std
pop
cmp
push
loop
cmc
pop
pop
mov
hlt
pop
or
jno
lahf
popf
cmc
cmpsb
jne
xchg
in
lods
sbb
cmp
aad
sbb
push
dec
and
lret
mov
pop
iret
not
fidivrl
fldcw
ret
sbb
mov
jp
sbb
es
sbb
pop
sbbb
xor
and
imul
push
ret
cltd
dec
push
outsl
call
pop
xchg
into
cmp
mov
hlt
jl
inc
pop
movsl
adc
push
ja
cld
icebp
scas
add
jns
andl
andl
jns
test
push
cmp
sbb
add
stc
aaa
rcll
psadbw
pusha
testb
cmp
pop
mov
lea
clc
add
aad
scas
push
jge
sub
imul
add
jnp
mov
lret
inc
mov
loop
in
jno
mov
mov
mov
add
call
aad
push
cmc
out
xorl
jno
scas
out
sbb
lods
icebp
pop
xor
or
out
int3
lods
push
fidivl
dec
aas
xor
jno
hlt
inc
inc
inc
in
push
xchg
call
in
les
pop
xchg
sub
jle
cmp
fucomp
sbb
shlb
push
xor
lcall
scas
stos
addl
pop
icebp
call
loop
mov
add
fwait
test
xchg
xchg
push
mov
push
jne
mov
ret
das
push
inc
nop
fdivrl
clc
mov
xchg
inc
lods
ficompl
xor
cmp
push
cmp
add
je
add
popf
fistl
fsubp
popf
ja
out
leave
xchg
leave
and
mov
in
jl
in
cmc
movsb
mov
cltd
dec
jmp
push
sbb
std
sbb
and
add
sbb
fsubr
cmp
lret
fwait
and
cli
test
or
cmp
aad
ds
cwtl
xor
lcall
jb
push
popf
jmp
add
daa
and
std
adc
ret
lds
fsubs
inc
scas
mov
popf
push
lods
stc
rcl
enter
shlb
je
ficoml
pop
cli
into
movsl
roll
scas
mov
cld
sbb
inc
jbe
test
sub
pushl
mov
out
in
mov
int3
fstps
ret
mov
cmp
inc
mov
xor
lret
jne
mov
mov
xor
xchg
and
mov
lods
movsb
mov
mov
in
adc
int
jne
cmp
mov
leave
lods
jge
add
mov
sub
mov
adc
stc
pop
inc
xor
ljmp
clc
pop
loop
pop
or
xchg
cmc
sbb
cmp
and
xchg
icebp
aad
add
jecxz
or
fldenv
push
repz
mov
add
jle
and
jp
adc
cli
mov
lea
push
jecxz
repnz
bound
cmpb
repz
cmp
lret
add
aad
loope
nop
faddp
sbb
cli
dec
test
mov
push
loope
jle
imul
pop
adcl
shlb
loopne,pt
arpl
mov
push
jo
jmp
mov
cmp
push
push
repnz
in
pop
std
mov
xchg
fnstenv
sub
jp
xchg
sbb
cltd
in
push
test
lods
push
mov
addr16
mov
and
jmp
scas
dec
and
xchg
sbb
adc
sub
mov
inc
and
dec
js
lret
mov
loop
in
rol
cwtl
cwtl
jo
mov
lods
sub
mov
pop
fnstsw
aaa
ror
mov
aaa
xor
repz
jecxz
jb
cld
jle
cmp
movsl
push
cmpsb
jb
nop
frstor
lods
mov
and
adcl
push
aam
roll
flds
sub
fnstcw
shlb
pusha
cli
fisttpll
sbb
addb
ret
movsl
sub
arpl
insl
aad
sub
repnz
loop
and
fninit
ds
loopne
bound
daa
sbb
jmp
push
xor
notb
jb
pop
fstpt
lcall
xor
into
imul
popf
push
xor
pop
es
lock
jb
insb
bound
push
and
std
push
cmp
pop
mov
cmp
cld
gs
xchg
jmp
dec
loopne
rol
and
loopne
and
jmp
roll
dec
cmp
aaa
movsl
fyl2xp1
fsts
push
scas
xor
xlat
dec
xchg
rcll
and
and
jo
imul
cmc
je
xlat
jmp
movsb
add
hlt
jecxz
xor
xchg
mov
xlat
push
and
xor
or
outsb
and
adc
fwait
rcrl
dec
cmp
cli
pop
loop
cltd
cmp
and
std
xchg
adc
cmp
jmp
xor
sbb
cmp
es
sarb
xor
jbe
lahf
out
dec
xchg
sub
sar
lcall
popf
fs
sbb
lcall
mov
cmp
push
shrl
popf
rorl
shlw
mov
cli
push
push
shl
mov
and
ret
sbb
push
pop
loope
or
test
insb
lcall
or
in
cmp
cld
xchg
pop
adc
rorl
mov
mov
lar
mov
jmp
aad
roll
push
les
mov
xchg
imul
aas
loop
sar
dec
xor
mov
adc
push
shll
xor
pop
repnz
jge
icebp
or
popf
push
xchg
xchg
cld
iret
rorb
outsb
dec
pop
repnz
gs
hlt
pop
iret
daa
js
sbb
xor
das
loop
les
mov
ds
iret
in
fcoml
ss
or
jmp
pop
fwait
push
pusha
mov
je
out
ret
int
pop
jb
out
inc
fistpl
into
push
jl
fidivl
subl
push
adc
out
pop
icebp
fs
push
loope
add
ss
dec
jge
dec
imul
jge
movb
lods
test
add
inc
int
adc
loopne
aad
movb
addb
lret
jge
adc
ds
in
pop
adc
popa
mov
arpl
xlat
fcoml
repnz
arpl
mov
or
cmpsl
fimuls
lea
mov
cli
pop
or
add
sub
sbb
push
xchg
and
leave
les
vmwrite
cmp
mov
push
mov
and
pushf
xor
push
je
dec
push
sub
xchg
std
sbb
js
or
dec
mov
sahf
and
dec
push
bound
rol
push
mov
test
sahf
ljmp
xor
lds
jecxz
mov
and
hlt
push
cltd
xor
sub
dec
aam
xchg
fwait
xor
xchg
sbb
test
or
ficoml
fldcw
pop
sbbb
xchg
add
xchg
lahf
xor
js
or
push
mov
rorb
popl
and
popf
shll
push
xor
daa
cld
mov
push
movsl
and
lcall
adc
cmpsb
pop
push
test
mov
and
mov
lcall
jb
or
popf
adc
test
je
mov
in
lods
fwait
sub
add
mov
insb
jp
popf
inc
test
je
mov
sbb
xchg
lahf
mov
lcall
hlt
jb
and
xor
fistpl
lcall
push
insl
pop
sbb
mov
mov
mov
or
aad
cmc
iret
dec
push
les
push
push
nop
les
nop
mov
add
mov
pop
push
xchg
stos
xor
push
dec
xor
or
in
sbb
mov
xor
mov
rclb
xor
aam
mov
xor
mov
xor
mov
test
fldcw
lret
bound
mov
xor
dec
pop
xor
scas
add
add
sbb
inc
jae
scas
sub
xor
push
xchg
scas
xchg
push
scas
push
lahf
scas
sbb
lods
out
sbb
daa
pusha
cmp
in
xchg
xor
and
stos
stc
pop
sub
cmp
mov
pop
or
push
pop
icebp
fldenv
jl
mov
push
push
xchg
and
push
or
xor
mov
xchg
movsb
or
jl
pushf
inc
xor
int
fbstp
gs
xchg
test
or
jne
iret
and
cmp
daa
push
xchg
stc
inc
add
cld
fs
xor
popf
push
aaa
loop
test
sbb
mov
lcall
sub
and
test
add
loope
or
out
pop
lds
das
jp
or
xchg
js
xor
imul
cmp
add
adc
fcomps
xchg
fwait
dec
mov
lods
es
sub
out
icebp
addl
pop
popf
call
cltd
loope
outsl
or
insb
test
cmpsb
aad
push
out
movsl
movsl
int3
out
inc
je
rorl
std
cmp
test
sbb
popf
movsl
mov
hlt
test
icebp
sbb
or
and
addr16
cltd
inc
adc
in
dec
xchg
jbe
sub
lahf
xor
stc
add
and
pop
pop
xlat
xor
cmpsb
xor
aaa
enter
jb
add
sub
mov
fiaddl
sti
outsl
xchg
std
sti
inc
das
adc
in
lock
shrl
mov
mov
cmpb
or
jbe
mov
sbb
das
dec
mov
hlt
mov
vsubpd
sub
mov
test
add
cmp
ss
push
or
sti
movsb
inc
or
sbb
or
dec
pop
loope
pop
lea
lcall
mov
call
cli
lahf
loopne
push
movsl
xchg
and
cmp
fs
scas
pop
das
mov
pop
cmpsl
rcrl
push
imul
push
aaa
add
fimull
aad
mov
jno
ret
xlat
aad
lahf
test
mov
mov
dec
test
adc
xor
inc
andb
cltd
mov
fiadds
cmpsb
sbb
mov
loop
popf
mov
xchg
push
hlt
xor
push
or
cld
xor
cmpb
xorl
repnz
pop
fiaddl
arpl
inc
push
inc
iret
aas
loop
scas
fwait
bound
mov
ljmp
mov
xchg
dec
mov
loop
pop
push
pop
cltd
or
sahf
pop
cli
push
aam
ja
ret
es
test
xor
jbe
xor
and
xor
aaa
sbb
jne
or
cli
enter
inc
fmul
sub
add
pop
loop
icebp
stc
mov
je
add
fwait
lds
fcomps
scas
cmp
mov
ret
xor
mov
jl
add
stc
pop
in
and
ret
inc
es
and
mov
ret
int3
movsb
xchg
scas
cmp
out
movsl
icebp
jp
insb
pop
dec
pop
call
popf
sbb
mov
jecxz
outsl
jne
cmp
cltd
adc
imul
je
pop
xor
rcrl
sbb
xor
sbb
pushf
sbb
adc
fcmove
stos
sbb
and
inc
insb
and
mov
js
or
adc
movsl
and
jp
lahf
movsl
mov
hlt
pop
xchg
daa
cmpsb
dec
xchg
mov
inc
ja
aaa
in
out
jmp
gs
xor
xchg
ds
pop
sub
xchg
cmpb
inc
jecxz
cmp
dec
popa
and
dec
repnz
push
and
inc
add
cmp
ret
xor
into
or
pop
cmp
sahf
adc
dec
mov
xchg
add
popa
bound
pop
fsubl
out
xchg
shlb
nop
xor
js
or
lds
addr16
jp
mov
push
sbb
test
pop
push
push
repnz
add
jp
xchg
movsb
test
push
jg
inc
arpl
aam
lds
add
jae
mov
cs
jp
mov
jg
test
dec
and
fmull
ja
xchg
mov
and
adc
lea
out
xchg
cs
testl
xchg
mov
sbb
popf
sbb
sbb
mov
cltd
inc
mov
push
and
pop
enter
adc
adc
loop
lcall
cmpsl
xor
repz
cmp
ja
shll
xor
les
mov
test
popa
js
arpl
lods
cmpsb
push
jecxz
or
int
mov
stos
les
pop
jo
push
nop
mov
sbb
jo
mov
pop
mov
arpl
or
int3
imul
ret
loop
movsl
or
pop
aad
int3
lret
sub
in
loope
or
xor
out
pop
xchg
loop
pusha
movsl
mov
sub
or
mov
xchg
push
lret
ret
sahf
test
in
sub
loop
add
xlat
test
push
xchg
ret
mov
sub
sti
lret
movb
pop
mov
xchg
fdivs
fisubrl
inc
fstpt
lods
cmp
adc
sbb
mov
shlb
xchg
lret
rol
jmp
sti
mov
movsb
xchg
push
lds
mov
and
push
xchg
dec
xor
vandpd
lret
dec
lods
shl
mov
mov
push
cwtl
daa
mov
lret
jp
push
mov
in
push
push
addr16
int
leave
xor
xchg
pop
xchg
dec
cmp
mov
adc
xchg
iret
xor
test
or
out
mov
xor
aad
sub
and
test
jle
xorb
xchg
mov
inc
mov
jg
in
addr16
mov
movsl
in
sbbl
xchg
sub
test
filds
repz
cmc
and
push
mov
faddl
shl
xor
orb
test
push
andl
or
popf
mov
outsl
sub
stos
fisubl
repnz
shll
sbbl
adc
mov
repz
cs
mov
mov
or
enter
push
and
lods
add
mov
add
xor
ljmp
add
ljmp
rcrl
sbb
push
cmp
xorb
xchg
push
xor
ficoml
loop
and
mov
mov
fldl2e
dec
aam
push
xor
test
aaa
inc
cltd
fwait
mov
aas
nop
push
cli
or
pop
xchg
cmp
push
mov
ljmp
into
sub
stos
sbb
and
shl
sbb
lret
jbe
sbb
add
jl
movsb
add
lret
rclb
push
jne
outsl
sub
mov
lods
push
pop
ficomps
js
arpl
push
jg
xlat
mov
mov
lods
rcl
sbbl
mov
lock
sub
push
mov
or
gs
imul
jge
rcr
push
lcall
fld
and
xchg
xlat
xor
lret
xorb
mov
jp
outsb
loope
sti
xchg
jge
in
adc
pop
ljmp
mov
pop
cltd
adc
push
inc
jge
mov
cmpsl
pop
sub
and
xor
adc
daa
mov
push
jns
adc
outsb
enter
push
inc
and
mov
cs
movsb
push
cmp
push
pusha
in
or
loop
add
or
lret
movsl
imul
pop
or
lcall
and
xor
jns
push
add
jns
xor
and
jge
xchg
loop
mov
xor
mov
movsb
jae
lods
add
outsl
push
push
lcall
cmp
xchg
xchg
ja
inc
ret
dec
dec
pop
pop
xor
ret
lods
sub
cmp
call
dec
pushf
lds
sbbl
xchg
adc
ja
xor
jne
cli
inc
mov
sbb
dec
enter
adc
es
stc
out
cmc
pop
xor
pop
imul
mov
or
add
subl
push
jbe
pop
dec
cmp
xchg
pop
in
pop
inc
mov
and
repnz
push
push
jae
loope
sub
push
gs
jae
hlt
jae
push
repnz
divl
push
test
stos
aaa
and
sub
daa
dec
xchg
inc
jmp
pop
sub
jno
inc
int
push
jbe
lcall
hlt
jge
mov
insb
hlt
push
inc
loopne
sbb
loopne
andb
mov
sub
bound
ljmp
push
add
adc
sti
pop
ja
inc
call
pop
inc
in
inc
jnp
push
dec
aad
stc
aaa
xor
xchg
imul
pop
fcmovbe
jmp
call
sbb
sbb
sbb
xchg
loop
outsl
stos
jle
iret
sub
mov
pop
jp
xor
outsl
dec
and
outsl
lahf
and
inc
mov
bound
sub
push
dec
insl
in
in
adc
mov
jno
lds
sub
and
sti
popa
shll
and
imul
cs
cmp
je
mov
imul
push
pop
inc
push
int
imul
push
cmp
xchg
xor
dec
imul
cli
in
and
pop
jno
movl
mov
shrb
lret
xor
bound
and
test
pop
popa
sbb
dec
hlt
dec
mov
cmpsl
hlt
cs
mov
test
imul
int3
repnz
lds
and
xor
sbb
pop
movsl
sti
ljmp
or
sbb
mov
xchg
jne
and
addr16
and
into
mov
dec
dec
and
adc
mov
icebp
pop
rorl
add
mov
gs
in
icebp
push
mov
shrl
fxtract
jp
jecxz
ljmp
mov
aad
xlat
cmp
arpl
dec
test
mov
mov
mov
push
leave
mov
pushf
cmp
or
insl
xchg
das
rorl
arpl
mov
add
std
sbb
dec
arpl
and
arpl
daa
aas
cmp
push
cmp
xor
arpl
out
popa
sub
int3
or
pop
adc
fsubs
popl
mov
xchg
popa
je
popa
sub
mov
inc
and
int
pop
loope
bnd
ret
xlat
lods
and
and
jmp
mov
pop
sarb
mov
lcall
mov
pop
pop
cs
fisubl
xor
inc
xor
pop
cs
inc
add
scas
xor
scas
pop
incb
test
into
outsb
mov
xor
jne
fcoms
sub
lret
ret
mov
or
xor
rcrb
pop
stc
arpl
xchg
adc
sub
popf
lahf
or
aas
jo
jo
pop
lods
adc
dec
sbb
loop
fdivrs
pop
ror
pop
bound
pusha
lahf
pop
fisubrl
stos
stc
xor
clc
push
out
dec
adc
xchg
iret
sbb
or
sub
cmp
sti
loopne
incl
cld
rcl
sub
pop
cwtl
jbe
push
sbb
mov
xchg
enter
std
aad
pop
sub
jbe
fsubrl
cmpsl
pop
add
push
dec
xor
out
push
lock
dec
mov
sub
adc
or
sub
aad
subb
mov
xchg
ja
mov
sar
xchg
xchg
sbbb
ljmp
shrb
xor
into
cltd
cs
sbb
arpl
mov
std
ret
mov
imul
repz
jns
jbe
pop
and
cltd
sub
dec
sbb
sbb
divb
sti
cld
sbb
dec
loop
sub
mov
or
push
imul
sbb
outsl
pushf
add
xchg
clc
push
jo
test
imul
ret
ja
ret
sbb
xchg
push
test
ret
or
bound
push
or
and
inc
jne
or
inc
sbb
adc
xchg
cmp
cld
aas
cmp
cld
adc
loopne
dec
cld
out
mov
scas
inc
push
cmpsb
jb
lcall
lret
sub
ljmp
jecxz
dec
push
sbb
xor
push
sub
xor
sbb
or
sbb
xor
es
xor
xchg
imul
fwait
rcrl
push
cmp
lret
arpl
xchg
add
mov
aad
popf
dec
mov
sbb
scas
jle
sub
ret
pop
or
cmp
mov
push
pop
and
imul
mov
clc
push
xor
push
jp
aaa
shlb
pop
data16
push
sub
fwait
outsb
jne
mov
lds
dec
daa
lcall
push
out
in
and
je
ljmpw
push
stos
push
call
pusha
orb
dec
stos
mov
fs
cmpb
stc
lods
mov
xor
ds
sbb
sub
or
scas
inc
push
in
imul
divl
stc
test
pop
ret
push
push
cmp
push
sub
sbb
sub
inc
fsincos
xchg
push
stos
loop
push
fnstenv
pop
fistpll
dec
iret
cmpb
inc
bound
jl
add
ret
sbb
jg
pop
jmp
shrb
into
xchg
lds
mov
lods
pop
cmp
popf
aaa
mov
push
push
lret
mov
xchg
mov
push
popa
repz
pop
andl
mov
xor
push
jnp
in
in
je
mov
icebp
rorl
add
cmp
adc
out
lahf
popf
mov
jne
jecxz
adc
mov
push
popf
dec
mov
notb
in
ficoms
cmc
stos
test
fistps
jbe
cmpsb
ljmp
cmp
jg
shl
or
ja
movsb
pop
and
lea
mov
jmp
test
push
stos
aaa
sti
inc
mov
and
cmp
lock
movsl
cmp
out
sub
mov
push
out
sub
dec
jge
cmpsb
xor
arpl
fwait
inc
push
cmpsl
dec
rolb
insl
rol
dec
andb
iret
pop
fldt
fldt
cmpsl
jle
mov
popf
dec
xchg
xlat
fldcw
mov
mov
pop
inc
sbb
inc
push
mov
insl
lcall
push
jb
cmc
in
mov
xchg
bound
setae
xchg
pop
cpuid
sub
inc
testl
xor
adc
sbb
sbb
mov
mov
sbb
jp
fcoms
sahf
jmp
and
jp
fidivs
dec
mov
lret
cmpsb
shl
mov
faddp
push
inc
and
stos
push
lock
dec
jle
mov
mov
cld
xor
clc
fisubs
fsub
andb
fmull
push
jno
push
jnp
jo
js
dec
movsl
push
jmp
and
push
or
add
dec
fsubs
icebp
mov
xorb
ret
push
xchg
xchg
inc
xchg
jp
jb
loop
fbld
push
sahf
imulb
lcall
push
jp
mov
xchg
jns
loop
clc
or
push
sub
cmp
push
lock
sbb
xchg
sbb
xchg
xchg
fnsave
and
xchg
push
pop
pop
lock
fildl
fadds
scas
or
inc
xor
and
lret
mov
and
stos
xor
aas
js
or
xor
hlt
add
inc
shlb
xchg
int
mov
daa
jae
xor
aas
cs
inc
pop
cmp
inc
gs
into
shlb
bound
adc
in
cmp
push
xchg
cmp
je
inc
push
sub
daa
je
and
xchg
popa
cmp
or
dec
aaa
insl
and
addr16
xchg
test
add
xchg
xor
out
cmpsl
xor
xor
xor
loop
add
inc
push
hlt
stos
movsb
mov
test
xor
loope
mov
cmp
push
and
cltd
mov
mov
xchg
loopne
arpl
and
xchg
lods
xor
jns
add
das
jmp
push
fmull
enter
push
add
insb
movl
scas
fdivl
cmp
jnp
mov
mov
movsl
sub
or
rol
gs
es
mov
mov
xor
lds
and
add
inc
cltd
jg
sbb
mov
gs
ret
in
adc
fidivrs
xor
add
mov
ds
mov
ret
sub
mov
sarl
shrl
sub
pop
daa
lods
mov
push
pop
rol
shrl
daa
sbb
lahf
shll
mov
aad
daa
jge
and
and
and
fldcw
fimull
pop
push
mov
push
inc
les
insb
jg
inc
test
fwait
and
xor
and
or
stos
sub
xacquire
cmp
dec
repz
mov
ljmp
pop
int3
cmpsl
jmp
push
and
loope
xchg
fmull
jb
sbb
lahf
lock
rclb
xlat
mov
push
and
mov
sahf
ret
sbb
push
pop
sbb
or
sbb
xchg
in
repnz
mov
mov
pop
sub
lahf
in
xor
mov
mov
push
repnz
shlb
jmp
push
pop
scas
rorl
sbb
and
jnp
mov
jnp
add
cmp
subb
repnz
push
in
sub
scas
mov
out
orl
xchg
add
xchg
sbb
or
call
rolb
test
test
adc
jo
xor
and
dec
fisubl
jge
subl
jne
pop
pop
pop
lds
out
push
or
mov
imul
sahf
sub
mov
inc
push
cmp
jmp
loope
mov
lret
andl
lret
lock
cmp
out
inc
sub
mov
or
imulb
jge
imul
insb
aas
cltd
pop
insl
test
jmp
xchg
mov
and
stos
jl
mov
out
cmpsb
xor
push
inc
les
hlt
add
loop
mov
lcall
mov
fs
insb
mov
adc
imul
inc
mov
andnps
ljmp
jg
mov
sbb
pop
scas
movsl
js
push
ljmp
or
fnop
lds
fcmove
imul
mov
dec
testb
mov
andb
mov
inc
cltd
push
fisubl
filds
insl
sub
aad
fimull
sti
and
stc
adc
sub
jl
and
ret
mov
ret
add
inc
mov
cld
mov
and
dec
mov
mov
xor
mov
bound
lret
fidivl
sti
sbb
add
in
xchg
xor
xor
add
lret
sbb
gs
push
dec
ficomps
aam
add
repnz
inc
jecxz
ljmp
call
leave
dec
divb
shll
jae
mov
push
xor
and
and
push
push
mov
in
pop
in
aas
pop
sbb
pop
xchg
jge
rorb
pop
push
rolb
bound
pop
je
pop
and
shlb
sbb
add
lods
or
fldt
fstl
into
pop
inc
bound
aas
out
adc
stos
daa
and
hlt
inc
or
lahf
inc
out
xor
stos
adcl
and
mov
lods
addb
sbb
xor
popa
jb
mov
cmp
fwait
push
add
mov
add
pop
sbb
push
dec
in
je
pop
cmpsb
or
add
mov
add
adc
outsl
pop
cmpsb
rcr
sub
js
cmp
stos
mov
and
and
sar
mov
hlt
adc
or
mov
add
dec
sbb
mov
iret
adc
ret
cld
daa
and
mov
jnp
cld
push
popf
in
lods
scas
and
xchg
mov
cwtl
cli
sub
xor
dec
and
xchg
mov
test
push
cli
jnp
pop
int
and
mov
bound
into
repz
cltd
xchg
jns
mov
mov
push
mov
lds
fld
mov
arpl
sbb
div
call
add
jp
mov
mov
add
testb
xchg
subl
loopne
pop
popf
int
xchg
imul
xchg
pop
or
add
iret
fildll
mov
insb
pop
add
jno
xor
add
push
lret
hlt
jo
xor
xor
and
xchg
mov
xor
and
inc
aaa
arpl
imul
stos
xchg
mov
jnp
loope
mov
or
mov
addb
int
iret
aad
cli
lret
fcomi
in
mov
sbb
and
lock
or
movsl
mov
or
data16
dec
out
jp
mov
loope
lcall
push
outsb
repnz
cmp
xor
imul
loopne
ss
sub
repnz
xchg
lds
outsb
mov
sub
repnz
das
sub
ds
cmp
mov
enter
cs
jnp
push
nop
add
xchg
ret
es
std
jle
mov
push
in
mov
shrl
xorl
adc
inc
cmpsb
xor
cwtl
xchg
stc
daa
mov
push
cli
lock
loop
out
add
lods
or
or
push
shr
cltd
ljmp
imul
jge
xchg
and
in
jbe
dec
jb
mov
push
inc
repz
mov
out
incl
stos
cltd
aad
or
nop
jmp
les
jmp
repnz
add
push
pcmpeqw
fdivl
mov
call
mov
jg
pop
inc
shl
cmpsl
dec
mov
in
dec
adc
sbb
push
repnz
in
inc
add
cmpsl
pop
push
mov
pop
push
inc
cld
sub
xchg
out
mov
popa
xor
cmp
lods
and
clc
inc
cmp
lods
push
test
int3
inc
aas
push
lret
mov
aam
or
loope
push
mov
ss
sub
add
loop
xor
mov
lcall
int3
call
sub
insb
lahf
mov
insl
cmp
pop
pop
jecxz
mov
jne
jecxz
cltd
shlb
mov
cs
dec
fsubs
adcl
pop
adc
pop
fcompl
out
mov
in
inc
fnclex
jmp
scas
add
daa
jb
rcll
cmc
cli
into
insb
lret
mov
inc
or
mov
movsb
cmp
and
stos
fldcw
out
in
pusha
pusha
or
pop
push
xor
mov
outsb
xor
data16
dec
sti
mul
cmp
adcl
mov
imul
adc
pop
stos
in
lds
arpl
or
pop
in
xchg
hlt
dec
cmovl
sarl
dec
mov
stc
and
mov
iret
pop
or
lcall
add
pop
add
push
repz
aad
out
xor
jp
fwait
add
sbb
push
xchg
cli
scas
jns
push
pop
aaa
xchg
adc
xchg
mov
xchg
jecxz
sub
adc
sub
int3
jo
scas
xchg
fiaddl
test
shl
movsb
es
pop
sti
iret
xchg
movsb
mov
pop
xor
es
and
mov
jnp
mov
icebp
fsubl
ficoms
push
push
mov
fcmovbe
data16
jo
pushf
lcall
outsl
subps
int3
push
popf
and
mov
popf
arpl
pop
movsb
and
ja
push
pop
faddp
fidivs
cmp
xor
fcmovb
mov
lret
add
sbb
and
fmul
mov
lods
fimuls
sbb
cmpsb
sub
lcall
jp
xchg
lahf
fcoml
mov
cmp
das
and
pop
negb
xchg
cmp
shll
mov
movsl
xchg
jne
and
fdivrl
or
xchg
pop
jbe
aas
xor
fsub
mov
scas
mov
lods
fisubl
scas
mov
icebp
popf
lods
test
cli
out
xchg
or
fisubrl
and
push
and
pop
fiaddl
addr16
rclb
fisubrl
call
test
std
aas
mov
xorb
cmp
jle
jne
sar
pop
push
insb
xchg
idivb
jle
xor
cmp
arpl
jo
cmpsb
xchg
jge
jnp
pop
xchg
add
add
xchg
insl
je
dec
push
cs
and
lcall
lcall
data16
aam
std
popf
aam
lods
jb
outsl
fst
cmp
sub
dec
jg
add
cmpsl
and
mov
add
imul
cmpsl
add
rcrb
jne
rcrb
adc
mov
and
xor
loop
imul
leave
dec
mov
icebp
mov
enter
jmp
or
or
mov
lcall
ljmp
cmpsb
pushf
sub
shl
dec
mov
jno
popa
ljmp
xor
negl
lea
lock
mov
lock
push
daa
xor
cmp
sub
scas
out
mov
aad
into
test
into
scas
lock
rorb
lahf
lahf
into
sbb
jmp
or
pop
icebp
into
and
loop
push
fmul
sbb
loope
jg
loop
pop
daa
xor
aam
int3
sub
push
gs
and
int3
movb
push
stos
dec
add
dec
xor
int3
je
xor
lods
imul
mov
int3
xchg
jne
movsb
sbb
xchg
adc
fmulp
cmc
mov
cwtl
lret
testb
mov
daa
adc
arpl
sti
in
dec
loop
fisttpl
adc
push
es
mov
mov
adc
popa
cmp
and
enter
adc
xlat
ss
loop
lods
enter
enter
xchg
xchg
sbb
adc
mov
pop
and
sbb
out
add
jno
cmp
jnp
mov
jp
mov
bnd
mov
mov
and
mov
in
pop
sub
mov
icebp
sub
adc
pop
sub
add
imul
inc
lds
psraw
jecxz
jecxz
add
pop
pop
in
pop
cmpsl
out
and
push
pop
cltd
clc
movsb
stos
sbb
mov
jmp
cmp
xor
ljmp
mov
fldenv
aaa
fstpt
mov
xchg
aaa
fdivrs
or
and
loope
out
adc
hlt
in
mov
fwait
cmc
inc
add
mov
cmp
pusha
add
shll
mov
xor
lcall
ljmp
mov
dec
out
call
xchg
adc
push
jb
std
shl
push
hlt
cmp
out
dec
cmp
xchg
ret
cmc
pop
dec
shlb
das
hlt
fdivrs
je
imul
adc
mov
mov
inc
or
push
mov
ds
mov
loop
mov
lds
sbb
xchg
clc
or
dec
add
xor
xchg
jno
push
sbb
imul
repnz
mov
xor
mov
jecxz
add
adc
mov
and
jmp
shlb
pop
or
mov
and
mov
jg
xchg
pop
mov
cmpsl
leave
adc
test
jle
pop
lret
or
test
jge
ret
jne
sub
inc
mov
daa
shll
hlt
or
mov
sbb
iret
jnp
push
adc
movb
ds
ljmp
rcll
dec
lahf
jecxz
ds
pop
mov
mov
imul
cmp
arpl
and
dec
cmp
and
mov
mov
mull
push
or
sub
add
in
insl
out
out
xor
mov
cmp
loope
fdivl
mov
adc
or
xor
push
xlat
outsl
in
sbb
mov
xor
sub
lds
xchg
sub
add
hlt
mov
cli
dec
mov
ret
cltd
int
mov
lods
xor
or
popa
mov
mov
pushf
mov
stc
pop
loopne
jo
aaa
dec
test
mov
sub
cli
jge
sahf
xchg
or
push
and
cmc
push
test
clc
mov
stc
jp
fnstenv
pop
out
je
dec
cltd
mov
jmp
hlt
clc
data16
pusha
aad
sub
lock
loop
movsl
cmp
mov
mov
mov
dec
out
cmpsl
inc
stc
push
ds
mov
pop
pop
lds
sbb
inc
clc
jecxz
jns
mov
outsl
jnp
pop
push
imul
lret
xor
mov
pop
cmpsl
inc
insl
mov
adc
adc
mov
or
xor
rcll
movsl
out
pop
daa
lods
or
sbb
push
sbb
test
loopne
and
scas
mov
jno
lret
ds
outsl
lret
adc
lods
xor
xorb
cmp
jp
sahf
idivb
pushf
flds
adc
xor
mov
je
lods
dec
mov
adc
dec
mov
and
mov
or
inc
cmc
push
clc
xor
pusha
dec
cmpsb
ret
pop
fists
ss
cmpsl
ds
jle
push
pop
and
mov
pushf
jle
pop
mov
stos
loop
pop
mov
xor
loop
xchg
pop
mov
xchg
ret
pop
inc
xchg
push
fidivl
inc
mov
xor
outsb
mov
dec
lods
test
sub
testb
xor
xor
pop
testl
divb
push
fbstp
mov
aad
cmp
pop
mov
sbb
mov
jle
lods
fsubs
cmp
cmp
push
out
into
or
dec
cmpsb
jl,pn
xor
cmpsb
and
or
cmp
sub
cmpsb
cmp
push
mov
jns
in
fldt
inc
loop
jns
popf
add
cld
mov
cs
movsb
or
or
pusha
movl
cmp
inc
sbb
xchg
cmp
movsb
dec
xor
rcr
and
movsb
cmp
sar
and
cmc
cmp
cmp
inc
xorl
test
stc
data16
mov
and
mov
and
mov
sbb
xor
jl
ret
cli
out
mov
addl
mov
das
push
arpl
out
push
adc
adc
mov
inc
or
mov
repnz
fsubrl
stc
or
test
pop
repnz
push
cmc
fsubrl
f2xm1
lock
stos
mov
movsl
arpl
icebp
sahf
sub
ljmp
jp
jbe
mov
add
sahf
sub
sub
popf
scas
adc
nop
push
ljmp
das
jle
fwait
adc
es
loop
cmp
loope
mov
xor
dec
adc
sbb
jno
push
inc
ficoml
inc
sbb
xorl
lcall
scas
pushf
and
stos
jmp
jg
leave
xchg
inc
pop
pcmpgtw
cltd
lea
add
ret
adc
mov
repnz
lcall
or
lahf
lcall
xor
sub
es
lods
xchg
cmc
out
xor
cwtl
js
or
nop
packsswb
or
out
arpl
and
mov
cwtl
int
addr16
xchg
lcall
xchg
pop
dec
pop
jecxz
pusha
cltd
sub
xchg
das
iret
fsubs
cmp
pusha
jmp
enter
dec
jecxz
jp
stos
out
sbb
jecxz
mov
mov
aaa
fwait
scas
xchg
cmp
mul
push
imul
xchg
out
cmpsl
insb
pop
vpshufhw
daa
sbb
fstps
xchg
lds
cli
daa
mov
sub
frndint
gs
scas
sarl
cmpsb
jecxz
out
push
xchg
xchg
xor
mov
in
mov
mov
mov
push
xchg
mov
push
xchg
loopne
out
in
data16
and
xchg
mov
fistpll
pusha
mov
loop
xchg
lock
test
mov
sub
pop
lar
mov
jl
cmp
xlat
mov
sbb
pop
hlt
inc
xchg
jle
inc
in
lods
adc
xchg
out
and
dec
xchg
xchg
mov
mov
adc
jb
xchg
push
insb
lea
std
out
and
xchg
mov
xor
cmp
sub
mov
adc
mov
arpl
dec
test
dec
mov
and
pop
scas
iret
xor
and
sub
arpl
mov
mov
stos
in
fldenv
mov
and
or
sbb
mov
cmp
pushf
subb
fisubrl
adc
lahf
loop
aaa
add
daa
xor
push
popf
mov
and
xor
mov
cld
idivb
outsb
adc
lods
loopne
sub
xchg
push
mov
loopne
jb
mov
loop
push
or
stc
lahf
add
xchg
mov
push
ficomps
test
mov
cmpsb
add
dec
xchg
and
enter
jno
mov
subps
cmp
pop
int
leave
push
add
lahf
pop
dec
hlt
or
lret
lret
and
adcb
cmpb
addb
test
imul
inc
int
fisubrs
pop
enter
loop
inc
in
rorb
rcll
loop
sub
add
orl
cmc
arpl
ret
ror
mov
mov
push
idivb
addl
xchg
mov
or
cmp
sahf
and
jns
lods
xchg
jo
pushf
subb
inc
inc
shlb
push
icebp
std
int3
sbb
je
jns
int3
jae
cmc
enter
shll
pop
jl
js
adc
popl
pusha
or
pop
movsb
sbb
std
in
mov
lcall
dec
and
les
test
out
shr
out
xchg
shl
addr16
mov
and
xchg
call
adc
sbb
in
std
pop
outsw
imul
cmp
iret
push
outsl
lret
cmp
fcoms
and
andb
rclb
push
jmp
dec
insl
data16
mov
scas
in
push
aaa
sbb
and
xor
insb
loope
int
xchg
inc
rcll
cmp
jp
xor
inc
ljmp
xchg
inc
les
lds
test
lea
xchg
out
jnp
xor
xorb
adc
pop
fs
test
xchg
pop
push
xchg
gs
loop
adcb
dec
mov
pop
xchg
push
ja
loope
sbbl
push
jbe
mov
lcall
nop
hlt
bound
repz
daa
push
push
lcall
pop
mov
mov
je
jl
mov
dec
jecxz
and
les
adc
cmpsl
mov
mov
inc
mov
xchg
nop
repnz
pop
sbb
dec
repnz
sub
call
sbb
out
ss
xor
inc
iret
jg
ds
out
push
inc
pusha
das
and
jp
xor
xor
adc
mov
jno
push
int
test
mov
jbe
gs
jae
and
lahf
leave
jbe
cmp
lcall
jmp
mov
push
xor
xor
mov
sub
pop
je
loopne
daa
or
pop
mov
mov
inc
push
repnz
popf
xor
xchg
fcoml
pop
int3
orl
dec
add
xchg
sub
pop
adc
xchg
out
sub
or
lock
mov
xchg
add
jmp
repnz
int
xor
fildl
sbbl
cs
add
sub
push
test
pop
cmpsl
push
push
sti
jo
mov
sub
lock
xor
sub
shlb
xor
xor
push
xor
into
in
fldenv
push
sbb
pusha
inc
pop
fiaddl
xchg
outsb
xor
scas
ficoml
or
imul
mov
xor
sbb
xor
xor
testl
jns
pusha
jmp
outsb
add
push
ljmp
aam
addr16
lock
pop
cs
dec
xor
dec
dec
push
adc
movsl
inc
add
ret
cmp
jle
sbb
and
jbe
inc
loop
cmp
aaa
push
xchg
rolb
sbb
test
ret
fisubl
cmp
pushf
push
and
adc
iret
pop
stos
iret
cmp
mov
loope
sti
pop
arpl
and
and
xor
les
test
mov
cmp
insl
cltd
inc
pop
cld
loop
sub
inc
insl
sbb
and
outsl
jb
sub
lods
adc
xchg
xchg
jbe
aam
and
push
in
mov
and
leave
iret
ss
jge,pt
and
data16
xlat
iret
mov
inc
adcl
jo
and
fstpl
pop
mov
mov
or
or
and
or
adc
jl
fdivr
jecxz
pop
enter
test
push
cs
cld
bound
add
dec
inc
clc
test
mov
mov
inc
lahf
sbb
cmp
mov
sub
fsub
fistps
inc
inc
cmp
pop
into
push
mov
xchg
pop
in
or
xor
push
push
and
and
adc
mov
dec
loop
aad
jo
loopne
and
pop
and
and
icebp
ret
mov
mov
sub
and
in
rorl
and
and
inc
pop
movsb
push
sub
xor
out
and
mov
xor
out
and
mov
adc
fistps
dec
and
leave
mov
cwtl
sbb
push
lods
jp
rcll
sub
dec
xor
and
mov
sub
fiaddl
sbb
enter
push
sbb
xor
fwait
aas
outsl
addb
jbe
mov
push
and
push
and
push
out
cmpxchg
sub
mov
or
and
push
xchg
out
cmp
insl
fiaddl
test
jns
adc
jmp
or
add
pop
lods
mov
out
and
push
mov
sbb
repnz
into
out
pop
xlat
test
mov
jno
or
scas
mov
mov
jo
lds
int3
cmp
andl
adc
data16
fdivs
push
outsl
jg
rclb
test
inc
push
lods
xchg
jle
jge
push
sub
loope
mov
sub
aad
push
jge
fldt
int
push
ljmp
dec
rcr
xor
int
or
xor
push
popf
dec
mov
hlt
or
lahf
dec
mov
xor
push
jae
mov
jmp
rorl
push
xchg
xor
in
lret
cli
mov
xor
dec
or
lahf
add
xchg
mov
aam
mov
xchg
enter
addr16
jns
add
lcall
aaa
jno
mov
xor
std
ret
in
jbe
xor
jmp
jne
add
dec
stc
out
in
push
repnz
jge
adc
push
orb
popf
adc
xor
fsts
push
les
pop
xorl
aam
and
or
gs
fldcw
push
dec
add
andl
sub
dec
loopne
repz
in
fcomps
sbbl
or
outsb
push
cltd
in
lahf
fisubrl
insl
cli
adc
bound
movsb
mov
fnstcw
xchg
xor
or
xor
test
clc
sbb
sub
inc
imul
je
lods
xor
test
loop
xlat
out
and
xchg
aaa
imulb
lahf
sub
ljmp
mov
lock
dec
inc
cmpsb
mov
sub
xor
mov
xor
ss
mov
fsub
push
les
fisubrl
sub
sub
jbe
ss
mov
imul
loop
mov
ds
jmp
sub
sub
test
dec
aam
push
lahf
stos
rdtsc
nop
cmp
xlat
idivb
cmp
mov
stc
mov
in
adc
mov
xchg
out
push
inc
lcall
and
ds
cmpsb
xchg
js
push
cwtl
int3
add
repnz
cs
xor
cmp
fwait
ds
loopne
pop
dec
sbbb
aas
adc
cmp
loop
icebp
cmp
mov
es
aad
scas
adc
dec
pop
jp
lahf
xor
push
dec
pop
cmp
inc
fmull
mov
sarb
notl
es
hlt
mov
call
pop
popf
jae
push
mov
cmp
js
loopne
int3
cmp
repz
sahf
cmp
fnsave
pop
inc
pminub
or
popf
mov
arpl
add
scas
dec
out
psadbw
xchg
dec
ljmp
aam
ss
loope
jmp
wbinvd
ja
cmp
or
punpcklbw
mov
push
cmpsl
clc
xor
lds
into
sbb
scas
das
out
aaa
mov
cmp
push
adc
mov
lret
xor
aam
xor
dec
cwtl
xor
push
dec
mov
fldl
xor
std
cwtl
sbb
pop
xor
mov
xor
inc
dec
stos
xor
xorl
decl
pop
mov
jo
imulb
jns
push
seto
mov
adc
icebp
sub
xchg
fsubrs
xlat
mov
lret
sub
outsb
and
psubd
add
sub
dec
popf
lahf
dec
push
push
std
mov
push
mov
std
jbe
push
popa
in
dec
jg
mov
cwtl
jo
sbb
popa
sbb
pop
xchg
mov
inc
bound
mov
fs
push
and
nop
repnz
mov
sarl
test
pop
sub
dec
xchg
cltd
and
stos
aas
call
femms
cmpl
cmp
or
pcmpeqb
es
jg
popl
fidivl
pop
and
xor
cmp
push
cmovp
push
icebp
mov
sub
popf
and
pop
pmaxsw
icebp
and
mov
sbb
jg
cli
and
loopne
inc
fs
cmpsb
and
leave
xorl
cmp
push
mov
and
push
push
icebp
or
adc
push
movl
push
mov
mov
adc
adc
dec
push
mov
enter
mov
vmwrite
mov
cmovns
pop
mov
sbb
cmp
add
xchg
aas
xlat
test
sbb
dec
mov
stc
xor
paddq
xchg
cmp
out
sbb
test
icebp
sbb
ret
aam
fcoms
and
sub
sahf
or
les
out
mov
lsl
sbb
and
or
sbb
js
scas
push
out
paddq
push
addr16
push
pop
addps
xor
push
scas
pusha
sub
leave
adc
aam
push
mov
daa
push
aam
aam
adc
cmp
xorb
adc
push
pop
cmp
into
adc
cs
ret
pmaxsw
addr16
icebp
adc
bswap
sbb
call
in
push
xchg
push
out
setbe
out
jnp
adcl
xchg
jnp
jp
sbb
adc
mov
ss
push
push
call
and
xorl
dec
adc
xchg
jecxz
and
push
jns
adc
enter
test
and
mov
bswap
cmc
ficoml
cmp
or
orb
fs
fnstcw
hlt
sbb
dec
sub
mov
hlt
gs
bound
out
dec
hlt
or
cwtl
or
inc
dec
js
push
sti
sbb
mov
push
mov
flds
pop
or
bound
or
paddsw
or
movsbl
scas
insl
jmp
jns
lahf
mov
femms
mov
lcall
or
inc
xor
push
cmpb
fs
mov
add
loop
icebp
add
mov
addr16
hlt
fisttpll
push
mov
add
out
aam
add
sbb
stc
pop
mov
mov
mov
popf
add
punpcklbw
push
leave
call
cmp
mov
adc
je
mov
std
sbb
dec
std
mov
push
push
popa
aam
adc
std
xchg
pop
sbb
out
mov
sahf
cmp
mov
cmp
dec
pusha
add
outsl
or
inc
mov
xchg
js
add
stc
test
sti
shr
scas
out
pusha
dec
push
stc
push
ret
sbb
xchg
int
mov
stc
push
std
xor
cld
in
xchg
notl
lahf
ret
mov
adc
pusha
int
shll
adc
je
int3
nop
cmp
cmc
mov
push
icebp
scas
psubsb
and
lahf
or
mov
repz
add
shll
leave
mov
adc
sti
repz
aaa
lock
pusha
push
cld
icebp
xchg
dec
cs
test
dec
pop
push
mov
or
cs
mov
icebp
xor
xchg
xor
xor
push
xor
mov
jmp
jecxz
fisttps
pushaw
rclb
leave
push
sbb
subl
and
int
sbb
or
mov
or
loop
int
xor
or
test
icebp
add
sbb
mov
fwait
mov
out
sarl
mov
add
bsf
jg
jg
orb
dec
lods
in
mov
jg
jle
xor
in
jbe
pop
mov
inc
mov
icebp
jecxz
enter
outsl
insb
hlt
data16
in
testb
leave
push
lret
jecxz
or
test
adc
scas
adc
mov
pop
hlt
and
loope
icebp
jmp
mov
cvttps2pi
mov
aam
push
sub
add
fcmovu
jge
mov
pop
rclb
mov
or
stc
xorl
mov
nop
insl
add
aas
mov
sub
mov
mov
setbe
cmovg
dec
fstps
in
push
xor
fstps
in
dec
scas
cmovnp
mov
push
lahf
jb
iret
xlat
sbb
cmp
jg
popa
mov
lock
sub
popa
aad
mov
aad
xor
sbb
mov
aad
test
pop
jnp
and
fbstp
rcl
or
jnp
aad
int3
and
ror
and
push
aam
sahf
repz
movsl
jl
ljmp
add
lahf
rdtsc
test
mov
sbb
and
sub
jle
iret
and
xor
aam
cmpb
iret
fbld
cmp
fsubs
mov
leave
sub
or
jge
push
mov
aad
mov
mov
or
add
and
and
mov
or
add
mov
les
icebp
outsb
add
ret
jmp
pop
lahf
jne
rclb
add
pop
bound
pusha
js
ja
xor
mov
or
js
movsb
xchg
cvtps2pi
push
xchg
invlpg
cmpxchg
mov
push
mov
mov
xor
cmp
sbb
mov
mov
xor
add
mov
dec
mov
adc
mov
push
cmp
sarl
sub
or
cmpsb
mov
shll
sub
xor
and
aad
mov
push
push
add
mov
or
mov
scas
std
mov
mov
adc
cs
int
mov
insl
push
fwait
mov
dec
cs
mov
push
rorb
dec
jg
int3
sbb
mov
adc
repnz
push
fwait
sub
mov
mov
mov
push
jns
hlt
inc
scas
inc
bound
scas
je
scas
and
mov
repnz
lods
das
sbb
lods
imul
mov
test
stos
jl
mov
je
test
sub
je
inc
and
sbb
inc
call
sbbb
popl
cmpsl
xor
mov
cmpsl
clc
mov
movl
movsl
les
movsl
add
inc
sub
lahf
inc
jg
mov
push
lret
out
mov
movsb
add
add
inc
and
and
dec
pop
mov
xchg
push
repnz
mov
mov
cmova
mov
mov
lahf
and
mov
adcl
fisubl
lahf
jns
addl
add
sbb
add
jnp
ret
lods
daa
dec
pop
movsb
filds
inc
and
mov
add
ss
ud2
fmuls
ss
and
and
xor
sbb
jmp
enter
xor
and
lods
cltd
xor
jl
xchg
jg
inc
inc
paddsw
andl
arpl
cltd
and
mov
and
xchg
les
add
popf
cmovns
push
int3
jl,pn
xor
push
push
xor
fmuls
sbb
and
aam
xchg
xor
dec
fdivs
sbb
rcrb
je
xchg
xchg
dec
sbb
icebp
xchg
sbb
mov
xchg
push
ret
xchg
ud2
fldl
inc
and
das
mov
add
je
inc
bound
xor
enter
push
mov
and
icebp
lea
cmp
pop
rorb
mov
es
xchg
mov
insb
sub
add
push
mov
cmp
xchg
mov
aaa
pop
cmp
pop
cs
fbld
scas
xor
xchg
mov
xor
pusha
cmovnp
movsl
mov
jmp
jnp
stc
add
icebp
xchg
sbb
daa
jns
push
xchg
lods
push
push
lea
add
pop
xchg
jp
adc
sbb
rorb
mov
inc
add
int
fnstcw
mov
mov
xchg
inc
scas
inc
nop
insl
add
lock
dec
push
push
add
cmp
push
clc
dec
scas
add
addr16
cltd
or
add
test
aam
push
sahf
adcl
gs
xor
adcl
cwtl
sbb
subl
dec
faddl
sbbl
dec
daa
and
or
add
inc
push
je
jg
mov
add
ljmp
push
xchg
mov
jg
mov
bound
sub
and
cmp
fdivrs
and
aaa
jge
rcrb
cvttps2pi
jnp
bound
push
orb
sub
in
icebp
jnp
ret
aam
push
jl
movq
sbb
or
ret
xchg
jb
repnz
aam
and
jno
xor
icebp
jns
xlat
or
and
ja
iret
sub
xor
ja
xlat
or
out
mov
and
sub
sahf
push
dec
or
sbb
and
inc
jne
and
push
sbb
adc
xor
xorl
pop
icebp
jne
mov
rorb
dec
nopl
xor
repz
bound
xor
cmp
adcl
adc
pop
rclb
jge,pn
xor
clc
lret
mov
adc
dec
lea
mov
movsb
cmp
leave
mov
sti
aad
push
push
add
sbb
and
outsl
xor
jge
mov
lahf
or
outsl
xchg
cmp
xor
and
sub
sarb
inc
mov
mov
scas
add
mov
or
push
inc
psubw
clc
icebp
imul
icebp
imul
imul
cmp
imul
imul
hlt
xchg
xchg
or
xchg
sbb
ud1
cmp
imul
xlat
imul
cmpxchg
aam
hlt
mov
gs
or
and
cltd
add
add
inc
push
loopne
jnp
out
push
maskmovq
sbb
mov
inc
gs
jb
decl
and
je
arpl
xchg
mov
dec
push
icebp
push
aam
je
arpl
sbb
and
arpl
std
xor
punpckldq
pop
popa
aam
dec
nop
icebp
sub
test
mov
xchg
cmp
and
and
cs
xor
push
in
lar
daa
sbb
stc
addr16
inc
pop
jp
clc
add
cmp
jae
bound
add
rclb
call
mov
xor
and
pop
mov
add
xchg
mov
cmc
ud1
dec
icebp
pop
xor
dec
pop
sbb
xchg
icebp
pop
sub
jnp
clts
cmc
mov
mov
cmp
faddl
popf
psrld
xor
xor
and
pop
aam
and
pop
and
push
push
repz
jno
dec
sahf
push
push
or
cmpsl
push
xchg
jge
xchg
mov
dec
push
icebp
inc
push
aam
and
push
and
and
bswap
orl
out
add
sbb
lea
add
push
ret
popf
lsl
icebp
push
xor
adcl
sbb
ret
sub
cmpsb
std
movntq
push
push
aam
jmp
dec
dec
icebp
push
sub
int
cvtps2pi
rcll
mov
std
lahf
rsqrtps
wrmsr
jne,pn
xor
icebp
push
sub
fucompp
jnp
or
fucom
pop
push
push
add
xor
dec
icebp
dec
sbb
std
dec
aam
aam
dec
xchg
jge
inc
dec
xchg
mov
dec
push
icebp
decb
daa
push
icebp
dec
sbb
das
fistpl
dec
and
xor
dec
push
mov
mov
xor
push
in
loopne
dec
xor
icebp
dec
sbb
xor
icebp
dec
xor
dec
aam
and
and
xlat
incb
out
xchg
inc
and
xor
push
pmaxsw
inc
push
mov
inc
aam
je
inc
xchg
cmp
aam
inc
xchg
dec
sub
mov
sub
dec
xor
rcrl
xchg
aas
fsubrs
sbb
push
sub
inc
xchg
mov
inc
inc
sbb
mov
mov
loope
push
in
lss
fistl
xchg
jg
fucomi
paddsw
push
sbb
mov
xchg
mov
xor
push
xchg
cmp
outsb
aas
xor
push
jno
dec
popf
aas
push
leave
sbbl
rcl
mov
hlt
sbb
lock
ret
cmp
push
orb
popf
js
add
xchg
pop
cmp
jle
jecxz
push
add
add
mov
dec
push
xlat
fistpll
sbb
je
cmp
cmovge
xchg
dec
pop
or
inc
add
in
mov
loopne
ltr
cmp
mov
push
icebp
aaa
sub
mov
dec
aaa
push
sar
aam
xchg
xchg
rorl
lea
aaa
pop
ret
mov
push
push
add
punpckldq
icebp
xor
sbb
jle
xor
aam
add
xor
aam
jbe
xor
jp
cmp
adc
add
xor
mov
in
push
punpcklbw
out
inc
xchg
jns
bound
mov
sub
xchg
push
xchg
pminsw
push
bsf
mov
jg
leave
pcmpgtw
das
push
mov
jg
insl
push
dec
mov
cmp
push
lea
mov
pop
cmpsb
push
popf
daa
int3
sub
pusha
dec
sarb
sub
sbb
lea
repnz
push
xchg
sub
and
lds
bound
or
add
inc
dec
xor
push
mov
hlt
mov
imul
sub
sbb
in
sub
mov
je
sub
rorl
or
xchg
cmp
movsl
push
out
fwait
daa
addr16
pushf
sub
cmc
lea
add
wrmsr
es
and
push
push
add
xor
jno
inc
push
mov
xor
stc
out
aam
jb
testl
aam
rolb
wrmsr
jae,pn
xor
icebp
and
fnstcw
pop
sbbl
leave
cmc
paddd
dec
mov
icebp
pop
xor
mov
push
mov
pop
xchg
adcb
cvtps2pi
sbb
sbb
popf
lods
mov
sbb
fstpl
jns
jne
cmp
cmpsb
add
in
aas
cld
sbb
rcrb
mov
xor
andps
sbb
inc
aam
sbb
xchg
mov
dec
push
leave
orl
sbb
loop
mov
nop
cs
jns
int
clc
add
and
inc
out
xchg
andps
scas
scas
pcmpgtw
sbb
jge
xchg
cmovns
pop
push
repnz
jl
and
sub
icebp
pop
xchg
jge
fstl
xchg
fdivs
cmovge
xchg
aam
scas
xor
hlt
dec
rcrb
and
adc
adc
mov
mov
push
repz
sub
inc
sbb
fstl
aam
sub
orb
xchg
orl
insl
push
and
adc
stos
mov
xchg
lahf
shll
rol
xchg
dec
mov
cmc
ret
cwtl
mov
mov
add
sub
jno
xchg
inc
les
or
shll
fs
andb
and
push
xchg
es
call
cwtl
movsb
xlat
and
add
xchg
cmp
loop
xorb
das
daa
or
fsubrs
ret
pop
sub
test
xchg
jmp
mov
xor
push
mov
xlat
jmp
sti
sub
sub
jne
inc
push
sub
jb
lcall
pop
mov
mov
stc
lahf
sbb
sbb
adc
sbb
cmpsb
xchg
bound
test
mov
mov
or
outsb
int3
sar
iret
add
and
adc
inc
xlat
std
shlb
push
fsubs
xor
sbb
jg
popa
xor
mov
sti
xlat
adcl
mov
mov
inc
dec
fdivs
sbb
mov
sbb
mov
pop
inc
mov
sbb
fisubl
jl
pop
leave
xchg
inc
js
push
adc
lock
out
sbb
jg
jae
stos
sub
xorl
cmpsb
adc
int3
sbb
sahf
jbe
scas
inc
jo
jge
push
dec
adc
xchg
cli
sub
iret
add
loope
int
add
nop
sbbl
or
fistpl
daa
inc
imul
jmp
das
mov
das
movsb
repnz
sbb
and
leave
pop
fcompl
adc
adc
cmp
mov
push
pushl
mov
loop
sbb
xor
gs
or
inc
and
jbe
adc
subl
adcb
and
dec
xor
stc
inc
inc
sti
inc
push
daa
leave
mov
xorl
push
mov
test
xorl
gs
xor
stos
mov
push
xor
sbb
lcall
adc
push
loope
sbb
mov
cli
push
mov
push
dec
sbb
add
dec
and
ret
lods
xor
fwait
pop
imul
data16
xchg
or
dec
xor
add
sbb
push
and
xchg
das
loope
xchg
and
mov
sub
add
scas
popa
sti
scas
xor
inc
iret
int
xchg
cwtl
das
fwait
lock
gs
das
pop
mov
ss
add
int3
pushf
and
stc
insb
iret
fdivr
sahf
sbb
xchg
gs
jmp
sub
sti
and
xlat
daa
and
fcoms
cwtl
or
int3
and
test
mov
cmp
cmp
cwtl
push
loop
push
loop
in
xor
sbb
mov
inc
mov
lods
cmp
xchg
loope
pop
cmp
sbb
imul
and
fs
lods
stos
sbb
xchg
and
pop
daa
sti
sbb
movsl
sbb
jb
mov
hlt
xor
mov
xor
dec
adc
cmp
inc
mov
enter
xor
and
imul
lds
mov
dec
cltd
shll
popa
or
repnz
sbb
xchg
adc
or
xor
and
in
sarb
ret
push
inc
mov
adc
sbb
mov
xor
sbb
mov
cltd
mov
sahf
int
out
mov
arpl
roll
adc
adc
fsubr
into
das
data16
pop
inc
pop
inc
adc
or
xchg
ficoml
mov
xor
fnsave
xchg
movsl
push
mov
notb
cmp
pop
jp
adc
sub
lret
pop
xchg
mov
add
xchg
mov
sti
and
adc
cwtl
addr16
mov
nop
sbb
xchg
test
loop
xchg
sbb
inc
ja
cmp
or
mov
popa
push
mov
sbb
mov
xlat
aas
sbb
ss
jno
pop
shlb
ljmp
mov
pop
sub
mov
xchg
icebp
push
mov
adc
or
mov
xchg
sbb
xchg
stc
sbb
addr16
mov
mov
pop
dec
test
std
sbb
sahf
jb
inc
and
mov
or
xchg
pushw
push
sub
mov
addr16
pop
repnz
sub
cmpsb
mov
jb
push
shll
mov
mov
push
or
mov
adc
push
lock
push
ljmp
and
xchg
imul
rclb
add
inc
xchg
push
sahf
ss
sbb
mov
cmpsl
aad
mov
pop
movsb
popa
inc
sbb
xchg
sti
sahf
insl
mov
gs
sahf
or
sbb
repnz
loop
fwait
inc
cmp
and
pusha
lock
in
mov
add
in
pop
pop
jle
cmpsl
xor
cmpsl
das
cs
and
cltd
adc
rol
adc
add
jmp
test
hlt
sti
pop
call
loop
cmp
fildl
adc
addr16
xchg
jbe
dec
mov
pop
shlb
mov
pop
sti
mov
and
call
mov
sbb
sbb
cmp
jbe
inc
inc
xchg
adc
and
aas
xchg
push
pop
adc
xchg
cmpsl
and
sub
mov
push
add
cmp
mov
and
xchg
pop
inc
and
popa
leave
aas
jae
jns
cmp
push
dec
adc
test
push
adcb
xor
gs
xchg
jno
or
out
sub
sbb
add
cmc
shrl
and
in
imul
xchg
sub
sub
xor
sbb
arpl
adc
dec
lea
ds
sbb
xchg
addr16
lahf
xor
pusha
call
jecxz
stos
push
jecxz
roll
mov
jnp
xor
xor
stos
loop
test
int
out
jae
lcall
repnz
mov
push
push
ficoml
push
and
and
cmp
jmp
cmp
push
and
stc
in
adc
sbb
cmp
mov
dec
sub
xor
sub
dec
lods
adc
push
sub
xchg
adc
les
arpl
ja
ret
mov
loop
mov
adc
enter
ja
insb
inc
sub
lret
jbe
pop
test
addb
inc
push
test
xor
sti
cmc
inc
loop
pop
pop
es
enter
xchg
dec
das
nop
cmp
imul
pop
sub
pop
popf
addr16
xor
xor
ljmp
sub
mov
mov
stos
stos
aad
push
cmp
sub
stc
push
leave
aad
xlat
xchg
jecxz
and
mov
dec
adc
stos
inc
push
cmp
popa
fistps
cmp
xor
pop
xlat
mov
adc
jne
cmp
dec
es
cmp
add
sbb
outsl
push
stc
inc
xor
mov
xor
pop
push
addl
cltd
xchg
aaa
aaa
xchg
cmp
pusha
adc
sbb
push
incl
scas
shll
sahf
cmp
xor
pop
je
test
sbb
nop
xchg
push
jo
push
cmp
xor
fbld
ja
movsb
aaa
push
and
xchg
sbb
add
jg
lods
ja
xor
cmp
mov
inc
orb
xor
mov
enter
mov
popa
mov
jno
xor
xor
daa
sbb
mov
pop
lcall
sub
les
fstpt
inc
nop
rcr
rorl
imul
pop
sbb
outsl
push
inc
daa
jno
mov
sbb
lret
nop
xchg
sub
in
loop
movsl
push
pop
xchg
sahf
jbe
pop
add
cmp
sbb
sub
enter
push
sub
and
push
sti
inc
sbbl
lock
jne
aaa
sti
sarb
int3
es
xchg
in
mov
dec
mov
adc
fists
push
add
ja
adc
sub
inc
test
es
push
jns
jno
push
xchg
pop
cmpsb
sti
sub
stc
inc
lea
inc
ja
push
loop
sub
jae
mov
xor
xchg
xor
shrl
xchg
and
mov
mov
jne
sbbb
rclb
add
scas
jbe
cmp
sub
sub
loop
addr16
stos
nop
icebp
in
aaa
fistpll
mov
adc
into
inc
push
insl
repnz
sbbl
or
jae
shlb
xchg
jae
cltd
aam
mov
inc
mov
cmc
add
cmc
inc
sub
aaa
les
push
lcall
push
pop
xor
lret
cltd
mov
inc
cmp
stos
ja
mov
inc
call
ret
imul
adc
call
mov
lods
add
out
ljmp
loope
or
bound
xchg
xchg
sbb
mov
jp
dec
das
bound
fnstcw
inc
adc
sti
sbb
roll
jmp
clc
pusha
mov
xor
stc
cmp
movsb
mov
mov
sti
cs
fwait
movsl
mov
pop
int3
addr16
cmp
stc
arpl
push
cmp
and
cmpsl
xor
xchg
inc
xchg
pop
or
adc
xchg
pop
inc
and
mov
sub
cmp
popa
and
sub
xchg
lock
mov
jl
xchg
mov
imul
and
leave
sbb
enter
pop
fsub
mov
mov
push
out
mov
xchg
fisubl
jbe
lret
jno
adc
mov
cmp
ds
aad
mov
scas
insl
cmp
xchg
loop
adc
pop
icebp
rolb
rclb
pop
ret
jne
sbb
decl
add
jge
xchg
sahf
and
and
push
mov
sbb
jo
or
xorb
xchg
mov
mov
aas
popf
adc
pop
add
cmp
pinsrw
mov
cmp
sub
cli
shr
xor
outsl
rcl
push
adc
dec
lret
iret
stos
aaa
cwtl
push
xchg
push
hlt
or
clc
push
pop
jno
dec
xchg
test
sub
cmp
inc
mov
movsb
mov
les
jne
xor
cltd
push
data16
xchg
sahf
sbb
and
int
cmp
sbb
notb
test
cmp
sub
fsubr
pop
xchg
add
dec
push
mov
daa
adc
xchg
push
jecxz
lahf
and
mov
jbe
cltd
push
jno
das
mov
sub
popa
fs
adcb
ds
mov
andb
popa
call
pop
jle
jno
mov
xchg
lcall
dec
in
sub
aaa
es
cs
mov
stos
mov
loop
cmp
lcall
jnp
and
sbb
sbb
and
test
mov
jae
adc
fsts
adc
test
xchg
xchg
sbb
call
pop
shll
push
and
xchg
pop
dec
and
xor
xor
mov
push
pop
nop
xchg
cmp
in
push
mov
out
rorb
push
xchg
pop
movsl
xchg
pop
cs
aam
inc
in
pop
addr16
cmpsb
mov
in
stos
add
ja
enter
adc
inc
cmp
nop
movsb
and
xor
movsb
stos
testl
call
add
sub
ds
ret
imul
or
sbb
jg
push
and
pop
xlat
loop
cmp
pop
imul
movsb
mov
push
out
and
adc
sub
adc
push
sbb
imul
mov
xchg
mov
sbb
or
call
mov
cmp
sub
xor
mov
push
xchg
xor
pop
hlt
xchg
inc
int
movsb
and
adc
aad
es
cltd
cltd
sub
int
divl
leave
ss
sbb
rcrb
loope
scas
sub
sub
and
aaa
repnz
cltd
stc
push
movsb
adc
mov
sub
pop
movsl
add
cld
setbe
add
shll
test
fsts
inc
mov
and
mov
movsl
or
ja
xchg
push
push
xor
cmp
aas
mov
addr16
sub
mov
jns
and
fsubrs
repnz
sbb
subb
adc
jae
das
and
bnd
or
jae
fstps
test
add
roll
add
jge
xchg
div
inc
pop
xor
jbe
clc
leave
cmpsb
mov
sub
xor
fwait
lea
xchg
mov
or
sbb
xor
enter
and
lret
leave
lcall
popa
pop
cmp
push
xor
insb
xlat
mov
push
subl
mov
dec
cmp
push
aaa
sub
and
in
cmc
sbb
movsb
iret
les
xchg
std
loopne
pop
push
lahf
sbb
sbb
stc
mov
sub
pop
sbb
inc
and
cmp
jb
pop
cmpsl
sbbb
sub
std
testb
int3
xchg
xor
es
xor
mov
cmp
jp
popa
shll
mov
sbb
mov
push
dec
es
pop
pop
loop
sbb
mov
mov
into
hlt
movsb
cltd
mov
jno
jb
push
outsb
mov
mov
repnz
ficomps
and
lret
cmpsl
xchg
cmp
dec
repnz
pop
in
in
mov
add
enter
push
sub
sub
and
pop
out
mov
add
xchg
inc
cwtl
mov
push
pop
add
rcl
xor
cwtl
sbb
sti
std
and
ss
loope
loop
outsb
roll
xchg
sub
shll
call
popa
sti
mov
cmp
pop
push
pop
das
mulb
fldcw
sbb
das
xchg
and
sbb
insl
add
mov
in
adc
cmp
jmp
cld
les
jle
mov
cmpb
lock
xchg
ret
pop
mov
loope
js
mov
shr
testl
xor
and
push
jmp
adc
sub
stos
aas
push
pop
push
or
dec
ret
cmp
loop
pop
jl
mov
xor
mov
fsubrl
sbb
mov
clc
or
sub
std
and
xor
mov
mov
and
loop
outsb
mov
call
xchg
jo
xor
jbe
ss
mov
and
iret
in
test
push
jge
je
push
push
lcall
mov
sbb
inc
pop
pop
gs
out
mov
mov
stos
inc
addr16
and
xor
sub
jns
fxch
dec
pop
popa
and
and
dec
into
outsl
jnp
mov
or
jne
dec
push
push
sub
outsl
lods
cmp
sbb
fldt
or
cmp
xchg
sub
in
sahf
outsl
cmp
adc
popf
push
xchg
xchg
shll
rclb
hlt
fbld
iret
imul
leave
adc
icebp
mov
mov
xchg
sbb
stc
int
mov
xor
in
gs
mov
cmp
popa
mov
sbb
sbb
and
outsl
loope
cmp
jmp
mov
xor
xor
icebp
scas
inc
xchg
adc
pop
repnz
pop
rcll
sbb
jecxz
and
sbb
sbb
test
cwtl
cmpsb
jno
popa
push
jmp
int3
bound
mov
hlt
push
cmpsl
adc
dec
sub
aaa
loop
enter
sub
mov
inc
cltd
xor
mov
ret
call
adc
sbb
sub
lret
loop
aas
sbb
bnd
xor
ss
sahf
cmp
inc
mov
jl
push
ja
movsb
aam
stc
shlb
push
sbb
adc
ljmp
mov
xor
pop
iret
ja
sti
loopne
sub
inc
xchg
leave
sbb
lcall
jns
xchg
adc
aas
mov
lret
inc
pop
fidivl
dec
js
outsb
cld
pusha
mov
mov
mov
aaa
and
fs
sub
insb
pop
jae
pop
and
push
push
cld
loop
adc
mov
xor
sub
int3
daa
inc
push
in
andl
mov
mov
aas
mov
adc
sbb
mov
xchg
sub
data16
adc
bound
push
mov
xor
cmp
mov
push
xor
fwait
and
std
cmp
jae
jb
sbb
jmp
popf
cmpsl
add
insb
lea
lods
sbb
push
in
sub
mov
popf
int3
lcall
out
adc
iret
int
pop
xchg
xchg
mov
mov
shll
pushw
xor
mov
xchg
xor
push
sub
sub
xchg
das
imul
sti
jb
sub
fnstcw
insl
daa
cmp
inc
inc
imul
into
pop
sbb
cmp
jecxz
leave
popf
insb
adc
xchg
pop
pop
or
mov
rcrl
fcomps
aam
cwtl
sub
sub
sbb
sub
mov
enter
push
mov
and
js
mov
pop
lahf
repnz
mov
jmp
dec
sub
mov
mov
inc
ret
sbb
mov
mov
xorb
fucomp
pop
cli
rcrl
icebp
lea
mov
xchg
pushf
lea
imul
call
aaa
loop
test
jge
mov
js
fwait
sub
out
and
adc
jle
aaa
lea
mov
dec
popf
add
nop
pop
mov
adc
sub
mov
es
push
inc
lret
or
pop
pop
adc
aaa
jge
or
pop
jns
inc
out
test
push
ljmp
cmc
sub
jge
sbbb
les
and
mov
fmul
xchg
push
ss
cmpl
push
inc
das
mov
in
xchg
xchg
mov
sbb
xor
cwtl
mov
mov
jmp
sbb
push
addr16
xor
rolb
inc
iret
sub
repnz
or
adc
stos
xchg
iret
dec
and
and
xchg
push
cld
jne
mov
pop
and
dec
adc
stc
push
jmp
xchg
mov
adc
arpl
cmp
repz
ds
push
dec
xor
pop
hlt
sub
or
jo
jmp
dec
adc
shll
mov
out
xor
pop
adc
call
adc
push
pop
mov
daa
addr16
cwtl
arpl
movsl
mov
or
xchg
and
ja
and
sbb
pushl
pop
or
adc
or
insb
addr16
inc
fistl
pop
and
pop
inc
mov
mov
loope
mov
loop
ja
push
mov
cmp
push
pop
sahf
push
xor
and
movsb
pop
pop
fsts
sbb
pop
sti
sub
stc
movsb
dec
mov
dec
mov
adc
xor
xor
inc
mov
test
adc
bound
adc
aad
mov
int3
mull
stos
movsl
xor
popf
movsb
mov
arpl
sbb
aad
in
aam
bound
sbb
pop
scas
stc
dec
stos
mov
mov
loopne
ret
sub
xor
loopne
jne
jg
into
out
iret
sbb
stos
fsubs
loope
outsb
scas
daa
das
stos
cli
pop
in
push
mov
out
xchg
and
loope
pop
push
roll
dec
push
pop
jl
icebp
fwait
xorb
in
xchg
dec
ja
lods
mov
stc
aas
lds
mov
mov
cmp
inc
push
sbb
out
imul
mov
sti
div
ret
movsb
xor
mov
jnp
pop
pop
xchg
push
cmp
and
adc
mov
xchg
xor
xchg
xor
jno
into
add
mov
fldl
xchg
and
in
xchg
cmpl
aaa
sbb
inc
shrl
jae
loope
jp
dec
and
and
sahf
sub
mov
cmp
mov
incb
sub
fbld
in
js
push
imul
sbb
fstl
cli
sub
add
adc
or
jl
hlt
stc
push
pop
inc
push
xchg
push
sub
cwtl
pop
lret
es
insb
sbb
push
jae
outsb
in
inc
shl
pop
or
mov
or
cltd
pop
jb
loope
in
xor
lea
mov
dec
jno
jl
sbb
sub
adcb
dec
fnstenv
mov
add
xchg
ficompl
js
das
testl
mov
call
ret
dec
fwait
mov
adcl
call
sub
dec
in
call
dec
mov
arpl
sti
push
xor
xor
repnz
or
dec
call
xchg
inc
pop
pop
rcl
sbb
lods
mov
out
inc
adc
lcall
mov
lahf
sub
dec
or
mov
mov
out
sub
sub
cmp
shll
fwait
je
cmp
push
fnstcw
cmp
inc
das
sub
push
test
xor
stc
mov
shl
push
movsb
into
out
aas
jge
adc
ror
insl
and
jl
xor
pop
data16
sub
ljmp
xchg
sub
sbb
fiaddl
sbb
xor
xor
mov
sbb
mov
mov
ds
sbb
xchg
sahf
sti
push
rcll
in
and
inc
inc
fldenv
mov
xor
inc
mov
and
sub
cmp
stos
lods
add
push
int
add
xor
frstor
jns
sub
sub
ficomps
insl
cmp
and
dec
movsb
sbb
pop
call
into
jbe
pop
cwtl
xor
stos
bound
aad
push
push
inc
cmp
mov
push
pop
adc
pop
mov
bound
aaa
mov
stos
aam
sub
bound
notl
stc
psubq
inc
fidivrl
fwait
mov
jbe
neg
leave
or
fdivl
dec
xchg
mov
add
add
xchg
mov
int
xorb
negb
in
ja
mov
das
nop
roll
cli
in
dec
lea
cmp
loopne
adc
call
inc
sub
inc
lret
push
push
je
mov
mov
mov
nop
sbb
mov
jbe
roll
loop
add
xor
and
lods
push
jns
mov
and
repnz
cli
xchg
sbb
aaa
and
insb
xor
sub
cmp
sub
inc
out
test
inc
test
call
and
adc
xchg
lret
mov
cs
sbb
stos
pop
rcrb
inc
or
dec
cmp
xchg
sbb
roll
cmp
jge
add
jo
daa
add
shrl
xchg
xchg
mov
push
imul
or
shlb
xor
dec
dec
and
cmp
sbb
and
cmp
push
and
arpl
xchg
ficomps
cmp
mov
pop
add
mov
mov
xchg
shlb
cmp
dec
das
xor
sbb
xchg
test
push
lock
xchg
xchg
daa
dec
and
inc
mov
push
adc
cmp
xchg
sbb
sbb
cmp
mov
jle
leave
ds
pop
sub
sbb
jbe
mov
and
data16
and
sbb
mov
xor
push
aad
xor
and
mov
sbb
out
xor
loop
jecxz
imul
pop
lods
sub
aaa
lcall
sahf
sbb
mov
dec
repnz
stc
daa
sub
xor
pop
pop
imul
pop
jge
adc
and
adc
push
fwait
shrb
ljmp
or
adcb
mov
dec
in
pop
cmpsl
ljmp
jmp
sbb
in
xchg
outsl
sahf
sbb
into
sbb
pop
popf
and
add
and
mov
jbe
movsl
imul
fwait
lret
jb
or
adc
and
add
pusha
sti
leave
lret
mov
xchg
jge
jecxz
xor
enter
xchg
mov
xchg
add
sub
and
adc
aad
sbb
jmp
adc
or
cmp
xor
xor
xchg
mov
jbe
xor
in
pop
mov
pop
jo
xor
xchg
sbb
hlt
mov
xor
mov
inc
stos
sub
fidivrl
mov
and
dec
adc
fdivrl
cmp
and
sbb
push
mov
movsl
push
lcall
stos
nop
stos
js
jge
pop
mov
sbb
cmpsb
pop
mov
adc
loope
fldcw
sbb
call
es
and
xor
stc
insl
cs
inc
and
dec
mov
sub
shl
cmp
in
sbb
and
rep
and
adc
ljmp
jle
icebp
dec
adc
or
adcb
cmp
test
jmp
mov
mov
ss
pop
xor
fstpt
daa
adc
frstor
rcll
inc
jmp
and
icebp
imul
in
mov
xor
pop
xor
fstps
mov
inc
pop
dec
mov
inc
mov
xchg
mov
hlt
pushf
js
mov
jnp
xor
xchg
sbb
in
out
or
and
cmpsb
mov
test
in
sti
sub
cmp
sbb
adc
or
stos
mov
sub
cmp
mov
or
cli
js
sub
and
ret
mov
data16
loop
adc
fwait
in
bound
sub
xchg
stc
pop
xchg
mov
repnz
test
inc
pop
cmp
mov
sbb
jnp
fcoml
and
adc
repnz
and
inc
sti
lcall
pop
aad
mov
and
xchg
inc
cmp
jae
push
stos
lsl
aad
inc
mov
xor
dec
loop
xchg
and
cltd
call
xor
sbb
mov
popa
cli
sbb
mov
pop
push
clc
xor
notb
push
hlt
sbb
sbb
sbb
sub
xchg
cmc
sbb
jp
mov
add
dec
pop
xchg
sbbl
xor
pop
lock
sti
add
les
xchg
sbb
push
das
or
cmp
sarb
div
inc
lods
pop
popf
mov
mov
imul
test
call
popf
jb
xchg
jae
inc
xchg
adc
pop
jb
pusha
repnz
lds
mov
mov
mov
xchg
jno
mov
and
sub
add
sub
adc
and
jne
sbb
ljmp
sbb
and
pop
xor
stc
sub
and
lret
xchg
cmpsb
in
mov
sbb
lahf
pusha
pop
pushf
push
fwait
xchg
inc
mov
jb
push
scas
and
inc
mov
insb
cmpsb
sub
pop
addr16
cmpsb
sbb
adc
pop
movzwl
loope
xor
push
mov
xchg
xchg
aam
outsl
inc
adc
adc
das
mov
or
push
inc
and
imul
subb
pop
dec
xchg
and
adc
sbb
sbb
push
fxch
out
push
in
ljmp
jb
push
adc
xchg
das
sub
jne
pop
mov
cmp
enter
lret
mov
adc
sbb
or
cmpb
sub
sbb
rol
mov
nopl
lret
mov
imul
loop
lds
and
dec
xor
mov
pop
mov
sar
test
xchg
pop
jecxz
cmp
add
ja
adc
jl
cwtl
ret
sti
int
sub
xchg
pop
cmc
jl
bound
ftst
mov
mull
mov
jno
cmpsl
and
mov
mov
push
jae,pn
mov
sub
push
inc
mov
jge
cltd
cmp
imull
insl
ss
sti
cmp
cmp
mov
lcall
repz
xchg
popf
add
sbb
notl
adc
or
cltd
or
aas
xchg
xchg
add
jno
sbb
mov
or
mov
iret
subb
fbstp
sbb
sbb
inc
cmp
and
adc
xchg
int
pop
out
out
xchg
sbb
sbb
xchg
jp
sbb
xchg
xchg
movsl
rorb
cwtl
or
and
cmp
or
mov
into
mov
xor
cmp
lds
sti
inc
stos
and
in
dec
inc
ficomps
xor
in
sbb
pop
mov
xchg
mov
add
xchg
xor
inc
popa
mov
sbb
scas
loop
add
pop
and
jg
sbb
sub
add
jecxz
xor
pop
xchg
fwait
dec
jg
lea
popf
sbb
lods
popa
sub
sub
in
popf
mov
jns
or
sub
dec
sbb
enter
pop
mov
xlat
mov
movsl
movsb
or
add
add
or
das
adc
xor
test
mov
and
mov
lcall
mov
jecxz
pop
add
insb
push
pop
call
xor
roll
sbb
mov
sahf
push
sarb
icebp
push
cmc
mov
pop
lea
mov
push
into
xor
and
fistpl
out
imul
repz
lods
shl
aad
adc
mov
int
imul
outsl
sbbb
ficompl
push
add
push
lret
pop
dec
and
lret
sub
xor
icebp
gs
jno
push
and
out
ss
aad
mov
daa
mov
add
in
xor
lret
mov
jge
sarl
popa
mov
mov
add
les
nop
pop
inc
movsb
fldenv
stos
xor
pushf
xchg
pushl
lcall
jnp
push
outsl
or
xchg
out
test
xor
mov
aaa
sbb
cwtl
es
cmpsb
sub
fisttpll
call
in
rcll
ss
repnz
in
test
cmp
or
jg
add
sti
xor
mov
xchg
imul
pushf
popa
push
pop
inc
push
and
mov
inc
or
addr16
shl
outsl
sbb
sbb
roll
cmp
mov
inc
jg
in
cmp
inc
fwait
inc
divl
mov
xchg
sub
ljmp
and
test
rcll
sahf
hlt
movsb
mov
loop
mov
jbe
pop
sub
mov
subb
sub
in
ja
rolb
test
fdivs
xchg
aam
out
arpl
pop
push
pop
mov
mov
mov
xor
addr16
ret
lahf
dec
dec
cwtl
xor
xor
sbb
pop
mov
push
mov
out
ds
fwait
insl
pop
negb
sbb
pop
insl
shll
call
pop
je
cmp
push
mov
mov
cld
ljmp
inc
sbb
push
add
push
fildll
aas
rcll
adc
fbld
inc
and
cmp
sbb
hlt
fistl
mov
lock
jp
cmp
ret
lods
loop
fs
loop
cmp
cs
inc
mov
jg
test
jae
aad
scas
lea
xchg
mov
icebp
sbb
mov
mov
test
inc
mov
bound
push
pop
ljmp
mov
xor
jmp
cmpsl
xchg
shll
adc
pop
in
nop
xchg
mov
jge
push
iret
inc
pop
cmpsl
xchg
mov
and
movsl
movsb
inc
pop
cmp
mov
pop
clc
ret
loope
fwait
gs
mov
repnz
scas
pop
push
dec
gs
lds
sub
jle
inc
jle
and
das
fldt
aaa
mov
test
mov
sbb
aaa
insl
mov
jp
xor
js
ss
xor
icebp
cli
gs
pop
cwtl
lea
int
and
xchg
push
outsl
out
sub
test
iret
ss
mov
cmpsb
sub
rorl
cmp
jb
test
fld
mov
cmp
shl
push
xchg
mov
insb
mov
imul
mov
adc
adc
sbb
or
outsl
mov
aam
adc
cmpsl
fiadds
dec
cmpsl
jbe
pop
sbbl
mov
cmc
sub
mov
pop
negb
lods
dec
and
into
outsb
inc
push
js
icebp
mov
daa
in
jne
add
fldcw
push
xor
andl
lds
xor
xchg
fs
call
outsl
sbb
cmp
sbb
push
in
arpl
push
pop
imul
lcall
mov
daa
jmp
sbb
pop
and
in
sbb
adc
or
loope
sbb
cs
arpl
mov
inc
inc
movsb
or
cmp
dec
add
imul
xchg
das
cltd
loop
lock
test
flds
mov
test
and
daa
xor
pop
jmp
pop
scas
mov
dec
inc
dec
xchg
test
push
xor
jmp
push
push
daa
adc
call
aaa
orb
xchg
adc
cmp
mov
and
jg
mov
pop
inc
mov
mov
inc
dec
cmp
mov
and
cmp
shl
mov
cmpsb
rorl
add
lock
enter
mov
ds
mov
in
xchg
lock
cmc
jmp
pop
jp
sub
adc
mov
das
cmp
sub
mov
mov
sub
aam
arpl
gs
cmp
and
lret
push
and
lds
jp
mov
mov
and
ret
popf
popa
xor
add
xchg
hlt
push
popf
or
es
ret
mov
mov
xchg
bnd
imul
cmp
hlt
and
mov
jg
push
insl
sub
xchg
push
pop
push
push
pop
clc
daa
push
and
loop
adc
aaa
das
in
or
dec
push
xor
mov
sbb
mov
cmpsl
xor
dec
sub
mov
adc
cltd
testb
mov
mov
sti
cmp
adc
dec
repnz
and
testl
jp
andl
mov
jnp
mov
mov
mov
popf
inc
xchg
and
mov
xor
lock
xor
pop
sbb
cmpsb
in
and
cmp
adc
xor
pop
and
in
and
in
test
je
xor
and
jno
push
lcall
mov
and
inc
nop
daa
lcall
mov
jae
pop
aaa
sub
add
mov
rcrb
icebp
xchg
lods
nop
aaa
mov
andb
sub
sub
leave
pushf
mov
adc
bound
popf
or
cmc
enter
adc
mov
jbe
push
ret
add
sbb
arpl
xor
sub
rorl
xchg
push
xchg
cmp
push
les
inc
scas
andl
es
xchg
xor
gs
add
hlt
dec
insl
and
jge
sbb
cmp
cmpsb
jg
push
pop
xchg
adc
popf
inc
lcall
xchg
aad
jge
xor
mov
sub
or
inc
arpl
sbb
sub
cs
das
sub
sbb
mov
cmpsb
xor
daa
xchg
dec
pop
push
in
arpl
pop
mov
xchg
cmpsb
stc
pop
lods
shll
aam
in
inc
pusha
jmp
les
adc
adc
xor
int3
cmp
movsl
test
cmpsl
es
movsb
dec
add
and
sbb
addl
das
movsl
popa
mov
xor
daa
lods
mov
jmp
sbb
mov
daa
dec
mov
repnz
test
pop
sub
outsl
aad
pop
into
sbb
nop
in
mov
push
mov
xor
es
dec
sbb
jne
js
mov
inc
pop
fisttpl
push
cli
push
sti
sbb
into
mov
mov
cmp
out
shll
sub
cmp
xor
aaa
call
dec
rcrb
adc
mov
cmp
hlt
lret
and
cmc
xor
push
stos
mov
pop
push
in
fcompl
inc
scas
dec
loope
shrl
jmp
dec
in
xchg
cmc
mov
add
bound
jbe
je
mov
test
jp
sub
jb
in
inc
mov
mov
mov
inc
in
andl
xchg
mov
lgs
add
imul
cmpsb
sub
adc
icebp
or
ret
out
mulb
stc
int
sti
pusha
and
sbb
gs
adc
scas
mov
sti
jmp
cmpsb
icebp
sbb
push
cmp
in
rcll
ret
cmc
mov
out
imul
sbb
mov
mov
test
movsl
cmp
int
xor
add
imul
add
ficompl
repnz
pop
sbb
hlt
mov
jae
cltd
sti
xchg
jle
mov
lds
into
jp
test
stc
mov
xor
adc
cli
insb
cmp
lods
cmp
sbb
adcl
xor
sti
jno
mov
mov
and
aam
daa
lods
dec
lret
mov
test
sbb
lds
hlt
and
es
xor
mov
mov
sbb
jnp
out
dec
inc
les
jmp
movsl
jne
popa
xchg
jne
int3
pop
arpl
jne
xor
and
pushf
iret
imul
push
inc
jecxz
arpl
mov
loope
fwait
enter
lahf
in
jnp
imul
jns
sarb
pop
push
rcrl
lock
sbb
int
inc
vpackuswb
hlt
inc
std
xchg
push
push
and
push
test
cmp
dec
sar
sub
loope
fs
sub
cmp
mov
leave
std
ss
mov
gs
sbb
clc
xchg
mov
fistps
std
and
xor
lcall
jno
mov
lret
adc
inc
es
loop
sub
fs
adc
pop
jnp
rcr
add
das
push
sub
sahf
ret
sub
inc
fcoml
add
dec
and
xchg
xchg
outsl
cmpsb
into
clc
fisubs
popa
loop
insb
jne
aas
ret
cmp
mov
mov
pop
call
xchg
movsb
adc
jbe
sbb
adc
js
xchg
stos
and
sbb
mov
push
je
push
jns
rcl
jne
shll
shrl
in
xor
cmp
ficoms
mov
mov
sbb
adc
das
popa
fldl
adcb
mov
adc
and
loope
fwait
mov
xorl
cli
jl
mov
and
push
dec
test
xor
jp
sbb
cwtl
or
int
pop
icebp
cmp
insb
push
pop
loop
sti
xor
and
jg
fnstcw
xor
inc
mov
cmp
or
repz
mov
stos
mov
push
push
stos
mov
jg
lret
sbb
xor
sub
fwait
sarl
xor
test
imul
cmpsl
jp
mov
mov
pop
std
test
cmp
jns
inc
imul
dec
imul
sub
movsl
mov
and
leave
addr16
pop
dec
iret
and
aaa
insl
cmp
outsb
mov
xor
dec
pop
cmpb
jo
jno
or
out
mov
pop
test
cld
mul
xchg
cmp
scas
hlt
data16
int
cmpsl
sbb
xor
cmpsl
cmp
cmc
fsts
inc
sbb
pop
mov
notb
and
pop
pop
sbb
and
aam
adc
imul
push
and
jno
and
adc
and
lcall
loop
es
push
mov
push
sub
cmp
mov
loop
cmp
sub
cwtl
das
and
inc
repz
das
test
nop
sbb
jl
mov
or
push
xor
push
sbb
cmp
push
popa
and
loop
dec
push
mov
fistpl
inc
cmp
lret
inc
dec
outsb
adcb
inc
loopew,pt
jne
and
adc
call
daa
cli
sub
adc
pop
test
in
inc
outsl
push
je
jge
pop
push
adc
inc
mov
push
inc
ja
xor
imull
sbbb
out
jge
insl
rcll
std
lods
and
in
push
adc
xor
push
pop
pop
stc
push
jecxz
in
addr16
adc
dec
out
xchg
lods
loop
push
push
cmp
xchg
push
and
and
add
leave
pop
test
lret
cmp
push
sub
call
sarl
int3
dec
clc
cmpsb
std
inc
inc
xchg
cmp
and
inc
jbe
dec
lds
dec
mov
pusha
mov
movl
sbb
sbb
sahf
jl
loop
add
daa
stc
inc
dec
cmp
loop
or
and
loop
push
arpl
inc
fcomps
and
icebp
pop
test
cmp
and
inc
sub
and
xor
mov
popa
sbb
sbb
stos
ss
mov
enter
push
loop
push
int
lods
lahf
in
pop
cmpb
into
loope
std
movsl
iret
fsubl
arpl
xor
je
xor
mov
mov
cmc
stc
and
popf
inc
ljmp
cmpsb
dec
jno
jmp
cs
fwait
add
imul
cld
aad
std
xchg
jmp
cld
or
test
xchg
cmp
sbb
insl
sub
add
sbb
es
addr16
inc
push
cmp
in
push
and
and
sub
xor
int
or
inc
imul
cmp
jecxz
add
pop
lahf
rcl
mov
rcll
mov
mov
repz
sbb
fsubrl
mov
and
mov
loopne
inc
sub
jecxz
cmp
dec
repnz
and
jae
adc
sub
ljmp
dec
xchg
cmpl
gs
cmp
xor
fstps
xor
sbb
xor
scas
mov
or
dec
xor
das
in
sbb
mov
push
movsb
inc
jo
iret
mov
add
jecxz
aam
andl
cmp
lea
jne
stc
xor
push
sub
push
daa
cmp
ficoml
mov
loop
mov
cmp
popf
pop
xchg
push
mov
adc
xchg
arpl
and
adc
mov
inc
mov
testb
cmp
gs
enter
xlat
ret
dec
nop
jnp
pusha
stos
imul
mov
les
sbb
sarl
adc
adc
and
push
xchg
xchg
icebp
stc
aad
jl
daa
mov
cmpps
xor
movsb
pop
repnz
pusha
daa
mov
lock
mov
fdivrs
jbe
flds
dec
mov
pop
adc
and
loopne
jno
lea
stc
xor
jle
mov
lods
test
cmp
inc
or
jno
mov
mov
sbb
scas
push
cwtl
mov
popa
test
sbb
sbb
jle
pop
popf
xor
sbb
mov
stc
mov
stos
mov
sbb
sbb
imul
cs
mov
pop
mov
jp
lods
je
xor
inc
xor
xor
mov
fwait
inc
add
xchg
jmp
sbb
mov
icebp
dec
sbb
ljmp
pop
nop
loope
push
enter
mov
aas
mov
test
push
popf
adcl
xor
jae
dec
subl
test
inc
mov
lock
sub
insb
cmpl
adc
cmpsl
adcl
loop
iret
in
mov
mov
icebp
adc
push
jno
sub
sti
test
push
loop
int3
inc
cltd
mov
jns
gs
xchg
pop
xor
mov
arpl
push
fnstenv
imul
jmp
xor
in
clc
push
adc
and
int
testb
or
loop
jmp
xchg
cmp
jecxz
test
pop
pop
lock
mov
dec
adcl
mov
test
sub
xor
stos
pop
and
ljmp
cmp
and
cmp
hlt
aaa
scas
xor
and
daa
mov
push
pslld
push
dec
adc
popf
mov
mov
and
cmp
push
loope
push
push
inc
icebp
pop
les
dec
cmpb
sub
xchg
mov
gs
pop
test
and
xor
mov
pushf
jmp
ffreep
sub
lahf
popa
pop
leave
sub
push
popa
sub
push
xchg
rcrl
xor
daa
sbb
pop
repz
in
cs
mov
pop
jnp
xorb
ss
out
pop
jmp
aad
dec
es
mov
and
mov
stos
sub
cmp
xor
xchg
in
push
dec
mov
shrb
sbbl
mov
jns
ss
subl
cmp
xor
and
shll
sbb
mov
ror
in
and
mov
in
jge
sbb
call
jae
shlb
xchg
jmp
loope
cmpsb
pop
inc
popa
push
push
mov
jle
jmp
xchg
aaa
cltd
js
shl
fdivrl
and
sub
or
ljmp
mov
push
int3
mov
push
mov
movsb
and
insl
dec
xor
xchg
in
shll
imul
inc
pop
adc
popa
es
aas
nop
jnp
push
mov
es
mov
loop
rcll
or
and
or
dec
stc
mov
mov
fwait
sbb
push
dec
es
pop
mov
sub
je
insl
mov
cmp
add
mulb
andl
cmp
ja
sub
sub
xor
mov
lds
inc
and
xor
mov
lds
in
pop
dec
and
dec
in
push
aas
cmp
loop
and
stos
xchg
mov
or
test
jmp
mov
mov
call
cmc
push
int
push
lret
pushl
mov
enter
sti
pop
or
fildl
rorb
and
lcall
dec
sbb
sub
sub
xchg
int
push
loop
fidivl
xor
outsl
scas
and
rcrl
or
daa
mov
bound
adc
push
outsb
or
sub
jne
movsl
and
cltd
jecxz
sub
mov
cmp
pop
adc
lods
sbb
sahf
gs
mov
in
inc
fldenv
or
xchg
addr16
aam
insl
mov
sbb
arpl
fsubrl
xor
sub
mov
jnp
xor
arpl
popa
movsl
lods
aam
test
mov
ret
xor
push
mov
push
and
mov
add
and
in
xchg
clc
das
sbb
sub
sbb
sbb
and
inc
in
sub
adc
imul
jmp
gs
or
adc
movnti
jecxz
mov
push
adc
and
and
mov
leave
pop
lods
aas
xor
out
cmpb
fisubl
push
push
int
push
out
jbe
dec
lcall
sub
fidivs
jb
xor
jae
push
test
add
pop
in
insl
sbb
push
popa
sub
add
push
xor
add
push
xor
push
xchg
addr16
and
xor
dec
imul
shlb
adc
data16
in
lret
xor
ja
xchg
and
adc
jg
stos
movsl
mov
cltd
jecxz
fidivs
stc
xor
and
and
pusha
inc
stc
call
mov
mov
arpl
ds
orl
loop
jo
xor
clc
and
aaa
mov
cltd
xor
popa
cmp
inc
mov
and
daa
loope
je
push
cli
icebp
and
mov
dec
or
ficompl
push
fisubrl
push
jb
and
inc
sbb
rcll
cmc
cltd
sbb
and
xor
add
dec
push
lret
cltd
repz
inc
xor
mov
push
xor
xchg
aas
test
dec
and
clc
xor
imul
loop
lds
shrb
cs
loope
aaa
pop
push
dec
popf
or
dec
sub
inc
pop
cmp
es
dec
daa
sub
mov
mov
xor
inc
mov
pop
stc
cltd
sbb
mov
push
orl
push
lods
stos
loope
mov
or
pop
and
not
int
int
mov
and
sbb
in
mov
or
ret
nop
std
std
push
test
cmp
fwait
shl
jne
imul
jne
call
push
cmp
nop
inc
ret
mov
call
push
shrl
inc
add
pop
mov
mov
pop
imul
xorl
decb
lods
push
cs
xor
xchg
inc
loop
jmp
xor
and
mov
inc
icebp
popa
ficompl
cltd
push
push
cmc
sbb
into
decb
sbb
aam
movsb
mov
mov
ja
mov
shr
sbb
ss
daa
push
leave
mov
xchg
loop
stos
pop
jbe
add
sbb
sub
cmp
jb,pt
push
adc
inc
sub
lcall
cmc
cmp
xchg
mov
cmpl
and
stos
dec
push
out
gs
push
repnz
mov
test
cmpsl
or
cmc
xchg
jmp
jg
int
xor
aaa
stc
subl
and
pushf
mov
dec
mov
jg
xchg
loop
sarl
pop
sbb
jns
and
scas
stos
push
dec
adc
inc
and
pop
fcoms
push
push
xor
sbb
pushf
cmp
push
fimull
rclb
sub
jl
rcrl
push
xchg
push
xor
push
xor
add
jne
lcall
jbe
push
jp
subb
in
mov
inc
loop
ret
jne,pt
mov
pushf
xor
add
stos
dec
jecxz
imul
rcrl
sbb
dec
inc
andl
mov
xchg
push
jp
aas
jnp
aas
nop
xor
mov
pop
lret
mov
repnz
and
cmp
jle
or
nop
pop
jno
and
sbb
push
add
xor
imul
jb
inc
mov
jecxz
das
stc
jle
mov
outsl
ja
fiaddl
movsb
pop
movsl
icebp
xchg
rorl
sub
notb
sarl
ja
mov
outsl
push
and
aam
loope
and
imulb
jp
popa
lahf
stc
push
xor
hlt
adc
jecxz
inc
and
lcall
jb
std
outsl
cmp
cltd
jnp
push
jae
rep
mov
mov
cltd
or
repz
clc
push
mov
pop
mov
dec
xor
mov
mov
shl
and
inc
mov
xorl
pop
pop
pop
aas
roll
jmp
adc
lcall
fisubl
mov
into
cmc
mov
sub
xchg
scas
sbb
adc
leave
out
and
xchg
and
push
iret
movsl
xor
dec
inc
mov
mov
sub
xchg
and
jg
push
icebp
jno
add
or
xor
mov
lea
fildll
fnstenv
xchg
adc
repnz
push
pop
sub
outsl
repnz
and
andb
stos
add
fcmovne
stos
or
and
jae
hlt
sub
int3
inc
mov
stc
mov
cmp
lret
or
cs
les
sub
inc
mov
sub
mov
fucomp
syscall
push
or
inc
lods
adc
sub
xchg
shrl
cwtl
inc
or
push
push
stos
xchg
lahf
mov
std
fdivrs
xchg
or
mov
js
shll
mov
xchg
dec
pop
lock
mov
jecxz
push
add
push
push
scas
mov
inc
movsb
nop
pop
pushf
jmp
in
or
inc
pushf
push
std
jmp
xor
loope
push
mov
mov
das
movsb
jo
push
bound
inc
xchg
push
and
sarl
push
es
sbb
inc
ljmp
jae
sub
xor
test
stos
int
push
add
mov
das
jne
mov
cmp
sbb
sbb
fwait
and
add
push
cmp
negb
xchg
fwait
pushf
sbb
sbb
in
push
mov
and
mov
fcomip
mov
js
xchg
divl
sub
testl
lret
mov
mov
pop
leave
cwtl
aas
rcll
and
xor
xchg
ljmp
sti
xchg
shl
mov
les
mov
push
leave
fwait
loop
xorb
and
mov
fldcw
nop
jae
mov
cmp
sub
imulb
icebp
fsubl
popf
mov
ja
mov
xchg
push
pop
int
inc
arpl
sub
sub
mov
push
xchg
and
loop
jo
adc
test
xor
ret
mov
jg
data16
arpl
mov
mov
push
add
jp
and
adc
inc
nop
stos
in
loope
sub
mov
xchg
xchg
mov
inc
movsb
repz
mov
movsb
daa
and
popa
adc
rcll
loop
lcall
and
jmp
jne
cltd
sub
xor
cmp
fldenv
aad
movsb
sarl
cmp
adcb
loop
mov
cmp
jle
sub
stc
cmp
xchg
sti
sbb
push
sbb
pushf
sti
lcall
mov
sbb
fs
mov
jp
pop
imul
jmp
mov
cmc
leave
movsl
imul
aam
arpl
mov
mov
iret
ss
jle
inc
lcall
mov
xor
lret
inc
sarb
mov
jbe
stos
test
xor
jbe
sub
inc
adc
pop
and
sbb
xchg
gs
pop
fwait
mov
aad
movsl
jb
mov
xor
loop
scas
mov
fwait
mov
mov
fs
xor
mov
mov
pop
jl
mov
int
jns
out
and
pop
xchg
cmovae
mov
pop
ja
sbb
loop
repz
enter
jg
push
repz
rclb
loop
stos
sbb
cmp
pop
push
sub
pop
mov
into
and
push
sbb
xchg
cltd
shll
mov
jg
test
xchg
popa
popa
sbb
lret
add
lods
jo
loope
inc
mov
and
or
call
and
push
and
xchg
adc
ja
pop
rorb
int
jp
sbb
mov
cmp
jns
xchg
mov
call
mov
xor
js
popa
fcomi
and
outsb
stc
jb
popf
cltd
inc
aas
mov
add
xchg
lret
push
adc
lods
jg
sbbl
jno
pop
scas
cmp
in
frstor
xchg
xchg
mov
push
movsb
push
jns
clc
scas
mov
dec
pop
sub
pop
lahf
push
icebp
lcall
dec
push
pop
sti
cmp
stos
and
scas
je
and
aas
mov
adc
mov
ret
stos
pushf
mov
mov
aaa
sarl
int
es
inc
lock
inc
fadd
xchg
adc
mov
cmp
add
imul
pop
leave
mov
and
pop
and
ret
mov
cwtl
popf
rol
fistl
les
mov
mov
mov
shlb
int3
cmpb
pop
int
pop
jno
addr16
xchg
mov
les
pop
lcall
mov
mov
mov
das
adc
xchg
mov
push
push
adc
sub
xor
mov
adc
leave
pop
mov
test
and
add
adc
mov
lahf
in
jno
imul
bound
add
in
xchg
adc
out
jl
xor
adc
lods
add
adc
stos
cmc
xchg
push
das
and
add
jb
cltd
mov
xor
ja
shrl
cmp
xor
jae
popa
in
xor
jno
fidivrl
repnz
xchg
xchg
inc
and
mov
add
ds
test
mov
mov
icebp
daa
mov
test
loop
gs
pop
push
xchg
sub
into
inc
sbb
xchg
cli
outsl
cli
sbb
imul
sbb
push
adc
xchg
pushf
xor
fwait
and
cmp
sub
cmpsl
xchg
and
push
mov
xor
and
dec
shlb
leave
insl
lcall
jbe
mov
loopne
data16
xor
enter
sbb
mov
addr16
jb
jno
mov
loop
js
insl
sbbl
nop
outsb
je
ds
sub
sti
addr16
mov
dec
leave
mov
inc
out
pop
test
mov
leave
sbb
pop
enter
popa
or
lret
out
pop
jle
cmp
aaa
mov
test
mov
call
es
push
adc
hlt
jbe
adc
cmp
mov
xor
call
xchg
or
add
push
mov
leave
xor
imul
mov
adc
mov
mov
pop
add
inc
movsb
push
and
pop
rclb
lods
and
es
mov
fstpt
push
outsl
pushf
call
inc
mov
mov
bnd
cld
xchg
jbe
mov
das
cs
xchg
aad
and
mov
xchg
mov
js
sbbl
dec
pop
mulb
test
pop
xor
mov
mov
and
xchg
sub
repnz
mov
jl
fcoml
cmp
dec
packuswb
cmp
mov
jp
pop
sbb
sti
sub
test
popf
mov
mov
rorb
inc
call
mov
loop
sbb
lahf
sbb
jecxz
mov
lcall
sbb
xchg
push
sub
icebp
mov
mov
cmc
jp
mov
cmp
dec
dec
test
xchg
enter
mov
and
fnstcw
inc
jae
shr
xor
je
aaa
jl
pusha
rcll
cmp
dec
mov
jnp
mov
dec
cld
cmpsl
cltd
push
jp
stos
sub
ficompl
cltd
jle
jno
fstl
pop
sub
mov
xor
cmpsb
add
outsb
xor
dec
aaa
cmp
dec
sbb
icebp
pop
cwtl
cmp
xor
popa
cmp
fwait
fwait
mov
daa
push
loope
sbb
inc
inc
in
push
jns
loop
mov
jne
jnp
scas
popa
cmp
cmp
push
jge
pop
jns
xchg
movsl
pmaddwd
and
xlat
movnti
pop
ss
or
fs
loope
stos
dec
dec
mov
stos
pusha
lds
pop
pop
int3
xor
sbb
loop
jb
stc
dec
ds
jno
sbb
imul
sub
aas
rcl
loop
cmp
andl
mov
cltd
mov
sbb
fidivl
ficompl
rclb
mov
push
bound
ja
mov
sub
cmpb
mov
rcr
mov
sub
lcall
insb
cwtl
sbb
jecxz
outsl
enter
jp
adc
dec
outsl
pop
hlt
into
shll
sbb
sahf
jecxz
pop
popf
sub
xchg
dec
fwait
xor
out
jecxz
std
and
and
dec
fldcw
aas
iret
and
repnz
sbb
pop
sub
xor
mov
and
jae
sbb
inc
pop
jns
mov
loop
outsl
pop
ljmp
xchg
ficoms
rcrb
inc
movsl
lret
mov
jno
pusha
insl
adc
in
adc
icebp
in
xor
or
add
nop
loop
fldcw
mov
fstpt
xchg
pop
jmp
arpl
push
lods
inc
dec
pop
xorb
call
inc
insl
pop
testl
push
fwait
imul
std
xchg
mov
sub
in
lds
push
and
int
xlat
popf
sub
mov
adc
cmp
sub
es
inc
les
sbb
movsl
cmp
add
imul
jno
push
stos
adc
mov
into
inc
xchg
cmp
sbb
push
out
push
sbb
arpl
mov
and
pop
dec
arpl
adc
adc
xor
pop
idivl
inc
movsl
cli
cmp
dec
xchg
jle
cmpl
popf
mov
mov
daa
xchg
loop
retw
mov
adc
mov
mov
loop
nop
push
test
xor
test
push
pop
nop
iret
ss
mov
mov
std
lods
mov
shlb
lcall
sbb
or
and
shll
bound
rcl
jecxz
push
mov
mov
aas
xor
imul
iret
dec
sub
ljmp
pop
sub
ret
leave
aaa
xchg
or
mov
loop
mov
imul
inc
xor
adcl
push
orl
jne
cmpl
mov
addl
movsl
sahf
sbbb
insb
mov
and
cmp
sub
js
mov
test
or
adc
xchg
xchg
movsl
das
xor
cmpsl
bound
stos
das
cmpsl
popf
jno
mov
daa
mov
cmpsb
add
cltd
pop
out
cmp
in
push
test
jmp
adc
stc
and
cmp
lds
scas
adc
add
sbb
inc
mov
jb
cmp
mov
in
jl
out
mov
mov
inc
pop
loop
pusha
push
cmpsb
or
xor
loop
sbb
mov
xchg
sbb
and
sbb
scas
sbb
rcrb
test
xor
iret
mov
std
xchg
mov
aam
adc
stos
mov
insb
push
jo
and
cld
and
sub
add
push
fisttpll
pop
mov
xchg
leave
adc
popf
mov
cmpsl
fxch
sbb
rcrb
repz
fwait
insb
call
push
rcll
add
stc
movsb
xchg
jae
inc
mov
mov
shl
std
sbb
xor
mov
clc
test
movsb
pop
mov
iret
es
iret
cmp
push
jge
mov
lds
je
stos
jecxz
popa
popa
sbb
mov
test
jbe
je
mov
xchg
or
xor
push
scas
push
arpl
push
sub
xor
stos
xchg
aad
data16
inc
aam
data16
mov
and
mov
hlt
fs
insb
syscall
lahf
popa
ds
aaa
cmp
mov
sbb
mov
xor
mov
int
dec
inc
imul
loope
aas
cmp
mov
xchg
xor
aam
loope
sbb
sbb
fs
andl
push
dec
jecxz
aaa
clc
imul
leave
pop
rcrl
mov
lods
or
pop
mov
into
ljmp
sub
cmp
pop
cld
test
and
sbb
push
sub
and
pop
das
sbb
xchg
push
mov
pushf
nop
xor
outsb
out
jne
and
fadd
cmp
dec
push
mov
out
mov
cmp
inc
mov
dec
lea
inc
pop
leave
mov
sbb
test
call
out
lret
mov
xchg
repnz
sbb
testl
ja
out
xor
fdivs
xchg
lods
iret
push
jns
and
pmaxub
xchg
mov
popf
rol
sub
test
pushf
push
push
insb
xor
jns
mov
ds
mov
shlb
adcb
cwtl
xchg
stc
insl
sub
dec
loop
dec
push
fistpl
sub
fstl
stc
aas
sub
mov
cmp
cs
adc
mov
sbb
test
filds
sub
shr
xchg
lods
add
jnp
xchg
out
les
adc
pusha
or
and
and
test
scas
mov
and
cmpsb
cs
xchg
mov
out
lcall
pop
mov
cmp
xchg
leave
adc
xor
std
pushf
mov
add
jecxz
addr16
sbb
sub
jnp
cmp
sub
into
push
xor
popf
cltd
mov
test
ja
sbb
push
mov
push
daa
mov
loop
pop
div
outsb
sbb
cmp
mov
xchg
loop
shll
lahf
or
add
and
or
mov
mov
pushf
imul
mov
stc
add
jmp
xchg
pop
pop
stc
and
xor
xchg
fstpl
cmp
lret
hlt
xchg
loop
inc
mov
sbb
dec
cpuid
cmp
xchg
lret
pop
xor
add
lea
cmovb
push
loop
pop
jp
mov
shrl
loop
pop
pop
dec
pushf
aam
movsl
cmc
and
xor
outsl
lods
jb
movsl
cltd
jne
and
mov
outsl
sarl
mov
and
jo
into
xchg
fdivrl
rcll
arpl
mov
adc
in
mov
mov
cmp
lahf
push
sbb
mov
sub
mov
repnz
jle
les
dec
push
mov
aam
pop
lahf
out
sbb
dec
add
lahf
jle
jl
rcrl
popf
mov
sub
sbb
ret
popa
jmp
sub
ret
and
fcompl
fincstp
and
je
lods
inc
popf
daa
shl
push
stos
add
aam
push
sbb
pop
imul
or
sub
push
inc
cmp
inc
push
fwait
and
mov
aam
dec
pusha
add
add
and
xchg
mov
iret
enter
adcl
stc
lods
lds
and
sub
pop
outsl
xor
movsb
imul
adc
loop
jbe
xor
pop
mov
movsb
pop
arpl
mov
cli
das
outsl
push
dec
cmpsb
or
lock
addb
mov
call
xchg
add
fadds
and
pushf
and
pop
icebp
mov
sub
jge
mov
inc
xchg
loop
mov
ja
push
sbb
sbb
cmc
mov
mov
jns
and
imul
aad
lcall
test
adcl
sbb
xchg
lea
mov
in
cmp
pop
mov
inc
in
mov
or
cltd
xchg
fsub
inc
mov
testb
inc
pop
daa
aaa
mov
mov
and
xlat
sub
jbe
cmc
cmp
test
adc
xchg
mov
mulb
push
sub
mov
mov
jmp
sbb
shll
leave
xor
mov
je
out
push
add
cltd
cltd
mov
push
pop
and
inc
inc
mulb
add
pusha
adc
aam
inc
in
pop
sarl
rcrl
cs
aam
cwtl
inc
sbb
fwait
adc
xchg
xor
mov
repnz
xchg
sub
sub
fnstenv
and
dec
xor
push
push
cltd
adc
es
mov
int
and
popf
rorb
mov
lea
imul
stc
data16
fisubl
sub
cmp
and
adcl
loopne
pop
adc
stc
sub
xchg
mov
push
adc
xchg
dec
xor
imul
adc
mov
mov
cmp
sbb
clc
mov
adc
lahf
lret
and
push
inc
movsl
xor
addr16
jo
xchg
adc
daa
andl
adcw
and
dec
das
dec
movsb
mov
add
mov
mov
jl
push
in
adc
and
cmp
inc
loopne
jmp
iret
mov
adc
and
dec
lcall
sbb
push
and
xor
xchg
fs
push
pop
and
mov
jecxz
fnstsw
popl
aaa
leave
ja
dec
sbb
call
rcll
dec
sbb
mov
and
test
push
popa
and
pop
fsts
inc
jns
jb
iret
dec
or
or
out
aas
add
cli
cmp
aaa
mov
xorb
cmc
fldenv
mov
pop
ds
mov
cmp
and
xchg
pop
xor
insb
mov
in
adc
sahf
jb
loop
ret
fwait
push
lret
jb
jg
xor
xor
xor
or
mov
aas
rcr
add
push
sarl
push
sti
cs
fcoms
adc
daa
xorb
inc
nop
popa
dec
fisubl
sbb
jne
sbb
pop
bound
adcl
xor
icebp
and
in
xchg
out
mov
cltd
xchg
inc
mov
xchg
mov
and
and
sbbl
sti
imul
sbb
adc
mov
adc
sti
sbb
int
call
mov
loope
outsl
mov
and
jbe
into
sbb
mov
negl
das
leave
sub
pop
mov
cmp
xchg
mov
lcallw
shr
add
xchg
outsb
xchg
mov
dec
dec
xchg
mov
pop
cld
mov
xchg
addr16
ljmp
orl
push
mov
mov
or
xor
mov
and
jecxz
xchg
outsl
mulb
adc
xchg
sub
bound
xor
lods
add
loop
loope
sbb
gs
sub
loop
pop
nop
pop
cmp
or
jl
jp
adc
out
pop
imul
mov
sub
push
mov
shrl
dec
pop
mov
mov
gs
stc
mov
loope
sbbb
mov
lret
les
push
pop
cmp
int
in
hlt
repnz
rolb
xchg
xor
jae
or
hlt
ljmp
repz
lock
jns
jns
add
mov
and
push
push
ljmp
cmp
stos
dec
jp
dec
loope
xor
jl
mov
fsubrl
mov
cli
and
sub
lock
movsl
pop
rolb
xchg
mov
add
mov
cmp
jle
sbb
cltd
imul
xor
js
gs
cmp
or
cli
sti
pop
jae
mov
xlat
sub
out
lahf
adc
adc
dec
jmp
mov
lods
pop
mov
push
adc
sub
dec
inc
mov
pop
loop
xor
mov
inc
inc
dec
mov
dec
mov
es
es
inc
inc
mov
cmp
popa
xchg
mov
mov
xchg
cli
adc
push
sbb
nop
push
and
push
fdivr
adc
test
ds
and
add
subl
dec
rorl
pop
mov
sub
cmp
xor
nopl
pop
test
push
pop
jne
dec
push
push
xchg
mov
pop
push
bnd
dec
gs
adc
jbe
sub
mov
jne
into
jne
cmpsb
dec
movb
and
adc
imul
jne
dec
rclb
adc
push
test
pop
in
dec
mov
lods
lea
mov
sbb
stc
shll
sub
jbe
movsl
outsl
imulb
mov
add
sub
mov
scas
jnp
and
sbb
push
dec
dec
mov
adc
jnp
xchg
push
and
pop
sbb
call
pop
sub
sub
inc
popa
push
lret
mov
inc
pop
adc
pop
stos
mov
scas
mov
rclb
cmp
int3
cmp
and
mov
push
aam
push
popf
xor
adc
fldcw
cwtl
sbb
fisubl
and
mov
je
push
mov
xlat
lea
iret
ds
adc
xchg
scas
popf
dec
cmp
lods
test
aas
cmp
rcr
int
out
jmp
scas
dec
out
mov
or
sbb
mov
das
popa
cs
jns
push
test
into
jle
jp
mov
push
mov
adc
mov
cmp
je
jno
neg
dec
je
js
and
loope
add
inc
enter
out
inc
out
and
cmp
orb
cmp
daa
call
xchg
xor
xor
nop
mov
cs
ljmp
enter
jbe
rclb
popa
imul
loop
jbe
in
cltd
jbe
mov
jecxz
sub
xchg
sbb
lret
sbb
push
pop
jl
and
roll
add
testb
push
mov
jno
rclb
jns
pop
popf
xor
push
push
popf
jbe
push
cmp
cltd
add
mov
mov
dec
in
loop
int3
inc
dec
push
mov
jmp
ljmp
dec
cli
pop
repz
pop
sti
in
mov
ss
icebp
jbe
fnsave
mov
jno
fs
jbe
mov
out
dec
push
ror
sahf
subb
mov
gs
push
dec
stos
or
ds
adc
sbb
lds
fisubs
mov
add
adc
mov
cmp
sub
mov
sbb
icebp
mov
and
push
test
push
pop
sahf
int
lcall
imul
and
adc
test
adc
mov
mov
mov
sti
inc
lock
dec
adc
jns
xchg
in
shl
inc
repz
push
and
insb
sbb
hlt
push
pop
mov
data16
and
dec
repnz
sqrtps
and
lea
shl
ja
and
push
sbb
and
sahf
cmp
fisubrs
xchg
mov
shlb
insl
std
loop
push
jno
jb,pt
loope
jp
xchg
xchg
mov
dec
jecxz
lret
xchg
jge
jae,pn
mov
push
negb
nop
ret
aaa
xchg
jg
mov
jns
inc
jns
or
pop
and
xchg
call
fldenv
addr16
pop
xor
xchg
bnd
mov
imul
and
xchg
add
sbb
sbb
push
iret
xorb
gs
daa
test
jne
mov
push
jl
push
test
sub
cs
popf
sub
xor
popa
daa
cltd
dec
jl
jno
cmp
xor
push
inc
and
out
jno
add
and
loop
push
pusha
cwtl
sbbl
in
int
xchg
and
lods
ss
mov
mov
sarb
and
mov
mov
push
mov
loop
test
or
jecxz
sub
lea
dec
sub
mov
test
pop
aas
daa
nop
or
cwtl
jno
pop
aad
sbb
push
leave
shr
inc
lahf
sbb
lds
mov
std
clc
shll
in
mov
fcompl
mov
into
and
int3
cltd
sub
and
push
into
or
into
or
or
or
xor
jle
pop
cmpsb
out
iret
push
lods
xor
xchg
aaa
sub
outsl
mov
cltd
xchg
lret
push
push
imul
loope
pop
xor
sbb
dec
push
popf
mov
adc
cmp
push
inc
in
cmp
arpl
add
jno
cmpsb
ljmp
cmp
lret
mov
xchg
mulb
scas
gs
mov
jns
dec
jno
movsl
push
adc
push
adc
loop
push
mov
pop
mov
icebp
inc
sub
xlat
inc
and
sti
mov
inc
and
dec
shl
pop
and
in
push
andl
call
cmpsl
fadds
mov
jecxz
std
mov
adc
dec
mov
pop
outsl
sbb
andl
adc
cmpb
xorl
cmp
cmpb
adc
sti
cmp
aam
pop
cmp
push
xchg
loopne
aas
shrb
push
mov
mov
adc
clc
dec
lahf
push
inc
inc
cmp
stos
cmp
xor
enter
in
jae
mov
push
gs
lcall
mov
add
pop
insb
aaa
enter
xor
dec
out
push
adc
xchg
adc
mov
xchg
sbb
mov
aaa
repnz
loope
pop
inc
lcall
orl
cmp
inc
xor
mov
sub
in
inc
xor
jmp
jmp
in
test
jecxz
or
fcos
loope
sbb
mov
adc
mov
xor
movsl
push
call
pusha
into
mov
sbb
addb
sub
inc
jae
jae
les
xchg
inc
shll
bound
and
rcpps
xor
and
mov
push
mov
sbb
ret
outsb
and
data16
jl
bound
shr
jae
insl
dec
mov
inc
jae
xor
cmpsl
movsl
push
cli
or
test
test
push
dec
cltd
jno
sbb
dec
stos
xor
sarl
or
pop
into
mov
sbb
add
cmp
icebp
add
shlb
sub
pop
push
fnstenv
dec
jno
inc
sbb
ja
dec
xorl
push
imul
clc
je
mov
cmp
mov
pop
test
rcr
dec
int
nop
lret
shlb
add
pop
xor
push
xchg
cmp
add
rol
ficoml
mov
mov
movsl
cmpsl
addl
loopne
adc
mov
cltd
jo
cmp
mov
cli
pop
push
daa
mov
inc
cmp
xor
sbb
and
jno
imulb
push
ja
pop
test
call
adc
xchg
in
adc
cmp
test
cli
adc
lea
fnstsw
int
imull
and
out
xchg
sub
popa
icebp
push
push
mov
daa
cmp
cld
scas
mov
jb
stos
jns
iret
xor
push
jp
aam
mov
adc
mov
daa
and
or
xor
pop
dec
xor
mov
xchg
jp
subb
lcall
adc
ss
hlt
divb
or
mov
pop
lahf
mov
popa
dec
scas
mulb
mov
mov
popf
xor
pop
addr16
aad
cmp
pop
or
scas
jp
mov
loop
and
fidivl
pmullw
sub
jno
mov
rorl
sub
cmp
add
xor
bound
movsb
lods
outsl
xor
sti
repnz
and
and
test
outsb
popf
test
mov
js
sbb
icebp
sbb
notb
jne
push
or
ja
add
xchg
cmp
and
inc
cmc
inc
aam
stc
push
mov
mov
inc
cmpsb
jl
jno
gs
sub
xchg
adc
xchg
mov
stos
sub
lcall
push
clc
std
push
cmp
and
mov
aaa
mov
push
mov
popf
leave
shlb
jp
mov
ret
arpl
jo
xchg
lret
add
and
xor
lcall
jle
push
cmp
pop
fnsave
xor
mov
inc
mov
jb
xchg
cmp
rcr
sahf
iret
jecxz
scas
jbe
pop
add
repnz
sub
ss
push
bound
cmp
repz
jg
fpatan
add
in
loop
xchg
ljmp
xor
mov
adc
out
fcoml
xor
mov
adc
lret
scas
pop
lcall
push
leave
pop
pushf
sub
daa
arpl
or
inc
sub
dec
pop
mov
rcl
sub
adc
push
mov
stos
loop
scas
cmpsl
loopne
xor
pop
add
mov
push
or
mov
cmpsl
movsl
out
xor
xchg
push
jmp
dec
cmpb
icebp
loop
stc
mov
lcall
xchg
mov
xor
int
addr16
push
pop
enter
mov
insb
scas
push
cmp
inc
arpl
call
loope
call
fsts
mov
icebp
fiaddl
xchg
ret
pop
jnp
and
cltd
insb
mov
sbb
nop
pop
int3
cltd
push
sbb
cltd
xor
push
adc
cmc
xchg
fpatan
adc
fsin
inc
xchg
and
push
pop
add
and
sti
dec
scas
xchg
hlt
cltd
in
jle
xchg
aas
cmp
inc
bound
xor
push
loopne
imul
sahf
inc
jmp
and
loope
jmp
or
xor
push
inc
fstpt
dec
xor
or
hlt
clc
loope,pn
aaa
bound
mov
mov
scas
and
pop
pop
cwtl
sbb
cmpsl
iret
xor
add
and
sbb
fistpll
cltd
mov
adc
mov
mov
jns
add
jl
push
sub
mov
or
pop
jmp
cmp
sub
sub
mov
and
cltd
sbb
adc
xor
in
incl
pop
scas
stc
jae
jmp
sbb
cmp
test
addr16
call
cmp
mov
fcmove
subl
lea
sbb
cmp
and
xchg
movsl
pop
push
dec
xor
adc
pusha
lret
cltd
cltd
aaa
pop
rclb
mov
adc
pop
mov
popa
rcrb
add
mov
sbb
in
pop
mov
xor
orl
pop
jl
pop
push
aas
pop
fwait
xchg
and
jl
repnz
rcrb
or
lret
iret
cmpsl
mov
mov
nop
cmpsb
or
lahf
inc
mov
jo
pop
dec
inc
push
bound
loop
or
cmp
sub
xor
push
popa
mov
imul
movl
dec
int
dec
sub
dec
mov
pop
repnz
sub
lcall
sub
inc
sbb
mov
xchg
sbb
jecxz
mov
pop
xchg
cmp
xor
add
sbb
in
add
xchg
cmpsb
mov
enter
adc
push
movsl
nop
sti
pop
cmp
jb
les
sbb
nop
jg
xor
mov
add
insb
push
loop
jmp
xor
or
push
loop
imul
loop
aaa
arpl
xchg
cmp
pop
cs
xor
xchg
dec
sbb
or
jae
sbbb
lret
xchg
sub
push
sub
fs
sub
in
imulb
dec
popf
pop
aaa
rclb
push
xchg
mov
mov
loop
xchg
sti
sbb
sbb
dec
stc
loope
movsl
jp
test
push
push
mov
lcall
or
jnp
mov
add
mov
cmpsb
sti
or
mov
cmp
frstor
fnsave
cli
xchg
ljmp
push
xor
sub
inc
into
popa
in
ss
hlt
or
jbe
pop
sub
ror
mov
and
and
sbb
mov
push
sub
push
push
add
mov
mov
dec
push
mov
sbb
add
add
mov
dec
fnstenv
icebp
std
rclb
sbb
xchg
xor
mov
pop
sbb
in
test
loope
dec
push
and
sbb
mov
cmp
pop
adc
pop
lcall
and
negb
stos
pop
jne
inc
pop
test
dec
xor
test
rcll
aad
icebp
mov
sbb
dec
xchg
sbb
or
mov
cmp
icebp
aam
xchg
inc
pop
aaa
push
mov
aaa
adc
jmp
xchg
mov
adc
jg
cmp
push
aam
cmp
jmp
push
jnp
icebp
jle
and
and
inc
int
adc
mov
lea
enter
pop
jmp
pop
out
sub
and
out
and
out
and
out
test
aaa
sbb
out
add
ljmp
sbb
aas
and
mov
scas
clc
call
xor
mov
sbb
sbb
add
ljmp
push
pop
or
xor
mov
add
das
push
iret
cli
sbb
mov
popf
push
pop
aad
sarl
fisubl
or
lahf
cmp
aas
xor
xchg
and
inc
mov
out
sub
addl
add
or
fbld
jge
fidivrl
mov
lahf
shll
fyl2xp1
sub
push
lret
and
cmp
fisubl
mov
sub
and
fstl
push
dec
inc
cltd
mov
and
cmp
push
push
lahf
cmp
push
leave
inc
or
shr
push
push
inc
fnstcw
xor
push
push
cltd
je
and
xor
iret
lods
jb
push
xchg
idivl
fldenv
jne
sbb
fdivs
popf
jmp
cwtl
and
icebp
mov
les
push
sbb
int
add
xor
test
dec
cmp
xchg
push
repnz
sub
xor
addb
std
icebp
cmp
xchg
sbb
icebp
ljmp
in
lods
inc
rclb
xor
mov
movsl
sbb
aad
int
cmp
movsl
test
shl
mov
jecxz
cmp
mov
add
mulb
jne
inc
jp
pop
push
fwait
xchg
and
dec
fdivr
nop
jecxz
repnz
ljmp
jmp
div
and
xchg
push
bound
jmp
mov
scas
add
aad
iret
sbb
cwtl
push
cwtl
and
ljmp
and
add
rcll
push
pop
sub
iret
out
cmpsl
xchg
xor
push
xlat
aaa
push
js
and
sbb
push
xlat
push
scas
aad
in
rcrb
xchg
ds
lods
shll
xor
shll
icebp
orl
insl
mov
mov
jle
ret
xor
cmp
push
out
cmp
inc
rclb
cltd
popa
imul
imul
push
leave
sbb
and
sbb
add
cmpsb
lds
test
js
jno
data16
xchg
jmp
xchg
cmp
ljmp
mov
sub
xchg
fidivl
call
xor
and
xchg
jae
out
dec
ficompl
push
and
mov
test
jns
jb
pusha
outsl
and
rclb
fidivl
bound
out
test
adc
jo
leave
popf
fidivs
push
repnz
shrl
out
jno
loop
insl
jp
cltd
loope
mov
xchg
outsl
xchg
adc
movsl
adc
inc
sub
test
nop
fnsave
lods
sub
jae
lret
repnz
push
cmp
out
mov
fldenv
pop
lcall
jg
mov
xchg
add
dec
jbe
rorb
loop
sbb
push
adc
sbb
rorl
adcl
add
lds
ss
push
daa
addr16
icebp
lcall
lahf
adc
xor
sbb
jmp
js
add
sub
aaa
pop
jo
pop
lcall
dec
sbb
icebp
mov
outsb
adc
dec
addb
addb
mov
and
mov
mov
cltd
push
popa
and
adc
push
mov
and
adcb
popa
les
adcb
mov
jns
push
pop
jo
call
and
fidivl
adc
fnstenv
mov
fidivrl
movsb
mov
stc
pop
or
cmp
pop
int
push
loopne
sarl
mov
xlat
xor
pushf
fstp
aaa
test
aam
mov
mov
add
fstps
bound
ds
sbb
xchg
leave
cmp
std
xchg
push
jbe
ljmp
std
mov
push
ljmp
xor
test
int
adc
mov
icebp
popa
pop
sbb
mov
cwtl
and
mov
jo
cmp
mov
sbb
rcll
jg
pop
mov
test
xchg
fldt
dec
push
ja
xchg
pop
push
inc
cmp
pop
fistpl
and
xchg
xchg
sub
sbb
outsl
dec
sahf
insl
jl
mov
push
sbb
nop
pusha
xor
xlat
lods
push
pushl
xor
stc
sub
mov
fisubl
push
fisubrs
push
xor
xor
fnstenv
xchg
xchg
sbb
jmp
test
push
test
ss
mov
mov
pop
mov
pmaddwd
in
movsb
jae
add
sub
or
mov
cmpsl
call
test
pop
mov
and
stos
mov
xchg
sti
stc
xchg
sbb
push
pushf
adc
rolb
ja
push
add
in
push
push
hlt
or
aas
ficoml
inc
call
xchg
movsb
mov
jle
stc
sahf
and
test
lods
push
mov
xchg
cmp
jg
push
cs
cltd
ror
mov
inc
shll
add
push
std
pushl
and
iret
scas
inc
mov
mov
inc
push
add
adc
hlt
xchg
movsl
xor
push
add
xchg
mov
jns
xchg
or
inc
inc
or
dec
push
not
das
lcall
out
sbb
sti
in
xor
or
jecxz
dec
aad
sarl
push
xchg
mov
ljmp
push
aad
add
shr
sub
mov
mov
pop
add
jmp
xchg
rclb
and
out
aam
xchg
xchg
imul
dec
repnz
sub
jb
pop
ljmp
sbb
insl
sub
in
subb
xchg
mov
cli
sbb
sbb
imul
sbb
and
pushf
cmp
dec
and
push
dec
xor
pop
mov
sbb
popf
mov
xor
mov
cmc
shll
and
push
popf
fsts
cltd
add
sbb
add
or
cld
pop
aaa
push
and
popa
pop
sbb
xchg
and
pop
cmp
mov
pop
gs
sbb
mov
pop
push
pop
cltd
pop
jne
push
cwtl
iret
mov
lcall
sti
sahf
lock
movl
gs
pop
and
imul
fcmove
xchg
add
xor
mov
pop
and
pop
sti
leave
dec
and
scas
or
in
loopne
jne
sub
lcall
or
xor
int
sbb
pop
add
dec
inc
neg
mov
push
dec
lret
flds
mov
jae
jnp
mov
aam
fldenv
push
xchg
or
inc
stc
mov
sub
xor
nop
scas
xchg
dec
into
mov
xor
push
sub
xchg
sbb
scas
fstl
and
rclb
mov
loop
mov
dec
adc
in
xor
mov
loop
cmp
adc
mov
xchg
pop
sub
loop
mov
test
cmp
std
and
cmp
sbb
movsb
xor
pop
jae
loope
mov
ret
idivl
enter
sbb
add
popf
sub
lret
jp
xchg
and
push
push
es
icebp
push
icebp
loop
cltd
inc
push
bound
mov
int
pop
cmp
and
xorb
or
mov
xlat
out
ja
stc
push
movsb
push
sub
sub
push
mov
scas
lahf
dec
mull
fucomp
ja
mov
loop
sbb
cmp
xor
test
in
mov
adc
pop
push
loop
lods
sub
icebp
icebp
push
jmp
mov
push
movsb
mov
mov
sbb
insb
and
nop
mov
jnp
xchg
pop
pushf
cmp
test
sbb
loop
les
mov
pop
std
jae
mov
adc
pop
and
cmp
push
jns
fnsave
push
scas
inc
shr
mov
inc
pop
imul
aas
mov
add
es
cmp
pop
jmp
lods
arpl
data16
sbb
dec
jae
loop
mov
in
jge
xchg
clc
jno
sub
loop
dec
lock
mov
cmpsl
outsb
add
jmp
dec
dec
jne
jp
fidivl
or
mov
push
dec
mov
pop
xchg
push
add
nop
xchg
adc
mov
mov
cwtl
stos
lea
inc
mov
les
fwait
rol
sbb
fldcw
in
inc
stc
add
cmp
and
inc
inc
cmpb
jmp
sbbb
xchg
sub
shl
sbbl
add
and
or
cmpb
dec
loop
adc
cmp
imul
and
and
out
lret
leave
xchg
in
jmp
pop
inc
pop
je
sbb
dec
and
stc
bound
mov
and
or
adc
mov
repnz
movsb
push
xor
and
adc
jnp
es
popf
xchg
jb
stc
fldl
xchg
sbb
popa
and
int3
stos
xor
insb
adc
sbb
cmp
sbb
imul
cmp
scas
shl
push
das
or
mov
iret
out
inc
inc
insb
or
mov
popa
pop
mov
push
icebp
xchg
scas
mov
or
pop
addl
push
pop
jae
pop
addr16
rcrl
call
and
sub
inc
test
xchg
mov
je
adc
add
sbb
ljmp
push
push
shl
mov
add
scas
and
push
cli
xchg
mov
xchg
and
inc
int
xorb
adcb
jns
jnp
popa
push
adc
xchg
lahf
adc
add
pop
push
xor
inc
mov
jg
mov
pop
mov
sti
arpl
shrb
mov
or
loop
test
bound
xchg
lods
pushf
popf
lock
inc
xor
xor
iret
inc
lahf
pop
adc
lcall
xchg
aaa
imul
mov
std
mov
mov
sahf
push
xchg
mov
test
jbe
mov
test
and
ss
xchg
imul
adc
mov
push
sbb
sbb
fldcw
xchg
ds
mov
mov
loop
fidivs
rclb
jnp
push
inc
add
xchg
les
pop
sbb
or
jne
sarl
movsl
in
and
adc
sbbl
or
call
and
cmpsl
lret
ljmp
and
mov
insl
sub
loop
cmpsb
icebp
sub
daa
xchg
in
jnp
ds
mov
popf
sub
pushf
scas
sbb
or
jbe
mov
bnd
call
pop
xchg
int
loop
cmp
enter
pop
push
sub
push
xchg
jge
fwait
mov
inc
pop
push
push
in
jp
loop
pop
mov
adc
pop
sbb
int3
lea
inc
lcall
xchg
pop
jno
xchg
ss
lea
pop
imul
xchg
inc
and
gs
pusha
decl
push
in
aaa
test
and
mov
shlb
mov
out
int3
dec
xchg
aam
nop
cmp
adc
xor
push
sub
inc
push
mov
mov
xor
fimull
cltd
cmp
fwait
pop
and
sbb
cltd
xor
push
mov
push
pop
cmp
jp
dec
inc
push
push
out
xor
dec
outsb
push
xchg
jb
jp
addb
mov
xchg
add
pop
mov
aas
mov
pop
lret
shlb
out
ljmp
add
mov
decl
outsb
cmp
push
sbb
cmp
stos
fisubrs
cld
stos
gs
xor
mov
sbb
mov
pop
push
pop
cltd
in
cmp
imul
das
adc
xor
push
mov
xchg
lods
push
mov
mov
jae
roll
pop
pop
popf
std
push
xor
sahf
lcall
push
add
sub
scas
xor
sti
mov
sbb
pop
ret
mov
xchg
or
xor
and
sub
xor
dec
sub
xchg
pop
push
bound
push
jb
es
jbe
xor
sbbb
mov
mov
sbb
lret
cltd
ficoml
jae
sub
sbb
or
repnz
or
cmpl
cmp
dec
xor
pop
lcall
jno
xchg
jns
xorl
xchg
push
cltd
xor
mov
mov
mov
push
roll
fldcw
cld
sub
es
jno
push
enter
mov
test
in
std
jne
leave
pop
xchg
mov
adc
das
sbb
push
daa
ja
mov
int
sub
pop
xchg
adc
stos
pop
push
mov
lcall
rolb
sub
pop
mov
jl
pop
dec
lret
loop
lret
jmp
sarl
loop
xor
cmp
fnsave
xchg
mov
jno
mov
ffreep
ja
fistpl
sub
inc
dec
lods
pop
push
iret
test
mov
repz
stc
pop
ret
popf
lods
xlat
int
popf
xchg
arpl
mov
adc
hlt
inc
cmp
rcrb
scas
sub
or
aam
outsl
fwait
cmc
subl
repnz
mov
js
xchg
xor
sbb
in
xchg
ljmp
dec
int3
mov
dec
sub
dec
xor
cmp
mov
arpl
rcrb
jo
xor
push
subl
fcompl
xchg
sub
sarb
push
out
dec
loopne,pt
cmp
pop
sbb
cmpsl
xor
push
aaa
imul
lcall
stc
arpl
scas
sti
xchg
cmp
cmp
add
out
stc
dec
mov
pop
insl
or
cmp
sub
in
or
loope
outsl
sub
cltd
jecxz
jge
mov
lds
or
ja
imul
pushf
push
orl
sbb
loop
cmpsl
ljmp
shrl
dec
xchg
xor
dec
addr16
shll
push
rorl
sub
xchg
cmp
movsl
fimull
test
insl
and
loopne
test
mov
cltd
xchg
xchg
adc
mov
or
sub
xchg
out
push
jno
cmp
cmp
aaa
xchg
xchg
imul
jp
pushf
xchg
stc
sub
xor
or
add
imull
lret
stc
xor
fbld
mov
sbb
rorl
adc
imul
cmp
test
roll
sbb
mov
jae
or
shrl
stc
mov
cmp
ret
or
aaa
sub
push
lcall
add
popa
pop
adc
sub
jae
addr16
into
or
ja
das
aas
xchg
xor
jge
pop
mov
cmp
out
fcoms
cltd
shlb
mov
add
push
stos
addl
sbb
sbbl
dec
and
test
js
xor
xor
push
push
xchg
or
xchg
push
bound
xchg
repz
imul
and
dec
dec
loop
insl
and
and
mov
loope
jae
push
int
jmp
lea
push
mov
xchg
daa
jmp
stc
adc
ret
inc
jmp
push
insl
push
ja
jmp
mov
int3
pop
adc
leave
xchg
enter
or
outsl
mov
xchg
testl
mov
cmp
pop
jl
hlt
int
lock
sub
pop
addr16
xor
add
clc
and
push
aad
sbb
out
xor
push
and
out
push
lcall
jbe
dec
mov
mov
and
mov
in
cmp
push
adc
jb
adc
push
pop
and
stc
sbb
mov
mov
lahf
lcall
push
jae
sti
sub
mov
xchg
and
and
scas
cmc
movsl
dec
dec
mov
or
movsb
or
or
addb
inc
and
aad
xor
ret
ss
addl
inc
cwtl
hlt
insb
cli
dec
lea
sahf
mov
cmp
loope
out
loop
adc
lahf
call
sarb
push
leave
cmp
dec
out
add
xchg
mov
pusha
or
stc
leave
movsb
sub
mov
pop
and
in
add
push
sbb
push
sbb
cmpl
cli
sub
mov
test
push
or
fiaddl
mov
push
leave
or
addr16
jno
insb
lds
pop
movsb
imul
ja
stos
push
add
mov
out
fadds
call
call
aad
adc
and
add
xor
mov
adcb
cmpb
movsb
mov
mov
aaa
iret
mov
push
push
inc
fisubrl
xor
shll
xor
or
nop
pop
addl
xor
std
jne
sbb
adc
mov
sub
xchg
sti
xchg
adc
incl
icebp
out
xor
mov
into
daa
aaa
jno
scas
aam
push
outsl
pop
in
and
loop
pop
push
aam
adc
and
insl
push
and
insb
xlat
mov
aaa
adc
and
xchg
test
ret
mov
sbb
xchg
pop
imul
jp
test
cmpsb
in
bound
imul
lret
ret
std
ds
mov
mov
inc
shl
sub
loop
or
enter
mov
pop
dec
or
jmp
and
sbb
lds
scas
xor
push
xchg
or
push
push
sub
xor
cmpsb
test
pop
sti
dec
sbb
dec
inc
mov
das
movsb
mov
mov
and
push
adc
xchg
in
ss
jbe
outsb
pop
cmp
add
pop
mov
pushf
push
push
int
and
inc
push
sub
lods
cwtl
or
shlb
aaa
repz
iret
push
push
clc
les
and
or
enter
jb
pop
outsl
mov
pop
test
inc
loope
setg
test
ljmp
imul
jnp
push
or
rolb
lea
mov
hlt
aas
and
stos
push
push
cmpsl
push
jae
push
in
ss
rorl
in
push
inc
aaa
mov
cmpsl
mov
mov
pop
xchg
add
mov
xor
int
dec
ret
xor
mov
push
cltd
xorl
inc
mov
ss
gs
loopne
xor
push
pop
loope
sahf
negl
imul
nop
arpl
xchg
loope
scas
adc
mov
xor
popa
aas
mov
sbb
mov
and
mov
add
and
mov
mov
add
cld
mov
inc
cmp
daa
pop
pop
test
jb
and
shrl
sbb
iret
and
ficompl
js
iret
aam
pop
call
ficompl
adc
mov
add
jns
mov
jg
pop
and
xorb
inc
ficoms
xchg
inc
push
icebp
xchg
xchg
ret
fisttps
xor
xchg
mov
or
lcall
jmp
sub
jne
xchg
inc
mov
sub
cmp
xchg
adc
les
xor
jbe
adcl
pop
adc
inc
sub
ja
adc
mov
imul
cmp
xchg
cmp
jg
aaa
insl
cmp
xor
mov
lods
test
movsb
sti
stos
in
mov
push
orl
jns
sti
and
fisubrl
push
jbe
lods
hlt
and
jne
mov
push
aad
movsl
xchg
adcl
test
das
sub
addr16
enter
adc
pop
inc
sub
ret
jo
inc
adc
pop
pop
mov
adcb
es
push
add
test
daa
movsl
jns
stc
jo
les
mov
scas
adc
push
mov
xor
test
loop
xor
sbb
cmc
enter
setno
dec
dec
popa
mov
movsb
mov
in
push
cmp
addr16
mov
mov
aas
inc
daa
cwtl
cmp
in
or
popf
jne
push
and
and
adc
shrb
ljmp
jnp
cmp
stos
mov
pop
sub
jg
dec
cmp
inc
loop
pop
sub
stos
mov
xor
test
iret
or
test
sub
sub
mov
les
ret
sub
mov
or
or
sbb
jns
sub
xor
xor
jno
aaa
dec
cmpsb
bnd
std
lods
cmc
aad
mov
les
sbb
or
int
loop
cmp
dec
or
jne
popa
mov
ret
lds
jge
sbb
movsl
sub
mov
sub
mul
push
sbb
fwait
or
xchg
loopne
adc
cmp
mov
mov
les
cmpsl
addr16
test
inc
imul
lcall
mov
cmp
popf
inc
fdivrp
and
sbb
jae
lods
fldenv
adc
icebp
mov
or
stc
dec
fisubrl
aad
out
mov
sub
xchg
xor
fwait
xchg
cmp
imulb
scas
movsl
insl
and
pshufw
icebp
pop
mov
xor
je
imul
mov
xor
rorb
mov
iret
push
sub
addr16
jne
out
mov
jg
and
cmp
dec
xchg
loop
mov
andb
icebp
push
mov
push
jge
xchg
mov
dec
push
das
fistl
pop
inc
sbb
adc
xchg
adc
dec
or
rcrb
je
negl
mov
fsubrl
adc
or
push
dec
orl
notl
and
push
shr
xchg
iret
pop
mov
lea
jnp
xor
test
push
adc
cmp
sahf
mov
mov
fnsave
mov
sbb
imul
and
adc
inc
mov
dec
bound
lods
rorl
sub
gs
add
insl
addr16
and
loope
jmp
outsb
push
inc
add
push
out
sbb
or
ret
jno
add
and
int3
jns
ljmp
cltd
mov
lock
mov
arpl
repz
out
lods
movsl
mov
mov
ret
mov
mov
sub
xor
inc
pop
mov
data16
xor
jb
xor
cmp
cmp
loop
shrl
leave
ds
xchg
fildl
inc
rclb
sti
aas
xor
aam
sti
cmp
pop
fstl
inc
jmp
jne
pop
sub
push
or
adc
pop
and
cmovae
adc
or
push
in
ljmp
ss
es
xor
sub
adc
sub
mov
ljmp
mov
mov
and
push
aad
jno
popa
cmp
cmp
into
pmaxub
pop
adc
sarb
dec
jnp
adc
repnz
sbb
add
les
adc
cmp
mov
ds
and
dec
shrd
mov
pop
push
mov
push
pop
daa
sbb
in
das
cmp
xor
pop
push
test
aas
xor
add
repnz
mov
hlt
outsl
arpl
and
fwait
pop
xor
fwait
adc
adcb
aaa
push
cld
push
cmp
sbb
je
or
aas
mov
or
pop
mov
mov
scas
gs
cmpsb
in
dec
adc
xor
or
loope
mov
push
out
adc
call
test
adc
incl
mov
xor
mov
xchg
sub
xor
out
lret
scas
fwait
cmp
mov
add
pop
mov
mov
add
lcall
lock
les
loope
stos
popa
push
stc
and
jmp
es
add
sbb
stc
das
jp
in
jge
lods
loop
loop
call
mov
arpl
mov
jnp
add
mov
add
sbb
and
jae
call
add
or
and
outsb
push
pop
daa
mov
mov
xchg
xchg
int3
movhlps
xor
fdivl
and
add
add
popa
sbb
cmp
sub
push
lock
and
mov
pop
adc
int3
mov
inc
in
gs
dec
andb
push
ss
push
lods
ljmp
fs
jo
jl
cmp
out
add
pop
mov
cld
xchg
jmp
les
mov
out
out
icebp
sqrtps
and
dec
xchg
sub
add
call
setge
enter
xor
stc
sbb
sub
add
inc
xchg
and
test
icebp
iret
xchg
in
mov
loop
stos
sbb
xor
shlb
mov
xor
xchg
jl
lret
adc
mov
push
pop
sbb
xchg
sub
adc
push
mov
sahf
movsl
jecxz
rclb
ret
and
popa
rolb
pushf
mov
or
cmp
sub
sbb
and
push
xor
in
xor
jno
jne,pt
mov
and
subl
aam
jno
pop
xor
and
sbb
xchg
and
sbb
in
setnp
sub
add
pause
xor
push
fstpl
loop
pop
or
push
pop
sub
lods
in
and
jge
xchg
je
mov
mov
fdivp
jno
xchg
or
sbb
loop
pop
aam
in
mov
repnz
or
xor
pop
cmpsl
mov
test
adc
sbb
mov
and
sbb
sbb
ss
xchg
ret
mov
and
scas
adc
inc
test
adc
orb
out
jge
shrb
inc
mov
pop
sub
stc
mov
inc
movsl
idivb
aad
cmp
out
xchg
push
out
imul
mov
test
fistpll
popa
jl
cmpsb
mov
cltd
inc
xchg
cmp
adc
pop
inc
cmp
and
outsl
bound
iret
or
lahf
fs
fisubs
addl
shlb
xchg
movsb
lock
sub
ds
nop
lea
jecxz
outsl
jle
push
jo
insl
ljmp
jmp
addr16
and
int3
jl
and
push
mov
test
sub
sbb
cmp
mov
mov
push
daa
xor
push
cmpsl
sbbl
mov
in
jmp
sbb
sbb
prefetch
or
leave
iret
inc
pop
loop
in
mov
push
fwait
inc
add
das
cmp
pushf
sbb
ljmp
ja
adc
sti
mov
test
mov
pop
les
push
repnz
lahf
loop
movsl
cli
push
cmp
arpl
adcb
loop
lahf
popf
aad
push
mov
cmpsl
and
xor
adc
jno
jns
adc
lods
push
push
cmp
sub
jns
inc
imulb
jns
test
pop
repnz
pushf
add
loop
das
lods
movsb
xchg
sbb
cmpsb
and
orb
adc
stos
xor
push
mov
mov
jne
out
fstps
mov
imul
dec
in
mov
stc
cmpsl
out
xchg
or
xchg
dec
rol
out
scas
dec
or
add
lods
jnp
mov
fnsave
jns
fisttpl
push
out
jl
pop
xchg
or
jne
sti
xchg
xchg
outsb
mov
mov
nop
mov
add
lcall
sbb
mov
xor
push
mov
clc
ret
xor
in
cltd
xlat
cmpsl
out
sub
arpl
lods
hlt
cmp
aad
sbb
out
cmp
orl
mov
xor
sub
adc
xchg
sbb
imul
jle
mov
mov
iret
lods
scas
mov
and
lea
popf
pop
adc
pusha
inc
xchg
xchg
and
sub
push
xor
loop
ret
xor
adc
push
push
mov
adc
icebp
sbb
sbb
and
clc
add
fdiv
mov
nop
xchg
and
fmull
lock
leave
xchg
les
sub
out
xchg
mov
pop
shlb
pop
and
lock
loop
rorl
add
xor
shrl
jo
lret
dec
push
mov
adc
pushf
xor
jl
add
les
adc
sbb
sub
subl
push
jl
lea
ret
pop
lret
in
sub
repnz
loop
lcall
fisubs
and
aaa
sub
fcoml
dec
push
pusha
cmp
mov
xor
and
inc
stc
and
and
add
inc
lods
and
and
and
and
icebp
cs
xor
dec
push
push
push
adc
cmp
xchg
stc
popf
add
enter
sub
push
push
xor
jae
sub
loop
push
push
cmp
stc
cltd
or
xor
sub
xor
loop
xchg
pop
sbb
pop
xor
inc
push
pop
pop
mov
leave
jmp
dec
or
xor
cmpsb
and
fildl
inc
dec
jbe
push
orl
lahf
jb
dec
loop
inc
sbb
lcall
push
dec
mov
or
adc
cmc
push
pop
jle
stos
mov
push
inc
shlb
ljmp
push
push
sub
sub
xor
sub
push
mov
sbb
sbb
fs
icebp
lcall
jns
gs
dec
out
rclb
ficoms
scas
popf
pop
jns
push
cmp
cmpsb
or
sbb
jno
jp
ljmp
lods
inc
addb
addb
and
std
mov
adc
and
in
xor
lret
stc
xchg
mov
add
lds
and
add
dec
lahf
bound
xchg
inc
push
lret
test
outsl
mov
aam
mov
pop
mov
push
rcl
lock
inc
movl
in
or
in
les
sbb
pusha
xchg
push
ficompl
in
sub
push
jg
pop
add
dec
shll
and
loop
mov
imul
fnstcw
xor
sub
pop
lahf
mov
cmp
sbb
je
rcrl
cmpsl
sbb
cmp
jne
dec
cmp
flds
or
paddq
push
dec
mov
mov
mov
xor
inc
mov
cmp
adc
aas
dec
cmp
cs
test
out
push
xorl
cmc
aaa
orl
push
bound
xlat
xor
mov
push
pop
mov
jno
das
loop
push
test
sub
sub
cmpsb
sub
andl
push
push
lahf
icebp
push
and
xor
lcall
dec
into
push
lahf
jns
pop
xor
cmc
jbe
mov
es
fdivl
loop
cli
jl
xlat
test
mov
aaa
push
sahf
jns
adc
sbb
sbb
pop
dec
xlat
push
sarb
pop
sbb
mov
xor
xor
ljmp
push
mov
mov
loop
jns
push
pop
xchg
sbb
mov
xorb
in
jl
jp
sbb
pop
ds
adc
adcb
ja
mov
mov
push
mov
xchg
cmpsb
les
leave
ja
negb
movsl
cmp
iret
xor
inc
sub
cli
jo
pop
sahf
out
insl
sti
mov
dec
inc
push
hlt
jmp
in
daa
dec
sti
js
shr
jp
pop
mov
mov
out
jno
mov
pusha
xchg
or
xchg
test
xor
xchg
mov
and
int
lahf
pop
add
xchg
xor
cmpsl
push
insl
ss
std
pop
inc
cmpsl
jae
xor
sbb
ja
in
imul
adc
sbb
cmp
shrb
insb
das
push
loop
jns
in
sbb
test
mov
daa
mov
sbb
push
imul
sub
sub
mov
cmp
mov
push
mov
pop
hlt
ficoml
mov
insb
mov
gs
push
jns
shlb
orl
fwait
mov
in
std
xor
push
imul
adc
dec
dec
or
push
aaa
jns
sahf
lods
arpl
and
jl
repnz
test
sahf
in
and
add
in
xchg
arpl
mov
inc
loop
xchg
js
test
pop
adc
xchg
dec
in
xchg
and
push
arpl
fwait
xor
movsl
shr
sbbb
push
jmp
and
push
or
leave
es
mov
cmpsl
lea
movsl
push
sahf
movsl
dec
lahf
mov
and
xor
popa
sub
xchg
and
inc
push
leave
in
test
jns
jnp
aaa
fdivrl
mov
xchg
mov
in
out
jno
adc
ret
mov
inc
xor
mov
push
jne
inc
inc
adc
lea
push
jne
mov
xor
into
push
xchg
stos
mov
in
and
xorl
sarb
cmpsl
lock
xor
dec
jecxz
xchg
out
mov
xchg
cmp
xchg
sbb
sbb
add
pop
shrl
or
sub
scas
dec
mov
lret
inc
shll
sbbl
jg
insl
fs
sti
push
sti
push
int3
rolb
dec
xor
ret
aam
mov
in
xor
mov
repnz
out
inc
push
cmpsb
fbld
fs
inc
mov
scas
leave
insl
pop
sub
in
mov
in
or
xchg
popf
out
inc
lcall
stos
xor
pop
xor
and
pop
sub
daa
mov
mov
mov
daa
sub
jecxz
lret
push
jge
xchg
imul
pusha
push
loope
xorl
jle
fs
ret
into
xor
sub
push
xor
rcr
or
test
and
jnp
test
xor
pop
insl
aaa
or
inc
xor
dec
sbb
negb
in
xor
inc
pop
jbe
arpl
xor
cmp
lcall
fsubs
xor
bound
xchg
mov
add
fsubrl
push
inc
add
xchg
leave
push
insl
sti
sub
sub
sbb
divb
mov
lret
movsb
inc
orl
movsb
aas
xchg
mov
add
push
test
mov
daa
lret
lcall
addr16
scas
es
cmpsl
cmpsl
and
cmp
push
push
cmp
std
arpl
js
and
lret
sbb
mov
cmp
mov
push
sbb
mov
mov
mov
and
popa
mov
gs
sbb
bnd
nop
xchg
dec
out
mov
sub
repnz
dec
pop
mov
in
xchg
outsl
mov
inc
xor
in
and
lret
sub
push
cli
fisubrs
inc
outsl
push
and
xor
inc
mov
adc
sahf
rcrl
mov
addr16
fstpt
or
sbb
enter
xor
cwtl
xor
sbb
inc
jmp
inc
mov
sub
sub
sbb
sbb
jmp
and
rep
mov
pop
sbb
cmp
sub
xor
ss
and
cmp
stc
dec
stos
pop
int3
mov
test
pop
andl
fs
jne
inc
adc
fisttpll
pop
pop
notl
push
and
jo
or
sbb
push
aaa
push
sub
sbb
sti
lock
les
ja
cmp
sbb
negl
inc
xchg
xchg
fwait
je
in
pop
xor
jns
adc
dec
cmpsl
pop
jns
sub
mov
push
xor
in
jbe
inc
xchg
pop
test
movsl
fistpl
leave
xchg
cmp
sbb
xor
push
or
xor
push
lcall
push
pop
addr16
push
pop
inc
stos
add
call
sbb
aaa
test
adc
sub
adc
or
inc
pop
and
shlb
ljmp
xorb
mov
repz
mov
shll
sub
mov
rclb
push
mov
and
jne
mov
adc
jno
out
xlat
dec
pop
sub
das
sub
xchg
inc
cs
and
sbb
arpl
inc
xorb
sub
push
adc
or
pop
adc
into
fucomip
mov
sbb
cmp
ret
mov
aaa
sub
insb
xor
repnz
xor
sbb
and
adc
idivb
jae
cmpl
xlat
in
push
pushf
mov
enter
pushl
inc
or
lret
push
mov
push
lods
daa
lcall
mov
sub
push
fwait
hlt
cmp
gs
stc
mov
into
pop
dec
xor
movsl
ret
sbb
das
aaa
pushf
pop
push
mov
repz
ret
and
mov
xchg
push
ror
xchg
inc
mov
mov
leave
imul
imul
jno
and
fs
addl
mov
ret
mov
add
int
push
das
pop
hlt
sub
jg
loop
cmp
fisttpll
rol
cmp
push
and
jle
lahf
cmp
out
and
mull
dec
fsubl
movsb
mov
je
movsl
jbe
mov
js
mov
push
push
ret
xchg
and
pop
call
fstp
push
movsl
popf
sub
test
dec
xor
xchg
fnstenv
dec
js
dec
xor
xchg
adc
pop
in
cltd
sub
sub
xor
lcall
mov
cltd
loopne
xchg
ljmp
in
inc
sbb
popa
out
adc
xor
lea
loope
sbb
sub
push
or
mov
repnz
push
and
pop
and
xor
push
test
shlb
clc
xor
ja
mov
inc
cltd
data16
sar
adc
xor
and
repnz
or
cmpsl
push
rcll
jns
lss
int3
dec
jp
sub
sub
push
and
mov
xor
push
mov
cmp
ja
lahf
dec
mov
sub
test
ds
sbbl
adc
aas
sti
dec
clc
in
imul
inc
rcrb
stc
add
push
mov
lods
mov
jecxz
ds
scas
cld
aad
insb
add
inc
loope
in
xor
xor
icebp
pop
mov
test
cwtl
mov
arpl
cld
and
xor
in
cltd
adc
das
xlat
push
lcall
dec
mov
mov
push
cmp
outsb
movsb
or
insb
pop
into
ds
jl
push
aam
pop
sub
add
sub
test
sbb
push
call
mov
aas
js
out
incb
inc
loop
xor
inc
jp
jno
inc
mov
sbb
aas
loop
imul
lods
ljmp
and
cwtl
dec
lret
repnz
pop
ja
mov
test
fs
loop
or
setnp
xor
dec
jmp
call
mov
and
shlb
imul
mov
scas
sahf
xor
call
xchg
jmp
jno
cwtl
add
leave
insb
add
aas
movnti
pop
jl
mull
gs
push
call
mov
cmpb
xchg
inc
xchg
sbb
cmp
in
push
xchg
xchg
mov
cmp
push
sbb
push
test
push
bnd
pop
or
mov
stc
mov
jno
gs
pop
aam
push
lods
cmp
cs
push
iret
lret
orb
inc
xchg
popf
mov
aaa
sub
sbb
sub
dec
add
stos
scas
xchg
and
push
lods
daa
pop
adc
out
movsl
adc
jns
adc
nop
dec
mov
pop
adc
iret
cld
cmp
inc
or
mov
dec
mov
lret
cmp
test
mov
insb
push
or
inc
cli
xor
imulb
inc
fisubs
mov
inc
push
ljmp
push
out
sbb
xchg
icebp
pminub
loop
iret
ds
aas
add
mov
rclb
xchg
leave
mov
test
cmpsl
sbb
pop
cli
push
add
int
sub
mov
jnp
sbb
dec
or
in
push
outsl
xchg
iret
xor
xchg
sub
mov
dec
call
jmp
xchg
iret
jae
imul
sbb
mov
mov
mov
mov
and
sbb
call
cmp
ljmp
imul
or
xchg
cmpl
sti
xchg
push
ret
jl
inc
insb
hlt
inc
imul
cmp
mov
cli
push
iret
in
xchg
outsl
fstpl
sbb
sbb
cwtl
jl
push
bound
pop
call
lcall
ret
imul
or
int
pushl
and
iret
and
mov
stc
das
loope
aam
sbb
cltd
or
movsb
jb
sub
cmpsl
jns
lods
cld
cli
push
push
xchg
mov
xor
mov
call
sub
jp
and
push
in
xlat
push
loop
push
cmp
sub
push
pop
sqrtps
mov
jecxz
stos
push
sbb
int3
mov
push
dec
imul
imul
pop
pushf
xor
loope
or
xor
loope
and
into
dec
jno
mov
mov
add
xcrypt-ctr
cmpsl
pop
leave
lock
push
cmp
popa
stc
js
dec
sub
mov
sbb
js
xor
push
push
ret
in
mov
xchg
imul
jle
ret
sub
sub
xor
scas
and
xchg
jne
sub
fnstcw
pop
mov
xlat
dec
mov
mov
pop
loop
push
lock
push
push
mov
inc
mov
pop
rcrb
out
sub
ja
and
jnp
mov
push
cmp
jo
test
cmp
sub
insl
ja
daa
mov
and
xor
cltd
mov
out
cmpsl
jp
sbb
pushf
fsts
filds
ljmp
pushf
call
outsb
push
mov
int
cmpsb
gs
pop
xor
fisubrs
sub
mov
adc
cmp
das
stos
sbb
xor
lret
into
adc
outsb
aad
mov
cmpsl
sub
aas
pop
mov
ret
imul
dec
popf
inc
add
mov
jae
dec
mov
mov
repnz
leave
gs
loop
cmp
and
lahf
mov
jecxz
xlat
pop
fwait
mov
dec
movb
leave
mov
and
jb
fisubs
lods
jno
push
loop
movsb
jno
mov
sbb
adc
mov
mov
and
pop
aas
mov
iret
imul
pminub
insb
into
inc
jp
ds
mov
out
cmpsl
xchg
pop
add
mov
xchg
adc
push
sahf
shl
pusha
or
leave
add
cmp
add
cmp
mov
ja
push
popa
lcall
push
iret
cmpsb
inc
add
xor
stos
stos
es
xor
jecxz
cmpsb
sbb
jg
call
xchg
in
xchg
aaa
in
int3
xor
sub
xor
mov
pop
push
pop
sbb
cmp
dec
imul
in
mov
movsl
adc
jmp
xchg
inc
dec
hlt
xchg
paddusw
addb
adcb
push
inc
fwait
xor
das
mov
pusha
jb
dec
bound
mov
aaa
jp
jbe
pop
imul
sbb
loope
loop
cmpsl
sbb
add
xchg
inc
cmp
clc
sub
dec
mov
or
nop
mov
call
pop
and
iret
int
sarl
shll
fwait
mov
pop
xor
push
subl
clc
call
out
sahf
xchg
es
in
aaa
sub
das
cmp
and
stos
fyl2xp1
aaa
mov
inc
in
cmpsb
sub
xchg
xchg
xor
and
ret
sub
popa
sbb
int3
daa
sub
pop
mov
nop
xor
adc
lds
fwait
popa
xorb
push
cli
mov
aam
xlat
les
inc
xchg
jns
fiaddl
fs
imul
mov
mov
cwtl
mov
sbb
iret
or
subl
sbb
xchg
or
imul
xchg
leave
in
mov
lds
ja
daa
jg
dec
xor
movsb
ret
jno
mov
pop
cltd
mov
sar
les
push
repnz
mov
iret
push
dec
push
pushf
in
jno
jmp
and
and
flds
cmp
mov
jb
push
xor
adc
pop
call
icebp
xor
mov
inc
cmpsl
add
jecxz
notl
and
aaa
testl
lods
repz
mov
or
lock
inc
popf
xchg
dec
popf
pop
mov
mov
les
inc
ds
push
dec
mov
call
mov
xchg
fstps
outsb
inc
int
stos
xchg
and
ret
sbb
cmp
daa
inc
inc
mov
sbb
mov
movsb
rcrl
in
inc
xchg
or
aam
cltd
dec
aaa
adc
adc
imul
sub
lcall
aaa
push
sub
outsl
inc
movsl
xchg
adc
mov
jl
int3
mov
push
push
push
stos
pop
and
outsl
jmp
dec
ror
cmc
test
cmp
gs
mov
aad
sbb
scas
mov
fsts
push
cmp
inc
and
mov
je
lcall
cli
inc
or
jnp
frstor
stos
test
mov
test
inc
sbb
cli
xor
cli
insl
loopne
adc
jb
test
and
mov
mov
pop
jnp
mov
test
inc
xchg
xchg
inc
jno
shll
loope
xor
push
cltd
adc
std
out
mov
adc
add
in
push
push
jmp
inc
dec
sbb
sub
inc
xor
inc
js
outsl
lcall
cld
imul
push
xor
shr
mov
jbe
cmc
fadd
rcrl
mov
fcompl
jl
add
xchg
jae
xchg
mov
scas
dec
mov
mov
dec
jecxz
rorb
sub
jne
mov
fstps
addr16
sbb
adc
adc
scas
add
xchg
ljmp
cwtl
movl
push
lock
sti
sbb
mov
adc
sub
jmp
push
and
cmp
dec
call
cmp
loope
adc
sti
inc
mov
and
pop
add
xlat
popa
jns
shr
push
mov
sti
inc
mov
outsl
aas
cmpsb
sbb
push
fxch
outsb
xchg
cmp
sub
es
mov
fstpt
dec
test
xchg
lock
addr16
xor
push
xorb
adc
mov
pop
std
lods
mov
shll
mov
insb
mov
and
bound
and
push
rcrl
cmp
and
lock
or
mov
in
fidivl
shlb
sbb
xchg
lds
xor
stos
pop
cmc
xor
ret
sbb
push
pusha
add
fsts
fbld
lods
psrlq
xor
fistps
repz
rcr
cwtl
jo
int
xor
mov
cmp
or
and
mov
inc
pushf
sub
add
and
daa
outsl
mov
mov
pop
xchg
and
cmc
adc
clc
mov
pushf
mov
sub
inc
mov
aaa
push
shll
cmp
push
imull
shll
stos
insb
scas
test
fcoms
mov
dec
push
mov
or
cli
cltd
jbe
mov
stos
ljmp
notl
inc
mov
stos
pop
addr16
or
adc
outsl
mov
dec
test
sarl
cltd
jmp
push
mov
xor
mov
loop
cli
cmpsl
paddd
aaa
jno
lret
mov
pop
and
int3
push
or
sub
mov
xor
jno
mov
loop
xor
cmp
loope
push
rcll
imul
push
xor
test
inc
dec
jne
cmp
cmp
divb
pusha
cltd
out
jae
sti
pop
fwait
pop
sub
xchg
push
sub
jp
insb
add
adcl
stc
rcrl
imul
jecxz
push
sub
sbb
xor
out
mov
pop
jle
imul
jmp
mov
sub
xchg
or
xchg
sti
jo
jp
pop
sahf
xorb
xchg
sbb
pop
sub
pop
scas
gs
xor
stc
pop
fs
and
ljmp
sub
mov
nop
fistpll
psubusb
lcall
and
insb
imul
mov
sbb
nop
pop
pop
sahf
lds
adc
icebp
cmp
or
and
mov
mov
jg
lods
dec
stos
hlt
lea
inc
mov
ds
std
dec
xor
imul
cmpsl
pushf
cbtw
sahf
mov
push
cmp
out
in
xor
mov
out
repz
out
imul
push
mov
mov
jno
xchg
mov
test
mov
pop
stc
mov
lahf
mov
imul
in
xchg
xor
int
jnp
mov
cmpsb
xor
add
sahf
lock
dec
jg
out
movsl
fsubl
or
push
cmp
xor
insl
shr
fistpll
mov
jo
and
or
cmp
icebp
in
enter
sti
dec
popa
addr16
mov
mov
cmpsl
mov
sbb
lds
push
pop
push
rcll
and
roll
cmpsb
jnp
imul
rcll
push
adc
and
xor
add
xor
dec
lret
fwait
dec
dec
aas
loope
sar
pop
std
cltd
out
mov
mov
rolb
xor
aad
shlb
loopne
jbe
mov
icebp
sahf
add
xchg
xchg
sub
inc
rcr
cmpsl
add
push
out
daa
iret
mov
add
mov
adc
jnp
ret
mov
or
lret
mov
or
aam
fstpt
xor
dec
xor
xor
cmp
sub
int3
pop
repnz
mov
popa
xlat
and
mov
sahf
shrb
xor
pushf
sti
or
iret
lods
jbe
mov
xor
sub
rolb
sbbb
nop
push
rclb
mov
inc
push
movsl
jae
sub
dec
inc
sbb
xchg
cmp
add
cmp
movsl
xchg
mov
mov
mov
xor
cmp
adc
jnp
mov
aam
repnz
and
add
add
repz
jo
in
cmpsl
icebp
mov
pop
jge
iret
xor
xchg
push
add
sub
dec
mov
in
imul
dec
or
and
movsl
mov
movsl
sbb
mov
jnp
loopne
fcmovnb
cltd
add
xlat
push
xchg
xor
pop
mov
jb
movsl
lods
sbb
or
xor
out
xor
jecxz
xor
mov
jo
jae
push
cmp
xor
cmp
add
and
push
and
stos
andl
jg
imul
ret
jg
sti
sub
inc
sahf
push
imul
push
sti
aaa
sub
mov
fcmovu
cmp
push
stos
call
pop
xchg
cmpsl
cltd
leave
cmp
jno
loope
adc
loop
cmp
int3
aam
xchg
mov
push
test
cmp
dec
cli
and
loop
data16
inc
ja
or
xchg
fstl
inc
mov
lods
inc
cltd
push
pusha
adc
inc
arpl
adc
and
sub
xchg
aas
inc
mov
cli
bswap
jbe
and
lcall
ss
sub
mov
jne
jbe
lret
sub
xor
sti
xchg
push
leave
jp
loop
push
mov
repnz
mov
loop
jmp
sub
mov
jp
negb
add
xor
sbb
mov
jecxz
packsswb
jbe
fndisi(8087
fwait
mov
ret
es
daa
mov
aad
sti
push
out
mov
mov
enter
dec
and
mov
lods
mov
mov
mov
or
xor
adc
fnstsw
sbb
outsl
mov
adc
sbb
lret
xchg
pop
stos
popf
mov
shll
or
mov
ss
cmpsl
sti
cmp
lret
adc
aam
bound
data16
xchg
sub
inc
shlb
lock
idivb
push
and
mov
jb
imul
fnstsw
test
ja
jg
dec
and
in
pop
lods
add
push
mov
call
mov
mov
stc
dec
cmc
mov
xor
xor
int3
sti
mov
adc
loop
ret
add
pop
jo
or
scas
jg
push
bnd
fldcw
jb
xchg
pop
jns
in
mov
icebp
inc
xor
sbb
adc
xchg
mov
inc
lret
and
pop
inc
or
mov
jo
popa
xchg
andb
das
push
stc
ja
or
mov
mov
inc
es
pop
in
aaa
cmp
mov
mov
and
sub
lcall
adc
fs
scas
xchg
adc
lea
push
sub
sub
outsl
xchg
add
inc
xchg
mov
jae
es
loope
frstor
shll
push
loope
ret
sub
loope
jb
cmp
and
cmp
shlb
push
xchg
stc
push
pop
and
adc
sbb
inc
push
xor
sub
add
cli
jecxz
add
shll
jae
ljmp
sbb
outsl
dec
mov
sbbl
xor
jns
cmp
out
pop
sbb
mov
fisubs
adc
sub
mov
sub
cld
sbb
add
fwait
cmpsb
push
jge
mov
test
pop
cwtl
outsl
push
sub
xchg
icebp
stc
sbb
lods
or
push
test
aam
jg
and
stc
and
and
add
sbb
shll
pop
iret
into
repnz
cmc
pop
stos
sub
sub
fdivrl
insl
shl
loope
add
fcomps
rorl
mov
fisubs
sub
fnstsw
in
sti
inc
push
and
and
sub
sbb
call
ficoms
out
mov
call
mov
inc
sbb
jno
insb
dec
test
jb
fists
push
and
mov
mov
ja
pop
push
inc
stos
pop
mov
adc
iret
shll
daa
or
das
jo
movsl
sti
cld
push
sub
and
mulb
stc
dec
push
sub
and
scas
into
and
or
gs
out
fnstcw
xor
out
loop
sub
inc
mov
aad
push
jmp
movsb
movsl
mov
jp
pop
gs
out
push
mov
mov
sti
adc
xor
xor
mov
sub
xor
mov
das
cmp
mov
mov
mov
mov
mov
fiaddl
sti
and
jp
or
sbb
or
mov
fs
call
iret
jge
sbb
push
aad
mov
das
ja
dec
inc
das
in
addr16
push
push
out
cmp
push
dec
adc
pop
icebp
xor
fisubrl
and
add
or
xor
sbb
mov
jno
cltd
pop
rcll
mov
shl
loop
in
inc
push
rclb
icebp
jbe
out
cmpl
loop
pop
inc
popa
pop
fidivl
sar
xor
fcmovnbe
loop
jp
fwait
mov
pusha
push
test
adc
push
dec
aaa
jmp
and
xor
out
mov
jecxz
in
cmc
adc
imul
sahf
mov
adc
pushf
leave
xlat
push
les
sub
sub
das
push
mov
xor
repnz
imul
lea
lock
xor
imul
test
push
loop
xrelease
cld
ss
inc
call
and
out
and
addr16
xchg
and
inc
fld
pop
adc
xchg
movsl
cmpl
jg
pop
out
inc
ret
sbb
and
ret
imul
push
sbb
imul
stos
jo
aad
add
xchg
mov
stos
aaa
das
sub
imul
and
cli
xor
add
ss
andl
xor
js
and
ljmp
add
add
cmpsl
push
xor
or
std
push
cmpsl
inc
xchg
mov
addl
add
ss
pop
xor
cmp
lock
add
daa
pop
icebp
mov
outsl
cmpsb
arpl
ror
inc
lcall
push
hlt
loope
movsb
dec
daa
ret
or
pop
cs
adc
iret
mov
mov
add
add
xor
jno
pop
cmp
or
cmp
inc
mov
iret
insl
and
inc
loope
push
int
adc
adc
idivl
ret
cmp
mov
xchg
or
cmpsl
push
mov
mov
inc
or
push
loopne
push
push
jo
push
popa
jns
cwtl
mov
mov
mov
mov
loop
in
adc
ds
pop
jb
jns
cmp
or
stc
jne
scas
sbb
test
xor
adc
rcl
pop
adc
sarb
or
mov
fsts
popa
lret
sub
xchg
daa
sub
mov
sbb
call
jecxz
int3
in
jbe
outsl
rorb
lods
mov
aas
xor
les
inc
cmp
add
cmp
lret
mov
outsb
daa
xchg
mov
es
shll
jbe
inc
sbb
cmp
mov
mul
fldt
xor
jg
xor
xchg
testb
or
in
sbbl
movsb
call
push
stc
sub
mov
aaa
pop
adc
repnz
inc
gs
mov
mov
inc
xor
das
xor
mov
jno
mov
jns
sbb
cmp
push
rcll
push
mov
sub
xor
loopne
add
fcoml
loop
jmp
aad
dec
orl
or
xor
imul
insb
push
cld
cwtl
push
xchg
add
and
iret
inc
xlat
fisttps
out
jg
and
push
lods
sti
jb
jle
cmp
or
sub
inc
push
cmp
das
mov
sti
push
test
cli
pop
inc
xchg
xor
sub
ficoms
or
rcrl
dec
mov
leave
push
das
xor
dec
movsb
adc
js
mov
fwait
xor
lods
movl
cmp
xchg
fldt
addb
cmp
cmp
cmp
stc
sbb
shrl
cmp
adc
dec
sbb
sti
sub
mov
ror
xor
bound
or
out
mov
cmpsl
iret
jo
xor
push
push
rcl
mov
and
cmp
fsubr
mov
push
jo
xlat
cmpsl
out
mov
mov
lods
jae
jmp
sbb
and
es
push
pop
xchg
addr16
sub
test
and
cmp
or
and
arpl
jne
ret
mov
jbe
cmp
mov
fldt
cs
cmpsb
sub
cltd
lret
addl
repz
or
cmp
call
mov
inc
or
sahf
mov
cli
mov
mov
mov
popf
shlb
pop
xor
scas
jp
sbb
push
sub
aam
pop
dec
stos
mov
sbb
pop
sbb
mov
insb
xorb
jle
add
cmp
or
lds
nop
stos
int
mov
loop
outsb
mov
adc
shll
sbb
outsl
mov
or
lret
movsb
or
arpl
outsl
mov
mov
xor
xchg
sub
insb
add
loopne
pop
cmc
lcall
push
xor
mull
pop
lcall
push
push
test
sub
cltd
xor
addl
pop
cmp
add
sbb
pop
movsb
adc
rorl
mov
inc
idivb
dec
mov
sub
es
inc
fdivs
xor
aas
js
movsb
cmp
jns
scas
pop
dec
stos
sbb
jae
xor
inc
xchg
dec
shlb
mov
xchg
xchg
jg
arpl
cmp
inc
cltd
add
lds
cmpb
and
imul
je,pt
loopne
xor
inc
xchg
xchg
xchg
and
push
inc
or
xor
add
sti
pop
movsl
pop
and
popa
xor
xchg
adc
test
mov
dec
or
push
addr16
imul
enter
xor
push
and
dec
repz
popa
filds
jo
mov
dec
repnz
ljmp
sub
mov
sbb
repnz
sqrtps
cmp
sub
xchg
int
xor
stc
push
sbb
aam
jnp
mov
arpl
fwait
push
jne
cmp
notb
mov
jl
cltd
and
dec
stos
popa
mov
popa
dec
xchg
movsb
sub
push
mov
jnp
popa
into
rorl
test
pop
iret
fidivrl
jae
sbb
ljmp
aad
gs
aaa
xchg
and
and
push
mov
sub
xchg
xchg
out
and
imul
mov
sub
sub
movsl
xor
mov
sbb
sub
sti
in
jmp
repz
xor
sub
xchg
testl
pop
mov
and
xor
or
fsubs
aas
pop
adc
xor
pop
pop
cmp
mov
mov
sub
lock
sti
mov
push
cmpsb
rcll
nop
stos
dec
es
push
stos
pop
mov
add
popa
in
cmp
sub
push
out
mov
sub
push
sahf
repnz
mov
loope
in
and
pusha
out
cmp
sahf
or
mov
xchg
mov
shlb
stos
iret
popf
mov
sub
mov
insl
pop
imul
int3
inc
cmpsb
push
and
das
iret
out
fnstsw
pop
xchg
cmpsb
jns
lahf
adc
push
into
xor
rorb
xor
add
cwtl
inc
xchg
sub
jae
sti
sub
mov
popfw
or
dec
jae
insb
divb
pop
jae
xchg
stc
mov
push
jge
fstl
sub
pop
sti
mov
stos
push
push
cmp
stos
mov
popf
push
push
loop
enter
popa
decb
mov
insl
icebp
inc
stc
mov
fistpl
sub
iret
add
xor
sarb
out
xor
cmp
lret
mov
pop
call
popa
in
jo
insl
shlb
inc
mov
dec
mov
lock
jne
xchg
inc
adc
add
or
pop
mov
push
sarl
and
flds
out
cltd
adc
mov
in
adc
addr16
or
fnstsw
in
cmp
lods
adc
jp
add
xchg
push
xchg
in
dec
cmp
movsb
pop
push
imul
xchg
sbb
and
sub
sti
sbb
in
sbb
push
leave
sbb
stc
or
sbb
mov
rcl
add
popf
bound
pop
mov
into
nop
dec
sub
hlt
repnz
sbb
adc
aam
dec
jl
inc
and
fs
xchg
mov
xchg
cltd
push
out
xor
ljmp
add
xor
cmp
inc
xorl
pop
fsubl
xor
and
mov
int
in
mov
rcrl
cmp
jne
push
test
inc
pop
mov
ret
mov
mov
loope
ljmp
fsubs
and
sub
jne
push
icebp
pop
mov
adc
ficomps
pop
sbbl
mov
xchg
shll
push
xor
test
int
icebp
push
loop
in
mov
popf
xchg
imul
or
jle
and
outsl
pop
testb
xlat
stc
jb
fs
mov
xchg
lea
xchg
jmp
and
cltd
sub
test
dec
xchg
sbb
xchg
in
mov
out
mov
and
mov
or
mov
loop
mov
lea
mov
das
mov
xchg
loop
push
xor
add
mov
shll
lods
adc
rcrl
pop
and
lods
pop
mov
xor
inc
ficoml
loop
pop
and
cltd
out
clc
test
jmp
sbb
fucomi
jecxz
aam
mov
pop
rorb
in
test
dec
mov
xchg
pop
test
mov
data16
mov
xchg
mov
mov
mov
stos
push
sub
fimuls
and
nop
int
scas
cmp
push
call
sahf
inc
loop
push
add
mov
mov
xor
in
push
pop
scas
xchg
push
and
pop
dec
mov
sbb
xor
jne
cmp
xor
fwait
dec
sbb
and
push
jb
insb
call
call
test
adc
andb
stc
or
jbe
pop
enter
sbb
imul
cmp
pop
sub
and
xchg
jae
mov
imul
ja
fnstcw
mov
fsubs
sbb
jnp
mov
rcll
sbb
adc
xor
mov
ret
mov
cs
loop
push
mov
loope
adc
loop
stos
xchg
repz
jmp
in
lods
and
mov
inc
mov
dec
xor
repnz
aaa
aad
and
xor
fmuls
sti
ss
push
int3
and
stc
and
push
call
add
scas
ficomps
push
mov
cltd
cmp
pop
fs
outsl
pop
xor
loope
int
inc
sub
int
ds
call
mov
std
mov
inc
test
and
xchg
mov
cmp
jl
xorl
adc
xchg
xchg
icebp
sbb
pop
repnz
cmp
idivb
arpl
sbb
jbe
cmpsl
mov
ljmp
dec
sub
iret
dec
aad
loope
test
pop
mov
jo
repz
xor
bound
insl
icebp
mov
bndstx
jmp
fdivs
mov
fwait
push
push
push
xor
dec
inc
cmp
sbb
loopne
loop
mov
and
std
aam
jle
pushf
stc
or
test
ljmp
and
out
in
loop
pop
xor
pop
mov
lret
inc
inc
shrl
mov
sbb
pop
xor
and
mov
aaa
push
jl
out
inc
insl
lods
ljmp
cmpsb
cmp
cmp
lret
jl
jb
sti
inc
sub
movsl
cmpsb
mov
add
mov
or
stos
out
jno
pop
push
inc
sbb
mov
xor
loop
adc
adc
aas
dec
nop
jae
push
mov
cmc
mov
adc
ret
xor
add
jne
and
testb
mull
add
and
jo
push
adc
daa
mov
and
and
xchg
xchg
sbb
inc
mov
pop
clc
fcomp
bound
push
inc
jbe
dec
in
mov
jecxz
aas
int
mov
clc
mov
mov
cmp
lods
sbb
repz
movsl
dec
iret
mov
scas
mov
mov
enter
inc
imul
jne
cmpsb
jp
outsl
jecxz
mov
jnp
sbb
int3
jne
stc
test
jg
mov
sbb
out
lods
pop
sbb
adc
and
xor
mov
lods
add
inc
push
lods
inc
jl
xlat
rorl
and
dec
and
jno
pop
daa
ret
pop
andb
lcall
pop
cwtl
mov
pop
std
sbb
loop
mov
hlt
mov
dec
fists
enter
mov
jnp
mov
jo
lea
icebp
mov
xor
and
cmp
push
adc
testl
push
or
mov
es
je
test
xor
std
adcb
jnp
xchg
xchg
es
in
in
push
and
push
mov
ss
je
mov
out
outsl
fstps
scas
mov
fiaddl
pop
fistpll
sbb
inc
inc
imul
sbb
rclb
stos
aam
or
sub
sub
insl
and
mov
loop
sbb
lret
mov
in
imul
mov
roll
in
and
pop
es
mul
adc
roll
mov
shl
daa
lods
es
pop
sub
xchg
push
lahf
popa
ss
inc
add
push
push
loop
mov
inc
cmp
dec
or
and
loop
push
cs
stos
push
mov
jns
addr16
mov
inc
cwtl
mov
cmpl
pop
sbb
movsl
cmc
dec
xchg
xor
mov
pop
movsl
and
addb
cmp
mov
jge
iret
mov
test
pop
xchg
sub
ss
sbb
or
jg
fdivl
subl
test
jae
movsb
adc
jnp
outsb
inc
jg
sub
clc
aam
and
push
test
pop
in
fiadds
mov
ja
cmp
sar
adc
mov
inc
lcall
xchg
rcrl
leave
inc
xchg
loop
rolb
imul
fstl
jp
inc
int
pop
fsts
lea
xrelease
add
xor
sub
jl
daa
mov
mov
dec
test
std
nop
mov
sysexit
cmp
pop
xor
pop
push
jno
xor
inc
and
or
cltd
ss
out
popf
pop
adc
shlb
dec
pop
insb
enter
sub
push
gs
xor
int
xchg
mov
sbb
insl
lods
and
sti
hlt
int
mov
pop
shl
call
cmp
mov
cs
xor
adc
out
cmp
xchg
jge
lods
fisttpl
hlt
mov
mov
lods
adc
std
call
pushf
push
sbb
adc
int3
repz
pop
mov
cwtl
xchg
clc
mov
in
stos
jae
rcl
loope
pop
cwtl
aam
mov
scas
mov
bound
lahf
scas
sbb
jg
sub
lcall
andb
out
cmp
mov
in
hlt
mov
mov
and
xchg
jge
or
add
mov
cld
or
sbb
cmp
int
arpl
aaa
push
int3
xor
in
daa
mov
mov
test
lods
or
and
lret
cmc
pushf
and
notl
aam
lods
rcr
hlt
cmp
in
lcall
jl
inc
lret
and
jb
lret
mov
lods
and
ja
xor
cmpsl
push
cmovno
dec
sbb
pop
sub
nop
or
push
adc
imul
push
aas
inc
sti
int
cmp
push
in
xchg
loope
lcall
cmp
outsb
outsl
lret
sub
sub
and
nop
mov
cmp
xor
xor
and
add
xor
mov
cmp
es
xchg
movsl
in
add
mov
xor
and
jmp
cmp
xor
movsb
sub
arpl
pusha
aam
cmp
push
xchg
cmp
dec
mov
push
xchg
inc
movsl
sbb
cmp
sti
xchg
jge
cmovl
xchg
inc
xchg
mov
aaa
adc
xor
xchg
jmp
push
jmp
lea
fnsave
cltd
pop
mov
cmp
sub
scas
cmp
mov
inc
in
cmp
aas
sub
pusha
mov
test
mov
jl
stos
dec
xlat
dec
cmp
rcll
xor
leave
push
in
xor
shl
lret
insb
cmp
dec
aad
mov
dec
rcll
push
scas
jl
mov
int
sub
dec
loop
sub
mov
jp
cmpsl
sbb
test
popf
or
fisttpl
mov
and
lea
test
or
mov
dec
cli
lods
mov
dec
outsl
and
dec
sbb
decl
popa
in
fistl
movsb
cmpsl
fxam
test
outsl
ret
cli
and
daa
jge
ficompl
ds
daa
push
fwait
push
pop
pop
scas
and
rolb
xchg
cmpsb
aaa
xor
cmpsb
xchg
pop
jae
lods
ret
imul
pop
mov
sbb
aam
adc
xchg
repnz
les
dec
sbb
xchg
aad
and
sbb
cltd
mov
inc
repnz
sbb
sbb
and
mov
ja
mov
mov
cltd
xchg
mov
mov
mov
lea
mov
stc
cmp
popf
inc
push
sub
push
lea
cmp
dec
or
int3
xor
push
mov
pop
mov
int3
adc
std
cmp
adc
push
aad
pop
xor
gs
shr
sub
or
cmp
mov
stos
xchg
jg
mov
pop
stos
adc
movsl
andb
jae
push
outsb
imul
inc
push
sub
xor
hlt
hlt
cmp
test
rcll
mov
cmp
rcrl
jno
sbb
aam
sub
push
cmpsb
or
cld
jmp
sbb
roll
dec
mov
loope
or
mov
loop
lahf
dec
cld
ss
adc
jp
test
stc
daa
pop
and
sub
aaa
dec
stos
push
fldz
imul
add
rorl
out
and
jge
xor
and
ret
sahf
sbb
add
notl
xchg
sub
ljmp
out
pop
sub
inc
sbb
jg
mov
sti
popa
test
push
popf
mov
pop
cmp
int
mov
push
int
insb
fistpll
sub
xor
xchg
sub
aam
mov
stc
sub
mov
cmp
push
adc
cmp
push
enter
xor
and
mov
xor
mov
and
int
shrl
aaa
or
daa
mov
inc
sbb
sbb
jmp
ja
sbb
loop
and
push
icebp
sbb
mov
sbb
jns
sub
xchg
popa
movsl
insl
jo
adc
mov
bound
dec
shlb
push
xchg
sbbb
add
imul
aam
xchg
xor
outsl
popa
mov
ss
lret
mov
push
xchg
imul
jno
pop
add
mov
jne
xor
fstps
xchg
dec
push
loope
xor
jmp
xor
sub
sbb
int
xor
arpl
leave
push
call
aam
dec
sub
push
pop
pop
movsl
mov
xorl
lret
ljmp
push
arpl
lods
inc
sbb
sub
add
xor
lock
ds
and
adc
xor
mov
lret
mov
mov
movq
adc
ss
jbe
rorb
sbbb
pop
mov
popa
movsl
jge
mov
mov
sbbb
push
jno
dec
pop
mov
fisttpl
cli
cmp
test
arpl
flds
insl
push
add
jmp
xchg
icebp
pop
dec
xor
orb
jle
or
xor
imul
les
mov
sub
pop
jp
inc
push
iret
loope
inc
xor
adc
leave
jne
int
mov
fnstenv
or
aaa
mov
pop
or
in
aaa
xchg
push
sbb
jns
pop
mov
ds
mov
loop
aaa
int3
lahf
pop
push
fldenv
or
rol
out
adc
mov
mov
sahf
mov
lahf
iret
mov
cmpsl
js
lahf
cmp
mov
adc
pop
xor
aaa
and
cwtl
xchg
int3
daa
pop
daa
add
pop
rorb
pop
mov
mov
push
pop
pop
cmp
es
sti
ds
push
push
push
dec
stc
sbb
test
dec
movsb
mov
adc
mov
mov
cmp
sub
jne
pop
mov
mov
jnp
iret
adc
dec
mov
addr16
repnz
in
sbb
int3
lret
xor
push
test
cmpb
mov
jnp
rcrb
outsl
cwtl
push
jno
sub
and
enter
std
ds
in
mov
fstpt
out
jmp
add
sub
jbe
cmp
rcl
xchg
insb
or
out
mov
mov
ret
movl
add
in
pop
sub
out
add
mov
lock
cmp
pop
add
mov
sbb
insl
pop
data16
push
sbbl
jl
add
clc
dec
xchg
and
imul
ds
int
mov
scas
popa
imul
cmp
lods
jg
xor
fcomps
and
movsb
pop
loope
cld
das
dec
iret
mov
dec
sti
sbb
cli
pop
pusha
mov
dec
inc
or
cmp
ds
and
xchg
add
lret
mov
mov
ds
or
movsb
imul
dec
popa
or
jno
push
or
stos
clc
iret
lret
outsb
cld
push
jns
and
icebp
sub
xchg
adc
push
mov
imul
aam
mov
push
xorb
loop
add
movsl
test
icebp
mov
xor
and
movsl
adc
xchg
adc
fdivrs
stc
mov
push
and
rcrl
cmpl
mov
pop
dec
xchg
cmp
xchg
cmpsb
sarl
pop
lock
adc
and
call
cmpsb
and
fwait
dec
rclb
sbb
jns
xor
lods
sbb
sbb
push
fldenv
push
jmp
out
mov
mov
inc
loope
cmp
ljmp
loope
pop
mov
mov
in
ja
cmp
mov
sub
cmp
arpl
jne
orl
fmull
ja
inc
pop
xchg
sbb
movsl
dec
sarl
add
sbb
mov
sbb
pop
lock
sub
aaa
xor
pop
push
jne
xchg
or
xor
cmp
xor
xor
xor
push
insl
pop
sbb
dec
loope
or
orl
cmp
stos
dec
and
push
fcmovnu
cltd
mov
mov
stos
jne
mov
shll
movsb
lock
jbe
ret
test
rcrb
stos
mov
lock
pmaxub
xor
lods
mov
and
sub
cmp
stos
xor
cmp
mov
fmulp
xchg
sbb
addr16
mov
stc
xor
hlt
adc
adc
jno
add
idivb
cmp
aam
sbb
sti
mov
jno
test
mov
dec
bound
fdivrp
pop
outsb
cld
xor
gs
xor
sub
leave
repnz
cmp
adc
sub
fdivrs
fcmovne
adcl
push
pop
test
sub
xor
nop
inc
icebp
xchg
pop
cltd
repnz
fldcw
popf
jmp
nop
pop
pop
mov
sbb
and
pop
xor
adc
loope
lock
add
shrb
mov
sub
call
sti
and
cltd
push
ret
dec
or
xchg
pop
sbb
call
mov
cmp
and
pop
sbb
mov
dec
mov
pop
das
hlt
popf
cld
jb
idivl
mov
ds
push
inc
sbb
idivl
int3
test
repnz
sbb
les
push
cmpb
and
daa
inc
sub
fs
jg
loope
aaa
ja
mov
popa
inc
cltd
das
mov
psadbw
lods
xlat
mov
lds
mov
push
nop
adc
ljmp
or
jo
mov
stc
sub
movsl
inc
ficoml
jecxz
call
rorl
out
adc
repz
lcall
sub
mov
cmp
stos
lahf
idivl
cld
jp
push
bound
or
push
loop
loop
jnp
loop
pop
aad
push
aas
outsl
fidivrl
xor
or
fcoml
fsts
or
push
in
loope
loope
add
dec
loope
xor
adc
icebp
mov
int
mov
pop
aam
icebp
mov
xchg
push
mov
fisubrl
in
or
idivb
pop
sti
sub
pop
sub
jnp
add
cmp
lret
or
aaa
imul
add
scas
mov
add
int
mov
and
pop
xor
add
push
les
lcall
mov
or
cmp
in
addr16
dec
xlat
pop
jne
sbb
aas
jne
and
sti
jnp
pop
mov
sub
popf
ret
shlb
mov
xchg
push
in
mov
jge
fldt
lcall
xchg
mov
sbb
test
pop
dec
jno
dec
push
xor
jl
jle
imul
shll
jns
cs
inc
inc
xor
sub
pop
push
inc
xor
aam
loop
ret
jp
mov
mov
adc
pop
inc
pop
xor
lea
xlat
inc
mov
aad
mov
cs
mov
and
dec
xor
in
in
add
mov
rcrb
xor
sbb
ja
mov
repnz
xor
sub
addr16
mov
add
popa
xchg
sbb
cmovle
pop
or
xor
jmp
cmpsl
or
pop
outsb
les
lcall
orb
ss
lock
pop
in
mov
repz
dec
stos
xchg
mov
lahf
jg
inc
ss
pop
scas
sub
and
xor
dec
push
xor
iret
and
xor
cmpsb
mov
gs
mov
cltd
dec
mov
xor
xor
jg
jo
mov
cltd
orb
push
cltd
sub
and
dec
adc
add
push
xor
xor
sahf
sbb
xchg
mov
mov
jl
cmp
mov
shlb
cmpsl
mov
lahf
lods
rorb
jecxz
dec
xor
push
adc
mov
loope
mov
jns
push
imul
ja
sbb
lods
xor
int
lcall
push
and
push
mov
xor
xor
xlat
mov
xchg
or
rcll
jb
push
jp
cli
test
mov
sub
mov
mov
push
cmp
and
xor
mov
push
sub
push
xor
shlb
xor
jns
and
xor
and
mov
int3
ljmp
leave
test
pop
sarl
repz
jmp
and
pushf
pop
mov
pop
stos
inc
mov
sub
adc
and
jecxz
sbb
movsl
mov
mov
scas
jb
les
in
es
bound
xor
fldenv
mov
js
xchg
mov
rclb
rcrl
mov
bound
shl
xor
sahf
data16
aad
cmp
xor
inc
icebp
push
fistl
xor
push
cmp
pop
divb
add
xor
arpl
ja
jg
fmuls
inc
outsb
pop
and
sub
pop
jle
das
mov
mov
xchg
pusha
mov
rcrl
and
xchg
and
pop
cmpsl
in
lcall
dec
repz
and
sbb
sbb
cwtl
fwait
insl
and
cmp
xor
xor
xor
cmp
push
daa
push
aaa
xor
xchg
push
cltd
and
mov
lea
push
cltd
lcall
sbb
aam
sbb
xor
lcall
fdiv
push
and
inc
adc
cmpsl
mov
mov
icebp
xor
sub
xor
and
ss
pop
aad
std
xor
int3
je
xchg
pop
clc
shrb
or
xchg
inc
movsl
nop
es
dec
lret
outsl
push
push
pop
push
loopne
dec
mov
xor
lret
lcall
movsb
push
adc
or
mov
dec
push
xor
test
popa
cmp
xor
rcrb
icebp
pop
je
pop
or
fsts
mov
push
insb
setns
fidivrs
lds
fs
and
insb
sub
jecxz
mov
ss
test
mov
push
or
sub
bound
or
xor
mov
inc
imul
xlat
add
loop
push
insb
out
dec
sbb
loop
inc
dec
cs
sbb
loop
sub
mov
imul
pop
shrb
mov
repnz
pop
idivl
sarb
repnz
mov
push
leave
pop
cmpsb
repnz
and
fsubs
push
xchg
movsb
sbb
cmp
fwait
lods
pop
xor
mov
and
sarl
adc
addr16
xchg
sbb
int
ja
cltd
addl
ss
xchg
pop
adc
xchg
pop
pop
cmpsl
mov
push
mov
bound
jnp
mov
lods
leave
popa
inc
in
or
mov
cmp
fsts
movsb
repz
push
aad
dec
sub
imul
in
dec
lcall
and
mov
arpl
mov
mov
rolb
sub
push
xchg
ret
adc
fisubrl
xor
pop
cmpsb
loop
xor
lret
jne
pop
sbb
mov
ret
stc
int
mov
mov
mov
cltd
iret
sbbb
imul
ja
mov
int3
add
pushf
xor
xchg
push
push
popa
pushf
std
push
sub
frstor
in
jge
mov
pop
out
bound
inc
sub
fwait
mov
mov
rclb
stc
outsb
xchg
xor
sbb
popa
int3
xlat
cltd
push
xor
ss
pop
lock
xchg
daa
or
fsubl
xchg
and
pop
sarb
pop
lock
dec
push
cmp
pop
test
push
sbb
lds
mov
inc
les
xchg
movsl
mov
cmc
test
mov
mov
xor
mov
sub
movl
or
lea
push
sub
cmp
mov
sbb
dec
pushf
ja
stc
out
inc
mov
jno
pushl
mov
pushf
push
in
xchg
daa
cmp
je
add
daa
sub
xchg
and
xchg
into
ljmp
iret
fs
das
sbb
orl
paddd
loope
aaa
jne
push
cli
push
push
jns
std
in
dec
nop
jp
in
sbb
pushf
xchg
pop
or
sbb
insb
lcall
jno
jmp
cmp
stos
or
adc
je
and
sub
jno
mov
enter
jge
je
pop
and
mov
lds
xchg
daa
iret
andb
les
adc
idiv
js
mov
xchg
cmp
movsb
cwtl
cli
daa
gs
shll
mov
in
call
lods
mov
xor
or
lods
lahf
sub
xor
adcb
sbb
pop
mov
lods
and
mov
mov
mov
arpl
test
clc
push
rcrl
ret
pop
jb
sbb
in
shl
notl
pop
inc
xchg
push
pop
add
std
fldenv
lea
mov
and
adc
xor
xor
daa
fsts
sti
xor
fisubrl
and
xchg
in
fwait
rol
ss
push
sbb
xchg
lret
sbb
xor
xchg
xor
pop
pop
xor
popa
stos
adcb
mov
sti
arpl
sbb
daa
pop
xor
mov
xchg
out
and
mov
testb
push
jns
je
add
pop
mov
cmc
add
pop
sub
subb
shl
mov
subb
jae
xchg
mov
stc
adc
dec
sub
adc
push
jge
fldcw
inc
cmp
clc
mov
cmp
mov
add
inc
adcl
xchg
jae
dec
shll
sbb
mov
mov
adc
pop
xor
push
sbb
xor
mov
int3
mov
shlb
pop
and
fistpl
mov
adc
cld
loope
aam
mov
jmp
xor
pop
mov
dec
pop
insb
bt
mov
sub
andl
test
repnz
pop
push
xor
mov
adc
in
sarb
mov
imul
add
add
addr16
cmp
sahf
xchg
xchg
pop
lret
unpckhps
dec
pop
add
adc
xor
call
add
inc
mov
popf
or
push
repz
js
data16
es
imul
jmp
xchg
push
lret
movsb
jno
adc
sbb
mov
imul
stc
jge
hlt
sbb
clc
dec
cmp
ret
pop
lock
shll
test
or
pop
insb
icebp
ss
push
adc
cmp
mov
push
xchg
xchg
pop
cmp
hlt
xor
and
in
clc
stc
imul
hlt
xor
dec
mov
inc
scas
lahf
xor
js
in
dec
outsl
mov
add
or
mov
push
emms
ror
in
popa
push
jle
mov
cmp
lret
dec
xchg
add
xor
lcall
sbb
inc
cmp
mov
orb
adc
jnp
mov
and
gs
sbb
stos
divb
dec
mov
xchg
nop
cltd
mov
adc
sarl
or
lods
dec
loop
fldcw
fstpt
insl
mov
mov
popa
mov
scas
push
lret
je
outsl
push
and
ljmp
mov
sub
mov
inc
rorb
mov
leave
out
cli
pop
lret
cltd
pop
js
ljmp
or
or
inc
cmpsl
data16
rorb
sub
xchg
and
xor
fwait
cmp
aas
cmp
outsl
inc
cli
sub
inc
aaa
loope
mov
nop
lcall
and
xchg
and
pop
pop
int
lcall
cmp
xchg
jmp
outsb
imul
dec
stos
ss
and
or
jo
push
mov
shrd
cmp
loop
in
cmp
sarl
mov
jne
loop
pop
mov
cmp
in
inc
mov
enter
mov
divl
dec
movsb
jns
les
test
std
push
movsl
pop
mov
mov
mov
xchg
xchg
pop
push
mov
test
mov
pop
cld
in
pop
pop
movsb
jno
leave
add
inc
fstps
jge
xor
dec
pop
pop
add
xchg
vpcmpgtd
adc
pop
pop
es
jno
adc
ret
adc
mov
movsb
in
cli
adc
dec
adc
rcll
lods
jp
mov
adc
iret
push
inc
stos
mov
cwtl
lret
xor
jno
push
xlat
enter
and
hlt
inc
sub
inc
rcrb
push
jg
mov
pop
xor
out
addb
rorb
adc
lahf
cwtl
xchg
clc
cmp
xor
adc
dec
lret
scas
dec
and
pop
into
jne
fwait
mov
sbb
xchg
sahf
sbbb
fcoms
fs
cmp
cmp
pop
dec
jns
mov
pop
mov
cmp
add
mov
lret
loopne
cmp
ds
push
pop
push
prefetch
repnz
iret
and
imul
pushf
xor
xchg
jge
push
mov
fistpl
stos
xchg
sbb
mov
flds
lods
jmp
inc
pop
loop
lods
divl
xchg
ficompl
cld
and
dec
ds
xchg
ret
cmpsl
shlb
mov
jb
jae
in
dec
out
aad
idivb
adc
das
aam
add
sub
adc
push
cmp
movsb
mov
ja
cli
cmp
aad
jp
je
mov
aad
push
loopne
xchg
push
mov
out
and
xor
in
jle
lods
xchg
mov
nop
push
xchg
pop
mov
iret
mov
pop
shll
push
fisttpl
jmp
and
mov
test
out
xchg
jle
ss
les
insl
ljmp
fisttpll
pop
sub
inc
out
scas
jno
xor
mov
in
adc
xchg
out
btr
enter
mov
push
stos
xchg
cmp
loop
js
cli
cmp
mov
ja
push
outsl
mov
pop
out
fcoml
out
test
inc
or
xor
nop
sub
cwtl
hlt
mov
push
mov
nop
ret
sbb
mov
aaa
mov
mov
in
mov
rcrl
push
add
daa
xchg
outsl
mov
cli
add
sbb
aam
mov
adc
mov
cmpsl
lods
shlb
lea
mov
inc
movsl
aas
xor
push
mov
aad
jnp
xor
dec
jecxz
push
inc
cli
ret
cmpsl
das
outsb
sbb
gs
sbb
sub
sahf
xlat
xor
pop
shll
cmp
aaa
and
sti
push
mov
je
push
xor
mov
dec
mov
or
dec
and
mov
dec
or
lods
gs
addb
jnp
xor
cmpsb
fwait
lods
pop
sub
dec
lods
xchg
arpl
insb
in
push
sub
shlb
sub
push
or
mov
xor
jl
xchg
mov
insb
les
fs
xor
in
mov
cmp
mov
lcall
mov
pop
mov
pop
mov
pop
xchg
lock
idivb
ss
jae
mov
lods
xchg
cld
ja
ficoms
mov
or
push
das
outsl
inc
in
mov
jb
add
pop
sti
sahf
orl
cmp
mov
jecxz
aaa
xchg
stc
int
popf
call
movl
ret
in
dec
test
jecxz
inc
lods
shll
or
jge
imul
dec
in
xchg
jae
in
cltd
mov
mov
sbb
pop
enter
dec
xchg
movsb
mov
int3
push
lcall
jp
fmuls
cs
mov
ret
pop
jge
jns
adc
add
dec
sbb
jo
xchg
push
mov
cmp
sub
pop
sbb
xchg
stc
cmp
jmp
out
push
imul
aad
adc
xor
add
cwtl
arpl
sarb
adc
pop
jne
sub
mov
adc
sbb
inc
push
adc
lcall
data16
cs
or
test
cmp
xchg
pop
mov
jbe
mov
adc
sbb
add
aaa
outsb
inc
stos
pop
push
dec
and
call
cmp
pop
jns
sahf
ss
popf
xchg
mov
mov
fcomps
pop
in
xchg
dec
shl
add
sti
xor
or
xchg
sti
fldl
mov
stc
and
mov
call
loop
mov
dec
ret
in
push
std
fldl
or
xor
stos
mov
jnp
fcomp
inc
cmp
andb
xchg
outsl
sti
push
repz
dec
psrld
sbb
sub
popa
cmp
test
insb
xor
sub
jae
out
lret
gs
loope
pop
adc
and
xor
movsl
mov
and
insb
fsts
fcomps
out
and
nop
mov
pop
setno
cmp
outsl
pop
push
subb
je
cmp
mov
fdivrl
mov
loop
stos
push
shlb
inc
enter
mov
adc
lret
jge
sbb
push
mov
outsb
ret
mov
mov
int
cli
fcomps
sarl
add
mov
cli
push
loope
ja,pt
mov
add
cmp
lods
inc
sub
dec
call
fwait
loop
repz
mov
push
sahf
popf
ss
cmp
out
lret
mov
std
and
push
clc
mov
rcl
ficoms
loop
ja
cmpsl
roll
xchg
shlb
cmp
adc
jg
add
das
cs
pop
sbb
dec
mov
pop
inc
out
mov
push
in
mov
and
imul
ljmp
lea
cmp
cmp
xlat
les
out
push
iret
cmp
dec
jge
icebp
jmp
lret
fidivl
mov
jne
pop
enter
xchg
or
dec
pop
xor
jle
jecxz
pop
mov
jo
sub
xor
int
push
pop
cmp
cwtl
sbb
fcmovnb
dec
les
push
scas
xchg
add
mov
mov
mov
xchg
popa
xor
aaa
icebp
pop
popf
add
xchg
test
loop
out
movsb
aam
xor
leave
addl
add
jo
subl
push
and
sbb
daa
xchg
or
lds
xchg
pop
leave
push
mov
mov
pushl
js
sub
leave
lock
sbb
fstl
xor
cmp
mov
xchg
xor
or
mov
ljmp
xchg
hlt
mov
cli
push
fwait
mov
adc
packssdw
jl
addl
int3
dec
mov
leave
pop
pop
xchg
popa
mov
mov
sub
fwait
popf
in
xor
or
jno
imul
or
sbb
sbb
pop
repnz
or
lods
sbb
or
in
lods
dec
movsb
mov
xchg
add
mov
outsl
pop
cmpsb
xchg
mov
sti
cmp
imulb
fwait
mov
adc
imul
aaa
shll
pop
push
in
mov
or
imul
cmp
aaa
mov
add
xor
sub
add
fidivl
push
enter
dec
daa
sbb
in
loope
mov
pop
or
sbb
or
outsl
pushf
add
shrb
xchg
loop
bound
fcoms
cmp
lcall
int3
cmp
inc
push
jecxz
sti
loop
mov
cmp
xor
push
loop
and
test
ret
les
jae
mov
lret
jge
xchg
xor
xchg
jbe
pop
cld
addr16
lods
xorl
xchg
adc
scas
jo
mov
les
imul
andl
xor
data16
or
push
push
addr16
mov
cmp
jae
mov
bound
cmp
mov
inc
mov
push
xchg
xchg
sub
ljmp
pusha
sub
popf
mov
fldt
jl
adc
adc
add
inc
sub
js
xor
mov
popf
sti
mov
push
jp
jmp
jo
scas
lret
xor
in
or
shrl
xor
push
pusha
in
sub
jo
fsubl
sub
or
sbb
aaa
sub
jns
xor
fdivrs
subb
sbb
fwait
cmp
add
stc
or
aam
in
imul
movl
xchg
cmp
add
stc
mov
enter
dec
push
daa
mov
and
pusha
iret
jae
stc
in
dec
xor
ja
and
movb
push
xchg
sub
lret
jb
sub
sbb
cmpsl
out
lods
sbb
cmp
lock
push
sub
rorb
iret
adc
aaa
pusha
push
push
repnz
cmp
lret
aaa
xchg
outsb
pop
mov
iret
dec
mov
sub
mov
mov
ret
cmp
cwtl
jno
sarl
clc
popl
pop
or
xor
push
imul
lods
bound
lock
jne
cmp
add
iret
inc
lock
xchg
mov
shll
mov
push
push
lret
mov
sarb
popf
pop
dec
inc
pop
push
dec
movsl
mov
mov
pop
pop
push
sti
fidivl
mov
pop
repz
mov
mov
nop
cmpsb
and
add
pop
in
sbb
xchg
sub
sbb
adcl
push
psubsw
xchg
cltd
loop
xor
cmpsb
inc
xor
popa
mov
test
mov
cmp
add
test
pop
xor
dec
xor
loop
int
call
mov
cmpsb
push
rcr
sbb
and
sbb
push
mov
adc
stc
test
add
test
add
mov
mov
cmpsl
aas
sbb
inc
cli
fs
push
stc
push
mov
pop
cmp
add
pop
mov
and
lods
ret
xchg
cmp
movsb
push
jle
cmp
rclb
xor
fwait
cmp
sbb
out
divb
cli
repz
and
stc
std
jge
loope
std
xchg
scas
or
lret
in
mov
add
daa
scas
stos
or
mov
jmp
and
inc
fdivrl
pushf
mov
std
addb
cmpsl
data16
into
add
mov
cmp
stos
bound
cpuid
cmp
mov
dec
cmc
inc
ljmp
xchg
mov
fwait
lcall
stc
pop
mov
and
mov
mov
xchg
sub
in
mov
daa
pop
sub
cld
cmpl
push
mov
subb
or
out
mov
sbb
and
lods
es
scas
push
xor
sub
xchg
push
pop
das
push
je
pop
dec
push
xchg
sbb
sbb
rcl
sbb
bound
adc
loop
lock
mov
fsubrs
test
or
inc
lods
nop
xchg
sarb
js
sbb
push
inc
movsb
lret
cmpsb
mov
mov
ss
pop
popa
mov
repz
cli
cmpsl
push
xlat
nop
in
test
test
mov
imul
mov
cmpsb
push
dec
pop
cmp
cwtl
cld
push
js
clc
daa
pop
mov
bound
or
inc
cvtps2pd
sub
mov
push
fsts
mov
mov
pop
xlat
std
sub
iret
aad
das
inc
mov
xor
pop
or
push
dec
rcll
xchg
push
ss
cmp
sti
movsl
das
pop
lahf
jns
in
fsubs
cmp
xor
mov
test
inc
push
push
adc
sbb
flds
inc
in
int3
adc
sti
cmp
jne
loop
out
and
sbb
movsl
cmpsl
xchg
xor
in
sub
shrl
xor
loop
in
into
je
push
test
or
sbb
sar
stos
loope
xchg
out
push
mov
mov
fdivrl
fld
cmp
mov
sbb
lcall
adc
sub
xchg
adc
popf
push
pop
and
push
addr16
or
push
xchg
int3
in
and
and
popf
loope
or
popa
mov
or
adc
fidivrl
gs
xchg
add
fists
movsl
and
xchg
aas
push
lods
inc
arpl
int
cmp
xor
ds
mov
sub
and
sbb
aas
jg
pop
mov
pop
repnz
mull
jp
jecxz
mov
cmp
cmp
into
pop
negl
mov
into
push
push
jne
mov
jno
sbb
xchg
sbb
add
fsubl
mov
aaa
xchg
jnp
sub
pop
pop
ficompl
pop
push
push
adc
inc
pop
sub
push
daa
test
pop
es
adc
loop
stos
sbb
arpl
sbb
pop
stc
shlb
lods
inc
cmp
pop
xor
dec
shlb
fdiv
cli
pop
adc
adc
sub
mov
push
mov
lock
sarb
sbb
mov
push
hlt
icebp
xchg
fadds
pop
adc
mov
push
mov
inc
shlb
xchg
adc
sbb
pop
lret
xchg
pop
hlt
mov
sbb
and
xchg
das
inc
sub
pshufw
rol
rclb
es
xchg
push
insl
aam
sahf
xor
cmp
push
sbb
sti
dec
sbb
pusha
sldt
adc
fs
int3
add
aas
cmp
pop
pop
mov
and
pop
cmp
and
cmp
cmp
ljmp
loop
xchg
fcomi
xor
mov
mov
and
cwtl
mov
xchg
jns
lahf
lret
lret
adc
push
std
lcall
pop
pop
pop
dec
fmull
test
mov
xor
xor
adc
xor
cmp
cltd
pop
jbe
jge
inc
xor
mov
mov
popa
push
aaa
lods
xchg
dec
xchg
push
inc
aaa
pop
repz
fnstcw
xchg
sar
mov
inc
sbb
cmp
int
add
rcrb
inc
xor
stc
addl
movsb
insl
repnz
fcmovnb
iret
xor
mov
jne
hlt
or
adc
xchg
or
mov
jns
adc
cmp
adc
hlt
xchg
mov
insl
rorb
sahf
insl
pop
icebp
push
xchg
mov
and
inc
mov
daa
fwait
movsl
loop
sbb
fwait
jne
cmp
stc
fdecstp
pop
jmp
leave
int
sub
fildl
call
mov
or
and
enter
fistps
ljmp
adc
push
xor
adc
pop
and
shl
pop
xchg
lock
jge
inc
add
scas
sbbl
adc
mov
fs
or
mov
rcrb
jge
es
mov
aad
stc
inc
pop
push
aas
or
sub
jb
test
int3
cmp
nop
pop
pop
sub
mulb
cld
inc
movsb
imul
mov
mov
xor
and
fstpl
shlb
popf
push
and
fimull
xor
mov
mov
xlat
cmpsl
fs
popf
mov
mov
je
out
sbb
mov
in
pop
pop
cld
mov
aas
clc
xor
inc
push
in
test
mov
cmp
xchg
push
insl
cmp
xor
popa
in
js
pop
xor
xchg
inc
adc
dec
pop
loop
ss
mov
jmp
and
jno
lock
jmp
mov
sub
and
adc
adc
iret
std
mov
sbb
pop
and
in
mov
xchg
mov
jl
fcmovbe
push
test
mov
adc
dec
dec
test
push
ja
stc
not
enter
aaa
and
mov
je
cmpsl
sub
stos
and
adc
or
das
push
and
mov
pop
scas
mov
mov
cld
dec
inc
push
mov
sbb
outsl
jne
mov
xor
fildll
and
and
or
and
xchg
cli
jne
cmp
xchg
pop
sub
pop
shr
jo
out
ja
aas
in
fldl
adc
mov
push
call
cmpsl
xchg
outsb
stos
xor
rorl
enter
outsl
sbb
xor
xor
add
mov
jl
aad
mov
divl
sbb
and
cmp
pop
addl
shlb
dec
rclb
andb
adc
xchg
push
mov
fs
pop
sbb
gs
jo
and
mov
push
push
mov
push
push
movsl
pop
jg
pop
mov
pusha
and
pop
cmp
stc
aaa
dec
push
arpl
sbb
movsl
popa
inc
inc
in
push
push
lock
nop
rcrl
mov
and
es
add
xchg
sub
lds
shll
push
aad
cmp
sahf
or
add
inc
clc
push
jecxz
xor
pushf
push
sbb
lods
sti
sbb
inc
iret
repnz
aas
cld
out
mov
push
pop
push
test
repz
sahf
xor
test
adc
dec
sti
xchg
sub
pushf
mov
aad
mov
psubw
sbb
cmpsl
outsb
pushf
xchg
mov
mov
int
arpl
mov
adc
into
jmp
stc
leave
push
out
cmc
insb
popa
xor
dec
adcb
in
push
cltd
imul
int3
xchg
popf
push
mov
outsb
sbb
lock
daa
lahf
iret
mov
lock
repnz
cmp
aam
xor
mov
rclb
mov
push
imul
rclb
xchg
repnz
in
and
adc
and
imul
les
loop
out
mov
pop
shl
adc
decb
jge
add
jmp
jnp
rcll
ds
cmpsl
lret
fcmovbe
xchg
mov
test
cmp
add
xchg
ss
xor
enter
mov
cmpsl
jl
repnz
adc
bound
adc
rolb
cmp
xor
std
xchg
loop
mov
and
cmp
sti
and
mov
int
jne
test
cmpsl
add
clc
mov
lods
imul
xchg
inc
xchg
cwtl
dec
lods
xlat
pop
clc
or
dec
addr16
add
sbb
jg
cltd
test
ret
mov
mov
dec
gs
sbb
add
rorb
ret
js
cli
adcl
mov
inc
mov
fwait
subb
out
stos
dec
pop
add
daa
negb
pop
dec
push
inc
mov
mov
fadds
aas
pop
imul
popa
addr16
push
dec
xor
fstps
mov
loop
out
mov
pop
mov
pop
sbb
aaa
sbb
pop
xchg
xor
sub
test
mov
loope
sub
mov
jecxz
and
inc
sbb
dec
daa
cmp
ds
mov
and
pop
xorb
fsubrl
sub
lds
das
mov
lods
cmp
pop
int3
loopne
jp
jo
jmp
shll
aaa
aaa
xchg
into
pop
daa
jg
ja
add
xor
repnz
pop
push
shrl
in
mov
dec
movsl
mov
ficompl
cwtl
mov
xor
mov
int
mov
mov
dec
mov
inc
mov
aaa
shr
jns
sub
enter
add
aaa
sub
inc
inc
cmp
gs
mov
and
cmp
xchg
iret
lret
pop
aad
dec
loope
pop
sub
jb
push
add
pushl
or
add
mov
xor
mov
nop
xchg
adc
mov
xor
fldl2e
push
or
icebp
pop
inc
in
pop
call
adc
sahf
push
pop
imul
push
fldt
sbb
cwtl
rcll
iret
push
or
xor
sti
xor
mov
xchg
add
dec
cld
repz
jbe
mov
cmp
jge
mov
sbbl
xchg
push
in
andl
ljmp
daa
lret
cwtl
stos
push
lea
and
loope
mov
pop
dec
xor
insb
rcrl
adc
pusha
xor
stos
or
fsubrl
pop
lret
dec
mov
pop
cwtl
add
xchg
cmp
negb
inc
sub
mov
xor
sub
push
dec
fisttpl
dec
pop
jno
adc
sbb
sbb
or
inc
adc
jb
loop
mov
fnstenv
mov
xchg
adc
cmp
stos
leave
inc
ret
push
jae
and
add
xchg
push
cmp
sarb
ljmp
imulb
push
xor
jl
mov
scas
outsb
dec
pushl
inc
mov
xchg
mov
stc
in
shlb
in
jge
mov
push
inc
adc
mov
daa
divl
sbb
mov
repz
inc
push
xchg
xrelease
in
sub
loop
movsb
jno
mov
sub
sub
xor
test
repnz
push
lods
and
leave
add
bnd
cli
pop
stc
aaa
aaa
mov
adc
mov
orb
js
mov
jbe
inc
or
sbb
pop
adc
hlt
mov
js
fidivl
push
orb
lahf
or
inc
xchg
sbb
sarl
mov
ret
loop
jns
mov
mov
jmp
lea
cmp
jns
lea
aam
mov
push
and
lock
ret
fstpl
into
dec
fadd
lret
sbb
sbb
in
aad
mov
and
adc
scas
or
hlt
jmp
and
popf
les
mov
aaa
adc
xchg
dec
in
xchg
sbb
and
mov
mov
pop
stos
push
or
jg
mov
test
and
add
adc
push
popa
sbb
ljmp
mov
mov
sbb
add
xchg
test
lcall
sbb
xchg
stc
cmp
xor
scas
inc
sbb
stc
pop
push
cmp
sbb
xor
imul
cld
adc
stos
adc
dec
jbe
jo
push
xchg
mov
ja
stos
fwait
in
ljmp
lret
cmc
fists
dec
xor
sub
xchg
pop
and
cmp
push
cmp
mov
stos
aas
clc
arpl
push
fsts
xor
xor
inc
js
jmp
xor
js
xchg
push
aaa
in
clc
and
mov
xor
mov
xchg
xor
mov
sub
xchg
fistps
push
push
movsl
push
push
sub
fs
leave
or
les
rcrl
jns
iret
xchg
sbb
subl
cmc
push
xchg
and
sarb
xchg
in
stos
cmpsb
mov
dec
mov
pop
adc
loop
decl
loopne
mov
dec
and
call
aad
sub
xor
leave
mov
cmpsb
and
mov
or
in
inc
jle
test
in
idiv
pop
lods
fisubs
xchg
mov
push
cmp
mov
or
adc
xchg
dec
add
iret
stc
popf
mov
xchg
mov
jecxz
loopne
in
cmp
into
popa
sbb
jno
push
int3
mov
push
incb
mov
or
pop
push
xor
jne
repz
aam
add
or
or
daa
adc
call
or
pop
xchg
or
iret
sbb
xchg
popa
xchg
lods
xor
pop
cmp
and
enter
adc
push
scas
sbb
mov
sti
inc
sbb
shlb
dec
cmp
repnz
shlb
sub
lock
or
sub
aaa
lods
flds
shll
iret
xchg
call
push
push
sti
adc
mov
mov
mov
movsb
das
pop
xchg
or
mov
les
inc
dec
and
ds
fdivrs
push
mov
mov
xor
push
inc
and
mov
cltd
test
mov
hlt
fstpl
mov
pop
jecxz
cmpsl
adc
mov
addr16
xor
mov
cmp
sbb
mov
and
lcall
sbb
mov
inc
mov
pusha
push
out
iret
dec
mov
sub
fdiv
cltd
sbb
aaa
inc
mov
pop
lea
pop
mov
pop
call
sbb
cmpsl
clc
sub
and
shlb
or
lods
and
aad
insl
xor
mov
push
xor
stc
sbb
je
and
or
movsl
aas
out
loop
loopne
xchg
xchg
dec
xchg
push
pop
mov
adc
sub
xchg
das
iret
xchg
aam
push
xor
jbe
add
mov
xchg
sti
xor
inc
mov
scas
daa
add
sahf
mov
inc
popl
dec
sbb
xchg
mov
lods
fs
sbb
sub
xchg
mov
sti
jne
add
mov
pop
adc
repnz
andl
inc
sub
xchg
xor
xchg
aaa
sub
fwait
imul
ljmp
and
push
dec
and
call
push
rcrb
rclb
adc
das
mov
and
or
enter
xchg
jae
jne
icebp
adc
adc
repnz
ja
cmc
addr16
dec
loop
shr
jae
add
icebp
rcrl
mov
sti
sub
mov
cmp
js
or
fwait
push
sub
popf
jbe
cmp
es
xor
lods
inc
push
and
push
repnz
std
mov
out
sbb
inc
lret
ret
lods
in
jecxz
fnstcw
lds
scas
cltd
and
std
dec
mov
cs
int
jns
cmp
adc
push
into
movsb
mov
and
pop
int
ret
cmp
into
xchg
test
cmp
int3
stc
dec
push
loope
inc
adc
stos
test
inc
shlb
or
movsb
sub
or
mov
loop
push
call
sub
sub
add
cs
mov
sub
repnz
mov
out
js
dec
mov
jp
adc
and
test
push
adc
xchg
push
mov
sub
xor
mov
sti
outsb
pop
test
pushf
cwtl
pop
xchg
xchg
ss
xchg
and
mov
xor
and
mov
adc
rclb
imul
movsl
ja
cmpxchg
iret
fistl
nop
mov
xchg
pop
xor
push
or
leave
daa
and
les
nop
daa
mov
arpl
sub
and
jbe
rolb
in
jg
loopne
xor
call
mov
xchg
and
cmp
aaa
inc
mov
stc
loope
jnp
mov
call
jg
loope,pt
pop
cmp
push
add
inc
pop
scas
xor
lahf
inc
xchg
js
jnp
jle
int3
xchg
push
dec
push
xchg
rcrb
in
dec
dec
cli
xor
xchg
es
inc
popa
stos
pop
lea
mov
dec
es
lahf
scas
int3
mov
mov
sti
out
lea
jl
jle
imul
daa
lea
gs
sbb
pop
and
sbb
stc
mov
lods
test
ljmp
shlb
rcr
xchg
sub
add
mov
sbb
inc
out
and
imul
lea
and
and
leave
ja
cmp
lods
rcrl
pop
or
fsubl
adc
jg
sub
outsb
cli
mov
mov
enter
inc
cmpsb
divl
enter
movsb
scas
test
pop
push
jno
push
and
sub
adc
mov
repnz
mov
xchg
rcrb
orl
popa
lods
outsl
out
mov
imul
and
inc
hlt
and
adc
rcrb
sbb
xchg
shl
dec
sub
cmpsl
and
mov
sbb
and
xchg
inc
push
cmp
sub
call
xorl
jge
mov
lcall
stos
mov
jnp
cmp
xor
jo
push
jmp
sub
sub
into
sti
js
das
push
fidivs
dec
fnstcw
sti
adc
in
ss
fstpl
xchg
push
popa
dec
xlat
scas
jle
cmp
mov
mov
filds
mov
add
lret
outsb
cmp
das
pop
sbb
cli
adc
outsl
cmp
add
mov
out
dec
icebp
sub
jbe
ficoms
inc
xchg
sti
stc
or
ljmp
loopne
lcall
add
out
mov
aam
repz
xor
fdivrp
aas
push
enter
ja
push
rcrl
orl
loop
ret
test
jle
movsl
mov
mov
loop
ret
je
test
shrb
cmp
insl
cli
loopne
cmp
ja
lds
or
adc
int3
adc
sbb
sbb
popa
mov
sahf
int
idivb
xor
xlat
sub
pop
mov
mov
pop
pop
pcmpeqb
pushf
movhps
add
or
aam
ljmp
rol
lds
mov
in
adc
sti
inc
mov
push
cwtl
or
out
mov
enter
add
sub
std
and
or
adc
jne
in
lcall
adc
jne
or
mov
xchg
fdivs
data16
stos
mov
inc
push
pop
mov
jl
xchg
mov
xchg
cmpsb
or
adcl
sbb
testb
ja
cs
call
xchg
nop
cmpsl
xor
add
aaa
or
pop
push
sub
jb
adc
add
movsb
jmp
cli
and
xchg
out
stos
mov
cltd
sub
and
cwtl
push
loope
int
cld
xchg
xor
cmc
imul
pop
iret
out
mov
nop
pop
jge
dec
fnstcw
out
xchg
pop
jo
stos
sub
lahf
cltd
fcom
xor
lock
sbb
sahf
xchg
mov
rcl
aad
adc
movb
adc
das
xchg
fisubrl
sub
sub
movsb
aaa
cwtl
or
adc
ret
popa
imul
mov
sti
pop
loope
dec
mov
jp
loope
sbb
xchg
les
mov
packssdw
or
mov
loope
repnz
xchg
xlat
sbb
sub
sub
sub
sbb
rcll
in
pop
jns
push
adc
pop
inc
push
push
push
hlt
out
sub
xor
pop
pop
movsb
cld
je
popa
daa
cmp
pop
notb
dec
rep
movsl
xor
fwait
scas
push
es
mov
dec
lock
incb
mov
and
imul
pusha
lcall
hlt
aas
sub
add
or
lahf
xor
xchg
push
sbb
mov
lods
stos
out
sub
mov
xchg
adc
cs
int
and
and
jp
repnz
sbb
or
jno
mov
mov
jns
dec
pop
inc
mov
loop
adc
shl
stos
js
and
inc
loop
sti
lret
sub
xchg
sub
mov
sbb
mov
jb
addr16
cld
jae
sub
mov
loop
mov
cmp
mov
in
mov
sub
inc
jl
mov
in
mov
sub
cltd
mov
fwait
sbb
xchg
add
inc
iret
push
je
xor
xor
jns
arpl
inc
and
addr16
xchg
fimuls
jecxz
mov
das
mov
shlb
movsl
sbb
push
imul
mov
addr16
jp
jecxz
jbe
movsb
imul
flds
enter
out
ret
and
cld
and
xchg
xchg
mov
and
or
and
mov
sbb
push
sub
gs
and
xchg
mov
loop
push
add
loope
jmp
add
in
out
mov
sqrtps
decl
pop
aas
sbb
sbb
mov
popa
andb
cmp
mov
dec
stc
call
sub
pop
adc
inc
sbbb
popf
adc
cld
popf
sbb
or
push
fcomps
push
adc
cmp
and
mov
xor
cmpsb
lds
or
cmpsl
out
mov
jbe
int
cmpsl
aas
imull
jns,pt
or
call
rcrb
mov
aaa
daa
andl
or
es
in
cmpsl
cs
dec
or
jns
aaa
adc
mov
and
ds
jmp
in
and
arpl
mov
and
push
pushl
mov
sub
cmpb
mov
inc
imull
sbb
sbb
and
xchg
push
in
jo
nop
sub
jns
push
test
sbb
les
sbb
das
xor
lret
add
arpl
rorb
pop
arpl
push
dec
jo
cmp
mov
jns
ds
leave
lods
rcrb
pusha
xor
std
shlb
test
pushf
jecxz
jns
outsl
push
imul
cmpsb
adc
or
add
push
xor
insb
imul
mov
push
push
cmpsl
mov
cwtl
mov
push
lahf
xor
std
aas
adc
sub
into
iret
dec
loop
inc
pop
mov
push
and
bound
and
es
cwtl
xchg
test
popf
add
and
gs
out
and
mov
adcb
in
fwait
popa
imul
and
sbb
sbb
in
cltd
test
add
mov
popa
push
xor
pop
pop
mov
adc
xchg
mov
daa
sub
fs
push
xchg
loope
adc
cmpsl
test
mov
push
cmpl
lds
pushf
loope
xor
rcrb
inc
sub
sbb
leave
adc
jmp
sahf
xchg
adc
jns
loop
sbb
adc
dec
xor
cltd
mov
fcmovb
fsubr
dec
cli
pop
hlt
sbb
mov
mov
sti
in
repz
out
int3
stos
dec
jl
or
jmp
fs
sub
rcrl
pop
sbb
dec
pop
es
adc
xor
les
and
daa
sti
cmp
pop
jg
das
jge
imul
aaa
lret
mov
cmp
inc
pop
xor
and
inc
jae
pop
inc
dec
xor
and
out
das
cltd
cmp
sbb
or
shrl
mov
or
cmpsb
add
ret
dec
bound
adc
pop
push
adc
mov
pop
mov
mov
adc
in
inc
jmp
movsl
xor
sub
sub
cmp
jbe
ljmp
pop
adc
jg
addr16
pop
xchg
inc
jge
enter
xchg
adc
add
movsb
or
add
outsb
or
push
lret
inc
inc
push
xchg
pop
pop
cmp
popa
roll
cmc
fnstsw
cmpsl
rcr
icebp
mov
cmp
or
imul
daa
cld
fucomi
inc
cld
dec
or
pop
mov
in
mov
sbb
aam
insl
fwait
aaa
jo
pusha
std
mov
inc
cmpsl
push
adc
mov
add
push
xchg
es
ljmp
sti
push
inc
add
jb
sub
push
and
inc
leave
xchg
push
pop
std
cmc
int
xlat
cmp
movsl
sbb
cltd
ds
pop
pushl
test
loopne
icebp
in
fcompl
pop
cmpsb
orl
arpl
adc
stos
cmp
sbb
ja
fidivl
cmpsl
gs
fdivrp
push
insb
sub
xchg
mov
shl
lret
sub
xchg
and
pop
mov
fistps
or
mov
fnsave
cmp
mov
pop
cltd
stos
inc
dec
in
and
pop
imul
and
loope
ja
mov
movsb
pop
mov
sbb
lahf
jmp
ljmp
sbb
pop
cmpsb
lods
into
dec
xchg
adc
mov
ss
aam
popa
ds
icebp
mov
dec
jg
shrl
adc
inc
dec
popf
adc
push
push
lret
add
and
cbtw
cmp
and
jbe
xor
and
and
loopne
sub
sti
sbb
adc
sets
adc
xchg
xchg
mov
cltd
in
xchg
popf
enter
pushf
inc
movsl
fbld
xchg
jnp
fs
push
aad
and
xor
pop
jmp
icebp
lcall
sbb
inc
enter
dec
sbb
or
xchg
orl
out
sar
sbb
mov
imul
pop
dec
and
test
mov
call
cmp
xor
push
dec
mov
xchg
addr16
and
push
inc
push
dec
pop
add
and
cli
mov
es
cs
jl
stos
leave
cmpsb
ljmp
scas
jge
idivb
inc
scas
push
rclb
mov
aaa
xchg
dec
add
dec
sbb
sbb
loop
fwait
pop
andb
inc
gs
mov
pop
cmpsl
jne
cmp
mov
dec
bound
adc
insl
mov
cmpsl
rcr
cs
and
mov
mov
adc
sub
jae
jne
mov
scas
lahf
adc
stc
sub
and
pop
inc
sbb
and
shll
jge
jns
test
push
push
adc
cmp
popf
addr16
add
jno
sbb
adc
arpl
imul
push
dec
mov
pop
mov
mov
mov
or
sub
out
mov
mov
xchg
lods
dec
in
dec
repz
add
mov
cmpsl
outsb
and
adc
pop
loope
int3
dec
xor
jp
call
cmpsb
mov
and
mov
xor
xor
fldt
mov
mov
push
icebp
aam
iret
pop
leave
ret
pop
es
roll
xchg
sbb
sub
jns
sub
ret
arpl
sbb
cmp
dec
movaps
pop
mov
adc
adc
stc
aad
and
std
mov
pop
sti
cmp
das
pop
insl
and
je
lcall
loop
ljmp
mov
xor
xor
adc
and
jno
and
stc
fwait
sub
icebp
pop
mov
dec
and
into
or
data16
fsubs
mov
or
insb
xor
adcb
daa
int
idiv
pop
imul
push
pop
mov
push
mov
mov
mov
mov
pop
xchg
mov
call
jge
adc
xlat
mov
fldenv
jns
fld
out
repnz
mov
jp
iret
sahf
clc
lods
fisttpl
sub
mov
shlb
jecxz
push
cld
pusha
fidivrs
add
xor
xchg
insl
pop
jns
xor
or
jg
ljmp
add
pop
ret
push
or
fld
mov
jge
insl
aaa
and
int3
dec
test
rcrb
in
and
iret
cmc
stc
fsubrs
jb
xchg
jbe
adcb
inc
outsb
filds
cmp
or
jp
add
nop
add
push
xchg
inc
sub
inc
addr16
in
and
mov
lcall
jb
add
pop
mov
cmp
inc
mov
sti
sbb
mov
cmpsl
and
pusha
int
jg
enter
loop
and
lahf
ret
imulb
loope
and
push
mov
ret
xor
add
lret
lret
lods
icebp
sub
dec
orl
cwtl
adc
in
cs
and
jae
mov
xor
pushf
clc
mov
loop
push
sbb
lea
clc
movsb
xlat
xchg
andl
jns
inc
int
rcrb
test
jo
clc
jnp
cmp
test
mov
jno
pop
xchg
sub
dec
daa
das
test
js
addr16
jno
mov
hlt
out
rol
mov
pop
rorl
sbb
mov
pop
loope
fsts
xchg
xor
cwtl
jne
pusha
jns
icebp
fiaddl
stc
inc
call
jl
bound
inc
jp
clc
lods
shll
call
add
jo
cmp
sub
and
mov
fsubs
pop
cmpl
push
push
adc
pop
repnz
mov
pop
jns
shlb
mov
out
inc
xor
push
shll
sahf
cmp
and
imul
lock
stos
jb
imul
push
and
jns
cmc
mov
mov
or
cltd
inc
cmc
add
jne
pushf
data16
and
push
ret
js
jne
mov
push
push
and
jge
xor
push
test
xor
mov
mov
mov
mov
daa
mov
mov
popf
flds
movsb
lods
pop
inc
and
xchg
push
xor
shll
movsb
push
mov
roll
loope
jae
loop
xchg
lods
loope
adc
pop
mov
inc
fsts
inc
xchg
leave
xchg
rcll
inc
cmc
into
pop
xchg
rcrb
popa
pusha
cmp
loopne
jecxz
or
lahf
inc
sub
jle
das
movsb
stc
inc
loope
stos
xchg
jae
mov
int3
imull
scas
mov
mov
cmp
push
ret
iret
iret
mov
loop
das
or
mov
fiadds
cmpsl
sbb
shr
loop
stos
je
sub
or
mov
int3
xchg
xchg
adc
and
bnd
mov
xchg
out
jnp
pop
aas
les
shll
pop
push
jmp
loop
repnz
sti
or
cmc
xor
cmp
fwait
adcl
mov
lods
fsubrl
jp
adc
cmp
mov
xor
ds
loope
loop
shrb
outsl
insb
push
inc
xor
je
stc
fimull
imul
adc
les
adc
or
loop
lock
lahf
cmp
xchg
adc
ret
jnp
mov
mov
push
ljmp
adc
push
and
in
sub
pop
xchg
iret
sarb
sbbb
xor
dec
pop
xchg
or
cmpsl
insb
push
fistl
mov
fwait
inc
in
mov
cmp
sbbb
frstor
pop
ja
push
xchg
and
push
cmp
and
mov
push
mov
sbb
daa
adc
pop
shlb
stos
addl
jnp
je
divl
adcb
fwait
in
mov
or
and
popf
or
sub
std
rcrl
rorl
ret
pop
xor
xchg
xchg
out
movsb
imul
mov
call
mov
pop
call
push
int3
inc
movl
jp
push
and
mov
xchg
xor
sti
ljmp
mov
pop
icebp
cmp
add
xor
mov
or
push
and
jle
loop
pop
mov
xlat
fnstenv
dec
call
int3
xor
leave
mov
aas
call
sarb
mov
sub
sbb
lahf
sbb
cs
inc
in
adc
clc
pop
stc
pop
push
in
or
lcall
and
push
das
imul
and
std
cltd
or
popf
clc
and
test
add
lds
adc
es
adc
in
xor
shrb
or
cmp
mov
jg
stos
rorl
adc
pop
lcall
fs
cmp
dec
mov
arpl
aas
cwtl
sub
push
shl
enter
leave
scas
cmpsb
jb
and
in
pop
inc
neg
int
mov
lret
lret
push
sub
lods
jecxz
lahf
loope
adc
movsl
jb
pop
adc
pop
xor
cmp
pop
lcall
bound
frstor
mov
movb
fwait
addl
mov
outsb
stos
loop
push
arpl
and
pop
out
imul
mov
mov
pop
cmpsl
mov
sub
daa
cmp
xchg
xchg
es
pop
add
stc
sbb
and
std
adc
icebp
jnp
imul
icebp
push
movsl
outsb
stos
inc
out
and
inc
push
test
test
cltd
dec
bnd
movsl
inc
xchg
pop
xor
mov
and
sub
lret
dec
sub
dec
sbb
xchg
in
ret
xlat
push
cmp
push
mov
push
loop
aad
out
loopne
stos
clc
xor
mov
jl
lret
mov
bound
scas
in
cmp
mov
daa
enter
cli
cli
movb
pushf
sub
aam
or
xor
jge
pop
and
inc
fwait
sbb
push
cmp
arpl
sub
inc
push
ja
aas
sbb
xchg
aad
mov
scas
int3
jecxz
cmp
dec
sub
orl
xor
fst
push
jno
mov
movsl
sbbb
cmp
bound
xchg
sub
mov
xchg
sub
mov
idivl
sub
cmp
sbb
mov
xchg
mov
mov
in
clc
mov
adc
and
and
pop
mov
dec
in
rol
fidivl
stc
test
xchg
arpl
in
lods
push
add
adc
stos
fiaddl
cwtl
add
mov
sub
mov
or
test
outsb
inc
sub
es
insl
and
pop
xor
int3
icebp
inc
mov
sub
test
aad
xchg
cmp
xchg
push
cmp
sbb
push
mov
test
push
ljmp
push
pop
sbb
push
adc
and
jne
xchg
inc
enter
xchg
sarl
pop
shl
call
xchg
mov
shll
bound
pop
push
mov
mov
aad
add
loopne
lods
jo
ds
and
jns
icebp
cmpsl
adc
insl
mov
pop
push
sahf
nop
jae
cmp
mov
lret
and
pop
xchg
add
mov
xchg
xor
push
cmp
inc
js
push
xchg
sub
andl
fstpt
and
sbb
pushf
and
xor
arpl
and
int
xor
pop
and
cmp
xor
xchg
mov
adc
jp
mov
mov
or
xchg
add
xchg
xor
scas
dec
mov
pushf
nopl
loop
jbe
push
cwtl
sbb
loop
pop
and
jo
insb
mov
inc
pop
inc
div
movsl
daa
sbbb
inc
cmp
test
sbb
xorl
das
mov
pop
xor
add
clc
mov
lds
fsts
fdiv
mov
lds
xchg
cld
popf
or
push
daa
sub
xor
mov
jbe
sub
iret
xchg
xchg
pop
stos
mov
imul
pop
lcall
sti
iret
jge
xor
orl
and
mov
mov
prefetch
or
and
popa
insl
ljmp
sub
lcall
mov
cmp
stos
push
sbb
shl
lds
jae
sahf
mov
pop
xchg
popa
cmp
xor
jns
jne
adc
js
lret
jge
cmpsb
icebp
inc
in
std
daa
mov
mov
push
xor
jo
mov
lret
mov
xchg
adc
lea
mov
xchg
and
add
ret
bound
pop
cmp
pop
xor
xchg
cmp
adc
test
and
daa
lods
fnstcw
xor
sarb
pop
xor
push
adc
ret
imul
mov
sbb
or
push
dec
inc
mov
mov
mov
ret
xchg
xchg
int3
popf
xchg
in
mov
xor
push
and
mov
fidivl
popf
xchg
popa
js
and
and
hlt
xor
jno
mov
test
testb
add
sti
sbb
cmp
sbb
mulb
and
pop
push
movsl
mov
dec
in
outsb
xor
repnz
leave
cmp
push
and
out
mov
jmp
push
stos
or
mov
mov
sub
xor
das
jne
jb
call
jg
and
cmp
xchg
std
daa
les
call
lcall
sub
jle
xchg
in
adc
mov
mov
gs
addr16
pop
ds
into
mov
push
stos
popf
dec
pushf
cmpsl
sbb
shll
jecxz
js
cmp
push
fadd
cmpsb
add
in
in
push
stc
loop
mov
gs
xchg
pop
lret
mov
movsl
inc
mov
xchg
push
sub
cmp
sarl
inc
push
push
xchg
and
inc
push
inc
loope
push
iret
push
int
cmpsb
adc
popf
push
adc
flds
outsl
repnz
lods
scas
dec
in
add
cmp
loope
push
cltd
or
jp
pop
cmp
xchg
inc
mov
mov
outsl
ret
cmpsl
cmpsb
mov
lea
lds
je
scas
sbb
xor
iret
cmpsl
lret
inc
ss
mov
mov
cmp
cwtl
add
pop
repz
and
in
xor
xor
iret
hlt
push
in
icebp
xchg
subl
sub
jb
sbb
adc
mov
movsb
push
in
aad
add
or
push
fcmovnu
push
in
mov
mov
lcall
stc
leave
or
cmp
scas
fs
pop
adc
jmp
inc
or
cmp
movsb
out
pusha
inc
xlat
pop
subl
add
mov
add
xor
mov
and
ffree
sub
add
inc
pop
xchg
leave
jmp
loop
dec
jno
movsb
scas
push
repz
lods
xchg
mov
fs
or
mov
xor
push
xor
lods
sub
cmp
mov
imul
push
dec
dec
sbb
mov
inc
pusha
pop
add
shll
rorl
push
mov
xchg
dec
pop
fnsave
xlat
lds
jnp
push
cltd
test
hlt
call
lods
leave
popa
push
rclb
adc
jnp
mov
movsl
mov
dec
cmp
mov
mov
fsubs
mov
adc
cmp
dec
sub
rcrb
ljmp
adc
sahf
dec
ja
in
mov
nop
sub
xchg
scas
add
aam
je
mov
adcl
in
xor
mov
loope
mov
xchg
adc
mov
jb
mov
mov
in
stc
repnz
sbb
push
imul
ret
in
daa
add
or
xlat
popf
mov
cmp
cmpsl
xor
shlb
mov
cmp
arpl
ja
enter
andl
or
adc
xchg
dec
stc
ja
sub
stos
mov
push
cli
xor
rcll
pop
and
repz
je
jmp
jmp
push
xchg
and
dec
flds
mov
mov
stos
xchg
and
mov
push
je
jge
jle
xor
push
mov
pop
or
stc
daa
in
push
push
cmp
pop
push
stos
xor
jle
loopne
iret
outsb
xchg
or
loope
mov
mov
stc
call
in
pop
daa
pop
and
call
pop
and
dec
lock
adc
inc
or
les
arpl
xchg
pop
imul
fldl
cmp
add
mov
jne
jmp
dec
sbb
sub
int
mov
mov
rorl
xchg
mov
rcr
dec
lret
out
loopne
fidivs
add
mov
lds
push
and
lcall
loop
lds
flds
sahf
loop
popa
dec
or
lahf
mov
mov
sbb
jo
or
popf
insl
push
and
push
mov
xor
arpl
loopne
inc
ljmp
and
gs
mov
cli
gs
test
pop
popa
xor
xchg
sti
pop
movsb
sbb
cmp
sti
jnp
in
push
cmp
dec
enter
mov
cmp
ss
mov
sbb
fwait
adc
inc
insl
mov
sub
test
sar
loope
mov
ret
and
cmp
lods
imulb
push
das
mov
pusha
loop
fnstcw
add
pop
in
xchg
mov
pushf
stc
imul
daa
mov
outsl
sub
lcall
insl
push
repz
call
mov
dec
loope
in
and
enter
loope
inc
or
push
sbb
and
lret
jae
ds
test
push
fs
shll
dec
inc
ss
pop
xchg
lods
xlat
in
xchg
mov
mov
adc
xor
lret
push
adc
inc
test
cmp
push
out
sbb
fnstenv
fistpll
cmp
push
aaa
sbb
inc
cmp
mov
pusha
mov
dec
jbe
lods
mov
subl
lods
inc
incb
push
xchg
cmp
gs
cmc
sub
imul
xor
int
mov
inc
popa
mov
jg
sub
outsl
in
vmaxps
add
cld
movsb
xchg
add
inc
rolb
int
sub
xchg
inc
or
mov
sbb
adc
mov
pop
inc
dec
push
mov
arpl
out
xor
jmp
jno
pop
scas
cmp
ja
out
es
aaa
mov
leave
repz
inc
xorb
insl
fsubs
push
sbb
ds
rclb
sti
pop
ds
sub
pop
mov
movsl
pop
fists
inc
daa
in
in
imul
outsb
loope
mov
lret
test
inc
cmpb
outsb
subl
sub
cmp
sbb
cmpsl
add
sbb
jl
call
cmp
jb
loope
push
inc
xor
dec
xchg
cwtl
inc
shrl
notb
jb
add
push
mov
sahf
rcrb
movsl
mov
lock
adc
adc
push
xchg
sbb
ret
and
mov
xchg
mov
mov
sub
ljmp
loop
ds
sti
popf
in
cmp
test
xor
shlb
scas
push
ss
or
jno
jae
push
fnstcw
sbb
or
psubq
rorl
sti
std
xchg
push
call
scas
and
xchg
jno
sbb
xchg
dec
jo
push
sub
xchg
sbb
popf
dec
pop
xor
sub
sti
xchg
sahf
mov
stc
mov
sahf
pop
cmpsl
inc
inc
or
inc
xchg
mov
in
loop
push
push
popf
jmp
cwtl
cmpsl
dec
inc
or
lret
mov
pop
loop
and
aaa
xchg
xor
sub
jbe
sub
adc
cmp
lahf
adc
add
adc
pop
in
stos
pop
aam
or
xchg
mov
pop
rcl
shll
cmp
adc
int
pop
enter
and
mov
mov
aam
lcall
push
push
std
stc
lret
aaa
fldcw
clc
jae
cld
sbb
test
xchg
sbb
sub
push
dec
mov
jae
dec
test
mov
les
or
xlat
sub
add
scas
and
xchg
imul
mov
pop
pop
xor
test
sub
inc
jg
cmpsl
cmpsl
sub
daa
sub
xchg
loop
movsl
mov
les
imulb
or
iret
loop
jno
xchg
lods
push
push
sti
pushf
scas
cmp
movsl
dec
dec
push
int3
mov
cmp
fdivrs
roll
and
mov
pop
fsts
lahf
lock
dec
push
in
outsl
jmp
test
ret
sti
sarl
jo
mov
mov
inc
or
repnz
xor
push
cmp
inc
or
cmp
dec
ljmp
jl
jns
popa
repnz
pop
cmpsl
cwtl
jle
cmp
mov
inc
mov
call
es
mov
cwtl
push
jnp
enter
jecxz
xor
pop
xchg
cmp
enter
aaa
loop
loope
lcall
xor
jns
sbb
imul
idivb
pop
xor
aam
hlt
dec
xchg
lret
sbb
popf
xchg
stc
jge
out
rcrl
push
cmpsl
outsb
jg
pushf
mov
fucompp
mov
mov
loop
pop
sahf
rorl
mov
mov
or
lock
orl
lcall
inc
push
daa
ret
sarl
ds
out
in
xchg
mov
push
mov
mov
and
sbb
stos
xchg
movsl
lods
xchg
pop
adc
setge
dec
sbb
add
mov
scas
sti
mov
push
pop
lock
fcom
das
mov
ret
les
jle,pn
add
popa
mov
jnp
push
sub
or
mull
out
cmp
je
popa
sar
and
and
icebp
mov
in
sub
cltd
xor
pusha
xchg
inc
dec
in
and
incb
gs
cwtl
add
das
mov
repnz
push
mov
ss
sub
mov
stc
insl
ljmp
insl
aas
mov
sbb
xor
inc
sti
cmp
pop
push
xorl
iret
inc
mov
mov
aaa
movsl
loopne
cmp
das
lret
xchg
jnp
movsl
jbe
sub
and
bound
inc
push
jge
add
pop
mov
adc
xchg
push
mov
nop
and
pushf
cmp
dec
pop
fistpll
sbb
fnstenv
sub
or
and
mov
sbb
inc
adc
pop
mov
cmpsl
xorl
out
ficoml
imul
ss
xor
scas
repnz
sbb
inc
pop
mov
xor
and
cs
cli
ja
jbe
in
mov
mov
pop
pop
cltd
mov
mul
mov
push
sar
insb
sub
xchg
pxor
mov
cmp
loop
jo
xor
and
arpl
movsb
sub
sbb
sti
cmp
das
xchg
stos
fs
adc
call
push
dec
mov
je
mov
push
sbb
inc
shrb
mov
shl
dec
push
call
ret
xchg
mov
mov
jb
cwtl
sbb
fiadds
mov
add
daa
popa
nop
int
jge
iret
pop
loope
mov
push
inc
pop
testl
scas
mov
and
mov
in
and
push
mov
and
jne
fsts
or
pop
pop
bound
bound
stc
sbb
mov
mull
cs
insb
adc
call
shlb
pop
cmpl
scas
mov
mov
sbb
stc
mov
movsl
mov
aad
mov
in
cmp
out
jecxz
xchg
xchg
outsl
mov
push
inc
xchg
jnp
push
fidivs
inc
push
push
pop
stc
hlt
push
cmp
mov
mov
js
in
and
mov
addr16
subl
sub
data16
xor
mov
das
enter
xor
mov
pop
outsl
inc
adc
mov
in
sbb
push
inc
out
mov
and
and
mov
ret
xor
adcb
rcrl
jmp
xchg
push
lds
outsl
xor
or
jne
pop
inc
out
int3
sahf
testl
sti
and
repz
add
sbb
out
lret
into
sub
jno
mov
pop
arpl
test
pop
jge
inc
imul
shll
mov
sbb
and
insl
pop
pop
test
rorb
xor
mov
in
inc
adc
shl
xchg
sti
xor
out
mov
mov
les
sub
in
lods
push
cmp
cmc
and
clc
pop
lret
pop
or
mov
out
cmp
adc
in
cmp
movl
gs
jne
int
and
das
jo
mov
dec
dec
in
rcrb
or
mov
adc
std
sub
mov
out
xor
adc
adc
movl
mov
inc
push
mov
pop
xchg
punpckhdq
sub
xor
cmp
data16
test
cld
sub
and
and
lea
push
lcall
pop
sahf
adc
shrl
mov
cmpsb
fdivl
scas
xor
cld
loope
add
fisubs
or
dec
sbb
lcall
pushf
imul
call
cld
outsl
mov
bound
push
es
sub
popa
and
adc
daa
mov
cltd
xor
in
jge
fwait
push
adc
inc
sub
and
sub
pop
in
in
jb
and
imulb
push
adc
mov
push
dec
fistpl
outsb
test
loopne
jecxz
pushf
jno
ljmp
inc
insl
push
es
aad
divb
jb
lcall
mov
jb
sbb
add
pushf
mov
sub
dec
stos
stc
jnp
shll
mov
inc
call
pop
add
sbb
pop
pop
add
leave
in
mov
mov
jecxz
push
pop
call
add
sbb
mov
lods
not
xchg
cs
in
dec
xor
loop
sub
sbb
sub
and
ljmp
pop
test
adc
cmpsl
lds
repz
inc
and
sub
ficompl
jp
pop
ds
pusha
in
sub
jb
les
mov
cltd
or
xor
adc
mov
sti
push
outsb
loopne
dec
mov
jno
mov
and
adc
xor
fstl
lea
sub
fistl
outsl
aad
and
push
outsl
jo
jae
and
aad
sbb
fsts
test
xchg
or
test
push
pushf
sub
push
imul
mov
fs
pusha
push
inc
cmp
sub
loop
pop
fsubs
xchg
lds
js
in
sbb
aam
and
xchg
and
mov
nop
cmc
cmp
add
pop
cmc
cmpsl
ret
repnz
xchg
add
outsl
mov
jns
sub
mov
mov
sub
push
push
inc
mov
or
test
xchg
pop
adc
loop
mov
adc
imul
cmp
loop
xor
and
cmpl
loop
mov
lods
in
pop
ljmp
xchg
leave
lcall
mov
pop
and
icebp
pop
loop
inc
push
or
jmp
and
test
push
pop
add
mov
mov
das
xchg
sbb
xchg
xor
mov
aaa
xchg
pop
lcall
adc
pop
and
fs
mov
out
outsb
inc
cltd
pop
leave
cmp
int
mov
mov
or
adc
int3
jnp
jnp
xor
xchg
dec
xor
aaa
test
ds
mov
stc
cmc
in
neg
mov
push
hlt
mov
pop
lret
call
xor
enter
jns
outsl
cmp
cmp
incb
jns
pusha
ss
sti
xchg
jmp
pop
xor
popa
cwtl
movsl
cltd
and
xchg
pop
push
lods
movsb
or
out
sub
ficoms
jno
add
aaa
addr16
cmp
in
mov
mov
jp
rcrl
popf
imul
mov
xor
sbb
and
and
cwtl
dec
xchg
aas
sbb
cmp
inc
sbb
cmp
sahf
iret
sbbb
mov
jbe
dec
jmp
and
push
sti
ret
mov
cmp
jno
mov
aam
add
xor
add
push
call
xor
xchg
xlat
movsl
cmp
xchg
cwtl
and
push
xchg
jmp
ret
mov
int
mov
arpl
xor
or
inc
lahf
insl
imul
mov
ja
mov
inc
xor
push
lods
popa
pop
jno
cltd
ljmp
mov
pushf
add
sub
sahf
cld
xor
xor
jb
fstpl
pushf
test
scas
pop
mov
add
mov
adc
in
loope
popa
loope
leave
xor
jne
cltd
lret
adc
aad
xor
pop
jge
scas
lods
lock
push
loopne
and
lea
rol
lret
jmp
lds
imul
jne
adc
lret
xor
xor
or
mov
adc
cmp
stc
sub
add
xor
mov
cwtl
push
jo
or
in
mov
mov
xor
and
icebp
pop
pop
imul
sub
cmp
stc
cmpsb
bound
mov
xor
xor
xorl
std
and
xor
arpl
dec
lahf
cmp
dec
lahf
inc
jbe
dec
popf
dec
out
aaa
daa
dec
mov
fwait
sub
adc
loop
jg
mov
sub
or
inc
roll
adc
mov
mov
pop
add
xchg
push
mov
aad
pop
push
stc
jns
ret
push
hlt
or
cmc
xchg
push
sahf
in
test
scas
stc
outsb
push
shll
or
enter
scas
push
xor
xor
push
pop
fsts
loop
pop
lcall
inc
or
cmp
hlt
popa
push
or
dec
pop
or
xchg
pop
adc
lret
inc
mov
scas
or
lahf
inc
lcall
sub
push
pop
and
and
and
repnz
xor
cmpsb
xchg
xor
orl
rolb
push
dec
punpckhbw
fmul
sar
das
int
sub
test
dec
xor
test
nop
sub
loope
ret
cmp
and
inc
pop
mov
push
gs
sub
adc
xor
xor
mov
and
icebp
sbb
lcall
push
stos
pusha
add
sub
push
aas
and
sahf
xchg
movsl
and
add
mov
xchg
xchg
cmp
or
call
aad
enter
fmull
addr16
jecxz
imul
mov
mov
dec
cld
popa
cmpb
cmpsl
adc
jns
mov
ffree
int
push
out
jnp
arpl
decb
pop
ret
adc
orl
mov
test
cmp
push
and
in
pushf
or
adc
add
inc
xchg
cld
loopne
arpl
push
adc
xchg
push
pop
icebp
mov
cmp
notb
movsl
fnstcw
subl
cmpsb
push
mov
aam
or
sub
fdivp
mov
adc
int3
xor
test
cltd
pop
mov
and
das
iret
sbb
sub
addr16
ret
divb
xchg
xchg
jl
push
sbb
sub
and
inc
std
mov
jno
xchg
pop
xchg
mov
inc
aaa
iret
xchg
inc
and
xchg
push
sbb
std
push
lock
icebp
in
sub
dec
movsl
sbb
sbb
adc
faddp
mov
rcrl
jno
adc
adc
xchg
inc
adc
xor
fisubl
xchg
into
push
jne
sbb
dec
adc
push
jg
cwtl
adc
adc
xor
adcl
push
sbb
sbb
jb
dec
add
mov
leave
jne
popa
fistl
pop
xchg
mov
jno
cmp
xor
test
add
sbb
inc
popa
stos
je
shrl
rorl
cmpsl
jae
xchg
xchg
sub
lahf
xchg
cltd
scas
adc
sbb
inc
je
jno
xchg
lret
or
scas
pop
sti
enter
mov
jnp
and
popa
fs
sub
and
ret
leave
xor
cs
adc
shlb
sub
adc
xor
movl
and
add
sbb
fildl
in
stos
jnp
push
dec
or
shrl
pop
add
mov
sti
and
dec
cmp
or
push
nop
add
xor
test
aad
push
ss
lock
les
pushf
push
jp
scas
movsl
jge
je
jmp
mov
sbb
xor
insl
repnz
sub
and
testb
mov
inc
xlat
cli
and
inc
mov
pop
mov
sub
or
jl
outsl
mov
pop
sahf
pushf
inc
pop
leave
add
nop
xchg
pop
addl
loope
push
movsb
pop
and
cltd
inc
or
iret
and
xchg
and
mov
add
pop
dec
lret
pop
adc
adc
les
or
fucomp
pop
data16
xchg
dec
inc
lods
popf
mov
ljmp
int3
mov
das
jecxz
in
sub
add
leave
andb
mov
push
je
test
pop
or
pop
inc
xor
inc
mov
loop
maxps
fs
dec
dec
xchg
adc
and
ror
cmp
jne
imul
xchg
stc
out
and
xor
jo
xchg
xor
mov
or
push
adc
movsb
popa
in
jge
test
out
or
mov
lret
sbb
loope
incl
dec
jmp
out
loop
inc
xor
addr16
test
push
xchg
cmp
cmpsl
add
mov
int
and
imul
ljmp
mov
pop
aam
mov
jo
lret
xor
add
shr
ss
or
xchg
mov
sbb
cmp
call
ret
cmp
loop
mov
scas
pop
inc
adc
testb
xor
push
xchg
add
sbb
shr
xor
sti
inc
inc
dec
dec
movsb
xlat
mov
add
imul
push
push
inc
aas
stc
in
out
cmpsl
add
pop
sahf
xor
inc
sbb
xor
andl
xchg
and
push
pop
jmp
inc
push
cmp
inc
jo
adc
popf
test
inc
inc
iret
fidivs
loope
xchg
mov
push
leave
cmp
inc
and
push
xor
outsl
addr16
dec
test
clc
dec
mov
movsb
movsl
push
cwtl
jmp
sub
or
das
cs
sub
lcall
mov
pop
inc
out
invd
mov
xor
and
add
mov
mov
jmp
jp
dec
cwtl
jnp
jne
addr16
xor
sbb
or
movsl
insl
aaa
push
ret
cmc
inc
mov
sbb
mov
outsb
jbe
mov
inc
xor
push
ds
push
pop
inc
cmp
aad
popa
mov
dec
mov
out
shrl
das
outsb
insb
loopne
imul
cmp
cltd
aaa
jl
cs
mov
xchg
mov
pop
and
mov
in
arpl
pop
aaa
jo
clc
inc
jne
xchg
add
add
addr16
and
mov
or
cli
loop
movsb
stos
int3
mov
imul
fucom
push
ror
loop
or
sub
divps
inc
pop
pop
xor
or
nop
pop
fwait
push
add
icebp
pop
pusha
dec
subl
fxch
pop
daa
test
xorl
cmp
test
adc
adcl
push
xor
push
xor
add
outsb
jg
pushl
rorl
pusha
inc
outsl
xchg
faddp
sbb
xchg
mov
es
mov
sub
fwait
int
pop
fwait
sub
cld
gs
add
sbb
lods
add
mov
lret
sub
mov
jmp
inc
iret
sub
mov
push
aas
call
rolb
imul
xor
outsb
mov
add
add
mov
ss
mov
pop
adc
shrb
cmp
xor
stc
xchg
cmpb
call
push
into
adc
adc
inc
lret
cwtl
add
and
call
xor
mov
call
sub
lock
adc
gs
sub
xor
jne
sub
xchg
cmpsl
mov
add
xchg
idiv
sbbl
popa
or
fwait
or
sbbl
pop
sbb
add
cld
inc
inc
dec
push
sub
sub
push
or
jbe
ss
dec
sbb
xchg
cltd
inc
sbb
push
scas
inc
mov
das
movsl
sti
clc
call
ret
and
lret
pop
add
lret
lahf
xor
aaa
mov
ret
insl
leave
or
movsl
jp
jae
in
xchg
add
dec
aaa
mov
jae
sti
add
cmp
mov
fstpt
cmp
dec
ficoml
mov
xchg
dec
jmp
pop
xchg
imul
test
fisubs
imul
jl
std
leave
mov
cwtl
jns
nop
mov
inc
mov
sub
dec
dec
imul
mov
pushf
popf
dec
ja
and
xor
les
sti
lret
xor
xor
icebp
cmp
and
add
mov
mov
jl
or
iret
xchg
daa
sbb
pop
cmp
flds
pop
sub
or
cmpsl
cld
jnp
and
lidtl
or
stos
lock
loop
add
sahf
mov
ret
mov
movsb
movb
sub
push
adc
dec
adc
ljmp
movsl
fsub
pop
or
data16
adc
mov
adc
mov
or
mov
xor
popf
fistl
jns
call
adc
pop
fucom
jnp
add
xor
add
sub
xchg
inc
clc
push
arpl
and
lcall
add
clc
xchg
pop
loop
add
je
sbb
and
lret
divb
js
mov
mov
ss
mov
mov
cmp
push
aad
mov
movzwl
inc
leave
loop
stos
fiaddl
rcll
xor
fbstp
or
push
shll
out
lret
test
pusha
mov
dec
pop
aas
ljmp
int
rdtsc
or
in
aaa
cmp
cmpsl
push
and
fndisi(8087
das
lret
cwtl
nop
add
inc
sti
inc
or
pop
pushf
repnz
add
and
inc
lods
mov
lods
sti
repnz
pushf
xorb
sub
rorb
sub
pusha
std
add
push
stc
jae
sbb
mov
imul
mov
jae
cltd
ss
xchg
in
mov
push
jge
sbb
sub
aaa
cwtl
in
imul
add
push
iret
stc
adc
popa
repnz
repnz
ss
mov
imul
cwtl
movsl
pop
decb
xor
fwait
repnz
push
mov
and
popf
mov
cmp
inc
ds
shll
nop
inc
gs
ja
es
xchg
mov
push
mov
cmp
lret
adc
ljmp
sti
sbb
xor
or
sub
dec
fists
adc
mov
xor
lret
cmp
add
sbb
fldcw
std
cmc
mov
lcall
test
popa
idiv
arpl
call
insl
push
mov
loop
cmp
lret
pop
push
in
xchg
jnp
dec
loop
insb
xchg
xor
cmp
hlt
lds
or
push
mov
cltd
jmp
loop
cmpsl
and
xchg
inc
push
push
daa
out
clc
es
dec
rcr
pop
sub
arpl
mov
dec
insb
add
and
mov
lock
or
scas
aam
and
inc
mov
pop
movhps
push
or
ja
mov
sub
fstps
push
movsb
call
add
push
loopne
jae
push
pop
rclb
cmp
xor
and
rsm
mov
fmul
mov
xchg
iret
ss
lret
repz
or
and
fdivrl
jns
or
iret
xchg
mov
subl
gs
rcrb
fstps
dec
dec
iret
ss
push
pop
cltd
and
or
cmp
adc
or
or
pop
popf
sbb
frstor
ds
mov
push
out
adc
dec
inc
sbb
int
xchg
sub
add
daa
sub
popa
sbb
push
push
ret
mov
shll
mov
cli
add
xchg
shl
mov
test
dec
or
mov
popf
aad
mov
mov
nop
jne
jae
mov
mov
jns
mov
pop
adc
stos
adc
sub
sub
push
mov
aas
mov
push
xor
imul
adc
lds
imul
ds
xor
mov
jae
iret
jne
fbstp
sbb
cltd
mov
sub
test
push
xor
xchg
or
testb
cltd
xchg
data16
mov
nop
cltd
lock
and
int3
pop
pop
dec
outsb
push
cmp
insl
sahf
jno
inc
cmpsl
jns
and
inc
andl
mov
jne
test
xchg
enter
cmp
lods
out
iret
push
shlb
dec
cmp
roll
mov
pop
mov
loopne
xchg
outsl
loop
push
lcall
enter
and
dec
sbb
fsts
push
out
daa
enter
or
pop
push
cmp
dec
insl
repnz
dec
js
aas
xchg
mov
movsb
dec
imul
pop
or
fimull
lahf
cmpl
cmp
mov
mov
sbb
push
inc
inc
mov
xchg
push
or
xchg
lahf
test
fidivrs
jl
lds
sub
lret
test
mov
scas
inc
or
jge
fiaddl
stc
lret
mov
pop
out
iret
in
int3
cmp
aam
push
popa
mov
rcl
jb
pushf
mov
sub
sbb
icebp
sbb
sub
dec
xchg
in
loope
push
sub
dec
daa
les
or
push
mov
cmpsl
sbb
popf
lcall
and
ja
add
pusha
dec
stc
mov
daa
mov
dec
cltd
sub
sub
push
icebp
add
pop
jg
insb
jge
test
sub
and
xor
mov
arpl
test
cmp
fdivrl
jo
stc
push
pop
test
or
mov
imul
cs
fnstcw
xchg
cld
scas
pop
jnp
adc
imul
and
mov
loopne
repz
mov
push
scas
mov
mov
stc
xchg
jecxz
mov
fnsave
test
add
scas
sub
fistpl
mov
pop
sahf
lret
lods
mov
xchg
shrl
mov
scas
fldcw
stos
mov
pop
xor
leave
mov
in
in
or
data16
xor
inc
pop
arpl
sbb
in
add
dec
sbb
add
imul
dec
sub
out
mov
ficoml
push
outsl
push
sbb
pop
shrb
repz
xor
imul
mov
mov
inc
adc
cmp
and
rolb
aas
push
cmpsl
addr16
jge
fldpi
jae
add
cmc
aam
adc
sbb
sarl
std
mov
jbe
lock
sub
cltd
ds
jg
add
xchg
add
mov
xlat
jne
xchg
pop
mov
mov
ja
loop
out
scas
jae
scas
popa
mov
push
test
jle
sbb
pop
lods
cmc
or
sbb
ror
test
cwtl
sbb
add
into
pop
pop
xor
push
sbb
xchg
xchg
dec
aam
lret
dec
pop
scas
mov
add
insl
cmp
loop
ljmp
dec
mov
xchg
or
imulb
aad
dec
shrb
or
aaa
pop
inc
pusha
push
stos
sub
call
and
outsl
xchg
out
mov
xchg
mov
cmp
rcl
out
call
pusha
mov
ljmp
mov
lret
aas
pop
xchg
mov
dec
or
push
in
mov
outsb
sub
ljmp
sbb
in
sbb
adc
jno
sub
stos
scas
sbb
add
fs
adc
add
push
xor
pop
push
lds
repnz
sbb
test
outsb
cmpsl
iret
out
mov
inc
or
fstps
xor
in
lret
and
sub
std
mov
xchg
loope
mov
xchg
xor
jl
and
mov
sbb
dec
sub
xor
sbb
or
sub
cld
stc
jge
push
insl
scas
push
addr16
and
dec
dec
add
pushf
sbb
or
in
arpl
pop
push
mov
mov
daa
mov
xor
in
pop
dec
lods
nop
ret
sbb
imul
mov
sahf
aaa
sub
and
mov
addb
mov
mov
in
out
adc
rcll
arpl
xchg
lahf
das
inc
int
sbb
and
dec
mov
add
jo
push
hlt
push
das
xor
push
push
xchg
sub
and
loop
inc
cmp
mov
int3
xchg
jp
lret
mov
xchg
or
add
lea
mov
aaa
prefetch
movsl
nop
mov
push
mov
mov
xchg
pop
loop
and
xchg
cmp
push
iret
pop
leave
in
out
mov
aam
adc
lcall
je
adc
cmp
cmp
das
sub
cmp
pop
adc
xor
pop
xchg
sti
int
ljmp
dec
and
push
popa
or
test
sbb
mov
pop
mov
or
inc
add
cltd
sub
mov
sbb
jnp
shlb
inc
mov
icebp
mov
sti
insl
and
les
sub
pop
sbbl
add
jg
test
shrl
in
divl
testb
sub
mov
aaa
pop
jbe
xor
pop
sti
psubb
cmpsl
sub
add
inc
xor
push
jle
jno
and
in
add
loopne
out
jecxz
insl
and
cmp
adc
jae
fsubrl
sub
mov
dec
iret
arpl
repz
jb
dec
push
or
sub
add
adc
gs
pop
xor
push
out
adc
out
push
push
adc
outsb
mov
inc
cs
adcl
push
xchg
inc
mov
ja
and
mov
loop
push
lods
pop
xchg
lret
or
push
mov
bound
dec
lds
and
mov
into
popa
push
adc
sar
mov
and
push
dec
mov
fcomps
out
subl
lods
pop
inc
or
scas
lcall
push
aas
mov
ss
lcall
cltd
push
adc
dec
add
and
mov
and
sti
and
xor
negl
adc
ljmp
cmp
sahf
out
stos
inc
in
aad
xchg
sbb
das
pop
roll
push
std
pop
out
int
xor
negl
jp
roll
and
outsb
lods
ds
or
add
gs
mov
ret
mov
sub
adc
adc
sub
and
cmp
mov
cmc
aaa
sti
movsl
lock
add
push
ljmp
mov
sub
adc
ret
mov
mov
cmp
adc
clc
or
jle
xchg
fcmovb
xor
sub
jecxz
and
arpl
jle
pop
push
adc
or
popf
or
or
or
pop
xchg
push
xchg
rcll
and
mov
cld
stos
shlb
push
sti
push
scas
or
and
loopne
sbb
jno
xor
icebp
test
mov
jbe
loope
xor
call
mov
mov
push
mov
ja
sub
jp
sarl
pop
ljmp
rcrl
sub
mov
fadds
push
sub
cli
cmc
xchg
dec
adc
sbb
mov
stc
stos
cmc
xor
xor
ss
sub
dec
push
push
adc
xlat
xor
xchg
ret
imul
cmp
push
and
pop
cmp
cmp
push
call
push
cmp
add
push
pop
hlt
pop
cmc
inc
and
adc
in
mov
xchg
push
aaa
sarl
notb
shrb
push
fisubrl
cmp
and
or
sbb
mov
inc
movsl
movsl
andl
sti
xchg
sbb
sahf
addb
sti
out
or
arpl
push
sbb
cmp
call
cmp
pop
das
mov
aaa
pop
pop
pop
pop
dec
sub
loop
enter
out
scas
aaa
jbe
and
mov
pop
popf
leave
cmp
negb
test
mov
xchg
jmp
lcall
dec
mov
jg
sbbb
inc
addb
pop
mov
cmpsl
sub
sahf
repnz
inc
jne
lret
leave
sbb
cmp
pushf
das
mov
jnp
popa
in
push
jno
mov
icebp
add
scas
das
sbb
cmpb
cmp
sar
push
test
btl
adc
loope
push
packuswb
sub
cmp
mov
xchg
adc
pop
jle
mov
dec
sub
adc
lea
ja
enter
and
pop
pop
push
mov
pop
dec
mov
call
inc
incl
mov
adc
pop
std
dec
fnsave
dec
mov
out
and
inc
call
faddl
and
outsb
shl
imull
cmp
cwtl
xchg
loop
hlt
add
push
pusha
or
or
test
add
push
add
movsl
mov
stc
sub
push
inc
lcall
sbb
sbb
cwtl
xor
xchg
jns
outsb
pop
je
subl
iret
push
sbb
jns
stc
push
jmp
stc
mov
mov
ss
jae
das
push
rolb
push
push
cmp
sub
add
jns
fildll
lea
ret
and
lret
repz
pop
arpl
mov
test
in
mov
mov
mov
cmc
pop
mov
xor
dec
pushf
adcb
loop
xor
imul
cmp
clc
loop
xchg
in
es
fisttpll
push
mov
dec
pop
pushf
or
icebp
and
mov
xchg
loop
sub
push
xchg
mov
lret
inc
add
add
repnz
inc
loop
push
add
adc
dec
fidivrl
sahf
mov
pop
addr16
mov
cltd
xchg
cmp
or
test
lods
das
add
daa
dec
repz
jge
in
gs
stos
clc
sbb
sbb
arpl
sarb
add
push
mov
aaa
sub
ret
ljmp
sbb
scas
mov
mov
mov
popa
push
loope
insb
xchg
stc
dec
and
rcrl
fstps
cmp
test
xor
cltd
ja
xchg
xor
jge
and
push
cmp
xchg
push
and
movsl
inc
test
inc
cli
sbb
sti
and
nop
fs
hlt
adc
mov
xor
ret
hlt
call
and
mov
pop
mov
jns
and
test
shll
icebp
aaa
inc
mov
or
repnz
jmp
lods
pop
lret
ret
fisubs
ret
mov
mov
test
lock
push
lds
mov
gs
lret
lods
lret
cltd
jno
jb
aad
mov
pop
mov
dec
pop
jmp
leave
pop
mov
ja
or
mov
sbb
std
push
fldl
inc
cmpsl
sub
adc
bound
sti
sarl
sub
mov
push
les
xor
das
sbb
xor
aas
test
sbbl
xor
std
cmpsl
nop
inc
lods
and
lret
loopne
ja
aaa
dec
lea
bound
sti
repz
scas
mov
lahf
pop
xlat
push
int3
jo
xor
dec
xor
dec
add
aaa
aas
xchg
adc
pop
and
cmp
mov
add
sub
sbb
jmp
adc
lods
shll
xchg
lock
mov
dec
add
pushf
leave
clc
loop
icebp
fdivrs
gs
sarl
call
push
or
dec
aas
sub
push
xor
mov
scas
pop
mov
sub
into
dec
xchg
repnz
and
and
sbb
sbb
jecxz
popf
cmpsl
nop
push
push
lods
dec
sub
inc
adc
xor
xor
adc
push
int
adc
sahf
sbb
jno
ret
sbb
loop
test
lea
mov
dec
lret
xor
cmp
outsl
sub
inc
inc
shlb
jp
xchg
in
adc
leave
sub
push
das
and
push
lahf
xor
pop
adc
addr16
popa
cmpsb
es
ret
add
xor
sub
insb
cld
lret
lods
int3
or
out
data16
mov
cmp
xchg
pop
xchg
call
adc
and
cmp
and
mov
cmp
lods
out
and
lock
mov
or
das
stos
out
xchg
gs
jae
dec
mov
sti
and
stc
pushf
xchg
lahf
es
mov
adc
mov
cmc
out
pop
xor
mov
sbb
shlb
popa
fisttps
mov
xorb
outsb
mov
hlt
icebp
and
jb
nop
jge
xor
and
addr16
lahf
out
repnz
mov
pop
test
mov
xor
in
add
xchg
or
pop
mov
cmp
sahf
and
xchg
stc
sti
lahf
aaa
sub
lret
rcll
imul
fbld
push
aaa
cmc
and
mov
jo
aad
pop
pop
cltd
mull
out
xchg
xor
jne
popf
add
jae
lods
cmc
push
mov
in
sub
fwait
adc
js
jecxz
rorb
es
loop
jecxz
test
sbb
sub
xchg
pop
inc
loopne
stc
fldenv
push
test
scas
xchg
mov
mov
mov
cmp
test
aaa
out
inc
xchg
fwait
sub
andb
and
fwait
mov
daa
jo
scas
and
or
xor
push
xor
ja
and
xlat
pusha
out
test
inc
push
js
iret
xor
sub
and
sbb
clc
mov
cmp
inc
fstpl
sti
popf
lea
fstl
jle
sbb
push
sbb
icebp
enter
test
into
das
or
cmpsb
push
push
das
and
setnp
or
sti
mov
mov
loop
mov
xchg
jbe
or
xchg
popa
pusha
gs
paddsb
shlb
mov
mov
ss
sarb
sahf
sbb
adc
out
dec
pop
pop
stos
std
stos
push
bound
pop
mov
mov
pop
pop
divb
scas
ja
sti
sbb
popf
leave
test
roll
mov
sub
cli
daa
jle
sbb
lods
jmp
cwtl
sbb
arpl
iret
cmp
jae
mov
js
ss
adc
loop
scas
pextrw
cwtl
adc
addb
test
icebp
jecxz
xor
popa
fisttpl
mov
add
mov
lret
fbstp
loop
sbb
adc
adc
loop
fldenv
sahf
dec
jmp
lret
adc
enter
loop
xchg
out
leave
pop
shll
cs
xor
jae
in
cmp
test
jp
imul
fstpt
cmp
sub
scas
inc
sbb
xchg
xchg
aam
mov
inc
adc
pop
xor
imul
fstps
mov
add
mov
test
push
nop
adc
iret
mov
test
stc
rcrl
int
arpl
mov
and
loopne
rclb
stc
int3
fstps
adc
gs
lds
fsincos
jmp
cmp
bound
mov
cmp
cmp
sub
jae
bound
xor
xchg
cmp
fwait
dec
roll
sbb
push
jae
and
sub
int
aaa
sbb
xor
subl
sub
adc
mov
jb
or
jnp
jo
cli
jns
xchg
dec
mov
mov
or
cmpsl
mov
xchg
jecxz
fcoml
jno
xchg
sub
xor
cmpsb
inc
int3
int3
pop
orb
cmp
and
push
popa
sbb
sbb
out
sub
leave
sub
out
shll
jnp
sub
cmpsl
adc
out
pushf
mov
dec
or
mov
adc
repnz
sub
xor
sbb
cmp
xchg
xor
xchg
xorb
push
push
sbb
testl
insb
ret
mov
loop
ss
push
jge
mov
pop
inc
cmp
mov
gs
or
push
sub
sub
mov
mov
cmp
xor
dec
fwait
xor
aaa
lret
cmp
adc
out
mov
sub
mov
ja
rolb
add
das
push
and
cltd
sbb
adc
cmc
out
sbb
imull
adc
mov
inc
es
mov
aam
mov
loope
xchg
push
loop
xor
popa
lds
sub
and
movl
sub
adc
inc
sub
xor
ljmp
and
and
xchg
push
mov
mov
pop
xchg
ds
cli
mov
jmp
cwtl
sub
xchg
xchg
mov
dec
insb
ds
pop
xchg
cmpsb
xchg
add
xchg
out
int3
cmp
jbe
xor
xchg
ja
addr16
add
popa
xchg
jns
shll
xchg
nop
mov
fldcw
leave
push
push
fucomi
jle
jcxz
mov
loop
cwtl
and
and
add
adc
inc
xchg
lret
pop
sub
jno
sbb
adc
inc
leave
adc
inc
addr16
lds
pop
mov
ljmp
cmp
lret
cmp
es
fdiv
push
lods
inc
inc
and
add
nop
mov
sti
sti
sbb
push
mov
dec
in
test
xor
sub
sbb
cmp
ds
fldenv
sahf
or
mov
lahf
jmp
pusha
sti
pop
and
cwtl
in
in
into
xchg
and
imul
cmpsl
jo
stc
mov
jle
out
and
dec
xchg
pop
mov
xchg
inc
pop
sti
xor
jmp
dec
cmc
aad
jns
push
jb
adc
cmc
inc
dec
sub
mov
sub
mov
or
xchg
mov
mov
or
daa
inc
jae
cwtl
shrl
push
push
ljmp
lods
xlat
faddp
rcll
sahf
call
mov
cmp
xchg
jne
sub
movsb
hlt
sbb
sahf
shll
int
or
cmp
sbb
cmc
jp
iret
popa
out
cwtl
cwtl
nop
dec
jb
adc
mov
sub
mov
ds
pop
fidivs
stos
xchg
sbb
push
xor
add
push
dec
aad
stc
pop
cmpsl
test
or
in
sub
out
imul
sub
cmpsl
sbb
mov
xchg
test
xchg
andl
jno
pop
cmp
fwait
adcb
mov
iret
lcall
mov
or
iret
sub
roll
push
dec
dec
lcall
xchg
xor
aam
xor
cmp
or
inc
enter
jbe
mov
fldcw
inc
into
sub
jge
push
sub
arpl
stos
jb
inc
rcrb
xchg
push
dec
adc
pop
ds
mov
lret
lahf
stc
push
call
loope
int3
xor
cmp
push
fstpt
pop
lahf
sub
and
call
and
sub
and
sti
jge
outsb
ljmp
jae
adc
sti
sbb
sbb
mov
sahf
leave
xor
out
mov
in
std
mov
sbb
sbb
sbb
add
lods
aam
add
addr16
pop
loope
adc
sti
iret
shlb
jno
and
repnz
dec
mov
inc
ret
or
xor
pop
mov
aas
outsb
sbb
cltd
fisubs
sub
and
and
jmp
jbe
inc
mov
testl
sbb
cwtl
dec
cmp
mov
rol
lcall
xchg
loope
mov
sub
outsb
xor
push
mov
das
lods
sbb
jne
push
loope
es
push
repnz
add
inc
aam
cmp
push
leave
sub
loope
out
testl
movsb
mov
lods
pop
inc
je
add
add
ja
and
nop
sbb
sbb
std
jno
in
or
inc
dec
loopew
aam
cmp
cmp
mov
jno
cmc
push
mov
adc
outsl
sti
push
mov
out
push
call
push
cs
jp
xor
sbb
lea
jg
hlt
ret
cltd
lods
aaa
aas
push
fwait
sti
pop
out
pop
adc
jge
adc
popf
in
and
and
outsb
cld
pop
jbe
mov
add
iret
pop
xor
aas
in
dec
aam
out
sbb
fsubl
out
mov
rclb
adc
pop
daa
repnz
cli
adc
sti
pushf
movsb
cmp
xchg
lds
int
rep
shlb
scas
fwait
mov
lret
pop
pop
mov
mov
popa
and
test
push
imul
inc
cmpl
and
pop
ret
inc
sbb
testl
addr16
icebp
xchg
in
mov
and
jle
aam
sub
arpl
jns
lea
stc
jne
xor
or
out
sbb
sub
pop
nop
rcrl
sub
adcb
jae
mov
loop
mov
xchg
xchg
mov
push
sahf
or
adcb
negl
push
out
mov
in
push
jp
xchg
mov
jb
inc
dec
or
pop
test
adc
and
sbb
xchg
sub
call
shll
cmc
ljmp
imul
xchg
jl
add
pushf
inc
stc
sbb
clc
and
adc
mov
sub
push
in
pop
test
xor
nop
gs
mov
add
insb
push
jnp
fstpl
dec
xlat
mov
xchg
cmp
cltd
xchg
sbb
loope
mov
mov
aas
arpl
cmc
jge
out
mov
push
jb
ljmp
pop
in
popf
bound
push
pop
sti
insl
lcall
xchg
jecxz
in
jmp
mov
push
rcrl
cmpsl
sub
pop
imul
loope
jmp
push
ret
push
mov
or
les
pop
push
inc
pop
clc
lea
adc
je
addr16
pusha
dec
mov
mov
cmp
adc
rcl
notl
out
mov
mov
fisubl
push
cltd
insb
call
mov
cmp
jl
or
sub
mov
pop
pop
mov
mov
and
jae
xchg
loopne
jnp
and
mov
xchg
mov
stos
sub
sbbb
xchg
fdivrs
daa
and
adc
jbe
mov
lret
sub
into
pop
sbb
xor
sti
sub
fadds
std
jg
xor
pop
sbb
jecxz
outsl
lret
ds
popa
sub
andb
mov
leave
arpl
mov
mov
mov
es
in
xchg
xor
sbb
xchg
insl
inc
das
iret
sbb
aaa
test
loope
sbb
and
mov
jae
in
sti
imul
in
or
sub
dec
or
cmp
push
imul
lcall
rcll
sub
out
pushw
shll
sub
fwait
inc
arpl
inc
mov
shlb
xchg
xorl
scas
stc
or
adc
out
sub
mov
stos
lea
or
insb
icebp
and
outsb
jne
sbb
and
and
lret
popa
sbbl
xor
lods
adc
test
xchg
mov
mov
pop
xor
add
sub
iret
xor
mov
scas
js
sbb
fsincos
inc
mov
and
xor
push
push
xor
cmc
test
shrb
add
cmc
mov
xor
fld
xor
mov
adc
sbb
inc
sub
and
xor
mov
adc
push
jnp
push
sub
mov
mov
or
aam
in
mov
test
and
push
mov
jbe
mov
popf
xchg
insb
pop
fldl
jl
sub
loopne
into
sub
mov
pop
mov
negl
repnz
orb
adc
aam
mov
sub
sbb
out
xchg
jmp
imull
dec
xorb
xor
add
pop
push
mov
pop
pop
cwtl
push
add
sbb
subb
xor
xchg
add
mov
xchg
jge
inc
subl
jae
xor
out
inc
scas
and
mov
dec
pop
repnz
push
pushf
mov
repnz
mov
cmpsl
sub
les
adc
sbb
pop
jmp
adcl
sub
pusha
mov
call
pushf
xchg
xchg
mov
roll
mov
xchg
xchg
jl
inc
xchg
and
xchg
mov
dec
inc
arpl
gs
pop
mov
push
lds
xor
and
jmp
push
mov
cld
fld
sub
lods
ret
adc
sub
push
jp
adc
mov
imul
and
mov
jne
scas
pop
pop
pop
push
inc
xchg
xor
ljmp
into
push
cld
sub
or
jno
sub
pop
mov
loop
lods
mov
js
int
popa
js
stos
mov
lds
sub
repnz
imul
loop
sbb
test
sti
fcomps
pop
std
stc
dec
int
bsr
je
and
outsb
pop
cmp
and
push
je
jmp
push
mull
lock
imul
insb
insl
cwtl
mov
sbb
jne
scas
jecxz
cwtl
and
arpl
pop
pusha
add
jbe
int
inc
adc
cld
xchg
dec
pop
out
loope
lret
or
xchg
subl
push
outsl
enter
pop
test
push
outsl
out
lahf
push
scas
aas
clc
pop
or
or
pop
bound
cmpsb
xor
mov
data16
lods
xchg
loop
test
lret
andb
pusha
sub
cld
mov
cmp
or
xchg
stc
cmp
aad
xchg
adc
in
stos
and
das
push
push
mov
sbb
mov
popf
aaa
inc
sarb
shr
call
stc
dec
sbb
gs
pusha
insl
xor
loopne
mov
inc
ss
pop
pop
orl
push
clc
push
test
repz
daa
stc
inc
gs
xchg
cltd
mov
call
sarl
lret
sti
test
jb
fcoml
adc
es
sbb
dec
imul
cmp
push
xchg
or
mov
dec
jne
mov
sbb
cmpsb
mov
adc
ret
cmp
rclb
cmpsl
frstor
mov
push
loopne
and
cmp
pop
inc
and
push
xchg
pop
in
pop
jmp
aam
inc
aad
xchg
adcl
addr16
pushf
inc
dec
shlb
sub
inc
imul
mov
in
lods
and
mov
adc
jns
dec
push
addl
and
insl
or
xchg
mov
cltd
pushf
xchg
adcl
stos
mov
js
xor
ss
mov
jecxz
jg
mov
and
xor
mov
sub
mov
sbbl
arpl
mov
xchg
xor
sbb
mov
push
mov
push
stc
xchg
add
push
inc
inc
jmp
jge
and
xor
cli
enter
fnsave
hlt
dec
inc
adc
mov
ds
dec
fstpt
cmpsl
lea
cmp
sub
cwtl
dec
mov
jb
outsl
xchg
xchg
push
push
xchg
sub
in
adc
push
imulb
inc
xchg
movsb
xor
test
add
mov
push
pop
sub
sub
cmp
mov
std
jbe
popa
cmpb
lahf
mov
xor
and
test
push
xchg
xor
push
or
inc
sub
jbe
jge
add
stc
jl
jns
dec
pop
pop
mov
adc
mov
push
incl
pop
pop
jne
std
roll
push
icebp
mov
mov
or
mov
add
popa
xchg
cmp
outsl
outsb
jnp
data16
lret
jp
mov
mov
mov
imul
xor
stc
mov
loop
mov
dec
cmp
jo
imul
lock
or
outsl
je
ss
lret
add
fisttpll
sahf
daa
xchg
push
mov
aam
test
lcall
pop
cltd
daa
lcall
cltd
adc
cmpsl
lds
sbb
mov
test
jnp
add
mov
adc
mov
lock
push
das
and
popa
pop
daa
pop
outsb
jle
out
ljmp
aas
cmpb
enter
mov
mov
ss
in
and
xor
nop
test
jns
sub
addr16
mov
lret
out
jmp
sub
adc
int3
push
pop
outsl
sub
cmp
xchg
push
lods
inc
fnstcw
test
inc
cmp
xchg
push
cmp
mov
adc
jmp
xchg
add
push
loope
adc
add
fidivl
jne
jmp
or
ljmp
fists
mov
adc
lods
mov
sub
aad
mov
xchg
sub
inc
fldcw
inc
push
icebp
mov
mov
xor
addr16
dec
out
repz
push
jns
cmp
fists
lods
ja
shll
test
or
jne
cmp
rcrl
clc
sub
lahf
ror
fs
loop
in
in
icebp
adc
mov
arpl
cmp
cli
fldl
pop
enter
in
mov
stc
cwtl
bound
xchg
push
lahf
shrl
mov
push
push
sbb
xchg
pop
jmp
sarb
cmpsl
mov
pop
cli
sub
aas
ljmp
mov
loop
push
lret
sbb
mov
lods
clc
xor
aad
mov
mov
mov
hlt
stc
mov
xorb
xor
call
xor
sub
fcmovnbe
xor
push
inc
shrb
pop
nop
sub
cwtl
pop
stos
inc
ja
pop
loop
ss
mov
pop
and
adc
stc
and
mov
aas
mov
sub
jg
iret
mov
mov
mov
jg
or
dec
mov
int
xor
pop
adc
fisubs
cmp
in
inc
add
aad
add
dec
out
xor
popa
sbb
orb
nop
and
and
ret
fucom
add
push
inc
push
lret
pop
pop
inc
test
dec
jnp
xorl
test
popf
jb
ss
int3
sub
xchg
xor
cwtl
test
mov
and
sub
sub
xchg
loop
or
lret
xor
cmc
xchg
sbb
mov
pop
shlb
sbb
mov
pop
mov
test
test
mov
fnstsw
mov
ret
and
adc
sub
inc
xchg
das
sub
jle
sub
lcall
inc
jae
in
push
cli
xlat
xor
das
and
pop
and
mov
jle
in
das
cwtl
xor
cwtl
daa
in
insb
cmp
outsb
and
add
xor
sbb
and
call
xor
or
mov
and
pop
add
push
rorb
cmp
and
inc
cmpsl
repnz
enter
call
in
scas
xchg
inc
mov
pop
jg
add
pop
aam
mov
cmpl
inc
rcll
mov
push
xor
pop
les
xor
jl
stos
adc
push
test
and
ret
les
jecxz
sub
or
mov
daa
fsts
cmp
inc
sub
adc
sub
lods
popl
push
mov
insb
sbb
inc
sbb
test
ds
mov
out
mov
lds
mov
out
scas
mov
adc
push
xor
xchg
dec
pop
push
jb
cmp
aas
fstps
movsl
mov
xlat
imul
xor
push
fnstcw
or
dec
jp
gs
sub
xor
push
inc
xchg
inc
movl
sar
mov
lock
aam
popf
or
lods
cmp
mov
sub
pop
pop
push
mov
imul
xchg
ljmp
push
outsl
cli
mov
inc
push
and
xorl
outsl
or
dec
lcall
daa
loop
adc
out
jecxz
mov
scas
jmp
and
stos
push
mov
aad
xor
xchg
or
mov
insb
vmwrite
push
iret
clc
xor
xorb
lret
in
shll
push
and
add
and
mov
jg
cmpsl
ja
jl
mov
mov
pop
or
pushf
push
aaa
or
pushf
frstor
arpl
jmp
inc
mov
xor
jo
dec
xchg
sub
ss
movsl
iret
shlb
and
lret
jl
xor
mov
inc
loop
movsl
pop
push
fwait
and
sub
dec
dec
mov
and
and
shl
xchg
mov
loop
pand
adc
mov
xor
std
sbb
xor
bound
jnp
fxch
mov
jno
add
cmpsb
adc
adc
inc
xor
lds
cmpsb
inc
push
cmp
stos
or
imul
rorl
scas
ret
xor
lcall
sti
stos
mov
loop
ret
mov
sti
sub
or
mov
sub
jae
jno
imul
in
out
sub
jecxz
sbb
xchg
and
inc
and
mov
push
lcall
adc
and
setae
stc
xor
loop
dec
repz
outsl
lds
cmp
iret
pop
es
lret
popf
push
lock
mov
loop
mov
test
imul
push
sbb
rclb
cwtl
imul
jne
shlb
int3
or
sahf
dec
pop
push
push
pop
pop
xchg
mov
mov
add
js
inc
and
or
fdivs
and
cmp
mov
inc
pop
xchg
out
push
test
jmp
add
jmp
sub
mull
sarb
and
fldl
cmp
iret
and
sub
dec
mov
adcb
xchg
or
loop
outsb
or
push
je
sub
fdivrl
or
cmc
adc
outsb
cmpsl
pop
inc
sti
sbbl
int
scas
ret
cmp
sbb
sbb
imul
mov
hlt
ret
lods
adc
push
pop
adc
sbb
and
mov
movsl
mov
scas
sub
or
and
add
insl
jb
inc
adc
jmp
sarl
movsl
leave
sahf
xchg
shll
mov
das
cmp
push
xor
and
xor
jno
inc
mov
xchg
pop
mov
int
loope
push
xlat
fcomi
pop
add
stos
test
cmp
pop
jbe
lea
cmp
sbb
push
xor
push
mov
adc
cmp
sbb
into
mov
fwait
or
xchg
xor
in
jle
mov
pop
clc
hlt
loop
pusha
xchg
push
jb
test
adc
sbb
dec
data16
popf
and
adc
mov
dec
stc
imul
out
es
push
scas
push
dec
or
fstpl
out
add
out
inc
ds
mov
add
mov
cwtl
popf
sub
sub
jno
mov
and
dec
pop
sub
mov
out
cltd
decb
ret
mov
outsl
ds
ret
ljmp
sub
stos
rol
inc
xchg
fldl
cld
pushf
call
adc
sbbl
adc
mov
pop
and
mov
dec
nop
loopne
push
pop
jno
loop
fiaddl
mov
int
push
clc
mov
test
or
add
mov
add
imul
aad
sbb
add
xchg
mov
push
push
mov
pop
stos
mov
xchg
paddw
sbb
loop
bound
mov
jge
mov
and
inc
scas
jne
mov
adc
inc
sbbb
hlt
aas
cmpsb
xchg
into
iret
cmp
pop
add
pusha
movsl
out
popa
jmp
ljmp
inc
test
jbe
mov
pop
repnz
sbb
fwait
inc
mov
xor
je
mov
adc
cmp
bound
pop
dec
mov
popf
cmp
lahf
leave
dec
push
mov
test
lods
cld
sub
jbe
aas
pop
cs
int3
jns
jo
movsb
aam
movsl
ja
popf
jge
pop
xchg
mov
sub
popf
pop
mov
fwait
xor
sbb
das
cs
leave
scas
aam
lea
xor
rclb
jns
sbb
xor
adc
lods
xlat
push
clc
loop
pop
inc
or
lea
test
in
sbb
sbb
fwait
cmp
popa
inc
iret
sbb
adc
mov
sbb
adc
sub
lcall
loop
xor
and
push
aas
loop
mov
sbb
xor
cmp
sarl
sbb
and
aaa
loop
jno
leave
xchg
xor
and
xor
and
fidivrl
xor
fildl
cmp
push
das
loop
sub
mov
sub
xchg
cli
adc
cmp
adc
sub
sub
loop
sub
xchg
jp
sub
lcall
pop
popa
lock
cmp
inc
js
cmp
sbb
stos
jbe
ret
pop
loop
adcb
adc
int
xor
sbb
mov
jo
cmp
xor
test
jnp
ja
xchg
inc
popf
inc
cmp
jne
cmpsl
lret
jae
sub
mov
sbb
fs
dec
insl
loop
jbe
imul
xor
imul
addr16
cmp
gs
mov
loop
js
popa
xor
dec
js
pop
xor
and
pop
xor
cld
jbe
pop
jb
test
loop
xchg
jbe
push
loop
test
in
mov
loop
jbe
jns
push
fidivl
je
mov
loop
pop
jns
dec
loop
jecxz
mov
loop
fidivl
dec
loop
inc
jb
dec
loop
jb
xchg
inc
loop
jb
push
inc
loop
jb
sbbl
push
xor
adc
push
addr16
outsl
pushf
inc
or
xor
push
xchg
cmp
insl
in
bound
sbb
fnsave
push
aaa
cs
pop
imul
xorl
sti
adc
je
mov
cmpsl
xor
dec
roll
cmpsb
cltd
jo
arpl
cmp
cmc
cmp
push
shrl
popf
jb
cs
xor
sbb
lods
push
shlb
fucomp
push
cmp
mov
xor
mov
xor
mov
and
adc
mov
mov
mov
lods
mov
push
and
jb
cmp
icebp
gs
pop
bound
adc
jb
mov
xor
mov
jb
push
cmpsb
outsb
add
pop
xor
mov
inc
shll
xor
shll
fwait
outsb
insl
in
dec
push
sahf
lcall
sti
push
mov
leave
pop
rol
enter
fisubs
mov
inc
mov
outsb
fsubl
loop
xchg
adc
push
cmpsl
lret
jecxz
insb
push
or
adc
loop
and
in
jno
cmp
lods
stc
and
loop
daa
pop
dec
fcoml
pop
push
sub
pushf
cli
les
cmc
mov
and
dec
cltd
bound
cmpsl
pop
adc
push
lock
push
lods
jne
mov
pop
aam
lock
sub
jp
out
jne
dec
shrb
popa
push
imul
xor
mov
sbb
push
sub
inc
das
sbb
sarl
inc
loope
movsl
inc
mov
fstpt
jns
mov
add
jbe
adc
add
in
stc
or
xchg
mov
aad
jecxz
fidivl
in
loop
loop
lahf
push
adc
mov
mov
das
insl
jb
mov
mov
inc
int
cmp
xor
fwait
stc
pop
inc
inc
mov
test
repnz
fs
cmp
adc
sbb
cmp
dec
sbb
pushf
pop
ret
call
mov
iret
jge
fdivrl
jmp
mov
sbb
dec
outsb
add
cmp
xor
mov
or
loope
in
adc
pop
adc
jl
sbb
jg
mov
push
cmp
inc
pop
pop
loopne
and
aaa
mov
into
add
mov
adc
iret
fnstcw
sbb
dec
or
mov
jns
iret
inc
hlt
pop
sub
or
nop
out
cmp
cmpsl
pop
mov
pop
in
or
ret
dec
push
int
cwtl
ss
cltd
inc
fwait
sub
pop
and
frstor
push
inc
insl
inc
xchg
ret
inc
inc
stos
imul
cmpsb
pop
testb
int3
mov
cmp
cmp
aaa
stc
push
or
push
popa
gs
pusha
insb
jecxz
inc
dec
add
xor
add
andl
xor
push
pop
popa
cmp
lock
and
in
jns
popf
lds
andl
sbb
jmp
pop
out
aas
xor
outsl
outsl
xor
decb
mov
jnp
push
xchg
xchg
pop
add
shlb
shl
aad
xor
add
psubq
repz
aad
mov
fsts
jne
leave
sarb
inc
inc
add
pusha
jmp
mov
xchg
lahf
cmp
jecxz
loopw
add
xor
sbb
add
adc
jns
icebp
adc
push
clc
mov
sub
aad
jo
mov
fcompl
out
mov
xor
daa
and
pop
scas
orb
lcall
cmp
stc
sub
mov
mov
inc
ss
movhps
lret
inc
daa
or
shlb
jecxz
fs
cmp
pop
jle
mov
call
es
subb
or
call
lcall
sub
mov
jb
lahf
xchg
xchg
add
jno
mov
push
push
xchg
and
cmp
sbb
xchg
xchg
and
xor
jp
push
jbe
jno
iret
xor
mov
lock
fwait
mov
clc
out
or
pushf
mov
xor
add
mov
inc
jns
movsb
mov
movsb
lods
das
lahf
pushf
push
sub
lcall
mov
sti
std
inc
dec
dec
mov
push
std
xchg
shrl
leave
pop
dec
test
cmp
jnp
jne
fsubl
repnz
push
dec
cmp
add
sbb
and
add
popa
mov
stc
push
rclb
dec
sbbl
ret
jp
sbb
addr16
aas
andl
out
jbe
rorl
mov
push
int
sub
sti
pop
repz
pop
cs
xor
mov
adc
ja
sbb
xchg
or
and
mov
imul
xor
movsl
xlat
xchg
adc
lds
and
in
adc
sub
jmp
in
adc
cmpsl
loope
int3
repnz
outsl
sub
hlt
xor
lods
jmp
shll
push
pop
addl
push
and
push
dec
sbb
outsl
imul
add
in
or
mov
sbb
decl
or
shlb
push
pop
inc
push
int
cltd
mov
inc
fwait
inc
jbe
jl
sbb
les
lds
push
hlt
lock
push
aas
adc
cmp
jbe
rclb
es
rorb
or
cmp
mov
out
and
out
call
add
mov
cli
fidivrl
mov
xor
cmpsb
test
stc
cmp
adc
shl
or
dec
popa
cli
rorb
insb
ret
jne
fbstp
add
or
push
and
and
pop
das
pop
xchg
xlat
mov
cmp
mov
loop
add
mulb
or
jg
insw
rol
or
xor
jno
push
jb
aas
add
inc
repnz
daa
adc
or
into
sbb
jge
dec
pop
insb
push
and
stos
push
push
sub
lea
push
repnz
in
adc
and
jecxz
cmp
outsl
add
cmp
add
mov
push
pop
cmpsl
and
mov
jecxz
or
in
call
inc
sbb
or
js
cmp
mov
hlt
xchg
sbb
push
add
and
ja
fdivl
jnp
jo
sarb
xchg
cwtl
subb
sti
cmc
cltd
jl
xorb
jl
jb
mov
in
sbb
stc
aam
sbb
pop
in
lret
cmp
outsl
scas
inc
dec
adc
sbb
push
scas
pop
jo
xor
inc
mov
outsb
int3
xchg
sti
mov
sbb
or
js
imul
push
hlt
fsts
dec
sbb
sub
xchg
push
and
mov
mov
sub
inc
sub
jne
cmp
xor
jns
and
xchg
hlt
pop
fstl
mov
int
mov
in
push
jne
sub
xor
sbb
lods
pop
or
jnp
test
lock
bound
insl
cmp
add
inc
jne
pop
jno
add
jb
xchg
fs
sahf
or
mov
lods
and
push
push
adcl
insl
scas
es
popa
popf
lcall
mov
pop
jmp
jge
jne
mov
pop
scas
and
jno
icebp
push
jns
adc
adc
fnstenv
mov
mov
rep
pop
fldenv
adc
dec
cmp
or
and
xor
testl
mov
sarb
pop
sbb
xchg
xlat
push
sbb
ja
xchg
pushf
sahf
xor
cmpsl
je
jns
mov
mov
push
and
fnstsw
sub
ja
pushf
stc
xchg
std
imul
mov
inc
xchg
jl
xchg
loop
inc
pop
and
adc
testl
inc
cs
mov
dec
lock
repnz
pop
adc
sbb
cwtl
lcall
loop
add
adc
jno
or
sub
pop
sub
iret
sti
or
mov
loop
aad
sti
or
das
nop
xchg
imul
scas
mov
aaa
enter
ljmp
adc
sti
loope
or
lahf
roll
sbb
mov
cmovno
stos
bound
int
cmp
and
ds
pop
pop
or
and
lret
sub
mov
sbb
push
xchg
jl
cmp
pop
push
mov
push
aas
add
scas
in
mull
cs
cmpsl
dec
push
aas
mov
gs
and
inc
mov
in
fistpl
cmp
ss
mov
xor
gs
mov
or
inc
push
scas
push
bound
mov
bound
sbbb
scas
xor
and
sbb
lahf
add
sbb
xor
pop
xchg
stos
adc
xor
rcll
jnp
adc
pusha
adc
popf
cmp
cmpb
push
adc
aas
cmp
cmp
cli
mov
sbb
sbb
and
imul
xor
and
sbb
pop
xor
mov
imul
mov
or
adc
aaa
out
or
clc
push
lret
xor
in
xor
mov
popa
insl
loop
cs
adcl
mov
mov
sahf
sbb
sub
out
pop
les
or
ljmp
mov
mov
sbb
cmp
push
push
mov
repz
and
push
imul
sbb
addl
insl
pop
cmp
push
icebp
sbb
fnstsw
xchg
data16
imul
lahf
or
jne
sub
adc
test
mov
jle
loope
jecxz
cmpl
mov
xchg
push
xchg
je
out
jp
stc
movsb
xchg
sub
cmpsb
xor
mov
ds
cmp
sub
clc
xchg
mov
divb
mov
inc
movsl
notb
hlt
add
pop
adc
push
xchg
cli
push
push
mov
popa
lcall
jg
ror
ds
cmp
cmp
add
cs
push
push
xor
stc
loop
and
sti
mov
cmp
enter
nop
jne
xor
pop
aas
inc
aas
sub
jo
cmpsb
int3
jno
stc
sub
jns
dec
jmp
icebp
repnz
adc
ret
sub
push
jg
cs
inc
stc
gs
inc
scas
push
addr16
mov
mov
and
shr
aas
lcall
push
in
inc
sahf
cmpsl
add
pop
cmp
push
xchg
dec
pop
or
movsb
loope
ret
mov
lods
sub
mov
loop
aaa
pandn
ss
push
push
lds
ja
pop
and
stos
mov
xchg
fwait
inc
sbb
add
and
sahf
test
sti
xor
push
stos
andb
jne
loope
into
pop
xchg
xchg
std
push
scas
sbb
xor
cmp
cmp
adc
fwait
xchg
sub
loopne
call
sub
mov
arpl
jge
int
push
mov
icebp
xchg
push
in
mov
push
mov
test
les
pop
sahf
sti
inc
decl
sub
and
gs
sub
mov
es
dec
jmp
adc
loop
shl
ja
iret
mov
data16
mov
movsb
ss
imulb
imul
lahf
scas
jbe
sbb
shlb
pop
sti
and
daa
mov
add
pop
lahf
movsb
jmp
mov
push
mov
lret
mov
pmullw
mov
push
hlt
adc
cmp
leave
adc
cmp
cmp
pop
dec
jno
sub
shl
pop
adc
sub
jecxz
xor
adc
pop
pop
shlb
and
push
dec
push
decl
sbb
fdivl
mov
pop
ss
ja
ret
jmp
pop
push
out
and
dec
sub
mov
xor
sub
sbb
cmpsl
adc
mov
out
inc
xchg
or
mov
lds
push
mov
mov
data16
mov
insb
rolb
test
mov
adc
int
fs
icebp
sbb
dec
daa
push
and
lret
xor
cltd
xor
mov
je
sbbb
pop
lahf
adc
sub
mov
cltd
adc
xchg
sbbl
daa
in
fimull
loop
popf
sar
in
and
fstps
popa
xchg
lahf
push
sbb
mov
add
or
popf
or
mov
adc
fcoms
push
sbb
xor
lods
cmpsb
mov
mov
jmp
adc
test
push
loop
or
push
pushf
stos
dec
adcl
lds
mov
repnz
mov
mul
shlb
mov
test
ret
xchg
out
add
jns
xchg
imul
adc
or
mov
mov
add
mov
cs
mov
cmp
popa
loop
test
sbb
dec
pushw
imul
jmp
add
sbb
aam
pop
inc
iret
jp
es
mov
leave
sbb
or
ret
shl
or
pop
ret
gs
stc
sti
aad
stos
jno
mov
dec
and
xchg
cmp
pop
xor
push
or
push
and
dec
mov
call
jno
je
jg
sub
lods
and
pop
push
insl
pop
mov
popf
movsl
loope
mov
cmp
and
mov
lret
adcl
lock
cld
mov
cmp
push
adc
or
sub
fcmovne
je
add
push
inc
loop
arpl
xor
adc
mov
push
mov
in
mov
adc
clc
push
jo
mov
bound
insb
xchg
aad
push
adc
push
pop
out
ljmp
outsl
mov
shr
or
add
mov
es
jb
sbb
stos
adc
mov
pop
mov
pop
sbb
fisttpll
mov
sub
xchg
lret
xchg
pop
mov
cmpsb
inc
ljmp
jge
inc
push
outsb
lea
sub
daa
jne
sub
mov
sbb
xor
and
xchg
cmp
test
xor
sbb
push
enter
cltd
adc
int
call
mov
add
and
sub
cmp
mov
adc
shll
mov
vaddss
xchg
xchg
mov
add
lods
xchg
ret
xor
push
sub
loop
xor
mov
adc
push
push
mov
mov
sbb
dec
push
fwait
mov
shll
mov
lea
les
fld
fildll
ret
xchg
sbb
cmp
call
test
fdivr
mov
push
into
mov
or
inc
dec
pop
loop
push
fwait
pushf
jae
out
loop
int3
dec
addr16
scas
pop
mov
sub
popa
jge
je
sbb
xchg
sub
mov
xchg
mov
mov
xor
stc
sub
xlat
ljmp
popa
adc
lahf
mov
dec
fidivrl
movsl
scas
inc
lcall
sub
loope
and
cmp
cmp
push
fsubl
xlat
das
pop
jno
mov
xor
mov
jle
pop
push
dec
les
int3
cmp
and
lret
mov
mov
data16
cmpsb
or
in
mov
mov
mov
jne
xor
divb
test
and
mov
cmp
cmp
and
sub
pop
xor
cmp
lret
mov
dec
int3
cmpsb
in
mov
lods
sub
xlat
sbb
push
repz
mov
pop
fmull
pop
pop
cmp
jp
mov
adc
sub
add
cli
or
test
nop
ret
mov
mov
shr
sahf
mov
xchg
in
xchg
push
lods
call
pop
sysenter
mov
mov
cmpsb
stos
sbb
mov
inc
cmpsl
gs
mov
popa
pop
sub
jg
ljmp
arpl
fsubr
sbb
mov
pop
dec
jns
andl
dec
leave
fs
and
or
mov
fisubs
and
cmpsl
fsubl
mov
cmp
es
sbb
pop
mov
enter
push
sub
imul
push
mov
push
push
loop
push
or
mov
out
in
mov
pop
das
lcall
pop
fdivr
das
pop
pop
jns
adc
mov
test
sub
in
test
push
jl
inc
pop
sti
stos
ds
jo
cmp
sub
mov
add
push
mov
mov
push
popa
arpl
fwait
push
jne
imul
jne
and
mov
and
int3
lea
mov
xchg
imul
arpl
sarl
mov
push
cltd
rorl
add
pop
add
sbb
data16
adc
adc
lahf
jne
xor
mov
mov
into
jmp
jns
and
repnz
in
mov
jns
mov
int3
xchg
leave
mov
add
xlat
mov
push
mov
fwait
dec
pusha
mov
sbb
out
loop
jmp
lret
popf
cltd
xchg
movsl
mov
or
add
and
jb
daa
ret
xchg
int
mov
movsb
sub
inc
aaa
push
pop
iret
cmp
dec
and
inc
sub
loop
clc
mov
fs
imul
jge
pop
xchg
mov
into
repnz
daa
movsb
aad
test
imul
loop
xchg
add
or
mov
js
icebp
enter
jg
adc
jno
and
mov
mov
xor
loop
aas
sbbb
in
fsts
mov
jmp
arpl
sub
sbb
out
mov
loop
pop
loopne
shr
scas
jns
xor
mov
rcrb
or
xchg
and
lods
jmp
inc
xorl
scas
pushf
jo
clc
mov
mov
mov
and
std
mov
jle
or
outsb
mov
sbb
loop
push
mov
fnstenv
and
dec
mov
jg
cmpsb
cmp
xchg
pop
hlt
jle
add
xor
ja
pop
mov
mov
pushf
push
dec
mov
sti
lds
pop
testb
sub
fiaddl
popl
or
popa
sahf
arpl
cmp
inc
mov
pop
leave
pop
int3
mov
mov
int3
frstor
or
cmp
mov
xor
popa
mov
loop
notl
cltd
std
add
js
jg
bound
jg
loop
shll
leave
outsl
stc
test
mov
jp
lods
jecxz
adc
dec
sub
cmpsl
mov
fxch
mov
jo
stos
aam
add
fisubrs
scas
pop
fsubrl
lock
inc
imul
scas
cmp
test
sbb
or
popf
mov
sub
adc
ds
mov
add
add
mov
lock
cli
cmp
lcall
mov
cmpsl
jg
je
mov
fstl
ret
es
mov
les
movsl
xor
sti
out
mov
neg
idivb
cmp
mov
sub
push
and
sbb
orl
mov
or
test
adc
sub
pop
and
test
mov
adc
loope
adc
sub
pop
fisttps
shrl
or
adc
pop
xchg
cli
pop
pusha
rcrl
cld
push
and
adcl
cmc
loop
mov
xor
adc
pushf
loop
cmp
movsl
and
popf
add
loop
jmp
popa
jecxz
cmp
sbb
fnsave
mov
test
or
das
shr
cmpl
mov
addr16
mov
cmc
loopne
pop
mov
jp
mov
or
pusha
fisubl
cmpsl
xchg
out
aas
jp
jg
in
arpl
stc
icebp
pushf
js
xchg
jno
adc
and
cmp
xchg
shll
mov
and
sarb
push
cltd
xchg
adc
in
dec
jno
imul
xor
mov
cmp
jns
mov
cmp
popf
push
xchg
mov
cmp
into
cs
mov
in
adc
sti
xor
xchg
cmp
jae
movsb
insb
sbb
pop
insl
jns
jbe
adc
mov
add
cmp
xor
rcll
push
fwait
aas
and
repz
mov
mov
add
outsl
aaa
mov
dec
out
jge
pop
mov
inc
xor
das
sbb
sahf
es
dec
add
jbe
sahf
adc
fcos
or
dec
int
arpl
andl
push
and
pop
shl
cld
adc
iret
xorl
call
orl
loop
subl
mov
jns
int3
mov
push
jno
and
xchg
pop
fwait
test
push
dec
shll
loope
gs
gs
mov
lea
adc
and
dec
pop
xchg
mov
mov
or
mov
cmpsl
fisttpll
arpl
or
xchg
cmp
aad
movsw
dec
inc
movsl
imul
std
xor
mov
pop
xor
mov
rorb
test
sbb
or
mov
scas
into
mov
mov
in
iret
dec
lret
fwait
in
and
aaa
add
sub
jmp
and
ds
pusha
jl
into
test
mov
cmc
lcall
add
loop
addr16
and
lret
clc
pop
dec
cmp
imul
xor
mov
pop
cli
and
push
xlat
mov
inc
push
sbb
mov
call
insb
aaa
imul
stc
sub
imul
jl
bound
xchg
popa
mov
push
fwait
mov
dec
js
insl
mov
inc
cmp
and
jle
mov
xrelease
mov
push
out
cmp
lcall
or
dec
flds
adc
prefetch
fwait
sbb
push
jp
jbe
mov
mov
std
shlb
dec
xor
sbb
popf
movsb
jmp
sub
mov
lcall
out
mov
inc
inc
pop
xchg
sub
pusha
add
shll
imul
xor
imul
pop
call
and
lcall
call
xor
roll
jae
mov
mov
incb
xor
dec
or
fldt
sbb
pop
dec
dec
cmp
jl
push
int3
and
jmp
sbb
cmp
and
cli
jnp
mov
test
jp
fucomi
addl
and
mov
pushl
mov
lods
adc
xor
shrb
sbb
sbb
pop
lock
int
push
pushf
loop
shrl
ret
sub
stos
and
push
jb
xor
mov
jge
fdivl
push
ds
outsb
mov
rorl
loope
mov
daa
mov
pop
or
mov
dec
and
setnp
sti
and
rcll
sbb
cmp
daa
jge
push
int
bound
ljmp
dec
icebp
xchg
in
mov
adc
xorb
repz
push
lahf
cwtl
jns
imul
cltd
sahf
xchg
mov
ss
xor
cmp
shll
and
push
jbe
and
ficoms
push
or
adc
mulb
cld
jno
push
xchg
pop
call
int
in
mov
pop
test
xchg
mov
sub
jge
and
movsb
fwait
aam
xlat
shrb
sbb
inc
daa
in
sbb
jno
mov
lods
gs
mov
divb
or
fucomip
and
pushf
test
shr
negl
jb
cmp
cmpsb
in
imul
and
popf
movsb
cltd
jno
shll
sub
fxtract
repnz
mov
cmpsl
lcall
pop
stos
dec
mov
fwait
jno
movsb
push
sbb
fsubrs
faddl
sbb
imul
adc
fstps
jmp
sub
xor
cs
or
fwait
sarl
mov
or
das
cs
movl
cmc
jno
sub
je
addb
mov
cmp
test
arpl
mov
mov
xor
lds
repz
ljmp
das
loop
add
xchg
adc
ret
fwait
add
and
orb
shll
push
popa
outsl
sti
xor
sub
xchg
pop
mov
mov
cmp
mov
add
xchg
lahf
lahf
mov
sub
mov
push
sarl
loop
and
xor
add
daa
cmp
sbb
fxch
cmp
push
cmp
inc
loop
inc
es
dec
ds
adc
loop
inc
test
inc
loop
lcall
fwait
ds
pop
or
shlb
popf
xchg
sub
cmp
ret
and
sbb
jb
and
in
outsl
push
mov
sub
loop
mov
outsl
add
or
dec
iret
xor
sub
mov
pop
cltd
xchg
cltd
add
stc
sub
inc
insb
mov
movsl
jle
ficoms
mov
jbe,pn
inc
popa
outsl
mov
inc
mov
push
ret
and
push
dec
mov
ret
mov
sub
int
xchg
push
aaa
and
adc
lock
mov
aaa
mov
lret
and
movups
inc
lret
push
leave
repnz
nop
jne
or
test
adc
test
mov
mov
xlat
cmpsb
inc
push
mov
xchg
xchg
or
xchg
iret
rcrl
out
dec
adc
mov
int3
xchg
add
mov
mov
xor
popa
add
or
sbb
insl
mov
repz
inc
test
xchg
leave
loop
mov
test
mov
mov
movsb
push
mov
loop
incb
ret
xchg
outsb
xor
mov
nop
push
in
mov
jno
xor
mov
add
jae
pop
mov
int3
testl
ss
sub
lret
ficoml
outsl
mov
dec
into
xchg
dec
adc
jbe
shll
fdivp
push
xor
imul
in
leave
aas
push
loop
ret
fstp
mov
mov
cmp
mov
pop
mov
jb
cmp
sbb
sub
xor
push
pop
mov
loop
jle
pop
jno
inc
mov
aad
sti
sub
fimull
cmpsb
jecxz
and
or
sbb
jge
pop
loop
rcrl
rcrb
loop
rcll
push
int
sub
xorb
les
sbb
xor
dec
pop
mov
fwait
mov
mov
addr16
xchg
push
xchg
lret
arpl
cmp
lods
pop
xor
insb
or
arpl
xchg
es
lret
jno
xor
mov
cmp
rclb
xor
fwait
mov
popa
add
cmp
mov
fs
push
jp
dec
mov
mov
adc
leave
push
bound
push
or
mov
ret
stc
movsb
or
repz
xor
cwtl
cld
jno
loop
mov
mov
adc
lock
inc
push
lret
dec
adcb
xchg
test
clc
jbe
pop
leave
les
inc
jbe
mov
jne
lods
pop
popl
adc
add
subb
scas
cwtl
and
imul
mov
jns
pop
push
push
mov
in
in
mov
or
xchg
out
mov
inc
sbb
rol
rorl
fwait
adc
jp
adc
xor
dec
dec
call
jl
shll
and
jnp
cmpsl
call
xor
and
inc
ret
and
aad
mov
js
xchg
and
pusha
outsl
inc
adc
and
push
jecxz
inc
rolb
mov
insl
aas
inc
mov
lret
sbb
mov
dec
push
mov
popa
inc
mov
fidivs
mov
xchg
addr16
xor
adc
xor
xchg
cmp
dec
adc
mov
xchg
rcrl
enter
testb
hlt
mov
inc
and
in
pop
in
sbb
out
sbb
jmp
sub
inc
add
xchg
out
mov
or
dec
mov
pop
cld
cmpsl
push
xorb
jbe
jmp
sti
in
mov
in
mov
and
int
mov
inc
shrl
gs
iret
pop
lcall
ja
sub
in
push
mov
out
aaa
das
cmpsb
cmpb
arpl
movsl
cltd
mov
sbb
cmp
aad
imul
mov
cmp
push
cmp
pop
andl
repz
stc
inc
addr16
mov
es
cmp
mov
add
sub
mov
or
xchg
inc
sti
outsl
and
std
jecxz
mov
and
ss
aaa
addr16
es
and
adcb
sbb
pop
adc
scas
jns
nop
sub
pop
dec
mov
mov
sti
dec
out
or
jle
mov
or
mov
push
fsubp
sarl
sbb
aad
push
ret
push
pop
mov
xor
daa
mov
mov
pushf
movsl
out
and
jmp
and
stos
aaa
cltd
stos
jmp
mov
icebp
xor
jns
xor
pop
mov
xchg
add
ror
movsb
or
mov
dec
cmpsb
cmp
cmp
fcom
in
daa
mov
stc
cmpsl
mov
lret
dec
jmp
loop
aad
shrb
out
and
dec
inc
lods
outsb
adc
push
std
cmp
dec
sub
daa
jbe
mov
push
adc
cmc
ss
mov
jl
fsubrl
cmpsl
enter
and
inc
or
loope
out
jo
and
int
leave
push
fld
mov
loop
leave
jo
movsb
icebp
sbb
or
stos
jo
mov
xchg
ficoml
adc
imul
test
mov
ss
popf
inc
xchg
dec
fldz
or
pop
and
push
inc
addl
out
mov
and
stos
sahf
mov
cmp
cmpsb
outsb
inc
arpl
pop
cltd
scas
in
repz
ret
daa
xchg
adc
popf
mov
call
adc
mov
mov
call
scas
add
push
imul
cwtl
imul
xchg
shll
test
out
repnz
xor
das
pop
nop
popa
or
push
inc
lahf
and
and
mov
jmp
jg
mov
scas
cmpsl
or
mov
mulb
lods
jl
jle
mov
jne
mov
data16
adc
adc
dec
cmp
inc
inc
and
jmp
sbb
mov
imul
xchg
pop
pop
jb
cmp
popa
mov
lds
mov
imul
orl
stc
aaa
mov
mov
cmp
iret
mov
mov
daa
rcr
pusha
repz
xor
jns
cmp
imul
push
repz
leave
insb
mov
iret
xchg
sub
pop
cmp
pop
xor
mov
out
dec
psubw
xor
pop
pop
xor
mov
lods
or
aad
insl
push
sub
pop
rcrb
rorl
scas
sub
popa
xor
jno
sub
ja
lea
pop
push
call
bound
loop
mov
lret
jno
sbb
rcrb
jns
les
imulb
add
or
inc
push
cmp
push
cs
cmp
ret
mov
or
aaa
xorb
repnz
addr16
xchg
stos
xchg
push
pop
cltd
ss
and
inc
inc
add
pop
or
outsl
lock
loop
movsl
mov
idivl
mov
dec
ss
fbld
and
inc
movsl
jne
negb
xchg
jbe
aam
mov
pop
loope
ret
adc
and
cltd
inc
push
push
mov
jmp
pop
cmp
hlt
pop
or
and
push
add
int3
pop
dec
add
ret
mov
cmpb
push
cltd
pushf
cwtl
inc
call
leave
cmp
addr16
cmp
and
inc
loop
mov
cmp
mov
push
add
add
or
mov
movsb
fwait
fs
or
or
push
jb
imul
mov
cmp
or
xchg
push
mov
cmp
push
addr16
inc
sbb
push
dec
cmp
bound
cld
push
add
dec
ljmp
dec
add
scas
add
cmpsb
push
outsl
adc
mov
or
hlt
cmp
in
ss
popf
popf
mov
popa
mov
mov
pusha
fldl
or
dec
call
and
stos
xor
fdivs
lahf
orl
cmp
bound
ja
mov
es
mov
out
stos
test
out
fldenv
mov
mov
sarb
or
sub
push
loop
xchg
ljmp
cmp
jbe
test
push
xchg
test
pop
xchg
push
xorl
out
mov
dec
xchg
arpl
sub
xchg
dec
xlat
cmpsl
shl
repnz
push
push
iret
mov
icebp
dec
ds
cltd
dec
xor
or
or
sub
mov
xor
lods
rcll
add
push
xor
push
test
movsb
or
lcall
data16
jmp
pop
mov
loop
pushf
daa
sub
lcall
jbe
rolb
out
jmp
adc
push
push
cltd
fwait
xchg
push
push
popf
dec
pop
fdivr
sub
outsb
imul
loop
scas
push
cmpsl
xchg
mov
push
ds
xor
fidivs
out
arpl
js
pop
push
mov
test
test
lods
leave
pop
jmp
jmp
jne
fdivr
push
loop
rorb
mov
gs
mov
add
xor
pop
ficoml
sub
adc
ljmp
mov
sahf
mov
orb
and
fwait
repnz
jp
ljmp
loop
cltd
dec
test
repnz
cmp
cmpsb
cwtl
adc
dec
flds
add
xor
fs
mov
pop
inc
idiv
sbb
xchg
cwtl
shrd
mov
pop
test
sbb
add
je
enter
divb
std
into
ss
test
pop
daa
inc
mov
fwait
push
pop
int
filds
in
xchg
sbb
lcall
andb
inc
mov
loop
jo
cwtl
xor
mov
or
mov
add
cmp
insl
es
in
rcrl
adc
add
outsl
sti
pop
xor
in
test
mov
insl
xchg
jne
pop
adc
or
xor
push
or
sti
test
mov
lcall
cmp
imul
pop
cmp
add
in
mov
fiadds
mov
sarl
sar
jmp
cmpsl
int
pop
mov
mov
mov
lcall
cmp
push
inc
ljmp
ja
xchg
and
lods
mov
push
dec
pop
mov
popa
ja
clc
mov
xchg
inc
mov
cmp
movsl
cmpsl
pop
mov
jge
lcall
inc
adc
xchg
push
rcr
mov
xchg
ljmp
mov
loop
shl
adc
pop
mov
cmp
out
pushf
pop
test
mov
jns
push
mov
pushf
sbb
inc
cmp
sub
mov
cwtl
mov
jecxz
push
scas
xchg
mov
imul
imul
xor
and
test
cmp
pop
loop
xor
call
lret
popa
mov
fisubrs
ljmp
mov
loop
sbb
xchg
cmp
cs
adc
xor
sub
mul
add
pop
dec
lods
jl
out
sbb
ja
pop
adc
xor
xor
mov
scas
dec
sbb
clc
mov
pop
pop
cli
and
and
mov
jbe
mov
leave
dec
push
gs
xchg
push
cmp
pop
and
scas
or
pop
and
xor
sti
add
mov
outsl
cld
ret
cmc
ss
test
lods
mov
imul
xchg
shll
pop
cmp
xchg
shrb
pop
jecxz
aad
lods
mov
loope
push
inc
or
xchg
out
mov
movsb
cmp
pushf
mov
mov
fsub
mov
cmp
popa
xor
icebp
sbb
fnsave
xchg
loop
push
mov
in
pop
cli
movsl
push
push
and
mov
xchg
out
mov
aad
pop
lods
scas
popf
mov
imul
sarl
cmp
jmp
jmp
daa
ret
and
and
jge
loop
jp
dec
xchg
stos
ds
test
int3
inc
in
fwait
pop
jmp
movsb
movsl
dec
outsb
pop
pop
xchg
imul
push
cmp
inc
add
in
mov
fldcw
push
inc
lahf
fs
ja
xchg
loope
and
cld
popf
sub
add
jmp
sar
mov
lret
inc
sti
mov
add
leave
leave
lds
mov
insb
jmp
fnstenv
adc
lret
stc
mov
and
sub
cmp
cmp
sub
data16
sbb
stc
pop
inc
iret
aaa
push
push
and
mov
addr16
jmp
mov
jo
lods
cmp
adc
pop
xor
jne
xlat
icebp
mov
pop
xor
cwtl
inc
leave
cmpsl
pop
cli
shlb
lret
ja
in
pusha
int3
fld
mov
mov
stc
adc
inc
outsb
pop
mov
stc
out
ss
int3
leave
cltd
or
fidivl
mov
and
cld
pop
leave
or
mov
aas
fdivr
loope
ret
inc
stc
and
imul
inc
loop
aam
push
aas
inc
jp
cmp
push
push
ss
sbb
jmp
adc
inc
in
fldenv
cs
sub
cmp
xchg
lea
mov
pop
mov
jg
sbb
mov
cld
add
aam
ret
movsl
fcomps
jnp
stc
or
adc
jbe
jg
aaa
jbe
les
lea
movsl
in
gs
arpl
mov
mov
pushf
sub
mov
push
push
popf
mov
subl
mov
pop
stos
sub
pop
mov
dec
jo
or
xchg
pop
mov
ss
aad
shlb
lock
xchg
or
push
or
cmp
mov
mov
mov
cmp
inc
das
icebp
mov
sti
cmp
dec
add
mov
loop
dec
sahf
cmp
test
mov
xchg
cmp
inc
data16
stos
adc
sub
ret
and
pop
jns
jp
imul
mov
loop
movsb
mov
in
test
push
popf
shrb
sub
inc
scas
out
mov
out
test
outsb
imul
cltd
xchg
cmp
xchg
sbb
and
ret
sub
adc
sti
xor
jno
mov
cmpsl
in
cltd
ljmp
rorl
lods
in
inc
mov
xchg
lret
lret
pop
loopne
mov
andl
xor
mov
push
pop
inc
lds
jg
inc
xor
and
xchg
xlat
fwait
sbb
mov
mov
pop
dec
in
add
stc
aaa
imul
out
frstor
push
xchg
xchg
inc
push
pop
mov
jp
out
movsb
in
rorl
fistpll
scas
pop
adc
lret
xor
lret
xlat
xor
test
shlb
adc
mov
movsl
sub
mov
cli
iret
jne
imul
and
mov
pop
jl
inc
les
add
inc
repnz
in
fisubl
sbb
push
xchg
movsl
cmc
mov
xor
mov
or
xchg
sub
and
xchg
push
popa
dec
mov
repz
aad
xor
mov
push
add
xor
xchg
cmp
int
stc
xchg
ret
push
push
xchg
mov
mov
sarl
loope
addr16
push
loope
mov
or
daa
in
hlt
add
ss
push
add
pop
pop
hlt
mov
lods
pop
jno
cmp
sbb
jb
jns
lcall
imulb
fs
repz
sbb
test
jg
enter
stc
movsl
ljmp
scas
inc
xchg
push
mov
mov
push
sub
outsl
iret
cmp
movsl
xchg
ret
lahf
lcall
xchg
dec
and
jle
sbb
sub
shlb
addr16
shl
jb
or
jae
and
sbb
decb
cmp
mov
jle
sub
mov
aaa
xchg
in
jb
cli
in
or
sbb
outsl
and
iret
jbe
lret
xchg
add
test
xchg
daa
sbb
nop
inc
fiadds
cltd
test
mov
push
push
dec
xchg
sti
rcrb
xlat
and
lods
xor
es
lods
aad
or
mov
aas
dec
repz
push
xchg
popa
and
dec
push
mov
fsts
fisttps
popf
push
xchg
popa
insb
jae
sbb
aad
in
add
aas
mov
inc
adc
push
adc
push
pop
pop
lret
jl
and
iret
fistpl
dec
ss
jl
shll
data16
in
pop
xchg
mov
insb
and
pop
cld
in
cltd
insb
ljmp
fs
xor
cwtl
sub
and
pop
and
ds
and
xchg
pop
sbb
test
and
pop
push
mov
adc
lret
mov
xor
dec
mov
mov
and
push
push
rcll
loop
sbb
and
pop
xchg
mov
push
sub
loop
xor
ja
shl
and
cltd
add
mov
xor
add
inc
or
rclb
cltd
jno
stos
xchg
fst
sub
sbb
pop
xor
out
mov
inc
sbb
adc
int
pop
scas
inc
int3
sti
lahf
sbb
mov
dec
fwait
mov
pop
jp
imul
insl
mov
pop
jno
cmpsb
jb,pt
xor
mov
mov
mov
loope
fnstcw
test
adc
lds
stos
bswap
mov
push
push
inc
inc
loop
mov
mov
dec
outsl
popf
sub
mov
sahf
leave
mov
aaa
xchg
xchg
aam
mov
stc
mov
push
or
daa
call
nop
sub
mov
pop
mov
inc
xor
movsb
sti
inc
mov
pop
xchg
in
push
mov
movsb
add
int3
pop
and
rolb
loop
mov
loope
scas
mov
xor
xchg
inc
adc
fwait
call
lock
loopw
add
mov
mov
push
iret
movsl
shll
ss
addb
inc
inc
xchg
cmc
in
mov
xor
out
xor
xchg
lods
cmp
xchg
adc
sub
lds
and
popa
xchg
cmpsl
pop
setge
or
pop
push
cli
jg
xchg
sti
sub
sub
imul
inc
push
xchg
das
sbb
adcb
pushf
jge
out
xlat
inc
xchg
out
push
ja
cmpsl
mov
jbe
sbb
sbb
lods
test
and
cs
sbb
clc
mov
and
mov
bound
loop
push
movsl
add
cmpsl
cs
jnp
and
adc
mov
aaa
xchg
inc
sub
pop
das
xor
jnp
gs
cmp
dec
inc
xor
adc
cld
dec
enter
dec
mov
aas
dec
hlt
sti
xor
orl
cmp
fstps
ss
mov
clc
xchg
dec
jne
xor
sahf
jns
xchg
icebp
xor
jnp
inc
insl
sbb
sbb
mov
bound
and
xchg
xor
sub
xchg
imul
mov
push
shll
pop
push
mov
sbb
call
cmp
sbbl
ret
test
test
hlt
mov
pop
inc
push
pop
inc
mov
test
test
rcrb
add
aaa
lods
addr16
sti
xor
jmp
jb
adc
adc
cltd
push
push
mov
mov
mov
push
cmpsb
xchg
or
arpl
repz
and
xchg
push
sbb
les
jno
pop
mov
xor
xchg
cltd
cmp
and
xor
scas
xchg
xchg
fs
arpl
daa
adc
and
and
cmp
lock
xor
push
test
xor
cmp
pop
dec
movsb
jns
jmp
push
mov
out
adc
xchg
cmp
push
mov
adc
shll
bound
ret
xor
inc
fs
lods
xor
cmpsb
adc
jp
pop
add
rorb
lds
imul
movsl
push
bnd
cmp
mov
rorb
jl
jg
mov
sbb
loop
jle
fadds
imul
push
sahf
jmp
out
sbbl
stos
fsubp
gs
xorb
mov
mov
test
push
lcall
out
ja
imul
roll
dec
cs
dec
popl
cmpsl
addr16
sub
jl
mov
dec
test
mov
xchg
mov
dec
popa
and
mov
sbb
outsb
add
mov
iret
or
stc
and
sbb
xor
mov
out
sbb
mov
fcomps
dec
daa
in
js
jp
xchg
xor
mov
sub
mov
sub
mov
cltd
lret
mov
jne
mov
iret
pop
or
lds
push
nop
inc
lock
push
rol
or
xor
add
mov
sub
mov
aam
sbb
in
or
xlat
push
mov
pushl
es
sbb
xor
insl
jge
call
xlat
push
ret
push
lret
mov
lret
mov
stos
lods
sbb
fisubrs
jns
mov
ret
sbb
push
or
pop
adc
cmp
adc
imul
sbb
xchg
and
mov
es
inc
inc
push
stc
jbe
movsl
xor
cmp
and
gs
mov
js
aad
cmp
lods
push
xchg
inc
and
repnz
fsubl
mov
ss
mov
cmp
pop
push
xor
mov
mov
insb
test
jbe
cmpsl
pop
iret
cmp
mov
dec
shlb
sbb
test
mov
jns
cmp
pop
cld
mov
xchg
int
push
mov
movsb
es
add
mov
negb
enter
das
in
lock
adc
mov
dec
ljmp
adc
cmpsb
ljmp
add
and
pop
xchg
adc
lcall
loope
out
pushl
cmp
fldl
pusha
push
push
push
xchg
xchg
cltd
mov
popf
gs
insl
pop
cwtl
scas
ret
stc
lcall
icebp
sbb
xlat
ljmp
imul
jb
adc
test
add
xchg
sbb
dec
xchg
push
cld
inc
jnp
cltd
add
jp
shl
lahf
xchg
dec
push
stc
or
les
in
sbb
or
test
and
imul
fldl2t
cmc
outsb
mov
and
les
push
divl
xor
es
jnp
leave
adc
and
mov
dec
repz
mov
pop
xor
mov
sbb
push
push
inc
jno
sarb
mov
call
cli
mov
jp
cwtl
fbld
cmp
arpl
sti
shll
adc
xorl
mov
push
push
dec
pop
lcall
flds
xchg
mov
push
cmpsb
and
and
frstor
cmp
movsb
stc
ja
xchg
fistl
pushf
enter
fcomps
mov
popl
imul
bound
adc
lds
add
push
in
mov
pop
cwtl
pop
out
inc
loopne
icebp
rcr
fst
cmp
pop
lods
xchg
loope
cs
and
popa
add
sbb
cmpsl
sbb
push
rcrb
cmp
xor
frstor
aam
xchg
pop
fmul
orps
stos
shll
sbb
icebp
test
and
mov
cmp
sub
push
mov
adc
jp
mov
inc
sbb
mov
fsubs
sbb
pusha
std
jp
adc
or
daa
sub
and
aaa
push
jo
jo
js
lods
push
cmp
lods
xchg
xor
int3
jo
js
push
jns
adc
pop
fildll
inc
mov
mov
xor
jmp
inc
mov
daa
loop
mov
pop
adcb
sub
pop
out
xor
rcll
icebp
in
js
insl
mov
cmpsb
mov
and
imul
es
fnsave
mov
cmpsb
xor
jno
adc
cmpsl
push
sti
scas
add
inc
imul
inc
cwtl
cmp
mov
xor
scas
insb
jns
leave
xor
xchg
in
push
gs
or
mov
inc
leave
cmp
and
in
jns
jae
in
sub
cmc
lahf
sbb
xchg
or
push
lcall
xor
fsubrs
imul
clc
sub
inc
das
xchg
push
and
call
popf
icebp
jbe
std
dec
xchg
pop
push
dec
and
shll
sbb
mov
inc
cmpb
lods
push
sahf
mov
mov
int3
cmpl
jno
mov
rcrb
les
jecxz
sti
inc
mov
imul
mov
cmp
mov
fistpl
adc
movb
aaa
cmp
outsl
stc
fxch
cmp
inc
mov
push
sub
dec
sub
lret
fld1
lds
mov
cltd
sbb
fnstcw
adc
mov
sub
jg
iret
inc
sub
sbb
mov
push
imul
subl
loop
mov
mov
xchg
call
inc
fbld
cmp
movl
sbb
call
aaa
loopne
nop
js
aaa
and
mov
sub
mov
xor
mov
and
add
js
jbe
arpl
call
sbb
movsl
cltd
mov
ljmp
ja
shll
stos
outsb
pop
sahf
add
hlt
loop
jnp
insl
aad
flds
lds
outsl
test
test
xchg
jmp
mov
insl
int3
jnp
jno
loop
xchg
cmc
imul
xor
aas
test
jns
xchg
imul
or
push
or
inc
pop
fiadds
mov
cltd
loop
dec
and
jle
ja
jne
and
add
int
fwait
stc
inc
cmovae
insb
inc
int
xor
sahf
call
popa
ret
scas
sbb
add
xchg
inc
jmp
cmp
movsb
mov
sub
mov
inc
or
xor
sbb
and
cld
pop
mov
push
inc
rcrl
cmp
adc
cmp
mov
je
add
jge
inc
icebp
repz
push
jno
pop
outsb
xor
sbb
sar
loop
bound
lea
mov
xchg
xchg
ljmp
and
cltd
or
test
in
cmpsb
inc
cli
mov
roll
stos
insl
mov
push
xor
pop
xor
mov
xchg
sub
outsl
xchg
pop
popf
jns
popa
and
push
cmpl
mov
cltd
jl
out
movsb
test
pop
cmpsl
add
arpl
sub
cmpsl
pop
jbe
jne
or
mov
cmpb
jbe
leave
fsts
stos
add
sub
cmp
dec
xchg
add
mov
adc
daa
xor
pop
adc
cmp
inc
mov
pop
repnz
aad
dec
test
rcl
sub
sub
push
dec
and
inc
bound
sub
pop
mov
iret
sbb
lock
insb
icebp
add
rorb
jnp
ja
pop
push
stos
xchg
xor
out
lret
call
outsb
popf
data16
stos
dec
inc
ret
dec
cmpsb
inc
or
xor
xchg
add
mov
gs
ja
add
sbb
imul
push
mov
fucom
xchg
loop
push
mov
mov
push
push
outsl
stos
fadd
shrb
and
cwtl
xchg
add
sub
jns
dec
iret
push
dec
shll
mov
mov
int
enter
mov
movsl
stc
movsl
pushl
pop
shrl
sahf
pop
xor
xchg
dec
sbb
xchg
cmp
aad
sbbl
mov
shll
nop
mov
movb
and
iret
fldcw
rcll
scas
xchg
mov
and
aad
dec
daa
mov
lret
data16
push
cltd
mov
jp
mov
sbb
das
push
or
stc
and
push
aam
sti
inc
and
dec
and
jns
sub
fdivs
inc
pop
and
xchg
jb
daa
ret
sbb
insl
loope
or
mov
inc
movsl
out
dec
outsl
andnps
sbb
sub
es
jo
dec
loop
rorb
dec
incl
das
xchg
xchg
add
ror
xchg
pop
cmpb
repnz
stc
sub
push
ss
push
push
adc
push
push
xchg
lret
mov
mov
loop
mov
push
mov
cmp
add
imul
orb
sahf
jb
xchg
mov
lret
pop
shll
mov
testb
or
add
shl
push
in
popf
or
jecxz
mov
dec
cld
cmp
push
notl
shr
pusha
xchg
mov
hlt
push
mov
stos
imul
mov
jns
je
xchg
add
mov
jne
bound
dec
sbb
or
or
ja
add
mov
scas
jmp
cld
into
adc
push
testb
mov
lods
ss
fimuls
adc
add
jb
and
aas
sti
and
les
push
in
sub
xor
jmp
sub
fsubr
adc
insl
or
push
shr
xor
xchg
mov
mov
ss
dec
mov
inc
lds
cmp
fstpt
xor
pusha
je
std
jns
cmp
cwtl
je
jb
jp
inc
jp
js
jp
sub
mov
pusha
div
call
scas
cltd
ss
pop
sbb
mov
jns
mov
mov
gs
xor
enter
push
leave
imul
sti
mov
ret
jb
xor
and
xor
scas
and
cltd
ret
out
mov
mov
movsl
inc
imul
push
pop
sub
andl
pop
ja
mov
push
cmp
adc
or
sbb
add
push
pusha
mov
inc
in
jno
iret
cmp
ret
dec
push
xchg
loop
inc
sbbb
mov
movsb
pop
cmp
jge
pop
mov
pop
aad
cli
sbb
and
xchg
in
dec
iret
movsl
cmp
inc
push
dec
hlt
cmp
subl
or
imul
pop
pop
pop
call
cmp
les
lcall
out
push
dec
les
add
lret
iret
dec
mov
mov
sbb
cwtl
inc
mov
pop
lock
les
or
fcoms
imul
dec
mov
fiaddl
xchg
or
loop
mov
dec
pop
jp
mov
dec
loopne
inc
stc
jge
repz
loop
fimull
pushf
cmp
pop
rolb
leave
mov
in
mov
mov
repnz
shlb
jl
pop
movsb
int3
mov
push
mov
push
or
inc
and
jecxz
inc
test
lahf
jmp
or
mov
pop
mov
not
stc
add
add
xor
iret
nop
js
rcr
popa
adc
pop
xchg
add
or
hlt
add
call
test
pop
sub
dec
addr16
push
cmp
push
push
nop
mov
icebp
and
push
pop
call
insb
xchg
xor
loope
mov
loopne
vmovq
lea
testb
sbb
rorl
jae
stc
xor
sub
pop
cmp
loop
pop
sbb
mov
push
mov
adc
add
cmp
rorb
xchg
add
mov
test
push
sbb
jns
call
and
adc
or
mov
bnd
xor
dec
fidivrl
mov
mov
pop
shr
and
xchg
lods
xor
adc
and
jecxz
cli
pushf
popa
push
xor
and
xor
in
in
or
mov
adc
mov
insb
push
lcall
lcall
data16
cli
jno
movsl
mov
das
iret
popa
mov
loop
push
add
flds
stc
enter
gs
and
or
cmp
popa
pop
pop
cltd
les
lea
fsubrl
jl
xchg
or
mov
loop
push
xchg
repnz
add
mov
adc
dec
sti
mov
push
xor
daa
orl
push
push
or
in
cmp
cmp
es
repnz
pop
in
int3
mov
cld
in
movl
sbb
lods
mov
mov
lcall
test
add
into
push
xor
xchg
decb
sbb
sahf
mov
into
sbb
mov
sbb
xchg
cltd
addr16
xchg
mov
xchg
testb
xchg
or
addl
scas
cmp
lret
pop
mov
inc
dec
cmpl
setle
cmpsb
inc
jbe
mov
stos
movsl
lods
clc
pop
popa
mov
sub
add
pushf
data16
mov
adc
or
ja
daa
xor
rcr
in
inc
daa
mov
loop
push
cmp
in
push
adcb
mov
push
jmp
pushf
inc
xor
movsb
inc
mov
mov
gs
xchg
mov
inc
jecxz
testl
pop
mov
cmp
sahf
push
dec
es
es
inc
xlat
fwait
and
out
int
fistpll
and
sub
sbb
scas
andl
pushl
push
cmp
daa
cmpsb
inc
cmp
rol
sub
pop
sbb
cmc
sub
push
movsb
shll
fiadds
pop
in
mov
loope
pushf
pop
mov
je
or
and
les
sbb
xchg
sbb
lock
inc
loop
push
jle
push
daa
pop
fnstcw
sbb
ljmp
loop
je
shlb
cmpsb
pop
sbbl
jb
or
aas
and
lods
mov
xor
push
pop
fstpl
cmpl
fwait
sub
dec
or
mov
repnz
pop
imul
in
adc
sbb
data16
mov
dec
adc
and
mov
push
popa
xorb
cmc
adcl
xor
xchg
and
inc
or
orb
adc
cwtl
sub
lods
jp
add
add
pop
out
sbb
iret
jge
fsubs
pop
or
push
or
sbb
xor
push
pop
mov
mov
jae
xor
cld
jae
xor
clc
jae
xor
dec
test
mov
mov
lcall
sub
and
push
mov
ljmp
sbb
pop
xchg
out
loope
out
icebp
and
push
inc
out
ret
int
loope
loop
daa
push
xor
push
sbb
aad
push
rclb
inc
push
inc
add
inc
out
fs
cmp
xor
sub
sub
xor
call
lahf
jae
loop
jo
stc
ret
repz
gs
xchg
gs
icebp
insl
push
sbb
or
jb
lret
cmpsl
cmp
inc
imul
scas
push
imul
xchg
sbb
cmp
shll
nop
popa
mov
shrl
scas
dec
cli
ljmp
or
out
das
xor
xchg
out
sub
test
bound
mov
xor
sub
jne
jecxz
add
aad
sarl
dec
and
in
xchg
dec
jmp
movsl
pop
adc
adc
stos
xchg
sub
jno
div
popa
cmp
ja
xor
and
jmp
xor
mov
adcl
sbb
sbb
in
add
mov
sbb
shlb
xchg
xchg
sbb
mov
inc
or
mov
out
in
sub
movsl
push
or
das
sti
and
sub
loope
out
ss
std
mov
jl
add
add
dec
mov
mov
mov
cmp
int
addr16
and
mov
inc
in
mov
scas
mov
push
imul
lods
loop
sahf
mov
in
add
inc
std
xchg
pop
mov
add
fdivl
pop
fsts
mov
pop
push
push
mov
iret
xchg
or
push
mov
adc
fldenv
push
nop
les
js
dec
roll
aas
xchg
sub
xor
incl
push
dec
xor
scas
sbb
sub
rcrl
aas
push
lcall
sbb
popa
stc
notl
sbb
cmp
pop
int3
inc
mov
and
inc
sub
stos
enter
lcall
call
pop
mov
push
fnsave
aas
jne
mov
mov
mov
xor
shl
dec
aas
xchg
fcomi
stos
adc
fwait
std
ljmp
das
pushf
sbb
sub
pop
lea
mov
cmp
cmpsl
inc
adc
mov
insl
call
das
mov
stos
cmp
in
mov
adc
inc
xchg
pop
and
loop
mov
out
mov
sti
loop
popa
popf
lret
imul
movsl
add
add
scas
xchg
xor
xchg
lahf
aas
and
mov
fdivl
aas
and
int3
mov
sar
outsb
adc
pop
stos
fiaddl
addr16
xchg
jns
push
sbb
lret
aad
adcb
xchg
push
jmp
push
xor
repz
movsb
xor
adc
mov
lret
mov
divb
ret
sub
mov
aad
or
mov
dec
dec
mov
sarl
fistps
cld
repnz
cmovne
stc
aas
jne
loop
mov
aaa
sub
out
scas
cltd
mov
jno
fld
mov
hlt
jbe
jb
xchg
movsl
xor
lds
out
mov
xor
or
push
mov
maxps
mov
xlat
das
stc
adc
and
iret
dec
dec
in
out
xor
imul
sub
dec
mov
jbe
xchg
repnz
and
adc
loop
or
repnz
sti
xchg
and
fs
sub
sahf
push
aaa
scas
test
fldenv
fnstenv
gs
dec
ret
clc
or
mov
pop
add
outsl
mov
mov
inc
pslld
ljmp
and
and
mov
and
les
dec
stc
sbb
xchg
sbb
add
decb
es
push
xchg
loopne
mov
mov
sub
jp
sbb
push
xlat
dec
call
ss
jno
sub
push
shll
stos
mov
adc
push
aas
in
and
movsl
aam
sbb
je
ds
movzwl
and
pop
fidivl
sub
push
sub
mov
in
ljmp
ljmp
lea
std
push
cltd
inc
sub
arpl
adc
mov
mov
sbb
in
arpl
dec
xchg
addl
repz
mov
ja
lcall
push
sbb
cmp
mov
pop
sti
adc
lcall
and
or
nopl
lret
jno
lock
stc
push
push
fwait
fwait
out
stos
mov
mov
jae
and
sub
adc
stc
mov
mov
xor
leave
push
popf
adc
sbb
arpl
xchg
movsl
xchg
popa
mov
sbb
leave
dec
add
fidivrl
pop
push
es
repnz
sub
inc
adc
shll
adc
sub
cmp
hlt
dec
ljmp
scas
dec
inc
add
and
das
test
hlt
cmp
mov
aad
sbb
mov
xchg
pop
adc
mov
mov
mov
pop
mov
push
sub
xchg
loopne
or
xchg
add
add
mov
inc
lods
xchg
pushf
mov
pop
ja
add
push
jno
push
das
sti
and
ss
add
mov
mov
test
add
out
inc
movsb
lret
and
in
add
fwait
cmp
add
test
inc
jbe
and
dec
add
xchg
adc
fwait
pop
xchg
push
cmpl
outsl
sub
pop
lods
cmp
cmp
stos
pop
mov
inc
stc
push
push
arpl
sarb
loop
pop
push
push
jmp
cmp
hlt
xchg
mov
and
fwait
stc
ret
mov
jp
jg
loop
test
push
jno
inc
push
out
jg
das
push
js
aad
or
jmp
add
loopne
pop
loop
pop
dec
dec
fdivl
ds
sbb
shrl
shll
ljmp
out
scas
or
mov
inc
lods
shlb
out
mov
mov
sbb
sti
lret
xchg
fdivs
popf
mov
rcrl
sub
mov
or
pop
int
cmp
daa
dec
inc
mov
fidivs
xor
pusha
nop
fildl
mov
daa
out
mov
aam
hlt
insb
push
ret
mov
mov
lahf
inc
stos
gs
das
or
idivl
cmp
or
jg
movsl
dec
inc
cmp
mov
mov
shlb
xor
aaa
ljmp
mov
stc
loope
aaa
aad
dec
mov
pop
adc
fidivs
sub
xchg
cmp
sbb
inc
add
dec
xor
inc
adc
xchg
or
mov
xchg
xor
inc
pop
and
mov
xchg
test
stc
gs
inc
ficomps
imul
pusha
std
jb
pop
push
cmp
sub
loop
xor
xor
sbb
xor
sahf
mov
rorb
je
gs
int3
push
sbb
push
cmp
jne
sti
lds
cmp
mov
mov
mov
pop
out
daa
and
aaa
cli
ds
ret
in
or
lds
fcomi
sbb
mov
mov
leave
dec
cltd
pop
push
jecxz
clc
sbb
lcall
adc
sbb
cmp
adc
or
sbb
dec
in
outsl
or
mov
lret
sub
lds
inc
cmp
mov
push
mov
push
pop
mov
sub
call
mov
mov
mov
jp
cmc
mov
in
test
iret
xchg
mov
addr16
loopne
ja
aam
and
notb
inc
arpl
push
mov
push
pop
cmp
pop
fldenv
mov
lret
xchg
out
lcall
push
push
in
and
mov
aaa
arpl
xor
cmp
or
add
inc
add
ss
mov
mov
mov
mov
repnz
pop
divb
insb
pop
or
loop
push
lods
pop
add
push
sarb
shl
sti
popf
sbb
xchg
inc
sbb
fnstcw
lods
mov
inc
pop
mov
loope
xchg
and
pop
outsb
mov
cmp
es
lcall
xchg
in
push
sub
mov
xchg
stos
ljmp
aaa
lret
sub
in
push
adc
cld
pop
pop
xor
js
mov
mov
sbb
mov
nop
xchg
aas
xchg
xchg
sahf
sbb
bound
cmp
mov
js
or
add
add
pop
mov
rcr
rcll
icebp
sbb
dec
mov
fnsave
popf
sub
iret
push
cs
pop
shrl
pop
sbb
sub
mov
push
aad
push
sub
cmp
mov
cmp
mov
imul
popa
loop
dec
flds
ljmp
sbb
xchg
jns
sub
cltd
nop
mov
or
stc
lods
push
imul
rorl
and
cltd
sub
frstor
stc
and
aas
mov
enter
cmp
sbb
out
sbb
xor
or
scas
fnsetpm(287
adc
and
cmp
dec
cmpsl
outsl
je
jae
popa
jbe
mov
cmp
rcrl
and
xchg
aam
push
push
push
shlb
jo
rolb
jg
pop
xchg
sbbl
aas
and
and
mov
mov
xor
cmp
push
hlt
ud1
aas
imul
jne
ss
and
mov
mov
mov
mov
xor
movsl
scas
into
adc
or
testl
popa
jno
mov
int
dec
push
inc
shlb
push
mov
cmp
scas
mov
mov
stc
fidivrl
imul
int3
into
stc
cmp
mov
mov
xchg
int
mov
pop
mov
adc
push
xor
sbb
pop
cltd
or
sbb
dec
jl
jnp
or
xor
pop
jno
enter
pop
ret
xor
icebp
insl
sub
negl
xor
stos
in
xor
mov
aaa
mov
push
or
sub
mov
push
addl
and
or
adc
xchg
pop
in
cmc
insl
pop
in
out
cmpsl
xorl
dec
shlb
jg
sub
inc
test
mov
mov
pop
das
inc
mov
lahf
mov
dec
pop
daa
push
ret
cmp
mov
sub
testl
pushf
jns
aas
daa
imul
push
loope
xchg
add
xor
loopne
push
and
cli
add
jge
imul
cwtl
in
ret
dec
adc
push
rcl
repz
pop
shll
add
adc
clc
sahf
mov
jl
cli
jbe
add
aaa
pusha
stc
push
mov
sub
push
push
adc
std
fs
call
lahf
xchg
add
push
loop
lret
fidivrs
jae
xlat
cld
xor
push
stos
cmp
aaa
mov
xchg
add
enter
pop
push
das
sub
dec
das
push
cmp
jp
dec
mov
out
sbb
mov
jp
mov
sbb
sbb
xor
xchg
cli
repz
sbb
adcb
mov
daa
and
outsl
inc
ljmp
test
cmpsl
call
popf
pushf
inc
call
mov
xor
jns
add
pop
xor
loope
lcall
mov
mov
je
add
xor
xor
and
repz
mov
popf
sar
xor
sti
cmpsl
sub
or
mov
push
sub
hlt
repnz
pop
inc
ds
sti
out
cld
jns
pop
sub
dec
jo
mov
add
outsb
cmpsl
inc
jno
call
and
cwtl
in
loop
mov
dec
fmull
mov
fwait
push
lods
test
daa
shrb
fstpl
aaa
sbb
add
fildll
and
test
cmp
jbe
cmp
push
xchg
xchg
in
call
xchg
rcrl
add
and
and
in
mov
rorl
pop
push
sub
and
push
xor
push
das
pop
sbb
xorl
and
mov
in
iret
inc
pop
mov
dec
mov
mov
in
xor
aas
mov
push
imul
and
mov
pop
sub
adc
push
dec
push
in
xor
les
ret
in
leave
and
lds
aad
jp
int3
pop
mov
das
fsts
js
xchg
mov
sub
aam
sub
mov
pop
aam
jl
inc
xor
sub
sbb
xchg
call
or
xchg
jns
dec
in
push
jg
and
loop
and
inc
movsb
fsubr
sub
mov
popa
arpl
push
cmp
xlat
sbb
addr16
and
cmp
call
fsubrl
arpl
pop
adc
dec
pop
or
ss
mov
pop
xchg
loop
mov
test
in
xor
sbb
adc
sub
insb
mov
jbe
js
mov
add
mov
or
xchg
mov
arpl
inc
popa
mov
mov
sti
xor
popf
sbb
outsl
insb
fdiv
push
adc
lods
cmp
fsubl
lret
sti
mov
aaa
xchg
lock
xchg
clc
ds
push
push
stos
popa
and
adc
pop
sbb
fs
or
jmp
jns
daa
xor
push
mov
daa
or
pop
mov
xor
and
shll
fwait
mov
aad
stos
jae
cmp
sub
xor
add
jae
loope
xor
lea
xacquire
cmpsl
mov
mov
popa
and
aaa
popa
and
not
adc
stc
inc
mov
push
nop
pop
cmpsl
adc
sti
sub
loope
and
stos
mov
shl
and
sbb
push
lea
test
or
loope
shrb
mov
dec
movsb
imul
lret
jno
lret
and
mov
xor
sti
xchg
pop
fistl
test
inc
fucom
popa
lock
push
js
xchg
fcomps
addr16
pop
push
repz
shll
daa
stos
out
push
and
mov
scas
sub
cmp
mov
add
aad
scas
cmp
push
mov
xor
scas
gs
mov
mov
dec
pop
ja
int
aad
mov
jg
bound
scas
ja
addl
inc
xor
jb
or
dec
lds
arpl
dec
iret
je
pop
adc
mov
das
ret
scas
addr16
mov
push
mov
in
imul
add
jns
mov
mov
sbb
data16
xor
mov
mov
out
xor
cwtl
ja
push
and
sbb
ret
cltd
stos
and
arpl
lods
xor
lods
fisubl
das
jo
leave
mov
xor
adc
lret
fbstp
and
lock
xor
je
mov
add
xchg
repnz
push
sti
jae
push
adc
and
and
nop
xchg
and
lods
int
testl
hlt
aad
xor
loopne
and
aad
add
jno
or
jns
sbb
mov
add
pop
fnsave
mov
xchg
jno
xor
mov
mov
xor
and
and
or
xor
sti
adc
jp
mov
jbe
or
pop
or
mov
loop
insl
mov
cmpl
cmp
fisubl
jo
inc
seta
pop
sub
pushl
das
mov
and
xchg
push
or
les
lret
repz
movsb
add
inc
pop
pop
push
rclb
loopne
cltd
xor
in
mov
dec
cmp
xor
sti
xchg
push
mov
xchg
mov
aaa
lcall
iret
adc
and
in
cmp
sub
xor
out
das
sbb
sbbl
cmp
mov
popa
loopne
ffreep
and
daa
outsl
mov
bound
sbb
xor
and
ss
cmpsl
and
orl
out
xchg
and
out
shlb
cmp
je
add
call
and
fisttpl
adc
aas
adc
adc
aaa
stos
sti
insl
xor
and
jmp
mov
mov
jg
insl
das
divl
adc
fcmovu
mov
sub
jno
jns
sub
scas
push
inc
subb
cmp
sub
std
sub
ljmp
mov
fwait
sub
push
jl
insl
shrl
mov
mov
xchg
stc
outsl
mov
pop
test
mov
jge
mov
jecxz
adc
sbb
ds
push
or
jp
pop
es
sbb
sub
mov
push
mov
cltd
or
lods
inc
pop
dec
inc
insl
push
mov
mov
nop
pop
out
adcl
cltd
and
and
pop
sti
icebp
cmp
pop
out
outsb
sub
sbb
jbe
lcall
lret
push
push
popf
xchg
push
cmpsb
or
lahf
ljmp
lcall
inc
jne
fs
dec
xor
sbb
je
movsl
sub
popf
outsl
aam
mov
std
in
sub
enter
push
jl
shlb
out
inc
cmpsl
mov
loop
call
shrl
sbbl
mov
inc
jns
iret
xor
js
cltd
dec
jno
popf
mov
jl
adc
cmp
dec
ss
ss
add
lcall
addr16
sub
mov
imul
andl
lea
lcall
mov
ret
sbb
ja
jmp
movsb
jl
shrl
mov
imul
push
jbe
push
shlb
xchg
sbb
jl
cld
mov
xchg
imul
cmp
imul
xchg
mov
add
fnsave
and
cmp
and
adc
orb
addr16
pop
cs
insl
xchg
popf
push
cltd
add
mov
dec
int3
add
inc
mov
sub
and
jmp
fs
push
lods
mov
shrl
gs
or
xor
in
mov
bound
ljmp
lret
loop
in
sub
nop
mov
mov
pushf
pusha
loop
pop
sbb
out
cltd
pushf
mov
addr16
arpl
mov
cmpsl
outsl
pop
imul
std
lahf
cmpsl
test
sahf
call
add
fwait
mov
outsb
inc
fneni(8087
mov
fsubr
js
loope
mov
xchg
adc
loop
add
in
cli
xor
pop
stos
cmp
mov
js
lods
cmpsl
push
inc
scas
xchg
lcall
and
das
and
pop
mov
inc
dec
mov
xchg
add
popa
cmp
popa
mov
imul
iret
lret
jmp
jne
add
icebp
ret
xchg
lods
cmp
ds
pmullw
jno
in
cmp
xchg
mov
outsb
xor
mov
or
mov
adc
push
and
cltd
mov
mov
popa
sbb
cmpsb
add
mov
cld
sbb
hlt
int3
jnp
je
cli
inc
bound
adc
sbb
jae
mov
nop
scas
movsl
decb
stos
add
enter
sub
mov
in
mov
xor
sub
or
sahf
push
pop
fwait
inc
lods
jno
xchg
sub
or
clc
sub
in
or
mov
pusha
push
jecxz
dec
incl
add
call
pop
cltd
push
add
push
iret
jl
clc
xlat
mov
jp
mov
and
pushf
pop
push
sbb
and
push
popf
popa
shr
std
pop
lds
pop
xlat
cmp
dec
sahf
sbb
je
and
fwait
nop
mov
test
call
push
mov
out
out
add
xor
xchg
jge
and
pop
or
leave
mov
in
push
xor
mov
rcl
xor
mov
in
insl
pop
mov
push
sbb
mov
jecxz
jo
repz
inc
mov
addr16
adc
inc
imul
cltd
stc
mov
mov
xor
mov
sub
mov
outsb
stc
jo
pop
outsl
mov
lret
pop
or
push
add
mov
and
aam
es
cmp
sbb
mov
and
mov
sbb
push
pop
sub
xchg
pop
mov
inc
and
or
fisttps
repnz
cmp
xor
push
mov
scas
cmc
jmp
cltd
dec
sub
pop
add
cwtl
xchg
aam
jmp
imul
mov
enter
mov
mov
mov
jno
in
adc
loope
cmp
scas
mov
xor
xor
add
cld
mov
cltd
sub
aam
mov
xorl
or
adc
and
popf
xor
push
mov
dec
stc
popf
ret
mov
lcall
test
push
push
call
jp
popf
pop
mov
xchg
pop
add
pop
pushf
aad
or
mov
mov
int3
rcrl
leave
mov
scas
and
fnstcw
push
imul
inc
mov
push
sbb
and
jge
int
or
cld
ljmp
mov
pop
cmp
and
bound
stc
fwait
xor
test
sub
sub
xor
and
add
and
ds
push
ds
xor
shl
push
repnz
cmpsl
xor
jmp
inc
and
repnz
sbb
mov
shll
fistpll
loop
inc
lds
sub
stc
xchg
and
andl
push
je
cli
xlat
out
sbbl
adc
les
sub
xor
and
stc
cmp
xor
std
mov
xlat
mov
jge
std
xor
and
and
jp
clc
lea
and
popf
xlat
and
js
mov
hlt
or
imul
mov
xchg
lock
aaa
out
xor
scas
inc
lods
mov
mov
jb
cmpsl
adc
stos
mov
addr16
cwtl
adc
cmpsb
add
shll
fisttpll
push
mov
add
dec
aas
lahf
and
clc
jne
dec
iret
mov
xchg
and
xor
push
dec
nop
iret
stos
ret
cmp
sbb
scas
mov
insl
psubusw
jo
jle
out
ljmp
imul
xor
movsb
arpl
loop
sbb
mov
and
xchg
mov
clc
cltd
mov
mov
or
jge
shl
dec
addr16
rorb
icebp
mov
inc
les
test
sbb
inc
imul
xor
std
pop
cmp
mov
mov
mov
mov
int
rcll
sbb
xchg
and
xchg
pop
push
pop
shlb
xchg
inc
xchg
shll
cmc
lods
add
outsl
nop
shl
scas
jo
bound
jp
mov
sti
mov
lods
insl
call
out
jno
sti
xchg
sub
mov
fistl
sub
fwait
cmp
fimuls
adc
outsl
aas
xor
pushf
jmp
cld
cmp
pop
ja
ss
or
fs
mov
pop
sbb
mov
outsl
nop
mov
cmp
push
cmp
mov
into
cmp
and
jno
xchg
dec
sbb
adc
jp
in
sbb
lret
mov
push
cs
mov
push
cmpsl
jno
lods
dec
mov
imul
hlt
dec
in
mov
fldl
mov
lds
out
negb
lcall
mov
loop
ljmp
cmpsb
mov
addb
out
idivl
inc
cltd
push
mov
xor
insl
jge
shl
push
or
aam
and
mov
aam
pop
rcrl
mov
rcl
ljmp
push
cwtl
lods
xor
mov
push
dec
xor
jo
xor
xchg
pop
pop
popf
out
dec
gs
push
jmp
jae
sti
fdivl
dec
in
fimuls
jge
ror
ret
gs
cmp
aaa
xchg
push
ljmp
xchg
sub
rcll
lea
push
stos
adc
fadds
test
sbb
call
mov
and
fsub
mov
jl
pushf
fimull
mov
sub
arpl
or
loop
addr16
out
insl
mov
mov
fdivrs
es
inc
pop
cltd
add
or
pop
adc
cltd
insb
adc
pop
and
xor
push
sub
and
pop
inc
mov
inc
int
lcall
ret
push
jmp
jp
test
add
push
mov
push
out
enter
mov
xor
adc
sbb
popf
adc
or
sbb
xchg
cmp
sbb
jno
cmc
cmp
add
addr16
adc
dec
xchg
mov
test
imul
ss
jno
mov
int
sbb
xor
push
cmpsb
pusha
cmp
jb
test
mov
cs
and
adc
fnstsw
movsl
cmp
sbb
adc
jns
cmp
dec
dec
test
mov
jno
addr16
loop
cmc
stos
test
mov
in
lods
inc
out
stc
js
sahf
cmp
xor
aad
in
fcoml
js
pop
and
in
int3
stos
jl
and
lahf
and
adc
push
jns
lea
or
cmp
xchg
pusha
sti
ds
insl
pop
add
pop
push
mov
shlb
les
pop
jmp
insl
pop
dec
pop
ds
mov
adc
cmpsl
fcmove
xchg
jb
inc
xor
or
pop
jbe
mov
pushf
inc
jecxz
xor
sti
mov
mov
xchg
sub
shlb
sbb
arpl
xor
ss
jb
cltd
fnsave
lahf
inc
scas
push
push
dec
push
push
cmpsl
xchg
sub
jno
pop
lret
hlt
inc
daa
scas
sub
sub
cmp
sbb
inc
adc
and
outsl
loopne
inc
xchg
jle
pop
cltd
es
push
pop
cltd
sar
push
mov
scas
pop
xor
push
scas
loopne
dec
out
popa
sub
xor
sarb
jo
xor
adc
scas
mov
shll
outsl
dec
int3
xor
in
fistps
loopne
gs
xor
mov
jae
fsubs
sti
movsb
nop
jno
jl
mov
xchg
je
sub
or
popa
and
sub
sti
shll
dec
sub
add
cmp
sub
xchg
push
outsb
lret
adc
mov
loope
jno
arpl
mov
out
xchg
lock
subb
cmp
mov
fwait
aas
and
repz
and
int
movsb
popa
push
cmp
mov
popa
jne
leave
outsl
gs
and
out
mov
ss
std
adc
lods
rcr
xlat
sahf
fimuls
and
sub
xchg
scas
sbb
mov
xor
dec
pusha
push
xor
inc
pop
adc
or
call
sti
push
nop
sahf
pop
xor
es
sub
cli
push
add
mov
imul
dec
mov
push
fsubr
xor
jno
iret
fcomip
cwtl
loop
cmp
in
icebp
cmp
mov
int
jmp
call
cmp
daa
lahf
clc
insl
imul
and
lahf
fsubl
shrb
lods
mov
xor
sbb
add
mul
popa
test
lods
and
loop
rolb
and
cmp
and
cltd
xchg
insb
or
clc
xchg
movsl
daa
cli
inc
and
loopne
addr16
loope
jecxz
push
test
sbb
ss
mov
xlat
mov
jnp
out
and
mov
push
sbb
push
push
enter
cmp
je
fisubs
lcall
mov
icebp
push
cltd
jl
mov
test
cli
push
sbb
gs
cmpsl
push
loopne
ss
jne
gs
pop
jnp
sti
push
in
arpl
cmc
jmp
std
dec
int
jecxz
push
and
mov
sub
mov
pop
mov
ficomps
push
cmpsl
and
cltd
lahf
fwait
sub
push
daa
mov
xchg
or
push
adcl
loope
and
or
push
inc
movsb
mov
pop
aas
call
hlt
mov
pop
xadd
push
add
aad
jae
mov
xchg
xchg
sub
xchg
sub
fiadds
mov
xchg
xor
pop
sbb
add
push
mov
cmc
or
mov
stc
pop
mov
mov
cmp
and
cmp
mov
mov
popa
insl
es
cmp
loope
lds
xor
ficoml
sbb
dec
lock
mov
mov
aaa
enter
push
in
jno
out
push
and
mov
lods
stc
xchg
jmp
hlt
xor
and
cmp
dec
orl
daa
mov
mov
pusha
jo
divb
xor
jp
adc
sub
or
fcoml
pop
jge
mov
fwait
ja
xchg
mov
fucomp
fwait
pop
jns
add
or
inc
mov
clc
pop
loop
lret
push
add
or
cmp
test
pop
jno
mov
adc
iret
sbb
or
lcall
xor
pop
adc
mov
ljmp
mov
add
rcrl
push
leave
xchg
pop
mov
mov
mov
pop
and
loopne
adc
cmp
bound
add
xchg
mov
sub
add
iret
mov
sub
scas
icebp
lock
mov
pop
fdivs
sti
add
sub
mov
out
lcall
lahf
cltd
pop
push
mov
outsb
jns
call
popf
fyl2xp1
aas
and
and
fdivl
pusha
sti
out
rcrl
and
push
xor
cmp
fisttpl
and
adc
sub
sub
sarl
sub
aaa
fucomp
in
stos
outsb
iret
dec
insb
pop
xor
push
adc
and
and
pop
clc
cmp
dec
pop
adc
loope
or
mov
nop
xchg
mull
jb
xor
xchg
in
loope
imul
fisubrl
fldcw
cwtl
les
add
add
lcall
inc
push
sub
fsts
push
sbb
shr
cmp
lods
jp
sub
mov
jns
dec
ljmp
loope
cli
jecxz
and
mov
in
adc
mov
pop
leave
loopne
and
mov
and
push
bound
jno
dec
outsb
mov
loop
aam
lea
sbb
imul
inc
hlt
cmpl
pop
scas
popf
mov
call
fnstcw
ljmp
push
jno
inc
out
cmp
lahf
dec
popf
in
mov
adcb
sbb
xchg
and
xchg
inc
push
inc
xor
repnz
push
in
jno
iret
mov
add
push
mov
mov
loop
or
icebp
sbb
inc
test
push
scas
xor
mov
cmp
and
pushf
inc
loop
sbb
call
push
push
fs
xchg
fisubl
lods
test
cmpsl
jg
push
icebp
mov
movsl
sub
mov
sub
inc
loop
fildll
or
mov
sti
sysret
aaa
pop
mov
xor
stos
ja
add
mov
mov
cmc
mov
inc
cs
push
jp
push
mov
fldcw
loope
out
xchg
push
imul
sbb
inc
mov
cmpsb
pop
sub
fisttps
xchg
out
repnz
ficoms
adcl
les
shl
add
pop
mov
add
add
xor
mov
out
dec
outsl
clc
cmp
test
sbb
insl
sahf
xor
mov
pop
dec
xchg
sbbb
cmp
and
gs
jne
jno
loope
xor
out
shll
mov
mov
pop
sar
test
pusha
mov
sbb
xchg
repnz
andl
js
sub
cltd
lret
mov
in
push
xor
cmp
mull
pop
addl
es
adc
mov
iret
mov
fldt
rcrl
inc
addr16
loopne
jno
sub
or
cltd
test
sbb
aad
mov
mov
mov
adc
mov
or
pop
mov
sti
cltd
sub
mov
ficoml
cmp
mov
push
loop
out
cmp
cltd
rcll
pop
roll
sub
ja
mov
push
shrb
imul
in
xchg
push
or
inc
or
push
scas
dec
stos
cmpsb
mov
mov
pop
jg
jmp
insl
pop
cmp
mov
mov
sarl
rcrb
jle
ds
lea
xchg
mov
adc
add
dec
cmpl
mov
xor
dec
scas
movsl
int
ficoml
mov
xchg
data16
test
loop
mov
mov
xchg
sti
fstl
cltd
rorb
jbe
inc
loopne
rcll
pop
in
adc
cmp
adc
add
lock
pop
mov
jne
cltd
je
sub
mov
pop
mov
pop
in
jb
sbb
adc
lret
sbb
lods
adc
subb
out
jnp
popa
and
add
arpl
imul
sub
dec
xchg
mov
in
add
mov
insb
fstpt
daa
sub
or
fnsave
xchg
sbb
sub
in
leave
mov
shrl
sahf
insb
mov
out
xchg
adc
les
mov
push
lods
jo
fstpt
int
push
into
int
cwtl
test
out
sbbb
mov
repz
cmp
and
mulb
xor
sub
fcoms
hlt
rcll
andl
or
xchg
popf
sub
loop
outsl
cwtl
int3
lea
or
sbb
xchg
aas
bound
outsb
push
mov
adc
mov
stc
shll
jno
push
jp
lods
jle
pop
daa
fisubs
push
or
inc
lret
loope
mov
test
mov
insb
or
jge
jmp
test
xchg
sbb
loop
jle
and
sbb
mov
adc
adc
iret
xchg
mov
aaa
ret
adc
mov
pusha
outsb
popf
dec
mov
lret
cltd
std
mov
addr16
xchg
inc
adc
pop
lods
loope
imul
mov
sub
and
push
cmpl
push
clc
mov
sbb
jb
stc
fldenv
cmp
shll
jo
jo
inc
mov
adc
mov
sub
popf
iret
push
sbb
ja
dec
xchg
adc
test
fistps
jb,pn
loop
cmpsb
pop
and
mov
or
xchg
imul
ret
or
jge
fs
push
add
aad
stc
dec
xchg
sbb
mov
adc
cmp
loop
push
outsb
loope
push
arpl
cmp
test
and
frstor
inc
addl
leave
cli
inc
cltd
loop
push
inc
int3
dec
cltd
out
push
inc
xor
pop
mov
push
popa
xor
pop
stc
xor
xchg
push
adc
popa
cmp
lock
mov
cmp
jg
pop
mov
sub
lea
popa
cmp
lcall
mov
pop
mull
push
aaa
loop
or
pop
pop
inc
dec
pushf
imul
les
outsb
jns
cmp
int
pop
fstps
jb
mov
lahf
lods
cld
jno
adc
jne
std
in
test
inc
pop
and
jbe
fldcw
xorb
negb
mov
mov
pop
std
dec
cld
ja
push
push
loop
sub
fptan
jne
push
loop
lds
xchg
shll
add
or
testb
aaa
mulb
push
xchg
or
fwait
sbb
xchg
and
mov
sub
cmp
jb
mov
xor
mov
sbb
sbb
loope
pop
repz
negl
adc
cmp
mov
push
adc
imul
ret
sub
xchg
jb
xchg
stc
xor
pop
cmp
mov
dec
pop
jne
xor
mov
adcb
out
adc
adc
arpl
movsl
sti
mov
ja
flds
adcb
cld
mov
xchg
std
cmpsb
adc
adc
pop
shrb
push
sbb
cmp
js
iret
mov
xor
push
inc
inc
outsl
xor
sub
add
sti
push
rcr
popf
test
xor
sbb
fsubp
fnstcw
mov
adc
push
cmp
inc
push
inc
lods
mov
lret
add
jne
mov
xor
add
cmp
dec
cs
lahf
inc
and
les
sbb
pop
shrl
inc
inc
jae
and
das
xchg
and
hlt
sub
stc
ror
inc
lret
inc
data16
jb
cmp
push
sub
adc
push
adc
push
sub
pop
xor
jns
mov
bound
adc
std
and
imul
adc
aas
sbb
mov
dec
pop
cmpsl
mov
inc
or
inc
aad
cmp
and
stos
fwait
inc
flds
cmp
out
xor
push
pop
and
push
movsb
or
push
jno
fwait
cmpsl
cltd
ljmp
and
imul
call
jmp
cmp
jno
pusha
cs
cmpsl
cmp
lods
hlt
xor
gs
mov
orl
imul
sub
inc
stc
push
and
xor
mov
into
push
out
in
loope
push
mov
mov
pop
mov
insb
call
outsb
fs
mov
xor
adc
cmp
jae
lcall
mov
push
xchg
sbb
cltd
adc
sti
cmp
stc
and
push
shlb
and
outsb
add
popa
in
mov
mov
loop
mov
std
cmp
cs
sub
rcrb
add
loop
pusha
pop
insb
push
inc
mov
adc
xchg
push
jmp
movsl
sbb
cpuid
les
ret
pop
outsl
inc
jo
sti
mov
pop
or
jno
xchg
cmp
lret
lret
call
cmp
xor
xor
popa
and
stos
xor
pop
sbb
add
loopne
mov
sbb
mov
scas
mov
inc
mov
sbb
test
jb
insl
adc
cld
fstpt
jae
and
fwait
inc
insb
nop
lds
and
xor
movsl
nop
lods
xchg
adc
sub
es
mov
adcb
xchg
ljmp
add
pop
pop
xor
cmpsb
insl
xchg
imul
and
mov
pop
sub
ret
mov
and
mov
and
and
mov
pop
mov
cmp
repnz
mov
xor
dec
gs
mov
insb
xlat
mov
into
mov
les
mov
pop
aam
ljmp
cmc
in
rclb
repz
cmp
div
dec
pop
cld
inc
mov
jo
ss
and
inc
leave
jbe
inc
std
pushf
mov
sbb
mov
ret
ds
loopne
pop
test
rep
xor
test
jle
lcall
add
test
outsb
add
cmpb
inc
fs
and
sub
fstps
jae
iret
std
inc
inc
push
add
loop
mov
out
sbb
mov
call
mov
mov
ror
inc
cmp
xor
xchg
rcrl
mov
cmp
push
xor
push
and
fcomps
jecxz
movsl
test
fadds
aad
adc
xchg
sbb
push
or
jns
cld
fistps
push
pop
pushf
jns
lcall
push
jno
mov
push
mov
stc
sub
imul
sub
ds
enter
enter
mov
cli
jns
cmp
lock
fists
js
push
cmpsl
push
xchg
lds
iret
mov
outsb
xor
stos
inc
cld
out
imul
mov
mov
push
stos
inc
inc
mov
fs
call
mov
testb
roll
or
xor
xor
popf
out
mov
push
jl
shrl
scas
test
shr
mov
mov
jns
cmc
mov
les
pop
fdivrs
mov
in
sub
test
fnstcw
dec
mov
ds
shll
sub
aas
adc
out
cs
push
sub
stc
xchg
call
fldt
cmp
adc
mov
mov
inc
jp
imul
ret
popa
or
lret
cs
sbb
ja
mov
sub
mov
inc
xchg
xor
xchg
xchg
inc
cwtl
sbb
out
pop
fbstp
adc
push
xor
jmp
push
xchg
cmp
sub
ror
insl
sbb
fwait
bound
sub
mov
das
cs
insb
js
sub
lahf
mov
cmp
mov
popf
xor
lcall
fwait
sbb
cmp
dec
gs
sbb
ja
jo
cmp
fwait
sbb
and
xor
and
cmp
addr16
mov
rclb
stc
lcall
aam
test
xchg
mov
mov
add
rolb
sbb
and
lock
jle
stos
mov
sub
mulb
push
mov
pop
mov
mov
fimuls
andl
adc
xchg
sub
pop
sbb
xchg
test
adc
stc
loop
sub
cmpsl
hlt
out
popf
cmpsl
mov
lahf
cmp
jne
loop
mov
cmc
mov
dec
mov
xor
test
pop
and
or
out
pop
movsl
xchg
push
xchg
dec
mov
add
jns
cmp
mov
pop
dec
das
dec
notb
inc
arpl
push
sahf
lcall
cmp
gs
cmp
jnp
pop
sbb
jb
cltd
mov
sbb
mov
push
mov
ja
ret
sbb
and
sbb
xor
das
push
sub
adc
dec
xor
xchg
sub
test
das
and
adc
es
or
pop
cmp
das
popf
pop
imul
mov
arpl
lcall
cmp
xchg
push
inc
leave
sbb
or
xor
daa
dec
adc
and
add
dec
sbb
xor
jl
cmp
sub
sahf
sbb
pop
rclb
in
lods
rolb
push
lods
or
stc
mov
inc
pop
or
pop
pop
push
inc
repnz
inc
sahf
fcmovb
push
add
adc
mov
andb
into
mov
inc
jg
andb
call
sbbl
cmp
int
lods
pushf
aad
dec
xor
inc
popf
xchg
adc
fidivs
jbe
xor
jns
stos
xor
cmp
push
pop
cs
mov
mov
icebp
sbb
cwtl
loop
adc
sub
sub
cmpsb
andl
dec
xor
push
pop
mov
push
mov
adc
adc
test
pop
inc
inc
mov
sbb
mov
nop
adc
adc
es
add
sub
call
sub
sbb
fwait
pop
pushf
and
fisubl
lods
sarl
shlb
test
or
popf
mov
inc
push
sub
ret
adc
inc
lods
jmp
mov
movsl
xchg
out
and
sbb
and
loop
mov
daa
pop
mov
jg
cs
popa
in
and
pop
cs
jae
cmpsb
push
jo
jb
xchg
xor
scas
or
lock
add
inc
push
push
sbb
or
add
xor
nop
adc
frstor
sub
xor
dec
jno
push
sbb
mov
push
mov
orl
xacquire
sub
jp
sbb
and
sub
bound
or
rclb
pop
cmp
pop
mov
xchg
push
insb
mov
into
adc
and
sub
and
or
bound
and
aas
fwait
xor
and
sti
sub
xor
and
orl
sub
sbb
out
pop
out
ds
xchg
lahf
adc
or
sbb
pop
aaa
lahf
xchg
and
roll
es
mov
inc
lods
push
cmp
cld
cltd
cli
int
movsl
sahf
aam
push
sub
sub
inc
jae
outsl
add
inc
repz
push
mov
inc
addr16
loope
iret
das
adc
mov
mov
sbb
lods
test
and
xchg
mov
test
packuswb
inc
in
push
mov
test
mov
and
cmc
mov
and
lret
add
mov
scas
cmc
rcr
pop
push
push
sub
push
xor
cmpsb
mov
fnop
popa
imul
rcrb
aas
movsl
mov
imul
movsb
and
jmp
push
es
push
dec
addr16
lcall
gs
mov
aaa
out
popf
sub
mov
into
pop
dec
enter
and
and
mov
stos
imul
jo
push
xchg
ljmp
fisubs
fadds
out
loop
repnz
cmpsb
sahf
cmc
fnstsw
ja
pop
push
cmp
mov
imul
xor
cmpsb
arpl
jne
mov
mov
cmpsb
ds
shlb
cli
out
aam
adcb
pop
sbb
mov
xor
test
inc
xor
inc
push
pop
adc
sbb
sub
mov
mov
icebp
pop
xchg
or
mov
in
jmp
inc
test
xchg
adc
jge
xor
popf
cmp
mov
xchg
pop
jno
mov
fwait
lock
lods
jno
mov
sbb
xor
xor
mov
and
fnstenv
pop
orl
and
adc
sub
outsl
and
movsb
shll
mov
sub
cs
or
ret
ret
mov
addr16
xchg
sbb
outsb
and
or
sub
mov
mov
sbb
loope
adc
popf
mov
add
fwait
imul
into
mov
fldenv
sbb
or
and
sub
sub
mov
jbe
test
xchg
test
clc
mov
das
jo
movsl
movsl
jno
xchg
and
adc
add
pop
jle
test
xor
pop
sbb
dec
mov
jne
jmp
mov
ficomps
bound
inc
and
jo
xchg
pop
adc
push
aad
lret
movsl
dec
pop
and
test
std
sub
cmp
fucomp
lods
dec
cwtl
lret
jns
ret
or
pop
jne
pop
lcall
push
sub
sub
dec
shrl
pop
call
or
loope
push
or
sub
and
enter
sub
mov
or
xor
je
pop
cmpsb
jae
pop
cmp
cmp
adc
insl
mov
fsubs
jns
or
cmc
lcall
lds
popf
lcall
into
shll
outsb
adc
jno
lcall
cmp
addl
stos
mov
cli
add
in
cmp
xchg
movsb
push
push
mov
addr16
dec
loop
fwait
sub
rcll
ljmp
sbb
test
cmp
les
mov
stc
or
imul
out
lret
cwtl
push
repz
xor
sbb
push
das
mov
mov
xor
add
lea
loope
lahf
adc
jb
pop
or
xor
call
dec
aas
cmp
mov
cmpsl
shl
hlt
xchg
call
pop
cmpsl
xchg
push
dec
push
nop
push
ja
fistl
leave
push
mov
iret
xchg
jne
cmp
movsl
dec
movsl
inc
ja
pushf
stc
cmpsb
push
inc
push
dec
inc
inc
xchg
iret
and
das
mov
icebp
testb
int3
lcall
out
bound
xor
xor
mov
jp
jnp
popf
dec
mov
stc
out
mov
jo
mov
sar
sub
loop
loop
out
adc
jns
mov
mov
das
mov
repnz
mov
int
sbb
push
inc
clc
ret
repz
xchg
ja
mov
repnz
cmp
lahf
leave
sbb
mov
xchg
pop
arpl
push
loop
in
mov
push
loope,pn
push
fwait
xchg
mov
add
out
fsubl
xchg
or
pop
loope
addb
std
hlt
data16
xchg
in
jns
popf
mov
cmp
outsl
mov
lcall
shl
clc
icebp
pop
icebp
subl
or
lds
mov
mov
es
push
cmp
push
insb
ficoms
insl
push
jb
mov
mov
mov
add
in
sarb
lods
movb
addr16
leave
bound
and
mov
sbb
and
cmpsb
or
movsl
pop
and
cmc
cmpsl
call
fidivl
out
jns
sbb
mov
lods
xor
jae
loop
lea
mov
add
sarl
push
push
jne
test
mov
jns
subl
mov
enter
sbb
xchg
push
sub
aad
mov
lds
dec
mov
push
pop
gs
mov
fbstp
aaa
xchg
sub
cmp
cmp
daa
das
in
xchg
outsl
mov
pop
push
jb
fldt
pop
jp
mov
addr16
sbb
mov
mov
cmpsb
mov
rcll
add
int3
mov
lock
push
loop
mov
popf
push
or
in
sbb
and
in
cmp
aam
pop
test
push
and
repnz
pop
sahf
adc
adc
iret
sub
repnz
sbbl
es
mov
arpl
enter
in
ret
out
out
add
mov
jne
xchg
lods
adc
test
xchg
pop
push
add
xchg
dec
dec
sarb
mov
dec
jecxz
or
push
inc
loope
push
jne
sub
fimull
pop
ja
int
es
xor
mov
mov
add
imul
xchg
push
cmpb
xchg
mov
call
push
xor
scas
push
enter
sbb
stc
jo
xor
jb
ffree
icebp
rclb
pop
dec
xchg
in
jbe
push
repz
loope
pop
hlt
loope
push
shll
fildl
mov
xchg
xchg
imul
cmc
or
xor
add
sub
jg
mov
xchg
pusha
or
dec
xchg
loope
cmp
mov
dec
das
mov
nop
mov
arpl
and
fldenv
and
loop
cmp
je
in
sub
out
test
sub
xchg
ret
fimuls
jb
sti
and
decb
iret
and
xchg
addl
sub
and
enter
jns
adc
sbbb
cmc
xlat
pop
cmp
shr
std
adc
inc
cmp
pop
cmp
loope
dec
outsl
add
sbb
mov
push
cmp
pop
lret
xor
sub
aaa
jne
mov
mov
test
lds
inc
cmp
mov
movsl
xchg
outsb
push
cld
inc
into
push
push
shrl
adc
inc
cmpsl
sub
push
pop
cmp
inc
dec
xor
test
dec
test
cmp
pusha
stos
cmp
jnp
cmp
xchg
jno
insl
fstps
mov
sbb
mov
push
jno
mov
push
pop
mov
mov
mov
hlt
jge
pop
push
arpl
addr16
repnz
fists
das
mov
scas
mov
mov
shlb
cmpsl
call
fisubrs
mov
add
pop
cmpsl
add
cmp
mov
pop
sbbl
xchg
pop
int3
pop
stc
cmp
push
mov
into
in
xchg
ljmp
jbe
roll
int
mov
and
pop
fsubs
test
loop
shr
or
sarl
sub
test
movsl
push
and
shl
adc
addr16
sbb
cmpsb
imul
in
mov
jb
imull
ja
mov
cmc
rcrl
aaa
cmpsl
mov
push
test
pop
pop
xor
cmc
ss
xchg
cmc
stc
cmpsl
xor
dec
and
pop
mov
pop
mov
fnstcw
addr16
push
stc
nop
ret
mov
into
dec
jbe
sub
mov
sub
pop
adc
pop
addb
leave
das
xorb
xor
mov
or
and
sub
addr16
jge
mov
popa
pop
fs
int
xlat
mov
out
dec
daa
push
cmp
sub
jno
out
rol
sti
inc
lcall
subb
lret
fisubrl
sbb
les
xchg
xor
adc
cmp
push
pop
xor
addr16
mov
arpl
popa
pop
sbbb
call
sub
loope
xchg
enter
int
xchg
mov
cltd
push
and
sbb
dec
fbld
xor
leave
dec
loope
xchg
mov
and
addr16
xor
or
scas
and
popf
aad
cmp
add
or
in
or
outsb
mov
lea
arpl
push
xor
mov
lea
mov
mov
mov
push
and
push
add
sub
sub
mov
add
push
mov
pop
pop
mov
adc
push
call
pop
sahf
mov
es
pop
hlt
int3
popa
pushf
idivb
cmp
cmp
jle
pop
mov
xchg
adc
call
sti
scas
pop
xchg
sbb
popl
jbe
xor
jns
xchg
dec
sbb
push
xchg
or
xor
mov
xchg
mov
dec
mov
jb
mov
xor
stc
mov
mov
fcom
mov
sub
cmp
jnp
adc
push
jns
hlt
jg
lret
les
cmp
aas
cmp
xor
sub
jne
mov
or
insl
daa
or
int
fisubrs
sbb
aaa
and
lods
test
jmp
push
lahf
cmp
arpl
mov
sbb
jp
ss
in
cmc
ss
add
inc
lea
fwait
addr16
sub
enter
int
ljmp
pop
sti
out
sbb
in
sub
inc
stc
mov
insl
outsb
cmpsl
push
sub
movsl
push
mov
adc
sub
insb
sbb
sbb
push
push
pop
sbb
and
jo
push
mov
jbe
and
pop
or
xchg
inc
adc
sub
push
and
in
and
adc
aas
cmp
aad
pushf
iret
rcl
push
addr16
mov
inc
jae
mov
mov
ret
pop
pop
lods
imul
sub
aad
mov
dec
aaa
xchg
cmp
adc
sbb
lcall
push
push
test
fmul
add
and
sbbb
sti
negb
jmp
xor
iret
cmp
cld
push
jecxz
cmp
jge
sbb
mov
mov
outsb
popf
push
cmp
dec
jecxz
out
mov
xor
ljmp
jno
adc
hlt
add
xor
sbb
and
jns
jo
xchg
test
test
push
adc
imul
cmpsb
ss
out
movsb
sti
mov
loop
std
inc
xor
mov
fstps
fnsave
lock
jnp
jns
setnp
xor
mov
sbb
adc
push
sub
into
jg
xchg
sbb
sbb
push
mov
daa
jns
mov
ret
inc
add
ds
popf
ret
xchg
push
inc
cmp
pop
inc
mov
mov
insl
sbb
push
push
loope
inc
jbe
push
test
test
mov
in
cmp
and
xor
outsb
cwtl
aad
adc
fnstcw
cmp
popa
loop
arpl
mov
mov
cmpsb
xor
loop
mov
push
sbb
loope
cwtl
icebp
and
pop
aaa
cmp
shll
inc
xor
and
xchg
lcall
repz
xor
bndstx
mov
inc
sarl
dec
iret
loope
mov
and
mov
mov
add
push
push
sarb
adc
inc
adc
mov
mov
shlb
cmp
xchg
inc
pop
xchg
push
repnz
dec
add
push
stos
or
ljmp
pop
xor
sub
push
push
xor
xor
mov
sub
sbb
aam
cli
adc
loope
arpl
cli
push
jg
push
shlb
out
cmp
xchg
mov
out
inc
or
cmp
push
pop
xchg
xchg
and
addr16
mov
popa
daa
adc
inc
ljmp
jne
aad
sbb
inc
mov
inc
xchg
shll
sub
cli
xchg
push
sub
jb
and
push
das
sbb
out
pop
or
xchg
mov
ret
xor
imul
cs
pop
lods
mov
push
aad
sahf
or
mov
xor
das
sbb
mov
out
dec
mov
fdiv
dec
cli
lcall
loop
jge
cmp
inc
fisubrl
inc
loop
bound
popf
mov
add
mov
mov
and
inc
roll
mov
mov
xchg
push
add
daa
mov
shll
sbb
or
push
mov
pop
xchg
pop
push
cld
cmc
in
popa
sbb
cmp
xor
rclb
pop
ljmp
and
shl
mov
fisubrl
and
mov
inc
loop
test
sub
add
pop
mov
sub
cmc
out
pop
xor
mov
add
std
aas
inc
sbbl
lea
pop
repnz
xor
sub
sbb
xor
lods
cld
test
cmp
aam
shl
pop
leave
add
punpckhdq
cwtl
test
mov
and
xlat
xor
stc
adc
xor
jmp
dec
in
xor
push
mov
mov
jmp
push
inc
push
nop
cmp
sti
sub
rorl
je
enter
dec
cmp
and
sbb
sbb
cmpsb
xchg
xchg
gs
and
cmp
pop
out
and
cmp
je
call
and
out
sahf
lock
sbb
incb
jb
imul
scas
movsl
push
sbb
popa
std
and
jnp
mov
dec
imul
adc
push
fwait
repnz
and
sub
jmp
ds
push
loop
sub
pop
es
popa
dec
mov
popf
daa
mov
cmp
int
xor
jl
push
pusha
sti
fwait
xchg
and
clc
xchg
jle
adc
xor
scas
xchg
ss
sub
aaa
nop
sqrtps
adc
mov
mov
lods
mov
bound
pop
add
sub
pop
xchg
ret
and
ljmp
sahf
or
lds
loope
cld
xchg
xchg
popa
insb
or
aam
das
imul
sub
push
xchg
cmpsb
shll
aad
sti
push
pop
es
add
rolb
hlt
loop
inc
nopl
mov
test
mov
test
lods
mov
cmp
loopne
jb
idivl
popa
sub
rorl
sbb
mov
mov
sub
in
dec
aaa
enter
pop
mov
fdivs
add
xlat
pop
movsl
push
fadds
mov
lahf
imul
out
scas
mov
add
call
pop
pop
and
popf
jmp
dec
add
arpl
or
leave
and
sub
sbb
loop
xchg
lock
dec
rcrb
push
pop
add
test
movsb
add
adc
xchg
cmp
sub
sub
xor
aaa
popf
jno
xor
adc
sub
adc
dec
fdivs
push
push
jne
mov
dec
xchg
mov
mov
das
ret
jecxz
shl
dec
xchg
loopne
pop
cmp
pop
notb
cltd
push
mov
ficoml
sbb
mov
cwtl
mov
cwtl
mov
je
or
xor
mov
dec
xchg
mov
leave
and
lcall
ret
or
mov
test
mov
notb
xor
and
pop
xor
mov
push
xchg
mov
outsb
xor
push
cmp
inc
test
dec
sub
add
cltd
das
and
movsb
pop
scas
out
in
xchg
xchg
inc
movsb
leave
cmp
sub
popa
push
and
add
rcll
sbb
sbb
xchg
inc
aad
dec
mov
inc
push
and
daa
and
and
pop
ret
imul
push
je
mov
js
xchg
and
xor
push
cmp
or
mov
nop
and
xor
adc
add
pusha
mov
pop
call
popa
inc
nop
pop
data16
ficoms
hlt
call
xchg
xor
loop
dec
xor
mov
xchg
fcomps
pushf
aaa
je
lods
ss
push
iret
jge
jnp
ror
xchg
mov
cltd
adc
pop
push
mov
cwtl
push
push
enter
push
leave
mov
adc
ficoms
mov
jg
pop
mov
cmp
add
movsb
popa
push
xchg
lock
xor
hlt
add
mov
fisubrs
dec
pop
imul
je
sarl
jnp
xor
sbb
lods
cmp
mov
pop
push
push
imul
sub
cli
mov
xor
lods
stos
clc
les
cmp
in
cmp
fwait
out
mov
out
not
jno
xlat
inc
pop
les
sbb
in
fs
and
gs
mov
and
mov
xor
push
add
or
stos
and
inc
add
inc
mov
mov
pop
adc
aas
push
mov
sub
mov
xchg
test
std
ret
cmp
ja
movsb
mov
daa
daa
xchg
addl
push
stos
in
sbb
sbb
stos
rclb
ja
cmp
loop
es
repz
push
cmp
ss
xor
mov
pop
jl
rorl
jmp
ljmp
fwait
push
adc
add
fldcw
xor
sbb
xchg
mov
mov
xchg
xor
ss
in
cltd
out
pop
push
jmp
xchg
xchg
ja
and
inc
loop
cli
into
cmpsl
or
xchg
jb
adc
jbe
pop
dec
test
imul
cmpsl
rorl
loopne
mov
add
pop
mov
nop
mov
and
pop
inc
test
ja
jno
jge
sahf
push
outsl
dec
popa
ret
mov
xchg
add
hlt
mov
enter
jle
pop
inc
pop
push
out
sub
dec
push
jne
fs
mov
jno
mov
add
or
ja
dec
out
loop
jbe
or
dec
popa
and
pop
adc
in
pop
sub
pop
das
push
mov
xorl
rcrb
mov
inc
mov
leave
xchg
lea
faddl
xor
xor
push
daa
push
dec
jns
adc
aad
sbb
shlb
rcl
cwtl
loope
push
jae
or
popa
mov
push
mov
sbb
je
out
and
jg
outsl
push
xchg
push
arpl
push
in
sbb
fstps
push
loop
stc
inc
xor
inc
or
and
outsb
fwait
imul
cmp
cmp
outsb
xor
das
cmp
js
xor
popa
mov
cmp
mov
jno
inc
loope
daa
ret
frstpm(287
jmp
test
mov
and
lock
fnstsw
adc
ss
sub
in
cmp
or
fldenv
or
mov
mov
or
or
lock
out
sub
jmp
divl
cmp
xchg
adc
sbb
push
das
sti
jb
popa
flds
aad
mov
scas
push
bound
push
inc
mov
jae
xor
rcr
popa
imul
vcvttps2dq
mov
xlat
xchg
dec
ret
xchg
pop
out
in
or
scas
sbb
imul
adc
daa
push
fcompp
mov
les
dec
lods
into
gs
jno
mov
mov
xchg
sti
push
push
lock
mov
testb
dec
fnstenv
xor
jne
sar
adc
mov
jo
mov
jecxz
int
mov
push
xchg
call
popa
jne
ja
popf
int
in
sahf
push
mov
cmp
cmp
cwtl
in
gs
push
rcll
popf
aas
iret
push
loopne
dec
or
icebp
push
rcrb
leave
mov
adc
mov
sahf
nop
outsl
xchg
movsb
ja
push
add
mov
fistps
sub
test
add
addr16
repz
fsts
inc
iret
xor
stos
sbb
sbb
push
sbb
adc
sub
lock
inc
mov
std
je
mov
push
movsl
push
inc
std
in
jmp
dec
addr16
mulb
xor
and
cmp
sub
mov
push
adc
incl
call
cmc
mov
pusha
cli
xor
hlt
jp
mov
sti
addr16
xor
or
adc
sbb
jg
xchg
cmc
sbb
mov
icebp
inc
mov
push
shll
jmp
pop
iret
push
mov
fnstenv
out
lcall
sahf
inc
andps
mov
dec
call
ljmp
out
ds
jp
xor
jb
cld
cltd
mov
mov
icebp
inc
add
call
or
fbld
lods
mov
shlb
idiv
pop
pop
or
or
jbe
dec
sub
sub
cmp
cmp
cmpsb
loop
xchg
or
or
dec
out
shll
pop
xchg
add
push
es
sbb
in
mov
cmpsl
lret
mov
cld
or
inc
xchg
cld
testl
jne
sub
rolb
mov
fidivrs
xor
adc
push
mov
imul
testb
pop
mov
jb
pop
cmp
stc
or
sub
or
cmp
iret
inc
loop
rcl
and
in
sub
repnz
popa
xor
nop
and
push
pop
mov
sbbl
mov
mov
dec
adc
mov
repz
iret
dec
ficoml
and
nop
mov
lret
mov
jo
push
mov
arpl
mov
adc
inc
pop
jg
in
push
cmc
scas
dec
loop
mov
jae
mov
and
xchg
stos
xchg
mov
jecxz
jns
pushf
mov
push
cmp
xchg
jae
ss
push
xchg
push
es
fwait
bound
inc
cmp
sbb
lds
call
aas
inc
and
jne
inc
aas
addr16
pushl
movl
xor
fcoml
test
std
sub
sbb
and
into
xor
add
sbb
mov
cmp
cmpsl
test
addr16
push
and
pop
rorl
ret
sbb
mov
pop
or
xchg
lods
sti
rol
int
jo
and
sbb
push
movsl
movsl
mov
dec
ljmp
dec
bound
or
int
pop
in
xor
repz
mov
xchg
sbb
jecxz
pop
push
je
addr16
push
lahf
mov
sub
lea
pop
icebp
cld
mov
sbb
cwtl
lock
mov
loop
je
sbb
fcoml
int3
ss
int
sbb
xor
sub
adc
adcb
orb
lods
in
and
js
out
ljmp
dec
push
aaa
das
sbb
repnz
adc
stc
sub
fwait
lods
inc
and
pop
push
inc
out
add
shrl
addr16
inc
fstp
dec
std
scas
mov
ja
pop
mov
movsb
push
in
hlt
repz
es
sarb
mov
aam
sub
adc
add
and
adc
xor
repz
les
pop
xchg
inc
cmp
push
push
mov
jge
mov
push
push
rcll
les
adc
xchg
inc
in
jle
xchg
xchg
ljmp
out
mov
pop
lret
adc
cmp
mov
jns
adc
xchg
pop
movsl
ficompl
or
inc
lret
rolb
inc
test
loop
out
push
pop
in
mov
ljmp
or
shll
mov
pop
push
push
adc
and
cmp
addr16
inc
inc
iret
mov
inc
cmp
push
je
imul
outsl
ja
xor
xchg
jno
add
mov
inc
adc
inc
pop
rclb
lods
jns
sbb
lret
ret
das
sub
mov
test
std
int3
js
sbb
inc
sbb
adc
or
js
push
inc
in
mov
aaa
mov
adc
stos
and
cmpsl
lret
xchg
cmp
xchg
arpl
pop
sub
sub
adc
lea
mov
fsts
ss
xor
ficoms
dec
jne
xchg
sub
sub
cmp
fbld
repz
aas
sbb
adc
cmpsb
scas
mov
cwtl
xchg
push
adc
jg
inc
test
or
popf
or
out
or
jns
lcall
rolb
subb
jge
lds
mov
sbb
and
xor
and
mov
or
and
mov
xchg
pop
stc
lahf
xlat
arpl
pop
insl
lcall
cld
mov
je
imul
rclb
adc
xchg
bound
sti
test
mov
and
xor
in
pop
jae
pushf
and
movsb
inc
mov
daa
je
push
imul
and
ss
in
and
cwtl
mov
inc
loope
xchg
lds
gs
bound
jnp
cli
jmp
adc
sbb
out
xadd
push
daa
dec
and
cmove
or
inc
gs
ret
jle
ljmp
and
loop
dec
adc
movsl
stos
insl
loop
arpl
and
pop
daa
cmp
in
popf
mov
adc
xchg
mov
data16
lahf
aas
xor
jns
loop
popf
out
xor
cmp
pop
ret
pop
addl
outsl
in
inc
xor
imul
lock
xorl
xchg
in
and
pop
icebp
cmpl
adc
adc
and
inc
mov
xchg
mov
mov
adc
add
add
aas
mov
adc
pop
cmc
loope
mov
and
xor
lock
sbb
adc
rolb
insl
shrl
sub
pop
stos
mov
stc
mov
push
push
lcall
jmp
xor
mov
jbe
inc
inc
sbb
rcr
mov
push
or
aam
ja
mov
xor
cmpsl
jno
add
push
jp
xor
push
xchg
dec
mov
sbb
imul
dec
lahf
loope
sub
sub
dec
das
sub
dec
popf
sbb
and
sub
push
rcrl
xor
mov
xchg
cmp
xor
cltd
mov
aaa
pop
lcall
and
das
push
mov
pop
xor
sbb
cmp
xchg
dec
aas
aas
loop
clc
xor
xchg
xor
loop
and
hlt
adc
mov
and
loopne
cli
mov
jecxz
fnstsw
jecxz
xorl
dec
stc
sub
loop
cmp
mov
pop
push
xor
mov
pop
xchg
cmp
jmp
test
xor
and
cmp
lcall
cmp
mov
xchg
push
dec
add
xor
jne
inc
push
sub
push
xchg
mov
pop
lahf
out
cltd
aad
shlb
es
cmp
jge
pop
xchg
push
xchg
xor
movsl
xor
push
cmp
or
sbb
cmp
lods
lcall
sub
xchg
xor
sbb
mov
mov
xor
push
xchg
pop
adc
sbb
xor
mov
or
out
jl
cs
push
fistps
ja
rolb
stc
cmp
lahf
cmpsl
adc
ficomps
push
lds
popf
cmpsl
je
push
mov
xor
sub
cmpl
xor
sub
jnp
xor
cltd
jb
aaa
adc
lret
cmp
jp
cmpsl
cwtl
and
xor
jp
leave
mov
jg
inc
sub
rorl
push
or
daa
adcl
sbb
loop
pop
dec
add
add
dec
shlb
jl
sbb
call
sbb
adc
jb
xor
lret
mov
out
in
push
inc
mov
inc
sbb
sub
cmp
roll
fwait
dec
mov
mov
adc
inc
pop
cmp
inc
test
mov
fmuls
cmp
dec
loop
popa
dec
push
xchg
add
jle
sbb
and
vmwrite
and
xor
mov
jb
in
and
in
in
adc
daa
and
adc
xor
xchg
jb
out
into
jecxz
loop
adc
add
mov
sbb
cli
adc
pop
rol
pop
fwait
adc
mov
fidivrs
pop
sbb
imul
sub
xor
pusha
iret
pop
xor
sti
push
sbb
mov
sub
cmpsl
loop
mov
mov
loopne
jmp
mov
loope
loop
xor
xor
cs
int3
mov
push
cmpsl
data16
and
xor
push
mov
mov
push
dec
mov
lds
jnp
cmpb
stos
mov
cltd
movsb
loop
cmc
adc
xchg
mov
cmp
sbb
or
rcl
dec
pop
insl
stc
mov
sub
jmp
pop
inc
idivb
mov
pop
iret
cs
enter
cmp
cmp
push
je
mov
in
shll
cmpsl
movb
je
nop
enter
cld
cwtl
insl
jmp
pop
mov
rcll
pop
in
stos
aaa
inc
emms
je
pop
mov
and
jno
loope
icebp
sbb
mov
je
adc
popf
jp
ret
and
adc
lcall
jmp
sbb
push
lds
in
addr16
jno
mov
popf
or
cmpb
push
jno
clc
divb
sub
int
repnz
movsl
scas
movsl
jae
xor
repnz
ja
andl
pop
sbb
jp
loope
cli
pop
pop
xchg
rorb
pop
mov
imul
mov
jo
pushf
sbb
lock
lcall
sti
ret
fcmovnu
rorb
fcmovne
cmp
pop
and
sti
repz
fimull
hlt
dec
push
mov
pushf
cmp
sub
mov
scas
outsb
jns
outsb
add
ss
push
arpl
inc
cs
xchg
aad
aad
sub
mov
lock
xchg
adc
jae
inc
pop
sti
movsl
sbb
fsubrs
out
pop
fisttps
sahf
add
mov
loope
jmp
gs
mov
push
ds
sbb
sti
and
pop
adc
cmpsl
mov
sub
mov
sbb
add
mov
xchg
aad
sub
inc
daa
xchg
xchg
or
fadds
cs
xchg
in
xchg
mov
and
push
push
mov
sti
sahf
cmp
loop
es
jo
lcall
pop
pop
fbstp
jns
in
pop
aad
adc
jns
cmpsb
xor
push
push
and
mov
mov
ret
xchg
pop
mov
cltd
mov
fwait
mov
jne
sbb
aam
mov
xlat
add
loop
lods
and
inc
sbb
pop
mov
lock
mov
ret
test
sbb
lret
jno
mov
addl
sub
shlb
loop
xchg
fildl
push
icebp
jp
push
cwtl
mov
xchg
cmp
xchg
imul
inc
repnz
dec
xor
repnz
popa
lds
ja
popa
sbb
call
repnz
das
pushf
fnsave
mov
cmp
cli
insb
xlat
and
cltd
add
and
aad
xor
push
mov
pop
jge
outsl
xlat
loop
cmp
and
push
gs
mov
dec
push
pop
xchg
pop
sbb
fs
repnz
cmp
or
push
mov
movsb
arpl
sub
lret
adc
test
xor
ret
imulb
roll
inc
mov
scas
test
inc
xor
jle
sbb
mov
jne,pn
inc
test
inc
push
lret
cltd
in
imul
push
mov
pop
xchg
cmp
sbb
movsl
cmpsl
mov
mov
inc
fwait
test
movsb
adc
pop
fdivl
pop
mov
mov
mov
pop
push
push
popa
sbb
sub
repz
das
mov
sti
xor
fsubs
dec
andb
mov
mov
loope
jmp
test
xchg
inc
mov
dec
test
push
jecxz
popa
iret
add
call
mov
cwtl
addl
clc
into
or
jnp
and
mov
jecxz
sbbl
mov
mov
pop
pop
mov
add
xchg
daa
ss
add
in
xchg
js
cmp
xor
popa
push
leave
pop
or
inc
repz
push
addr16
je
in
pop
lret
sahf
and
xor
int3
add
sub
aaa
sub
sbb
popa
aas
or
sub
test
fs
outsb
mov
sub
pusha
add
xor
gs
xchg
sbb
add
xor
inc
push
fistps
cmpb
inc
xor
and
mov
push
and
adc
shlb
mov
ds
divb
sahf
ljmp
arpl
sub
bts
jbe
or
xchg
aad
sub
cmp
repz
mov
push
adcl
push
sbb
xor
stc
std
sbb
ret
cmp
mov
jnp
movsb
filds
push
cmp
adc
and
lret
mull
pcmpeqw
xor
fcmove
hlt
hlt
ja
mov
jbe
xor
dec
cmp
mov
push
scas
inc
loope
push
xor
ds
add
cmc
aas
jp
dec
sub
and
arpl
push
arpl
xor
loopne
jecxz
cltd
mov
xchg
aaa
sbb
pop
mov
sub
dec
sti
xchg
cli
sub
pop
push
and
scas
xchg
xor
movsb
or
and
jp,pn
insb
add
call
test
lret
and
outsl
xor
call
imul
mov
xor
and
jne
mov
dec
pop
fnstenv
jns
xchg
imul
and
fstps
daa
lcall
cmp
pop
mov
lea
int3
mov
push
ret
pop
or
pop
int3
jno
jmp
push
mov
xchg
xor
dec
rorl
ret
cwtl
pop
jno
lods
mov
xchg
cld
pop
xchg
push
mov
pushf
lcall
cwtl
ret
cmp
xchg
xor
and
xor
cmp
sub
outsl
rcll
mov
and
push
mov
setg
bound
cmpl
and
addb
cltd
popa
popa
jecxz
mov
pop
cmp
loopne
jns
imul
sub
add
and
dec
pop
pop
mov
push
ret
in
decb
push
lock
movsl
and
pop
sti
mov
fs
inc
arpl
xor
push
mov
out
or
insl
add
cltd
rclb
mov
cmp
pop
inc
les
je
lds
pop
hlt
inc
push
pop
in
push
sub
add
lret
popa
lea
cmp
addr16
in
push
dec
inc
inc
xchg
add
cmp
dec
push
inc
mov
cmp
mov
cmpsb
and
orl
fs
pop
enter
and
or
stos
mov
push
neg
push
adc
cmpb
inc
xor
ret
cmp
inc
and
adc
lea
xor
andb
sbb
loop
ds
xchg
ljmp
xor
sahf
xor
mov
mov
jns
push
or
push
pop
and
int3
dec
mov
mov
inc
mov
stos
mov
fwait
jno
dec
je
cmp
add
pusha
fsts
int
cli
dec
aas
adc
adc
subl
outsb
fucomp
faddl
sbb
sbb
fnstcw
ds
add
rcll
or
sub
ret
lock
fdivr
jnp
jecxz
mov
jl
pop
xlat
cmc
push
sbbb
call
sahf
jnp
mov
xor
int
jp
pop
or
enter
sub
mov
arpl
adc
inc
push
adc
adc
loop
fistpl
fwait
test
sbb
jmp
int
adc
cmp
ret
cmp
or
mov
ss
mov
xor
jns
mov
mov
scas
adc
lret
xor
leave
fistps
mul
jne
dec
fwait
add
inc
adc
lds
push
sbb
xlat
insl
mov
inc
sbb
mov
int3
in
movsb
dec
push
lods
mov
addr16
fsubrl
push
xchg
push
sbb
jne
mov
mov
cltd
add
sbb
pop
cs
xchg
xchg
gs
fildl
popa
sbb
jg
mov
fwait
fwait
dec
ja
jg
xchg
pop
movsl
in
lcall
cmp
sbb
out
aas
and
mov
xchg
daa
daa
cmp
xchg
adc
je
daa
mov
imul
fdivr
pop
dec
outsb
jno
and
jno
push
data16
mov
fidivl
scas
dec
xchg
jno
int
arpl
jno
dec
or
jg
sub
and
push
popf
jne
int3
movsb
pop
shlb
sub
shrb
mov
jne
xchg
inc
inc
sbb
ljmp
aam
pop
pop
push
daa
sbb
imul
loop
xchg
adc
and
mov
sbb
mov
mov
push
loop
or
iret
mov
adc
mov
pop
xor
add
and
imul
mov
sbb
add
xchg
jp
jbe
lock
add
sub
ja
or
sub
sub
and
xchg
rcrl
lahf
mov
inc
cmp
arpl
insb
out
pusha
xchg
xchg
loop
aaa
cld
lock
jge
mov
int
add
pop
daa
sub
arpl
rolb
fcom
loopne
mov
das
sbb
mov
shrw
stc
and
dec
rorb
pop
aaa
mov
fxch
lea
jns
mov
int
adc
mov
and
jg
test
pop
pop
sub
aas
sub
adc
push
lods
or
mov
ror
add
mov
push
mov
out
inc
pop
jns
dec
add
pop
data16
icebp
lret
lret
rcrl
repnz
mov
jmp
pop
inc
mov
mov
and
hlt
enter
dec
mov
push
push
dec
loop
scas
push
bound
mov
or
dec
inc
cmpsl
or
iret
sub
xchg
aas
imul
andb
loop
iret
aad
ret
stc
xchg
cmp
adc
test
mov
stos
add
mov
loop
push
orl
pop
data16
pop
cmpsb
addr16
mov
lods
sbb
xor
lea
in
popa
movsl
lods
jl
fdivs
mov
mov
push
or
ja
sbb
xchg
and
adc
adc
scas
cltd
mov
sub
inc
sub
and
cmp
sub
rcll
sbbl
pop
xchg
mov
or
int3
sbbb
hlt
adc
mov
sbb
loopw
xor
xor
mov
adc
loop
lret
repz
pop
sub
movsb
cmp
divl
into
add
jmp
cmp
dec
out
sbb
cwtl
sbb
add
sub
enter
std
mov
aaa
popf
call
inc
add
cmp
prefetcht2
dec
xchg
shrb
and
aad
or
jne
jne
xlat
push
sub
mov
cmp
pop
pop
pop
repnz
push
adc
xchg
inc
add
or
mov
cmp
inc
xor
bound
mov
mov
popf
xchg
sub
fs
sahf
ror
dec
xchg
scas
rcrb
mulb
into
stc
inc
aas
bound
and
or
pusha
pop
lcall
lods
add
or
xor
in
popa
mov
in
repz
xchg
xchg
adc
add
ds
loopne
jg
jge
xorl
push
xchg
lahf
popf
push
gs
insl
gs
shlb
jns
aam
ljmp
sub
adc
outsb
xor
hlt
iret
shlw
cmc
dec
sbb
jbe
rcll
iret
xor
xchg
jle
lods
sbb
ret
or
pop
xchg
pop
mov
lahf
into
fs
or
popa
adc
ja
mov
mov
aaa
into
and
setle
nop
push
imul
sub
cmp
push
stos
notb
lock
inc
and
in
adc
orb
mov
pop
dec
sbb
loop
mov
mov
loop
addr16
sahf
scas
add
lds
or
popa
add
mov
loop
aas
imul
imul
stc
jmp
sar
pop
movsl
lods
fldcw
adc
daa
popf
psubusw
stc
ljmpw
cmp
or
jns
push
and
pop
insl
int
testb
jne
cmp
push
mov
mov
pop
in
push
adc
mov
jmp
add
imul
sub
es
cmp
nop
decb
call
sbbl
cmpsl
sub
ds
adc
insb
cmpsb
mov
sub
sub
xchg
push
mov
jmp
mov
ror
push
out
inc
sti
jns
es
scas
les
iret
popa
inc
scas
adcl
cmp
and
mov
sub
imul
jnp
pop
cmp
sub
ret
add
mov
or
xor
cmp
cmp
sahf
xchg
sbb
pop
fistpl
add
mov
in
icebp
rolb
hlt
jmp
sub
popa
jmp
lods
shll
inc
pop
lods
jge
pop
xorb
out
jge
int3
sub
fnstcw
xor
cmp
xlat
jbe
rolb
ds
cmpsl
shl
fadds
addb
ja
arpl
push
imul
add
lret
mov
js
test
clc
fldl
lds
mov
mov
sti
bound
push
sub
jne
xchg
mov
xchg
hlt
or
jecxz
add
cmp
inc
mov
xor
sub
ds
mov
dec
sbb
mov
dec
xchg
inc
pop
std
fldcw
jg
mov
jae
mov
mov
add
pushf
xorb
hlt
push
cs
mov
and
dec
movsl
mov
xchg
xor
test
ret
nop
mov
pop
loop
mov
jns
pop
inc
xor
loop
xchg
ffreep
and
mov
sbb
aaa
mov
outsb
js
test
pushf
push
push
sub
xor
cli
cmp
ss
xor
xchg
adc
adc
movsb
cmp
cmp
or
jge
dec
mov
mov
mov
push
and
inc
repz
cmp
mov
addb
pop
adc
sub
inc
sbb
lods
aaa
cmp
out
ficompl
mov
xchg
fidivrl
imul
xchg
pushf
mov
je
pop
fs
mov
and
fs
call
mov
movsl
dec
sub
xlat
jecxz
mov
add
lods
jnp
push
hlt
rcll
jne
movsl
sbb
mov
xor
adc
and
jnp
jmp
lods
or
jnp
mov
and
out
push
mov
lret
xchg
add
mov
or
sbb
push
adc
daa
mov
sbb
ss
mov
add
sbb
sahf
pop
adcl
xor
xchg
out
cmp
push
icebp
mov
or
or
test
or
frstor
cmp
mov
push
push
out
in
xor
cmp
xorb
repnz
into
sti
sub
push
mov
cmp
popa
in
out
insb
pop
or
sbb
dec
outsl
test
lcall
loop
sub
pop
or
cld
popa
adc
mov
insl
sti
pop
push
pop
sbb
sbb
and
inc
clc
inc
mov
push
mov
cmp
xchg
scas
mov
cmp
dec
cmc
out
ss
or
xchg
pop
cmpsl
mov
pop
iret
shl
inc
outsl
lcall
sub
inc
jae
sub
cltd
jae
mov
leave
mov
cli
push
jae
filds
in
shrl
ja
shll
inc
push
mov
inc
dec
loope
lret
adc
mov
add
mov
es
outsb
jno
inc
sub
int
loop
sub
pusha
sub
idivb
mov
pushl
stc
adc
mov
call
subl
xor
es
pop
adc
pop
pop
pop
lahf
call
lods
lock
negl
mov
adc
cltd
arpl
call
stc
arpl
sub
adc
add
push
sub
pop
adc
sub
aad
or
call
aad
clc
les
fbld
or
mov
addr16
or
in
adc
pop
mov
and
fistpl
stos
mov
push
adc
or
lret
movsl
jo
push
inc
or
pop
lock
xchg
push
dec
pop
andb
call
sub
push
xchg
mov
or
mov
xor
dec
mul
jge
push
sbb
pop
cmpsb
mov
pop
test
cmp
loop
popa
mov
andb
pop
sbb
inc
xchg
mov
sub
mov
add
mov
jns
mov
and
fwait
es
xor
inc
ljmp
dec
in
aaa
and
sbb
fsts
jns
fidivs
and
cltd
push
lds
push
std
movsl
push
or
in
iret
jmp
sbb
mov
in
test
stc
cmp
inc
xor
mov
adc
loopne
mov
popf
sbb
mov
incb
and
xor
sbb
aas
sub
mov
das
mov
in
mov
mov
push
cltd
bound
imul
push
and
mov
pop
imul
mov
leave
int3
pop
sbb
adc
addr16
inc
xor
fiadds
int3
push
add
xor
ds
pop
sti
movsl
and
lahf
adc
popf
mov
mov
in
cmp
out
aad
jno
xchg
jo
add
cmpsl
js
int
lea
xchg
sar
pop
orb
sub
mov
or
fxch
inc
ror
scas
mov
xchg
sbb
loop
dec
xchg
loope
mov
out
push
push
in
xchg
mov
adc
jmp
mov
dec
push
mov
inc
mov
lock
and
outsl
lret
shl
and
jl
push
cs
insb
sahf
inc
inc
fistl
adc
sbb
mov
and
pop
cmp
push
ljmp
aam
test
je
roll
inc
ja
and
lods
repnz
aaa
push
lret
andb
sbb
test
gs
jl
loope
fsts
fwait
mov
inc
push
pop
ficoms
dec
lods
aam
insl
nop
pop
xchg
push
fwait
rcrb
push
jg
fcoms
ljmp
mov
lea
sbb
jl
jl
sub
pop
cmp
inc
shll
leave
jp
inc
dec
inc
lds
loope
mov
dec
pop
or
sbb
andb
add
dec
pop
inc
inc
or
fstpl
xchg
xor
iret
dec
loop
cmp
xor
adc
push
adc
push
mov
loop
fcompl
and
push
arpl
cmpsb
lock
inc
adcb
fs
pop
pusha
mov
mov
dec
jmp
lcall
adc
push
lret
inc
rcll
cmp
mov
push
mov
mov
mov
mov
and
mov
pop
ja
add
add
or
cmc
push
push
movsb
push
xchg
push
sbb
mov
mov
pop
loop
mov
jnp
sub
imul
inc
push
pop
sub
sub
inc
cmp
jp
inc
pop
push
aas
dec
push
xchg
add
sbb
mov
xchg
push
add
pop
push
cmp
cmp
nop
ficomps
loopne
jg
test
fld
fwait
pop
into
mov
shll
or
cmp
loop
fwait
add
les
test
xor
add
pop
ret
test
cmp
mov
pop
ja
pop
loope
stos
mov
fcompl
dec
add
jmp
pushf
cmc
fwait
cmpsl
sti
xchg
mov
adc
adc
pop
mov
xlat
add
fcomps
cmp
aad
xchg
push
or
loopne
stc
and
push
add
dec
iret
clc
popf
xor
cmp
pop
data16
fwait
inc
popa
mov
rcrl
rcrb
cltd
lea
insb
test
dec
jecxz
cmpsb
scas
adc
cmp
sub
inc
cmp
pop
movsl
sbb
push
cmpsb
jns
mov
sub
bnd
movsb
pop
pop
add
pop
fidivs
dec
pop
mov
push
adcl
mov
pop
xchg
jno
loope
cltd
sbb
scas
fildll
aad
sbb
in
add
in
dec
in
sbb
pop
aad
inc
stc
xor
outsl
sub
shrl
bound
adc
push
repnz
sbb
lcall
sub
in
arpl
cmpsb
clc
mov
in
push
test
jne
mov
lods
pop
jae
dec
ljmp
or
dec
scas
mov
jmp
xchg
cld
mov
jg
in
mov
dec
fcomip
sahf
push
imul
xor
xchg
imul
insl
dec
cltd
xchg
xchg
sti
dec
sbb
insb
sarl
cmp
xor
iret
push
movsb
and
insl
jns
add
xchg
mov
pop
sti
inc
xlat
leave
sbb
outsb
mov
lahf
xchg
imul
adc
xor
push
sbb
aas
fs
mov
aam
test
xchg
scas
aas
loop
addr16
inc
js
pop
fistps
aaa
mov
in
or
or
fidivs
shlb
cmp
fstps
inc
pop
mov
cmp
dec
aad
dec
cltd
js
aad
push
pop
mov
lahf
push
mov
sti
outsb
int3
sahf
aas
mov
or
xchg
aad
sahf
xchg
test
sarl
call
ds
in
push
cmpl
push
mov
adc
outsl
push
clc
and
add
mov
stc
xorl
pop
mov
xor
dec
inc
imul
xchg
cmp
sar
push
in
mov
dec
mov
add
test
cwtl
sub
sbb
lahf
and
fstpl
xor
cmp
je
hlt
adc
outsb
push
pop
mov
hlt
out
dec
push
push
mov
leave
push
or
sub
adc
cwtl
pop
in
add
repnz
ja
in
or
divb
pusha
xor
enter
cmpsl
adc
enter
insl
test
fisubrs
adc
sub
aas
shll
mov
lret
repz
scas
je
add
lcall
push
dec
sub
mov
push
sbb
bound
pop
dec
popa
and
test
stos
adc
sbb
test
bnd
imul
pop
xor
jno
xor
test
mov
jmp
dec
sbb
hlt
insl
sbb
rcrb
into
dec
inc
sbb
sbb
adc
loop
pop
or
shll
mov
nop
cli
ficompl
es
cli
ja
adc
sub
insl
mov
or
mov
inc
cmp
int
jae
cltd
pop
mov
sbb
sub
movl
stc
shrb
popf
pop
addr16
aam
sbb
sbb
jnp
mov
or
repz
pop
test
add
ljmp
jecxz
jp
inc
sub
fldl
xor
mov
loop
mov
fisttpll
mov
ss
pop
mov
sbb
movsb
cwtl
ss
and
mov
inc
add
xor
mov
roll
mov
xchg
push
push
xor
insb
out
pop
fnsetpm(287
mov
movsb
push
sub
xor
inc
pop
test
pop
sub
leave
pop
sbb
and
test
dec
sbb
mov
cmp
cmp
sbb
adc
adc
mov
inc
stc
inc
and
rorb
sub
add
xor
int
popa
xor
xchg
out
pop
push
addr16
and
sbb
and
scas
xchg
and
mov
sbbb
jo
subl
push
adc
les
jmp
xchg
mov
stc
inc
loope
xor
and
push
bound
mov
mov
or
push
mov
lock
cmp
sub
mov
loop
enter
xor
shl
pop
bound
push
xchg
and
into
ret
dec
clc
or
incl
decl
push
push
xor
add
pop
jecxz
in
loop
push
leave
pop
imul
test
mov
addr16
xor
and
jmp
dec
cmp
adc
or
iret
mov
jae
push
lcall
pop
mul
lods
mov
jmp
dec
clc
pop
out
int3
popa
jo
mov
xor
loopne
repnz
out
mov
sub
popa
test
in
wbinvd
das
sbb
int3
xchg
in
insl
insb
xor
lods
or
loope
in
movsb
inc
popf
push
push
rol
mov
sub
leave
add
push
popa
push
imul
xchg
fwait
and
into
pop
sti
std
mov
push
leave
xor
sbb
inc
sub
inc
xchg
enter
and
movsl
xchg
push
sbb
jle
sub
fwait
pop
and
sub
sbb
add
shl
call
movsl
ljmp
sub
sarb
add
fnsave
sbb
test
int
lret
and
loop
sbb
test
sbb
lea
sbb
cmp
aaa
fwait
jge
pushf
call
insb
loopne
sbb
icebp
scas
sbb
mov
ret
or
add
insl
iret
xchg
lods
addr16
pushf
call
cmp
dec
sbb
stos
mov
and
pop
mov
ljmp
repnz
movsl
mov
ljmp
in
in
das
dec
and
ja
scas
lahf
mov
xor
push
sti
sbb
loope
push
outsl
loop
xchg
jb
scas
inc
cmp
vsqrtss
sbb
xor
inc
xor
add
fisubs
jg
in
dec
pop
addr16
addr16
mov
jns
inc
mov
icebp
mov
push
call
xor
and
xlat
sbb
call
sbb
inc
xchg
rclb
imul
sub
outsl
push
cld
ret
data16
aaa
inc
xchg
mov
sarl
call
fcoms
dec
or
aaa
ja
lods
testl
inc
or
pop
pop
cmp
pop
cwtl
addr16
pop
stc
mov
je
stc
and
sub
and
lahf
pop
inc
sbb
out
adc
push
push
mov
push
cmc
adc
mov
jbe
cmp
sbb
arpl
cmp
push
lret
push
dec
loop
lret
mov
add
pop
mov
adc
in
push
out
sbb
push
push
sti
insb
or
iret
lcall
sbb
cmp
ljmp
mov
mov
lea
dec
dec
shll
roll
dec
xlat
aad
inc
xchg
xchg
xchg
aam
lret
mov
adc
pop
sahf
xchg
in
les
push
xor
jne
or
dec
out
mov
aas
cmp
and
xchg
add
inc
pop
inc
sti
lods
xor
fnstenv
push
inc
fisubrl
xchg
insb
mov
rsqrtps
sbb
xor
and
mov
mov
jb
mov
es
lcall
mov
orl
jmp
in
cli
sarb
stc
cmp
xchg
and
and
or
sbb
xor
jmp
add
mov
cmp
cwtl
pop
cld
sahf
scas
ss
mov
sahf
cmp
hlt
push
pop
in
cmpsl
call
or
sti
jl
lcall
fisubl
out
xchg
fisubs
ja
or
aas
and
sbb
filds
nop
enter
test
and
test
sub
sub
xor
mov
mov
xchg
mov
xor
scas
mov
movsb
and
out
add
sbb
sub
out
xchg
xor
jns
push
pop
mov
lods
xor
push
and
mov
and
cmp
aad
lods
pushf
push
add
inc
je
imul
insb
push
mov
xchg
cmp
mov
mov
dec
aam
jns
mov
ds
lcall
ss
adc
xchg
loope
cmpb
mov
mov
je
pusha
scas
and
xchg
and
cltd
jns
sbb
lahf
xor
cs
gs
xor
add
sbb
aam
cmp
xor
mov
pop
add
add
xchg
jnp
and
push
int
mov
jno
sub
mov
push
cmpsb
pop
testb
es
cmp
mov
ljmp
fcoms
pop
jecxz
scas
mov
dec
and
sbb
rcl
out
sbb
int
mov
push
xchg
sub
cmp
mov
fistpl
scas
arpl
push
fmulp
sub
pusha
xchg
mov
addr16
jbe
shll
or
push
mov
cs
jge
negl
out
jbe
pop
sbb
or
xor
xlat
xchg
ret
pop
xor
cmp
inc
and
xor
dec
clc
lret
inc
data16
push
push
cs
outsb
bound
int
cltd
cmp
popf
je
popa
ficomps
mov
mov
cmpsl
out
push
loopw
out
pop
int
pop
lret
or
or
nop
sbb
cwtl
and
add
test
stos
gs
adc
cltd
cmp
loop
leave
lahf
stos
mov
int3
stos
mov
push
sbb
mov
cmpsl
mov
popa
and
test
xor
int
push
test
jge
add
fldenv
add
mov
add
mov
adc
lods
mov
scas
push
daa
sbb
push
add
sub
popa
push
inc
sub
cmp
jecxz
sbb
call
cmc
ljmp
mov
sbb
bswap
sub
mov
popf
ffreep
dec
scas
loop
push
lret
out
xchg
and
out
adc
inc
in
and
scas
mov
outsb
dec
stc
std
loope
sbb
mov
adc
jns
xchg
sbb
jp
div
xor
mov
mov
inc
jl
repz
or
jbe
ljmp
and
lea
test
enter
in
xlat
xor
cmc
pop
outsl
pop
mov
sub
adcb
sbb
imul
pushf
mov
jo
shll
das
sbb
fisttpll
lret
aaa
and
shl
or
insl
sti
and
cmc
mov
and
sbbl
in
sub
mov
push
movsl
push
test
ret
adc
pop
sbb
in
loopw
repz
pop
pop
imul
pop
aad
sti
stos
xchg
imul
pop
cmp
testl
out
andl
test
icebp
popf
mov
push
and
sbbl
stc
xchg
popf
cmp
call
push
ss
sub
mov
mov
stos
add
mov
sti
sub
gs
sub
sub
fcoml
mov
or
push
outsl
cwtl
inc
std
leave
andl
imul
push
mov
push
loope
pop
mov
xchg
push
pop
stc
cld
sub
adc
cmp
add
neg
shl
icebp
in
jmp
jne
inc
nop
sbb
sbb
jno
xchg
and
jno
pop
loop
add
jbe
mull
pop
lods
mov
ja
add
mov
pop
dec
jno
call
fs
mov
les
ds
mov
mov
mov
cmp
add
orb
mov
push
movsb
jnp
inc
mov
flds
push
dec
jp
pop
and
out
imul
sti
lcall
mov
cmp
mov
jae,pt
inc
push
test
repz
sbb
popf
and
mov
pop
dec
inc
and
movsl
sbb
rol
inc
loop
insl
inc
std
sbb
aas
sub
sub
xchg
pop
sbb
cmp
mov
pop
adc
adc
in
aas
out
stos
popa
hlt
cmp
in
dec
jecxz
push
and
sbb
addr16
dec
cmp
sub
ret
pop
test
fldcw
mov
or
xchg
aas
mov
fidivrl
mov
lods
or
xor
movsl
pop
pushf
xchg
sbb
and
clc
mov
enter
xchg
lahf
xchg
pop
scas
jmp
mov
lods
pop
pop
sbb
arpl
push
mov
stos
ljmp
push
lock
scas
adc
and
mov
inc
dec
and
jge
insb
ds
jecxz
push
adc
mov
pop
loope
fsubrp
mov
push
xor
iret
adc
adc
ret
and
push
sub
mov
and
mov
cmp
repnz
push
leave
xchg
fsts
cltd
mov
mov
pop
daa
nop
xor
sbb
and
mov
int
jns
sarl
scas
add
and
aam
xchg
cmp
in
fstps
loop
xchg
jnp
es
in
repnz
rcrl
and
pusha
test
outsl
daa
lods
icebp
xor
adc
data16
in
add
mov
stc
sub
dec
cmp
loop
or
lds
xor
mov
cmp
cmp
mov
test
jl
adcb
add
nop
and
sbb
sbb
jbe
cmp
and
mov
cmp
std
lods
and
mov
mov
sub
xchg
ja
jne
and
cwtl
xor
test
mov
sub
repnz
inc
cld
cltd
cltd
sbb
xor
sub
add
out
pop
adc
jae
ret
pop
lret
dec
icebp
dec
xor
inc
mov
push
mov
mov
pop
adc
aad
push
adc
data16
and
insl
inc
sub
adc
mov
pushf
sbb
popa
das
sub
or
jae
sub
movsb
and
cs
inc
movsl
xor
mov
mov
aam
sub
mov
cld
mov
mov
mov
mov
xor
dec
ret
aam
and
adc
cmc
xchg
scas
add
mov
xor
lret
or
sbb
comiss
mov
sub
sbb
cmp
lret
sbb
xor
es
popa
add
cmpsb
inc
dec
insl
aaa
daa
push
xlat
or
pop
cltd
sbb
push
stc
mov
and
daa
cltd
js
jae
inc
jecxz
aaa
xor
pop
aad
popa
adc
inc
pop
push
gs
mov
and
call
mov
cmp
xchg
pusha
mov
out
inc
outsl
pop
mov
push
jo
adc
cmp
das
mov
add
lahf
pop
cmp
dec
xchg
inc
xor
cmp
fstps
jg
push
sub
subl
int3
loope
repnz
mov
les
popf
jae
fcmovne
cmp
push
mov
dec
loope
sbb
fwait
adc
lods
cs
loop
pusha
iret
shll
insb
jmp
xchg
idivl
ds
dec
insl
jp
ss
mov
xor
into
jge
cmp
popf
mov
aaa
mov
out
insb
in
pop
or
dec
xchg
fcmovnb
imul
inc
pop
push
jb
adc
inc
add
das
inc
shr
adc
xchg
pop
mov
sub
fdivl
dec
test
popf
push
into
adc
out
xor
sarl
fbld
push
loop
mov
adc
mov
test
pop
cmpsb
cmpsb
xchg
add
fistpll
sti
and
loop
mov
mov
cmp
inc
and
push
push
mov
and
iret
fsts
imul
mov
mov
cmp
mov
insl
and
shll
pop
lea
and
jge
push
inc
and
sahf
xchg
imull
push
pop
pop
push
sti
xchg
cmp
mov
xchg
pop
iret
ds
cld
stc
jge
jnp
imul
mov
cmc
pushf
icebp
pop
cwtl
fildll
lcall
xchg
loopne
sti
cmp
stc
repz
cmp
sbb
or
cwtl
lretw
pop
pop
jb
lods
jg
ss
int
sarb
stos
mov
mov
xchg
mov
sub
ja
pop
or
es
jecxz
fs
sahf
pop
xchg
mov
sahf
sub
popa
sbb
negb
in
dec
lret
cmp
in
mov
lahf
push
iret
or
int
xchg
and
sub
mov
cmp
push
inc
movsb
sbb
pusha
cmp
push
jl
data16
sbb
repnz
mov
aaa
loop
mov
sub
jle
xchg
leave
mov
ljmp
ljmp
pop
cmp
xchg
pop
mov
inc
push
sub
adc
xchg
adc
cltd
in
rolb
pop
testl
push
movsl
iret
gs
sti
mov
or
jle
sub
mov
adc
adc
mov
scas
addr16
and
pop
add
or
xchg
and
shrl
daa
xchg
pop
push
sub
jo
sbb
xchg
hlt
and
and
push
stc
push
add
or
test
loop
or
adc
int3
je
movsl
jmp
lea
out
xor
mov
add
call
repz
adc
lcall
in
jne
dec
fadds
and
enter
mov
sub
inc
cltd
pop
iret
mov
test
or
iret
jbe
test
or
out
sbb
adc
fstps
jmp
xchg
arpl
sub
adc
mov
jno
fiadds
xchg
or
test
sub
les
cmp
pop
stc
pop
test
inc
push
jge
mov
pop
mov
fsubl
xchg
loop
mov
xchg
and
mov
into
dec
jb
in
jecxz
sbb
mov
pop
ss
ljmp
push
sub
mov
mov
mov
jnp
sub
xor
andb
insl
lock
mov
shld
shll
jbe
mov
pop
add
inc
mov
sub
mov
mov
xchg
dec
shrl
adc
xor
js
xchg
xor
add
jne
jns
sbbl
sti
dec
adc
mov
mov
flds
lcall
lcall
mov
mov
pop
nop
sbb
popa
jns,pn
mov
mov
imul
ja
cmp
mov
lods
test
fldcw
dec
ret
and
jo
rcrb
jecxz
pop
je
int3
aam
jns
rorb
fwait
stos
xor
xor
cwtl
mov
int
pop
int3
and
jb
mov
pop
sub
push
std
sub
xlat
lahf
cmp
xor
sti
rorb
dec
rorl
jmp
sbb
das
sub
mov
lret
popf
cmp
pusha
adc
lods
add
push
outsl
or
pop
or
sub
mov
and
jge
stc
adc
jns
or
loopne
orb
pop
nopl
xchg
sbb
xchg
add
mov
xor
sbb
in
push
gs
push
popa
test
jp
pop
sub
pop
and
sub
dec
push
xor
inc
or
iret
shl
ja
repnz
and
gs
mov
aaa
jns
and
movsl
cmp
push
xlat
movsb
imul
jo
es
leave
stos
sti
push
movsl
inc
mull
ror
jp,pn
mov
cli
cmp
cwtl
scas
stc
add
test
adc
dec
jmp
int
xlat
mov
and
mov
ret
cs
lret
adc
es
std
push
faddl
pusha
js
divb
enter
jns
cmp
dec
add
mov
xor
push
mov
sbb
adc
insb
mov
mov
or
ljmp
cmp
sbb
or
movsb
add
and
fimuls
mov
and
sbb
mov
lods
scas
rcll
and
jne
dec
mov
xchg
push
cmpsl
ja
pop
insb
jnp
jns
adc
adc
jno
sbb
dec
dec
inc
xor
cmp
cmc
fldcw
dec
cmpsb
insb
sub
xchg
add
std
mov
jne
jp
pushf
and
mov
mov
nop
mov
bswap
dec
mov
int
cli
adc
xchg
mov
out
dec
repnz
dec
pop
mov
jle
in
xor
push
sub
pop
movsb
mov
ficomps
xlat
mov
pop
push
pop
adc
xchg
sbb
or
nop
imulb
dec
mov
or
adc
aam
or
stc
jge
mov
sbb
xor
xchg
idiv
pop
int3
mov
sbb
bnd
xchg
lds
stos
jns
pop
je
mov
sub
jge
gs
mov
add
push
aaa
in
or
add
jle
mov
mov
es
sti
clc
sub
sbb
lods
and
lahf
mov
sbb
imul
push
std
push
jg
stc
shll
sti
lods
cmpb
repz
movsl
push
ret
sti
popa
or
pop
dec
add
xchg
adc
ret
lods
int3
lods
negb
xor
movsl
leave
and
test
xchg
push
cmp
mov
dec
push
cli
leave
xchg
xor
xor
mov
jp
adc
shll
adc
outsl
movsb
push
adc
sbb
dec
and
push
arpl
xchg
sub
mov
outsl
movsb
xchg
mov
or
inc
or
xor
mov
mov
adc
or
gs
lds
mov
mov
rcrb
mov
mov
fiaddl
mov
and
and
lahf
xor
push
xor
jmp
outsl
adc
das
lods
pop
xchg
lahf
inc
and
cmp
jl
insb
push
adc
cmp
adc
es
lods
and
xchg
jnp
lods
scas
mov
sbb
sbb
sub
movsl
nop
mov
cmp
test
adc
sahf
cmp
subl
sbb
mov
inc
adc
sbb
inc
or
cmp
fistps
inc
adc
sbb
jle
std
dec
sub
jnp
jne
lea
and
lods
dec
int
jle
pop
out
push
leave
pop
and
dec
cltd
push
imul
mov
outsl
sbb
inc
lcall
ret
cmp
es
pop
push
fnstenv
push
mov
imul
jmp
stc
dec
cmp
imul
pop
cli
and
gs
scas
popa
xorl
mov
xor
inc
cs
xor
repnz
rcr
push
inc
xchg
fadds
and
addr16
xor
mov
pop
and
mov
aas
pop
out
enter
aaa
sub
mov
mov
mov
cmp
jmp
and
shll
je
test
xchg
cli
sti
mov
sbb
das
cmp
aas
aad
xchg
inc
fildl
jns
call
dec
push
repz
sub
pop
fisttps
xchg
mov
insl
mov
test
mov
pushw
pop
dec
cmp
cmp
xor
xchg
sbb
pop
mov
insl
mov
nop
sahf
rcll
dec
sbb
test
xor
imul
es
cmpsl
xchg
outsb
ss
cmp
xchg
pop
cltd
mov
test
add
scas
pop
mov
jl
inc
xchg
scas
rolb
mov
dec
cwtl
cmpsl
fwait
cmp
hlt
subb
stos
pop
je
aad
lods
insl
repnz
orl
xor
xor
cmpsb
jbe
fs
clc
or
pop
or
mov
jge
sub
or
lods
das
and
xor
enter
jl
js
adc
fdivs
out
and
mov
cltd
lahf
and
push
movsl
in
add
leave
je
lea
cmpsl
xor
inc
outsl
fwait
xchg
cltd
dec
cmc
and
aam
push
pop
and
daa
ret
shrb
sub
jp
ljmp
adc
or
cltd
mov
jne
adc
bound
test
cltd
add
xor
cli
or
inc
push
push
dec
inc
loop
fcmovnu
lret
addr16
ss
push
lods
mov
xchg
leave
mov
push
jecxz
out
movsb
add
sbb
mov
in
inc
push
lcall
and
enter
jns
cltd
sahf
mov
jmp
leave
mov
add
xchg
sbb
sbb
jno
and
and
xchg
sub
sub
ret
repnz
jecxz
pop
sbb
fildl
adc
int
popa
mov
push
cli
andb
jbe
and
repnz
fdivrs
sub
lock
js
sbb
cmp
imul
mov
jmp
mov
popa
js
lea
test
xchg
inc
lea
pushf
sti
daa
and
out
addb
test
xchg
push
adc
jg
adc
adc
adc
adc
pop
lods
pop
mov
test
shll
das
pop
cld
mov
and
clc
adc
arpl
pop
push
stos
cmp
cmpsl
scas
inc
jmp
daa
mov
aas
cmpsb
movsl
pop
int3
aam
rcr
sbb
aas
lods
push
mov
xchg
push
lahf
xor
cmp
mov
add
pop
mov
xchg
dec
sub
sub
adc
xchg
daa
xor
cvttps2pi
xchg
add
push
shrb
imul
mov
sub
mov
sub
and
mov
scas
das
jae
jbe
call
fwait
ret
sti
inc
scas
ret
lahf
ds
mov
sbb
shrb
xchg
pop
cwtl
test
sub
loope
idivb
popa
push
cmpsb
test
pop
rcrb
addr16
or
dec
xchg
cmp
mov
out
jecxz
fimull
repz
mov
cmp
mov
out
or
in
mov
cmpsl
aad
lret
mov
cmp
pop
add
es
xchg
mov
popa
mov
lahf
adc
pop
stos
xor
popa
push
xor
fsubrl
in
adc
sbb
xacquire
movsl
or
add
xchg
cltd
add
pop
les
xchg
es
iret
adc
addr16
test
mov
dec
popf
aaa
push
dec
fldcw
mov
sbb
xchg
out
pop
aam
aaa
push
adc
xchg
stc
ret
xchg
xchg
addr16
jp
or
repz
pop
imul
hlt
fcomp
rcrb
mov
scas
andb
or
pop
mov
popa
mov
scas
inc
xor
sub
sbbb
cli
fwait
xor
addr16
add
fnstenv
or
cs
mov
mov
std
aam
mov
sbb
inc
lods
int
jmp
rcll
and
mov
in
daa
cmp
ucomiss
push
mov
xchg
inc
inc
mov
adc
fistpl
insl
or
arpl
inc
pop
fcomip
and
xchg
pop
adc
ret
in
movsb
daa
mov
dec
jnp
mov
gs
push
inc
movsb
movb
adc
out
es
loope
jne
addl
jp
xor
or
adc
jecxz
cmc
and
pop
dec
outsl
push
xor
pop
es
xchg
add
fidivl
cld
sub
pusha
ficoml
dec
xor
hlt
and
and
cmpsl
jo
inc
insl
add
popa
adc
mov
jp
subl
sbb
jge
lcall
and
lea
popa
add
push
mov
fldcw
fwait
xchg
add
popf
push
pop
mov
pop
enter
les
and
pop
fwait
shlb
mov
sub
in
dec
roll
icebp
adc
inc
sub
lahf
xor
iret
ds
and
mov
test
xchg
popf
adc
rdtsc
push
lcall
rolb
inc
in
outsb
mov
jno
inc
ds
pop
aas
xor
mov
adc
test
dec
in
sub
pop
sbb
xchg
sbb
jne
and
movsb
loopne
and
rorl
cmp
mov
stos
sbbl
fwait
xchg
push
addr16
je
lea
add
movsb
sub
insl
and
popf
push
aaa
lds
int
bound
adc
daa
std
jo
push
and
push
xchg
add
mov
sub
sbb
xor
jmp
jb
mov
and
lret
shll
test
popl
fs
nop
mov
or
adc
jne
mov
xor
mov
pop
xchg
mov
or
sti
pop
or
push
je
adc
out
scas
inc
lea
and
xchg
movsb
jno
les
adc
and
sbb
adc
jns
enter
leave
and
scas
cli
cwtl
popf
lea
popa
mov
fsubrs
repnz
xor
adc
or
mov
js
lea
dec
xor
sub
sub
es
sbb
repnz
sbb
or
xor
mov
fwait
xor
loopne
and
jp
icebp
outsb
sbb
xchg
sbb
dec
push
les
daa
jns
sbb
mov
rcll
dec
popf
xchg
mov
mov
mov
adc
fstpl
dec
movsl
das
sub
fsubl
addl
hlt
mov
daa
daa
mov
push
cmpsl
sti
lods
out
or
sbb
and
stc
mov
les
xchg
jl
nop
out
add
xor
cld
jg
mov
gs
imul
xor
push
pushf
xchg
bound
fwait
subl
mov
xor
mov
cltd
fld
or
mov
adc
scas
and
cmp
jmp
fmull
imul
int
jne
xor
mov
xchg
fldenv
popf
sbb
call
xchg
fimull
cmp
sbb
adc
fcmovu
stc
inc
sbb
inc
add
ret
stc
inc
mov
mov
test
jecxz
insb
adc
pop
dec
rclb
and
shll
push
dec
adc
lds
sub
lock
mov
daa
sub
jle
jae
int
sarb
lods
fcomp
cmp
sahf
dec
sub
jns
xchg
iret
and
sbb
cmpsl
pop
dec
sub
mov
popf
in
jbe
or
xor
mov
clc
sti
sub
arpl
imul
test
pop
push
and
sbb
adc
pop
push
jno
xor
inc
repnz
dec
adc
and
mov
imul
popa
push
cld
nop
push
out
and
imul
push
aaa
roll
jg
loop
hlt
jno
mov
loope
dec
or
pop
in
iret
mov
sub
mov
sub
mov
cmc
sub
loop
fstl
xchg
xchg
push
sbb
stos
sti
pop
std
sub
jne
cmp
movsb
sbb
imul
aas
int
fbstp
cli
fidivl
sarb
add
xchg
mov
mov
jb
add
xchg
pop
sbb
lcall
enter
loope
aas
andl
and
and
xchg
clc
call
xor
sbb
in
jl
loop
call
sub
mov
fwait
adc
push
adc
xor
adc
out
mov
adc
pop
mov
xchg
stc
int3
out
jmp
add
pop
pop
cmp
cmp
jo
mov
and
and
jno
adc
pop
mov
xor
std
mov
addr16
sub
je
mov
inc
rcl
loop
push
fwait
test
cltd
popf
int
xchg
mov
nop
mov
and
scas
cmp
clc
cmc
push
adc
lahf
xchg
out
test
lock
push
xor
cli
and
xchg
mov
xchg
and
xor
dec
push
sahf
mov
mov
out
xor
mov
sbb
cwtl
xchg
clc
imul
outsb
add
mov
fsts
mov
xor
adc
push
xchg
inc
add
fimull
mov
test
fxch
outsl
sub
jbe
enter
sub
scas
ja
das
jo
jge
imul
cmp
or
adc
adc
xchg
sbb
cwtl
movsl
pop
sti
incb
dec
pop
push
mov
push
and
mov
push
std
mov
adc
jae,pn
bound
dec
xor
push
dec
dec
push
cmp
add
jbe
mov
mov
test
int3
pop
sti
test
cmp
dec
psubsw
popa
sub
add
lods
lcall
popf
fcomi
sbb
ret
ret
das
cltd
cmp
and
sbb
xor
mov
push
inc
shlb
xor
mov
movsb
out
xor
cltd
push
pop
xor
push
pop
js
popf
aas
imul
adc
mov
sub
or
nop
das
cmpsb
inc
adc
sub
pop
es
bound
sti
push
adc
lea
rcrl
mov
mov
and
xor
pop
cmc
adc
mov
sub
lods
loop
insl
mov
sbb
loop
mov
mov
inc
xor
loop
jne
xor
test
xchg
or
sbb
std
imul
icebp
sbb
xchg
popa
les
cmp
mov
mov
popf
adc
sub
sbb
jae
xchg
mov
roll
xchg
mov
push
fcomps
mov
xchg
jmp
push
push
sub
test
mov
xchg
dec
negb
movsl
popa
mov
aas
mov
mov
lahf
loop
and
adc
and
and
shll
push
fnstcw
dec
and
pmaddwd
repnz
dec
jge
mov
imul
int
ret
std
mov
cs
in
dec
and
inc
ret
dec
cmp
and
cmp
push
push
jae
popa
cmc
ljmp
jno
pop
es
dec
mov
jg
push
xchg
cmp
pop
push
sub
data16
jae
mov
mov
shrl
push
mulb
jecxz
jp
push
stos
push
incl
cmp
lcall
mov
cmp
mov
addr16
fidivrs
sbb
sahf
loope
lahf
std
int
clc
sbb
mov
loop
sub
or
leave
sub
jno
pop
cmp
or
mov
xor
call
dec
les
push
loop
xchg
sub
pop
push
mov
sbb
ret
in
int3
dec
push
int
mov
orl
add
mov
and
dec
ja
xchg
int
loop
inc
pushl
and
sub
enter
xchg
ret
xor
jnp
lret
jg
xor
lcall
int3
mov
in
in
js
xor
repz
ss
fdivr
popf
and
adcl
xchg
jg
push
ret
imul
jge
test
jns
inc
or
mov
into
or
xchg
mov
adc
jns
ficoms
ret
mov
test
mov
data16
mov
mov
aas
sub
xor
xchg
lret
or
jl
mov
mov
orl
mov
push
xor
movsb
sub
pop
mov
and
xor
cmp
pop
or
xor
addl
icebp
out
das
popf
sbb
sub
addr16
fxch
adc
or
xchg
in
xor
xchg
mov
shll
movsb
or
dec
mov
sub
sub
lahf
adc
iret
imul
mov
hlt
push
xchg
popf
imul
pop
sub
pushf
xlat
leave
and
pop
sbb
inc
sbb
cmp
push
es
stc
imulb
push
adc
push
sub
sbb
jne
sbb
sub
sbb
hlt
xor
xorl
jns
lret
lea
mov
test
outsl
lods
mov
mov
lcall
sbb
lock
aaa
add
or
testb
fcmovb
or
xchg
pop
adc
jnp
dec
jns
shl
sbb
sbb
xchg
shll
or
and
cltd
fistpl
sarl
insb
xchg
pusha
fs
enter
sbb
ficompl
and
aas
dec
movsl
mov
sbb
lock
andl
push
mov
xchg
sbb
sbb
addb
addb
cltd
dec
cli
xchg
add
inc
add
inc
addl
aaa
sbb
add
and
int
pushf
sti
pop
xor
or
cmpsl
mulb
and
ss
xchg
ret
push
and
mov
jne
outsb
test
xor
clc
xchg
lock
movsl
negl
push
imul
pop
xorb
cld
adc
lret
adcl
push
popa
adc
stos
cmp
es
add
push
xchg
clc
jbe
mov
sbb
or
sbb
adc
shr
push
xor
push
inc
sub
popf
inc
pop
add
mov
mov
sti
and
stos
movsl
stc
daa
nop
iret
aas
xor
xor
outsb
dec
mov
sub
fisttpll
icebp
xor
inc
pop
test
sub
sub
pop
ja
aas
ja
xor
sub
daa
mov
out
xchg
jbe
cmp
arpl
push
add
adc
sti
and
sbb
test
insl
cltd
jnp,pn
add
push
push
sub
mov
test
call
push
jne
loope
into
push
leave
push
and
mov
bound
sub
sub
cmp
fsub
das
dec
push
push
ds
mov
mov
xchg
sub
mov
and
inc
call
divb
pop
popf
jmp
push
jne
rorb
rcrl
aas
sbbb
pop
pop
pop
call
sbb
jb
addl
push
cli
xor
adc
mov
jo
sti
fdivrs
cmc
mov
in
lahf
test
int
push
pop
cmp
pop
mov
pop
std
push
ss
sti
adc
xchg
adc
mov
mov
push
std
popf
mov
push
into
sub
mov
cmp
out
hlt
movsl
xor
add
xchg
or
testl
xchg
sbb
ret
in
movsl
mov
jp
icebp
xchg
mov
das
pop
ds
inc
sub
aam
lret
push
jbe
inc
push
cld
test
mov
inc
sti
xchg
sub
cmpsb
rcll
lea
push
and
xchg
mov
mov
jno
sbb
mov
sbb
popa
cs
jl
jle
lret
cmp
mov
ret
stos
pop
jle
stc
cltd
shl
sub
test
and
pop
sahf
inc
das
xor
cmpsl
std
je
mov
jne
pop
daa
lcall
nop
cmp
mov
in
outsb
jne
rorl
fcomps
xor
xchg
mov
ret
popa
inc
cmp
mov
and
stos
arpl
pop
cwtl
mov
fwait
push
sbb
call
mov
jmp
movsb
push
push
adcb
xchg
and
jge
or
xchg
cmp
pop
fidivrs
fldl
cmpsb
cmpsl
or
mov
pop
aad
inc
icebp
icebp
mov
dec
gs
cmp
imul
and
jecxz
sub
sbb
cwtl
pop
xchg
push
fsubrs
test
pop
jmp
xchg
clc
jb
and
fstpl
push
mov
inc
xor
push
cmp
pop
insl
aas
push
jbe
xchg
ds
in
xor
lods
xchg
cmpsl
dec
pop
sti
pusha
mov
leave
pop
movsb
cld
ficompl
mov
mov
xchg
shll
sbb
inc
cmc
adc
push
addb
push
push
mov
in
pop
sahf
xor
cwtl
xor
fsubrs
stos
in
test
rep
dec
loope
mov
pop
in
test
ficompl
movsl
pop
push
out
mov
sbb
ljmp
add
adc
repz
cmp
push
fisttpll
lret
adcl
push
add
scas
xor
mov
sbb
pushf
stc
mov
mov
inc
js
les
cmp
and
xchg
lret
movsb
aad
mov
mov
adc
jecxz
lcall
or
sbb
jb
lahf
movl
xor
imul
sbb
sub
xchg
mov
lret
cltd
xchg
sbb
mov
xor
pop
or
addr16
push
aas
xor
addr16
fstl
and
xchg
mov
dec
test
mov
mov
push
out
rol
int
jno
sbb
and
pop
fstps
adc
sbb
or
in
repz
jns
aam
jb
sbb
xor
stc
push
mov
lea
and
stos
push
sbb
adc
push
and
add
cmpsb
push
xor
xchg
push
pop
shlb
inc
fs
sub
leave
mov
mov
inc
das
sub
mov
lods
xchg
push
mov
push
lcall
jns
or
xchg
xchg
sub
sub
je
push
jnp
outsl
sub
cmp
sub
cmc
adc
push
jne
lock
ljmp
imul
add
ret
lret
popa
lods
inc
jle
push
lea
cmp
repnz
cltd
inc
sahf
rcl
xor
test
ja
mov
imul
sbb
gs
or
scas
sti
ljmp
ja
int
inc
lds
and
ret
movsl
and
inc
sti
hlt
int3
mov
insl
fwait
jmp
pop
fnsetpm(287
and
sti
and
pop
add
sub
scas
pop
iret
mov
fidivs
mov
aad
jno
sbb
lods
and
dec
popa
xchg
or
imul
mov
lods
aas
dec
outsb
das
int
imul
cmc
dec
xchg
xor
mov
push
mov
movsb
mov
adc
addr16
fwait
jne
and
sbb
out
jae
popf
test
lock
dec
cltd
out
mov
or
das
lods
sbb
xor
push
sub
mov
mov
xchg
push
sbb
test
mov
aaa
push
mov
pop
sbb
enter
andl
inc
mov
movsl
xor
xchg
mov
mov
in
and
mov
jo
cmp
xchg
mov
pop
pop
stos
xchg
sbb
outsb
jne
ja
and
xchg
inc
add
mov
jbe
icebp
mov
sub
aam
in
je
jno
jno
xchg
lds
cmp
push
inc
cmp
push
pop
nop
adc
cs
std
pushf
sub
or
inc
xchg
xchg
jae
imul
dec
sub
cld
pop
and
movsb
iret
fstpl
cmp
frstor
cmp
pop
add
mov
push
sub
mov
lods
mov
in
mulss
inc
pop
leave
xor
mov
jno
rcrl
stos
jae
leave
dec
frstor
insl
jmp
jmp
push
xlat
sti
jl
jmp
jmp
jb
pop
pop
mov
cwtl
mov
iret
cltd
mov
adc
cmp
mov
dec
sbb
idivl
adc
cmpsl
mov
daa
mov
movb
loope
ret
notb
outsl
lahf
aaa
jb
xor
ljmp
outsb
xor
imul
aas
xlat
mov
xor
aaa
sbb
cmp
hlt
sub
cli
repz
or
cmp
sti
cld
lcall
push
imul
add
xchg
sbb
cmpl
psubb
push
cli
popa
mov
in
hlt
pusha
inc
rcrb
clc
bound
sbb
iret
test
daa
repnz
into
pop
xchg
and
in
repnz
rorl
mov
icebp
fs
push
shll
pop
lret
daa
cwtl
mov
mov
mov
mov
mov
push
xchg
les
cld
loop
mov
lods
pop
rcrb
sub
mov
pop
jno
push
gs
cmpsl
xchg
fcmovnb
data16
xor
and
bound
sbb
jno
push
xor
mov
and
out
pop
ds
dec
loope
and
cli
pop
fisubrs
mov
pop
push
insb
jl
sbb
mov
clc
mov
popf
push
xchg
and
sub
test
xchg
pop
xchg
dec
ss
push
notb
gs
xor
mov
je
xchg
push
test
mulps
les
mov
xor
cld
dec
xor
bound
pop
fwait
icebp
push
mov
lret
sbb
fwait
xchg
push
dec
stc
fs
and
daa
add
push
or
xchg
mov
mov
xchg
mov
xchg
bound
idivb
sbb
cmp
sub
imul
add
cmp
pop
push
sub
jae
rcrb
pop
stos
lods
cltd
cmp
subb
popf
testl
out
lcall
inc
or
cmp
and
inc
pop
mov
xor
cmp
lods
mov
in
and
and
sbb
lret
xchg
jmp
ja
and
jns
and
or
push
cli
push
add
xor
pop
or
push
mov
fldt
mov
xlat
inc
jno
or
addl
rolb
mov
aas
popa
sub
xchg
pop
imul
push
test
mov
or
movsb
mov
inc
rcll
cmpsl
push
lcall
jns
fs
pushl
cmp
cli
pop
ficoml
jno
sbb
mov
inc
push
mov
xchg
push
out
daa
pop
cmp
mov
into
fwait
push
jb
push
fimull
movsb
roll
es
ret
jne
mov
lahf
or
sub
xchg
mulb
stos
mov
mull
loop
jl
cmp
js
inc
sbbl
std
aad
fmuls
sub
cmp
ljmp
aas
adc
out
mov
lods
out
lods
repz
push
lret
cli
roll
adc
data16
cmp
pop
sbb
imul
and
pop
or
push
mov
jmp
xchg
shll
stos
ret
ret
mov
or
push
push
dec
push
lret
popf
popa
imull
movsb
jb
or
es
adc
out
jbe
push
jecxz
mov
cmpsl
inc
jno
sbb
int
sahf
xorl
jmp
sub
ret
dec
inc
pop
sbb
and
pop
inc
fwait
sub
rclb
xchg
outsl
ja
sbb
sub
stc
inc
sbb
sbb
sahf
push
and
lret
sbb
in
or
pop
xchg
data16
add
pop
or
test
add
mov
jae,pn
xlat
jnp
or
or
sbb
push
mov
fstpt
pop
or
add
and
orb
pop
xor
vpmaxuw
xchg
inc
pop
or
and
popf
test
xchg
ljmp
xor
fidivl
insl
popa
mov
ss
incl
sbb
inc
outsb
cmp
add
or
cmp
and
cmp
fisubrs
lds
mov
pop
js
sbb
cs
jns
mov
fldenv
loop
mov
inc
imul
das
arpl
xlat
pop
in
mov
in
mov
mov
out
sti
push
mul
cltd
and
outsl
sbb
in
test
je
mov
push
hlt
mov
push
cwtl
leave
popa
pop
xchg
push
pop
fldt
in
out
out
mov
dec
mov
fsubr
hlt
mov
and
cmp
mov
addr16
mov
cli
test
adc
mov
cmc
lret
mov
add
cmp
mov
xor
ljmp
mov
jl
int3
dec
and
bound
leave
iret
push
pop
sub
cld
sahf
std
dec
mov
xchg
lret
repnz
dec
ljmp
mov
jl
scas
push
shrb
pop
imul
inc
in
dec
adcl
sub
sbb
icebp
mov
xor
add
sbb
pop
lea
push
ds
movsb
js
jno
pop
sub
xor
jl
adc
test
arpl
fnsave
adcl
aas
push
dec
xor
stc
adc
push
sbb
mov
sbb
in
xor
mov
or
xchg
adc
test
xchg
aas
popa
and
out
and
add
adc
cmpsl
jb
loopne
jbe
in
repnz
pop
inc
xchg
and
cltd
les
stos
insl
imul
mov
add
ljmp
mov
xor
pop
bound
xor
add
adc
lods
sub
das
push
lds
sti
xchg
jno
jns
jo
xor
sub
mov
mov
cwtl
xchg
or
scas
sbb
pushf
push
push
jbe
lcall
imul
xlat
dec
scas
inc
sub
mov
sub
daa
dec
sahf
cld
jae
icebp
in
jle
test
jge
cmp
stos
sub
xchg
pop
test
test
imul
or
sti
sbb
xchg
xchg
jns
push
sbb
xchg
adc
lods
shl
hlt
push
sub
je
jns
aas
mov
sti
add
and
lods
and
call
movsl
hlt
xchg
in
js
mov
mov
int
or
jnp
mov
insb
sbb
call
dec
ret
mov
fnstenv
mov
stc
fbstp
pop
sub
xorl
arpl
popf
cs
leave
push
dec
sbb
xor
out
sbb
fxch
sbb
cltd
sbb
out
adc
push
stos
inc
mov
test
push
xchg
sub
push
or
sar
or
xor
xchg
cmp
push
xchg
das
nop
jne
mov
cmp
fnstenv
adc
sbb
dec
rcrl
movsb
and
mov
sti
leave
lret
aaa
mov
adc
pop
inc
mov
cmc
ljmp
inc
in
ja
push
aas
mov
pop
mov
jp
jge
cmpl
jle
movsl
int
ds
xor
shrl
pop
scas
roll
and
in
inc
rol
out
aaa
fsts
icebp
xor
xchg
inc
cwtl
fsubl
add
aas
fisttpll
outsl
and
loope
mov
or
subl
fnsave
mov
xchg
mov
xor
filds
je
push
jbe
ret
or
bound
aad
mov
addb
clc
popa
stos
stc
sub
sbb
ja
xchg
loop
ss
fiaddl
fsubs
pushw
cltd
jecxz
movsl
fisubrl
mov
mov
mov
or
sbb
mov
xor
dec
fldln2
jg
inc
xor
push
pop
push
shl
mov
jns
and
mov
cmp
mov
mov
mov
cmp
stc
dec
mov
lock
add
or
adc
inc
jmp
inc
imul
xor
xor
ja
jae
xchg
aad
int
shrb
or
push
lods
outsb
pop
mov
scas
jne
jno
or
fnstenv
fcomps
or
sub
push
leave
xchg
lret
add
gs
call
scas
shlb
testl
sub
loope
mov
lret
fwait
pop
aad
and
addr16
in
inc
orl
xor
pop
int
dec
aad
dec
fmull
ljmp
jns
inc
mov
jno
inc
loope
movl
or
orb
xchg
mov
scas
sarb
hlt
sbb
lahf
or
ja
pop
clc
xchg
cmp
push
cwtl
xchg
jb
fnsave
inc
push
lods
pop
cmp
cmp
sahf
popf
xchg
sbb
dec
push
test
in
std
daa
es
rcll
sbb
frstor
mov
sti
aas
sbb
push
jmp
and
xchg
stc
repnz
mov
popf
adc
incb
mov
push
sbb
icebp
adc
mov
or
xlat
cmp
fdecstp
arpl
or
pop
xchg
push
push
filds
pop
stos
cli
and
push
das
fadd
call
mov
cmc
call
jbe
addr16
std
pop
cwtl
adc
je
push
sahf
cld
sahf
push
fsubrs
pop
sbb
xor
inc
je
in
repnz
adc
push
pop
pushl
clc
xchg
scas
and
adc
adc
and
sti
xchg
adcl
cmp
xlat
cmpsl
mov
scas
adc
lahf
xchg
clc
cmp
jae
fwait
mov
int
mov
bound
cmc
sti
cmp
xor
int
das
sub
jle
cmpsl
mov
scas
jmp
movsl
cmp
mov
popf
mov
sbb
outsb
dec
push
aad
xlat
dec
add
adc
xchg
stc
mov
daa
call
xchg
push
aas
or
push
inc
dec
movsb
pop
aas
and
in
mov
pop
add
adc
cmp
pushf
or
jp
popa
xchg
sub
popa
out
aad
xchg
dec
in
xor
in
cmpsb
aas
incl
mov
xor
or
nop
or
mov
call
inc
jnp
jmp
jle
in
or
call
mov
clc
mov
fdivl
popa
rcrb
cltd
stos
push
cld
clc
outsl
xchg
xchg
mov
fidivs
mov
pop
pop
mov
xchg
dec
sbb
jbe
popf
mov
sbb
fcomp
fcoml
sub
cld
xchg
and
insl
push
int
popa
adc
incl
cld
jo
int
xor
pop
daa
mov
pop
mov
mov
call
leave
rclb
jg
cltd
jne
mov
pop
rolb
adc
xorb
sbb
sbb
daa
int
stos
loopne
push
mov
int
fsts
imul
aaa
xchg
adc
inc
sbb
cmp
subl
xor
mov
cmp
fldcw
fldcw
jno
jl
sub
cmp
ds
pop
inc
mov
loop
mov
jb
or
roll
or
cmovo
add
mov
mov
or
sub
sub
mov
mov
movsl
jnp
fnstenv
sub
dec
lods
orl
cmpsb
jne
in
iret
add
cmpsl
cmp
inc
mov
dec
push
mov
mov
and
xor
stos
pop
fs
dec
and
mov
xchg
dec
or
jecxz
scas
stc
dec
xor
in
mov
aas
or
cmp
sbb
cmp
insb
arpl
cmp
xchg
sbb
dec
outsl
jne
mov
fmull
and
xchg
add
jp
inc
mov
pop
fs
les
xor
imul
out
jns
hlt
and
sub
pop
fidivl
leave
sub
fldcw
push
lds
and
inc
cmp
push
clc
shll
xchg
mov
xchg
cmp
imul
mov
loop
mov
stos
call
jp
mov
or
and
call
xchg
sub
mov
push
cmp
mov
das
addr16
mov
cld
jne
enter
call
pop
jo
rclb
loope
in
bnd
and
js
popa
cltd
iret
xchg
push
stc
mov
push
mov
jle
popa
pusha
ficoms
shrb
iret
test
mov
mov
movsl
push
fiaddl
add
dec
daa
pop
imul
adc
push
jno
push
xor
jnp
xchg
nopl
and
xchg
xlat
jae
inc
jne
lcall
lahf
fucomp
fidivrs
push
pushf
pop
aad
fnstcw
add
xor
xor
in
adc
das
stc
fists
in
cmp
or
cmp
outsl
sub
inc
hlt
sbb
push
adc
push
call
sbb
xchg
fcompl
xchg
xor
pop
out
stos
sbb
xor
inc
xchg
or
xor
daa
mov
sub
jno
daa
and
sti
sub
js
cmpsl
mov
clc
xchg
and
pop
push
xchg
mov
cmp
lret
imul
scas
in
xchg
insl
mulb
jp
shrl
and
add
xor
cs
ret
inc
cwtl
lods
xchg
imul
inc
shlb
xchg
cmpsl
dec
int
imul
daa
xor
jb
sub
rcrb
lahf
sub
mov
xchg
add
cwtl
mov
mov
mov
push
pop
into
mov
lcall
pop
int
aas
sub
cmp
sub
mov
xor
lcall
pop
lock
scas
bound
in
pop
aad
xor
insl
mov
xor
sbb
out
mov
test
shlb
mov
lret
or
sub
mov
sti
insl
mov
mov
test
sub
add
clc
push
test
mov
sub
cwtl
dec
ja
movsl
fnsave
mov
pusha
cmp
cwtl
int3
and
int3
les
stc
and
pushf
xor
pop
sbb
pop
xchg
or
dec
aad
mov
fidivs
inc
cmp
inc
dec
mov
push
xor
adc
aaa
lods
lock
je
cs
and
sub
popf
cmp
lret
rcll
add
rorb
cmp
dec
mov
pop
cmp
ret
sub
push
out
mov
aad
stc
dec
jns
push
inc
cmp
xor
ret
dec
push
push
add
vcvtsi2sdl
popa
push
sbb
push
inc
stc
scas
and
daa
adc
and
mov
cmp
cmp
pop
and
pop
push
int3
lcall
cltd
lret
mov
imul
dec
xor
sub
ds
xchg
xchg
clc
sbb
jne
xchg
std
inc
jns
push
mov
leave
adcb
fwait
sbb
pop
sub
sbb
fnsave
adc
pop
add
inc
movsl
cmp
xlat
and
imul
out
and
movsb
sbb
popa
add
fistpl
sbb
cmp
mov
jmp
jns
lahf
stc
push
fcoml
mov
xchg
sbb
iret
fwait
or
sub
in
cmpsb
jns
pushf
cli
pop
xor
sub
lods
pop
and
or
xchg
sub
sbb
insb
lret
lds
leave
xchg
repz
push
sbbb
insb
and
push
gs
and
inc
inc
cmp
imul
cli
ret
mov
or
and
mov
sahf
test
lods
loope
cmp
es
push
mov
mov
push
imul
or
rclb
fcmove
lods
shl
push
sbb
jae
mov
jne
scas
mov
push
in
imul
sbb
push
xor
sub
sub
cmp
sub
mov
cltd
push
push
pusha
mov
push
lret
sti
es
xchg
push
cmp
arpl
pop
test
xor
out
fldcw
scas
mov
or
adc
movsl
inc
lret
popfw
sti
and
int
xchg
dec
stc
shl
xchg
jne
imul
or
fsubl
loop
push
cmpsl
stc
push
jno
xor
sbb
cmp
idiv
inc
pop
mov
popa
aad
mov
dec
mov
sti
sbb
out
sub
mov
sub
xorl
aaa
xor
adc
jge
imul
adc
idivl
cmp
push
gs
dec
jl
sti
add
into
xchg
add
jb
pop
mov
xchg
push
cmp
cmpl
mov
cmp
dec
movsb
lds
mov
sbb
leave
or
xchg
xchg
aaa
xchg
callw
pop
fildll
adc
stc
jg
cwtl
or
loope
and
mov
andl
std
lcall
push
mov
inc
push
jmp
nop
xor
cmp
and
mov
stos
mov
xor
iret
mov
inc
xor
lcall
dec
icebp
cmp
pop
mov
mov
push
popa
lahf
rclb
popa
inc
mov
mov
enter
sub
inc
imul
add
daa
stc
lcall
arpl
outsl
das
pop
aam
or
in
mov
mov
mov
insl
lock
stc
inc
or
mov
cmp
xchg
or
inc
fstp
xor
xchg
mov
sub
and
or
mov
inc
and
mov
loop
push
scas
inc
sub
mov
jg
lea
loop
jbe
inc
xor
fnsave
jo
or
out
popa
mov
pop
mov
and
mov
fwait
adc
loop
add
nop
push
test
test
lret
scas
mov
xchg
and
stc
xor
sti
and
or
cmp
add
sub
clc
jecxz
addb
xlat
cmp
pop
stc
shl
xchg
add
leave
xchg
shrl
xchg
adc
xchg
mov
loop
cwtl
in
pop
sarl
stc
imul
rdmsr
andb
rorl
pop
mov
and
hlt
xchg
push
out
fiaddl
pop
test
mov
insl
loope
dec
sub
cltd
in
sbb
iret
cmp
sub
or
adc
or
jmp
cmp
cmpsl
mov
addr16
inc
push
add
mov
inc
jo
sbb
cmp
cmp
mov
mov
inc
push
imul
cmp
xchg
pop
mov
mov
xor
ljmp
imul
adc
push
dec
xchg
mov
rep
mov
imul
push
cmc
add
out
icebp
pop
dec
xchg
push
cmpsl
mov
leave
fsub
std
addr16
nop
xor
ret
xor
in
subl
rcrl
ror
xchg
sbb
fs
shll
nop
jne
loopne
movsb
adc
inc
stc
mov
mov
jb
push
mov
repnz
cwtl
movb
inc
scas
imul
clc
cmpsl
leave
iret
mov
das
push
pop
addb
push
repz
sub
shll
pop
adc
push
stc
stos
loope
lcall
xor
movsb
bound
ret
dec
jmp
xor
jecxz
aad
adc
lahf
mov
xor
push
pop
test
mov
jb
inc
leave
add
mov
mov
adc
aaa
xor
out
xor
sub
mov
cmp
leave
jno
pop
sbb
or
jne
lahf
frstor
sti
in
mov
ss
push
and
xchg
imul
movsb
sti
icebp
imul
mov
imul
movsb
xor
call
nop
test
xlat
clc
push
or
pushf
or
ret
or
push
fsubrl
loopne
jo
fs
and
and
pop
mov
mov
add
stc
pop
fildl
cmp
pop
das
and
mov
jb
jle
ss
pushf
sahf
xor
cmp
xor
icebp
add
lahf
xlat
push
stc
js
xchg
scas
push
jb
ja
dec
cmp
call
popf
mov
mov
fldenv
pop
jae
shl
dec
inc
pop
cmpsl
rcr
cs
mov
out
outsl
mov
xchg
rcll
mov
mov
cmp
imul
add
fstpl
in
xor
lea
mov
mov
and
sbb
aam
or
pop
xchg
and
cmp
fdiv
push
mov
ljmp
mov
lds
or
or
stos
adc
pop
aaa
xchg
sti
xor
and
adc
sub
test
push
aaa
imul
cmp
mov
int3
adc
lret
xchg
add
mov
inc
pop
push
xchg
xchg
popa
xchg
shll
or
mov
stc
xor
movhps
jns
sub
xor
and
jne
and
xchg
les
sub
dec
push
dec
mov
xor
push
mov
xchg
mov
outsb
xorb
jbe
pop
mov
jae
cltd
lahf
ljmp
push
xchg
mov
data16
xor
jmp
icebp
mov
in
jbe
pop
fstpl
lds
dec
imul
jg
fcomi
sub
in
jb
and
jmp
mov
pop
push
fwait
push
cmp
lods
and
lea
cltd
test
arpl
jae
shll
lds
xchg
xchg
les
jecxz
mov
mov
and
mov
push
mov
addr16
popf
sub
lea
mov
dec
sbb
mov
dec
aaa
adc
stos
and
jmp
mov
pop
push
mov
cltd
repz
cmc
jecxz
add
cli
mov
and
sarl
aaa
mov
xchg
add
jmp
shl
lcall
dec
xchg
adc
sarb
jl
xor
push
inc
sub
dec
test
scas
and
sbb
stc
xor
inc
pop
ds
mov
in
popa
daa
test
in
out
cs
std
pop
sub
mov
cmpsb
mov
data16
call
add
mov
lret
cmc
sub
xchg
xchg
scas
lds
add
mov
sbbl
aaa
imul
leave
pop
xchg
ret
xchg
sar
jmp
xchg
pop
sub
xor
sub
sub
js
hlt
xchg
outsb
adc
mov
mov
fwait
fs
pop
repz
xor
shl
xor
xor
loope
jbe
into
je
stc
xchg
stc
nop
test
push
xor
xchg
and
dec
xchg
mov
jns
mov
sbb
das
es
sahf
xor
xchg
pop
das
orl
mov
ds
subl
pop
mov
mov
adc
adcb
ficompl
lret
push
mov
lods
imul
out
lods
mov
scas
mov
mov
cmpsl
xorb
xchg
pop
push
sti
daa
push
inc
xchg
jnp
in
cmp
test
add
das
mov
xchg
aas
jno
into
aas
pop
or
testb
inc
sbb
and
cmp
iret
push
js
scas
mov
and
inc
stos
aaa
dec
cmp
xchg
repz
mov
jmp
or
jo
push
mov
stos
fnstenv
cmp
push
cltd
mov
sub
or
mov
sbb
sbb
add
test
push
mov
push
jns
sahf
divl
sbb
inc
stos
sbb
mov
push
rcrl
and
mov
leave
das
pop
sub
mov
sahf
jb
and
rcr
pop
stos
xchg
stc
jb
rcrl
mov
xor
sub
leave
jp
lods
fstp
sbb
cltd
xor
inc
push
popf
cmp
sbb
sub
sbb
sbb
gs
shlb
sarb
xchg
scas
mov
arpl
clc
shlb
push
cmpsb
xor
mov
sbb
sub
jmp
and
push
loop
mov
lods
jne
lcall
iret
mov
xchg
aaa
movsl
flds
pop
sahf
das
mov
xchg
cmpsl
leave
addr16
cmp
out
pop
lret
les
dec
xchg
pop
or
cmp
and
call
jno
push
subb
xchg
sbb
outsl
movsl
lea
push
iret
ja
sub
gs
sub
js
dec
ds
sbb
addb
dec
popa
out
mov
out
add
call
out
adc
adc
imul
mov
mov
rorl
jbe
sub
ss
leave
outsb
jns
or
mov
jmp
push
insl
sub
popa
sbb
adc
push
push
and
arpl
sub
cmovle
mov
arpl
mov
push
mov
movsl
push
xchg
xor
sbbl
pop
aad
mov
fstps
add
sbbb
cmpl
xchg
ja
addr16
sub
sub
outsl
xorb
imull
es
jmp
clc
gs
into
cmova
push
or
int
sbb
shll
ds
mov
outsl
and
fdivrl
xor
pushf
pop
std
cmp
test
lcall
mov
mov
repnz
loop
pushf
mov
mov
cmp
and
pop
mov
pop
mov
xlat
in
jno
mov
es
lock
rorb
test
sbb
and
sub
lea
xor
rcll
sub
inc
adc
nop
xor
xchg
mov
pop
stc
or
out
shll
sub
mov
movsl
jne
adc
aam
and
push
mov
cmp
or
pop
test
and
fiadds
jp
jns
ljmp
or
iret
es
mov
repz
sub
and
pop
lea
out
push
pop
sbb
xor
cs
inc
ss
sarb
ret
pop
ret
dec
rcrb
inc
cmp
dec
sub
sbb
push
sub
and
ja
xchg
out
ss
lcall
mov
sbb
adc
out
pop
negb
xchg
inc
adc
jecxz
xchg
loopne
mov
push
icebp
mov
mov
dec
sub
mov
stc
lahf
jl
es
lret
dec
lea
leave
inc
lds
and
cmp
or
fistps
add
mov
jns
and
xchg
mov
sbb
push
scas
jmp
jecxz
xchg
adc
pop
sbb
pop
mov
xor
inc
cmp
pop
xor
jmp
jge
nop
sbb
nop
adc
cmp
in
adcb
jne
pop
or
hlt
fwait
arpl
insb
push
lret
adc
gs
cmpsl
push
pop
push
mov
int
movsb
cmpsl
cld
daa
xchg
push
or
popa
ret
lods
xchg
xor
mov
outsl
stc
aad
jge
inc
xchg
jecxz
xor
xor
repnz
addr16
sbb
flds
xchg
or
pop
inc
repnz
mov
push
jmp
xor
int3
and
xor
push
shr
fstps
fidivrl
test
inc
xchg
lods
add
das
or
and
insl
xlat
fwait
push
xor
xchg
push
cmp
mov
add
adc
movsl
test
mov
loopne
loop
and
mov
and
dec
xor
cmpl
movsb
sbb
pop
cld
cmc
add
out
in
xor
popf
hlt
xor
jbe
and
call
xor
arpl
aaa
xorb
and
and
nop
adc
or
stos
leave
test
in
dec
xchg
xlat
add
cmp
in
fnsave
xchg
adc
push
pushf
mov
xor
inc
call
sub
mov
mov
jl
or
and
push
aaa
std
push
mov
in
adc
jp
jmp
cmp
adc
xor
repnz
testb
pop
arpl
jecxz
jns
popa
and
bound
mov
or
scas
mov
cs
jbe
rorl
aas
movsl
mov
sub
jno
cmpsl
or
sbb
das
push
sahf
sbb
repnz
das
mov
sahf
and
jnp
jp
pop
jne
dec
cmp
jbe
cmp
sub
call
push
aaa
aas
and
jecxz
das
daa
add
adc
ficompl
stos
lods
gs
into
shl
or
andl
pop
pushf
xor
imul
sub
jae
dec
mov
xchg
add
insb
aas
cmc
mov
jmp
push
mov
aam
mov
loope
cmp
pop
jns
adc
mov
jno
push
mov
sub
push
inc
icebp
adc
sahf
sbb
std
sub
and
bound
adc
mov
jmp
sbb
xchg
mov
inc
xor
sti
fdivp
movsb
sbb
pop
xor
insb
mov
out
pusha
jae
movlhps
addr16
mov
lods
inc
sub
insl
pop
stc
in
mov
repnz
dec
in
cmp
aad
andl
pop
popa
out
mov
icebp
inc
xor
dec
xor
inc
outsb
repnz
cltd
jae
sahf
sbb
andl
sub
or
sahf
sbb
lods
sub
mov
jmp
sbb
push
inc
xor
in
lret
imull
mov
push
and
pop
push
fbld
stos
test
addr16
pop
jne
imul
stc
cwtl
xchg
xor
das
arpl
sbb
inc
jns
and
push
sub
mov
imul
movsb
pop
mov
cwtl
addr16
sar
sub
insl
in
addr16
subb
roll
icebp
mov
popa
add
imul
pop
leave
call
jno
out
xchg
lods
mov
xor
ljmp
popa
jns
iret
xchg
jae
xor
mov
dec
and
addl
repz
inc
mov
and
pop
outsl
mov
xchg
push
mov
mov
cmpsl
cwtl
mov
mov
movsb
and
push
jbe
xchg
sub
notb
stc
jne
loopne
mov
push
mov
mov
lods
push
xorb
and
movl
push
xchg
mov
push
fwait
pop
repnz
cmpsl
imul
mov
std
and
movsb
inc
test
adc
or
sub
cltd
cltd
mov
xor
lock
pop
adc
pop
shlb
lds
imul
in
cmp
pop
or
push
jp
mov
or
jo
out
jbe
iret
pop
cmp
lods
inc
bound
mov
inc
sub
cli
pop
sub
js
inc
or
xchg
xor
or
mov
jne
sub
xor
outsb
sub
mov
mov
fdiv
push
out
mov
push
aad
xor
fwait
mov
out
sbb
pop
js
and
mov
push
adc
aaa
cltd
pop
lcall
push
std
out
xchg
inc
pop
fldenv
cmp
adc
das
xchg
dec
pushf
cmp
xchg
jno
pop
int3
xchg
rdtsc
adc
roll
shrb
out
jne
add
and
movsl
cld
dec
and
arpl
inc
in
divb
cmp
and
mov
fwait
icebp
cmp
stc
lahf
dec
arpl
inc
push
mov
sub
cmp
push
and
lcall
jg
or
sub
and
adc
cmc
test
cmc
out
pop
icebp
cmp
xor
aaa
incl
shlb
dec
mov
jl
jae
sub
in
jbe
std
mulb
cmp
insl
ds
cmp
xchg
and
icebp
repz
dec
adc
popa
cmp
mov
mov
xor
mov
pop
imull
mov
sahf
mov
push
push
pop
jg
lock
fwait
in
sub
cmp
jns
push
jp
adc
inc
pop
or
and
arpl
popa
rcrl
push
xorl
int
fimuls
pop
ja
dec
pop
and
adc
shlb
xor
scas
xor
cld
bts
mov
sbb
xchg
ss
aas
dec
lret
imul
and
pop
xlat
push
cmp
sbb
sub
out
mov
imul
cld
out
mov
mov
pusha
cmp
mov
pop
outsl
cmpsb
push
xor
or
sbb
popf
dec
inc
sub
stos
jb
imul
ret
pop
push
jl
jmp
outsl
test
imul
inc
mov
aad
into
daa
ljmp
lea
imul
int
adcl
inc
inc
or
int3
dec
dec
adc
iret
popf
cmp
adc
and
rorb
pop
pop
mov
dec
push
test
iret
sbb
es
roll
ss
cld
adc
cld
subl
mov
mov
repz
stc
cwtl
cmc
push
loop
sbb
cmpsb
out
sub
test
push
xor
or
pop
sbb
test
pop
popa
aad
fsubl
xor
stos
xchg
cmpsl
pop
stos
sti
hlt
sub
xchg
inc
add
add
xchg
mov
movb
dec
xchg
pop
test
pop
jno
adcb
xchg
adc
scas
mov
mov
mov
sahf
mov
clc
dec
testb
movsl
mov
lcall
bound
aas
lcall
data16
xchg
cmpsl
ds
dec
lods
inc
in
imul
sub
push
mov
inc
jbe
stos
dec
jmp
iret
push
push
dec
sbb
cmc
ds
inc
and
popf
pop
leave
out
xor
bnd
mov
data16
addr16
mov
cmpsb
push
cmpsb
xchg
jl
popf
popa
mov
prefetch
das
push
inc
and
pop
arpl
cmp
jnp
mov
cmp
and
cmpsl
gs
out
inc
mov
push
xchg
jo
dec
loope
push
outsl
repz
pop
insl
push
cmp
sbb
std
test
or
out
imul
adc
sbb
loop
lret
fstpl
aaa
pop
sub
push
fisttpll
ror
xor
movsl
mulb
stc
sbb
cmp
jbe
fdivrl
cmpsb
jecxz
sbbb
popa
stos
mulb
das
and
pop
cs
lret
mov
arpl
and
mov
scas
mov
std
fnstcw
dec
fwait
xchg
cmp
ss
jmp
lods
and
dec
xchg
jle
cmpsb
loopne
mov
xor
stc
xor
inc
mov
loop
jb
es
push
das
shld
psubusw
push
sub
fdivrs
std
loop
pop
sti
adc
sahf
mov
outsl
sbb
les
dec
daa
inc
add
dec
push
push
mov
sub
mov
sbb
mov
cld
iret
sub
clc
and
mov
mov
mov
pop
mov
movsb
xor
cmpsl
mov
shll
sub
les
jns
shrl
add
fcompl
aam
dec
shlb
and
mull
data16
push
pop
jle
xchg
sub
bound
mov
pop
aad
jg
nop
fbld
jg
push
pop
out
mov
jbe
xor
push
in
xchg
adc
aaa
xor
test
jne,pt
push
imul
clc
pop
sub
sbb
nop
mov
out
dec
add
mov
dec
leave
jl
outsl
insb
mov
pop
shrl
out
test
and
test
sbb
dec
insb
or
xor
mov
pop
mov
xchg
and
lea
call
negl
mov
sbb
xchg
or
loop
addr16
cmp
jo
mov
cmp
andl
mov
shrb
xchg
xchg
lods
add
ficoms
or
xor
daa
adc
push
pop
call
sahf
adc
xchg
lods
push
cmpsl
mov
insl
je
sbb
lods
pop
sahf
lods
divb
gs
rcl
xchg
clc
outsl
mov
cmp
and
sbb
xor
cmova
inc
dec
jl
jne
iret
sub
adc
sti
pop
xchg
inc
sahf
and
xor
hlt
pop
test
decl
pop
lods
cs
jmp
xorb
xchg
or
mov
mov
int
and
andb
jno
xchg
xchg
jnp
test
out
add
je
adc
push
adc
pushf
sbbb
dec
push
and
into
sub
xchg
gs
inc
jno
and
mov
and
andb
adc
das
daa
je
mov
mov
or
push
sbb
fwait
mov
mov
and
add
sbb
ret
daa
sub
std
xor
push
or
stos
sub
mov
sbb
sbb
stos
sti
imul
mov
ret
and
sbb
and
iret
add
int3
stos
sbbb
stos
sti
in
aad
push
sub
into
repnz
jno
dec
mov
jg
mov
xchg
adc
jge
pop
sub
dec
cmpsl
jo
jnp
lods
movsb
fwait
lret
jne
xor
cwtl
sbb
shll
leave
mov
xchg
jle
fnstcw
movsb
dec
sub
mov
cmp
add
dec
cmp
jmp
sub
adc
xor
cmc
mov
stc
xchg
lock
sub
out
xchg
int
dec
mov
cmp
xchg
loop
mov
xlat
add
xor
inc
mov
adc
pop
sub
xchg
popf
icebp
cmp
inc
lahf
fdivr
xchg
pusha
in
movsl
push
and
cmp
jno
popa
pop
sub
push
push
cltd
xlat
rorb
inc
xor
xchg
xchg
mov
dec
aad
jns
fstpl
das
nop
pop
mov
jne
roll
fs
es
sub
inc
cmp
xchg
popa
adc
inc
popa
out
dec
mov
sub
push
arpl
add
mov
sbb
cmpsl
rcll
mov
xor
fstpt
lcall
mov
jge
mov
mov
test
into
inc
adc
push
movsl
stc
sub
mov
xchg
pop
add
gs
push
xor
shrl
jmp
mov
icebp
mov
jnp
push
das
leave
divb
daa
or
xchg
pop
and
jge
cltd
fnclex
scas
adcl
jno
and
and
aam
pop
cmp
mov
add
jae
mov
shll
pop
popa
inc
sub
cmp
cmp
and
cmp
pusha
cmpsl
lcall
movsl
jecxz
pop
add
fwait
push
jnp
jns
mov
xchg
in
aas
das
sbb
pcmpeqd
ds
and
mov
sbb
sub
xchg
adc
movsb
jmp
enter
push
or
imul
cwtl
nop
fsts
int3
lods
inc
jl
and
mov
call
cld
mov
lods
test
mov
sarb
int
sbb
or
nop
icebp
fadd
popf
pop
jae
add
cmp
cmp
sarl
and
push
jb
pop
xchg
pop
push
aaa
add
push
mov
adc
lret
shl
aas
and
and
in
sti
inc
lock
jecxz
adc
mov
inc
sub
mov
movsb
push
icebp
push
xchg
lea
loope
sarl
cmp
xchg
jo
or
pop
inc
adc
movsb
dec
push
dec
xor
pop
mov
cli
push
xchg
add
xchg
pop
arpl
lods
sub
mov
das
pushf
adc
mov
pop
or
cmp
repnz
popfw
sbb
lret
sub
add
outsl
cmpsl
adc
and
or
xor
push
call
inc
dec
or
insl
jmp
push
clc
jns
mov
push
push
or
and
addr16
add
popf
mov
mov
ja
xor
ret
mov
dec
mov
or
cmp
inc
xchg
movsl
add
paddq
mov
dec
pop
cld
mov
mov
xchg
adc
jl
mov
inc
push
sbb
sbb
xor
in
sti
addr16
xchg
cmpsl
lahf
xchg
mov
push
mov
and
aam
sahf
insl
incb
push
fs
clc
insl
xchg
sbb
mov
xor
femms
add
add
mov
sbb
and
and
xchg
leave
sub
sub
sbb
inc
and
fwait
repnz
fistps
pop
adc
mov
xor
xor
mov
addr16
or
sbb
and
adc
pop
xchg
xchg
sub
pop
and
pop
and
sahf
cltd
movb
sbb
pop
mov
jg
push
in
test
leave
push
sbb
mov
sbb
sub
fcmovb
popa
mov
mov
fidivs
push
lds
inc
jns
sarb
int3
aam
orb
xor
hlt
out
in
pop
jle
jo
das
hlt
sbb
sbb
clc
mov
cmp
andl
in
lea
push
sbb
fsts
push
mov
fpatan
dec
sub
jns
pop
adc
mov
imul
iret
and
push
cmpsl
hlt
push
mov
mov
stc
xor
clc
pop
add
fsubl
or
pushf
push
addb
sub
repnz
push
inc
or
dec
out
jns
xor
das
push
in
sqrtps
imul
mov
add
mov
ljmp
push
in
sub
and
mov
xchg
mov
adc
loop
mov
ret
into
pop
mov
cmc
into
aam
xchg
fwait
sub
cli
xor
add
sbb
cmp
push
xor
cmp
in
les
sbb
jmp
repz
sub
mov
mov
inc
rorl
adc
loopne
xor
push
mov
pop
test
mov
stos
sbb
adc
jne
lods
inc
stos
sti
lea
cmp
pushf
mov
dec
inc
scas
xchg
push
mov
call
inc
cmp
call
sbb
lret
mov
or
xor
pop
movsl
in
xor
xor
xor
cwtl
adc
or
sbbb
add
jle
mov
mov
sbb
fiaddl
mov
sub
enter
mov
or
lret
xchg
idivb
push
int3
loop
movl
jbe
aaa
push
adc
repz
lock
inc
mov
adc
pop
pop
cltd
bound
imul
sub
inc
mov
push
ja
jmp
das
pop
pop
fstpt
or
xor
pushf
cltd
xlat
addr16
movsl
imul
adc
jp
xchg
cmp
mov
addr16
outsb
popa
jl
outsl
dec
cmpsl
xchg
jmp
push
aam
in
mov
roll
ss
cmp
ja
cmp
mov
rclb
or
loope
das
xor
adc
dec
les
lahf
dec
mov
fwait
inc
stc
dec
dec
inc
xchg
inc
lods
sti
cmpsl
je
xchg
lcall
aad
jno
sti
adc
je
imul
and
arpl
add
cmp
and
mov
add
push
sti
sub
sbb
dec
das
push
loope
adc
and
iret
imul
je
hlt
repnz
aaa
mov
add
mov
ficoml
sub
movsb
mov
lret
xchg
pushf
ljmp
jecxz
mov
addr16
mov
shr
adc
aaa
sub
adc
pusha
push
pop
cmp
adc
pop
idivb
mov
iret
mov
sub
push
mov
ret
xchg
add
cmpsl
and
xchg
add
push
cmp
mov
xor
mov
out
mov
cmp
and
jae
cwtl
sub
add
xlat
test
add
cmp
mov
lret
and
enter
jns
loope
into
arpl
push
iret
push
les
pop
mov
sbb
mov
xchg
xchg
or
mov
mov
sub
mov
lret
test
aaa
fdivl
lds
mov
add
bound
insb
pusha
clc
dec
pop
shlb
ret
or
bound
std
stos
sub
bound
test
xchg
jp
aas
push
fisttps
mov
shl
adc
xchg
sbb
push
in
sbb
and
mov
adc
cmpsl
sbb
push
xor
inc
and
scas
mov
sub
xchg
movsl
loope
bound
push
fstpt
inc
xor
pop
and
jne
xchg
cmp
sahf
aas
lea
push
sub
adc
mov
xchg
pushf
into
adc
je
loop
xchg
sub
jbe
xor
movsb
sbb
cmpsb
test
call
sti
lods
sub
ret
dec
cmp
jns
sbbb
xchg
fisubs
jo
pop
xor
mov
cwtl
push
sarl
shrl
sar
jne
test
sti
sub
rcpps
xchg
mov
and
aaa
jle
andb
add
mov
popf
lods
movsl
inc
insl
mov
cmp
pop
dec
aaa
sub
inc
dec
repz
pop
ret
test
fldt
sbb
orb
adc
or
cmpsl
roll
stos
mov
pop
mov
push
and
inc
jecxz
jl
out
hlt
push
xlat
aas
sti
popa
xchg
sub
xor
insl
adc
es
or
fstpt
lods
push
mov
repnz
pop
out
aaa
sub
or
cmp
imul
push
subl
pop
cmp
or
movsl
push
lods
push
mov
rcll
loop
mov
mov
pop
mov
lret
push
fisubrs
sub
in
push
pop
pop
std
jne
mov
shrl
scas
mov
xor
add
ficoms
cmpsl
sbb
jo
jb
pop
idiv
clc
mov
pop
scas
cmp
push
iret
cs
call
stc
ret
leave
cli
imul
add
lds
jno
adc
mov
loop
les
icebp
cltd
inc
dec
xor
adc
rclb
mov
loop
push
sbbl
addr16
mov
adcl
mov
pop
jno
sbb
out
jns
pop
movsb
dec
ja
push
loope
mov
aaa
xor
mov
pusha
add
mov
pop
push
daa
lea
fs
stos
xchg
pop
xor
and
sahf
xchg
ret
daa
cltd
sbb
lret
mov
mov
popf
ficoml
repnz
movsb
mov
nop
and
mov
and
mov
call
push
out
sub
cli
mov
pop
or
pop
das
dec
rolb
mov
shlb
add
inc
or
je
mov
imul
pop
cld
daa
mov
add
leave
mov
jle
cmp
pop
mov
es
shll
add
jb
jns
xchg
cwtl
std
movsl
pop
pushl
test
push
push
inc
paddq
hlt
rcrb
adc
cmpsb
popf
scas
sti
out
or
lret
and
xchg
jmp
pop
sti
sahf
mov
in
and
pop
fsubs
inc
jno
iret
inc
roll
cmp
icebp
call
push
jmp
cmp
pop
nop
fists
pop
outsb
add
shl
dec
mov
cmpsl
mov
dec
push
pop
leave
pop
jno
xchg
inc
jae
jl
xchg
in
andl
pop
cmp
es
cmpsl
aas
test
movsb
jge
push
inc
and
rol
insb
pop
jnp
inc
mov
scas
pusha
int
xchg
xor
es
xchg
xor
popf
sbb
rorb
scas
jb
clc
cs
lret
xor
lcall
mov
or
dec
mov
pop
ffree
or
stos
xor
xchg
das
ficomps
negb
mov
jbe
and
or
out
ds
dec
repnz
pop
cmc
xchg
test
popf
jno
subl
dec
andb
pop
mov
inc
adc
lcall
mov
fisubrs
movsl
sbb
ret
mov
mov
or
sti
ss
push
outsl
popa
dec
jg
ss
and
dec
loope
mov
xor
xor
jno
fyl2x
push
and
sub
orb
pop
jecxz
adc
sbb
inc
int3
addr16
mov
and
mov
fisubs
mov
and
andl
jb
mov
pop
add
scas
jp
sub
in
mov
fildll
imul
jl
jg
pop
jne
pop
mov
or
sbb
xchg
imul
in
adc
cltd
xchg
xor
mov
or
test
mov
iret
das
mov
das
rclb
jnp
push
jne
es
out
mov
jns
cltd
mov
add
mov
cmp
xor
mov
fsts
addr16
xor
ret
xchg
stos
das
in
fiaddl
xlat
stos
push
sub
sub
xchg
cltd
cmpsl
mov
or
in
mov
push
ret
push
xor
imul
in
sbb
punpckhbw
cltd
sbb
lret
pop
xchg
fdivl
stc
icebp
adc
test
dec
rorb
mov
roll
cmp
sub
test
mov
xchg
dec
inc
das
push
push
push
lods
test
nop
cmp
add
gs
ja
or
add
mov
stos
mov
nop
mov
les
aaa
mov
adc
outsl
mov
push
scas
fisttpll
inc
cmp
and
cmp
jle
sub
push
push
stc
sti
es
andl
add
popa
fisttpll
lock
sub
mov
pop
mov
or
push
xchg
mov
sbb
jo
lahf
xor
lahf
icebp
test
iret
subl
dec
jo
sbbb
mov
push
add
insb
mov
pop
dec
jl
mov
cli
sbb
sub
or
dec
or
imul
mov
test
mov
and
aas
sbb
ja
ror
das
mov
xor
push
pop
out
xor
repnz
mov
xchg
addl
sbb
cli
fs
push
mov
mov
dec
xor
or
shlb
jg
jecxz
push
sbb
outsl
inc
sbb
xchg
xchg
jle
repnz
xor
sbb
or
xchg
fsubr
insb
sbb
dec
jg
mov
add
sbb
inc
pushf
sub
inc
jge
js
aad
jae
add
and
pop
stc
xor
loopne
subb
addr16
pusha
bound
lahf
test
pop
mov
faddl
jns
ds
in
aad
fwait
jbe
xchg
dec
not
popa
jo
aas
jecxz
and
add
adc
sub
cwtl
int
and
inc
cmp
mov
xchg
inc
dec
pop
rorb
push
das
xor
sbb
cmp
enter
ljmp
xchg
sub
cmpsb
repz
mov
sbb
xchg
ja
or
inc
inc
cwtl
rcll
ret
push
js
xchg
pop
push
and
mov
and
add
xchg
clc
or
push
aam
lods
jnp
cmpsb
push
and
and
pop
xor
jecxz
and
mov
ds
inc
sbbb
add
enter
test
push
int3
in
sub
ret
jne
aam
insb
inc
cmp
jle
cmp
inc
pop
push
dec
lret
sbb
out
or
push
mov
cmp
daa
cmp
ja
mov
or
arpl
push
cltd
xchg
aad
push
sub
jl
aas
and
push
call
cmp
pop
addr16
cwtl
addr16
push
sub
jno
stos
sahf
jns
adc
or
jne
ss
sarl
sbb
add
aaa
mov
ja
cmp
cltd
push
push
imul
dec
mov
lods
test
insl
sub
and
sahf
out
mov
and
jno
push
imul
xchg
pop
cmp
pop
sbb
adc
pop
rorl
pop
adc
xor
push
sbb
int
and
mov
sbb
xor
and
sbb
enter
and
sub
nop
loope
lock
sub
js
stos
xor
sub
push
pop
cmp
pushf
adc
push
xchg
loopne
jmp
mov
stos
inc
push
xor
mov
pop
push
pop
inc
jle
fldl
fisubrl
cmp
dec
dec
xor
js
xchg
stos
ret
cs
sub
lods
inc
mov
xchg
push
sub
pop
jecxz
stos
cltd
icebp
lret
into
scas
data16
inc
dec
out
cmp
xor
fistpll
popa
adc
das
ljmp
xor
mov
xor
sub
sti
jno
add
inc
push
xchg
loopne
imul
test
add
and
movsl
outsl
sbb
pop
cwtl
mov
sbbl
sbb
cmpsl
fsts
xor
dec
rol
insl
pop
mov
pop
nop
jns
push
dec
int
divb
or
adc
ljmp
orl
mov
mov
jb
shl
mov
jbe
orl
pop
in
mov
and
icebp
xor
movl
imul
pop
bound
inc
and
xor
cmp
sbb
inc
call
xchg
adcl
and
loop
std
dec
xchg
test
mov
sbb
out
mov
in
adc
shrl
insb
push
push
or
cmpsl
test
xor
xor
cmp
pop
int3
rcll
addr16
test
clc
sub
push
es
sub
iret
and
test
mov
pop
xchg
test
jns
mov
and
dec
push
inc
mulb
cmpsl
ss
cmp
mov
clc
push
stos
rcrb
add
out
jne
sub
or
mov
sbb
daa
adc
cld
lret
into
push
jecxz
jecxz
add
addl
mov
pop
sub
pop
mov
dec
aas
dec
fsub
sbb
cmp
mov
rol
dec
loopne
out
arpl
cmp
mulps
loop
xor
and
push
and
jl
and
cltd
push
fnstcw
xchg
lret
cmp
notb
or
jl
mov
cmp
add
rorl
cltd
inc
popa
jb
dec
cmp
jo
out
ror
scas
clc
mov
ss
mov
pop
push
xchg
and
dec
add
and
sub
stos
ja
dec
xor
sub
inc
scas
or
outsb
jmp
sub
xor
call
iret
shrb
xor
cmp
sti
fidivl
push
notl
cmc
jno
adc
sbb
xchg
sbb
call
cmpsb
into
or
pop
movsb
popa
mov
add
sub
nop
sbb
insl
push
mov
xchg
add
test
sti
jb
movsl
lahf
xchg
mov
mov
push
jnp
push
cmp
loope
dec
out
dec
bound
call
les
test
sub
sbb
xor
push
xchg
add
fidivl
fdivs
fnstcw
push
flds
popa
mov
pop
or
jne,pt
mov
inc
ud1
mov
sbb
ja
pop
lcall
pop
jg
scas
sub
pop
mov
xchg
iret
scas
mov
sbb
mov
xchg
mull
adc
jl
aam
jg
jae
cmpsb
test
gs
addr16
cmp
or
mov
fdivl
push
pop
insl
inc
insb
cld
inc
leave
cmpsl
dec
nop
jns
test
daa
js
bound
push
jb
jae
inc
imul
ss
jle
mov
bound
je
push
cmpsl
addr16
cmp
icebp
fs
das
test
xor
jnp
jne
mov
ret
hlt
mov
xchg
dec
sarl
push
jne
xor
mov
fldenv
jb
jnp
jae
push
notl
popa
into
movsb
sub
inc
test
fisubrl
inc
leave
xchg
jle
push
lahf
xchg
jmp
cmp
xchg
ret
jno
out
xlat
ja
and
jo
outsl
cmpsl
mov
popa
xor
lods
bound
out
subl
rcrl
hlt
mov
push
pusha
jne
sahf
xchg
repnz
mov
xorb
mov
daa
flds
ret
movsl
push
sub
aaa
cmp
xor
gs
iret
xchg
dec
push
cmp
mov
sbb
sub
push
xor
push
pop
push
jl
imul
imul
jge
or
cmpsl
fldenv
cmp
dec
imul
out
inc
lcall
inc
push
pop
aaa
jmp
ret
mov
adc
push
rcl
xor
pop
xchg
lods
and
dec
sbb
jbe
cltd
jae
mov
xchg
sub
or
sub
pop
lds
js
dec
jns
push
cmp
xor
nop
repz
rorl
stc
sub
xchg
sbb
or
in
mov
popf
gs
jge
xchg
mov
leave
dec
push
pop
lds
dec
mov
std
out
lods
mov
pop
mov
andl
and
inc
and
loop
xchg
cld
adc
xchg
loop
sbbl
adcl
loop
pusha
ljmp
xor
push
cmp
sbb
cmpsb
inc
cltd
ret
cmp
xchg
inc
cmc
or
xor
pop
jecxz
xchg
pop
jne
into
inc
push
mov
loopne
popa
mov
test
arpl
pop
jge
rorl
push
dec
pop
push
inc
bound
mov
fstp
imul
mov
repz
mov
lret
dec
xchg
sub
sub
incb
sbb
sbb
jo
adc
fs
andl
jb
cmp
aad
incl
sti
aaa
push
insl
icebp
mov
inc
mov
sbb
into
sarb
sti
xchg
inc
cld
push
mov
aas
jl
in
dec
and
rol
xor
in
push
inc
xor
ds
xchg
push
sub
dec
mov
cltd
pop
sbb
xchg
dec
xor
in
xor
addr16
adc
imul
out
push
jns
inc
sub
mov
nop
sahf
sub
std
repnz
popf
and
sub
push
movsl
rcrb
and
cli
lods
mov
das
out
xchg
jecxz
and
lods
dec
pop
sub
cld
test
sbb
push
inc
cld
sti
inc
sub
or
dec
xchg
jmp
out
push
inc
mov
js
popa
xchg
push
sbb
shlb
jecxz
mov
cld
movsb
cmpl
out
sub
adc
sub
sbb
xchg
movsl
inc
add
sbb
shr
cmpsl
xor
jno
inc
sahf
sbb
ljmp
push
pop
popa
push
cmpsl
jo
inc
or
lods
jecxz
xor
adcb
xor
xchg
imul
add
push
and
sbb
int3
add
lcall
repnz
adcb
daa
imul
iret
push
mov
inc
push
add
clc
inc
sbb
sti
push
pop
xor
lea
sbb
pop
outsl
xor
movsb
stc
jno
fcoms
arpl
mov
xchg
adc
bound
xchg
or
ficoms
xchg
inc
pop
or
jno
mov
cmc
mov
push
lock
jns
pusha
into
pop
mov
pop
imul
inc
xchg
int3
fwait
pusha
cltd
int3
add
iret
cmp
leave
push
popf
int3
cld
pop
add
dec
pop
dec
and
pusha
aaa
add
pop
xor
sbb
repnz
sbb
pop
add
dec
ja
xchg
xor
arpl
mov
pop
arpl
push
call
sahf
and
mov
xor
push
sbb
mov
mov
fldenv
cwtl
leave
push
and
fists
mov
xchg
repnz
pop
test
adc
mov
xchg
sbb
mov
sub
ja
dec
shll
pop
add
xor
adc
pop
out
sbb
mov
sbb
cld
cmp
and
xor
xchg
xchg
adc
mov
cmp
addl
mov
pop
and
inc
mov
mov
mov
mov
pop
leave
idivl
sub
rorl
jge
lea
das
aaa
inc
scas
aas
xlat
dec
imul
mov
in
and
xor
and
cmp
jp
shlb
movsb
arpl
push
and
mov
shrl
mov
or
inc
mov
lods
sub
jmp
rcll
leave
adc
dec
ret
sbb
repz
loope
gs
int3
daa
cwtl
xor
xorb
loopne
sbb
and
inc
mov
adc
push
frstor
dec
cmp
add
dec
jbe
mov
xor
pop
das
out
jne
inc
out
hlt
pop
aas
and
cmp
arpl
cld
jns
push
and
xor
cmp
lea
pop
arpl
and
inc
and
jl
pop
lahf
adc
mov
mov
clc
sbb
or
outsl
push
bound
pop
and
cld
jbe
stc
push
aaa
xor
sbb
out
jle
sbb
and
and
flds
and
sub
sub
es
cmc
sbb
adc
jecxz
ja
cwtl
mov
ret
pop
rolb
or
sti
adc
repnz
pushf
loop
jp
jp
pop
mul
jle
sub
pop
sub
fmuls
mov
test
mov
mov
mov
jmp
push
js
adc
mov
sub
call
jno
push
adc
xchg
sbb
xchg
dec
loope
loop
loopne
in
in
push
das
clc
push
mov
xlat
sbb
inc
jmp
mov
cmp
fists
mov
dec
cmp
lret
pop
xchg
aas
xchg
sub
and
mov
push
in
sub
clc
dec
lret
cmp
sbb
push
cli
jmp
cwtl
bound
mov
sbb
and
pop
sub
push
pop
jmp
xchg
xor
cltd
pop
ja
and
jne
subb
flds
add
sahf
inc
test
xchg
push
cmp
or
mov
jge
jno
cmp
stos
sahf
call
jl
adc
orl
sbbl
sub
push
pusha
mov
push
aas
push
aam
push
inc
pop
adc
popf
call
out
xor
sbb
or
decl
in
and
add
ljmp
call
pop
inc
int
packuswb
test
out
adc
push
inc
stc
adc
lock
out
mov
adc
ds
das
dec
and
dec
sub
enter
movsb
lret
adc
shlb
shlb
int3
inc
shll
xchg
lret
movsb
xchg
dec
sbb
int
dec
and
pop
xorb
mov
push
pop
add
xchg
ja
and
sbb
xor
rol
popf
bound
les
xchg
mov
shl
int3
dec
cmp
sahf
push
sbb
cli
jnp
sbb
and
or
xor
jns
jae
or
xchg
js
xchg
popf
or
je
adc
inc
ret
sub
movsb
adc
xchg
and
inc
ss
movsb
cli
outsl
das
adc
adc
add
lea
frstor
jnp
xchg
repnz
ljmp
sub
jle
sbb
sub
and
mov
jne
nop
cltd
ret
add
out
add
or
insb
notb
in
mov
push
ja
xor
xchg
iret
stos
dec
sbb
adc
mov
mov
ja
xor
inc
aad
sub
call
cmp
pop
sub
dec
and
dec
cwtl
sarb
jb
scas
outsb
cmp
das
fsubr
sub
popf
fwait
stos
push
jnp
into
fimuls
movsb
jns
ss
sub
addr16
dec
and
in
sub
and
and
ret
push
add
loope
insl
and
sahf
xchg
ret
stos
dec
and
jne
mov
orb
and
xchg
cmpsl
sti
hlt
je
dec
es
and
lret
mov
sub
pop
popf
mov
fucomp
cmpsl
outsb
and
sbb
push
scas
and
xor
idivl
xor
pop
mov
ja
ret
cmpsb
into
in
xchg
and
jnp,pn
mov
or
sub
mov
push
mov
sbb
aaa
pop
mov
sti
mov
lret
push
pop
sti
cltd
call
stos
mov
movsb
sbb
and
ljmp
mov
inc
sbb
pop
sbb
pop
rcrb
xor
je
pop
les
aaa
sub
adc
xchg
aad
xor
fidivl
lods
jp
xchg
das
mov
dec
mov
inc
inc
push
enter
adc
movsb
scas
cwtl
mov
and
mov
into
fadds
lret
daa
push
fiaddl
ja
push
rolb
and
push
lret
lret
inc
or
rol
xchg
xorl
or
push
pop
dec
mov
mov
dec
int
mov
dec
sbb
xor
inc
adc
xchg
cmp
xchg
or
jmp
jnp
pop
outsb
mov
pop
popf
insb
sub
mov
leave
pop
add
or
add
gs
dec
push
mov
in
test
add
fistps
idiv
leave
xchg
sahf
or
inc
cmp
adc
mov
lret
xchg
inc
pop
loop
push
sub
sbb
fst
dec
and
pop
mov
sbb
mov
arpl
cltd
imul
mov
stos
jae
out
and
mov
pop
hlt
fisubrl
das
sbb
and
xor
das
push
inc
add
sbb
mov
dec
movsl
cltd
sbb
or
dec
cmp
inc
xor
or
push
xchg
popa
or
lock
sbb
and
xchg
sub
dec
mov
inc
dec
pop
pop
mov
popa
jp
pop
mov
ret
leave
scas
adcb
xchg
mov
fdivp
mov
add
dec
sbb
mov
push
daa
int
mov
lcall
daa
loop
mov
add
mov
add
push
and
xor
mov
orl
xchg
arpl
xchg
inc
push
push
das
cmp
in
sbb
and
test
add
jnp
sahf
inc
loope
outsl
adc
pop
xor
lret
stc
iret
loope
test
cmp
lods
push
loope
flds
mov
jb
xor
imul
inc
push
loope
fsts
enter
inc
adc
jno
dec
popf
fildll
xchg
cmp
xor
push
loope
and
prefetch
or
mov
loop
or
cmp
call
sub
gs
pop
xchg
hlt
jno
push
out
inc
and
mov
rcrb
or
pop
cwtl
xor
sub
sbb
mov
adc
loop
pcmpgtb
sub
inc
pop
call
pop
aad
outsl
imul
inc
lcall
mov
orl
dec
repnz
cmp
lahf
mov
out
mov
int3
lds
push
sub
aad
daa
jecxz
sbb
lret
adc
inc
popa
cmc
mov
mov
leave
xchg
mov
sbb
mov
xchg
mov
cs
cmp
sti
repnz
fstl
int
xor
add
loope
or
push
aaa
xor
dec
cmp
xchg
push
cmpsb
stc
xchg
xlat
dec
push
add
cwtl
je
inc
fnstenv
sub
in
scas
dec
jne
jae
push
das
subb
xchg
sub
xchg
or
push
psllw
sbb
jae
mov
rcrl
sub
iret
stc
adc
mov
stos
repnz
cld
inc
sbb
xchg
sub
dec
sbb
mov
mov
xor
and
jns
int
cltd
das
sub
push
mov
popa
das
mov
or
dec
cmp
push
hlt
popa
das
push
mov
jp
sub
loop
rcrl
or
into
notl
jae
and
sbb
sbb
fwait
or
mov
jl
roll
fs
xlat
aas
fdivs
xchg
sub
mov
sbb
sbb
int
flds
hlt
subl
and
sbb
sbb
jae
outsl
out
jnp
cmpsb
insl
push
sub
sbb
xor
xor
int
push
mov
lock
in
inc
add
scas
add
mov
loop
push
out
cmp
and
and
repnz
js
sub
xor
mov
sti
test
jge
pop
cli
xor
std
pop
mov
and
stc
mov
cmp
push
push
mov
test
sbb
mov
pop
mov
out
push
inc
and
mov
mov
dec
loop
gs
mov
pusha
sbb
cs
and
inc
push
pusha
ret
rolb
stc
sub
pop
movsl
sbb
mov
xchg
mov
push
scas
lahf
jae
mov
nop
sbb
jl
sbb
pop
leave
sub
sub
cmpsl
sub
orl
add
inc
sbb
cmc
fistps
pop
pop
mov
cltd
cli
dec
push
pop
aad
sbb
pop
xchg
and
loope
and
inc
jnp
call
sub
push
mov
sub
mov
aam
xchg
daa
loope
inc
jnp
call
pop
mov
in
lea
ret
adc
inc
push
xchg
or
dec
cmp
sbb
cmp
cwtl
in
sbb
push
loope
cmp
call
pop
mov
aaa
push
insl
loop
test
lods
xchg
xor
repnz
inc
jae
jg
mov
cwtl
xchg
pop
sub
jbe
jnp
push
pop
test
push
xchg
and
or
call
es
pop
and
pushl
sub
sub
in
out
push
lds
notb
jno
push
in
xorl
insl
inc
pop
test
ss
jno
repz
enter
or
sbb
repz
pop
xchg
fnstenv
dec
mov
stos
push
lock
cs
xor
cwtl
stos
adc
sbbb
dec
pop
fdivr
sahf
clc
imul
ret
xchg
push
cwtl
sub
inc
push
ja
pop
sub
in
adc
and
adc
add
and
fistps
and
sbb
ficoml
decb
aam
in
rcll
cmp
adc
add
adc
inc
fstpl
imull
mov
push
cmp
iret
lahf
push
dec
push
pop
xchg
loop
scas
adc
inc
cmp
pop
adc
xchg
call
fadds
sbb
pop
jl
test
lret
mov
pop
jge
push
mov
mov
mov
outsb
and
mov
sub
sbb
rorl
push
push
stc
xor
int
pop
leave
pop
dec
push
repz
pop
aad
pop
ffreep
mov
xor
pop
shll
xchg
push
inc
and
shl
push
lcall
cmp
inc
stc
inc
mov
add
sub
aas
dec
push
cmp
mov
lods
pop
dec
dec
andb
imull
pop
adcb
inc
cmp
sbb
fsubl
movsl
mov
orb
jne
movsb
ljmp
cmc
and
sub
ret
sbb
sti
cmpsl
aas
sbb
fwait
leave
sete
ja
dec
cwtl
cmpsl
in
movsb
cmp
lcall
jns
mov
inc
pop
xor
inc
mov
fstpl
loop
ss
push
sbb
sub
sbb
mov
mov
fidivl
add
ret
mov
and
jne
jg
ss
imulb
mul
pop
loop
rcll
and
push
popf
cmp
jo
mov
push
ret
adc
inc
call
sbb
mov
lret
jnp
cmp
dec
ret
pop
js
data16
stos
aaa
and
and
inc
inc
call
inc
xchg
mov
push
dec
xor
fstpt
and
arpl
stos
xchg
xor
pop
mov
jno
loopne
sbb
add
mov
imul
xlat
arpl
pop
mov
pop
pop
les
sbb
out
mov
cwtl
clc
pop
es
popf
or
pop
lcall
dec
repz
sbb
int
movsb
es
mov
mov
sub
mov
std
sub
fnstcw
mov
jge
pop
adc
imul
and
push
shll
loop
mov
or
call
movsl
lret
aad
dec
mov
sahf
pop
out
scas
imul
adc
cwtl
inc
push
sti
in
inc
lea
cmc
les
cmc
ds
cli
and
or
popa
fisttpll
sub
jae
or
pop
sub
insl
xorb
mov
xor
dec
cmp
lcall
cmpsb
sbb
or
push
mov
fucomp
xor
sti
and
lahf
stc
aaa
lods
jmp
sbb
cwtl
mov
call
cld
addb
stos
cmpsl
xorb
sub
dec
add
pop
sbb
dec
mov
pop
xor
pop
pop
mov
je
sti
daa
mov
xchg
jge
daa
and
rclb
push
popa
loop
lds
hlt
push
repnz
cmp
jecxz
movsb
or
fisttpll
push
jae
adc
pop
cwtl
mov
ffreep
das
ja
xor
mov
pop
loope
push
push
sahf
int
ror
mov
out
jnp
icebp
mov
inc
addl
sub
ret
loop
mov
and
push
dec
test
ljmp
lock
xor
out
xchg
loopne
mov
rorb
xchg
adc
mov
mov
gs
ret
in
sbb
sahf
push
inc
mov
adcl
adc
xor
in
pop
stc
fldenv
pop
mov
cmp
mov
repz
or
test
adc
ret
and
pop
push
dec
pop
push
mov
add
sbb
xor
hlt
sahf
jmp
fisubl
xor
ja
xchg
pushf
pop
insl
orb
sarb
and
push
or
pop
inc
mov
cmpsl
and
jae
out
mov
push
lea
mov
leave
jnp
fmul
sahf
sbb
mov
push
and
inc
mov
es
inc
ss
xchg
dec
stos
scas
xchg
inc
push
sbb
sub
dec
mov
jno
mov
loop
cmc
dec
inc
jbe
ljmp
or
push
icebp
test
and
jne
add
mov
xchg
ror
sti
cmp
in
lods
stos
sar
xor
ficoml
xchg
loop
jo
jg
repnz
cli
and
repnz
stos
and
stos
jmp
pop
dec
xor
negl
cltd
stos
adc
mov
sub
mov
push
or
fs
and
cmp
aam
push
sbb
fwait
mov
xchg
ret
and
or
sub
push
sbb
fisttpll
stc
push
out
inc
pop
subb
cmp
in
sbb
shl
inc
std
push
imul
arpl
loop
std
cmp
fisttps
out
rcr
inc
or
push
mov
mov
iret
xchg
inc
sahf
and
push
lret
sbbl
prefetch
xor
lods
sub
jle
test
int
xchg
dec
sub
jns
dec
mov
pushf
stos
cmp
stc
adc
mov
push
push
jns
xor
and
leave
sbb
dec
push
pop
loope
cmp
mov
lret
xchg
push
cmp
sbb
xor
and
mov
inc
cwtl
out
adc
mov
psraw
cwtl
sbb
or
lret
jnp
and
mov
inc
xor
insl
xchg
or
xor
sub
mov
sbb
sbb
pop
xor
insl
ja
xchg
inc
out
or
cmp
xor
cltd
movsl
call
jle
mov
add
jecxz
divl
sub
xor
dec
sbb
les
call
mulb
lea
sub
mov
insb
mov
mov
repz
dec
jle
in
das
and
popf
das
stos
jno
sti
jge
sbb
pop
xor
dec
mov
mov
mov
push
icebp
pushf
inc
int3
xchg
add
sbb
mov
icebp
mov
gs
lahf
scas
imul
out
neg
cmp
sbb
cmp
cltd
cmp
rcrl
fiaddl
push
mov
or
popf
mov
jae
mov
or
cwtl
sti
adc
shr
int
jmp
mov
inc
inc
cmp
aad
cmpsl
faddl
inc
inc
cmc
mov
std
popa
arpl
in
aad
fs
xchg
shl
iret
sub
inc
dec
pop
mov
out
jne
js
add
ljmp
call
inc
cmp
sub
loop
mov
jmp
je
xlat
cli
nop
pop
xchg
sub
daa
mov
and
add
rorl
mov
sub
dec
or
icebp
pop
xor
aam
mov
xor
fstpt
cmp
push
testb
mov
fstl
push
ja
lahf
and
jmp
cmp
sbb
sbb
rolb
sti
ja
adc
and
cmc
mov
jb
aaa
es
sbb
pusha
mov
and
pusha
mov
call
fldl
xchg
int3
sub
cmp
arpl
add
repz
push
jmp
out
mov
mov
cli
jne
sub
pop
inc
adc
mov
es
lods
adc
stc
mov
dec
or
sbb
sbb
mov
mov
mov
cltd
cmp
loop
out
test
pop
xor
or
call
sbb
xor
daa
fwait
or
in
add
dec
das
cmpb
es
inc
adc
sbb
sahf
lahf
adcb
sbb
cli
adc
adc
arpl
lea
sbb
call
xchg
pop
in
jge
adc
sub
xor
push
repnz
mov
aas
xor
fldenv
push
pop
push
dec
mov
sbb
leave
shrl
out
out
rclb
rclb
in
mov
xchg
push
pop
iret
lods
ret
bound
xor
mov
adc
popa
movsb
inc
sbb
xchg
int3
sub
stc
or
lahf
mov
xor
dec
outsl
mov
sbb
inc
dec
outsl
add
mov
ljmp
ja
xor
xor
mov
gs
cmp
rol
daa
enter
xchg
repnz
mov
pop
ficoms
mov
cmc
sub
repnz
hlt
push
ret
std
adc
scas
inc
pop
movb
pop
pop
jb
mov
jo
repnz
sub
xor
pop
inc
movsl
aaa
add
inc
cltd
inc
mov
mov
test
jmp
inc
scas
add
call
test
sub
xor
xlat
sub
xor
std
aam
mov
inc
cmpsl
sub
push
dec
test
mov
test
push
xchg
lcall
cmp
or
add
add
in
sbb
cmp
pusha
sbb
mov
add
or
mov
mov
test
cmc
scas
dec
shr
inc
jno
sbb
dec
sbb
sub
xor
or
clc
inc
daa
mov
shlb
push
mov
lcall
mov
lods
sub
sahf
sbb
mov
insl
pop
mov
sbb
xor
popf
fwait
lahf
sbb
sub
test
xor
pop
xor
mov
mov
fnstenv
loop
push
fwait
ljmp
cli
mov
add
push
fwait
or
xchg
test
and
adc
cltd
sub
icebp
test
dec
xor
fcmovu
pop
jns
mov
daa
imul
mov
sbbl
pop
subl
lret
dec
sbb
les
movsl
xor
xor
and
dec
test
and
jbe
pop
xchg
xchg
rcr
lods
js
and
push
mov
sub
sbb
sub
xor
popa
mov
sbb
lock
jo
popf
jns
mov
and
cltd
lret
add
mov
xor
push
fwait
cmp
fwait
sub
fwait
sbb
sbb
inc
and
sub
andb
push
xor
testb
sbbb
sbbb
adc
sub
lret
xchg
sub
es
mov
cmpsl
sbb
testl
call
sahf
sbb
enter
dec
shr
push
imul
lea
cltd
mov
jmp
xor
lds
outsl
dec
and
pop
std
sbb
mov
and
sbb
cmpsb
cmc
outsl
and
xchg
lods
cs
sub
scas
and
xchg
xchg
ljmp
adc
xchg
idivl
scas
and
insb
mov
insl
out
out
scas
loopne
dec
pop
loop
inc
insb
cmp
mov
xor
adc
ret
fdivs
push
divl
cwtl
stos
add
cmp
mov
mov
aam
ret
rcll
test
mov
cmp
in
imul
adc
imul
inc
pop
jg
lcall
mov
test
xchg
lret
adcb
sbb
pop
in
dec
andl
cmp
out
push
clc
ret
xor
shrl
pop
jnp
inc
imul
gs
in
adc
stc
inc
sbb
testl
push
pusha
movsb
dec
or
popf
inc
pop
pop
add
mov
mov
sbb
dec
sub
stos
inc
mov
xchg
push
dec
sbb
pop
out
mov
test
inc
pop
popf
sbb
sbb
arpl
push
sti
call
mov
fcomp
stc
sub
mov
cmpsl
or
xor
cwtl
mov
popa
test
arpl
xchg
ja
int
mov
and
or
outsb
mov
setae
sub
loop
xchg
idivb
pop
adc
adc
into
sbb
mov
imul
ret
cmc
jbe
popf
and
call
test
fwait
sub
mov
push
mov
sti
add
pop
pop
pop
add
sti
aas
cli
dec
pop
xchg
pop
inc
movsl
cmp
and
fsts
fsubrl
and
fadds
fmul
jnp
aas
cmp
sub
push
mov
jge
in
sbb
shr
aad
mov
dec
pop
xchg
outsl
test
shrb
cmpsb
call
sahf
mov
lret
das
pop
push
rcrb
cmp
ss
dec
data16
jbe
xchg
gs
push
dec
cld
xor
cld
fsubrl
xor
jp
pop
aam
sbb
push
xor
dec
jbe
rol
rcr
sbbl
mov
or
ja
pop
ficoml
push
sub
xchg
xchg
jae
jnp
sub
and
xor
push
addr16
ficoms
jg
jmp
push
addr16
movsl
pop
fld
outsb
jg
xchg
sub
das
or
repnz
call
and
xor
popf
ljmp
xchg
aad
xchg
cmpsl
ror
loop
push
pop
std
ds
sub
sti
imul
jecxz
iret
and
sti
arpl
sbb
das
pop
repnz
test
icebp
push
rorl
frndint
sbb
ljmp
popa
ficomps
jecxz
lock
insb
add
jmp
push
pop
mov
loop
pusha
inc
push
adc
inc
loop
fidivs
adc
mov
sbb
push
movsb
int3
xchg
lret
xlat
jmp
or
xor
repnz
sbb
dec
sbb
jl
xchg
dec
sub
xchg
sarb
inc
dec
dec
jecxz
mov
push
xchg
adc
mov
or
xchg
adc
dec
sbb
das
xchg
sbb
jecxz
test
imul
sbb
or
fldenv
add
dec
xorb
add
jns
shrl
or
daa
dec
adc
jns
sub
cltd
jno
mov
xor
cli
mov
sbb
fnstsw
cmp
pop
call
daa
xchg
inc
sub
mul
adc
mov
out
mov
lahf
push
imul
xor
pop
outsl
xor
imul
cld
and
bound
stos
call
sbb
sbb
push
inc
add
inc
inc
filds
or
jae
and
arpl
es
mov
inc
loop
fcmovnu
push
push
jae
sbb
pop
and
test
sahf
and
hlt
fstps
insl
inc
es
pop
xchg
shlb
mov
and
mov
movsb
in
mov
aaa
sti
aas
in
daa
ret
cwtl
xchg
fcom
lret
add
out
mov
xchg
adc
mov
push
mov
sahf
shrb
adc
dec
pop
mov
cmp
cli
fidivs
sbb
xchg
or
das
sbb
das
lret
das
fisubrl
loopne
pop
mov
push
sbb
leave
ja
push
or
xchg
or
xor
pushf
rorl
dec
out
lahf
push
adc
mov
mov
sbb
sub
sub
aaa
loop
mov
mov
insb
fidivrl
iret
and
and
xlat
mov
fs
pushf
sbb
dec
scas
mov
sub
pusha
call
in
dec
and
and
popa
add
rcll
iret
mov
hlt
push
mov
xchg
cmp
adc
cltd
movsl
adc
pop
bound
xchg
and
call
ret
jp
insl
sub
pop
iret
loope
pop
mov
and
cmp
xor
stc
iret
push
push
adc
pop
xchg
ljmp
or
jmpw
daa
cmp
ds
and
dec
xchg
pop
pop
jbe
push
repz
jl
scas
fistpll
mov
popf
xorl
and
xor
repnz
sub
or
insb
popa
jo
adc
movsb
xchg
pop
dec
fildl
cmp
je
out
aaa
xchg
in
hlt
sub
push
ds
xor
xchg
dec
jle
icebp
lahf
das
pop
frstpm(287
movsl
push
arpl
loopne
mov
add
cmp
pop
hlt
stos
orl
ljmp
xor
repnz
push
xchg
mov
test
adc
dec
pop
sub
inc
inc
dec
iret
and
pop
and
bnd
mov
and
jno
cmc
pop
sbb
es
rorl
cmp
mov
les
jnp
lret
popa
pop
xchg
cs
mov
mov
scas
fwait
mov
add
and
dec
out
push
out
shll
mov
xor
push
pop
sbb
sbb
sbb
sub
fstps
jmp
inc
add
cmp
pusha
sbb
xchg
addr16
dec
int
iret
pop
lcall
mov
insl
sub
rol
pop
clc
push
js
add
sub
push
mov
iret
pop
mov
sub
cltd
sbb
inc
popf
rcr
sub
and
mov
repnz
scas
mov
mov
es
adc
clc
push
das
xchg
call
cmpsb
aas
dec
pop
jle
movsl
cmp
mov
sti
push
dec
adc
loope
mov
dec
xchg
sahf
addr16
test
pop
out
out
xor
arpl
pop
dec
movsl
movsb
jmp
add
leave
push
neg
xor
jmp
cmc
shr
and
cmc
xor
sbb
pop
shlb
pop
xor
call
push
shll
sti
and
aas
in
cmp
shrl
aad
cmpsb
stc
mov
movsl
or
push
loop
incb
xchg
in
aas
sub
xchg
mov
fmul
push
test
lds
and
push
xchg
mov
sub
aad
dec
pop
setne
jno
xchg
mov
ficomps
mov
pop
xor
gs
xchg
pop
in
stos
test
mov
sub
dec
call
aaa
mov
add
fmull
add
push
and
pop
pop
lea
int
sbb
and
dec
xchg
testl
repnz
loop
stos
mov
dec
jno
dec
xchg
push
mov
cmpsb
and
daa
or
ss
arpl
and
sub
inc
dec
jp
cmp
jnp
push
popa
dec
leave
cmp
jg
inc
and
and
push
scas
jmp
test
stos
cmp
push
ret
mov
imul
xchg
out
call
sbb
lds
rolb
lret
and
insb
or
push
inc
insb
pushf
dec
sub
jb
lret
lea
insb
daa
push
and
xchg
stos
adc
jmp
leave
push
mov
mov
mov
lcall
push
and
xchg
outsl
in
je
jo
xor
outsb
xor
ja
inc
rcll
inc
jl
and
sti
and
mov
adc
and
pop
ljmp
aas
pop
loop
jo
push
sub
andl
push
xchg
in
fstpl
adcl
xchg
adc
adcb
sbb
mov
mov
mov
cwtl
test
mov
mov
sub
and
es
xor
movsb
std
sarl
ss
inc
enter
cwtl
insl
cmc
jo
outsb
and
jg
insl
and
loop
subl
sbbl
dec
push
mov
je
sub
mov
pop
inc
push
add
inc
inc
ljmp
adcb
push
sahf
fnstcw
mov
lahf
jns
lock
pop
xchg
mov
aad
or
push
int
xchg
repz
pop
sub
pop
xor
mov
sbb
fldenv
fldt
sbb
es
loop
xchg
jle
dec
adc
xchg
cmc
mov
mov
jbe
mov
xchg
test
aad
xchg
push
add
stos
outsb
sub
add
aad
adcl
ret
add
cmp
pusha
sub
movsb
loope
icebp
mov
or
stos
pop
xchg
xchg
sbb
xchg
ret
xchg
aas
cmp
cmp
arpl
add
push
pop
stos
dec
out
inc
jbe
xchg
dec
xchg
or
pop
fs
xor
aaa
jp
xor
lods
mov
ja
popa
lods
fstps
sbb
or
xor
mov
cli
xor
mov
push
jmp
and
push
cmp
sbb
xchg
push
daa
loop
stos
and
rcrb
lds
cmp
add
jbe
and
loop
push
sub
or
xor
inc
mov
mov
jge
icebp
mov
lahf
mov
push
mov
jno
adc
xor
imul
pusha
aaa
daa
sarb
inc
lea
es
popf
pop
lahf
mov
aas
xorl
cmp
loop
jl
add
jb
cwtl
addr16
pusha
pop
pop
imulb
test
imul
out
out
dec
adc
inc
cmpsb
sub
sbb
or
xchg
or
andl
shrb
cs
cmpsb
sbb
mov
mov
cmpsl
sbbb
insl
movsb
stos
shlb
cli
mov
xchg
repnz
cmp
adc
jnp
mov
inc
push
jmp
mov
sbb
mov
cmpsl
sub
out
cmpsl
jmp
jne
test
mov
popf
inc
lods
sbb
loop
imul
inc
fisubs
xchg
test
fisubs
addr16
fs
cmp
dec
js
mov
xchg
es
add
and
push
jecxz
mov
jne
xchg
sub
xor
ja
xor
lcall
bound
and
gs
mov
adc
stos
mov
lds
cmp
mov
jns
out
xchg
movsl
or
fiaddl
mov
fidivs
popf
and
push
xchg
xor
push
rclb
subl
sbb
imul
mov
test
mov
call
data16
push
pop
push
gs
push
xchg
pop
es
iret
pop
popf
daa
int
into
cmp
sbb
xor
and
cltd
negb
mov
addr16
pop
jle
and
movsb
xorb
mov
or
imul
mov
adc
shrb
shr
andl
adc
mov
sbb
fimuls
pop
inc
sub
xor
rcrb
outsb
add
mov
jecxz
or
mov
fisttpl
imul
data16
mov
mov
xchg
jl
scas
push
jg
jmp
mov
ret
and
add
sbb
aas
sub
shll
inc
shlb
popf
sbb
mov
sbb
in
adc
ret
rcrb
in
or
loope
sub
inc
add
pushf
push
push
dec
data16
int
xchg
xchg
ret
ret
mov
sub
and
push
and
and
mov
test
lods
lret
lcall
dec
sub
call
pop
push
fwait
popa
insl
adc
ja
xchg
sti
andb
adc
mov
mov
sbb
out
aaa
mov
scas
dec
dec
repnz
psrld
aad
xchg
imul
adc
push
sub
or
and
leave
inc
mov
xor
adc
iret
insl
push
pop
stc
sub
rolb
cmc
mov
aas
lret
inc
or
dec
les
out
inc
sbbl
and
repnz
aaa
sub
sahf
cld
lret
mov
dec
push
sbb
clc
cmp
in
xchg
push
cmp
push
xor
mov
mov
lds
mov
je
mov
in
lods
jmp
lcall
mov
xchg
in
cmp
in
jnp
sub
xor
lds
ret
mov
inc
cwtl
lds
mov
lcall
inc
add
mov
and
jecxz
mov
into
xchg
call
mov
pop
mov
push
mov
sar
xchg
rolb
mov
push
cmp
test
popf
cltd
lods
in
mov
jne
jge
sbb
fnstcw
mov
in
sbb
aaa
push
mov
push
mov
push
fstps
lcall
int
xor
call
inc
daa
pop
aas
rcll
dec
cmp
add
sub
jnp
sahf
stc
fs
fiaddl
ljmp
push
jno
ret
dec
je
js
xchg
and
adc
jl
out
loopne
mov
dec
lock
lods
int
push
and
daa
cltd
rcrl
adc
or
bound
jg
out
cld
pop
dec
das
push
cmp
mov
aaa
jo
xor
mov
das
mov
mov
jb
xchg
cs
out
or
aas
inc
bound
dec
mov
cmp
icebp
or
sub
arpl
and
xchg
xchg
mov
dec
repnz
aaa
cmp
dec
sbb
out
sbb
jnp
push
imul
int
mov
inc
stc
sbb
ret
mov
jne
sbb
pop
stc
pop
movd
and
cs
pop
in
sub
imul
mov
imull
lret
repz
popf
mov
bound
inc
xchg
push
cwtl
std
imul
mov
mov
cli
movsl
pushf
jle
dec
aaa
mov
adc
dec
inc
fisubl
xor
leave
ror
pop
xchg
cmp
mov
xor
int
push
stos
in
or
xor
xlat
es
addr16
hlt
ficomps
jbe
arpl
or
aad
leave
inc
lcall
test
cmp
adc
pushf
std
push
sub
adc
shlb
or
call
test
out
insl
xchg
call
loop
testl
push
mov
mov
mov
mov
aas
mov
sub
or
and
pop
leave
shrb
in
cmpl
jmp
sbb
pop
or
or
xor
daa
addb
xchg
ficoms
adc
aaa
iret
dec
das
push
lret
repnz
inc
fs
pop
jecxz
jg
or
scas
mov
jge
jl
xchg
dec
sub
fsts
fimuls
out
sub
mov
addr16
dec
pop
popf
call
cmc
jmp
sbb
fstpl
dec
addr16
daa
inc
pop
and
movsl
mov
push
xchg
sbb
fs
sbb
in
dec
add
mov
adc
sbb
loop
fs
and
dec
cmp
aam
sbbl
xor
adc
ja
andb
sti
and
loop
aaa
clc
mov
lcall
mov
ljmp
inc
rcll
mov
pop
loopne
es
sbb
jg
sbb
jge
int
fs
cs
loopne
cmc
out
in
sbb
sbb
rorl
hlt
and
test
sbb
test
cmpsb
ljmp
xchg
xor
xor
adc
cmpsl
bound
mov
lahf
adc
inc
inc
adc
pop
adc
or
adc
or
imul
sub
mov
xchg
int3
add
pop
adc
cmp
or
sbbb
clc
or
mov
jo
aaa
mov
dec
repnz
dec
test
lea
int
dec
ja
and
adcb
aad
outsl
stc
push
or
popf
mov
icebp
inc
cmc
or
test
aaa
out
push
push
pop
decl
insl
pop
add
ss
add
jnp
sub
cld
pop
fildl
add
xor
imul
out
popf
cmp
cwtl
xor
cmp
push
pop
inc
pop
xor
lret
sub
fwait
movsb
nop
push
push
test
bound
adc
push
jge
jno
in
sub
rolb
xchg
jbe
cmpps
sbb
xchg
push
and
or
imul
cmp
inc
and
pop
test
mov
mov
inc
jecxz
jmp
xchg
or
sbb
push
mov
scas
outsl
mov
jns
or
out
mov
gs
inc
push
dec
sub
sub
std
add
stc
xor
fs
and
adc
inc
das
cmp
add
pop
and
outsb
js
arpl
xor
pop
inc
fimull
scas
cmp
movsb
mov
and
xor
dec
sti
or
and
sub
loope
or
xor
loop
add
ss
ss
cmp
adc
add
stc
mov
adc
xchg
xor
push
push
mov
pop
mov
sub
int3
ss
sbb
ds
pop
cli
clc
movsl
pop
and
out
aaa
cmp
arpl
negl
dec
mov
rolb
mov
daa
out
adc
pop
loop
rorb
lahf
aad
test
pop
jl
incb
push
ficoms
pop
iret
push
scas
mov
mov
rolb
add
imulb
add
lds
or
inc
addr16
xchg
das
cmp
cmpb
adc
test
or
mov
push
and
cmp
inc
push
mov
in
sbb
icebp
fs
adc
jecxz
adc
punpckhwd
repnz
sbb
decl
xchg
dec
iret
sbb
in
jle
call
mov
cmp
push
inc
sub
sbb
mov
mov
dec
xor
cmp
repnz
fisubs
cmp
jl
es
sbb
push
popf
jae
dec
push
fldcw
jns
ljmp
sub
jae
ret
pop
xchg
push
sbb
lret
pushf
outsl
pop
inc
in
xchg
imul
sbb
xor
dec
addl
and
jno
mov
repz
in
lds
cmp
adc
pop
aaa
int
sahf
sub
ret
out
sbb
add
test
data16
int
push
call
out
jns
mov
lock
xchg
jle
or
and
sub
aaa
xchg
call
sub
push
xchg
jo
fimull
bound
xchg
test
iret
imul
push
fidivl
pop
xchg
or
ss
inc
xchg
popa
std
cld
clc
out
pop
xchg
je
ret
xchg
mov
sbb
es
pop
xchg
loop
xor
cmp
repz
arpl
pop
mov
mov
mov
add
dec
jb
lahf
rcrl
ljmp
jns
push
imul
inc
pop
and
mov
push
mov
das
loop
xchg
je
daa
in
add
test
mov
push
es
mov
fs
fcmovbe
or
and
lds
push
ret
sti
das
push
jmp
mov
aas
imul
das
jmp
and
pop
sbb
orb
sbb
fisubl
nop
test
jns
mov
and
sbb
stos
mov
cmp
fsts
mov
sbb
ljmp
cli
es
mulb
repnz
sbb
sbb
xchg
decl
mov
xchg
adcb
add
lret
cmc
push
xchg
mull
rorl
jmp
push
or
or
pop
or
adc
mov
jnp
sbb
or
mov
into
xchg
push
mov
inc
negl
xor
sbb
fildl
xor
jge
stc
mov
push
aaa
sbb
dec
test
pop
call
dec
xchg
inc
inc
and
test
push
add
shl
aaa
and
scas
ja
in
call
inc
mov
mov
shrl
or
flds
ret
adc
test
loop
jno
and
rclb
les
stc
test
loopne
push
cmp
idiv
or
xor
inc
push
mov
jle,pt
inc
icebp
jns
adc
push
mov
sbb
and
shll
loop
pusha
mov
jno
pop
stc
sub
pop
sub
out
mov
push
mov
fildl
in
stos
jmp
mov
sub
xor
pop
fs
aam
and
call
xchg
ret
pop
sbb
cmp
test
mov
push
stc
jmp
pop
push
sub
ret
mulb
sub
popf
movsb
push
xorl
insb
aad
jae
inc
fmull
cs
pop
in
test
or
and
xchg
adc
adc
inc
loop
les
push
inc
out
mov
pop
mov
les
pop
bound
sub
gs
xchg
testl
sub
sahf
popf
sbb
mov
call
push
fisubs
icebp
out
std
scas
jecxz
cmp
sbb
sahf
daa
daa
subl
daa
pop
andb
adc
loope
mov
cmp
add
push
cmp
cmp
sbb
rcrl
dec
xchg
xchg
sub
adc
adc
shrb
xchg
lods
aaa
or
in
jb
or
into
aaa
and
add
pop
andl
jne
xor
daa
mov
xor
sub
push
mov
or
sahf
xchg
add
sbb
sub
sbb
adc
and
es
jb
sbb
sbb
popf
xchg
adc
sarb
xchg
fldt
cmp
sbb
jns
sti
stos
sbb
das
jg
adc
in
shll
mov
pop
sub
push
repz
sub
test
pop
adc
add
and
sub
xchg
sbb
add
mov
fnstcw
jle
or
xchg
in
jb
in
adc
push
sub
sub
orl
mov
data16
or
cwtl
xchg
xchg
cmc
or
mov
shlb
andb
sub
xchg
loop
jbe
pop
sub
xor
xchg
es
test
sbb
lock
jg
js
push
fbstp
rcr
mov
pop
nop
cltd
mov
flds
jnp
nop
mov
or
cmpl
sub
ret
fwait
adc
mov
cwtl
and
sbb
mov
cmp
test
cmp
lcall
std
mov
jo
cmp
mov
popf
mov
xchg
ret
imul
iret
xor
cmp
fstps
adc
xor
rorl
or
mov
push
pop
stos
pop
flds
cmp
and
xchg
shlb
sub
jno
mov
loop
mov
fldenv
inc
pop
fldcw
mov
aas
adc
push
sbb
outsl
sti
xor
int3
sub
sbb
daa
push
and
insl
mov
push
sti
pop
cltd
es
xchg
inc
pop
dec
and
sahf
call
push
or
jl
aad
pop
sub
sbb
dec
stos
popa
xchg
pushf
test
xchg
movsl
xor
xchg
es
push
sbb
dec
popf
lods
push
in
and
stos
xor
push
pop
mov
fst
xor
fcomi
inc
lret
shlb
and
popa
pop
cmp
hlt
inc
push
mov
mov
fsubr
xchg
xchg
push
aaa
popf
leave
sti
adc
xor
imul
pop
xchg
and
adc
repnz
sub
ficoml
pop
mov
ljmp
inc
inc
das
cmp
call
stc
sub
sbb
rdtsc
lret
bound
and
mov
insl
cmpsb
mov
fadds
pop
das
xchg
add
subb
in
mov
pop
jae
push
cld
aas
xor
mov
addr16
add
cwtl
movsl
sbb
push
add
aam
mov
pop
mov
mov
movsl
xor
push
lcall
mov
les
out
dec
fwait
adc
adc
mov
xchg
iret
out
or
out
ljmp
add
xchg
mulb
shll
ds
and
xor
mov
xchg
adc
jb
insl
xchg
insb
pop
ja
bound
push
test
push
stos
lret
or
ss
mov
popa
leave
incl
inc
inc
mov
mov
push
daa
cwtl
call
cltd
pop
xor
jbe
stc
mov
rcl
mov
or
push
sbb
addr16
fnstcw
mov
push
loopne
mov
lret
sbb
shll
jo
cmc
dec
je
in
out
iret
popf
in
fstl
stos
sub
mov
cld
pop
xchg
fiaddl
sti
sub
popf
adc
adc
loop
mov
push
sub
loope
sbb
loop
mov
lods
pop
jno
inc
sbb
push
xor
push
jnp
in
loope
sbb
shr
push
loope
xor
push
ret
inc
not
movsl
jp
scas
call
sub
xchg
push
orl
mov
or
loop
pop
adc
imul
sbb
in
xor
mov
lret
cmp
inc
push
call
cmp
xchg
sub
pop
xchg
jb
push
fcmovnb
push
dec
adc
in
lcall
mov
or
sub
int
inc
call
and
in
inc
and
stc
dec
test
adc
mov
sbb
pop
mov
fwait
cmc
data16
mov
rcl
push
and
stc
jge
cmp
nop
sub
cwtl
dec
sti
sub
mov
test
and
mov
fwait
mov
dec
scas
jb
pop
push
fldl
xchg
or
sti
fnsave
pop
xor
dec
push
xchg
push
jns
sbb
shrl
bound
xchg
push
and
and
nop
and
lret
fldt
mov
xchg
or
dec
pop
fwait
and
push
nop
rolb
pop
popf
adc
in
sub
jle
insb
push
and
sti
jp
xchg
gs
push
loope
pop
lods
cltd
inc
push
ret
mov
repz
cmp
popa
test
lds
jb
jno
repz
adc
mov
ret
mov
mov
xor
popa
xchg
inc
inc
xchg
nop
push
lahf
sub
dec
mov
sub
es
std
pop
lcall
lds
loop
arpl
aaa
inc
and
pop
int3
add
cli
aaa
lahf
mov
sbb
jno
ret
stos
mov
arpl
lods
mov
pop
jae
and
in
or
loope
movsl
hlt
std
bnd
mov
lcall
imul
data16
loope
pop
dec
push
iret
es
mov
das
pop
loope
push
adc
sbb
or
pop
imul
mov
mov
mov
aaa
add
mov
push
xor
cmp
and
loop
in
enter
ror
sbb
loope
mov
and
repnz
loop
dec
or
dec
mov
je
sub
loopne
iret
std
mov
leave
inc
push
mov
and
js
adc
das
mov
xor
fcmovnbe
fldcw
popf
sub
and
jne
ja
iret
dec
clc
orb
cli
sub
mov
popf
add
lock
sti
clc
int
xchg
and
sub
lods
adc
nop
das
gs
sub
adc
fstpt
and
in
rcl
mov
stc
pop
jb
push
adc
inc
and
movsl
or
pop
cmc
in
and
out
out
fsubrs
aaa
or
loop
loop
cmpsl
idiv
xor
call
and
aaa
test
push
inc
pusha
loop
punpckhbw
mov
mov
movsl
roll
gs
mov
sti
adc
mov
imul
mov
push
xchg
pop
mov
cmpsb
mov
ret
mov
rorb
add
and
and
jno
shrl
and
lret
mov
dec
xchg
pop
insb
xor
sbb
adc
mov
mov
mov
inc
std
adc
sub
out
sub
lahf
adc
or
jns
adc
mov
repz
loope
cmpsl
mov
std
sbb
sbb
pop
sbb
xor
mov
adc
push
popf
mov
add
add
popa
imul
sbb
mov
jno
jecxz
fcoms
sub
jg
sub
mov
push
std
push
mov
repnz
push
or
adc
inc
addr16
lcall
rcrl
cmp
cmp
sti
cmp
sarb
incb
shrl
cmp
add
or
test
mov
sbb
sbb
push
lahf
call
push
push
push
cltd
sbb
mov
lea
imul
lahf
cmp
inc
or
jo
adc
into
call
and
pop
and
gs
leave
add
jae
in
sub
cmp
xor
and
push
data16
mov
mov
xchg
xchg
icebp
mov
insb
cmp
lea
dec
dec
mov
dec
xchg
mov
mov
pop
and
and
sti
add
rsqrtps
js
lcallw
cmp
call
mov
aas
orb
cmp
push
stos
mov
jne
push
jne
sub
fnsave
les
pushl
lods
mov
or
idivl
call
pop
mov
mov
movsb
and
pop
adc
pop
add
int
xor
sub
pop
and
movsb
xor
call
jne
and
into
movsb
mov
push
xchg
sbb
mov
stc
cmp
fsubrl
into
hlt
and
sbb
xchg
xchg
nop
cwtl
dec
or
stc
sub
in
inc
or
popf
repz
xchg
jp
jl,pn
mov
aam
push
in
int3
xchg
shl
and
xchg
adc
mov
arpl
lcall
cmp
cwtl
push
push
jae
out
leave
and
ljmp
pushf
mov
mov
lds
sub
jno
ds
cltd
xchg
notl
adc
fmull
jg
dec
arpl
sbb
mov
arpl
adc
jo
cmp
xchg
popf
cmp
movsl
sub
or
es
sti
xor
add
ret
stos
inc
inc
lret
xor
push
and
sub
dec
jbe
daa
shr
or
mov
pop
hlt
lods
mov
sub
pop
test
mov
fstpl
sbb
mov
cwtl
sbb
xor
sbb
xor
cmp
dec
leave
adc
xorl
sti
mov
aaa
cmp
int
es
sbb
xchg
fsubl
jmp
lahf
jb
pop
icebp
push
test
and
and
pop
subl
das
mov
shll
pop
adc
or
and
stos
mov
lods
add
lods
or
pushf
dec
push
out
pusha
push
mov
and
jbe
in
jl
pop
aad
cmp
cltd
mov
pop
loop
enter
push
mov
and
pop
pop
sub
adc
sbb
movsb
imul
and
fs
insl
test
push
dec
mov
adc
sbb
cmp
sub
in
xchg
mov
dec
cltd
jno
inc
repnz
cmp
call
sub
stos
fcmove
insl
sar
cmp
call
ljmp
mov
roll
lea
test
adc
into
push
mov
ss
aad
lcall
dec
out
jmp
xor
cmpsb
adc
mov
dec
sbb
cwtl
fs
mov
fistl
ja
push
lcall
sbb
mov
mov
stos
int3
adc
and
adc
jg
dec
xchg
das
pop
mov
rclb
test
aaa
enter
lcall
ret
mov
lret
xor
stc
sbb
xorb
lds
divb
sbb
push
fstpt
cmp
xor
loop
add
movsl
gs
ja
cmp
repz
lcall
stc
mov
jmp
gs
push
popa
inc
push
cli
pop
cmpsl
dec
jb
sub
xchg
cmp
xor
adc
popa
lret
mov
dec
xchg
ljmp
lcall
std
xchg
mov
xchg
xorl
mov
aad
xor
andb
sbbl
mov
insb
cmp
arpl
fldt
ljmp
dec
mov
cli
out
fldcw
jge
xchg
xor
and
mov
cwtl
cmpsb
ss
mov
push
call
mov
cmp
repz
roll
inc
rorl
xor
pop
sbb
cmp
mov
popf
dec
rclb
cmp
or
cmp
outsl
divb
scas
bound
inc
sti
mov
lea
cld
jnp
in
and
pusha
gs
sahf
aas
mov
push
inc
sbb
adc
cli
cmp
pop
sti
arpl
xchg
popa
sub
inc
das
addr16
adc
push
mov
popf
mov
rcrb
mov
and
loop
pop
xor
enter
rcll
inc
mov
loop
iret
pop
orb
push
fcmovnbe
cmpxchg
jge
cmp
pop
cmp
xor
sbb
sahf
icebp
stc
popa
dec
xchg
int3
dec
dec
push
xor
call
mov
loope
add
pmulhuw
out
jns
inc
inc
and
cld
outsl
shrl
mov
fdivr
imul
fsubrs
jmp
sub
add
adc
movl
rcrl
xchg
mov
xor
mov
test
xor
stc
cmpsl
sbb
cs
add
mov
inc
idivb
in
cs
jno
icebp
add
lock
out
cltd
sub
frstor
sbb
mov
jge
jno
add
add
pop
push
mov
or
sbb
loop
cld
adc
add
sbb
sbb
popl
mov
sbb
nop
test
rcrl
add
dec
stc
jns
pop
rorl
pop
sub
lahf
sbb
call
jle
mov
and
test
clc
pop
xor
pop
inc
fisubl
push
push
fsubr
lahf
inc
loopne
movsb
sbb
hlt
push
adc
inc
rolb
hlt
xor
in
ror
dec
aam
je
mov
add
in
inc
int
cli
sub
dec
jae
cwtl
sti
pop
shll
xchg
mov
push
decb
dec
cltd
xor
int3
pop
lea
push
xor
lods
mov
fdivrl
xchg
mov
out
getsec
jb
add
xor
pop
inc
rcrb
pusha
xchg
cmpsb
inc
in
sub
sbb
adc
lods
adc
call
faddl
cmp
and
cmp
jmp
pop
push
jns
pop
sub
cmp
movsl
jns
cmpsb
mov
and
cs
mov
xor
mov
dec
pushf
jbe
jp
stc
cmp
repz
mov
or
fidivl
xor
xchg
icebp
sub
in
loop
roll
add
imull
cmpsl
mov
pop
dec
xor
mov
jl
jns
and
xor
push
mov
add
inc
shll
in
xchg
popf
sub
movsl
adc
cmpsb
sbb
repz
cmc
loope
out
mov
in
push
jl
mov
popa
xchg
popf
roll
fisubl
pcmpgtw
mov
cmpb
lcall
adc
dec
int3
arpl
repz
xor
xchg
jg
out
xlat
pop
sub
sub
outsl
jl
or
and
sub
addr16
aam
mov
es
pop
sbb
das
jb
jae
and
adcb
cmp
addr16
or
addr16
sbb
xchg
ss
mov
into
dec
lds
xchg
mov
inc
cmp
xchg
and
push
inc
call
iret
jne
bound
sub
scas
mov
xchg
es
in
xchg
cmp
aas
cmpsl
lock
pop
iret
aad
leave
leave
test
mov
push
lret
inc
mov
push
fldenv
mov
es
jmp
inc
movsl
loope
sub
and
push
lret
add
inc
pop
sub
repz
insb
mov
imulb
xchg
xchg
pop
sbb
mov
adc
and
mov
xchg
push
movsl
ret
fimuls
scas
mov
push
dec
adc
jp
mov
cwtl
bound
xor
jb
icebp
xchg
cmc
jno
xchg
and
sub
mull
or
mov
stc
mov
or
in
call
xor
das
sub
add
rcrl
jle
cmp
test
shll
leave
das
adc
daa
mov
push
outsb
adc
scas
sub
mov
cmpsb
js
xor
xlat
gs
insl
add
data16
stos
pop
ror
aas
stos
pop
add
aaa
push
ret
cmpsl
xor
jns
ret
loop
and
ror
stos
pop
imul
mov
jns
adc
xlat
movsb
push
sub
stos
sbb
cmpl
xor
mov
sub
xor
sbb
sbb
lods
call
sub
pop
lods
aaa
fisubl
push
mov
sub
call
aaa
sub
adc
sbb
pop
mov
das
nop
and
out
xor
cmp
xchg
dec
mov
stos
or
sbbl
mov
jo
cltd
mov
stos
cld
daa
in
xchg
cmp
jmp
or
stos
cmp
dec
sbb
mov
lret
fimull
or
xor
clc
cmpsl
inc
ret
leave
mov
jns
rol
das
pop
hlt
in
ret
stc
push
mov
inc
jmp
pop
cwtl
nop
icebp
ja
sbb
mov
lock
adc
cmp
lahf
negb
lea
ret
out
jg
push
cmp
or
loop
xchg
inc
loop
hlt
sbb
adc
loop
cltd
push
xchg
push
mov
lods
lcall
sub
adc
inc
lret
sub
mov
iret
mov
sub
test
mov
stos
lea
ss
jno
sub
ja
dec
xor
cmp
push
sahf
cmp
sub
call
cmp
mov
in
leave
loop
and
dec
call
xor
sbb
bound
sub
mov
insl
push
pop
xor
notb
std
sbb
and
cmc
sbb
pop
sbb
sar
inc
or
pop
mov
sbbl
mov
out
mov
and
es
nop
cmpsl
and
mov
mov
and
pusha
add
xchg
shll
iret
int
dec
es
mov
adc
sbb
mov
adc
and
test
nop
lcall
in
ret
mov
mov
lret
or
adc
pop
ret
jl
push
dec
jmp
mov
inc
jg
repz
shlb
movsl
sbb
jo
xchg
das
ja
push
in
cmp
sub
pop
into
add
aas
xorb
cmp
das
data16
xor
fisttps
or
pop
cmpsl
cmp
out
mov
push
cmpsl
jne
add
out
cltd
fcmovnu
and
pop
pop
aas
hlt
inc
filds
pop
ds
sti
scas
cmpsb
imul
mov
sahf
jne
mov
mov
and
fcoml
fxch
cmp
and
cmp
stc
xor
or
out
aas
das
or
mov
cmp
add
sbb
movsl
cmp
lea
lcall
loop
fs
hlt
and
xchg
sub
adc
fimuls
cmp
popa
sarl
mov
inc
arpl
test
and
cmp
jle
sbb
xor
cmpsb
jecxz
add
arpl
or
cwtl
cmp
or
jb
arpl
and
dec
outsb
mov
inc
cmp
imul
push
cmpsb
xchg
pop
fldenv
lret
cmp
arpl
cmpsb
inc
cmp
sbb
add
mov
inc
cltd
sarb
cmp
inc
test
pop
popf
stos
mov
dec
orb
cmp
cmp
xchg
loope
add
sub
mov
dec
loope
stos
pop
int
push
and
les
add
loope
popf
repnz
push
pop
mov
mov
jb
imul
imul
push
lods
xchg
pop
in
mov
iret
dec
mov
cmp
jp
pop
and
sbb
lock
mov
inc
cmp
pop
imul
movb
pop
popf
mov
scas
fisttpl
lahf
cmp
cmp
in
and
loope
pop
inc
fwait
mov
imul
pop
inc
pop
fisttpl
cmp
movsb
mov
cmp
adc
ja
rorb
mov
loop
lret
roll
xorl
std
enter
sub
push
and
sub
push
int3
xor
into
push
fxch
push
mov
test
fidivs
outsl
iret
and
xor
popa
jns
sbb
icebp
sbb
iret
adc
cmpsb
movq
jl
testb
aad
and
sidtl
sub
xor
ljmp
xor
cmp
inc
shll
arpl
mov
sarb
cmp
das
sbb
stc
sbb
daa
mov
aaa
adc
sbb
lret
repz
cmp
and
cmp
insl
les
cmp
xchg
jae
mov
and
cltd
gs
inc
xor
rclb
xchg
sub
pushl
mov
and
popa
outsl
push
mov
rolb
sbb
pop
mov
sbb
jo
sub
arpl
popa
or
adc
add
xchg
xor
sti
and
mov
cmp
andl
jns
mov
sub
gs
cmc
xor
and
sbb
aam
pop
sub
mov
mov
mov
pop
xor
sbb
cmp
sti
fimull
dec
push
imul
inc
add
jns
sbb
sub
ja
pop
jno
cli
rcrb
inc
adc
dec
cmpsl
xchg
icebp
and
stos
aaa
mov
and
push
xor
int
mov
adc
stc
mov
dec
and
xlat
sbb
cwtl
sbb
pop
inc
inc
sub
add
mov
and
into
jno
cwtl
inc
int
inc
ja
stc
add
add
mov
lods
push
popa
insl
xor
push
sub
inc
mov
daa
push
lcall
shr
push
mov
xor
xor
sbb
add
cmp
push
xor
cld
out
jbe
shr
xor
fld
bound
loop
xchg
adc
sub
sbb
jnp
jo
and
pop
fnstsw
cmp
cli
stc
popf
int
sub
mov
repnz
psubq
jnp
push
xor
cmp
sbb
sbb
jae
fwait
fs
mov
or
out
jg
es
sbb
int
inc
jg
cmp
mov
icebp
gs
and
sti
lea
push
sub
add
sbb
xor
mov
xor
xor
inc
je
sti
and
and
call
ss
add
and
mov
mov
roll
inc
lret
xor
inc
jle
scas
mov
loope
adc
dec
xor
pop
mov
into
or
cmp
repz
dec
ss
in
stos
nop
in
ljmp
lidtl
mov
stc
lea
aam
and
inc
outsl
sahf
lea
gs
ret
dec
dec
ffreep
mov
mov
in
and
out
jno
mov
mov
add
dec
and
and
mov
mov
jl
jle
add
add
xchg
in
sbbl
push
insb
xor
adc
cmp
andb
add
cmp
pop
and
insl
test
mov
cld
fisttpll
insl
xchg
and
sub
push
repnz
push
cmp
and
pop
jns
sti
aaa
jg
test
lcall
popa
pop
stc
in
mov
in
mov
cwtl
iret
xchg
push
push
mov
dec
loop
pop
fstps
addr16
into
fdivl
popf
pop
push
jg
add
or
or
rorl
mov
jnp
xorl
subb
or
jecxz
inc
mov
or
jge
aad
subl
ds
xchg
xchg
sub
fldcw
xor
popf
mov
mov
pusha
xchg
idivb
insl
jae
loop
adc
pop
pop
push
add
xchg
aad
add
mov
ljmp
push
lret
in
shrb
imul
ret
jae
jo
xchg
andl
xor
fstps
popf
inc
inc
mov
outsl
shrb
add
xor
add
pop
call
cwtl
ss
sub
inc
xchg
lds
xor
pop
jmp
mov
sahf
cmp
mov
mov
shlb
mov
mov
ljmp
in
and
adc
and
call
lea
adc
das
inc
xchg
sub
cltd
push
inc
sub
ret
sub
or
pop
sbb
shll
inc
xor
xchg
fldenv
aas
lahf
inc
xlat
out
call
xor
loope
in
gs
sar
jns
scas
pop
add
xor
cmc
pcmpeqw
fnsave
and
sub
sti
inc
movsl
inc
mov
cmp
add
cmp
loop
and
fst
dec
sbb
enter
insl
cmp
sbb
in
mov
notb
lret
faddp
out
mov
adc
xlat
imul
sarb
dec
push
add
dec
sub
adc
dec
das
jle
mov
repz
mov
push
call
cmpsb
pop
inc
shl
aam
rcll
mov
jae
inc
adc
adc
xchg
dec
mov
or
pop
pop
inc
xchg
sub
add
mov
cs
rorl
cmpsl
push
inc
or
push
jno
aaa
xchg
cmpsb
ljmp
xchg
xlat
sbb
icebp
or
xor
xorl
mov
and
jg
or
mov
pop
push
mov
add
loopne
daa
push
mov
std
cmp
adc
pushf
xchg
mov
sarl
add
or
jae
dec
adc
lods
or
jo
fs
ljmp
jnp
sbb
cli
push
flds
sub
add
test
push
jge
xchg
ja
aad
aas
mov
pusha
xchg
test
cmp
int3
shlb
mov
call
mov
mov
jnp
mov
jae
lods
adc
pop
cli
std
xchg
cmp
iret
pop
in
adc
lea
sbb
ret
test
push
cmp
and
lahf
outsb
js
call
cli
xor
sbb
pusha
mov
inc
push
jg
or
cmp
adc
out
sbb
jmp
push
repnz
imull
es
iret
icebp
iret
outsl
lods
xor
loope
jns
sbb
popa
pop
jbe
sub
icebp
mov
adc
push
in
cmp
cmpsl
fs
iret
or
lahf
push
adc
movsl
adc
mov
addr16
iret
loope
lods
sbb
pop
and
pop
pop
or
mov
pop
movsl
mov
xor
das
and
sbb
bound
ss
mov
mov
test
fnclex
jl
sbb
ret
xor
adc
enter
fxch
add
mov
test
mov
pop
and
insb
icebp
inc
push
in
add
and
inc
outsl
shrb
push
dec
aaa
mov
mov
jns
sub
pop
mov
out
outsb
xchg
xchg
jge
iret
jbe
mov
fwait
imul
push
dec
mov
xchg
sbb
flds
push
pop
mov
push
pop
mov
loop
ret
xor
out
popa
cmpsl
sbb
xchg
push
popa
xchg
and
push
fdiv
sub
aaa
push
pop
push
lret
lds
jb
shl
xor
mov
sahf
push
dec
cmp
inc
fidivrs
push
inc
outsl
popf
leave
xchg
pop
ret
sahf
inc
fcoml
jns
icebp
adc
in
arpl
or
lds
decb
daa
adc
dec
mov
cmp
icebp
imul
sbb
cmp
mov
loop
lahf
sub
jge
jmp
in
imul
sbb
out
sbb
stc
ret
dec
loop
pushf
xchg
add
and
cmp
push
shlb
arpl
sbb
cmpsl
push
push
mov
jbe
and
cmp
sub
pop
push
push
nop
hlt
adc
pushf
push
inc
sub
jae
pop
dec
inc
insb
mov
cmpsb
fwait
cmp
gs
cmp
test
sti
cwtl
push
add
cmp
nop
in
incl
and
adc
or
mov
das
adc
inc
lock
inc
dec
mov
cmp
pop
inc
arpl
xor
push
fistpl
xchg
cmp
xchg
lea
mov
sbb
lcall
sbb
popa
fcmovbe
inc
int3
outsb
xor
cmp
add
das
sbb
es
pop
push
xor
test
and
inc
push
and
popf
fsubrl
jg
mov
fs
adc
sbb
fisttps
ds
shr
fstpl
popa
mov
mov
test
jl
xor
inc
mov
xor
lahf
inc
fldcw
push
xchg
inc
mov
iret
adc
nop
mov
mov
arpl
mov
pop
cwtl
lds
loope
sbb
xor
sbb
jns
sub
and
loopne
add
add
adc
mov
pop
sahf
addr16
sub
push
sub
sub
xchg
iret
mov
int
jno
mov
xchg
mov
or
cltd
jmp
loopne
xor
dec
ds
mov
hlt
int3
lret
jbe
int
lret
int
xchg
sti
sbb
jb
lret
ret
push
and
inc
fidivl
adc
fstl
sar
dec
cmpl
inc
roll
mov
in
lahf
xor
cltd
jno
xchg
jg
pop
xchg
sti
or
fwait
cmp
call
mov
pop
inc
mov
int
or
repz
shrl
sub
cli
cwtl
sbb
xchg
pop
pop
push
push
xchg
fld
xchg
adc
push
mov
adc
xor
sbb
add
and
outsl
and
cmpsl
addr16
sbb
and
iret
nop
daa
mov
nop
fstpl
vmovaps
push
adc
xchg
mov
add
xchg
das
xchg
push
add
cltd
adc
int
movsb
jecxz
sbb
or
jp
xchg
and
xchg
inc
loop
jne
cwtl
ficoms
and
fbstp
rorb
cmp
roll
pop
inc
fidivrl
push
sub
add
dec
addl
or
loop
xchg
xchg
in
testl
xchg
inc
sub
xchg
xlat
rorb
fucom
jbe
leave
xor
jns
and
das
ss
iret
sbb
mov
mov
test
mov
rorb
fs
xchg
pop
call
mov
and
ja
pushf
ret
mov
adc
or
push
fidivrs
lods
lea
jle
dec
nop
lods
cltd
mov
out
mov
lret
aaa
cld
push
push
mov
outsl
ss
and
cmp
and
fcmovb
iret
jns
dec
out
bound
sub
inc
lret
pop
sbb
xchg
aaa
push
add
call
jns
iret
xor
stc
lods
fldl
shl
inc
stos
divb
cltd
in
rorb
adc
fwait
sub
inc
pop
dec
or
push
divb
xchg
lahf
ja
push
mul
xor
mov
mov
push
jge
sbb
sarb
xor
js
or
stc
jp
test
pushf
stc
dec
mov
jp
sti
sbb
call
mov
push
adc
mov
jbe
repz
repz
in
and
mov
xor
pop
push
andl
mov
inc
ror
jns
sub
outsl
mov
push
mov
mov
cmp
xchg
cmp
imul
cmp
sbbl
adc
push
and
scas
das
mov
xchg
fs
ret
call
sbb
xor
mov
lret
adc
popa
sub
in
aaa
ret
push
insb
or
imul
and
inc
xor
sbb
xchg
pop
dec
cmp
mov
jge
cmp
and
jae
dec
cmp
shll
and
pop
xchg
ss
adc
or
xor
cltd
loop
pop
call
int
test
pusha
and
roll
and
sub
test
fdivrp
loopne
xor
shlb
int
loopne
inc
mov
jns
mov
mov
test
mov
out
xor
mov
daa
xor
inc
sub
mov
cmp
or
add
dec
mov
sbbl
add
mov
mov
fwait
cwtl
aam
jmp
gs
dec
sub
adc
xchg
xor
outsb
pushf
movsl
push
inc
sbb
unpcklps
pop
jl
sbb
adc
iret
out
or
and
scas
fs
add
pop
prefetcht2
xchg
lock
cmpxchg
jecxz
sbb
sub
cltd
inc
ds
dec
sub
xor
fidivs
cmp
dec
mov
mov
mov
add
xor
movups
movsl
stc
sbb
sbb
sub
sti
test
dec
mov
xor
test
push
leave
sbbb
push
mov
call
push
lahf
dec
sub
lcall
sbb
inc
pop
aad
call
inc
dec
sbb
aad
sub
add
mov
or
jp
and
cli
jl
cmp
sti
or
sbb
adc
cmpsl
int
sub
dec
xor
mov
sbb
in
stc
in
scas
cmp
repz
adc
xchg
mov
test
out
add
test
pop
inc
sub
pop
cmpsl
shlb
pop
dec
jp
adcb
inc
mov
lret
pop
sub
xchg
cmp
mov
mov
out
or
xor
pop
mov
mov
jmp
sbb
xchg
shll
and
addb
mov
or
push
sub
and
in
cmp
mov
fbld
push
xchg
out
sbb
and
mov
pop
ds
mov
inc
push
cmp
sub
mov
jnp
test
xchg
aam
pop
mov
iret
mulb
mov
or
ja
xchg
and
out
sbb
and
pop
xchg
mov
add
adc
sbb
sbb
or
fcomip
add
enter
sub
sub
ja
aaa
sbb
hlt
shll
arpl
xchg
test
mov
fisubrl
xchg
cli
push
jno
sbb
push
cmpsl
jmp
and
outsl
jecxz
mov
fwait
and
pop
push
bound
jecxz
jae
mov
imul
mov
mov
sbb
sub
daa
push
call
mov
dec
insl
and
and
inc
and
inc
fistl
enter
jl
or
and
cwtl
cmp
or
cmc
loopne
sti
add
adc
mov
pop
cmp
sbb
fidivrs
ret
dec
cmpsl
divl
or
rorb
in
xorl
dec
jno
out
pop
sub
add
das
stc
cmp
mov
mov
pop
sbb
inc
das
addr16
pop
pop
lret
insl
pop
sbb
pop
sub
jp
out
or
cltd
and
jg
xor
icebp
xor
xchg
into
jecxz
mov
cld
daa
jae
nop
inc
test
inc
xor
xchg
pop
jns
hlt
xchg
ror
rolb
in
inc
adc
ja
call
mov
scas
arpl
sub
sub
push
test
dec
icebp
dec
adc
mov
lahf
call
mov
addr16
jns
int
sahf
pmulhuw
jbe
lods
int
test
adc
push
rcrl
mov
adc
or
ljmp
and
das
sti
addl
daa
leave
call
cmc
popa
imul
push
inc
mov
imul
sbb
or
test
add
in
inc
and
xor
hlt
fistl
mov
sub
dec
fldenv
xchg
sbb
or
and
ljmp
scas
mov
daa
iret
xor
or
call
sub
mov
or
sub
stos
outsb
push
push
mov
jg
imul
pop
or
or
popf
adc
jne
ss
fisubrs
push
or
pop
in
push
xor
mov
pop
sbb
sub
sbb
jge
pop
sub
cmc
dec
jl
sbb
lret
and
mov
mov
test
stc
xchg
and
dec
pop
xor
daa
loope
iret
call
xchg
jae
or
jge
loope
and
and
gs
cmc
movsl
push
in
inc
bound
inc
mov
inc
imul
and
mov
add
push
sbb
push
sbb
mov
pop
mov
call
jno
into
scas
imul
and
aam
jno
sbb
add
and
movsl
dec
popa
add
int3
aaa
add
push
daa
movsl
mov
sub
in
shll
dec
inc
xor
pop
xchg
decl
mov
ljmp
das
mov
ret
xchg
dec
lock
mov
cmp
push
mov
xchg
lret
mov
aas
sub
iret
scas
jge
fnstsw
sub
push
mov
popf
xchg
mov
xchg
mov
and
and
sbb
add
cwtl
loopne
cmp
or
mov
jb
or
icebp
aas
addr16
out
sbb
sbb
das
sbb
sbb
lret
xchg
imul
mov
cmpsl
fmul
movsb
sbb
and
pop
sti
pop
fdivs
fwait
mov
sub
xchg
scas
ret
and
sub
cs
jno
imul
add
adc
cltd
xor
jae
popa
inc
lahf
push
lcall
les
popf
and
jno
addr16
adc
mov
lods
data16
pop
add
sub
jae
and
add
dec
xchg
add
xchg
xor
popf
inc
into
sub
aad
dec
sti
leave
xchg
sub
adc
test
aam
mov
sbb
cmp
fs
sbb
loopne
sbb
mov
mov
cmp
daa
stc
adc
or
in
lahf
mov
mov
das
das
sub
mov
stos
jl
jae
in
leave
ja
pop
mov
je
ja
sbb
push
outsb
sub
xor
mov
sbb
inc
mov
sti
lahf
scas
push
popa
jmp
xor
fwait
sub
repz
pop
push
xchg
push
push
clc
pop
inc
push
xor
pop
fiadds
out
lcall
outsl
repz
add
lcall
outsb
xor
mov
xorl
pushf
ficoms
mov
dec
xor
pop
and
test
lcall
mov
sub
pop
cwtl
mov
pop
inc
call
mov
pusha
mov
pop
cli
imul
repz
xchg
gs
movsl
lock
mov
mov
iret
je
adcb
dec
fisubl
inc
and
sub
xchg
and
cmp
sbb
push
jnp
push
sub
jno
and
lods
mov
aam
lods
shr
push
mov
test
lods
imul
dec
xchg
movsl
push
mov
fwait
and
jne
xor
adc
and
or
jp
adc
or
cmpsl
push
ljmp
adc
xor
and
aam
repnz
inc
adc
jl
call
pop
xchg
jmp
sub
cvtps2pd
stc
das
mov
inc
jecxz
mov
push
ja
cmpl
dec
sti
in
loope
cmp
sub
sbb
and
sub
inc
sub
jecxz
sbb
or
jae
pop
movsl
or
loope
jp,pn
xchg
sbbl
pop
push
mov
mov
das
adc
sub
arpl
stc
mov
and
mov
or
fldt
adc
xchg
jno
lock
mov
iret
mov
or
xchg
push
adc
xchg
push
mov
pop
cmp
and
out
popf
sub
pop
stc
out
push
mov
jnp
mov
sbb
xchg
adc
std
sbb
and
stc
jg
out
bound
pop
sti
jae
aaa
xchg
adc
out
xchg
movsl
les
cltd
sbb
mov
addr16
xchg
xchg
int
add
and
and
popa
sarb
mov
insl
movsl
mov
jle
adc
adc
adcl
xor
sti
aas
arpl
push
sbb
lock
pcmpgtd
out
in
push
pop
lea
rcrl
inc
in
inc
push
aaa
mov
loop
pop
ja
sub
xchg
ds
add
inc
or
std
cmp
and
insb
and
mov
xor
cmp
popf
adc
shll
flds
add
ja
pop
fwait
cwtl
or
stos
cmp
test
add
adc
cmc
mov
popf
jge
inc
cmp
pop
in
jmp
arpl
mov
test
or
sub
lret
mov
add
mov
add
rorb
xor
pop
call
jnp
fimuls
jecxz
and
test
mov
push
adc
or
call
icebp
cwtl
jmp
add
xor
xor
js
orb
and
ja
mov
inc
pop
xchg
pop
dec
sbb
mov
dec
andb
adc
mov
pushf
aad
xor
mov
stos
add
xchg
out
dec
shlb
ret
xchg
bound
pop
test
mov
adc
push
inc
lea
fiadds
mov
xor
xlat
ret
jne
inc
pop
sub
push
std
imul
mov
mov
sub
push
jns
and
hlt
and
pop
and
movsb
inc
push
sub
bound
push
sub
aas
and
push
pop
imull
pop
adc
arpl
call
loopne
aas
sbb
or
pop
add
lea
adc
xchg
inc
clc
notl
xchg
es
sbb
sti
jno
mov
fmulp
outsl
adc
jae
add
lods
notb
push
or
negl
mov
stos
xor
cwtl
call
pop
xchg
ja
loop
cwtl
repz
add
push
dec
cmp
push
pop
int
rcll
dec
shl
popa
and
loope
inc
mov
adc
xchg
call
divl
arpl
pop
bnd
pop
repnz
xchg
insb
mov
and
movsb
das
int
add
pop
cmp
movsl
sub
mov
cli
xor
pop
xchg
xor
sub
mov
mov
adc
push
aam
call
adc
adc
rol
repnz
xor
pop
mull
cli
mov
xchg
es
in
or
jmp
std
pop
push
ja
cmp
and
sbbl
test
xor
add
pop
addr16
ljmp
jo
xchg
mov
rorl
pop
scas
pop
mov
int
mov
pop
jl
push
int
and
xor
sub
outsb
xor
jb
pop
stc
rorl
xchg
mov
xor
push
xchg
xchg
mov
sbb
adc
ja
mov
lea
mov
mov
mov
dec
roll
loop
lods
push
outsl
sbb
pop
mov
inc
les
call
dec
dec
mov
es
sub
or
stc
pop
pop
or
arpl
mov
sbb
leave
inc
aad
fdivr
pop
cmp
mov
push
mov
movsb
mov
or
psubusb
test
sub
shl
aam
push
sub
sbb
pop
xor
fcomi
xchg
add
test
sub
addr16
adc
add
add
adc
cwtl
push
andb
lods
pop
xor
loope
pushf
xor
bound
adc
roll
xorl
lock
lret
sahf
mov
inc
out
sbb
sti
pop
xchg
imul
dec
repz
cmp
stc
rorl
arpl
sbb
sub
adc
notb
pop
xor
sbb
and
xchg
iret
pop
jle
sbb
das
sub
ja
add
cld
ja
mov
sub
outsl
mov
xchg
mov
call
adcl
add
in
jo
jno
gs
xorl
jmp
mov
in
cmp
aam
push
add
mov
and
inc
dec
jge
cmp
sub
or
fwait
and
jle
push
fistpl
mov
mov
xchg
shlb
xor
jo
jmp
icebp
mov
outsb
imul
sub
push
cmpsb
xor
push
test
pop
ljmp
out
xor
icebp
inc
and
push
xchg
sub
frstor
icebp
mov
xchg
mov
pop
push
data16
sti
lret
fidivl
add
es
push
dec
sbb
sti
and
mov
inc
sub
sbb
mov
repnz
cmp
xor
fidivrs
cmp
xchg
sbb
cmp
mov
or
lods
ret
add
xor
jnp
loop
add
sbb
adcl
or
jne
mov
sbb
and
mov
in
pop
sub
xchg
and
mov
push
inc
cli
in
xchg
inc
out
sbb
adc
mov
fmull
daa
aas
das
adc
fidivrl
out
je
imul
lcall
inc
mov
pop
dec
xor
fs
int3
popf
imul
pop
push
pop
hlt
popa
adc
out
pop
push
and
pop
ret
sbb
aad
loop
adc
inc
or
xor
call
mov
sbb
mov
ret
xchg
test
jbe
insb
mov
inc
xchg
mov
ficomps
stc
sub
mov
ret
and
sub
pop
xor
inc
sbb
adc
cs
in
ja
pop
jecxz
imul
sbb
xor
mov
push
lea
jno
mov
cltd
js
adc
insb
xor
mov
fildl
and
divl
stc
ficompl
lods
gs
jg
add
mov
push
mov
inc
stc
leave
es
sahf
repnz
jae
mov
lret
and
call
and
test
mov
cmp
jp
and
jae
jge
sbb
sub
mov
add
jecxz
or
stc
sub
call
push
sub
loop
inc
call
sub
xchg
and
mov
stos
push
and
push
inc
stc
dec
push
fcoms
inc
cmpsl
or
test
ror
rcl
push
sbb
sti
sbb
fisubs
inc
dec
mov
push
mov
or
mov
imul
orb
xchg
arpl
and
stc
xor
or
out
int
loop
cwtl
loop
fidivs
jne
jno
xor
add
jbe
lret
stos
jg
jno,pn
inc
call
inc
push
sbb
sar
adc
adc
mov
inc
cmpsl
xchg
push
sahf
adc
jno
outsb
aaa
mov
sub
or
cwtl
xchg
in
pop
mov
pop
imul
push
push
daa
addr16
and
adc
pop
adcb
jb
loopnew
ja
bnd
xor
mov
push
xor
inc
jno
and
cwtl
stc
arpl
dec
cmpsb
pop
add
fistl
xchg
jl
in
pop
xchg
xor
pusha
shl
fisubrs
pop
and
jne
sub
mov
xor
call
mov
mov
ret
lods
push
lcall
int3
ss
jns
mov
in
sub
loop
or
ret
sbb
js
jecxz
stc
sub
add
push
ljmp
xor
dec
and
pop
mov
mov
cmpsl
bound
sbb
push
sub
test
pushf
adc
call
loop
xor
xor
ds
xor
push
or
nop
mov
push
push
or
test
fcmovbe
daa
and
loop
out
inc
cmp
push
outsl
adc
sub
or
fistpl
mov
ja
mov
xor
sti
jg
stos
mov
out
pop
stc
mov
dec
add
sub
in
movsb
sbb
cmp
fnsave
arpl
scas
jb
das
jo
push
and
pop
movsl
aad
divb
enter
stos
mov
das
and
xchg
pop
sub
xchg
or
mov
or
xchg
outsb
pop
loopne
pop
fwait
mov
and
stc
int
cld
call
pop
into
inc
mov
rcrb
lds
subl
mov
add
or
cmpsl
test
insb
sub
cmovnp
out
shrl
and
jle
cmpsb
sarb
dec
pop
mov
dec
adc
decb
jno
pop
mov
and
data16
in
mov
mov
xchg
dec
in
push
push
rcll
mov
sub
xchg
test
adc
jb
mov
xchg
fs
gs
stos
xchg
shlb
or
arpl
shll
outsl
xor
js
mov
sub
gs
xchg
stc
or
int
loop
and
repnz
jne
sbb
sbb
adc
popf
sub
xor
rol
rcrb
and
call
mov
inc
or
out
adc
xchg
jg
imul
lea
loope
mov
mov
cmp
jb
sub
stc
test
out
sbb
push
push
test
xlat
cld
in
pop
and
sbb
cld
scas
insb
or
dec
cmp
adc
aaa
mov
pusha
xor
ret
cmpl
cmp
ljmp
ret
mov
xchg
push
movsl
fimuls
lret
mov
jno
fistpl
aam
cltd
jno
push
outsb
test
call
pop
cmpsl
mov
sti
or
in
pop
jnp
jb
int3
imul
or
scas
mov
stc
cmp
scas
jne
clc
nop
pop
jns
jg
mov
mov
notb
and
je
dec
adc
and
sti
and
insl
ds
xchg
testb
pop
xor
imul
out
lret
xor
lcall
xchg
loop
dec
push
aas
push
mov
daa
mov
push
pop
xor
pop
nop
and
cwtl
es
sbb
xor
and
sbb
add
inc
ds
nop
jl
adc
lea
imul
mov
xchg
nop
and
dec
fisubs
push
pop
sub
iret
hlt
mov
daa
movsb
sbb
in
mov
scas
daa
adc
jle
nop
pop
sbb
and
push
in
adc
lahf
orl
lret
int
inc
add
ret
mov
sti
sub
mov
xor
test
xor
add
insl
or
movsl
testb
subl
daa
lods
inc
fwait
push
and
test
and
mov
sbb
push
subb
adc
push
hlt
push
push
ret
add
mov
std
inc
cmc
adc
mov
xlat
pop
orb
arpl
movsb
xor
push
or
mov
in
js
inc
ljmp
rcll
cmp
scas
adc
mov
adcl
call
xchg
rcr
sbb
xchg
and
and
aaa
ds
and
or
pushf
int
or
xchg
jne
call
mov
movsl
pop
and
sbb
adc
cmp
push
inc
pop
push
xor
out
adc
and
fldcw
xor
push
hlt
mov
ret
sub
push
sbb
fwait
clc
adc
aas
push
leave
repz
xor
cltd
lahf
fwait
xchg
cli
call
lods
adc
and
pop
mov
and
cpuid
call
jge
imul
in
push
or
push
cld
bnd
push
pop
cmpsb
and
xor
pop
hlt
jge
sbb
stos
das
adc
push
lds
popa
icebp
cmc
cmpsl
xor
xlat
jae
sub
out
add
mov
shrl
cs
movsb
adc
adc
fimuls
shr
push
lcall
cmp
push
mov
push
add
daa
dec
icebp
push
mov
sub
adc
and
pop
dec
fucomp
cltd
xor
adc
sbb
cs
adc
sbb
fisttps
subl
fcoms
mov
push
dec
subb
daa
in
repnz
xchg
in
adc
push
aaa
addr16
jl
rdmsr
cld
imul
popa
and
push
mov
jno
addr16
aas
inc
mov
inc
mov
test
mov
outsl
add
cli
or
outsl
push
and
and
test
shr
or
je
insb
ficompl
push
les
jb
std
lahf
push
int
icebp
adc
orl
arpl
leave
int
aam
push
dec
cmp
sbb
fisubrl
add
push
divb
fwait
aas
pop
mov
sahf
sbb
test
mov
sbb
xor
js
pop
popa
push
push
das
imul
mov
mov
and
int
sub
push
mov
pop
xor
sub
cmp
stos
mov
jb
mov
mov
mov
jb
pop
fsubl
mov
inc
das
in
xor
push
jle
jecxz
out
nop
popa
filds
mov
jl
outsb
icebp
sbbb
popf
push
jl
outsl
pop
js
aad
cwtl
mov
pop
jae
add
call
and
jns
in
andb
pop
daa
lahf
and
and
int
pusha
aam
mov
mov
gs
in
inc
int
cltd
jo
sub
adc
xor
and
sbb
stc
fwait
adc
jne
shll
stc
outsl
dec
xor
mov
dec
clc
loope
xchg
fidivl
int
cmp
test
adc
in
adc
cltd
and
ret
in
pop
call
cmp
clc
rcrl
adc
rcrb
or
and
jbe
lahf
mov
es
mov
cmp
mov
das
adc
push
jge
lahf
test
xchg
xchg
push
add
push
xor
mov
repnz
cmpsb
pop
xchg
leave
stos
and
lret
ljmp
sti
mov
call
cmp
call
and
sbb
pop
mov
ficoms
xchg
mov
iret
and
aad
mov
fdivl
sub
and
aad
sbb
and
adc
push
sub
lds
imul
dec
xchg
add
adc
test
mov
stc
shll
sub
cmp
fwait
mov
shrl
stos
adc
adc
pop
jnp
mov
sub
add
xchg
fcoml
cmpsl
outsl
xchg
cmp
adc
jp
cmc
mov
leave
and
pop
and
popa
test
scas
push
adc
fwait
cmc
and
ss
mov
push
xchg
popa
shll
xchg
adc
ss
aad
scas
lods
aad
pop
fwait
lock
insb
cmp
movsb
adc
hlt
movsb
in
ss
sti
scas
ds
loope
cld
mov
jne
sub
mov
aas
mov
ret
lret
ret
inc
loop
pop
or
xchg
or
fsubrl
or
repnz
sti
cmp
jne
pop
adc
or
pop
and
loop
bound
sub
mov
fsts
inc
xor
fsubl
pop
fidivrl
aad
fwait
or
in
xor
cmp
lret
stos
jne
out
sub
and
leave
inc
in
lcall
dec
and
je
mov
and
cltd
and
adc
call
mov
nop
in
lods
and
std
mov
dec
shr
sbb
cltd
adc
cmp
push
sub
dec
mov
adc
and
adc
shrb
lods
popf
dec
pop
stc
stos
scas
aam
lds
sti
arpl
push
imul
ds
lret
xor
pop
subl
or
sub
xchg
ja
adc
push
movsb
xchg
cwtl
add
bound
cmp
icebp
subb
popa
sub
lds
das
mov
sahf
enter
into
sbb
dec
in
dec
cltd
mov
jecxz
mov
mov
sbb
mov
loope
dec
inc
cltd
testl
adcl
test
jmp
mov
call
inc
jo
mov
xchg
xchg
jno
pop
push
xchg
sub
cltd
jmp
or
mov
cwtl
mov
loop
clc
sub
jnp
das
lea
mov
loop
bound
insb
pop
stos
mov
cli
sub
add
stos
outsl
sti
iret
loopne
cld
in
jb
ja
mov
adc
outsl
adc
das
push
clc
jno
cmp
popf
das
xchg
pop
testl
pop
or
xchg
jbe
add
cmpsl
add
cmp
add
stc
xor
fsubrs
es
movsb
pop
repz
xchg
fcoms
add
sti
push
pop
push
cmc
imulb
xchg
jbe
jnp
lcall
sub
clc
add
bound
dec
outsb
outsl
je
out
and
hlt
mov
xor
pop
xor
aam
or
xor
leave
das
pop
lock
adc
adc
adc
sbb
push
xor
xchg
xchg
daa
xor
mov
push
push
fldl
adc
stc
mov
sub
jno
sub
addb
mov
negb
cmp
outsl
inc
sbb
cwtl
out
inc
and
add
nop
roll
in
push
cmpsb
push
xchg
call
call
or
pop
mov
sbb
out
mov
ret
enter
ret
push
aad
gs
add
mov
push
stc
xor
shl
sub
mov
sbb
mov
fcoml
xchg
iret
dec
sbb
mov
sbb
imull
imul
shrl
addr16
and
sbb
sbb
mov
cmp
mov
cmp
imul
push
pop
loope
inc
lods
xchg
or
push
or
in
xorl
test
jb
add
cmp
clc
out
incb
jo
les
hlt
arpl
arpl
mov
mov
mov
jl
inc
jp
sub
fldt
test
push
cmp
sub
cmpsb
push
repnz
jo
ficoms
stc
fldenvs
ds
imul
iret
ret
loope
test
cmpsb
mov
inc
pop
int
jns
jns
or
xor
in
add
add
sbb
inc
mov
fcoml
daa
data16
push
jns
adc
adc
shrl
pop
mov
sbb
mov
mov
jns
xchg
xchg
mov
sub
sub
xor
and
aas
sub
cmpsl
pop
scas
cltd
pop
xchg
test
adc
sub
xor
adc
or
xchg
inc
push
insb
add
or
in
and
add
pop
lods
adc
out
add
testb
and
push
dec
xor
and
daa
loop
mov
xor
or
or
xchg
mov
dec
mov
mov
push
adc
loop
xchg
jns
ret
das
mov
adc
push
sarl
out
mov
jb
jmp
mov
xchg
cmp
adc
sub
lret
adc
orl
cmp
cmp
pop
out
sbb
cmp
mov
out
push
adc
push
dec
dec
stc
inc
push
jp
xor
addr16
mov
pop
inc
adc
mov
mov
xor
test
mov
nop
push
loopne
jecxz
jae
icebp
sub
mov
ljmp
xchg
dec
adc
jbe
sbb
icebp
push
mov
fstpt
mov
cmpsb
movsl
adc
icebp
sub
xchg
aaa
push
xchg
inc
xchg
in
xchg
aas
test
jecxz
cmpsb
cmp
mov
jnp
cmp
scas
inc
and
notl
xlat
scas
in
fcmovnbe
push
fcmovnbe
pop
aaa
dec
nop
push
into
jae
insl
mov
mov
in
pop
movsb
mov
inc
xlat
dec
push
inc
sbb
cli
out
mov
xorb
bound
rcl
sbb
mov
jg
cmpsl
movsl
xchg
inc
addr16
and
test
adc
popf
call
sti
lods
lret
push
mov
mov
pop
mov
xchg
clc
push
push
fwait
push
xor
mov
shll
pop
push
dec
int
fcompl
nop
shrl
mov
fwait
lock
sub
pop
push
call
fxch
cmp
and
and
pusha
pop
adc
mov
insb
mov
cmp
in
xchg
push
popf
cmp
sub
fwait
ret
cwtl
mov
stos
mov
sub
in
fisttpll
dec
imul
sti
dec
cmp
mov
fsts
adc
call
pop
cmp
adc
sbb
mov
push
imul
dec
mov
cmp
mov
fldcw
out
and
mov
push
mov
push
add
in
int3
fadds
in
and
or
dec
xchg
xor
and
shrl
stos
mov
daa
xchg
lods
dec
xchg
subb
movsb
cmp
popa
aam
inc
and
mov
pop
adc
adc
and
cmp
outsl
xchg
lock
lret
sti
das
push
and
jg
ss
xchg
call
rcrb
out
mov
sarl
mov
lahf
cmp
inc
sbb
jae
out
insb
push
jmp
and
push
sub
icebp
mov
mov
jns
xchg
pop
sbb
add
pop
pop
adc
pop
dec
xchg
and
or
inc
push
xchg
sub
addr16
pop
or
adc
movsb
add
and
push
out
sbb
or
sub
roll
xor
xchg
in
out
and
outsb
dec
and
pop
aaa
cltd
push
pop
shrl
sti
fldenv
pop
xchg
mov
ljmp
mov
or
xor
call
lds
sbb
addr16
rolb
sub
dec
leave
pop
cmp
xchg
aaa
xchg
xchg
aaa
sbb
arpl
ficompl
xchg
xor
xchg
loope
xchg
sti
sti
sbb
fists
add
or
in
adc
mov
jmp
push
and
enter
cltd
popa
das
push
sub
jl
mov
push
xor
mov
xor
fistl
aaa
lods
nop
and
call
mov
iret
pop
mov
scas
add
push
das
and
adc
sbbb
outsl
ror
mov
aad
lret
or
cs
lcall
nop
aaa
shr
iret
mov
pop
aas
in
roll
daa
adc
into
sub
sbb
adc
imul
sub
jl
inc
daa
mov
dec
lea
aam
xor
and
sbbl
adc
adc
adc
insl
xchg
call
lret
cmp
add
mov
cltd
or
or
dec
inc
negb
and
xor
mov
sub
mov
iret
dec
clc
mov
or
and
sub
sub
and
and
popa
ljmp
es
stc
jmp
outsl
sbb
cmp
sbb
or
xor
push
xchg
std
xchg
lds
jg
rcrl
inc
mov
xor
push
push
xor
aam
mov
pop
addl
push
loopne
xchg
pop
push
xchg
cltd
iret
movsl
and
sahf
or
mov
push
nop
ror
mov
daa
mov
or
add
stos
sbbb
pop
xchg
enter
std
aas
inc
ret
add
imul
nop
mov
andl
mov
cmp
lea
adc
pop
or
sub
out
or
scas
push
sub
or
cmp
add
and
into
xor
mov
js
dec
ret
aad
pop
mov
loop
cmpsl
inc
xor
adcl
xchg
adc
jns
and
sbb
lods
loopne
in
jbe
mov
push
jecxz
lret
out
mov
adc
cwtl
int
jne
mov
add
mov
cmpsl
addr16
mov
xchg
mov
pusha
fdivrl
ret
shll
lods
xchg
jno
fisubs
imul
add
popf
xchg
or
xchg
xabort
xchg
imul
nop
mov
and
adc
lods
and
or
pop
call
pop
or
mov
xchg
push
add
push
dec
pushf
sub
and
jb
inc
inc
fcomp
mov
pop
add
mov
fisubs
xor
push
scas
enter
daa
mov
in
cmp
lods
movsl
lcall
test
test
ss
lcall
xchg
out
cmp
lods
sbb
push
pop
push
sub
pushf
add
mov
inc
mov
sub
pop
dec
mov
in
std
lds
lret
xchg
dec
adc
xor
cmp
rcrl
adc
mov
mov
inc
hlt
fs
arpl
pop
mov
shl
xchg
xor
shlb
and
dec
mov
sbb
xchg
sbb
xchg
or
dec
fs
dec
mov
addr16
jae
cmp
outsb
cmpsl
je
or
pop
cmp
ret
popa
push
inc
jae
or
mov
mov
mov
sbb
cmp
in
mov
dec
test
adc
pop
clc
loop
pop
and
mov
dec
jae
adc
push
cmp
jnp
mov
daa
hlt
cmpsb
add
mov
or
mov
cmc
sub
and
sbb
jae
jmp
push
push
inc
dec
dec
fwait
push
jg
stos
imul
fstps
cltd
mov
pop
ljmp
adc
es
movsb
imul
lds
cmpsl
paddusw
mov
sbb
mov
out
outsb
sbbb
xchg
shl
in
daa
lds
xor
in
loope
xlat
mov
xor
sub
mov
stc
stos
sbb
cld
psrld
xchg
sbb
xor
add
add
out
dec
clc
lret
mov
dec
lahf
push
ffree
cmp
and
sti
dec
repnz
shll
and
pop
aas
fnsave
mov
or
sbb
pop
shlb
lock
sub
fnstcw
aad
int3
jbe
jnp
push
aad
aaa
ja
dec
mov
xchg
sbb
adc
xchg
in
push
mov
dec
insl
mov
les
mov
sbb
mov
mov
call
stc
push
mov
sub
sbb
imul
fldenv
js
push
outsb
cmp
xchg
mov
or
mov
imul
adc
xchg
call
cmp
xor
mov
call
daa
mov
mov
jb
push
movsl
xchg
les
fwait
xor
xchg
pop
sbb
mov
addr16
aaa
jo
hlt
cmp
pop
sbb
in
in
call
and
fstps
mov
adc
daa
mov
inc
dec
out
xchg
movsb
cmp
daa
and
roll
sub
imul
ret
lods
xor
xchg
xorb
insb
push
sbb
test
lea
rcrl
nop
dec
jg
xchg
aam
xchg
push
mov
pop
lret
inc
gs
jno
jp
mov
xchg
sti
xchg
mov
mov
aam
or
sub
mov
mov
and
sbb
das
lock
jecxz
push
jae
xchg
push
mov
mov
lret
push
iret
cmp
jo
nop
loop
mov
dec
das
mov
rolb
inc
mov
sbb
mov
sub
addr16
inc
sahf
stc
and
pusha
jns
addr16
out
xor
add
hlt
and
jmp
xchg
xchg
lahf
lcall
cmp
adcb
cmc
push
and
stc
inc
or
sub
mov
or
sbb
cmpsb
aas
std
insb
xchg
or
sbb
push
mov
jae
mov
inc
in
mov
das
push
or
in
aas
cltd
pop
push
mov
and
adc
hlt
pop
test
mov
pop
xchg
xchg
fidivs
cmp
xor
sbb
fiaddl
cmp
leave
mov
cmpsl
and
add
fisubl
xor
rcrb
sarl
mov
out
into
jbe
ret
xor
mov
add
jns
jo
jns
insl
outsb
enter
fcmovnbe
xor
mov
cmpsb
std
mov
stos
or
mov
stc
cmpsb
test
inc
add
and
dec
dec
mov
or
dec
pop
mov
ss
sbb
je
dec
pop
cmpsl
push
xor
jecxz
loop
std
imul
adc
rcr
sbb
add
or
push
stc
dec
daa
and
adc
sti
daa
pop
lahf
call
jo
adc
inc
daa
das
and
adc
mov
adc
and
in
movsb
jae
mov
setge
mov
lret
dec
push
pop
sub
adc
dec
mov
xor
and
pop
call
push
xor
inc
repnz
pop
push
outsb
pop
cmpsl
cmp
icebp
stos
push
inc
es
imul
xchg
das
cs
adc
xor
ja
cmpsb
xor
sbb
sbb
scas
das
daa
das
xchg
cmp
pop
and
scas
test
jge
inc
dec
adc
jl
lahf
sub
outsl
cmpl
adc
push
xor
addb
adc
call
mov
mov
cmp
scas
xor
sub
addb
lods
xchg
mov
push
nop
cwtl
sbb
lock
repz
inc
mov
jp
loop
lahf
test
mov
xor
mov
int
in
jae
stos
jnp
cld
xor
mov
sub
push
mov
xchg
fxch
xor
in
call
push
lods
sbb
pop
fistpll
in
aaa
call
sub
push
shll
in
or
sti
cltd
pop
call
stc
gs
or
cmp
sbb
nop
and
xor
scas
clc
jae
mov
in
pop
ss
and
xor
sarb
dec
int
lahf
jle
jno
adc
mov
push
mov
cwtl
orl
jnp,pt
addl
fptan
push
adcl
std
shlb
or
das
sbb
pop
pop
cmovg
cli
mov
xor
pop
lods
dec
je
sahf
imul
jb
pop
inc
sub
repnz
scas
sub
pop
lcall
call
ds
inc
cmp
inc
adc
dec
mov
xchg
push
jno
out
out
pop
lret
xor
test
roll
xchg
and
hlt
mov
lods
ljmp
pop
out
mov
mov
cmp
or
xor
clc
xor
xchg
push
sahf
xlat
cmpsb
add
mov
movsl
push
sbb
cmp
push
and
and
adc
iret
and
negl
stos
xchg
and
xor
push
and
cs
push
das
scas
sbb
mov
xor
push
xchg
cltd
pushf
jo
or
fidivrl
cmp
mov
test
dec
xchg
aam
sbb
dec
lea
ljmp
mov
mov
pop
sti
mov
cmpsb
cmpsl
cmp
push
movsl
mov
gs
inc
adc
xor
cvtps2pi
inc
and
sarl
cli
and
add
scas
subb
test
ret
subb
cmp
sbb
jmp
ret
gs
lahf
mov
dec
into
mov
popf
sub
sbb
aas
mov
test
mov
add
aam
das
jae
jns
movsl
xlat
mov
xor
dec
aam
stos
scas
inc
inc
fimuls
stos
add
jne
dec
or
push
sub
loope
push
add
and
mov
aam
fisttpl
inc
stc
or
xchg
xchg
cltd
pop
jno
int
sbb
cmpsb
pop
ret
xor
int
push
xor
sti
and
sub
icebp
das
cmp
stc
xor
and
int3
dec
push
das
cld
xchg
and
pop
cmp
and
mov
arpl
xchg
iret
fcomi
stos
add
pop
add
les
pop
imul
rcl
movsl
pusha
out
mov
pop
aas
sbb
push
or
adc
bnd
push
frstor
pop
and
daa
ficoml
cmc
push
xchg
mov
fwait
rclb
sahf
nop
sbb
adc
cltd
mov
push
or
and
push
out
sub
ljmp
mov
mov
sarb
jge
cmp
xchg
xor
cmp
daa
cmpsb
int3
inc
pop
or
addr16
xchg
pop
ret
sub
and
jno
fs
xchg
stc
int
nop
xchg
lahf
mov
cmpsb
daa
adc
jp
int
xchg
mov
in
int
jle,pn
test
inc
jnp
aas
sbb
xchg
inc
mov
jle
and
adc
and
fistl
popa
mov
cltd
push
js
cmp
dec
pop
and
cli
lahf
pop
lds
push
movsb
insl
mov
aad
mov
gs
out
xchg
dec
push
dec
sbb
repnz
xchg
das
stc
push
and
and
or
sub
cmpsl
pop
cltd
cmc
sti
mov
cmp
imul
inc
aad
gs
repnz
les
mov
jecxz
xor
sbb
and
and
xchg
sub
int
inc
xchg
cmp
insl
mov
imul
mov
cmp
sub
mov
push
ss
cmp
loopew
mov
aas
pop
push
cmc
pop
mov
adc
lret
cmp
adcb
sbb
gs
pop
add
gs
xchg
mov
aas
das
sbb
and
repnz
mov
sahf
popa
in
dec
pop
mov
fwait
xchg
push
push
ss
xor
sahf
pop
sub
test
ret
xor
push
mov
and
in
push
inc
stc
xchg
lea
pop
sbb
es
xor
das
xchg
and
arpl
adc
or
call
jne
cmp
sbb
sbb
add
push
mov
push
cli
and
xor
and
outsl
mov
xor
nop
fidivl
aas
loop
mov
sub
xchg
and
sbb
sub
inc
sbb
xor
push
jne
mov
push
mov
cltd
push
adc
and
dec
xor
sbb
ret
mov
xor
pop
sbb
or
dec
movsb
cmc
imul
jb
xchg
pop
inc
and
inc
stos
jno
stc
jl
adc
adcl
aam
arpl
insl
stos
push
lods
cmpsl
push
mov
push
sub
subl
outsb
xchg
loope
xchg
sbbb
lret
push
and
dec
pushf
mov
out
cmp
ss
adc
call
fnstenv
xor
mov
mov
jle
and
rolb
adc
ret
movsl
pop
mov
and
mov
sub
and
xchg
jl
cwtl
adc
add
in
pushf
lds
and
popa
sbb
cmp
xor
sub
das
pop
push
add
cmp
cmp
jae
pop
lock
movsb
mov
cmp
test
xchg
stos
daa
dec
push
or
filds
cmc
ret
icebp
je
adc
or
mov
imul
mov
cmp
les
mov
sub
mov
mov
push
push
ljmp
jo
sbb
fldcw
or
sub
xor
fs
mov
xor
es
popf
add
scas
xchg
jp
mov
pop
sbb
and
cmc
arpl
dec
andb
xchg
inc
jp
call
and
inc
jmp
xor
lea
xorl
orb
mov
pop
sub
jmp
and
xlat
shll
sahf
sbb
mov
pop
ja
mov
cmpsl
les
inc
fwait
popa
loop
inc
cmp
dec
mov
roll
ja
and
sbb
inc
sub
mov
into
lods
adc
dec
shll
pop
cli
and
sti
jg
repnz
push
fnstcw
daa
pop
xchg
repnz
popa
xor
mov
dec
sub
jns
or
adc
pop
pop
and
in
das
ss
inc
adc
mov
inc
daa
daa
loopne
push
cmpb
push
stos
xor
imul
xor
out
pop
add
sbb
stc
shr
sub
xor
xchg
sub
mov
adc
icebp
push
sbb
or
pop
mov
out
das
inc
stc
jns
dec
mov
add
roll
push
imul
push
sahf
and
mov
lods
jg
je
jl
cmc
inc
aas
mov
mov
cmp
pop
and
xchg
fnstenv
or
insl
hlt
push
and
fwait
cltd
dec
mov
add
and
pop
sti
adc
xchg
in
dec
daa
hlt
cmp
pusha
cld
out
mov
nop
add
pop
insl
dec
mov
dec
not
out
ficoms
push
dec
and
inc
clc
out
mov
mov
fidivl
and
mov
imul
jno
sbb
mov
sub
repnz
popl
cmp
icebp
jl
in
sub
jo
movsl
adc
into
lds
jp
mov
aam
std
lahf
dec
lret
mov
inc
sti
jle
iret
xorl
sbb
xchg
bound
repz
mov
jp
lds
or
call
aad
add
ds
cmp
or
fst
int3
repnz
and
mov
mov
sahf
fisttpll
movsb
mov
and
xor
out
call
out
xchg
add
mov
mov
sbb
imul
sub
dec
mov
dec
pop
add
cmp
sbb
inc
inc
and
adc
sbb
in
out
pavgb
push
orb
cli
mov
add
jae
add
pop
loope
add
aas
stc
cmp
sub
inc
inc
das
fists
ret
fldl
xchg
fsts
test
sbb
push
sub
in
mov
push
popa
ss
adcb
in
jecxz
xor
and
iret
repnz
mov
stos
xor
pusha
jp
imul
mov
xchg
add
das
and
mov
int
xchg
fstl
pop
inc
or
xchg
call
inc
shll
ja
xor
inc
cltd
jmp
or
pop
adc
in
hlt
mov
or
and
shrb
sti
pop
or
dec
popl
mov
and
mov
adc
dec
ret
sti
hlt
push
adc
aas
add
adc
xor
and
jns
jge
out
scas
adc
mov
sti
mov
repnz
pop
fcomps
or
add
and
push
mov
add
jnp
sub
das
sbb
jecxz
xchg
aam
icebp
out
jle
divb
adc
jnp
inc
sbb
jno
daa
cmc
das
push
in
cltd
sbb
add
sbb
shlb
cwtl
imul
stos
and
iret
cmp
mov
sti
pop
lds
in
xchg
jno
xlat
sbb
jbe
imulb
mov
aaa
mov
inc
ficompl
and
data16
add
mov
jb
fisttpll
mov
jb
inc
adc
or
inc
popl
pop
call
xchg
ds
iret
fnstcw
xor
or
mov
out
mov
or
dec
mov
cmp
xor
adc
sbb
je
inc
or
push
sbb
iret
movsb
push
mov
and
cmp
stos
cli
mov
xor
and
cs
or
mov
mov
xorb
pop
cmc
lods
inc
and
or
iret
test
mov
inc
jmp
xor
ret
cmp
and
in
push
test
adc
add
push
dec
adc
xor
subl
loop
adc
fists
and
hlt
popa
xchg
mov
xor
cmpsl
cwtl
mov
iret
add
jecxz
insl
mov
mov
das
sub
jge
inc
and
into
add
imul
std
aam
mov
mov
mov
sub
or
or
sahf
mov
pusha
testl
mov
xor
fisubrl
sbb
dec
jge
shlb
or
aad
std
jmp
and
in
je
insl
aam
test
push
mov
mov
hlt
pop
xchg
dec
call
xlat
or
sub
mov
popa
cmp
loopne
mov
adc
loopne
push
xchg
mov
movsl
mov
shrb
pop
sub
jbe
mov
xchg
idivb
jae
jno
cli
sbb
push
fsin
decb
imul
xchg
cmc
or
aad
movsb
adc
cwtl
cmp
pop
xor
pop
pusha
ds
push
out
sbb
js
lret
push
adc
mov
lret
mov
inc
and
inc
shlb
sar
clc
std
or
xor
or
dec
flds
dec
or
test
inc
xor
rorl
pop
sub
mov
lcall
ss
sub
add
cmp
jns
push
push
daa
das
mov
mov
mov
cli
subb
jge
jne
inc
or
cmp
or
adc
xlat
push
pop
and
pop
cmpsb
adc
stc
sbb
addb
pop
and
imul
dec
ds
pop
testl
dec
mov
xchg
icebp
push
cltd
push
data16
cmp
xchg
mov
dec
addr16
xchg
xchg
loopne
mov
add
push
mov
sbb
xchg
push
rolb
add
jg
es
pop
sub
adcl
daa
inc
dec
push
clc
in
shll
stos
adc
add
cltd
push
jne
inc
bound
xchg
les
dec
negl
outsl
inc
hlt
sub
and
enter
pushf
and
dec
push
int
sbb
jp
or
negb
jnp
lret
ja
jmp
cmp
ret
jns
sti
sbb
call
sub
aam
shll
cmp
nopl
popf
jne
sub
pop
arpl
ljmp
cmp
push
xchg
push
push
cmpsl
and
int
movsl
add
jge
mov
xchg
push
jae
jp
inc
mov
mov
push
jmp
mov
sbb
or
dec
mov
inc
add
sub
and
push
and
mov
and
sub
add
int
addr16
in
xchg
fbstp
loop
push
push
inc
push
mov
test
lea
mov
pop
xchg
int
imulb
fmuls
xor
popf
and
and
xchg
pop
cmp
mov
clc
aam
xor
push
push
sub
lds
add
loopne
int
ja
test
xchg
inc
pop
aad
mov
imull
addr16
pop
push
add
stos
push
daa
aad
mov
inc
add
aam
push
jmp
sub
mov
mov
xchg
mov
stc
xchg
mov
das
dec
dec
gs
das
cmp
sbb
pusha
ljmp
imul
or
repnz
jno
sbb
lea
ss
in
push
or
arpl
imul
cmpb
mov
mov
aam
outsb
adc
pop
cltd
stos
dec
xor
jg
mov
mov
cmpsl
loope
in
sbb
xor
pop
adc
testl
sbb
popa
hlt
imul
push
push
pop
lahf
xor
shll
addr16
pop
das
push
inc
loopne
xchg
cmp
sti
inc
pop
test
adc
jecxz
sahf
pop
test
arpl
and
mov
pop
cli
js
fs
in
ret
mov
and
ds
inc
and
mov
outsl
sbb
mov
add
xor
xor
jnp,pn
sub
xor
mov
sub
int3
push
xor
and
imul
gs
jge
out
pop
mov
sbb
sti
dec
xor
movsb
xchg
sahf
push
mov
pop
cltd
pop
mov
aas
in
adc
movsb
pop
popf
in
pop
pop
inc
sbb
dec
cltd
sub
jb
or
pop
and
mov
stc
adc
clc
or
shlb
cmpb
lock
in
sbb
sub
lea
mov
movsl
jbe
mov
nop
and
cwtl
mov
aad
sbb
dec
pop
mov
or
pushf
mov
sub
adc
push
mov
insl
mov
adc
dec
mov
in
stc
jne
inc
push
ja
sub
mov
jae
push
int
movsb
or
sahf
or
subb
ficomps
push
adc
sbb
push
ret
cmp
or
in
repnz
or
sti
or
cmp
or
call
nop
jle
cmpsl
mov
bound
push
cmpsl
sbb
xor
lret
sub
cmp
flds
jns
add
or
push
xor
das
and
mov
cmpsl
pop
mov
pop
inc
cld
mov
pop
sbb
add
stos
sbb
push
sti
out
adc
leave
cld
sbb
shrb
mov
adc
mov
out
mov
aaa
popf
popf
inc
xor
sbb
scas
pop
xor
orb
jo
xchg
addr16
lea
mov
subl
movb
leave
in
mov
rcrl
and
cmp
in
mov
mov
xchg
js
mov
jb
cmp
shl
and
rorb
inc
in
test
pop
and
dec
xchg
and
cli
adc
cmp
sub
add
or
cltd
adc
xor
lea
add
dec
lret
mov
inc
loop
jno
dec
mov
lea
inc
scas
loopne
adc
ss
inc
add
ret
dec
push
push
push
ljmp
and
int
movsl
test
mov
sbb
dec
loope
cltd
push
aas
mov
xchg
rcrb
push
sbb
or
sahf
cwtl
pop
and
push
lock
sbb
jbe
popa
add
or
add
test
outsb
popa
jno
icebp
inc
sbb
test
mov
add
arpl
pop
popf
cld
mov
cltd
cwtl
es
jge
std
cli
and
and
loop
imul
xchg
xor
imul
iret
hlt
dec
imul
mov
out
les
push
lods
mov
jo
mov
test
sbb
inc
popa
call
or
mov
test
jno
add
das
sbb
pop
orb
sbb
jne
inc
mov
cmp
sub
cmp
ss
js
imul
push
into
adc
xorb
push
daa
xchg
fsubrs
and
jecxz
sbb
stos
ljmp
lods
or
and
inc
lods
mov
movsl
mov
rclb
sub
pop
orl
int
lock
xchg
fldenv
sub
push
pop
outsl
or
and
dec
or
or
movl
xor
and
ret
xor
decl
xor
push
dec
sbb
or
or
add
in
sub
mov
xor
inc
icebp
cmp
xor
mov
push
and
jns
scas
frstor
xor
xor
lcall
jecxz
outsl
leave
mov
jl
lahf
and
add
push
daa
xchg
push
push
pop
xchg
mov
add
or
adc
xchg
pusha
movsl
mov
das
push
xor
xlat
add
pop
sub
fisubl
mov
daa
mov
das
mov
stc
fbstp
pop
or
mov
popf
aam
pop
shll
and
movsl
in
pop
mov
cmp
sahf
push
sub
arpl
inc
cmc
popa
add
test
sbb
mov
pop
or
xchg
iret
mov
push
loop
dec
push
xor
insb
pop
popf
je
sub
idivl
nop
fwait
mov
mov
adc
loop
arpl
or
pop
push
mov
push
mov
lea
pop
icebp
sub
loop
jne
jmp
daa
xor
sbb
gs
imul
lods
es
jbe
add
cmp
imul
sub
mov
stos
cmp
test
inc
pop
fld
add
cli
and
scas
pop
icebp
lds
sbb
or
mov
test
push
enter
repz
jp
scas
mov
cwtl
movsb
or
cmp
push
lahf
out
pop
adc
loope
inc
xor
mov
xor
orl
jo
and
cmpsb
test
roll
mov
sub
cltd
mov
sti
aad
jnp
loop
loope
out
jbe
jmp
shrl
pop
sbb
sub
cli
push
sub
aad
xor
sub
xchg
mov
and
jmp
push
and
repz
adc
aam
cmp
mov
add
push
push
jne
sub
cmp
xchg
lcall
mov
lcall
cmpsl
stc
mov
xorb
push
cmp
aaa
das
lds
inc
sub
push
insl
and
mov
int3
pop
pop
push
jl
push
and
pop
inc
xor
stos
sbb
pop
dec
popa
jb
sbb
inc
sti
cmp
scas
push
shlb
jecxz
lahf
pop
dec
popa
movsl
sbb
jl
mov
sbb
sub
push
fstps
ret
shrl
mov
scas
and
mov
xchg
or
out
daa
add
add
lret
mov
xor
lcall
jmp
fs
mov
loop
dec
ret
cmpsl
pop
sbb
jge
scas
mov
fisttpll
pop
pop
negl
xchg
jns
imul
bound
jne
xor
sbb
mov
sub
mov
inc
lret
dec
mov
mov
push
lret
jne
xor
imul
cwtl
jnp
inc
mov
fisubl
dec
pop
test
outsl
pop
imul
inc
aaa
stos
mov
les
dec
sub
sub
and
out
ss
ja
inc
inc
imul
push
fildll
xor
mov
jp
xor
xchg
es
aad
sub
jo
faddl
sub
xor
fisttps
not
cmp
popa
inc
outsl
mov
test
in
test
or
lahf
repnz
shlb
rclb
xchg
ret
push
sahf
push
sub
and
std
mov
and
aad
cmp
aad
ret
cmp
cmp
inc
testb
xchg
fsts
xchg
scas
sub
push
call
mov
fdivl
arpl
imull
or
and
iret
add
loop
addr16
and
mov
aaa
lcall
in
cmp
sbb
pop
scas
adc
nop
movsb
and
cld
mov
xchg
mov
push
cmp
aaa
cmp
inc
or
adc
and
inc
sub
jbe
jns
call
inc
adcb
loope
aaa
imul
jne
add
mov
dec
jg
pop
jno
fs
sbb
xorb
sti
mov
mov
ja
imul
lcall
mov
add
ds
jnp
in
enter
loop
jmp
pop
adc
jg
mov
int
clc
xchg
sbb
sub
in
cmp
mov
xor
xor
lcall
nop
leave
call
sbb
push
mov
es
mov
fidivrl
sub
jg
lret
stos
ds
lods
sti
jp
loop
mov
adc
lret
xchg
movaps
push
mov
sbb
xchg
stc
shlb
sub
xorb
mov
xor
out
sbb
popa
fcoms
in
pushf
aam
jnp
sbb
dec
xor
jecxz
xchg
das
mov
inc
les
inc
jnp
mov
ljmp
cvttps2pi
add
cmp
in
ds
loope
ret
test
push
and
xchg
sar
fcomps
push
outsl
pop
cltd
or
stos
jnp
daa
cmp
fmul
sub
jl
sbb
xchg
jae
add
test
rcll
sub
scas
inc
jl
or
aam
int3
add
pop
xchg
push
daa
ret
sbb
mov
cli
pop
sti
test
cmp
jns
enter
jmp
testl
cmpb
sahf
dec
and
xchg
cmpsb
inc
mov
xor
scas
adc
mov
push
and
sbb
pop
xor
sub
mov
inc
fwait
mov
outsl
arpl
inc
iret
lock
cmp
cmpsl
iret
and
sbb
pop
xchg
or
pusha
aaa
xchg
sbb
stos
andl
mov
mov
scas
jecxz
fldt
cmpsb
fstl
call
and
add
mov
imul
mov
aaa
mov
bound
in
clc
popa
add
shlb
jnp
and
mov
es
nop
in
dec
insb
fstps
iret
shll
jns
or
add
in
and
cld
imulb
clc
add
or
mov
cmp
push
adc
push
sub
and
push
cmp
iret
addr16
sbb
ja
adc
popa
xor
lock
sub
and
push
mov
xchg
shr
push
push
ja
push
mov
sbb
sbb
pop
or
clc
cmpsl
mov
cmpsl
mov
xor
aas
mov
jae
cmpsl
icebp
dec
repnz
out
and
xchg
fcoms
xchg
mov
mov
lds
data16
sub
in
inc
cmp
shrl
divb
mov
lcall
adc
jnp
pop
lods
stos
setge
sti
push
ret
cmc
in
cmpsb
mov
xor
add
pop
iret
rolb
mov
enter
or
aad
xor
pop
loope
ja
daa
int3
ret
sub
imul
out
cmc
mov
pop
push
xor
jns
call
jge
in
mov
pop
aam
fisubrs
mov
sub
push
and
cwtl
push
xchg
shlb
pop
fwait
and
add
and
fldenv
daa
push
pop
test
xchg
xor
adc
test
sbb
lods
sti
lock
push
pop
test
ret
andb
xchg
insb
and
test
mov
mov
mov
mov
arpl
and
shlb
mov
loope
sub
sub
mov
push
mov
cmp
mov
imul
mov
mov
or
addl
push
push
jne
loope
sub
xor
popf
cmp
fdivr
inc
out
pop
add
sub
popf
lds
cmpsl
lahf
sbb
jae
sub
movsl
push
or
pop
jnp
xchg
fldl
out
int3
fdivrp
and
mov
popa
sbb
fwait
sbb
movsl
or
lods
scas
jne
scas
sbb
out
aaa
mov
daa
push
inc
cmp
jp
or
push
or
mov
xchg
stc
pop
pop
mov
push
leave
inc
xchg
rcl
xchg
push
sbb
andb
jno
xchg
in
call
mov
out
ret
shl
imul
mov
or
cs
repnz
cmc
xor
or
scas
lahf
and
nop
add
scas
aam
lods
scas
or
addr16
xchg
inc
js
or
std
add
iret
and
push
mov
hlt
push
les
inc
addr16
jno
stc
stos
inc
xchg
xchg
mov
xor
xor
pop
inc
mov
arpl
in
jo
or
in
dec
cmp
dec
and
aam
mov
cmp
loop
or
push
jnp
shll
pop
pop
sbb
sbb
mov
dec
sbb
jg
dec
xchg
repnz
imul
add
pop
sbb
rcrb
push
sub
xchg
out
inc
sbb
insl
sub
jo
pop
dec
xchg
xchg
push
adc
xor
aaa
insl
sub
gs
xor
js
and
lahf
adc
adc
xchg
mov
mov
and
sbb
cltd
dec
shrl
stos
lock
call
shll
push
mov
add
out
inc
iret
pop
lods
cmp
dec
xor
adc
add
cmp
inc
mov
push
bound
push
movsl
pop
ret
shl
sub
in
adc
icebp
and
xor
dec
xchg
rcl
dec
popa
call
cmpsb
jnp
lahf
xor
mov
stos
sub
push
ja
push
xor
dec
daa
push
sub
jae
jmp
inc
jb
adc
mov
mov
jne
sub
mov
jecxz
sub
pop
pushf
adc
inc
push
jb
cmp
xchg
scas
sbb
sbbb
ret
data16
push
lret
jo
push
mov
pop
jecxz
cmp
test
mov
sti
outsl
in
xlat
fwait
aaa
inc
add
mov
sub
mov
sbb
cli
or
mov
and
mov
fbld
or
sub
imul
push
mov
dec
rcrl
push
mov
xor
in
sub
pusha
lds
sbb
ja
int3
into
ret
mov
stos
icebp
add
ds
pop
xchg
addl
lea
lds
or
sahf
inc
cmpsb
dec
movsl
adc
ss
ss
sub
dec
pop
icebp
xor
movsl
mov
sub
pop
daa
hlt
xchg
sub
and
mov
sbb
out
pop
ds
push
js
inc
addl
mov
jl
imul
mov
lods
sbbb
mov
shl
adc
mov
xor
les
sti
or
pop
xchg
popa
cmp
mov
ret
and
adc
xchg
xchg
mov
and
lret
into
stos
cwtl
and
sti
fisttpl
jp
cwtl
sbb
lds
stc
cltd
sub
sbb
push
outsl
push
push
clc
movsb
dec
adc
imul
sbb
loopne
xor
rolb
arpl
sti
jp
fdivrs
jp
ja
in
sub
push
pop
or
dec
mov
inc
xchg
mov
jbe
pop
and
ret
call
fcmove
and
inc
loope
aad
lcall
mov
sbb
and
push
mov
popa
cmp
push
cs
xor
mov
in
sbb
dec
call
repnz
in
subl
jno
sub
push
pop
scas
pop
pusha
int3
filds
or
mov
je
xchg
enter
aas
sbb
dec
out
push
push
sarb
out
xchg
mov
xchg
push
outsb
dec
in
xor
mov
inc
pop
inc
mov
loope
das
jge
mov
push
mov
xchg
sbbl
jle
mov
lret
loope
add
sahf
sbb
pop
cmpsl
and
add
cld
sbbl
lcall
outsl
or
popa
lret
xchg
ss
ja
js,pt
outsb
or
mov
sub
outsb
cmpsl
cmp
and
ficoml
inc
fsts
ret
sbb
aas
imul
mov
push
mov
add
mov
sbb
bound
int
jae
ret
ret
lret
jo
push
adc
add
xchg
or
lds
iret
sub
imul
jg
cli
adc
in
daa
in
xchg
aas
mov
add
mov
mov
cmpsb
cwtl
sub
push
and
cmp
xor
in
cmp
xor
test
push
mov
scas
inc
mov
push
cld
xor
pop
popa
push
jbe
sbb
dec
sub
adc
mov
inc
sbb
addr16
mov
pop
inc
call
gs
in
push
out
scas
and
imul
pop
pop
pop
call
xor
popa
and
xor
daa
fucomi
loope
and
popa
and
fnstenv
jnp
out
and
pop
lods
xchg
daa
aam
aad
xor
mov
in
xor
add
mov
lea
push
lods
loop
setnp
cli
xchg
mov
rcll
bnd
aaa
sub
xor
mov
xor
outsb
mov
fwait
adc
and
inc
cmp
popl
es
pop
push
lahf
add
sbb
cli
lock
loop
gs
sbb
mov
dec
sub
jg
dec
push
jl
lahf
jp
mov
pop
rorl
sbb
das
les
cmc
out
scas
ja
movsb
xor
mov
cmp
fdivrl
insl
mov
ficoms
add
pop
and
mov
and
aad
iret
lret
das
out
cmp
push
sbb
xor
stc
jge
cwtl
mov
rcr
push
daa
das
sub
dec
xor
and
push
mov
mov
xor
sbb
adc
dec
loop
enter
jbe
aaa
popa
add
add
aas
dec
xchg
push
adc
sbb
xchg
leave
psubq
jg
movsb
movb
push
sahf
pop
call
mov
pop
pop
xor
or
xchg
mov
bound
sbb
xlat
mov
fs
jo
sbb
lock
loop
push
in
jns
aad
ss
push
test
imul
ds
lahf
jmp
sbb
leave
pop
gs
inc
cltd
push
dec
push
mov
dec
imul
dec
ss
fwait
lea
sti
xorb
pop
mov
stc
es
mov
push
jl
push
sub
and
mov
repz
or
push
xchg
or
lock
sub
and
or
xchg
popa
or
push
out
push
vpavgw
push
or
lahf
pusha
cmp
dec
int3
jle
inc
mov
les
jge
mov
sub
and
addr16
psubw
cwtl
push
mov
and
sbb
lods
cmp
shll
bound
addl
push
mov
loop
dec
jg
push
adc
and
outsb
sbb
cmp
pop
mov
fwait
push
mov
and
into
arpl
add
mov
xchg
adc
push
push
insl
pusha
imul
mov
mov
jno
enter
dec
outsb
cmc
xchg
xor
inc
fidivl
mov
mov
nop/reserved
adc
pushl
mov
push
mov
push
loope
pop
pop
je
in
pop
push
or
std
push
movsl
lret
shrb
and
dec
fwait
or
sub
xchg
sub
or
pop
inc
xchg
das
jle
mov
dec
ret
pushf
cmc
push
lret
lods
leave
mov
and
push
adc
imul
in
add
rolb
adc
leave
jno
push
cmpl
dec
cltd
sub
mov
inc
lret
sahf
test
sahf
mov
arpl
push
and
and
mov
and
mov
stos
out
scas
push
daa
rcr
pop
int
aam
in
push
ljmp
lea
mov
cmp
mov
pushl
inc
lea
or
cmp
std
adc
inc
jne
bound
repnz
movsb
repnz
jnp
dec
std
fsubs
int
pushf
sbb
and
mov
gs
jl
sbb
mov
fs
cmp
xor
sub
popf
jp
xchg
loop
in
int3
test
cmp
loop
cmp
pop
mov
mov
mov
out
sub
pop
inc
push
ja
push
mov
iret
ret
xchg
cmp
sub
sbb
cmpsb
dec
popl
push
insb
xchg
stos
sbb
jbe
sub
xchg
or
push
repnz
mov
fadds
or
repz
ja
mov
adc
movsl
hlt
jnp
or
add
jmp
jle
cmp
sbb
into
int
sti
inc
adc
and
pop
jmp
xchg
test
stos
nop
push
es
sbb
xchg
add
dec
scas
mov
dec
gs
test
or
xchg
jno
cld
test
andl
cmp
mov
sub
arpl
mov
sbb
pop
addr16
sbb
mov
aaa
test
xchg
mov
xchg
pop
xchg
xchg
xor
push
mov
stc
push
insl
cli
std
dec
adc
in
adc
xchg
sti
adc
pop
shr
cs
pushw
push
mov
rolb
sbb
sub
sub
or
xchg
xor
out
push
mov
lahf
stos
call
mov
cli
mov
push
mov
xor
hlt
add
daa
in
outsb
xor
jne
lods
lret
aas
and
ss
int3
xor
sar
mov
arpl
loop
ss
cmp
std
sbb
mov
aad
inc
test
mov
stc
jg
xchg
popa
inc
das
cmpsb
inc
sub
or
stc
mov
sub
xor
cmpsl
imul
jp
outsb
insb
call
jge
dec
mov
cmpsl
add
mov
mov
aad
add
mulb
cmpsb
fdivs
add
stos
lret
cltd
std
test
gs
inc
fldcw
mov
fcmovne
in
push
lea
mov
ret
fildll
cld
imul
dec
enter
xchg
movsb
movsl
and
gs
push
jge
test
xchg
bound
jmp
js
push
imul
jno
jbe
lock
or
scas
sub
sub
mov
sub
push
imul
ja
test
mov
pop
add
clc
and
xor
int3
cmp
xlat
push
in
sbb
mull
fwait
add
pop
ja
sub
push
outsl
mov
fdivl
mov
xchg
jne
sti
subl
sbb
imul
in
dec
into
and
dec
adc
cmpl
inc
faddp
xor
pop
ljmp
dec
cmc
cmp
push
sbb
ja
enter
sbb
test
inc
pop
xor
or
outsb
pushf
imul
test
push
adc
cmpsl
leave
mov
pop
outsl
mov
mov
pop
movsb
int
adc
ret
es
adc
lds
aaa
push
sub
sbb
loopne
pop
arpl
insl
jne
and
jg
and
loop
and
add
xchg
or
xor
push
fnstcw
cmp
xchg
add
sub
dec
mov
xorl
push
popf
gs
fnstsw
push
lret
inc
scas
call
mov
sub
jne
imul
xchg
pop
sti
addr16
mov
loope
and
add
or
aad
mov
mov
pop
xchg
and
movsb
stos
cwtl
fcompl
pop
cmp
sbb
push
cmp
mov
lcall
mov
leave
pop
sub
scas
cs
push
scas
in
or
sbb
bound
sahf
int
xchg
and
jnp
pop
jae
outsl
lcall
daa
pushf
aas
add
shlb
in
adc
and
ret
pop
pop
inc
lret
gs
xchg
mov
stos
mov
lret
shll
icebp
in
mov
and
pop
rcrb
std
lock
sub
sub
popa
aaa
adc
push
mov
add
dec
loop
insb
pusha
jmp
and
inc
mov
in
and
cmp
and
push
dec
push
popf
jmp
mov
xor
lea
push
mov
push
cwtl
xchg
inc
xor
repnz
in
dec
add
and
xchg
pop
mov
daa
addb
or
imul
sbb
xchg
pop
and
and
inc
repnz
movsl
gs
stos
stos
stos
test
xor
lods
xchg
cmp
jmp
int3
jg
jne
fsubrs
push
out
out
shrb
loop
scas
mov
outsl
mov
test
gs
cli
cs
sbb
loope
mov
popf
or
xchg
pop
loope
pop
aaa
xchg
ja
aaa
loope
adcl
test
or
dec
xor
loop
imul
and
push
aas
fwait
pusha
push
xor
ljmp
lea
xchg
push
movsb
dec
sbb
loop,pn
adc
shlb
int
xchg
xchg
dec
mov
daa
cmp
pop
xor
inc
repnz
sbb
dec
fisubl
loop
push
lea
repnz
push
mov
sbb
sbb
inc
aad
rcrb
ret
iret
mov
pushf
cmp
adc
repnz
mov
mov
jg
sub
pop
adc
popf
push
cmp
sbb
xor
popa
mov
push
push
icebp
adc
and
gs
or
sarl
ds
mov
repz
push
pop
sbb
sub
mov
push
push
cli
pop
jmp
loop
cmp
sbb
cmp
and
mov
les
idiv
jp
dec
add
fmulp
andl
sub
push
int
mov
lods
mov
out
add
xchg
imul
sub
mov
and
mov
hlt
stos
cmp
or
inc
adc
ror
mov
jecxz
fidivl
jmp
inc
mov
push
mov
and
repz
xchg
xchg
add
sub
dec
or
sbb
sbbl
movsb
and
pop
loop
xor
cli
sub
andb
popa
sbb
or
fst
jnp
mov
xchg
ficomps
jns
mov
xlat
ja
inc
and
mov
loopnew
dec
iret
or
xchg
ret
rcrl
pop
loop
dec
lcall
mov
pop
loop
stc
imul
mov
nop
xor
xor
lret
clc
mov
dec
mov
pop
rclb
insb
cwtl
adc
stos
push
pusha
xchg
or
mov
jo
xchg
imul
push
mov
movsl
and
mov
jno
mov
mov
dec
sbb
cmpsl
mov
inc
xchg
pop
jne
out
pop
test
sbb
stos
push
jae
adc
xchg
and
inc
push
cmp
mov
int
sbb
adc
xorl
dec
call
pop
adc
push
cmpsl
into
in
out
inc
dec
inc
jnp
xor
pop
push
pop
xor
jo
popa
out
jns
cli
ret
pop
js
mov
scas
daa
mov
push
testb
popf
cwtl
imul
loop
fsubl
movb
pop
add
mov
loop
push
jns
lds
inc
dec
rcll
inc
pop
cmp
xchg
push
sub
mov
repnz
sbb
and
sbb
loope
cmc
push
call
dec
mov
jo
or
sbb
rcrb
mov
adc
or
jecxz
sub
adc
scas
jecxz
add
sbb
jecxz
pushl
lahf
test
loop
adc
in
push
pushl
js
jmp
adc
push
adc
pop
add
xor
call
pop
add
xchg
adc
das
add
ret
movsb
fstps
and
add
and
addr16
mov
int3
aas
popa
sub
fs
or
mov
cmp
mov
jbe
cltd
jnp
mov
jns
lods
inc
pop
in
fwait
bnd
das
insb
dec
xor
jb
cwtl
jl
pop
sub
out
sbb
pusha
cmc
add
lds
cmpsl
sbb
inc
test
cmp
sub
cltd
pop
in
daa
es
loop,pn
xor
loope
lea
ficoml
in
jle
and
pop
mov
dec
add
add
test
xor
sub
push
xor
dec
in
aas
in
and
mov
shll
sbb
test
ljmp
lock
push
hlt
inc
in
divb
adc
shr
in
and
cltd
inc
pop
mov
jb
pop
lods
add
aad
add
xchg
dec
scas
and
and
inc
xchg
mov
stc
sbb
sub
mov
xor
inc
imul
cmp
repnz
cli
inc
scas
xchg
jl
push
ljmp
sub
cwtl
xor
and
adc
dec
sub
int3
sub
loop
xchg
out
int
inc
mov
or
std
pop
mov
stos
aaa
repnz
int
lea
out
fwait
mov
pop
ljmp
shrl
aas
sahf
push
fwait
push
aam
xchg
adc
insl
flds
ficoml
jle
xchg
add
or
pop
mov
movsb
ja
inc
xchg
shll
or
call
push
into
cmpsl
mov
and
mov
mov
rcr
cmp
adc
xor
and
xor
movsl
in
mov
sarb
test
icebp
sbb
dec
ret
arpl
adc
xchg
stc
inc
bound
addr16
test
adc
in
addb
lds
or
mov
lods
and
loop
sbb
pop
or
push
xchg
jne
jns
ss
pop
push
mov
pop
mov
lock
sbb
xor
testl
stos
jg
pop
leave
aad
mov
stac
aaa
sub
inc
orb
test
inc
xor
cs
xchg
pop
arpl
arpl
push
call
ja
cmp
das
sbb
mov
jmp
mov
loop
ljmp
pop
bound
call
jns
xchg
sti
xchg
aaa
jp
inc
mov
je
inc
push
xor
and
cltd
lcall
mov
lods
mov
cmp
jg
xchg
adc
and
sub
sbb
push
lcall
xchg
and
or
add
mov
fsubrs
push
aaa
pcmpgtw
sbb
jno
cltd
xlat
jmp
insl
mov
push
cmpsl
mov
mov
push
pop
cs
sti
xchg
shlb
sub
add
aaa
rorl
out
popa
repz
cld
shlb
xchg
jae
add
int
sub
scas
mov
mov
pop
dec
jno
insb
arpl
fwait
cltd
sbb
or
cli
sub
inc
pushf
psubusb
dec
pop
dec
sbb
icebp
jecxz
push
and
push
pop
out
cmp
fst
int
lock
nop
iret
or
mov
jbe
and
cld
in
call
push
jp
int
sbb
flds
icebp
jge
and
xor
mov
and
ds
pop
mov
jge
out
xchg
cmp
insb
hlt
and
inc
add
aad
dec
lds
or
outsb
push
bswap
bnd
mov
mov
sbb
roll
int
mov
lds
pop
cmc
es
ljmp
in
mov
and
push
ds
xor
inc
call
stos
cmp
das
push
nop
dec
sub
ja
enter
cwtl
call
cmp
inc
mov
jo
ret
and
jp
inc
xor
in
in
les
jp
mov
or
imul
mov
dec
das
cmp
imul
shr
jecxz
push
stos
fcompl
rcrb
loope
dec
mov
jns
adc
push
pop
repnz
sbb
adc
or
xor
inc
adc
and
adc
and
adc
xor
dec
insl
pushf
pushf
sbb
mov
loop,pn
inc
inc
rcrb
cmp
push
addr16
gs
cli
pop
sti
add
push
push
jecxz
pop
popa
mov
scas
add
icebp
imul
leave
outsb
xor
cmp
and
add
das
jle
loopne
lret
mov
xor
push
jecxz
adc
cwtl
jno
xor
mov
sbb
cmp
mov
leave
xor
jmp
sub
cmpsl
mov
sbb
aas
push
stos
shrb
in
mov
mov
push
loope
ret
pop
sahf
and
ret
lret
pop
mov
push
or
jg
inc
fucom
fwait
adc
les
pop
jo
cmp
addr16
ret
or
lahf
mov
sbb
push
xor
ret
inc
sub
pop
and
mov
inc
test
mov
dec
jb
adc
fisubl
add
popf
sbb
push
mov
mov
cmp
mov
cmp
das
aaa
lcall
dec
adc
add
int
jg
xchg
xchg
or
jne
test
fstps
cmp
leave
jno
inc
xchg
fwait
cli
gs
cmp
shll
js
test
andl
jl
out
cmp
pop
pushf
pop
stc
bound
adc
stc
sub
fsubp
dec
xor
arpl
fimull
xchg
lods
xor
orl
dec
stc
addr16
mov
push
push
loop
ds
outsl
bound
push
jae
imul
mov
aam
cmpsl
jbe
inc
aad
into
or
adc
cmp
fldl
lods
int
mov
mov
mov
jno
mov
imul
sub
stos
je
cli
clc
and
iret
repz
or
fst
sub
popa
testb
ret
sti
mov
pop
in
mov
mov
stos
lcall
mov
test
cmpsl
push
add
mov
mov
in
and
cmp
ljmp
cmp
cmp
jp
adcb
jle
mov
sbb
sub
rcll
popa
andl
dec
lea
int3
fidivrl
mov
sbb
push
fsubr
sub
aam
push
mov
in
jbe
addr16
inc
sahf
hlt
test
adc
mov
ret
mov
sbb
lods
pop
scas
mov
pop
adc
mov
dec
xor
cltd
cmp
mov
mov
xchg
imul
or
cmc
cld
xlat
pop
shr
pop
push
sbb
rcll
cmp
mov
mov
shrl
shl
jecxz
outsl
fcomps
add
xchg
sti
stc
adc
loop
loopne
pop
add
cmp
push
jb
ficomps
sbb
cmp
cmp
outsb
stos
aaa
jno
test
add
int
call
mov
rcrl
int
icebp
mov
mov
leave
inc
pop
enter
dec
imul
pop
scas
mov
pop
sbb
mov
ss
mov
int3
sub
sbb
lret
cmpsl
ret
lcall
shlb
icebp
lea
add
xor
rolb
mov
dec
dec
push
popa
sbb
out
fiadds
xor
stc
and
sarl
outsl
dec
fldenv
push
jno
mov
movsb
jmp
sbb
movsb
sti
daa
lds
sbb
addr16
adc
xlat
push
addr16
mov
sub
cli
sub
bound
mov
xor
push
add
sub
or
outsl
jns
mov
jo
imul
mov
sbb
daa
mov
stos
mov
js
jle
pop
mov
movsb
sti
imul
outsl
dec
sbb
inc
pop
or
mov
sti
xor
xchg
mov
ds
testl
inc
stos
dec
sahf
mov
repz
das
and
cmp
call
jmp
popa
cmc
imul
xchg
dec
push
or
pushf
and
test
inc
mov
addr16
sub
and
lcall
les
mov
int
mov
xor
xor
inc
sbb
mov
ret
mov
cmp
in
popa
jle
xchg
addr16
cmpb
and
jae
lcall
xchg
sarb
int
aad
cmp
inc
inc
and
sub
mov
test
scas
aas
or
test
ja
pop
push
call
sbb
jo
mov
lcall
js
push
xchg
mov
stos
dec
and
xor
mov
jne
and
test
movsb
mov
xchg
rorb
mov
xchg
inc
mov
insl
cmpsb
clc
xchg
inc
call
cmpsb
jmp
xor
cmp
mov
mov
jmp
imul
repnz
cmp
cltd
std
scas
jb
and
movsb
pop
mov
inc
xor
mov
test
arpl
mov
outsb
icebp
movb
loop
and
pop
cld
sub
mov
stos
clc
scas
xorb
cmp
inc
cmp
rcl
and
cmp
js
mov
pusha
jb
xor
sti
push
and
push
sbb
loop
out
dec
daa
pop
addr16
jnp
loopne
inc
ss
cwtl
jmp
imul
jnp
mov
xor
mov
sbb
lret
daa
lret
dec
dec
xchg
ret
sub
sbb
ret
dec
mov
xor
jmp
jmp
je
push
shl
movsb
fdivrs
add
or
push
imul
repnz
and
mov
mov
call
mov
lret
dec
xchg
movsb
mov
call
imul
or
cltd
shrb
add
lahf
jne
or
dec
jne
push
cli
jne
imul
mov
movsb
in
dec
movsl
sub
mov
mov
push
cli
loop
stc
sub
xchg
subl
pop
mov
mov
movsl
sub
adc
add
jb
adc
test
imul
sbb
ds
lret
jb
ss
or
push
test
outsl
cs
mov
and
adc
sbb
insl
push
sti
es
insl
sbb
xchg
mov
out
mov
sbb
sub
sub
fimull
loop
mov
jae
hlt
imul
out
pop
xor
aad
pop
xor
mov
add
cmpsl
cwtl
nop
fsts
mov
cli
xor
sbb
jmp
pop
repnz
mov
repnz
and
int3
cmp
cli
call
xlat
mov
clc
es
pop
lods
sub
inc
xor
sbb
ret
xor
cmp
cltd
push
mov
jnp
stc
mov
jmp
cltd
mov
and
add
sti
inc
xchg
pop
push
mov
mov
jno
lods
mov
out
xor
jecxz
aas
pushf
aas
sbb
mov
or
xchg
mov
fiadds
dec
frstor
rcrl
fdiv
mov
sub
cmp
lcall
lock
es
test
sub
xor
ret
xchg
push
notb
mov
loop
or
ret
sbb
movl
pop
repnz
sub
jo
popf
sbb
scas
mov
inc
xchg
pop
adc
and
mov
ret
and
fmull
stc
stos
call
xchg
xchg
xchg
mov
leave
fnstcw
cvttps2pi
jno
jmp
call
mov
stc
lds
stos
mov
xorl
pop
mov
pop
sbb
xchg
inc
loope
lods
shll
xchg
mov
fs
sbb
xor
pop
loop
fwait
or
jns
cs
jns
jnp
inc
or
bound
test
and
xchg
sub
fldl
mov
inc
xchg
pop
repnz
lods
daa
das
and
adcb
push
mov
in
pop
add
lsl
mov
add
out
add
sub
sbb
out
sbb
stos
jnp
divb
push
sub
loop
out
push
sbbb
loop
lock
sbb
jns
pop
xchg
push
mov
scas
and
cmp
jle
push
mov
pop
lret
into
mov
and
mov
mov
mov
std
mov
push
xchg
lret
stc
mov
xchg
jle
notl
shll
nop
ss
xor
out
adc
pop
pop
das
jne
xorb
mov
lahf
mov
loop
xchg
mov
fs
cmp
dec
and
xchg
jmp
imul
orb
aas
fdivs
xor
nop
adc
decl
cmp
dec
fwait
imul
pop
pushf
add
repnz
cltd
jne
clc
into
test
lods
push
sub
lret
push
in
and
sbb
mov
mov
push
push
xor
dec
push
out
fbld
inc
jmp
xchg
fistpl
sub
dec
outsl
mov
and
dec
and
gs
fistps
or
das
call
sbb
subps
and
cmp
pop
out
repz
mov
mov
fisubl
andb
sbb
leave
pop
cmpl
xchg
and
mov
and
jno
insb
add
xor
sbb
outsl
cmp
or
into
test
int3
shrb
test
and
push
aaa
jle
and
xchg
xor
xchg
cmp
and
adcb
sbb
and
adc
jg
mov
xor
push
cs
inc
outsb
and
xor
sbb
cmpsl
mov
jne
and
dec
mov
lea
sbb
sbb
sbb
leave
popa
xor
push
jg
mov
push
dec
sub
and
xchg
sti
jne
or
push
popa
xchg
inc
das
jmp
imul
mov
movsl
jg
rolb
sbb
mov
sbb
mov
in
daa
sbb
lock
or
inc
ja
mov
mov
idivb
int
fstpl
js
popf
adc
stc
sub
or
cli
mov
lret
mov
cld
pushf
or
jmp
repz
jo
jecxz
fnstsw
stos
dec
popf
pusha
dec
loop
push
leave
mov
and
mov
mov
icebp
sbb
sub
jns
lods
inc
pop
mov
je
dec
dec
mov
add
cmc
push
nop
xor
dec
push
inc
mov
pop
cli
notb
xor
out
aad
jb
mov
outsl
std
dec
int
aaa
sahf
out
movsb
push
cmp
out
test
shrl
bound
mov
adc
push
in
mov
sbb
and
pop
call
addb
test
cltd
stos
ret
loop
jle
fstpl
inc
inc
arpl
testb
adc
hlt
mov
sbb
inc
xlat
and
outsl
cld
idivl
inc
push
cltd
xor
hlt
add
jb
scas
scas
fldt
inc
movsb
xchg
shrl
mov
cmp
sub
xor
pop
mov
cld
lcall
or
mov
dec
imul
loop
ret
in
dec
jae
add
aas
mov
xchg
shlb
jne
sub
sub
lret
add
and
xor
cmpsb
cmc
pop
mov
ds
dec
xor
dec
loopne
jg
ret
loope
mov
sarb
jbe
or
push
or
or
xor
lods
jb
loope
mov
je
mov
sbb
mov
out
insl
mov
popa
dec
fdiv
mov
sarl
mov
mov
pop
test
and
in
pop
mov
adc
outsl
or
arpl
mov
ret
out
ret
push
loop
ss
mov
loopne
mov
sub
shrb
xor
sub
xchg
cmp
xor
sbbb
call
insb
sbb
dec
push
sahf
push
es
into
dec
fistl
push
dec
sbb
adc
mov
rcr
sahf
mov
loop
icebp
sbb
and
cmp
sub
stc
lahf
push
insl
sbb
adc
xlat
jae
stos
addb
fcomps
mov
sub
paddw
add
jne
mov
add
in
pop
fistpll
sub
pusha
fs
adc
or
xor
add
push
ret
jle
pusha
add
ss
popa
xor
setge
cmc
sub
cltd
cmp
stos
cmp
cltd
inc
pop
dec
cmpsl
xor
adc
inc
add
jl
mov
xchg
sbb
addr16
int
shr
outsl
std
fpatan
and
cmp
lock
je
aaa
mov
mov
loop
ds
lods
mov
xor
sub
mov
mov
push
jg
and
icebp
cmp
xor
adc
call
jle
int3
cmp
das
std
pop
shlb
mov
push
pop
rcl
int
xchg
lods
cli
mov
aam
jno
shrb
sbb
cmp
mov
scas
loope
inc
repz
sbb
cmpl
or
lds
sbb
lahf
daa
mov
sti
das
lea
lcall
fnstenv
loop
ret
adc
rorb
push
dec
clc
jns
inc
xlat
cli
pop
sarl
int
mov
and
out
xor
gs
imul
les
inc
add
pop
popa
cmc
loope
into
xchg
cmp
imul
fstl
mov
sub
int
and
fdivs
dec
sbb
lods
je
sbb
popa
repz
jl
aad
imul
xchg
dec
mov
stc
mov
mov
hlt
push
and
sbb
fldcw
jno
bound
inc
jp
or
call
xor
shll
mov
xor
xor
cmp
inc
iret
mov
insl
icebp
insb
xchg
cli
sbb
inc
sti
cmp
or
test
repnz
cmovno
xchg
aaa
sbbl
divb
pop
and
popf
xor
dec
mov
push
sub
arpl
add
and
xchg
arpl
loopne
icebp
push
sbb
xchg
mov
pusha
sbbl
add
ss
insb
mov
xor
inc
add
mov
push
jnp
mov
fdivs
xchg
ficompl
out
cmp
xchg
orl
arpl
sub
pusha
insl
iret
ss
sub
repz
cmp
les
mov
pop
addr16
mov
arpl
sbb
dec
pop
sbb
push
movsl
adc
aaa
cmpsl
mov
and
aas
andl
pop
aam
and
popf
cld
aam
lret
movsl
mov
sub
and
lds
popl
adc
mov
mov
xchg
cmpsl
sub
and
sub
dec
cmp
imul
xor
in
push
sbb
clc
mov
xor
sub
mov
cmpsl
inc
es
gs
jecxz
cld
jmp
dec
jl
jge
mov
nop
inc
mov
ljmp
and
mov
pop
scas
push
popf
push
sbb
pop
sbbb
js
and
and
pop
fs
cmp
stos
push
inc
dec
pop
lcall
lods
add
jbe
imul
inc
mov
fidivrl
shl
jns
adc
int
lcall
popl
mov
call
pop
mov
out
mov
adc
sub
mov
sub
imul
cmp
pop
pop
push
mov
push
cld
push
popa
push
sti
test
mov
nop
imul
dec
stos
push
pop
std
pop
rorl
pop
sub
fs
jp
jne
mov
loop
call
fistpll
pop
mov
cs
mov
mov
mov
mov
sbb
inc
sbb
push
push
dec
cmp
rclb
xchg
addr16
or
xchg
inc
mov
imul
add
dec
fwait
stos
pop
pop
and
repnz
cwtl
das
jg
packuswb
push
rorb
popa
pop
sbb
in
add
jo
add
shlb
ja
mov
jg
call
lret
cli
jae
and
addr16
out
cmpb
cmp
icebp
add
sahf
mov
and
stc
and
lods
fwait
addl
ss
xchg
jg
addr16
mov
fnstsw
dec
mov
ret
sarb
inc
and
mov
ficoml
cwtl
sbb
add
aam
out
inc
cmp
xor
xchg
adc
and
xor
mov
fisttps
adc
sbb
adcb
sti
jns
inc
pop
das
sbb
push
inc
sbb
stos
lret
sub
mov
rcr
iret
jge
aaa
xchg
loope
stc
sbb
inc
sbb
mov
xchg
inc
movsb
out
rcl
cmpsl
and
xchg
sub
aas
sbb
or
cmpsb
aaa
mov
inc
aad
sub
pop
push
lods
push
xor
cmc
pop
or
lahf
std
sub
das
or
xchg
das
jmp
mov
jns
sbb
adc
push
mov
cld
push
and
fistl
or
aas
inc
rcrb
inc
fs
sbb
imul
mov
cmp
rcrl
push
sbb
pushf
jno
push
inc
stc
std
fstpt
or
adc
pop
js
popa
mov
or
push
jl
or
shll
cmpl
inc
popa
pop
adc
stos
and
inc
and
push
divl
es
inc
call
mov
ret
leave
xchg
gs
mov
inc
sub
and
cmpsb
sbb
icebp
and
cltd
cmp
sub
push
lahf
rclb
in
or
jmp
js
test
and
pop
loopne
pop
pop
sti
cltd
insl
mov
pop
inc
rolb
dec
and
imul
lock
xor
insb
xor
cmp
mov
stos
lret
push
sbb
adc
subb
sub
jno
mov
push
stos
adcl
mov
repnz
loopne
ss
cmp
mov
mov
inc
add
xchg
lret
roll
mov
hlt
mov
inc
or
xor
cmp
int
xor
sti
pop
sub
adc
add
dec
repz
aaa
mov
push
scas
xor
dec
cli
ficoms
fstl
mov
jb
cmp
mov
jns
jg
cmp
mov
push
lcall
daa
ja
out
xchg
and
psrad
ficomps
movsb
cmp
out
cs
in
adc
add
cmp
sbb
aad
fnstenv
repnz
fmuls
ja
xchg
int
fists
inc
adc
push
add
lahf
test
sbb
push
xchg
fs
xchg
cmp
test
pop
xor
mov
push
dec
xor
out
ret
sub
out
and
pcmpeqd
faddp
adc
pop
fstps
cs
mov
adcl
daa
clc
mov
bound
cli
loope
popl
and
push
xor
xor
xchg
sbb
in
push
xor
jnp
adc
aas
xchg
mov
dec
push
dec
adcb
and
pusha
cmp
loop
inc
mov
jmp
push
xor
or
mov
sbb
aad
xorl
loop
dec
icebp
nop
cltd
and
xchg
mov
les
dec
push
sbb
xor
push
add
and
cs
cmp
inc
cmpsb
adc
xchg
int3
inc
scas
xchg
mov
push
xlat
ficoml
mov
xchg
xchg
in
imul
add
cmc
xchg
xor
mov
cmc
sbb
lods
and
insl
adc
inc
push
iret
sarb
adc
adc
loop
rcrb
mov
cmpl
xor
xor
popa
dec
jae
test
xor
stos
mov
cwtl
mov
jns
pop
adc
sub
mov
jns
sub
imul
push
xchg
xchg
mov
mov
daa
sub
xchg
push
gs
or
das
ss
lcall
add
cmpsb
test
jne
push
and
fdivl
sbb
fs
xor
nop
mov
push
push
rcrb
mov
push
or
addl
xor
ja
out
mov
sub
jle
cmp
sub
repnz
mov
pushf
aad
aad
ljmp
movsl
js
inc
mov
sub
scas
bound
xchg
mov
clc
adc
repz
cltd
das
sub
sub
lret
cmpsb
and
push
mov
jnp
and
mov
jbe
dec
push
mov
jnp
push
sbb
insb
mov
pop
repnz
sbb
aaa
pop
jo
pop
dec
iret
fcmovne
fwait
dec
data16
call
jmp
ss
fs
inc
movsl
mov
sub
add
lcall
push
cli
xor
bound
inc
mov
mov
mov
fsub
push
jne
subl
popa
inc
cmpsl
aaa
data16
test
daa
cmp
push
pop
sub
sti
cmp
xchg
mov
popl
imul
ljmp
into
enter
daa
xor
shlb
xor
int
daa
add
mov
push
mov
rdtsc
adc
aam
fdivp
dec
push
nop
or
sub
mov
lock
into
and
xor
into
popf
loope
xlat
ret
push
push
push
mov
mov
lock
mov
movsl
fidivl
notl
pop
das
push
sti
dec
rorb
inc
clc
fwait
pop
loope
mov
gs
xchg
ds
sub
xor
mov
inc
add
or
push
adc
loop
push
fistl
xor
mov
cmp
fndisi(8087
mov
adc
lods
adc
mov
imul
and
mov
push
movsb
xchg
pop
aas
das
xor
sbbl
xor
cmp
js
out
mov
pop
adc
and
cwtl
or
mov
add
rclb
xlat
outsl
push
loope
fidivl
je
into
mov
lds
and
sbb
pop
scas
loop
fldcw
mov
iret
int3
ja
push
xchg
sbb
pop
lods
stc
leave
sbb
sub
sbb
int
ss
jp
sti
cmp
add
push
cmpsl
lahf
nop
inc
adc
loope
lds
cmp
lock
jno
pop
call
inc
sub
aaa
lret
mov
mov
and
loop
rcll
xchg
adc
lcall
outsb
push
aaa
test
std
arpl
das
sub
in
cmp
and
or
sti
aam
sub
call
aad
sbb
add
lret
inc
sbb
out
xchg
sub
aaa
dec
xchg
or
xor
loop
pop
mov
add
sti
xchg
loop
pusha
mov
xchg
cmp
test
insl
push
dec
out
sbb
mov
in
push
subb
arpl
bound
push
push
negb
pop
xor
sbb
mov
stos
ja
mov
in
sub
ja
mov
push
sbb
cmp
inc
cwtl
sbbb
enter
pop
iret
fisubs
or
jbe
push
push
sub
and
stc
mov
lret
lcall
dec
sub
popa
push
sbb
mov
loop
test
push
xor
sub
test
lcall
mov
jge
ret
inc
xor
arpl
mov
pop
xor
and
xchg
push
inc
fists
push
xlat
rcr
push
sbb
adc
sti
inc
test
inc
test
int3
stos
sub
andl
mov
inc
lea
fcomip
movsb
ret
lahf
jl
and
cld
out
xor
push
loop
cmpsl
push
fs
mov
add
mov
nop
xor
push
inc
shrb
mov
and
sub
arpl
roll
lcall
loop
and
lret
and
inc
mov
xchg
cmp
sbb
pop
fldcw
rorl
xchg
lret
in
lret
inc
lret
inc
push
xchg
jb
mov
leave
jge
push
fcompl
bound
pop
or
nop
push
lcall
test
lds
outsl
mov
xchg
int3
lea
out
add
cmc
insl
fwait
icebp
mov
sbb
cld
je
adc
pop
adc
movsl
movsl
dec
adc
loop
jmp
fsts
into
mov
cwtl
loop
test
sbb
inc
std
rorb
sbb
mov
dec
sub
imul
push
fiaddl
icebp
loop
and
ja
pusha
or
add
xchg
xchg
xor
xor
and
bound
inc
dec
sbb
sub
or
xlat
lret
hlt
aam
rcll
sbb
test
mov
and
or
xor
dec
xchg
mov
xor
pop
xor
ljmp
lods
in
cmp
test
or
adc
pop
stos
scas
clc
incb
iret
mov
arpl
push
push
fwait
test
xor
jne
mov
dec
stos
adc
rolb
or
pushf
hlt
flds
lret
xorb
orl
push
sbb
xchg
adc
push
jno
jnp
xor
jno
mov
mov
pop
mov
sbb
push
and
inc
pop
mov
and
xor
xor
xchg
arpl
sbb
daa
mov
iret
popf
xor
sbb
xor
mov
mov
stos
mov
jno
sub
or
imul
imul
push
and
sub
and
jno
aam
nop
repz
stc
daa
ss
lahf
pop
cmp
push
mov
cmpsl
add
loop
stos
mov
and
mov
outsl
pop
adc
sbb
jp
popf
das
add
add
es
mov
xchg
lcall
dec
movsl
cmp
das
mov
mov
stos
sub
loop
and
imul
loop
jle
dec
push
pop
les
sbb
jbe
mov
mov
rep
leave
ja
iret
jl
adc
sub
jns
mov
mov
jbe
jmp
ret
push
cmp
xchg
jns
shll
pop
in
shrl
pop
fstpt
fldcw
cmp
movsl
push
mov
dec
pop
jne
loope
pop
sti
lock
push
xchg
outsl
test
sbb
mov
daa
sti
addr16
mov
add
xorl
leave
sar
adc
loopne
cmp
inc
and
movsb
ror
add
ss
fstpl
mov
mov
insb
sub
mov
mov
aaa
xchg
sbb
jmp
in
movsl
loop
rol
mov
mov
sarl
dec
mov
sub
test
inc
and
icebp
xchg
xor
leave
push
push
and
jnp
cmpsl
push
sbb
xchg
call
in
dec
stc
iret
pop
xchg
outsb
and
and
push
xchg
xchg
ret
xlat
mov
dec
push
or
jecxz
ja
cmc
jnp
cli
icebp
loope
shl
mov
fnstcw
dec
push
call
and
cs
xor
call
mov
out
lods
and
pop
jg
stc
repnz
add
xor
and
dec
test
inc
mov
hlt
inc
cmc
pop
mov
sbb
lret
nop
test
add
xchg
sbb
mov
sub
xchg
loop
sti
xor
in
jge
xchg
jns
movsl
mov
gs
add
dec
jecxz
and
cmpsl
sbb
push
mov
call
mov
and
shll
pop
sbb
aaa
stc
add
ds
test
aam
aam
dec
test
stos
pop
outsl
dec
cmp
mov
xlat
pusha
into
pop
lock
push
stc
sbb
jae
ljmp
and
adc
inc
cmp
mov
insb
jae
daa
adc
lret
jbe
push
loope
cltd
stos
fimuls
sti
push
pop
mov
and
adc
loop
ljmp
mov
xchg
icebp
call
les
test
jno
sahf
sbb
mov
inc
iret
jg
mov
icebp
pop
jae
pop
pop
iret
xchg
lcall
xchg
and
gs
mov
sbb
std
insb
lds
stos
or
movsl
popa
call
stc
sbb
in
mov
jge
xor
leave
pop
push
jo
int3
outsl
add
outsl
scas
shll
cltd
or
jo
test
xchg
jp
and
pop
ret
dec
xor
add
imul
lcall
fs
sub
xor
loop
xchg
adc
mov
xor
add
dec
movsb
lods
inc
das
scas
or
xor
lcall
xlat
setb
push
stc
add
lds
pop
dec
mov
fbstp
in
pop
sub
rol
mov
sar
pop
hlt
std
adc
loop
mov
pop
xor
push
mov
pop
dec
stos
cmp
mov
arpl
sub
pusha
or
and
movsb
sub
inc
mov
mov
dec
jp
adc
sub
jno
push
sbb
cmp
pop
adc
jns
push
and
popa
rcl
fsincos
bound
xchg
mov
add
xchg
mov
scas
push
es
pop
push
xchg
ret
adc
hlt
ret
fs
aad
daa
mov
cltd
lahf
sbb
inc
xor
push
fs
mov
or
lret
jmp
popf
and
pop
sub
pop
cld
mov
mov
cmp
mov
push
sbb
aas
lock
xor
lahf
pop
aas
clc
fbstp
sub
xor
iret
lock
lcall
enter
insb
pop
test
addr16
aas
popf
mov
sbb
leave
and
cli
in
aas
sub
sbb
xchg
push
inc
pop
pop
mov
mov
push
imul
and
lds
hlt
mov
jge
push
cld
stos
lods
and
aam
insl
push
mov
pusha
and
bnd
icebp
scas
pop
sub
insl
lds
xchg
jo
jbe
iret
loop
adc
mov
adc
popf
in
fistl
cmp
loope
push
pop
daa
ds
stc
adc
xchg
xor
inc
sbb
leave
int
sbb
cld
hlt
add
push
out
and
xchg
cmp
inc
lcall
mov
sub
cmpsl
jb
and
in
pop
mov
push
adc
outsl
ljmp
or
pop
stc
dec
ljmp
mul
addr16
sub
in
call
flds
popf
push
sbb
sub
mov
push
sub
xchg
stos
fldenv
notb
bnd
xchg
pop
jno
lcall
jb
out
xorl
jae
sbb
lret
push
sarl
inc
je
mov
sub
and
sbb
add
mov
push
cmpsb
dec
sti
xorb
jmp
xor
mov
test
sbb
sub
cwtl
mov
jno
out
pushl
mov
popa
in
arpl
mov
jbe
xchg
and
cld
arpl
mov
jne
stc
and
in
in
sub
lret
and
imul
and
push
xor
cmp
sub
xor
xor
pop
in
aaa
imul
pop
gs
je
dec
mov
xor
daa
das
mov
aam
pop
pop
mov
xor
roll
push
inc
inc
dec
sbb
dec
push
xor
arpl
cmp
andl
sbbl
add
cmpsl
mov
add
ret
iret
xchg
je
addr16
push
dec
mov
and
pushf
sbb
stos
mov
cmp
in
cli
and
mov
or
loop
jo
daa
dec
and
and
cmp
and
je
inc
int3
mov
sbb
mov
cmp
shll
das
xchg
cwtl
call
leave
sbb
mov
and
pop
pop
fiaddl
mov
pop
ljmp
cmp
mov
scas
or
stos
pop
xor
jp
test
push
addr16
and
xorl
cmpl
cmpsb
cmp
je
sub
cmp
xchg
inc
testb
enter
call
xor
push
sub
xchg
push
jle
std
iret
xchg
jl
hlt
cltd
or
and
xor
sbb
test
sar
mov
cmp
dec
out
inc
mov
sub
and
adc
mov
adc
sbb
xchg
jge,pt
push
pop
sub
push
ljmp
in
xchg
jg
rcll
pop
inc
jnp
and
and
cmp
notb
popf
mov
cwtl
int3
in
int
mov
mov
push
lock
negb
imul
sub
inc
popf
imul
sbb
push
out
bnd
mov
cwtl
ljmp
jnp
imul
sub
add
nop
cmpsb
and
xchg
enter
and
mov
arpl
or
pop
and
sbb
add
sbb
push
aad
jnp
daa
cli
lock
push
mov
xorl
movsb
jg
aad
das
xchg
gs
lea
sbb
int3
mov
mov
enter
adcb
xchg
test
sub
mov
push
sbb
push
sbb
out
movsl
loop
add
cmp
fldenv
and
pop
loop
push
scas
jle
cltd
jno
or
cmp
xchg
xor
pop
mov
adc
mov
out
stc
inc
pop
sub
cwtl
dec
dec
loop
jmp
lret
loopne
and
push
daa
pop
xorl
hlt
or
mov
mov
out
cmp
fstps
testl
test
je
std
movsl
cmp
and
sbb
xchg
pop
sbb
int3
ret
mov
neg
movsl
push
nop
sub
stos
sbb
neg
pop
mov
or
test
lods
cmp
mov
aad
int
stc
setno
adc
adc
lahf
push
out
stc
shll
add
dec
pop
sbb
rolb
shrb
xor
leave
xchg
out
sbb
gs
mov
xchg
add
ljmp
bound
xlat
add
sti
out
push
fwait
sbb
sub
call
mul
shrb
cli
sub
sbb
daa
xor
sti
incb
or
mov
push
xor
pop
outsb
cmpsl
push
daa
xchg
lds
mov
xchg
adc
push
les
cltd
lahf
bswap
jl
stc
pop
outsb
cmpsl
mov
lcall
sbb
xchg
rcrb
mov
insl
inc
push
in
loope
les
and
and
lods
xchg
jns
xchg
das
push
pop
andb
movsl
mov
jae
insl
add
lock
sbb
testb
ret
ret
or
xchg
and
ja
ss
aam
mov
mov
imul
mov
pop
fstps
cmp
pop
call
in
fnstenv
ret
and
add
xor
or
jae
lock
xchg
movsb
out
push
jp
fstpl
dec
xor
gs
mov
mov
lods
enter
popf
mov
orl
pushf
bound
int
pop
test
sbb
jb
inc
sbb
rolb
sbb
mov
cltd
adc
rclb
sbb
sub
and
popf
lcall
cmpsl
iret
in
aas
sbb
loopne
pop
mov
ljmp
lods
pop
mov
aaa
mov
addr16
sbb
test
pop
repnz
mov
imul
xor
loop
push
popl
cmpsl
xor
push
sbb
pop
loopne
cmpsl
out
sbb
iret
call
rcrb
mov
cli
sbb
and
test
pop
pop
ds
dec
and
das
mov
mov
jge
push
or
shrb
or
dec
xchg
fidivrl
sbbl
mov
mov
sbb
in
scas
jae
cmp
lret
ljmp
shrb
scas
xchg
dec
test
js
test
add
das
cmp
jno
sbb
xchg
add
inc
xorl
push
xor
cmp
fldenv
cmpsl
sub
push
sbbb
loope
insb
xor
cmp
inc
or
das
ds
mov
je
pop
in
shll
leave
mov
into
xor
jl
push
fsubrp
and
sbb
sub
inc
les
insb
dec
cmp
cmc
sbb
jns
dec
mov
cmpsl
sbb
adc
jno
andl
aas
or
iret
jmp
repz
aad
mov
test
xchg
push
sbb
aaa
sub
jno
and
inc
iret
orl
gs
jg
xchg
and
xor
in
xchg
arpl
rcrl
fwait
cmp
dec
sbb
sub
and
cmp
mov
push
out
loope
ja
ss
adc
popf
lea
ds
sbb
xchg
and
pop
xchg
push
iret
sub
icebp
fwait
stos
push
rcll
xchg
pop
shrl
nop
mov
out
adc
or
imul
iret
clc
popa
repnz
pop
cld
mov
jo
mov
mov
lds
xchg
pushf
sar
lahf
int
cmp
mov
fidivrs
jns
pop
sbb
xchg
add
pop
das
into
xchg
mov
lahf
xor
cmpsl
in
shl
mov
and
or
push
test
pusha
cmp
cmp
loopne
test
fwait
and
xor
add
xchg
loopne
cmp
fldcw
mov
xor
jl
addr16
lahf
sub
dec
mov
insb
shlb
shlb
add
cmp
aas
add
daa
mov
loop
cli
jne
aaa
jne
inc
sbb
fidivrl
loope
pop
pop
into
mov
test
or
mov
mov
imul
push
pushf
xchg
push
aad
adc
das
outsl
xor
xchg
xor
or
pop
sahf
stc
mov
mov
add
shl
pop
mov
jg
jge,pt
xor
cmp
mov
and
cld
inc
cmp
imul
in
xchg
push
daa
cmp
mov
push
imul
push
mov
and
sub
and
xor
sbb
stc
add
daa
daa
and
or
dec
lret
mov
mov
enter
mov
jns
outsb
movsb
cld
cmpsl
adc
xchg
push
gs
pushf
pusha
mov
mov
xor
mov
sarl
stos
shll
lcall
sti
add
mov
fs
repnz
insb
cmp
adc
jl
insl
adc
inc
push
cli
in
mov
xchg
lcall
repnz
add
sbb
aad
mov
subb
prefetch
or
decb
xchg
mov
dec
cltd
cmc
out
mov
jge
out
cltd
pop
imul
fwait
pop
mov
pop
sahf
int
mov
mov
and
repz
xchg
fsts
insb
push
mov
jns
mov
and
mov
lock
xorb
int
push
jp
mov
jge
sub
add
lcall
sbbl
pop
lcall
push
stos
xor
into
dec
xchg
ja
dec
mov
fs
ret
jp
sbbl
and
lahf
push
add
dec
push
aam
inc
jbe
fldcw
mov
sbb
arpl
cltd
xor
daa
lods
mov
bnd
push
loop
stos
xor
in
outsl
xchg
push
inc
loopne
and
pop
jno
jge
test
frstor
adcl
mov
xchg
push
xchg
and
call
pusha
dec
lret
pop
dec
push
vandpd
dec
mov
lock
and
and
mov
movsl
push
aaa
cltd
xor
sbb
cmpl
cmovo
cmp
jge
loop
add
push
and
sbb
sbb
jae
xchg
inc
adc
loopne
xchg
mov
cmp
sub
sarl
xchg
cmp
xchg
push
ds
int
and
std
stos
and
add
lods
aam
push
add
repz
lods
xchg
xor
adc
testl
jge
inc
or
adc
mov
jl
or
cmpsb
dec
sub
push
adc
push
ror
xor
mov
in
jo
sbb
and
inc
sti
lcall
xlat
and
sbb
push
sub
or
jo
insl
pop
insb
inc
or
xor
push
cmp
call
aas
sbb
cltd
jge
push
mov
rcll
xor
and
cli
shrb
pop
lcall
mulb
das
jmp
sub
notl
int
xchg
andb
arpl
sbb
pop
and
inc
pusha
sbb
maskmovq
negl
xchg
mov
ja
add
cli
int
inc
pusha
filds
push
or
push
mov
jbe
fnstenv
xchg
sub
addr16
inc
xor
push
jno
loop
xchg
push
and
lods
orl
xchg
movsl
cwtl
jmp
movsl
cmp
cld
adc
pop
xchg
cmp
pusha
and
mov
inc
and
or
push
mov
cltd
cmp
mov
add
sahf
sti
jge
arpl
jp
pusha
dec
ret
mov
add
jecxz
aad
scas
out
inc
aam
ljmp
xor
lret
inc
jmp
pop
scas
jnp
xchg
inc
xor
rcr
addl
xor
xor
push
pop
or
call
mov
push
mov
xor
cmp
mulb
xor
addr16
shl
and
xorl
jne
sbb
rorb
sbb
cwtl
lock
adc
mov
xor
jg
push
leave
out
js
jns
fwait
jmp
stos
test
push
movsl
call
addr16
lret
add
or
es
fwait
cmp
adc
or
jbe
mov
mov
xor
add
adc
mov
fisttpl
push
inc
xor
pusha
push
jge
cmp
mov
mov
test
test
sahf
jne
push
insb
xchg
xchg
stos
jne
pop
sbb
xchg
mov
mov
mov
mov
xchg
adc
mov
dec
std
lcall
adc
mov
xchg
jmp
dec
popa
cs
add
ret
orl
call
imul
cmp
mov
xchg
inc
or
mov
jg
jmp
cld
add
cmp
jp
xor
fstps
xor
pop
iret
inc
inc
mov
les
and
cmp
pop
mov
sti
leave
mov
sbb
push
cmp
insl
add
jp
mov
lcall
pop
xor
jnp
cltd
mov
sub
add
cmc
rcl
mov
xchg
and
push
call
jge
push
mov
popa
push
push
adc
jno
sub
divl
mov
arpl
push
movsb
push
out
xor
adc
xor
lea
jge
xor
pop
cmp
xchg
cmp
psadbw
ja
out
mov
cmp
xor
inc
loop
shr
sub
je
and
jb
and
sub
or
int
push
pop
gs
daa
push
xchg
sub
js
add
movsl
jo
and
mov
jle
xor
mov
inc
mov
mov
cs
pop
js
xchg
ret
fistps
xor
pop
cwtl
mov
dec
push
sbb
das
xor
sub
mov
push
mov
gs
sbb
rorb
es
fidivrs
pop
dec
shl
jecxz
mov
cmpsl
addr16
mov
sub
sbb
jl
fwait
mov
iret
lgs
jecxz
mov
cmp
sbb
int
add
stos
xchg
sbb
sbb
mov
adc
and
xchg
xor
mov
dec
xchg
outsl
sti
and
xor
xchg
mov
aas
cmp
cmpsb
sbb
sub
lock
mov
or
test
cwtl
sbb
push
outsl
jo
mov
inc
into
mov
add
lds
mov
mov
and
push
mov
fwait
jp
out
jne
ja
mov
adc
add
xchg
stc
das
les
test
es
mov
mov
lahf
push
ja
arpl
add
jl
loope
outsb
mov
das
xor
sti
decb
int
inc
aaa
iret
push
push
xor
dec
in
ficompl
ret
inc
xor
mov
pop
ret
mov
aas
sub
sbb
xor
mov
push
pop
sbb
cs
ret
pop
inc
addr16
mov
sbb
repz
cmp
fdivs
mov
cmp
mov
into
mov
adc
mov
and
sarb
xchg
dec
push
mov
movsl
data16
loop
add
and
pop
sarl
shlb
and
inc
mov
pop
mov
xchg
mov
xor
push
inc
ds
out
movsb
pop
ret
into
negb
cmp
or
jbe
in
jne
mov
mov
cmp
stc
adc
das
cmp
add
and
stc
cs
mov
mov
test
out
push
dec
and
loop
js
or
movsb
sub
jbe
pop
or
pop
adc
or
pop
jmp
cltd
push
add
push
push
or
in
shr
xchg
std
xchg
push
lcall
or
xchg
add
push
stc
and
mov
or
mov
sarl
cmp
test
inc
lret
xchg
in
cmp
outsl
dec
lret
xor
stc
shlb
xor
inc
inc
nop
stos
pop
mov
cltd
fsubl
sub
mov
mov
insl
pop
mov
jnp
adc
xchg
sub
cmp
mov
cmp
fld
iret
icebp
jnp
mov
scas
sub
mov
and
sbb
das
mov
ljmp
pop
xchg
sbb
jo
notb
popa
lret
daa
mov
jo
dec
pushf
mov
into
pop
mov
outsb
imul
or
pushf
stc
mov
mov
mov
movsl
dec
les
test
repz
icebp
mov
ss
sbb
es
lret
adc
hlt
sti
or
icebp
mov
enter
sti
xor
mov
mov
xor
xchg
and
mov
xor
cwtl
inc
xchg
lds
ficoml
call
sti
sbb
cmp
popf
dec
pop
int
pop
mov
push
std
iret
xor
in
pop
aad
dec
iret
fildll
nop
jne
loope
movsb
fsubs
lea
mov
int
out
fwait
cmp
xchg
cmp
call
push
fs
or
xchg
inc
pcmpgtw
lret
out
lods
inc
insl
stc
sbb
xor
lods
mov
and
cmp
aaa
out
or
xchg
fs
out
loope
sbb
repnz
aam
roll
out
xor
pushf
and
pop
jno
bound
inc
sub
ljmp
xor
imul
jns
xor
imul
sbb
inc
push
inc
int
inc
add
mov
loop
inc
insl
pusha
outsl
cmp
mov
mov
xchg
ja
xor
loop
stos
or
repz
mov
pcmpgtw
sub
push
test
pop
fwait
lock
pop
movsb
xor
or
lods
popa
scas
sub
fidivs
inc
cmp
in
add
sti
fistpl
sbb
mov
movsb
aaa
test
out
jl
mov
sarb
sub
fidivl
and
movsb
scas
je
or
xchg
xchg
test
xchg
pop
addr16
shrl
push
sub
dec
repz
add
sbb
fcompl
push
jo
jmp
aas
xor
in
push
jnp
xchg
push
movl
mov
push
imul
push
or
sub
into
xor
push
mov
push
pop
aaa
push
mov
mov
and
mov
aas
xchg
cmp
push
jb
sahf
les
adc
imull
and
cvtps2pd
pop
test
xor
mov
pop
pop
popa
aas
sti
out
pop
push
inc
call
fsubl
or
jno
adc
mov
mov
ss
ret
xor
xchg
push
dec
sbb
ss
push
int3
sub
push
mov
sbb
adc
inc
xor
fsubl
sbb
rcl
dec
movsl
aaa
cld
pushf
xlat
aas
fwait
cmc
jge
adc
xchg
in
into
in
pop
jle
addr16
pop
xchg
lret
imul
testl
jmp
push
shl
iret
insl
leave
sub
add
push
or
test
fisubrs
test
pop
sbb
mov
xchg
int
sahf
sbb
inc
fldcw
cmp
adc
and
cmpl
bound
cltd
xor
push
inc
add
movsb
sahf
shl
loope
mov
lret
cltd
cmp
sarb
inc
jne
or
ljmp
stc
lret
or
sub
lahf
adc
jl
xchg
hlt
add
insl
xchg
inc
and
mov
call
lahf
push
xchg
pop
pop
jne
adc
inc
sti
repz
sub
ret
das
jle
xchg
test
pop
arpl
test
mov
nop
mov
sub
popf
mov
aas
add
repz
and
cli
sahf
pop
and
sti
in
sbb
inc
or
call
and
push
xchg
sub
sub
xchg
or
stos
add
outsl
sub
and
test
movsl
out
push
inc
pop
push
aad
lcall
cmpsb
mov
mov
adc
xor
xchg
xor
ss
jo
cmpsl
aaa
or
push
insb
jbe
cmc
sub
xor
sbbl
add
adc
daa
mov
cld
sti
mov
and
ss
aaa
jnp
psllq
dec
out
xor
xchg
aaa
xor
fsts
test
mov
daa
movsl
mov
cmpsb
cmp
je
test
dec
js
hlt
call
sub
inc
inc
sub
test
arpl
pop
and
jae
loope
fildl
jne
xchg
xorb
push
push
dec
push
sub
and
push
rcll
cmpb
pop
pop
fbstp
test
aam
sbb
inc
mov
shrb
xor
add
add
aaa
add
jbe
std
cmp
nop
cwtl
dec
sub
cmp
push
push
ljmp
ficoml
jo
jmp
xchg
hlt
shlb
ret
xor
nop
push
shll
les
adc
std
pop
iret
hlt
test
and
lret
fidivl
jp
cmp
xchg
lock
cmpsl
daa
mov
cld
and
and
or
jno
loope
cmpsl
adc
stos
xchg
push
mov
jae
or
cld
call
aam
adc
enter
mov
inc
xchg
inc
and
sbb
aas
cli
mov
mov
sub
sub
sbb
call
andb
push
test
push
mov
push
adc
jecxz
push
addr16
das
orl
mov
xor
mov
push
xchg
mov
or
sti
push
js,pt
popa
std
mov
push
add
inc
push
mov
xor
inc
adc
mov
cmpsb
aaa
xchg
and
lods
mov
jmp
mov
dec
pop
jne
jg
call
lahf
push
xor
mov
leave
lahf
cmp
hlt
pop
pop
cli
and
inc
mov
pop
push
adc
jmp
or
mov
stos
daa
outsl
hlt
push
cmp
leave
pop
aaa
or
mov
cli
mov
mov
stc
mov
jge
mov
jns
mov
repz
lock
das
das
jo
xor
sub
jge
cmpl
inc
or
pop
aaa
cli
and
repnz
loope
in
cmp
mov
das
adcl
add
pop
fidivs
shl
mov
cmpsl
and
fs
sahf
mov
stos
stos
fidivrl
popf
cli
cwtl
pop
adc
sbb
dec
or
in
mov
iret
mov
fld
movsl
xor
xor
cmpsl
xchg
jne
cmpsl
xchg
rclb
movq
mov
push
sub
cmpsl
jg
mov
or
pop
loop
into
insl
out
push
popf
nopl
mov
daa
fcomi
push
or
loop
mov
mov
pop
fnstcw
faddp
push
push
mov
cmpsl
mov
call
je
cmp
jne
sbb
mov
pop
shlb
push
xor
daa
pop
cmp
nop
int
xchg
sub
xchg
push
jl
imul
and
fldenv
xchg
mov
and
adc
out
addr16
les
das
mov
frstor
stc
dec
and
pop
subb
inc
pushf
fs
mov
popf
mov
mov
mov
mov
aad
mov
addr16
gs
cmc
arpl
adc
jne
cli
in
insb
or
xor
je
fstl
dec
fstpl
push
mov
sbb
mov
insb
sbb
mov
cmp
and
inc
push
cmp
jb
lods
inc
out
pop
jbe
movsl
sub
cmp
mov
cli
aaa
loop
lods
js
xor
xchg
pushf
xor
stc
cmpsl
pop
leave
scas
loop
or
adc
out
xchg
in
xor
and
push
mov
test
cmp
cmp
loope
mov
mov
jmp
sub
pop
loop
pop
test
cmp
lods
xor
subb
aas
or
pop
xor
jp
sub
xor
and
sbb
mov
push
jae
jp
cmp
aad
dec
mov
push
push
jecxz
sbb
adc
dec
jg
inc
add
xrstors
jb
arpl
dec
and
andl
les
and
loope
cmp
cmp
lret
fwait
daa
repnz
and
adc
sbb
add
rolb
inc
sub
inc
enter
xor
fucomp
push
std
int
mov
jnp
addr16
inc
stos
dec
lods
pop
and
pop
mov
out
jbe
push
mov
cmpsb
jne
pop
xlat
call
rol
mov
cltd
xchg
jmp
sub
jbe
pop
incl
and
mov
pop
hlt
int
loope
lahf
rcrl
pop
xor
aad
dec
adcb
aad
cmc
jnp
adc
xor
xorb
xchg
shll
sbb
xor
and
lods
pop
mov
mov
mov
stos
xchg
not
dec
fisubrl
cmp
mov
xchg
add
in
popf
xchg
sti
pop
xchg
sarb
adc
mov
popl
add
mov
mov
popf
push
addr16
int
or
push
push
ja
mov
dec
fnsetpm(287
mov
mov
mov
ret
push
jp
jg
out
add
mov
out
cli
adc
push
cld
out
out
mull
sar
inc
outsl
in
lods
inc
mov
rorl
or
xor
in
mov
cmpsl
sbb
mov
mov
sbb
inc
out
clc
int3
xor
popa
daa
mov
pop
or
fdivrl
jno
push
fdivrl
mov
xchg
sbb
gs
pop
sbb
and
sub
adc
imul
arpl
cwtl
push
jno
xor
add
mov
xor
cmpsl
xchg
or
jg
jp
jne
lods
adcb
xor
xchg
jle
lds
cwtl
loop
cmp
nop
daa
movsb
andl
cli
and
sub
sbb
push
ljmp
pusha
std
mul
sti
xchg
push
bound
notb
in
push
adc
sbbl
and
push
add
imul
cmpsl
mov
push
cmpsb
hlt
adc
into
int3
inc
xchg
add
call
inc
pop
std
les
sbb
add
pop
lret
jae
inc
xor
hlt
sub
jle
popf
pop
xor
out
push
cmc
xor
and
lods
insl
xor
push
int
into
lock
int
mov
aaa
jge
mov
cmp
jnp
push
inc
xor
adc
and
xchg
test
cmp
sbb
fcoml
xchg
mov
lcall
push
push
xor
adc
test
jmp
mov
mov
testl
out
cmc
jbe
fldt
daa
jnp
test
inc
jbe
xchg
pushw
mov
test
inc
fwait
push
insl
mov
adc
mov
imul
in
pop
cmp
pusha
loop
loop
lret
push
imul
jmp
push
jo
xor
sbb
out
or
and
push
in
push
xchg
fsubl
aad
sbb
jne
pop
out
mov
in
sbb
pop
and
and
mov
mov
addr16
mov
shll
cmpsb
test
mov
ljmp
lock
jle
jl
sbb
xor
loop
stos
ficompl
cmp
cld
cs
arpl
sub
push
and
and
in
xor
pop
push
sbb
xchg
in
loop
mov
lsl
xorl
adcb
fldl
sub
and
adc
sbb
mov
xor
or
jp
lcall
push
rcrl
ja
mov
sbb
xchg
push
inc
cmp
pop
aam
icebp
xor
xor
add
mov
lds
or
das
or
sub
mov
push
pop
setnp
outsb
and
push
fwait
invd
jecxz
push
cs
pop
hlt
and
dec
and
jns
outsl
adc
ja
sub
outsl
mov
and
dec
mov
lea
xor
mov
in
test
push
mov
adc
push
outsl
mov
xor
aas
sbb
shrl
inc
mov
inc
popa
orb
jecxz
lret
mul
push
cmp
xor
inc
cltd
pop
adc
ljmp
outsl
jmp
jne
das
es
mov
mov
jne
cs
jg
jp
pop
add
mov
aaa
xchg
dec
imul
mov
lods
push
xchg
mov
pop
outsl
shlb
adc
xor
and
lods
cmp
or
push
sbb
inc
lahf
inc
sub
ficoml
pop
and
and
xchg
xor
mov
jns
sub
ja
ftst
and
inc
fsubp
and
xor
mov
xor
sbb
ficomps
xchg
insl
add
das
loope
sti
and
gs
frstor
adc
sub
mov
inc
mov
int3
mov
dec
and
hlt
mov
shlb
nop
aam
int3
nop
inc
cmc
mov
push
in
comiss
mov
cli
imul
xor
jle
insb
push
dec
jo
xchg
in
movsl
lret
mov
aaa
mov
adc
xchg
fbld
daa
popf
sbb
daa
loop
fstps
push
test
jae
jns
and
sbb
mov
inc
jbe
adc
mov
jno
call
dec
add
adc
xchg
push
add
lret
and
loop
jg
es
pop
inc
adc
and
ror
adcb
cmp
movsb
lret
inc
std
and
or
jmp
insb
enter
in
mov
fdivrl
and
and
addr16
or
dec
in
or
or
mov
lods
fists
pop
adc
add
cmp
ss
in
ret
mov
push
jne
mov
xor
les
mov
aas
sahf
dec
mov
mov
sbb
rclb
xchg
sub
xchg
xor
lret
ja
sub
mov
sbb
inc
arpl
xor
aaa
inc
lods
or
and
sub
jge
push
add
xchg
rolb
icebp
aam
push
pushf
call
popf
mov
popf
dec
push
popa
mov
cmc
call
mov
add
jne
cmc
mov
pop
inc
jbe
mov
mov
add
sbb
lods
pop
cwtl
xchg
aam
call
test
inc
stos
pop
movl
jg
push
add
int
movsl
cmp
shll
cwtl
push
sbbl
data16
aaa
cmp
scas
lret
out
notb
int
or
aas
lret
inc
mov
daa
ret
sub
int3
lods
lahf
pop
inc
mov
mov
arpl
inc
inc
or
xor
inc
mov
and
sbb
arpl
call
cs
es
and
int3
xor
filds
pop
mov
shll
sbb
ret
movsb
and
sbb
pop
xchg
in
jge
insl
call
adc
fwait
mov
movsl
and
mov
sub
decl
sub
dec
pop
enter
sbb
out
movsl
lret
cmp
sahf
cmpsb
mov
mov
in
xchg
loopne
mov
jmp
dec
rcr
or
dec
sub
dec
addr16
xchg
jg
subl
jg
sbb
iret
pop
insl
sahf
mov
jb
jno
xchg
mov
sub
les
out
push
sti
xor
dec
cltd
add
mov
xor
stc
xchg
call
movsb
or
or
andl
ds
mov
jnp
add
std
mov
sbb
pop
lods
ja
and
outsb
jns
mov
cltd
iret
andnps
inc
fwait
ljmp
mov
fxam
imul
mov
xor
sahf
sbb
iret
mov
push
mov
pop
add
or
imul
dec
pushf
push
dec
test
sbb
loop
or
mov
cltd
push
loop
inc
in
jbe
push
sbb
sub
jno
adc
sub
or
cmp
push
push
cmp
fists
fimull
mov
push
lcall
or
inc
movsl
and
jb
mov
loop
xor
out
mov
insb
fs
hlt
jo
jp
iret
cmp
cmp
or
hlt
push
outsl
inc
scas
insl
imul
mov
or
cld
cmp
pop
out
sbb
jmp
imul
sbb
rolb
mov
mov
and
add
movsb
cwtl
pop
cmp
and
shll
add
jp
cmp
adcl
sbb
lcall
cmpsb
subl
jne
jbe
cli
cmp
mov
das
cwtl
imul
push
sub
ljmp
and
call
mov
add
or
mov
insl
mov
cmp
push
pcmpeqw
and
repz
dec
sub
xor
call
in
sub
into
popa
sti
sahf
out
push
fisubrl
imul
mov
pop
mov
xor
add
das
mov
fnsave
xor
push
push
push
scas
pop
aaa
out
jge
xchg
inc
push
jp
mov
xorb
jl
inc
pop
shl
and
pusha
inc
pop
xchg
mov
sbb
push
pop
or
cmp
jae
cltd
inc
outsb
imul
jns
fbld
and
push
push
sbb
imul
pop
cs
test
push
imul
mov
cld
loope
xor
or
inc
mov
push
orl
insl
clc
and
fstps
push
push
xor
jb
rclb
push
sbb
ja
ret
jbe
das
mov
iret
xor
inc
mov
icebp
loope
shll
ret
and
std
pop
pop
out
mov
and
pop
cwtl
jl
mov
jne
xor
cmp
fwait
iret
daa
test
fisubrl
divl
jle
or
mov
daa
push
aas
loop
into
outsb
xchg
push
push
push
sarl
add
rcrl
lods
loop
cld
pusha
jns
loope
mov
cltd
popf
mov
in
cmp
mov
pusha
jo
or
pop
push
jg
sub
inc
inc
inc
mov
xchg
mov
loop
leave
int
icebp
dec
test
push
push
jnp
lret
leave
pop
mov
test
fwait
and
lret
mov
pop
dec
imul
jecxz
jle
pop
push
and
pop
in
sbb
ret
push
push
inc
inc
cltd
push
jecxz
inc
cli
mov
das
nop
ret
xchg
outsl
mov
imul
jmp
cmp
add
das
mov
sbb
insl
or
add
loop
cwtl
mov
cmp
cmp
or
pop
aas
mov
sbb
movsb
xchg
pop
sub
hlt
mov
add
jo
pop
incb
dec
pop
stos
mov
mov
push
xchg
dec
mov
das
jle
mov
ja
add
xchg
adc
mov
mov
pop
cli
push
roll
js
std
pop
xchg
xchg
push
call
fdivs
xchg
sbb
cmp
xor
addb
cltd
dec
mov
insl
jbe
iret
mov
or
xchg
and
jmp
lret
sub
leave
aaa
and
popa
push
divb
sbb
sbb
sbb
test
mov
pop
sbb
ljmp
xchg
xchg
sbb
push
lahf
repz
pop
and
xchg
jp
dec
mov
lea
vcvtss2sd
stos
dec
das
mov
push
shrb
xchg
jp
mov
lahf
dec
xor
je
loope
jne
ficompl
add
cltd
insl
daa
popf
call
scas
jno
mov
sbb
lret
mov
jecxz
nop
repz
sbb
jo
jecxz
mov
bound
and
or
and
push
js
test
inc
add
push
xchg
hlt
in
cltd
loop
imulb
xchg
call
aam
jb
sub
adc
mov
and
push
pop
sub
int
fldt
loope
mov
sub
jg
aas
clc
mov
hlt
ljmp
fs
adc
mov
pop
add
sub
in
cmp
test
mov
xchg
outsb
and
and
aas
sub
cmp
or
xchg
xor
in
inc
cmp
push
mov
mov
lea
mov
and
orl
aaa
pop
dec
imul
adc
or
sti
jne
lret
or
adc
test
and
mov
sbb
test
popf
inc
jge
sbb
sub
inc
xchg
sti
push
sub
dec
or
rcrl
bound
mov
idivl
pop
adc
pop
sbb
mov
pop
and
loope
mov
xor
mov
mov
add
daa
adc
es
lahf
outsl
pusha
sbb
insb
in
imul
mov
outsl
in
and
adc
adc
dec
fstps
cli
mov
pop
sti
jns
sbb
jnp
sub
icebp
lret
add
scas
xor
icebp
scas
rolb
and
pop
fldenv
push
fwait
mov
cltd
or
xchg
popa
sti
jnp
iret
cli
test
or
das
mov
daa
sbb
sbb
and
inc
adc
or
sbb
mov
icebp
and
dec
mov
popf
in
dec
add
cmp
sub
sti
arpl
or
sbb
sbb
push
ljmp
dec
inc
cmp
xor
cltd
cmp
xchg
inc
scas
sarl
fstps
int
jo,pn
add
or
popf
inc
mov
xchg
in
mov
xchg
popa
dec
xchg
imul
fildl
xor
push
cli
bound
cmp
stos
fnsave
int3
dec
adc
dec
pop
stos
xorb
jo
inc
sub
enter
push
push
aaa
ja
cs
or
mov
test
xchg
cmp
stc
cmp
and
mov
stc
pop
movsb
mov
sbb
pop
pop
inc
push
cmp
in
pop
sbb
pop
xchg
outsl
loop
sub
mov
movsb
xchg
jmp
jle
sbb
pop
and
xchg
sbb
stc
sub
roll
xchg
xchg
adc
popa
leave
lods
push
shrl
xchg
xor
xor
xchg
insl
loope
ja
dec
sbbb
pop
pop
lods
adc
jecxz
adc
add
popf
and
ds
xchg
inc
rorb
mov
sbb
xor
dec
mov
cwtl
movsl
out
aaa
cmp
lea
ret
ficomps
add
movsb
inc
leave
loop
inc
movsl
pop
rdtsc
stos
ja
mov
loop
mov
pop
cmp
mov
mov
in
inc
adc
adc
cld
mov
push
and
lea
test
fstps
je
adc
dec
jecxz
jnp
mov
ficompl
mov
dec
test
jns
repnz
push
jb
or
add
inc
adc
aad
sbb
add
cmp
test
dec
leave
sub
mov
add
hlt
xor
pop
divps
cmp
movsb
inc
fildl
or
mov
sub
mov
loop
mov
sti
xchg
add
or
ret
incl
jg
in
or
out
fstpl
icebp
pop
inc
hlt
pop
xor
lods
push
adc
xchg
lds
push
xchg
cmp
call
dec
push
loope
gs
jg
sbb
mov
jmp
ficoms
insb
push
mov
pop
iret
push
mov
mov
mov
push
sbb
sub
sub
add
enter
xor
pop
rcrb
and
pusha
leave
loope
or
dec
jbe
in
into
jge
loope
loop
mov
ja
sbb
or
and
mov
dec
jle
scas
push
add
jbe
push
sbbb
jmp
inc
jmp
mov
test
mov
sbb
mov
jae
addb
sub
xchg
jmp
sbb
cmp
lcall
push
add
cmpsl
lcall
popf
imul
adc
stos
adc
popa
inc
or
sti
andb
and
sbb
mov
sbb
push
mov
ds
fbstp
inc
outsb
sub
ret
jp
and
std
jp
dec
fisubrs
mov
mov
push
popa
and
xor
in
flds
adcl
inc
insb
adc
and
cmp
pop
mov
mov
xor
cmpsb
add
mov
cltd
mov
inc
in
dec
jb
lock
lahf
jno
xchg
js
mov
and
pop
cmpsb
push
dec
mov
shll
ds
shll
mov
jae
and
lds
push
mov
int
push
xchg
sub
mov
xor
mov
int
xchg
cmpsl
adc
shrl
in
cltd
rcll
push
push
in
mov
shrb
mov
adc
jle
adc
jb
dec
xchg
imulb
or
pop
xchg
mov
mov
xchg
jnp
add
sahf
mov
out
bnd
cmp
xor
fs
aam
bound
adc
xchg
adc
xchg
daa
push
incb
push
cmp
dec
mov
lahf
sbb
inc
rorl
push
push
insb
popa
adcb
add
and
mull
cld
mov
pop
sub
mov
and
inc
xchg
xchg
and
mov
jno
or
jno
xlat
inc
cli
xlat
push
cmp
loope
push
jge
xchg
fwait
and
inc
bound
aam
rcrl
push
jbe
mov
mov
mov
lcall
xchg
dec
xor
push
jns
loop
fs
and
daa
mov
cmp
ret
or
outsb
mov
mov
xchg
and
mov
mov
push
cwtd
pop
cld
ret
xchg
push
inc
pop
lods
mov
icebp
arpl
xor
pop
popa
shll
xchg
cmc
push
stc
sbb
push
lret
xchg
xchg
cltd
push
mov
test
cmp
xor
loope
bound
xor
xor
loop
fs
push
dec
cmp
lcall
lea
stos
xor
insl
xor
lods
pop
xchg
and
pop
rol
and
mov
pop
xchg
scas
push
shrl
cmp
mov
xchg
xor
inc
adc
popf
and
mov
loope
xchg
mov
lret
bound
mov
push
xchg
inc
dec
mov
movsl
xor
shrl
push
mov
addr16
xor
ds
xor
insl
xor
push
mov
rclb
lods
aad
dec
xor
es
xchg
aad
rcrl
cmpsl
push
aas
push
and
shll
push
push
xchg
mov
lahf
daa
cltd
or
and
ret
das
and
sbb
mov
xchg
mov
shrl
andl
and
fwait
adc
and
xchg
sub
jmp
cmp
mov
mov
andb
mov
and
ret
out
mov
jb
lcall
sbbl
mov
mov
dec
cmp
repnz
stos
adc
and
xchg
jbe
outsb
shl
and
pop
out
and
xor
sbb
sub
push
xor
or
and
mov
mov
sti
xor
push
mov
mov
push
jg
adc
xor
cmc
test
aaa
lahf
ja
adc
insb
sub
cmp
dec
lods
loop
pop
mov
mov
imul
jp
pop
loop
xchg
mov
cmp
mov
cmp
push
push
aad
movsl
pop
ret
jge
rcrl
cmpsl
mov
and
icebp
xchg
push
out
mov
push
je
pop
and
movsl
push
push
ret
pop
aaa
bound
call
push
dec
mov
xor
fsubrl
popa
mov
jno
fwait
icebp
mov
lcall
mov
inc
and
out
das
dec
xor
mov
jmp
or
mov
mov
repz
scas
aas
push
cmp
push
shlb
into
push
and
xchg
add
clc
xor
and
and
dec
and
loop
pop
rcll
xor
outsl
movsl
aaa
push
movsb
dec
shll
xor
pop
xor
and
bound
sbb
jp
imul
sbb
test
mov
mov
jbe
pop
xor
ret
fs
pop
inc
adc
arpl
push
and
push
xchg
jp
xor
adc
push
adcb
fwait
loope,pt
je
js
rcll
and
and
sbb
pop
and
jl
push
sub
lea
les
push
xchg
jno
scas
xor
repnz
and
xor
mov
cmp
je
and
imul
js
and
mov
bound
push
and
in
popf
ljmp
push
gs
mov
jge
sbb
icebp
lea
lret
mov
popf
inc
sub
xor
dec
aam
lret
orl
sbb
sti
push
push
pop
xor
frstor
add
and
sbb
mov
and
insl
mov
and
xor
xor
aad
xchg
xor
movsl
sub
and
sbb
arpl
adc
push
cltd
jb
sbbl
cltd
cmp
sbb
add
sbb
sub
add
dec
push
inc
or
or
dec
pop
lcall
sbbl
das
outsb
jnp
and
push
mov
outsb
cmpsl
xchg
stc
pop
loop
mov
int3
and
jno
and
cmpsl
sub
pushf
inc
push
shll
cmpsl
fwait
rclb
push
arpl
sub
mov
and
sbb
lret
jge
repnz
mull
push
xor
push
push
sub
push
jns
adcl
leave
xor
icebp
xor
xchg
and
mulb
subl
aad
xchg
xor
jnp
jle
sub
lret
mov
and
xorl
push
cltd
xor
sbb
stc
popa
rcrl
xchg
frstor
stc
cltd
shll
xchg
movsl
and
jmp
push
xor
cmp
ss
jns
push
addr16
sub
pcmpeqw
add
inc
and
cmp
cltd
push
and
pop
lret
mov
pop
mov
loopne
iret
xchg
nop
cmp
mov
xchg
pop
pusha
mov
jns
out
addl
push
dec
cmp
loope
iret
xor
xor
xor
addr16
xor
gs
and
sbb
lods
cmpb
sahf
jmp
ror
add
push
outsb
cmp
je
enter
mov
adc
and
xchg
cwtl
push
adcb
repz
mov
and
xchg
inc
int
mov
pop
in
and
cltd
lea
and
xchg
loope
ret
lahf
leave
adc
add
push
mov
xchg
adc
adc
push
push
lahf
mov
xchg
jo
inc
pop
sbb
fcomi
dec
and
xor
dec
mov
xor
bsr
fs
js
push
dec
and
fcompl
xchg
test
sub
push
or
shl
repz
dec
mov
gs
sarl
scas
shr
and
sbb
in
das
push
or
fcmovne
and
mov
orb
jle
dec
xchg
pop
pushf
cmp
subb
mov
push
xor
jae
sbb
cmpsl
cmpl
and
mov
mov
adc
in
iret
or
loop,pt
jne
dec
pop
aam
xor
dec
scas
mov
xchg
inc
sbb
pop
stc
and
in
sub
sbb
mov
add
jmp
imul
pop
push
imul
icebp
je
lea
jb
xor
xor
push
inc
bound
jb
mov
jb
xchg
mov
roll
popl
popa
inc
icebp
push
xchg
jns
daa
push
sub
jmp
xor
icebp
xor
popa
jmp
icebp
push
repz
push
and
aam
mov
xor
shrl
mov
divl
adc
andb
mov
adc
rorl
push
xchg
dec
adcb
addl
outsl
adc
push
xchg
push
push
mov
call
dec
sbb
adc
loop
hlt
repnz
jno
mov
sbb
xchg
or
ds
cmp
rcrb
lahf
xor
push
inc
outsl
insl
xchg
inc
mov
inc
pop
loop
mov
in
int3
mov
xchg
jne
pop
shll
outsb
add
stos
loopne
or
push
and
push
xor
jecxz
mov
aaa
outsb
xor
adc
out
cmpsb
and
lea
push
push
iret
xchg
mov
pop
sub
xor
push
arpl
and
and
adc
repnz
xchg
cmp
pusha
sub
push
xor
push
test
sbb
sbb
push
test
add
mov
adc
cmp
pop
daa
jp
add
fistps
push
cmp
imul
and
fnstenv
push
enter
push
out
mov
sbb
insl
or
roll
or
push
insl
in
jb
pop
mov
addr16
xor
add
xchg
lcall
sbb
iret
mov
cli
shll
les
xchg
int3
orl
fildll
jg
mov
adc
and
cmp
mov
cli
or
daa
arpl
push
cmp
bound
adc
call
and
rorl
int
out
push
mov
xchg
popa
adcl
mov
movsl
rcll
outsb
mov
inc
in
cmp
mov
push
and
cli
mov
jmp
cwtl
fldenv
repz
popa
and
sarl
and
adc
iret
xor
ret
mov
add
rorl
fsubs
cmc
mov
and
inc
enter
lea
and
in
or
lds
and
pop
xor
or
xor
int
pop
inc
pop
and
movsl
cs
mov
cmpb
addr16
daa
and
push
imul
xchg
shll
push
insl
cmp
inc
lret
push
push
ret
mov
adc
push
mov
xor
adc
mov
mov
addr16
inc
popa
push
sub
sub
xchg
push
sub
outsb
xchg
popa
sbb
and
mov
fiaddl
je
or
pop
bound
sub
jnp
xchg
jno
mov
sbb
inc
adc
xor
and
push
cmp
mov
push
xor
cmpsb
xor
and
xor
mov
xchg
loop
gs
mov
adc
add
cmp
cmp
cmp
push
xchg
mov
ljmp
push
adc
insb
or
ja
xor
and
int
jno
imul
out
adc
leave
pop
lock
push
xor
enter
mov
jae
add
andnps
push
and
and
xchg
jp
cmp
mov
sub
and
xor
movsl
stos
or
cmp
lea
stc
daa
sub
and
fs
ljmp
and
mov
fnstenv
shrb
push
sbb
ret
sbb
daa
xor
push
addl
and
mov
cltd
sbb
and
loop
pop
xor
jecxz
xchg
shlb
imul
mov
icebp
je
jl
mov
lcall
lcall
hlt
add
mov
xchg
mov
icebp
js
lret
add
xor
imul
mov
icebp
je
jp
mov
sahf
aaa
cmp
mov
fistl
orl
add
lahf
lods
xchg
popa
jb
scas
jbe
pop
inc
xor
shrl
xor
and
and
js
and
xor
and
push
jp
mov
sbb
mov
ss
pop
and
mov
and
sbb
dec
sbb
add
push
cmp
dec
cmp
mov
cmp
nop
mov
and
mov
sbb
xchg
sbb
sub
hlt
jg
pop
and
stos
cmp
mov
xor
xchg
daa
xchg
push
and
push
jnp
daa
and
sub
insl
sub
loope
pop
jg
fsts
cltd
stc
loope
and
aas
icebp
and
push
xor
insb
in
sarl
sbb
daa
mov
sahf
xor
xchg
jno
loope
lret
scas
cmpb
mov
and
jge
xchg
loope
pop
mov
xchg
mov
ljmp
push
push
xor
pop
adc
adcb
movsb
inc
xor
in
lea
xchg
and
push
xor
sbb
jnp
repz
faddl
push
xor
push
cmp
mov
mov
rorb
push
push
xor
andnps
add
xchg
lret
sub
daa
jb
mov
and
sbb
mov
mov
cmp
mov
daa
push
push
inc
xor
test
cltd
or
cmp
imul
jg
push
jmp
imul
or
cmpsl
xor
mov
int3
imul
pusha
icebp
and
sbb
xor
pop
andb
xchg
pusha
jns
pop
icebp
imul
rcl
lret
cmp
out
xor
std
stos
mov
out
in
sub
inc
cld
xchg
adc
mov
cltd
add
rolb
jmp
jecxz
jb
push
mov
adc
cmp
jno
push
ja
xor
pop
cmp
add
push
xchg
mov
or
inc
sbb
out
daa
es
and
mov
add
jcxz
imul
mov
and
cmpsl
xor
cmp
int3
add
cmpsb
push
and
popa
ret
addr16
xchg
addr16
xor
bound
ljmp
adc
mov
popa
popa
add
jne
push
cmp
push
fucomi
mov
push
aam
mov
jb
ret
jle
xchg
push
in
mov
push
icebp
push
test
add
push
rorl
jb
shll
mov
or
and
sbb
bound
xchg
shl
xchg
inc
jb
dec
jne
mov
xchg
ret
jae
and
fildll
sbb
jne
js
sub
out
sbb
add
pop
pop
dec
icebp
sbb
xor
icebp
popa
js
add
adc
pop
mov
and
aaa
xor
push
inc
mov
adc
cmp
mov
or
daa
imul
fwait
jb
je
ja
cwtl
cmp
xor
orl
cmp
push
shlb
sbb
sbb
cltd
call
test
scas
xor
cmp
push
loope
outsb
push
push
xor
fstps
xchg
xor
aas
push
xor
xor
dec
popa
popa
push
xor
xchg
ffree
jbe
lods
jbe
ror
adc
icebp
mov
inc
insl
cmp
pop
xchg
push
push
push
push
cmc
xchg
sub
inc
adc
push
jb
popa
xor
fisubrs
jb
loope
inc
and
mov
fwait
mov
popa
xor
sbb
outsl
inc
xor
jmp
outsl
xor
mov
xchg
push
shll
sub
push
lods
dec
xor
bound
xor
inc
inc
lds
lahf
push
cmp
addb
xor
popa
xorl
jmp
and
cltd
pop
imul
sbb
xchg
mov
popa
bound
xor
ret
mov
subl
mov
inc
mull
std
and
insl
je
add
pusha
cs
pop
jno
pushf
adc
aas
aad
adc
adc
aad
icebp
es
pop
xor
shll
lahf
adc
jb
xor
es
es
push
xor
and
pop
lcall
lcall
sbb
sar
and
movsl
sub
adcb
aas
shrb
in
popf
xchg
loope
xchg
sub
xor
xchg
xor
out
imul
xor
inc
xor
mov
mov
repnz
push
mov
cmp
push
push
jb
push
push
pop
add
xor
mov
and
cmp
js
fs
mov
mov
mov
adc
outsb
loop
xchg
or
push
cmp
jno
roll
cmp
and
test
xchg
xorb
xchg
lahf
pop
jns
cmpl
fsub
mov
pop
sub
cmc
pop
mov
pop
jns
xor
xchg
mov
pop
xchg
imul
xor
adc
sub
ficomps
fistps
push
sbb
pop
jns
mov
outsl
pop
xchg
ss
jns
pop
jns
dec
and
add
shll
adc
dec
push
fwait
shll
jb
filds
popf
cmpsl
test
aaa
mov
sbb
push
aaa
and
or
jae
mov
cmpsl
fwait
jae
adc
packsswb
push
icebp
xor
mov
daa
adc
icebp
and
adc
call
sbbl
or
push
daa
and
adc
es
pop
push
mov
cmp
cltd
mov
fbstp
loope
push
and
mov
cltd
sub
sbb
push
dec
dec
xchg
xor
ds
scas
aas
lods
push
push
lock
mov
daa
mov
mov
aas
andb
and
mov
icebp
push
and
xchg
dec
js
or
scas
stc
push
dec
cmp
mov
cltd
or
push
cmp
adc
sub
cwtl
push
xor
mov
rcll
cmp
outsl
sahf
push
push
mov
imul
add
adc
repnz
jns
shlb
xor
sbb
xor
push
sub
pop
push
imul
cmpl
div
xorb
xchg
jns
add
add
das
lcall
mov
rcll
jb
daa
jmp
push
rcrl
clc
test
or
xor
xor
xor
add
xor
cmp
add
push
minps
push
xchg
loop
push
xchg
shlb
into
mov
adc
mov
adc
push
add
and
xchg
dec
fdivr
jno
xor
rcll
movsb
xor
lret
aad
xor
popa
or
aaa
push
push
lret
popa
pop
inc
aad
xor
imul
and
popa
jne
popa
mov
popf
aaa
cmpsl
mov
adc
pop
and
sub
sbb
in
shrb
xchg
addr16
sub
shll
sub
movsb
push
xchg
and
outsl
lock
pop
xor
aaa
jo
imul
xor
nop
fstsw
push
pop
sub
pop
fidivl
add
mov
sbb
pop
std
sbbb
push
loop
xchg
test
bound
sahf
sub
andb
jecxz
sbb
xor
xchg
popa
and
dec
mov
push
adc
sbb
cmc
cmp
xor
add
icebp
cltd
aad
fstps
xchg
inc
push
lods
fnstenv
daa
push
mov
loop
pop
push
shll
dec
inc
cltd
add
push
xor
or
daa
xor
mov
movsb
add
push
xchg
pusha
push
xchg
add
jo
ficompl
jp
and
inc
lcall
jae
sbbl
repz
fstpt
inc
cmp
lds
stc
add
cli
aas
jecxz
cltd
and
adc
fisubs
or
cmp
jb
lahf
cmp
subl
cltd
adc
inc
xchg
imul
and
push
adc
and
pop
push
mov
stos
es
mov
es
jp
cs
add
aaa
pop
push
pop
mov
mov
lret
lods
repnz
ret
mov
in
xor
xchg
cltd
mov
cmp
push
jg
pop
and
stc
loope
pop
jne
ret
adc
sbb
push
and
ret
jbe
pop
mov
mov
daa
push
test
jnp
pop
adc
push
jl
popa
push
inc
sbb
adc
or
push
cmp
mov
repz
xchg
push
push
arpl
push
cs
mov
push
cli
sub
leave
inc
and
mov
fnstenv
inc
imul
aas
filds
cmp
arpl
stos
and
push
mov
and
sbb
aaa
mov
or
or
and
dec
jo
loope
add
adc
push
cmp
push
cli
xor
xor
xchg
popa
leave
pop
add
and
push
inc
movsb
shlb
push
lret
mov
mov
adc
jne
mull
dec
inc
bound
pop
stc
xchg
ljmp
fildl
mov
xor
dec
pop
repnz
mov
out
es
xor
push
cmp
and
xor
inc
cmp
xor
mov
rcll
cmp
loop
xchg
push
mov
xor
lcall
mov
andl
cltd
lea
sbb
xor
jb
cmp
xor
lahf
pop
ret
pop
dec
imul
es
mov
xor
es
xchg
cmp
mov
xor
cmp
sbb
aaa
movsl
ret
sub
xor
sbb
xor
xor
sub
aas
xorb
cli
and
lods
dec
xchg
xchg
repz
cwtl
mov
ss
cmpsl
inc
mov
cmp
dec
push
pop
xor
inc
and
xor
cmp
mov
xchg
dec
mov
lcall
adc
push
adc
ret
lcall
ss
push
icebp
and
xor
popa
xor
push
and
pusha
adc
xor
mov
push
inc
cltd
push
cmc
and
xor
test
push
sub
pop
and
xor
jbe
pop
push
xor
xor
test
adc
ljmp
xor
push
push
cltd
xor
xchg
js
and
pop
pop
insl
cltd
stc
jl
in
leave
push
mov
xchg
jge
push
xor
add
xor
push
jbe
push
es
xor
lea
bound
into
dec
adc
jb
and
xor
push
movsl
cltd
addl
jbe
and
jle
dec
and
xor
pop
xor
xor
outsb
push
rcrb
xor
push
xor
push
fstpl
xor
adc
ficoml
push
orb
cmp
xor
cltd
xor
push
popa
fwait
sub
fpatan
and
push
inc
cltd
or
mov
inc
cltd
and
xchg
dec
ljmp
mov
and
xor
push
xor
push
and
dec
repz
xor
and
xor
aad
mov
pop
and
aas
and
ljmp
xchg
jle
push
xor
in
int
lods
frstor
cmp
cltd
push
in
and
inc
arpl
xor
pop
push
mov
xchg
xor
jno
pop
cltd
cmp
and
inc
adc
sub
and
xchg
xor
and
ljmp
mov
dec
inc
jno
and
inc
xchg
and
aaa
fstl
stc
cltd
sbb
and
xor
stos
xor
push
loop
cli
sbb
xor
mov
loope
std
cltd
adc
and
xor
pop
adc
xorl
or
fs
pop
mov
add
xor
xor
pop
push
rcrb
xor
stc
xor
push
movsl
cltd
lea
push
xor
sbb
mov
scas
cltd
xchg
jb
pop
xor
in
rcll
jne
and
xor
out
push
xor
jb
dec
cltd
jle
and
xor
seto
jecxz
cltd
pop
jge
mov
mov
inc
xchg
mov
and
push
repnz
adc
and
xor
fnsave
push
and
xor
mov
cltd
fimuls
and
and
xchg
cltd
mov
and
xor
xchg
push
lret
mov
xor
push
dec
cltd
xor
and
xor
lods
xor
push
imul
ret
xor
adc
and
insl
pop
lea
add
xor
jns
sub
xor
and
jg
ja
xor
arpl
push
xor
xor
sbb
ljmp
es
and
jl
and
mov
inc
xor
pop
int
out
jae
mov
es
and
fs
cmp
sub
sbb
sahf
or
inc
dec
test
cmp
jae
sub
sbb
adc
push
and
rcrl
xor
aad
xlat
push
fstps
xor
in
out
jmp
out
xor
cmc
xor
push
stc
cltd
sti
std
and
xor
push
xor
push
or
xor
push
xor
push
sbb
xor
es
lcall
xor
ss
cmp
and
xor
inc
xor
push
inc
cltd
dec
dec
and
xor
push
xor
push
push
cltd
pop
pop
and
xor
bound
push
cwtd
push
outsb
pop
jo
jb
je
jbe
js
and
xor
xorb
xchg
xor
xchg
xor
push
xchg
cltd
cwtl
lcall
mov
cmpsb
cltd
test
and
xor
mov
mov
mov
mov
mov
xor
push
cltd
enter
xor
shlb
push
cltd
fcomp
and
xor
inc
jnp
xor
xorl
and
xor
insb
xor
push
stos
cltd
mov
pop
sub
dec
pop
arpl
mov
sar
and
xor
pop
xor
push
pushf
cltd
mov
add
sub
mov
xor
ss
push
js
subb
mov
mov
push
xor
mov
cltd
inc
fs
xor
lret
push
or
xor
xor
out
add
es
dec
data16
xor
add
sbb
dec
push
imul
mov
nop
cltd
lods
int3
and
xor
and
jge
popf
xor
push
in
push
and
inc
xor
lods
xor
push
add
cmp
xor
cmc
xor
push
inc
cltd
jbe
and
xor
adc
pop
push
ja
fwait
shll
or
mov
loopnew
mov
mov
out
xlat
js
sub
in
push
add
scas
icebp
or
roll
scas
outsl
xchg
inc
aaa
mov
fstpl
adc
stc
mov
mov
xchg
add
shll
fnstcw
shrb
or
jecxz
cmc
in
jno
in
iret
dec
leave
fsts
in
mov
or
icebp
add
and
lock
jmp
push
mov
sar
nop
mov
clc
sbb
in
out
or
psubw
lret
pop
sbbb
cli
das
js
js
xchg
dec
sub
loope
decb
call
pop
out
icebp
pop
lds
xor
and
loope
mov
inc
pop
mov
test
scas
outsb
lods
xor
iret
fs
fndisi(8087
int
arpl
dec
mov
cmp
lea
fnsave
push
sti
gs
mov
out
popf
mov
aam
jmp
jecxz
push
sub
lahf
sti
push
in
inc
mov
dec
jecxz
cltd
mov
xor
cli
arpl
cmp
mov
rcr
pop
add
cli
icebp
fs
mov
jg
jecxz
sahf
out
inc
pop
jmp
mov
mov
sbb
sbb
adc
cltd
mov
pop
mov
lods
arpl
sbb
mov
lret
shlb
cltd
jbe
xchg
mov
test
out
pop
add
mov
loope
es
int3
dec
push
in
jge
pop
scas
jg
mov
es
popa
inc
pop
inc
popf
loop
mov
pop
xchg
sub
outsb
cmp
sti
sub
and
sub
jecxz
mov
push
popa
mov
sub
popa
push
inc
loop
popa
inc
add
push
mov
dec
scas
mov
lods
js
cmc
popa
mov
mov
push
inc
mov
and
mov
push
mov
mov
lods
jge
xor
fbstp
mov
nop
ds
jno
scas
aad
lds
rcrl
xorb
add
lods
aam
xchg
xor
xchg
leave
loop
mov
out
mov
popf
lret
xchg
mov
mov
jge
sbb
cltd
mov
sysenter
test
scas
or
inc
mov
fwait
jp
sbb
xorb
div
mov
xchg
call
cmpsl
hlt
mov
ficompl
push
int
in
mulb
int
iret
mov
test
movsb
cltd
jo
jnp
cli
xor
pop
adc
fldt
adc
in
pop
xchg
jmp
stos
sti
xchg
adc
test
xchg
scas
jae
ja
jns
loope,pt
xor
adc
cmp
cmp
icebp
push
pop
lahf
ficoml
dec
jne
jns
xorl
or
movsb
shll
xlat
jg
mov
jnp
mov
lods
js
test
lcall
sub
scas
adc
rol
and
adc
xor
lods
pop
push
xor
mov
fcoms
int3
push
push
mov
mov
push
shrb
jecxz
in
lcall
push
loop
andl
and
out
inc
rcrb
sahf
and
mov
sbb
movsb
icebp
jae
xchg
add
scas
pop
ret
mov
fs
enter
adc
shlb
and
stos
jbe
xor
push
jmp
and
dec
xchg
faddl
sub
push
cwtl
sbbb
mov
xor
push
push
pop
sbb
imul
iret
sbb
inc
daa
mov
xchg
adc
push
sub
mov
popa
sahf
inc
pop
push
stc
dec
insb
andl
aaa
push
cmp
fbld
jmp
jno
sub
lds
test
lahf
rcrb
cmp
and
popf
xor
sbb
mov
adc
ret
push
mov
xor
and
mov
out
andb
pop
xorb
mov
mov
vcvtdq2pd
jp
nop
sbb
loop
mov
aam
pop
xchg
rclb
in
daa
mov
mov
adc
out
cmp
add
cmpsl
mov
popa
ljmp
adc
sbb
pushf
imulb
mov
mov
sub
sbb
adc
mov
out
sub
fs
xchg
cmpb
pop
lahf
xchg
add
xchg
loop
dec
xor
fsin
test
idiv
xorl
rcl
fucomi
stos
das
int3
xor
mov
push
add
cld
cs
out
aas
pop
jp
ret
out
push
push
pop
add
dec
jb
jp
pop
pop
xchg
sti
stc
xor
or
hlt
nop
mov
push
mov
mov
xchg
loope
xlat
out
mov
fimull
pop
es
push
ret
pop
cmp
adc
out
jnp
pop
cmpsb
je
mov
and
push
in
jle
imul
pop
mov
pop
inc
xor
push
cmp
icebp
jae
xor
jno
adc
sbb
arpl
mov
stc
jmp
shlb
dec
imul
loope
jno
jne
cltd
jg
adc
adc
loope
lcall
shl
jecxz
fsts
inc
loope
cmc
daa
mov
xchg
mov
add
iret
sbb
or
sbb
xchg
lcall
sbb
std
mov
pop
jno
hlt
jb
sub
dec
xor
iret
or
xchg
adc
in
pop
mov
ljmp
jecxz
jmp
loope
flds
cli
aad
out
insl
fcomi
rcrb
push
sbb
sbb
repz
push
xchg
popf
stos
mov
ja
jns
lahf
jnp
xchg
jns
cmpl
fwait
test
test
xchg
mov
test
lea
sub
and
or
push
xchg
or
xchg
adc
ja
mov
aaa
and
add
and
mov
xor
xor
xor
xor
xor
xor
xor
lea
xchg
dec
xchg
cmpsb
and
mov
out
repz
push
lea
lret
aaa
xchg
xor
adc
adc
adc
inc
adc
dec
adc
push
adc
imul
xor
addr16
imul
imul
insl
and
outsl
push
jno
and
pop
sub
jne
and
adc
aaa
jbe
arpl
les
mov
and
jg
jae
mov
cltd
pop
xor
xchg
and
adc
mov
adc
movsl
sub
lods
and
sub
enter
ficoms
adc
xor
mov
and
and
adc
les
rolb
sarb
orb
xor
push
cmc
pop
je
jl
mov
loop
imul
xchg
mov
je
sahf
lcall
fadd
mov
inc
mov
jmp
jne
cltd
fdivs
inc
push
nop
rcl
cmpsl
call
outsl
pushl
test
push
add
jns
jecxz
mov
aaa
repz
testl
gs
cmp
mov
loopne
fstl
xchg
xchg
adc
xor
jne
cwtl
dec
hlt
xlat
icebp
lock
scas
dec
inc
jecxz
shl
adc
sti
jb
and
jnp,pt
dec
inc
pop
mov
imul
jl
test
rcr
addl
gs
inc
insl
xchg
sahf
mov
xchg
jp
add
je
stos
mov
mov
pushf
xorb
xchg
dec
sub
out
lret
scas
xchg
mov
sub
and
shr
mov
dec
andb
mov
and
jns
fs
adc
mov
iret
sar
rcl
pop
scas
xchg
enter
mov
nop
test
mov
jp
xchg
call
mov
je
mov
xchg
scas
into
mov
push
cmp
popf
jle
sbb
jbe
cmp
adc
cmpsb
test
or
mov
mov
flds
push
jne
or
mov
jns
or
mov
int3
xchg
mov
xchg
rorb
or
repnz
je
push
sarb
in
push
xchg
pop
divl
xor
xchg
shll
fcoms
sbb
test
xchg
mov
push
pop
fdivr
mov
ret
jo
mov
sbb
xor
pop
fcompl
mov
jle
hlt
mov
inc
andl
lods
das
test
sub
jl
and
and
shrb
mov
xchg
loop
mov
fimuls
xchg
clc
add
cltd
sbb
xchg
xchg
add
es
lcall
push
mov
mov
add
inc
pop
jecxz
shrb
jge
sahf
rorb
sub
mov
add
jmp
insb
add
pop
push
inc
xchg
cli
nop
data16
push
push
test
shlb
push
pop
mov
out
in
fsts
adcl
les
lods
add
pop
sbbl
adc
ret
mov
movsb
mov
insb
lods
in
xchg
data16
cld
add
addr16
push
ljmp
int3
mov
mov
mov
popa
add
pop
int3
rorl
jecxz
push
fnstenv
sti
push
shl
cmp
iret
jne
ljmp
stc
push
xchg
and
fcmovnu
lea
xchg
fiadds
inc
in
xchg
cld
sub
sub
sbb
sti
jmp
dec
mov
int3
push
pop
in
rorl
lds
push
imull
pop
hlt
jnp
cmp
loop
jmp
jecxz
push
fdiv
pusha
rol
jno
incl
jge
xor
pusha
dec
rcrb
popa
arpl
inc
ljmp
jge
imul
inc
jg
fmull
popa
scas
push
adc
jmp
cmpsb
sar
test
mov
inc
shll
push
arpl
push
arpl
clc
clc
mov
clc
je
fnsave
cmc
mov
int
scas
mov
lea
popf
cmp
loope
loop
stc
loope
test
fisttpl
mov
push
jecxz
push
or
xchg
push
in
loop
push
or
xchg
sbb
xchg
jae
icebp
sbb
repnz
xchg
clc
add
xchg
push
inc
xchg
adc
loop
jne
mov
lods
mov
std
adc
jnp
jg
adcl
popf
inc
cmp
and
or
jp
and
aaa
or
pushf
mov
adc
push
mov
icebp
stc
insl
lock
rorl
pop
scas
scas
insl
push
push
mov
mov
pop
adc
sub
mov
adc
movsb
mov
in
mov
cld
shrb
imul
xor
lds
push
jl
andl
je
mov
adc
dec
xchg
xchg
nop
and
and
push
icebp
push
push
fildll
inc
push
push
cltd
scas
mov
jmp
insl
sub
pop
pop
cltd
jecxz
push
enter
and
addr16
or
mov
mov
and
sub
xchg
test
xchg
sbb
out
mov
addr16
xor
cmpsb
cmpsl
and
lcall
and
adc
popf
das
inc
fildl
mov
cmp
and
xor
xor
xor
bound
lcall
jno
push
pop
test
cmp
cmp
cs
mov
sbb
inc
jl
hlt
dec
test
fistps
adc
dec
dec
pop
aad
mov
push
sbb
push
into
push
les
dec
adc
xchg
enter
xchg
mov
adc
sar
push
in
rcr
fildll
xor
movsl
inc
mov
scas
mov
fstpl
in
sbb
sbb
les
cmpsl
imul
mov
icebp
movsl
and
dec
fwait
adc
pop
add
mov
sbb
inc
stc
push
mov
pop
xor
cwtl
outsl
xor
sbb
sti
aaa
push
inc
xor
sti
or
xchg
sub
leave
stc
sbb
sti
in
dec
xor
mov
sbb
push
sbb
adc
adc
in
and
ja
cwtl
mov
push
cmpsl
pop
mov
das
mov
mov
sub
xchg
sbb
das
les
dec
pop
xor
push
mov
aas
lock
sub
pop
push
xor
mov
lret
cwtl
push
cmp
mov
mov
xchg
lods
or
jg
push
sbb
and
jge
adc
mov
add
xor
sbb
bound
mov
sbb
xchg
out
icebp
sbb
lret
popa
xlat
arpl
jae
xorl
daa
jg
aad
add
jge
icebp
sti
call
cmc
fcmovne
cmp
sbb
sbb
or
sahf
sbb
ljmp
push
dec
mov
data16
sbb
ljmp
loope
dec
mov
out
or
jno
push
andl
iret
jecxz
sub
in
popf
sbbb
sbb
cmove
loopne
jle
xchg
test
aad
les
sbb
cmpsb
jnp
iret
add
hlt
movsl
xchg
inc
arpl
jns
subl
push
pop
sub
xlat
stc
mov
loope
and
push
jne
jno
xchg
pop
cmp
cmpsb
hlt
std
cltd
jmp
push
and
pushf
dec
shr
dec
aad
dec
mov
adc
sbb
xchg
cmpsl
mov
mov
mov
imul
std
dec
cmpsl
xor
jmp
in
add
test
mov
arpl
and
push
nop
xchg
jmp
dec
mov
mov
add
scas
jns,pn
jecxz
inc
idivl
mov
cmp
mov
cmp
negl
out
fidivrl
rcll
add
cwtl
sbb
sbb
dec
push
sbb
cwtl
xor
cs
pushf
pusha
cmp
or
dec
popa
nop
inc
xor
cmpsb
ds
and
pop
dec
lcall
icebp
push
xchg
mov
mov
adc
adc
cmp
daa
sub
jp
adc
and
sub
sbb
mov
leave
ficompl
loopne
and
popa
lret
inc
cltd
mov
icebp
adc
ficoml
sbb
movsl
insl
imulb
xor
loop
mov
shrl
iret
frndint
ficoms
pusha
sbb
cmp
insl
pop
pop
xor
cmp
mull
stos
popa
cmp
push
sub
out
mov
cmpsl
sbb
outsb
xor
jle
xorl
loop
cs
loope
and
int3
popf
cmpw
pop
push
loopne
es
jg
movsb
jno
les
dec
inc
cmp
ja
mov
xchg
pop
or
mov
sbb
mov
sbb
adc
loopne
jnp
lahf
dec
add
jnp
imull
xchg
push
pop
or
adc
movsb
mov
cmpsb
out
jge
mov
push
cmp
outsl
test
mov
pop
push
cmp
fcoms
popa
es
lcall
lds
cmp
mov
ja
jae
in
and
sub
inc
cmp
adc
daa
mov
jmp
fnstsw
cmp
ljmp
adc
and
xor
gs
rcll
mov
adc
movsb
sti
aas
loope
jbe
add
sub
inc
or
jno
xchg
push
pop
mov
xchg
dec
das
movsb
fwait
lock
sbb
xlat
push
mov
xchg
mov
dec
push
sub
push
sbb
sub
xchg
lock
inc
push
jb
ss
mov
jno
sub
cmpb
and
stc
mov
add
or
cltd
sbb
pop
mov
cwtl
mov
out
subl
push
adc
mov
sti
cli
push
dec
jno
scas
arpl
cltd
js
add
addr16
sahf
int
and
mov
and
ja
sahf
mov
or
mov
negl
sbb
pop
inc
dec
inc
iret
stos
movsl
push
xchg
pusha
xchg
xchg
and
pop
sahf
and
and
sbb
inc
mov
sbbl
ss
pop
jle
es
insl
dec
scas
push
xchg
xor
xor
adc
fsts
sbb
jnp
sbb
mov
loop
rcr
sub
jb
jp
xor
mov
jae
push
sub
out
or
sub
dec
adc
repnz
mov
sub
pop
loopne
inc
cld
mov
sbb
xchg
xor
fnstsw
sub
sbb
mov
daa
bound
mov
imul
inc
rclb
cmp
push
shll
mov
mov
and
sub
imull
adc
cmp
mov
mov
imul
cmp
lcall
adc
push
jo
jge
popa
sub
cmp
loop
mov
adc
sahf
xchg
es
nop
mov
or
add
fstl
pop
imul
jb
dec
cwtl
push
ljmp
movsl
xor
or
repnz
data16
xchg
call
pop
clc
dec
clc
cmp
dec
insl
sbb
sti
test
push
cmp
push
pop
lahf
adc
pop
int
cwtl
repnz
lahf
mov
adc
cmc
mov
adc
pop
mov
mov
loop
jl
mov
jne
sub
lcall
fistps
popf
add
loop
push
push
stc
in
xchg
insb
popa
add
cmp
push
push
gs
fcomps
scas
aam
inc
mov
xor
mov
mov
rorl
jno
xchg
add
insl
scas
es
or
lahf
or
adc
push
iret
cmp
sbb
ret
cmpsb
ss
cmp
or
jecxz
pop
add
xchg
mov
xchg
sub
xor
aaa
sbb
and
ret
shlb
push
rcrb
push
xor
mov
sbb
outsb
mov
pop
and
dec
cmp
adc
sbb
dec
adc
or
call
and
sub
shll
sbb
xor
sub
jae
mov
adc
call
or
inc
push
pop
cld
icebp
xlat
xor
push
lret
xchg
lret
lret
or
shlb
mov
loop
and
mov
mov
mov
sub
mov
mov
jecxz
xchg
xchg
roll
jg
mov
popa
cwtl
pop
popa
lahf
cmpsb
cli
pop
pop
cmp
push
inc
push
test
stc
xor
xor
or
mov
leave
rcl
xchg
lcall
fldt
fs
mov
aaa
push
loope
cmp
icebp
shll
jns
lods
adc
pop
push
daa
loop
out
and
adcl
xchg
xor
loop
jo
xor
das
mov
stos
push
cmp
gs
orl
call
ficomps
fs
leave
shl
and
xor
sub
mov
pop
push
sub
imul
or
mov
out
sbb
jnp
adc
in
int
inc
mov
xchg
pop
lcall
jne
sbb
stc
pop
jae
inc
iret
cwtl
mov
adc
cltd
cmp
loop
and
jns
mov
xor
cmp
sub
shlb
jns
push
xchg
stc
insl
and
dec
decl
stos
adc
arpl
mov
mov
es
mov
sbb
sbb
push
loop
pusha
loope
shll
leave
xchg
pop
sub
les
roll
sub
push
jb
fwait
xor
insb
pop
ljmp
test
shrl
mov
loop
mov
nop
arpl
xor
and
std
aad
jae
inc
xchg
sub
test
xor
push
xchg
adc
in
jp
nop
or
lahf
rcll
and
cmp
sti
and
inc
pushf
jecxz
lock
jnp
push
fs
cmpsl
xchg
mov
gs
testl
sub
and
popa
lea
push
pop
push
push
call
sbb
icebp
test
movsl
outsb
and
push
lock
rcrl
jae
jno
or
add
adc
xor
sbb
dec
sub
insl
lcall
sbb
and
xchg
testl
add
xchg
imul
adc
inc
adc
jnp
and
sbb
sbb
push
test
aam
xor
bound
icebp
jne
pop
sti
daa
bnd
sub
pop
pushf
rorb
sub
mov
sbb
and
das
es
and
popf
xchg
adc
ja
aad
aaa
pop
mov
or
stos
cwtl
popa
das
mov
inc
call
cmp
inc
cld
ss
jne
aas
mov
and
sbb
call
and
add
adc
or
test
sbb
mov
popf
add
jg
add
lahf
adc
shr
or
adc
mov
leave
aad
xchg
mov
filds
cwtl
sub
jge
pop
and
dec
inc
xor
adc
push
scas
sub
xchg
popa
out
adcb
sub
xchg
call
cwtl
sub
sbb
lahf
xchg
test
add
sub
mov
rcr
dec
and
xchg
xor
add
adc
icebp
fildl
test
sub
fwait
adc
fsub
pop
mov
sbb
movsl
mov
dec
or
pop
or
sti
movsb
lret
mov
sbb
loop
lret
popa
rorl
dec
push
jo
cmp
xor
js
popf
mov
sub
mov
ds
push
pop
cltd
add
or
pop
inc
stc
sti
pusha
int3
je
mov
and
and
out
les
mov
sbb
cmc
push
loop
push
jno
mov
gs
jge
sub
es
dec
pop
lret
mov
inc
flds
cmp
sbb
movsl
sti
xchg
sub
mov
add
repz
mov
shlb
adcl
adc
inc
sbb
out
xor
adc
pop
sbb
or
cmp
mov
sub
xchg
es
xchg
xor
and
popf
sbb
inc
and
popf
lods
push
and
xor
xchg
pop
mov
fnsave
sbb
pop
jle
lds
sbb
sub
mov
fs
mov
mov
frstor
leave
sti
adc
xor
imul
pop
sti
xchg
jp
in
sub
add
push
sub
ficompl
pop
icebp
mov
mov
inc
inc
das
cmp
call
xchg
cmp
cmp
cmpsl
sti
clc
adc
bound
sbb
das
es
mov
insl
arpl
inc
push
rorl
xchg
ficoms
imul
mov
outsb
sbb
arpl
push
bound
das
adc
xor
pop
push
or
cwtl
movsl
aas
push
inc
jle
or
xor
push
mov
xchg
xchg
xchg
fs
cmp
sub
fstpl
call
sahf
les
add
dec
push
adc
imulb
mov
xchg
iret
push
dec
and
ljmp
add
xchg
mulb
shll
lcall
mov
shrb
or
xchg
aaa
insb
sbb
sbb
gs
xor
mov
lods
stos
outsb
cmp
sub
mov
sub
es
and
mov
xlat
cmp
jbe
stc
mov
dec
mov
add
pop
sbb
addr16
mov
mov
adc
call
imul
pop
sti
scas
sbb
mov
out
mov
xor
adc
push
stc
cli
loop
sub
das
xchg
cmpsb
sub
mov
sub
in
mov
jae
mov
inc
sbb
cltd
push
stos
scas
dec
add
sub
icebp
sub
sub
cmp
adc
std
xchg
inc
inc
mov
icebp
jno
gs
xchg
mov
fwait
xchg
dec
xor
xor
scas
or
gs
push
loope
insb
mov
imul
ja
dec
dec
cmp
push
ficomps
or
movsb
adcb
mov
loopne
sbb
rcll
inc
xchg
ficoms
popa
xchg
inc
push
or
push
or
cmp
push
rcrb
hlt
xor
leave
mov
es
aaa
inc
out
stos
mov
rorl
lds
mov
aaa
xor
xchg
jl
adc
std
arpl
inc
jnp
sbb
fcoml
sbb
fwait
in
fdivr
loope
mov
cmp
xlat
jge
or
or
outsl
xor
sub
mov
hlt
jle
cltd
mov
mov
push
stc
adc
lds
imul
cmp
add
add
shlb
cmp
sub
pop
arpl
mov
cmp
mov
cmpl
test
mov
popa
adc
jnp
das
mov
and
popf
daa
stos
xlat
rolb
adc
jle
xor
shll
cmp
out
arpl
mov
push
into
stos
xchg
sbb
fidivrl
adc
lea
addr16
rcrl
or
mov
cmp
sbb
push
and
call
push
adc
sub
cmp
mov
rcll
pop
shll
push
sahf
das
jo
das
cmp
psrld
ljmp
mov
push
sbb
int
mov
fcmovnu
repnz
push
imul
in
and
xlat
mov
dec
test
in
mov
sub
pop
ss
push
dec
addr16
cltd
push
push
sbb
push
xchg
add
fstpl
adc
nop
aaa
jp
sarl
call
cmp
aaa
xor
out
mov
sarb
mov
mov
emms
fldl
and
pop
out
jl
stc
out
jns
cmc
pop
jne
inc
popa
imul
inc
jle
stos
dec
sbb
pop
test
mov
sbb
push
test
dec
mov
aas
sti
cmp
mov
into
sub
jmp
sub
pop
sub
sub
adc
popa
stc
sbb
sub
mov
shrb
call
lret
pusha
or
mov
dec
adc
xchg
std
mov
sti
hlt
sub
xchg
mov
sbb
dec
ja
lahf
xchg
sbb
xor
loop
ja
or
inc
jmp
das
xor
sub
cld
fildll
and
or
pop
inc
or
push
es
mov
fldenv
aas
lahf
xlat
shr
call
stos
fwait
loope
into
in
push
sarl
xchg
and
add
xor
lods
mov
iret
cwtl
fnsave
and
sub
shlb
rclb
mov
ljmp
xor
xchg
cwtl
mov
daa
push
or
inc
inc
andl
mov
push
xchg
ret
sahf
mov
and
adc
sti
pop
ja
in
pop
imul
push
mov
and
orl
xchg
jno
mov
movsl
xlat
mov
lock
xor
sbb
ret
xchg
and
pop
sbb
push
out
xor
nop
shl
jmp
loop
push
cmp
push
call
out
xchg
rorl
adc
std
mov
pushf
mov
push
xchg
aaa
and
out
int3
jo
cmp
push
xchg
dec
ficomps
movsw
dec
inc
cmp
adc
imul
in
add
cmp
mov
adc
xchg
popa
dec
std
cld
xchg
mov
mov
cwtl
nop
xchg
aad
cmc
xchg
jbe
aaa
mov
mov
pop
pop
cmp
scas
inc
push
jle
add
nop
rclb
and
pop
mov
mov
xor
repz
and
mov
cmc
hlt
xchg
add
xor
and
mov
sub
push
mov
push
mov
sahf
cli
pop
das
loop
mov
in
push
jge
pop
xor
stc
add
mov
insl
insl
add
sti
mov
and
cmp
cmp
inc
or
inc
das
push
bound
inc
and
leave
stc
testl
mov
orb
sbb
negb
cs
mov
push
mov
pop
mov
fcomps
xor
sbb
sbb
sbb
sahf
aam
inc
aam
jb
sbb
fsts
jecxz
sbb
adc
imul
sbb
sub
sbb
sbb
xchg
decl
mov
xchg
adcb
sub
pop
dec
mov
inc
xchg
pushf
es
push
sbbl
and
inc
out
xor
mov
mov
icebp
rorl
mov
pop
and
mov
sub
scas
jo
xchg
test
leave
sub
scas
repnz
and
sbb
cmp
pop
fucomi
xor
fbld
sub
jge
stc
sub
fcoms
push
pop
dec
push
xchg
aad
push
adc
mov
xchg
or
and
mov
shlb
shl
shll
and
scas
dec
mov
movsl
call
mov
pop
mov
sti
xor
pop
int3
ret
or
fdivrs
stos
cld
icebp
xchg
je
push
cli
mov
pop
sahf
xchg
std
outsb
adc
das
push
add
lahf
add
fstpl
or
fiadds
adc
cmc
arpl
pop
or
imul
dec
sbb
jb
sti
sub
rolb
mov
sub
sub
mov
stos
and
inc
daa
sub
jb
push
mov
add
stc
test
sub
sahf
adc
imul
pop
jp
push
clc
and
cmp
pop
sub
sub
dec
push
and
cltd
sub
and
mov
cli
push
and
xor
dec
fisubl
xor
loop
xor
ljmp
cli
in
add
push
or
pop
repnz
add
dec
arpl
inc
mov
leave
xor
int
bound
dec
push
sub
pop
push
imul
adc
push
fimull
and
mov
xchg
add
mov
repnz
popf
add
and
imul
inc
frstor
aaa
jno
movsb
lret
xchg
mov
mov
inc
push
lods
pop
jne
sbb
sub
xor
mov
push
out
push
lock
daa
popf
lds
leave
mov
inc
das
sub
cmp
push
jp
mov
test
mov
sub
sub
mov
push
shlb
loop
add
insl
lahf
inc
push
andb
dec
and
xor
sbb
loop
icebp
dec
je
add
sti
adc
das
pop
lcall
ds
xchg
xor
cmpb
sbb
cwtl
push
pop
inc
sub
adc
add
cmp
or
mov
adc
pop
xchg
jecxz
pop
sbb
ja
inc
cmp
test
and
mulb
inc
lds
sbb
das
or
dec
push
sbb
movsb
sbb
inc
jae
sub
cltd
inc
push
test
mov
sub
xchg
xor
fidivs
iret
adc
std
pop
int
and
and
mov
push
negl
nop
push
mov
adc
sbb
rclb
cltd
sub
and
addr16
ljmp
rorb
lret
sub
jge
lcall
sbb
or
and
movq
pop
lret
add
dec
push
or
loope
add
inc
iret
rcrl
mov
xchg
inc
ljmp
mov
and
add
pusha
dec
std
sbb
cld
js
addl
test
int
es
nop
in
fiaddl
push
xchg
mov
loope
mov
cltd
cmp
xchg
xchg
mov
sub
das
repnz
sbb
or
mov
jge
and
mov
gs
sub
scas
jge
dec
clc
js
sub
es
push
and
xchg
inc
negl
or
cmp
sub
mov
call
sub
jbe
inc
out
pop
pop
aaa
and
pop
aaa
ret
and
pop
xorb
fwait
and
push
leave
aaa
xchg
rcl
sbb
movsb
imul
xchg
rcrb
sub
xchg
aam
das
pop
mov
ss
movsl
out
imul
das
push
test
popf
sbb
sub
xchg
push
pop
xchg
cmp
mov
xor
sbb
sbb
and
or
sub
sub
aaa
cmp
or
jp
cld
sub
ja
xor
stos
mov
test
mov
xor
pop
or
sbb
adc
sbb
xchg
xchg
and
pop
inc
cmp
insb
scas
in
addr16
fistpll
mov
push
mov
aas
jno
repnz
out
loope
or
jp
daa
mov
mov
out
fsubs
in
loop
aad
add
sub
xchg
jle
das
testl
push
shrl
xor
cwtl
cmp
dec
ja
loopne
xor
add
or
xchg
pop
cmp
sbb
out
fidivrs
ret
cmpsl
testl
or
je
mov
pop
cmp
out
push
sub
ljmp
sbb
xchg
cmp
xchg
xor
adc
push
orl
dec
pop
andb
pop
push
mov
iret
sub
mov
in
push
aaa
icebp
push
pop
mov
pop
das
loop
mov
aas
stos
xor
xchg
add
xchg
andl
outsl
stc
in
pop
push
adc
or
cltd
stos
cwtl
ljmp
sub
xlat
in
pop
test
stc
jmp
sbb
sub
and
pop
or
push
jbe
aaa
int
add
dec
sub
mov
pop
shll
xor
rorl
cli
ljmp
and
das
sti
jecxz
and
jae
inc
xor
xchg
ds
push
xlat
fstl
in
out
inc
push
imul
push
push
daa
jecxz
push
out
pop
add
ss
out
loop
das
sbb
cmp
hlt
push
sub
add
adc
daa
or
xchg
pushf
xlat
inc
nop
das
or
sahf
sub
xchg
daa
aas
xor
or
jo
outsl
imul
mov
or
outsb
mov
and
out
fmull
and
js
push
dec
sti
repnz
or
lods
sub
push
incb
xchg
scas
sub
pop
ds
and
pop
push
sub
data16
cmp
shll
test
pop
add
test
cmp
xchg
xchg
stc
and
inc
dec
mov
inc
bound
xchg
ss
jb
popf
jae
hlt
andl
loope
popf
or
sub
and
cli
jae
cmp
sti
cmp
cmpsb
or
lods
pop
sub
fistpl
ret
xlat
sbb
mov
sahf
popf
xchg
cmpsl
mov
sarb
xchg
scas
bndldx
mov
xchg
xor
fsts
leave
lds
pop
jno
jecxz
fstl
push
mov
xchg
push
xchg
loopne
rolb
sbb
xor
sbb
sub
inc
mov
in
push
sti
imul
das
xchg
decl
jb
loop
pop
ljmp
das
mov
xchg
je
lock
mov
and
imul
mov
add
or
sub
movsl
sub
push
mov
popf
xchg
mov
xchg
mov
and
and
sbb
fildll
xor
adc
jns
or
sub
jae
mov
inc
jnp
inc
loope
push
push
and
gs
mov
loope
xor
pop
adc
out
sbb
mov
cmp
dec
sbb
sbb
dec
sub
cmp
lods
lods
dec
xchg
stos
push
inc
pop
or
mov
push
mov
add
jnp
mov
sti
adc
call
and
lahf
mov
push
arpl
and
lret
adc
arpl
sub
mov
inc
pop
lret
daa
int
cwtl
frstor
inc
sbb
out
xchg
pop
mov
loope
mov
sbb
sahf
push
into
cltd
imul
sahf
stc
call
hlt
xorl
insl
xor
mov
or
mov
movsl
pop
mov
xor
lahf
cmp
es
movups
add
add
mov
mov
pop
xor
aam
xor
push
cmp
mov
scas
movsl
sarb
inc
add
or
out
fadds
flds
pop
cs
and
aaa
and
dec
or
loop
dec
mov
and
popf
lock
mov
loope
xlat
bound
lea
mov
and
pop
and
push
jne
cmp
xor
ret
mov
add
lret
sahf
into
ja
dec
jnp
sub
mov
push
dec
testl
int
dec
insl
mov
jne
mov
push
jp
pop
outsl
push
cld
pop
mov
xchg
mov
dec
push
icebp
stos
pop
sub
fisubl
rcrb
jecxz
out
loope
sbb
leave
push
xchg
push
sub
lcall
mov
hlt
jns
iret
xor
stc
mov
mov
sti
mov
loope
shl
inc
stos
divb
cmp
rcrb
adc
fwait
sub
ljmp
and
xchg
mov
dec
ja
push
scas
and
mov
inc
cli
frstor
push
cld
out
in
mov
cmp
mov
xor
js
sub
stc
jp
test
jo
es
dec
xor
jae
sbb
call
mov
gs
mov
mov
and
mov
xor
pop
leave
aas
mov
int
rclb
in
xchg
sub
mov
inc
int
sbb
addr16
sbb
xchg
cmc
scas
cmpl
cmp
jb
lea
sub
ficoml
int
mov
lret
aad
call
ret
adc
dec
xchg
pop
jp
insl
ss
sub
dec
cmp
jns
inc
push
inc
jns
mov
and
push
cmp
cmp
lret
inc
jp
jecxz,pn
jne
push
fistpll
inc
dec
xchg
movd
xlat
fstpl
xor
or
popf
sbb
fdivs
pop
movsl
or
sbb
daa
es
sbb
pop
sbb
adc
mov
mov
mov
xchg
and
or
call
shlb
rorl
loope
mov
daa
push
and
rorl
xor
mov
push
pop
cltd
dec
cmp
cmp
mov
hlt
icebp
push
and
fwait
xor
push
je
lea
mov
je
mov
repnz
lea
stos
daa
popa
and
push
repnz
push
leave
fstpl
push
cltd
jp
and
xor
loopne
fcoml
push
rorb
inc
and
cmp
addl
shll
stos
repnz
lret
arpl
or
imul
xchg
aaa
stc
das
cmp
cmp
sbb
cwtl
adc
sub
psraw
jnp
cmpsl
xchg
rcl
xchg
movsb
prefetch
insl
ror
lea
and
sub
js
nop
loop
mov
or
loope
mov
clc
jae
xchg
out
or
cwtl
fnstenv
sbb
or
cld
adc
mov
jecxz
xchg
pop
mov
dec
mov
xor
sbb
sbb
ret
xlat
xchg
and
and
sbb
out
ret
adc
mov
jno
mov
imul
lret
sti
mov
fdivl
fwait
push
lea
add
push
cltd
notl
or
mov
mov
jbe
sbb
out
outsl
xlat
mov
sbb
xchg
stc
ja
mov
mov
add
mov
out
jb
mov
sarl
out
sub
cmp
inc
std
push
jns
call
mov
cmp
outsl
in
and
xchg
lret
mov
mov
xchg
dec
fbstp
add
pop
addr16
lods
push
outsl
mov
aaa
xor
mov
cmp
and
sbb
inc
sub
ljmp
std
aam
xor
pop
mov
sbb
xchg
mov
int3
push
jae
mov
mov
xor
push
sbb
mov
xchg
lcall
mov
stos
mov
pop
xor
fidivl
push
and
andl
push
xchg
xor
shll
push
pop
insl
mov
push
cltd
push
ss
xor
sahf
xor
push
loop
cvtps2pi
xor
leave
sbb
test
push
mov
or
in
sub
and
scas
mov
xor
mov
pop
cltd
scas
stos
xchg
xchg
pop
xor
jne
sahf
xor
rcl
jmp
jecxz
dec
out
add
mov
icebp
sbbl
cmp
shl
icebp
rcl
inc
mov
jmp
pop
andl
mov
push
push
stc
flds
and
jne
cmc
sar
mov
jnp
mov
push
inc
mov
popa
cmpsb
jns
push
out
mov
jbe
pop
or
jae
mov
lock
fincstp
into
push
or
shl
arpl
sbb
std
mov
pop
and
add
hlt
jmp
mov
out
fsubr
inc
xchg
jnp
test
iret
sbb
cmc
jmp
dec
mov
cltd
stc
jo
sub
xorl
mov
sbb
testl
push
sarl
rcll
cmp
in
fistps
add
sub
xchg
adc
test
imul
mov
push
pop
rolb
popa
and
fwait
das
sub
mov
mov
insl
icebp
adc
aam
stos
jmp
sub
shll
xchg
pop
dec
std
mov
sub
xchg
xor
js
int
inc
adcl
inc
ret
push
fmuls
sub
and
adc
jg
pop
xchg
mov
mov
jno
rclb
push
mov
adc
in
test
add
adc
mov
and
iret
pusha
sbb
lcall
jo
cmp
push
mov
jo
add
pop
jge
lock
icebp
cmpsl
jns
imul
push
pop
cmpsl
fwait
mov
jns
es
arpl
inc
mov
popf
mov
icebp
mov
xchg
xchg
aas
rcrl
scas
mov
xchg
stos
cltd
cmp
pop
pop
add
test
jbe
add
adc
dec
divl
jnp
stc
lcall
stos
mov
pop
es
cmpsb
pop
cs
repz
sbb
scas
ljmp
jne
lret
cmpsl
adc
add
sbb
pop
inc
std
fwait
add
or
divl
popf
cmp
cmpsl
retw
push
jns
and
and
mov
stos
push
stos
and
xor
fwait
cmp
xor
sbb
mov
adc
push
lds
scas
mov
jbe
xchg
out
fwait
loopne
pop
lret
xor
arpl
xchg
xor
adc
cmp
mov
sub
add
xchg
sbb
mov
xor
dec
adc
inc
mov
pop
stos
adcl
dec
leave
daa
inc
rorb
mov
adc
in
rcrl
pusha
adc
add
push
inc
fldenvs
nop
sub
insl
test
inc
cmp
fwait
stos
push
sub
stos
push
push
lea
pop
lret
add
adc
cmp
cmp
scas
repnz
push
fldt
sbb
loop
fwait
mov
outsl
adc
cli
jmp
flds
ret
lret
adc
push
push
push
and
mov
out
ja
jno
push
xor
xor
fnstcw
push
cmp
stos
ret
mulb
or
sub
les
imul
xor
xchg
in
rclb
rcrb
rcrb
inc
inc
rcrb
inc
sbb
inc
pop
out
in
xchg
loope
notl
sbb
sub
dec
lods
push
mov
jo
jecxz
int
sub
lods
push
xchg
movsl
sub
pop
pop
sbb
fucomi
sub
mov
ret
add
int
mov
arpl
popf
pop
adc
adc
leave
pop
mov
mov
clc
pop
adc
out
jmp
insl
fiaddl
dec
push
leave
or
ds
mov
jecxz
mov
dec
adc
and
push
adc
and
push
cltd
and
xchg
mov
xchg
pop
push
xor
cltd
stc
xor
pop
pop
mov
xor
lcall
mov
xor
or
xor
or
or
movb
popa
add
xor
rclb
sbb
dec
pop
sbb
ds
cltd
sub
cs
mov
push
xor
mov
and
loop
loope
ret
mov
xchg
rcll
add
push
inc
inc
pop
rcrb
push
push
pop
adc
xor
ficoml
loop
adc
xor
xchg
dec
jl
jno
xchg
dec
jle
mov
cmc
fiaddl
std
faddl
loop
rcll
mov
mov
cs
int
xchg
iret
in
jne
adc
adc
mov
inc
aam
pop
lds
push
sbb
inc
and
adc
inc
push
adc
mov
jno
and
adc
sub
shl
xor
pop
mov
popa
jns
mov
dec
sub
cs
popf
inc
mov
adc
cmp
es
sbb
adc
xchg
cmc
xchg
jecxz
in
xchg
fistpll
xor
sbb
jl
xor
push
mov
jns
andl
dec
dec
inc
jno
mov
shll
push
xchg
pop
inc
outsb
dec
adc
sarl
add
add
sbb
dec
jnp
inc
outsl
sbb
sub
push
fwait
cmc
xor
xlat
cltd
xchg
adc
sbb
cltd
and
icebp
jmp
xor
cmp
sbb
mov
ret
jne
lcall
adc
jbe
dec
mov
test
push
ficoms
mov
es
movb
and
xchg
scas
sbb
sub
imul
std
inc
cmpsl
stc
std
push
push
cmpsb
mov
mov
fldenv
jmp
mov
mov
and
addr16
insl
lods
cmp
sbb
push
shll
xchg
push
sti
pop
mov
jnp
mov
pop
lods
out
arpl
xlat
xor
pop
fld
sbb
push
pop
arpl
and
mov
icebp
les
dec
or
fstpt
xor
jmp
mov
test
in
out
add
hlt
mov
jno
dec
cmpsl
dec
mov
ret
dec
ss
push
dec
fs
jb
xchg
push
in
push
or
sbb
pop
dec
lahf
arpl
shll
icebp
pusha
jmp
xchg
loopne
loopne
loopne
aam
jne
movsb
mov
in
les
repnz
ja
imul
std
xor
mov
cmovns
jae
out
dec
push
dec
pop
dec
sahf
push
scas
dec
mov
and
jnp
pop
popf
lahf
lret
and
pusha
pop
mov
cli
loopne
loopne
aam
jge
movsb
push
mov
les
hlt
xlat
add
add
add
mov
stos
add
add
add
add
jg
xor
cltd
aam
in
hlt
cmp
pusha
add
xor
mov
or
push
out
icebp
push
bound
jp
mov
test
mov
ret
push
add
dec
cmp
dec
jge
mov
dec
push
push
inc
push
dec
push
jo
mov
push
loopne
cli
and
test
pop
and
mov
mov
imul
hlt
rolb
mov
das
stc
xchg
std
popf
add
push
bound
orb
push
add
mov
mov
add
push
adc
push
push
sub
loopne
out
dec
jge
or
int
lcall
lahf
jp
scas
and
pusha
out
adc
pop
push
mov
sub
loop
jae
sub
dec
std
push
add
jne
ret
push
sbb
cmp
loopne
cld
icebp
pop
jne
mov
dec
push
push
mov
push
fcoml
and
ja
pop
push
lahf
pop
fildll
jg
mov
leave
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
aam
jns
movsb
push
mov
les
aam
in
hlt
testb
add
or
sbb
inc
jg
movsb
xchg
mov
rcl
in
std
hlt
bound
xchg
movsb
add
add
add
xor
add
movsl
or
push
fisttpl
jmp
sti
push
adc
outsb
push
xchg
lcall
push
in
imul
add
sub
lods
mov
das
jecxz
add
inc
mov
mov
mov
mov
mov
cwtl
popa
xchg
js
cwtl
sarl
clc
pushf
clc
stos
clc
mov
mov
clc
sar
loop
jne
sbb
cltd
push
data16
push
rclb
push
rorb
fimull
mov
lret
dec
dec
jmp
add
cmpsb
mov
mov
mov
mov
cwtl
insl
lea
xchg
js
cwtl
mov
ret
fcomp
clc
jmp
push
loope
mov
push
mov
in
jb
pop
jae
lods
dec
push
add
pop
mov
jmp
push
inc
push
push
push
push
jb
xchg
push
sahf
xor
jns
outsl
int3
dec
cwtl
dec
movsb
dec
rclb
dec
ljmp
dec
cs
aas
aaa
push
scas
cmpsw
scas
mov
fnstenv
or
cmp
dec
scas
pop
xor
jbe
test
ds
addl
data16
in
jns
mov
or
cmpl
xchg
xchg
mov
sub
mov
das
or
dec
push
imul
das
mov
jecxz
and
shlb
sarl
fists
jecxz
add
or
pop
add
add
add
add
add
add
and
shl
cli
shll
cmp
repnz
add
add
push
pop
sbb
and
sub
xor
cmp
inc
or
push
or
or
or
or
or
or
psllw
xchg
push
inc
mov
push
jb
fnsave
mov
sarl
das
pop
jns
movsb
jno
mov
fst
push
andl
pop
dec
push
jp
mov
dec
stos
push
mov
push
ljmp
and
sbb
sbb
scas
mov
das
adc
mov
adc
jle
nop
je
movsb
mov
ljmp
pop
bound
xchg
les
xchg
xchg
stos
xchg
mov
sbb
outsb
imul
xchg
lret
or
push
shlb
test
scas
and
add
lcall
popf
hlt
js
mov
movsl
push
jns
dec
pop
shlb
dec
xchg
jno
outsb
aaa
pop
jo
scas
shl
pop
and
cmp
repz
dec
inc
adc
pop
mov
pop
cmpsb
mov
jne
mov
mov
cmp
bound
dec
mov
cli
arpl
movsb
xor
cmpsl
outsb
xorl
mov
inc
leave
mov
lds
cmp
fistpl
mov
arpl
mov
std
sbb
and
mov
mov
sbb
mov
cld
lret
or
add
jp
xchg
setne
adc
add
aaa
jo
mov
shlb
call
mov
push
insl
dec
sbb
sub
aaa
orl
aad
jecxz
mov
lret
xchg
scas
scas
stos
jns
cmc
inc
dec
in
push
cld
aam
or
add
add
or
push
dec
imul
sbb
sub
in
mov
pop
xchg
add
xor
pop
add
push
inc
pop
and
mov
dec
add
push
sub
adc
pop
loop
test
stc
sbb
jne
mov
mov
fs
divl
mov
stc
cli
shll
jg
pop
call
mov
dec
in
or
mov
cli
mov
or
jecxz
sub
mov
mov
es
scas
adc
xor
push
adc
cmc
flds
inc
pop
lret
xor
jne
and
in
mov
inc
dec
mov
adc
stos
adc
xor
add
mov
mov
sti
push
xor
sbb
popa
cmp
adc
mov
outsl
mov
sub
je
inc
mov
adc
movsl
push
adc
das
sub
adc
gs
es
sbb
and
pop
push
cmpsb
repnz
sub
loope
pop
aas
mov
mov
inc
sub
or
jbe
sub
pop
or
adcl
sbb
and
xchg
fwait
das
cmc
jae
push
sti
sbb
outsl
mov
scas
cmp
imul
adc
add
cltd
lret
mov
pop
insl
or
mov
mov
fisttps
or
and
dec
inc
xchg
xchg
add
fstps
adc
xor
dec
fidivrs
cltd
push
inc
inc
inc
mov
sub
sub
subl
xor
pop
das
xor
sub
cmpsl
in
inc
add
mov
cmpsb
push
or
cli
inc
jae
sbb
push
loop
arpl
js
jmp
je
mov
push
mov
insb
pop
pop
xor
sub
shlb
push
mov
xchg
cmp
ss
imul
and
loop
inc
ds
icebp
gs
sub
call
xor
lods
ja
and
sub
xchg
mov
sub
addr16
jmp
mov
ja
inc
sahf
cmp
sbb
jae
jg
dec
clc
mov
pop
xchg
enter
fistpl
jb
in
dec
in
pop
add
inc
imul
stos
ljmp
cmp
shll
add
xor
in
and
dec
loop
dec
scas
out
pop
mov
sarl
fildll
mov
mov
aaa
cltd
and
lea
push
ds
add
rclb
stos
inc
xchg
or
movsb
push
xchg
sbb
xor
sub
push
movsl
cmp
mov
cli
adc
dec
es
cmp
xor
arpl
mov
jle
cmpsl
in
mov
push
xor
lret
popa
adc
xchg
in
jb
sub
stos
add
xchg
mov
enter
lcall
mov
adc
sbbl
adc
fisubl
or
ret
call
push
lret
xchg
adc
push
or
xchg
sbb
xchg
cmp
test
ja
pop
fdivrs
out
push
sub
mov
inc
cmp
ja
or
adc
xor
in
cmp
das
sbb
jne
pop
out
movsb
mov
out
sbb
push
call
sub
push
stos
sarb
call
dec
mov
adc
shlb
fwait
ret
sti
push
in
ret
imul
lret
cmp
mov
sub
push
das
push
lods
bound
fldcw
xor
or
aaa
push
add
ss
out
cmp
scas
pushf
xor
lcall
push
pop
es
jae
fwait
loop
jg
imul
lds
arpl
xor
aad
sti
daa
movsl
push
fnsave
ljmp
fsts
adc
fwait
dec
arpl
mov
sti
sti
js
loope
sub
add
and
pop
xchg
cltd
xchg
lods
cli
fnstenv
sbb
sub
imul
xor
xchg
xor
popa
xchg
andb
data16
rcll
dec
cmpsl
xor
sub
dec
add
mov
popa
cltd
sbb
mov
mov
pop
loop
outsb
out
xor
repnz
fwait
xor
add
and
and
sbb
mov
stc
sub
mov
or
sub
stos
fistpl
fwait
mov
or
jns
adc
lods
inc
in
dec
mov
arpl
inc
or
xor
cmp
aam
mull
xchg
vpacksswb
call
or
movsb
pop
fisubrl
rcl
stc
sub
dec
or
xor
or
mov
popf
loope
loop
mov
into
xchg
std
das
nop
xor
cmpsl
mov
adc
jnp
jne
loop
mov
fidivrs
addr16
add
movsb
mov
call
negl
clc
pop
xor
call
xchg
and
mov
adc
and
lahf
int
cmc
push
or
ljmp
jo
insb
mov
sti
add
mov
sub
mov
lods
mov
fidivl
jno
sub
jb
inc
push
dec
mov
sti
popa
xor
inc
sbb
shlb
mov
jae
ljmp
add
sbb
jnp
imull
jl
sub
popa
xor
popf
icebp
je
frstor
add
xor
repnz
jp
dec
mov
inc
adc
jae
pop
add
jae
cltd
mov
pop
test
inc
jbe
and
inc
stc
push
ret
rclb
add
jecxz
fsubl
ss
repnz
push
push
xor
push
mov
add
mov
lea
scas
jg
in
fsubrp
ss
fcompl
or
pop
fwait
pop
ficoms
push
scas
sbb
or
ret
xor
inc
push
jns
sarb
outsl
adc
xchg
push
cltd
loope
mov
and
adc
cmp
push
stc
cmp
imul
inc
adc
xchg
call
arpl
subl
lcall
sub
jecxz
mov
scas
pop
adc
push
loop
popf
and
rclb
pop
fisubl
es
mov
aas
push
dec
in
repz
cmp
add
es
pop
mov
jne
inc
cmp
sahf
aad
push
scas
icebp
push
jb
xchg
and
jb
pop
xor
add
push
cmp
pop
adc
hlt
cmp
inc
push
cmp
loop
negl
cmp
cmp
call
xchg
sub
xor
dec
xor
push
pop
subb
dec
jo
push
test
je
insl
out
cmp
cmpsl
push
call
jl
mov
inc
push
mov
xchg
push
add
sbb
mov
dec
pop
loop
pop
pop
add
mov
and
mov
and
dec
cmp
sub
push
adc
lods
pop
shll
icebp
mov
cmp
out
fisubrl
xchg
or
arpl
sti
out
ds
in
jbe
jns
ret
je
sbb
xchg
les
pushl
ret
in
inc
mov
std
adc
imul
lds
add
jp
repnz
and
loop
xchg
push
jp
test
xor
or
scas
push
sub
and
and
cmp
mov
pop
mov
adc
push
loopne
mov
mov
inc
adc
inc
loope
pushf
xor
sbb
ret
inc
sub
xor
jbe
xchg
jb
dec
xlat
int3
jg
inc
mov
cmp
mov
jp
dec
pop
xchg
sub
push
dec
cmp
sub
jge
out
gs
popa
xchg
fisubl
cmp
aas
lea
das
insb
mov
sbb
dec
test
out
xor
cmp
push
and
loop
out
cmpl
sub
repz
loop
jnp
cmp
fwait
imul
ja
movl
or
into
sbb
sbb
xor
scas
imul
sub
in
js
xor
mov
mov
andl
subb
call
dec
jmp
pop
and
enter
add
xchg
push
aad
es
mov
dec
mov
dec
daa
les
pop
xchg
jecxz
mov
adc
fisttpll
in
push
push
sub
xchg
xor
mov
adc
gs
or
mov
dec
repnz
and
shlb
lret
add
unpcklps
jae
daa
pop
adc
scas
push
shrb
je
cmp
xor
mov
std
imull
dec
pop
outsl
ret
adcl
jae
xchg
cmp
or
imul
insl
xor
inc
pop
push
push
pop
movsb
sti
xlat
lret
add
jmp
mov
sub
inc
cmp
pop
into
fbstp
faddl
loop
and
jo
sbb
imul
sub
out
cmp
dec
and
or
iret
pop
dec
xor
lea
dec
ret
and
sbb
pop
sbb
ret
cmp
div
pop
insl
sti
dec
or
cmp
and
sbb
test
pop
xchg
repnz
pop
jno
aam
movsb
sti
cmp
or
sbb
cmpsb
jp
and
xor
fs
enter
adc
mov
fdivl
sub
push
sub
mov
movhlps
ds
out
xor
pop
sbb
addr16
je
lret
xchg
mov
dec
adc
xchg
jecxz
mov
loop
inc
popa
mov
das
bound
stos
inc
pushf
hlt
loope
sub
in
mov
xor
imul
jmp
call
push
pushf
loope
mov
out
pop
int
jns
xchg
cmp
vpunpckhqdq
push
pop
sub
test
addl
adc
leave
mov
mov
pop
sahf
insb
popf
or
mov
sub
cltd
andl
mov
loope
push
ds
jns
cld
xchg
lods
inc
pop
add
in
shrb
ss
ret
push
or
mov
mov
and
adc
add
outsb
cmp
je
in
xchg
inc
gs
cmp
dec
bound
lods
fwait
hlt
mov
and
cmpsl
and
jg
dec
jae
jge
clc
addr16
andb
adc
outsb
sbb
sub
stos
ret
pop
loope
arpl
jbe
jns
xchg
das
sbb
push
inc
and
adc
imul
out
inc
loop
fldenv
jne
jae
mov
in
sbb
xor
aaa
mov
gs
cmp
clc
es
in
xor
xchg
sbb
rorb
adc
xchg
sbb
das
and
cmp
dec
jo
cmp
imull
push
jbe
mov
fldenv
pop
ljmp
test
movsl
xor
in
sub
xchg
dec
sub
or
mov
jae
inc
inc
sbb
push
sbb
cltd
cmpl
or
push
aas
mov
jmp
loope
mov
xor
mov
aad
pop
shll
sub
add
mov
jns
mov
popl
fidivrl
cltd
repnz
lods
xchg
fistl
sub
push
out
jecxz
fldenv
mov
jnp
pop
mov
ficoml
sub
sbb
jne
nop
movsl
sub
and
xchg
lahf
push
pop
arpl
and
shlb
sub
ficoml
lret
mov
leave
insb
adc
push
xor
xor
jns
mov
shrl
mov
fsub
mov
lods
and
or
push
xor
mov
jne
stos
cs
icebp
jg
jno
es
mov
lcall
gs
sbb
pushf
xchg
inc
mov
test
add
jno
pop
xchg
imull
stc
arpl
sbb
and
cmp
pop
mov
loope
inc
mov
bound
add
push
inc
mov
int3
push
loop
bound
mov
sbb
mov
mov
xor
jmp
inc
and
lahf
adc
cmp
mov
popf
push
call
xchg
xchg
inc
js
mov
out
or
dec
xor
call
xor
mov
clc
mov
mov
mov
push
xchg
add
sbb
cwtl
jns
aaa
xchg
jmp
call
add
arpl
pop
int3
inc
add
outsb
push
cmp
push
fcomps
pop
xor
sub
mov
mov
cltd
push
in
xchg
cltd
and
pop
cmp
dec
mov
pop
repz
aaa
cmp
jnp
std
outsw
xchg
xchg
pop
cmpsl
push
cmp
add
or
mov
mov
int3
addl
cmp
aam
xor
xlat
cmc
xor
cmc
add
fstl
cmp
adc
sub
and
in
and
ret
movsl
loope
test
popf
jno
ret
sbbb
push
inc
stos
xorb
insl
sbb
sbb
test
out
push
ds
bound
lret
pop
xchg
push
scas
jge
xlat
jb
push
shr
imul
push
cmp
and
jo
aad
sbb
fs
out
cmp
pop
dec
shl
pop
jle
divl
mov
push
xor
sbb
je
mov
inc
cmp
mov
xor
jne
and
lret
rolb
sub
sbb
cmp
adc
mov
adc
mov
cmp
inc
and
sbb
sub
mov
mov
mov
aaa
iret
int
pop
daa
frstor
aas
and
adc
imul
insl
adc
aas
sbb
and
sbb
dec
ret
stc
jp
xchg
pop
imul
add
mov
movl
jp
add
cmpsl
shll
push
lcall
ret
inc
fs
stos
mov
cmp
cli
aam
inc
ret
inc
mov
add
and
add
jne
stc
inc
and
pop
mov
or
ss
add
pop
xchg
mov
sub
inc
push
push
pop
jb
sbb
adc
mov
gs
stos
push
pushl
les
ljmp
pushw
mov
mov
adc
xor
movsb
cltd
into
add
inc
pop
test
fisttps
sbb
mov
xchg
cmpsb
ss
or
xor
sbb
xchg
ljmp
mov
pop
add
cli
ss
sbb
xlat
fisubrs
loope
cmp
out
lcall
test
sub
jp
sub
sbb
sbb
sub
jmp
pop
ljmp
subl
cwtl
pop
add
sbb
mov
inc
cmp
sarl
mov
fistl
push
sbb
jne
int
pop
sbb
imul
lods
add
pop
hlt
rorl
and
dec
sahf
jno
add
pop
or
jns
push
xchg
cltd
ljmp
xchg
ficompl
mov
add
xor
mov
fists
cmp
lds
lock
jg
jl
jne
sub
mov
out
out
pop
scas
mov
pop
add
adc
cltd
test
fwait
out
pop
mov
jle
xor
mov
pop
data16
das
mov
add
mov
pusha
les
cmc
gs
cltd
insl
cmpsl
add
pushfw
mov
lods
lock
lods
xchg
sub
ljmp
jecxz
ret
andb
cmp
jge
test
push
adc
pop
cmp
idivl
js
stos
test
sbb
jb
gs
cltd
cmp
push
dec
aaa
xchg
sub
and
jp
addr16
xor
std
mov
and
xor
in
jbe
cli
lret
mov
adc
pop
add
lret
cmp
lret
xchg
loop
sarb
inc
sub
imul
xor
pop
push
pop
in
push
mov
adc
mov
push
in
sahf
ljmp
stc
inc
xchg
testb
gs
int
ja
cmp
stos
sarl
in
test
inc
and
adc
and
fldcw
pop
mov
nop
push
push
ror
es
or
jne
sti
sub
jge
and
fwait
or
leave
shlb
int3
outsl
or
loope
sti
mov
or
or
mov
mov
mov
jns
or
and
push
pop
xchg
mov
cmpsb
mov
mov
xchg
lcall
adc
stos
test
es
mov
and
movsb
loope
cmpb
jecxz
cs
addr16
xchg
pop
or
mov
subb
or
aad
sarl
loop
and
rcl
pop
sub
pop
adc
cmp
cmp
scas
mov
cmp
ljmp
mov
and
jno
pop
test
add
push
mov
mov
xor
mov
and
mov
cltd
add
add
or
inc
inc
dec
push
sub
cmp
xchg
mov
fsubrs
cmp
cmp
pushl
or
pop
sbb
lcall
push
adc
push
xchg
mov
xlat
adcb
lods
inc
setne
stc
in
lds
pop
mov
pop
jno
or
aam
sub
jne
inc
leave
sub
cmp
ljmp
jp
insl
fldcw
and
mov
dec
push
test
xor
jle
mov
rcrl
mov
jns
and
xor
push
mov
cwtl
jne
xor
popa
pop
cltd
test
jno
xor
jo
mov
dec
pop
adc
fistps
pop
sbb
mov
mov
js
and
sbb
xor
and
pop
and
and
test
sub
inc
lahf
xor
xor
mov
cmp
and
popa
inc
pop
and
dec
xchg
mov
dec
adcl
cs
push
push
push
xor
mov
icebp
inc
and
popa
cmc
arpl
lahf
imul
fidivl
jae
jne
ja
lahf
jns
jnp
jge
jg
xor
xchg
lahf
mov
xor
mov
and
cs
cltd
push
fwait
xor
mov
mov
cs
test
mov
mov
mov
mov
mov
mov
mov
movl
xor
mov
jae
dec
fnstcw
jno
mov
xor
push
xchg
mov
fstl
in
inc
out
arpl
sarl
and
icebp
xor
push
cmc
xor
mov
std
cmp
add
lahf
add
push
xor
mov
push
adcl
adc
mov
xor
lcall
push
dec
and
lahf
and
xor
mov
sub
cs
xor
push
xor
xor
fidivrl
cmc
cmp
lahf
inc
push
inc
xor
xchg
inc
outsl
xor
test
lahf
dec
push
dec
xor
xchg
push
dec
push
inc
push
dec
push
cs
pop
arpl
cmp
pop
fisubl
bound
xor
and
push
insb
subl
cs
xchg
arpl
jbe
js
jp
jl
jle
subb
addb
test
xor
mov
mov
push
xchg
xor
adcb
sub
popa
and
jae
test
xor
test
and
inc
scas
pop
xor
sarl
and
mov
and
and
jne
les
dec
enter
push
int3
xor
mov
xchg
sub
cs
imul
add
inc
and
dec
loopne
arpl
dec
popa
cmp
and
xchg
ljmp
out
xor
test
test
hlt
leave
ret
xor
popa
cmp
and
pop
add
shlb
and
mov
or
int
dec
dec
pop
dec
and
push
fcompl
jae
sbb
push
inc
xor
jne
daa
subl
xor
pop
and
xor
aaa
cmpl
cmp
lahf
cmp
mov
inc
fimull
dec
orl
cs
and
and
popa
andl
cs
addr16
imul
cmc
jno
popa
mov
and
xor
mov
jge
cmpl
adcl
xchg
lea
loop
xchg
and
xor
mov
popf
sbbl
push
movsl
xor
mov
lods
subl
test
mov
mov
fidivrl
dec
lds
lahf
push
leave
xor
mov
shll
inc
daa
mov
mov
filds
lahf
in
out
jmp
fucomi
jne
out
inc
and
test
arpl
and
lcall
dec
lcall
cmp
mov
or
xchg
mov
and
xchg
fcoml
dec
sbb
lahf
sbb
push
xor
mov
subl
sub
lahf
sub
cs
cmpsb
xor
fdivl
dec
cmp
lahf
cmp
ds
mov
inc
orl
cs
dec
push
dec
xor
lcall
dec
pop
pop
push
push
pop
and
and
push
inc
mov
push
lock
push
xor
mov
and
xor
push
mov
xchg
mov
cmpsb
test
fildl
mov
cs
mov
xor
mov
mov
dec
pushf
cs
sahf
arpl
cmpsb
movsb
and
cmpsb
cmc
test
stos
dec
lods
cs
scas
push
mov
mov
mov
mov
mov
sbb
inc
jecxz
and
rolb
dec
pop
and
and
faddl
loopne
loop
in
and
pop
inc
lahf
call
pop
and
inc
xchg
mov
push
inc
mov
cmpsb
mulb
fprem
cmc
cli
inc
push
cld
dec
pop
xor
inc
cmp
and
push
or
lahf
or
lds
sbb
daa
lahf
and
xor
test
outsl
cmpl
xchg
add
sbbb
add
sbb
aad
fcmovnu
cmpsb
or
sub
gs
dec
xchg
add
ficoms
jbe
fdivrs
and
lods
iret
addb
inc
dec
jecxz
push
xchg
adc
std
jecxz
mov
mov
pop
adc
adc
shll
loope
inc
cld
pop
or
cltd
cmpb
rcl
mov
stos
jmp
mov
rcrb
lahf
jecxz
xchg
push
out
rcr
jg
sbbl
dec
push
sbb
enter
adc
ja
sarb
pop
jp
repz
vmulpd
or
out
dec
add
aad
mov
out
inc
stc
inc
shll
pop
push
je
push
pop
push
mov
daa
frndint
inc
cld
jne
cmp
add
mov
es
dec
cmp
adc
hlt
sbb
call
subb
movsl
add
inc
inc
test
fldenv
mov
ss
mov
mov
fs
call
jae
jne
and
or
mov
ja
jge
fstpl
repz
push
xchg
xchg
dec
mov
pop
cmp
xor
xor
pop
fwait
mov
pushf
inc
mov
push
push
cmp
test
or
fisttpll
xor
out
cld
and
push
iret
test
or
ds
mov
sub
out
jmp
icebp
outsl
inc
mov
sbb
xchg
sti
mov
pop
mov
mov
adc
test
xchg
or
sub
sub
push
xlat
dec
leave
push
dec
pop
dec
mov
test
and
push
imull
mov
fucomp
mov
xchg
jns
push
iret
imul
in
call
scas
adc
jne
xchg
cmp
popf
popa
push
fldcw
jno
adc
mov
pop
iret
in
pop
scas
push
cltd
fwait
iret
xchg
dec
lahf
flds
lcall
shll
dec
xchg
jae
addr16
les
pop
fiaddl
cmpl
xchg
pop
aam
jnp
sbb
pop
ficoml
pop
into
mov
aaa
jno
lods
xchg
cs
mov
enter
call
mov
cwtl
and
cmp
cwtl
outsl
mov
cwtl
sub
clc
aad
loope
sbb
and
cmp
dec
clc
pop
clc
push
clc
pushf
clc
mov
clc
shl
fnsave
fisubl
in
js
cwtl
mov
jns
fimull
lods
ljmp
test
sub
cmp
bound
les
loopne
pop
cwtl
sbb
cmp
fcmovbe
loop
ljmp
cmp
jbe
mov
movsb
or
or
or
or
std
les
ljmp
cmp
call
sub
cmp
add
or
or
or
or
mov
test
mov
or
orl
test
mov
sbb
dec
add
data16
loopne
loopne
aam
mull
aam
in
hlt
sub
xor
addb
add
cmp
std
sub
dec
pop
mov
mov
lea
pop
fimull
in
sbb
ss
inc
or
push
jp
nop
push
mov
push
into
push
out
hlt
push
pop
shlb
and
dec
std
pop
add
push
scas
push
rorl
push
fisttps
icebp
push
add
adc
and
xor
dec
push
jo
test
xchg
mov
mov
jne
mov
les
aam
in
hlt
pop
add
jnp
scas
stc
loope
add
push
push
inc
or
push
mov
push
hlt
push
add
dec
lea
dec
mov
rcll
dec
stos
push
mov
ret
push
ficoml
push
repnz
push
inc
pop
pop
and
xchg
jp
mov
mov
or
cmp
dec
mov
sub
mulb
stos
cltd
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
fsubrl
mov
mov
mov
mov
mov
cwtl
sbb
cmp
push
dec
pusha
into
imul
loopne
fidivrl
or
cmp
push
jp
mov
mov
or
cmp
dec
mov
adc
mov
loopne
add
loopne
loopne
fisubrl
cmp
push
jp
sub
stos
push
mov
push
ljmp
jnp
dec
cmp
dec
pop
dec
imul
mov
push
jmp
push
sbb
sub
cmp
dec
push
pop
push
push
jp
mov
lcall
fimull
or
cmp
dec
mov
das
imul
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
fimull
mov
or
lret
ljmp
sub
lahf
dec
fistps
pop
int
lcall
leave
or
or
or
or
or
or
or
or
pop
or
jp
mov
lcall
or
or
or
or
or
addl
mov
imul
mov
or
cmp
dec
mov
das
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
pop
cli
loopne
aam
test
movsb
cmp
in
hlt
mov
cltd
add
add
add
add
add
add
add
add
add
pop
add
jp
mov
lcall
add
add
add
add
add
xchg
sub
cmp
dec
add
imul
push
test
push
jmp
push
sbb
sub
cmp
dec
push
pop
push
push
jp
mov
lcall
push
fimull
ljmp
adcb
pop
mov
adc
mov
mov
mov
lock
cmp
push
jp
mov
scas
lret
loopne
loopne
loopne
aam
mov
movsb
cmp
in
clc
or
mov
imul
in
or
ror
cmp
dec
or
push
jp
mov
ret
stos
out
lret
or
cmp
dec
mov
das
imul
mov
stos
stc
add
add
add
add
add
pop
add
jp
mov
lcall
add
add
add
add
add
cmc
sub
cmp
dec
add
imul
push
test
imul
push
cmp
cmp
push
sub
clc
mov
clc
ljmp
xor
sbb
jno
dec
cmp
dec
pop
dec
imul
push
test
push
fsts
push
stc
push
or
push
sub
cmp
outsl
xor
mov
movsb
mov
jmp
popa
dec
push
sub
cltd
bound
add
jo
inc
test
lea
jbe
imull
fldl
xchg
inc
cmpsb
pusha
add
test
je
dec
aaa
mov
mov
mov
mov
adc
scas
data16
cwtl
add
or
mov
sub
mov
rcr
jmp
in
mov
inc
sub
xchg
clc
adc
mov
pushf
stos
mov
nop
lcall
roll
and
imul
add
mov
nop
into
pop
xchg
mov
inc
xchg
leave
hlt
and
push
cmp
or
mov
adc
mov
pop
xchg
pop
pop
and
inc
pop
ret
push
cmp
and
push
mov
mov
cmpsl
fcomi
in
stos
jmp
inc
in
mov
sbb
scas
pusha
push
xor
arpl
xchg
or
cmp
into
or
push
mov
shll
into
icebp
nop
cli
sub
ret
aas
fstps
xchg
out
out
test
data16
xchg
ss
add
test
jecxz
addr16
mov
jbe
out
fidivl
popl
xchg
pop
sbb
adc
sbb
push
jns
mov
and
cmp
adc
and
cltd
out
and
xor
fbstp
push
int
mov
and
daa
cltd
sub
and
xor
xor
dec
and
xor
push
xor
xchg
cmp
adc
es
xorb
sbb
mov
mov
arpl
mov
and
push
pop
inc
push
push
sub
push
adc
cltd
sti
out
int
adc
sub
xor
sub
test
push
rcll
xor
xor
mov
outsl
adc
jg
cmp
stos
adc
mov
mov
mov
sbb
or
sbb
jmp
dec
jl
stc
cmp
in
gs
bound
sbb
inc
and
add
lahf
lcall
daa
add
ljmp
and
xor
hlt
mov
cwtl
sbb
inc
mov
pop
adc
push
jo
fidivl
daa
mov
das
xchg
shlb
and
pop
pop
pop
bound
jbe
sub
pop
iret
mov
ds
pop
loop
xchg
and
adc
mov
sarl
jecxz
xor
xorl
add
pop
inc
jns
rclb
xor
addl
xchg
jle
pop
ret
ja
arpl
pop
mov
sbb
fwait
and
adc
test
mov
lods
xchg
jne
shll
icebp
xchg
jns
xchg
mov
fimuls
xor
lcall
rol
mov
mov
pop
and
xchg
xor
inc
cli
push
outsb
and
inc
push
divb
popf
push
loop
xchg
add
and
cmpb
fwait
cmp
popf
mov
xchg
jno
inc
xor
and
cld
and
adc
shlb
aaa
or
dec
cltd
ret
mov
xor
mov
mov
and
nopl
popf
repnz
adc
jp
sub
shrl
and
movsl
insl
out
lds
outsl
xor
icebp
pop
inc
imulb
sbb
pop
push
lret
xor
adcb
popf
popl
adc
push
push
xor
push
push
jg
repz
stc
and
cmp
push
in
insl
mov
repz
stc
aam
gs
and
xor
mov
cmc
fnstsw
pop
mov
insl
gs
pop
dec
cs
push
mov
out
fldcw
lahf
notl
mov
push
sub
pop
push
fldcw
lods
cmpsl
ret
sbb
mov
mov
dec
aam
push
xchg
lea
sbb
fwait
sbbb
sahf
cli
jle
jo
and
mov
imul
adc
cmp
push
jp
or
fstps
mov
imull
cmp
movl
mov
fistl
cmc
mov
cmp
and
rolb
mov
nop
cli
jo
pushf
vpsubusb
mov
adc
clc
jmp
adc
dec
adcb
mov
adc
and
xor
leave
mov
mov
pop
mov
pop
test
stos
fcoml
jb
adc
add
mov
xchg
or
sub
lds
jns
xor
add
xlat
jno
lcall
mov
cmp
popl
jne
pushf
adc
cltd
sub
jb
pop
cmpsb
repnz
ficompl
es
mov
dec
lahf
fsts
sbb
pop
in
lcall
jno
mov
add
and
mov
div
pop
cmpl
cld
xor
sbb
mov
les
xor
xor
xchg
ss
popf
add
shlb
pop
xchg
push
sub
leave
inc
ret
push
mov
adc
scas
push
mov
adc
adcl
sahf
inc
push
repnz
sub
mov
xor
aaa
mov
repnz
jno
ss
and
dec
adcl
xlat
jmp
jno
ja
xor
add
push
ffree
xor
and
mov
icebp
dec
add
and
aad
out
insl
or
xchg
xor
inc
lret
jae
hlt
jno
insl
add
and
aas
andl
adc
fwait
pop
cltd
sub
lahf
sbb
pop
fisubrl
leave
xor
lahf
ficompl
xchg
xor
es
inc
in
hlt
aam
dec
dec
adc
inc
mov
and
push
cmpsb
lea
sbb
pop
and
xor
notb
xchg
cmp
sbb
adc
jb
test
and
adc
xor
aaa
arpl
inc
rcll
xor
inc
adc
hlt
xchg
push
sbb
inc
prefetch
mov
inc
ret
inc
xor
push
xor
push
dec
adc
xor
xchg
mov
mov
inc
fsts
jb
mov
cmc
in
clc
shlb
jae
adc
dec
push
jno
arpl
cmp
scas
rclb
std
test
mov
xchg
ja
xor
sti
lahf
popa
fwait
jns
inc
cmp
ljmp
lcall
add
xchg
xor
aam
test
sbb
xchg
xchg
xchg
adc
icebp
mov
lock
lods
adc
mov
aam
leave
adc
xchg
lret
xor
mov
and
push
push
lret
dec
and
or
bnd
test
dec
sbb
mov
push
cmp
xchg
iret
sub
push
and
mov
sarl
pusha
inc
loope
std
xchg
shl
shrl
mov
mov
icebp
pop
out
and
frstor
push
add
add
hlt
xchg
shrl
sbb
rorl
aas
and
xlat
adc
mov
cmp
adc
push
or
fildl
xchg
lea
fdivl
fwait
xor
sbb
roll
out
inc
add
mov
xchg
jmp
fisttpll
adc
dec
inc
and
push
popf
in
push
sbb
shr
lahf
jno
jno
mov
insb
inc
xchg
sbb
xor
xchg
out
lea
sbb
mov
mov
popl
mov
adc
rcll
mov
push
adc
dec
sbb
mov
sti
int
and
aaa
adc
adc
and
rolb
jle
or
or
adc
inc
mov
mov
xor
sbb
pusha
lea
shrl
add
cs
jb
mull
aam
sub
sbb
mov
dec
repnz
dec
and
mov
nop
adc
push
pop
dec
ret
rcrl
xor
hlt
icebp
push
mov
xchg
mov
cmp
push
jb
add
sbb
push
mov
sbb
push
bound
add
xchg
repnz
dec
and
pusha
mov
shl
mov
loopne
xchg
rcrb
jno
or
pop
repnz
mov
or
xchg
pop
or
pop
shl
mov
test
repnz
ds
shlb
pop
jno
icebp
push
xor
enter
xor
insl
ret
pop
xor
aad
jp
push
jmp
cmp
jb
scas
adc
pop
les
pop
adc
adc
shr
mov
xchg
mov
jl
xor
roll
repnz
mov
xor
adc
mov
adc
repz
cwtl
divl
lcall
lcall
mov
inc
sbb
lret
push
inc
push
arpl
adc
icebp
sahf
cmp
dec
mov
xor
xor
aas
xor
mov
hlt
lret
and
shll
addl
xor
lock
int3
into
and
jb
xor
loope
andl
outsl
bound
mov
test
ret
sarb
and
and
xchg
loopne
add
ret
repnz
sub
add
pop
inc
icebp
aaa
and
mov
push
and
jae
dec
popa
shll
mov
insb
adc
mov
push
jmp
adc
jb
xor
in
xor
push
push
sbb
adc
ja
xor
xor
in
mov
jb
dec
sbb
sub
inc
test
pop
xchg
jge
xor
icebp
xorb
test
test
push
mov
and
sub
xchg
jno
loope
les
loop
sbb
adc
and
sbb
jb
inc
sbb
mov
dec
sbb
jb
adc
loope
and
xchg
fsubl
and
push
xchg
xorb
lcall
leave
nop
mov
lcall
icebp
mov
jo
lret
push
sbb
push
sar
aad
and
or
xchg
and
xchg
mov
mov
mov
xchg
sub
scas
xchg
xchg
cmp
sbb
dec
add
xor
mov
icebp
jae
and
pop
push
push
push
rcll
repnz
xor
inc
int
loope
fsubl
and
rorb
xlat
adc
push
pop
ret
repz
xor
or
int3
ret
xchg
les
lcall
and
and
cltd
roll
cmp
jle
inc
dec
ret
xchg
mov
push
into
je
xor
int3
xor
sbb
sbb
dec
or
lods
shll
loopne
rcl
loope
loope
loop
aad
jno
adc
in
loope
mov
push
jno
or
push
or
dec
push
pop
shrb
sub
loop
out
push
jno
ficoml
shr
xor
pop
cs
fists
js
pop
push
mov
mov
jno
dec
push
adc
inc
push
jbe
fnstcw
jno
outsl
icebp
es
rcr
xchg
jae
shlb
ror
adc
sbb
bound
in
cmp
mov
xor
fists
push
pop
jmp
dec
xchg
popa
imul
pop
push
push
fists
lds
loope
and
jle
aas
in
xchg
and
xor
adc
in
add
add
cmpb
jne
and
icebp
popa
push
lret
push
loop
push
test
mov
cli
pop
mov
xchg
icebp
jl
mov
jae
aas
es
xchg
or
out
in
and
loope
stc
push
stc
xor
mov
push
loope
xchg
cmpsb
int
and
scas
and
pusha
jno
mov
icebp
scas
mov
and
scas
jg
rep
xor
ret
mov
les
inc
xor
sbb
mov
mov
inc
es
sbb
sub
cmp
inc
subb
pop
jae
inc
inc
sbb
rcl
mov
sbb
mov
push
and
dec
sub
and
mov
adc
arpl
popa
and
mov
movsb
push
xchg
or
push
jb
cmp
sub
jno
and
adc
sarb
or
inc
adcl
sti
xor
mov
xchg
inc
and
add
sbb
mov
xor
push
add
xor
jb
lret
popf
sbb
adc
sbb
adc
fbld
mov
out
jno
jb
sbbb
cmp
jb
sbb
mov
jle
dec
loope
bnd
jno
jb
push
jno
push
xchg
add
popa
mov
jb,pn
icebp
lcall
cmc
jno
inc
add
dec
and
insl
xor
xor
loope
andl
pop
adc
adcl
shl
stc
mov
and
pop
inc
sbb
jno
inc
je
sbb
jb
inc
sbb
xchg
mov
lret
jnp
sbb
daa
mov
imul
inc
xor
xchg
inc
push
jno
sbb
mov
cs
sub
in
pop
inc
aad
push
sbb
outsl
push
xchg
inc
lahf
roll
adcl
cmpsb
jns
xor
sbb
adc
sbb
sbb
pop
and
add
push
xor
xchg
jns
sbb
rcll
xor
sbb
icebp
movsl
fs
and
jno
pop
addb
sbb
cmpsl
lcall
int
sbb
ror
push
add
aas
mov
fwait
xchg
mov
jno
cltd
stc
cs
inc
mov
jbe
insl
cmp
mov
pop
outsl
push
mov
test
sub
repnz
inc
and
or
mov
add
aas
mov
sub
jb
fwait
shll
in
xor
lahf
push
xchg
fcmovb
lret
push
xor
shrl
mov
sbb
stc
sbb
xchg
std
sbb
in
sbb
mov
sbb
add
sbb
inc
inc
adc
test
pop
sub
sbb
mov
idivb
pop
xor
sar
roll
jg
mov
in
or
adc
sahf
cmpsl
jg
add
mov
je
xchg
jno
ljmp
test
push
popa
mov
pop
mov
xchg
or
icebp
repnz
cmp
aam
sbb
cmp
add
sub
mov
shrb
filds
xchg
cltd
sub
leave
sub
adc
sub
xor
es
inc
ret
iret
aas
mov
push
mov
mov
push
mov
cmp
sbb
xor
mov
adc
jle
hlt
bound
cmp
fdivrl
cmp
add
ds
xor
ljmp
cmp
loop
movsl
add
and
inc
mov
push
lds
test
jne
rcll
aas
and
dec
mov
and
ror
aad
jae
adc
andb
cmpsl
dec
addr16
and
scas
sbb
addr16
jp
arpl
ret
bound
jmp
loopne
pop
addr16
pop
aam
pop
inc
aam
pop
inc
or
popa
mov
es
or
adc
jmp
das
sbb
lea
adc
mov
jl
add
add
push
cwtl
adc
pop
je
icebp
xchg
cwtl
push
fbstp
adc
dec
mov
out
add
xchg
insb
xorb
vmwrite
xchg
shll
mov
xchg
inc
or
bound
stos
mov
stos
shlb
xor
xchg
sbb
xor
aaa
lret
pop
ljmp
shll
push
mov
daa
jmp
sbb
push
popa
and
xor
inc
cmp
pop
sbb
cmp
dec
cltd
bound
and
pop
pop
jle
jne
and
in
pop
pop
mov
test
xlat
jb
and
mov
and
push
outsl
cltd
jg
and
and
adc
push
xor
push
icebp
adc
inc
pop
or
add
xchg
xor
push
adc
andnps
cltd
add
and
xor
adc
xchg
pushf
shrl
mov
cmpsl
xor
bound
dec
pop
push
or
not
loope
xor
inc
jb
dec
xchg
jmp
xor
pop
imul
push
rol
xor
xchg
cwtl
cmp
mov
pop
jg
shr
sub
jle
mov
xor
bound
enter
orl
lock
adc
mov
cli
adc
jmp
hlt
rcll
nop
pusha
xchg
jecxz
in
mov
das
or
mov
adc
push
bound
stos
mov
pop
pop
cwtl
ja
das
mov
or
icebp
sub
js
divl
scas
nop
adc
shr
imul
fdivs
mov
rclb
xor
leave
pop
xlat
cmp
iret
and
lcall
pop
adc
addb
adc
mov
and
lahf
cmp
loop
ret
fidivrl
mov
pop
adc
aas
shlb
rcrl
cmp
pusha
adc
inc
mov
sub
adc
mov
push
xchg
jbe
adc
je
sub
stos
mov
adc
dec
into
push
aam
mov
adc
dec
int3
push
aad
mov
adc
dec
int
shll
insb
adc
dec
lret
and
adc
addl
adc
push
push
adc
test
adc
inc
pop
adc
cmp
les
fdivrl
mov
pop
adc
ds
pop
sub
cmp
sub
sti
mov
xchg
int
ljmp
xchg
cmp
and
or
pop
sub
daa
adc
sub
xor
pop
sar
mov
bound
icebp
arpl
adc
pop
and
je
xchg
sarl
pop
jns
pop
aas
adc
jmp
push
fnsave
mov
and
mov
movsl
adc
cltd
adcl
mov
icebp
dec
scas
cmc
fcmovnu
fwait
int3
lcall
jno
xchg
xchg
gs
sub
xchg
and
rcll
gs
cwtl
popa
push
inc
and
push
sbb
jmp
jno
push
jno
lahf
and
xchg
inc
jno
sub
je
lds
sbb
pop
das
je
cmp
mov
je
daa
outsl
xor
sbb
pop
xor
inc
mov
cmp
xchg
imul
push
pop
or
xchg
inc
imul
and
cmp
addr16
and
sbb
dec
ja
push
cld
ja
jns
lds
fbld
add
dec
mov
dec
add
aad
stc
mov
adc
out
flds
sbb
sub
mov
sub
cltd
xorb
mov
cmpsb
adcb
mov
cld
repz
loopne
and
shlb
aaa
xchg
jecxz
out
jmp
sbb
push
stc
xor
cmc
sti
push
mul
popf
xchg
push
mov
test
lods
mov
imul
test
cmpsl
mov
jecxz
and
or
add
movsb
add
andl
popa
cmp
sbb
jecxz
sub
rcrl
fcomi
mov
mov
imul
push
sti
cmc
sbb
mov
aad
les
mov
fxch
and
mov
push
cltd
jne
out
shlb
sahf
lock
xor
adc
xor
push
push
negb
lds
in
push
mov
or
xchg
hlt
mov
mov
xchg
rcrb
cli
nop
mov
xchg
mov
push
push
clc
push
mov
mov
adc
push
and
inc
adc
pop
and
inc
repnz
mov
jno
push
insl
inc
ss
jae
push
push
sbb
xor
xchg
and
das
xor
daa
movsb
cltd
or
pxor
cld
inc
adc
xor
imul
ds
add
es
dec
pop
lahf
popa
popf
fbstp
fistl
fdiv
sbbb
ret
jno
daa
and
out
mov
pop
stos
add
xchg
popa
mov
fimull
and
inc
pop
mov
jle
xchg
xchg
mov
inc
push
fisubrl
xor
leave
dec
mov
jo
in
and
test
or
mov
pop
loop
dec
and
sub
mov
mov
xor
mov
jb
test
rolb
mov
cmpsl
pop
cli
ja
inc
push
jnp
jns
mov
idivb
pop
hlt
roll
jecxz
mov
push
jb
and
aas
ret
xor
adc
xchg
lea
cmpsl
notb
mov
xchg
outsl
inc
fstps
or
dec
inc
and
adc
loope
add
cmp
and
xor
cltd
gs
and
dec
push
outsl
push
mov
shll
imul
rorl
sub
lods
mov
sub
sbb
xchg
fldl
aaa
scas
jmp
xchg
sub
jne
dec
cmp
push
inc
negl
out
inc
jecxz
sti
shll
cltd
mov
fldt
cltd
push
sub
dec
orl
outsb
dec
or
cmc
nop
and
fwait
add
jmp
push
div
jmp
xchg
lods
and
push
pusha
jmp
nop
iret
insl
cmp
cmp
mov
jl
xor
mov
into
xlat
mov
call
mov
in
cmc
jmp
fildll
xlat
repnz
shr
xor
adc
mov
or
xor
test
pop
xorb
pop
and
pop
xchg
lods
dec
xor
fwait
add
scas
stos
sub
cld
xchg
loop
sarb
pop
add
dec
dec
test
xchg
out
and
mov
mov
shll
add
inc
ret
xor
or
xrelease
es
push
or
lods
xchg
mov
inc
popa
repnz
sti
repz
mov
in
mov
mov
push
dec
dec
sbb
cmpsb
pop
xor
outsb
cltd
mov
xchg
scas
xchg
adc
mov
fs
fs
fldt
test
sbb
sub
stos
jo
mov
and
or
adc
mov
repnz
aas
mov
and
push
and
sbb
aaa
and
inc
sub
shr
mov
jnp
cmp
scas
insl
xorl
mov
cmp
daa
mov
pop
and
daa
lcall
sub
inc
aas
sbb
push
xor
push
stos
ret
or
sub
push
cld
xchg
sub
jnp
daa
inc
adc
add
xchg
xchg
popa
and
mov
push
jecxz
dec
adc
in
mov
sti
xchg
je
mov
int
stc
sti
sub
xor
push
xor
and
repnz
pop
push
xchg
jge
xor
add
adc
push
add
inc
adc
mov
fisttpl
jbe
adc
adc
fstps
cwtl
ret
inc
xchg
dec
push
pop
orb
cs
icebp
jg
loope
xchg
aas
xor
arpl
push
icebp
inc
mov
icebp
stc
arpl
and
dec
mov
and
mov
lock
je
mov
and
repnz
es
popa
pop
xchg
subl
arpl
mov
sbb
lret
idiv
fidivl
and
lds
mov
inc
gs
pop
push
cmp
imul
pop
lds
xchg
iret
pop
mov
jmp
xor
test
xchg
jbe
pop
rorb
lcall
shrb
pop
repnz
loop
xor
cmp
add
clc
aaa
scas
scas
and
aam
in
aaa
xchg
cli
xchg
mov
std
mov
icebp
in
and
imul
aaa
or
xchg
inc
jns
and
aam
loope
push
nop
flds
adc
cmp
add
inc
addb
mov
mov
jb
fwait
jmp
mov
popf
add
add
loope
xor
rcll
cmp
daa
int3
inc
jo
scas
adc
pop
push
cmp
ret
dec
cmc
mov
push
and
icebp
xor
adc
and
add
dec
jb
inc
inc
push
dec
shlb
aad
and
ret
test
and
add
out
std
adc
sbb
sub
icebp
xor
mov
icebp
aam
movb
and
lret
gs
adc
leave
dec
jno
sbb
test
sti
cmc
ljmp
roll
pop
loop
fs
adc
jmp
addl
xlat
outsb
out
mov
xchg
cltd
out
push
psubusw
mov
xor
sub
pop
inc
xorl
jae
lods
push
test
test
jge
sbb
dec
mov
shlb
xchg
mov
out
outsb
daa
loope
mov
xor
loop
sbb
stos
push
repz
int
fxch
jmp
pop
je
dec
add
mov
cmpb
push
pushf
sbb
sub
mov
push
push
pop
ret
adc
add
cmp
hlt
sbb
pop
adc
mov
cmp
aas
bound
ljmp
adcl
cmc
or
repz
jno
pop
xor
sub
cmc
fwait
ljmp
imul
dec
ljmp
pushf
mov
lods
pop
repnz
fsts
dec
inc
or
nop
jbe
stc
cmp
aas
mov
mov
inc
stc
pop
push
stc
ror
push
mov
jmp
sbb
dec
cmp
cld
cmc
sub
mov
inc
fcoms
jecxz
sarb
mov
inc
test
xchg
test
add
add
add
mov
iret
loop
push
dec
add
sub
jge
pop
mov
shrl
push
pop
sbb
lea
dec
push
sbb
push
pop
sub
shl
imul
imul
shl
js
das
jo
dec
lret
test
fstps
pop
imul
add
dec
dec
outsl
add
das
das
mov
and
and
aad
inc
inc
sbb
std
cmc
sub
daa
mov
int3
cmp
lret
int
pop
dec
xor
push
mov
push
inc
popf
fcmovnbe
fdivr
push
inc
pop
popa
jge
daa
xchg
mov
sbb
xor
cltd
repz
cltd
sbb
mov
fldcw
and
imull
mov
sub
or
and
and
and
push
push
sbb
xchg
and
mov
mov
repz
pop
lahf
test
pop
mov
popf
iret
mov
adcl
mov
stos
jecxz
out
or
gs
xchg
outsb
fsubs
pop
sbb
xchg
xor
lahf
jae
addr16
dec
inc
sbb
loopne
rolb
adcb
add
outsl
or
popa
dec
cmp
adc
adc
lea
adc
cmpsb
out
jge
xchg
and
and
iret
add
xor
jae
pop
cmpsl
add
cmp
jmp
fstps
movl
fsts
xchg
mov
in
jnp
cmpsb
mov
mov
loopne
aas
stc
mov
inc
stc
jge
or
ret
or
addr16
push
xor
jns
loope
xor
and
cmp
sbb
sub
or
mov
insl
dec
lret
xor
and
pop
xor
mov
mov
push
sbb
pop
in
popa
inc
pop
sbb
mov
xorl
cli
je
sbb
xor
or
push
mov
inc
and
xor
inc
and
xchg
out
pop
xor
ficomps
fwait
adc
jno
jno
push
popa
xor
pop
jg
dec
mov
pop
xor
shl
fdivrl
xor
pop
mov
out
imul
or
fcmove
aas
sti
nop
ss
mov
nop
syscall
add
pop
lods
mov
out
sub
shrl
jmp
test
mov
sbb
push
popa
movsl
xor
popa
popf
movsl
jns
push
dec
popa
push
movsl
inc
sub
sbb
jmp
movsl
xor
aam
pop
mov
push
or
xor
test
aas
xchg
stos
inc
xchg
and
mov
xchg
fdivrl
xor
cltd
inc
mov
inc
adc
inc
xor
inc
insl
mov
jb
dec
loope
daa
lahf
adc
push
add
push
dec
loopne
and
xchg
aad
inc
std
fld
jae
outsl
push
add
adc
addr16
bound
loope
mov
hlt
and
jb
inc
xchg
test
add
and
adc
push
test
rcrb
imul
icebp
cmp
pop
inc
or
imul
mov
cltd
xchg
test
lods
mov
dec
xchg
cltd
sahf
inc
cmp
repnz
loope
cmp
cmp
and
push
pop
sbb
dec
mov
ret
xor
shrb
cmp
insl
inc
sbb
mov
cmp
jno
dec
loope
xor
lea
subb
shr
push
add
cltd
and
outsl
test
pop
rcl
jno
dec
xchg
fisubl
cmp
shll
or
mov
insb
mov
cltd
mov
and
mov
andb
ret
mov
and
dec
insl
inc
or
jno
push
push
jno
test
and
test
push
ror
lahf
add
push
popa
insl
icebp
push
mov
pusha
and
loop
mov
andb
and
cmp
mov
add
and
movl
popa
arpl
ret
dec
repz
or
arpl
or
xchg
jae
add
push
test
push
xchg
add
das
stos
mov
and
inc
sbb
and
cltd
arpl
dec
adc
and
pop
test
xchg
xor
loop
cmp
cmp
push
mov
mov
arpl
rol
and
xchg
test
adc
mov
jns
mov
xchg
cltd
add
or
mov
push
jns
loop
add
xchg
cltd
mov
mov
bnd
and
sbb
pop
inc
sbb
int
shl
and
cltd
sbb
mov
inc
fisttps
xorb
sarb
arpl
sub
push
jge
adc
jno
cmp
pusha
mov
shr
icebp
loop
cmp
cmp
lea
xchg
pop
loop
and
mov
cltd
mov
cmp
addr16
and
jg
sbb
dec
mov
mov
shll
cmp
loope
loop
sub
jb
adc
push
negb
loopne
cmpsb
lods
pop
pop
inc
jg
and
inc
sbb
fcmovnb
xchg
push
shll
icebp
shll
add
in
andb
loope
cmp
cmp
adcl
xorl
cltd
mov
cmp
mov
mov
fadds
adc
add
add
xchg
dec
mov
sub
push
test
mov
jno
lcall
lods
out
xor
fcoms
mov
cmp
pop
roll
mov
and
test
fnstenv
out
popf
mov
cltd
arpl
cmp
pop
adc
cltd
xchg
rcrl
push
mov
jg
loope
jp
cltd
add
fistl
add
dec
xchg
cltd
mov
mov
bnd
and
aad
in
push
xchg
xchg
mov
xchg
test
push
cmp
or
adc
xchg
div
xor
loop
and
push
mov
cmp
add
xor
mov
cmp
cmp
mov
cmp
adc
in
push
bound
cmp
lea
rolb
dec
cltd
mov
leave
adc
dec
test
jg
xor
adc
cmp
xchg
jno
sbb
lea
adc
bound
xor
mov
ret
add
sub
adc
xchg
push
and
popa
xor
xchg
and
mov
pusha
shlb
adc
rolb
icebp
orb
pop
mov
and
xchg
leave
lahf
push
mov
xchg
lcall
popa
mov
enter
mov
aaa
xorl
addl
cmpsl
popa
push
ret
das
icebp
popf
xchg
xchg
dec
popf
popa
not
dec
popf
mov
sbb
push
cmc
adc
xchg
je
push
jno
pop
push
mov
shl
dec
mov
jecxz
movsl
fidivl
mov
adc
jno
cmp
push
xchg
dec
movsl
shll
push
adc
inc
js
adc
scas
cwtl
aas
mov
inc
mov
call
test
push
popf
test
jno
sbb
xchg
andl
fxch
sbbb
hlt
push
loop
shll
loop
and
popa
push
xchg
adc
mov
and
mov
sub
aad
daa
inc
and
xor
mov
mov
popa
push
mov
pop
lret
pop
and
cmp
mov
inc
xor
inc
cmc
adc
out
arpl
xor
push
mov
ret
mov
out
leave
xchg
add
arpl
mov
das
arpl
inc
arpl
adc
xlat
and
rcrl
mov
push
and
movsl
and
sbbb
popf
popa
jbe
popa
and
add
popf
in
push
xchg
xor
andl
cmp
jno
sub
popf
jae
aas
and
mov
push
shlb
mov
lock
popa
mov
add
dec
adc
icebp
mov
loopne
and
push
cmp
jno
xchg
cs
loope
mov
pop
add
xor
pushf
xchg
out
icebp
mov
popa
and
into
lahf
push
imull
cmpsb
mov
adc
inc
cmp
pop
arpl
icebp
fcmovnb
out
arpl
popa
out
xor
push
cs
sbb
cmc
inc
mov
pop
into
jne
in
push
cli
lahf
loop
add
aas
and
mov
push
push
call
jno
dec
adc
fnstenv
mov
mov
sbb
ret
fwait
orb
jb
popf
movsl
xor
mov
inc
xor
lcall
mov
insb
mov
add
sub
xor
orb
popf
push
xchg
xor
mov
icebp
cs
add
cmp
cmpsb
push
inc
popa
jo
sbb
push
pushf
cld
aaa
mov
loop,pn
loope
xor
xchg
sbb
cmpsl
xlat
bound
outsb
xor
ss
push
jno
xchg
inc
test
inc
loop
hlt
inc
shl
popa
and
jl
cmp
xchg
cmpsb
sub
pop
mov
arpl
xor
xchg
fsts
push
mov
sbb
hlt
or
shl
xchg
adcl
xchg
dec
sub
fsts
rorl
mov
ficoml
xorl
push
hlt
pop
andb
xor
mov
xor
inc
cmp
mov
push
cs
popa
mov
subl
xor
push
sarl
xchg
mov
cmp
jb
xor
mov
shlb
push
pop
popa
mov
repz
dec
pop
and
inc
cmpsb
rclb
fsub
jne
repnz
cmpb
inc
inc
hlt
movsl
jno
inc
add
cmp
and
jno
mov
lods
xchg
push
repnz
leave
and
sbb
push
popa
mov
xor
fidivrl
lcall
lcall
out
lcall
and
and
mov
sub
xor
das
xor
add
and
xor
cltd
jbe
and
xor
cmp
cltd
out
and
xor
sbb
cmp
push
push
cltd
dec
jno
dec
xor
test
test
cltd
mov
pop
popf
andb
jno
push
popa
fstps
into
fwait
xchg
ja
add
adc
push
dec
ficoml
notb
push
lahf
dec
sub
dec
gs
dec
adcl
push
dec
aad
dec
icebp
push
dec
push
push
dec
sub
inc
push
dec
bound
jle
dec
lcall
push
dec
out
push
dec
or
and
dec
pop
push
dec
jns
dec
xchg
push
dec
mov
dec
int
dec
jmp
mov
push
ds
mov
sbb
mov
xor
test
daa
inc
mov
js
lcall
xor
loop
pop
add
or
icebp
push
sbb
sbb
fldcw
push
lret
add
addr16
pushf
xchg
and
lret
jp
ret
ret
mov
popa
push
jno
sbbl
pushf
mov
loope
insb
popa
fcomi
jne
add
ljmp
adc
mov
popa
mov
mov
mov
cmp
xchg
mov
push
icebp
push
movsl
sbb
mov
push
cmp
imul
test
aas
xor
sbb
shl
out
inc
sar
hlt
pop
add
and
cmpsl
xlat
inc
xor
push
hlt
jge
jne
mov
inc
rcrl
push
cltd
sub
std
adc
popf
arpl
push
xor
fdivs
cmp
xchg
shll
jl
cmp
add
lds
mov
push
bound
fists
xor
pop
adc
ret
pop
repnz
dec
push
pop
adc
outsb
test
mov
lahf
rorb
mov
loope
adc
push
es
mov
lea
mov
mov
daa
popf
mov
icebp
addl
sbb
cltd
xor
and
test
cltd
jl
and
xor
push
cltd
mov
les
aad
sarl
stos
test
fwait
sub
cmp
lahf
xchg
push
mov
and
stc
cmpsb
adc
sub
push
dec
bound
add
loop
popa
ret
jg
loop
cmpsb
mov
fld
mov
or
jle
cmc
jnp
sbbb
lock
adcl
sub
xchg
mov
sub
rorl
adc
adc
bound
out
aaa
mov
mov
inc
popa
cmpsb
repnz
mov
cmp
scas
and
sub
adc
outsl
dec
test
mov
cmp
inc
and
add
inc
mov
loope
mov
xor
xor
shl
daa
shlb
loop
loop
xchg
testl
repnz
mov
daa
popf
mov
mov
and
push
add
je
xchg
inc
inc
icebp
mov
mov
stc
pop
dec
push
jl
adc
fnsave
mov
dec
mov
shll
fistpll
mov
adc
xor
mov
loopne
push
mov
push
add
scas
inc
add
inc
inc
hlt
inc
push
hlt
inc
insl
hlt
inc
mov
testl
fwait
rcll
std
int
cmc
jnp
sub
mov
push
mov
test
dec
sahf
pop
xor
int
repnz
popa
xor
mov
xchg
mov
ror
jno
adc
lahf
mov
pop
cltd
bound
and
mov
mov
dec
sarl
and
popf
iret
xor
test
loop
bound
jb
cmpsb
andb
jne
mov
shll
push
mov
shlb
fbstp
and
inc
mov
xchg
fnstenv
xchg
jg
mov
push
jnp
xor
lret
mov
xor
cs
outsb
mov
inc
jb
daa
sbb
shll
push
rcrb
outsb
rcrl
repnz
popa
sarl
and
sub
and
popf
cmp
and
dec
ret
jno
adc
cmpl
shl
xchg
sbb
xor
xorb
aad
movsb
mov
sub
and
xor
aas
and
and
and
and
inc
mov
push
into
push
sbbl
aaa
xor
jbe
popa
sub
imul
mov
and
es
mov
mov
adc
fxch
mov
popa
mov
mov
mov
and
push
mov
cltd
sbb
lcall
adc
icebp
xchg
fcmovnbe
mov
sbb
xlat
mov
insl
addr16
fndisi(8087
out
push
loope
sub
ja
inc
fisttpl
movsb
mov
jae
ret
xor
push
dec
push
inc
roll
xchg
push
dec
lods
pop
popf
mov
fsubrs
add
inc
inc
xor
or
aad
mov
inc
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
je
dec
or
fistps
mov
and
and
xor
xor
and
and
cmp
cltd
dec
pop
and
xor
popa
xor
push
arpl
xor
imul
insl
and
xor
jno
inc
push
jae
pop
mov
fistpll
xchg
shr
hlt
les
jae
test
add
sub
ret
dec
inc
push
dec
pop
push
dec
jnp
dec
xchg
push
dec
mov
dec
iret
push
dec
jmp
dec
or
and
dec
inc
push
dec
pop
push
dec
js
dec
xchg
push
dec
mov
dec
int3
push
dec
call
and
vmovupd
loope
sbb
xlat
addr16
xlat
loop
lcall
and
push
jb
xor
fld
jl
cmp
push
mov
hlt
adc
cmpl
jl
subb
adc
fsts
xor
xchg
mov
shrb
adc
push
add
inc
mov
mov
mov
dec
xor
mov
adc
add
xor
xchg
xor
test
lcall
xlat
add
cs
xlat
jo
xlat
xchg
mov
and
test
mov
shll
es
lret
add
dec
es
mov
ja
andb
sub
push
icebp
lret
dec
add
icebp
hlt
dec
sub
hlt
insl
adcl
mov
xor
popf
jmp
ret
and
lds
repnz
mov
mov
arpl
cltd
xor
xor
xor
push
jbe
jl
xor
mov
inc
and
dec
frstor
xor
inc
and
mov
xchg
mov
sbb
in
arpl
cmp
inc
add
out
pop
shlb
add
lds
xor
pop
jno
mov
popa
mov
push
mov
xor
mov
roll
and
or
mov
and
add
mov
jl
cmp
popa
jbe
jg
pop
rcr
adc
out
adcb
mov
mov
arpl
dec
adc
mov
mov
scas
adc
ja
es
popa
mov
push
mov
aaa
sub
xor
jno
cmc
shl
cmp
push
addl
rorl
mov
sbb
or
adc
out
xchg
loope
and
icebp
add
adc
xor
ficoml
insb
pop
inc
rclb
sbb
adc
daa
xor
fiadds
jl
sti
hlt
adc
cmpsb
repz
xor
pop
call
pop
dec
call
repz
push
divb
movsb
mov
push
push
sbb
cmc
jo
xor
jmp
lahf
push
icebp
xor
xor
add
dec
cmpsl
popf
push
pop
lock
rcrb
lock
jb
icebp
mov
xor
jae
fwait
adc
loop
add
push
mov
popa
divl
xchg
xor
rcll
xor
and
adc
mov
push
sbb
mov
adc
enter
cli
stc
jne
xor
cmp
push
push
loop
sbb
sbb
jb
test
stc
inc
sbb
aad
adc
out
push
xor
push
out
push
jb
mov
repnz
push
repnz
xor
xorb
xlat
adc
inc
aaa
fcoms
xor
push
mov
shll
into
lahf
mov
rcr
out
push
icebp
fisubl
inc
jno
add
jb
sbb
cltd
popa
std
in
push
mov
ret
arpl
xor
outsl
lahf
adc
shll
sub
inc
sub
push
dec
adc
jnp
xor
mov
aaa
scas
adc
popa
popf
add
adc
in
addr16
adc
bound
mov
loope
insb
xchg
mov
xor
leave
adc
jnp
xor
xchg
and
rorl
cmpsl
popa
push
addl
cmp
sub
and
sahf
bound
test
jb
ljmp
addr16
mov
lock
jg
out
repnz
mov
or
sbb
xor
mov
xor
lock
and
pop
xor
add
leave
lds
jb
pop
jmp
movsl
add
loop
cmp
xor
test
loope
ret
xchg
loop
dec
cltd
lcall
xchg
fcomip
sbb
mov
pushf
mov
inc
rcrl
adc
inc
inc
adc
pop
or
ret
ret
pop
fucom
add
add
pushf
and
inc
dec
mov
aam
inc
xor
or
xchg
daa
fbstp
jae
jae
std
mov
mov
mov
and
and
rolb
scas
clc
adc
push
cs
enter
lcall
test
push
push
pop
popf
xor
addr16
inc
and
add
cmp
and
push
sub
pop
fists
xor
adcb
mov
mov
mov
popa
mov
mull
inc
lret
fidivs
add
mov
and
inc
xor
xchg
mov
xchg
jno
mov
lahf
rcll
fidivl
and
push
pop
shll
xchg
cs
mov
not
inc
jno
pop
popa
arpl
and
sub
mov
popa
push
sub
jno
jae
jae
ljmp
nop
mov
mov
pop
subl
cs
xor
push
dec
shrb
adc
ficoml
out
push
out
adc
push
out
adc
push
out
adc
pop
out
repz
lds
push
push
and
and
inc
dec
mov
mov
rclb
mov
notl
jmp
popa
jbe
popa
sub
cmp
add
mov
inc
mov
ret
inc
mov
jg
lcall
xchg
pop
sbb
jp
icebp
inc
push
cmpsb
adc
jbe
pop
inc
test
and
xor
adcb
repnz
adc
out
and
outsl
cmp
add
bnd
sbb
inc
loope
hlt
adcl
jno
pop
popa
ret
mov
repnz
mov
sub
rorl
mov
sub
and
mov
shrb
lcall
add
inc
mov
lret
adc
cmp
bound
popa
xchg
pop
inc
ret
flds
jb
sbb
mov
ja
sbb
in
cmp
sbb
ja
lcall
inc
shll
inc
cmp
xor
add
mov
pop
push
adc
orb
call
shll
push
push
ja
and
and
int
mov
adcl
cmc
adc
das
mulb
dec
push
inc
jmp
adc
shlb
sub
dec
xchg
popa
and
je
shll
cltd
pop
adc
ret
pop
rolb
addb
rclb
xor
lock
adc
xchg
shll
jno
fidivl
sbb
mov
out
adc
popf
inc
negb
rorl
imul
dec
mulb
lcall
mov
sub
cmc
pop
pop
and
push
mov
lcall
cmpl
xor
add
es
icebp
ret
adc
lcall
imul
adc
mov
xor
notb
loop
xor
add
inc
jno
hlt
divl
add
pushf
xchg
pop
or
sub
push
cmpsb
pop
and
lds
ret
mov
mov
imul
dec
push
inc
sub
pop
dec
adc
xchg
push
sub
into
mov
popa
mov
mov
mov
into
mov
addb
push
outsb
add
loope
inc
push
sub
sub
fnstenv
loope
xchg
test
popf
add
cmp
or
adc
cmc
adc
inc
es
popa
ret
addl
mov
and
mov
add
xor
cmpb
imul
mov
xor
sbb
jno
mov
mov
mov
mov
movsb
loop
icebp
mov
arpl
idivl
int
add
lcall
fdiv
xor
es
add
arpl
xchg
imul
adc
loope
cmp
shll
and
add
lds
dec
rcr
imul
pushf
fcoms
add
add
fmull
and
in
inc
inc
hlt
das
aam
ss
loopew
sbb
shll
mov
loopne
aam
ss
dec
xor
sarb
cmp
outsb
hlt
andb
cmp
and
inc
icebp
adc
and
inc
cmp
sbb
punpckldq
adc
inc
xchg
lods
adc
sbb
mov
and
xor
into
arpl
andb
pop
mov
mov
add
popa
ret
add
mov
stos
arpl
and
bound
mov
cmp
push
adc
stos
mov
dec
jmp
and
xor
jl
sbbl
pop
xor
and
xor
mov
cltd
popa
cmp
pusha
and
xor
push
sahf
cltd
mov
inc
xor
fnsave
push
lods
cltd
test
sub
pop
sbb
mov
xchg
cltd
jbe
and
xor
lds
push
popf
cltd
test
push
xor
add
xor
push
ret
andb
xor
js
pop
cltd
sbb
pop
push
insl
push
stc
jl
in
and
xor
push
xor
push
sbb
add
lcall
mov
test
sbb
dec
sbb
jmp
sbbl
jo
xor
mov
jne
dec
and
pop
adc
lea
outsb
adc
xor
jb
pop
push
inc
cltd
push
std
and
xor
insl
xor
push
cmp
insb
fisubl
xor
cmp
mov
cltd
andl
inc
cli
dec
repz
and
inc
xor
in
xor
push
test
xor
sbb
mov
xchg
cltd
data16
xor
shll
push
jne
push
xor
dec
repz
xorb
pop
pop
mov
in
cltd
aad
and
xor
xor
push
and
xor
push
xor
push
or
aaa
data16
cmp
push
pop
in
test
and
and
push
cltd
jp
stos
xchg
xchg
and
pop
xor
out
inc
sbb
dec
xor
pop
xor
dec
xor
daa
push
sub
and
lcall
sbb
push
mov
fisubs
fisttpll
jno
fld
inc
xchg
mov
stc
xor
pop
xor
push
mov
xor
sbb
push
xchg
cltd
mov
and
xor
inc
and
pop
xor
push
test
dec
aas
loop
or
xor
ret
cltd
push
push
and
xor
movsl
xor
push
push
cltd
xor
adc
xor
push
inc
push
push
cltd
stc
leave
and
xor
push
xor
xor
push
push
cli
cltd
out
and
xor
pop
xor
push
push
cltd
in
and
xor
inc
xor
icebp
and
push
adc
jb
dec
xor
mov
rclb
fwait
lmsw
and
jge
mov
cltd
es
xchg
push
xchg
and
xor
pop
mov
mov
fldl
and
xor
pop
rorl
pop
or
and
xchg
xor
add
push
pop
cltd
xchg
pop
mov
outsb
and
xor
std
xor
push
leave
cltd
lods
mov
xor
add
mov
outsb
adc
ljmp
xor
push
lea
xor
xchg
push
lret
data16
xor
mov
inc
xor
and
stos
xor
sub
xor
sbb
jg
push
stc
fsts
and
mov
add
xchg
jl
mov
ret
and
xor
dec
push
int
out
jae
cmpsb
dec
fwait
inc
pop
js
pushf
scas
adc
jmp
or
ret
pop
out
out
sti
in
sub
jmp
dec
out
mov
xchg
adc
adc
std
orl
mov
sbb
mov
xor
bound
jle
aas
lret
adc
mov
add
mov
popf
jecxz
mov
lea
daa
in
out
cmc
sti
jno
mull
fbstp
sub
out
pop
lret
nop
mov
jge
cmp
aad
inc
mov
push
sub
mov
mov
andb
xchg
loope
icebp
push
jae
add
es
std
pop
jbe
movsl
or
mov
clc
dec
mov
prefetcht2
out
frstor
mov
adc
add
mov
jmp
and
and
iret
adc
popf
mov
push
stos
adc
sahf
iret
loope
pop
mov
repz
push
addr16
into
jge
test
inc
popa
adc
pop
xchg
dec
mov
inc
cmp
or
sub
xor
popf
dec
pop
dec
mov
lods
fiaddl
dec
xchg
icebp
add
mov
xchg
cmp
imul
lods
popa
fwait
mov
and
jae
xor
les
or
add
pop
nop
subl
mov
cmc
or
mov
cld
js
pop
push
mov
pop
stos
lret
mov
stos
movsl
cmp
les
jle
outsl
stos
adc
aas
inc
adc
or
inc
adc
flds
les
sbb
cmp
popf
push
xchg
or
mov
mov
mov
push
mov
icebp
loope
into
movsb
imul
imul
push
shrb
popf
daa
push
cld
scas
and
and
inc
cmc
pop
adc
shl
xor
loop
pop
hlt
mov
outsb
push
pop
in
bound
cmpsl
movsl
xor
leave
and
test
add
adc
or
repz
sub
push
jo
rorb
pop
push
xchg
xchg
sar
adc
mov
clc
mov
into
inc
out
mov
icebp
leave
test
xlat
push
jnp
push
subl
sti
aam
repnz
jae
in
push
jns
std
inc
mov
xor
inc
arpl
adc
and
imul
aaa
es
outsl
int3
cmp
cmp
pop
push
sahf
xchg
loope
push
push
pop
push
ljmp
push
xchg
dec
aad
mov
xlat
xchg
or
xor
pop
sub
and
pop
or
jns
lods
dec
push
push
pusha
in
and
test
ret
pop
xor
cs
mov
hlt
adc
pop
fdivs
or
adcb
fsincos
sub
outsl
ss
mov
test
mov
ret
mov
out
lds
sub
push
adc
mov
stc
and
mov
cs
jnp
repz
jmp
inc
idiv
dec
in
jmp
xor
lahf
pop
mov
and
aad
jns
and
adc
fdivl
adc
cmc
xchg
sub
cli
popf
mov
pop
inc
in
adc
mov
movsl
int3
mov
xor
mov
jns
adc
xor
movsb
bound
xor
mov
and
push
sub
add
rorl
inc
scas
daa
int3
add
sub
sbb
lret
adc
cmp
mov
sub
or
jo
outsl
loopne
xchg
hlt
sbb
outsl
sbb
ljmp
out
add
cs
sti
jecxz
fcompl
mov
bound
cmp
movsl
adc
fldcw
int
std
inc
sahf
in
nop
mov
popf
addr16
xor
movsl
add
test
jg
xchg
xchg
pop
mov
jg
mov
xchg
cltd
jmp
cmpsl
mov
sbb
pushf
mov
lcall
jge
xor
stos
cmp
sub
or
sbb
mov
insl
mov
push
push
xor
add
lods
inc
mov
imul
stos
mov
mov
push
add
fwait
mov
inc
stos
push
lret
dec
lcall
gs
dec
fs
sub
mov
sub
mov
pop
les
xlat
mov
mov
das
test
mov
cmpb
pop
cld
xor
pop
jns
data16
jnp
push
mov
xchg
inc
sub
aad
mov
jle
loope
xchg
sti
int
inc
dec
add
icebp
mov
push
rorl
cmp
sbb
push
ds
cmp
jle
data16
cmp
aad
hlt
push
lcall
outsb
repnz
or
mov
cwtl
or
fwait
cltd
and
js
push
insl
stos
lds
xchg
leave
cltd
imul
push
cmpsb
popf
out
mov
mov
mov
jecxz
mov
cmpsl
out
aaa
adc
or
mov
and
popa
mov
rcrl
xor
popa
xlat
cmp
adc
icebp
mov
hlt
mov
xlat
cmp
lods
xchg
inc
addr16
xor
mov
lds
roll
jmp
in
rcl
ret
mov
sarl
ret
xchg
mov
mov
dec
icebp
aad
out
jmp
arpl
sub
mov
jnp
adc
mov
fisubs
dec
sbb
cmp
shl
xchg
cmpsb
movsl
incb
xor
shlb
xor
arpl
sub
imul
cmp
sbb
pushf
jne
or
pop
lds
mov
push
gs
mov
mov
adc
cmp
push
dec
movsl
xlat
imul
mov
popa
cmc
push
movsb
jp
cmp
mov
in
mov
in
pop
mov
mov
or
inc
lahf
xchg
push
icebp
in
fldenv
mov
es
in
roll
cltd
and
add
mov
loope
popf
fwait
aas
rcrl
and
xchg
lret
cmpsl
cmp
jne
ret
push
xor
lahf
mov
ss
and
iret
cmpsl
xor
jne
mov
in
icebp
inc
mov
aad
popa
jmp
stc
push
pop
fwait
int
icebp
cmp
leave
xchg
xor
adcb
cmp
sub
xor
adc
sahf
pop
cmp
andl
test
cmp
push
push
xchg
and
mov
and
mov
sub
mov
adc
inc
cmp
mov
mov
sub
aas
pop
pop
xchg
push
mov
scas
xchg
test
ss
cmp
mov
mov
sub
lds
or
sbb
aas
xor
cmp
cltd
rcr
es
sbb
push
sbb
xor
pushl
mov
andb
mov
mov
dec
push
and
mov
push
pop
ja
cli
rorb
inc
sbb
cltd
imul
in
sarb
jno
movsl
out
and
xor
out
dec
leave
loope
adc
cmp
push
inc
std
jg
iret
pop
sbb
xor
mov
iret
shrl
jle
jecxz
mov
xchg
ret
aad
insb
inc
fisubrs
cs
cmpsl
mov
push
xor
aas
mov
sarb
ficoml
sub
insl
ja
push
stos
mov
movsl
es
imul
lods
xchg
sub
insl
xor
mov
fs
push
sbb
popf
out
mov
mov
int
in
movsb
add
outsl
stc
ficomps
ror
pop
and
cmp
dec
pop
movsl
sarb
push
aad
adc
cmp
xchg
leave
aas
cmp
repz
jmp
mov
icebp
js
dec
xchg
imul
or
divl
jbe
fldcw
xor
fstps
push
repnz
xor
mov
out
dec
or
loope
jnp
fstps
push
adc
mov
movsl
mov
dec
test
fwait
scas
andl
rcrb
dec
lahf
and
inc
xor
push
add
xorl
jae
xchg
mov
movsl
push
jbe
fisubl
out
stc
jge
cmp
dec
push
sbbb
mov
shrl
mov
sbb
daa
inc
test
mov
xchg
sub
lds
mov
xchg
and
xchg
mov
dec
adc
push
dec
int
xchg
mov
push
xor
push
cmp
mov
cmp
pop
mov
and
push
mov
push
add
mov
dec
leave
mov
or
jne
jbe
in
fwait
outsb
test
fisttpl
inc
ds
inc
pusha
sbb
test
aad
and
sub
jns
jge
dec
ret
fidivrs
aad
nop
adc
push
aad
ljmp
or
xchg
pusha
xor
mov
inc
push
adcb
test
movsl
rcr
orl
psrad
push
push
ljmp
in
pop
inc
lahf
push
daa
cltd
pop
clc
lea
push
insb
xor
std
stc
arpl
push
push
aaa
xor
lods
mov
lcall
jmp
xchg
iret
lds
ljmp
dec
mov
mov
sub
lods
sub
subb
pop
push
sub
adc
stos
sbb
jo
sahf
sbb
jmp
pop
mov
adc
push
cs
scas
test
inc
or
movsb
ret
test
aaa
mov
or
lods
jb
mov
xor
fiadds
fldenv
pop
mov
out
insl
fldcw
dec
mov
je
out
out
push
pop
dec
cmp
test
adc
xchg
sarb
mull
xchg
sbb
push
call
pop
fstpt
mov
aam
imul
aad
ret
les
std
repz
cmpsl
push
dec
sbb
push
xor
in
movsl
imulb
shr
fmuls
mov
xor
fwait
adc
test
popa
sub
movsb
cltd
popf
movsb
mov
hlt
aad
mov
ret
aad
adc
movsb
stc
and
test
test
cmp
cmp
loope
cmpsl
out
scas
jns
roll
data16
mov
dec
xor
pop
test
push
lret
in
cmp
jle
movsl
or
mov
push
add
pop
push
es
test
movsl
std
and
cld
jmp
loope
sub
imul
mov
hlt
ljmp
cmp
mov
xor
decb
loope
sub
xor
lods
gs
adc
cmp
scas
sub
pop
add
xchg
test
iret
inc
stc
push
call
sti
xchg
cld
sti
fwait
pop
jns
mov
mov
test
faddp
inc
cmp
stc
enter
add
push
scas
data16
in
cli
movsb
outsb
cmc
mov
je
pushf
dec
xor
notl
mov
aam
mov
pop
out
ret
lcall
xor
fidivrs
and
movsl
mov
jb
cmp
adc
idivb
push
or
pop
jmp
fsubrl
popa
iret
add
jns
sbb
jp
mov
lahf
xchg
adc
ret
and
movsl
and
push
imul
mov
add
iret
or
dec
lret
mov
adc
adc
add
gs
leave
and
xor
mov
dec
and
and
insl
pop
mov
sbb
xor
push
push
outsl
adc
jne
and
das
push
in
sbb
aaa
je
repnz
aam
dec
adc
sbb
sbb
mov
adc
jne
ja
repz
jo
in
sub
push
and
dec
ja
mov
sub
and
mov
leave
inc
jecxz
pop
push
mov
xor
fimuls
outsl
adc
mov
xchg
mov
jmp
icebp
sbb
daa
sbb
mov
mov
and
popa
and
dec
add
ret
lods
adc
data16
mov
fsubs
adc
pusha
lods
negb
addr16
xor
adc
mov
jle
mov
scas
fcoml
testb
inc
enter
aaa
and
adc
test
scas
in
xchg
mov
bound
pop
mov
or
inc
hlt
imul
mov
mov
jl
xchg
shlb
jbe
dec
mov
pusha
xchg
jno
sti
and
lcall
mov
cmpsb
je
cmpb
leave
dec
cmp
and
insl
mov
mov
xchg
mov
cmc
mov
shll
xor
xchg
push
movsl
pop
movsb
sarb
xor
movsb
cld
dec
test
xor
icebp
cmc
in
adc
mov
mov
lcall
insl
cmp
or
std
and
aas
scas
mov
mov
jle
mov
rclb
pop
jp
addr16
and
or
ljmp
push
or
add
xor
and
daa
loope
sub
and
iret
xor
mov
sbb
clc
lods
mov
adc
push
cmp
cmp
cld
dec
xchg
sbb
pop
cmp
in
popa
mov
in
cmp
xor
lret
mov
pushf
adc
arpl
mov
sub
and
testb
popa
cmp
cmp
mov
call
mov
push
cltd
push
and
push
call
inc
adc
fs
adc
testb
pop
inc
fs
jp
lcall
hlt
lcall
stc
xchg
jp
loope
flds
pushf
mov
out
and
addr16
stc
dec
stc
mov
jno
ret
add
jo
out
test
pop
cmp
add
jno
shll
jno
and
push
hlt
fmul
add
jg
mov
and
out
pop
adc
cmp
popa
cld
out
inc
pop
lret
jmp
int
outsb
push
adc
lahf
dec
pushf
adc
cmp
rdmsr
sbb
inc
rcrb
mov
cmp
mov
xchg
cmp
cld
pop
fld
mov
test
stc
xor
mov
insb
cmp
mov
cmp
mov
add
xor
ds
maxps
pushf
imul
jmp
push
roll
out
stc
movsb
popa
sbb
and
cmp
rcr
movsl
push
mov
mov
call
arpl
ss
mov
mov
imul
push
adc
cmp
scas
xor
out
adc
cmpsl
cmp
and
in
pop
mov
cli
mov
into
sub
cmpsl
in
iret
push
adc
out
adc
adc
in
and
cmp
mov
dec
and
jo
mov
fiaddl
addr16
bound
out
or
fldt
rcrb
icebp
or
cmp
andb
les
pushl
mov
sbb
mov
and
fs
and
and
xchg
arpl
sbb
in
xor
cmp
sbb
loop
cmp
and
cmpb
pop
and
dec
inc
dec
ja
fldl
mov
sub
fsubrs
dec
sub
hlt
imul
dec
pop
int3
jmp
movsl
jne
and
adc
addr16
adc
and
movsl
out
mov
lcall
das
and
bound
xor
bound
pop
test
cmc
icebp
lods
icebp
mov
or
fucompp
or
cmp
shl
sbb
adc
mov
lret
sbb
adc
mov
mov
adc
hlt
cmp
nop
mov
sbb
int
pop
xor
in
xchg
into
mov
add
xchg
popf
cmp
dec
rorb
xchg
xchg
xor
mov
adc
adc
stos
sub
movb
mov
movsl
in
call
pop
fdivrs
or
adc
xor
pop
adc
adc
jo
sti
push
adc
cmc
std
adc
int
add
into
and
lahf
cmp
fwait
leave
leave
int
sub
and
and
xor
xorb
mov
pop
inc
inc
sbb
iret
mov
or
outsb
sub
inc
cmp
in
or
outsb
call
cmp
add
xor
add
dec
mov
inc
add
cltd
push
cmp
icebp
push
xor
push
and
inc
inc
adc
xchg
dec
arpl
push
stos
mov
repz
xor
jns
pop
fwait
dec
arpl
xor
cmp
xchg
dec
std
sarl
imul
pop
inc
pop
sti
stos
sub
popa
adc
test
push
jl
or
into
jbe
adc
mov
jno
clc
xchg
push
jb
dec
ret
xor
dec
shl
je
or
scas
push
mov
adc
jp
or
mov
call
je
push
iret
mov
jle
shlb
inc
xchg
test
add
push
push
cmpl
lods
cs
je
cmpb
add
mov
mov
aas
mov
test
pop
push
and
lods
sub
rolb
test
mov
jne
test
jb
mov
sbb
je
pop
shlb
xchg
mov
pop
xchg
push
inc
jl
push
test
clc
adcb
mov
jle
mov
add
inc
xchg
sahf
pop
pushf
fcmovbe
mov
movsb
mov
mov
int3
out
sbb
ds
xchg
sbb
pop
cs
cmp
shll
mov
orb
nop
mov
sarb
push
repz
mov
jae
gs
push
adc
bound
mov
mov
mov
cltd
mov
jno
cmp
xchg
mov
aaa
push
insl
cs
xor
jbe
mov
add
cltd
subl
in
out
addb
mov
dec
push
cmp
and
icebp
test
loope
icebp
xchg
cmp
adc
mov
test
and
xchg
lahf
mov
add
mov
fisubs
int3
xchg
dec
in
or
xlat
mov
jmp
xchg
mov
mov
push
dec
mov
js
nop
adc
mov
fs
scas
dec
into
andb
mov
xchg
and
nop
out
hlt
jb
jnp
sbb
push
push
popa
movsb
mov
sbb
mov
dec
push
lods
out
lcall
mov
push
xchg
mov
into
pop
mov
pop
negl
cmpb
pop
pop
pop
xor
je
mov
cmp
shl
add
mov
adc
hlt
leave
stos
inc
xchg
xchg
pop
xchg
call
xor
dec
cltd
xor
les
std
adc
bound
fwait
popf
adc
mov
xor
and
cwtl
ja
pop
movsl
lds
inc
inc
or
pushf
inc
mov
mov
mov
dec
mov
sbb
sub
inc
sarb
nop
les
aam
sub
lods
bound
add
push
cmp
dec
xor
imulb
mov
call
call
sub
sbb
sbb
aas
xor
pop
inc
sub
mov
sbb
gs
gs
lods
outsl
in
mov
test
aad
cmp
dec
shll
aaa
xchg
add
call
adc
scas
inc
inc
xchg
push
mov
xor
jno
loope
and
jne
xchg
sbb
cltd
jge
xor
jno
sub
popa
outsl
inc
fidivrl
xchg
popa
jnp
ljmp
sub
adc
repnz
jge
iret
pop
shl
sarb
inc
pop
leave
xor
stos
imul
mov
popa
dec
sub
stos
leave
pop
adc
lea
sahf
or
imul
and
jno
cli
loope
sbb
jno
sbbl
sub
aam
xchg
jp
cltd
pop
inc
sbb
push
sub
pushf
xlat
add
xchg
cmc
mov
inc
fstpl
and
mov
dec
fwait
jmp
sbb
in
xor
pop
mov
xor
fdivp
shlb
lahf
xor
mov
ret
ss
xchg
mov
popf
shr
pop
cltd
push
inc
jg
sub
push
jle
imul
and
adc
pop
mov
jge
in
adcb
add
outsb
add
sar
aam
fwait
orb
dec
xchg
popa
adc
pop
imul
sub
lret
dec
aaa
lea
stc
sbb
jns
imul
fnstenv
pop
addr16
xchg
sub
xor
sbb
mov
sbb
pop
and
adc
jmp
xor
sbb
and
xor
and
pop
push
and
cmp
loope
imul
xor
xor
xchg
ljmp
mov
loope
mov
das
mov
sahf
mov
inc
mov
jl
notb
iret
mov
mov
repnz
icebp
inc
sbb
xor
arpl
movsl
dec
and
aas
cmp
fs
push
adc
and
sbb
push
push
sbb
sbb
pop
insl
jge
sbb
and
inc
mov
and
and
ficomps
inc
push
cmp
fisubrl
lds
push
xor
cltd
jmp
sbb
mov
pop
cltd
leave
and
xor
and
test
mov
sub
mov
inc
xor
push
xor
xor
cmp
push
cmp
xor
inc
xchg
inc
outsl
je
inc
cltd
sub
and
dec
sbbb
push
xor
cli
xor
push
repnz
push
ljmp
mov
mov
popa
xor
mov
cltd
addr16
and
xor
xorb
and
xor
bound
push
and
xor
inc
xor
push
cmp
sub
adc
jecxz
out
jmp
out
inc
sti
std
cmp
add
cli
adc
and
sub
daa
sbb
cmp
pop
and
aas
xor
fildl
jmp
stos
stc
xchg
adc
pop
pop
push
dec
inc
inc
adc
dec
inc
imul
gs
popa
pop
jno
imull
ja
outsl
arpl
push
push
sbb
jmp
fldl
shr
fistl
inc
inc
inc
inc
dec
dec
dec
dec
sub
or
and
adc
inc
inc
adc
dec
xchg
mov
push
xchg
adc
sbb
adc
pop
inc
cmp
inc
cmpsb
adc
arpl
cmp
sbb
adc
cmp
and
cmp
push
out
adc
idivb
popf
daa
xchg
or
in
sub
adc
push
mov
mov
jae
xchg
pop
jbe
dec
and
xor
jg
xor
cmp
aam
push
movsb
inc
sub
lahf
and
popa
dec
lret
adc
and
sbb
adc
aad
aas
pop
inc
and
inc
sbb
jne
jno
js
or
dec
lahf
adc
pop
pop
adc
cmc
adc
add
movsl
and
jge
out
push
pop
cmp
mov
xchg
pop
adc
pop
adc
arpl
gs
adc
ficomps
in
pop
inc
mov
jne
jnp
popa
mov
adc
dec
push
jg
mov
jnp
arpl
gs
jl
adc
adcl
push
xchg
inc
jbe
xor
mov
and
inc
leave
adc
sub
inc
pusha
adc
adc
pushf
mov
jo
and
lds
jne
mov
adc
jmp
and
jg
andl
andl
adc
adc
gs
imul
add
mov
xchg
adc
arpl
dec
rorb
adc
inc
adc
fwait
lahf
cmp
push
testb
inc
sbbb
lahf
stc
push
loope
inc
adc
aas
adc
inc
shll
adc
dec
loope
mov
adc
xchg
stos
push
lods
push
adc
xor
inc
jbe
mov
dec
push
and
mov
adc
xchg
mov
pusha
fsubrl
adc
xor
jnp
sub
mov
adc
mov
inc
mov
rcll
adc
add
adc
fadd
arpl
in
leave
adc
lcall
int
push
arpl
xor
inc
sbb
sub
adc
jbe
jg
imul
mov
sub
xlat
cmp
sub
inc
jnp
adc
fistl
add
aas
inc
adc
ja
sbb
std
xchg
stc
jecxz
and
jbe
out
and
jmp
xor
and
xor
je
adc
stos
cmp
and
and
pop
dec
pop
mov
adc
add
jae
outsb
jne
loope
jl
pop
mov
xor
insl
push
mov
or
mov
adc
cltd
push
and
inc
or
push
sbb
push
or
mov
cmpsl
adc
adc
scas
cmpsb
dec
adc
adcl
mov
cmpsb
dec
adc
jno
adc
les
push
arpl
loope
mov
sbb
adc
adc
sub
sub
cmp
jne
inc
inc
jl
xor
jbe
cmp
cs
repnz
sub
mov
mov
cmp
inc
sbb
add
add
mov
sbb
adc
cmc
sub
sub
insl
fdivrs
andb
dec
mov
xchg
inc
adc
dec
xor
inc
dec
adc
jno
jne
inc
adc
jnp
push
dec
adc
push
iret
adc
mov
and
sbb
sbb
push
adc
xchg
push
push
pop
adc
adc
inc
pop
xchg
pushf
jne
jge
pop
mov
pop
mov
pusha
and
sub
sbb
adc
cltd
outsl
jae
xor
insl
notb
data16
aaa
push
cmp
in
jg
adc
adc
dec
sub
je
mov
dec
inc
sbb
dec
popf
js
fists
dec
loopne
fidivrl
jne
mov
adc
adc
imul
dec
lahf
insl
push
popa
inc
add
add
sbb
jno
cmpsb
fidivrl
lahf
push
sbb
sbb
test
or
xor
sub
mov
cmp
push
inc
add
das
sbb
adc
sub
adc
jae
push
pop
in
mov
mov
push
push
or
or
adc
sub
sahf
aam
jge
push
and
movsb
cmp
mov
adc
cmp
imul
jbe
mov
sub
popa
adc
add
mov
adc
mov
jae
mov
pop
inc
mov
jg
xchg
mov
mulb
sub
adc
jno
ret
adc
sbb
mov
dec
int
inc
jge
popa
sbb
dec
jne
aas
xor
push
imul
dec
adc
jnp
push
jne
pop
enter
pop
adc
sub
lret
clc
dec
hlt
inc
int3
rclb
push
lods
sbb
sub
inc
and
pop
sar
popa
pusha
adc
jne
aam
dec
xor
pop
cmp
sbb
fcoms
dec
xor
adc
cmp
sub
adc
std
loopne
loop
in
sub
dec
call
adc
adc
in
adc
jmp
xlat
jns
arpl
stc
inc
mov
mov
hlt
popa
xchg
jnp
push
cmp
testb
cli
push
cmp
adc
mov
adc
mov
imul
mov
hlt
mov
cmp
adc
testb
add
mov
adc
dec
lds
push
arpl
xor
sub
jno
cmp
xor
mulb
xchg
outsl
push
pop
add
inc
mov
push
gs
imul
sub
sbb
jnp
adc
or
adc
lods
sub
inc
lods
sbb
xor
dec
adc
mov
pushf
dec
addr16
xchg
push
sbb
jns
sbb
xor
jge
sub
and
nop
and
daa
push
sub
inc
sub
cmp
imul
and
addr16
mov
adc
mov
adc
cmp
les
mov
adc
fistpl
adc
cmp
aas
sub
arpl
pushf
gs
mov
inc
inc
loope
cmp
inc
adc
and
adc
dec
xor
push
insl
sub
sub
dec
cmpl
jae
push
loope
lods
adc
push
xor
push
mov
adc
push
push
and
pop
popa
addr16
sbbl
xchg
pop
mov
cmc
adc
push
flds
arpl
inc
inc
push
xchg
dec
addr16
push
fs
jns
sbb
dec
testb
dec
ljmp
push
adc
in
inc
pop
adc
jns
push
adc
sbb
ja
jns
jns
jmp
inc
or
inc
jnp
pushf
gs
add
pop
fwait
popa
popa
adc
andl
dec
adc
adc
xchg
inc
pop
jns
xor
popa
sub
sub
cltd
jne
sub
adc
xor
jge
adc
popa
adc
and
fnstcw
fwait
pop
movb
xor
cltd
mov
icebp
outsb
adc
adc
xchg
sub
imul
xchg
cli
lahf
adc
dec
push
rclb
jbe
adc
and
add
adc
aad
mov
imul
mov
pop
add
xchg
jge
repnz
cmpsl
inc
xchg
jno
leave
inc
das
jno
jge
sub
sbb
cmova
imul
push
xchg
mov
jg
imul
pop
add
sbb
fnstenv
ja
stc
jge
cltd
aas
inc
and
pop
inc
jmp
adc
xor
orl
sub
push
sub
sub
jnp
sbb
stos
push
dec
addb
inc
inc
inc
mov
jno
addr16
popa
sbb
cmp
push
jge
and
icebp
pop
popa
scas
adc
inc
aam
xor
pop
das
shlb
sbb
push
shll
sub
mov
mov
imul
inc
sbb
jnp
addl
dec
mov
and
jne
fisubs
xlat
aaa
mov
cmp
push
xchg
xchg
jne
popa
sub
mov
mov
aad
stos
ss
sbb
adc
dec
pop
push
sbb
insb
neg
in
inc
jno
cli
outsl
xor
in
jecxz
cmp
push
sbb
shr
pop
inc
dec
push
xor
pop
popa
stc
sbb
mov
xchg
xorl
xor
xor
gs
adc
cs
sbb
addl
xchg
pop
xor
stc
push
mov
or
and
adcb
sbb
pop
pop
push
pop
jnp,pt
push
jne
in
pop
mov
mov
lret
sbb
jecxz
mov
mov
aad
jp
imul
mov
xor
rcrb
cmp
jno
loop
push
and
jg
mov
xor
and
jne
aad
pop
out
pop
outsb
and
loop
das
and
aad
daa
pop
xchg
add
sbb
dec
cmc
sub
inc
dec
sbb
dec
and
bound
push
pop
loope
and
mov
mov
and
pop
and
jb
outsl
pop
popa
and
xchg
xor
adc
xor
and
sub
xor
adc
fwait
push
dec
in
pop
mov
lds
jp
sbb
push
dec
dec
pop
and
jge
mov
dec
mov
pop
mov
mov
sbb
cltd
and
cmp
pop
mov
loop
jnp
sbb
das
push
lret
sub
push
loope
imul
xor
movsl
jge
add
xchg
movsl
dec
movsl
dec
and
pop
pop
lea
popa
sbb
push
ret
cltd
pop
movb
mov
sub
adc
pop
rcrl
aad
test
adc
sub
pop
mov
inc
xor
gs
push
mov
push
jecxz
andl
cwtl
mov
mov
and
inc
cmp
sbb
ficoml
push
pop
push
xor
push
sub
inc
xchg
xor
jb
and
dec
frstor
jbe
bnd
movsl
xchg
jo
pop
stc
sbb
lds
pop
xor
adc
ret
mov
pop
xor
inc
jecxz
movsl
sbb
jb
push
jbe
ret
mov
jns
and
cmpsb
push
sbb
push
and
and
and
and
pop
adc
popa
xor
jno
aas
sbb
pop
and
fiadds
cwtl
addl
imul
jg
inc
push
out
ss
inc
shrl
popa
ret
xor
inc
inc
xor
int
jb
sbb
inc
int3
stc
jns
sbb
loopne
cmp
push
hlt
mov
jmp
jmp
iret
addr16
adc
jmp
gs
in
adcl
xchg
xor
insl
push
jnp
jne
imul
sbb
cmp
pop
outsl
mov
adc
arpl
xchg
push
xor
pop
inc
push
stos
arpl
rclb
push
adc
jle
pop
in
daa
aaa
jne
idivb
add
push
aaa
mov
loop
repz
test
mov
cmc
push
xor
jb
bound
xor
adc
insl
aaa
stc
sub
or
xor
sti
imul
xor
cmp
mov
push
ret
movsb
mov
sbb
adc
pop
ss
dec
jmp
mov
and
hlt
cmp
daa
and
inc
sub
pop
cmp
out
pop
fwait
pop
jbe
push
push
jle
addr16
jmp
inc
test
cmp
fcmovb
sbb
and
pop
push
jns
sub
cmpsl
push
daa
sbb
das
ret
sub
stc
fwait
imul
or
push
push
aad
and
das
shufps
int
jns
xchg
push
or
rcrb
adc
and
movsl
push
cld
mov
inc
outsb
test
sbb
leave
test
xor
and
loope
xor
pop
jg
jle
push
jns
mov
dec
in
jmp
sbb
test
push
mov
cmp
xchg
sbb
push
inc
adc
cmpsl
sbb
lods
sub
into
sbb
mov
inc
flds
xor
xchg
cmp
cmp
ret
sub
sub
gs
daa
sub
cmp
adc
add
cmp
jno
popa
inc
xor
fisubl
bound
inc
pop
cmpl
dec
jbe
pop
inc
outsl
inc
inc
mov
sbb
rcll
and
jnp
hlt
inc
repz
mov
push
fstl
and
outsl
movsb
pop
adc
es
sbb
pop
ja
sbb
push
mov
pop
pop
xor
add
xchg
push
lahf
mov
movl
cmp
popa
and
ficompl
test
iret
cmp
mov
movb
and
sbb
jge
adc
inc
in
stc
int
loope
das
push
pop
std
cmp
cmp
jmp
lret
jnp
push
mov
dec
sub
adc
push
cmp
and
cmp
mov
das
sub
jae
imul
sub
and
popf
inc
aaa
pop
push
pop
dec
int
mov
cmp
mov
mov
jbe
mov
sub
adc
test
sbb
ja
aas
pop
sub
stos
cltd
push
mov
daa
pop
inc
adc
jb
jno
sub
cmpb
aad
aad
mov
cmp
push
ds
cmc
xchg
lret
sbb
insl
mov
add
push
jge
xlat
shrl
adc
xchg
movsb
push
pop
imul
xchg
stc
push
aad
ds
imul
xchg
inc
jle
movsl
jns
int
push
rcrl
adc
inc
cmp
xchg
mov
cli
xor
out
gs
and
loope
push
mov
stos
outsl
movsb
dec
fwait
mov
mov
lret
ss
insl
cmp
lret
xor
in
aad
and
sbb
jmp
shl
mov
sub
adc
pop
repnz
rorb
gs
cmpsb
mov
cmp
imul
pop
cmp
ds
mov
xor
pop
push
rclb
sub
pushf
leave
out
sbb
push
pop
outsb
pop
imul
rcll
adc
stos
cmp
jge
imul
imul
adc
cmp
lret
inc
and
test
sub
dec
dec
push
xacquire
push
pop
bound
roll
xchg
in
sub
nop
push
popa
mov
cwtl
mov
ja
test
sbb
dec
mov
mov
pop
std
pop
sahf
arpl
pop
mov
imul
jb
sub
mov
mov
dec
jge
sub
pop
das
in
inc
mov
pop
and
dec
cmp
cld
pop
adc
adc
dec
pop
cmp
xor
popa
adc
xor
cs
dec
jb
jb
mov
aas
cmp
push
xchg
and
int
bound
gs
push
sub
movsb
jb
mov
xchg
imul
xor
aad
shl
adc
xor
xchg
cmpsl
pop
pop
sbb
sbb
movsl
sbb
jnp
nop
push
lods
inc
push
popa
dec
outsl
adc
jns
imul
jns
jno
sbb
imul
cmp
loope
sbb
jl
xchg
push
jne
fisubl
ss
pop
arpl
cmp
jne
mov
outsb
cmp
out
inc
cli
mov
push
loop
xlat
sub
mov
fldcw
push
cwtl
insl
dec
mov
add
mov
push
sub
and
mov
sbb
xchg
push
out
mov
adc
jge
pop
mov
xor
adc
jno
dec
je
sbb
dec
ja
lcall
pop
adc
sbb
imul
imul
stos
inc
pop
sbb
push
stos
and
push
sbb
sbb
hlt
push
jae
jns
daa
ss
add
insl
aas
dec
pop
jne,pt
sub
sbb
sbb
mov
imul
sub
loope
pop
adc
sub
cltd
jle
push
mov
sub
and
xchg
pop
loop
in
pop
rcll
cmc
xor
jns
cwtl
popa
pop
mov
xchg
push
sub
xor
add
jle
xor
std
and
jno
jns
cmp
mov
stos
in
push
roll
movb
adc
xor
mov
push
sbb
push
and
cltd
pop
outsb
push
inc
dec
add
in
pop
mov
xor
fstl
adc
popa
adc
sbb
sbb
mov
pop
scas
jae
add
jb
leave
arpl
aaa
aaa
jne
xchg
dec
pop
pop
jbe
out
sbb
sbb
cmp
jne
sub
hlt
arpl
imul
orb
mov
mov
push
pop
and
and
jae
mov
in
mov
inc
sub
xchg
xor
icebp
push
rcrb
push
inc
outsb
or
mov
jne
outsb
sbb
xchg
into
stos
and
xor
in
imul
test
data16
pop
sbb
or
inc
jo
xor
stos
in
inc
in
and
xor
mov
and
jp
cmpsl
dec
sbb
in
mov
xchg
jb
shll
je
jbe
push
push
adc
cmp
xor
icebp
jmp
mov
popa
jb
jae
sbb
add
imul
popa
in
xor
inc
mov
shrl
inc
dec
inc
adc
mov
mov
and
dec
adc
pop
dec
ret
push
mov
cmp
cmp
cmc
sub
imul
add
iret
pop
push
pop
incb
xchg
js
xchg
mov
pop
sbb
push
jp
leave
xchg
es
xor
xorb
arpl
aad
movsl
dec
add
ljmp
jle
fcomps
addl
hlt
bound
sub
lahf
mulb
fidivrs
adc
dec
dec
movsl
andl
popw
cmpsb
lea
jnp
xchg
in
sbb
push
lods
addl
or
mov
pop
das
xchg
cli
and
xchg
in
ret
dec
aad
das
pop
sub
pop
rcll
pop
orl
mov
jge
xchg
inc
mov
cmp
cmpsb
cmp
pop
ja
outsl
aam
dec
inc
repnz
rcll
mov
mov
insl
inc
cmp
lds
leave
inc
nop
xor
sub
push
xor
xor
xor
into
xor
jno
jnp
xor
roll
cmp
dec
xchg
out
sahf
lods
popa
sbb
xlat
push
xchg
mov
mov
cmp
mov
lret
sbb
cmp
pop
adc
addr16
cwtl
fstp
dec
jecxz
ljmp
and
dec
popa
add
inc
lcall
jb
in
dec
sub
xchg
inc
xchg
inc
aam
inc
bound
sub
push
sbb
jno
pop
xchg
push
dec
pop
push
xchg
mov
stos
addr16
jns
sbb
jae
or
ret
sub
mov
and
pop
lret
or
inc
xor
ret
data16
sub
imul
sub
inc
je
jge
mov
lcall
mov
pushf
in
stc
mov
or
push
movsl
mov
xchg
adc
cltd
xchg
and
mov
mov
sahf
pop
ret
es
aas
mov
inc
inc
cmp
xor
nop
imul
sub
out
mov
pop
movsb
add
rcrl
push
stc
rcrl
mov
jne
mov
outsb
xchg
mov
and
sub
pop
push
ss
mov
jno
push
mov
loope
and
test
pop
popa
test
aaa
in
cltd
pop
mov
dec
adc
mov
inc
popf
jmp
ljmp
sbb
pop
sub
mov
das
mov
xor
cmp
jp
sbb
sbb
sub
cs
cmp
outsb
cltd
and
xor
jns
cmp
xor
push
xor
daa
jns
sbb
movsb
adc
and
popa
into
push
pop
xchg
inc
adc
mov
imul
addr16
fnstsw
int
outsb
mov
in
xchg
pop
mov
mov
push
cmpsb
add
push
lret
test
xor
jbe
pop
add
adc
sbb
fldenv
mov
stos
imul
fildl
jno
test
sbb
out
in
sbb
cmc
out
cmp
repnz
subb
jge
dec
xchg
pop
jg
jne
pop
cmp
and
pop
xor
sbb
sub
and
shll
adc
movsb
mov
mov
push
push
sub
jno
loope
mov
pop
adc
aaa
das
or
push
mov
mov
mov
mov
inc
dec
push
jmp
mov
push
pop
imul
movsl
sub
adc
mov
dec
push
daa
xchg
stc
outsl
push
scas
jae
popf
or
pop
pop
insl
add
pop
stos
pop
movsb
cmpsb
pop
pop
popa
lcall
inc
outsl
cmp
push
xchg
xor
leave
xchg
inc
mov
and
pop
adc
pop
and
jnp
cmp
loope
jns
mov
xlat
dec
je
pop
cmpsb
leave
jbe
cmp
sbb
stc
jne
roll
xor
sbb
dec
sub
out
punpcklwd
xor
xchg
bound
sub
pop
lcall
cmp
cli
sub
arpl
xor
cmpsb
xchg
sub
mov
ficoml
fdiv
mov
jmp
and
push
loope
outsb
aaa
sti
out
sbb
inc
rorb
cmp
sub
mov
cmp
jmp
test
pop
aaa
xchg
push
outsl
insb
xor
sub
xchg
popa
mov
addr16
stos
cmp
cmpsl
mov
xor
fs
icebp
gs
outsl
jns
gs
and
xchg
cltd
movsl
mov
xchg
mov
dec
xchg
lret
pop
xchg
scas
aas
xor
enter
mov
dec
fidivrl
xor
mov
inc
aam
fcompl
mov
cmp
mov
jecxz
xchg
out
sub
imul
dec
ret
push
xor
sub
in
pop
mov
pop
sbb
cmp
aas
ret
and
test
inc
daa
outsl
and
mov
sub
mov
xor
jns
sub
in
std
rcll
lods
cmp
jge
addb
mov
movsl
imul
outsl
sub
adc
push
ljmp
push
dec
aad
push
pop
inc
sub
cs
movsl
aaa
pop
xchg
or
arpl
fdivp
enter
sub
xor
je
jns
xor
into
lret
lods
aad
popa
pop
fisubl
and
mov
addr16
lds
sbb
xchg
jle
call
dec
and
inc
daa
mov
out
ret
jmp
test
xchg
cmp
icebp
and
leave
jge
das
gs
int
lea
pop
and
push
icebp
out
cld
cmp
fnstenv
stos
lret
icebp
mov
adc
outsl
xchg
or
dec
cmpsb
push
jecxz
pop
pop
pop
clc
loop
mov
sub
jnp
xchg
cltd
adc
xchg
adc
xchg
pop
outsl
push
cwtl
and
cmp
insl
imul
push
sub
mov
dec
jno
sbb
or
ret
test
xor
ljmp
leave
out
jns
sbb
adc
jmp
and
jae
negb
in
push
pop
daa
cmp
fsubp
jns
inc
and
dec
loope
jp
pop
test
dec
rorl
xor
sbb
sub
imul
or
insl
adc
pop
jae
bound
jno
dec
inc
test
push
scas
mov
and
dec
xchg
or
dec
nop
shll
add
push
sub
mov
sbb
dec
xor
fs
or
and
out
gs
push
sbb
sub
jg
xchg
adc
aaa
fs
sbb
jge
sbb
stc
push
enter
bound
pop
cmc
mov
sbb
repnz
sbb
push
int3
sub
pop
mov
fs
xchg
sub
mov
mov
ja
jnp
sbb
cmp
aaa
push
adcb
jl
hlt
dec
jle
and
and
pop
push
or
pop
sbb
in
fidivrs
jo
cmpsb
jne
or
dec
push
jg
push
xor
jns
push
sub
jns
and
xor
pop
sub
jae
xchg
jae
jge
cmpsb
pop
sbb
pop
push
dec
xor
jg
stos
mov
push
es
out
adc
and
mov
sub
push
jae
sahf
lea
dec
sub
cli
inc
out
jmp
inc
sub
sub
push
cmp
out
sub
pop
xor
push
mov
jl
popf
iret
pop
inc
sbb
jns
xchg
push
test
xor
ds
mov
gs
sub
push
mov
sub
jecxz
sub
jge
sbb
ja
push
xor
jg
sub
int3
inc
cmp
sbb
sbb
push
sbb
sbb
adc
stc
mov
inc
xor
jnp
push
sub
sbb
fldcw
mov
sbb
outsb
shrl
fwait
into
jnp
fcomps
inc
cmp
aaa
dec
xor
sub
inc
pop
sbb
mov
jp
sahf
mov
dec
push
jnp
aam
sbb
push
mov
xchg
xchg
in
ds
adc
dec
xor
jg
stos
xor
xchg
imul
bound
xor
sub
mov
lcall
dec
inc
pop
jp
or
pop
es
sbb
dec
sbb
movsl
xchg
push
bound
xchg
push
mov
and
push
fwait
push
xor
jnp
inc
fnsave
sub
loope
sbb
sbb
push
jb
push
jg
bound
inc
test
test
cmc
push
sbb
sub
jae
sbb
movsb
sub
sub
je
sbb
mov
fdivl
ds
sub
xchg
xor
cmp
lods
inc
and
xor
je
test
sub
dec
rcll
cltd
jg
add
mov
shrw
jno
imul
add
test
pop
push
in
xor
sbb
or
push
inc
test
sti
and
jo
xchg
aaa
loopne
pusha
sub
sub
inc
jb
cmp
sub
dec
sub
dec
shll
mov
arpl
imul
jp
xchg
stc
fdivrl
sbb
insl
sub
ror
and
inc
pusha
sub
add
jge
ds
jge
mov
adc
jecxz
and
aaa
insl
jbe
jle
push
sbb
and
cltd
jnp
push
pop
cmc
sahf
sbb
imul
sub
imul
push
inc
xor
icebp
dec
sbb
das
es
dec
push
sbb
pop
mov
pop
mov
and
cmp
test
sbb
push
iret
sbb
sbb
and
dec
sub
jae
inc
or
ljmp
out
and
push
xor
inc
es
icebp
ljmp
dec
or
push
cmc
dec
pop
cmp
les
adc
jle
xchg
imul
fstps
hlt
popa
jbe
lea
pop
sbb
test
mov
jp
cmp
xor
xor
hlt
mov
sbb
dec
push
stos
mov
push
inc
mov
es
xor
aas
stc
popa
test
iret
sub
push
movsb
jae
xor
lahf
pop
loope
mov
xor
pop
test
xor
mov
and
inc
sub
jg
sub
insl
movsb
add
jbe
aaa
outsb
pop
fidivrl
das
xor
jl
mov
je
xor
cmp
aaa
imul
test
xor
je
dec
inc
cmp
popa
fs
inc
aaa
xor
and
pop
dec
cmp
rorl
subl
mov
jecxz
ljmp
jg
cmp
pop
dec
xor
arpl
mov
and
ss
fisubl
dec
jp
push
mov
jns
and
cmp
ss
push
repnz
push
repnz
stos
xchg
mov
xor
sub
lea
popa
or
movsl
mov
inc
pop
xor
jmp
pop
pop
sub
imul
imul
aad
aad
adc
gs
mov
mov
sbb
ss
movsl
js
movsl
je
mov
push
sbb
inc
aad
sub
dec
sbb
shrl
ljmp
jno
pop
pop
jp
mov
sub
push
add
adcb
pop
mulb
pop
inc
push
popa
jae
imul
pop
add
push
jp
mov
fst
movsl
xor
or
xor
mov
sub
jge
test
adc
cmpsb
shll
jns
and
imul
and
in
mov
aaa
inc
jp
sbb
xor
cmp
add
lds
mov
mov
cmp
adc
pop
insl
mov
aad
and
imul
iret
sbb
test
ret
ljmp
mov
or
int
es
mov
add
push
in
in
xor
cmpsl
sub
in
and
add
add
sub
xchg
bound
xor
enter
aam
inc
int3
adc
fs
cmc
arpl
and
cmp
mov
and
and
xor
add
push
in
loope
es
in
stc
and
xor
icebp
xor
ja
xlat
push
and
cmp
cmp
arpl
push
and
cmp
lods
adc
adc
push
insl
shlb
jp
mov
mov
mov
sbb
imul
or
lret
or
loope
mov
je
mov
fcmovnb
adc
je
mov
cmp
nop
jp
and
add
sub
mov
mov
xor
in
push
adc
test
iret
loop
lods
mov
sahf
push
pop
xchg
inc
adc
ljmp
and
fsub
in
adc
mov
rorl
xchg
mov
loope
mov
sbb
push
dec
mov
jnp
aas
xor
imul
inc
dec
stc
add
in
std
inc
negb
pop
adc
mov
xor
xor
mov
mov
jno
popa
pop
push
mov
sub
cltd
add
push
rcrb
xor
jb
bound
cltd
inc
xor
xor
adc
push
add
xor
shll
adc
xor
jno
popa
push
push
cltd
inc
sub
sbb
xor
push
mov
lcall
cmp
icebp
cltd
fnstcw
pop
pop
mov
cli
lods
push
ficompl
xor
dec
pop
cmp
and
fwait
and
xor
mov
cltd
test
scas
pop
mov
mov
mov
mov
mov
mov
ds
scas
retw
imull
test
test
fisttps
or
fyl2x
and
mov
stc
cltd
sti
std
and
xor
push
jbe
sbb
add
fcmove
push
add
mov
xor
sub
mov
outsl
xor
sub
iret
push
add
mov
xor
adc
jns
cltd
fistl
or
es
jecxz
fucomp
popf
xorl
fidivl
adc
push
sbb
xor
idivb
lahf
ja
jne
jae
mov
scas
js
pusha
jo
mov
lret
out
cmp
and
dec
xchg
dec
inc
aam
cmp
pusha
xor
push
xor
mov
test
jg
jge
jnp
jns
ja
jne
xchg
outsb
fistps
iret
xor
scas
xor
xor
pop
push
pop
stos
mov
test
rcll
mov
cmc
mov
mov
mov
lahf
mov
scas
xor
mov
cmpsl
andl
push
lahf
xor
mov
ret
cmc
xchg
adc
scas
into
loop
aam
imul
cmp
lret
pop
mov
pop
mov
cli
mov
mov
mov
or
dec
jns
xorl
popf
mov
int3
jp
fnstsw
std
mov
cmp
pop
enter
out
fs
pop
pop
ret
xchg
pop
mov
insl
sbb
les
ljmp
out
pop
pop
rcrb
ljmp
add
jno
imul
and
mov
sub
imul
and
stos
lahf
fwait
jecxz
xchg
and
inc
push
nop
jl
push
test
or
lret
xor
aas
and
xor
leave
push
or
xor
add
push
add
xor
cld
nop
lcall
jns
divb
push
hlt
cltd
cmp
sub
mov
cltd
out
add
xor
mov
cltd
out
and
xor
lds
loopne
adc
cltd
loope
and
xor
fdivs
push
cltd
pop
aam
or
adc
xor
lcall
sub
xor
mov
push
pop
cltd
les
and
xor
rcll
xor
push
mov
sub
mov
loope
mov
xor
mov
imul
sbb
xor
cmp
xor
stc
xor
push
rcrl
xor
dec
xor
das
jp
and
push
xchg
jne
xor
nop
mov
stos
cltd
mov
pop
mov
sbb
xor
aad
jle
xchg
mov
jp
mov
push
jbe
jmp
jb
xorl
mov
lret
pop
or
repnz
or
push
sbb
jp
popa
push
inc
mov
push
cmp
mov
mov
mov
jb
adc
je
aam
push
imul
xor
jp
nop
popw
push
or
cmp
enter
shlb
jp
mov
data16
xchg
hlt
test
mov
push
push
pop
jno
test
or
jns
rclb
loop
mov
mov
jp
jp
mov
mov
pop
shll
mov
jb
jl
pop
shll
sarb
jl
mov
ds
leave
push
push
or
jbe
adc
push
sub
addr16
inc
xor
and
adc
sbb
push
popa
cmp
arpl
and
mov
pop
lds
and
mov
xchg
pop
shlb
ss
mov
pop
mov
inc
mov
jno
mov
imul
mov
xchg
shrb
push
cmc
mov
cmp
mov
pop
mov
mov
sbb
mov
mov
imul
mov
add
xor
xor
cmp
in
jbe
inc
loope
mov
repnz
mov
xor
sbbb
dec
nop
mov
lea
push
cmc
out
and
push
mov
adc
cmp
sub
push
cmp
outsl
dec
andl
push
enter
push
mov
sarb
inc
sbb
je
inc
fstl
push
lods
push
add
push
mov
aaa
push
popa
sub
jns
pushf
sbb
arpl
cmp
sub
stc
adc
lods
push
cltd
inc
xor
xchg
sahf
xor
xor
in
fs
xchg
fisubl
adc
andl
fldcw
scas
and
jbe
xchg
pusha
cmp
and
inc
jno
je
cwtl
cmp
jno
dec
subb
bound
sub
mov
bound
push
fisubrl
push
push
sub
addr16
scas
movsl
push
movsl
out
adc
and
andb
test
mov
std
push
cltd
push
imul
ret
adc
ret
fstps
arpl
sub
fidivl
sbb
dec
sbb
jle
cmp
push
jae
dec
xor
mull
fldenv
cmp
inc
div
ss
aad
pop
mov
cmp
test
es
xor
cmc
movsb
ds
js
lods
mov
jns
jbe
int
scas
mov
jp
data16
mov
pop
cmp
pop
mov
outsl
mov
pop
rolb
dec
imul
pushf
inc
clc
mov
ret
cmp
xor
xchg
orb
ret
dec
pop
cmp
outsl
setno
sti
cmc
mov
xlat
mov
adc
push
xchg
fcoms
pop
fucomp
lcall
push
and
jl
adc
lcall
lds
lods
push
cmpsb
lret
fldl
and
in
and
out
cmp
sbb
loop
sysexit
inc
cmp
mov
xchg
out
sub
repz
outsb
sub
movsb
mov
rol
mov
lahf
pop
mov
cmp
inc
fisttpll
mov
sbb
jbe
rclb
mov
fidivs
mov
pop
mov
mov
test
push
jle
sub
mov
mov
insl
or
cltd
leave
and
xor
shll
push
aad
adc
stc
jne
sub
cltd
add
and
xor
push
rcrb
test
loope
sbb
mov
nop
in
push
test
shll
push
push
pushf
ficoms
test
push
mov
sbb
pop
daa
xchg
xor
cmp
int
sub
imul
imul
jo
pop
outsl
fwait
arpl
xchg
mov
idivl
xor
mov
inc
inc
ret
andb
pop
inc
dec
xchg
test
jno
mov
movsl
mov
in
and
addb
andl
and
xor
cmpsb
sbb
and
stos
xor
xor
push
icebp
lods
xchg
or
push
shrl
mov
mov
cmpsb
sbb
push
xor
xor
shll
popa
xor
push
pop
xchg
cltd
inc
xchg
out
rcll
inc
or
ret
lods
xor
adc
xor
je
mov
dec
fnstenv
loop
adc
mov
xor
push
push
ret
or
mov
xor
mov
mov
mov
ljmp
mov
mov
cmp
ljmp
cltd
inc
mov
jb
and
xorb
xchg
mov
and
ret
sub
stos
or
mov
adcb
into
push
sbb
mov
xor
inc
jno
inc
mov
lret
inc
push
xchg
push
adc
sbb
mov
xor
sti
loope
jmp
movsb
outsb
aam
add
pop
and
cmpsb
fisubl
shlb
push
frstor
imul
jmp
movsl
mov
lahf
stos
loopne
adc
and
cmp
andb
fsubrl
xchg
push
je
inc
xor
cltd
clc
xor
aaa
jmp
pop
jns
inc
cmpsb
shll
mov
xchg
sub
inc
mov
jecxz
icebp
push
mov
push
testb
into
shlb
mov
jp
outsl
inc
popf
sbb
inc
clc
cltd
ds
and
jns
jecxz
in
pop
xor
shlb
sub
imul
arpl
mov
jns
inc
mov
mov
fbld
inc
xor
jl
add
loop
in
lea
push
adc
int
incl
mov
loop
inc
jge
mov
mov
idiv
dec
lds
les
xor
out
mov
adcl
push
test
in
or
dec
shlb
fwait
popa
mov
xchg
cmc
decl
push
ret
rolb
mov
inc
xchg
inc
aam
fwait
stos
cmpsl
test
dec
mov
mov
fbstp
bound
mov
cli
outsl
inc
pop
mov
dec
jae
push
push
dec
adc
test
push
lds
sbb
fists
lods
xchg
adc
cmp
inc
xchg
mov
xorl
pop
mov
dec
arpl
adc
add
gs
xchg
xchg
mov
mov
sub
adc
or
cli
jmp
jge
mov
gs
lahf
push
or
adc
filds
testb
mov
xchg
add
dec
ljmp
das
mov
xor
movsl
adcl
push
in
les
mov
fucomi
jp
mov
cwtl
xchg
scas
test
in
mov
loope
int
into
in
push
pop
push
cmc
sti
lret
push
pop
mov
sti
inc
xor
inc
and
es
and
pop
sbb
ret
dec
lret
cmpl
les
sub
shll
and
outsl
xor
jmp
fildl
and
aas
lods
mov
xchg
push
stc
add
popa
fcmovne
mov
out
shrb
xor
and
fsubs
cmpsl
cld
out
add
mov
lret
cli
aaa
xor
daa
bnd
jae
push
jno
cli
mov
push
loop
fcmovbe
and
xor
mov
push
bound
xor
and
push
adc
xor
fnstenv
push
mov
mov
xorl
je
sbb
xor
push
pop
cli
push
and
ret
ret
push
xor
ret
and
sbb
mov
pop
cltd
sub
pop
and
xor
idivb
das
jne
xor
xor
inc
push
cmc
jnp
xor
mov
arpl
cmpsb
mov
or
inc
inc
jmp
push
lret
jae
dec
dec
and
lods
cmp
mov
and
push
xor
cmpsb
sbb
cmp
cmpsb
push
xor
pop
jne
pusha
addl
lahf
shlb
adc
pop
pop
adc
push
cmc
add
push
xchg
pushf
pop
rclb
push
pop
inc
adc
push
rorb
push
xchg
push
adc
and
xchg
pop
pop
push
mov
pushf
adc
push
and
jbe
cmpl
push
fcmovu
inc
rcr
ljmp
cmp
mov
and
int
dec
xchg
iret
dec
in
jne
mov
add
mov
push
test
ret
in
and
push
xor
fwait
adc
pop
leave
int
cltd
jno
sub
mov
xor
push
jb
inc
add
xor
inc
xor
cmp
xor
mov
push
cltd
and
and
adc
aaa
add
sbb
xor
jmp
test
sbb
repz
jle
jmp
jge
sub
cmp
lods
cmc
mov
sti
cli
and
adc
xor
ret
mov
les
sti
cli
push
mov
xchg
mov
and
cs
sbb
repnz
mov
popa
and
xor
mov
xor
xor
jmp
cltd
sub
and
xor
test
dec
xor
mov
push
sbbl
push
push
cltd
dec
inc
and
aas
ret
push
and
cltd
add
aas
xor
push
push
cltd
ljmp
fidivl
add
arpl
ljmp
adc
lret
imul
push
mov
dec
xor
pop
out
icebp
mov
test
cmpsb
ficoms
xor
mov
rcrb
aaa
sub
arpl
cltd
movsl
lds
mov
xchg
cltd
and
xchg
pop
lahf
mov
push
cltd
inc
jbe
sahf
xor
sbb
and
cltd
mov
xor
mov
cltd
pop
sub
ja
stos
pop
mov
cmc
xor
push
dec
cltd
jbe
and
xor
cmp
xchg
push
sub
mov
cmp
push
push
inc
jle
jecxz
adc
mov
and
and
sbb
scas
sti
daa
mov
mov
adc
and
mov
sbb
fsts
outsl
mov
push
ds
mov
repnz
insl
scas
mov
inc
sbb
pop
lods
ret
xor
adc
push
inc
adc
mov
lcall
jo
xchg
push
mov
imul
xor
adc
inc
and
xor
insl
jb
mov
mov
leave
into
addr16
xchg
cli
pop
mov
or
in
stc
push
adc
sahf
sbb
xor
push
sbb
imulb
and
cs
xchg
xor
push
fidivrl
mov
and
inc
xor
int
mov
inc
jns
and
xor
jp
mov
stos
mov
and
sbb
or
jnp
daa
pop
xchg
iret
data16
adc
adc
cltd
inc
and
xor
je
insl
leave
xorb
dec
repnz
mov
inc
adc
dec
rsm
ret
mov
sbb
pop
and
add
dec
sub
mov
das
daa
and
xor
inc
cmp
inc
sub
jns,pn
push
in
mov
lods
adc
dec
jl
pop
bound
dec
jecxz
mov
or
pop
faddl
scas
inc
call
sarb
sbb
lea
adc
nop
push
cltd
in
adc
divl
lea
test
adc
mov
adc
sahf
shrb
in
adc
mov
out
pop
subl
rorb
cs
add
adc
data16
push
fdivrp
fcoms
stos
mulb
sbb
aas
add
fcomps
pusha
mov
movsl
push
cmp
mov
fldt
adc
inc
fcomps
sub
aas
sub
adc
xchg
std
movsb
mov
fisubl
addl
mov
sub
adc
or
push
push
xchg
mov
sub
xchg
ret
and
adc
fbld
add
pop
nop
lea
adc
adc
test
push
es
sti
pop
add
push
adc
and
sbb
adc
flds
inc
in
xor
mov
sarl
mov
add
lahf
inc
push
push
pusha
out
add
jmp
lea
call
xchg
push
fdivrl
and
sbb
das
ljmp
test
lcall
ss
mov
sti
dec
cltd
lods
cmp
inc
jo
into
filds
insb
dec
je
adc
pop
push
sahf
mov
xchg
jae
sub
dec
adc
mov
or
out
outsl
sub
pop
mov
sbb
add
pop
in
xchg
pop
out
bound
or
adc
popf
mov
adc
stos
push
mov
xor
mov
test
push
xlat
pop
xchg
jae
push
adc
mov
push
lahf
inc
adc
adc
xchg
and
and
pop
loop
push
pop
pop
xchg
sahf
sbb
inc
sti
jg
insl
test
ja
dec
mov
adc
mov
pop
and
pop
push
adc
jne
loope
xor
pusha
mov
cltd
ret
xorb
adc
fisubrl
jns
mov
outsb
scas
out
xor
sbb
into
adc
dec
dec
loopne
and
mov
sbb
push
inc
lods
cmpsl
fcmovnbe
or
xor
sbb
into
adc
mov
sbb
pop
ret
psllw
sub
aas
pop
jb
icebp
outsl
xchg
cmp
pop
icebp
lahf
not
mov
mov
arpl
inc
mov
push
inc
inc
cmpsl
cmp
icebp
idivl
stos
cmp
in
scas
cmp
sbb
jbe
mov
cmp
mov
loopne
sbb
sub
cmp
push
mov
dec
sbb
icebp
pop
pop
adc
jae
push
push
das
add
xchg
sub
xor
and
or
pop
and
push
dec
orl
sbbl
xchg
popa
xlat
xchg
xorl
imul
mov
xor
cmc
je
sub
or
leave
push
cmp
faddl
dec
cmc
xchg
mov
mov
aaa
sbb
add
push
inc
xor
push
enter
xor
dec
and
out
inc
scas
cmp
icebp
xchg
mov
xor
inc
cltd
pop
push
mov
shl
cmpl
pop
xchg
pop
mov
xlat
xchg
dec
fsts
cltd
fidivrl
push
push
sbb
push
adcl
or
xchg
movsl
xchg
xchg
pop
out
cmpsl
cmc
mov
pop
jmp
xor
xchg
pop
mov
xor
addr16
xor
pop
push
sbb
imul
subl
insl
push
xor
aad
xchg
mov
push
lods
cld
icebp
cmp
jbe
jne
imul
jns
jmp
mov
push
inc
adc
adcl
sbb
loope
fcomps
push
mov
push
xor
pop
jmp
cmp
out
xchg
mov
xor
sbb
out
mov
cwtl
mov
icebp
ss
push
cmpsl
fists
cmpsl
jg
xor
xor
xchg
fsubs
push
cmpsl
xchg
jns
pusha
js
stos
jge
outsl
in
arpl
and
mov
movsb
mov
pop
ja
and
xor
xor
mov
and
in
hlt
add
imul
sbb
mov
sbb
sarl
xor
adc
adcl
xor
push
rcll
xor
dec
rol
adc
adc
repnz
popa
std
push
push
and
dec
push
push
dec
andl
stos
ljmp
pushf
jg
push
cmc
xor
xor
sti
xor
push
std
cltd
add
and
negb
add
xchg
push
mov
xchg
add
and
xor
push
cmp
bound
pop
jb
subb
mov
add
sub
adc
jno
fldt
push
mov
xor
roll
cwtl
add
cwtl
xor
xchg
bound
mov
cltd
fld
and
xor
and
push
xor
push
subl
das
mov
push
xor
loope
pop
add
mov
aaa
cltd
mov
inc
pop
add
xor
popa
cltd
dec
xchg
es
inc
and
roll
icebp
xor
add
and
mov
adc
adc
xorb
movsl
mov
add
push
icebp
arpl
inc
lds
inc
xorb
ficoml
push
jno
xchg
das
mov
div
dec
xor
or
and
push
push
jb
xchg
das
mov
div
dec
adcb
xor
mov
notb
rcrl
adc
icebp
inc
ljmp
arpl
les
mov
not
dec
xor
or
xchg
push
divb
xor
rorl
das
mov
divb
xor
rorb
daa
dec
xor
or
fidivl
xchg
adc
xchg
roll
icebp
xor
sub
mov
inc
mov
xor
test
mov
dec
push
imul
sbb
aam
xchg
adc
cwtl
arpl
sbb
adc
andb
loope
repnz
test
and
repnz
scas
xor
mov
xchg
push
pop
andb
fnstcw
and
cmp
adc
scas
shlb
or
push
popa
pop
int3
jp
addr16
aam
loope
dec
push
dec
loopne
xchg
dec
sbb
imul
cmpsl
shll
xchg
ljmp
sbb
imul
xchg
and
ret
jbe
aam
add
add
mov
repnz
adc
or
mov
xor
or
mov
jp
xchg
or
jb
xchg
pop
xchg
inc
loop
fldcw
xor
mov
xor
clc
sbbl
icebp
xor
push
push
fisubl
jno
ret
addr16
adc
dec
fwait
sub
sub
add
pop
sub
popf
sbb
mov
xchg
lods
mov
call
push
push
pop
jecxz
lret
loope
push
push
inc
rcr
add
popa
jae
and
pop
fnstsw
insl
mov
lods
scas
icebp
mov
test
fwait
mov
in
clc
mov
lods
pop
clc
xor
fwait
dec
and
mov
hlt
cltd
mov
stos
jecxz
push
push
pop
gs
repz
add
dec
cs
xchg
sbb
jnp
mov
dec
xchg
andl
push
jns
adcl
fucomip
loopne
jbe
iret
in
cmp
jge
jge
in
flds
mov
dec
dec
insl
cltd
loope
leave
dec
gs
adc
in
cmc
in
cmc
add
icebp
loopne
cmp
stc
imull
inc
jno
and
xchg
arpl
xchg
mov
pop
fwait
adc
fnstsw
xor
pop
sub
adc
and
inc
pop
push
mov
push
out
aas
movsb
test
push
std
cltd
push
adc
xor
xchg
and
icebp
cmp
rcll
sbb
adc
xor
adc
rorb
inc
mov
or
inc
and
inc
xor
or
sub
inc
sbb
xor
inc
mov
pop
and
aaa
sbb
in
dec
xlat
pop
cmp
aad
xchg
repnz
dec
adc
das
push
daa
cltd
inc
xchg
ja
adc
jmp
stos
mov
and
cmp
jecxz
dec
adc
add
adc
sub
xchg
xor
pop
popa
rcr
pop
and
fcomps
test
sbbl
xchg
xchg
xor
dec
cltd
or
mov
mov
add
adc
mov
sbb
or
adc
andnps
xchg
dec
pop
adc
in
add
sbb
push
and
and
push
mov
sbb
add
cwtl
jne
mov
cmp
cmc
loope
lods
addl
add
mov
ss
sbb
fsts
mov
adc
push
sbbl
xor
or
xchg
pop
adc
flds
and
lds
mov
push
imul
pop
pop
and
das
sbb
test
lret
test
inc
ss
popa
rolb
cmp
lods
dec
or
aaa
xchg
adc
mov
pop
and
ret
imul
cmp
es
adc
aam
dec
and
adc
and
int3
scas
xor
add
xchg
push
adcb
mov
popa
ret
in
xchg
or
jno
cs
jo
push
jno
mov
xor
outsl
mov
inc
lahf
and
sub
loop
or
jb
xlat
mov
jo
jno
xor
fildl
ss
and
add
xchg
push
and
and
aaa
loope
jns
mov
and
iret
ret
call
cmp
out
fbld
lea
xor
daa
cmp
push
jmp
sbb
jmp
cmp
out
ja
or
add
cmp
lods
inc
sbb
adc
pop
adc
cmp
mov
push
ljmp
xor
loop
push
mov
push
cmp
cmp
bnd
sbb
pop
cltd
mov
xchg
mov
and
icebp
pop
sub
and
out
or
or
jmp
cmc
dec
inc
and
mov
rol
and
sub
xchg
inc
sub
cmp
inc
mov
lret
pop
bound
sub
and
or
ret
inc
inc
add
mov
sub
and
shlb
xchg
aas
inc
cli
mov
mov
cmp
sub
loope
xor
in
and
fidivrl
mov
add
sarl
pop
in
rcrl
sub
shrb
sbb
repnz
sub
mov
scas
roll
fimull
popf
pop
pop
mov
leave
sbb
out
and
incl
lds
and
sub
inc
cmpsl
cmpsl
mov
jae
shll
jne
ja
imul
ret
cltd
or
pop
mov
pop
lock
and
sub
frstor
xor
daa
adc
dec
and
adc
pop
sub
repnz
imul
cmpsl
repnz
mov
repnz
out
jbe
cmp
jmp
cmpb
mov
ret
loop
add
push
xor
mov
lds
adc
xor
mov
test
ljmp
in
jecxz
sub
push
mov
xor
jnp
pop
push
pop
repz
sbb
push
xor
pop
ljmp
inc
add
mov
lcall
cmp
loope
or
mov
cs
or
inc
addb
mov
loope,pn
mov
mov
add
icebp
jns
das
pop
pop
out
push
dec
and
rolb
push
pop
fnstenv
fstps
xor
inc
add
mov
or
pop
das
push
jns
pop
dec
push
ret
pusha
popf
xchg
pop
push
or
pop
sbb
sub
sbb
sub
mov
sbb
into
scas
xchg
pop
not
in
adc
pop
sub
ds
push
dec
das
jb
mov
jecxz
das
and
jmp
popa
mov
push
jl
subl
jmp
push
sub
xor
sbb
xchg
sub
cmp
or
ret
xor
mov
sub
in
pop
imul
ss
xchg
stos
lret
fisubrl
aam
jns
arpl
mov
and
jno
mov
popa
jmp
int3
pusha
loopne
leave
sbb
xchg
das
or
xor
cmp
rorb
adc
cmp
nop
xor
popa
stos
movsl
pop
sbb
test
scas
and
xchg
add
push
popf
mov
out
mulb
jle
scas
adc
lock
fptan
jg
enter
add
mov
mov
cmp
fbld
inc
mov
mov
add
and
sbb
dec
xchg
push
mov
in
jmp
adc
mov
subl
inc
xor
das
nop
sub
push
fistpl
lcall
test
daa
cmc
pop
add
xor
push
cmp
dec
repnz
jmp
cwtl
outsb
push
mov
adc
stos
push
pop
jno
adc
stos
pop
daa
ds
mov
inc
jb
xchg
inc
scas
repnz
mov
adc
mov
mov
stos
dec
xchg
int
jnp
pop
add
cmp
in
xorb
jmp
adc
fists
and
cmpsl
add
mov
jno
popa
add
jno
sbb
addb
inc
push
and
or
or
dec
cmp
xor
out
sarb
and
das
sbb
xor
mov
loop
cmpsb
and
nop
fcoml
sbb
xchg
pop
mov
pop
jnp
addr16
pop
sub
push
sbb
dec
sbb
enter
sbb
add
stos
xor
aaa
inc
and
dec
daa
mov
shl
xor
stos
push
inc
add
add
pop
xchg
mov
push
adc
xor
mov
xchg
popa
inc
xor
jns
inc
cmp
inc
xchg
xor
jg
pop
push
cmp
pop
loope
sbb
pop
loope
fldl
cmp
xor
push
mov
cmp
loope
inc
in
sarl
push
inc
xor
stc
pop
push
fwait
xor
pop
jno
out
or
xor
das
xchg
xor
push
lret
pop
adc
aam
xchg
dec
xor
add
push
push
dec
xchg
lahf
out
mov
stc
or
loope
sbb
pop
sti
icebp
lds
test
ds
outsb
mov
icebp
lods
or
cmp
out
xor
out
xor
push
shr
testl
mov
loop
sbb
call
std
push
adc
daa
adc
cs
sub
push
jg
inc
push
inc
jns
std
cmpsl
jl
inc
mov
jne
pop
dec
fsubrl
sub
jae
mov
pop
lret
inc
mov
or
or
sbb
paddusw
out
int
inc
imul
sbb
mov
jle
jno
ret
sub
loope
mov
lock
addr16
jae
jno
push
push
xchg
jae
inc
lods
jecxz
push
jae
jae
imul
push
stos
jno
lret
pop
fs
mov
cmp
insl
lahf
add
mov
xor
jno
insl
mov
xor
jg
ret
mov
pop
or
or
xor
push
repnz
inc
xor
inc
inc
lahf
out
fsubrl
scas
cmp
mov
and
or
pop
sahf
sub
jne
adc
jns
mov
jge
movsb
mov
jmp
push
inc
jmp
push
stos
cltd
icebp
add
push
adc
push
addr16
leave
cmp
inc
mov
inc
filds
dec
mov
jno
loopne
inc
fs
in
loope
inc
cmc
fwait
jns
sub
rcrl
sti
pop
roll
cmp
push
pop
dec
repnz
jb
push
xor
push
test
ja
cld
lahf
xchg
adc
and
icebp
jae
icebp
xor
pop
icebp
mov
insl
sub
xor
push
popf
push
jno
ds
push
cmp
lea
sbb
push
addr16
inc
dec
rorl
aaa
fisttpl
int
push
sub
leave
mov
icebp
jmp
xlat
jae
and
popa
xor
push
cltd
pop
lods
and
daa
mov
mov
and
cltd
xchg
xchg
aas
and
adc
cmpsb
lahf
adc
xlat
inc
jo
xor
push
mov
push
sbb
jno
mov
push
and
adc
xor
fwait
or
mov
and
mov
pop
mov
loope
jecxz
fnsave
mov
pop
jbe
aad
adc
dec
cmp
fld
fisttpl
adc
aam
and
pop
test
andl
dec
dec
dec
cmp
push
mov
jne
push
xchg
push
add
push
xor
mov
ja
cmpsb
sbb
mov
add
jle,pt
adc
stos
cltd
cmpsl
sbb
in
cltd
xchg
aad
fbld
and
leave
push
mov
icebp
sti
fildl
cmp
imul
clc
pop
js
shr
inc
cmpsb
sub
mov
cmc
pop
mov
pop
xchg
push
jne
pop
xchg
jge
pop
mov
xchg
aam
xchg
stos
arpl
xchg
adc
cmp
outsb
adc
dec
pop
xor
xchg
call
sbb
adcl
push
add
sbb
cld
mov
insl
outsb
adc
and
pop
adc
pop
out
ds
sbb
xchg
dec
jbe
sbb
pop
add
sbb
dec
mov
cmp
dec
xchg
divb
ja
aaa
sbb
sbb
add
out
insb
fldenv
dec
cmp
push
mov
push
and
imul
popa
ret
sbb
popa
fwait
mov
push
or
iret
ficompl
cmc
pop
inc
scas
daa
push
adc
push
xchg
or
int3
aaa
scas
rol
jecxz
es
add
test
mov
xchg
dec
mov
xchg
or
inc
into
out
xor
cmp
push
inc
push
adc
int
and
push
cltd
pop
inc
rcll
addl
cmpsl
popf
nop
ret
loope
sbb
and
mov
test
and
pop
dec
fsts
sbb
push
lods
out
fldenv
sbb
lods
sbb
in
add
mov
dec
pop
pop
popa
pusha
adc
mov
xchg
leave
sub
sbb
ja
out
sbb
dec
and
stos
cmpsl
push
push
dec
fdivrl
inc
dec
stos
jno
jne
imul
push
dec
arpl
loop
shll
aaa
scas
loop
inc
xchg
ljmp
fwait
jge
xor
sbb
pop
mov
icebp
stos
mov
pop
in
adc
int3
aad
loope
and
cmp
dec
pop
push
repnz
jno
fistpll
cli
gs
pop
fldcw
jb
pop
or
inc
pop
shlb
loope
mov
push
jmp
les
dec
xchg
mov
xchg
popa
xchg
loope
adc
lods
test
dec
cmp
jne
mov
jle
icebp
cld
mov
aas
cltd
sbb
test
aaa
fldcw
stos
stos
jmp
loop
test
xor
sub
sbb
stos
sbb
out
or
mov
cmp
jbe
cmp
cmp
gs
ret
jnp
sub
lahf
sbb
sti
not
xlat
cmp
mov
icebp
push
fincstp
push
jne
jne
dec
stos
pop
jecxz
jae
or
scas
mulb
aas
xor
xchg
cmpsl
or
call
ret
xor
ret
push
lahf
movsl
push
and
clc
mov
xchg
jecxz
cmpsl
add
xchg
fildll
test
xor
push
std
shll
fstpt
and
dec
lcall
and
adc
push
mov
mov
mov
ret
sbb
xchg
xchg
inc
mov
mov
leave
imul
roll
adc
inc
mov
pop
fs
xchg
sbb
sbb
inc
push
push
xor
ss
outsl
inc
addl
nop
insl
and
ss
inc
jp
dec
adc
mov
add
cmp
ret
std
ret
mov
daa
fldt
iret
cmp
dec
fwait
dec
ss
xchg
cld
stos
imull
rcrl
push
pop
inc
lods
cmc
sbb
jns
mov
scas
imul
pop
lcall
test
jmp
movsl
push
jb
mov
adc
sbb
pushf
in
jmp
shrb
mov
test
es
mov
cli
and
mov
lea
push
iret
xchg
fists
inc
mov
mov
shl
test
pop
mov
leave
lds
push
cmpl
test
lods
fistpl
mov
es
cmpsl
pop
scas
add
dec
pop
testb
adc
in
adc
xor
pop
mov
mov
jg
ds
loope
cmp
test
adc
rorb
inc
mov
and
cmp
fisubl
lods
xor
mov
sbb
xor
push
lcall
rclb
push
popf
sbb
testl
jmp
rclb
out
jp
pop
popa
adc
test
insb
loopne
and
add
mov
repnz
popf
daa
pop
repnz
sbb
mov
xor
lods
adc
sbb
cmp
adc
xor
pusha
push
fists
sbb
pop
sbb
cli
fisttpll
add
lea
mov
jp
inc
and
and
sbb
jno
out
mov
or
push
inc
mov
inc
mov
notb
out
add
and
imul
fstps
mov
imul
sub
push
bound
inc
fildll
fildl
cmp
adcl
mov
xor
adc
imul
mov
mov
xchg
dec
dec
scas
lcall
dec
cmpb
inc
sbb
pop
int
mov
push
and
fcmovnbe
jmp
cmp
xor
jne
sti
or
lods
sbbl
das
mov
mov
and
jmp
lcall
cmp
xor
popf
aam
insl
int
mov
sbb
ficoml
bound
fnstenv
roll
pop
loope
shlb
adc
popa
cltd
rcrl
leave
scas
inc
lods
sub
mov
cmpsl
pop
bnd
xor
inc
lret
jmp
cwtl
out
std
sbb
cmp
xor
mov
rorb
iret
stos
mov
jp
test
mov
movsb
scas
jb
adc
jp
or
leave
inc
shl
hlt
das
xchg
mov
outsl
dec
push
movsl
xor
notb
pop
sbbb
test
add
pop
push
xchg
ss
stc
and
sub
sub
jne
loope
lods
fisttps
xchg
aad
pop
hlt
insl
or
cltd
xor
mov
inc
notb
inc
iret
sub
mov
cmp
scas
out
mov
adc
sub
mov
add
subl
pop
lods
fnstcw
pushf
iret
aad
dec
cltd
sub
in
xchg
xor
push
sub
pop
xchg
js
inc
rcll
jb
push
mov
fdivr
je
lock
dec
mov
inc
mov
rorl
loope
ret
popa
pop
sub
pop
sub
xor
sbbl
inc
pop
xor
dec
or
push
adc
lea
xchg
mov
lcall
and
mov
fnstenv
test
and
adc
daa
push
std
xor
arpl
lods
push
imul
inc
fimuls
bound
push
push
xor
imul
add
sbb
push
ds
int
cmp
scas
mov
sbb
and
test
iret
scas
sub
dec
sbb
in
fstpl
rcrl
jae
cmp
loope
xor
rol
loope
loope
imul
aad
cmp
mov
and
lds
sub
push
xchg
and
ficomps
sub
mov
stc
push
mov
xor
sub
ret
test
cmp
mov
dec
insl
adc
mov
rol
leave
mov
test
insl
cmp
mov
pop
stc
lock
mov
xor
push
out
push
outsb
pop
jle
sub
hlt
cli
cmp
cmp
dec
push
popa
or
das
lds
sub
cs
popa
shll
pop
or
xor
xchg
aad
cmp
outsb
cmp
xorb
push
pop
sbb
fisubl
jmp
xor
fsubrl
sbbb
aad
mov
sub
int
inc
stos
out
and
sbb
sbb
inc
inc
cmp
subb
sub
or
mov
lock
iret
stos
lret
das
dec
pop
mov
pop
lret
xor
aaa
repz
cmp
aam
imul
fldl
sub
add
sbb
mov
jno
std
sub
mov
jno
inc
mov
sarb
mov
stos
inc
sbb
gs
pop
inc
or
adc
mov
sti
adcb
sub
imul
jge
mov
mov
sbb
jp
add
cmc
pop
mov
pop
sahf
pop
xor
pushf
mov
xor
test
cli
xlat
and
inc
xor
jg
sbb
inc
push
lcall
dec
jb
inc
xor
mov
xchg
push
ret
cmp
pusha
cmpsb
jns
xor
push
jp
cmpsb
mov
sbbl
mov
mov
push
leave
arpl
arpl
push
movsl
data16
sbb
add
aad
push
sub
and
fildll
xchg
inc
mov
adc
dec
fnsave
es
stc
and
stc
inc
mov
mov
xchg
xor
fsubrl
inc
mov
xchg
mov
xor
xor
mov
mov
cmp
jb
pop
aad
mov
xor
lods
int3
xor
push
push
sub
cmp
dec
sub
lea
ds
xchg
es
xor
push
jne
pop
push
popf
mov
mov
or
mov
dec
cmp
testb
inc
mov
push
add
mov
or
lds
jne
inc
loope
sub
push
inc
xor
push
lcall
dec
icebp
adc
or
inc
xchg
jp
sbb
cmp
pop
out
scas
daa
sub
adc
sarl
sub
jno
mov
sbb
icebp
xchg
sbb
pop
cmp
xor
mov
xor
mov
sub
mov
lcall
mov
lock
jnp
loop
mov
bound
push
pop
add
fisttps
jmp
fstl
sub
pop
xorl
xchg
subb
and
adc
iret
mov
dec
out
mov
xchg
sbb
imul
add
cltd
adc
mov
sbb
dec
push
or
int
sbbb
jne
mov
sbb
push
xor
pop
shll
sbb
or
and
and
xchg
les
mov
jge
ja
fbld
jmp
jmp
sub
xchg
les
mov
xchg
cmc
xor
or
pop
into
fnstsw
sub
sbb
jb
test
mov
mov
and
xor
dec
cltd
out
jns
xchg
dec
jmp
dec
jb
mov
das
jne
pop
jo
push
ja
jns
clc
das
cmp
dec
xchg
dec
adc
dec
jg
pop
mov
movsb
lss
dec
sbb
dec
push
dec
mov
push
cli
pop
das
xchg
push
cmp
movsl
ret
cmc
enter
idiv
stc
std
and
cmp
push
mov
sub
lret
xchg
cmpl
fiaddl
mov
repnz
cli
push
or
xorl
pop
sub
lahf
adc
mov
cwtl
mov
test
sub
addl
loop
ljmp
fldcw
lods
jmp
das
mov
bound
repz
dec
add
insl
jae
lods
push
mov
das
rclb
mov
cwtl
mov
ja
loop
ljmp
jns
test
xchg
scas
sub
lret
pushl
shlb
and
dec
sti
dec
pop
bound
fimuls
sbbl
sub
fidivl
inc
cmpl
sub
out
cs
arpl
or
hlt
lea
mov
mov
adc
loop
adc
sbb
jne
cmp
cwtl
push
add
sub
ficompl
repnz
cli
cmp
add
and
cmp
push
ret
adc
jmp
sub
cmovl
pop
lock
shlb
cmp
push
dec
jg
fcmove
loop
ljmp
xchg
mov
enter
and
cmc
xlat
stc
jmp
pop
add
dec
cmp
rorb
lahf
mov
shll
lea
mov
lret
cmc
inc
stc
js
enter
mov
jno
movsb
pop
mov
in
inc
jae
mov
add
add
xchg
mov
mov
aas
ja
lods
jle
fdivl
outsl
cmp
pop
repz
cwtl
bound
sub
cs
mov
das
mov
cwtl
and
cmp
pop
jmp
adc
lret
jg
fidivl
repnz
outsb
add
or
or
addl
mov
mov
xchg
cmpsb
sub
mov
sbb
popf
cmp
mov
loop
orl
mov
fsubrs
ret
fbstp
je
mov
lock
cwtl
adc
adc
mov
xchg
jno
lods
adc
cmp
mov
jne
fmul
pop
fidivl
ja
fcoml
pop
cmpsb
js
xchg
cmpl
dec
loop
ljmp
mov
cmc
test
cld
rolb
std
rorb
andl
enter
xchg
test
mov
lods
lret
jecxz,pn
or
pop
lahf
and
cs
mov
das
jecxz
or
xor
cmp
cmpsl
sbb
cmc
jne
pop
ss
sbb
sbb
adc
mov
and
mov
xor
xor
das
add
ja
je
jnp
movsb
pop
push
test
orl
mov
test
fdivr
repnz
mov
and
pop
dec
popa
pop
xchg
and
push
xor
xchg
sbb
jns
gs
xchg
std
addb
or
dec
push
and
adcl
cmpsl
pop
lds
stc
lahf
xor
int
cmp
mov
cmc
push
mov
sub
into
sub
xor
dec
in
xor
sbb
pop
xlat
lahf
adc
int
sbb
push
or
mov
stc
sar
out
push
jge
andl
inc
jns
fdiv
movq
int3
ret
jne
xchg
rolb
xchg
lea
jae
movsb
out
dec
les
and
pop
cmp
jnp
push
mov
cmpl
insb
or
sub
push
cs
into
mov
push
test
rorl
xchg
pop
mov
dec
mov
mov
pushf
movsb
xor
cli
fbstp
jno
cmpsb
daa
jae
jne
movsb
mov
orl
add
enter
add
addl
mov
mov
sub
dec
adc
push
lea
test
jb
loop
ljmp
xchg
or
push
push
inc
jno
movsb
xchg
lahf
sahf
fisttpl
pop
mov
cli
sbb
cmp
jne
ficompl
and
ja
mov
jbe
dec
dec
jnp
dec
and
dec
mov
lods
imull
xchg
das
cli
scas
or
movsb
push
loope
and
std
test
sbb
pop
pop
lahf
jo
movsb
and
pusha
out
mov
fidivrl
ficoml
int3
ljmp
test
xchg
pop
lea
mov
adc
push
repnz
jno
loop
xorl
xchg
mov
inc
push
jo
xchg
cmpsb
dec
adc
dec
xchg
dec
sti
dec
adc
dec
jb
mov
iret
aaa
test
jnp
ss
push
insb
sbb
push
test
dec
mov
cmpl
push
push
adc
repnz
xchg
imul
in
filds
into
pusha
in
add
loope
mull
sar
push
addl
lret
mov
xchg
inc
mov
pop
xor
dec
xchg
jle
mov
test
dec
xorl
sbb
xchg
cmc
pop
jne
inc
push
cmc
push
stc
js
mov
hlt
dec
sti
jns
dec
mov
das
jnp
push
cmpsb
sub
call
ss
jae
sub
clc
and
mov
cmc
mov
mov
lea
lods
dec
stc
cs
dec
and
dec
dec
imul
dec
bound
mov
cmpsb
or
sub
jns
xchg
pushf
sbb
lods
addl
test
lods
inc
idivb
sti
mov
cmp
push
cmpsl
mov
inc
insl
lea
push
sbb
push
adc
cld
popa
cmp
sti
jge
xchg
sub
subl
xchg
xor
add
adc
pop
pop
fmuls
dec
js
notb
inc
jne
ja
jns
mov
icebp
rcrl
xor
and
xchg
fstpl
aad
fsts
jno
aaa
mov
cmp
mov
pop
xor
mov
rsqrtps
mov
nop
cltd
push
dec
inc
jno
and
xchg
lods
ja
icebp
jnp,pt
or
sub
lcall
addl
mov
test
lahf
js
mov
rsqrtps
mov
dec
std
vpmadcswd
pop
cmp
out
and
pop
xor
adc
je
mov
lock
std
fimull
jge
cmp
fadds
push
incl
cmc
xchg
mov
adc
fistps
push
sbb
cs
cs
rclb
jae
lods
inc
outsb
cs
jge
xor
loop
ljmp
mov
jno
sahf
fcmovbe
xor
ficoml
fs
test
and
cmc
dec
stc
bound
mov
pop
stc
lret
lea
add
ds
cmc
inc
arpl
leave
adc
mov
mov
jae
fisubl
pop
and
ss
arpl
inc
addr16
sarb
push
sbb
mov
filds
fisttps
adc
lea
orb
xor
xor
dec
adc
cs
inc
sub
sub
jne
dec
ja
xchg
push
leave
jns
fidivrl
lcall
jae
ret
mov
pop
push
pop
xchg
mov
sahf
fidivl
mov
js
cwtl
pop
mov
loopne
cmp
xor
inc
andl
subl
pop
repnz
test
and
xchg
pop
sbb
mov
movsl
stc
inc
std
jb
mov
mov
lods
shrl
pop
bound
push
cltd
sahf
je
jae
lea
mov
loop
ljmp
add
jae
mov
adc
fstps
ljmp
data16
jl
stos
sbb
mov
mov
mov
les
xchg
sub
out
sbb
mov
scas
jl
pushf
mov
cwtl
aas
adcl
or
jle
jg
xchg
fcmovb
xchg
dec
sub
mov
fmull
imul
lahf
rcr
cld
cs
lea
jnp
scas
and
pop
xchg
and
mov
ficompl
jp
xor
jno
fisubl
loop
ljmp
jae
insl
pop
popf
adc
ja
jns
mov
stos
mov
je
insb
pop
adc
clc
sbb
sub
test
ljmp
push
and
dec
push
mov
insl
mov
mov
pop
out
jbe
fld
jb
pop
jae
xor
jne
icebp
ja
jns
test
pop
popa
push
dec
out
dec
adc
dec
jbe
pop
jg
pop
repz
call
jecxz
sbb
out
into
adc
dec
adcl
xlat
stc
bound
or
outsb
testb
pop
xor
aam
in
stc
andb
shr
add
pop
test
xchg
mov
dec
lea
mov
loop
ljmp
or
sub
jbe
mov
mov
mov
and
jle,pn
in
clc
xor
pop
add
js
repnz
shrb
sbb
and
dec
ficoms
xchg
jge
jg
subl
inc
mov
jle
orb
xor
push
inc
cmpsl
pop
imul
push
cmp
cmp
xor
pusha
lret
fcomp
or
mov
dec
fisttpll
dec
mov
pop
xchg
lahf
mov
push
lods
shrw
rep
std
rorl
orb
ljmp
fs
repnz
stc
add
or
adc
sbb
mov
cmp
push
mov
mov
mov
mov
test
das
imul
stos
mov
cwtl
mov
sarl
sub
jbe
rcrl
jno
mov
ja
lods
cs
add
dec
lret
shr
lcall
retw
xor
mov
lea
lods
stos
push
imul
jle
fmulp
fstp
out
adc
hlt
in
jnp
and
test
pop
push
mov
jne
rcll
jns
xor
stc
sahf
inc
push
dec
mov
push
cmp
dec
push
jb
xchg
addr16
mov
add
sbb
add
cmp
xor
jae
dec
arpl
ss
push
mov
add
dec
cmp
and
jns
pop
cli
cltd
pop
jb
jmp
repnz
xorb
mov
sbb
iret
adcl
fdivl
mov
mov
repnz
fnstcw
push
push
xor
xchg
stc
push
fiaddl
push
adc
push
dec
jne
xor
xchg
cmp
mov
stc
dec
std
mov
cmc
xchg
stc
jmp
cmp
xchg
jge
movsb
scas
mov
insl
daa
ret
popf
sbb
outsl
cwtl
adc
xor
mov
les
ret
add
add
cmpl
cli
popl
or
mov
les
aam
in
hlt
dec
add
test
jno
jns
inc
mov
xchg
scas
cltd
xor
mov
pop
loope
jmp
push
add
or
sbb
inc
push
bound
nop
mov
jp
adc
xor
pop
daa
movsl
sub
das
xor
pop
roll
mov
and
cmpsl
ljmp
arpl
pop
jnp
pop
sarl
test
sbb
jg
mov
or
aam
out
push
lret
movsb
sbb
loop
test
jecxz
adc
and
shlb
xor
cmp
cwtl
add
xchg
mov
pop
rclb
jno
div
mov
ret
cmc
nop
add
inc
stc
mov
stos
jns
dec
xor
dec
cwtl
cmp
push
xor
loop
ljmp
push
scas
pop
das
repnz
jmp
test
dec
orl
and
ss
dec
push
dec
jno
mov
push
stos
push
mov
mov
data16
inc
stc
sbb
cwtl
leave
out
xor
mov
xlat
das
push
mov
loopne
loopne
fdivrl
dec
mov
pop
jno
push
stc
jg
lods
daa
fnstenv
push
jne
enter
idivl
add
icebp
cmpl
int3
sbb
sub
out
cmp
inc
sbb
mov
shl
mov
add
add
add
icebp
leave
xor
stc
stos
std
aad
mov
scas
adc
inc
xchg
pop
je
mov
mov
out
jne
or
mov
push
das
mov
stos
jns
test
mov
imul
or
rcl
dec
shll
jno
fimull
push
xor
jb,pt
iret
and
jne
push
std
ja
movsb
sub
loop
jns
fnstcw
jg
sbb
sub
and
or
sub
cwtl
cmc
jl
adc
xchg
pop
push
cmp
repz
data16
pop
jno
shrl
hlt
in
repnz
jae
pop
mov
std
js
adc
jne
fisubl
repnz
cmp
int
loopne
aam
ja
movsb
sbb
jbe
scas
jns
cmpsl
lret
lods
jnp
mov
jg
push
mov
cltd
xchg
ficoms
xor
push
das
out
pop
out
or
mov
mov
adc
xor
xorl
sub
pop
les
and
aas
pop
fldt
insl
push
push
jp
adcb
mov
push
mov
xor
adc
loope
into
mov
mov
lea
pop
or
xchg
sbb
and
sub
mov
pop
psadbw
aad
icebp
dec
cmp
sbb
jno
ss
ret
cmp
popa
inc
cwtl
fimuls
xor
test
outsl
pop
sbb
fisttpll
clc
inc
dec
xchg
ds
pushf
pop
stos
jl
or
js
mov
fiaddl
mov
xchg
cmp
or
mov
movsl
jns
pop
mov
adc
lds
push
shr
aad
stc
dec
pushf
dec
mov
jb
fimull
loop
ljmp
cmp
dec
pop
dec
or
rcrl
jmp
sub
or
loope
loopne
loopne
loopne
loopne
aam
test
movsb
data16
les
aam
imul
mov
cmc
notb
rcl
mov
bound
xchg
test
mov
push
cmp
pop
movsb
jne
ja
push
mov
je
inc
leave
pop
jge
cmp
add
sub
cmp
in
xor
frstor
jno
mov
cli
xchg
add
or
or
inc
stc
sbb
pop
push
cmp
pop
sbb
nop
jb
movsb
or
or
or
or
or
or
or
sub
dec
mov
addr16
push
jge
mov
lods
scas
out
test
pusha
ds
idivl
mulb
push
dec
inc
push
fs
adc
icebp
scas
inc
adc
jecxz
rol
add
popa
jne
iret
stc
sbb
movb
cmpsl
push
adc
and
test
fs
ljmp
ret
cmc
addr16
dec
std
pop
add
sub
sub
hlt
icebp
dec
bound
pop
pop
addr16
or
dec
int
xlat
push
loope
out
push
and
in
push
add
and
pop
movsl
bound
lea
test
nop
ret
stos
movsl
mov
jne
mov
lods
clc
insl
insl
sbb
sbb
dec
scas
pop
sub
adc
pop
cmpsl
xor
lds
dec
icebp
cmp
sbb
daa
inc
and
cmp
inc
jb
pop
or
and
fimull
cs
loopne
idivb
add
cmc
pop
mov
cli
cmp
inc
dec
and
jae
jge
cs
or
cmpsl
mov
in
icebp
movsb
sti
mov
push
push
add
add
dec
inc
and
loopne
loopne
loopne
loopne
loopne
loopne
loopne
fidivrl
xchg
test
jmp
or
jb
sub
cmp
push
and
xchg
and
mov
xchg
add
leave
shrl
repz
add
add
add
xor
loopne
rorl
sbb
je
xchg
pop
mov
mov
scas
gs
repnz
xchg
int
add
xchg
lods
cmpsb
push
push
int
dec
mov
sub
mov
cmp
dec
aaa
sbb
pop
push
xor
mov
mov
mov
mov
pop
mov
mov
cmp
jbe
stc
and
jno
pop
xor
andl
rcll
jbe
push
rclb
jb
adc
jae
cmp
mov
push
or
movsl
mov
xchg
clc
stos
cwtl
shll
pop
stc
add
or
cwtl
sub
jo
pop
jnp
dec
pop
dec
cwtl
sbb
loop
sub
test
aam
add
scas
jmp
mov
loopne
pop
andl
fcmovnb
scas
and
test
cmp
pop
mov
shlb
les
adc
or
and
dec
repnz
stc
pop
iret
bound
jb
jp
andb
mov
xchg
and
sarb
ficompl
leave
mov
add
or
pop
sub
xchg
cmp
test
dec
push
push
push
pop
push
popa
push
imul
subl
test
xchg
mov
fldcw
sbb
stc
lock
popf
aam
push
jmp
addl
pop
jp
cmp
dec
test
pop
lret
in
in
mov
xor
aaa
xor
mov
scas
xor
xor
cmpl
pop
jnp
xor
aaa
jge
push
mov
cmc
xchg
lods
fisubs
add
sub
push
cwtl
sub
je
mov
inc
stos
push
popa
and
pop
aas
fwait
scas
xchg
pop
shll
push
ds
lcall
iret
xchg
sub
adc
scas
loope
cltd
pop
jecxz
mov
xor
jno
ficoml
mov
jp
cmpsb
cmc
cmc
push
xchg
inc
imul
stc
in
or
cmc
mov
testb
push
and
lahf
repnz
xchg
imul
jp
pushf
movsb
bound
xorl
sarb
mov
dec
xchg
pop
addr16
jge
pop
xor
sub
jbe
inc
adc
std
mov
pushf
daa
push
jae
loop
fiaddl
xchg
sub
and
mov
out
jbe
sub
cvtdq2ps
bnd
inc
popf
push
pop
sub
inc
jns
test
ljmp
fnstcw
pop
dec
sahf
ss
repnz
add
daa
outsl
jnp
adc
cmc
push
mov
out
sub
shrb
int
push
mov
cmpsb
flds
fisubl
fisubrl
jbe
int
daa
cmp
ds
mov
lea
sbb
push
and
cmc
int
and
inc
mov
scas
push
das
jp
mov
movsb
jb
addb
lcall
mov
pop
rclb
add
gs
xor
movsb
or
stc
jno
sbb
and
pop
dec
jae
loop
imul
loop
add
movsb
adc
sbb
xor
xor
out
stc
ds
xchg
mov
push
xchg
popf
ret
test
popf
dec
pop
add
cmp
movsl
adcl
jo
test
cli
push
jmp
push
dec
and
icebp
or
cld
insl
das
xchg
adc
repnz
ret
decb
fwait
mov
loop
mov
les
aaa
mov
pop
lahf
and
push
cmp
jns
ljmp
jmp
or
dec
pop
sbb
shll
and
fcoml
out
push
bound
push
jb
jp
cmc
and
xchg
mov
push
mov
mov
push
or
cwtl
test
dec
jbe
mov
push
into
jp
andb
pop
sub
lret
aaa
jb
dec
fidivrl
shll
jg
push
cmp
dec
cmpsb
cmp
push
jle
cwtl
mov
std
js
xchg
popa
mov
sbb
lcall
pop
sarl
negl
frstor
mov
mov
cmp
mov
or
jno
sar
enter
lds
imul
popf
sbb
js
shl
cld
orl
out
aam
sbb
sub
mov
aam
fldenv
pop
jle
aas
xchg
sbb
mov
mov
mov
out
xor
test
data16
pop
and
mov
mov
pop
mov
insl
fildl
adc
popf
mov
pop
push
mov
divb
add
gs
jnp
mov
mov
popa
ja
fidivrl
fistpll
mov
mov
add
rcll
inc
arpl
pop
cmp
mov
xlat
lea
jo
xor
cmc
sub
mov
clc
cmpsl
and
ret
cli
mov
stc
mov
and
xchg
stos
lods
push
stc
cwtl
xor
mov
adc
lea
mov
dec
pop
xchg
rcrb
mov
test
pop
pop
jb
lea
pop
loop
cmp
jmp
scas
jp
dec
xchg
sbb
pop
loop
xchg
fcoml
cmp
cs
pop
into
push
mov
dec
cmp
mov
pushf
repnz
jbe
push
add
adcl
sbb
lcall
insl
xor
mov
stc
es
push
add
scas
aam
adc
jbe
flds
xchg
movsl
mov
hlt
incb
sbb
inc
fadd
fwait
loope
imul
pusha
cmp
iret
push
sub
xchg
xor
movsl
pop
ret
and
inc
pop
push
je
ja
sysenter
ds
cwtl
push
stos
pop
cmp
insl
dec
push
jbe
js
int
test
mov
inc
xchg
xchg
push
mov
scas
pop
pop
mov
mov
lea
fcom
div
pop
fsubl
addl
mov
xor
cli
xor
mov
clc
cmp
cmp
insb
xchg
scas
loopne
pop
aam
fxam
mov
jns
push
and
in
adcl
pop
mov
lds
ret
fimull
jbe
and
ss
rclb
loop
jle
lahf
stc
mov
jle
jmp
push
jno
jae
dec
adc
adc
or
add
icebp
pop
fimull
sub
push
cmp
ds
jb
pop
or
sub
inc
jp
xor
pop
stc
ljmp
push
test
and
xchg
movsb
cmpb
cmp
popa
sub
mov
rcr
gs
mov
ret
adc
xor
jb
aas
xorl
je
mov
ss
pop
xorl
jns
outsl
aad
ljmp
inc
lods
push
sub
push
mov
std
pop
rorl
xchg
xchg
mov
xchg
or
dec
outsb
inc
mov
test
imul
jmp
cmp
movsb
or
loop
pop
sub
fildll
imulb
mov
rclb
xorl
test
and
jmp
push
push
daa
sbb
pop
ja
ss
cwtl
call
push
adc
lret
cmp
xchg
rcrb
outsl
jb
fiaddl
dec
sub
dec
in
dec
inc
mov
cmp
push
test
mov
mov
pop
test
rorb
mov
test
cmpl
pop
xchg
imul
subb
inc
dec
cmp
pop
fstl
cmpl
mov
shl
xchg
stc
fidivl
rcl
dec
mov
lods
scas
xchg
movsb
fldcw
xlat
fidivrl
lds
inc
ja
movsb
icebp
mov
loope
mov
lea
imul
bound
test
shll
push
cld
mov
cmpsb
cli
jo
pop
pop
in
mov
cmp
cmpsb
jb
adcl
fwait
push
in
mov
mov
das
test
repz
dec
cmp
aaa
pop
push
shll
mov
sbb
cmp
movsb
add
jae
mov
adc
jns
fidivrl
push
xchg
test
in
pop
rorl
xchg
jmp
sbb
cmpsl
mov
je
sbb
mov
xchg
js
mov
fildl
into
xchg
test
xor
jns
addr16
inc
imul
dec
mov
sub
sub
push
sbbl
and
std
xchg
xorb
shll
add
pop
xchg
sbb
pop
inc
jo
loopne
cmpsl
ja
mov
stc
stos
scas
in
pop
test
jge
ds
dec
fistl
lret
push
filds
cmpsl
sbb
ss
mov
inc
xlat
xor
int
cltd
sbb
jmp
cmc
mov
push
jnp
daa
jge
xchg
ret
xchg
or
push
mov
lea
pop
or
push
add
xchg
xchg
adc
jno
ss
mov
sub
cmp
or
movsl
sbbb
mov
sbb
les
stc
xchg
mov
jmp
push
and
jno
jne
ja
xchg
xor
repnz
pop
inc
stos
cmp
mov
dec
test
sub
fiaddl
cmp
in
push
arpl
cmpsl
cmc
lcall
and
test
push
cwtl
jb
loop
dec
fwait
sbb
rcll
adc
sub
sbb
jge
push
jns
xchg
es
mov
and
mov
mov
mov
subl
enter
test
cmp
adc
repnz
dec
pop
rcr
arpl
cmc
pop
int
xchg
movsl
pop
inc
xor
andb
sub
fisubl
and
mov
lret
xchg
add
gs
push
test
test
and
das
push
jnp
lods
cmpsb
cmp
dec
sbb
test
mov
std
mulb
rcr
jb
lea
jb
adc
les
push
add
push
loop
movsb
sub
lcall
mov
xchg
scas
cmpsb
mov
in
movsl
cmp
insl
pop
icebp
cmp
xchg
jle
mov
adc
mov
aad
and
popf
dec
loop
xchg
sbb
ja
jbe
xchg
cmp
xorb
push
sbb
or
sarb
jne
push
stos
rcrl
mov
pop
or
fsts
out
mov
pop
jb
adc
add
or
imul
in
or
adc
inc
jb,pn
lds
mov
lret
dec
push
mov
xchg
out
mov
sarl
and
dec
sbb
aas
insl
push
dec
ja
adc
iret
jbe
push
adc
leave
add
rcl
dec
lret
jb
test
fucom
sbb
pop
ds
dec
repz
inc
inc
and
adc
mov
jle
mov
imul
cltd
loope
pop
jno
xchg
pop
pop
mov
stc
mov
jle
cmpsl
jnp
repnz
call
mov
push
xchg
rorl
adc
jns
sbbl
xor
pop
lods
jno
stos
cwtl
and
jns
xchg
xorb
adc
jne
jnp
mov
xchg
imul
andl
xchg
add
cmp
xor
push
and
inc
push
pop
inc
cmp
sub
or
fs
cltd
dec
mov
shl
inc
aaa
addl
push
jae
insl
push
dec
sbb
mov
das
cmp
pop
and
pop
jge
mov
lea
xchg
xchg
mov
pop
jp
jle
pop
in
xor
lods
push
in
push
sbb
ror
daa
jae
popa
roll
out
pop
rcl
inc
orl
loope
adc
ja
movsb
popf
pop
push
mov
loop
pop
jle
dec
mov
xor
cmp
mov
mov
ret
sbb
or
in
cmp
aam
adc
dec
stos
ds
sub
lds
and
inc
dec
xchg
mov
lods
stc
fisubrl
ljmp
mov
cld
ficompl
xor
adc
mov
mov
lods
push
gs
stc
es
data16
and
leave
jno
dec
jns
mov
mov
loop
pop
incb
aaa
imul
pop
mov
mov
dec
dec
cmp
jb
dec
jge
mov
std
repnz
out
lcall
push
lock
push
pop
mov
inc
cmp
inc
pop
dec
jbe
iret
and
xor
jmp
call
pop
leave
aad
jbe
cmpsb
xchg
stc
mov
fcomps
pop
mov
xchg
adcb
arpl
shl
in
hlt
cwtl
add
and
orl
jecxz
cmp
decb
sbb
fimull
push
ret
sbb
dec
das
aaa
pop
shlb
push
jle
aas
movsb
rorb
xor
jae
pop
push
out
mov
push
or
xor
shlb
jne
pop
jb
bound
add
push
add
jle
movsb
mov
leave
and
add
shl
das
dec
out
sub
mov
adc
cmc
mov
iret
inc
xchg
xor
icebp
dec
dec
ss
aam
ds
mov
push
adc
sub
dec
les
cmp
bound
sub
stc
dec
dec
jbe
les
xor
xor
push
dec
add
and
sub
cmpsl
xor
mov
adc
popf
mov
push
fisubrs
repnz
cmp
popa
loop
ljmp
xlat
shll
inc
adc
inc
cmp
xchg
lea
fs
xchg
xchg
fxtract
test
mov
cmp
cwtl
adc
inc
mov
and
pop
sete
mov
pop
xchg
icebp
ficoml
pop
fnstcw
addl
xchg
dec
and
pop
cmpsl
dec
lock
lret
lcall
push
sbb
lea
sbb
rcll
xor
outsl
lret
adc
lret
jne
jns
xor
insl
ss
cltd
std
cmpsl
in
pusha
sub
xor
mov
mov
leave
mov
push
jbe
nop
adc
gs
ss
mov
daa
dec
adc
insl
mov
push
icebp
ds
stc
inc
jp
cmp
jbe
movsl
fsubl
leave
add
pop
test
pop
and
aaa
comiss
movsb
push
add
sbb
testb
lcall
mov
rcll
sarl
fptan
cmpsb
fstpt
sub
in
push
inc
loope
hlt
cmc
int
fisubl
lcall
xchg
xchg
jecxz
sahf
ret
movsl
push
adc
and
das
pop
jge
lret
inc
fs
and
jg
pop
xor
lods
enter
inc
mov
cmp
adc
adc
test
nop
adc
jae
mov
xor
repnz
pop
adc
mov
aad
pop
xchg
mov
sarb
sbb
out
mov
cmpsb
xor
mov
inc
inc
dec
inc
pop
in
fwait
loop
pop
sbb
or
adc
roll
or
xor
lods
fiaddl
add
jb
adc
aas
cmp
dec
in
add
popa
mov
mov
or
pop
jmp
gs
scas
ds
movl
call
pop
out
push
flds
xor
and
jae
sub
jns
cmp
jge
mov
mov
or
mov
pop
mov
sbb
add
cmpsb
repnz
rcll
popf
pop
push
bound
xor
aaa
ret
mov
bound
fnstcw
movsl
les
repnz
sti
xacquire
aaa
and
push
jp
popf
push
arpl
in
frstor
jns
mov
cmp
mov
clc
and
mov
xchg
mov
mov
test
test
sbb
daa
pop
jnp
pusha
out
mov
in
das
cmp
and
shrl
xchg
jno
sbb
cmpsl
mov
sbb
shll
rcl
jb
xchg
les
pop
jge
jg
jmp
imul
mov
insl
adc
xchg
jno
repnz
std
mov
sbb
fldenv
cmp
mov
mov
daa
jnp
pop
inc
bound
pop
les
andb
cmp
cmc
push
pop
mov
rol
orb
dec
mov
leave
dec
jecxz
cmc
ds
xchg
fisubrs
xchg
lds
adc
sub
add
movsl
shll
mov
in
cmp
lds
xor
adc
lcall
mov
jb
ja
cmp
cmp
add
aas
test
mov
shl
mov
outsb
jne
out
icebp
sub
adcl
sbb
fdivs
adc
push
xchg
enter
cwtl
ds
in
das
mov
add
mov
add
cmpsl
xchg
push
jns
bound
ljmp
iret
hlt
dec
jno
ja
ds
mov
and
push
adc
and
popa
sahf
test
mov
stos
shlb
xlat
outsl
adc
aad
pushf
add
cmpsb
xchg
dec
stc
leave
stc
aaa
sub
sahf
pop
push
pop
outsb
fdivrl
sahf
or
dec
rclb
loop
pop
add
sub
xchg
push
test
imul
sbb
or
imul
sbb
sub
and
pop
movsb
std
addr16
push
and
pop
ret
loop
sti
sbb
cs
repnz
dec
and
mov
cmp
leave
sti
ljmp
sbb
dec
sub
pop
jb
subb
xchg
xor
or
shll
pop
mov
xchg
ja
jg
push
mov
lret
out
das
cli
shl
and
pusha
cwtl
xor
aas
bound
sbb
mov
sub
adc
sbb
xchg
mov
or
cmpsb
scas
mov
mov
imul
into
dec
inc
jg
and
flds
inc
pop
or
mov
jl
inc
aas
push
xchg
push
into
cmp
and
cld
push
or
mov
sbb
or
jp
ficompl
fwait
aas
push
cltd
xchg
mov
nop
jne
xchg
mov
dec
popl
dec
sbb
ljmp
xchg
sbb
loope
daa
jge
xchg
mov
cmp
push
fcmovb
xor
xchg
push
in
repnz
scas
and
push
mov
mov
hlt
mov
daa
xchg
insl
add
scas
out
into
cmpl
dec
xchg
scas
mov
icebp
push
pop
sub
mov
pop
mov
push
or
in
cmc
loope
sbb
in
flds
andb
mov
push
cmpl
fbstp
add
mov
push
push
mulb
mov
cmp
bound
sbb
pop
add
or
data16
xchg
sbb
imul
ljmp
push
inc
push
cmp
jb
in
jno
sbb
jno
jae
pop
jne
xchg
inc
jmp
xchg
mov
sub
and
pop
bound
mov
add
std
filds
pop
mov
xchg
dec
aad
jb
xorl
sub
imul
sub
push
inc
dec
std
dec
add
push
jle
mov
adc
sbb
xchg
pop
cltd
dec
popf
push
lods
aas
mov
aad
adc
mov
cmp
cmpxchg
push
xchg
ljmp
mov
jp
xchg
sbb
seta
xchg
adc
in
lods
cwtl
ja
mov
out
jb
sub
mov
lods
inc
jb
mov
mov
push
mov
xchg
cmpsl
inc
lcall
cmpsl
test
shr
ds
mov
dec
pop
aas
in
cmpsl
push
daa
aam
adc
lcall
cmp
inc
mov
push
test
loop
loopne
ficoml
dec
cli
ds
shll
mov
sbb
test
subl
ds
add
ret
lds
shll
add
xchg
insl
movsl
mov
xchg
push
and
shrl
add
scas
inc
push
into
or
aaa
test
shrb
xchg
pop
xchg
movsb
mov
aam
lea
lds
mov
clc
outsl
mov
and
iret
mov
test
adc
push
inc
and
cs
inc
ljmp
mov
inc
fdiv
call
jmp
roll
fdivs
insl
push
mov
aam
xor
inc
add
push
loop
stc
mov
jae
bound
pop
inc
jnp
push
cmpsb
jge
addr16
std
mov
xchg
mov
and
sub
aas
push
mov
cmc
ja
adc
mov
mov
and
ds
xchg
outsl
jno
jne
xchg
and
ucomiss
mov
daa
and
les
test
inc
leave
sub
daa
jg
loop
mov
cltd
inc
or
bound
push
pushf
aaa
mov
pop
pop
mov
push
icebp
pop
repnz
jne
lods
sti
sbb
push
ss
in
xchg
or
outsl
imul
enter
insl
std
flds
cmp
aam
in
hlt
jecxz
sbb
outsl
push
xchg
adc
xchg
mov
leave
inc
xor
jno
mov
nop
sbb
ljmp
mov
xchg
in
jmp
das
scas
test
stc
imul
jbe
fnsave
lock
shrb
shll
clc
push
add
into
dec
mov
push
imul
cmc
sbb
mov
mov
sbb
pop
ds
sbbb
insl
push
inc
mov
aam
in
mov
rcrl
mov
pop
aaa
lahf
dec
fistps
std
loop
mov
pop
ljmp
scas
scas
les
or
cwtl
and
push
ret
cmp
jp
aas
loope
orb
xchg
push
xor
pop
lea
xchg
imul
inc
cli
dec
add
outsb
or
push
cmp
test
roll
and
daa
cmpsb
add
xchg
loop
mov
adc
ret
lea
scas
pop
mov
loop
popf
imul
std
ss
or
inc
dec
sbbb
xchg
subb
sbb
push
push
stc
aaa
dec
jno
xor
dec
sbb
fcmovu
cmp
aas
jmp
ljmp
adc
sbb
jp
push
xchg
sbbl
ds
shrb
ljmp
mov
cmp
mov
push
sarl
pop
cmp
pop
xchg
icebp
add
aam
gs
inc
jb
test
and
aam
in
xchg
adc
dec
sbb
mov
stc
test
mov
lods
insb
xchg
test
sbb
xchg
xor
ljmp
xchg
out
imul
pop
pop
xlat
repnz
fiaddl
out
add
cmc
out
sub
pusha
das
andl
stc
pop
imul
xchg
addr16
fidivs
ss
add
mulb
rcrb
inc
mov
pop
mov
fidivrl
nop
pop
adc
addr16
push
pop
xchg
jle
int3
subb
or
das
cltd
mov
js
nop
popa
jle
mov
sbb
cld
xor
sbb
cmp
push
adc
jecxz
push
and
xchg
add
push
push
cmp
push
fisttps
dec
pushf
and
ficomps
sbb
push
insl
jne
inc
mov
add
clc
out
testb
dec
push
sub
inc
push
dec
int
das
pop
jl
mov
adc
out
push
cmp
ror
inc
pop
cmp
js
dec
xchg
cli
test
dec
sub
pop
adc
leave
sub
sbb
or
or
or
shll
andb
cmc
imul
fdivs
pop
outsb
jns
loop
gs
lods
std
cwtl
jno
xchg
lret
es
jbe
es
dec
push
push
iret
push
xchg
call
pop
jb
fstpt
mov
bound
pop
outsl
jnp
leave
repnz
test
das
mov
and
jle
mov
xchg
mov
bound
dec
sbb
mov
fmul
jle
negb
pop
test
dec
loopne
int
xchg
mov
fcomp
int
jbe
adc
push
jnp
xchg
dec
push
bnd
dec
sbb
roll
and
mov
jnp
imul
leave
xor
stos
mov
ss
cmpsl
dec
and
mov
push
mov
test
imul
xchg
notb
mov
xchg
jae
orl
pop
or
cmpl
in
jno
cmpb
pop
sahf
cmpl
cld
pop
push
add
mov
mov
ja
pop
push
rcrb
test
push
cmpsb
cmpsl
cmp
add
xor
or
cmp
jnp
jb
sbb
push
inc
cmc
mov
fxch
add
iret
sub
cltd
in
xchg
sub
sbb
fnstsw
and
call
push
mov
test
test
bound
ds
jbe
ficompl
inc
jbe
scas
push
daa
icebp
xor
and
jno
test
pop
shll
jmp
cmp
outsl
addr16
cli
insl
imul
sahf
fisubrs
and
ljmp
push
adc
sbb
orb
pop
into
xchg
push
sbb
xchg
iret
movsb
in
xchg
sarl
hlt
push
fprem1
xchg
adcb
jne
scas
ss
movl
dec
xor
pop
lea
leave
fisttpl
loope
pop
cmp
push
test
and
jae
ret
xchg
fisubrl
sarl
jle
xchg
adc
insl
jne
dec
rcl
lds
add
aam
in
inc
lea
data16
lret
bound
ja
gs
jmp
sbb
in
xor
jl
dec
cltd
lcall
fidivl
clc
mov
xor
fisubs
xchg
lret
push
pop
xor
in
xchg
and
xchg
and
mov
sbb
add
imul
rorl
ss
mov
movsl
push
sbbb
xchg
dec
cmpsl
cmp
mov
or
ds
and
fmull
pop
mov
sbb
stc
stc
inc
std
push
ret
mov
rorl
pop
in
std
adc
or
daa
popa
dec
add
inc
pop
cmc
es
xor
jge
xchg
xchg
add
daa
adc
cmpb
adc
ljmp
movsb
xchg
add
scas
pop
mov
orl
lods
repz
lret
dec
push
je
lcall
hlt
jb
cmp
jle
push
pop
mov
std
div
into
inc
or
mov
inc
mov
mov
xchg
ss
mov
imul
imul
lods
adc
icebp
mov
pop
rcrl
out
sbb
and
add
das
int
and
ljmp
roll
push
mov
movsb
cmpsl
adcb
js
pop
mov
push
lds
and
mov
aad
fsubrs
pop
clc
aam
add
sbbl
daa
cmp
scas
aaa
aam
inc
outsl
daa
fstl
cmp
int
imul
mov
test
popa
cmpsb
cmc
popf
movsl
cmpsl
push
loop
dec
rorl
or
pop
cmpsb
aam
popa
out
inc
or
pusha
aam
pop
test
add
push
xor
and
pusha
ficoml
aad
pop
pop
enter
xor
imul
xor
or
and
jb
adc
sub
cli
adc
sub
roll
int
daa
leave
lret
lret
adc
jno
sbb
inc
mov
outsl
lret
xor
pop
sbbl
fmulp
dec
sbb
mov
jo
lds
dec
xor
test
popa
xorb
or
xchg
dec
push
cmp
jno
inc
ss
out
xor
dec
inc
lea
add
pushl
adc
pop
jns
inc
pop
inc
aam
jbe
out
out
mov
ss
stos
sarb
jns
xchg
movsb
mov
imul
repnz
pop
cmpsl
mov
xchg
cli
mov
mov
xor
add
out
loopne
add
jl
lock
outsb
adc
push
add
pop
push
mov
out
pop
and
jae
out
xchg
stos
sub
into
inc
aam
stc
rcrb
gs
push
jne
jge
lea
ficoms
inc
lods
scas
loop
mov
adc
fisttpll
in
in
push
cs
or
dec
xchg
xor
rorl
sbb
mov
or
xchg
push
cs
push
xchg
scas
sub
imul
mov
aaa
jb
gs
cmp
mov
pop
mov
push
rolb
roll
aas
mov
loope
ljmp
adc
and
mov
sub
lahf
inc
fdiv
fmull
adc
sahf
out
pmulhw
ror
out
loop
cmp
gs
testb
dec
ficompl
imul
shl
in
dec
sbb
jg
xchg
xchg
popa
fs
jbe
iret
call
mov
dec
push
dec
push
inc
mov
xor
jns
rorl
rol
jecxz
dec
in
fs
xchg
xchg
aam
sbb
pop
int3
mov
fnstenv
mov
fimull
loope
mov
cmpb
or
push
adc
or
push
or
pop
pusha
cmp
mov
fdivr
add
addr16
das
jmp
or
ljmp
xor
movsl
ret
add
cmpsl
cwtl
mov
push
add
test
ss
xchg
inc
push
mov
in
and
push
repnz
jecxz
pop
xchg
dec
pop
insl
mov
icebp
in
or
jbe
and
sarl
in
and
fwait
inc
add
out
fiadds
and
xchg
mov
lock
jne
sub
or
jnp
cs
push
pop
decb
dec
cld
inc
daa
push
jno
pop
push
pop
ljmp
jno
stos
jnp
xor
push
push
ds
xor
sbbb
push
shlb
jbe
jb
mov
shll
xchg
or
push
cmpsb
out
idiv
stc
jb
aaa
xchg
or
push
inc
jp
push
outsb
xchg
pop
lret
aaa
cli
xchg
inc
pop
lret
pop
dec
jns
mov
lods
add
das
into
movsb
lret
sbb
pop
dec
dec
jg
stc
xchg
repnz
int
aaa
cbtw
xchg
clc
lods
test
sbb
dec
out
sub
icebp
push
stos
test
pop
enter
test
sub
push
cli
xor
daa
aas
jno
pusha
push
lret
orb
pop
jae
das
mov
push
mov
push
ss
lahf
out
clc
ljmp
mov
sbb
and
test
outsl
pop
out
mov
and
in
or
outsl
es
adc
and
adcl
data16
mov
out
sbb
jg
lcall
leave
sub
add
mov
add
inc
int
das
fnstsw
jl
and
rcrl
repnz
stc
loope
or
dec
pop
pop
ret
xchg
inc
pop
cli
sbb
aaa
push
arpl
outsl
repnz
xor
mov
popa
shl
mov
je
cmp
fiaddl
pop
or
test
std
cmc
cmp
movsb
insl
mov
mov
outsl
insl
das
mov
jb
or
sbb
je
push
outsb
mov
pop
jb
mov
lods
in
stos
call
jbe
xchg
jno
scas
out
hlt
pmaddwd
daa
jne
mov
and
push
fbld
shrl
loopne
movsl
and
movsb
popa
sti
popf
adc
dec
iret
ss
mov
cmp
push
mov
push
pop
lahf
push
ss
jge
nop
aam
imul
add
dec
push
aaa
mov
lock
fldcw
mov
add
and
pop
pop
ljmp
pop
dec
and
fs
arpl
lods
jecxz
and
pop
mov
mov
xchg
dec
in
adc
jae
mov
je
daa
rolb
sub
sbb
xchg
test
int
mov
icebp
push
mov
mov
dec
ret
subl
inc
dec
xchg
mov
rol
inc
jae
jecxz
and
fdivl
idiv
inc
aas
movsl
jmp
movsl
movsb
aam
in
sub
test
icebp
add
popa
hlt
inc
ss
xchg
cltd
xor
mov
movsb
push
rolb
movsb
imul
aas
in
repnz
ds
cmp
movsl
mov
loope
popf
es
bound
mov
mov
mov
outsb
mov
push
fimull
cmp
inc
xchg
mov
xor
outsl
xchg
mov
es
outsl
mov
mov
push
xchg
repnz
cli
jecxz
cmp
push
shll
sub
mov
popf
sbb
cmp
popa
mov
fstpl
aam
mov
fldcw
adc
leave
inc
mov
aam
jae
pop
fwait
mov
insl
out
dec
ss
xchg
add
jne
rcrl
dec
repnz
and
pop
cmpsb
leave
test
cmp
imul
pop
push
mov
or
jl
cltd
pop
ja
or
push
into
jbe
pop
xchg
xor
sub
les
jp
xor
fcompl
jp
xchg
pop
pop
mov
data16
ret
pop
ss
popf
loop
push
cmc
mov
mov
in
jbe
stc
mov
cli
addb
pop
dec
fiaddl
push
or
mov
sbb
pop
pop
mov
mov
dec
mov
aas
jmp
adc
xchg
xchg
sbb
push
std
pop
jecxz
lods
gs
sti
mov
push
dec
push
je
mov
inc
sbb
fldcw
rorl
add
sub
mov
sbb
imul
push
push
lcall
cmp
ds
ret
jl
jb
cmp
pop
jnp
cmp
ljmp
pop
ror
popa
aas
cld
rcrb
dec
mov
xchg
adc
loop
cli
fxrstor
scas
mov
lcall
mov
inc
push
sarb
push
mov
icebp
jno
mov
rcl
leave
rcrl
xchg
ds
rcll
sbb
loop
mov
jp
add
ret
mov
dec
add
push
sub
adc
mov
push
xchg
push
cltd
cmp
shl
stc
sbb
icebp
xor
cmpsb
push
pcmpgtw
bound
fnstenv
jp
cmpb
mov
mov
ret
rcl
stc
loop
shr
repnz
adc
popf
and
ret
icebp
int
daa
push
pusha
es
and
ffree
inc
push
dec
push
push
sub
mov
xchg
mov
iret
mov
jno
ret
rorb
ficoml
int
inc
push
cmpsb
push
or
popa
or
ss
outsl
xor
repz
loop
pop
sbb
pop
inc
fcoms
scas
cli
push
test
or
mov
les
aam
in
hlt
dec
add
cwtl
stc
popa
clc
imul
int
jb
mov
popa
xor
pop
cmp
jecxz
adc
in
fs
arpl
out
pop
xor
and
add
jno
sbb
jb
jp
sahf
mov
lea
test
xchg
mov
pop
inc
sbb
push
addb
addr16
outsl
sbb
jg
and
roll
lahf
add
mov
xchg
mov
add
in
xchg
imull
adc
sbb
or
jbe
movsl
cmp
dec
dec
clc
push
negb
dec
push
push
xor
stc
decb
inc
mov
sbb
repnz
rorb
loopne
std
lock
adc
add
sbbl
daa
xchg
pop
aaa
aam
xchg
xor
push
add
lods
addr16
lods
ja
jg
insl
adc
cmpsl
ds
add
mov
sbb
filds
daa
sbb
or
lcall
xchg
and
sub
icebp
jl
lcall
fldcw
cmpsb
dec
jbe
ret
stos
push
jns
mov
icebp
stc
fxch
pop
ss
push
mov
jne
imul
fidivl
cltd
ja
pop
or
cmp
cmc
lret
cmp
cltd
dec
sbb
add
push
cltd
sub
outsl
adc
in
push
sbb
sbb
sbb
jb
or
repnz
cmc
and
cli
repnz
stos
inc
ficoml
imul
test
mov
stos
cmp
push
mov
into
pop
fwait
mov
das
movsl
jmp
fwait
mov
mov
sub
cmpsl
sub
std
dec
mov
dec
jmp
xor
dec
jmp
jae
pop
mov
leave
repnz
cli
sub
mov
mov
pop
sub
testb
mov
sub
mov
mov
outsl
sub
dec
jl
test
cmp
pop
cli
cwtl
xor
imul
gs
or
lcall
lea
push
cltd
or
push
adc
mov
mov
sahf
jmp
pop
bound
dec
lods
adc
movsb
mov
fwait
push
sahf
lret
xchg
bound
adc
test
mov
stc
stos
and
fidivl
dec
movsb
cmpsb
test
pop
inc
mov
scas
jp
fidivrs
jno
xor
xchg
cmp
and
rcll
rcll
pop
cmp
lret
sub
mov
nop
pop
adc
ret
sub
add
out
daa
adc
or
and
sub
xor
decb
or
call
rclb
sbbb
xor
pop
and
xchg
mov
movsb
andl
mov
mov
sarl
pop
loope
push
icebp
push
stc
push
add
or
repnz
sub
xor
sahf
mov
ja
clc
push
jb
sbb
xorb
mov
mov
and
in
dec
or
and
xor
add
sbb
mov
add
push
xchg
pop
cltd
add
test
es
das
cmp
mov
movsb
icebp
pop
cmp
ljmp
and
xor
repnz
mov
jecxz
bound
leave
stos
xorb
sbb
mov
mov
cmp
push
pop
ss
mov
icebp
xorl
and
cmp
cmpsb
movsl
dec
lcall
clc
jno
jns
and
mov
mov
repnz
out
daa
test
pop
movsl
icebp
push
xor
sbb
sbb
sbb
inc
or
push
jbe
iret
bound
sahf
jb
ffree
addb
ret
mov
pop
ret
loopne
loopne
loopne
fsubr
sub
adcb
and
pop
outsl
inc
sbb
push
cmp
jno
sbb
xorl
dec
mov
push
lock
and
sub
inc
leave
in
aaa
push
rcrb
bound
int
xchg
sahf
orb
cmp
mov
test
mov
ret
ret
rclb
repnz
or
cmp
mov
dec
add
daa
lea
outsb
or
add
or
shll
push
loope
jmp
add
and
ret
add
shl
lret
adc
add
stc
adc
or
or
jb
in
cmc
sub
mov
test
pop
push
mov
or
imul
mov
xor
imul
stos
mov
mov
push
ss
jl
insl
pop
pop
loope
scas
cmpsl
mov
cltd
test
ds
and
jp
sbb
test
lea
flds
xchg
lret
sbb
idiv
pusha
add
popa
ljmp
cld
imul
subb
pop
pop
out
fisubrl
fs
pushf
stc
cmpsb
push
movsl
jnp
outsb
cmp
push
pop
popa
xor
imul
lcall
outsb
mov
sub
lcall
pop
insl
cmp
cltd
scas
xor
daa
xor
lcall
imul
lods
cmp
lods
push
push
mov
jp
stos
ret
fiaddl
fdivrp
jbe
ret
pop
loope
mov
lea
stc
jmp
imul
push
push
mov
sbb
dec
ljmp
popa
ret
jmp
cmp
lea
ljmp
ret
test
mov
xchg
pop
ret
rolb
fimull
add
or
sbb
mov
dec
test
mov
leave
xlat
bound
sahf
stc
add
add
pop
int3
add
icebp
roll
stos
xor
outsb
mov
or
sub
mov
push
cmpsl
rcll
adc
and
shr
loop
rcrl
sbb
popa
ss
icebp
addb
jbe
pop
and
test
and
lret
jg
dec
inc
jo
or
lods
insl
int3
push
popa
xorl
add
mov
movsb
jno
pop
aaa
shr
sub
xchg
fidivrs
sbb
lret
mov
push
scas
cmp
into
cmp
shl
mov
mul
jb
push
fidivs
icebp
and
dec
jle
mov
add
adcl
fdivl
xchg
data16
fimull
cmp
push
bound
and
shl
insl
icebp
xchg
mov
xchg
push
mov
rcl
cmpb
stc
push
xor
in
or
test
lods
popf
pop
lods
mov
loop
dec
jns
push
lds
jle
icebp
idiv
fidivs
scas
adc
ret
pop
cmp
sbb
cmp
xchg
hlt
test
imul
cmp
scas
mov
repz
aaa
xor
push
sub
test
lret
movsl
or
cmp
jbe
hlt
mov
cmpsl
mov
jbe
int
lcall
mov
daa
jp
lret
inc
testb
iret
rcll
pop
roll
lret
in
stc
stos
and
imul
sbbb
xor
push
add
ret
adc
jb
push
loope
frstor
pop
jno
mov
jb
loope
andb
cmc
shrl
cmp
cmp
mov
push
push
stos
cmp
cmc
cmp
sbb
jmp
and
ret
xor
scas
and
sub
mov
mov
leave
xchg
pushf
lcall
jmp
cmp
into
mov
inc
lcall
andb
aaa
and
and
fxch
mov
popf
pop
mov
push
ret
pop
push
std
mov
lret
movsl
xor
sahf
lcall
and
fstps
push
andl
mov
lahf
repnz
jge
imul
sbb
pop
push
cmp
movsl
lret
add
pusha
cmp
pop
sbb
jle
arpl
mov
pop
fidivs
xchg
add
cmp
icebp
movsl
dec
and
lea
xchg
lds
cltd
mov
imul
push
sub
and
test
ds
pop
imul
in
pop
or
int
popa
lds
stos
fstps
push
loop
loope
push
mov
pop
cmp
lods
jb
xchg
and
cltd
jne
jecxz
xor
cltd
ss
icebp
pop
sbb
mov
movsl
sub
stos
gs
cmp
rcll
pop
cmp
adc
fldcw
cld
jmp
jns
out
mov
jbe
lcall
test
mov
ret
sahf
sub
jle
sti
shlw
inc
jp
xor
sahf
insl
lcall
jno
and
in
push
or
push
mov
mov
leave
cmp
jl
icebp
jns
es
jecxz
icebp
xor
stc
shll
inc
jns
inc
mov
jecxz
leave
stc
lods
sbb
insl
xchg
push
pop
sub
sbb
mov
and
faddl
or
add
pop
leave
sbb
jmp
into
scas
pop
and
mov
mov
pop
add
xor
sub
jb
in
mov
or
sbb
call
stc
cmp
jne
and
push
jb
cmp
ljmp
subl
inc
icebp
inc
xchg
xchg
ljmp
mov
aam
mov
aam
cmp
mov
cltd
and
mov
fldcw
and
lcall
cmp
fisubrl
xchg
mov
jns
sbb
iret
cmp
push
aam
mov
lds
xchg
aas
imul
xor
lcall
mov
mov
mov
lcall
dec
lret
mov
jns
cmp
scas
lea
movsb
sub
cltd
mov
jge
mov
sbb
jne
cmp
jns
mov
mov
xchg
lret
add
pop
cmp
ret
andl
jns
loope
xor
sub
xor
jp
xchg
mov
jecxz
imul
stos
or
pop
insl
jb
ss
stos
push
add
inc
insl
lret
mov
mov
sub
mov
cmpsl
mov
outsb
stc
pusha
mov
subl
sbb
and
add
cltd
pop
test
and
or
inc
xchg
inc
cmp
jp
stc
lcall
fcmovbe
loope
imul
cmp
int
and
sbb
push
inc
mov
outsl
lret
ljmp
cmp
jns
aad
mov
aaa
mov
sub
js
divb
and
std
jns
rcr
stc
sbb
sbb
in
lret
aaa
cli
add
pop
icebp
popa
stos
in
jle
aas
loope
into
xor
cmpb
inc
fxch
and
cli
loope
cmpsb
cmpsl
xor
lods
push
jp
fstpl
movsb
lret
cli
jmp
mov
inc
stc
loopne
fmull
jb
xor
aaa
jp
std
stos
test
xor
sbb
fldenv
jns
lret
loope
or
pop
cmc
cmpb
lret
mov
cli
ret
sbb
xchg
stos
mov
xchg
add
cs
xchg
sbb
mov
inc
mov
into
stc
ret
dec
xchg
sbbl
pop
and
dec
stos
cs
shrb
push
stc
and
loope
imul
mov
xchg
inc
sub
cltd
test
mov
daa
dec
rclb
jns
jns
xchg
lods
cltd
das
add
movsb
stc
cmp
pop
cli
inc
inc
inc
rcrb
loope
push
xor
push
idivb
imul
add
cmp
lods
push
sarl
leave
shll
add
orl
jne
shl
cmpsb
xchg
push
push
jns
jns
xchg
dec
lods
cltd
adc
xchg
cmp
cli
bound
fucomp
stos
and
pop
jno
rcll
add
mov
lret
push
sub
cmpsb
movsl
popa
push
aad
fnstsw
push
test
lcall
rcr
adcb
stos
insl
add
push
mov
cltd
push
inc
aaa
jmp
dec
test
dec
mov
vcvtsi2sd
loop
or
rcr
mov
ljmp
xor
stc
stos
or
jbe
stc
lds
cmp
clc
test
pushf
icebp
repnz
inc
inc
jmp
bound
dec
fnstsw
add
xchg
push
icebp
leave
mov
movsl
lret
loope
pop
xor
add
add
xorl
std
iret
test
flds
adcl
and
sub
aam
add
pop
aam
stos
jns
lret
aas
ljmp
sub
and
push
adc
dec
jbe
repnz
iret
sbb
loop
dec
add
fisubl
aam
push
or
push
into
and
add
fbld
lcall
sub
nop
sbb
inc
add
in
ret
test
xchg
movsl
jns
xchg
imul
sahf
stc
fmull
int3
repnz
leave
loope
jp
lcall
or
sbb
add
pusha
adc
pop
fxch
sbb
xorb
ret
andl
mov
std
imul
test
sbb
mov
jb
push
test
ds
stos
mov
movsb
and
jns
rolb
lret
and
fxtract
icebp
jns
inc
inc
mov
add
mov
pushw
or
sbb
xchg
idivl
bound
and
sbb
mov
sbb
or
insl
xor
mov
leave
lret
fnstcw
stc
cmp
stos
mov
cmp
push
pop
mov
xchg
je
aaa
xor
stos
xchg
lods
xor
mov
xchg
push
ret
jp
jp
leave
cmp
dec
sbb
push
sbb
cli
mov
andl
cmp
test
pusha
xchg
loop
sbb
cmp
or
ljmp
or
lret
and
or
adc
mov
xor
ficompl
js,pt
insl
mov
or
pop
jle
mov
es
cmc
adc
xchg
aaa
ret
xlat
jb
add
pop
mov
daa
jno
xchg
loope
imul
cmc
test
mov
sbb
mov
push
mull
insl
xchg
push
inc
loop
mov
lret
stc
in
jp
andl
lcall
xchg
mov
sub
fisubl
pusha
add
push
ljmp
andb
jb
test
into
lds
adc
jns
in
add
popa
lret
sub
orb
mov
jns
push
ljmp
imul
imul
xor
and
mov
nop
xchg
loope
std
dec
movsl
loopne
lea
ret
subb
or
icebp
ficoml
xchg
popf
shrb
ss
mov
mov
movsb
cmpsl
jae,pn
xchg
mov
pop
and
mov
test
bound
xor
xchg
push
push
lret
fxtract
cmp
or
mov
or
std
pop
lcall
pop
xchg
rorl
lds
in
push
inc
test
popf
pusha
sahf
xchg
push
test
jge
scas
jns
cmp
ret
fstpl
jo
push
nop
daa
inc
add
outsl
xchg
sub
adc
outsl
fptan
mov
in
sub
hlt
fldenv
roll
pop
lcall
pop
xchg
lods
or
and
jne
insl
movsb
mulb
icebp
sbb
fidivl
xchg
imul
jp
inc
jbe
or
roll
fldcw
or
inc
or
hlt
cmp
or
mov
or
int
mov
mov
stos
lea
out
jne
sahf
insl
dec
sahf
loope
arpl
loope
xor
lcall
pop
aad
std
out
ret
jbe
lret
not
pusha
repz
pusha
fstp
dec
xchg
xor
cmpb
dec
and
les
jmp
clc
inc
pop
aad
or
cmpsl
repnz
fxch
scas
adc
rolb
mov
loop
pop
dec
xchg
mov
dec
inc
mov
cmpsb
pop
fstps
inc
or
jb
xchg
insl
xlat
push
loop
ljmp
mov
stos
xchg
cmp
fnstcw
xor
lcall
xchg
ret
push
mov
jb
sahf
pop
dec
inc
mov
stos
jecxz
mov
mov
jbe
push
fstps
bnd
test
ss
cs
es
push
pop
std
mov
dec
std
inc
pop
fnstenv
dec
sub
stc
std
adc
push
stc
adc
mov
pop
ret
ret
sub
andb
mov
pop
inc
inc
lret
lcall
pop
aad
lret
icebp
push
xorb
stos
in
lret
repz
cmp
gs
mov
mov
andl
lcall
pop
cltd
jno
daa
sub
sbb
loope
push
ja
imulb
mov
lea
jbe
mov
movsb
mov
pop
ret
jbe
ret
outsb
pop
ret
pop
rcrl
push
inc
popf
ret
gs
xchg
mov
xchg
sarl
lods
and
int
jns
in
pop
ret
sarb
sbb
popa
dec
jbe
mov
insb
aad
stc
icebp
test
es
xor
stos
in
in
std
inc
aam
push
pop
roll
lds
scas
lds
mov
pushf
jle
jb
fadds
xchg
jns
inc
cmp
cmp
idivb
loop
inc
fidivrl
inc
adc
mov
insb
aad
mov
jl
jbe
inc
imul
jl
dec
ret
inc
pop
xchg
dec
or
cmpsl
repnz
push
jecxz
mov
incb
daa
sbb
push
mov
inc
outsb
pop
shll
adc
movsb
mov
pop
jp
xor
jle
mov
outsb
ja
test
icebp
test
fidivrl
bound
jmp
push
mov
ficomps
lahf
rcr
out
jns
out
jnp
add
js
lds
stc
mov
jmp
aad
mov
mov
cmpb
mull
xchg
pop
and
fildl
insl
mov
jl
mov
movsl
imul
shrl
cmpl
jne
lret
and
std
cmp
xchg
icebp
pop
andb
or
out
mov
mov
sub
hlt
jge
xchg
jno
cmpsl
hlt
pop
pop
and
flds
nop
inc
cmp
xor
and
adc
ss
repnz
or
push
ficompl
jbe
int
mov
push
rcr
mov
mov
sti
arpl
mov
pop
les
pusha
lfs
les
insb
popf
sbb
icebp
inc
aad
lret
ss
and
std
rcrl
mov
mov
mov
stos
jecxz
ds
divl
outsl
aad
lcall
jp
testl
pop
and
mov
outsl
aad
sub
and
mov
sbb
gs
imul
jns
jno
mov
pop
xor
ret
ljmp
es
mov
outsb
mov
bound
jb
sub
push
aas
fsts
int
shr
repnz
jbe
imul
xchg
movsb
mov
sub
inc
into
gs
cmpsb
xorb
into
mov
orb
add
xor
mov
mov
and
pop
pop
mov
outsl
inc
mov
movsb
mov
xchg
imul
cmp
cmpb
adc
xlat
xchg
imulb
std
sbb
add
gs
cmc
mov
movsb
fnstcw
jecxz
leave
jecxz
shl
mov
mov
in
test
add
cli
inc
adc
push
dec
loop
dec
rcrb
into
mov
and
mov
scas
pop
hlt
ret
jns
jbe
or
andb
mov
push
leave
cltd
sar
cmp
or
addb
add
cmpsl
push
inc
insl
and
insl
sbb
xchg
cmp
scas
aaa
loop
fimull
out
jbe
add
xchg
mov
sub
or
mov
bound
test
out
and
andl
fdivrl
mov
popf
rcr
iret
dec
stc
push
jnp
add
shl
int
mov
ror
sub
xchg
xchg
adc
jns
dec
repnz
mov
jecxz
ss
loop
pop
jo
jo,pn
es
pop
insl
mull
pop
shrb
dec
dec
gs
push
mov
arpl
mov
and
mov
rcrb
mov
jl
cltd
pop
mov
lds
xor
pusha
subl
xor
insl
cltd
sub
je,pt
out
popa
ljmp
or
dec
add
flds
jmp
in
cmp
dec
gs
bnd
mov
lcall
mov
or
int
in
or
rorb
jle
repnz
push
rcr
adc
sahf
push
repnz
and
jns
mov
jns
icebp
or
and
add
xor
inc
inc
in
in
adc
sub
shl
cli
inc
stc
loop
add
cmp
jge
jno
push
pop
add
jge
mov
and
inc
lods
mov
jb,pt
adc
xchg
push
and
pop
push
adc
cli
sub
pop
aad
mov
rol
cmpsl
bound
insl
sarb
push
cmpsl
popa
rcrl
inc
ret
push
flds
shl
cmp
shlb
hlt
bound
ret
rol
inc
cmc
push
ret
xchg
imul
stos
push
xchg
rcll
psrld
lods
or
push
xor
jecxz
daa
aad
jns
jecxz
test
jmp
cld
lahf
stc
mov
outsb
mov
cltd
loop
inc
xor
add
pop
mov
aam
jne
test
adc
cmp
lahf
out
loopne
loopne
loopne
loopne
aam
jns
movsb
and
aam
in
hlt
dec
add
pop
add
insl
repz
jge
test
popf
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
fsubrl
comiss
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
setge
push
fidivrs
out
xor
ficompl
lods
loopne
lods
cmp
daa
push
popa
insl
aaa
mov
mov
mov
sti
sarb
jecxz
fistpl
adc
inc
mov
stos
fstl
aas
sbb
repz
xchg
pop
test
sub
jp
lods
push
xorb
and
notl
cmc
out
filds
aam
mov
mov
fucomi
clc
sti
rcr
sbb
adc
out
insl
sub
and
popf
and
xor
sbb
outsl
add
cwtl
xor
gs
cmp
test
sbb
jg
pop
xor
xor
cs
push
and
push
inc
mov
popa
xlat
loope
sbb
and
sbb
mov
mov
daa
arpl
movsb
add
mov
daa
xor
mov
mov
arpl
jns
mov
dec
pop
mov
loopne
and
test
fists
xchg
adc
fidivl
mov
fwait
bound
adc
dec
pop
insl
stc
fildl
andl
sbb
mov
sub
cmc
dec
stc
push
addr16
or
adc
xchg
pop
mov
pop
fnstcw
mov
add
fistpl
push
add
mov
and
fcmovbe
aam
cmp
popa
cmp
push
inc
fucomi
out
mov
sub
imul
sbb
adc
inc
adc
sbb
sti
scas
loope
shll
or
das
push
xchg
cs
dec
popa
pop
pop
sbb
icebp
sub
aad
xor
sub
and
sub
adc
xor
sub
loop
stc
mov
sbb
mov
inc
xchg
outsb
sbb
xchg
sub
or
jae
sub
add
inc
mov
inc
stc
xor
aas
push
movsb
sti
pop
mov
pushf
inc
outsl
sub
xor
jmp
and
es
pop
sub
mov
pop
xchg
in
jne
inc
test
nop
rclb
cmp
fst
jb
mov
adc
push
inc
loope
pop
mov
iret
push
cmc
int
inc
lret
cmp
adc
cmpb
mov
cmp
jecxz
mov
cmp
loope
fimuls
adc
ljmp
ja
loope
adc
jne
inc
sub
xlat
je
xor
xchg
adc
adc
lret
inc
dec
and
adcl
cmp
and
pop
xchg
pop
sub
and
jno
icebp
outsl
popa
inc
and
add
fldl
ret
xchg
int
sbb
jno
adc
mov
shrl
popa
stc
sbb
adcl
test
shr
sub
xorl
mov
cmp
clc
xchg
xor
ja
xchg
dec
and
dec
or
movsb
sub
push
jae
sub
mov
or
pop
mov
add
xchg
insl
or
in
clc
pop
call
aam
pop
dec
pop
iret
int
sub
xchg
loop
or
pop
test
cmpsb
dec
inc
sbb
push
push
or
in
sbb
pop
cmc
jb
cmp
add
xor
sub
and
mov
sub
icebp
ja
loop
sarb
sbb
sbb
lds
dec
pop
jge
mov
inc
pop
movsb
cmp
mov
xor
loop
nop
dec
dec
mov
pop
test
jge
xor
fwait
sbb
pop
add
das
sbb
fsts
cmp
loop
daa
rcrl
ret
stc
mov
adc
sub
pop
or
aaa
push
inc
jb
sub
pop
jp
xchg
dec
shlb
pop
and
icebp
adc
sbb
mov
outsb
pop
xchg
pop
rcll
and
mov
pop
mov
sbb
movsl
dec
pusha
dec
or
lea
imul
mov
sbb
jae
mov
mov
mov
sub
pop
inc
aam
ret
xchg
xchg
shll
sbbl
shll
and
mov
mov
test
adc
leave
xor
push
and
push
aaa
sub
loopne
lea
lods
xor
xchg
add
sub
jae
mov
pop
mov
lahf
cmp
pop
pop
arpl
jae
test
sbb
aad
and
or
sbb
sub
push
popa
fldt
jo
mov
dec
sbb
js
loope
popf
cmp
icebp
repz
cmp
adc
pop
je
daa
loop
nop
lahf
bound
das
aam
enter
cwtl
cmp
sbb
xor
loop
mov
pop
dec
mov
stos
push
cmp
gs
orl
and
jns
cltd
push
jno
sbb
pusha
and
jno
mov
sbb
dec
lret
and
push
sbb
adc
mov
repnz
test
das
sbb
sbb
jnp
adc
in
int
inc
mov
xchg
pop
lcall
jne
sbb
stc
pop
insl
dec
mov
jns
and
jb
in
loop
cmp
scas
and
ljmp
imull
leave
repz
jge
call
mov
xor
add
pop
sbb
dec
sbb
inc
ja
ret
adc
mov
pusha
imul
push
adcl
rcll
and
frstor
push
shll
mov
sub
sub
sub
inc
ds
sbb
popf
mov
xor
sub
stos
jo
pop
sub
hlt
adc
sub
xor
addr16
imul
sbb
cwtl
popa
cmp
hlt
out
cmp
pushf
sub
jmp
leave
pop
js
sbb
jne
dec
popa
jno
sub
popf
jno
in
andl
lods
jae
inc
nop
sub
mov
adc
outsb
and
in
test
and
push
sbb
mov
sub
cmp
jmp
scas
dec
inc
xor
push
pop
jg
in
jns
push
bound
xchg
mov
pushf
xor
or
pop
sahf
popf
sbb
mov
call
fs
xor
add
and
cmp
add
stos
push
test
inc
and
mov
xchg
loope
inc
mov
cmp
sub
cmp
cmp
sbb
rcrl
dec
xchg
xchg
sub
and
adc
sarb
cmp
sub
ja
and
sbb
or
pop
andl
test
pop
sti
daa
sbb
leave
inc
lret
sub
sbb
dec
mov
sub
mov
sbb
and
das
es
and
popf
xchg
adc
ja
xchg
leave
aaa
pop
mov
or
stos
gs
das
mov
inc
call
subl
cld
ss
mov
aas
mov
push
pop
and
jae
rcr
sbb
xchg
call
dec
aas
and
sbb
test
xchg
push
and
cwtl
pop
jle
aaa
or
jg
jb
mov
idivl
push
sub
sbb
mov
fsts
mov
cwtl
inc
xchg
cmc
sbb
and
mov
jge
push
dec
jmp
dec
sbb
xchg
xor
cmpsl
jnp
adc
test
cwtl
stc
xor
lahf
shrl
or
pop
mov
jno
jno
daa
mov
lcall
xchg
pop
mov
daa
dec
stc
cmpl
sub
ret
fwait
adc
mov
cwtl
outsl
xchg
xor
mov
mov
or
pop
or
sti
movsb
lret
mov
sbb
loop
and
mov
sub
dec
cltd
jo
cmp
pop
adc
sahf
mov
inc
ret
loope
xchg
icebp
ret
pop
sub
push
pop
cltd
mov
inc
stc
fs
sub
or
mov
xchg
push
stos
sbb
push
out
les
and
lcall
loop
add
pop
mov
gs
jge
sub
es
dec
pop
xorb
inc
inc
test
push
jo
aad
movsl
sti
xor
subl
jb
xor
loop
mov
shlb
adcl
adc
or
das
jle
xor
push
push
pop
sbb
or
les
cmp
mov
sub
xchg
aad
call
ret
dec
and
xor
pop
jns
inc
and
lods
push
and
pop
xor
mov
mov
fnsave
sbb
pop
jle
lds
sbb
sub
mov
fs
mov
mov
mov
ret
popf
pop
leave
sti
movsb
sbb
imul
pop
xchg
xor
sub
add
push
sub
fimull
pop
icebp
and
sub
mov
pop
inc
das
cmp
call
push
cmp
sbb
cmp
bound
cmp
jp
push
mov
mov
fsubs
das
push
xchg
lods
pop
imul
test
nop
push
bound
das
adc
xor
pop
push
or
cwtl
movsl
sbb
mov
or
lods
daa
mov
xchg
mov
cltd
movsl
adc
ljmp
imul
xchg
inc
out
push
dec
adc
daa
push
js
arpl
sub
mov
xchg
dec
out
ljmp
add
pop
mulb
sahf
jno
stc
push
mov
jno
xchg
mov
inc
int
ret
jns
rcrb
xchg
lcall
inc
xor
test
in
stos
cltd
adcl
push
popa
mov
sub
mov
cwtl
call
test
jbe
stc
mov
shrl
or
sbb
add
scas
shrl
call
decb
cmp
call
jne
lret
mov
mov
test
push
fstl
stos
adc
mov
sub
xchg
es
inc
and
popf
adc
sti
xchg
subb
inc
loop
cmp
mov
loop
mov
lahf
and
mov
xchg
arpl
mov
cmc
sahf
adc
in
popa
jge
mov
xor
push
and
shll
and
mov
push
sub
push
push
orl
sub
adc
adc
imul
inc
sti
in
push
xchg
in
xor
and
in
nop
mov
inc
call
pop
rorl
aaa
xorb
mov
xchg
xchg
out
xor
sub
in
dec
push
sbb
divb
aad
stc
or
int
and
mov
mul
and
das
and
pop
mov
aaa
in
xchg
loop
dec
jl
or
sbb
sti
fwait
push
daa
cmc
adc
loope
cmp
hlt
adc
aad
xor
inc
jge
cmp
adc
shrl
sti
sub
out
sahf
mov
call
cli
cs
mov
popf
jne
fwait
sub
push
rcrl
mov
rcll
and
inc
xchg
push
xchg
push
sbb
les
sub
sub
and
and
adc
in
inc
std
sbb
and
lahf
sub
scas
popa
sbb
call
push
nop
xor
js
add
cmpsl
loope
push
in
sub
add
fdivrl
dec
aad
jp
xchg
sbb
or
sbb
push
repnz
ret
inc
cs
xor
lahf
adc
pop
inc
int3
xor
jb
cmp
daa
das
xchg
xchg
mov
hlt
cs
xchg
push
inc
aad
repnz
mov
mov
fucom
cmp
push
rcrb
hlt
cmp
pop
leave
fisttpl
jne
aaa
dec
inc
fcomp
mov
mov
xor
xor
cmp
xchg
ret
stos
cmp
mov
pop
pop
outsb
push
sub
in
dec
pop
loope
sbb
mov
popf
inc
jge
or
mov
mov
ljmp
jp
mov
cmp
xor
adc
popa
lcall
iret
pop
call
push
jae
xor
aaa
movsb
cli
fidivs
int
stc
sbb
mov
xor
sbb
cltd
push
mov
aaa
mov
mov
jecxz
xchg
addr16
adc
jnp
mov
xor
inc
push
fnstenv
aaa
push
cltd
inc
daa
stos
sarb
pop
lods
fistpll
cmc
movsl
lcall
or
cmp
into
aas
iret
jns
je
push
cmpsb
shll
sbb
and
sti
lea
adc
dec
or
xor
cmpsb
sarb
lea
enter
push
call
or
iret
push
into
cmp
dec
stos
rorl
cmp
push
imul
popa
xchg
fnstcw
inc
push
jmp
fsubl
adc
mov
xlat
sub
das
jo
sub
pop
ficompl
sar
cmp
fbld
out
pop
sbb
int
das
fstp
bnd
xlat
dec
jno
rorb
sti
jnp
pop
dec
xchg
adc
mov
mov
test
aas
or
xor
orl
int
aam
call
sub
cmpsl
cmp
xchg
jp
and
mov
and
arpl
inc
test
mov
sti
xorps
sub
cmpsl
mov
and
aas
pop
push
jns
dec
adc
inc
dec
cmp
dec
dec
jno
add
xor
xchg
mov
adc
pop
stos
repnz
xor
ds
cmc
mov
sbb
push
cmp
pusha
sub
and
pop
ja
and
mov
push
xchg
xchg
call
movsl
sub
scas
or
loope
test
aad
xchg
inc
dec
in
push
inc
lret
mov
jb
ret
movsl
inc
jns
and
sti
dec
loope
call
mov
movsl
cmp
push
icebp
dec
mov
push
xor
lea
pop
sbb
insl
dec
ret
sti
cmp
xor
xor
dec
and
ja
sbbl
and
fs
fsts
pop
jno
mov
fmuls
cmp
push
test
sub
jg
jmp
push
mov
pop
push
xchg
xchg
sub
icebp
push
and
and
and
das
pusha
mov
sub
cmp
push
inc
int
sub
call
aaa
xchg
frstor
jl
or
gs
repnz
cmp
test
jns
pop
in
pop
in
lea
loop
mov
cmp
adc
das
xchg
sti
hlt
sub
xchg
dec
mov
repnz
sbb
and
loop
sub
inc
jle
out
jmp
das
xor
adc
add
js
and
or
and
rcll
mov
fldenv
aas
lahf
pop
xlat
das
out
call
xor
loope
inc
in
xor
dec
sbb
xchg
stos
in
xor
out
mov
arpl
lahf
adc
and
sbb
push
adc
cltd
sbb
xor
and
repz
push
jge
addr16
cwtl
cmp
sbb
or
test
in
loop
pop
cmp
dec
mov
cmp
xchg
ret
pop
dec
sub
push
adc
sti
pop
ja
in
icebp
imul
dec
mov
addb
addl
xor
sbb
mov
neg
jno
loop
mov
push
xchg
push
ret
jb
sbb
divb
insl
jl
xchg
push
push
adc
sti
loop
push
das
push
call
lods
out
and
mov
sub
jle
pushf
and
xchg
adc
and
xchg
call
outsb
shll
xchg
fimuls
bound
adc
imul
in
or
cmp
mov
xor
xchg
popa
std
cmp
sbb
mov
cwtl
and
sbb
cmc
xchg
mov
mov
jae
mov
mov
inc
jle
dec
add
lret
ret
mov
mov
jns
mov
sbb
cmp
and
xor
imul
mov
movsl
push
push
shl
pop
pop
loop
sti
iret
aad
daa
in
push
cmp
scas
ss
testl
push
stc
clc
jp
mov
sbb
loope
fs
or
add
jp
xchg
jp
or
das
push
sub
aaa
imul
stc
push
sbb
and
pop
pop
cwtl
orb
sbb
fisubl
nop
test
jns
cmpsl
mov
popf
sbb
sbb
xor
mov
lahf
lock
cmp
push
das
and
in
sub
sahf
cmc
cli
es
divb
sbb
mov
xor
test
das
decl
mov
xchg
adcb
sub
in
push
scas
xchg
aas
es
in
sti
mov
in
mov
pop
cs
or
rclb
xchg
xor
dec
data16
loop
inc
test
loope
mov
popa
mov
leave
sub
insl
fnsave
adc
xchg
adc
cmp
cmp
fisttpl
dec
jge
stc
into
jae
and
test
fcoms
push
cs
and
nop
call
pop
xchg
clc
inc
pop
and
dec
mov
movsl
rorl
shl
aaa
sbb
push
ljmp
in
call
mov
mov
in
loop
mov
inc
sbb
or
insl
inc
loopne
xor
xor
pop
mov
sahf
xchg
std
rclb
lahf
add
fisttpll
add
cmc
arpl
pop
or
imul
mov
shl
test
mov
or
mov
sbb
xor
dec
inc
jb
lret
roll
mov
sbb
popf
adc
lahf
clc
sub
sahf
adc
mov
stos
cmp
imul
cmpsb
xor
popf
fwait
mov
inc
sub
inc
adc
jmp
leave
cltd
mov
mov
pop
fisubl
xor
xor
repnz
cli
insl
xor
add
xor
fsubl
dec
pop
repnz
xor
push
xor
push
xchg
jbe
pop
int
or
xor
sub
flds
jns
mov
daa
imul
mov
sbbl
pop
subl
lcall
pop
fnsave
xor
add
sub
outsl
subl
xchg
mov
mov
fistl
pop
out
movsb
sbb
cmpsl
arpl
popa
jmp
lods
push
out
push
lock
popf
imul
mov
fisubl
xor
sbb
push
dec
in
inc
insl
xor
cmp
xor
sub
and
aas
mov
inc
cmpsb
push
sahf
jno
flds
fs
adcb
and
jo
push
cmp
movsl
inc
xor
test
cmpsb
lea
ljmp
lods
es
adc
sti
or
mov
std
jo
std
and
dec
call
cmp
jno
sbb
mov
adc
call
lret
sbb
add
dec
dec
addr16
outsl
scas
adc
sti
sbb
and
mov
add
arpl
int
stc
and
mov
iret
mov
add
sub
imul
sti
aas
mov
push
sbb
popf
fsubs
push
jge
mov
pop
fs
fwait
cli
mov
adc
push
sub
sbb
daa
push
pop
mov
icebp
pop
mov
test
inc
jno
cmp
lods
daa
xchg
mov
inc
cmpsl
addr16
rcll
mov
sbb
popf
sub
sub
idivl
cmp
out
sar
xchg
cmc
leave
sub
sbb
cmpsb
std
xor
sbb
movsl
and
mov
push
add
cmpsl
adc
inc
in
sbb
or
adcb
push
sysexit
enter
push
aam
mov
bound
mov
xchg
popa
lea
adc
jno
pop
adc
lods
jb
imul
loop
jl
sub
jg
mov
xor
sbb
add
inc
push
add
les
add
outsl
xor
jne
sub
or
jp
push
adc
sub
or
or
fldcw
adc
inc
xor
ljmp
add
in
aaa
xchg
sti
in
daa
ret
sbb
mov
nop
pop
cmc
push
mov
add
hlt
or
sahf
xchg
xchg
sbb
jmp
daa
sti
dec
pop
fldenv
mov
pop
pop
clc
and
lcall
sub
stc
jge
mov
and
sbb
jb
loopne
xchg
loop
pop
cmp
mov
jbe
loope
icebp
pop
xor
and
mov
and
xor
stos
pusha
and
ret
scas
inc
push
jnp
xchg
pop
popf
xorl
and
cld
sbb
iret
mov
xor
push
or
enter
mov
rcrb
xchg
inc
fnstsw
shr
je
shl
es
in
push
pop
xor
mov
cmpsl
mov
outsb
fcomps
les
add
sar
pop
adc
clc
pop
sbb
sbb
pop
lcall
ret
mov
cmp
lea
jecxz
adc
sub
imul
sbb
inc
adc
ljmp
xchg
sarl
sbb
aas
rorl
lods
xchg
adc
dec
adc
adc
push
sbb
dec
cmp
sbb
push
jae
dec
and
gs
and
sbb
in
inc
insb
aaa
aam
adc
sub
repnz
or
int3
cmp
mov
pop
push
sti
adc
pop
sbb
jg
mov
imul
packsswb
or
sbb
lock
ja
jecxz
sbb
cltd
push
push
stos
repnz
sub
xor
fidivs
cmp
dec
loopne
mov
or
sub
subl
sti
push
xchg
pop
sbb
test
in
lds
cmpsl
cs
sub
push
push
aaa
testl
mov
adc
leave
sbbb
push
or
movsl
rclb
dec
push
dec
sbbb
ret
sbb
call
xor
sbb
cli
and
insl
mov
aaa
shll
adc
jb
mov
jl
mov
aam
push
pop
xchg
add
cmp
std
adc
loope
and
sub
stc
xlat
mov
mov
adc
mov
adc
push
stc
mov
test
pop
inc
aas
jae
call
dec
dec
cmp
addb
xchg
cmp
fisubl
add
sti
xor
lret
or
or
das
sbb
jmp
mov
int
sbb
roll
pop
push
mov
and
rolb
pop
adc
ss
sub
and
in
mov
outsb
or
arpl
push
pop
pop
mov
out
sbb
sbb
aaa
pop
and
scas
push
push
lret
sub
dec
les
xchg
test
mov
rcll
mov
push
push
ja
leave
cmp
mov
das
xchg
test
and
inc
rcrl
mov
mov
adc
sbb
sbb
mov
or
dec
jns
sub
aaa
cmp
sub
add
sti
leave
adc
mov
mov
sub
pusha
mov
test
jecxz
or
sbb
std
cmpsl
daa
jmp
cmp
fnsave
pop
pop
out
pop
lods
popf
inc
arpl
jae
mov
imul
mov
sbb
repnz
leave
add
or
xchg
lahf
xchg
daa
out
xchg
call
mov
loop
sbb
push
xchg
loope
xchg
mov
outsl
push
dec
enter
mov
sti
dec
sbb
ja
shl
xor
add
cmpps
push
sbb
fidivrs
ret
cmpsl
divl
aaa
or
xchg
arpl
mov
pop
fwait
sub
cmp
mov
sbb
das
xchg
cmp
mov
sub
icebp
incl
in
addr16
pop
pop
lret
insl
pop
sbb
pop
sub
jp
out
or
cltd
and
jg
xor
icebp
xor
xchg
into
addr16
daa
pop
out
inc
scas
aas
pop
xor
xchg
lahf
jns
adcb
daa
sar
sub
push
inc
ja
or
test
sub
xlat
in
adc
sbb
sub
and
pop
int
dec
shrd
cmp
xchg
mov
adc
rcrl
or
adc
addl
cltd
repnz
das
sti
ret
addl
daa
call
cmp
mov
mov
inc
mov
imul
jbe
mov
push
jae
imul
in
inc
jecxz
xor
sahf
xchg
adc
hlt
jbe
sbb
popf
int3
mov
mov
out
sub
test
sbb
daa
or
sbb
pop
sahf
mov
je
scas
mov
daa
outsl
xor
outsl
arpl
sub
mov
mov
mov
fstpt
add
jae
daa
and
mov
jns
ja
repnz
jne
push
test
sub
dec
push
lea
in
aam
mov
into
mov
icebp
adc
and
sub
sbb
and
in
or
insl
jno
daa
and
insl
icebp
inc
pop
and
cmp
xchg
xor
cmp
xchg
movsb
fistpl
push
loope
xchg
cmpsl
aam
jb
xchg
jae
aam
popa
cli
ret
popf
or
sub
daa
push
enter
cmp
sti
cmp
cmpsb
movb
hlt
outsb
jno
lods
adcb
xor
sbb
sbb
push
test
repz
mov
aam
psllq
enter
mov
xchg
xor
fsts
leave
lds
pop
jno
out
add
xchg
xchg
push
xchg
loopne
int3
int
xchg
xor
adc
int3
pop
mov
adc
sub
mov
mov
repnz
das
iret
cld
mov
mov
rcll
mov
cmpsb
stos
sbb
sbb
push
mov
int
push
scas
sub
add
sbb
iret
lret
insb
inc
sub
sub
push
mov
push
fisubrl
mov
loop
and
and
sbb
add
cwtl
push
push
push
mov
adc
daa
lods
mov
sub
ja
sub
pusha
push
cmp
dec
lahf
call
push
jl
jae
mov
bound
dec
inc
jne
xchg
leave
xchg
sti
loope
fisubl
and
dec
cmp
cld
adc
call
push
and
pushf
enter
push
sub
lea
inc
les
cmp
push
cld
push
stos
push
push
psubusb
dec
xchg
dec
movsl
push
mov
fwait
and
mov
or
iret
and
fcom
cmp
xor
cwtl
lret
adc
inc
adc
add
scas
cmp
sbb
inc
adc
mov
jb
pop
nop
je
mov
push
stc
das
loopne
bound
mov
sub
loopne
mov
cmpl
xor
pop
cmp
xchg
push
test
and
lods
sbb
mov
sbb
sbb
sub
pop
cmp
cmp
sbb
in
or
lods
mov
loope
lahf
jp
xchg
ret
mov
push
iret
inc
xchg
add
push
cltd
sub
dec
and
add
pop
sbb
lret
pop
push
mov
mov
loopne
clc
or
adc
call
and
or
add
push
aam
mov
imul
pop
rcr
sub
pop
push
lds
sub
arpl
and
mov
xchg
and
xor
cmp
cmpsb
xchg
popa
cmp
add
or
adc
out
bound
sti
jae
mov
adc
or
div
push
mov
sub
outsb
mov
jg
xchg
dec
xchg
xchg
int
add
icebp
xchg
and
xchg
sbb
mov
insl
jg
inc
dec
adc
jle
adc
adc
adcl
and
aas
jb
sbb
push
ud0
pop
packsswb
xchg
mov
add
push
push
add
jb
inc
cs
push
aaa
mov
loop
pop
aam
sub
pop
sbb
test
das
push
ret
or
inc
or
std
cmp
adc
insl
cld
mov
cltd
xor
popf
sbb
cmp
cmp
ja
add
cmp
cmp
loop
scas
inc
pop
inc
adc
add
pop
xchg
arpl
mov
dec
jge
adcb
cmp
xchg
mov
arpl
mov
adc
in
and
adc
sub
daa
xchg
jle
pop
lret
xor
loop
iret
clc
pop
cltd
stc
clc
xchg
ja
add
out
xchg
rorb
sbb
and
sbb
xor
cmp
add
adcl
aam
ret
mov
lds
jno
add
or
aaa
js
orb
sar
lods
mov
mov
xchg
xor
dec
fcomps
xchg
mov
pop
sti
cmp
cmp
jg
xchg
add
sbb
inc
xchg
push
push
sbb
push
xchg
cmp
sub
test
lea
pop
push
call
adc
stc
arpl
inc
jae
ret
jne
inc
mov
std
mov
std
aaa
addr16
shll
inc
sub
adc
insl
cmp
xchg
mov
adc
fiaddl
sub
jbe
adc
sub
aas
cmc
and
pop
sbb
arpl
sub
mov
push
es
push
adc
add
sar
leave
adc
adc
notl
enter
mov
jnp
cmp
sbb
add
imull
dec
xor
arpl
cmpl
jno
mov
sbb
pop
test
bnd
push
cmp
movsl
sbb
pop
int
shrl
xchg
jb
jecxz
rcl
and
push
push
inc
scas
jno
jae
xor
call
aaa
popa
arpl
repnz
outsb
lcall
icebp
cmp
jp
pop
and
movsb
das
daa
repnz
pop
pop
add
and
dec
mov
push
flds
mov
fists
cmp
outsl
mov
xchg
gs
cmp
cmp
and
sar
das
mov
sub
jle
mov
xchg
sbb
mov
cmp
lods
push
stos
pop
xor
aaa
sub
sti
aas
les
pop
jmp
sub
ljmp
and
lahf
mov
mov
push
sbb
call
mov
fadds
mov
xchg
in
shlb
scas
cwtl
stos
stc
mov
xchg
es
pushf
out
push
xchg
fnsave
pop
mov
add
or
sahf
xor
push
imul
dec
inc
adc
lcall
cmp
ja
mov
push
shlb
fwait
je
sbb
pop
xor
das
mov
dec
ret
add
int
mov
sbb
pop
lahf
stc
lret
mov
cmc
imul
aam
stc
or
pop
aam
mov
inc
adc
xor
fidivs
jg
push
or
in
mov
popa
cmp
sbb
repnz
cmp
ljmp
dec
cs
sar
mov
out
cmpsb
push
pop
and
adc
adc
mov
loope
sbb
jg
jnp
and
loop
test
icebp
sbb
insl
mov
popa
sub
std
sub
js
mov
jno
mov
into
jns
loope
jns
or
sarl
xor
pop
arpl
sbb
sbb
mov
aaa
mov
sbb
dec
loope
mov
xchg
fwait
dec
call
adc
inc
sbb
sub
xchg
mov
jne,pn
rorl
and
jecxz
int
sub
xor
add
fwait
push
xchg
aaa
sahf
ds
adc
and
mov
jbe
sbb
out
outsl
xlat
mov
sbb
mov
aas
mov
fisubl
mov
and
xor
sarl
out
sub
cmp
inc
std
push
jns
call
mov
cmp
inc
in
adc
lret
mov
cmc
pop
mulb
xchg
ja
mov
inc
push
loop
stos
pop
cmp
push
xor
pop
fnclex
mov
pop
mov
divl
sti
popf
shl
inc
sub
mov
jb
push
pop
and
push
orl
call
push
dec
stos
inc
shll
sbb
adc
cmp
cli
jbe
jnp
outsb
dec
pusha
mov
ljmp
pop
push
mov
mov
cmc
sarb
jge
push
call
and
fiaddl
xor
push
icebp
mov
lret
rcrb
push
dec
out
cmp
push
sbb
and
ljmp
lcall
aaa
and
fwait
lods
xor
xchg
stc
fnsave
mov
shll
aad
mov
sub
add
jne
fwait
sub
stos
xchg
push
dec
mov
mov
xor
fiaddl
or
data16
dec
cmp
mov
call
shlb
cmp
xchg
or
stc
jp
cmp
hlt
stc
dec
mov
sbb
addr16
loope
pop
cmp
mov
pop
push
repz
xchg
pop
mov
test
adc
sub
sbbl
jb
ds
int
mov
adc
inc
mov
dec
xchg
mov
xor
insb
scas
push
ret
jae
ficoml
std
push
adc
rcrl
call
je
mov
mov
in
rcrl
insl
pop
xor
rorl
sbb
push
jns
mov
jns
test
xor
inc
sbb
fsubs
mov
sub
xchg
hlt
outsb
stc
xlat
int3
lret
jno
mov
addr16
mov
fmul
mov
pop
push
movsl
sub
daa
xor
mov
pop
ret
arpl
sarb
mov
ret
sub
ds
lahf
stos
cwtl
loop
lods
aaa
jl
and
sti
or
sti
aaa
mov
ret
and
loop
mov
and
mov
mov
dec
sub
lret
sub
aaa
loop
les
aad
cli
xor
enter
and
call
ss
push
and
mov
shlb
push
repz
sub
pop
xor
clc
in
mov
add
popa
pusha
int
out
sbbb
sbb
jns
xchg
rcll
call
cmp
adc
cltd
cmp
sbb
ja
and
repnz
mov
sub
mov
mov
into
lea
mov
jns
fs
jns
sbb
sub
or
movsl
jmp
dec
mov
adc
mov
ret
das
sbb
xchg
adc
sub
dec
shlb
mov
xor
or
xchg
lret
or
and
sti
adc
and
mov
out
xchg
lcall
lcall
icebp
daa
dec
mov
xchg
stc
push
mov
test
inc
das
imul
cmp
or
mov
rcll
jmp
xchg
push
xchg
stos
mov
repz
xchg
test
stos
inc
inc
aaa
xchg
add
shrb
in
leave
stos
cmp
dec
mov
push
jp
mov
addr16
jl
push
lods
sub
push
dec
cmp
xchg
stc
nop
dec
push
pop
sub
sti
mov
adc
insl
and
rorl
dec
fsubs
xchg
adc
xor
sbb
std
jg
pop
mov
push
xchg
and
sar
xchg
ss
pop
xchg
adc
subb
xchg
sub
fstl
and
fnsave
adc
push
movsb
pop
xchg
ds
or
mov
arpl
adc
fwait
xor
adc
das
push
clc
add
xchg
inc
add
cmp
jnp
sub
sbb
xor
xchg
xchg
sub
or
sub
sbb
dec
mul
icebp
ja
stos
jmp
add
sbbl
adc
push
shrl
and
or
or
add
repnz
sbb
jnp
adc
adc
call
ss
mov
test
jne
xor
daa
cli
sarb
dec
mov
cmp
xor
mov
shll
sbb
jne
call
pop
lahf
sub
cwtl
movsb
add
popa
jno
add
jnp
in
mov
enter
lods
adcb
push
popa
pop
xchg
cmp
stc
push
bound
dec
popf
cwtl
add
cmc
sbb
fdivrp
add
add
shlb
xor
or
xor
sbb
out
testb
les
mov
repnz
nop
mov
sbb
out
dec
xchg
repnz
hlt
xchg
popa
jae
sub
dec
push
inc
and
mov
std
cmc
adc
sub
or
pop
ljmp
cltd
pop
inc
out
stc
pushf
inc
cmp
addr16
in
ffree
cmp
xor
call
leave
jnp
sbb
cmp
fld
adc
mov
bnd
sbb
ficoms
mov
cmc
sub
mov
std
adc
int
mov
addr16
out
push
mov
out
ja
and
xchg
cmp
mov
push
xor
mov
xor
lret
dec
std
cmp
ja
pop
cmp
xor
pop
mov
arpl
dec
lret
add
xchg
and
lds
push
cltd
xchg
and
daa
ret
aam
xchg
int
pop
subl
bound
pop
add
push
sahf
dec
rcrl
pop
in
inc
aad
mov
pop
aaa
xor
or
xlat
lods
cmc
iret
mov
divb
test
scas
dec
mov
mov
in
push
sbb
aam
in
sub
and
push
pop
pop
and
or
xchg
inc
sbb
adc
mov
fabs
and
mov
inc
xchg
fbld
mov
lret
mov
es
dec
push
and
subb
sbb
sbb
mov
sbbl
mov
mov
ljmp
and
xor
adc
push
dec
cltd
bound
mov
loop
and
xor
push
inc
cltd
push
insl
and
xor
in
xor
push
cs
push
jbe
cmpsb
cmp
imul
scas
ret
andl
test
sub
outsb
mov
or
mov
stos
mov
jno
cmpb
push
mov
or
in
sub
and
mov
xor
mov
adc
pop
xor
jne
xorl
stc
out
scas
jecxz
subb
les
dec
loope
xchg
icebp
sbbl
mov
sti
shl
icebp
rcl
inc
mov
jmp
pop
addl
lods
rep
loop
fldcw
jnp
icebp
sti
cmc
mov
stc
sub
push
loope
mov
pop
loopne
inc
or
cmp
or
into
mov
push
jbe
push
int3
xor
xorl
xchg
ljmp
fnstcw
cmpsb
imul
movsl
dec
push
fnstcw
jecxz
adc
jmp
jmp
xchg
shll
out
cmp
test
jnp
fsub
jp
sbb
jmp
cli
rcrb
jg
jno
andl
push
mov
xor
int
imul
xor
movsl
rcll
mov
xchg
es
fistps
mov
sub
in
pop
cmpl
xchg
sub
into
cltd
push
stos
mov
scas
test
popa
add
loope
lret
aas
lcall
mov
cwtl
test
xchg
insl
adc
sbb
out
decb
adc
shrl
and
dec
pop
repz
xor
lahf
test
xchg
cmpsl
dec
std
mov
sub
xchg
popa
xor
into
loope
into
mov
xor
rcr
dec
xchg
scas
add
in
ja
insl
fnstenv
filds
popf
push
mov
scas
xor
cmp
sbb
mov
test
pop
icebp
ds
pop
imul
add
mov
dec
mov
and
push
jmp
xchg
ret
addr16
std
sub
scas
inc
push
push
daa
mov
icebp
fidivs
push
jl
inc
call
shr
push
add
jecxz
pusha
stos
xor
push
xlat
loope
popf
fisttpl
xor
xchg
in
insb
daa
mov
shll
sarl
cltd
repz
cltd
xor
mov
fldenv
push
mov
testl
sub
mov
lcall
and
push
mov
xorl
xchg
sbb
pop
ja
xchg
scas
popf
lret
jb
sbb
es
inc
fwait
push
cmp
insb
jp
mov
xchg
pop
movsb
pop
orl
mov
cmp
jge
loope
arpl
arpl
ret
adc
xchg
dec
jo
sub
imul
ficoml
xlat
adc
cmpsl
sub
jp
lret
pushf
loopne
adc
push
mov
cmpsl
fwait
mov
fisubrs
adc
fcmovnu
jecxz
test
mov
ljmp
inc
mov
or
dec
sub
pop
jae
mov
fldl
into
mov
xor
mov
mov
andl
stos
xchg
push
push
jge
test
jne
cmpsb
fisubl
jns
out
sbbl
pusha
in
and
in
mov
xor
and
dec
adc
push
xchg
sbb
pop
cmp
ds
inc
mov
or
das
sub
rcrl
sub
mov
push
addr16
fwait
lahf
aad
inc
and
add
xchg
insl
mov
lcall
dec
mov
fnstcw
inc
push
cmp
popf
shl
cmp
dec
mov
and
cwtl
leave
repnz
out
mov
mov
xchg
cmc
sbb
je
pop
push
cmp
push
pop
and
sbb
sti
xchg
test
in
cltd
jbe
fwait
ds
out
inc
icebp
movsb
fistps
js
inc
pop
mov
js
xchg
loope
out
out
stos
mov
into
cmp
sbb
test
cs
int3
pop
xor
jmp
popf
pop
leave
ds
jbe
sti
lahf
sahf
pop
jecxz
dec
adc
pop
dec
out
inc
jb
dec
sub
sub
nop
adc
push
fistl
dec
daa
icebp
mov
mov
add
in
pop
cmp
rcr
sbb
js
aas
xchg
xchg
jae
cmp
std
outsl
add
inc
mov
inc
imul
cmpsb
cltd
jae
xchg
scas
fwait
stos
xchg
sub
cmp
lea
outsl
adc
cmp
ficoml
cmp
pushl
stos
aad
cmpsb
jge
xchg
xor
mov
jecxz
pop
cmpsb
fwait
mov
insb
nop
mov
out
fsts
icebp
push
jno
stos
cmp
sub
adc
out
dec
or
inc
push
inc
jbe
xchg
and
aaa
sub
xor
dec
jns
xor
stos
jno
xchg
and
xor
mov
xor
test
aad
je
jmp
sub
and
xor
push
xor
push
bound
xor
pop
in
and
xor
ja
push
lea
pop
pop
sahf
jns
sbb
push
pop
and
sbb
mov
cwtl
mov
cmpsb
idivb
negb
mov
aas
loope
je
jmp
push
pop
stos
inc
shl
icebp
push
jb
leave
fwait
in
mov
lock
aad
stc
xchg
xor
stos
js
pop
imull
addr16
xor
ja
fscale
ret
cmp
stos
aas
push
pop
sti
call
sbb
fxch
cmp
inc
cmp
xchg
fiaddl
inc
mov
pop
int
into
cmpsl
add
mov
mov
dec
lds
cmp
jecxz
adc
pusha
cmp
pop
sbb
lcall
rcr
arpl
imull
shlb
out
xchg
cltd
rcll
cltd
hlt
fcoml
dec
cltd
test
daa
aaa
sub
notl
je
rorb
andb
mov
hlt
pop
push
mov
mov
mov
push
push
cmp
xor
out
adc
dec
xlat
cmp
cltd
and
xor
xor
aad
xor
mov
aaa
cltd
stc
inc
and
xor
inc
and
shll
inc
push
pop
cltd
dec
or
xor
leave
xor
push
test
or
xor
cmp
push
push
xchg
jle
add
jae
sbb
dec
and
dec
and
push
and
divb
dec
xchg
xor
push
cmp
pop
and
add
adc
xchg
rcll
add
push
pop
inc
arpl
and
push
pop
xchg
adc
rorb
sbb
xchg
push
adc
pop
arpl
add
cmp
push
and
jl
mov
xor
sub
sub
and
push
push
and
int
xchg
jne
mov
add
push
stc
dec
inc
andb
cmpsb
dec
ja
xor
adc
test
rclb
xor
sbb
mov
push
xor
cmp
pop
and
push
inc
cltd
sbb
and
xor
sub
mov
dec
daa
dec
mov
mov
mov
cmp
mov
sbb
jnp
push
xchg
xor
cmpsb
mov
and
or
cltd
push
icebp
and
xor
test
mov
and
push
xor
cmpsb
sbb
cmp
cmpsb
push
xor
pop
jne
pusha
addl
lahf
shlb
cmp
add
adc
addr16
negb
aas
pop
push
fwait
adc
adc
xchg
mov
adc
mov
test
fistl
fcoms
lods
inc
js
inc
or
xor
xor
cli
push
repnz
ljmp
mov
push
jp
push
and
xor
xor
push
and
xor
icebp
xor
push
leave
cltd
mov
cltd
mov
xor
cmp
push
sbb
xor
fsts
ficoml
lret
mov
adc
inc
ret
dec
sbb
adc
aad
inc
jge
pop
adc
inc
xchg
repnz
or
test
xchg
cli
mov
push
sub
sub
xor
push
inc
lcall
add
mov
aam
jno
lods
mov
test
jmp
xor
testb
xor
stos
push
jmp
fistl
or
popa
sbb
xchg
mov
popa
sub
ret
mov
lods
jno
push
int
sbb
add
sbb
lcall
lcall
mov
xlat
repnz
cmp
mov
popa
jns
mov
sub
xchg
scas
xchg
lods
mov
sub
sbb
adc
mov
imul
stc
adc
sub
dec
ss
test
shr
mov
sbb
jge
sub
stos
mov
shrl
testl
mov
add
pop
cmp
adc
rcr
shlb
jg
sub
stc
ficomps
sub
icebp
dec
in
cmp
in
popa
arpl
call
fwait
pop
loope
mov
xor
fistl
mov
leave
sub
popa
push
mov
mov
daa
test
negl
push
and
jae
inc
test
repnz
insb
jns
adc
mov
arpl
loope
dec
divl
xchg
lea
xchg
fbld
mov
stos
stc
mov
mov
aad
add
in
jne
or
lods
mov
fnsetpm(287
sub
mov
dec
rcrl
ljmp
pop
adc
stc
gs
loope
stc
fists
flds
push
out
js
jno
push
stc
lahf
xchg
fsts
inc
scas
test
xor
mov
icebp
jbe
icebp
jecxz
out
push
adc
mov
test
adc
movsl
sub
aam
xchg
stos
test
dec
or
jns
push
cmp
in
adc
les
xor
adc
andb
pop
mov
adc
das
mov
and
and
push
push
icebp
pop
add
cmp
adc
sbbb
negb
add
xor
sub
mov
adc
xor
push
jno
pop
xchg
out
mov
arpl
push
push
and
xor
add
mov
adc
adc
and
mov
add
sbb
cmp
mov
subl
sbb
inc
adc
xor
pop
push
push
mov
and
test
and
fisttps
pop
pusha
imul
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
aam
jae
movsb
inc
mov
enter
ret
int
xlat
loope
jmp
cmc
nop
jp
cmpsb
fmuls
dec
lods
cs
mov
das
inc
scas
in
ja,pn
cmp
cwtl
mov
sbb
fidivl
loop
ljmp
or
or
or
or
cmpl
mov
in
mov
mov
cmp
lods
pop
les
add
jge
push
stc
popa
std
imul
push
lea
push
rorl
dec
push
pop
push
mov
cwtl
push
mov
push
or
dec
push
dec
gs
mov
dec
std
push
adc
push
add
pop
xchg
lahf
mov
pusha
je
and
loopne
aam
andl
mov
les
dec
in
hlt
mov
rolb
jns
xchg
sti
aam
in
hlt
mov
add
xor
aam
in
repnz
mov
out
pop
mov
dec
fisttpll
push
jl
sbb
imul
int
ficoml
pop
push
movsl
pop
lock
jecxz
adc
sbb
popa
stc
insl
std
test
movsl
push
mov
rorl
push
sbb
xor
inc
push
push
push
je
mov
push
push
hlt
dec
pop
jae
dec
jge
cltd
dec
scas
dec
aad
and
inc
push
push
out
sbb
jne
and
mov
pusha
icebp
mov
push
sbb
scas
mov
js
mov
aam
mov
shl
insl
stc
xchg
std
leave
add
push
cmc
or
push
sbb
mov
into
dec
push
jns
dec
icebp
std
add
dec
sbb
sub
dec
loopne
dec
jge
dec
loope
nop
inc
pushf
sub
dec
ss
push
add
addl
dec
xchg
dec
rorl
push
std
dec
or
push
inc
push
jo
jl
mov
push
mov
mov
test
pop
dec
lahf
arpl
ja
cli
or
push
or
or
or
outsb
or
push
addl
mov
mov
lea
push
test
sub
pop
jge,pn
add
xor
rclb
push
add
jb
push
mov
mov
mov
mov
movsb
pop
pop
mov
pop
pop
lock
mov
or
mov
inc
push
movsb
pop
out
xchg
pop
scas
mov
pop
jnp
inc
nop
add
push
push
stos
ss
sub
sti
cs
mov
das
xor
inc
xor
mov
mov
insl
rorb
pop
xchg
mov
sti
add
add
add
add
je
scas
jns
rorb
fiaddl
push
testb
and
std
inc
xor
out
mov
test
daa
stc
push
std
popa
add
subl
adc
push
pop
and
xchg
mov
fcoms
pop
movsb
imul
add
add
add
add
mov
daa
push
repnz
les
xchg
xchg
hlt
mov
add
add
xor
std
je
loope
sti
dec
sbb
pop
movsb
imul
lcall
loop
ljmp
pop
xor
pop
push
jnp
mov
sub
jns
movsb
bound
js
mov
rol
ljmp
loop
ljmp
aam
add
rcll
fiaddl
addl
movsl
and
ficompl
cmp
mov
cmp
jecxz
repz
cli
or
mov
repnz
test
std
inc
mov
fiadds
std
iret
scas
fnstenv
mov
mov
gs
loop
ljmp
dec
or
pushf
hlt
rolb
loopne
or
lahf
stc
filds
and
pusha
adc
or
or
push
iret
pop
and
cmp
pop
xchg
xor
jno
fidivrl
loop
ljmp
jne
test
xchg
mov
cmp
ds
cs
int3
jecxz
mov
ret
rep
push
shrl
jno
fidivrl
mov
lcall
lret
fiaddl
cli
or
xchg
addl
mov
cpuid
push
push
iret
push
pop
xor
lea
xchg
mov
inc
ss
xchg
inc
cmpl
loope
jmp
nop
push
ljmp
aam
dec
lea
lcall
arpl
lcall
or
mov
pop
add
or
aaa
and
lret
and
into
addl
mov
mov
aam
adc
push
push
mov
mov
mov
adc
pushf
xchg
test
xchg
pop
out
popa
fdivrs
cmpl
lea
popf
mov
sub
dec
mov
stc
loope
mov
adc
add
js
adc
xor
xor
les
xchg
push
in
jl
icebp
jle
inc
adcb
test
out
pop
lods
xor
pop
mov
push
outsb
mov
fs
xchg
adc
adc
sub
sbb
and
outsl
jae
and
jne
and
xor
push
lds
aaa
and
xor
or
push
insl
loop
shll
mov
jl
adc
pop
leave
adc
and
test
dec
fcomi
in
mov
mov
mov
mov
icebp
xchg
mov
fwait
xchg
test
ret
mov
insl
or
call
fcmovne
ret
push
fidivrs
out
jmp
insl
fcomi
add
mov
ds
cltd
or
out
push
fwait
add
jmp
adc
cmp
xchg
and
dec
leave
leave
insl
cwtl
mov
add
sbb
shr
cltd
cmc
jo
inc
pop
lea
adc
idivl
mov
scas
stc
cmpsb
mov
pop
jae
andl
sti
adc
mov
imul
and
adc
fwait
mov
mov
popf
mov
test
pop
iret
mov
ret
mov
sbb
xchg
subl
unpckhps
mov
mov
pop
jae
stos
sbb
sbb
scas
xchg
cmpsl
cmp
mov
xchg
js
ja
dec
fisttpl
hlt
push
or
lock
inc
pop
inc
icebp
mov
ss
enter
add
movsl
mov
dec
test
add
adc
not
test
icebp
sti
popa
push
pop
adc
cmp
mov
adc
jb
je
mov
inc
jecxz
adc
jbe
cwtl
add
sti
jns
fistps
lret
mov
pop
and
mov
jg
xor
xchg
mul
dec
arpl
int3
xchg
aas
fsincos
xlat
stc
icebp
adc
cmp
mov
pop
push
mov
or
push
sbb
addb
pop
aad
cmpsl
fstpt
jmp
push
mov
sti
popf
xor
icebp
xor
andl
and
das
aam
stos
icebp
pop
je
mov
dec
jns
xor
aaa
fildll
cmp
pop
inc
popa
jns
mov
mov
std
jne
jns
jge
jg
adcl
insl
cli
lret
xorb
out
ljmp
test
lea
dec
adc
loop
xor
xchg
sti
xor
or
mov
sub
xor
dec
or
lret
mov
and
xchg
stc
fldt
lea
push
xor
neg
cwtl
iret
int
xchg
mov
fwait
cs
and
dec
rclb
lods
pop
jo
adc
inc
jecxz
scas
pop
sbb
imul
test
stc
push
in
ljmp
leave
stos
in
fcmovnbe
ja
mov
push
cmpsb
cld
xchg
shrb
sbb
sbb
rcrb
or
sbb
sbb
sbb
repnz
inc
and
jecxz
adc
mov
shlb
jp
xchg
mov
jge
push
xor
in
test
mov
stos
lods
aaa
scas
mov
adc
rcll
push
daa
out
jmp
sbb
repz
in
sti
std
and
test
mov
mov
mov
and
rcrb
pop
jmp
jg
cwtl
stc
js
rolb
stc
daa
or
std
test
mov
inc
enter
cmp
lods
in
leave
lahf
xor
xor
int3
fdivl
je
mov
imul
out
mov
and
mov
in
sub
xlat
loope
push
out
inc
jns
sti
aaa
nop
and
out
std
pop
fucomip
pop
mov
dec
js
icebp
outsl
mov
je
out
xchg
jne
and
and
mov
mov
out
pop
aam
leave
push
jo
dec
mov
xchg
cld
rolb
inc
outsb
add
movsl
jae
stos
ljmp
popf
rcr
filds
gs
mov
sub
xchg
mov
cltd
sbb
icebp
nop
enter
push
inc
arpl
test
inc
mov
inc
loope
leave
rcl
cltd
out
faddl
in
fidivl
mov
ret
mov
xchg
mov
jb
mov
and
pop
lcall
mov
stos
aad
mov
mov
xor
cltd
push
inc
inc
mov
dec
jmp
mov
dec
fwait
cld
popa
pop
and
fincstp
sbb
inc
jmp
fwait
pop
sub
mov
fs
mov
inc
js
push
loopne
xor
cld
jns
jmp
mov
arpl
outsl
rolb
imul
mov
outsw
pop
stos
jg
sub
lods
popa
inc
sub
sub
sbb
outsl
int
out
push
das
jecxz
cmp
adc
dec
push
mov
xor
test
dec
inc
icebp
sub
or
ss
movsb
jp
xor
pop
pop
cmp
dec
cltd
test
test
cld
es
inc
jnp
scas
pop
aaa
mov
stos
scas
mov
inc
xchg
push
imul
adc
and
xor
sub
sbb
push
push
jg
dec
and
and
xor
push
xor
jne
adcl
mov
int3
cmp
dec
jbe
inc
jae
adc
lods
ret
es
or
cmc
jne
dec
sub
xchg
mov
push
sbbl
shlb
pop
cmp
aam
and
adc
adc
xor
addl
ja
scas
repz
dec
call
imul
cs
sub
sahf
gs
and
stos
pop
packuswb
fcom
add
add
lcall
aaa
mov
jo
cli
repz
lods
mov
and
pushf
pop
sub
pop
xchg
pop
repnz
add
sub
fldt
adc
add
mov
mov
xchg
repz
xchg
mov
in
adc
stos
aaa
idivb
mov
pop
push
scas
and
cmp
fdivrl
aaa
dec
addl
lock
imul
and
dec
push
dec
aaa
and
xor
mov
pushf
repnz
or
cmp
cld
addl
mov
sbb
lahf
dec
aaa
mov
pop
cmp
cltd
and
mov
aaa
push
pushf
push
mov
jg
gs
jns
jae
xchg
xor
fisttpl
out
add
inc
andl
xchg
inc
jle
sub
test
push
mov
inc
daa
and
and
or
or
inc
arpl
test
add
fistpl
xor
dec
pop
movsb
lcall
loop
and
ss
dec
test
call
mov
mov
es
mov
inc
movsb
xor
pop
cmp
pop
inc
pop
xchg
dec
pop
lds
or
jp
push
jne
scas
repz
mov
pushl
cwtl
dec
or
stc
pushf
into
repz
mov
insb
cmpsb
repz
sbb
mov
lods
mov
mov
out
cmpl
sbbl
gs
mov
test
aaa
pop
enter
pop
rorb
lds
or
sahf
repz
clc
clc
mov
pop
pop
js
cmpb
mov
or
inc
xor
mov
inc
sbb
cs
mov
mov
nop
mov
aas
jmp
enter
cmpsb
out
and
xchg
sub
mov
loop
or
sahf
mov
test
mov
adc
mov
xor
xor
es
repz
pop
les
lods
clc
shll
xor
and
sub
hlt
adc
mov
enter
pop
ds
lahf
xchg
mov
jbe
es
cmp
jg
es
add
dec
out
out
shlb
aaa
loopne
sub
pop
push
fdivp
sbb
aas
cmpsb
insb
xor
sbbl
xchg
xchg
xor
xor
push
xchg
iret
sub
ret
dec
nop
in
sbb
hlt
rcrb
into
sahf
dec
pop
mov
add
push
jp
scas
push
pop
ficoml
mov
pushf
stos
xorl
xor
in
sub
pop
pop
xchg
mov
xor
pushf
repnz
add
lods
pop
pop
fidivs
inc
ljmp
fcoms
inc
jae
xchg
dec
cli
push
lret
ret
pop
push
and
jns
jnp
jae
or
xor
jg
sahf
and
ret
aam
dec
std
push
int3
fisubs
insl
dec
movsb
mov
pop
mulb
pushf
into
jmp
es
jp
scas
inc
jns
mov
add
mov
cmp
movsl
insl
icebp
icebp
xor
roll
cmpsb
xchg
cmp
and
fistps
stos
sub
inc
dec
in
inc
mov
or
cwtl
xor
insb
or
jbe
push
mov
jbe
jo
out
movsb
test
add
xchg
or
pushf
adcl
fs
xchg
xor
fmull
out
dec
xchg
xor
fimull
jg
jecxz
sbb
mov
xchg
adc
es
xor
mov
sbb
shl
or
fidivrl
mov
lcall
mov
ljmp
or
stos
inc
fsubl
out
call
mov
inc
add
mov
imul
xor
and
sbb
lcall
lea
mov
xor
sbb
jne
stos
xchg
lahf
das
inc
ss
xchg
xor
aaa
mov
sub
xor
call
imul
fs
mov
hlt
mov
dec
or
mov
or
es
sub
adc
adc
leave
cmp
addr16
jg
inc
sti
inc
xor
xchg
push
mov
adc
aad
cmp
std
sahf
adc
iret
lcall
lea
js
cmpsl
and
sbb
aam
lcall
je
call
dec
and
aam
push
jne
pusha
imul
cmp
xor
mov
ds
sub
mov
pop
mov
push
sti
dec
into
fsts
shl
inc
jp
dec
mov
jno
pop
sarb
xor
sbbb
testb
repnz
mov
xor
pop
sub
sub
out
stos
lret
and
pop
lods
fsubr
lock
adc
notb
pop
andl
mov
mov
xchg
fsubrs
add
aaa
sahf
cmp
movsb
add
sub
gs
mov
ret
out
xchg
jo
pop
shrl
stos
sbb
jl
into
fsubrp
aam
xchg
lcall
or
xor
pop
push
aaa
rclb
scas
dec
ret
test
pop
sbbb
dec
scas
lods
add
cmpsb
test
dec
sbb
stc
mov
xor
xchg
and
enter
inc
movzbl
xor
mov
xchg
sbb
mov
jg
inc
pop
dec
into
jmp
rep
inc
adc
test
jb
call
lcall
mov
movsb
test
pop
int3
repz
cmp
jne
add
aas
or
xor
xor
xor
xchg
cmp
repnz
xlat
pop
xor
enter
sub
les
push
pop
dec
and
popf
jno
movsl
test
jl
cs
cmp
xor
fmull
xor
dec
std
push
xor
sarl
ret
fcomps
ljmp
push
roll
xor
pop
mov
repz
stos
fidivs
insb
pop
cltd
lcall
xlat
lahf
roll
adc
sahf
lcall
xor
sbb
lcall
dec
push
inc
pop
lcall
cmp
incb
jp
pop
xor
in
xor
sub
pop
inc
xor
ficompl
lods
test
arpl
ds
jp
scas
in
jecxz
enter
test
imulb
sub
movsb
cmpsl
sub
jmp
lret
mov
mov
push
push
xchg
fcmovne
loope
repz
call
mov
je
std
mov
adc
xchg
andl
push
in
xor
ret
cmp
pop
mov
mov
mov
cli
fs
orl
mov
inc
es
fsubs
xor
pop
dec
cmp
out
lcall
dec
jmp
jnp
cmp
jb
sbb
aam
sub
sbb
cwtl
adc
addr16
add
pushf
mov
jg
rorb
repz
int3
dec
and
repz
push
loopne
mov
bound
add
lods
bound
mov
aas
fdivs
mov
fiaddl
int
sub
inc
xor
nop
loopne
pusha
aaa
in
sub
lds
inc
dec
scas
imulb
xor
mov
cwtl
jo
sbb
xchg
mov
imul
scas
inc
pop
fidivs
scas
andb
xor
mov
divb
pop
cwtl
cs
cld
sahf
push
mov
adc
jnp
subl
mov
orb
pop
pop
mov
dec
adc
sbb
js
push
lcall
nop
arpl
jae
dec
roll
mov
cmp
adc
les
sub
adc
sti
add
push
xlat
out
jmp
push
cmpsb
je
mov
jbe
test
cmpsb
lods
cli
shll
or
popf
jae
popa
or
and
push
and
pop
inc
jo
dec
scas
adc
xchg
jp
mov
and
loop
mov
xchg
pop
imul
sub
xchg
arpl
adc
imull
fldl
pop
push
sbb
adc
mov
icebp
push
xlat
cltd
jecxz
pop
je
and
lcall
lea
xorb
push
fidivl
das
scas
insl
pop
sbb
or
adc
popf
jb
jp
mov
add
mov
jno
sbb
ret
jo
mov
nop
data16
cli
xor
jns
pop
xchg
adc
popf
xchg
jp
push
repnz
cmp
and
popf
push
xor
ret
jb
inc
cld
repnz
mov
push
mov
shll
xchg
out
xchg
xchg
in
shlb
inc
rcrl
inc
pop
cmp
and
xor
xchg
jae
mov
and
xchg
gs
sbb
xor
push
fnstcw
cmpsl
xor
clc
mov
lods
mov
inc
insl
or
pop
inc
and
les
jae
mov
fwait
shl
xchg
mov
es
andl
adc
xor
stos
mov
and
mov
xchg
sub
jecxz
jno
cmp
pop
or
icebp
jae
lahf
mov
cltd
mov
dec
loop
push
aad
adc
xor
aam
mov
and
xor
push
jno
icebp
movsl
lahf
sbb
sbb
push
aaa
jno
jae
loop
sub
jno
inc
sub
xchg
lahf
pushf
jno
adc
jne
jae
aas
and
movsl
jg
pop
repnz
and
xor
prefetchwt1
or
ret
adcb
das
xor
pop
inc
adc
and
mov
xor
push
icebp
roll
xlat
ss
lahf
adc
dec
sub
xchg
shl
jb
push
mov
sbb
xor
repnz
arpl
inc
ret
mov
lea
cmp
push
adc
rcl
and
pop
fnstenv
push
xchg
insb
and
or
outsb
dec
addl
rcrb
sub
sar
and
add
and
jae
mov
es
and
dec
push
xchg
decl
xchg
add
jae
sub
xor
notl
pop
adc
test
iret
and
icebp
cmp
arpl
inc
dec
xorb
or
cmp
bnd
jb
ror
sbbl
or
add
xchg
inc
xor
hlt
push
push
popa
ljmp
lea
jae
aas
and
or
adc
xor
hlt
adc
pop
adc
jbe
push
xchg
jno
add
ss
add
icebp
cmc
pop
lea
popa
adc
roll
xchg
lea
adc
div
aam
push
push
jb
cmp
jb
mov
adc
xchg
xchg
js
icebp
and
xor
xchg
inc
mov
xor
hlt
mov
inc
adc
inc
lret
mov
ret
push
shll
sub
ljmp
adc
xchg
jp
lahf
adc
cmp
and
adc
push
adc
bound
popa
std
addr16
inc
cmpl
dec
xchg
cmp
sahf
pop
lcall
mov
mov
adc
xor
ljmp
push
jne
mov
push
cmp
xchg
push
notb
mov
adc
and
push
push
or
push
cmp
add
xor
push
pop
or
pop
repnz
dec
adc
dec
adc
loopne
aad
fs
and
xchg
pusha
inc
and
add
dec
sbb
and
bound
dec
and
or
pop
adc
pop
shlb
or
pop
repnz
pop
and
pusha
push
int
aam
subb
xor
add
mov
lea
push
push
icebp
xchg
push
xchg
push
loop
xor
add
mov
or
inc
test
ret
jo
shll
pop
cmp
and
jbe
xor
int3
arpl
mov
insb
js
add
outsl
xchg
xor
xchg
inc
fldenv
mov
mov
pushl
pushf
loope
add
rcrb
icebp
lods
loope
adc
xchg
notb
xor
push
rolb
xchg
inc
lcall
push
rolb
hlt
adc
enter
mov
push
or
icebp
test
cmc
insl
jno
test
icebp
mov
lcall
stos
mov
mov
popa
and
ffreep
lcall
xor
pop
and
das
sbb
scas
push
sbbl
xchg
mov
xchg
scas
shll
bound
add
ljmp
push
adc
xchg
stc
hlt
push
mov
mov
loope
mov
ret
mov
cmp
notb
aas
add
pop
mov
mov
lcall
aad
ljmp
inc
sbb
inc
xor
adc
xchg
inc
xchg
rcrb
stos
xor
xor
imul
out
adc
inc
xor
xor
adc
cmc
pop
dec
push
cltd
std
fldl
xor
push
scas
or
enter
pop
or
push
and
fucomp
push
jl
push
jmp
push
push
jae
dec
add
push
mov
jg
arpl
in
fsubs
sti
lcall
sahf
repnz
jno
xor
lcall
xorb
cmp
idivb
pop
xchg
sbb
dec
push
and
dec
insl
cmp
stc
push
and
rclb
aam
stc
mov
add
xchg
and
mov
repnz
aam
dec
das
sbb
outsl
sub
test
xor
push
push
inc
repz
fsubr
xor
inc
inc
push
mov
jae
dec
loop
lods
and
jg
push
andb
inc
enter
push
push
call
xchg
pop
fs
and
out
mov
inc
jb
xor
les
inc
inc
adc
mov
icebp
shll
and
repnz
add
lods
xchg
test
aas
adc
xor
outsl
xchg
inc
jno
jno
dec
push
dec
push
push
adc
aam
jno
ret
icebp
add
xor
xor
push
push
shl
daa
hlt
and
xchg
ss
test
icebp
pop
cmp
dec
adc
mov
iret
scas
adc
rol
push
dec
push
adc
flds
jno
sbb
xor
lahf
inc
xorl
adc
push
cltd
bound
cmc
add
pop
je
fldl
shl
xchg
sub
mov
out
test
sbb
xchg
and
adc
fsubs
jl
fimull
xchg
je
sbb
xor
adc
mov
icebp
mov
aam
hlt
inc
loope
icebp
jg
xor
mov
mov
lcall
mov
jae
adc
xchg
sbb
movsb
fcoms
push
jns
icebp
push
scas
xchg
dec
mov
repz
xchg
scas
jo
cltd
jb
xchg
mov
icebp
mov
loope
inc
cmpsb
pop
push
je
mov
adc
rep
xor
ret
test
inc
sbb
xor
sbb
xchg
inc
mov
cmp
into
inc
mov
test
into
addb
xchg
lret
xchg
push
push
push
leave
icebp
push
mov
xchg
aad
jg
repnz
and
inc
fisubl
jno
stos
icebp
test
xor
aad
popa
mov
adc
xchg
stc
mov
inc
xchg
out
repnz
xor
pop
adc
adcl
repz
xchg
xchg
adc
stos
dec
ret
andl
int
fwait
xchg
addl
push
push
adcb
insl
mov
xor
xchg
add
xor
add
cmpsl
xchg
pop
mov
icebp
push
cmpb
inc
jno
or
xchg
scas
adcb
xchg
xchg
clc
loope
xchg
leave
jno
loop
pop
xchg
xchg
dec
inc
and
xchg
lahf
mov
mov
xchg
insl
movsb
xchg
ret
xor
and
cmp
adc
lods
imul
pop
pop
and
mov
jb
sub
icebp
xchg
scas
addr16
stc
cmpsl
scas
xchg
dec
and
dec
cltd
xor
push
lods
repnz
inc
sbb
and
sar
imul
pop
pushf
mov
add
lcall
xchg
pop
push
mov
scas
sbbb
pop
jno
in
divb
in
xor
movsl
js
or
mov
jo
cmp
sbb
insl
xchg
icebp
gs
dec
mov
lods
cltd
sub
pop
mov
inc
pushf
jae
add
fwait
imul
pop
addb
xlat
scas
popa
push
aad
sub
lret
mov
sbb
jb
or
cmc
inc
int
xor
push
xchg
in
xchg
xchg
or
xchg
xchg
lahf
arpl
inc
fldcw
scas
aas
movsl
inc
mov
xor
stc
and
mov
sbb
cmpsl
xor
rclb
pop
inc
xor
adc
xchg
mulb
add
aas
mov
sub
mov
fwait
mov
test
in
mov
aas
mov
sub
xor
shll
xor
shll
cltd
das
insb
ds
dec
xor
adc
push
mov
inc
adc
test
pop
sub
push
mov
daa
neg
ja
int
mov
add
std
roll
orl
jg
mov
in
or
adc
sahf
cmpsl
jg
ljmp
sbb
dec
adc
rclb
mov
mov
xchg
or
add
adc
cmp
aam
sbb
mov
push
mov
lea
cmp
cmp
leave
xchg
push
xor
cmp
jb
inc
xor
stc
sbb
shl
cmp
inc
shrb
stos
mov
xor
mov
xchg
cmpsl
inc
arpl
xchg
ret
lret
push
xor
cmpsl
out
inc
xor
mov
ds
or
dec
dec
inc
int
push
inc
cltd
ljmp
cmp
loop
movsl
shrb
xchg
jb
cltd
mov
mov
pop
lds
rcll
aas
and
pop
mov
and
jae
adc
mov
ret
push
out
ljmp
pop
cltd
inc
ljmp
test
add
jb
mov
lock
repnz
xchg
xchg
fs
icebp
xor
mov
sub
fwait
popa
insl
push
adc
les
scas
and
bnd
inc
xor
jle
xor
hlt
push
aas
sbb
inc
sbb
aaa
bound
in
jae
imulb
icebp
lcall
out
fcoms
rolb
rcrl
push
bound
int
mov
push
mov
popf
mov
push
lods
imul
adc
and
mov
pusha
mov
inc
sub
push
and
xor
pop
cmp
xchg
lahf
inc
mov
cwtl
fisubs
cltd
push
inc
es
and
mov
mov
pop
bound
mov
push
cmpsl
pop
fnstenv
pop
cwtl
mov
pop
and
xor
xchg
pop
imul
pop
insb
lcall
xor
jg
lea
mov
dec
cmp
iret
adc
stos
pop
or
add
xor
adc
adc
sysenter
or
cltd
repnz
xor
rcll
xchg
cmpsl
xor
mov
xor
dec
push
or
not
loope
xor
inc
ret
xchg
jmp
mov
adc
xor
dec
jno
shll
xchg
xchg
fisubrs
enter
xorl
jge
sub
enter
xor
xor
jmp
icebp
xor
dec
sar
sub
rcrl
mov
adc
outsb
loopne
adc
jmp
imulb
adc
pop
in
mov
mov
adc
push
bound
stos
mov
pop
pop
cwtl
ja
das
mov
or
icebp
sub
adc
xor
adc
mov
ljmp
mov
push
rcll
xor
pop
xlat
adc
mov
out
push
iret
and
lcall
add
and
cltd
jp
sub
lahf
cmp
loop
inc
ret
cmp
enter
shlb
inc
rcrl
mov
pusha
filds
adc
sub
xchg
adc
sub
jbe
lods
mov
adc
adc
stos
mov
insl
out
dec
into
push
aam
xor
aad
ss
in
dec
int
rcll
xor
insb
jmp
lret
and
sbb
movsb
adc
cld
movsl
adc
std
and
adc
gs
inc
pop
fidivrs
inc
les
cmp
pop
fnstsw
mov
ret
pop
fstpt
adc
sub
adc
mov
int
ljmp
pop
adc
inc
and
inc
popf
cmp
addb
test
xor
adc
add
push
imul
mov
mov
fisttpll
xor
mov
lcall
in
jne
out
rcrb
sub
push
bound
icebp
pop
ljmp
add
fwait
test
jns
repnz
fwait
ret
adc
adc
repnz
xorl
adc
sub
int
xchg
shrl
jo
lcall
fists
arpl
push
sub
movsl
jg
sbb
in
shll
push
mov
or
sub
cmp
lea
jne
cmp
and
jb
cmovg
push
xor
xor
shll
inc
and
inc
xor
mov
lcall
or
and
push
fcmove
loope
pop
push
fwait
repz
repnz
pushf
mov
sub
jbe
xor
or
test
dec
repnz
push
mov
call
mov
sti
xor
fmull
fisubrs
adc
test
or
push
jb
hlt
jo
xor
and
xchg
push
and
push
shrl
and
sub
rcll
cwtl
mov
inc
mov
loop
shr
push
jecxz
ficoml
add
stos
aaa
adc
loope
adc
repz
or
xor
mov
and
dec
push
sub
icebp
imul
jg
add
mov
mov
push
and
divb
xor
push
mov
mov
push
sub
mov
dec
inc
push
and
outsb
mov
xchg
insb
popf
mov
push
jo
int3
test
adc
sbbb
xor
push
jns
mov
sbb
jp
and
xchg
jle
xor
mov
and
adc
and
add
jbe
je,pt
xchg
jle
shlb
jns
dec
pop
aas
adc
adc
and
or
and
mov
jno
push
pop
sar
mov
bound
aad
rcrb
pusha
adc
icebp
test
mov
loope
inc
xor
xor
cmp
mov
jno
lea
in
roll
mov
push
fs
rcrb
pop
gs
fdiv
push
and
cmp
bound
ret
out
xchg
add
push
call
aas
xor
or
fcmovnu
fwait
add
jo
or
call
int3
fnstsw
gs
adc
xchg
and
mov
ss
mov
lods
fwait
inc
imul
mov
adc
fsub
ficoml
cmpb
add
test
pop
ja
inc
and
mov
adc
sbb
popa
ljmp
inc
cli
cmp
mov
cmp
mov
push
enter
and
inc
xor
mov
pop
xor
and
xor
push
int
sub
icebp
imul
lahf
in
outsb
xor
jecxz
loope
and
dec
mov
out
pop
popa
dec
cltd
jbe
in
scas
xchg
pop
mov
ficoml
push
sbb
shrl
and
xchg
jecxz
jmp
icebp
icebp
mov
push
popf
aad
insl
pusha
and
cmc
mov
repnz
and
mov
loop
jno
sub
fnstenv
lds
xor
jecxz
and
mov
jae
popa
test
pop
negl
clc
and
jecxz
pop
mov
loope
dec
and
pushf
and
xor
xchg
mov
test
cmpb
mov
stos
jb
sbb
and
xor
sbb
mov
and
ds
insl
xchg
jl
and
adc
xor
xchg
jb
xor
lcall
mov
and
aaa
loop
hlt
push
push
or
xor
xor
nop
and
xor
xor
mov
and
in
xlat
xchg
addr16
push
mov
popf
xor
mov
aam
adc
inc
imul
add
icebp
push
add
adc
frstor
or
scas
xor
hlt
push
leave
in
and
xchg
mov
hlt
andb
hlt
pop
mov
add
xlat
lcall
mov
mov
inc
xchg
jae
pop
cmp
inc
inc
adc
and
adc
push
sub
icebp
jno
lcall
mov
lahf
movb
sub
mov
leave
sbb
push
movl
push
lock
in
push
dec
mov
xchg
xchg
mov
lret
mov
int
jle
and
inc
xor
addb
imul
ss
in
and
xchg
lahf
xor
popa
xchg
ret
sbb
sbb
jne
loop
sbbl
push
jnp
jns
mov
idivb
pusha
add
add
ss
inc
aad
stc
and
mov
imul
push
adc
xor
push
sbb
enter
bound
addr16
outsl
inc
fstps
or
inc
aas
andl
adc
sbb
movsl
jno
cli
sbb
xor
cltd
gs
fs
inc
dec
push
outsl
push
repz
mov
in
mov
push
sub
lcall
sbb
rorb
fldl
outsl
scas
jmp
jne
ja
jmp
sub
xchg
push
stos
cltd
outsl
mov
xor
scas
dec
mov
enter
xchg
lock
in
and
cmc
mov
ss
adc
jg
jmp
lods
push
and
push
scas
jmp
push
mov
cmp
jecxz
xor
jne
daa
leave
int3
inc
add
xlat
icebp
int
pop
adc
or
jmp
fildll
je
inc
and
adc
push
mov
sbb
fsts
aam
cmp
mov
shlb
movsb
test
xchg
add
and
fwait
add
fsubr
push
dec
cltd
call
add
dec
dec
leave
mov
jge
pop
adc
loop
mov
dec
xchg
test
roll
outsl
popa
aad
sarl
mov
movsb
xchg
nop
repz
xor
push
gs
not
sti
xchg
roll
push
pop
dec
popa
and
fwait
push
scas
push
inc
outsb
sbb
and
loope
adc
cltd
mov
and
in
xchg
data16
xchg
stc
and
adc
mov
adc
test
push
aaa
xchg
or
mov
iret
push
push
sub
jg
rcrb
movsl
lahf
or
xchg
mov
icebp
inc
les
movsl
inc
mov
sbb
sbb
and
cltd
fs
fidivl
test
xchg
inc
mulb
lret
mov
rclb
stos
jb
xor
jne
jae
push
xchg
ja
movups
adc
mov
mov
mov
loop
or
call
sbb
imul
imul
mov
aaa
insl
aam
jne
repnz
loope
push
xor
and
ja
loopne
xchg
or
or
jae
sub
lea
leave
xchg
xchg
bound
dec
paddd
add
mov
xchg
icebp
rclb
mov
mov
sbb
cmp
inc
mov
daa
sbb
mov
lods
mov
dec
in
jae
outsb
lods
jge
shlb
dec
int3
mov
fistpll
and
sub
in
loope
jns
cmp
pop
inc
out
fisubl
icebp
push
js
idivb
xlat
cli
out
fidivl
push
testb
add
int
repnz
inc
xchg
adc
in
mov
inc
mov
mov
cmpsb
push
andb
cmp
xorl
pop
mov
xchg
jo
mov
add
imul
jge
nop
mov
jno
cmp
pop
push
outsl
xor
jns
push
faddl
xorl
mov
cmp
jnp
push
ret
jg
test
push
arpl
pop
sbb
pop
popa
xor
pop
sahf
adc
mov
adc
and
cwtl
std
loope
xor
jb
pop
mov
mov
shll
flds
stos
mov
into
sub
ljmp
loop
and
es
xor
sub
fwait
jmp
mov
popf
loop
das
adc
jecxz
adc
xchg
mov
mov
bound
lods
cltd
or
insl
inc
mov
dec
jo
and
sub
and
rcll
stc
aad
andl
xor
add
mov
fdivl
inc
xchg
aad
repz
dec
ja
or
jno
dec
test
xchg
jb
jae
sub
cmp
sarb
clc
mov
push
jae
arpl
sbb
sbb
sti
cmc
ljmp
rclb
ret
push
les
movsl
dec
popa
clc
push
jae
stc
int
inc
outsl
xlat
outsb
shlb
je
popa
mov
xchg
cli
lret
jo
xchg
and
sbbl
xor
imul
dec
stos
xchg
xchg
pop
fists
stos
shl
gs
cmp
movsb
stos
and
scas
je
add
repz
enter
push
jecxz
arpl
adcb
ret
ljmp
jae
xchg
mov
test
sbb
aas
mov
movsl
and
bound
insl
gs
sbb
fs
pop
scas
mov
test
cmp
ret
and
adc
inc
loopne
rcll
jecxz
inc
pop
repnz
mov
stc
and
mov
inc
jno
xorl
inc
roll
test
mov
jb
sub
outsl
fsqrt
cmpsl
xchg
push
xor
mov
rcl
ret
mov
push
into
push
cmp
and
xor
push
push
cltd
test
pop
shll
mov
mov
stc
push
mov
xchg
je
mov
and
enter
xor
sbb
in
lcall
in
push
and
add
rolb
mov
push
in
add
mov
into
xor
and
mov
rcrb
and
and
aaa
addl
xor
into
out
mov
fwait
and
sub
adc
pop
xor
inc
jae
movsb
cs
popa
pusha
aam
nop
and
xor
adc
sbb
in
xchg
sbb
movsl
push
outsl
inc
scas
lcall
pop
pop
adc
inc
mov
daa
mov
and
lds
and
ds
jp
cmp
loope
and
iret
xchg
adc
js
aam
jno
push
fwait
and
inc
cld
jmp
movsb
repz
pop
mov
cvtpi2ps
and
shlb
fsubl
insl
xchg
xor
sbb
mov
int3
push
mov
cmp
push
adc
sbb
mov
xchg
cmp
or
mov
mov
mov
ljmp
iret
clc
adc
and
inc
mov
jae
loop
mov
mov
xchg
push
mov
inc
pop
ficompl
xor
mov
mov
mov
mov
add
fcoms
fidivl
sbb
pop
fiadds
xchg
cltd
fwait
popa
and
arpl
adcl
movsb
cwtl
add
and
add
jbe
das
or
inc
rolb
inc
orb
js
jb
push
jp
inc
icebp
sub
adc
mov
sbb
xor
pop
andl
cltd
jg
and
xor
xchg
xor
pop
adc
inc
mov
xchg
push
cmp
andb
mov
ss
pop
xor
mov
mov
pop
ret
push
push
xchg
daa
lret
ljmp
and
repnz
add
adc
xor
lcall
cmc
andnps
cld
xor
jne
and
pop
xor
xor
xor
mov
fxtract
rol
xor
mov
inc
jbe
xorb
jge
inc
push
insb
jg
jb
xor
ja
sub
ret
and
xor
jns
jg
push
popf
adc
mov
jae
arpl
add
sub
stos
arpl
and
ss
arpl
inc
push
je
fld
jae
cltd
aam
sub
push
inc
jae
xchg
xchg
je
adc
xor
push
push
test
or
lea
jecxz
bound
inc
inc
xor
mov
xor
subb
and
and
xor
sbb
xor
pop
inc
add
and
xor
scas
xor
popf
loope
bound
imulb
adc
lods
xor
adc
dec
popa
sbb
adc
jns
inc
pop
add
repnz
shll
icebp
push
ds
dec
sbb
jecxz
xlat
loope
mov
mov
mov
lods
mov
cmp
and
loop
mov
mov
and
iret
cmp
mov
ret
pusha
icebp
pop
lods
and
push
imul
adc
arpl
sub
incl
cmc
pop
daa
aam
repnz
mov
sbb
or
adc
in
jns
and
pop
push
xchg
fstps
pusha
mov
and
inc
pop
push
pop
xor
fs
add
or
pop
in
pop
pop
mov
inc
push
and
xor
sbb
rol
cmpsl
stos
jecxz
and
outsl
loop
push
shlb
cmp
dec
xchg
push
mov
pop
adc
xchg
sti
testl
int
outsl
icebp
imul
fsubl
adc
enter
cmp
mov
sbb
leave
sbb
cltd
xor
in
test
xchg
dec
icebp
nop
out
cmc
stc
xlat
or
fldenv
paddw
and
imul
dec
mov
push
jecxz
leave
addr16
nop
mov
repnz
imul
shrl
jb
jo
xor
pop
fmuls
shr
gs
fwait
xchg
cmp
dec
dec
imul
cmp
jmp
daa
inc
sbb
jnp
mov
jns
dec
lcall
std
loope
dec
imul
push
add
mov
jge
sbb
jns
int3
fcomps
int3
fsts
xor
dec
mov
and
and
subl
adcl
jmp
cmp
jmp
popa
imul
mov
aas
int3
xchg
arpl
cltd
mov
pop
cmp
ret
cmp
mov
jb
and
xor
and
inc
and
inc
adc
xor
adcl
mov
push
or
xchg
cltd
sbb
or
jae
repnz
idivb
outsb
sub
addl
dec
jmp
xlat
mul
sarb
fwait
pop
out
ljmp
test
xor
dec
push
aam
or
mov
and
pop
or
dec
push
or
clc
pop
pop
xchg
push
adc
lea
lcall
sbb
push
movsl
dec
mov
psubusw
sbb
addr16
repnz
adc
adc
push
das
cmp
out
lock
xchg
pop
and
lea
iret
add
push
and
pop
popf
loopne
bnd
out
loope
pop
into
add
xor
jmp
fucom
mov
stos
xor
mov
mov
lret
stc
and
add
aad
cmc
add
inc
shll
stos
and
cmpsl
push
jns
loope
inc
imull
fwait
outsl
and
fbstp
pop
and
xchg
push
jecxz
das
ljmp
xor
jle
pushf
mov
pop
lret
mov
hlt
cwtl
xor
cld
pop
popa
sub
lds
pop
xor
idiv
es
flds
stos
push
inc
inc
jb
pop
mov
ja
lret
push
pop
mov
xchg
jg
xor
adc
adc
mov
and
adcl
push
add
add
ds
scas
xor
or
or
das
inc
sbb
das
ret
iret
sti
in
dec
pop
arpl
lock
pop
repnz
scas
fiadds
mov
repnz
orb
mov
mov
add
pusha
cmpsl
add
xor
xor
pop
inc
jns
inc
xor
jae
dec
mov
xchg
sbb
mov
cltd
jne
pusha
inc
adc
adc
push
xchg
mov
addr16
insl
mov
clc
popf
dec
xor
push
adc
lea
pop
dec
push
dec
loopne
and
sbb
jo
xor
add
in
test
xor
adc
test
xor
repnz
jl
mov
fcompl
cltd
decl
test
sub
cmpl
sub
enter
adc
jle
adc
inc
xor
int
clc
bound
or
insb
xor
push
mov
in
mov
pmullw
adc
jno
rcr
inc
mov
pop
xchg
jg
mov
iret
sbb
xor
mov
sbb
jb
test
adc
push
cmpsl
xorb
repnz
dec
xor
in
pusha
xor
lahf
popa
psraw
je
mov
cmp
xchg
notb
sbb
ficompl
push
sbb
and
xchg
and
and
sub
fisubrl
push
sub
xor
add
xchg
aaa
idivb
dec
xor
or
push
inc
add
mov
jb
cmpsl
jno
test
inc
loopne
push
xchg
adc
sbb
sbb
ficompl
push
sbb
adcb
pushf
sub
xor
loop
lret
push
loope
jno,pn
daa
mov
xchg
and
daa
movsb
xchg
add
fldenv
xor
fadd
jmp
adc
shrl
sbb
add
test
scas
rcrb
adc
arpl
ss
popl
xchg
popa
pop
add
and
mov
cltd
loop
cmp
arpl
icebp
popa
das
sbb
add
cltd
addl
arpl
add
cmp
cmp
jb
in
and
jae
and
lods
mov
xor
inc
lahf
xor
push
mov
mov
or
cltd
add
negb
loope
cmp
and
rolb
lods
mov
and
xor
fisubl
loope
shlb
roll
and
xchg
mov
mov
cltd
sbbb
rol
ret
pop
adc
jno
xor
jno
imul
cmp
ljmp
test
mov
icebp
add
push
inc
and
and
imul
shlb
imul
test
mov
mov
xor
mov
ss
popa
cmpsb
add
filds
add
mov
jp
cltd
sarb
fcmovnb
popl
xor
insl
outsb
xor
fisubl
repnz
xchg
xor
xor
add
add
insb
inc
push
cltd
mov
cmp
mov
mov
shlb
ja
mov
outsl
fwait
xor
jno
xor
in
cmp
pusha
rcr
addr16
sbb
dec
shll
jo
shl
test
xor
std
push
push
jno
push
xorl
movsb
bound
jno
inc
mov
cltd
push
pop
cmp
mov
mov
mov
rol
mov
cltd
repnz
cmp
jae
sbb
add
cltd
xchg
je
ss
sbb
outsl
ja
repz
and
push
add
push
xchg
pop
loope
push
shlb
add
mov
cltd
and
ljmp
dec
xchg
cltd
cmpsb
inc
cmp
lods
mov
adc
lahf
inc
mov
arpl
mov
xor
repnz
push
dec
pop
xor
loopw
loope
cmp
cmp
push
ja
lret
ja
cltd
cmp
js
ja
repnz
mov
and
popa
xchg
dec
xchg
cltd
loop
cmp
mov
cmp
xor
imulb
adc
std
fwait
adc
shll
insb
rcll
jb
pop
push
inc
push
pop
ret
lret
mov
cltd
icebp
push
jnp
ss
popl
popa
xchg
bound
xchg
jnp
push
cltd
mov
mov
add
fadds
adc
push
test
adc
jnp
hlt
mov
push
shl
and
jnp
mov
jge
push
and
stos
cmp
and
mov
sbbl
lcall
enter
mov
arpl
cmp
loope
ljmp
sub
bound
and
and
jge
push
xchg
jg
cltd
cmp
push
push
add
xor
mov
cltd
push
pop
cmp
jg
sar
and
jno
dec
mov
inc
or
cltd
cmp
lea
loope
loopw
adc
sbb
push
bound
lret
adc
xchg
cltd
loop
cmp
xor
std
push
xor
mov
cmpsb
xorb
ret
and
add
les
and
mov
sbb
mov
arpl
cmp
pop
lahf
adc
fld
sbb
fdivr
adc
das
es
push
mov
stos
mov
and
es
dec
xchg
cmp
ret
and
add
xchg
je
xchg
cltd
popa
pop
cmp
inc
xlat
adc
repz
mov
adc
jge
adc
inc
test
adc
xchg
mov
cltd
cmp
cmp
inc
ret
mov
push
lahf
mov
cltd
arpl
ljmp
mov
cltd
arpl
cmp
push
or
adc
inc
inc
pusha
push
xchg
addl
rolb
mov
and
push
mov
test
icebp
lea
inc
push
cmpb
mov
mov
loop
stos
icebp
scas
and
jne
bound
mov
mov
cltd
cmp
cmp
icebp
ficoms
stc
and
repz
xor
cltd
mov
inc
mov
addl
repnz
fs
xchg
push
pop
ja
loope
clc
ret
and
repz
addr16
loope
cmp
cmpsb
and
xchg
ret
pop
mov
cltd
sbb
xchg
mov
loope
popa
inc
add
loope
rcrl
icebp
cmp
xor
and
and
ret
xchg
xor
mov
cmp
and
xchg
mov
mov
repz
test
adc
xchg
cmp
repz
xchg
cltd
mov
orb
loope
and
lcall
inc
cmp
mul
adcb
cmp
mov
cmp
rorb
xorb
pop
lea
loop
cmp
cmp
sbb
xchg
add
fisubl
cmp
cmp
test
or
loope
bound
xor
addr16
loope
cltd
cmp
scas
loop
jb
sbb
aas
icebp
add
push
popa
cltd
add
pop
cmp
cltd
test
adc
inc
cmp
dec
push
loope
xchg
cltd
leave
mov
arpl
cmp
jp
pop
popa
fwait
cmp
mov
inc
mov
mov
push
adc
push
jno
sbb
adc
push
dec
xchg
jno
cs
cmp
jp
stc
sbb
xchg
xchg
lcall
arpl
inc
out
push
xchg
xor
jno
rcr
loop
and
popa
flds
adc
jno
rcll
push
adc
das
push
bound
das
push
mov
icebp
dec
sbb
cmp
jno
lahf
sub
sbb
inc
add
inc
aam
lahf
dec
jno
adc
adcl
jb
xor
mov
xor
xor
mov
inc
ror
fbld
add
repnz
lret
xor
push
mov
xor
add
mov
push
jg
icebp
mulb
bnd
jb
adc
fwait
mov
adc
roll
inc
add
icebp
lds
push
dec
xor
push
popa
xor
mov
jb
xchg
pop
popa
cltd
sub
sub
shll
xor
mov
and
cmp
popa
jbe
pop
movsl
mov
cs
xor
movsl
xor
jno
add
cmpsb
and
arpl
dec
popa
xor
push
jb
jno
stos
add
sub
lods
mov
cmp
inc
cmpsb
out
popa
fildl
ja
sbb
xorl
push
test
rolb
rcrl
dec
dec
dec
ret
lret
icebp
cmpsl
ffreep
sub
xor
jmp
adc
jg
xor
mulb
dec
mov
mov
shrb
jae
stos
jno
pop
jno
push
mov
shl
xlat
xor
out
pop
dec
std
insl
adc
jnp
cmp
popa
jbe
jg
jb
mulb
ret
jne
loop
inc
repnz
xor
stos
xorb
dec
icebp
aam
stos
pop
add
dec
and
mov
pop
mov
andb
mov
sbb
popa
push
sbb
add
add
dec
out
loop
mov
jle
jbe
jl
xor
mov
add
adcl
add
xor
cltd
sbb
jno
repnz
hlt
dec
sub
ret
pop
push
add
pusha
repnz
xchg
imul
adc
scas
jb
jle
dec
sbb
push
mov
inc
popa
mov
mov
lret
bnd
push
hlt
inc
mov
and
rcr
loope
push
adc
xor
push
push
test
mov
adc
dec
rcrb
adc
xlat
daa
lcall
push
mov
lcall
arpl
push
mov
shll
push
repz
inc
mov
adc
out
arpl
flds
out
push
xchg
xor
add
adc
test
cmp
subl
mov
and
into
fwait
jno
and
insb
jno
mov
dec
xchg
popf
shl
icebp
test
or
and
push
cltd
inc
mov
push
push
xor
mov
lcall
sbb
and
xor
or
xor
inc
and
mov
sub
xor
das
xor
push
xor
xor
aaa
xor
push
cmp
xor
aas
xor
push
inc
cltd
add
sbb
cmp
mov
jno
dec
lea
mov
xchg
mov
mov
lds
push
popa
fstps
inc
into
fwait
xchg
ja
add
adc
push
dec
ficoml
notb
ret
push
add
add
add
add
add
sub
push
sub
sub
add
add
add
add
add
sub
out
sub
or
push
and
add
add
add
add
sub
jmp
push
xor
cltd
sbb
cs
dec
movsl
inc
xor
mov
mov
insl
mov
jne
fidivs
mov
jno
jecxz
push
cmp
sbb
cli
mov
lret
fwait
xchg
cmc
xor
pop
enter
push
mov
xor
mov
sbb
mov
jno
adc
mov
cmpsb
jno
mov
add
mov
loope
sub
push
imul
idivb
shl
loop
sbbb
jno
xor
inc
push
popa
aas
and
mov
xor
adc
mov
jg
xchg
and
mov
insl
push
rorl
pop
shll
push
test
push
gs
dec
xor
mov
and
loop
mov
add
rcll
cmp
dec
insw
adc
and
lods
pop
xor
push
fcomps
xor
jns
xor
adc
mov
xchg
not
sbb
in
xor
xlat
adc
rol
dec
jmp
shlb
dec
push
pop
adc
outsb
test
mov
lahf
rorb
loopnew
cmp
popa
push
es
mov
lea
mov
mov
daa
popf
xchg
div
addl
sbb
cltd
xor
and
test
cltd
jl
and
xor
and
push
and
aam
adc
add
pushf
xor
inc
andl
jg
mov
mov
xor
and
and
stc
cs
jno
lds
push
fisubl
jb
push
leave
jg
loop
cmpsb
mov
fld
movsl
adc
adc
lret
pushl
and
adc
popa
mov
mov
lret
adcb
cltd
adc
cmc
mov
dec
mov
imul
popa
push
pop
rcrl
mov
adc
jae
pop
test
test
mov
popa
xor
int
icebp
and
mov
cs
adc
cmc
bound
int
repnz
xor
loop
repnz
add
insl
jp
lcall
pushf
jecxz
jne
pop
and
cmpsl
loope
rcrl
pop
test
xor
push
dec
cmp
iret
icebp
jno
js
dec
xchg
popf
add
leave
addr16
xor
rcll
adc
lahf
cmp
dec
push
dec
adc
fdiv
mov
popf
rcl
xor
inc
hlt
inc
push
hlt
inc
insl
hlt
inc
mov
testl
fwait
rcll
std
int
cmc
jnp
sub
jno
push
mov
test
dec
sahf
pop
xor
into
mov
popa
into
xor
xorb
jae
pop
add
das
push
icebp
add
dec
pop
and
xor
xor
or
add
push
mov
xor
add
add
test
xchg
mov
loop
bound
es
fildl
and
aad
shrb
cltd
sbb
insb
popa
in
and
popa
hlt
push
fbstp
and
aas
and
jno
xchg
jno
mov
aad
xlat
jg
icebp
lret
xchg
divb
test
inc
test
outsb
mov
inc
push
hlt
daa
sbb
xlat
push
push
sbb
loop
xor
xor
add
sbb
mov
fnstenv
rorl
add
xor
mov
sahf
push
sbb
jno
xchg
pop
andl
push
push
inc
xchg
aad
fstpt
mov
dec
push
push
sbb
sbb
fcmovnbe
add
outsb
xor
fildl
xchg
and
mov
rorl
mov
insb
sbb
scas
add
jno
xorb
jns
adc
mov
xorl
adc
fnstcw
adc
repnz
cmpsb
push
popa
roll
lcall
mov
sub
and
xor
push
ficompl
mov
ret
fsts
jnp
xor
repnz
sbb
shrl
add
sarl
mov
loope
cmpsb
push
pushf
sub
push
loope
push
and
stos
mov
sub
inc
ds
imul
push
sub
xor
adc
xor
popf
mov
popf
mov
cmpsl
sub
add
lea
sbb
das
hlt
inc
inc
hlt
inc
pop
hlt
inc
jno
inc
xchg
inc
popf
hlt
inc
mov
inc
leave
hlt
inc
fcomip
inc
cmc
hlt
inc
or
inc
and
inc
cmp
shll
pop
lcall
xlat
mov
xlat
int3
lcall
clc
push
and
xor
sbb
cmp
push
dec
cltd
pop
gs
xor
xchg
xor
push
cmpsl
cltd
gs
pop
imul
and
xor
inc
xor
push
pop
pop
sbb
xchg
in
sbb
cmp
aam
dec
lock
dec
or
daa
andl
mov
and
and
and
and
and
and
and
shll
fiaddl
jge
xlat
xchg
pushf
xlat
loop
lcall
out
arpl
popa
fsts
push
xor
mov
test
dec
sahf
hlt
push
adcl
jne
call
jno
sbb
push
and
mov
shll
xor
mov
and
mov
mov
repz
das
push
sub
rorb
shll
dec
mov
adc
mov
xchg
mov
and
mov
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
test
mov
mov
or
pushf
pop
mov
xor
pushf
xlat
inc
popa
pushf
xlat
bound
xlat
orb
rcrl
icebp
mov
add
push
inc
add
inc
dec
adc
aad
mov
lret
rcll
sbb
jno
repnz
add
inc
rorb
movsl
icebp
push
adc
push
mov
add
fistl
cmp
jno
xchg
cs
cmp
xor
mov
sbb
cmpsb
or
and
ss
xchg
dec
dec
shl
icebp
sub
jb
jno
inc
and
xor
xchg
xor
and
xchg
inc
mov
push
cmpb
mov
mov
inc
repz
and
incl
andl
mov
xor
cmpsb
push
and
xor
idivb
xchg
mov
xchg
jno
rcrb
loop
xchg
popl
xchg
push
jae
jae
jae
test
adc
out
push
rcll
loope
mov
and
jb
jbe
inc
shrl
jle
push
add
ret
ror
shl
cs
push
lcall
popa
push
mov
xor
add
mov
pop
xor
xchg
jno
xor
cltd
xchg
insb
xchg
in
adc
loop
and
loopne
xchg
xor
insb
push
cmp
rclb
mov
adc
adc
inc
xor
mov
xchg
test
mov
jo
xor
cmp
repnz
push
xor
leave
and
inc
stc
sub
jb
push
addr16
push
xor
mov
sbb
or
and
cmp
sahf
movsl
push
cs
push
jno
dec
mov
hlt
sar
dec
cmpsl
xchg
push
ds
xchg
leave
shlb
pushf
push
jne
xchg
aas
and
xchg
mov
pushf
ret
std
xchg
add
mov
out
add
xor
xorb
andb
dec
xor
pop
and
addl
mov
adc
enter
cli
pushl
xor
bound
mov
loope
push
push
loop
and
lret
add
in
xor
xor
push
and
popf
xor
dec
popf
shl
repnz
xor
lea
jno
popa
rcl
fidivl
xor
icebp
dec
popf
xor
addl
push
loop
jb
subb
sbb
add
mov
ret
jp
inc
xor
cli
adc
jnp
and
xchg
mov
and
adc
ret
xchg
dec
enter
xor
push
pop
popa
xor
mov
cs
sbb
popf
push
push
test
bound
and
mov
mov
add
xchg
repnz
cltd
mov
jno
and
and
push
or
shll
popa
jg
adc
addb
fwait
mov
cltd
xlat
lret
xor
jb
mov
mov
addr16
mov
adc
repnz
orb
mov
inc
adc
mov
xchg
popa
hlt
daa
sbb
fwait
nop
adc
or
jb
mov
adc
shll
aas
cmpb
push
push
ret
and
cmc
xor
xchg
and
inc
rcl
js
lcall
adc
add
xor
dec
and
loop
fs
fldl
add
leave
inc
fistpll
aam
sahf
addl
or
jno
popf
sub
inc
sub
pop
sub
jnp
inc
mov
jae
jae
jae
jae
jae
loopne
cmp
loop
jb
popf
mov
push
lret
jno
enter
std
adc
jnp
sbbb
adc
ret
push
dec
pop
and
inc
mov
and
mov
adc
and
sbb
add
cmp
adc
loope
scas
mov
xchg
imul
xorl
xor
roll
inc
push
arpl
xor
mov
xor
adc
mov
push
and
push
icebp
add
cmpsl
rcll
xchg
dec
mov
jg
shlb
call
and
mov
popf
mov
mov
sbb
in
xor
xor
in
add
mov
leave
cmc
and
out
push
xor
mov
mov
pop
push
add
sbb
xor
movsl
and
mov
movsl
and
mov
movsl
xor
pushf
xor
popa
push
push
adc
bound
es
push
and
xchg
inc
mov
cmp
mov
loop
lcall
adcl
popa
mov
ror
fwait
xchg
pop
and
rol
inc
cmpsb
shll
addb
add
inc
mov
and
fadds
mov
aam
cmpsl
and
aaa
bound
shll
aaa
addr16
fwait
shll
sbb
push
cmpsb
repnz
add
lds
adc
popf
repnz
sbb
and
push
adc
add
dec
inc
pusha
and
jno
jb
test
jbe
inc
rol
and
pusha
xor
mov
adcl
jne
popa
dec
popf
xor
push
loope
rorl
loopne,pn
inc
jg
adc
cmp
das
sub
hlt
divl
lahf
xchg
push
mov
mov
add
sub
inc
lods
jae
loopne
pop
jno
mov
xor
mov
pushf
xlat
jb
lcall
inc
mov
mov
cs
dec
sub
loop
xchg
repnz
push
inc
mov
icebp
and
loope
aas
and
mov
repnz
mov
xchg
cld
mov
and
fwait
mov
and
lcall
icebp
scas
movups
jnp
cmp
shll
xchg
add
inc
movsb
lret
mov
add
mov
aam
dec
popf
shl
jns
imul
shrl
out
mov
push
dec
xor
ss
xor
loop
xor
push
xchg
inc
mov
ljmp
mov
inc
jb
xor
lret
mov
je
inc
mov
xor
idivb
jb
loope
insb
popa
fstps
notl
mov
push
pop
popa
adcb
add
push
popa
add
mov
xor
add
mov
leave
and
mov
and
inc
sub
xchg
sbb
mov
mov
mov
mov
adc
xor
inc
aam
sub
sbb
cs
mov
mov
aam
mov
imul
xor
cmpsb
and
push
inc
xchg
xor
dec
jno
mov
int
cmp
lds
repnz
mov
into
stos
movsl
repz
and
vandnpd
push
int3
rcll
dec
lcall
fistps
sbbb
adc
setg
mov
out
sbb
xor
push
xorl
xchg
shll
mov
and
into
lahf
sbb
mov
popa
adc
push
testl
dec
rclb
xor
popa
push
lret
xchg
pop
jno
loop
shll
repnz
cltd
mov
adcl
dec
cmpb
popf
mov
sbb
inc
das
add
cld
inc
mov
mov
mov
xchg
into
fwait
or
sub
xor
push
cmp
lods
hlt
cmpb
adc
test
mov
add
loop
popa
push
push
add
scas
adc
add
mov
xor
mov
popa
mov
repz
dec
adc
dec
shrl
daa
icebp
cmp
shll
cmp
ret
push
adc
mov
mov
jno
inc
cmc
xor
sarb
pushf
mov
popa
sub
mov
mov
mov
insb
popa
in
and
imul
pop
pushf
js
xor
push
pop
popa
adcb
fldcw
push
popa
add
das
push
mov
sub
push
add
dec
adc
mov
ficompl
dec
mov
ds
lcall
imul
ret
and
adc
insb
xchg
mov
push
and
mov
xor
mov
mov
and
lret
mov
mov
mov
mov
mov
mov
and
nop
andl
and
add
lret
adc
inc
adc
mov
and
pop
mov
mov
dec
dec
insl
adc
inc
sbb
mov
mov
add
mov
rcr
out
push
or
mov
adc
pop
push
and
add
cmp
imul
adc
test
andb
xor
scas
jb
bound
es
jecxz
add
jbe
andb
lret
xor
xor
and
and
push
jno
rcll
xor
adc
dec
into
push
setne
clc
int3
push
add
push
inc
into
pop
jno
les
mov
xchg
adc
scas
xor
xor
je
shlb
mov
je
loop
mov
add
mov
and
ss
xor
xor
dec
mov
adc
dec
arpl
es
test
cmc
jnp
xor
mov
lcall
xchg
je
ret
loope
dec
je
adc
xchg
mov
pushf
ret
out
popa
rcrl
dec
add
arpl
icebp
push
jae
dec
xchg
inc
push
pushf
popa
xchg
aad
hlt
popa
outsl
push
mov
and
jno
adc
mov
xchg
and
add
mov
cmp
rcll
and
stc
popa
adc
push
inc
xor
das
aam
push
daa
sbb
push
in
mov
xor
and
xchg
cmpsl
popa
push
jb
mov
loop
icebp
popf
push
or
popa
hlt
xor
mull
fwait
pop
pop
adc
ret
hlt
push
adc
xor
mov
and
mov
and
dec
adc
jno
pop
fwait
popa
mov
pop
sbb
jbe
fwait
addr16
adc
xor
sahf
mov
arpl
jp
cmc
add
push
push
or
sbb
and
pop
mov
jno
fsubl
aad
or
push
rcrl
adc
in
in
xchg
mov
popf
cmp
push
mov
mov
scas
xor
dec
fcoml
xor
mov
xor
xor
sbbl
pop
cmc
xchg
rcrb
xor
mov
mov
adc
ret
push
adc
popa
mov
mov
push
adc
popa
adc
jmp
xor
xchg
and
pop
jno
loop
pop
pop
rcrl
inc
pusha
cltd
pop
shl
cmp
lcall
fisubl
ret
pusha
add
pusha
movsl
aam
out
cmpb
cmp
cmp
pop
in
cmp
sub
add
repnz
add
xor
rcl
addl
test
xor
and
lahf
inc
push
xor
fdivr
jne
or
inc
push
pop
and
fistl
push
jb
push
jno
cs
pop
aam
inc
and
arpl
loope
shll
loope
hlt
adc
mov
or
dec
adc
jnp
and
lret
notl
data16
pop
mov
adc
orl
and
fcoml
fcoms
and
xor
sbb
or
add
jno
dec
xchg
push
or
xchg
shll
mov
test
push
andl
adcl
jno
imul
push
icebp
dec
lret
inc
pushf
xchg
rcl
jp
mov
cltd
xor
bound
xor
push
xchg
add
jl
adc
fisubrl
mov
mov
pop
mov
imul
jae
jns
add
mov
adc
jl
cli
shl
aam
pop
dec
cmp
pop
test
rcr
sub
dec
pop
jno
fcmovnu
test
jecxz
mov
sbb
dec
add
ljmp
push
loope
jbe
rcll
xchg
mov
int
test
adc
or
xchg
adc
or
sahf
and
sub
inc
and
adc
push
pop
adc
int3
mov
push
add
push
xchg
sub
push
clc
mov
fildll
and
cmp
bound
aad
lock
mov
cmpsb
adc
cmp
dec
test
fs
xor
iret
and
jb
xchg
mov
cmc
dec
js
in
sbb
jmp
pop
das
adc
lea
into
pushf
or
popf
repnz
mov
adc
pop
mov
inc
jno
mov
out
mov
inc
mov
jo
cmp
add
sbb
dec
cmc
mov
xorl
adc
cmp
jae
popa
jo
pop
xor
and
xchg
and
inc
pop
and
xor
push
scas
cltd
andb
xor
icebp
xor
push
cltd
cltd
andl
sete
les
out
xor
push
sbb
test
xor
push
and
mov
rcrl
push
pop
inc
mov
xor
push
mov
mov
and
xor
out
pop
xor
mov
dec
cltd
jne
and
xor
cmp
push
jp
xchg
in
sub
xor
sub
cltd
andb
pop
cltd
sub
pop
and
xchg
mov
jno
pop
pop
inc
mov
divb
into
push
cmpsb
pop
push
in
mov
andb
cltd
loope
and
les
es
mov
pop
imul
repnz
rcrb
xor
in
lds
cltd
test
xor
cmpsb
sbb
mov
push
ss
and
xor
push
xor
jae
aam
xorb
mov
cltd
dec
xor
xor
mov
cltd
inc
sub
jo
pop
mov
inc
cltd
and
and
xor
mov
adc
add
lcall
xor
push
stc
cltd
fnstenv
imul
and
movsb
xor
push
sahf
cltd
jp
and
xor
in
lds
cltd
andl
cpuid
fsts
fisubs
inc
rcrl
xor
ja
jae
push
and
sub
and
xor
jge
pop
push
inc
cltd
sub
jmp
stos
add
and
push
xor
dec
movsb
mov
add
cltd
xchg
push
xor
pop
sbb
aaa
pop
sub
xor
pop
xor
outsb
ret
call
fldcw
and
xchg
jle
jl
repz
jbe
and
pop
pop
mov
mov
lret
or
sbb
jge
popf
jne
arpl
xor
push
xchg
fldcw
dec
mov
and
and
popa
and
scas
ds
xor
sahf
and
pop
add
xor
push
mov
xor
ds
push
jb
mov
insl
and
push
sub
xor
gs
push
and
nop
fwait
lret
pop
mov
add
xor
xor
mov
and
xor
cmp
push
in
int
xchg
stos
push
and
xor
fnstenv
push
push
cltd
cs
and
xor
fidivl
xor
lea
pop
or
outsb
cltd
xchg
mov
push
and
imul
xor
xor
mov
mov
cmp
xor
adc
lods
mov
xchg
and
dec
xor
push
and
out
and
xor
inc
xor
push
add
xor
push
xor
lcall
xor
push
ds
outsb
mulps
xor
jne
and
xor
jle
xor
cltd
jp
aaa
push
and
fcmovnu
adc
sbb
ret
stc
adcl
and
and
xor
lea
lds
cmc
xor
jle
jbe
inc
dec
xor
and
cmpsb
ret
andb
mov
ljmp
pop
aaa
and
mov
adc
xchg
in
dec
push
es
adc
outsb
mov
xor
cltd
into
sbb
dec
call
adc
push
les
je
pop
rol
pusha
mov
jb
adc
push
cmpsl
pop
enter
inc
adc
pop
inc
repnz
adc
push
repz
imul
aam
xchg
or
cmc
mov
xor
adc
dec
sbb
jae
add
cmp
xchg
jo
xor
int3
adc
inc
push
adc
pop
shlb
and
push
adc
xchg
cmp
inc
cld
sbb
out
adc
bound
repnz
adc
pusha
dec
adc
xchg
sbb
inc
popa
dec
xor
adc
jne
mov
dec
adc
and
xchg
fists
adc
pusha
mov
enter
dec
xchg
cmp
int3
sbb
das
push
push
xorb
pop
mov
imul
out
jne
into
in
mov
out
xor
adc
push
loopne
adc
sbb
int3
mov
into
cli
mov
mov
ljmp
pop
xor
cli
jp
sti
loopne
and
mov
imul
pushf
nop
adc
xorl
cmp
cwtd
call
xchg
std
cld
addr16
or
ds
rorb
cmp
fsub
sub
pop
push
ficoml
pop
adc
ja
test
jmp
push
adc
loop
je
fsts
jae
xchg
sbb
aam
pushl
xchg
jge
insl
addr16
scas
add
adc
jne
mov
xchg
outsb
das
push
int
leave
sub
adc
repnz
mov
add
pop
inc
ss
adc
pop
sbb
push
adcb
push
ljmp
push
xchg
inc
jmp
and
insl
sub
imul
cmp
push
jmp
cltd
dec
ljmp
sbb
sub
fdivrs
shlb
lahf
insl
repz
stos
adc
je
inc
push
fidivl
push
adc
ret
or
dec
cmp
iret
in
cmp
sbb
and
lds
lods
in
daa
xor
icebp
lea
mov
aam
mov
imul
std
cmp
mov
out
adc
frstor
cmp
jge
push
mov
enter
xor
dec
jns
lea
sub
sti
xchg
inc
mov
or
fwait
adc
xchg
bound
in
xchg
outsl
aad
jno
mov
inc
or
jb
xor
adc
mov
pop
adc
lods
in
or
mov
out
adc
jge
cmp
xchg
jmp
sub
and
pop
jmp
sub
iret
adc
es
fisubl
wrmsr
adc
xchg
call
xchg
pop
xchg
ljmp
xchg
rcrl
ss
xchg
lcall
repnz
or
hlt
rcl
add
and
loope
iret
sti
xchg
inc
push
adc
outsb
pop
loop
adc
mov
xor
dec
pop
pushf
adc
mov
leave
aam
pop
scas
insb
adc
lock
jne
add
in
fcomps
xlat
adc
mov
ficompl
cmpb
push
icebp
xor
adc
adc
pop
ss
cmp
ret
push
xchg
test
cmp
xchg
lret
sub
mov
cmp
rcll
idiv
jp
mov
dec
adc
mov
rorb
ljmp
mov
jmp
sbb
data16
ret
lods
adc
dec
add
inc
mov
sbb
ss
rcrb
mov
inc
inc
adc
mov
jns
mov
mov
sub
inc
add
dec
adc
cld
cmpsl
fcoms
pop
mov
xchg
xchg
icebp
or
adc
out
pop
out
push
xor
sbb
jnp
insl
or
mov
pop
xchg
aad
sti
addr16
mov
cmp
inc
adc
mov
stos
fcoms
jb
jge
sub
nop
dec
mov
cli
insl
repnz
adc
mov
mulb
sbb
and
xchg
dec
adc
mov
mov
mov
sub
aad
out
lods
sbb
inc
adc
insb
mov
das
inc
pop
addr16
or
nop
das
inc
sub
mov
bound
push
fidivs
movsl
mov
sub
lods
xchg
adc
or
jl
lods
sbb
in
es
in
ffree
scas
adc
and
rclb
mov
lods
or
inc
fs
scas
aas
dec
cmp
cld
into
sbb
and
pop
pop
push
mov
adc
xchg
stos
and
push
push
pop
aas
push
cmp
lock
adc
data16
pop
inc
std
sbb
adc
mov
jle
pushf
push
fwait
data16
cmp
popa
sbb
imul
xchg
adc
xchg
addr16
add
stc
aad
inc
lcall
movl
aas
scas
and
loope
push
add
pop
ljmp
in
mov
adc
inc
add
sbb
mov
sbb
je
movsb
or
adc
xor
sub
imul
mov
adc
movsb
cmp
les
pop
jae
jl
ret
and
dec
sub
lret
test
imul
xchg
add
dec
mov
adc
leave
push
loopne
outsl
movhps
cmpsb
xchg
call
scas
dec
adc
sti
into
xlat
repz
jb
adc
cld
rcl
movsl
sub
cmp
jmp
dec
dec
pop
add
fisubs
mov
ret
xor
clc
and
popf
inc
cmp
in
jp
add
mov
mov
push
std
adc
repz
xchg
in
inc
pop
adc
imul
sub
xor
mov
lahf
stos
fildll
push
adc
mov
adc
sbb
arpl
sti
repnz
fst
xor
dec
orb
pushf
and
xor
adc
cmp
adc
sbb
mov
xor
push
imul
sub
mov
xor
mov
push
imul
xchg
rcrl
sub
shl
mov
mov
adc
lods
ror
adc
and
push
and
leave
mov
mov
inc
fists
rcrl
pop
pushf
cmpsl
sbbb
push
mov
xchg
pop
ljmp
loope
rcr
and
adc
inc
inc
jnp
and
adc
pop
mov
xchg
sub
lods
filds
pop
inc
enter
pop
adc
insl
fwait
cmp
adc
add
stos
adc
test
pop
lahf
outsl
pop
call
adc
rorb
adc
loop
dec
adc
cmp
adc
hlt
int3
dec
mov
xchg
adc
xor
outsb
cli
lcall
fcompl
sbbl
rorl
lds
mov
xchg
ret
fsubl
fisubs
movsb
adc
popf
push
pop
jmp
mov
jge
mov
xchg
dec
adc
jg
push
push
in
mov
pop
dec
and
or
xchg
mov
ja
daa
adc
jne
mov
iret
sbb
and
lcall
sbb
add
fstpl
sbb
adc
leave
jns
insl
dec
xor
cmpsb
adc
cwtl
push
adc
and
mov
fcoms
mov
mov
mov
cld
dec
test
ss
and
les
fs
mov
js
adc
test
push
enter
adc
es
aam
fdivs
adc
xchg
imul
jb
adc
nop
xchg
sub
adc
mov
int3
xchg
jno
or
daa
shrb
test
pop
movsl
and
dec
sub
sti
adc
add
popa
lea
inc
insl
addr16
mov
call
lock
aas
rcll
adc
addr16
adc
cmp
imul
cmp
pop
adc
xor
pop
sub
aaa
adc
incl
adc
mov
and
ret
arpl
add
pop
pop
and
movsb
adc
xchg
rcrl
sbb
mov
adc
push
cmp
mov
pop
adcb
sbb
pop
hlt
sub
mov
xchg
xor
cwtl
adc
lds
sub
cmpsb
out
pop
xor
add
adc
out
test
push
pop
loope
cmp
add
test
sub
hlt
xchg
mov
or
adc
mov
sub
popa
sti
lahf
adc
mov
inc
push
cli
aam
mov
call
and
adc
loopne
mov
adc
fst
lock
lcall
pop
and
inc
loope
mul
js
sarb
adc
lcall
in
scas
fsubs
push
mov
aam
inc
push
cmpsb
push
in
sub
scas
xor
scas
test
xchg
pop
pop
mov
sub
push
inc
jl
xor
mov
fyl2xp1
outsb
insl
jecxz
into
shlb
adc
hlt
pop
xchg
mov
icebp
jb
ror
adc
test
mov
andl
adc
pop
xchg
test
jo
adc
out
stos
mov
adc
imul
jle
adc
adc
pop
in
iret
adc
mov
dec
mov
mov
jno
and
mov
and
pop
lock
add
cmpsb
clc
bnd
sbb
pop
roll
adc
fistl
es
out
leave
push
pop
inc
das
cmc
scas
add
jo
and
jbe
stos
mov
jb
mov
sub
xchg
add
daa
and
xchg
sub
xor
cwtl
je
adc
inc
test
and
fwait
adc
ljmp
mov
adc
cli
xor
les
faddl
stos
adc
enter
and
add
rcll
or
in
divb
hlt
mov
xchg
adc
scas
xlat
dec
adc
fcompl
add
mov
out
inc
daa
fdivs
cli
adc
aas
dec
cltd
adc
icebp
and
hlt
testb
rcrl
xor
dec
cmp
repz
sub
adc
out
dec
adc
xlat
js
fisubrs
stos
jb
pop
inc
aad
pop
scas
into
inc
xchg
outsl
sbb
or
clc
cmp
out
repnz
mov
adc
inc
ss
xchg
cs
out
int
mov
loop
xchg
fsubp
sti
adc
xchg
inc
sbb
je
adc
jnp
sbb
mov
mov
outsl
ljmp
cmp
aaa
adc
clc
addr16
mov
and
insb
das
dec
in
jns
pop
insl
xchg
cmc
inc
lds
and
pop
enter
mov
sbb
sbb
sbb
imul
inc
in
subl
or
filds
scas
out
pop
cmp
pop
adc
lcall
scas
pop
adc
inc
ficoms
add
or
sub
adc
sti
adc
adc
mov
mov
clc
sbb
xchg
push
gs
adc
sbb
imul
adc
pusha
pop
jne
popa
dec
cmpsb
icebp
dec
sbb
and
or
jno
addl
imul
pop
inc
test
nop
int
shll
ret
addr16
xor
fwait
lret
ss
addr16
adc
pusha
mov
stos
in
subl
add
push
push
add
jns
mov
mov
push
mov
xchg
icebp
jbe
pop
out
enter
mov
cmp
imul
mov
adc
pop
out
add
inc
add
js
xchg
jno
imull
hlt
adc
inc
add
add
push
or
sub
adc
popf
subl
pop
adc
jbe
and
mov
stos
in
inc
sbb
xor
push
cmpsl
jb
or
xchg
leave
jl
xor
cmp
rclb
cli
lock
insl
mov
adc
fstp
pop
insb
mov
ficoml
aad
dec
andl
pop
leave
mov
cmovp
jno
xchg
sub
sarb
psraw
or
fwait
jle
adc
add
jmp
adc
jno
mov
add
adc
ds
int3
test
jl
mov
jns
cmp
dec
sub
fildl
pop
mov
sbb
xchg
or
cmp
push
enter
ficoml
imul
xor
lea
loop
out
sbb
adc
jmp
notl
jb
mov
mov
outsb
int
push
lahf
ljmp
mov
fcomip
xchg
divl
adcb
out
pop
pop
push
push
aaa
dec
scas
rclb
and
adc
xor
cmp
scas
add
lret
icebp
jb
add
mov
mov
lcall
roll
xlat
ret
or
lods
fidivrl
push
adc
gs
lret
adc
inc
icebp
xor
jae
xor
popf
xchg
push
push
loope
jns
and
sub
sbb
pop
fcompl
adc
mov
jmp
add
scas
push
hlt
ret
push
sti
adc
pusha
nop
pop
loopne
test
subl
and
fcoms
xor
lds
adc
mov
imul
sub
enter
and
repz
mov
gs
inc
jno
shlb
imul
test
clc
pop
insl
adc
jae
call
test
or
xchg
and
adc
push
or
push
mov
xor
loop
mov
in
lods
mov
push
inc
dec
jl
sub
shr
dec
inc
cmc
jae
mull
testb
cmpb
xchg
in
mov
bound
sbb
stos
mulb
push
adc
or
mov
dec
and
rcll
push
inc
and
pop
pop
testl
add
std
adc
mov
jecxz
lock
lds
or
std
mov
iret
mov
jns
mov
icebp
inc
gs
adc
das
mov
mov
es
repz
rol
dec
mov
enter
movd
in
dec
inc
mov
mov
adc
cmc
lods
add
mov
sbb
inc
xor
lcall
xorl
cmc
nop
jecxz
sbb
pusha
jmp
push
repnz
xchg
or
std
pop
mov
mov
pop
xor
sbb
or
rclb
mov
xchg
aas
adc
bound
fimuls
add
daa
icebp
scas
aaa
mov
dec
cmp
ja
xchg
into
pop
adc
push
dec
aaa
jno
fcompl
pusha
adc
mov
adc
cmpb
add
ljmp
rclb
popf
or
or
adc
sub
repnz
adc
imul
xor
pop
mov
icebp
cmp
cmp
mov
es
and
scas
or
rolb
std
dec
ret
adc
fadds
je
jns
into
or
mov
adc
bound
das
inc
mov
fdivs
mov
push
add
sub
lods
xor
push
inc
or
ret
add
mov
aad
mov
int3
in
stc
loop
icebp
call
xor
dec
les
addb
pop
and
sbb
call
lea
stos
test
adc
movsl
lret
popf
mov
and
and
adc
pop
call
adc
mov
icebp
dec
dec
in
hlt
adc
dec
ss
adc
jae
data16
or
cld
dec
mov
imul
mov
mov
push
sahf
ret
adc
sub
bound
pop
sbb
mov
lret
or
pop
push
jne
jp
cwtl
xchg
xor
cmpsb
lahf
sub
pop
sti
stc
in
mov
stos
jnp
shrb
pop
adc
addr16
push
js
jb
inc
xchg
fiadds
adc
stos
xchg
mov
and
dec
lea
adc
rorb
aaa
xchg
push
pushf
or
adc
dec
fwait
adc
lods
xchg
test
adc
mov
lcall
push
or
inc
xchg
nop
cmp
pop
cld
fisttpl
sbb
add
add
adc
addr16
xchg
xchg
jae
mov
dec
rclb
test
call
cmp
push
lock
xor
arpl
icebp
lret
adc
mov
cltd
dec
sub
mov
bound
push
movsb
xchg
test
and
sub
or
and
cli
stos
adc
jne
xchg
xchg
jle
sti
cmp
sti
mov
icebp
pop
xchg
xchg
stos
push
cmp
mov
push
adc
push
jecxz
bound
loope
sahf
inc
pop
int3
orb
mov
test
mov
lds
sbb
aam
adc
icebp
out
out
rolb
adc
shrb
push
push
adc
inc
call
mov
adc
out
xchg
mov
sub
and
ficomps
inc
fsub
inc
jb
lsl
add
loop
xchg
std
jo
nop
push
cmc
popa
iret
int
loope
das
and
push
adc
mov
adc
psubusw
cwtl
repnz
adc
dec
scas
dec
mov
pop
adc
push
mov
jg
adc
testb
xchg
or
movsl
adc
and
cli
sbbl
cmc
mov
fstl
dec
xor
pop
addb
popa
out
mov
cmpsl
mov
orb
pop
sti
pop
or
loop
into
adc
imul
mov
stos
ficoml
or
ja
dec
add
or
adc
mov
adc
xchg
repz
addl
mov
in
sar
adc
icebp
add
je
loop
mov
jnp
or
pop
rcr
add
pop
insl
mulb
push
mov
enter
and
je
sbb
loopne
adc
stc
mov
aam
adc
adc
scas
jl
cmp
cld
shrl
push
rcr
ret
rolb
adc
and
mov
sbb
adc
movsl
bound
rcrl
nop
xchg
pop
pop
fidivs
mov
popf
cwtl
ljmp
xchg
adc
movsl
in
push
pop
sahf
sbb
adc
lcall
popa
test
inc
stos
sbb
imul
sbb
xor
sti
inc
or
push
or
arpl
lret
pop
cmc
add
jb,pn
xchg
push
test
push
adc
pop
cmp
lret
fs
xchg
or
jno
adc
test
dec
loopne
stos
je
pop
fldcw
push
insb
mov
ret
lcall
push
mov
mov
loope
inc
shrl
fdiv
mov
cmp
dec
lea
int
in
pop
pop
pop
in
add
cli
in
incb
fneni(8087
adc
cmp
clc
adc
mov
adc
and
dec
andl
xchg
wbinvd
aad
adc
fwait
xchg
adc
push
insl
mov
xchg
fwait
ds
cli
mov
cmp
mov
insl
adc
mov
jnp
pop
lret
icebp
jle
sub
adc
lock
lret
push
aam
xor
test
pop
je
jge
or
push
sub
dec
and
sub
or
fisttps
out
test
cld
xor
dec
pop
lods
pop
imul
pop
jmp
adc
cmpsl
inc
pop
dec
xor
cld
aaa
pop
sub
add
jnp
ja
test
jbe
sub
jb
adc
gs
push
adc
xlat
insl
dec
cmp
cmp
jns
sbb
dec
pop
das
dec
mov
xchg
xchg
test
jle
pop
jo
xor
mov
imul
pop
aaa
cld
add
lea
adc
lods
pop
hlt
jg
sub
je
imul
adc
and
into
in
mov
adc
or
mov
add
dec
xchg
hlt
jp
adc
ljmp
repz
pop
pop
rol
and
add
shrl
and
adc
or
push
into
enter
adc
add
pushf
sbbb
mov
loop
movsl
cmpsb
xor
jo
lods
push
into
jbe
popf
repz
adc
shrb
rol
adc
fmul
adc
xchg
aas
push
add
int3
and
add
adc
orl
arpl
pop
mov
idivb
pop
loopne
bound
ja
pop
aad
add
movsl
gs
cmp
dec
sub
mov
adcl
divb
push
aam
or
sbb
dec
rclb
or
stos
add
outsb
adc
push
les
mov
adc
loopne
mov
or
mov
lds
adc
in
lret
and
jb
inc
outsb
repz
pop
push
lods
mov
mov
add
jg
adc
fcoml
sbb
iret
add
cmpsb
sub
adc
hlt
lods
imul
pop
sbb
repz
xor
popa
das
fldt
jb
aaa
sti
and
ror
rorb
push
push
test
imul
adc
jo
xchg
rcl
icebp
mov
jecxz
mov
mov
roll
mov
push
test
nop
and
or
add
pop
or
push
ret
lds
in
mov
xor
xchg
popf
stc
xchg
orl
cs
adc
or
test
bound
sub
lock
lea
in
adc
mov
mov
inc
pop
adc
sbb
mov
jno
int
inc
jg
ror
push
sbbl
and
fsubs
mov
inc
dec
push
add
add
mov
int
test
out
add
das
stc
cmp
test
loop
sub
push
sub
leave
xor
jge
outsb
out
inc
mov
cmpsb
push
adc
mov
push
jb
enter
and
xor
push
mov
mov
push
loope
insl
inc
imul
xchg
bound
test
subl
std
adc
je
mov
les
adc
cmp
sub
and
je
repz
adc
scas
mov
bound
jns
shrl
jbe
and
call
imul
ficoms
adc
adc
pop
sub
pop
or
add
adc
pop
and
jecxz
mov
out
adc
xor
inc
mov
adc
mov
lods
ljmp
pop
add
adc
and
call
std
add
adc
pop
xor
push
out
mov
dec
dec
mov
push
dec
repnz
mov
int3
adc
movd
xor
inc
pop
bound
insl
push
adc
push
xchg
stc
popa
adc
pop
je
cmpsl
xchg
fadd
adc
out
jnp
adc
lret
pusha
popw
fbstp
repnz
fcoml
aam
xlat
and
roll
push
iret
inc
xlat
jnp
mov
cli
lods
adc
sub
mov
inc
jg
pop
popf
add
es
sub
jl
movsl
rcl
imul
inc
or
fcoml
sbb
sbb
dec
test
mov
stos
shl
adc
and
mov
pop
fimull
xchg
or
sub
icebp
les
add
sub
lods
or
cmp
out
xor
cwtl
dec
xchg
enter
mov
cmc
pop
add
mov
mov
push
xchg
xor
mov
movsb
sub
fnstenv
adc
pusha
and
cmp
out
scas
fs
mov
mov
pop
inc
jnp
adc
icebp
mov
xor
adc
pop
fdivrl
mov
and
and
push
jne
add
push
adc
into
mov
outsl
adc
and
xchg
jle
adc
push
sti
fists
jg
subb
cs
sbb
adc
lahf
stc
jns
push
aas
adc
xchg
fs
lret
mov
aad
mov
mov
xchg
mov
mov
adc
ja
lea
mov
fs
xor
jo
out
ja
adc
xor
cli
adc
aaa
lahf
fsts
jge
jp
mov
ficoml
push
sub
pop
mov
cltd
cmpl
popf
jg
icebp
mov
mov
cmp
roll
inc
adc
jo
adc
adc
push
pop
pop
inc
or
or
stc
mov
adc
fdivrp
xchg
je
adc
push
scas
push
push
xchg
lds
in
pop
mov
in
pop
sbb
test
pop
int3
adc
pop
lea
mov
dec
into
stc
sub
xchg
idivb
fwait
adc
lret
gs
xchg
dec
cmpsl
aas
je
out
push
adc
xchg
daa
push
test
sbb
insb
add
xor
lods
sti
lods
adc
and
jg
mov
hlt
dec
cmp
test
pop
ss
sbb
fwait
arpl
mov
out
lcall
pop
mov
adc
mov
loope
loop
inc
sbb
and
daa
rorb
mov
cmpsb
sbb
sub
addr16
xchg
xchg
xchg
add
adc
fs
lret
dec
fisubrl
sub
popf
push
sub
cmp
dec
ficomps
sub
dec
pop
lock
jge
push
mov
adc
es
rorb
mov
and
push
sbb
fiaddl
or
adc
fdiv
inc
inc
imul
pop
pop
or
out
xchg
shrb
fs
push
scas
pop
pop
pop
popa
adc
fsubrp
jecxz
jno
cmp
enter
push
pop
mov
imul
adc
mov
sbb
lock
sub
adc
aaa
jno
sbb
pop
cmp
imull
mov
rcrl
push
adc
sub
sbb
adc
mov
stos
xor
dec
pop
adc
sub
and
xchg
aad
mov
adc
insl
and
lods
sbb
adc
fidivl
sub
pop
or
bound
out
jmp
out
adc
dec
pushf
mull
je
push
adc
mov
call
adc
clc
mov
insb
dec
mov
xor
sbb
adc
push
int3
fcmovbe
sbb
pusha
mov
lock
mov
in
or
push
pusha
or
push
push
mov
out
and
xchg
xchg
leave
dec
push
jle
jl
lea
aas
clc
fdivrl
adc
or
packsswb
outsb
sub
test
xor
popf
adc
inc
mov
mov
xchg
jae
fmull
out
pusha
pop
mov
adc
mov
sub
rsqrtps
and
mov
les
in
xor
push
loop
add
or
call
sbb
pop
adc
gs
push
and
push
adc
or
dec
jbe
test
hlt
mov
jno
dec
ss
cli
jnp
jecxz
jns
push
dec
gs
insl
sti
xor
out
sub
push
out
dec
repnz
xchg
neg
adc
bound
enter
movsl
jle
ficoms
cmp
xchg
inc
lock
mov
gs
dec
cmpl
sti
dec
enter
xchg
stos
into
adc
push
push
and
push
das
pop
mov
or
jp
das
dec
out
xlat
push
sar
scas
arpl
inc
roll
mov
repz
icebp
inc
insb
adc
in
daa
orl
frstor
fs
push
mov
xchg
fldl
lcall
adc
repnz
mov
or
xchg
push
ja
fnstsw
push
and
pop
sbb
adc
fwait
sbb
shll
or
clc
dec
xor
jmp
cmp
test
and
push
cmp
clc
inc
adc
clc
lret
rorl
jg
fwait
and
adc
scas
jb
hlt
das
push
xchg
add
bound
mov
sbb
cwtl
and
mov
loop
sub
pushf
push
es
mov
loope
pop
js
movl
adc
and
pop
mov
loop
mov
dec
sahf
rcrl
ja
jno
not
stc
dec
and
sbb
xorl
or
popa
and
hlt
in
mov
add
xchg
in
cli
je
in
inc
dec
or
and
loop
int3
mov
mov
testb
fstl
push
ljmp
mov
cmp
hlt
jp
jae
negb
rcll
icebp
inc
mov
push
and
mov
jl
mov
xchg
push
cmpsl
inc
sbb
sahf
adc
xlat
in
das
mov
sub
sbb
add
in
add
add
gs
inc
and
adc
push
loop
and
xchg
shll
out
lea
mov
sbb
adc
cpuid
xchg
dec
ret
dec
rcll
ss
adc
or
jnp
mov
cmp
fstpl
das
xchg
jl
out
pop
sbb
sub
bound
and
cmp
xchg
stc
mov
and
dec
lods
mov
xorb
loop
test
test
movsl
xor
test
addr16
mov
daa
das
mov
daa
jg
add
pop
shld
lcall
pop
inc
or
movsl
adc
push
adc
std
lahf
sub
mov
test
mov
int
pop
cmpsl
sub
mov
inc
test
push
mov
pushf
push
or
je
lret
loope
shll
test
xchg
cltd
jb
pop
sbb
sbb
rcll
mov
and
mov
and
lret
pop
lcall
sbb
xchg
push
icebp
inc
test
xchg
mov
xorb
cmp
in
icebp
es
jns
cwtl
lret
cmp
xchg
xchg
jns
lahf
roll
popf
pop
sbb
inc
mov
mov
mov
cmp
sarl
mov
sbb
popf
jbe
sbb
ret
add
stos
loope
adc
push
mov
inc
mov
xchg
xor
popf
ljmp
pop
push
xor
inc
xorl
and
mov
xchg
dec
mov
push
icebp
xchg
jns
pop
push
xor
and
js
xchg
add
test
and
mov
or
mov
xor
repz
and
and
inc
xchg
ja
xchg
add
imul
pop
sbb
xor
sbb
sub
xchg
xor
mov
ret
push
pop
add
rcr
adc
pop
xor
push
push
xorb
jb
mov
mov
shr
divb
shll
fisubrl
pop
pop
push
xchg
push
ret
mov
and
icebp
fnsave
sbb
xchg
popf
push
push
mov
ljmp
pop
ljmp
mov
fisubs
add
adc
test
rclb
fdivrl
and
xchg
mov
mov
mov
adc
call
inc
adc
loop
xor
lds
cmp
sbb
sub
roll
xchg
sub
stc
or
and
inc
jno
xchg
jns
and
pushf
andl
pop
sarl
xchg
popa
jnp
sti
adc
loope
add
push
scas
lcall
xchg
cmpsl
sbb
stos
lret
mov
aas
sti
and
jecxz
shlb
in
es
cmp
mov
mov
push
aad
and
adc
lret
xor
mov
int
inc
in
imul
rep
and
xchg
loope
js
push
mov
fs
cltd
bound
dec
fnstenv
test
lahf
and
in
adc
pop
fstl
sti
jmp
inc
mov
mov
push
popf
pop
cmp
and
pop
inc
imul
sbb
data16
stos
pop
in
imul
cli
jbe
push
in
in
aaa
ret
outsl
outsb
push
and
mov
cltd
loop
mov
out
pop
in
iret
mov
xchg
mov
mov
mov
sub
jo
and
sub
sbb
push
inc
movsl
ja
xchg
shll
ds
adc
mov
mov
add
ljmp
das
xchg
js
or
mov
sub
adc
adc
sbb
jb
into
ror
and
int
mov
ret
mov
pop
and
aad
jno
cwtl
xchg
das
xchg
mov
dec
jns
xor
arpl
jp
aam
int3
jns
jae
incl
push
loop
je
cmp
divl
mov
xchg
xor
aas
lret
sub
pop
mov
imul
es
adc
cld
sbb
xor
mov
mov
pop
insl
and
sbb
pop
inc
out
fs
mov
ret
cltd
loope
add
cmpsb
loop
dec
mov
or
adc
loopne
icebp
addr16
sahf
and
inc
iret
adc
arpl
mov
repnz
push
mov
and
out
sbb
movsl
mov
mov
adc
loope
mov
xchg
bound
sbb
and
pop
xor
mov
aaa
xchg
movsb
cmc
xchg
add
sbb
mov
loope
bound
mov
pop
sub
inc
frstor
jmp
push
pushf
mov
cmpsb
mov
cltd
hlt
add
mov
repnz
mov
and
or
xchg
push
fisubs
pop
in
fcomip
inc
cmp
rorl
ficoml
sub
mov
mov
and
push
imul
loop
fmuls
mov
push
shlb
loop
sub
jle
adc
xchg
dec
cwtl
push
adc
or
loop
mov
pusha
mov
jp
and
mov
insl
jle
and
push
insb
add
sbb
jecxz
mov
pop
lcall
mov
or
adc
sbb
push
push
fcmovnb
add
imul
pop
rorb
shrl
cmp
sub
jecxz
es
fucom
dec
ja
mov
shll
lds
movsl
xchg
in
and
aas
push
test
pop
xchg
mulb
cld
cli
das
push
xchg
mov
sbb
xor
bound
loope
push
jne
outsl
jno
cmp
sarl
add
out
mov
fstpl
addl
jle
mov
movsl
das
js
mov
push
daa
std
add
cmp
jmp
loope
xor
in
pop
xor
mov
jae
cmp
cmp
add
sti
mov
xchg
pop
mov
xor
jns
mov
or
mov
mov
and
inc
jno
inc
push
das
shlb
add
clc
es
in
adc
stos
jns
das
sbb
popf
stc
inc
push
in
pop
clc
cmp
push
fsubr
dec
cmp
setbe
in
jnp
fwait
push
xchg
and
ss
fs
lret
and
push
mov
or
and
xor
mov
pop
fsubrl
xchg
mov
shlb
aas
sub
std
sub
sub
fdivp
push
insl
loope
cltd
rol
pop
jecxz
aaa
push
push
pop
adc
xor
int
xchg
imul
xor
scas
jne
insl
imul
mov
insl
sub
std
adc
insl
pop
inc
daa
xor
sbb
insb
jbe
icebp
ds
cmp
mov
pop
push
es
sbb
cmp
pop
mov
sbb
cmp
inc
cmpsl
push
mov
mov
arpl
orb
mov
xchg
pop
jbe
xchg
idiv
into
sub
out
mov
xchg
daa
and
rcll
aaa
dec
je
imul
and
mov
adc
jbe
xlat
loop
mov
lods
test
mov
pushf
mov
pop
outsl
xor
sub
xchg
movsl
xor
sub
fnclex
jnp
dec
ljmp
and
xchg
test
mov
and
mov
dec
or
add
jp
pop
fcmovnb
mov
fidivrs
sahf
mov
dec
loope
shlb
scas
mov
cmp
outsl
daa
mov
inc
mov
popa
ret
out
push
mov
jno
mov
sahf
adc
cmpsb
mov
flds
xchg
rorl
cmpsl
cwtl
push
cmp
mov
inc
push
jecxz
mov
scas
push
into
popa
adc
xchg
sbb
xchg
in
insl
pop
inc
fcompl
in
lcall
out
xor
adc
fsubr
mov
mov
adc
jle
enter
cmpsl
xor
add
xchg
cmp
mov
or
popa
ficoml
sbb
push
and
pop
sbb
lret
sbb
cmpsb
pop
in
fsubrs
cmp
ret
and
sahf
ret
inc
rorl
mov
int
mov
iret
dec
xchg
hlt
xor
mov
std
loope
in
into
cmpsl
xchg
pop
popaw
ret
add
and
adcb
sub
orb
sbb
loope
inc
and
cmp
add
ljmp
xchg
xchg
cltd
adc
sbb
addr16
add
inc
sub
jmp
push
pop
dec
insl
in
popf
dec
repnz
arpl
cmp
cli
and
fstl
sarb
dec
sbb
loop
and
mov
arpl
leave
rcrl
in
shll
sub
sbb
mov
aad
int
mov
pop
jnp
jecxz
lret
lret
and
stos
or
sub
xchg
adc
flds
imul
pop
loop
xor
and
out
and
out
lods
ds
sbb
cmp
push
cwtl
sbb
sub
pop
xor
je
aaa
push
iret
fsubrl
fs
jae
pop
test
pop
mov
jbe
outsb
push
lock
push
mov
fwait
xor
cld
xchg
sbb
mov
sbb
ret
jnp
pop
insb
pop
daa
add
xor
imul
sub
ss
and
js
lods
adc
int3
sbb
adc
ds
pop
test
ds
and
xchg
mov
or
call
adc
test
mul
sub
rorl
xchg
leave
jb
dec
subl
mov
jae
mov
imul
ficoms
pop
pop
mov
hlt
daa
gs
inc
ja
repnz
fdivrs
adc
jge
ljmp
inc
jmp
mov
pop
mov
insb
xor
popf
dec
xor
in
mov
mov
out
int3
push
xchg
cld
shll
jns
fiadds
popf
fstpl
dec
push
jo
jl
push
leave
in
inc
movsb
rcll
xchg
xchg
cmpsl
loope
add
or
gs
xchg
dec
xor
mov
xor
sub
in
test
mov
mov
cmp
adc
enter
mov
cs
stos
adc
adc
ficoml
negl
rcrl
add
test
push
shlb
cmpsl
jbe
sbb
inc
xchg
mov
and
mov
and
mov
cmp
push
push
ret
jg
in
jecxz
add
flds
inc
cwtl
lcall
add
or
imul
gs
rcll
or
and
cmp
add
mov
and
scas
loop
add
and
or
test
stos
sub
sahf
add
dec
xor
out
jno
mov
lock
or
push
movsb
clc
dec
ret
loop
sbb
out
adc
and
jmp
adc
inc
push
enter
mov
pop
and
xor
pop
jae
push
push
mov
sbb
ret
in
rolb
aad
add
adc
xor
mov
xchg
nop
loope
fdiv
sub
push
cmp
jecxz
test
and
pop
and
and
es
in
inc
fistpll
mov
fcompl
pop
bound
cpuid
sbb
fldl
scas
mov
mov
loope
bound
xchg
add
repnz
xor
negb
cmp
lret
adc
mov
outsb
cld
popa
cwtl
adc
sbb
or
cmc
pusha
mov
test
stos
push
pushf
test
mov
sub
clc
repnz
hlt
lret
push
movsl
es
cmp
jb
cmp
sub
daa
mov
fcoml
cmp
imul
mov
add
test
push
pop
pop
rolb
dec
xchg
push
or
xor
pop
daa
mov
test
mov
sub
rcll
fstpl
sub
mov
adcb
inc
mov
mov
icebp
pop
adc
add
ds
pop
xchg
call
mov
xchg
mov
stos
les
das
pop
sarb
xchg
cld
mov
and
sbb
test
add
popa
cld
cli
pop
pop
in
inc
loop
mov
xor
and
jecxz
imul
aaa
xchg
cli
insb
jae
cmpsb
mov
and
lahf
adc
pop
pop
cmp
add
scas
aaa
push
scas
adc
addl
dec
cwtl
out
in
xor
es
add
push
cld
rcll
inc
xlat
and
int3
lea
stos
push
inc
pop
loop
mov
adc
loopne
jg
out
and
scas
push
mov
sti
mov
ret
add
push
mov
out
xchg
mov
mov
fsubs
or
mov
xchg
xchg
aas
fcoms
xchg
or
jb
add
shll
inc
sbb
mov
push
loope
adc
fidivs
cltd
aam
and
xchg
lcall
loop
fwait
adc
and
adc
dec
mov
test
mov
imulb
jae
jmp
stos
movsl
imul
push
inc
roll
push
and
push
sub
sub
fisubrs
imul
test
call
or
lods
std
cmpsl
shlb
dec
addl
xchg
repnz
adc
test
cmp
jle
mov
pop
dec
mov
and
mov
jle
loope
jge
fsubp
sub
inc
inc
mov
xchg
andb
push
pop
loop
andb
pop
sbb
fnsave
ss
adc
negb
nop
imul
jae
sub
movsl
out
mov
fnsave
and
inc
fwait
jl
mov
push
and
daa
loop
cmove
xchg
in
test
aaa
sub
aaa
and
sbb
sti
jns
popf
fsubl
popa
mov
mov
sub
jp
loope
pop
add
aam
pop
xchg
xchg
and
pop
xchg
out
in
inc
dec
loop
rcll
mov
dec
dec
fwait
test
gs
repz
pop
and
imul
call
andl
mov
rcll
in
dec
lret
mov
mov
inc
stc
and
inc
xor
test
mov
cmp
and
inc
icebp
cmpsl
pop
adc
lret
outsl
xchg
mov
sub
inc
xor
and
cmp
aad
pop
popf
ret
mov
loop
adc
movsl
xchg
xchg
push
add
movsb
cwtl
arpl
xchg
arpl
outsl
out
mov
mov
pop
insl
lcall
dec
cmp
xchg
push
inc
fldt
cwtl
jns
ja
aad
sbb
mov
or
pop
mov
rcll
mov
lea
sbb
repnz
sbb
dec
mov
fwait
xor
shll
add
push
inc
push
mov
xchg
daa
fwait
cli
roll
rorl
popf
sub
imul
loope
test
test
jae
dec
and
in
jnp
in
xor
or
loope
xor
and
inc
mov
shrb
lcall
jns
jno
mov
xor
sub
inc
add
and
popa
daa
or
adc
inc
xor
les
add
sti
mov
daa
jns
adc
xchg
enter
sti
sub
inc
mov
cmpb
mov
pop
sub
loope
push
data16
or
fs
jns
ret
in
cmp
stc
mov
cmp
insl
push
outsb
rcrl
cmpsl
ss
mov
pop
xchg
fbstp
sub
les
lcall
xor
or
sbb
sub
lods
and
push
orb
push
mov
or
lds
xchg
pop
shrb
ret
xchg
into
lds
sbb
mov
daa
cmc
les
cwtl
movb
bound
xchg
inc
daa
mov
jae
pop
loope
dec
xor
out
cld
loop
sbb
push
xor
mov
insl
adc
adc
push
mov
movsb
mov
outsb
sbb
ss
nop
adc
adc
dec
sahf
lcall
fadd
xor
sub
testb
dec
cmp
ret
loope
enter
das
pop
mov
movsb
aad
jp
arpl
mov
outsl
mov
inc
insb
lods
stos
mov
xchg
out
inc
jno
sbb
mov
and
nop
adc
loop
stc
aaa
shll
out
hlt
fucomi
idivl
das
sbb
ficomps
jno
mov
out
iret
lgs
adc
mov
dec
xlat
xorl
cmp
jmp
pop
enter
push
imul
pop
pop
out
insb
repnz
mov
sbb
loop
in
or
cli
inc
pop
xchg
sbb
add
sbb
rclb
lods
jle
test
imul
imul
stc
pop
js
push
dec
and
push
cmp
lds
jne
sti
pop
sbb
jecxz
adcb
mov
subl
movsl
int
mov
inc
fwait
cmp
adc
mov
pop
pop
and
or
lods
daa
mov
mov
addl
dec
cmp
arpl
pop
pushf
jnp
stos
shll
pop
mov
sub
xor
outsb
pop
test
fucom
pop
sub
xor
and
sbb
jno
pop
les
fistpl
push
daa
test
ror
add
inc
iret
and
dec
repnz
gs
or
adc
cmpsb
repz
cmp
sub
ds
ja
aas
fildl
jae
dec
shll
xchg
pop
and
sub
mov
jnp
and
sti
xchg
in
mov
loope
push
and
ljmp
stos
loop
cmpsl
cltd
and
xchg
and
inc
jecxz
ficomps
push
lcall
add
out
mov
shrb
das
jp
addl
loopne
rclb
mov
arpl
sbb
or
add
xor
repz
imul
test
and
pop
xchg
iret
pop
aad
adc
xchg
adc
movsl
cmp
adc
sbb
stc
addl
mov
in
or
inc
movsb
repnz
xor
and
sbb
les
and
out
or
fadds
dec
sub
les
push
icebp
cmpsl
push
cwtl
adc
sete
mov
adc
enter
and
subb
or
call
mov
cli
cmp
dec
jns
es
aad
adc
pop
repz
insl
adc
mov
jp
sahf
imul
ljmp
popa
in
popl
pop
mov
adc
movsb
pop
mov
vmovdqa
les
xchg
pop
adc
xchg
movsb
mov
and
out
push
sbb
int
sub
jo
mov
dec
lds
jno
dec
mov
pop
inc
xchg
and
and
das
ljmp
lock
lea
jb
push
popa
jge
sbb
lcall
notb
lds
in
rclb
mov
lret
push
mov
cmpsl
xchg
in
rcrb
loopne
enter
push
clc
cmc
and
adc
mov
mov
pop
cmpsb
es
mov
pop
inc
in
add
dec
jae
xchg
shlb
fsubrs
dec
inc
jbe
fsubs
pop
mov
test
inc
dec
mov
pop
mov
sahf
xor
out
adc
loope
sub
xchg
push
mov
orps
xor
leave
outsb
jae
aam
push
ss
pop
sbb
pop
xor
adc
cwtl
add
jmp
lods
idivb
test
sbb
lahf
sub
push
stos
data16
cmp
lock
add
sbb
fsubp
ret
and
popf
adc
clc
cmp
jo
popf
lret
add
ret
lret
repnz
aas
mov
xor
rep
sub
jecxz
push
mov
enter
outsl
adc
movsl
dec
jne
ret
outsb
mov
pop
bound
roll
std
mov
jne
cmc
ss
xor
jmp
lds
mov
nop
int
mov
sbb
add
movsl
mov
shll
push
cs
adc
mov
rcl
loop
jbe
retw
adc
cmp
inc
daa
loop
push
inc
stos
mov
cmp
insb
cmpsl
int
leave
shlb
leave
fcompl
pop
mov
mov
xchg
push
pop
test
ss
sbb
aam
ss
repnz
sarb
mov
mov
inc
mov
cs
or
fcmovnb
adc
shll
ret
dec
negb
add
test
mov
inc
push
jecxz
mov
ss
int3
fidivl
js
pop
movups
mov
mov
cwtl
pushf
jno
xchg
adc
add
and
rcll
xchg
fs
sub
pop
lea
pop
adc
aam
pop
in
rcl
setp
loope
test
and
mov
lea
mov
pop
mov
add
mov
out
imul
dec
shrl
sarb
inc
loop
lods
jns
pop
jne
stc
imul
lcall
pop
xor
mov
pop
loop
xchg
mov
xor
xchg
add
subb
pop
mov
sahf
xchg
fwait
push
call
xchg
les
xor
inc
cwtl
lea
roll
mov
mov
pop
imull
adc
das
mov
xchg
ljmp
ret
add
loope
andl
sub
mov
inc
int
shrl
adc
push
dec
mov
test
xchg
lahf
and
cmc
jg
mov
jp
clc
out
pop
icebp
cltd
mov
or
js
jae
sub
mov
stc
xchg
push
cmpsb
mov
loop
xor
jge
test
popf
stos
dec
and
sub
popf
xchg
dec
loop
pop
adc
decl
xor
test
adc
and
cmc
test
jo
gs
pop
pop
aas
cmpsb
dec
dec
xchg
xchg
cmp
daa
push
inc
xchg
dec
dec
popa
jno
xchg
out
fldenv
std
mov
stos
insl
lcall
shll
sbb
rolb
cmpsl
and
mov
pop
dec
inc
inc
or
int3
fimuls
out
xor
dec
xchg
push
adc
xor
insb
or
mov
loop
adcb
shll
in
lods
pop
cmp
xor
ss
mov
pusha
inc
push
popa
push
fxam
sub
push
cmp
jbe
and
push
mov
mov
mov
jo
ficoms
xor
inc
in
call
jmp
roll
in
lods
pop
push
mov
adc
jp
adc
sub
sti
dec
push
sbb
popf
push
fsts
clc
and
push
sub
and
xchg
pop
mov
push
verw
jne
inc
orb
int3
out
mov
push
add
lea
and
inc
test
jne
mov
jbe
or
dec
xor
and
inc
and
xchg
push
fsubrp
cmc
ffree
mov
adc
dec
jl
dec
lret
dec
cmp
test
pop
cmp
inc
aaa
mov
mov
and
push
jmp
sahf
cmp
mov
in
adc
out
sbb
shrl
push
mov
lods
adc
inc
test
mov
cltd
jmp
popl
add
mov
cmc
movsl
rcll
popa
mov
and
add
adc
jb
leave
push
add
adc
mov
xor
and
int3
cmp
push
sbb
and
xchg
push
jmp
xor
mov
popa
mov
or
in
mov
stos
mov
enter
in
mov
jmp
ljmp
out
push
adc
sbb
aas
add
dec
push
fs
mov
cltd
iret
ficompl
xchg
and
push
and
bound
mov
adc
mov
fidivrs
dec
mov
cmpl
xchg
inc
mov
xchg
cmp
sti
icebp
mov
inc
pusha
cmp
jae
mov
enter
push
jns
aad
mov
sbb
fmuls
pop
out
adcl
sbb
push
and
adc
loop
sbb
jbe
pop
nop
push
movsl
mov
jbe
mov
push
add
xor
lds
das
aam
sahf
mov
xchg
add
lret
pop
xchg
movsl
and
cmp
adc
sub
gs
sbb
pop
fstl
sbb
sbb
mov
lret
fsubr
cltd
inc
adc
repnz
pop
fnstcw
sbb
jp
xchg
pop
cwtl
jmpw
adc
ds
cmc
movsl
xchg
sub
outsl
jno
in
mov
adc
sbb
das
inc
int
ss
cmpsb
into
mov
cmpl
pop
mov
dec
sbb
sub
jbe
pushf
fldenv
xchg
xchg
mov
push
cmp
sahf
pop
dec
aas
dec
leave
xchg
push
scas
scas
inc
loop
mov
cwtl
adc
out
push
mov
pop
pop
mov
inc
je
shrl
pop
add
adc
xor
adc
movsl
sahf
and
mov
mov
subl
xor
pop
cmp
sub
xchg
dec
rclb
pop
jb
or
adc
adc
shll
iret
push
pop
jecxz
push
adc
mov
insl
dec
push
xchg
and
arpl
sbb
cmp
scas
xchg
loope
dec
dec
cmp
xchg
inc
inc
mov
adc
cmp
aaa
nop
and
ja
cmpsl
mov
pop
mov
stc
nop
jle
adc
inc
sub
lret
and
daa
pushf
sub
cmp
imul
mov
adc
jg
leave
mov
mov
movsl
out
gs
nop
aaa
fmull
sub
cmp
je
ret
mov
pusha
hlt
insl
adc
fs
in
bound
mov
loop
notb
in
jno
mov
lods
sahf
adc
es
mov
mov
negb
pop
push
inc
iret
das
aaa
sbb
roll
xor
test
stos
lahf
dec
scas
sbb
clc
lea
dec
cmp
cld
and
push
int3
xor
mov
push
sub
xchg
movsl
mov
arpl
fsubrl
or
xchg
sub
xor
mov
repz
inc
pop
in
shrl
dec
cmp
push
cmpsb
pop
sbb
cli
inc
shll
cmp
insb
mov
rorl
ret
pushf
outsl
xchg
xor
popl
imul
fcmove
fldenv
dec
cmc
push
loop
scas
push
ret
mov
test
inc
and
testb
sbb
and
ret
xchg
subl
dec
int
test
jns
icebp
lds
jb
or
mov
mov
xchg
cmp
repnz
jno
jb
out
shl
shrb
mov
jno
cltd
adc
sbb
and
popa
mov
xchg
movsl
mov
test
xchg
pop
lahf
hlt
mov
das
cs
or
ret
cmp
mov
cmpsb
xor
cld
orb
adc
imul
mov
cmp
adc
cld
sub
test
in
sbb
shll
xor
leave
sbb
idivb
xchg
adc
add
lock
sbb
pop
inc
push
sbb
mov
or
push
cmp
mov
adc
inc
jg
jmp
mov
dec
sbb
loop
dec
rolb
imulb
sub
dec
out
cmpsb
imul
adc
cmp
xor
shll
lret
adc
daa
sbb
cmp
sbb
adc
fists
test
gs
xchg
mov
mov
cwtl
pop
jecxz,pt
xchg
sbb
xor
pop
jb
ss
nop
mov
test
jle
push
mov
or
mov
in
sahf
adc
xchg
mov
loop
roll
movsb
popf
push
xchg
inc
mov
and
leave
pop
add
xor
pop
mov
jo
push
fcmovb
xor
push
in
in
movsb
mov
sub
mov
mov
icebp
test
popf
repz
pop
je
adc
fdivrs
xchg
ret
xchg
loope
sbbb
pop
test
loop
sub
pop
sub
jbe
test
xor
mov
daa
mov
xchg
inc
pop
and
lea
cmp
mov
xchg
loope
es
pop
xchg
cmp
arpl
mov
add
cmp
inc
pop
xor
daa
ret
mov
je
mov
and
push
mov
fadds
sub
insb
sti
cmpsl
dec
xlat
mov
jg
ficoms
xchg
mov
subl
hlt
xor
mov
mov
add
cli
int
pop
fisttpll
adcb
push
addr16
pop
call
loope
jle
sub
dec
xlat
scas
add
dec
sbb
ds
and
and
mov
cmp
mov
adcb
jmp
jno
mov
leave
pop
mov
pop
pop
out
push
sub
sbb
les
cmp
mov
lret
inc
daa
in
mov
sbb
xor
sbbl
cmp
xor
aam
and
sbb
ja
decb
insl
stos
in
inc
sar
sub
sub
pop
mov
test
loope
outsl
xor
in
pusha
mov
sbb
and
or
xor
xchg
imul
xchg
xchg
leave
sbb
pop
jmp
xchg
sub
sub
pop
das
aad
daa
loop
out
pop
or
daa
test
lods
shlb
jo
arpl
imul
pop
lcall
in
setno
mov
movsl
shl
mov
movsl
mov
sti
fists
push
adc
jbe
adc
lea
lret
sbb
fcmove
ss
mov
pop
loop
aam
mov
push
or
mov
push
cmpsl
inc
out
test
cmp
sarb
daa
shl
or
arpl
push
out
dec
in
inc
jb
mov
cmpsb
imul
mov
das
inc
sub
mov
data16
sbbl
jg
cmp
and
cmp
fmulp
pushf
xor
rcrl
loop
std
push
shll
push
mov
in
je
xor
push
xor
pop
cmpsb
sub
in
or
mov
inc
mov
stc
jae
out
mov
js
imul
xlat
es
xchg
jns
xor
cmpsb
loop
push
subl
sahf
xchg
xsha1
cmpsb
int3
cmp
mov
fs
mov
aas
adc
inc
xchg
ja
sub
cmp
and
iret
rol
aam
dec
negl
mov
push
mov
out
shll
in
push
fisttpll
adc
push
xchg
add
mov
and
out
cmp
in
in
mov
cmpl
mov
fstps
mov
shlb
xchg
mov
sbb
adc
add
aad
xchg
sub
or
and
push
fiaddl
out
call
mov
cmp
jae
mov
ss
sbb
adc
dec
adcl
dec
popf
test
loope
out
jnp
push
jne
mov
test
xor
push
ss
test
mov
inc
jmp
loope
xor
repnz
mov
xor
xchg
cltd
dec
test
loope
cmp
add
imul
xchg
ret
das
or
lcall
add
sbb
mov
test
in
adc
out
and
iret
shll
lds
xchg
lds
mov
sahf
bound
outsb
xor
daa
jp
call
and
mov
push
or
push
xchg
leavew
pop
xchg
mov
mov
xor
push
push
inc
in
cmc
push
nop
fisubs
insb
xor
inc
fisubs
pop
xchg
cmpsl
inc
mov
jno
mov
add
stos
jo
dec
ss
pop
outsb
sbb
and
lahf
dec
and
into
inc
in
xor
push
jle
inc
xchg
and
xor
movsb
inc
aaa
mov
add
push
test
mov
mov
ret
jno
scas
sub
and
out
sbb
jno
lahf
xchg
nop
push
mov
in
cmp
push
and
gs
jmp
fiaddl
cmp
in
les
fidivs
cmp
push
mov
xor
pop
sbb
push
xor
inc
loopne
lret
fcomip
stos
andb
ret
sbb
cmp
adc
in
jb
dec
sbb
loopne
fcoml
add
je
das
adc
vaddps
lds
and
sub
imul
xor
push
sub
xor
sbb
call
gs
dec
shll
mov
mov
out
jle
test
lea
jns
je
fs
pop
push
sbb
pop
divl
insl
xchg
mov
ret
mov
xor
inc
loop
outsl
mov
es
sub
lods
mov
pop
addl
outsl
dec
into
imul
pop
xchg
out
cmp
ljmp
jne
loop
or
nop
dec
jle
lret
sbb
push
repnz
mov
inc
sub
shr
adc
stc
shlb
push
movsl
inc
lcall
adc
in
repz
in
iret
jno
imul
lcall
aaa
int3
push
sbb
stos
push
inc
lock
xor
xor
popf
sub
sbb
out
adc
ss
mov
sbb
push
mov
jge,pn
sbb
repz
sub
pop
pop
call
and
aaa
cmp
add
jnp
rorb
xchg
test
mov
push
and
inc
popa
ds
push
adc
xchg
mov
sarl
mov
imull
jae
loop
data16
sub
aad
jns
and
or
movsl
adc
loop
scas
jl
fisttps
rcrl
orl
popa
mov
mov
mov
sub
jo
test
add
in
testb
xor
lret
mov
rolb
xchg
lods
dec
xchg
es
iret
push
mov
mov
sub
insl
jno
loope
and
scas
xchg
sub
sub
in
pop
fldcw
repz
sub
adc
adc
push
pop
int3
mov
inc
mov
int3
mov
mov
cmp
mov
mov
mov
mov
pop
insl
shrl
and
pop
testl
out
xor
movswl
mov
outsl
jg
fildll
daa
mov
in
mov
inc
adc
fistl
fidivs
ds
test
es
dec
xlat
mov
inc
lods
mov
es
subl
adcl
loope
mov
mov
xchg
mov
pop
call
and
in
fs
mov
andl
bound
sub
inc
aad
lods
das
adc
mov
cmp
loope
xor
daa
ret
pop
mov
in
lret
dec
push
imull
xchg
mov
loope
inc
insb
and
mov
pop
adc
je
inc
or
cmp
xchg
inc
popa
aaa
sub
sti
xchg
pop
sub
xchg
ss
sahf
dec
xor
inc
sbbb
xor
sbb
adcb
or
out
mov
lods
dec
cmpxchg
push
ror
adc
shrl
cmpsb
adc
imul
mov
stos
jne
sub
pop
mov
or
mov
fldcw
adc
lods
loop
imul
repz
stos
sub
sbb
pop
aam
push
iret
mov
cmp
pop
fnsave
jo
mov
and
add
mov
in
movsl
jo
mov
stc
sbb
pop
sub
mov
cs
jg
vminss
lahf
sbb
movsb
ficoms
push
inc
inc
mov
inc
sub
repz
inc
cmp
adc
and
cltd
lret
cmp
mov
adc
call
shlb
aaa
aad
fisttpll
stos
cld
sbb
nop
ret
in
test
scas
inc
pop
xchg
les
push
clc
insl
ljmp
gs
call
adc
push
loop
jbe
nop
adc
xchg
cmpsb
call
cltd
test
adc
xchg
cmp
loop
insb
cltd
inc
icebp
ss
xlat
mov
bound
int
rolb
test
adc
stos
loope
in
adc
movsl
cmp
pop
sub
sbb
xor
lods
cwtl
inc
and
cmp
mov
pop
aas
and
loop
dec
jecxz
or
or
test
push
jnp
fadds
pushf
mov
flds
orb
cwtl
mov
inc
cmp
jns
push
xor
pop
cmp
shll
pop
adc
xchg
adc
dec
hlt
imul
mov
test
pop
inc
mov
dec
out
lds
aam
push
fnsetpm(287
fstpt
mov
jno
push
in
sahf
xchg
xor
test
imul
in
dec
daa
mov
loop
add
adcb
mov
push
lret
shll
dec
adc
adc
mov
xchg
lcall
sbb
stc
notl
adc
jmp
pop
jno
lcall
dec
inc
xchg
xchg
and
sbb
jns
inc
cmp
fdivp
adc
loope
pop
add
inc
jb
rcr
ret
inc
cmp
lret
sub
bts
in
scas
stc
call
test
and
loopne
lods
or
pop
cmp
jmp
xor
outsl
fistpl
out
adc
jo
adc
pop
pop
sub
mov
adc
xor
mov
gs
dec
fwait
push
stos
mov
aas
and
fstpt
ss
leave
jne
inc
popa
sarl
xchg
pop
inc
roll
inc
mov
movsl
imul
roll
fnstcw
and
xchg
imul
std
adc
add
jmp
adc
push
sbb
inc
sbb
sbb
test
testl
push
ljmp
mov
and
cmpsl
cmp
sbbb
and
adc
pop
js
mov
or
xor
fisubl
rcll
xchg
ds
andl
das
and
out
cmp
aas
add
inc
xor
cmpsl
adc
ja
mov
sub
or
push
shrl
mov
adc
in
xor
jl
mov
pop
and
sbb
push
cmp
mov
and
cmpsl
roll
stos
pop
scas
cmp
sbb
and
stc
fistl
pushf
cli
xchg
shrb
push
dec
add
imul
inc
sub
cmp
mov
xchg
in
out
rorb
in
jbe
popf
js
pop
sub
mov
gs
pop
adc
dec
test
pop
sub
popf
xchg
and
mov
mov
ds
xchg
lds
and
add
jle
fwait
lock
mov
mov
xor
xor
cltd
iret
dec
in
and
andb
mov
or
stos
sub
popf
push
dec
and
jno
adc
lret
xchg
inc
shl
xchg
stos
cmp
dec
imul
sbb
aad
cmp
jmp
push
test
fwait
adc
mov
popa
dec
cld
jae
test
adc
xor
inc
jle
rolb
xchg
jno
xchg
cs
dec
push
insb
xchg
sub
mov
movsb
imul
fwait
lahf
push
xchg
loope
xchg
cmpsl
mov
ret
shll
push
cs
or
add
jle
rcll
push
jno
mov
xchg
fdivr
mov
inc
mov
jecxz
xchg
xor
insb
sahf
mov
cmpsb
push
movsl
sub
out
jb
cmp
subl
lcall
out
jbe
and
inc
cmp
sbb
ret
adc
inc
call
lret
out
mov
cli
enter
stos
loop
xchg
std
lods
and
and
xchg
xor
inc
xchg
jno
in
scas
movsl
pop
lds
pop
loop
sbb
les
js
rclb
pop
arpl
xor
push
in
mov
ror
xor
daa
shl
push
mov
scas
xchg
imul
rol
stc
xor
imul
fnstenv
mov
xorb
shlb
and
mov
add
pop
iret
sub
mov
sahf
xchg
mov
cmp
enter
fwait
jg
mov
and
out
aas
sbb
inc
xor
rorl
shll
scas
int3
push
aam
cmc
xlat
imul
sahf
ljmp
clc
popa
or
and
sub
or
jno
jne
dec
and
sub
out
xchg
sub
push
mov
push
cmpl
adc
sbb
jbe
leave
vmovddup
jae
inc
in
inc
cmc
sbb
sub
push
sbb
cmp
aad
int
into
add
push
arpl
mov
icebp
jae
loope
inc
xchg
movsb
fstpl
mov
aaa
aam
cmp
lcall
cs
inc
pop
ljmp
cltd
or
loop
in
lods
xchg
fwait
in
xchg
repnz
mov
mov
cmpsb
in
xor
lret
and
sub
xchg
add
xchg
xchg
lcall
sub
cmp
fdivrl
mov
nop
lahf
jle
adc
sub
add
dec
loop
inc
outsl
inc
mov
test
and
sbb
mov
sub
adc
and
fidivl
ror
dec
js
ss
cmp
jp
stc
adc
sarl
mov
cltd
test
stos
mov
push
add
add
dec
iret
sbb
mov
orb
je
sbb
push
lds
insl
and
cld
and
mov
outsl
and
sub
push
cmpsb
ds
dec
xchg
push
and
das
fiadds
les
and
in
jge
inc
push
aaa
je
adc
loope
inc
dec
imul
sarb
xor
or
cmp
outsl
imul
pushf
push
mov
aaa
push
add
insl
fisttpl
xchg
sbb
in
push
sti
scas
xor
pop
and
pop
pusha
xchg
fwait
xchg
movsbl
and
cld
ret
popa
xchg
ja
mov
scas
bound
outsb
out
inc
fistpll
outsb
popa
lea
jl
adc
push
xchg
test
mov
push
pop
jns
ljmp
inc
cmc
out
cmp
push
cwtl
pop
sarl
pop
xor
cs
jecxz
mov
mov
add
inc
pop
imull
add
jbe
into
fmulp
push
adc
mov
test
adc
push
fwait
mov
cmp
cmpl
in
mov
and
adc
loop
sub
inc
mov
shrl
pop
add
pop
jnp
lods
xchg
orb
jbe
divb
pop
inc
mov
aas
fsts
push
aam
and
icebp
popa
xchg
add
fsubrl
xor
jle
stos
adc
push
sbb
xor
iret
cs
and
cmp
mov
or
pop
mov
adc
fisttpll
xchg
xor
adc
in
aad
jmp
pusha
pop
bound
xchg
push
call
test
loop
rcll
ret
pop
jl
or
xchg
je
inc
mov
push
daa
xor
jno
dec
in
sbb
push
pop
ret
mov
gs
mov
sti
icebp
jg
lahf
cmpsb
push
int3
jmp
pop
fwait
lds
push
mov
sub
stc
xor
fiaddl
test
push
aas
or
les
cmp
jmp
or
adc
mov
cmp
pop
and
add
ret
loope
in
xlat
iret
mov
mov
mov
orw
mov
pushf
jg
in
mov
test
ret
sub
push
pop
adc
lahf
xchg
js
clc
popa
inc
inc
mov
push
ds
imul
add
sub
shll
insb
add
xchg
sahf
lcall
lcall
lock
xlat
sahf
xor
sbb
dec
or
dec
push
je
pushf
sub
addr16
outsl
int3
pop
jle
imul
xor
lahf
mov
mov
xchg
fwait
pop
lods
les
adc
jns
sub
lcall
jns
fistpl
sbb
adc
xor
mov
pop
jp
mov
mov
fisttps
mov
mov
cmpsl
mov
mov
adc
test
iret
nop
pop
jo
je
sub
pusha
data16
and
vmwrite
mov
sti
outsb
sbb
js
jae
inc
and
adc
mov
loope
imul
daa
xchg
mov
and
jge
test
cmp
and
xchg
pop
mov
jbe
dec
pop
pop
rorb
cmp
movl
sub
repz
rcrl
jbe
cmp
adcl
ret
clc
rcr
cmp
daa
xor
pop
inc
shrb
adc
popf
mov
in
jg
ss
dec
clc
imul
and
lcall
mov
sbb
mov
adc
mov
in
xor
stc
psraw
push
xor
ljmp
popf
jle
pushl
jmp
sub
stos
mov
dec
push
lds
mov
xchg
sub
inc
fidivrl
mov
sub
ror
mov
push
popf
jbe
rcrl
addl
and
xor
and
addl
add
mov
mov
movsl
pop
js
sbb
repnz
pop
lret
imul
push
adc
les
mov
fwait
leave
and
fsubrs
ret
daa
pop
and
cmp
cmpsb
fs
ja
dec
push
dec
jb
cwtl
mov
mov
addb
nop
out
stos
add
xchg
shll
jp
in
incl
mov
outsl
dec
repz
xchg
filds
inc
sub
mov
push
pop
add
hlt
shlb
add
js
push
pop
es
push
adc
fimuls
xchg
inc
fcompl
loope
cld
adc
scas
mov
pop
mov
addr16
xchg
das
dec
pushf
mov
test
aad
hlt
jmp
dec
dec
pop
cmp
mov
mov
imul
aad
aad
jmp
roll
sub
cltd
mov
movsl
addr16
xor
sbb
loop
xor
jp
sbb
sbb
xchg
jge
mov
push
sub
pop
gs
push
sub
xchg
and
cmpb
cs
arpl
pop
xchg
fwait
into
pop
lcall
das
ss
inc
sub
ss
cltd
mov
mov
loope
andl
cmp
roll
jg
xchg
daa
mov
jmp
sbb
mov
dec
mov
outsl
pushf
mov
mov
adc
out
inc
jo
in
and
or
sarl
fxch
nop
jbe
int
adc
into
adc
sub
cmp
jo
stos
mov
cmp
fldcw
push
sti
out
xor
ret
sbb
in
in
ror
repz
and
je
mov
xchg
movswl
loop
push
arpl
stos
and
jp
inc
jmp
add
mov
xor
push
in
rorl
dec
push
nop
stc
xlat
inc
mov
cmc
mov
cli
ja
test
dec
loop
push
pop
ljmp
out
into
sbb
int
rolb
loop
mov
xorb
push
bnd
mov
movsb
push
in
pop
xchg
fldenv
adc
mov
inc
in
cmp
clc
adcl
lret
rcrl
mov
dec
push
sti
sbb
add
cmp
or
popf
add
inc
andb
xchg
mov
daa
loope
aaa
dec
in
loopne
inc
mov
movsl
shl
dec
jecxz
inc
cmc
jnp
jle
inc
push
pop
sbb
push
xor
data16
adc
sti
jne
xchg
xchg
jmp
push
cmpl
dec
aad
inc
sub
push
dec
inc
inc
pop
mov
inc
push
mov
repnz
xor
xor
add
lret
mov
sti
and
ds
loop
cmp
and
push
in
leave
sbb
xor
add
popl
dec
insl
cmp
mov
mov
xor
subl
out
or
fs
jbe
sbb
rcrl
cmpb
icebp
sbb
and
enter
loop
int
xchg
lahf
sahf
jnp
sbb
sbb
or
and
mov
ds
repz
jns,pn
xor
mov
and
mov
cmp
sbb
add
add
subl
das
cmc
enter
aad
repz
imul
and
loope
loop
movsl
jne
daa
mov
mov
xchg
stc
cld
push
pop
jp
adc
and
pushf
mov
mov
push
pop
movsb
sahf
mov
movsl
mov
inc
adc
push
sub
jae
aam
mov
lret
sbb
and
loope
repz
pop
xor
pop
outsb
lods
dec
cmpsl
push
cmp
add
daa
imulb
jmp
out
mov
xchg
and
cmp
pop
mov
pop
cltd
test
and
mov
push
jne
mov
xchg
adc
push
out
jnp
loop
cmpsl
arpl
xchg
pop
rcr
mov
inc
xor
test
aaa
or
mov
inc
mov
cld
sub
loopne
in
shr
in
or
sti
and
lods
mov
sbbb
or
xor
adc
xchg
xchg
xchg
push
pop
mov
dec
sub
stos
mov
cmp
ja
mov
jb
xchg
adc
iret
daa
pop
nop
jb
sarl
jno
and
inc
mov
pop
sbb
add
cmp
mov
push
mov
loope
leave
or
std
dec
in
test
xchg
imul
inc
mov
jno
loope
loopne
sahf
pop
arpl
xchg
aaa
in
sbb
cltd
ljmp
shl
inc
mov
cmp
sbb
loop
push
in
sbb
insl
jb
mov
cmp
cmpsl
roll
jo
dec
idiv
out
in
test
mov
push
loop
stos
test
mov
or
cmp
jle
sbb
mov
mov
xor
xchg
repz
ss
ret
mov
pop
mov
dec
sarl
push
pop
mov
mov
and
xchg
mov
jno
xor
dec
aam
adc
cmp
pushf
test
gs
mov
cs
adc
loope
sub
sub
out
xchg
push
cmp
loop
stos
sbb
test
cwtl
and
jbe
imul
test
mov
loope
pop
outsb
add
dec
fidivrs
cmpb
mov
or
and
sbb
cmp
rcll
test
jle
pop
mov
jae
and
cmp
mov
add
movsb
adc
adc
jbe
push
loop
jmp
push
cmp
adc
loope
icebp
in
adc
rcrb
pop
fmuls
pop
xor
push
mov
inc
fsubr
lods
into
clc
scas
js
popa
sub
and
xor
arpl
pop
sub
enter
jp
sbb
dec
bound
aas
push
jle
xor
sub
dec
cmpsl
ss
in
fwait
cmp
mov
pop
mov
and
pop
repnz
loope
xchg
push
adc
lahf
lods
sub
iret
xor
aaa
sbb
int
and
xor
xchg
pop
or
sbb
xor
inc
ret
jno
fisttps
pop
das
cmp
inc
cmc
imul
into
shrl
and
sbb
mov
xchg
sbbb
les
xor
pop
mov
aas
push
inc
aad
cmpsl
pop
add
mov
mov
push
popa
or
hlt
cwtl
pushf
js
lods
aam
insl
ss
cmp
and
mov
mov
or
jecxz
xchg
pop
mov
and
sbb
dec
mov
add
pop
in
ficomps
inc
out
xchg
xchg
pop
or
pop
cmpsb
scas
iret
push
imul
divb
dec
xchg
jo
push
push
fimuls
pop
sarl
lahf
les
in
fldenv
cmp
pop
xor
lret
mov
adc
movsb
cmp
jp
adcb
jo
loop
pop
daa
push
dec
cwtl
xchg
jae
and
bound
sar
fistpl
insl
mov
cli
sbb
mov
iret
jno
jo
adc
fstl
sbb
push
sub
xchg
sbb
scas
xor
daa
inc
mov
xchg
les
mov
gs
xchg
inc
jno
jb
cmp
sub
pop
ljmp
stc
inc
shl
lods
inc
xchg
dec
cmp
and
jecxz
imul
adc
frstor
xchg
int3
fs
push
cmp
mov
in
loop
and
out
mov
jl
nop
hlt
rcl
nop
xor
mov
aam
adc
sti
adcl
loop
js
mov
ja
lds
test
stos
pop
nop
cmp
notb
inc
xor
or
xor
and
nop
mov
ds
cmp
cmp
and
mov
int
in
xchg
std
xchg
cli
mov
mov
push
dec
push
ds
aam
sbb
mov
mov
add
mov
or
loop
repnz
fisttps
mov
fcmovnbe
dec
test
cmp
cmp
jo
gs
and
cmp
mov
out
test
pushf
cli
ss
sahf
fdivr
push
lret
in
mov
jbe
and
mov
cwtl
dec
inc
loop
scas
add
aad
mov
js
inc
xor
adc
popf
insl
clc
push
sub
hlt
sti
lea
sbb
sub
pop
push
outsl
shrb
fisubl
mov
mov
orl
loop
es
subb
cmpsl
cltd
adc
js
dec
xor
pushf
xchg
daa
sbb
cmpsl
push
pop
pop
xorl
xchg
push
or
sbb
and
pop
mov
push
imul
sub
xor
mov
shlb
dec
cltd
bound
fiaddl
pop
push
jae
xchg
and
mov
loop
adc
rcl
jbe
inc
add
mov
nop
imul
adc
call
ret
sbb
xor
test
xor
pop
cwtl
repz
subb
xchg
and
jae
adc
cmpsl
repz
das
movsb
mov
in
test
add
and
mov
in
lret
xchg
or
adc
and
push
adc
or
push
sub
out
dec
jecxz
sbbb
xchg
xchg
sbb
mov
add
or
fs
adc
in
movsb
sarl
and
sbb
dec
les
mov
mov
int
leave
sbb
xchg
dec
adc
and
repnz
and
and
mov
daa
lds
pusha
stos
pop
cmp
sbbb
xor
push
movsl
jg
push
mov
test
ret
inc
cli
mov
imul
and
adc
dec
pop
sbb
aam
xchg
xor
xchg
addb
cmpsl
js
sub
movsl
pop
popa
pop
cmp
aaa
inc
fs
xchg
ficoml
movsl
pusha
inc
mov
loop
pop
mov
inc
and
jmp
lret
popa
sarl
imul
jno
push
lods
ret
xchg
rcl
ror
popf
dec
or
dec
loop
mov
sbbb
mov
dec
sbb
ds
ds
scas
mov
push
fwait
ds
pop
jno
out
imul
sub
or
test
sahf
mov
jb
dec
icebp
cmp
cld
stc
adc
mov
sub
in
sbb
je
mov
jmp
shlb
adc
push
inc
pop
pop
jge
pop
sbb
or
fwait
imul
dec
adc
mov
lcall
jae
jbe
jo
mov
imul
push
sbb
cwtl
es
daa
in
fstl
scas
pop
mov
pushf
cmp
in
inc
lods
push
testb
scas
xchg
xchg
dec
mov
jbe
addl
xchg
mov
clc
cmp
dec
loope
jno
xchg
mov
mov
cmpsl
outsl
inc
jecxz
popa
jge
mov
stos
and
xchg
loope
mov
xchg
notl
inc
mov
push
jbe
mov
inc
add
cld
xor
adc
loope
lds
sub
in
jae
adc
mov
loop
les
sub
es
push
dec
jecxz
lods
push
addr16
jb
movl
out
sub
sbb
pop
dec
nop
pop
subl
sbb
pop
xor
mov
pop
cltd
fidivs
cld
push
inc
aas
push
jp
xor
lods
jo
jg
jp
mov
fnstenv
in
stc
jno
inc
sub
push
sbb
shll
adc
rol
jmp
in
xlat
lods
andl
or
inc
movsb
mov
dec
mov
mov
xchg
mov
lds
aaa
fcmovnbe
xchg
loope
jle
outsl
jp
and
std
inc
inc
inc
mov
loope
out
pop
iret
push
sbb
adcb
lods
cmp
ficoms
loop
adc
mov
mov
xchg
in
and
lea
cwtl
popf
nop
cmp
jb
xor
push
mull
xor
adc
jmp
fbstp
jle
sbb
dec
cltd
call
xchg
call
std
out
rorl
push
xchg
rolb
sub
mov
mov
sub
or
mov
sbb
mov
ret
jge
mull
lcall
in
mov
push
push
ljmp
and
test
and
pop
and
aaa
aad
and
mov
repnz
cltd
mov
clc
mov
xlat
pop
fnstenv
xor
ret
adc
and
test
xchg
pop
mov
adc
or
pop
push
adc
pop
fldt
adc
xor
inc
ret
dec
sbb
jno
cltd
aam
pop
mov
lcall
mov
or
cli
adc
cltd
push
add
fildll
popf
ds
sbb
inc
loop
push
rclb
mov
into
pop
daa
mov
jno
cmp
test
adc
and
xchg
and
cmp
arpl
test
jecxz
enter
xchg
jle
loope
ja
mov
add
mov
and
jp
fisttps
and
pop
repz
loop
and
adc
mov
in
mov
arpl
and
aaa
sbb
sub
fwait
push
fisubl
aas
test
fdivl
clc
rclb
and
iret
mov
push
dec
fldt
fldl
push
mov
scas
pop
xor
cmp
push
out
inc
aad
stc
xor
test
adc
in
xchg
jne
bound
les
mov
mov
int
negb
and
cmpsl
pop
sti
mov
xchg
adc
in
notl
push
or
adc
mov
xchg
es
les
sbb
int
xor
arpl
in
mov
in
xor
adc
jecxz
and
add
xor
cmp
pop
inc
and
test
add
dec
pushf
ret
test
jg
inc
inc
loop
add
mov
pop
jmp
or
cmpsb
fcmovb
mov
ds
sub
adc
mov
pop
fs
jl
popa
das
cmp
gs
pop
imul
jae
cs
daa
mov
mov
ret
loope
gs
es
pop
add
arpl
dec
adc
addl
mov
ss
xor
lea
insl
xlat
aam
push
mov
or
xchg
jmp
add
fcomps
inc
sti
les
jne
sbb
jp
adc
inc
mov
mov
nop
mov
xchg
cmp
test
pop
xchg
jle
sti
push
pop
popa
mov
loop
test
mov
lods
sahf
sub
iret
scas
xor
in
xor
add
pushf
cmp
int
mov
outsl
mov
scas
inc
xchg
adc
fnstsw
cmc
in
in
xor
mov
sbb
jg
inc
push
imul
mov
dec
xor
daa
cmpsb
ret
negb
mov
fabs
lret
inc
push
push
xor
mov
inc
dec
and
sti
adc
in
imul
xchg
add
mov
out
movsl
pop
adc
add
aas
popa
bound
fisubl
xor
icebp
mov
fldt
mov
and
or
repnz
or
push
sub
addr16
xor
dec
insb
mov
jns
xchg
in
daa
pop
cmp
into
mov
cmp
fdivl
dec
push
and
out
movsl
sub
mov
sbbb
xchg
gs
xchg
add
dec
icebp
pop
dec
pop
xchg
test
jns
pushf
and
pop
orl
jecxz
notl
push
inc
stos
roll
or
fwait
push
into
xor
sbb
sbb
inc
not
mov
xchg
and
push
push
popa
and
push
loope
dec
mov
outsl
cltd
insb
out
or
mov
mull
call
jae
and
sti
mov
mov
xchg
aaa
jle
call
outsl
mov
dec
inc
cwtl
and
test
insl
jb
leave
movsl
adc
iret
pop
vshufpd
xor
mov
daa
dec
out
pop
in
leave
fucom
sub
mov
in
fsubp
hlt
arpl
inc
sbb
push
mov
sbb
movsb
mov
aaa
sub
inc
jo
and
pop
xchg
adc
ja
xor
xor
adc
push
xor
mov
pop
out
xor
das
pop
fnsave
shrl
dec
adc
loop
call
in
shr
push
jl
sub
das
dec
mov
push
pushl
xchg
nop
sahf
lds
in
insl
sbb
lods
push
mov
or
in
adc
js
inc
jnp
jns
and
cmp
mov
cmpsb
xor
pop
jle
dec
vmovntps
adc
out
ljmp
push
loop
jb
addr16
loope
jp
mov
mov
stos
and
enter
adc
mov
fisttps
in
out
lods
inc
loop
in
add
push
aas
mov
inc
fsubrl
cltd
add
sub
dec
xor
adc
xlat
sbb
loope
push
imul
push
pushl
sub
pushf
je
mov
adc
fidivrs
xor
jnp
adc
cwtl
in
stos
jnp
inc
adc
roll
mov
jo
inc
insb
jb
daa
in
jae
jg
shlb
jo
or
and
in
jecxz
adc
jbe
mov
dec
daa
insl
mov
push
in
push
push
mov
push
mov
out
dec
xchg
adc
in
push
pop
and
fstps
mov
in
pop
adc
imul
lds
in
daa
gs
mov
call
mov
xchg
adc
int3
xor
jno
push
imul
outsl
inc
mov
xor
lcall
push
adc
mov
jno
lcall
daa
adc
pop
outsl
sbb
call
cmp
loopne
pop
lds
loope
and
pop
lret
push
xchg
loop
repnz
push
xchg
mov
or
leave
test
cmp
ret
outsb
shll
dec
mov
sbb
fisttps
pop
hlt
pop
xor
inc
mov
push
lcall
push
push
pop
fs
mov
insb
sub
jp
rcl
xchg
cltd
cmp
add
cmp
addb
fwait
movsl
movsb
ret
pop
mov
inc
loop
aad
out
add
add
and
xchg
loop
and
mov
sub
sbb
push
mov
inc
ret
adc
adc
xchg
daa
push
add
fmull
gs
xor
dec
xchg
adc
push
xor
and
push
int
push
orb
xchg
or
and
adc
imul
add
xchg
inc
cld
daa
dec
stc
insb
push
fcomp
and
mov
mov
bound
adc
pop
lret
ja
dec
xchg
ret
fcmove
imul
dec
xor
pop
xchg
xor
movsb
jmp
loope
outsb
xchg
mov
lock
sub
jmp
inc
lods
outsl
adc
pusha
mov
imul
movsb
iret
gs
cmpsl
jnp
push
adc
fst
dec
cmp
in
nop
push
mov
imul
fcoml
dec
lods
insb
rorl
inc
add
inc
xchg
es
sub
inc
cmp
add
push
test
mov
jmp
in
mov
or
js
and
movsl
mov
ljmp
jo
jle
and
push
dec
pop
adc
mov
pop
xchg
mov
jno
sub
dec
dec
sub
dec
push
sub
adc
mov
pusha
aad
call
pop
push
cmp
mov
and
leave
add
inc
popa
jo
mov
lods
lahf
xchg
fucom
adc
cmpsl
pop
mulb
pop
inc
adc
pop
and
xchg
xchg
mov
cmpsl
cld
cmp
inc
xchg
insb
shll
inc
xor
daa
js
sbb
mov
pop
sbb
pop
aad
push
and
and
sub
fiadds
pop
das
loope
mov
and
cmp
inc
loop
xor
jb
fildll
pop
dec
arpl
data16
push
xor
pop
int
jo
xor
jnp
adc
jge
and
mov
pop
call
cmp
mov
add
pop
frstor
xor
xor
rorb
lcall
lds
insb
call
inc
or
xchg
stos
add
inc
sbb
mov
jae
sub
pusha
push
push
notb
xor
pop
adc
xchg
popf
mov
in
cmp
addl
fcompl
cmp
shll
jle
adc
sbb
xchg
fcoml
mov
adcb
jns
mov
lcall
xor
insl
push
ds
arpl
mov
sbb
shll
inc
roll
and
aas
mov
sub
dec
es
jecxz
push
ljmp
cs
xchg
xor
and
and
ds
and
and
subb
nop
mov
adc
mov
outsl
imul
mov
xchg
in
inc
xchg
xchg
outsl
rcrb
shrl
into
adc
loope
lods
lods
mov
stc
insb
cld
mov
pop
adc
xchg
popa
and
xchg
shrl
push
xchg
out
int
mov
push
pop
lds
push
loop
push
xchg
loope
pop
or
cmp
mov
and
clc
ds
je
aad
out
mov
or
add
movsl
aaa
and
insb
repnz
movsb
inc
es
sub
rorb
xor
jne
lods
cmp
push
aam
dec
mov
inc
fdivl
cmp
int
dec
nop
or
das
cmpsl
mov
cmp
jns
mov
data16
xchg
mov
arpl
test
lahf
push
xchg
out
jg
pop
jns
fimuls
push
jp
jno
dec
push
xchg
add
mov
nop
inc
fwait
inc
mov
arpl
pop
ljmp
cli
xor
pop
clc
xchg
push
push
xchg
enter
inc
scas
shll
in
mov
xor
xor
mov
xchg
dec
cmpsl
icebp
pop
sbb
jp
jle
adc
nop
jae
xchg
aaa
xor
stos
jns
popf
ret
leave
iret
inc
cwtl
sbb
sub
xchg
push
xchg
pop
dec
pop
test
lcall
add
cwtl
pop
loop
add
addb
insb
mov
mov
mov
or
imul
aam
jno
push
push
push
or
mov
push
in
loope
xor
iret
mov
adc
addr16
add
push
lds
jno
sbb
insl
and
loopne
mov
scas
xchg
sub
jle
repnz
idiv
shll
loope
inc
xchg
mov
sbb
jno
jno
std
inc
dec
jge
pop
xchg
mov
pop
por
pop
add
aaa
mov
mov
call
mov
mov
push
adc
mov
sbb
ja
push
xor
jmp
mov
dec
add
rorb
es
xchg
cmp
jno
insl
ds
mov
ljmp
pop
gs
inc
ss
daa
sbb
pop
and
mov
aad
int
mov
icebp
adc
pushf
lret
lea
aam
movsl
in
daa
mov
icebp
xchg
subl
pop
jge
add
cmp
sbb
pop
imul
pushf
lods
jg
mov
loope
push
out
dec
cmp
pop
cld
sarl
adc
imul
adc
sar
daa
and
xchg
lds
sub
sub
add
test
popa
mov
cmp
pop
xor
mov
loop,pn
loopne
outsl
leave
add
popa
and
scas
mov
mov
pop
cmp
fistpl
cmp
test
jbe
dec
pop
mov
stos
mov
mov
mov
ficompl
lods
test
add
daa
loop
clc
clc
aaa
xor
xor
and
lods
xor
mov
ss
mov
mov
stos
outsl
inc
mov
jb
inc
adc
mov
fidivrl
push
bound
flds
les
cmp
outsl
std
loope
inc
pop
cmpsl
dec
mov
adc
xor
sbb
push
push
push
xchg
xor
jmp
aas
and
dec
js
cmp
test
rcrl
xlat
rcll
in
xor
xor
and
dec
cltd
xchg
adc
nop
dec
push
xlat
popa
loope
mov
sub
mov
xor
scas
sbb
mov
push
sbb
in
push
mov
lret
idivb
sti
pusha
rolb
jge
and
cmp
or
lcall
pop
lea
xchg
es
cwtl
sti
sub
and
pop
add
addr16
jb
pop
xchg
jg
in
adc
or
mov
pop
sub
pop
xor
out
adc
cmp
lret
inc
frstor
or
repnz
xorb
push
in
xchg
sbb
inc
and
ficoml
xor
push
mov
in
mov
inc
ss
orb
and
sbb
lds
and
rcr
adc
xchg
adc
into
xchg
imul
incb
fsubl
push
repnz
pop
test
out
cmp
fcompl
mov
xchg
rclb
xor
mov
scas
lds
dec
xor
sbb
lods
pusha
imulb
dec
mov
pop
out
lods
xor
movsl
cwtl
push
push
mov
dec
test
hlt
pop
adc
out
inc
js
adc
sub
loop
sub
bound
xor
loop
leave
cwtl
rol
fisubs
iret
ret
mov
pop
loop
ja
mov
popf
mov
lock
adc
adc
add
lcall
popf
sbb
pop
je
test
sub
fistpll
aam
mov
mov
mov
adc
and
mov
mov
jl
inc
mov
jecxz
shll
loope
subl
xchg
dec
int3
jb
xor
lock
mov
inc
fstps
pop
push
idivl
mov
sbb
cltd
inc
inc
in
in
adc
loop
mov
lcall
pop
es
fs
xchg
xchg
fsubp
push
jnp
into
jne
aam
or
mov
std
and
jge
incl
iret
sbb
or
rclb
cmp
cmp
jle
iret
and
faddl
hlt
ljmp
cwtl
and
in
cmp
xcrypt-cfb
cmpsl
sti
jle
dec
stc
push
movsb
ret
mov
jne
iret
cltd
scas
cmp
pushl
fsts
xchg
adc
xor
jle
sbb
je
jp
dec
sbb
cs
out
movq
lds
loope
bound
jae
mov
outsl
insb
outsb
mov
mov
jp
pop
adc
jge
nop
insb
aaa
in
xor
cmp
sbbb
jno
out
das
es
sub
xor
sbb
jle
fsubrl
jecxz
xchg
movsl
fisttpll
jno
fisttps
xor
loop
mov
xor
push
xor
sbb
test
cwtl
adc
pusha
add
jge
cmpsl
jbe
daa
push
dec
sub
xchg
and
hlt
loop
scas
outsl
daa
push
arpl
xchg
push
sub
adc
test
jo
sub
fdivs
pop
fwait
jo
mov
xor
clc
int
and
hlt
dec
stc
sbb
aas
sar
mov
cs
pop
subl
dec
push
addl
movsl
in
push
roll
jbe
and
mov
vsubpd
mov
xchg
and
fsubs
test
lods
jb
push
loop
add
loop
jae
ja
add
add
inc
jb
addr16
add
or
dec
jns
lock
mov
lret
arpl
flds
je
mov
xchg
pusha
out
sbb
push
sbb
mov
xchg
repz
mov
sub
and
or
dec
imul
cmp
in
inc
fdivs
imul
test
popa
loope
mov
incb
dec
xor
push
or
jmp
inc
inc
sbb
sbbb
sbb
add
mov
sub
sub
mov
nop
ss
add
jg
and
cmp
aam
xor
inc
aad
adc
sbb
aaa
jne
lds
loop
and
sub
mov
adc
hlt
iret
jbe
hlt
loop
test
test
xor
loope
das
inc
or
adc
dec
xlat
sahf
pushl
sub
fmull
es
inc
push
arpl
jbe
xchg
ja
xchg
or
shlb
mov
imul
sub
loop
xchg
notb
adc
std
pop
xchg
movsb
mov
rorl
and
cld
dec
movsl
adc
push
out
mov
ficomps
rolb
aas
inc
push
xchg
cmp
pushf
cmp
adc
lock
les
push
imul
pop
cltd
outsl
xor
into
aaa
nop
sub
out
or
rcll
xchg
in
cmp
test
negb
mov
sub
add
cli
scas
shl
sub
insl
push
jne
lock
mov
adc
cmp
pop
aaa
insl
mov
sbb
mov
and
movsl
ror
imul
sbb
loope
out
movsl
add
and
clc
xchg
jmp
push
sub
in
dec
bound
mov
mov
pop
shll
aas
nop
xchg
inc
mov
jge
fwait
push
cmpsb
sbb
pop
sub
cmp
adc
sbb
in
js
mov
sub
xchg
sbb
cmp
pop
sub
dec
ss
xor
aaa
cmp
cmpb
daa
and
inc
test
xchg
testl
rcll
loop
enter
push
push
test
imul
adc
push
mov
dec
mov
sbb
jns
daa
std
ds
lods
lahf
call
jo
mov
pop
sbb
rolb
adc
cmpsl
pop
push
mov
jg
loopne
and
cmp
xchg
xor
cli
sbb
imul
sub
sbb
mov
mov
jno
mov
xor
imul
aas
loop
mov
rcr
mov
test
xor
and
outsb
inc
pop
push
cld
mov
ss
out
inc
or
cld
addr16
inc
in
in
xor
and
xchg
cmc
dec
inc
mov
test
jle
push
lods
add
inc
daa
shll
inc
idivl
mov
icebp
dec
adc
mov
add
sbb
mov
sbb
cmp
or
cmp
gs
mov
mov
inc
xchg
push
into
and
cmp
jo
fstps
cmc
xchg
adc
es
xchg
cmp
aaa
aas
pop
imul
sbb
xor
das
mov
and
push
dec
or
pop
mov
mov
push
xor
js
pop
push
loope
xchg
shll
into
cmp
sbbl
dec
pop
jae
rol
adc
mov
fidivl
movsl
inc
sub
cmpsl
addr16
lret
ss
cmpsb
fwait
notb
push
stc
loope
mov
sarb
jae
stos
mov
xchg
push
dec
int3
push
xor
pop
jnp
mov
jl
lods
pop
aaa
in
lea
mov
cmp
dec
inc
ds
mov
aam
and
dec
ret
lcall
sbb
jns
cmpsb
jo
shlb
loope
fwait
pop
mov
mov
xchg
push
mov
mov
lock
std
in
sub
jp
pop
std
fnstcw
scas
imul
out
dec
int
cltd
imul
aas
data16
outsb
jns
cmp
nop
test
dec
sub
sbb
pop
sbb
push
in
shr
jp
xor
pop
jp
add
mov
xchg
stos
mov
xorl
and
pop
call
outsl
cmpsb
cmp
fs
adc
stos
mov
mov
and
jle
mov
sub
lcall
xor
sub
jno
shlb
mov
sub
adc
daa
dec
test
or
xchg
mov
dec
mov
mov
in
and
sbb
ret
cmp
dec
lods
jle
cmpsl
and
pop
insl
cmp
fidivrl
adc
nop
xorb
adc
push
xlat
loopne
out
cmp
loopne
ret
bound
std
jmp
imul
in
xchg
insb
add
mov
loope
test
fiadds
call
or
jo
in
push
jg
cmpsl
dec
aam
xchg
fs
movsb
mov
jb
pop
and
push
add
popa
jge
xchg
cmp
jecxz
scas
shr
inc
pop
jle
sahf
mov
iret
roll
loope
xlat
lcall
cmp
leave
rcll
xchg
xchg
dec
pop
mov
loope
aaa
icebp
stos
stos
sbb
lods
hlt
and
outsl
mov
push
mov
add
addr16
mov
mov
xchg
xchg
loope
loop
pop
notrack
fnstcw
inc
in
ljmp
adc
jne
std
push
and
adcl
sbb
jae
in
jno
loop
call
sub
mov
jns
loop
mov
subb
movsb
movsb
mov
cmpsl
inc
std
jno
mov
inc
and
ds
sti
sti
fldz
out
inc
mov
push
mov
push
xlat
inc
inc
int3
test
push
imul
mov
dec
negl
adc
fs
xor
inc
dec
lcall
sub
shll
pop
iret
push
pop
push
or
es
pop
test
out
dec
fdivp
jle
mov
cmpsb
loop
fdivrs
xchg
lds
push
or
jl
or
sahf
aad
mov
dec
lret
xor
pop
cmc
int3
dec
mov
shll
dec
xor
std
dec
hlt
mov
clc
xchg
push
loop
or
imul
arpl
push
pushf
ljmp
loope
xchg
add
jnp
scas
push
dec
imul
and
int
mov
dec
xchg
repnz
lock
mov
add
data16
add
dec
stos
cmp
xlat
enter
push
lret
push
push
lahf
xor
movsl
imul
and
notl
xor
pop
pop
loopne
inc
outsl
cmc
xchg
pop
lret
inc
aam
xor
cmp
push
mov
pop
jno
sbb
rcll
call
sbb
mov
shll
pop
pop
cmp
xchg
insb
cmpsl
out
pop
xchg
sbb
pushf
cmp
adc
movsb
jge
movsb
jle
cmp
lock
or
mov
xlat
mov
outsl
in
test
je
mov
jle
add
scas
sub
out
pop
les
push
hlt
leave
das
sbb
xchg
mov
fstpt
sbb
mov
and
jp
sahf
or
push
sub
push
fdivs
rcll
and
mov
push
fnsave
int
mov
imulw
or
loop
pop
in
xchg
insl
outsb
sbb
xacquire
and
ljmp
dec
mov
pop
shr
xor
pop
je
inc
pop
test
add
lds
jge
repz
lcall
cmc
cmp
mov
lcall
cmpsl
mov
sbb
jmp
aam
test
movsb
out
jae
test
cli
jl
jecxz
mov
push
xchg
pop
loop
aad
jecxz
mov
and
add
bound
test
imul
pop
enter
in
mov
mov
mov
mov
cld
sbb
inc
repnz
sbb
and
lods
loopne
sub
dec
sbb
ljmp
lds
sub
rorl
xchg
out
jae
popa
mov
rorl
push
mov
or
dec
jno
and
rorb
test
add
xchg
in
test
push
jno
jg
and
in
mov
fadd
les
cmp
or
shl
mov
mov
gs
sbbb
sbb
or
xor
hlt
mov
inc
aas
dec
test
mov
mov
and
int3
cmpsb
outsb
cli
cmp
outsb
imul
pop
pop
dec
or
loope
shlb
mov
std
notl
pushf
adc
lahf
ror
sub
loop
mov
adc
inc
mov
mov
and
jg
rorb
lock
loop
cmp
mov
sbb
mov
xor
mov
cs
and
shl
int
test
aaa
dec
mov
out
xchg
fwait
in
shrl
lds
repnz
adc
push
pushf
sbb
mov
mov
shrb
dec
push
dec
in
call
pushf
popf
mov
pop
in
jecxz
gs
lods
das
outsl
pushf
pop
add
in
aam
gs
xchg
nop
ffree
xor
movsl
mov
adc
iret
inc
push
into
pop
dec
mov
in
pop
dec
add
insb
jo
dec
sahf
pop
fisttpl
outsb
xlat
sbb
or
inc
mov
dec
cltd
lret
cmp
andl
xchg
xchg
jmp
mov
scas
stos
daa
in
aam
outsl
mov
xchg
dec
jmp
pop
decb
dec
mov
add
xor
imul
sub
xchg
scas
jnp
int
negb
jno
sub
sub
push
inc
xor
pushf
nop
insl
aas
jb
push
in
aad
popf
mov
add
lods
sbb
outsl
idivb
xchg
pop
sti
jmp
push
sbbb
repnz
nop
call
and
jne
pop
jl
xor
shlb
sbb
cltd
xor
movb
pop
push
push
loope
aas
in
xchg
xchg
jb
xchg
pop
add
int
mov
aaa
mov
mov
cmp
push
into
test
mov
cwtl
xor
jo
sub
lds
lcall
mov
sub
test
jmp
fsts
movsl
gs
mov
in
iret
jl
outsl
mov
mov
push
inc
clc
in
pop
movsb
shll
inc
ret
sbb
lret
inc
xor
dec
mov
sub
pusha
ds
jne
in
lock
xor
in
jne
insl
push
ror
dec
dec
test
mov
mov
pop
adc
push
xor
outsl
neg
mov
dec
pusha
ret
pop
mov
jmp
jns
fsubrs
in
rcrl
ljmp
out
mov
mov
sub
mov
in
lret
sub
push
cld
mov
or
mov
jbe
test
mov
jns
sbb
push
cmp
hlt
mov
sahf
dec
adc
and
rcrl
test
outsb
mov
int
in
sti
pop
mov
bound
mov
or
shrl
roll
and
mov
jae
in
xchg
xchg
test
int
mov
push
in
inc
inc
cmp
xor
pop
ret
sbb
jecxz
ret
sub
das
movsb
decb
push
loope
mov
int3
dec
out
test
mov
sub
and
fmuls
adc
insl
xchg
ja
cltd
shl
pop
mov
lods
sub
out
mov
jmp
xchg
clc
test
jle
das
dec
inc
mov
outsl
mov
pop
mov
mov
mov
mov
inc
push
loop
cmp
repz
dec
imul
mov
add
lds
pushf
push
in
sbb
mov
test
dec
into
add
pusha
and
out
js
pusha
ljmp
into
fstpl
jmp
ret
pop
loop
in
jns
dec
or
cmp
or
push
sub
pop
jb
loop
mov
popa
cmp
inc
dec
xor
dec
repz
mov
lret
mov
and
in
fsubs
xor
mov
addr16
sub
and
dec
mov
pop
cltd
roll
push
mov
adc
xchg
pop
mov
xor
stc
fst
in
aaa
xchg
cmp
pop
push
out
jne
loopne
test
cmp
mov
lret
fs
or
push
or
rcrl
inc
pop
jge
push
into
insb
aaa
aaa
in
xchg
fs
push
decb
nop
sbb
mov
in
icebp
or
add
inc
xor
jp
inc
push
popa
cli
and
arpl
mov
dec
mov
and
rclb
sbb
push
test
je
pop
or
sbb
aas
test
scas
dec
data16
xlat
pop
lcall
xorl
cwtl
dec
mov
push
adc
lcall
mov
jbe
rcl
push
mov
test
mov
adc
lret
mov
xor
jae
cmp
xor
mov
sbb
jbe
pop
pop
enter
dec
jl
xchg
ds
subl
push
fwait
incl
and
pop
mov
push
xchg
arpl
stos
sbb
in
sar
sub
lret
mov
loop
nop
xchg
cs
insb
jne
dec
mov
mov
lret
sub
inc
add
cmp
in
mov
and
push
sti
jb
es
mov
popa
jns
in
idivl
pop
or
aaa
pushf
cwtl
popf
addr16
push
pop
add
aas
mov
mov
fsubrs
notb
pop
mov
dec
das
mov
cmp
outsb
push
stos
rcrb
xchg
scas
test
cltd
push
and
in
cmp
fwait
xchg
orb
test
call
mov
inc
nop
and
das
pop
cmp
adc
sbb
in
and
cmc
bound
and
nop
stos
popf
xor
das
dec
pop
rcrb
gs
dec
push
addl
loop
mov
bound
aaa
xchg
inc
ret
lahf
iret
mov
mov
in
nop
cli
fnstsw
movsb
into
test
loop
ds
sahf
int3
inc
imul
mov
or
scas
aaa
stos
push
aas
lret
sbb
into
or
movsl
out
push
adc
and
divb
insl
inc
mov
push
jno
mov
and
punpckhwd
rorb
and
out
cmp
cmp
cs
mov
in
sbb
push
rcrb
fnsetpm(287
idivb
in
cmpsb
jg
into
mov
pop
int3
bound
xor
push
sahf
jnp
adc
leave
sbb
cmp
inc
mov
jnp
cmp
in
cmp
and
loop
fcomp
mov
sbb
adc
addr16
cmp
mov
pop
pop
add
jne
mov
popa
cmc
cmp
cmp
fmull
arpl
ficomps
xor
and
popa
xchg
loop
cli
jp
nop
pop
fimuls
adc
movsl
scas
inc
dec
inc
inc
insb
and
pop
loope
test
sbb
pop
std
lea
in
test
outsb
lock
dec
sahf
xchg
test
dec
pusha
sub
or
das
cmp
into
cltd
sarb
add
mov
adc
cmp
imul
sahf
add
ds
ret
jae
dec
or
xchg
arpl
pop
add
pop
ficoml
mov
in
dec
or
ret
andb
es
add
pop
ja
stos
push
sbb
mov
cmpsb
jae
cmp
cli
sbb
fisubl
in
dec
xchg
mov
mov
popa
jbe
aas
add
lret
ret
mov
lcall
cmp
aam
in
dec
popa
jbe
mov
jo
shlb
fcoms
xchg
sbb
dec
gs
ss
addb
hlt
lea
adc
mov
ss
sub
jge
add
dec
mov
inc
sub
adc
addr16
neg
nop
out
ret
lods
jo
imul
cmpsl
lds
mov
sbbl
aaa
aad
add
cmp
ror
mov
iret
push
sbb
cmp
push
inc
icebp
jbe
sub
jns
adc
test
pushf
add
jge
sbb
cwtl
dec
bound
cmpsl
cmp
lock
sub
fwait
xor
mull
ja
test
dec
mov
lret
fsubp
rsqrtps
js
dec
adc
fildl
jbe
and
cmp
push
sub
mov
jne
scas
bound
jns
adc
or
cmp
dec
xor
and
mov
in
inc
into
nop
push
xor
xor
cmp
loope
mov
in
push
out
in
std
adc
xor
into
xchg
push
int
mul
mov
cmpsb
cmp
jnp
add
cld
cmp
inc
cmp
and
sarb
inc
lods
push
cld
out
arpl
and
cmp
push
addl
cmc
shll
daa
loope
xchg
dec
or
jg
jb
mov
or
and
in
test
mov
cmp
iret
jecxz
movsb
xor
lods
mov
xor
dec
nop
nop
lods
push
in
les
mov
sbb
mov
leave
hlt
fnstenv
xchg
fwait
inc
push
fidivl
in
cmp
lahf
scas
sarb
scas
fldl
or
cmp
dec
mov
mov
jecxz
xchg
decb
add
pop
dec
or
outsb
nop
insb
mov
fbld
or
xchg
out
sub
push
sbb
push
fsubs
outsb
jecxz
enter
cs
mov
int
imul
sub
lods
mov
orl
icebp
xor
ficoms
in
mov
sbb
mov
aam
insb
push
and
mulb
mov
mov
pop
lea
daa
or
in
shl
inc
fcmovnb
push
and
mov
push
dec
xchg
and
in
imul
mov
push
push
pop
mov
cmp
sarl
test
push
out
sub
inc
stos
mov
out
icebp
or
scas
sbb
lods
lea
jne
xchg
insl
test
daa
aas
push
movsl
jecxz
sbb
insl
mulb
jo
movsb
leave
inc
movsl
imul
mov
add
repz
loop
cli
push
jg
mov
mov
std
sbb
loop
jnp
sbb
inc
and
loope
xchg
addr16
subb
mov
cmp
mov
dec
xchg
in
sbbl
daa
inc
lahf
loope
mov
cmp
int
popf
pop
fmuls
jle
sbb
jp
fldenv
in
or
sub
cmpsl
ljmp
ret
movsb
and
sahf
sub
lods
subl
and
test
fxch
shll
scas
mov
inc
scas
iret
cmp
in
push
movsb
adc
lea
mov
repz
cli
adc
pop
adc
imul
into
mov
pop
jl
mov
sbbb
xor
mov
mov
jp
fwait
incl
out
and
jno
dec
xor
mov
inc
cmp
mov
rol
jo
sar
lods
mov
jo
adc
xchg
fdivl
ja
mov
pop
fimull
cmp
imul
fsubrs
jecxz
int
add
jns
loop
leave
rclb
xlat
xchg
mov
lods
fistpll
inc
fdivl
cld
loopne
cmc
xor
inc
arpl
sub
sub
rorb
insb
sbb
pop
sbb
push
pop
sub
push
in
cltd
scas
ljmp
ss
pushf
mov
mov
hlt
out
lds
adc
aam
pushf
pop
je
aad
mov
inc
pop
push
fnstenv
xor
add
inc
loop
adc
mov
imul
or
mov
aaa
loop
out
sarb
popf
xlat
jno
pop
jmp
xchg
aam
in
mov
and
outsb
js
or
and
mov
xor
in
xor
out
and
leave
ret
lea
jnp
sti
jg
push
mov
lods
mov
mov
mov
scas
xor
insb
xchg
std
stos
repz
xchg
shrb
cmp
outsl
mov
stos
adc
decl
stos
fdivs
rol
xchg
loop
fwait
dec
ficomps
inc
test
and
cmp
add
clc
pop
sub
cltd
xchg
pop
jbe
jp
jbe
shll
add
cmp
sub
mov
push
imul
pop
int3
add
loop
rorl
jb
in
fninit
mov
das
sbb
dec
sbb
mov
xor
mov
loop
ret
gs
cmp
jmp
inc
xchg
mov
test
into
sbb
aaa
lret
xchg
mov
adc
and
mov
aaa
pop
sahf
cli
leave
in
sbb
sahf
sub
jo
shll
dec
adc
add
test
loop
std
in
push
mov
loop
cwtl
loop
test
mov
add
mov
xor
jge
and
mov
sbb
xor
or
rcrb
into
jecxz
mov
xor
daa
adc
aad
sahf
shrb
mov
cmp
mov
mov
decb
roll
push
sbb
xor
and
and
out
cmp
adc
popa
pop
gs
mov
ret
xchg
pop
mov
lahf
push
pushf
aas
in
add
sbb
loop
test
ja
clc
ja
fstps
pop
xor
push
or
sahf
cmp
adc
stos
inc
push
pop
add
and
ret
faddl
mov
aaa
ljmp
push
int
pushf
sbb
popf
fwait
mov
bound
bound
jecxz
pusha
data16
sti
adc
cmp
movsb
dec
push
movsb
fnstenv
mov
ljmp
cmp
loop
xchg
inc
in
inc
jge
in
cmp
pop
xor
or
lcall
leave
pop
push
mov
fwait
mov
sbb
mov
push
pop
notb
or
pop
jne
sti
es
pop
shrb
mov
sbb
insl
mov
sub
or
or
mov
push
or
or
mov
xchg
dec
loope
inc
cli
inc
js
inc
xchg
imul
push
sub
mov
sbb
repz
xor
fcomps
pop
ss
sbb
pop
loopne
inc
sahf
xchg
jno
lcall
xchg
or
pop
cmp
cmp
adcl
cli
outsl
adc
in
loop
aam
pop
sub
aas
xchg
mov
and
push
jle
cld
int
mov
cmp
mov
mov
mov
pop
enter
lret
sbb
outsl
fistl
cmp
mov
stos
sbb
and
or
leave
add
loop
add
mov
and
test
rolb
jno
mov
mov
aaa
call
mov
js
loopne
imul
pop
movlps
in
xchg
test
arpl
ss
add
ret
push
loop
repz
shll
std
fs
pop
es
xor
stos
cltd
inc
pusha
xchg
dec
sbb
popf
sbb
adc
jecxz
sti
scas
and
xor
add
std
sub
int
push
sti
outsb
push
push
xchg
cld
dec
push
mov
add
lea
pop
dec
xor
sti
cmpsl
sbb
mov
rorl
pop
and
daa
loop
popf
jnp
es
xchg
mov
xor
add
jl
xor
test
pop
aaa
xorl
pop
and
jne
and
cmp
rorl
pop
jl
sub
cmpsb
pushf
sbb
cmp
gs
cld
jg
lret
dec
mov
loope
xchg
xchg
jbe
jecxz
arpl
mov
aad
add
rcll
jmp
sbb
lcall
orb
xor
jbe
in
jecxz
sahf
pop
cmc
movsb
incb
push
pop
shll
adc
fisubrl
dec
hlt
arpl
xor
adc
mov
or
fstps
mov
in
sbb
fcomps
or
mov
jno
popa
loop
mov
dec
cmp
std
outsb
int3
fs
out
sub
jp
dec
jmp
cmp
inc
add
aas
test
loop
mov
sub
mov
adc
nop
adc
outsb
mov
mov
popf
sub
movsl
cli
mov
and
in
int
mov
inc
fsubp
stos
lret
add
test
lds
iret
stos
pop
mov
mov
ss
dec
mov
dec
xor
and
rcll
addl
lret
jnp
push
popa
mov
mov
sbb
pop
sarb
jb
push
pop
jo
ja
mov
cld
inc
lock
jns
orb
out
dec
push
or
cmpsl
fisubrl
lahf
fcompl
pop
xchg
fmuls
add
rorl
iret
lods
loope
sbb
mov
mov
nop
sbb
in
ss
mov
dec
shl
xchg
pop
inc
leave
mov
and
lret
sbb
jle
or
xchg
xor
push
and
sbb
arpl
loopne
xchg
mov
sub
outsb
pop
ja
jno
cmp
dec
inc
scas
mov
mov
and
adc
fwait
aad
adc
and
sub
insl
fcmovbe
xchg
iret
push
adc
mov
adc
lcall
subl
inc
fcmovbe
xor
add
push
cmp
testl
scas
test
sub
rcll
fistps
add
inc
lods
popf
push
cmp
or
dec
adcl
pop
hlt
iret
sub
jmpw
adc
lcall
lods
adc
bound
fsubs
jge
sbb
stc
cltd
lcall
adc
ja
daa
dec
xor
xchg
lods
mov
xchg
mov
xchg
cmpsl
ret
cli
dec
push
aad
and
lods
out
and
notl
push
or
pop
fildl
loope
shll
ds
shll
dec
fcmove
movsl
jns
daa
addr16
dec
popa
je
and
pop
pop
test
cmp
fcomi
and
ss
and
jno
pop
sub
shrb
loope,pt
jbe
loop
and
stos
inc
jle
fisubrl
and
cmpsl
pop
adc
mov
or
mov
rcrl
mov
test
out
sbb
push
rorb
lret
sbb
out
inc
insb
pop
pop
mov
or
outsb
pop
pop
shrb
mov
lods
insb
cmp
push
and
xchg
xor
movsl
mov
int
cmp
in
push
jp
sub
in
xor
clc
mov
mov
jnp
jle
dec
sbbl
jo
stos
xchg
aad
aas
dec
lds
rcrl
sub
mov
inc
cmp
lods
or
fmul
pop
or
stos
fstpt
pushf
fcompl
cmpsl
and
in
and
rolb
je
loop
jnp
jmp
pop
loope
mov
addb
mov
out
adc
in
lock
out
fidivrl
jmp
mov
in
popa
pop
mov
cmp
sub
mov
popf
imul
lret
cmp
cmp
xchg
and
lock
and
xor
pop
adc
popa
in
sub
loop
push
nop
cmp
xchg
divb
inc
pop
hlt
pop
push
sbb
pop
fsubrs
cli
xor
sub
div
ficompl
and
dec
xchg
sbb
adc
loope
mov
cmpsl
icebp
pop
push
movl
xlat
cmp
xchg
xchg
cld
add
push
test
jno
mov
movsl
mov
lods
mov
movsl
and
popf
dec
nop
inc
gs
or
in
push
insb
pop
inc
adc
inc
xchg
dec
subb
call
shlb
pop
lret
jnp
sbb
mov
and
push
insl
dec
repnz
xor
pop
mov
xchg
jbe
ss
sbb
insb
sub
cmpsb
xchg
pop
cltd
dec
or
loop
add
mov
pop
push
sbb
and
mov
arpl
ss
sub
andb
repz
adc
insb
call
mov
shr
pop
sbb
xchg
pop
gs
cli
fisttps
and
push
pop
xchg
cli
jns
adc
adc
rorb
xor
sub
adc
cmc
aad
ret
sar
adc
or
shr
cmpsl
pop
subb
add
dec
scas
iret
jbe
lret
sbb
push
popa
nop
fiaddl
ss
push
loope
jne
aad
pop
xchg
xorb
int
fcomi
inc
mov
push
in
mov
xchg
mov
inc
add
out
or
into
cvtpi2ps
dec
mov
test
divl
dec
mov
inc
add
fstpt
dec
outsl
nop
loope
hlt
ja
or
xor
loop
cmc
mov
cmp
mov
mov
xchg
inc
in
cli
sub
xor
and
subl
and
mov
push
xchg
das
xchg
shl
sub
xor
bound
iret
xor
aaa
test
cmp
mov
sub
arpl
mov
bound
lcall
in
fnstcw
loop
movsb
mov
pushf
and
lea
cmpb
lret
into
dec
es
adc
mov
arpl
shlb
leave
xchg
and
iret
lea
pop
sub
cs
and
icebp
or
in
imul
and
pop
jno
dec
sahf
loop
push
clc
scas
xor
insl
pop
jbe
inc
mov
mov
jmp
daa
mov
pop
cwtl
or
adc
sub
loop
xchg
sub
test
movsl
pop
or
push
or
or
loope
mov
dec
inc
cmp
in
iret
rcll
xor
shlb
fiadds
ret
int
mov
ss
push
mov
xchg
jp
dec
xchg
in
mov
pushf
out
mov
adc
mov
push
sbb
sarl
in
clc
push
mov
test
cltd
ljmp
psrld
mov
xchg
inc
sub
ret
jns
dec
cmp
nop
stc
xor
mov
lea
sbb
jl
fistpl
sbb
xor
cmp
sbb
and
inc
sbb
inc
jp
in
lods
rol
cmp
imull
xor
daa
push
jmp
in
xchg
jle
cltd
mov
scas
sbb
ret
test
notl
adc
mov
das
scas
fcoml
loop
and
sarl
imul
scas
cmc
mov
dec
loop
ds
sbbb
das
test
dec
cwtl
leave
inc
movsb
mov
int
sub
and
shlb
stos
addr16
jb
popa
movsb
adc
imul
mov
inc
push
dec
mov
test
jns
cli
test
es
mov
popa
jmp
sbb
in
ret
add
mov
adcb
cmpsl
push
lods
push
push
jne
in
pop
adc
rorl
pop
loope
and
mov
leave
mov
xchg
jno
sub
daa
shlb
dec
test
or
ffreep
sub
pop
xor
push
or
push
je
fsts
jmp
outsl
pop
adc
xchg
xchg
inc
loope
adc
insb
mov
loope
jmp
jae
mov
and
pusha
leave
mov
shl
mov
daa
hlt
outsl
mov
add
loop
data16
shll
stc
mov
inc
adc
mov
and
inc
in
cmpsl
stos
lret
sub
repnz
cmp
loope
cld
mov
hlt
out
xor
in
push
lcall
jmp
adc
mov
mov
mov
push
ret
int
fwait
jns
in
dec
movsl
jle
popf
mov
cld
aas
adc
add
xor
inc
inc
add
mov
incb
call
mov
push
jbe
adc
inc
ljmp
mov
fbstp
xor
aas
mov
mov
je
sbb
dec
les
adc
ja
inc
or
and
pusha
mov
adc
inc
push
adc
fwait
push
aas
test
push
in
fidivl
adc
lds
mov
and
aas
jae
xor
mov
push
sbb
fcomi
sbb
xor
push
jbe
xchg
fidivrs
and
push
and
adc
loope
aaa
push
jl
mov
in
repnz
jle
shl
cmpsl
mov
mov
mov
mov
adc
insl
mov
cmp
inc
vmwrite
daa
jecxz
mov
negb
ret
mov
mov
notb
cltd
xchg
pushf
sub
daa
mov
or
inc
jae
inc
int
insb
loop
mov
ds
imul
xchg
pop
and
cmp
in
pop
add
mov
shll
dec
xchg
in
push
popa
push
daa
in
inc
or
mov
movsb
repz
lea
inc
loop
loope
push
inc
popf
popa
mov
cmp
add
fisubrs
mov
aam
je
arpl
pop
scas
pusha
xchg
repnz
inc
adc
xchg
sub
jno
adc
adc
mov
nop
dec
mov
leave
jge
in
arpl
push
inc
xorb
das
in
push
fcmovb
insl
jne
test
adc
jle
shlb
inc
mov
push
in
cmp
xchg
xor
mov
lret
cmp
mulb
je
inc
jae
pop
mov
push
lds
pop
or
pop
jmp
aas
mov
or
xor
movsb
mov
inc
xchg
add
lret
je
mov
push
pop
mov
adc
adc
mov
sbb
mov
imul
jb
and
imul
dec
stos
into
sbb
mov
lods
rclb
xchg
mov
and
push
popa
push
dec
cmp
sbb
push
push
scas
push
jno
adc
fldt
loop
jb
in
push
cli
pop
outsb
lods
iret
pusha
rcl
pop
push
js
cmc
sub
fwait
mov
xor
mov
outsl
out
daa
rcll
daa
jo
inc
std
cmp
loop
test
movsb
inc
mov
sbb
daa
sub
sub
xchg
xor
out
jge
xchg
fcoml
cltd
lret
leave
xor
lds
jg
in
jnp
cltd
xchg
mov
cmp
push
pop
in
sub
push
lock
loopne
adc
inc
inc
xor
jno
sbb
shll
aas
mov
push
loop
outsl
fisubrs
xchg
arpl
cld
xchg
in
addr16
das
adc
xor
xor
add
arpl
dec
mov
pushl
jmp
mov
mov
or
pusha
and
movsb
js
and
mov
adc
jae
out
add
push
lock
adc
sub
push
je
and
aas
andl
xor
ret
ss
adc
xchg
idivb
loop
jecxz
dec
in
adc
stos
mov
das
lea
jns
sbb
imul
sub
aam
and
insb
jbe
stos
mov
out
inc
jmp
mov
or
xchg
loope
lcall
lods
jbe
push
clc
stc
and
loop
rclb
mov
scas
and
mov
arpl
push
aaa
mov
in
sub
lods
push
sbb
fs
int3
jae
cmp
clc
mov
iret
add
cs
or
mov
or
inc
js
test
and
es
int3
data16
sub
and
cmp
and
movsl
push
mov
jbe
cltd
aaa
enter
test
outsl
pusha
and
lahf
sub
dec
jbe
or
out
jo
roll
jb
out
xchg
push
or
rcll
pop
mov
push
mov
int
in
jecxz
xchg
dec
in
push
sbb
mov
shll
push
jo
ja
insl
jno
rclb
adc
enter
lcall
arpl
mov
mov
pop
in
jnp
pusha
bound
sbb
inc
outsl
outsb
cli
repz
flds
cmp
push
jae
jp
dec
push
icebp
mov
dec
lret
mov
fistpl
lea
xor
pop
dec
test
popf
sub
push
sbb
add
cltd
mov
pop
not
shl
out
xor
pop
inc
add
fcoml
mov
xor
insb
sbb
inc
subl
popf
in
pop
mov
addb
and
subb
sbb
lds
mov
or
adcb
int3
ss
shlb
mov
pushf
push
sbb
int
cmp
scas
sub
and
inc
dec
push
or
cwtl
in
rcll
cmp
mov
test
jne
jg
loop
and
and
outsb
cmp
std
or
mov
mov
stos
lods
or
xor
test
iret
leave
ds
sbb
popa
loop
dec
push
rcrb
jg
in
push
adc
dec
sub
and
push
loopne
cld
mov
insb
mov
mov
in
dec
or
lret
mov
popa
xchg
adc
loope
shll
jp
mov
fidivrl
aad
xchg
cwtl
jb
mov
das
sub
addr16
jns
xchg
or
cmp
mov
aas
aas
inc
cld
cmp
outsl
cmp
pop
push
nop
jns
data16
xchg
adcl
jns
adc
movb
mov
mov
mov
scas
cmp
nop
call
imul
stos
popa
mov
mov
stc
xchg
inc
sbb
and
in
jno
imul
sub
adc
mov
push
fwait
test
stc
pop
inc
imul
pop
into
add
push
repz
mov
pop
jb
ret
mov
dec
add
inc
in
add
xor
outsl
in
push
daa
pop
test
fistpl
adc
into
mov
dec
mov
or
xor
cmpsl
push
loop
adc
mov
push
sub
ficoml
leave
push
and
adc
push
xchg
mov
mov
xchg
mov
call
dec
scas
scas
inc
mov
popa
iret
repz
xor
push
fnsave
pop
mov
xchg
jl
incb
sahf
in
test
dec
mov
sub
scas
xchg
adc
les
das
xchg
dec
and
mov
out
ret
pop
loope
je
shlb
fld
inc
jbe
mov
loope
sbb
iret
fistl
test
sahf
iret
add
daa
xor
incb
mov
imul
mov
sbb
xor
and
test
ds
xor
loope
mov
out
add
loope
insl
pop
out
popf
mov
aas
out
leave
ss
mov
push
adc
adc
push
sub
lahf
stos
dec
pop
and
cmp
xchg
mov
push
loope
test
or
cmc
mov
push
dec
in
inc
in
pop
cltd
dec
mov
lea
in
push
xchg
mov
xor
arpl
inc
xor
push
shlb
and
mov
cmpsl
scas
aas
stos
rolb
push
xchg
jno
shlb
lods
ret
scas
xchg
jns
cmp
cmpsl
inc
adc
xchg
ret
push
sub
int
lret
in
int
xchg
add
fstpt
xchg
adc
icebp
fwait
or
mov
mov
mov
movsl
mov
xchg
xchg
cmp
dec
in
roll
mov
mov
stos
arpl
mov
sub
dec
and
pusha
and
js
nop
ret
jp
push
int3
cmp
and
nop
repz
inc
push
sub
mov
addr16
xor
mov
clc
lcall
aas
loop
mov
jle
ret
and
mov
sub
xchg
inc
test
int3
movsb
mov
jg
mov
mov
test
mov
mov
mov
pop
sbb
push
mov
mov
dec
fisttpl
in
pop
vpacksswb
pop
aas
andl
adc
xor
jbe
stc
sub
sub
in
ss
jns
sbb
dec
loop
pop
adc
inc
mov
imulb
loopne
inc
inc
loop
mov
mov
jg
pop
ja
cmp
call
loop
xor
enter
push
rolb
and
push
sub
mov
adc
mov
lret
arpl
cmpsl
xor
push
daa
loop
xchg
jge
push
mov
popf
insb
out
or
pop
fs
daa
or
mov
or
mov
outsb
push
rclb
fwait
cmp
add
shll
mov
jmp
loop
mov
xchg
mov
repz
sbb
mov
jne
fldl2e
and
inc
mov
les
sbb
xchg
mov
out
loop
push
ficoms
enter
enter
sbbb
push
xchg
adc
sub
dec
ret
mov
pop
xorl
xchg
fisubrs
movsl
pop
pop
and
mov
push
lret
subb
test
mov
and
sti
cmp
in
mov
sti
pop
imul
sub
andb
mov
sub
cmp
jne
insl
push
add
test
adcl
and
xor
imul
js
xor
xor
adc
sti
pop
loopne
loop
out
mov
add
push
sub
inc
dec
sub
jo
push
sub
adc
jne
push
lds
loope
ret
mov
dec
lea
and
ret
lcall
or
imul
xorb
ja
jl
xor
insb
loop
push
add
leave
xorb
dec
push
sbb
jge
xchg
jns
aas
xlat
xchg
add
inc
lods
decb
adc
xor
out
icebp
sbb
in
sbb
subb
in
or
fwait
mov
repnz
inc
lahf
leave
inc
pop
adc
pop
hlt
xor
dec
mov
xor
shrl
sub
inc
fcoms
popf
imul
mov
pop
or
jge
xchg
or
mov
mov
shlb
xchg
mov
arpl
lods
mov
shr
cmp
daa
loop
push
push
and
inc
adc
bound
mov
pop
dec
jmp
dec
js
push
mov
cs
lds
lret
xchg
sbb
outsl
mov
dec
jp
adc
std
insb
xorl
lcall
dec
sbbl
pop
aaa
pop
sbb
xchg
out
mov
pop
mov
mov
push
cmpsl
orb
xchg
adc
test
lea
mov
mov
xor
pop
mov
mov
test
arpl
mov
sbb
enter
loope
jae
xor
in
ficoml
jo
or
push
jns
or
nop
pusha
shrl
decl
test
loop
rolb
outsb
and
std
or
xchg
je
iret
and
and
movsb
pop
cwtl
daa
int3
aad
xchg
xchg
loopne
add
sbb
arpl
jae
jnp
add
outsb
stos
dec
dec
xchg
icebp
inc
stos
jge
push
cs
popa
adc
roll
leave
xor
mov
sbb
icebp
pop
xor
aas
jns
aaa
cs
dec
push
sbb
jp
rol
test
movsb
sbb
adc
and
loop
or
sub
sbb
test
cmc
fwait
mov
xor
mov
xor
mov
lock
add
push
stos
cmp
xor
call
in
jg
sub
xor
and
mov
xchg
and
lods
sub
in
enter
je
cmp
xlat
in
pop
ss
and
loop
mov
stos
push
rcll
mov
pushf
push
pusha
int
in
cmp
loop
out
xchg
add
xchg
test
and
dec
dec
pop
adc
sbb
dec
or
inc
lods
dec
adc
in
add
adc
mov
sub
mov
aas
lods
jns
inc
es
mov
adc
in
jge
dec
xor
icebp
mov
pop
pop
mov
jl
les
push
lods
dec
mov
pop
aas
cmp
xchg
subb
push
sbb
add
loopne
adc
jge
jl
rcrl
adcb
mov
dec
pop
pop
xchg
fdivrl
adc
jae
push
and
cli
mov
cltd
push
cli
pop
add
push
iret
lcall
sub
push
xorl
push
inc
mov
xor
mov
mov
mov
or
stos
mov
adc
inc
cwtl
pop
je
cmp
loop
daa
add
dec
cmp
push
pop
mov
lds
push
icebp
scas
push
add
jl
adc
loope
stos
push
out
push
jle
push
mov
adc
pop
sbb
add
shrl
sti
in
adc
iret
mov
mov
add
inc
inc
mov
and
sbb
push
mov
and
lods
inc
inc
adc
add
popa
add
bound
lea
stos
pop
sub
das
pop
sub
es
cmp
adc
add
sub
pop
in
sbb
jp
push
cwtl
jne
push
xor
movsl
sub
ror
jbe
dec
mov
adc
dec
cmp
push
je
ja
and
jecxz
imul
int
adc
and
pop
and
popf
mov
mov
mov
sahf
add
jns
outsl
adc
cmp
inc
and
roll
pop
out
inc
clc
sbb
adc
je
mov
ficomps
mov
or
xchg
cmc
adc
lds
sbb
ret
push
add
sbb
push
mov
pop
or
sub
jbe
xchg
adc
sbb
out
sub
insl
leave
add
adc
jne
loop
sub
adc
or
jo
fimuls
adc
mov
push
mov
loope
jle
iret
mov
fnstenv
dec
mov
cld
in
daa
mov
sbb
jne,pt
push
add
jnp
push
pop
jp
in
js
xchg
mov
sbbb
mov
jmp
call
cmp
xor
or
xor
rcll
xchg
jae
insl
subb
rclb
in
int
jmp
push
push
xchg
ret
cltd
in
aam
pop
loop
les
jle
cmpl
cmp
outsl
push
mov
mov
inc
lods
pop
test
in
pop
or
sbb
jnp
daa
sub
dec
mov
notb
int3
jbe
mov
repnz
shrb
aas
hlt
mov
mov
sub
jnp
xor
sti
shrl
jge
icebp
cmp
aad
mov
repnz
les
mov
in
lret
popf
add
mov
fs
arpl
cmp
inc
jns
pop
push
and
js
jmp
adc
sub
xor
push
loop
test
and
jno
sub
inc
add
fsubrs
ss
mov
cmp
stos
xchg
mov
ficompl
in
imul
xchg
pusha
mov
dec
adc
mov
push
inc
leave
sti
inc
add
fs
imul
sbb
push
cmp
lds
xchg
sbbl
xchg
cld
sbb
cmc
pop
and
mov
inc
fnstenv
dec
mov
sbb
ss
pop
jg
sub
lret
out
cmp
add
loop
data16
push
xchg
xchg
lahf
data16
pop
test
xchg
mov
outsl
sub
addr16
mov
mov
push
insl
daa
cwtl
adc
pop
lret
call
cmc
fdivrs
push
dec
in
adc
cmpb
in
loope
inc
adc
push
dec
xchg
enter
pop
out
leave
pop
repnz
aam
in
xchg
nop
push
dec
cltd
sbb
loop
in
xor
mov
mov
xchg
cmc
rcll
cmp
out
xorb
sbb
insb
xor
cld
mov
jecxz
lds
inc
sbb
pop
sub
test
insb
and
dec
push
add
aas
jno
mov
push
sbb
ficompl
imul
pop
and
push
mov
daa
ret
push
test
ds
test
sub
xor
adc
scas
or
test
mov
add
and
jne
loope
mov
pop
shll
nop
popf
sbb
push
xchg
push
loope
ret
pop
inc
inc
addr16
sti
adc
mov
outsl
mov
loop
aas
out
lcall
jo
jecxz
or
dec
sbb
mov
add
inc
in
movsl
dec
movsl
jle
cltd
sbb
mov
adc
mov
inc
jno
rcrb
xor
lahf
sbb
insb
aad
cmp
ljmp
rorb
push
mov
pop
or
push
std
int
or
dec
xor
sti
pop
addr16
mov
outsl
mov
incb
dec
push
and
mov
dec
or
repz
push
dec
sub
jmp
add
cmp
cwtl
data16
xchg
or
dec
cltd
imul
jmp
cltd
sbb
sbbl
xor
arpl
ret
icebp
pop
hlt
dec
dec
mov
sbb
das
cmp
hlt
pop
repz
xchg
rorl
push
aas
cwtl
mov
dec
cld
ss
frstor
rcl
loope
out
out
test
sbb
sti
ss
mov
loope
das
inc
xchg
inc
mov
sbb
adc
cmp
out
jb
hlt
push
fistpl
cmp
inc
xor
pop
sarl
test
clc
out
fildl
addr16
int3
pushf
mov
sbb
pop
lcall
sbb
push
sub
inc
dec
fs
mov
aas
dec
jbe
jno
cmp
sarb
arpl
loope
sub
mov
out
and
push
push
cmpsb
or
pop
movsl
fcoms
mov
aaa
jae
das
dec
sahf
sub
fsts
addl
xchg
xchg
dec
jo
xchg
inc
add
test
and
loop
push
in
jp
stc
fpatan
scas
int
pop
jecxz
mov
jmp
sub
push
sub
out
xchg
mov
loope
and
test
lcall
sub
aaa
sbb
and
add
xchg
and
pushf
push
sarb
arpl
dec
mov
lds
pop
lods
and
imul
iret
push
mul
dec
cmp
lcall
rolb
sbb
and
hlt
pop
pop
mov
pop
jne
dec
push
mov
jle
push
push
or
xchg
sahf
and
lret
sub
jmp
int
cmp
mov
mov
push
xor
mov
cmp
push
and
xchg
add
jne
xor
sbbb
ss
cmp
mov
sbb
mov
sub
pop
sbb
push
jne
adc
mov
mov
pop
call
in
cld
popa
loopne
popa
cmpsl
in
addr16
push
pop
dec
in
mov
sbb
test
mov
and
dec
inc
es
hlt
jp
shr
mov
push
arpl
push
pop
xor
aas
ss
or
loope
popa
popf
loop
xor
sbb
jl
loop
ds
push
pop
hlt
pop
push
ficoms
imul
or
and
out
les
mov
inc
and
pop
cmpl
inc
pop
pop
mov
orb
rcr
mov
in
aaa
stc
push
xorb
loop
push
sahf
push
lcall
lods
push
cmp
mov
vmwrite
pop
jo
ret
xchg
jp
cltd
insb
xor
pop
inc
daa
cmp
loop
add
inc
loope
sbb
inc
mov
dec
sub
add
xor
xchg
pop
leave
push
mov
movsb
loop
andb
mov
xlat
jns
pop
xchg
movsb
popf
das
cltd
xchg
inc
xor
mov
imul
fucom
int
das
in
out
aaa
mov
cmp
xchg
jp
out
sar
dec
jae
mov
push
sub
sarl
mov
xor
xor
imul
sar
mov
imul
loopne
cmpsl
and
xchg
and
insl
rolb
cmp
lods
pop
push
and
push
cltd
inc
outsl
js
stos
dec
dec
cmp
or
push
call
scas
loope
jbe
jns
inc
shll
xchg
adc
xchg
je
test
clc
leave
stc
rcrb
adc
cmp
fst
mov
jo
cmc
or
in
xchg
in
dec
inc
mov
mov
push
imul
loopne
in
and
inc
shr
dec
cs
mov
loope
fcmovnbe
push
push
js
int
mov
loop
jb,pn
mov
and
pop
and
fs
mov
setbe
mov
push
fadds
sub
cmp
push
ljmp
sub
rdtsc
mov
stos
dec
adc
sarb
and
nop
lret
popw
jmp
movl
mov
jle
lds
cmp
in
sbb
shrb
leave
mov
inc
inc
mov
mov
sub
rcll
sarl
stos
imul
cmp
and
xor
mov
call
jl
add
mov
lods
fsubr
xor
mov
lcall
lret
into
adc
jo
fstpl
addb
cmpsl
mov
xchg
mov
shll
or
pop
xchg
mov
int
cld
mov
sbb
jg
cmp
or
loop
xchg
jl
imul
jge
mul
cmp
stos
rorl
cmp
adc
aam
mov
fwait
arpl
decb
dec
dec
sahf
inc
sbb
xor
push
push
fwait
ds
or
aaa
lea
std
in
mov
push
bound
mov
loop
in
ljmp
loope
lahf
addr16
out
movsb
mov
sbb
movsb
test
shll
jbe
pusha
jbe
shrl
jl
jbe
stos
or
inc
xchg
lods
sub
in
ret
pop
jns
mov
loope
sbb
mov
push
mov
lret
lock
pop
sti
dec
mov
fidivl
sbb
out
pop
aad
or
sti
dec
xchg
int3
inc
or
xor
dec
sahf
jle
movsb
mov
xlat
test
cs
mov
xrelease
pop
lcall
push
pop
mov
push
push
mov
in
xchg
jl,pn
std
nop
andb
sbb
mov
jbe
sbb
sub
hlt
iret
bound
sub
aad
rolb
dec
inc
or
es
test
mov
sbb
pusha
or
mov
lret
movsl
out
mov
cmp
fisubs
pop
test
push
cmc
outsl
mov
mov
xchg
subb
and
push
cmp
ds
jmp
and
lret
lds
mov
mov
mov
inc
jbe
mov
leave
cmp
cmpl
mov
jnp
adc
js
shll
inc
push
sbb
push
mov
cmp
nop
inc
inc
pop
push
xor
aas
insb
clc
dec
jne
imul
out
test
loope
out
scas
repnz
out
adc
loop
mov
mov
or
xchg
sbb
aas
or
out
cmp
inc
mov
and
and
jmp
outsb
sub
jne
int
pop
outsb
xchg
cmpsl
sub
and
lock
lret
inc
gs
insl
ret
dec
stc
xor
dec
or
loope
pop
sub
adc
mov
add
mov
rcl
aaa
or
mov
and
loop
leave
mov
ss
int
out
ja
int
cltd
jno
push
and
mov
adc
stos
mov
cld
lds
sbb
cltd
testb
iret
nop
sbb
shrl
cmpsb
cmp
mov
loope
aaa
inc
cmc
dec
add
lret
push
cmpl
outsl
aam
out
xchg
or
adc
lret
mov
pop
data16
call
jne
xor
jb
cmp
int
sbb
adc
arpl
lock
push
jae
push
in
add
sub
push
and
ss
cs
sarl
les
xchg
scas
mov
stc
push
test
std
adc
cltd
in
cmp
daa
pop
xlat
xor
nop
and
adc
pmulhuw
xchg
pop
in
stos
adc
and
sti
imulb
xchg
mov
push
mov
pop
cmc
ss
sti
movsl
pop
lcall
push
mov
sub
add
je
aas
out
lock
xchg
mov
cmp
mov
pop
add
inc
mov
jno
xchg
es
dec
or
cld
mov
inc
inc
xor
fcoms
sbbl
das
nop
and
dec
mov
test
std
lds
push
mov
fcmovbe
push
xor
and
in
ret
adc
lret
and
mov
pop
loope
dec
lret
data16
mov
jbe
xchg
ret
stos
sbb
in
pusha
mov
and
sbb
sbb
mov
add
fwait
add
and
cmp
push
and
add
imul
fs
lods
in
daa
or
pop
xchg
pusha
mov
test
xor
idivb
je
fistl
or
dec
ss
cmpsl
fidivrs
loope
test
popa
mov
loop
rcll
fisttpl
cmp
out
sub
sub
pcmpeqd
test
sbb
loop
sbb
inc
mov
and
adc
test
ljmp
ret
push
and
fcompl
or
sbb
mov
dec
jmp
es
xchg
dec
dec
adc
aaa
out
jle
loop
std
cmp
fs
adc
mov
mov
pop
lret
fldln2
xor
and
push
popa
add
sub
leave
adc
mov
mov
cltd
scas
pop
dec
insl
in
ss
outsl
dec
cmp
shlb
mov
pusha
cmp
pcmpeqw
divb
loop
out
mov
vcvtdq2ps
jnp
incb
adc
fidivl
cmpsl
frstor
or
bound
cmpsb
jp
stos
fwait
arpl
scas
fistl
cmp
push
enter
jo
sbb
pop
push
add
mov
int3
insb
push
cs
sbb
xchg
cmp
cs
push
mov
call
mov
mov
aam
adc
in
jp
pop
ss
in
into
adc
mov
xchg
ret
cld
sub
push
adc
pop
lea
jnp
aas
subl
push
push
and
mov
sbb
gs
mov
and
loop
inc
stos
push
dec
inc
add
daa
mov
imulb
adc
mov
cmpsl
aam
insl
mov
inc
lret
inc
fistl
sub
aaa
cmp
clc
mov
pop
sbb
sbb
mov
lgs
inc
iret
inc
nop
loop
mov
ja
cmp
pop
xchg
cwtl
in
aas
in
pop
sbb
out
enter
dec
push
and
adc
jno
and
jg
stc
in
cmpl
mov
cmp
sbb
outsb
ja
push
jne
and
in
or
sub
xchg
adc
xor
mov
xchg
int
xchg
pop
mov
dec
mov
push
ss
imul
add
jp
fcmovnbe
xchg
dec
mov
and
mov
int
cmp
pusha
andb
sub
loope
stc
push
sti
fsubl
in
cmp
xchg
push
mov
mov
loopne
mov
nop
call
push
pop
pop
and
pop
fwait
and
or
aam
xchg
mov
lods
imul
adc
int
arpl
push
scas
in
mov
add
add
xor
sbb
pop
push
cmpsl
cwtl
int3
out
xor
inc
mov
in
outsb
add
mov
jp
pop
xchg
push
jne
gs
mov
std
push
sub
shrl
xor
add
adc
imul
or
sub
arpl
jecxz
jmp
ret
mov
mov
xchg
push
cmp
aam
pop
inc
or
aad
leave
outsb
cmp
in
in
mov
xor
push
cmp
adcw
les
add
push
mov
subb
and
int3
popf
xchg
mov
ds
jns
push
imull
cmpsl
pop
frstor
push
leave
adc
push
sarb
int
bound
mov
xor
xorb
fs
dec
sub
lret
inc
fidivl
ret
in
sub
jp
popa
in
lret
sbb
adc
pop
push
loope
sbb
xchg
lock
repnz
addr16
seto
in
std
pop
mov
in
cld
cmp
sbb
notb
or
scas
jno
add
add
push
push
in
or
pop
or
sahf
mov
inc
scas
shlb
mov
xor
cmp
bound
stc
aas
sbb
pop
jl
lcall
dec
gs
cltd
xor
mov
outsl
movsb
or
out
rclb
testb
and
movsb
adc
push
push
rcl
xchg
daa
jnp
cmpsl
pop
inc
adc
push
pushl
xchg
gs
ljmp
and
mov
inc
mov
xor
stc
dec
mov
adc
scas
aas
cmp
add
enter
cmp
sbb
sbb
ret
js
mov
shlb
jns
dec
insl
inc
sbb
lcall
push
insl
pop
xor
push
rcl
push
sub
stc
fld
push
enter
aad
mov
call
aas
jo
adcl
cmp
insl
inc
lret
adc
xor
sbb
in
add
test
cmp
mov
add
mov
mov
in
lea
push
jg
cmp
cmc
movsl
pop
mov
sbb
div
rcrb
jo
test
cwtl
mov
mov
adc
push
pop
cltd
loope
aaa
pushf
mov
je
push
repz
and
and
test
inc
mov
push
rdpmc
adc
es
insb
dec
aaa
out
movsb
jecxz
push
mov
test
int
dec
in
xor
loope
adc
mov
out
ljmp
adcl
xchg
loope
ret
mov
addb
jp
stos
call
pop
adc
lret
loop
mov
add
sarl
outsl
sbb
mov
xchg
inc
and
loop
adc
or
xchg
pop
jno
lods
inc
outsl
mov
lahf
sbb
lahf
mov
mov
lahf
adc
psubq
outsl
ret
aas
sub
stos
or
shl
movsb
mov
incl
or
movswl
sbb
jns
decb
lods
pop
dec
pop
fdivl
cmp
test
cltd
jb
ss
fnstsw
ljmp
out
stc
fwait
dec
xchg
daa
push
aaa
cmpsb
mov
shl
sbb
mov
mov
xchg
cmp
loop
cmp
in
ficoml
and
add
loop
push
cmp
fstps
pop
shl
clc
mov
sbb
dec
das
mov
mov
jmp
aas
pop
movsb
call
mov
lcall
into
xor
xchg
cmp
outsb
int
insb
stc
mov
lods
movsl
inc
lret
shll
xchg
inc
dec
insb
lret
pop
cmp
ficompl
push
ds
ret
add
push
sub
hlt
jb
and
inc
repnz
shrb
sub
xchg
jmp
mov
pop
popf
dec
push
inc
sbb
test
jb
dec
and
lahf
jecxz
add
ds
sbb
and
dec
les
or
lret
inc
push
shr
push
mov
pop
mov
cmp
cwtl
mov
in
mov
cmp
mov
mov
cmp
test
push
int
dec
mov
adc
dec
push
sub
sub
mov
loope
shl
or
mov
nop
mov
mov
mov
mov
jle
adc
mov
lods
sub
sub
dec
push
cmp
lds
xchg
push
scas
das
xchg
ss
pop
dec
iret
lods
xchg
dec
outsl
lcall
loopne
jge
fnsave
or
cmp
dec
xor
sbb
and
adc
adcb
mov
or
aad
add
adc
lret
push
cmp
lods
pmulhuw
and
fists
pop
in
insb
jae
loope
movsl
adc
pop
in
add
inc
add
leave
inc
adc
iret
jae
lret
mov
lock
in
jp
push
mulb
push
sub
push
scas
adc
xor
cltd
pushf
and
imul
xchg
pusha
add
bound
popa
pop
inc
push
outsl
add
jmp
fdivrl
lret
and
sub
mov
cltd
lcall
or
lods
clc
sub
pop
aaa
out
pushl
jmp
daa
xchg
mov
mov
xor
stos
dec
xlat
pusha
notl
mov
mov
mov
pop
mov
adc
in
jecxz
lods
pop
sbb
insl
mov
pusha
movsb
data16
ljmp
jmp
add
imull
nop
dec
xor
pop
add
xchg
rcll
clc
sbb
jecxz
mov
jae
mov
pop
js
ja
hlt
hlt
divb
into
negl
fadds
xchg
xchg
and
cmpsl
and
ds
in
sub
xor
add
gs
cmp
in
push
int3
cltd
rclb
mov
cmpsb
fimull
xchg
xchg
in
push
jge
mov
std
cmp
mov
jo
stc
data16
inc
sub
cmp
xorb
pand
mov
xchg
or
sbb
out
push
and
lds
mov
loop
stc
push
mov
pop
loop
push
adc
xlat
mov
in
xchg
xchg
xor
add
sbb
rcr
dec
ss
je
loope
cmp
and
divb
nop
add
scas
subb
pusha
rorb
pop
stc
stos
fmull
sarb
rol
xchg
and
sahf
xchg
cli
iret
scas
xorb
jle
ficompl
aam
int
fwait
sbb
sbbb
pusha
ret
imul
add
or
test
clc
addb
mov
xor
jne
cltd
mov
sbb
inc
daa
daa
mov
sub
mov
pop
and
mov
xor
mov
push
daa
inc
mov
or
add
mov
sub
out
mov
mov
adc
sub
fimuls
mov
xchg
outsl
loope
popa
sbb
push
int3
in
mov
aad
cmp
xchg
xorl
cld
icebp
daa
nop
jns
pop
lods
int
repnz
int
push
jns
cmpsl
stc
fs
outsb
jne
test
inc
or
xchg
sbb
insl
mov
lods
notb
out
outsb
adc
shlb
out
std
orl
fcmovbe
lahf
imul
sub
xor
push
xchg
push
push
imul
xchg
and
dec
sarb
xor
sub
mov
leave
pop
xor
sub
iret
xor
lret
sahf
mov
sub
pop
inc
test
cld
imul
mov
jne
adcb
test
pop
andl
adc
repnz
fcoms
mov
xor
push
dec
cmp
sbb
inc
cli
add
xor
mov
out
mov
loopne
aas
daa
adc
sub
addl
add
mov
push
imul
sbb
push
popf
in
jecxz
push
int3
call
xor
mov
cltd
decb
xorb
pushf
lock
jecxz
stc
jp
leave
jns
sbb
fisubs
mov
cs
xor
xor
repnz
loope
incb
pop
or
psrad
stos
test
test
or
cmp
lds
push
jg
mov
xor
inc
sahf
mov
adc
loope
and
jb
ret
xchg
push
jno
cltd
sub
push
push
inc
lds
mov
and
xchg
arpl
add
leave
mov
negb
mov
lods
movsl
push
fcompl
xchg
dec
push
mov
in
xor
mov
aam
mov
push
out
lcall
ss
and
inc
shl
inc
mov
sbb
push
adc
les
adc
xchg
xchg
loope
mov
das
push
ret
int
sbb
lods
insl
ja
loope
jne
mov
sbb
dec
or
iret
jns
jl
mov
mov
mov
mul
push
fdivrl
or
mov
fisubl
mov
adc
or
jmp
add
loope
imul
add
cmp
sbb
movsl
sbb
movsb
xchg
leave
push
xchg
cmc
or
pop
dec
add
es
pop
mov
ret
loop
test
xchg
mov
xchg
pop
mov
adc
mov
mov
fstpt
and
outsl
into
shll
adc
stos
mov
loope
mov
popf
arpl
pop
gs
adc
mov
xor
or
xchg
mov
test
movsl
add
aad
or
jge,pt
push
adc
das
cmp
xor
cmp
icebp
sub
cmp
mov
nop
lods
loop
cmp
cs
in
or
imul
xchg
mov
fcomps
add
lcall
adc
in
mov
and
cmp
loop
and
cmp
jno
out
int3
mov
xchg
ds
jge
mov
jecxz
mov
js
sub
pop
fistl
adc
xchg
jmp
aaa
loop
mov
addr16
out
sbb
cltd
repz
mov
aad
push
int
in
in
int
loopne
push
jne
mov
dec
movsb
fstl
push
int
mov
bound
pop
or
std
push
addl
inc
inc
and
push
lods
inc
lock
movsb
nop
into
mov
adcl
adc
loope
insb
out
into
sbb
ss
adc
aas
ds
shlb
mov
mov
pop
xor
f2xm1
inc
subl
loopne
pop
inc
xchg
add
add
pushf
test
xchg
xchg
aas
lahf
sub
jno
mov
inc
mov
push
rclb
add
pop
cwtl
xchg
and
je
or
mov
fmulp
pusha
jecxz
xchg
sub
sbb
mov
adc
js
in
scas
adc
add
adc
add
imul
pop
outsl
adc
add
inc
xor
or
jecxz
mov
jno
clc
xor
push
xchg
fmul
inc
sbb
add
in
ret
inc
daa
ds
stc
push
out
ret
ljmp
loope
ds
jp
mov
insb
shll
adc
sbb
mov
or
pop
sbb
out
out
sub
pop
mov
loop
xor
lds
push
sbb
mov
xor
or
dec
out
dec
test
movsl
and
cmp
jns
push
xor
dec
in
jge
or
xchg
addb
rcl
movsb
mov
push
int
sub
cmc
adc
cmp
popf
sub
push
popf
out
cld
imull
push
cmp
out
mov
lahf
popa
cmp
add
call
aas
xor
jp
mov
aaa
loop
and
lods
lret
mov
sub
shr
pusha
pop
pop
in
aad
in
loop
ret
push
mov
outsb
adc
loop
in
pushf
pop
cltd
mov
jae
outsl
jno
add
sub
aaa
or
add
scas
loope
pop
and
fs
or
cltd
iret
dec
jne
dec
push
outsl
xchg
push
xchg
loop
ret
cmc
sti
xchg
adc
adc
or
pop
fwait
jae
push
sbb
repnz
shlb
imul
sub
sub
sarl
pop
inc
out
sub
and
dec
out
xor
daa
int
push
dec
and
pop
leave
leave
aas
mov
fbstp
cs
pop
push
lret
push
and
ret
outsl
fcomp
cmp
aad
icebp
pop
cld
inc
pop
clc
fdivl
add
xlat
cmp
pop
mov
mov
sbb
rorb
shrb
mov
loope
and
or
sub
xchg
rorb
or
xchg
rcrb
sbb
loop
andb
adc
ret
xchg
adc
cs
icebp
add
xchg
dec
push
and
push
shl
sbb
adcb
scas
mov
mov
inc
pop
cli
mov
push
stos
adc
xor
xor
call
inc
lret
aas
addr16
pop
data16
pop
mov
out
mov
cmpsb
movsb
fs
sbb
pusha
jne
out
insb
fildl
adc
icebp
mov
dec
xor
mov
icebp
lods
sub
lret
xor
int3
dec
cmp
xchg
mov
pop
pop
and
cmp
out
loop
repz
cmp
mov
mov
adc
loope
mov
xor
mov
dec
xchg
add
into
loopne
adc
lret
mov
push
xor
adc
sub
lahf
mov
clc
movsl
or
roll
pushf
mov
lcall
jle
and
fdivs
ror
mov
and
ret
imul
or
add
add
inc
cs
aam
incl
add
jbe
mov
jp
adc
call
push
out
pop
fwait
ljmp
dec
xor
xor
fdivrl
cltd
les
adc
add
lock
add
or
dec
cmp
xor
push
mov
imul
inc
sub
jecxz
int
xchg
pushf
mov
dec
ss
cmp
aas
cmp
adc
cmpsl
iret
lcall
mov
movsl
adc
mov
dec
push
or
mov
daa
hlt
sbb
fidivs
outsl
mov
fwait
loope
aaa
jbe
clc
xor
xchg
insb
pop
sahf
mov
xchg
inc
push
popa
xor
push
jne
xchg
push
imul
add
adc
jl
in
imulb
subb
test
cmpsl
nop
pop
or
xor
xchg
mov
mov
xor
xchg
sbb
sbb
cmp
cmp
rcll
aas
sbb
daa
dec
jno
and
arpl
push
aam
sahf
daa
push
sbb
mov
out
pop
nop
lcall
in
mov
xchg
push
scas
out
loopne
add
pop
inc
fcmove
in
test
orb
push
ret
sub
sti
hlt
sub
in
inc
jl
sti
push
cmp
sbb
in
sbb
add
and
outsb
or
mov
xor
pop
cmpsl
mov
int
movsb
stc
pop
scas
push
sbb
jge
adc
xchg
inc
and
inc
int3
xchg
faddl
pop
adc
ficoms
dec
adc
jne
arpl
imul
add
stc
sub
xor
clc
and
inc
lcall
stos
pop
cmpsl
xchg
test
pop
sbb
movsb
sbb
cs
cltd
loope
hlt
or
inc
push
inc
mov
and
insb
rclb
sub
push
shrb
mov
or
push
daa
pushf
out
loop
mov
sub
push
loopne
dec
lods
xor
and
add
jno
popa
loope
cmc
sub
pop
loop
daa
xorb
shlb
cs
lret
mov
xchg
or
jno
movsw
icebp
sbb
dec
xchg
aas
adc
out
xchg
cmpsl
mov
xchg
mov
popf
xchg
sbb
push
cmp
pop
daa
push
jne
add
mov
ret
stos
movl
insb
iret
xor
jg
push
rorl
dec
push
in
out
push
fiadds
mov
push
jne
aam
mov
fidivrs
and
cmp
pop
cmp
push
jecxz
bsf
mov
pop
aaa
dec
mov
test
test
lret
xchg
or
clc
sbb
dec
mov
xlat
cltd
andb
cs
push
push
sub
pop
lods
sbb
xor
mov
jne
int3
lds
and
loope
mov
insb
sub
sbb
jg
cmpb
inc
popf
xchg
inc
xchg
in
addr16
sbb
xchg
test
stos
in
xor
enter
mov
fs
adc
stc
xlat
jmp
inc
es
arpl
sub
in
sarl
dec
mov
loop
add
jmp
loope
pusha
loope
aaa
or
mov
daa
repnz
sahf
xchg
je
jg
sub
cmp
sub
ljmp
daa
pushl
fldenv
adc
pop
mov
push
sub
scas
shl
dec
jecxz
cmp
data16
fsubs
cltd
adc
mov
scas
or
ret
psraw
out
and
bound
aam
lock
mov
xchg
fsubrs
adc
ss
jle
das
push
imul
or
fisubrl
or
xchg
popa
sub
das
push
std
lcall
jmp
or
cld
fstps
jns
xchg
sti
adc
cmp
stc
mov
lcall
fsubr
mov
jb
fcomps
sbb
out
repz
in
scas
and
lret
adc
dec
xchg
andb
mov
sub
imul
mov
sar
mov
fdivs
lds
mov
dec
lock
test
push
sti
in
lods
cs
add
xor
and
add
adc
stos
xorl
movsl
xor
movsb
push
fdivr
sub
push
shrb
cmpsb
xchg
decb
shl
sub
sbb
fwait
jg
sbb
pushf
sub
ret
mov
fisubrs
jo
xor
ss
lea
mov
xchg
or
dec
push
sarl
and
add
sub
test
xchg
loop
sbb
mov
outsl
mov
mov
clc
add
and
das
cmp
mov
ds
fwait
mov
xor
adc
aam
int
mov
in
mov
fsub
out
and
das
xor
imul
frstor
inc
outsl
dec
cmp
mov
sbb
arpl
adc
dec
mov
movsl
test
test
ret
ds
push
fwait
popl
sti
xor
stos
jmp
cmpsl
xchg
mov
pop
mov
sahf
push
in
xchg
loope
clc
clc
sbb
mov
push
je
sbb
imul
int3
lret
mov
push
les
xor
jo
sti
mov
xchg
daa
icebp
inc
js
push
pop
jo
faddl
add
fdivrp
outsb
and
les
arpl
dec
mov
pop
jno
mov
imul
sbb
pop
add
dec
xchg
push
stos
stc
loope
jb
jns
testb
pop
adc
xor
mov
jno
movsl
xor
and
jp
mov
aas
outsb
add
fsubl
inc
cwtl
sub
push
enter
shll
jl
fisttpll
mov
loope
movsb
sbb
bound
jmp
inc
cmp
les
adc
insl
push
divb
cmc
fwait
and
mov
jmp
testb
fs
mov
and
out
or
imul
mov
sub
loope
jo
mov
cmpsl
shrb
sbb
test
sbb
pop
rorl
xchg
out
sbb
jo
movsl
xchg
loope
lods
inc
jae
out
dec
scas
loop
xchg
mov
and
inc
lods
sub
mov
and
insb
aas
sub
lret
dec
mov
or
ret
test
or
inc
movb
mov
test
incb
push
jns
sarb
mov
gs
mov
inc
mov
mov
push
jle
xor
std
jbe
pop
aaa
cmp
fdivrs
push
rcrb
xchg
fs
lods
insb
sbb
mov
aaa
decb
push
cmp
push
xor
cmp
mov
subl
push
aas
loop
xchg
aam
stc
or
les
push
ds
pop
leave
cmp
dec
loope
pop
out
adc
xchg
pop
movsl
pop
mov
sub
test
dec
inc
mov
adc
subl
cmp
out
jle
or
sbb
xor
sbb
sub
sbb
out
mov
mov
add
cltd
test
ss
pop
and
stc
mov
mov
xchg
loop
pop
repnz
and
sbb
enter
aad
cmc
inc
sub
loop
jae
adc
sbb
mov
out
or
pop
fmul
movsb
sbb
pop
outsb
dec
inc
sarl
or
and
cmp
jno
mov
rolb
test
pop
lods
cltd
lahf
xchg
in
jl
test
pop
adc
les
xchg
lods
in
mov
dec
loope
cmp
fnstsw
dec
xorb
cmc
rolb
lods
inc
jl
and
mov
mov
inc
pop
fistl
or
mov
pop
es
pop
rcl
repz
imull
pop
mov
or
shll
int
adc
or
push
ret
mov
add
int
pop
xor
ret
outsb
loope
test
and
in
mov
sbb
and
test
out
push
xchg
leave
mov
jecxz
inc
out
imul
xorb
dec
xchg
data16
jg
or
fs
out
xchg
or
pop
les
jecxz
cmp
mov
loope
test
inc
mov
imul
pushf
imul
push
dec
xor
cwtl
xor
mov
sub
dec
xor
cmp
repz
test
movsl
add
into
jo
mov
shll
in
adc
mov
push
outsl
sbb
arpl
subl
dec
adc
lods
test
xchg
push
xchg
ret
cwtl
sbb
rcrl
out
cmp
mov
pop
xchg
aad
jbe
fwait
cmp
hlt
and
cltd
daa
dec
lods
inc
addl
dec
inc
push
mov
mov
mov
subb
loope
jecxz
pop
cli
imul
or
das
inc
andb
push
shl
mov
fs
xor
cmpsl
pop
sti
rolb
shl
aad
add
test
in
lahf
or
push
shl
inc
add
sti
lea
jbe
xor
in
xchg
out
roll
in
into
stc
int
cmpsb
stc
hlt
rcrl
and
jg
adc
fst
scas
sbb
repnz
rcrb
loop
out
pop
pop
mov
pop
notl
shl
jl
in
bound
jbe
sti
fiaddl
nop
mov
das
mov
sub
aam
clc
mov
xor
outsb
ret
xchg
mov
xchg
test
adc
repz
sbb
mov
outsb
fwait
scas
mov
in
outsb
rcrb
icebp
cmpsb
jle
and
pop
cmpl
call
dec
dec
sub
fstpt
test
inc
test
mov
dec
das
daa
scas
in
sbb
and
and
repz
xchg
cmpsb
or
xchg
xchg
mov
fistl
adc
adc
mov
insl
adc
xor
ljmp
leave
jb
aad
mov
loopne
and
xchg
push
imul
mov
loope
and
rclb
in
xchg
orb
pop
sub
cmp
or
inc
adc
out
xchg
push
lock
inc
sub
push
mov
xrelease
sbb
divl
sub
les
xor
or
mov
cmp
pop
mov
mov
out
aas
mov
scas
push
adcb
mov
sub
out
jb
emms
adc
adc
dec
or
std
inc
pop
mov
and
mov
jno
sti
rorl
loop
lret
call
push
and
sub
or
cmp
daa
mov
sti
push
adc
std
and
push
daa
mov
push
rcl
loop
stc
in
outsl
call
imul
push
dec
inc
add
insl
popa
in
repnz
push
in
or
push
push
mov
cmp
and
inc
add
pop
stos
daa
scas
push
lock
test
in
and
rcpps
push
xor
mov
mov
and
in
std
out
jns
mov
ret
fs
or
ret
daa
inc
jb
in
mov
mov
lock
ljmp
sub
mov
cmp
mov
jecxz
fcmovnu
and
push
loop
stos
push
clc
sbb
mov
xchg
gs
dec
add
stos
pop
insl
roll
loop
iret
mov
adc
movsb
mov
dec
mov
sar
es
fldenv
cmc
xchg
add
mov
add
sub
adc
stos
and
in
ss
mov
rorb
outsl
in
out
out
imul
nop
push
enter
hlt
sub
mov
jge
adc
mov
cmpsb
mov
jno
cld
mov
jg
push
mov
mov
adc
stos
enter
or
loop
mov
adc
dec
cmpsl
aad
ja
rol
sbb
push
pop
inc
in
outsl
push
xchg
push
push
rol
lea
mov
inc
fldcw
ret
in
xor
adc
mov
adc
shl
push
je
push
sub
push
repz
inc
test
aad
xchg
mov
xor
loope
test
pop
sub
repz
pop
insb
push
inc
xor
and
rolb
add
shl
xchg
sbb
sarl
pop
pop
mov
jb
push
pop
xor
shl
jb
imul
leave
call
pushf
or
rcrb
aad
mov
outsl
adc
shl
setg
mov
dec
xor
roll
popf
jno
mov
aaa
mov
add
push
sub
imul
mov
cmpsb
in
lods
push
stos
sahf
jns
xor
mov
movsb
les
jno
sbb
xor
mov
jecxz
adc
fistps
pop
cmc
pop
cltd
test
ss
mov
mov
iret
nop
push
cld
in
testl
in
mov
das
sub
addr16
inc
sub
aas
rol
stc
cmp
pop
addr16
je
test
xor
xor
jno
push
orb
xchg
cmpsl
int
pop
cltd
cmp
and
xorl
xchg
cwtl
inc
in
xchg
jnp
ret
inc
sbb
pop
cmpsb
and
push
mov
aas
cmp
das
and
fildl
jo
xchg
adc
aas
mov
jno
jb
mov
pop
adc
in
add
insl
sbb
loop
and
cltd
xor
repnz
cmpb
out
inc
test
mov
pop
or
inc
mov
imul
lds
xor
push
sbb
cs
in
ljmp
testl
sub
jmp
and
ss
push
adc
inc
repnz
adc
xchg
pop
loop
std
es
mov
mov
xor
fstl
icebp
jne
mov
mov
mov
pop
and
outsl
push
jecxz
inc
xor
test
adc
ret
xchg
inc
xor
pop
mov
shrb
int3
xor
sti
cmp
mov
loope
stc
jg
jae
mov
arpl
adc
cs
xchg
mov
loop
jbe
sbb
and
mov
insl
stc
subb
mov
les
popa
out
pop
mov
cmpsl
pop
jns
mov
and
inc
roll
dec
out
sub
lock
call
jmp
in
mov
in
scas
lea
clc
adc
lret
sub
orb
enter
pop
shll
fs
add
ss
jmp
arpl
shr
mov
das
dec
sahf
shll
xchg
xchg
and
mov
pop
loop
lods
mov
sub
int3
inc
mov
mov
loop
push
mov
push
insl
nop
adc
dec
mov
stos
add
jbe
add
mov
add
mov
jp
xchg
imul
std
jno
mov
loop
aaa
xchg
sbb
mov
adcb
lcall
or
xor
in
pop
lods
mov
mov
push
outsb
mov
push
int
xlat
push
in
and
push
mov
push
ds
loop
loope
daa
das
fstpl
in
ffree
push
xchg
cmc
pop
cmpl
insl
dec
and
or
scas
and
sub
imulb
adc
ret
orl
mov
fmulp
rorb
xchg
sbb
clc
imul
jecxz
orl
or
test
int3
dec
cld
cmpsb
xchg
sti
ljmp
lods
and
xor
dec
xchg
mov
add
nop
cmpsl
or
ds
test
adc
adc
sub
fwait
xchg
adc
mov
pop
jmp
cmp
push
adc
inc
and
loop
nop
out
inc
sub
sbb
xor
fistpl
or
mov
xorb
popf
add
mov
and
mov
aas
iret
mov
enter
add
adc
in
lods
xchg
in
sbbb
stos
and
pop
add
sar
xor
xor
sahf
pushf
stc
cmpsl
gs
iret
jbe
cwtl
cmp
stos
xor
cmp
mov
fwait
push
xchg
outsl
xchg
scas
mov
jl
add
arpl
cltd
les
testb
fistl
je
bound
daa
fmull
xor
mov
push
arpl
mov
subl
out
repz
xor
fildll
arpl
loop
loopne
mov
popf
xchg
mov
mov
mov
xor
sbb
lods
in
ret
pop
test
outsb
dec
ret
into
int3
inc
pop
shr
jle
xchg
das
inc
mov
fnstcw
add
cs
pop
xchg
adc
cmpsl
push
xchg
outsl
pop
nop
mov
ds
adc
cmp
xor
and
push
pop
mov
punpckhdq
sub
xchg
xchg
sbb
es
dec
aaa
mov
nop
push
test
cmp
loope
xlat
imul
xorl
mov
jmp
loop
push
mov
sub
ljmp
ljmp
scas
and
lods
mov
jbe
cld
sbb
notb
rcll
lahf
xor
mov
lds
fstpt
push
adc
mov
sbb
mov
pop
xor
cltd
jae
addr16
mov
add
mov
xchg
loope
ret
sbb
lcall
dec
dec
xor
popf
xchg
out
out
jbe
and
test
leave
sbb
popf
adc
ret
sub
cltd
je
mov
push
test
adc
xor
jns
mov
dec
mov
rolb
add
xor
mov
mov
inc
ret
rcrb
mov
sub
mov
xor
jns
call
loop
iret
dec
sbb
inc
shrl
out
sbbl
sbb
fldenv
cmp
sub
xorl
push
int3
aas
pop
push
in
adc
dec
sbb
movsb
dec
dec
lcall
cmp
jp
loope
popa
add
lods
in
addr16
bound
pushf
or
loope
cli
imul
or
icebp
adc
and
int3
mov
cltd
adc
ljmp
lock
jne
cltd
xor
sub
and
adc
mov
inc
xor
lret
sbb
sub
out
ss
mov
xor
mov
fldl
les
push
loop
test
jecxz
xchg
loope
in
cmpsl
cs
or
push
push
pop
stc
mov
pop
repnz
mov
push
and
fmul
pop
int3
xor
and
loope
xor
inc
into
add
add
xorb
iret
xchg
icebp
lret
out
dec
nop
adc
mov
loop
aas
pop
mov
push
and
inc
repnz
inc
decb
fnstcw
mov
insl
push
jbe
imul
xchg
cwtl
adc
mov
hlt
mov
addb
fwait
jo
rclb
inc
insl
bound
cmp
loop
out
xchg
ljmp
push
and
mov
mov
sbb
xchg
pop
adc
repnz
push
aaa
imul
mov
or
mov
pop
pop
mov
push
jl
mov
adc
rcrb
outsb
arpl
pop
arpl
pop
icebp
cmp
cmp
inc
mov
push
sbb
jae
scas
cmpsb
loop
insl
lea
jbe
sub
loope
sbb
pushf
subl
add
jb
jmp
in
test
rcrb
and
adc
inc
rcr
add
loop
adcb
cmovb
adc
mov
push
addl
xchg
int3
mov
gs
aam
cltd
jle
aad
sub
dec
imul
cmp
or
lods
cltd
test
ds
stos
inc
loop
outsb
addb
jae
add
cmc
fistps
icebp
xor
shll
inc
inc
pop
loop
add
push
cmpsl
iret
clc
add
cwtl
int
pop
out
cmp
pop
sbb
jne
and
pop
cmp
mov
je
dec
mov
lock
inc
loop
fsqrt
idivl
pushf
mov
addr16
pop
loope
movntq
lock
js
mov
xchg
fadd
mov
add
cmp
negl
push
in
and
repz
cmp
repz
into
adcb
inc
lret
mov
roll
cmc
pop
push
push
rorb
das
aas
enter
xchg
xchg
xor
jns
femms
push
push
sbb
push
add
jl
insb
dec
lods
jle
cmpsb
cmp
popf
push
leave
inc
jl
lcall
movsb
jnp
cmp
fwait
test
stc
add
xor
ss
adc
push
cmp
sub
push
stos
pop
leave
test
mov
fwait
adc
test
fsubl
push
cmp
mov
inc
cmp
loop
jecxz
xchg
push
dec
jp
add
and
insb
cmp
sub
or
cmpsb
cmp
and
rorl
xchg
mov
sub
clc
xor
outsl
push
xchg
jno
es
mov
and
mov
cmpsl
fmuls
xor
pusha
cli
dec
mov
ss
push
or
sub
push
loop
insl
xchg
push
dec
mov
sub
add
out
aas
cmp
xor
xor
or
imul
add
dec
cmp
out
mov
jl
in
rcrl
or
mov
movsl
sti
pop
insb
arpl
call
and
pusha
adc
int
aad
ljmp
loopne
or
lds
call
sbb
out
inc
cwtl
mov
xor
cmpsl
push
xchg
icebp
add
or
sbb
cmp
dec
mov
mov
mov
icebp
pusha
mov
cmp
faddl
sar
pop
out
mov
aaa
or
pop
in
movsb
sub
loope
and
ds
maxps
andl
cmp
pop
sub
aas
outsl
push
aad
push
movups
hlt
inc
aas
out
cld
add
leave
push
sub
test
repnz
jmp
xchg
fsubp
jl
insb
lcall
sub
adc
cld
shrb
hlt
pop
xchg
in
out
test
out
scas
jmp
pushf
add
aaa
lret
cvtdq2ps
xchg
add
shlb
fyl2x
idivl
push
push
js
mov
cld
rorl
rcll
xchg
pop
push
mov
sti
jo
dec
outsb
inc
xchg
jo
loop
mov
xchg
addr16
jle
les
rorb
push
outsl
sbb
in
iret
cmp
fstpt
outsb
mulb
mov
popa
repnz
sub
loope
inc
aaa
and
dec
lock
loop
ret
jbe
int
insb
dec
adc
hlt
leave
xchg
lea
rcr
in
lret
dec
add
in
iret
nop
ss
std
loopne
mov
fwait
xor
ds
cmp
icebp
je
pusha
jmp
push
or
add
mov
cmp
mov
pop
inc
ret
lock
xor
adc
pop
mov
cmpl
loope
jnp
inc
mov
sbb
push
sub
xor
cmpl
sbb
incb
xchg
adc
sbb
mov
and
divb
call
in
mov
jbe
adc
outsb
in
pusha
pusha
cwtl
jno
xchg
push
xorb
sbb
push
sar
mov
lods
xchg
movsl
int3
or
pop
push
xchg
mov
add
jmp
les
sbb
popf
inc
sub
xchg
in
test
cmpsl
bound
cmp
ss
loop
cmc
mov
xchg
mov
insb
push
cmp
ss
into
jae
dec
jno
or
adc
lods
mov
enter
adc
xlat
insl
movl
loop
rcpps
and
add
sub
push
push
shlb
dec
dec
mov
imull
sub
iret
jo
and
stc
lcall
jno
mov
xchg
subb
jecxz
cmp
xor
loope
mov
loop
mov
pusha
pop
rclb
mov
mov
pop
jp
out
dec
xlat
inc
bound
adc
push
popf
sbb
test
pushf
nop
jg
lahf
stc
shlb
shrb
and
jle
mov
push
lret
push
jle
roll
cmpsl
and
jns
call
insl
adc
adc
int3
xchg
decb
sub
addb
mov
pop
add
test
inc
jmp
xor
lea
jecxz
jno
shlb
iret
adc
pop
xor
loop
sbb
mov
test
imul
int3
lods
fistl
cmpsl
jno
mov
and
cltd
lock
cwtl
jl
dec
lcall
or
push
movsb
and
test
rcr
xchg
lahf
mov
cwtl
andl
mov
fstpt
sbb
cmpsb
lea
ds
adc
outsl
mov
inc
jno
and
xor
sahf
cmpsb
adc
repnz
in
mov
xchg
add
shlb
ljmp
mov
mov
pop
loop
and
inc
xor
xor
sbb
adc
scas
lea
pushf
sub
in
mov
jo
sub
or
cmc
out
nop
test
dec
mov
mov
adc
test
adc
fdivrl
movsl
data16
fisubs
ror
rclb
and
repz
and
repnz
sbb
xchg
loope
push
imul
aaa
loope
sub
aam
loope
jl
std
clc
popa
adc
popa
mull
mov
es
cltd
mov
fcoml
mov
loope
pop
stos
dec
out
rcr
inc
js
test
loop
sub
sbb
lahf
movsl
mov
rcll
jge
loope
cmp
les
lock
jmp
cmp
sbb
sti
pusha
cltd
movsb
add
daa
sbb
add
push
cmpsb
outsl
cwtl
xchg
loop
sbb
in
mov
leave
lds
ret
push
sbb
push
aaa
leave
xor
jne
pushl
xchg
inc
push
inc
shll
into
fildll
cmpsb
int
cld
popa
stos
mov
xor
aad
mov
test
push
pop
pusha
push
pop
jnp
int
loopne
add
push
dec
insb
mov
popa
xchg
inc
adc
daa
orl
shll
nop
adc
lret
aaa
loop
pop
pop
adc
in
insl
je
gs
cmp
prefetch
or
jns
and
push
outsb
scas
pop
gs
lds
das
inc
insb
mov
jb
call
fstpl
dec
xchg
lret
subl
sbb
sbb
adc
xor
mov
mov
pextrw
lret
mov
xor
mov
ret
nop
jl
or
jecxz
rcll
push
cmp
rcrl
adc
sbb
mov
mov
flds
cmp
jg
imul
or
or
inc
mov
shlb
dec
sub
popa
cmp
imul
adc
mov
cwtl
or
pop
rolb
xor
push
lock
test
mov
cs
inc
ja
xchg
insl
dec
cmp
pushf
adc
xchg
lret
sub
add
leave
inc
sti
movsb
jp
popa
sub
mov
daa
jg
jle
cmp
jl
mov
and
popa
fwait
xor
cld
jno
test
stc
imul
and
jns
cmp
jb
int
xchg
scas
stc
adc
mov
jle
pop
test
mov
add
xor
ret
sbb
fsubrl
ret
pop
inc
loop
stos
out
inc
cs
xchg
jmp
jg
dec
push
adc
aam
cmp
imul
lret
cmp
adc
mov
popa
mov
cmp
push
out
and
iret
repz
xchg
out
jp
clc
out
imul
and
std
ss
je
rorl
call
push
das
movsl
in
push
jle
aad
pop
das
idivb
adc
in
dec
cmp
mov
stc
aas
adc
mov
add
shrb
xchg
xor
arpl
mov
cltd
mov
loope
outsb
icebp
cwtl
dec
xor
daa
push
mov
aas
or
dec
xor
pushf
outsl
push
add
and
jecxz
out
repz
adc
rol
inc
cmp
add
mov
dec
aam
push
cmp
cld
mov
jp
das
adc
dec
fwait
rolb
xor
fildl
je
cld
cltd
test
inc
aad
shll
lds
aad
popa
hlt
xor
sbb
push
lret
fwait
pop
inc
aaa
daa
mov
lcall
stos
push
or
push
pop
jns
xchg
jle
cmp
sbb
sbb
fmuls
mov
mov
lods
push
loop
inc
pushf
shl
das
and
or
inc
mov
repnz
cmc
mov
inc
imul
dec
daa
inc
adc
inc
hlt
aas
xchg
data16
jns
lock
mov
cmp
lcall
lret
cmp
or
mov
fnstenv
sbb
cld
popa
inc
xchg
mov
test
mov
push
add
mov
mov
mov
cmp
pop
loope
cmpl
and
inc
jecxz
stc
sbb
inc
push
mov
push
and
adc
cmpsl
enter
cmpsl
out
pop
inc
xor
fwait
pusha
notl
scas
xchg
mov
jl
xlat
daa
sub
cli
xchg
int3
cmpsb
jo
push
and
loop
rol
in
into
or
in
mov
and
popa
mov
mov
dec
shlb
loope
sub
push
mov
loop
mov
imul
roll
push
mov
mov
xchg
sbb
mov
aas
imul
aaa
and
cld
and
in
ss
dec
aas
test
xchg
and
push
aas
mov
or
and
out
fstpl
xchg
lock
repz
repz
in
mov
cmpb
popa
fimuls
cltd
fwait
icebp
in
andb
imul
and
std
xor
aaa
or
call
and
dec
cwtl
cwtl
daa
call
movsb
mov
push
xchg
lds
xor
mov
push
cmc
mov
jecxz
push
sbb
push
add
movsb
aam
ror
jp
ret
scas
mov
lret
push
cmp
cmp
in
push
lods
adc
dec
pushf
or
inc
add
cmp
add
cmpsl
xor
insl
fisttpl
daa
ret
ss
std
scas
xor
mov
sbbl
jbe
iret
fmuls
nop
sbb
inc
int3
jmp
stos
pop
mov
sbb
adc
out
insb
pushf
sub
scas
fidivrl
nop
jnp,pn
in
andb
jb
pusha
mov
jl
pop
jb
lods
inc
in
dec
pop
ja
call
and
ja
les
jge
sbb
mov
lahf
xchg
inc
adc
loop
pop
or
push
mov
jno
inc
push
gs
or
or
inc
xor
add
js
add
insl
dec
aad
faddp
push
sbb
mov
xchg
adcb
sbb
mov
movsl
jne
insb
loope
adc
inc
mov
xchg
lods
mov
sub
outsb
fwait
inc
in
lret
mov
sbb
xor
dec
mov
arpl
cmp
cmpsl
pop
testb
in
in
add
dec
test
pop
xchg
sbb
imul
ret
insl
sbb
mov
cmp
movl
nop
inc
mov
inc
dec
xor
sbb
xchg
js
sbb
aaa
movsl
pop
stos
sbb
jp
jne
pop
inc
dec
stc
push
xchg
loope
xchg
into
cli
out
and
sbb
cmp
imulb
loope
jbe
jg
imul
jmp
lods
pop
stc
inc
lds
and
in
fbstp
mov
dec
mov
jne
or
out
inc
into
push
fldl
push
sbb
or
mov
loope
cmp
push
fisttpll
xchg
cmp
jbe
sbb
enter
and
sub
adcb
dec
mov
cmpsl
int3
adc
pop
jmp
int
rorl
add
inc
loope
sub
cld
aam
dec
test
xchg
rcrl
xchg
mov
and
xchg
out
or
ljmp
mov
mov
xor
rcrb
push
aas
loop
sbb
jo
iret
jbe
push
jne
stc
outsl
icebp
jmp
dec
jns
xchg
add
stc
push
xchg
mov
mov
in
cwtl
test
jae
fs
mov
dec
ret
cs
loop
push
shlb
ret
xlat
mov
aad
lret
pop
push
pop
dec
dec
mov
dec
adc
mov
in
in
jb
pop
pop
call
stos
repz
fdivp
sub
jl
js
mov
int
cs
insb
es
in
push
dec
pop
adc
mov
in
pop
xchg
stc
nop
int
pusha
sti
inc
lcall
mov
rcrl
ret
popa
mov
and
idivb
push
push
pop
jmp
lds
mov
cmp
xlat
cmp
mov
icebp
mov
mov
lret
iret
xor
and
nop
push
cmp
sti
xchg
in
pop
mov
repnz
jmp
stos
aas
sub
mov
xor
aaa
dec
mov
pop
add
or
mov
movsl
cltd
mov
xchg
and
mov
xchg
dec
xor
dec
dec
add
packssdw
mov
shrb
scas
jbe
insl
xor
shrb
test
pop
addr16
pop
cmp
jp
xchg
imul
or
pop
cmp
adc
xchg
or
outsl
mov
cli
ret
sub
das
lods
sub
in
push
shll
mov
xor
dec
lcall
adc
scas
movsb
mov
je
sub
mov
inc
adc
pop
mov
dec
stos
test
js
lret
sbbl
int
fsubs
ret
arpl
std
cmc
andl
scas
mov
lods
adc
iret
dec
push
pushf
shll
nop
and
push
in
loope
inc
stc
mov
mov
in
push
or
xor
adc
xor
and
dec
adc
dec
jg
or
mov
in
pop
cld
xor
xchg
insb
xor
xchg
enter
aam
clc
imul
in
shlb
dec
scas
mov
lea
or
jo
mov
pop
mov
imul
ja
jne
les
ret
inc
repnz
mov
lahf
rol
and
rcrl
jns
sub
ret
fdivr
or
xor
or
test
mov
pop
loop
ds
mov
inc
mov
jbe
adc
nop
loope
push
movsb
jns
mov
aaa
imulb
rolb
push
adc
sub
call
push
and
loop
mov
fldl
mov
cltd
pop
cmp
int3
jae
ljmp
jmp
xchg
push
mov
lcall
bound
in
mov
test
fildl
cmp
dec
popa
pusha
incl
movb
mov
dec
pop
jne
outsl
cli
adc
leave
leave
mov
xor
fs
test
scas
mov
in
add
dec
scas
inc
xchg
xchg
and
xor
and
out
jbe
clc
mov
pop
cmc
push
in
nop
call
ret
ffreep
inc
inc
insl
mov
sbb
pop
cwtl
mov
filds
cmp
and
push
pop
mov
xor
cmp
popa
and
push
sub
mov
popf
lds
add
aad
movsl
mov
test
dec
cltd
movsb
inc
push
lret
mov
stos
mov
stos
push
pop
shlb
dec
ja
lret
lahf
popf
sbb
notb
mov
sub
fs
push
adc
andl
addr16
test
xor
iret
cmp
cmp
push
inc
adc
mov
mov
cli
mov
mov
ret
cltd
arpl
sub
xor
pop
push
and
int3
mov
mov
xchg
loop
lcall
into
fldenv
mov
adc
sbb
loop
addr16
sbb
xchg
into
mov
xor
in
add
mov
lds
loope
roll
mov
cwtl
jnp
push
jnp
mov
jle
xchg
xchg
dec
shrl
dec
jl
aam
inc
repz
mov
push
vmwrite
loop
insb
xor
popa
lods
push
adc
movsb
or
rcrb
outsl
adc
mov
dec
and
cmpsb
adc
add
mov
cmp
and
mov
movl
sub
lret
mov
fdivp
lods
mov
push
cld
mov
add
inc
xchg
push
adc
stos
scas
pop
jp
into
cmp
push
or
cld
shll
stc
add
shll
jno
in
ljmp
in
adc
test
mov
outsl
xor
inc
cmp
sub
cwtl
dec
out
xchg
mov
shr
sub
pop
and
pop
xchg
or
lods
cmpsl
rorl
cmp
push
je
sbb
inc
add
aas
sbb
fs
or
mov
sbbb
call
clc
adc
pop
mov
pusha
sub
ss
pop
xor
and
popf
outsl
ret
mov
lock
inc
jle
loop
and
xor
aas
sti
inc
sbb
arpl
outsl
push
push
dec
xor
cld
mov
pop
mov
outsb
rcrl
xor
cld
sbb
pop
inc
test
lods
mov
cmpsb
xor
sbb
lcall
push
aaa
loopne
mov
stos
cmp
push
out
jle
movsb
test
loop
loope
cmp
xor
xor
andb
and
incl
dec
xchg
xchg
std
gs
out
test
cltd
fcoml
and
cltd
adc
or
cmp
int
adc
cmc
sar
adc
pop
push
rcrb
jmp
and
push
fnstsw
mov
int
mov
sarl
cmp
sarl
lcall
ja
sub
rcll
cmp
fldcw
sbb
adcb
push
and
xchg
in
sbb
inc
xor
test
hlt
int
add
jo
cmc
in
push
and
sbb
ret
xlat
add
cmp
aas
push
pop
sarb
movsl
mov
cmp
adc
and
adc
ds
pop
movsb
shrl
mov
cld
mov
and
push
bswap
pop
xor
adc
loop
lods
daa
ret
and
cld
mov
sub
rolb
add
mov
vmaxsd
inc
push
roll
sbb
cwtl
stos
test
test
lahf
sub
sbb
loop
xchg
jo
and
adc
mov
call
cmpsb
sub
outsb
inc
fstps
xor
mov
inc
das
clc
mov
call
fimuls
cmp
push
cmp
pushf
or
sbb
push
dec
adc
arpl
pop
subb
cwtl
aad
dec
std
jge
jae
ss
dec
mov
in
and
xchg
in
pop
scas
xor
sub
movsl
aas
sbb
testb
cmpsb
adc
xor
loop
or
scas
xchg
mov
inc
das
adcl
in
ja
mov
outsb
inc
loope
mov
mov
adc
into
iret
or
cwtl
dec
nop
cmp
loop
gs
sub
xchg
pop
adc
pop
popf
xchg
pop
pop
test
repz
gs
or
lcall
cli
xor
loop
lods
pushf
sub
add
push
xor
roll
jp
sbb
jle
popf
mov
xor
fs
leave
or
lret
adc
add
rcrl
mov
pop
pop
or
shlb
das
dec
test
cmp
dec
xor
ret
or
cvtdq2ps
ds
or
imul
push
mov
movsl
sbb
rcrl
adc
adc
lea
leave
nop
adc
mov
add
add
hlt
xchg
pop
bound
sub
and
in
xchg
jne
dec
and
popf
call
nop
or
insb
mov
xchg
scas
je
pop
popa
jmp
dec
stos
mov
lret
sahf
sub
push
pop
inc
in
stos
adc
and
adcl
add
hlt
test
insl
lea
aam
adc
cltd
popf
cmp
push
dec
xor
loope
pop
rorl
leave
loop
jne
mov
mov
xchg
test
xor
ds
and
push
lcall
sbb
jmp
add
imul
mov
jl
sarl
in
jecxz
sub
sbb
inc
push
pop
pushf
mov
mov
mov
in
addr16
mov
fxam
daa
adc
pop
test
mov
test
mov
in
flds
enter
in
mov
mov
aaa
and
imul
pusha
xchg
inc
cld
scas
imul
incb
mov
mov
and
or
pop
xchg
xor
in
sub
sub
lret
aam
popa
pop
mov
popf
outsl
pushf
ret
add
out
lods
vsqrtss
loop
adc
adc
mov
mov
mov
std
nop
lret
test
pusha
adc
pop
mov
in
push
pop
leave
xchg
rcrl
or
mov
outsl
in
xor
jbe
sarb
out
xor
xchg
lret
ss
push
push
ljmp
dec
insb
outsb
gs
daa
lock
ret
js
cmpb
push
push
mov
push
fwait
adcl
xchg
int3
popa
lret
inc
cld
and
and
and
stos
imul
aam
mov
cmp
andl
pusha
sti
inc
popf
xor
mov
dec
and
jo
imul
out
jne
or
testb
sub
mov
out
dec
out
repnz
mov
push
add
rcrl
shlb
mov
dec
pop
lahf
mov
mov
cwtl
jecxz
jne
push
and
shll
push
js
xor
test
mov
xor
pop
cmp
sbb
pop
lret
imul
pushf
sbb
pop
popa
and
fmul
mov
mov
cmpsb
leave
nop
pop
mov
repz
lock
xchg
mov
sahf
pop
xchg
push
popf
test
pushf
ficomps
neg
loop
out
pop
lds
cmp
cmp
cmp
cltd
addl
call
imul
pop
mov
sub
pusha
scas
inc
xor
xor
cmp
out
mov
or
adc
fwait
jno
jno
loope
pop
fcomps
pop
pop
test
push
outsb
in
mov
push
mov
lret
inc
jno
xorl
icebp
cmp
xor
add
fldenv
in
sub
mov
cmp
in
mov
mov
into
ret
or
mov
pushf
xor
adc
test
mov
mov
and
sub
pop
lds
push
insl
lahf
bound
or
xchg
das
mov
mov
xchg
push
jl
jle
addb
jns
rcll
bound
or
and
sbb
jg
cmpsl
pop
aad
mov
mov
inc
pop
subb
xchg
push
dec
or
loop
in
mov
xor
xchg
mov
mov
dec
cld
mov
into
shlb
dec
cwtl
loope
sub
in
jo
mov
inc
int
sbb
test
data16
mov
cmpsl
dec
in
inc
xor
xchg
aad
inc
mov
dec
adc
ja
xchg
pushf
ss
fbstp
lods
adc
mov
shrb
xor
imul
lock
mov
data16
stc
add
fadds
test
inc
mov
add
jae
fcomps
sarl
jge
js
cltd
mov
mov
ss
push
popf
inc
loop
or
mov
repnz
mov
mov
jecxz
xchg
push
popa
xlat
fisubs
and
and
pop
nop
mov
mov
pushf
inc
jmp
repz
lret
xchg
xchg
arpl
dec
jbe
sbbl
and
lahf
frndint
out
icebp
push
movsb
and
and
push
mov
mov
sbb
mov
loope
movl
pop
outsl
add
sbb
dec
out
mov
mov
or
js
aas
push
inc
shlb
hlt
inc
inc
push
sbb
cmp
cmpsl
xor
incl
xor
movsb
ret
mov
cmp
mov
pop
fnstcw
xor
push
cmpsb
ss
jae
cmpsl
sbb
testb
rcll
xchg
xchg
sbb
gs
lock
push
rorl
sahf
xchg
loopne
mov
imul
fdivl
stos
push
mov
je
adc
push
ret
sub
daa
adc
imul
es
pop
imul
jnp
push
clc
xor
ja
cmp
or
insl
stc
lcall
xchg
and
pushf
xchg
daa
add
mov
aam
in
jecxz
dec
or
scas
dec
cwtl
push
cltd
enter
jne
adc
in
test
mov
xchg
lea
clc
jb
mov
push
loope
xor
bound
ficompl
not
adc
mov
aas
xorl
sub
ret
adc
sbb
arpl
sbb
int
out
dec
lds
xchg
outsb
inc
mov
xchg
jns
shrb
imul
ljmp
jp
mov
loope
mov
mov
sub
pop
dec
push
nop
inc
imul
repz
loop
xlat
dec
fs
test
push
add
adc
sbb
in
movsb
nop
sub
rep
sub
test
cltd
es
jecxz
inc
shlb
mov
xchg
in
sub
push
ror
sub
xchg
sub
mov
addb
and
mov
std
repz
or
ss
sub
sub
xchg
je
outsl
js
lea
mov
push
or
js
adc
sub
cmpsl
adc
scas
inc
xchg
or
push
jno
or
mov
push
ds
mov
int
arpl
inc
sub
xlat
loop
ljmp
push
nop
sbb
sahf
mov
xor
sub
and
in
or
xor
xchg
push
jge
adc
je
jb
test
ficomps
scas
jae
push
inc
pop
ja
js
mov
cld
mov
test
imul
ret
xorb
shl
jl
addr16
loop
adc
popf
mov
xor
push
arpl
scas
call
or
mov
cmpl
mov
pop
adcl
pop
lods
cmpsl
and
jge
add
gs
pushf
sbbl
inc
xor
mov
inc
push
or
stc
mov
das
pop
dec
mov
daa
and
movsb
inc
fs
into
mov
push
inc
stos
pop
mov
out
dec
loope
push
mov
and
lea
jecxz
push
mov
cmp
clc
mov
hlt
cmp
pop
xchg
sub
aad
adc
or
jae
pop
roll
in
aam
cmp
sub
jns
and
mov
js
in
xchg
push
popf
psubusb
aam
mov
lods
daa
mov
popf
adc
sbb
mov
imul
mov
iret
repz
adc
sti
repz
or
jne
icebp
dec
std
mov
insl
pusha
mov
mov
mov
hlt
push
movsb
sbb
cmp
cli
in
xor
push
push
mov
ret
pop
cmp
lea
xchg
in
cmp
xchg
int
test
ds
inc
sub
mov
pop
aas
mov
stos
sar
fmull
xor
pop
sarb
jno
dec
and
test
pop
add
jbe
sub
lods
rclb
mov
mov
sbb
out
xchg
sub
popf
imul
jecxz
add
sbb
xor
and
xchg
lret
inc
ret
sub
mov
ja,pt
push
push
out
stos
lcall
xchg
sarl
popa
loop
jne
int3
gs
dec
loope
jb
pop
inc
or
sub
aam
adcl
aam
cltd
xchg
insb
or
xchg
mov
jbe
movsl
jo
stos
roll
mov
bound
jb
jl
adc
mov
cmpsb
inc
gs
push
adc
test
loop
push
lret
dec
sub
push
and
rolb
inc
dec
xchg
in
push
fwait
push
icebp
cmp
mov
insb
outsl
xorb
jnp
popf
ds
push
pop
bound
fcmovb
push
inc
pop
outsb
bswap
inc
lret
jns
adc
and
stos
jo
imul
dec
mov
sub
inc
sbb
ja
dec
lock
sub
inc
jno
jecxz
adc
pop
cli
and
mov
mov
mov
fst
lcall
into
shl
popf
xchg
push
sbb
in
daa
lods
adc
mov
daa
in
in
andb
mov
dec
mov
das
and
push
and
cmp
mov
pop
sub
insb
aas
mov
mov
sub
scas
and
gs
outsb
stos
cmp
jns
fmull
cmpsb
dec
mulb
das
lods
xchg
popa
pop
fiaddl
and
aam
clc
aaa
add
mov
sub
faddl
add
pop
lret
pop
loope
fcoms
xchg
iret
adc
scas
push
fnstsw
cmpl
mov
cld
jb
mov
dec
sbb
in
jo
push
add
fstpt
pop
inc
push
js
inc
push
push
rorb
pop
scas
pop
push
jge
lods
addr16
sbb
loop
movsb
xchg
stc
aad
mov
cmp
iret
inc
adc
insl
rcll
and
sti
out
cmpsl
jl
adc
push
daa
push
push
add
mov
xor
gs
or
roll
lock
mov
outsb
ret
nop
das
orl
mov
mov
or
aad
xchg
mov
loop
insb
in
cwtl
sbb
loop
sahf
adc
mov
push
mov
or
jne
cmp
repnz
adc
mov
jg
insl
lods
push
pop
in
sahf
xchg
dec
mov
lea
hlt
or
pop
ss
adc
inc
mov
iret
push
mov
adc
mov
loop
aam
movsb
imull
sub
and
nop
cmpl
cmp
add
cltd
les
pop
dec
jmp
sub
movsl
sub
ret
aaa
mov
add
push
cmp
jb
inc
daa
jae
push
das
push
cld
shlb
jecxz
mov
sbb
adc
loope
dec
sbb
sbb
fstpl
inc
insb
mov
xor
sarb
sub
in
jbe
mov
insb
jl
dec
aad
sahf
orl
rorl
mov
xchg
pusha
mov
adc
pop
sbb
or
add
test
push
mov
in
pop
mov
push
sub
shlb
incl
pop
in
jg
xor
mov
ret
dec
insl
cmpsl
mov
adc
lahf
out
mov
inc
lds
sbb
mov
arpl
pop
cwtl
test
ret
ss
popa
lds
inc
xor
add
push
push
xor
adc
and
xlat
xlat
mov
push
inc
pop
fwait
xor
xor
incb
xor
cltd
mov
loop
sbb
xchg
daa
int
inc
aaa
andl
arpl
scas
stc
mov
in
pop
adc
and
insl
movsl
das
xchg
and
loop
sub
sbb
mov
jno
loope
mov
jg
xor
jl
dec
movsl
adc
imul
or
xor
leave
pop
adc
js
xchg
pop
cmp
lret
imul
dec
fwait
sub
lret
pop
or
mov
adc
decl
in
mov
push
xor
popa
imul
push
inc
push
and
sbb
notl
cmp
ficomps
lds
insb
test
fldcw
addb
stc
in
ljmp
or
mov
in
inc
dec
popf
lret
cmpsb
xor
ja
sbb
fcoml
xchg
push
mov
loope
icebp
sbb
lds
dec
cs
dec
xchg
rcll
sbb
mov
and
lret
repz
pusha
adc
jp
sbb
mov
ss
push
jb
and
mov
mov
mov
dec
or
nop
sti
xchg
sub
imulb
sub
and
shrb
aaa
adc
out
test
xor
adc
mov
pop
sub
outsl
in
mov
pop
enter
or
pop
cmp
shl
cli
fdivrl
rorl
pop
ret
mov
out
repz
movsb
std
pop
lahf
pop
bound
cmp
in
jne
xor
cmpsb
test
sub
movsb
push
xchg
push
mov
mov
aas
imul
jbe
and
mov
push
xchg
call
xchg
aaa
das
enter
pop
mov
popa
mov
inc
jnp
popf
shrb
nop
pop
cmc
add
add
insb
out
push
hlt
insl
inc
out
enter
push
mov
les
and
shr
jb
sbb
outsb
mov
fidivs
loop
jecxz
jns
mov
daa
jne
test
inc
daa
aas
mov
lods
xchg
add
sbb
sbb
jns
or
inc
pop
dec
xchg
mov
xor
cmp
mov
sbb
outsl
repnz
adc
sub
and
mov
test
nop
shl
pushf
jb
mov
and
rclb
daa
out
aad
stc
lret
or
inc
and
xchg
mov
cmc
add
test
test
pushl
sbb
inc
jb
mov
sarl
mov
fisubrs
lods
xchg
xor
imul
cmpsb
xchg
lret
cmp
mov
mov
test
in
lcall
loop
push
adc
sbb
xchg
xchg
sbb
test
lods
out
xor
lahf
adc
xor
cs
add
stos
or
mov
dec
inc
sub
mov
xchg
pop
sub
jp
xorb
pop
push
imul
data16
mov
into
mov
test
or
data16
mov
mov
cs
daa
mov
push
and
lea
adc
ljmp
cmp
xor
push
aas
mov
shrb
mov
shr
cmovns
mov
ficompl
add
push
outsl
cmpsl
insl
mov
popa
aad
adc
jne
shll
jl
cmp
mov
dec
leave
mov
bound
and
push
sti
mov
loope
in
lods
mov
out
xchg
mov
iret
lahf
push
and
loop
cmpsl
addr16
loope
leave
inc
orb
sub
lsl
dec
adc
insl
ror
xchg
into
push
dec
and
mov
movsb
and
aas
lock
nop
cwtl
mov
insb
in
invd
outsl
add
push
adc
mov
rcr
test
enter
fnstenv
cmc
pop
mov
xchg
sbbl
push
or
cmp
pop
cld
mov
mov
cmpsl
in
pop
adc
xchg
push
test
inc
lds
cmp
or
mov
lock
mov
mov
out
adcb
jns
xchg
sbb
xor
and
jle
pop
push
ss
pop
roll
in
aad
jge
xchg
subb
adc
in
inc
stos
jmp
xor
or
mov
imull
dec
add
sbb
mov
insl
mov
loop
aad
pop
cmc
call
xchg
pop
xor
dec
push
push
fdivs
adc
cmp
loope
call
add
lret
iret
ret
outsb
cld
and
add
jle
xor
mov
xor
lret
and
stos
lods
jb
mov
setb
xor
imul
fidivs
jns
or
jecxz
loope
insb
pop
cld
xchg
loope
push
and
cmp
xlat
in
and
add
push
fistpll
push
adc
leave
es
mov
xchg
or
inc
and
push
and
out
add
or
lods
mov
and
xchg
icebp
movsb
jle
mov
xchg
in
pusha
sub
cs
in
test
repz
sub
lret
push
out
sarl
movsl
in
jp
mov
movsl
daa
and
and
pop
idivl
xchg
movsl
idivb
lds
push
pop
mov
push
iret
sbb
ss
pop
sarl
ret
adc
adc
and
fcoml
xchg
lods
pop
or
pop
xchg
pusha
loope
jge
test
sbb
outsl
fisubrl
andl
iret
mov
dec
jle
mov
sbb
and
xchg
stos
loope
in
vcvtdq2pd
inc
pushf
repnz
int
aas
lret
mov
mov
sbb
jg
test
ffree
mov
or
mov
repnz
pop
xor
movsb
int3
out
mov
test
testl
sub
and
ret
sub
xchg
test
pop
inc
aam
dec
mov
mov
loope
sbb
lock
cmp
mov
mov
mov
jns
nop
mov
add
push
fimuls
jmp
daa
fisttpl
mov
icebp
cmp
ret
test
or
in
sub
dec
xchg
mov
data16
xor
loop
add
adc
mov
and
iret
inc
nop
mov
in
mov
sub
pop
push
push
jnp
add
jno
pop
in
add
cwtl
jecxz
insb
lock
cmp
and
mov
sti
lock
loope
sub
fcoml
or
inc
cld
cmp
dec
addl
insl
pop
daa
in
cld
pop
jg
lret
mov
daa
scas
fwait
jmp
xchg
insb
xor
jl
mov
cmp
adc
or
dec
dec
jmp
mov
jbe
mov
inc
cli
jns
bound
aas
dec
imul
xor
in
cmp
push
xchg
dec
mov
mov
pop
inc
out
adc
loope
lahf
xchg
xchg
repz
push
fisubl
mov
imul
js
inc
aam
ss
es
or
dec
inc
shll
inc
jge
imul
jae
test
sahf
mov
mov
xchg
stos
into
insb
adc
mov
xchg
lods
popf
aas
xlat
hlt
cmp
daa
ret
cli
sbb
aas
lcall
inc
adc
add
push
inc
scas
xor
loop
mov
xchg
sub
or
sub
loope
cmp
and
nop
ret
imul
negb
jbe
inc
movsb
jb
dec
mov
push
fcmove
dec
sbb
test
sub
push
shlb
mov
rolb
outsb
sbb
push
mov
cltd
jge
shlb
xor
sub
in
xchg
repz
ret
xchg
stc
aas
test
sti
stos
add
movsl
std
push
lock
sbb
cltd
lods
repz
inc
adc
mov
mov
pop
mov
sbb
xchg
in
out
rclb
movsb
repnz
call
lcall
jbe
popa
ret
and
xchg
jnp
inc
idivl
testl
pop
aam
adc
adc
movsl
test
mov
inc
xchg
sbb
lock
jno
xchg
repnz
sbb
fcmovne
mov
loop
mov
push
sub
jmp
mov
daa
out
lea
rolb
xlat
mov
push
pop
les
mov
mov
push
xlat
adc
mov
fstpt
aas
test
xor
insb
dec
ret
shl
push
adc
mov
add
addb
cmp
shlb
out
or
arpl
or
out
decl
and
dec
les
adc
sub
call
imul
es
push
or
sub
mov
push
gs
jne
cmp
pop
cmp
and
aas
stos
out
xchg
loop
test
scas
movsl
jae
pop
cmp
dec
in
pop
jbe
imul
subb
cld
mov
addl
scas
fsts
push
mov
pop
mov
inc
les
loope
pushf
jnp
xor
pop
test
pop
adc
lret
movd
dec
in
push
repz
pop
sbb
in
out
sar
lock
clc
push
int
mov
jno
pop
push
and
pusha
mov
add
push
pop
mov
cmpl
mov
mov
out
imul
inc
and
or
dec
lds
mov
mov
cs
push
jns
mov
push
adc
xor
xchg
ds
scas
hlt
inc
push
aas
addl
mov
insb
sbb
movsl
cmpsb
mov
test
xchg
push
lds
jecxz
cmpsb
in
into
ret
xchg
pop
or
xor
dec
add
push
mov
mov
cmp
ss
dec
test
ficompl
ds
mov
pop
sub
sarl
jbe
push
add
lods
fidivrs
or
aad
fcoms
mov
adc
jb
cltd
jle
push
lret
xchg
inc
and
pop
data16
push
std
inc
loop
xchg
shlb
imul
and
xor
xor
in
lds
cmp
push
out
dec
sub
cmp
sub
jl
mov
sahf
lcall
mov
cwtl
fnstenv
jo
cmp
stc
cmp
in
add
and
stos
mov
loop
imul
stos
fsub
inc
in
int3
lock
and
out
js
lods
pandn
xor
xor
xchg
add
into
test
cmp
lea
das
jns
jne
dec
daa
mov
rclb
dec
in
outsl
or
push
xchg
mov
cmpsb
mov
mov
fwait
push
or
lret
pop
into
adc
pop
adc
mov
push
fsubl
sbb
cmp
and
xchg
mov
xor
in
inc
xor
or
data16
lret
cs
loop
test
or
icebp
pop
nop
repz
in
pop
jle
cltd
mov
mov
dec
dec
in
cmp
js
ficoml
insl
mov
xor
mov
loop
cltd
ret
inc
inc
cmp
sub
push
sbb
xchg
shll
push
and
les
sahf
fimull
pushf
or
push
xchg
xor
rcrl
adc
mov
iret
les
pop
nop
pop
cmp
xchg
bound
arpl
dec
inc
mov
mov
mov
fwait
aas
dec
int3
popf
pop
xor
shll
xchg
sub
jb
xchg
scas
pop
cmp
mov
cltd
fwait
mov
nop
fxch
xchg
in
cmp
jg
mov
inc
inc
and
push
mov
loop
fcmovu
jle
cmc
aaa
push
mov
and
jg
inc
fstps
pop
icebp
in
inc
sbb
rcrl
sbb
mov
jno
hlt
inc
mov
ss
or
setns
rcl
mov
pop
push
imul
outsl
iret
in
jo
jg
cmpsb
fsub
dec
xabort
fisttpll
xor
and
sbb
inc
fwait
push
rcll
sub
adc
lods
stc
lds
and
dec
mov
loop
inc
ss
outsl
and
add
pop
aam
dec
cmc
arpl
xchg
mov
push
inc
int
and
cmpsb
and
mov
push
aaa
add
out
sti
cmp
adc
iret
jecxz
sub
insb
andl
in
ret
aad
les
mov
pushf
dec
outsl
call
cmpb
push
mov
jnp
push
shll
add
stos
fcmovne
and
outsl
shl
mov
jne
jb
std
xor
mov
ret
mov
push
mov
xchg
dec
add
outsb
outsl
daa
mov
xchg
cwtl
sbb
add
loop
mov
lods
adc
sub
in
mov
sub
insb
cmp
ret
insl
pop
inc
psubusw
dec
dec
out
cmc
iret
mov
arpl
incl
loope
adc
cmp
cld
mov
cmp
int
roll
aam
dec
sbb
cmp
insl
insb
mov
pop
loopne
cmc
insb
movsl
into
outsb
xchg
cs
and
push
test
out
gs
in
mov
xor
adc
dec
lea
jno
push
mov
dec
fwait
or
inc
mov
ds
popa
in
std
mov
fcoms
shrb
inc
iret
js
and
mov
nop
and
addr16
adc
stos
out
dec
int
xchg
jne
add
test
in
xorl
loop
data16
push
push
sbb
loope
das
pop
mov
in
test
push
inc
iret
mov
inc
and
mov
ja
mov
bound
sub
inc
cmc
lret
std
loopne
sti
fcomps
ds
adc
loope
xchg
lods
btsl
jno
fnstenv
xor
cld
pop
ret
mov
cwtl
or
out
lret
imul
rep
jge
adc
jbe
cld
fnstcw
adc
hlt
mov
subl
inc
dec
cmp
out
push
mov
popf
and
push
fisubl
lock
aas
fsub
lods
loopne
xchg
inc
or
and
shl
jp
xor
mov
cli
push
sub
mov
jb
mov
ret
lret
mov
xchg
nop
add
mov
dec
das
ror
and
insb
adc
add
pop
in
das
xor
sbb
push
imul
and
push
fdivrl
inc
cmp
in
mov
xchg
push
stos
cli
outsl
mov
fwait
add
xchg
mov
or
repz
lret
repnz
stc
jl
jb
in
out
push
and
rorb
jecxz
roll
push
mov
and
mov
adc
idiv
pop
shlb
pop
pop
iret
cmpsb
sbb
xchg
pop
loope
scas
stc
jge
mov
lds
in
sarl
jne
xor
jecxz
pop
das
cmp
adc
mov
outsb
cvtdq2ps
je
jmp
cmp
add
push
ljmp
push
repnz
stos
xchg
pop
sub
mov
pop
sti
mov
in
jb
or
mov
and
xchg
lret
add
sbb
les
pop
call
push
mov
adc
in
fistpl
iret
test
xchg
mov
ret
push
rcll
imul
adc
sbb
mov
push
int
test
ds
pop
push
cmpb
mov
je
dec
mov
cmp
mov
sahf
cmp
and
fcompl
notl
inc
mov
dec
lea
loope
sub
adc
iret
cli
mov
cltd
dec
pushf
aad
test
std
mov
in
outsb
cwtl
fs
mov
cmp
xor
sbbb
pop
xchg
add
push
inc
sbb
in
ret
push
mov
pop
addl
or
fwait
out
jno
jmp
pop
mov
daa
pop
fnstcw
out
jge
xchg
pop
sub
fistl
sti
or
push
pop
repnz
insb
jle
and
push
std
cltd
push
mov
mov
adc
orl
lods
shl
lods
pop
jns
push
int
pop
sub
pop
sub
or
xor
jno
xchg
jnp
loopne
and
hlt
push
push
dec
push
xchg
shll
leave
sti
ret
in
loope
nop
or
les
pop
mov
pop
mov
xchg
push
loop
lret
adc
aas
mov
cmp
xor
push
mov
or
gs
fnstenv
xchg
test
or
scas
mov
xor
jnp
jno
jnp
loop
enter
or
clc
sub
add
and
enter
sbb
adc
push
sub
daa
adc
push
push
repnz
pushf
jle
sbb
or
jnp
popf
pop
pop
xor
jo
call
mov
push
fidivl
insb
push
adc
sbb
push
sbb
xchg
pop
dec
cmp
mov
mov
roll
popf
lea
shl
mov
add
dec
loop
icebp
lock
jecxz
add
pushf
add
jne
hlt
push
dec
int3
movsl
xor
sbb
popf
jae
cmp
movsb
cwtl
push
insl
inc
cmpsl
cmpsl
lret
mov
iret
cs
or
pop
in
inc
xlat
mov
loopne
and
inc
mov
lcall
out
cwtl
mov
cltd
and
enter
inc
test
or
push
and
ret
push
and
adc
dec
out
sub
add
fsubrl
mov
ss
xchg
cltd
inc
mov
mov
mov
sub
pop
cmp
sbb
fisubrs
jl
mov
jb
nop
fstps
pop
shlb
iret
hlt
xchg
mov
je
rcrl
mov
pop
cmp
lods
aas
inc
loop
nop
adc
jmp
dec
xchg
mov
aas
je
cld
movsl
js
and
pop
cmpsl
jbe
pop
daa
inc
in
mov
dec
pop
in
mov
fnstsw
and
add
insb
inc
adc
into
push
lcall
punpckhwd
mov
cmpsl
xor
roll
xchg
jbe
dec
dec
xor
adc
dec
out
repnz
aas
xchg
pop
push
push
je
and
imul
sub
adc
mov
ss
push
or
mov
in
fs
adc
xchg
cld
add
push
sbbb
sbb
scas
xchg
cli
out
dec
and
les
loope
add
cmpsl
clc
imul
daa
mov
js
add
and
sarb
cwtl
call
in
sbb
adc
aaa
lret
imul
loop
jno
inc
das
adc
aaa
aam
arpl
push
sarl
sbb
and
mov
sbb
push
shr
mov
xchg
call
ret
scas
in
sbb
in
loope
jle
insb
jne
roll
xchg
jns
ss
push
xstore-rng
cmpsl
add
fstps
xchg
lods
loop
sub
cmpsb
repnz
sbb
xchg
outsb
push
repnz
mov
inc
imul
sub
out
in
loop
pop
in
adc
in
test
std
adc
pop
cli
sub
lret
mov
mov
ljmp
sub
cmpsl
mov
inc
lcall
or
sti
cmp
and
jle
push
inc
jae
xor
add
in
mov
jo
push
pop
dec
outsl
imul
loop
lods
aam
push
movsb
mov
inc
cs
div
inc
xor
test
dec
lds
or
js
and
mov
mov
mov
pop
subb
loop
pop
leave
les
xlat
mov
mov
mov
ja
xchg
rcl
jbe
fwait
jle
out
cltd
stc
and
shl
lock
cli
and
movsl
mov
and
in
mov
movd
sub
or
imul
mov
pop
stc
adc
pop
sub
cmp
pop
sbb
mov
mov
pop
push
cltd
ss
rcrl
sub
push
fidivs
rolb
and
and
adc
push
mov
xchg
or
sti
js
aam
pop
or
icebp
mov
je
pop
or
ljmp
cmpsb
xor
dec
mov
adc
jb
rolb
lcall
pop
test
fcmove
daa
in
adc
aad
std
icebp
out
and
les
mov
and
cmpxchg
jno
cmpsb
and
das
inc
or
pop
adc
pop
out
xchg
jo
add
int3
out
sub
or
movsb
push
cmp
nop
or
test
adc
inc
add
jmp
add
adc
das
cs
iret
mov
dec
sub
jle
loop
in
cmp
mov
inc
loope
jne
mov
push
push
pushf
pop
test
repnz
jnp
js
in
loopne
adc
cmp
aas
sub
pop
jne
cmp
loope
lods
cmp
add
jo
adc
hlt
lea
push
fs
cmp
xchg
lods
shlb
inc
adc
mov
jecxz
iret
fldl
jbe
cmovo
loop
imul
adc
mov
xor
add
adc
loop
sbb
push
xor
stos
in
sub
lods
js
leave
push
adc
enter
xchg
jne
iret
adc
inc
push
inc
adc
pop
loop
pop
mov
jb
cwtl
in
or
add
jns
lcallw
mov
xor
popa
or
add
ss
adc
push
in
xchg
sahf
pop
lahf
push
pop
daa
cmpsl
add
out
out
stos
adc
push
adc
loop
arpl
stos
inc
ljmp
inc
psubsw
loope
add
mov
jl
and
xor
shl
cmp
and
pop
popf
mov
and
outsb
jl
sbb
mov
int
inc
dec
movsl
mov
mov
repz
fs
add
inc
pop
loop
in
cmpsl
push
pushf
inc
add
inc
cli
add
mov
ljmp
or
icebp
mov
pusha
stos
sub
and
jp
mov
loopne
rcrb
movsl
ficoml
insl
adc
sbb
jno
aam
dec
push
addr16
sahf
aad
lahf
mov
sub
inc
pop
mov
jbe
xor
dec
lcall
and
lret
test
mov
push
aas
xor
adc
sbb
out
cmp
xchg
loop
mov
or
adc
jb
pushf
sbb
add
jno
mov
mov
or
or
nop
add
in
rorb
insb
inc
cmp
jecxz
jmp
and
cmp
out
loope
push
jmp
loope
lea
pop
in
jp
xchg
bnd
fdivs
fucomp
test
lds
js
mov
repz
pop
xchg
cmc
pop
adc
aad
xchg
lahf
inc
mov
jecxz
jne
std
jnp
xchg
jge
pop
sti
shr
addr16
sub
xor
xchg
xor
xchg
adc
mov
orl
or
pop
dec
sbb
out
dec
bound
sbb
movsb
pop
and
gs
mov
inc
shll
mov
fwait
cmp
inc
push
pop
and
orb
or
dec
andl
fcmovbe
fdivl
sub
insb
roll
or
xor
cmp
push
outsl
addr16
pop
shr
xor
pop
scas
dec
pop
push
iret
pop
push
adc
mov
icebp
and
bound
std
push
roll
test
loop
imul
fidivrs
push
mov
stos
and
ret
mov
les
mov
scas
daa
mov
xchg
dec
add
add
cmp
imul
cmp
adc
cmp
bt
inc
jl
rcrl
xor
mov
aas
bound
dec
and
and
xchg
and
pop
sub
aas
mov
dec
test
inc
adc
outsb
lock
cmp
test
inc
xchg
popa
sbb
mulb
jno
mov
push
inc
loop
and
sub
aad
cmp
mov
cmp
shrl
lods
mov
sbb
xor
ja
and
mov
adc
jge
mov
orb
and
xchg
and
and
lret
enter
pop
fisttpll
sbb
mov
insb
cmpsl
mov
test
aad
and
loope
mov
lcall
pop
sub
push
cmp
push
int3
sbb
xor
mov
es
std
fwait
imul
int
gs
pmuludq
mov
adc
sbb
mov
orl
iret
dec
push
mov
lods
push
mov
mov
or
imul
push
in
fsqrt
inc
popf
ja
lret
dec
mov
scas
push
lret
xchg
xor
xchg
pop
ret
stos
ljmp
nop
cmp
scas
sub
xchg
ljmp
inc
pop
mov
push
movsb
inc
lret
sub
push
pop
jmp
push
lea
pop
push
jnp
lods
into
pop
rcr
push
arpl
push
xchg
jle
pcmpeqd
fnstenv
add
adc
out
or
loop
mov
mov
js
pop
fscale
add
rclb
nopl
outsl
or
scas
dec
mov
rcrl
cld
in
jae
inc
sbb
lret
xchg
jbe
push
xchg
loop
ficoml
push
push
push
test
loope
lcall
loopne
dec
adcb
mov
aad
sbb
mov
das
clc
in
repz
cmp
mov
jecxz
repnz
mov
popf
leave
push
mov
push
add
push
xor
sbb
sbbl
adc
sbb
mov
repnz
scas
setnp
xchg
xor
mov
pop
push
jp
cli
or
aaa
leave
xor
pop
push
dec
adc
repz
jnp
pop
sti
adc
mov
ja
xor
sahf
stos
inc
and
cmc
cmpsb
xor
push
push
fdivr
cmpsb
adc
pop
sub
push
fmull
fidivrl
and
xor
dec
popf
js
and
daa
mull
aaa
and
inc
push
repz
mov
js
mov
cmp
mov
jno
mov
cmpl
imul
pop
xchg
out
push
out
fcoms
and
outsl
adc
ss
insl
movsb
aas
hlt
mov
out
sbb
aas
popa
mov
jge
addr16
push
pop
or
test
dec
aad
cmp
mov
int3
scas
inc
je
adc
mov
sbb
in
iret
jae
cmp
inc
sbb
sbb
imul
shl
mov
incb
or
and
sbbb
movsl
mov
fisubrs
pop
ds
popa
push
or
repnz
xor
xchg
add
test
sahf
fwait
int3
jae
in
xchg
push
mov
push
and
add
xchg
mov
fwait
jp
loop
push
bound
pop
adc
mov
push
pusha
cmp
sbb
iret
shl
push
stc
pop
fs
mov
outsb
adc
jo
fadd
push
movsb
iret
scas
ds
insb
scas
and
push
mov
xchg
mov
neg
cwtl
ret
in
cld
pop
int3
ss
and
xchg
cmp
or
lahf
jl
fldt
jno
xor
mov
popa
loope
test
sub
sub
sub
xor
lods
loopne
jno
lret
add
pushf
push
shll
xor
out
movsb
mov
lea
pop
cmp
mov
or
or
icebp
xor
and
jecxz
repz
fildll
dec
or
add
mov
arpl
loope
pusha
roll
ret
mov
int
sbb
rolb
push
nop
negl
into
in
icebp
mov
add
dec
mov
ja
daa
cmp
pop
shrb
sub
xor
xor
fs
xor
shlb
nop
incb
jo
sbb
and
cwtl
addl
xchg
and
mov
push
loop
hlt
mov
es
fs
leave
addr16
inc
in
cmp
jge
iret
inc
jne
jo
add
mov
xor
int
jb
notb
orl
out
add
movsb
fcmovbe
rcrb
lods
sbb
pop
xchg
mov
popa
sbb
lret
pop
orl
sbb
jnp
lods
sbb
xchg
inc
pop
loop
aaa
shrb
and
fldcw
mov
cmpsb
stos
rcpps
pop
outsl
push
push
addl
pop
sbb
nop
aam
xor
sti
dec
leave
or
lds
fiadds
js
adc
mov
mov
jge
and
sbb
aaa
loop
push
outsb
mov
std
ss
or
jle
aas
sub
jmp
cmp
pop
int3
test
add
std
mov
sahf
sahf
mov
lcall
adc
inc
in
inc
jbe
pop
or
and
xchg
and
mov
and
iret
mov
imul
iret
or
ficomps
adc
daa
mov
cmpsl
adc
in
push
int
mov
xor
xchg
in
inc
int3
or
and
iret
adc
push
cs
mov
fbstp
mov
push
jns
add
pop
mov
loopne
mov
jg
adc
aaa
stc
sbb
ljmp
cmpb
xchg
adc
iret
dec
sbb
int
int
jmp
xor
lods
inc
push
jecxz
mov
or
ljmp
in
std
ljmp
jmp
daa
mov
out
mov
cld
icebp
xchg
ror
nop
jne
ret
sti
inc
insl
mov
xor
inc
fildl
fistl
pop
xlat
xor
cmp
outsl
lret
inc
aaa
shll
cwtl
loop
int
pop
jbe
pop
dec
aad
xor
in
and
mov
sbb
stos
mov
or
stc
bound
decb
rcrl
mov
pop
mov
jbe
in
mov
frstor
and
clc
xor
mov
stc
and
sbb
out
and
fbld
adc
fwait
hlt
push
push
pop
and
push
sti
gs
lret
insl
fnsave
enter
leave
pop
and
mov
aas
test
or
inc
fisttpll
pop
mov
add
les
lds
xchg
daa
clc
int
imul
jp
popa
in
mov
mov
seta
mov
pop
lahf
and
dec
jl
outsb
dec
xor
mov
push
inc
pop
inc
scas
mov
push
or
cmp
jg
insb
cmp
mov
dec
int
imul
mov
add
nop
pop
jb
sbb
loope
sbb
pop
jno
aas
in
sub
push
inc
jno
loop
xchg
cltd
loop
xor
nop
sbb
push
es
fs
mov
add
lds
sub
inc
xchg
in
aam
mov
sub
outsl
pusha
dec
shlb
jl
add
dec
xchg
ret
adc
cmp
fcoml
test
pusha
loop
cli
lret
xor
in
inc
pop
jecxz
rcr
mov
ret
int
jno
cmpsl
adc
cmp
cmpsb
lcall
mov
cmovl
xchg
stc
sbb
int
clc
iret
jnp
leave
jp
adc
lret
add
mov
pop
xchg
pop
mov
xchg
loopne
cmpsb
pop
inc
out
stos
in
clc
pop
mull
and
xchg
mov
and
test
cmp
dec
rolb
sbb
aam
shrb
pop
outsl
cmpsb
jecxz
sbb
addb
ss
pop
sbb
cmpb
pusha
adc
and
rolb
sbbl
push
mov
sub
add
mov
cmp
movsl
daa
jle
js
test
xchg
xor
leave
xchg
std
push
mov
push
popa
dec
jo
in
mov
adc
mov
xchg
pop
push
psubd
push
mov
daa
sub
xchg
lret
adc
fcomps
jns
data16
subl
jmp
js
mov
mov
mov
pop
add
and
push
mov
inc
sub
test
add
aad
lods
xchg
push
mov
aaa
mov
jne
dec
in
xchg
push
jmp
leave
push
xor
inc
loop
inc
jbe
mov
popl
loope
or
adc
inc
inc
xchg
mov
inc
xchg
aaa
jl
ss
mov
pop
xor
or
jg
outsb
dec
ret
push
adc
pop
popa
cmc
mov
pop
mov
cmp
xor
xchg
jmp
dec
adc
adc
push
xor
neg
pushf
xor
adc
mov
xor
xchg
mov
xchg
xor
jbe
sbb
rclb
hlt
pusha
xor
stos
testb
shl
inc
xor
pop
popf
xchg
cmp
fwait
shlb
loop
icebp
movsl
out
lds
lds
dec
jecxz
jmp
inc
mov
push
nop
int
xchg
xor
add
cmp
scas
add
sahf
fs
mov
push
outsl
and
xor
xchg
and
rcr
and
xor
fsub
mov
jae
cmpsl
pop
nop
adc
leave
fisubs
sti
add
je
lea
leave
push
adc
outsl
sarb
ljmp
popf
add
in
jge
in
mov
pop
inc
xchg
lea
ss
rcrl
pop
in
roll
loope
adc
jl
or
daa
mov
cmp
add
mov
jae
xchg
aad
jmp
jmp
xor
sbb
mov
test
sahf
sub
mov
aas
loop
jnp
cs
lahf
pop
push
cmp
mov
aam
test
bound
jbe
lcall
movsb
jns
cltd
sbb
lret
and
sub
mov
pop
adc
popf
cmpsl
mov
loope
pop
ds
or
adc
adc
push
dec
xchg
shrl
push
lea
out
iret
fcoml
adc
sahf
fstpt
arpl
nop
pop
jns
cltd
sub
shll
bound
mov
inc
sbb
adc
lcall
rcrb
adc
xor
adc
stc
imul
pop
jge
int
das
movsb
pop
mov
testb
loope
dec
pop
mov
lcall
shrl
sbb
jl
icebp
mov
outsl
jmp
push
aaa
xor
shlb
insl
imul
or
mov
pop
inc
inc
and
mov
mov
jae
loop
insl
xchg
cmp
roll
mov
push
push
and
loopne
mov
fsubrl
cmp
in
sbb
loope
es
fcom
mov
cmp
popa
call
dec
sti
inc
mov
mov
ret
pop
cmp
cs
clc
xchg
cmc
fdivrs
jo
shlb
nop
subl
xchg
jl
ret
xor
inc
mov
xchg
jmp
lahf
mov
adc
ss
mov
and
fsubl
sbb
add
or
repnz
cld
ja
xor
mov
lods
lods
adc
adc
mov
fsubs
or
idivb
dec
loop
pushf
gs
xchg
out
xchg
out
fsubl
nop
xchg
in
mov
or
rcr
adc
fs
mov
daa
mov
sub
not
sub
outsb
loope
jle
mov
cltd
and
in
or
adc
fwait
adc
and
jns
ret
test
loop
jmp
lods
adc
and
pop
push
notb
daa
sti
bound
cld
sti
and
bound
test
scas
push
cmpsl
insl
mov
mov
dec
adc
jge
ret
cmp
rcr
testb
ret
test
pop
push
inc
mov
push
push
ja
pop
arpl
jb
dec
or
mov
xchg
sub
xchg
pop
das
jbe
xchg
xchg
in
pushf
insl
pop
loopne
imul
fisubl
ftst
mov
pushl
fsts
xor
xlat
mov
leave
adc
testb
das
icebp
shr
addl
and
inc
inc
sub
imul
ljmp
xchg
inc
add
pop
push
mov
push
push
adc
push
lea
in
mov
call
mov
movups
ds
popa
push
inc
loope
inc
int
mov
pop
sub
push
adc
or
icebp
lods
jnp
ret
shl
and
movsb
push
mov
test
int
out
cld
scas
xor
mov
add
xchg
hlt
cmp
xchg
lods
dec
iret
popf
dec
cmp
cmp
in
out
push
out
in
mov
and
jmp
sub
mov
or
test
sub
and
je
mov
and
pop
dec
int
out
xlat
daa
out
push
fimuls
mov
ja
sbb
jmp
add
jo
ret
pop
sub
sub
mov
mov
push
sbb
lea
mov
dec
cmpsb
iret
cmp
in
mov
add
pop
mov
lock
push
mov
aas
loop
pop
out
and
or
mov
gs
shl
pop
or
shrb
into
mov
xchg
add
inc
dec
scas
inc
sub
in
xor
ds
mulb
xor
pop
mov
out
in
mov
call
mov
jbe
int3
lcall
outsb
mov
mov
cmpb
adc
cli
xchg
repz
lret
aas
mov
stos
dec
push
mov
ret
test
fwait
inc
xchg
fnstcw
and
jl
adc
adc
fld1
js
fnstenv
into
insb
shll
mov
cmpsl
push
popa
out
and
pslld
mov
adc
dec
dec
mov
loope
das
jns
insl
paddb
pop
jns
push
insl
in
lahf
test
sub
pushf
rcrl
sbb
mov
push
lret
test
cli
mov
pop
cmp
or
and
call
adc
imul
sub
ficoms
push
jae
xor
jnp
call
push
in
lds
lods
outsl
popa
and
xor
and
out
mov
or
mov
imul
test
add
or
or
aas
lea
xchg
sbb
mov
aaa
push
ss
add
pusha
repnz
inc
aad
rorl
enter
dec
pop
cmc
inc
jb
xlat
dec
in
data16
orb
scas
bound
sub
ja
pop
xchg
pop
mov
sub
sub
fdivl
lock
test
pop
lods
inc
movsb
fsubrl
lea
xchg
jecxz
inc
inc
inc
repz
ret
iret
fldl
stos
stos
lods
daa
aaa
roll
inc
push
mov
or
pop
xor
cli
dec
nop
xor
cs
rcll
cmp
add
jle
shll
or
or
hlt
and
fisubl
out
mov
jns
push
outsb
inc
pop
stos
loopne
mov
mov
mov
loopne
lcall
loope
lock
lret
clc
fcompl
aad
mov
ss
insl
repnz
into
adc
out
stos
scas
mov
mov
shll
outsl
das
mov
inc
insb
mov
dec
cltd
or
dec
pop
or
ret
movsb
add
daa
ret
loop
jbe
insl
and
dec
or
push
iret
fidivl
jge
xchg
mov
fnstenv
fldenv
cmp
leave
mov
cli
inc
fwait
test
cmp
xor
jle
sahf
mov
ljmp
loope
add
sub
inc
pop
mov
loope
cmp
rolb
jns
jo
mov
and
lahf
adc
int3
dec
aaa
xchg
mov
rorb
movsb
pop
or
mov
xchg
lret
dec
inc
call
ror
bound
std
lea
popa
hlt
leave
or
sub
and
and
mov
pop
ljmp
add
imul
fadds
sbb
test
mov
xor
xor
sbb
cld
dec
lahf
and
fwait
xlat
pop
in
rcr
jmp
icebp
xchg
in
mov
cmp
insb
add
loop
xchg
xor
sub
enter
or
jo
dec
mov
inc
push
cld
sbb
lea
dec
sub
xchg
dec
xor
and
adc
fwait
loope
arpl
xchg
adc
adc
out
push
leave
add
xor
fwait
sub
stc
push
subl
and
stc
and
pop
lods
into
stos
test
adcl
xor
rcrl
xor
int
jo
je
ljmp
xchg
out
push
pop
push
fidivrl
cs
rclb
icebp
sti
inc
inc
xchg
imul
ss
loop
lods
mov
adc
lcall
cwtl
decl
lock
cld
mov
pop
xor
mov
mov
sti
inc
pop
xor
imul
call
in
xchg
test
add
push
loope
jnp
jg
or
punpcklwd
cmp
inc
mov
cmp
xchg
or
int3
pop
mov
ret
aaa
ret
jns
cmp
loope
ja
aam
nop
imul
lret
sahf
mov
xchg
or
sbb
or
dec
ss
bound
pop
loope
add
stos
aaa
sbb
loopne
adc
in
mov
push
lock
mov
jae
shll
int
and
pop
xchg
icebp
pop
xor
jb
in
rol
xchg
shrl
mov
aas
xchg
fldl
push
loope
dec
jns
xchg
xlat
cmp
push
out
cmpsb
mov
repnz
imul
addr16
xor
pop
repnz
mov
ds
sub
xchg
jns
loope
jmp
fiaddl
es
mov
push
roll
push
in
filds
sbb
cltd
add
es
cli
xlat
xchg
loope
inc
push
std
mov
enter
mov
int3
imull
sub
mov
mov
or
ja
push
dec
push
stc
sub
cmp
js
xor
in
negb
adc
mov
add
ds
jmp
jnp
dec
or
mov
imul
nop
jb
pushf
test
cmovne
stc
ret
sub
cmpsb
mov
ds
mov
movsl
test
cmpsb
cmp
sub
nop
pop
scas
inc
mov
loope
popl
iret
jecxz
jb
jbe
inc
movsl
pop
lret
aad
sarl
sbb
lds
sbb
pusha
das
fxch
or
xchg
push
inc
and
outsl
rolb
ret
or
adc
add
push
xor
xchg
in
and
and
lds
test
negb
loop
sbb
sub
sub
dec
icebp
inc
mov
lret
out
pop
arpl
orl
lea
sbb
jbe
or
xchg
aaa
sbb
inc
add
aas
shlb
out
dec
ljmp
pop
sbb
out
mov
test
and
xor
aam
pop
in
mov
daa
mov
inc
add
and
cmpb
jno
lret
cmpsb
pop
jg
out
push
inc
add
cmp
data16
jb
adc
in
adc
lods
inc
aas
cmp
or
jae
lret
loope
add
outsl
mov
dec
cmp
lret
inc
mov
adc
or
push
lcall
sbb
loop
loop
sbb
adc
and
into
mov
mov
inc
dec
cmpsb
lcall
jne
ljmp
pop
cmpsl
push
adc
inc
das
inc
icebp
cld
xor
movl
test
xchg
cmp
in
and
jne
outsl
addr16
loope
iret
outsb
mov
lret
pop
in
sbb
mov
sub
xchg
mov
and
setl
out
xor
jns
xchg
repnz
mov
popa
stc
xor
jle
jbe
insb
inc
aaa
cmpsl
jl
das
loop
jg,pn
js
push
cmp
adc
nop
mov
addr16
sub
jns
cmp
and
dec
jo
js
xchg
test
jbe
xor
and
pop
xchg
movsb
and
add
aas
jno
loope
push
lcall
mov
in
subb
notb
movsb
xchg
jg
add
in
mov
iret
fnsave
mov
or
mov
ret
push
movsl
pop
nop
movsb
mov
pop
adc
nop
les
dec
std
push
ds
xchg
mov
pop
push
clc
and
mov
stos
pop
cmp
jbe
leave
push
cmpsl
mov
mov
loopne
cmpsl
jo
or
mov
xor
std
stos
dec
cld
ss
push
and
add
xchg
push
adc
sbb
cmp
mov
pop
xor
or
scas
pop
jmp
test
sub
in
push
adc
out
in
add
adc
mov
xchg
loop
or
shrl
js
notl
push
mov
mov
or
sub
or
fmulp
push
adc
jb
jge
adc
bound
push
push
sti
and
mov
mov
insl
loop
fistl
in
sub
gs
test
lock
pop
pusha
jae
int
pop
lds
fldt
cltd
rcr
sbb
pop
adc
stc
sub
and
movsl
xchg
loope
mov
xor
test
mov
roll
sub
fldcw
aas
jo
jmp
in
stos
mov
popf
addr16
int3
outsl
pop
lds
imul
and
rep
xchg
adc
sbb
iret
fidivs
in
sti
lcall
pop
mov
sbb
loopne
les
in
lcall
push
and
dec
dec
and
sbb
andb
push
pop
mov
repz
xchg
add
mov
iret
icebp
jno
pop
dec
mov
dec
fs
mov
popf
inc
xor
xor
sub
movsb
cld
fwait
inc
ss
cmpb
mov
int
cmp
or
test
push
shrb
ficoms
xor
lds
or
inc
pop
pop
mov
inc
mov
aas
inc
dec
enter
adc
std
pop
out
adc
or
insl
loop
loope
lea
shll
jl
adcb
in
push
push
ljmp
lea
pop
cmp
xchg
jns
xor
addb
jmp
mov
mov
mov
leave
pushf
ret
shl
lcall
adc
test
ljmp
outsb
dec
aad
mov
mov
out
mov
push
insb
mov
in
dec
lods
mov
inc
xor
ret
mov
or
push
mov
out
jle
iret
xchg
adc
fisttpll
sub
and
fimull
int
loop
lea
test
lock
xor
sbbl
inc
out
sub
test
sbb
inc
dec
loop
pop
je
daa
mov
iret
xor
lods
xchg
sahf
cmpsb
adc
stos
pop
loope
iret
insb
sub
cmp
cli
pushf
loopne
rcrb
mov
pop
lods
clc
xchg
lds
fisttpll
push
test
out
in
fiadds
mov
pop
enter
aas
mov
scas
dec
mov
mov
inc
sbb
jns
pusha
xor
or
mov
inc
pushf
or
sbb
divb
iret
js
movsl
insb
fs
aas
dec
xlat
mov
movl
mov
adcb
cwtl
sub
push
fcom
rcrl
subb
mov
inc
mov
cmp
sbb
add
cltd
mov
or
outsl
ret
dec
sahf
push
cmp
cmpsb
push
sbb
cmp
pop
dec
inc
les
pusha
mov
jmp
js
insl
jl
lcall
scas
cmp
data16
leave
mov
mov
in
cli
cmp
xor
loop
stc
xor
sbb
mov
je
ss
sarl
or
fisttpl
fs
mov
mov
bound
mov
mov
xor
lock
gs
out
push
sar
out
jb
mov
sbb
lds
cmp
mov
out
mov
cmp
test
cmp
sub
and
mov
sub
mov
movsb
shll
jge
xchg
arpl
scas
imull
adc
mov
fwait
cmp
imul
mov
xor
inc
xor
mov
mov
sbb
loop
je
or
mov
lods
and
push
gs
aam
rorl
jbe
add
and
inc
inc
aam
dec
aad
loope
arpl
inc
adc
ja
push
cmp
add
movb
cltd
shll
aad
jecxz
adc
mov
ljmp
adc
xor
pop
rcrb
cmpl
inc
les
xor
mov
xorl
shl
mov
sbbl
pop
mov
add
cmp
nop
fistpl
aad
inc
jae
push
mov
mov
xchg
mov
mov
adc
xchg
push
xorl
jp
and
xor
pop
inc
shlb
cli
jp
sub
xchg
xor
dec
jno
pop
inc
enter
imul
mov
ja
mov
rclb
cmpsl
outsl
sub
movsl
mov
loopne
jno
rorl
mov
adc
fwait
data16
add
or
sub
sti
out
repnz
jae
pop
iret
fwait
xchg
adc
rcll
popa
mov
adc
jne
out
fidivl
xchg
rcl
inc
dec
mov
cwtl
inc
shlb
stos
dec
jo
jno
pusha
adc
or
xchg
add
jbe
add
xchg
movsb
stc
inc
dec
fbld
inc
jl
lea
xchg
mov
enter
sarl
mov
sbb
push
sub
sbb
mov
dec
and
inc
jno
cli
mov
inc
fsts
ret
addl
jnp
pop
and
pop
dec
pop
jae
faddp
jecxz
cmpsb
int
repnz
repz
push
jge
in
push
inc
mov
test
inc
or
insb
jns
sbb
int3
xchg
jno
adc
sbb
sbb
ret
jg
add
mov
inc
push
dec
jmp
ror
and
pop
mov
cmp
sbb
sub
push
add
sub
mov
jae
addr16
pop
addl
lcall
inc
bound
movl
fmuls
mov
movsb
dec
fidivl
push
nop
pop
inc
loop
addr16
add
mov
and
push
leave
mov
add
mov
xor
mov
or
adc
popa
xchg
ror
hlt
leave
pop
adc
adc
shlb
and
aad
adc
rolb
inc
inc
jae
jno
pop
clc
jbe
test
pop
subl
mov
das
pop
sbb
adc
loop
fdiv
enter
shrb
aad
add
mov
sahf
push
adc
rclb
jo
gs
mov
lret
xlat
out
mov
loop
xchg
and
daa
xor
or
pop
mov
stos
loop
rclb
shll
test
xchg
mov
fdiv
dec
pop
cmp
sub
lock
sbb
and
loop
or
test
push
outsb
aad
inc
data16
ret
les
sbbl
inc
adc
dec
sub
mov
shll
addr16
xorb
inc
xchg
jb
pop
sbb
into
pop
adcb
adc
xchg
out
sub
mov
sub
xor
insb
jae
sub
xchg
ss
push
mov
mov
aam
int3
cltd
stc
rcr
jno
pop
xor
filds
mov
inc
fiaddl
jns
dec
mov
xchg
mov
push
mov
pop
pushf
mov
inc
or
cmp
jp
fmull
int3
sub
mov
add
in
ljmp
lods
mov
pop
enter
pop
fwait
mov
es
cmpl
adc
cmp
fidivl
dec
pop
jp
dec
adc
nop
fcoms
sbb
imul
shrb
lret
in
add
loop
inc
inc
sbb
into
mov
mov
inc
int3
jle
fisubs
xlat
jae
cwtl
lock
push
mov
jnp
jmp
jae
shl
cli
push
inc
mov
dec
xor
pop
rcl
movsl
sbb
push
popl
shlb
icebp
in
inc
xlat
dec
add
sub
popa
xchg
test
inc
shr
loop
fwait
push
fmulp
adc
nop
aaa
push
cmp
fwait
xor
das
mov
roll
xchg
inc
aam
mov
lcall
jl
sub
shll
mov
mov
ud0
test
sub
jno
fimull
inc
mov
xor
aas
ficompl
adc
and
ja
and
stc
adc
jno
jnp
sub
add
adc
fisttps
rcl
pushf
add
scas
xchg
jae
xchg
pop
sbbb
sbb
cmc
dec
mov
test
frstor
adc
adc
js
adc
mov
loop
adc
mov
mov
lahf
sub
inc
hlt
aam
push
or
adc
cs
adc
lret
sbb
test
hlt
fsubr
ficompl
inc
jno
repz
sbbb
jge
adc
xchg
dec
or
jg
lcall
adc
sbb
sbb
pop
neg
xlat
pop
sarl
adc
xor
mov
in
les
add
mov
xlat
dec
mov
shrb
aaa
rcrl
fsubl
mov
and
inc
or
mov
pop
inc
adc
fidivrs
sub
pop
adc
adc
into
sbb
mov
mov
inc
dec
fcompl
adc
cld
jno
nop
lret
xor
cmp
hlt
in
inc
into
mov
and
idiv
jecxz
test
add
dec
mov
test
sbbb
xor
cmpsb
push
insl
sub
ljmp
cmpsl
jge
push
mov
fbstp
xchg
aad
pushf
adc
jg
push
inc
cld
popf
adc
sub
aas
int3
xor
fimull
jmp
adc
xchg
mov
xchg
adc
xor
lcall
pop
dec
adc
in
rorb
xchg
ja
mov
repnz
repnz
movsb
adc
xor
mov
incb
inc
mov
jg
scas
adc
push
je
pop
leave
out
mov
or
fdivs
xchg
add
adc
adc
cwtl
into
push
stos
adc
dec
cltd
or
movsb
fst
jbe
shll
cwtl
jmp
add
add
jle
jns
icebp
inc
cli
pop
xchg
fs
xor
jnp
into
jg
sbb
xchg
mov
add
inc
mov
add
inc
and
repnz
rclb
int3
jo
xor
jae
xlat
xchg
mov
cmpb
inc
movsl
pusha
sbb
sbb
mov
rorb
dec
flds
int
dec
mov
hlt
aam
cltd
push
roll
sbb
dec
push
add
mov
ret
test
jne
mov
mov
jae
dec
rorb
lret
clc
mov
jno
jbe
fadds
jae
aas
inc
lock
xchg
inc
xchg
jmp
adc
dec
xlat
xor
add
jmp
mov
jno
push
xchg
mov
leave
inc
pusha
sbb
lock
push
jl
cs
shll
push
adc
mov
stc
js
mov
mov
stos
addr16
push
std
xchg
jno
inc
xor
jnp
push
cmp
sar
xchg
lahf
mov
iret
xor
push
ljmp
ror
pop
adc
add
push
xchg
mov
adc
mov
xchg
mov
inc
jl
xchg
rorb
jnp,pn
pop
popa
xor
fisttpll
adc
rorb
out
mov
les
jno
loopne
adc
dec
pop
mov
xchg
cmp
dec
std
inc
adc
xor
repnz
icebp
pop
fs
adc
fstpl
xchg
sbb
orl
and
push
fcmove
xchg
test
les
jno
sarl
std
xchg
lods
aad
cmpsb
add
fisubl
sbb
daa
out
repnz
xor
std
sub
add
pop
sbb
jb
cmpsb
adc
je
fs
fidivl
call
fcoms
pop
mov
xor
fstl
loopne
mov
inc
push
cmp
jno
fsts
jmp
adc
sub
sahf
inc
mov
rcrl
jns
push
add
lds
sbb
inc
adc
add
shl
repz
je
jb
adc
cmpsb
fildl
cltd
lds
jle
inc
sbb
xlat
shll
mov
push
sbb
cmp
daa
cltd
pop
fidivl
cli
push
fnstcw
xchg
subl
sub
jae
insb
aam
std
outsb
mov
scas
inc
ss
pop
sbb
hlt
lret
sub
rcrl
std
fildl
cli
rol
daa
shr
adc
out
dec
mov
xchg
push
xchg
jno
daa
jae
clc
push
jg
sti
sbb
dec
test
sbb
xor
add
out
add
int
rclb
jge
adc
cmp
dec
add
xor
push
pop
dec
push
dec
std
enter
iret
inc
mov
push
push
cli
push
mov
cmp
dec
into
pop
adc
inc
xor
dec
adc
mov
sbb
pushf
sbb
adc
out
adc
ret
roll
adc
notb
sbb
cmc
push
enter
xlat
shrb
xchg
xor
push
scas
add
mov
dec
sub
inc
xor
pop
xchg
add
test
sbb
mov
scas
in
and
daa
inc
js
stos
int3
mov
sbb
push
and
xor
adc
and
lea
push
and
xor
insl
or
lods
xorl
into
ljmp
xchg
jae
pop
ja
push
adc
out
cli
sbb
and
dec
outsb
fstps
and
sarb
pop
popf
xchg
xchg
test
jl
mov
cmp
pop
dec
inc
jmp
les
cltd
daa
rcrb
das
mov
shl
dec
pop
out
and
xchg
scas
shl
pop
stos
xor
rcl
aas
dec
cltd
sbbl
shrl
cmp
dec
xchg
inc
push
xchg
dec
xchg
adc
push
cwtl
xchg
mov
scas
push
jae
xor
inc
loop
and
sbb
stos
aaa
jno
push
push
popa
insb
pop
test
andl
imul
mov
jp
or
and
out
js
sub
mov
xor
jmp
jecxz
inc
int3
movsb
repnz
xor
sub
imul
imul
mov
shll
or
push
adc
sbb
addl
lret
sbb
lock
inc
mov
pop
insb
in
sbb
lods
ss
adc
loop
inc
or
out
icebp
sub
jae
pop
jo
cmp
out
inc
neg
xor
outsl
cltd
inc
loopne
jle
stc
loop
mov
adc
test
add
lcall
inc
xchg
fwait
cmp
and
into
inc
jno
xor
movsb
and
cli
mov
adcl
aas
and
rolb
inc
stc
mov
test
pmuludq
xchg
insl
mov
and
shll
loop
sub
xchg
repnz
in
subl
xor
gs
sbb
jb
add
pop
adc
mov
lret
dec
inc
inc
scas
pusha
inc
sub
stos
ljmp
pop
xor
xchg
and
add
xlat
xchg
fs
mov
out
pminub
repnz
and
cmpsb
sbb
pop
mov
push
xchg
fstl
mov
adc
push
sbb
jo
or
fiadds
push
frstor
rolb
jno
sbb
xchg
jbe
jl
or
push
mov
add
mov
mov
xchg
inc
jae
ljmp
popa
sub
push
cmc
sbb
jp
xchg
ja
xor
inc
loop
xor
outsl
push
xchg
addb
and
repnz
mov
adc
mov
cld
aaa
adc
mov
inc
stc
adc
jecxz
sbb
and
sbb
fcoms
dec
out
inc
lret
jno
mov
sar
inc
test
xorl
rcrl
int3
inc
adc
xchg
mov
xor
or
dec
rclb
inc
stos
push
inc
mov
cwtl
jle
push
fiaddl
adc
xchg
inc
sbb
fldenv
imul
bound
xchg
jae
push
cmp
pushf
inc
dec
cli
pop
gs
insl
add
lods
adc
jne
mov
mov
push
cmp
cs
adc
clc
jns
fwait
adc
shlb
jnp
add
pop
pop
int3
rorl
addb
mov
cmpsb
pusha
adc
and
loop
jae
and
sub
sub
enter
mov
sbb
sbb
cmp
out
mov
stos
mov
push
sbb
in
aam
xor
lock
fstl
mov
jae
pop
and
cli
push
jb
xor
cmpsb
shl
adc
cwtl
and
add
pop
fists
ret
dec
add
adc
loop
addr16
mov
out
rorb
jg
scas
mov
add
call
sarl
popa
sub
out
lret
icebp
stc
jno
rol
dec
pop
push
mov
sti
xchg
and
xchg
into
aad
jno
fildl
mov
xchg
mov
sbb
into
cmpsb
fcmovbe
test
mov
lods
inc
jno
xchg
aaa
and
pop
fs
lret
pushf
xchg
adc
and
pushf
imul
adc
inc
adc
jnp
pop
movsb
dec
sbb
push
jbe
jae
dec
xor
shr
push
aam
or
fsubl
sbb
lret
es
shll
loop
push
xor
push
push
mov
movsl
outsl
sub
int
mov
add
je
jno
pop
adc
fdivr
xor
mov
mov
push
cmp
or
das
imul
test
add
and
sub
jne
js
mov
push
xor
xchg
jae
test
ds
dec
pop
mov
jmp
in
push
xlat
xchg
into
dec
shll
mov
pop
inc
xchg
xchg
jnp
orl
gs
mov
outsl
push
popf
pop
jmp
pop
adc
adc
mov
adc
xchg
add
xchg
xchg
push
push
outsl
xchg
and
adc
out
pop
adc
in
jae
sub
sbb
or
decl
cwtl
and
mov
and
xchg
lock
cmpsb
adc
hlt
inc
adc
mov
push
mov
add
or
inc
in
push
adc
enter
add
xor
xchg
add
adc
ss
sub
mov
jno
int3
xchg
ror
push
pop
inc
scas
lcall
jmp
add
inc
xor
mov
push
leave
cmp
adc
aad
sbb
cmp
pop
int3
in
adc
pop
dec
jo
mov
dec
pop
insb
adc
xchg
adc
jle
ss
imul
dec
mov
inc
gs
aad
adc
sub
cmp
cmc
lcall
into
sbb
mov
imul
fs
aas
jo
cmp
mov
sbb
mov
jno
mov
xchg
inc
add
enter
cltd
mov
ret
mov
in
mov
inc
enter
rcll
sbb
inc
and
pop
add
push
fcoms
out
insl
fstps
pop
dec
mov
and
enter
ljmp
mov
iret
jb
and
inc
sbb
inc
cli
cli
lock
loope
rcrb
push
mov
sub
and
ret
jg
inc
popa
xlat
xor
pop
fs
cmpsl
add
daa
push
jbe
fistps
fsts
sbb
sbb
sbb
push
mov
xchg
jbe
and
and
cmp
xor
imul
mov
dec
mov
pop
aad
and
adc
xchg
and
inc
jmp
jae
push
adc
insb
adc
clc
aam
fnstsw
shr
xor
adc
mov
test
icebp
aaa
inc
sub
shrb
movsl
in
in
push
adc
cld
shrl
ds
adc
dec
add
sbb
dec
push
or
fstps
ret
adc
xchg
mov
adc
das
cltd
jecxz
xchg
dec
in
adc
sarl
pop
adc
mov
lods
pop
dec
nopl
jo
pop
xor
and
cmp
pusha
mov
push
outsl
es
leave
mov
movsb
test
adc
and
fidivrl
in
mov
andb
jge
test
cmp
push
test
dec
sbb
shr
push
out
fs
mov
adc
mov
inc
cmp
pushf
imulb
sub
and
pop
shl
pop
sub
adc
jecxz
scas
test
lret
pop
mov
sub
add
xchg
jne
lcall
cmp
out
mov
mov
cmc
mov
aas
push
cli
inc
nop
and
insl
mov
or
xor
mov
test
jbe
push
cmpsb
sbbb
or
mov
xor
xor
or
xor
test
cld
dec
repz
clc
sbb
mov
mov
popa
sub
sbb
dec
pop
pop
jle
push
sbb
cmpsb
aad
jno
arpl
sub
push
aas
mov
ret
cmp
sbb
rcl
aam
sti
and
insb
mov
cmpsb
sub
fwait
inc
pop
icebp
xchg
dec
sahf
sbb
mov
in
hlt
loopne
repnz
push
out
sub
add
movsl
and
sbb
or
adc
push
loopne
aaa
scas
in
pcmpeqw
sti
or
mov
loope
testb
xchg
xchg
xor
loop
rcll
mov
notl
loope
mov
dec
mov
fnsave
dec
sbb
mov
popa
push
add
push
jno
jecxz
adc
jne
call
jecxz
andl
scas
ss
push
std
mov
mov
inc
mov
sbb
or
cli
push
and
xor
in
jae
mov
divl
and
outsb
jns
int
ss
in
ds
and
fwait
lock
or
inc
pusha
mov
ja
xchg
mov
sbb
adc
cmp
rol
mov
pop
mov
inc
loop
or
dec
fsubp
daa
jmp
pop
fstl
iret
jnp
sbb
jae
cmc
pop
nop
stos
int
imul
lods
lds
mov
popf
in
and
mov
aas
push
scas
sbb
das
and
sbb
popa
mov
jmp
adc
sbbl
loop
lret
dec
cs
das
mov
adc
out
dec
out
aad
dec
adc
xchg
loop
data16
int3
outsl
mov
gs
ss
or
cmpsb
dec
dec
jno
rcrl
mov
inc
adc
js
pop
divl
scas
sub
aas
jns
mov
mov
loop
dec
outsl
out
aas
sbb
add
jl
clc
xchg
shll
or
add
push
iret
gs
subb
dec
aaa
faddp
xchg
jno
jae
lret
nop
cltd
sbb
mov
hlt
jne
scas
or
cmc
mov
cmc
adcb
psubsb
loope
test
iret
fstpt
mov
push
fisubrs
pop
sub
or
movsl
xor
ret
cmp
mov
mov
or
xchg
lock
and
arpl
add
dec
adc
xor
inc
dec
stos
mov
and
cmpsl
adc
dec
and
stos
ja
push
xchg
jns
or
inc
push
jge
aaa
mov
xorb
or
in
mov
dec
sub
mov
push
or
inc
sub
popa
jecxz
ret
pop
jl
cld
aaa
addb
xchg
push
shlb
inc
cld
mov
sbb
inc
aaa
loop
mov
dec
ja
dec
sarl
xchg
cmp
into
adc
test
ljmp
ret
cmp
xor
in
in
mov
mov
negb
xor
adc
adc
mov
mov
aaa
mov
inc
loope
pop
lret
ret
sub
jns
xlat
call
or
pop
lods
arpl
xor
jne
adcl
cmpb
dec
mov
push
test
or
jmp
xchg
adc
loope
aad
std
push
lret
xor
out
aaa
lret
inc
mov
mov
dec
or
mov
hlt
aaa
scas
xor
loop
loop
shll
cmp
cmp
out
lahf
stos
inc
inc
mov
mov
and
or
rorb
push
inc
sub
sub
imul
adc
ja
adc
inc
cs
mov
leave
flds
clc
insl
addb
push
sbb
jmp
xchg
fcoml
xchg
jge
push
pop
adc
pusha
inc
test
mov
xor
loope
je
test
mov
mov
lea
push
cli
enter
push
pushl
icebp
cmp
imul
pop
cmc
push
mov
cmpsl
add
xchg
cmp
clc
je
sti
cli
jo
mov
add
in
mov
fbld
int
sbb
sub
repz
cmp
sarl
xor
mov
stc
popf
cmp
pusha
ret
adc
pop
rclb
inc
mov
or
sub
pop
mov
sbb
jmp
andl
icebp
xchg
mov
jnp
mov
call
mov
outsl
or
xchg
test
repnz
add
stc
dec
mov
pop
mov
js
aad
cltd
mov
mov
inc
mov
dec
lcall
scas
lock
mov
adc
sarb
push
ss
mov
or
dec
imul
inc
sub
lret
mov
cmpsb
mov
call
add
pop
and
inc
inc
scas
sbb
movsb
sarl
cwtl
cmp
and
xchg
add
add
and
sub
push
xor
adc
cmp
dec
int
mov
push
int
idivl
pop
push
adc
push
xchg
mov
repnz
sti
jb
cmp
jno
out
iret
nop
in
jae
lahf
cmp
in
and
mov
jp
lds
lret
sub
in
inc
cwtl
sbb
jb
push
adc
loope
dec
xor
pop
in
adc
or
sbb
mov
arpl
loopne
push
pusha
mov
mov
lea
jnp
data16
push
mov
cltd
add
mov
ud2
mov
xchg
mov
or
addl
int
andb
xchg
pop
sbb
mov
xor
jge
js
imull
aaa
xchg
aam
inc
loop
in
loopne
xchg
int3
test
outsb
jecxz
roll
into
iret
add
lds
outsl
xor
and
fiaddl
call
nop
inc
add
pop
scas
pop
sbb
das
sub
pop
lds
test
cs
xor
pop
adc
push
xchg
mov
test
fldt
cmpl
push
jb
mov
aaa
and
and
loope
mov
pushf
incl
cmp
pop
enter
mov
nop
cmp
outsb
jbe
aas
mov
test
cmpsl
jo
pop
pop
ss
movsb
fcomip
push
sti
dec
jae
out
push
lods
add
les
lods
movsl
pop
add
jnp
es
dec
push
and
loope
lret
fdivl
xchg
in
adc
leave
and
and
int3
stos
xchg
imul
add
call
xor
pop
outsb
jl
cmp
mov
lock
sahf
push
js
lods
or
xchg
les
pop
sbb
adc
mov
mov
sarl
mov
inc
xchg
imul
xchg
pop
notb
add
stos
gs
or
cwtl
fisubs
cmpsl
out
movsb
in
xor
and
sbb
cwtl
inc
sub
insl
jbe
decl
pop
mov
adc
mov
cmpl
cmpb
fs
and
mov
jl
dec
mov
into
insl
test
adc
cmp
imul
dec
jmp
aas
inc
cld
jp
add
mov
out
mov
clc
testb
int
mov
fcompl
loop
adc
add
jno
and
mov
pop
test
fs
arpl
repnz
in
xchg
sub
mov
sti
xlat
xchg
jb
sub
mov
dec
mov
insb
fcompp
cmp
sub
sub
std
arpl
popa
sarl
mov
xchg
inc
push
scas
cmpsl
loop
sbb
mov
mov
jb
lcall
lock
mov
jo
ja
jne
adc
orl
mov
push
xor
testb
add
fwait
mov
xor
aaa
cmc
mov
gs
sbb
test
fcoml
jne
push
cmpsl
and
xchg
aaa
sbbb
sbb
lcall
mov
out
xor
dec
lock
loope
data16
xor
xor
mov
into
js
inc
ja
cwtl
fistl
test
dec
xor
lcall
addr16
sbb
lock
addb
sbb
pop
adc
mull
mov
popa
jle
push
adc
inc
jo
int
xchg
and
out
and
or
cmpsl
cpuid
jbe
pop
jb
jb
call
loope
shrl
push
les
mov
dec
mov
pop
setb
bnd
mov
cmpsl
outsb
cs
std
add
cmpl
jns
xchg
lcall
mov
jne
inc
push
sbb
xor
sbb
lea
or
lahf
sbb
pop
int3
mov
and
and
cmp
push
push
mov
gs
fcoms
loope
aaa
jecxz
in
das
push
inc
mov
outsl
mov
ret
adc
popa
add
hlt
sarl
out
jno
mov
shlb
addr16
push
push
pop
loop
jle
push
nop
mov
pop
and
sbb
call
inc
cld
addr16
and
or
sbb
add
mov
push
imul
jno
ficoml
xchg
push
mov
mov
mov
iret
or
mov
lock
add
and
mov
addr16
cltd
in
inc
test
in
loope
and
loop
xchg
add
inc
mov
rorb
xchg
adc
sub
cmp
sbb
mov
cmp
je
icebp
lock
jmp
pop
test
xor
and
fs
dec
addr16
lds
jle
push
dec
mov
mov
mov
repnz
jge
call
jle
data16
pop
mov
icebp
jmp
or
adc
add
jne
pop
mov
pop
int
xchg
fistps
push
mov
mov
and
pop
sbb
jecxz
push
lea
iret
dec
push
in
xchg
sub
mov
sub
xor
push
or
jo
scas
outsb
push
add
or
cmpsb
inc
loop
repnz
and
mov
jbe
scas
mov
vmwrite
pop
in
mov
dec
data16
sub
jbe
mov
mov
fisubrl
dec
adcw
inc
daa
mov
pop
pop
cmp
xor
or
jge
cld
inc
bound
fs
stos
sub
dec
or
in
xchg
loop
es
mul
jno
mov
or
mov
outsl
addr16
dec
sub
adc
mov
movsl
stos
pop
pop
test
pop
stc
loop
sbb
sub
dec
dec
in
clc
or
cltd
inc
xchg
mov
mov
stc
push
nop
push
push
dec
lret
jb
or
aas
inc
cmp
movsb
fisubl
and
jns
fstpt
xchg
xchg
and
in
jp
dec
iret
cmp
in
dec
cmp
lock
out
cmp
fmull
dec
das
ss
into
inc
lock
mov
jns
movsl
push
aad
sti
mov
jmp
loop
xlat
cmpsb
dec
loope
add
lcall
cmc
hlt
gs
adc
loope
sbb
xchg
in
add
dec
add
jns
push
pop
test
xor
mov
cmp
push
dec
jge
shlb
mov
sub
xchg
cmpsl
dec
lock
jno
or
cmc
loop
cmp
dec
pusha
xor
int
rorl
push
fbld
mov
pop
mov
inc
in
mov
outsb
dec
jns
jno
inc
mov
add
in
pop
mov
idivb
add
jmp
insb
jb
scas
int3
and
int3
add
movsb
cmc
js
dec
xchg
pop
jle
xchg
fidivrs
inc
enter
adc
loope
mov
mov
add
jnp
and
pusha
iret
leave
stos
lods
das
sub
clc
dec
adc
stos
and
mov
add
shlb
std
add
or
insb
mov
mov
scas
dec
ja
rorl
iret
out
dec
popa
das
adc
fstps
mov
push
fnstenv
pop
or
bnd
inc
ret
cwtl
mov
xchg
outsl
in
mov
idivb
inc
adc
lea
pop
dec
or
push
int3
sbbl
inc
inc
and
das
mov
adc
lahf
sub
scas
ds
cs
repz
loope
int3
fbld
pop
mov
ret
ljmp
mov
jae
sbb
mov
inc
int3
xor
xchg
fbld
outsb
lods
inc
and
pop
sbb
inc
pop
out
ds
dec
mov
fsubl
pop
mov
rcr
shll
sbb
sbb
in
out
fnsetpm(287
or
popa
loop
cli
sbb
pop
ret
dec
das
test
sbb
mov
psubw
negb
test
scas
xchg
in
movsl
int
sahf
enter
stos
xor
mov
push
out
roll
or
dec
mov
call
aad
or
ss
cmc
push
mov
mov
cmp
xor
cmp
xor
mov
xchg
push
leave
xchg
mov
lods
or
dec
movl
mov
mov
shlb
pop
mov
ss
rclb
fisubl
mov
fwait
xchg
mov
movsl
cmp
and
xchg
jmp
mov
mov
xor
adc
adc
or
outsb
js
das
or
jno
les
mov
or
loop
xchg
leave
loop
push
lcall
mov
pop
sub
adc
cmp
data16
and
lods
dec
mov
fsubrl
daa
inc
sti
mov
mov
push
ljmp
shlb
jg
inc
sbb
cmpl
imul
lock
adc
cmpsl
repz
mov
test
sar
mov
fs
xchg
popf
and
mov
in
nop
int
jecxz
mov
lret
arpl
hlt
add
xor
ss
scas
scas
jp
popf
dec
jae
les
inc
test
mov
popf
in
jl,pn
adcb
faddp
add
mov
pop
sub
jne
cmp
add
sbb
js
pop
mov
sysexit
loop
lret
pop
cmpsl
je
mov
push
mov
dec
popa
int
fistpl
stos
and
rolb
jge
add
pusha
data16
test
mov
fwait
adc
and
mov
xchg
xor
or
xchg
sub
or
jl
push
cltd
pop
test
mov
insb
cmp
cmp
jl
je
and
repnz
in
sbb
lahf
movsb
jle
mov
mov
xor
mov
push
cmpsb
xor
mov
pop
push
dec
pop
sbb
mov
xchg
and
xor
in
in
jbe
push
mov
lcall
jo
jbe
sub
test
lock
iret
xchg
mov
pop
mov
outsb
xchg
adc
icebp
andl
push
mov
sbb
cmp
mov
mov
inc
mov
fmuls
or
xlat
or
sub
sbb
in
xchg
shlb
cmc
mov
pop
lods
pop
stos
push
and
and
fs
add
dec
clc
adc
lock
xor
rclb
inc
leave
mov
dec
and
es
pop
and
or
push
add
or
stc
xlat
jp
sub
xchg
jle
repnz
push
adc
push
inc
or
pop
out
lea
mov
out
inc
push
loop
insb
stos
push
push
nop
lds
ficoms
adc
stos
or
mov
push
pop
jno
out
inc
imul
jo
and
push
lahf
push
inc
mov
adc
lret
fidivrs
mov
popa
ljmp
enter
pop
cmovno
fsub
mov
lcall
lock
or
or
ja
in
push
mov
pop
and
out
xorl
and
dec
push
lea
inc
dec
mov
std
popa
loope
pop
push
mov
repz
ljmp
addr16
and
mov
in
mov
ret
arpl
stos
and
dec
adc
bound
imul
shr
test
test
sarl
and
pop
dec
clc
lret
xchg
and
sbb
xor
loop
int
jo
pop
sub
iret
cmpsl
adc
sbbb
mov
mov
loop
pusha
sarb
and
mov
push
mov
push
cltd
repnz
stc
jbe
imul
fildl
pop
and
out
fistps
hlt
sbb
pop
nop
mov
pop
cld
mov
jns
mov
mul
out
or
add
xor
cs
mov
mov
mov
xor
out
push
mov
cltd
mov
fwait
sbb
jo
outsb
testb
xchg
mov
pop
addb
mov
out
inc
mov
js
out
cltd
pop
and
adc
sbb
nop
mov
xchg
push
addr16
shll
out
mov
and
enter
dec
cmp
xor
fnsave
dec
mov
dec
sti
inc
stc
repz
loope
dec
mov
shl
in
fcompl
data16
popf
xorb
inc
mov
cli
and
nop
and
jne
cltd
pop
cmpsl
cltd
xchg
xchg
scas
mov
fidivl
cmpsl
sub
inc
sbb
cmpl
adc
in
call
xlat
xchg
popf
mov
mov
sti
dec
imul
call
adc
jmp
xor
push
push
loope
mov
jae
loopne
mov
ljmp
mov
ja
ja
sub
push
and
bound
fsubrp
es
std
scas
jecxz
aad
sti
scas
clc
lods
pop
mov
jbe
mov
sbb
lahf
push
push
mov
sub
cmp
movsb
mov
push
dec
mov
sbb
in
div
xchg
dec
xchg
jp
and
xlat
unpckhps
push
in
cmp
ficoml
adc
loope
and
fdivl
movsl
adc
jmp
and
xchg
test
test
gs
lcall
push
sbb
aad
mov
sub
mov
adc
mov
ret
sahf
mov
mov
cmp
addr16
lret
add
lret
push
or
and
push
push
push
sub
leave
loop
insb
idivl
pop
add
and
pushf
mov
mov
mov
pop
repz
sbb
pop
sub
pop
lock
mov
push
out
pop
daa
sbb
in
ret
cmovno
rcrl
daa
jle
xchg
scas
jecxz
andl
sub
leave
mov
arpl
mov
push
mov
mov
xchg
adc
xor
adc
mov
loop
pushf
inc
mov
ret
aad
scas
and
shl
daa
mov
lcall
xchg
movsl
outsb
lcall
loope
aas
ss
notb
pop
jmp
pop
dec
xchg
and
roll
xchg
call
stc
mov
shl
adc
imul
mov
add
mov
mov
leave
dec
mov
in
in
jbe
push
jl
dec
sbb
inc
lock
sub
xchg
mov
xor
in
test
lods
and
les
dec
xchg
loop
jne
push
aaa
xor
push
xchg
pop
dec
testl
adc
faddl
sbb
cmp
hlt
xchg
or
xchg
mov
mov
les
jns
cmpb
loop
mov
in
add
mov
repnz
shlb
sub
aad
outsl
mov
std
imul
and
divb
mov
pop
pop
xchg
adc
jle
divl
cmp
cmp
data16
pop
roll
sti
push
jl
sub
in
inc
insl
stc
push
js
adc
inc
shrb
sub
inc
xchg
add
xchg
inc
adc
mov
mov
jnp
scas
mov
shrl
in
inc
jecxz
mov
loop
pusha
pop
ds
ss
mov
adc
or
inc
out
push
fld
nop
pop
fisttpl
test
shl
stc
jo
sbb
ss
rcr
loope
lcall
jne
mov
scas
lods
iret
insl
pcmpeqw
adc
fsubrl
add
mov
rcr
push
aad
in
sub
add
xchg
shl
inc
cmp
and
pop
jb
loop
in
mov
dec
adc
sub
popa
mov
mov
cld
pop
loop
js
movswl
popf
dec
loope
sub
out
fwait
xor
cmc
xchg
xor
lret
loope
mov
pop
jp
rep
jl
mov
insw
call
mov
ljmp
sbb
repnz
adc
xor
mov
push
pusha
loop
test
cmp
in
pop
popa
ret
adc
jle
add
ss
fwait
sti
test
mov
in
int
loop
out
fs
xchg
mov
xchg
xlat
shl
loop
dec
iret
out
mov
cwtl
in
jb
xor
sahf
arpl
aam
enter
shrb
divb
pop
lods
fwait
mov
cmp
or
int
jns
mov
cli
sti
sarl
dec
mov
mov
sbb
int
into
in
jl
fsub
in
iret
xor
aam
mov
stos
pusha
mov
and
dec
in
mov
add
adc
cld
leave
jno
sub
push
test
sub
shll
jp
jb
adc
mul
mov
insl
sbbb
push
mov
xor
jbe
flds
pop
lcall
ret
aaa
xchg
dec
cli
nop
pop
or
xchg
cmp
inc
cmc
adc
loope
jo
push
nop
outsl
fsts
out
inc
movsb
adc
das
xor
adc
mov
popa
int3
pmuludq
adc
dec
dec
fidivl
xor
sbb
mov
mov
enter
or
mov
sti
daa
sti
jnp
jge
fdivs
sbb
imul
push
push
mov
in
movsl
dec
or
test
xor
and
sub
mov
sbb
jno
adc
lret
sbb
loop
shrb
mov
repnz
xor
push
and
loope
test
seto
sarb
mov
loop
xor
sub
std
jecxz
or
xchg
xchg
lcall
sbb
leave
dec
lods
loop
and
leave
imul
hlt
subb
loope
pop
adc
fistpll
loop
dec
in
mov
xchg
inc
aas
loop
jbe
out
mov
pop
stos
mov
xor
hlt
sub
outsl
and
cmp
mov
pop
jge
sub
inc
mov
outsl
mov
popa
xorl
mov
cmp
cmp
mov
test
mov
dec
inc
and
popa
gs
push
adc
adc
dec
out
xor
scas
lds
pop
mov
mov
adc
in
sub
jl
and
int
jne
ss
and
mov
sti
mov
ficompl
mov
fdivs
imul
sbb
jecxz
and
idivl
cmp
lret
in
pop
cli
mov
mov
lret
sub
xchg
jp
sbb
imul
push
sub
push
push
in
jns
xchg
insl
jmp
fbstp
sti
cltd
and
pushf
and
push
ja
jns
sub
aad
repnz
out
jl
push
scas
lods
mov
xchg
loop
adcb
xor
aaa
and
jp
mov
dec
nop
psubb
loope
xor
inc
jbe
add
cmp
int
int3
out
int
jns
inc
jmp
xor
push
pop
je
push
add
push
aaa
cli
inc
adc
cmc
or
popf
pop
lods
dec
push
out
mov
and
test
addb
popa
icebp
pop
mov
sub
jmp
adc
pop
pop
imul
fsubrs
mov
bound
imul
repnz
or
or
mov
repz
xor
int
cwtl
pop
sti
xchg
inc
sti
ds
mov
adc
cmp
insl
mov
aad
movsl
cli
xor
sbb
ja
and
andb
lret
shll
push
movb
mov
and
mov
jb
push
mov
or
cmp
inc
push
mov
inc
xchg
dec
pop
loope
dec
std
test
int3
outsb
jb
popf
cmpsl
nop
pop
data16
daa
pop
pop
ds
push
jecxz
mov
cmc
push
clc
in
pop
push
imul
mov
rol
inc
push
pop
jno
in
js
imulb
xchg
insl
inc
jle
into
movsl
fwait
sub
xchg
mov
imul
xchg
xor
mov
jp
cmp
mov
insb
popl
dec
pop
mov
test
push
in
jecxz
xor
std
sub
sbb
ficomps
popa
inc
pop
adc
imul
ljmp
into
test
jo
push
cwtl
sub
lods
xchg
adc
mov
and
cltd
test
mov
filds
or
and
mov
fwait
mov
cmp
cmp
push
sbb
push
lock
lods
jnp
outsl
cmp
imulb
mov
pushf
roll
call
inc
pop
lods
lea
xor
push
push
push
adc
inc
fs
imul
dec
push
shrl
sub
mov
bound
lods
loope
or
cli
aaa
and
leave
pop
aas
mov
inc
outsb
cmp
mov
addb
and
add
cltd
dec
mov
lock
jge
add
mov
pop
dec
add
add
loop
cmpsb
cld
repz
and
ret
repnz
push
ltr
jmp
push
pop
sti
push
or
loopne
sarb
jl
das
orb
addl
add
pop
insb
cltd
sub
cmp
xor
cld
aas
adcb
push
pop
push
lret
jle
adc
add
clc
pusha
lds
xor
dec
adc
lret
insb
call
push
inc
pusha
shl
pop
push
jle
xor
inc
cli
popa
icebp
pop
cmp
adc
sub
icebp
jnp
imul
sub
mov
adc
iret
inc
test
insl
mul
pop
dec
js
cmp
das
push
cmpsb
ljmp
mov
xchg
in
jbe
pop
mov
lods
out
sti
notb
sbb
mov
test
jo
xor
ret
push
and
jle
cmp
or
mulb
xchg
shl
mov
pop
sbb
xor
test
xor
mov
mov
test
daa
add
xor
fwait
or
lret
cmpsl
add
xor
cld
mov
popa
add
sub
in
mov
lcall
dec
xchg
push
rorb
cmp
jecxz
mov
xchg
cmp
test
rol
out
and
jle
loop
pop
mov
push
test
es
mov
jno
pop
adc
loopne
sub
cli
test
aas
jno
into
xorb
sarb
mov
cmc
xor
inc
imul
inc
cmp
mov
loope
into
push
sbb
mov
sub
loope
icebp
pop
pop
dec
pop
bound
std
and
loope
mov
insl
out
dec
add
hlt
xchg
xchg
mov
jno
daa
mov
pop
lcall
jbe
mov
lret
push
inc
lods
xor
lds
mov
mov
xchg
mov
xchg
aad
aam
xor
push
mov
jno
lret
jge
in
cld
jns
mov
ret
jge
andnps
iret
lods
push
pop
lea
jae
dec
xchg
ficoml
out
repnz
pop
mov
dec
test
test
cmp
loope
jno
push
add
mov
xchg
fmuls
fwait
mov
pusha
xchg
cli
leave
loop
insl
sub
dec
mov
insb
test
sub
aas
cmp
mov
cmp
jae
push
lret
lods
cld
mov
cmpsl
cmc
mov
mov
notb
cmp
adc
fdivl
cmp
cli
xchg
and
aad
push
push
pop
jmp
cmp
nop
push
iret
sbb
jo
pushf
inc
pop
out
testb
loopne
mov
dec
push
jge
sub
int3
fldenv
inc
test
pop
out
mov
lds
add
iret
repz
inc
mov
stos
sub
pop
jp
cmp
mov
jns
ljmp
out
xor
xchg
push
data16
push
popa
adc
rcrl
mov
pop
mov
or
nop
adc
loope
jo
jbe
push
push
inc
jmp
in
push
call
mov
mov
pop
push
or
lea
out
cltd
cli
jae
dec
push
test
btr
loope
repnz
daa
stc
ret
movsl
data16
or
push
cmp
push
lds
aas
dec
cmc
cmp
jp
and
movsl
pop
inc
loop
jne
jno
imul
xor
arpl
dec
ds
jle
xchg
rdtsc
mov
add
cmp
aas
stos
in
lret
jbe
das
jne
lock
data16
movsl
jo
cmpb
cmpsl
shrl
cld
adc
mov
sub
mov
adc
mov
scas
test
outsb
sub
pop
mov
addr16
cli
and
imul
lret
inc
mov
test
in
test
dec
sub
jl
push
fdivl
mov
dec
push
and
mov
push
lret
ljmp
ljmp
and
imul
cmp
adc
push
outsb
gs
iret
inc
cmpsb
mov
xchg
leave
loop
dec
jl
xchg
adc
sub
mov
shlb
es
xchg
and
sahf
add
pop
lret
xchg
sub
cmp
inc
cmp
pop
mov
dec
mov
sub
ficoml
inc
lret
add
jmp
push
sbb
out
jge
inc
xor
push
movsl
push
push
or
loope
pop
jno
or
or
aas
xor
pop
les
jle
adc
add
nop
mov
xchg
fsubs
pop
cmp
divb
xchg
sbb
xchg
jg
cltd
jl
cli
das
push
xor
inc
jno
mov
sbb
pusha
pop
xor
sub
xchg
jne
out
repnz
mov
xlat
test
loop
jno
and
cmp
sahf
fldenv
or
jo
ss
xchg
push
orl
add
mov
scas
mov
jge
loop
adc
add
in
dec
fwait
xchg
jbe
jo
test
testb
xor
dec
sbb
sbbl
std
repz
mov
or
jae
bound
xchg
ficoml
sar
cmp
sbb
add
popf
sbb
stos
loopne
in
mov
or
pop
pop
fadd
sbb
cltd
std
jae
push
adc
xchg
mov
xchg
mov
pop
imul
loop
adcb
xor
movsb
jno
in
in
cmpsl
or
and
pop
nop
ja
lods
jge
ret
or
int3
data16
mov
pop
rcll
xor
xchg
sbbb
sub
adc
rcll
ss
mov
data16
popa
shrl
cmp
je
gs
arpl
adc
mov
leave
rcrb
dec
in
repnz
mov
jno
jno
out
cmpsl
loope
push
adc
sbb
ror
add
mov
fldt
testb
shl
add
push
sub
loope
call
popa
xchg
mov
or
cmp
jb
fists
ljmp
jno
lods
dec
push
repnz
bound
imul
jle
sbb
xchg
mov
loope
stos
push
lods
cltd
loop
insb
movhlps
add
cmp
jle
push
inc
std
add
cs
lret
inc
or
out
mov
dec
lds
aad
in
push
test
loope
test
test
inc
adc
outsl
aad
jle
adc
test
mov
lods
mov
imul
insb
xlat
lods
or
xchg
adc
and
addr16
sbb
iret
push
jbe
cmp
ljmp
sub
out
cltd
dec
int
mov
cmp
sub
cmpsl
dec
xor
daa
and
add
fcompl
mov
mov
scas
aas
loopne
outsl
leave
push
fadds
data16
mov
jno
loop
iret
aad
mov
cmpb
js
dec
lret
inc
repz
pop
pop
loopne
shrl
push
sbb
sub
add
and
lods
pop
jle
jae
rcll
pop
and
jns
push
cmpsl
imul
push
inc
mov
adc
insl
push
test
xchg
xlat
lods
inc
pop
push
cmp
jo
push
xchg
loope
adc
test
mov
push
mov
stc
and
cwtl
sub
or
mov
enter
xchg
inc
daa
xchg
int3
test
push
das
sbb
dec
mov
test
sub
cmpb
push
or
xorl
and
xchg
xchg
xor
test
dec
fcmovu
popa
int
ljmp
adc
lods
insb
jl
and
and
test
movsl
sbb
test
cmp
js
sbb
push
or
mov
mov
mov
dec
xchg
add
push
sub
dec
int
pop
je
sub
lea
xchg
cli
dec
loop
push
ds
sbb
push
pop
and
dec
mov
mov
test
dec
add
push
add
push
loop
fdivrs
jl
lret
push
insb
dec
sbb
cmpb
push
aad
js
mov
cmp
push
enter
sub
sub
pop
push
pushf
into
daa
or
jne
dec
mov
push
aaa
add
xchg
mov
sti
push
mov
xor
push
jb
movsb
dec
lcall
jns
cmp
add
fidivrl
and
pop
gs
mov
cmpsl
in
xor
adc
dec
fisubl
sbb
push
mov
sub
daa
lock
and
js
mov
int
in
xchg
addr16
sbb
leave
mov
sbb
fistpll
xor
leave
in
adc
scas
xor
mov
mov
hlt
pop
xor
mov
nop
dec
xor
imul
in
or
in
les
ss
sbb
fsts
push
call
xor
out
in
mov
cmp
int3
adc
fnstsw
aam
nop
mov
sbb
add
imul
xchg
xor
loop
add
inc
in
mov
xchg
mov
aam
xchg
aad
sub
fsubp
add
mov
mov
adc
pop
loop
movsl
xlat
not
insl
popa
adc
pushf
cmp
push
mov
movsb
mov
and
or
xchg
and
push
dec
and
in
enter
mov
mov
or
or
xchg
in
dec
adc
jae
loop
addr16
and
mov
mov
int
stc
or
jno
pop
pop
sub
sti
daa
sub
lcall
vpmulhuw
and
je
inc
cli
bound
int
push
push
jns
lret
and
dec
add
mov
dec
sbb
pop
sbb
divl
push
repnz
loope
sbb
jp
ds
push
scas
jo
scas
jbe
daa
sbb
jecxz
push
mov
cmp
adc
test
mov
xlat
xchg
jge
mov
out
pop
push
lods
js
shll
data16
or
sub
xor
inc
lods
pop
pop
mov
lds
xchg
imul
push
ds
adc
sub
enter
mov
push
in
ffree
mov
sbb
loop
divb
das
test
jb
xor
loope
jno
jge
mov
inc
sbb
stos
out
sbb
cmp
je
ret
loop
mov
in
push
popa
jecxz
xchg
xor
shlb
sbb
push
pop
xchg
inc
jae
das
inc
add
inc
mov
bound
cmp
mov
cmpsl
fcmovb
in
or
push
push
loop
fwait
or
cmpsl
iret
lcall
mov
xchg
repnz
inc
mov
sub
or
js
fsubrs
mov
push
mov
pushf
lods
cli
leave
pop
inc
and
adc
mov
sub
mov
dec
dec
or
cmp
push
pop
loop
jmp
mov
in
aam
ja
repz
or
pop
movsb
aas
insl
call
mov
push
into
fdivr
jne
jns
sbb
and
add
mov
cmp
add
adc
in
aas
leave
jle
inc
sub
daa
sbb
sbb
cmp
xchg
cmc
push
mov
inc
and
or
xor
and
push
inc
flds
out
and
push
fstp
fists
setns
adcb
cli
push
scas
ffree
xor
imul
jge
js
jb,pn
push
sarl
aaa
jne
nop
test
adc
push
frstor
dec
dec
and
xchg
cld
or
lock
leave
out
ds
sbb
mov
push
mov
inc
and
insl
imul
mov
add
imul
mov
subb
sbb
and
mov
aam
sub
fidivl
mov
sub
gs
insb
inc
outsb
pop
mov
out
leave
aaa
cmp
push
or
cmpsl
out
xor
mov
pop
xor
pop
loope
cmpsl
push
cld
and
cmp
sub
and
pop
inc
xchg
in
push
lret
lret
xor
es
xchg
jb
xor
cmp
imul
lds
out
shlb
xchg
inc
lock
xchg
sbb
flds
or
lret
jno
call
jnp
add
aam
mov
mov
push
int3
xor
loope
dec
ds
shrl
aas
sub
push
test
lea
fldl
mov
pop
mov
adc
xchg
daa
mov
push
sbb
iret
divl
in
adc
daa
add
pop
lock
bound
divl
movsl
addl
and
in
push
push
repz
mov
cmpsb
lock
subb
adc
dec
mov
test
cmp
dec
push
mov
adc
cmp
sti
jbe
daa
sbb
aaa
mov
fsub
xchg
sub
sti
push
sarl
hlt
lret
pushf
mov
xor
mov
push
xchg
inc
mov
ljmp
push
in
sub
std
push
daa
dec
insl
mov
and
pusha
aaa
fcmovbe
scas
push
mov
jle
ss
call
pop
iret
mov
adc
mov
outsl
lret
or
inc
cmc
push
mov
adc
fnclex
xor
lea
xor
adc
inc
cmp
loope
add
lock
adc
sub
pushf
push
cld
and
loop
dec
push
and
mov
loope
pop
int3
push
inc
sub
repz
movsl
es
xor
push
xchg
add
sarl
cmp
mov
add
adcl
test
lcall
repnz
jo
loope
sub
inc
push
or
and
adc
xchg
xchg
or
adc
jns
adc
xchg
lahf
lret
imul
inc
and
or
repnz
xchg
adc
pop
pop
dec
in
push
adc
jnp
cmc
in
rorb
push
xchg
add
or
mov
int
mov
data16
cld
in
movsb
xchg
push
lret
sbb
xchg
xchg
lods
mov
adcb
into
fs
loope
popa
lcall
or
sub
cmpsl
mov
xor
sub
decb
fiadds
adc
in
add
adc
sbb
pop
xlat
je
push
mov
mov
push
push
out
insl
stos
stos
rolb
mov
leave
dec
adc
fiadds
scas
fwait
cmpb
cmp
jne
les
pop
dec
leave
sahf
scas
les
sub
mov
inc
subb
or
push
pop
jmp
adc
mov
icebp
cmp
jns
sbb
jbe
jno
mul
adc
decb
lods
xor
push
xlat
jl
lds
cmp
jo
cmp
push
fmuls
test
mov
int
or
fadds
test
popa
dec
popf
cmpsl
lcall
xacquire
mov
sub
inc
xchg
and
int
faddl
push
loop
movsb
sub
addr16
es
sub
sbb
push
loop
sbb
jle
gs
push
and
mov
cmp
lret
pushl
je
mov
daa
push
rcrl
cli
push
cmc
testl
scas
lods
xorl
xor
adc
daa
lods
push
push
aaa
and
int3
jle
mov
mov
jl
testb
mov
test
in
pop
ss
ret
cld
test
loop
or
adc
lods
mov
xchg
xchg
movsb
jnp
jmp
fxch
cmp
mov
cld
stc
jmp
das
inc
and
cltd
ljmp
rcrl
imul
push
inc
rorl
jb
int
jbe
and
mov
cs
adc
cmp
and
xor
dec
hlt
lds
or
add
pop
jbe
lret
xor
ret
outsl
adc
mov
jl
fnsave
sbb
cld
repz
jmp
out
insb
js
cmp
out
mov
add
inc
and
popa
xor
push
cmp
movsb
and
cmp
add
sub
into
insl
scas
jne
inc
movsl
or
lods
adc
insb
insb
adc
pop
push
call
xchg
jno
int
jmp
mov
and
cmp
sub
inc
pushf
sbb
mov
pop
sub
add
and
jbe
adc
mov
outsl
sbb
loop
xchg
inc
mul
repz
jl
pop
cs
and
pushf
mov
dec
rcll
pop
ds
pop
ss
cmp
ja
sar
fldl
pop
fdivrs
notb
loopne
mov
sbb
fidivl
jl
mov
cmp
and
hlt
mov
mov
jge
pop
inc
adc
mov
mov
or
lds
ss
push
xor
cltd
push
xchg
adc
loop
mov
sti
inc
icebp
inc
push
mov
xchg
xchg
aas
in
jb
loope
or
xlat
jb
stc
push
fisubrs
leave
and
pop
arpl
or
cmpsb
pop
in
jg
pop
jns
xor
cmp
loop
scas
adc
mov
sbb
and
scas
pop
xor
scas
loop
sarl
addr16
fisttpll
xlat
jl
mov
call
lcall
sbb
push
les
data16
xor
in
xchg
inc
mov
adc
mov
cli
test
mov
hlt
movsl
inc
cmp
mov
lods
adc
loopne
ds
push
js
adc
mov
addr16
xchg
out
mov
push
mov
cli
xchg
mov
clc
fdivrp
jns
push
mov
dec
mov
cmp
mov
sub
aam
fwait
sbb
in
xbegin
xor
inc
cli
adc
pop
es
and
lock
sbb
xor
cltd
jg
mov
ds
frstor
xchg
vmaxps
pop
adc
pop
nop
mov
sbb
test
lods
lock
jg
in
jmp
dec
xchg
in
or
into
pop
mov
adc
pop
sbb
rorl
popa
loope
sub
mov
scas
pop
mov
xchg
loopne
in
mov
inc
sub
xlat
cmp
and
ret
ficomps
sbb
loope
cmc
pop
popf
nopl
cmp
aaa
inc
in
push
adc
test
and
dec
movsb
xchg
xor
pop
test
cmp
lds
jns
xchg
or
nop
jnp
adc
pop
mov
jne
out
mov
mov
push
xchg
and
sub
mov
add
fs
sub
sub
cmc
mov
mov
outsl
sarl
pushf
pop
push
sbb
xchg
daa
xor
and
adc
jmp
sub
adc
aad
xlat
movsb
cmp
mov
imul
cmpb
jo
cmc
cmp
xchg
rcrb
dec
inc
es
shlb
loop
jecxz
jno
out
and
xor
sbb
aas
ds
fcmovnbe
not
data16
pop
outsl
jae
hlt
xor
loope
jl
xchg
out
ret
stc
sub
insb
inc
adc
enter
cwtl
mov
xchg
sbb
mov
and
mov
dec
cmpsl
push
cli
loop,pn
cmp
mov
inc
jmp
push
xchg
lods
mov
cmc
xor
fwait
inc
dec
jbe
icebp
sub
data16
xchg
test
test
ss
dec
andb
pop
and
ss
adc
imul
push
add
divl
fidivl
xchg
rorb
in
popa
fwait
pop
xchg
jl
sub
xchg
or
mov
xchg
and
cli
mov
and
push
shlb
cld
jmp
repnz
mov
out
sbb
enter
or
pop
imul
push
in
and
adc
inc
xchg
subb
pop
loope
push
popf
mov
inc
pop
xorb
pop
outsl
and
or
rcll
xor
test
push
mov
aam
or
in
std
pop
inc
imul
movl
cld
lea
mov
sbb
mov
pop
xchg
ja
lock
lret
add
pop
fidivrl
cmp
inc
je
sub
loop
jle
or
add
sub
mov
std
outsl
push
mov
inc
and
lret
fs
setne
and
ja
lods
movsl
iret
add
mov
leave
dec
and
fdivrl
sbb
and
dec
rcr
shll
in
mov
mov
jmp
mov
adc
insl
jp
jae
dec
or
out
push
stos
adc
add
dec
mov
nop
mov
push
dec
xor
jbe
xchg
lods
mov
out
aam
jbe
xchg
repz
ljmp
mov
xor
inc
xor
lret
repz
mov
bound
pop
cmp
test
loope
mov
loop
pop
mov
xchg
mov
push
mov
fwait
pusha
shll
into
out
sbb
je
scas
aad
lcall
cmpsl
mov
sbbb
push
cmp
test
je
add
dec
mov
cmpsb
mov
xchg
xorl
push
xchg
sub
jle
fistpll
pop
mov
push
rcl
pop
and
jae
push
and
mov
sub
add
scas
cmc
les
loop
mov
xchg
iret
rcrl
out
lods
imul
adc
xor
insb
or
push
sub
and
mov
shl
sub
insl
ror
and
les
pop
sbb
nop
fcom
inc
push
outsb
leave
mov
cld
xor
out
jp
lock
movsl
ss
repnz
mov
out
mov
jl
ss
add
lds
loop
mov
push
pop
les
or
cmc
loope
rcrl
ret
inc
or
or
rorl
add
mov
mov
loope
xlat
adc
mov
mov
xchg
aas
push
popf
test
cmp
inc
xor
sub
out
icebp
rolb
daa
iret
cli
xor
jecxz
inc
fistl
out
pop
dec
dec
sub
jne
jg
push
out
fistps
imul
mov
dec
xchg
loop
rcrb
cmp
inc
cmp
hlt
pop
cwtl
lcall
dec
loope
cmp
hlt
mov
and
aaa
mov
add
mov
xchg
xor
pop
daa
xchg
adcb
jge
hlt
sub
roll
in
sbb
and
lcall
mov
lods
mov
cmp
lds
mov
int
xchg
int3
sub
gs
sbb
pop
shrl
jbe
push
je
dec
into
cs
lds
push
iret
xor
mov
xchg
jno
outsl
mov
loop
add
jb
fwait
adc
mov
inc
adc
imul
in
insl
mov
sbb
sarl
xor
loop
adc
fisubl
nop
cmpl
add
pop
subl
insl
cmpsl
and
xor
xor
mov
dec
push
xor
lahf
dec
aaa
jmp
sbb
xchg
stos
in
adc
daa
mov
movsl
xchg
test
push
push
cmp
bound
mov
lods
mov
push
mov
add
repz
and
fdiv
insb
mov
and
pusha
cmc
and
inc
int
or
movsl
sub
rcrl
hlt
dec
sbb
fisttpl
daa
in
movsl
push
cwtl
cmpsl
add
add
fnstcw
mov
mov
lds
nop
xchg
add
lods
mov
dec
test
int3
popf
sbb
repnz
cmp
js
push
cs
arpl
push
sbb
mov
mov
xor
aam
jae
scas
xchg
pop
pop
lahf
or
and
fpatan
sbb
leave
sub
rclb
call
or
pop
dec
jg
pop
into
adc
mov
jbe
sub
repz
imul
movsl
loope
stos
pop
leave
int
jl
jno
mov
insl
lods
fdivrl
decb
fisttpl
aas
sbbl
mov
mov
iret
mov
clc
adc
pop
in
push
sti
xor
loope
xor
shlb
shl
sub
enter
jge
ds
lahf
add
int
mov
aam
bound
xlat
jo
aad
lods
and
add
push
pop
adc
into
enter
cwtl
xchg
int3
repz
rcrl
loope
xor
in
push
adc
loop
sbb
cmp
sbb
bound
outsb
jg
xchg
adc
push
cli
push
jns
nop
ret
fistl
das
sahf
mov
outsl
sub
sub
mov
ss
imul
pop
mov
mov
add
insb
idivb
shrl
movsb
dec
leave
enter
psubusw
push
cmc
sub
in
jo
mov
cmp
in
xchg
in
arpl
xor
mov
loop
adc
pop
lods
adc
jp
add
stos
dec
or
sub
cltd
test
jo
xchg
inc
cld
pop
ljmp
leave
mov
adc
leave
sbb
cli
mov
mov
mov
insb
and
mov
jg
enter
pushf
mov
int
dec
adc
jno
pop
or
jg
aas
add
mov
in
mov
pop
sub
mov
fwait
and
xorb
mov
jecxz
sub
ret
sub
leave
mov
adc
dec
dec
imul
adc
addr16
adc
cmp
loop
mov
jne
pushf
push
addb
gs
sahf
and
mov
inc
or
add
mov
cltd
mov
push
imul
iret
testl
push
cmpsl
mov
imul
sbb
jmp
repz
xchg
jmp
imul
mov
add
jno
cmp
or
jne
or
mov
xor
and
cmpsl
scas
jbe
xor
or
adc
cmpb
pop
cld
dec
push
aad
shl
int
loope
xor
xchg
add
js
or
and
scas
push
xchg
dec
psrlw
pop
inc
ss
fdivs
mov
sub
jno,pt
lret
or
add
cs
lcall
lods
or
nop
mov
incb
cltd
subb
sarb
ss
out
mov
push
cmovl
inc
pop
mov
xor
adc
out
stc
mov
cli
in
lahf
ret
out
pop
dec
xorl
ficomps
push
xor
dec
mov
and
inc
jnp
xor
jo
in
mov
pop
pop
int3
int
movsb
sbb
sahf
add
loope
and
int
mov
sbb
mov
adc
out
mov
mov
in
mov
movsl
adcl
in
add
imulb
push
cmp
mov
xchg
push
pop
and
sarl
xor
leave
jecxz
or
xchg
outsl
sub
aas
xor
mov
lea
stc
sub
insb
adc
xchg
xchg
mov
mov
ss
dec
push
push
loop
pop
sbb
sahf
sti
leave
mov
aad
aad
pop
inc
jge
push
sub
inc
dec
enter
fcmovu
int
mov
insl
cmp
loope
arpl
mov
dec
aam
xor
push
sub
and
adc
pushl
mov
and
add
cmp
imul
dec
fisttps
iret
xchg
sub
inc
fstps
xchg
fwait
push
loop
jae
lcall
push
mov
out
fwait
cwtl
outsl
cmp
adcb
pop
xchg
jp
and
sub
clc
test
stc
test
push
dec
mov
jne
popl
mov
push
lret
cld
cmc
pop
scas
mov
jo
in
cmpsl
inc
inc
mov
bound
xorl
inc
jno
mov
add
arpl
adc
mov
add
daa
add
and
cli
mov
mov
fs
mov
lock
cmp
and
lret
fldenv
movsl
aaa
mov
sbb
xor
pusha
xor
test
adc
adc
stos
in
and
mov
repnz
ret
inc
xor
xor
movsb
pop
cmc
scas
pcmpeqw
xchg
push
es
ror
cmp
push
out
movsb
mov
mov
cli
dec
stos
push
dec
aaa
or
pop
mov
and
sti
xor
and
or
or
push
mov
sbb
adc
repz
sub
fwait
adc
adc
sahf
push
mov
adc
xor
loop
out
test
je
daa
adc
inc
dec
subb
bound
out
ss
sbb
and
in
lret
xor
mov
stc
xor
icebp
dec
pop
test
add
push
in
nop
in
and
adc
dec
repz
push
mov
or
mull
add
test
xchg
sbb
xchg
mov
cmpsl
sahf
mov
cmp
mov
popf
adc
adcb
and
jb
insl
jno
aas
cmp
dec
mov
outsl
mov
push
fs
mov
loope
mov
lret
cltd
adc
testl
lret
lods
cltd
scas
pop
jae
add
out
lods
outsb
ret
sbb
icebp
mov
inc
loope
mov
lret
mov
jp
in
cmpsb
mulb
mov
dec
xor
xchg
dec
ja
movsb
test
push
xor
inc
repnz
xor
xor
jle
push
pop
xor
scas
push
cmp
sbb
lcall
loop
fistpll
lock
or
xchg
adc
mov
addr16
in
call
loop
xor
outsl
or
cmp
or
ret
mov
rcrl
lock
idiv
jl
dec
rcrl
cwtl
mov
and
push
adc
gs
das
stc
ret
or
mov
jne
iret
in
int3
cmp
inc
in
sbb
movsl
push
add
mov
cmc
sbb
mov
push
mov
loope
int3
clc
loopne
loop
mov
call
cwtl
lcall
xchg
in
push
mov
xchg
sbb
mov
xchg
dec
xchg
test
jl
jmp
and
sahf
xchg
mov
or
movsb
lea
push
pop
dec
jb
nop
lods
mov
stc
jl
xor
fmul
or
push
mov
or
scas
out
mov
lds
sti
cmp
fldcw
and
daa
fsts
xor
jp
pop
lods
fistl
sub
jne
hlt
adc
lods
mov
dec
int3
push
and
mov
or
ret
cmp
mov
inc
jl
out
sbb
jecxz
adcb
cmp
push
inc
in
inc
and
inc
lods
pop
and
dec
fisubl
jl
mov
sub
mov
iret
mov
and
popa
test
rcl
xchg
dec
and
rorb
xchg
das
xor
lcall
mov
movsl
scas
test
cmp
js
pop
fdiv
jb
cmp
clc
insb
ja
imul
negl
cmc
mov
sahf
aaa
inc
jmp
insl
lods
sbb
xor
push
inc
mov
xchg
sbb
jbe
sbb
and
shrl
sbb
int
and
mov
aam
push
xor
cmc
dec
sub
imul
or
mov
out
cmp
in
loope
adc
das
sbbb
mov
sbb
xchg
cmp
fcmove
mov
adc
pop
iret
leave
xchg
add
mov
mov
mulb
pop
and
mov
push
sub
stc
rcl
repz
sbb
repnz
push
nop
push
pop
inc
adc
lret
das
loope
in
lods
mov
movsb
test
xchg
xchg
mov
fsub
lods
insb
push
ret
xor
mov
iret
sahf
pop
in
sbb
hlt
push
mov
xor
lret
push
xor
or
push
lods
repz
pop
xchg
mov
je
xchg
sub
in
adc
push
lds
call
fnstsw
in
cltd
mov
sub
fldenv
ja
hlt
popa
or
mulb
and
orl
mov
adc
arpl
fildl
cmc
fwait
push
sbb
out
mov
xor
andb
or
add
ret
sti
or
inc
lahf
mov
xchg
mov
call
out
pop
ds
cmp
mov
call
mov
mov
xor
insb
or
pop
cmp
mov
adc
jns
arpl
movsl
cmp
mov
int3
pop
int3
inc
das
shr
or
ret
sti
pcmpgtw
cli
inc
fadds
and
pop
out
pop
cmp
mov
mull
leave
sbb
loope
subl
cli
pop
inc
add
les
loop
mov
pop
stc
pusha
mov
mov
xchg
mov
aaa
push
ljmp
pusha
dec
daa
data16
lock
movsl
adc
loope
pop
sbb
or
sbbb
aad
lcall
mov
movsl
mov
adc
mov
mov
jb
or
lods
movsb
sahf
jae
outsl
push
pop
int3
lcall
push
inc
shl
pop
mov
and
ret
xor
dec
jle
inc
and
push
sub
stos
push
cwtl
imul
xchg
mov
popa
jg
pop
fstpt
bound
adc
add
mov
enter
xchg
bound
movsl
loopne
lods
pop
add
imul
rclb
test
imul
jecxz
push
jns
mov
das
xchg
popa
push
les
popa
inc
mov
movsb
in
push
leave
testb
or
aam
pushf
pop
mov
mov
lret
movsl
fcmove
add
arpl
int3
add
jns
and
mov
mov
mov
stc
cmp
lock
mov
movsb
xor
rcrb
int
mov
push
imul
xor
movsb
cmp
dec
stos
inc
or
imul
es
dec
mov
aas
dec
push
mov
popa
push
jns
out
mov
lds
or
stc
bound
subb
mov
test
xor
cmpl
gs
popf
nop
int
bound
xchg
test
aas
sbb
fsubr
xor
out
sbb
push
xlat
push
movsb
fldt
inc
sahf
cld
mov
and
pop
add
add
idiv
shrl
hlt
in
xor
mov
pop
lods
adc
add
jb
outsb
imul
insb
test
jnp
xchg
push
ret
or
inc
sbb
in
jo
in
push
xor
or
leave
imul
movsl
push
jp
and
pusha
adc
cmp
test
lahf
cld
les
ret
push
ds
mov
rclb
pop
pop
loop
xchg
scas
pop
pop
inc
dec
dec
lret
cmp
daa
out
adc
mov
mov
mov
mov
adc
out
xchg
dec
loope
jle
arpl
dec
xchg
push
loop
testb
sub
fs
sbb
mov
or
cld
lods
push
xlat
mov
add
cmp
jge
adcb
pop
in
mov
aad
pop
sbb
fs
lea
int
pop
sti
and
scas
push
cmpsb
mov
mov
pop
ds
and
outsb
insb
inc
scas
ret
cmpsb
and
repz
adc
jge
repnz
iret
sahf
mov
cs
sbb
pushl
aas
testb
inc
cwtl
stos
loop
andb
cmpsb
push
mov
push
btr
lret
add
popa
ss
pushf
les
jecxz
ret
rol
jle
aad
pop
mov
xchg
or
aaa
shll
xchg
and
leave
cmpsb
lods
cld
add
sub
cmpsb
push
adc
pop
jne
xchg
aaa
adc
jmp
ljmp
shlb
xchg
mov
xchg
mov
mov
and
pop
repz
pop
out
dec
mov
sbb
mov
sub
mov
push
xchg
inc
and
xchg
push
pop
insb
mov
mov
dec
pusha
out
loop
jmp
addb
sbbl
mov
cmp
jl
ds
mov
mov
mov
jno
pop
mov
xor
adc
call
jo
sbb
out
icebp
inc
bound
sub
aas
cmp
and
add
fmulp
add
popa
lods
rclb
test
and
loope
test
test
adc
outsl
pop
cltd
mov
das
inc
cmp
div
das
pop
pop
sbb
jmp
adc
outsb
test
adc
in
mov
cld
xchg
xlat
shll
lret
out
inc
ret
and
mov
fmul
repz
stc
inc
cmpsl
mov
mov
push
add
push
pop
shlb
xor
fcomps
dec
into
mov
jne
mov
sub
pop
mov
adc
dec
jge
cmp
lcall
mov
add
sub
jnp
pop
push
aad
outsl
and
ret
jge
out
mov
push
mov
sbb
mov
jb
pop
ljmp
mov
push
pop
mov
mov
inc
fsubrl
sti
mov
mov
add
xchg
sbb
sub
jp
and
addb
int3
add
xor
push
fwait
pop
and
add
dec
mov
sub
movsb
movsb
jnp
inc
lds
sub
sbb
cmc
orb
jne
cwtl
in
xor
sub
nop
mov
mov
cwtl
shll
xor
test
movsb
mov
sub
push
and
iret
mov
cmp
push
or
lahf
mov
faddp
mov
scas
jae
clc
push
xlat
xor
mov
or
iret
xor
sbb
insl
or
imul
jno
sub
int
pop
xchg
cmp
and
xor
mov
and
xchg
rcr
jecxz
pop
mov
push
cld
arpl
mov
pop
mov
xor
mov
and
pop
pop
or
pushf
imul
mov
xor
lods
mov
adc
xchg
xor
sbb
sub
ja
in
mov
fidivs
jno
decb
cmp
ss
loop
pop
imul
adc
das
push
mov
rclb
xor
dec
adc
movsb
cltd
imulb
mov
jmp
dec
pop
jno
das
inc
xchg
enter
insl
or
sbb
test
xor
stos
scas
xchg
mov
clc
loope
cli
pop
jb
add
lret
inc
shll
mov
outsb
xchg
add
cmovno
lcall
push
stos
in
cli
push
mov
daa
stos
shl
mov
repz
loope
negl
and
shll
ja
adc
sub
jb
xchg
in
aas
inc
sub
out
ret
push
xlat
dec
loop
adc
mov
and
cmp
fistpll
sub
ret
outsl
lret
jo
divb
cld
inc
daa
leave
adc
mov
aam
ss
enter
loop
add
jle
cld
sarl
sub
adc
repz
pop
jno
fldpi
jne
push
test
shlb
mov
push
adc
rolb
orl
clc
mov
push
dec
dec
pop
mov
jg
mov
or
sub
shrl
mov
stc
dec
lds
dec
cmc
lret
adc
push
and
mov
dec
dec
loop
mov
ds
sbb
add
sub
into
ret
sub
loop
mov
data16
cmpsl
fimuls
push
mov
adc
in
sahf
sbb
and
test
pop
hlt
sbb
sbb
jle
adc
or
cmpb
jae
lock
cltd
pop
jo
repnz
lret
loope
sarl
and
push
adc
imul
loopne
popa
ljmp
adc
push
fucomi
fsub
push
cli
fmul
insl
push
xchg
pop
hlt
jle
int3
push
nop
mov
xchg
movsl
xor
sbb
push
icebp
mov
xor
lahf
arpl
pop
movsl
es
xlat
test
add
push
iret
test
sarb
pop
popf
or
sub
sbb
mov
mov
js
mov
out
lret
stc
cmpsl
mov
outsl
or
mov
sub
cmp
xchg
add
sub
adc
xor
mov
fwait
shrl
push
add
pop
roll
or
xchg
xor
int3
pop
push
pop
xchg
jne
mov
xchg
insb
push
push
jp
mov
jno
cmp
icebp
inc
dec
and
push
int3
adc
lahf
and
decb
xchg
in
into
push
loop
ljmp
xor
mov
xchg
ret
lods
cmp
loope
dec
mov
iret
mov
xchg
jmp
push
test
jp
loope
xlat
into
mov
in
xor
mov
imul
fsubr
ret
and
xor
inc
test
rcll
imul
dec
test
andb
dec
mov
int3
inc
lret
inc
vmaskmovdqu
loope
xor
pusha
lods
adc
es
in
pop
add
jg
inc
xorl
inc
jnp
dec
je
xor
and
pop
cmp
fisubs
es
loopne
js
out
jl
popa
mull
push
xor
mov
xor
enter
lods
mov
popf
pushf
test
pop
hlt
cld
mov
mov
andb
fbstp
lods
decb
les
movsb
fwait
or
mov
data16
lods
inc
js
xor
mov
neg
push
sbb
push
jns
mov
mov
aas
push
push
adc
cwtl
rcrl
pop
dec
mov
aaa
daa
mov
cmp
movsb
inc
and
xor
xor
fisttpl
xor
int
xchg
xchg
shl
clc
cmp
call
push
fiadds
cmp
mov
bound
xor
loop
leave
inc
movsb
mov
cmpsl
cmp
ds
mov
cltd
sti
outsl
loop
sbb
roll
push
popa
loope
in
test
sub
cmc
xchg
xchg
movsl
mov
jae
fistl
scas
data16
xor
std
leave
mov
and
add
cmc
mov
sub
cmp
xchg
std
imul
mov
into
push
aas
out
xchg
or
xor
fbld
and
cltd
aas
imul
mov
int3
enter
pop
pushf
loop
xchg
sbb
nop
ret
stos
ds
inc
stc
sbb
jmp
sbb
ret
lock
jns
jno
push
push
in
inc
rcrb
push
push
and
sbb
fldt
inc
mov
or
pop
pop
test
push
ljmp
out
int3
iret
arpl
add
dec
shlb
mov
adc
dec
fimull
cmp
outsb
xchg
add
fld
xchg
push
shlb
sbb
in
push
adc
fsubrp
mov
pop
adc
rcrl
xchg
dec
shlb
sti
mov
push
mov
sub
and
inc
leave
std
jo
mov
aam
mov
adc
dec
cmp
jno
data16
cmp
pushf
xlat
iret
mov
add
sub
mov
xchg
push
mov
shrb
adc
or
cmp
pop
cmc
xchg
pop
in
and
sbb
adcb
leave
mov
jle
dec
push
jne
mov
push
mov
fisubrl
pop
mov
inc
repz
push
cmp
pop
int3
sub
jl
out
fwait
pop
dec
and
imul
push
pop
push
adc
sub
xchg
xor
insb
adc
sbb
ljmp
push
add
cmp
and
hlt
mov
mov
push
xlat
bound
fiaddl
rorb
mov
movsb
scas
xchg
aam
push
mov
and
inc
sbb
mov
xchg
push
inc
sti
push
scas
adc
and
fisubrs
inc
dec
adc
mov
add
js
adc
xchg
loop
mov
ss
fdivrs
push
cwtl
adc
mov
out
insb
repz
in
scas
lcall
jae
add
fcmovnb
cmp
add
es
adc
inc
cmpb
xchg
or
pop
pop
mov
fdivrp
cmp
jae
mov
cmp
lahf
cwtl
sub
pop
test
inc
push
xlat
xchg
push
lcall
scas
cmp
mov
xchg
lcall
stos
pop
sub
int3
dec
sbb
pop
jb
inc
daa
loop
fs
mov
pop
sbb
popa
lcall
mov
pop
les
xor
leave
out
fdivl
out
shll
xchg
lcall
add
int
test
int3
or
sub
lods
inc
mov
loope
fstps
dec
push
insl
sub
incl
push
faddl
sbb
in
cmp
in
lcall
addr16
movsl
xchg
xchg
roll
mov
or
xchg
mov
out
mov
adc
mov
jbe
pop
insb
out
out
sbb
cmp
popa
mov
daa
xchg
daa
andb
xchg
push
cwtl
xor
mov
xchg
pop
jmp
inc
inc
adc
addr16
addr16
xor
dec
inc
lret
hlt
jbe
out
shlb
popf
inc
sub
mov
insb
or
mov
push
cwtl
mov
cld
mov
inc
pop
sbb
dec
and
or
notb
inc
ss
or
or
shrb
loop
lods
mov
adc
lods
sti
icebp
jg
lods
or
dec
mov
push
es
sub
lret
sahf
vmwrite
adc
sub
mov
add
mov
leave
mov
ret
mov
in
push
icebp
stos
lds
loope
sub
xor
les
ficoms
ljmp
into
mov
mov
lods
movsl
or
subl
xor
outsl
mov
push
loope
out
sub
in
jl
sub
sbb
jae
push
lds
push
je
aas
rcrb
mov
in
data16
add
mov
lret
enter
pop
pop
pop
jge
push
daa
cltd
or
pop
pop
dec
add
daa
imul
imul
xchg
add
lods
sbb
jb
lcall
outsl
jge
movsb
ss
mov
std
clc
mov
jle
xor
rolb
fcoms
and
sub
sub
mov
mov
loopne
mov
xor
popf
outsl
or
mov
icebp
mov
sbb
mov
fsubp
sub
xor
vorps
std
xchg
mov
lock
sub
mov
inc
sub
fs
les
push
and
xor
xchg
daa
lret
in
mov
loop
xchg
lcall
pop
cmp
mov
roll
lcall
rol
mov
sub
pop
rcll
nop
mov
push
fsubl
lock
xor
and
xchg
insb
addr16
add
cmp
lods
fs
sub
shl
jno
xchg
pop
sbb
pop
mov
xchg
popf
in
mov
jmp
mov
test
ljmp
inc
insl
xor
xchg
pop
push
out
call
icebp
loop
cmp
mov
in
dec
jns
adc
dec
pop
out
pop
xchg
sub
js
inc
dec
add
adc
jnp
jg
dec
xchg
sbb
jne
fs
cmp
stos
mov
mov
fwait
jmp
sahf
fmuls
iret
cmp
sbb
nop
xchg
mov
or
fmulp
lahf
aam
stos
ds
test
dec
adc
xor
call
loop
aam
mov
mov
stc
das
shlb
out
dec
ftst
cli
xor
cltd
jns
push
inc
ljmpw
pop
adc
cmp
sbb
repz
sbb
inc
adc
jo
cmp
sbb
push
pop
in
imul
and
push
out
pusha
adc
xor
pusha
jecxz
int3
add
fisttpll
push
aaa
cli
mov
gs
sub
lcall
dec
mov
or
testl
loopne
into
repz
mov
pop
pop
push
fbstp
lea
test
adc
dec
mov
inc
mov
adc
sub
cmp
frstor
leave
mov
xor
sbb
sbb
test
jmp
xor
jp
mov
clc
adc
std
daa
xor
mov
clc
clc
sub
mov
add
cmp
loop
jp
popf
adc
mov
notb
movsb
xchg
loop
dec
pop
mov
pop
ss
push
cmp
add
repz
adc
push
pop
mov
xchg
push
loop
and
in
adc
cs
cmp
out
push
iret
mov
ss
xchg
mov
mov
les
rclb
dec
iret
cmp
sbb
jno
ret
cmp
int3
in
xchg
pop
mov
lcall
push
sbb
jg
insb
dec
iret
fcomps
loop
mov
push
push
inc
int
push
imul
jno
addl
mov
stc
movsl
and
mov
loop
dec
dec
fldlg2
sbb
cli
xchg
mov
sbb
cmpsl
mov
fwait
mov
cli
popf
push
cmpsl
pushf
mov
sbb
aas
cmp
jo
in
xchg
xchg
inc
imul
arpl
mov
imul
aaa
loop
mov
pop
cmovne
imul
dec
mov
add
fistps
aaa
adc
xlat
inc
std
pop
sub
mov
test
cltd
and
mov
hlt
out
jo
test
mov
in
pop
adc
hlt
dec
outsl
mov
les
bound
add
and
ss
test
adc
int
arpl
cltd
xchg
ret
mov
cltd
cmp
xchg
mov
mov
mov
inc
xor
adc
sbb
jae
and
rcrl
mov
pop
in
xor
and
out
push
xchg
xor
mov
push
jle
lcall
push
cltd
verr
pop
push
cmp
popa
scas
pushf
ss
leave
mov
sti
les
loop
into
and
mov
fwait
mov
rcll
dec
hlt
sbb
in
lods
scas
push
inc
por
push
or
aas
test
cmpl
inc
loope
icebp
push
psubq
data16
mov
stos
in
in
data16
ficoml
loope
pushf
add
and
clc
popf
movl
mov
inc
sbb
adc
adc
xchg
mov
push
inc
cltd
rcrb
call
mov
push
arpl
dec
xchg
push
imul
mov
aaa
loop
push
lahf
cltd
cltd
mov
add
sarl
add
jl
sti
out
push
adc
sub
xor
sub
popa
sbb
js
sub
xor
insl
mov
dec
mov
pop
mov
sub
int
mov
out
in
and
xor
ret
pop
adc
jecxz
fst
pop
popf
bound
jle
nop
lcall
int3
ss
sbb
aad
jbe
nop
incb
test
xor
jno
mov
sub
or
lds
inc
ja
lahf
aam
mov
fildll
sub
fwait
sarl
dec
ret
repz
shll
orb
sbb
mov
mov
push
icebp
cmp
vorps
les
adc
add
adc
je
in
repz
inc
push
es
pop
lock
enter
int
daa
mov
push
xor
xor
lcall
das
and
and
ljmp
divb
add
sbb
imul
jno
mov
pop
mov
es
shrb
push
outsl
sub
pop
lret
xchg
pop
or
js
sub
xor
popf
fldt
sub
sub
inc
mov
loope
scas
out
xchg
dec
lahf
cmp
pushf
in
int
jbe
fwait
stos
jno
lcall
lock
push
jmp
loop
movsb
xchg
mov
mov
sbb
lret
dec
in
add
xor
jnp
mov
pop
fs
add
xchg
push
rcll
sbb
push
mov
and
xchg
mov
pop
mov
stos
aaa
je
out
iret
add
xor
xor
mov
mov
loope
dec
test
cmp
cmp
jl
cmp
mov
jno
cmp
ss
push
push
mov
lcall
sbb
mov
jg
out
das
dec
xor
mov
pop
and
into
in
adc
out
sarl
nop
pop
clc
mov
xchg
mov
sub
dec
jp
shl
cli
mov
adc
pop
push
rcrl
ja
shll
pop
mov
mov
mov
jno
test
push
inc
andl
loope
cmp
inc
ss
cmp
jns
repnz
cmpsb
out
and
mov
lcall
imul
out
ljmp
popa
sahf
in
mov
kmovb
xchg
and
mov
push
push
popa
mov
cs
push
imul
lock
icebp
xchg
sti
in
cmp
pop
aas
xor
mov
aad
cltd
push
or
jmp
out
cmp
adc
cmpl
cmp
cmp
adc
and
in
pusha
adc
sub
aam
xchg
push
xor
mov
adc
int
xchg
pop
add
ret
cli
mov
nop
mov
loope
sti
sub
popf
jae
add
xlat
and
push
pop
mov
iret
mov
ljmp
test
pop
lods
rcrb
pop
mov
xor
sbb
sbb
movsb
out
fxch
cmp
lds
rol
jno
imul
lds
xor
xor
mov
pop
adcb
mov
inc
loop
dec
ret
in
imul
clc
sub
jno
call
inc
scas
insl
pop
daa
lock
push
repnz
jbe
or
adc
xor
cmpsl
pop
or
adc
movsb
sub
push
pop
sbb
and
push
and
xor
in
js
inc
insb
icebp
push
inc
adc
add
test
and
sub
jmp
and
and
cmpsb
nop
cmpsb
xor
ret
insl
pop
dec
pop
std
stos
outsl
incl
cld
push
iret
loop
in
xchg
fnstsw
push
movsl
jecxz
adc
icebp
stos
push
popf
shll
in
pop
xchg
or
rclb
aaa
lahf
and
xchg
ja
test
out
jmp
shll
pop
add
iret
loop
js
push
je
push
pusha
or
sub
xchg
lea
jl
mov
je
sub
and
or
loope
push
lods
mov
pop
push
into
jmp
pop
scas
jecxz
js
add
test
xchg
nop
mov
xchg
sbb
adc
in
jl
jg
jmp
test
into
mov
fldenv
loop
addb
sub
adc
sbb
aaa
sub
int3
imul
ss
inc
testb
out
leave
loope
xor
pushf
in
or
cmp
test
xor
outsl
mov
enter
rcll
dec
pop
push
mov
imul
inc
popa
mov
in
or
mov
repz
icebp
xor
lcall
or
jae
js
into
shlb
cmp
pop
ror
fs
leave
push
push
xchg
pushl
sbb
popa
jns,pn
adc
outsb
push
lcall
loope
sub
icebp
jmp
mov
sub
and
das
adc
shl
inc
out
popf
rolb
add
test
pop
sti
push
add
fwait
ljmp
adc
and
and
inc
sub
loope
icebp
mov
mov
jl
addb
and
xor
or
xor
and
mov
mov
pop
xchg
movsl
push
adc
mov
divb
xor
loope
sbb
repz
and
jno
int
shl
push
jl
push
adc
mov
pop
xchg
rcll
addr16
imul
gs
in
pop
adc
mov
mov
mov
aaa
loop
add
gs
nop
rol
lods
scas
sub
pop
repz
es
fbld
sbb
repnz
push
inc
loop
lcall
xor
repz
outsl
mov
jns
xchg
mov
mov
and
out
mov
xchg
sub
lret
push
cmp
sub
shrl
test
stos
aaa
mov
mov
mov
lods
loop
into
jns
xchg
lret
xchg
sub
and
shl
sbb
inc
jo
xchg
sbb
xorb
add
and
loope
sahf
in
mov
fcoml
push
sbb
mov
loop
movsl
xchg
lahf
cltd
js
test
fistpll
lock
mov
push
hlt
or
push
divb
jae
push
roll
in
aam
push
add
shlb
fildll
pop
inc
rcl
mov
and
rolb
push
pop
push
mov
and
push
cli
xchg
cmp
rclb
dec
andb
in
mov
jns
imulb
inc
cmp
cmc
pop
rolb
mov
mov
mov
lcall
shl
js
jp
in
cltd
xchg
loop
mov
scas
cmp
lret
dec
rcrl
aad
lret
fisubs
xchg
dec
mov
in
sub
jne
inc
jno
inc
xchg
push
loop
mov
iret
stos
cmp
pop
cmp
push
enter
imul
pop
adc
bound
daa
nop
movsb
xchg
add
insb
mov
imul
add
outsb
sub
jle
xchg
roll
dec
xchg
gs
sbb
leave
push
daa
sar
lds
neg
inc
xchg
pop
push
pusha
mov
les
fs
xchg
stos
xchg
pop
cmp
or
test
dec
pop
mov
cmp
cmp
sbb
hlt
in
pusha
push
push
lock
mov
pop
sbb
xchg
ljmp
sbb
sahf
ficomps
mov
dec
mov
ret
inc
pop
into
push
or
pshufw
xchg
mov
mov
arpl
sbb
test
xchg
and
ret
outsb
fiadds
and
mov
call
mov
fwait
bound
data16
xor
push
shll
dec
out
push
mov
sbb
xchg
shrl
cmp
int3
mov
push
and
jmp
into
imul
mov
jecxz
push
cltd
xchg
jl
or
test
cld
popf
ljmp
xchg
and
sarl
push
idivb
sti
sub
sub
cmp
jnp
js
xchg
or
aas
mov
movsb
push
xchg
add
cli
dec
dec
sub
in
stos
mov
sub
push
mov
mov
notb
xlat
adc
pop
pop
lds
lock
push
test
dec
test
pop
sbb
and
push
inc
ret
push
jmp
mov
cmp
mov
stos
mov
adc
lret
ficoml
cmp
insl
adc
mov
not
sub
inc
scas
mov
lds
cmp
lahf
pop
sbb
fcmove
mov
shll
mov
lock
cmpsb
popf
les
ds
inc
pop
push
pop
mov
mov
nop
mov
in
rol
sub
and
or
pushf
insb
outsb
xor
lret
or
in
cmp
push
aad
mov
or
icebp
and
xchg
mov
fimull
les
and
xor
insb
aad
negl
jo
mov
or
pop
fucomi
nop
mov
cmp
xor
shrl
out
mov
cltd
loop
movsl
push
cli
xchg
lods
xor
mov
rcll
adcl
and
test
ret
xor
or
mov
sti
test
push
pop
loope
outsl
sbb
iret
add
int
mov
or
add
fs
rcrl
test
jecxz
xor
pop
out
and
sub
loop
leave
in
push
add
mov
mov
sbb
mov
ljmp
rorb
mov
nop
cmp
add
shlb
xchg
xchg
jg
sbb
dec
or
add
xor
loop
mov
cltd
fadds
adc
jbe
fsubl
lock
test
jmp
popf
push
add
or
dec
dec
insb
insl
mov
sbb
and
lret
and
shlb
lret
mov
bound
and
and
cli
mov
in
sahf
and
cmpb
iret
fstps
loop,pn
adcl
aas
mov
cmp
fwait
jg
testl
jge
cmp
in
data16
or
xor
sub
add
mov
xchg
sbb
push
adc
xchg
cmp
fdivrl
fcmovb
pop
jns
inc
imul
cmp
jle
cwtl
cmpsl
mov
xor
sbb
call
push
add
lods
mov
mov
sbbb
adc
push
mov
xor
xchg
out
mov
int3
loop
out
xchg
xchg
push
sbb
ss
inc
and
adc
inc
testb
sbb
dec
cld
outsb
dec
ret
movsb
inc
out
lret
pop
test
mov
mov
jl
push
in
in
movsl
cmp
imul
xor
add
dec
push
es
dec
pop
add
add
mov
inc
inc
mov
insb
push
pop
ljmp
ss
mov
cmp
cmpsl
clc
aas
cmp
and
jne
cmp
push
shlb
mov
std
gs
mov
das
lods
loopne
push
xor
and
add
push
push
jns
xchg
dec
pop
mov
shll
lcall
push
mov
scas
xchg
jl
das
mov
xchg
inc
lcall
jle
fsts
mov
out
xchg
aam
inc
push
adc
iret
shr
lret
or
ret
fistpll
aaa
std
pop
mov
adc
in
mov
loope
mov
or
mov
aam
pop
push
repz
ja
test
push
fisttpll
and
adc
jne
or
outsl
repnz
mov
adc
cmp
test
addr16
js
je
cmp
and
or
jp
jns
pop
or
adc
fcmovb
sub
add
leave
mov
sub
in
push
mov
scas
jae
mov
dec
cmpsb
sub
sahf
xor
and
sub
adc
inc
push
xchg
and
leave
cwtl
jmp
mov
aad
sub
push
mov
sbb
fcomps
mov
iret
inc
adc
loope
rcrb
rolb
jl
pop
adc
subb
sbb
adc
inc
test
mov
insl
xchg
pop
xor
push
inc
scas
sbb
inc
push
xor
int3
in
jbe
adc
fldt
pop
add
cmp
in
pop
in
clc
divb
lret
ss
mov
test
jnp
or
pop
mov
mov
xchg
mov
inc
xchg
loop
or
pop
cs
add
int
loope
dec
fdivrs
cmpsl
ds
insl
xchg
es
add
aam
pop
iret
lods
lock
or
pop
adc
in
xor
mov
dec
inc
pop
stc
outsl
fwait
dec
out
fcoml
push
adc
in
orl
test
adc
in
mov
dec
call
cld
ret
add
mov
sti
mov
stc
out
mov
js
jns
aam
js
adc
loop
jg
mov
out
mov
xchg
lret
lret
cmpsl
pushf
shlb
or
push
int
int
daa
mov
jl
pushf
mov
imul
bound
add
dec
jo
cwtl
shrl
call
dec
dec
cmp
out
inc
push
or
cmpsl
test
rorb
dec
ja
add
inc
inc
sbb
and
adc
lods
push
pop
scas
cld
rolb
fwait
cmp
nop
neg
fldenv
fcompl
scas
arpl
clc
iret
stc
jno
in
push
xchg
int
pop
test
clc
shlb
push
inc
out
cld
in
nop
cmpsl
adc
in
mov
data16
adc
and
sti
or
add
sub
fisubs
aas
inc
xchg
inc
xlat
aam
filds
fisttpll
fistl
aam
adc
mov
dec
aam
js
adc
mov
fidivrl
dec
pop
xchg
cltd
mov
mov
xor
xlat
and
dec
sbb
jb
jb
test
ret
mov
in
lret
sbb
pusha
pop
lods
stos
adc
jbe
adc
loope
cmp
gs
in
add
hlt
push
cmp
adc
add
adc
imul
mov
ljmp
mov
mov
xor
in
mov
scas
or
cmp
out
mov
pushf
scas
sbb
mov
bound
pop
push
cmp
ljmp
cwtl
jl,pt
jno
pushf
fwait
add
push
jle
push
movsl
adc
mov
push
cmc
mov
xchg
mov
mov
mov
cmovb
pop
push
and
movsl
and
xchg
mov
adc
mov
mov
repnz
or
fidivs
mov
loope
mov
insb
pop
or
aas
je
ds
pushf
bnd
sbb
leave
fistpll
addr16
sbb
orl
mov
in
jns,pt
imul
rcrb
fimuls
mov
cmpsb
lock
cmpsb
add
sti
movsl
cmp
jnp
push
test
adc
pop
mov
adc
repnz
stc
aas
stos
imul
stos
imull
popf
fidivrs
mov
out
dec
orl
push
push
mov
mov
int
jbe
adc
imul
and
cmpsb
xchg
bound
out
es
or
jl
inc
mov
gs
mov
xor
mov
pusha
mov
rcl
test
mov
mov
outsl
push
fcoms
xor
and
dec
fucomp
cmp
ss
sub
xchg
adcl
pop
repnz
stc
outsb
pusha
xchg
hlt
dec
pop
leave
lret
jle
push
mov
pop
sbb
inc
loop
cmpsb
adc
mov
jle
xor
movsl
add
iret
add
in
mov
into
outsb
or
pushf
in
xchg
outsb
cmp
out
aam
ljmp
movsb
mov
or
lds
test
mov
cmc
cltd
push
or
adc
scas
xchg
or
sub
push
lds
loope
sub
or
push
inc
add
or
pop
imul
in
push
out
les
testb
pop
push
sub
or
loope
aaa
nop
jle
data16
cmp
shrb
pop
xor
lret
sub
pop
int
in
loop
jb
mov
inc
outsb
mov
clc
cmpsb
test
call
mov
in
clc
js
imul
in
stc
or
jae
push
or
arpl
sbb
mov
insb
adc
dec
lds
data16
mov
dec
pusha
or
mov
repnz
test
inc
ret
xor
adc
inc
xor
add
push
std
push
xchg
mov
push
sbb
ficoml
loop
xchg
cltd
mov
push
add
mov
iret
lret
addr16
ja
imulb
cltd
es
or
inc
inc
xchg
testb
call
shlb
xchg
nop
inc
push
pop
xorl
popl
cmp
mov
mov
into
jae
leave
lret
movsl
push
ds
or
insl
cmp
mov
mov
hlt
xchg
in
cltd
mov
daa
mov
sbb
bound
loop
dec
or
xchg
icebp
cmp
adc
ss
add
or
icebp
xchg
fistl
and
nop
xor
pop
and
mov
inc
jmp
sub
cwtl
loop
and
dec
out
popl
sbb
mov
movlps
cmp
cmp
lock
movsl
dec
neg
sbb
mov
int
movsb
push
mov
aas
jno
fldt
jg
lret
inc
push
cmpsl
add
mov
ret
stc
repz
mov
bound
adc
ljmp
mov
lds
inc
enter
ret
push
arpl
mov
sub
mov
gs
sti
stos
loop
and
lods
xchg
pop
pop
inc
jne
and
loop
repz
jecxz
into
pop
mov
sbb
adc
cmp
push
cmc
adc
mov
mov
hlt
mov
cmpsl
mov
xchg
push
adc
sbb
jb
mov
sbb
push
pop
mov
aas
and
cmp
pop
inc
xor
cmp
loop
cmpb
mov
sarl
mov
inc
shrd
add
or
out
add
ss
rcrl
jns
sub
cmp
arpl
adc
pop
mov
pop
ds
mov
ret
push
pop
cmpb
stos
int
inc
std
xor
and
cltd
in
pop
xor
loope
mov
or
xchg
jne
scas
shll
cmp
outsl
mov
jae
rcrl
dec
sbb
arpl
adc
dec
imul
push
sbb
adc
scas
pushl
cmpsl
xchg
push
out
outsl
je
loope
adc
in
inc
lds
sbbl
cltd
movsl
out
pop
lret
and
sub
mov
push
sbb
and
xchg
mov
cmc
ljmp
mov
adc
mov
or
push
jl
scas
or
nop
and
mov
add
cli
mov
mov
mov
lret
mov
mov
dec
lods
adc
mov
sub
loop
in
mov
out
sub
clc
popa
aaa
out
filds
and
adc
ss
sub
adc
and
add
ja
dec
mov
push
pushf
and
inc
test
or
mov
in
xchg
ret
fwait
dec
sub
sahf
mov
and
fstl
test
pop
xchg
sub
xor
popa
sub
outsl
hlt
jg
jle
push
add
addr16
arpl
xchg
mov
xor
fsubl
and
jl
xchg
push
push
push
pop
lret
std
pusha
faddl
jae
or
scas
xchg
shl
out
ret
mov
xor
and
mov
das
adc
iret
sub
and
jns
cmp
sub
inc
int
xchg
es
loope
xchg
adc
popa
data16
cwtl
in
sbb
cwtl
xlat
lret
cltd
psrld
or
sub
movsl
fistps
pop
push
rcrl
mov
inc
mov
jnp
or
pop
xchg
or
mov
in
lret
popf
mov
mov
cld
mov
mov
popf
in
cmp
push
add
xchg
in
pop
addr16
sub
xchg
xchg
and
test
pop
pop
mov
outsb
aam
mov
ret
movsb
and
xchg
pusha
sub
adc
sub
add
dec
mov
dec
inc
das
inc
and
push
push
pushf
cmc
dec
int
insb
flds
cmpsl
cmp
push
push
pop
cmp
jne
out
mov
sbb
shl
outsl
sub
cmp
adc
in
jl
into
xchg
xchg
jns
int3
fisttpl
inc
pop
xchg
xlat
test
sbb
packuswb
icebp
inc
mov
pop
movsl
dec
mov
mov
lcall
xchg
rcr
jmp
lea
scas
xchg
pop
jno
mov
in
imul
dec
test
xlat
ret
popf
cmp
lcall
cld
push
notb
cwtl
loop
sbb
push
mov
mov
mov
adc
loop
leave
or
shlb
nop
lret
mov
test
cmpb
cmpsl
je
insl
js
cmp
dec
add
xchg
cmp
sbb
jnp
into
addr16
add
pushf
aad
test
jne
or
in
lret
mov
fwait
cmp
daa
icebp
or
fnstenv
and
addr16
xor
sti
mov
and
call
and
mov
mov
mov
cmpsb
sub
cld
ret
hlt
nop
shlb
cs
cltd
push
sbb
cmp
mov
push
int
pop
popf
mov
loop
push
push
das
xor
sahf
daa
out
int
and
mov
sbb
inc
sti
add
lahf
stos
shrl
mov
push
sbb
dec
xor
popf
insl
inc
sub
popa
mov
aaa
loop
sub
mov
jne
arpl
ret
fsts
test
ss
lods
and
pop
test
add
push
inc
mov
adc
push
dec
mov
xor
jns
nop
lcall
pop
adc
xor
xor
loop
scas
add
inc
repnz
mov
pop
mov
dec
add
out
adc
es
cltd
in
or
xchg
add
cmp
inc
pop
pop
cmp
sub
cmpsb
int
leave
rclb
nop
or
leave
cmp
pop
in
xchg
mov
push
inc
mov
xor
loope
push
test
mov
push
xor
or
popf
mov
cmp
xor
jno
je
pop
jne
xor
mov
or
xlat
sbb
xor
sbb
mov
mov
andb
roll
ret
sahf
shr
adc
in
stos
iret
pop
mov
cmp
adc
cmp
dec
cmc
cwtl
adc
fs
les
cs
into
movsb
or
cmpsb
mov
add
stos
pop
mov
ds
incl
pop
or
test
or
outsl
jl
stc
inc
fwait
outsb
pop
dec
add
xchg
shlb
test
and
sbb
jge
adc
sbb
test
incb
xor
sub
lods
jbe
and
arpl
push
xor
lods
lods
xchg
sub
jecxz
pop
dec
outsb
xchg
jl
mov
jle
pop
daa
aas
xlat
loopne
xorl
in
movsb
pop
outsl
nop
divb
push
pop
pop
mov
xor
repnz
les
sbb
and
push
add
inc
sbbb
mov
mov
gs
outsl
xchg
sbb
test
fistpl
xor
in
test
push
adcl
adc
outsl
push
test
outsl
add
out
hlt
iret
pop
icebp
add
sbb
adc
pop
pop
push
sbb
adc
packuswb
sbb
adc
sub
push
xchg
xor
adc
jae
pop
add
dec
fistl
or
aad
loope
cmp
ja
mov
sbb
push
xchg
mov
push
inc
fiaddl
lds
cmpsl
add
mov
mov
cmp
sbb
dec
cmp
pop
int3
lea
lods
mov
and
lea
test
scas
mov
dec
addr16
pop
enter
mov
jge
stos
mov
movsl
dec
lret
icebp
cmp
sbb
cltd
pop
and
mov
add
push
in
cmpsl
in
push
mov
rcrl
mov
mov
into
sarl
xchg
mov
add
test
or
imul
loope
test
xor
and
xor
lahf
adc
xor
stos
call
pop
test
jae
push
and
gs
mov
jmp
mov
imul
pop
rcll
lcall
jl
adc
inc
daa
mov
pop
pop
fcoms
fcmovb
mov
ja
and
and
aaa
lret
xchg
adc
fwait
int
adc
imul
mov
push
rcrb
inc
sbb
outsl
cwtl
fiadds
pcmpgtd
xchg
cltd
scas
xor
mov
sarl
lret
push
xor
xor
adc
ret
inc
mov
adc
icebp
mov
movsb
int3
pop
jae
and
xor
jl
scas
lcall
aad
loop
push
fnsave
cld
push
xor
roll
repz
loop
push
mov
mov
sub
jns
les
and
adc
jp
or
mov
stc
addb
sbb
inc
nop
pop
rorb
add
sbb
dec
push
jns
adcl
in
pop
xor
loope
imul
pop
fdivrl
sbb
and
sbbb
rol
lahf
insl
lcall
push
cli
mov
sahf
or
or
lods
stos
jl
push
mov
aad
ja
sbb
mov
adc
ss
jns
dec
loope
pushf
dec
shlb
lods
push
iret
jmp
into
xor
xchg
mov
pop
or
mov
or
daa
push
loope
cmp
sub
dec
inc
out
in
jb
and
jmp
scas
sbb
ret
dec
adc
or
sub
mov
fmull
shrl
loop
inc
call
cmpsb
cmpsl
push
pop
ds
loope
and
and
out
xchg
in
mov
sbb
xchg
adc
call
mov
lcall
xchg
cmp
pop
andl
popa
ret
cmp
jne
leave
loopne
mov
mov
in
pushl
loop
cmpsb
fisubl
mov
rolb
mov
dec
sbb
cmp
outsb
in
or
pop
mov
mov
test
loope
in
pop
popf
lods
scas
mov
iret
mov
sbbb
int
loop
movsl
inc
cmpb
loope
aad
push
outsl
js
adcl
dec
sbb
jl
lds
ss
dec
lock
aas
test
xchg
sbb
cmp
mov
xor
cmpsl
lcall
stos
cwtl
xchg
adc
inc
mov
inc
lock
inc
cmp
mov
cld
stos
out
loop
adc
int3
mov
inc
xor
mov
in
int
je
adc
sub
cmp
dec
fnstenv
mov
cmp
cmpsb
jecxz
mov
daa
loop
pop
adc
jle
cmpsl
or
fcmovb
sub
test
mov
mov
and
pop
lds
mov
xchg
std
iret
shrl
in
roll
loope
es
pop
bound
cmpb
mov
ret
fwait
dec
outsl
test
adc
rorb
push
je
sti
fistpl
pop
sbb
pusha
shr
ffree
xor
cmp
pop
int3
adc
gs
inc
mov
subb
adc
mov
or
pop
cmp
inc
cmp
testl
bound
test
cmp
int
add
test
xor
xor
lods
xchg
push
adc
es
push
lods
jp
cmp
pop
loope
inc
mov
mov
les
mov
pop
pop
jno
and
daa
pop
outsb
adc
iret
in
pop
stos
movsl
push
cmp
push
movsb
jl
mov
sarl
push
ljmp
in
and
mov
es
hlt
movb
lret
mov
adc
and
mov
inc
and
mov
and
les
in
repz
adc
mov
mov
jle
rclb
data16
pop
das
sbb
hlt
mov
cmp
jmp
jnp
lods
es
call
movsl
sub
in
sbb
pop
xchg
leave
pop
sub
push
push
xchg
xlat
jl
hlt
mov
insb
and
insl
add
push
jo
fisttpll
movsl
shll
cmpl
cld
xor
loope
popa
cmp
in
sub
dec
dec
fwait
and
sbb
movsb
gs
adc
fwait
imulb
inc
pop
mov
lret
das
push
cwtl
inc
incl
push
lods
or
fdivr
mov
push
pop
in
mov
and
aad
xchg
data16
lret
sbb
shrl
pop
icebp
mov
cmpsl
out
fwait
mov
inc
mov
xchg
and
outsl
shr
mov
mov
das
pop
imul
pop
in
icebp
in
or
and
outsl
out
mov
mov
add
fildll
rclb
das
inc
mov
je
pop
icebp
push
dec
les
imul
sub
iret
push
loope
mov
xlat
loope
icebp
cwtl
in
inc
shl
cmp
cmc
sti
sbb
gs
jg
adc
jno
lahf
loop
testb
ss
out
fistpll
mov
mov
xor
pushf
push
loope
loopne
fldt
jp
xchg
pop
sbb
repnz
iret
adc
mov
movq
push
xlat
cmpsb
stos
dec
loop
jnp
add
mov
sub
sub
fwait
out
or
mov
add
add
das
shlb
stos
sub
sbb
dec
es
out
imul
leave
mov
insb
call
daa
dec
adc
mov
lret
inc
mov
jo
jno
out
mov
cmpsl
mov
cmpsl
mov
mov
jecxz
cmp
out
xchg
sub
mov
sub
lock
outsl
into
stos
dec
push
pop
loop
fisubl
imul
hlt
mov
adc
dec
push
inc
xchg
add
push
imul
insl
andb
jne
ja
add
pop
rclb
mov
gs
mov
or
xor
lock
subl
add
nop
adc
fstp
pop
adc
aaa
lds
xchg
loop
and
and
shll
pop
and
leave
pop
mov
fwait
lahf
daa
rorb
push
push
in
cmp
and
xlat
lods
jp
std
mov
call
sbb
jmp
mov
pop
pop
aaa
loop
sbb
and
in
sub
xor
mov
mov
jge
imul
adc
je
in
or
mov
js
mov
xor
ficoml
fwait
cmpsl
test
scas
xchg
shrb
movlps
cmp
xor
mov
cmpsl
jbe
push
cltd
cmp
xor
mov
inc
xchg
jb
adc
rolb
xor
loope
inc
loopne
inc
adc
ss
or
sbb
popa
dec
add
mov
lahf
imulb
inc
mov
popf
popa
push
xchg
fcmovnb
fcmovne
pop
and
arpl
mov
mov
xchg
sub
and
jo
or
adc
loop
leave
flds
shlb
mov
insb
fdivr
in
cmpsl
adcb
mov
lods
lret
loop
sub
sarb
xor
pop
repz
sbb
cmpsb
sbb
mov
and
mov
push
xchg
adc
push
xchg
pop
loop
xor
data16
int3
les
xor
outsb
in
push
sub
inc
inc
cmp
and
in
int3
cmp
fsub
push
adc
outsb
mov
pop
push
mov
jne
in
push
mov
ret
inc
sbb
fdiv
ljmp
loope
shrb
std
in
imul
ret
inc
mov
jb
fsubl
ds
xchg
lret
lock
rcll
push
xchg
orb
sub
daa
adc
mov
iret
and
pop
ja
mov
and
push
es
fwait
push
out
fsub
lcall
mov
aaa
dec
mov
in
icebp
sbb
insl
ret
cmp
jp
pop
xchg
add
jmp
cs
sbb
xorb
adc
dec
aas
in
rcrb
push
mov
pop
cltd
push
sbb
sar
ret
cltd
mov
mov
or
mov
in
adc
lret
xor
and
jge
int
pop
adc
arpl
mov
adc
cli
out
and
mov
mov
jbe
cmp
cmp
xor
or
mov
adc
mov
and
lods
loop
imul
adcl
out
sbb
mov
xchg
mov
rcr
jmp
mov
shld
and
mov
loopne
hlt
add
call
xchg
mov
bnd
scas
stos
hlt
jecxz
aaa
mov
jmp
into
push
jge
mov
push
jne
add
push
xor
and
push
cmp
and
xchg
mov
push
adc
jl
addl
enter
cmpsl
movsl
add
outsl
adcl
insl
add
sbb
and
mov
loope
movsb
cmp
das
flds
outsb
sub
movsl
into
and
adc
mov
pop
push
adc
loop
int3
sub
mov
fistl
test
andl
shlb
cli
mov
aas
cmp
in
jp
mov
sub
xchg
mov
fdivl
sbb
loope
dec
mov
cmp
fldt
data16
xchg
daa
loope
roll
cs
int
xor
out
jg
dec
pop
pop
or
insl
repz
cmpsl
into
aas
pop
mov
cmp
add
xchg
jmp
insl
out
cltd
negl
or
push
popa
adc
jno
jmp
loope
ja
xchg
xchg
rorl
test
mov
aad
cmp
movb
fidivrs
or
fcmove
sti
pop
aas
sbb
xor
and
mov
cmp
or
in
mov
std
in
loope
adc
pop
leave
mov
mov
cltd
jns
mov
lds
loope
out
mov
cmp
loopne
xor
dec
icebp
das
in
pop
pop
call
enter
push
scas
ss
and
sub
movsl
or
sub
sbb
pop
jno
cmp
mov
fiadds
push
jne
dec
inc
xor
pop
xchg
decl
sahf
or
cld
cmc
insl
stos
mov
lock
dec
pop
iret
jmp
sub
dec
sahf
pop
xchg
mov
cmp
mov
xor
shrl
daa
loop
jns
pop
lods
mov
sbb
xchg
dec
shll
xchg
movsb
mov
xor
cmc
or
push
mov
sbb
ljmp
ret
adc
test
jp
aas
or
sbb
mov
insb
in
lods
into
pop
push
daa
loop
inc
push
mov
sub
mov
mov
xchg
sti
xor
orb
xlat
cmp
notb
out
mov
nop
stc
jmp
and
fisubrl
in
test
mov
sub
cmpsl
repz
and
scas
push
rcrb
xchg
xor
or
add
mov
cmp
std
fcompl
add
fcmovu
mov
xchg
xor
xchg
dec
adc
xchg
jno
or
int3
dec
and
ret
inc
popf
test
pop
popa
in
clc
dec
inc
sarl
loop
cmpb
lcall
dec
outsl
sub
rcrb
scas
repnz
in
movsl
lret
xor
int3
mov
sub
and
jl
push
xchg
jb
pushf
xchg
jo
or
push
inc
push
mov
arpl
xor
sbb
cmp
scas
in
loop
mov
fneni(8087
xor
and
loop
or
ljmp
mov
xor
fldl
sbb
xchg
mov
int
clc
xchg
mov
cmpl
aad
rol
fwait
dec
loop
cmpsl
jne
lock
lahf
aaa
xor
mov
sbbl
mov
add
jns
inc
pop
jns
popf
cmpsl
pop
add
mov
sub
adc
sbbb
add
shl
add
cmp
push
inc
sub
js
stos
mov
xchg
hlt
inc
ds
or
push
jge
xlat
in
lea
cmp
sbb
cmp
mov
loope
xchg
jno
repz
xorb
sar
cmp
jl
sub
arpl
rcrl
in
mulb
fnstcw
ret
xor
xor
sbb
pop
dec
leave
addr16
and
rcll
push
mov
mov
in
in
mov
and
mov
add
xchg
push
add
add
sub
pop
mov
sahf
decb
dec
dec
mov
mov
repnz
cmpl
aas
push
dec
rcll
js
ja
mov
cmp
arpl
outsb
xchg
hlt
adc
lret
in
nop
bound
sub
jp
sti
sarl
jb
ror
mov
pop
stc
dec
mov
push
cld
xorb
dec
loope
sub
xlat
inc
sti
pop
ds
mov
fs
push
adc
js
pop
nop
mov
cmp
popa
loope
inc
lcall
hlt
xchg
or
lds
or
jbe
xchg
lods
iret
xchg
sbb
mov
and
subl
popa
lahf
sbb
add
adc
cmp
roll
fimull
xlat
shll
loopne
push
cmp
sti
fldcw
xor
add
xor
push
inc
mov
jns
inc
cmp
mov
in
sbb
cmpsl
call
ss
adc
fsub
pop
in
aad
dec
icebp
inc
mov
je
mov
or
xchg
ret
jno
fsubs
flds
inc
roll
mov
pusha
ret
loope
sar
jg
dec
sbb
mov
into
pop
fldt
dec
jo
and
jns
test
mov
push
cmp
xchg
dec
loop
sub
in
loopne
lds
and
rcrb
xor
leave
jo
js
mov
cmp
xchg
adc
cld
popf
dec
and
in
arpl
scas
cmp
xor
call
out
shl
test
fldenv
ja
nop
xchg
out
insl
fs
cmp
mov
lods
pop
mov
xchg
shll
in
push
loop
lods
sbb
jbe
inc
cmp
adc
call
loope
adc
or
mov
es
fwait
or
push
cmp
adc
std
cmp
loop
pop
or
mov
lods
cmp
das
sub
pop
and
mov
mov
xchg
sub
neg
int3
cmp
sub
fiaddl
sub
aad
cld
inc
jp
mov
adc
popf
mov
ss
xchg
sbb
inc
inc
cli
lods
fwait
xchg
or
rcl
add
add
shlb
les
iret
push
nop
push
pushf
in
mov
sbb
outsl
dec
mov
and
add
inc
daa
in
adc
in
xor
bound
and
fcomi
sbb
mov
sbb
inc
fs
aaa
in
test
ret
aaa
fimuls
test
pop
cld
ficompl
imul
push
out
jno
xchg
dec
cmpsl
int3
lock
push
mov
cmp
test
add
xor
mov
fwait
sbb
fimuls
dec
scas
punpcklbw
repz
xor
push
xor
ss
inc
lods
jle
bnd
rcrl
hlt
dec
fistps
iret
inc
mov
pop
and
test
repz
jb
stos
dec
lret
sub
clc
cltd
in
dec
mov
adc
test
and
sti
mov
push
fs
mov
out
mov
jae
in
push
xchg
sub
negb
scas
imul
dec
lds
ja
mov
loop
imul
xorl
cmpsl
fdivrl
in
repz
adc
cld
sub
loop
xchg
adc
push
sbb
out
loopne
das
sub
fstl
lods
test
pop
int
jl
lcall
mov
ja
mov
pop
mov
jno
in
leave
cmp
popf
mov
push
in
fsubr
fmull
push
sbb
pop
mov
insb
int3
sbb
mov
mov
cmp
xlat
ljmp
sbb
in
movups
pusha
push
cltd
ds
ds
xchg
sub
mov
fprem
outsl
push
dec
mov
sub
push
daa
mov
in
mov
add
sub
adc
ja
sub
cmp
mov
push
jb
sbb
jmp
and
lods
inc
cmp
rcll
loope
push
scas
shll
dec
cwtl
aam
leave
test
scas
repnz
jae
pusha
xchg
sbbl
sar
push
mov
mov
sbb
push
pop
jge
sub
mov
out
fcmovnbe
and
lods
adc
inc
push
mov
sub
outsl
jmp
inc
jmp
add
aam
loop
add
mov
fs
outsl
inc
xchg
mov
xor
scas
adc
pop
dec
mov
xchg
jl
jae
mov
into
and
test
gs
adc
imul
repz
mov
in
rclb
loope
outsb
outsb
mov
dec
aam
das
pop
jae
test
js
pop
adc
dec
adc
mov
popf
pop
xor
cmp
and
gs
add
mov
xchg
cmp
into
xchg
sbb
inc
inc
ret
aas
mov
or
and
popf
sub
add
dec
iret
shl
sub
push
pushl
loope
xchg
cmpsb
rcll
fisttpl
int3
call
shlb
ss
loop
loope
loope
pop
jnp
es
push
enter
imul
jge
negb
in
lcall
adcl
mov
sub
sbb
aaa
xor
mov
fstps
sbb
xor
mov
test
push
lret
in
cmp
loope
sbb
shlb
cmp
rcrb
out
inc
in
add
push
adc
xorb
inc
insb
pop
push
outsl
mov
mov
dec
jb
pop
dec
in
inc
or
lods
es
sub
jno
in
push
insl
packsswb
in
mov
inc
loop
pop
jmp
push
xor
fwait
out
pop
ret
pop
ljmp
pop
push
xchg
fs
movsl
inc
adc
xor
push
pop
cmc
imul
ret
xchg
daa
rcll
add
pop
lods
ds
in
adc
xchg
cmp
inc
ja
stos
inc
cltd
cmp
mov
notb
pop
push
mov
ds
jbe
mov
aaa
push
call
ss
inc
aaa
sbb
or
or
pop
dec
or
pop
pop
mov
and
pop
adc
mov
stos
dec
or
mov
and
sbb
jmp
push
adc
xchg
nop/reserved
sbb
loope
cmpb
popf
or
fcom
lock
jmp
std
out
clc
xrelease
cmp
arpl
push
adc
sub
je
mov
adc
sub
mov
loope
loop
icebp
cmp
xorb
jae
or
pop
or
mov
cltd
call
sbb
repnz
subb
push
cmpsl
cmp
xadd
aam
outsl
xor
fadds
andb
aas
mov
movsl
sub
loope
faddp
cmp
and
imul
iret
insb
fistl
sbb
dec
lcall
mov
add
imul
int3
jo
pop
fstpt
call
ss
mov
jne
loopne
mov
imul
pushf
mov
push
adc
or
andb
mov
mov
xchg
add
sub
inc
dec
add
ret
mov
jb
iret
adc
sti
dec
push
mov
push
add
mov
incb
sarb
nop
push
cmpsb
popf
shrl
test
jno
cld
pop
in
aam
xor
pop
gs
mov
push
jo
test
loop
fldenv
daa
sub
sahf
jmp
mov
mov
filds
push
jp
push
dec
xchg
adc
mov
mov
icebp
dec
pop
sbb
jae
mov
lods
int3
mov
clc
loop
test
addr16
cmpsl
jmp
int
sub
xchg
sarl
into
push
loope
pop
sahf
push
and
lds
mov
adc
in
and
jne
xchg
add
test
adc
xor
add
arpl
sub
loope
mov
sbb
repz
scas
int
inc
arpl
lahf
inc
pop
jb
cli
or
sti
in
sbb
inc
movsl
mov
adc
push
push
pop
in
mov
hlt
jecxz
and
pushl
xchg
cld
iret
cmovo
pop
imul
adc
add
psllw
mov
int
and
mov
aas
xchg
xchg
bound
loop
movsl
mov
mov
insl
add
jo
sbb
aaa
cmp
mov
roll
call
popf
mov
in
loop
cmp
push
lret
mov
fiadds
loop
xchg
push
mov
cmp
jno
loop
ret
push
xlat
mov
and
mov
adc
inc
lock
mov
icebp
mov
fadd
mov
bound
xchg
mov
push
loop
dec
hlt
mov
aad
jbe
or
inc
sbb
shlb
dec
mov
imul
pop
mov
fbld
and
mov
aaa
sub
pop
in
push
jno
gs
ja
sub
loopne
mov
xor
dec
inc
or
cmp
adc
sbb
in
insl
cmp
nop
xchg
push
ret
jb
pop
and
loop
mov
inc
pop
mov
or
add
or
lcall
mov
sbb
lret
sub
ds
fisubrs
ss
jl
aaa
movhps
pop
sub
add
arpl
mov
ds
fldt
dec
sub
in
xchg
adcl
ja
ret
out
cmp
cmp
icebp
mov
mov
mov
ret
rol
lahf
les
xchg
adc
pop
mov
adc
outsb
push
das
add
inc
push
dec
inc
sbb
xchg
dec
lcall
ret
mov
adc
cmc
inc
ds
test
xchg
xor
les
cmp
loope
inc
out
push
push
sub
xchg
add
push
xchg
push
xchg
loope
jns
sub
loop
mov
xchg
stc
jmp
adc
sbb
loope
pop
lock
xchg
jmp
dec
inc
scas
mov
outsl
xchg
repz
lods
add
scas
and
hlt
cwtl
les
outsl
pusha
xchg
sub
mov
ret
pop
xor
pop
xor
notb
leave
cmp
andl
mov
jl
je
pop
mov
jbe
ja
mov
and
test
sarb
cld
addr16
jb
xor
mov
inc
daa
fcmovb
cmpsl
jae
stos
stc
ror
mov
icebp
fwait
pop
xchg
sub
rorl
adc
push
jo
dec
pop
rclb
adc
out
mov
lahf
test
mov
add
adc
imul
stos
aas
faddl
movsl
sar
add
push
sbb
mov
push
lret
ret
sub
outsb
jge
mov
mov
xchg
jmp
es
lret
mov
call
lds
shlb
lcall
push
jl
pop
nop
incl
adcb
adc
and
movsl
push
inc
dec
push
mov
adc
arpl
sub
mov
cmpsb
popf
push
mov
sbb
lods
sub
mov
scas
imul
icebp
jle
int
jecxz
rcrl
in
lods
ss
sti
push
popa
loope
mov
mov
and
mov
aad
std
xchg
js
or
loop
stos
push
stc
pop
sub
mov
call
pop
gs
sbb
xchg
inc
inc
push
add
aad
scas
mov
int3
fldcw
sub
adc
mov
in
pop
stc
sbb
scas
lcall
jl
jno
loop
out
or
inc
push
mov
aam
xor
mov
or
xlat
sbb
aad
adc
lds
mov
add
jns
nop
jno
mov
sub
sbb
jae
mov
mov
gs
insl
daa
imul
jle
xor
pop
jmp
xchg
fidivrs
daa
in
sub
ss
call
lock
adc
jge
sbb
mov
cmpsl
mov
sub
push
loope
movsb
adc
xchg
dec
pop
mov
sub
movsb
jle
inc
jg
and
adcl
cld
pop
into
lret
lods
mov
jno
sbb
stc
pop
test
cmpsl
aam
push
cli
mov
int3
int
fs
lods
outsb
mov
sbb
je
nop
vsqrtsd
and
add
mov
jne
jle
arpl
adc
and
sbb
faddl
adc
aam
in
neg
test
xor
jb
dec
loope
repz
mov
das
cmpsl
ss
lahf
jnp
cmpsb
test
in
lret
shrb
in
test
repz
in
into
jbe
pop
dec
popf
pop
sub
jg
or
and
jg
decl
pop
mov
sbb
jne
and
and
xlat
and
cli
and
pop
daa
outsl
sub
sub
test
mov
push
scas
adc
fwait
xor
popa
ds
inc
iret
and
add
or
nop
hlt
rcll
cmc
add
cmp
inc
xchg
je
rcrb
jbe
push
loope
pop
pusha
push
lret
xor
inc
mov
dec
in
sbb
mov
push
in
push
mov
pop
ljmp
adc
in
add
sub
das
pop
add
movsb
dec
movsl
and
mov
xchg
mov
dec
xchg
into
mov
les
jecxz
aas
loop
cmpsl
or
inc
xchg
jno
xchg
push
xchg
push
pop
mov
ret
shrb
fstpl
jl
dec
lret
mov
push
pop
push
pushf
loop
cwtl
adc
xbegin
mov
jle
sbb
add
jne
sbb
or
pop
sbb
lret
push
dec
or
shll
dec
out
cmp
xor
insb
cmp
fdivs
imul
add
mov
shlb
jno
shlb
leave
loope
cmp
sbb
inc
test
mov
movsl
cld
xor
loop
iret
sbb
stc
mov
ss
or
cmpsl
lock
and
inc
pop
in
lds
aad
loop
cmp
mov
cltd
dec
sub
loop
and
xor
pop
out
jbe
ss
mov
push
inc
push
movsl
repnz
push
xchg
in
dec
pop
jl
mov
pop
mov
out
mov
lahf
cmp
xor
lds
push
mov
mov
lds
insb
and
iret
movsl
repnz
fnstcw
addr16
and
data16
out
add
xchg
sti
repnz
push
cmpsl
or
lods
sbb
loope
xor
out
jmp
and
pop
out
mov
or
push
in
mov
xor
shl
imul
test
lret
cmp
sub
mov
dec
jb
popa
cmpsl
inc
hlt
and
xor
repz
dec
ret
arpl
fldcw
adc
push
mov
in
dec
movsb
in
push
pop
add
sub
iret
loop
adc
in
xchg
sti
push
cmp
dec
pushf
std
jbe
sub
sub
sarb
cmpsl
xchg
dec
mov
push
lahf
inc
mull
out
or
mov
cli
loopne
loope
sub
enter
xor
fnclex
pop
inc
cmc
cmp
aas
in
adc
mov
les
adcb
lret
mov
mov
dec
cmpsl
xor
xor
jl
mov
sarl
lret
shrl
daa
in
fs
and
push
push
or
cmpsl
lods
push
dec
arpl
lock
loop
fsts
pushf
jle
mov
pop
enter
in
out
push
ret
or
cmpsb
cld
in
pop
test
adc
mov
or
inc
pop
sarb
pop
ret
xchg
mov
xor
mov
mov
mov
frstor
outsb
in
jb
sub
aam
shlb
loope
xchg
pop
fisubrs
arpl
mov
adc
shrl
in
sbb
pop
dec
add
shrl
and
jecxz
in
js
mov
jno
loop
inc
pop
mov
jg
jno
movsb
ljmp
add
or
lret
je
mov
adc
andb
iret
add
out
pusha
jmp
cmp
cwtd
test
xor
dec
and
insb
loopne
enter
cmpsb
xchg
mov
loope,pt
adc
outsl
shlb
xor
aaa
sbb
push
movsb
adc
mov
or
inc
sub
lock
sti
pushf
mov
sbb
pop
imul
inc
loope
jge
andl
mov
sbb
and
call
sbb
mov
dec
or
lods
fidivrs
and
lcall
fists
dec
in
inc
push
cmp
subl
dec
push
stos
imul
loope
push
mov
int
pop
loop
xor
cmc
sub
daa
xchg
shll
or
sarb
adc
out
out
adc
in
dec
xchg
fnstenv
lret
sahf
xor
movsb
popa
cli
mov
pop
nop
aaa
jge
mov
mov
sbb
jmp
ljmp
sbb
cmp
mov
stc
out
pusha
addr16
or
mov
xor
clc
iret
or
lret
add
xor
les
cwtl
movsl
xor
scas
loop
addb
nop
sbb
lds
sbb
outsb
es
fdivrl
popf
sub
xor
lds
lds
dec
int3
jb
loop
daa
jbe
push
cwtl
adc
cli
insb
leave
mov
shll
in
dec
push
push
loop
push
mov
dec
push
and
xchg
dec
or
in
movsl
cltd
mov
xchg
mov
movsl
movsb
xor
pandn
mov
fnstenv
xor
iret
nop
mov
or
pop
leave
aad
popa
test
fisubs
jnp
mov
xor
xchg
adc
mov
cmp
cmp
inc
adc
mov
rcll
push
inc
ljmp
mov
popa
push
push
sbb
imul
in
xchg
sbb
mov
pusha
and
std
adc
sbb
shll
sbb
aas
mov
nop
mov
add
aaa
adc
addr16
push
cs
fisubs
lds
loopne
icebp
inc
jno
loope
mov
xor
mov
lock
popa
inc
push
repnz
mov
ret
outsb
jg
or
push
xor
js
dec
in
mov
or
sbb
adc
xchg
push
aaa
out
filds
jo
add
jmp
ret
and
xchg
jo
lcall
shlb
mov
or
cmpsb
or
mov
add
pop
scas
sbb
loope
cmp
out
fmuls
xor
ss
sbb
movsl
cmp
pop
and
mov
lock
xchg
add
jb
ds
mov
imul
loope
jg
push
sub
bound
mov
cmp
add
pop
mov
sub
or
outsb
cmp
mov
repnz
gs
daa
loop
push
mov
mov
xor
or
sbb
scas
imul
lahf
shll
jbe
pop
mov
cmp
sbb
icebp
xchg
cmp
xchg
xchg
stos
jae
sub
or
xchg
dec
cli
add
xor
inc
mov
xorb
pop
fwait
or
xor
int
mov
mov
push
shll
loope
iret
scas
or
arpl
pop
lcall
cmp
loop
xchg
mov
ret
and
jmp
fldt
fidivs
push
and
pop
mov
and
lcall
pop
cmp
inc
dec
inc
or
in
std
sub
xor
or
loop
push
sub
imul
in
dec
cmp
in
add
cmpsl
pop
cli
rcl
and
mov
testb
push
sbb
addr16
call
shrb
push
sbb
das
cmp
xchg
lahf
xchg
xorb
jmp
in
into
xor
push
jae
pop
and
sub
inc
loope
pop
mov
mov
sbb
loop
push
push
inc
ret
inc
mov
mov
adc
jg
ret
les
mov
sti
pop
mov
sarl
call
mov
loopne
test
adc
jl
lods
insl
nop
xor
or
or
inc
or
pusha
jmp
xchg
push
pop
cmpsl
out
or
ss
je
add
or
cltd
jmp
ret
adc
pop
cmpsl
insb
jbe
inc
jmp
outsl
shll
imulb
push
or
pushf
add
add
daa
stos
out
xor
xchg
mov
xor
add
inc
sbb
test
enter
sbb
mov
xchg
aaa
data16
aaa
fimull
fisubs
in
leave
mov
aas
sub
lret
add
pop
lcall
insl
outsb
and
push
pop
test
mov
iret
mov
pop
or
xchg
cmp
pop
out
cmp
push
add
sti
sub
pusha
pop
jmp
cmpsl
arpl
jp
xchg
movsb
jp
push
jmp
cmp
sub
loope
pop
jg
xchg
mov
sbb
or
cmp
iret
dec
sub
dec
jle
jge
test
insb
pop
and
mov
pop
xor
pop
adc
cmp
pusha
mov
jl
pop
sub
pop
in
xchg
lret
xor
cmpsl
pushf
iret
fisubl
xchg
xchg
icebp
jl
mov
insl
jno
xchg
and
sbb
or
fcoml
loope
inc
mov
inc
or
mov
imul
mov
call
push
sbb
mov
cld
ret
mov
adc
imul
ds
ret
add
repnz
or
popf
mov
stos
ds
stc
adc
or
and
inc
xor
push
sub
xor
xchg
lahf
mov
or
gs
push
mov
xchg
in
or
enter
es
leave
mov
in
xchg
mov
jno
push
leave
and
mov
aaa
inc
lret
sbb
mov
addb
cmp
loop
stos
inc
push
mov
loopne
in
jne
ret
sbb
pop
push
subl
jecxz
loop
adc
nop
mov
pop
push
mov
mov
mov
pop
loop
out
or
jl
test
daa
push
xchg
dec
mov
xchg
mov
addb
cmp
jl
movsb
popa
test
jl
jns
lret
leave
xchg
sub
sbb
fmuls
ficompl
lret
push
mov
loope
data16
mov
jg
xchg
les
mov
test
mov
and
nop
xchg
adc
xchg
jl
mov
mov
cld
xor
pop
and
sub
dec
inc
imul
push
adc
push
rclb
in
or
repnz
cmp
push
and
push
mov
pop
out
sbb
jno
push
in
in
lods
fs
aas
add
pop
add
mov
mov
imul
aad
cmp
out
pop
cmp
mov
lods
jle
les
cld
pop
cld
inc
and
into
outsl
or
loop
cmp
and
push
add
mov
mov
inc
imul
in
int
sub
and
and
xor
xor
movsb
dec
or
rorl
sti
pop
mov
aad
clc
dec
mov
xchg
push
loop
out
inc
inc
pop
push
into
adc
fisubl
mov
xor
pop
loope
xchg
push
inc
and
jmp
xor
repnz
shlb
xchg
or
and
inc
aaa
loopne
lock
in
mulb
mov
pop
mov
nop
push
cs
pop
sub
repnz
xor
add
mov
xchg
lret
adc
test
insl
push
hlt
ret
pop
fiadds
orl
loope
cmpsb
fiaddl
mov
cmpb
ljmp
sub
movsb
add
sub
ja
mov
aas
insb
mov
push
rcrl
lret
mov
mov
in
inc
fildll
lahf
mov
movsb
jo
pop
in
mov
mov
aas
dec
mov
ljmp
jnp
das
inc
sbb
cmp
out
arpl
in
iret
roll
push
in
pushf
pop
mov
push
mov
shll
mov
sub
sbb
lds
add
into
mov
daa
mov
into
jmp
fcoms
mov
jle
inc
aaa
sbb
pop
sti
fs
inc
jo
or
and
push
mov
out
ss
cld
roll
cmp
dec
mov
jb
sub
lahf
cmpsb
sub
ljmp
icebp
push
sbb
mov
hlt
shr
push
xchg
fiadds
mov
xchg
repnz
push
cmp
clc
mov
loop
int
xor
rorl
cli
xor
movsl
and
mov
and
shrb
insl
lea
jmp
cmp
inc
add
lret
mov
jl
outsb
pop
pop
pop
dec
aad
or
movsl
or
push
aam
mov
rcll
xor
sub
xor
mov
ret
roll
and
mov
jo
outsl
lcall
xor
jecxz
mulb
sbb
inc
loopne
mov
adc
and
xor
push
cs
nop
lods
pop
mov
jb
dec
mov
jno
ss
push
add
imul
movsb
mov
cmp
sahf
mov
pop
xor
inc
mov
lods
sub
mov
xchg
lods
das
sub
mov
mov
clc
cli
inc
dec
sub
add
outsl
mov
out
sbb
adc
dec
sarl
add
xchg
out
push
dec
in
push
xor
and
not
mov
cmp
xchg
loope
lods
stc
push
sbb
sbb
fbld
xor
call
mov
cmp
test
loop
jb
es
xchg
frstor
inc
mov
dec
and
rcrl
loop
and
mov
mov
pop
ja
adc
rcrb
test
sbb
adc
jns
pop
in
fstpt
cmp
or
pop
movsb
sbb
mov
cltd
mov
push
popf
xor
es
inc
sub
mov
xor
mov
mov
leave
sub
add
mov
xchg
sub
aas
flds
push
daa
push
scas
das
push
inc
push
inc
test
push
imul
xchg
pop
inc
dec
cltd
sarl
cmpsl
sarb
in
xlat
lahf
movsb
mov
out
fidivrl
aas
movl
ss
adc
cmpsb
dec
daa
and
and
nop
jbe
jmp
scas
jo
popa
or
sbb
shrl
dec
and
adc
cmpsl
and
in
mov
xchg
xchg
stos
shld
push
bound
xchg
andb
dec
ja
mov
mov
dec
dec
xchg
inc
mov
andl
push
jbe
scas
fnstenv
jecxz
das
mov
xchg
ja
dec
push
mov
cmp
jge
push
hlt
std
lret
xchg
or
add
int3
pusha
or
pop
cmpsb
mov
iret
sub
mov
push
adc
outsl
sbb
jmp
xchg
loope
inc
shrl
int3
pop
and
inc
sbb
cmp
call
xchg
sub
pop
pop
xchg
add
in
and
into
aaa
hlt
jno
scas
xor
adc
addr16
dec
xchg
jo
or
pop
inc
mov
int3
insb
lcall
xlat
ror
mov
xchg
out
jmp
test
adc
jecxz
int
shl
lahf
pop
das
mov
imul
xchg
std
pcmpeqw
mov
add
push
int
mov
lock
adc
mov
addr16
xchg
subl
cmp
stos
cmp
pop
xor
mov
cmp
shll
or
mov
mov
xor
sub
sbbb
mov
xchg
xor
inc
xchg
cmp
sbb
ret
inc
xor
dec
loope
dec
gs
shlb
or
test
xorb
xchg
movsl
jno
loop
push
rorl
nop
in
sub
mov
adc
dec
fistpl
popa
out
jmp
insl
add
mov
mov
loop
hlt
inc
ljmp
sbb
ljmp
xor
pop
mov
xchg
or
xor
dec
mov
aad
sti
push
test
ficomps
int3
pop
fcoms
xchg
jbe
in
in
jns
inc
xchg
mov
loop
jo
rolb
lods
jge
jae
movsl
inc
or
xchg
les
fwait
lods
jmp
adc
xchg
mov
fidivrs
repz
cmp
lret
jl
add
scas
mov
iret
mov
push
loop
insl
cld
xor
mov
or
mov
fnstcw
mov
push
insl
and
les
xor
shll
sub
cmc
dec
hlt
dec
addl
sbb
cmp
insb
pop
cwtl
leave
sbb
in
ds
out
inc
test
inc
outsb
loop
lods
push
mov
mov
and
ret
fstpl
fnstenv
mov
shl
movsb
cmc
stos
ror
addr16
andb
jne
bound
in
mov
int3
fldenv
pop
push
and
mov
movsl
or
ret
mov
movsb
in
mov
add
mov
jnp
add
sub
out
fs
loop
rclb
dec
int
pop
inc
imul
cmp
fnstenv
adc
in
jbe
jns
out
pop
repnz
cmp
sub
iret
loope
dec
movsb
sbb
add
int3
daa
fstpl
test
sbb
jecxz
inc
test
gs
pop
lret
cmp
pop
js
mov
aas
mov
sbbb
loop
nop
and
push
xchg
test
loopne
rcr
add
add
and
push
cmp
sti
ror
cmp
mov
sub
imul
ds
xchg
std
out
mov
dec
std
mov
cmp
jb
psrad
flds
movsl
mov
pop
xchg
rcl
pushf
insb
movsb
popa
push
or
xchg
mov
ss
xor
add
adc
xchg
lea
jne
lock
sub
jns
insb
fwait
jno
dec
loope
lret
data16
lret
cmp
mov
int3
pop
sbb
fsubrs
test
xchg
mov
mov
iret
or
dec
and
rorl
and
cmp
daa
inc
in
xor
je
push
hlt
cmp
cmp
mov
sub
lahf
popf
scas
inc
scas
notb
mov
rcrb
pop
shrl
loopne
das
push
pop
or
mov
rolb
mov
mov
xchg
mov
sbb
and
xchg
insb
xor
lods
add
dec
dec
push
in
jg
push
movsb
cmc
sbb
loope
adc
ret
mov
sti
mov
xchg
shl
fbstp
stc
iret
ss
or
mov
popa
xor
mov
in
test
sbb
outsl
lods
xorl
movsl
jne
xchg
jp
in
add
ja
jno
daa
int
stos
in
push
add
pop
xor
jno
cmp
mov
mov
loope
dec
push
ret
lods
and
adcb
lcall
imul
bound
adc
sbb
cwtl
sbb
sti
sub
loop
out
push
shrl
pop
and
jno
fwait
mov
mov
pop
add
sub
mov
and
mov
int
sbb
xchg
pop
add
aas
in
push
test
push
and
int
sub
cmpsl
dec
in
push
aad
pop
out
adc
inc
mov
mov
nop
inc
push
jecxz
repz
pop
lret
or
pop
inc
sub
adc
adc
jp
sub
pushf
inc
pop
lret
fs
rolb
pop
mov
adc
outsb
jp
xor
cmpsl
stos
adc
sbb
aam
adc
in
xlat
aad
or
and
shl
push
clc
xchg
jns
dec
and
dec
icebp
dec
mov
mov
add
push
sarl
mov
iret
xor
in
out
xchg
mov
sbb
jl
lods
push
add
push
inc
enter
cmpsb
mov
cwtl
mov
jp
data16
adcb
inc
pop
inc
cmp
loop
xor
pop
xchg
aam
sbb
in
push
imul
or
jecxz
inc
mov
mov
cmc
jno
cmc
fldt
mov
adc
push
sbb
lcall
or
loop
mulb
ds
mov
lea
outsb
push
stc
andl
cmp
jp
inc
sbb
fcmovnu
aad
shl
adc
jg
loop
ret
aas
xchg
adc
inc
cltd
ljmp
test
cmc
lahf
mov
loope
mov
add
xor
into
shr
leave
mov
sub
jg
fisubl
push
sarl
ja
mov
test
sbb
loope
pop
sbb
in
fsubl
test
call
push
movsl
xor
xor
test
sbb
xor
test
pop
and
divl
jno
out
dec
pusha
cmp
cmp
pop
and
lock
in
jae
or
fwait
xor
xchg
fwait
out
push
ret
mov
lcall
sbb
push
es
mov
adc
lcall
ret
inc
in
xor
push
inc
lods
hlt
jb
sbb
popa
mov
sbb
data16
out
jbe
scas
push
add
inc
icebp
sub
sti
pop
mov
das
mov
mov
lahf
insl
ljmp
test
idivb
lds
mov
jns
xor
imul
cmp
imul
adc
mov
in
fwait
lods
nop
pop
sbbb
adc
call
sbb
jne
adc
xor
loope
mov
aaa
in
inc
movsb
push
fildl
push
es
inc
jne
test
cwtl
and
xchg
mov
test
aas
xlat
pop
pop
outsb
sub
shrl
data16
sbb
or
movsb
and
cmp
mov
and
adc
fstpl
ds
and
or
mov
mov
shll
jl
gs
clc
arpl
sbb
inc
in
unpckhps
and
ret
add
fisubrl
loope
adcb
and
lods
outsl
mov
or
loopne
fcompl
sbb
mov
mov
sub
push
and
pop
push
pop
inc
sarl
stos
mov
scas
out
mov
xor
int
cltd
inc
push
push
xor
int3
pop
or
lcall
mov
ret
in
xchg
xchg
add
mov
adc
loop
inc
adc
jne
dec
sahf
lret
in
push
push
mul
push
loop
xor
scas
negb
lods
xchg
sub
fcmove
xor
add
out
out
xor
pop
xchg
int
mov
orl
adc
mov
js
pop
rcr
jns
shll
paddusb
lcall
xchg
mov
mov
fsubs
out
lcall
pop
fmul
xor
inc
inc
fsubl
adc
sbb
cmp
cmp
sbb
fsub
mov
stos
add
repz
inc
lcall
sub
sbb
in
lcall
or
loope
je
mov
xlat
mov
mov
lods
cmpl
rorl
ror
lret
outsb
clc
inc
mov
lods
cmp
loope
mov
insl
push
xchg
imul
pop
nopl
in
call
pusha
lret
adc
nop
int
mov
sti
in
call
mov
add
nop
pop
mov
cmp
sub
or
push
pop
cli
loop
adcb
xchg
mov
daa
repz
mov
ss
sub
xor
test
fldenv
cmpsb
test
rclb
inc
xor
lock
sub
loop
inc
mull
push
xor
push
test
mov
loope
push
ss
mov
popf
push
sub
vcvtps2dq
fimull
lods
in
scas
mov
cmp
imul
movsl
xor
fiaddl
push
inc
jb
cmp
sahf
inc
repz
pop
out
fs
out
cltd
iret
cmp
add
adc
xchg
jecxz
xchg
sbb
push
pop
call
loop
rol
mov
xchg
sbb
nop
or
pop
jl
mov
mov
pop
test
jns
sub
rorb
sub
fs
sti
movsb
mov
arpl
push
push
jne
ja
fldenv
mov
or
mov
ja
call
je
in
jl
sbb
int
clc
popa
cmpsb
loop
or
jl
mov
mov
ljmp
loope
jbe
in
fs
test
loop
out
or
mov
cmp
or
dec
lret
int
scas
cld
out
out
sbb
loope
adc
pop
push
pop
loop
idivb
test
or
mov
mov
lret
mov
adc
mov
or
in
incb
pop
dec
bound
data16
gs
mov
adc
dec
and
xor
xor
movsb
stos
test
movb
mov
inc
fbld
loop
insb
iret
test
and
repnz
pop
xchg
xchg
and
push
fdiv
imul
mov
testl
cmpsl
shlb
into
push
loope
xchg
mov
mov
mov
loop
or
pop
in
pushf
xchg
lret
add
call
mov
repnz
lds
arpl
mov
pushf
mov
lock
arpl
pop
sbb
jmp
mov
sti
cmpsb
cltd
fwait
loop
leave
xbegin
jno
ljmp
les
mov
adc
or
mov
insl
popa
push
xchg
push
sbb
mov
mov
xchg
notl
mov
cld
push
insl
jne
mov
add
inc
sbb
sub
cld
mov
hlt
je
fwait
jl
loope
add
pusha
or
ljmp
pop
jbe
repz
xor
and
pop
out
push
out
sbb
test
mov
or
jns
mov
and
sbb
in
jmp
inc
inc
imul
test
shll
mov
cmp
and
rorl
lds
arpl
add
mov
xor
inc
push
adc
jne
jae
push
orl
push
or
imul
out
sbb
ds
mov
js
mov
mov
dec
int3
push
daa
out
std
sarl
insb
mov
pop
xor
adc
outsl
loope
outsl
lods
data16
std
je
fs
adc
scas
dec
jbe
test
sbb
stc
mov
ret
fnstsw
xchg
addr16
cltd
pop
sbb
or
cmc
add
div
test
lds
pop
scas
shr
icebp
sti
jne
jns
mov
adc
imull
mov
inc
cmp
and
subl
shll
jp
push
lock
xchg
add
sub
jo
adc
fisubrs
pop
cld
pop
xor
and
sbb
mov
or
add
sahf
sub
dec
fldl
stos
rorb
cmc
dec
mov
mov
mov
jp
aas
xchg
and
fisubrl
add
mov
jnp
ret
lret
inc
imul
fnstcw
inc
sbb
push
dec
scas
adc
xchg
push
add
xor
mov
cltd
inc
int3
dec
ljmp
add
mov
daa
or
aam
das
clc
in
xor
sbb
inc
push
jg
mov
in
mov
push
daa
rcrb
sahf
jb
and
jge
lret
or
loop
js
adc
sub
xor
and
stos
xchg
xchg
fwait
xchg
in
dec
stc
dec
or
dec
lret
sub
imul
push
jae
roll
mov
push
cmp
adc
mov
roll
sbb
jmp
jl
lock
adc
adc
push
mov
lods
xchg
cmp
mov
mov
aam
fdivs
ret
pop
add
ss
sbb
in
popa
push
push
pop
mov
xor
bound
xchg
lcall
cmp
je,pt
outsl
adc
sub
mov
inc
xor
jg
stos
scas
stos
cmc
loop
aaa
adc
or
jecxz
pop
mov
sbb
pop
xor
imul
popa
in
pop
test
or
pop
lea
adc
mov
mov
adc
mov
fwait
lods
xor
outsb
int
cmpsb
daa
in
jg
inc
mov
inc
mov
es
test
nop
mov
sub
dec
fiaddl
hlt
ret
repz
in
cmp
mov
cld
jp
mov
nop
jae
arpl
sbb
les
ds
sbb
adc
mov
inc
fs
das
add
aas
add
jbe,pt
or
fldcw
cmp
sbb
xchg
mov
aam
sub
mov
out
jb
inc
xchg
sbb
popa
mov
ja
pop
inc
dec
mov
sbbb
cmp
jno
sbb
and
mov
xor
lds
and
in
mov
adc
or
ret
mov
lcall
mov
jne
push
ds
push
adc
fstps
js
adc
int3
es
adc
jb
push
xchg
loopne
and
sub
cmpl
cli
cmpl
mov
iret
jo
cmp
aas
xor
mov
sbb
jno
mov
das
cwtl
or
add
sub
adc
into
dec
imul
xchg
jge
xor
cli
jge
fnsave
fbld
mov
mov
push
jp
inc
shl
mov
mov
adc
rclb
adc
cs
in
cmp
jge
jns
mov
hlt
lcall
jmp
inc
inc
ficoml
push
sub
mov
imul
inc
mov
adc
loop
xlat
ja
pop
popa
push
xor
jl
sbb
lret
mov
fnstenv
loop
sti
mov
inc
cmp
cmp
inc
cltd
leave
iret
sahf
rcr
fnsave
fcmovnb
push
shll
pop
arpl
das
mov
imul
js
sub
pop
stos
jl
mov
dec
jmp
iret
fstps
mov
mov
jmp
adc
les
dec
sti
into
shr
push
aad
aam
outsl
inc
pop
test
push
jecxz
ret
outsl
hlt
xor
aaa
sbb
push
call
cmc
xchg
push
aam
cltd
sbb
loope
xchg
enter
stc
mov
popa
lds
jge
cli
icebp
dec
push
fldcw
jno
aas
aaa
pop
add
sub
adc
int
push
std
nop
jae
push
jmp
mov
mov
fs
loopne
inc
cwtl
pushf
xchg
pop
mov
dec
xor
imul
cwtl
xlat
push
mov
call
lea
in
in
test
movl
sbb
loopne
aaa
bound
and
or
lcall
jmp
setl
sub
ret
dec
xor
insl
sbb
ljmp
pop
cmpsb
lds
mov
aaa
add
call
iret
sub
shrb
loope
or
pop
mov
pop
dec
lret
cmp
loopne
xchg
jp
mov
loop
xor
cmpsl
idivb
iret
ret
ja
mov
add
incl
pusha
cs
inc
es
mov
fcomps
mov
jae
cltd
mov
and
xor
xchg
lds
fcmovnbe
ss
pop
loopne
scas
fdivs
xchg
sub
dec
aaa
andl
popa
outsb
sbb
dec
adc
pop
cmp
inc
mov
add
rolb
ret
sbb
bound
jle
fisubrs
lods
fs
and
jmp
or
cmp
lea
pop
dec
in
inc
in
enter
js
hlt
push
std
sub
mov
add
cmp
in
jge
arpl
sub
xor
imul
jne
mov
fnstcw
jb
or
xchg
sub
push
push
aad
xor
inc
xchg
rorl
xchg
stos
out
pop
pop
clc
sbb
mov
repnz
insl
imul
xor
sub
popf
sbb
popl
and
jbe
mov
mov
orb
jge
cmp
pop
fstps
sbbb
nop
xchg
cmpsb
add
lcall
aaa
adc
sub
push
shrl
in
mov
sbb
pop
loope
rcr
fs
push
pop
push
out
insl
xlat
cltd
xor
sbb
bound
mov
test
pusha
or
lods
xchg
sbb
lods
add
jbe
outsb
adc
cmp
push
imul
leave
test
sbb
xchg
mov
in
ds
das
loop
rcrl
mov
cltd
leave
and
jmp
push
jno
push
ret
sbb
mov
loop
dec
jecxz
lret
jo
xor
xchg
rcrb
movsb
pop
icebp
insb
testb
popf
fdivrl
ds
xor
cmp
aas
dec
sub
insb
rcrb
movsb
ficomps
xor
mov
cmp
stos
xchg
xchg
inc
hlt
push
and
mov
mov
hlt
and
pop
mov
out
pop
popf
adc
mov
pop
push
sbb
loope
push
mov
sbb
pop
cmpsl
lcall
jp
clc
test
adc
sub
hlt
adc
adcl
cmp
add
in
or
into
and
mov
xor
mov
fcoml
cltd
xor
loop
in
add
pop
iret
cmp
mov
je
sti
xchg
out
jno
fsubs
push
add
push
divl
adc
lcall
and
es
push
jae
or
push
lret
xor
push
mov
or
cmp
sbb
mov
aam
andl
sbb
add
jo
psrad
addr16
in
ficoml
fwait
xor
mov
jle
xor
iret
lock
mov
out
lahf
in
icebp
cmp
sbb
sar
xor
test
ss
sub
sbb
loope
cltd
int3
lret
out
inc
add
push
xor
in
mov
aaa
insb
imul
pusha
aam
lahf
xor
mov
in
mov
sub
mov
or
cltd
js
cmpsb
sbb
jl
push
fdivrs
inc
out
jbe
pop
jle
fs
sbb
in
sti
pop
lods
jne
cmp
jl
xor
fstp
in
jmp
hlt
loope
test
xchg
push
cmp
in
sub
repnz
insb
shll
icebp
jb
ja
imul
sbb
mov
dec
lret
mov
push
and
dec
int3
mov
push
stc
push
mov
inc
sub
or
fstps
flds
iret
shlb
cmp
and
sbb
push
sub
xor
stos
outsl
movsb
test
rclb
pusha
dec
or
xchg
cmp
push
fxtract
jns
outsb
inc
add
mov
nop
mov
pop
pop
lods
fmuls
sub
inc
out
in
cmpb
movsl
push
pop
dec
mov
mov
loop
add
psubw
mov
dec
jp
in
inc
and
cmp
inc
ret
push
pop
int3
mov
cmp
loop
cmp
ss
mov
popa
push
mov
cmp
adc
push
sti
int
add
sub
mov
jnp
in
mov
mov
fistpll
cmc
cmp
mov
cvtdq2ps
cmp
sub
xchg
or
adc
pop
xor
pop
flds
gs
dec
out
ds
mov
push
movsb
jb
jae
cmp
xor
push
push
jns
push
test
xor
fnstsw
test
sub
xchg
int3
movq
test
xchg
pop
mov
aas
das
push
out
cld
gs
out
pop
push
xchg
mov
adc
add
cmp
sbb
sbb
ret
daa
hlt
pop
push
inc
and
mov
mov
out
dec
vmovlpd
jae
or
xchg
aas
daa
jmp
sbb
adc
adc
push
and
jl
jns
outsb
mov
cli
aas
cmc
mov
xor
test
mov
imul
add
cmpsl
mov
sbb
fsub
hlt
rolb
push
arpl
pop
pop
adc
loope
and
mov
or
mov
and
sub
push
fs
adc
jne
xchg
inc
adc
mov
add
jl
pop
jne
jl
xchg
sarl
ret
adc
fbld
imul
cmpb
bound
inc
icebp
cmp
inc
xchg
pop
mov
mov
popa
out
add
nop
cmp
stos
sub
leave
mov
fisubl
or
int
rcl
in
stc
jnp
mov
adc
push
addl
loope
insl
dec
outsl
stos
adc
popf
incl
or
jmp
std
rolb
sub
fs
pop
push
push
ret
pop
imul
pop
sbb
or
clc
jle
outsb
pop
shl
adc
in
ret
cmp
mov
int
pop
jne,pn
int
pop
call
inc
loop
out
adc
mov
in
xor
cmp
test
cmpsb
nop
es
daa
adc
pop
cmpsb
push
leave
in
xchg
test
movsl
jo
dec
loop
inc
movsl
adc
out
add
add
jl
nop
adc
cmp
sbbb
adc
inc
pop
scas
xchg
jno
imul
dec
push
leave
lods
mov
sbb
nop
or
fisttps
iret
arpl
xchg
and
loope
xor
in
cmp
and
daa
mov
push
jle
add
xchg
ss
jmp
fwait
out
js
pop
ds
aam
add
adc
nop
xchg
imul
adc
pop
jne
or
cmpsl
addr16
iret
cmp
push
inc
xor
dec
mov
psrlq
movsl
ljmp
push
adc
frstor
mov
loop
cmpsl
cltd
out
cltd
out
xor
lods
loope
je
sti
pushf
or
mov
or
popf
fcomip
and
lds
xchg
and
sahf
and
xchg
loopne
cmp
lcall
xor
sub
inc
add
xor
and
lcall
adc
mov
cmp
pop
stos
pop
xchg
adc
mov
call
fsubs
pusha
jge
push
pop
lods
mov
xor
or
inc
push
inc
in
sbb
es
xor
and
testb
cli
loopne
mov
nop
mov
movsb
iret
insl
repz
xchg
ja
js
int
loop
and
imul
les
mov
fisttpl
sahf
mov
or
or
orl
popa
inc
adc
outsb
ss
mov
ficompl
mov
mov
fs
std
adc
daa
adc
push
movsb
iret
gs
loop
jp
ficompl
ss
loope
popf
and
loop
jge
sbb
jo
repnz
and
or
ds
aaa
ror
mov
push
fisttps
cli
enter
sti
jmp
pop
xchg
sub
gs
mov
out
mov
cmp
cmpsl
and
icebp
dec
push
add
pusha
leave
flds
sub
push
outsb
cmp
adc
lock
xchg
out
scas
xor
jge
jge
ror
dec
cmpsl
ljmp
dec
sub
loop
mov
icebp
loope
aas
pop
sub
nop
push
push
mov
mov
pushf
negl
sbb
loopne
mov
scas
xchg
loope
mov
sbb
mov
pop
sub
mov
mov
repz
xchg
or
xor
mov
jb
jp
outsb
inc
mov
hlt
je
sub
lods
mov
fildl
mov
adc
repz
es
pop
and
jg
mov
mov
js
addr16
aad
vmwrite
shrl
in
imul
popf
cmp
popa
inc
sub
cld
mov
mov
cmp
je
call
outsb
lds
xchg
xchg
ljmp
dec
aam
das
adc
jb
mov
xor
test
push
lods
adc
pop
jae
cmp
cmp
leave
xchg
loope
arpl
cmp
cmp
in
stos
stos
xchg
or
adc
imul
fsubrs
jo
iret
gs
loopne
test
cmp
adc
xchg
push
add
push
adc
push
mov
pop
mov
sbb
mov
and
sahf
mov
xchg
pop
lcall
jg
cmp
xchg
dec
das
dec
lcall
insb
subb
das
in
ds
xlat
sbb
jp
scas
sbb
add
dec
xor
lret
mov
adc
shll
mov
cltd
stos
push
stos
aad
lcall
sub
add
inc
xchg
sti
aas
leave
jl
mov
xchg
loop
int3
or
sub
xchg
jnp
xor
ljmp
adc
and
in
test
mov
cmpsl
push
jno
push
dec
add
or
stos
xor
in
bound
test
and
pop
or
aam
andl
and
push
sti
push
or
xor
push
or
xor
decb
pop
mov
sub
mulb
lods
adc
adc
cmp
lods
sub
rcll
jbe
dec
add
and
fstp
mov
out
mov
push
loop
test
int3
pop
scas
and
pop
jb
push
mov
sarl
xrelease
xor
addr16
cmp
dec
jle
jb
add
sub
in
push
idivb
cmpsl
add
lret
sub
jne
inc
in
insl
cmpsb
ja
mov
push
pop
and
mov
push
and
imul
adc
push
adc
xor
in
adc
ljmp
repnz
sub
pop
leave
outsl
shll
int
loop
inc
sub
in
lret
sbb
inc
adc
pop
std
rcll
addr16
aam
movb
adc
xor
frstor
mov
mov
mov
inc
mov
jno
loopne
fwait
sbb
outsl
jns
jns
in
and
inc
sub
imul
lods
and
je
cmp
inc
mov
ljmp
cmp
cld
push
iret
push
loope
call
fiaddl
sbb
mov
int
jp
dec
sbb
es
mov
pop
test
mov
shrb
in
shl
daa
das
in
xor
ljmp
and
cli
add
in
push
cmpsb
xchg
mov
xchg
frstor
jnp
xor
push
clc
adc
ret
nop
inc
fwait
sub
lods
or
mov
lret
adc
scas
add
mov
ret
xchg
or
cmp
fwait
pop
add
jnp
adc
mov
mov
mov
imul
test
jp
xchg
je
sbb
imul
into
adc
and
jl
test
xchg
arpl
and
dec
call
and
out
in
and
mov
clc
in
and
and
sbb
outsl
push
aas
loop
nop
or
insb
fiadds
push
loope
test
ret
bound
add
and
xor
jo
lods
mov
pop
iret
push
in
lret
xor
imul
mov
jecxz
das
outsl
mov
sahf
push
and
sbb
outsb
fdivrs
sub
cmp
insb
lcall
loop
pushf
xchg
lock
xchg
or
xchg
dec
xor
fsubr
sbb
mov
repz
sti
movsl
subb
out
ret
inc
or
test
cmpsl
nop
cmp
jnp
and
mov
jle
adc
aaa
adc
movsb
pop
lret
sub
rorl
sub
mov
cmpsl
pop
push
mov
outsb
jbe
add
adc
mov
fmull
sub
pop
stos
icebp
scas
push
lock
inc
pop
sbb
add
push
cmpsl
and
sbb
lds
mov
adc
loope
mov
sub
inc
sub
pop
add
xchg
mov
mov
sub
push
add
mov
mov
add
pop
jmp
rcr
mov
pop
pop
pushf
cld
mov
fidivs
enter
sbb
shrb
adc
sti
pop
daa
xor
movsb
adc
loop
cltd
pop
jns
loope
and
notb
mov
inc
xor
or
xchg
cmp
adc
xchg
jle
aad
mov
add
lods
in
adc
cld
movsl
insl
and
shlb
push
xor
inc
sbb
test
sbb
cmc
mov
and
dec
gs
jne
int
in
fdivr
mov
and
lret
inc
js
jp
xchg
daa
loopne
xor
movsl
into
rcll
jb
test
repz
jle,pn
cmp
sbb
imul
cltd
adc
add
addb
push
call
insl
sbb
fnstsw
and
cli
jo
xchg
sbb
loop
xchg
mov
inc
jb
loope
cs
mov
js
pop
pop
adc
mov
mov
push
sub
mov
push
mov
xchg
in
adc
dec
mov
leave
mov
add
cli
mov
stos
and
adc
pushf
jbe
add
mov
add
xor
sbb
loop
cmpsl
insl
cmp
inc
sbbl
ljmp
adcl
loop
add
shlb
cld
fs
add
std
mov
std
in
rolb
mov
and
pop
and
mov
ret
jmp
nop
psubsb
inc
icebp
lcall
fs
movsl
lods
stos
les
insl
cmp
jg
je
shlb
sti
pop
mov
mov
xor
sbb
jecxz
xor
lods
adc
mov
pop
mov
iret
loop
cmp
mov
add
push
push
shrl
rclb
and
adc
stc
adc
mov
dec
xlat
push
jnp
jge
rcrb
imul
mov
mov
clc
pop
or
sub
and
out
and
mov
push
ficomps
in
insl
add
std
mov
or
sarl
dec
gs
ljmp
imul
andb
loop
arpl
std
jecxz
mov
rclb
mov
mov
jns
pop
add
dec
jnp
idivb
lods
nop
dec
in
lahf
and
or
push
xor
ljmp
add
out
push
loop
xchg
in
mov
ss
andl
push
and
push
pop
fisttpl
or
sbb
cmp
mov
insl
fnsave
aas
xchg
and
loope
subl
dec
xchg
inc
bound
and
lret
xor
gs
xor
pop
jge
or
adc
mov
or
mov
sbb
test
cs
repnz
pop
mov
repz
sub
mov
roll
mov
fs
shl
roll
fstpl
ss
scas
dec
mov
imul
loop
sqrtps
fistl
adc
jae
repnz
rcrl
stos
lods
js
out
or
dec
mov
adc
mov
add
fimuls
imul
and
imul
adc
jge
imul
push
pop
mov
or
jns
imul
test
adc
cmp
pop
addr16
jl
mov
cs
in
pop
sbb
mov
mov
mov
xor
stc
sahf
test
ret
mov
loop
xor
jns
jns
and
ljmp
ss
xlat
popl
or
ret
imul
mov
dec
pushf
sbb
sbb
sub
out
outsb
shll
sub
lods
push
ss
and
enter
jns
jecxz
movsl
inc
xchg
sub
pusha
lds
pop
xchg
mov
mov
cmp
imul
and
adc
add
cmp
cli
mov
pop
mov
in
add
test
cmp
loopnew
cmp
jmp
xor
cltd
sbb
test
mov
cmp
xchg
jp
aaa
jbe
imull
stos
adc
mov
int
xorb
loope
stos
push
sbb
inc
cmp
pop
sub
push
lods
xor
dec
jae
popa
cmp
mov
mov
repnz
mov
mov
popa
dec
jnp
subl
daa
pop
fcmovnu
cmpsb
test
mov
in
cmp
out
fildl
lahf
into
or
mov
sub
fcmovne
cmp
pop
and
test
repnz
cmp
sub
jle
bound
mov
inc
pop
test
cs
and
out
imul
sub
mov
push
iret
adc
or
loope
movsl
xchg
movsl
inc
out
ljmp
xor
xchg
push
in
cmp
gs
mov
loop
lods
mov
jbe
lods
pop
inc
loop
pop
loop
cmc
push
inc
aaa
mov
bound
leave
mov
push
pop
xor
mov
mov
nop
repz
fistl
sub
pop
scas
mov
inc
ds
in
mov
and
cmc
rcll
mov
test
fnsave
outsb
xor
lret
adc
jle
iret
in
fsubs
add
les
push
stos
push
xchg
jnp
mov
imul
loope
mov
in
je
jno
mov
dec
loop
mov
sub
aas
adcb
adc
adc
jmp
push
xchg
loop
xor
stos
out
mov
testb
sub
cmp
nopl
mov
into
std
ss
mov
movsb
ljmp
test
loop
pop
hlt
insl
and
dec
mov
clc
jmp
inc
mov
add
jno
sbb
sbb
xor
or
loop
imul
jae
sahf
in
push
faddp
hlt
fidivrs
cmp
sbb
enter
or
aaa
shr
mov
push
jmp
add
adc
mov
cld
ljmp
cmc
int
inc
add
loop
and
out
jno
push
ss
dec
push
mov
roll
je
cmp
cli
dec
and
and
cmpsb
jg
test
into
xor
or
jb
cmpsl
out
shlb
xchg
dec
insl
cmpsb
mov
add
movsl
fcmovne
pop
loope
pop
movsb
popf
pop
js
add
dec
mov
inc
in
jle
push
xchg
adc
mov
test
fmulp
iret
mov
lods
or
ret
xor
lock
popa
pop
imul
mov
mov
mov
subl
lods
add
je
xchg
jbe
mov
negb
jl
xchg
lods
push
mov
adc
stos
sbb
repnz
sbb
leave
jo
sub
mov
fimull
xor
sbb
jno
daa
mov
loop
add
and
xchg
jl
aaa
xchg
mov
pop
push
sub
js
and
sbb
cmp
adc
out
lea
loop
imul
sub
mov
push
xchg
nop
adc
js
sbb
inc
mov
jno
pop
inc
dec
out
cmpl
flds
in
jl
loop
icebp
inc
adc
sub
inc
imul
roll
push
pop
lods
cmp
adc
in
or
push
jecxz
pop
push
mov
jbe
sbb
aad
mov
jno
inc
xor
xor
xor
xchg
cmc
push
add
xor
daa
popf
fsts
mov
loope
dec
pushf
in
and
mov
dec
test
sbb
pop
repnz
adc
sub
xchg
ss
adc
and
repnz
andb
mov
push
pop
bound
shl
push
inc
mov
mov
jo
inc
imul
loope
mov
add
stc
or
loop
aas
push
shlb
xchg
inc
shrw
sbb
jl
nop
arpl
outsb
sub
fldt
adc
mov
lea
sti
call
xor
dec
lahf
add
int3
in
sbb
sbb
out
pop
cmp
imulb
fs
int3
add
pop
std
lcall
cld
pop
and
mov
adc
adc
mov
and
mov
xor
sub
in
push
push
mov
push
enter
shlb
or
lds
pop
mov
nop
xor
dec
jbe
push
rcl
testb
scas
popa
aas
xchg
mov
jl
shlb
call
adc
and
fstps
dec
in
movsl
out
push
das
mov
ljmp
dec
pop
cmpsl
adc
movl
loope
mov
aad
shll
jecxz
sub
mov
mov
jl
pop
mov
mov
test
add
xor
test
push
fistl
orb
subb
mov
or
jo
in
push
cmp
mov
xorb
divb
lahf
sbb
in
mov
or
mov
sar
inc
out
mov
rcrb
xor
loope
negb
push
fadds
push
mov
fimuls
repnz
loope
andb
mov
mov
mov
and
popf
sbb
mov
subb
sub
cli
adc
nop
dec
mov
mov
loop
inc
xchg
cmp
xor
or
inc
mov
mov
jg
in
sbb
ror
add
inc
outsb
stos
les
dec
ljmp
mov
jp
pop
xchg
lock
call
loop
cmpsb
setne
sti
orl
xor
mov
xchg
jne
pop
das
inc
ds
dec
mov
jge
pop
ljmp
add
or
jbe
jne
pop
xchg
mov
adc
loope
pop
mov
ljmp
jl
out
ror
xor
lock
push
xchg
in
add
pop
aaa
mov
es
loopw
push
bound
cmp
jbe
xor
mov
mov
call
mov
fldt
dec
mov
and
inc
or
mov
pop
adc
xchg
cli
nop
pop
sbb
xchg
inc
fwait
aas
sbb
into
adc
daa
and
fsts
mov
or
js
sarl
cld
dec
popf
mov
and
xchg
or
aam
bound
cld
cmpsl
inc
sub
into
jne
add
test
or
pop
sbb
cmp
sub
mov
pop
loope
push
stos
ss
bound
or
in
stos
xor
push
sbb
sbb
pushf
ljmp
sahf
fwait
mov
js
inc
push
xor
outsb
data16
add
xor
and
or
cwtl
xor
sub
call
in
test
xchg
roll
aam
add
cmpsb
dec
fidivrl
cli
mov
inc
pop
jmp
jl
jo
and
push
dec
leave
pop
loop
mov
fsts
jno
dec
cmp
in
in
movsl
movsl
cld
ret
loopne
loop
push
in
or
imul
jl
push
xchg
cli
sub
add
xchg
insb
or
xchg
pushf
test
push
out
mov
pop
in
into
clc
jnp
out
divb
push
jo
pop
test
sbb
sbb
nop
and
mov
sub
add
dec
dec
imul
daa
rorl
mov
loop
inc
syscall
and
rolb
pop
cli
imul
mov
sub
xchg
mov
loope
mov
sbb
xor
inc
pop
mov
dec
in
mov
cmp
in
push
jns
lock
out
cli
jo
in
push
pop
ds
or
push
cmp
das
sub
inc
movsl
leave
cli
sub
stc
xor
and
cmp
lret
or
loope
mov
adc
mov
cmc
int
dec
xchg
push
hlt
pusha
test
jb
adc
xchg
xor
mov
bnd
pop
out
sub
js
pop
pop
push
xchg
cmp
jmp
cmp
mov
enter
mov
adc
stos
outsl
popf
lds
out
dec
mov
ret
gs
adc
push
sbb
loop
filds
fldl2t
clc
xchg
addr16
cli
dec
adc
dec
daa
imul
lcall
daa
sbb
mov
daa
sbb
jmp
inc
push
inc
mov
into
pop
iret
dec
xchg
pop
or
inc
lahf
call
dec
popa
gs
mov
pushf
xlat
xchg
xor
mov
mov
dec
icebp
mov
ds
js
daa
in
xchg
idiv
sbb
mulb
js
mov
adcl
in
pop
out
xchg
mov
sub
jmp
out
insb
sub
imul
mov
loop
lods
xchg
iret
loope
mov
and
xchg
ret
int
dec
mov
push
je
popa
sbb
shll
mov
test
jecxz
lods
pop
sub
pop
mov
xchg
sbb
or
popf
outsl
mov
das
in
ret
ss
lret
push
pop
sub
fwait
mov
cmpsl
imul
push
pop
sbb
test
xchg
pop
push
add
stos
mov
into
loope
inc
jmp
rolb
in
rcr
add
inc
mov
jp
outsl
into
hlt
shl
cld
faddl
xchg
popa
sub
cmp
adc
xchg
sub
add
ss
repnz
inc
inc
cmp
fdiv
xor
adc
jbe
dec
adc
outsl
push
lcall
shl
in
push
cmpsl
mov
leave
imul
dec
loop
add
scas
dec
pop
or
pop
outsb
adc
daa
enter
in
dec
jmp
aam
loope
cmp
int3
mov
stos
bound
loope
jmp
outsl
lock
into
adc
outsl
sbb
cmp
and
inc
xchg
xor
push
sahf
popa
fwait
loop
push
in
mov
inc
or
xchg
sbb
dec
dec
inc
fstps
push
bound
push
scas
mov
int
outsb
fwait
xchg
push
in
scas
pop
addr16
fs
or
mov
dec
mov
repz
jno
jbe
mov
add
loop
lea
push
push
push
mov
sbb
ja
mov
mov
dec
aam
pop
push
jno
aam
popa
add
jo
shll
iret
sbb
xor
ret
es
add
loope
ss
cmpb
cmp
jmp
xchg
lds
xchg
call
das
in
out
and
sbb
mov
das
or
jbe
imul
sti
sbb
movl
cltd
loope
pop
fs
out
mov
cmp
incl
pusha
andl
lods
dec
movsb
push
sub
stc
add
es
test
imul
into
mov
les
shrl
std
into
mov
jo
inc
adc
out
sbb
out
aaa
push
or
cmp
or
push
pop
xchg
lock
sbb
push
imul
movsb
daa
cs
std
jmp
daa
imul
lcall
cmc
push
imul
repnz
mov
rcr
mov
mov
jl
jo
aad
xchg
adc
xchg
int
adc
dec
cltd
jnp
and
hlt
ret
adc
cmp
add
hlt
cld
test
hlt
addr16
sbb
jbe
mov
cmp
in
cmp
xchg
pusha
nop
sbb
mov
inc
mov
adc
inc
adc
adc
stc
dec
iret
inc
lahf
sbb
subb
jno
out
jne
mov
into
xchg
mov
daa
test
pop
sbb
stc
pop
sbb
mov
push
idivb
and
lock
std
pop
cmc
xchg
mov
cmp
leave
or
repz
ror
mov
stos
jne
int
push
add
int
in
xor
ss
stc
mov
dec
jbe
aad
mov
jp
cltd
sbb
and
iret
lods
jmp
mov
push
pop
aas
call
dec
sbb
mov
out
ljmp
fidivs
movsl
out
movsb
fwait
aaa
shlb
repz
pop
mov
pop
cmpsl
adc
aad
or
pop
adc
push
dec
in
call
das
inc
aad
gs
ss
mov
psrlw
and
imul
repz
dec
xchg
xchg
xlat
out
sahf
jno
lds
sarb
aaa
cli
xchg
pop
cli
imul
mov
add
int
fwait
in
mov
sub
enter
mov
sbb
push
mov
xchg
rol
jge
push
adc
mov
xchg
mov
das
adc
in
adc
xchg
scas
fistpl
clc
loopne
inc
mov
jg
xor
mov
in
sti
push
adc
dec
sub
jo
int
xchg
sbb
mov
mov
sub
movsb
inc
insl
mov
sbb
or
enter
inc
and
mov
sbb
lods
scas
arpl
test
mov
add
das
stos
push
mov
daa
mov
popf
in
adc
pop
pop
aad
les
mov
lcall
hlt
jb
push
push
xor
jns
add
cmpsb
icebp
int
iret
xchg
mov
outsl
sarl
mov
decb
jecxz
xor
pop
cwtl
ficompl
inc
mov
in
negb
sub
iret
rcll
and
loop
je
fstpl
andl
push
push
call
hlt
nop
xchg
stc
mov
dec
mov
jnp
adc
mov
push
into
or
xor
xchg
mov
xchg
and
dec
iret
push
out
mov
clc
fstl
cmp
popf
repz
shrl
jmp
popf
and
mov
sbb
cmp
pop
mov
sarb
out
fisttpll
pop
movsl
scas
mov
sbb
cld
xchg
adc
cmp
jnp
sub
push
clc
cltd
test
pop
push
cmp
push
in
filds
mov
enter
das
mov
loop
lods
into
push
iret
adc
xchg
insl
stos
inc
jp
dec
pop
push
push
jne
or
sub
int
shlb
loope
jno
pop
mov
loope
mov
pop
imul
jp
rcrb
test
cli
sbb
out
fisttps
mov
lods
jmp
sbb
enter
xchg
movsl
loop
shl
jbe
nop
push
sahf
or
std
and
das
sti
sahf
mov
sbbb
xchg
and
xchg
leave
or
cli
xor
sbb
in
or
push
imul
mov
jae
daa
imul
scas
jle
dec
dec
out
call
xchg
shl
add
sti
adc
mov
fstpl
loope
and
mov
adc
les
sbbl
jne
lahf
xchg
lcall
xchg
jecxz
daa
add
sub
fistps
rorl
cmp
sub
adc
rcl
mov
sub
imul
cmc
dec
dec
loopne
push
shl
push
mov
mov
fwait
loope
push
pop
jmp
and
es
xor
dec
gs
dec
pop
ror
fcoml
insl
lahf
and
movsl
mov
or
int
fwait
shll
mov
ficoml
mov
and
mov
or
mov
push
pop
mov
lock
inc
push
rclb
sub
scas
ret
mov
mov
push
test
adc
pop
mov
adc
jno
xchg
movsl
cltd
mov
pop
xor
or
push
or
adc
cmp
or
sbb
xor
nop
hlt
push
or
movsl
sbb
pop
push
sbb
add
cmp
adc
mov
or
push
xor
cmp
mov
or
xor
test
and
mov
inc
and
xor
call
mov
rcrb
sbb
int
mov
std
pop
dec
clc
jge
das
fcompl
stc
mov
push
std
adc
adc
xor
xchg
jns
push
pop
mov
cmp
lret
lcall
jp
sub
mov
jle
into
mov
adc
repz
inc
in
mov
mov
push
adc
stc
arpl
sahf
pop
movsb
sbb
adc
cli
or
fistl
cli
push
inc
pushf
jp
arpl
sahf
ficoml
mul
jnp
inc
out
lock
jl
pusha
test
mov
xor
test
mov
popf
sbb
pop
mov
out
movsb
xor
out
pop
sarl
cmp
cmpsl
xchg
xchg
mov
lcall
and
or
jmp
jge
test
lds
cli
xlat
loope
repnz
pop
pop
jg
or
in
or
xchg
sti
dec
inc
xor
stc
ficomps
xchg
stos
inc
test
mov
pushf
xchg
pop
ret
jb
ds
xor
mov
inc
cmpb
fisttpll
inc
sub
sarl
xchg
in
adc
xor
roll
cs
pop
sub
mov
out
sub
aam
push
inc
push
lret
jle
adc
imul
cmp
push
scas
fimull
icebp
adc
das
xor
outsl
dec
xchg
aam
add
scas
fstl
icebp
cmp
lcall
add
ss
xor
mov
sbb
jo
stc
inc
dec
add
cltd
lret
pop
lcall
xchg
ss
sti
hlt
xor
sub
and
inc
out
iret
shll
repnz
pushf
inc
stc
adc
sub
cmp
and
mov
movsl
jge
ss
rcrb
in
sti
in
aas
mov
xchg
aaa
jl
jbe
inc
fwait
inc
and
out
shlb
jae
lahf
xchg
push
enter
jmp
cmpsb
rolb
and
cmp
mov
add
lcall
jbe
and
push
mov
xchg
sbb
aaa
adc
jmp
mov
stos
scas
arpl
or
and
adc
aas
mov
jne
std
push
in
repz
inc
xorb
jne
inc
ret
jl
mov
adc
rolb
addl
fucomp
mov
and
fisttpl
lds
xchg
xchg
mov
int3
and
ds
movsb
adc
inc
popa
loop
push
or
xor
mov
or
cmp
push
in
mov
imul
xchg
xchg
mov
scas
lock
lods
mov
and
notb
lds
inc
cmc
push
decb
das
loop
add
outsl
or
rol
push
iret
mov
add
loop
xorl
in
mov
pop
inc
dec
lcall
or
cmp
mov
outsb
pusha
loop
loope
insl
sub
cltd
or
or
das
cmp
cltd
and
sub
dec
loop
xchg
add
jl
push
insb
cltd
data16
in
lds
mov
std
sti
nop
fimuls
xchg
insb
lcall
or
out
ret
xor
loope
push
push
loop
xchg
inc
lods
mov
dec
sbb
iret
cwtl
pop
xor
aaa
xor
pop
lods
stos
add
imul
dec
push
fisubs
lret
loop
mov
mov
xor
push
push
in
in
imulb
sbb
bt
push
xchg
push
shl
push
aad
sub
or
sahf
cmc
inc
cmc
out
jns
subl
mov
inc
jb
mov
rol
inc
ss
inc
in
dec
lcall
sbb
aaa
sub
cmpps
xchg
mov
imul
les
pushf
cwtl
enter
mov
mov
jno
jmp
and
roll
sub
xor
sub
pop
mov
out
cmp
stc
scas
popa
inc
xor
test
cmp
ret
addr16
add
mov
or
adc
add
clc
scas
lods
out
adc
push
mov
sbbb
lods
sub
mov
rclb
ds
adc
mov
push
insb
jns
sub
movsl
scas
cmpsb
jp
popa
das
sbb
cmp
inc
js
sbb
rcrb
inc
fisttpll
ficoml
daa
sub
ret
ret
ret
xor
out
push
scas
mov
cmpsb
out
or
lds
lock
cmp
adc
jmp
jmp
xchg
jns
mov
sbb
mov
loope
sahf
sbb
and
int3
sbb
jle
adc
fnstenv
popf
out
and
daa
push
push
and
inc
push
push
cmp
jno
loop
lret
pushf
mov
aas
mov
lods
xchg
out
or
xor
inc
add
xor
clc
outsb
cld
adc
int
rcrl
mov
pop
movlps
jno
in
jbe
or
jp
fsubp
inc
inc
xchg
popf
mov
jl
loop
push
std
cmp
sub
jle
loop
shlb
mov
sbb
arpl
mov
in
jge
pop
mov
popf
sub
pop
std
mov
daa
ss
rcll
push
cmpsl
mov
and
pop
cltd
push
or
mov
or
mov
in
scas
adc
out
inc
sarb
iret
mov
cmp
and
shll
push
scas
in
push
movsb
sbb
hlt
test
ficoms
sub
mov
xor
mov
leave
or
loop
adc
or
int
sbb
push
push
shll
shrl
in
mov
xchg
test
mov
xor
push
leave
xlat
cmpsl
adc
jle
mov
popa
shlb
loop
jno
popf
inc
lods
sbb
in
je
stos
push
je
push
sbb
fcoms
mov
and
push
sbb
pop
cmpb
loop
rcll
and
aaa
xchg
sub
hlt
pop
in
mov
sbb
adc
dec
shrb
inc
int3
xor
jl
rolb
rcrb
cmpsl
loop
cmpsl
mov
push
in
popa
pop
dec
mov
dec
inc
andl
in
mov
les
pop
ret
imul
xor
test
dec
push
push
adc
xchg
out
xchg
cmpb
xchg
jl
das
sbb
dec
xchg
or
andl
and
sbb
xor
push
imul
mov
ret
ficomps
call
jnp
insl
xchg
fcompl
stos
xor
cmp
lcall
fs
add
ss
repnz
cli
xchg
xchg
xchg
inc
dec
out
jae
push
sub
das
cmp
or
inc
sub
rcrb
sub
out
pop
setbe
shl
in
mov
int
call
aam
clc
insl
pop
in
pushf
fldenv
push
push
pop
call
add
out
adc
fisubs
loop
cli
loopne
sub
and
cmp
push
daa
xor
int3
lcall
lds
jp
loope
mov
pop
push
xor
cmpsl
shrl
mov
mov
push
jmp
jecxz
jno
dec
in
push
sub
call
int
add
mov
or
inc
icebp
stos
jae
sub
add
adc
sub
icebp
in
nop
pop
add
adc
pop
cmp
dec
pop
push
icebp
int
ljmp
xchg
cmpb
inc
adc
call
in
add
xor
ljmp
jae
xor
fnstenv
mov
aaa
and
and
das
les
jp
cmp
sub
xchg
and
fs
add
add
jle
mov
sbb
xlat
movsl
inc
jo
cmc
inc
mov
sub
inc
push
std
jns
out
out
and
in
inc
cmpsl
jnp
jnp
mov
cmp
mov
pop
xor
ljmp
push
into
sub
jge
jmp
mov
sarl
mov
aas
mov
xchg
mov
cs
addr16
jo
ljmp
ret
xchg
pop
cmp
cli
push
adc
or
imul
or
ss
ljmp
cmp
sti
jne
shrb
rep
push
sbb
es
sarb
inc
xchg
mov
int
and
in
les
icebp
cmp
jae
sub
cld
test
add
mov
mov
aad
imul
xchg
ret
lret
add
push
enter
cmpsl
jo
mov
cmp
pushf
aaa
popf
mov
in
loop,pt
int
inc
sub
pop
outsl
mov
imul
mov
pop
inc
mov
mov
dec
out
loop
loop
iret
sub
mov
int3
add
fwait
mov
mov
and
inc
sub
sbb
lds
pop
inc
lcall
int3
add
jecxz
mov
or
pusha
arpl
mov
xchg
xchg
movsb
loop
loope
loope
leave
mov
mov
sbb
cld
call
mov
xchg
or
test
jge
add
repz
add
iret
pop
data16
rcll
aas
push
or
movsl
push
xabort
shl
data16
push
nop
shrd
outsl
xor
sbb
and
xor
xchg
jp
push
in
xchg
jno
xchg
adc
test
imul
cltd
bound
mov
iret
mull
orb
mov
fisttps
add
into
push
xor
mov
jmp
fcmovnb
xchg
add
mov
xchg
add
add
mov
sti
jno
push
rorb
sti
jo
fildll
and
xchg
add
mov
lods
loope
mov
dec
in
fcoml
xor
mov
sbb
fstl
mov
aaa
xlat
sbb
adc
je
mov
nop
adc
sbb
push
loope
dec
rcrl
adc
inc
sti
mov
inc
dec
push
shl
sbb
mov
ss
sbb
sbb
adc
inc
cltd
sbb
sbb
mov
repz
jecxz
cmpsl
or
std
sbb
push
sub
push
loope
pusha
out
filds
xchg
mov
ret
adc
movsl
dec
popf
mov
or
loop
loope
mov
adc
xchg
xlat
jl
xor
fstpt
mov
xchg
push
adcl
push
jle
adc
mov
les
xlat
and
dec
sbb
xor
pusha
inc
test
dec
aas
out
jbe
outsl
iret
mov
rcl
adc
imul
sahf
fstps
lock
nop
daa
sub
jb
rorb
mov
adc
pop
jle,pt
ljmp
imul
mov
mov
sbb
lret
mov
cld
popa
aaa
in
dec
jae
cmp
and
and
sbb
add
jbe
mov
in
sbb
add
jbe
ficompl
or
leave
dec
ds
inc
nop
jns
loop
lcall
pushf
xor
aas
es
les
in
ljmp
jb
stc
inc
daa
int3
bound
scas
jno
cltd
jno
rclb
xor
imul
push
mov
adc
or
cwtl
push
inc
loop
mov
or
jp
adc
xchg
and
lods
flds
jne
std
loop
push
xchg
test
push
in
dec
std
adc
les
inc
sub
add
dec
shl
cwtl
fsubrl
sahf
into
pop
lods
dec
out
mov
pop
mov
xchg
loop,pn
js
icebp
xor
test
jns
andw
xchg
les
nop
xchg
mov
and
shr
into
dec
pop
inc
in
fimull
mov
cltd
mov
std
push
push
lock
pop
sbb
das
inc
jl
inc
mov
sbb
shlb
pop
mov
ror
mov
pushf
and
xor
je
or
out
jmp
je
ds
mov
add
mov
pop
call
xor
mov
mov
adc
push
push
scas
mov
mov
add
mov
pop
mov
ss
cli
fiaddl
cmp
imul
xor
jle
sub
xor
jns
cltd
aaa
in
es
inc
loopne
mov
mov
fdivrl
add
mov
mov
xchg
loop
add
cmp
lahf
sub
and
or
or
mov
push
cwtl
add
mov
push
mov
nop
jecxz
xchg
cmp
cltd
sbb
push
repnz
xchg
sti
in
insl
sbb
nop
aas
sub
and
mov
push
mov
inc
and
cmp
in
push
inc
sub
aas
lock
push
std
cmp
mov
out
cmp
ja
data16
fld
cmpsl
mov
shrb
or
sbb
arpl
movsb
adc
pop
add
frstor
insl
popa
push
push
stc
into
cmp
in
jmp
mov
cmpl
jge
jle
int
das
imul
dec
mov
loop
roll
mov
add
in
jae
fistpll
rcrb
test
inc
fsubrs
scas
and
push
mov
data16
int
mov
pop
cwtl
inc
and
stos
sub
adc
pop
adc
jle
xchg
shr
loop
sub
rcr
pop
sub
jmp
mov
sub
std
cmp
dec
push
sarb
jb
jle
inc
and
mov
adc
movsl
ja
cmp
mov
mov
pop
xchg
xor
push
mov
and
sub
inc
dec
nop
leave
push
xchg
sub
inc
sti
jae
bound
xor
mov
mov
loope
je
daa
daa
loop
insb
fldenv
dec
mov
push
leave
aas
rcrb
cmpsl
mov
adc
sub
or
inc
push
xchg
mov
insl
adcb
and
lret
das
xor
int
mov
inc
adc
sub
popf
pop
xchg
push
add
sbb
in
dec
insl
or
mov
mov
mov
dec
fildl
push
add
in
jge
mov
mov
aas
adc
fs
mov
jno
nop
add
inc
cmpsl
cmp
mulb
gs
outsb
loope
cltd
pop
js
dec
inc
cld
xor
mov
mov
jo
push
sbb
fldt
xchg
inc
loope
pop
or
enter
jle
jl
add
cmpsb
cmp
dec
fst
mov
or
mov
pop
fwait
jmp
xchg
aad
inc
scas
out
add
lret
repz
stc
ror
mov
repnz
cld
or
js
xchg
and
leave
adc
xchg
in
mov
sub
lret
frstor
fistpll
sbb
imul
fnstenv
or
cmp
add
fs
lock
int
push
mov
inc
sbb
mov
mov
insb
loop
les
loop
add
sub
and
or
dec
std
pop
mov
fistpll
in
push
pop
adc
lds
sub
cmp
stos
inc
and
mov
add
mov
popa
daa
das
es
pop
lret
in
data16
fcompl
rorl
inc
loop
xchg
aam
and
mov
dec
stos
jbe
daa
aas
les
cmc
mov
jb
xor
xchg
movsl
fnsave
mov
xor
xchg
shlb
inc
sarl
ss
mov
loope
push
sbb
xlat
push
adc
mov
out
repnz
inc
test
xchg
nop
jns
xchg
jle
loop
out
cld
sub
aaa
xor
icebp
jb
lock
ss
push
ds
mov
fs
and
sbb
cmc
cwtl
inc
mov
mov
ss
lds
int
sti
add
pop
shld
roll
dec
mov
pop
cmp
ja
xchg
out
in
pusha
xor
divb
sub
adc
shrl
hlt
out
lea
mov
mov
xor
jmp
mov
repnz
jno
insl
nop
fdivrl
add
rcl
cmp
inc
xchg
xchg
adc
mov
adcl
sbb
inc
jbe
pop
add
pcmpgtb
ds
mov
pushaw
pop
mov
rcrb
lods
pop
sbb
mov
push
imul
fidivrl
push
andb
stos
mov
mov
in
xor
in
add
andb
jmp
cmp
imul
push
lods
xor
dec
aas
dec
stc
dec
aad
out
mov
movsb
aad
int3
sahf
testl
cmp
repz
dec
and
imul
xchg
loope
adc
lds
cmpsl
mov
nop
cmp
imul
mov
pop
int
rorl
mov
pop
mov
test
or
mov
in
mov
push
sub
ret
pop
jle
rcrb
push
aas
jecxz
or
xchg
imul
or
pushf
inc
in
pop
mov
shrl
out
lret
test
sub
mov
lret
inc
or
rcrb
loope
call
sub
dec
cmpb
dec
adc
add
pop
adc
dec
popl
cmp
push
sub
stc
add
in
xor
outsb
jo
xchg
jns
mov
andl
cmc
insl
mov
aaa
loop
out
cltd
add
adc
icebp
dec
mov
cmpsb
aaa
imul
lea
and
pop
scas
movsl
jno
or
sub
push
add
sbb
and
test
sahf
xor
incl
pop
es
out
out
mov
xchg
jno
pushf
xchg
in
out
das
std
insb
and
nop
sub
jno
arpl
cmp
loope
movsb
orb
or
sbb
mov
cmp
pusha
jp
xchg
fs
orl
lods
cmp
inc
not
mov
pop
dec
or
cmpsl
loop
sbb
mov
dec
add
and
stos
xor
pushf
test
das
lods
xor
adc
sbb
out
mov
sbb
xchg
add
xchg
stos
add
clc
and
inc
mov
mov
and
rcrl
jb
loope
les
lahf
sbbb
daa
mov
dec
mov
iret
lods
ljmp
push
sahf
mov
mul
in
movsb
xchg
sbb
xorb
or
push
mov
lds
in
mov
xor
mov
repnz
and
repz
sbb
adc
jle
pop
ljmp
loop
push
mov
add
or
or
lret
ret
lret
cmp
popf
aas
xor
lds
push
imul
iret
in
cmp
daa
xchg
shl
mov
lods
jge
xor
sub
mov
pop
nop
mov
pop
sbb
inc
fistpl
xor
add
int3
add
popf
stc
divb
outsb
inc
and
push
push
sarl
movsb
neg
aaa
test
jne
cwtl
adc
test
mov
mov
dec
arpl
repz
add
lds
add
es
pop
sub
ljmp
mov
sahf
xor
cld
sti
mov
scas
pop
xchg
aas
adc
out
jmp
jo
push
mov
out
into
out
xchg
aas
xor
mov
shrl
pop
test
mov
loop
mov
cwtl
sub
popa
cmpb
mov
in
adc
cltd
call
aas
int
fwait
repnz
enter
addr16
lea
and
adc
cmp
mov
adc
repnz
push
in
adcb
test
jp
scas
push
jbe
movsl
xchg
loope
jmp
adc
je
jmp
in
repnz
adc
popf
push
mov
mov
int
outsb
mov
loop
xor
nop
mov
pop
loope
mov
mov
or
out
cltd
repnz
popf
into
inc
in
std
fcmovb
inc
pop
inc
loop
in
lods
aam
pop
push
ljmp
rcrl
or
iret
rorl
sbb
sub
sbb
push
push
and
daa
sbb
xchg
xchg
sahf
xor
mov
test
fucom
jae
outsl
dec
and
in
adc
in
pusha
xor
out
cmp
xchg
fadds
push
add
mov
out
mov
test
call
gs
mov
lock
cmpsb
in
cmpsl
inc
call
inc
dec
xchg
or
ljmp
int3
sbb
loope
aaa
pop
shlb
orb
loope
cmp
jno
js
sbb
sub
jbe
daa
loop
inc
or
imul
push
std
xor
mov
mov
je
mov
mov
test
sti
in
sbb
inc
mov
pop
movsl
add
adc
mov
gs
xor
sbb
and
mov
mov
cli
or
leave
stc
cmpsb
jo
sbb
mov
ljmp
pop
pop
sbb
xchg
rcrl
clc
loopne
clc
jg
pop
in
hlt
or
cwtl
jl
dec
adc
jno
in
pop
ss
sarl
lret
outsl
cltd
loop
xchg
adc
sub
notl
movsl
cmp
jp
fistl
in
in
sarl
cmc
pop
insl
lds
loopne
sbb
mov
push
jbe
mov
lds
jb
imul
cmp
adc
loope
or
pop
leave
fmuls
sarl
jmp
add
sub
shl
sbb
out
inc
mov
arpl
mov
mov
inc
xorb
into
cs
cmp
ljmp
xor
jecxz
pop
sub
lcall
shrl
je
adc
mov
dec
sub
xor
sub
dec
es
adc
ret
and
mov
fnsave
dec
loopne
ret
cltd
pop
insb
mov
adc
cs
popf
iret
pushf
cmp
sbb
sti
or
cmc
xchg
mov
stos
mov
sub
mov
mov
add
mov
and
pusha
sbb
xlat
rolb
pop
scas
mov
xchg
outsl
adc
orl
loop
mov
xchg
decl
fdivrl
xor
repz
mov
int3
cmpsl
mov
sbb
les
daa
dec
or
ja
popf
mov
dec
pop
mov
adc
mov
das
xchg
call
mov
sahf
jmp
add
loope
aaa
test
jg
loop
adc
in
icebp
xchg
mov
cli
push
nop
dec
ficomps
pop
hlt
xchg
stc
pop
dec
movsb
in
mov
inc
xor
ret
sub
out
fiaddl
mov
cmp
in
icebp
subb
and
pop
push
xchg
loop
or
int3
in
icebp
sbb
jecxz
add
loopne
jb
pop
and
or
and
mov
push
bnd
adc
imul
add
sarl
rolb
imul
lret
mov
sbb
lods
mov
jle
insl
shl
mov
adc
mov
jg
pop
pop
std
mov
dec
xchg
ss
xor
pop
in
sbb
das
inc
mov
mov
sub
inc
insl
push
mov
leave
int
insb
fmuls
es
lea
and
add
gs
jp
xor
daa
jp
daa
iret
push
in
jnp
lcall
xorb
dec
mov
daa
fnstcw
imul
loope
adc
in
push
xchg
mov
xor
inc
push
push
lds
xorl
shlb
xor
xchg
incb
popf
or
nop
and
dec
fiadds
adc
mov
or
pop
or
into
loope
add
cmpsb
mov
xchg
insb
xchg
sub
lock
rcl
movsl
jo
and
outsl
cmc
pop
adc
aas
outsl
daa
test
xor
scas
adc
aaa
mov
add
add
scas
mov
loop
jmp
or
aaa
popa
ret
gs
mov
imul
insl
icebp
jge
pop
dec
xor
pop
sti
iret
push
xlat
pop
and
lods
ss
cs
out
pop
lret
lds
jmp
or
xchg
mov
cmp
popa
std
out
xor
add
xchg
in
sub
adc
push
and
jb
jle
and
ret
imul
sbb
jno
mov
xchg
and
icebp
int
sub
fs
test
out
xor
enter
sbb
loop
loop
cmp
scas
ret
pop
icebp
mov
xor
mov
aam
xchg
pop
out
adc
push
xchg
ret
mulb
sbb
call
bnd
pop
mov
mov
xor
push
ss
xor
fidivrl
pop
dec
xor
jle
aad
dec
jbe
lret
jle
rclb
xor
pop
push
push
and
test
add
adc
loope
fdivr
in
mov
leave
ds
iret
insl
push
out
cld
cmc
or
aad
mov
aas
xorb
out
and
sbb
sqrtps
push
loop
mov
push
and
and
and
add
mov
dec
in
or
sbb
mov
iret
or
push
jb
cwtl
sub
jl
xor
xchg
subb
add
fldl2e
add
movsl
or
xchg
data16
pop
xchg
cmp
ljmp
push
test
xor
dec
roll
jno
adc
push
xor
pop
std
arpl
ret
imul
imul
inc
repz
mov
xlat
jp
sti
nop
xor
jle
add
and
xchg
pop
xchg
ret
add
ret
mov
hlt
es
es
gs
sub
push
dec
insl
jle
test
arpl
call
test
cmp
dec
lret
jmp
pushf
aaa
lea
adc
loope
dec
loop
aas
in
mov
in
addr16
nop
jo
test
jns
test
sub
loop
lock
mov
shrb
stos
movsl
mov
bound
movsb
daa
xchg
aaa
rorl
or
les
cli
adc
in
fisttpll
insl
fistps
cmp
in
jmp
sub
lret
and
sahf
dec
pop
mov
aas
cld
insl
sub
add
or
jbe
ljmp
and
lret
fstps
mov
sbb
movsl
adc
xchg
sbb
outsl
out
inc
lods
jb
les
test
sbb
loop
repnz
jno
mov
shl
popa
mov
xchg
push
loop
pop
or
arpl
push
mov
testl
adc
mov
cmp
or
pop
dec
sub
inc
mov
cld
add
mov
push
movsb
jne
imul
cmp
dec
jne
mov
lds
fwait
jbe
xor
sbb
inc
cmpsl
mov
mov
icebp
inc
jle
mov
or
loope
and
lcall
stos
lock
movsl
nop
add
or
adc
leave
rclb
xor
jbe
push
lret
iret
push
addr16
push
js
add
std
shrl
mov
aaa
push
adc
mov
pop
out
mov
dec
xor
mov
cmpsl
orb
push
shlb
mov
mov
aas
and
push
push
loopne
cmp
add
xor
loop
mov
dec
cmp
mov
or
jnp
pop
shll
pop
mov
sbb
fsubrs
inc
in
push
in
test
dec
icebp
lret
popf
adc
push
ss
jl
aam
sub
xor
sub
aad
dec
cmp
sub
fcmovnu
add
dec
lret
jae
in
daa
mov
cmp
lock
loop
movsb
or
push
xchg
cmp
jmp
loope
jae
shrb
mov
and
mov
rcrb
lea
imul
sbb
or
dec
pop
mov
das
lods
ljmp
xchg
xchg
ja
cmp
pop
lods
sbb
or
adc
and
shll
mov
dec
sbb
jnp
cld
sbb
in
and
xor
push
mov
sbb
cltd
add
push
cmp
dec
xorb
ja
repnz
or
push
ficoml
dec
cmp
lcall
cmc
notl
xlat
loope
leave
jbe
call
adc
loope
aaa
shll
fwait
push
nop
movsb
andb
cmp
loop
ljmp
and
stos
xor
jmp
fstpt
jge
or
adc
inc
out
mov
pop
outsb
sbb
mov
call
adc
mov
call
mov
pop
sub
push
bound
fisttpl
xor
cs
lret
cmp
xchg
xor
push
mov
icebp
sub
and
jecxz
sub
iret
fiaddl
add
outsl
and
push
mov
push
les
stc
int3
adc
cwtl
push
sahf
iret
mov
imulb
adc
loope
test
aas
shl
lods
push
jno
loope
js
cmc
adc
and
es
or
gs
xor
outsb
adc
cmp
add
xor
xchg
add
xor
pop
xor
pop
mov
fs
ss
push
gs
cmp
pop
jge
xor
cltd
sbb
mov
jmp
xchg
int
and
xlat
xchg
movsb
ret
push
cmp
adc
sahf
jp
pop
pop
inc
cmpsl
pushf
mov
sbbb
subb
in
push
iret
push
add
push
mulb
adc
cmp
lret
add
mov
push
xchg
adc
fistpll
push
or
aas
dec
loope
add
shl
pop
pop
xchg
das
movb
mov
xchg
je
cmp
pop
dec
add
stc
sbb
push
xor
into
jno
pop
inc
out
sbb
lods
adc
sub
sbb
mov
sbb
sbb
fsubrs
push
popf
test
pop
loop
icebp
mov
fstl
in
test
pop
xchg
add
dec
jno
sbbb
loop
and
stos
pop
and
arpl
iret
xchg
adcw
gs
jl
sub
ljmp
push
and
out
fistps
ja
lock
dec
sbb
mov
addr16
pop
cmpsl
out
movsb
lret
or
jne
xor
pop
aad
hlt
iret
mov
iret
cltd
push
cmp
mov
loop
out
push
test
and
aaa
pop
fistps
aaa
ss
pop
lahf
cmp
in
or
mov
fwait
dec
nop
ret
cs
jl
cs
es
adc
mov
nop
lods
jae
xchg
sti
hlt
sbb
in
cli
cwtl
cmp
pop
and
sub
pop
xor
adc
mov
jb
or
sub
out
fs
cltd
flds
xchg
sub
in
mov
int3
cmpsb
fistps
xchg
adc
xor
xchg
jne
std
or
mov
mov
pop
jno
sbb
shll
inc
lds
repnz
iret
dec
outsb
push
cli
in
mov
cwtl
jnp
xchg
xchg
cmp
stos
gs
xor
inc
and
adc
dec
dec
xor
stos
mov
test
aas
sub
outsb
sbb
mov
inc
adc
sub
or
pop
xor
mov
sahf
or
mov
mov
mov
push
loop
ds
mov
shll
pop
repz
bound
clc
cmp
pop
lret
dec
inc
inc
adc
cli
mov
push
ja
cmp
xor
dec
aaa
aad
lock
push
xchg
insl
mov
in
xchg
dec
xchg
das
sbb
stos
gs
fwait
mov
pop
mov
sub
lahf
mov
jecxz
xchg
shrl
enter
adc
push
out
repnz
mov
inc
push
mov
sbb
adc
roll
loopne
push
mov
sbbl
scas
nop
shrl
xchg
xchg
cmp
pop
jmp
xchg
sub
mov
gs
in
jnp
into
adc
mov
arpl
daa
mov
test
out
insb
ja
add
push
push
xchg
mov
xor
lcall
xor
repz
sub
cld
add
aaa
bound
loope
stos
mov
push
mov
adcl
movsb
jge
or
aam
mulb
jg
xchg
and
sti
cli
push
fwait
cmp
xor
mov
mov
sbb
mov
jb
xor
adc
imulb
mov
mov
test
dec
icebp
jo
jmp
sub
cwtl
pop
add
shrl
mov
insb
inc
sbb
push
negl
faddl
pop
cmp
mov
mov
ljmp
pop
daa
les
and
or
negb
stc
data16
or
add
and
jne
lea
xchg
push
cli
mov
sbb
popa
repnz
adc
scas
jg
in
stc
loope
outsb
sti
mov
or
xchg
es
call
mov
jbe
aaa
enter
out
xchg
add
push
cmp
sub
push
clc
mov
sub
lods
cs
ljmp
and
inc
ss
adc
xor
cmp
stos
dec
gs
pop
mov
mov
lret
aad
xor
push
mov
rolb
xchg
ss
mov
sub
stc
cmp
mov
ret
and
cmp
xchg
addr16
pop
fnstenv
xchg
xor
mov
outsl
rcr
sub
in
aaa
ss
or
push
mov
cltd
call
sbb
imul
mov
inc
or
repnz
ss
xor
pop
xlat
repz
out
jbe
iret
aaa
xor
out
lods
xchg
addr16
aaa
and
pop
es
and
mov
ret
pop
and
aad
mull
rcr
insl
sbb
dec
mov
shll
aam
cmp
in
out
lea
mov
xchg
sbb
and
idivl
sbb
push
or
lea
sahf
and
sub
dec
call
repz
icebp
loop
loope
cmp
lock
outsl
mov
jo
nop
aas
lret
outsl
xchg
sub
mov
mov
aas
jb
dec
rcll
pop
aad
pop
rol
sub
iret
ss
cmpsl
lods
cmp
test
inc
out
adcl
nop
arpl
and
push
pushf
dec
push
xor
pusha
in
ret
inc
sbbl
popf
pop
cmp
xorb
jmp
xor
cmp
ret
mov
nop
or
mov
mov
pop
inc
int3
orb
cmp
fisubrs
push
push
lahf
jno
and
jmp
xchg
popf
mov
repnz
xchg
sub
inc
pushf
addr16
jecxz
rolb
or
cmp
cmc
push
xchg
pop
xlat
jb
or
pop
push
seto
aas
roll
mov
clc
cs
xchg
mov
push
iret
cli
jg
shll
leave
adc
push
daa
cwtl
out
xor
xchg
loope
sbb
inc
jno
push
pop
xchg
lcall
xchg
inc
jae
pushf
aaa
inc
shlb
fs
gs
jecxz
test
pop
mov
leave
sbb
or
leave
add
outsb
fnstenv
xchg
push
xor
stc
and
jnp,pt
ret
cli
stos
pop
lcall
cmp
cs
test
mov
inc
das
pop
in
inc
pop
ljmp
jmp
orl
ljmp
in
cld
ds
pop
push
jg
imul
stos
cld
test
push
subl
movsb
movsl
jno
ret
nop
ljmp
push
adc
inc
nop
or
mov
cmp
mov
mov
lods
loop
shlb
sarb
xchg
incl
mov
js
push
das
push
xor
in
stos
das
mov
xor
enter
dec
mov
and
jae
pop
xchg
xor
mov
jo
xor
mov
jae
cli
stos
jge
addr16
pop
lock
pusha
push
frstor
arpl
dec
mov
shl
popf
inc
mov
ss
adc
in
mov
xorb
xor
rorl
lahf
fsubrs
in
inc
movsl
dec
push
in
cmp
inc
adc
loope
aad
sbb
cltd
ss
aas
lds
fucomip
rclb
cltd
mov
sbb
mov
mov
cwtl
inc
inc
dec
cmpsb
push
lret
add
adc
loope
mov
sub
jns
leave
test
mov
ret
push
and
jbe
jl
loope
sub
xor
nop
daa
das
sbb
mov
mov
adc
sub
test
fdivr
pop
push
mov
mov
loopne
adc
loope
xor
adc
pop
mov
xor
shll
loope
inc
dec
pop
mov
mov
adc
cmc
sub
repz
xor
outsb
sub
xlat
call
jo
pop
daa
out
out
mov
push
lds
imul
sbb
mov
mov
ljmp
jns
sbb
jo
cltd
cmp
shrl
sub
push
in
or
popf
or
mov
loop
lds
pushl
mov
faddl
xor
das
sbb
and
push
stc
fwait
push
ret
sarb
lods
and
imulb
add
mov
pop
lret
loope
divl
aaa
movsl
sub
xchg
imul
cmp
in
cltd
or
mov
and
pop
pop
pop
outsb
rcrb
mov
fwait
lcall
pop
ss
movsb
gs
xor
or
in
scas
or
sti
xchg
aam
adc
in
sub
sar
inc
xchg
inc
sbb
cmp
in
inc
jne
inc
mov
daa
dec
or
ret
mov
in
or
sub
jne
dec
xchg
pop
mov
imull
cmp
jmp
jns
call
lock
pop
adc
in
leave
mov
test
push
std
inc
dec
rcrl
mov
xchg
jge
mov
and
cmpsb
sar
ffree
aas
loop
shr
pop
rdmsr
in
and
xor
push
imull
loopne
movsl
aaa
mov
xor
pop
int
inc
sbb
rclb
sub
xchg
mov
and
lods
xlat
test
lret
movsb
std
enter
ret
icebp
subb
shlb
sbbb
sub
loope
jecxz
mov
fidivrl
and
xor
lock
or
adc
ret
mov
movl
mul
jne
and
add
dec
adc
bound
jae
and
fld
adc
aaa
jg
push
gs
lcall
in
repnz
scas
sub
xchg
inc
test
rcrl
cmp
andb
lods
das
imul
xor
pop
xor
and
mov
push
loope
ss
jae
dec
dec
arpl
and
pop
xchg
mov
and
add
aaa
jne
pop
xor
out
xor
adc
mov
dec
mov
xor
pop
lods
jg
cmpsl
lahf
dec
or
mov
aaa
in
je
out
bound
cmp
cmp
pop
popf
mov
aam
cld
add
daa
dec
int
pop
bswap
sbb
pop
imul
repnz
pop
inc
lcall
mov
jo
add
lahf
loope
pushl
into
mov
rcr
xchg
frstor
jne
in
insl
aad
cmpsl
stc
push
adc
xorb
ret
mov
shrb
dec
fucom
adc
rolb
test
fistpl
int
fsubr
loopne
test
icebp
mov
jl
xor
and
adcl
sbb
push
sbb
leave
dec
ljmp
cli
mov
or
lea
rol
jbe
movsb
mov
xor
lret
int
xchg
xor
call
inc
push
xchg
push
daa
ja
mov
insl
dec
mov
xchg
xor
flds
test
iret
xor
mov
cmpsb
inc
xor
dec
add
pop
sti
sbb
shlb
popa
sub
bnd
mov
ljmp
sub
jb
mov
xchg
bound
cmp
jno
mov
mov
cmp
and
dec
dec
lret
or
repz
scas
jb
loop
lds
cmpsl
push
ljmp
xchg
roll
cltd
std
loope
out
xchg
pop
inc
xor
and
andl
jp
fs
jae
rorb
lods
xchg
cltd
loope
jo
adc
mov
and
xchg
and
cli
xor
push
jp
in
stc
pop
hlt
and
adc
sti
cltd
mov
mov
aaa
sahf
and
lcall
enter
xor
fistpl
cmpsl
sbb
and
lock
cmp
adc
xchg
out
jecxz
shlb
jmp
add
sbb
scas
jle
aaa
out
ret
ja
inc
pop
fsubl
mov
and
insl
jno
clc
pushf
dec
pop
add
subl
cmp
test
or
outsl
ds
int
and
xor
lret
sti
insl
popf
dec
lret
jno
dec
dec
sar
cmp
mov
xchg
aad
fnstenv
int3
in
aas
cld
sub
mov
out
push
pop
mov
inc
in
stc
lods
xchg
sbb
repz
mov
movsl
in
inc
xchg
push
push
sbb
sub
shrl
aam
pop
add
bound
mov
fwait
lahf
imul
aad
xor
lahf
and
or
cmp
pop
sbb
movsl
rorl
insb
rorl
cmovge
cmpsb
movsb
inc
loop
mov
daa
jnp
hlt
xchg
mov
inc
mov
cmpsl
xchg
fldl
fsubl
in
xor
mov
sub
sahf
jns
aam
cmp
mov
push
mov
decl
lds
in
ss
sub
scas
vmwrite
fwait
dec
inc
inc
pop
push
adc
sub
add
dec
jns
andb
push
cltd
mov
daa
cmp
out
cmp
nop
adc
fisubrl
loop
jp
jmp
and
iret
pusha
pop
pop
xchg
push
subb
sti
loop
cmpsb
and
sti
mov
add
sub
cs
testl
jo
add
out
mov
lds
ret
dec
push
xchg
or
mov
dec
push
sub
adc
fildl
mov
pop
add
dec
mov
fisttpl
pop
loop
imul
push
lods
mov
inc
sbb
loope
das
sub
js
lock
and
fists
cmpsb
sbb
les
xchg
icebp
sub
in
dec
pop
ljmp
adc
jle
xchg
inc
loop
lods
stos
sub
fidivs
mov
or
and
jge
mov
lods
mov
pop
jns
sbb
lea
loop
pushf
xchg
dec
movsb
in
pop
adc
xchg
and
xor
fstps
adc
pop
mov
rclb
daa
jnp
cmp
test
out
jns
fdivrs
push
orb
push
cmp
and
mov
call
out
ds
sub
push
repz
add
adc
in
cmpsb
gs
scas
sbb
jl
cmp
sub
lods
test
pop
out
xor
lds
int
call
xor
xor
cmp
add
imul
cld
je
pop
add
cmp
inc
add
jb
das
cmp
and
xchg
cmp
mov
push
or
push
sub
xchg
nop
xor
sbb
mov
push
and
cmp
ret
mov
pop
and
sbb
mov
cwtl
pop
mov
sbb
movb
pushf
cmpsl
sarb
push
sub
pushw
push
adc
mov
pop
dec
insl
sub
outsl
or
stc
call
stc
outsl
loop
notb
adc
mov
arpl
mov
jnp
ljmp
mov
inc
shl
jne
xchg
pusha
mov
push
idivb
and
call
sbb
pop
out
mov
mov
sti
lods
sbbl
loope
fisubrs
xor
hlt
adc
ror
mov
nop
cltd
std
adc
inc
inc
xor
sub
jmp
pop
les
out
push
cmpsb
or
fsubrs
push
mov
jmp
call
in
mov
xor
pop
adc
mov
mov
in
xor
aas
das
mov
fldenv
imul
mov
jno
sbb
inc
xor
or
xchg
adc
dec
xchg
stos
or
and
jno
aaa
fcoml
les
jo
addr16
or
dec
adcl
sbbl
pop
xchg
mov
daa
adc
pop
pop
gs
mov
rcpps
shrb
xor
cmp
scas
pop
mulb
out
fcom
mov
int
mov
in
jmp
shll
inc
mov
mov
in
aaa
not
out
dec
push
test
out
je
in
sbb
movsl
inc
and
mov
jne
mov
push
jne
rcrl
loope
fimuls
pop
xchg
sub
push
and
popa
push
clc
adc
pusha
in
inc
inc
dec
scas
pop
mov
xor
mov
sti
sbb
mov
fidivl
cmp
cmp
sti
mov
push
cmp
loopne
nop
ljmp
and
mov
arpl
jns
inc
inc
jbe
lret
mov
mov
out
movsl
jle
lods
shlb
mov
mov
out
ret
adc
sub
cwtl
outsl
xor
flds
js
cmp
add
pop
mov
outsb
iret
popa
scas
imul
nop
cmpsl
and
mov
dec
aas
es
push
mov
xchg
sbb
loop
push
cli
test
cmpb
mov
movsl
mov
inc
cmp
sbb
fisubrs
lock
mov
mov
push
push
test
loop
xchg
cmpsb
inc
xor
xor
jle
dec
jne
in
imul
cwtl
xchg
push
cmp
dec
adc
jecxz
mov
pop
mov
mov
sub
out
fsubrs
pop
adc
pop
aam
aam
adc
lcall
dec
lcall
lcall
orb
faddl
xchg
adc
and
cmp
and
in
push
ljmp
loope
inc
cmp
movl
fucomi
jno
leave
in
fldt
xor
loop
jle
in
push
lods
movsl
fmull
div
daa
mov
shld
mov
inc
loop
in
cmp
sub
push
ja
and
fstpl
mov
adc
and
xchg
xchg
mov
hlt
pop
sub
stc
adc
sub
sbb
inc
inc
mov
outsl
jo
xchg
aaa
out
nop
fimuls
loopne
pop
push
lods
es
xor
pop
insb
dec
iret
lcall
jns
push
loop
sti
bound
arpl
stc
leave
loop
add
mov
sub
mov
loop
fcmovnbe
xor
out
pop
outsl
sbb
aaa
shll
add
lret
pop
fists
lahf
inc
adc
cmp
aas
jmp
mov
sub
mov
or
push
vzeroupper
leave
sub
push
test
and
push
cmp
fbstp
pop
ror
test
sbb
sbb
aaa
xor
pop
mov
pop
cmp
and
mov
test
jle
out
rcr
lret
out
sub
insb
fnsave
add
and
inc
mov
cmpsl
repz
push
or
pop
pop
dec
mov
xchg
adc
mov
movsb
es
xchg
lret
in
gs
xor
iret
ficompl
dec
mov
xor
les
lods
movsl
xchg
sub
mov
rcrl
out
push
out
dec
loop
iret
inc
and
loopne
repz
in
fsts
mov
rclw
adc
mov
xchg
push
push
aaa
cmpsl
mov
fsubrs
pop
lods
leave
push
mov
push
xor
in
rcll
mov
aad
test
scas
fs
jle
test
movsl
setns
mov
mov
sub
pop
aaa
xor
or
mov
out
shr
movsl
and
mov
sbb
ljmp
dec
mov
add
subl
xor
mov
or
mov
dec
stos
insl
push
inc
inc
dec
aad
fiaddl
sub
pop
lret
aam
mov
xor
loop
cli
xor
xor
mov
pop
loop
add
iret
xchg
imul
and
xchg
mov
cmpb
out
es
in
shl
aam
bound
xor
sub
loop
negl
inc
int
mov
test
mov
jo
lods
loope
and
icebp
roll
scas
xchg
ret
in
mov
daa
shll
mov
in
fwait
andl
leave
lea
movsl
lret
sub
push
jmp
popf
sub
or
and
ret
lcall
scas
xchg
mov
cmp
lds
or
mov
loop
push
movsb
inc
mov
xchg
sbb
test
loop
movsb
mov
jp
xor
sub
sub
data16
and
pop
or
inc
addb
cmpsl
xchg
das
out
outsb
fwait
xchg
jb
cli
adc
in
cli
cmc
push
scas
sbb
jp
loop
shlb
adc
ret
sub
lds
fs
out
in
roll
and
insl
ljmp
pop
pop
pop
or
push
and
adc
leave
sbb
adc
cld
pop
xlat
and
in
test
loop
dec
sbb
push
pop
adcl
out
jne
shlb
xor
push
or
ljmp
or
mov
sahf
dec
test
jns
sub
pop
adc
jge
ja
lds
loop
inc
sbb
shrl
int3
inc
int
in
or
in
loope
jns
xor
outsb
jg
dec
lcall
xchg
aas
movsb
sbb
jne
cltd
out
imul
clc
lea
js
sbb
loop
shlb
mov
inc
inc
aaa
pop
mov
jl
scas
adc
cmc
jbe
fnsetpm(287
xchg
jmp
aaa
fsub
jns
lock
leave
test
and
and
nop
lods
outsb
xor
out
cwtl
mov
push
out
dec
and
cmp
int
nop
adc
mov
std
test
fldt
ds
mov
jo
dec
cmpsl
inc
xchg
dec
xor
push
push
xor
push
pushf
mov
fmulp
cmpsl
lea
filds
jecxz
xchg
sub
adc
dec
rorl
hlt
xlat
xchg
aas
loop
cmp
inc
pop
sbb
inc
mov
cmp
int
fisubrl
loope
cwtl
sub
imul
pop
loop
mov
pop
xchg
and
nop
clc
iret
pop
loope
pop
push
arpl
cmp
and
xor
cmp
rcll
and
xor
lcall
dec
push
or
pop
xor
jns
clc
and
sbb
fnsave
pop
or
xor
rcll
pushf
lcall
adc
in
add
rcll
jmp
mov
js
popa
mov
test
loope
pop
fdivs
sub
push
lahf
popa
testb
add
sbb
adc
xor
lods
lods
sub
xchg
push
cltd
in
call
leave
repz
stos
iret
lcall
loope
push
repnz
mov
lea
sbb
adc
dec
sbb
test
adc
jae
xlat
xor
add
push
loop
leave
int3
pop
fucom
in
imul
fists
push
call
movsl
movsl
dec
xchg
ljmp
out
mov
mov
icebp
cmp
jbe
dec
nop
je
imul
insl
popa
mov
add
push
push
test
ljmp
xor
lcall
xchg
sub
mov
aad
in
cmpsb
mov
adc
and
add
stos
and
out
jle
pop
ror
mov
scas
hlt
rcrl
jle
sbb
xor
in
add
mov
and
push
ds
movsb
mov
mov
and
dec
or
mov
jno
mov
ljmp
imul
adc
mov
sarb
pand
xchg
pop
leave
lea
sbb
inc
add
popa
or
inc
dec
scas
popa
pop
mov
pop
outsb
and
xchg
insl
inc
sbb
mov
rcr
lods
mov
subb
xor
cmp
cmp
mov
into
dec
adc
xchg
imul
sbb
and
sub
jl
cmp
fistps
cmpb
mov
adcl
lods
sub
call
out
or
xchg
mov
xchg
pop
add
mov
and
sar
pusha
adcb
popa
and
add
push
test
gs
mov
sbb
and
ja
movsb
inc
sub
push
mov
movsl
in
lds
int3
test
jl
jno
sub
cmp
cwtl
adc
hlt
aam
rorl
call
xchg
int3
divl
pop
jno
imul
jb
jbe
or
pop
pop
mov
fldl
loope
lods
xchg
mov
fs
fnstcw
in
sahf
out
dec
xor
popa
sbb
cmp
jne
repz
and
or
sbbb
dec
fucomip
jno
xchg
loope
add
jmp
mov
jg
aaa
in
add
shll
stos
add
mov
mov
and
hlt
inc
test
scas
push
sub
jecxz
xchg
daa
or
out
hlt
mov
add
xor
pop
negb
sub
aad
mov
mov
hlt
push
popa
loope
rcrb
mov
push
adc
test
add
loope
in
aam
and
mov
pop
mov
pop
hlt
cltd
aad
out
and
xchg
sub
xor
mov
sbb
sarl
cmp
pop
ljmp
out
movsb
mov
adc
jge
or
push
pusha
pushf
jmp
popa
int
das
scas
adc
mov
push
in
hlt
mov
fld
add
imul
cmc
ficompl
shl
or
cli
ret
fstps
push
cs
rorl
ret
in
mov
stos
cld
push
int3
mov
rcl
or
popf
sub
push
sbb
pop
test
mov
pop
lods
sbb
adc
leave
daa
xorl
dec
add
fsubrs
adc
xchg
or
xchg
inc
or
or
sbb
roll
ss
sti
sbb
popa
nop
rcrb
fstps
mov
sub
pop
or
xor
xchg
insl
lods
lods
sub
comiss
lcall
test
mov
mov
fldl
xchg
and
sub
xchg
aaa
inc
jmp
fwait
xor
xor
aaa
push
inc
ret
pop
sbb
push
adc
push
xchg
ret
mov
repnz
xor
jae
cmp
adc
in
mov
jbe
mov
cmp
pop
aaa
dec
adc
mov
jle
inc
scas
lahf
push
and
push
cltd
cmp
or
or
sbb
mov
lea
call
lcall
ret
outsl
xchg
rcrl
popa
or
add
aad
inc
cld
popf
adc
jle
push
add
adc
loop
sahf
mov
jge
sbb
xchg
stos
pop
test
mov
pop
test
sbb
in
in
sub
in
hlt
jns
mov
mov
pop
dec
in
pop
pop
cli
jbe
sbb
test
cmp
jae
pop
sti
or
jnp
xchg
outsb
add
and
test
cmc
add
pop
aaa
cmp
popa
xchg
and
stc
loope
in
xor
mov
xchg
js
cmp
cmp
dec
int
jbe
and
jns
adc
push
sbb
mov
repz
lcall
mov
xor
aam
out
mov
nop
fdecstp
inc
dec
and
fwait
adc
jle
push
cmp
cmp
fiaddl
inc
inc
jo
or
pop
loope
push
rol
bound
cld
movsl
pop
out
pop
imul
sti
icebp
ljmp
push
imulb
nop
mov
test
inc
scas
push
std
jae
inc
shll
icebp
cmpl
cmp
sbbl
cmp
cmc
outsl
and
pop
test
adc
ret
loope
imul
in
inc
push
aam
loopne
sbb
fwait
and
or
fdivl
ror
mov
mov
xchg
in
sub
add
pop
jb
pop
or
in
test
loope
adc
movsb
fbld
dec
mov
mov
std
push
pop
mov
push
and
xchg
imul
and
xchg
aam
add
push
xchg
inc
gs
lahf
in
mov
popa
sti
adc
or
and
imul
loop
add
inc
xchg
shlb
cli
xchg
popa
push
fstps
pusha
mov
addl
mov
insb
shll
sub
arpl
dec
jb
jg
adc
mov
leave
je
nop
andb
out
data16
cmpsb
pop
stc
outsl
cmp
loope
arpl
loopw
dec
xchg
imul
jg
mov
loop
mov
hlt
or
cmp
add
daa
sbb
or
inc
gs
arpl
jg
scas
in
test
leave
jl
xor
shlb
cltd
xchg
push
push
in
cmpsl
out
adcb
xchg
cmpsb
add
stos
or
divl
dec
ud1
mov
and
jno
fistpl
nop/reserved
mov
sbb
in
pushl
jns
loopne
and
hlt
lods
mov
mov
add
and
in
xlat
or
pop
adc
mov
and
pop
adc
mov
mov
mov
adc
loop
scas
ficomps
push
add
push
and
imul
loop
mov
outsl
pushf
inc
enter
test
cmp
adc
push
call
ret
mov
pop
push
dec
or
ret
ss
rcrl
loope
enter
and
adc
mov
icebp
cmp
adc
ljmp
pop
add
lahf
xchg
xchg
js
and
cmpsb
incl
push
iret
mov
rclb
vpshufhw
lock
adc
repz
fidivs
xchg
mov
add
pop
sub
ja
mov
inc
shrb
call
mov
out
test
jbe
and
sarl
xchg
add
adc
das
sub
or
out
mov
popa
mov
pop
je
or
pop
cmp
das
sbb
cld
or
loopne
push
and
lods
cmp
mov
setnp
xchg
mov
lcall
add
adc
sub
mov
dec
stos
rcrb
pop
dec
test
jne
mov
bound
inc
sti
inc
jne
shrl
stc
xchg
mov
xchg
nop
mov
icebp
and
movq
dec
mov
or
in
sbb
movb
jo
aam
cmc
dec
add
loop
movsl
sbbb
std
in
adc
stc
daa
das
xor
pop
dec
mov
scas
out
mov
das
ret
mov
fcoms
loope
pop
sbb
sbb
rcrb
pop
aas
mov
or
pop
out
cld
mov
pop
insb
cmp
mov
cmpsl
and
mov
nop
sub
test
dec
mov
orl
outsb
xchg
loope
jb
cs
shr
sub
jns
scas
mov
and
popf
mov
xchg
scas
nop
xlat
addr16
nop
sub
mov
sarb
xchg
sub
mov
jp
repz
mov
pop
aas
test
xor
jo
sub
scas
jmp
pop
cltd
sbb
mov
mov
lret
adc
shl
testb
rcrb
aas
mov
mov
and
adc
mov
mov
jno
rep
dec
sub
and
add
mov
xor
das
loope
insl
dec
xor
cmpsl
sbb
cmp
mov
mov
sbb
mov
in
in
jnp
enter
dec
daa
in
dec
push
sbb
add
jp
into
pop
punpckhwd
and
push
lods
and
movsl
mov
and
clc
ds
jb
out
jnp
dec
cmpsb
js
mov
jnp
cmp
imul
movsb
andb
loop
in
ss
lcall
push
out
scas
adc
push
cmp
adc
mov
xor
jns
jo
fwait
cmp
les
dec
pop
xor
adc
cmp
xchg
test
push
popf
mov
loop
mov
xor
aas
mov
jne
dec
pusha
iret
repz
in
imul
in
fildl
and
pop
out
pop
mov
loop
push
fisttpll
mov
out
pop
adc
es
mov
rorl
mov
xor
xor
cmc
ret
mov
js
stos
fwait
pop
xchg
gs
pop
sub
mov
stos
or
out
and
sahf
and
lds
xorb
in
stc
push
jmp
mov
push
fidivs
push
adc
cmp
iret
les
cs
fimull
stc
rcl
lds
sbb
cmp
adc
out
jg
lock
outsl
mov
push
push
rcll
fwait
js
lds
mov
push
lahf
loop
mov
add
dec
or
ret
in
xor
aam
push
jo
mov
xor
push
mov
outsl
int3
cmp
adc
xor
ja
loop
jo
and
inc
pop
cmpsl
inc
adc
xchg
scas
lea
mov
test
cltd
sti
mov
adc
jge
les
or
xor
jb
cltd
sbb
mov
push
mov
xor
pop
daa
xor
dec
lods
fisubl
push
mov
roll
sub
cmp
and
push
add
sbb
test
xchg
loop
jne
xchg
idiv
jp
xor
clc
and
test
lret
mov
ret
push
test
lret
mov
int
cmpsl
outsb
stos
add
cli
movsl
mov
mov
inc
mov
pop
outsb
sysenter
sub
loop
imul
pop
mov
jmp
mov
fnstenv
xchg
pop
xchg
push
loop
popl
jae
adc
push
mov
loop
pop
mov
or
insl
mov
mov
cmp
add
lock
inc
mov
inc
ja
cmp
xor
xchg
add
sbb
cld
imul
daa
or
mov
cmp
xchg
mov
stos
insl
iret
ss
push
pop
lcall
lds
loope
push
movsb
pop
in
ja
scas
jns
sarl
lea
lock
mov
pop
negl
xchg
mov
push
mov
inc
cltd
sbb
fs
pop
int
mov
cwtl
test
pop
mov
inc
fisttpl
ljmp
xor
inc
rcll
mov
movsl
jmp
jns
mov
fnstcw
imul
cmc
xorl
cwtl
lods
pop
jle
insl
inc
fwait
and
mov
das
pop
out
mov
add
pop
sub
dec
xorb
lahf
sarb
adc
and
les
shll
shll
scas
insb
pop
fildll
das
lods
or
xor
push
mov
or
or
ficomps
stos
xor
xor
mov
inc
inc
adc
aaa
adc
insl
mov
adc
or
scas
cmpsl
jle
and
sarb
movsl
push
test
adc
fildl
aad
fs
xor
out
push
xor
cmp
pop
dec
cmp
mov
xchg
adc
and
in
test
insb
popa
test
inc
loope
aad
scas
ja
arpl
xchg
cltd
mov
xchg
ljmp
dec
int3
sarl
mov
ss
ret
lret
jno
cmp
push
lea
mov
imul
lret
hlt
mov
and
popa
inc
cmpsl
popa
xchg
sbb
add
xchg
jecxz
adc
xchg
xor
in
int
mov
cmp
cltd
adc
jno
sbb
aas
xor
nop
shl
xchg
stc
inc
mov
loopne
and
loop
js
cmpsl
out
jae
dec
dec
xchg
hlt
stos
jns
or
mov
mov
icebp
sti
jne
stc
in
jecxz
jle
mov
daa
jp
sti
in
push
test
cli
xor
mov
in
sub
lret
adc
test
addr16
outsl
mov
sbb
pop
or
insb
xor
mov
push
outsl
cmp
mov
or
push
sbb
out
aas
inc
add
xchg
sbb
dec
ja
adcb
cmpsl
mov
add
cltd
call
mov
adc
loope
pop
mov
pop
pop
sarl
push
sbb
add
xor
sbb
loope
sbb
sub
pop
cmp
ret
push
adc
push
pushf
push
into
xchg
test
cltd
pop
jl
xchg
imul
mov
fildll
xchg
mov
xor
loop
idivl
xor
xor
xor
lret
adc
mov
imul
mov
adc
adc
iret
jp
popa
sbb
in
inc
nop
jp
cmpsb
inc
aas
pop
jbe
mov
xor
test
and
xchg
adc
mov
stos
push
bound
adc
mov
push
fstpl
jl
mov
scas
sbb
lds
dec
dec
push
mov
xchg
inc
pop
aas
and
dec
sahf
xchg
insl
out
xchg
or
cmp
dec
hlt
and
rcll
dec
jo
mov
dec
in
movsl
inc
push
js
das
outsl
xor
mov
out
lahf
dec
lcall
add
imul
adc
inc
xchg
test
stos
push
movsb
stos
outsl
lock
xor
pop
mov
and
mov
pop
dec
mov
dec
mov
orb
test
push
mov
and
mov
sbb
adc
jmp
and
and
pop
outsl
push
pop
lahf
mov
pop
out
xchg
test
arpl
cmp
mov
es
jo
and
push
sbb
in
loope
popf
adcl
jle
cli
xchg
fs
jb
fldenv
xchg
in
outsb
inc
loop
dec
mov
aaa
push
out
cmp
mov
push
fistl
outsl
or
mov
mov
mov
fwait
pop
scas
xchg
movl
dec
lret
stc
cmp
xor
xchg
shlb
xor
pop
cld
in
mov
pop
popf
push
inc
test
jno
mov
jb
out
dec
adc
jl
and
cmp
sti
loope
mov
aaa
xchg
fs
jno
loop
jl
or
cmp
lret
lods
adc
push
push
mov
subb
mov
lcall
rorl
sbb
inc
loop
mov
jbe
dec
push
pushf
sub
pop
imul
cmpsl
shr
and
jns
loop
fwait
mov
push
jp
fwait
shrl
shl
cmpb
sub
lret
loop
movsl
mov
and
dec
ret
outsb
insb
cld
pop
movsb
cmc
nopl
mov
xchg
mov
jbe
loop
add
pop
mov
mov
scas
push
mov
sub
out
push
push
cmp
add
lahf
sbb
sub
pop
les
or
adcb
sbb
pxor
xor
adc
movsl
mov
incl
in
mov
subb
jg
int
cmp
adc
jge
loop
dec
int3
ss
or
test
mov
ja
xchg
jns
sub
mov
cmpsl
sub
adc
mov
adc
jmp
decl
fstpt
jns
inc
aas
ret
ss
shlb
xor
or
mov
jno
outsl
push
mov
andl
mov
pusha
mov
pop
xor
rcrb
jns
add
movsl
imul
sbb
clc
jnp
xor
lock
and
sbb
jle
stc
xchg
xchg
loop
push
adc
mov
imul
sbb
and
pop
mov
cmp
jne
aad
and
and
sahf
cld
cmpsl
mov
das
addr16
mov
push
pop
mov
push
std
dec
sub
dec
adcb
call
cmp
jnp
imul
enter
pop
and
aam
or
mov
or
test
adc
daa
dec
fwait
push
pop
gs
jae
nop
test
scas
xchg
cltd
das
sub
test
inc
or
pop
shl
fcoms
fcmovnu
sbb
ja
popf
mov
loope
xor
pop
push
stos
sbb
and
ficoml
int
fisubrs
int3
pushf
movsb
out
jns
xchg
pop
add
xor
inc
loope
das
ss
sahf
mov
add
pop
jo
push
push
adc
pop
bound
lahf
ss
sbb
add
loop
mov
jns
aaa
jecxz
inc
lret
mov
test
mov
xor
outsb
iret
cmp
xchg
stc
add
xor
ss
sti
or
mov
insl
outsl
loop,pn
xchg
push
ffreep
mov
in
jecxz
leave
fidivrs
aas
xor
stos
lods
cltd
or
ss
mov
bound
mov
inc
fcoml
hlt
ficompl
and
and
test
arpl
mov
outsl
sub
xchg
add
test
jae
popa
daa
test
out
inc
jmp
pop
or
ror
mov
jge
sbb
jg
lret
nop
jno
in
mov
stos
jo
mov
and
loop
mov
dec
and
jp
add
lods
or
xchg
loope
jg
sahf
fcoms
push
daa
pop
inc
repnz
sbb
repnz
lcall
enter
mov
or
mov
pop
ret
mov
std
sbb
sbb
mov
and
sub
es
iret
mov
mov
cmpsl
mov
out
hlt
adc
mov
xor
mov
and
test
xchg
in
stos
mov
inc
mov
inc
lea
js
cltd
jbe
loop
imul
pop
xchg
or
xor
jmp
jb
sti
dec
mov
loopne
les
adc
mov
pop
sti
fldenv
lods
cli
adc
or
movsl
mov
jae
pop
jbe
jns
mov
cs
rcrl
movsl
aas
jo
in
adc
mov
xor
add
push
orl
and
imul
ret
push
pusha
daa
in
jne
mov
loope
shlb
insl
sti
pop
push
mov
test
loope
inc
mov
cmp
sub
mov
and
fs
out
loop
ss
das
test
aaa
sub
cmc
sub
inc
insl
out
sti
cmpsl
lretw
nop
mov
aad
mov
cmp
das
ljmp
push
and
in
shll
dec
push
jno
rorl
ss
cmp
add
adc
movsl
sub
jp
sub
loop
int3
aam
and
mov
pushf
sbb
push
push
mov
in
pusha
xor
insb
adc
outsl
jge
sahf
or
jl
dec
in
adc
pop
iret
or
shll
in
lea
shrd
and
cltd
mov
cmp
dec
imull
add
pop
fstps
mov
outsl
rorl
inc
data16
in
and
test
and
ljmp
cmpsl
dec
nop
movsb
sub
nop
rorb
pop
cltd
cmp
sub
mov
pushf
pop
test
into
xchg
loope
ja
lods
push
dec
pop
adc
or
push
xor
loop
ss
lahf
mov
and
fwait
mov
pop
scas
and
xor
mov
lods
cvttps2pi
psllq
aas
dec
adc
mov
cld
int3
jmp
pop
adc
sub
testb
push
ror
mov
sbb
sub
movsb
push
hlt
daa
imul
mov
int3
inc
out
sbb
jle
in
mov
push
pop
dec
pop
jle
jno
push
sub
inc
cmpb
add
add
popa
clc
gs
pop
aaa
jg
loope
cmpb
cmp
jp
pop
sub
test
cmp
mov
std
daa
jle
aad
ds
shlb
pop
sbb
add
divb
or
mov
sbb
repnz
mov
lahf
mov
inc
add
test
sbb
jns
sub
mov
data16
push
out
loop
jl
hlt
mov
out
mov
mov
sub
xchg
mov
mov
push
xor
outsl
xchg
adc
dec
push
rcrl
push
adc
scas
insb
push
inc
inc
cmp
mov
fwait
test
adc
inc
sbb
xor
lods
loop
rclb
pop
mov
sub
xchg
in
packuswb
inc
fs
mov
inc
fxch
lds
clc
shrb
push
xchg
xor
mov
xor
movsb
xchg
imul
aaa
pop
add
fldcw
xchg
and
or
icebp
sbb
in
sbb
inc
insb
cmp
not
and
icebp
adc
push
in
push
mov
adc
mov
fcmovnb
shrl
xor
push
shrl
test
outsl
or
mov
adc
xchg
cltd
xchg
shrb
insb
fistpl
call
sub
cmp
sub
mov
push
and
sti
fsts
jae
sub
pop
mov
orl
arpl
cmp
das
and
or
loop
cltd
idivb
inc
and
inc
roll
xchg
hlt
repnz
sti
call
in
nop
rep
pusha
fidivs
fildl
sarl
test
pop
pop
sahf
xor
pop
inc
loop
aad
pop
imul
push
in
push
movsl
dec
push
and
repnz
xchg
mov
push
sti
push
cli
and
ret
push
mov
xor
and
mov
mov
aaa
xchg
mov
lods
fnstsw
mov
and
pushf
gs
xlat
aaa
adc
push
arpl
jl
sarb
dec
mov
insl
ljmp
sbb
ret
sub
xchg
in
xor
insl
lds
cmc
mov
aas
int
xchg
stc
mov
insl
pop
push
adc
mov
push
and
loope
dec
out
add
cmp
and
rcrb
or
ret
push
lret
mov
or
jae
sbb
gs
sub
add
inc
fs
xor
mov
adcb
cmpsl
in
aas
fdivr
sbb
mov
inc
sbb
sti
movsl
or
or
jmp
and
sbb
rcr
icebp
cmpb
sarb
sbb
popf
fcmovnb
pop
mov
dec
lcall
mov
aaa
lods
out
mov
daa
loop
pop
pop
daa
add
lret
jle
jno
icebp
int
jl
aaa
leave
sub
stc
movsl
cmc
stc
xchg
out
pop
push
ffree
xchg
jbe
popa
jnp
imul
and
insb
cwtl
loop
frstor
mov
into
pop
sahf
loopne
imul
cmpsl
test
sti
iret
loopne
xor
mov
movsl
movsl
fimull
xchg
sbb
std
test
movl
adc
dec
addb
lods
sbb
insb
in
lock
ret
insl
and
loop
mov
or
dec
rcl
sysenter
adc
jo
mov
xchg
and
out
lret
jb
cmpb
cmp
in
fst
loop
jmp
adc
arpl
and
xor
add
cmpsb
cld
sti
xchg
test
ret
pop
adc
mov
jmp
aaa
sub
pop
in
stos
dec
in
xchg
cld
fcompl
pop
cpuid
insl
loope
push
into
mov
pop
nop
jb
or
pop
insb
in
push
in
adc
xchg
xor
xchg
dec
add
imul
mov
idivl
push
int
bound
arpl
loope
test
mov
jns
push
cltd
xchg
and
mov
mov
inc
das
subl
sbb
iret
sar
dec
or
aaa
lds
pop
mov
xchg
scas
in
in
adc
loope
pop
fdivs
loop
dec
mov
addr16
adc
rcrl
in
lds
xchg
and
loope
xor
jecxz
arpl
add
mov
jp
xchg
cmp
xorb
push
les
mov
pop
push
imul
outsl
mov
xchg
loope
xor
xor
fwait
test
sub
repnz
imul
pushf
push
lret
or
mov
sbb
icebp
push
sbb
xchg
addr16
pop
push
sub
loop
xchg
mov
loope
ret
inc
loop
cld
mov
mov
lcall
inc
sub
cmp
je
xchg
lcall
rcll
in
mov
pop
cmp
mov
sub
les
adc
mov
pop
fidivl
push
loop
sbb
push
push
sub
sbb
xchg
test
mov
dec
adc
clc
cmp
fisubrs
and
jne
cmp
sti
fdivrp
jae
pop
cmp
pop
popa
mov
stos
cmp
scas
adc
addr16
jl
test
jae
sub
and
xor
out
in
jecxz
inc
shl
pop
push
xor
sbb
sub
mov
cmp
aas
dec
cmp
mov
adc
scas
dec
stos
sar
mov
iret
in
outsl
lret
icebp
or
orl
push
mov
pop
cmp
fidivs
or
gs
push
aas
xchg
call
lahf
adc
jp
add
mov
inc
dec
int3
sub
cmp
cwtl
mov
mov
int
xchg
dec
loope
sti
subb
insl
fidivrs
or
dec
daa
mov
or
and
adc
fwait
shlb
cld
gs
pop
mov
dec
pop
mov
ret
jne
xor
fdivp
or
add
dec
mov
jmp
je
add
xchg
cmp
xchg
dec
int3
test
hlt
push
sbb
xchg
mov
fisttpl
and
cld
push
pushf
es
mov
je
mov
pushf
push
popf
or
es
push
in
jp
int3
mov
inc
mov
lret
mov
ljmp
dec
aas
cmp
outsl
in
and
lods
into
jo
and
push
jae
jae
adc
mov
adc
rcll
fs
and
sub
and
insb
sbb
mov
loop
in
cmpsl
and
pop
jno
loop
xor
lcall
nop
cmpsl
sbb
inc
fwait
cmp
xor
xchg
jg
out
mov
jns
bound
push
jb
stos
in
adcl
test
inc
add
iret
cmc
push
nop
inc
addr16
dec
mov
dec
out
testb
cmpsb
inc
sbb
lds
shrb
mov
mov
aaa
xor
aaa
loop
lret
arpl
jns
jle
mov
arpl
sbb
dec
fwait
pop
repz
xor
pop
lods
inc
fisubl
and
dec
and
sub
negl
or
imul
dec
shll
cmpsl
outsb
pcmpgtw
add
pop
nop
cli
call
in
or
pop
sbb
out
dec
dec
lret
mov
adc
loope
lret
rolb
stc
mov
cmp
les
loop
shl
xchg
lcall
popa
roll
xchg
xchg
inc
iret
popf
jmp
and
fsub
adc
pop
outsl
cmp
sahf
dec
and
lret
pushf
push
into
push
xchg
loope
in
insl
popa
pop
adc
jle
movl
xchg
xchg
add
push
lret
ds
dec
dec
insb
add
push
xor
adc
dec
add
adc
xchg
lods
xchg
in
lea
xchg
jb
adc
lds
lcall
or
add
roll
add
xchg
cmp
xor
aaa
mov
pop
ss
pop
mov
ret
add
push
pusha
sti
lahf
es
ficompl
test
lret
push
repnz
mov
adc
ror
cmc
cltd
iret
and
jo
cld
sbb
leave
cmpsl
mov
inc
dec
mov
jno
cmp
xchg
mov
and
addr16
sbb
pop
sub
add
movsl
daa
dec
in
xchg
mov
mov
and
dec
push
test
lods
aaa
pushf
sbb
paddusb
and
sub
int
sbb
mov
pop
cmpsb
mov
mov
sub
shrl
fwait
mov
ljmp
add
insl
xchg
sub
pop
aas
xchg
xchg
xchg
push
cmc
adc
push
sbb
xchg
xor
xor
xor
adc
subps
jae
ret
and
xchg
mov
push
dec
test
push
sub
add
out
out
lods
repz
pop
in
lods
popa
imul
addr16
adc
pushf
test
pop
les
xchg
xor
aaa
push
cmp
scas
and
pop
mov
inc
sarl
lahf
pop
leave
and
lods
mov
and
je
icebp
subb
cmc
jnp
mov
sbb
mov
aas
pop
out
stos
pop
das
sbb
lret
push
and
ljmp
cmp
jg
sub
or
in
loope
and
loop
in
or
loopne
imul
mov
sbb
ljmp
daa
sub
inc
xor
aaa
mov
inc
jnp
outsl
xchg
or
mov
or
test
sub
sbb
test
lds
cmp
jp
jecxz
stc
cmp
mov
sarl
sbb
or
jns
sub
out
daa
sub
mov
js
loop
push
push
push
pop
jle
mov
enter
inc
push
mov
imul
sbb
mov
xchg
cbtw
ficoms
sub
jns
xchg
mull
rclb
mov
add
js
jae
addl
mov
dec
dec
xchg
sub
fimull
and
push
call
hlt
pop
and
adc
push
pushf
imulb
cmpsb
pop
mov
sahf
ds
mov
inc
arpl
loope
adc
xorb
in
fmuls
mov
and
push
push
cmp
pop
lock
jo
pushf
xchg
push
sbb
mov
pop
iret
push
xor
loop
int
and
clc
mov
pop
inc
lret
inc
mov
pop
mov
add
cmp
cltd
mov
inc
mov
test
sbb
leave
cmp
add
sbb
pusha
fstp
jl
in
fldl
jb
push
add
andl
enter
scas
iret
adc
out
fwait
out
sub
xchg
scas
imul
xchg
lahf
adc
daa
mov
jo
inc
mov
scas
lods
xor
mov
push
setns
cmp
or
loop
repz
cmp
outsl
pop
and
loope
lret
xor
add
out
pop
and
scas
loop
cwtl
jle
sub
ja
jle
divl
loop
outsb
push
and
or
xor
pop
daa
push
sti
push
sahf
xor
push
shl
mov
cltd
out
xor
ss
repz
dec
mov
push
int
push
inc
pushf
insl
std
test
xchg
sub
sub
mov
sub
lea
or
sbb
xor
and
popa
sbbb
adc
cmc
enter
inc
push
push
les
daa
sbb
pop
movsl
out
xor
insl
mov
aaa
xor
aad
mov
mov
sub
sub
shlb
ret
adc
cs
adcl
mov
outsl
loop
xchg
mov
xchg
and
leave
popa
push
ss
fldcw
and
out
jne
in
adc
push
push
aam
mov
mov
xor
or
and
xor
mov
in
cmp
pop
nop
dec
push
insl
lcall
pop
out
or
les
ja
hlt
out
lods
out
xor
add
int3
jno
loope
cmc
fbld
test
arpl
sahf
lcall
sbb
movsl
lods
fidivl
jle
cmp
movsl
notl
push
jo
inc
mov
push
push
jle
insl
inc
ljmp
push
jne
inc
stos
sub
xchg
push
sahf
ss
inc
lcall
xchg
test
cmpsb
lret
test
mov
and
inc
ret
or
int
sbb
in
pop
add
push
mov
insw
sub
fcoms
bound
pop
out
inc
lret
jmp
mov
mov
into
or
cmc
pop
test
int
pop
inc
rorb
xchg
leave
aas
adc
lcall
jl
movsl
insb
sahf
daa
jns
xchg
fsts
sarb
int3
hlt
subl
scas
aaa
into
ret
push
outsb
mov
jbe
fucomip
sbb
ss
adc
sub
add
mov
clc
stos
sbb
and
push
mov
stos
ss
je
push
cmp
sub
stos
cmp
push
mov
mov
and
push
inc
or
xchg
xchg
pop
xchg
shl
test
adc
xchg
movsb
sub
std
in
int
sub
cs
mov
incl
xor
push
fisubs
dec
daa
jno
xchg
loope
jo
fwait
loop
jecxz
lea
lds
fwait
push
loope
mov
mov
lea
das
inc
lock
push
insl
ss
cmp
xchg
lock
lret
xor
cmpsl
jo
jae
in
cmpsb
xchg
rol
subb
or
and
sub
ja
in
push
xchg
pop
jl
andl
lcall
cmpsl
stc
je
into
aad
and
pusha
inc
les
shll
nop
mov
sbb
mov
je
and
es
pop
es
add
xor
cmpsl
dec
loopne
xor
adc
fcmovnbe
push
jb
xchg
mov
push
xor
fidivl
push
out
fidivl
push
loop
or
gs
mov
mov
mov
push
orb
pusha
mov
xorb
fs
mov
outsl
or
push
insl
in
inc
jns
adc
jbe
inc
imul
and
in
add
adc
xor
call
nop
adc
mov
cmc
adc
std
mul
test
jo
pop
mov
adc
pop
lods
loop
push
sub
loope
and
dec
in
jns
cli
rcrb
mov
jecxz
ficompl
jp
call
fwait
or
fs
cmp
sti
mov
sub
mov
wrmsr
iret
pushf
je
push
sub
xchg
xchg
out
mov
push
cmpsl
scas
mov
arpl
stmxcsr
and
inc
pop
cmc
addr16
sub
mov
jg
mov
clc
lcall
das
adc
mov
sahf
out
fmuls
push
or
sub
fsts
add
xor
mov
pop
cmp
pop
dec
mov
and
stos
xchg
loope
adc
lds
sub
dec
pushf
xchg
push
and
and
popa
mov
sbb
dec
popa
mov
adc
sbb
mov
scas
add
jp
fisubrl
or
out
fmull
stos
inc
cwtl
dec
rcll
pop
decb
xchg
mov
add
sub
inc
mov
and
sub
mov
rcll
and
mov
push
sub
test
fxch
jns
inc
dec
out
cmpsl
in
inc
adc
aas
xor
adc
mov
pop
lea
jb
loope
add
fwait
add
cltd
mov
sbb
cwtl
fwait
pop
pop
fs
pusha
or
mov
push
call
sub
adc
adc
daa
dec
xchg
mov
mov
sub
clc
mov
adc
mov
inc
outsl
test
in
pop
mov
fmulp
cmp
je
mov
inc
lret
mov
imul
xchg
sbb
and
inc
pop
mov
push
mov
mov
sbb
mov
push
cs
mov
in
adc
sti
loop
mov
push
adc
insb
arpl
in
sbb
mov
aam
popf
or
push
jge
loop
mov
xor
stos
sti
adc
ljmp
aam
sub
mov
js
mov
cmpsb
sub
adc
int3
xor
mov
xor
mov
mov
sub
mov
add
sbb
shll
loop
jg
xchg
fldenv
fbld
in
mov
repnz
or
rcll
std
dec
and
cmp
out
push
sbb
in
cld
push
dec
pop
test
sub
dec
outsb
in
jge
int
mov
xor
xor
push
jnp
aam
add
mov
imul
push
lods
mov
lods
rcl
xchg
nop
or
mov
stos
push
push
movsb
fs
fisubl
sub
mov
adc
pushl
lcall
movsb
jmp
mov
cltd
add
in
insb
daa
nop
push
mov
adc
sub
push
mov
mov
push
cltd
lret
or
repnz
inc
lods
xchg
push
adc
ret
bound
xor
cmpsl
dec
iret
fwait
es
push
mov
mov
sbb
loop
ljmp
mov
mov
add
daa
fistpll
andb
leave
lock
int
jo
mov
loop
mov
lea
outsl
shlb
pop
mov
daa
xchg
pop
addr16
push
adc
aas
xchg
mov
fwait
and
int3
jg
stos
popf
repnz
xor
add
xor
jl
dec
imul
or
cmp
movl
clc
sub
and
mul
das
and
mov
xchg
and
and
jg
cmp
sbb
cmp
loope
xor
xor
outsl
or
mov
inc
repnz
pusha
inc
push
pop
dec
in
repz
sub
inc
xor
rcll
cmp
sub
dec
outsl
jge
arpl
mov
imul
lock
lods
insl
or
pop
lret
mov
sarl
loope
cmp
decl
add
leave
add
and
loopne
adc
inc
repz
aaa
jns
sub
push
and
cmpsb
paddb
sbb
dec
mov
loopne
sub
inc
sbb
loop
mov
movsb
jecxz
popf
sbb
sbb
in
scas
imul
fucomp
pop
sarl
loop
mov
or
cmp
add
and
pop
enter
inc
loope
ds
pusha
addr16
dec
mov
stos
outsl
cmpsl
test
bound
mov
mov
outsl
je
and
fldenv
xchg
or
loop
sbb
pop
pop
jo
adc
icebp
xlat
imul
in
jecxz
ud2
cld
popf
lea
mov
or
mov
inc
sub
xor
add
cltd
mov
movsb
push
shlb
iret
mov
sbbb
mov
sub
int3
jne
icebp
pop
movsl
mov
sub
pop
lods
pop
popa
outsb
cmp
int
es
sbb
sub
sub
xchg
or
sub
jns
push
addb
scas
xor
jp
ret
mov
call
lahf
icebp
jns
fs
or
jl
pop
jge
sahf
cmp
dec
mov
mov
in
and
jbe
cmp
call
xchg
mov
test
inc
ret
in
or
or
inc
pop
in
xchg
fcoms
clc
and
loope
pop
subb
outsl
xor
nop
movsl
mov
int
not
call
jp
xchg
aas
or
and
mov
pop
xchg
loope
dec
fcomip
std
mov
and
mov
iret
mov
shl
out
pop
fiadds
mov
dec
jge
push
sti
or
ljmp
xchg
add
xchg
or
outsb
mov
or
mov
popf
in
xor
test
and
and
add
ret
or
popa
pop
push
imul
xchg
xchg
mull
and
mov
xor
mov
jno
adc
popa
sub
xor
mov
add
sbb
sub
xor
jle
mov
mov
daa
gs
outsb
nop
loop
adc
pop
scas
pop
imul
mov
and
add
jns
push
sbb
cmpsb
sub
xchg
in
iret
data16
out
movsb
popf
push
pop
icebp
jecxz
aas
inc
imull
shll
filds
arpl
bound
fwait
outsb
icebp
das
loope
inc
stos
xchg
out
inc
icebp
cld
gs
icebp
adc
movsb
add
stos
sbb
nop
or
push
inc
enter
jbe
addr16
pop
mov
in
enter
sbb
xchg
mov
mov
xor
sub
xchg
mov
add
xorl
pop
pushf
jmp
pop
or
mov
scas
adc
sub
add
mov
add
sub
mov
dec
add
nop
inc
xchg
loope
les
and
mov
jbe
xchg
aaa
std
jo
xor
in
adc
adc
sub
fisubl
or
pop
and
mov
add
adc
pop
lret
pop
andb
inc
outsb
dec
imul
cmp
bnd
das
cmp
cwtl
mov
flds
icebp
mov
scas
imul
xchg
orb
cmp
pop
sahf
ljmp
ds
or
fwait
mov
push
in
jae
loope
test
fiadds
jg
scas
and
aas
adc
mov
fidivl
mov
hlt
movsl
cmp
imul
xchg
push
mov
jae
cltd
hlt
xchg
dec
sbb
jbe
rorl
sbb
and
add
jle
jbe
outsl
out
lcall
jl
addb
add
ret
push
and
jo
push
std
movsl
shll
scas
pop
test
popa
fidivl
push
iret
inc
xor
sti
fxch
ss
int
roll
sbb
jg
repz
aam
jae
cmpsb
in
adc
cltd
or
mov
sbb
and
push
push
insb
jno
lods
in
stos
mov
out
imul
cs
mov
xchg
sub
mov
xor
movsl
adc
das
cmp
pop
xchg
push
xchg
popf
adc
mov
pop
loop
push
js
cwtl
mov
lret
jnp
iret
nop
pop
lret
ret
add
sbbl
mov
or
rcrb
lock
pop
push
iret
sbb
mov
ja
pop
mov
loope
mov
sub
ret
jo
jns
rcrb
adc
adc
and
imul
adcl
subb
push
in
or
icebp
pushl
repnz
cli
cmp
dec
stos
push
and
jecxz
push
jmp
cmp
mov
ss
rol
movsl
sbb
dec
mov
cmc
lods
lods
nop
setns
insb
repz
call
out
aas
mov
and
adc
divb
loop
lret
cmp
xor
or
xchg
cli
adc
loop
fdivs
push
or
imul
and
movsb
dec
les
xchg
jne
push
push
repnz
dec
add
insb
or
push
pop
fwait
sbb
stos
push
or
cmpsl
sti
arpl
cmpsb
out
imul
stos
mov
nop
xor
sbb
outsl
fbstp
push
xor
adc
jl
sbb
outsl
push
movsb
sub
inc
in
mov
mov
jnp
lcall
dec
pop
and
jno
mov
and
stc
and
inc
lds
stos
jmp
inc
leave
pop
aas
mov
pop
and
adc
outsb
dec
or
ss
aaa
xlat
out
lods
test
mov
inc
adc
in
loopne
add
das
sbb
mov
jne
iret
cltd
sbb
nop
sbb
and
lods
iret
push
push
in
flds
xor
push
nop
insl
ja
les
sub
lret
and
sbb
cld
aas
outsl
leave
fistpll
add
jecxz
sbb
push
add
jl
scas
insb
mov
pop
and
lds
sbb
outsl
jle
decb
adc
test
or
loop
cld
std
push
imul
cmpsl
nop
decb
rorb
roll
in
aaa
cmp
sbb
ss
pop
inc
pmaddwd
fcoml
mov
push
dec
sbb
jle
mov
imul
mov
sub
jo
loope
xor
jno
movsb
pop
inc
pop
enter
inc
loop
ss
sbb
sti
leave
movsb
mov
je
cmp
fwait
lock
aad
ds
int3
aas
out
inc
pop
add
add
jle
sub
xor
loopne
mov
dec
popa
cmc
fcmovu
mov
dec
mov
inc
cltd
mov
xor
sbb
jns
cmpsl
and
cwtl
cmpsl
sbbl
hlt
rorb
jae
imul
and
mov
sub
mov
add
cmp
pop
movsb
xorl
sarl
call
stc
pop
adc
outsl
je
pop
xor
shrl
arpl
push
stos
cmp
int
and
test
dec
or
mov
popa
jns
insl
in
sub
push
fistpll
and
lcall
inc
lret
insl
fldt
and
inc
sub
outsb
jp
sarl
sti
mov
lock
mov
jecxz
sbb
mov
mov
pop
int
test
cmp
sub
jb
out
dec
adc
sbb
inc
lret
push
xchg
and
or
mov
jb
les
test
lahf
rolb
movsl
xchg
mov
out
mov
jmp
mov
sub
jg
dec
mov
jmp
xor
into
xor
test
outsl
mov
pusha
subb
loopne
dec
and
popf
mov
mov
xchg
cmp
int3
fcmovu
lldt
inc
mov
insb
sbb
sbb
pop
jp,pt
pop
xchg
jns
out
aad
movsb
lds
ds
cmp
cli
mov
adc
xor
movsl
xchg
cli
or
push
sar
cld
fistl
repz
sbb
jns
push
es
sahf
vsqrtps
imul
lods
push
outsb
clc
push
xor
mov
movsb
fildll
xor
cmpsl
sbb
data16
push
loope
xchg
sbb
lock
xor
jno
in
cmpl
cmpsl
jns
adc
lods
pop
aas
out
pop
arpl
cmp
jecxz
dec
aas
mov
pop
test
fs
sbb
mov
in
rorl
dec
push
pusha
hlt
loop
adc
xchg
dec
in
push
outsl
add
imul
mov
rol
inc
sbb
loop
or
inc
mov
mov
lret
test
pop
adc
clc
shrb
lret
pop
and
mov
cmp
shr
jne
mov
or
fcomi
xchg
icebp
hlt
lods
sub
insb
lret
xor
sti
repz
mov
lret
jo
in
hlt
lods
sbb
out
or
or
xchg
out
and
mov
rclb
shrb
dec
enter
jnp
ret
jo
sbb
in
daa
push
lea
sbb
insl
mov
imul
dec
mov
into
outsb
gs
mov
int3
xor
shll
scas
mov
ja
pushf
nop
xor
das
xor
cmp
dec
push
test
xchg
loop
xchg
out
call
xor
sbb
mov
cs
add
mov
fistpl
xor
pop
push
cs
or
in
sub
outsb
cmp
lods
outsb
and
rclb
popa
movsb
dec
mov
lahf
ret
pop
stos
call
jecxz
dec
push
cmp
sarl
jp
push
mov
test
int
shl
mov
push
mov
fnstcw
cld
int3
pusha
lods
lds
movsb
pop
sub
and
js
and
loop
fists
fcomps
in
dec
jns
jge
movsb
xor
sub
cltd
add
and
mov
aas
and
adc
sar
and
mov
popa
das
js
sbbl
jbe
jne
or
pop
roll
mov
bound
insb
adc
dec
ror
insl
and
xor
std
mov
insl
mov
out
jb
mov
sbb
sub
imul
aad
cmpsb
pop
sub
loop
xchg
push
test
inc
nop
out
jmp
pop
push
cmpsl
cltd
imul
xor
xor
outsl
arpl
ljmp
outsl
frstor
pop
push
add
lods
xlat
inc
jns
loop
mov
push
adc
in
in
cmp
xor
mov
gs
repnz
std
jecxz
push
aam
xor
sub
sbb
ds
or
inc
mov
or
leave
lock
divl
sbb
bound
mov
jg
dec
inc
add
fs
pop
jmp
loopne
pop
ret
out
and
sbb
adc
xchg
icebp
dec
gs
push
insb
cwtl
adc
sbb
test
and
mov
cmp
adc
in
stos
or
xchg
mov
arpl
ja
jl
arpl
out
and
xor
add
pop
into
fistpll
sub
adc
in
add
sub
adc
shrb
cmp
sbb
sarl
sbb
shrb
mov
fwait
jae
jle
hlt
inc
insl
sub
push
mov
or
mov
and
sbb
push
in
in
cld
xor
orl
fldt
mov
xor
or
lods
mov
nop
mov
shll
xor
nop
push
inc
pop
jb
shrb
jnp
out
xor
rcl
dec
inc
xchg
or
aaa
rorb
bound
fidivrs
nop
mov
mov
rcrb
fidivs
in
nop
aaa
cmp
xchg
and
mov
push
cmpsl
xchg
fidivl
push
mulw
loop
pop
or
xor
enter
and
push
sbb
sarl
sbb
and
ss
jnp
xor
pushf
sbb
shr
or
outsl
jge
and
mov
cmp
stc
nop
xor
sub
call
push
adc
fucomp
xchg
cmp
cmp
dec
ficoms
ret
pop
into
xchg
and
mov
sbb
dec
decb
jecxz
pop
mov
cmp
jno
adc
test
sbbb
shll
mov
sub
imul
and
jae
cli
repz
les
or
iret
hlt
xlat
repz
int
sub
sbb
les
in
mov
sub
sbb
in
adc
loope
testl
mov
nop
outsb
imul
pushl
sbb
sub
push
dec
sub
cltd
pop
subb
loop
popf
pop
inc
out
decl
jbe
dec
push
sub
mov
fsubs
test
lahf
xor
and
es
xchg
pop
fnstsw
mov
in
imul
shrb
fstp
aad
push
movsb
pop
sahf
jp
popa
mov
sbb
pop
mov
cltd
mov
lcall
mov
sbb
enter
testb
jno
mov
mov
push
mov
aad
aaa
ja
bound
mov
pop
popf
jle
fadd
push
and
push
sbb
inc
rorb
nop
dec
mov
and
mov
add
jecxz
inc
inc
in
adc
xchg
sub
adc
out
out
roll
or
int3
jecxz
movsl
sti
ja
cltd
lcall
dec
lock
in
lahf
into
rcl
mov
sbb
repz
imul
dec
xchg
arpl
shll
or
and
repz
xchg
or
mul
jbe
sub
xchg
pop
sbb
pop
inc
pop
insl
mov
jp
jle
add
movsb
push
cli
divb
in
lds
mov
add
push
dec
adc
inc
out
mov
insb
or
orl
fmull
imul
lahf
dec
inc
test
hlt
pop
mov
xor
mov
loope
out
js
sbb
or
jl
cwtl
push
pop
rorl
loop
fldcw
adc
aam
test
mov
int3
fcmovu
pop
mov
ficompl
sbb
cmpps
xor
popf
xor
jbe
scas
test
add
mov
pusha
movsl
jo
rorl
divb
inc
mov
leave
es
inc
cmp
and
lods
popa
xor
dec
pop
mov
movsb
xchg
popf
jp
rorb
andl
xchg
pop
push
mov
sbb
iret
and
xchg
push
outsb
push
into
cltd
movl
loop
jge
xor
push
xchg
shll
mov
out
mov
lret
into
ljmp
ss
leave
out
lahf
mov
mov
ret
jl
dec
cmp
dec
sbb
jne
and
pop
or
testb
daa
repz
int
decb
out
mov
in
mov
cmpsb
sbb
jnp
loop
xchg
pop
subb
jbe
lods
xchg
in
lods
cld
xchg
ja
and
lret
pop
push
sbb
sbb
cmp
mov
cmp
jb
cmp
lods
pushf
mov
xor
jecxz
inc
jo
nop
cmp
xlat
push
pop
xor
jne
fidivrs
and
xchg
push
adc
xchg
loop
or
mov
icebp
inc
in
and
fnstsw
movsl
cli
mov
xor
jbe
xor
adc
imul
shll
inc
test
jo
cs
str
sub
and
adc
out
xchg
xchg
insb
cld
sbb
ss
dec
addr16
sbb
lcall
sbb
mov
jae
movsl
mov
pop
imul
xchg
cmp
pop
lea
jo
gs
dec
push
shl
fisubrs
dec
cmp
dec
xchg
cmpsl
inc
pop
mov
inc
pop
int
push
and
bound
mov
aaa
cmp
sbb
cmp
pop
inc
loop
jae
or
push
insb
mov
adc
cmp
ret
xor
xor
cld
xchg
or
cs
jecxz
mov
or
jb
pushf
rorl
lret
imul
inc
cmc
ret
scas
inc
push
xor
dec
leave
dec
xor
loope
mov
push
or
daa
dec
orb
aas
pop
pop
adc
leave
jo
mov
xchg
sbb
pushf
pop
inc
lret
sub
and
lods
pop
or
push
sbb
mov
dec
xor
add
dec
mov
and
jne
pop
inc
lret
fld
and
daa
das
adc
mov
push
nop
daa
xor
es
cmp
test
loop
mov
sbb
ret
xor
sbb
aas
dec
mov
cmc
lea
and
test
fdivrl
loop
pop
cmpsb
pop
push
out
aam
adc
push
or
mov
fidivl
jb
adcb
pop
enter
sti
jle
dec
fmuls
repz
push
inc
jg
das
xor
pop
mov
es
mov
stos
add
push
xchg
repz
mov
aad
push
sub
repz
fdivs
jno
pop
jne
mov
fs
leave
pop
loope
sbb
popl
dec
mov
dec
movsb
xor
loop
loop
test
pop
inc
mov
fneni(8087
sub
in
dec
insb
shrl
or
mov
pop
mov
push
fidivl
and
orb
sub
mov
xchg
mov
nop
icebp
or
unpcklps
mov
fs
push
loop
test
incl
sub
dec
push
mov
cmpsb
sub
outsl
cmpb
sbb
sti
ret
loope
mov
imul
or
add
dec
popa
test
cmpl
or
pop
data16
lahf
dec
insb
test
xor
lods
pop
mov
or
cmp
test
and
shll
mov
push
xchg
loop
lock
mov
mov
shll
repnz
cmp
sti
cltd
xor
pop
jo
push
aaa
push
mov
adc
sub
bound
mov
out
mov
lods
loop
push
dec
cmp
mov
test
xorb
xchg
adc
mov
and
nop
mov
aas
sub
adc
dec
mov
mov
out
int3
sahf
dec
iret
xor
pop
dec
sti
xchg
mov
push
fstp
sbb
or
and
inc
push
bound
add
rcll
movsl
xchg
xchg
in
xchg
in
inc
xor
int
xor
mov
xor
jns
loop
push
filds
adc
mov
jecxz
xor
mov
out
cli
inc
sub
dec
push
repnz
mov
dec
mov
stc
sbb
inc
repnz
jne
lods
int
mov
mov
mov
mov
scas
inc
lcall
cmc
and
idiv
xor
cmp
mov
cmp
xchg
cmp
adc
test
mov
dec
cmpsl
out
mov
jne
sbb
xchg
adc
cmc
daa
push
inc
or
loop
dec
sub
mov
sub
pop
xchg
adc
mov
inc
mov
sub
pop
jo
xor
sub
xchg
mov
call
scas
fcompl
dec
shlb
cltd
inc
enter
cld
shll
push
lods
pop
scas
dec
cld
and
push
sbb
int
jae
arpl
out
rcrb
ss
lahf
cmpsl
push
cs
xchg
inc
aas
and
adc
jbe
lods
stos
mov
jmp
leave
fsubrl
inc
stos
cmpsl
loop
popa
pop
clc
lods
shll
dec
stc
mov
jmp
int
mov
out
mov
iret
xor
dec
cmpb
rorl
sbb
pop
ljmp
pop
jno
lret
mov
mov
jbe
imul
frstor
stos
jl
iret
sbb
std
pop
loop
pusha
loopne
mov
xor
nop
add
dec
cld
ret
push
lea
or
in
shr
mov
es
cmc
imul
call
loop
pusha
pop
add
xor
nop
fisubl
out
add
push
ret
cli
pusha
test
push
inc
outsb
and
mov
ds
fstl
xchg
dec
shll
push
data16
iret
lea
or
fwait
dec
mov
jb
pushf
aas
inc
daa
and
sahf
popf
daa
push
out
sbb
cmc
lods
in
mov
mov
mulb
imul
loop
or
pop
dec
sbb
mov
addr16
add
dec
mov
adc
push
fldt
mov
adcl
push
mov
repnz
inc
mov
data16
mov
sti
sub
ja
sub
push
push
jmp
mov
arpl
std
xor
movsb
jmp
test
push
pop
mov
fcmovnb
xor
ret
jg
ret
mov
inc
call
mov
test
bound
movsb
orb
flds
mov
mov
ja
std
popa
ja
rorb
xor
dec
jne
add
arpl
imul
xchg
cmp
in
cmp
jbe
and
xchg
imul
inc
jo
int
push
ja
jbe
or
and
or
sub
or
push
lods
xor
lcall
mov
loope
out
inc
arpl
gs
add
mov
adc
adc
push
out
pop
jl
inc
jo
jo
xchg
in
test
push
mov
shl
push
fsubp
cli
out
in
or
xchg
mov
nop
mov
sahf
cs
pop
push
inc
push
sti
stos
rcrb
ret
leave
pushf
loope
aaa
popa
fdiv
push
ljmp
xchg
xor
aas
out
loop
xchg
loope
adc
clc
xchg
fsubrl
dec
xchg
loop
xlat
pop
les
in
jo
fsts
faddl
xor
loop
mov
dec
repz
mov
mov
adc
cmp
lret
jle
and
cmp
test
enter
mov
movsw
xchg
adc
pop
aaa
add
inc
fdivl
scas
mov
out
loop
fsubl
loop
sub
sbb
ds
sub
lcall
pop
cmc
into
sbb
pop
lret
sub
test
ljmp
xchg
cli
imul
rclb
mov
inc
mov
imul
aas
and
cld
or
push
aas
push
add
nop
negb
out
repnz
mov
gs
aaa
cmp
mov
add
sub
jno
and
cmp
push
jo
dec
out
add
inc
mov
faddp
jbe
lea
rcr
lahf
cli
jle
andb
jl
lea
push
mov
out
rolb
sub
shrl
cmpsl
and
lods
clc
inc
inc
sbb
fwait
jns
ret
xor
adc
lods
mov
rol
mov
iret
or
mov
cs
adc
or
daa
xchg
nop
daa
lcall
or
adc
mov
hlt
gs
jmp
dec
mov
aad
mov
mov
nop
shrb
int3
test
arpl
movsl
out
pop
pop
dec
adc
das
imull
jbe
jns
sub
pop
inc
sahf
loope
int3
lea
xrelease
pop
nop
pop
jne
sbb
out
mov
lock
add
inc
aaa
sbb
subb
mov
in
hlt
push
and
sahf
aas
cli
xor
sbbb
out
lret
ss
add
push
imul
lods
push
mov
cltd
cmp
adc
mov
sub
mov
mov
fcoms
inc
test
mov
fcomps
and
xchg
and
les
push
adc
jp
sub
xchg
and
or
cs
std
push
test
mov
lea
dec
mov
or
loop
stos
nop
sbb
jle
mov
das
cmpsl
cmp
pop
mov
enter
jns
rolb
sbb
test
fisubl
dec
push
ss
cmp
dec
scas
lret
shlb
insb
xchg
pop
xchg
in
add
scas
outsb
mov
adc
loop
mov
cmp
daa
xor
pop
add
pop
sub
fildl
lods
push
scas
lret
mov
jnp
mov
lret
insl
movsb
xchg
add
outsl
mov
cli
jae
push
mov
or
mov
out
loop
shrb
cmpsl
mov
ret
ficompl
faddl
paddusb
ss
outsl
mov
in
sub
pop
bound
and
inc
cmpsl
fwait
pop
cmp
cli
outsb
mov
mov
mov
negb
stc
and
lret
sbb
hlt
add
xor
out
cmp
dec
out
dec
pop
outsl
ljmp
dec
inc
ds
mov
mov
pop
dec
or
sbb
sub
push
and
mov
push
ret
pop
pusha
or
and
and
cmc
in
and
jle
adc
cmp
push
mov
les
test
in
popa
cmp
test
xor
shr
xchg
test
mov
imul
add
or
rcrb
stos
mov
cld
movsl
js
test
sub
shl
and
sti
cli
mov
dec
leave
out
int
test
xor
sbb
pop
push
sbb
push
rdmsr
mov
pushf
and
adc
call
lock
mov
testb
iret
xchg
ds
adcl
loope
es
mov
or
pop
and
xor
push
jecxz
mov
xchg
repnz
mov
shll
sbb
cmc
jnp
mov
sbb
std
mov
cmp
ds
loope
aas
data16
cmp
or
hlt
xor
adc
loop
dec
js
and
adc
and
stc
or
idivl
mov
mov
ret
push
xchg
cmpl
adc
fildll
pop
mov
lcall
sbb
sbb
sub
sbb
mov
sub
dec
or
and
cmp
pinsrw
scas
mov
lods
pop
xor
mov
imul
push
shl
sub
cltd
jb
jle
mov
xor
cld
adc
xor
xor
xor
mov
mov
adc
popf
sbb
cmp
aad
outsl
cmpsb
adc
xchg
dec
loope
test
addr16
push
pop
in
sbb
imul
push
lret
mov
pop
or
ljmp
and
lods
inc
cmp
lods
and
add
sub
jno
or
ret
mov
xchg
mov
popf
xchg
and
xchg
test
mov
cmp
inc
ss
int
lock
je
jg
out
orb
or
leave
mov
xor
add
pop
xchg
cltd
out
jno
in
test
and
dec
push
mov
es
neg
adc
dec
fs
into
rclb
lock
pop
lds
sub
loope
out
push
mov
jno
or
outsl
int3
outsl
clc
inc
jl
insl
jbe
adc
hlt
leave
shlb
pop
lcall
mov
xor
nop
jecxz
cmpsl
xchg
adcb
lods
push
push
into
dec
mov
sbb
xchg
pop
jp
movsb
sbb
jg
lods
mov
mov
push
popa
or
and
mov
sub
dec
data16
xchg
mov
adc
mov
push
push
stos
mov
iret
icebp
adc
xor
divb
cltd
push
push
cmc
pop
hlt
aas
ss
out
notb
add
adc
rcrb
or
movsb
sarb
loope
ror
leave
js
cmp
aad
pop
sub
xchg
mov
adc
xchg
aas
inc
adc
rclb
pop
cmp
add
lahf
aaa
pop
sti
rclb
loop
fadds
xchg
mov
mov
xor
lcall
loop
add
push
addb
repnz
add
push
or
xor
ss
out
mov
cmpsl
mov
cwtl
loop
add
lods
lock
popl
ds
outsl
mov
subps
outsl
pop
pushf
clc
hlt
and
inc
in
xlat
cmp
xor
sbb
mov
lret
out
in
outsl
sysret
and
pop
shlb
pushf
inc
sbb
dec
sahf
xchg
jno
loope
cmp
popf
cmc
lds
sbb
inc
push
aaa
mov
mov
jle
or
and
das
cmpsl
out
ljmp
mov
push
mov
jb
adc
xchg
mov
dec
mov
rcl
push
push
adc
jbe
sbb
pushf
call
and
outsl
xor
mov
and
hlt
int3
mov
lods
xor
adc
sti
push
in
xor
xchg
xchg
jmp
xchg
mov
out
jl
mov
call
sahf
test
jl
mov
jl
call
aaa
mov
adc
cltd
rcrb
xchg
jne
dec
or
mov
or
je
cmpsb
cwtl
sbb
out
mov
stos
mov
pop
lret
push
push
pop
jle
in
iret
mov
inc
mov
nop
or
mov
hlt
pop
lds
cmp
adc
jb
pop
cs
push
mov
sbb
pop
daa
stos
dec
inc
mov
sbb
dec
adc
cmc
dec
sub
mov
xchg
ja
out
or
repnz
cmp
cmp
insb
bound
add
xor
pop
dec
scas
mov
shl
pop
xchg
pop
xor
dec
pop
movsb
lahf
insb
sti
pop
pop
jmp
in
hlt
or
lret
ljmp
jmp
sbb
mov
lods
push
dec
mov
jmp
les
and
js
xchg
loope
inc
bound
test
outsb
adc
add
aaa
aaa
movzwl
push
call
lea
out
mov
iret
stos
sbb
jno
loope
jns
call
cs
dec
lret
push
loope
aam
test
int
enter
xchg
and
push
mov
ficompl
push
orl
lds
mov
shll
mov
xor
mov
pop
sub
rorb
hlt
cmpsb
pop
fldt
lods
fldl
push
mov
das
or
psubb
or
push
sub
sbb
push
outsb
stos
insl
sub
insb
out
daa
push
xorl
cltd
mov
mov
ds
and
xor
cli
mov
pop
adc
cld
sbbl
js
sub
xlat
mov
and
iret
ljmp
adc
jg
nop
orb
inc
mov
mov
je
xchg
jno
std
push
sbb
outsl
push
popf
mov
mov
movsl
and
pop
test
or
xchg
loope
cmp
std
mov
sbbl
mov
pop
scas
out
sti
ficoms
mov
rclb
dec
call
dec
dec
push
push
sub
fbstp
fcomps
loope
popf
aaa
or
push
gs
in
add
jo
mov
daa
in
into
daa
adc
lcall
leave
or
xchg
loop
stos
pmaddwd
mov
add
shlb
pop
mov
jb
arpl
inc
es
fstpt
mov
dec
dec
mov
in
nop
mov
punpckldq
cmpsl
push
mov
pop
jb
jle
cltd
sub
and
cld
push
inc
shl
cmpsl
scas
xchg
or
pop
shr
xlat
xor
loop
mov
movsb
adc
or
sbb
dec
xor
cmpsl
or
jno
mov
push
dec
xor
cmpl
outsl
pop
ljmp
cmp
cmp
in
sahf
push
add
imul
adc
mov
cmpsl
enter
in
or
pop
shlb
xor
mov
fisttpll
push
xlat
ljmp
repz
xchg
cmp
push
mov
inc
sbbl
in
cmp
dec
jo
push
and
shrl
pop
mov
xchg
movsb
fsub
xchg
cmp
cli
cmp
cwtl
pop
xor
pop
cmpsl
lret
mov
jns
test
mov
and
push
sbb
xchg
in
jg
ds
leave
push
cli
mov
inc
jle
mov
jo
lea
fiaddl
mov
pop
pop
mov
xchg
call
inc
lret
mov
cli
add
loopne
dec
sub
or
fwait
adcb
jno
rcrl
jae
and
fldenv
adc
add
push
mov
jmp
test
in
nop
mov
ror
mov
dec
and
fwait
arpl
inc
sub
cmpsl
xor
and
fstl
cltd
jl
addr16
xor
bnd
push
leave
dec
xchg
mov
loop
data16
sbb
iret
mov
nop
gs
jp
pop
jmp
jae
aas
mov
xchg
ret
jle
jge
xor
loope
sahf
cmp
jno,pt
mov
pop
push
sbb
and
daa
xor
popa
in
push
and
ljmp
jns
loope
data16
push
pusha
pusha
hlt
pop
mov
mov
int3
cltd
push
sub
lahf
xor
pop
and
ljmp
jnp
cmp
rcr
lcall
mov
and
mov
mov
sub
dec
xor
testb
mov
jae
push
push
or
xchg
pop
mov
lea
mov
xor
in
sbb
mov
sbb
adc
in
add
dec
rclb
and
or
push
sub
jo
jbe
and
pop
push
mov
das
pop
enter
add
movsl
mulps
mov
subb
fdivl
cmpsb
out
daa
push
add
jle
mov
idivl
out
icebp
push
jg
inc
outsb
mov
xchg
jecxz
test
xor
pop
push
lea
fldenv
adc
hlt
and
outsl
bound
aas
daa
loop
test
push
or
nop
add
pusha
rcr
cmp
test
pop
aaa
xchg
movsl
fistl
scas
xchg
rcr
cmp
fisttpll
xchg
imul
lock
add
inc
scas
lahf
ds
int3
mov
pop
rsqrtps
and
imulb
mov
sub
push
call
idivb
xchg
aaa
daa
xchg
sbb
dec
mov
jnp
pop
xor
imul
push
shll
cli
mov
pop
test
dec
in
mov
adc
pop
mov
xchg
add
inc
aas
shll
ds
aam
jbe
push
lods
xor
mov
pop
mov
cmp
and
hlt
movsb
adc
and
test
and
dec
adc
sub
aad
add
and
cwtl
xlat
cld
adc
xchg
orb
fisttps
sbb
sahf
xchg
push
or
pop
mov
push
jo
das
mov
and
dec
fucomp
mov
cmc
or
cmp
inc
mov
int
pop
adc
nop
lea
jno
jae
aaa
dec
adc
inc
fcoms
in
std
dec
add
xor
orb
lret
sub
xchg
jecxz
sbb
mov
pop
push
loope
inc
or
sbb
jns
data16
inc
add
xor
sub
xchg
repz
scas
sub
popa
in
leave
jnp
mov
adc
orb
fwait
push
jecxz
mov
pop
xchg
scas
cmp
inc
and
movsb
mov
pop
adc
in
js
xchg
lret
sub
mov
xchg
rcrb
loopne
cmp
das
sbb
xchg
aas
repnz
mov
inc
xor
cmpsb
std
outsb
add
add
inc
in
or
sti
mov
aad
pop
adc
xchg
sbb
mov
scas
push
roll
adc
or
xor
fiaddl
add
or
dec
mov
and
sti
inc
in
cs
mov
mov
xchg
jg
fiaddl
jno
mov
cmp
loop
pop
addb
xor
imulb
xchg
scas
loope
push
addr16
popa
notb
dec
xchg
jnp
jl
push
fwait
and
adc
mov
outsb
xchg
mov
jne
adc
sar
shll
loopne
jnp
adc
adc
mov
xchg
pop
idivb
ds
xchg
out
jp
pop
xor
data16
cmpsl
or
ljmp
mov
xor
jmp
negl
ret
cld
sub
add
dec
adc
out
jne
mov
mov
in
iret
mov
stc
scas
and
addr16
dec
ss
cwtl
add
xlat
aam
and
mov
jecxz
repnz
jns
mov
cld
cmp
xchg
in
shlb
sti
add
xor
and
jl
inc
cwtl
push
sbb
pop
jns
inc
inc
out
pop
pop
sub
test
jbe
push
mov
fwait
mov
imul
add
je
pop
mov
mov
sti
xor
nop
inc
loopne
rclb
cltd
movsl
cmp
dec
rcrb
clc
push
pop
or
stc
dec
loope
add
shrb
sbbb
lock
mov
aaa
mov
ret
ficoml
les
inc
aam
fwait
push
adc
rcrl
and
mov
mov
xchg
cmpsl
dec
loope
cld
divb
daa
mov
cltd
fsubs
lea
call
out
mov
sbb
loope
cmp
push
movsl
jo
adc
cmp
outsb
inc
cmp
aad
dec
aad
mov
xor
and
pop
mov
jns
add
adc
and
adc
sbb
sub
lods
sbb
sub
jns
lea
cmp
and
or
xor
jne
push
in
and
scas
adc
push
dec
loop
les
gs
push
sbb
lcall
popf
aad
repnz
insl
mov
push
add
rol
add
fs
xchg
pop
in
jne
fdiv
push
in
or
bound
add
jmp
lcall
xchg
imul
iret
push
pop
loop
mov
mov
or
cmc
fisubl
fninit
fcmovb
adc
mov
addr16
push
loope
mov
dec
mov
dec
fnstenv
out
sbb
and
inc
jge
fcmovnbe
out
pop
js
mov
push
cmp
inc
inc
test
test
hlt
pusha
lcall
xor
push
fucom
imul
addr16
push
pushf
insl
outsl
mov
inc
gs
sbb
xor
out
out
lock
adc
daa
in
and
xchg
xor
insb
cmp
enter
mov
dec
imul
dec
loope
ret
call
aad
sbb
sti
push
xor
mov
fs
sbb
inc
jno
imul
dec
dec
dec
and
dec
mov
or
out
pop
mov
bound
pop
aas
leave
add
pop
pop
mov
xchg
adc
daa
in
xchg
pmulhuw
sub
or
mov
ds
push
or
shl
sbb
mov
sarl
mov
lds
icebp
sbb
and
insb
cmp
je
xor
fmull
arpl
cmp
fs
arpl
cli
std
adc
mov
test
or
dec
sub
cmpsl
mov
das
sub
outsl
movsl
flds
mov
jns
lret
push
lret
sbb
and
shll
mov
out
pop
mov
sbb
xlat
cmp
loope
pop
adc
repnz
jl
sbb
or
and
ret
mov
mov
mov
pop
aad
jle
mov
inc
xchg
lret
xor
pop
into
sbb
loope
and
push
push
xlat
and
cltd
pop
cmp
inc
cmpsb
sbb
cmp
xor
fisubs
sbb
fcmovu
push
test
lcall
test
sub
daa
mov
fisubrs
loope
sbb
cmpsl
adc
inc
push
or
test
in
add
add
mov
mov
sub
adc
in
and
packsswb
mov
popf
cwtl
xchg
sub
sub
je
mov
mov
es
andb
sbb
cmp
push
cmpsb
dec
pop
cmp
mov
mov
or
shll
jp
xchg
cmp
outsl
xchg
push
dec
or
xor
loope
cmp
sub
scas
sbb
add
outsl
cmp
pop
cmp
jne
lret
loop
sub
shlb
movsb
push
loope
xchg
test
or
lea
xchg
bound
mov
and
pop
sti
cld
popf
mov
jl
jmp
push
clc
jo
add
inc
mov
addr16
rorl
rclb
sahf
cmp
ret
jle
aad
addl
push
and
jae
pop
add
addb
sbb
iret
or
pop
pop
out
je
divl
std
and
push
cld
sub
sbb
shl
or
aaa
pushf
ds
je
test
push
in
ja
enter
and
cmp
xchg
or
jbe
inc
mov
jmp
mov
ja
xchg
imul
cmp
pusha
cmpsb
xchg
mov
push
xchg
cli
loope
aas
dec
mov
out
mov
dec
inc
shll
cli
cmp
sbb
ret
mov
jne
and
dec
xchg
rep
sbb
call
adc
out
aad
loop
popa
pop
sbb
mov
mov
jne
pop
loop
mov
sub
sbb
fdivl
sub
and
fcmovne
shlb
repnz
cltd
mov
inc
xchg
dec
sbb
call
sbb
dec
or
mov
pop
fistpl
mov
dec
lcall
pop
push
push
mov
jecxz
pop
and
mov
and
dec
mov
inc
mov
xchg
mov
and
cmp
adc
jae
jo
gs
cs
add
enter
aaa
scas
add
out
in
sahf
mov
jmp
call
adc
adc
testl
sahf
sub
sar
add
fnstenvs
pop
in
out
repz
or
or
jb
lea
cmp
fwait
cmp
jmp
movsl
lock
insb
aad
cmpsb
sbb
xchg
outsb
xor
stos
dec
xor
clc
and
inc
imul
xor
push
sarb
push
dec
and
rclb
cmp
cs
jp
out
fs
and
sub
std
adc
adcl
inc
mov
loopne
paddb
jne
xor
pop
add
mov
jno
jecxz
push
inc
loope
xchg
repnz
mov
and
mov
cmp
ss
es
push
cmp
orl
push
sbb
dec
fdiv
add
mov
aaa
in
xor
xchg
sbb
sbb
mov
or
ret
mov
sbb
in
lods
movsl
fistl
sbb
cmp
jmp
mov
push
cmp
adc
loope
sbb
pop
push
sub
inc
pushf
jecxz
inc
addr16
push
push
mov
test
xchg
loope
cli
cmpsb
imul
nop
xchg
cltd
mov
sbb
cmpsb
mov
nop
arpl
and
mov
adc
cmc
addr16
xor
mov
int3
lds
jge
sub
sbb
sbb
std
cmc
in
xor
or
inc
mov
mov
popf
xor
loope
aaa
loop
aas
mov
cld
mov
pop
loope
lcall
jnp
sbb
stos
cs
jle
out
ss
xchg
mov
or
call
clc
xor
dec
xlat
mov
mov
mov
cmp
cltd
test
jg
stc
inc
rclb
sbb
clc
sahf
fnstenv
push
imul
mov
imul
inc
sub
pop
pop
nop
flds
sahf
mov
add
sbb
test
mov
loope
xchg
dec
mov
mov
in
xchg
call
dec
cmp
out
or
ss
lret
dec
hlt
jae,pn
sbb
movsb
imul
sub
shrb
and
mov
pusha
popa
loope
ret
out
daa
call
call
xchg
mov
mov
cltd
and
pop
aam
sbb
xchg
scas
push
lcall
loop
enter
inc
adc
mov
add
test
cmp
stc
xchg
pop
inc
jp
jle
xor
les
mov
das
mov
push
fildl
lcall
loop
inc
push
jge
out
push
imull
push
dec
int
fidivrl
call
and
xchg
je
rcrb
nop
aas
pop
ja
cmp
or
test
adc
or
pop
cmp
and
inc
jne
clc
out
aaa
ret
pop
dec
loope
or
cwtl
adc
imul
ja
out
in
push
cmp
xor
cmpl
loope
aaa
dec
imul
roll
push
dec
mov
fldenv
push
jns
stc
inc
in
mov
dec
sbb
pop
mov
jb
iret
popa
inc
andb
add
and
outsb
icebp
mov
sub
sub
enter
or
loopne
mov
inc
popa
xor
jecxz
pop
adc
cmpsl
aaa
subb
ficompl
fidivs
aas
aaa
xlat
shll
loope
mov
jmp
and
pushf
shlb
pop
inc
pop
lods
or
xchg
sbb
jns
xor
xchg
push
add
jecxz
adc
iret
shrl
int3
imulb
imul
jp
icebp
add
sub
pop
hlt
in
aam
and
sbb
loop
cli
ljmp
loop
inc
mov
fwait
int
cmp
insl
outsb
sarl
dec
xor
jns
sbb
cli
sub
and
xchg
mov
mov
aaa
cmp
ss
pop
adc
add
sahf
push
inc
sub
mov
xor
pop
and
jb
push
std
push
and
stc
pop
daa
outsb
scas
xchg
sbb
inc
or
sbb
and
arpl
push
and
dec
and
enter
movsb
pop
in
inc
fdivrp
fnsave
call
push
sub
adc
fisttpl
push
jns
push
subl
imul
xchg
xchg
clc
rcrb
stos
or
sbb
aas
push
jge
dec
jbe
inc
adc
insl
xor
dec
cwtl
insl
mov
sarl
orb
loop
test
stos
jecxz
hlt
mov
into
cld
enter
popa
cltd
push
imul
shl
mov
frstor
in
shll
lods
jnp
jp
adc
xor
lea
cwtl
inc
push
sub
dec
enter
jl
fs
xchg
cmp
push
js
jge
inc
jge
loop
dec
clc
or
outsb
jbe
daa
xor
mov
sbb
aam
lods
pop
pop
xchg
loope
mov
jno
sbbl
fdivl
cmpsl
lcall
push
mov
popf
or
mov
inc
and
pop
mov
lock
je
dec
mov
addr16
add
cmp
adc
loop
into
cltd
stc
jl
test
mov
push
negl
and
sub
out
inc
pop
clc
nop
lret
flds
rorl
mov
loope
inc
nop
nop
in
lcall
into
sti
adcl
clc
fsubrl
ss
dec
xor
cmp
add
mov
pop
and
pop
mov
daa
xchg
orb
mov
outsb
and
ljmp
mov
mov
xchg
loop
mov
lahf
jns
fildll
lret
push
mov
jns
cmp
jp
sbb
lret
or
sar
mov
adc
movsl
test
push
xchg
dec
xchg
cwtl
or
adc
sub
lods
add
adc
xchg
mov
jl
push
loop
rclb
es
subl
mov
xchg
in
mov
cmp
test
cmp
es
adc
scas
imul
pop
xchg
jp
jns
mov
inc
mov
pop
adc
inc
nop
jno
in
mov
popa
xlat
int
lods
repnz
inc
mov
into
loop
add
xchg
cmp
cmp
pop
xchg
mov
loop
xchg
jo
dec
adc
filds
sbb
lock
lods
inc
nop
not
daa
in
push
fisubrl
adc
gs
in
cltd
adc
xchg
in
mov
jo
mov
sub
lret
adc
pop
mov
ror
flds
and
cwtl
pop
xchg
pop
mov
ss
clc
out
fidivrs
xchg
push
fucomp
or
cmp
mov
jne
ds
sti
push
pop
jge
adc
les
jno
popa
xlat
mov
mov
push
fmuls
pop
insb
movsb
repz
mov
inc
imul
fwait
and
push
push
and
mov
in
jmp
mov
sti
sbb
xor
mov
xchg
sub
int3
test
sub
add
movsl
pop
cmpsb
lret
scas
xchg
jb
loop
push
ljmp
jecxz
mov
loop
rol
or
push
inc
jno
mov
mov
scas
fsubs
mov
xor
and
scas
lods
jno
sub
or
sub
aaa
in
call
test
and
xor
jno
mov
dec
fwait
xchg
xor
inc
xor
pop
pop
xchg
mov
incl
jb
ss
inc
sbb
sbb
call
mov
es
mov
cmp
pop
gs
push
mov
out
push
cmp
cmpb
mov
lcall
mov
fwait
inc
mov
cmp
mov
or
pop
lcall
pop
insl
leave
lds
xchg
imul
or
shlb
sub
dec
sbb
movsl
add
bswap
mov
push
mov
xchg
xor
add
adc
mov
mov
test
pop
movsl
mov
in
lahf
test
xchg
or
mov
dec
aaa
push
inc
cmpl
xor
jo
inc
lds
xchg
loope
sbb
cmp
jae
ss
outsl
or
into
je
lret
xor
mov
push
xlat
pop
mov
xchg
mov
incl
cmp
sbb
insb
mov
in
xor
pop
xcrypt-ctr
cmpsl
fldt
or
les
xor
mov
add
rorl
in
lock
dec
push
sti
loopne
xchg
jbe
pop
mov
vmaxps
int3
test
xor
rcll
cmp
loop
int
test
fimull
ja
ss
sbb
leave
test
jg
pop
call
xchg
xchg
rorb
push
and
mov
jnp
mov
jg
mov
cmpsl
inc
and
push
jnp
push
enter
in
sbb
push
inc
fwait
jl
cli
cmp
push
es
je
imulb
cs
addl
mov
dec
nop
add
and
and
rorl
loopne
cmp
mov
loope
int3
push
outsl
call
jns
in
repz
cmpsl
sbb
sbb
cmp
lret
or
mov
pop
or
int3
aaa
in
rcrl
sbb
dec
adc
pop
sbb
movsl
fwait
cli
lahf
fs
es
adc
fidivl
fsubl
in
incl
andl
fcoml
mov
mov
aam
clc
test
dec
mov
mov
rorl
jg
sti
adc
int3
push
push
imul
daa
xorl
movsl
int3
dec
adc
mull
fcomps
xchg
clc
vmovntps
and
jl
scas
jno
shlb
lcall
mov
add
cmp
cli
add
loope
mov
xlat
aaa
ror
xor
and
add
mov
sub
iret
pushf
add
mov
mov
les
push
mov
sbb
dec
aas
bound
pop
nop
add
imul
iret
rolb
scas
popa
aaa
mov
ljmp
adc
mov
cmp
and
mov
add
cmpsl
and
aam
lods
adc
mov
stc
je
addl
xchg
lock
sbb
lods
pop
gs
adc
leave
mov
mov
dec
jne
cmp
or
xchg
dec
les
jnp
or
imul
test
or
fs
adc
insb
xor
adc
xor
arpl
int
mull
xor
adc
repnz
jl
popa
scas
fs
test
mov
xor
mov
loop
or
mov
loop
mov
mov
movsb
adc
nop
in
add
mov
mov
dec
or
sub
insb
push
add
mov
shll
inc
popf
sbb
pop
sbb
cltd
adc
mov
and
sub
in
xchg
addl
mov
out
push
stos
adc
add
insb
ret
add
data16
in
lds
mov
inc
fdivl
jnp
ja
aaa
es
adc
fdivrs
push
mov
sbb
mov
js
xor
cmpsl
adc
out
lahf
ljmp
inc
cld
and
ss
adc
or
inc
mov
pop
adc
add
imul
cmp
es
xor
mov
adcb
mov
icebp
mov
dec
push
mov
and
and
lock
icebp
push
out
in
popf
cmp
xchg
pop
adc
or
mov
cmpsl
subb
pop
stc
jno
dec
push
in
dec
in
insw
loop
dec
sbb
cld
cmp
cmp
mov
leave
mov
adc
inc
loop
in
insl
loope
into
add
jno
jmp
sarl
or
gs
iret
mov
or
sbb
mov
fimuls
ljmp
pop
jbe
or
jg
sub
mov
data16
and
imul
jecxz
inc
or
or
cmp
iret
jbe
cmp
dec
jmp
push
movsl
push
data16
mov
lret
mov
fsubl
loop
mov
and
scas
or
psraw
add
cld
andb
dec
mov
in
adc
test
sub
imul
fsubrs
dec
pushf
mov
ds
cmc
pop
inc
xor
test
mov
mov
loope
repz
jle
push
mov
rcl
inc
in
xchg
imul
out
adc
lods
mov
or
pop
insl
imul
adc
out
int3
push
nop
test
mov
mov
test
sub
push
sbb
sbb
movb
inc
and
jno
loop
cmp
movsl
add
jns
fldl
xor
dec
pop
push
roll
cmp
and
lods
xchg
mov
lret
xor
popa
jae
dec
sub
inc
xor
jns
mov
cltd
out
loopne
push
mov
rorl
rolb
pop
push
add
mov
xchg
popa
mov
mov
xchg
ljmp
and
jmp
enter
ret
addb
jg
add
mov
jecxz
jl
in
xchg
mov
push
xor
mov
leave
mov
sub
jge
lds
sahf
lcall
mov
dec
jecxz
enter
idivb
ljmp
or
scas
dec
inc
mov
cmp
cmp
inc
push
mov
cld
frstor
pop
loope
call
xchg
arpl
add
loop
into
sub
jno
and
mov
testb
cwtl
cmp
pop
push
mov
daa
int
or
in
hlt
std
push
push
outsl
fadds
add
pop
mulb
mov
int3
sbb
or
pop
mov
fndisi(8087
pop
adc
inc
push
insl
jp
fdivl
pop
cmp
int
add
push
mov
xor
xor
xchg
adc
xor
pop
add
cli
lods
jecxz
push
out
xchg
pop
jle
jecxz
das
mov
dec
cmpsl
nop
rorb
cmp
scas
xor
test
xchg
rorl
std
lock
sbb
maskmovq
idivl
fcomps
mov
jno
push
mov
or
cmp
adc
cmp
clc
dec
sub
test
adc
shlb
mov
cld
inc
stc
stc
and
pushl
into
sub
inc
cwtl
loop
lds
cmp
dec
loope
es
das
xchg
gs
imul
test
mov
xor
dec
and
inc
mov
xor
mov
cmp
pop
mov
sbb
movsl
sarl
pop
pop
nop
cmpsl
pop
hlt
nop
into
jg
adc
aaa
or
int3
hlt
sub
jmp
cltd
stos
test
and
inc
and
lret
mov
mov
add
sub
push
mov
lahf
xchg
fsubp
iret
adc
lea
dec
fs
jns
scas
cmp
je
mov
xchg
sbb
push
pcmpgtd
sub
scas
cmp
ljmp
jb
dec
loop
xor
nop
pusha
movsl
in
mov
adc
xor
outsl
mov
adc
lea
xor
les
mov
movsb
and
frstpm(287
pop
inc
cmp
aaa
sub
mov
adc
pop
imul
cli
mov
andb
cmp
or
leave
nop
pop
xchg
outsl
test
in
jo
or
adc
dec
or
into
outsl
mov
fs
jb
sbb
fwait
getsec
loop
xor
push
jns
rol
xchg
mov
cmp
fsubs
xchg
mov
pop
and
popf
daa
les
inc
lret
int3
fldcw
xchg
in
sbb
cmp
repnz
sbb
lods
dec
mov
inc
or
pop
inc
ljmp
sub
aaa
shrb
cmp
sahf
or
loop
repnz
sbb
pop
push
call
xchg
sub
xchg
mov
mov
shll
dec
ja
aaa
rorl
sbb
iret
or
cmp
movsb
xchg
addr16
cmp
cmpl
aad
cmpsl
jns
dec
cmp
jae
jne
xlat
cmpb
mov
nop
cmp
insl
mov
mov
fnstcw
cwtl
mov
fucomp
iret
adc
push
xchg
nop
mov
push
lret
lds
xchg
daa
mov
pop
xchg
pop
mov
outsb
pushf
pop
mov
cmp
xchg
daa
xchg
add
orb
movsl
mov
call
push
and
or
and
std
in
xchg
cmpb
fwait
push
leave
push
mov
iret
loop
adc
push
dec
outsb
js
imul
daa
cmpsl
repz
test
loop
jnp
xor
and
bound
fimuls
js
pop
loope
xor
or
lods
cmp
rcrb
pop
cld
push
push
jo
orl
dec
rclb
call
fnstcw
add
scas
lret
into
out
mov
imul
pop
int3
pop
outsl
ret
jg
arpl
mov
inc
std
adc
adc
fmull
pop
lcall
xor
sbb
xor
cmp
push
lods
add
or
cmpsb
sub
lds
xchg
cmp
fisubl
jnp
xchg
sub
sbb
sub
and
jno,pn
les
xchg
mov
mov
dec
jne
cld
sbb
push
ds
dec
loope
sub
outsl
jns
xor
imul
or
ret
mov
test
pop
outsb
out
sarb
in
or
les
xchg
push
hlt
pop
mov
jb
stos
push
icebp
in
lret
or
addr16
popw
int
cmp
sbbl
roll
mov
ss
mov
push
lock
ret
xchg
and
sub
not
mov
ss
cmp
xlat
cld
adc
dec
jns
outsl
repnz
inc
ret
cmp
leave
aaa
and
jge
or
in
xor
adc
loope
mov
test
xlat
xchg
push
dec
loopne
cli
jg
mov
dec
pop
les
in
stos
mov
jbe
pushf
ret
and
mov
rorl
subb
scas
dec
mull
adc
mov
or
icebp
pop
mov
mov
test
mov
out
push
sbb
inc
xchg
pop
xlat
sub
jne
dec
mov
sub
jb
fimuls
adc
imul
ds
bound
in
aaa
mov
push
pop
out
movsb
pop
cmp
cmp
out
negb
inc
mov
fsubr
cmp
mov
adc
sbb
xchg
popa
sub
cmp
out
and
adc
sub
imul
or
sbb
sbb
xor
sbb
iret
imul
lsl
leave
mov
insl
ljmp
pushf
aaa
adc
and
jbe
mov
fistps
orl
mov
pushl
test
jnp
xor
pop
lea
cmp
loop
sbb
leave
ret
fistpll
pop
add
inc
sub
mov
xor
leave
cld
aam
icebp
in
fcoms
ljmp
and
loop
hlt
pop
xorb
int
and
mov
fsubs
pop
mov
and
aad
mov
out
aad
pop
fsubr
mov
fcmovbe
cli
cli
loope
mov
roll
xchg
fistps
mov
mov
push
shrl
inc
cmp
jp
jb
and
cmpb
push
xor
xor
fldt
loop
lods
cmpsl
mov
gs
xchg
push
xor
xor
loop
cmp
jae
mov
lods
mov
sub
hlt
mov
fcoml
mov
jmp
cmpsl
xor
xchg
outsl
mov
mov
je
fcompl
icebp
cmp
scas
xchg
add
add
jno
in
push
loop
adc
push
data16
push
pop
andl
dec
sarb
cmp
lea
cmp
shlb
push
and
adc
mov
test
cli
push
loop
mov
dec
push
xorb
inc
in
icebp
mov
pop
fnstsw
xlat
out
jnp
xlat
aaa
or
jp
push
scas
push
imul
xor
cmp
xlat
in
lock
mov
leave
or
push
pusha
mov
fidivrl
xchg
sbb
aaa
sbb
cwtl
cmp
loope
xor
cmpsl
inc
imul
or
outsl
jnp
out
mov
mov
mov
dec
cmp
sub
mov
push
mov
faddp
movl
sbb
les
push
fwait
shl
mov
lds
jno
mov
loope
xor
mov
and
or
xor
or
push
aaa
sbb
push
xchg
das
cmp
sbbb
adc
xor
hlt
adc
enter
ror
gs
add
out
aas
nop
js
movsl
or
in
mov
scas
loope
pop
out
add
dec
stos
test
lcall
sbb
xor
cmp
in
sbb
fcomp
lret
lods
jl
xchg
fwait
and
cmp
jbe
mov
test
push
mov
cmp
movlps
arpl
movsb
push
call
mov
jne
sbb
ds
out
sbb
mov
pop
mov
xor
xchg
mov
shlb
jg
mov
andb
rcrl
xlat
mov
or
push
or
mov
fldcw
cmpb
movsb
addps
xchg
push
mov
or
mov
cmc
push
movsl
xor
mov
xorb
mov
sbb
dec
movsl
or
sub
jl
outsb
stc
adc
mov
addb
mov
or
mov
pop
movsl
jecxz
xor
loop
ret
stos
jmp
adc
cmp
sub
in
in
mulb
dec
push
and
shrl
mov
adcb
sub
outsl
push
dec
daa
js
or
push
aad
mov
in
add
xor
loope
push
pop
cwtl
ja
aas
out
clc
scas
sarl
mov
shlb
sbbb
adc
lock
pop
in
or
shll
das
jmp
pop
inc
and
pop
and
lds
ret
xchg
inc
outsl
fcomps
adc
jbe
cmp
bound
push
xor
sahf
cmp
sbb
movsl
inc
jle
aad
mov
or
xchg
xor
xchg
test
daa
adc
mov
int
xor
push
in
loop
mov
xchg
aaa
repnz
shl
inc
shll
push
xor
sub
mov
mov
shlb
loop
add
out
mov
and
sub
jns
lods
mov
jo
aaa
cmp
adc
imul
call
out
loope
push
loope
sub
das
icebp
stc
dec
mov
push
push
or
mov
and
das
loop
mov
push
mov
cltd
jns
cmc
inc
test
js
cmpsl
loop
jne
mov
bound
jp
fisubrl
movsl
fs
pusha
loope
movsl
repz
mov
mov
xchg
dec
xor
rcr
push
movsb
sbbb
dec
into
xor
inc
addb
inc
jnp
adc
and
and
sbb
insb
and
ds
js
repnz
push
in
lahf
cld
lock
fs
cltd
sub
inc
sbb
loop
cmp
fs
inc
loope
and
shrl
aas
nop
andl
clts
jns
mov
and
xchg
loop
sarb
out
xchg
cmp
pop
xchg
jecxz
loop
les
das
dec
push
orl
adc
mov
inc
out
sar
sub
bound
mov
outsl
shll
mov
fldcw
test
pop
cmp
int3
or
sub
jmp
xor
test
fldenv
repz
in
sbb
aas
or
lods
loop
jecxz
shlb
mov
mov
rclb
mov
push
lahf
lods
out
dec
sub
les
pop
flds
das
loope
pop
rolb
pop
notb
js
pop
dec
add
mov
mov
aaa
lock
cli
mov
test
pop
test
xlat
sbb
mov
stos
stos
xchg
mov
xor
cmc
xchg
enter
mov
mov
enter
in
sbb
xchg
inc
push
in
mov
mov
xor
xchg
fwait
movsl
pop
sti
cmp
jns
loop
cmp
mov
testb
mov
inc
cli
ja
cld
xchg
lock
xor
xlat
xchg
push
inc
sbb
mov
xor
call
std
mov
pop
and
sbb
loop
int
std
cmpsl
lds
add
test
push
mov
mov
addb
fimuls
jbe
mov
in
sbb
inc
and
roll
insl
push
in
jle
fimuls
jg
and
aas
mov
jl
cmp
xchg
pop
mov
out
clc
inc
cmp
lods
daa
in
mov
rorl
out
iret
popf
outsb
push
nop
pop
mov
dec
imul
notb
mov
in
xor
cmp
loop
mov
xchg
sbb
mov
sbb
mov
dec
rclb
jo
xchg
and
mov
insb
mov
push
or
ret
push
in
outsl
stos
jb
shlb
sub
sub
inc
lcall
mov
jno
loop
int3
movb
test
jb
add
test
mov
and
xcrypt-ctr
cmpsl
lahf
mov
add
pop
jl
scas
mov
and
pusha
mov
push
pop
es
neg
jecxz
push
add
pop
pop
lcall
pop
in
hlt
outsb
mov
adc
rcl
push
pusha
mov
aaa
popa
push
cmp
out
jns
pop
add
sub
fmull
mov
lods
cmp
adc
nop
lret
mov
pop
mov
loopne
daa
rcrl
pop
loop
xchg
bound
inc
inc
test
and
mov
cli
push
pcmpeqd
lea
lret
add
push
pop
sbb
loope
xor
sti
insl
mov
std
mov
divb
test
xchg
jne
nop
cmc
mov
push
xor
rcrb
cmp
add
xorl
push
aas
lock
mov
je
out
push
add
arpl
adc
fwait
wbinvd
inc
mov
mov
ljmp
daa
mov
and
hlt
into
ss
outsb
pop
mov
xor
cmp
int
std
jecxz
push
into
dec
xchg
loopne
imul
push
outsb
xchg
lret
push
lods
prefetchw
add
ds
in
push
dec
xor
or
pushf
aam
mov
ss
cmp
xlat
lds
int3
mov
ja
jnp
outsb
pop
add
jle
xchg
sahf
xchg
pop
rorl
pop
movlhps
mov
inc
mov
pushf
mov
or
xorl
shrl
add
jecxz
xor
mov
loop
dec
mov
or
sub
fisttpll
scas
outsb
and
sub
imul
lea
inc
cmpsl
or
pop
das
pusha
sti
out
lret
push
xor
and
adc
cld
fnstcw
mov
push
xor
mov
sbb
nop
mov
add
xor
orl
sqrtps
mov
and
mov
xchg
rol
test
mov
lret
and
push
jno
and
loop
push
dec
mov
adc
or
loop
xor
fidivrl
loope
inc
jb
scas
push
popf
outsl
faddl
aaa
imul
push
mov
and
mov
outsb
adc
dec
les
test
pop
lret
or
ja
lds
in
pop
jo
and
sub
sbb
pop
scas
jns
out
imul
loop
outsb
stos
adc
test
adc
cmp
mov
cli
jp
jg
fldenv
jg
arpl
add
and
ss
fcmovnbe
mov
inc
pop
bound
loop
in
or
dec
clc
inc
pop
push
adc
mov
push
mov
xor
push
dec
xor
in
scas
mov
shll
loop
xlat
push
xchg
xorb
stos
mov
inc
inc
sub
fildl
pop
pop
lods
loope
sbb
ljmp
push
push
outsl
insb
dec
cmpsl
cli
sbb
pop
sbb
mov
dec
pop
mov
loop
lcall
mov
cmp
imul
into
mov
lods
pop
mov
mov
rclb
data16
iret
mov
test
dec
into
sbbl
adc
cld
xor
jecxz
jo
xchg
sbb
sub
pop
push
in
rcrl
out
dec
mov
arpl
and
xchg
adc
sbb
test
das
inc
pop
shll
push
test
hlt
ds
push
pusha
stc
xchg
and
mov
aas
xchg
or
stos
movsl
popf
or
mov
sbb
push
add
push
xchg
cmpb
loope
cld
out
adc
stos
pushf
outsb
pop
aaa
icebp
add
mov
gs
ret
sbb
mov
pop
sbb
xor
lds
test
cltd
int3
pushf
jp
call
lcall
xor
sti
fwait
mov
nop
sbb
sub
test
add
and
xor
jmp
fnstenv
xchg
jecxz
mov
adc
and
and
or
mov
inc
xchg
loopne
popl
push
and
xor
and
lock
out
aad
shlb
rorl
icebp
ljmp
mov
push
mov
adc
mov
and
adc
stos
psrad
insl
loop,pt
aam
add
adc
cmp
nop
sub
sub
adc
add
mov
insl
xor
jno
sub
es
in
xchg
mov
rcr
mov
outsl
mov
movsl
and
shlb
lds
mov
xchg
sbb
mov
test
mov
popf
iret
imul
in
shrl
rcrl
in
bound
jo
push
cmp
ss
test
movsl
dec
jno
loope
mov
sub
lods
pop
gs
stc
negb
int
popf
cmp
jg
hlt
xor
fstps
mov
icebp
fwait
dec
mov
push
and
jl
inc
dec
ljmp
mov
inc
cld
repnz
lret
inc
push
sbb
mov
mov
lods
aam
xchg
pop
in
mov
roll
shrl
or
cmp
sbb
mov
lret
lret
and
mov
jae
aaa
sbb
cmpb
mov
and
out
dec
mov
ret
or
or
shrb
insl
nop
and
mov
pop
arpl
out
ret
adc
xchg
std
xor
movsl
jne
mov
cmp
shl
inc
out
pop
pop
and
ret
rorb
loop
mov
rcrl
and
mov
dec
mov
mov
pusha
fwait
push
and
ss
mov
outsl
xor
push
pop
jg
in
jae,pt
jbe
lea
je
shll
test
insl
mov
stc
inc
xchg
dec
sbb
in
out
test
cmp
jb
inc
pop
pop
mov
and
sub
inc
stos
iret
fildll
shll
cwtl
aad
iret
or
aam
in
jo
adc
add
popa
out
icebp
push
push
jne
jno
jb
or
scas
jo
in
push
lods
rorl
pop
lcall
arpl
jnp
outsl
cltd
dec
jecxz
cmp
mov
cmp
xor
mov
pop
icebp
and
cmp
mov
jae
mov
pop
sbb
add
inc
mov
cmp
rol
out
pop
rclb
inc
mov
out
out
loope
push
mov
fidivl
test
cmp
mov
lcall
iret
std
push
and
inc
shrl
add
pop
pop
and
and
pop
test
and
mov
jp
repnz
ljmp
mov
mov
mov
dec
sub
dec
mov
and
adc
cmp
and
dec
dec
pop
outsl
leave
dec
push
xchg
sbb
rol
and
mov
rcr
loop
cmpsl
mov
xor
xchg
push
and
or
mov
test
dec
adc
sub
pop
or
xchg
cs
or
aad
add
out
push
add
pushf
sbb
mov
mov
mov
data16
mov
test
sbb
repnz
lods
xchg
aad
fsubrs
pop
xchg
inc
and
mov
iret
loop
sbb
fcomi
dec
scas
and
arpl
mov
je
jns
mov
lret
shrl
push
push
pop
fsubs
mov
fidivs
insl
or
nop
es
xor
sub
add
sbb
in
clc
mov
setno
imul
add
sbb
out
mov
out
int
xchg
push
icebp
gs
popa
sbb
sarl
leave
pop
xor
pushf
cltd
cs
out
mov
pop
adc
in
out
fists
sbb
add
ds
inc
icebp
loop
jbe
nop
leave
mov
jns
inc
cmp
repz
fs
mov
mov
jno
jns
push
add
or
dec
nop
pop
inc
xor
jmp
sub
stos
xlat
cmp
pop
sub
movsl
add
mov
mov
imul
nop
push
push
jmp
outsl
jno
dec
ss
sbb
out
gs
and
dec
fcoms
iret
xchg
inc
adc
push
adc
jecxz
loopne
and
dec
lahf
ss
nop
aad
mov
mov
or
sub
outsb
adcb
or
sub
sbb
imul
data16
sbb
lods
fcomp
outsb
loope
in
enter
inc
clc
cmp
inc
sti
inc
aas
push
adc
jo
inc
hlt
mov
loope
and
xor
aam
pop
addr16
ret
jp
pusha
sub
std
loop
stos
cmp
stos
xchg
inc
in
fidivrs
jbe
pop
ljmp
jle
pop
iret
sbb
inc
cmpsb
adc
daa
cld
into
mov
mov
sub
imul
aas
in
cld
adc
pop
pop
fnstenv
mov
in
and
int
aas
adc
loope
inc
cmp
mov
pop
mov
mov
jb
cmp
push
dec
pop
xlat
or
pop
cmpsl
xor
dec
loope
mov
ljmp
lcall
inc
sub
rclb
pop
xchg
and
loop
outsb
test
xchg
fstl
scas
jbe
dec
stc
fcmovnb
ficoms
loope
jg
cmc
jecxz
mov
add
jns
fsubs
mov
out
dec
mov
fs
loope
mov
adc
sbb
mov
inc
pop
and
movl
fmul
xor
sub
adc
imul
and
mov
jo
jne
push
adc
xor
sahf
mov
sub
fiadds
inc
nop
stos
inc
sbb
jns
subps
outsl
je
dec
lods
xchg
mov
rorl
jle
adc
cmp
insb
mov
and
ss
repnz
loope
cmc
pop
frstor
xchg
cmp
popf
int
push
xor
jle
inc
adc
jb
pusha
inc
adc
cmp
jle
pusha
int3
and
cmpsb
clc
rcll
shlb
cld
sbb
sub
or
das
dec
xchg
jl
daa
aam
mov
inc
inc
jne
cmp
mov
fldenv
repnz
adc
sub
and
cmp
loope
inc
cmp
rol
mov
sub
pop
lret
xor
dec
add
push
mov
pop
jecxz
or
in
scas
fists
notl
cmp
movb
mov
sbb
mov
mov
stos
divb
and
jg
cli
xchg
out
mov
mov
fwait
rorl
adc
iret
jo
lcall
aad
adcb
sbb
or
cmp
dec
fmuls
sbb
shll
mov
call
mov
add
lods
or
pop
je
pusha
mov
adc
jae
in
bound
rorl
push
xor
call
movsb
sub
lcall
mov
jns
imul
imulb
add
inc
pop
and
add
jl
adc
arpl
mov
and
scas
outsl
xor
mov
test
inc
pop
pop
mov
sub
cmpsl
and
mov
ret
xor
ret
aaa
cmpl
jo
into
test
int3
test
pop
loope
push
mov
jae
loop
dec
decl
inc
lods
sub
push
sbb
push
cmp
and
int
aad
test
dec
pop
pusha
arpl
sub
pushf
jp
and
ss
test
sbb
pop
jbe
aas
and
jmp
js
enter
or
leave
jmp
icebp
sub
loop,pn
and
and
data16
and
adc
inc
mov
frstor
push
mov
adc
add
movsb
stc
pop
test
mov
movsb
leave
xchg
adc
lea
ret
mov
in
cmp
cmp
loop,pn
aas
pushf
sahf
xor
mov
decl
aad
cld
lret
or
stc
out
jno
test
ljmp
cmp
xor
push
nop
push
cmp
sub
ds
mov
cmc
mov
mov
jb
aaa
test
sub
jno
inc
cmpsl
pop
shlb
mov
fsubr
mov
cltd
mov
dec
nop
stos
pop
push
dec
mov
pushf
notb
jne
push
xor
int3
jb
inc
rcll
in
jl
and
daa
ret
mov
push
jae
push
dec
pushf
bound
cltd
mov
lea
iret
push
negb
jne
xor
add
mov
loop
imul
xor
frstor
cli
cmp
mov
xchg
shrd
mov
dec
xlat
mov
add
in
dec
divb
in
mov
stos
and
or
lahf
sbb
inc
std
jl
mov
insb
xchg
pop
fildll
pop
test
dec
pop
dec
push
jecxz
dec
xchg
or
adc
sti
ss
mov
pop
movsl
aam
mov
push
shl
mov
mov
fcmovnbe
cmpsb
mov
xchg
add
popf
cmp
sbb
aaa
ficompl
daa
in
add
sbb
and
xor
dec
lock
xchg
adc
or
mov
fnstcw
and
xor
loop
nop
loope
mov
stos
inc
std
jno
xchg
cmp
mov
popf
push
rorb
sbb
dec
scas
pushf
push
insl
or
mov
push
int3
sahf
jo
xchg
or
stos
adc
movsl
cmpsb
add
inc
loop
in
lcall
shll
pop
outsb
sarb
js
pop
and
les
push
inc
mov
inc
dec
xor
les
sbb
les
out
cli
fistl
mov
stc
dec
imul
into
lcall
rorl
push
xor
cmc
pusha
and
and
shrd
pop
mov
out
or
push
cmp
pop
mov
cmc
insl
jg
aam
xor
or
xchg
sub
cmp
mov
aam
test
mov
loope
add
dec
cli
jae
movsl
inc
pop
cmp
adcl
cmp
out
mov
jns
mov
addr16
xor
aas
dec
pop
data16
push
jae
outsl
cltd
and
in
rclb
inc
inc
lret
push
push
jge
std
in
loop
lea
sub
or
xor
sub
jns
in
es
cli
insl
aam
mul
cltd
pop
mov
cmpsb
xchg
pushf
rcrb
mull
es
push
inc
add
xor
sbb
mov
cltd
hlt
ret
out
sub
mov
insb
loop
out
push
imul
add
dec
sub
andb
mov
shlb
imul
inc
dec
inc
cmpsl
sub
cmpsl
mov
push
fwait
loop
cmp
ds
pushf
and
mov
lcall
aaa
xchg
outsl
loop
aam
push
mov
sub
mov
std
pop
adc
adc
push
stos
and
push
mov
sbb
loop
push
je
popa
and
jmp
or
enter
outsb
lods
mov
adc
jbe
imul
sub
cmp
add
xor
pop
dec
add
jecxz
pop
sti
mov
push
adc
data16
xchg
fists
in
popa
loope
mov
xlat
jb
mov
and
mov
jl
and
inc
mov
jle
loope
mov
bound
sti
ret
push
push
adc
mov
sub
sub
xlat
sub
adc
mov
jno
mov
imul
mov
xchg
mov
test
cmp
stos
mov
and
xchg
ret
daa
mov
sbbb
loope,pt
cmp
mov
pop
inc
movsl
mull
mov
loop
and
dec
out
sub
lcall
ret
in
jno
gs
and
enter
cmp
in
jno
add
aaa
test
mov
mov
dec
std
cld
mov
add
mov
cltd
pop
cmp
js
inc
pop
mov
pop
jb
cmpsl
out
push
jl
push
dec
push
mulb
fwait
mov
ss
shlb
dec
sbb
and
mov
mov
add
jne
pusha
ss
pop
xor
cmc
cmp
fmulp
jmp
loop
xchg
add
dec
fbstp
jl
xchg
inc
mov
fcmovu
sbb
arpl
cmp
xchg
enter
les
jge
adc
or
xchg
daa
nop
push
inc
mov
loope
rorl
pop
add
cmp
and
jb
dec
dec
pushf
cli
sbb
dec
out
loop
pusha
or
lds
or
mov
out
jns
shlb
loope
add
sub
xchg
pushf
mov
dec
adcl
push
lods
xor
aad
sbb
mov
xor
adc
iret
cltd
and
jns
lock
loope
mov
ret
adc
sub
out
cld
jle
imul
mov
pop
sbb
movsl
dec
sbb
nop
sahf
mov
jle
in
xchg
fcmove
data16
and
add
lock
jns
cmp
and
in
insl
pop
mov
push
xchg
jp
loope
xchg
clc
dec
cld
ss
sti
jmp
xchg
adc
mov
addb
cmpsl
lret
xor
mov
icebp
in
mulb
inc
and
loop
xor
popa
xor
adc
and
test
movsb
dec
iret
jmp
js
pop
push
cmp
pushf
push
cmpsl
jl
bound
sbb
sub
out
xchg
or
pop
sub
outsl
fs
outsb
sbb
repnz
repz
cmc
add
add
mov
lods
mov
pop
sub
pop
movsb
roll
shlb
fdivrs
jmp
out
data16
cmpsl
pop
mov
hlt
mov
stc
add
inc
mov
cli
gs
mov
xlat
and
and
jecxz
bound
sbb
mov
sub
xor
lods
std
adc
ror
loope
mov
in
mov
mov
xor
mov
adc
pushf
mov
jb
int3
dec
fidivl
arpl
mov
mov
xchg
xchg
cmp
popf
out
cmc
leave
xchg
lods
rolb
jae
or
int
mov
insl
movsb
dec
mov
das
dec
pushf
lock
out
add
bswap
jecxz
mov
mov
je
and
xchg
outsl
push
mov
jb
xor
add
ret
loop
lea
negl
xchg
xchg
out
xchg
mov
push
in
repnz
es
cs
push
mov
mov
lock
and
ja
pushf
and
or
xor
test
outsl
inc
mov
sbb
loope
divb
mov
aaa
adc
test
and
push
pop
out
fdivl
rcrl
in
call
or
xchg
sbb
loope
scas
imul
jle
jo
bound
ds
sub
in
fimuls
xorb
push
out
jns
fs
gs
pop
push
pushf
notl
fiadds
or
or
movswl
int
fnstenv
loope
cmp
call
loop
call
test
imul
xchg
jne
xchg
ficoml
cmp
or
and
lret
cli
test
push
add
ds
int3
cmp
adc
cmp
scas
je
and
sbb
aam
or
mov
jle
sbb
aam
xor
stos
sahf
hlt
mov
xchg
add
mov
in
out
imul
xchg
pop
cmp
scas
mov
and
jo
rcll
lds
out
xchg
sbb
add
in
mov
loop
call
insl
mov
test
lcall
out
popf
cmp
fildl
dec
add
lods
mov
fistps
and
incl
aam
loop
mov
mov
pushf
mov
sub
inc
mov
fucom
adc
fisubrs
sbb
push
push
cmp
mov
iret
loop
xchg
xchg
inc
and
sub
push
out
sbb
and
in
inc
xor
out
dec
inc
lret
sub
fwait
jns
mov
sub
and
insb
jbe
mov
movsb
mov
imul
cs
pop
push
sarl
pushf
insl
mov
pop
aaa
mov
vsqrtps
in
lret
lock
lret
or
jp
mov
cltd
mov
pop
fdivr
or
adc
daa
sub
push
push
loope
sub
shr
pop
sub
and
call
cmp
movsb
pusha
sub
mov
fwait
add
or
xchg
sub
movsl
scas
push
movl
sbb
cwtl
sub
cs
sbb
push
lcall
test
inc
xor
cmp
outsl
pop
ds
movsb
iret
add
pop
mov
xchg
test
mov
js
adc
loope
out
and
jae
cmp
mov
scas
xchg
sbb
xchg
mov
jge
mov
cmpsb
fadd
and
leave
xor
mov
add
push
test
mov
push
sub
jle
xor
imul
xlat
pushf
popf
mov
pop
in
sub
cmp
call
pop
enter
movsb
je
out
xchg
adc
sub
mov
or
jmp
inc
and
data16
icebp
jle
divb
push
ds
in
push
jbe
cmpsl
inc
xchg
out
inc
das
xor
sbb
lods
xchg
mov
add
arpl
push
dec
fisttpl
faddl
ljmp
push
repz
sti
push
adc
mov
add
cli
jge
jno
pop
sub
int
ficoml
add
jns
outsb
aad
nop
into
xor
cmp
mov
cmc
mov
inc
xor
iret
out
ror
jmp
xor
sub
sub
jb
xor
mov
xor
pop
shll
ljmp
ljmp
pop
xchg
hlt
adc
mov
inc
popf
lods
inc
repz
lcall
aas
je
add
call
outsl
lds
push
adc
mov
pop
mov
push
jns
int
int3
ret
push
jnp
cmp
mov
push
rol
mov
rorb
adc
mov
pop
sub
jp
dec
sbb
mov
nop
ljmp
shrl
inc
leave
data16
mov
hlt
inc
fwait
cltd
add
mov
outsb
ljmp
xchg
mov
sub
lret
outsl
pop
add
sub
dec
xor
mov
cltd
jl
in
mov
loope
xor
rcrl
loop
out
push
pusha
adc
scas
adc
fldl
mov
mov
mov
aam
int3
xor
popa
into
fisubl
fwait
test
xchg
xor
adc
sub
outsl
pop
test
jbe
mov
jb
lahf
cmp
es
aas
lock
mov
sbb
mov
inc
aam
outsb
xchg
mov
fucom
cwtl
ret
test
fwait
xchg
xchg
cmp
push
sti
sahf
and
pushf
and
in
adcb
adc
aam
adc
jo
gs
xor
push
rcll
cmp
daa
mov
jno
les
into
repz
out
aas
sbb
inc
lahf
gs
nop
push
cmp
divb
test
jg
xchg
jae
cmpsb
jg
cmovl
mov
and
fidivl
xchg
cmp
push
cld
mov
and
leave
movaps
sbb
in
pushf
imul
mov
sub
pop
call
mov
nop
push
or
xchg
jbe
and
jb
adc
dec
stos
outsb
and
sbb
nop
jno
iret
loop
imul
arpl
pop
orb
fstl
and
sahf
pusha
mov
fidivrs
adcb
cmp
into
ror
movsb
dec
cmp
cmpsl
stc
xor
inc
jmp
add
adc
in
movsb
push
mov
adc
sub
push
push
rcll
clc
fs
data16
pop
stc
or
adcl
mov
or
push
lret
adc
cli
pop
mov
add
popf
push
push
xchg
xor
mov
ljmp
add
lret
pop
sub
lods
enter
cli
or
push
scas
pop
dec
fnstenv
jg
xchg
ljmp
cmp
xchg
pop
jne
jle
stos
sub
dec
dec
loope
inc
cmp
ljmp
mov
and
push
icebp
es
fidivs
leave
mov
movsb
mov
jecxz
inc
jae
out
lcall
cmp
rcr
sbb
das
adc
mov
xchg
addr16
cltd
es
movsl
xchg
and
and
test
xchg
rclb
lds
cmp
xorb
push
push
in
dec
mov
das
xchg
das
push
in
xchg
cld
sbb
mov
jns
adc
sbb
jne
leave
aad
fisubl
loop
inc
imul
ret
inc
xor
repz
pusha
aam
dec
jl
arpl
stos
lret
sbb
mov
jle
jne
out
rorl
inc
cld
sub
cmp
pop
add
push
outsl
dec
or
movq
add
sbb
dec
ss
je
dec
loop
int3
push
inc
and
fdivrl
xor
pop
ljmp
inc
loop
or
or
add
loope
add
and
mov
mov
mov
jae
or
bound
test
pusha
xchg
repz
pop
cmp
lods
iret
fisubs
sub
pop
orl
cmpsl
inc
inc
test
out
cmc
in
cmp
daa
sahf
loope
jno
subb
sar
fbstp
mov
push
shl
cmpsl
iret
ss
mov
adc
xchg
adc
nop
jb
out
pop
push
into
mov
loop
sbbb
cs
add
inc
inc
cmp
cwtl
inc
push
add
inc
dec
data16
pop
arpl
daa
int
sub
jmp
jl
cmpsl
stos
mov
mov
push
lcall
pop
mov
lret
xor
test
jecxz
bound
push
out
iret
ficoms
sbb
mov
push
das
lcall
dec
pop
lea
mov
rorb
jge
mov
popa
fiaddl
addl
inc
pop
movsl
dec
loop
shl
dec
push
test
vpshlq
sbb
sub
test
js
and
addr16
push
mov
test
std
loop
clc
nop
cmpsl
fistpl
lret
jo
pop
sub
int
cli
cmp
rcl
insl
loope
xor
xchg
nop
stos
or
jl
push
xchg
pusha
jb
xor
mov
aas
dec
daa
mov
dec
adc
mov
sahf
out
mov
shl
sbb
in
int3
movzbl
xchg
adc
cmp
adc
xchg
ss
or
pop
ss
push
and
sbbl
push
cmpb
jbe
push
mov
mov
cmp
in
adc
mov
add
test
mov
arpl
jmp
jbe
scas
pop
stos
and
pushf
sub
xchg
pop
adc
mov
mov
adc
insl
bound
xor
test
push
jo
adc
pusha
dec
jns,pn
push
pusha
outsl
jno
fidivs
xchg
dec
dec
push
fsts
out
pop
mov
arpl
jb
loop
pop
movsb
or
jbe
adc
push
push
inc
lcall
je
repnz
and
cmp
mov
jecxz
push
and
pusha
or
in
scas
mov
pushf
mov
cmpsb
push
lds
sbb
test
mov
mov
cmp
mov
leave
rolb
jns
fadd
pop
sti
cltd
lock
outsl
pop
std
adc
xchg
lock
sbb
pop
dec
jne
arpl
int3
roll
divl
mov
test
inc
int
icebp
in
loop
dec
out
pop
and
xchg
das
pop
mul
pop
dec
xor
push
les
mov
insb
loopne
mov
pop
jo
xor
and
loope
jecxz
repz
fisttpl
xchg
xchg
addb
mov
bound
or
test
lret
hlt
jo
mov
cmp
jo
xor
mov
inc
jecxz
mov
negb
mov
in
daa
shr
test
cltd
or
cmp
ss
in
sub
loop
test
mov
sahf
or
adc
aam
pop
aaa
loop
dec
movsb
inc
leave
mov
stc
mov
mov
jg
xchg
sbb
sub
imul
ljmp
or
jecxz
ljmp
push
outsl
pop
addb
pop
cmp
inc
pusha
loop
insb
mov
fsubs
outsl
cmpsl
fcoml
add
inc
and
movsl
cltd
or
outsl
adc
pop
movsl
mov
push
mov
xchg
dec
adc
in
mov
and
daa
add
pop
out
movsb
adc
or
loop
cmp
and
insl
push
lcall
jno
dec
mov
inc
loope
insb
in
icebp
inc
push
jb
out
mov
pop
inc
and
mov
out
lock
jp
sbbl
xchg
lcall
nop
rclb
aaa
popa
aaa
fnsave
mov
push
jo
loop
mov
add
push
sub
or
push
out
push
sub
clc
xchg
jae
jns
loope
pop
cli
lea
xor
sbb
mov
outsl
mov
mov
jecxz
dec
cld
ds
inc
aad
iret
mov
push
sub
cmp
scas
in
jmp
cmpsl
rcl
push
pop
sub
and
lods
add
jecxz
jnp
xor
je
pop
mov
or
xor
in
sub
test
and
jb
push
ds
and
xchg
mov
pop
xor
div
outsb
fisttps
jb
loop
decb
fs
subl
outsl
sbb
ss
out
ds
out
jno
and
cmp
iret
xor
and
jnp
jp
pop
jmp
add
subb
and
jnp
mov
jb
adc
push
cmp
pop
push
rcr
mov
aad
mov
xor
jo
ds
mov
inc
lds
cmp
sbb
and
enter
insl
mov
mov
roll
sbb
dec
cmp
push
sbb
or
or
cmp
mov
clc
roll
loop
lahf
xchg
xchg
loope
xor
rclb
imul
out
jmp
add
jo
jne
xor
add
sbb
push
dec
cld
mov
push
sub
push
pop
jle
push
sbbb
fnstcw
push
fists
int
imul
cwtl
in
jmp
sbb
mov
ss
jne
repz
les
cmp
add
adc
xchg
push
cmpsl
lcall
insb
decl
pushf
push
sub
das
in
xorb
xor
nop
pop
mov
movsb
imul
push
mov
xchg
jmp
push
in
dec
sbb
inc
into
push
rcll
mov
mov
or
mov
shl
mov
and
iret
pop
bound
adc
xor
hlt
mov
and
cmc
cwtl
adc
sbb
pop
incl
loop
adcl
in
push
add
shr
mov
inc
dec
cmpsl
and
rcrb
xchg
and
movsb
in
jno
test
dec
and
add
fisubrs
insb
mov
push
adc
inc
or
shl
rorb
jo
or
fstl
fisttpll
push
cs
pop
sbb
popf
inc
aad
sub
adc
loop
lods
mov
test
cmp
jecxz
daa
lea
mov
cli
jp
jae
cltd
ret
jge
xlat
push
push
cmp
mov
cmp
adc
xchg
mov
and
sub
mov
gs
mov
ss
adc
mov
xor
cs
pop
adc
int3
dec
pushf
aaa
in
insl
push
dec
mov
fstpt
mov
xchg
jge
sub
mov
loopne
hlt
xor
frstor
mov
adc
inc
xor
jno
and
sub
lcall
mov
pusha
push
pop
outsl
in
mov
nop
mov
mov
push
inc
insl
clc
in
aas
mov
or
jno
lahf
insb
or
bswap
movb
addr16
rcrl
and
xor
mov
jo
and
dec
or
cltd
mov
adc
loop
inc
jae
lock
lret
leave
sbb
cmpsb
fstl
cmpsl
lock
subb
mov
mov
mov
sbb
adc
jnp
add
pop
int3
jmp
pop
sbbl
cmpsb
stos
push
out
inc
pshufw
test
imul
das
push
ss
call
cmp
ror
adc
mov
daa
insb
mov
rcr
add
and
loop
aam
fidivl
inc
or
xchg
xor
xor
lret
imul
movsl
cmp
cli
call
int
jne
shl
cmp
push
jmp
in
test
pop
pusha
and
stos
push
pop
push
test
orb
jne
xchg
add
out
test
mov
cmp
cmpsl
mov
cmp
sub
bound
movsl
inc
mov
popa
add
mov
and
lcall
lcall
push
cmpl
push
ds
popf
cmp
call
and
cmpsb
out
xchg
dec
inc
push
add
andb
lret
cmpsl
and
mov
loope
jno
in
arpl
xchg
and
xor
or
dec
in
jb
jg
ret
or
dec
lods
and
aaa
xor
mov
flds
inc
mov
fbstp
movsl
pop
xor
push
jae
outsl
cmp
add
pop
mov
sub
inc
xchg
jbe
jo
ja
jle
and
lret
stc
lahf
in
pusha
fnstsw
ds
and
fsts
and
ljmp
mov
rolb
push
pop
mov
stc
mov
fstpt
fnstsw
int3
mov
adc
inc
dec
jle
inc
lods
dec
push
jno
sub
das
xchg
mov
aas
cld
jecxz
bound
shrl
jo
ds
filds
pusha
add
pusha
mov
inc
xlat
int3
daa
sbb
cmc
mov
cmp
mov
daa
out
jge
jnp
outsb
pop
lods
loope
pop
leave
jmp
fcmove
sbb
sbbb
inc
das
xor
test
in
in
sbb
loop
js
fld
cmp
stos
sub
mov
fs
adc
pusha
ret
ret
repz
push
jb
mov
sbb
popa
loope
out
jmp
jl
daa
and
push
lret
pop
imulb
and
xchg
mov
mov
push
mov
pop
lea
mov
rolb
jno
push
and
cmp
test
sahf
test
push
push
push
mov
nop
test
pop
pop
mov
sbb
pop
sbbb
and
xor
sbb
aad
push
in
xor
mov
mov
fsubrs
and
and
push
test
in
movsb
sbb
js
pop
lahf
inc
pop
ret
and
orl
add
mov
and
mov
add
pop
or
lahf
push
xlat
sub
jge
cwtl
daa
inc
in
test
repz
fiaddl
dec
cmpsb
xor
pusha
ss
cmp
mov
fbstp
out
sub
jns
push
dec
xchg
stos
mov
pop
imul
stc
std
lock
sub
push
push
fsubrl
fs
pop
sti
sub
and
enter
xchg
lret
cld
js
mov
cmp
jo
xor
push
in
orl
mov
sbb
movsl
popa
xchg
xchg
xor
insb
fisubrl
sbb
xchg
or
loop
iret
mov
movsl
cmpsb
sbb
hlt
and
mov
iret
or
mov
mov
insb
out
pop
inc
mov
mov
mov
jno
jecxz
loop
nop
ss
test
lcall
lret
popf
pop
loope
scas
in
xor
jb
sub
adc
int3
mov
pushf
ds
jle
cmp
and
push
fbld
jle
cli
jg
mov
mov
movsl
popa
movsb
inc
mov
xor
push
pop
jns
cmp
into
mov
jp
loop
mov
xchg
pop
out
mov
jns
mov
icebp
xor
or
jl
inc
out
das
sub
cmp
dec
pop
cltd
sti
mov
sub
xchg
add
in
movsl
pop
sbb
stos
movsl
add
sbb
mov
xor
lret
jle
jg
rcll
mov
dec
ret
fs
xor
ljmp
dec
mov
xchg
popa
movsl
lds
cs
fidivl
cmp
mov
pop
mov
add
mov
xor
ficomps
insb
lret
movsl
adc
repz
sub
pop
pop
aad
fnstcw
cmp
test
lds
lret
cmpsb
jp
cmp
ss
repnz
aaa
fwait
aad
and
movsl
ljmp
adc
jns
pop
xchg
negb
mov
fldl
popf
or
in
add
loop
push
lds
mov
mov
insl
sbb
push
or
inc
cltd
mov
divb
xor
push
mov
lods
push
inc
pop
in
ret
movsl
aas
call
mov
in
icebp
lods
mov
ret
pop
pop
sbb
andb
lcall
inc
xchg
mov
sbb
clc
mov
sbb
sbb
lea
rcrb
sbb
xor
inc
imul
pop
daa
sbb
or
shll
cmp
in
outsl
mov
loop
mov
in
sti
arpl
xor
lock
push
fsubl
mov
push
sub
sbb
push
pop
stos
mov
repz
mov
mov
lods
mov
mov
mov
push
jno
sub
lock
dec
xor
icebp
pushf
sub
xlat
adc
xor
inc
sbb
std
mov
orl
into
icebp
lahf
lds
in
xorb
rorl
adc
inc
sahf
xor
adc
shl
push
sub
clc
adc
dec
add
jo
cmp
pop
adc
jne
pop
inc
lret
test
into
inc
or
fstp
pop
inc
lds
icebp
dec
loop
popa
je
jo
lcall
in
sbb
enter
fbld
jl
mov
in
mov
jmp
jmp
sub
je
int
frstor
fildl
jo
push
sbb
ja
pop
push
daa
adc
xor
sub
into
push
cli
sbb
fxch
mov
add
shrb
stos
inc
push
in
test
push
movsl
pop
nop
out
stos
mov
cmp
add
in
jae
inc
push
adc
ss
shl
loop
mov
add
and
sbb
repz
sbb
jl
pop
je
out
xchg
movsb
test
jnp
je
call
adc
xchg
push
jnp
ljmp
loop
mov
int
mov
loope
lods
inc
or
lods
mov
aad
pop
in
out
call
nop
js
xchg
arpl
adc
push
aad
test
sar
xor
xor
dec
mov
push
pop
outsb
movsl
pop
mov
sbb
cmp
mov
jecxz
adc
test
adcl
idivb
xor
lea
sbb
mov
push
mov
add
mov
jo
adc
movsb
daa
outsb
mov
xchg
inc
call
or
push
and
xor
sti
sbb
adc
lods
mov
addr16
incl
push
mov
xchg
pop
in
mov
jg
xchg
xchg
add
inc
jb
pop
or
cmp
cmp
dec
and
sub
scas
fisttpll
out
outsl
inc
xor
insl
mov
mov
sahf
add
mov
test
xor
dec
cmp
cmp
mov
loope
dec
sahf
imul
jg
or
int3
movsl
inc
xchg
xor
push
dec
pop
cmp
jecxz
push
stos
mov
push
pop
outsl
in
aad
rorl
adcb
pop
ss
fisttpll
in
je
imul
das
dec
cwtl
add
js,pt
sbb
xchg
test
rcrl
scas
call
push
sbb
sub
mov
jmp
movsb
and
jae
inc
cli
enter
mov
in
jl
push
adc
and
mov
iret
ss
xchg
adc
mov
jns
iret
xchg
sbb
loopne
xor
mov
dec
repz
xor
aad
pop
mov
xor
rclb
mov
loopne
addr16
or
adc
cli
jb
sbb
lock
inc
iret
xchg
pop
xlat
pop
or
inc
inc
iret
inc
fildl
jbe
cltd
or
sbb
icebp
push
stos
movsb
movsb
inc
mov
inc
xchg
mov
lcall
out
xor
adc
leave
icebp
test
cmp
dec
pop
mov
lcall
add
fiadds
dec
cmp
jno
xlat
iret
add
in
pop
cmp
cmpsb
cmovs
repz
inc
sbb
cmp
inc
pop
xor
dec
leave
jle
loop
cmp
js
iret
lds
xchg
cmp
add
out
loope
daa
dec
xchg
shl
outsl
cmc
rcrl
inc
sub
repnz
das
movsl
adc
adc
mov
aaa
xchg
dec
das
sub
testl
inc
dec
ret
das
aaa
arpl
es
lods
aam
mov
aaa
pop
std
in
xchg
sbb
mov
xchg
loope
shll
jns
in
push
mov
lcall
pop
or
shll
lahf
cmpsl
out
mov
adc
and
movb
mov
jb
jno
fisubl
cmpsb
int
mov
and
arpl
in
mov
xor
mov
nop
add
jo
aad
cmpsb
icebp
and
mov
jbe
inc
mov
inc
fildl
jle
xchg
mov
adc
mov
pop
xchg
loope
mov
or
mov
mov
movsb
push
out
add
decb
cmp
daa
out
pop
dec
scas
fdivs
shl
mov
sbb
mov
aam
je
adc
sub
jbe
xor
data16
pop
test
xchg
adc
int
or
orb
add
fucomip
cmp
sbb
insl
sti
cmc
pop
push
jno
cltd
adc
sbbb
mov
xlat
mov
in
push
xchg
mov
cmp
int
pop
push
std
fcmovnbe
pop
sub
sbb
adc
push
shll
and
sahf
int
lds
xchg
xchg
sub
fs
pop
adc
rol
inc
mov
mov
push
in
xchg
lcall
pop
test
imul
ss
xlat
and
pop
push
jmp
dec
mov
or
in
pop
fldl
movsb
addb
loopne
cmp
mov
in
sub
add
push
sub
repz
mov
fadds
bound
jecxz
sbb
jo
sub
sbbb
lock
loope
add
jecxz
push
movsl
mov
xor
xor
ljmp
jb
and
lret
ret
push
int3
outsb
sbb
and
inc
cltd
inc
in
adc
popf
push
mov
or
sbb
xor
xor
in
pop
push
xchg
cmpb
sub
je
jo
push
fsubs
xchg
pop
fmul
or
lea
xchg
jge
rol
pop
mov
mov
into
fisttpll
lahf
or
xor
outsb
mul
mov
mov
out
or
aam
stc
mov
or
and
xchg
jb
fsubr
adc
loop,pt
imul
and
in
lods
les
lods
or
bound
add
lds
loope
stc
push
std
inc
adc
jmp
aaa
lds
ret
or
pop
loopnew
jg
rcll
sub
gs
cmp
les
gs
aas
mov
lret
sbb
loope
adc
lcall
sub
mov
mov
inc
out
mov
sub
inc
xor
shl
into
int3
xchg
out
push
pop
idivb
jbe
and
cwtd
enter
mov
idivl
xor
dec
or
aas
movsb
int3
lods
xchg
xor
dec
adc
sub
cld
cmpsb
lahf
movsb
testb
popf
mov
popa
cmp
stc
jge
sbb
push
inc
mov
jp
mov
test
aaa
call
in
cmp
in
xchg
mov
movups
push
rcl
fndisi(8087
dec
xlat
sbb
in
mov
pop
adc
push
push
inc
xor
fucomi
testb
ret
nop
or
sti
or
int
adc
mov
jae
adc
imul
imull
fnsave
xor
das
loop
jge
add
xchg
in
jle
or
movsl
call
imul
xchg
cmp
loope
jmp
bswap
mov
jo
fmull
in
cmp
je
insl
pop
es
and
jmp
das
sub
daa
loope
mov
sub
jl
adc
dec
xor
ficoms
sbb
mov
inc
and
push
sub
mov
mov
ficompl
bound
int
rclb
mov
adc
inc
imul
dec
xchg
sub
subl
push
mov
adc
xchg
sub
xchg
or
ss
and
cwtl
push
cmc
or
test
in
push
push
add
cmp
sub
cltd
popa
rorl
call
test
rcll
fwait
pop
ficoml
pop
fisttpl
ss
push
jecxz
movsb
adc
cmpsb
test
xchg
add
sbb
inc
hlt
dec
and
ror
pop
sbb
cmp
jmp
inc
mov
ss
imul
sub
test
aas
lcall
das
outsl
mov
add
sub
loope
xchg
cwtl
pop
loop
pop
cmp
leave
call
dec
lcall
xchg
mov
jmp
lods
pop
mov
jecxz
fiadds
stos
fstpt
ficomps
lods
and
fldl2e
rorb
mov
mov
ficomps
test
xchg
or
inc
call
dec
movsl
cld
incl
sbb
aad
imulb
popa
mov
ret
fsubrp
cmp
leave
xchg
mov
pop
in
dec
mov
daa
sub
popa
jp
ss
mov
sbb
xchg
push
mov
movsb
lds
shl
cmp
fsubrl
mov
cmc
inc
push
stos
or
fisubl
loope
nop
mov
sbb
sarl
adc
in
cli
or
add
or
add
gs
hlt
lret
gs
jl
loop
outsb
cmp
outsb
loop
rcll
mov
imul
jle
mov
inc
daa
pop
cmp
sub
fsubp
addb
and
mov
or
add
cmc
push
dec
ss
adc
int
andb
sahf
xchg
into
sbb
cmp
or
dec
jg
inc
xchg
pop
mov
dec
push
and
mul
pop
negl
stos
rcrl
xor
shlb
rcrl
lock
mov
loop
jl
in
or
dec
out
orl
push
cmpsl
add
sub
inc
sub
and
jle
and
jl
jmp
sub
loop
push
rcll
pop
sbb
or
in
fildl
xor
lds
test
inc
push
ss
lock
mov
or
roll
sbb
jge
mov
test
test
pop
subl
mov
ror
test
push
lcall
sti
xor
in
imul
lods
dec
adc
imul
pop
push
cltd
jl
mov
addb
jp
inc
int
loopne
lds
mov
fs
dec
adc
jnp
loopne
minps
dec
ss
test
ret
faddl
test
lods
mulb
and
pop
test
in
adcb
in
mov
jo
xchg
lret
push
adc
scas
rolb
jp
insb
hlt
loope
dec
shll
dec
push
in
or
xchg
cmp
xor
mov
pop
fcmove
xchg
rcrb
scas
jns
and
out
fadds
int3
in
push
stc
mov
aas
cmp
and
add
jne
das
lcall
xor
loopne
aad
inc
and
repz
and
xchg
mov
cmc
lret
inc
stc
pop
outsl
pop
dec
ret
and
shrb
mov
sbb
adcl
fs
ret
or
and
nop
loop
fstsw
or
cli
test
xor
dec
shll
pop
sbb
mov
pop
jns
aam
pop
stos
and
sub
jb
push
out
rorb
outsl
daa
insb
adc
and
adc
dec
dec
xchg
inc
xchg
fsubrs
es
mov
mov
in
jb
test
cmp
mov
out
mov
and
jo
add
sub
jne
jle
pop
fadds
les
push
cmp
jmp
add
outsl
cmp
repz
and
inc
iret
ret
lea
pop
ss
rcrb
xchg
test
xchg
loope
sbb
xor
cmp
xchg
push
ds
adc
jo
or
loop
xor
adc
and
out
pop
ja
cli
in
inc
cld
adc
jb
test
inc
fldl
insb
mov
pop
lahf
inc
dec
cld
stc
cs
lret
jg
out
inc
pop
mov
mov
push
aad
mov
sbb
ret
fwait
sbbb
jno
aam
add
cwtl
dec
adc
push
jmp
into
or
lds
cmpb
dec
push
and
mov
ret
dec
daa
mov
leave
mov
cmp
jae
loope
jl
decl
adcl
lods
and
xchg
fisubl
nop
xchg
das
mov
sbb
insl
es
iret
push
cld
cltd
cmp
or
jo
push
sbb
xchg
iret
aad
jb
cmpsl
pop
clc
push
popa
mov
stos
xchg
sbb
add
mov
mov
loop
pop
mov
inc
adc
sbb
xor
xchg
jo
andl
pop
aas
mov
lds
and
test
pop
loop
cmp
fiaddl
cs
inc
out
mov
ljmp
inc
inc
aad
and
jno
xchg
cmp
inc
and
xchg
test
loope
fwait
popf
sbb
sbb
jo
or
repz
xchg
stos
popa
add
aaa
mov
or
leave
jle
mov
sti
je
mov
dec
adc
fiaddl
ja
jle
adc
jecxz
into
sti
pop
fisttps
inc
lock
insl
test
cld
xor
jnp
or
inc
cwtl
mov
cmp
stos
out
add
gs
imul
mov
adc
shrl
decb
jle
ja,pn
and
pop
adc
jb
cmp
mov
mov
mov
or
aad
inc
stc
xchg
mov
pop
stos
movd
inc
jb
sub
adc
aam
lds
mov
pushf
in
lea
mov
fbld
push
mov
jle
nop
add
loope
xor
sbb
mov
and
mov
in
sti
push
outsb
xchg
faddl
jne
aad
add
xchg
mov
sub
popf
mov
outsl
adc
hlt
loope
xor
fmuls
roll
jns
mov
inc
mov
pop
les
aas
dec
push
xor
pop
jg
stos
es
out
movsl
adc
push
js
xor
mov
or
xor
xchg
push
add
sbb
imull
inc
inc
mov
lcall
xorl
scas
mov
ljmp
rolb
jae
pusha
fisubrl
mov
xor
cmp
cmpsl
fxch
loop
sbb
lods
addb
adc
mov
push
jae
insb
sbb
pushf
mov
dec
les
adc
add
scas
imul
or
inc
test
xchg
scas
cmp
pop
aam
mov
xchg
mov
jne
shlb
jmp
inc
cld
inc
xchg
lret
cltd
lcall
int
sbb
xchg
les
aad
std
jl
jecxz
stos
pop
jno
cmpsb
adc
push
ds
das
mov
divb
outsl
loop
and
int3
dec
xor
int3
sahf
rcrb
mov
mov
cld
test
dec
dec
out
sbb
adc
mov
lds
mov
sarl
mov
xorb
adc
insl
sarb
in
xor
sbb
mov
jno
mull
sub
mov
push
loop
xor
mov
mov
cmp
cmp
pop
leave
add
pop
dec
mov
sbb
pop
jecxz
add
loope
jb
cwtl
stos
xchg
push
and
cmp
ret
xchg
std
outsl
lock
pmulhuw
loop
out
cli
xchg
mov
cmc
imul
cld
cs
mov
add
imul
gs
push
fsubrs
pop
mov
push
aaa
jge
shrb
fnstcw
ss
fsubs
pop
add
std
fnstenv
sahf
test
imul
repnz
push
cmp
dec
pop
je
cwtd
les
stos
mov
xor
lods
iret
repnz
pop
popl
mov
lods
xor
loop
add
or
or
sbb
imul
rclb
mov
mov
jl
mov
jns
xchg
mov
cs
insb
test
addr16
shlb
int
and
test
dec
leave
jle
jmp
cmp
inc
das
xor
and
mov
push
mov
sub
jae
push
orb
push
cld
and
add
mov
mov
cmp
dec
sbb
outsb
pop
push
xor
call
dec
inc
mov
mov
cmp
cmp
das
lret
or
mov
insl
jmp
pop
mov
addr16
ljmp
sbb
enter
xchg
mov
mov
push
lods
in
jnp
out
sarb
shlb
or
out
lcall
jbe
jl
ret
ljmp
loop
outsl
or
sub
sub
push
mov
repz
push
fiaddl
in
xchg
xlat
jp
and
hlt
push
cltd
fmuls
push
xor
and
pushf
adc
adc
push
data16
dec
sarb
lock
cltd
rcr
movsl
mov
int3
fdivl
xor
jno
dec
or
in
jp
sub
test
cltd
mov
fisttpl
push
out
push
or
mov
jns
loope
fisubl
hlt
int
loop
jp
aas
sbb
inc
xor
adc
mov
rcll
in
xchg
test
addr16
and
inc
pop
cld
ret
insb
hlt
popf
mov
repz
lahf
insl
mov
push
push
fistpll
out
shrl
and
ljmp
lret
popa
lods
mov
xor
icebp
negl
loope
rcl
movsb
push
push
inc
push
sbb
sbb
adc
lods
push
xchg
jle
adc
pop
loop
out
jbe
insl
ljmp
sub
adc
mov
xor
in
push
xchg
out
dec
stos
push
rclb
cs
and
xchg
bound
dec
adc
outsl
inc
or
lods
imul
loopne
pop
test
fadd
lret
rcrb
xor
xchg
je
daa
hlt
sbb
and
inc
imul
aaa
shll
add
push
loop
movsb
xor
and
cltd
cmp
sbb
sti
pushf
scas
aas
sbb
sub
insl
or
xchg
in
sarb
or
subl
add
sbb
popf
ret
sub
loope
add
nop
arpl
cmp
loop
test
loop
shl
pop
mov
repz
mov
lock
push
sahf
dec
pop
xor
daa
iret
loop
dec
out
push
push
xor
in
jbe
dec
xchg
jns
adc
stos
cmpsb
add
mov
loop
xor
pop
es
in
addr16
sbb
lods
bound
in
imul
lea
shlb
lea
push
scas
insb
call
out
mov
pop
inc
rclb
imul
cmp
mov
mov
sbb
mov
dec
mov
adc
cmp
xchg
sub
lret
roll
imul
xor
ret
in
or
inc
mov
jmp
sbb
jbe
pop
inc
push
push
cmc
bound
mov
and
pusha
mov
adc
cmp
jae
movsl
sub
sbb
addr16
mov
dec
int3
mov
pop
pop
push
pop
aas
stc
mov
jp
mov
sub
push
es
push
stos
sti
mov
popa
mov
pop
adc
mov
sub
in
es
aad
mov
fcmovne
into
icebp
push
dec
and
xchg
enter
push
inc
fistps
pop
dec
clc
sbb
mov
ds
or
or
sbb
aaa
aad
dec
insl
or
rclb
pop
les
jns
stos
cltd
cmp
dec
sarl
sbbb
and
xor
pop
ds
mov
insb
pop
pushf
lea
daa
sub
mov
push
and
ficoml
rclb
js
cmc
repnz
pop
and
jbe
daa
sbb
cli
mov
inc
mov
iret
xchg
fs
rcrl
lahf
test
sub
stos
xchg
mov
cmp
pop
sub
js
loop
call
daa
pop
pop
popf
mov
mov
inc
jp
test
ljmp
jns
lds
mov
ljmp
add
xchg
aas
into
jno
xchg
dec
and
jns
jmp
mov
imul
pop
mov
sbb
adc
or
xchg
mov
mov
es
cmp
sbb
dec
or
push
int3
loope
xor
pop
iret
dec
xchg
xchg
jle
cmp
mov
inc
aam
adc
jo
sbb
loop
gs
lock
or
iret
nop
jle
or
in
out
dec
ret
mov
pop
lret
cmc
test
scas
sarb
movsb
mov
movsb
rcrl
je
imul
xchg
popa
loope
icebp
jbe
test
call
cmpsb
xchg
push
or
cmpsl
jb
lds
xchg
imul
repnz
outsl
mov
sub
push
rclb
jp
repz
aas
inc
or
and
in
mov
sbb
jbe
sbb
adcl
rol
pusha
ret
enter
jle
clc
fidivrl
pop
and
daa
jno
sarl
loop
outsl
pop
mov
xor
lods
fwait
scas
mov
adc
out
xchg
and
mov
call
and
in
push
jl
aad
add
inc
dec
xor
cld
test
push
mov
cli
insb
adc
mov
lods
rcrl
mov
sbbb
sub
movsb
iret
hlt
cmp
inc
rcll
mov
shl
mov
shrb
jns
sbb
pop
or
loopne
inc
in
dec
pop
mov
jmp
inc
inc
imul
and
mov
inc
and
rorl
stos
xor
in
fnstenv
jne
cmpsb
clc
decl
dec
mov
mov
xor
xchg
xchg
pop
jmp
sub
lods
lret
addr16
sub
cmpsb
lret
fwait
out
push
aaa
pop
movl
and
in
shl
arpl
mov
bswap
xor
mov
xor
pushf
dec
pop
mov
repz
push
xor
push
sbb
pop
mov
iret
fimuls
sub
xchg
sbb
xchg
call
leave
sbb
push
int3
push
mov
dec
jno
add
insl
lret
push
je
fbld
ss
out
imull
mov
imul
pop
sub
imull
mov
push
xlat
jne
js
mov
mov
mov
imul
inc
out
pusha
cmpl
mov
sub
adc
sar
daa
mov
lret
xchg
jne
and
inc
iret
sub
push
movsl
or
inc
push
fistl
add
ljmp
lods
les
pop
cmc
inc
xor
mov
pushf
push
mov
mov
jno
cwtl
daa
adc
push
and
or
outsl
lcall
test
add
stc
lret
mov
sbb
lods
xchg
mov
xchg
fsub
sbb
push
adc
mov
and
loop
mov
in
sbb
jne
inc
push
mov
out
stos
dec
push
mov
aam
outsb
fisttps
aas
sbb
inc
inc
out
push
shr
fstpt
push
mov
aam
ja
adc
jnp
insb
and
and
cmp
mov
aas
inc
adc
pop
into
mov
pop
aas
mov
out
addr16
adc
sbb
sub
lcall
imul
out
jmp
mov
dec
loop
pop
outsl
sahf
lret
inc
or
jns
cmp
mov
and
fnstenv
sub
or
pop
lds
ret
mov
ljmp
into
cmc
addl
pop
addr16
arpl
and
out
fsubrl
pop
ljmp
or
les
xor
fcoml
fidivrl
xchg
pop
add
iret
dec
or
xchg
dec
loop
pop
hlt
fildll
jae
sub
cmp
push
mov
or
dec
subb
sbb
cmp
clc
rcrl
mov
out
push
push
aaa
dec
int
jno
mulb
clc
lods
shrl
mov
roll
ss
cmp
cmc
pop
mov
sarb
push
jmp
jno
dec
xchg
loop
cld
mov
fld
fimull
mov
sub
subl
jns
jp
jbe
popa
int
xchg
daa
sahf
dec
hlt
or
xor
pop
repnz
ljmp
loope
int
outsb
or
mov
mov
gs
sbb
arpl
jb
aad
lods
in
or
in
rol
dec
je
pusha
and
add
fiadds
mov
inc
arpl
jns
mov
push
hlt
cmpsl
cld
or
add
orl
pop
movsb
xchg
stc
push
sbb
jmp
push
sbb
loop
or
push
push
jp
cmp
icebp
xor
mov
mov
mov
jmp
xor
das
cmpsl
push
fistl
rcll
in
sub
mov
mov
mov
adc
cmp
nop
lcall
xor
leave
and
mov
xor
xchg
scas
pop
adc
xchg
cltd
sub
mov
sarb
loope
push
mov
lahf
adc
int
stos
jo
bnd
sub
mov
mov
add
in
loop
ret
daa
mov
and
pop
lods
test
sub
mov
jns
dec
push
or
push
mov
jo
int
push
cmc
mov
xor
or
xchg
pop
or
in
inc
loop
add
add
dec
nop
xor
jmp
dec
aam
movsb
sbb
sbb
inc
cmp
test
clc
sub
andl
loop
lods
mov
out
scas
pop
pop
adc
jbe
mov
push
jg
jb
push
xchg
loop
fwait
sti
mov
push
rcr
xchg
fidivs
xor
mov
cmpsl
addps
mov
jl
or
cld
and
in
ss
sbb
pop
jbe
outsl
jno
sti
mov
mov
cli
out
mov
jns
xor
sbb
dec
add
loop
inc
dec
jle
outsb
mov
testb
outsl
cmp
loope
in
mov
mov
pop
xor
sbb
inc
in
scas
pop
loopne
xchg
aaa
das
pop
sub
and
pop
and
loop
out
mov
mov
push
scas
mov
jl
mov
movsb
pop
ret
push
les
outsl
iret
or
jp
mov
out
pop
rcl
mov
pop
and
scas
jmp
gs
int3
loop
sbb
push
mov
or
pop
loope
es
jle
cmp
jecxz
cmpb
ljmp
xor
mov
xlat
mov
push
xchg
sub
ret
andb
loop
in
psubsb
jbe
packssdw
cmc
sbb
cld
mov
add
mov
adc
insb
jecxz
cmp
rcll
mov
xchg
notb
ja
pop
lea
sub
dec
inc
mov
nop
push
mov
pop
fdivrl
and
outsb
mov
rcrl
inc
daa
mov
inc
pusha
or
add
adc
jb
jle
sub
nop
mov
or
mov
es
sahf
adc
adc
test
mov
in
cmpsl
insl
das
pushf
push
mov
or
mov
cmpsl
dec
das
cmp
jg
sbb
aas
add
inc
jo
xchg
adc
inc
in
mov
adc
mov
lahf
icebp
daa
int
xchg
loope
cmp
xchg
mov
rorl
adc
psubsb
xchg
in
inc
add
scas
fsqrt
aad
dec
std
inc
je
dec
iret
dec
mov
dec
mov
sti
cmp
inc
es
mov
in
shll
xor
ficoml
nop
mov
xchg
aam
sbb
ljmp
out
jb
loop
push
sti
fildll
scas
add
sbb
in
push
mov
jmp
popf
subb
inc
loop
and
std
insb
xchg
xchg
inc
adc
xchg
aad
mov
cmpsl
mov
adc
test
mov
pop
mov
cmpsb
movsb
mov
insb
test
pusha
lea
or
push
cltd
xor
xor
aas
mov
lds
sub
xchg
js
cmp
xchg
sbb
in
andb
push
add
in
rcl
jns
mov
rcll
jne
pop
and
mov
and
lods
int3
add
adc
and
out
repnz
inc
xchg
popa
gs
lods
out
mov
lods
scas
dec
aaa
pop
loop
sbb
shrl
sub
sbb
pop
aaa
dec
jns
cmp
xadd
lret
mov
pop
and
lahf
ret
xor
sub
pop
fs
scas
jb
mov
ror
in
jae
insb
scas
mov
add
xchg
jmp
xlat
mull
sbb
mov
dec
imul
pop
mov
inc
push
and
jnp
or
aad
add
in
call
dec
gs
imul
push
pop
test
sbb
sbbl
leave
sub
pushw
and
dec
stc
push
nop
add
mov
xor
shrl
or
lds
mov
inc
mov
or
xchg
xchg
mov
out
xchg
jle
lahf
or
mov
xorl
mull
inc
lock
and
fnsetpm(287
pushf
shrb
cmpsb
sub
imul
int3
sub
loope
in
ret
out
mov
or
aad
or
mov
int
scas
xor
mov
mov
sbbb
loop
push
or
mov
jno
mov
sub
mov
cmp
push
xchg
pop
icebp
fst
scas
into
scas
sbb
loop
je
roll
call
sub
dec
sti
and
cmp
and
nop
sahf
adc
fmul
ret
ret
cmpsl
or
mov
add
xor
andb
mov
mov
xor
jg
xor
jb
xchg
add
hlt
dec
sub
aas
psubb
lcall
sbb
pop
fldenv
mov
mov
pop
pop
cmc
movl
pop
loope
add
jmp
iret
out
cltd
dec
jo
ds
out
xlat
stc
repz
jbe
ret
loope
mov
push
cld
mov
mov
or
cmp
cvtdq2ps
fldcw
xlat
and
adc
push
mov
xor
or
and
xchg
std
pop
or
mov
and
xlat
cmp
mov
push
or
cli
in
mov
sbb
mov
ljmp
in
jns
in
add
out
imul
jb
pop
imul
push
or
popa
das
or
dec
or
or
jne
sahf
xchg
jg
jp
xor
ds
xlat
aaa
sub
pop
sti
pop
pop
in
in
repnz
and
mov
jne
in
nop
sbb
iret
pop
pop
adc
xchg
inc
xor
sbb
insl
or
test
xchg
leave
mov
mov
jl
inc
mov
or
cld
mov
sub
mov
sbb
xchg
cmp
mov
ror
add
addb
inc
es
fnstcw
dec
jo
push
xchg
adc
xor
dec
and
jg
int
xchg
xchg
push
mov
cmp
mov
aad
add
ret
jb
adc
xchg
icebp
nop
ret
cmp
mov
psubb
xchg
dec
xchg
mov
add
cmp
xlat
nop
push
jo
lcall
push
popa
shll
les
aam
movsb
dec
jecxz
not
mov
xor
aad
push
sub
mov
push
cmpsb
xchg
daa
mov
jns
mov
push
sbb
loop
movsl
stc
or
cld
mov
sbb
shlb
into
scas
mov
jbe
pushf
inc
mov
mov
addr16
in
lahf
inc
jp
pop
cmp
movsl
pop
mov
mov
loop
mov
in
stc
push
ret
les
adc
data16
and
mov
mov
fmuls
cmc
sbb
leave
lahf
das
mov
aaa
push
in
mov
inc
jbe
std
jle
ret
mov
jo
loope
aam
pop
xor
mov
mov
dec
adc
sub
xchg
cmpb
fstpl
cmp
jae
cli
out
jb
out
cld
adc
in
out
push
test
lret
or
mov
ret
xchg
sti
xchg
adcl
jg,pn
or
add
adc
test
pop
pop
movsb
cmp
xchg
pop
hlt
lods
imul
lret
cmp
loope
sti
sub
popf
fistl
push
in
sahf
outsl
xor
mov
fmulp
mov
lds
and
jno
stos
sbb
cli
mov
jb
fstl
dec
lahf
in
loope
pop
xchg
xor
shr
xor
dec
popa
bound
adc
iret
xchg
in
cmp
data16
or
fucomip
ss
stos
adc
sarb
dec
push
xor
lret
add
push
fildl
fistpll
mov
daa
popf
std
pop
jge
inc
push
mov
imul
lock
mov
adc
sbb
das
dec
add
adc
mov
data16
rol
push
sbb
rcrb
insb
out
dec
bound
push
aad
test
mov
and
loop
std
xchg
xchg
insb
add
and
dec
fisubs
test
cmp
cmp
js
mov
xor
inc
push
pop
lods
aas
in
andb
ljmp
rcrb
xor
mov
mov
movsb
rclb
test
adcb
sub
and
push
imul
fnclex
pop
mov
cwtl
data16
pop
mov
int3
out
cli
ret
push
mov
dec
mov
adc
sub
into
push
push
adc
fwait
and
push
repz
fcompl
mov
pop
inc
xor
out
xor
ss
jae
inc
shll
mov
sbb
or
inc
mov
and
fnstsw
jp
call
sar
mov
mov
push
jmp
push
add
xchg
repnz
fsubrs
mov
or
mov
je
jne
and
or
out
iret
js
mov
repz
inc
inc
loop
add
std
daa
fs
outsb
mov
xor
cmpsl
xor
rcrb
std
test
mov
iret
xor
dec
out
pop
mov
loope
jbe
push
into
and
mov
pop
pop
sbb
push
pop
and
std
and
shlb
mov
ja
mov
scas
ja
pop
ss
push
sbb
pop
leave
push
push
cli
movsl
mull
leave
mov
or
cld
mov
mov
ds
xchg
and
or
pop
pop
ja
sub
inc
xchg
mov
out
lods
xor
xchg
add
xor
mov
push
cmp
paddsb
sub
stos
dec
test
xor
sub
jbe
movsb
xchg
iret
jmp
xlat
not
lea
pop
xor
push
push
push
mov
shlb
xchg
fdivl
addb
xor
lds
sbb
pop
je
pusha
add
sbb
test
stos
mov
flds
sti
hlt
adc
xchg
fs
loope
mov
lods
add
nop
lock
js
pop
int3
cmc
push
das
outsl
in
and
or
push
pop
and
adc
enter
jmp
xchg
imul
std
or
sbb
mov
fcmovu
loope
pop
xor
cs
mov
sub
mov
mov
sub
in
xor
adc
out
insl
sbb
fsubrl
mov
setnp
pop
out
xchg
roll
xchg
aaa
or
sbb
push
mov
movsl
aas
rclb
adc
and
cs
inc
aaa
cmc
mov
and
xchg
stos
inc
sti
and
sub
rorb
shrl
xor
lret
out
cmp
ret
cltd
nop
lfs
leave
cmp
pop
xor
arpl
adc
int
ss
add
orb
shl
push
inc
gs
loop
clc
das
pop
fs
ficoml
test
jbe
adc
push
int3
in
or
mov
xchg
loope
cltd
mov
push
mov
inc
int3
es
scas
lcall
imul
mov
cmp
sbb
jmp
clc
sbbb
loop
addr16
xor
jge
mov
je
cwtl
sub
jno
and
into
pop
xlat
popa
loop
jne
mov
mov
sbb
mov
mov
or
mov
adc
mov
jnp
pop
adc
les
dec
xchg
pop
and
cmc
je
loop
hlt
jp
daa
cmpb
jg
cmp
stos
mov
mov
pop
mov
int
jecxz
add
fwait
xor
or
push
add
and
popf
push
sbb
adc
cmp
xor
cld
xor
xchg
mov
cltd
movsl
push
push
pop
push
mov
pop
loopne
mov
mov
in
js
sarl
clc
dec
inc
add
loope
jp
lods
fwait
nop
push
aaa
mov
sbb
sbb
push
movsl
aas
xor
mov
lods
jae
cltd
inc
sbb
and
cltd
pop
mov
je
adc
int
xchg
inc
mov
cwtl
mov
cmp
in
xchg
xchg
cmpsb
push
js
imul
push
loopne
or
xchg
loop
add
popa
and
scas
lahf
shrl
mov
test
mov
push
loopne
pop
add
mov
leave
out
adc
in
std
cmpsl
lcall
and
xor
xchg
rcll
sahf
mov
mov
pop
dec
daa
dec
inc
pop
pop
push
int3
cltd
mov
xchg
lds
shrl
cmc
repnz
in
rclb
lret
pop
jb
xorl
pop
ret
xor
cld
mov
int
dec
xchg
lods
mov
sbb
movsb
insl
sbb
xchg
shll
lea
dec
sbbb
cltd
sbb
nop
movsb
jmp
and
imul
lret
loope
addr16
stos
test
jg
pop
sbb
loop
mov
pop
in
repnz
dec
lea
loopne
jo
sti
outsl
jge
cmpsb
cmp
cmp
fisubrl
cmc
sti
sti
loope
sarb
and
cmp
pop
sub
xor
push
sbb
mov
ss
dec
mov
in
hlt
daa
pop
mov
mov
jns
arpl
adc
adc
jbe
add
jne
repz
fisubl
leave
lds
mov
push
push
mov
bound
mov
add
push
nop
stos
daa
iret
in
lock
cmp
push
int
daa
push
loop
testl
or
int3
fcompl
dec
aas
cmpsb
ljmp
sbb
push
xchg
mov
mov
pop
pop
jo
mov
push
loope
xor
xchg
inc
mov
cld
mov
jmp
dec
nop
rcll
lahf
and
xchg
mov
adcb
sahf
xor
push
sti
outsl
fidivrl
add
loope
movsb
pop
scas
out
jns
push
sahf
bound
dec
dec
js
mulb
push
cmp
pop
adc
sbb
xchg
mov
adc
in
leave
insl
sbb
cmp
xchg
mov
pusha
call
cmp
enter
aad
fwait
adcb
sbb
stos
dec
pop
cmp
imul
aaa
mov
lahf
mov
xlat
add
push
mov
cli
xor
xchg
add
outsl
das
adc
dec
leave
mov
pop
inc
mov
daa
out
int3
inc
sub
out
sbb
fadds
mov
cmp
sbb
out
mov
add
jne
add
and
jb
sub
inc
pop
jge
cmp
sbb
lods
faddl
mov
adc
pop
push
mov
cmpsb
mov
pop
mov
enter
inc
mov
jns
das
dec
xor
xchg
movb
and
fwait
push
push
pop
outsl
fs
mov
in
scas
inc
cli
and
or
enter
and
aaa
insb
sbb
testb
arpl
or
jb
and
or
or
fisttpl
loop
int3
lock
xchg
int
xor
lcall
cmp
push
push
push
daa
jns
fs
sti
sub
cmp
adc
cwtl
dec
or
or
cmp
adc
mov
in
insb
nop
mov
mov
sbb
lock
insl
or
sbb
js
outsb
dec
jle
movsl
fisubrl
dec
push
xchg
xchg
outsl
add
mov
stos
cli
mov
cmp
sbb
or
inc
ss
in
or
imul
adcb
ljmp
sub
sbb
hlt
xor
in
loope
mov
add
mov
das
mov
mov
and
int3
movsl
aad
std
loope
es
movsb
xor
jl
mov
xchg
loop
add
add
out
cli
ds
in
gs
in
pop
mov
pop
lods
dec
push
mov
mov
hlt
mov
cli
shll
outsl
out
mov
or
mov
ds
pop
add
pop
fidivrs
and
xlat
or
loope
loop
cmp
mov
and
pushf
add
inc
dec
stos
loop
fstpt
xor
sub
ss
pop
inc
in
lods
dec
in
push
inc
popa
dec
in
mov
pop
or
lea
jo
fs
gs
lock
jo
fs
pop
xchg
cmp
inc
mov
mov
xor
dec
pop
sbb
ljmp
loop
shll
mov
sbb
cmp
xor
mul
adc
fwait
addr16
adc
lret
loope
xor
push
mov
sbb
jp
jecxz
pop
nop
pusha
push
lcall
iret
jb
repz
xchg
ficompl
daa
imul
xor
int3
ss
cmpsl
fsts
pop
cmpsl
shrb
cmc
adc
mov
mov
pop
mov
mov
mov
jae
adcb
push
outsl
testl
stos
add
add
test
in
iret
lret
jb
fninit
mov
loope
fdivr
dec
out
mov
pop
arpl
sub
mov
dec
shl
push
ss
cld
inc
adc
push
dec
loop
adc
in
stc
xor
push
jle
adc
rcll
shl
xchg
in
add
cmp
mov
mov
call
insb
test
adc
and
xor
sbb
insb
andb
jno
sbb
lock
or
and
scas
fs
add
lret
leave
shlb
jbe
dec
hlt
xchg
adc
xchg
loope
cli
lods
pop
js
cs
or
sbb
leave
mov
sbb
in
xor
push
jmp
mov
sbb
and
or
mov
mul
cmpsl
lahf
pop
mov
sarl
in
xorb
sbb
in
xchg
mov
inc
in
mov
xlat
imul
sub
mov
daa
stc
push
jg
jmp
ljmp
inc
sahf
and
cmpsb
xchg
rcrb
andl
sbb
js
push
xchg
inc
fldcw
dec
xchg
push
jae
addr16
adc
sahf
push
xchg
int
add
insb
xor
inc
inc
xor
test
mov
shlb
mov
loop
clc
insb
jno
in
jg
daa
push
push
outsb
push
lahf
or
mov
aaa
mov
in
sti
testl
loop
cmp
jo
lods
or
test
fwait
push
in
pop
shll
mov
hlt
xchg
in
mov
aas
test
andl
in
sbb
data16
push
imul
jb
cld
mov
rcll
cltd
mov
jne
dec
push
push
cmp
cmp
inc
and
or
xor
and
popl
pop
mov
stos
rorl
in
rorb
outsl
movsb
rcr
nop
pop
cwtl
xor
enter
mov
mov
stc
incb
inc
inc
btr
pop
mov
movsb
push
out
jns
insb
lds
in
cmpsl
shlb
out
test
test
mov
out
fistps
pop
cmp
push
shl
jne
add
mov
loop
cmp
jle
rcr
addl
and
inc
push
sbb
jne
stc
mov
jno
mov
ret
adc
in
pop
fsts
loope
rcll
shrl
not
shrb
fs
movlps
sub
sahf
dec
jl
sbb
ret
mov
or
test
daa
xor
jl
push
rorb
ljmp
push
xchg
jae
sub
nop
je
sub
pop
ret
loope
in
inc
lock
mov
iret
adc
idivl
push
loop
in
jmp
testb
notb
sub
xlat
out
dec
mov
push
sbb
cmp
das
jo
repnz
mov
mov
mov
inc
sbb
mov
notl
lcall
imul
pushf
lcall
shl
xchg
dec
lret
js
outsl
fidivrs
cmp
fwait
mov
ja
jo
xor
call
xor
loope
cmp
lea
arpl
int3
sbb
mov
cmpb
cmp
mov
mov
jp
scas
push
or
iret
jecxz
imul
rcrb
repz
dec
inc
and
out
bound
sbb
inc
pop
fimull
mov
lock
js
stos
inc
inc
fstps
xor
jo
lods
aaa
mov
jno
push
lcall
jb
pop
gs
jno
test
mov
loop
out
mov
ret
out
movsb
fiadds
loopne
in
cld
inc
mov
popf
stc
clc
insl
lcall
cmpsl
mov
pop
or
cmp
or
dec
xchg
sbb
xchg
push
flds
lods
mov
xchg
cmp
orps
push
xor
mov
js
imul
stc
insb
loope
sub
adc
mov
xor
mov
mov
push
pop
and
lret
clc
divb
sqrtps
addr16
pop
imul
dec
dec
in
stos
iret
push
push
fisubrs
inc
pop
clc
xchg
or
out
out
mov
mov
and
pushf
imul
and
shrb
mov
push
dec
loop
xor
shlb
lahf
adc
or
pop
sbbb
xor
cmp
xor
into
pop
cmc
push
dec
sbbb
xor
ja
xchg
bound
into
adc
xchg
out
lret
sbb
adc
insl
xorb
cmp
cmp
sbb
repz
jbe
mov
fdiv
push
aaa
xor
sbb
jbe
xor
ja
inc
mov
ljmp
scas
lret
loope
adc
shrl
add
xchg
or
cli
xlat
xchg
inc
pop
lods
and
fsts
mov
pop
test
add
push
call
xor
testl
sahf
or
loop
jle
or
dec
lcall
outsb
xchg
test
inc
pop
mov
mov
inc
jge
xchg
aas
icebp
dec
and
sub
out
add
lds
and
jno
sub
popw
leave
popf
sbb
cmpsb
inc
add
arpl
jno
aam
out
mov
mov
mov
ss
lret
cmpl
out
sbb
lock
in
sub
fwait
cltd
or
shll
in
call
mov
pop
mov
xchg
push
mov
inc
sbbb
push
or
jbe
pop
ficomps
cmp
rcrb
xor
imul
stc
rcll
xor
mov
arpl
mov
or
lods
lea
sbb
xchg
sbb
push
outsb
xor
or
ret
int3
inc
mov
cmpsl
sarb
cpuid
jg
lods
out
push
js
add
add
jae
mov
into
push
sub
test
test
sub
jg
mov
lcall
sbb
fisttpll
lcall
ret
dec
test
add
iret
pushf
xor
inc
inc
add
scas
push
pop
fs
aam
push
rolb
mov
ret
xor
clc
imul
adc
and
in
adc
pop
aaa
sbb
mov
xor
or
push
adc
ss
outsb
xchg
or
and
pop
push
iret
and
xchg
shrl
out
mov
inc
xor
in
subb
mov
fcmovne
outsl
repnz
iret
pop
inc
adc
or
loop
adc
jo
sbb
or
lcall
jbe
cmpsb
mov
pop
shll
jno
add
push
mov
aaa
mov
mov
popf
lock
std
outsb
xchg
xor
xchg
xchg
sub
push
xor
dec
and
lret
or
sub
or
cmpsw
mov
or
xchg
mov
add
test
outsl
push
or
sbb
or
std
shrl
inc
cmp
xor
cmp
jno
mov
mov
push
lcall
sbb
leave
xchg
xlat
inc
rep
int
mov
fidivl
pop
scas
addr16
nop
jnp
cvtpi2ps
inc
stc
stos
scas
sbb
movsl
hlt
jbe
movsl
pop
and
int3
xor
mov
cmp
rcll
test
add
fmuls
adc
pusha
pusha
or
xor
enter
test
test
mov
cld
sub
inc
dec
mov
xchg
pop
pop
divl
adcb
add
mov
ror
std
adc
addb
test
xchg
into
push
andb
cld
or
stc
dec
mov
push
ret
lcall
inc
push
add
in
xchg
add
mov
int
dec
pop
and
add
push
mov
aas
cltd
adc
dec
stc
xchg
test
add
add
dec
scas
loop
add
int
pusha
add
shl
xor
xchg
loope
sbb
dec
add
stos
push
notb
xor
movsb
cmpsl
movsb
test
push
insb
rol
lret
mov
pop
orb
repz
cmp
and
out
jge
sub
out
subl
ss
mov
pop
rcll
push
dec
fwait
fwait
jbe
mov
aaa
or
pop
loope
sbbb
rol
aad
loop
jno
daa
sbb
sbb
xchg
add
xchg
cmpsl
sub
bound
inc
mov
popl
pusha
and
pop
test
xor
ficompl
or
in
inc
push
cmp
jmp
sbb
iret
daa
fsts
in
add
cmp
and
in
add
pop
jno
xchg
push
into
enter
dec
cltd
pushf
mov
push
scas
cmp
inc
scas
add
iret
push
mov
test
add
push
sbb
push
add
cmp
xchg
or
loopne
loop
es
pop
mov
shr
push
jp
in
adc
push
hlt
jp
mov
mov
xor
xchg
and
pop
xor
call
jbe
int
in
adc
push
daa
sbb
jo
cmpsl
scas
fcmovne
mov
add
xor
pop
pextrw
pop
cmp
loop
test
stc
adc
je
mov
andb
xor
sahf
push
mov
xor
cmp
dec
ljmp
mov
pop
or
mov
and
loop
rclb
pop
jbe
movsb
mov
jns
push
out
call
andl
mov
sub
cmpsb
mov
cli
ja
xchg
nop
sub
fisubrs
and
loopne
mov
mov
mov
and
popf
loop
call
adc
sub
cmp
in
sbb
dec
outsb
lea
addb
nop
leave
stos
and
cmpsb
repz
xor
xchg
push
or
xchg
call
ficomps
xchg
jae
notl
daa
lods
pop
inc
je
push
add
repnz
imul
nop
dec
xor
popf
in
jb
xorl
fs
arpl
adc
fwait
out
jo
pop
jne
sub
int
lret
jle
fidivrs
xor
cmp
rolb
mov
add
lret
cli
cmp
negb
dec
jle
aaa
sub
push
movl
shll
fmull
rcr
es
sbb
int3
movsl
sub
les
popa
push
rsqrtps
dec
xor
or
add
out
and
mov
js
jno
in
fadds
jno
stos
imul
inc
cmp
pop
xor
lds
mov
es
loope
daa
mov
sub
pop
add
ljmp
add
sbb
mov
sub
out
iret
fcmovnb
adc
out
scas
and
vpaddd
into
push
jg
mov
mov
mov
mov
popa
adc
out
mov
and
testb
mov
ss
add
shl
imul
aad
xchg
call
mov
fstps
push
push
pop
es
mov
xorb
out
clc
mov
mov
xor
iret
ret
xchg
sbb
pop
test
adc
pop
cmpl
xor
fs
cmp
mov
push
into
push
inc
cmp
scas
scas
push
push
xchg
shl
pop
lret
mov
dec
in
dec
mov
outsb
sti
sahf
or
ja
add
repnz
jle
xor
mov
add
push
fstps
xor
sbb
add
das
sbb
imul
push
ret
bound
adc
imul
or
stc
cmp
fwait
and
fbstp
out
lea
sahf
nop
popa
sahf
mov
in
in
test
in
mov
mov
aas
add
mov
xchg
mov
mov
add
lret
mov
mov
dec
pushf
loope
add
push
clc
jmp
inc
in
jp
test
aaa
pop
sub
test
hlt
fcoms
pop
cltd
xchg
pop
and
std
pop
fnstcw
mov
shll
xor
int3
out
stc
js
call
call
orl
das
inc
xchg
adc
sub
daa
add
test
iret
movsb
sbb
cltd
pop
dec
icebp
xchg
push
mov
hlt
out
cmpsl
sub
push
jecxz
popa
push
mov
mov
sarl
dec
in
mov
mov
mov
mov
dec
pop
mov
push
lods
mov
aad
in
jmp
or
out
aaa
sti
pop
jnp
cmp
lods
movsb
cmp
add
fidivrs
rcll
mov
and
jb
in
push
addr16
fnstenv
loope
mov
or
int
or
push
bound
add
popa
mov
daa
push
add
xchg
cmp
xlat
loope
mov
lret
popa
dec
sub
jno
dec
sbb
dec
cmp
adc
cli
xchg
mov
add
pop
pusha
aam
lahf
add
fnstenv
sbb
or
imul
in
insl
inc
cmpsl
ficomps
cmp
cmp
mov
sub
shlb
inc
adc
dec
sub
mov
sbb
jo
jo
sub
rep
jo
aam
outsl
pop
rorb
or
ss
fwait
mov
aad
int
fisubs
jns
pop
push
in
sub
sub
jmp
sbb
in
dec
xchg
or
loope
pop
cli
fdiv
push
sbb
je
loope
mov
xchg
or
add
dec
jo
sarb
mov
pop
stc
mov
movl
mov
mov
popa
sub
or
inc
add
xchg
mov
icebp
cltd
std
or
mov
sbb
ds
mov
imul
xor
add
add
loope
leave
push
adc
mov
cmp
flds
fwait
sub
adc
test
push
out
cld
fwait
stos
sbb
rorl
cmp
icebp
test
adc
and
add
mov
outsb
cmp
push
or
int
and
xor
jge
imulb
and
rolb
push
cmp
cmpsl
push
mov
adc
mov
paddusw
push
inc
push
lcall
mov
es
lds
popa
push
scas
out
fidivrs
mov
ds
sti
or
test
mov
adc
xchg
test
pop
or
dec
mov
or
jl
mov
imul
push
rolb
xchg
xchg
mov
add
sarb
xchg
inc
xchg
fbstp
loop
mov
mov
movsl
xchg
xlat
scas
cld
stos
movsb
and
mov
xchg
mov
mov
push
out
add
loop
incb
mov
div
add
outsb
mov
nop
cmp
push
scas
mov
sub
jne
test
add
subb
mov
out
fisubrl
or
ss
push
adc
mov
lahf
push
je
and
pop
push
aaa
test
adc
into
fs
in
cmp
and
ret
loop
mov
pop
push
pop
xchg
js
pusha
in
sti
pop
pop
fs
mov
fistpl
push
pop
mov
lods
inc
repnz
testl
hlt
mov
and
fldl
add
mov
out
cmc
mov
or
leave
mov
in
push
add
sbb
mov
xor
mov
jge
pop
push
stc
cmpsb
lods
pop
lret
mov
jnp
mov
or
xchg
and
cmp
xor
ret
pop
mov
lcall
xchg
jae
dec
cmpl
cmc
push
cmp
pop
in
gs
call
pop
out
out
pop
in
mov
out
or
sti
int
sbb
mov
in
jne
push
push
cmp
in
cltd
jge
sbb
add
or
movsl
adc
iret
gs
inc
and
pop
scas
sub
shl
inc
lock
in
xor
push
rcrb
dec
xchg
rorb
and
mov
or
mov
btr
xor
sbb
sbb
lahf
daa
adc
sbb
dec
push
pop
mov
shl
movsl
adc
shll
sub
mov
sbb
add
inc
mov
sarl
cmp
out
outsl
cltd
inc
in
rcll
push
inc
dec
stc
int
popf
cmpsl
dec
cmpb
inc
stos
xor
test
pop
xor
mov
insl
insb
jl
push
add
jg
test
jns
out
jbe
in
mov
and
mov
imul
push
lods
or
xlat
test
out
fidivl
push
sub
idivb
pop
add
loope
adc
lret
in
mov
xsaves
outsl
test
jbe
add
in
bound
and
test
scas
adc
xchg
pusha
mov
cltd
rolb
shl
jecxz
ss
aas
loop
bound
dec
cmp
sub
mov
push
pop
mov
adc
xor
adc
gs
inc
lds
add
inc
push
jns
jl
mov
cwtl
pop
les
lcall
enter
mov
popf
push
sbb
add
mov
xchg
pop
negl
dec
in
mov
pop
adc
loope
xor
fisubs
not
lret
popa
aaa
dec
rcl
loop
xor
dec
jg
fucom
xor
mov
cli
adc
ds
mov
ret
test
je
cwtl
loopne
ret
pop
and
je
sub
out
sbb
shr
call
in
adc
or
adc
pop
int3
mov
xchg
sub
call
scas
inc
jecxz
pop
sbb
notb
sbb
xchg
inc
push
push
dec
pop
mov
pop
push
dec
loope
fcoml
cli
jecxz
mov
insl
bound
nop
xchg
adc
pop
xchg
xchg
shlb
cmp
hlt
jge
inc
mov
nop
pushf
push
jno
loope
sarl
cmp
cvtps2pd
push
bound
sarl
and
sti
push
and
outsl
stc
fisubrs
in
into
jg
sti
xorl
mov
cmp
cwtl
pop
pop
aas
mov
sub
push
sbb
pop
inc
mov
jb
mov
cmp
sbb
pop
fnstsw
push
xchg
fs
push
loop
faddl
dec
inc
shlb
fldenv
movsb
pop
out
cld
out
imul
sahf
push
or
mov
test
mov
or
loopne
enter
pop
mov
std
xor
notl
inc
mov
les
mov
test
test
xor
sub
jg
xchg
fnsave
rol
xchg
xor
jmp
mov
out
xor
addl
jno
lds
mov
jp
out
ss
and
leave
into
xchg
dec
mov
sahf
cmpsb
pop
fmul
arpl
ja
cli
das
mov
ret
adc
loope
aad
in
and
add
call
xchg
mov
scas
jae
cli
fsubs
push
fisubl
lods
in
lcall
imulb
lea
mov
mov
nop
scas
push
bswap
insb
pop
js
sub
popa
in
xor
andb
das
dec
cwtl
mov
xchg
int
xchg
nop
dec
in
lret
mov
pop
lods
mov
cmp
push
mov
jns
popa
rcl
pop
clc
add
fdiv
ret
or
jle
jns
add
or
in
jecxz
lods
mov
sbb
jecxz
or
and
cmc
sbb
js
pop
movsb
pop
mov
subb
and
inc
gs
adcl
int3
aad
jb
sti
sbb
lock
pop
repnz
adcb
inc
jmp
pop
push
xor
loopne
ljmpw
call
mov
es
sub
shl
mov
push
in
inc
out
or
test
pop
fwait
lds
pop
test
dec
lcall
or
push
or
cmp
add
or
popa
mov
jb
icebp
aaa
std
aad
out
jno
imul
jns
push
dec
int
mov
sbb
pop
fcomps
sbb
int3
pushf
adc
jne
pop
js
add
dec
or
add
mov
shlb
mov
xor
sbb
adc
dec
lock
or
adc
inc
mov
push
pushf
pop
inc
pop
mov
loope
xchg
loop
mov
push
xchg
cld
aas
lods
jns
and
loope
cmp
xchg
mov
pop
inc
ljmp
idivl
mov
imul
fs
xchg
pop
test
loope
cmc
sahf
lds
sahf
insb
inc
xlat
dec
sbb
std
repz
push
mov
mov
push
repnz
cmp
aas
or
pop
sub
and
pop
in
jb
subl
loope
movsb
repz
xor
jmp
hlt
pop
xor
mov
dec
fldcw
adc
sub
movsb
loop
cwtl
xchg
mov
mov
mov
xor
xchg
pavgb
loope
repz
cmp
clc
xor
icebp
ss
or
int
lea
sarl
xchg
int
out
je
mov
aam
and
adc
mov
daa
cld
out
clc
lds
loope
jecxz
jns
rcrl
or
jne
movl
in
lods
shlb
test
jecxz
sub
or
inc
jno
adc
mov
and
pop
outsl
xchg
and
leave
lcall
scas
or
sub
cmp
sub
add
sbb
cltd
loop
dec
jbe
and
mov
add
aas
cmpb
adc
hlt
cld
out
lret
hlt
sbb
jbe
and
jae
mov
and
and
xchg
pop
popf
neg
movsl
adc
pop
mov
jmp
pop
push
xor
adc
in
sbb
jmp
sbb
movsb
push
gs
repnz
sub
adc
and
bound
xor
jecxz
add
jle
dec
mov
cmpsl
mov
stc
cmp
outsl
lods
lods
int
shl
iret
lcall
and
sti
mov
das
inc
cwtl
loop
lret
jmp
clc
scas
cmp
pop
data16
mov
dec
push
mov
ret
iret
int
sub
scas
pop
sbb
mov
nopl
mov
insl
mov
sti
xchg
xchg
cmp
loop
jne
hlt
aaa
pop
repz
sti
push
stos
pop
in
test
loop
mov
push
jge
push
xor
mov
daa
sti
mov
inc
fnop
cmp
or
mov
mov
cmp
cld
mov
inc
push
xchg
jge
mov
jbe
movsl
mov
or
pop
test
jo
fistl
imul
js
sub
pop
mov
mov
jo
pop
repz
icebp
lods
mov
jnp
xor
or
pop
test
iret
xchg
pop
pop
inc
xchg
scas
mov
sub
movsl
sti
bound
ror
popa
dec
rcrl
adc
or
push
add
fmuls
cmpsb
xchg
adcl
lea
dec
cli
dec
sqrtps
jb
push
push
mov
lods
or
adc
in
iret
test
jbe
out
sub
sbb
adc
and
hlt
add
rol
addr16
jmp
jo,pt
mov
cli
or
sbb
add
imul
cmp
aam
loope
and
mov
shll
in
dec
lds
push
adc
or
loop
out
cmpsl
das
aad
mov
nop
cmp
push
or
push
data16
stc
mov
outsl
jmp
shl
push
xor
dec
or
cmp
adc
cmc
imul
gs
subb
mov
xor
stc
dec
nop
int
cmc
iret
pop
or
ds
adc
in
loop
lcall
push
mov
xchg
test
sbb
push
out
pop
fadds
jnp
jno
cs
pop
xchg
xchg
lods
decl
js
jnp
out
imul
xor
mov
ljmp
xor
xchg
xor
cmc
sub
popa
push
cmp
test
dec
cltd
push
mov
dec
sbb
pop
ret
push
xchg
push
mov
lret
adc
loope
shrb
stos
loop
and
aad
loopne
mov
sbb
ficoml
into
in
ss
scas
loope
add
fwait
cmp
pop
ja
and
rorb
mov
jle
cmc
mov
xchg
sub
or
cmp
xor
push
nop
lret
std
xlat
adc
lea
push
std
decl
les
dec
fsts
scas
jbe
push
movsl
mov
pop
xor
or
incl
pop
div
sarl
ds
out
mov
jno
or
aas
inc
mov
sbb
ljmp
inc
add
mov
dec
pop
data16
and
jg
mov
mov
cmpl
jecxz
nop
shll
mov
daa
ljmp
and
imul
arpl
psubd
cmp
xor
pop
dec
cwtl
scas
sti
push
mov
mov
js
lods
adc
data16
and
pop
mov
cs
mov
sbb
fstps
mov
loope
mov
adc
pop
and
cmc
adc
test
add
mov
or
orb
mov
jmp
rclb
jge
xchg
loop
sti
insl
push
sahf
enter
adc
mov
mov
scas
andb
inc
push
ret
dec
fs
insb
adc
dec
rep
push
mov
nop
adc
adc
mov
aam
sub
or
and
std
clc
in
repz
sub
mov
jns
dec
xor
hlt
adc
bound
sbb
jmp
inc
jo
push
cmp
mov
fs
sub
xchg
and
imul
sbb
push
adc
push
or
adc
fnsave
call
and
mov
xchg
xchg
in
scas
mov
cmp
push
sub
inc
mov
xchg
loop
mov
subb
xchg
or
jb
stc
cmp
scas
cmp
cltd
in
pop
addr16
push
loop
cmp
repnz
or
mov
loop
movsl
pop
push
mov
and
in
jbe
mov
cmp
movsl
pop
cmp
mov
mov
mov
xchg
mov
ljmp
ljmp
mov
stos
aam
cmp
push
loope
xor
xchg
push
clc
jo
insl
add
adc
aad
xor
mov
je
xor
loope
add
xchg
outsb
add
or
sbb
mov
inc
mov
xchg
pop
lret
push
in
sub
or
dec
loop
push
cmpsb
jne
xor
lods
fidivrs
push
jmp
loop
insb
xchg
lret
stc
xlat
gs
adc
mov
inc
cmpsl
test
mov
divl
andl
sub
in
aaa
xchg
add
mov
xor
sub
and
mov
and
loope
cmp
dec
imul
mov
in
rcll
xchg
out
jle
roll
mov
outsb
clc
or
push
jns
xor
lcall
in
mov
repz
imul
or
fisubl
mov
jae
adc
ror
shll
outsl
js
movsl
outsb
mov
dec
inc
jbe
rclb
mov
xor
pop
adc
stc
pop
push
xlat
xchg
ret
mov
adc
mov
ficoms
loopne
and
push
sbb
push
push
orl
pop
aad
lcall
cli
outsl
orl
test
sub
or
sbb
jbe
vpcmpeqb
insl
cmpsb
pop
mov
sub
pop
ret
repz
cmp
add
mov
repnz
bound
aaa
mov
sub
cwtl
push
andb
xor
adc
mov
mov
in
xchg
inc
fisubrl
mov
pop
test
std
dec
pop
xor
add
sbb
in
stos
data16
cmp
shl
or
aas
inc
iret
cpuid
rorl
ss
shll
mov
sub
int3
daa
cmp
stc
xor
lea
push
sbb
cmp
xchg
cmc
xor
roll
cmpsl
mov
mov
push
add
dec
or
lcall
and
mov
jo
xchg
inc
loop
stos
in
repz
dec
mov
iret
mov
xchg
push
je
lcall
js
add
push
sub
test
cmp
mov
fmul
cmp
ret
cwtl
lea
hlt
and
in
imul
fcom
xchg
test
lret
mov
sub
arpl
or
jo
lock
movsb
jae
push
or
jne
push
mov
das
insb
insl
cmpsl
xchg
mov
les
xchg
mov
add
lods
ficoml
lcall
xor
lods
fisubs
fcmovnb
dec
or
mov
xor
cmp
push
jne
mov
mov
and
inc
nop
lods
loope
aaa
push
sarl
mov
shlb
cmp
xchg
test
mov
pop
mov
dec
negl
repz
aas
mov
fldenv
mov
xor
jb
mov
adc
adc
pop
movsb
jne
in
fbstp
notl
or
stos
dec
dec
sarl
xchg
xor
jbe
mov
add
dec
mov
fcmovnb
fdivrl
js
mov
dec
sbb
push
xchg
mov
sbb
add
dec
test
hlt
mov
out
pop
insl
sahf
clc
and
xchg
mov
pop
repz
adc
cs
int
xchg
xchg
and
sub
sbb
sbb
fdivl
shll
mov
aas
or
dec
in
pop
and
shll
and
mov
ljmp
sbb
push
in
add
es
dec
cmpsl
daa
addb
out
subl
scas
xor
sub
aas
sti
mov
cs
insl
pop
jge
jo
inc
xor
repz
gs
sub
insb
std
mov
mov
push
and
mov
icebp
aaa
add
aas
jle
inc
jo
jnp
xchg
push
dec
imul
xchg
aad
lods
sub
sub
push
dec
push
stos
push
push
fcmovnb
xchg
ret
pop
xor
push
cmp
in
pop
or
sub
mov
xchg
add
and
inc
cmp
sub
aad
sub
fs
xor
fcmovne
xchg
or
sbb
mov
push
cmpl
mov
sub
mov
pop
sub
in
sub
mov
ret
push
cmpsl
xor
push
jge
xlat
mov
test
pop
mov
xlat
jnp
sub
out
ret
rcrb
push
int3
out
stc
cmp
dec
cmp
das
int3
fsub
jb
loope
mov
movsl
aas
pop
rcrb
lods
jne
icebp
inc
js
outsl
mov
xor
ja
repnz
ds
es
push
insb
adc
or
popa
add
pop
popf
in
cli
das
push
add
mov
mov
xchg
xor
dec
mov
xor
popa
pop
rolb
ljmp
mov
imul
jecxz
int3
fcompl
scas
xchg
mov
xor
leave
adc
les
pop
mov
test
std
push
lock
dec
mov
ret
jne
push
sbb
cld
fmulp
pop
scas
inc
lret
inc
arpl
adc
push
push
mov
mov
sbb
lret
movl
add
mov
testb
sbb
pop
and
repnz
inc
rclb
loope
ljmp
push
and
push
push
loop
cwtl
loop
and
je
jns
fsubl
shll
xor
pop
es
ret
sbbb
ss
jbe
out
lods
fs
jbe
mov
ror
pop
loope
ret
sbb
in
add
loop
mov
or
inc
rclb
add
adc
lcall
xor
out
jb
pop
repnz
popa
and
push
arpl
iret
cwtl
test
aas
sbb
cli
fld
lock
mov
cwtl
in
or
shrb
sbb
mov
jnp
mov
xor
cmp
aam
push
and
jp
aaa
jb
loope
jmp
repz
cmc
sub
sbb
in
aas
wrmsr
shll
in
sub
or
inc
nop
push
xor
push
adc
pop
stc
sar
adc
xor
mov
and
mov
xchg
pop
imul
inc
sbb
in
mov
je
fdiv
push
stos
pop
daa
repz
test
cli
mov
icebp
push
dec
lret
shll
ja
adc
and
loop
int
ss
out
mov
mov
lods
ret
dec
cmpl
sub
lods
xchg
add
in
jmp
xchg
xor
adc
add
inc
pop
push
fnstcw
loop
daa
or
jns
into
movsl
add
sbb
sub
test
shrb
fwait
dec
and
push
sar
or
dec
and
out
mov
pop
xor
dec
dec
ja
in
jo
clc
loop
jb
lods
mov
cmp
adc
call
test
and
lock
lods
cmp
jbe
jns
pop
pop
loopne
cmpsl
mov
sub
sbb
mov
sub
push
add
pop
inc
or
les
and
nop
daa
scas
loop
repnz
xor
add
adc
mov
divb
push
dec
add
or
dec
xor
les
inc
xchg
fwait
cli
and
fisubrl
icebp
nop
mov
inc
cmpsl
fdivrl
or
jne
fwait
add
leave
stos
push
inc
in
xchg
int
cmp
inc
pop
pop
sbb
xor
fstps
or
out
ljmp
xor
pop
addr16
mov
cwtl
sub
aas
mov
stos
gs
insl
mov
test
xorb
imul
pop
lret
lds
mov
lea
nop
lea
out
test
loope
fxch
sbb
sub
repz
or
loope
adc
or
or
sub
fwait
cwtl
mov
out
sub
int
jmp
insb
jns
daa
pop
call
fwait
jmp
shr
jnp
mov
movsb
xor
cld
repz
jle
xchg
into
addr16
mov
loop
pop
adc
xchg
rcrb
push
cmp
pop
adc
and
xor
and
cmp
sub
inc
repz
popf
jno
xchg
jge
or
mov
or
cmp
stc
sbb
inc
ret
loope
imul
pandn
cs
adc
pop
in
aad
or
add
mov
pop
push
int3
inc
cmpsl
stos
arpl
pop
loop
and
sbb
push
ljmp
repz
imul
cmp
cwtl
xor
xor
gs
aad
loopne
pop
add
jbe
js
sti
out
xchg
out
sbb
ret
insl
popa
cmpsb
cmpl
dec
push
rcr
mov
clc
std
in
shlb
sub
and
repz
push
movsb
iret
xor
adc
imul
emms
sub
push
cmp
mov
in
add
ds
hlt
inc
inc
dec
mov
rcll
push
sbb
lret
push
mov
push
sbb
sub
aaa
add
loope
pop
and
insb
xchg
push
imul
cmpsl
ljmp
imul
mov
xor
dec
lds
push
test
aas
rcll
repnz
subl
test
cmc
loopne
shlb
push
sbb
call
in
adc
mov
sub
pop
fbld
pop
loope
lret
bound
fnstenv
push
sub
fs
or
or
mov
mov
or
cmp
cmp
popa
mov
jne
sbb
lock
push
cmpsl
popf
jp
sbb
dec
sbb
xor
adc
loope
or
cmpsl
cmp
popa
jecxz
push
sti
cmp
fwait
and
adc
or
nop
scas
cmpsl
mov
xor
sub
stc
jl
aaa
push
ret
out
lret
fabs
ret
push
daa
push
inc
adc
ds
adc
xor
in
mov
mov
push
gs
imul
cmp
addr16
jb
sar
mov
pop
sbb
imul
sti
js
pop
lcall
daa
jp
rcr
test
add
fwait
jo
nop
sbb
xor
adc
call
test
adc
cmp
xchg
mov
adc
mov
repnz
dec
xrelease
cltd
lea
aas
mov
mov
sbb
mov
sbb
sub
stos
add
ret
sarl
cmpsl
mov
sbb
cwtl
loop
bswap
and
mov
into
or
mov
orb
ficoms
out
adc
cmp
jb
sbb
adc
mov
or
mov
xchg
sbb
pop
and
mov
pop
shlb
pop
iret
int
pusha
shrl
mov
insb
test
mov
inc
in
call
addr16
jno
xchg
push
jnp
xchg
cmc
mov
fdivl
sub
or
imul
xor
aad
sahf
cmp
outsb
adc
hlt
add
mov
in
and
pop
pop
sti
or
subl
pop
orb
sub
xor
ror
fldcw
in
xchg
adc
in
sub
bound
lds
mov
stc
cwtl
pop
and
mov
xchg
mov
mov
mov
paddb
add
fcoms
or
xor
jae
fmuls
daa
pop
loop
es
stos
cmp
incl
mov
daa
es
enter
test
imul
into
dec
call
cmp
sub
cli
in
nop
or
test
outsl
mov
loope
sbbb
ss
into
push
and
or
imul
and
pop
cmp
sbb
push
push
xchg
xor
arpl
push
push
lret
mov
gs
cmp
imul
xor
inc
mov
lds
loope
decb
int
lret
movsb
cltd
in
in
sahf
sbb
imul
shr
lds
mov
pop
mov
loop
scas
xor
xchg
push
cmpsl
ret
mov
loopne
scas
fistps
loope
repnz
mov
aaa
icebp
or
push
sbb
shr
and
testl
pusha
dec
push
jmp
cmpl
sbb
in
pop
mov
mov
sahf
push
std
fstp
sbb
fs
push
loop
jmp
outsb
scas
popa
imul
mov
or
daa
test
mov
shl
sub
in
cld
pushf
and
jnp
pop
push
fldl
nop
xchg
sub
mov
xchg
fs
mov
push
lahf
xor
dec
out
mov
jns
mov
out
je
bound
in
jp
cltd
pop
lods
cltd
data16
sbb
push
mov
or
ss
fsts
ror
into
mov
imul
pop
jge
adc
jne
and
dec
out
ljmp
pop
sbb
dec
mov
mov
sbb
les
insb
and
mov
cmp
mov
out
pop
test
jecxz
add
adc
and
icebp
mov
in
lods
push
movsb
movsb
out
iret
lcall
iret
lcall
daa
and
sub
fs
mov
xchg
sub
adc
shl
lahf
xor
out
add
dec
int
negb
push
add
mov
jbe
jbe
stc
jbe
outsl
cli
aad
loop
mov
mov
push
and
std
and
xor
mov
jno
mov
outsl
cmpsl
mov
sbb
push
and
dec
adc
dec
add
sbb
mov
cmp
sbb
adc
fildl
mov
clc
ja
cli
mov
dec
in
dec
and
cs
inc
push
negl
js
push
xor
int
xor
sub
fsubp
mov
xchg
or
cli
xchg
pop
mulb
jo
outsb
stos
sub
push
jl
xchg
pop
xchg
rcrl
push
es
and
and
xor
fs
inc
ss
push
mov
cmp
aas
mov
push
push
dec
loope
iret
je
sahf
adcb
and
repz
fnstenv
mov
dec
jb
push
test
mov
fcomps
mov
xor
mov
and
loop
xor
push
mov
jg
ja
xor
loope
xchg
pop
les
jl
ficomps
jb
outsb
cltd
push
jp
pop
sarl
inc
and
rorl
mov
mov
in
lods
cmpsb
jo
add
movsb
or
jmp
xchg
in
js
jg
xor
arpl
cmp
cmp
pop
lret
xor
push
mov
int
xchg
imull
push
inc
out
or
or
push
das
dec
lcall
and
cld
inc
jb
adc
dec
aaa
cltd
aam
jne
mov
push
inc
push
dec
mov
inc
and
shl
arpl
iret
sub
insl
sbb
cli
idivb
dec
out
jg
xchg
test
pop
shrb
mov
jne
mov
push
imul
mov
popa
scas
mov
das
mov
xor
test
scas
cmpsl
xor
sbb
in
xorb
ss
jae
cwtl
daa
sbb
jno
cmpsb
push
xchg
sub
imul
add
bound
adc
imul
loop
fmuls
ret
loope
shll
xor
ja
adc
loope
cmc
int
sub
xchg
pop
insb
mov
mov
pop
cltd
test
and
insl
add
cmp
or
inc
jo
sahf
xchg
xchg
inc
pop
sbb
leave
mov
pop
adc
and
testb
pop
subl
daa
cltd
xor
sub
or
add
jns
xor
cmp
shlb
adc
mov
out
sarl
jne
popa
sbb
jnp
fists
in
nop
xlat
in
mov
addr16
push
in
rorb
mov
jl
lcall
cmp
or
aas
pop
test
fnstcw
cmpsl
dec
jae
movsl
lods
pop
in
jo
dec
sub
push
cmp
mov
cmp
js
push
jbe
mov
jns
inc
push
fcom
insb
adc
pop
stos
xchg
pop
loop
jle
bswap
inc
push
dec
cmp
and
cmp
movsb
call
adc
shrb
movb
push
negl
mov
push
mov
rcrb
test
jb
push
pop
sbb
loope
in
jl
xchg
and
xor
call
cmp
mov
pushl
mov
xchg
or
movsb
or
pop
sbb
dec
fisubrl
add
loope
inc
push
jno
aaa
aam
push
pop
mov
adc
lods
jmp
popa
frstor
and
je
in
xor
scas
pop
mov
js
pop
sub
or
xor
in
xchg
mov
mov
test
dec
dec
nop
and
mov
mov
in
shll
add
pushf
and
aam
push
or
pop
adc
sub
pop
cmpsl
aam
xor
fwait
xor
inc
es
sub
sbb
push
dec
push
xor
stc
cwtl
adc
dec
sbb
xor
xor
test
xor
roll
lret
jo
fldenv
lds
push
mov
and
and
adc
and
sti
or
sub
fmuls
jne
aas
and
adc
pop
lods
lret
mov
imul
into
push
daa
cmc
and
in
mov
fnstsw
pop
xor
outsl
cvtdq2ps
sub
adc
loope
aad
stos
fimull
ficoml
mov
push
daa
std
movsb
inc
in
daa
add
aaa
push
pop
std
stos
nop
xor
in
push
fmuls
inc
sub
mov
pop
mov
test
mov
mov
in
cmpsl
les
cmp
incl
pop
xchg
in
jp
loop
dec
ljmp
push
das
in
lock
xchg
mov
scas
sub
repnz
loope
movsl
sbb
adc
sbb
cmp
adc
mov
pop
int
lret
lret
dec
pop
mov
mov
mov
jl
ds
movsl
push
xor
sbb
push
sbb
jg
fimull
push
imul
jb
and
mov
das
in
xchg
fs
imul
jmp
jb
bnd
add
sti
push
iret
mov
or
in
mov
gs
sbbb
imul
mov
movsl
jle
scas
push
in
test
out
out
jae
xchg
push
insl
jo
push
mov
xor
lcall
pop
dec
adc
dec
pop
jbe
ljmp
mov
and
xchg
movl
jo
cmp
or
bound
ds
scas
xchg
popf
cmp
ret
mov
cld
mov
cmp
mov
addb
dec
loop
add
pop
int
sub
cli
cmpsl
mov
ljmp
addr16
or
mov
mov
or
cmp
adc
and
leave
out
cwtl
push
or
sbb
outsl
inc
sti
hlt
inc
pop
mov
insl
mov
sti
test
and
push
outsb
add
in
or
push
dec
rolb
xchg
mov
xor
in
adc
sbb
add
and
mov
div
cmp
jno
iret
addr16
imul
lcall
push
cmp
js
jbe
das
sbb
xchg
sbb
nop
pop
mov
sti
cli
call
fcompl
test
iret
xor
mov
pop
mov
inc
cld
push
decl
add
bound
jp
sbb
loop
mov
or
sti
jle
cli
mov
sub
push
xlat
repnz
pop
push
into
aaa
loop
ja
ljmp
xor
xchg
sar
mov
shrl
and
int
clc
loop
repz
mov
inc
iret
jb
loope
dec
ljmp
fcompl
dec
adc
shlb
lcall
or
dec
repz
and
jecxz
lcall
pusha
iret
adc
inc
test
aas
and
loop
and
aad
ss
sub
push
push
cmp
jecxz
shr
loop
cmp
les
pop
cltd
sub
sahf
shl
out
leave
sahf
scas
xchg
data16
pop
inc
ret
mov
mov
xor
dec
jns
gs
inc
int
loope
push
mov
mov
imul
lret
clc
fsubrs
jo
sbb
ss
inc
lods
aas
imul
lods
out
jb
jbe
adc
xchg
add
lea
inc
xchg
aas
and
fimull
das
jno
out
mov
mov
in
int3
push
mov
bound
xchg
shll
or
adc
sub
mov
and
pusha
insl
cmpsl
jo
sub
ffree
inc
mov
mov
xchg
push
xor
pop
jg
pop
andb
push
xor
mov
jae
inc
repz
dec
xchg
loopne
jne
dec
int
push
test
pop
cmp
mov
fsts
loop
sbb
aaa
and
xchg
mov
push
jo
mov
sti
insb
jno
arpl
data16
mov
push
mov
lods
imul
jle
rorl
cmp
and
cli
icebp
shl
rcl
in
mov
or
push
mov
test
data16
jle
enter
in
iret
cmp
lods
mov
sub
mov
add
sub
lcall
dec
fwait
sarl
call
xor
mov
jae
std
ds
movsb
gs
shlb
dec
push
loopne
or
test
push
jne
push
mov
notb
dec
push
sub
mov
jl
in
push
add
adcb
jo
ret
stc
fstl
cmp
dec
xchg
adc
in
sti
adc
je
dec
add
mov
mov
add
ret
repnz
dec
iret
int
hlt
mov
inc
sahf
inc
arpl
sub
push
xchg
icebp
fdivrp
fcmovb
dec
and
cld
pushf
stos
aas
and
hlt
cwtl
loop
bound
cmpb
xchg
cmp
insb
loope
xor
sub
inc
fiaddl
mov
jl
jbe
sub
xchg
sub
shlb
xchg
int
and
scas
adc
xchg
sbb
jl
fs
dec
shll
dec
sbb
fimull
jne
adc
or
inc
cmp
mov
dec
pop
test
adc
dec
jl
push
pop
loop
mov
cltd
cmpsl
rorl
aaa
xchg
lcall
nop
outsb
movsb
pop
push
daa
and
mov
daa
adc
inc
js
pop
push
sub
shl
ficomps
push
sbb
xchg
nop
xchg
or
sbbb
in
addr16
loop
add
nop
dec
lds
outsl
jp
rol
fs
mov
add
movsb
int3
and
xchg
insb
in
scas
mov
sub
daa
pop
add
mov
xor
loopne
popf
and
xor
and
ret
xchg
les
dec
adc
push
and
pop
adc
and
popa
in
pop
in
push
mov
xchg
mov
or
imul
adc
mov
sbb
arpl
or
adc
jbe
push
mov
test
pop
fwait
cmpsl
imul
mov
push
in
add
and
xchg
mov
xor
in
cmpsl
inc
dec
loop
jmp
jle
aaa
lock
jbe
ret
arpl
cmp
loope
es
cmp
pushf
push
inc
mov
inc
adc
add
mov
in
dec
xchg
mov
xor
sbb
mov
loop
lods
sub
popa
jg
test
nop
mov
cmp
ds
cltd
mov
mov
jne
adc
add
rol
xor
xlat
loope
pushf
sbb
dec
push
fcoml
xchg
imul
jmp
pop
scas
cmp
push
mov
mov
test
outsb
pop
push
adc
imul
pop
addr16
adc
dec
cmp
xor
sbb
in
mov
mov
push
adc
lcall
and
adc
sbb
arpl
cld
jae
add
add
mov
int
adc
test
cmc
push
mov
sti
inc
jmp
mov
xor
add
lret
inc
xor
adc
sbb
or
stos
fstps
out
imul
loop
add
insl
cmp
mov
sbb
cmp
cld
std
pop
repnz
lea
mov
cmp
sbb
adc
mov
mov
mov
and
arpl
sbb
lahf
bound
pop
in
fcomi
mov
aaa
pop
push
sub
mov
sti
in
cmp
xchg
fcompl
pop
cld
jecxz
and
daa
das
ss
sub
jmp
lahf
xchg
imul
and
xor
xor
fnclex
xchg
add
mov
sti
sbb
stos
clc
jge
fists
jno
jp
mov
notb
mov
xchg
push
mov
lret
jae
pop
jns
pushf
test
out
cld
xchg
adc
loope
sub
imul
flds
and
cmp
mov
push
hlt
lahf
cmpsb
insb
lret
push
xchg
xor
push
cmp
lcall
adc
ret
and
sbb
and
insl
data16
cmc
adc
sub
or
xchg
inc
cltd
pop
fists
data16
loope
loop
imul
ret
jne
sub
and
mov
movsb
sub
pop
adc
pop
pop
mov
mov
cltd
das
pop
sub
adc
lods
nop
mov
or
movsb
cmp
push
pop
out
add
mov
mov
loop
adc
xchg
and
and
xchg
mov
outsl
push
into
or
mov
mov
enter
fildl
jg
xchg
cwtl
jnp
or
mov
adc
mov
sbb
jmp
inc
jp
xchg
jl
mov
mov
iret
lcall
clc
fistl
xchg
mov
insb
mov
test
sti
imul
jbe
sub
dec
movsb
adcb
pop
and
add
mov
lret
incl
inc
movsb
iret
jno
rclb
adc
push
mov
sub
cmp
call
pop
xor
xor
pop
lods
fwait
cli
push
in
cmp
and
lea
mov
jmp
imul
nop
outsb
xlat
cmp
xchg
xor
dec
add
or
or
add
jae
push
mov
pop
pop
pop
sbb
movsl
sub
ficoml
in
enter
je
ss
mov
test
ds
mov
pop
jns
test
xor
push
iret
in
mov
mov
lret
rorb
push
jo
jge
stc
mov
arpl
in
call
je
arpl
adc
outsl
sbb
pushf
push
sub
xor
fiadds
loop
adc
jbe
mov
jbe
pop
push
sbb
aam
add
imul
aad
xor
int
out
dec
movsb
sbb
inc
aas
dec
icebp
mov
ss
xchg
rcll
push
aas
sub
notb
nop
cmp
jecxz
aaa
mov
sbb
mov
xor
in
mov
xor
popa
push
js
xlat
cmpsb
test
dec
jnp
insl
inc
xchg
outsl
call
mov
lock
or
pop
lea
je
adc
subb
clc
fnstenv
xor
push
stc
dec
jbe
xchg
repz
test
andl
loopne
and
int
jecxz
jmp
jb
dec
cld
inc
pop
mov
mov
int3
out
cmc
jl
and
push
jb
mov
ljmp
add
stc
js
xor
pop
mov
mov
jo
mov
inc
inc
push
pop
sti
xchg
jle
mov
jbe
jno
push
and
or
xorb
xchg
les
mov
fisttps
gs
ficoms
cmc
loop
lret
fcmovne
xchg
out
cmp
add
mov
xchg
rorl
and
add
sahf
dec
push
pinsrw
or
loopne
jns
mov
call
test
xor
or
mov
call
aam
std
xsha256
cmpsb
push
cmp
test
cmpb
lods
mov
loop
mov
ja
das
cs
add
cli
insl
xchg
loop
shr
loope
rcr
cmp
aad
push
iret
arpl
pop
fldenv
sbb
cs
push
inc
addr16
rcl
popa
fidivrl
ljmp
out
pop
orb
out
xlat
cmp
inc
out
js
xor
in
xchg
sarl
push
pusha
mov
inc
push
js
xchg
push
bound
fsts
mov
mov
inc
lock
mov
ljmp
sti
xchg
ljmp
mov
or
push
inc
mov
imul
add
movsl
dec
mov
mov
mov
in
lret
xchg
nopl
int3
mov
mov
insl
in
pushf
outsb
jl
dec
in
subb
in
xorb
push
jne
test
scas
rcrl
aam
mov
pop
fiaddl
mov
or
and
int3
pop
in
insb
call
dec
mov
sahf
xchg
lret
mov
aaa
jle
mov
xchg
mov
adc
ret
ror
daa
pop
jb
in
je
push
ret
xchg
movsb
loop
sub
test
xchg
xor
clc
pop
jo
arpl
push
test
xchg
and
pop
push
aad
sbb
mov
imul
loopne
shrl
push
aam
and
mov
xor
leave
cmpsl
mov
dec
jg
or
mov
adc
sti
popf
ss
adc
add
pop
mov
adc
test
in
pushf
pop
loop
idivb
cwtl
imul
rcll
movsb
mov
add
pop
mov
sahf
nop
pop
mov
imul
xchg
daa
nop
mov
or
xchg
and
cmpsb
and
std
cmp
mov
int
aaa
adc
call
mov
mov
in
jp
cltd
jb
jmp
sub
and
mov
imul
inc
xchg
pop
xor
push
jp
push
in
rorl
cmp
sub
pop
sti
mov
aam
out
addb
xchg
sbb
xchg
loop
cmpsb
cld
fidivs
lds
arpl
lods
movsb
and
add
add
iret
add
pop
lea
or
divl
add
sti
and
repnz
pop
lret
loop
xchg
add
rcll
fldenv
xchg
ret
in
sub
dec
sub
popa
inc
mov
xchg
adc
add
pop
mov
push
in
push
jns
inc
sub
cvtdq2ps
or
and
shlb
pushf
sub
sub
xchg
js
sbb
jl
mov
or
adc
jb
mov
sti
cmpsb
iret
push
cmpsl
imul
push
pop
stc
icebp
sub
push
xchg
adc
pop
je
push
xchg
mov
push
mov
mov
loop
aam
mov
in
movsl
inc
push
cmp
int3
daa
mov
mov
pop
mov
iret
iret
fwait
sbb
sbbb
dec
pop
push
std
test
mov
mov
add
lcall
mov
jnp
or
rcll
in
scas
ljmp
arpl
jbe
sbb
xchg
push
inc
or
jg
loope
out
or
add
enter
xor
sub
add
or
iret
cmp
mov
mov
subb
fisttpl
rolb
leave
inc
pushf
push
in
je
mov
jno
pop
and
mov
mov
and
jp
dec
scas
and
add
and
mul
push
lret
add
push
cmp
lods
std
imul
shll
imul
sahf
daa
sub
stos
fwait
mov
das
cs
or
jne
into
aad
sti
fwait
inc
das
in
jle
gs
mov
mov
daa
inc
jmp
xlat
xor
xchg
in
int3
hlt
adc
pop
push
sub
out
and
std
mov
and
addl
lea
out
xor
enter
and
push
inc
xchg
aas
loop
cvttps2pi
mov
testl
pop
loope
aaa
outsb
push
cmp
out
setns
loop
push
and
push
lret
sbb
nop
inc
cmpxchg
lock
push
add
dec
test
inc
mov
popf
fimull
sbb
stc
xchg
xor
test
and
lods
das
lods
mov
mov
sub
fwait
dec
mov
dec
sub
test
movsb
push
jno
xchg
pop
or
in
orl
sbb
push
xchg
subb
js
xchg
std
loop
stos
push
iret
aaa
clc
std
popl
inc
jecxz
cmp
cmp
clc
and
notl
xor
cmp
loop
xchg
out
xchg
in
push
repnz
scas
xchg
loop
out
js
pop
nop
cmp
lea
lods
aaa
or
xchg
sub
sbb
dec
cli
rcrl
adc
aaa
and
aam
in
popf
jmp
sti
cmp
dec
loop
daa
xchg
shlb
pushf
insb
pop
sub
mov
pop
test
jb
and
inc
dec
mov
xor
aaa
adc
fwait
jne
orb
push
sbb
bound
cmp
call
adc
aam
js
pop
fmuls
mov
and
mov
and
insl
es
or
testl
push
js
in
add
adc
test
cmp
push
in
cmp
mov
adc
dec
and
mov
rorb
dec
or
sub
and
sbb
adc
mov
mov
imul
pop
data16
lret
pop
sbb
xor
lods
loope
xor
mov
fs
stos
and
mov
imul
xor
int3
mov
mov
pop
cli
push
fxch
mov
jle
leave
pop
adc
mov
add
pop
test
decb
jecxz
movsl
daa
add
mov
inc
daa
sub
mov
mov
dec
cli
jo
imul
xor
jno
das
xchg
outsl
dec
mov
aad
in
int3
bound
xchg
das
xor
sbb
test
leave
jmp
int
fs
mov
inc
aaa
fisubrl
lcall
mov
xor
push
mov
loop
cmpsl
ljmp
push
mov
sub
test
sub
xor
xchg
cwtl
fistl
and
ret
adc
sahf
out
imul
cwtl
sbb
clc
dec
stos
pop
repnz
inc
imul
hlt
sub
and
popf
adc
mov
and
test
jecxz
dec
and
and
cmc
adc
in
jge
mov
sub
push
dec
call
imul
xor
mov
mov
push
push
push
sub
mov
idivb
mov
inc
jo
addb
int
js
pop
cwtl
insb
loop
out
fidivrl
cmp
in
mov
dec
xchg
and
push
push
fiaddl
fildll
lcall
movsl
add
xchg
in
rorb
insb
push
push
xchg
xchg
aam
ficompl
pop
add
rcrl
aad
loope
push
add
dec
mov
iret
fnsave
cmpsl
out
mov
shl
add
outsl
sti
dec
cmpsb
test
lock
aaa
sbb
or
in
xchg
xor
les
adc
pop
inc
incl
cmp
and
out
xchg
pop
mov
or
ss
adc
jns
iret
xchg
icebp
xor
mov
sbb
imul
adc
xor
cmp
stos
in
sub
inc
and
orps
push
mov
cmpsl
dec
lock
sub
add
stos
and
add
adc
cmpsl
std
jle
xor
mov
test
and
out
insb
out
xor
or
fstps
push
mov
sbb
add
inc
jno
adc
arpl
push
xchg
loopne
fstpl
pusha
add
sub
movaps
add
mov
ret
adc
inc
dec
popa
cmp
xor
adc
mov
or
sbb
mov
inc
sub
and
scas
add
inc
push
andl
imul
mov
sub
repz
ds
sub
lods
lcall
and
insl
cmp
push
in
mov
or
dec
cmp
fsts
adc
or
add
ja
adc
mov
dec
xor
jo
outsl
lahf
push
add
out
imul
imul
lcall
das
in
sbb
call
mov
sbb
xor
imul
cmc
or
faddp
fwait
sbb
andb
add
push
gs
adc
lret
mov
call
lock
cs
add
mov
movsl
mov
sbb
push
sub
adc
jae
loop
and
xchg
push
test
iret
nop
imul
aas
daa
in
pop
or
and
pop
or
sbb
xor
sub
into
mov
xor
popa
push
jge
insb
pop
xchg
mov
or
lods
repnz
jmp
or
sub
dec
mov
es
and
and
mov
inc
or
pop
adc
hlt
in
sbb
xor
and
cmp
addr16
enter
mov
shlb
cltd
and
sbb
cmpsl
repnz
sbb
bound
or
xor
mov
loop
sti
sub
sub
fwait
out
daa
inc
les
or
loop
cli
push
dec
adc
and
lea
sbb
cmc
push
lock
in
pop
iret
icebp
sbb
stc
mov
mov
popa
loope
sbb
out
rorb
xor
stc
adc
in
nop
notl
fyl2x
push
dec
fcoms
push
pop
adc
stos
dec
lret
xor
add
jo
push
enter
nop
incb
lods
push
dec
insl
mov
test
mov
imul
insb
jno
jle
mov
cmpsb
pop
aas
mov
and
sbb
adc
dec
mov
push
pop
mov
pop
dec
shl
cld
testl
stos
xor
xor
mov
mov
push
cmpsl
push
mov
jecxz
mov
jmp
loope
ret
jns
fwait
lock
xor
scas
mov
out
testb
xlat
shlb
popa
insl
popf
cltd
jl
stc
mov
lock
ja
mov
or
mov
repnz
dec
fists
cmp
stos
fsubrs
mov
sahf
sti
inc
mov
stos
loope
mov
fcoms
out
mov
xor
call
pop
mov
adc
push
xor
dec
add
pop
cmpsl
pop
negb
or
psubusb
bound
mov
sub
xchg
push
jae
cld
testb
jp
in
int
notb
loope
into
mov
outsl
or
pop
push
in
xchg
lret
dec
bound
push
pop
mov
rcll
mov
idivl
enter
pop
cmpsl
pushf
stc
cmpsl
test
ljmp
dec
scas
pop
rcr
lock
inc
push
push
in
test
lcall
adc
sahf
pop
mov
std
rcrl
push
loopne
fdivl
dec
mov
decl
cmc
mov
clc
mov
adc
ud2
cmp
cmp
lret
ret
mov
frndint
ljmp
aad
mov
pop
mov
in
mov
and
adc
test
loopne
push
mov
lods
mov
loope
daa
rcll
loop
cmp
jns
dec
mov
je
dec
dec
inc
and
push
mov
sbbl
xor
imul
sbb
xchg
lods
cltd
icebp
js
inc
dec
shrb
stos
mov
enter
pushf
fxch
incl
cmp
test
adc
popa
fldt
adc
adc
cmc
out
inc
loop
ljmp
ret
xor
fs
adc
loope
xor
mov
push
imul
push
orl
inc
lea
into
imul
js
mov
imul
add
xor
int
jns
sbb
orb
clc
test
and
stos
mov
lods
loop
inc
cmp
in
ja
daa
pop
lea
and
inc
test
jecxz
inc
adc
sbb
iret
imul
dec
ss
sti
aas
testl
dec
mov
mov
mov
cmp
xor
movsl
cmpsl
les
aam
js
loopne
pop
jnp
mov
mov
loop
xor
xchg
outsl
sub
repnz
outsl
and
cmp
pop
add
nop
subb
dec
stos
jle
pop
rolb
cmpsb
int3
test
mov
xchg
jne
loop
xor
mov
js
and
inc
stc
notb
dec
inc
jecxz
push
jae
loop
sti
push
in
std
push
pop
dec
xor
fnstsw
sub
push
in
cmp
into
inc
fildl
push
scas
mov
dec
in
sti
aaa
fsts
jp
cltd
and
ljmp
xor
out
mov
rorb
sti
loop
cmp
arpl
negb
or
inc
aas
les
not
xor
mov
and
cmp
je
loope
popf
dec
arpl
aaa
in
jbe
xchg
sbb
scas
mov
fiadds
cltd
inc
sbb
je
xor
push
xlat
fsubs
pop
mov
ret
pusha
xchg
push
aas
and
mov
jp
loope
js
adc
loop
sbb
sbb
and
adc
xchg
ds
mov
pop
popf
adc
insb
jae
pop
inc
rsm
incb
in
cmpsb
nop
adc
adc
jbe
or
dec
xchg
aaa
sub
mov
lret
lret
mov
push
push
and
add
mov
push
movsl
int
pop
mov
add
subl
es
popa
cltd
nop
andl
adcl
cmp
fidivrl
cmp
xchg
test
mov
nop
xchg
and
push
shl
cmp
out
dec
lret
xor
cmp
dec
and
fwait
dec
xchg
nop
lods
xor
andb
sarb
pushf
jno
mov
push
push
and
cld
pop
sbb
daa
push
sub
shll
bound
daa
test
xchg
cmpsb
fsubs
lods
sbb
adc
stos
loope
xlat
sbb
pop
jae
inc
iret
enter
sbb
adc
mul
adc
inc
hlt
inc
inc
in
adc
test
adc
push
xchg
into
iret
xchg
xlat
xor
inc
mov
sbb
xchg
jb
flds
cmp
ss
repz
xchg
out
mov
ljmp
adc
mov
sbb
imul
mov
adcb
mov
adcl
fstpt
sub
outsb
scas
inc
and
repz
lea
sub
and
and
cmpsl
pop
leave
fnstsw
xor
and
sbb
fidivl
sbb
pop
sub
aas
mov
xor
sbb
adc
mov
xlat
mov
adc
lds
sbb
pop
or
ja
adc
cld
mov
aad
and
jmp
inc
nop
outsl
push
mov
pop
xchg
sbbl
in
es
addb
mov
xorl
rclb
loop
mov
cld
stos
jo
dec
test
shl
mov
lea
sbb
and
movhlps
mov
aas
ftst
jg
insb
and
arpl
outsb
mov
ret
test
add
popa
xchg
dec
sbbb
int
imul
lcall
mov
movsl
daa
repnz
sbb
bound
in
pop
orl
outsl
movsl
dec
nop
lods
shl
repnz
lock
jg
vmovups
in
shll
test
jmp
xor
cmp
loop
jnp
mov
insb
leave
fisubl
dec
xchg
pop
cli
jecxz
add
mov
cld
xor
mov
out
mov
or
mov
subb
mov
js
test
jbe
leave
mov
or
and
hlt
jecxz
out
int
jo
inc
test
sub
or
and
push
and
jnp
push
sbb
jbe
or
jne
pop
mov
repz
pop
xchg
sbb
xchg
shlb
xor
sbb
idivb
xchg
jne
fwait
xor
fs
or
loop
push
repz
pop
pop
iret
insb
jbe
lods
lods
xchg
xor
mov
lds
and
sbb
lods
mov
or
cmp
adc
int
test
movsl
jbe
sub
dec
mov
sbb
nop
xor
in
es
cmpsl
xchg
shrb
stos
add
jbe
mov
aas
adc
lcall
sbb
stc
aad
repnz
das
and
lcall
pop
mov
scas
out
cmp
push
fidivl
jge
jecxz
int
psraw
adc
pop
add
jle
add
sub
inc
popf
sub
out
inc
cltd
cmp
and
xchg
jno
lahf
adc
test
mov
xchg
mov
std
sub
in
xor
push
daa
pop
orl
loopne
daa
clc
mov
add
int3
repz
inc
jmp
lcall
jae
lret
hlt
mov
pop
daa
xor
inc
or
jbe
and
enter
xlat
std
pop
fcomi
xchg
inc
lahf
mov
mov
cmp
mov
scas
jg
mov
sbb
int
scas
mov
dec
mov
or
jb
adc
cwtl
sub
add
nop
les
sub
stos
lods
cmp
es
jns
enter
aas
call
stos
cmpb
iret
dec
sbb
push
mov
into
adc
fsubl
and
loop
and
or
sub
loop
xchg
inc
lea
and
icebp
adc
mov
push
xchg
ficoms
jnp
out
pop
sub
fisttpll
push
or
pop
mov
stos
leave
push
cltd
mov
xchg
fldz
xchg
je
jl
sub
outsl
xchg
hlt
cmp
xchg
imul
add
fnstenv
add
shrb
push
xor
divl
or
push
dec
xor
add
enter
in
imul
fwait
pop
sti
fistps
xchg
loope
mov
lods
xorl
popa
std
cmp
cltd
fwait
mov
push
mov
xchg
lds
xchg
pop
in
das
sti
xor
leave
push
ljmp
movsb
cld
add
ds
xor
fmull
idiv
push
xchg
jns
inc
add
in
cmpsl
push
push
adc
cmp
hlt
and
sub
imul
out
mov
or
push
mov
test
and
pop
and
aaa
inc
testb
dec
testl
jg
pop
inc
adc
scas
push
cmpsl
shll
cmp
cmc
cltd
adc
cmp
adc
dec
loope
stc
dec
decl
loop
pop
cmc
pop
cli
loop
and
lods
xchg
pop
out
xchg
inc
stos
aaa
sub
loop
outsl
int
push
sub
lret
ljmp
cmp
sahf
mov
mov
rorb
jp
inc
and
mov
sub
xorl
pop
xchg
daa
sub
xchg
adc
test
mov
add
pushf
push
sbb
incb
push
outsl
xchg
xor
das
adc
loope
push
scas
orb
fidivrl
mov
loop
cmc
adc
and
and
cmp
xor
xchg
shlb
jnp
punpckldq
and
fbld
mov
jge
loope
roll
leave
cmp
aam
mov
pop
mov
fnstcw
mov
cmp
add
ss
sti
rorb
push
inc
adc
pop
adc
xor
in
xchg
aam
pop
xchg
insb
and
dec
in
rclb
loop
mov
lods
mov
outsl
enter
aam
add
xor
and
cmp
cmpsl
sbb
jo
mov
into
adc
or
add
xor
pop
cmpsl
out
ss
test
inc
out
sub
mov
xlat
pop
loope
mov
out
push
ds
xchg
pushf
jns
nop
pop
das
imul
sbb
nop
dec
in
lea
loop
mov
pop
push
xchg
push
stos
mov
sbb
jo
jge
push
jnp
dec
sub
pushf
cmpl
adc
mov
loop
and
dec
mov
mov
aaa
das
in
fldl
cli
cwtl
ds
pop
fldcw
mov
les
rclb
xor
cmp
mov
cmp
add
push
sub
adc
rorl
lock
daa
imul
jb,pt
jno
xchg
mov
adc
dec
mov
in
movsb
mov
jnp
insb
ret
push
and
cmp
mov
daa
in
in
push
pop
adc
mov
sbb
jl
movsb
scas
sahf
adc
mov
xor
dec
loop
sbb
cs
aas
mov
sub
push
xchg
jnp
pop
call
xorb
and
cwtl
pop
loope
mov
in
cmp
mov
xor
mov
test
pop
ja
addl
popf
out
adc
adc
loop
sbbl
shl
or
xchg
fsincos
mov
in
leave
flds
out
cs
mov
stos
cwtl
idivb
xchg
mov
push
add
pop
or
mov
cmc
pop
add
psubb
fcmovnbe
mov
xchg
push
mov
repz
jno
xchg
inc
adcb
sbb
cltd
daa
out
mov
data16
js
cld
adc
pop
mov
mov
cwtl
in
les
loopne
or
shrb
imull
sub
inc
rcrb
add
and
xor
data16
mov
or
xor
sbbb
xchg
loop
push
imul
jo
cmp
mov
lcall
inc
ret
jo
cmp
cmp
xor
jle
push
or
pop
inc
arpl
mov
push
pop
push
ficoml
xchg
inc
ret
gs
and
mov
nop
daa
mov
mov
arpl
mov
jbe
xor
pop
aaa
sub
jg
or
rcll
cli
inc
and
aaa
push
hlt
mov
in
cmp
outsl
inc
adc
and
pop
jg
test
adc
or
inc
rorl
std
clc
cmpsl
sbb
gs
push
aas
jge
xchg
and
push
outsb
xchg
aas
and
mov
test
mov
fs
gs
jns
add
out
fadds
dec
rolb
xchg
gs
jne
mov
daa
cli
aaa
pop
jo
sbb
out
xor
rep
sub
xor
mov
test
or
cmpsl
adc
stos
ja
mov
pop
daa
sub
xchg
cmp
int
xor
inc
aaa
aas
jmp
add
mov
sbb
push
sbb
and
iret
ss
js
xor
fisubrs
mov
ret
scas
dec
and
mov
in
std
nop
std
or
ds
or
add
xbegin
cltd
or
out
mov
movaps
testb
cmp
xor
xchg
fnsave
out
imul
mov
dec
sub
nop
push
dec
jno
jne
icebp
or
cmp
inc
cmpsb
push
and
in
pop
stc
sbb
rorb
and
and
addr16
stc
dec
cmpsb
sbb
movsl
dec
enter
lea
sbb
or
ds
loop
push
sbb
loope
aaa
pop
bound
sub
or
or
dec
sub
ljmp
cs
mov
xchg
sub
jge
leave
mov
mov
daa
dec
pushf
and
aas
in
sbb
push
mov
loopne
lock
mov
sub
add
pop
mov
imul
mov
out
jge
pop
push
aam
cmp
arpl
sbb
mov
cwtl
sub
mov
jae
or
out
push
sub
pushf
je
test
negl
lds
insb
cwtl
and
push
pop
loop
xchg
fcmovne
ljmp
adc
pop
pop
outsb
jo
push
loop
jle
ffree
jbe
fcompp
dec
cld
cmp
insb
jle
pop
add
sbb
in
cmp
cld
inc
shll
adc
js
push
cltd
aad
lds
inc
mov
test
add
and
adc
test
jno
lock
testl
jmp
jp
mov
ljmp
jno
sbb
loop
faddl
jno
jbe
xchg
cmp
loope
mov
aam
mov
ret
mov
jbe
xchg
mov
or
int3
sarl
gs
in
stos
hlt
pop
adc
out
data16
pop
or
rcr
jg
ret
incl
or
roll
fidivs
jle
fmuls
mov
data16
fs
outsl
mov
xor
xchg
xsave
loope
dec
out
mov
xchg
xor
mov
sbb
mov
fs
mov
int
xor
es
nop
push
mov
jecxz
aas
sbb
push
ja
inc
adc
fnstsw
jb
push
repz
insl
lods
adc
xor
jo
push
inc
sbb
cmpsl
out
pop
roll
xor
pop
loope
in
inc
pop
xor
or
inc
nop
in
cmc
ror
pop
jmp
sub
movsb
je
mov
lret
fidivrs
and
loop
add
jno
loope
sub
out
cli
inc
cmp
add
in
xor
mov
inc
nop
fs
into
pop
adc
and
and
sbb
xor
jno
sub
mov
ret
adc
aaa
lahf
ret
ret
outsl
mov
sbb
lock
bound
push
fbstp
in
inc
add
sub
xor
mov
mov
inc
add
nop
cmp
push
and
jnp
xor
jne
mov
jns
add
fidivs
sub
les
pop
and
insb
repz
lret
xor
jl
in
shr
mov
dec
xchg
xor
mov
dec
ss
loop
sahf
jb
push
add
xor
movsb
lea
mov
sarb
mov
pop
push
sub
sbb
ljmp
aaa
push
in
rcrb
mov
movsl
push
fcompl
cmpsb
xchg
pop
and
push
xor
stos
push
in
pop
out
out
inc
in
aaa
lret
mov
ror
in
jecxz
shrl
aaa
adc
xor
fs
push
es
fwait
or
dec
mov
sub
push
pop
cmpb
inc
popf
ret
adc
mov
aam
pop
loope
sbb
lods
adc
in
je
sbb
cmpsb
das
fcompl
mov
adc
or
pop
ret
pop
xor
mov
or
aaa
mov
dec
addb
int
call
push
fstl
out
inc
loop
repz
sbb
sub
adc
cmpsl
add
pop
lods
sbb
pop
mov
cmp
ss
or
in
andps
sub
lret
xchg
imul
mov
ror
cld
and
mov
sub
mov
pop
inc
stos
js
nop
xor
add
rcl
loop
sub
test
xor
xor
jb
bound
test
push
mov
mov
cmp
push
test
popa
xchg
je
sub
and
fsubrl
jmp
mov
stos
pop
test
fwait
adc
movsl
into
mov
out
push
repnz
into
ljmp
jl
xor
pop
out
xchg
mov
cmp
inc
pop
mov
push
test
scas
rorl
adcb
dec
outsb
sbbb
test
mov
or
xchg
ret
dec
mov
popf
mov
sbb
aaa
adc
mov
lahf
adc
mov
xchg
sbb
pop
scas
lds
push
loop
in
mov
in
and
cmpsb
add
jae
or
jle
push
in
cmpsb
sub
insb
push
aam
aam
xchg
xor
cli
add
notb
xchg
rolb
sub
fistpll
loop
icebp
and
andb
outsb
in
repnz
fisubrl
add
xor
mov
pop
rcll
and
popf
adc
xor
lcall
repz
push
out
adc
loope
addr16
cmp
cltd
in
aad
insb
jb
loop
iret
push
cmove
pop
rcll
sbb
inc
repnz
or
loopne
jge
fstpl
mov
jno
xchg
imul
xor
in
push
bound
jo
int
jbe
mov
jne
dec
cli
scas
cmp
xchg
loope
je
mov
jo
outsl
jecxz
dec
imul
lds
icebp
cpuid
addr16
aas
sbb
push
dec
test
sbb
leave
pop
or
ljmp
jg
add
inc
mov
or
testb
cmp
gs
sub
or
imul
mov
stos
cmp
lcall
adc
in
mov
rorl
xchg
stos
pusha
sti
fldl
mov
nop
xchg
or
jae
push
pop
iret
sbb
dec
verr
insb
push
push
rcl
in
sub
imul
ds
mov
rcrb
and
cs
hlt
vpsrad
mov
mov
aas
lea
sarb
scas
mov
jl
cld
xchg
and
leave
mov
dec
adc
addl
ss
gs
inc
shlb
cmp
cld
inc
mov
sarb
dec
mov
or
inc
push
jbe
mov
mov
fldt
inc
mov
pop
cmp
add
or
or
inc
push
xchg
push
in
inc
push
clc
aaa
in
loope
test
movsb
aas
lret
xor
push
push
sub
dec
mov
inc
out
mov
dec
data16
or
shr
push
adc
xchg
popa
popa
mov
daa
loop
xor
inc
add
loope
mov
pop
stc
icebp
filds
shll
aad
shll
es
leave
ss
add
lock
popa
in
jge
xor
dec
fbld
inc
mov
push
jns
sti
cmp
xor
in
jmp
mov
xor
xor
xorb
add
or
push
roll
jno
pop
jae
in
cmc
stc
mov
xsha256
cmpsb
push
and
adc
add
pop
or
mov
scas
mov
jb
ret
loop
out
insl
inc
mov
and
jge
and
ds
lret
mov
mov
call
movsl
cltd
call
movsl
adc
out
mov
mov
pop
int3
xorl
and
pushl
jmp
jo
push
insb
lds
sbb
push
push
push
loop
jg
cmp
dec
mov
nop
xchg
aam
inc
inc
jmp
gs
xchg
and
xchg
stos
es
jns
js
dec
ss
rolb
mov
mov
and
roll
mov
loop
shll
and
jge
aaa
hlt
pop
inc
sub
push
out
or
ret
int3
sbb
in
sbb
xchg
mov
jb
mov
pop
mov
cmp
dec
lods
stc
inc
inc
shll
pop
cltd
or
out
shrb
clc
push
pushl
pop
push
les
sbb
xor
mov
imul
cwtl
cwtl
xchg
daa
dec
in
sub
xor
mov
fimull
sarl
daa
mov
sub
lret
xchg
pop
push
cld
notb
xchg
ret
loop
push
mov
bound
stc
lret
cltd
sbb
and
xor
ljmp
mov
addr16
popf
jno
xor
and
movsl
aas
xchg
int3
cmp
xor
lahf
adc
scas
push
jo
gs
mov
insl
push
mov
xchg
adc
cmp
nop
dec
inc
mov
lods
sub
in
mov
add
add
sub
xlat
sbb
lods
pop
push
lret
and
cwtl
ret
or
jno
shl
popf
loopne
inc
insl
adc
adc
jns
fidivl
out
ss
sbb
xor
aaa
adc
icebp
mov
mov
cmp
in
test
adc
xchg
stos
mov
mov
dec
out
ljmp
xchg
add
arpl
adc
std
pushl
adc
jne
ret
negl
rorb
or
sbb
loope
adc
jb
addb
adc
sub
int3
int
jbe
cmp
repz
movb
xor
sbb
add
cmpsl
or
test
std
out
sbb
test
subb
or
adc
in
add
and
mov
cmpsl
push
loop
stc
pop
and
mov
dec
jp
adc
jno
xchg
jmp
add
aaa
out
push
mov
xchg
sub
cli
insl
jecxz
je
ljmp
push
xchg
inc
cwtl
loope
inc
jae
mov
pop
push
aas
or
scas
push
sub
and
in
sub
dec
ficomps
out
jne
fst
sahf
out
loope
arpl
sbb
or
sti
xchg
mov
out
xchg
inc
call
ss
pop
and
jno
xor
adc
lahf
xor
je
scas
sbb
push
mov
inc
outsb
mov
push
aam
mov
loop
or
cltd
sub
pop
out
sti
pushf
shlb
pop
sub
subb
sub
iret
push
cmp
shlb
inc
inc
scas
dec
push
outsb
and
cmp
mov
dec
stos
mov
ss
cmpb
out
pop
lea
mov
cmpsl
mov
push
outsb
movsl
aaa
loop
insl
jp
out
rcrb
scas
pusha
inc
test
or
push
in
mov
bound
cltd
lcall
pop
mov
jge
dec
dec
gs
hlt
lock
sbb
insl
aaa
mov
adc
jmp
pop
dec
mov
int3
xchg
stos
cmpsb
or
fsubrs
jb
xchg
mov
in
loope
in
aad
rclb
xchg
lcall
rolb
or
hlt
nop
mov
mov
sub
insb
ss
loop
mov
dec
test
iret
test
cltd
adc
jne
xor
mov
daa
sbb
or
mov
sbb
and
aas
adc
repnz
dec
scas
mov
pop
add
mov
imul
cld
jb
loope
aaa
inc
in
push
pop
mov
in
add
fucom
leave
add
dec
ss
shl
pop
ljmp
test
loope
test
shrb
hlt
lea
jl
lcall
fdivrl
jnp
xchg
inc
cmc
or
pop
adc
jne
ja
mov
cltd
stc
mov
leave
sbb
xor
adcb
aaa
cmp
inc
addr16
push
xor
and
js
xor
gs
sbb
outsl
push
or
adc
loop
mov
pop
add
fiaddl
imul
mov
inc
mov
je
and
aas
loop
mov
dec
fldenv
pop
das
jae
fmulp
mov
scas
aaa
repnz
cmpb
jo
loop
push
ret
push
adc
pop
js
and
ja
mov
shrb
mov
mov
lock
not
or
mov
jmp
or
daa
push
mov
lea
push
sarl
adc
dec
std
or
lods
bound
ret
rolb
mov
dec
lret
sub
outsl
add
cwtl
dec
mov
dec
mov
divl
inc
and
inc
inc
and
add
cwtl
loop
out
in
mov
sbb
push
xor
loop
popa
pop
jne
popl
mov
jle
and
sahf
shl
cmp
and
sbbb
cwtl
jnp
stos
lret
int
rcrl
repz
int
mov
movsl
adc
jmp
insl
cmp
pop
mov
pusha
rcrb
sub
xor
iret
loop
nop
insb
dec
ljmp
sub
or
setl
iret
pushf
loope
pop
jbe
adc
loope
mov
out
les
sarb
lcall
ljmp
xchg
outsl
cs
lret
xor
sti
int3
push
bound
popf
mov
je
pop
popa
aaa
loop
inc
ljmp
je
fwait
bound
pop
mov
ss
mov
fsubrl
mov
xchg
jp
pop
nop
jo
sub
sub
faddl
or
js
jl
and
sbb
loope
fcoml
xor
sub
xor
sbb
test
sub
mov
push
shl
cmp
sbb
mov
mov
out
xor
out
in
ljmp
pop
aad
mov
xlat
push
mov
sbb
rolb
rolb
sub
or
push
mulb
add
push
jb
into
xchg
inc
push
sbb
add
nop
lods
shr
int
mov
fisttpl
lea
ds
into
push
shl
dec
push
push
imul
fcompl
mov
lds
cld
sub
jl
int
xor
add
inc
popf
mov
sbb
arpl
xchg
mov
mov
dec
push
movsl
pf2iw
cmp
lea
sar
mov
dec
iret
jns
pushl
jmp
inc
outsl
jle
fsts
inc
in
mov
or
aas
mov
cltd
xchg
pop
pop
adcb
loop
sar
jno
cmp
in
loopew
xor
test
mov
jge
xor
sbb
fnstenv
jle
push
dec
aam
enter
pusha
sti
add
hlt
or
pop
fadds
push
cli
test
add
cs
fdecstp
jecxz
xchg
inc
mov
add
sub
push
sbb
sbb
addr16
daa
aaa
int3
adc
add
dec
lds
xor
sbb
xor
sub
imul
mov
push
mull
out
lea
imul
mov
jl
cld
dec
test
daa
jb
jmp
jns
add
mov
hlt
jle
mov
in
lods
test
test
xor
in
roll
sbb
out
inc
das
jae
sub
outsb
pop
jno
loopne
and
ss
xchg
jl
in
adc
outsl
xchg
loop
adc
les
lret
sahf
imul
ficoml
push
mov
insb
nop
mov
inc
cmp
xlat
addb
popf
mov
cld
fwait
xchg
xor
inc
movsl
inc
in
mov
push
sahf
mov
sub
xor
jno
repnz
mov
in
inc
leave
mov
dec
shlb
ss
jmp
adcb
rol
test
das
int3
pop
out
hlt
adc
pop
inc
xor
jge
cmpsb
es
adc
lock
or
movsb
fdiv
loop
lods
lahf
jle
int
rcll
test
mov
xor
lcall
idivb
or
jae
add
das
and
jle
pop
ljmp
sbb
sahf
and
mov
call
lahf
in
adc
xorb
pop
jp
xchg
adc
mov
lahf
sub
rorb
aam
and
aas
mov
jg
adc
int3
or
add
adc
mov
mov
adc
mov
pop
jg
sbb
lahf
int3
inc
xchg
push
cli
pop
pop
adc
scas
ja
sahf
pop
stc
mov
push
cwtl
and
push
js
xor
adc
shll
sbb
xchg
stos
das
insb
push
fnsave
lret
pop
aas
in
lods
inc
mov
or
or
popf
adc
mov
adc
mov
cmp
sbb
ja
dec
mov
in
push
lret
fistps
cmp
cmc
adc
fnsave
mov
sub
xor
cmpsl
xchg
cs
fsts
dec
jp
xchg
xchg
sar
lods
lock
mov
lcall
movsl
push
and
xor
repnz
adc
and
roll
pop
sahf
and
push
cmp
adc
pusha
sbb
lea
sbb
popa
mov
popf
pop
call
fsts
pushf
xor
nop
jp
cmpsb
popa
cmp
push
iret
lret
inc
mov
lret
cmp
popf
adc
lods
imul
xor
sub
aaa
jle
adc
dec
or
jecxz
repz
xchg
adc
mov
push
addb
outsb
orl
pop
sti
dec
cmp
popf
push
jge
adc
cwtl
dec
mov
mov
push
ret
sbb
jp
xchg
mov
jle
lcall
in
xchg
movsl
xorl
pop
aad
push
mov
xchg
ret
sub
loop
pop
push
movsl
dec
adc
rcrb
jmp
xchg
lea
xor
negb
fucomi
aas
adc
sahf
loop
shll
xor
test
aad
adc
xchg
imul
mov
scas
insb
push
out
rcrl
test
mov
mov
in
xchg
test
pop
outsl
lret
mov
addb
sbb
inc
aam
ds
and
das
mov
popf
lods
mov
adc
pusha
stc
fisttpl
adc
cs
mov
lret
into
lods
pop
stc
adc
out
jp
xchg
add
addl
lods
ror
push
call
pusha
aas
mov
iret
imul
fwait
pop
pop
cmp
mov
sbb
ret
xchg
pop
dec
out
adc
xor
cltd
pop
aam
sbb
popf
mov
push
xchg
jnp
lds
in
cmc
div
adc
aas
dec
enter
insb
and
scas
pusha
push
inc
or
adc
cmp
loope
arpl
lock
das
gs
std
inc
mov
adc
jbe
scas
outsb
inc
mov
clc
adc
mov
roll
pop
jmp
or
cmp
fdivrs
sbb
mov
add
shl
lret
mov
adc
int
sub
ss
adc
enter
cli
test
and
rorb
pop
mov
adc
ljmp
xchg
adc
push
ja
enter
xor
out
ret
in
add
sbb
add
adc
push
mov
rcll
sub
pop
leave
arpl
loopne
xor
push
or
adc
call
shrl
ja
push
adc
push
fwait
shlb
pusha
xchg
loope
adc
sub
or
out
addr16
leave
xchg
or
push
scas
pop
pop
enter
xor
or
movsl
lods
pop
popa
sar
nop
push
test
xlat
outsl
scas
into
mov
xor
xor
inc
or
pushf
call
ret
loope
dec
mov
std
pop
adc
das
pop
rcrl
rol
repz
adc
scas
push
inc
lret
std
aam
movsl
fs
adc
dec
sub
or
daa
push
push
cmp
ss
mov
aaa
fimull
imul
lods
gs
add
mov
dec
dec
xor
les
jp
adc
cmp
xor
push
mov
test
adc
negb
fcmove
push
adc
hlt
adc
add
icebp
clc
adc
pop
out
adc
add
push
stc
outsl
push
jae
insl
mov
adc
scas
out
push
dec
negb
adc
add
fwait
shlb
lds
je
in
sub
sub
mov
xor
and
adc
in
fldt
outsl
jl
cwtl
sbb
push
adc
pop
mov
dec
inc
sub
in
pusha
imul
pushf
push
pop
in
xlat
mov
loop
enter
outsl
insl
adc
out
loopne
lock
ret
push
outsb
xchg
adc
scas
sub
das
arpl
cmc
pop
sub
in
cmp
pop
dec
aad
rclb
dec
pushl
jmp
jno
mov
xor
sub
call
scas
gs
ret
shrb
push
adc
inc
and
enter
adc
js
movsb
jp
mov
and
cmp
push
rcrl
jns
fnstsw
stos
cmpsl
fwait
mov
adc
into
and
xchg
mov
ret
cld
nop
arpl
dec
popa
clc
in
xchg
push
aam
sbb
mov
push
xchg
adc
mov
mov
clc
adc
xchg
pop
popf
adc
lret
jnp
mov
cmpsl
xor
cltd
ja
loop
push
lahf
xchg
xchg
add
mov
lods
ret
dec
fsub
clc
inc
adc
gs
jno
inc
das
cmp
xchg
inc
cmp
outsb
aas
adc
mov
mov
in
xlat
jae
push
xor
adc
push
loop
adc
fiaddl
sub
das
psubq
ljmp
ret
adc
inc
sub
out
test
mov
add
push
in
sub
cmc
adc
add
or
mov
mov
aaa
and
mov
mov
mov
cwtl
jp
mov
push
adc
add
ljmp
mov
pushf
fstl
fistpll
sub
div
adc
cmp
sbb
fisubs
xor
cmc
loopne
aad
push
sub
fwait
cmp
ficoml
mov
jne
pushf
out
dec
sub
ja
ss
clc
mov
adc
and
popa
mov
or
repz
xchg
inc
adc
push
xor
inc
pop
adc
dec
push
movsl
or
pop
out
xchg
or
push
sbbb
mov
mov
clc
xchg
fistpll
daa
mov
jge
scas
mov
adc
inc
add
pop
cmc
sub
pop
mov
mov
dec
dec
out
pop
ret
adc
hlt
jg
dec
push
imul
mov
jmp
sarb
push
js
wbinvd
das
jo
adc
adc
mov
xlat
fistps
cli
dec
outsb
fimuls
and
enter
cmp
adc
fstps
std
repnz
push
sbb
adc
rcrb
pop
jno
cs
sbb
add
sub
cs
push
mov
pop
movsb
rcrb
xor
push
aaa
out
mov
adc
push
daa
loopne
jecxz
adc
add
adc
scas
mov
xor
xor
psraw
dec
push
sbb
xchg
pop
int3
out
push
jb
adc
pop
sbb
pop
xchg
inc
lods
sti
mov
das
fyl2x
dec
xor
loope
hlt
movsl
or
ljmp
loopne
arpl
leave
xor
mov
xchg
inc
fwait
lret
push
adc
psrld
movsl
jmp
aaa
fdivrl
jg
pop
popf
loope
dec
pop
adc
xor
adc
and
push
xchg
mov
dec
rclb
and
lock
lret
ja
push
xor
xor
cmp
xchg
adc
push
and
test
mov
jmp
ss
and
sbb
and
sub
push
jge
adc
clc
fwait
bound
lret
add
dec
mov
mov
xchg
cs
aas
into
push
and
fs
lahf
sbb
jae,pt
bound
jo
cmc
rcll
and
gs
loopne
jmp
inc
or
mov
imul
imul
xchg
test
sbb
loop
adc
sbb
adc
mov
dec
in
mov
xchg
aaa
pop
xchg
adc
insl
das
rcrl
push
inc
out
test
rclb
mov
in
xlat
push
push
movsb
xor
and
adc
fwait
xorl
fcomip
in
lcall
sarl
adc
sahf
loope
mov
stos
cmp
add
das
popa
in
sbb
cmc
jne
mov
loop
inc
int3
in
pop
xchg
dec
dec
and
cmp
xchg
lds
and
inc
xchg
adc
inc
subl
adc
add
inc
repz
enter
xchg
mov
xchg
rcrl
daa
and
cmp
jo
sub
jmp
mov
pop
mov
mov
mov
sub
and
xchg
or
adc
iret
xorb
push
xor
mov
push
xor
cli
sahf
jmp
and
add
ja
xor
pop
or
inc
xor
sbb
in
pusha
xor
jge
mov
inc
out
push
pop
leave
test
dec
js
repnz
jns
dec
xchg
and
aas
sbb
mov
in
inc
ds
cwtl
adc
ret
mov
fwait
adcb
pop
pop
repz
pop
jge
push
ret
pop
cs
cmpsb
adc
inc
jecxz
pop
mov
add
aad
scas
pop
adc
cmp
and
pop
stc
clc
mov
pop
daa
cmp
jge
adc
imulb
shrb
adc
pop
dec
inc
adc
je
jl
and
inc
xor
or
ljmp
xchg
scas
mov
mov
lcall
les
fcoms
notb
imul
mov
pop
jo
lcall
ret
adc
enter
lcall
int3
inc
dec
mov
adc
add
push
jge
insl
mov
mov
sub
adc
movsl
ret
mov
aaa
or
nop
dec
lock
aaa
xlat
lahf
xchg
out
push
and
iret
pushf
xor
xor
and
push
push
adc
mov
das
pop
xor
mov
sub
adc
sub
addl
pusha
jno
mov
xchg
push
xchg
and
sub
adc
jns
jnp
movsb
out
sub
test
or
xchg
std
test
jbe
fisttpl
inc
lea
adc
dec
dec
jno
dec
xor
jg
stos
pop
hlt
xchg
pop
jne
ja
xchg
ljmp
inc
jg
mov
addl
jmp
xchg
jno
fsubrs
and
jae
movsb
sahf
mov
ja
mov
jns
jnp
push
loop
lret
jg
and
subl
sti
adc
aaa
xchg
mov
pop
dec
push
mov
pop
xor
adc
repnz
lods
mov
lods
pop
std
jne
cmp
jns
and
jnp
pop
stos
xchg
xor
mov
stc
pop
dec
jno
mov
rorl
dec
pop
xchg
jg
lret
xor
gs
mov
jae
jne
push
mov
inc
mov
dec
pop
jnp
and
jge
pop
movsb
xchg
and
orl
dec
mov
dec
cmpsl
dec
dec
and
xchg
push
mov
loop
fidivs
xor
jno
jne
ja
cmpl
lcall
xchg
mov
or
out
addl
fcmovbe
loop
addl
xchg
sbb
pushl
ja
jo
loop
cmpsb
adc
xchg
es
mov
stc
push
std
fdivl
jns
mov
movsl
jnp
fidivrl
xchg
ss
pop
fiaddl
test
test
pop
xchg
lods
pop
add
mov
cmp
fisubl
shll
repnz
xchg
xchg
ja
jns
fisubrl
cmpl
dec
sub
int
jecxz
inc
subl
movsl
test
mov
pop
mov
call
push
xchg
xchg
inc
mov
test
dec
jne
cmp
jns
jnp
jge
cmp
pop
lcall
sbb
cmp
movsb
jb
xchg
orl
xor
mov
cltd
dec
movsl
jno
sbb
popa
mov
cmp
push
jnp,pt
sub
xchg
mov
fcmovbe
loop
ljmp
hlt
sarl
mov
xchg
fcmove
cmc
add
lahf
dec
push
inc
out
and
adc
mov
and
pop
std
enter
add
insb
sbb
ja
and
pop
pushf
lahf
rcl
leave
jnp
movsb
jle
add
push
jg
ret
and
push
int
jbe
stos
pop
into
add
push
mov
pop
mov
les
leave
push
icebp
push
pop
add
push
jg
scas
movsb
and
mov
dec
mov
gs
pop
in
out
jg
xor
cmc
pop
daa
test
pop
jnp
fcoms
arpl
pop
adc
cmp
mov
stc
push
pop
jp
xlat
ja
push
cmpl
mov
loope
aam
xchg
add
or
dec
sub
flds
call
push
mov
xor
xorb
xor
shlb
adc
dec
rcrl
jnp
lods
push
sbb
jns
movsb
scas
mov
fsts
adc
test
addl
mov
dec
rcr
cmp
xchg
sbb
adc
jne
pop
imul
pop
in
jle
loopne
cmpl
stc
enter
cmpsl
jg
pop
mov
pop
orl
xor
stc
mov
outsb
xor
movb
adc
cmc
mov
cltd
es
xchg
sub
movsb
imul
xorl
xchg
push
sub
jns
jnp
fiaddl
mov
xor
dec
scas
dec
jmp
mov
test
movsb
bound
pop
jae
cmp
pop
xorb
ret
xorl
movsb
xchg
pop
flds
bound
jge
jg
pop
jb
mov
fadds
stc
xor
adc
sub
pop
icebp
fisubrl
mov
jl
mov
rcll
push
xor
fisubrl
repnz
jbe
adc
cmc
movsb
push
lahf
out
enter
mov
push
mov
ret
cmc
cmp
dec
jg
pop
mov
and
or
andl
addl
xchg
cmp
mov
loop
scas
jno
push
lahf
cwtl
shrl
mov
cmpsl
dec
dec
jns
inc
inc
xor
jg
data16
test
loop
inc
xchg
sub
test
ljmp
jne
ja
fisubrl
push
popa
mov
inc
cmp
addl
push
sbb
test
add
sub
testb
sbb
mov
mov
jmp
cmc
stos
dec
xchg
ja
inc
dec
mov
lcall
sub
mov
xor
jg
fmulp
ljmp
test
test
test
xchg
mov
dec
cmp
jle
sbb
int
mulb
mov
xor
nop
loop
aas
jnp
jg
loop
lods
dec
adc
test
xchg
mov
test
aad
inc
push
sbb
imul
sbb
inc
jns
or
cmc
mov
cmc
into
inc
sub
jns
sbbb
jb
inc
push
mov
stos
lea
cltd
fstps
cmpsb
pop
adc
stos
aaa
dec
jno
std
jno
in
jae
fmul
push
js
sub
jns
pop
fcoml
push
sti
jbe
cmp
mov
addl
in
adc
mov
mov
popa
or
push
inc
push
sub
jno
lods
imull
lcall
lea
mov
dec
jg
mov
and
rcrb
flds
test
lcall
imul
mov
cmc
movsb
pop
mov
mov
mov
push
dec
inc
jno
dec
jbe
mov
outsl
pop
jne
arpl
push
mov
ret
xor
movsl
mov
and
mov
test
aaa
stc
sbb
xchg
xchg
and
mov
in
movsl
mov
test
mov
ret
xchg
jge
push
mov
lret
jmp
sti
jge
xor
jg
and
ja
dec
scas
dec
out
test
fsubrs
xor
rclb
in
fcoml
jno
popf
jae
dec
mov
loopne
mov
pop
push
loop
xchg
dec
nop
pop
aam
pop
jge
mov
jb
mov
cmc
rcl
pop
cmpl
xchg
movsb
cld
sbb
mov
add
cltd
jmp
inc
loop
push
xchg
xor
pop
push
xchg
adc
xor
and
lret
cmpl
mov
jg
lods
mov
dec
movsb
mov
mov
sub
and
lods
cmp
push
mov
cmp
push
lock
pop
ja
xchg
dec
out
dec
or
shl
pop
pop
jge
cmp
addl
into
adc
pop
mov
mov
ljmp
xchg
shr
popa
ja
std
cld
flds
in
dec
mov
push
xchg
jp
jg
or
xchg
mov
mov
or
push
mov
ret
cmc
cmpsb
adc
mov
movsb
mov
sbb
pop
cmp
mov
in
jne
test
ja
lods
out
add
cmp
push
cmp
loop
sbbb
jg
pop
nop
xchg
orl
outsb
stc
loopne
test
shll
cmc
push
in
mov
imul
adc
loop
mov
pop
add
pop
push
xor
lea
add
mov
xor
push
test
pop
adc
jno
mov
dec
out
ljmp
inc
mov
jg
lods
loopne
and
test
sahf
jns
or
push
sbbb
repnz
jge
loope
jecxz
dec
sahf
dec
cmovns
call
pop
rclb
bound
lods
mov
mov
mov
cmc
stc
add
aaa
dec
push
imul
ja
ss
mov
adc
xchg
jg
addl
test
xchg
imul
mov
pop
push
sbb
sbb
jns
fiaddl
pushf
cmpl
cmpl
in
mov
and
imul
popa
push
sbb
pop
mov
mov
ds
dec
xchg
inc
mov
jp
bound
push
sahf
jae
jne
pop
stc
xchg
std
lods
add
dec
pop
ja
dec
lret
jnp
pop
or
idivl
pushf
mov
pop
sbb
loop
pop
test
adc
pop
and
jle
xlat
mov
mov
outsb
push
dec
xchg
outsb
shll
push
loope
cmc
movsb
stc
repnz
cmp
dec
jb
sbb
mov
test
inc
test
scas
cmpsb
std
cmp
xchg
cmp
add
cmc
mov
sbb
pop
cmp
ja
cmpb
lock
cmpl
repnz
push
jge
jg
ss
dec
roll
xlat
repnz
jp
pop
bound
andb
add
dec
lcall
push
lcall
popa
mov
push
sahf
mov
loope
test
daa
sub
repnz
mov
sbb
mov
outsb
dec
fwait
ljmp
shll
pop
das
dec
subl
sub
sub
das
xchg
insl
jmp
lahf
repnz
or
adcb
out
das
les
loop
or
push
lea
popf
xchg
xor
add
aad
xchg
fstps
ss
pop
je
icebp
jns
mov
incb
push
andl
addl
mov
push
cmp
shlb
mov
aam
in
movsb
sub
movsb
lss
jp
xchg
jg
pusha
mov
orl
test
jge,pt
insb
ss
cmc
ja
cltd
adc
dec
inc
sbbb
data16
jae
and
ja
xchg
loope
cltd
fidivl
mov
les
pop
inc
adcl
loop
ljmp
xchg
orl
jno
cmp
jb
jae
fidivl
incb
and
ja
pop
jmp
cmp
sub
shrb
sub
adc
jmp
leave
sub
sbb
mov
std
mov
cmp
lret
jae
jne
shlb
fcmovbe
loop
imul
mov
movsl
mov
push
test
stc
inc
std
enter
imul
and
mov
out
shll
pop
imul
lods
mov
xchg
lods
addr16
fmull
sbb
mov
lcall
mov
xchg
lcall
xchg
xor
test
sarb
das
xorl
testb
jns
mov
xchg
xchg
inc
jg
addl
subl
fbstp
add
and
adc
jne
sub
mov
jno
cmp
sub
jne
jecxz
mov
lret
jns
repnz
dec
jnp
ret
cmp
aad
lret
pop
ficompl
out
int3
push
lret
mov
ret
xlat
out
rorl
xchg
jno
xor
movsb
jae
xorl
push
xchg
daa
dec
ja
xchg
pop
push
jns
in
loop
sub
lods
fisubrl
mov
rcrb
data16
push
orl
mov
dec
ror
inc
aas
jno
movsb
xor
sbb
cmc
jne
shll
and
nop
shll
subl
jg
mov
stos
mov
and
orl
xchg
fnstenv
push
xorl
dec
vpcomd
jae
ficompl
jne
arpl
icebp
inc
movsb
jbe
xchg
jnp
or
xlat
jge
jg
or
test
sub
rorl
or
aam
add
or
mov
or
outsl
mov
xchg
popf
shr
mov
addl
xorl
subb
lea
push
mov
mov
stc
stos
aad
cmp
fnstsw
add
pop
dec
push
or
jne
ja
movsb
adc
sarl
dec
jge
sbb
jg
repnz
ljmp
daa
inc
addl
cmp
pushf
addr16
stc
ret
rcll
loop
lea
inc
adc
jno
jae
jne
outsl
ja
and
mov
xchg
adc
subl
jns
pminsw
rcrb
outsl
mov
push
push
mov
cmc
mov
xchg
xor
jno
xor
xchg
mov
cmp
pop
data16
add
pop
dec
xlat
jg
and
push
mov
loop
ljmp
iret
lods
lea
scas
sahf
mov
rcll
out
mov
jns
push
hlt
sub
xor
lahf
shl
rep
punpckhdq
stos
dec
push
dec
xchg
imul
lea
dec
sbb
cmp
icebp
jno
inc
jno
adc
xchg
cmp
push
insb
repnz
cmc
sub
pop
lods
jmp
mov
push
andl
loop
addl
cs
jle
ljmp
mov
push
cltd
cltd
aad
jno
jae
aam
jl
shlb
imul
jnp
jge
movsb
push
mov
lock
cltd
sub
sarl
xchg
dec
cmpsl
xchg
xchg
mov
lcall
jbe
test
jne
subb
jge
insl
lcall
dec
out
pusha
and
loop
jg
out
notb
roll
lahf
test
jmp
and
sbb
test
sbb
push
mov
outsl
pop
inc
dec
jae
xor
daa
ja
jns
pop
pop
fsubrs
push
pop
loopne
dec
sub
iret
pop
sbb
mov
and
fidivl
orl
jb
mov
sub
jle
imul
in
add
push
dec
jge
mov
dec
xchg
sbb
push
rorl
xchg
pop
stc
jp
int
sbb
dec
mov
and
sub
ljmp
cld
mov
jae
imul
xchg
and
fistpll
movsb
loop
rolb
fcoml
xchg
pop
sbb
jae
shlb
bound
mov
mov
test
cmc
jae
mov
lods
in
test
ds
popf
or
cmc
loop
ljmp
xor
test
loop
roll
movsl
lea
movsb
mov
movsb
nop
fucomi
roll
ljmp
pop
push
loope
push
dec
popf
jne
dec
dec
dec
incb
jns
jnp
fisubl
cmp
stc
jecxz
data16
ss
mov
stc
mov
push
sbb
push
cmpl
ret
pop
jno
jae
ja
mov
sub
sbb
jge
loop
orl
jns
rorl
sbb
inc
xor
dec
sbb
sub
aad
stos
mov
and
fidivrs
push
inc
cwtl
jae
cmp
pop
xchg
mov
cmpsb
xor
pop
nop
movsl
and
rol
popa
jnp
leave
int
and
icebp
jg
icebp
push
dec
out
or
test
sub
inc
sub
rorb
cmp
push
cmc
rol
mov
bound
fimull
dec
sub
sub
push
mov
stc
testb
movsb
adc
mov
mov
vsqrtpd
sub
cmc
stc
std
pushf
add
pop
insl
ja
pop
add
push
ret
mov
cltd
subl
add
ds
xchg
rol
andb
dec
push
mov
fnsave
sub
mov
or
int
and
jmp
push
add
int3
xor
loop
ljmp
cmpsb
xchg
mov
adc
cltd
and
jno
inc
sub
jne
ss
leave
inc
ret
dec
jns
dec
cli
cmp
cmp
sahf
imul
leave
popa
mov
movsb
out
outsb
lret
ljmp
jno
sub
cmpsl
sub
mov
jb
movsl
cmp
sub
sbb
ljmp
sub
xor
int3
mov
subl
xor
dec
fisttpll
sbb
mov
movsl
adc
test
mov
incb
adc
mov
scas
ja
pop
sub
out
inc
mov
xor
jge
add
xchg
push
addl
inc
outsl
sub
sbb
rdmsr
jl
add
push
jbe
cmp
sbb
in
arpl
cld
add
adc
call
rolb
lock
pusha
mov
push
add
and
call
cmp
xchg
xchg
in
fwait
addl
cmp
addr16
fsubrs
clc
sti
xchg
and
or
and
fisubrs
cmpb
jbe
fxch
push
push
das
inc
cmpsb
in
ja
sarl
lock
out
testl
xchg
mov
add
sahf
inc
and
rolb
xchg
in
xchg
jmp
int
xchg
xchg
rorb
scas
xor
mov
xchg
dec
test
pop
inc
adc
test
jecxz
popa
sahf
cmp
arpl
and
ret
pop
cmp
call
or
mov
leave
lods
mov
outsl
iret
xchg
idivb
add
xor
clc
jle
arpl
mov
jb
xchg
sbb
push
and
xchg
shll
mov
or
lock
repz
cmp
mov
push
arpl
subl
repnz
lds
pop
in
mov
hlt
inc
xor
inc
notb
pop
cwtl
in
loopne
cwtl
xorb
dec
fsubrl
jecxz
jg
jmp
jle
add
or
or
sub
push
and
mov
inc
lret
repz
dec
or
pushf
xor
mov
shl
fsubs
xchg
aam
or
mov
je
mov
xor
jle
jecxz
aam
push
mov
cld
jno
push
mov
cld
jle
clc
push
dec
mov
out
push
mov
xchg
sbb
cwtl
in
xor
ret
or
into
dec
lret
lods
std
adc
in
xor
in
orb
imul
in
hlt
xor
and
out
outsl
loope
cwtl
test
dec
inc
adc
mov
mov
sub
nop
add
jae
je
sbb
rol
cwtl
addr16
jecxz
lcall
jb
mov
jae
dec
rorb
popa
inc
rcll
cld
out
out
insl
pop
mov
adc
mov
fwait
bound
aam
pop
mov
lods
add
jle
dec
dec
and
mov
call
aam
jno
pop
cltd
xor
bound
mov
adc
repnz
sahf
xor
xchg
in
in
fadds
inc
std
roll
push
mov
add
sbb
push
sti
vmwrite
test
xor
dec
cli
addr16
sbb
lahf
jb
aad
mov
cwtl
and
fwait
in
gs
mov
cmpl
stc
mov
xchg
jb,pn
add
mov
mov
test
mov
inc
or
je
mov
aas
ss
jecxz
xchg
aam
je
push
mov
cmpsl
push
mov
mov
movsl
jp
sbb
lcall
xchg
jbe
lods
xchg
mov
fucomi
ret
lods
or
xor
in
and
fcompl
adc
es
mov
mov
sub
jne
xchg
mov
daa
adc
add
stos
out
in
jecxz
sbb
in
sbb
scas
xchg
jle
push
cmp
xchg
push
cmp
mov
dec
sub
jns
insl
mov
rclb
xchg
in
lods
or
add
cwtl
mov
call
dec
out
lcall
sti
loope
cwtl
pushf
and
ja
addr16
and
out
dec
mov
mov
mov
jp
mov
and
jmp
bnd
jns
fisubs
add
mov
sti
dec
scas
add
lcall
inc
xchg
jl
jle
xlat
mov
sahf
add
and
mov
push
movb
stc
test
jmp
lea
je
jmp
sub
jb
ret
inc
xor
dec
aad
inc
stos
addr16
mov
cmc
xorb
mov
rorb
fcoml
mov
lea
shl
test
pushf
sub
int3
subl
lock
fdivl
sub
mov
jmp
fistpl
add
cmc
gs
lcall
cmp
int
andl
lcall
cmp
orb
mov
mov
xlat
cld
push
xchg
in
cmc
or
and
fprem
mov
dec
mov
xchg
xchg
cs
sub
lds
inc
push
adc
jo
sarl
and
addr16
pop
aas
cmpsb
inc
es
xor
adc
sbb
scas
push
jo
bound
push
lcall
aad
test
xor
dec
imul
ret
iret
arpl
pop
adcl
sub
out
push
inc
cmpl
jns
ficoml
push
sarb
sbb
cli
mov
inc
push
jle
dec
ja
xchg
mov
fcmovb
dec
out
and
adcb
shrb
loopne
add
std
pop
gs
sbb
push
pop
cmc
push
xor
inc
xchg
cmpsl
cmp
xlat
ret
fsubl
pop
xor
je
mov
insl
ja
pop
movsl
lods
outsb
pop
mov
int3
popf
mov
pop
and
repnz
sbb
ja
sub
adc
mov
sbb
mov
aad
shll
mov
mov
rcrl
mov
clc
push
cmpb
movb
pushf
lea
jne
bsr
xor
lahf
xor
xor
rcr
rcl
not
mov
shl
sbb
shl
dec
add
and
mov
jmp
notb
xchg
pop
lcall
enter
push
pushf
lods
xor
rolb
xchg
insl
nop
mov
push
ficoml
inc
outsl
int
or
les
loopne
adc
outsb
pop
out
mov
mov
lods
sub
fnstsw
stos
push
iret
jl
aad
aam
lock
insb
xor
add
cli
mov
pop
repz
rcr
jp
stos
xor
mov
test
push
movsb
idivl
je
xchg
in
push
and
xchg
inc
mov
popa
pusha
xchg
outsb
push
call
mov
sbb
enter
cmp
cmpsb
test
hlt
jae
mov
pop
ds
out
pop
lret
add
jnp
stos
xchg
test
pop
xlat
je
ds
movsb
dec
dec
xchg
dec
into
mov
inc
leave
adc
mov
jge
ljmp
dec
or
roll
daa
lret
call
mov
push
mov
cmp
pusha
dec
les
repnz
mov
clc
mov
pop
cwtl
leave
sub
cmc
jne
les
push
pusha
movl
pusha
jmp
jmp
mov
cwtl
pop
xchg
in
pop
cmp
jl
fcompl
jno
cmp
pop
xchg
or
jno
mov
mov
movsl
repnz
fcmovnu
add
mov
or
sub
xor
insl
pushf
pop
popf
inc
sbb
fsubs
in
or
sub
mov
mov
push
pop
pop
and
mov
int
scas
jge
lods
loopne
stos
movl
dec
inc
xlat
in
les
push
xchg
in
mov
mov
pop
or
cmpsl
pop
lret
aaa
or
mov
push
fsub
inc
mov
mov
and
sub
loope
aam
out
ret
sub
xchg
daa
cmp
push
insb
addb
cli
fadds
xchg
xor
arpl
adc
iret
push
lret
push
dec
push
vxorpd
dec
mov
popf
cmpb
jmp
jb
sub
bound
push
inc
lods
lods
push
pop
adc
pop
imul
ss
or
mov
insb
jecxz
shrb
pop
mov
les
negl
dec
jnp
insl
into
sbb
std
pop
mov
cmp
xchg
in
sahf
mov
xlat
add
lret
incb
orl
clc
pop
js
in
mov
fdivs
add
test
cmpsb
ljmp
into
inc
mov
sarb
shrb
stos
arpl
mov
in
sbb
mov
add
adc
push
movsl
push
push
xchg
cmp
push
inc
outsb
mov
pop
les
push
lods
xlat
pop
push
adc
dec
pop
mov
sub
movsb
hlt
and
mov
lods
test
call
lds
hlt
inc
std
ret
fidivrs
jo
and
pop
mov
movsb
and
mov
sub
mov
dec
mov
insb
int3
lea
loopne
adc
mov
lcall
pop
push
xchg
and
cmp
outsb
fsub
loope
sub
sbb
push
xchg
fisttps
call
push
xor
insb
addr16
xchg
hlt
out
mov
mov
in
fs
mov
mov
pop
fwait
test
sub
inc
ret
mov
or
sbb
pop
xchg
dec
and
imul
cli
add
sbb
inc
lret
xor
add
rorl
out
fisubrl
pop
push
adcb
mov
or
pop
push
rcll
ljmp
cmp
fisttpll
pop
jl
pop
cmp
sbb
je
fildl
sub
and
ss
addl
jne
mov
adc
mov
fisttpll
enter
inc
lock
and
test
dec
push
jo
lcall
mov
xor
mov
push
mov
mov
lock
andb
nop
cs
daa
mov
ret
imul
and
insb
shll
inc
stos
daa
or
lods
aad
fidivs
adc
cmp
ja
xor
iret
addb
sti
cmp
shl
call
addb
xor
dec
ljmp
sub
repz
or
add
iret
xchg
sbb
imul
push
pop
jg
scas
movsl
jg
adc
sub
jnp
sahf
push
push
das
cmp
jmp
scas
imul
or
popf
sahf
push
and
lahf
ss
shr
fstpl
js
cld
xor
cwtl
daa
mov
pop
xor
mov
dec
adc
pop
shr
outsl
stos
mov
dec
mov
or
enter
inc
mov
dec
jb
stc
adc
pop
sti
loope
inc
pop
lea
jg
pop
mov
mov
adcb
das
int
lahf
ja
add
mov
fxch
ret
test
push
push
dec
outsl
je
data16
arpl
inc
add
adc
push
outsb
push
mov
es
je
fsubrp
cmpsb
xor
ljmp
lret
sbb
addb
ds
xor
fwait
mov
ja
inc
movsb
cmp
lods
ljmp
pop
pop
add
lea
xchg
cmp
lahf
cmp
pop
pop
enter
out
inc
call
pop
add
and
mov
jg
fmull
movl
push
and
mov
mov
xchg
cmc
aaa
pop
ljmp
push
sahf
pop
xchg
aam
lcall
fldt
and
push
sub
jns
pop
mov
push
mov
scas
test
fistps
movsb
mov
es
mov
nop
mov
lahf
lret
loop
push
rclb
xor
lds
rcrl
dec
xor
lret
xchg
shlb
mov
push
out
scas
aad
out
push
incl
inc
pop
aad
addl
xchg
in
push
pop
xchg
scas
cmp
add
inc
mov
push
xor
les
xor
adc
cmp
lds
sbb
popf
jmp
int
pop
jno
sub
hlt
or
and
aam
leave
sbb
int
inc
fimuls
sub
mov
push
in
data16
mov
adc
jg
jmp
cmp
fs
hlt
sub
jle
movsb
lock
loope
lods
fdivrp
and
mov
jl
out
lods
jne
gs
filds
pop
imul
lock
push
cmp
jb
xchg
scas
jecxz
stos
icebp
or
inc
es
ret
andb
insl
repnz
sbb
add
andl
adc
jne
pop
xor
ds
in
cwtl
jl
les
repz
in
outsb
gs
cmp
movsl
outsl
jecxz
sub
xor
leave
pop
sbb
incb
add
imul
jae
push
dec
dec
dec
dec
cs
insb
add
dec
inc
push
dec
xor
cs
insb
add
mov
repz
dec
adc
inc
shr
adc
mov
lahf
daa
cmc
jne,pn
pop
lods
xorb
sub
pop
sub
cmp
push
or
adc
loopne
push
std
pop
mov
pushf
push
cli
movsb
mov
xchg
ja
shrl
fidivs
and
jo
lahf
pop
mov
dec
push
pop
test
arpl
into
xchg
stc
mov
add
call
inc
or
mov
fistl
and
addr16
imul
mov
in
cs
push
dec
loop
lea
sahf
ljmp
cmp
jb
imul
dec
aad
shl
jo
lods
inc
cmp
rep
sbbl
mov
dec
mov
testb
inc
les
movsb
lcall
int3
les
insb
cmpsb
imul
and
je
mov
pusha
pop
xor
pop
xor
xor
xorl
push
cwtl
and
jb
pop
fnstenv
jns
mov
adc
lahf
push
sub
imul
dec
lods
xchg
jbe
xchg
sbb
imul
jno
out
inc
call
lret
inc
fsts
sub
aad
popf
pop
jle
decl
add
fstpl
arpl
and
gs
fdivrl
mov
scas
cs
sbb
mov
movsb
jl,pn
mov
insl
jmp
lret
es
in
sbb
sbb
fld
xchg
add
cld
xchg
add
add
push
addb
jo
xchg
or
xor
lods
cmpsl
daa
fldl2t
pushf
cli
mov
adc
mov
push
cmpsl
mov
mov
std
mov
xchg
lock
outsb
lods
xor
insl
and
mov
cs
cs
mov
cli
fisttpll
xchg
repnz
cmpsb
sbb
mov
cmp
movl
xorb
dec
int3
test
mov
or
pop
iret
dec
xchg
jae
cs
pusha
stos
push
pushf
movb
lea
jmp
lea
ja
push
imul
mov
test
add
pushf
lea
jmp
pushf
lea
mov
test
ror
mov
add
xchg
rcr
sub
push
mov
shrd
neg
shr
push
dec
push
shrd
mov
sar
or
mov
push
pushf
add
adc
mov
cmp
cmp
or
push
mov
mov
pushf
lea
je
clc
jmp
push
add
pusha
push
stc
jmp
das
ljmp
arpl
pop
fidivs
xor
xchg
fmuls
mov
shll
pusha
and
aas
cmpb
or
push
adc
loopne
movsl
inc
pop
cltd
jb
inc
push
dec
lock
xchg
ret
test
cld
jns
test
xor
jge
push
xor
jae
in
jbe
jno
push
int
outsb
pop
sub
mov
pop
xchg
insl
loop
cmp
add
mov
xchg
mov
add
dec
mov
int3
push
test
shrd
sub
and
dec
pusha
mov
bt
shr
sub
bswap
mov
push
movb
call
push
repnz
pusha
pushl
lea
jne
lea
pusha
shr
sbb
mov
shld
shld
sub
bt
bsr
adc
lea
clc
cmp
sub
bt
clc
pushf
bt
pushl
popl
pusha
cmp
movb
cmp
pushf
pushf
lea
ja
shr
or
test
rol
sub
bts
setl
add
btc
mov
rcr
mov
cmp
stc
cmp
cmp
repnz
call
fstpl
push
sbb
in
les
les
rorl
cltd
nop
leave
mov
lds
movsb
shr
stos
in
dec
lods
add
mov
bound
aaa
mov
and
add
pop
sub
mov
rorl
adc
sbb
setle
out
mov
push
and
push
or
mov
aaa
mov
ret
aad
inc
repz
sbb
lods
adc
stos
cmc
fwait
pop
dec
outsb
add
cmpb
daa
inc
xorl
xchg
aam
out
lcall
inc
lea
pusha
lea
call
pusha
adc
pushf
jmp
or
test
xchg
in
sbb
xchg
roll
fcomi
sub
fldenv
lea
mov
jo
xchg
jns
jno
add
bound
fiaddl
xor
xchg
lret
add
into
dec
std
aas
jecxz
push
xchg
mov
ja
insb
aaa
jp
lds
push
xlat
mov
in
push
inc
jne
xor
mov
sub
adcl
push
jecxz
ja
mov
stos
loop
cmp
adc
insl
mov
js
std
cmp
pop
ja
scas
pop
aas
cmp
sbb
js
loop
pop
cwtl
jo
popa
mov
lret
mov
push
shlb
mov
dec
sub
jae
fdivrl
in
push
pop
popw
popf
and
xchg
aam
or
test
add
xchg
jp
or
inc
jle
hlt
scas
rolb
cmpsb
cmpsb
xor
add
xchg
xor
int
jmp
call
or
push
sbb
ds
xchg
adc
lods
sub
jge
loop
mov
mov
sub
mov
lea
jae
jmp
inc
out
movsl
sbb
and
ret
cmp
push
pusha
xchg
jmp
push
aaa
jo
lret
scas
add
shrb
arpl
push
adc
lret
dec
mov
or
iret
es
testb
stos
or
dec
fcoms
mov
ja
xor
cwtl
xchg
or
jbe
inc
subb
mov
js
in
pop
sbb
and
xchg
in
cmp
xchg
jl
sar
rcr
ja
pop
cwtl
mov
movsb
les
fdivrl
adc
aam
stos
pop
imul
or
insl
out
push
xchg
mov
dec
jo
mov
add
in
and
lret
dec
movb
dec
sub
sub
mov
jge
add
insl
jno
int
cli
mov
inc
jp
out
sub
add
mov
dec
xchg
movsl
dec
pop
cmp
test
add
pushf
jmp
and
imul
pop
shlb
jmp
test
xlat
sbb
mov
cmp
stos
lret
sbb
lods
hlt
js
repz
sbb
int3
fnstenv
test
outsb
shrl
test
push
pushf
lcall
adc
jecxz
pop
xor
sbb
test
jp
pop
sub
sahf
adc
clc
imul
test
fldcw
movzbw
pusha
movzbl
mov
push
pushl
ret
out
inc
or
mov
cmp
sub
sub
cwtl
dec
cmp
dec
xchg
jb
stos
jg
movsl
sahf
loope
cmp
xchg
jbe
repz
call
add
in
sub
mov
popa
je
or
push
jb
adc
icebp
mov
int3
jmp
and
clc
and
in
in
fistl
mov
in
dec
pop
dec
insb
mov
dec
cmp
mov
or
es
fisttpl
mov
cmpsb
cld
mov
stos
aaa
repnz
sub
adc
mul
mov
mov
sbb
inc
inc
lods
rclb
pusha
popa
jb
dec
or
push
addr16
jmp
leave
fnstcw
adc
ja
testl
popf
jo
sbb
xchg
add
outsl
ret
fldt
loop
inc
sbb
mov
mov
out
insl
mov
stc
stc
call
scas
repz
xchg
in
cli
lds
push
sbb
pop
jns
push
insb
call
xor
jne
scas
xchg
repz
xchg
movsb
repz
dec
dec
push
fucom
shlb
mov
rorl
test
mov
mov
imul
pop
cwtl
out
outsl
dec
jl
in
inc
scas
xor
shl
mov
test
cmp
mov
xchg
subb
xor
dec
shlb
mov
hlt
lret
call
mov
popa
mov
fbld
cmpsl
not
stc
pop
sbb
pop
mov
aad
inc
jmp
lods
or
sub
cld
test
insb
fidivrs
imul
add
sub
xor
popf
push
cmp
xor
push
addr16
dec
fdivs
sbb
adc
outsl
mov
xor
add
in
and
insb
sub
shr
scas
jle
push
cmp
addr16
cmp
cltd
inc
filds
pop
adc
pop
mov
std
lds
test
scas
and
out
sbb
fnstenv
fldenvs
incb
mov
jp
les
xchg
xchg
pop
jecxz
pushf
mov
and
sbb
pop
adc
add
out
gs
roll
add
addr16
out
iret
add
xor
outsl
mov
je
pop
popf
adc
ja
mov
subl
out
pop
mov
mov
jecxz
popf
in
mov
dec
ja
inc
adc
mov
xor
rcrl
addr16
mov
fs
jmp
outsl
aas
daa
sahf
xchg
ret
mov
adc
lret
outsl
add
cld
inc
insb
xchg
cmp
cmp
aaa
or
pop
adc
pop
sub
sub
xor
push
stos
inc
imul
mov
rcll
or
pop
adc
and
push
cmpsb
dec
andb
mov
stc
mov
je
repz
adc
inc
mov
mov
ss
mov
add
pop
cmp
adc
jmp
pop
sahf
jle
or
mov
xchg
sbb
jo
add
cwtl
stos
jp
push
mov
push
cmp
lcall
pop
shl
ljmp
mov
mov
and
mov
es
clc
hlt
xchg
stc
add
adc
sbb
pusha
push
dec
jbe
in
mov
fnstcw
jp
jbe
cmp
mov
sbb
mov
push
jns
jge
icebp
cmpsb
or
mov
das
addr16
fsubp
adc
pop
jmp
jl
cli
mov
cmp
clc
outsb
repz
cld
jg
fwait
in
stos
je
and
cmc
or
add
pop
rclb
mov
es
leave
hlt
add
cmp
iret
or
sbb
xchg
mov
fwait
testb
cmp
loopne
sub
ret
or
insb
push
subl
cmp
and
ret
stc
call
pop
jp
sbb
inc
lods
pop
movsb
push
enter
pop
push
add
xchg
jle
aaa
jo
mov
add
pop
xchg
imul
fucomi
aad
dec
adc
jl
in
aam
test
jbe
push
lods
dec
dec
dec
mov
cmp
ljmp
xchg
das
shr
test
dec
in
fisttps
cmpb
adc
fsubl
test
jle
sahf
out
xor
lahf
xchg
xchg
stos
xor
in
pop
dec
push
mov
xor
and
or
repz
xlat
test
mov
push
insl
testl
int
xchg
sub
vorps
rcrl
inc
out
sub
push
sti
hlt
pop
stc
sbb
push
das
imul
dec
in
fcoml
ret
out
dec
inc
imul
inc
call
mov
sub
xor
cs
ror
mov
call
in
fs
lods
sti
push
fsts
push
inc
mov
addl
xchg
add
cmp
pop
fstps
adc
insb
aam
out
mov
test
loope
mov
cli
push
js
mov
cld
es
loope
adc
call
pusha
sbb
sti
xchg
jnp
add
ror
daa
loope
mov
cmp
hlt
mov
push
mov
dec
lahf
mov
xchg
cmp
and
test
mov
ror
lock
lahf
movnti
jo
out
mov
cmp
inc
rclb
adc
insl
pop
or
xchg
sbb
and
std
movsb
jno
add
js
dec
cmp
push
adc
cmp
lret
xor
insl
jge
jl
loopne
mov
in
pop
sub
test
arpl
popf
add
dec
sub
or
xchg
cmp
fldenv
mov
add
adc
sbb
xorb
arpl
mov
jg
cmpl
lock
mov
cwtl
insb
outsl
mov
insl
xchg
popw
mov
mov
cltd
addr16
pop
pop
pop
fs
movsl
lcall
addr16
push
pop
mov
jmp
loope
jne
ja
int3
jp
dec
fsub
mov
xchg
pop
adc
jb
aas
clc
sahf
push
xor
pop
or
lahf
mov
sub
movsl
push
push
cmp
sbb
loope
rol
mov
ja
mov
out
lock
jge
popf
jg
cmp
mov
sbb
sub
out
mov
stos
inc
fs
outsl
inc
inc
in
repz
add
jecxz
cmpl
out
pop
mov
lods
cmp
pop
push
inc
dec
cli
pop
add
xor
push
mov
gs
dec
jl
mov
arpl
dec
and
inc
pop
dec
fmull
lahf
mov
loop
sahf
push
xchg
inc
rcll
pop
xchg
mov
xor
addr16
sbb
out
dec
out
fisttpll
outsl
sbb
push
fldl
xor
orl
lret
xor
cmp
push
cmpb
int3
push
xchg
sarb
pop
sub
mov
sub
push
or
fst
jmp
pop
movsl
push
lds
addr16
dec
in
pop
lock
or
mov
enter
add
push
mov
or
cltd
dec
dec
dec
push
fsts
inc
daa
lods
cmp
xchg
adc
icebp
jmp
clc
scas
movsb
es
mov
cmp
push
mov
xchg
dec
inc
jge
dec
inc
loop
test
aaa
divps
mov
push
sbb
or
xor
dec
pop
out
cltd
pop
jge
add
or
jne
outsb
push
push
js
xlat
dec
pop
add
fcomi
into
adc
mov
sbb
leave
pop
mov
in
subb
push
out
int3
push
out
mov
xchg
fdivrl
sub
cltd
jns
outsb
imul
jmp
inc
sub
dec
sub
lahf
inc
stos
movsl
repnz
mov
inc
inc
popa
in
out
push
gs
div
or
sbb
add
or
test
xchg
dec
outsb
sub
push
stos
or
jecxz
sub
adc
mov
cwtl
mov
dec
pop
les
dec
push
mov
inc
stos
jns
push
hlt
xchg
mov
cmpsb
aad
and
lea
dec
pop
in
jno
in
xchg
add
lods
fistpl
push
cmp
mov
fsubl
loop
mov
dec
notb
bound
jbe
push
sub
js
add
fprem1
sbb
add
mov
xchg
jb
lret
aas
in
pop
sbbl
fdivl
test
sub
inc
shlb
in
test
js
fcoms
adc
jge
mov
aas
je
inc
fldcw
jle
or
stos
add
nopl
jmp
in
shrl
repnz
xlat
fsub
push
iret
sbb
xchg
ror
mov
test
aam
dec
iret
call
sub
lods
int3
xchg
ror
pop
mov
ret
enter
add
dec
pop
or
jo
dec
jno
adc
daa
add
push
test
and
ret
das
mov
sti
rclb
and
push
cltd
inc
cmc
mov
inc
sbb
in
and
into
jl
push
cli
sbb
in
dec
mov
sub
mov
mov
into
das
mov
rorl
pop
mov
inc
mov
fwait
mov
es
loope
push
and
mov
push
daa
into
adc
sub
cmp
lcall
movsl
repz
addr16
lock
or
pushf
fdivl
cmp
imul
mov
das
mov
ljmp
sub
into
push
mov
push
pop
jns
jle
popf
jg
cmp
mov
cmc
and
inc
jecxz
xchg
lea
inc
mov
dec
ret
test
stos
cs
jg
cmp
inc
jnp
and
mov
sbb
orl
andb
xchg
mov
mov
movsb
aad
or
loopne
cmp
and
mov
cli
bswap
rcrb
push
mov
out
out
jmp
roll
hlt
loopne
sbbb
mov
push
mov
push
ret
xchg
cmp
nop
arpl
lcall
mov
xchg
ds
pop
repnz
adc
ds
xchg
inc
and
enter
pop
xchg
addb
push
push
aas
jmp
mov
addr16
nop
adc
sbbl
inc
mov
movsb
xor
dec
into
cld
insb
mov
dec
shlb
push
aaa
icebp
jo
jle
gs
pushf
ljmp
xor
push
add
sub
mov
test
add
fwait
sub
std
stos
adc
xchg
jl
mov
and
sub
add
add
adc
testb
sub
aad
jecxz
mov
jp
rorl
mov
pop
mov
mov
push
cli
adc
mov
scas
xchg
rcrb
cmp
into
scas
cmc
mov
shlb
enter
xchg
sub
in
add
clc
pop
enter
adc
fadds
pop
cmp
dec
insl
stc
or
sarb
xor
pop
cs
shr
xor
inc
adc
dec
push
mov
insl
outsb
rcrb
in
mov
xchg
enter
dec
xor
xor
pop
movsl
and
aam
pop
jge
ret
xchg
sbb
int3
int
push
out
je
jp
movsl
aas
pop
daa
fadd
mov
lahf
xorb
jmp
mov
push
outsl
mov
jne
cmc
shlb
je
xchg
add
jnp
mov
aas
int3
sahf
pop
mov
mov
xchg
insb
xchg
aas
cmp
seta
lods
movsb
jle
cmpsl
pusha
jnp
jle
dec
dec
stos
lods
xorl
pop
jecxz
je
cwtl
lea
out
inc
and
mov
push
lcall
mov
and
sti
scas
jnp
xchg
xchg
mov
in
inc
jl
bound
mov
and
sti
or
lock
push
xor
xchg
inc
nop
sub
xor
repz
jbe
dec
xchg
xchg
mov
jl
int3
mov
cmp
aaa
ficoml
xchg
jno
inc
and
popa
dec
js
in
icebp
int
insl
into
push
mov
cwtl
bound
ss
int
jmp
mov
int
fs
sahf
shll
mov
or
and
in
cld
jp
es
test
mov
in
or
popf
fnsave
arpl
mov
adc
inc
jmp
int3
or
aad
lea
ficomps
cmp
cmp
jnp
lock
inc
lcall
popa
push
mov
push
jns
dec
idivl
jmp
inc
push
push
inc
inc
mov
or
imul
iret
scas
sub
movsb
xor
sbb
inc
sarb
mov
mov
popl
ret
aas
test
and
out
repnz
xor
out
faddl
cmp
cs
sub
jmp
in
es
lahf
and
enter
cmc
gs
push
fwait
push
push
lret
test
mov
inc
add
into
inc
dec
xor
and
lock
mov
mov
test
shll
pop
fucom
mov
xchg
dec
jb
lea
dec
pop
inc
mov
test
xchg
addr16
sbb
subb
jo
repnz
lds
sbb
mov
jno
add
cmpsl
arpl
xor
shll
sarb
notb
dec
sub
addb
xor
mov
xchg
mov
les
popf
inc
cmp
mov
add
movsl
lds
mov
push
xchg
mov
pop
lcall
xor
mov
mov
xor
jbe
shl
cs
xchg
scas
pop
and
aaa
adc
stos
push
ja
movsl
pop
out
in
fmuls
shll
mov
dec
enter
mov
jg
test
inc
test
mov
inc
push
pop
or
repz
out
cmp
and
enter
stos
stc
ds
sub
mov
aad
sbb
test
in
mov
fisttpl
push
xchg
add
xor
jae
sub
mov
jmp
push
pop
sub
rorl
cltd
push
xlat
dec
sub
push
mov
mov
jo
push
hlt
jnp
mov
cmp
pop
mov
pop
subb
mov
push
out
sub
and
dec
inc
add
cmp
insb
popl
cmp
cs
cmc
xor
insb
cmp
cmc
je
xor
xor
mov
outsl
sbb
inc
push
int
sub
or
testb
mov
mov
in
ljmp
movsl
pop
shll
mov
cld
popf
push
out
popl
xchg
outsl
scas
adc
sub
adc
les
in
xchg
xor
rcrl
push
inc
out
ss
loope
mov
int
cmp
mov
mov
cmp
mov
xchg
fdivs
ret
mov
cmp
out
jns
rcrl
pop
cli
int
or
jmp
lods
inc
xchg
rorl
sahf
stos
and
pop
cmp
fdivs
push
add
test
fildll
mov
mov
aam
sbb
rcl
xor
aaa
dec
jo
mov
stc
xchg
pop
and
push
sub
lret
inc
mov
or
jo
cmp
divl
ja
lods
cltd
inc
fucomip
out
fildl
push
test
imull
cmp
dec
adc
and
scas
filds
sub
dec
mov
xor
jbe
add
adcb
mov
or
out
jae
mov
and
out
stos
sub
mov
dec
in
lahf
pop
inc
jb
mov
lock
popf
lret
and
xchg
pop
add
nop
pop
cmpsl
shr
in
push
mov
pop
sub
rcl
jmp
scas
pop
pop
cmp
adc
fcompl
jbe
inc
daa
pop
xchg
push
sbb
test
icebp
sahf
scas
icebp
int
enter
xchg
scas
ljmp
bound
nop
icebp
mov
push
lret
cmp
and
notl
sbb
enter
out
xchg
cmc
dec
push
popa
pop
mov
lods
mov
dec
das
sub
inc
add
repz
out
sti
fists
ljmp
adc
adc
lcall
mov
mov
dec
xchg
dec
ret
stc
mov
test
xchg
sub
addr16
aad
ret
mov
jp
add
adc
fnstsw
ss
sub
shll
lret
jg
cmpsl
out
fs
push
je
jno
leave
shr
pop
inc
cmp
xor
loop
mov
xor
insb
pop
iret
add
inc
fstp
pusha
add
cmp
ficoml
loope
leave
nop
cmp
mov
pop
dec
sub
pop
xchg
jmp
mov
inc
sti
les
xchg
lods
fbld
cwtl
movsb
jp
jg
xchg
ja
js
cmpl
cmpsl
subl
addr16
adc
fisubl
ja
inc
cmp
cli
sti
insl
call
sahf
sbb
mov
push
sub
out
lea
lea
cs
push
lods
pop
shrl
aad
jle
lret
and
aaa
dec
sbb
bound
cmpsl
xchg
jecxz
sbbl
popf
and
or
inc
orb
or
notb
test
lods
js
add
es
stc
adc
aad
and
mov
insl
in
push
stc
and
out
jmp
xchg
xchg
insl
sar
add
insb
or
call
aam
rcrl
sar
roll
enter
xchg
cmpsl
jg
jo
or
xor
mov
mov
mov
and
in
adc
call
jp
adc
and
rclb
in
icebp
or
pop
sub
sbb
cwtl
pop
lock
jp
clc
adc
xor
xchg
leave
roll
add
lods
pusha
pushf
jne
aad
sub
or
enter
hlt
imul
mov
outsb
jl
cmp
fsts
outsl
rcrb
dec
sub
stos
jno
inc
imul
mov
push
mov
call
arpl
xchg
fisttpl
prefetch
mov
sbb
push
xor
fwait
jp
out
mov
jo
sub
pop
sahf
push
or
cmc
leave
jnp
mov
fcom
mov
aas
sarl
add
mov
cltd
mov
test
inc
or
out
ret
lock
mov
test
sbb
jnp
push
mov
inc
and
es
add
mov
adc
jp
sbb
mov
cltd
jne
xchg
jmp
fwait
inc
xchg
insl
xchg
mov
sbb
jle
xlat
ljmp
and
mov
in
sarl
stos
jns
add
pushf
pop
pop
std
enter
dec
mov
and
cmp
dec
bound
add
call
stc
hlt
xchg
test
aas
lcall
push
xchg
faddp
jmp
mov
cmp
repz
leave
popa
and
xlat
and
adc
sbb
mov
repnz
inc
sahf
shrb
pop
or
mov
daa
mov
xor
movsb
cmp
dec
xchg
dec
inc
fisubrl
sti
sbb
aas
lock
iret
orb
aam
xor
incl
aaa
adc
inc
cmp
sarb
mov
test
mov
sbb
adcl
pop
mov
xor
movb
mov
lods
mov
cmc
push
push
incl
mov
add
outsl
lds
and
hlt
cmpsb
popa
xchg
rorb
test
mov
shrb
imul
cmp
cld
pushf
dec
mov
scas
xor
shrb
push
add
arpl
cmpsl
sbb
ficompl
fsubr
cwtl
add
cld
sbb
adc
cmpl
inc
movsl
cld
cmpsb
rcr
mov
mov
cmp
clc
aam
or
ss
scas
ljmp
imul
fdivrl
leave
and
repz
pop
mov
mov
sub
adc
sub
lahf
loope
cmp
gs
xor
hlt
push
xor
inc
push
jge
dec
fwait
sub
add
fsubl
inc
fwait
test
shrb
pop
out
fildl
jb
gs
aas
cmp
arpl
mov
fsubrl
jp
pop
pusha
mov
xchg
adc
or
lock
sbb
pop
push
push
ja
data16
cwtl
out
or
pop
std
adc
ret
ds
pop
lcall
outsl
mov
add
mov
and
adc
and
outsl
lret
cmc
mov
rorb
das
add
lret
nop
adc
arpl
push
pop
mov
mov
sub
jmp
es
das
sbb
adc
fcoms
jl
cmc
lret
or
lret
in
pusha
push
test
mov
lea
push
fwait
out
orl
jb
cmp
rcrl
jns
stos
or
sub
lcall
dec
imul
xchg
sbb
lahf
and
cmp
ds
inc
dec
test
dec
pop
outsl
cmp
inc
jmp
dec
jno
cmpsl
dec
mov
and
pop
xchg
lds
lret
add
add
adc
mov
test
jl
mov
xor
data16
mov
and
fnstcw
popf
clc
mov
cmp
cmpsl
call
adc
sbb
pop
cmpsb
pop
fdiv
int
or
clc
stos
fstpl
outsb
or
push
and
movntps
jbe
jp
mov
cltd
movsl
dec
pop
mov
pop
cmpsl
pop
addl
add
push
out
and
call
ds
pop
bnd
inc
adc
repz
jmp
loopne
in
push
sti
lcall
sbb
sbb
push
inc
mov
insl
mov
pop
stc
jg
loop
lods
popa
addl
std
call
mov
daa
cmp
daa
or
vmread
sar
mov
sti
sbb
ds
cltd
inc
stos
lea
mov
hlt
fucom
aas
out
int3
pop
xchg
dec
jno
cmpsb
add
mov
push
mov
sbb
inc
sti
mov
fisttpll
cs
aas
sub
cmc
mov
rcll
mov
aam
repz
jge
call
loope
xor
add
negl
fnstenv
push
aad
push
adc
lcall
jp
cmp
or
xlat
enter
sti
stc
lods
pop
ds
rcrb
hlt
pop
push
outsb
push
xor
shll
jl
xchg
dec
push
insl
cmpsb
add
and
and
xchg
mov
fsubrs
lgs
and
daa
add
mov
ds
in
pop
jle
inc
sbb
mov
xor
cmp
jo
inc
leave
addr16
jae
ret
add
int
negb
lahf
pop
arpl
xlat
mov
lds
xchg
mov
cwtl
pop
cmpsb
scas
mov
mov
ds
in
test
clc
fldl
mov
outsl
arpl
cli
jl
out
popf
xlat
out
mov
xchg
cmp
dec
inc
xor
push
lcall
dec
fnstsw
inc
je
aas
ja
fidivrl
and
popf
mov
cld
lahf
loopne
sub
cmc
pop
fnstenv
add
out
pushf
jnp
aas
sub
lahf
sub
lea
leave
fdivrs
in
mov
or
adc
push
adc
inc
pop
xor
in
in
xor
ja
mov
inc
inc
dec
xor
cs
insb
add
in
jnp
ja
adc
push
iret
orl
dec
cwtl
popf
or
adc
notl
cmpl
aam
add
icebp
mov
out
loope
in
nop
mov
mov
add
push
mov
mov
mov
push
into
jge
cmp
xor
shlb
test
iret
scas
ret
sub
mov
outsl
pop
lock
ljmp
pop
jg
mov
inc
inc
pop
and
and
fwait
xchg
push
sarb
in
mov
xor
xchg
jnp
sbb
in
inc
jno
and
roll
cmp
xchg
lds
jecxz
sbb
xchg
dec
rcrb
mov
pop
lods
aam
xchg
ss
fincstp
cmpb
xchg
sub
mov
mov
add
mov
insl
or
jno
cmp
bound
into
inc
fstpl
ret
shll
or
cltd
mov
jmp
lea
jb
push
cmp
cmp
jmp
clc
sub
call
sub
pop
cmp
fwait
pop
mov
rcrl
outsb
jb
jns
stc
cld
or
dec
cmc
test
pop
push
stos
pop
not
sub
iret
inc
test
mov
inc
mov
mov
sub
jp
mov
and
sub
fwait
jne
mov
push
xchg
ret
jae
test
ss
lcall
or
xor
xchg
push
add
pop
mov
add
loop
jp
adc
je
mov
mov
mov
push
jge
pop
mov
sub
xchg
in
add
xchg
repz
insb
fnstenv
mov
or
xor
add
pop
fnsave
lahf
pop
add
std
frstor
rcll
pop
ret
mov
push
pop
xchg
divb
loope
cmp
sub
or
stos
xor
sahf
mov
jl
fstl
jns
pop
jnp
fldcw
cmp
test
out
andl
shlb
lret
cmp
js
aaa
sarl
sahf
mov
adc
shrb
cmp
xchg
std
sbb
xchg
fdivr
out
into
test
cmp
add
cmpsl
mov
sub
add
and
movsb
mov
sub
adc
jae
jl
int3
sub
jae
shrl
jp
push
scas
mov
adc
fildll
loope
push
shr
insb
or
jmp
xchg
icebp
cmp
iret
and
jae
mov
mov
iret
adcb
in
xlat
out
sbb
rcrl
push
lahf
test
cs
and
aas
pushf
outsl
movsl
dec
push
mull
add
test
adc
data16
jecxz
fdivp
or
cmpsl
aaa
xor
push
neg
fidivrs
pop
pop
shlb
pop
add
jmp
dec
pushf
insl
add
adc
jo
add
bound
jl
pushf
pop
fs
call
sbb
movsl
cmp
xor
pop
int3
and
mov
mov
adc
or
stos
mov
pop
dec
or
jb
cld
mov
push
in
enter
out
sbb
and
cmpsl
sarb
out
and
cmp
das
cmp
jl
xlat
xchg
loopne
jne
addr16
xor
test
push
mov
xchg
scas
mov
outsl
jnp
aam
fistpll
ret
mov
push
lret
testl
add
je
outsl
fs
gs
imul
add
pop
push
add
call
and
imul
in
or
sbb
out
mov
fwait
dec
dec
dec
xchg
ja
stc
mov
lods
push
xor
fisttpll
push
lea
pop
or
outsb
fdivrs
add
mov
dec
sbb
inc
divb
clc
aad
mov
add
mov
rol
mov
mov
pusha
movsb
jne
mov
lods
jo
pop
and
xchg
repnz
popf
sbb
popf
ffreep
repz
les
push
shlb
in
dec
sub
jp
insl
push
cmp
mov
bound
adc
sarl
xabort
pop
push
sahf
fdivrl
flds
imul
mov
mov
fwait
cmpsb
inc
push
call
sbb
push
mov
mov
iret
ds
mov
aaa
adc
dec
mov
inc
sti
add
push
sbb
push
xchg
and
pop
addr16
push
clc
ja
push
pop
cs
sar
mov
das
dec
push
push
add
repz
cs
or
nop
les
ss
repnz
ret
stos
jae
mov
stos
xor
les
lds
push
fstl
sub
mov
mov
frstor
fistpl
jle
movsb
fsubl
mov
push
cmc
mov
fsub
out
xor
xchg
loop
add
pop
mov
jne
aam
fstpl
push
stc
jge
addl
scas
pop
push
mov
js
std
fistl
push
mov
rclb
cmp
ljmp
test
xchg
pusha
add
lret
mov
inc
push
pusha
div
push
xchg
scas
loop
je
mov
inc
inc
hlt
js
xchg
movsl
clc
pushf
pop
ss
or
or
mov
fld
ja
es
add
xchg
aaa
sub
pop
aam
mov
inc
inc
push
fiaddl
xor
jg
add
jle
adc
sti
repz
js
lret
bound
das
jmp
enter
movsb
pop
xor
lock
xchg
in
cwtl
jns
push
in
lretw
fidivs
xchg
enter
popf
stos
leave
dec
cmp
pop
mov
in
ret
mov
jne
push
mov
pop
cmp
scas
dec
call
lods
jge
sbb
cltd
lea
mov
gs
jno
xor
adc
inc
sbb
cmc
fldl2t
sti
cmp
cmp
pop
add
pop
mov
movsb
sarl
es
xor
in
stos
stc
jp,pt
mov
mov
inc
movsb
mov
in
in
or
adcl
test
sbb
mov
mov
sbb
push
mov
ror
into
aas
cld
mov
add
mov
mov
mov
or
cs
jns
dec
cmp
xlat
pop
std
jbe
xchg
add
add
loop
xorl
and
movsl
lret
xchg
in
ret
mov
cmp
fs
pop
push
cmp
ja
push
sbb
push
pop
insb
test
test
insb
lret
shr
mov
fwait
push
pop
out
in
out
scas
jg,pn
imul
xor
adc
cmp
dec
cmp
repz
stos
cwtl
inc
test
test
int3
aad
cmpsl
lret
sub
inc
mov
adc
loop
fs
xchg
in
insl
mov
push
dec
movsb
sbb
mov
setg
stc
insb
aam
adc
les
mov
sbb
ret
nop
mov
ret
and
fsubr
push
mov
enter
xor
sbb
ss
xlat
dec
add
shrl
xor
movsl
imul
pusha
movsb
or
imul
mov
push
adc
or
add
lahf
out
fmuls
inc
lods
dec
out
das
jge
es
sbb
push
pop
lods
mov
lods
imul
je
call
movsl
out
rcll
cmpsb
addr16
fisttps
fs
mov
int
pop
jbe
loope
mov
sub
mov
rcl
lret
inc
or
cli
adc
add
out
loopne
push
in
push
mov
int3
movsl
pop
mov
aas
inc
push
mov
rcll
inc
or
ficoms
popa
xor
and
call
pushf
lea
jne
call
iret
xchg
add
inc
or
std
out
inc
subl
call
pop
push
fnstcw
out
jecxz
repz
jne
jns
inc
push
test
jbe
fldt
jbe
mov
add
adc
les
cwtl
mov
sbb
call
mov
mov
jl
aad
insl
add
in
cmp
mov
hlt
push
fcmovbe
js
sbb
push
aam
out
add
loop
cmp
cltd
cli
stos
or
pop
rclb
add
bound
push
std
mov
out
adc
or
adc
cwtl
cmp
das
clc
cmp
cmp
push
pusha
jo
aam
push
cmp
jo
or
mov
add
sbb
lock
push
cmc
addb
mov
push
or
push
call
sbb
pop
push
fisttps
insl
lahf
xchg
xchg
mov
imul
cwtl
clc
shll
pop
cmp
ret
xchg
in
pop
inc
adc
push
test
out
movl
push
push
int
imul
ret
pop
pop
div
mov
hlt
movsb
popf
adc
inc
leave
push
add
leave
data16
sti
sbb
push
xchg
push
in
ret
pop
dec
xor
iret
in
cmp
ret
push
jle
mov
es
negl
pop
jmp
sbb
mov
ret
out
jecxz
lcall
xor
test
out
pusha
negl
pusha
adcl
arpl
in
pop
sub
jae
ret
xchg
in
jp
xchg
cli
lods
push
cmp
push
int3
out
jae
cmpsl
inc
lahf
or
pop
fwait
jmp
lcall
sbb
test
ficoms
movsl
fsub
dec
imul
add
adc
push
cmp
inc
sbb
sti
in
popf
imul
push
and
xchg
out
add
ret
and
add
mov
imul
add
cmp
mov
test
ret
mov
xchg
les
dec
dec
ljmp
sbb
fstps
mov
pop
lea
lods
or
cwtl
push
push
mov
gs
int
es
or
cmpsb
xchg
mov
push
lcall
orl
out
sub
xchg
dec
mov
int3
sbb
test
out
fbstp
mov
pop
movsl
xchg
frstor
pushf
mov
aad
std
lret
fimull
pop
in
clc
jl
out
pop
push
ss
or
mov
inc
sbb
ss
mov
repnz
ret
imul
cld
sbb
lock
leave
push
enter
fildll
nop
aad
or
fstpl
pop
cmpsb
xor
jle
cmp
into
cmp
fsubl
cmp
lret
out
ljmp
lea
push
xchg
xchg
cs
in
cmp
mov
clts
push
sbb
mov
inc
jns
jecxz
xor
or
mov
negb
lock
in
fidivrs
xchg
in
xor
js
xor
fcom
or
jl
fcomp
loopne
push
ss
lock
pusha
add
jg
addl
jo
jle
cmpl
outsl
push
lret
push
add
jp
notl
inc
call
jno
stos
imul
cmpsb
aaa
popf
inc
outsl
mov
into
mov
or
movsb
push
fimuls
pop
int
in
inc
pushf
js
aas
and
mov
pop
dec
adc
inc
mov
mov
mov
sbb
cli
cwtl
sbb
mov
dec
icebp
sub
adc
sarb
ds
mov
inc
stc
call
pusha
in
pop
lock
xor
xor
push
jp
repz
jle
mov
xchg
dec
jae
cmpsb
repnz
xchg
adc
jecxz
lahf
popl
mov
and
cli
popf
sub
loopne
icebp
loop
sbb
decl
ja
pop
mov
mov
daa
inc
cmp
stos
fs
mov
pusha
add
sub
rcrl
lret
out
lret
or
cs
dec
pop
enter
cmp
push
pmullw
arpl
xchg
and
loope
cmpsl
adcb
or
je
and
jle
or
int3
xchg
in
outsb
iret
xchg
inc
jae
loopne
or
mov
cmp
andb
in
dec
popf
and
js
scas
and
cmp
mov
lret
mov
mov
dec
das
rcl
scas
add
dec
fsts
cwtl
gs
cmp
mov
cmpsl
stc
repnz
scas
into
sbb
push
leave
cmp
sbb
jecxz
adc
or
insl
jnp
call
dec
sbb
ret
push
std
dec
xor
jl
cld
jge
inc
push
jb
out
loope
cmp
cwtl
add
pop
push
mov
mov
call
cmpsb
dec
pop
iret
xchg
in
sbb
jns
jb
das
hlt
adc
out
test
adc
es
ret
cmp
or
mov
push
mov
iret
mov
in
scas
mov
rclb
dec
push
sub
cmpsl
mov
or
inc
hlt
cmpsb
push
sub
movsl
lret
testb
mov
or
loopne
cmpsb
dec
mov
outsl
movsl
mov
arpl
sbb
pop
aad
add
jae
popa
addr16
outsl
js
add
test
out
cmp
sub
test
cmp
test
pushf
cmp
pushf
mov
pushf
pusha
lea
ja
stc
imul
pushf
push
pushf
bt
add
movb
pusha
lea
jmp
or
into
xchg
in
scas
dec
popa
int
dec
xchg
push
and
jns
mov
sub
or
inc
inc
lds
jl
add
cmpsl
loopne
mov
sbb
pop
pop
lcall
daa
and
mov
sbb
shrl
or
inc
lcall
call
adc
ret
jbe
cmp
dec
ss
pushf
pop
or
out
rcrb
inc
into
xchg
in
test
sbb
popa
xor
dec
loope
dec
adc
jmp
cs
xchg
mov
dec
jo
int
leave
sub
ja
mov
adc
mov
push
das
mov
insl
push
mov
insl
xor
mov
mov
movl
pusha
pushl
ret
stos
adcl
sub
mov
mov
xchg
or
clc
mov
jnp
std
fwait
lahf
cmp
lds
pusha
mov
popa
outsb
ds
xlat
movsl
xor
ret
scas
mov
sbb
pushf
adc
pop
aad
ds
push
adc
mov
add
scas
test
mov
pop
inc
dec
push
inc
jp
addr16
pusha
and
insb
xor
pop
mov
mov
jns
and
iret
pop
pop
add
fnstsw
out
xchg
in
sti
jg
inc
or
xchg
movsb
mov
push
pop
imul
ja
jne
xchg
fimull
cmp
aaa
jb
dec
and
cwtl
or
jmp
das
loope
inc
jl
add
inc
xchg
incl
mov
xor
loop
enter
sub
in
push
add
xchg
inc
push
repnz
repz
enter
adc
sbb
mov
ror
jge
sbb
or
push
lahf
movsl
ret
loopne
adc
enter
mov
pop
jp
imul
or
push
xchg
jno
insl
xchg
sbb
add
jle
outsb
add
in
xchg
cmp
stc
jo
fidivrs
es
xchg
sub
pop
cmp
or
mov
jo
xlat
repz
mov
pusha
leave
cs
loop
jp
cmc
test
pop
lock
pop
cmp
sub
mov
push
shrl
lret
lock
mov
shl
cmpb
xor
or
stos
cs
push
xchg
and
jae
stos
in
stos
cwtl
leave
shll
mov
xchg
cli
je
test
bound
mov
sub
xor
cltd
popl
stos
dec
repnz
shll
adc
scas
mov
test
pop
xchg
sarb
inc
pop
ss
add
xchg
in
popa
loope
jo
shll
inc
and
enter
in
das
pop
orb
cmpb
sbb
xchg
imul
aas
popf
gs
ret
pop
mov
jmp
testl
and
sub
out
pop
xor
lcall
gs
mov
sub
xor
pusha
dec
js
or
in
add
mov
mov
mov
mov
push
dec
inc
dec
dec
xor
cs
insb
add
mov
inc
mov
or
push
scas
mov
sbb
add
shr
mov
testl
xor
mov
loop
pop
mov
jnp
lahf
sub
jbe
outsl
inc
jecxz
aad
std
sahf
mov
pop
add
jns
cli
loope
cmp
loop
int
or
iret
mov
cld
adc
arpl
inc
decb
call
es
pushf
pop
lock
mov
data16
das
jmp
xor
je
lods
xchg
cld
push
xchg
in
jbe
loop
jns
dec
jmp
outsl
cmp
ljmp
pop
mov
cs
iret
scas
mov
dec
lret
aam
xor
add
lret
imul
or
add
stc
cmpsl
movsb
mov
addr16
xor
sub
xchg
popf
mov
pop
shll
and
daa
dec
add
mov
mov
or
xor
lahf
xor
adc
inc
mov
mov
in
push
xchg
adc
inc
scas
push
ds
rcrb
cs
adc
arpl
nop
xor
cmc
and
out
enter
push
sbb
jns
int3
lret
test
pop
cli
not
jg
mov
fists
and
xor
inc
icebp
or
or
and
push
sahf
loopne
lcall
popa
addb
pop
movsb
sbb
in
adc
jbe
push
xchg
sbb
out
fcomps
mov
xchg
add
mov
cmp
push
std
mov
sub
cmp
xchg
in
std
ret
fimuls
cmpsl
inc
dec
arpl
mov
out
jmp
sahf
mov
pushl
jle
cmpsl
ret
mov
fsubr
push
push
jmp
jle
stos
test
stos
out
sub
es
pop
fs
insb
or
in
cmp
insb
jnp
cmp
sbb
aas
int3
into
pushf
xchg
jecxz
jmp
testb
add
imul
or
fcoms
sub
setl
insb
sub
mov
sub
in
push
and
ljmp
les
jae
push
cltd
pop
mov
xchg
ljmp
testb
ficomps
mov
and
ljmp
stc
dec
or
and
cmp
cli
mov
inc
scas
push
out
movsl
mov
sbbw
or
addr16
daa
fs
adc
add
repnz
mov
sbb
mov
mov
call
mov
call
inc
das
mov
cld
rcr
jo
pop
sbb
lcall
mov
roll
jge
push
jmp
ret
sub
jb
lret
add
das
out
test
xchg
xor
mov
addr16
cmc
dec
stc
insb
dec
jno
adc
pop
cmp
push
mov
sub
xor
enter
cmp
test
mov
lea
je
jmp
sub
bt
repnz
pushf
call
lea
ja
push
pusha
imul
call
sbb
in
scas
mov
mov
jbe
adc
fiadds
shll
cltd
jns
mov
xlat
push
jne
cmpsl
xchg
push
fs
and
stos
xor
scas
aas
push
cmpsb
mov
add
pop
fs
outsl
mov
xchg
mov
pop
pop
js
mov
push
mov
clc
add
mov
lret
stos
xor
in
data16
jp
shrb
mov
jnp
adc
adc
inc
mov
inc
mov
stos
jp
test
in
jbe
sub
inc
lret
mov
ja
mov
xorl
or
ja
pop
push
insb
test
mov
fstl
mov
in
pop
jnp
jns
push
lret
inc
jl
xchg
in
out
pushf
addr16
inc
or
cmc
frstor
jecxz
pusha
icebp
xchg
adc
test
in
mov
add
cmpsl
xchg
mov
inc
ret
xor
pop
xor
fwait
stos
aad
test
add
sub
adc
mov
dec
sub
mov
mov
arpl
xchg
inc
stos
dec
aam
jecxz
jns
push
dec
and
jae
mov
adc
mov
add
sbb
xchg
in
xor
fwait
jg
out
dec
iret
jmp
pop
hlt
mov
daa
cmp
or
cmpsb
xor
push
mov
mov
ds
shlb
in
xor
into
fmul
leave
test
jg
int3
jg
loopne
pop
inc
cmpsl
inc
sub
fisubrl
loopne
aaa
push
and
in
loop
call
and
add
mov
pop
in
andl
cld
pop
ret
push
pop
dec
sub
out
fisubrl
jg
push
insb
push
movsb
mov
roll
fildll
loope
and
inc
outsb
addr16
popa
sahf
cmc
push
inc
stos
cs
in
fcom
popa
or
push
shr
inc
lds
shrl
pop
cmp
pop
stos
or
add
xchg
in
sbb
jnp
into
enter
cmp
inc
xor
pusha
mov
pushf
fistpl
dec
xchg
hlt
in
mov
test
fisttpl
push
cltd
outsl
xor
inc
cmp
fbld
call
adc
lea
repz
mov
enter
xchg
mov
addl
pop
rol
stos
mov
mov
ret
std
xchg
jl
fcom
jns
xchg
sub
popf
and
add
orb
jne
ficoml
incb
xchg
pop
cli
sbb
pop
mov
in
rclb
push
mov
mov
movsl
ret
call
mov
push
aad
fisttpl
jg
pop
movsl
js
movsb
xchg
shr
add
test
push
fiadds
sarl
sbb
pop
pop
rorb
and
fidivl
xchg
into
mov
mov
push
in
dec
bound
in
clc
loopne
popf
cltd
mov
jb
call
out
push
inc
inc
pop
add
test
mov
es
pushf
orb
sub
jle
xchg
sub
mov
inc
add
mov
mov
out
dec
dec
out
inc
repnz
scas
nop
sbb
xchg
in
into
xor
jno
pop
mov
cmp
mov
roll
out
ljmp
mov
addr16
lret
dec
idiv
ficoms
xor
fwait
fwait
add
icebp
and
xor
lret
inc
lods
leave
leave
cmp
xor
sub
mov
sbb
fcoms
sti
movsb
scas
jmp
icebp
cs
pop
repnz
push
xor
repnz
ljmp
cmp
cmp
call
pushf
lea
jne
lea
not
mov
bsf
rcr
sub
rcr
cmc
mov
stc
cmp
pusha
pushf
sub
pushf
pushl
popl
jmp
mov
pusha
mov
movl
pushf
pushl
ret
ja
inc
rcll
cmp
jmpw
loope
stos
mov
inc
or
or
mov
push
xor
lret
ficoms
sbb
jbe
pop
out
inc
push
dec
xchg
push
jl
setb
sbb
jb
cmc
xchg
pop
mov
jne
mov
dec
subl
lret
gs
stc
sub
pop
call
pop
inc
outsb
call
add
push
mov
neg
pushl
jmp
jmp
lea
jne
rcr
btc
aam
sub
bsf
mov
cmc
sub
add
mov
pusha
rcl
mov
pusha
bt
test
mov
pushf
pushf
pushf
lea
je
push
test
sub
bt
cmp
cmp
cmp
call
jmp
lea
jne
call
jp
mov
xchg
in
lods
jmp
cmpsl
mov
lret
lock
cmp
inc
das
pop
enter
mov
pop
test
pop
sub
pop
data16
pop
xor
test
xor
dec
gs
sbb
test
test
push
pop
xor
cmp
mov
xchg
add
jno
mov
inc
les
popf
mov
out
adc
pop
adc
xor
insl
insb
xchg
dec
out
push
dec
in
pop
push
cld
mov
add
mov
jmp
push
push
lcall
imul
jo
jecxz
out
test
lea
fwait
xor
loopne
and
xchg
in
jb
clc
jmp
lods
jns
pop
sbb
fcmovb
sub
or
mov
jecxz
out
inc
clc
lods
pop
imulb
lcall
sbb
cld
shlb
sahf
mov
mov
push
sbb
sub
sbb
push
push
ss
adc
pusha
je
xor
call
or
popl
sub
fwait
inc
lahf
shll
movsl
outsb
jmp
add
idivb
or
adc
mov
cmp
insl
repz
xchg
aaa
mov
clc
out
ds
xchg
jmp
bound
in
jmp
sbb
xchg
sbb
pop
shlb
int
mov
xchg
cmp
int3
dec
adc
add
lcall
in
cmpsb
inc
sbb
fbstp
fsts
ljmp
cmp
jno
std
lahf
jnp
jno
fists
push
lahf
std
or
out
call
pop
or
xor
addr16
xchg
and
adc
aaa
cbtw
imul
in
add
ret
ss
shrl
out
pop
call
out
cmp
mov
popf
icebp
cli
or
add
or
lock
fcoml
mov
ljmp
pop
shrb
mov
mov
divl
mov
movsb
inc
xchg
jo
adc
loopne
stc
cmc
and
push
add
int
jne
out
xchg
and
adc
xor
cmp
inc
in
jle
cmp
push
sbbl
rclb
sti
rcrl
cmp
cltd
inc
and
mov
pop
sub
movsb
in
inc
fnsave
sahf
sti
jmp
dec
fnsave
mull
mov
fists
jg
sub
shrl
out
pop
push
and
into
in
aaa
xchg
lods
es
inc
hlt
cmp
jp
ficoml
in
pop
add
not
outsl
fdivrl
push
adc
jle
rorl
or
dec
jge
arpl
mov
mov
and
out
and
pop
mov
inc
jmp
inc
sbb
pushf
fcomi
sbbl
ret
xor
jnp
ljmp
call
stc
shl
aas
imul
rol
sahf
mov
and
and
add
cmp
inc
mov
dec
aas
sbb
lods
shll
cltd
jns
sahf
pop
call
lea
call
pushf
pushf
movw
lea
jb
pusha
push
pushl
ret
inc
xchg
ficoms
rcrb
add
inc
ficompl
aad
push
xchg
int3
inc
jne
int3
aad
jne
stos
ljmp
sub
push
test
test
mov
and
in
popf
add
push
or
popa
inc
shlb
aaa
mov
movsb
ja,pt
ja
xchg
xchg
mov
incl
pop
jmp
negb
dec
lods
xchg
or
sub
and
outsb
gs
movsl
jo
aas
shlb
pop
xlat
fs
das
xor
mov
xchg
lret
dec
das
popa
adc
jnp
call
call
in
cltd
popf
mov
adc
inc
lret
push
jae
dec
sub
ret
sbb
popa
or
icebp
mov
jnp
fidivs
mov
jp
dec
fisubrl
sbb
imul
jg
jns
xchg
fcmovne
sbb
push
push
loopne
push
xor
lret
sub
mov
lret
jbe
jl
push
xor
test
mov
add
or
sar
or
scas
dec
cwtl
mov
cltd
pop
sahf
lea
arpl
lret
nop
pop
jl
inc
addl
mov
cmp
sbb
pop
adc
test
icebp
fdivrp
in
cwtl
xchg
mov
adc
or
lret
xor
mov
jge
sub
aas
je
adc
and
jnp
fstpl
out
subb
out
pop
cltd
push
aad
into
jle
jno
fsts
sub
inc
std
fcoml
clc
push
inc
ret
pop
pop
loope
jge
mov
ljmp
mov
daa
cmpsl
in
clc
push
cmp
push
and
adc
xlat
out
sarl
ljmp
movsl
enter
cwtl
enter
insb
jp
dec
je
movsl
or
mov
pop
or
jns
je
sub
push
or
je
arpl
sub
test
ffree
outsl
lea
jb
stc
cmp
push
pushf
jmp
inc
mov
outsl
dec
adc
and
xchg
repnz
dec
in
aad
cmp
mov
jb
mov
add
stc
xchg
lcall
into
push
ret
nop
dec
sbb
and
and
loop
push
and
movl
add
test
or
jecxz
sbb
popf
xor
or
lods
inc
add
arpl
outsb
dec
cmpb
push
pusha
lea
jne
cmc
shrd
mov
cmp
push
add
cmp
call
in
mov
test
push
sbb
mov
mov
mov
iret
sbb
add
sbbb
push
je
inc
clc
jo
ja
sbb
test
push
loop
mov
cli
cli
arpl
lcall
fs
inc
fsub
shr
dec
sarl
mov
push
cmp
sarb
inc
xchg
mov
pop
in
std
push
js
sbb
stos
pop
push
inc
int
stos
inc
inc
testb
pop
xor
sbb
sti
mov
das
mov
jle
sub
in
mov
lea
stc
popf
jg
fwait
test
mov
rorl
mov
mov
push
cld
or
stos
imul
dec
data16
es
adc
jo
mov
lea
loopne
mov
loopne
bound
out
scas
mov
bnd
mov
mov
inc
xor
lcall
popf
clc
cmp
sub
clc
call
jl
mov
add
in
inc
es
outsl
sti
cmpsb
das
and
arpl
pop
jb
ret
cmpsl
mov
int3
sti
inc
xchg
sarb
xor
inc
dec
and
push
das
push
dec
sub
insb
lret
icebp
mov
scas
xor
sub
sub
out
test
cld
cmp
xor
add
sbb
stc
xor
lock
imulb
sub
mov
pop
je
negb
add
mov
lods
out
out
jle
je
repz
ljmp
outsl
push
lods
dec
add
xchg
in
push
adc
dec
xchg
lock
mov
xorl
movl
test
push
mov
xor
gs
push
ds
clc
mov
movsb
lcall
mov
xchg
and
lods
adcb
fdivl
sub
xchg
mov
fidivrl
loop
cmc
mov
cmpsb
enter
inc
stc
out
jbe
daa
pushf
std
push
hlt
mov
xchg
in
fdivrs
sbb
jne
xchg
adc
mov
jbe
xor
ret
pusha
loop
adc
shll
jp
shlb
mov
loope
push
xor
jae
call
xor
jbe
fs
dec
xor
mov
lahf
adc
cmp
sub
lods
xchg
ds
mov
push
lahf
pop
push
inc
in
cwtl
mov
les
cmp
dec
cmp
adc
insl
fildll
lret
out
insb
outsb
stos
aad
pop
js
cmp
cmp
xlat
test
gs
inc
inc
enter
push
ljmp
and
xchg
mov
inc
sub
pop
shrb
mov
andb
jns
inc
out
xchg
mov
bound
call
stc
call
stos
in
in
in
xor
adc
mov
cmp
fcomps
jno
xchg
and
sub
mov
cltd
sub
fisubl
mov
pop
mov
mov
xlat
cmp
xor
mov
push
add
add
mov
lret
pop
rcrl
or
push
mov
lcall
in
in
sub
mov
in
mov
adc
movsb
fldl
adc
loop
test
popf
xchg
pushf
mov
inc
in
in
int
jg
shrl
dec
jae
fimuls
test
adc
push
fmull
sbb
sub
in
jno
cmp
xor
das
mov
hlt
das
sub
js
nop
xor
mov
pushf
mov
pop
arpl
lock
mov
cmc
jmp
cld
mov
sub
xchg
jnp
cmc
jno
push
fcoms
aas
and
push
push
enter
ja
push
pop
inc
xor
dec
or
js
mov
fildl
pop
xor
icebp
push
inc
call
ficomps
std
jl
or
imul
pushf
loop
jnp
push
cmpsl
arpl
cs
ja
call
xor
mov
jae
popa
push
arpl
scas
adc
call
xor
out
in
adc
fwait
popf
mov
aaa
jnp
insl
dec
mov
dec
mov
out
lds
lret
cltd
xchg
inc
shll
inc
test
mov
xor
cmc
mov
fstps
jae
notl
pusha
mov
mov
xchg
clc
xchg
jbe
out
int3
sahf
imul
jnp
int3
pusha
adc
and
cmp
ret
pop
lods
fwait
leave
and
outsb
mov
xor
dec
lock
imul
xchg
in
cld
faddl
sub
adc
mov
out
sbb
stc
inc
arpl
pop
pop
lds
inc
add
cltd
pop
rolb
into
out
outsl
lods
cmc
adc
adc
adcl
mov
add
jle
jle
ret
inc
or
fistps
dec
idivb
inc
ficompl
xor
add
loope
and
mov
imul
and
xlat
pop
adc
lock
pop
js
or
test
jnp
or
or
mov
repnz
pushf
pushf
jmp
cmp
push
setge
lea
push
cwtl
mov
pushf
lea
ja
jmp
lea
jne
push
dec
mov
movl
call
add
imul
add
pushf
cmp
pop
shll
xchg
repz
pop
pop
lds
in
sbb
ljmp
adc
jmp
loop
jmp
movsl
cmp
sbb
mov
jl
fistpll
sbb
or
pushf
jb
or
rorl
lods
lcall
scas
rclb
dec
aas
xor
sahf
lret
push
mov
lret
cmp
dec
mov
xchg
in
adc
rorl
shrb
add
adc
imul
or
inc
sbb
test
shl
js
outsb
adc
cltd
gs
arpl
divl
cmp
out
test
jb
ja
xchg
cwtl
sub
popf
iret
mov
inc
mov
data16
mov
sahf
xor
daa
push
xor
icebp
adc
je
jg
ss
lret
loopne
in
cmp
fcmove
jp
sbb
mov
mov
cmpl
push
in
jnp
imul
stc
in
add
ret
sbb
call
pop
xchg
push
js
pop
fwait
jp
push
mov
out
push
sti
jecxz
dec
and
rcrl
xchg
and
mov
dec
jne
inc
ret
add
push
cmp
std
fmull
sahf
loopne
in
pop
xchg
xchg
xlat
fnstenv
sbb
aaa
aam
jle
adc
test
rorb
mov
pop
sbb
lock
cmp
add
pop
repz
test
sbb
scas
loopne
pusha
add
es
sahf
mov
sbb
or
cmpsb
push
xor
inc
inc
push
shlb
mov
dec
jo
loope
push
rorb
mov
out
adc
enter
shr
and
sub
les
sbb
into
subb
addr16
mov
adc
jecxz
push
cmc
jns
inc
jecxz
in
pop
xchg
scas
mov
mov
addl
jg
add
xchg
or
incl
lds
jle
adc
dec
hlt
add
mov
inc
dec
shrb
fstps
ror
stos
add
mov
les
adc
lock
mov
imul
jb
mov
push
adc
lcall
mov
rcl
pop
add
dec
push
call
imul
mov
stos
pop
cmc
adc
sarl
sub
jmp
fidivrl
add
les
xlat
int3
and
pop
xchg
push
or
xchg
in
jno
dec
ret
test
xor
add
fadds
mov
in
xor
mov
bound
in
xorl
shlb
sub
fldcw
mov
cltd
aad
cli
or
in
sbbl
not
test
xor
je
arpl
cmp
push
rcrl
lret
hlt
sahf
sub
and
push
xor
jae
xchg
mov
call
and
pop
and
fstpl
inc
cmp
aas
inc
lcall
mov
std
sbb
push
ret
push
push
ds
fwait
ljmp
sub
xchg
fidivl
test
lcall
sub
sub
and
in
call
xchg
cmp
sbb
cltd
sub
xchg
inc
insl
shrb
scas
movsl
imul
push
ja
icebp
loopne
add
mov
ljmp
loop
in
std
jl
and
xchg
adc
into
cltd
pusha
xlat
cmp
ja
movsb
lret
and
test
inc
inc
pop
sti
adc
fistps
dec
pop
inc
sbb
ret
cmc
and
sti
adc
mov
push
inc
sub
or
test
cltd
lods
and
lods
inc
in
xchg
out
out
leave
sub
fwait
das
and
sbb
int3
jnp
insb
cmp
fnstenv
stos
inc
sbbl
inc
mov
loop
adc
lahf
add
lahf
ror
inc
xchg
test
cmp
mov
add
bound
adc
ja
sub
rorb
imul
xchg
popa
js
jb
js
mov
cs
mov
dec
fucomip
xchg
in
ret
xchg
jecxz
imul
outsb
xchg
mov
aam
xchg
mov
aas
inc
out
mov
jbe
or
jno
pushf
mov
mov
xor
cmc
xor
mov
push
call
bound
inc
aas
scas
imul
mov
stos
pop
cmpsl
andb
xor
push
arpl
call
add
jno
jmp
xchg
mov
push
mov
cmp
aam
add
leave
int
lcall
jle
add
add
or
inc
aas
inc
loop
push
insb
push
add
jg
call
mov
scas
in
jb
ja
cmp
adc
inc
sarl
cmpsl
push
xchg
dec
and
test
add
lds
aaa
fimuls
orl
lock
mov
movsbw
mov
inc
cmc
mov
adc
push
inc
xor
mov
bt
sub
movb
cmp
repnz
movb
lea
jne
bsf
sbb
neg
mov
pusha
sub
pushf
lea
jmp
out
fcoms
lods
xor
mov
fimuls
imul
xchg
sub
fwait
lahf
mov
fisubs
dec
subb
aaa
aas
mov
cmpsb
sbb
fnsave
lahf
test
mov
push
notl
cmp
and
das
jbe
xor
icebp
std
shrb
xchg
sbb
add
repz
xor
xchg
jno
icebp
dec
iret
push
jne
popa
sub
xchg
in
dec
or
rcrb
or
xor
fcoml
mov
imul
and
adc
cmp
inc
lahf
leave
rorl
dec
icebp
into
out
or
clc
aad
testl
ds
repnz
enter
aad
cmp
mov
rclb
cwtl
cmp
mov
nop
imul
lahf
cmp
dec
loope
inc
fisubl
rclb
add
in
xchg
in
stc
bound
adc
add
inc
push
inc
in
into
psadbw
adc
jb
cmpsb
pop
mov
adc
in
pop
jmp
or
and
fldl
add
mov
and
vxorps
fildl
cmp
shlb
std
and
movsl
sub
jmp
shll
sarb
jle
shrb
addr16
sub
push
insl
out
xchg
in
repnz
jb
jbe
mov
mov
daa
push
addl
mov
iret
dec
add
mov
fcomps
imul
dec
int
lea
fisttpll
lock
inc
mov
cli
clc
sub
fisubrs
andl
jl
addl
lret
movsb
jge
nop
hlt
push
xchg
hlt
push
sbb
stos
cltd
mov
pop
and
push
pushf
lea
jae
pushf
pusha
movl
lea
jne
jmp
movl
push
pusha
mov
pushf
pushf
movw
push
pushl
ret
daa
mov
jmp
dec
mov
pop
or
sbb
cmp
lret
lods
aaa
add
xor
sbb
addl
addr16
jns
jb
sahf
sub
and
mov
xor
pop
stos
xchg
mov
arpl
rolb
mov
dec
lods
fisubs
pop
rcrl
lock
cmpsl
cmp
and
dec
sarl
mov
add
push
fnstenv
jmp
and
jo
out
std
out
adcl
jbe
push
mov
mov
and
sub
xor
cmp
mov
xor
pop
push
sbb
xor
lcall
outsb
cmpsb
std
push
jno
imul
push
cmp
cmp
and
push
sub
andl
out
sub
adc
test
call
mov
insl
cltd
outsl
rol
mov
test
mov
push
add
in
ret
bound
xor
and
repz
mov
sarl
aad
adc
add
mov
repz
testb
test
pop
jmp
xor
pop
inc
inc
push
xor
cmp
xlat
and
jne
sti
dec
sub
push
sbb
inc
cmp
pop
mov
movl
cmp
or
shl
call
and
pop
adc
dec
and
mov
mov
pop
bound
mov
jbe
call
dec
or
shll
subl
mov
cmc
test
mov
imul
pop
test
dec
mov
inc
std
xchg
mov
and
sarl
inc
xor
insb
and
lcall
enter
lcall
ss
or
pop
adc
add
gs
bound
jg
and
in
sbb
inc
pop
mov
jl
and
test
dec
icebp
inc
mov
out
ljmp
in
ret
xchg
cli
loope
push
push
push
pushf
call
fistps
xchg
adc
jnp
inc
lds
lock
je
pushf
fcomps
and
push
scas
cmp
xchg
mov
adc
or
insb
in
cmc
mov
or
lahf
test
push
mov
xchg
scas
and
push
insl
scas
scas
push
std
pop
ja
sub
push
xchg
sbbl
or
lock
xlat
push
adcb
xchg
in
mov
xor
mov
insb
jno
les
add
adc
dec
in
xor
iret
xchg
xor
outsb
jbe
dec
or
je
pushf
repnz
push
pop
test
aad
pop
xchg
mov
outsl
mov
jecxz
ror
fs
movsl
jb
stos
and
bound
arpl
push
cwtl
adc
pop
add
movsb
fwait
enter
inc
push
lea
pop
mov
sbb
mov
movl
out
add
fwait
cld
fimuls
call
and
dec
push
cltd
lcall
cwtl
jp
lods
pop
xor
imul
icebp
xchg
mov
or
sub
insb
sub
mov
loopne
andb
fnstcw
jb
ja
mov
jmp
test
shl
jb
popf
les
rcl
mov
pop
xchg
test
fimull
imul
jmp
repnz
cmc
into
sub
xchg
enter
xor
out
or
mov
push
cli
jae
dec
loope
cwtl
jecxz
pushf
jmp
call
adc
add
rcr
ror
neg
xor
push
rol
btc
btc
ror
sbb
shl
add
cmc
neg
btc
mov
pushl
jmp
cmc
add
cmc
test
clc
cmc
sub
call
call
jmp
push
call
push
mov
movb
mov
pushl
lea
jmp
mov
push
movb
pushf
pusha
mov
mov
pushf
pushl
mov
lea
jmp
pushl
pusha
mov
jmp
clc
pushf
cmp
sub
cmp
cmp
cmpl
pusha
mov
pushf
push
jmp
pushf
mov
pushf
jmp
not
sbb
cbtw
movzww
call
mov
jmp
repz
popl
pushf
mov
push
jmp
jmp
jmp
push
pusha
mov
push
push
pushf
pushf
lea
jmp
call
mov
movw
jmp
call
xchg
movb
movl
pusha
pushf
mov
pushf
movb
pushf
pushl
ret
pushf
popl
pusha
pushl
lea
jae
pusha
pushl
popl
push
lea
jmp
jmp
inc
pusha
mov
rol
clc
bt
xchg
jmp
pushf
xor
mov
clc
clc
mov
sub
push
pushf
mov
pushf
push
movb
lea
jmp
jmp
add
mov
mov
jmp
jmp
mov
mov
mov
movl
mov
jmp
pushl
popl
mov
lea
jmp
or
call
push
mov
call
aam
mov
pusha
inc
mov
pushf
cmp
clc
sub
pushf
cmc
cmc
cmp
shl
pushf
mov
mov
lea
jne
pushf
jmp
rcr
pusha
xchg
pushl
btr
rcr
mov
stc
call
movb
movb
pushf
popl
mov
pushl
popl
pushf
movb
lea
jmp
call
pusha
jmp
pushf
pushf
mov
pushl
pushl
ret
call
mov
push
mov
mov
mov
call
and
not
mov
cmc
add
call
mov
call
push
pusha
lea
push
mov
pushl
pushf
pushf
push
lea
jmp
cmc
add
mov
mov
pushf
lea
jmp
bswap
mov
jmp
call
mov
xor
decl
cmp
jmp
decl
ss
jmp
sub
decl
xor
jmp
cs
decl
aas
jmp
inc
decl
ss
jmp
cmp
push
ds
jmp
cmp
jmp
inc
jmp
xor
pushl
jmp
inc
decl
cmp
call
cmp
call
jmp
inc
decl
xor
decl
decl
sub
jmp
dec
sub
incl
cmp
dec
sub
jl
decl
jns
inc
xor
pushl
inc
sti
inc
jmp
inc
call
cmp
call
jmp
call
cs
call
incl
inc
jmp
dec
push
dec
jl
jmp
cmp
jmp
inc
ds
jns
pushl
inc
dec
inc
ljmp
call
aas
jmp
cmp
incl
sub
dec
sub
ljmp
pushl
inc
dec
inc
ljmp
jns
lcall
inc
cs
incl
jmp
inc
push
dec
incl
call
cmp
push
dec
decl
inc
call
cmp
call
cmp
decl
incl
inc
xor
dec
sub
jmp
inc
fidivrs
push
dec
incl
cmp
call
pushl
inc
ds
jmp
cmp
incl
inc
call
ljmp
call
cmp
inc
xor
sti
inc
jmp
cs
decl
inc
jmp
ds
decl
jmp
cmp
inc
ds
incl
cmp
pushl
fnsave
incl
cmp
clc
sub
decl
aaa
incl
call
jmp
cs
ljmp
inc
call
call
stc
xor
lcall
inc
incl
cmp
push
dec
jmp
xor
inc
ds
stc
xor
push
ds
pushl
decl
incl
lcall
stc
xor
decl
inc
jmp
inc
ljmp
ss
jmp
inc
ljmp
fidivrs
ljmp
decl
inc
jmp
inc
cs
clc
sub
ljmp
inc
push
dec
jmp
cs
lcall
inc
jmp
inc
decl
stc
xor
incl
inc
jmp
inc
inc
xor
jmp
clc
sub
decl
inc
inc
xor
decl
jmp
lcall
dec
decl
call
cs
ljmp
inc
fnsave
ljmp
lcall
dec
jmp
cmp
decl
inc
jmp
cmp
jmp
cmp
decl
cmp
inc
inc
and
out
add
jle
jl
inc
movw
pushf
lea
jmp
movb
pushf
pushf
lea
je
call
clc
lea
mov
cwtl
jmp
mov
movb
mov
lea
jmp
pusha
call
rcl
rcr
bswap
ror
pushf
pushf
inc
stc
mov
rol
rol
bt
and
sub
test
mov
pusha
bt
sub
movl
pushf
push
call
pushf
mov
mov
mov
pushf
call
mov
pushl
pushf
pushf
jmp
pushf
pushf
jmp
and
btc
movzww
cmp
sub
call
mov
push
mov
mov
lea
jmp
pushl
lea
push
pushl
pushf
mov
movw
pusha
mov
lea
jmp
pushf
movb
pushf
pushf
popl
pushl
pushl
mov
pushl
popl
push
mov
mov
movb
lea
jmp
pushl
mov
push
mov
pushf
mov
call
decl
movw
jmp
push
mov
jmp
mov
pushf
mov
call
call
shr
movb
pusha
mov
pushf
pushf
popl
call
stc
cmp
not
cmp
cmp
jmp
jmp
xchg
call
lea
mov
pushl
test
cwtl
cmc
sub
pushf
pushf
movw
pushl
mov
pushf
movb
movw
movb
lea
jmp
push
movb
mov
push
call
push
pushf
repz
popl
mov
push
push
pushf
mov
jmp
pushf
pusha
call
pushl
cmp
sub
jmp
jmp
pusha
not
bt
stc
bt
not
pushf
pushl
sub
mov
pushf
and
call
lea
je
pushf
pushl
popl
push
lea
jmp
repz
popl
pushf
pushf
mov
pusha
call
repz
popl
pushf
mov
jmp
adc
dec
rcr
mov
pushf
pusha
add
call
cwtl
cmc
bt
bt
sub
jmp
mov
lea
js
pusha
mov
jmp
call
pushf
push
mov
pusha
mov
lea
jmp
mov
add
jmp
mov
pushf
lea
jmp
mov
mov
jmp
mov
mov
jmp
call
pusha
push
push
mov
mov
pushf
pushf
lea
jmp
pusha
jmp
push
mov
repz
popl
call
jmp
pusha
mov
pushf
call
pushf
popl
pushl
push
call
movb
pushf
mov
mov
mov
lea
jmp
clc
shl
jmp
sub
cmc
not
cmc
cmc
pusha
sub
cmc
pusha
rol
bt
pushl
jmp
call
pushl
popl
pushf
lea
jmp
cmp
clc
sub
push
movw
mov
pusha
push
pushf
pushf
lea
jmp
btc
btc
adc
rol
mov
call
mov
pushf
push
movw
lea
jne
test
mov
clc
and
cmp
call
pushf
pushl
mov
pusha
pushf
popl
push
call
repz
popl
pushf
mov
jmp
push
mov
pushf
movw
mov
call
movsbw
mov
bt
push
add
pusha
xor
pushf
push
pushf
inc
bt
cmc
call
mov
clc
cmc
add
pusha
pushf
mov
push
lea
jmp
push
pushl
mov
lea
js
pushf
pusha
pusha
mov
pushf
lea
jmp
pushl
jmp
push
mov
pusha
pushf
push
lea
jmp
mov
lea
jne
pusha
movb
pushf
lea
jmp
sar
add
stc
mov
adc
shr
mov
cmc
call
or
jmp
not
lea
jmp
repz
popl
pusha
mov
pushf
mov
call
push
mov
pusha
pushl
movb
pushl
mov
pushf
push
push
call
aaa
mov
xor
shl
setg
clc
mov
call
mov
call
pushf
mov
call
movb
call
push
movb
push
mov
pushl
mov
pushf
push
pushf
movb
lea
jmp
call
pusha
mov
call
jmp
sub
cmc
clc
and
call
pusha
jmp
mov
pushf
movb
lea
jmp
mov
pushl
clc
mov
stc
sub
lea
jae
pushf
pushf
lea
jne
call
pusha
pushl
mov
pushl
movb
pushf
lea
jmp
movb
mov
push
mov
mov
pushf
pushf
push
pushf
popl
call
mov
pushf
popl
pushf
pushf
pushl
pushl
popl
pushf
mov
pusha
lea
jmp
rol
lea
shl
mov
clc
pusha
mov
stc
stc
add
call
call
cmp
jmp
mov
mov
jmp
jmp
mov
pushl
call
stc
clc
daa
mov
neg
sar
pop
adc
cld
rol
jbe
pop
xchg
lea
pop
clc
dec
pop
cmp
bt
pop
movsbw
pop
not
sar
pop
shl
cmp
dec
add
pop
xadd
bswap
rcl
jmp
bt
pushf
add
push
pushl
popf
pushf
pushf
mov
pushf
lea
jmp
mov
movb
pushl
pushl
mov
lea
jmp
call
push
mov
jmp
jmp
pushl
popl
pusha
lea
jmp
test
daa
aas
mov
add
neg
shr
mov
jmp
pusha
pushf
mov
push
mov
movb
mov
jmp
pushf
lea
jge
pushf
repz
popl
jmp
cmp
xor
push
pushf
inc
jmp
mov
pushf
mov
jmp
call
pusha
pushf
mov
mov
pushf
call
bt
jmp
movb
call
cld
push
push
cld
pusha
mov
pusha
call
jmp
pushf
popl
call
call
push
pushf
mov
pushf
mov
jmp
call
pushf
mov
jmp
movzbw
push
mov
cwtl
movsbw
cwtl
mov
push
pushl
lea
cpuid
call
shrd
cmp
sar
shr
mov
test
cmp
add
push
call
pusha
push
mov
pushf
pushl
lea
jmp
mov
push
push
pushf
pushl
lea
jmp
jmp
jmp
pushf
repz
popl
jmp
and
mov
pusha
cmc
add
pushf
push
lea
jmp
sub
bswap
inc
pop
xchg
pop
cld
mov
pop
movsbl
shl
pop
xadd
ror
sar
sub
pop
sbb
sbb
pop
clc
not
pop
std
pusha
push
mov
adc
mov
cmc
push
cld
clc
pushl
popf
pushf
push
pushf
pushl
ret
repz
popl
pusha
call
bt
add
call
bt
mov
bt
push
sub
call
call
jmp
mov
push
pushf
jmp
jmp
push
test
sub
pushl
pusha
push
pushf
lea
jmp
rcl
bsr
mov
jmp
pushf
mov
movb
call
mov
pushf
push
jmp
movw
mov
mov
mov
pushf
pushl
pushl
ret
sub
sub
shr
movzbw
add
bswap
push
movsbw
pushl
inc
pusha
bswap
rol
shl
not
bts
not
push
cmc
ror
and
sub
seta
test
or
rol
mov
cmc
add
pushf
call
repz
popl
pusha
mov
movb
mov
call
pushf
pusha
cmp
sub
call
mov
call
mov
push
push
push
pushl
mov
call
mov
pushf
mov
call
mov
pusha
mov
pushf
call
push
mov
jmp
jmp
movb
pushf
mov
pushf
pushf
jmp
bswap
movzbl
stc
adc
and
add
add
test
clc
lea
sar
pushf
sub
btc
lea
not
btc
rol
sbb
add
xor
inc
rol
pusha
movzbl
jmp
lea
ja
rol
mov
bt
setg
lea
bswap
sar
rcl
ror
sub
test
bsf
lea
btc
shl
bsf
shl
and
pusha
sub
call
push
lea
add
and
mov
or
add
bsr
sbb
shrd
mov
shl
call
pushf
mov
jmp
rol
bt
bt
movb
call
cmp
mov
sbb
movzbl
push
add
add
js
movsbw
add
push
bts
bswap
clc
ror
sar
xor
ror
bswap
ror
rcr
add
ror
call
mov
jmp
mov
pushl
mov
lea
jmp
pushf
popl
call
rol
call
pusha
pushf
add
push
clc
clc
stc
shrd
movb
mov
jmp
add
pusha
jmp
pushl
popl
pushf
mov
pushf
movb
lea
jmp
mov
pushf
pushf
popl
push
mov
call
pusha
movl
repz
popl
movb
call
mov
pushf
mov
call
push
push
call
dec
seta
jmp
call
movb
repz
popl
pushf
stc
cmc
mov
stc
pop
pop
xchg
btr
call
bt
ror
not
lea
pushf
inc
stc
stc
mov
pop
rol
dec
and
rcr
mov
inc
mov
cmc
test
add
pusha
jmp
mov
pushf
mov
push
mov
pushf
call
jmp
add
neg
mov
jmp
mov
jmp
call
add
clc
sub
clc
jmp
push
mov
push
pushl
pushf
lea
jmp
mov
movb
lea
jmp
shl
call
rcl
movzbl
jmp
mov
movb
mov
push
lea
jmp
rcr
mov
shl
stc
mov
call
sbb
shl
mov
call
cmc
mov
call
shr
pusha
mov
clc
mov
movb
bt
add
jmp
pusha
push
push
repz
popl
push
jmp
movl
push
pushl
popl
movb
mov
mov
mov
lea
jmp
pushf
rep
adc
jmp
dec
sbb
cmp
mov
test
push
pusha
sub
pushl
pushf
push
pushf
inc
clc
bt
push
clc
lea
bt
clc
rol
cmp
pushf
cmp
test
not
test
cmc
sub
clc
pushf
mov
bt
pushf
bt
stc
sub
mov
lea
jl
pusha
mov
push
movb
push
pushf
lea
jmp
mov
pushf
call
push
pushf
repz
popl
pusha
push
jmp
pusha
mov
pushl
mov
pushl
inc
push
pushf
push
lea
jmp
inc
bt
mov
btr
dec
seto
mov
bt
jmp
mov
movb
lea
jmp
test
and
mov
rcr
push
clc
sar
mov
cmc
mov
sub
call
mov
pushf
push
push
mov
lea
jmp
pushf
mov
pusha
jmp
add
push
jmp
mov
pusha
pushf
pushf
pushf
lea
jmp
shl
bsf
sbb
or
mov
setae
add
pusha
mov
pusha
pushf
mov
movb
pushf
mov
pushf
lea
jmp
jmp
movb
movb
mov
pushl
push
call
mov
call
cmp
stc
jmp
pushf
call
pushf
mov
call
xchg
movw
sub
bt
bt
sub
stc
jmp
push
pusha
mov
pusha
movb
mov
push
movl
pushf
mov
mov
pushf
mov
jmp
pushl
popf
movb
movb
lea
jmp
not
stc
rol
pushf
add
pushf
cbtw
cmp
call
mov
pushf
lea
jmp
jmp
mov
pushf
push
pushf
movw
lea
jmp
rcl
add
jmp
push
mov
jmp
call
sub
push
inc
jmp
pushl
pusha
repz
popl
pushf
mov
pushf
jmp
clc
cmc
stc
sub
push
push
mov
pushf
lea
jmp
pusha
movb
divl
jmp
bsr
push
rcl
lea
mov
lea
jbe
sub
pusha
pushf
call
call
pusha
pushf
mov
jmp
push
mov
call
xchg
not
xchg
bt
mov
lea
jmp
mov
movw
push
mov
mov
lea
jmp
stc
sub
pushl
cmc
clc
shr
mov
mov
pushl
pusha
mov
pushf
pushf
popl
pushf
pushl
popl
pushf
pushf
lea
jmp
mov
mov
lea
jmp
movzbw
pushf
cld
push
pushf
pop
xchg
not
movzbl
std
mov
bswap
lea
jmp
ror
mov
push
bt
xor
pushf
ror
call
mov
jmp
aaa
and
xchg
mov
stc
shr
and
mov
clc
jmp
mov
jmp
test
cmc
mov
bsf
and
add
lea
shld
xor
sub
cmc
ror
mov
test
pusha
stc
shl
stc
clc
pushf
test
shr
call
jmp
pushl
push
jmp
push
movsbw
jmp
push
movb
mov
movw
jmp
pushl
mov
pushf
pushf
mov
lea
jmp
xchg
xchg
push
btc
movzbw
pushf
movsbw
mov
movsbw
pushl
cmc
clc
push
bts
bt
mov
xchg
movzbw
mov
rol
dec
dec
xchg
test
xor
not
mov
rcl
sub
cmp
and
jmp
pushf
push
repz
popl
pushf
pusha
mov
movb
mov
jmp
jmp
pushf
movb
mov
pusha
pushl
pushf
lea
jmp
pushf
popl
mov
pushl
popl
pushl
pushf
lea
jmp
movw
call
pusha
mov
mov
call
pusha
repz
popl
mov
push
jmp
call
call
push
jmp
jmp
call
lea
ja
push
mov
pushf
pusha
inc
pushl
mov
pushf
lea
jmp
mov
push
mov
mov
pushf
lea
jmp
shl
rdtsc
bt
sub
pushf
pushf
mov
movw
pusha
mov
movw
movb
lea
jmp
mov
jmp
sub
pusha
cmp
pushf
jmp
not
pushf
pushf
bt
push
and
call
jmp
jmp
lea
jnp
inc
push
pushf
bt
rol
pushl
pusha
xchg
pushl
pushf
movb
movl
sub
bt
push
cmp
call
call
mov
jmp
rcl
btc
aam
notl
dec
movzbw
mov
jmp
bsr
cmc
and
mov
ror
rcl
xor
test
mov
pusha
sub
movb
pushf
mov
test
shr
jmp
cmc
add
call
mov
pushf
call
lea
jne
push
mov
push
pusha
pushf
lea
jmp
movl
call
mov
mov
push
pushl
mov
push
lea
jmp
neg
cmp
bt
jmp
push
pushf
pushf
pushl
popl
movl
lea
jmp
stc
movb
bt
sub
test
call
sub
push
inc
pushf
mov
push
lea
jmp
pop
bsf
bsf
btc
pop
pusha
stc
bt
test
pushl
popf
push
pushf
pushf
pushl
ret
pushl
popl
push
pushl
lea
jmp
mov
mov
pushf
lea
jmp
jmp
push
lea
jne
cmc
stc
push
sub
mov
xchg
push
call
call
inc
bts
daa
dec
mov
shr
bsf
mov
bt
pushf
mov
add
call
push
push
mov
movb
mov
mov
pushf
jmp
pusha
movb
mov
pushl
push
mov
call
pushf
repz
popl
call
pushf
mov
mov
pushf
pushf
pushf
pushl
lea
jmp
push
stc
add
pusha
mov
pushf
push
jmp
call
pusha
pushl
popl
clc
jmp
test
jmp
call
call
mov
pushf
call
pusha
pushf
popl
jmp
pusha
call
jmp
mov
pushf
pushf
lea
jmp
mov
sbb
or
mov
neg
adc
sbb
neg
mov
cmp
bt
cmc
clc
add
pushf
mov
push
shld
push
jmp
clc
call
bswap
and
bsf
mov
clc
sub
mov
clc
cmp
jo
cmc
not
cmp
clc
not
pusha
movw
test
and
pushf
call
pusha
pusha
push
pushl
popl
movb
pushf
lea
jmp
cmc
and
mov
cmp
pushl
clc
test
add
movw
pushf
movw
pusha
lea
jmp
rdtsc
lahf
push
mov
pushl
bswap
mov
call
xor
movw
add
shld
sub
pusha
btr
stc
movzbw
rol
not
movw
dec
cmp
setb
rcl
bswap
xor
btr
dec
push
xor
stc
movzbl
bt
neg
cmp
mov
cmc
stc
stc
not
movw
bt
cmc
bt
add
jmp
pusha
mov
mov
jmp
jmp
pusha
mov
jmp
mov
call
cmc
sub
pusha
pusha
cmp
push
add
push
pushf
popl
mov
pushf
mov
mov
pushl
popl
pushl
movb
mov
mov
lea
jmp
pushf
mov
mov
push
lea
jmp
mov
pushf
mov
movb
pushf
push
jmp
cmp
mov
lea
jne
clc
movzbl
rcr
xorb
sets
not
call
pushf
mov
pushl
pushl
pushf
lea
jmp
mov
pushf
pushf
jmp
mov
pushf
jmp
pushl
push
mov
pusha
push
movl
mov
lea
jmp
movb
call
pushf
pushf
pushf
call
call
pushf
push
pushf
popl
push
pushl
popl
push
mov
pushf
mov
lea
jmp
jmp
pushf
mov
mov
pushf
pushf
pushf
mov
pushl
jmp
sar
setno
mov
adc
or
jmp
rol
mov
or
bt
mov
test
add
push
mov
push
mov
pushl
pushf
lea
jmp
call
add
add
pusha
xor
jmp
pusha
mov
pushf
jmp
call
neg
mov
rcr
mov
std
jmp
mov
call
call
movw
push
mov
mov
lea
jmp
call
call
btc
mov
xor
cmp
or
mov
jmp
call
pushf
pushl
jmp
pushl
call
inc
push
sar
mov
bt
sub
mov
pushf
mov
movb
push
mov
pushf
lea
jmp
pushl
mov
pusha
call
repz
popl
call
call
pushf
pushf
pushl
call
aad
rol
movzbw
mov
inc
mov
jmp
bt
push
cmp
call
mov
pusha
pushf
lea
jmp
pushl
popl
pushf
push
lea
jmp
push
mov
push
mov
pushf
jmp
bswap
mov
push
movzbw
mov
jmp
movb
mov
mov
movw
movb
movb
lea
jmp
pushf
pushf
not
mov
pushf
push
jmp
jmp
pushf
mov
call
cld
call
pushl
pushl
popl
movb
lea
jmp
jmp
call
setg
movzbl
cmc
test
jmp
