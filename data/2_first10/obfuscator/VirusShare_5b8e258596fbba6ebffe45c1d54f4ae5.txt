jg
das
dec
dec
fsubr
loopne
and
cmc
and
shrl
xchg
adc
in
jle
push
or
sub
pop
pop
into
xchg
pop
rcrl
cld
and
jbe
inc
frstor
add
add
scas
dec
adc
jge
mov
clc
mov
imul
ja
xchg
sbb
fldl
push
xchg
sub
test
pushf
imul
adc
cmpsb
mov
cmpxchg
xor
nop
jge
dec
test
and
nop
inc
dec
lds
mov
ljmp
push
and
jmp
andl
push
mov
push
add
jbe
out
faddl
xchg
and
and
repnz
lcall
or
sub
rcr
pop
popl
stos
mov
pop
mov
repz
sarl
mov
cmp
ret
push
adc
leave
repz
mov
mov
sahf
and
stos
dec
inc
inc
push
scas
push
and
cmpsb
mov
push
mov
mov
lahf
test
rolb
xchg
fcmovu
push
xchg
pop
pop
mov
pop
jb
repnz
call
mov
ljmp
pushf
and
test
call
mov
iret
and
jo
jb
add
xor
jns
push
outsl
pop
mov
mov
lock
cmpsb
jg
push
idivb
mov
inc
sub
mov
movsl
sbb
cmc
xchg
lret
push
pop
fdiv
outsl
push
out
insl
call
sarb
jo
lret
mov
dec
jecxz
inc
packuswb
jg
scas
mov
pop
pop
js
dec
or
xor
jns
pop
rol
insl
aad
mov
mov
fnstcw
or
sub
enter
or
dec
lea
mov
xor
mov
cmpsb
inc
jns
mov
jb
jg
mov
jge
mov
jnp
out
jae
mov
arpl
pop
or
rcll
imul
push
icebp
jl
jnp
dec
cld
scas
test
fisubrs
int
add
push
and
out
leave
aaa
addr16
lock
xchg
mov
popa
pushf
xchg
sti
daa
mov
sub
add
sub
std
les
es
out
dec
mov
jae
and
insb
fucomp
je,pn
js
repz
mov
mov
lds
push
shlb
sbb
push
xchg
daa
and
mov
icebp
pushf
dec
mov
arpl
sbb
add
add
test
push
aas
rcll
ss
insb
rcrb
cmpsl
mov
add
xchg
sbb
mov
inc
xchg
mov
in
daa
in
sbb
loopne
pushf
ret
add
xchg
out
scas
stos
pop
jle
fisubrl
inc
mov
push
sets
xchg
or
mov
addr16
cmp
fimull
loopne
test
sarl
sbb
int
lock
push
inc
fidivl
rcrl
pop
and
and
sbb
or
lea
movsb
push
sub
pop
pushl
pop
jbe
shll
mov
lea
push
inc
pop
push
stos
dec
and
divb
inc
inc
aaa
aas
push
scas
push
fisubl
sub
and
notb
push
lahf
sub
inc
adc
call
pop
push
adc
outsl
insb
jle
das
enter
mov
lods
rorl
mov
ret
push
mov
and
insl
aas
enter
les
jnp
push
push
mov
js
loop
mov
out
dec
cmp
int3
push
dec
mov
mov
cmpsl
imul
popf
mov
adc
ljmp
lret
shll
repnz
or
push
jb
or
int
push
call
lea
mov
and
mov
push
adc
cs
stos
xchg
mov
fidivl
pop
in
dec
fdivl
test
popa
int3
sub
lahf
adc
jns
xchg
mov
and
js
popf
in
test
xchg
inc
int3
add
test
dec
and
mov
cmpsb
lods
cmp
xor
or
jge
sbb
movsb
jne
ja
pop
lock
int
mov
inc
les
pop
pop
cltd
addr16
xchg
inc
inc
jge
jae
mov
and
fcoms
lahf
into
fs
mov
add
xchg
dec
or
mov
xchg
mov
lods
test
aad
mov
inc
push
std
xchg
in
test
adc
push
pop
mov
stos
insb
jle
xchg
movl
dec
sbb
mov
mov
mov
fistpll
mov
adc
mov
or
cmp
inc
mov
pushf
fisubs
orl
dec
cmpb
mov
std
call
data16
jg
fs
fldenv
rol
and
sub
adc
mov
in
sbb
sahf
inc
pop
cli
sub
pop
xchg
mov
jne
jmp
jmp
adc
shrl
faddl
xor
daa
rcl
sbb
stos
dec
add
clc
mov
push
mov
mov
mov
mov
xorb
rdpmc
in
mov
sbb
push
and
subb
push
push
mov
ret
shrb
ljmp
push
insl
cmp
cli
push
xor
mov
xchg
pop
pop
jb
cmpsl
dec
push
lods
cmp
add
scas
lret
inc
mov
in
push
mov
cwtl
test
mov
mov
pop
push
add
cmpl
inc
mov
sbb
ja
jb
push
inc
out
popf
adc
std
mov
test
or
fidivrs
sbb
test
stc
or
push
cmpsb
daa
mov
popf
rcrl
sbb
loop
movsb
dec
stc
sub
enter
es
rcrl
or
jmp
stc
daa
mov
popa
or
sti
or
jbe
adc
mov
inc
adc
pop
fwait
mov
jge
inc
mov
or
push
jb
int
push
xchg
xor
or
ljmp
dec
lea
jb
jg
push
sar
out
ffreep
and
mov
pop
hlt
out
cmp
ret
int3
add
jae
inc
rcl
push
out
popa
dec
popa
mov
add
test
push
cmpsl
sti
cmp
cmpsl
les
pushf
ficompl
test
out
aad
sahf
pusha
outsl
mov
mov
jno
or
add
cmp
mov
neg
es
adc
ja
pusha
xchg
dec
fisubrl
imul
inc
sub
shl
cwtl
arpl
xor
cmp
call
loope
adc
pop
and
addb
push
iret
nop
fisttps
mov
mov
push
je
xor
cmpsl
pop
jge
data16
pop
sub
test
mov
jno
js
sbb
adc
dec
push
lods
lret
inc
decb
lods
mov
jnp
mov
push
sbb
mov
aad
lret
lret
pop
jnp
fsts
inc
jle
mov
stos
decl
inc
mov
push
cld
call
imul
sbb
push
pop
leave
xor
lea
dec
cmpl
and
pop
out
or
inc
notb
mov
or
ret
sbb
jecxz
push
fidivs
cmp
mov
mov
cmp
int3
push
cmp
shl
or
xorl
in
lods
jge
mov
inc
stos
aas
xor
in
repz
out
mov
jmp
mov
cmpl
mov
vmovaps
sub
xor
jecxz
push
jne
imul
js
out
xlat
jmp
subl
add
jns
cmp
mov
mov
xor
adc
mov
push
loop
setle
aas
push
dec
mov
cmp
jno
pop
stos
int3
repnz
push
dec
iret
les
jae
add
and
ds
mov
jne
jnp
inc
mov
call
mov
loopne
and
test
lock
mov
cmp
sbb
dec
push
cmp
daa
fidivrs
sbb
sub
decb
sbb
lret
movsl
adc
insl
out
push
mov
push
dec
addr16
add
or
aam
repnz
push
movsb
adc
rolb
repnz
aad
and
popf
pop
fsubl
xchg
out
dec
aam
dec
mov
in
fsubr
ret
add
xchg
sbb
cmp
xor
add
pop
test
sub
cwtl
push
add
jg
rclb
cmp
sbb
mov
jg
and
add
loop
inc
sub
or
scas
jae
mov
gs
fdivr
xor
mov
aaa
pop
enter
inc
push
push
cmp
push
adc
xor
sub
out
adc
stc
add
mov
and
nop
jb
std
sub
mov
cmp
push
es
push
jne
movsl
loopne
inc
repz
pop
or
fmuls
or
inc
add
lret
cmp
pop
sti
sbb
push
imul
pop
ljmp
scas
rcr
xchg
movsb
daa
mov
stos
push
lret
dec
je
das
stos
pop
rcll
mov
mov
jb
stos
xor
dec
in
lcall
or
xor
sub
in
jle
adc
in
add
outsb
adc
addl
or
pusha
mov
loop
cli
andl
push
and
idivl
and
rcrl
cmp
inc
out
scas
cmp
pushf
sbb
push
xchg
mov
push
out
out
sub
push
sub
movsl
cwtl
pop
sti
adc
ret
pop
add
and
and
sub
pop
je
fcmovu
ss
ds
inc
cli
loopne
fists
sbb
rcrl
hlt
in
popf
fcmovb
fmull
sub
jae
push
stos
xor
fmull
pop
xchg
loopne
dec
sub
push
cltd
or
or
jmp
push
and
sbb
mov
push
lods
lods
outsl
movsb
push
mov
sub
in
hlt
cmp
notb
pop
adc
adc
arpl
dec
loop
out
lret
xor
or
xor
xchg
addr16
pop
shl
add
mov
nop
arpl
jl
mov
into
lds
lahf
add
adcl
mov
mov
or
test
mov
jmp
fbld
push
cmp
cmpsl
loop
js
xor
aas
rcrb
and
aad
imul
icebp
push
add
xor
mul
jmp
xchg
pop
imul
mov
hlt
leave
push
test
xor
rol
sbbl
negl
sbb
jmp
popa
or
js
cld
movl
dec
jno
out
movsb
jb
mov
in
mov
in
es
push
push
lret
dec
pop
xchg
jl
je
and
or
ss
pop
in
lock
mov
dec
dec
cmp
push
jp
sub
fldcw
push
jb
mov
xor
enter
inc
mov
stos
jo
jecxz
fidivrs
jns
push
mov
mov
inc
ds
out
mov
dec
nop
add
fsubl
cltd
ds
dec
gs
jns
push
mov
fwait
mov
test
sub
push
rclb
mov
mov
ja
and
xchg
mov
shll
inc
dec
lahf
scas
cmp
push
inc
add
lea
das
lds
popf
push
icebp
add
jbe
outsb
lcall
push
mov
pusha
ja
scas
sbb
and
jle
fs
hlt
add
das
addr16
or
add
jnp
dec
mov
xchg
inc
popl
mov
into
call
inc
stos
daa
hlt
adc
outsl
dec
mov
pop
imull
out
outsl
push
push
lods
das
jmp
test
gs
push
shll
inc
sub
jno
test
lcall
orb
mov
arpl
std
in
cmp
lods
sar
adc
or
sbb
loopne
test
xchg
inc
and
mov
lahf
hlt
pop
lea
repnz
push
push
jp
add
cmpsl
mov
call
mov
notl
out
add
aam
or
int
mov
cmpsl
clc
inc
test
mov
mov
xchg
jnp
shll
push
pop
fsubrs
dec
rolb
dec
aas
nop
jbe
or
cmp
int3
mov
mov
ss
imul
scas
sbb
daa
xchg
jmp
mov
mov
inc
out
inc
adc
repnz
or
cmp
xor
cmp
sar
dec
push
inc
or
insb
mov
dec
sub
sub
cwtl
ret
inc
sbb
mov
jecxz
jo
in
mov
out
mov
pop
loope
xchg
jb
aam
add
sbb
lods
out
js
js
xchg
in
mov
mov
adc
les
pop
xchg
mov
test
sbb
mov
cmp
shrb
sub
adc
addr16
or
push
outsl
dec
push
leave
insl
or
fcoml
popf
pop
scas
mov
mov
fsts
push
and
out
jl
rorl
add
movsb
dec
fisttpll
imulb
js
test
inc
cmp
cmp
mov
cmc
test
lret
or
or
mov
pop
dec
pop
movsb
mov
ss
push
sar
aam
jb
jb
imul
xor
mov
pop
and
xchg
mov
loopne
sti
lahf
call
es
mov
jbe
inc
and
loope
lret
push
lret
mov
cs
sub
adc
adc
cmp
jge
push
jecxz
fwait
nop
add
jl
jp,pt
sub
pop
push
or
inc
repnz
stos
pop
aas
aad
orl
xchg
dec
insl
pop
cmp
shr
arpl
clc
rorl
cmp
mov
mov
std
out
dec
loope
in
cld
dec
rorl
rcrb
push
cld
inc
stos
mov
jae
arpl
xchg
cmpsb
dec
bound
adc
jg
xchg
jl
aad
inc
sbb
push
rclb
repz
or
inc
or
or
jp
clc
add
fstpt
cmp
shlb
loope
call
addb
mov
lcall
fbstp
dec
cmp
xchg
jp
xchg
or
push
int
mov
xchg
bound
mov
mov
jp
mov
mov
call
cmp
jecxz
dec
jmp
ja
fcoms
sub
cld
cmc
stc
cmp
loopne
sub
in
imul
dec
notb
adc
mov
stos
xor
test
in
sti
jle
and
lretw
push
lcall
xchg
cmp
xor
hlt
test
xchg
cs
dec
add
loope
lods
mov
and
xchg
sbb
fsubl
xor
jae
push
xchg
lock
lret
sti
xchg
xchg
mov
xor
shlb
movsb
mov
outsb
rorl
fwait
cmpsl
adc
pop
push
sti
test
daa
in
orl
mov
cmpsb
fdivrl
stos
sub
lahf
cmpl
inc
test
cmc
mov
lahf
push
push
popf
push
xchg
lcall
lahf
inc
mov
sbb
mov
shll
pop
arpl
dec
cwtl
and
mov
inc
mov
enter
outsl
shlb
mov
ror
cmc
adc
push
cmp
std
xchg
daa
test
xorl
aas
mov
rcll
sub
xchg
hlt
and
cmp
imul
ss
mov
mulb
js
mov
in
fsubl
repnz
xor
push
pop
push
jp
xchg
addb
add
loope
and
idivl
cmp
cmp
adc
and
mov
add
mov
xchg
fstl
sbb
les
aad
push
mov
aad
lds
mov
pop
rolb
test
jecxz
lahf
sahf
and
insl
xor
in
sbb
cmp
jnp
xor
mov
xlat
lahf
push
fadd
xchg
sub
enter
push
and
xchg
pushf
aam
xor
lcall
lahf
dec
jne
or
mov
rol
xor
pop
repnz
test
push
cmc
fsubrs
jmp
inc
shl
fidivs
add
das
std
add
cli
sti
mov
fsubs
adc
inc
insb
sar
mov
mov
sar
and
js
xor
and
push
inc
pop
rclb
fs
sbb
mov
out
out
xlat
or
dec
pop
mov
xchg
shrl
insb
aam
inc
mov
in
dec
push
fists
testb
data16
push
int
pop
cmc
mov
cwtl
sbb
stc
jns
sahf
jb
jp
fwait
sub
jg
add
mov
sahf
xchg
adc
mov
and
mov
je
lock
inc
loopne
dec
sub
sbb
test
scas
jmp
jb
ljmp
sar
filds
inc
in
out
lods
mov
push
push
push
cmpsb
lds
mov
pusha
mov
int3
sub
adc
pop
mov
mov
dec
xlat
xor
sbb
cvtps2pd
testb
ljmp
out
mov
adc
and
test
imul
jae
mov
push
imul
mov
add
pop
xor
sti
or
mov
dec
inc
scas
mov
mov
sbb
inc
sahf
test
js
fsub
pusha
and
mov
out
push
call
xor
iret
pushf
loopne,pt
mov
push
pop
xor
xchg
adcl
jne
xchg
mov
xchg
mov
sti
adc
ss
out
cmp
dec
xchg
cmp
ljmp
out
and
insb
cmp
sub
mov
mov
jge
push
push
xchg
inc
jnp
dec
test
pop
repnz
xor
dec
pop
das
pusha
jb
mov
inc
mov
repnz
fwait
sti
mov
fcomps
test
inc
lret
push
jns
pusha
pusha
sub
addr16
aas
std
sti
xor
jp
out
mov
decl
pop
sarb
std
add
push
jl
add
idiv
sbb
pop
xor
outsb
push
mov
fs
les
xor
add
cwtl
sub
jl
sbb
sub
sub
cmpsb
push
push
in
icebp
jns
add
gs
push
pushf
mov
test
loop
inc
xchg
push
loop
test
inc
inc
cli
shlb
xor
sbb
shlb
cmp
enter
fstpl
lcall
adc
inc
xchg
frstor
xor
xchg
adc
and
jo
outsb
xor
pop
push
mov
jns
lock
mov
test
inc
out
in
test
xor
adcb
fsubrl
loope
or
test
pop
sub
cltd
nop
cmp
lods
pop
test
cmp
insb
inc
cmpl
outsl
mov
popa
rorl
inc
aad
xchg
jp
cmp
pop
jo
pop
pop
dec
sub
add
sbb
popf
mov
mov
aad
xchg
jecxz
adcl
inc
inc
sub
dec
test
sub
lds
or
cmp
mov
adc
hlt
ljmp
fbstp
or
ret
movsb
scas
pusha
insb
xor
clc
cli
push
shlb
mov
cmp
fidivs
sub
xor
popf
imul
adc
insl
xchg
mov
cmp
adc
pop
inc
test
jns
xchg
es
xor
sar
push
or
xchg
or
not
or
mov
insl
cld
push
fs
pusha
adc
jb
sub
push
mov
inc
lds
test
es
xchg
jno
jecxz
insl
repz
push
lods
xor
jne
sub
add
xor
fsubrs
ud2
dec
add
fisubl
jg
mov
insl
xchg
ds
repnz
mov
lret
scas
and
xchg
and
jle
mov
in
and
mov
test
aaa
fsub
out
push
orl
inc
lds
mov
pusha
mov
pushf
or
xchg
je
mov
inc
mov
mov
ds
push
lret
in
inc
cmp
sub
aad
jb
nopl
xor
aam
mov
mov
scas
or
fistpll
sti
sub
lahf
rolb
sbb
sbb
mov
cmp
sbb
scas
xchg
test
rcr
es
and
cmp
mov
push
push
and
jns
mov
inc
scas
mov
andb
xchg
jmp
gs
enter
inc
push
cmp
out
adc
mov
aas
fildl
outsb
add
pop
gs
dec
push
jmp
push
sahf
movsb
dec
sti
bound
xchg
pop
or
adc
mov
cli
ret
mulb
cmp
ljmp
push
stc
int
push
mov
cmpsl
push
mov
test
push
jno
inc
pop
insl
push
js
loope
fs
les
js
outsb
call
cld
ffree
aad
stc
add
adc
lahf
mov
ret
pusha
iret
mov
xchg
mov
push
mov
push
cmp
xchg
pop
lea
movsb
xor
and
pop
call
pop
mov
push
sarb
ror
xchg
stc
inc
cld
pop
sub
push
ds
inc
or
mov
jbe
arpl
jl
cmp
pop
je
sub
loopne
call
cmp
adc
js
cmp
cmp
repnz
or
inc
and
repz
fs
mov
mov
rolb
sti
aas
dec
lret
movb
loopne
jbe
cwtl
test
mov
adc
pop
scas
adc
enter
jns
ret
pop
testb
mov
dec
stos
add
pop
and
and
xor
mov
insb
outsb
add
or
or
cld
test
ja
push
sbb
cmp
movsb
scas
sub
jne
mov
push
cli
iret
push
dec
mov
or
xchg
sub
scas
ljmp
push
mov
sahf
arpl
add
push
icebp
xchg
pop
sbb
adc
lret
xchg
fimuls
fnsave
xchg
pusha
push
sbb
jne
mov
sub
mov
and
cmp
xchg
jmp
arpl
pop
dec
adc
xor
sbb
sub
mov
push
xor
and
mov
xor
and
push
inc
test
sahf
js
or
loope
aad
pusha
pop
push
out
int
ret
ljmp
sahf
cmc
aad
mov
leave
mov
add
sub
ror
vprotq
lret
sar
lahf
sbb
arpl
gs
sub
out
sbb
xchg
pushf
nop
add
loop
mov
xchg
adc
fwait
sub
addr16
jmp
pop
sbb
xchg
aaa
push
mov
xchg
sub
outsb
jno
xchg
daa
inc
xor
push
jg
xchg
fistpll
sbb
ljmp
mov
inc
bound
add
icebp
jne
mov
or
pop
int
sub
push
je
lods
inc
xchg
adc
in
or
and
sbb
ljmp
insb
add
mov
seto
ds
jmp
sub
add
ds
int
adc
and
jge
call
aaa
call
fwait
jg
jp
out
fnstcw
fwait
dec
fldl
out
rcrl
hlt
mov
enter
push
fisttps
pop
ss
sti
adc
rorb
and
adc
inc
push
xchg
cltd
add
and
jle,pn
xchg
push
xor
mov
sbb
hlt
sbb
sbb
mov
pop
imul
lods
addb
sbb
adc
test
lahf
jo
inc
add
sbbb
mov
xchg
jae
push
popa
xchg
ret
jg
bound
push
inc
and
and
mov
xor
jb
sbbb
adc
int3
cmp
xchg
mov
mov
imul
or
repnz
jns
aam
jp
loopne
loope
pop
mov
fwait
xchg
aas
in
push
sub
sub
push
jo
adc
mov
adc
scas
int3
fwait
add
int
lret
add
dec
into
mov
lret
or
and
ret
insb
pcmpeqd
cltd
daa
and
ficoms
loop
or
pop
xchg
jb
pop
xor
cmp
and
cwtl
mov
push
rorb
xchg
inc
leave
int
enter
xchg
fmuls
fisubrs
jbe
into
adc
test
xor
dec
add
jge
fnstcw
xor
jmp
and
pop
pushf
adc
push
xor
test
xchg
xchg
or
mov
xor
add
cmp
mov
scas
cmc
add
jnp
mov
sbb
inc
lret
fildll
imul
pop
imul
xor
lods
add
ljmp
out
cmp
add
push
sub
mov
scas
rorb
fidivs
bound
dec
mov
je
imul
insb
lea
fwait
call
add
ljmp
xor
lods
push
xchg
mov
mov
aas
xchg
dec
int
or
and
movsb
inc
aam
test
sub
cmc
testb
xchg
xchg
mov
sti
inc
pop
and
fcomp
sbb
ds
push
mov
mov
pop
lret
nop
pop
pop
pop
push
push
sub
lahf
dec
add
or
push
mov
sbb
imul
out
fs
aam
mov
push
addr16
shr
clc
stc
mov
loop
cli
ja
xchg
sbb
cmpsb
movsl
or
xor
xchg
xor
cmp
inc
xchg
pop
loope
mov
pop
lods
adc
repz
sbb
pop
jecxz
in
push
xor
pop
adc
xor
dec
cmpsl
aas
out
decb
or
arpl
mov
cltd
out
pop
and
push
pop
mov
jg
int
outsb
fs
fdivl
ret
inc
mov
std
mov
cmp
adc
stos
and
imul
lods
daa
xor
mov
and
pop
xor
sbb
pop
in
pop
stos
popf
adc
fbstp
sbb
popf
push
cmpsl
gs
out
addr16
fadd
inc
sti
lock
inc
pop
xchg
je
es
mov
fildll
add
jno
lea
cwtl
mov
aad
dec
or
mov
addb
cli
aad
xchg
repz
int
sub
jl
add
add
mov
mov
jg
aas
jp
sub
repz
mov
mov
add
xor
orl
pop
std
and
sub
ds
pop
jnp
sbb
mov
push
add
sbb
lahf
popa
insb
lods
mov
and
xchg
jp
loopne
mov
insb
out
xor
andl
cwtl
mov
mov
jbe
cmp
and
out
mov
inc
cmp
jns
les
fisttpl
and
xchg
mov
mov
or
adc
sub
adc
jb
les
pop
xor
mov
shlb
ss
fcmove
es
cmpb
mov
es
mov
sar
bound
lcall
scas
push
gs
mov
jmp
add
test
adc
test
pop
sahf
sub
ss
das
dec
xchg
xchg
sti
movsb
jg
std
mov
es
mov
mov
popa
es
sti
adc
sub
fdivrl
cli
fcmovnbe
jecxz
mov
fcompp
aad
fsubrs
push
gs
xchg
mov
inc
mov
pop
inc
lret
pop
push
dec
popa
jl
jle
xchg
rorb
fldl
xchg
out
rol
xchg
pop
xchg
enter
cmp
mov
popf
mov
lods
ds
ja
jp
push
sti
hlt
xchg
mov
lds
add
inc
or
inc
mov
test
ret
insb
jl
xor
jns
icebp
pop
jecxz
ret
jge
and
outsl
dec
in
popa
fs
ja
repz
mov
mov
fcomp
mov
inc
out
addb
cmp
mov
hlt
fsubl
xor
cltd
inc
popf
jae
into
orb
cltd
jae
cmp
scas
mov
mov
cmp
idivl
bound
cs
jno
mov
sub
test
sub
jge
sub
and
cmpsl
fwait
sub
mov
xchg
inc
add
lcall
add
sbb
sbb
repz
mov
cmp
sub
adc
jmp
and
inc
shrb
sbb
jns
nop
shll
xorl
push
sub
xchg
shlb
out
and
in
pop
cli
or
and
lds
jge
xor
divb
dec
fcompl
lods
clc
mov
cmpsb
mov
mov
je
sbb
mov
call
mov
arpl
repz
repnz
jo
jbe
adc
dec
leave
cmp
mov
mov
sbb
pop
jne
add
pop
or
inc
fucom
pop
xchg
iret
cltd
enter
arpl
add
or
leave
sahf
jo
imul
jl
stos
jb
xchg
pop
mov
push
mov
ja
cmp
arpl
jmp
sub
and
adc
outsb
lods
pop
enter
xchg
fistps
jo
cwtl
rclb
or
jecxz
fcomi
cmp
enter
sbb
insb
js
push
notl
out
addl
jecxz
xchg
cmp
mov
or
push
push
outsb
out
adc
sti
je
inc
or
and
in
xor
in
rcrl
or
pop
xor
popf
mov
xchg
mov
jmp
fidivrl
in
dec
ss
adc
xchg
daa
push
sbb
mov
push
mov
mov
jne
xchg
dec
adc
jb
nop
add
mov
test
sar
sub
bound
mov
push
scas
mov
xchg
jb
jo
clc
mul
jp
jno
inc
adc
jle
push
mov
adc
mov
stc
or
mov
outsb
inc
jmp
and
outsb
int3
nop
mov
mov
mov
test
push
push
mov
mov
inc
in
cmp
lea
fmull
clc
test
mov
das
or
aam
into
faddl
aas
mov
add
mov
sub
mov
test
lods
shll
and
in
push
push
nop
jb
and
in
jmp
jle
or
ret
pushf
xor
aaa
aad
adc
mov
shlb
insl
mov
pusha
or
dec
in
push
dec
inc
cmpsl
idivl
jns
loope
in
sub
outsb
daa
cmp
aas
push
add
testl
xchg
pop
lds
pop
push
mov
or
push
imul
fpatan
imul
and
mov
lods
pushf
pusha
inc
das
lea
inc
sub
pop
mov
inc
pop
in
imul
sbb
es
movsb
adc
mov
fisubrl
stos
adc
sub
stos
mov
rcl
and
aas
ds
xchg
aam
push
mov
jbe
sbb
cmp
xchg
push
jbe
or
mov
push
inc
sub
dec
or
add
xor
push
inc
inc
and
mov
popa
stos
in
dec
add
add
mov
and
pop
idivb
shrl
sub
loop
out
ss
shll
mov
lret
mov
loop
push
scas
in
sub
mov
pop
pop
xor
jmp
adc
adc
inc
scas
cmp
cmp
jne
movsl
or
jl
test
dec
dec
push
push
adc
loopne
inc
in
out
loope
out
pop
xchg
mov
cmp
rcll
js
xchg
mov
xorb
and
loop
addr16
idivl
les
shrd
sbb
xchg
pop
fldl
adc
inc
cmp
icebp
out
pop
and
jl
xor
js
xchg
insl
mov
test
sbb
jb
mov
mov
addr16
lds
cmp
push
subl
jecxz
xor
cwtl
aad
test
cmp
in
pop
imul
pop
push
pop
mov
jb
mov
orb
sbb
dec
mov
adc
inc
and
and
loope
sbb
fnstenv
and
lea
ljmp
lock
fisubl
in
jecxz
shlb
and
cmpsl
cmpl
aas
cmc
xlat
decl
lahf
add
cwtl
cmp
jo
or
rorb
jns
test
cmp
fucom
test
es
cmp
stos
das
shl
out
bound
xchg
push
or
dec
stos
mov
stos
repnz
in
dec
push
insl
cmp
push
les
jge
and
pop
xor
mov
mov
jge
add
fisubrs
ret
faddl
sbb
add
xchg
push
lock
cmc
cmp
sti
jmp
stos
adc
stc
pop
cs
jecxz
xor
dec
cld
and
pop
and
and
stc
addr16
movsl
xchg
and
push
jl
lahf
push
sub
adc
sub
sbb
jle
in
mov
xor
dec
negb
or
dec
adc
jmp
pop
aad
add
or
outsl
jl
dec
mov
insl
inc
js
outsl
mov
push
sub
shll
notl
lret
mov
push
fdivrs
icebp
add
addl
daa
mov
adc
inc
mov
cmp
cmc
xchg
cld
mov
xor
dec
xor
stos
pop
xchg
cs
lods
call
pop
scas
jg
mov
ret
cmpsb
push
imul
add
addb
cs
jb
pop
push
popa
mov
adc
pop
in
and
mov
push
dec
clc
loope
lcall
insb
jecxz
push
shlb
xor
adc
adc
xor
loope
xor
data16
out
mov
jg
fldl
ror
imul
cmp
mov
lea
mov
jmp
and
stos
push
imul
pop
lahf
pop
jle
mov
cwtl
pop
mov
js
in
pop
xorl
and
ret
mov
cmp
sti
aam
out
mov
or
inc
sti
pop
inc
inc
pop
jnp
ret
mov
movsb
push
pop
loope
les
test
pop
cmpsb
inc
pop
add
fs
inc
stos
push
adc
mov
mov
imul
fs
and
fstp
cmpl
push
and
bound
cmp
rcl
jne
sbb
js
mov
sbb
adc
fsts
add
and
xchg
hlt
push
or
sub
out
sub
fs
imul
xchg
std
stos
frstor
mov
xchg
cmp
mov
out
enter
loope
pop
mov
mov
sbb
mov
jb
fwait
xchg
sub
ja
lods
bound
mov
ds
mov
cltd
pushf
pop
mov
mov
sbb
insb
stos
cmpsl
in
inc
add
or
jg
out
sbb
mov
jne
pop
pushf
sub
fisttpl
cmp
test
mov
jno
mov
add
mov
pop
ss
sbb
cwtl
leave
xor
sbbb
mov
jno
pusha
dec
add
ljmp
mov
sbb
cwtl
cmp
add
xchg
push
arpl
decl
cmp
inc
sahf
add
or
or
lret
dec
dec
mov
hlt
cmp
leave
cmc
cmp
mov
add
popa
into
cmc
sub
or
movl
je
fs
dec
pop
movsb
test
mov
bound
dec
xor
movsl
arpl
sub
fsts
pop
fnstenv
xchg
sub
inc
mov
imul
sbb
mov
cwtl
pop
fcoms
stc
sar
std
sbb
test
insb
jp
mov
repnz
pop
out
inc
aaa
cmp
stos
arpl
stos
popa
mov
jno
lods
xchg
int3
and
jle
cmpsl
jne
push
shll
sub
dec
test
cli
xchg
test
inc
mov
outsb
lds
dec
mov
adc
ljmp
inc
jo
rcrb
and
push
mov
stos
sub
xchg
mov
mull
push
mov
xchg
mov
cmp
mov
imul
pusha
out
push
aam
add
adc
sahf
daa
xorb
test
lds
rcr
clc
mov
fisttpl
jns
daa
repz
xchg
sahf
pop
mov
or
pop
repnz
xor
testb
pushf
rorl
inc
fisubrl
shrb
sub
lock
movb
aad
xor
cmp
pop
scas
popa
xor
jae
fstl
mov
pop
cmpsb
dec
mov
imul
test
or
add
lcall
mov
lcall
movsb
sahf
jp
add
pushf
jl
ds
jg
adc
inc
test
sti
xchg
cmpsb
mov
cmp
cmc
sub
ds
daa
sub
cmp
fisttpll
movsl
in
fstps
cmpsl
sbb
mov
add
mov
jae
jo
das
out
in
mov
testb
in
pop
inc
popf
push
mov
mov
inc
cli
paddsw
jb
loopne
xchg
insl
and
cwtl
inc
lds
rorb
mov
xchg
inc
leave
sbb
jbe
cmp
sub
jae
xchg
inc
push
lock
dec
fsubrl
scas
fdiv
mov
aam
pop
mov
int
nop
cs
push
adc
cld
cmp
jmp
sub
pop
mov
xchg
mov
cmp
sub
inc
lret
mov
icebp
push
scas
xchg
and
arpl
ret
xor
jne
das
icebp
adc
lock
in
sub
add
inc
dec
push
data16
xchg
push
nop
xchg
cli
jmp
dec
mov
in
push
jo
inc
scas
out
nop
popa
fdivrp
mov
mov
jbe
mov
mov
fsubl
mov
test
fsubr
mov
clc
or
pushf
mov
or
xchg
pinsrw
and
imul
lods
pushf
aas
aad
xlat
jb
cmpsb
xchg
sarl
jb
cmp
mov
imul
sub
fiadds
adc
pop
daa
jne
test
aad
pop
mov
aaa
adc
ret
ret
stc
push
pop
mov
outsl
sbb
pusha
rclb
pop
lods
sbb
hlt
inc
xor
cli
dec
cmp
adc
sub
mov
js
das
pop
mov
mov
inc
fldt
inc
jno
jo
shll
cmc
in
les
jmp
pop
scas
jno
aas
adc
les
pop
iret
push
insl
test
roll
lcall
mov
adc
cmp
pop
jno
dec
fstps
adc
cmp
mov
dec
xor
jg
adc
inc
mov
xlat
xlat
inc
mov
cmp
fucomp
mov
out
out
sbb
cltd
loopne
dec
inc
ljmp
cmp
outsl
push
mov
mov
and
js
scas
xchg
or
push
int
mov
add
inc
pop
and
pop
jo
push
and
push
push
imul
test
das
xchg
pop
sbbb
ss
fcomip
push
lods
and
xchg
dec
lahf
xchg
movsb
fistps
lds
xlat
xchg
insl
cmp
mov
lcall
xchg
stos
lret
das
aaa
lea
and
push
inc
lret
xor
mov
cmc
fsubl
mov
cmp
push
lcall
or
js
shl
adc
and
adc
mov
xchg
mov
movsl
jl
or
in
sbb
cmp
imul
fidivrs
stos
orl
hlt
movsl
ja
xchg
add
push
shlb
push
out
sub
xchg
push
xor
pop
adc
and
inc
ss
jb
imul
jecxz
movsb
adc
adc
jno
imul
pop
adc
or
sbb
jecxz
stos
std
push
push
pop
test
int3
sub
adc
sbb
mov
jge
aad
outsb
mov
jno
xchg
aas
lret
mov
gs
aaa
lods
xlat
fsubrs
jne
sbbl
inc
inc
jp
inc
lods
les
fdivr
and
pusha
cmp
push
enter
iret
jl
mov
aad
and
testb
pop
dec
cli
fldl
loop
repnz
xchg
out
adc
clc
xchg
xchg
mov
mov
lods
int3
sbb
push
insl
imul
insb
ljmp
dec
mov
leave
mov
push
pusha
jmp
mov
stos
dec
mov
fmulp
or
push
out
pushf
xchg
jmp
leave
les
cmp
repnz
lcall
dec
stos
adc
jl
inc
incl
adc
loope
cmp
or
jge
adc
jge
sub
das
int3
es
test
mov
mov
addr16
addb
rclb
pusha
and
cmp
out
mov
lods
sub
cli
pop
fisttpll
and
jns
cltd
pop
idivl
les
mov
mov
pusha
adc
sbb
dec
jns
or
pop
sbbl
hlt
loopne
sub
imul
test
pusha
js
dec
ret
movswl
mov
in
mov
outsl
test
xor
test
mov
decl
incb
cmp
out
int
push
adc
push
adc
das
jnp
icebp
sbb
lock
jmp
mov
ret
les
scas
or
jg
sub
sbb
pop
sbb
outsl
lods
cltd
mov
cmp
rcrl
cmp
push
ss
push
mov
inc
and
in
mov
xchg
shl
arpl
lock
test
and
cmpsl
insb
dec
cmp
fsubl
pminub
repnz
xchg
lods
and
imul
sub
mov
mov
xchg
jge
es
mov
inc
roll
sub
ljmp
into
and
ror
hlt
mov
pop
and
sbb
inc
ljmp
fistps
ret
lret
jbe
jle
xchg
mov
rcll
pop
push
rol
inc
adc
mov
and
sti
sbb
leave
inc
pop
dec
xchg
inc
pop
push
jns
pop
jno
mov
push
jb
ss
fsubrs
sbb
inc
dec
pop
idivl
sbb
pop
aad
ss
leave
rcll
out
sub
leave
mov
jmp
jb
lods
out
push
adc
test
icebp
and
test
stc
outsb
dec
lods
lret
dec
and
in
jp
push
add
sbb
jnp
negb
mov
pop
je
or
inc
jle
das
mov
adc
add
out
aaa
lret
ret
adc
mov
jbe
std
mov
shrl
stos
sahf
xchg
cmpl
enter
adc
rolb
cld
pusha
js
popf
arpl
pushf
addl
ret
incb
pop
sub
paddsw
push
movsb
push
pop
mov
sbb
or
mov
incb
jge
sbb
mov
mov
out
popf
jb
push
ja
stc
adc
dec
js
int
adc
jle
pop
add
xchg
add
imul
aad
fldt
insb
movsl
subb
in
notb
stos
negb
cs
mov
mov
aaa
dec
sbb
mov
pop
outsl
scas
adc
xchg
fdivp
jbe
testl
lods
in
movsl
or
std
lret
in
mov
xor
cmc
out
test
aad
stos
out
lret
out
pinsrw
mov
push
inc
jno
inc
js
shrb
cltd
jl
jp
cmp
xchg
fs
sub
jnp
popf
mov
push
adcb
in
hlt
fildll
add
cmc
or
in
xor
jmp
mov
ja
mov
ss
dec
dec
clc
mov
bound
frstor
push
inc
mov
imul
inc
aad
das
inc
sub
xor
cmp
inc
ret
cmp
jbe
cmp
pop
pop
cmp
sub
dec
ficoml
jae
xchg
shlb
jge
and
js
es
out
pop
fidivs
and
push
out
pop
cltd
int3
popa
imulb
insl
test
aam
or
fimuls
ss
lret
sbb
nop
push
jl
mov
pop
push
dec
inc
dec
arpl
cmp
mov
xor
repnz
xor
xor
mov
mov
insb
jmp
add
ret
movsb
out
push
mov
bound
pop
xor
ljmp
ljmp
cmp
scas
adc
jb
shr
icebp
xchg
mov
sbb
add
cmpsb
ror
mov
jge
decb
pop
or
gs
outsl
rclb
and
into
bound
cmc
sahf
fwait
push
cli
mov
dec
pop
ja
leave
or
fwait
pop
iret
or
stc
jmp
fimuls
or
pushf
loop
dec
clc
or
push
clc
pop
movb
xor
adc
imul
xchg
dec
out
out
test
call
xlat
lods
shlb
fildll
pushf
mov
inc
sbb
pop
mov
push
sarl
sbb
push
popa
loopne
outsl
outsl
xlat
jne
das
push
out
push
cs
xor
aad
int3
or
shlb
filds
and
dec
push
fwait
popa
cmp
shll
idivb
movsb
nop
aaa
fiadds
mov
and
mov
push
inc
icebp
push
xor
cmp
mov
shl
dec
inc
cmc
test
push
sub
test
push
or
inc
push
and
aas
imul
xor
andb
mov
inc
push
push
mov
add
lret
adc
js
fs
ret
sub
xchg
push
cltd
movsb
int3
pop
sbb
test
jmp
jecxz
test
outsl
and
adc
pop
cmp
mov
push
aaa
loopne
jb
fs
shll
scas
das
cmpsl
inc
add
dec
dec
push
out
shl
push
sti
jb
loop
inc
lea
ret
out
pop
xor
sbb
negb
in
data16
push
fs
push
shrb
xchg
dec
mov
jo
insb
daa
addr16
bound
push
lds
dec
je
nop
xchg
jne
inc
adc
loope
sub
inc
inc
int
fisubl
stos
test
ljmp
push
outsb
outsl
orl
pop
je
push
mov
jae
cltd
fld
adc
and
ret
dec
nop
or
stos
inc
fnstsw
arpl
pop
clc
mov
mov
xor
shlb
subl
bound
xor
push
ss
popa
dec
inc
loop
in
pop
mov
std
pop
js
aam
push
xchg
adc
mov
push
int3
xlat
aaa
int3
mov
ljmp
loope
mov
push
inc
or
inc
inc
inc
mov
testb
ss
mov
xchg
mov
xor
jecxz
dec
and
pop
cmp
dec
sub
and
sub
xchg
dec
sahf
popf
clc
add
mov
inc
popf
jnp
cmc
cmp
sub
mov
addb
xorb
mov
fcmovu
movsb
xor
mov
fwait
test
cmp
inc
inc
add
xchg
jb
cmp
shll
pop
mov
mov
push
sbb
aas
pop
xchg
ret
subl
sbb
mov
push
pmulhuw
cmp
mov
fmul
lcall
lds
and
stos
or
aaa
and
repz
es
je
push
push
jnp
into
jne
jle
mov
inc
mov
push
mov
loope
fs
aad
mov
dec
and
sti
insb
xor
xchg
inc
dec
xor
fistl
dec
mov
es
add
int
adc
popa
adc
mov
roll
icebp
mov
mov
int
or
iret
mov
dec
or
dec
loope
ja
cmp
dec
or
fnstenv
addr16
ljmp
lea
cltd
mov
mov
repnz
arpl
daa
popa
insb
ss
faddl
adc
popa
sar
sub
jge
cmp
cwtl
popa
jg
xor
mov
xor
push
mov
xor
hlt
in
jnp
lea
shl
inc
call
mov
mov
mov
loop
std
sub
cmp
add
push
xchg
mov
cmp
bound
sarb
push
es
iret
dec
sbb
push
ljmp
ret
jbe
mov
jae
or
jle
pushf
add
sub
and
or
ret
mov
int3
sahf
js
int3
pop
pop
test
lahf
inc
adc
mov
arpl
test
out
sub
movsl
lcall
call
sub
into
je
test
fsubrs
jbe
rcl
inc
mov
push
rcll
ret
jne
lds
push
mov
xor
push
and
sub
je
scas
lahf
add
repnz
aam
xchg
lods
add
fistpll
pop
cltd
adc
pop
cmp
push
jg
pop
cwtl
dec
pushl
mov
sbb
out
repnz
fadds
sub
push
test
clc
mov
pop
movsl
shrl
aaa
adc
or
sub
iret
es
sbb
push
jmp
add
sbb
and
mov
mov
mov
sub
sub
orl
test
add
sahf
insb
mov
adc
xor
and
jp
cmp
adc
pushf
pushf
inc
adc
or
into
cmpsb
out
mov
push
xor
out
fisubs
sbb
mov
mov
sub
in
cmp
xchg
dec
sub
setg
movsb
dec
pop
aam
out
sub
repnz
mov
dec
movl
test
fs
fiadds
pop
and
push
cmp
push
cs
cld
cwtl
cltd
inc
repz
push
movsb
inc
push
bound
pop
lds
addr16
test
out
div
insb
loopne
leave
nop
cmp
dec
xchg
loop
mov
jae
dec
push
in
repnz
arpl
mov
xor
or
xchg
mov
cli
mov
inc
inc
into
dec
lds
test
xchg
mov
aad
add
getsec
adc
push
xor
mov
orb
push
into
jecxz
push
pop
popa
xor
xchg
dec
sub
dec
fcmovu
pmulhw
imul
call
mov
lods
xlat
daa
scas
popa
xchg
clc
jmp
divl
lock
jae
pop
pop
sahf
sti
cs
loope
popl
adc
mov
or
insb
push
repnz
notl
bound
mov
lahf
icebp
cmp
test
sub
xchg
jmp
push
cmp
scas
rorl
mov
adcb
das
cmp
cwtl
and
push
and
decl
jmp
sub
push
mov
aaa
sub
jmp
jmp
push
pusha
mov
push
sti
cltd
inc
les
dec
insb
xchg
sub
fwait
or
xor
bound
bound
pop
lahf
xchg
xlat
cwtl
test
in
bound
adcb
clc
add
je
fwait
out
or
xor
add
cmc
xchg
sub
sub
sti
arpl
gs
movsb
daa
and
into
loopne
mov
in
scas
addb
mov
jmp
gs
mov
cmp
jp
mov
mov
pop
in
aad
inc
idivb
dec
mov
pop
inc
movsl
pusha
fstpl
cmc
addb
push
sbb
pop
je
movsl
add
sti
rcrb
cmp
cmpsl
outsb
rolb
inc
enter
popa
mov
add
push
pop
testl
mov
or
cli
ljmp
push
stc
mov
mov
xchg
das
aam
sarb
in
ret
push
repnz
adc
mov
mov
push
pop
lods
outsl
fildll
xlat
push
push
jle
fwait
mov
xchg
mov
fldcw
xchg
push
jns
dec
stc
sbb
sbb
loopne
adc
inc
mov
push
pop
push
add
xchg
inc
fidivrl
pop
scas
jl
jns
cmp
mov
lock
mov
lock
ud0
mov
movsl
or
ret
add
add
pop
xlat
into
sub
cmp
or
in
mov
xchg
vmovhps
fdivp
fwait
jae
mov
push
xchg
sbb
sar
xlat
mov
adcb
in
rcrl
cmp
push
fimull
mov
in
add
push
jo
sub
push
sbb
sbb
std
or
cli
xchg
ret
cltd
or
xlat
xor
std
out
iret
jns
pushf
mov
mov
jns
lea
sub
ja
rcr
repz
push
push
dec
push
in
xor
xchg
sarl
sbb
out
lock
jecxz
mov
mov
push
in
fldcw
jp
sti
xlat
iret
sub
dec
clc
ss
sub
and
inc
pop
mov
das
arpl
sti
mov
fistpl
mov
clc
sarl
xchg
jns
jp
in
inc
loop
jg
stos
mov
mov
stc
into
mov
cwtl
inc
push
popf
subl
ret
pop
cli
jl
mov
pushf
imul
jne
repnz
pusha
jae
inc
xor
sbb
fldt
ret
mov
inc
jns
inc
lcall
mov
cmc
in
inc
shll
repz
xchg
dec
mov
inc
es
aas
pop
push
or
movsl
mov
insl
mov
adc
aam
mov
mov
xchg
cmp
dec
mov
jo
cmc
je
mov
jbe
jne
xchg
rol
pop
and
inc
or
cmpsl
mov
clc
ja
pop
push
mov
dec
xchg
mov
addr16
jg
xchg
pusha
mov
or
fucomp
bound
and
jmp
out
xor
loopne
leave
or
aas
outsl
inc
cmp
lret
scas
cmp
sti
sti
out
jns
pop
push
frstor
mov
daa
or
jmp
mov
fisubs
mov
in
jmp
pop
add
repnz
iret
jp
jbe
sub
daa
sarb
add
mov
sub
jl
xor
and
das
lahf
popf
or
lret
sub
ret
mov
sub
inc
fsubrs
test
popf
imul
adc
fs
iret
scas
mov
fnstsw
stc
cltd
imul
pop
in
cld
xor
in
dec
sub
cmp
pushf
and
jo
rcr
and
mov
and
dec
mov
mov
lret
cmp
nop
clc
scas
jmp
mov
pop
in
test
test
dec
cwtl
xchg
inc
and
cmp
xchg
outsl
mov
stos
inc
cmp
lcall
jecxz
sbb
sbb
mov
shlb
roll
jno
mov
jmp
xor
ret
push
jle
je
filds
les
sub
pop
cmc
inc
rorl
adc
dec
mov
add
in
jbe
imul
iret
sbb
mov
dec
push
cs
das
add
ds
and
inc
loopne
fldl
xchg
or
loop
cmp
leave
xor
dec
cmc
out
mov
scas
mov
jecxz
or
adc
pop
push
xchg
mov
insb
sbb
jmp
loop
mov
loopne
test
xlat
out
and
out
pusha
push
ljmp
xchg
pop
xchg
cli
mov
jo
jae
sahf
cwtl
mov
inc
mov
negb
loopne
dec
mov
mov
ret
fsubp
inc
sbb
jmp
mov
fwait
mov
push
push
fcomps
idivb
insb
or
fistpll
bound
and
pusha
dec
popa
dec
mov
in
mov
push
pop
fs
clc
cmp
jl
out
sub
sub
xor
xchg
faddl
xchg
js
inc
shr
mov
aad
push
push
fisttpl
mov
mov
adc
dec
or
push
arpl
lea
fidivl
ja
aad
push
mov
mov
int
fdivl
mov
inc
ror
xor
inc
test
je
xchg
mov
or
es
icebp
ds
jecxz
hlt
insb
popf
mov
mov
roll
mov
andb
subl
push
ss
aaa
cmp
xchg
push
lahf
int3
jb
pop
push
dec
sbbl
fst
push
ret
ja
mov
or
in
xchg
pop
inc
xor
jg
xchg
loop
mov
mov
jg
mov
adc
cmpsb
outsb
adc
aad
mov
inc
mov
scas
jne
adc
fisubrs
sbb
mov
xchg
fists
cmp
dec
add
mov
stc
mov
packuswb
or
dec
test
lds
cmpsl
xchg
ljmp
push
cs
mov
loope
inc
sbb
or
lock
aam
leave
test
ljmp
in
jmp
push
pushf
je,pt
push
inc
mov
nop
aaa
fsubl
xchg
sti
jne
pop
xchg
out
pop
sub
popf
addl
dec
incl
stc
cmp
gs
je
cmp
and
mov
sub
adc
mov
bnd
icebp
xor
ljmp
adc
in
xchg
pop
mov
xor
cli
cmp
push
xchg
cmpsl
adc
cld
cs
jge
jmp
dec
mov
push
pop
or
inc
sub
repz
loope
inc
push
add
and
imul
mov
aaa
push
addr16
lcall
lea
jno
test
or
arpl
sbb
or
push
sub
imul
test
aaa
jmp
jmp
sti
xorl
je
lods
lods
push
imul
dec
mov
mov
pop
int
xchg
je
push
push
jmp
in
mov
sti
ret
or
mov
mov
in
add
inc
gs
popf
jne
mov
clc
sub
or
es
mov
lea
ljmp
fisttpl
sub
or
lea
and
ljmp
lock
mov
jo
lahf
adc
pop
and
or
pop
call
mov
subl
movsb
inc
mov
pop
pop
ss
jmp
mov
lahf
add
mov
jno
test
out
shlb
jns
hlt
mov
xchg
dec
adc
lods
jbe
add
xlat
fcmovnu
decl
test
mov
pop
test
cmpsl
add
setbe
lahf
mov
add
cmpsl
mov
pop
ret
mov
jno
xchg
add
jecxz
loope
xlat
repnz
pop
xchg
in
out
nop
pop
popf
sbb
out
fwait
call
dec
leave
jne
dec
or
lcall
rclb
mov
gs
mov
loopne
push
js
cli
int
aas
rclb
mov
pop
dec
jnp
xchg
dec
insb
jmp
sub
aaa
push
adc
out
or
mov
pop
sbb
test
out
fwait
sub
and
xchg
in
mov
push
lahf
mov
addl
dec
ja
addr16
test
mov
out
dec
add
std
xlat
jle
jmp
sub
add
mov
inc
add
jl
cli
aas
adc
inc
call
sub
addr16
sarb
sub
sbb
mov
or
add
xchg
roll
add
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
rol
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
xlat
