sub
cmc
adc
leave
adc
or
mov
xchg
dec
xlat
pop
test
push
jecxz
sbb
or
mov
mov
gs
std
pusha
mov
movb
adc
movsl
je
mov
in
or
pop
rclb
or
push
mov
icebp
scas
sub
cmpsl
sbb
int
test
mov
rorl
fidivrs
aas
push
loop
push
mov
push
aam
mov
mov
fimuls
pop
mov
data16
pop
push
cwtl
loop
clc
cmp
popf
mov
pminub
out
fmull
jo
xor
xchg
filds
xchg
inc
pop
xchg
repnz
mov
inc
lret
lods
rol
push
inc
mov
fwait
xchg
cld
outsb
inc
movsb
aad
xor
popa
xchg
cwtl
sbb
les
cmp
mov
xor
jle
mov
mov
cmp
dec
orl
push
cmp
movsl
or
test
cli
xchg
push
mov
adc
and
sbb
jno
cli
outsl
sub
in
inc
fcoms
xlat
into
stos
int3
lea
fwait
mov
fisttpl
cli
jle
lods
inc
adc
adc
int3
ret
push
jle
int
jmp
and
jno
stos
xor
and
andb
xor
xchg
shll
cmp
mov
inc
inc
mov
mov
aaa
mov
add
call
sub
xor
in
cwtl
jle
jmp
mov
test
and
push
test
push
jp
imul
es
js
dec
nop
adc
fiaddl
outsb
cmpsl
dec
dec
stos
in
jmp
fcmove
or
into
xor
cld
add
mov
mov
cwtl
xchg
xchg
push
pop
or
popa
rcll
adc
xlat
scas
push
sub
and
push
icebp
inc
jge,pt
push
in
dec
pop
cmp
icebp
push
insb
mov
imul
sbb
jmp
rol
lahf
negb
sbb
test
sti
add
lock
inc
push
xchg
inc
fidivs
dec
ja
xchg
cmp
push
xor
enter
outsl
int
adc
jmp
and
mov
cltd
ja
pop
mov
mov
mull
stos
fcmovb
xor
cld
or
dec
pop
pop
shl
outsl
push
cmp
dec
xchg
in
icebp
inc
ret
lret
jmp
dec
or
push
bound
push
pop
pop
sbb
sub
jbe
int
sbb
jecxz
je
popa
sti
in
cmp
lret
in
jo
mov
fisttps
pop
pop
mov
sbbl
in
ljmp
into
nop
pop
lds
ds
iret
scas
jle
mov
fwait
scas
popa
lds
mov
test
push
cmp
sbb
mov
xchg
outsl
orb
int3
jae
inc
inc
pushf
add
jge
sbb
ss
iret
ja
mov
inc
pop
sub
mov
ljmp
aad
test
lret
shll
lds
xor
div
into
adc
mov
push
mov
scas
mov
inc
sahf
out
lds
fbld
imul
inc
testb
test
repz
aas
leave
dec
xor
jp
sub
notb
adc
les
lds
loopne
mov
int
inc
mov
ss
sbbb
adc
dec
in
pop
inc
wrmsr
and
addr16
aad
aas
hlt
xchg
inc
xchg
mov
adc
incb
inc
jns
jbe
pop
pop
shr
add
xchg
jae
dec
into
mov
pop
cmp
fisubs
adc
jecxz
nop
cmpsl
lahf
hlt
push
xor
lods
jl
mov
jb
or
insl
pop
les
shrl
sbbl
loop
inc
xchg
scas
push
daa
push
jnp
cli
jg
call
adc
lcall
inc
add
dec
adc
test
inc
into
xchg
fcompl
dec
je
cmpsl
jl
in
mov
jns
xor
jg
cmp
insb
jge
into
rclb
hlt
adc
and
lods
dec
inc
add
movsl
xor
hlt
push
daa
sub
jle
pop
mov
mov
cmc
mov
iret
shl
xorb
cmp
push
cltd
jae
mov
adc
push
in
jbe
inc
jno
daa
cwtl
in
adc
or
into
fists
ds
cmp
cmp
int
rorb
sarl
jno
push
faddp
or
in
cmpsb
jb
aad
dec
xchg
inc
out
fistl
sub
adc
int
es
mov
mov
jmp
orl
push
pop
xlat
sub
xchg
adc
fdivrl
pop
push
jne
mov
sub
inc
xor
fcompl
daa
scas
add
mov
ds
push
add
dec
negl
test
std
orl
xchg
fsts
int3
and
fldcw
cmp
xchg
cmp
lcall
sub
jo
aam
out
mov
xchg
inc
fldl
xorl
mov
push
xchg
mov
and
sbb
fcom
mov
jecxz
fadds
shll
sub
add
pushf
cmp
pop
mov
mov
cmpl
ja
adc
lods
arpl
adc
cltd
push
adc
rolb
shlb
popa
bound
push
outsl
fsts
mov
xchg
pop
and
sub
lret
pop
sub
aas
jmp
sub
sub
inc
not
mov
mov
adc
add
adc
fcmovbe
clc
iret
cwtl
pusha
addl
mov
js
mov
cli
daa
ds
inc
scas
fbld
ja
pop
mov
and
icebp
pop
movsl
push
movsl
dec
arpl
jnp
xor
imull
jmp
push
pop
popa
pop
mov
jne
cld
int
mov
push
icebp
dec
dec
jne
adc
mov
pop
test
dec
inc
ret
push
xor
rcrl
sbb
arpl
pop
ror
jne
mov
and
rcr
sub
xchg
push
jns
xchg
shlb
adc
dec
mov
leave
in
int
pop
ss
imul
jno
push
mov
sub
cwtl
out
xchg
rcrb
in
and
add
or
and
fcmovnbe
out
cs
push
test
int
push
jp
or
mov
pop
push
gs
dec
aaa
call
lret
out
xor
xchg
adc
cmpsl
mov
dec
sub
push
fnop
rorl
inc
outsl
aas
scas
popf
mov
mov
mov
xorb
lret
orb
stos
dec
cltd
dec
repz
mov
xorl
frstor
sahf
inc
pop
clc
ja
lret
data16
and
add
imull
sarl
jo
jle
nop
push
add
dec
out
jl
fwait
push
mov
lahf
push
adc
xor
mov
pop
dec
or
cli
pop
std
jne
or
cmp
inc
cwtl
pop
imul
jp
jl
jmp
lcall
rolb
in
aas
insl
and
xor
loope
lahf
xchg
mov
push
and
dec
cltd
sub
push
sub
push
sbb
in
dec
lods
test
std
fs
and
lahf
xchg
and
stc
cmp
inc
sub
push
sub
mov
aam
lahf
adc
lods
js
popf
jl
movsl
cmp
test
and
arpl
sar
inc
pushf
adc
xor
cmp
or
int
in
cld
jns
jmp
add
cmp
jb
xor
insl
inc
cmp
arpl
scas
mov
cmp
ror
push
sub
mov
mov
and
sbb
cld
fimull
inc
mov
inc
lcall
xor
xchg
sbb
inc
popa
fsubl
add
pop
int3
xchg
pop
push
in
aaa
cmpl
pop
inc
adc
repz
mov
sarb
cmpl
pop
dec
insl
mov
jne
push
push
or
subb
or
out
lret
movsl
ja
xchg
push
out
xor
push
outsb
je
mov
lock
fstpt
aaa
shll
jo
sub
rcrb
or
lret
jp
neg
mov
enter
movsl
push
cmp
mov
insl
inc
or
inc
jl
or
lods
xchg
mov
int3
outsl
in
pop
ss
sbb
ds
pushf
insb
fprem
sub
loope
push
loopne
push
jns
adc
stos
jg
in
scas
sti
int3
in
sub
dec
push
adc
sbb
aas
mov
or
sbb
adc
test
xor
mov
jmp
into
dec
push
xor
mov
lret
fxch
pop
fwait
shlb
pop
pop
dec
push
addr16
fs
push
push
pop
shrl
dec
loopne
jae
or
arpl
jg
mov
mov
and
testl
add
xchg
cmp
add
adc
pop
cltd
std
leave
notl
lcall
sbb
xor
push
mov
mov
push
sbb
je
aas
xor
loope
xchg
orl
fyl2xp1
lock
cwtl
test
bound
lea
mov
push
xchg
iret
in
sbb
into
inc
cmp
pop
adcb
adcl
sti
adc
mov
mov
jge
mov
jmp
addl
rcrl
cwtl
inc
int3
push
rolb
mov
add
js
inc
cltd
dec
pop
cwtl
push
ffreep
jbe
sbb
adc
mov
sbb
or
insl
mov
inc
sub
sbb
mov
sbb
int3
push
test
out
push
in
push
test
fbld
call
jne
add
fwait
jecxz
movsl
test
je
fisttpll
movsb
and
cmc
orb
or
shlb
sub
mov
jno
pop
je
pop
mov
sarl
add
lret
sarb
cmp
jbe
add
cmp
cs
int
mov
mov
xchg
sbb
jp
jp
xchg
sub
filds
imul
and
sub
add
shr
movsl
movsl
daa
clc
call
dec
aaa
sbb
dec
leave
mov
loopne
mov
in
mov
xchg
pop
inc
negb
or
dec
ljmp
xchg
dec
add
push
lods
push
cmp
push
pusha
jecxz
lds
push
push
add
imull
and
adc
add
mov
mov
sub
testl
and
cs
std
xor
int3
jp
cmpsb
jmp
add
mov
adc
mov
repz
cltd
cmp
ds
das
aaa
add
dec
or
lods
push
fbld
push
cli
mov
xchg
mov
std
push
adc
popa
adc
pop
jns
xchg
loopne
adc
cwtl
xchg
gs
out
adc
push
push
les
pop
sbb
dec
add
lds
stc
mov
lods
sub
stos
icebp
jge
jnp
push
mov
dec
adc
js
xchg
pop
ljmp
mov
dec
mov
mov
loopne
sbb
fmuls
push
push
cli
mov
iret
je
in
repz
pop
inc
mov
call
mov
inc
leave
push
xchg
lcall
test
leave
out
in
push
mov
and
repz
lret
add
jle
les
stc
loopne
cmp
mov
mov
inc
jle
add
pushf
push
out
inc
mov
inc
stos
ds
test
sbb
cmp
ja
xor
jbe
push
push
push
push
mov
scas
mov
dec
adc
fwait
cmpsb
leave
lret
in
inc
push
xlat
xchg
std
mov
iret
pop
loope
jge
fdivl
adc
xchg
mov
jmp
iret
inc
mov
loope
lret
je
sub
cmp
push
imul
xor
adc
test
jbe
rcrb
and
inc
std
rolb
call
icebp
jmp
jl
int3
xadd
mov
jns
pushf
scas
out
fsts
cs
jne
mov
daa
cltd
mov
insl
ja
jp
imul
imul
jecxz
adc
cmpsb
push
or
fdivs
jns
push
mov
dec
push
loop
movsl
mov
or
mov
xor
pop
int3
mov
cmp
loop
fdivp
mov
dec
inc
fdivl
sub
arpl
fisubl
sarl
or
test
push
sbb
and
dec
adc
pusha
popf
pop
pop
sbb
inc
mov
cmpsb
add
stos
fsub
mov
sbb
ret
mov
loope
and
ficoms
mov
cmp
fs
sarl
or
insb
loope
fisubrl
jnp
jb
xchg
js
ja
pushf
aad
sbb
pop
mov
mov
arpl
xor
stos
xchg
add
and
dec
pop
sbb
sbb
hlt
addr16
sbb
or
dec
mov
lahf
mov
push
ljmp
xchg
mov
rcll
cmpsl
push
xlat
mov
test
xor
inc
mov
dec
aaa
jno
in
mov
pusha
pop
adc
xlat
and
scas
xchg
lock
fldl2e
sti
and
mov
and
js
int3
xchg
fistl
inc
xchg
xor
iret
sar
cwtl
cltd
in
pop
push
out
test
xchg
mov
xchg
mov
or
in
ds
ds
out
and
mov
rcrb
mov
shll
cmc
dec
sti
or
addb
in
ljmp
push
sahf
fnstenv
ds
cmpb
mov
sbb
lock
mov
popa
sarl
aad
cmpsb
stos
out
sub
sahf
out
push
push
imul
fldln2
mov
inc
mov
inc
mov
mov
test
mov
inc
clc
adc
xlat
movsb
outsb
push
pushf
mov
cmp
mov
inc
lea
lea
sbb
rcrl
ljmp
scas
dec
xchg
enter
dec
sub
cmp
mov
inc
inc
cld
iret
xor
add
pop
out
js
test
mov
xchg
in
movsb
mov
jp
xor
sbb
sbb
or
adc
push
shl
add
in
stos
mov
aad
pop
lret
bound
pop
or
int
imul
lods
rolb
lds
mov
lcall
jo
push
inc
jae
push
inc
test
xor
out
add
hlt
out
ja
and
push
push
pop
int
cs
test
lock
gs
nop
loop
int3
cmpsl
loopne
lret
or
out
dec
mov
sbb
mov
int3
mov
dec
jns
movsl
scas
mov
or
arpl
push
or
test
cmpsb
shlb
and
movq
mov
pop
loopne
sbb
roll
mov
xor
mov
sub
test
xlat
loop
rcr
int
cli
mov
or
jl
mov
adc
jl
fwait
int
imul
sahf
pop
mov
inc
pop
mov
divl
add
mov
jbe
cmpsb
and
shll
pop
nop
xchg
and
xor
or
sub
mov
mov
outsl
sbb
xor
loop
sbb
clc
push
addr16
cmp
je
dec
xor
aaa
popf
lret
shl
mov
mov
hlt
cmpsl
cmp
ja
fsub
icebp
mov
lcall
and
mov
mov
xchg
pop
mov
and
cmc
in
or
xorl
in
sub
or
mulb
or
imul
movsl
mov
mov
loop
mov
xchg
movsl
enter
idiv
lahf
adc
sbb
fisubl
inc
ret
push
imul
lret
add
inc
push
mov
enter
repz
sub
pop
and
repnz
daa
mov
xchg
adc
add
pop
inc
shll
mov
jp
pop
sub
stos
inc
ret
cmp
imul
repz
mov
and
subl
fidivrl
cmpsb
lea
xlat
mov
add
je
lds
sbb
stos
adc
pop
pop
xchg
push
jo
in
push
pop
dec
repnz
or
das
xchg
ds
idiv
cmp
outsb
out
dec
xchg
and
sbb
adc
pop
pop
repnz
out
xor
cli
lds
insl
into
hlt
fs
inc
xor
ret
mov
out
mov
outsb
es
inc
std
cmp
bound
fiadds
les
adc
xor
sub
jb
mov
add
std
imul
xor
jb
add
adc
clc
es
and
push
jbe
push
jnp
insb
inc
cmp
inc
jl
js
sbb
dec
aam
push
mov
mov
outsb
punpcklwd
lret
mov
push
jmp
fsubl
movsl
out
lret
cmpsl
mov
ret
dec
fs
stc
sub
add
jle
inc
stos
mov
xchg
xchg
adc
and
dec
mov
test
inc
stos
hlt
ret
sub
xlat
mov
stos
leave
inc
test
adc
and
cli
lea
cli
and
add
jmp
mov
jmp
or
outsl
js
mov
mov
adc
lret
lret
xor
add
sub
or
cmp
mov
shrb
mov
mov
mov
and
pushl
aad
pop
insl
jl
lods
lcall
push
nop
cltd
ficompl
bound
scas
sub
cmc
mov
or
scas
jmp
lods
inc
adc
addr16
xlat
adc
rorb
dec
inc
mov
mov
sbb
cmc
inc
xchg
jp
call
lret
and
dec
or
enter
dec
es
push
mov
lods
adc
dec
stos
rorb
cmc
fistps
or
insl
cmp
test
fdivs
out
imul
jle
jmp
hlt
insl
mov
adc
test
imul
divl
fdivrl
mov
xchg
or
ja
lds
xchg
repz
mov
dec
push
data16
sbb
dec
cs
cmp
mov
movl
iret
dec
mov
jl
cltd
shll
xchg
and
push
inc
dec
push
into
addb
pop
sub
jmp
jmp
dec
push
jge
fldcw
jl
enter
dec
imul
bound
jmp
add
or
lods
adc
stos
and
pop
sub
int3
out
mov
arpl
repz
cltd
fcompl
jp
int
in
mov
in
shl
xchg
lods
outsb
push
sbb
cwtl
sti
xchg
in
add
dec
mov
pusha
mov
loop
cmpsb
cmp
jl
xchg
mov
mov
aaa
dec
into
add
xchg
or
mov
rorb
mov
adc
test
or
test
and
and
fidivrs
dec
in
hlt
int3
inc
mov
icebp
push
in
out
fwait
iret
flds
fadds
xchg
xchg
dec
jmp
xor
stos
cmp
lahf
loop
sub
and
scas
mov
sbb
sbb
fildl
lods
mov
fidivrl
stos
push
std
mov
outsb
pusha
out
cmpsl
cmp
mov
lods
jb
cmpsl
imul
and
push
iret
imul
xchg
add
add
mov
push
icebp
jb
arpl
xor
sbb
xchg
filds
fucom
loopne
mov
stc
test
movsb
test
jle
nop
sahf
xchg
test
in
jbe
fsubr
add
sub
outsb
lret
dec
test
mov
repz
insl
test
insb
xchg
daa
lahf
dec
jl
fwait
sbb
into
insl
mov
inc
mov
inc
mov
sbb
xor
sbb
xchg
inc
sbb
cld
pop
ret
jp
xor
jnp
lahf
push
mov
icebp
cmp
mov
mov
jno
push
call
jl
pop
pusha
sub
xor
sarl
sbbl
push
sbb
daa
jle
sbb
gs
sub
hlt
sti
dec
add
mov
dec
or
leave
xchg
cmp
pusha
inc
test
mov
ss
dec
sbb
pushf
push
sbb
cmp
rcrl
jae
int
movsb
adc
mov
or
aad
rorb
rolb
add
xor
pop
clc
push
push
push
push
lea
push
push
push
push
push
mov
mov
clc
pop
neg
xor
push
pop
mov
push
neg
xor
clc
pop
mov
push
mov
neg
not
cld
pop
mov
neg
push
push
neg
stc
pop
mov
pop
not
mov
xchg
push
push
neg
cmc
pop
not
neg
pop
neg
push
neg
neg
stc
pop
not
xor
push
neg
not
imul
pop
adc
mov
push
clc
pop
not
neg
neg
xadd
not
neg
cmp
lea
push
cld
pop
not
not
mov
xchg
push
pop
not
neg
clc
or
or
neg
and
or
sub
sbb
sbb
or
not
neg
jmp
jmp
call
or
push
xor
pop
neg
push
xor
pop
adc
add
add
cmp
neg
push
sbb
push
pop
pop
sbb
cmp
add
and
push
push
neg
cmc
pop
neg
pop
jne
adc
sbb
cld
mov
not
rol
xor
nop
pop
jno
add
not
cld
sbb
stc
not
push
add
mov
pop
push
or
not
nop
pop
js
not
neg
or
jns
cmp
and
nop
xor
push
lea
neg
pop
nop
sbb
cmp
sbb
push
cld
pop
adc
shr
push
mov
pop
ror
adc
push
cld
pop
neg
rol
and
add
not
push
neg
pop
lea
sub
and
and
rcr
neg
xor
bt
not
push
add
mov
pop
or
xor
jb
push
nop
pop
shl
add
cmp
push
rol
pop
or
push
not
pop
rcr
push
or
neg
pop
push
pop
push
pop
shl
cmp
rol
shr
ror
adc
push
or
pop
or
add
shl
mov
ror
call
mov
loop
rol
push
rcr
shl
neg
pop
cmp
sbb
ror
push
mov
rcr
push
push
pop
pop
ror
rcl
rcr
shl
lea
clc
pop
pop
mov
sbb
rcl
push
neg
pop
cld
mov
shr
test
je
push
push
pop
cld
pop
push
and
nop
pop
stc
push
push
stc
pop
pop
push
rcl
push
push
pop
pop
pop
push
ror
pop
push
shl
ror
pop
shl
mov
rcl
rcr
mov
nop
push
add
pop
mov
push
push
pop
pop
push
push
cmc
pop
nop
pop
push
add
pop
call
orb
lea
lea
push
neg
shr
pop
shl
push
mov
lea
lea
lea
rcl
rol
pop
pop
call
cmp
add
add
lea
bts
push
mov
lea
lea
lea
cmp
lea
lea
lea
push
pop
stc
pop
pop
lea
lea
lea
cmp
lea
sbb
lea
lea
shl
add
or
lea
and
lea
push
mov
xor
pop
push
sbb
push
pop
pop
push
sbb
test
pop
lea
mov
sbb
mov
mov
lea
sbb
mov
lea
adc
sbb
adc
mov
xor
push
pop
sub
adc
mov
add
cmp
mov
lea
mov
cld
push
mov
push
xchg
movsl
xchg
mov
pop
and
mov
mov
lea
lea
push
nop
pop
mov
mov
adc
mov
add
push
lea
nop
pop
push
and
movswl
pop
call
pop
mov
lea
mov
and
mov
cmc
push
mov
push
mov
cmp
clc
pop
pop
pop
push
rol
pop
push
mov
pop
call
nop
mov
lea
lea
push
mov
push
pop
pop
pop
lea
lea
lea
lea
lea
lea
lea
mov
lea
sbb
lea
rcl
lea
lea
rol
mov
lea
mov
lea
mov
mov
mov
dec
jne
lea
lea
lea
rcl
lea
lea
lea
lea
cmovge
mov
lea
lea
push
test
pop
push
stc
mov
pop
push
mov
test
mov
cld
pop
push
xor
pop
push
mov
mov
pop
push
cmp
pop
push
lea
push
pop
pop
push
lea
xor
pop
push
cmc
pop
push
neg
cld
pop
call
cmp
add
add
add
add
add
add
shl
mov
cld
push
mov
mov
lea
lea
lea
lea
mov
cld
pop
pop
call
decb
add
add
add
jae
push
mov
lea
stc
pop
pop
lea
not
lea
lea
lea
lea
lea
lea
neg
neg
lea
lea
lea
not
mov
lea
lea
mov
lea
lea
lea
lea
lea
lea
lea
lea
lea
mov
xor
je
neg
lea
lea
lea
lea
lea
neg
lea
mov
lea
lea
lea
mov
neg
lea
lea
lea
lea
lea
push
neg
pop
neg
lea
lea
not
sbb
icebp
sbb
das
pop
or
scas
stos
and
cmp
xor
mov
dec
jmp
add
adc
push
loope
mov
loope
pop
xor
out
jle
aam
push
mov
and
arpl
jnp
test
into
lock
int3
shll
jnp
sbb
and
fcmovne
pop
or
pop
inc
mov
fwait
loope
and
rorl
sub
mov
dec
inc
jae
out
rclb
fisubs
mov
sarl
add
inc
jno
repnz
stos
sub
sbb
sbb
mov
xchg
arpl
mov
out
jge
pushl
jmp
arpl
xchg
push
mov
mov
stc
dec
xchg
test
and
xor
mov
pushf
call
push
adc
sahf
adc
inc
lcall
movsb
int3
jbe
pop
into
test
sahf
das
and
push
out
cmpsb
stc
xlat
mov
push
add
inc
jno
xchg
add
adc
insb
jp
push
pop
xor
push
arpl
mov
andb
cld
xor
les
int
leave
mov
shrb
cmpsb
jo
lcall
inc
insb
fcmove
or
dec
pushf
fidivrs
mov
cmp
test
mov
in
stos
les
mov
cmp
xor
add
mov
je
sub
dec
push
and
bound
stos
and
push
ja
in
ss
mov
pop
ret
jmp
xchg
push
push
arpl
test
loope
mov
adc
mov
xlat
jecxz
inc
pop
push
and
aaa
roll
xchg
daa
xlat
mov
hlt
mov
xor
and
loop
rcr
movsl
inc
inc
push
jbe
bnd
lock
inc
lock
nop
mov
lahf
pop
test
dec
lea
cld
hlt
xor
lods
push
lcall
push
sarl
xchg
fbstp
dec
ds
lret
mov
out
adc
bound
mov
mov
push
std
mov
adc
in
adc
ja
loopne
ret
lock
pop
jp
out
dec
enter
push
rcrl
rorl
mov
incb
scas
arpl
or
xor
in
data16
mov
movsl
cmp
inc
insb
in
xor
pop
sbb
leave
pop
inc
outsb
mov
jne
pop
xchg
inc
dec
and
mov
mov
in
push
or
mov
in
inc
xchg
cmpsl
xchg
les
fdivl
int3
and
adc
sbb
dec
push
fidivs
imul
pop
loope
rclb
js
and
out
inc
push
jle
pcmpgtw
iret
lock
lahf
dec
jp
adcb
push
not
jbe
imul
frstor
sub
lods
add
stos
lea
sbb
adc
lock
loopne
fwait
out
sub
cltd
das
adc
fistpll
stos
les
jp
fldt
push
mov
js
jbe
out
mov
repnz
sbb
mov
clc
lret
add
xchg
adc
mov
lcall
mov
out
xlat
xchg
inc
and
adc
lods
adc
test
mov
push
inc
mov
lds
push
xchg
xor
and
mov
xchg
arpl
dec
dec
xlat
xor
mov
mov
mov
adc
test
push
adc
ljmp
mov
mov
imul
sub
fcomip
fdivs
xchg
or
adc
movsb
andl
ds
inc
mov
ja
and
add
add
int3
dec
add
lods
lea
movsb
aas
cs
inc
jno
cmpsb
mov
mov
aas
mov
push
js
cmp
shl
int
ds
cltd
lods
int
pop
mov
and
or
sbb
fdivrl
jo
arpl
addr16
dec
aas
aaa
jl
lods
sbb
adc
push
rolb
insl
bound
jb
mov
stc
mov
xchg
cltd
ss
mov
jg
mov
jb
jle
lret
cmp
lds
cwtl
setg
inc
inc
les
pop
cmp
stos
adc
jge
or
xchg
jp
loop
xchg
push
sub
pop
mov
std
dec
and
je
sub
cmpsl
shrl
jl
push
cmp
mov
mov
arpl
and
and
lods
int
dec
aam
stos
cmpsl
mov
sbb
pop
stc
adc
adc
dec
or
fcoml
xchg
sbb
xchg
cli
mov
push
dec
movsb
testl
fucom
adc
loop
jb
jne
enter
sahf
mov
fcmovnu
jns
xor
andb
mov
stc
push
pop
in
imul
pop
shl
sbb
cli
out
in
scas
pop
cmpsl
fmull
cltd
cltd
repnz
mov
ret
jno
add
aad
inc
fwait
mov
pop
cltd
pop
jmp
xchg
icebp
add
inc
addr16
mov
push
xchg
scas
in
out
mov
xor
idivl
testl
or
data16
movsl
jne
scas
pop
sbb
aad
adc
mov
std
ret
aas
test
mul
xchg
and
or
jmp
icebp
cmpl
or
gs
inc
fcoms
jno
add
xor
in
mov
lcall
js
out
push
fstl
outsl
mulb
cmpsl
popa
or
icebp
jg
and
cmp
mov
mov
and
sub
popf
or
test
mov
jo
sub
push
pop
adc
arpl
add
addr16
push
lcall
dec
mov
cmpsb
and
and
cmpsl
push
mov
je
aaa
lods
adc
jns
push
dec
insl
lods
pop
push
jno
push
sahf
mov
lock
data16
push
xor
scas
jb
aas
cwtl
cmpl
pop
pop
push
xor
aaa
hlt
dec
xor
aad
rclb
sub
cmp
cmpl
or
cmp
push
stos
shl
insl
loop
movsb
add
jmp
leave
mov
and
sbb
je
add
icebp
or
loopne
jmp
cld
loope
rcrb
sbb
mov
or
mov
das
adc
ret
mov
xchg
xchg
fiadds
je
pop
pop
dec
lret
jo
inc
cli
add
sub
mov
cmpsb
notb
test
lcall
dec
mov
jno
mov
jmp
fadds
xchg
adc
add
xor
mov
mov
mov
pop
or
dec
scas
and
xchg
and
lcall
ficompl
dec
test
xchg
push
nop
pop
addr16
loope
ds
mov
ret
xor
and
adcb
in
sbb
pop
nop
sbb
shl
dec
shlb
lea
push
pop
scas
out
les
mov
cltd
es
jg
cmp
push
fistps
pop
inc
stos
enter
inc
int
dec
das
xor
mov
pusha
inc
mov
mov
sbb
or
in
int3
sbbl
mov
inc
mov
in
test
jmp
out
gs
inc
inc
cmpsl
shl
cwtl
je
add
xchg
xor
jae
adc
repnz
xor
mov
dec
fcoms
add
inc
jp
cmp
xchg
lock
rolb
ss
mov
in
lods
jg
xchg
mov
xor
sub
je
ret
push
or
sub
bound
push
add
push
fwait
loop
mov
loopne
jmp
fs
stos
outsb
das
leave
lcall
adc
repz
sub
jecxz
sub
dec
jns
leave
dec
and
fildll
shr
aas
jnp
jb
pop
out
movsl
mov
sub
pop
ret
ret
ljmp
movsb
idiv
jbe
das
xor
out
lock
jl
cld
push
inc
xchg
js
add
aam
and
and
mov
insl
cmpsb
scas
push
sbb
mov
outsl
cmp
or
mov
xlat
nop
inc
lea
clc
movsl
icebp
shr
push
xor
adcl
sbb
adcl
xor
out
cmp
dec
or
xchg
scas
test
icebp
xchg
sbb
data16
mov
pop
sub
mov
pop
push
je
in
pop
cmpsl
xchg
mov
fwait
mov
iret
out
imul
sub
jmp
and
dec
sbb
or
int3
shrl
mov
cmp
cwtl
inc
in
mov
xchg
adc
sbb
jmp
xor
pop
ret
sbb
push
imul
dec
pop
dec
push
adc
and
push
add
mov
pop
push
mov
pop
mov
leave
cmp
pop
mov
xchg
add
loop
xchg
pushf
xlat
mov
enterw
mov
jae
cmc
mov
mov
mov
int3
fbstp
and
ss
add
js
iret
hlt
push
pop
test
xchg
push
push
mov
mov
movsb
int3
push
imul
scas
jnp
or
push
jmp
mov
dec
xor
pop
imul
dec
xchg
cltd
insl
orl
adc
cs
xor
inc
cwtl
js
cli
pop
pop
std
xchg
shlb
out
stc
jge
jle
sub
outsl
dec
xor
xlat
in
js
or
arpl
dec
cs
faddl
sahf
jmp
aad
insb
mov
xor
leave
sub
mov
inc
shrl
insb
jbe
cmp
pop
mov
and
xor
mov
push
cmp
aad
push
gs
inc
std
and
sbb
sbb
jmp
sub
iret
pop
push
cltd
stc
mov
lahf
rorb
sarb
xor
into
mov
in
xor
pop
mov
lret
dec
aas
push
sub
rcll
aam
ljmp
jno,pt
mov
xchg
outsb
data16
dec
jne
xchg
fsubr
aam
jecxz
cli
imul
scas
adc
incb
iret
push
les
mov
pop
bound
cs
outsb
and
cmp
sti
cmp
scas
xchg
or
jg
leave
in
push
in
scas
mov
mov
add
xchg
loopne
and
dec
sbb
cmp
out
cmp
lret
sahf
pop
xchg
cmp
mov
xor
xchg
and
push
xor
pop
repz
shlb
push
mov
cwtl
ror
rcl
xor
into
mov
dec
jecxz
loop
data16
cli
push
sti
imul
and
dec
cmp
sub
andb
pop
push
push
jecxz
adcl
ja
jbe
lcall
lahf
fisttpll
jmp
add
fs
mov
scas
adc
push
mov
leave
cmpxchg
das
adc
and
push
add
jmp
xor
xchg
dec
fbld
imul
xchg
push
dec
outsl
fiadds
xchg
roll
outsl
out
inc
or
cmp
mov
pop
jae
inc
mov
inc
jl,pt
loopne
aaa
mov
cmp
push
int
loopne
clc
inc
cmp
popf
or
loope
out
in
inc
pop
mov
inc
adcb
arpl
mov
inc
or
inc
notb
lret
fnsave
mov
jbe
mov
push
lcall
add
pushf
out
mov
pop
inc
outsb
int3
pop
mov
out
aas
add
mov
aas
ret
dec
xchg
sub
jg
or
jb
into
insl
mov
jmp
add
cwtl
enter
mov
sti
or
lcall
and
or
sbb
mov
or
dec
add
pop
scas
cwtl
ret
cmp
sbb
jle
mov
cmpsl
push
aad
ds
push
mul
sbb
fcmovne
int3
subl
lds
xlat
xchg
or
and
inc
mov
add
clc
cld
fimuls
daa
xchg
xchg
cmp
pop
mov
cli
int3
xor
mull
pop
clc
popa
xchg
jns
and
pop
ja
and
xchg
or
adc
jne
rcrb
lods
add
decb
nop
inc
sub
sub
dec
cmpsb
mov
fptan
push
sbb
mov
bound
adc
loop
push
xchg
jo
mov
push
mov
inc
imul
in
cld
mov
outsl
mov
dec
add
repz
lret
mov
inc
push
sbb
or
fnstsw
or
in
pop
subb
xchg
lret
int
lock
fstpt
pop
mov
xor
mov
pop
addl
mov
sub
mov
push
and
test
pop
or
dec
out
mov
and
in
fwait
ljmp
sarl
and
insb
cmp
cmp
ret
negl
cwtl
mov
mov
push
ret
enter
ljmp
rcrb
ds
cmpsl
imul
aas
cs
or
mov
sti
dec
xor
jnp
jnp
repz
enter
lds
jnp
pop
loop
mov
mov
jmp
mov
mov
cmp
mov
or
test
and
jp
les
lret
iret
fsubp
inc
mov
adc
push
cmp
cwtl
jbe
rorl
aam
jl
mov
jno
adc
push
rcrl
add
pop
ja
fcompl
sub
pop
rcrb
test
sbb
sub
das
inc
outsb
xchg
ja
cmp
cmp
jne
fprem1
ret
xchg
data16
add
add
testl
es
adc
or
pop
testl
pushf
lahf
inc
sbb
cmp
lea
push
mov
mov
movsl
adc
xor
pop
mov
mov
pslld
mov
iret
cwtl
cmpb
mov
jo
push
adcl
cmp
out
sbb
jle
cmpsb
jo
pop
xor
js
pop
mov
xor
and
cmp
mov
lcall
js
jne
pop
mov
pop
lds
xchg
fdivl
inc
cmp
sbb
lahf
dec
pop
xor
outsl
or
pusha
mov
adc
dec
mov
sbb
leave
inc
xor
dec
lahf
dec
sbb
clc
jle
fisttpll
sbb
out
cs
mov
xchg
mov
mov
js
ljmp
dec
push
dec
loopne
or
enter
inc
mov
xor
aam
jecxz
pop
mov
mov
and
inc
cwtl
outsl
pop
vmovlps
gs
pop
pushf
xor
inc
roll
into
xchg
in
mov
and
push
aam
add
pop
push
lret
xor
mov
ja
loop
aad
mov
cwtl
fs
mov
adc
lds
fldcw
int
arpl
xchg
pop
movsb
pop
ficomps
inc
mov
cmpsl
test
ds
sti
pop
inc
rorl
lods
add
adc
dec
js
mov
repz
cmp
add
xor
mov
or
push
mov
test
dec
push
sbb
fwait
mov
sbb
xlat
sub
cwtl
lret
xor
iret
pop
xchg
lcall
lds
fsubrl
xor
gs
je
movsl
lss
clc
stc
add
mov
inc
dec
repz
or
adc
repnz
js
mov
push
pop
mov
inc
push
je
pop
push
repz
dec
stos
cmpsb
sbb
jo
fstps
mov
leave
pop
push
stc
mov
rorb
nop
push
lahf
stos
xchg
mov
xor
imul
aas
pop
sub
fsts
mov
loopne
mov
addr16
mov
cmp
cmp
es
jmp
pop
clc
adc
lods
mov
cltd
pusha
sub
jno
mov
or
std
mov
pop
xor
fcomp
jb
sbb
and
fwait
mov
pop
jb
or
not
jecxz
sbb
push
mov
or
cmp
add
lock
pop
iret
adc
mov
pop
mov
mov
mov
mov
sti
inc
push
cld
stc
dec
das
outsl
imul
aas
xchg
mov
daa
std
pop
mov
test
mov
cld
loopne
daa
sub
hlt
jmp
dec
cwtl
loope
ja
loop
out
xlat
out
out
ds
or
push
cmp
inc
iret
gs
jo
fwait
add
mov
dec
rorl
insl
dec
sahf
lds
sub
insl
and
adc
push
mov
adc
sbb
lods
lods
jmp
ret
inc
mov
inc
rol
fcomps
xor
out
pop
dec
mov
fdiv
push
sbb
jnp
push
push
imul
pop
repz
or
aam
fisubl
adc
mov
jnp
clc
sub
subl
add
inc
dec
push
add
addr16
push
push
mov
cmp
cli
int
inc
jns
fdivrl
subl
adc
test
xchg
pop
shr
out
mov
and
lods
pop
mov
cltd
std
aam
push
jecxz
aam
fildl
ja
addr16
dec
cmp
sub
sub
sub
mov
pop
ds
and
test
xor
pop
adcl
ljmp
xchg
pop
push
jl
lods
repz
sbb
mov
fadds
ss
enter
data16
insl
pop
stc
scas
cli
mov
dec
xchg
hlt
and
xor
fs
dec
aas
cmpsl
jg
sbb
je
lods
and
push
movsb
scas
jmp
add
mov
push
sbb
lcall
out
movsl
xchg
stc
xor
and
int3
inc
cmp
ljmp
lods
into
pop
rcll
insb
outsb
or
das
mov
movsb
lods
das
pop
clc
rcr
repnz
sub
bound
je
adc
daa
inc
jns
out
push
push
jne
lods
js
cmp
movb
adc
cli
and
cltd
lret
cmp
fnstsw
mov
or
cli
mov
pop
add
dec
pusha
rorl
and
sbb
outsb
into
push
stos
push
xchg
mov
out
mov
push
or
rorb
out
js
dec
xchg
add
inc
movb
mul
xor
or
mov
hlt
pop
loope
das
mov
push
inc
mov
es
roll
mov
ss
test
dec
jae
xor
and
daa
jl
aas
ss
idivl
insl
cmp
lret
cmp
inc
test
sub
adc
inc
and
sahf
jg
xchg
aad
adc
movsb
adc
cli
fisubl
push
in
fcompl
aas
daa
jnp
mov
shrb
pop
int
enter
cld
push
inc
mov
inc
mov
dec
push
repnz
dec
sahf
scas
jb
jno
inc
pusha
dec
add
add
cmp
int3
add
sti
pushf
inc
xchg
es
mov
xchg
add
fsubrl
jo
mov
pop
lods
loope
leave
sbb
in
iret
push
pop
jns
subl
sbb
ljmp
and
iret
adc
movsb
mov
imul
lret
pop
insb
sbb
testl
xor
add
push
stc
mov
push
xor
out
dec
and
or
adc
pop
ret
fisttps
into
out
sub
jno
shl
and
jge
mov
mov
ret
pusha
frstor
std
jle
sahf
mov
rcrb
in
or
pop
movsl
mov
std
mov
dec
aaa
aad
roll
xchg
and
cmc
cli
rcrb
pop
push
jge
mov
leave
aas
mov
cmp
push
mov
xor
xchg
test
cwtl
mov
out
leave
jo
mov
pop
mov
dec
push
std
adc
lret
mov
fwait
mov
inc
loop
mov
addr16
xchg
cmp
sub
stc
or
push
pop
aam
hlt
push
sub
negl
and
hlt
lret
and
leave
call
shll
adc
in
jl,pn
out
mov
jnp
cmp
inc
pop
add
sbb
pop
rcr
scas
xorb
out
scas
mov
jbe
lret
cmc
mov
std
and
cld
mov
out
aam
inc
mov
stos
imul
out
pop
data16
pop
lret
daa
popf
loope
ja
sub
out
iret
loopne
outsb
adc
and
push
fmul
into
mov
shrl
cltd
dec
and
ficoml
jmp
inc
cmpsb
stos
les
cmpsb
sub
push
lea
jmp
pop
cmpsb
rcll
aaa
in
mov
sub
mov
mov
testl
mov
jmp
stos
mov
mov
cmp
cwtl
insl
rcll
inc
inc
rol
xchg
dec
jle
jmp
int
call
sahf
arpl
clc
push
mov
loope
xor
test
and
pusha
push
cltd
mov
push
cmp
ja
mov
cmpsb
lret
dec
lahf
xor
in
jp
or
mov
xor
push
ret
cli
rorl
lods
test
in
xchg
outsb
shl
cmp
iret
pop
stos
stos
cmp
fdivrs
test
adc
jne
xchg
mov
stos
sbb
push
les
les
aam
loopne
hlt
xor
mov
sub
mov
mov
push
repnz
test
push
mov
mov
scas
je
insl
sbb
movzwl
add
jnp
repnz
and
rcrl
dec
mov
or
mov
ss
xchg
dec
popfw
dec
insl
fdivl
pop
jns
iret
or
mov
dec
xchg
push
shrb
mov
xor
iret
jecxz
sub
insb
aaa
ficomps
mov
stos
and
scas
jnp
scas
pop
es
sarb
push
insb
inc
out
xlat
push
xchg
pcmpeqw
loopne
cmc
sub
push
pop
sub
fiadds
mov
push
cltd
mov
dec
hlt
or
pop
sbb
or
aaa
mov
aas
sub
scas
jnp
and
repz
insb
arpl
cmp
lret
xchg
mov
imul
cmpsb
fs
pop
sarb
push
imul
pop
mov
inc
gs
adcb
jmp
dec
in
je
out
pop
and
mov
sub
inc
shlb
add
xor
xchg
and
ret
gs
ret
cli
mov
cmp
add
pop
fisubrs
sbb
mov
adc
jnp
sahf
push
loop
loope
rcll
jle
mov
inc
sub
insl
lret
das
cld
jae
xor
push
ficompl
sti
js
xchg
sbb
mov
jb
jg
cmp
mov
push
pushf
pop
out
sub
mov
test
or
jg
and
insb
test
cltd
out
xor
mov
test
ss
adc
ret
mov
sbb
xor
movsl
jge
dec
adc
dec
lret
aad
sbb
dec
lds
cli
cmp
mov
mov
data16
clc
lock
sbb
mov
cmpsl
out
or
dec
jl
push
mov
and
fucomip
pop
inc
and
cmpsb
cli
sbb
arpl
and
push
cmovb
dec
ret
jne
js
fsubrl
add
mov
js
pop
push
push
mov
je
mov
jne
daa
test
fnstcw
cs
sub
mov
xchg
fisttps
fwait
cmp
dec
xchg
and
dec
mov
call
data16
fdivs
push
imul
adc
and
lods
imul
pop
xchg
push
mul
dec
inc
leave
xlat
jp
cmp
mov
ds
cmc
pop
add
mov
incb
fwait
push
and
fstps
or
popa
pop
mov
dec
adcb
adc
adcb
fstps
stos
fwait
push
jle
pushf
or
cltd
mov
std
icebp
hlt
stos
push
add
test
and
add
idivb
pushf
and
xor
xor
push
cli
int
fimull
jge
jmp
mov
and
jg
pop
lret
mov
int3
dec
cmpsl
inc
mov
sub
xchg
xor
dec
dec
mov
cmp
pop
pushf
outsb
mov
jnp
sub
jb
pusha
out
pop
push
xor
movsl
mov
bound
jmp
loopne
push
inc
push
stc
xchg
or
add
les
cmpsl
cwtl
mov
jo
jns
out
jb
pushf
icebp
cmpsb
fcoms
sbb
push
inc
sub
xor
insb
sub
xlat
sbb
popf
dec
nop
dec
push
mov
lea
dec
sbb
jb
push
and
push
mov
add
into
and
xchg
jnp
pop
lods
inc
nop
jmp
les
pop
fcmovne
sub
or
adc
rol
nop
jecxz
cld
stos
into
mov
dec
jmp
mov
push
xchg
cmp
popl
into
push
cli
test
sbb
jl
jmp
push
dec
das
popf
push
xchg
or
mov
xchg
pop
iret
add
imul
rcrb
lret
mov
mov
jns
aad
imul
daa
xor
cmp
inc
push
ljmp
sahf
cltd
sahf
mov
pop
mov
and
jns
in
xor
mov
cs
pop
idivb
sbb
dec
jl
leave
sub
adc
jb
jmp
mov
mov
out
scas
or
xor
jge
jns
sbb
sti
aam
test
pop
das
std
pop
jecxz
inc
dec
negb
test
pusha
shll
scas
sbb
scas
xchg
inc
call
roll
mov
sbb
ds
push
clc
loopne
lock
pop
mov
fnsave
icebp
cmp
lret
ret
shl
push
adc
movsb
ja
insl
enter
mov
stc
lods
pop
cld
dec
mov
mov
lock
sub
xchg
scas
add
pop
out
jno
xchg
insb
inc
out
jne
cmc
cwtl
stos
inc
mov
test
adc
and
mov
das
xorb
fdivp
sbb
fidivl
cmc
arpl
fildl
stos
xor
pop
sarb
in
jg
in
mov
scas
ds
aas
popa
xchg
cwtl
dec
cmc
xor
vphaddwq
rcrl
out
frstor
mov
or
push
push
sbb
jg
dec
jecxz
mov
push
movsl
lcall
test
mov
fcos
iret
xor
loopne
jbe
or
mov
scas
bound
incl
mov
pop
jns
lret
fcmove
jge
pop
sbb
mov
cmc
mov
add
pop
adc
mov
adc
sbb
stos
es
aad
lcall
jmp
sbb
clc
dec
ja
lahf
mov
dec
test
mov
xor
mov
rcrb
leave
ret
aad
mov
xchg
xchg
out
adc
les
pop
test
int
rorl
jno
xor
jo
push
repnz
jbe
enter
fidivl
sbb
loope
cltd
ror
xchg
aam
sub
cld
adcl
push
sbb
mov
xlat
push
pop
movsb
lret
and
adc
cld
aad
fidivrs
add
in
dec
dec
aad
shll
mov
test
cmp
ret
jbe
lret
xchg
xchg
dec
fisttpll
mov
push
xor
scas
xchg
mov
fldl
mov
fistpl
sub
push
xorl
inc
add
sub
lock
xor
lret
pop
mov
out
xlat
das
adc
xor
or
iret
push
cmp
pop
rol
xor
mov
fstpl
cld
mov
dec
jns
jno
push
cmp
shrl
scas
sbb
sub
pusha
leave
sub
sbbb
ja
or
aad
in
add
loop
add
mov
or
cltd
push
fimull
sub
push
dec
mov
lea
stos
and
int
stc
cmp
mulb
ret
jge
inc
fwait
test
scas
imul
insl
sti
mov
icebp
mov
flds
adc
mov
jecxz
adc
or
cli
jmp
and
in
fwait
sbb
stc
rcrb
divb
sub
sar
pop
or
gs
push
sbb
inc
sub
icebp
xchg
popa
call
arpl
xor
mov
inc
xchg
push
jb
orl
xchg
cmp
std
mov
mov
adcl
jae
mov
cmc
fwait
jge
sub
adc
sbb
cmp
js
sarl
out
test
sub
leave
xchg
das
pop
and
cltd
mov
cmp
xchg
ror
fldcw
pusha
fcomps
dec
mov
enter
in
or
dec
sbb
movl
xorb
mov
xchg
pusha
xchg
jg
pop
jg
push
mov
call
xchg
or
movsb
popf
rorb
scas
sub
or
mov
mov
xchg
fstl
arpl
outsb
fwait
aaa
dec
aad
or
enter
and
jnp
ds
pop
aad
mov
pop
inc
xor
ss
push
mov
sbb
imul
mov
orb
xchg
dec
cltd
dec
call
lea
jbe
daa
or
mov
jp
call
adc
mov
xor
mov
mov
lods
aaa
inc
xlat
adc
fimuls
arpl
pop
mov
loope
stos
cmp
adc
jno
xlat
loopne
jbe
xchg
mov
movsl
dec
jne
iret
and
xchg
jo
lahf
lret
sub
cmp
jp
pop
add
outsl
and
push
sbb
in
dec
add
xor
sbb
fsubrp
outsb
jle
xorl
enter
popf
sti
fs
fstpl
addr16
fldcw
nop
sub
shll
adc
pop
sbb
cmp
sub
dec
dec
in
xlat
mov
arpl
rcl
stos
mov
jle
push
mov
and
pop
shr
movsl
or
out
imul
cmc
fidivrl
fisubrl
cmpsb
inc
mov
push
mov
adc
mov
push
dec
dec
into
fisubrl
sbb
mov
inc
xor
movsb
inc
aaa
mov
out
pop
ss
leave
xchg
in
imul
push
mov
je
sbb
das
inc
loope
or
sahf
push
push
mov
sbb
and
test
jp
push
mov
outsb
dec
lret
call
roll
cmc
cmpsb
aad
faddl
ss
outsb
fsub
dec
aam
popa
jmp
push
push
jmp
lods
ds
dec
loop
or
test
lea
mov
pushf
daa
xor
cwtl
and
popf
jns
loopne
dec
subl
sbb
ret
stos
jle
outsb
das
xor
cmp
into
or
jmp
mov
mov
negl
add
push
js
repnz
push
cmp
adc
cmp
shll
orb
cmpsb
inc
jmp
loopne
inc
xchg
fs
sub
es
push
mov
lods
cli
lock
jp
jns
mov
cmc
sbbb
in
in
daa
add
sub
stc
jne
inc
dec
out
or
mov
dec
sbb
jb
mov
clc
aas
sbb
movsb
ja
movsb
lock
xchg
mov
xor
cmpb
mov
and
loopne
xor
outsb
fisubrl
leave
inc
jl
aam
xchg
les
fadd
pusha
call
pop
pop
sub
pop
add
inc
add
dec
or
loop
and
mov
dec
dec
sub
mov
and
sub
ficompl
cmp
repnz
sbb
das
mov
mov
sub
and
sti
cmc
in
xchg
xlat
pop
mov
cltd
pop
inc
test
or
movsb
jb
pop
iret
or
cltd
fmull
jo
jg
shl
jne
push
fcoms
sbb
push
ss
out
stos
in
or
fsubrl
sti
arpl
cmp
enter
stc
mov
pop
push
add
jb
sub
add
dec
adc
push
ds
sub
dec
mov
sti
cmpb
pop
out
xchg
adc
inc
popa
mov
pop
jno
cmp
mov
lea
jecxz
pop
jns
enter
ficoms
sbb
rorb
dec
sti
jae
xchg
sbbl
jl
xorl
icebp
dec
mov
pop
popf
or
rcrl
fcompl
icebp
and
lods
in
sti
shrb
mov
imul
jbe
mov
push
sub
test
iret
into
lds
jle
ss
cmpb
pop
std
sahf
pop
dec
lret
mov
sti
mov
adc
or
xchg
pop
test
fildl
movb
xor
insb
out
popa
mov
pop
push
xor
and
scas
shlb
and
mov
sbb
mov
loop
rol
movsl
mov
cmp
mov
pop
addb
fbstp
outsb
pop
cld
cmp
cli
jmp
adc
pop
lahf
mov
je
lods
inc
mov
push
into
js
mov
inc
out
sbb
jae
rclb
xor
jl
or
pusha
cli
sub
repz
imul
add
fdivrs
insb
mov
roll
popl
cmp
pop
pop
les
js
push
mov
rorb
push
imul
test
ds
mov
jp
imul
daa
jne
imulb
out
call
std
mov
lahf
ss
daa
add
iret
loopne
or
mov
scas
jmp
nop
aas
mov
jg
mov
xor
or
jo
xchg
pop
lods
cmpsb
jl
sbb
xchg
loope
jbe
hlt
or
iret
inc
enter
sub
sub
jb
in
jg
mov
or
push
pop
out
ja
inc
push
insl
clc
jg
shll
xchg
or
ja
xchg
sti
fmuls
popf
sbb
pop
push
or
jae
cs
shrb
out
dec
mull
jo
xor
push
sbb
lea
cs
inc
leave
mov
shl
mov
jb
sahf
jecxz
popa
ret
pop
xchg
das
imul
sbb
hlt
shlb
xor
clc
into
mov
jmp
enter
stos
bound
faddl
aam
loopne
fld
popa
flds
add
xor
sub
mov
movsb
gs
inc
jb
fidivrs
mov
jmp
cli
xchg
pop
mov
mov
repnz
xchg
loop
mov
mov
subb
cmp
mov
in
xor
mov
cli
sub
lret
xchg
fstp
or
int
mov
jp
push
stos
mov
jp
sub
subl
xchg
mov
movb
lea
cmpsl
shll
popl
pop
icebp
or
xchg
insl
in
stc
mov
lock
xchg
pusha
jmp
mov
xchg
nop
add
adc
adc
xchg
data16
pusha
ss
icebp
mov
mov
add
movsb
pop
jge
cmp
xor
xorl
ja
sub
cltd
adc
add
cmpb
je
shll
ret
jb
sti
bswap
sbb
ret
adc
call
outsb
mov
hlt
sub
mov
aas
sbb
jo
imul
adcl
scas
cmp
aas
sub
inc
pop
rorl
sbb
mov
mov
sbb
xchg
jg
sbb
xchg
fs
xor
lret
lea
sbb
dec
xor
push
in
inc
jo
mov
sbb
pop
pop
and
cli
xor
pop
xchg
dec
outsl
shrl
stos
dec
cmp
movsb
dec
mov
movsb
inc
push
ja
sub
push
sbb
pop
pop
jbe
inc
jle
aad
les
dec
push
lea
mov
xchg
je
or
mov
lcall
cli
jg
pop
test
adc
fbstp
fxtract
out
inc
xchg
xchg
jno
icebp
pop
pop
idiv
clc
aam
sub
xchg
xor
mov
adc
into
sub
pop
push
push
cmp
or
pushf
mov
jp
or
out
fnsave
fmull
daa
clc
mov
jmp
adc
adc
xchg
loope
adc
stc
xor
shrb
das
sahf
adc
dec
adc
jae
gs
jg
adc
sarl
adc
jle
cwtl
fiadds
aas
rcll
cld
jl
aad
xlat
jns
push
push
sbb
lods
push
rorl
mov
scas
ffreep
cli
sbb
les
mov
push
mov
mov
mov
mov
aam
pop
xor
movsl
lea
movb
dec
cmp
jecxz
adc
push
xor
push
into
ja
rclb
xchg
test
fsubr
into
or
push
aad
lcall
daa
mov
mov
cmpsb
test
insb
dec
andb
movsl
push
push
call
out
or
test
mov
pop
movsl
cmp
xchg
pop
shll
mov
xchg
sti
pop
fdivrs
repz
adc
adc
daa
clc
out
push
enter
mov
cmpsl
push
mov
sub
jb
jo
pop
or
shll
divb
xlat
test
jo
dec
rcrl
xorl
sub
aas
fistl
out
cli
movsl
push
es
mov
stos
mov
adcb
sahf
jno
add
subl
sbb
inc
inc
add
inc
in
adc
ds
fcmovbe
shrb
mov
push
or
testl
es
mov
movsb
les
adc
push
and
jge
mov
daa
mov
add
xor
fstps
mov
sub
push
lea
repz
in
push
mov
das
sub
in
test
lock
rcrb
lods
add
in
ljmp
or
pop
xchg
jp
jnp
cmp
and
fadds
cmp
lock
rcll
add
push
xchg
cmp
clc
cmc
cld
test
and
jmp
xchg
pop
xor
pusha
cmpsl
dec
dec
mov
mov
lock
cmp
xor
shl
xchg
pop
inc
int
sub
loope
cmp
loope
dec
add
mov
sbb
push
cmpsl
pop
aas
iret
dec
sbb
mov
aaa
sub
loope
neg
in
sbb
push
out
add
idiv
call
imul
sub
and
dec
and
dec
pop
test
shlb
xor
pop
sahf
pop
add
test
and
repz
sbb
xor
push
shlb
mov
mov
sub
lret
mov
ret
xchg
les
add
jg
insb
fdivs
subb
jmp
lahf
stc
lods
mov
movsl
fsts
pop
lock
fcoms
xor
dec
test
data16
jp
jmp
adcl
dec
xchg
test
jg
lcall
adc
int3
and
jmp
movl
and
fucomi
add
shrb
jb
decl
rorl
mov
mov
cwtl
or
adc
scas
adc
lcall
cmpsb
stos
jecxz
push
jmp
into
pop
bound
mov
pop
inc
movsb
sti
pop
bnd
mov
lahf
repz
in
pop
fstpl
adc
sub
sub
rclb
ret
sbb
and
cs
shlb
xchg
sbb
rsqrtps
dec
sbb
lods
jmp
jns
or
pop
xchg
es
adc
push
sub
loopne
outsl
in
ljmp
nop
out
push
aad
cmc
mov
sub
xor
dec
hlt
xchg
mov
mov
lcall
jnp
cmp
inc
xlat
mov
cmp
insb
arpl
xchg
movsl
sbb
test
loop
xchg
add
leave
xchg
xorl
cmp
lahf
xor
push
std
add
mov
sbb
sub
cs
pop
inc
mov
jbe
xorl
mov
imul
jl
add
cli
pushf
push
or
icebp
test
imul
pop
lahf
roll
scas
pop
jbe
jecxz
sahf
fdivrl
fldl2e
jg
out
je
iret
sub
pop
sbb
inc
mov
dec
pop
lods
jp
pop
scas
aam
ficomps
stos
or
loopne
lea
movsb
xchg
mov
mull
ljmp
add
sub
out
leave
lods
insb
lods
gs
dec
inc
out
iret
ret
jmp
adc
sub
sub
push
fistpll
push
xor
call
call
ret
adc
mov
and
dec
rcrb
adc
xchg
add
mov
ret
rorl
popf
cmp
push
pop
adc
push
shlb
repnz
or
cmp
sbb
insl
push
cmp
push
into
arpl
mov
scas
nop
jne
ds
jl
push
pop
out
out
shrb
sub
pop
or
js
pop
daa
push
mov
popa
scas
ljmp
push
test
push
leave
dec
xlat
push
jb
test
ljmp
jmp
push
dec
roll
xchg
loope
fnstsw
mov
add
fwait
mov
popf
add
jp
imul
shlb
push
test
cmp
icebp
lcall
pop
jno
ds
and
outsb
pop
pop
dec
dec
ret
cmp
jne
mov
add
aaa
fstpt
xchg
pop
ds
addr16
mov
fsub
push
and
mov
and
and
out
clc
iret
sub
dec
sub
sbbl
jl
sbbb
pop
pop
loope
mov
scas
and
cmpsb
aas
in
popa
jg
and
into
or
cmp
mov
out
rolb
ds
das
std
bound
and
popl
pop
sbb
adc
jge
mov
fisubl
lods
sbb
or
fidivl
sbb
dec
push
dec
sbb
xor
fs
ljmp
movsl
mov
icebp
insl
mov
adc
and
mov
sub
fidivl
cmp
add
pop
or
sub
adc
mov
push
mov
ss
xchg
adc
pop
stos
add
pop
imul
flds
jge
inc
or
sarl
sti
adc
enter
ss
dec
pop
add
jmp
jmp
aaa
cs
sbb
lcall
or
leave
jne
int
jae
mov
pop
clc
or
clc
pop
mov
inc
popa
mov
lea
pop
test
into
leave
loop
mov
and
ret
shrb
cmp
mov
xor
js
dec
inc
lahf
push
popa
mov
push
xchg
inc
fcomps
sbb
sub
cmp
out
mov
sbb
cmp
shl
rolb
data16
out
aam
xchg
cmp
js
imul
lahf
adc
pop
popa
scas
push
and
and
or
movsl
testl
loope
sub
fisttpll
pop
dec
cmp
or
lcall
mov
push
fucomip
mov
out
xor
mov
push
out
ljmp
fsubrs
lods
xchg
xor
sbb
outsl
pop
sub
xchg
insl
in
out
enter
cmp
mov
popa
push
and
jp
gs
sbb
xor
mov
jb,pn
fistpll
sub
or
pushf
mov
dec
sti
ds
add
stos
lea
pop
shll
bnd
imul
mov
sub
nop
lock
push
mov
xor
xor
stos
jecxz
push
pop
scas
in
inc
lcall
pop
dec
cmc
pop
inc
jbe
add
sti
mov
cmp
cmp
frstor
in
std
test
aas
enter
cmpsl
adc
dec
pop
loope
xchg
mov
mov
cmp
mov
dec
shl
sub
inc
mov
push
shrl
lds
mov
mov
in
push
and
inc
test
test
xor
fs
fnstsw
leave
jbe
add
insb
cmc
add
fwait
pop
jmp
pop
push
pop
out
inc
movsb
mov
pushf
mov
sbb
dec
pop
insl
ret
ss
stos
lahf
pop
and
fucomp
bnd
cmpsl
je
or
mov
imull
and
mov
mov
and
inc
push
cmpsl
cmp
jg
scas
xchg
mov
adc
push
adcb
push
out
or
mov
jge
push
jp
mov
mov
xor
sbb
or
data16
out
jno
add
and
jno
imul
xchg
mov
js
push
inc
mov
daa
fstpt
mov
lea
push
mov
cwtl
or
mov
repz
cmp
idivb
data16
mov
lea
das
mov
outsl
dec
add
loop
sub
pop
jno
cmp
cmpsb
test
push
movsl
mov
leave
xor
pusha
push
popf
aaa
std
leave
push
sahf
and
pusha
add
mov
dec
lds
stc
test
hlt
mov
or
jbe
xor
dec
sub
pop
popf
xchg
shll
pop
pop
cmp
das
mov
das
inc
pop
neg
out
nop
inc
ret
xchg
lahf
je
push
xor
jl
lock
add
jno
fsubr
cmp
sahf
mov
cmpsb
addr16
add
mov
jle
jae
lods
mov
loopne
adc
sar
out
and
mov
cmpsb
scas
ss
sub
xchg
cmp
sbb
stc
fsubrl
outsl
adc
fs
imul
mov
lods
test
sbb
mov
fs
and
sbb
jb
stc
int
stos
xchg
adc
lds
add
into
out
ja
je
mov
sbb
jnp
adc
lret
ret
push
jmp
mov
scas
fisttpl
ret
sbb
test
jo
xchg
dec
cmp
sub
adc
adc
not
xchg
arpl
mov
gs
mov
pop
add
add
or
and
outsb
inc
pusha
inc
cmpsb
xor
dec
mov
sti
ja
mov
cmp
hlt
sub
mov
xchg
enter
pop
push
bound
lods
jl
ret
inc
push
stos
cmp
aaa
test
pop
inc
cmp
dec
popa
mov
in
jmp
icebp
subl
loop
sub
out
add
pop
mov
adc
jle
js
cli
cmp
lods
and
push
mov
mov
or
dec
outsb
iret
cmp
sbb
xchg
loop
mov
adc
mov
xchg
push
aaa
sub
inc
pop
adc
xchg
push
pop
js
es
mov
mov
cmp
mov
into
mov
addr16
hlt
xor
pushf
mov
dec
push
cmpsb
fisubs
aam
cmp
fwait
addr16
lods
mov
dec
pop
mov
or
xor
adc
movsb
hlt
mov
orl
dec
imul
inc
int
lea
pop
sti
inc
cmpsl
fs
and
xlat
test
add
pushl
sarb
lcall
pop
out
es
pop
mov
ret
repnz
and
xor
xor
xchg
cli
lahf
bound
or
lods
fldt
pusha
add
fsubrs
adc
or
mov
inc
cld
mov
or
frstor
lock
frndint
cltd
incb
sub
pop
pushf
and
mov
pop
push
or
aas
or
cmp
inc
les
loopne
lods
mov
jnp
in
adc
inc
sbb
mov
das
out
dec
push
adc
sbb
and
imul
pop
hlt
jae
roll
mov
jmp
mov
mov
enter
jne
test
jo
test
cmpsb
dec
cmpsb
push
repnz
nop
loop
or
jg
xor
sbb
dec
add
mov
adc
mov
jecxz
and
movsl
lock
jecxz
arpl
inc
jmp
loop
lcall
roll
ds
lret
dec
pop
bound
imul
mov
adc
push
xchg
ljmp
test
clc
pop
popl
in
out
mov
hlt
lock
test
rcll
cmp
cmpsl
aad
call
icebp
lret
or
mov
push
scas
cmp
ficomps
inc
adc
loop
sar
sbb
mov
je
stc
movl
bound
fisubrl
xchg
fstp
push
jbe
aaa
xchg
xor
mov
fsubl
add
cmp
push
push
test
jb
ljmp
ror
xchg
leave
gs
sbb
loopne
push
fmuls
in
dec
dec
and
daa
stc
mov
fsubs
addb
cmc
cmp
sub
xchg
jmp
mov
adc
sbb
mov
or
sub
ljmp
arpl
cmp
or
shlb
dec
jae
mov
cmp
push
je
imul
subb
mov
icebp
adc
aad
inc
xchg
xchg
lret
cli
push
inc
fnsave
pushf
push
sbb
gs
or
call
pop
xchg
ficoms
shll
adc
addr16
mov
inc
mov
xor
shll
out
repnz
mov
push
popf
inc
ja
je
push
mov
rcrb
pop
gs
hlt
in
jae
adc
lock
setbe
loop
mov
out
andl
es
xor
pop
adc
icebp
mov
inc
in
call
add
push
add
dec
out
iret
mov
stos
sbb
push
push
jae
sti
inc
idivb
pushf
jno
fdiv
and
xchg
pusha
mov
sahf
or
pushf
or
push
jge
pop
and
nop
mov
orb
int
jg
inc
push
xor
xchg
jp
enter
aad
call
sbb
sbb
or
jmp
repz
add
jle
dec
xchg
pusha
mull
test
jae
popa
stos
mov
or
paddd
xchg
scas
jl
xor
inc
ret
lcall
ficomps
rclb
lds
shrb
das
xor
sbb
pop
in
ret
or
imul
add
fsub
inc
mov
push
aam
cs
push
clc
outsb
cmp
popa
add
sub
aam
mov
imul
mov
mov
add
test
gs
aaa
fcomi
ds
xchg
std
or
add
cli
test
sub
dec
inc
adc
xchg
lret
push
clc
div
pop
loope
xor
push
push
fwait
ret
pop
out
or
mov
cmp
cltd
pop
stos
or
xor
aaa
ljmp
lret
jle
std
test
or
push
push
pop
add
adc
rorb
lods
int
mov
inc
and
loope
jle
push
pop
les
pop
lods
int
adc
sbb
or
adc
movsl
bound
std
cmp
cmp
ja
lods
pushf
ret
mov
popa
movsl
push
fwait
jne
decb
jne
hlt
aas
imul
mov
and
popf
mov
jge
jmp
push
inc
and
mov
or
cmp
scas
dec
push
cli
xchg
push
mov
pop
add
sub
xchg
dec
inc
jmp
loope
and
or
lahf
dec
mov
repz
cmp
sub
cmc
sti
imul
pop
jnp
and
je
es
sahf
cltd
xor
pop
dec
lea
iret
ret
jb
pushf
or
cwtl
jb
cmpsl
sbb
push
enter
mov
test
cmp
mov
cmp
add
jne
in
adc
sub
xchg
movsb
ss
inc
push
and
adc
test
jl
cmpsb
out
jns
orl
dec
dec
mov
out
loop
lea
xchg
lock
mov
loope
adc
cmpsb
shlb
mov
mov
decb
leave
jg
insl
and
sar
push
jbe
xchg
and
in
mov
adc
test
ficoml
xor
mov
cmpb
cmc
lea
lret
cmpsl
and
inc
xchg
lds
add
stos
mov
inc
xlat
pop
in
dec
or
insb
xchg
insl
in
test
cmc
jbe
imul
jge
pushf
pusha
pop
inc
add
push
mov
xor
jo
sbb
jae
mov
scas
mov
leave
xchg
cmp
scas
cmpb
pop
sub
loope
push
mov
push
aaa
aaa
cmp
sbb
inc
fcoms
test
mov
lds
or
ja
fs
out
cld
icebp
clc
lea
push
mov
xor
or
jecxz
jle
cmp
sbb
iret
js
call
jl
fs
add
sub
xor
nop
and
xor
in
push
sub
xchg
mov
push
xchg
mov
hlt
hlt
jg
movsl
lock
inc
push
inc
repnz
cli
in
or
lahf
outsl
out
mov
push
mov
es
mov
fisubrs
pop
test
pop
dec
clc
int3
loopne
aas
fdivs
mov
mov
negb
fbstp
push
mulb
xchg
pushf
and
pop
jbe
scas
adc
cmp
sbb
jb,pn
push
or
cmp
or
in
dec
rcrb
stos
cmc
iret
push
aas
xor
xchg
imul
addr16
inc
in
pushf
mov
mov
js
mov
fstps
pop
xchg
lods
iret
sbb
aas
out
cmp
shll
adc
jnp
pop
sub
xchg
pop
xchg
mov
xor
repnz
mov
pop
push
daa
mov
lcall
and
loope
cmpsb
das
mov
aas
sahf
xchg
mul
cs
cltd
jecxz
testb
fistpl
mov
outsb
push
add
imulb
mov
inc
in
cli
bound
xchg
imul
daa
pop
cmpsl
dec
mov
mov
test
sub
test
mov
popa
das
idivb
enter
aaa
sbb
stos
mov
sub
sbb
push
sbb
mov
inc
cmc
ds
dec
push
sub
xchg
pop
enter
inc
fabs
ret
push
sbb
adc
popf
adc
sahf
loopne
sbb
add
sub
jmp
movsb
sbb
fwait
inc
push
outsl
push
je
lret
fs
dec
filds
mov
jae
faddp
jno
mov
push
sub
push
mov
ret
icebp
or
test
movups
cmpsb
aaa
adc
bound
push
and
add
mov
call
mov
dec
nop
subl
daa
clc
test
aam
jno
aad
jecxz
test
push
adc
mov
out
shrb
xchg
sub
scas
pop
lahf
and
test
fnstenv
prefetcht2
mov
pop
mov
adc
inc
add
add
fnstcw
jp
adc
sbb
hlt
jecxz
mov
inc
rcr
jecxz
xor
mov
push
jb
inc
cmp
adc
lahf
gs
enter
mov
push
or
jg
and
pop
dec
push
or
push
and
ss
stos
imul
lret
xor
movsl
out
lcall
ds
xor
mov
pusha
xchg
out
or
in
mov
push
ds
neg
cli
and
outsb
xchg
data16
mov
in
sub
lock
mov
cmc
xchg
addb
inc
cs
dec
rcrb
push
inc
addl
xor
push
push
dec
mov
scas
icebp
push
inc
add
inc
imull
push
loope
mov
adc
fnsave
test
add
daa
sub
rolb
clc
sbb
imul
jae
mov
mov
aaa
jp
jle
shr
test
xchg
lods
ljmp
test
in
test
ljmp
aad
lahf
xor
xor
std
or
adc
std
loope
dec
add
add
pusha
lods
push
jno
inc
push
or
dec
lds
out
out
xchg
mov
ljmp
or
xchg
ds
cltd
lret
test
pop
js
iret
sub
adc
lahf
sbb
bound
cli
pop
outsl
fsubl
dec
or
mov
jbe
mov
push
aaa
mov
push
gs
shlb
mov
jo
pop
dec
jnp
add
push
pop
push
sbb
rorl
scas
cmpsl
outsl
test
fimuls
and
test
push
cltd
repz
xchg
jl
mov
and
cmp
stos
andb
fldcw
scas
cmp
push
xchg
cmpsl
push
notl
movsl
clc
mov
in
lods
pop
xor
push
sub
lcall
movsb
sbb
insl
lds
xor
add
mov
mov
arpl
mov
cmp
leave
call
dec
fdivp
fisttpll
push
jmp
sbb
xor
xor
idiv
inc
xchg
push
inc
js
dec
mov
nop
add
or
fstl
sbb
mov
jo
shrl
and
cwtl
adc
jge
sbb
js
cmpl
cmp
fisubrl
dec
jbe
test
lret
ret
int3
cmpsb
xchg
or
insl
xchg
inc
dec
jns
out
push
xchg
mov
inc
and
adc
sbb
jne
hlt
jmp
testb
xorl
cmpsb
mov
inc
test
cld
xlat
adc
into
ret
mov
xor
jne
fidivrs
lcall
orb
sar
aam
push
jecxz
sbb
out
or
es
dec
cmp
jnp
ret
add
sbb
insl
aam
test
dec
ja
test
sbb
jnp
aam
das
and
sub
dec
push
cwtl
or
movsb
rcr
sbbl
jns
cltd
mov
or
and
pop
aam
add
loop
into
lcall
loopne
in
loope
pop
data16
pop
stos
xor
cmp
outsl
cmp
loopne
mov
mov
fdivs
test
cmp
xchg
and
outsl
test
in
fsubrl
loopne
mov
inc
adc
sarb
pop
outsb
sub
xchg
iret
pop
sbb
sbb
enter
adc
test
ljmp
icebp
loopne
cs
dec
add
xchg
jb
shl
sbb
push
add
sarb
stc
enter
adc
cmc
repnz
mov
stos
movsb
sbb
mov
push
aas
mov
or
adc
mov
adc
cmp
mov
gs
xchg
pop
or
and
insl
or
add
dec
fisttpll
aam
in
and
pop
or
add
mov
add
or
subb
jl
sbb
cltd
imul
adc
enter
lds
lret
das
jno
pop
mov
aaa
pop
addr16
inc
out
pop
inc
dec
xchg
lods
xlat
cmp
sub
mov
sbb
adc
adc
mov
push
movsl
mov
rolb
ds
xchg
addps
or
jg
push
fs
imul
mov
rclb
sub
ja
xorb
adc
clc
and
rcrl
mov
mov
pop
jg
pop
fidivrs
mov
sub
in
push
gs
enter
sbb
inc
lods
sbb
out
pop
jbe
cmp
cmpsl
adc
push
pop
out
xchg
fsubrs
scas
fs
sbb
mov
cli
xor
or
out
hlt
fisubl
out
loop
lret
je
fwait
mov
imul
cmp
lods
stos
cmpsb
test
mov
inc
or
sarb
int
loop
adcb
xchg
mov
and
xchg
xlat
push
mov
cmp
adc
fwait
push
push
xor
push
mov
cwtl
pop
jne
insb
jnp
out
jae
fwait
and
pop
lock
orb
xchg
scas
adc
cmpsl
loop
aaa
iret
cld
data16
cmp
jnp
in
sub
daa
aam
xor
xchg
fs
xor
mov
hlt
add
mov
mov
dec
jge
ljmp
dec
sbb
scas
and
pop
icebp
cmp
add
fsts
es
sub
jmp
inc
cmpsb
lret
xchg
out
cs
mov
dec
sbb
jb
out
dec
adc
push
mov
push
add
hlt
loopne
pop
mov
mov
xchg
and
xor
sbb
push
sub
adcl
or
lahf
nop
pusha
inc
ds
mov
xlat
dec
lea
cwtl
fsts
add
mov
and
fiadds
jbe
loope
sbb
push
lret
outsl
xlat
aas
dec
js
mov
or
pushf
mov
in
int
les
dec
xorb
in
sub
mov
mov
push
shl
je
sbb
mov
ret
cld
mov
in
imul
jmp
movsl
in
aaa
push
add
in
loope
iret
lds
mov
lock
mov
jmp
lcall
popf
jbe
das
andb
test
or
mov
das
pop
push
insl
add
cmp
fildll
pop
xor
add
add
psadbw
outsl
in
sub
dec
cmp
mov
lock
js
push
imul
daa
xlat
lods
mov
adc
push
add
mov
sub
mulb
sub
pop
sahf
xchg
add
scas
jmp
inc
and
inc
or
imul
push
or
sub
cmp
pusha
pop
xor
xchg
les
out
sub
push
sbb
hlt
cmp
push
mov
std
xchg
int3
lods
pop
push
sub
arpl
jge
xchg
xor
aaa
sub
adcb
jl
lret
xchg
in
data16
ljmp
jg
insl
sbb
mov
jae
insl
cmp
in
push
pop
aaa
into
lahf
pop
push
std
out
jge
push
xorb
ljmp
lret
shrb
flds
mov
jl
bound
popa
adc
or
out
stos
popf
push
lahf
pop
mov
jb
pusha
mov
ja
and
leave
adc
in
int
mov
andb
push
xchg
popf
clc
adc
add
movsl
pop
call
dec
inc
loop
dec
jno
adc
pop
pop
sbb
adc
arpl
cmp
mov
or
rclb
shlb
dec
cmpsb
leave
pushf
push
pop
jmp
fcompp
dec
fisubrl
xchg
shrl
daa
jmp
pop
loope
mov
xchg
cmp
daa
fucom
sbb
sbb
shl
stos
or
cmp
in
pop
test
push
lds
das
andb
xchg
hlt
icebp
out
ja
lea
push
mov
sbb
popa
stc
cmp
jno
jnp
test
inc
fsubp
incb
daa
jg
out
push
in
pop
jbe
fwait
popf
data16
inc
fimull
jecxz
enter
pop
dec
lods
or
rclb
and
cmpsl
pop
add
test
je
call
int3
popf
mov
sub
cmpsl
push
dec
das
add
mov
push
popf
sub
loop
mov
test
push
enter
mov
xchg
out
inc
cmp
or
pop
imul
scas
repnz
adc
sti
lret
imul
fildl
jecxz
sbb
cmpsb
cli
stos
decb
aaa
in
pop
cmpsb
call
xchg
jns
add
fsts
dec
push
cwtl
int
daa
mov
sbb
popf
jmp
mov
push
and
imul
rcr
mov
mov
xor
xchg
icebp
lods
mov
mov
arpl
mov
out
hlt
xor
xlat
fldt
pop
jl
push
pushf
jg
xchg
loop
popa
and
cmp
clc
push
repz
push
cmp
sub
jbe
daa
or
mov
xchg
xchg
fisttps
sha256msg1
cmp
into
jg
lcall
mov
mov
in
xchg
out
fldenv
loopne
xchg
insl
xchg
lods
enter
jle
xchg
mov
sub
aaa
sbb
pop
fwait
push
or
xchg
push
cltd
and
jge
iret
adc
fsubrs
cltd
mov
push
push
inc
fsub
loope
mov
adc
xchg
mov
arpl
add
xchg
mov
cmp
fbld
push
inc
std
arpl
addr16
cs
push
jo
rorl
dec
pop
andb
add
dec
mov
mov
mov
xchg
xor
rorl
fwait
es
sbb
mov
push
push
mov
test
or
int
and
adc
icebp
xlat
cli
je
int3
jge
or
scas
lock
xchg
and
das
push
lds
xchg
movsb
stos
pop
out
adc
sub
inc
in
stos
pop
push
shrb
xchg
outsb
sahf
pop
ljmp
cmp
jle
ret
test
mov
jb
xor
push
xchg
xchg
mov
jl
repz
mov
add
jl
sub
mov
xchg
lock
and
mov
nop
pop
sub
push
shl
mov
scas
jg
dec
nop
popf
push
imul
adc
cltd
nop
mov
sub
ficompl
insb
outsb
xor
lcall
add
mov
cmp
ds
in
cmp
mov
mov
jle
adc
pop
dec
ja
sbb
adc
call
mov
data16
in
into
xchg
stc
pop
test
int3
xor
pop
mov
inc
popf
insl
sbb
cli
test
fwait
ljmp
sub
iret
cli
push
cltd
aam
pop
fwait
adc
cmp
pop
and
stos
xlat
rorb
insb
jbe
shll
or
inc
jle
sbb
adc
mov
lock
push
mov
cmp
shl
cwtl
xchg
pop
popa
jge
lods
ss
xchg
jns
stc
addr16
lret
insb
fmulp
dec
jns
xchg
out
imul
clc
and
push
js
mov
fs
in
adc
pop
int
nop
xor
aaa
dec
sbb
sbb
lods
pop
insb
stos
xor
call
push
daa
sbb
sbb
jns
aad
sbb
sbb
aad
outsb
std
loop
mov
jae
or
movsb
pushf
addr16
leave
sub
imul
mov
call
cmp
fwait
test
push
in
jle
sub
out
aad
jge
shr
adc
jge
mov
movsb
sub
mov
aas
ss
inc
mov
or
jmp
pop
aad
dec
add
mov
fs
mov
pop
lret
fisttpll
xor
in
lret
fwait
mov
sbb
jne
xor
sub
adc
imul
cmp
add
shll
das
inc
add
push
out
popf
mov
push
rcll
mov
pop
dec
mov
in
sub
pop
dec
add
aad
testb
xchg
inc
jle
and
xor
iret
cmp
cmp
push
xchg
mov
sbb
lcall
mov
add
scas
push
lods
ljmp
xor
icebp
dec
dec
push
jb
push
push
pop
mov
fs
in
bound
jb
or
adc
testb
add
adc
bnd
iret
mull
pop
leave
insl
loope
cmp
mov
mov
pop
dec
sbb
scas
nop
dec
test
mov
mov
inc
call
mov
push
pop
cmp
subb
mov
mov
rorb
dec
icebp
cmpsb
and
jbe
je
in
fsubrs
sbb
loopne
and
push
aad
mov
stos
xor
push
jle
ret
jl
xor
push
popf
aad
xor
fwait
sub
and
pop
ja
push
sub
cmp
lds
orb
mov
inc
arpl
rol
and
sub
xor
inc
ds
pop
loope
ss
mov
mov
js
add
loope
in
adc
mov
jnp
outsb
pop
sbb
mov
or
stos
sti
je
cmpsl
adc
inc
dec
push
mov
insb
push
cmp
and
ds
outsb
mov
scas
jmp
into
in
dec
push
inc
sbb
cmp
xchg
mov
loope
inc
cli
and
add
or
pop
push
fistps
sub
or
scas
inc
cltd
mov
xlat
mov
mov
pop
shrb
push
insl
sbb
addl
pusha
xchg
fwait
xor
push
mov
sbb
das
and
fs
add
insl
ss
xchg
jp
pop
xor
arpl
cmp
ficoml
inc
in
es
andb
popa
mov
pop
sbb
inc
jo
dec
push
fisttps
add
jo
push
push
mov
add
jnp
sub
movsl
mov
js
mov
roll
push
shrb
mov
sahf
push
ljmp
fdivrs
mov
push
pop
push
inc
jle
fistpl
idiv
mov
lock
adcl
loop
ret
jae
imul
out
shl
mov
call
and
sbb
lahf
and
sbb
out
push
fisttpl
add
mov
test
lret
movl
int3
add
ret
mov
icebp
dec
movsb
aad
add
and
jb
mov
in
sub
jb
push
pop
std
jo
xchg
xor
xlat
notb
push
daa
inc
xchg
fsubrl
ficoms
int
idivl
je,pt
movsb
repz
leave
cmp
or
or
inc
mov
or
mov
ret
les
popa
enter
test
and
mov
xor
icebp
xchg
sbb
xor
and
sbb
imull
out
sbb
gs
pop
jle
or
in
dec
lret
and
int3
push
es
push
shl
int3
dec
mov
in
gs
movsb
std
in
mov
repz
inc
inc
inc
push
sbb
test
sti
mov
pop
sbb
or
shll
movsl
arpl
push
xchg
pop
mov
or
dec
div
ss
call
lods
adc
xor
pop
inc
arpl
movsb
insb
jle
push
pop
mov
out
lret
filds
aas
mov
ja
sbb
sub
and
cmp
scas
mov
lods
loop
outsl
inc
in
and
xor
push
popa
xor
dec
mov
cmp
cmp
jno
pop
loope
gs
ja
xchg
mov
rcr
int
sbb
jns
jle
cmpb
insb
ret
out
inc
test
incb
iret
addr16
push
insb
mov
inc
cld
and
std
flds
cltd
mov
adcl
nop
mov
gs
jb
and
mov
les
sub
ret
outsb
add
jecxz
ficompl
dec
sub
xchg
jle
sbb
pop
out
out
jb
sti
pop
je
pop
pop
push
decb
outsb
mov
scas
inc
add
inc
aad
xchg
add
mov
cld
int3
xor
sub
je
lods
jns
dec
mov
movsb
jno
loopne
and
insl
push
rclb
aaa
adc
cli
pop
hlt
mov
mov
ret
aas
inc
mov
clc
sub
out
or
pushf
je
xchg
mov
xor
sbb
test
pop
dec
inc
cmp
or
in
pusha
rorb
jo
push
das
sub
fwait
fdivs
ljmp
dec
les
inc
or
ja
popa
scas
lcall
stos
decl
mov
test
pop
or
jae
push
sarb
xchg
add
cmp
xchg
add
cmp
add
sub
jg
and
subl
aaa
fists
scas
mov
sub
imul
arpl
and
mov
xchg
sbb
jecxz
ret
insb
popa
xchg
pop
xchg
dec
cmp
inc
dec
popa
mov
mov
xchg
xchg
add
js
push
cmpsl
aad
mov
mov
mov
in
in
ror
dec
imul
push
cli
out
mov
sub
jno
lock
ss
mulb
mov
mov
pusha
out
pusha
dec
add
es
test
aas
mov
mov
jo
adc
cmpsb
sbb
in
scas
xchg
in
test
in
sub
pop
push
in
lock
cmp
dec
inc
int
arpl
ljmp
leave
stos
ss
iret
rcl
ljmp
out
data16
das
inc
sahf
mov
xor
adc
ja
icebp
arpl
bound
outsl
jns
inc
inc
iret
pushf
adc
stc
mov
or
jecxz
mov
inc
pop
leave
popf
mov
aad
dec
stos
sbb
cld
xor
mov
das
out
adc
and
insb
adcb
sub
outsb
aas
jp
jg
ret
imul
mov
jl
aam
push
sbb
xchg
jecxz
dec
clc
push
push
popa
mov
lret
push
dec
adc
add
jae
pop
adc
das
and
jle
addr16
sahf
les
sub
fdivrs
dec
cmp
mov
int3
pop
lret
jb
inc
call
xchg
jmp
roll
cmp
cmp
sbb
push
lock
jmp
mov
lahf
push
mov
popa
popf
pop
mov
js
clc
mov
jnp
mov
popf
fiadds
and
sti
push
cmp
mov
and
fsubp
cmp
and
fisubl
cwtl
sub
inc
or
test
or
sub
sbb
pop
insl
xor
in
test
ja
insb
lret
arpl
ljmp
push
xchg
int
cmp
in
xchg
jge
cwtl
lods
repnz
jecxz
pop
sub
push
in
push
xchg
sbb
rcll
cld
sbb
and
jne
in
repnz
cmpsb
inc
cmp
inc
dec
fidivs
inc
xchg
pop
call
sahf
or
xchg
cmpsl
pop
sub
mov
test
mov
outsb
adc
lds
repnz
pusha
je
fcmovb
fwait
push
push
in
jle
ret
jmp
das
push
iret
xlat
std
mov
adc
fucom
lock
movb
pop
add
adc
mov
das
pop
dec
cmp
adc
cli
cmpsl
jp
cltd
insb
and
pop
push
sub
repnz
cmp
loop
clc
movsb
pop
lahf
adc
lds
scas
cmp
aaa
mov
clc
inc
cmp
pop
call
mov
cmp
push
jp
ret
mov
test
mov
cmp
imul
inc
or
jbe
dec
mov
loope
sub
cltd
mov
mov
pop
mov
jl
adcb
cmpsl
popf
out
adc
jno
int3
jne
movsl
lret
stos
je
add
outsb
xchg
stos
test
jmp
xor
mov
mov
cmp
into
outsl
outsl
pop
sub
pop
xchg
div
cmp
js
sub
mov
and
addb
ficomps
or
and
lds
push
mov
fdiv
lret
in
loope
out
imul
es
cmp
mov
xchg
and
movsb
repnz
add
and
ds
add
outsb
scas
loopne
jle
rclb
inc
negl
lds
decb
arpl
and
lea
mov
outsb
pop
xor
sub
mov
adc
cmp
lock
dec
adc
mov
dec
jg
mov
aaa
dec
jnp
jp
stc
lds
shl
xchg
aas
aas
and
lds
pusha
and
loope
out
inc
adc
adc
out
sub
daa
dec
jp
dec
pop
xor
jg
inc
jp
and
aam
cmp
popf
das
jmp
sbb
or
lea
xchg
mov
or
lcall
aam
std
inc
pop
popf
test
add
add
movsb
out
jb
xchg
xor
jp
or
adc
push
lret
xchg
movsl
inc
test
push
icebp
push
daa
or
cmp
in
sahf
ret
xor
sbb
test
inc
imul
push
sbb
push
dec
insb
xchg
fxch
int3
add
in
rcrb
mul
movsb
lods
or
sub
fildll
push
scas
dec
add
sbb
adc
dec
icebp
stc
in
rcr
mov
pop
sub
xchg
in
mov
push
lret
popa
push
cmp
mov
paddw
inc
adc
push
push
xchg
shrl
out
aas
dec
cmp
dec
rcll
gs
frstor
fwait
stos
sub
sbb
movsl
stos
ljmp
sbb
xor
xorb
sbb
aad
aaa
loop
hlt
push
mov
mov
cwtl
mov
arpl
sub
mov
jb
cmpl
stos
data16
mov
mov
pushf
pop
sub
test
testl
or
out
and
or
in
out
ja
sbb
ja
xchg
enter
push
sub
adc
xor
jp
sbb
cmp
dec
sti
aas
dec
or
test
cmc
push
in
jge
cmp
es
cs
mov
dec
mov
xchg
fadds
out
push
aas
mov
dec
iret
inc
xchg
and
pop
add
cs
mov
jp
push
push
sahf
push
adc
fcmovnbe
fcompl
pushf
mov
inc
fs
xor
fidivl
movsb
lahf
cmp
test
mov
add
cmpsl
add
dec
xor
add
inc
push
mov
inc
sub
mov
and
shrb
stos
dec
movsl
add
and
cmp
or
aam
ret
out
push
push
pop
add
test
ret
mov
js
addb
cli
mov
cmp
movsl
test
out
xor
push
inc
push
sbb
ljmp
int
and
adc
iret
jb
lea
mov
fs
int3
out
in
jl
or
sbb
mov
test
shl
push
sti
insb
jne
dec
sub
je
sti
lcall
imul
push
scas
cmpsl
aaa
cmpsb
or
adc
ret
adc
jno
xorl
stc
cli
pop
and
movsl
or
enter
adc
in
clc
jb
jno
int
inc
mov
adcb
out
cmp
ljmp
movsl
pop
aaa
addl
or
mov
pop
out
lcall
mov
mov
shrl
jp
cmp
pop
push
loopne
data16
fwait
stc
sub
rclb
adc
into
jne
test
jns
mov
xchg
dec
hlt
xchg
repz
fidivs
jnp
popa
js,pn
sbb
inc
adc
mov
aad
ljmp
aas
cwtl
stos
or
inc
rolb
fiadds
lods
ja
sbbb
loopne
loopne
scas
divb
add
cld
xchg
ja
ficoml
lcall
icebp
rcll
in
mov
and
cmp
jmp
imul
and
stc
cwtl
das
lret
sti
scas
jbe
cmp
adc
xchg
dec
in
xor
in
lock
fdivl
insl
or
add
push
mov
mov
sub
test
push
fwait
lcall
in
sub
sub
sub
mov
inc
js
loop
out
adcl
add
cmpsb
push
jo
lea
gs
push
mov
sbb
inc
mov
pop
pop
scas
repz
push
mov
movb
push
ljmp
dec
and
xchg
negb
lock
cli
cmp
jg
jb
inc
push
cs
and
add
sbb
mov
orb
aam
push
fidivs
sarb
mov
xor
xchg
xor
sbb
imul
movups
fnstcw
and
negl
jb
aad
adcl
out
cmp
je
js
into
mov
jo
fldl
push
and
xor
rclb
fwait
xor
or
scas
popa
sarb
outsl
xor
enter
xor
aaa
push
jg
jno
or
xchg
out
cmp
cmp
xchg
mov
jg
pop
mov
in
test
cmpsb
data16
pop
enter
add
imul
jl
lock
ret
bound
lcall
xchg
fsubrs
adc
add
and
mov
or
mov
sti
pusha
mov
jnp
jae
roll
xlat
mov
sub
mov
add
loope
pop
pop
xchg
mov
xlat
adc
mov
insb
or
addl
add
adc
or
push
sbb
iret
mov
sbb
and
ja
aam
fcmovnu
leave
sti
rorb
loope
inc
loop
jle
cmp
xlat
xor
xor
inc
xchg
and
popf
xchg
fidivrs
pop
aas
out
sbb
mov
int
pop
subb
rclb
dec
in
cmp
decb
or
hlt
aas
les
lahf
bound
inc
pop
addb
sub
inc
lret
lods
jp
in
mov
cld
dec
add
data16
cltd
cmpw
aas
pop
push
jne
aaa
inc
sahf
mov
jg
sahf
rcrl
mov
mov
movsb
aad
xor
mov
xchg
test
jecxz
fs
sub
or
jb
or
lret
pop
cmp
mov
pop
jns
sub
sbb
das
push
mov
popf
xchg
test
push
scas
gs
lock
test
loop
andb
enter
push
aaa
outsb
add
inc
sbb
mov
sub
sar
inc
add
pop
arpl
daa
dec
dec
mov
dec
push
scas
pushf
push
adc
je
out
sbb
iret
pop
add
jge
or
mov
out
or
mov
movb
add
in
xchg
cmp
lahf
jno
lcall
xchg
outsl
lret
ret
pop
add
pusha
adcl
fcoms
cmp
lret
out
and
iret
arpl
push
or
xor
jbe
push
and
mov
aaa
int
js
iret
sbb
or
xor
jns
rorl
jge
movsb
pop
movsb
in
aas
fwait
xlat
jecxz
mov
cmp
sbb
adc
jb
outsl
repnz
or
xchg
push
jg
lahf
add
jg
mov
or
addb
cs
inc
pop
mov
lea
inc
add
pop
mov
loop
xchg
iret
push
lcall
aam
or
fsubrs
das
ljmp
in
xchg
jne
and
fwait
pop
dec
dec
ljmp
daa
daa
out
outsb
sub
jg
outsb
xchg
inc
out
inc
or
jp
adc
mov
mov
ret
xchg
popf
lds
je
sbbb
pop
cmpsl
sbb
cmpsb
jne
rcrb
int3
fidivrl
pop
xor
adc
lock
lods
add
adc
cs
sbb
adc
movsl
lods
and
imul
push
mov
mov
cli
out
cwtl
call
outsl
popa
adc
xchg
out
ljmp
jle
std
mov
loop
dec
mov
mov
pop
imulb
in
rcrb
push
loop
mov
pop
dec
jecxz
and
test
pop
push
pop
rcl
mov
pop
repz
pushf
or
or
shll
sub
inc
ds
das
bts
cmp
mov
or
fcoms
insb
push
aad
bnd
mov
push
sbb
fisubrl
lcall
dec
dec
fldt
outsb
mov
dec
ficompl
outsb
loope
aas
iret
pushl
sub
xchg
add
xchg
clc
loopne
jb
xor
int
test
push
jmp
rcrl
adc
inc
insl
in
xchg
push
mov
cmpsl
push
out
sub
and
pop
cmp
adc
mov
clc
mov
rorl
imul
lds
xchg
sti
xchg
mov
inc
cmpsb
push
push
xor
xor
pushf
aad
das
xchg
add
add
leave
pop
dec
ret
fistps
cwtl
xor
add
cli
xlat
push
ja
xor
fcomps
stos
insl
jecxz
push
pusha
cmp
ss
jne
rclb
inc
sub
adc
xchg
out
or
and
mov
dec
dec
scas
rcrb
dec
imul
cmpsl
push
mov
mov
stc
adc
mov
push
arpl
andb
push
dec
and
cmp
cli
xor
jl
test
or
insl
sbb
inc
push
add
imul
nop
lds
outsb
lea
push
mov
push
dec
jle
shlb
pushf
rolb
movsl
shrl
mov
jmp
adc
push
movsb
or
cmp
int3
cmp
mov
fidivrs
push
sbb
cmpsl
jecxz
mov
mov
lret
test
pop
jns
mov
testl
adc
mulb
out
leave
jl
sbb
push
sub
ret
jl
test
test
aaa
addr16
mov
jl
aad
stos
movd
xchg
int
adc
shll
ret
xchg
mov
imul
sub
ja
fnstenv
xchg
xor
xchg
movsl
fstpt
mov
mov
mov
test
adc
push
out
lret
and
cmp
call
test
xor
mov
mov
mov
loop
sbb
dec
xor
nop
sar
or
xor
add
adc
mov
mov
push
xchg
mov
imul
lahf
mov
jns
sub
std
pop
push
sub
cld
add
cld
mov
adc
dec
ljmp
ja
aas
cwtl
mov
mov
stc
insl
inc
lock
jp
test
add
jne
pop
inc
pop
jmp
push
rcrl
fcoml
daa
inc
adc
inc
stos
mov
pop
pop
imul
cmp
rclb
outsl
fisubl
xchg
push
sub
sub
test
sub
pop
jae
ret
iret
jns
test
jb
decb
fs
ret
out
lods
mov
jmp
popf
xchg
xor
mov
cmp
jae
add
stc
loopne
fwait
cld
dec
flds
mov
in
fldl2e
dec
mov
das
aam
sbb
ss
dec
cmp
jno
push
std
sbb
movsl
cmpl
jae
sbb
add
test
cld
imul
hlt
xchg
xor
mov
leave
or
mov
mov
test
aaa
sub
add
sub
jp
dec
adc
cmp
sbb
cltd
pop
ljmp
pop
cld
cwtl
std
mov
or
mov
and
in
ljmp
fbstp
xchg
jo
gs
pushf
xchg
and
inc
and
aaa
je
jo
mov
cld
fldcw
cmp
mov
in
inc
insb
lret
cmc
mov
sub
xchg
xchg
aas
repnz
loope
cmp
outsb
fwait
or
jmp
mov
xchg
adc
and
push
xchg
mov
pop
mov
add
pop
or
cmpsl
mov
xorl
stos
jnp
xlat
roll
cs
xchg
jp
or
leave
xor
scas
in
ror
sbb
cwtl
jge
je
sti
in
jbe
int
cli
clc
xchg
shll
inc
imul
adc
mov
loop
mul
mov
shlb
lahf
mov
adc
imul
sub
inc
ficoml
in
repnz
popf
push
xor
jno
insl
mov
or
sahf
arpl
les
inc
hlt
dec
pop
xchg
out
jne
call
iret
pop
mov
push
lret
cmpb
sub
add
fisubrl
pop
daa
mov
pop
inc
adc
xor
add
ja
jnp
sbb
fwait
into
int3
mov
lret
or
inc
push
xor
push
push
test
pop
sbb
xor
bound
test
lods
mov
or
push
lods
xchg
fisttpll
mov
addr16
jg
sub
cmp
movsb
stos
std
inc
mov
fs
iret
mov
push
rcrb
pushf
xor
lret
stos
dec
push
andl
maxps
aam
pop
in
push
sub
data16
xor
mov
jmp
jle
out
and
dec
test
outsb
xchg
add
flds
negl
mov
mov
lret
out
loop
sub
dec
or
xchg
mov
lea
mov
das
pop
outsb
aas
pop
int3
push
mov
mov
inc
mov
xchg
sahf
and
lahf
and
inc
push
or
popa
sub
lods
jae
adc
aam
shrb
mov
daa
lret
jnp
test
outsb
add
and
cltd
sahf
mov
loop
push
pusha
cs
rolb
mov
inc
cmp
push
adc
jnp
packssdw
mov
in
scas
mov
xchg
push
fwait
or
mov
mov
shl
in
xor
lahf
in
xchg
fcmovu
adc
jg
mov
xchg
xor
ss
jns
xchg
js
cmc
adcl
push
xchg
insb
mov
dec
add
neg
jmp
mov
sti
adc
push
cmp
pop
sub
jecxz
in
jmp
mov
insl
adc
mov
jl
pop
sbb
pop
add
addr16
ret
sub
sub
repz
sub
clc
fidivrs
lahf
jecxz
jmp
jge
pop
pop
lock
int
in
idivl
xchg
xor
jg
hlt
in
add
lret
adc
dec
rcll
sbbl
int3
adc
jne
cmc
test
cmp
pop
or
or
jl
push
sbb
sti
adc
cmp
mov
mov
cs
lock
ret
stos
int3
mov
mov
andl
cmp
cld
or
outsb
mov
rcr
cmp
or
ja
mov
pop
push
or
sub
mov
test
xchg
ds
push
mulb
pusha
or
adc
sbb
repz
ja
mov
aaa
in
out
sbb
fldcw
int
jge
dec
int3
sbb
lret
cmpsb
dec
pushf
iret
cltd
mov
pop
adc
fcmove
ljmp
int
mov
add
jo
stc
cmp
dec
inc
mov
aas
cwtl
xchg
flds
jo
imul
add
xchg
stos
sub
and
dec
and
pop
pop
push
rcr
mov
aaa
sub
stc
fcmovnbe
push
test
rcl
mov
pop
fsubl
mov
mov
add
inc
cld
fsubrp
mov
fistpl
pop
mov
dec
sbb
and
xor
sti
insb
pop
pop
sbb
inc
jp
pop
inc
cwtl
ret
cmp
rolb
cld
dec
xchg
cmpsl
adc
es
xlat
pushf
jp
ja
sbb
ja
mov
out
stos
fldcw
sbb
xor
imul
pop
mov
xchg
ret
mov
test
cmpsl
in
and
push
in
jnp
push
mov
in
lock
mov
jae
popf
adc
inc
rcrl
mov
test
imul
mov
jno
push
inc
mov
sahf
stos
jg
js
push
nop
mov
dec
popa
and
or
dec
and
popf
jl
hlt
fdivrl
jle
mov
mov
push
fdivs
incl
lock
mov
push
popf
mov
hlt
pop
nop
cmpsb
inc
pop
cmp
imul
sub
ffreep
xor
pop
sub
or
dec
leave
fdivs
cmp
cli
xchg
jecxz
inc
cmp
add
adcl
jmp
add
scas
sbb
stos
movsb
xchg
and
dec
daa
xlat
cld
mov
insl
out
xchg
pop
lret
dec
into
pop
test
add
mov
iret
bound
dec
jecxz
call
fs
mov
fcoms
outsl
jle
ja
dec
xchg
pusha
js
notb
mov
test
jmp
cmp
shl
cli
std
outsl
pop
fsubl
xchg
je
loope
inc
add
fs
aam
in
inc
and
push
out
or
add
adc
movsl
cmp
roll
pop
inc
xchg
jb
test
fs
mov
jns
xor
sti
loopne
push
or
sub
xchg
xchg
popa
cmpsb
jg
fsubs
enter
jno
arpl
dec
fwait
xchg
ja
ja
mov
cs
fstpt
push
dec
add
into
test
cwtl
dec
push
js
cmp
pop
mov
in
push
xor
stc
fs
mov
mov
push
shrl
mov
pop
or
clc
clc
je
mov
xorl
jno
and
lahf
sub
cld
ffreep
insb
cmp
enter
arpl
dec
push
push
mov
mov
mov
repz
xchg
xchg
xor
mov
inc
jmp
insb
sbb
add
inc
xchg
imul
and
mov
leave
add
aas
mov
or
out
or
pop
mov
pop
mov
das
xchg
pushf
lret
divl
cs
inc
test
xor
xor
lahf
int
in
std
or
js
fistps
clc
js
repnz
loopne
xchg
mov
iret
mov
pop
outsb
testl
jl
subl
xlat
sub
adc
rcrl
cmp
pop
dec
icebp
sti
push
pop
in
add
leave
add
cmp
cmp
adc
pop
mov
mov
cmp
imul
sbb
sub
sahf
out
xor
test
loope
inc
jb
sbb
jnp
test
sbb
hlt
mov
hlt
ret
cmp
lcall
and
test
and
mov
and
bound
mov
add
xor
shrb
int
mov
pop
mov
pop
mov
dec
adc
enter
fmuls
mov
sahf
xor
dec
mov
lods
jle
and
jge
add
jmp
pop
fnsave
inc
lods
pop
and
xorl
dec
lods
cmp
push
jge
aas
or
xor
inc
aam
pop
iret
mov
fistpll
test
lds
and
mov
jl
scas
jns
mov
mov
xchg
imul
push
sbb
mov
mov
pop
or
sub
btr
add
test
call
mov
nop
fadd
adcl
mov
and
cmp
inc
pop
mov
jmp
dec
ret
jle
add
cwtl
dec
cmp
lods
repnz
outsl
cltd
sbb
icebp
mov
testl
nop
in
or
mov
mov
enter
add
mov
add
jbe
mov
sarl
sbb
subb
sbb
movsb
jo
cmp
ss
push
int
xor
cld
mov
cmp
or
mov
out
xchg
fwait
xor
or
jbe
cmpb
arpl
aam
scas
jl
dec
jl
fsts
jno
and
in
es
test
pop
int
inc
or
int3
jno
fldt
or
push
in
jp
je
cmp
cli
jb
addl
ror
or
adcb
dec
aas
imul
inc
ss
iret
shl
cli
mov
add
adc
sahf
fdivrs
je
daa
cmp
rorb
and
xor
mov
in
mov
adc
add
mov
bound
loope
cmc
cmpsl
scas
mov
dec
es
mov
in
das
pop
aas
lods
pop
out
xchg
cltd
ret
mov
cmpl
into
xor
push
pop
jno
in
sbb
sub
lcall
push
add
iret
push
lods
cmpsb
negb
cmp
pop
xor
out
mov
shll
xor
andl
mov
popa
xlat
adc
mov
sbb
imul
pop
pusha
shl
aas
cld
inc
and
daa
add
shll
outsb
outsb
sbb
mov
aam
and
push
dec
fcmove
jg
fucomi
fstpl
pushf
sub
js
and
int3
leave
nop
mov
adc
cmp
fdivr
lret
cli
jp
cmp
out
ret
mov
jle
sbb
or
stos
mov
inc
pop
jecxz
cld
mov
sbb
and
cltd
mov
cli
sub
mov
insl
xchg
or
data16
icebp
push
mov
mov
pop
cmp
ja
daa
push
and
jp
pop
jne
imul
mov
ror
mov
pop
lahf
cwtl
pop
je
rcrl
xor
mov
mov
mov
mov
js
mov
aam
and
sub
mov
pop
pop
in
cs
in
rol
mov
cli
loop
mov
loope
movsl
insb
mov
cld
scas
and
in
clc
push
cmp
loope
jg
adcb
sub
xchg
stc
pushf
inc
or
sarl
mov
iret
frstor
or
cmp
loopne
test
push
push
popa
ljmp
and
dec
add
sub
cmp
add
test
aas
jecxz
lcallw
sub
mov
mov
push
mov
or
rorl
jns
sub
push
icebp
stc
mov
lds
sarl
cmp
adc
movsl
sub
push
cmp
mov
pop
jecxz
dec
cmp
repnz
outsl
imul
popa
xchg
add
push
or
inc
cmpsl
cmp
mov
int3
fcomip
inc
adc
pop
and
inc
mov
andb
in
mov
push
mov
stc
push
xorb
lahf
xor
pusha
lret
ret
fnstsw
xchg
rorb
xchg
pushf
out
jnp
fiadds
cltd
pop
fcoms
cmc
mov
test
scas
mov
xchg
inc
or
cmpsb
shlb
mov
scas
lret
aad
push
loopne
mov
xor
mov
js
add
rclb
add
add
cld
push
add
mov
add
mov
add
add
mov
push
add
xor
add
push
add
pushf
push
add
dec
push
add
enter
fcoml
add
push
add
add
add
or
add
add
add
push
add
add
add
ds
add
add
add
push
push
add
add
add
fcoml
add
push
add
add
add
or
add
add
add
push
add
add
add
ds
add
add
add
push
push
add
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
add
popa
fs
jo
xor
cs
insb
add
add
inc
jb
gs
imul
je
xor
fs
insb
add
add
push
jns
inc
jb
gs
je
imul
jb
xor
fs
insb
add
add
inc
push
js
inc
add
outsl
arpl
xor
fs
insb
add
add
outsb
add
