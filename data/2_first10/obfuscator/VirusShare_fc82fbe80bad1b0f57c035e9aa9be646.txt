push
call
ret
ret
pop
or
scas
arpl
incl
pop
sarb
mov
lcall
clc
push
gs
enter
aas
adc
in
and
sbb
imul
cwtl
or
mov
nop
mov
orl
xchg
test
mov
cmp
popf
sbb
movsl
mov
lcall
xor
lds
dec
rcrb
dec
clc
push
jnp
mov
jno
jg
jle
cmp
cmc
lods
cs
mov
fdivs
mov
ss
inc
xor
push
mov
std
or
push
push
sahf
jle
xchg
mov
mov
imul
pop
push
lcall
lock
or
lds
lods
jo
addr16
adc
scas
sub
dec
push
pop
xor
hlt
sbb
dec
adc
jae
mov
in
xor
push
push
arpl
fsts
imul
mov
cli
dec
aam
and
or
xchg
sub
cs
movsl
and
repnz
loop
jae
mov
fcoml
in
sbb
insb
push
dec
push
imul
xor
cmp
cmp
cmp
cmpsb
scas
inc
bsr
push
shr
inc
pushf
stos
sbb
xchg
aas
cwtl
push
mov
push
push
mov
xchg
xchg
mov
popf
mov
and
rcr
addb
sub
std
leave
fdiv
fstpt
std
ss
jb
sti
cwtl
lea
ds
or
pop
cmpb
and
lea
cmp
addb
icebp
mov
mov
sahf
in
imulb
ret
xchg
inc
jg
push
sti
xchg
push
test
iret
stc
cld
aaa
and
cmp
fcoms
sbb
mov
fidivrl
nop
je
daa
push
lcall
fcmove
xor
cmpsl
inc
mov
push
jg
push
test
inc
push
jbe
imul
shll
insl
into
gs
push
lea
ret
dec
negb
inc
fistps
cmp
push
pusha
cmp
vpsubd
test
data16
xlat
pushf
and
dec
popf
dec
popf
inc
cltd
popf
mov
jbe
add
jo
lret
push
mov
jnp
hlt
rolb
pushf
sub
outsl
imul
imul
sahf
xchg
sbb
sbb
push
and
and
shl
ret
sahf
movsl
push
int
xor
jnp
xchg
loopne
fwait
std
rclb
mov
stos
pushf
push
movsl
xchg
call
sbb
es
sub
sub
movsb
ljmp
or
js
cld
xor
adc
hlt
mov
imul
mov
inc
mov
pushf
jmp
adc
dec
mov
sub
and
cmp
push
push
popa
ret
icebp
testb
out
enter
movsl
aaa
inc
jecxz
les
lret
aaa
push
push
gs
jne
xor
add
xchg
nop
dec
scas
cltd
mov
iret
sbb
push
aam
xchg
les
add
daa
cmp
jbe
mov
mov
stc
repnz
push
das
cmpsb
je
xchg
add
jb
push
xor
pusha
dec
ja
sti
ds
inc
jns
data16
test
mov
cmc
jne
mov
push
shlb
bound
cmp
enter
sbb
idivb
pop
loopne
push
jnp
cmp
mov
aad
aaa
sahf
fnsave
pop
and
push
mov
data16
out
sbb
pop
test
ljmp
cmpsl
mov
rcll
jmp
add
rclb
popa
adc
mov
push
and
sbb
into
addr16
sbb
and
xchg
adc
mov
inc
cli
push
fsubrs
xchg
or
fistpl
sahf
out
outsb
jo
push
les
ret
lcall
push
jno
or
pop
inc
lea
or
push
sti
add
imul
and
loopne
mov
adc
addr16
outsl
into
pop
roll
mov
xchg
nop
lahf
push
and
in
xchg
fmull
mov
or
pusha
push
popa
inc
leave
or
test
and
push
jp
add
loopne
call
fidivl
pop
or
mov
mov
xchg
leave
and
mov
fists
cmp
xlat
jne
test
movsb
and
scas
sub
fnstsw
pop
sarb
sahf
outsl
out
outsb
adc
jp
add
xchg
pop
sbb
cltd
jo
xchg
mov
daa
ljmp
push
xchg
mov
leave
push
lods
out
xchg
mov
orl
les
rcll
repz
xor
out
lods
hlt
std
sub
push
into
ss
inc
test
xor
aas
test
clc
aam
and
addr16
inc
pushf
sbb
repnz
in
add
cmp
lcall
add
pop
int3
stos
test
mov
pop
dec
mov
out
jnp
mov
xchg
js
pop
cld
and
push
mov
inc
arpl
cmp
movsb
cwtl
mov
ror
jle
or
cwtl
cmpb
clc
fs
add
dec
lret
int
addr16
mov
data16
push
stc
mov
push
adc
mov
sbb
push
push
scas
ljmp
xor
cwtl
jns
cwtl
movsb
nop
ja
push
dec
add
add
mov
cmp
mov
jns
sbb
cltd
loop
dec
ret
out
cmpsl
mov
stos
cs
fxch
add
jge
out
mov
sbb
dec
ds
mov
sbb
rorb
stc
fcompl
insl
add
ljmp
adc
call
int
nop
pushf
mov
push
outsb
mov
inc
jmp
pop
inc
int
js
sub
adc
cwtl
dec
lds
aas
add
cmp
popa
jecxz
daa
es
lret
nop
mov
adc
sub
ret
sbb
es
fcmovnbe
mov
icebp
adc
lods
mov
xchg
inc
cli
mov
pop
movsl
rcrl
hlt
outsb
pusha
imul
std
sahf
and
jno
pop
jnp
ret
jle
leave
or
push
and
hlt
add
fisttpl
in
pop
adc
or
out
push
test
movsb
lea
xorl
out
xor
and
pop
mov
mov
cmp
jns
loopne
xor
and
aam
shlb
outsl
mov
dec
mov
jl
push
jno
rep
rclb
clc
push
xor
push
adc
sbbl
adc
js
ds
inc
jmp
leave
inc
imul
push
jb
inc
dec
jge
frstor
jae
push
cmp
or
mov
push
push
insl
nop
jae
insb
sub
lock
sbbl
xchg
sub
mov
inc
pusha
les
dec
mov
cmp
data16
xchg
repz
jp
adc
je
int3
cli
arpl
pushf
push
mov
fdivp
mov
cwtl
xchg
xchg
clc
lcall
int
xchg
dec
fcoml
mov
int3
mov
mulb
push
cwtl
in
call
and
aaa
xchg
mov
in
insl
orl
adc
sbb
call
bound
lock
dec
fwait
sbbb
jae
jmp
jb
ljmp
sbb
pop
jno
or
cwtl
in
push
fwait
sub
dec
mov
scas
pop
pop
xchg
fisubl
jne
dec
inc
pusha
testl
iret
scas
or
ds
popf
shl
mov
and
loop
lods
mov
pop
scas
xor
aam
push
mov
adc
ljmp
pop
pop
inc
cli
sub
negb
pop
popa
aam
cli
or
popa
mov
sbb
into
test
loop
test
inc
xor
icebp
in
jnp
inc
test
lahf
mov
mov
push
rcl
fcmovu
mov
or
add
mov
pop
mov
xor
xchg
xchg
mull
aaa
jp
ret
std
push
loope
cmp
pusha
mov
xorl
vcvtss2si
ljmp
xor
insl
mov
xchg
or
jbe
push
das
mov
add
ja
mov
fdivl
jbe
mov
add
mov
or
pop
sub
fisttpl
cmc
insb
repnz
cmp
int3
addl
sub
ljmp
aad
test
fwait
xor
dec
push
jbe
pop
mov
ret
rcll
xor
aas
mov
cmp
inc
jb
and
test
sub
push
push
or
adc
xor
lds
dec
dec
in
movsl
aas
mov
popa
jne
sub
and
test
out
jecxz
sti
jnp
mov
shr
push
mov
dec
mov
dec
adc
outsb
mov
in
jecxz
add
mov
push
cmpsl
push
mov
pop
jo
mov
scas
xor
or
sub
imul
inc
testb
mov
sub
push
cmc
dec
loope
repz
xor
ret
xchg
and
into
jle
imul
or
mov
daa
xchg
popa
shll
xor
pop
addr16
xchg
loopne
lea
xor
iret
je
sub
movsl
aam
shll
xchg
and
jbe
aad
jne
lds
shufps
lret
ret
rcrl
push
clc
xchg
dec
lahf
xchg
xor
movsb
in
inc
and
out
sbb
fcomps
dec
mov
cmp
mov
mov
sti
cmp
pushf
adc
cmpsb
fnstcw
sbb
mov
sbb
pop
lret
mull
mov
xor
das
sbb
xor
fidivl
int
fldt
test
in
push
shrl
xor
mov
jecxz
or
fldcw
adc
dec
adc
out
add
sbb
push
push
dec
sub
mov
test
fs
iret
pusha
dec
and
sbb
mov
jge
mov
mov
lock
and
outsb
cmp
das
xchg
jmp
or
cmp
xchg
imul
fnstsw
jg
sahf
mov
dec
lock
jmp
jno
jp
xchg
cmp
push
repnz
cmp
xchg
cmp
loopne,pt
lahf
out
shlb
push
clc
dec
push
aas
pop
adc
xor
mov
xor
or
jne
out
leave
dec
pop
cld
lds
xor
in
and
test
test
mov
fildll
cs
aas
lods
mov
jecxz
cmp
jecxz
mov
mulb
or
xchg
mov
inc
sub
xchg
call
sbb
mov
in
pushf
leave
inc
xchg
lea
and
int3
and
sub
mov
xchg
xor
rolb
mov
inc
leave
jg
out
shrb
sub
in
int3
lret
fnsave
sbb
shlb
mov
cmp
pop
stos
lods
lock
and
dec
shll
adc
xchg
sub
jmp
cmp
cmp
subl
lahf
fldcw
in
scas
sbb
cmpsl
inc
mov
lock
add
ss
mov
clc
stos
enter
mov
jecxz
inc
les
mov
pop
pop
push
xor
test
jp
jmp
mov
aad
sbb
inc
add
mov
andl
push
sub
xchg
xchg
rorl
sbb
inc
dec
jp
sub
movsb
lahf
push
shrb
into
aad
sub
stos
sbb
aad
cmpsb
in
jnp
mov
ffreep
lret
sarl
ja
jge
ljmp
push
mov
cs
insb
movsb
daa
cwtl
mov
sbb
add
pavgw
sbb
push
mov
mov
cmp
lods
clc
sub
dec
mov
inc
adc
xchg
mov
cmpsl
ret
pop
mov
push
fld
stos
xchg
mov
stc
fildl
out
add
aad
and
rcrb
pop
fucomi
adc
imul
outsb
cld
js
cmpb
xor
and
outsb
js
fs
lds
stos
imul
cmc
es
inc
pop
inc
or
adc
or
xchg
push
movsb
cmpsl
dec
cli
xor
xor
lret
ds
mov
lret
inc
mov
pushf
xor
call
pop
rcll
icebp
mov
cmpl
in
cmp
sub
cmp
fimuls
imul
jns
dec
and
inc
loopne
pushf
xchg
adcl
bound
cmc
mov
movsl
loopne
incl
lret
ficoms
into
mov
jp
and
mov
scas
mov
ja
xor
xchg
imul
add
in
xchg
aam
les
and
jae
lcall
pop
jbe
add
cmpsl
mov
xchg
inc
cwtl
cmp
daa
mov
jae
pop
xor
jne
jmp
clc
jge
lods
pop
add
std
sahf
sti
call
jg
xor
aam
inc
lods
iret
lods
rorl
decl
pop
movsb
mov
mov
sub
aad
lret
xor
and
push
adc
in
xor
in
je
mov
xchg
mov
lea
mov
cli
xor
loopne
xchg
in
push
mov
repz
add
inc
notl
or
fistpll
enter
lret
push
inc
lret
fisubs
mov
add
sub
das
push
xchg
add
into
and
dec
aas
int
mov
mov
inc
lcall
mov
inc
in
test
into
lret
mov
mov
scas
dec
idivl
pop
test
repnz
ret
jle
loope
dec
clc
dec
lock
sbbl
ficoml
in
xor
or
out
xor
arpl
xor
xor
sub
movsb
sub
sub
pop
inc
inc
and
out
repz
je
adc
adc
fcmovb
jecxz
sub
adc
sub
xor
add
push
push
das
pop
bound
mov
mov
add
or
adc
pop
xor
or
cwtl
mov
repz
dec
cmp
lcall
outsl
lods
cmp
hlt
cmp
adc
inc
add
cmp
rcrl
mov
mov
adc
fstl
div
stos
sbb
and
jle
inc
icebp
inc
enter
mov
hlt
xchg
xchg
sub
and
add
aam
fld
adc
imul
into
in
xor
cli
pop
pop
push
lock
je
test
mov
and
lret
sahf
insb
sub
jo
mov
cmc
clc
and
inc
xor
clc
adc
and
loope
sahf
iret
mov
fs
jge
out
jecxz
leave
imull
scas
push
jo
int3
testb
fidivl
or
xchg
jg
jecxz
test
xchg
inc
push
les
or
ret
inc
js
or
lea
inc
cld
pop
and
rorb
xchg
or
mov
rcll
fsubrl
mov
fstl
xchg
cli
push
cmpsb
or
inc
inc
mov
aas
adc
mov
lock
xor
insl
imul
mov
mov
or
test
dec
sbb
test
and
mov
pusha
push
mov
mov
sub
aas
movsl
jl
sbb
adc
mov
ret
jb
in
cltd
pusha
add
shll
out
rorb
lret
aam
xchg
cmp
add
clc
clc
push
cli
jmp
xor
jmp
jbe
sbb
push
lea
pop
pop
das
push
xchg
dec
test
push
stos
inc
lock
shll
cli
jecxz
subl
push
lds
shll
insb
lret
sbb
lds
fs
dec
or
xchg
xchg
inc
pusha
outsl
fucom
dec
push
imul
mov
ljmp
inc
ds
lahf
jp
jnp
xor
std
pop
loop
stc
xchg
sbb
scas
sub
mov
inc
cmc
and
sbb
fdivrl
push
and
sub
sub
cld
sti
mov
sbb
mulb
push
inc
pusha
repnz
sub
push
add
mov
mov
pushf
cmpsl
mov
add
aaa
and
mov
or
jmp
hlt
lret
stos
ds
mov
push
cmpsb
ss
add
imul
inc
mov
push
div
adc
jae
cmpb
lods
loop
test
pop
jecxz
insb
mov
ret
outsl
cltd
lods
repz
mov
outsl
addl
das
sub
push
adc
jno
mov
adc
cmp
jno
or
loope
xor
dec
xchg
repnz
out
in
ror
sbb
mov
in
xchg
subl
jle
nop
test
xor
int3
test
mov
cmpsl
int
mov
adc
hlt
flds
pusha
sti
dec
call
jb
into
out
sbb
movsb
scas
xchg
loope
jg
jl
hlt
lcall
iret
mov
ret
lret
jge
ficoms
inc
jne
cmp
repnz
dec
adcb
jl
daa
inc
cltd
or
movsl
or
dec
stc
fs
push
mov
jb
or
daa
fsubl
lret
lea
sbb
lret
and
push
idivb
jmp
dec
add
icebp
lea
mov
js
scas
leave
or
cmpsl
shlb
add
cmp
test
jg
inc
or
xor
shlb
ret
adc
out
mov
addl
sub
sbbb
std
rcl
xor
test
mov
insb
lds
mov
inc
xor
addl
or
adc
xor
and
fidivrl
sub
push
xchg
push
add
or
sub
scas
jae
pop
pop
cmp
les
xor
divb
stos
lods
das
iret
sub
and
mov
je
push
cmc
jnp
mov
or
pop
int3
loopne
aaa
mov
stos
xchg
mov
xchg
idivb
daa
repnz
mov
imul
aaa
test
cmc
xchg
adc
jge
sub
mov
movsl
dec
push
jp
clc
pop
inc
mov
lods
fxch
mov
leave
flds
scas
call
fistps
mov
jo
cmp
cmp
movl
stos
jg
stos
dec
shlb
test
adc
jo
mov
or
pop
scas
push
jbe
sbb
jge
push
or
push
pop
pop
aaa
lret
fwait
cli
and
test
addr16
or
js
lock
jb
popf
xor
jecxz
push
push
xchg
out
inc
bound
jae
movsb
inc
mull
adcb
in
mov
popa
stos
adc
fnstsw
fisttps
scas
inc
or
pop
iret
outsb
jmp
push
les
popa
imull
orps
xchg
js
dec
ficomps
pop
out
inc
fdivrl
sub
jne
fs
daa
adc
push
xor
xor
add
out
fnsave
push
xchg
xor
in
and
or
repz
cmp
add
sub
loopne
cmp
mov
js
pop
add
ds
shrl
out
hlt
pushf
push
mov
fmull
lahf
fs
in
adc
pop
imul
arpl
jnp
enter
jo
lods
dec
ds
loope
mov
je
mov
arpl
fcmovne
popa
jo,pn
pop
add
add
cs
cmp
mov
add
dec
mov
cmp
cmp
imul
fisubl
jp
in
mov
jmp
aaa
inc
xor
cmp
jl
push
addr16
mov
sbb
jae
lea
lods
scas
cwtl
dec
cmpsl
cmc
or
icebp
outsb
daa
ficoms
or
stc
lahf
cmp
out
add
or
cmp
jle
lret
push
dec
es
sub
std
mov
and
jns
pop
jl
outsl
insb
repnz
adc
in
dec
cmp
jo
mov
dec
in
inc
pop
notb
std
or
push
or
fcos
jmp
ljmp
cmpsb
inc
lods
jno
int
inc
decb
cmpsl
lcall
jecxz
in
or
arpl
out
aas
dec
aaa
mov
push
je
or
mov
dec
fcomi
pop
mov
mov
jg
bnd
icebp
adc
negl
mov
sub
repnz
icebp
sbb
adc
inc
divl
pop
inc
mov
dec
call
ja
cld
ljmp
jge
push
xchg
adc
add
outsb
stc
push
inc
popf
fwait
jo
loop
pop
js
push
mov
sbb
jp
adc
aam
xchg
shrl
sbb
dec
addr16
push
cltd
adc
or
mov
das
orb
ss
mov
mov
aaa
xor
xchg
mov
sub
push
int3
mov
xor
or
cld
xor
int
clc
or
test
add
cmpl
sbb
adc
mov
sbb
idiv
add
add
in
xchg
dec
mov
out
test
scas
cmp
std
hlt
or
or
ret
sbb
ljmp
sbb
repz
scas
push
int3
mov
out
daa
and
xchg
or
mov
out
add
in
ss
ret
jo
jg
imul
aas
jp
xor
sbb
jnp
mov
dec
push
mov
jo
pop
ficoml
xchg
mov
sahf
jl
cmp
lret
sub
pop
inc
cmpsl
mov
fdivl
ret
push
sahf
out
out
xlat
cld
dec
push
cs
mov
dec
mov
jle
popf
jp
movsl
jae
sbb
or
jbe
inc
xchg
sub
mov
adc
push
shrl
sub
pop
pushf
xor
mov
arpl
aad
xchg
cmc
out
inc
xor
jo
int3
imul
pop
arpl
xchg
fstpt
stos
xchg
mov
sub
clc
sub
insb
es
lret
daa
test
add
or
pop
jnp
insb
ljmp
ja
stos
aas
aaa
cmp
dec
dec
jl
int
cmp
jmp
and
mov
cmc
mov
dec
xlat
and
pop
sbb
rcl
cld
dec
xor
into
mov
mov
xchg
pop
loope
bound
fmulp
lods
stc
das
ret
jle
pop
xchg
orb
not
xchg
mov
adc
jns
in
addr16
jne
xor
pop
pop
adc
xor
mov
inc
and
mov
jne
fldenv
out
scas
sub
cmpsb
inc
ret
test
add
inc
stc
and
pop
and
outsl
push
push
inc
adc
pop
dec
cwtl
pop
xchg
pushf
enter
adc
cmp
push
xchg
daa
pop
cmp
leave
lods
adc
sub
mov
cli
xchg
jmp
pusha
mov
jle
cmp
jl
imul
cli
or
fstpt
jbe
sub
adc
call
add
and
jae
mov
mov
dec
mov
mov
push
les
pusha
pop
decl
sbb
push
frstor
fldcw
and
test
sahf
mov
mov
fadd
popf
dec
mov
arpl
cltd
notb
aas
adc
inc
xorb
add
lahf
iret
mov
cmp
jl
lods
inc
fs
movsb
in
add
bound
icebp
ds
pop
xlat
mov
or
pop
sub
mov
popa
out
adc
repnz
cs
movsl
jb
mov
subb
addb
popa
es
movsb
aas
out
mov
hlt
push
rcr
xchg
sbb
das
push
mov
cmp
add
sbb
or
fwait
fs
push
jbe
mov
add
sbb
shr
cltd
cmp
dec
add
push
popf
mov
and
push
cmp
or
dec
mov
es
and
enter
mov
cmp
jno
add
xchg
addr16
cltd
mul
jns
pop
les
inc
rorb
jecxz
aad
cmp
les
fnsave
js
call
cs
and
loop
fucomip
out
pop
mov
mov
addr16
cmp
repz
repnz
push
inc
adcl
mov
shll
jbe
fisttpl
jne
in
in
lock
ds
xchg
add
cmp
aas
mov
adc
push
sbb
sbb
out
addr16
dec
add
jg
cmp
lret
cmpsb
mov
rcrb
std
pop
sub
cld
jnp
fisubrl
cld
out
mov
sbb
jae
faddl
mov
enter
mov
pop
or
out
or
mov
lods
pop
cld
sbb
bound
mov
push
pop
popf
push
jae
and
add
mov
mov
mov
mov
outsb
lcall
test
mov
add
push
les
sub
cwtl
sub
xchg
add
push
sub
dec
dec
adc
and
dec
sbb
fs
fwait
imul
pop
andl
sub
cwtl
test
out
mov
adc
inc
mov
push
mov
in
adc
sbb
inc
and
sub
xchg
decb
mov
push
pop
mov
inc
data16
scas
adc
jbe
pop
cmp
xchg
in
repnz
jo
adc
fcmove
dec
sbb
mov
daa
jmp
pop
fdiv
sbb
rcrl
push
rolb
lahf
mov
mov
pop
ds
cli
mov
xchg
test
stos
and
dec
ret
loop
inc
hlt
push
cs
call
cmp
fidivl
xchg
neg
jg
fcomps
xchg
dec
cmp
push
test
das
cmp
sub
jl
sub
test
sub
push
dec
dec
enter
int
push
out
shr
arpl
in
add
add
cs
test
mov
popf
mov
cmp
fnsave
inc
lds
stc
pop
iret
ljmp
call
lret
pop
cltd
add
mov
cmp
mulb
and
sub
les
pop
movaps
out
lret
mov
mov
add
test
pop
imul
stos
arpl
addr16
dec
jbe
cmpsb
sahf
addr16
cltd
fimull
xchg
js
pop
fldl
outsb
movsl
data16
mov
cmp
or
test
xchg
leave
sub
int3
and
or
sbb
push
hlt
lea
xchg
arpl
cmp
dec
cmp
xchg
cmp
inc
inc
push
lcall
mov
stos
das
nop
arpl
cwtl
es
or
add
jge
hlt
dec
and
js
into
push
xchg
imulb
sahf
push
lret
inc
lods
push
add
fnstcw
xor
ss
in
mov
dec
pop
idivl
cli
dec
leave
or
cmpsb
sarl
pop
add
imul
mov
pop
mov
or
aad
loope
test
mov
xchg
cmp
mov
mov
lahf
push
call
popf
sub
cli
fidivl
inc
or
pop
in
and
movsb
mov
jne
ss
sub
sbb
dec
push
inc
mov
cmp
ret
cmp
pusha
cmp
imul
fisubrl
jge
fdiv
in
inc
pop
fsts
pop
inc
mov
in
pusha
lret
pop
hlt
fistl
aaa
fwait
xchg
mov
fwait
outsb
int3
outsl
adc
in
jp
dec
cwtl
inc
jbe
dec
cmp
mov
std
jno
pop
cmp
loop
gs
mov
jg
jo
es
mov
mov
mov
mov
scas
jns
aaa
lock
add
lcall
fs
lods
fidivrl
mov
jge
movsb
add
loopne
fcmovnb
cltd
xor
adc
add
inc
mov
cs
loopne
push
inc
enter
push
lods
orb
add
sub
sub
fcompl
jecxz
mov
or
xchg
mov
outsb
int
das
cwtl
fsubr
sub
fs
inc
jo
sbb
popa
push
xchg
loopne
fmull
mov
adcl
je
fs
inc
push
jmp
push
mov
jle
pop
jmp
xor
out
pop
ret
nop
clc
inc
movsl
imulb
aaa
inc
mov
movsl
scas
mov
xchg
popa
arpl
pop
mov
mov
pop
aam
xor
insl
mov
inc
mov
jp
sub
xlat
fists
mov
cmp
hlt
adc
idivb
aad
js
pusha
mov
rcll
cltd
dec
rcll
cmp
mov
sti
and
dec
mov
inc
sarl
cli
push
mov
aaa
cmpsb
popa
inc
test
loop
jmp
cmp
clc
stc
inc
lock
or
cwtl
jbe
das
inc
mov
ja
mov
xchg
shrl
pop
bound
adc
inc
xor
mov
xor
and
scas
pop
ffree
dec
and
pop
lcall
xor
repz
jmp
or
xor
mov
movsl
dec
je
jl
xor
add
pop
sbb
repz
std
inc
lahf
inc
int3
das
push
iret
pop
mov
test
ja
imul
mov
in
adc
sub
repnz
sbb
pop
das
mov
adc
into
in
inc
in
mov
ds
insl
pop
fidivl
inc
out
jnp
inc
xchg
mov
in
aaa
popa
xor
mov
push
sbb
push
movsb
lds
jecxz
sbb
jae
push
mov
or
lds
sahf
dec
mov
push
or
cmpsb
xor
mov
es
outsl
add
iret
scas
das
cld
aam
and
repz
ljmp
int
cmp
and
push
mov
push
idivb
xor
add
mov
push
xchg
popf
xor
inc
sbb
jnp
divb
dec
mov
inc
fistps
lcall
push
ljmp
int
fistl
adc
out
movb
inc
push
mov
jns
jp
sahf
cmp
test
mov
ljmp
data16
dec
sbb
ds
cmp
adc
in
sbb
fmulp
jne
sbb
mov
sbb
pop
fwait
subl
jge
pop
leave
imul
sbb
je
or
mov
aam
push
decl
outsb
jnp
cmp
dec
hlt
movsb
dec
xor
mov
fidivs
inc
xchg
gs
adcl
ss
lods
cltd
sub
or
push
testl
adc
scas
movsb
and
mov
or
orb
sbb
cld
mov
add
scas
mov
cld
je
ljmp
aam
push
add
stc
jb
stos
or
xchg
lahf
jns
js
or
test
and
out
xor
jge
cmp
and
bound
xchg
xchg
add
cli
jg
add
pop
xchg
clc
sbb
aas
dec
mov
scas
or
lret
jmp
mov
pop
aam
sub
and
pop
cli
add
fildll
lahf
lock
add
sub
or
popf
leave
mov
dec
fwait
mov
adc
mov
push
inc
push
mov
clc
or
mov
push
popf
and
jecxz
loop
fsubrp
push
add
pop
aas
xlat
scas
or
xchg
mov
xchg
imul
insb
loope
inc
sbb
outsb
aaa
mov
aad
xchg
sub
lods
ljmp
pop
pop
repnz
stos
adc
pop
jg
pop
xchg
xchg
cmp
adc
pop
or
movl
jg
sbb
and
pop
lea
jmp
xchg
and
pop
inc
jae
iret
lahf
push
xchg
cmp
in
and
imul
cmp
test
int3
stos
dec
lahf
repnz
aas
jge
mov
jp
cmp
lret
leave
xor
xchg
lea
in
xor
xor
xor
adc
pop
xor
mov
dec
call
stos
repnz
or
shrb
rolb
mov
setne
lret
ret
inc
pop
jecxz
and
nop
sahf
sbb
and
xor
and
add
pop
cmp
imul
add
sbb
inc
xchg
xchg
mov
xchg
push
cmpsb
xchg
sarl
test
out
cmp
mov
movsl
notl
cmc
out
or
or
rclb
pushf
aad
repz
repnz
out
push
mov
sub
call
je
push
shrb
icebp
lods
test
fwait
call
mov
cwtl
or
test
icebp
cmpsl
cmp
push
inc
repz
fstps
std
sub
jno
adc
shlb
std
ljmp
jl
dec
push
mov
pop
mov
pop
and
pop
scas
xor
dec
jbe
jmp
mov
push
pop
cmp
fildl
and
push
sbbl
rcr
adc
inc
mov
inc
push
test
je
push
sub
lds
jl
insb
cmp
ret
ja
jns
fdivl
es
in
hlt
jae
or
add
push
mov
test
mov
in
ds
jle
loopne
fcmovnu
dec
repz
xchg
jno
push
sub
shlb
out
add
stc
enter
cmp
inc
xchg
fwait
test
scas
aad
incb
adc
lret
add
popa
sbb
mov
sub
add
jne
outsb
cli
movsl
aam
js
pop
add
cmpsl
in
xor
dec
cmp
push
ljmp
sub
push
lret
inc
out
push
jae
and
insl
fiadds
push
faddl
clc
cwtl
inc
mov
cmp
mov
dec
lock
adc
cmpsb
aaa
inc
rcr
call
add
test
cmp
in
enter
cmp
xchg
sbb
jb
xor
xor
dec
enter
push
out
sbb
cld
stos
xchg
push
cld
xchg
pop
sbb
inc
jle
je
insl
mov
dec
lret
test
xchg
sub
push
xor
fcoml
movsl
mov
push
lret
ja
adc
jb
sbb
dec
iret
dec
xchg
rcrb
loope
int3
outsl
into
iret
pop
add
xchg
push
scas
mov
pop
js
scas
popa
pop
stos
pop
push
les
mov
insl
ljmp
and
je
test
jns
fs
sbb
aas
sub
ljmp
addl
out
das
sub
mov
fdivr
loopne
dec
shll
xor
and
repnz
bound
mov
aad
or
shr
mov
pop
cmc
stc
int
pop
minps
sbb
xchg
pop
call
mov
nop
scas
in
fistps
sub
je
out
insb
adc
jnp
lods
andl
dec
dec
xchg
mov
pop
rclb
and
push
jne
mov
mov
scas
push
xchg
fbstp
sub
mov
mov
sbb
pop
movsl
jnp
mov
sbb
mov
mov
fcoml
pop
xchg
cs
xlat
or
fbld
inc
cmp
ljmp
cwtl
push
dec
mov
enter
jp
loop
sti
insl
test
hlt
mov
mov
jmp
push
cs
cmp
add
das
adc
mov
dec
push
cmp
lret
inc
pop
jg
jns
mov
jp
xchg
jbe
pop
imulb
add
pop
push
mov
mov
sbb
pop
xlat
in
sbb
aaa
mov
aad
mov
xor
rorl
adc
fistps
or
push
call
pop
push
js
addb
fldt
test
xchg
mov
mov
or
jo
dec
outsl
mov
jns
xchg
fldcw
or
ss
sbb
les
push
pop
and
popf
mov
into
inc
ljmp
push
lods
mov
jbe
aas
roll
push
push
dec
ja
repnz
es
push
xchg
pop
xchg
dec
adc
notl
pop
mov
jne
adc
mov
mov
xor
mov
in
mov
test
mov
negl
mov
ja
add
mov
loopne
push
inc
add
mov
aad
roll
clc
xchg
and
cmpl
mov
pop
jb
mov
push
jg
inc
fstpl
fs
out
jns
movzbl
stos
imul
lods
out
lods
sbb
add
push
cltd
insb
mov
stos
shlb
out
repnz
mov
aaa
and
shr
icebp
in
adc
daa
ja
fmul
push
inc
jmp
adc
mov
mov
adc
adcl
or
inc
jnp
jb
xchg
lret
inc
lret
sbb
aas
sbb
outsl
dec
mov
lods
insb
pop
fwait
mov
lcall
jp
inc
xchg
out
push
shlb
sbb
jmp
and
shll
cmc
jl
sarb
movsl
jbe
xchg
imul
jbe
rcrb
xlat
xor
jmp
in
and
scas
pop
rclb
test
add
es
enter
dec
js
xchg
das
scas
mov
repz
sbb
xchg
stc
pop
mov
cltd
cmp
cmp
aad
sbb
sbb
adc
mov
mov
xor
xchg
or
push
stc
xchg
mov
mov
fsubl
or
das
xchg
in
pop
xor
jns
in
dec
ret
push
out
push
cld
movsl
loopne
outsb
and
push
sti
fmul
cmp
inc
andb
int3
mov
test
xchg
xor
dec
ret
fidivl
data16
in
sahf
add
mov
jmp
mov
xchg
mov
xor
push
lods
rcr
sub
adcb
adc
aaa
cmc
ss
cltd
or
xchg
or
dec
popa
jg
or
orl
mov
pop
xchg
mov
mov
cmp
jo
xor
mov
mov
mov
ss
nop
cmpsb
outsb
enter
xchg
cmpsl
out
xor
movsb
or
cmpsb
lods
add
jge
sbb
add
jle
movsl
add
adc
mov
cmp
movsl
mov
jbe
and
jl
mov
test
pusha
addr16
cmc
xor
push
xchg
pinsrw
jl
fistpl
adc
pushf
jmp
imul
and
add
aam
sbb
adc
filds
lods
pop
aam
pop
sbb
or
or
fldl
mov
inc
mov
ljmp
or
loope
roll
ljmp
mov
inc
dec
xchg
jge
pop
inc
aam
sub
out
xor
and
sbb
mul
sub
ljmp
pusha
repnz
adc
data16
cmp
jo
jmp
outsl
xchg
xorb
rorb
fstl
jecxz
add
int3
mov
cld
cmp
andl
pop
fsts
adc
das
rclb
jno
fbstp
inc
mov
pop
or
jae
xor
sub
sub
add
ss
mov
inc
mov
and
lock
ljmp
fsubr
and
in
les
jp
cmpsb
fidivrl
mov
rol
js
daa
xchg
xor
fiadds
pop
mov
fadd
fists
push
push
inc
sahf
mov
xor
fistps
fisubs
jecxz
inc
pop
mov
push
idiv
inc
mov
sarl
jns
subl
and
lret
pop
lds
jge
mov
ds
cld
xchg
orb
dec
mov
es
cmc
sahf
scas
popa
jg
adc
lcall
daa
cmp
popa
jge,pt
test
stc
cltd
xchg
sbb
jg
or
stos
xlat
mov
out
repz
mov
shr
pop
cmpsb
ret
and
xchg
add
dec
sbb
adc
or
adc
push
push
ret
xchg
idivb
mov
sbb
and
mov
dec
add
mov
ss
push
lods
dec
scas
stos
mov
inc
int
mov
xchg
in
sub
fimuls
or
sbb
hlt
stos
mov
enter
aaa
insb
test
shl
rcrl
pusha
push
sub
dec
or
rol
lods
inc
cli
test
xchg
movsl
popa
leave
stc
and
test
ficompl
mov
sti
call
sbb
repz
mov
pop
push
test
ja
leave
bound
testb
call
xor
sbb
and
pop
shlb
pop
sbb
mov
mov
or
push
pop
sub
lahf
movsb
adc
lcall
testb
les
and
cwtl
pop
scas
stos
sbb
ror
je
or
pop
outsb
jne
mov
incb
shl
test
pop
mov
fidivs
rcrb
ret
test
inc
pop
idiv
js
inc
fcompl
fnsave
repnz
push
push
cld
cmc
adc
push
aaa
cwtl
push
or
adc
push
jnp
adc
mov
inc
fnstcw
xchg
sbb
xor
fnstenv
jmp
sbb
adc
lcall
call
or
imul
ret
lahf
push
cmpsb
mov
xchg
mov
inc
xor
xor
mov
xchg
repnz
loope
mov
mov
mov
cmp
xchg
sbb
jg
push
aas
cwtl
pop
xor
sbbl
repnz
aad
sbb
push
js
sbb
lcall
cltd
pop
fdivrs
xchg
addl
int
inc
jle
pop
sub
lar
sbb
pop
jp
xchg
xlat
pop
push
jae
xchg
push
mov
leave
mov
insb
inc
add
sbb
pushf
or
dec
cmpsb
jno
jbe
mov
lea
insb
xor
adcb
jl
movsb
lods
jo
adc
notb
push
xchg
inc
nop
adc
test
or
fists
movb
out
pop
xor
xchg
aad
cmp
mov
std
pop
mov
sbb
jo
add
mov
jne
and
inc
inc
aam
mov
fwait
cli
adc
mov
rolb
enter
sbb
sbb
repz
or
pop
push
inc
pop
call
lret
outsb
pop
sbb
movsb
int
test
mov
cmpsl
movl
mov
nop
jb
ret
ja
pop
lods
inc
sub
xchg
jno
fdivs
adcb
rcrl
xor
xchg
and
and
rcrl
test
and
and
mov
xchg
xchg
ret
xor
hlt
sub
lea
and
call
jle
jb
movsl
gs
xor
out
mov
scas
cwtl
cld
mov
cwtl
lcall
dec
cld
movsb
icebp
pop
sti
add
dec
lock
cmpsl
or
xchg
jbe
jmp
cmpb
jmp
mov
cwtl
push
cmc
negl
bound
into
jl
and
in
lea
ja
notb
movsl
sahf
outsl
cmp
add
inc
les
popf
lds
cli
imul
pop
inc
sbbb
jmp
subb
scas
stos
daa
aad
rcrb
sbb
js
mov
pop
mov
push
xor
stos
xchg
sub
adc
or
sbb
cmpsb
mov
xchg
mov
aas
ret
fwait
adc
test
push
dec
xor
ficoml
stos
jbe
hlt
cmp
inc
enter
cltd
inc
testb
std
pop
push
ds
mov
push
aad
sbb
mov
lret
mov
sbb
xor
aas
push
dec
and
xchg
cltd
lods
or
cli
shufps
mov
repz
xchg
pushf
fmuls
je
insl
in
jnp
push
or
adc
cli
ss
push
repnz
mov
sub
imul
pop
mov
sbb
cmp
sbb
popf
sbb
imul
imul
xor
push
jo
push
mov
pop
data16
xchg
insb
jns
or
or
or
cmp
insb
mov
fists
out
lods
sub
add
test
lahf
ret
neg
and
out
scas
out
in
imul
leave
imul
adc
repnz
mov
mov
push
jmp
add
add
cmp
js
sbb
mov
adc
dec
pop
adc
adc
mov
cmc
xorb
mov
outsb
xchg
and
cld
fiaddl
inc
out
sbb
pop
mov
stos
pop
clc
or
test
aam
int3
jbe
jne
mov
std
rolb
out
les
xor
inc
jmp
pop
in
cmpsl
or
pop
add
xor
sti
adc
xchg
push
scas
xor
cmp
or
in
mov
adc
popf
subl
outsl
mov
mov
cmp
repz
cmp
jle
pop
pop
mov
push
enter
pop
ss
push
mov
or
aam
xchg
xorb
imul
mov
pop
insb
sub
ret
lock
rorl
loop
push
cmp
jne
cs
nop
mov
push
out
es
add
int
int3
dec
into
adc
inc
push
push
fldt
jl
mov
sub
add
add
inc
icebp
int3
lahf
aaa
mov
inc
jg
pop
movsl
stos
nop
xor
adc
imul
imul
aas
mov
xchg
fadds
push
aas
jns
divl
and
mov
out
dec
jmp
pop
cmovne
push
mov
mov
mov
push
dec
xchg
gs
sbb
cmp
je
sub
adc
scas
jb
push
lahf
jmp
sbb
sbb
mov
fistpll
jmp
loop
loopne
push
push
xchg
cwtl
cli
movsb
mov
mov
jmp
inc
mov
shll
inc
and
inc
add
dec
add
outsb
or
arpl
jnp
call
dec
cld
pop
inc
outsl
movsl
and
lods
add
inc
test
pushf
pop
and
and
cmp
into
inc
adc
pop
jb
pop
or
popf
vmovupd
insb
or
jnp
mov
or
lock
rcrl
or
mov
ds
cmp
lds
fwait
cmp
sub
cltd
stos
cmpsl
mov
jg
daa
adc
enter
inc
faddl
stos
nop
mov
or
movsl
jmp
xchg
jge
stos
and
xchg
addb
mov
push
dec
sbb
enter
xor
shrb
add
clc
sbb
mov
gs
push
push
push
mov
out
cli
add
aam
into
lods
push
fs
xchg
jno
loop
mov
pop
jg
inc
insl
mov
dec
fs
loope
mov
loopne
xchg
mov
roll
imull
fmuls
pop
das
gs
imul
sbb
rclb
adc
fsubrl
pop
push
xorl
or
test
cs
ljmp
test
popf
jno
sub
fidivrl
mov
xor
std
lea
dec
pop
leave
shrb
test
addr16
xchg
mov
push
mov
dec
pop
dec
sbb
sbb
push
adc
and
mov
xor
mov
push
in
push
xchg
pushf
jecxz
mov
ss
or
outsl
cmp
adc
addr16
iret
sahf
mov
fstpt
adc
gs
cmp
jbe
in
shrb
test
and
aam
pop
out
sub
aaa
ret
push
and
or
sbb
andb
mov
insb
push
movb
loopne
aam
pop
push
mov
xlat
cmpl
mov
imul
idiv
fisttpll
aad
cmp
jbe
dec
mov
hlt
fdivs
daa
rcll
or
jns
jecxz
mov
test
pop
aaa
addr16
dec
aam
jbe
push
cmp
repz
lret
sbb
inc
popa
les
sbb
adc
xor
in
xchg
inc
xchg
popf
dec
adc
cmp
xor
stos
das
out
push
xor
mov
or
dec
xor
cmp
insb
mov
mov
inc
in
sub
xor
aam
ds
xchg
cmpsb
lock
xor
icebp
jecxz
adc
push
sbb
outsb
rorb
jne
lea
pushf
sub
and
pop
and
jb
cmp
or
std
xchg
mov
sbb
out
leave
sahf
in
addr16
push
pop
arpl
sub
loop
inc
cmp
fstps
stos
loope
adc
pop
jbe
inc
cmc
and
cli
lods
lock
je,pn
mov
jle
lcall
pop
cmp
call
or
mov
push
sub
add
in
std
push
movsl
aas
insb
ljmp
or
gs
shll
lea
sti
daa
jbe
movsb
fstpt
out
int
dec
out
mov
sbb
sbb
or
mov
push
add
jb
push
ret
cmp
sti
rcrb
inc
fidivrs
sub
outsl
pop
pusha
dec
jae
push
jo
mov
aam
or
mov
inc
xor
xchg
fldt
das
xchg
jecxz
fsubs
mov
dec
fwait
idivb
xchg
movsl
imul
pop
sub
jb
inc
push
std
lods
js
test
pop
xor
mov
sahf
push
cwtl
jno
jl
mov
mov
fildll
in
push
cmp
mov
or
inc
and
and
jmp
jmp
and
dec
or
into
and
jl
shlb
lcall
xchg
fdivrs
adc
mov
rolb
mov
xlat
lds
jge
mov
cmpsl
jae
dec
cmp
fcmovne
add
cwtl
jge
shll
sbb
stos
mov
int
dec
adc
sbb
mov
jb
arpl
inc
dec
inc
xchg
in
shll
dec
int
push
push
inc
or
test
bndstx
punpckhwd
xlat
imull
scas
dec
sub
js
shll
jo
dec
adc
and
cmp
xchg
insl
aam
add
xchg
mov
xor
pop
repnz
js
dec
inc
mov
adc
mov
sbb
push
mov
pop
mov
nop
or
loopne
jno
cli
das
clc
fidivl
fs
pop
fstps
orb
adc
clc
scas
cltd
ljmp
jnp
inc
pushf
and
lock
imul
sub
repnz
jnp
jp
xor
lods
icebp
add
cmp
mov
rorl
xchg
ss
fidivrl
mov
mov
fbld
outsl
rcll
lea
mov
push
test
lret
mov
jp
dec
dec
add
jb
adc
and
pop
mov
jle
testb
pop
popf
out
jnp
shrl
push
inc
test
xor
fidivrs
push
cmp
cwtl
mov
int3
pop
out
mulb
cld
into
shlb
push
jmp
andl
mov
sbbb
aad
stos
xchg
dec
inc
cld
loop
pop
xchg
or
and
out
xchg
shll
arpl
das
adc
lret
mov
out
jbe
popa
push
stos
roll
in
divb
jns
jl
adc
je
jecxz
xor
add
xlat
mov
cwtl
jp
out
mov
rol
fnsetpm(287
ljmp
ja
adc
mov
or
sub
cmp
shlb
mov
vmread
dec
ret
cmp
lods
xchg
pop
pushl
mov
outsb
lahf
out
sbb
cmp
dec
adc
jle
sbb
push
sbb
in
int
push
lock
jbe
aas
mov
or
inc
xor
pusha
lock
je
aam
mov
xchg
mov
lods
xchg
mov
mov
ret
xor
xor
imulb
faddp
jb
lret
es
lea
bound
mov
or
push
js
mov
add
inc
push
pop
xchg
or
loope
fcmovb
and
mov
push
mov
lods
jnp
mov
mov
push
mov
fisubrs
pusha
sti
mov
out
mov
std
out
lret
lock
xchg
mov
icebp
xchg
mov
mov
ljmp
inc
mov
scas
dec
dec
cmp
negl
and
mov
loop
pop
leave
icebp
mov
pusha
outsl
and
mov
das
pop
daa
mov
lret
out
or
sbb
fidivrs
stos
sbb
int
pop
push
mov
rcll
mov
inc
inc
repnz
xchg
xlat
icebp
jnp
mov
into
sbb
int3
cmp
pop
pop
inc
push
dec
add
shl
xor
test
pop
jo
push
mov
push
xchg
fdivrl
nop
mov
sub
or
jge
xor
int3
ss
mov
cmp
jae
inc
imul
xor
nop
dec
imul
es
pop
sbb
ret
and
cmp
xchg
fdivrl
test
insb
movsl
xor
xchg
push
jo
test
cli
and
xchg
jecxz
and
insl
test
in
xor
mov
sahf
jmp
out
push
mov
loop
adc
or
das
hlt
je
cmp
out
pop
insl
mov
sbb
mov
dec
mov
xchg
add
pop
clc
lahf
das
push
test
fistl
push
ljmp
rep
enter
mov
push
xchg
dec
push
mov
dec
jl
jg
das
insl
push
mov
das
test
roll
cmp
jg
lock
push
sbb
sbb
addr16
decb
lds
push
jb
mov
fwait
sub
stos
or
cmp
sahf
adc
notb
pop
and
jle
aad
sub
test
pop
xchg
lods
push
outsb
or
and
in
das
loope
ret
sub
pop
jne
sub
fcmovb
int3
out
stos
xchg
fsubrs
aas
ljmp
pop
leave
lods
movsl
push
jl
cmpl
xor
add
scas
inc
pop
aas
sbb
pusha
js
pop
pop
fstl
jno
rcl
icebp
cmp
out
jmp
mov
movsb
mov
jl
or
lock
mov
jmp
daa
and
mov
sub
xchg
xor
sahf
add
ficoms
push
out
popa
sub
xchg
lss
cwtl
insb
mov
mov
lret
dec
pop
lar
push
jne
fdivrl
xchg
into
add
repnz
jbe
and
out
jecxz
in
xchg
ret
sub
pop
lods
in
inc
jne
mull
or
push
fnstenv
sub
pushf
rcrb
dec
cmp
sbb
mov
cmp
and
mov
lea
jb
outsb
lea
sub
daa
inc
sti
aad
mov
dec
loope
aam
stc
mov
dec
enter
test
ja
xlat
sub
lahf
pop
into
or
inc
jbe
jge
enter
int
mov
popf
imul
out
jns
cld
jg
sub
aad
loope
or
mov
jno
xchg
arpl
ret
or
push
test
stos
aas
mov
lods
dec
xor
aad
test
cwtl
push
add
out
insb
les
mov
adc
push
fmull
gs
pop
jl
lock
mov
xor
fstps
pop
mov
data16
pusha
adc
jmp
in
mov
test
repz
jge
lea
shl
lods
fiadds
dec
pusha
in
pusha
pop
pop
nop
jbe
loopne
arpl
push
xchg
test
and
xchg
adcl
inc
mov
adc
idivb
sarl
mov
cmc
incb
xor
jae
daa
clc
mov
dec
jecxz
inc
dec
mov
adc
push
dec
or
jne
dec
xchg
daa
push
movsb
jns
sub
mov
cmpsl
or
jb
sub
jnp
xor
dec
dec
jle
negb
jl
sbb
lcall
pop
scas
xchg
inc
xlat
lret
push
test
mov
inc
pop
jno
add
jg
test
or
mov
ret
adc
mov
push
and
jo
jns
popa
ljmp
pop
dec
add
inc
jp
stc
call
or
dec
lahf
nop
fimull
dec
sbb
js
int
jbe
pop
adc
jmp
mov
sbb
jl
clc
dec
adc
dec
aas
data16
pop
fimuls
fnsave
bound
neg
test
cli
js
inc
aam
mov
dec
ret
aas
lcall
pop
inc
sub
notb
fsubrl
mov
in
test
out
xchg
push
iret
mov
push
rcll
scas
out
jo
xchg
aam
rcrb
xchg
movsb
sti
push
int3
xchg
add
lret
iret
cld
add
xor
loope
aas
mov
js
inc
xchg
fnstcw
fcmovb
lea
mov
icebp
mov
xor
inc
sub
mov
jne
test
aam
cmp
call
cvtdq2ps
pop
out
adc
mov
push
mov
adc
cli
out
or
incb
imul
je
dec
sbbb
inc
ret
loop
mov
pop
daa
fwait
pop
popa
jo
dec
fstpl
into
inc
mov
cmp
inc
sbb
and
sbb
ret
pop
mov
es
cmp
insb
ljmp
pop
into
cmpsl
pushf
lret
mov
mov
fstpt
inc
mov
inc
cwtl
jns
xchg
popa
mov
lock
inc
mov
mov
inc
adc
cwtl
jb
push
outsb
mov
jg
push
jno
push
add
xchg
jae
sahf
sbb
jg
jne
xchg
pushf
mov
jg
add
xchg
sub
cmpl
and
xchg
data16
aas
cli
push
insl
sub
cmpsb
daa
sub
bound
icebp
fidivrl
nop
xor
jge
adc
outsb
ds
cmpsl
cmp
js
xchg
es
push
test
fsubp
mov
inc
sbb
jnp
mov
popa
fmuls
sti
negb
or
sbb
pop
sbb
enter
rcll
dec
dec
jp
jecxz
insb
mov
jb
or
test
xor
mov
test
mov
push
push
push
in
inc
mov
loope
sbb
cmpl
and
sti
std
dec
push
mov
adc
push
int3
pushf
adc
movsb
popa
mov
push
repnz
xor
stos
sub
test
or
leave
mov
inc
mov
push
xchg
shll
sub
add
push
or
push
xor
arpl
jecxz
sub
es
test
insl
mov
bound
mov
jae
loopne
cltd
adc
mov
pop
jp
out
inc
jg
outsl
dec
adc
push
in
or
nop
leave
push
ffree
orl
push
fisttpl
xor
xor
popa
inc
sti
test
mov
outsl
cmc
sub
push
xchg
pop
stos
cs
ret
ret
sbb
mov
repnz
inc
inc
movsb
cmp
mov
sub
out
mov
and
xchg
dec
sub
aas
pop
or
andb
lret
jns
loope
pop
dec
push
pusha
lea
test
popf
pushl
fdivs
rdpmc
jp
adc
push
dec
outsl
mov
and
jmp
shrb
adc
push
lret
das
jmp
xchg
shlb
sub
push
mov
jns
es
ficompl
sar
scas
outsb
and
adc
mov
daa
adc
int
out
inc
add
loop
adc
jl
or
out
dec
xchg
cmp
mov
shr
jae
fidivrl
mov
lea
es
aam
cwtl
std
lahf
and
jb
and
into
and
movsb
scas
insl
jne
dec
hlt
testb
repnz
adc
jae
pop
je
dec
xchg
enter
xor
dec
loope
imul
sub
jecxz
fwait
add
and
mov
in
jo
push
or
inc
scas
out
jno
adc
js
inc
lds
cltd
sub
popa
out
jle
cmc
pop
and
mov
pop
dec
js
push
ret
push
jno
ret
fstps
or
clc
f2xm1
dec
out
loop
or
adc
cmp
pop
push
push
ret
dec
jmp
mov
sbb
xlat
pop
sub
loop
and
push
mov
jns
fisttpl
xor
fldt
leave
mov
pop
fwait
sti
repz
add
sub
loop
out
jecxz
and
cmpsl
adc
gs
rorb
insl
sub
insb
ja
movsb
add
inc
pop
adc
cli
lcall
pop
and
mov
jle
imul
jge
inc
ffreep
repz
jle
cwtl
in
mov
mov
mov
aam
push
mov
mov
sub
mov
icebp
sub
dec
mov
fwait
cmc
and
faddl
pop
lock
dec
daa
cltd
mov
cmp
sbb
and
mov
jae
lcall
cmp
cmpl
cmp
dec
jp
push
cmp
sbb
xchg
pop
pop
ret
xchg
sub
xchg
add
jno
adc
sbb
jne
fstl
push
and
push
popf
pop
aas
in
mov
dec
out
and
or
aaa
cmp
arpl
jnp
sub
lahf
fidivs
mov
push
outsl
lret
push
adc
inc
cld
insl
push
cmp
fldt
cmpsb
testl
add
movsb
fbld
fidivs
test
pop
pop
sub
push
test
rcrb
cltd
rclb
scas
push
pop
loop
cmp
mov
push
pop
popf
cmp
sbb
jecxz
js
cmp
push
sbb
xor
imul
xchg
repz
adcl
gs
lret
hlt
push
aaa
pop
ljmp
adc
das
pop
dec
js
inc
testb
and
rcrb
sub
mov
mov
imul
mov
das
shl
ficoml
pop
insb
inc
pushf
and
jne
outsb
sbb
dec
cmp
xor
pop
add
lret
cmpsb
sbb
mov
imul
mov
push
or
dec
mov
dec
int3
jmp
mov
or
mov
and
nop
mov
mov
rol
xor
lea
mov
push
mov
cmpsl
popa
stos
pushf
mov
orb
and
lods
xchg
mull
testb
sub
xchg
cltd
xchg
mov
mov
and
add
lods
sub
imull
lods
stos
dec
sub
or
repnz
mov
jle
in
sbb
dec
movsb
xchg
arpl
add
nop
mov
lea
scas
clc
imul
shlb
popf
sub
jg
mov
add
ja
hlt
jno
sub
xchg
cmpsl
xchg
or
push
adc
cmpsb
inc
popf
shll
clc
push
insl
mov
sub
jbe
cmp
push
push
ret
pop
xor
mov
xchg
incb
scas
scas
cs
movsb
iret
clc
jmp
pop
mov
sbb
gs
flds
iret
mov
add
dec
or
in
adc
fnsave
popa
lcall
je
inc
pop
sub
int3
iret
or
inc
xchg
cld
in
pop
inc
daa
lea
jle
fnsave
fwait
push
ja
loop
js
add
pop
jmp
lods
adc
jb
jno
mov
outsl
add
dec
gs
xor
mov
and
sahf
dec
mov
mov
mov
and
lea
mov
jno
in
stos
out
push
sbb
cmpsl
pop
mov
dec
xor
hlt
stos
xchg
lods
jo
mov
and
cmpsl
aaa
pop
inc
add
push
arpl
jo
adc
fs
mov
jecxz
shll
fst
les
sub
dec
pop
push
ret
mov
adc
nop
mov
cld
push
jl
jno
cmp
fisubl
lock
xabort
adc
pushf
jecxz
and
xchg
cmc
clc
mov
rcrl
or
or
andl
insl
data16
sbb
aas
push
ret
dec
mov
xor
sbb
xchg
push
mov
xchg
jno
mov
cli
test
pop
push
jg
inc
mov
mov
or
sbb
push
xor
dec
mov
add
push
fldenv
pop
inc
push
pop
or
sbb
lods
inc
pusha
ret
imul
ja
dec
push
out
int
sub
inc
push
push
cmp
mov
rclb
cmp
sub
or
xlat
lods
lahf
mov
mov
jmp
inc
popf
mov
imul
lahf
pop
jge
cmpsb
push
in
and
mov
inc
push
mov
cmp
adc
pop
push
and
jp
and
loopne
jmp
mov
rclb
inc
in
cltd
stc
inc
fadds
addr16
xchg
cmpsb
es
push
push
pop
adcb
inc
push
ret
icebp
push
sbb
sbb
lods
das
xchg
and
out
mov
imul
lock
and
inc
push
aaa
popf
leave
lds
or
mov
enter
mov
jnp
repz
jae
ret
mov
xchg
cwtl
and
test
js
js
xor
fwait
cmp
sub
mov
fdivrl
cmp
rcrl
xchg
pop
shll
xor
push
fists
adc
daa
mov
xchg
aam
lock
xor
mov
adc
mov
cmp
iret
or
lock
pop
shrb
dec
popa
repnz
add
mov
pop
adc
xchg
mov
inc
push
add
and
mov
adc
add
mov
das
pop
pop
repz
fstps
adc
xchg
jmp
and
ror
push
mov
push
cltd
sbb
push
in
arpl
mov
sbb
cwtl
hlt
stos
push
push
in
sub
mov
inc
mov
fsubs
or
loop
ret
test
sbb
loopne
inc
adc
push
rcrb
mov
movsl
sahf
jecxz
xlat
aas
stos
pop
push
repz
addr16
pop
shl
mov
xchg
sbb
xor
bound
jae
ds
fldcw
aas
mov
push
jge
hlt
cwtl
sbb
popl
mov
pop
mov
ret
mov
insl
lret
inc
push
stos
xchg
mov
adc
add
in
push
cs
and
ret
sub
in
pop
ret
push
scas
cli
mov
add
les
or
push
cmp
push
pop
stc
mov
jbe
adc
pop
leave
pop
pop
cmp
sub
cmp
mov
push
push
in
imull
jae
xchg
sti
aad
inc
push
pop
dec
jae
insb
mov
fistpl
push
in
cltd
xor
call
movsl
mov
sub
push
dec
iret
or
push
aas
bound
sarb
sarl
insb
inc
push
cmp
mov
jge
jmp
jo
sbb
lds
repnz
mov
inc
pushf
push
sbb
repnz
fcoml
stos
mov
rcrb
lret
pop
mov
mov
or
or
movsl
mov
and
shll
or
inc
jbe
dec
mov
jb
fcomps
andl
adc
std
daa
pop
out
out
enter
and
sub
or
fildll
mov
sbb
ds
repnz
dec
xchg
xchg
addr16
js
xlat
mov
and
orb
inc
jg
and
rol
inc
cwtl
pop
push
sti
scas
push
outsb
xor
xor
xlat
ss
fnsave
cmpsl
lret
add
push
fstps
add
cmpsb
je
sahf
lret
outsb
testb
mov
divb
aaa
inc
adc
outsl
push
mov
stc
je
xchg
insl
mov
add
lcall
shrl
notl
jmp
test
pusha
jmp
pop
mov
cld
stos
insl
ja
jnp
push
cli
movsb
push
ja
loop
scas
ds
xchg
out
fwait
pop
dec
test
mov
cmp
outsl
dec
mov
cmp
stos
mov
pusha
inc
jge
imul
cmpsb
inc
ret
adc
inc
lds
insl
mov
adc
rorl
push
repnz
jmp
mov
mov
imul
or
cmp
pop
jne
movsb
mov
adc
add
sbb
cs
fwait
push
scas
loope
jge
data16
push
xchg
out
xchg
xchg
imul
ds
push
push
enter
fs
pushl
int
into
rcl
pop
pop
jl
xor
stos
xchg
sbb
and
pop
mov
xchg
mov
add
jmp
jno
sub
int3
cmpb
stos
cwtl
xor
out
sub
jmp
mov
icebp
outsb
jl
pop
sub
xchg
mov
rorb
insl
cltd
stos
lods
cmpsl
mov
inc
pop
sbb
repnz
sub
cwtl
jle
cmp
mov
aas
loop
pop
xchg
sbb
inc
jecxz
mov
adc
cmp
xor
sub
iret
pushf
push
sti
pop
hlt
popa
fsubs
and
mov
idiv
inc
adc
dec
sub
sub
pop
fsubrl
aaa
jge
jp
mov
fcomps
push
jae
out
push
pop
jmp
icebp
jg
mov
adc
pop
inc
subl
dec
sub
mov
sub
add
addb
add
test
add
mov
mov
lcall
add
mov
sbb
jno
mov
icebp
pop
lret
xor
sbb
inc
ficompl
mov
pop
in
out
jmp
ljmp
pop
mov
cli
add
leave
mov
xchg
test
aas
outsl
pop
sub
fmull
popl
add
or
les
xchg
push
in
scas
mov
movsb
pop
inc
xchg
pop
mov
pop
mov
insb
rolb
mul
add
mov
pushf
test
and
je
xchg
ret
es
test
cmp
jns
mov
xlat
fabs
pop
in
dec
enter
cmpsb
lcall
ljmp
out
pop
add
adc
adc
mov
je
sarb
js
imul
dec
into
out
sub
cli
lea
fwait
pop
test
sbb
aaa
sbb
push
repz
pop
inc
std
negl
cli
test
cmp
jl
mov
xor
int3
sahf
dec
outsl
pushf
movsb
jmp
imul
orl
daa
pushl
ljmp
xorb
cmp
cmc
ja
test
cmp
jo
sub
leave
rcrl
cltd
fmul
push
aaa
mov
cmp
test
imul
cmp
push
and
inc
sbb
pop
lahf
andb
movsb
add
imul
cwtl
leave
mov
jbe
cmp
push
add
xchg
adc
dec
pop
mov
in
popf
mov
adc
add
jae
mov
repz
mov
iret
mov
in
nop
test
xchg
mov
outsb
test
lods
sub
add
aad
add
and
jb
repnz
mov
iret
cmp
dec
mov
xchg
hlt
xchg
clc
rclb
jnp
neg
subl
mov
dec
pop
iret
movsl
icebp
stos
sbbb
cmpsb
push
xlat
and
fs
hlt
lea
cmpsl
lahf
fnstenv
mov
in
xchg
jbe
inc
dec
mov
fwait
sahf
ds
cltd
add
push
adc
fistl
jbe
xor
cwtl
push
in
xor
mov
fwait
mov
movsl
repnz
daa
pop
insl
sti
inc
pusha
xchg
sbb
in
or
inc
decb
add
add
daa
lea
repz
scas
imul
xchg
loop
iret
sbb
cmpsb
mov
xchg
outsl
fistps
inc
mov
lahf
sbb
enter
mov
dec
push
mov
mov
add
and
clc
roll
test
push
or
test
push
inc
push
repnz
popa
out
sbbl
push
and
fadd
push
pop
out
ficoml
hlt
mov
jns
out
inc
sub
dec
or
mov
stos
out
xchg
pop
sbb
leave
js
sbb
push
stos
sub
sub
cmc
push
jbe
leave
rep
insb
test
inc
pop
xchg
ret
mov
jge
mov
sbb
jg
out
adc
mov
lea
add
mov
push
test
mov
and
pop
sub
xor
and
mov
dec
xor
enter
push
dec
mull
test
adc
dec
sub
mov
push
repnz
or
xchg
mov
ja
mov
aam
negl
adc
xor
jmp
mov
minps
sub
shll
mov
cmp
cmp
cmp
ljmp
mov
pop
jns
inc
jecxz
sbb
dec
call
jle
cli
cli
add
mov
shrl
daa
mov
pushf
lahf
mov
cmp
inc
add
dec
or
add
stos
ret
pushf
cli
dec
outsb
lock
shlb
fistl
hlt
push
inc
lds
and
sub
pop
shlb
mov
outsl
in
rcll
ja
popf
shrl
sahf
lea
and
dec
dec
out
aad
push
pop
jge
xor
dec
addr16
jle
fisubl
pop
push
lock
push
add
aas
in
xchg
pop
jo
xchg
sbb
mov
lcall
aad
inc
mov
or
pop
inc
std
sub
rcrl
cltd
dec
xchg
sub
jb
mov
sub
imul
or
bound
adc
or
cmpsl
or
mov
jmp
mov
mov
jae
cld
ret
push
add
or
sub
int3
mov
add
ficoml
inc
leave
mov
add
pop
test
mov
or
pop
scas
mov
adc
adc
aam
cmp
ja
int
loope
cs
cmp
push
sbb
stos
call
pop
and
ss
sub
jl
dec
icebp
adc
bound
fdivl
int3
jmp
sub
aaa
jae
mov
mov
mov
pop
xor
xchg
clc
leave
iret
je
lcall
pop
or
push
lea
movsb
jae
inc
loop
lock
push
push
gs
dec
mov
mov
cwtd
testl
cs
xor
test
into
inc
test
insb
adc
loope
cld
mov
pop
loopne
cs
stos
test
into
adc
xchg
mov
idivl
daa
or
jnp
pop
mov
and
or
orl
push
jns
outsb
xchg
cmc
popa
das
jbe
mov
lods
repnz
stos
je
call
inc
int
jmp
out
xchg
mov
imul
mov
test
ds
inc
cs
out
test
bound
push
test
stos
and
aas
outsb
je
inc
cmc
out
xchg
mov
mov
jbe
fmull
das
jmp
fstcw
stos
inc
pop
fmuls
leave
stos
mov
notl
arpl
pop
add
cmpsl
adc
pop
mov
cli
inc
xor
in
xchg
push
sbb
sub
add
adc
xchg
das
in
and
mov
aam
test
adc
call
test
cs
and
or
jns
sub
int
in
pop
cmpsl
push
movsb
inc
xchg
adc
ds
mov
arpl
push
lahf
inc
jbe
repnz
imul
idivb
mulb
mov
mov
mov
push
mov
jmp
imul
xchg
aas
push
divl
pop
scas
mov
stos
add
sbb
cltd
in
pop
adc
and
mov
or
adc
pop
push
or
jbe
and
movsb
addr16
mov
fimull
push
mov
pop
jge
out
movsl
sub
xchg
leave
pop
aam
pop
and
repz
push
stc
push
inc
adc
push
int
mov
sub
xor
mov
pop
mov
call
hlt
sub
dec
mov
out
sbb
pop
and
fcoms
fsubl
adc
mov
jne
and
sub
mov
nop
and
cwtl
js
push
movb
and
push
pop
xor
xchg
push
or
out
jnp
outsl
pop
sbb
or
data16
xchg
xchg
mov
mov
imul
xchg
push
sbb
cmp
sub
xchg
add
loopne
je
mov
dec
outsl
xor
popf
inc
jl
cmp
inc
push
jle
fistpl
rcl
fs
xchg
popf
sub
add
imul
mulb
xchg
pop
mov
fstl
add
mov
out
push
pusha
std
scas
mov
andb
jmp
push
ja
fisttpll
mov
emms
mov
xchg
lods
xchg
inc
xchg
add
adc
fildll
jmp
push
js
xlat
cmpsl
jmp
cltd
lret
pop
mov
dec
mov
and
mov
and
xor
mov
mov
sahf
add
push
or
in
xor
nop
ja
push
cmpl
loopne
xor
jl
dec
dec
mov
xor
fdiv
mov
out
adc
add
arpl
xor
addb
repz
adc
arpl
out
enter
cmp
pop
push
push
lods
aam
and
in
bound
mov
mov
int3
pop
push
or
sub
cwtl
or
insb
adc
out
lods
pop
push
gs
sbb
dec
clc
pop
dec
cli
mov
mov
xor
xchg
jl
jb
sarb
cmc
mov
inc
inc
cmpsb
xchg
jmp
cmp
movsl
pop
or
fidivl
and
punpckhwd
dec
xchg
mov
loop
or
fcmovnbe
nop
dec
sbb
test
and
mov
mov
jl
adc
mov
xor
imul
jne
cmp
lcall
or
mov
nop
out
sahf
cmc
lods
xor
push
sbbb
mov
xchg
js
btc
psrad
lods
xor
adc
dec
mov
pop
jbe
add
mov
imul
xchg
xor
jno
dec
sti
stos
jmp
cmpsb
jg
inc
jnp
js
jg
or
adcl
aaa
sbb
jnp
ficomps
pop
call
hlt
and
out
adc
push
loopne
or
push
mov
fwait
push
dec
mov
lcall
fcmovnb
and
mov
inc
mov
lahf
jno
sub
xor
push
daa
xor
int3
sti
ficoms
movsl
push
jnp
jle
push
fcmovnbe
xor
mov
out
dec
adc
adc
inc
gs
jl
ja
in
and
and
push
out
adc
xor
push
leavew
push
iret
int3
or
mov
test
pushf
lea
or
or
lods
and
arpl
add
sbbl
mov
xor
dec
nop
jns
inc
and
lcall
nop
or
jge
add
dec
movsl
std
roll
push
mov
mov
shl
mov
or
lret
inc
dec
jl
test
es
sbb
mov
in
sub
mov
mov
lcall
inc
push
or
lcall
jns
sbb
push
lea
inc
cmp
lock
sbb
sub
cmp
int
xchg
out
std
jno
pushf
mov
and
cs
jbe
inc
jmp
adc
xchg
xor
movb
inc
filds
pusha
or
xchg
cmp
push
leave
jecxz
out
sbb
cmpw
dec
pop
bnd
mov
in
xchg
out
scas
dec
pop
ljmp
xor
push
popf
push
bound
sbb
mov
insl
sti
mov
xor
push
pand
xor
stos
stc
outsl
js
or
sub
jge
test
mov
bnd
mov
mov
loope
fsubrp
xchg
inc
push
fstp
mov
pusha
fisttpl
daa
mov
popa
sahf
xorl
sti
xor
mov
sub
repnz
movsb
xor
or
test
and
mov
push
adc
lcall
aas
xor
xor
pop
mov
mov
jle
xor
mov
fistl
test
insb
inc
scas
fstps
or
mov
sub
clc
scas
push
aas
out
dec
leave
scas
sub
fdivr
mov
mov
add
cmp
pop
sahf
out
hlt
repnz
or
cmp
xchg
cli
or
xor
popf
inc
movl
xor
idivl
and
mov
scas
xchg
out
cmp
dec
sti
leave
xchg
stc
out
adc
sub
inc
arpl
cmp
mov
clc
or
xchg
xor
outsl
mov
inc
loope
xchg
rcrl
rcrl
test
cmp
cmp
loopne
sarl
push
pop
mov
lock
in
aas
mov
test
movsl
push
mov
push
sub
out
dec
jp
adc
xor
mov
stos
push
aaa
mov
cmp
rep
dec
in
cmc
dec
xlat
push
cmp
std
xlat
xchg
out
daa
mov
js
xlat
rorl
repz
das
mov
out
test
dec
ljmp
pop
sbb
and
ret
iret
push
mov
fiaddl
pushf
clc
stc
sub
add
mov
sub
and
int
adc
popf
pop
mov
std
xchg
pusha
or
lahf
push
mov
ja
mov
fldt
in
jl
pop
sbb
inc
out
iret
popa
fimuls
push
stc
fists
inc
mov
popf
add
mov
add
mov
stos
mov
insl
fwait
adc
push
shr
imulb
fidivrs
lods
fidivrs
movsl
mov
clc
or
fimull
bound
mov
cwtl
lcall
out
and
pushf
mov
leave
data16
push
daa
lret
adc
pop
sub
notl
xchg
rorb
push
xchg
sahf
mov
pop
out
imul
xchg
add
nop
push
out
mov
dec
repz
iret
inc
inc
push
add
fstpt
sbb
je
lcall
outsl
test
inc
sarl
lret
xchg
ret
sub
mov
jp
in
icebp
cmp
out
add
xchg
mov
or
lcall
and
adc
scas
popa
mov
mov
fisttpl
jbe
cmp
mov
loopne
jp
test
dec
adc
mov
stos
dec
arpl
inc
imul
sti
in
inc
push
mov
dec
lock
aam
mov
xor
fdivl
xor
mov
rolb
sub
mov
push
shrb
xchg
fistpll
daa
mov
inc
and
popf
shlb
jb
push
popf
cltd
xchg
or
cmp
repnz
sbb
lea
fwait
add
jbe
loop
mov
outsl
push
cmp
dec
add
lcall
jns
add
cmp
cmp
jne
dec
and
or
les
add
dec
and
push
jmp
sub
enter
xor
les
popf
sbb
and
mov
mov
cmpsb
mov
xchg
sub
sub
mov
jo
arpl
dec
pop
adc
sbb
in
jle
sarl
mov
data16
cmp
cmpsb
cltd
and
and
lcall
jmp
dec
movsb
mov
inc
cli
pop
stos
sub
mov
fcomip
cmp
in
xchg
je
jge
notl
cmp
das
repz
sti
or
add
ss
pusha
mov
je
xchg
outsl
ret
add
inc
add
pusha
fiadds
xor
bound
push
test
pop
push
in
repz
cmp
mov
pop
pop
cpuid
stos
and
ja,pt
mov
dec
lods
dec
ss
push
rcrl
dec
push
shlb
movsbl
aaa
pushf
testb
out
push
pop
sbb
push
xchg
sub
mov
and
and
jmp
or
in
in
imul
and
push
or
lea
in
or
cs
pop
add
inc
dec
fstpt
out
sti
xor
mov
idivb
ss
mov
mov
cld
inc
clc
xchg
pop
cltd
push
loope
dec
jnp
cmp
pushf
iret
xor
gs
cs
sbb
enter
mov
cmpsl
xchg
ficoms
jbe
mov
dec
cwtl
or
push
cmc
mov
fs
lret
push
es
lock
out
push
pushf
loope
pop
xor
dec
mov
out
enter
push
dec
push
xchg
aas
jge
mov
cmp
lods
sub
xlat
sub
test
movsl
jnp
mov
pop
cmpsb
insb
fnstsw
repz
sbb
cmpsl
lret
shlb
movb
and
test
lds
cs
int
imul
jp
xchg
jb
insl
mov
jno
pop
mov
sar
std
lahf
adc
sbb
jo
sbb
cmp
add
pop
sahf
adcl
adc
cmpl
hlt
mov
add
cld
and
mov
mov
cwtl
test
jmp
and
outsb
push
cld
clc
xchg
out
inc
movsl
mov
fimull
xor
fstps
ljmp
test
dec
inc
cmp
cmp
dec
decl
sub
repnz
or
xlat
push
sbb
mov
and
mov
cmpsl
mov
push
pop
lcall
xchg
sub
sub
fnstsw
fisubrs
lahf
das
cld
or
jns
and
jno
aad
fidivrl
mov
mov
clc
xchg
mov
leave
mov
fadd
dec
movsl
or
stos
xchg
scas
in
inc
in
push
gs
or
mov
cld
out
mov
shrb
xor
js
push
fmull
sub
push
popa
out
push
in
or
jecxz
push
dec
push
mov
xchg
cld
mov
outsl
cld
icebp
aad
lret
xchg
vpsrad
or
pop
jno
lods
movb
or
pusha
xlat
adc
dec
pop
jl
das
fdivrs
movsb
imul
push
in
loope
aad
pop
add
adc
xlat
fistpl
repz
test
dec
jg
xchg
push
fstps
mov
clc
push
lret
xchg
pop
mov
xchg
ret
fcomps
sbb
push
xor
fs
adc
enter
sub
pop
ss
bound
fldcw
fstps
imul
cli
inc
pop
stos
pop
icebp
mov
xor
add
nop
mov
jbe
sbb
movsl
ja
stos
pop
jg
daa
push
and
frstor
and
jmp
pop
dec
mov
inc
inc
jnp
cmp
loopne
jae
lahf
in
fistps
cmpsl
sub
cld
mov
dec
push
adc
pop
int
aam
fs
out
insl
pop
jp
lret
xchg
sbb
fisubrl
fwait
sub
jl
jb
fs
movsb
mov
in
fisttps
lea
or
insl
scas
cmc
int3
popf
mov
mov
cld
xchg
call
lods
cmpl
adc
cmp
pushf
scas
testl
push
mov
push
jo
mov
or
lock
inc
or
aam
clc
insl
daa
mov
gs
int3
sbb
es
adc
imul
xchg
test
dec
lret
lret
push
inc
int3
test
pop
int
xor
mov
int
iret
sbb
dec
jmp
mov
stos
cli
dec
xchg
cmp
cmp
dec
dec
test
jne
xchg
out
xlat
cmpsb
mov
adc
push
scas
push
fcmovnb
fisttpl
lahf
stos
dec
xor
push
insl
add
scas
mov
inc
adc
dec
imul
mov
or
cmc
mov
sub
mov
in
popf
mov
shrl
inc
aaa
insl
out
shll
push
jle
cs
mov
cmp
out
and
mov
popf
mov
inc
call
and
es
pop
inc
je
sti
ss
mov
jg
hlt
call
pop
push
cmpsb
arpl
mulb
dec
jmp
stos
xor
ja
mov
sbb
cmp
jno
insb
test
sub
sub
xchg
mov
inc
imul
jae
popf
mov
std
nop
stc
lods
and
popf
leave
sub
adc
js
in
scas
add
sub
and
mov
enter
xor
mov
jnp
mov
scas
cmp
insb
xchg
or
mov
pop
dec
int
movsl
add
cmp
or
aaa
iret
jecxz
and
inc
sub
fwait
mov
lcall
mov
pop
movsb
in
mov
sub
daa
jg
or
pop
pop
cs
repnz
lret
iret
lds
xchg
lret
pusha
jae
mov
fcomps
stos
lret
mov
sbb
shrb
sbb
mov
fwait
clc
stos
cmp
dec
lcall
mov
arpl
push
imul
test
in
add
add
push
mov
pop
stos
movsb
stc
aaa
push
push
cmpsb
hlt
jno
les
adcl
aad
idiv
out
ja
rol
sbb
push
stc
ret
mov
sub
pop
sahf
ror
inc
sbb
hlt
pop
icebp
stos
push
ret
mov
xchg
cmp
xor
fldt
and
std
int3
loopne
pop
sub
lahf
roll
mov
popf
enter
mov
hlt
movsl
ss
mov
mov
lds
dec
xchg
aaa
mov
cmp
mov
jp
in
cmp
call
js
push
inc
mov
shrb
jb
ret
and
fisubl
lahf
sbb
jns
cltd
fldcw
imul
andl
jg
dec
dec
adc
pushf
ret
and
sub
cmp
inc
fisubl
jno
iret
cmp
out
notl
mov
stos
imulb
popa
cmp
push
adc
pop
leave
sbb
fcmovnu
adc
mov
addl
xchg
dec
mov
repz
movsb
pop
or
cmp
shll
push
das
pop
dec
xor
sbb
imul
add
mov
ds
lret
mov
dec
xchg
std
fwait
mov
int
xchg
lock
stc
jg,pn
push
jbe
sbb
sahf
or
xor
sarb
mov
fsub
test
ret
sbb
fs
or
pop
test
push
dec
out
out
out
pop
sub
pop
push
or
sub
sub
mov
pop
in
mov
jnp
dec
cmp
jmp
jp
push
dec
adc
adc
and
fbld
inc
dec
sti
int
and
cmp
scas
gs
xor
pop
inc
xchg
loope
imul
mov
xor
jae
or
dec
mov
adc
xchg
sarb
sahf
or
gs
test
or
leave
loopne
loopne
lock
loope
outsl
cld
sub
repz
mov
in
std
jns
push
mov
cmpsl
les
fidivrs
jne
movsl
jns
loop
testb
push
dec
shr
jae
cltd
pop
xlat
rorb
sbb
scas
jp
ja
ljmp
inc
sbb
pop
sbb
inc
out
lret
sub
out
cli
xchg
sub
enter
mov
rorb
loope
mov
sub
and
mov
xor
or
sub
mov
sbb
push
in
test
rcr
dec
sarl
bound
sbb
aam
outsl
call
loopne
sub
push
push
cmp
pop
jbe
push
pop
test
cmp
mov
bound
inc
repnz
pop
lods
ds
sahf
mov
pusha
xor
add
mov
imull
fdivs
mov
ret
movsl
adc
sub
ljmp
jecxz
mov
mov
jge
mov
mov
inc
or
sbb
adc
lahf
fcompl
or
pop
mov
xor
out
jecxz
or
push
and
mov
shrl
rorb
jo
stos
inc
mul
and
push
mov
push
ss
or
aas
mov
icebp
out
nop
mov
adc
xchg
jns
mov
sub
stos
lcall
push
inc
out
sbb
xchg
sbb
arpl
faddp
scas
sub
leave
dec
pop
scas
push
jge
scas
in
adc
shlb
lea
jge
ljmp
and
jmp
adc
ljmp
lret
mov
or
pop
or
stc
jne
and
xchg
add
shll
js
jg
movsl
stos
cwtl
mov
mov
and
cmp
xchg
inc
dec
loopne
adc
jno
push
in
scas
roll
inc
add
cmp
gs
mov
adc
mov
fwait
ss
outsl
js
scas
ds
outsl
cmp
push
aaa
in
xchg
xchg
movl
int
stc
adcl
push
mov
or
fldt
cmp
mov
sub
scas
or
push
add
js
mov
insl
inc
leave
pusha
test
in
ja
jecxz
ss
lods
out
inc
das
inc
lret
rorb
arpl
push
out
cmp
or
ss
nop
sub
cmp
sbb
xchg
or
cmp
adc
add
jnp
and
add
pop
add
push
xlat
adc
or
and
jmp
pop
jne
mov
je
ljmp
sbb
fsubr
test
fisttps
push
or
sbb
sbb
jae
jge
push
mov
sti
adc
outsl
sbb
stos
and
gs
and
pop
and
arpl
mull
pop
test
jb
aad
lock
mov
sub
or
add
xchg
mov
push
js
loop
cmp
mov
pop
loop
xor
in
flds
mov
cltd
push
add
or
in
xchg
sub
fdivrs
xchg
icebp
fwait
cwtl
test
jle
in
js
stc
sbb
loop
movsb
jl
cmpsl
sub
jno
addl
and
imul
fidivs
rclb
aaa
mov
dec
mov
mov
xor
add
and
and
sub
mov
loopne
scas
mov
mov
cmpsl
mov
lahf
sbb
xchg
mov
jnp
outsb
pushw
sbb
pop
xor
lcall
add
push
mov
add
shrb
xor
lret
test
mov
cmp
adc
xchg
or
jnp
ret
cmp
xlat
inc
jnp
rcr
add
or
push
sarb
xchg
pop
int3
in
popf
mov
lahf
jmp
adc
outsl
das
lds
pop
and
mov
sub
adc
xchg
mov
mov
push
xchg
enter
fisubrs
mov
sahf
dec
adc
ret
nop
into
mov
add
pop
jb
jae
add
xchg
mov
fcom
cld
and
inc
dec
cmpsb
scas
loopne
cltd
loope
in
hlt
push
lods
cmpsl
mov
mov
rolb
dec
cs
repnz
leave
rcll
sub
aaa
xor
jge
inc
cmp
aas
xor
lret
insl
cmp
jp
out
mov
cmp
std
data16
or
xor
leave
adc
scas
ljmp
inc
in
loopne
mov
es
andl
dec
cli
add
mov
sbb
push
push
or
xor
fmuls
lods
mov
mov
outsb
jnp
add
test
jbe
test
je
jb
and
adc
push
movb
add
pop
adc
push
push
push
and
jl
cmp
push
mov
inc
scas
cwtl
andl
pop
pushf
repz
push
xchg
enter
mov
fisttpl
and
inc
sti
aas
pushf
notb
add
mov
test
div
jns
jge
je
sub
cmp
cltd
shrl
push
fldt
ficompl
cmp
jl
jmp
lock
mov
sub
mov
cmpsl
hlt
popa
pop
aas
bound
movsl
add
cs
daa
jns
popa
ja
insb
icebp
lcall
les
shlb
outsl
lret
or
testb
mov
inc
jo
and
jmp
std
sub
mov
out
insl
cmp
jbe
or
lret
add
add
lea
in
shl
add
data16
addr16
mov
lods
test
or
push
movsl
lcall
pop
mov
cs
mov
test
js
adc
mov
out
push
stos
out
lea
test
dec
mov
sub
imul
cmpb
rcr
adc
jns
xor
sti
mov
mov
cli
aad
jb
pop
lahf
push
xchg
cmpsb
cmp
and
xchg
les
pop
inc
cmc
js
mov
cwtl
rcrb
mov
lock
xor
nop
jle
loopne
and
fwait
dec
xchg
cmpsl
cmp
jp
cmp
or
or
rorb
lods
inc
cmpsb
xor
cmp
mov
sarb
xor
lret
cmp
adc
lods
nop
popa
outsb
mov
syscall
aam
mov
in
shl
lea
ss
bound
leave
mov
mov
jl
push
mov
jg
mov
dec
movsb
pusha
adc
mov
xor
adc
dec
push
rcrb
roll
push
push
outsb
jno
push
dec
leave
jns
addr16
pop
fbstp
aas
push
mov
dec
inc
push
fldt
or
or
in
fisubs
xchg
cmp
stc
popa
and
push
push
xchg
shll
fs
ja
jl
rsm
divb
add
add
inc
fcmovnu
inc
mov
push
idivb
loop
test
das
mov
int3
push
sahf
sahf
sahf
test
or
pop
mov
ret
jns
add
int
data16
out
loop
int
test
push
pop
jecxz
repz
fdivrl
cmpsb
and
jp
cmc
or
movsb
push
or
cmpsl
sub
daa
inc
mov
xchg
out
jnp
cmp
xchg
fcmovne
jnp
loop
cmp
ja,pn
fcmove
mov
movsb
andb
hlt
lret
dec
push
inc
cwtl
pop
jg
push
xor
mov
out
and
sbb
in
out
cmp
ja
addr16
jmp
xor
adc
sbb
lea
lcall
push
rcll
mov
lock
mov
popf
jmp
addb
cmp
lret
iret
sbb
jae
movsb
mov
or
out
xor
add
dec
inc
lcall
pop
imul
sti
cmc
adc
push
movsl
xchg
inc
cmp
pop
xchg
and
cmp
js
push
jge
xchg
xor
inc
inc
gs
inc
out
xor
sub
dec
ficomps
leave
mov
and
iret
shr
aas
lock
push
sahf
js
addr16
lods
call
clc
push
mul
inc
mov
sti
popf
xor
push
fcomps
imul
push
sub
rclb
xor
pinsrw
pop
sti
push
inc
out
push
int
repnz
xchg
push
int
xchg
inc
pusha
xchg
test
mov
jne
jecxz
push
ss
xor
outsl
inc
mov
ss
popf
push
xchg
filds
sub
push
repz
aas
pop
or
and
sbb
int
imul
loop
nop
mov
sub
in
or
ljmp
aam
cmp
fisttps
adc
mov
push
insb
add
int
test
inc
cmp
sti
push
pop
jb
jg
testb
clc
pop
jb
jne
and
xchg
aad
pop
pop
movsl
push
icebp
cmp
in
add
lock
mov
clc
dec
jae,pt
outsb
pusha
xchg
jnp
fisttps
pop
sar
cmpsb
popa
adc
push
mov
pop
hlt
dec
mov
pop
adc
sbb
and
and
shrl
dec
mov
mov
push
fimull
jl
jnp
add
stos
movsl
mov
xor
push
sbb
sarl
jecxz
repnz
or
cmp
lods
stos
jae
xor
mov
lock
add
push
add
addr16
sub
sub
sub
shlb
xor
imul
mov
xchg
jecxz
sub
push
mov
lods
jbe
xlat
jns
out
enter
out
xchg
imul
mov
xchg
js
lret
lods
jecxz
lock
xchg
hlt
and
push
sub
add
jp
pushl
xlat
xchg
test
inc
and
insb
pop
pop
sub
dec
inc
xor
dec
fisttpl
mov
test
cmp
aad
push
mov
mov
test
push
fbld
mov
ds
sub
and
xorb
jno
jno
mov
jbe
push
mov
mov
dec
insb
cmp
lea
scas
dec
push
mov
pusha
orb
enter
pop
and
and
adc
unpcklps
push
adc
jp
pusha
leave
push
repz
mov
ja
mov
fistpl
jecxz
mov
add
sti
cmpsb
push
and
cmpsl
rolb
call
cmp
and
xchg
inc
stos
ret
js
loopne
js
mov
hlt
cld
loope
mov
nop
leave
hlt
les
xor
stos
add
push
adcl
ret
lcall
sbb
cmpb
jne
daa
xlat
lock
inc
sbb
movsb
xchg
push
cld
inc
push
xchg
dec
into
js
addr16
dec
shrl
loope
mov
ljmp
push
add
fs
cmp
test
rcrl
cli
add
sbb
enter
testl
enter
adcb
or
lret
fstl
cmp
das
jae
or
jbe
mov
sarl
pop
sbb
pop
and
lock
sub
pop
lea
or
or
xchg
pop
rcll
sti
sbb
xor
aam
adc
mov
xor
data16
xchg
scas
imul
xchg
mov
cmp
imul
cld
in
cmc
data16
stc
add
cmc
rorl
addr16
out
or
mov
fs
push
mov
dec
sti
sub
loope
leave
xchg
push
mov
loopne
xchg
stc
lret
ret
into
sti
sub
into
mov
or
jae
aam
sub
es
or
jmp
outsl
sbb
filds
add
repz
mov
add
cmp
mov
push
xorl
mov
cmpsl
xchg
push
sub
jmp
jg
jb
fwait
outsb
pop
daa
sub
adc
jne
mov
xchg
add
or
sarb
adc
scas
inc
rcr
ds
test
mov
pop
add
push
icebp
xchg
push
repnz
outsb
xorl
and
adc
mov
jge
xlat
and
mov
scas
cli
sbbl
outsb
std
dec
int3
sub
mov
adc
mov
pop
hlt
lods
sahf
and
hlt
pop
divb
lcall
cltd
cmc
or
out
cmp
jecxz
dec
dec
pop
scas
fidivs
das
sub
inc
cli
jbe
push
dec
pop
sub
in
dec
lock
fnsave
adc
and
mov
prefetch
or
jbe
mov
add
divb
mov
sub
push
je
sbb
xchg
push
and
cltd
sbb
sub
mov
test
jge
inc
and
sub
mov
and
in
cmp
push
ficompl
inc
add
mov
fwait
pop
mov
mov
inc
icebp
into
push
mov
push
xor
pop
pop
test
adc
les
or
mov
fdivs
pop
add
inc
mov
sahf
sub
mov
mov
out
sbb
popa
jle
f2xm1
cmp
daa
push
dec
insb
testb
clc
sub
fdivrs
push
rcl
mov
fcmovnbe
push
adc
pop
adc
sbb
mov
cmc
test
cs
loop
xor
mov
add
aad
push
adc
in
shrl
dec
in
iret
movsb
imul
data16
lret
es
mov
adc
pop
je
push
imul
mov
mov
or
cmp
jb
fdivrl
sbb
int
dec
arpl
sub
mov
inc
and
inc
sub
rcr
rorb
xchg
out
and
mov
ljmp
dec
mov
popf
add
mov
in
sahf
jo
js
insl
push
add
mov
or
test
push
xchg
ds
or
iret
xchg
pop
dec
cli
jno
stos
imul
test
push
sub
xchg
xchg
mov
movsb
test
mov
test
int3
pop
add
sub
int
xor
orl
xchg
in
xchg
jp
jle
and
push
pop
dec
js
adc
mov
dec
inc
mov
test
and
xor
test
and
mov
pusha
cwtl
dec
stos
cmp
inc
int3
dec
push
hlt
sbb
push
push
xchg
mov
sub
scas
clc
push
stos
outsl
sbb
out
repz
aad
sub
or
int3
jg
push
lock
adc
jb
sbb
cmp
inc
adc
insl
sbb
out
lret
out
icebp
adc
cbtw
and
cmp
cmp
xchg
mov
mov
rcll
add
out
cltd
mov
pop
and
lret
out
mov
stos
xlat
hlt
cmp
shrl
dec
lret
inc
in
fimuls
int
in
pop
cmc
insl
adc
clc
rorl
adcl
popa
std
unpckhps
cli
mov
or
mov
or
nop
adc
test
arpl
ret
cmc
scas
sbb
and
sarl
test
out
test
arpl
dec
mov
fmull
add
imul
mov
xlat
daa
sti
mov
dec
dec
cltd
das
dec
or
arpl
lods
and
mov
xlat
or
fimuls
loop
xchg
mov
loopne
int3
cmp
dec
insl
loope
inc
jmp
cwtl
push
mov
mov
jbe
popf
test
outsb
sub
dec
jl
popf
mov
stc
leave
dec
rcrb
pop
mov
mov
and
repnz
jne
out
gs
dec
sbb
dec
sub
add
fimuls
or
pop
cmc
sbb
insl
cmpb
lret
scas
xchg
cmp
xor
xor
pop
jbe
adc
jle
dec
pop
imul
out
xchg
loop
iret
stc
sub
sbb
dec
inc
cltd
cmp
pop
mov
frstor
lea
imul
ljmp
add
cltd
lahf
xchg
lock
jnp
cs
pop
test
or
add
pop
or
adc
xchg
cmc
icebp
mov
sti
push
xor
cld
cli
jns
inc
ror
mov
pop
xor
jnp
pop
dec
cmp
pop
cmp
xor
sub
ret
push
mov
push
js
test
cmp
pop
stc
xchg
lret
mov
sub
or
cs
ficomps
push
mov
pop
movsb
lcall
push
jecxz
or
pop
mov
int3
cmp
push
xlat
sub
jmp
and
fwait
scas
out
push
icebp
stos
ret
orl
lret
out
sub
cmp
inc
xchg
ret
pop
sarb
xor
subl
dec
add
mov
cltd
pop
out
inc
push
pop
sbb
push
sahf
jecxz
scas
neg
lret
jmp
inc
pushf
test
fwait
or
adc
in
mov
into
repnz
adc
test
ret
hlt
jno
sub
cmp
mov
pop
add
imul
add
out
xor
fcoms
xlat
xorb
ljmp
mov
jb
and
dec
scas
or
lods
lods
mov
ret
adc
cli
icebp
or
enter
sbb
stos
andb
xchg
icebp
xchg
adc
sub
jae
sub
aas
xchg
mov
movsb
jge
pop
mov
xchg
movsl
pushf
or
sbbb
stc
inc
sbb
mov
mov
cltd
pop
arpl
imul
mov
dec
aad
jle
test
mov
test
mov
pop
mov
jl
enter
jg
dec
rol
and
adc
arpl
pop
call
cli
push
lret
testb
xchg
pop
xchg
dec
test
push
in
dec
fdivrs
aaa
xor
cwtl
jnp
sbb
dec
add
mov
iret
imul
xor
jle
and
push
fldt
mov
xchg
arpl
jg
inc
sbb
or
push
push
ret
cmp
insl
cltd
inc
push
or
movsl
out
mov
mov
aaa
insb
push
mov
js
bound
divl
out
lcall
sbbl
std
idivb
test
cld
sbb
push
add
ret
push
in
lret
adc
sbb
push
adc
out
cwtl
xchg
in
mov
mov
int
dec
ljmp
pop
xor
and
adc
and
cmp
sbb
lret
iret
gs
inc
mov
cmp
pop
addr16
pop
mov
insl
inc
cmc
pop
adc
push
lret
nop
jbe
add
sub
pop
and
popa
sbb
inc
lock
rorl
clc
pop
jne,pn
cwtl
xor
xor
outsb
cmpsb
inc
mov
bound
dec
js
pushf
inc
push
sub
imul
sub
cld
mov
push
jmp
or
and
fnstsw
imul
daa
and
aam
jle
mov
in
jbe
nopl
mov
sub
imul
les
scas
mov
or
pop
inc
add
cmpsl
jg
sbb
dec
jae,pn
call
imul
cmp
lahf
sbb
sbb
cmpsl
frstor
fidivrl
jb
adc
add
push
mov
mov
lock
and
out
ljmp
and
add
add
mov
cmpsb
test
es
loope
jg
xor
fimuls
inc
and
jns
hlt
enter
popa
dec
mov
test
leave
adc
dec
repz
sti
sbb
adc
xchg
mov
loopne
mov
cltd
cli
sti
cmp
movsl
and
cmpsb
mov
rorl
loope
inc
bnd
or
or
or
ret
jae
inc
lcall
js
and
xchg
pminub
rcrb
mov
cld
dec
jo
int3
or
fsub
or
fimull
ret
cmpl
add
clc
push
sub
mov
sub
lods
stos
cmp
fimull
dec
cmp
or
push
push
xor
xchg
ret
xlat
outsb
mov
sbb
push
mov
sahf
xchg
in
mov
xchg
inc
inc
xor
hlt
lock
into
int
inc
or
aas
add
call
mov
mov
xchg
addr16
sub
lds
in
or
add
insl
aaa
push
rorl
out
lret
fs
scas
xchg
out
lahf
push
sub
xchg
mov
jnp
push
xor
jb
sbb
mov
mov
cmp
push
cli
outsl
iret
or
aaa
inc
jo
pop
mov
pop
xlat
divl
scas
imul
and
mov
push
and
mov
out
or
mov
inc
test
outsl
cmp
jl
insb
scas
mov
mov
popf
sub
ret
imul
xor
mov
dec
push
lahf
shlb
rclb
pop
insl
cmc
js
dec
call
pop
mov
out
lds
xor
movsl
ja
jno
cmpsb
jo
jge
push
int3
sbb
xchg
jo
out
mov
test
sarb
add
sub
push
sti
fnstenv
and
jne
cmp
inc
push
fwait
mov
stos
sbb
lock
std
addb
jle
lea
outsb
add
popa
or
stos
jmp
cmp
rcrl
test
xchg
or
sub
call
cmp
dec
loop,pt
add
mov
and
loop
sub
enter
cld
cwtl
mov
outsl
adc
das
aas
cmp
insb
jbe
push
add
mov
sub
lea
xor
lock
xorb
fmulp
inc
adc
fmull
mov
push
mov
add
sub
xor
insb
or
inc
mov
xchg
push
js
or
icebp
imul
mov
idivb
dec
mov
or
mov
test
loope
sbb
adc
insb
andl
push
test
adc
insl
sub
jae
data16
dec
jbe
ds
orl
pushf
out
xor
pop
pop
rcr
mov
push
or
add
int
cmc
add
ja
and
int3
lock
xchg
loopne
data16
test
xchg
outsl
xor
fcom
push
jns
pop
stos
ljmp
cli
out
mov
xor
and
xor
pop
adc
scas
fwait
addr16
lcall
mov
inc
and
jnp
into
sbb
adc
jp
mov
insl
cld
jne
jle
and
add
inc
fildl
xor
stos
call
je
inc
mov
pop
jg
scas
ds
inc
cmp
sahf
sub
mov
sbb
adc
xchg
test
lea
mov
int3
and
js
xchg
inc
push
jge
cmp
andl
insb
js
cmp
mov
mov
pop
je
xchg
pop
jge
xchg
push
ret
jle
or
sub
push
xlat
mov
and
lods
push
je
cmp
cmp
clc
mov
mov
mov
pop
loopew
adc
arpl
fbld
lret
dec
out
adc
sbb
xor
jp
cmpsb
fldenv
lcall
push
and
push
sub
mov
push
mov
gs
lock
fnstenv
cmp
popa
bnd
mov
adc
jecxz
lahf
cmpsb
or
jns
dec
dec
cmp
xchg
popf
je
in
leave
fsubr
sahf
in
lods
scas
adc
cltd
outsl
daa
mov
subl
push
ficomps
xchg
lcall
mulb
ja
mov
mov
push
push
push
das
stos
mov
cs
ja
pushf
cmp
int3
lock
icebp
pop
test
xchg
bound
das
cmc
sub
ficomps
push
add
leave
call
sbb
jmp
push
adc
add
js
popf
fmulp
jmp
insl
dec
adc
mov
mov
lcall
daa
lods
test
cs
or
in
inc
add
mov
push
inc
mov
sub
pop
in
hlt
hlt
adc
jae
stos
pop
lret
mov
mov
mov
pop
mov
dec
ret
int3
or
dec
stos
xor
jmp
dec
adc
push
stc
gs
mov
fmuls
ret
dec
movsl
xor
or
sbb
je
pop
fidivrl
sub
sbb
dec
fists
adc
mov
or
call
cmp
or
and
enter
pop
mov
or
add
mov
ret
cmpsb
addr16
cmpb
cmp
in
sbb
sbb
test
aad
dec
cmp
gs
jl
xor
or
fmull
cmpl
js
cmp
stc
scas
jae
nop
push
and
jmp
push
cmp
dec
or
cmp
jbe
ss
dec
cli
mov
mov
mov
ret
jecxz
mov
sarb
dec
xchg
push
cmp
cmp
mov
and
cmp
movsb
pop
cmp
jae
ds
sub
orb
addb
icebp
clc
lods
mov
mov
inc
push
cmp
lret
push
mul
ret
dec
outsl
int
mov
imull
pop
cmp
mov
dec
mov
and
in
add
jae
dec
mov
mov
pop
push
lret
or
push
into
adcl
cmp
into
dec
mov
adc
dec
inc
cmpsl
mov
jp
mov
cli
sbb
js
cmp
push
das
daa
and
jle
or
pop
test
mov
cmpsl
mov
and
pop
je
rolb
out
inc
stos
and
jg
sahf
movsb
jae
clc
ss
scas
push
push
xchg
inc
or
pcmpeqb
xchg
cmp
mov
push
insl
jae
outsl
jbe
andnps
and
ja
imul
mov
ficoml
mov
push
push
mov
bound
int
mov
jbe
sub
cmp
call
jno
pop
xchg
mov
dec
out
add
insl
sahf
mov
faddl
mov
mov
jecxz
subb
xchg
sub
loopne
lret
adc
je
pcmpeqb
fs
mov
icebp
jae
nop
lds
cmc
bnd
testl
mov
xor
ficoml
jg
jne
popf
mov
xchg
push
mov
shl
mov
pop
ja
mov
lock
mov
add
xlat
add
cmp
mov
fistpll
adc
add
push
xchg
jl
add
imul
loope
lods
adc
dec
sub
js
mov
push
lods
or
jno
or
adc
xchg
pop
call
pop
mov
imul
cltd
fidivs
or
lahf
add
rol
xor
out
pusha
sbb
in
mov
mov
pop
scas
cwtl
push
xchg
dec
mov
sub
lcall
lret
inc
icebp
xchg
sub
xchg
adcl
iret
mov
adc
jg
sbb
pop
xor
repz
lea
cltd
lods
ds
pop
inc
xchg
lods
mov
ljmp
xchg
out
iret
test
iret
sbb
xor
pushf
or
pop
push
xchg
outsl
incl
pop
pop
mov
hlt
cmp
int
ljmp
mov
ret
in
nopl
sub
sub
fisubs
push
in
sbb
add
iret
dec
dec
push
adc
notb
push
dec
jl
xchg
adc
or
push
sub
jno
and
cmc
cld
jo
or
xor
push
loopne
inc
jae
movsl
rorb
mov
mov
arpl
push
mov
out
cli
cld
push
mov
insl
pop
sub
jge
mov
into
scas
lret
pusha
push
sub
push
std
loope
xchg
filds
lcall
jo
xchg
out
mov
dec
rol
outsb
lea
xchg
push
in
scas
enter
mov
xlat
mov
push
inc
add
xchg
outsb
adc
pop
int3
cmp
lods
adc
test
lock
mov
adc
add
push
stc
ss
cwtl
jns
push
leave
inc
shr
or
cmp
adc
aaa
fsubl
std
shll
vcvtps2dq
pop
sti
loope
test
cmp
outsb
fdivr
insl
shrl
dec
jo
sub
adc
sbb
mov
test
dec
bound
xor
pop
adc
js
jle
sub
das
bound
jecxz
jmp
dec
gs
mov
roll
mov
fdivrs
test
xor
pusha
sub
inc
xor
test
jno
inc
mov
sub
pop
and
fildll
mov
push
adc
out
jp
push
jmp
test
mov
pop
push
xor
push
add
jb
aam
call
lret
inc
mov
mov
clc
int3
ljmp
mov
lods
sbbl
data16
outsb
adc
les
addr16
and
mov
loope
insb
dec
xor
push
imul
popa
mov
sbb
push
out
icebp
adc
out
jmp
jmp
lods
mov
pop
ja
xor
repnz
fiaddl
fsub
inc
adc
dec
jg
xchg
mov
cld
cmp
ficoms
std
out
push
push
inc
lea
stos
hlt
loope
and
inc
mov
push
js
cld
movsl
pop
sbb
arpl
loope
and
daa
scas
scas
inc
js
je
adc
xor
movsb
mov
pop
jp
pop
inc
mov
imulb
into
jmp
repz
popf
in
mov
pop
nop
dec
fsub
mov
jne
mov
push
lods
aas
rcr
mov
sub
pusha
pop
pusha
adc
repnz
cmp
inc
insl
arpl
dec
adc
call
push
loope
andb
and
jle
mov
aam
sbb
xor
mov
lods
and
ss
enter
popa
sti
mov
pop
sbb
jno
fstps
ljmp
shrl
xor
lret
pop
lea
adc
pop
mov
add
ficoml
mov
pop
or
into
xchg
push
lret
cli
fldl
mov
mov
push
cmp
insl
inc
ret
xchg
gs
inc
stos
inc
mov
xchg
lcall
movsl
or
nop
cmp
xor
in
lcall
test
inc
sahf
fwait
lcall
jns
xchg
bound
lods
and
xchg
lahf
mov
jmp
icebp
out
mov
and
ss
les
xchg
cli
mov
rclb
jbe
pop
sub
xchg
dec
mov
aam
loop
push
in
inc
pop
push
negb
outsl
pop
sub
stc
sti
adc
mov
add
mov
fwait
dec
pop
popa
pop
sbb
push
xchg
pop
xor
out
push
sar
jl
das
sub
insb
popa
xor
pop
popf
scas
cmp
fdiv
out
dec
ret
sbb
and
pop
xor
imulb
xchg
das
push
mov
push
rorl
gs
aam
lcall
dec
pop
iret
adc
sub
je
jae
scas
fimull
xlat
out
test
adc
lds
negb
nop
ss
adc
and
sub
mov
insb
push
ret
inc
push
mov
aad
xchg
and
int
pop
leave
movsl
les
push
test
sbb
test
sub
repnz
pop
inc
add
xlat
aad
sub
repnz
cmp
in
fdivs
jecxz
inc
xchg
mov
xchg
adc
sub
push
inc
bswap
hlt
xchg
or
dec
stc
fldcw
das
push
mov
outsb
cmp
add
mov
incl
aad
and
scas
push
mov
lods
lods
adc
cltd
nop
mov
xchg
fnsave
dec
xlat
adc
add
pop
sbb
adc
push
xchg
jno
mov
jl
lret
inc
cmp
jmp
andb
adc
mov
xor
loope
outsl
and
xor
enter
dec
ficoms
dec
js
dec
mov
fistl
push
adc
pop
and
push
or
mov
test
cld
or
cmp
test
xor
dec
sub
imul
mov
idivl
cs
in
les
xor
cmc
mov
cmpsl
dec
cmpsb
jmp
cmp
inc
xor
stos
nop
xchg
fcmovu
adc
mov
adc
hlt
pop
decb
cld
mov
push
push
movsl
mov
lcall
xchg
xchg
fisubrl
mull
and
fdivl
fstpl
nop
sbb
imul
mov
mov
push
int3
sbb
loop
ficoms
or
dec
sbb
and
add
out
stos
addr16
push
adc
in
sbb
jl
lret
fmul
sub
and
mov
test
lcall
cmp
popf
test
scas
or
cs
jae
cmp
fistps
mov
fsubrl
cwtl
lcall
pop
pop
icebp
push
dec
in
addr16
into
xor
addr16
int3
in
mov
jl
andb
ja
push
jecxz
stos
addr16
xor
mov
lea
out
fucom
roll
jbe
lret
aas
add
inc
cwtl
cwtl
push
inc
out
sbb
jno
lock
xor
insb
nop
jne
adc
push
mov
out
pop
mov
popa
sbbb
scas
mov
je
movsl
fdivrs
stos
sub
and
fwait
mov
fwait
or
jo
shll
insb
repz
sub
sti
roll
mov
inc
adc
hlt
pop
mov
fwait
shll
cli
les
test
mov
mov
push
cmp
mov
inc
jecxz
aam
dec
faddl
jl
xor
sbb
daa
aad
cmp
aaa
in
movsl
movsl
add
jbe
xchg
push
fidivrl
ret
repz
clc
ret
aad
add
stos
xchg
jecxz
das
push
cmpsb
ret
mov
divl
fildll
or
sahf
jge
mov
sub
adc
or
dec
lods
adc
jbe
icebp
mov
stos
rclb
std
pushf
add
out
mov
popf
out
xchg
test
sahf
into
adc
xor
insb
inc
pop
adc
mov
sub
xor
dec
adc
jle
sbb
sbb
and
push
test
ss
mov
into
mov
mov
or
jbe
jmp
je
inc
mov
dec
aam
arpl
outsl
add
mov
subl
shll
movsl
xor
fs
xlat
jns
movsl
adc
leave
call
aam
lret
jnp
in
scas
je
xchg
xor
push
lods
mov
sub
movsl
movsb
cwtl
sub
aad
mov
cmp
cmpl
jbe
stos
jle
sub
push
xchg
cs
int3
incb
cltd
add
dec
ljmp
ficompl
dec
dec
lcall
daa
cmp
in
stos
das
mov
mov
cmp
pop
push
insl
pop
inc
push
and
add
imul
jecxz
shl
xor
test
xor
dec
jno
mov
cmp
pop
js
xchg
dec
popa
out
jp
sub
inc
loopne
push
dec
adc
int3
bound
jb
andl
and
add
rolb
adc
mov
lods
test
sub
push
add
adc
cmpl
movsb
mov
lret
lcall
and
or
sbb
shrl
mov
mov
cmpsl
sub
mov
mov
sub
imul
xor
std
ss
daa
jecxz
jno
add
inc
ljmp
lea
nop
mov
in
jbe
fsubrl
mov
xchg
mov
lret
dec
xor
lcall
ss
fists
stos
js
in
subl
dec
pop
mov
and
or
dec
stos
lock
inc
or
push
fwait
jge
mov
sbb
and
pop
subl
out
inc
or
pop
mov
mov
pop
fcomi
cmp
pop
loopne
or
gs
rolb
mov
cld
daa
les
add
fadds
jmp
cwtl
imul
inc
lret
add
adc
xchg
fisttpll
pop
popa
jne
jbe
sub
rcl
pop
sbb
cmp
fisubl
dec
cmp
mov
mov
aaa
daa
xchg
mov
cmp
jmp
hlt
lret
pop
ja
xchg
shrb
incl
stc
push
sbb
xchg
fsubs
out
mov
mov
and
inc
push
adc
in
enter
stc
or
popf
pop
daa
add
mov
sub
fwait
inc
sub
in
ret
push
cmpsl
add
pop
sub
mov
shrl
pop
je
mov
daa
push
jmp
mov
jge
adc
ds
or
ret
dec
and
rcrl
mov
ja
mov
jge
out
nop
stos
subl
jmp
and
jl
subb
dec
leave
mov
popf
lret
mov
cmc
jge
pop
mulps
add
inc
xchg
das
test
mov
adc
dec
mov
data16
out
sub
mov
mov
pop
or
mov
scas
add
sbb
int
mov
lods
push
ljmp
mov
int
test
inc
jp
xchg
xorl
inc
pushf
inc
sbb
dec
inc
mov
xchg
ret
leave
dec
pop
fs
clc
jl
mov
add
mov
insl
push
int3
sub
xor
xlat
jge
pop
xchg
rcrl
mulb
aaa
enter
inc
pop
xchg
mov
out
mov
cmp
mov
adc
mov
mov
scas
mov
pop
mov
pusha
or
fsubrl
repnz
divb
sbb
cmpsl
leave
cmp
cli
xchg
or
cmpsl
mov
sub
hlt
aaa
fcomp
sbb
cld
push
jae
fistps
addr16
xchg
adc
xchg
out
cltd
pop
mov
fidivs
jnp
pop
xor
sbb
xor
mov
in
or
adc
adc
mov
loope
repz
jg
mov
leave
pop
vmwrite
scas
mov
sbb
inc
clc
xor
rorl
jmp
xchg
or
mov
lock
repz
out
push
jge
mov
mov
push
dec
push
or
les
xchg
cmpsl
cmp
lret
bound
movsl
push
pop
xchg
xor
cs
and
or
xor
shlb
bound
hlt
lods
xchg
mov
push
and
popf
or
test
adc
push
xchg
fs
lret
outsb
add
push
add
addr16
lahf
pushf
dec
sub
sub
popa
pop
out
sub
mov
mov
push
sub
and
test
imul
dec
push
cmp
sahf
int
sub
sbb
mov
int
jl
cmp
rorb
sti
mov
and
call
xor
push
dec
push
cmp
sbb
sub
lds
xchg
xor
insl
loope
mov
inc
sbb
cmp
out
stos
adc
add
jb
jb
ret
push
out
andb
test
mov
popf
mov
aaa
adc
mov
mov
hlt
push
in
mov
pop
rcl
cmp
mov
inc
rclb
xor
pusha
insl
mov
sbb
mov
or
lock
and
lea
mov
jno
cs
xlat
mov
ficomps
mov
pop
push
jbe
add
mov
lock
jecxz
or
test
les
mov
imul
dec
popa
cli
insb
pop
je
fisttpll
adc
push
xlat
inc
jnp
xchg
mov
push
repnz
mov
out
out
shr
ret
notl
mov
rcr
jp
mov
adc
mov
fsubrl
jmp
sbb
push
stc
cmp
mov
popa
add
fisttps
xlat
fdivrs
sbb
pop
test
out
pop
inc
rorb
dec
lods
addr16
test
pop
ds
jecxz
mov
push
mov
ret
adc
cmp
sbb
movsl
in
pop
jbe
pop
inc
out
out
jge
enter
add
cmp
xor
sub
incb
stos
mov
mov
cmp
std
clc
cmpsw
or
bound
imul
push
test
mov
mov
adcb
das
jae
mov
sbb
mov
out
xor
sub
jb
cltd
adcb
add
outsl
popf
div
outsl
sbb
out
xor
scas
loop
js
cmp
push
xor
leave
cmp
and
rcr
sub
mov
push
lahf
lods
fdivrl
shl
pop
mov
cld
rorl
cwtl
mov
aam
push
fwait
sub
sub
xchg
shr
movsb
dec
and
roll
fwait
or
push
stos
in
push
filds
and
mov
xor
sti
icebp
or
test
data16
fucom
adc
out
lahf
and
inc
lahf
ds
cmp
or
pushf
pop
adc
pop
orl
rcrb
xor
popl
cmp
cmpsl
xor
sbb
scas
into
inc
rcll
int
repz
xchg
pop
scas
ret
dec
add
add
fnstcw
sahf
pop
pop
inc
mov
sbb
daa
mov
pop
and
out
mov
aad
aam
arpl
cwtl
add
movsl
xchg
aas
shrl
or
adc
mov
paddusb
test
shr
cmpsb
test
lret
je
out
push
and
cmp
imul
cmpsb
sub
jb
imul
mov
adc
movsl
push
dec
xor
mov
nop
in
hlt
data16
push
mov
cmp
lods
or
adc
fwait
jne
stos
dec
sbb
push
jbe
or
ljmp
loopne
push
cwtl
into
xlat
fisttps
sub
ja
jbe
jbe
sbb
dec
pushl
push
xchg
add
arpl
aaa
push
cld
add
in
xchg
lea
mov
cmpsl
push
sub
pop
sub
xor
lock
ljmp
mov
jbe
jp
lods
inc
xchg
icebp
rcrb
pop
out
mov
cli
test
decl
cmp
cwtl
fstpt
cs
inc
daa
jns
or
adc
cli
frstor
fldl
lock
mov
cwtl
pop
xlat
negl
dec
push
ds
pop
pop
mov
pop
pop
push
int
pop
mov
vmread
xor
ret
inc
movsb
popa
or
sbb
cli
stos
cltd
or
push
jecxz
sti
lcall
shlb
dec
xor
inc
imul
push
shr
mov
popf
dec
mov
or
int
hlt
mov
movsl
push
in
mov
lret
js
fisttpl
adc
cmp
mov
imul
or
je
mov
sbb
imul
xor
jb
dec
test
push
insl
loopne
scas
xor
sub
jnp
insl
nop
jbe
iret
cmp
mov
mov
loopne
dec
and
mov
xchg
out
popa
out
int3
aas
sub
sub
mov
insl
adc
mov
ljmp
pop
fidivrs
cwtl
repz
popa
in
xchg
dec
xchg
and
sub
popa
es
clc
in
call
out
xor
mov
movsb
call
sti
sub
cltd
popa
test
dec
cltd
jecxz
mov
pop
cmp
outsl
dec
in
xchg
cmp
lock
notl
push
push
mov
mov
add
push
icebp
mov
jne
sbb
cmp
cwtl
loop
inc
xor
adcl
xchg
fnstcw
xor
shrl
inc
jb
iret
mov
mov
jp
out
mov
daa
arpl
sub
mov
xor
mov
sub
das
arpl
repnz
add
and
xorb
in
pop
in
iret
pop
jns
fcomip
test
pushf
push
dec
pop
pop
mov
ljmp
xorl
pcmpeqb
call
mov
mov
dec
cmc
jg
ficompl
int
roll
popl
push
into
xor
cmp
cmp
xor
cs
pop
sub
pop
jp
test
sub
enter
jbe
jns
stc
pushf
and
dec
adc
fincstp
lahf
insl
sbb
aad
xchg
dec
hlt
call
popf
scas
idivb
hlt
jmp
scas
aad
in
sbb
push
lods
sub
mov
cmpsb
aas
push
push
lcall
xchg
mov
fadds
cmp
mov
inc
stc
pop
dec
fimull
sti
ja
fistpl
lds
rcl
mov
push
stos
btc
pop
jmp
jae
fists
lahf
push
les
mov
test
and
into
mov
dec
int
and
dec
rclb
push
lcall
loope
popf
inc
lret
mov
cltd
mov
leave
adcl
dec
pusha
adc
jae
sbb
lea
mov
jne
xor
jmp
jmp
xlat
dec
test
call
xor
outsb
sahf
cmp
ds
loop
or
mov
sbb
adc
rclb
aaa
stos
dec
insl
push
test
inc
lea
xchg
dec
xchg
int3
xchg
cmpsb
add
xchg
aaa
jg
push
or
es
jo
jecxz
cli
sbbl
sar
mov
decl
mov
pop
mov
or
insb
mov
aaa
rcll
pop
enter
adc
out
hlt
mov
call
rolb
adc
jb
lea
jae
ret
xor
xor
ret
ja
jb
jg
mov
sbb
iret
loop
test
mov
mov
push
xchg
sub
iret
addr16
dec
cmp
repz
stc
pop
jecxz
lods
into
inc
test
test
jmp
pop
mov
and
repz
ljmp
jnp
add
pop
flds
add
mov
sub
push
ja
int3
cltd
cmp
imul
and
inc
popa
push
imul
push
jmp
fisttpl
roll
sbb
cmpl
xor
jb
lods
mov
lock
loop
mov
mov
and
nop
cmpsb
jmp
fisttps
mov
jge
leave
push
inc
pop
mov
inc
pop
testl
adc
adc
outsl
sub
lcall
orb
cmpsl
dec
jge
inc
lock
mov
adc
push
jmp
popf
mov
pop
fsubrl
add
mov
dec
add
inc
ds
jle
xor
leave
out
dec
lods
or
xchg
jns
xchg
cmovns
mull
push
arpl
loope
mov
scas
jmp
xchg
cli
mov
inc
push
push
filds
dec
ret
jl
jne
dec
out
cwtl
xchg
sub
pop
leave
dec
mov
lss
pop
push
ficompl
std
fadds
xor
or
mov
or
xor
cld
imul
sbbb
mov
pop
dec
mov
inc
sub
mov
mov
lcall
pop
pop
shl
pop
push
stos
mov
pop
jno
rcrb
je
or
stos
into
daa
outsb
stos
mov
push
and
or
lret
jecxz
sbb
cli
dec
mov
add
andb
xchg
ret
adc
jnp
cmc
mov
jae
hlt
mov
mov
mov
mov
push
dec
in
sub
add
jno
pop
and
cmp
jp
cli
dec
adc
dec
lret
fistpll
insl
pop
scas
out
adc
stos
pop
dec
mov
imul
les
lahf
mov
mov
push
inc
lds
rol
mov
icebp
fs
mov
rorb
aas
xor
sbb
inc
daa
sbb
lahf
pop
push
jns
outsl
jb,pn
fs
mov
fildl
ds
pusha
cwtl
hlt
lds
dec
pop
daa
xchg
scas
sbb
test
inc
insl
pop
jnp
mov
cmpsb
adc
test
push
jae
ja
lock
and
cld
loop
mov
xchg
lahf
outsb
xlat
imul
add
sub
fwait
popf
lods
xor
pop
mov
cmp
or
addr16
or
mov
pop
insb
popa
mov
pop
divl
jle
inc
push
mov
fisubrs
data16
imul
mov
xor
xor
mov
sbb
test
stos
rclb
adc
inc
xchg
or
stc
inc
jno
xor
icebp
imul
test
shll
orb
ljmp
and
cltd
pop
cmp
std
inc
popf
and
lret
outsl
daa
daa
jl
lret
push
xchg
out
int
mov
cmp
mov
int
xor
pop
dec
mov
mov
iret
popf
push
push
jmp
jno
sbb
pop
je
aam
mov
dec
and
pop
cmc
jp
xchg
mov
adc
lock
int3
jge
and
sbb
xor
xchg
adc
sbb
das
mov
mov
lods
addl
add
popa
in
mov
scas
mov
mov
stos
inc
cmpsb
pop
fisubs
repnz
pop
mov
fwait
sahf
sbbb
and
mov
sub
jecxz
xchg
mov
movsb
sbb
loopne
not
cmp
lret
pop
jmp
pop
jns
adc
mov
sbb
inc
inc
ret
xor
in
movsb
lret
mov
cmp
inc
repz
insl
mov
xor
popf
aam
test
and
mov
add
in
mov
lods
mov
scas
cmp
mov
push
cmp
and
xor
lock
loope
test
push
ja
mov
and
push
aad
jns
test
mov
xchg
push
es
push
dec
mov
jnp
lret
xchg
clc
jmp
sti
enter
fstpt
mov
sahf
jl
jae
pop
add
jne
cli
pop
fcom
lea
xor
sub
cmp
adc
pop
out
sub
push
ja
pusha
into
outsl
mov
insl
rorl
fcoml
dec
mov
mov
cmp
fnstenv
sbb
jb
inc
dec
xor
bound
fcomi
mov
lahf
cs
shrb
cwtl
lret
cmpsb
pop
xchg
sub
jnp
sbb
dec
mov
int3
push
call
in
push
pushf
mov
mov
or
dec
pop
shlb
clc
shl
fcmovnbe
mov
xchg
scas
xor
cmp
popa
int
dec
pop
sub
lds
sbb
dec
add
jge
push
push
lret
or
dec
mov
xchg
jbe
jno
pop
insb
pop
xchg
xchg
push
ret
pop
ss
out
xor
push
and
sub
xor
icebp
or
std
lret
sbb
adc
int
mov
dec
gs
jp
sbb
pop
mov
mov
inc
pop
test
mov
pop
adc
pop
pop
lcall
bswap
inc
add
call
js
add
lret
push
jnp
mov
mov
cmc
or
mov
filds
or
push
push
pop
or
andl
popf
pop
or
mov
popf
popa
leave
mov
dec
inc
dec
pop
cmp
cmp
jns
jns
push
mov
test
sbb
sarl
mov
xchg
sbb
fs
iret
mov
dec
and
sti
call
into
sahf
scas
adc
ret
outsl
clc
cmp
or
test
outsb
cmpsl
push
ds
ss
xor
add
mov
lcall
push
cmpb
cmpsl
mov
inc
insb
mov
sub
push
dec
jge
push
test
fisttps
insl
add
js
in
xchg
mov
fcompl
mov
and
jns
daa
clc
loop
leave
ror
addr16
lods
add
mov
jb
xchg
into
sbb
in
js
push
add
imulb
jle
fildll
fdivrs
pop
xor
insb
pop
icebp
leave
mov
bound
xor
mov
jge
dec
inc
icebp
xor
popa
mov
mov
sbb
cltd
lock
dec
or
jae
inc
scas
pop
repz
outsl
cmp
pop
xor
push
nop
sti
inc
outsl
cwtl
les
cwtl
jp
sub
and
jp
xor
out
xor
inc
or
imul
cmp
lds
mov
cmp
mov
mov
cmp
clc
movsl
or
and
pushf
mov
fldcw
jmp
insb
or
mov
call
dec
pop
cltd
dec
or
sbb
sbb
sub
adc
add
mov
cli
lahf
push
mov
adc
xor
mov
mov
sti
das
mov
pop
imul
mov
iret
in
fsubr
mov
bound
test
popf
mov
xlat
pop
and
ret
dec
es
in
mov
dec
sub
mov
outsb
aad
scas
adc
push
fisubl
and
pop
pop
fcmovbe
movsb
jae
xchg
xor
outsl
imul
repz
outsl
jp
sbb
insl
shrb
sbb
test
sbb
cli
sub
pop
mov
aam
daa
ja
shrl
test
hlt
fwait
cmpsl
adc
add
mov
and
std
pop
xchg
mov
push
pop
push
mov
or
ret
pop
xor
dec
dec
ds
mov
sbb
jg
fcomps
movsl
add
pop
sahf
inc
aad
lret
jo,pn
pop
mov
ja
iret
jg,pt
nop
movsl
sbb
stos
mov
mov
mov
sbb
or
loopne
adc
int3
adc
leave
jno
jo
jecxz
add
push
push
fsubs
in
sub
insl
push
mov
aaa
mov
in
hlt
mov
cwtl
xchg
popa
ret
imul
push
cmp
insl
xor
push
or
jb
xor
cld
xor
aad
rcll
mov
pop
imul
mov
aas
ss
les
fldenv
fwait
ja
lret
cld
loope
dec
insb
and
iret
adc
sbb
xchg
cs
jo
xchg
cmpsb
daa
cli
mov
dec
dec
sahf
scas
push
ret
sbb
push
mov
sbb
xchg
dec
out
mov
jle
or
shrb
jnp
fnsave
push
pop
sub
inc
dec
repnz
mov
orb
inc
ja
add
inc
imul
fadds
lcall
leave
in
data16
mov
out
push
sbb
std
ds
or
push
shll
sub
sbb
mov
neg
mov
std
inc
mov
sbb
aam
cmpsb
jecxz
bnd
add
and
sahf
dec
es
fistps
std
testb
out
dec
dec
xchg
push
push
push
popf
int3
cmc
xchg
call
lock
jnp
or
pop
cmp
negl
pusha
pop
js
mov
inc
cmp
dec
cli
jbe
cmp
xchg
jbe
jmp
jo
sarb
cltd
jns
add
faddl
jbe
mov
xchg
loope
and
lahf
add
movsb
push
inc
fnstcw
xchg
cmp
stc
xchg
popl
adc
sarb
dec
xchg
sbb
mov
roll
jp
sbb
cmc
stc
fmull
mov
and
shrl
sbb
pop
shll
or
lret
push
je
icebp
neg
mov
inc
push
es
nop
cwtl
gs
pop
or
lods
jl
push
pop
adc
sbb
loop
ja
lcall
inc
pop
int3
mov
cmp
add
add
fs
sahf
lret
out
pop
inc
flds
push
sub
int3
in
add
outsl
nop
push
and
lea
loop
call
out
rolb
loopne
sub
scas
mov
clc
aad
adc
leave
sub
insb
mov
stos
pop
push
iret
mov
cmp
fldl2t
loop
ljmp
xor
add
call
iret
test
in
ret
xchg
mov
roll
hlt
cmp
in
xchg
adc
arpl
clc
jmp
fiadds
bnd
xor
jb
orl
xlat
inc
sub
add
push
dec
pushf
scas
jb
aas
mov
fstpt
add
xchg
lahf
cld
jns
xchg
sbb
xchg
push
push
mov
int
hlt
les
pop
adc
mov
sbb
inc
pop
inc
iret
push
adc
arpl
fsubrl
push
les
pop
lea
push
mov
push
adc
and
adc
ficomps
imull
sub
sbb
jmp
ljmp
pop
repz
push
mov
rcrb
mov
add
inc
inc
xor
scas
dec
lret
int3
arpl
into
pusha
mov
rcll
adc
mov
add
dec
popa
std
xchg
cmpsb
in
pop
adc
push
adc
adc
pop
push
fnstenv
and
or
or
int
test
jb
pop
nop
dec
mov
jecxz
fdivrl
lods
jbe
lods
xor
bound
pop
pusha
push
inc
insb
mov
mov
insb
popf
es
xor
xchg
movsl
jnp
rorb
mov
pop
pop
loop
int3
inc
sbb
fadd
jecxz
mov
xchg
mov
push
movsl
push
mov
inc
adc
in
inc
lret
jp
pushf
xchg
mov
cmp
add
enter
in
scas
inc
das
jbe
xor
xor
adc
cli
add
lahf
inc
dec
sub
or
repz
pop
mov
cmpsb
xchg
cmp
add
pop
push
pop
push
cbtw
sahf
shl
out
dec
movsb
aaa
cmp
jl
sub
pinsrw
mov
enter
xchg
push
adc
adc
pop
mov
scas
mov
sbbl
movsl
out
push
mov
mov
dec
dec
sti
push
mov
push
sbb
jmp
pop
frstor
inc
shl
add
push
lcall
lahf
pop
dec
dec
cs
cs
cmpsl
sbb
jg
aam
xchg
lods
dec
jo
dec
xor
or
flds
adc
sti
rorb
lret
or
mov
xchg
pop
xchg
enter
dec
cltd
shll
nop
xor
inc
in
call
out
ja
dec
mov
or
jl
pop
add
jno
mov
das
js
sub
repnz
sbb
adc
js
repnz
in
xor
addl
jecxz
data16
jle
and
test
icebp
aad
jae
adc
shll
testb
add
arpl
sar
dec
push
mov
push
insl
test
notl
or
pop
shr
and
int
icebp
cmp
push
jbe,pt
mov
xchg
popf
push
mov
test
mov
das
mov
xchg
jns
inc
dec
mov
or
jbe
jnp
jnp
dec
jae
mov
lret
pop
das
sub
fmul
adc
and
xchg
xchg
and
push
sahf
jle
mov
sarb
fstpt
dec
xchg
pop
and
data16
push
jb
int
push
dec
daa
sbb
bound
mov
xor
xor
cmpsb
jge
adc
mov
rcrb
sbb
fistpl
lea
lods
jo
test
lods
negl
add
and
imul
or
in
js
inc
xchg
int
xchg
rcrb
clc
or
xchg
ss
pop
stos
fnstcw
adc
ds
aad
pop
fistps
mov
mov
inc
test
rdtsc
push
popf
and
data16
pop
xchg
xorl
cmp
cld
push
fisttps
mov
fsubp
inc
push
jg
pop
dec
sub
xor
rcrb
pop
mov
sub
cmc
xor
push
lods
and
dec
addb
jne
pop
sub
pop
int
in
mov
xor
in
mov
cmp
in
das
push
mov
xor
sbb
pop
sub
inc
data16
cmp
cmp
pop
repz
adc
xor
pop
cli
scas
into
sarb
stc
and
push
xlat
or
adc
sbb
dec
dec
xchg
xchg
add
mov
sub
push
dec
push
insl
loope
xor
push
daa
mov
pop
orl
movsl
scas
push
and
adc
ljmp
out
jle
or
clc
loopne
sub
sti
pop
inc
sbb
adc
popa
mov
popa
stos
sbb
daa
mov
or
pop
popa
cmpsb
push
sbb
and
jp
outsb
es
pushf
aam
dec
into
cmp
sub
pop
pop
sub
scas
ljmp
in
or
mov
cmp
sub
enter
jbe
pop
sub
arpl
test
out
addb
mov
ljmp
xchg
push
data16
cmp
push
andl
jg
mul
fisubs
and
pop
inc
insb
pop
xor
ret
xchg
pusha
pop
fnstcw
jle
cwtl
in
fcomps
push
nop
push
loope
outsl
lock
out
clc
cmp
push
test
fyl2xp1
out
push
imull
data16
adc
xchg
jecxz
xor
xor
fistpl
enter
je
jecxz
sti
adc
mulb
les
pop
cmp
cli
mov
push
fldenv
into
jmp
daa
jbe
sbb
pop
xor
push
leave
xchg
mov
stc
ficoms
and
sbb
insb
sbb
and
js
mulb
pop
orb
and
push
or
insl
movsb
insl
insb
lcall
push
add
xor
mov
js
xchg
mov
jl
and
mov
sub
push
insb
negl
adc
add
lret
repz
in
call
jg
jmp
mov
cltd
fbld
cmp
test
push
pop
mov
jb
cmp
or
dec
daa
pushf
test
xchg
pushf
xchg
dec
pop
jnp
fstpl
dec
xor
test
pop
loopne
movsb
nop
subl
inc
les
int
sbb
cltd
adc
stc
sbb
sbb
add
cs
std
out
sbb
imul
aas
and
mov
inc
dec
js
fstps
mov
ret
sbb
or
orl
sub
movsl
mov
mov
mov
or
dec
push
jle
out
cmp
push
adc
ret
or
and
pop
add
hlt
fwait
mov
adc
push
fdiv
outsl
movsb
stos
mov
pushf
xchg
iret
dec
ret
dec
xchg
loop
roll
out
xor
inc
in
ss
dec
int3
mov
cmp
jp
inc
sbb
pop
cli
cmpsb
je
adc
push
push
mov
pop
and
xchg
das
sbb
leave
fiaddl
jg
loope
push
shll
mov
jns
xchg
jno
cmp
aad
fdivr
lret
sbb
jp
mov
push
mov
imul
and
mov
or
mov
insb
pushl
adc
jae
xorl
xchg
cwtl
push
lcall
ds
jo
stos
enter
imul
repnz
jg
adc
add
mov
add
xchg
push
sarb
in
in
cltd
fisubl
cmp
dec
out
push
scas
mov
and
in
in
jge
outsb
sub
cli
rcrb
data16
pop
mov
pop
adc
mov
xchg
cs
xor
ret
xchg
pop
or
or
gs
adc
test
and
fdivrl
inc
in
cwtl
xchg
test
xchg
sbb
inc
or
in
sbb
cs
js
mov
dec
add
jnp
pop
mov
inc
loope
testl
ret
icebp
jno
jl
leave
fcomi
fstpt
jbe
xor
mov
ljmp
dec
jp
mov
inc
push
shl
mov
addr16
push
into
lock
mov
jne
cltd
in
ljmp
sbb
pop
cmp
lds
or
adc
fldl
and
or
sub
mov
clc
push
mov
rcrb
push
mov
push
fisttpl
dec
movsb
pop
xor
mull
mov
push
out
pushf
movb
sbb
insb
xchg
dec
add
add
adc
subb
pop
lods
mov
pop
jecxz
cld
fnstcw
aaa
cmp
sbb
in
jo
fidivrs
orl
cltd
loop
fldenv
es
pusha
imul
cmp
clc
inc
mov
jo
xor
or
imul
aam
add
cmpsl
jp
sti
in
arpl
data16
inc
mov
mov
sub
scas
out
or
jns
sub
mov
push
dec
int
or
fwait
mov
jge
sub
xchg
push
stos
xchg
repnz
fdivrs
xorb
sar
sub
pusha
sub
jne
mov
cmp
jnp
ss
cmpsb
ds
subb
aas
mov
cmpsl
xlat
clc
rclb
cld
addl
xor
mov
js
push
or
rorl
repz
add
aam
stos
sub
xor
add
and
fwait
and
xacquire
stc
cli
pop
lods
xor
fcmovne
push
fcomip
lds
adc
inc
ds
jle
adc
int3
incl
sti
inc
call
inc
fists
imul
nopl
mov
aas
pop
jb
icebp
fistpll
cmp
ficomps
mov
in
push
jle
inc
out
in
faddl
xchg
cmp
fs
xchg
mov
pop
push
in
push
adc
jo
repnz
shlb
push
xor
loope
mov
sbb
dec
ror
or
ror
outsl
add
adc
dec
xchg
jecxz
in
popf
jge
mov
pop
inc
mov
stc
xlat
or
add
adc
mov
fbld
push
lret
jp
add
cli
xor
cltd
pop
and
pop
ret
aam
dec
pop
aas
loop
push
mov
push
inc
pop
jmp
xor
xchg
jns
test
jo
inc
adc
in
jae
movsl
in
adc
mov
aad
test
lcall
les
sbb
jns
inc
arpl
xor
mov
int
sub
cmp
shlb
mov
mov
cmpb
push
jbe
fldcw
sbbl
mov
fwait
xchg
inc
add
imul
mov
dec
les
ror
fcomps
scas
mov
add
dec
pop
les
int
popl
pushf
popa
test
ds
das
test
mov
sarb
pop
sub
int3
mov
popa
xor
pop
mov
imul
ret
add
les
int
jae
ja
lods
popa
inc
jle
pop
bound
xchg
push
add
jp
lret
jb
mov
icebp
jmp
ret
js
stc
insb
outsb
loop
pusha
jge
lret
call
jo
pop
adc
fwait
out
mov
test
mov
mov
mov
les
stc
ds
call
or
insl
fisttps
mov
gs
pop
and
out
imul
sbb
pop
xor
push
cmp
inc
mov
mov
shlb
ja
scas
sar
cmp
mov
mov
mov
add
test
ret
decb
lods
frndint
adc
lret
je
cmp
sbb
int3
mov
test
pop
into
cmpsb
adc
imul
cmp
sti
js
jnp
or
or
pop
push
push
movsb
outsl
or
mov
or
push
jl
or
mov
pop
xchg
xor
adcb
aam
push
inc
testl
or
aaa
cld
xor
int
popf
xor
sbb
push
mov
ret
lods
aaa
mov
fisubrl
lret
lods
cmp
mov
adc
arpl
jle
mov
pop
or
es
call
into
imul
call
dec
push
fcom
xchg
arpl
xchg
lods
xchg
jo
pusha
je
sub
sub
and
push
in
mov
out
faddl
lods
test
les
lcall
cwtl
pop
aad
push
negl
orl
icebp
lcall
icebp
xor
ja
fdivrl
mov
sbb
fwait
sub
out
xchg
dec
movsl
or
fadds
je
dec
enter
iret
xor
xor
dec
mulb
jl
cmp
cmc
and
arpl
or
jge
lret
enter
push
pop
or
jnp
mov
sbb
xor
cld
and
sbb
xchg
push
xchg
test
sub
pop
test
dec
imul
mov
cmpsl
aad
shrb
mov
aam
and
push
add
mov
popa
into
xchg
in
int3
add
jns
pop
in
pop
sbb
popl
mov
ret
outsl
test
mov
sbb
pop
dec
shrl
add
jl
xchg
lcall
xor
shlb
clc
mov
jmp
xchg
xor
xor
xlat
inc
pop
aad
dec
loopne
pop
stos
inc
push
add
add
adc
stos
push
mov
pusha
mov
pop
lea
or
xchg
sbb
dec
xlat
jb
and
sub
dec
cmp
iret
jge
cltd
cld
sub
and
mov
lret
ret
mov
add
dec
jg
imul
jp
pop
cmp
jg
cmp
inc
rorb
or
mov
dec
shll
lods
mov
rcl
lret
mov
lahf
lods
fsubr
pop
unpcklps
add
or
loop
jb
inc
ja
xchg
int
idivb
ret
stos
or
pop
aaa
mov
aaa
stos
dec
mov
cmp
out
stos
shlb
pop
mov
cld
and
fcomip
sub
pop
dec
mov
sub
jnp
movsl
out
test
mov
fbstp
cmp
shll
sub
pop
inc
and
gs
pop
pusha
push
add
aad
xlat
sbb
mov
arpl
das
mov
and
mov
mov
addr16
jl
ljmp
sbb
mov
test
cli
adc
loop
push
das
mov
xchg
shrb
xchg
test
cmp
cwtl
mov
add
scas
inc
mov
push
bound
push
scas
fimuls
xchg
jp
jae
pushf
jp
ss
and
outsl
lret
bound
scas
or
xchg
cwtl
lods
fsubrs
cmpsl
in
daa
push
fucomp
inc
adc
mov
cli
dec
push
mov
jbe
jp
lret
cmp
icebp
push
and
dec
or
xor
test
ja
mov
mov
or
push
jge
xchg
push
pusha
fs
out
inc
dec
xchg
test
popf
sub
lahf
jle
jae
adc
adc
add
mov
aaa
mov
arpl
mov
bound
mov
ja
enter
das
pop
mov
cltd
in
pop
frstor
or
popf
imul
in
xchg
aad
daa
sbb
xchg
mov
jp
or
push
popa
inc
out
mov
add
mov
push
pop
xchg
xorb
data16
mov
and
jae
push
push
roll
pushw
xor
push
test
test
adcb
mov
add
xorb
cmpsl
es
pop
pusha
mov
ja
insl
adc
mov
or
dec
and
pusha
mov
lods
arpl
aaa
std
xor
push
ret
dec
xor
adc
mov
mov
clc
push
or
adc
sub
aam
lcall
add
sub
xor
aad
icebp
cltd
xchg
jbe
push
gs
mov
pop
es
stos
dec
xchg
orl
lea
imul
testl
test
xchg
pop
test
inc
les
loop
or
rol
push
mov
enter
jo
or
dec
leave
mov
imul
jns
ljmp
outsl
jo
xor
filds
fldl
jne
iret
fmulp
pushf
xor
jnp
fs
rcrl
jb
scas
sbb
iret
lds
cmp
enter
mov
loope
pop
test
cmp
sub
jo
mov
adc
cmp
mov
popf
fwait
jl
jp
mov
sbb
mov
adc
les
lcall
mov
inc
xor
repz
imul
mov
or
sub
dec
mov
call
lahf
jne
mov
jge
jge
xchg
mov
in
les
div
fildll
push
dec
dec
jp
je
jmpw
mov
and
shlb
xor
dec
inc
mov
jne
int
jae
inc
pop
les
jp
push
mov
mov
xlat
mov
int
loopne
aaa
call
inc
pop
cltd
dec
sti
nop
add
incb
dec
aas
les
or
mov
jmp
sbb
std
pop
andb
negb
scas
mov
in
push
movsb
addr16
repz
fwait
in
jb
lock
jno
mov
mov
stos
rol
mov
mov
inc
push
ljmp
outsl
adc
mov
leave
sbbb
mov
subb
mov
and
scas
mov
arpl
ret
scas
int
roll
ret
sbb
inc
add
pop
sbb
add
pop
int3
mov
pop
sbb
cmp
repz
push
imul
and
ret
fldl
cmp
je
lods
sub
sti
jno
jge
and
dec
jg
sbb
adc
sbb
mov
fildl
mov
and
pusha
sub
or
jo
add
mov
imul
or
dec
sub
inc
inc
or
mov
mov
js
cmpsb
je
aaa
pop
sbb
mov
cmpsb
loop,pt
jbe
jge
ror
clc
mov
mov
pop
jb
mov
outsb
into
dec
adc
pop
and
jp
daa
outsl
mov
push
test
xchg
pop
loop
test
and
lret
mov
fcom
enter
inc
andb
mov
mov
mov
cmp
jl
mov
push
or
lcall
jmp
fldenv
mov
and
xlat
and
ja
xchg
scas
ror
jb
cmp
data16
std
cltd
or
outsl
push
ds
mov
iret
mov
add
jo
push
inc
pop
mov
popf
fisubrs
mov
fisubl
test
mov
adc
leave
inc
movsl
dec
xor
add
sub
sbbb
je
lret
das
mov
pop
fidivrl
lds
xchg
jg
or
movsl
push
les
lret
sub
js
sbbl
loop,pt
jl
pop
cwtl
ss
clc
lods
xchg
dec
inc
sbb
je
sbb
pushf
je
dec
mov
aas
and
pusha
lcall
rolb
pusha
jle
int
mov
mov
nop
arpl
jle
push
add
cmp
xor
std
pop
test
sti
mov
or
lods
mov
sti
or
push
dec
fnsave
or
pop
mov
push
outsb
fadd
mov
cmp
sub
out
adc
cltd
lock
or
or
add
insb
xor
sbb
and
cli
aam
inc
addr16
and
adc
push
xchg
adc
cmp
shll
loopne
out
test
out
gs
nop
adc
addr16
mov
mov
mov
and
sub
xchg
mov
sub
dec
int
adc
mov
les
mov
add
push
add
jae
ss
into
ret
push
ljmp
sbb
mov
cs
xor
jge
cs
into
loop
ret
out
jbe
shlb
lcall
cmp
pop
stos
pop
test
xchg
out
xor
cmpsb
ss
pushf
out
inc
mov
imul
adc
iret
int
mov
sub
inc
adc
adc
cmp
out
pop
sub
ds
mov
daa
mov
mov
push
testb
jmp
jecxz
mov
mov
mov
mov
out
dec
xchg
or
inc
adc
cmpsb
xchg
cmpsb
cmp
mov
sub
inc
mov
add
pop
inc
mov
je
inc
lods
inc
repnz
mov
ret
cmp
aam
adc
mov
in
or
sahf
mov
icebp
cmp
jae
rol
int3
adc
inc
stos
sarb
adcl
mov
int
jmp
cli
pop
and
insl
sbb
cmp
repz
mov
adc
out
jae
mov
jle
mov
test
loop
mov
xchg
adc
adc
ret
jb
mov
sub
jae
mov
inc
pushf
inc
adc
add
fstpt
sub
nop
stos
sti
add
sub
push
sbbl
rclb
sub
xor
mov
stc
dec
mov
je
pop
xor
stos
fadds
mov
lahf
test
add
enter
dec
jmp
pop
popf
ret
fildl
lcall
hlt
inc
and
cmp
stc
out
into
mov
int3
fsubl
inc
jge
push
clc
sbb
jg
shrb
jecxz
mov
subb
fsubrs
shll
fcmovnu
add
stc
rcrb
aaa
mov
movsl
fdivl
ljmp
fldcw
cld
ss
fwait
jnp
in
jmp
mov
xchg
sarb
xchg
xlat
xchg
in
jne
adc
inc
xchg
jge
std
or
testl
mov
add
das
jg
mov
lods
sub
mov
ljmp
adc
js
push
xchg
fadds
pop
testl
insb
test
or
inc
mov
adc
xchg
in
ljmp
movsl
xchg
fldl
aas
push
dec
popa
add
xchg
pushf
mov
fisubl
mov
std
and
jne
aaa
mull
or
lods
add
int3
ret
stc
push
and
pop
ljmp
das
add
inc
mov
or
sbb
cmovp
mov
popa
out
aad
push
adc
test
pop
loop
testb
add
adc
add
add
pop
xor
xchg
int
pop
aam
sbb
and
push
xor
iret
imull
test
cmp
mov
xchg
rolb
inc
andb
xchg
mov
mov
dec
insl
jmp
sbb
ss
repnz
cwtl
test
inc
insl
jns
or
nop
mov
nop
mov
sahf
cmp
xchg
sub
repz
int3
sub
rol
cli
add
xor
cmp
leave
push
xor
or
cmp
xor
mov
inc
xor
fadds
fisttpll
pop
mov
js
loope
lods
decb
dec
repz
int
and
out
jae
sahf
js
iret
mov
pop
pop
lods
xor
adc
sbb
or
rclb
popf
out
pop
popl
or
add
add
xchg
in
js
jg
pop
push
gs
mov
rorl
pop
pop
mov
xchg
jle
notb
xor
jmp
push
jne
mov
sub
push
sbb
inc
int3
shrb
hlt
sbb
lea
pusha
ja
sub
das
cmpsb
cltd
loop
ret
xor
repz
mov
cmpsl
imul
sahf
hlt
mov
inc
adc
jg
xor
mov
out
paddw
lret
in
icebp
xchg
dec
loopne
ljmp
cmp
cmp
mov
cltd
pop
gs
push
movb
aad
mov
jle
mov
addr16
add
or
clc
xor
mov
jo
push
mov
inc
sbb
pop
pop
enter
ficomps
scas
mov
rcll
dec
jns
add
or
sbb
arpl
neg
stos
add
pop
jge
icebp
int3
push
dec
movsb
imul
and
add
insl
in
gs
jle
sbb
push
cmp
into
mov
outsb
jb
cmp
jmp
lods
mov
jl
mov
dec
shlb
push
shll
cmp
inc
ss
jg
int
jno
add
sbbb
bound
jp
push
jmp
cmp
sub
bound
push
js
notb
cmp
or
mov
fiadds
xchg
jmp
pop
arpl
cmp
jge
inc
inc
movsb
inc
xor
jnp
insl
push
mov
aam
loop
stos
test
je
or
mov
out
out
arpl
stos
add
cmp
enter
call
sbb
mov
cmp
into
sbb
jg
cmp
add
pop
in
push
pop
xchg
sub
mov
dec
into
pop
lock
lret
xchg
sbb
jg
push
enter
push
add
push
pcmpgtb
lock
ds
orl
mov
adc
outsb
xchg
int3
sbb
xchg
xlat
jbe
insb
out
push
ret
shll
mov
inc
lret
push
fiaddl
addl
or
orl
or
loop
arpl
sbb
mov
xor
mov
push
add
pop
leave
mov
mov
mov
sub
loopne
int
lahf
fwait
dec
mov
sub
pop
xor
xor
inc
add
mov
push
mull
mov
and
push
xor
adc
mov
mov
dec
mov
out
fdivr
out
movsb
in
das
scas
cmp
lcall
ror
sti
xchg
mov
sbb
movsb
mov
or
mov
loopne
mov
aam
arpl
les
sub
std
lods
in
xor
fs
dec
mov
out
jl
add
pop
jg
mov
xor
sbb
mov
stos
push
xchg
xchg
and
jb
movsb
arpl
cmp
rcrl
or
jbe
push
ja
mov
icebp
dec
mov
sti
add
push
ffreep
fisubs
add
pop
mov
fnstenv
jmp
cmp
mov
sbb
cmp
in
adc
mov
dec
mov
adc
test
push
xchg
inc
push
negb
dec
adc
mov
xor
mov
movb
je
sbb
xor
dec
sahf
bound
lahf
loopne
mov
adc
and
inc
push
cmp
in
mov
jl
rorl
lods
in
mov
loopne
ljmp
adc
xor
jecxz
and
in
pop
adc
push
gs
pop
mov
or
mov
ss
jle
jle
sub
fwait
pop
lods
cwtl
ficomps
lds
or
xchg
adc
fdiv
lea
lea
xchg
hlt
addr16
shr
dec
cwtl
cmpsl
adc
add
pop
sub
xor
dec
xchg
xor
xor
jb
pop
pop
and
insl
fs
jo
repz
or
aaa
add
nop
push
imul
movsb
scas
in
mov
xchg
mov
lahf
ret
test
sbb
lds
call
xchg
push
sahf
sbb
mov
and
inc
pop
jge
icebp
imul
js
in
cmc
mov
mov
push
inc
cmp
jns
push
lcall
jo
push
mov
ss
lret
and
mov
xchg
or
add
pop
push
pop
adc
es
xchg
cmc
icebp
mov
xchg
movb
mov
mov
shl
dec
gs
jmp
mull
mov
pop
mov
mov
repz
cmp
loopne
sub
sahf
test
jmp
jmp
dec
and
loope
cli
testl
xchg
rorb
xchg
xchg
js
sbb
xor
icebp
sbb
cmc
jae
rcl
fidivl
lea
insb
inc
pop
xchg
jge
mov
loopne
and
shr
jmp
negl
imulb
jp
or
incl
add
loope
aas
mov
aam
mov
lret
cmp
mov
jl
lds
jne
loope
cmp
mov
inc
dec
pop
js
insl
mov
cmp
fsubs
shr
imul
shrl
testb
mov
mov
cmp
dec
cltd
sbb
mov
js
inc
lods
jmp
pop
xchg
call
xchg
adc
rcr
mov
pop
add
inc
xchg
iret
adcl
outsw
dec
push
les
cli
icebp
mov
mov
aaa
int3
rep
xchg
add
sub
push
pop
xchg
test
pop
nop
test
lret
imul
cmp
fwait
pop
mov
imul
mov
inc
fnstsw
lods
dec
mov
mov
in
mov
mov
repz
dec
jae
cs
sub
shlb
dec
stc
sbb
mov
mov
mov
cmp
enter
test
sbb
pop
test
xchg
xchg
jg
cs
or
push
inc
inc
push
fucomip
and
loop
jbe
jo
mov
mov
mov
roll
xchg
cmp
and
sti
pusha
mov
insb
push
pop
adc
outsb
int
or
jge
xchg
cmp
xchg
inc
ds
add
aaa
mov
scas
in
xchg
lods
in
inc
pop
and
xchg
xchg
mov
adc
mov
jp
sbb
and
mov
popf
push
repz
or
outsb
cmc
or
out
cmp
mov
jmp
cmp
mov
hlt
push
fsubr
data16
into
push
repnz
push
cmp
inc
and
aas
and
in
or
insb
in
sbb
pop
and
mov
and
shlb
and
xchg
or
jmp
mov
jo
push
jmp
jg
push
mov
movsl
icebp
mov
pop
sub
jmp
xchg
and
decb
cld
ficoml
mov
frstor
sub
xlat
mov
jbe
arpl
push
pop
or
lcall
xchg
insb
sub
pushf
fildl
loopne
or
mov
scas
movsb
into
test
mov
mov
std
rcr
sub
lods
cld
dec
push
cmpsb
je
rolb
fldl
inc
loope
dec
push
sub
pushf
sbb
loope
in
std
jno,pt
mov
jbe
insl
pop
sbb
out
bound
jmp
add
mov
sahf
inc
mov
and
sbb
sub
ja
push
sbbb
jecxz
xor
sbb
cmp
fsubrs
xor
push
std
ret
pop
shl
in
inc
xlat
or
aas
out
push
test
mov
push
mov
test
into
xchg
les
mov
push
or
scas
call
iret
sub
jecxz
and
movsb
cmp
scas
xlat
subl
sarl
xchg
cmpsb
scas
lock
mov
jne
mov
pop
and
loop
repz
xor
lea
jmp
add
mov
xchg
and
sub
inc
cmp
ja
cmpsl
in
jo
push
movsl
xor
mov
cmp
sub
jo
lea
outsl
movsl
sahf
icebp
xchg
mov
add
addr16
stos
dec
xor
int3
xchg
xchg
push
in
push
or
aam
xchg
or
ss
pop
jmp
xchg
aas
lea
jno
push
jp
sbb
movsl
mov
outsb
sub
and
sbb
mov
jp
mov
stos
ret
and
rorb
stc
sbb
insb
loope
jmp
gs
loopne
sbb
mov
sbb
xchg
push
sbb
inc
add
dec
sub
mov
imul
ret
dec
ss
sbb
mov
adc
icebp
jae
push
mov
je
mov
testl
push
flds
es
mov
fildl
test
scas
jle
sbb
mov
mov
test
ret
adc
hlt
mov
pop
fs
sub
cld
push
xchg
sbb
popa
xchg
ja
sahf
stos
ljmp
int3
hlt
cltd
and
pusha
movsl
add
mov
or
jp
xlat
and
lock
in
jnp
nop
cmpsl
test
sti
pop
sub
adcl
adc
sub
xlat
aad
dec
inc
aam
pushf
xchg
imul
outsl
shr
add
inc
adc
loopne
lods
lcall
ret
imul
out
mov
hlt
and
aam
xor
aaa
icebp
scas
push
stc
adc
jo
loopne
inc
mov
jno
imul
cmp
inc
test
sbb
mov
fiadds
addb
jg
xchg
sub
int3
fadd
dec
dec
aaa
pushf
clc
stc
mov
test
pop
adc
jno
jmp
es
add
xchg
xor
dec
and
std
push
mov
inc
ret
repz
fdiv
jle
adc
je
sub
and
cmp
pop
imul
dec
and
test
xorb
xor
pop
mov
or
mov
int3
inc
lret
jo
add
pop
int
das
fwait
stc
cli
mov
shlb
movsl
daa
bound
or
aad
mov
out
inc
push
out
pop
shll
pop
aas
mov
push
sbb
ss
add
xchg
lods
pop
jp
mov
cmpl
insl
mov
xchg
push
sbb
or
jmp
fistpl
aam
popf
jp
mov
out
test
test
scas
mov
xchg
or
cmc
mov
xchg
jns
enter
scas
out
xchg
pop
xor
inc
in
add
push
mov
test
imul
inc
in
and
outsb
inc
and
cmpb
addr16
cli
mov
call
fs
add
pop
sahf
pop
xchg
lods
xor
sbb
lahf
xchg
mov
test
mov
pop
sub
sbb
jecxz
in
mov
insl
xor
xor
nop
mov
cld
mov
jno
imull
add
xchg
and
push
lcall
outsl
js
add
jle
int3
sbb
cmp
mov
imul
sbb
cmp
pushf
loope
lcall
pop
jecxz
lods
lcall
addb
popa
sbb
lock
ljmp
clc
adc
xor
outsl
xchg
imul
add
lds
test
cli
fiadds
or
ds
popf
daa
aaa
std
inc
decl
test
cmpsb
js
stc
test
jno
add
or
int3
xor
sbb
xor
lods
scas
mov
cmp
xchg
outsl
repz
and
jecxz
sahf
or
pop
push
pop
sti
xchg
bound
mov
push
ljmp
mov
cmp
pushf
push
sub
cmp
and
sub
pop
jp
add
xchg
xchg
push
out
sbb
sar
push
mov
mov
out
xor
lcall
sbb
push
bnd
test
and
push
sbb
cmp
mov
std
mov
shlb
adc
mov
inc
clc
outsl
xchg
divl
in
aam
stos
cmp
cmpsl
jg
cvtpi2ps
jge
or
xor
jp
sub
mov
or
xor
jle
jg
movsl
cmpsl
rorl
mov
mov
push
push
cmp
pushf
push
sbbl
cltd
stc
pushf
xor
jl
fldcw
and
imul
cli
adc
cmpsb
push
jp
lret
js
mov
mov
mov
out
or
stos
or
cmp
repnz
sub
sbb
je
jecxz
cmp
sub
aad
jmp
mov
ss
jbe
pop
pusha
loope
cwtl
or
addr16
ja
and
sbb
mov
xor
cli
and
xchg
fwait
sbb
sub
xchg
cmp
gs
in
and
nop
add
jo
add
stos
mov
fldenv
xchg
leave
test
popf
popa
adc
stos
mov
xor
les
add
push
and
leave
test
mov
dec
or
jne
fs
push
cmp
pop
pop
mov
dec
roll
or
sbb
dec
push
ror
popl
loop
loope
fldcw
xchg
repz
push
and
arpl
jecxz
pop
sbb
fmuls
mov
sub
cmp
dec
mov
dec
mov
lcall
jae
cmp
aad
lret
mov
inc
pop
sbb
mov
aaa
test
push
mov
test
inc
ror
pop
mov
mov
sub
xchg
mov
ljmp
push
adcl
sub
in
inc
push
leave
and
int3
shl
sub
and
pop
mov
pop
int
mov
in
mov
movsl
mov
xchg
jle
mov
and
sbb
cmp
imul
mov
popf
push
leave
das
xor
adcb
sub
sbb
push
jbe
push
jae
lea
xchg
push
pop
adc
int3
ljmp
xchg
push
scas
aam
add
pop
fisubrl
jne
int
out
ss
push
pop
lret
and
nop
xor
out
outsl
fiadds
push
jmp
and
or
arpl
jp
popa
pop
out
je
add
fcmovnbe
lcall
bound
lret
fistl
or
mov
push
in
sti
lret
or
sbb
or
adc
pushl
mov
rolb
cmp
inc
arpl
inc
or
pop
in
orb
inc
mov
cltd
mov
xchg
repz
and
lods
xor
sub
bound
push
xchg
mov
imul
call
mov
fucom
pop
in
out
cld
lea
mov
cmp
int3
cs
push
cs
movsb
das
mov
mov
pushf
pusha
xchg
dec
or
mov
cmp
sbb
xchg
ja
pop
mov
adcl
xchg
cmovno
mov
js
js
cmp
mov
add
add
mov
cmp
dec
pop
or
jno
rcll
out
test
add
sbb
cmpsb
sub
or
mov
or
test
shrl
daa
repnz
push
mov
fldcw
shr
sbb
mov
clc
ss
arpl
sub
aam
or
in
lcall
cli
push
fcomps
dec
cs
push
jecxz
adc
clc
jecxz
lods
rcrb
mov
in
jnp
sub
addl
faddl
dec
mov
scas
movsb
push
or
xor
sbb
cmpsl
fidivrl
jmp
es
test
imul
mov
bound
ljmp
pop
ja
jb
fildl
loopne
shr
sbb
and
dec
rcr
call
nop
filds
sub
imul
std
push
sti
nop
test
lret
or
ret
imul
in
in
adc
mov
pop
sub
sub
aaa
int3
imul
jl
je
es
stos
jbe
jg
sub
lds
rolb
outsl
mov
pop
iret
mov
fsubs
movsb
sbb
or
xlat
mov
fcoms
sbb
jg
push
cmc
mov
adc
int
das
loopne
aas
mov
lods
mov
xchg
pusha
jmp
cld
cwtl
inc
ja
cmp
cmpsb
cmp
xchg
dec
sub
jae
jo
out
pop
pop
jb
push
jmp
push
mov
inc
hlt
xchg
pusha
pop
jbe
pusha
lret
mov
mov
xchg
add
jp
test
imul
inc
push
fdivrs
iret
pop
or
ret
adc
xchg
mov
ret
pop
fcomps
mov
inc
scas
int
divb
jb
insl
push
outsb
imulb
jge
into
adc
stc
fbstp
lahf
mov
mov
or
fdivs
in
pop
cmp
rcrl
xchg
repnz
insl
pop
iret
and
es
push
aas
test
push
push
dec
push
add
fistps
pop
js
ss
outsb
lods
cmp
dec
mov
ljmp
dec
sbb
inc
push
mov
lods
sbb
and
adc
jae
cmp
aas
mov
mov
and
adc
mov
mov
add
repz
push
jge
dec
ss
push
leave
cmpsl
pop
ret
xor
outsl
push
loop
subb
add
add
adc
les
cmpl
sbb
cwtl
dec
jne
cmp
rcrl
negb
stos
dec
aad
mov
test
push
repz
ja
rclb
push
lret
sub
in
mov
pop
cmp
xchg
fwait
jecxz
add
sub
push
inc
rclb
andl
push
js
rcrl
jmp
push
and
cmp
lcall
roll
shr
jecxz
std
lahf
loop
xchg
scas
xorb
sti
lods
ja
mov
inc
clc
arpl
in
lock
sbb
jmp
or
scas
cmpsb
xlat
insl
enter
addr16
out
insl
paddusb
pop
aam
dec
cmp
and
aas
push
test
jo
push
mov
arpl
into
xchg
dec
lea
call
inc
dec
inc
mov
mov
loop
xor
pop
cmp
je
fidivl
inc
out
clc
int
mov
lcall
push
xor
idivl
data16
sbb
in
stos
outsb
jp
inc
stc
cmpsb
hlt
aad
add
sub
enter
mov
orb
std
and
or
shll
sub
aad
enter
mov
lea
aam
jbe
fldl
xchg
insb
rolb
sbb
and
jp
sbb
cltd
push
cmp
hlt
and
cmp
jmp
jp
sub
push
push
jle
mov
cmp
jb
adc
xchg
jno
ret
or
sahf
mov
je
sahf
or
ja
mov
iret
outsl
mov
push
add
xor
adcl
fmuls
insb
stos
sub
in
adc
mov
push
rcr
mov
sbb
rorb
xor
dec
lods
adc
push
cwtl
add
fnstsw
arpl
sub
pusha
lods
fmull
arpl
push
je
test
loop
sub
fsts
sbb
es
lret
lcall
jmp
sub
and
mov
shrb
cmc
or
lea
ffreep
gs
mov
fnstcw
testl
rclb
xchg
scas
dec
lret
shr
mov
push
fs
mov
mov
jle
out
jne
pushfw
test
mov
mov
lea
pop
enter
movsb
cs
call
sub
cli
jl
aam
sub
in
sbb
subl
lret
shlb
push
dec
fstl
call
test
mov
fs
fldl
xorb
rcr
ficompl
adc
rclb
fwait
clc
orb
or
xor
rcll
pop
sub
inc
push
stos
les
movsl
fcomip
jns
xorl
push
inc
idivl
or
jbe
cli
dec
xor
mov
dec
hlt
insl
loope
sahf
xchg
sbb
sbb
fnsave
pop
das
cwtl
or
xor
push
das
jnp
mov
or
arpl
sbb
lret
mov
mov
dec
sub
dec
pop
roll
ret
cmp
or
cmc
fbld
shl
outsl
inc
dec
add
add
int
icebp
add
sbb
push
call
dec
test
cmp
adc
pusha
push
and
cli
and
add
sahf
jmp
push
rclb
daa
pop
adc
rcll
or
adc
xor
pop
push
test
out
fisubrs
jecxz
add
aaa
fmull
pop
sub
out
cmp
xor
xor
out
mov
enter
loope
pop
add
test
xor
imul
fbstp
xchg
lods
test
out
xor
pop
xchg
das
int
jle
cli
or
push
xor
jg
cld
rol
lds
popa
sbb
mov
jnp
xor
addr16
call
dec
mov
fdiv
call
lods
mov
mov
movl
mov
add
jbe
and
inc
sbb
or
popf
jnp
test
xor
into
push
pushf
dec
xor
rol
and
dec
mov
xlat
push
jp
insl
lret
or
jecxz
adc
pop
repnz
cli
pop
clc
and
jle
fstpt
repnz
pushf
and
and
xchg
andb
dec
sub
movsb
jecxz
sub
inc
iret
out
pop
push
sub
mov
pop
daa
or
sbb
fs
mov
pop
cmp
and
add
mov
adc
xchg
les
and
popa
or
fdivrl
pop
xchg
mov
lret
xchg
addr16
and
pushf
xlat
sbb
mov
subb
icebp
dec
dec
pop
xchg
xor
sub
in
addr16
fiaddl
adc
sub
xor
rclb
cwtl
sub
xchg
daa
pop
je
jecxz
repnz
cltd
push
fisttpll
inc
int
pusha
pop
popf
push
in
aas
fbld
xor
and
xor
pop
cmp
jb
sti
or
fildl
and
lods
aam
pop
stos
pop
mov
adc
arpl
mov
cmp
pop
cmp
insb
sbb
add
int
hlt
inc
adc
dec
out
inc
adc
sahf
pop
sbb
xor
mov
lahf
call
or
add
ss
das
mov
cwtl
movsb
frstor
or
in
adc
xor
xchg
mov
sbb
sbb
daa
out
iret
aas
mov
mov
mov
aas
imul
mov
xchg
cmpsl
shrl
add
sub
mov
fcmovne
cs
push
in
xor
icebp
aas
inc
push
xchg
rorb
int
pop
cwtl
mov
cmp
aaa
or
mov
mov
mov
ja
mov
popa
dec
into
out
daa
xor
or
xchg
mov
push
lahf
popa
adc
ds
shrl
xor
or
int3
out
xchg
loopne
mov
mov
jl
das
test
add
adc
or
jbe
dec
adc
repz
movsl
dec
jl
xchg
pop
jae
aad
cmpsl
sub
xchg
cmp
notl
cmp
jo
dec
imul
rorb
sti
push
arpl
repz
repnz
fs
add
lods
xchg
cld
fstpt
xor
cwtl
jmp
mov
mov
iret
repnz
sahf
mov
test
add
mov
mov
jmp
repnz
mov
sub
hlt
outsl
push
mov
mov
mov
sarl
les
mov
int
cwtl
insl
push
in
lret
mov
addl
clc
push
mov
sarb
adc
inc
sub
push
sbb
jp
outsb
sub
andl
fnsave
mov
fmul
sbb
add
lods
mov
lods
stos
dec
dec
mov
xchg
in
cs
fimull
jo
xor
mov
jg
into
adcl
js
mov
jae
or
and
mov
lcallw
aam
andb
ret
xorb
ljmp
pop
das
jo
ljmp
fsubl
push
ss
xor
jns
shl
adc
xor
jns
aaa
inc
mov
out
xchg
xchg
push
iret
and
lret
jmp
pop
repnz
ja
out
mov
cltd
popf
je
stc
sub
ror
mov
or
jp
cmp
xor
sbb
push
shlb
cli
aam
call
stc
mov
adc
cmp
lcall
in
sub
pop
repnz
pushf
mov
insb
enter
iret
dec
pusha
xor
adc
xor
fs
cmp
cld
inc
xchg
and
ret
inc
stos
out
call
in
lret
sub
or
jmp
push
mov
mov
cmpb
pop
sub
sbb
andl
clc
cltd
and
lods
in
mov
push
or
lods
xchg
outsb
add
jb
mov
mov
jp
adc
js
mov
popf
scas
pop
adc
push
pop
push
push
int
xchg
test
pop
sbb
jae
repz
mov
jae
movsb
and
lods
mov
pop
push
inc
lock
call
sti
std
iret
push
sub
subl
nop
das
xchg
fwait
int
push
xchg
mov
dec
into
xor
ja
dec
mov
jbe
mov
mov
lock
sbb
adc
test
sub
jbe
sub
mov
adc
movsl
outsl
ja
cmp
jne
into
sub
and
jb
xlat
push
dec
in
rcrb
cmpsb
das
sub
cmp
xchg
fists
test
test
cmpsl
mov
test
std
xchg
sub
lods
aam
repnz
or
int
or
outsb
dec
adcb
stos
jnp,pt
xchg
sub
add
adc
fnsave
or
inc
mov
mov
xchg
xor
mov
rcrb
add
or
test
jno
inc
pop
jmp
pop
xchg
dec
cmpsb
pushf
add
cmpsl
mov
test
out
xchg
aaa
fs
in
rcrb
add
mov
mov
lds
js
jo
lret
popf
pop
inc
fwait
loop
lds
mov
iret
sub
cwtl
or
cmpsb
sbb
xor
xor
sub
mov
orb
pop
adc
addr16
mov
jecxz
mov
dec
sub
jmp
sub
mov
jno
mov
adcl
xchg
data16
pop
cmp
in
sbb
test
mov
adcb
out
shlb
scas
xchg
dec
clc
adc
cli
mov
sbb
sub
push
popa
ret
or
jg
sbb
fimuls
adc
push
test
jle
mov
pop
push
xorl
mov
inc
xor
rol
cs
add
sbb
scas
loop
xchg
mov
sub
jge
add
test
test
cmp
xchg
ja
nop
lea
xchg
xchg
mov
jns
fidivs
and
xchg
imul
dec
pushf
stos
mov
pop
pop
jl
jb
jg
loopne
add
pop
xchg
lret
mov
mov
pushf
cmp
mov
scas
add
inc
addr16
shlb
in
enter
and
fstps
frstor
add
out
out
or
xchg
mov
pushl
movsl
out
out
add
push
mov
lods
push
mov
inc
mov
mov
push
movsl
push
add
aas
popa
pop
sahf
sub
cmpsl
data16
cmp
xchg
inc
xchg
mov
push
ret
clc
sbb
inc
sbb
mov
xchg
cs
aad
in
fiadds
push
aaa
ds
cmp
incl
iret
in
sti
mov
jl
sti
jl
imul
add
ret
mov
stos
push
out
jns
push
ffree
inc
mov
stos
adc
xchg
xor
sbb
sahf
nop
inc
testl
jmp
fwait
loopne
int3
mov
and
pushl
sub
push
test
ljmp
inc
mov
std
pop
mov
cmp
clc
call
in
gs
lcall
jnp
push
or
loop
out
pop
pop
ss
ja
mov
or
scas
test
je
pop
push
mov
dec
movq
lret
lock
lock
push
sahf
and
outsb
repnz
std
popa
lds
jecxz
add
push
xchg
int
cmp
in
call
dec
push
test
fisubl
dec
pusha
fwait
sub
mov
mov
adc
shll
sbb
je
inc
nop
or
cwtl
je
cmc
fsts
ja
sahf
xor
and
in
inc
push
push
fdivs
lds
scas
pop
loop
jbe
push
mov
out
lock
lds
hlt
pop
std
ret
loopne
jmp
xchg
or
fs
cmpsl
aaa
and
test
add
fisttps
out
repz
or
or
jl
adc
in
das
test
cmp
sbb
add
into
stos
push
movsl
lcall
fdiv
pop
sbb
and
pop
mov
in
jbe
dec
gs
inc
cwtl
mov
push
cli
in
mov
arpl
repz
addr16
lds
lcall
cltd
xor
mov
mov
js
mov
sub
push
scas
lock
sbb
in
popf
jno
push
data16
rcl
cmp
stc
push
dec
scas
and
hlt
mov
lock
dec
push
nop
mov
adc
ljmp
and
fs
js
lods
adc
testl
xor
mov
cmc
lcall
outsb
stos
jl
and
out
sbb
mov
aaa
add
inc
xchg
sbb
sbb
add
mov
xchg
mov
jmp
adc
js
pop
add
ljmp
enter
mov
xor
cmpb
ds
mov
cmp
and
sahf
call
mov
push
int3
scas
mov
mov
xlat
lods
jmp
out
mov
leave
xchg
jg
sub
jecxz
in
icebp
rcrb
cmp
scas
ret
pop
cli
sbb
xchg
mov
lcall
sbb
mov
out
in
add
fsubp
outsb
mov
hlt
add
add
inc
addr16
test
sub
aas
js
mov
addr16
cltd
aad
xor
xor
outsb
movsb
pop
xchg
popa
test
rcr
fdivl
jo
xor
sbb
pop
push
aaa
fisubs
mov
rorb
pop
cli
icebp
push
mov
imul
or
mov
and
or
hlt
insb
adc
inc
mov
mov
fsubl
cmp
mov
in
pop
xlat
mov
call
or
pop
jle
dec
mov
dec
fwait
into
lds
repz
dec
mov
xchg
dec
std
xchg
fiadds
mov
scas
mov
and
hlt
pusha
testl
aam
sub
aad
and
das
jne
loopne
mov
jecxz
mov
xlat
cmpsl
add
out
add
add
dec
lods
mov
inc
jb
pop
xchg
ljmp
xor
fistps
cwtl
mov
sahf
lock
clc
pop
mov
add
and
addr16
out
add
test
std
xor
inc
fs
lret
movsb
dec
popa
jmp
insl
ret
movsl
xchg
imul
push
ss
lret
lods
cmp
push
mov
out
call
xor
xchg
fninit
loope
aas
sbb
mov
sbb
pop
in
decb
mov
sahf
jl
mov
or
push
xchg
std
pop
repz
fbld
jb
out
in
mov
mov
xchg
mov
inc
addr16
sbb
lea
mov
mov
leave
int3
mov
push
jmp
dec
gs
out
pop
inc
dec
rcll
je
or
mov
pop
je
adc
in
repnz
mov
xor
jae
in
jne
cli
inc
add
popf
jne
jl
mov
jle
dec
dec
in
mov
inc
mov
push
in
xor
in
aad
les
arpl
repnz
ljmp
out
and
adc
imul
jnp
mov
inc
inc
jne
mov
out
stc
pop
mov
add
filds
lock
ljmp
leave
dec
fcmovne
xor
and
cmp
lcall
sbb
cmp
test
pop
inc
call
fidivrs
or
add
mov
ds
jb
mov
jbe
pop
adc
ljmp
pop
js
xchg
inc
daa
sbb
cmp
xchg
pop
rorb
sahf
xorl
pop
pop
inc
aas
mov
and
stc
imul
lcall
mov
pop
mov
inc
imul
jne,pn
xchg
imul
xchg
inc
pop
mov
push
cs
xor
mov
aad
fsubl
or
adc
test
add
out
xor
std
xor
clc
cmp
inc
or
lea
ljmp
cmpsl
out
pop
push
xlat
popa
adc
repnz
das
sar
dec
insl
lods
mov
popf
out
mov
loopne
xchg
sbbl
sub
add
dec
mov
and
mov
pop
jne
cltd
cmp
push
fidivrl
cmp
jecxz
fbld
rcrl
dec
leave
mov
loope
enter
aam
mov
cmp
outsl
jp
inc
sti
fdivrl
pop
loop
adc
sub
mov
cltd
jae
call
push
loope
subps
jbe
jp
add
pop
in
test
lods
jbe
mov
scas
dec
std
or
lahf
mov
mov
and
jbe
bnd
push
cmc
adc
sbb
in
ja
mov
push
movsl
pop
xchg
das
fwait
gs
je
xchg
and
icebp
lret
cmp
ret
cmp
pop
cwtl
fisubl
inc
add
shl
pop
outsb
aas
mov
jbe
push
mov
icebp
hlt
ret
fcmovbe
mov
dec
adc
pop
pop
test
ss
add
mov
rcr
shlb
icebp
adc
sbb
jp
sbb
bound
mov
add
dec
in
sti
hlt
hlt
insl
lahf
test
mov
in
lods
into
mov
hlt
ja
mov
mov
call
lods
add
or
sbb
xchg
add
xor
cmpsl
pusha
jne
mov
fcoms
ds
jbe
sub
jb
adc
scas
xlat
into
fwait
call
lahf
push
push
icebp
xor
ja
scas
add
push
and
or
adc
pop
test
ja
xor
in
inc
mov
push
daa
or
jb
lock
out
mov
pop
push
fdivs
xchg
push
dec
or
or
mov
pop
nop
add
loop
mov
out
scas
iret
out
cmpsl
fmull
dec
pop
xor
push
mov
int
pop
jnp
lock
lods
shll
outsb
adc
bound
cmp
arpl
in
push
inc
das
popf
cmp
push
xchg
inc
pop
insb
mov
mov
loopne
jle
sub
lahf
sub
sub
mov
xor
jae
andb
dec
int
xchg
jp
and
sbb
and
popa
sub
les
stc
out
push
fldln2
mov
scas
mov
mov
pushf
enter
sti
jg
lea
mov
loope
pop
lret
and
sub
cmp
jp
outsb
out
andl
dec
mov
xchg
popf
jae
xlat
repnz
mov
inc
inc
hlt
cltd
push
fsubr
std
jl
loopne
popa
out
es
lds
stos
pop
inc
dec
cwtl
bound
sbb
sarl
dec
inc
pop
jmp
adc
jl
sbb
mov
pop
sub
xchg
lea
aaa
cmpsl
jo
insb
xchg
xchg
aaa
cmpsb
mov
test
mov
sub
loopne
mov
jecxz
or
push
mov
loopne
push
jnp
mov
shlb
lret
lret
cli
bound
mov
cmc
rcl
mov
mov
add
cmp
out
ds
and
pushf
stos
inc
bound
arpl
fimull
sbb
sub
sbb
mov
adc
xchg
cltd
bound
cwtl
int
pop
ljmp
and
xchg
mov
jae
rcll
fdiv
stos
cmpsl
sbb
inc
sbb
or
cmc
iret
imul
xor
int
ja
pop
stc
sti
cs
and
push
jb
int
mov
sbb
sbb
out
lret
jg
push
sub
push
ss
lds
xchg
push
mov
mov
push
mov
pop
popa
fst
shll
sbb
sbb
rorl
mov
pop
enter
repz
and
add
push
jne
jmp
dec
in
flds
sbb
fsubrs
and
lods
movsl
mov
mov
sti
nop
ret
in
or
jne
cmp
xor
mov
les
aam
add
jae
fistpl
mov
sarl
xchg
push
xchg
fisttps
lret
cmp
rcrb
ds
xchg
cli
nop
push
cmp
and
jne
int
stc
cmpsl
jno
xchg
sti
filds
popf
xchg
clc
arpl
pop
inc
mov
iret
loope
es
jmp
gs
push
ds
stc
cmp
xlat
test
aad
mov
lods
js
lcall
adc
push
lahf
movbe
imul
sbb
or
bswap
and
cld
push
dec
push
mov
dec
xor
adc
lss
loope
ljmp
push
dec
push
add
testb
sub
ljmp
call
outsb
or
inc
idivb
popa
in
mov
mov
lret
fisttpl
xchg
aam
mov
xchg
dec
or
inc
mov
cmc
push
test
jmp
xchg
push
jge
inc
dec
xchg
cmp
dec
movsl
enter
scas
roll
xchg
jo
in
or
repz
aad
incl
in
xor
xchg
cltd
mov
mov
cmp
sti
xchg
testb
xor
xor
incl
and
int
movsb
cmp
mov
dec
in
test
jns
and
in
call
addr16
sti
xchg
lods
sarl
xchg
jmp
daa
xor
das
loop
xor
jne
jnp
jg
out
insl
sub
adc
lea
popa
add
fwait
or
cltd
xor
sbb
dec
jge
dec
arpl
add
jns
xchg
pop
jnp
call
cmc
in
js
test
and
aam
hlt
leave
pop
jp
mov
sub
fstps
adc
and
sub
divb
lds
and
sahf
sbb
rclb
cltd
fnstenv
xor
js
out
ret
shll
mov
pop
sub
sbb
fcmove
xor
push
push
lahf
loopne
xor
sbb
adc
jno
add
jmp
gs
imul
lahf
loopne
loopne
sub
inc
outsb
mov
test
push
inc
ja
in
outsl
adc
sti
jae
mov
jb
sti
std
or
pushf
dec
sub
jle
dec
fistpl
outsl
xchg
cmp
xor
mov
adc
cmp
in
mov
cwtl
cmp
mov
stos
popa
call
add
xor
add
ja
cmpsb
push
inc
leave
xchg
fs
cmc
and
push
sub
mov
xor
add
mov
mov
iret
xlat
std
imul
lds
sbb
out
xor
fs
mov
xchg
adc
clc
adc
lods
adc
and
push
cwtl
mov
sbb
cmp
insb
sub
mov
dec
or
mov
jecxz,pn
pushf
ret
dec
xlat
jmp
inc
int
cltd
pop
sti
add
or
and
ficoms
jmp
pop
jg
mul
sbb
in
mov
fists
pushf
stos
pop
sub
inc
sbb
xor
arpl
mov
cld
testl
into
jmp
testb
pop
icebp
and
shll
adc
add
insl
fsubrl
repnz
rcl
test
les
insb
repz
rolb
adc
pop
sub
stos
movsl
in
sbb
movsl
adc
scas
inc
adc
xchg
mov
aas
mov
mov
mov
insl
sti
icebp
inc
and
and
xchg
push
add
jno
stos
ficoml
or
movsb
movsb
lahf
aad
sahf
inc
mov
push
mov
mov
sar
cli
fstps
pusha
lret
cli
add
adc
enter
jno
pop
in
and
adc
mov
inc
mov
sbb
dec
dec
out
pop
call
adc
and
xchg
sbb
loope
or
push
pop
inc
push
inc
aad
xor
pop
fildl
outsl
lds
mov
xchg
xchg
dec
out
inc
adc
mov
lods
adc
out
out
repnz
stos
xorl
push
dec
sub
mov
inc
add
out
sub
icebp
sbb
mov
sbb
cwtl
pop
pop
test
pop
mov
scas
add
ljmp
dec
cmp
mov
sub
push
sti
adc
xor
fidivs
stos
mov
scas
js
jb
cmpsb
xor
test
xchg
repnz
mov
sarb
cmp
mov
call
popa
inc
dec
push
cmp
sub
arpl
rcl
xor
stc
gs
daa
dec
rcrb
lahf
sub
and
mov
dec
pushf
pushf
push
dec
ret
xchg
sbb
lea
mov
sbb
xor
push
push
push
and
pop
inc
call
enter
es
cli
push
push
sub
movsl
inc
xchg
fiaddl
and
jg
cmp
sahf
xchg
insb
xor
cmp
cmp
or
mov
mov
push
dec
or
mov
xor
int3
in
jnp
adc
or
sbb
fidivs
jl
push
outsb
lds
adc
mov
jg
imul
mov
shlb
mov
sub
xlat
and
mov
sbb
add
push
movsb
sub
cltd
and
mov
push
xor
and
adc
movsb
push
hlt
movsb
xlat
xor
std
sbb
lcall
ret
push
jbe
adc
mov
insl
fsubs
repz
jle
lea
sbb
sbb
jmp
outsl
shrb
fs
pusha
push
xor
in
fidivrl
cltd
and
push
lret
cmc
inc
call
lcall
rolb
lds
pop
insl
push
inc
inc
lcall
sub
and
add
inc
jae
daa
dec
into
push
js
mov
popf
into
push
in
ljmp
pop
jge
nop
add
mov
orl
pop
fimuls
xor
daa
sbb
jnp
add
cmp
sub
xchg
mov
cmp
push
lods
in
push
and
sub
out
mov
lock
jmp
out
rolb
out
out
pushl
add
int
outsl
jmp
push
mov
iret
stos
mov
pop
xchg
iret
psubq
dec
xor
push
jmp
addr16
xchg
jle
fstl
lock
icebp
sahf
shll
jge
imul
lahf
pop
popa
jnp
ror
out
dec
cmp
cmp
out
sbb
dec
jp
pop
inc
and
adc
enter
fcmovbe
ret
flds
enter
inc
gs
fsubr
xor
xchg
mov
mov
and
addr16
mov
cwtl
arpl
hlt
mov
shrb
mov
pop
lcall
dec
out
sbb
aaa
mov
add
push
daa
mov
clc
or
pop
ljmp
cmpsl
outsl
xor
ds
iret
sti
add
sub
out
push
add
scas
dec
int
ja
mov
add
leave
jmp
das
and
mov
gs
jns
push
pushf
sub
roll
test
jl
aad
test
dec
jge
pop
mov
sti
xlat
cltd
dec
out
or
jge
movsl
mov
push
aad
mov
lcall
in
or
sbb
lea
test
movsl
call
data16
lock
sbbl
loope
sub
cli
jns
imul
inc
jle
mov
int3
lods
filds
cld
int
in
cmpsb
aam
add
subb
popl
xchg
sub
sbb
in
mov
sub
idivl
add
cmpsb
js
dec
mov
jns
daa
arpl
out
lahf
push
cld
stos
outsb
dec
imul
dec
out
and
cmp
in
mov
push
cli
shrb
xor
inc
jns
je
movsb
push
les
cmp
mov
cld
shl
sbbb
adc
add
sbb
jp
mov
insl
in
lea
pop
rol
dec
outsb
ljmp
idiv
inc
negl
inc
mov
or
xchg
lds
shrb
popf
lahf
or
addb
les
scas
pusha
insl
stos
aam
and
xor
or
cli
and
mov
lret
scas
pop
jp
or
aaa
loopne
pop
adc
stc
lret
and
mov
dec
push
dec
cmp
add
aas
inc
jnp
mov
or
fidivl
inc
pop
or
mov
aaa
push
lret
flds
add
in
in
mov
movsl
adc
adc
xor
or
push
outsl
sbb
mov
out
rcrl
ds
mov
mov
fwait
test
xchg
inc
stc
ljmp
lea
lret
jne
cmp
loopne
mov
sti
pop
repz
out
sarl
loop
adcb
rolb
loope
in
jp
sbb
clc
orb
movsl
add
jg
rcrl
inc
inc
push
outsl
stc
mov
pusha
inc
cmp
xlat
pop
jl
jle
and
pop
rorl
pusha
lock
mov
call
outsl
inc
jo
outsl
lret
scas
push
and
mov
gs
ret
push
out
xchg
adc
mov
sub
xchg
fdivrp
mov
icebp
xchg
sbb
add
add
ret
mov
pop
xchg
fidivs
mov
sub
pop
popf
sbb
jb
adc
mov
xor
sub
lret
mov
ret
into
push
jne
sbbl
mul
std
mov
dec
popf
xor
add
cwtl
and
ret
sbb
fmuls
add
dec
sub
mov
mov
mov
cmpsl
mov
mov
movsl
call
dec
sahf
mov
test
int
sbb
inc
pop
pop
mov
or
xchg
dec
lea
mov
sbb
mov
out
shll
lods
xor
jae
clc
push
jl
push
mov
and
pusha
xor
loope
cltd
pop
lret
inc
fmul
stc
enter
jno
cwtl
sbb
sti
sar
or
int
mov
sub
lods
push
sbb
inc
fnstsw
xor
mov
lods
call
pop
or
xchg
mov
pop
pop
mov
xchg
gs
std
dec
and
pop
or
pop
movsl
popl
out
xor
int3
push
jmp
out
jns
xor
and
or
dec
sub
sub
xchg
mov
xor
cwtl
imull
aam
enter
push
sub
cmp
xor
adc
das
pop
addl
stos
ja
scas
cmp
add
dec
dec
cli
fwait
scas
jns
jno
mov
or
rorb
adc
jl
fbstp
adc
xlat
dec
rorl
fimuls
cmp
sbb
cmp
addr16
in
pop
bnd
sub
dec
rcrl
mov
out
and
push
cmpsb
push
mov
mov
mov
iret
inc
lcall
cwtl
imulb
mov
mov
inc
andb
hlt
mov
mov
bound
push
xchg
test
pop
mov
outsb
clc
xchg
push
fwait
push
and
xlat
fstps
jge
scas
and
xor
lods
inc
xor
mov
icebp
jo
xor
sbb
cli
in
test
xchg
mov
cmpsb
adc
ficoms
lea
scas
punpckhwd
sub
sbbl
loop
aam
dec
mov
cmc
movl
and
fnstsw
cltd
inc
dec
call
leave
in
inc
cmp
call
subl
jmp
inc
lds
test
fistps
fiadds
aaa
add
int3
and
insl
popa
and
clc
sub
mov
pop
outsl
push
jae
push
nop
mov
jns
xchg
lea
rclb
roll
dec
je
jmp
lock
xchg
ds
enter
jl
and
add
js
arpl
arpl
es
ss
dec
mov
roll
push
popl
std
test
push
cmp
mov
pop
mov
out
xor
loopne
mov
push
or
lea
outsb
dec
xchg
or
mov
data16
movsb
jp
test
scas
sti
dec
jbe
mov
lods
add
sub
jno
mov
sbb
lret
cmp
aad
nop
sub
in
movsb
loope
push
rolb
pop
inc
mov
es
and
inc
mov
mov
aad
add
lea
arpl
mov
mov
lods
sub
mov
ja
fimuls
add
fmull
mov
jge
cmpsl
in
lret
inc
sbb
mov
jmp
sbb
cltd
or
enter
or
fnstcw
push
rorb
movl
adc
ds
adcl
movsb
cmp
mov
push
sub
in
sbb
add
xchg
into
xor
aad
pop
and
movsb
sub
test
fistps
adc
jno
cli
dec
mov
test
and
inc
fisubl
ficompl
jge
cli
pop
in
mov
sbb
out
jnp
inc
in
sub
test
mov
add
mov
int3
push
xor
fsin
mov
pop
xor
xor
xchg
dec
adc
xor
stos
adc
mov
jae
xchg
jle
pop
int3
mov
lods
jo
xchg
aam
fidivs
pushw
mov
pop
lea
and
xor
inc
fistpll
sbb
and
outsb
scas
movsb
xchg
mov
jg
in
jno
subl
pop
aad
adc
or
mov
imul
cmp
scas
xchg
and
adc
jp
lahf
mov
gs
mov
jg
xor
mov
add
inc
out
pop
xchg
sti
or
lret
xchg
sti
cld
cmpsl
leave
test
xor
lods
mov
pop
sbb
shll
jns
mov
cmpl
mov
sahf
push
dec
lahf
cmpb
outsl
fdivrl
ds
push
push
pop
jle
cmp
pushf
pop
test
mov
leave
mov
pop
cmp
ja
mov
das
insl
sahf
sarb
mov
imul
pop
pop
arpl
sbb
mov
sub
fwait
in
outsb
adc
out
mov
enter
mov
aas
stos
jmp
mov
cltd
hlt
add
icebp
enter
test
dec
push
add
cs
cmp
mov
adc
lret
inc
mov
std
clc
push
mov
sar
fsts
lods
pop
xchg
notb
js
add
cmp
adc
and
push
call
pushf
jp
mov
push
imull
or
lods
hlt
mov
cmpsb
or
or
gs
mov
out
hlt
addr16
jg
jp
or
cwtl
xchg
in
inc
out
pop
push
push
aam
xchg
fdivl
sti
shl
test
out
push
mov
xchg
jl
push
jg
sbb
std
add
adc
jp
mov
dec
or
xorl
inc
shrb
in
xor
data16
clc
lcall
loop
mov
xchg
mov
mov
aam
add
fdivs
xor
cmpsl
xchg
js
mov
xchg
enter
cmp
dec
add
cmpsl
dec
mov
xor
xor
imul
add
mov
sub
jae
mov
insl
or
mov
mov
dec
or
add
push
test
cld
jbe
mov
xchg
out
das
mov
xor
je
je
in
push
jg
push
cli
stos
testl
fadd
push
into
adc
mov
mov
pop
sbb
fidivs
cmp
pop
clc
stos
cltd
rcrl
ds
jbe
lock
in
mov
cmp
xchg
inc
mov
jb
in
xchg
xchg
lock
jno
sbb
pop
js
push
cmpsb
inc
sti
xchg
jo
xorb
dec
bound
lret
push
dec
and
add
xchg
xchg
sbb
add
and
loope
imul
xchg
adc
addr16
in
imul
sbb
lock
pop
mov
test
in
out
jge
cltd
cmp
add
cmp
ja
leave
int
ljmp
mov
sbb
xlat
push
lcall
fwait
fs
test
loopne
mov
sbb
pop
rolb
shl
pop
ret
sbb
in
push
imul
push
fcomp
andb
clc
cmp
adc
mov
adc
xchg
push
push
inc
daa
fwait
mov
cltd
mov
aad
idivl
test
loop
jmp
ret
test
fildll
in
in
aad
mov
pop
cmpsl
inc
mov
dec
repz
mov
push
mov
aaa
cwtl
mov
lret
rcll
hlt
fcmovbe
subl
aaa
mov
jo
cwtl
pop
inc
mov
and
xchg
xchg
ds
stc
adc
jge
lock
push
xchg
pop
jecxz
aad
xchg
hlt
xchg
cmp
xchg
in
sbb
push
cli
bsf
movl
push
sbb
test
cmp
cmp
cmpl
dec
xor
mov
add
arpl
adc
add
hlt
push
fimull
test
clc
mov
loope
gs
add
push
jge
ds
jns
outsl
loop
lcall
mov
shl
jno
xchg
inc
jbe
scas
fisttpll
lret
leave
outsl
xchg
fistpll
sub
xchg
cli
jo
pop
mov
outsl
xor
sub
cmpsl
dec
add
lret
sbb
test
fwait
adc
popf
imul
xor
iret
push
pop
adc
fcmovnu
js
fwait
jmp
inc
into
inc
dec
movsl
add
cmp
jmp
pop
jp
les
mov
ret
stos
inc
add
pop
mov
jge
imul
test
out
mov
ja
inc
mov
mov
sbb
outsb
fcoms
mov
pop
sahf
cmpsl
insl
movsb
mov
sbb
pop
les
daa
sbb
and
insl
stc
add
stos
push
jb
aas
push
dec
popa
negb
inc
xchg
clc
out
outsb
adc
fsubs
aaa
add
fildll
xchg
adc
pop
push
ljmp
insl
int
mov
js
mov
lds
lds
aas
cmp
test
out
arpl
cmpsl
add
and
das
pusha
add
out
inc
push
xor
cmp
sub
and
mov
add
jbe
imul
testl
mov
insb
add
pop
notl
repz
repz
add
mov
add
lods
cmp
fsts
dec
mov
mov
xor
imul
out
pop
dec
aas
adc
lcall
dec
fmuls
in
ret
in
sbb
add
and
mov
mov
in
lods
mov
jmp
push
fcoms
inc
xor
daa
ja
inc
pop
loope
inc
movsl
xchg
pop
orb
lahf
outsb
sub
cmp
ss
adc
stos
sar
faddl
jnp
fisubrs
cmp
push
mov
in
popf
pop
movsb
sbb
lret
dec
hlt
xchg
ret
dec
mov
xor
cmp
shr
mov
xchg
lea
adc
loop
push
push
movsb
and
lods
ds
popf
xchg
cwtl
std
mov
stos
jo
fimuls
lahf
mov
hlt
and
jge
popf
jbe
push
lret
leave
fidivs
xchg
ja
sbb
mov
mov
fwait
mov
pop
cmp
mov
push
mov
cmp
jge
adc
lea
cmp
add
jno
stc
xchg
sbb
adc
and
mov
xchg
fstl
mov
inc
cli
loop
outsb
fs
jns
subb
push
fstpl
adcl
scas
dec
clc
mov
pop
out
or
outsb
or
dec
cmp
in
out
into
sub
andb
repz
or
aad
add
mov
outsb
add
in
loope
xchg
sub
jnp
dec
mov
nop
jl
stc
xor
mov
decl
jle
jne
xchg
or
mov
test
pop
mov
out
imul
push
out
out
mov
mov
leave
std
pop
lods
rorl
ficoms
inc
push
ljmp
popf
iret
push
fsubl
mov
sub
push
mov
push
jge
ljmp
je
push
lods
sbb
jno
mov
mov
pop
in
and
adc
sub
mov
jmp
jg
or
es
cs
fabs
and
fistl
sbb
dec
mov
aad
sbb
in
xchg
add
adc
aam
jge
or
jmp
xor
addb
pusha
dec
cmc
lea
xchg
xor
lock
icebp
addb
rorb
sbb
sbb
xchg
xchg
dec
add
mov
sub
xchg
pop
inc
sbb
jno
shll
nop
adc
test
and
fcompl
lahf
inc
fucomp
mov
jnp
leave
jecxz
push
sub
push
pushf
jg
out
ret
shlb
jle
insb
out
inc
dec
jg
sti
mov
int
dec
xor
les
mov
xchg
insl
jle
cli
arpl
jnp
mov
push
lret
xchg
sub
lea
std
xor
sub
shlb
xchg
das
addr16
call
inc
jae
sub
inc
push
rcrb
inc
mov
shll
call
mov
mov
dec
push
jmp
fistpll
sub
jnp
fstpt
mov
jp
out
push
push
dec
add
cmpsl
cli
inc
mov
xor
add
out
leave
mov
mov
repnz
test
push
rcrb
out
mov
sub
sub
add
add
test
testl
mov
xchg
out
xorl
mov
pusha
popa
popf
fnstcw
cmpsl
add
inc
je
call
lods
cmp
or
mov
add
xchg
ljmp
jmp
pop
enter
mov
or
adc
ror
sub
out
mov
out
dec
pop
lods
enter
leave
inc
cmp
lahf
mov
cwtl
outsb
mov
lock
test
inc
shlb
fidivs
pusha
lret
inc
das
jne
push
sub
test
test
bound
stc
cld
cld
add
xlat
mov
cld
and
je
sahf
stc
ret
testb
jl
fistpl
dec
push
dec
adc
inc
pushf
pop
xchg
add
cmpsb
and
jge
xlat
and
nop
test
test
mov
ljmp
xor
ljmp
out
rcl
idivl
sbb
fisubrl
mov
jo
out
test
lods
add
cwtl
rolb
insl
js
ja
std
jmp
pop
les
aad
mov
inc
sbb
cmp
or
xor
mov
mov
jp
or
in
pop
dec
inc
pop
imul
negb
movsl
ljmp
ss
add
sub
popf
fmulp
iret
lahf
js
inc
adc
push
mov
add
lahf
outsb
xor
rcrl
sub
push
jno
and
out
and
sbb
mov
sub
xor
imul
jp
leave
push
sub
cmpsb
cwtl
sub
inc
jecxz
adc
add
into
sti
inc
mov
jmp
icebp
dec
popf
out
pop
xchg
sbb
incl
shl
in
aas
ja
push
jb
dec
bndldx
js
stc
adc
stos
mov
xlat
jne
mov
sbb
aaa
sub
je
pop
ss
push
add
sahf
loop
push
cmpl
dec
xchg
out
mov
out
mov
out
mov
call
cmp
push
cs
or
inc
daa
xchg
sbbw
popf
pop
fsts
jl
imul
and
into
dec
loope
cmpsl
push
cmp
push
pop
xchg
bound
dec
cmpsl
or
sub
and
dec
loop
repnz
mov
stc
mov
fidivrl
in
aam
xor
pushf
mov
test
in
xor
add
jl
jnp
push
mov
popa
lea
int3
imul
xchg
or
fwait
outsl
jae
push
mov
fidivs
in
or
daa
insl
cmp
pop
push
ret
loopne
mov
inc
popa
mov
out
lock
lods
inc
add
jl
lret
pop
and
int
xor
stos
loop
aaa
imul
repz
aaa
ficoms
imul
je
cmpsl
out
in
mov
ljmp
inc
addb
enter
inc
popf
mov
inc
sub
dec
cli
dec
fstl
mov
add
dec
mov
pop
mov
cmp
jno
in
mov
hlt
pusha
fisttpl
add
inc
inc
adc
xchg
jge
or
dec
push
popl
sbb
pusha
mov
fs
pop
mov
mov
or
push
jecxz
push
mov
xchg
mov
leave
leave
jg
testl
add
cwtl
rcr
cwtl
adc
push
inc
test
je
push
stos
or
xor
add
out
pop
xor
in
shrl
adc
sahf
xor
aad
lock
ret
pop
lods
xchg
lea
push
xlat
push
inc
mov
mov
je
mov
mov
jmp
cmp
add
and
add
cwtl
xchg
push
fwait
repz
sub
dec
dec
mov
sar
es
push
cmp
ret
jecxz
leave
push
mov
ss
mov
popf
xchg
cmp
mov
and
mov
cmp
outsb
mov
xchg
mov
cli
dec
or
add
das
cmp
mov
push
fwait
lret
fwait
outsb
ljmp
adc
mov
mov
shrb
aam
push
cmpsl
andb
push
and
add
daa
imul
shl
mov
jp
mov
insl
push
push
pop
inc
fmuls
fucomip
popl
and
xchg
mov
xor
iret
lahf
leave
and
lret
incl
xchg
or
pop
and
jmp
mov
notb
aas
dec
lods
lahf
sbb
loop
je
dec
pop
scas
add
in
push
inc
inc
mov
lock
pop
mov
sbb
roll
dec
lcall
mov
sub
imul
lahf
mov
insb
int3
push
jb
ja
add
cmp
aas
jo
pcmpgtw
or
jecxz
cmpsl
add
loope
dec
nop
xchg
sahf
mov
fistpll
mov
lea
aam
in
loopne,pn
sar
and
push
mov
imul
ret
cwtl
inc
les
and
sub
scas
aas
push
rorb
cmp
sbb
cmp
rorl
sub
popf
add
sbb
push
gs
std
sub
cmp
sbb
or
cli
fistpl
gs
xor
adc
mov
mov
loopne
je
pop
andl
das
popf
fsts
lahf
enter
call
in
loop
mov
cmp
or
stos
mov
jbe
xor
test
addl
repnz
inc
dec
push
out
cld
sub
mov
xor
popf
push
data16
rcr
mov
sub
mov
lcall
rcl
adc
loope
je
aad
fs
mov
imul
gs
dec
ja
in
or
jecxz
fidivl
out
mov
loope
ret
and
mov
xchg
shlb
and
mov
cmp
push
icebp
lcall
out
push
lods
mov
push
stos
loopne
in
mov
push
pop
push
subb
jl
insb
sbb
lods
mov
out
cmp
sbb
test
add
mov
aad
out
rol
xor
rcrl
rolb
sti
movsl
add
fnstcw
aas
imul
stos
mov
into
xchg
inc
popf
mov
mov
xor
pop
icebp
outsl
rcl
roll
push
outsb
int
mov
ljmp
dec
xor
or
cltd
imul
out
push
sub
adc
imul
xchg
rolb
inc
ret
jns
cs
push
cmpl
pusha
movsl
jle
ret
out
xlat
xchg
outsb
aas
dec
test
lds
xor
pop
push
mov
aad
sub
cmp
enter
ss
andl
lods
push
ss
ficomps
xchg
in
or
fnsave
push
mov
mov
sub
pop
pop
xchg
inc
fstpt
adc
sbb
stos
xchg
es
push
data16
cltd
out
imul
sub
ret
repnz
dec
add
pop
mov
popf
lahf
and
xchg
xlat
and
xor
stc
mov
add
arpl
ret
stos
pop
mov
mov
into
xor
pop
ret
mov
and
push
addr16
stc
push
cltd
xchg
aaa
push
and
push
adc
push
fidivs
adc
jecxz
mov
mov
push
movsl
ja
test
xchg
jnp
ss
inc
mov
inc
mov
iret
lahf
cmp
jge
in
les
or
mov
aad
subb
adc
add
sub
mov
lods
cmp
daa
xor
sub
xchg
mov
sbb
inc
rcll
lahf
ret
jnp
into
jbe
mov
adc
jl
push
push
jle
rcll
pop
inc
in
mov
xor
jns
cmpsl
add
imul
mov
loop
sbb
div
and
orb
xchg
or
dec
push
outsb
repnz
popa
sbb
dec
push
lock
or
adc
hlt
add
ljmp
in
mov
cli
out
sub
repz
or
xchg
inc
fists
cmp
rcl
lcall
in
stos
fisubs
mov
aad
popa
mov
orl
cmp
aas
je
andb
nop
push
push
cli
pop
push
fistps
lods
cmp
dec
les
or
mov
or
mov
sbbb
add
lea
mov
out
lcall
dec
stc
cld
push
mov
adc
add
dec
shrb
lds
xchg
jg
mov
cld
je
rcll
pop
pop
sti
popf
mov
test
mov
out
int
cmc
xor
in
int
fisttpll
add
leave
and
movsl
insl
movsl
fwait
mov
in
cld
cld
insb
jmp
adc
popf
data16
xchg
or
movsb
sbb
imul
jge
push
cltd
mov
in
push
inc
mov
mov
jg
call
leave
aad
insb
push
imul
jl
add
sub
lret
dec
mov
in
negb
out
andl
jo
outsb
aam
fucomip
sub
fdivl
sbb
daa
arpl
cwtl
std
push
imul
jnp
lret
in
lret
mov
xor
ss
inc
dec
xor
add
mov
inc
sbb
mov
aam
ret
xor
sbb
xchg
dec
sti
jae
adc
and
jne
je
and
or
jmp
add
push
test
daa
mov
cmp
and
or
int
add
xchg
packsswb
ljmpw
jne
push
fwait
or
mov
mov
into
cmc
pusha
std
test
pop
mov
cmp
push
or
inc
jno
psraw
mov
stos
cmp
pushf
addr16
add
fdivrs
inc
outsb
dec
inc
in
stos
iret
fdivrl
stos
push
cmovo
andb
mov
aaa
pop
in
xor
sti
lea
adc
mov
mov
enter
xor
out
push
sbb
push
xchg
insl
loop
pop
cwtl
mov
mov
cwtl
int
xchg
mov
cld
xor
test
push
inc
pop
insl
sub
adc
stos
or
xor
lahf
or
ja
push
fistps
orl
jnp
cmp
cmp
in
nop
adc
popf
shll
movsl
add
pop
bound
add
in
xchg
les
sub
out
fcmovb
addr16
mov
fld1
mov
sub
add
std
push
sbb
fnstcw
insb
movsb
and
xchg
das
int3
cmpsl
inc
cmp
and
push
je
ret
popf
adc
jno
fisttpl
jnp
stos
fs
inc
int3
sbb
mov
cli
loopne
push
pushf
xchg
sbbb
es
adc
sub
xchg
mov
pop
cltd
mov
jb
dec
xor
and
iret
mov
dec
sub
aaa
jbe
dec
aad
push
jge
pop
fmull
mov
adc
inc
testl
movsb
cmpsb
jnp
xchg
out
mov
bound
arpl
test
repz
xor
jbe
rcrb
fxch
add
cwtl
or
scas
jns
push
push
xchg
push
fisubl
cmp
mov
sbb
sub
out
addr16
mov
inc
push
pop
add
cmpsl
xchg
inc
and
or
out
add
push
dec
jne
xchg
mov
xor
or
testb
pusha
mov
cmpsl
push
pop
xchg
mov
inc
push
cwtl
jb
imul
rep
pop
aad
push
popa
mov
js
xchg
icebp
lret
rolb
sbb
lahf
mov
push
sahf
mov
sti
repz
nop
sbb
jecxz
jg
fisubs
popf
popa
and
cli
mov
cmp
dec
dec
fsts
push
movb
adc
jno
std
sub
mov
mov
add
insb
fdivrl
pushf
sub
notl
push
xor
fidivrs
mov
xorl
xor
ret
or
xchg
jno
aam
or
loope
push
lods
sbb
push
jmp
cld
popf
add
out
jl
mov
rcll
sub
inc
jle
sub
sti
in
repz
mov
das
sub
jae
pop
cmp
scas
mov
fidivl
or
push
mov
cmpsl
andl
pop
std
popf
or
rcrb
cwtl
and
sub
ficoms
push
push
xor
loopne
fistpll
jg
or
jmp
ds
mov
adc
mov
mov
data16
fcmovnb
leave
aad
adc
mov
inc
in
test
pop
subb
dec
popl
leave
pusha
int
jbe
mov
movsl
xor
mov
lock
out
bound
icebp
or
test
shll
stos
push
cld
jmp
jp
add
xchg
int
test
inc
rcrb
dec
imul
out
rorl
mov
inc
inc
lds
inc
or
push
sbb
stos
xchg
sahf
mov
jb
sbb
jae
pop
mov
pmullw
pop
mov
push
push
inc
push
adc
mov
push
or
mov
add
imull
orb
testb
add
mov
mov
std
lahf
aaa
sbb
dec
mov
and
movsl
inc
scas
cmp
test
jmp
pop
adcb
std
xchg
in
dec
xchg
decb
pop
sti
mov
lea
ss
push
imul
dec
cltd
mov
push
insl
movsl
sbb
pop
cltd
lock
xor
lret
mov
inc
cwtl
aaa
sub
lods
decb
stos
leave
int
sbb
cmp
pop
adc
bound
dec
pop
movsl
or
or
loop
or
sub
shlb
ss
fs
scas
cld
int3
xor
insb
arpl
cli
adc
das
adc
gs
sarl
cmp
dec
and
dec
add
xlat
stc
push
icebp
lds
icebp
pop
ja
lds
outsl
lea
insb
and
or
jbe
stos
pop
fsts
xor
pop
cmp
repnz
shll
push
and
adc
xchg
push
inc
notb
mov
sub
int
mov
outsl
sti
pop
jl
xchg
add
mov
sbb
ret
push
lahf
or
decb
pop
mov
je
pop
sbbl
fcompl
jno,pt
jp
in
sub
dec
pop
adc
loopne
iret
div
dec
push
adc
out
mov
xor
ss
cmp
and
xorl
in
les
test
xlat
and
sub
sbb
sbb
stos
gs
jnp
mov
push
cmp
push
push
ficomps
fdivs
pop
int
cmp
aad
mov
mov
test
sub
push
movsl
cmp
cmp
xchg
sub
sbb
xchg
xor
pop
mov
into
mov
xor
fdivrl
movsb
sub
xchg
sub
sbb
imul
adc
sarl
pop
or
sbb
mov
in
pusha
lods
ret
jge
outsl
mov
pop
inc
xchg
dec
aaa
and
lret
inc
cmp
pop
ljmp
fwait
ss
lock
call
xchg
xor
pop
jno
add
pop
push
ds
loope
xor
jns
sbb
movl
aad
adc
dec
notb
push
xchg
mov
jp
add
mov
lea
aaa
loope,pn
pop
xchg
mov
sub
mov
jl
mov
rolb
inc
push
icebp
adc
fs
loopne
daa
scas
push
fnclex
sahf
fcoms
loop
jb
dec
push
shll
ret
cmp
enter
aad
stos
dec
cs
mov
push
test
test
out
xlat
jae
mov
sti
xchg
xchg
xlat
xor
insb
in
pop
cmp
test
shlb
jg
leave
add
enter
rcrb
sbb
dec
icebp
pop
xorl
mov
or
and
jle
cld
dec
xchg
das
xchg
push
mov
mov
iret
aas
mov
loop
stos
xchg
jg
gs
shlb
imul
fdivrl
jmp
stos
test
adc
sbb
pop
ret
subb
pop
and
adc
pop
mov
cmpsb
push
lods
fwait
cmp
xor
or
outsl
shlb
cmpl
jb
inc
cmc
jge
push
scas
mov
arpl
idiv
imul
sub
add
xchg
ret
jns
mov
inc
cmpsb
test
sub
cmp
cmp
gs
mov
sbb
mov
dec
xor
ljmp
jns
or
nop
add
iret
inc
jp
mov
vmovss
xchg
and
or
test
es
mov
push
adc
xor
cmp
leave
xorb
sarb
jecxz
outsl
adc
dec
and
adc
movsb
dec
sbb
cli
aaa
jmp
in
pop
loop
sahf
fwait
pushf
pop
fldcw
sbb
jne
nop
arpl
and
mov
sub
xor
andb
xor
into
sbb
stc
daa
std
call
push
pop
hlt
sbb
aad
cmp
or
dec
mov
into
dec
xor
call
jb
cmc
adc
outsb
orb
cltd
subb
or
mov
mov
and
xchg
jge
jno
adcb
inc
sbb
das
cltd
or
cmc
sti
sbb
idivb
stos
aaa
adc
cmp
shlb
or
pop
es
cmpl
jle
pop
ret
ficoml
mov
sbb
aas
testb
je
adc
dec
adcb
movsb
arpl
mov
pop
pusha
cli
adc
jmp
icebp
xor
xchg
aaa
push
jecxz
push
repz
daa
jnp
jle
jb
mov
add
xor
lods
out
filds
jl
add
movsb
and
mov
mov
push
int
js
hlt
cmpsb
push
pop
dec
out
rcll
mov
imul
dec
dec
xchg
xchg
xor
and
push
rol
into
mov
jne
sub
daa
mov
shlb
or
cld
jg
flds
xor
pop
hlt
stos
mov
popa
mov
or
leave
adc
idivb
xor
je
popf
push
cmp
xchg
xchg
arpl
pop
scas
cmp
repnz
inc
add
stos
iret
mov
jge
pop
je
jmp
sbb
add
std
aas
andl
xor
push
lds
popf
cmp
movsl
sahf
mov
inc
addr16
pop
notl
cmpsl
inc
xchg
icebp
les
inc
mov
shrl
push
popa
pop
daa
adc
adc
mov
mov
jne
lods
rep
xlat
hlt
lcall
mov
dec
mov
negl
mov
or
shrl
add
add
add
sbb
jbe
jne
shlb
outsb
push
fsubp
jg
mov
testl
cmp
es
mov
fnstcw
sub
frstor
jae
testb
dec
dec
pop
sub
jecxz
inc
popa
adc
mov
shlb
fsubrl
adcb
push
mov
cmp
xchg
lods
xor
les
nop
popa
in
jb
aas
pop
mov
scas
mov
test
mov
clc
adc
jl
fisttps
pop
mov
stos
sub
inc
into
pop
cmc
or
dec
xchg
xor
iret
idivb
dec
shll
ret
loopne
xchg
pop
cmpsb
gs
hlt
jmp
mov
hlt
lret
inc
popf
jp
scas
fcmovu
add
sub
push
cmc
rorl
inc
sbb
repz
push
cwtl
not
dec
dec
adc
mov
lcall
pushf
inc
call
movsb
stos
loop
rorb
pop
out
fbld
and
shll
mov
ficompl
cmp
in
jp
ret
or
popf
adc
les
cwtl
push
inc
ficompl
ret
mov
push
packsswb
adc
add
mov
mov
iret
pmuludq
and
mov
pop
pop
aas
dec
lahf
dec
pop
sti
aas
lret
pop
insl
sti
cwtl
push
nop
push
out
lret
and
out
clc
mov
pop
mov
dec
cwtl
imulb
adc
xchg
ret
clc
sub
xor
dec
ds
jge
fcoms
mov
enter
push
add
jno
sar
add
shlb
sbb
imul
or
mov
inc
cmp
xchg
cmp
into
cmp
fwait
popf
lock
jne
ret
lds
fcmove
imul
inc
dec
mov
ds
addl
pop
stc
sbb
pusha
cmp
sahf
adc
dec
pushf
adc
idivl
out
sbb
cmp
sub
stos
ja
inc
adc
lea
dec
mov
testl
and
cs
out
lea
mov
dec
flds
xor
fldl
add
push
icebp
lods
cmc
ja
dec
mov
mov
in
fidivl
inc
sbb
rorl
enter
sbb
jmp
sbb
cltd
xchg
cld
notl
xchg
je
and
sbb
rcrb
shr
lds
push
jmp
in
jbe
cmp
adc
fisubrs
ret
mov
xchg
mov
subl
pop
sbb
ja
in
push
mov
and
fcmovb
xchg
xchg
adc
add
cmpl
shlb
stos
push
test
add
mov
push
mov
std
jmp
xlat
loop
adc
cmp
lock
cmp
mov
bound
mov
test
std
sub
das
adc
mov
divb
daa
enter
ljmp
mov
scas
lret
mov
fwait
lret
sub
mov
push
mov
arpl
sbb
or
jl
out
push
aaa
lret
enter
mov
push
and
pop
insl
jl
ss
inc
mov
push
daa
aam
cli
mov
xor
sub
fwait
sbb
xchg
jnp
or
ret
ss
int
cmc
jne
sub
add
xlat
mov
in
sub
xchg
arpl
xlat
out
loop
mov
inc
scas
xchg
pop
ret
xchg
cs
mov
aam
ds
out
ljmp
inc
mov
inc
cmpsb
ljmp
jb
or
sahf
jne
mov
in
inc
ret
xor
xor
pop
nop
subb
divl
jnp
pop
and
pushf
adc
jecxz
lods
andl
arpl
mov
xchg
push
mov
xor
sbb
xchg
testb
or
xchg
or
fistpll
mov
arpl
sub
mov
mov
mov
jle
out
mov
sar
loope
pop
mov
and
dec
enter
or
aas
shrl
cmp
fnsave
jge
mov
aam
hlt
sub
jns
addr16
out
fwait
in
movsl
jno
scas
or
mov
cs
add
cld
cmc
jb
sbb
mov
mov
pop
call
and
mov
adc
mov
cwtl
jns
js
sub
mov
push
repz
cmp
sahf
mov
jne
lock
ljmp
pop
cmp
cli
pop
mov
sub
push
out
or
jno
daa
data16
mov
int
neg
pusha
push
xor
add
cmp
scas
mov
rcll
stos
insb
aas
test
inc
enter
sub
inc
xchg
gs
and
jbe
dec
icebp
pop
lods
inc
fcmovbe
mov
ret
jle
inc
mov
addr16
jbe,pn
pop
lret
addl
out
adc
bound
sarb
imul
cwtl
das
sbb
fs
jmp
xchg
clc
sbbb
jle
shl
sbbb
sbb
loopne
sarb
cmp
push
cmp
xchg
inc
jg
sarb
std
notb
sbb
mov
clc
adc
mov
pusha
fistpl
iret
push
mov
add
imul
out
and
xchg
iret
js
jg
arpl
and
fs
scas
popa
add
and
mov
movsl
js
push
imul
mov
sbb
adcl
xchg
cltd
or
dec
mov
or
dec
mov
xchg
popa
or
hlt
jge
dec
mov
sub
scas
decb
in
push
add
xchg
push
mov
scas
les
or
popa
add
movsb
inc
inc
pushl
pop
leave
into
int3
cwtl
mov
movsl
jg
xlat
mov
sarl
xor
rol
mov
pop
xchg
iret
xor
mov
and
scas
push
push
sbb
popl
pmulhw
std
sbb
push
out
js
mov
imul
pop
and
add
or
ljmp
stos
ja
cmpsb
test
push
in
mov
lods
lcall
out
inc
dec
scas
testl
cs
mov
pop
push
loop
mov
xchg
jp,pn
jae
xor
mov
mov
mov
fdivrl
test
xor
mov
push
pop
sti
rolb
mov
mov
je
testl
paddq
sbb
hlt
movsl
sahf
adc
add
sarb
movsl
jecxz
sbb
repz
outsl
and
mov
fsubl
dec
aas
pop
cli
mov
cmp
iret
add
push
in
and
popa
dec
sti
je
aad
loop
jmp
push
inc
fsubs
and
or
sbb
xlat
in
repz
mov
and
pop
or
dec
jg
push
push
daa
cli
mov
mov
cmp
jae
pop
xchg
cmpsl
fwait
insl
jnp
stc
or
jecxz
mov
scas
aaa
and
stc
nop
sub
dec
lret
add
bound
pop
popa
xor
repz
mov
daa
jno
fsubs
add
cmpsl
andb
xchg
js
pop
mov
mov
mov
insb
movsb
subb
jb
bound
clc
and
jp
loop
mov
rcr
sub
inc
mov
xchg
cli
sub
jnp
push
ret
sarb
xor
es
cmpsl
cmp
mov
sub
and
ja
xchg
int
push
test
jecxz
jns
mov
sub
jge
xor
xchg
mov
jge
fdivr
add
inc
jg
or
adc
arpl
ds
and
add
pusha
inc
xor
sarb
xorb
shll
mov
push
dec
jnp
xchg
mov
mov
lret
test
inc
test
lret
jecxz
and
mov
xor
push
nop
add
shl
jmp
jns
fcmovnb
inc
push
fnstenv
jnp
scas
gs
mov
mov
add
lods
lret
imul
jne
cmp
jg
or
cwtl
fdivs
inc
scas
in
jbe
shr
daa
jns
push
or
xchg
lock
ljmp
push
push
nop
mov
xchg
jg
jge
cmp
dec
add
imul
mov
mov
lds
jmp
nop
push
jbe
and
mov
test
push
gs
cs
cld
jg
dec
out
cmpsb
fs
push
testl
mov
cwtl
fwait
adc
std
fldl
adc
push
push
add
xor
xlat
out
frstpm(287
mov
push
sahf
xchg
pusha
inc
add
mov
add
aaa
cmp
or
fnsave
or
adc
push
or
call
push
mov
data16
aam
loop
or
lret
jo
adc
test
shl
leave
in
push
jb
sbb
or
jnp
lret
mov
push
mov
push
xor
sbb
gs
mov
ljmp
mov
mov
xchg
xchg
andl
dec
in
dec
shrl
mov
scas
mov
in
sub
fsub
rorb
cwtl
or
and
pop
mov
xchg
das
addb
in
stos
xor
adc
test
pop
adc
mov
sbb
mov
sbb
push
lods
sahf
xor
xorl
push
adc
stos
js
mov
and
inc
or
jge
push
lcall
js
fs
insb
in
mov
shll
into
out
sub
lods
test
mov
aas
pop
sub
mov
ret
testb
ds
test
dec
xor
jmp
xor
loopne
mov
repnz
mul
es
fidivs
fwait
mov
adc
pop
pop
ret
fsts
jge
jp
loop
imul
mov
lea
xchg
test
add
jp
pop
mov
fcmove
ret
mov
sarl
jns
jbe
stos
cmp
pop
vpminub
test
push
adc
stos
dec
repz
or
mov
or
ficoms
inc
pop
cmp
dec
aam
jnp
lock
lret
sarl
jl
std
pop
bound
cmp
rolb
ja
in
pop
rcrb
jge
in
daa
sub
mov
insb
mov
mov
fisttps
xor
stc
mov
xchg
ret
into
push
mov
jae
xchg
or
dec
pop
mov
fisubs
mov
inc
clc
aaa
pusha
ljmp
lock
imul
add
mov
fsubl
loop
test
mov
dec
fcom
mov
xor
in
sub
lret
lea
ja
push
and
es
xchg
arpl
mov
insb
out
push
mov
push
fucomi
icebp
mov
inc
pop
movsl
sub
jl,pn
sub
or
icebp
mov
adc
adc
adc
shll
int3
bound
nop
dec
xchg
pop
sub
iret
xor
insl
lcall
mov
nopl
sahf
inc
out
in
dec
loop
scas
dec
add
lock
adc
xlat
loop
rorl
stos
sahf
lds
aad
sbb
adc
jg
pop
imul
jae
out
jle
enter
test
test
dec
je
test
testb
mov
mov
cmpsb
adc
jp,pn
sub
jnp
xchg
rol
sub
int3
mov
pop
inc
jp
jae
decl
xchg
pop
negl
imul
fstpl
das
sti
cmp
push
mov
outsb
adc
jnp
sahf
jnp
lcall
out
sub
insl
lret
xor
xchg
mov
popf
test
jbe
sub
movsl
lods
fnstcw
add
stos
mov
push
inc
mov
pop
clc
nop
outsb
test
cmp
gs
mov
dec
ret
pop
flds
add
inc
xchg
fldt
sbb
jbe
gs
pushf
dec
lds
or
ret
adc
sti
popa
call
std
inc
cmpsl
movsb
sbbl
and
fwait
add
insl
pop
nop
or
lea
push
dec
mov
push
out
add
icebp
das
daa
mov
mov
cmpsl
adc
fsubrl
pop
fisubs
xor
push
nop
push
shr
or
inc
mov
cld
add
jecxz
xchg
cld
test
outsl
and
cmpl
aam
cmp
pop
ret
xor
xchg
pusha
jecxz
push
sub
push
data16
sti
incl
cmp
and
aaa
or
addr16
lea
cwtl
mov
das
in
mov
and
mov
mov
dec
sub
cmp
sub
fldcw
in
xchg
cmp
push
roll
xor
pop
cwtl
ret
dec
lds
ror
xchg
push
in
and
mov
jne
loope
fs
push
cmc
inc
cmpsl
lods
jge
push
fdivr
dec
jmp
cmpsl
hlt
lds
outsl
imul
insb
test
xchg
cli
pop
lret
mov
mov
sub
push
fstps
shll
push
mov
xchg
cmp
push
call
add
xchg
roll
xchg
and
pushf
fwait
xchg
fidivs
cmpsb
jg
dec
adc
enter
xchg
fs
mov
aad
and
andb
push
aas
jo
out
out
xchg
push
mov
inc
in
ds
sbb
xor
inc
aas
mov
shl
mov
icebp
push
add
lret
mulb
mov
andl
xor
das
je
cld
add
jmp
mov
jg
adc
lea
out
jge
pop
fsts
push
xor
inc
sub
cmpsb
sar
cmp
fbld
or
cmp
imul
add
flds
das
sub
outsl
push
inc
not
cmp
push
xor
sub
dec
cmp
push
insl
lods
or
into
aaa
cwtl
mov
push
and
push
cwtl
pop
or
or
mov
push
es
movsb
xchg
ja
ja
cld
icebp
xchg
and
cmp
xchg
imul
pop
push
mov
jno
test
push
stos
ds
push
xor
ficomps
xchg
hlt
in
aam
enter
popa
mov
ret
jne
mov
sbb
rcl
test
jg
enter
jne
nop
outsb
mov
mov
lock
insb
stos
jmp
jg
dec
in
mov
pop
js
pop
dec
leave
or
jecxz
shll
aaa
jg
xchg
shrl
mov
jle
mov
push
sub
mov
ljmp
cmpsl
movsl
jl
fistpl
pop
adc
nop
aaa
jo
and
les
sub
imul
inc
mov
pop
sbb
test
mov
cld
xor
mov
aaa
xchg
mov
mov
cwtl
lcall
pop
aaa
xchg
xlat
jg
sbb
fldenv
cli
lahf
push
addr16
rcrl
popa
mov
xor
sub
jno
mov
mov
dec
test
add
mov
outsl
push
es
add
iret
cmp
push
pop
jb
xchg
adcb
shlb
mov
test
xchg
jns
push
repnz
lea
popa
mov
and
insb
das
mov
aas
jmp
loope
fisttps
xor
insb
lahf
jno
fcomp
push
push
aam
cmp
imul
adc
iret
mov
cmp
icebp
inc
test
mov
add
repz
pop
xor
popa
pop
push
lea
dec
gs
in
jmp
fsts
subl
jbe
jl
out
mov
pusha
hlt
lds
push
adc
pushf
adc
int3
pop
das
or
dec
negb
je
gs
mov
push
adc
add
mov
push
add
aaa
pop
addr16
aad
in
test
into
dec
test
add
xor
push
getsec
insb
adc
push
aad
xor
jmp
adc
imul
ret
out
scas
ror
loope
xor
add
addr16
push
jp
and
ss
or
mov
jns
mov
repz
sahf
add
dec
xchg
adc
add
cmp
js
fisubl
pop
leave
repz
enter
jne
add
or
push
cmpsl
btr
cld
jnp
das
sysret
nop
inc
in
cltd
and
lret
imul
mov
jo
jmp
push
mov
push
data16
clc
push
das
or
gs
mov
imul
out
sbb
mov
jns
push
dec
mov
ss
mov
cltd
cltd
add
mov
imul
data16
in
mov
inc
adc
push
cld
lods
xor
cmp
pop
fsubl
xor
sbb
inc
lret
mov
ret
mov
xchg
ja
ret
mov
repz
adc
adc
mov
xchg
stc
pop
scas
iret
sub
in
push
js
outsb
inc
adc
gs
jb
sbb
pop
dec
aas
cmp
iret
add
addr16
sub
mov
dec
pop
fs
push
xor
test
neg
aaa
nop
repz
xchg
xchg
xchg
out
imul
cmp
les
jne
adcl
xchg
dec
dec
out
rcrl
cs
mov
adcl
out
clc
xor
ss
xchg
stos
inc
test
shll
jmp
pop
xor
xor
arpl
xchg
imul
inc
sbb
clc
arpl
lock
aam
push
xchg
jmp
insl
imul
jl
add
sbbl
sub
push
inc
push
mov
or
adc
sbb
push
mov
sti
sub
and
test
mov
jecxz
jge
haddpd
sbbb
mov
sbb
or
loope
adc
dec
rclb
movsb
sbb
add
sarb
sub
or
sub
out
jmp
xchg
js
sub
enter
inc
data16
incl
adc
enter
fildl
outsb
sub
pusha
rcrl
cmp
xor
lahf
mov
or
stos
aad
pop
in
cmp
insl
sbb
jns
out
icebp
dec
or
movsb
xchg
cmp
mov
jb
cmp
push
jecxz
pop
fildl
pop
addb
xchg
cmp
lcall
mov
inc
aaa
movsl
cli
adc
lcall
or
jl
imul
or
pop
xchg
test
inc
xchg
xor
jmp
shll
xor
or
dec
add
mov
std
adc
xor
ja
gs
sarb
stos
aaa
pop
jb
pop
push
inc
cmp
and
ficompl
lds
mov
enter
adcb
dec
xchg
mov
pop
imul
cmpb
int3
jnp
test
mov
jae
test
fisubs
scas
repnz
jo
pop
fildl
idivb
pop
add
lea
pop
push
in
xchg
xchg
mulb
test
mov
pusha
adc
pop
inc
aas
mov
in
dec
mov
push
sbb
sub
push
and
mov
sub
movswl
les
test
imul
repnz
movhps
je
cli
fwait
mov
cltd
pushf
and
pop
adc
sbb
push
outsb
adc
repz
mov
xor
pop
mov
fwait
rorl
xchg
cltd
in
es
leave
add
adc
pop
push
and
sub
mov
and
push
xor
pop
fisubrl
pop
and
inc
xchg
xchg
cmp
adc
ds
fildl
sti
scas
loop
shll
movsb
test
fnstsw
jnp
test
icebp
pop
sbb
les
and
push
jp
jecxz
pop
cs
scas
lods
and
subl
jno
dec
xor
pop
into
xchg
adcl
inc
es
inc
jecxz
mov
mov
or
mov
andl
push
mov
cmp
pop
push
pop
js
lret
loopne
xchg
adc
mov
xchg
mov
std
or
sahf
inc
sub
add
loop
mov
sub
or
loope
out
push
adc
fdivrs
sbb
stc
jecxz
adc
push
sbb
jp
pop
adc
aaa
rol
or
sahf
shl
sbb
xor
or
stos
pop
jb
cs
add
jno
icebp
xchg
cld
es
mov
aaa
mov
cltd
aad
adc
adc
mov
mov
loope
mov
cmp
fbld
xor
xor
xchg
jae
cltd
rorb
add
sbb
lock
sbb
jl
subb
or
ss
mov
dec
ja
xor
lret
in
mov
mov
adc
jb
push
mov
adc
aam
adc
mov
mov
pop
jl
rcrl
fs
mov
mov
addr16
movsb
mov
imul
mov
xchg
in
je
xor
sbb
jno
call
pop
repnz
ja
push
cmp
add
ror
arpl
cmp
scas
pop
or
fsubrl
push
nop
and
sbb
pusha
mov
xchg
pop
mov
xchg
stos
es
and
popf
loop
jnp
shll
ret
into
cmpsb
dec
test
test
push
test
popa
and
sbb
movsl
insl
add
mov
xchg
xchg
push
inc
mov
pop
push
in
out
fsubl
adc
xchg
scas
mov
add
loop
pop
dec
mov
cwtl
mov
test
loop
sti
out
adcb
push
loop
cmc
xchg
push
mov
and
fucom
adc
pop
adc
dec
popf
dec
mov
int3
push
adc
cmpsl
sub
jns
test
pop
xor
mov
jbe
sbb
mov
andl
adc
adc
sub
xchg
inc
push
mov
sub
xor
xchg
js
xor
sti
in
data16
xchg
ret
jbe
mov
test
pop
sbb
mov
mov
movsb
dec
pop
mov
ds
mov
outsb
adc
xchg
shl
xcrypt-cbc
cmpsl
adc
inc
cltd
enter
fmuls
push
ret
or
push
pop
out
sbb
add
jmp
sub
rorb
push
test
jae
adc
aad
popf
inc
and
mov
das
loope
fs
mov
jp
mov
push
movsb
mov
test
cmc
sub
dec
mov
pop
sarl
in
sbb
shlb
into
xor
mov
sub
cmp
and
pushf
lods
xor
xor
outsl
repz
sbb
in
mov
xchg
shlb
subb
pop
out
sbb
sarl
cli
xchg
mov
cmc
fsubl
cmpsl
daa
push
jle
push
sbb
insb
dec
fdivp
ja
shrl
sti
add
dec
mov
push
movl
and
dec
xor
in
pop
lcall
inc
sarl
pop
cmpsl
push
adc
jne
jmp
js
sbb
push
aad
or
pop
and
je
movsl
or
adc
movsb
mov
imul
sub
in
pop
xor
jne
xchg
inc
mov
sbb
sub
pop
fcos
pusha
pusha
movsl
call
mov
jo
pop
pop
out
push
fpatan
out
push
je
sub
int3
xchg
rolb
cltd
sbb
cmpsb
fisttpll
adc
adc
lea
push
push
addr16
mov
out
pop
xorb
scas
rorl
movzwl
rol
and
jnp
xor
repz
repnz
aas
and
scas
xchg
and
fmull
push
icebp
out
pop
aam
mov
mov
pop
popf
mov
test
adc
add
repz
jbe
jmp
sbb
mov
xchg
aaa
stos
mov
in
inc
inc
fiaddl
jecxz
jp
int
push
pop
sub
sub
add
and
ret
sbb
or
add
in
pushf
cli
sarb
cmpsb
mov
jecxz
or
popa
loopne
add
shr
addr16
test
xchg
std
mov
pop
hlt
lahf
test
and
adc
rol
inc
pop
cmpsl
mov
popa
cmp
stc
popf
adc
mov
jge
ficoms
imul
mov
cmp
ret
dec
dec
test
and
loope
xor
mov
dec
rorl
pop
pop
repz
inc
ds
int3
cs
or
fucom
shll
into
in
daa
lret
cld
or
scas
in
cli
data16
xor
test
movsb
stos
adc
addl
mov
push
sub
fs
adc
dec
popl
in
fidivrs
add
mov
stos
bound
and
js
xor
cmpsl
jo
or
icebp
xlat
stos
jge
lcall
enter
in
push
ret
jno
add
out
inc
arpl
mov
mov
ret
mov
xchg
pop
push
adc
js
adc
into
imul
sub
in
out
fbld
test
scas
test
push
xchg
sahf
xor
mov
jl
sbb
cs
mov
fsubrl
dec
jp
aad
arpl
notb
pop
pop
sub
loopne
arpl
push
xor
mov
imul
pop
aad
push
adc
dec
repnz
ret
fimull
sbb
subb
jne
or
dec
dec
hlt
movsl
or
rol
push
out
jp
xchg
add
andb
mov
insl
sub
jg
dec
and
hlt
push
push
je
pop
bound
mov
jno
pop
lcall
fucom
aas
push
jns
xchg
mov
shl
push
or
leave
pop
or
jbe
inc
fnstenv
inc
adc
aam
jle
lret
inc
test
mov
repz
mov
lods
loope
clc
lock
and
and
dec
sub
push
fbstp
sahf
mov
or
xchg
test
pushf
cltd
sub
rclb
scas
mov
idivl
cli
jmp
jae
arpl
loope
leave
ss
stos
call
adc
cmp
aad
pop
in
out
add
cmp
mov
xor
loope
xchg
ficoms
push
cld
andb
dec
jl
cmp
add
mov
mov
inc
jge
adc
inc
pop
adc
xchg
mov
lock
mov
sub
push
mul
xchg
xchg
les
pop
xor
outsb
pop
xchg
xchg
cmpsb
push
sbb
stos
jp
mov
fisubs
xor
cwtl
add
out
xchg
movsb
cmpb
pop
pusha
dec
cmpsb
imul
clc
cltd
add
lret
adc
call
inc
xchg
mov
das
push
or
sahf
push
sbb
pop
push
cltd
xchg
frstor
jle
nop
lret
hlt
mov
movsl
cs
les
inc
xor
inc
adc
adc
fistpl
imul
cmpsl
mov
xchg
xchg
cmp
call
cmpsl
out
mov
mov
pushw
pop
lods
shrl
int
clc
fimuls
nop
adc
sbb
push
push
roll
pusha
inc
addr16
push
dec
fucomp
rorb
cmc
incl
xchg
mov
stos
cmpsb
call
sbb
in
test
mov
fwait
or
fidivs
xchg
mov
daa
cmpsl
pop
lods
jo
and
inc
outsl
jo
outsl
cli
lea
shll
push
outsb
add
pop
add
ss
lahf
cmp
loopne
xor
popa
and
xchg
mov
sbb
jge
arpl
in
mov
xor
or
cmp
sbb
cmp
dec
mov
sbb
pop
lds
out
mov
cmp
loop
lock
repnz
xchg
push
or
inc
xchg
nop
loope
mov
push
shrl
subl
repz
adc
icebp
fiadds
dec
and
xchg
repz
mov
mov
nop
adc
outsl
cmp
fmuls
push
xchg
push
dec
xor
cld
dec
and
lret
adc
cmpsl
adc
cmpb
push
je
adc
and
pop
push
inc
out
pop
and
jnp
xor
js
les
push
scas
mov
icebp
mov
xlat
xor
fsts
add
nop
lds
push
outsb
das
outsl
jns
xlat
xor
fidivs
clc
test
mov
je
nop
sbb
push
fs
mov
xor
mov
sub
int3
push
jae
sub
add
test
or
out
es
push
gs
mov
push
pop
push
fdivrs
xchg
nop
adc
into
jecxz
cmp
std
das
orl
mov
push
and
es
je
in
fdivl
fcomps
jl
scas
mov
lods
pop
loopne
mov
imul
and
xor
mov
nop
mov
rol
inc
sahf
call
adc
ret
sub
fsubrp
xor
outsl
std
push
xchg
jecxz
sub
cmp
mov
test
imul
cmp
sbb
clc
jge
push
repz
push
dec
in
cltd
pusha
and
in
xchg
out
xor
sub
out
jp
cld
mov
aad
int
sbbb
push
data16
xchg
popf
xchg
and
and
xor
lock
jg
popa
arpl
push
push
repz
cld
or
xchg
imul
lahf
int3
cmp
or
xchg
pop
scas
out
xor
push
xchg
into
rcll
ss
test
mov
sbb
push
mov
mov
jg
push
cmp
sbb
mov
nop
mov
shlb
xchg
and
mov
mov
pop
dec
push
jb
push
inc
jne
xchg
push
std
push
icebp
mov
rcrl
lret
mov
subb
jmp
nop
shr
sbb
sbb
nop
test
pop
mov
jmp
jo
jns
adc
test
std
test
sahf
js
and
cmp
loop
add
dec
mov
cmc
iret
sub
int3
outsb
pusha
sub
inc
dec
jne
lea
push
in
test
mov
cld
pop
inc
aas
cmp
cmc
je
je
push
cmp
sarl
aam
mov
and
sub
pop
mov
in
test
int
negl
daa
insl
jnp
daa
or
mov
push
nop
out
and
hlt
xchg
pop
mov
inc
imul
shlb
mov
pop
sbbb
pop
test
sub
sbbb
aas
pop
cmp
rcl
lahf
fadds
xchg
xor
fsub
outsl
sub
cmp
jmp
sbb
push
ja
jp
fsubl
gs
lea
nop
push
or
stos
test
adc
lahf
int3
icebp
sbb
adc
fdivrl
mov
lahf
sub
pop
andb
xchg
push
or
add
mov
jle
fistpll
cld
cmp
dec
out
repnz
in
xchg
pop
in
xor
fsubrl
pushf
push
mov
mov
mov
les
jb
jecxz
push
mov
fisubl
xchg
orl
sub
push
jnp
dec
adc
mov
push
pop
dec
mov
mov
es
sahf
push
xchg
leave
jno
in
adc
sub
xor
test
insb
dec
push
int3
pushf
mov
xchg
ss
aam
neg
lock
inc
test
pop
loope
xchg
fldcw
push
aaa
and
jno
xor
testb
adc
inc
icebp
pop
xchg
outsl
jae
notl
jmp
jno
pop
cli
push
dec
mov
jne
jnp
testb
inc
mov
aam
test
jp
push
or
leave
adc
inc
mov
pushf
jmp
shl
jl
cmp
int3
call
fisttps
stc
dec
dec
les
outsb
enter
mov
stos
gs
in
xchg
shrb
fisubl
iret
mov
minps
js
adc
push
les
aaa
pop
outsb
xchg
stos
jecxz
adc
xor
dec
push
fiadds
sbb
xchg
lods
push
jno
and
gs
iret
outsl
inc
stos
das
nop
inc
mov
mov
jg
or
jb
out
dec
push
jne
repnz
arpl
adc
mov
pop
std
icebp
jns
xchg
jo
mov
roll
aas
in
mov
and
adc
lods
loop
and
jnp
inc
out
mov
dec
cwtl
nop
idiv
std
mov
ds
insl
mov
pmuludq
int
lods
pop
sbb
pop
in
fnsetpm(287
sbb
decb
loopne
jb
aam
movsb
aas
and
fs
jae
add
pop
cmpsb
xchg
mov
shll
int3
jmp
dec
and
add
insb
test
push
lods
pop
cmp
adc
mov
push
sub
inc
cs
xor
into
notb
add
repz
testb
sub
fcmovnb
dec
aad
jo
fidivs
and
sub
mov
mov
mov
and
in
sub
lahf
push
ja
push
ror
vmulpd
cmpsb
cmp
stos
adc
daa
push
xchg
rol
cmc
add
sbb
and
testl
push
mov
xor
lods
fs
lahf
loope
xchg
mov
mov
and
sarb
push
jbe
dec
test
pop
inc
xor
imul
cmp
call
jns
enter
call
add
xchg
je
add
js
addr16
xchg
pop
xor
xlat
scas
mov
xchg
inc
jo
add
fldenv
in
push
fs
jecxz
les
mov
insb
xor
enter
xchg
inc
xor
or
mov
dec
fnsave
push
and
mov
xchg
pop
cmp
cwtl
jp
xor
fs
pop
inc
cmp
cmc
prefetch
jecxz
sub
into
mov
in
imul
push
xor
adc
push
xchg
mov
cld
stc
jne
jb
add
lret
shll
push
leave
sbb
or
aaa
gs
clc
dec
sbb
cmp
mov
nop
pcmpgtw
int
jg
fdivrs
cmp
test
rolb
lcall
push
push
and
jae
xor
xchg
mov
cwtl
sahf
addr16
adc
mov
lods
ds
bound
mov
dec
out
or
insb
scas
fmulp
pop
movsb
fsubl
imul
cmc
add
lcall
and
out
shll
lret
subl
sti
pop
inc
arpl
lock
sti
mov
leave
daa
mov
xlat
punpckhwd
lret
and
ja
or
mov
insb
test
int
xchg
cltd
jae
std
out
mov
xor
dec
cmp
loop
aaa
and
xchg
shrb
add
je
mov
mov
sbb
mov
out
dec
imul
jae
add
in
popa
test
aaa
les
jecxz
cmp
jno
add
call
xchg
and
arpl
call
test
jp
jno
lahf
test
xchg
mov
ret
dec
xchg
repnz
das
sub
daa
icebp
jp
fwait
into
mov
mov
in
xchg
das
add
loop
fiadds
aad
push
ficoml
test
or
dec
pop
pop
mov
mov
ret
pop
jo
leave
pusha
push
and
xchg
sti
jno
negb
lahf
sbb
mov
mov
sbb
and
or
xor
jp
lds
add
rolb
push
jge
mov
cltd
push
sub
xchg
dec
fadd
cmp
cmp
mov
jbe
jae
insl
insl
dec
add
popa
ja
dec
icebp
stc
xor
orb
insl
mov
cld
arpl
ja
cmp
mov
je
inc
and
dec
nop
je
outsb
aad
mov
addps
add
push
xchg
in
xchg
pop
push
in
fcoms
sub
inc
sbb
out
lock
jl
divb
insl
orl
xchg
xchg
cld
mov
lock
jbe
pop
repnz
add
adc
pop
xchg
das
stc
lods
mov
rorl
jae
mov
jl
movb
mov
mov
xor
xchg
jo
adc
popf
rorb
bound
add
jp
xchg
add
sub
push
inc
in
leave
sbb
push
xchg
mov
add
repnz
jb
or
cltd
dec
jg
push
and
sub
mov
in
mov
stos
jo
iret
mov
jns
int3
aam
or
add
jb
sbbb
into
xlat
stos
push
and
jecxz
inc
xchg
xchg
cmp
int3
repz
out
xchg
stos
inc
enter
xchg
outsb
outsl
pop
mov
mov
dec
jb
sub
int3
cwtl
mov
andl
insb
dec
jne
in
mov
push
adcl
and
cmp
stos
aad
inc
sub
stc
in
gs
xor
sub
sub
or
dec
cld
adc
push
sub
pop
jae
orb
pop
and
sbb
or
lret
push
mov
in
inc
sub
loop
cmp
sub
test
cmp
sub
adc
xchg
jl
stos
add
cmp
jns
sub
lahf
dec
and
mov
dec
cwtl
scas
jb
incl
fsubp
jbe
mov
gs
jg
or
loopne
and
call
int3
or
fsubrs
cmp
ror
int
out
xor
mov
xchg
add
jmp
jg
out
or
sub
push
mov
add
jle
cli
loopne
cmp
add
insl
jp
pop
pop
dec
call
shlb
enter
test
jmp
push
sbb
push
mov
mov
idivw
int
js
into
jle
jle
shrl
mov
in
ljmp
or
in
push
mov
ret
mov
adc
xor
rorl
idivb
mov
std
cmp
inc
and
push
das
cmpsl
or
addr16
popf
dec
ss
pop
je
bsr
popa
pushf
or
cld
adc
ja
xchg
push
or
pop
adc
jns
add
lcall
sub
sbb
mov
push
clc
push
hlt
dec
or
arpl
popa
sbb
mov
daa
test
xchg
inc
cmc
cli
nop
inc
and
mov
pop
stos
outsb
imul
push
push
in
pop
add
insb
outsl
mov
mov
rolb
test
std
pop
orl
ds
adc
push
subl
add
into
fcompl
call
cmp
fidivs
jns
lahf
jg
aaa
lods
wrmsr
mov
jo
add
fidivs
xchg
xor
mov
cltd
in
cmc
add
aas
ret
loopne
pop
xchg
inc
cmp
cmp
mov
fcmovnu
sbb
negb
push
loop
sub
in
mov
push
iret
ret
jns
pop
push
pop
adc
ret
or
mov
mov
xor
adc
push
int
imul
fs
push
xchg
adc
sbb
idivl
mov
dec
cmpsl
xchg
inc
or
mov
push
jg
xor
rcrb
mov
pop
sbb
scas
xor
rclb
out
nop
jecxz
std
sub
outsl
loopne
jo
adc
add
pop
test
cmp
ret
mov
roll
adc
mov
mov
cmp
cmc
push
loop
and
or
aam
daa
lds
and
xor
sbb
jno
repz
sbb
leave
xor
mov
sahf
push
push
fnsave
adc
rcll
adc
inc
daa
rcrl
fucompp
adc
ss
jnp
scas
out
pop
fstp
jmp
dec
mov
addr16
daa
sub
cltd
or
cmc
add
fwait
jp
mulb
gs
cs
xor
dec
pop
jecxz
hlt
pop
insb
or
icebp
mov
xchg
es
mov
and
loope
std
outsb
xchg
jg
mov
fistl
rcl
pop
push
ret
dec
popf
xchg
imul
dec
ret
mov
jb
movsb
sti
out
mov
fcompl
lret
jne
movsl
bound
ljmp
jmp
xchg
mov
movsb
jmp
int3
lods
loope
gs
fisubrs
push
iret
sar
mov
push
jae
push
pop
fidivl
pop
jle
aas
pop
and
imul
out
repz
jb
xor
mov
xor
xchg
stos
adc
mov
xchg
cmp
inc
fwait
adc
mov
repnz
xchg
inc
inc
pop
push
mov
sar
add
loopne
mov
inc
push
sub
pop
popa
hlt
add
test
lods
cli
cmc
ljmp
mov
or
clc
cmp
leave
fldl
fs
xor
les
jmp
and
cmc
aaa
cmp
or
hlt
sbb
es
add
mov
sub
sbb
cmp
jp
mov
insl
stos
mov
adc
fcoml
imul
shrl
xchg
xchg
add
xchg
ror
mov
cmp
out
sbb
aad
iret
fstps
addr16
loope
push
clc
in
cmova
std
test
mov
xchg
mov
lcall
mov
xchg
sub
xor
and
sbb
lcall
jbe
lods
mov
jne
xchg
mull
in
jo
add
jg
dec
jb
insl
aad
sub
cmp
mov
push
lahf
sarl
fdivl
pop
inc
popa
cmp
es
mov
cmp
movsl
decb
scas
inc
xchg
stos
push
add
push
out
test
sbb
xchg
lahf
mov
or
jae
call
cmp
test
pop
lret
add
pop
adc
xchg
cmpsb
out
shr
pop
repz
lods
xchg
andb
pop
repz
jmp
inc
pop
and
adcb
and
std
arpl
nop
push
out
jbe
pop
sbb
ftst
aaa
dec
ss
in
or
pushf
in
test
pop
scas
push
jo
inc
and
jb
mov
sub
jno
add
cli
or
scas
imul
inc
adc
pushf
enter
repz
xorb
sbb
mov
mov
inc
out
movsl
shrb
mov
lahf
mov
inc
jbe
sub
dec
aas
pop
xchg
lock
jae
fnsave
xor
nop
adc
loope
fwait
incb
scas
sbb
push
and
push
xor
adc
push
sbb
orl
push
mov
shlb
dec
inc
pop
add
inc
mov
hlt
dec
or
sub
outsl
repz
shrl
cld
xor
lcall
out
arpl
in
jnp
in
dec
in
ja
lret
rdpmc
shr
jo
push
fisttps
xchg
stos
dec
mov
cmp
mull
lahf
xchg
lods
mov
add
test
pop
mov
pusha
fcmovb
ljmp
or
inc
aas
mov
cld
cmp
subl
jb
fisubs
in
jg
cmp
cs
pop
mov
lds
repnz
pop
loop
dec
xor
xchg
xchg
outsb
or
movsb
mov
arpl
lods
pop
fcoms
mov
cmpsb
scas
sti
sbb
lcall
mov
stos
insb
mov
adc
fs
mov
in
repnz
inc
or
inc
dec
mov
pop
negb
adc
dec
call
jns
shll
adc
pop
cltd
ficompl
hlt
popf
sub
cmp
mov
cmp
inc
mov
in
iret
cmp
cmp
repnz
jmp
jmp
loope
pusha
and
addl
jmp
dec
test
jbe
test
dec
decb
leave
fists
xchg
lods
mov
bound
lret
pop
pop
jo
insb
inc
lds
push
aad
xchg
gs
sub
xor
sub
pusha
ret
ds
add
nop
pusha
out
movl
not
sbb
arpl
sbb
iret
or
push
mov
and
std
adc
cltd
or
out
cmp
gs
jae
pop
pop
sbb
ror
jnp
nop
xor
cmpsb
das
fsubs
inc
inc
nop
push
push
adc
leave
lcall
aas
lods
je
jg
xchg
les
fistps
adc
adc
sbb
test
lcall
test
cwtl
lret
dec
outsl
or
adc
xchg
inc
pop
scas
push
rolb
stos
lret
pop
imul
in
inc
lock
lahf
fnstenv
mov
dec
popa
cs
cmp
sub
mov
sub
loopne
ja
push
or
cmpsl
mov
sub
pop
inc
push
sub
f2xm1
add
mov
xor
mov
fsubr
aam
int
shll
push
ret
pop
push
inc
jne
inc
pop
pop
cld
mov
rcrl
sub
scas
jno
pop
cmpsl
sti
filds
test
popa
popf
mov
mov
cwtl
xor
mov
xor
shrb
or
cltd
out
lds
push
iret
int3
jg
std
repz
xchg
dec
mov
xchg
add
imull
push
pop
push
nop
adc
mov
xchg
dec
insl
inc
into
inc
shlb
xchg
scas
xor
je
push
jecxz
push
xlat
xchg
or
or
jle
push
mov
popf
or
cmp
jbe
adc
jns
and
out
cmpsl
mov
or
pop
in
test
repz
sahf
pop
js
mov
out
test
xlat
iret
cmpsb
push
mov
je
and
addr16
icebp
sub
jbe
push
subl
mov
pop
push
insb
push
mov
sbb
pusha
in
movsb
add
dec
dec
mov
cmp
push
xchg
xchg
xor
ret
mov
add
sub
in
xor
setp
sahf
mov
xchg
add
dec
lcall
cs
loop
push
pop
sbbl
les
mov
mov
jecxz
ret
xlat
sub
pop
mov
or
cmp
fstps
sti
in
call
aad
aad
loope
rclb
dec
mov
xorb
mov
je
adc
adc
cs
hlt
int
cmp
mov
ss
inc
mov
mov
sbb
mov
stc
in
push
ret
enter
scas
add
in
int
xchg
mov
test
and
cltd
push
xchg
stc
ljmp
cmpsb
les
xchg
call
subb
sbbb
xchg
pop
icebp
mov
inc
imul
fldt
mov
adc
inc
dec
lcall
pop
inc
sub
and
sbbl
gs
scas
pop
mov
inc
jns
insl
sub
lea
sub
sbb
sub
shlb
jp
sahf
out
imul
dec
pushl
psllq
push
mov
push
or
dec
xchg
xchg
cmpsl
mov
nop
cmpsl
xchg
loopne
pop
mov
test
or
rcr
dec
ljmp
loop
dec
roll
dec
popa
jecxz
test
and
jg
jp
ret
inc
insb
movsl
dec
pop
lcall
out
mov
cmp
inc
xorl
jecxz,pt
sub
in
xchg
inc
mov
xchg
cmp
mov
mov
adc
lock
adc
popa
adc
or
mov
aaa
dec
hlt
or
mov
dec
sahf
icebp
cli
sub
xor
push
lock
loopne
lea
out
inc
lret
aam
and
lahf
and
dec
push
roll
sbb
cmp
cs
call
pop
pop
mov
push
jns
xchg
test
and
ficompl
inc
lea
scas
addl
jg
lock
jp
cmp
adc
jne
popa
pop
adc
ljmp
aam
xor
push
dec
fidivrs
icebp
fdivrs
lods
nop
mov
mov
xchg
test
add
pushf
jae
nop
shrb
addr16
aas
pusha
hlt
push
outsl
out
push
inc
adc
or
xchg
xchg
mov
and
fbstp
je
mov
loopne
xchg
cmpsl
mov
xchg
push
sahf
push
adc
jo
js
pop
dec
out
mov
repz
arpl
sbb
sbb
mov
ja
xor
and
pop
scas
out
stos
scas
pop
cwtl
daa
or
shrl
cmpsb
pop
stc
out
sti
in
aaa
inc
mov
hlt
cmp
mov
sarl
notl
sti
dec
push
addr16
jg
jns
sahf
mov
cld
lds
xchg
jnp
cmpl
imulb
lahf
lea
mov
xchg
cmp
decb
mov
ja
pusha
mov
incb
lock
xor
xchg
imul
ret
xchg
fstpl
inc
cld
fcmovb
sub
gs
sahf
push
addl
push
stc
cmp
jne
add
lea
jmp
pop
push
arpl
inc
cmp
dec
cs
loope
and
push
xor
jb
cmp
cltd
popf
int
ds
or
pop
insl
mov
outsl
orb
into
xor
and
loope
imul
jp
hlt
xor
insl
jle
adc
xrelease
and
cs
call
xor
pop
sahf
jb
mov
cwtl
cmp
test
xor
mov
stos
es
out
test
pop
cmp
out
add
int
cmp
sub
ja
push
gs
or
test
in
ss
jmp
fistpl
popa
imul
jo
mov
or
ja
enter
add
sub
mov
cmp
sub
and
iret
shl
imul
lds
sbb
push
sbbl
xor
repz
xor
pop
mov
mov
push
rolb
xlat
imul
in
pop
fwait
cltd
insb
fdivs
ret
sbb
dec
repz
stos
jp
dec
xor
lcall
imul
lds
imul
inc
xchg
hlt
sub
dec
movsb
lret
mov
insb
imul
jl
addr16
sbb
insb
mov
in
insl
popf
aad
sub
out
mov
loop
and
scas
inc
test
jmp
xchg
outsl
sub
daa
xor
data16
jge
and
pop
jge
pushf
ss
ret
dec
mov
pop
cmp
mov
jecxz
inc
cmp
das
ret
int3
and
in
pop
pop
xchg
xchg
test
ret
fsubrs
mov
sbb
jge
inc
add
sub
test
adc
fdivrs
sbb
pop
jae
loope
cmc
cmp
dec
cli
pop
movsl
xor
or
jns
and
notb
mov
xor
std
cld
mov
xor
mov
mov
xor
pop
insb
out
and
push
insl
inc
pop
into
push
popa
loopne
mov
imul
faddp
adc
or
out
jns
cmp
inc
fcoms
mov
out
rcll
cli
adcb
mov
or
mov
test
pop
mov
scas
ret
mov
ljmp
daa
jl
push
push
fisttps
mov
sub
popa
mov
orl
cld
jle
out
jg
pop
xchg
jno
and
dec
or
mov
inc
sbb
imul
aad
push
fldcw
lret
or
mov
out
or
aad
addl
js
dec
test
mov
sub
inc
fidivs
pop
cmp
push
stc
fimuls
xchg
call
xor
cmp
test
scas
push
xchg
cmp
nop
push
adc
sahf
xchg
cmp
inc
push
or
ljmp
jae
xor
xor
lahf
sub
sahf
xor
inc
out
popf
ja
xchg
jnp
iret
or
cld
jmp
mov
cmp
mov
jnp
push
or
and
mov
push
cld
xchg
mov
adc
lods
hlt
fldl
jb
test
les
arpl
inc
cs
scas
dec
fwait
test
xchg
cld
jbe
push
insl
mov
cmp
xchg
push
imul
inc
or
in
lcall
and
sub
pop
pop
xchg
int3
sbb
fists
add
sbb
aad
xor
mov
sahf
xchg
imul
lock
ja
mov
addb
xor
mov
repz
inc
push
xchg
add
loop
stc
add
fcmovb
xlat
xchg
cld
mov
enter
lret
mov
mov
lock
adc
xlat
aaa
cmp
mov
add
and
mov
aam
and
push
lock
fnstcw
cmp
fcomps
out
mov
ret
rorl
fsts
fdivrl
mov
jp
scas
xchg
push
or
cwtl
sahf
popf
ret
adc
imull
push
adc
cwtl
ss
xor
lret
adc
xor
and
ss
push
cmp
shll
mov
cmp
movsb
mov
inc
test
adc
add
cmp
out
aas
ds
outsb
aad
mov
packssdw
cmp
lret
adc
and
fcmovnb
shlb
pop
push
adc
or
dec
nop
cltd
mov
push
mov
lcall
sbb
repz
pop
mov
les
ljmp
cmp
test
pop
aad
cltd
pop
je
jnp
sbb
cltd
pushf
pop
clc
rcrl
pop
push
mov
pop
movsl
pop
jbe
daa
mov
aaa
xchg
sbb
xlat
movsb
popl
or
mov
fcomps
sbb
fnstcw
orb
test
sbb
cmp
ret
and
push
or
leave
mov
dec
mov
adc
cmpsl
loop
sub
inc
add
aas
es
mov
add
pop
sbb
mov
sbb
xor
jge
popf
icebp
mov
fdivl
pop
push
adc
dec
fs
xor
lods
sbb
dec
sbb
in
js
es
or
sub
movsl
sbb
push
es
sub
cli
stos
jg
pop
rcll
mov
sub
xor
sub
or
or
icebp
dec
sub
negl
lret
mov
movsl
jns
in
out
xchg
cmp
lcall
int3
jg
mov
xchg
mov
icebp
dec
pop
or
in
pop
std
ficoml
in
mov
pop
out
inc
test
and
inc
add
enter
cmpsl
loop
add
fs
ljmp
or
pop
dec
mov
rcll
mov
sub
loope
cmp
push
and
mov
cmp
outsb
cmp
aam
cwtl
jge
rcrb
cmp
in
sbb
lret
sti
mov
mov
sbb
jo
movl
sub
or
pusha
adc
jl
cltd
jno
jnp
jo
cmp
push
sti
sub
shlb
inc
push
add
outsl
push
xlat
push
iret
lods
jae
pop
ret
mov
pop
jae
dec
aas
cmc
leave
xchg
dec
aas
add
xchg
gs
into
in
pop
push
push
lea
pop
jns
jmp
or
xorl
inc
inc
pop
mov
inc
cmpsl
pop
outsb
mov
fwait
jno
icebp
mov
std
lret
jp
jecxz
js
das
es
repnz
lahf
xor
mov
shll
mov
cmp
int3
add
test
in
mov
jbe
mov
dec
je
stos
inc
pop
xchg
pop
pop
mov
push
test
dec
les
test
mov
lock
jae
lds
mov
and
jl
fldcw
push
xor
xor
xchg
xchg
jo
or
dec
fisttpll
pop
adc
arpl
in
jg
push
dec
xchg
jle
movsl
dec
xor
push
aam
and
shlb
sub
xchg
shlb
mov
mov
cld
dec
fstpl
xor
inc
gs
or
aam
in
dec
xor
push
mov
adc
xor
mov
jmp
mov
aaa
sub
mov
or
fistps
inc
mov
dec
and
inc
xchg
movsb
sbb
cmpsb
fwait
cs
lahf
push
jg
xor
fwait
or
lods
xchg
clc
mov
cmp
sub
push
test
push
xor
cmpl
pop
lods
dec
fidivs
adc
sub
lahf
sbb
cmc
mov
ljmp
sbb
jne
pop
mov
jge
std
shrb
xor
inc
cs
test
data16
xor
jecxz
pop
inc
jae
pop
pop
fs
dec
out
loopne
jne
mov
adc
icebp
sbb
push
scas
mov
mov
mov
add
mov
stos
pop
pop
pop
lcallw
mov
add
mul
mov
insb
fwait
data16
enter
std
mov
push
int3
addr16
xor
cmpsl
xor
cmp
pop
jno,pt
mov
mov
cmc
sub
jle
adc
mov
mov
xor
mov
dec
or
ljmp
add
sbb
out
sub
sar
xchg
mov
movsl
and
cmpsl
pusha
ja
loope
and
cmpsb
push
mov
aas
mov
sbb
iret
les
jae
fwait
or
and
popa
or
sbb
stos
add
bound
pop
inc
jg
mov
cld
repz
jecxz
adc
pop
sbb
inc
add
mov
sub
pushf
aaa
add
push
push
or
cld
fs
in
loop
xor
sbb
gs
lret
mov
push
mov
pop
movsb
cltd
xchg
scas
lahf
adc
inc
shlb
iret
das
xor
mov
fs
dec
pushf
stc
cli
aam
notl
aaa
lods
add
mov
dec
mov
out
push
mov
pushf
cmp
ljmp
scas
in
cmp
push
add
adcl
inc
lds
dec
cmp
push
jbe
in
es
bound
sub
fsubrp
mov
dec
std
lods
subl
aaa
dec
sub
push
out
sarl
or
pop
hlt
or
nop
inc
jnp
ljmp
adc
test
push
inc
enter
push
outsb
int
mov
mov
add
xor
cli
in
ja
sbb
push
mov
add
mov
ja
lods
xchg
ja
sub
ret
jmpw
jmp
stos
add
ljmp
cmp
push
mov
and
xchg
scas
hlt
inc
add
orb
divb
jbe
pop
add
cltd
std
out
jle
int3
bound
imul
lcall
mov
mov
jnp
adc
mov
lea
or
push
in
fs
mov
cmp
cwtl
das
imul
cmp
push
fidivs
enter
jae
filds
pop
and
pop
rcr
pop
inc
sub
fdivs
sub
push
push
mov
shlb
sbb
js
pop
mov
mov
sbb
cmc
out
outsb
ljmp
jge
mov
jg
fs
dec
rcll
iret
sub
iret
std
rolb
mull
cmp
cmpsl
push
adcb
pushf
gs
cmc
or
push
xchg
and
xchg
and
dec
dec
xchg
adc
or
imul
or
cmpsb
pop
xchg
inc
push
add
repz
push
jo
call
ret
dec
adc
xchg
or
lahf
pusha
ds
or
adc
filds
push
icebp
fstl
dec
outsb
movsl
out
and
fs
xor
jg
mov
rorb
out
adc
pop
push
stos
addr16
test
outsb
daa
imul
into
popa
inc
jo
push
stos
jge
pushf
pusha
mov
fadd
dec
idivl
inc
xlat
jb
mov
mov
cs
in
inc
adc
jecxz
js
dec
push
push
inc
jnp
adc
dec
pop
pop
mov
inc
pop
sub
scas
aas
jno
jge
mov
insl
cwtl
xchg
mov
rcrb
cmp
jmp
mov
add
mov
mov
pushw
mov
idivl
or
adc
fstps
sbb
je
adc
cmovle
push
testb
mov
shll
adc
mov
hlt
shll
adc
pop
shll
rclb
and
xchg
pop
mov
out
add
sub
mov
ret
jae
rcrb
mov
test
sbb
adc
dec
dec
aaa
aaa
es
arpl
push
xor
and
adc
out
mov
js
push
in
sub
jl
jae
aam
test
scas
imul
xor
xchg
loopne
dec
call
outsb
lds
cmp
and
orl
sbb
mov
cmp
sti
push
mov
push
push
sub
iret
fwait
hlt
cs
popa
popa
and
imull
sub
stos
add
mov
jp
mov
jo
movsl
xor
out
push
pop
addr16
dec
add
addr16
xchg
incb
loop
jp
and
aad
pushf
xchg
mov
and
or
shll
sub
pop
jbe
cmp
or
jne
add
das
pop
loopne
sub
pop
pop
lcall
cmp
mov
push
add
cli
jne
cmpsl
test
imul
arpl
ljmp
mov
adc
insl
xchg
outsl
fwait
push
cmpsb
aad
test
sbb
loop
mov
or
push
cltd
aam
push
loop
popf
inc
mov
fstpt
loopne
gs
xchg
xor
shll
adc
shrb
fimuls
jmp
scas
inc
mov
xlat
cmp
inc
mov
imul
cmp
add
stos
fdivr
cmc
cmp
andps
mov
inc
aas
mov
aad
lcall
lds
sub
pop
adc
test
jns
jmp
and
les
sbb
sub
loop
lea
sbb
test
lods
xor
and
loope
pusha
dec
pop
sbb
xor
inc
or
inc
insb
gs
jns
mov
aam
jge
iret
pop
mov
mov
fnstcw
xchg
loopne
popf
push
xchg
ss
mov
imulb
pop
pop
icebp
mov
pop
aas
sti
popf
testl
pusha
jae
test
xor
xorl
fwait
dec
mov
xchg
loope
loopne
mov
pusha
pushf
mov
add
out
out
and
data16
xor
popf
out
shll
daa
faddp
shlb
sbb
insl
lcall
cmp
cmp
js
mov
lret
inc
pop
add
ss
or
icebp
fcmovne
rcrb
loope
mov
inc
push
jo
pop
rcrl
aas
mov
mov
into
pop
dec
dec
pop
int
jb
cmp
test
and
adc
push
mov
rcll
fidivl
jno
adc
push
enter
mov
lret
add
add
sbb
movsl
sub
or
lret
jae
faddl
ret
xor
xor
add
call
into
mov
and
sub
adc
adc
push
repz
aaa
lods
popa
fnstenv
aaa
leave
repnz
popf
mov
stos
inc
xchg
sub
xchg
fidivrl
cmc
push
cmp
cli
sbb
pop
mov
int
ja
out
clc
cs
jae
arpl
push
jo
push
lods
jb
fstpl
mov
fiadds
and
scas
mov
xchg
or
pop
sbb
bnd
cld
mov
mov
lahf
movsl
push
lods
cmp
int3
pop
adc
mov
pop
push
push
jno
mov
mov
sbb
inc
push
cmc
mov
jne
jmp
ficoml
lcall
adc
dec
in
stc
dec
pop
ds
or
in
xor
lds
shrb
dec
jbe
into
scas
lret
xchg
add
leave
ja
cmpsl
xchg
xchg
fsubs
or
nop
xor
js
stos
leave
addr16
push
pop
jecxz
or
lret
cmp
push
push
ja
adc
adc
imul
repnz
leave
pop
jmp
lcall
cmc
shl
sub
lret
mov
test
sbb
add
pusha
adc
jnp
movsb
out
les
fsubl
and
mov
std
dec
jl
xchg
sub
shll
cmc
jns
mov
fstpt
lea
shrl
xor
in
pop
cld
jle
sub
insl
out
fsubs
cmp
lahf
sub
subl
or
sbb
pop
or
push
dec
mov
dec
push
cmpb
in
mov
or
and
xchg
sub
inc
mov
roll
shrb
sub
test
adc
stos
in
inc
mov
adc
shlb
popa
sub
sub
loope
sub
rcrl
test
cmp
je
mul
dec
insl
lret
mov
aad
je
cmp
lcall
daa
inc
inc
mov
mov
mov
scas
cmpsb
xchg
inc
cmp
insb
add
orb
loopne
add
jno
ljmp
test
ljmp
inc
repz
jp
mov
mov
pushf
nop
cmp
adc
test
out
sub
xchg
mov
and
fiaddl
sub
jecxz
jg
xchg
dec
sahf
cmpsb
int
or
sbb
jl
fwait
mov
addl
test
sbb
sarb
jle
mov
insb
jbe
ja
mov
fwait
cmpb
ret
jbe
xchg
mov
push
popf
loop
ss
in
push
loop
xchg
cmc
mov
push
scas
into
das
hlt
in
mul
icebp
das
lods
call
or
scas
fdivrp
pop
fidivrs
sub
dec
jg
jge
mov
sub
pop
roll
xchg
fimuls
stos
mov
push
je
add
hlt
fidivs
shll
mov
ja
stos
in
pop
sub
in
or
das
pushf
subb
out
sbb
and
inc
pop
in
jmp
xor
nop
jne
loope
jne
jns
or
push
shlb
pop
xchg
loop
lret
pusha
cs
loop
jp
lahf
mov
inc
jae
scas
divb
fisttpl
jle
inc
hlt
jbe
dec
inc
aas
outsl
push
or
lds
inc
outsb
push
push
add
mov
popa
pop
sbb
repz
pusha
pusha
xchg
add
xlat
mov
or
cmpb
lock
int3
pushf
push
push
repnz
adc
ret
mov
fmul
out
xorl
mov
mov
cmp
mov
sub
cmpsb
insb
xor
hlt
mov
mov
cmp
clc
in
mov
pop
pushf
sub
icebp
in
lea
or
lock
mov
pushf
add
rcr
jbe
or
sbb
cmp
nop
adcl
pop
jmp
jb
pusha
mov
cld
dec
les
pop
sbb
mov
movsb
daa
outsb
jle
sahf
addb
adc
decb
insl
sub
shl
push
xor
dec
mov
dec
mov
fsts
nop
jg
ljmp
mov
dec
xchg
lea
loop
loopne
mov
inc
cmpl
pop
dec
test
sbb
mov
adc
ja
fildll
inc
push
cltd
pop
push
test
cwtl
xor
add
mov
out
out
mov
lds
mov
data16
std
inc
cmc
or
pop
dec
subb
cmp
repnz
notl
adc
cmpsl
cmp
repnz
xorb
xchg
push
cmc
mov
lds
cwtl
in
jl
rol
adc
mov
push
adc
gs
jbe
cmp
pop
mov
dec
sub
sahf
orb
rcrb
jo
adc
inc
icebp
fstpl
dec
testb
shll
jmp
fs
shll
sub
ret
add
xchg
mov
cmpsl
mov
inc
nop
sub
pushf
sbb
cmc
test
je
sahf
cmp
adcl
ss
jno
xlat
loope
addr16
mov
sub
jge
faddl
scas
fs
ss
dec
xchg
insb
insb
idivl
mov
cmpsl
push
push
insl
subb
mov
mov
and
add
sub
mov
adc
insl
aaa
add
out
mov
xorb
dec
add
dec
mov
dec
mov
sub
adc
fwait
movsl
sbb
stc
dec
pop
into
stc
aam
call
cmc
push
aam
jmp
mov
jecxz
into
or
cmpl
adc
jl
sub
cmc
int3
bound
inc
cmpsb
gs
pop
cli
sarl
xor
leave
movb
mov
mov
jns
movsl
mov
mov
stos
aaa
and
cmp
rcll
mov
mov
out
mov
dec
shrb
mov
push
scas
in
inc
gs
cmpsb
sbb
out
mov
into
mov
out
xor
das
mov
in
sub
int
xchg
mov
popa
xor
mov
aad
cs
add
stos
jbe
push
adc
push
mov
call
or
in
gs
cmpsb
xlat
xchg
flds
dec
cmp
sbb
sub
lret
dec
xor
xchg
sbb
jmp
xchg
bound
hlt
lcall
inc
mov
outsl
add
adc
jo
inc
jno
jns
dec
jl
sub
adc
ficompl
xor
pop
div
clc
lahf
jmp
mov
int
icebp
stos
mov
sbb
imul
mov
mov
mov
push
data16
mov
cmp
insl
data16
into
movsb
lret
adc
or
pop
ret
test
xor
fsub
dec
push
sub
aad
popa
lock
aaa
stos
xchg
and
test
sbb
push
mov
lcall
arpl
push
in
push
lods
mov
push
ljmp
pop
scas
pop
inc
mov
dec
adc
mov
bound
out
sub
dec
pushl
rcrl
and
xor
jl
push
arpl
imul
inc
fwait
popa
push
cmp
push
xlat
lret
push
jno,pt
jecxz
and
mov
sub
iret
les
adc
loope
cmp
mov
in
mov
hlt
mov
mov
jne
dec
or
ljmp
mov
outsl
fisubs
add
inc
and
addl
jge
cmp
xchg
mov
inc
adc
ffreep
iret
or
sbb
lock
das
mov
test
icebp
sarb
aas
es
repnz
cmp
ljmp
lods
lret
fnsave
dec
pop
movsl
rcr
stos
add
ljmp
and
gs
sub
lret
rorb
dec
cmp
cmc
xchg
faddl
inc
mov
orl
mov
sub
ss
jle
pop
psrlw
inc
inc
sbb
mov
and
cmp
jbe
fisttpll
lret
fadds
jbe
sub
xchg
inc
ret
repz
jmp
ljmp
jecxz
aaa
imul
lods
push
std
or
xchg
movsb
cld
jl
or
mov
add
mov
xchg
mov
cmp
jmp
mov
hlt
or
mov
and
outsl
and
into
push
sbb
cmp
stos
cmpsl
popa
and
sub
addr16
outsl
and
dec
lock
cmpsl
cmp
es
fcmovnbe
iret
outsl
push
test
add
in
and
ds
out
or
push
cmpsb
jg
sahf
mov
xchg
mov
jmp
out
adc
das
xchg
ljmp
testb
pop
insb
fbld
mov
inc
and
je
jle
jne
adc
add
push
xchg
outsl
adc
or
xchg
stos
or
in
jne
hlt
xchg
xor
push
cs
cmp
inc
push
cmp
cmpsb
jne
inc
shrl
inc
mov
and
adc
push
div
dec
xchg
ss
in
mov
jae
xchg
pop
cld
stos
pop
cli
das
pop
mov
cli
add
call
push
sbb
stos
test
sbb
and
ljmp
cmpsb
mov
pop
cltd
push
insl
jmp
es
lcall
pusha
pop
xlat
sahf
cmp
jg
cmc
in
mov
int
xor
sub
push
int3
popf
frstor
mov
sub
aad
in
hlt
xchg
clc
mov
and
jmp
adc
xchg
jns
out
dec
mov
sbb
cld
or
and
into
mov
test
mov
mov
pop
push
push
aas
scas
pushf
pusha
cs
add
stos
and
and
cmpsl
mov
push
pop
lret
pop
cmpl
adc
icebp
in
lods
add
iret
xchg
rolb
pop
out
in
cmpsl
dec
xchg
pop
insb
xor
cmp
xchg
adc
jno
fmul
or
or
es
or
mov
pop
sarb
lods
sbb
pusha
cli
jnp
aad
clc
out
pop
push
lcall
pop
xchg
xchg
scas
divl
pop
add
xchg
ds
cs
or
jbe
inc
jp
jo
subb
add
aam
adc
pop
out
int3
inc
loope
cmp
sub
mov
mov
pop
repz
inc
sbb
fwait
push
mov
mov
pusha
or
or
rol
call
shl
sbb
hlt
mov
push
in
xor
xor
sbbb
cli
insb
mov
stos
aam
cmp
test
or
xor
outsb
ficompl
or
mov
loopne
data16
imul
or
test
loopne
and
dec
and
fstp
loope
mov
data16
clc
rorl
push
pusha
mov
mov
or
stos
jo
popa
add
jo
inc
dec
add
imul
imul
ret
cwtl
mov
sub
xor
inc
mov
fwait
mov
fstl
mov
dec
xchg
cmp
das
cmpsb
cld
shlb
cli
stos
push
cmp
cltd
sbb
bound
jmp
sbb
mov
scas
ret
push
loopne
mov
add
jo
and
jge
sti
in
pop
into
pop
and
dec
and
into
xor
out
out
ds
adc
mov
add
mov
lret
aaa
mov
sub
jbe
cmpsl
sbb
pop
fwait
xor
sub
clc
sbb
cli
je
out
xchg
scas
mov
test
fmuls
mov
insl
sbb
jnp
jb
sub
inc
and
mov
push
jp
jmp
es
cmovno
mov
jnp
ret
int3
incl
out
rcl
and
fld
repnz
ds
dec
lock
cmc
cwtl
fstps
gs
dec
mov
jge
jp
dec
ret
ret
sbb
jmp
into
dec
sahf
and
dec
jmp
repnz
insb
mov
push
loope
cmp
jb
fs
rcrb
rorl
add
jp
lcall
push
cmp
sahf
add
jno
xchg
inc
jne
xchg
call
push
add
scas
shrl
and
int
movsb
mov
or
dec
adc
pop
pop
std
xorb
mov
fists
xor
fwait
mov
push
add
xor
adc
sbb
dec
loope
dec
jecxz
popa
jge
lods
roll
and
bound
or
cmp
add
jle
xchg
pop
mov
xchg
ret
xchg
jmp
mov
pushf
sub
and
into
jns
inc
ljmp
les
dec
daa
lcall
leave
loop
in
sub
and
jp,pt
pop
inc
mov
test
mov
jo
adc
pop
inc
mov
stos
pop
shll
idivl
add
aam
push
xchg
cmp
sub
cmp
mov
adc
fs
les
mov
sbb
fmuls
adc
xchg
je
jle
or
test
pop
push
mov
fcomps
shl
mov
jb
call
daa
les
mov
lret
aas
and
add
xchg
xor
xor
or
outsb
fwait
cmp
or
push
outsl
ret
psubsw
mov
ret
loopne
jl
mov
movsb
lds
and
push
fldcw
and
fstps
dec
xor
into
das
dec
es
mov
sbbl
insl
mov
push
stos
and
inc
lahf
cmp
and
xor
popa
push
movsl
jno
sbb
stos
and
inc
sub
mov
mov
lahf
test
pop
cmp
xchg
and
add
cmp
push
adc
scas
jle
call
add
mov
push
add
push
sahf
adc
loope
pop
roll
pop
arpl
mov
repnz
je
sahf
push
pop
sbb
out
mov
cmp
and
popa
std
push
in
out
fidivrs
int
mov
fdecstp
xchg
xchg
into
mov
pop
int
jg
or
hlt
test
push
in
int3
add
lock
lods
sbb
push
sub
mov
push
xchg
sub
cmp
outsb
pop
sarb
jmp
daa
dec
pushf
mov
push
mov
lea
aam
pusha
out
lcall
arpl
pop
xor
pusha
push
fbstp
pop
sti
mov
jmp
fdivs
jle
sbb
stos
ljmp
or
ss
or
out
adc
add
mov
fsubr
jae
xlat
mov
xchg
in
ficoms
cwtl
or
fst
mov
xchg
xlat
xchg
in
push
stos
mov
lcall
shlb
lock
mov
xor
sbb
clc
push
or
or
repnz
adc
iret
dec
aad
std
test
cmp
adc
stos
inc
jb
fsubs
pop
mov
lock
inc
jno
add
push
scas
push
enter
push
rcrl
cmp
fcomi
insb
push
push
xchg
sbb
or
or
clc
cmc
inc
stos
test
jo
scas
mov
fsubrl
test
jae
or
cs
fs
lcall
mov
lea
add
fwait
imul
enter
xor
xchg
stos
cltd
lret
sarl
popl
xchg
dec
addr16
test
adcl
mov
sahf
pop
das
imul
cltd
les
add
mov
mov
inc
cmp
orb
mov
bound
push
and
inc
mov
mov
dec
adc
jnp
push
sbb
jl
xchg
mov
imul
fiaddl
enter
xchg
push
cmpsl
daa
mov
mov
dec
cltd
xchg
adc
cmp
mov
mov
loopne
mov
adc
repz
inc
push
stc
cli
ficoms
test
popf
shr
js
pop
mov
scas
mov
push
incl
lods
stc
and
idivl
sbb
shll
dec
cmp
movq
pcmpgtb
data16
cli
push
inc
lds
sub
lahf
int3
rcrb
sarl
lahf
sbb
adc
imul
jno
cld
adc
sti
mov
stos
cmc
pop
enter
xor
inc
push
addb
outsb
cs
or
and
xor
call
or
push
jle
pop
adc
movntps
aaa
sub
mov
sbb
faddl
clc
mov
jecxz
cmpsl
add
shl
xchg
push
lea
rcll
data16
rol
pop
mov
sub
mov
mov
das
xor
loopne
testl
mov
hlt
dec
inc
jg
in
pop
push
mov
jg
xchg
dec
sbb
mov
or
movsb
xchg
rclb
pop
iret
fwait
cmpsl
inc
aam
dec
mov
jno
jns
test
inc
enter
push
out
lret
pop
push
cmp
mov
dec
lds
subb
sub
mov
das
mov
sbb
ficompl
cld
jl
daa
ljmp
ret
inc
jo
push
jge
negl
mov
movsb
jecxz
cmp
mov
fisubl
aam
xor
xchg
cld
cmp
or
adc
adc
mov
add
nop
ss
arpl
in
loopne
int
stc
pop
xchg
popa
test
icebp
add
test
cmc
mov
mov
lcall
sahf
mov
inc
mov
mov
ficompl
and
test
lock
add
loopne
es
in
or
stos
sub
or
jmp
ds
jge
and
pop
in
sbb
call
es
sub
movsb
fs
mov
mov
mov
stos
popf
mov
into
in
js
xchg
pop
ficompl
loopne
fisttps
int3
jb
dec
stos
cmp
mov
test
add
aas
lret
mov
std
cld
daa
fidivrl
test
mov
dec
push
dec
loope
andb
sbb
mov
add
sbb
xor
es
fdivrs
mov
inc
xchg
loope
jge
movsl
inc
test
mov
ret
movsl
mov
push
call
pop
test
fidivrl
xlat
inc
das
cli
daa
push
jae
push
jno
fistpll
dec
xor
inc
push
loope
iret
jg
sbb
daa
xchg
incl
xor
cmp
adc
jl
mov
inc
xor
pop
xchg
mov
pop
rorb
xor
adc
imul
sbb
sub
inc
mov
loope
mov
popf
jmp
sub
flds
movsl
cli
mov
es
sub
dec
inc
mov
les
int3
or
idivb
test
and
cmp
fcomi
or
outsl
sbb
hlt
mov
pop
cmp
adcl
sub
dec
jns
pop
cwtl
jne
test
mov
jbe
xchg
int3
jae
fwait
nop
out
ret
rcrb
imul
xor
dec
sahf
ss
insl
sbb
inc
jp
lods
xchg
cmp
cwtl
sti
adc
hlt
insb
aas
test
mov
nop
rorl
add
stos
pop
mov
sbb
push
xor
push
sub
inc
mov
lahf
popa
call
pushf
pusha
clc
pop
sub
sbb
mov
pop
jne
aaa
dec
and
ror
lock
fcom
pop
aam
pop
push
pop
push
jecxz
mov
xor
std
das
inc
lcall
fcmovnbe
loope
pop
xlat
push
add
dec
rcr
fwait
or
js
push
stc
mov
sbb
inc
fwait
shrl
dec
mov
push
jge
sahf
cmpsb
cld
shr
jecxz
ficompl
jnp
stos
jg
xor
cmp
std
push
shl
addr16
xor
loop
inc
or
rorl
stc
aam
int3
shr
add
js
daa
inc
in
out
sub
insl
jecxz
daa
mov
push
sbb
pop
push
mov
test
inc
lret
aad
push
pop
mov
pop
cmp
xor
shll
test
sarl
dec
add
jne
outsl
mov
adc
xor
xchg
pop
xchg
pop
inc
sub
and
rcr
and
jae
or
and
dec
loope
aad
fisubrs
int3
loope
push
mov
sub
rcr
cli
push
iret
pop
cmp
mov
neg
sbb
gs
push
and
into
push
fisubs
push
fdivp
xchg
movb
gs
sub
sub
int3
hlt
cmp
jno
mov
pop
adc
dec
cmp
cli
mov
lret
jae
ss
lods
lock
aam
repz
inc
sbb
ret
xchg
repnz
loop
jg
sbb
dec
jne
adc
sbb
jg
mov
xor
imul
or
lcall
mov
add
addr16
dec
lods
mov
jmp
xor
mov
xchg
ret
sbb
repz
shlb
mov
popf
fcmovbe
sahf
cmp
ss
popa
mov
pop
mov
jno
xchg
inc
push
or
sbb
mov
shlb
inc
scas
fcoml
mov
or
dec
sbb
incl
out
add
or
pop
push
movsb
add
adc
cmp
test
test
mov
subl
lock
or
cmp
das
popf
mov
jbe
das
sbb
rclb
stos
xchg
mov
push
stc
insb
pop
add
pop
imul
mov
mov
aad
cli
scas
xchg
subl
je
mov
cmp
hlt
inc
cmp
test
mov
xor
push
xchg
fsubrs
enter
cmp
call
int3
dec
loopne
in
jg
lock
lret
and
and
stos
subb
in
mov
lods
cmpsb
xchg
cmpsb
cmp
dec
adc
cmp
mov
cmpsl
pushl
inc
fnstsw
into
subl
cmp
sbb
pop
fs
aad
cmpsl
cmp
add
xchg
outsl
nop
imul
popf
adc
movsb
xchg
push
push
lea
or
loope
fstp
xchg
movsb
jne
mov
lock
xor
push
dec
jns
test
pop
dec
andb
mov
adc
mov
jo
in
fcmovbe
out
adc
mov
inc
orl
mov
xchg
push
les
nop
mov
insl
stos
pop
cmp
pop
pop
aad
stos
mov
idivb
xor
jmp
lret
mov
jb
mov
stc
inc
sub
call
xlat
cmp
inc
cmp
xlat
lods
adc
insl
inc
sti
and
popa
lds
es
jnp
std
rolb
sub
mov
mov
mov
sbb
and
and
sti
lahf
xchg
xchg
mov
test
stos
inc
mov
daa
faddp
add
add
push
add
cmp
repz
test
movsl
jae
popf
xchg
aam
jne
repz
inc
mov
addr16
sbb
or
and
jmp
add
js
or
int3
cwtl
loope
and
in
pushf
lretw
fdivp
fidivs
in
cmp
nop
jle
inc
testl
inc
add
dec
ret
dec
lods
daa
mov
jae
or
outsw
mov
stos
sub
ds
xchg
mov
mov
outsb
xchg
fsubrl
adc
cli
sub
out
sub
xchg
add
test
test
cmpsb
mov
push
cmp
movsl
dec
loope
adc
lds
mov
leave
inc
add
push
jl
mov
sub
imul
adc
dec
daa
aaa
fisttpl
int3
mov
sbb
gs
aaa
mov
stos
loopne
push
cmp
into
or
dec
push
xor
shlb
jne
mov
jg
lret
mov
xor
push
ret
lahf
inc
adc
mov
in
hlt
mov
mov
push
test
ret
repnz
icebp
inc
xlat
sub
mov
xchg
or
jo
ds
and
push
cs
jg
mov
adc
xchg
es
mov
mov
inc
sbb
loope
movl
push
aas
pop
shrb
sbb
addr16
imul
aas
inc
adc
or
bound
xor
fidivrs
enter
push
pop
jae
std
rcrl
mov
cmpsb
aas
insb
inc
in
mov
xor
es
lods
jo
cmp
push
push
mov
loopne
cltd
xchg
loopne
cmc
inc
lahf
adc
mov
adc
mov
mov
rorb
inc
mov
and
imul
popa
fnstcw
add
mov
out
and
arpl
sub
cltd
shrl
popf
inc
cmp
adc
cltd
and
mov
jne
jns
or
xor
icebp
and
mov
push
mov
and
rcrb
adc
pop
mov
and
pop
insl
mov
fprem
int
jbe
in
shll
rcrb
pop
icebp
setl
mov
insl
xor
repnz
mov
mov
aad
shll
mov
add
cmpsl
add
or
mov
rorl
scas
arpl
mov
add
sbb
pop
mov
stos
popf
and
jle
pushf
inc
in
jmp
pop
int
sarl
adc
mov
xlat
jbe
jnp
cs
icebp
jmp
pop
arpl
insb
dec
mov
fwait
push
or
inc
addl
jg
mov
aaa
rcrb
adcb
enter
add
push
cmp
stc
ja
cmpsb
aaa
stc
xchg
pop
sbbb
jp
xor
cmp
daa
lods
test
cmp
xchg
cmp
and
or
lock
loopne
sbb
subl
stos
sbb
testb
xor
mov
in
or
add
out
sbb
push
scas
and
jmp
mov
psubb
test
out
push
pusha
mov
add
ss
lret
nop
jp
aad
adc
in
push
push
pop
jno
lea
sbb
fs
pop
dec
data16
sbb
jns
xchg
les
push
xchg
xlat
mov
mov
mov
and
cvtpi2ps
dec
push
in
jg
mov
add
inc
cwtl
inc
dec
push
cli
inc
mov
lds
pop
jo
add
lods
push
xor
jle
jg
jmp
mov
repz
cmp
in
or
shll
mov
dec
inc
adc
adc
or
loopne
fnstsw
fdiv
mov
dec
icebp
cmpsl
imul
enter
mov
pop
ret
mov
cmp
jne
pop
sbb
and
popa
inc
repz
pop
mov
mov
mov
insl
jg
mov
push
xor
adc
adc
or
in
jmp
inc
lea
sbb
mov
roll
mov
roll
pop
aam
or
mov
test
mov
insb
xchg
imulb
lahf
sbb
lds
test
mov
mov
and
push
js
fucomp
pusha
push
lret
inc
ljmp
push
shl
cli
popa
fs
shlb
sbb
rcrl
out
lods
pop
pop
pop
cs
fwait
loope
cmp
and
lcall
add
bound
stos
das
mov
xchg
lahf
mov
xchg
cld
mov
sbb
aad
out
xchg
mov
push
div
scas
enter
test
pop
sub
adc
mov
mov
and
xchg
mov
push
aad
ja
xchg
jns
sbb
mov
stos
cmp
and
dec
mov
ljmp
and
rol
xor
inc
icebp
xchg
and
inc
xchg
cmp
sbb
inc
subl
out
jmp
test
dec
mov
pop
xlat
icebp
es
and
mov
or
jmp
inc
push
movsl
adc
mov
fisubrl
sub
out
push
outsb
push
mov
sub
aaa
dec
mov
and
cmp
mulb
mov
push
jl
ret
popf
js
mov
stc
loop
xchg
roll
inc
xchg
jle
push
mov
test
imul
icebp
repnz
mov
in
loopne
pop
ficoml
outsl
jo
scas
hlt
xchg
ss
pop
inc
data16
rorl
xor
jns
test
lock
lods
mov
imul
cld
arpl
jg
or
or
in
popa
push
enter
jne
mov
fstpt
jns
pop
aas
loopne
daa
fdivr
jl
sub
ja
jno
mov
sti
pop
xchg
ss
sub
roll
gs
push
jge
imul
leave
xchg
out
mov
mov
pop
mov
cwtl
sub
cmp
jbe
dec
rclb
jge
jp
das
xchg
mov
cltd
ljmp
inc
xor
je
cmc
inc
mov
mov
adc
push
dec
jl
sbb
jne
jnp
imul
inc
negl
test
adc
pusha
aas
mov
mov
push
mov
pop
push
subb
push
cmp
xchg
mov
or
mov
and
cltd
xchg
hlt
das
push
jmp
xchg
insl
loop
lock
es
adc
xor
cli
mov
add
xor
aas
push
sbb
loope
push
in
dec
pop
or
cmc
or
js
jnp
cwtl
rcl
pop
push
dec
adc
or
cmpsl
es
lret
lahf
jns
hlt
push
xchg
adc
popf
leave
sbb
adc
mov
jae
sahf
pop
sub
cs
dec
mov
xchg
push
imul
rolb
cmpsb
jmp
dec
cmpsb
adc
push
cmp
adc
cmpsb
in
sub
jl
lcall
call
mov
scas
iret
mov
mov
subb
in
mov
pop
mov
jmp
icebp
mov
mov
repnz
add
sub
mov
pop
jl
pop
mov
add
adc
ud0
push
inc
xchg
fdivl
pushf
fsubl
fldl
mov
das
xchg
inc
jp
aas
rolb
dec
adc
out
test
bound
out
enter
and
and
adc
repnz
test
testl
mov
ja
faddl
adc
sub
mov
call
lea
bound
mov
pop
mov
jae
dec
aaa
mov
fsubrl
js
fisubl
in
pop
mov
mov
fucomip
xchg
mov
and
mov
dec
sbb
dec
and
fsub
ret
loopne
or
je
sti
push
movsl
push
fidivs
inc
or
push
dec
scas
inc
sbb
xlat
fsubrl
lret
xlat
dec
sub
aas
movsb
pop
sarb
rcr
aad
jno
loope
jl
inc
pop
std
and
mov
mov
push
mov
imul
push
sbb
in
lahf
cld
rorb
xor
clc
shl
out
inc
mov
mov
jb
call
pop
jno
adc
mov
dec
fstp
repz
mov
in
outsb
xor
xorl
xchg
mov
or
push
push
pop
xor
arpl
inc
ret
push
xchg
sbb
push
mov
pop
cmp
mov
insb
dec
dec
mov
and
and
jp
push
mov
mov
mov
scas
or
fwait
sbb
ficoml
sti
ljmp
pop
push
imull
push
push
xor
enter
inc
js
mov
and
or
in
xchg
and
out
add
jb
std
and
mov
pop
mov
and
xchg
jle
jecxz
rclb
stos
jo
sub
xchg
imul
aas
andl
mov
lret
je
push
imul
cmpsb
jnp
pop
add
jmp
mulb
jns
xchg
call
gs
lock
adc
add
mov
xor
lods
inc
pop
add
cld
or
pextrw
imul
hlt
cmp
sub
dec
xchg
popa
loop
inc
repnz
call
mov
sub
adc
subl
jb
cmpsl
mov
mov
fs
sbb
xor
jg
xchg
outsb
xchg
sbb
dec
cmpl
ljmp
cmp
mov
in
sbb
cmpl
aam
aaa
add
ss
out
cmp
mov
jne
fimull
sub
inc
nop
push
enter
lods
sub
loop
shlb
and
push
in
js
or
mov
adc
mov
adc
das
lods
inc
pop
shll
and
jae
sarb
gs
cwtl
inc
mov
mov
xchg
xchg
lahf
push
xchg
aas
and
popf
xchg
mov
pop
sub
dec
fbstp
clc
pusha
fimuls
xor
incl
or
iret
and
sub
jb
add
scas
jno
adcl
jge
sbb
inc
imul
mov
jne
test
push
mov
cmp
int3
mov
sarl
jmp
les
push
push
xor
jmp
out
lods
xchg
mov
xor
inc
int3
in
push
pushl
jo
xchg
mov
shr
inc
aam
addb
popa
adc
sbb
push
notb
mov
movl
push
and
and
xor
fldcw
fdiv
mov
lcall
and
adc
imul
jbe
rorl
or
mov
popa
seto
or
push
mov
lods
push
cld
jae
xchg
popl
sbb
jae
lcall
or
dec
inc
xlat
add
fdivrs
push
iret
add
aad
dec
pop
push
cmp
dec
into
fwait
push
out
jo
out
jp
into
mov
scas
in
and
cltd
popf
and
repz
roll
add
es
and
lock
fcoml
jge
and
and
adc
xchg
or
dec
inc
repnz
and
mov
lret
jo
push
rcrb
std
aam
mov
mov
xor
xchg
xor
xor
leave
sbb
xchg
jo
iret
xor
push
xlat
dec
xchg
int
daa
arpl
loope
mov
lret
icebp
push
pop
mov
cwtl
xchg
add
sub
inc
pop
inc
outsl
aad
lock
xchg
inc
iret
cmp
pop
or
mov
push
or
ret
push
add
cmp
in
add
das
notb
in
add
repz
pop
inc
gs
mov
sub
addr16
rorb
jns
xchg
out
outsl
xchg
mov
lcall
shrb
or
cs
adcl
popf
mov
push
jno
mov
leave
rorl
dec
aad
push
add
xlat
pop
fldl
pop
pop
stc
pusha
popf
xor
add
cs
sub
xlat
popf
subb
add
rcll
stc
dec
aad
js
or
add
fstpl
mov
pushf
cmp
xchg
sbbb
mov
adc
addr16
mov
loope
sub
cld
and
xchg
fisubs
mov
outsb
fistps
pop
mov
subb
into
cmp
dec
mov
movsl
push
fstpl
mov
mov
mov
mov
pusha
jb
movsl
imul
push
popf
das
pop
stc
xor
xor
mov
adc
push
inc
or
outsl
sti
xor
pop
adc
ljmp
ja
insl
jge
outsl
xchg
sub
in
add
aam
clc
cwtl
lea
shl
pushf
pop
add
sub
icebp
mov
xor
mov
mov
cmp
adc
and
pop
inc
xchg
cmp
and
inc
cmp
pop
push
pop
call
jge
sbb
mov
sub
xchg
out
and
add
repz
inc
xlat
imul
push
in
sti
adc
adc
in
jle
cmc
inc
scas
xor
fstpt
lcall
mov
mov
test
mov
add
in
inc
repz
mov
dec
xlat
lods
mov
and
mov
imul
sbb
cmp
repz
pop
aam
add
es
pop
or
jl
mov
iret
push
stos
ds
jbe
shl
je
into
scas
ret
inc
add
movsb
loope
and
and
jne
pop
sti
fbstp
js
push
pop
loop
sub
mov
xor
into
mov
sarb
add
pop
out
jecxz
shlb
leave
mov
jae
repz
jnp
cmc
xchg
xchg
push
pop
inc
outsb
lret
or
push
rcrb
push
lahf
scas
sub
lds
testb
xor
and
mov
pop
push
aaa
cmp
pop
scas
mov
pop
test
pop
pop
cltd
mov
or
inc
dec
add
adc
cs
xchg
sbb
hlt
aaa
cmc
and
adcl
pop
dec
and
or
adc
leave
and
inc
and
mov
cmp
data16
popf
int
dec
sbb
lcall
push
mov
pop
cmp
data16
fs
rcrb
pop
inc
xchg
push
xchg
pop
jge
and
cmpl
fadd
fs
sub
cmpsl
mov
or
ret
es
int3
or
add
repnz
andb
popa
fsub
pop
sub
sarl
sub
jecxz
push
rol
mov
xchg
pusha
emms
in
jbe
sbb
sbb
movsb
sub
fs
mov
or
ret
pop
and
fmulp
pushl
add
push
xor
xor
or
out
arpl
cs
mov
xor
out
jmp
sbb
shlb
or
cs
popf
push
pop
pop
push
fstl
dec
inc
mov
jmp
aad
xor
jns
fists
ss
nop
test
add
pop
jns
push
jl
test
jno
dec
lahf
pusha
dec
loope
lcall
ss
mov
pushf
mov
pop
add
push
xor
clc
sbb
xchg
frstor
bound
add
mov
xor
xor
repnz
lret
repnz
mov
xor
out
iret
sub
xchg
mov
test
iret
hlt
sub
jp
push
inc
jge
sti
clc
dec
hlt
mov
push
test
cmpsl
push
fldenv
adc
sar
jecxz
jbe
cmpsl
xor
fwait
xorl
data16
inc
dec
jns
add
jp
and
aaa
xchg
pop
fldln2
in
or
sti
jns
xor
add
inc
ja
shll
mov
inc
lds
cmp
pop
stos
addr16
sub
jle
mov
stos
fdivr
cs
mov
ds
fildl
bnd
sub
cmp
in
enter
jp
and
movsb
popa
mov
dec
jbe
je
adc
add
adc
std
mov
pop
test
and
pop
pop
sub
inc
aam
fildll
inc
sub
add
dec
lods
add
mov
cltd
maxps
xor
in
fcmovbe
sub
mov
dec
cmp
push
pop
dec
add
xchg
aam
pop
xchg
push
cmc
leave
ret
sub
outsl
xchg
int
ljmp
rol
repnz
or
in
shlb
testl
pusha
testl
js
xlat
xchg
bound
inc
ret
push
loope
or
es
roll
and
aad
icebp
in
mov
notl
outsb
push
add
xor
pushf
xchg
cmp
inc
test
xchg
cwtl
ret
icebp
inc
push
adc
imul
mov
xchg
repnz
movsl
xchg
lahf
pop
popa
rorb
mov
and
sub
leave
out
jnp
push
aad
jo
sub
xor
inc
loopne
push
dec
push
loopne
mov
in
orb
mov
sbb
out
loopne
xor
ja
mov
je
bound
call
push
mov
cltd
or
loope
lcall
inc
shlb
mov
daa
xor
jmp
inc
ret
sbb
mov
sti
test
mov
js
ja
adc
loopne
rclb
cli
aad
jmp
sbb
mov
mov
or
and
sub
test
and
lret
xchg
loopne
cld
mov
gs
xor
cltd
pop
lds
inc
dec
je
push
inc
xchg
or
mov
cmpsl
imul
rcll
rol
jge
repnz
hlt
leave
imul
stc
sbb
in
ja
out
inc
mov
lahf
push
ficoms
scas
icebp
es
add
imul
ja
mov
orb
sbb
xor
movl
icebp
inc
dec
pop
sbb
outsb
push
mulb
arpl
pushf
add
cltd
imul
aas
push
rolb
adc
popa
imul
xor
test
notl
stos
mov
fdivs
incl
fstp
add
pop
mov
aaa
cs
mov
lods
ficoml
push
out
sub
into
mov
pop
fldt
push
mov
cli
sub
sbb
pop
jp
iret
cmp
lret
mov
cld
pop
and
add
out
and
add
js
xor
or
jno
loope
out
es
icebp
lea
test
add
aam
adc
add
mov
push
push
rcrb
testb
iret
sub
mov
pop
mov
sbb
jge
xchg
out
test
pusha
mov
mov
sbb
pop
inc
std
lea
dec
movsb
mov
sub
sahf
push
das
lcall
insb
setle
fists
movsl
mov
enter
jo
in
lds
mov
mov
pop
ljmp
cmp
jmp
mov
aas
sub
push
cs
fnsave
xor
mov
daa
and
test
cmpsb
into
loopne
cli
jmp
fisttpll
call
add
adc
dec
cmp
fmuls
in
retw
gs
mov
add
mov
inc
dec
scas
lods
insl
xchg
xor
cmc
lahf
jno
pop
data16
jg
lret
lahf
mov
add
mov
sti
out
call
sbb
xchg
xlat
mov
or
or
adc
cmp
jle
dec
fists
movsb
leave
adc
cld
adc
cmpsb
xchg
jb
xor
or
sbb
push
mov
loop
sub
mov
insl
repnz
ja
insl
jmp
loope
bnd
pop
pop
aas
mov
sub
adc
jg
pop
int3
insb
ljmp
shl
mov
push
pusha
or
adc
mov
sbb
mov
js
dec
inc
mov
xor
pop
jae
sti
ljmp
sub
push
sbb
xor
jno,pt
nop
mov
int
leave
lahf
inc
sti
hlt
xor
pop
fisttps
test
mov
adc
mov
int
mov
and
mov
cs
cmp
shl
fidivs
jge
fnsave
fs
cmp
cwtl
popa
adc
in
ds
mov
stc
cs
fadd
in
dec
jbe
inc
xor
jb
xchg
dec
and
cmp
jg
loop
mov
xchg
popa
pop
lea
push
iret
lret
leave
sbb
mov
xchg
fwait
gs
fwait
lcall
jl
adc
sub
movsl
xlat
fisttpll
mov
fldenv
call
rcr
daa
pop
lret
pop
cmp
mov
cmpsl
addr16
leave
cmp
ret
addb
adc
sbb
imul
arpl
outsb
in
aaa
cmp
in
test
arpl
fisttps
into
sbb
mov
and
xor
mov
xchg
mov
mov
mov
insl
pop
sub
mov
cld
adc
mov
adc
pop
outsb
cmp
push
mov
ss
cmc
sbb
xchg
sub
pusha
jg
pusha
sub
inc
je
xchg
mov
jnp
mov
js
add
daa
scas
or
pop
flds
psrlq
dec
insb
lcall
pop
cmp
rorl
push
rcl
sbb
and
lahf
push
addr16
rorl
sahf
bnd
cld
gs
push
fistpll
add
rolb
lahf
in
rcrl
icebp
mov
cld
cmpsl
pop
or
into
ret
es
gs
je
push
loope
mov
sub
add
pop
shll
pop
pop
sarl
pop
adc
jne
jg
imull
movsb
scas
daa
cli
mov
push
out
or
scas
xor
or
add
mov
fs
lods
movsb
sub
push
push
cmpsl
lds
xchg
dec
cmpsb
mov
push
dec
cs
cs
lret
addr16
ds
popa
xor
arpl
bound
adc
xchg
and
jo
mov
inc
cmpb
roll
pop
push
pop
dec
push
mov
inc
mov
push
aaa
push
jg
test
jecxz
jmp
shr
mov
shrl
fiadds
push
shll
push
mov
and
sub
xchg
mov
out
orb
mov
jno
fiaddl
stc
fsubrp
lcall
sub
jnp
add
inc
scas
lock
fsub
loopne
bound
push
aaa
mov
jb
xorb
dec
push
mov
inc
push
xchg
testl
ret
lock
das
inc
push
shrl
dec
out
pop
in
jnp
je
mov
add
out
icebp
enter
mov
xor
or
pusha
jl
pop
ret
mov
pusha
xlat
inc
stc
xchg
ds
dec
sub
outsb
jns
mov
mov
and
out
inc
mov
pusha
stc
push
shr
or
mov
pushf
rcrb
movsl
data16
daa
jo
cld
sbbb
popf
stc
aas
cwtd
js
arpl
inc
dec
push
adc
jnp
jecxz
adc
ret
insl
imull
cmp
jg
mov
scas
subb
imul
filds
ja
xchg
lcall
sbb
mov
adc
scas
outsb
in
push
mov
or
popa
pop
gs
ljmp
xchg
lock
xchg
cmp
push
call
mov
pop
js
push
mov
xchg
stos
rorb
mov
pushf
dec
stc
stos
bound
fsubs
setae
fsubs
and
inc
adc
lret
adc
es
mov
and
jecxz
movsl
das
mov
ror
test
cmp
sbb
inc
mov
jmp
push
dec
leave
je
dec
jb
lahf
xchg
xchg
negb
push
aad
jge
aaa
aas
adc
es
mov
cltd
mov
jns
dec
gs
xchg
loop
mov
cmc
call
sub
mov
adc
mov
dec
jb
iret
adc
scas
rol
fsubrl
out
mov
nop
fdiv
lds
xor
cmc
push
rcrl
mov
or
or
or
pop
dec
lea
push
repz
mov
aaa
xor
pop
or
loop
pop
loope
pop
xor
cld
dec
pop
jmp
cwtl
out
hlt
shr
mov
fildll
mov
orb
dec
xchg
sbb
mov
mov
pop
jge
repz
xor
test
es
arpl
pop
inc
enter
cmp
daa
dec
test
jbe
cmp
push
stc
das
or
sbbb
pop
pop
xchg
test
dec
addr16
lods
sahf
adc
cmp
dec
ljmp
fbld
xchg
aaa
iret
dec
test
jo
cwtl
decl
mov
shll
add
dec
cwtl
jp
les
or
xor
jns
insl
or
mov
faddl
les
fildll
xchg
fwait
aam
jns
sbb
xor
add
pushf
out
xlat
mov
jl
sbb
cli
mov
test
pop
cmp
ljmp
lret
adc
movsb
fwait
arpl
push
mov
shrl
sub
adc
sub
and
cmp
sbbb
popa
jg
lds
das
pop
or
jl
push
or
inc
call
add
out
xchg
xor
or
call
loop
inc
and
dec
dec
inc
mov
or
in
add
inc
loope
pop
into
fwait
inc
jecxz
and
pop
sub
push
adc
jbe
hlt
inc
jmp
loopne
faddl
xchg
movsl
popf
dec
mov
nop
sahf
lea
in
dec
mov
mov
sbb
sub
mov
and
sbb
xchg
cmpsl
jecxz
leave
mov
ret
addr16
jae
outsl
dec
pop
jle
xor
lret
adc
pop
adc
push
ljmp
ret
or
inc
lret
and
ljmp
in
cmpsb
add
xor
sub
insb
push
fdivrp
pop
mov
aas
xchg
fcomps
jnp
inc
rorl
and
adc
inc
in
std
cld
lock
jno
addr16
cld
rorb
cli
xchg
push
xlat
or
add
cmpsb
ret
or
imul
mov
push
lahf
and
jecxz
sub
loop
xchg
inc
aam
sti
xor
adc
cmpb
jmp
nop
mov
pop
lret
das
cwtl
js
adc
cltd
test
sub
rcrl
fldl
sbb
rcrb
ljmp
mov
inc
sbb
aaa
lock
fistl
mov
ljmp
add
ds
inc
pop
adc
pushf
jno
pop
adc
cmp
sbb
sub
fisubs
adc
mov
jmp
or
xor
sarb
or
clc
ret
xchg
insb
mov
dec
lret
into
fadd
mov
sbb
cmpl
push
test
push
dec
mov
cmp
in
leave
test
cmp
aas
btr
js
dec
mov
mov
xor
lods
mov
xchg
jb
jo
mov
xchg
push
int
ret
dec
xchg
fcmove
xlat
lcall
mov
cmpsb
nop
stc
loop
dec
sub
or
imul
movsl
stc
push
sbb
or
mov
ljmp
mov
adc
mov
dec
jno
shll
and
inc
mull
cmpb
adc
jbe
int
ss
int3
mov
pop
inc
arpl
mov
xor
mov
movsb
sahf
test
and
arpl
mov
or
pop
pop
clc
xchg
imul
or
adc
push
xor
inc
sbb
je
sarb
adc
outsb
jp
and
aam
cmp
xlat
pop
pop
xlat
jp
xorb
pop
imul
add
jb
hlt
nop
adc
mov
fisttps
orb
aas
pop
pop
xchg
sbb
and
rcl
and
add
dec
nop
push
and
js
loopne
adc
lcall
dec
push
fs
pop
xlat
xchg
mov
and
roll
jecxz
js
and
push
mov
adcb
sbb
pop
lcall
push
ja,pn
ret
aad
pusha
lods
or
and
jae
fdivl
pop
insb
mov
push
aas
sbb
mov
out
add
int3
fstpl
xchg
add
test
das
ljmp
push
and
test
repnz
fsubrl
xchg
push
bound
rorb
xor
loope
xchg
mov
loope
bound
test
je
adc
out
add
aam
fdivp
shrl
mov
xchg
adc
pop
adc
add
ret
push
cld
lods
and
test
leave
stos
mov
cmp
test
xor
pusha
xchg
mov
sti
in
and
or
rorb
jge
sbb
int3
jne
outsb
incl
jo
mov
std
inc
sub
mov
inc
xor
ss
in
rorl
mov
outsb
jnp
cmp
lcall
je
sbb
sbb
lret
aad
push
sti
cmpsb
xchg
es
adc
rcrl
rorb
insl
push
in
pop
xchg
sbb
adc
xchg
or
mov
iret
mov
addb
mov
cmp
mov
mov
sbb
push
test
pop
lahf
mov
je,pt
lods
pop
in
mov
in
pushf
fisttpll
cwtl
hlt
lcall
mov
or
test
cmc
stc
mov
mov
mov
mov
in
mov
lods
cmpsb
and
jo
stc
add
sbb
mov
mov
stos
inc
punpcklbw
dec
jmp
fwait
cmp
aad
mov
xor
lea
lock
cli
inc
push
shr
nop
mov
sbb
xchg
out
hlt
xor
bound
adc
adc
leave
mov
inc
inc
inc
mov
out
cld
shlb
pop
loop
popa
adc
es
mov
jp
add
aas
cmc
popa
sub
lea
mov
inc
jb
test
andl
xor
and
jmp
fchs
sti
sahf
pushf
inc
push
mov
sub
sub
ror
adc
ja
and
neg
into
xor
scas
es
xchg
sti
cmpsb
or
into
test
imulb
add
push
mov
mov
int3
lret
lea
push
ljmp
pop
rorl
add
xchg
push
lret
jns
xor
pop
mov
pop
fwait
or
insb
jecxz
cmp
gs
mov
in
nop
inc
mov
imul
dec
xchg
jo
sbb
cld
repnz
fwait
push
sub
mov
adc
jecxz
xor
cltd
add
mov
pop
out
jg
pop
mov
mov
lea
mov
inc
sbb
test
imul
out
mov
mov
aas
sbb
into
pop
xchg
cli
mov
mov
es
inc
in
xor
xchg
jo
push
insl
pop
sub
in
push
jg
mov
cmc
cld
jg
divb
dec
dec
push
mov
inc
test
das
pop
jmp
or
xchg
jne
insl
mov
ja
xchg
pop
cwtl
jl
push
pop
imul
or
jecxz
jle
add
jno
add
cmc
push
push
or
adc
jae
fmul
mov
fisubs
cltd
lret
jp
mov
enter
out
pop
and
jno
mov
mov
and
leave
add
pop
test
jecxz
mov
xor
push
das
xchg
push
push
aam
dec
xchg
shrl
sub
cwtl
stc
pop
or
sub
subl
mov
movl
fsubrl
or
inc
cmc
pop
leave
pop
add
xchg
jecxz
inc
jno
loop
lock
add
add
xchg
ja
or
dec
je
addr16
outsb
stos
add
shrb
cmc
in
inc
or
sub
mov
sub
or
lret
int
push
roll
leave
stos
cwtl
ja
fstpt
sub
sbb
push
adc
sbb
xor
adc
ja
mov
lods
mov
bound
in
pop
mov
add
scas
loope
mov
inc
cld
lret
sub
or
idiv
psrlq
shr
push
movsb
pop
pshufw
mov
xor
or
jne
jne
mov
pop
push
or
cwtl
add
outsl
sbb
test
dec
nop
lds
cwtl
imul
fisubs
std
or
adc
lret
scas
adc
jae
fdivr
scas
scas
cmp
jmp
loopne
lret
add
adc
test
loopne
jl
and
sub
add
xchg
mov
add
inc
cmp
insl
mov
push
sub
push
sbbl
out
and
or
shll
sbb
cld
sub
and
xchg
loopne
ds
add
inc
pusha
inc
sbbb
xchg
out
shrl
sub
adc
inc
fisttps
stc
rcl
mov
out
ficomps
movsl
dec
dec
fildl
cs
mov
push
sub
cmp
or
push
inc
lds
gs
adc
cmp
fimull
sub
std
enter
or
lcall
arpl
mov
xchg
dec
cmp
push
dec
mov
int3
or
nop
xchg
jle
or
call
lds
or
inc
jmp
mov
or
rcl
adc
adc
xchg
sub
stos
das
inc
enter
loop
lods
jle
jno
xchg
push
and
cmp
mov
xchg
xor
in
icebp
fs
mov
aam
push
cpuid
clc
pop
in
test
dec
cmp
loopne
das
pop
in
imul
test
xchg
in
mov
xlat
cmpsl
push
add
xchg
sbb
pop
mov
jns
aaa
mov
into
adc
lret
repz
pop
sub
data16
subb
sub
and
fsubrs
pushf
and
inc
mov
push
and
out
lcall
xchg
cmpsb
pop
and
push
adc
push
lock
xchg
pop
or
inc
sub
popa
ss
cld
jl
enter
shrl
call
std
cmc
mov
jbe
xlat
into
jmp
xor
dec
incb
cld
adc
imulb
xor
nop
into
ljmp
in
outsl
mov
adc
inc
adc
or
lret
jbe
and
faddl
add
mov
jb
shlb
xor
push
std
jno
push
inc
stc
inc
xor
movsl
decl
jae
mov
movntq
push
pop
in
xchg
mov
into
lock
fadd
test
sarb
xchg
jp
or
sbb
fs
movsb
movsb
inc
mov
inc
mov
inc
add
push
pop
inc
sbb
add
scas
jnp
addr16
fdivr
pop
sti
insb
and
cmpsl
adc
cmp
clc
cld
sub
adc
inc
call
and
push
mov
mov
cmp
mov
mov
imul
inc
lods
xchg
cmpl
fs
jg
nop
sub
adc
mov
fsubrl
push
aad
jmp
hlt
cmp
sarl
daa
es
je
test
lds
sahf
test
inc
mov
fistps
ds
clc
andb
mov
mov
mov
ror
dec
cli
clc
mov
mov
push
enter
jbe
cmpsb
test
ss
sbb
aad
dec
adc
pop
ljmp
cld
jns
dec
xchg
cs
sarb
js
inc
mov
cmpb
sbb
in
lret
push
mov
repz
loopne
cmp
call
repnz
mov
cmc
mov
notb
mov
paddw
pushl
mul
mov
fnstcw
outsl
repnz
jnp
ljmp
loop
andb
ret
mov
adc
mov
mov
rorb
pop
and
leave
cmpl
cmp
mov
mov
jmp
mov
ret
bound
cmpsl
push
out
pop
not
int3
js
push
add
fstpt
divl
je
mov
pop
into
loop
inc
es
push
enter
lods
outsb
icebp
nop
adc
sbb
aaa
mov
inc
insb
jbe
dec
or
inc
sbb
nop
div
lret
inc
push
fwait
icebp
cmc
ret
jle
stos
sbb
popf
cmp
test
les
outsl
push
xlat
jo
xchg
imul
je
into
scas
xchg
mov
mov
ret
scas
push
pop
outsb
xor
push
in
adc
in
dec
push
cmpsl
or
popa
mov
dec
enter
push
scas
rep
xor
jns
leave
mov
mov
stc
test
xor
push
pop
aam
imul
fs
dec
mov
aam
pop
xlat
in
out
xor
ja
in
movsl
movsb
int
outsb
push
sbb
fs
mulb
cmp
lods
dec
push
stos
in
pusha
lods
stos
scas
mov
out
or
jl
jmp
sar
sbb
dec
clc
xchg
and
loop
lcall
es
xor
cmpsb
cmp
inc
imul
rcll
or
mov
imul
mov
adc
addb
test
hlt
mov
push
movsb
pusha
imul
xor
lret
or
xor
out
xor
or
pop
cs
pop
xchg
mov
addr16
out
mov
mov
test
jl
jecxz
jno
jmp
dec
imul
aas
sub
mov
stos
mov
jb
pop
pop
push
mov
pop
inc
mov
test
push
lahf
jle
jle
lock
and
call
xor
lret
cmpsb
lds
rcll
iret
imul
iret
pop
or
push
inc
pop
stos
push
addr16
xchg
or
clc
mov
and
cltd
jecxz
jecxz
jl
pop
scas
xchg
inc
dec
cli
sbb
or
scas
das
pop
inc
mov
mov
mov
stos
ljmp
aas
scas
cmp
mov
loopne
lahf
mov
sub
test
mov
jns
inc
stos
lea
movsb
sbb
inc
lcall
and
lods
inc
out
mov
pop
in
jmp
sbb
jecxz
mov
sub
js
sub
jo
out
outsl
mov
jmp
add
jecxz
lea
loope
movsb
ljmp
dec
xchg
sbb
clc
xor
sub
mov
add
pop
std
js
pop
stc
add
clc
xor
loopne
jmp
rorl
scas
ljmp
in
jecxz
lock
inc
fisubrs
fcoms
mov
call
xor
pop
lods
imul
addr16
and
add
and
adc
adc
scas
xchg
daa
mov
adc
in
out
dec
lahf
int
mov
sbb
mov
cmp
icebp
jmp
jns
inc
cli
mov
sbb
shr
cmp
mov
movsb
push
std
sti
and
mov
ja
mov
or
in
mov
insb
data16
es
test
adc
clc
std
leave
push
mov
add
jne
int3
vpaddq
inc
add
ss
push
flds
pop
xchg
lahf
testb
or
cwtl
push
jmp
sub
dec
cmpsb
sti
decl
cmpsb
out
dec
xchg
mov
push
std
lea
clc
insb
mov
gs
cld
in
jl
in
mov
gs
lcall
dec
or
xchg
push
inc
leave
mov
js
fadd
enter
cmp
inc
sbb
sbb
adcb
sarl
xlat
stos
jbe
xchg
mov
ret
mov
inc
test
lret
inc
les
push
mov
jno
push
jmp
iret
sti
mov
loop
xchg
dec
xchg
fcoms
xchg
adc
jmp
call
add
lret
xchg
dec
adc
sbb
xchg
lret
cmp
dec
push
testl
xchg
inc
push
inc
push
inc
icebp
or
in
sub
adc
push
fldenv
roll
out
mov
push
lds
and
inc
mull
sub
ficoms
lods
add
data16
jl
in
ror
or
mov
adc
xchg
cmp
cmp
jbe
movsl
sbb
push
cltd
mov
inc
inc
pop
out
das
mov
cmp
scas
scas
dec
push
sub
pusha
in
ret
je
mov
and
inc
xchg
sub
push
shl
fdivl
cmp
testb
fsubrs
and
je
cs
daa
addb
int
xchg
xchg
dec
sub
mov
test
cmc
cli
xor
cmp
xor
adc
cmp
imul
daa
push
mov
sub
fimuls
pop
jmp
pushf
daa
loop
jnp
jg
in
mov
daa
inc
pop
sbb
dec
and
cmp
xchg
lock
imul
out
enter
addr16
dec
lcall
addr16
movl
loop
jmp
inc
adc
subl
push
and
pop
aad
mov
or
gs
inc
test
lret
adc
dec
outsl
dec
cwtl
repnz
pusha
xor
jge
leave
cmpsb
mov
mov
popl
fistl
rep
test
mov
or
xor
aaa
out
adc
xor
sub
mov
les
adc
push
insl
adc
mov
pop
ja
test
inc
data16
or
push
lret
clc
sbb
cli
inc
dec
pop
or
or
mov
jp
push
xor
dec
ret
or
jb
push
jne
cmpsb
jp
inc
mov
xchg
inc
inc
mov
inc
pop
inc
pop
fldenv
add
jmp
add
or
mov
cmc
rcrl
jnp
mov
imul
pop
adc
ljmp
roll
mov
push
lods
inc
push
mov
movsb
sbb
outsl
dec
gs
or
jecxz
sbb
dec
xor
out
lods
icebp
push
adc
ret
sbb
cmc
adc
xchg
in
aas
lret
leave
pop
xchg
out
rorb
movsb
add
ret
xlat
fisubrl
cltd
mov
inc
adc
fisubrs
sti
aaa
mov
mov
mov
insb
les
ret
xchg
pusha
mov
ror
in
adc
loope
mov
jmp
cmc
xor
push
sbb
nop
in
lds
int3
clc
pop
and
xchg
add
div
hlt
ror
add
jecxz
push
push
cwtl
dec
cmp
jno
mov
aam
push
shrl
cmp
addr16
push
push
ja
inc
dec
mov
mov
lret
xchg
jo
testl
mov
inc
mov
and
int
adc
cmpsb
dec
popf
adc
sbb
popa
xchg
nop
in
jg
lea
inc
addr16
aam
mov
andb
rol
push
sub
and
out
pop
shrl
mov
push
add
xlat
mov
dec
sub
fdivrl
popa
pop
fdivrp
sbb
xor
scas
sti
dec
mov
dec
sub
mov
out
andl
dec
mov
xor
sub
prefetch
xchg
add
xor
cmc
ffree
loopne
push
mov
pop
jg
pop
cmpsb
shrb
adc
add
pop
scas
mov
jbe
cmp
jne
sub
adc
sbb
lahf
js
enter
dec
dec
mov
insl
mov
push
rol
hlt
rcl
bound
dec
jg
cmp
rcll
mov
jo
jl
addl
mov
insb
xchg
mov
inc
lea
imul
sbb
jno
rorb
nop
cmp
arpl
aas
insb
inc
and
aaa
push
jge
dec
sbb
mov
aad
inc
ljmp
xor
daa
pop
push
int3
sub
pop
jnp
add
aad
scas
mov
push
in
jbe
imul
call
imul
loop
jge
stos
sarl
clc
pop
addr16
mov
add
loop
icebp
pop
dec
imul
pop
mov
std
and
inc
dec
mov
dec
pusha
mov
ficomps
in
repnz
in
lret
adc
shlb
inc
ficompl
lret
fmull
lock
add
loop
ds
stos
movsl
sbb
sub
pusha
cs
and
test
cmpb
inc
and
cmc
add
test
inc
jne
push
push
ds
sbb
or
pop
xchg
repnz
cmc
push
lods
or
pop
push
xor
shl
adc
push
cmp
fldt
mov
out
xchg
push
add
insb
das
xor
mulb
jne
push
xchg
cmpl
pop
dec
jbe
sub
xor
pop
jg
loopne
into
cmp
mov
push
and
dec
pop
gs
mov
mov
xchg
mov
popa
sub
movl
add
sbbl
mov
cmpsl
fcoms
mov
sub
xor
ds
xchg
mov
sbb
jo
fidivrs
and
lcall
add
mov
add
pop
pcmpgtb
aas
outsl
and
fcomps
jl
and
lahf
test
dec
daa
push
push
or
adc
movsl
loopne
push
lock
loope
inc
xor
int3
arpl
push
fdivrs
aad
sub
push
ror
stos
stos
mov
bound
jo
lds
in
jg
movsb
and
pop
cmp
mov
call
fsubl
xchg
xchg
push
sub
xchg
push
push
mov
add
in
insl
inc
rcrb
clc
add
sarl
inc
pop
out
fldt
in
inc
pop
cmp
jbe
xor
pusha
xlat
lret
outsl
or
out
arpl
inc
or
xchg
xor
pop
pop
pop
cli
xchg
adc
out
lret
adcb
jns
sbb
mov
or
and
fstpl
rcrb
push
xchg
lret
leave
iret
jp
scas
mov
push
sub
xlat
sbb
hlt
daa
inc
pop
mov
dec
jg
xchg
pop
out
cmp
iret
popa
out
ss
push
inc
pop
loopne
neg
and
mov
or
nop
jp
mov
mov
or
in
dec
and
inc
ljmp
or
ja
inc
pop
mov
dec
mov
xor
add
dec
je
ds
sahf
mov
adc
xor
sbb
sub
js
jp
ror
and
inc
push
fcompl
and
sub
jne
dec
jb
insb
sbb
jno
cltd
dec
fdivs
pushf
aas
push
pop
jp
addr16
pop
std
cmp
push
sub
mov
sub
pushf
dec
sbb
aam
jp
int3
pop
inc
ret
add
push
in
fadd
mov
cmp
and
lret
dec
jno
lea
repz
xchg
decl
mov
mov
mov
cs
xchg
cmp
and
jmp
xchg
or
xor
mov
or
mov
scas
les
stos
mov
xchg
dec
cmp
movsb
cmp
mov
dec
loope
adc
xchg
idivb
and
into
lret
data16
roll
cld
dec
mov
jo
je
adc
jnp
push
cmp
adc
push
addr16
out
out
or
outsl
fadd
repz
cmp
adc
sbb
cmpsl
sbb
xchg
or
dec
repnz
ss
hlt
out
hlt
loope
adc
xchg
cmpsb
xchg
xlat
lcall
inc
fdivrp
addr16
jae
add
add
push
mov
testb
mov
jg
mov
push
sbb
aad
in
mov
popa
flds
mov
jge
dec
sub
push
fwait
or
or
cmpps
sahf
bswap
test
mov
and
in
clc
cld
or
jecxz
scas
sahf
push
sbb
sarl
mov
sub
sbb
inc
and
inc
iret
jns,pn
cmp
aam
cltd
jnp
push
sbbl
sbb
sbb
pop
clc
mov
push
sub
push
rcr
pop
mov
push
or
imul
stos
out
adcl
stc
xor
setl
sub
sub
lods
adc
push
repnz
clc
inc
jge
mov
xchg
mov
xchg
js
cltd
int3
jnp
scas
xchg
cmp
rcll
mov
ret
cmc
dec
and
mov
mov
or
je
in
cmp
dec
sbb
imul
sbb
movsl
mov
mov
ss
jle
scas
outsl
xor
leave
das
or
div
fadd
and
dec
fisubrl
add
cwtl
test
lahf
inc
insb
jb
and
fxch
test
mov
sub
repz
out
lcall
pop
lcall
pop
test
rolb
sbbb
and
ja
and
jp
mov
stc
lods
aas
and
or
out
add
add
sub
xchg
sbb
ret
mov
mov
jo
mov
jle
sbb
mov
mov
int3
mov
mov
loop
pop
lea
and
jae
mov
mov
jl
mov
jae
mov
jecxz
push
scas
cmpsb
mov
hlt
mov
rolb
cld
dec
mov
adc
push
mov
mov
mov
jge
push
rol
add
xchg
cmp
dec
into
rorb
ds
roll
sbb
sbb
xor
jecxz
xchg
jo
jl
sbb
mov
test
jb
mov
out
int
adc
lea
sub
adc
sub
inc
add
cmp
out
stos
ret
xchg
mov
shll
es
jge
mov
ds
adc
icebp
mov
push
jle
call
adc
dec
jae
je
push
push
push
shrb
fldenv
xor
mov
cmp
xchg
push
sahf
scas
jle
push
dec
jae
adc
test
add
outsl
push
lahf
test
inc
out
jne
sbb
adc
jecxz
sarb
mov
lods
rolb
lods
xchg
and
mov
jns
aaa
outsb
js
add
and
leave
iret
jmp
jl
movsb
hlt
dec
jns
loope
or
mov
sbb
and
push
sbb
adcb
mov
stc
or
mov
sbb
test
pop
mov
jns
sar
jb
nop
add
pop
in
fisubl
test
xchg
or
in
ds
xchg
and
sbb
cmpsl
xchg
fnstcw
test
pop
imull
lods
sub
daa
and
mov
das
cltd
aam
mov
mov
pop
je
cwtl
add
sub
jns
push
mov
sbb
mov
or
push
and
push
pop
sub
popa
inc
mov
push
andl
mov
or
and
gs
lea
cmpsb
mov
rclb
call
hlt
or
imul
loopne
bound
push
or
cmpsb
jmp
fisubrs
ljmp
cld
das
jbe
cld
xorl
mov
fnsave
lcall
cmc
pop
shll
sbb
or
dec
pop
fstps
btc
jnp
dec
jo
enter
scas
and
int3
mov
adc
lds
mov
mov
cmp
push
adc
xchg
mov
sub
je
adc
packuswb
movsl
arpl
outsb
insb
nop
out
dec
lcall
sub
lcall
jp
inc
sub
and
mov
mov
lcall
or
loope
xchg
popf
ret
pop
mov
jns
int3
lods
dec
in
sbb
flds
add
inc
inc
pop
jmp
in
pop
mov
outsb
dec
testb
cmp
stos
daa
fwait
psraw
pop
push
aas
mov
sti
dec
push
nop
and
or
pop
je
push
pushf
jae
or
mov
mov
bound
outsl
out
cmp
mov
ljmp
mov
popf
sbb
and
js
ja
and
mov
jmp
xor
mov
addb
sbb
mov
outsl
mov
pop
idivb
mov
xor
pop
sahf
rorl
xchg
dec
cmp
sub
fnstsw
cmc
shr
inc
push
pusha
lcall
mov
das
lret
adc
mov
dec
add
not
mov
mov
ficompl
pusha
out
add
mov
aas
addr16
sarb
sbb
mov
sbb
xchg
cwtl
jmp
scas
jle
popa
repz
dec
imul
sub
inc
mov
les
xchg
jae
jg
jle
cwtl
adc
int
outsb
aas
fidivrs
rcr
into
sbb
in
icebp
sub
xchg
leave
mov
xchg
roll
mov
xlat
push
dec
pusha
xchg
sbb
cmpsl
pop
and
mov
and
loop
xor
clc
mov
mov
psrld
repz
mov
mov
pop
xchg
inc
sarb
push
xor
xchg
mov
and
and
mov
test
test
enter
adc
xor
ja
scas
xchg
sbb
aam
mov
iret
clc
imul
pop
shlb
mov
mov
xchg
xor
mov
pop
into
test
fildll
add
mov
and
dec
fldenv
pop
pusha
sahf
xor
fbld
jae
pop
cmp
int
push
push
sub
or
out
adc
leave
mov
adc
add
or
sub
scas
pop
iret
inc
mov
test
add
jg
popa
sar
testb
cmpsl
sarl
lahf
inc
push
test
fs
outsb
cmp
mov
push
pop
in
xchg
cltd
adc
push
dec
xchg
cmpsb
imul
pop
fstpl
dec
popa
imul
sahf
push
jns
cmpsl
push
popa
cmp
cmp
adc
push
fs
xor
dec
loopne
sub
mov
mov
add
add
outsb
repz
mov
pop
cmp
mov
sub
lahf
or
mov
fidivrl
add
out
and
xor
lea
outsb
repnz
xchg
mov
xchg
fwait
pusha
add
cmp
push
cmp
pop
jo
sti
orl
in
xor
push
movsl
inc
pop
aaa
add
sarl
popa
jecxz
push
es
cmp
mov
xchg
pop
loop
jne
das
push
cltd
int
add
push
xchg
push
push
cli
mov
stos
adc
sub
fsubrl
aam
pop
sub
or
mov
call
push
sbb
push
lock
mov
push
xchg
leave
mov
mov
dec
lea
inc
inc
orl
mov
adcb
mov
leave
sahf
movsl
sbb
jg
xchg
mov
jo
jecxz
jecxz
lret
test
inc
mov
movsb
ljmp
lcall
mov
and
push
outsb
or
dec
mov
and
push
in
rolb
daa
aaa
aas
leave
push
inc
stos
cli
xchg
dec
daa
pop
add
adc
shll
cli
cmp
enter
xchg
pop
and
mov
push
adc
fs
cmp
cmp
jbe
xchg
stc
repz
dec
inc
cs
subl
dec
ljmp
push
jecxz
js
dec
mov
stc
adc
cmpsb
mov
dec
lret
adc
add
lods
repnz
cmp
mov
adc
cld
or
fucom
sub
add
push
loop
mov
mov
je
cmp
imul
fdivl
sbb
sub
push
lea
fdiv
lea
and
es
imul
mov
outsw
sbb
stc
jnp
add
mov
push
add
rclb
mov
les
fs
loop
arpl
leave
mov
jg
adc
ljmp
in
aas
xlat
sarl
insb
clc
fs
je
jne
loopne
shlb
add
stos
jecxz
mov
negl
scas
lahf
hlt
jge
ret
out
mov
imul
pop
lcall
cmp
pop
bound
pop
cmp
mov
fiaddl
mov
fs
xchg
add
je
sbb
hlt
das
bound
or
sar
push
jp
mov
stc
xchg
imul
pop
adc
mov
je
sahf
add
sbb
adc
mov
cltd
dec
es
cmpsb
data16
fisttpl
pop
stos
xor
aas
fdivrp
adc
pop
mov
xchg
lds
aaa
jg
xchg
lea
scas
and
mov
dec
in
fs
inc
and
pop
std
popa
push
add
shl
insb
imul
bound
test
cmp
pop
insb
mov
inc
mov
fistl
inc
cmovbe
js
jmp
fcmove
into
push
add
lret
mov
je
jecxz
add
xchg
adc
xor
out
jnp
and
xchg
mul
add
sub
adc
dec
mov
popf
dec
shr
push
jg
jns
dec
xchg
adc
es
and
pop
stc
xchg
bnd
sahf
iret
dec
xchg
cli
mov
mov
notl
std
outsb
dec
jno
push
rcl
inc
popa
mov
xchg
xor
cmp
add
call
lret
jno
jl
dec
fwait
ljmp
mov
xchg
orl
data16
pop
dec
gs
or
cli
pop
xchg
loope
xor
mov
mov
lret
pop
and
adc
xchg
mov
nop
fucomp
xchg
xor
push
stos
inc
aas
inc
pop
out
movsb
popf
inc
sbb
mov
out
push
sub
xchg
xlat
xor
inc
jmp
adc
mov
mov
loopne
movsl
adc
and
inc
mov
leave
and
lds
repnz
inc
push
xchg
add
int
pop
lcall
imul
pop
dec
mov
cmp
adc
lea
je
mov
addr16
or
xchg
mov
fldenv
gs
or
je
adc
cmp
fs
scas
fidivrs
imul
out
stos
arpl
jnp
add
stos
jle
cmpsl
push
xchg
push
lea
in
inc
xchg
inc
lods
sbb
jnp
cmp
xchg
ljmp
sbb
or
cwtl
ljmp
pop
es
std
pop
mov
sti
addr16
xchg
insb
mov
sbb
dec
ret
pop
out
mov
cmp
mov
mov
pop
es
mov
mov
sub
jmp
cmpsl
push
int
fs
jb
loop
outsb
insl
call
out
les
aaa
pop
imul
call
or
call
jb
and
pop
add
fs
and
mov
repnz
xor
inc
popf
lret
dec
fcmovu
jo
dec
jp
stos
sahf
loop
push
add
fwait
pop
call
xor
and
mov
push
lods
dec
sbb
inc
es
mov
lods
pop
mov
imul
xchg
ficoml
fcoms
cmp
jno
notb
or
and
mov
pop
push
cmp
mov
xchg
sbb
xchg
sarl
test
add
sysret
sbb
or
jmp
sbb
dec
sahf
inc
inc
push
pop
lcall
cmp
lret
arpl
sti
jg,pt
push
xchg
or
shlb
outsl
ret
sahf
in
lahf
ds
xchg
mov
daa
xchg
cmp
stos
mov
sub
mov
pushf
scas
or
call
inc
cmp
add
aaa
lock
repz
pop
out
addl
inc
in
lcall
pop
les
mov
imul
jmp
sbb
mov
mov
mov
push
inc
adc
cmp
inc
mov
jecxz,pt
out
scas
in
jbe
inc
sti
loop
pop
ret
in
sbb
cmpsl
cmp
sub
lahf
adc
loop
sbb
mov
push
xchg
and
xor
lret
das
leave
sub
pop
scas
adc
popa
xlat
lods
aam
roll
aad
xor
cmp
sbb
xchg
insb
je
repz
pop
xchg
popf
and
mov
mov
mov
pop
xchg
jo
mov
inc
loopne
cmc
cmp
pop
pushf
hlt
popf
pop
inc
xor
sub
or
xorb
aam
cltd
adc
jg
push
shll
dec
into
fsts
mov
sbb
sub
movsb
jp
ja
dec
push
loopne
jmp
insl
test
enter
or
mov
ret
loop
cs
mov
fldenv
stc
imul
outsb
movsb
dec
pop
scas
dec
mov
loop
in
addr16
adc
mov
add
xor
out
test
pop
add
dec
xlat
fnstsw
push
and
clc
dec
adc
mov
push
imul
mov
lea
jo
sub
in
loopne
cmp
mov
dec
dec
fdivl
dec
add
adc
dec
jae
or
enter
pop
arpl
scas
mov
nop
mov
sti
fstp
and
push
cld
and
aas
sahf
out
or
in
mov
mov
fdiv
mov
jno
negb
inc
push
and
fs
mov
mov
xchg
es
dec
push
popa
dec
out
xor
pusha
push
adc
imul
leave
add
les
out
shrl
rclb
and
iret
cmpsb
mov
adc
outsl
push
inc
jb
cmc
out
pop
inc
ss
out
movsbl
ficoml
sbb
movsb
push
inc
leave
add
xchg
xor
pop
dec
dec
pop
loop
das
push
rol
out
insb
imul
rolb
loope
adcb
fstpl
in
and
and
insl
jo
popa
je
mov
and
testb
jbe
std
outsb
jnp
adc
sub
push
mov
inc
sub
fcmovbe
enter
pop
inc
xchg
in
pop
daa
and
sub
jns
stos
pop
cmpl
sbb
pop
iret
or
in
xor
xchg
scas
push
arpl
or
decb
push
pop
sbb
les
pop
mov
test
ret
and
mov
or
aad
jae
push
sub
je
cmpsb
into
je
cmp
gs
mov
shrl
or
xchg
xor
icebp
sub
cltd
pop
loop
loop
gs
enter
test
jno
jb
test
lock
pop
sub
mov
movb
iret
cmp
inc
fbstp
xor
fdivrl
mov
and
lods
sbb
cmp
call
and
cmc
imul
sub
mov
xchg
jl,pt
lds
sub
sub
sbb
xor
mov
dec
orps
es
jp
xchg
leave
movl
mov
xor
fsubl
lds
sub
das
arpl
push
addr16
lds
sbb
dec
jl
lcall
ja
jmp
mov
jb
mov
inc
jo
mov
mov
jbe
arpl
xor
mov
push
aaa
sub
mov
xchg
push
and
div
das
iret
cmp
jg
sbb
sub
push
aas
scas
or
ljmp
push
or
cmp
shll
and
jo
push
xchg
filds
mov
add
xchg
popf
pop
dec
loop
sub
ljmp
push
fs
movsb
int
ficompl
push
mov
add
aas
or
fs
or
movsl
aas
fdivl
gs
bound
and
mov
xor
insb
inc
add
push
cmp
repnz
in
push
mov
push
xor
andl
xor
xchg
jmp
sbb
dec
das
xor
mov
outsb
loop
push
mov
cmpsl
fwait
fs
sub
push
or
push
sbb
jbe
sub
ret
je
push
mov
sahf
adc
jnp
push
sbb
sbb
jp
mov
jecxz
popa
outsb
lds
mov
xchg
cmpsb
int3
aaa
xchg
jae
xchg
lret
lock
aas
mov
xlat
dec
dec
mov
inc
sahf
sbb
push
sub
mov
cwtl
push
lds
imul
and
sbb
les
push
sbb
mov
push
xchg
and
or
sahf
loopne
pop
sahf
dec
jnp
loope
es
sbb
push
or
sti
push
call
jl
mov
adcl
sbb
cmp
jl
jecxz
gs
fldenv
mov
in
repnz
mov
into
in
roll
sub
shrl
push
adc
mov
gs
divl
lahf
inc
das
test
add
mov
stos
aad
jg
or
lret
mov
fistpll
mov
add
leave
mov
cli
mov
push
das
xchg
dec
xchg
dec
pop
dec
mov
mov
dec
pop
pop
pop
or
and
movsl
daa
sti
fsubl
add
xchg
pop
xchg
pop
inc
rorl
iret
ret
sbb
cmp
negl
mov
imul
jl
sub
inc
mov
adc
leave
rcrb
daa
adc
test
inc
pusha
or
sbb
sub
daa
cmp
sahf
sbb
push
xchg
mov
sbb
imul
mov
inc
push
or
jae
jecxz,pn
mov
xor
fcmovb
jbe
jb
jmp
lds
and
test
mov
loope
mov
ret
sub
les
inc
stc
sahf
push
jb
inc
dec
xchg
push
cmpsl
stos
arpl
mov
lods
es
mov
popf
mov
sub
push
xlat
out
jo
nop
imul
out
stc
pushf
sbbb
mov
sbb
fcmovnbe
mov
bound
hlt
dec
iret
mov
xchg
test
jnp
sbb
pop
loop
aas
mov
scas
clc
std
in
mov
cmp
scas
fwait
push
sub
xchg
movsb
std
pop
xor
mov
xchg
fucom
push
or
mov
cmp
jae
shlb
adc
aaa
or
inc
addb
jge
lock
es
shrb
add
les
jmp
and
stos
insb
mov
mov
dec
xchg
test
pop
in
stos
scas
jle
frstor
sahf
ss
in
pop
push
in
jns
or
sub
fucomp
aaa
scas
xchg
flds
xor
push
sbb
out
fnstenv
mov
pop
mov
aam
dec
in
sbb
mov
dec
popf
xchg
ja
mov
jae
fmuls
mov
scas
call
pushf
push
lock
les
lds
and
scas
push
jns
dec
adc
in
imul
ss
push
push
pop
lret
lret
push
nop
and
fstp
jecxz
fisttpll
jo
add
dec
cmpsl
icebp
shll
nop
sbb
and
test
fwait
push
and
inc
adc
dec
ficoms
rcrb
lret
ja
or
out
subb
outsb
and
pop
or
out
test
outsb
inc
and
xorl
hlt
mov
into
in
mov
bound
lcall
pusha
and
sti
imul
adc
or
push
push
mov
inc
fwait
lods
mov
xor
push
int3
mov
push
xchg
dec
or
int
pop
rcrb
xchg
sub
test
stos
mov
or
mov
pop
outsl
add
fsubrs
cltd
xor
stos
cmpsl
ret
or
adc
imul
in
or
clc
test
shr
adc
jns
rolb
push
aaa
stc
jg
fmul
add
sub
sti
test
lds
int
bound
rol
jg
jle
mov
push
mov
inc
xchg
stos
mov
sbb
xchg
xchg
jp
mov
ficompl
test
sub
fists
jae
into
jne
ljmp
mov
cmp
dec
ret
sub
inc
and
mov
cmpsl
push
pushf
lds
jle
dec
and
xchg
sub
xor
cmp
jle
je
push
jbe
sti
push
pop
ret
push
outsb
jns
lahf
xchg
aaa
adc
sub
es
sub
add
mov
lret
mov
mov
movsl
push
nop
idivl
mov
ss
and
inc
rcrl
and
mov
or
fdivl
push
or
fists
push
insb
mov
addl
inc
in
shll
xor
daa
lock
lds
cwtl
adc
les
bound
hlt
popf
jns
stos
pop
int
cs
jmp
icebp
ds
loop
ret
push
pop
mov
mov
outsl
shlb
aam
loop
mov
into
cli
and
aaa
out
sbb
rcll
push
mov
jbe
adc
mov
sub
mov
movsb
pop
jp
out
cs
jmp
mov
sub
inc
jo
inc
ss
cli
movsb
ja
aaa
ret
jnp
sbb
lock
inc
es
fmuls
push
jo
mov
lahf
rcrb
jge
fsubrl
xchg
jp
sbb
push
scas
mov
lock
jno
adc
jae
mov
pop
repnz
add
pop
popf
insl
les
add
int3
add
mov
adc
cwtl
adcl
sbb
insb
push
pop
lods
cmp
sbb
push
sti
shll
stc
push
sub
ror
arpl
add
sbb
jge
aam
lret
mov
stos
rorb
jb
cmpsb
dec
add
ljmp
scas
sbbl
xchg
adc
fimull
push
pop
aam
pop
je
adc
sub
ret
jb
or
dec
mov
mov
dec
pop
adc
xchg
fxam
jp
inc
or
repnz
shrb
repz
mov
jge
jne
xor
sbb
mov
outsl
popf
fs
fsub
sbb
push
add
sub
and
adc
insb
jmp
in
xchg
jbe
pop
mov
sahf
je
push
testb
seta
popf
je
xorl
loope
or
mov
mov
mov
inc
stos
mov
jno
xchg
fidivl
mov
sbb
sub
adc
jge
movsl
xor
or
mov
sbb
inc
aas
fiaddl
adc
xchg
sub
das
fisttpll
aad
imul
or
xchg
push
add
mov
stos
pop
mov
int3
repz
bound
das
push
xchg
sub
jg
mov
jmp
sbb
and
rorl
fcmovu
or
cmp
mov
arpl
xchg
jne
inc
repnz
xchg
sub
mov
dec
xchg
out
pushf
stos
test
cpuid
dec
adc
mov
xchg
in
sub
cmp
aas
scas
and
adc
dec
rol
lods
dec
fisubrl
ficompl
loop
insl
rcrl
stc
adc
pop
addr16
or
test
sbb
ljmp
xchg
iret
pop
mov
sub
mov
pop
adc
xchg
rorb
leave
mov
xor
pop
adc
cld
scas
out
cmp
in
pop
nop
pop
in
insb
imull
outsl
shll
outsl
jg
ret
aam
pushf
in
cmc
mov
mov
push
mov
insb
dec
inc
jle
arpl
mov
sarl
cmp
out
in
and
insb
in
into
push
adc
or
movsb
jne
jmp
push
jecxz
test
ret
aaa
mov
xchg
iret
sub
std
xchg
jmp
stos
rorl
ret
mov
repz
int
sbb
xor
ffree
dec
jmp
jno
add
leave
loopne
lret
xchg
and
js
int3
leave
dec
int
aas
and
sub
fs
movsb
add
push
jne
inc
jge
or
rol
mov
xor
jp
sbb
xchg
stos
sub
mov
jle
test
hlt
out
je
and
shr
mov
jbe
mov
lret
iret
push
dec
arpl
negl
repz
jns
cmp
dec
mov
xchg
mov
fucom
and
pop
pushf
out
out
push
scas
je
push
inc
xor
sub
ja
inc
test
fistl
pop
clc
sbb
js
sbb
jmp
and
std
fmul
sub
and
xor
fsubrs
xchg
adc
lds
push
pop
add
and
inc
cwtl
repnz
je
int
jno
rcrl
sub
cs
inc
xchg
push
outsb
adc
jae
gs
push
lock
fwait
lcall
jae
and
dec
lcall
and
sahf
jl
rcl
mulb
xchg
pop
cli
mov
push
cwtl
sub
call
mov
movsl
fstl
mov
xor
dec
outsl
inc
dec
lods
loope
inc
scas
jno
cltd
inc
jle
dec
in
mov
pop
sbb
jne
sbb
add
stc
out
pop
test
xor
dec
subl
icebp
pop
mov
xor
aas
cmp
inc
pop
andl
adc
loop
xchg
mov
pop
jle
pop
push
out
cli
push
outsl
push
testl
xor
mov
lock
push
mov
out
sbb
xor
jbe
hlt
fimull
sub
xchg
sub
and
dec
add
xchg
out
sbb
xor
cli
jo
sbb
push
insl
movsb
mov
mov
imul
test
pop
push
add
mov
cmc
lcall
mov
inc
sbb
sub
jmp
push
mov
pop
call
mov
dec
cmp
jb
xor
xor
test
inc
xchg
xchg
lret
repnz
push
xor
jp
push
scas
cmp
test
push
sbb
fildll
cmp
in
movsb
inc
jg
std
insb
loopne
mov
adc
les
xor
jg
or
and
mov
cmp
mov
push
inc
imul
sbb
clc
mov
in
stc
pop
mov
mov
cmc
movsb
sti
repnz
xchg
xchg
test
clc
adc
xchg
sub
pop
insl
cmp
pop
sub
xchg
cmpsl
mov
push
imul
add
add
mov
xlat
les
mov
daa
insb
mov
lods
in
movsb
xor
ss
insl
test
clc
or
dec
clc
fisttpl
aad
test
testb
add
inc
inc
les
cmpsb
add
xchg
sub
mov
inc
ljmp
jne
sub
faddl
pusha
repnz
sbb
js
inc
jns
cmpsb
std
add
adc
enter
ficoml
and
pop
shl
fcomps
push
jge
mov
rcrb
repz
inc
mov
dec
adc
add
or
sahf
jnp
add
loope
out
push
test
cmp
push
loop
loope
repz
sti
push
inc
xor
aad
mov
adc
push
xchg
shll
subl
add
into
clc
iret
and
jne
je
jecxz
sub
jo
push
hlt
out
pop
push
adc
in
popf
ljmp
mov
insb
push
cld
mov
gs
ja
sbb
dec
mov
sbb
dec
push
jnp
dec
popf
int3
xchg
ficoml
gs
lret
xor
shr
movsl
ljmp
sbb
add
xchg
jecxz
sahf
xchg
fsubrs
xlat
ret
cmp
and
jo
push
or
sub
jno
add
push
lret
aad
jno
jns
mov
and
xchg
lret
in
shlb
and
jno
push
push
mov
xor
ret
ret
movsl
mov
and
out
mov
mov
jge
in
xchg
pop
add
test
inc
ret
fsubrs
in
xchg
lods
sahf
dec
push
fisubrs
jo
pop
xor
sbb
dec
mov
lods
jmp
jb
rorb
mov
pop
inc
or
add
mov
aas
fimuls
lock
mov
mov
xor
test
adc
add
mov
data16
fstpl
jl
stos
daa
sbb
cmp
out
das
lcall
lock
xchg
pushf
out
pop
push
aas
xlat
test
cltd
clc
ja
push
das
dec
pop
push
pushf
jmp
add
movsl
and
dec
mov
push
dec
sub
fiaddl
mov
and
or
cmp
pop
inc
push
xchg
ret
push
in
mov
xor
add
mov
orb
mov
jae
cmp
pop
add
lea
jecxz
nop
lcall
dec
out
dec
pop
or
out
into
mov
mov
sub
sahf
ljmp
subl
lret
lcall
xchg
ds
sub
jbe
xchg
push
and
add
out
fidivrl
jae
test
sbb
sbb
cmp
pop
std
inc
outsl
xchg
adc
and
fmuls
fbld
mov
cld
pop
adc
mov
xor
stos
mov
out
and
cmp
and
fs
sbb
mov
lods
sub
shl
shrl
ret
lds
xchg
rcll
add
ljmp
sbb
test
cltd
push
or
sbb
cmpb
mov
mov
sub
add
dec
inc
mov
mov
loop
dec
scas
iret
shlb
and
sub
and
rolb
shl
jmpw
add
orb
cmp
cmp
pop
jmp
mov
ljmp
lock
and
test
div
push
sbb
das
imul
arpl
movsb
sti
pop
lahf
xor
fistps
es
fcmovu
inc
stos
test
push
rcrb
pushf
aaa
pushf
sub
testl
add
mov
pop
sub
sahf
adc
outsl
jmp
and
pop
lods
testl
adc
movsl
jne
iret
pop
ret
push
mov
or
mov
shl
jae,pn
addb
mov
outsl
add
dec
or
in
testb
jno
test
mov
ljmp
rclb
out
orl
icebp
mov
mov
daa
test
xor
sbb
mov
sti
add
push
mov
push
mov
cmp
and
fdivr
lahf
push
mov
sub
mov
mov
mov
out
jg
push
xchg
nop
out
movsl
js
mov
xor
mov
lret
pop
mov
xor
stos
cmp
add
fdivrl
pop
popf
jmp
mov
mov
mov
inc
mov
add
cli
movsl
push
in
push
mov
aad
les
inc
mov
mov
std
dec
mov
ss
bound
xor
imul
rol
pusha
hlt
fistps
cmpsb
xor
push
fistpll
jnp
pop
push
push
cmpl
jno
sbb
pop
mov
mov
pushf
cltd
mov
test
notb
push
push
mov
pusha
out
in
sub
add
das
pop
push
push
lahf
xchg
testb
lods
cmp
add
fidivrl
sub
out
xchg
pop
sub
cmp
fnsave
mov
sub
inc
lcall
or
lahf
jns
dec
sbb
lds
xor
mov
jnp
loop
out
stos
pop
movd
xchg
jecxz
into
mov
mov
ljmp
push
stos
xor
mov
es
pop
das
addr16
xchg
sbb
pusha
cmp
cmp
lahf
sub
cmp
and
push
pop
test
jl
in
xor
in
popf
fidivrl
xor
iret
test
iret
pusha
push
sarl
fistl
sub
hlt
push
sbb
mov
pop
mov
pop
xor
pop
test
pop
frstor
xor
in
and
pop
push
es
add
jl
rep
in
int3
mov
jbe
loop
xchg
add
push
je
pop
and
and
cmpsb
outsl
int
subl
dec
push
push
ja
inc
jp
test
call
inc
mov
mov
jo
add
jp
out
cmp
push
pop
inc
loopne
mov
or
jg
push
not
xchg
inc
ret
shrl
jb,pn
cmp
xchg
sbb
or
int3
cmpb
icebp
mov
and
push
and
test
lret
adc
inc
xor
addl
add
adc
or
jno
iret
lods
imul
clc
dec
inc
push
es
call
or
jl
leave
inc
sub
push
roll
movsl
cmpsb
push
lods
xchg
lret
cmp
popf
jno
pop
push
fwait
call
sub
jle
repz
jge
jns
xor
add
mov
jecxz
in
sbb
addr16
faddp
bound
inc
sub
in
mov
ljmp
call
cmp
sub
sbb
xchg
fwait
xorl
inc
addr16
cli
rclb
mov
icebp
jg
sub
paddb
ljmp
and
push
mov
mov
sti
and
mov
and
roll
mov
dec
cwtl
stos
mov
sarl
fisubrs
jge
movsl
scas
dec
dec
imul
adc
cmp
push
hlt
lea
mov
mov
push
mov
cmp
jbe
push
filds
or
jge
mov
sub
adc
in
jne
xchg
push
xor
movsb
fists
fiaddl
push
mov
rolb
or
xchg
jmp
aas
mov
fcomps
mov
outsb
in
inc
sarb
lods
push
pop
sub
and
in
jle
sub
shl
xchg
int3
flds
cmp
shlb
xlat
and
mov
daa
fs
add
cmp
jnp
add
pop
test
xor
mov
pop
sbb
jl
mov
and
ja
lcall
push
mov
cmpsb
cmp
cld
in
scas
inc
add
in
jne
inc
mov
fisubs
test
push
imul
jle
jg
imul
mov
sbb
push
or
xlat
mov
aad
mov
adc
arpl
mov
add
or
aaa
out
sub
or
outsb
pusha
push
insb
stos
les
add
dec
stc
daa
and
bnd
or
sarl
mov
notb
in
addl
add
loopne
test
lds
rcl
ljmp
adcl
call
mov
mov
and
and
add
scas
orl
rol
enter
xchg
faddl
outsl
push
add
jl
insl
cmp
adc
psubb
stos
rcrb
bound
call
cmp
or
jo
add
ja
scas
and
jmp
loope
dec
jns
jmp
in
dec
sbb
pop
xlat
jle
pop
dec
in
sub
lock
mov
setl
out
sub
jge
decl
loop
push
xor
rcl
mov
adc
arpl
xlat
push
mov
insb
hlt
out
jmp
bnd
cwtl
int3
fwait
jge
jp
jne
push
inc
push
daa
sbb
add
mov
je
mov
out
mov
aam
inc
add
xchg
mov
scas
aam
jae
mov
or
push
repz
pop
repnz
push
or
aaa
cmpsb
and
sub
stos
xor
push
lahf
test
lahf
jns
jmp
imul
jle
pop
dec
scas
das
and
aaa
jns
inc
insl
mov
jg
mov
fdivp
in
adc
dec
add
jecxz
ret
or
add
lahf
jmp
xchg
dec
xor
shll
push
es
pushf
mov
xor
ror
das
mov
sti
jno
add
sahf
aaa
lret
call
in
pop
and
fisttps
ja
sti
stos
data16
popa
inc
ljmp
mov
mov
and
sti
inc
stos
popa
xorl
xor
pop
popf
jle
mov
jl
sar
jmp
not
es
inc
sub
stos
mov
int
movzwl
pop
xor
loop
mov
add
adc
jmp
daa
and
xchg
sub
mov
scas
inc
out
fdivs
mov
mov
stc
jnp
mov
push
dec
test
jmp
and
pop
sar
test
cmp
loop
andb
pop
xchg
into
call
pop
push
mov
pusha
js
enter
fidivl
ss
xchg
int3
mov
cmp
xor
test
inc
push
mov
imul
mov
movsl
sub
mov
mov
push
adc
es
fnsave
repnz
xor
incb
xor
test
mov
rorb
jnp
push
mov
push
aad
dec
xor
xchg
sub
test
clc
mov
push
lods
dec
ja
ret
xchg
roll
pop
shrb
scas
out
pop
int
addr16
lcall
fwait
addr16
jecxz
adc
sbb
mov
adc
sbb
imul
outsb
xchg
js
rolb
add
pop
fstpt
popf
cmp
mov
or
cmpl
pushf
addr16
mov
into
pop
adc
mov
mull
mov
les
mov
ffree
jl
sbb
scas
fldz
jp
jmp
mov
aas
les
sbb
shll
std
pop
inc
iret
and
jne
mov
fsubl
std
sub
inc
daa
cmpsl
mov
enter
out
dec
jge
inc
mov
jns
out
outsb
fidivrs
inc
xchg
sub
arpl
push
xchg
aaa
mov
mov
nop
pop
xchg
dec
mul
in
xor
jge
ljmp
sbb
mov
adc
shlb
push
cltd
lods
adc
mull
jl
loopne
and
xchg
lret
mov
arpl
push
into
sub
jl
inc
sub
scas
jg
ret
test
cmp
cwtl
mov
rorl
rcll
adc
lods
cld
adc
pop
out
mov
aad
in
aaa
lods
test
orb
mov
jecxz
add
stos
fsubrp
xchg
mov
cmp
fistps
push
divb
mov
jns
sub
or
jns
rorb
cmp
xchg
aam
xchg
sarb
mov
xchg
insl
xor
sub
mov
je
jno
xchg
and
add
sub
and
adcb
cmp
sahf
mov
inc
and
aad
hlt
pusha
xchg
jg
movsb
fs
inc
cs
leave
sub
test
stos
lcall
push
loopne
sub
lcall
fisttpl
pop
and
pushf
out
scas
dec
aam
adc
sub
add
jb
insb
pop
mov
xchg
iret
lock
xchg
leave
xor
mov
push
mov
or
mov
nop
or
in
or
pop
test
stos
and
mov
sub
add
mov
cmp
pushf
aam
sub
in
in
fstpt
lea
xorps
daa
mov
ljmp
leave
mov
std
cli
mov
dec
xchg
ret
jg
mov
mov
out
dec
xchg
dec
test
add
dec
outsl
add
out
xchg
sti
addr16
call
test
cltd
lahf
dec
mov
dec
fmulp
xor
rorb
sahf
insb
xchg
jmp
cld
mov
movsl
mov
jge
call
out
sbb
lods
stc
push
mov
int3
jl
nop
loop
pop
jo
add
mov
mov
adc
jo
jb
into
aas
pop
ret
adc
mov
pop
dec
lds
pop
lahf
push
xor
dec
add
inc
cmp
cs
add
unpcklps
push
idivl
outsl
cmp
fisubs
xor
or
fsts
push
mov
testl
dec
insb
mov
inc
or
and
inc
test
xor
cltd
and
mov
daa
ljmp
cmp
aas
enter
and
adc
fists
inc
jmp
mov
pop
sarl
adc
jge
cld
inc
test
fcoml
and
stos
xchg
mov
fnstsw
push
pop
xor
les
insb
sti
in
xchg
adc
inc
xchg
adc
jne
movsb
mov
enter
push
mov
sbbb
or
jp
pop
xor
add
adc
push
lcall
fiadds
dec
mov
pop
xchg
adc
ret
lock
sbb
cmp
fwait
inc
iret
sarb
out
xchg
stos
xor
fwait
or
sbb
push
or
mov
shlb
lret
pusha
inc
mov
je
mov
into
adc
mov
pop
dec
dec
incl
stos
sub
and
js
out
and
mov
popl
jge
xor
and
add
out
cwtl
arpl
ljmp
aas
dec
movb
or
sub
ficoml
sub
adc
cwtl
mov
es
lock
stos
cwtl
fs
mov
xlat
outsl
inc
testl
fwait
roll
adc
sub
in
jge
cmp
and
sbb
cmp
adc
jle
push
aam
mov
jo
jmp
loopne
insb
mov
xchg
mov
or
cmp
jb
test
push
dec
pop
jbe
scas
cltd
mov
lcall
cli
mov
xlat
mov
adc
mov
ficoml
insb
lds
sbb
ret
sbb
push
pushaw
mov
mov
lret
movsl
pop
bound
cmc
arpl
or
ljmp
cmpsl
dec
sub
lcall
or
cmp
cli
adc
or
mov
mov
mov
iret
and
jecxz
rorl
ss
cmpsl
or
jb
enter
push
adc
jae
popa
xchg
les
imul
test
out
mov
jae
push
mov
frstor
or
ja
adc
inc
popf
inc
mov
stos
test
mov
sbb
and
sbb
bound
lcall
js
idivb
and
xchg
push
in
into
xor
dec
xor
or
dec
jge
imul
or
dec
xchg
jbe
imul
jae
bound
pop
sbb
mov
lcall
cmp
popa
jo
clc
push
jl
and
loop
push
addr16
cltd
mov
lods
cwtl
out
mov
adc
cmc
rorb
push
imul
cmpsl
enter
inc
push
es
dec
xchg
sub
rcll
cmpsl
and
push
jg
repz
sbb
xor
test
out
push
popf
dec
or
js
pop
scas
mov
rcrl
sahf
push
sub
mov
and
cmp
jne
adc
pop
lret
bound
popf
push
test
daa
push
push
shr
ret
enter
fsubrl
or
sbb
jns
sbb
cmp
xchg
push
fldcw
call
adc
leave
sarb
push
js
xor
mov
ror
push
pop
dec
push
mov
jge
in
in
nop
mov
xchg
aas
or
lret
fiaddl
repnz
add
xlat
fdivs
push
fwait
adc
dec
mov
jge
mov
jle
cmc
push
and
jae
in
jle
orl
push
pop
jp
pop
add
mov
mov
repz
dec
ret
mov
add
pop
int
rolb
aam
stos
inc
pop
and
push
add
ljmp
xor
or
outsb
push
loope
stos
mov
push
mov
sbb
rcr
add
and
mov
and
inc
cmpsb
imul
mov
lds
aam
adc
push
out
adc
aaa
cmp
popf
jl
dec
ja
jecxz
xor
in
jne
icebp
and
xor
movb
xchg
jl
fwait
lock
dec
or
shlb
lods
pop
in
lcall
test
mov
fcmovnu
nop
sarb
shrl
adc
add
lret
shl
push
pop
ret
xchg
fsubrl
dec
xchg
pushf
push
push
xor
jbe
xor
std
lahf
repnz
adc
scas
adc
in
mov
rclb
xor
mov
cmp
sbb
xor
test
cmc
cltd
dec
mov
adc
nop
imul
dec
fdiv
int
adc
jo
movb
dec
aaa
mov
mov
mov
dec
imul
nop
dec
and
inc
push
loop
cmpsl
xchg
sbb
aas
jne
jp
scas
iret
outsb
pushf
lds
mov
mov
lods
jno
into
add
jg
and
jle
cltd
lahf
test
dec
adc
stos
rcrb
adc
addr16
cmp
fwait
gs
jnp
push
das
jae
sahf
fucom
repz
ds
fisubs
mov
or
pop
add
rorl
sbb
pop
mov
add
xchg
mov
ret
out
orb
adc
stos
pop
leave
shlb
mov
sti
push
jp
lret
rclb
mov
cmc
xor
nop
mov
popa
addr16
je
cmp
xor
pop
xor
mov
shll
insl
pop
adc
jmp
lock
out
nop
adc
sub
pop
lcall
inc
mov
push
or
adc
pop
insl
inc
xor
push
lret
cli
or
inc
jo
ret
lods
adc
les
xor
scas
pop
data16
shlb
add
or
pop
mov
test
movsl
jmp
out
push
js
and
and
cs
push
or
jno
lods
mov
adc
xor
push
stos
mov
sbb
lds
adc
test
pop
cli
mov
fists
inc
mov
scas
xor
cmpsl
sub
iret
dec
jo
int3
sbb
xorl
cmp
in
int3
sbb
gs
inc
in
mov
and
inc
enter
mov
push
out
jl
and
cmpsl
decb
roll
lds
mov
imul
cmp
scas
andb
inc
in
int
test
xor
jmp
mov
mov
or
imull
into
cmp
sbb
mov
dec
in
pop
push
int
test
xchg
cmpsl
jno
and
rorl
xor
hlt
je
addr16
cmpl
test
or
jmp
bnd
cmp
aad
or
inc
lret
cmpsl
inc
xchg
idivb
outsb
fistpl
into
adc
leave
push
test
mov
sub
fs
popa
cmp
or
push
incl
les
pop
cli
iret
iret
adc
pop
fadds
lods
cwtl
outsl
test
out
jl
popf
cmp
sub
dec
dec
adcb
sti
outsb
inc
and
xlat
dec
mov
jnp
push
pop
mov
lock
jle
roll
adcb
xchg
mov
aaa
lods
notl
fs
jnp
dec
clc
mov
dec
movsl
shll
jl
jg
inc
cmp
cmpb
shl
push
lods
aam
aam
and
enter
loop
mov
jae
push
mov
mov
xchg
cltd
or
pusha
xchg
pop
fsts
sbb
jecxz
cmp
sub
jae
and
mov
sub
add
xor
mov
pop
mov
inc
shll
jmp
out
cmp
fcmovnu
loopne
mov
ja
pop
pop
push
cmp
push
add
movsb
xchg
jp
add
or
jmp
push
adc
jecxz
loop
out
dec
shrl
cwtl
dec
aam
faddp
loopne
sub
clc
fcmovnu
jbe
outsb
xchg
or
cmp
cmp
add
xorl
imull
xchg
inc
std
push
inc
mov
add
enter
or
adcb
insl
sbb
and
mov
adcb
sub
stos
inc
cli
mov
push
add
and
sbb
imul
rcrl
inc
inc
push
jecxz
scas
std
and
push
rcrb
int
cmpsl
jne
mov
test
fbld
lret
xchg
fnstcw
cltd
mov
xchg
add
mov
scas
cmp
data16
push
push
lds
mov
mov
pop
inc
jne
notb
inc
push
mov
call
dec
push
jecxz
add
pop
fcoms
lahf
cmp
fcoms
dec
rorl
test
sbb
lods
sub
push
lods
sbb
out
mov
int
ficoml
test
xchg
or
jmp
jp
dec
jno
sub
mov
je
loop
ficoml
pusha
inc
sarb
sbb
shll
pop
adc
aad
ret
fsubs
sahf
push
fsubp
mov
mov
cmpsl
sbbb
sub
test
xchg
push
or
cwtl
int3
cmc
dec
cmp
or
fstpt
test
mov
pop
repnz
in
xor
or
inc
mov
or
lods
jmp
mov
ljmp
push
xlat
dec
push
inc
mov
out
xlat
push
repnz
insl
scas
pushf
fldenv
push
add
fsub
fcomi
mov
bound
jecxz
popf
inc
add
jns
push
into
pop
out
pusha
scas
out
push
aas
mov
push
loopne
jmp
xchg
xorb
scas
loope
push
clc
xor
sub
or
pusha
adc
pop
dec
cmc
je
xchg
jge
push
mov
fiaddl
adc
lock
lea
pop
sbb
subb
inc
dec
xchg
fsubs
sbb
pusha
int3
inc
and
jno
mov
push
jo
imul
jb
call
rcl
push
sarb
int3
into
test
fwait
lods
push
or
test
or
loop
gs
jae
and
xchg
mov
add
sbb
jle
shlb
nop
into
pop
push
dec
cmp
inc
test
mov
push
sub
sbb
mov
xlat
mov
jg
adc
sbb
or
and
test
std
cmp
repz
pop
or
movsl
ss
xchg
xchg
jp
pushf
test
inc
pmaddwd
jbe
inc
sbb
mull
popf
addl
mov
fisubrs
xor
aam
ds
movsb
and
sub
shl
mov
fstpt
jae
nopl
jns
mov
adc
mov
or
loopne
xlat
ret
inc
ficomps
mov
sti
aad
outsb
mov
jns
outsb
mov
cli
mov
jge
aas
into
pushf
stc
out
jmp
mov
out
dec
sub
mov
add
nop
ljmp
imulb
mov
repnz
pusha
jne
mov
and
pop
push
add
cltd
imul
out
and
lods
pop
inc
sub
cmpsl
xor
cmp
push
sub
inc
lcall
add
mov
leave
ljmp
in
cli
call
stos
inc
mov
test
cmp
enter
gs
stos
jle
push
std
xor
xchg
and
adc
insl
enter
inc
cmpsb
sub
sar
mov
mov
mov
sub
or
pop
jp
outsl
mov
sub
or
inc
mov
jbe
inc
cmp
int
jb
loop
xchg
mov
dec
jnp
shl
sbb
inc
pop
sub
dec
xlat
sarb
jo
adc
fbstp
pop
push
fisubs
dec
dec
pop
mov
push
add
dec
dec
dec
mov
icebp
xor
push
sti
mov
jl
push
pop
inc
jle
mov
nop
insl
pop
fcmovbe
xor
notb
mov
adcb
cmpsb
inc
push
dec
inc
dec
inc
out
cmp
and
mov
leave
fsubrp
pop
and
jge
ffreep
in
mov
mov
sub
sbb
outsl
aad
sbb
dec
pop
and
mov
mov
push
fldl
dec
sbb
popa
jle
out
xchg
or
test
clc
inc
xchg
or
and
ljmp
mov
pop
xor
std
mov
push
jmp
mov
mov
mov
jle
jl
in
arpl
xor
add
mov
outsl
fscale
stos
or
sub
sarl
bound
fcmovne
ds
arpl
imul
repz
cmp
adc
cmp
cmp
dec
clc
add
xchg
shll
aaa
jne
sub
cltd
jne
xchg
mov
outsl
cmp
xor
data16
out
insl
daa
jb
pop
xor
sbb
sub
loopne
sub
push
loopne
ret
lret
push
dec
mov
and
jbe
mov
leave
jl
mov
inc
push
cs
mov
add
lods
mov
or
adc
and
jp
int3
inc
sbb
je
push
fadd
cmp
xor
pop
xchg
int
mov
cmpsb
lret
lret
mov
add
shrb
xor
add
cmpsl
cmp
jnp
jp
stos
int3
push
test
test
cmp
repz
add
sti
jbe
xchg
jno
or
mov
test
pop
push
jbe
mov
jmp
lcall
push
ja
jg
mov
call
jecxz
cmpsb
lret
lods
dec
jae
jb
or
jp
adc
stos
popf
inc
mov
mov
cwtl
fistpll
insb
outsb
int3
int3
std
clc
loope
stos
aas
aas
add
rolb
jne
fs
sbbb
xchg
out
pusha
enter
mov
cltd
test
scas
cltd
mov
mov
sbb
scas
sub
cmp
std
scas
and
adc
inc
outsb
push
cwtd
xchg
pop
pop
mov
repz
loope
push
dec
les
sbbl
inc
mov
repnz
jo
in
jmp
pushf
sbb
jecxz
jnp
movsl
call
ja
fistpll
aaa
jp
into
pop
sub
cmp
rolb
scas
ffreep
outsl
cltd
add
fidivrs
xchg
shll
and
popf
movsb
icebp
push
insl
push
sbb
fstl
add
mov
cmp
jo
sti
gs
dec
push
jo,pt
insb
mov
adc
je
pop
ftst
es
clc
mov
xchg
push
push
mov
lret
js
out
aas
push
push
pop
outsl
out
adcb
pop
xchg
pop
in
pop
cmp
fdivs
test
pop
imul
ljmp
inc
sbb
sti
mov
fisubs
xor
int3
lcall
imul
sub
pop
das
xchg
pop
into
mov
sbb
mov
fidivs
cmp
sarl
shrb
adc
add
clc
push
mov
insl
in
mov
cmpsb
cmp
lock
test
aam
ret
cwtl
cld
insb
mov
mov
mov
jg
mov
mov
sub
ds
or
es
mov
add
mov
inc
mov
and
jbe
lahf
dec
add
int
fdiv
mov
push
cmpsl
adc
push
mov
fnstcw
xchg
jg
aas
ret
dec
mov
pop
dec
dec
push
shlb
testb
lret
mov
rclb
and
push
inc
fs
lds
or
sbb
jo
test
sub
mulb
in
insl
sti
dec
sub
adc
mov
into
rcrb
mov
lret
rol
shll
imul
mov
mov
js
add
lds
in
insb
jbe
das
mov
mov
jp
addr16
lcall
inc
mov
mov
lock
das
sahf
inc
rcl
pop
mov
out
mov
pop
dec
mov
push
sbb
dec
out
popf
gs
shr
outsl
nop
std
stc
sub
inc
cmp
inc
addr16
and
pop
pop
push
das
repz
sub
cmc
cmp
cmpsb
fadd
xor
mov
je
jae
sub
cmp
aas
or
loop
mov
fs
dec
stos
mov
push
test
shrb
push
push
fldl2t
xchg
add
stc
mov
int
test
xor
out
ficoms
ljmp
mov
or
mov
sar
jmp
mov
mov
test
push
dec
mov
popf
pop
xchg
xchg
jb
inc
sub
scas
xchg
jge
call
shll
cmp
mov
dec
loop
add
test
or
cwtl
fldl
cmpsb
push
cmp
test
movsl
shll
lock
lahf
jmp
ss
or
aam
dec
mov
jp
or
js
push
popf
int3
cwtl
dec
mov
or
pop
mov
lock
aas
in
mov
dec
push
or
add
addl
shrb
add
mov
rcll
cltd
add
push
mov
movsl
dec
xlat
and
or
lcall
out
rolb
sahf
repnz
sahf
mov
jge,pt
mov
int
mov
and
push
jp
ljmp
push
and
mov
push
insb
sahf
out
aas
test
and
arpl
mov
sub
dec
not
cmp
or
insl
clc
adc
xchg
mov
stos
jo
xor
or
lods
es
and
add
sti
adc
dec
or
shl
mov
jle
aas
jo
test
inc
mov
pop
inc
or
dec
xchg
in
pop
icebp
adc
das
data16
insl
data16
dec
icebp
int3
xor
rcll
ljmp
mov
jbe
notl
push
out
jl
movsb
rclb
sahf
jo
fmuls
das
fimull
pusha
add
test
cwtl
push
aam
cmp
fcompl
add
gs
fwait
dec
jnp
add
and
push
notl
cmpsl
scas
xchg
sub
es
cmc
rcrl
rorb
je
adc
mov
mov
mov
in
xor
cmp
inc
add
stos
es
sahf
pop
lcall
mov
ret
jo
outsb
jl
sub
add
les
int
fistpll
sub
fldl
or
std
mov
pushf
xlat
adc
decb
sbbl
cwtl
int
sbb
sbb
push
fidivrs
or
mov
adc
adc
scas
add
or
cs
ss
iret
cli
ss
lret
push
mull
mov
in
mov
ja
or
push
cmp
inc
jbe
cs
popf
lea
pop
aas
cmp
ds
insl
pusha
pop
testl
hlt
ljmp
mov
xor
test
shlb
divb
xchg
cmp
mov
xchg
dec
mov
test
mov
mov
out
cmp
inc
test
clc
inc
xor
loop
sbb
fisubrl
test
test
sub
jo
lea
jle
pop
pop
push
adc
loop
aas
add
and
imul
jl
and
push
mov
and
gs
inc
int3
in
flds
push
sbb
sbb
xor
fisubs
and
mov
dec
add
hlt
mov
jb
testb
lret
mov
xchg
sarl
xor
nop
xor
dec
ds
lret
or
fwait
push
mov
mov
pop
fldcw
out
mov
push
jne
ficoml
xchg
out
jp
xchg
mov
mov
jecxz
faddl
nop
aad
dec
rcrl
xor
fidivs
je
dec
mov
adc
mulb
pop
fsubs
into
repnz
xor
ffree
ret
push
sub
xlat
push
fisttpl
test
cmp
add
and
xchg
mov
loope
sbb
or
arpl
cmpsb
or
mov
sub
mov
scas
xchg
inc
in
adc
aaa
xchg
jbe
test
popa
mov
dec
xor
in
dec
sbb
sbb
into
lret
stc
mov
incb
cmc
add
ja
jg
push
dec
in
das
adc
inc
leave
je
loopne
cwtl
fs
or
inc
stos
mov
roll
cli
jmp
xor
popa
fs
cld
push
pop
nop
xor
mov
out
jg
test
cmpsl
and
jae
adc
roll
daa
js
sbb
and
aad
xor
cltd
pop
incb
rcr
xchg
jne
data16
loope
jl
test
dec
xchg
xchg
aam
mov
xchg
lds
stos
pop
or
jle
xchg
cld
xchg
movsl
push
lods
mov
mov
or
or
repnz
movl
das
mov
mov
dec
push
in
imul
mov
cmp
mov
mov
clc
arpl
adc
loopne
aam
push
pusha
xchg
dec
int3
adc
push
int
jno
push
pop
mov
ljmp
js
mov
sbb
xchg
mov
mov
dec
cmp
xchg
mov
loop
pop
roll
dec
leave
insb
xchg
rcll
loopne
das
sub
cs
dec
lea
vinsertps
inc
pop
or
sbb
ret
mov
xor
mov
adcl
xchg
lea
in
cmp
ss
sbb
ljmp
inc
lahf
inc
and
inc
add
jecxz
jbe
adcb
mov
and
fsubp
dec
stc
pusha
sub
mov
sub
jns
mov
sarl
mov
push
adc
mov
pop
test
rorb
cwtl
ret
dec
jecxz
mul
cmc
repnz
or
call
test
jl
lcall
mov
mov
scas
cltd
cmp
lds
call
add
lock
in
adc
loope
sti
jnp
push
or
pop
mov
stos
push
sar
pushl
sub
icebp
cmpsl
cmp
fiaddl
jb
test
popa
out
add
les
mov
cmc
out
bound
gs
mov
arpl
cmp
fadds
pushf
aam
aaa
mov
into
push
pop
jl
jge
lret
lcall
mov
dec
enter
sbb
loop
inc
out
dec
pop
jo
fsubl
imul
xor
fnstcw
cmp
ja
jnp
or
bound
addl
mov
js
xor
add
gs
push
sbb
pop
js
xor
cmp
mov
and
jb
repnz
lret
xchg
stos
cmp
out
cmpsb
decl
scas
gs
jmp
inc
sub
fldt
push
sub
sarb
mov
sub
das
add
ja
jno
mov
cmp
inc
push
jp
jl
dec
aaa
icebp
mov
sub
leave
xchg
jl
sbb
add
push
cmp
sub
mov
pop
cmp
xchg
sub
mov
mov
in
sub
loop
dec
push
jo
out
cltd
imul
les
jno
in
mov
push
stos
cmp
addb
pop
xchg
shrl
jae
cmp
lret
pop
add
mov
and
inc
and
xchg
in
popa
rorl
ror
mov
es
daa
push
daa
fwait
pop
xchg
pop
pop
dec
rol
jle
jg
punpcklbw
add
pop
addl
das
xor
jnp
jne
icebp
push
jbe
stos
decb
jle
arpl
stos
sti
xchg
mov
xchg
xchg
and
sub
mov
jo
pop
fneni(8087
ficoms
pop
sub
icebp
pop
imul
xchg
aas
movsl
int3
sahf
in
roll
ds
dec
stos
arpl
cmpb
and
jb
addr16
into
stc
dec
mov
dec
leave
pop
add
adc
sbb
lret
sub
or
pop
out
mov
jae
sub
dec
xlat
xchg
mul
add
fistps
int
xor
mov
and
pop
and
mov
mov
cmp
lods
inc
lea
cld
sbbb
cs
xchg
popa
adc
mov
inc
outsl
loop
hlt
test
dec
xor
sub
loope
jmp
ret
out
push
lcall
cmpsb
or
lcall
pushf
mov
xor
fbstp
call
cmp
or
mov
aas
ljmp
sbb
cmc
xor
fxch
xlat
pop
mov
mov
mov
xor
jmp
mov
xchg
and
fcoml
mov
xor
aam
mov
lahf
adc
aam
clc
inc
out
mov
xchg
adcl
cmpsl
mov
aad
cld
and
cmp
mov
fcoml
out
add
call
jge
mov
cld
dec
pushf
pop
outsb
call
stos
adc
mov
ret
scas
fs
push
xlat
das
xor
add
nop
inc
in
jnp
dec
mov
ret
dec
add
shlb
mov
cmpsb
andl
lock
or
test
es
push
lret
cli
dec
and
push
push
adc
xlat
filds
clc
fidivs
fcomps
es
lret
lock
or
cld
stos
call
in
nop
jae
cmpsl
pop
je
scas
iret
adc
movsl
dec
sbb
divb
lret
je
out
sbb
dec
roll
or
imul
lods
jnp
or
stos
mov
ljmp
jge
and
jg
inc
jae
mov
rclb
inc
inc
addr16
cmpsl
fstps
push
mov
and
rolb
pop
xchg
arpl
pop
sub
sub
xor
lods
add
or
jl
bound
test
rcll
mov
incb
imul
push
xor
test
cmpsl
out
clc
stos
pop
mov
aaa
and
movsl
xchg
xor
mov
subb
ret
cld
addb
jns
inc
xor
scas
xchg
dec
sti
bound
push
mov
inc
dec
jecxz
mov
in
cwtl
sbb
jne
subl
into
std
scas
ret
aam
and
lret
sbb
mov
notl
xchg
xchg
jg
xor
xchg
push
daa
es
pop
clc
push
inc
fwait
add
jle
sub
je
jecxz
push
cmpsb
or
hlt
xchg
lods
add
stos
call
cli
jmp
mov
add
push
jl
jb
repz
adc
divl
in
lahf
fs
push
jp
movsl
shrl
stos
ss
das
pushf
hlt
pop
or
inc
sub
xor
adc
test
jmp
adc
clc
inc
or
adc
out
fstl
adc
push
cmp
rclb
daa
popf
pop
dec
dec
xlat
cmpsb
mov
cmpsl
inc
push
enter
lock
mov
mov
jno
mov
lds
gs
jg
fisubrl
adc
in
push
xchg
nop
out
loope
pop
movsl
mov
fstp
in
and
pop
mov
mov
lahf
push
dec
push
and
leave
xchg
cld
iret
ret
or
fldl
adc
fwait
lds
dec
mov
mov
int3
scas
jo
cmpb
dec
and
dec
jle
mov
dec
xlat
gs
sahf
aam
push
mov
xchg
lock
mov
xor
jle
xor
jecxz
ret
xor
inc
xchg
mov
fsubr
outsb
rclb
leave
jmp
mov
xchg
dec
cmp
sub
iret
add
or
jnp
jl
das
test
and
and
imul
ds
cmp
xor
outsb
cmp
mov
inc
inc
movsb
adc
pop
xchg
or
sbb
dec
add
pop
xchg
jnp
or
fimull
bound
mov
inc
mov
dec
pop
mov
dec
sub
sub
inc
out
rcl
adc
cmp
mov
mov
xor
les
das
inc
sub
sbb
jp
shll
jo
cs
dec
cltd
das
cmp
mov
push
ss
pusha
or
mov
test
mov
sub
xchg
xchg
inc
in
dec
mov
mov
mov
xor
mov
pop
and
movd
cs
mov
ljmp
cmp
test
add
lahf
sahf
mov
stos
xor
mov
sub
fadd
sbb
lds
mov
or
inc
xlat
pop
xor
push
mov
adc
movsb
out
fisubrl
mov
daa
adc
ds
dec
je
rcrb
push
pop
push
adcl
pop
jno
lock
xchg
pushf
shrl
add
jns
clc
adc
fcmovbe
sbb
cs
adc
out
mov
xchg
inc
fnstenv
mov
mov
sbb
push
bound
push
stos
sbb
into
cmp
push
into
out
jl
hlt
pusha
jns
push
xchg
arpl
mov
repz
in
dec
test
mov
mov
push
sbb
jns
std
mulb
frstor
xchg
push
push
imul
add
fdivr
lds
movsl
or
out
jae
in
jp
mov
sub
mov
mov
je
jno
pushf
jb
xlat
into
dec
aaa
mov
out
xchg
jge
mov
test
hlt
sahf
jo
movsl
xchg
dec
mov
push
cmp
roll
fidivl
push
out
in
dec
test
bound
mov
jo
pop
or
sar
add
outsb
cmp
mov
cmp
jno
ret
or
imul
stc
cmp
cs
jmp
js
loopne
jle
outsb
mov
inc
xchg
and
into
inc
stos
xchg
lret
push
in
cli
push
or
push
das
pop
jge
cli
cmp
test
cld
outsb
pushf
cmp
jno
out
mov
jecxz
adc
repz
cmpsb
sbb
inc
push
cmpsl
jbe
add
add
mull
fwait
mov
stc
mov
xchg
sub
jmp
out
mov
rorl
pop
add
adc
cltd
mov
pushf
fdivs
push
loopne
sub
adc
and
jno
cmp
gs
arpl
loope
sti
jne
es
sub
sub
call
movsb
inc
das
fimull
rcrb
aam
xchg
hlt
or
or
pop
pop
mov
rcr
push
stos
arpl
aaa
popa
mov
xchg
data16
cmp
jno
jb
sub
cmc
out
adc
pop
es
bound
loope
popa
jecxz
cmp
mov
js
add
adc
leave
fwait
add
pop
rcll
out
xchg
loop
in
mov
xor
xchg
pushf
testb
push
enter
inc
cwtl
inc
fsubr
dec
pushf
jo
in
jo
imul
mov
enter
lahf
push
adc
in
xor
mov
sub
add
mov
je
adc
pop
scas
inc
mov
cmp
pusha
in
test
dec
fildll
repz
pop
or
xchg
and
nop
push
pop
pop
loopne
jge
aaa
lahf
loop
and
incl
arpl
movsb
dec
das
ss
xchg
fwait
rolb
dec
jecxz
cwtl
jge
mov
and
subl
loope
dec
inc
stos
aad
out
sub
adc
sbb
in
jge
add
fisttpll
cmpl
xor
out
into
pop
mov
and
insl
insb
mov
dec
rcll
jbe
inc
dec
push
push
mov
flds
call
mov
iret
push
loop
subb
orl
add
mov
fdivl
jg
andl
outsl
mov
mov
mov
and
int3
jge
or
clc
test
clc
sahf
mov
repz
divb
lds
push
outsl
ret
jmp
pop
pop
movb
cmc
xchg
aaa
jg
inc
mov
mov
cmpsb
push
sub
es
in
pusha
cmpsl
outsb
push
sti
fldt
jg
cmpsb
cld
xor
mov
das
lea
pop
and
jb
xor
insl
dec
xor
les
in
xchg
cmc
pop
push
sub
divb
xchg
bound
dec
pop
cmp
add
cltd
mov
mov
cli
jp
inc
mov
cs
rep
add
or
test
dec
outsb
sub
stos
mov
dec
lods
stc
mov
pop
lea
xor
mov
and
lret
adc
push
les
pop
sub
icebp
pushf
je
scas
push
pushl
stos
mov
jae,pt
push
inc
lock
sbb
sbb
mov
jmp
or
pop
adc
cmpsb
repnz
std
add
push
int
test
aaa
hlt
in
mov
jae
int3
mov
in
and
xchg
push
scas
pop
dec
xor
jmp
ret
cs
push
negl
cmpsl
cmp
inc
cli
push
mov
sbb
lahf
dec
adc
shlb
sub
or
adc
sbb
lock
push
or
jg
in
mov
pop
clc
sub
mov
stos
xchg
cmp
flds
pushf
sub
pop
insb
inc
mov
dec
sub
outsb
nop
idivb
inc
movsb
insb
insl
jbe
xchg
push
xchg
lret
jecxz
adc
mov
std
es
or
mov
mov
mov
adc
push
xchg
or
mov
out
push
sti
inc
rep
in
jmp
fdivl
icebp
cwtl
inc
notl
mov
and
dec
adc
dec
jbe
cmp
mov
ljmp
jmp
jge
mov
dec
add
mov
xchg
mov
movb
adc
nop
mov
das
fcoms
imul
mov
mov
scas
ljmp
mov
loopne
and
add
dec
xchg
in
inc
cmp
ret
lods
movsl
push
arpl
orb
push
push
mov
sbb
cwtl
int3
popf
add
into
mov
add
adc
iret
dec
add
or
icebp
jne
inc
mov
sbb
les
lods
mov
xor
mov
scas
xor
xor
mov
sub
dec
in
jle,pt
mov
andl
mov
outsl
pop
lret
jno
inc
inc
mov
movsl
shrb
dec
hlt
pusha
popf
outsl
addr16
in
mov
pushf
scas
push
nop
icebp
xchg
addr16
sbb
pushf
ss
cmpsl
outsl
shlb
out
sub
adc
mov
jne
call
jge
ja
jno
push
and
sbb
dec
push
cmp
mov
decb
adc
push
fs
sub
mov
cmp
test
and
cmc
lock
ljmp
lods
pop
jb
pop
mov
push
mov
repz
cmp
lods
xchg
mov
and
pop
cwtl
stos
rorb
pop
xchg
adc
push
int3
out
xchg
xchg
shr
jl
mov
cld
adc
cld
add
adc
movsb
lcall
arpl
rcr
movsl
fdivrs
jo
or
imul
mov
lret
cs
push
sbb
sub
shl
jl
cs
fs
fdivr
cmp
jno
xor
lea
jne
or
mov
push
shld
pop
out
enter
jb
xor
adc
and
test
mov
jecxz
in
xchg
xchg
fsincos
push
cmpl
subb
int3
repz
add
jmp
cmp
out
and
mov
inc
inc
addr16
loop
ret
inc
cli
int
xchg
or
sbb
dec
xchg
inc
cmp
mov
cmp
out
push
mov
fistps
repz
xorb
adc
stc
sti
enter
in
push
in
enter
or
xchg
add
mov
adc
mov
js
aas
fdivr
dec
jle
cwtl
ds
mov
push
mov
leave
aaa
jnp
daa
lcall
or
decl
jg
push
aam
pop
ljmp
sarl
aaa
aas
test
jl
subps
pop
out
jle
jno
sbb
call
add
cmp
push
cltd
add
sub
imul
mov
in
jl
push
movsl
ds
daa
push
js
cli
dec
aad
add
rorl
or
lea
daa
sub
jp
in
mov
mov
out
rcrb
inc
xlat
pop
sub
add
cmpsb
push
subl
adc
xor
or
add
pop
jno
mov
inc
fiadds
mov
lret
xchg
cmp
test
nop
sub
push
cmp
sub
push
in
mov
pusha
bound
lret
add
les
mov
cmp
push
daa
shrb
xchg
mov
push
xchg
mov
adc
mov
mov
xor
iret
add
mov
add
and
pop
jae
pop
or
sbb
xor
inc
popa
out
cli
fcompl
aas
jne
pop
push
int3
inc
jp
adc
inc
fwait
mov
xchg
mov
cltd
cld
je
xchg
jne
rcll
and
adc
inc
add
ljmp
cwtl
add
mov
imul
jge
lea
cmp
xchg
addr16
mov
stos
insl
fcmovnb
out
inc
test
out
lea
add
mov
add
call
bnd
sub
xchg
test
lds
inc
cltd
stos
mov
cmp
lods
dec
cmpsb
lods
jp
testb
jl
fwait
mov
clc
popa
and
std
dec
out
dec
mov
xlat
repnz
in
push
adc
pop
ss
mov
iret
jnp
jo
mov
lea
sahf
cmpl
movsb
mov
mov
sbb
push
pop
int
and
lret
fs
sub
lcall
rcll
cmp
mov
dec
sub
push
movsb
inc
xchg
cmove
call
add
adc
or
push
or
pop
addr16
mov
mov
repnz
mov
aam
mov
push
xor
or
cld
mov
ret
xor
dec
jmp
hlt
mov
mov
subb
add
insl
lods
xor
jo
dec
daa
pop
adc
pop
mov
int3
dec
sti
jo
roll
sub
rcr
push
mov
adc
mov
in
das
loopne
and
daa
push
sahf
lcall
jb
lcall
or
idivl
repnz
mov
rcrl
cld
or
mov
dec
cmp
lods
adc
sbb
int
pushf
test
push
xor
scas
mov
rcll
push
imul
sbb
push
dec
aad
repz
enter
into
clc
mov
mov
push
fwait
and
ss
mov
es
cmp
sub
idivl
push
leave
and
out
inc
xor
dec
call
mov
xchg
pop
pushf
xchg
inc
dec
jnp
jl
xlat
add
sub
lret
mov
mov
in
out
adc
adc
arpl
adc
dec
gs
cmp
or
and
repz
sbb
popa
mov
fs
adc
outsl
cmp
dec
and
mov
bound
mov
sbb
mov
cwtl
xor
mov
test
dec
popf
std
add
call
sbb
popa
dec
push
popa
mov
and
pop
add
int
dec
nop
sahf
sub
jecxz
sub
fsts
enter
ja
mov
sarl
adc
int3
adc
addr16
shlb
mov
push
sbb
lret
xchg
in
sarl
cld
mov
in
addb
insl
push
sbb
out
imul
jbe
fcmovu
fnstcw
mov
push
lods
js
pop
sahf
divl
fwait
bound
jnp
jnp
test
jle
in
mov
dec
push
imul
rol
mov
filds
pop
inc
mov
cmp
fsubrl
imul
push
sub
out
aas
pop
cmpsb
lock
inc
dec
mov
rcll
arpl
hlt
xchg
cvtps2pd
adc
mov
push
shrl
xchg
pop
in
movsl
sbb
mov
push
sbb
cmp
out
popf
xor
stc
inc
sbb
inc
mov
iretw
xchg
sbb
push
xchg
jle
sub
ret
jp,pn
notb
enter
int
mov
leave
mov
fstl
mov
addr16
inc
jns
aaa
out
push
movsl
add
addl
dec
and
rorl
push
inc
pop
cmp
sub
jnp
fsubrs
push
addr16
cmp
movsb
jbe
in
or
out
inc
dec
inc
push
xchg
inc
dec
adc
ret
add
xchg
jb
dec
jae
jo
xchg
push
out
xor
fs
iret
dec
xchg
xchg
push
dec
sbb
mov
addb
addr16
cmp
adc
hlt
cmpsb
sbb
cmpsb
sbb
and
sub
sbb
pop
add
stos
mov
jb
pop
sub
xchg
inc
pushf
es
sub
lods
jnp
js
imull
loope
jbe
vmovsldup
jnp
push
xlat
adc
mov
sar
out
push
jbe
pop
add
scas
add
inc
insl
in
mov
inc
mov
addr16
mov
lcall
daa
dec
xchg
test
imul
inc
or
stc
or
mov
leave
sti
das
orl
sbb
and
mov
ret
xor
dec
pop
mov
pop
orl
fdivrs
mov
mov
gs
xor
sbb
stos
mov
push
in
mov
pop
mov
inc
sbb
stc
movsb
outsb
idivl
aad
cld
xor
test
xor
inc
bound
xor
fs
sbb
jecxz
cld
lods
lea
sbb
cmp
shlb
jp
es
loop
fdecstp
loopne
std
xchg
push
loopne
gs
inc
push
push
out
dec
sbb
pop
dec
lds
cmp
sbbl
sub
mov
pop
icebp
mov
or
mov
mov
jp
jnp
push
sbb
mov
jno
mov
fmull
push
jge
stc
insl
insl
jmp
mov
sti
andl
int
lret
inc
sbb
jg
push
mov
sti
je
mov
mov
psrld
mov
push
sub
add
out
xchg
data16
in
jp
cmp
push
fsubs
inc
lahf
movlhps
xchg
hlt
out
cmp
cmp
lds
lcall
hlt
pop
jl
mov
jle
fisubs
daa
sub
mov
cld
xchg
push
lret
in
imul
xchg
mov
push
pop
rcrl
and
ror
lahf
xchg
roll
dec
jl
lcall
mov
je
push
sub
stc
adc
cltd
and
sahf
fs
xorb
test
add
dec
in
xlat
fnsave
or
push
cmpsb
adc
and
movsl
cmp
scas
loop
adc
fiadds
leave
sbb
cmp
iret
cmp
mov
mov
insb
cmpsb
int
mov
or
bnd
mov
stos
sub
lahf
mov
leave
addl
xor
sbb
mov
sub
leave
std
pop
lret
lea
std
aam
or
mov
pusha
xchg
cwtl
push
mov
call
ficoml
stc
pop
mov
cltd
inc
jns
ljmp
lock
js
or
shr
push
je
mov
xchg
mov
push
xor
repz
mov
pop
mov
and
sbbb
pop
fisubl
mov
lret
push
jge
jle
dec
and
hlt
mov
add
jae
xchg
jl
fldcw
xor
inc
lods
jmp
and
nop
into
addr16
sbb
rcll
push
xchg
pop
les
pop
loope
pop
xor
push
lods
or
lock
ret
and
scas
cmp
lret
fisubl
insl
sbb
into
icebp
scas
subl
add
movb
inc
jge
adc
out
fisttpl
pop
xlat
test
shlb
add
sbb
inc
loopne
insl
add
and
arpl
mov
aad
add
daa
xchg
sbb
jns
pop
js
fidivrs
mov
testl
in
cs
sbb
ja
jmp
mov
bnd
xchg
mov
or
aaa
mov
jecxz
ret
stos
mov
pushf
cmpsl
and
and
push
or
cli
outsb
push
outsl
xchg
test
imul
mov
mov
scas
push
test
bound
lods
cmpsb
aaa
mov
sbb
inc
xor
jo
xchg
and
xchg
outsb
dec
xchg
jae
mov
cmp
icebp
cmp
ficoms
sti
dec
xor
sti
or
xor
ficompl
in
adc
aaa
mov
arpl
adc
sub
addr16
push
and
icebp
out
mov
popf
in
stos
inc
and
sub
outsb
loop
jle
cmp
sbb
loopne
daa
lahf
repz
mov
mov
and
lds
rcll
dec
lret
testb
adc
xor
and
jnp
les
movsl
cltd
jns
push
sub
push
and
pop
cwtl
mov
xchg
fcoms
imul
aas
testb
lock
iret
and
adc
testb
or
inc
shlb
mov
pop
add
mov
adc
push
or
pop
xor
sbb
xchg
xchg
das
fs
divb
xchg
out
test
int3
adc
and
les
pop
subb
lahf
rclb
popf
imul
pop
dec
movsl
xor
pop
mov
mov
imul
inc
in
fmulp
pop
negb
mov
sti
cmc
jns
xchg
shll
jb
mov
xor
add
movsb
pop
push
icebp
and
jne
scas
xchg
fdivl
rolb
inc
movsl
inc
jb
out
sbb
jg
mov
push
cmp
ret
les
dec
mov
test
and
lcall
mov
shll
repz
sub
sbb
and
call
sarb
test
insl
addr16
sub
xor
xchg
dec
push
push
stos
call
stc
out
mov
jae
insl
push
mov
push
test
outsl
sub
dec
cmp
insb
insb
inc
mov
jecxz
ds
xchg
cmp
ret
int3
mov
xor
lods
int3
sti
je
leave
cli
jg
cmp
or
out
int
loop
inc
cmp
or
push
cwtl
pop
pop
mov
xchg
daa
ret
test
and
lcall
inc
adcb
jmp
in
pop
cmpsl
and
ja
out
stc
jle
dec
data16
enter
xor
sahf
add
push
aas
aam
popf
loopne
aad
into
mov
lods
pop
dec
add
cli
lea
cmpsb
lret
mov
push
pop
aaa
cwtl
loop
xchg
mov
mov
adc
add
push
adc
sub
push
ret
gs
fists
ret
pop
pop
xchg
out
enter
in
das
imul
sub
lahf
outsb
out
pop
jl
inc
insb
lods
or
aam
fldl
inc
mov
popa
in
cmp
addb
mov
fisubl
jmp
adc
out
jno
cmc
es
rol
xchg
punpckhwd
dec
inc
or
sbb
mov
jnp
ret
imul
sbb
fidivs
cmp
js
test
cld
jns
pop
sub
xchg
xor
lds
and
ficompl
sub
stos
loopne
mov
not
mov
xchg
lea
sub
aas
ja
xor
sub
jl
push
or
test
xchg
cmp
loope
stos
or
adc
test
cmp
mov
or
fists
cli
push
imul
xor
rcrl
pop
and
add
subl
mov
push
or
movzbl
mov
in
inc
push
inc
loop
xor
ja
xor
add
mov
xor
inc
push
push
ds
pushf
fs
in
pusha
or
jmp
dec
mov
fwait
outsl
fwait
je
subb
jns
mov
cmpsb
mov
iret
and
inc
sbbb
jl
pop
clc
xchg
sub
in
es
jo
in
subl
cmp
mov
aam
scas
sbb
or
ret
aam
in
mov
movsbl
pop
jae
fdiv
xchg
ror
insl
unpckhps
push
mov
sarl
sbb
xorb
lea
mov
outsl
sahf
jmp
xchg
rol
jecxz
mov
pop
mov
or
inc
jae
mov
pop
cmpsb
je
cltd
jecxz
mov
add
mov
adc
jg
push
push
add
icebp
cmp
int3
mov
dec
lods
and
jecxz
push
pop
lcall
sub
or
in
pop
adc
std
jns
inc
cmp
incl
lea
mov
push
jmp
ficoml
sub
sarb
inc
mov
in
incb
sub
sbb
sub
mov
push
sahf
addr16
and
movsb
add
in
mov
xchg
adc
push
movsl
mov
imul
call
inc
xor
cmpsl
cmp
push
sbb
test
ret
pop
inc
xchg
cmc
test
leave
in
fwait
add
mov
ds
aad
inc
xlat
daa
sbb
stos
or
and
or
xchg
lahf
ffreep
gs
mov
aad
xor
aad
xchg
cmpb
add
test
sti
cwtl
aam
mov
add
mov
jns
leave
int
mov
ficompl
nop
loope
in
repnz
pop
jno
cmpsl
lahf
mov
gs
cs
sbb
rcrb
sub
js
test
sarl
cmp
and
jecxz
mov
mov
movsl
lods
clc
mov
adc
les
add
add
pop
sub
sub
out
xchg
fsubs
movsl
cmp
push
jo
ljmp
out
pop
into
icebp
jbe
test
add
loopne
adc
dec
sub
inc
sti
pusha
mov
cmp
hlt
addb
mulb
sbb
test
xchg
clc
scas
mov
dec
mov
lock
cmp
popf
aam
int3
out
roll
adc
dec
mov
subl
adc
xchg
cmpsb
lret
mov
inc
cmpsb
jne
push
lret
gs
jno
out
and
hlt
add
lock
xchg
jb
mov
dec
sub
adc
inc
into
jb
mov
xorl
fisubrl
lahf
inc
sti
in
xchg
xchg
call
add
mov
fldln2
aaa
das
mov
mov
das
sbb
je
bound
xor
mov
divl
and
popl
popa
pop
mov
fs
xchg
push
je
cmp
rorl
push
ret
mov
jmp
jne
rcrb
or
out
pop
inc
mov
cltd
nop
jmp
mov
cmc
lret
insb
mov
inc
and
or
and
adc
sarb
adc
xchg
cmp
xchg
sti
adc
mull
sbb
dec
push
mov
adc
pop
xor
mov
stos
jbe
push
mov
or
ret
and
roll
and
inc
pusha
outsl
cs
out
mov
outsb
xchg
lea
aaa
sbbb
push
mov
lods
shlb
pop
adcl
std
xchg
push
pushf
mov
pusha
js
pop
push
andl
fsubs
xchg
sti
inc
dec
adc
adc
inc
call
cltd
lcall
imul
hlt
in
sbb
mov
or
jb
inc
lahf
mov
or
or
lahf
out
in
shrl
dec
subb
clc
sbbl
in
sbb
pop
in
sbb
test
adc
insb
mov
dec
adc
addr16
data16
orl
cmpsl
jecxz
cli
pop
add
xchg
jnp
cwtl
stos
mov
mov
pop
js
ds
pop
inc
sub
xor
scas
sub
mov
jg
insb
cltd
push
mov
insb
inc
cmp
repnz
call
or
lret
push
push
mov
rolb
add
push
cmp
insb
push
cmpsl
or
push
aaa
mov
inc
enter
push
push
cmp
jb
or
xor
add
sarl
or
gs
mov
xchg
insl
dec
mov
incb
jae
jae
xchg
pop
mov
fstpl
lahf
push
test
imulb
fcmovne
aas
icebp
jae
mov
roll
cld
fwait
les
stos
pop
test
cmc
mov
inc
cli
ja
and
push
subb
test
adcl
outsl
ficoml
gs
adc
dec
dec
mov
or
testb
sub
hlt
ficompl
sbb
ljmp
sub
push
pop
or
stos
mov
xchg
and
inc
mov
insb
les
add
jne
pop
out
cld
mov
mov
test
mov
mov
popf
push
cmp
hlt
sbb
ficompl
jae
mov
or
sbb
add
out
pop
mov
jae
push
cld
out
lds
hlt
xor
pushf
fadds
pmaxsw
and
fimull
sub
pop
dec
pop
sub
bound
jne
jp
mov
movsl
mov
addr16
add
mov
push
frstor
arpl
mov
in
dec
jnp
dec
sti
testl
fdivrl
mov
out
mov
jg
sbb
lods
xchg
andl
adc
push
pop
dec
popa
cmp
xchg
cmp
ja
gs
sub
stos
test
js
jns
inc
mov
ret
and
repz
pop
out
push
fnstcw
mov
push
push
rclb
sbb
xchg
add
sub
mov
or
lret
xor
sub
negb
xchg
movsb
loopne
dec
xor
in
and
or
add
mov
adc
mov
lcall
fwait
cmc
jle
xchg
inc
dec
xchg
pop
sti
ja
clc
pop
nop
call
in
push
pop
sahf
in
out
cmp
and
movsb
mov
insl
sub
dec
or
mov
sub
jno
and
sbb
fimuls
rcll
push
jo
push
jge
add
xchg
jp
and
mov
rcr
jo
lods
sbb
pop
loop
ss
push
sub
sar
pop
inc
jle
shll
jbe
xchg
dec
lcall
pop
repz
iret
jne
add
add
shlb
jno
mov
in
jo
test
shll
inc
xchg
rcl
inc
stos
sti
push
loop
pop
dec
cmp
mov
push
mov
adc
insb
leave
shlb
aas
cmc
dec
jg
pop
aam
sbb
lret
out
and
adc
jnp
and
push
inc
outsb
dec
pusha
mov
xor
dec
jnp
icebp
lahf
fs
xor
inc
xor
aaa
mov
gs
repz
and
xor
out
or
jmp
sbb
movsl
push
and
in
inc
inc
loope
mov
stc
push
in
sbb
pop
lret
into
dec
mov
inc
inc
sub
int3
jecxz
xchg
inc
shlb
xor
lods
test
mov
or
mov
jns
inc
jb
sbb
sbb
dec
pop
dec
mov
dec
lret
pop
loop
bound
jge
mov
popa
add
adc
inc
xlat
fstp
and
push
rorb
daa
xor
int
sbb
adc
out
fiadds
lcall
lahf
adc
jbe
das
out
sub
sub
data16
gs
sbb
loop
xorl
inc
pop
repz
mov
mov
xchg
js
mov
pushl
aam
insb
and
mov
jl
inc
mov
daa
cwtl
ret
fdivrl
fldt
inc
repnz
dec
ljmp
call
sub
leave
daa
sbb
mov
adc
add
loop
inc
cli
sti
push
inc
or
imul
test
loop
aad
lods
lahf
mov
popa
lcall
cwtl
mov
push
and
aaa
xor
add
cltd
jno
dec
out
ret
push
cmp
xor
stos
nop
call
push
xor
faddl
sbb
xchg
outsb
orb
iret
xor
jecxz
push
jge
push
inc
mov
loopne
hlt
xlat
jle
jg
xchg
sbb
test
adc
inc
and
subb
mov
mov
pop
sub
jb
mov
cld
fwait
pop
xchg
xor
lahf
or
aad
repz
push
je
lds
fdivrs
inc
pop
int3
fs
mov
mov
gs
cltd
pop
sub
cli
shrl
mov
ss
sub
xchg
sti
in
inc
test
mov
inc
scas
aad
divb
inc
xor
dec
data16
stos
lret
icebp
inc
pop
ljmp
sub
sub
sbb
push
mov
pop
jne
repnz
into
fcomp
push
sub
lret
je
dec
sub
inc
pop
ret
and
jo
fwait
inc
and
and
inc
rcrb
or
cmp
mov
xor
dec
add
add
xchg
xchg
inc
and
fistpll
in
mov
lods
dec
mov
or
int3
xchg
popf
movsl
sbb
xchg
lock
push
xor
jne
out
dec
jns
sti
ficompl
jle
sub
flds
mov
cltd
sub
mov
jge
jmp
jecxz
test
popf
or
aas
testl
pop
push
xor
and
fsubs
fnstsw
mov
jle
xchg
out
xorb
mov
cmp
pop
xchg
xchg
mov
xchg
xchg
push
aas
shl
ds
cs
mov
repnz
mov
push
push
sub
es
dec
arpl
in
mov
shr
and
cmp
inc
in
in
fwait
cld
pusha
mov
testb
add
cltd
movsl
repz
das
jecxz
das
jle
icebp
lret
xor
mov
cmp
xchg
sub
repz
icebp
adc
ret
mov
jns
stos
pop
mov
sbb
and
sbb
inc
mov
loopne
nop
sbb
cmp
lods
cmp
aam
mov
mov
lret
mov
pop
and
push
popa
cli
or
push
dec
push
xlat
sbb
mov
xor
psubsb
add
sub
jns
out
mov
mov
push
mov
insl
fcomps
add
sbb
push
inc
push
shll
inc
in
push
sti
lret
push
jbe
push
and
outsl
adc
ljmp
xchg
ds
sub
fsubrl
addr16
int
or
ja
push
pop
mov
xadd
sti
sub
pop
ss
cld
sbb
inc
lahf
inc
push
mov
das
add
inc
fbld
imul
mov
cmp
xor
mov
insb
fsubl
sbb
std
out
mov
cmc
shrb
cld
sub
mov
fwait
pop
fsubp
xlat
enter
adc
in
fstpl
pop
push
xchg
jb
sbb
sub
sbb
inc
call
mov
jecxz
insl
xor
sti
lcall
mov
daa
int
mov
inc
mov
xor
lea
pop
addr16
adcb
mov
xor
jge
aam
dec
int
cmpsb
imul
jecxz
je
pop
cmpsb
xlat
test
pop
jp
movsb
or
xchg
aas
ja
in
fists
mov
sbb
addr16
dec
sbb
push
jp
movsl
inc
orl
jo
lcall
cmp
cmp
lds
nop
ss
gs
push
aaa
in
aas
mov
cmpsb
xchg
sub
push
jle
inc
jp
push
iret
mov
jno
shl
push
fidivrl
pop
jae
inc
int3
xlat
xlat
pop
movsb
rclb
cmpb
jg
mov
insl
mov
mov
xlat
push
jp
dec
xchg
push
mov
test
cmp
ss
mov
jmp
cmp
cmpsl
mov
xchg
jle
into
xor
push
pop
lcall
add
fwait
add
in
adc
in
xchg
cmpsb
repnz
pop
lea
js
xor
test
ljmp
mov
inc
push
sub
pop
sub
push
xchg
out
adc
subl
fistl
in
pop
ja
sbb
cs
aad
test
cli
jg
cmp
cmp
lods
leave
fmulp
cli
push
leave
lret
xchg
mov
push
add
mov
fistps
cmpsl
mov
cld
xchg
icebp
mov
xchg
push
lods
cld
movsb
add
iret
fnstenv
jl
or
pop
loop
cmp
push
xchg
lahf
sbb
out
sub
icebp
pop
cmp
mov
cmp
leave
lahf
shl
rcll
testb
jge
push
imul
shr
push
jp
int3
sbb
or
push
xchg
xchg
push
adc
mov
mov
dec
loopne
mov
in
aas
adc
mov
out
cmp
lock
cltd
jb
aaa
sahf
xchg
pop
out
sbb
icebp
mov
in
push
mov
mov
ss
jmp
in
or
nop
addl
xor
dec
mov
andl
mov
mov
inc
pop
pop
fildl
movsl
push
movsb
sti
sub
push
jne
pop
outsl
lods
repz
push
lock
pop
out
sub
sbb
rcl
shl
xor
dec
cs
mov
fldenv
test
in
mov
shll
lods
dec
xchg
jnp
sbb
dec
add
mov
lret
ret
xor
cs
lea
jno
dec
leave
sub
rorb
out
stos
dec
mov
and
add
cmpsl
lret
dec
hlt
ret
cmpsl
adc
cmpb
orb
xor
dec
mov
das
fwait
sub
cmp
add
sub
aaa
push
jge
fimull
jo
sar
and
or
std
je
cmpsb
in
pop
or
xor
sbb
dec
and
ljmp
xchg
mov
jae
stos
sbb
jb
and
cmp
mov
add
pop
cmp
mov
in
in
cwtl
jo,pt
lcall
and
mov
cmp
aad
fisubrs
lcallw
fwait
aam
mov
aas
adc
inc
popa
mov
jnp
mov
jl
cmpsb
call
idiv
cmp
adcb
push
mov
inc
lods
iret
pop
push
pop
cmp
cmp
insb
xchg
push
fcmovnbe
push
mov
jmp
imul
dec
mov
xchg
cmp
cld
mov
std
ss
jb
jns
pusha
sahf
enter
adc
xor
cmp
out
jl
mov
inc
xchg
adc
push
or
dec
mov
rolb
std
xor
pop
push
xor
out
clc
clc
scas
idivb
dec
je
cmpsl
lods
enter
insb
loope
push
aaa
and
xchg
pop
mov
cmp
pop
test
popf
loop
mov
cltd
scas
rcr
mov
mov
mov
jno
scas
scas
add
push
mov
mov
int3
leave
loope
pop
call
push
fs
sahf
adc
dec
stos
push
test
ret
add
and
jo
pop
ret
imul
and
push
inc
shrb
or
dec
sbb
movsb
xchg
inc
decl
push
sbbb
rcll
ffreep
mov
xlat
stc
pushf
and
and
jecxz
sbb
xchg
imul
sbb
mov
sbb
je
cs
unpcklps
dec
pop
push
or
outsl
inc
fwait
xchg
sub
jmp
hlt
pop
outsl
cli
pop
divl
sbb
jno
divb
mov
mov
sub
jb
pushf
pop
sarb
js
outsl
in
mov
sub
sub
xorps
dec
inc
sbb
inc
rol
in
hlt
insl
mov
adc
stos
push
gs
jo
mov
repz
popf
pop
out
or
xlat
das
sahf
and
jbe
enter
sahf
sub
fmul
pop
sbb
dec
sbb
push
xor
push
adc
fldt
outsl
in
out
int3
loop
add
mov
aas
cmp
adc
out
or
mov
outsb
icebp
sbb
test
adc
xor
pop
mov
mov
xor
aaa
sbb
jne
fnstsw
cmpxchg
or
xchg
jns
movsb
adc
cwtl
js
call
sub
pop
cld
mov
cwtl
jnp
mov
aam
or
dec
pop
js
stos
jno
sub
dec
push
push
ljmp
xor
adc
ficompl
jns
pop
scas
fwait
or
push
mov
popa
out
pop
or
popl
jae
xchg
lea
popf
mov
dec
adc
sti
cmp
or
iret
fsubr
js
inc
sbb
inc
fidivrs
push
sub
add
ds
push
sub
fld
add
cmp
push
ret
dec
daa
jp
jge
add
das
xchg
sub
sub
xchg
in
test
sub
inc
fwait
cmp
fwait
inc
and
sbb
sti
lret
jg
cmp
jecxz
jmp
fildll
jge
pop
add
adc
lods
insb
inc
or
cmc
inc
and
fdivl
mov
insb
xchg
call
sub
push
jns
dec
stos
xchg
js
adc
addr16
jae
pop
and
sbb
mov
mov
inc
jl
sti
arpl
adc
dec
jnp
movl
testb
fidivrl
leave
dec
dec
push
cmpl
ret
cmp
push
mov
repnz
cmc
ret
pop
popf
mov
xchg
pop
adc
popf
xor
mov
xchg
dec
xchg
inc
data16
mov
push
mov
and
adc
dec
rcr
aam
cmpsb
pop
push
pusha
pusha
outsl
fldl
or
pop
sub
xor
sti
pop
fisttps
push
push
jmp
inc
xorl
cwtl
icebp
push
mov
out
adc
insb
pusha
xchg
orb
hlt
pusha
sbb
sub
sahf
out
sub
flds
movsl
push
xor
pop
scas
xchg
and
add
mov
dec
rolb
roll
test
or
jbe
and
fmull
cmp
push
outsl
jg
dec
or
popf
into
add
call
pop
xlat
jp
movl
rcrb
adc
les
frstor
mov
pop
int3
mov
test
cmpl
add
cmp
roll
ja
stos
xchg
test
xor
scas
push
pushf
push
cmp
icebp
sbbl
lcall
jne
xchg
lea
shrl
loope
mov
xor
mov
outsb
cmp
push
or
stos
mov
inc
decl
loop
int3
cmp
repnz
mov
repnz
out
inc
in
mov
scas
fucom
mov
ljmp
call
dec
push
stos
fisttps
inc
pop
out
sbb
mov
push
xchg
popl
jle
aad
gs
nop
mov
jns
clc
adc
mov
xorl
cmp
lret
mov
neg
mov
int
xchg
or
push
and
stos
je
out
imul
shl
jns
pop
mov
movsl
xchg
call
aam
sub
mov
xchg
scas
jae
pop
pusha
cli
ljmp
adc
jb
cwtl
jno
dec
icebp
inc
and
mov
ds
scas
jmp
push
inc
call
andl
nop
arpl
pop
xchg
test
lcall
xor
ficoml
inc
outsl
adc
mov
scas
loopne
std
add
adc
ljmp
mov
sbb
in
add
cmp
jb
scas
addr16
test
aas
sbb
mov
les
stc
xor
icebp
xor
cmp
movsl
fidivs
data16
shll
cld
xor
lret
ret
sahf
push
xor
testl
out
push
xor
jbe
in
cltd
test
mov
jmp
ljmp
clc
adc
inc
push
mov
fadds
nop
mov
xchg
fmulp
jns
push
imul
jne
sbb
subl
clc
inc
mov
push
pop
or
cmp
insb
lods
sbb
leave
mov
rorb
mov
rclb
sub
orb
cmc
mov
js
sub
sbb
xor
hlt
mov
stos
mov
xchg
and
int
mov
daa
mov
xchg
adc
outsl
addb
fdivrp
sub
lods
scas
sti
in
sub
push
xchg
mov
or
inc
push
jecxz
jbe
out
sub
mov
fisubrs
psrlw
inc
popf
jmp
mov
mov
add
and
lret
test
sbb
mov
ds
out
pop
data16
mov
call
sahf
pop
fildl
cmp
adc
cwtl
ss
fs
popa
popf
repz
cli
xchg
data16
out
enter
jno
jns
je
shll
pop
jmp
outsb
iret
cld
push
popa
xlat
sahf
and
call
in
dec
std
lret
pop
es
xlat
leave
idivb
adc
dec
mov
fs
jl
popa
pop
aas
pop
ret
jmp
cs
add
lret
jp
std
add
aad
pop
or
pop
cmp
imul
in
pop
dec
add
shlb
arpl
xchg
xor
add
sbbb
popf
dec
pop
aad
sub
or
mov
ss
jo
in
dec
insb
dec
dec
movsl
xchg
roll
push
mov
loope
movsb
lcall
pop
sub
je
shlb
sub
mov
xor
jnp
clc
mov
cmp
push
and
mov
mov
in
xor
gs
jo
fwait
sub
je
lret
les
pop
fmull
jo
add
iret
sbb
movsl
add
xor
xchg
push
mov
or
push
pusha
fcomp
inc
inc
call
dec
test
push
pushf
and
mov
push
mov
adcl
cmp
pop
inc
shl
pop
jle
cmp
and
cmc
fidivs
lret
mov
xor
push
enter
pop
pop
xchg
pop
jmp
in
mov
xchg
xchg
movsl
mov
add
das
aad
test
shlb
add
lcall
aam
sbb
mov
sarl
xchg
push
and
repz
outsl
dec
lea
negl
xchg
pop
push
dec
cmp
sbb
jge
lock
je
inc
daa
hlt
test
fwait
jo
mov
arpl
leave
cld
je
dec
popa
aas
lea
aam
mov
lods
out
fistps
int
mov
sti
add
jbe
cmp
negl
sarb
sub
push
ret
mov
adc
cmpsb
shlb
pop
xchg
mov
cmpsl
enter
push
jmp
fnstenv
shlb
mov
mov
xchg
rol
or
fimull
push
enter
pop
movsb
sub
enter
aas
mov
fwait
jp
pop
les
xchg
mov
mov
nop
push
cmc
inc
dec
enter
inc
cld
mov
and
pop
cmc
mov
adc
mov
movsl
push
mov
outsb
xchg
lahf
ljmp
mov
test
mov
and
scas
rorl
insb
inc
xor
pop
pusha
and
mov
pusha
int
sbb
or
ret
cmc
mov
mov
nopl
add
subb
fdivrl
and
fcompl
mov
fdivrl
mov
jno
enter
xor
fwait
push
sub
lds
imul
push
stos
fadds
add
pop
daa
fwait
jnp
jae
cwtl
sbb
cs
mov
add
adc
pop
or
inc
inc
mov
pop
pop
cmovb
incl
andl
mov
adc
outsl
cmp
in
in
in
mov
stos
pusha
mov
mov
push
and
vpsrld
imul
test
cmp
mov
cmpsb
dec
rolb
cmp
sbb
push
mov
fisubl
mov
cs
and
or
scas
aad
sbb
xchg
test
jl
or
xchg
mov
mov
xor
lret
push
mov
stc
mov
push
es
dec
push
gs
movsl
pop
push
in
scas
fwait
test
mov
je
out
out
mov
push
pusha
loopne
mull
subb
das
xor
inc
or
jmp
lret
push
lret
sub
inc
xchg
and
je
ds
mov
stos
ret
sub
add
xchg
test
test
push
repnz
pop
add
bound
push
iret
dec
add
inc
movlps
cmp
pop
in
dec
pop
pushf
sub
insl
iret
idiv
mov
xor
adc
rorl
fmul
repz
pop
pusha
fwait
pop
jecxz
outsb
mov
or
icebp
shll
jb
sbb
cmp
ljmp
lea
rorb
add
dec
sbb
jo
ss
out
and
clc
imul
push
fnsave
cmp
cmp
mov
es
sbb
cli
aad
sbb
xorl
pop
out
push
arpl
orb
jge
jno
fistpl
pop
mov
call
xchg
ret
xchg
outsl
and
shll
or
lret
xor
leave
into
sub
neg
js
test
and
outsb
push
movsb
jmp
or
mov
je
fsubrp
lock
dec
shll
xchg
and
jge
sub
aam
gs
cmp
jecxz
cmpsl
leave
loop
pop
inc
mov
mov
sub
mov
mov
jmp
fildl
xor
sbb
cmp
frstor
pop
push
add
mov
addr16
pop
jl
fsubrs
mov
hlt
push
mov
les
cmpb
bound
nop
cwtl
mov
adc
push
orl
mov
hlt
push
lret
xor
test
loope
xor
std
out
aam
jmp
nop
sub
stc
fidivs
jmp
sub
mov
je
aam
mov
gs
insb
clc
mov
jmp
jl
int
sbb
in
int3
sbb
push
insb
fchs
popf
sbb
sub
or
bound
dec
fdivs
in
fcmovne
aad
pop
or
rcr
pusha
sar
mov
ret
and
add
addr16
add
xchg
mov
arpl
lcall
in
dec
jns
dec
in
iret
lea
shl
and
loop
aaa
sub
shrb
stos
das
inc
xchg
std
xchg
xchg
pop
divl
stos
dec
jnp
int
lds
sbb
push
add
imul
lods
jnp
arpl
mov
icebp
into
aad
jecxz
fimull
xchg
cmp
insb
xchg
setp
and
dec
add
jo
call
inc
jnp
aaa
clc
mov
gs
pop
lds
adc
lods
flds
nop
mov
jno
fists
pop
rclb
fcoms
addb
mov
dec
insl
ljmp
pushf
jmp
movsl
xor
imulb
sub
mov
pop
ljmp
icebp
adc
testb
mov
sti
cmpsl
ljmp
ret
imul
adc
jmp
cmc
push
ljmp
mov
movsb
lods
mov
cmp
jnp
fcomip
enter
inc
lods
jl
xor
cmpsl
setb
push
xlat
scas
dec
test
lods
pop
mov
shlb
shlb
jnp
addl
test
pop
xchg
and
or
jl
jp
loope
sbbb
xchg
xchg
scas
mov
dec
stos
loope
cmc
sub
pop
sub
negl
cmp
pop
sub
frstor
test
das
rcll
mov
pop
sub
xor
stos
pop
mov
jb
and
or
inc
gs
rcll
and
pop
pop
lods
ficompl
mov
jae
or
cmpsb
test
xchg
pop
push
adc
imul
mov
shrb
inc
cmp
cli
mov
mov
inc
jne
add
dec
es
rorb
int
adc
add
fs
push
jmp
orb
xchg
es
js
pusha
sbb
lods
mov
hlt
pop
cmc
inc
xchg
lock
gs
mov
or
mov
lret
add
cwtl
push
xor
mov
mov
push
cwtl
sbb
orl
pop
mov
cs
push
dec
sub
pop
out
add
add
test
test
int
pop
inc
lahf
lods
jp
cmp
xor
das
out
das
adc
ds
test
xor
movsl
ja
lcall
dec
cmp
testl
push
inc
push
jno
xor
aaa
push
jp
insb
lret
mov
pop
adc
das
insb
cltd
scas
xor
int
movsl
addr16
jno
cmp
das
pop
sub
shl
addr16
mov
push
mov
mov
call
mov
mov
out
sbb
insb
xchg
sub
xor
mov
fbld
push
lea
sti
xchg
leave
jg
icebp
push
cltd
gs
push
and
ss
add
cmp
lods
push
movsb
add
jp
imul
std
xchg
inc
popl
xor
shll
ret
jle
aad
mov
push
sub
sbb
add
daa
aam
or
lahf
cmp
fildll
test
adc
push
int3
sbb
out
fimuls
subb
in
shlb
into
int3
jo
mov
adc
xchg
sub
xchg
and
repnz
add
ljmp
jl
clc
into
imulb
sbb
inc
dec
mov
loope
mov
in
xchg
push
outsb
push
dec
mov
dec
push
pop
gs
push
decl
dec
pop
mov
sahf
cli
mov
push
lcall
mov
lcall
idivb
cwtl
push
les
push
or
daa
testb
scas
mov
in
or
mov
call
lds
popa
sbb
jle
pusha
xor
cltd
push
add
push
add
lret
aam
mov
in
lea
and
lret
lret
pop
bnd
fsubrl
and
std
cwtl
jge
in
sub
push
xor
or
js
adc
sub
fs
daa
xchg
adc
loop
mov
fdivrp
and
xor
inc
xchg
ja
inc
aaa
movsb
xlat
ja
popa
xchg
into
inc
adc
lcall
mov
call
xor
and
rorl
mov
inc
and
xchg
dec
cltd
push
dec
leave
les
xor
sbb
in
add
adc
orl
cs
sti
xchg
sbb
ds
sbb
cld
enter
adc
mov
js
cmp
loopne
gs
ror
jbe
insb
out
lret
xor
bound
adc
shrl
adc
ljmp
lret
mov
and
cld
cmp
mov
adcb
fsubs
add
int
hlt
dec
imul
andl
mov
dec
jns
stc
out
push
xlat
addb
iret
push
and
add
xor
test
xor
pusha
stc
repz
add
clc
sub
inc
inc
and
scas
push
cmp
in
dec
pop
mov
mov
fdivrl
add
in
lea
xchg
imul
lock
push
pop
xchg
mov
dec
mov
outsb
xorb
clc
in
test
fdivrl
add
add
xorl
push
or
cmp
call
inc
js
cs
out
mov
sbb
inc
pop
push
popf
mov
dec
xor
push
lahf
xchg
ret
xor
push
test
int
mov
push
and
addr16
dec
std
insl
mov
pop
mov
push
mov
lea
addb
lret
xor
and
and
jecxz
jns
xchg
jmp
pop
cmp
inc
addb
jnp
lcall
aaa
test
sub
jl
xor
cmp
mov
hlt
daa
push
jp
mov
sbb
aad
or
push
loopne
xlat
pop
cmpsl
add
xchg
dec
mov
dec
adc
mov
mov
ffreep
aas
cmp
lahf
test
xchg
push
xor
inc
sub
mov
inc
mov
mov
into
dec
gs
xor
lcall
loopne
cmpl
push
aad
pushf
or
cmp
aaa
mov
pop
nop
add
daa
lret
add
fildl
add
fdivs
cmp
adc
pop
je
push
cmc
push
xor
fistpl
repnz
das
loope
cmpsb
inc
cwtl
loope
data16
mov
aas
mov
ror
iret
sub
xchg
and
xor
pop
add
int3
fucom
adc
ja
cmp
ficoml
inc
add
decl
andb
mov
pop
push
mov
je
jns
pop
pop
subl
push
and
mov
es
dec
adc
pop
pusha
call
js
movsb
sbb
cmpl
cmp
ficoms
mov
jl
dec
dec
mov
mov
fiaddl
add
fdivl
and
fwait
shrl
xchg
jne
dec
subb
jecxz
cmp
mov
inc
bound
mov
arpl
fs
out
pop
xorb
jg
mov
cwtl
and
add
hlt
stos
js
sahf
pushf
push
sbb
push
cwtl
scas
ljmp
test
inc
xchg
cltd
sub
xchg
rclb
sbb
popa
push
mov
jmp
shll
sti
lret
sbb
xchg
pushf
loopne
cmp
decb
pop
xchg
stos
mov
mov
divb
sbb
pop
adc
pop
or
into
sbb
ficoml
repnz
cmp
lahf
mov
xchg
dec
dec
jo
nop
testb
and
out
movsb
add
into
loop
or
call
and
les
cmc
mov
pop
sbb
sbb
mov
aaa
popa
fcomps
loope
cld
out
jl
jbe
push
lds
inc
subl
in
pusha
sbbb
mov
jb
mov
jo
pop
xor
stc
sub
push
out
sti
jo
jmp
pop
lret
ss
pop
sahf
sti
adc
cmp
pop
xchg
inc
sahf
pop
jae
cmc
mov
vandps
insl
scas
mov
stc
xchg
nop
fs
call
inc
and
inc
push
test
sarl
dec
mov
lea
das
dec
pop
add
jmp
stos
ret
fcomp
dec
pusha
int
sub
adc
imul
mov
pop
jae
pop
push
push
ftst
sbb
sbb
mov
int
lret
push
xlat
mov
push
add
and
fdivr
inc
mov
adc
jno
bound
mov
pop
inc
mov
jle
xchg
mov
xor
dec
es
daa
ja
sbb
xor
or
sub
sub
stos
jge
sbb
cmpsb
jne
fdivl
or
mov
out
mov
gs
cld
and
popf
xchg
loop
pop
icebp
repnz
dec
pop
imulb
dec
xchg
popa
mov
dec
sub
mov
idivl
pop
mov
mov
out
adc
jecxz
jg
mov
or
and
in
jg
dec
lret
cmpl
lds
rcll
popf
lds
stc
push
and
sub
imull
push
lret
xchg
out
lcall
add
jb
mov
fildll
sbbb
and
addr16
int
dec
pop
jbe
insb
jnp
push
int
mov
fsubs
hlt
iret
or
in
enter
fdivl
das
xor
pop
imul
lds
cmp
sub
sub
mov
adc
fstl
adc
xlat
inc
les
adc
mov
test
dec
rorb
mov
push
sub
bound
cmp
ja
mov
sbb
sahf
lret
pop
fdivrl
arpl
dec
pop
push
test
mov
mov
nop
lcall
flds
in
icebp
aam
sub
and
jmp
jb
pop
aaa
mov
scas
fisttps
cmp
mov
xchg
fsubrp
incb
dec
ds
stc
pop
xor
push
xchg
insl
mov
mov
fldcw
sub
adc
jp
sub
enter
and
pusha
iret
addr16
jbe
pushf
dec
ds
jns
ljmp
push
and
add
mov
or
jns
and
adcl
les
pusha
cmovns
adc
mov
jns
push
mov
mov
shlb
push
xchg
and
mov
les
test
repnz
pop
pop
or
or
enter
pop
out
adc
aad
aaa
jnp
push
add
add
adc
mov
mov
rorl
fdivrs
fldl
push
out
mov
lea
loope
adc
jge
push
mov
lahf
add
and
push
sbb
clc
std
decl
mov
addr16
ds
or
mov
imulb
cmp
inc
fldcw
push
int3
xchg
aas
imul
jbe
faddl
ret
jg
xchg
mov
add
sbb
cmp
add
mov
in
push
pop
inc
push
aas
mov
lahf
and
cltd
sar
mov
mov
push
sub
push
fimull
dec
imulb
stc
dec
cvttps2pi
jns
pushf
idiv
mov
sbb
cmpsb
scas
or
rol
sub
js
mov
and
add
das
inc
out
mov
lds
xchg
sub
std
popf
in
jae
adc
fdivp
scas
dec
rcr
and
add
test
nop
xchg
xchg
mov
loopne
cli
mov
and
xchg
mov
push
icebp
xor
aam
addr16
pop
cs
loop
ds
loopne
test
sbbb
decb
test
arpl
lods
cs
int3
shlb
inc
shl
mov
or
add
inc
sbb
pop
jne
ret
fldt
sbb
pop
jae
adc
sbb
mov
sub
mov
das
push
sbbb
aam
ljmp
pop
sahf
movsb
push
movsb
push
and
jg
pop
xchg
shrb
sub
jae
xlat
jae
cmp
pop
das
jle
mov
outsl
push
xor
aam
xchg
pushf
loope
sub
lret
pop
mov
stc
lea
push
pop
mov
xor
cmp
push
add
es
pop
dec
in
push
in
out
push
leave
cmpsb
adc
xchg
jmp
arpl
out
xor
fs
xlat
mov
jge
pop
shrb
fwait
leave
into
clc
dec
lods
cmp
cmp
or
fs
cmpb
xchg
adc
mov
mov
imul
in
test
mull
pop
mov
idivl
xchg
call
into
shll
dec
push
cld
int3
jge
fwait
es
aas
and
loopne
add
cwtl
mov
loopne
pop
fimuls
jg
scas
out
out
imul
sbb
inc
jecxz
rolb
xchg
in
pop
in
imul
movsl
mov
jl
and
es
iret
outsb
loop
inc
rolb
in
cmp
cmp
daa
es
out
push
fisttpll
inc
mov
into
cli
inc
in
sbb
mov
rclb
test
cmp
pop
idivb
movsb
mov
out
in
or
xor
repnz
jl
aad
stos
xchg
xchg
je
pop
cmp
lds
sbb
adc
ret
or
adc
movsb
rcrb
xlat
call
inc
xor
test
cwtl
sarb
stc
and
sub
cmp
add
xchg
fidivrs
loope
loopne
push
jle
sbb
fidivrs
negl
mov
leave
imul
jbe
shll
scas
adc
insb
pushf
loope
jp
test
jle
idivl
arpl
fldl
jo,pt
xchg
in
jle
jle
xor
mov
mov
pusha
or
fstl
imul
les
sub
mov
dec
fs
mov
sub
fsubs
push
nop
jmp
mov
pushf
push
jmp
push
mov
clc
mov
out
rcr
xor
sub
or
stos
cmp
jg
orl
dec
test
aam
sarl
notb
cmp
cld
mov
ljmp
and
push
fdivrs
repnz
jmp
cmpsb
mull
dec
jge
aas
pop
mov
sub
push
pushf
xchg
adc
sub
jbe
cmpsb
and
inc
cs
inc
cld
xchg
fdivp
scas
inc
and
fistl
outsl
add
or
mov
mul
ret
push
bound
sub
push
sub
or
pop
int
and
pop
cmc
je
pop
mov
mov
adc
push
xorb
sahf
jns
mov
mov
rolb
test
test
push
std
or
add
cmpsl
int
or
int3
mov
ret
fisttpl
into
inc
mov
imul
inc
and
aam
gs
daa
inc
lret
iret
mov
mov
fadds
jp
outsl
out
and
dec
jecxz
daa
xchg
jmp
pop
mov
inc
mov
arpl
xor
insl
movsb
leave
icebp
cli
outsb
sub
jecxz
adc
fwait
out
test
sub
fstps
adc
aas
movsb
push
lock
xchg
ljmp
ret
lock
shr
add
sbb
inc
sar
pop
mov
and
jg
pop
out
jp
aaa
imulb
cmp
xchg
test
lds
mov
fstp
xchg
in
cmp
xchg
inc
jmp
or
lret
sahf
cmp
jne
adc
hlt
stos
orb
and
mov
sub
mov
mov
popa
or
ds
cmp
and
adc
fwait
data16
jmp
lock
inc
cmp
out
cmc
fnsave
sbb
or
xchg
inc
fadds
nop
out
jecxz
pop
cmp
daa
ljmp
in
pop
sub
inc
ja
xor
sar
xchg
pop
rorb
pushf
adcb
sub
push
mov
mov
mov
outsl
mov
and
shll
ret
adcl
xlat
scas
jmp
jle
sbb
jno
mov
push
fs
adc
xchg
add
test
cwtl
push
inc
out
push
add
test
push
roll
mov
inc
shlb
int
std
mov
in
xor
mov
pop
pcmpgtw
add
pop
call
and
repz
mov
pop
lahf
jle
lret
xchg
out
in
gs
out
cli
xor
je
jp
ja
aas
clc
inc
jl
fimull
mov
xchg
xchg
addr16
nop
mov
pop
loopne
stc
xchg
dec
and
lods
fs
add
xlat
pop
hlt
adc
mov
xchg
xorl
adc
xchg
sub
movsl
mov
flds
call
mov
mov
push
jnp
ljmp
jp
lds
jne
faddp
cltd
xor
divl
push
rclb
into
shlb
xorl
push
pusha
lret
and
jg
adcl
iret
out
stos
mov
decb
jmp
cmp
jg
imul
cmp
mov
jnp
dec
push
adc
or
xchg
jl
dec
sub
jl
xor
mov
pop
mov
adc
in
int3
lret
add
mov
sub
mov
daa
das
xchg
fmuls
push
std
push
jmp
std
das
and
ret
aam
nop
cmc
add
mov
and
sti
sub
adc
and
cmpsl
cmp
mov
imul
outsb
sub
pushf
shl
mov
push
fsubp
or
lea
das
jo
in
lcall
mov
jb
pop
adc
movsl
push
ja
or
pop
outsb
lcall
mov
inc
push
add
sbb
xchg
lret
jb
movsl
push
fsubr
loope
push
xchg
jg
mov
pop
fidivrl
imul
pusha
jno
sbb
movsl
mov
fstps
xor
mov
pop
and
inc
fyl2xp1
loopne
sbb
es
jecxz
jae
pop
sub
or
pop
stos
cli
push
insb
das
fmuls
add
sub
icebp
xor
cmp
adc
out
daa
xor
inc
sbb
jbe
mov
mov
in
jle
sarl
stc
test
cmp
dec
sub
lock
xchg
mov
push
mov
mov
mov
out
jne
adc
push
ss
mov
lods
dec
cs
data16
shrb
scas
cwtl
fiaddl
mov
inc
inc
inc
mov
cmp
push
movsl
pop
call
push
cmc
fnstenv
sbb
pop
push
in
lret
push
sbb
in
jg
pop
inc
lret
jmp
into
cli
add
push
mov
orb
mov
push
pop
dec
outsb
lret
pop
jne
lock
stc
sbb
mov
sub
sahf
gs
std
sahf
xor
lds
sbb
inc
scas
outsb
sbb
test
mov
mov
adc
adc
xchg
in
lcall
into
pop
iret
mov
jno
clc
aad
mov
aas
jp
sub
xlat
fisubl
fcmovne
loope
xor
cmp
inc
ficoml
mov
lock
or
pop
cmp
push
aas
fldt
ret
lods
xchg
lea
jecxz
bound
insl
icebp
int
cmpl
dec
xchg
and
jns
outsb
push
mov
repz
pop
fisubl
push
inc
xchg
divb
out
push
movsl
clc
jnp
lock
jns
dec
sub
lock
mov
xchg
outsb
dec
insl
repnz
jg
adc
cmp
pop
push
push
adc
stos
push
xchg
pop
mov
inc
pusha
loopne
and
adc
push
fwait
dec
sbb
jne
dec
adc
inc
fcmovne
mov
mov
scas
test
push
pop
jae
ror
test
pop
mov
rolb
mov
inc
push
sbbb
jle
divb
ja
xor
cwtl
jge
movsb
xor
push
lcall
push
pop
cmp
mov
mov
sbb
sbb
lods
test
inc
or
xor
fnstenv
and
mov
mov
inc
in
inc
xchg
adc
mov
daa
bound
cmp
mov
adc
cwtl
mov
pop
xchg
cmp
push
and
xchg
xchg
in
xchg
jne
or
fdivrl
pop
adc
mov
or
pop
xor
jl
loopne
mov
lret
icebp
jl
aad
int
sbb
fcmovbe
sub
xorl
repz
mov
push
sbb
jle
and
mov
sub
mov
xchg
adc
xor
jno
mov
sub
sub
addr16
ljmp
sbb
dec
mov
fwait
jae
jge
pop
lcall
fwait
xchg
sarb
je
cmpb
fsqrt
pop
out
arpl
cmp
stos
push
inc
imul
mov
mov
call
pop
sbbb
push
pop
sub
movsl
xor
xchg
arpl
es
dec
jmp
lea
out
mov
test
imulb
xor
pop
arpl
or
push
pop
ret
push
adc
or
int3
outsl
mov
sbb
push
icebp
shll
mov
notl
jnp
cwtl
jnp
out
scas
inc
add
popa
sbb
add
aam
ja
lahf
inc
mov
push
push
inc
dec
mov
pop
negl
add
mov
test
and
adc
xorl
hlt
cmp
ds
aad
jp
popa
pushf
xchg
stos
mov
mov
xchg
movsb
jl
arpl
xor
push
shll
pop
jp
lds
and
add
ja
push
pop
leave
jb
mov
lock
and
fdiv
inc
fbld
xor
pop
fildl
gs
icebp
out
fstp
mov
fimuls
pop
sbb
iret
mov
mov
jg
or
stos
mov
xor
jnp
daa
or
mul
hlt
sbb
movsl
mov
scas
and
ljmp
out
add
in
cmp
lret
scas
fld1
lcall
push
in
fs
add
pop
mov
mov
cmp
jae
xor
rclb
dec
push
repnz
roll
xchg
inc
icebp
mov
and
fimuls
mov
add
jno
mov
mov
testb
mov
movsb
mov
sbb
outsb
mov
sbb
cmc
push
in
push
pop
sbb
pop
addl
dec
aaa
negb
fwait
pop
inc
push
out
dec
insl
pop
and
dec
or
xor
jne
xchg
or
nop
sub
inc
pop
sbb
push
cmpsl
shl
jge
dec
popa
mov
xchg
pop
xor
shll
cli
push
mov
inc
imul
mov
mov
ljmp
jl
ja
pop
dec
add
jle
push
andb
and
mov
mov
pop
jno
jecxz
sub
mov
xor
fcmovnbe
loop
mov
sbb
loope
hlt
sub
pop
pop
je
outsl
xlat
jns
sub
inc
je
sub
jbe
dec
out
js
or
je
sbb
test
aas
mov
les
stos
push
mov
enter
lods
dec
addr16
mov
xor
ss
jb
mov
stos
adcb
cmpb
aad
sti
push
or
idivb
repnz
xchg
lods
std
incl
sub
xchg
and
push
hlt
mov
dec
mov
inc
jae
out
rcrb
mov
push
rcll
cmpsb
jns
push
mov
sbb
push
push
ds
popf
add
adc
sub
jl
stos
mov
xor
sar
in
inc
popf
jno
dec
or
popf
xor
pop
lret
lret
mov
xor
jle
aas
dec
mov
jne
outsl
stc
inc
sahf
or
into
lods
mov
adc
jl
enter
cmp
imul
jge
scas
pop
mov
mov
mov
cmp
loopne
xlat
xchg
add
notb
aaa
fistps
pop
inc
add
xchg
arpl
add
out
jp
mov
addr16
adc
lcall
loopne
js
ficomps
cmp
sbb
test
das
shl
mov
ja
stos
mov
xchg
dec
fcoms
or
arpl
hlt
movsb
xor
mov
adc
inc
dec
ficompl
jecxz
movsl
jae
push
cmp
add
popf
pop
pop
add
xchg
xchg
xor
dec
into
fwait
push
lods
test
adc
insl
cmp
push
insl
popf
adc
outsl
and
out
push
test
mov
and
test
inc
repz
mov
addr16
cmc
insb
pop
es
nop
mov
outsb
inc
sub
mov
pop
orb
daa
rcrl
sahf
xchg
and
or
mov
loop
jno
jle
inc
push
adc
sub
psubsb
sti
cmpsb
cmpsb
dec
and
push
sub
xor
or
lods
mov
adc
sahf
xchg
scas
push
and
rcll
clc
push
and
push
addr16
mov
pop
pop
inc
js
xchg
xor
imul
es
shl
repz
lods
inc
ret
sarl
xchg
push
cltd
sbb
sub
cli
imul
push
repz
adc
int
clc
mov
mov
sub
push
cmp
dec
mov
imul
adc
cmpsb
or
xor
xor
add
clc
xchg
rcll
aas
stos
lock
enter
push
mov
lahf
repz
mov
ret
es
lock
xor
stc
xor
mov
imul
or
es
mov
pop
add
dec
pop
jo
sub
mov
lcall
insl
int
lahf
mov
stc
mov
in
negl
cld
xchg
fsubs
insb
leave
ss
imul
hlt
or
es
xor
cmpsl
divb
ret
cmp
pop
mov
mov
ja
inc
pusha
cmpsb
cwtl
out
mov
shll
hlt
push
dec
add
fisttpl
xchg
adc
xor
push
sbb
insb
pop
shlb
jge
leave
jl
sub
sbb
cs
test
dec
jnp
iret
test
inc
sbb
jbe
pop
push
add
lcall
dec
les
xor
mov
int3
add
lcall
jmp
movl
or
mov
mov
in
imul
in
mov
cmp
push
lcall
add
xchg
ret
mov
int3
xorb
lods
stos
out
push
fldenv
cmc
dec
nop
or
fs
int3
push
outsl
scas
push
adc
arpl
add
aam
dec
fwait
sbb
cwtl
or
pop
arpl
dec
and
pop
fstl
daa
sbb
int
cmpl
lods
daa
inc
daa
jge
mov
jno
or
sub
xchg
adc
mov
das
test
stc
adc
in
cltd
mov
xor
xlat
aaa
jb
lahf
pop
and
mov
xor
fisubl
jge
mov
xor
cmp
fnsave
lea
and
cli
add
inc
jb
arpl
adc
adc
adc
jg
lods
ja
mov
adc
test
icebp
jnp
xorb
movsb
icebp
fnstsw
mov
inc
hlt
adc
cmp
out
xchg
or
cmp
leave
insl
lcall
testl
push
mov
out
shll
and
jg
jbe
lret
jbe
inc
popf
scas
xchg
sub
popf
flds
mov
in
xor
fstpt
mov
lahf
or
inc
es
aaa
inc
fs
add
lock
add
and
enter
jg
aaa
imul
and
sub
xor
fiaddl
xchg
in
lods
cld
std
into
cmp
push
orl
test
cmp
dec
mov
jns
pop
pop
xchg
and
dec
adc
sub
enter
test
adc
jns
cmp
ficompl
pop
je
insb
sahf
sub
lea
sub
jmp
mov
jb
mov
mov
sub
jae
in
jge
scas
mov
cmp
imul
inc
mov
mov
mov
idivl
xor
mov
jle
lock
in
out
arpl
loope
inc
lods
and
inc
dec
cli
xchg
subb
jmp
sub
mov
push
repnz
inc
dec
stos
sub
jns
nop
sub
movl
inc
lret
lea
repz
push
std
pop
adc
push
scas
or
lock
test
in
out
jbe
mov
ljmp
sub
rol
xlat
push
das
fisttpll
inc
mov
push
xchg
divb
xor
mov
mov
or
ret
sub
cmp
add
mov
xor
push
fsubrs
stos
rcll
in
xchg
jno,pn
jl
iret
adc
xchg
scas
xchg
inc
ret
jle
rcrl
ja
cmove
cld
shlb
jecxz
jno
mov
jns
ds
enter
mov
shl
push
mov
lock
pop
in
pmaxsw
frstor
push
in
insb
aas
dec
cltd
je
cmp
xor
adc
movl
arpl
daa
stos
test
mov
ds
xchg
iret
shrb
repz
mov
cld
into
sub
scas
jge
dec
cmpsb
call
fcmovbe
sub
or
mov
imul
dec
ret
je
push
inc
fldt
cli
xchg
fs
adc
xor
addr16
test
sbb
aaa
pop
and
loope
inc
push
outsl
fwait
enter
repnz
mov
stos
jb
push
mov
enter
insl
sahf
jmp
das
jle
sub
push
jne
out
jge
lock
xchg
shl
loope
dec
mov
mov
stc
push
xor
fwait
out
xlat
xchg
xchg
stos
dec
xor
xor
adc
hlt
lds
pop
test
cmp
in
sahf
fsubl
mov
rclb
pushf
jae
mov
push
mov
int
sbb
cld
enter
lret
pop
xor
ljmp
add
sub
loopne
sub
adcl
popa
xchg
cmpl
push
inc
push
fdivs
mov
mov
push
jge
out
popf
sub
mov
int
mov
fldt
movsb
inc
test
in
jecxz
cmp
sub
sbb
rcrb
push
mov
jbe
adc
fstpl
loop
jp
test
hlt
inc
adc
inc
jb
js
mov
cwtl
pushf
fiaddl
mov
imul
jecxz
pop
mov
or
inc
shl
push
jnp
inc
js
icebp
or
imul
cltd
ret
sarl
cmp
mov
xor
mov
sbb
fsub
aaa
sbb
ljmp
jae
bound
or
mov
loopne
push
pop
xchg
popa
mov
sub
mov
lea
inc
dec
bound
push
mov
loopne
xor
ficoml
inc
push
stos
xchg
int
pop
into
dec
movsl
cmp
xchg
pusha
add
or
xor
enter
outsl
pop
adcl
mov
add
cmp
add
popa
loope
pop
stos
fstps
mov
mov
xchg
imull
out
inc
movsl
pop
inc
mov
dec
push
test
pop
insb
lret
repnz
jo
outsb
outsl
or
test
xchg
add
bound
add
xchg
int
popf
pop
pop
shlb
xchg
adc
stos
sub
push
das
outsl
mov
inc
mov
popf
cs
mov
or
jns
push
xor
jg,pt
in
sbb
out
sub
sub
pushf
adc
push
push
adc
ljmp
aad
movsb
adcl
mov
xchg
inc
loop
mov
sub
ja
aam
bound
inc
std
notl
push
sbb
sti
sarl
ficomps
jb
cmpsl
xor
rorl
jle
dec
add
adc
fidivrs
sbb
xor
popf
mov
dec
push
loopne
and
adc
cmp
pop
adc
dec
fldenv
adc
jbe
inc
xchg
int
fcmovbe
mov
mov
cmc
js
dec
inc
jmp
ljmp
inc
sub
xchg
outsl
insb
insb
lea
lret
mov
lds
xor
sub
ror
fs
dec
jb
fcompl
mov
push
mov
push
xor
lods
mov
inc
cmp
insb
repnz
rorb
add
clc
ffree
lcall
add
jmp
jecxz
loope
das
hlt
push
jp
or
dec
inc
jge
in
xchg
jnp
add
sbb
test
xchg
pop
jbe
iret
packsswb
adc
or
jne
add
in
add
movsl
xor
imul
xor
push
push
in
outsl
dec
cmp
inc
int
dec
in
fsubrs
shl
push
mov
das
repz
ds
iret
lahf
stc
mov
test
lret
cwtl
in
pop
lods
mov
adc
inc
lds
les
push
mov
pop
inc
sbb
bound
sarl
test
jo
lock
push
and
addl
pushf
lret
es
es
fstp
push
test
or
es
jae
ret
int
jle
aaa
mov
dec
popa
in
nop
outsb
mov
inc
orl
inc
pop
lcall
fsubrs
sbbb
pop
jb
xor
adc
in
add
jae
mov
test
push
insl
mov
jle
xchg
in
repnz
push
repnz
mov
xchg
pop
or
xchg
mov
sub
jp
mov
lcall
pop
orb
sbb
dec
popa
sti
mov
in
xlat
stos
aad
sub
pop
push
mov
xchg
xor
test
mov
pop
shl
add
jmp
jae
pusha
scas
cmp
push
mov
xor
out
pop
inc
lock
and
inc
fs
in
adc
mov
in
insl
xchg
adc
jnp
lahf
mov
jl
add
xchg
push
jae
xchg
mov
xchg
xor
scas
mov
lds
or
cmpsb
push
test
mov
arpl
mov
mov
pop
data16
sarl
jle
lock
bound
insl
das
cmpsb
in
pop
mov
cmp
stos
push
xchg
arpl
lcall
popa
movsb
sar
xchg
test
les
cli
mov
jl
push
mov
jb
cmp
pop
rcr
movsl
add
mov
dec
mov
into
mov
fldl
repz
cmp
inc
sbb
pushl
cmp
add
mov
rcrl
lahf
scas
mov
mov
pop
inc
xor
dec
inc
lcall
in
fdiv
imul
and
pop
pop
fs
std
sub
push
out
jecxz
and
xchg
pop
mov
dec
subb
or
ds
popa
dec
mov
cmp
ds
movsl
stc
jbe
jl
jno
add
xor
fmull
pushf
aam
cmp
mov
pop
sbb
jns
pusha
sub
xchg
lret
xchg
cmpsb
add
adc
mov
mov
mov
pop
mov
cli
cmp
jmp
sbb
nop
xor
pop
cmc
or
pop
xchg
push
orl
loope
scas
or
addl
cltd
mov
xchg
test
adc
popa
cs
xor
lahf
pop
mov
xchg
or
cli
mov
call
or
les
sbb
mov
add
inc
mov
rcll
pop
dec
stc
mov
leave
mov
movsl
loopne
mov
xchg
xor
inc
in
adc
js
bound
sbb
mov
mov
inc
in
sbb
stos
sbbb
push
mov
sub
pop
cli
adc
pop
in
lret
das
in
mov
aad
xlat
or
inc
fists
sbb
pop
out
mov
rcl
enter
insb
sbb
inc
inc
adc
jo
push
out
mov
lcall
and
divl
sbb
xchg
hlt
mov
int3
sbb
les
test
mov
stos
repnz
pop
mov
js
movsb
out
inc
push
or
xlat
test
ret
xor
dec
jo
imul
sbb
jmp
das
adc
mov
stos
fbstp
test
daa
addr16
mov
cmpb
dec
rol
lret
test
out
stos
pop
jne
test
push
mov
push
xlat
pop
jecxz
dec
or
and
mov
fucom
loop
es
in
push
push
les
xchg
mov
cmpl
dec
inc
daa
cmp
ja
jmp
out
dec
repnz
imul
xor
mov
lcall
cld
leave
arpl
add
loopne
je
movsl
and
rcl
xchg
mov
jb
ss
aaa
popf
add
cld
sbb
or
push
lret
ror
stc
fidivrs
mov
xchg
leave
inc
ljmp
inc
ds
jmp
pop
out
pop
out
push
mov
cmp
into
repz
adc
push
movsl
lods
mov
mov
adc
add
cmc
fistpll
jg
jecxz
imul
mov
enter
cmp
sbb
pop
ss
aaa
movsb
ds
pop
cmc
fildll
cmp
inc
pop
out
pop
mov
dec
dec
not
xchg
aad
pop
mov
je
pop
and
in
or
pusha
loope
aaa
ficomps
xchg
ja
in
aas
ret
push
leave
sbb
imul
ljmp
cs
cmpsl
shr
inc
add
out
mov
adc
mov
push
inc
cmp
test
push
add
gs
xlat
mov
xor
xchg
mov
xor
outsl
enter
add
iret
pop
lea
mov
jle
jae
push
lret
out
std
sahf
sbb
push
sbb
outsl
into
pushaw
and
xor
movsb
pop
mov
push
pop
or
pop
mov
jmp
jne
into
in
addr16
jbe
roll
jb
jno,pn
mov
ret
jge
dec
pop
iret
lock
cmp
mov
test
pop
scas
iret
out
sbb
addb
ret
repz
mov
or
mov
lret
rcrl
test
push
aad
adc
xor
xchg
jo
and
addr16
repz
popf
imul
popf
out
cmp
xchg
xchg
cld
filds
mov
std
cmp
cmp
int3
fcmovnbe
dec
cs
lea
xlat
dec
sbb
add
mov
xor
mov
stos
pmaddwd
lcall
enter
adc
imul
test
test
mov
popf
je
rcl
and
fcom
imul
push
icebp
xor
or
jp
fcmove
add
ljmp
dec
insl
rdtsc
pop
mov
pushf
mov
enter
comiss
inc
adc
dec
test
ds
jg
jbe
dec
call
int3
sbb
push
xchg
les
aas
pop
or
sbb
push
out
jo
loope
aam
inc
inc
xchg
adc
cmpsl
inc
mov
repz
pushf
pop
stos
cmp
test
adc
push
mov
pop
movsb
sbb
mov
lret
adc
clc
lock
clc
and
loopne
scas
sbb
mov
outsb
lret
jmp
addl
scas
stos
jg
push
test
test
aaa
inc
and
popa
xchg
testb
jge
fwait
lds
mov
xchg
stc
addl
ss
sub
dec
iret
and
jecxz
sub
pop
aam
loope,pn
test
dec
in
icebp
jbe
or
ja
adc
sbb
mov
adc
sbb
insl
mov
fstl
js
loopne
dec
cmc
sahf
cmp
lds
out
mov
test
sub
inc
int
test
mov
inc
push
ret
mov
jge
sbb
pop
sub
imul
cli
jno
mov
mov
push
out
mov
xchg
int3
mov
jno
dec
cmp
sub
frstor
or
mov
mov
shrl
daa
cmp
xchg
inc
mov
loop
fdivr
sub
mov
aam
daa
jne
add
ficompl
pop
inc
loope
into
mov
data16
xchg
dec
push
rcrb
pop
iret
jge
sbb
out
and
int
dec
mov
movsl
jl
scas
out
add
mov
das
mov
cmpsl
mov
call
testb
es
aas
and
mov
xchg
js
mov
mov
ds
stc
cmpl
daa
xor
aad
push
mov
andl
mov
jbe
mov
push
cli
push
in
add
or
lcall
loop
mov
jg
movsb
cli
aas
xor
pop
mov
test
ficompl
repnz
mov
clc
dec
fs
das
sbb
jbe
inc
cltd
add
ja
imul
mov
inc
jg
in
inc
mov
inc
nop
dec
mov
mov
xor
int
xchg
push
out
cmp
in
enter
imul
pop
sahf
fninit
inc
insb
sbb
sar
call
ret
out
loope
cmp
and
cli
sti
xchg
inc
cld
push
stc
inc
xchg
mov
or
cmp
mov
adcb
push
out
addr16
stc
xor
test
movsb
pop
lret
aaa
cs
sub
xor
dec
add
mov
insl
inc
mov
dec
sbb
jle
jo
aas
mov
ret
mov
sbb
ret
cs
mov
ja
mov
jae
sub
mov
inc
jb
shrb
and
pop
imul
cmpsl
add
sub
xlat
dec
fs
fidivrs
jg
outsl
das
sub
jb
mov
jo
pop
mov
movsl
mov
ds
loop
clc
cwtl
mov
repnz
push
mov
aas
jg
pop
mov
rcl
mov
mov
mov
divl
js
imul
call
and
mov
arpl
xor
les
mov
lea
dec
int
mov
jbe
imul
fsub
sahf
insl
cmp
sahf
movsb
fwait
orb
xchg
aaa
loope
adc
sbb
leave
fsubrl
inc
aaa
sub
call
mov
jb
pop
out
bswap
push
out
imul
cs
and
adc
mov
scas
and
xchg
jnp
js
fs
jl
roll
fdivrs
mov
out
sub
add
pop
fwait
das
adc
jne
or
push
lcall
cmpb
and
movsb
sti
push
fmuls
cmpsb
or
push
ja
mov
pop
je
imul
add
fcomip
cld
repz
mov
sub
cmp
pop
lea
insl
lahf
adc
adc
sub
adc
repz
divb
cmp
mov
testb
cmp
mov
and
popf
out
push
xchg
fidivrl
jg
mov
inc
xchg
pop
shrb
sahf
fprem
iret
and
lahf
mov
xchg
insb
inc
cmovs
int
dec
push
cli
outsb
or
push
sbb
cmpsl
push
xchg
ret
or
push
pop
push
sbb
push
aam
fsubs
sub
hlt
inc
je
in
jno
or
aaa
outsb
sub
or
rcrl
ficoml
dec
inc
or
add
sbb
xchg
fs
out
xchg
inc
aam
bound
shll
xchg
cltd
sub
push
dec
adc
push
aad
rclb
push
inc
jo
push
lret
clc
mov
leave
jbe
loop
lods
cmpsl
mov
pop
repnz
ret
dec
jge
sbb
aad
popf
sarl
arpl
sub
xchg
or
cltd
das
sar
daa
push
xor
mov
loopne
add
mov
inc
or
sbb
mov
jnp
cltd
js
jge
gs
jle
xchg
das
out
cld
mov
adc
sbbb
cmpsb
push
mov
fdivs
fsubrl
leave
dec
ljmp
inc
pusha
dec
inc
fs
aam
dec
xor
das
pusha
fdivl
mov
dec
mov
loopne
mov
scas
popf
mov
jb
cmp
cmp
adc
dec
cli
inc
mov
in
sub
sub
das
aas
data16
pop
jecxz
sahf
mov
or
push
lods
lcall
inc
sbb
push
jg
in
cli
ss
in
mov
or
xor
addr16
adc
push
stos
push
xchg
dec
int3
std
jbe
cmp
push
test
clc
in
adc
dec
mov
and
dec
jno
loopne
mov
dec
mov
insb
leave
push
mov
cmp
out
mov
mov
test
shll
repz
xor
pop
testb
les
dec
xchg
sti
cs
loope
adc
imul
push
rcll
jno
xlat
push
data16
or
stos
add
test
outsl
scas
push
pop
mov
dec
lods
stos
pop
ljmp
test
mov
mov
lcall
xchg
rorl
test
sbb
mov
mov
pop
and
mov
cmp
mov
mov
inc
mov
mov
or
jmp
shr
mov
in
daa
call
jecxz,pn
sahf
fwait
cmpsl
mov
notb
mov
imull
incb
xor
inc
dec
rcrl
sbb
jp
ja
and
mov
or
insb
jp
mov
daa
aam
push
add
ja
and
xor
pop
xor
out
xchg
icebp
dec
call
sbb
adc
jle
add
mov
xchg
xor
push
fists
add
scas
sub
sub
jnp
sub
fldt
jp
or
push
push
cmovg
aam
cs
adc
test
outsb
enter
push
out
mov
jae
daa
inc
insb
imul
push
jmp
iret
rolb
and
ja
movsl
lahf
add
scas
nop
pop
fildl
mov
jne
xchg
in
push
ja
movsl
xor
pusha
in
cmpsb
dec
inc
pop
gs
into
sbb
and
into
or
mov
and
and
rolb
iret
cld
imul
sub
in
push
jecxz
ret
mov
push
out
aad
xchg
dec
cmp
shll
dec
daa
jge
rorl
cmpsb
or
sbb
imul
jmp
fbstp
jae
mov
xor
xchg
daa
add
mov
mov
adc
fstpt
cmpsb
sub
out
push
inc
mov
push
dec
jp
ret
mov
jp
cmp
add
lcall
rclb
orl
pushf
xor
clc
mov
test
push
out
inc
arpl
mov
or
xorb
push
add
aaa
ficompl
xor
mov
addr16
cltd
neg
adcl
int
sub
or
rclb
mov
shl
in
sbb
jmp
arpl
daa
pop
pop
mov
sarb
jno
push
fdivs
mov
or
addr16
pop
jo
sbb
jbe
inc
push
xchg
or
xor
fdiv
pop
ja
lcall
push
mov
cmp
dec
inc
subb
jnp
pop
sarb
mov
das
in
xchg
fwait
shll
je
jne
fcoml
mov
push
cwtl
dec
xor
inc
sahf
sbb
add
mov
push
mov
jl
dec
dec
out
xor
cmp
lahf
inc
pop
xor
sub
jmp
cmpsl
dec
cs
out
in
dec
sbb
jge
or
imul
icebp
xor
sbb
jno
ljmp
scas
aas
mov
repz
aaa
sub
test
mov
mov
ret
fstl
push
lcall
adc
insl
push
pop
mov
adc
adc
dec
loope
shll
fsubrl
adc
mov
pop
test
mov
lods
scas
fwait
sti
jnp
xorl
or
inc
inc
arpl
fbld
ret
inc
test
in
sti
aam
mov
out
cltd
rcrb
sub
dec
fwait
repz
in
ret
add
push
mov
or
push
cs
fwait
popa
pop
in
push
shlb
lcall
cmp
negb
test
shl
shrb
insb
btr
mov
fs
xchg
je
and
xchg
xor
pop
fistpll
xchg
mov
aad
data16
out
mov
jns
scas
flds
imul
int
xchg
ficompl
test
push
mul
pop
pop
js
sub
cmp
dec
xchg
fmull
or
cmp
adc
repnz
dec
xor
loop
jae
dec
and
dec
ss
pusha
imul
push
mov
mov
mov
ljmp
test
shrl
lret
popa
jnp
cmp
adc
add
pop
ja
jmp
test
rclb
cmpsb
sbb
rolb
in
popf
sbb
pop
sarl
xchg
inc
movsl
mov
xor
shll
aas
cmpsb
lret
ss
das
xchg
call
stc
repnz
ss
and
sbb
cmpsl
inc
or
push
rorb
xor
fdivrs
jbe
aad
and
fcmovb
mov
jle
mov
xchg
sub
mov
call
or
mov
mov
dec
push
nop
sub
ret
push
dec
std
ficoml
add
lcall
mov
fs
and
and
pop
daa
pcmpeqd
mov
and
pusha
clc
sbb
fisubl
xchg
jne
sti
pop
dec
cmp
inc
test
inc
js
jnp
xchg
enter
mov
adc
xorl
cmp
add
cltd
outsl
cmpsb
xor
cld
loop
loop
mov
inc
in
decl
and
bound
in
aam
fisttpll
stc
lods
mov
mov
ret
cmc
ljmp
cltd
bound
sbb
xor
out
push
dec
add
aad
dec
test
or
xor
sbb
scas
sbbl
loopne
imul
imul
and
dec
nop
dec
sbb
in
into
shll
in
adc
jle
int3
roll
ficoml
jo
out
cmpsl
jb
mov
pop
enter
cmpsl
sub
pop
lcall
loope
mov
xchg
xor
push
out
mov
les
clc
es
out
and
push
add
out
dec
enter
faddl
addl
push
loop
popa
pusha
pop
mov
in
cltd
dec
fdivrl
stos
fstpl
and
xchg
mov
xchg
mov
std
xchg
mov
movsb
mov
jge
addr16
mov
fsub
leave
cs
loope
sub
adc
clc
arpl
fcoml
stos
sub
leave
mov
sub
jmp
sub
mov
repz
push
or
pop
push
leave
jnp
sub
sti
cmp
add
outsl
xchg
push
lods
jmp
pop
stos
ss
sti
lea
aaa
lret
inc
in
fsubs
xor
call
push
or
sub
lea
pop
pop
mov
mov
rorl
cwtl
mov
in
add
mov
loope
aam
sub
jl
pushf
lds
push
push
push
nop
jb
into
xchg
in
fidivl
dec
cld
adc
lods
test
and
js
aas
xchg
es
mov
into
scas
and
mov
insb
gs
sbb
push
mov
faddl
jecxz
mov
out
mov
loopne
sbb
dec
mov
adc
neg
push
out
adc
rorl
dec
std
das
movsl
lret
xor
rcrl
add
insl
rcrl
and
push
push
enter
outsl
mov
loope
and
icebp
negl
mov
shlb
ror
xor
enter
cmpb
iret
or
pop
push
out
ror
ficompl
inc
fistps
fnstcw
insb
jae
nop
mov
into
lret
fwait
push
jecxz
fildll
imul
jle
push
push
inc
in
inc
movsb
test
adc
gs
push
scas
push
lret
cmpsl
cmp
lock
mov
rolb
fisubl
cld
inc
add
jmp
inc
in
dec
popf
cmp
pop
adc
in
ja,pn
call
fistps
pop
dec
outsb
sar
ja
test
xor
lock
add
subl
lea
sub
ljmp
sbb
inc
lea
cmp
cmpsb
mov
out
mov
sbb
push
adc
add
lret
stc
fdivrl
rorb
test
sarl
or
les
push
xor
pop
fiaddl
loopne
inc
pop
imul
arpl
push
popf
std
test
cwtl
or
scas
dec
loope
cmpsl
scas
mov
push
xor
lds
pop
mov
push
adc
jns
iret
xchg
cltd
mov
ficompl
mov
movsb
popf
mov
sahf
movsb
inc
sbb
cmpsb
pop
notb
lret
js
lcall
mov
bound
lret
scas
cmp
ror
cmpsb
add
test
inc
pop
bound
mov
lret
jmp
dec
mov
mov
dec
cmp
cmp
mov
stos
test
dec
int3
pushf
test
ds
in
mov
push
in
test
or
dec
adc
xor
bnd
sub
out
stos
inc
xchg
cmpb
add
adc
add
test
pop
out
rcrb
jne
jge
cmovp
outsl
mov
imul
dec
mov
mov
lret
xchg
fcoml
mov
pop
or
ljmp
mov
lahf
js
loope
sarb
fcoml
mov
lods
stc
ret
movsl
jns
dec
cs
sarl
loope
push
push
test
xchg
mov
mov
test
cmp
cmpsb
ja
or
and
mov
int3
and
movsb
ret
pop
loop
mov
inc
addl
mov
dec
fwait
pop
rorb
adc
xchg
push
cmpsb
jae
scas
cmp
inc
push
loop
fnstsw
in
repz
scas
pop
adc
xchg
xor
push
sahf
fwait
or
sbb
clc
shlb
outsl
sub
fstp
mov
incb
mov
mov
call
ss
sbbb
arpl
dec
mov
jne
addr16
push
push
test
xchg
mov
sbb
jg
mov
clc
movsl
xlat
sarl
sahf
das
lods
lea
movsb
pushf
sub
mov
sub
or
xchg
leave
aas
xchg
test
adc
ja
jno
scas
dec
movsb
sti
pusha
outsl
mov
lcall
cmp
mov
cmp
sbb
inc
pop
sbb
in
dec
mov
test
int
dec
sti
sti
sti
push
dec
mov
pop
xor
xchg
jb
cmp
mov
push
andb
push
repz
shrb
daa
xchg
dec
aaa
add
xor
pop
cmp
add
bound
arpl
adc
pop
push
icebp
sti
testl
xor
add
shlb
or
repnz
inc
maxps
xor
mov
inc
std
stos
and
dec
loope
jg
je
adcb
push
push
lods
ret
sub
adc
ret
push
xchg
lds
decb
xchg
dec
mov
dec
or
mov
pop
sahf
cli
ret
dec
dec
jns
addl
repz
insl
push
pop
sub
dec
sbb
daa
dec
sub
lret
imul
or
mov
pusha
add
loope
push
add
add
push
xor
xchg
fmuls
mov
out
arpl
aad
inc
enter
xchg
or
sti
loopne
sub
pushf
push
dec
adc
jno
sahf
xor
sub
push
xchg
cmpsl
cmp
and
adc
sbb
test
push
mov
adc
or
fisubs
aam
push
mov
pushf
into
mov
cmpsl
adc
std
ljmp
mov
inc
xchg
mov
cmp
out
nop
mov
lock
repnz
iret
std
cmp
or
xor
push
sahf
fbstp
ja
loop
and
ja
push
into
add
stos
add
pop
dec
fwait
in
movsb
inc
enter
sub
insb
dec
pop
inc
bound
adc
pop
xchg
push
popf
or
shll
xor
mov
xor
or
and
sti
test
std
mov
dec
cmp
jmp
bound
js
sbb
xor
popf
sub
enter
popf
inc
pushf
adc
push
cmp
subps
xchg
add
dec
lods
mov
sti
mov
cmp
lds
fidivl
dec
imul
cmp
dec
and
cmp
out
ja
inc
cmp
faddp
movb
dec
mov
push
xchg
test
mov
sbb
cmp
pop
loope
adc
nop
inc
bswap
data16
les
pushf
div
iret
push
das
sub
mov
fidivs
lret
out
pusha
add
pop
imul
js
adc
and
mov
lds
jl
stos
js
sub
out
jg
imul
fstpt
test
das
das
out
pop
outsl
clc
repz
gs
dec
dec
inc
jmp
xchg
fsubs
imul
inc
mov
repz
push
mov
inc
jbe
lea
insb
fdivrl
dec
push
out
dec
mov
or
pop
jecxz
jmp
xor
lea
adc
cmpsb
xchg
push
imul
out
aam
rcrb
nop
mov
cmp
push
xlat
cmpsb
cmp
icebp
out
inc
popf
add
mov
int
jmp
or
mov
and
push
and
shl
mov
js
sub
mov
outsb
aam
es
outsl
js
rcrb
push
loopne
flds
shlb
outsb
jle
pminub
jmp
sub
pop
dec
repnz
sub
cli
inc
outsl
lret
pop
mov
mov
pop
mov
dec
lods
lods
push
and
aad
ret
and
push
shll
fisttpl
dec
je
shlb
notb
aaa
lret
mov
aad
or
jmp
pop
fdivs
loopne
adc
xor
and
ljmp
xchg
fbld
popf
ffree
iret
movsl
add
push
push
adc
out
dec
xor
iret
or
or
fscale
adcl
decl
mov
pop
xchg
xor
dec
push
mov
in
imul
mov
in
pop
ss
inc
cmp
fstps
pop
cld
scas
cmp
scas
sub
fdivs
mov
loope
mov
cmp
inc
jbe
push
sti
inc
dec
pop
sub
jne
es
mov
fsubp
sbb
xchg
in
sub
pop
outsb
add
mov
lods
shrl
mov
popf
jg
lahf
lret
xchg
sbb
mov
ss
xchg
mov
fsts
xchg
jns
cs
pusha
divb
add
stc
jo
dec
imul
ljmp
jnp
cli
cmp
jne
test
add
jp
xchg
sbb
dec
sub
mov
sbb
scas
pushf
sbb
pop
int
ret
xchg
mov
mov
dec
outsl
mov
mov
push
mov
push
mov
aad
mov
dec
dec
dec
xchg
imul
hlt
push
adc
into
cld
cmpl
or
ja,pn
adc
inc
push
into
loop
lret
jbe
push
sub
inc
outsl
add
sarb
pop
stos
loopne
mov
mov
enter
movsb
jecxz
loope
movsb
mov
mov
loope
out
outsb
xchg
sbbl
nop
fisttps
dec
scas
add
aas
mov
fsubr
sub
or
mov
xorb
adc
subl
inc
insb
mov
sub
lods
adc
mov
mov
rcl
sbb
mov
ret
xor
mov
pop
and
inc
aaa
dec
cmpsb
movsb
fs
test
jp
inc
fstpt
pop
jge
mov
clc
jno
inc
add
sbb
cwtl
xchg
and
jecxz
dec
gs
mov
mov
cmpsb
iret
mov
lret
sub
movsb
adcb
or
aas
fisubl
adc
popa
mov
idivb
out
sarl
pop
inc
push
push
outsl
inc
in
outsl
out
adc
movsb
scas
mov
sbb
jne
mov
stc
xchg
movsl
push
jb
ror
pop
lods
pop
and
test
mov
add
push
jns
loopne
xchg
jg,pn
pushf
imul
stos
ja
and
insl
mov
jns
mov
popf
stos
pop
sbb
adc
jns
shl
out
mov
lods
aas
mov
popf
inc
cld
xchg
or
lods
dec
jb
div
test
cmp
test
je
hlt
sbb
arpl
out
jne
in
push
xchg
enter
inc
leave
push
cs
xor
out
imul
push
dec
inc
push
dec
or
in
adcb
push
push
imul
leave
lret
ja
jp
add
js
ss
cmp
shll
xchg
mov
xchg
mov
dec
inc
xlat
clc
push
mov
js
pop
mov
mov
jno
push
repnz
out
pop
jns
adc
inc
test
cmp
or
push
lret
add
psubusb
jnp
lret
sub
popa
adc
inc
inc
insl
pop
out
push
jmp
xlat
jge
bound
push
or
push
mov
mov
adc
adc
movsl
xor
test
mov
adcb
mov
cmp
inc
jle
repnz
fwait
rolb
lea
pop
shlb
or
mov
std
outsl
push
sub
into
enter
je
rorb
sub
add
gs
shll
shll
ljmp
mov
inc
or
sub
dec
enter
adc
inc
inc
mov
inc
loopne
dec
inc
lds
sti
pop
mov
push
aam
pop
jbe
dec
dec
cmpsb
fstpt
inc
faddl
and
cmp
rol
jbe
push
fdivrs
mov
fsubs
sar
lock
sbb
sbb
bound
xchg
dec
add
ja,pt
jmp
jae
or
mov
repz
mov
mov
and
pusha
xor
call
mov
and
mov
jp
mov
jge
sar
xor
dec
repnz
add
call
cmc
movsl
and
orb
es
xchg
xchg
add
ljmp
adc
subl
sub
add
fidivl
jno
xchg
push
lods
popa
mov
mov
rclb
or
xchg
das
or
xor
loopne
pushf
pop
lcall
into
cwtl
push
outsl
sub
in
testb
out
inc
adc
or
xor
fstps
inc
or
push
xchg
nop
psrlw
and
jmp
scas
lfs
jb
pop
roll
in
sarb
movsl
lds
imul
in
cmp
inc
bound
and
xor
jae
rcll
mov
mov
shlb
sub
add
cmpsl
push
roll
xor
aad
mull
and
jbe
dec
xor
xchg
test
popa
xor
fiaddl
enter
cli
or
xchg
enter
cli
dec
or
popa
lock
outsl
fwait
sub
aas
xchg
iret
inc
js
mov
icebp
sahf
sub
std
aaa
insb
and
xor
cs
adc
dec
sub
mov
inc
ja
lcall
pusha
rclb
ss
dec
fisubl
iret
insl
jo
pop
pop
cld
jp
or
in
and
cmp
fsubl
test
fxch
pop
add
push
mov
lcall
sub
in
xchg
adc
jl
add
test
jno
push
out
ja
inc
jecxz
fs
cs
out
pop
outsl
mov
ret
das
pop
adc
pop
mov
dec
enter
push
xchg
adc
or
jno
pop
xor
mov
add
push
pop
int
push
mov
loope
cwtl
ret
shlb
icebp
sbb
scas
mov
cmp
cmp
sti
pop
iret
fucomp
loopne
cmc
jne
or
mov
repz
cmp
adc
aaa
repnz
or
mov
adc
jmp
push
gs
fdivrl
cltd
insl
mov
lock
fidivrs
dec
fst
push
mov
xchg
dec
pop
js
out
sahf
nop
loopne
sub
ficoml
inc
sub
pop
dec
push
inc
sbb
sbb
sub
setbe
sbb
aam
mov
sub
inc
std
ret
movsb
loope
cmpsb
xor
loop
enter
pop
mov
rcrb
mov
into
jp
xor
xchg
inc
ret
test
adc
xlat
hlt
mov
and
mov
roll
in
dec
add
jne
sub
sub
outsl
ja
lahf
cmp
and
jg
mov
int3
pop
jo
cmpsl
loop
lods
fistpll
mov
inc
testb
ret
mov
fstl
push
fsubrp
xor
cmp
xchg
outsl
clc
lret
adc
xchg
inc
dec
popa
pop
je
sbb
pop
gs
cmpsb
nop
je
sub
fnstsw
imull
push
pusha
popa
scas
ljmp
enter
jle
outsb
fistl
fildll
cwtl
out
call
mov
int
jle
outsb
ljmp
test
and
push
data16
xor
imul
ljmp
lcall
call
mov
mov
jnp
test
xchg
inc
and
cmp
js
push
daa
lea
inc
mov
pop
jp
mov
daa
in
mov
cmp
adc
repnz
out
mov
sbb
jp
jo
xchg
aad
idivb
xor
mov
dec
cmpsl
mov
lret
outsl
std
mov
pop
pop
andl
pop
dec
mov
cmpsb
negl
outsb
xchg
sahf
insb
sub
je
fdivr
dec
les
stos
popa
daa
adc
fbld
inc
push
nop
mov
sahf
jl
rcr
leave
pop
out
and
ljmpw
inc
sahf
mov
push
sbb
inc
adc
imul
call
pop
adc
test
and
loope
bound
cmp
bound
and
lods
sahf
std
xor
in
icebp
shl
adc
dec
leave
cmc
lret
iret
push
dec
fs
fisttpll
outsb
arpl
jp
outsb
xchg
stc
jl
jmp
nop
push
mov
sbb
xorb
pop
lret
hlt
cltd
push
or
ss
fiaddl
daa
jb
mov
ret
mov
insl
sub
jmp
cmp
enter
mov
dec
test
mov
push
mov
popa
scas
test
test
jg
test
ret
cmp
test
xlat
pop
push
mov
scas
and
cmp
mov
adc
lret
dec
mov
push
mov
test
clc
and
sahf
cmp
mov
pop
inc
push
shlb
call
loope
mov
out
push
jmp
inc
mov
es
outsl
outsb
fsincos
into
inc
xlat
jo
mov
xchg
shrl
cmp
sub
push
inc
lds
inc
mov
mov
mov
std
call
or
push
xor
jno
fs
faddl
jle
push
mov
shrl
loope
or
pop
dec
mov
or
sub
lds
in
hlt
xchg
mov
pop
shrl
jle
repnz
shrl
adc
sbb
pop
movsl
out
mov
dec
add
call
test
push
aaa
faddp
ja
adc
lret
movsb
addr16
sbb
stc
and
pop
xor
dec
test
push
adc
aaa
sub
pop
sub
inc
or
add
xchg
shrl
and
or
and
push
xlat
aad
ror
test
daa
push
stos
mov
stc
aas
push
nop
bound
jo
loope
add
mov
jno
push
or
adc
test
adc
cli
lock
inc
sub
fstl
xchg
xor
cwtl
aad
jmp
dec
cmc
into
or
sub
lcall
pop
in
push
or
mov
xlat
test
rcrl
adc
pushl
push
sbb
ja
jne
push
xchg
fwait
xor
in
push
pushf
rclb
pop
addb
mov
and
and
out
sahf
sub
popf
out
jge
push
loopne
or
test
fs
pop
jae
movsb
pop
pop
push
out
sub
sub
or
out
adc
xchg
lods
sbb
dec
sub
mov
xor
jnp
fs
add
mov
sbb
out
mov
mov
add
mov
shlb
pop
iret
push
in
adc
dec
sahf
xchg
bound
jge
inc
aaa
mov
test
push
out
clc
push
jae
jae
jmp
push
jnp
cli
mov
sub
xor
jo
cmp
or
xchg
cmp
dec
and
icebp
sbb
sub
stos
or
xchg
mov
dec
sbb
xor
fists
push
imul
cmpsl
adc
cltd
inc
xor
mov
les
push
clc
imul
bound
xchg
and
aam
dec
sbb
adc
and
arpl
adc
jae
push
scas
adc
cmpsb
ds
imul
lods
xchg
in
rorl
fcom
cmp
xchg
mov
sbb
pop
push
dec
repnz
xchg
in
outsb
xchg
pop
dec
shlb
pushf
test
idivl
divl
adc
fsubrl
fdivrs
xchg
cmpsb
rorl
and
sub
inc
enter
xorb
add
cld
adc
xchg
xor
repnz
mov
loope
mov
clc
movsb
or
mov
dec
dec
xlat
fsubrp
and
stc
rcll
sbb
adcb
xchg
mov
lock
mov
pop
ret
fs
xor
fs
daa
out
mov
and
mov
pop
test
mov
in
pop
jbe
dec
dec
adc
addr16
clc
mov
test
adc
pop
or
dec
mov
sbb
ja
add
adc
nop
popf
push
mov
and
enter
and
mov
jns
adc
je
in
aaa
sti
mov
cmpl
mov
in
icebp
movsb
sub
push
mov
pop
popf
gs
jbe
push
test
shrw
cld
jo
mov
out
hlt
lret
mov
js
jno
lods
test
fprem
adc
push
fs
pop
add
out
mov
xchg
add
xor
out
xchg
jno
outsb
cmp
sbb
adc
rcll
ljmp
sub
ja
adc
mov
inc
inc
xor
testl
inc
inc
pop
pop
cmpsb
mov
addl
add
orl
mov
in
push
clc
jbe
and
mov
out
jg
jb
pop
test
push
or
xor
cli
out
and
movsb
and
int
in
rcll
fmulp
xor
pop
in
or
nop
dec
add
ret
rol
jne
xor
adc
pop
mov
inc
movsb
mov
frstor
jmp
cltd
in
adc
adc
cs
dec
cmpsl
aaa
xor
fisttps
and
pop
pop
or
outsl
in
mov
stc
lahf
xlat
xchg
push
sub
pop
into
cmp
test
inc
loope
xlat
pop
lea
sbb
pop
cld
sub
sub
iret
lods
fadd
out
push
push
int
mov
ror
cmpsl
rclb
or
adc
or
movsb
call
cmp
out
dec
push
pusha
pop
jno
lea
mov
xchg
outsb
insl
out
js
sarl
or
and
ljmp
mov
data16
fstl
or
mov
fistpll
mov
xchg
aas
mov
aaa
pushf
std
testl
xchg
lods
ret
jae
pop
int
les
out
add
jnp
sub
inc
push
mov
xor
cmp
inc
adc
sti
dec
sbb
fwait
stc
int
cmc
jne
pop
std
fadd
pop
test
adc
mov
pop
mov
lahf
js
or
xchg
mov
push
add
pusha
sti
and
jle
outsl
mov
pushf
sbb
into
cli
test
cmp
pop
adc
xchg
fildll
mov
sub
sti
jae
in
gs
shl
inc
lock
dec
xor
adc
push
out
jle
pop
mov
pop
adc
add
setg
mov
cmpsb
mov
leave
sbb
push
imul
jo
mov
pop
fnstenv
pop
lds
call
popa
mov
cltd
dec
pop
cmp
ja
aam
shrb
sbb
add
mov
aas
addr16
arpl
rorb
mov
lret
push
sbb
subl
out
jo
sub
es
adc
add
adc
out
mov
pushf
dec
inc
aas
push
cmp
sbb
jmp
ss
jno
inc
dec
jo
incb
call
scas
dec
pusha
cmp
pushf
in
inc
lods
pop
dec
jns
add
ret
lahf
test
mov
in
faddl
aam
fsts
dec
in
call
mov
movsb
pop
fildl
push
ljmp
stc
in
cmpsb
push
xor
loop
test
sub
int
enter
jne
cmp
iret
stc
mov
cwtl
jecxz
cs
in
mov
stos
pop
adc
jmp
test
xor
int
cmpsl
jl
clc
orb
lock
jno
xor
lods
lret
js
cmp
shl
cmp
in
outsl
inc
adc
rorl
xor
sbb
lods
dec
or
outsb
and
sbb
out
pop
in
std
je
insw
roll
cmp
mov
adc
push
fsub
test
rorl
insb
pop
test
aad
pop
cmp
les
daa
xor
pushf
cwtl
jp
and
filds
shl
pushl
in
dec
lahf
cmp
pop
push
call
push
inc
push
iret
or
jge
test
and
push
gs
adc
sub
jb
outsb
dec
adc
rcll
xchg
imul
jne
jb
movsl
push
push
cmp
cwtl
add
sub
and
sbb
insl
out
into
push
push
out
xchg
pop
pusha
lret
jle
shlb
stos
xchg
aad
xchg
xor
icebp
les
adc
mov
inc
outsb
xor
daa
out
into
or
and
add
dec
aad
jo
pop
mov
in
mov
je
sbb
jb
mov
xor
mov
sub
inc
mov
mov
mov
cld
pop
push
lret
lret
mov
jge
lret
cmpsb
test
in
push
repnz
movsl
rol
add
cmp
mov
movsb
sbb
sahf
mov
ds
int3
scas
mov
mov
outsb
jbe
adc
push
mov
repz
pushf
sub
cs
cmp
pop
dec
mov
iret
mov
adc
or
aam
xor
mov
add
cmpsb
popa
sub
jnp
xchg
cmp
shl
push
pop
or
jp
filds
out
pusha
lods
gs
jne
xchg
cmp
into
insl
inc
jns
mov
in
xchg
loopne
dec
adcl
pop
mov
fcomi
outsl
jle
xchg
mov
and
roll
xchg
cmp
xor
std
repnz
pop
sub
lea
mov
push
mov
lahf
lret
and
and
push
mov
adc
jp
cmpsl
call
out
adc
inc
dec
dec
shl
js
mov
aam
xor
mov
pushf
cmpsb
add
popa
xchg
outsl
into
fdivrs
xor
mov
jne
incl
das
out
cmpsl
mov
mov
sub
loopne
nop
add
popf
add
loop
add
or
inc
xchg
push
das
pop
dec
xchg
dec
xchg
loope
out
cltd
sub
fcoml
push
lock
int
insb
inc
movsl
imul
mov
push
popa
mov
addr16
pusha
pushf
rorb
les
dec
nop
mov
add
jno
cmpsl
jnp
jns
push
pop
jle
cmpsb
test
sbb
rolb
push
shl
push
aaa
add
pop
enter
pop
movsb
cmp
pop
pop
jmp
fmuls
push
or
fsts
mov
in
jmp
pop
lret
ret
inc
lret
sub
subb
dec
stos
out
fldcw
and
adc
pop
inc
push
sbb
fwait
std
push
xchg
sahf
pop
adc
popa
fnstcw
xchg
xchg
js
fdivrl
mov
inc
xor
push
mov
cmp
imul
in
jl
std
push
pop
bound
xchg
int
movsl
push
clc
pop
jge
mov
std
inc
adc
icebp
mov
jae
push
daa
test
push
mov
out
popa
adc
pop
pop
mov
out
pop
daa
jne
jbe
bound
mov
imul
stc
xchg
dec
and
xor
cwtl
loop
xchg
loopne
popf
enter
repz
iret
outsb
pushf
clc
mov
pop
mov
or
das
and
cmp
js
inc
rclb
and
push
ljmp
mov
inc
jge
xor
push
ret
lds
jo
rolb
movsl
inc
ds
in
outsl
inc
cmpsb
cmp
add
cmp
arpl
int
push
xchg
vsubpd
xor
into
mov
loope
fidivl
scas
loopne
popf
dec
add
or
sbb
adc
or
lock
movsl
xchg
mov
mov
lcall
bnd
sub
jg
inc
sub
or
mov
mov
leave
and
add
lret
sbb
das
pop
inc
mov
sub
mov
test
mov
mov
stc
push
js
je
cmp
jae
pusha
cli
cmp
mov
mov
ret
out
ss
push
mov
pop
cmp
jnp
loopne
pop
jecxz
les
fldl
cmp
cmc
sub
mov
cmp
dec
data16
lahf
jnp
pop
lods
push
fcompp
gs
adc
hlt
jmp
pop
and
cmp
lea
jl
mov
sub
jne
and
jbe
out
sbb
dec
inc
adc
ret
shlb
and
pop
gs
or
sub
mov
test
test
jg
jmp
repz
sbb
inc
pop
jns
imul
leave
ljmp
or
jbe
mov
push
mov
rol
ret
addr16
negb
cmpxchg
neg
sbb
pop
push
repz
mov
lret
cmp
cli
jnp
inc
mov
daa
xor
jo
mov
test
xlat
push
mov
fdivrs
sti
rcl
fwait
cli
imul
push
inc
xchg
xchg
clc
mov
call
shlb
xchg
in
jmp
out
stos
xor
hlt
pop
cmp
lock
jecxz
dec
into
xchg
int3
stos
mov
adc
stos
outsl
mov
xor
xor
out
add
jecxz
mov
mov
rorl
fisttpl
movsb
aas
movsl
repz
fs
test
testb
mov
loope
cmp
pop
in
repz
dec
dec
jecxz
addr16
inc
dec
sar
or
in
aad
cmpsb
xor
pop
dec
mov
cmpsb
out
cmp
lret
push
rclb
sbb
repnz
mov
std
sub
leave
mov
adc
and
or
test
movsl
imul
add
pop
xchg
in
pusha
es
pop
into
aad
dec
inc
ret
mov
mov
cmp
hlt
in
add
ret
mov
loope
adc
out
lock
jo
lahf
les
daa
rcr
jno
mov
dec
fistpl
jecxz
outsl
and
std
stos
out
popf
popf
push
jp
iret
xchg
inc
xlat
jae
into
xchg
xchg
push
mov
lret
sahf
fdiv
jno
xchg
mov
pop
pop
jo
imul
push
icebp
bound
pop
shlb
fwait
cld
enter
js
in
leave
push
ficoml
mov
xchg
sub
andb
cli
test
aam
mov
inc
dec
inc
add
lret
sbb
ret
outsb
outsb
ds
orl
xor
jge
insl
inc
and
or
mov
or
out
or
jns
xchg
sub
enter
std
push
cmp
jecxz
push
adcl
mov
aam
jae
mov
add
pop
loope
fiadds
mov
addl
or
and
outsl
sbb
sbb
mov
jne
jmp
test
loopne
insl
jns
ficoms
cmp
add
xchg
jle
in
je
pop
ret
test
outsb
aad
dec
bound
scas
rorl
jmp
mov
push
movsb
aam
cwtl
jge
test
cmp
movsl
cltd
push
cmp
es
and
add
and
inc
test
aas
int3
and
push
xchg
gs
mov
out
sar
sarl
jg
jecxz
mov
lahf
fildl
adc
es
adc
pop
jbe,pn
mov
dec
inc
pop
jmp
int
adc
jg
lahf
xor
pop
xchg
mov
fimuls
test
sub
xor
ret
jb
movsb
nop
add
cmp
pop
shll
loop
xor
dec
lcall
or
pop
cmc
and
xor
xchg
mov
scas
push
lret
jbe
jbe
mov
imul
xor
fsubl
outsb
lods
push
or
hlt
jnp
ss
jg
inc
mov
loope
jp
cmpsb
ror
sbb
cld
ss
xor
fwait
adc
into
ljmp
inc
push
lret
fsts
stos
sbb
mov
insb
lret
insb
loope
mov
aad
insl
sub
inc
xlat
mov
incl
fs
inc
aas
pushf
pop
dec
and
mov
cwtl
cmp
loope
push
pop
pop
in
ret
pop
in
inc
cli
pop
orb
jl
adc
push
test
insb
ds
je
scas
add
lea
jns
cmc
je
add
fidivrs
hlt
jecxz
pop
lea
call
dec
add
mov
push
fsub
jge
repnz
test
push
popa
inc
repz
outsb
inc
shrb
jno
pusha
pop
jne
push
adc
ret
xchg
mov
pusha
xor
es
jno
push
xor
push
pusha
sbb
roll
pushl
or
loop
fdivs
mov
mov
ss
inc
stos
das
mov
inc
dec
shl
jge
add
mov
imul
dec
ja
xor
stos
fisubrl
addl
mov
or
test
cmp
test
jle
lods
dec
cmp
aam
dec
sub
push
dec
loopne
addr16
dec
fcomip
out
fcoml
mov
std
jae
cmp
js
ja
sbb
xchg
or
pop
int
dec
mov
ljmp
mov
jne
sbb
jns
cmp
and
cmp
jno
adc
inc
aam
jl
scas
mov
xor
dec
push
mov
or
xchg
xchg
imul
movsl
xor
and
push
loopne
cmp
movsl
xchg
mov
daa
jle
mov
dec
and
hlt
push
adc
jge
and
hlt
xchg
inc
jne
mov
pop
jno
add
dec
dec
pop
push
ja
dec
mov
inc
or
fldcw
or
lahf
lret
mov
out
sub
xor
dec
push
jge
in
jnp
inc
in
mov
je
rol
mov
cmpsl
hlt
mov
mov
push
subl
leave
push
push
push
and
std
test
ljmp
adc
fwait
shrl
enter
les
sub
jge
dec
adc
add
adc
pop
std
sub
ja
sub
sub
xchg
fisubs
lret
adc
sub
fwait
loope
in
aas
orb
inc
adc
clts
mov
out
xor
sbb
mov
mov
xchg
jne
mov
ret
popf
jl
jbe
in
push
in
pop
dec
mov
subb
jns
rclb
enter
sbb
dec
ss
imul
test
cmc
xchg
mov
push
sub
or
lds
pop
insl
andb
lahf
or
push
scas
in
sbb
jg
lcall
cmp
mov
push
mov
leave
adc
pop
pop
insl
sub
dec
lods
and
push
pop
enter
test
xchg
lock
xor
arpl
adc
lock
xchg
jne
sub
lock
dec
repz
add
push
cli
jno
iret
jbe
push
and
and
push
jae
xchg
pusha
dec
ja
cwtl
outsl
sti
push
push
xor
pop
push
jg
mov
sbb
mov
mov
inc
fmul
xchg
rorl
arpl
xchg
mov
fcoms
scas
mov
dec
xlat
nop
in
in
cmp
sbb
les
pop
cmpsb
xor
xor
jno
push
sti
xchg
pushf
cltd
das
mov
adc
cltd
outsb
add
mov
mov
shlb
pop
aam
add
jo
rorb
les
mov
dec
daa
xchg
int3
add
mov
pop
pop
test
sbb
push
fldl
push
in
ret
mov
cmpl
lcall
ds
test
jnp
or
in
shlb
or
xchg
add
xchg
nop
mov
hlt
jae
inc
add
jle
repnz
dec
or
push
mov
cmp
xchg
mov
inc
inc
nop
inc
jmp
xchg
in
jae
dec
cmp
sbb
mov
jmp
dec
jl
xchg
and
xor
imul
pop
or
mov
xlat
out
sbb
mov
fmull
push
dec
push
xchg
and
jecxz
loop
shlb
mov
add
push
sub
into
outsl
jnp
jne
nop
clc
mov
push
cs
and
fdivl
and
push
pop
mov
stos
test
ss
movsb
pop
lds
pop
outsl
pop
ds
imul
and
in
sbb
cmp
testb
aaa
pop
cli
and
faddl
xchg
aam
insb
mov
push
mov
ljmp
mov
inc
pop
cld
cld
and
jb
push
popf
mov
lds
mov
add
cwtl
inc
ds
ret
xlat
cmp
add
clc
add
in
adc
fsubrl
inc
sbb
mov
aaa
sub
outsb
cmp
out
icebp
in
popa
aaa
pushf
test
fistpll
sub
in
adc
mov
inc
ss
dec
movntq
movsl
loopne
dec
ret
cs
movsb
daa
inc
repz
out
les
jo
data16
push
mov
lods
iret
div
push
sub
cmp
in
clc
clc
cmovns
dec
jecxz
outsl
divl
imul
lahf
sbb
mov
xchg
mov
test
cmp
jge
aam
mov
jge
hlt
pop
sbb
repnz
inc
dec
xchg
test
iret
pusha
enter
adc
sub
and
ret
imul
mov
mov
mov
imul
sbb
mov
pop
bound
sub
push
cmp
inc
and
cmpsb
xor
push
sbb
push
push
rol
sub
push
jbe
mov
sahf
and
rcrb
into
loopne
pop
xchg
popf
sub
mov
mov
adc
cmp
jno
sarb
mov
pusha
popf
pop
int3
sub
lahf
add
jnp
pusha
cmp
pop
out
mov
xchg
daa
lret
outsb
inc
test
pop
rcl
aaa
mov
rcrb
and
test
cwtl
jge
adcb
mov
clc
push
daa
mov
jb
sbb
mov
xor
imul
shl
aaa
add
movsb
sub
or
in
cmp
push
sbb
xor
sbb
lcall
lea
mov
dec
dec
mov
movsb
adc
rorl
sub
lret
dec
push
iret
mov
ret
js
or
lea
or
fwait
and
mov
jo
cmp
sahf
arpl
je
call
dec
add
imul
xor
rorl
int3
mov
mov
repnz
test
shll
movb
not
loop
lods
inc
rorb
push
xchg
notl
cmp
ss
int3
int
scas
cmc
xor
fwait
cmp
imul
cmp
fs
je
sbb
push
ss
pop
xchg
pop
notl
inc
mov
mov
pop
inc
mov
fwait
repz
adc
xchg
mov
je
outsl
pop
jp
hlt
mov
aad
push
sbb
je
sahf
and
arpl
xor
ds
jl
sub
or
push
ret
mov
inc
push
gs
lret
add
icebp
das
addr16
add
jae
mov
mov
adcl
iret
movsl
int3
imull
loop
xor
ret
lods
insl
add
mov
pop
jne
mov
inc
daa
xchg
inc
cmpl
cmp
jmp
ss
gs
adc
out
test
dec
inc
mov
or
and
lcall
jns
fxam
je
pop
int3
ds
add
mov
sbb
or
xchg
ficoml
scas
sub
icebp
pop
pop
fwait
sbbb
cmp
mov
ret
dec
push
jge
and
fildl
inc
add
popl
jl
mov
popa
dec
xchg
jb
mov
scas
outsb
pop
fcomps
cmpsl
sub
pop
dec
rolb
jne
cwtl
cmpsl
cmc
adc
jl
jle
cmc
jnp
es
stos
jmp
inc
fs
adc
addr16
add
int3
and
xchg
lods
or
jmp
pushf
pushf
iret
leave
mov
movsb
add
mov
movsl
inc
jg
push
push
and
jo
xor
js
rclb
sub
cmp
cmp
jmp
cmc
outsb
jbe
icebp
mov
icebp
pop
mov
stos
add
rorb
inc
fldz
pop
scas
iret
shrl
adc
inc
xlat
dec
mov
and
scas
pop
mov
daa
popa
rcr
fldenv
mov
pop
in
add
sti
fisttpll
xchg
fld
mov
idiv
jns
xchg
out
out
cmp
xor
pop
sbb
push
push
mov
lock
loop
movsb
lret
imul
xchg
xlat
add
nop
out
pop
xor
cwtl
push
sub
add
pop
movsb
pop
xchg
xchg
push
cmp
ret
jb
dec
movsl
dec
je
xchg
pop
inc
leave
mov
xchg
pop
cmp
fs
push
lea
mov
jl
dec
sbb
fldt
movsb
cmp
dec
cli
cmp
enter
test
lret
adc
imul
jno
scas
daa
repz
pop
xor
mov
and
push
popf
lahf
adc
jmp
fwait
add
ja
push
xor
mov
jecxz
xchg
fisttps
mov
mov
data16
and
in
lret
add
in
sbb
pop
repz
xor
mov
imul
jo
sub
fldt
and
rclb
sub
xchg
dec
mov
rcll
adc
push
push
mov
adc
inc
mov
pop
dec
sbb
adc
bound
mov
cltd
hlt
rcrb
xlat
jo
enter
pop
fwait
xchg
mov
push
ds
in
sub
push
inc
pop
insl
adc
sub
sub
jle
int
and
fwait
shlb
fs
xor
dec
sub
xchg
ror
xchg
jo
in
mov
ficoml
jbe
dec
cmp
sub
sbb
gs
scas
scas
ror
mov
jnp
ret
push
ja
loopne
mov
xor
insb
icebp
sub
mov
fstpt
ret
stos
push
lock
stos
ljmp
outsb
std
insl
xchg
fidivrs
push
jp
aas
jno
pop
mov
add
in
ds
inc
dec
jnp
mov
jmp
cltd
pop
add
sub
aas
je
filds
xor
mov
fildll
lret
xchg
xchg
add
mov
and
pop
mov
rcl
fbld
movb
dec
xlat
mov
push
add
jb
mov
jne
outsb
outsb
xchg
fdivs
std
pop
add
mov
mov
in
pop
sub
lods
xchg
sahf
lret
dec
je
mov
je
and
xchg
mov
jecxz
mov
xor
dec
cwtl
jae
inc
push
sub
call
rorb
sub
jge
cli
xchg
jne
cmpsb
enter
cwtl
dec
jne
data16
xchg
ja
dec
mov
repz
inc
leave
and
mov
jp
sbb
lods
fsubl
mov
push
stos
ficomps
mov
je
outsl
pop
int
add
xor
ss
call
mov
clc
nop
push
xchg
mov
loope
pop
xchg
daa
sti
xor
call
pop
adcb
ss
lods
cmp
sub
aaa
notb
mov
testl
lods
aam
cmp
xchg
dec
push
jge
mov
xchg
call
jge
dec
int
dec
es
xchg
add
push
lret
mov
stc
jae
movsb
mov
add
and
ror
mov
aas
mov
mov
repnz
pusha
fcompl
ficomps
jle
add
jbe
mov
dec
out
jmp
xchg
lods
jp
sub
aad
ret
jno
push
adc
mov
pop
aaa
shrl
lahf
mov
jno
cmp
aad
mov
add
pop
ljmp
add
and
jo
push
jae
xchg
shlb
int3
push
bswap
cmc
pop
and
jecxz
mov
fwait
sbb
fs
cltd
adc
dec
push
fisttpll
repnz
jne
andl
bound
push
adc
xchg
jmp
ljmp
imul
clc
mov
xchg
jmp
daa
cld
int
and
test
xor
iret
js
js
cmp
mov
sbb
xor
adc
out
push
push
dec
std
xchg
pusha
orb
xlat
sbb
inc
imul
out
mov
aam
push
cmp
in
mov
fwait
and
jg
mov
push
repnz
pop
mov
xchg
push
insb
jae
and
jnp
mov
push
adc
inc
cmp
lock
icebp
imulb
test
cmpb
push
adc
mov
add
sahf
gs
ss
dec
lcall
sub
in
bound
xchg
cli
pop
mov
mov
out
es
push
je
xchg
lcall
add
mov
mov
lret
mov
dec
xchg
pusha
scas
and
xor
mov
int
call
ja
pop
push
in
xchg
addr16
int3
out
or
mov
push
or
dec
in
xor
stc
adc
lcall
sub
xchg
cld
loopne
fadds
or
mov
cmp
jnp
data16
ds
sbb
and
jp
pop
push
cmpsl
mov
sub
pop
xchg
sbb
push
outsl
xchg
rcrb
movsb
xor
iret
hlt
shrb
cmp
mov
test
add
iret
and
xor
mov
add
cmp
pop
xchg
movsl
cmp
dec
outsl
loopne
push
lahf
mov
or
dec
ds
and
pop
fwait
cmp
in
aas
and
and
mov
and
call
sbbb
mov
fld
jbe
mov
daa
frstor
mov
or
ja
mov
push
mov
lods
stos
pop
cld
cmp
mov
add
clc
sub
pop
les
ret
xchg
negb
mov
dec
in
mov
js
inc
popa
or
out
aam
pop
test
outsl
shlb
scas
out
hlt
fistl
inc
pop
mov
mov
lcall
push
xchg
cmp
or
mov
dec
jp
mov
roll
mov
or
jp
fildl
xchg
push
pop
xchg
aad
fisubrs
repz
add
loop
scas
int3
sub
lahf
adc
in
cmpsl
dec
add
ljmp
inc
adc
movsl
cmp
dec
jmp
fnsave
lret
dec
push
repz
xchg
test
mov
mov
jl
testl
xor
ret
xor
mov
push
stc
insl
adc
cld
lods
add
cmp
test
sub
lock
lods
ja
pop
sbbl
push
push
shlb
xchg
jmp
adc
fisubrs
cmp
popa
add
jge
in
ret
test
and
sahf
mov
ljmp
iret
ja
mov
out
aaa
add
fwait
fs
enter
dec
cmp
sub
sbb
pop
or
xchg
bound
roll
or
mov
jmp
imul
cmp
mov
mov
xor
dec
hlt
xor
lods
push
and
inc
into
in
fnstenv
adc
hlt
aaa
dec
xor
push
jo
test
inc
cmpsb
or
lahf
ret
lds
sub
mov
or
insl
jae
js
pop
popa
test
pop
dec
and
sbb
nop
and
in
leave
jo
cmc
mov
loop
imul
push
call
sbb
cli
add
aas
mov
mov
loope
push
aaa
scas
mov
or
adc
push
ret
jb
jecxz
xchg
cmp
decb
push
and
or
push
clc
mov
in
adc
jb
loopne
ds
xor
je
in
outsb
sbb
jno
subl
cmp
mov
ss
std
cmp
hlt
stos
movsb
cmp
cmp
xlat
mov
hlt
sbb
mov
and
loop
push
insl
sahf
cmp
in
sbb
sbb
or
les
mov
test
in
es
lods
sbb
inc
jb
jae
mov
pop
pushl
xor
push
adc
pop
inc
les
popl
fdiv
sti
lea
insl
lock
shlb
lahf
lea
push
add
outsb
pop
in
adc
ja
cltd
fnstenv
mov
cmp
adc
outsb
mov
cmc
int
inc
push
int
jno
insl
sub
inc
push
mov
addr16
sbb
and
test
pop
and
cmc
outsb
pop
sub
push
inc
clc
leave
sub
iret
sbb
sub
rcrl
cli
fcompl
fisubrl
add
jne
dec
add
push
rorb
test
sbb
test
cmp
gs
xchg
xchg
inc
gs
arpl
les
rcrl
push
in
lock
sub
dec
lock
dec
mov
inc
lcall
and
mov
mov
popa
aam
xchg
in
pop
popa
sub
add
cmp
call
shll
hlt
out
into
inc
push
mov
hlt
imul
lcall
or
in
repnz
inc
xchg
jp
xorl
jge
lods
push
add
mov
arpl
jnp
lock
xchg
ret
and
ds
and
jl
mov
pop
mov
sub
adc
push
cltd
cmc
inc
cli
mov
int3
xor
pop
dec
into
pushf
fldenv
ds
jbe
mov
and
mov
fcomip
mov
ljmp
add
pop
cwtl
adc
xchg
cmpsl
shr
pusha
pusha
xor
sub
adc
sbb
lea
pop
push
lret
and
sarl
or
add
cltd
sub
loopne
and
jp
js
push
repnz
outsb
js
arpl
pop
leave
int3
add
pusha
icebp
rol
stos
mov
pop
scas
xor
add
arpl
fsub
rol
mov
movsl
sub
jb
mov
aam
add
lcall
lods
mov
pop
inc
sbb
mov
mov
mov
je
fistl
inc
fcoms
xor
add
and
inc
jae
cwtl
repz
mov
mov
addr16
addr16
lds
out
sub
dec
jno
dec
loope
aaa
pop
mov
ret
push
icebp
xor
jge
fsubs
sbb
and
mov
lret
test
dec
pop
aas
movsb
je
mov
bound
dec
xor
fisttpll
sbb
out
jae
add
or
in
fwait
jae
pop
pop
shr
or
push
je
test
shlb
ds
xlat
sbb
mov
mov
push
dec
sbb
cmc
insb
lods
mov
loope
ss
cs
and
mov
ljmp
gs
arpl
cmpsl
lods
test
and
dec
es
pop
adc
and
call
in
mov
push
inc
cmpsb
adc
jp
insl
ret
add
mov
mov
sbb
icebp
test
ds
add
and
dec
xchg
push
push
loope
jge
and
sbbb
adc
lods
push
jbe
imul
push
pusha
adc
mov
fstl
bound
cmp
out
imul
movsl
idivl
test
stc
mov
and
test
jns
negl
sbb
xchg
filds
mov
cmp
jp
dec
pushl
ss
cmp
mov
inc
imul
adc
jo
sti
sbb
jns
xchg
mov
pop
inc
cmp
jbe
fcoms
stc
ja
testl
sbb
pop
iret
sub
std
xchg
daa
mov
cli
pushf
xor
in
cmp
pushf
enter
mov
cmpsl
testb
ret
dec
mov
ss
pop
mov
push
push
cmpsl
xor
xchg
pop
pop
aad
jge
add
out
test
popf
bound
jb
shrb
sub
shr
js
ficomps
lret
push
xchg
inc
mov
ret
aam
push
lret
cmp
adc
sbb
stc
or
xchg
fs
sub
les
lds
getsec
push
xor
in
mov
int
stos
scas
outsb
aam
mov
mov
iret
fstpt
mov
dec
pop
jbe
xor
fstpt
adc
out
mov
in
mov
imul
push
and
cs
push
ficoms
adc
mov
mov
popa
stos
jnp
inc
mov
cmpsb
pop
stos
add
aas
pusha
test
mov
out
jmp
xorl
mov
or
add
pop
inc
mov
or
ror
sub
lock
xchg
xchg
add
or
inc
adc
mov
and
fs
sub
js
stc
adc
out
mov
imul
int
xchg
int3
cmp
push
adc
xchg
leave
push
pop
mov
lcall
cli
leave
js
inc
jl
repz
mov
shl
or
or
inc
fldz
movsl
dec
push
and
enter
xor
fstpt
xlat
imul
cmp
pop
mov
bound
dec
and
mov
insb
jo
pop
dec
push
outsb
inc
mov
stc
mov
push
push
and
cmpsb
jmp
hlt
subl
sub
fwait
dec
push
jmp
dec
sbb
mov
push
jp
outsl
and
call
ds
or
mov
add
test
mov
sub
loopne
shll
out
mov
or
cwtl
or
jp
cmp
jnp
daa
cli
in
iret
movsl
adc
dec
in
int3
xor
and
lret
push
bound
sarl
mov
push
ret
push
negb
inc
nop
fstp
sub
push
xor
jge
pop
jo
call
jae
in
xchg
cld
jecxz
or
pop
lahf
js
jmp
mov
sub
fimuls
gs
ss
inc
rorl
add
in
sub
aaa
lods
pop
cmp
or
add
xchg
pop
daa
shll
aad
sbb
ret
pop
fbstp
outsl
repz
ljmp
mov
daa
in
in
imul
or
aas
stos
jns
rcl
lods
push
popa
jno
mov
xchg
mov
je
aas
bswap
stc
addr16
sub
mov
dec
loop
pop
fistpll
lcall
mov
jae
push
inc
in
cmp
push
push
fldlg2
or
sub
pop
aad
sbb
ss
pushf
mov
insb
fistl
fldl
sbb
cmp
xchg
cmp
mov
xor
mov
rcrl
je
mov
xchg
mov
sbb
out
mov
leave
push
sar
sbb
aas
bnd
bound
push
loopne
and
or
stos
xchg
lea
and
cmp
scas
stos
ljmp
mov
jo
xchg
pop
push
shl
ret
rorb
xchg
pushf
sub
cmp
movb
ss
pop
xchg
ds
dec
mov
sub
rcl
in
cmp
inc
mov
mov
or
outsl
pusha
adc
push
xchg
jmp
jge
outsl
ficompl
push
dec
push
jne
cmp
imul
leave
xor
mov
pushl
lock
scas
stos
cli
xchg
jnp
out
push
xor
or
and
pusha
pop
pop
in
mov
shrb
mov
jnp
outsl
out
cmp
rcrb
js
inc
xchg
mov
add
jge
fnsave
push
pop
add
xor
mov
int3
xor
pop
sbb
xchg
jle
jle
pop
out
je
sbb
int
push
xchg
hlt
add
in
scas
mov
cwtl
in
push
push
cmp
insb
mov
cmp
cli
sbbl
dec
in
idiv
mov
inc
xchg
push
mov
lret
add
push
ss
lock
lds
ret
fwait
add
inc
mov
leave
sbb
sbb
sub
ret
out
mov
xor
sub
inc
or
mov
add
mov
mov
out
sbb
cmp
cmpb
push
insb
adc
or
xchg
mov
cmp
fwait
pop
daa
pop
jb
xchg
int
loope
call
xor
in
mov
ljmp
test
mov
jp
jb
movsb
sbb
js
add
fldcw
hlt
push
inc
sbb
daa
sub
stos
mov
shl
out
test
add
and
ficoms
les
inc
insb
shll
leave
mov
stos
ficomps
mov
pop
sti
sbb
mov
fisubrl
jno
dec
add
xchg
es
lret
or
jg
imul
and
mov
rclb
jp
dec
mov
pop
data16
into
push
push
lods
cmp
shll
add
cltd
cli
pop
aad
jmp
add
fisubs
xorl
dec
out
das
inc
movsb
push
or
stos
cmp
insb
push
or
jne
xchg
and
ret
xor
push
push
xlat
ja
iret
pushf
push
sub
mov
js
or
xor
fwait
xor
sub
dec
int
adcl
or
pop
lret
lods
add
sub
mov
cmp
push
aaa
pop
pusha
imul
push
cli
addl
xlat
fistl
repnz
push
mov
pop
popf
lcall
shrb
pop
stos
xchg
ds
enter
arpl
cltd
out
add
test
sbb
es
fsubrl
sub
jg
cld
dec
in
scas
pop
adc
and
mov
jle
push
mov
aam
je
and
xor
adc
mov
xorl
mov
mov
pushl
fwait
insl
xchg
sti
jns
xor
adc
in
xchg
cltd
jo
outsb
push
pop
insl
scas
xor
in
mov
and
loopne
test
mov
push
leave
pop
jmp
in
or
out
shrb
les
xchg
mov
cmpsl
jne
add
or
jle
cli
cmpsb
aaa
dec
insl
jae
jge
das
xchg
data16
push
mov
inc
push
prefetchw
les
imul
sbb
testl
pop
jb
push
in
rorl
xor
cmp
xchg
popa
lcall
push
sub
sub
outsl
out
xchg
mov
in
leave
ror
das
push
jge
cmp
clc
sub
fmull
sbb
in
cmp
adc
adc
inc
mov
test
xor
pop
repz
push
out
dec
repnz
or
aad
mov
inc
ret
cltd
ds
insb
in
fdivl
js
mov
mov
das
call
bound
pop
lcall
out
add
dec
dec
lods
mov
add
mov
das
loopne
sbb
fcomps
cld
inc
inc
sarb
test
popa
xor
in
shrb
in
xchg
jo
hlt
xorb
cli
out
ljmp
lret
cmp
push
add
fwait
jns
or
or
mov
dec
inc
xchg
mov
leave
dec
adc
fidivrs
mov
dec
lret
push
aam
in
jno
enter
dec
mov
ror
dec
sahf
pop
lea
push
adc
scas
cmp
sbb
xor
jp
push
cmp
mov
mov
pop
and
leave
dec
pop
ds
clc
inc
push
repnz
pop
subl
rcll
lock
xor
sub
lcall
iret
je
sub
fisubrs
mov
xchg
sub
enter
aaa
mov
push
dec
inc
inc
into
test
in
rol
jb
sbb
dec
aas
scas
mov
jl
xor
lret
jge
aad
mov
pop
enter
testl
sub
mov
cli
or
xlat
sbb
xchg
rolb
mov
jae
dec
inc
lret
ja
sbb
fistps
scas
sub
jo
cmp
mov
sub
idiv
lret
pop
pop
bound
rorb
cmp
dec
roll
jb
mov
jbe
repnz
fnstsw
adc
aaa
jnp
ljmp
jg,pn
push
pop
mov
bound
xchg
movl
mov
pop
or
add
int
repz
lcall
jg
jmp
mov
pop
imul
cmpsb
jg
sbb
cmp
cmp
montmul
cmpsb
test
std
add
dec
std
push
dec
adc
fldcw
and
repnz
push
cwtl
xchg
testb
sub
cs
and
jmp
xor
xchg
fisubrl
jnp
mov
and
cld
fwait
adc
mov
inc
popa
es
int
push
push
ljmp
out
adc
leave
and
mov
daa
sbb
js
jge
mov
pop
jmp
or
scas
popf
xlat
mov
aad
mov
mov
movsb
push
adc
aaa
enter
inc
mov
sub
test
push
xchg
push
out
mov
cmpsl
lock
jge
sti
jge
test
ja
popa
xchg
push
enter
and
or
mov
jbe
les
mov
insl
popf
leave
outsb
adc
test
inc
mov
cmpsb
lcall
frstor
dec
notl
push
xchg
cmp
cmp
pop
mov
push
pop
addb
xor
in
or
jecxz
inc
mov
xor
xchg
aam
nop
inc
adc
mull
or
mov
test
jle
cmp
sti
jp
sbb
in
and
mov
cmpl
mov
add
push
shlb
mov
mov
es
push
or
mov
imul
lock
loop
mov
cmp
cmp
fisttpl
movhlps
jbe
xchg
loop
mov
pop
dec
jbe
pop
jno
cs
sbb
adc
add
pop
mov
pop
push
addb
jmp
jmp
jb
pop
add
mov
divps
divb
cwtl
push
mov
scas
mov
fistpll
jb
inc
je
mov
push
sbb
sub
mov
mov
loope
mov
push
mov
pop
mov
and
cs
push
sbb
jle
mov
dec
fldl
jge
add
mov
lock
rcrb
cwtl
push
sarl
insb
insb
pop
add
js
push
jg
int
push
sbb
push
dec
out
pop
int3
orb
lret
test
iret
cmp
dec
xchg
fwait
push
mov
mov
jns
sub
sub
mov
mov
jbe
movsl
push
cmp
adc
push
sub
enter
arpl
sbb
jp
dec
or
add
xchg
in
mov
sbbb
adc
insl
mov
int
fwait
adc
mov
pop
adc
xor
aaa
push
or
leave
cmc
mov
cmc
jle
add
mov
aad
xor
add
dec
leave
cmpsl
inc
fnstsw
mov
es
aaa
inc
arpl
push
sub
xchg
idivl
cmp
ret
movsl
sbb
mov
das
enter
mov
jecxz
bound
xchg
sub
jbe
cli
icebp
popa
dec
popa
test
jo
popf
test
je
hlt
xor
and
xor
cmp
adc
jmp
add
jp
adc
sbb
jl
fidivs
cmpb
xor
out
pop
aad
les
cmc
sbb
mov
pop
fisttps
enter
mov
movsl
mul
cmp
pop
add
test
out
icebp
das
mov
mov
sbb
xchg
shr
lret
mov
movb
adc
leave
adc
lods
shr
sbb
mov
or
inc
push
in
mov
sbb
or
mov
callw
mov
test
cmp
aas
dec
test
pop
jle
aaa
mov
pop
jmp
adc
cltd
adc
inc
bound
mov
das
dec
in
sbb
loope
in
or
aad
andb
cmp
enter
imul
dec
je
pushl
daa
bound
out
inc
scas
js
punpckhwd
in
mov
sub
ret
jl
insl
cmp
movsb
xchg
and
fwait
and
aam
push
adc
pushf
pop
roll
arpl
cltd
push
ss
mov
fisttps
scas
sub
fstpt
ds
or
push
pusha
lods
push
daa
lods
adc
mov
xchg
ret
jns
cs
aad
adc
int
xchg
dec
or
int
popl
add
adc
mov
scas
outsl
add
xor
dec
scas
xorl
sub
pop
mov
sti
cmp
fwait
es
cmp
or
das
pop
mov
test
xor
xlat
out
push
mov
jo
test
loopne
and
sub
inc
inc
lock
cwtl
stc
push
sub
ret
shlb
out
jnp
adc
cmp
pop
push
insl
sbb
push
inc
xchg
das
out
and
test
xor
sti
mov
sub
lret
dec
cltd
ds
dec
in
dec
inc
mov
out
into
dec
test
sub
push
into
mov
jbe
xchg
pop
mov
sub
mov
mov
sub
pop
dec
fcomps
in
mov
dec
xor
test
shrb
into
pop
lods
inc
or
inc
jbe
mov
mov
mov
or
mov
xor
or
push
or
outsb
loope
repnz
jecxz
xchg
mov
daa
aam
into
or
ret
int
xchg
push
loope
inc
clc
insb
mov
cs
pop
scas
out
dec
fsubrs
dec
test
js
push
popa
xor
sub
cld
test
out
scas
sbb
int
and
pop
cmp
test
add
mov
dec
scas
and
cmova
mov
xlat
stos
rcr
mov
fdivrs
and
iret
adc
hlt
fdivp
mov
cmpsb
pop
xor
push
push
jmp
dec
push
insl
pop
cltd
clc
aad
pop
jmp
dec
pop
xchg
shrb
fiaddl
jp
jno
sub
inc
dec
xchg
hlt
test
test
add
arpl
mov
inc
add
lods
outsl
inc
out
sahf
pop
repnz
in
and
stos
sub
inc
cmovns
int
ljmp
push
push
pop
stc
mov
mov
shrl
pop
cmpsb
stos
push
fsqrt
adc
mov
into
mov
add
push
outsl
cmpsl
mov
push
fmulp
pop
and
dec
cmp
lods
lock
std
mov
test
scas
out
es
sbb
sbb
xchg
in
das
mov
or
popa
stos
push
test
call
push
mov
filds
xchg
leave
xor
jae
dec
mov
int
or
sbb
adc
push
cmp
lods
out
inc
fwait
adc
cltd
mov
stos
shrb
lods
lahf
push
fcoml
cmp
mov
jbe
adc
jmp
out
mov
into
xchg
mov
sub
sbb
hlt
push
imul
adcb
into
insb
js
and
cmp
mov
pop
sbb
pop
cmp
cmp
lods
movsl
and
and
jp
mov
shr
inc
push
das
dec
in
push
test
mov
aam
adc
mov
out
inc
jae
bound
mov
push
jb
cmc
mov
ljmp
test
dec
add
data16
mov
pop
ret
aam
fists
arpl
mov
lahf
iret
adc
daa
and
popa
or
jmp
cs
gs
int
call
adc
or
xor
mov
and
jecxz
push
or
clc
insb
lds
mov
das
mov
in
or
out
fwait
jne
mov
push
jmp
test
xor
sub
push
mov
push
cli
scas
icebp
jp
jbe
mov
xor
pop
arpl
add
fmul
xorl
aam
fs
mov
and
outsl
inc
pop
mov
xor
test
mov
sub
mov
jo
inc
mov
mov
rcll
pop
push
adc
testl
nop
addb
mov
cli
xor
xor
mov
sbb
sbb
xor
leave
aaa
xchg
aad
dec
in
push
das
stc
lahf
mov
repz
lret
ljmp
mov
or
icebp
mov
push
in
loopne
lock
sbb
and
mov
and
insl
mov
testl
dec
mov
fnstcw
inc
mov
movsl
imul
push
jae
cmp
xchg
mov
shll
push
jbe
xor
dec
mov
add
jae
les
int3
es
dec
push
mov
insl
mov
dec
or
jmp
out
in
dec
cli
scas
mov
push
inc
movsb
rcrl
test
mov
lods
dec
adc
shll
cli
mov
pusha
mulb
mov
cmp
push
jnp
into
cmpsl
and
mov
pop
scas
cmp
jle
inc
jae
cmp
mov
nop
idivb
mov
jecxz
mov
or
outsl
dec
test
cli
jecxz
or
aaa
dec
jne
xchg
jg
pop
mov
cmpb
out
scas
jno
std
icebp
inc
sti
sti
push
xchg
sub
lock
aas
scas
adc
hlt
out
sub
pop
fiadds
cmp
bound
push
jae
or
fwait
adc
movsb
or
add
sub
xchg
cmpsl
dec
xchg
inc
std
bnd
shrb
xlat
jnp
js
inc
and
cmp
adc
ja
cli
cmp
cmp
leave
xchg
lahf
lahf
dec
xchg
adc
xor
fadds
mov
in
mov
add
icebp
pop
adc
dec
mov
hlt
mov
jb
nop
pop
or
clc
inc
mov
mov
js
cmp
les
mov
mov
jbe
popa
inc
das
je
hlt
rolb
cmp
cltd
dec
sbb
lcallw
inc
fs
inc
fiadds
stos
dec
out
mov
xor
jecxz
mov
xor
xchg
lahf
and
repnz
js
sub
cld
push
cmp
cli
lods
jmp
mov
ljmp
out
ret
testl
out
lcall
jo
and
sbb
les
mov
js
mov
cmp
pop
js
rolb
push
mov
dec
add
mov
pushf
cwtl
xchg
or
mov
push
adcl
cli
je
das
cld
je
call
dec
out
in
insb
pop
fs
lds
push
movl
cmc
dec
into
lods
push
sbb
or
and
mov
cwtl
adc
lret
jp
cmp
xor
mov
or
pop
dec
pop
cmp
adc
sub
xorb
mov
xchg
inc
aam
or
scas
jns
imul
bound
and
ret
dec
cmp
and
mov
fcomps
ljmp
nop
mov
hlt
inc
popa
stc
adc
cmpsl
sti
xchg
lret
fcmovne
xchg
or
inc
jae
ja
outsb
xor
inc
pop
xchg
and
ja
pop
xchg
cmp
scas
fnsave
aas
ja
rcrb
movsl
out
sub
icebp
adc
mov
aad
mov
dec
mov
popa
mov
and
dec
cmp
rcrb
lret
enter
jnp
dec
shrl
ljmp
mov
stc
dec
mov
push
pop
je
push
popf
sahf
mov
dec
sbb
enter
jmp
in
pcmpeqb
pop
mov
lods
lahf
fnstenv
test
dec
sbbl
mov
loop
in
mov
movsb
das
jl
adcb
test
jno
cmp
adc
cmpsl
cltd
mov
mov
mov
xchg
xor
inc
faddl
push
les
or
and
lds
cmp
mov
loope
movsb
scas
push
fstpl
in
enter
outsl
jge
sub
pushl
js
cwtl
mov
testl
aad
popf
fldenv
not
or
mov
sbb
sbb
ljmp
movsl
add
add
push
out
cltd
mov
jae
aam
jns
lcall
mov
ffree
push
js
mulb
pop
stc
push
fisttpl
jl
lods
cmp
lcall
sahf
mov
cmpsb
cmp
push
xor
mov
imul
shll
scas
dec
mov
jecxz
pop
or
push
sbb
fs
enter
jl
in
push
mov
mov
jbe
mov
cmp
repnz
mov
push
sbb
imul
out
add
sub
and
adc
daa
fdivrp
jb
inc
mov
push
fidivrs
cmp
xchg
xor
shl
xchg
lods
loopne
sbb
inc
jmp
sbb
enter
insl
sbb
call
loopne
lcall
xchg
sub
xor
arpl
iret
adcl
loop
add
adc
fcoml
fwait
std
mov
stos
lret
jbe
adc
jno
fwait
cmc
pop
lret
push
pop
in
cmp
xor
fistps
pop
cmpsb
sbb
inc
push
in
pop
push
mov
jae
and
push
mov
dec
jb
mov
cmc
cwtl
jmp
out
lods
pop
mov
jae
pop
fsts
mov
orl
pop
adc
int3
jg
adc
js
dec
xchg
fadd
pop
loopne
dec
mov
pushl
fiaddl
in
test
adc
repz
nop
mov
lods
out
push
lea
push
adc
mov
jmp
cmpb
popf
pop
cs
cmp
test
add
sub
call
dec
stos
test
data16
sub
test
mov
lcall
jne
mov
cmp
shr
push
inc
xlat
mov
daa
popf
inc
test
cmp
fdivr
ljmp
fldenv
loope
xchg
cmp
cmpsb
outsb
sub
scas
aam
adcl
sbb
lret
sub
in
subb
test
add
xchg
xor
jmp
add
mov
xchg
std
mov
in
or
mov
push
outsl
sub
lea
mov
mov
jbe
repz
pop
pop
fwait
pop
sbb
popf
loope
bound
stos
cwtl
lock
and
sbb
jbe
stos
js
inc
leave
out
inc
stc
push
mov
jae
scas
add
hlt
adc
ret
testl
popa
jne
inc
out
popf
cmc
push
test
pop
or
dec
push
mov
lcall
mov
push
inc
jns
sarl
ret
nop
scas
test
push
cmp
stos
loopne
and
and
xor
mov
mov
pop
popf
jnp
aas
fldl2t
mov
imul
inc
shr
aas
mov
cmp
into
bound
xchg
pop
fwait
jl
dec
xchg
stc
sti
or
jb
mov
inc
shlb
xor
popa
adc
call
jbe
in
push
xchg
int
incb
xchg
lret
out
xchg
and
stos
mov
rolb
add
dec
repz
jmp
cld
cli
imul
shlb
fimuls
sub
and
push
mov
rdpmc
inc
inc
repz
filds
jne
pop
inc
enter
xchg
lea
lcall
mov
adc
cmp
jle
das
add
adc
push
xor
out
dec
in
dec
cmp
push
or
sbb
and
out
sbbb
pushf
pop
xchg
jg
sub
loope
ljmp
stos
jmp
xchg
xchg
stc
sbb
add
xlat
into
jle
imul
scas
popf
hlt
cmpsl
cli
xchg
pop
iret
out
dec
jb
pop
or
nop
sub
or
xor
push
sbb
cmc
int3
sub
adc
xchg
xchg
push
call
mov
outsb
jb
out
jnp
xchg
ror
push
call
sub
gs
shlb
test
addr16
sbb
mov
int
int
shll
sbb
pop
mull
mov
mov
push
ficomps
push
mov
aas
push
mov
aam
cs
clc
push
pop
inc
jnp
hlt
stos
mov
mov
sarl
ret
inc
sbb
mov
rcrl
scas
adc
push
inc
and
enter
push
add
mov
shrb
test
xlat
cs
push
pop
loopne
dec
lahf
das
mov
or
out
inc
xchg
stos
imul
xor
xchg
jmp
mov
mov
in
push
repnz
push
push
icebp
jmp
cmp
in
pop
je
add
icebp
lcall
outsb
bound
neg
incb
push
push
leave
and
xchg
pop
repnz
mov
movsb
cwtl
push
lcall
ret
stos
dec
sbb
addb
pop
popf
jno
roll
cmp
push
sbb
xor
push
call
inc
icebp
in
push
mov
hlt
leave
ja
adcb
imul
lahf
mov
jb
aaa
mov
out
shll
scas
push
fsubs
xchg
leave
and
xor
mul
movsl
cmp
out
aaa
pop
and
inc
test
jmp
pop
movsl
leave
nop
lcall
out
mov
je
dec
addr16
rcrb
jb
push
icebp
and
stos
les
out
mov
pop
sub
adc
pusha
dec
jmp
inc
stos
aam
add
lock
pushf
repnz
inc
push
rolb
xchg
xor
cmc
int
iret
xor
test
shlb
repnz
lret
jle
aaa
mov
fistl
in
and
mov
pushf
sbb
call
and
out
shl
outsb
sub
lock
adc
test
or
pop
mov
mov
lret
sbb
or
xchg
mov
cmp
xchg
sbb
daa
test
daa
movsb
rcrl
lock
adc
outsl
cmp
jno
sbb
mov
push
xchg
sub
mov
cmpsl
adc
mov
repnz
aad
adc
push
push
dec
call
mov
cli
cmpsl
add
out
jmp
dec
mov
jbe
sub
jae
dec
mov
push
iret
pop
jecxz
cmp
jmp
fs
inc
cmp
push
cs
shr
mov
xlat
pop
icebp
inc
mov
pop
iret
subl
call
push
jns
leave
dec
fsubs
aas
outsb
push
xchg
cmp
addl
dec
sti
or
mov
insl
or
xchg
lret
mov
pop
gs
jb
and
insb
pusha
xchg
cmpsl
push
lock
sub
inc
inc
outsl
xchg
mov
xchg
addr16
jno
mov
pop
adc
fucomp
mov
xor
rolb
push
fwait
in
cmpsb
push
mov
pop
or
jp
ret
inc
xor
mov
pop
into
inc
push
mov
aas
mov
pop
fiaddl
cmpsl
mov
xor
aaa
ret
cwtl
mov
fstpt
pop
imul
fbld
out
mov
test
mov
mov
jl
negl
lds
pop
dec
dec
xchg
test
imul
sbb
ss
ss
negl
orb
lods
mov
mov
stos
jl
clc
pop
dec
jmp
mov
or
jge
idiv
pop
aas
pusha
fsubr
test
pop
pop
loope
movsb
cmc
dec
adc
jno
scas
out
sub
fwait
mov
xchg
and
and
jb
pushf
popf
mov
out
or
loopne
mov
dec
fnstsw
fsub
jp
mov
lahf
or
or
int
rolb
cmpsl
sbb
mov
in
rol
cmp
xchg
lret
xchg
fwait
push
les
pop
jmp
mov
pop
or
xchg
inc
stc
xchg
pop
mov
mov
pusha
aam
imul
add
cwtl
fisubl
jb
data16
and
pop
nop
test
fidivrs
mov
inc
push
pusha
lret
outsl
gs
jmp
outsl
movsl
push
or
push
pop
push
sbb
mov
add
aam
test
sbb
shll
and
repz
mov
ror
inc
in
js
and
sbb
push
out
xlat
adc
push
mov
int3
dec
pop
sub
out
sub
sbb
stos
das
ss
shll
add
cmpsb
add
mov
mov
xor
sahf
xchg
out
sysret
push
dec
lret
into
sub
pop
out
xorb
jecxz
ficompl
mov
test
pop
aaa
push
adc
enter
out
push
enter
cltd
andb
dec
and
aam
adc
ja
fwait
stc
aas
xor
mov
je
adc
push
mov
rcrl
sub
mov
out
imul
jge
xor
pop
scas
xorb
or
cmp
inc
jl
inc
in
fildll
ja
xor
pop
mov
xor
arpl
adcb
sub
loope
out
mov
stos
out
pop
pop
nop
les
sub
adc
les
mov
int3
cli
daa
push
fdivr
fnstsw
cmp
push
mull
outsb
in
out
pop
orl
mov
add
push
mov
popf
lcall
cmp
cmc
xor
daa
ret
test
shlb
cmc
dec
pop
push
lods
testb
lret
push
mov
jnp
or
adc
ror
ret
or
xchg
pop
out
and
test
aas
dec
movsl
inc
mov
xchg
daa
and
fsubs
inc
add
mov
ss
fcompl
xchg
pushf
stos
mov
out
div
cmp
mov
popa
cmp
or
out
xchg
ljmp
pop
enter
cmp
rcr
lret
push
or
mov
gs
xchg
sti
adc
push
add
scas
je
inc
sub
jmp
insl
out
pop
mov
xchg
jecxz
shlb
mov
adc
addl
adc
movsb
adc
loopne
jae
push
mov
jo
mov
mov
push
fstp
mov
enter
fwait
outsb
out
imul
jo
add
inc
repnz
xor
in
outsl
enter
xor
push
jle
push
cltd
cmp
hlt
lods
pop
cmp
movsb
mov
xchg
rclb
ficoml
add
mov
lcall
cmp
push
sbb
mov
ds
mov
lcall
or
stos
lahf
incb
xchg
in
adc
fdivr
movsl
or
or
dec
push
xchg
fidivl
loopne
jnp
insl
mov
adc
push
outsb
sahf
sub
rcrb
xchg
in
ja
push
pop
jno
pop
test
ret
mov
mov
outsl
aad
pop
jnp
addr16
bound
lds
xor
in
in
in
cmp
icebp
sub
mov
ljmp
mov
push
push
stos
jmp
aaa
dec
mov
test
xchg
xor
mov
mov
sbb
fadds
imul
out
movsl
jae
out
xchg
cmp
pop
packssdw
scas
scas
shrb
das
jmp
and
add
cmp
xor
shrl
lret
sub
push
ret
push
push
in
xlat
call
out
insl
mov
pop
mov
xchg
push
out
insl
cmp
cwtl
dec
cltd
pushf
int
dec
or
push
xor
icebp
ret
aam
mov
sub
cmp
or
pop
movsb
hlt
hlt
mov
xchg
jne
rcrl
jbe
push
xchg
int3
inc
sbb
lret
sub
aas
fiadds
lock
xor
outsl
or
roll
mov
clc
dec
inc
xchg
rcrl
sub
rcl
repz
lcall
sub
lods
ret
push
enter
dec
fldenv
jae
add
mov
pop
xor
sub
rorb
rcll
push
sbb
sbb
sti
jbe
and
call
xor
xor
ss
mov
cmp
in
cmp
xchg
movsl
dec
push
xchg
sbb
cltd
sbb
dec
nop
add
push
mov
roll
jmp
or
movsl
ret
mov
cltd
test
sub
mov
out
pop
inc
push
sub
cli
inc
pop
and
cmp
sub
mov
pop
mov
sub
sbb
adc
jns
dec
push
adc
movsb
mov
push
and
imul
iret
into
aaa
subb
adc
add
push
pop
aas
push
scas
jbe
cmp
xlat
mov
movsb
jge
cmp
jb
in
cltd
leave
pop
mov
xor
mov
ds
jmp
stos
add
adcb
loopne
adc
fnstcw
sub
jnp
or
inc
sahf
cmp
jnp
ftst
out
jmp
cmp
push
in
pop
out
push
sbb
sub
ror
daa
and
sub
sub
cs
inc
cs
adc
xchg
dec
out
jae
mov
or
add
in
es
and
aaa
imul
xchg
jns
push
outsl
pop
and
xchg
push
aam
es
int
fiaddl
js
jae
outsl
in
ret
fcoms
mov
dec
sbb
out
cmp
mov
adc
jp
clc
or
dec
movsb
dec
sub
jb
mov
mov
push
adc
push
in
das
pop
pop
shll
scas
int3
pop
lea
add
xor
mov
aaa
inc
push
cmp
test
fwait
push
push
test
fcomip
stos
mov
mov
push
jle
outsb
cmp
ja
mov
mov
push
mov
adc
inc
and
cwtl
cmp
add
clc
movsb
adc
aaa
jbe
std
xchg
in
add
adc
jbe
fstps
scas
inc
add
rolb
mov
leave
cmp
jo
sahf
mov
andb
push
push
mov
inc
adc
lods
stc
dec
in
push
jo
ja
add
and
xchg
mov
mov
xchg
imul
nop
addr16
aad
in
orb
fcomps
lea
idivb
mov
adc
bound
popf
xor
sarb
xchg
leave
ja
fldcw
pop
jl
cli
test
mov
push
fistpll
mov
fdivrs
mov
sub
popa
mov
ljmp
iret
cwtl
call
dec
sbb
push
scas
or
pusha
nop
pop
popa
adc
mov
sti
pop
sub
clc
test
pop
sub
lcall
fidivl
daa
mov
add
mov
cmpsb
stos
fwait
xor
jo
insl
lret
imul
push
in
mov
pop
mov
pop
loop
imul
add
jbe
call
push
adc
push
jecxz
push
data16
pop
inc
int3
ds
mov
mov
inc
jnp
push
or
mov
in
lock
sbb
adc
pop
dec
mov
ljmp
mov
or
das
insl
shrl
repnz
mov
in
test
cmp
inc
je
xor
call
pop
or
sub
pop
int
aaa
add
std
mov
shrl
pop
jmp
jae
jne
lods
fisttpl
sti
push
xchg
mov
xor
mov
inc
dec
lods
stc
sub
int3
xchg
dec
sbb
orb
inc
jns
mov
cwtl
test
arpl
or
das
int3
lret
dec
adc
xor
add
arpl
xlat
ficomps
sub
ss
int3
aas
mov
jge
clc
mov
mov
imul
iret
test
cmc
sbb
rcl
mov
push
in
in
adc
aam
xor
outsb
push
idivb
imul
lea
pop
data16
cmpb
pop
hlt
push
mov
push
out
xchg
or
pusha
push
add
mov
cli
dec
js
xchg
das
push
push
testl
cmpsb
mov
pushf
rcll
pop
jae
js
imul
xchg
outsb
jbe
pop
div
rcrl
xor
imul
das
sub
lods
es
pop
daa
imul
jl
lret
xchg
insb
pop
mov
mov
jle
mov
cmp
and
stc
xchg
ljmp
mov
adcl
dec
and
cmc
mov
call
out
mov
movsl
sub
push
das
fmulp
mov
ret
fisubs
mov
sub
or
adc
sub
call
mull
dec
xor
insb
inc
mov
mov
xchg
cli
scas
sub
popf
pop
and
aas
mov
fidivs
arpl
mov
push
push
sub
fisubrs
lea
jb
out
clc
and
movsb
mov
fcomip
push
push
xchg
xchg
inc
data16
mov
mov
les
and
lods
mov
std
jmp
jns
add
aas
mov
mov
je
jge
iret
mov
cmp
rol
aam
scas
or
push
xor
push
add
mov
bound
jmp
jae
dec
clc
add
add
cmpsl
mov
and
jae
ffree
aaa
stc
inc
pop
imulb
or
sub
sub
add
test
ret
xor
dec
push
lods
stc
inc
mov
cli
fmul
xchg
add
rclb
arpl
or
fwait
mov
pushf
push
mov
mov
xor
clc
sub
jp
and
loop
icebp
add
out
movsl
inc
lods
adc
cld
pop
out
push
fs
adc
push
inc
or
cmpsb
push
sti
sahf
cltd
sub
dec
mov
loope
inc
push
out
inc
sbb
jecxz
or
cmp
or
pop
add
in
xor
ds
int
mov
pop
fisubs
xchg
jp,pn
jne
leave
ds
bound
jnp
jl
pop
in
jns
xor
arpl
testl
jnp
xchg
iret
loop
test
jns
fimuls
mov
insb
inc
mov
mov
jecxz
ds
shl
sub
jle
mov
xchg
out
mov
mov
or
xchg
xchg
clc
adc
dec
push
pop
or
leave
popa
fcmovnbe
aad
test
adc
pushf
and
enter
mov
fucom
lcall
xchg
and
mov
cmp
or
js
pop
xlat
iret
mov
orb
pop
cmpsl
add
and
adc
mov
arpl
add
pop
pop
clc
push
stos
pushf
xchg
push
mov
mov
jo
pop
cld
mov
iret
xchg
lods
in
fwait
lods
lahf
mov
shlb
sbb
jecxz
xchg
push
andl
popa
inc
dec
or
das
jo
mov
call
xchg
data16
add
jb
cmp
push
mov
loop
pop
add
js
ds
xor
pop
or
cmp
adc
lret
fildl
loop
test
sahf
add
xor
xchg
dec
cmp
pop
mov
adc
add
shrb
xchg
loope
popf
arpl
cmpsl
fwait
out
inc
and
xor
xchg
lret
pusha
in
dec
jge
sti
in
jg
pop
jg
imul
nop
add
in
inc
mov
lcall
and
sub
nop
jo
and
fisttps
movb
dec
or
icebp
adc
bound
add
push
or
inc
add
rolb
pop
pop
push
push
in
cli
and
dec
cs
test
lods
jne
xchg
mov
sub
inc
test
gs
je
jbe
mov
add
xchg
pop
aad
xchg
pop
lret
testl
pop
cmpsb
sbb
insb
sub
test
jge
xor
adc
mov
cli
xor
push
jl
leave
xor
cmp
pop
sbb
jae
btr
aaa
jecxz
ds
stos
inc
mov
jno
pusha
addr16
and
mov
ja
push
sbb
addr16
xor
mov
mov
dec
outsl
xchg
enter
push
cmp
adc
test
rorb
add
xor
or
loop
fs
or
pop
dec
push
repz
add
mov
cmpsb
stc
xchg
cmpsb
pop
jbe
mov
inc
jne
nop
cli
repnz
daa
dec
add
pop
repz
cltd
in
call
sbb
xchg
ja
test
test
es
popa
mov
scas
dec
sub
jp
sub
adc
sbb
push
xor
mov
pop
xchg
push
into
subb
mov
out
adc
arpl
jmp
cs
call
push
mov
ficoms
dec
fldcw
rorl
and
pop
inc
xor
mov
or
jmp
icebp
xchg
inc
xchg
sub
cmc
inc
adc
adcb
dec
lock
mov
ja
divw
add
mull
or
xchg
insl
add
xlat
sti
add
jecxz
in
cmp
pop
push
jg
cli
fistpll
lcall
xchg
das
mov
jns
jo
rcll
int3
and
inc
sub
jno
cltd
or
and
push
arpl
test
aad
pop
fldcw
xchg
mov
adc
clc
lret
jecxz
fcomp
loopne
fistps
sahf
sub
test
fmuls
addb
pop
xor
loopne
popf
lahf
mov
cmp
and
arpl
push
mov
xor
imulb
fistpl
rorb
hlt
addb
pop
cmp
lods
pop
ljmp
mov
int3
fidivl
out
push
js
fs
rorl
mov
mov
inc
add
repnz
out
cmp
mov
jp
fdivs
xor
xchg
repz
out
add
sbb
andb
ss
pop
inc
std
mov
dec
and
or
aad
cmpsl
les
pop
add
sbbb
popf
pushf
pushl
xchg
xor
push
dec
sti
sbb
lds
mov
mov
sub
ljmp
movsb
call
fld
scas
sarl
mov
mov
mov
jecxz
cmp
or
mov
das
mov
mov
cmc
fucom
clc
scas
add
lods
and
aas
jl
movsb
mov
mov
jns
adc
mov
andnps
xchg
mov
adc
rcll
int
sub
mov
or
xor
test
aaa
push
std
dec
sbb
jne
push
pop
push
cwtl
fs
xor
out
fidivrl
xchg
mov
std
sub
pop
cmp
pop
jo
sub
add
mov
inc
jmp
leave
nop
cmp
mov
or
movsl
dec
xchg
sahf
dec
test
pop
cli
mov
rclb
sbb
daa
adc
jecxz
mov
aas
lock
or
sub
or
xor
arpl
mov
add
mov
push
mov
lret
repnz
and
int3
adc
leave
out
add
into
xchg
adc
push
and
insl
jo
pop
jl
or
sub
jge
daa
lock
movsl
in
mov
dec
cmpsl
pop
xchg
cmp
sbb
adc
xor
or
or
mov
jno
pop
repnz
or
xlat
pushf
outsb
imull
stos
rcl
mov
cld
xchg
ret
imul
push
cmp
xchg
cmpsb
loope
movl
mov
int3
dec
jbe
insl
test
push
stos
lahf
aas
pop
decb
xchg
and
mov
dec
test
bound
call
push
sub
and
dec
dec
stos
mov
sahf
mov
out
mov
dec
cli
sub
daa
out
and
dec
push
jae
pop
pop
push
sbb
adc
mov
xchg
lcall
ss
aaa
in
popf
sub
or
movsl
xor
ficompl
call
mov
jnp
cmpsl
add
js
inc
cld
out
mov
adc
cmp
xor
test
lcall
cmp
sub
les
pop
mov
imul
lea
jno
jmp
pop
out
ds
int3
cmpl
xchg
dec
push
test
int
popa
pop
pop
sub
fistpll
pop
aad
and
int3
mov
out
push
js
or
outsb
test
mov
iret
cmpl
xor
jg
cmp
and
sarl
add
dec
dec
and
ret
pop
jl
dec
add
ret
mov
pop
jl
mov
nop
push
call
or
sub
cmp
mov
jl
adc
fisubrs
jp
into
adc
aam
sub
popa
add
aaa
psadbw
xchg
add
loope
xor
ret
sbb
jb
dec
and
stc
mov
sub
jmp
fisttps
xor
outsl
in
cltd
lds
sbb
add
clc
icebp
int3
sub
in
inc
popf
inc
outsb
add
mov
test
inc
mov
sbb
stos
mov
in
jmp
sub
push
gs
es
add
or
dec
mov
rorl
insl
dec
xchg
inc
mov
popa
std
shrl
and
mov
inc
lods
and
mov
rcrb
bound
mov
xchg
or
cmp
mov
shll
negb
xor
shl
lods
mov
adc
push
lahf
fistl
cld
fadds
dec
pop
std
inc
out
pop
dec
test
call
adc
lods
jbe
jb
sub
scas
jbe
jbe
mov
movsl
jl
rolb
or
mov
rolb
out
or
ljmp
mov
test
adc
lds
out
dec
add
dec
add
jno
xchg
inc
shl
lret
aam
jnp
daa
jp
xchg
out
dec
or
or
xchg
js
mov
mov
lds
sbb
lret
jle
adc
push
loope
roll
sub
dec
push
jl
push
mov
fstl
enter
int3
adc
int
sbb
push
xchg
outsb
in
cmpsl
cmpsl
add
inc
mov
mov
xor
out
inc
xor
stc
sub
dec
add
mov
inc
ret
push
cmp
cmpsb
loopne
mov
in
mov
sbbb
pusha
stos
xor
pop
add
cmp
gs
adc
sarb
aam
xchg
jbe
mov
into
dec
into
sbb
cs
pop
out
sub
mov
mov
loop
jge
jne
lods
and
jecxz
or
insb
jbe
xchg
push
push
ds
jno
or
repz
mov
xor
out
icebp
sbbb
jle
pop
cmp
add
inc
or
mov
inc
cli
push
mov
xlat
pop
mov
pop
cli
push
mov
fstps
add
jbe
inc
fsubrl
mov
pop
jb
inc
jnp
sbb
sub
sbb
lds
pop
fldln2
mov
xor
xlat
and
ret
inc
movsb
and
clc
jbe
cmpsl
aam
add
inc
sarb
push
dec
outsb
out
inc
xchg
pop
or
fistl
testl
ret
fnstcw
loop
pop
or
cmp
pop
mov
jb
sahf
into
jp
sti
repnz
jg
jne
jbe
fildl
jge
call
fsubrp
xor
sbb
and
shrb
out
sbb
fistps
repnz
sub
outsb
in
xchg
js
pop
into
sbb
bound
call
loopne
sub
popf
ret
pop
push
and
push
call
mov
mov
add
xor
aas
mov
jno
cs
mov
loopne
sahf
jbe
aam
call
gs
mov
fidivl
lods
adc
mov
pusha
and
testb
add
test
xor
mov
pop
mov
out
xchg
mov
pop
aad
push
cli
cmpsl
or
cli
mov
rorl
nop
fdivs
cmp
mov
pop
xchg
and
add
lods
testl
test
les
rep
ss
add
pop
dec
adc
inc
rorb
push
rcrb
inc
lret
jns
aam
or
mov
pop
jge
hlt
jbe
call
lret
jne
or
jp
shrb
pop
and
xchg
adc
ds
xchg
or
add
jbe
xor
sub
or
push
cmp
sub
inc
outsl
sbb
inc
jecxz
cmp
in
mov
mov
lods
enter
push
andl
aam
mov
push
ljmp
in
inc
cmpsl
popf
mov
xor
pop
cmpsb
push
xor
dec
jg
cltd
dec
sbb
enter
mov
push
mov
scas
ja
imul
and
push
shrb
push
or
loopne
sarl
mov
rcrb
lods
push
inc
stos
out
pushf
fisubs
and
pop
add
adc
adc
add
inc
adc
lods
sub
enter
je
in
loop
dec
pop
mov
es
loope
sbbb
cmpsl
pop
sub
mov
fistl
sbb
in
xor
fidivl
icebp
scas
adc
fbstp
cwtl
and
int3
jmp
jle
fstpl
call
or
cwtl
adcl
mov
rolb
sub
and
xchg
stos
fcmovnu
scas
jge
testl
enter
pop
mov
lds
xchg
daa
push
test
xchg
ror
adc
std
imull
addr16
xor
shlb
out
bnd
inc
subb
subl
xchg
inc
test
dec
in
rclb
and
cmpsb
push
fdivl
sbb
mul
cs
test
sub
mov
add
fcmovbe
sarb
shll
mov
lds
xchg
cmp
outsb
idivb
in
out
jmp
pop
push
lret
jmp
ss
or
push
sbb
nop
sarl
test
xchg
cmp
repz
pop
xchg
sti
push
dec
pop
xor
jno
jg
mov
dec
lods
leave
push
mov
jnp
filds
push
cmp
fs
cli
push
mov
mov
and
testl
push
mov
into
arpl
add
scas
mov
leave
or
lea
loop
inc
xor
test
sub
dec
repnz
add
lods
xlat
pushf
inc
repnz
add
sbb
xor
rcrb
idivl
hlt
rolb
test
je
mov
mov
scas
mov
lret
adc
je
sbb
adc
pop
aad
pop
dec
push
jmp
sub
in
fistpll
sub
into
add
lds
in
xchg
xor
scas
mov
adc
mov
nop
outsl
push
adc
aas
cmp
mov
or
gs
and
add
inc
hlt
ss
shrl
inc
adc
pop
push
mov
xchg
inc
pop
ljmp
jno
repnz
lahf
cmpsl
cs
pop
dec
cmp
insb
dec
sahf
cmpsb
lahf
jg
inc
mull
cltd
pop
or
dec
in
mov
ret
push
cs
pop
je
into
cmp
jnp
cmpsl
jbe
lcall
out
arpl
mov
jns
dec
dec
sub
hlt
in
roll
xor
into
xchg
testl
in
xchg
fsubrs
dec
test
fnsave
lock
into
adc
jns
insb
mov
mov
ret
push
cmp
add
sub
incl
divl
inc
mov
enter
cmp
pop
adc
dec
lret
mov
sbb
inc
push
jecxz
ret
push
xchg
mov
int3
iret
icebp
into
fsubs
sbb
jl
aaa
jecxz
in
jne
lahf
push
cmpsl
repnz
adc
xchg
push
push
shlb
push
jmp
test
adc
push
lds
jae
or
cwtl
insb
mov
xchg
cmp
enter
gs
cwtl
sub
mov
scas
add
jns
pop
xchg
mov
mov
dec
dec
notb
stos
mov
pusha
popf
stos
inc
bound
mov
push
sub
movsb
sub
cmp
cld
pop
pop
mov
dec
push
stos
dec
jge
out
dec
fnstcw
jnp
dec
les
mov
test
mov
insb
mov
sahf
popa
jbe
jo
rolb
je
iret
je
lods
aas
rcll
mov
test
xor
sub
test
iret
jmp
jns
mov
popa
test
pop
daa
shrb
bnd
ret
mov
jbe
mov
loop
das
jle
lret
pop
pop
fnstenv
cmpsb
test
inc
jl
adc
test
mov
and
mov
cmp
cmpsb
jae
aaa
cmpl
test
add
ds
pop
fs
ljmp
cltd
and
jge
das
pop
sbb
ja
xor
push
movsb
adc
jp
inc
jmp
out
sub
sahf
mov
jge
lahf
push
cs
in
xor
orl
cmp
mull
sub
mov
aad
ret
dec
stos
dec
aas
sub
mov
nop
add
ja
xchg
sub
outsb
lds
mov
addr16
movsb
jne
mov
lods
iret
pop
cs
mov
pop
cmp
mov
and
pop
loop
loope
xor
sub
shll
clc
pop
adc
mov
xor
mov
sub
fs
lcall
lret
lret
lods
and
lods
dec
ja
imul
sbb
outsb
stos
fistl
pop
xlat
mov
enter
jg
mov
pop
repz
fmull
add
xchg
movsb
movsb
aas
shrl
or
jecxz
jle
xor
pop
push
cwtl
lods
push
mov
inc
pop
xchg
je
shll
sub
mov
mov
xchg
dec
push
mov
dec
xlat
jbe
repnz
adc
xchg
push
sbbb
aad
iret
pop
push
das
cmpsb
repnz
xor
lahf
pusha
mull
and
sub
cld
xor
push
sti
dec
pop
loopne
lds
in
cmp
jbe
dec
out
fistps
push
mov
mov
adc
and
inc
fistpl
idivl
outsb
outsl
arpl
ja
cmp
jge
mov
mov
mov
jno
push
xchg
sub
ret
pop
cs
fcoms
pop
push
push
xchg
cld
fwait
mov
imul
xchg
outsb
lcall
jecxz
mov
cs
pop
jne
adc
dec
inc
test
cwtl
push
mov
pop
add
fs
xchg
mov
mov
inc
andl
adc
dec
xor
cmpsb
scas
mov
pop
movsl
orb
and
ljmp
repz
mov
inc
out
add
ret
mov
jns
pop
in
outsl
pop
lahf
push
lret
frstor
jp
mov
sub
mov
push
divl
xor
dec
sbb
test
imul
cltd
pop
lcall
cmp
cmp
aam
sbb
clc
add
ss
mov
mov
in
in
push
mov
shll
rolb
hlt
xchg
cld
xor
jl
jle
adc
xor
das
ljmp
ds
xlat
or
icebp
sbb
jo
push
sti
jmp
ja
icebp
pop
add
scas
loopne
ss
ja
cs
add
xchg
les
xchg
add
ret
out
adc
mov
divb
cmp
or
in
and
inc
flds
ljmp
mov
jae
hlt
mov
ja
mov
xchg
rcrl
sub
leave
sbb
mov
fdivl
aad
cs
push
sub
jle
mov
or
loope
sbb
aad
fistpll
push
or
jns
mov
push
xor
call
aas
push
adc
and
pop
xchg
push
in
fnstsw
adc
push
mov
inc
pusha
ss
push
out
push
shll
inc
add
inc
aam
mov
gs
fmulp
test
cmp
lods
adc
mov
jge
pavgw
or
pop
cmpsl
rcr
cmp
out
cli
jmp
aaa
xchg
flds
adc
jl
test
mov
cmp
xchg
xchg
mov
and
adc
mov
mov
cmp
xchg
and
cld
mov
icebp
addb
mov
popl
shr
sbb
pop
sub
inc
jmp
mov
lock
addl
repnz
int3
mov
insb
dec
sub
sti
cmp
pop
add
call
in
mov
adcl
or
fdivr
push
and
popf
leave
out
mov
push
cwtl
adc
out
pop
scas
lea
popa
shl
cmp
imul
mov
add
or
rorl
push
pop
push
pop
push
xor
dec
ds
lock
xchg
fistpl
cli
clc
lods
add
loope
xchg
out
in
pop
add
lock
test
inc
fmulp
adc
and
xchg
dec
addr16
or
in
jge
jne
jno
pop
or
sub
adc
push
inc
push
repz
xor
fdivrl
cltd
lret
daa
xchg
jl
out
int
call
insl
xor
sti
adc
mov
add
and
sti
sub
pop
mov
daa
mov
sbb
or
shrb
out
jb
icebp
mov
jo
mov
insb
cmc
jno
sub
in
dec
sarl
jo
sub
gs
and
pop
arpl
inc
dec
xchg
fucomip
das
xor
pop
insl
cs
ret
sahf
aas
and
mov
insl
dec
test
scas
sbb
inc
in
scas
dec
lahf
push
shll
mov
into
sbb
push
push
jns
sub
pop
inc
inc
push
sarl
pusha
push
push
and
cmp
ret
dec
in
adc
sti
add
add
mov
fisubrl
mov
or
or
and
cmc
jnp
stos
scas
sbb
lea
shrb
xchg
in
or
inc
stos
and
fisubs
or
inc
in
and
daa
xor
sub
out
out
lahf
push
mov
stos
push
sbb
in
ja
cmp
dec
fcomps
xor
mov
das
add
stos
dec
out
sbb
es
push
in
mov
sub
out
mov
add
shrl
lea
and
jne
std
add
pop
xlat
loopne
push
mov
xchg
rolb
rolb
arpl
int3
mov
inc
js
clc
sub
inc
div
hlt
popa
test
xchg
clc
dec
aad
outsl
xor
sub
jb
sub
into
adc
xor
xchg
dec
jb
bound
mov
repnz
paddsw
hlt
fldcw
cs
sub
or
pop
push
cmp
out
gs
les
mov
icebp
aad
es
or
inc
adc
ljmp
xor
or
mov
add
fsubrs
push
sub
shl
mov
mov
xor
jp
and
fs
cmp
jmp
or
mov
push
shlb
add
testb
aas
dec
or
mov
pop
jae
leave
mov
subl
inc
push
ret
data16
mov
es
mov
mov
mov
inc
mov
jecxz
cld
pop
daa
sbb
adc
dec
and
out
loope
push
mov
repz
xchg
xchg
lock
mov
or
pop
cmp
fmull
and
jecxz
dec
sahf
js
xlat
cmp
leave
notb
lea
imul
je
orl
jae
inc
dec
mov
jmp
pop
enter
imul
dec
push
mov
imul
lret
xchg
or
lea
imul
inc
mov
or
or
add
call
jbe
jo
jge
sbb
sub
lret
jl
xchg
icebp
das
lods
xchg
push
sub
add
push
outsb
insb
jp
and
push
jl
xchg
mov
pop
inc
sbb
sbb
dec
xchg
mov
push
aaa
xor
lods
inc
je
enter
sub
enter
jl
push
mov
fsts
jmp
mov
fnstcw
sub
lahf
jo
test
sbb
rcr
imul
notb
inc
sahf
aam
push
mov
push
insb
daa
xor
fnsave
inc
xor
dec
adc
jp
mov
incb
ljmp
xor
mov
ja
in
andb
adc
dec
movsl
out
pop
add
mov
mov
dec
xchg
ret
bound
adc
inc
mov
xchg
inc
dec
lock
cltd
or
xchg
shrl
lret
gs
add
lret
movsb
repz
into
xchg
xlat
mov
subb
fadds
sub
pop
lods
movd
adc
mov
inc
sbb
test
out
mov
ss
cmp
cmc
std
jnp
mov
out
sbb
jae
stos
incl
pop
sub
jo
push
mov
jmp
lcall
dec
xchg
fidivrs
cmp
aam
sbb
cld
push
ja
cltd
and
lcall
push
pop
rol
out
sub
ret
mov
jb
rcr
or
mov
sub
into
or
jge
mov
sbb
lds
and
xlat
or
fs
bound
dec
cmp
push
pop
lcall
sub
cltd
loopne
and
xor
sub
push
lret
fadds
adc
popa
push
xchg
enter
bound
ljmp
xlat
repz
mov
xor
call
hlt
ret
lret
outsl
int
fistpl
mov
fldenv
add
mov
stos
into
xchg
cmpsb
scas
enter
lcall
aam
push
out
add
outsl
xor
add
jne
dec
and
icebp
cld
mov
and
xchg
mov
xor
sub
je
or
in
jns
sbb
ret
push
jo
scas
faddl
sub
mov
hlt
mov
jmp
call
mov
cmp
into
inc
push
into
sbb
adc
and
push
ja
repz
push
or
and
and
pushf
xchg
jp
mov
add
enter
push
adc
add
or
mov
jle
xor
push
fs
mov
lahf
mov
loop
cmp
aas
xor
push
lahf
arpl
adc
pop
repz
mov
daa
inc
sub
into
pop
jns
cwtl
inc
push
mov
in
scas
jb
push
in
sarl
mov
inc
push
ffreep
xor
movsl
in
stos
clc
sub
aaa
or
decl
cmp
xor
cltd
or
fwait
pop
xchg
imul
lds
jne
aaa
rcr
jnp
in
cmp
cwtl
dec
inc
jns
loope
jecxz
fisubs
add
shll
icebp
and
pushf
movsl
jne
xlat
inc
cld
incb
ret
xor
push
imul
xchg
add
push
mov
fldlg2
shlb
jg
cwtl
imul
dec
fadds
nop
dec
imul
cwtl
addr16
adc
pusha
adc
or
sub
push
lock
stc
mov
sub
in
pop
xchg
je
add
dec
cmpl
pop
xchg
mov
mov
jo
add
outsb
insb
and
jnp
aaa
cmp
mov
leave
rorb
xchg
mov
mov
jecxz
jl
les
and
push
or
pop
jp
adc
loop
dec
roll
cmpl
in
xor
xlat
stos
in
notl
lahf
iret
jns
popf
andb
pushf
mov
jne
push
inc
xchg
add
xor
push
pushf
adc
xchg
xor
mov
in
mov
loop
add
mov
mov
jmp
mov
mov
fistpll
das
push
lahf
cmp
jmp
pop
mov
dec
lea
adc
cmp
int
mov
mov
stos
add
dec
fwait
jo
add
push
pop
lea
ldmxcsr
xorb
popa
adc
push
arpl
lea
push
inc
mov
add
pushf
mov
cmp
mov
sub
sbb
stos
call
push
mov
jl,pt
push
dec
ret
aad
outsl
imulb
sub
cmp
fidivrl
call
pop
dec
shl
pushf
pop
push
cmp
jecxz
cmpsl
push
push
adc
dec
into
xchg
enter
pop
pushf
and
mov
jp
sbb
sub
xchg
mov
inc
negl
test
dec
dec
sub
imul
pop
lahf
stc
aad
fs
outsl
jnp
cmp
aam
pop
sub
adcb
ljmp
or
dec
test
xor
fidivrs
out
mov
ljmp
cmp
mov
movl
lock
push
xor
imul
sti
jae
aaa
shl
movb
and
add
shl
sub
and
inc
or
pop
mov
outsl
das
or
xchg
ffreep
mov
dec
or
roll
dec
jge
lea
imul
in
adc
or
xchg
inc
movl
xor
sub
repnz
dec
pusha
arpl
adc
mov
stc
mov
pop
into
lods
cmpb
push
les
das
into
adc
cmp
movsl
lds
int3
mov
cmp
jo
loopne
add
cmpl
xor
into
call
mov
shr
pop
push
stos
dec
sbb
dec
sbb
pop
sar
sub
or
pop
loopne,pt
test
inc
cmp
or
popa
ret
push
repz
fs
xchg
cmp
fcompl
mov
inc
or
xor
jns
decl
sbb
cwtl
mov
dec
fld
lahf
jg
sub
adc
xchg
inc
cmp
lret
stc
add
fcmovnu
mov
jp
adc
jbe
mov
inc
inc
push
imul
push
xchg
rorl
gs
push
shlb
in
cld
inc
cmp
jecxz
cmpl
in
in
stos
sbb
mov
inc
mov
jp
xor
cltd
pop
or
imul
incl
adc
inc
lret
adc
xor
inc
cmp
adc
adc
jno
in
out
xlat
inc
and
push
js
mov
dec
cwtl
mov
jmp
inc
rcrb
out
sub
ja
mov
xor
xlat
adc
mov
dec
sub
popf
arpl
mov
push
fistps
inc
xchg
hlt
add
sub
jnp
sbb
inc
jecxz
sbb
es
sub
push
mov
loopne
sbb
cmpsb
xchg
in
xchg
push
es
pop
subl
fldcw
jns
fcoml
or
std
int3
inc
shl
imul
jg
aas
lods
dec
or
mov
adc
aad
mul
mov
or
lahf
movsl
mov
dec
mov
mov
push
cmp
sub
jnp
mov
fsubrs
inc
sub
xchg
cmc
rorl
nop
arpl
xor
in
sti
int
add
scas
ficoml
addr16
aad
sahf
xchg
pop
dec
cld
scas
enter
adc
ud0
jg
xchg
fwait
lahf
fwait
and
lret
cmp
adc
stos
cmp
stc
lahf
or
inc
push
mov
push
leave
mov
das
ret
xor
mov
neg
pop
jecxz
aaa
mov
adc
or
mov
jp
cmp
push
lahf
cltd
in
addr16
or
fisubl
popa
pop
push
scas
pop
imul
arpl
pop
rorb
mov
imul
cmp
add
sub
cltd
bound
push
insb
das
pop
dec
push
inc
lea
mov
cld
js
jbe
jecxz
fldl
pop
xchg
mov
xchg
sbbb
xlat
and
mov
jmp
shll
mov
imul
xchg
es
int3
or
mov
sbb
dec
movq
or
push
jns
add
xor
xchg
repnz
mov
and
gs
add
in
jnp
movsl
repz
cmp
xchg
mov
fisubl
jns
out
adc
mov
insl
movd
cmp
test
cs
js
jb
sbb
push
cltd
cld
ljmp
fldl
arpl
add
cmp
mov
sub
in
mov
mov
flds
ret
xchg
outsb
subb
cs
pop
imul
add
ds
lods
sbb
lock
cmp
jmp
outsb
pop
popa
in
mov
rcrl
push
push
mov
sub
dec
mov
fucom
cld
pop
clc
lods
and
fs
adc
jmp
dec
inc
fwait
aam
add
inc
mov
mov
mov
inc
daa
cmp
sub
outsl
cmp
dec
fnstsw
mov
test
xor
mov
jbe
sub
leave
mov
scas
into
mov
call
mov
xchg
push
rorb
dec
add
xlat
insb
aaa
sbb
inc
inc
ret
ss
cli
inc
add
fwait
push
or
pop
or
in
pusha
add
pop
pop
sbb
mov
movsb
xchg
inc
and
mov
adc
mov
lods
int3
sub
push
pop
pushf
scas
loope
inc
arpl
inc
test
mov
and
cmpsl
xchg
jne
adc
js
stos
stos
jge
push
sarb
mov
adc
movsl
ja
inc
roll
cwtl
jmp
mov
pop
sar
ror
mov
push
xchg
mov
movsl
push
adc
sbb
dec
mov
xchg
or
dec
scas
out
push
mov
jne
inc
sarl
sub
or
mov
insl
in
xchg
push
mov
lds
xchg
mov
jge
out
sahf
cmc
test
punpckhbw
inc
lods
and
jp
pop
test
cld
push
and
xor
adc
mov
inc
mull
int3
in
test
fstpl
xor
pop
mov
ds
std
es
scas
ds
sti
sahf
cmpsl
sub
push
pop
jne
dec
cmc
int
xchg
sub
dec
daa
mov
cmpsl
xchg
and
jle,pt
fsubp
unpckhps
inc
repnz
xchg
bound
inc
clc
add
ss
inc
cmp
jae
rorb
les
cmp
in
add
inc
pop
dec
mov
mov
fwait
xor
push
jecxz
cld
lahf
imul
mov
mov
aad
addr16
int
rcrb
cs
clc
mov
jb
fsub
mov
repz
add
sub
mov
ds
sti
adc
xchg
insb
ffree
xchg
push
data16
mov
movl
sahf
push
push
cmpsb
xor
fdivrs
je
cld
popa
sbb
inc
sahf
les
dec
sbbl
dec
dec
jo
pop
icebp
fisubrs
xorb
fucomi
test
into
sbb
or
cmpsl
insb
movsb
xlat
push
mov
push
cli
bound
cld
rcrb
cld
ss
mov
dec
imul
mov
xchg
inc
dec
and
jg
mov
pop
mov
repz
inc
addr16
fnstcw
jle
out
lds
mov
lea
xchg
mov
fs
enter
pop
enter
inc
xor
popf
and
push
call
jb
stc
test
rcll
or
lods
inc
xor
xor
xchg
cli
lods
mov
cmp
push
sbb
andb
or
mov
int3
lock
test
lcall
jle
data16
or
push
fsub
rcl
repz
mov
add
sahf
jne
repnz
jnp
dec
inc
mov
push
push
bound
mov
out
dec
test
inc
fwait
sub
std
inc
shlb
mov
lock
sub
cmp
stos
nop
mov
fldl
xor
es
jmp
ret
loop
pop
xor
stos
test
lret
test
jae
cmp
dec
insl
cmpsl
out
jo
xor
dec
adc
cwtl
adc
lahf
ficoml
scas
cli
xorl
jns
pop
int3
mov
adc
sub
or
insb
push
lret
sbb
push
sbbl
clc
scas
jecxz
sbb
xchg
pop
int
push
xchg
mov
xor
ljmp
movsb
ret
popa
adc
sahf
pop
movb
cld
jne
adc
pop
int3
dec
push
in
xlat
pop
jp
lcall
add
not
cmp
dec
adc
clc
imul
mov
icebp
sub
fs
stos
sub
out
pop
into
pop
cmc
jp
das
addr16
clc
fldl
push
xchg
pop
jge
sti
ljmp
lods
int
jns
jg
inc
rcrb
subb
cwtl
jl
ds
cmpsl
dec
insb
cwtl
inc
das
loope
dec
xlat
inc
cmpsb
sub
out
mov
in
cmp
add
pop
xchg
outsl
mov
enter
clc
push
out
add
rcr
pop
xchg
leave
popf
mov
mov
std
lock
and
mov
mov
sub
or
enter
in
sti
out
movsl
addr16
jecxz
out
inc
mov
cmpsb
xchg
cmp
dec
push
pusha
jnp
out
testb
inc
adc
and
test
xchg
push
hlt
cmp
push
pause
jecxz
sbb
mov
cmp
or
mov
stos
inc
lods
push
xchg
nop
push
daa
jl
mov
loope
adc
insb
int
jb
fstpl
xor
xchg
fisubrs
pop
insl
shlb
cmp
dec
adc
scas
pop
ljmp
inc
flds
or
and
pop
pop
xchg
aam
lahf
scas
lret
xor
sub
xchg
fstps
lds
mov
orb
push
jg
and
in
mov
jle
add
add
sub
into
imul
aad
mov
fsubrl
enter
mov
mov
add
sbb
addl
stos
lds
outsb
lds
dec
add
call
dec
enter
es
add
pop
fcomps
fbstp
pop
xchg
or
and
cmp
xor
mov
xor
or
ficoml
dec
jnp
jp
lahf
stos
and
pop
xor
filds
and
mov
xchg
mov
sbb
faddl
mov
lahf
and
adc
cmp
mov
mov
test
enter
or
lea
push
shlb
xlat
insl
xchg
jecxz
outsb
mov
pop
mov
mov
xchg
and
roll
rol
or
jno
cmp
fmul
jo
movsl
mov
or
flds
dec
dec
inc
test
inc
lret
nop
out
imul
out
dec
popf
cld
inc
mov
or
rcr
test
out
and
cmp
das
mov
mov
loope
cmpsl
adc
lods
shlb
mov
xchg
xchg
sub
pop
pop
xchg
pusha
mov
cli
pop
sarb
mov
adc
xor
leave
adc
jns
xor
fisubl
push
pop
lret
into
repnz
inc
lock
sbb
and
in
fldl2e
daa
jns
or
xchg
sub
in
xor
mov
pop
xor
ficoms
add
int3
or
jmp
mov
fcmovnu
outsl
psllw
scas
add
and
ret
sbb
scas
aad
lret
xorl
test
dec
out
inc
clc
insb
and
pop
fbld
cmpsl
push
ds
xor
add
ret
notb
pop
outsb
sbb
rcrb
cltd
and
mov
rcll
dec
cmp
les
adc
lods
fsubl
jp
adc
rcrb
xor
ja
push
jle
adc
sbb
fisttpll
jbe
jb
adc
lea
andl
not
mov
jp
out
nop
aam
lods
jmp
sahf
cwtl
nop
dec
ret
sub
cmpsl
sbb
jl
popa
mov
fmulp
subb
adc
je
dec
pop
add
imul
fs
or
jns
jns
jge
pop
out
ret
stos
int
ffreep
inc
jmp
dec
add
and
pop
jbe
jae
sbb
movsl
cmp
cmpsl
push
or
popa
mov
divb
ret
mov
xchg
das
je
inc
xchg
inc
bound
xchg
pop
cmpsb
cmc
das
adc
lahf
and
jae
and
pop
and
and
adc
cmpsl
pop
aam
or
mov
sahf
inc
sub
push
lods
repz
mov
pushf
lret
out
iret
xchg
cmp
in
mov
loopne
dec
dec
add
inc
cmp
inc
stos
jo
pop
jge
movb
nop
shll
scas
dec
cwtl
or
cmc
mov
dec
popa
mov
and
and
push
incl
shl
pop
adc
fldt
mov
xchg
xlat
jl
xchg
push
jg
aad
mov
into
mov
mov
jne
in
and
add
or
sahf
in
nop
lret
repz
lea
push
mov
push
mov
sub
mov
cmp
jbe
div
aaa
xchg
xchg
mov
popf
setns
cmc
dec
sahf
pop
sub
or
and
push
movsb
divl
fildll
jg
jno
xchg
cmc
cmp
decb
lock
xor
push
jle
sti
dec
pop
ja
adc
pusha
mov
add
jecxz
bound
lret
mov
jp
test
push
hlt
and
push
shlb
jb
sub
sub
and
add
jb
sub
inc
cmpsb
xchg
gs
addr16
push
mov
fsubr
cli
cmp
pop
repz
lret
cld
push
mov
addb
adc
pop
gs
cmp
push
ret
jmp
ret
dec
cmp
mov
add
scas
jae
ret
sub
popf
fisttpl
cltd
jae
inc
inc
stc
stc
pop
movsl
sahf
jl
icebp
lcall
inc
divl
fsubl
je
les
cmp
xlat
sahf
cmp
out
pusha
lods
jnp
jnp
mov
in
leave
std
inc
nop
cmp
and
movsb
pop
stc
out
sbb
mov
test
rorl
mov
xor
dec
les
pop
sahf
sub
push
sahf
pop
push
mov
out
sub
test
popf
xchg
in
mov
pop
sahf
xor
pop
int
fiaddl
sub
xor
mov
movsl
call
sub
xchg
loop
aas
add
pop
frstor
insl
test
xchg
loop
cmc
xchg
pop
cmpsl
push
mov
push
adc
mov
and
out
jmp
mov
cmp
push
inc
dec
daa
mov
cmp
mov
inc
test
ret
ja
js
pop
pop
fstl
sbb
in
imul
lea
movsl
xchg
sbb
lods
fdivl
stos
and
mov
xor
add
ljmp
dec
xchg
xor
lock
xor
sarb
and
stos
out
popa
into
lahf
cltd
and
sub
xor
mov
jns
sahf
jb
not
test
stos
pop
sub
insb
jp
flds
lahf
fidivrs
outsl
idiv
add
xchg
imul
adc
ljmp
cmp
and
push
jne
call
lods
inc
sub
pop
es
pop
mov
cmpsl
imul
pop
jmp
add
add
sub
pop
aaa
mov
sbb
pop
push
and
lcall
mov
cmc
add
je
out
mov
mov
jge
xorb
push
pop
push
or
mov
and
add
into
mov
lcall
dec
cmp
aam
add
push
arpl
pusha
imul
and
pop
jne
cmp
pop
mov
mov
out
mov
mov
mov
lds
out
nop
arpl
fldenv
outsb
inc
dec
xchg
addr16
inc
pop
mov
mov
loopne
sbb
push
fbstp
cld
dec
or
adc
hlt
inc
cmp
dec
cs
scas
fnstenv
jae
insb
add
call
jo
es
cmc
jl
xchg
inc
xor
pop
inc
jo
dec
dec
cmpsb
mov
cmp
test
outsl
sbb
mov
fs
stos
data16
dec
arpl
mov
cwtl
pop
inc
mov
cld
mov
xchg
sub
pop
gs
ret
xchg
leave
jne
mov
lcall
out
push
and
stc
lahf
adc
lahf
sbb
dec
fsts
rcr
jecxz
jg
or
or
repz
mov
lock
inc
movsb
outsb
enter
push
cltd
cs
repz
xchg
outsb
inc
mov
mov
pop
insb
lret
mov
mov
cwtl
sbb
bound
and
mov
sub
cld
enter
fbstp
mov
shll
jae
sub
add
in
add
mov
fmull
sub
fsubr
lcall
fs
call
inc
ret
movsb
cmpsb
xchg
fcmovb
negl
andb
pop
inc
push
test
call
cmpsb
sarb
push
aam
iret
test
lods
adc
in
jecxz
fs
lock
jae
cmp
mov
or
push
roll
cmp
xlat
repz
aas
push
adc
dec
or
add
inc
aas
stos
popa
or
testl
jae
sar
xchg
mov
fucomip
pop
or
mov
inc
cmp
fimull
and
xor
pop
out
bound
in
rcrl
fbstp
stos
clc
cli
cmpsb
push
or
mov
cmp
jnp
fstpt
lds
dec
mov
cmp
jecxz
icebp
outsb
mov
dec
cmp
dec
js
mov
iret
xchg
cmp
cmp
pusha
add
loope
stos
pushf
dec
cs
daa
push
sbb
mov
fldl
mov
add
sbb
xchg
and
jb
and
lods
loope
xchg
mov
nop
mov
jnp
cwtl
pop
cmp
mov
imull
push
inc
or
inc
or
punpckldq
xor
push
jne
jmp
or
clc
push
lahf
cmp
dec
sub
fs
and
push
and
pop
insl
sub
xor
test
fsts
rcll
xor
cwtl
pop
adc
dec
dec
mov
sarl
cmp
xchg
xor
cmp
shlb
loopne
repnz
outsl
mov
cmp
inc
or
xchg
repz
jle
ret
sub
add
enter
xor
cmp
dec
jmp
mov
mov
mov
loope
lock
xor
shl
adc
retw
adc
add
test
hlt
push
mov
sbb
loopne
popa
sbb
test
add
dec
out
inc
int3
add
pop
nop
push
add
mov
adcb
dec
pop
push
push
add
rcrb
inc
in
sbb
xchg
jno
xchg
repnz
test
lea
sti
stc
dec
cwtl
int
add
jecxz
ret
aaa
pop
pop
ret
pop
add
jmp
dec
mov
loop
dec
ret
inc
sbb
push
mov
lea
into
sbb
adc
pushf
pop
mov
mov
inc
add
or
pop
push
movsl
xchg
mov
test
pop
inc
addr16
mov
cs
aaa
and
dec
fnstenv
or
adc
jns
and
pop
and
aas
push
aam
dec
add
pop
xchg
jbe
fbstp
mov
hlt
pop
cmp
push
sub
cli
pop
shll
sub
mov
inc
aas
subl
scas
aaa
xchg
fwait
jle
cmp
js
imul
jo
pop
das
xchg
scas
stos
dec
xchg
sub
adc
mov
push
andb
outsb
dec
xor
pop
subb
or
pushf
in
imul
sub
lcall
mov
pop
inc
call
jecxz
fs
push
dec
cmp
adc
fs
cli
jo
or
pop
adc
jbe
decl
xor
add
pop
ss
mov
call
out
lret
and
push
jp
hlt
aaa
xchg
dec
scas
test
int
stos
cwtl
pop
imul
test
mov
mov
scas
subb
adc
fildll
mov
jg
cmp
lods
hlt
xchg
xor
int3
addl
fdiv
adcl
or
add
add
pop
cli
insl
pop
mov
sub
ljmp
rcrb
mov
pop
ljmp
xor
fwait
ret
inc
imull
fwait
lcall
movsb
mov
xor
jecxz
test
das
dec
and
data16
sbb
scas
mov
jge
add
test
mov
leave
mov
sub
pop
orl
ss
dec
iret
gs
test
xchg
push
cmp
xchg
ja
ja
mov
lcall
jmp
mov
js
xor
cltd
xchg
push
mov
data16
add
xchg
pop
stc
fisttps
jp
xchg
pop
in
das
pop
out
adc
sbb
xor
rcrb
dec
or
or
ljmp
call
inc
dec
orb
out
cmp
add
jle
lcall
sbb
or
dec
loop
sarl
sub
out
cli
push
clc
aas
das
nop
xchg
inc
fs
sahf
mov
jnp
outsl
xchg
negl
pop
jl
stc
xor
and
sub
pop
sti
arpl
jbe
sub
push
mov
mov
std
es
cmc
jbe
push
and
adc
pop
and
inc
xchg
imul
pop
out
mov
loope
jns,pt
add
xor
in
rcrl
xchg
inc
mov
jae
dec
inc
dec
mov
add
fldt
pop
js
repz
adc
scas
stos
rolb
sub
aad
loopne
push
cmp
insb
fs
mov
mov
test
out
xchg
lods
pop
inc
push
test
cmpl
lds
das
mov
gs
mov
ret
mov
jae
shll
pop
push
lods
fldenv
daa
test
cs
fildl
lock
cmp
int3
js
jmp
push
or
shll
sahf
cs
push
insl
sub
sbbb
leave
outsb
testl
pop
inc
sub
leave
aaa
jl
inc
cmc
adc
lret
cs
bound
fwait
es
lods
xor
outsb
lcall
lcall
lahf
movsl
js
dec
lods
cs
cmpl
mov
pop
lods
dec
bound
mov
or
jg
cmp
popa
jne
dec
xlat
mov
pop
filds
inc
xchg
xchg
dec
lahf
popf
popa
loopne
mov
mov
mov
jle
cli
aaa
dec
in
leave
int3
out
push
das
sbb
arpl
rorb
movsl
xchg
aam
mov
cmc
xchg
xchg
pop
int3
push
mov
inc
sbb
dec
jae
jecxz
rorb
jb
jns
les
mov
xchg
cmp
mov
leave
jae
or
sub
sbb
cmp
or
gs
lds
xchg
scas
rcll
mov
je
push
aaa
out
hlt
bound
stc
xorb
mov
insl
and
push
pop
jl
fstl
sbb
pop
mov
aad
jl
mov
aad
notl
shl
sbb
loopne
movb
in
mov
sti
mov
sub
into
jl
mov
xlat
sbb
ret
jg
jle
es
test
pavgb
sbb
sub
and
out
dec
andl
sha1nexte
push
pop
int3
adc
add
daa
int
cli
test
lahf
call
lahf
push
adc
jecxz
push
outsb
cmp
pop
adc
repz
cs
fcomp
xchg
arpl
dec
push
push
sub
lcall
inc
in
bnd
fimull
cmp
or
out
lods
mov
ds
pop
push
sub
in
fstps
fsub
ret
ds
scas
fcompl
addr16
fnstenv
adc
clc
mov
cmp
mov
push
int3
lds
jae
aaa
cmpsb
jge
cmp
xor
cmp
aad
lcall
lods
cltd
or
adc
mov
clc
pop
inc
add
fisubl
daa
test
mov
inc
add
mov
std
andb
outsl
pop
das
movb
loop
mov
jo
lds
and
lcall
cmp
mov
mov
addr16
and
pop
jns
sbb
or
jne
lds
mov
std
cmp
sub
inc
adc
cmc
push
sub
pop
inc
mov
pmuludq
stc
push
cmp
es
mov
jge
aad
xor
stos
sbb
mov
cmp
cmpsl
inc
repnz
inc
call
push
adc
in
jb
es
or
inc
mov
fnsave
loope
cltd
or
nop
inc
pop
sarb
sbb
mov
push
jns
xor
xor
mov
imul
aas
out
adc
outsb
subl
pcmpgtd
test
pop
push
mov
xchg
negl
jns
add
sbb
xchg
and
mov
inc
mov
int
repz
inc
jecxz
adc
sbb
les
sbb
cmp
aad
jno
outsl
mov
mov
or
mov
push
sub
rol
imul
ja
outsl
stc
jb
pusha
push
sahf
inc
out
add
daa
dec
xchg
fldenv
xchg
dec
push
cmp
xor
mov
fs
ja
int3
push
loop
push
clc
lcall
shrb
rolb
hlt
fbld
sti
sti
sar
dec
icebp
jne
inc
inc
loop
xchg
imul
aaa
sub
movsb
sub
xchg
inc
lods
dec
adc
cmp
xchg
mov
pop
add
dec
sbb
ds
in
mov
and
daa
mov
rcrl
cmp
mov
mov
mov
push
push
pop
fnsaves
leave
push
mov
and
lds
and
int3
lahf
stos
lock
pusha
sti
ljmp
sub
mov
cmc
clc
int
jno
aas
jnp
xchg
jle
sbb
sbb
fnstcw
insb
out
lcall
and
jle
loop
mov
inc
push
or
test
loope
mov
psrad
push
push
pushf
sbb
loop
jmp
and
mov
pop
sarl
rcrl
imul
jle
je
and
xchg
dec
lret
or
test
lds
scas
jns
fsubrl
jle
shl
lods
in
sti
rcrl
pop
adc
jg
add
inc
idivl
stos
lidtl
fdivrl
pop
mov
jecxz
lods
cmp
cmp
lock
daa
ret
lods
sarl
shrb
ljmp
add
popa
mov
aam
pop
adc
push
or
stc
push
push
loope
rolb
je
bound
outsl
pop
test
ret
mov
mov
test
mov
ret
inc
pusha
dec
shrb
arpl
pop
xorl
and
lahf
pop
out
sub
movsl
cmpxchg
mov
sub
pop
ljmp
jle
iret
fwait
dec
jmp
loop
icebp
loop
xchg
lcall
xor
fdivs
shr
cmpsb
faddl
mov
mov
hlt
repnz
adc
push
pop
je
sbb
cmp
in
adc
jno
and
insl
stos
ljmp
mov
mov
push
jge
sub
sub
into
mov
int
bound
sbb
dec
cmp
ret
sub
lds
popf
lds
int
mov
cld
or
inc
lahf
push
insb
leave
mov
mov
mov
xchg
add
sbb
dec
rorb
inc
enter
adc
test
pop
mov
mov
test
jmp
xchg
ja
push
ljmp
repnz
arpl
movsb
adc
popf
enter
add
inc
dec
js
in
pop
push
out
testb
add
and
xor
inc
pusha
pop
loopne
sbb
push
and
shl
sbb
cltd
int
loope
imul
push
jl
jae
sub
test
mov
jecxz
movl
aas
adc
push
jmp
std
sarl
xor
nop
std
pop
xchg
xor
fmul
enter
test
ds
shlb
push
leave
jmp
arpl
pop
xchg
sbb
jl
int
mov
mov
pop
push
jp
ss
aaa
cmp
pop
add
sbb
xchg
out
sub
clc
mov
mov
ficoms
mov
aas
jmp
xchg
jge
adc
aas
jle
and
aad
addr16
mov
xchg
cld
xor
cmp
repnz
test
push
fsubs
mov
and
add
jne
dec
repz
sbb
jle
loop
mov
and
arpl
loopne
fmulp
andl
fistl
xor
cli
pop
ss
dec
jae
adc
mov
es
cmpb
arpl
jl
inc
inc
sbb
ret
shrb
or
out
inc
aad
js
rcll
dec
mov
mov
push
xchg
xor
insl
je
loope
xor
mov
dec
mov
cmpsl
dec
repz
sti
lahf
dec
fisubs
aad
movsb
sbb
cld
ret
cmp
xor
or
add
fninit
hlt
fdivp
fisubrl
testl
mov
jge
sbb
adc
push
pop
mov
and
sub
jo
xchg
inc
mov
shrb
mov
and
scas
xor
pop
testl
icebp
jecxz
rorb
or
push
lds
into
jnp
mov
imul
repz
int
xor
rcl
jae
stos
add
movb
push
rorl
outsl
les
and
mov
inc
pop
xchg
dec
mov
jnp
fidivrs
jl
sub
orb
jmp
sbb
clc
push
push
xor
fidivrl
in
pop
mul
add
ret
incl
push
lods
fisubrs
xchg
outsl
js
leave
add
cli
mov
pop
inc
add
inc
xchg
popf
add
pop
xor
add
fsubs
push
xchg
stos
repz
jo
mov
jmp
cli
cmovp
mov
inc
aad
mov
in
je
cmc
daa
ret
sub
lds
cmpsb
test
pop
fnsave
pop
add
lret
bound
jmp
adc
cmc
and
stc
jecxz
pusha
xchg
push
sbb
scas
dec
repnz
pop
cmp
sub
dec
sub
loop
adc
dec
sbb
mov
stc
mov
data16
lret
jge
or
pop
flds
sbb
ud0
pop
cmp
push
lods
sbb
or
inc
rclb
cmpsl
aam
stos
mov
add
mov
mov
xor
mov
xlat
mov
in
and
popf
sar
imul
lahf
pop
push
sbb
daa
pusha
psubusb
cmpsl
jle
lods
pop
dec
sbb
pop
mov
int3
aam
xchg
xor
add
dec
loope
or
sbb
ret
inc
shr
mov
or
daa
test
cmp
sub
push
cmp
bound
bnd
adc
cmp
xor
mov
pop
xchg
repnz
scas
aaa
push
mov
ficomps
sbb
bound
sbb
or
in
pop
movsl
dec
pop
or
inc
lret
test
mov
fsubs
and
xor
push
ret
popf
sbb
aas
jle
add
test
dec
movsb
pop
fwait
and
sbb
or
xchg
add
inc
out
pop
mov
mov
icebp
dec
stos
aas
pop
gs
mov
mov
adc
or
roll
fcomi
push
xchg
push
xor
mov
or
mov
add
sub
xor
pop
jo
cmp
push
imul
inc
test
and
push
es
xchg
sub
mov
xor
into
mov
fimuls
jl
and
inc
movsl
inc
cmp
xchg
dec
xchg
inc
sub
sbbb
cmc
loop
sbb
mov
int3
mov
cmp
test
sbb
movsl
cmp
sti
mov
push
js
jg
xchg
mov
jb
jl
mov
cs
mov
inc
dec
mov
dec
inc
dec
out
or
jne
add
cmpsb
add
mov
jmp
movsb
mov
pop
or
test
outsl
dec
or
fwait
sub
add
jmp
negb
mov
in
cmpsl
pop
int
lods
cltd
jne
add
outsb
ds
xlat
xchg
popf
mov
push
or
push
jnp
aam
shl
xlat
sbb
lea
sub
jae
fistl
nop
insl
dec
out
sti
jne
mov
jo
and
popf
push
dec
adc
jno
popf
ljmp
jbe
das
pop
cmp
icebp
sub
or
test
das
mov
mov
and
in
adc
mov
jno
mov
ret
cmp
dec
mov
sub
push
rcll
out
loop
xor
and
stos
nop
insb
nop
pop
lret
dec
cmpsl
ret
inc
int
xchg
cs
je
nop
sti
daa
and
dec
mov
aaa
gs
cmp
sub
rcrb
and
sbb
mull
jge
add
jno
jge
pop
mov
jno
lahf
pop
stos
sub
dec
add
push
idivl
pop
ljmp
cmp
and
mov
outsl
mov
sbb
or
std
pop
or
ret
gs
cmp
ret
stos
inc
movsb
sub
cmpsl
mov
dec
sahf
insl
enter
cs
add
hlt
xchg
push
shr
pusha
sub
test
gs
ret
push
insb
mov
test
push
push
fistl
adc
xchg
sahf
pop
inc
xchg
lcall
ja
and
lcall
cmc
int3
sub
adc
mov
push
jbe
test
dec
lods
sti
das
icebp
add
inc
pop
push
add
iret
gs
xchg
adc
mov
lret
lret
pop
stos
adc
mov
inc
and
je
push
lcall
cmpsb
insl
stc
xchg
add
dec
sbb
jae
push
mov
mov
sub
fidivs
rorb
mov
dec
mov
test
mov
cmpsb
adc
pop
inc
adc
inc
in
jno
dec
mov
int3
and
stc
cmpsb
test
dec
ret
push
xorb
ja
jns
push
loope
nop
dec
icebp
add
mov
cltd
test
sub
mov
mov
dec
dec
jmp
int3
xchg
fldenv
cltd
div
xor
inc
mov
clc
jmp
ficoms
sub
aaa
sbb
arpl
div
sub
xlat
and
jo
leave
ja
adc
jno
mov
xchg
scas
in
inc
arpl
cmp
xchg
fxch
jl
and
mov
out
jne
in
call
mov
les
lret
push
hlt
sbb
and
pop
dec
fiadds
fisubrl
mov
fildl
bound
ret
and
push
pop
push
mov
mov
adc
lock
cld
push
movsb
mov
pop
ss
push
popf
and
loopne
jb
ss
push
aam
add
ljmp
inc
jmp
mov
jb
xchg
inc
jle
js
sbb
xchg
out
pop
push
pop
nop
inc
pop
push
mov
loope
mov
xor
inc
insl
shlb
cltd
lret
mov
cs
pusha
cmp
adc
cmp
cmp
insb
dec
xchg
mov
notb
jge
inc
outsl
ljmp
test
mov
arpl
dec
mov
out
loope
and
in
int
jmp
cmpsl
mov
es
repnz
push
jbe
aas
ret
fmulp
in
bound
mov
loope
or
jo
xchg
jmp
int3
dec
cmp
sub
mov
in
outsl
addr16
in
les
xchg
lret
inc
out
mov
cmp
mov
cltd
and
sub
jmp
sub
xor
cs
or
jecxz
mov
shll
sub
scas
mov
fdivl
in
mov
sbb
sbb
fisubl
cmp
jae
lods
lret
insb
pop
fildll
sti
xchg
inc
xorb
aas
push
loope
cltd
add
and
pop
in
cmp
repz
push
pop
lahf
test
cld
pop
js
addr16
fidivl
or
in
or
jmp
dec
lret
adc
idivb
xor
loopne
xor
in
jmp
pop
pop
mov
and
pusha
aad
rcrl
cmp
and
jg
ds
push
and
mov
dec
jo
add
mov
mov
jo
ror
jmp
and
inc
int3
cmpsb
mov
movsl
adc
and
push
push
vmovntpd
insl
xlat
das
ja
addb
ja
addr16
mov
ret
sbb
jb
mov
lds
daa
mov
jne
dec
pop
mov
ss
jg
enter
lcall
add
pop
lea
arpl
popa
aaa
xchg
sub
lret
imulb
mov
cltd
pop
in
les
lret
js
mov
push
dec
outsl
mov
shll
pop
cmp
xchg
pop
adc
sbb
ret
fwait
dec
sbb
add
int
insl
push
mov
adc
inc
lock
out
outsl
bound
fwait
mov
roll
xchg
enter
out
sbb
cmp
aad
std
xchg
mov
outsl
gs
mov
jo
sbb
fdivs
aas
js
mov
fsub
mov
imul
xor
aam
addr16
data16
cmp
jle
out
icebp
inc
mov
bound
idivb
push
scas
xor
mov
sub
pop
stos
inc
aaa
stos
cld
adc
bnd
fisttps
mov
out
idivl
or
pop
push
cmc
mov
xchg
fstps
fwait
out
shll
adc
xchg
jbe
fsubs
cld
jne
mov
scas
xchg
hlt
or
sahf
fcompl
lds
pop
xor
lret
and
inc
add
pop
mov
loopne
sbb
ljmp
insl
xor
pop
push
pop
mov
dec
mov
dec
or
xchg
jle
mov
or
add
xchg
lea
adc
outsb
outsl
aas
xchg
jnp
cli
sub
mov
inc
mov
and
jnp
xor
out
jnp
call
push
mov
push
ffreep
mov
pop
pop
xor
sub
repnz
mov
add
mov
imul
mov
xor
jecxz
mov
pop
xchg
out
mov
inc
mov
xor
fcmovnbe
dec
mov
jge
je
xchg
sub
xchg
aaa
or
js
push
mov
or
into
das
lods
repz
gs
jbe
push
jae
stos
outsb
dec
nop
dec
mov
adc
mov
mov
xchg
lea
clc
hlt
cmpsb
add
mov
jns
mov
lahf
movsl
ds
mov
sub
movsl
sbbl
ret
sub
out
pop
shl
sbb
idivb
mov
pop
fsubr
aas
cmc
pop
push
in
pushf
push
loope
xor
xor
cltd
nop
scas
mov
cmc
rcrl
cmpl
inc
ret
int3
popa
sbb
xchg
cmp
outsb
xor
or
cwtl
and
rcll
dec
into
mov
mov
dec
nop
push
mov
xchg
sub
dec
sub
jbe
popa
cmc
jne
lcall
xor
mov
or
sbb
mov
shrl
fldcw
inc
sbb
jecxz
adc
adc
or
push
push
iret
ror
jns
popa
das
mov
jbe
xor
mov
inc
inc
add
cltd
cmp
sbb
int3
sbb
clc
mov
scas
lret
mov
push
jecxz
mov
and
mov
or
ss
mov
cmp
push
inc
mov
jmp
ret
hlt
push
push
fcoml
push
nop
xchg
push
mov
cmp
xchg
in
lods
fidivrl
push
test
adc
push
sahf
jmp
sub
xchg
sbb
mov
adc
push
cmp
sub
pop
mov
push
and
nop
fmulp
mov
aam
and
into
pusha
mov
stos
sub
push
sub
ds
out
out
call
ja
sub
dec
and
sub
xchg
mov
fiadds
gs
cmp
pop
xchg
movsl
adc
lahf
jmp
or
clc
idivb
xor
xlat
adc
pop
loope
test
adc
rorb
stc
sub
and
inc
mov
cmc
cmpsb
rorl
adc
hlt
mov
shl
ret
mov
fwait
push
es
and
arpl
mov
aaa
cltd
push
cmp
rcr
arpl
cmc
in
cld
int
in
mov
aad
push
add
cli
xchg
dec
pusha
into
test
insl
rol
stos
push
outsl
cmp
lret
call
aaa
sub
sub
adc
icebp
or
shrl
lock
add
pop
mov
das
jge
add
xchg
cmp
ljmp
xchg
jle
pop
or
test
or
nop
int3
mov
and
add
in
or
mov
ficoms
scas
dec
pusha
les
dec
dec
xor
dec
dec
sbb
pop
imul
dec
cmpsl
call
out
pop
inc
xorb
fs
iret
push
cmpl
in
jns
mov
jl
jb
dec
notb
lret
leave
je
fdivrp
movsl
in
cmpsb
ljmp
and
data16
les
data16
leave
pop
into
mov
pop
fcomps
fs
sbb
mov
sbb
arpl
mov
push
fcomps
das
jl
mov
mov
mov
rorb
mov
lods
jnp
pop
cld
into
xor
add
stc
sbbl
pop
das
daa
xor
jo
push
movsb
mov
mov
sbb
jle
nop
movsb
mov
call
jmp
lcall
icebp
xchg
notl
je
iret
add
imul
jp
push
jbe
mov
test
movsb
loop
cmp
jmp
xchg
rcrb
leave
xchg
insl
scas
scas
xchg
sarb
fs
mov
shrl
icebp
shll
add
sbb
sub
mov
pop
mov
fsubp
add
add
negb
xchg
movsl
mov
add
mov
in
test
fsubl
jnp
inc
pop
pop
adc
sbb
xor
std
sub
pop
pop
pop
repnz
inc
mov
jp,pn
mov
test
and
pop
mov
stos
loopne
testb
imul
aam
or
mov
adc
push
or
mov
lock
push
xor
or
xor
xor
test
push
cmp
jnp
nop
jnp
xor
cmpsl
xor
ret
mov
mov
jmp
out
dec
arpl
or
push
ss
call
push
jge
mov
xchg
xor
loop
aad
mov
push
aam
xchg
or
dec
imul
cs
and
movntq
mov
sub
add
mov
call
dec
sbb
decb
adc
sub
fucomp
insb
sbb
mov
mov
jns
movsb
xor
jae
in
insb
sub
notl
out
jle
push
imul
and
sub
nop
leave
sarl
les
dec
data16
add
test
fisubrs
data16
pop
adc
or
call
cli
repnz
sbb
ja
mov
mov
call
mov
add
inc
mov
in
les
adc
aas
addr16
xchg
adc
lahf
xchg
pop
loopne
xor
push
inc
movsl
imul
inc
cmpsb
adc
into
inc
cs
bound
mov
shll
stos
mov
shlb
das
cld
cmp
pop
xchg
add
push
push
inc
insb
and
movups
outsw
push
daa
xchg
xchg
mov
sarb
in
pause
mov
aaa
pusha
inc
sbb
pusha
sub
cmp
add
cmp
aaa
fstps
push
xor
xchg
enter
into
ja
xor
loop
ja
in
ss
sbb
sbb
pop
shll
leave
shl
testb
push
mov
pushf
shlb
dec
fbld
xor
adc
xor
jb
push
cmc
in
jne
mov
orl
jmp
shlb
cmp
add
movsl
int
outsb
pop
cmp
test
stos
cmp
jbe
sbb
call
dec
push
rorl
push
xchg
push
xor
jbe
xorb
fists
xchg
add
std
push
sbbb
cli
in
dec
int3
aaa
xlat
cmp
icebp
or
sub
sub
add
jp
dec
sub
jl
ljmp
sub
xlat
adc
push
roll
aaa
les
mov
stc
mov
lock
rcl
gs
bound
leave
std
testl
test
dec
lea
sarl
nop
mov
mov
dec
lret
dec
rol
jo
sub
andb
push
sbb
movsl
dec
sbb
out
sti
xor
cmp
lcall
les
rcrb
mov
push
addr16
fldenv
pusha
or
mov
push
or
pop
add
mov
test
add
imul
lret
sahf
pusha
fcoms
lcall
and
les
dec
push
xor
or
int
data16
push
adc
sub
push
dec
jp
push
inc
add
adc
hlt
or
add
or
mov
into
push
pop
mov
jb
push
imul
dec
mov
adc
out
add
enter
hlt
fistps
lret
mov
xor
dec
jb
mov
sub
jl
ret
pop
filds
dec
mov
jae,pt
orb
arpl
push
sub
or
cmp
mov
mov
xorl
daa
ffreep
int
cmp
shll
mov
mov
adc
leave
ss
mov
adc
data16
mov
popf
out
subb
pop
stos
mov
add
scas
cmp
add
sub
cmp
rcl
inc
and
jbe
addr16
xor
insb
xor
jno
out
xchg
fldenv
sub
jmp
fsubrl
test
int3
out
jge
mov
dec
mov
mov
aas
or
mov
xchg
repnz
sbb
pushf
scas
outsb
mov
lods
jbe
mov
sbb
iret
fists
imul
loop
repnz
sub
in
popf
mov
xchg
adc
rcll
inc
mov
fdivrl
movb
out
cld
push
addr16
jmp
sub
push
add
addr16
xchg
test
sbbb
mov
pop
hlt
pop
mov
outsl
or
lock
std
and
loope
mov
sub
sbb
stc
popf
pusha
sub
mov
jl
xor
jne
lahf
jmp
int3
jnp
push
dec
ljmp
mov
sti
ficomps
popf
lods
fstpt
aaa
xlat
push
and
std
iret
and
js,pt
repnz
cmp
mov
lods
push
pop
jo
pop
cmp
je
jne
mov
sub
pop
addr16
fcmovu
repnz
les
xor
adc
jo
sub
and
lret
jg
cld
loop
jo
inc
fdivrl
test
jl
mov
xor
gs
pop
inc
lods
insl
bound
outsb
jmp
lods
fnop
or
xchg
lea
xor
or
loope
repnz
mov
scas
addr16
xor
sub
mov
loop
cwtl
lock
cs
adc
out
mov
jl
cmp
or
dec
dec
inc
data16
lahf
nop
mov
adc
mov
cmpsb
push
aas
jo
and
incb
repnz
xchg
jmp
bound
outsl
or
arpl
out
xor
jmp
cmp
outsl
scas
mov
adc
fbstp
sbb
lcall
cwtl
sub
adc
addl
into
and
inc
idiv
mov
push
mov
ror
jle
lock
adc
in
rol
xchg
inc
sub
jmp
inc
shll
pop
fcomps
daa
pop
mov
cltd
inc
xor
push
sub
jae
ljmp
movb
mov
cmp
mov
inc
fcoms
loopne
mov
aaa
push
cmp
movsb
ja
or
testb
pop
lcall
cwtl
faddl
repz
push
mov
clc
cmp
insb
xchg
dec
pop
push
dec
mov
cwtl
mov
and
repz
push
mov
loope
in
jg
leave
inc
mov
push
adc
sbb
mov
fs
mov
aam
enter
xchg
js
loopne,pt
jge
test
xor
aaa
inc
in
or
dec
add
mov
scas
xchg
sarb
jge
xchg
loopne
mov
add
mov
pop
fcoml
push
pop
ret
mov
cltd
fwait
sub
mov
inc
arpl
cld
std
test
iret
ss
imul
pop
outsb
jle
or
mov
sub
int
pop
jmp
je
and
jne
pop
xor
decb
fcmovnbe
nop
xchg
adc
in
fistpll
jae
jl
cld
mov
loopne
inc
mov
ret
mov
push
cmpsl
mov
dec
cli
fcompl
xor
push
pop
dec
mov
lret
mov
mov
es
out
adc
pusha
or
outsl
and
mov
adcb
mov
adc
les
mov
lea
pop
cmp
int3
in
inc
lret
or
inc
mov
leave
ret
mov
xorb
mov
pop
adc
mov
cmp
inc
jmp
and
sub
push
je
iret
adc
ret
movb
fadds
lcall
popa
cwtl
dec
xchg
int
pop
es
push
or
insl
adc
mov
mov
xor
stos
out
xor
add
cmpsb
or
jg
in
lret
lods
sub
or
aam
cmp
lret
jge
js
pusha
xor
into
pop
out
ror
ret
mov
and
out
filds
pop
push
cmp
adc
pusha
mov
mov
loope
xor
cmp
int
and
fsts
loopne
icebp
push
pop
inc
mov
mov
xlat
mov
jmp
movsl
je
jns
pop
popa
add
cmpsl
push
push
das
fimuls
ret
lret
addr16
popa
outsl
jmp
sub
jo
dec
mov
adc
dec
divb
mov
xor
sub
fcompl
cmp
bound
dec
imull
sbb
sub
subl
lahf
xor
pop
lods
xchg
cmp
or
or
sbb
and
in
scas
shlb
nop
pop
dec
stos
addr16
std
xchg
test
push
sbb
sbb
sbb
icebp
mov
fnstenv
pop
jl
rcll
and
fwait
pop
lret
mov
mov
cmp
cmp
in
push
sti
cwtl
call
popf
test
mov
lahf
in
lahf
sub
dec
add
int
cwtl
int
hlt
rclb
inc
push
stc
lret
dec
xchg
cltd
and
cmp
mov
fcmove
xchg
sbb
repnz
sbb
push
lret
lods
adc
adc
mov
fbstp
incl
leave
aam
aaa
lock
daa
dec
movl
lea
loopne
clc
xor
sbb
mov
xchg
mov
mov
cwtl
outsl
inc
jnp
xor
jge
mov
and
sbb
mov
xor
loop
and
xchg
cli
out
aaa
int
push
adc
mov
std
inc
imul
cmp
pop
adc
push
add
push
jge
jne
and
inc
sub
xlat
in
dec
mov
mov
dec
inc
clc
sbb
movsb
mov
dec
adc
mov
push
hlt
or
or
jg
out
cmp
outsb
enter
lock
shll
imul
inc
jg
jge
mov
cmc
cmpsl
fstpl
xchg
scas
cmp
sahf
in
mov
pop
pop
gs
sub
and
mov
cmp
ss
shll
xor
xchg
push
mov
repnz
mov
push
inc
jns
mov
sbb
filds
mov
pop
mov
repz
subl
mov
cmpsb
lods
mov
sti
xor
in
push
cwtl
mov
and
cmp
rclb
std
fmull
icebp
push
pop
and
hlt
scas
icebp
push
push
fldt
rorl
mov
xchg
cmp
ror
add
jmp
test
jle
iret
pop
fcomip
mov
pop
dec
jb
add
or
adc
jmp
xor
loopne
lods
bswap
adc
orb
add
mov
stos
pxor
daa
loop
mov
cmpl
lods
loop
mov
push
test
insb
fucom
out
cli
nop
stos
cli
lock
and
rorb
and
aam
cli
adc
adc
jbe
test
dec
icebp
mov
pop
add
sub
and
out
mov
lret
jmp
pop
test
and
subb
pop
mov
pop
mov
in
bound
mov
cltd
mov
and
add
cs
gs
stos
jecxz
leave
shrl
movsb
adc
xlat
int
push
mov
cltd
or
sbb
jle
popf
popa
add
jbe
int3
jo
xor
add
iret
loop
shlb
push
dec
pop
into
adc
mov
sub
jns
sbb
ret
scas
std
push
into
pop
push
aad
ss
ds
jecxz
push
sub
imul
and
sbb
cli
or
cmp
sbb
sub
and
stos
test
xlat
xor
push
loope
jecxz
or
cmpsb
jmp
imul
iret
outsb
xchg
mov
shrb
jns
mov
sbb
mov
push
jb
rcrl
mov
push
popf
mov
test
inc
cmpxchg8b
loop
fwait
aaa
mov
rclb
xor
dec
out
mov
ds
sub
mov
jmp
gs
lret
cmp
cltd
and
xchg
push
xor
mov
mov
pop
mov
testl
cmp
popf
add
pop
mov
loope
sub
cli
js
add
adc
sbb
jecxz
jl
pop
dec
adc
cmpl
inc
or
pop
into
subb
jecxz
imul
mov
je
jo
jle
sub
sub
outsb
dec
dec
outsb
and
ds
stos
mov
lcall
sub
push
jecxz
mov
mov
xchg
pop
xchg
inc
sbb
pop
mov
xchg
loopne
scas
add
pop
push
xchg
jg
xchg
jge
dec
add
xor
aad
mov
mov
xor
mov
adc
sub
dec
push
mov
shl
mov
jno
jno
pop
mov
lahf
cmpsl
pop
cmp
adc
pop
push
std
and
js
cmp
xor
adc
mov
xchg
imul
out
mov
hlt
lods
dec
in
xlat
cli
int3
pop
rsqrtps
daa
fdivrl
xlat
les
je
fisubl
test
adc
jge
ja
lods
add
push
sbb
std
mov
ret
dec
jo
cli
mov
les
jbe
push
into
mov
jbe
sub
jo
jmp
mov
aad
jge
mull
popf
sbb
jbe
adc
jo
loop
dec
lret
cmpsb
lcall
imul
or
dec
popa
pop
aad
insb
sbb
jns
pop
call
in
jnp
push
mov
mov
subl
jbe
stc
mov
push
xchg
push
decb
jb
pop
xor
push
or
outsb
pop
push
or
pusha
cmpsb
pop
lret
outsb
rcr
mov
movsl
cmp
lea
stos
add
ds
adc
addr16
and
mov
and
bound
mov
pop
loope
or
imul
add
ss
inc
and
dec
orb
test
inc
push
pushf
cmc
xor
sarb
add
xchg
or
or
sbb
mov
and
arpl
xchg
and
sbb
stos
int
mov
sbb
lret
lock
cmp
push
divb
mov
mov
or
pop
enter
inc
xlat
or
lret
roll
ss
pop
pavgb
filds
jo
lods
pop
inc
cmpsb
cmc
sbb
lods
lock
scas
adc
cmp
inc
or
dec
inc
jns
loopne
stos
scas
cmpsl
fildl
test
add
sub
mov
divl
loope
pushf
popa
xchg
add
push
or
jnp
and
cmp
pop
popf
adc
xchg
fwait
movsb
push
in
mov
mov
jecxz
icebp
setns
add
push
iret
test
sbb
dec
mov
mov
sub
shl
mov
or
inc
call
cli
mov
mov
mov
shll
mov
imull
lods
push
aam
rorl
repnz
dec
imul
mov
pop
mov
adc
pop
dec
inc
aas
lods
test
push
push
inc
mov
pop
or
jno
mov
int
arpl
xchg
inc
js
mov
lods
jne
add
insb
add
push
push
adc
mov
sbb
es
mov
lret
testb
orb
fcom
or
fadds
mov
fdivl
out
xchg
adc
loope
lcall
fldt
inc
add
fnstsw
cmc
fstpt
xchg
add
jmp
jle
mov
cld
push
pop
xchg
fcmovne
lods
cmpsl
nop
dec
push
xchg
insl
and
lods
mov
xor
and
push
adc
cmp
or
pop
mov
mov
inc
sbb
lret
and
mov
lods
aas
xchg
shlb
loopne
dec
inc
mov
xor
dec
cmp
into
lea
les
fcomps
ret
jne
test
pop
scas
icebp
hlt
inc
hlt
push
leave
and
jecxz
bound
mov
movsl
mov
xchg
loopne
scas
stc
imul
fs
sbb
testb
xorb
xchg
addr16
lret
ds
in
ljmp
nop
lahf
mov
clc
cwtl
push
mov
repz
jl
icebp
mov
stc
inc
fidivl
adc
daa
mov
and
mov
cli
mov
fs
in
es
or
scas
xor
imul
mov
sub
xor
sub
stc
js
into
cmp
into
push
mov
insl
sarb
and
aad
enter
xchg
cmp
in
cmp
outsb
std
push
sub
dec
cmp
nop
adc
fadds
aaa
xor
adc
clc
outsl
pusha
and
sub
dec
movsb
cmp
xor
outsl
jne
lods
mov
push
lcall
or
lea
jge
sub
cmp
jmp
sub
mov
cmp
sbb
mov
int
arpl
repnz
jnp
jp
add
lahf
sub
bound
inc
push
hlt
imul
mov
cld
mov
or
inc
push
and
pop
cld
push
in
sbbl
nop
ss
sbb
cmc
sahf
dec
and
add
sub
jmp
push
adc
or
xorb
adcb
xor
dec
shlb
sub
cmp
and
dec
adc
push
cmpsl
add
push
mov
push
mov
outsl
sbbb
xorb
mov
stos
push
mov
subb
hlt
xchg
loop
cmp
fs
movsb
in
subl
mov
pop
std
ret
xchg
lods
mov
inc
imul
mov
and
adc
in
cmp
stos
sbb
add
push
gs
dec
sub
or
fbstp
scas
adc
sbb
ret
aas
xchg
out
fisubrl
mov
fidivs
je
push
lods
mull
ljmp
inc
sub
xchg
insl
sbb
fisubrl
mov
subl
pop
xor
cld
jl
dec
or
insb
dec
add
mov
adc
pop
das
in
pop
push
das
push
mov
ljmp
iret
sbb
xchg
xchg
lret
les
jle
or
mov
mov
cmp
pop
enter
fs
std
inc
fdivrp
xchg
mov
ja
xchg
fsub
mov
add
jecxz
arpl
xchg
and
neg
jle
rorl
outsb
jl
insl
dec
lock
mov
push
jmp
pop
dec
bound
sub
mov
cli
pop
dec
jp
push
mov
pushl
sbb
aaa
adc
ret
dec
mov
pop
out
pop
dec
lods
cmp
inc
cmp
mov
cmp
outsb
loopne
pop
arpl
mov
inc
add
dec
aam
pop
jg
or
mov
adc
cld
aaa
fldt
mov
jmp
shlb
cmp
mov
int3
push
lcall
inc
fsubrs
pop
stos
lods
js
sbb
lcall
out
jg
fisttpll
stos
popa
cmp
dec
lahf
sti
data16
pop
fwait
sbb
fucom
sbb
ljmp
push
into
inc
pop
daa
cwtl
jbe
jbe
std
lret
or
xchg
test
cmpsl
aad
mov
fs
push
ljmp
lods
pop
shl
sbb
test
cltd
lea
xor
jne
in
jmp
movsl
sub
xlat
outsl
push
mov
push
lcall
test
inc
dec
push
lahf
jbe
sbb
testb
and
iret
stos
mov
es
inc
and
stc
jns
enter
sbb
inc
inc
mov
mov
inc
or
pop
jle
push
stc
adc
sub
jmp
or
mov
fbld
sub
and
xor
imul
or
sbb
bound
adc
mov
mov
jge
add
orl
or
mov
test
rcll
fidivl
xlat
push
jno
jle
rorl
mov
loop
dec
popa
cmc
es
roll
inc
mov
andb
push
in
dec
subl
shll
cs
or
pop
in
mov
mov
inc
gs
add
jns
xor
mov
test
jle
test
mov
jge
add
xor
shrb
pop
adc
add
test
test
mov
out
jno
sub
push
mov
movsl
pusha
push
mov
xlat
stos
xor
imul
leave
pop
cs
jmp
push
std
icebp
sbb
inc
clc
insb
mov
les
in
jbe
pop
jecxz
out
fisttps
mov
stc
dec
pushf
lods
insl
mov
sub
dec
cmp
js
add
fs
adc
fs
das
mov
popf
fisttps
fwait
pop
aad
leave
push
adc
dec
add
das
push
ret
adc
scas
add
popa
xor
ljmp
jge
in
mov
lahf
xor
mov
gs
lret
pop
sub
lret
mov
jnp
inc
push
xchg
mov
pop
fildl
jl
and
pop
rolb
bound
jo
jmp
push
cmpsb
nop
add
out
inc
test
mov
call
sti
cltd
pop
xchg
inc
decb
std
mov
out
es
adc
and
cmc
dec
dec
ljmp
es
push
add
push
jp
cmpsb
inc
mov
jle
clc
add
add
js
jbe
std
push
inc
repnz
push
sti
cli
dec
sub
fcoml
enter
inc
enter
cld
mov
xchg
mov
push
mov
mov
pusha
and
sbb
scas
repz
jg
sub
iret
int3
sarb
inc
xorl
sub
int
sahf
fwait
sbb
add
xchg
or
ret
sbb
xchg
ret
inc
pop
push
dec
loope
icebp
pop
icebp
in
arpl
leave
pop
stos
xor
jo
arpl
inc
mov
cmp
xchg
lds
daa
sbb
bound
push
jp
cmp
std
scas
push
mov
outsl
push
cmpsl
js
in
ffreep
jl
cltd
adc
adc
dec
push
leave
clc
adc
pusha
or
enter
lahf
loop
inc
adc
mov
pop
pop
test
lret
push
aad
dec
in
lahf
iret
and
push
pop
pushl
inc
jne
jbe
lea
insb
mov
sti
and
popa
out
mov
dec
test
push
fcoms
push
mov
ja
mov
jmp
pop
out
lret
in
mov
in
fs
ja
movsb
mov
push
inc
push
push
js
out
mov
cmp
popf
data16
xchg
dec
push
and
and
test
sub
pop
lea
xor
cmp
push
outsl
xor
sahf
test
inc
scas
lea
cmp
xchg
mov
inc
xor
inc
ficompl
mov
dec
cmp
push
stos
divl
pop
add
or
sub
sub
adc
test
jno
movsl
pop
adc
stos
pop
mov
pop
test
lret
cmpsl
mov
add
fs
out
pop
fldcw
xchg
dec
lahf
filds
push
int
adc
add
sbb
cmp
aas
mov
push
xchg
int
scas
ret
mov
jo
leave
sub
loope
push
lods
fcompl
out
mov
cwtl
push
push
inc
arpl
out
mov
mov
jno
loopne
adc
fidivl
push
aaa
or
out
cmp
or
mov
sub
xchg
imul
mov
sub
push
adc
and
fwait
mov
ret
xchg
jle
sub
dec
into
enter
cli
or
sub
lods
sarb
mov
pop
lods
icebp
and
push
movsb
int3
xchg
loopne
mov
push
dec
hlt
add
stos
std
adc
and
rcr
xchg
inc
insb
in
lret
cmpsb
decb
dec
adc
js
fists
loopne
pop
dec
or
cmp
addr16
arpl
mov
inc
loop
enter
pushf
adc
and
ja
daa
addb
aam
out
and
inc
bound
jbe
mov
lahf
xchg
adc
adc
aad
xor
mov
push
dec
jge
push
push
push
push
and
sarb
xchg
test
dec
imul
push
es
pusha
pop
and
dec
or
js
pop
mov
bound
loope
loope
inc
xor
daa
sub
sti
cs
inc
sbb
jmp
jae
in
cli
push
lds
dec
into
add
lret
and
lcall
rcl
adc
cmp
fwait
jmp
push
pop
mov
dec
lret
test
test
in
dec
jecxz
scas
pop
loopne
inc
mov
and
cmp
or
lods
mov
loop
popa
test
int
add
and
popf
jle
push
into
jne
xlat
fistl
lahf
mov
push
mov
cmpsb
out
bound
add
cs
in
jb
ficoms
es
movsb
mov
add
xor
shll
mov
insl
jnp
sbb
jb
inc
cs
sarb
fadd
vpunpckhwd
fwait
push
arpl
and
sub
jbe
insb
scas
jl
mov
scas
mov
sub
sbb
lea
adc
or
push
jae
sbb
sbb
sub
fistl
mov
lods
fildll
aaa
test
or
pop
lahf
xor
inc
xchg
mov
xchg
out
mov
pop
pop
dec
xchg
fsqrt
mov
push
lods
xchg
inc
pushf
push
rorb
jle
enter
xchg
sub
loope
aam
dec
mov
adc
movsb
and
jnp
int3
lods
sbb
sub
les
mov
lock
insl
ja
jo
imul
sub
stc
cmp
jbe
sbb
xor
jmp
cmp
cld
jae
xchg
les
cs
mov
sub
clc
dec
xchg
rcll
jecxz
mov
dec
push
mov
push
sbb
shl
int
push
dec
outsb
xchg
shr
mov
fs
dec
jle
mov
sub
test
inc
xor
lods
sbb
add
adc
data16
mov
cmovb
adc
jp
adc
pop
inc
insl
lcall
pushf
mov
lds
shlb
push
mov
ss
and
or
or
fildl
inc
addl
punpcklbw
or
loopne
push
push
and
jo
pop
jp
adc
pop
adc
dec
sub
or
mov
add
jecxz
xchg
les
jae
mov
inc
dec
push
fmuls
mov
stos
arpl
mov
cli
dec
jb
hlt
cltd
sbb
jnp
xchg
mov
xor
dec
pop
sub
inc
into
scas
stos
out
loopne
xchg
or
shl
into
xchg
mov
loopne
inc
sbb
push
test
cwtl
fmull
xchg
je
in
jbe
cmpsl
sbb
xorb
ds
add
sub
sub
or
aad
push
and
xchg
add
or
insb
mov
and
pop
mov
shll
push
rorl
xchg
push
sbb
mov
mov
repnz
cmp
shrl
inc
test
xchg
sub
push
or
xchg
and
clc
mov
js
or
pop
xor
add
imul
sub
rolb
xchg
popf
out
mov
clc
sbb
rep
js
cmpsl
lock
and
jmp
cwtl
scas
push
or
lret
push
aad
cld
pop
mov
sub
push
pop
jg
dec
sub
adc
xor
mov
jno
scas
test
rolb
cmc
loop
lods
hlt
mov
jge
fnsave
imul
pop
sbb
lock
fstpl
dec
or
aaa
or
or
in
data16
push
jecxz
and
test
or
into
pop
sbb
and
sti
pop
cmp
mov
mov
std
lcall
pop
es
adc
dec
int
jg
mov
and
fldcw
xor
int3
lock
daa
xor
sub
fwait
or
xor
xchg
add
sti
xor
jecxz
cld
push
jns
popf
pushf
fcomps
in
ficoml
sbb
cmpsl
cmp
push
mov
jle
add
inc
ret
or
test
stos
xchg
xor
test
cmp
arpl
cmp
sti
clc
cmp
icebp
mov
jb
add
push
repz
jg
rcl
shlb
add
xor
mov
pop
and
cmpb
shr
gs
sbb
popf
push
push
pushf
jno
das
lret
push
cmp
mov
sbb
sub
mov
lea
pushf
cmc
punpckhwd
rclb
mov
jae
enter
mov
mov
lret
aad
xor
mov
jno
js
fisttpll
aad
adc
mov
xchg
mov
xorl
out
mov
insb
sbb
stos
push
cli
pop
mov
movsl
por
adc
jbe
adc
adc
mov
mov
dec
cmp
add
xor
rorl
testb
and
push
add
xchg
add
or
xor
outsl
pop
ret
and
iret
int
dec
rcrl
div
mov
sahf
xchg
stc
loopne
pop
mov
sub
lock
sub
adc
sahf
mov
cmpb
xor
hlt
dec
cwtl
mov
out
aas
inc
cli
mov
push
push
fidivl
and
scas
or
pop
test
cmp
aam
sbb
movsb
inc
fs
in
sub
int
test
ljmp
mov
pusha
jnp
mov
inc
mov
andb
xor
inc
lea
add
mov
fldt
pop
rorb
fidivrs
lods
xor
ret
sbb
jle
jmp
ljmp
inc
inc
hlt
insl
cmp
fisubrl
pop
idiv
dec
and
add
js
in
sub
das
test
in
imul
mov
push
cmp
dec
mov
lods
sti
adc
lret
and
add
pusha
pop
pop
popf
lret
pop
cs
mov
iret
add
and
push
mov
std
inc
xorl
fxtract
cmpsl
in
negb
inc
sub
jg
inc
sti
enter
dec
inc
stos
sbb
mov
out
enter
std
jb
inc
lahf
scas
cmp
adc
scas
adc
jae
push
inc
shrb
sub
jge
hlt
stos
fs
enter
imul
sbbb
or
scas
inc
mov
outsl
push
aaa
xor
lret
dec
xchg
adc
popa
gs
sbb
sbb
or
out
xor
ret
add
leave
inc
mov
pop
mov
sub
icebp
icebp
jbe
add
lock
test
ficompl
pop
es
sbb
pop
xor
mov
jecxz
popf
clc
data16
mov
sbb
or
arpl
fs
and
mov
jne
push
jle
cmpl
sbb
mov
scas
das
in
in
and
xchg
mov
mov
mov
out
jmp
push
mov
or
jmp
dec
pushf
jnp
or
inc
movsl
aaa
lods
stos
push
fmull
flds
into
xchg
jecxz
call
ret
lcall
rol
fisubs
sub
test
and
sub
loopne
fst
xchg
xor
imul
jge
push
jae
cmc
cmc
aas
rcr
mov
addl
jnp
dec
fs
lock
push
xchg
cmpsb
jno
push
outsl
fstps
outsb
xchg
xchg
add
jno
jne
jns
aam
mov
mov
arpl
push
addb
adc
cli
stc
sbb
xchg
popf
xchg
sbb
std
mov
fmull
loope
dec
imul
iret
test
out
lret
js
in
lea
cmpb
pop
push
mov
mov
dec
insb
mov
push
es
xor
pushf
daa
mov
lahf
dec
push
in
call
fs
fadds
fcomi
mov
pop
cmp
mov
std
pop
mov
lcall
xor
dec
repz
int
jnp
jb
lods
dec
inc
add
sbb
in
stos
movsl
outsl
add
lcall
mov
movsl
inc
jne
lret
negl
loopne
shlb
lret
and
dec
lds
dec
and
scas
xchg
and
mov
pusha
scas
add
adc
dec
movsb
cltd
push
cli
fbld
push
movsb
clc
push
add
mov
add
mov
sub
cwtl
sub
sti
sbb
imul
sub
stos
fcmovne
mov
mov
xor
or
cli
and
inc
and
cmp
push
test
dec
das
mov
xchg
add
incb
loope
adc
pop
adc
xchg
das
jno
flds
out
mov
pop
inc
push
xor
sti
push
cmp
test
adc
mov
movsl
push
push
icebp
sub
inc
jecxz
gs
cmp
pop
loope
out
cli
cmp
push
mov
mov
inc
rclb
xor
dec
int3
mov
iret
ds
mov
aam
push
fidivrl
or
sbb
and
repnz
inc
inc
mov
mov
popa
inc
mov
or
xor
jle
sub
or
sub
inc
jae
push
mov
call
fcomp
out
mov
inc
mov
push
pop
adc
xchg
scas
mov
test
movsb
pop
pop
imul
out
xor
in
push
mov
jnp
mov
adc
and
adc
push
inc
nop
jno
sarl
add
pop
jmp
add
or
cmp
lret
jb
cmp
xchg
lret
dec
jns
and
adc
inc
jg
sarl
popf
dec
adc
jmp
call
iret
mov
jae
mov
ss
mov
aaa
pop
ret
repz
idiv
fcoms
and
xchg
mov
push
loope
out
sbb
adc
cmp
ret
sub
jno
aaa
mov
sbbb
jle
pop
adc
js
adc
inc
or
test
iret
adc
loope
xchg
dec
out
fbstp
sbb
adc
bnd
lds
fcmovnb
cmp
js
pusha
sub
dec
leave
mov
iret
push
mov
mov
lods
push
dec
mov
sbb
dec
mov
pop
pop
int
jl
jo
mov
bound
mov
inc
dec
imul
and
stos
int3
sub
sar
mov
jb
insb
sub
mov
cmp
movsl
test
fildl
fwait
jl
out
pop
daa
push
ret
and
into
sbb
addr16
xchg
lods
or
dec
in
call
xor
das
mov
pushf
xor
xchg
and
sarl
addr16
call
fdivs
imul
stc
int
and
sbb
adc
cli
sub
adc
enter
int3
or
xchg
repz
lahf
sub
mul
fs
and
aad
cltd
mov
lret
rorb
lcall
or
push
sub
lds
loop
xor
xchg
popa
pop
push
fcmovnbe
aaa
jle
jae
mov
sub
dec
loop
rcrb
xor
fwait
or
cwtl
inc
leave
mov
dec
lock
lds
out
lcall
shll
mov
sub
adc
inc
add
mov
sub
mov
dec
jl
ljmp
push
ja
scas
icebp
mov
mov
inc
jns
fucomip
imul
sub
aas
jo
pop
iret
xchg
cmp
cmp
jecxz
or
dec
imul
xchg
aam
test
pop
and
loop
inc
mov
ror
xchg
cmp
dec
sbb
std
out
adc
xor
jecxz
lcall
les
fstpt
je
insb
fbstp
mov
sub
xor
daa
push
nop
push
int
popf
jge
xor
rolw
outsl
pop
lods
clc
adc
sahf
mov
repz
push
outsb
mulb
hlt
pop
pop
sbb
addr16
cmp
pop
sbb
pusha
popa
into
ja
push
or
pop
aaa
push
call
adc
xor
repz
insl
sub
xchg
ds
subb
scas
or
sbb
dec
jecxz
jnp
xchg
lret
and
imul
fdivrl
lods
imul
out
inc
aad
sbb
sub
jb
mov
xchg
out
and
repnz
enter
pop
repnz
pop
pop
scas
ljmp
lods
jnp
pop
aaa
mov
xor
dec
jb
call
cmc
push
daa
aas
push
mov
jmp
scas
jecxz
vpmaxub
inc
in
sub
or
hlt
cmp
divb
sbb
mov
rorb
inc
dec
ss
jmp
pusha
aas
inc
fbstp
sbbl
mov
or
jge
cmp
fistpl
push
jae
outsb
cli
mov
mov
fbld
bound
cmp
push
pop
aam
je
pop
cmp
cs
pop
adc
mov
and
das
hlt
sub
mov
lds
jno
add
ror
leave
or
test
mov
push
nop
jecxz
mov
adc
pop
mov
and
and
or
decl
in
mov
inc
lcall
mov
movsl
mov
jecxz
pusha
pop
fnstenv
adc
add
sti
shll
sub
aad
test
mov
mov
arpl
xchg
inc
dec
cmpsl
jmp
mov
jno
fdivrs
jae
sub
xor
sub
inc
mov
mov
xchg
inc
lods
inc
je
xor
cmp
mov
frstor
and
inc
decb
sub
lock
test
push
inc
sub
sarl
movsb
das
push
xor
icebp
aas
inc
dec
iret
in
pop
pop
ja
stc
sbb
gs
xchg
clc
mov
xchg
push
cmpsl
mov
int
bound
mov
fwait
mov
sub
neg
sub
scas
cmp
inc
js
stos
mov
rcl
sbb
sarb
fldpi
push
dec
popa
sub
or
fisttpl
test
sub
inc
mov
ja
ss
add
mov
subb
stos
jmp
cs
inc
mov
mov
js
mov
lods
int3
inc
mov
loope
push
loop
lret
push
mov
push
and
nop
out
lahf
fucomip
cmpsb
xchg
pop
mov
test
cltd
mov
adc
jns
sbb
jmp
scas
aad
pop
dec
cli
ds
fildl
int
sbb
cmp
or
mov
mov
jnp
sub
sbb
cmp
pop
outsb
stos
inc
lret
push
popf
subl
mov
call
ljmp
pusha
inc
xchg
pop
jb
dec
mov
popf
std
fwait
or
test
lds
cld
mov
xor
pop
fstps
cmp
call
or
pop
jmp
adc
loopne
cli
insl
sub
and
add
push
ret
inc
mov
fmul
jg
and
pop
hlt
and
jnp
or
fistl
jge
out
pop
jle
mov
mov
or
bnd
jge
sub
mov
test
idivb
xor
cmp
dec
call
push
and
push
mov
sbb
inc
out
xchg
sti
mov
dec
cs
jl
push
scas
imul
sub
or
jge
sbb
scas
or
sbb
cli
shr
xchg
jecxz
sub
lcall
mov
xor
sbb
mov
sbb
in
xabort
fs
ret
bound
fadds
cmc
xor
inc
imul
shll
inc
test
jne
lods
ds
loopne
sub
mov
sub
or
push
or
lret
cmp
jl
andb
je
hlt
inc
pop
cwtl
push
ficoml
pop
or
fidivrl
and
pop
popf
dec
xchg
das
cmpsl
out
insl
out
iret
mov
out
jmp
dec
add
imul
adcl
pop
in
out
xchg
out
cltd
leave
cmpsl
mov
aas
outsb
inc
or
or
lret
xchg
cld
cmp
cmp
sbb
repz
sub
pop
xor
arpl
jbe
int
dec
inc
jne
and
scas
mov
mov
push
sbb
loope
jns
mov
ds
sbb
out
nop
out
add
int3
ds
aaa
cmp
mov
int3
or
sub
jmp
aas
adc
adc
xchg
jge
sbb
inc
xchg
stc
mov
or
int3
sub
jg
sub
jae
pop
pop
jb
sub
das
mov
repnz
das
mov
dec
xor
cld
dec
popa
movsl
and
mov
pop
sub
fcmovbe
lea
ret
inc
inc
pop
push
adc
or
loop
jge
dec
or
sub
je
scas
mov
aad
sub
insb
sub
mov
cld
and
adc
cmp
jp
ja
inc
push
stos
out
shlb
inc
pop
mov
pop
mov
int3
pusha
lock
dec
dec
xchg
mov
and
and
xlat
push
xor
xor
adc
dec
cmp
insl
imul
cmp
xchg
ss
xchg
lret
lcall
ret
fcompl
jp
mov
stos
push
mov
cmpsb
popf
cmp
adc
scas
in
ljmp
pop
adc
aaa
mov
cmc
mov
and
fadds
and
es
pop
dec
daa
dec
pushf
lret
xlat
cmp
fs
mov
lcall
lahf
addr16
cmpb
out
xlat
in
ds
jne
jg
leave
test
add
aas
adc
sti
stos
aam
cli
mov
mov
xchg
fs
add
or
std
cwtl
ds
ret
dec
sti
xchg
mov
push
push
inc
enter
adc
sbb
xchg
fnstenv
mov
scas
lcall
xlat
repz
and
fstl
mov
fdivl
xchg
lods
jbe
xlat
or
imul
xchg
dec
adc
dec
sub
mov
mov
pop
mov
fstpl
into
and
pop
cmpsb
xchg
jp
jle
pusha
mov
cs
inc
ja
out
cld
daa
mov
roll
lods
outsl
push
mov
xchg
stos
mov
xor
inc
pop
xor
or
dec
xor
pop
orb
mov
or
fs
lahf
lea
in
test
dec
sub
xor
xchg
cmpsb
dec
shll
mov
fwait
jne
bound
inc
or
cmp
fwait
pop
add
and
divb
lods
insl
xchg
adc
popa
scas
sarl
cmp
sbb
enter
jo
mov
mov
mov
hlt
fistps
in
mov
xor
sub
in
int3
fisttpll
add
mov
pop
xor
cltd
sbb
push
faddl
xchg
pop
es
lret
and
dec
es
mov
je
mov
mov
stos
gs
adcb
loop
test
addr16
xor
or
fistpll
pop
stos
lds
mov
jae
push
insb
xor
cmp
into
xor
xorl
cltd
xor
js
push
faddl
xchg
xchg
mov
dec
in
push
adc
in
inc
xlat
cmp
mov
mov
fcompl
rclb
pop
pop
das
addr16
roll
jne
xor
xchg
push
test
jecxz
add
fldt
sub
dec
out
cltd
call
adc
stos
jns
daa
push
and
test
pop
outsl
popa
or
pop
hlt
jle
adc
cmpsb
call
dec
jecxz
cli
dec
cmp
fadds
dec
outsl
sbb
push
lods
in
sub
mov
cld
sarl
jmp
cwtl
pop
loope
iret
jmp
fldcw
jmp
pushf
push
adc
lods
ja
je
adc
adc
insl
das
jecxz
andb
add
add
mov
lock
stos
dec
xor
inc
add
test
xchg
push
sub
cld
jg
out
sub
fidivs
js
in
je
mov
lahf
lcall
sarl
pop
sti
movsb
jnp
fimull
push
jge
cwtl
lea
xor
mov
in
ret
aas
cltd
xor
xchg
mov
jl
scas
leave
incb
pop
mov
dec
xchg
je
sbbl
sub
stos
jo
add
dec
mov
cmpsb
pop
adc
scas
mov
add
xlat
lret
push
jmp
ss
nop
imul
sub
cmp
add
inc
pop
and
xchg
mov
mov
push
mov
daa
inc
outsb
js
call
jb
or
mov
mov
dec
push
data16
mov
iret
xor
lds
inc
ficoms
daa
jle
sbb
mov
gs
dec
scas
ret
jb
cmp
dec
jp
pop
mov
sahf
add
ficompl
push
into
adc
add
mov
and
call
orl
lods
dec
dec
and
sub
fwait
or
mov
push
lret
pop
repnz
mov
scas
inc
mov
add
ror
cmp
dec
xlat
loope
jecxz
inc
jecxz
aas
pop
mov
xchg
and
pop
mov
lret
mov
mov
cwtl
xchg
gs
push
xor
adc
shl
test
xchg
sahf
push
sbb
xor
xchg
xchg
movsl
dec
or
jg
aam
mov
dec
mov
inc
ds
stos
scas
add
movsb
dec
fidivrs
aas
pop
sbb
divl
out
adc
popf
je
cwtl
cmp
push
loop
js
jb
xchg
aaa
insb
negl
inc
in
out
std
out
push
lahf
lcall
xchg
push
out
or
insb
mov
adc
and
enter
pop
or
jmp
xor
sub
insb
fdivs
push
das
fs
push
jne
jl
jb
mov
xchg
mov
mov
pop
push
loop
incl
mov
and
cs
jl
xchg
jge
aam
or
dec
or
data16
mov
sub
push
xor
sarb
insl
repnz
mov
ficoml
sahf
sub
scas
int3
pusha
movsl
and
fisttpll
mov
or
pop
cmp
cmp
and
lods
pop
data16
pop
or
add
mov
push
add
neg
mov
xor
xlat
nop
cmc
mov
xor
stc
sbb
and
add
lods
jb
in
lods
jnp
mov
inc
mov
fiadds
push
ret
and
adc
or
push
ljmp
xor
dec
jnp
movsb
repnz
lahf
ss
mov
pop
adc
jge
xor
adc
dec
jle
xchg
outsb
dec
rclb
in
leave
jo
mov
test
loope
mov
shl
lahf
inc
rcrb
scas
dec
push
mov
xor
sti
das
cmp
test
es
in
dec
dec
fistpll
xlat
fiadds
daa
cmpsl
push
cmpsl
sub
lock
movsl
sub
dec
mov
pop
pop
subb
sub
push
in
dec
repz
push
ret
mov
mov
fdivp
je
inc
sahf
shrl
mov
aaa
movb
pop
xchg
adc
mov
cmpsl
jo
push
bound
add
xchg
out
and
mov
fbld
cmpsb
cs
popl
push
jmp
mov
adc
in
lea
push
das
adc
sub
and
xchg
push
in
mov
fisubrs
pusha
xlat
loope
xor
jb
movl
jno
mov
ret
into
pop
mov
sar
cmp
inc
fwait
not
nop
in
nop
jno
fwait
xchg
push
fdivp
jg
repnz
mov
sbb
fucomp
push
adc
xor
fdivrl
int3
movsb
out
icebp
jle
ret
cmp
jmp
mov
adcl
ds
out
mov
test
sub
sub
fidivrs
adc
xchg
inc
rclb
out
aam
jmp
and
dec
shl
jp
jno
mov
popa
xchg
pop
xchg
xchg
pop
out
adc
mov
ss
inc
jmp
idivb
cwtl
ja
test
or
and
push
in
arpl
push
inc
xchg
aad
dec
sub
adc
movsb
movsl
fwait
add
cmp
imul
scas
add
xchg
push
adc
shrb
pusha
mov
mov
mov
sub
out
andps
imul
pop
rclb
and
hlt
xchg
pop
sbb
inc
inc
cltd
push
pop
and
inc
dec
sar
orl
ror
nop
dec
repnz
call
ret
dec
ret
dec
inc
mov
lods
and
shl
and
nop
sbb
push
mov
js
into
adc
push
xchg
cltd
fscale
mov
sbb
and
mov
pop
sbb
iret
rcr
and
jg
mov
ja
cmp
stos
ljmp
cmp
je
and
xchg
pop
test
aaa
cmp
jne
lret
push
sahf
inc
add
mov
jmp
stos
pushf
pop
dec
mov
mov
cltd
pop
lods
mov
stc
jne
add
cmpsb
jbe
jbe
test
jecxz
icebp
jle
or
xor
xchg
push
sub
add
pop
sbb
mov
or
bound
mov
mov
sub
lods
push
xor
jno
pop
decl
sbb
por
sub
negb
push
mov
cmp
outsb
push
cmp
lock
call
bound
cmp
arpl
and
out
and
sbb
push
mov
mov
adc
mov
mov
clc
xorb
push
mov
xchg
add
mov
inc
aam
jecxz
pop
adc
lahf
xchg
mov
dec
aas
scas
jge
push
rcl
xchg
fs
cmpb
into
xor
loopne
cmp
into
add
mov
cmpsl
ret
pop
ljmp
cli
lds
mov
into
lods
into
or
adc
add
repz
add
push
add
scas
out
or
fcmovnb
fsub
sbb
insl
or
mov
test
mov
into
and
js
sti
cld
pop
adc
jnp
leave
sarl
pop
loopne
mov
sub
or
adc
lcall
nop
push
in
negl
mov
and
icebp
xor
shrl
sbbl
sub
test
cwtl
pop
pop
xor
shll
roll
fcmovbe
rclb
pop
dec
insl
add
mov
or
lea
std
mov
or
xor
ret
xchg
lea
jle
loope
mov
test
xchg
mov
mov
js,pt
fildll
loopne
xorb
popa
das
mov
xchg
fmulp
dec
arpl
or
xchg
lcall
pop
inc
mov
mov
and
imul
das
add
mov
adc
seto
xchg
xlat
ja
adc
push
add
pop
push
clc
pop
mov
sbb
cmp
push
hlt
xor
mov
cmp
es
lock
idivb
mov
sub
mov
lods
in
mov
fs
cltd
fucomip
sub
push
lret
pop
daa
loope
pusha
repz
outsb
mov
pop
sbb
aam
and
aas
and
popa
shr
pop
mov
pusha
movsl
stos
lcall
pop
jge
mov
mov
xor
push
outsb
pushf
inc
sbb
add
sub
mov
mov
mov
call
gs
mov
fidivrl
jg
adc
in
outsl
leave
stc
mov
repz
add
mov
pop
xor
xchg
ss
lock
in
mov
out
insl
test
int3
fs
add
xchg
push
les
add
test
sti
mov
ficoml
inc
cmp
imul
jmp
and
data16
test
xchg
in
fsts
xor
into
pushf
inc
lahf
pop
pop
cmp
decb
jnp
pop
inc
lcall
inc
arpl
test
filds
fstp
mov
sahf
pop
xor
and
movsl
insl
mov
dec
jle
push
add
inc
or
jo
dec
movsl
dec
dec
outsb
dec
rclb
xchg
scas
pop
jp
inc
lea
push
or
push
push
mov
and
lcall
mov
pop
add
xchg
jmp
xorb
lods
imul
shrb
mov
notb
adc
cmpsb
or
enter
test
jo
cmp
aam
fidivrl
sbb
fnsave
adc
xor
jae
stc
sub
cmp
loop
push
lea
or
icebp
mov
fwait
dec
xor
add
scas
inc
lahf
enter
js
rclb
ret
xor
sahf
cmpl
inc
dec
push
jbe
xchg
adc
mov
out
fs
push
fidivrs
addl
mov
into
pop
iret
mov
mov
push
icebp
adc
mov
fldcw
aas
aad
insb
int3
das
inc
xor
les
call
in
push
inc
mov
pop
mov
cmp
rcrb
jle
popf
lock
and
loop
shlb
adc
mov
in
lds
xchg
arpl
cs
pop
dec
jmp
jg
push
lock
push
pop
add
jg
in
dec
and
orb
les
xchg
inc
xorb
push
int
fidivrs
icebp
pushf
imul
push
dec
stos
out
sbb
bound
cli
cs
movsb
and
fs
hlt
pop
mov
push
or
push
inc
push
and
adc
xchg
stos
clc
movhlps
repnz
clc
scas
hlt
mov
push
jb
outsl
shlb
mov
add
fcompl
and
stos
je
cmc
xchg
jg
addr16
adcb
adc
xchg
sbb
push
iret
and
dec
cmp
xor
xchg
dec
bound
or
rcrl
rcrb
jg
jbe
cmp
add
cmp
mov
and
inc
ljmp
int3
bound
pushf
test
jle
ds
add
addb
stos
sbb
nop
mov
shl
int
sub
fdivs
out
and
mov
or
xchg
fs
push
adc
je
adc
es
sub
add
fiadds
dec
cli
popa
dec
or
xor
xor
movb
push
inc
outsl
dec
or
movsb
test
jp
inc
mov
fdivl
lods
sub
in
pusha
push
decl
rorb
stos
mov
xor
cmp
gs
xchg
mov
adc
cmp
cltd
push
mov
outsl
cmc
push
clc
scas
ss
and
inc
and
sbb
lods
add
xchg
fldt
fdivl
lret
pop
mov
insb
mov
jg
lcall
mov
jno
into
gs
daa
cmp
sub
cli
sbb
mov
pop
repnz
push
loopne
push
jg
mov
movsl
cwtl
rcrl
int
ret
in
jl
imul
mov
cmp
mov
pushf
push
movl
mov
arpl
sbb
jl
addr16
lahf
xchg
imul
and
or
movsl
and
test
mov
addr16
imul
iret
cmpsl
add
not
dec
lods
in
das
xchg
sub
push
cmp
adc
adc
push
jns
mov
cmpsb
add
adc
imul
mov
int3
cli
mov
fimuls
cwtl
push
lods
mov
rclb
push
push
std
inc
inc
sbb
jo
pop
dec
stc
cs
fdivrs
frstor
pop
ds
inc
and
sbb
dec
xchg
mov
dec
mov
in
fistps
inc
inc
cmp
mov
sbb
xchg
inc
mov
fisubrs
bnd
dec
cltd
ret
xor
jge
jae
xchg
xchg
iret
mov
daa
dec
adc
jb
bound
scas
add
aam
cmpsl
mov
nop
stos
push
cmpb
ret
sbb
inc
add
into
xchg
ljmp
scas
add
cmpsl
gs
test
xor
cld
xchg
xor
jo
push
xchg
mov
cld
sub
out
ds
sub
mov
mov
mov
test
fdivl
inc
mov
rcl
aad
push
hlt
mov
mov
daa
inc
lock
mov
lds
and
pop
dec
jae
cmc
das
ds
in
jnp
xchg
cmp
mov
mov
or
mov
sti
pop
adc
sub
shlb
xchg
xchg
dec
imul
aad
add
pop
sbb
scas
xchg
ret
adc
ljmp
mov
ret
push
orl
push
stos
inc
dec
inc
ds
xor
shrb
fs
std
out
sub
js
fdivr
mov
lret
mov
jle
adcb
pop
lret
jno,pt
out
dec
mov
jae
lahf
in
stc
dec
repz
daa
sbb
cld
sbb
mov
orb
dec
sub
pop
jae
popa
dec
dec
sahf
or
adc
push
pop
pop
xchg
out
pop
sub
fwait
sub
and
jecxz
cmpsl
jle
mov
lods
cmp
and
into
scas
xor
or
icebp
xor
xchg
mov
pop
xor
pop
pop
sbb
inc
jb
in
or
sahf
sub
fs
or
mov
orb
lods
and
push
jmp
mov
pop
ljmp
or
in
jne
insb
xor
pop
adcl
leave
inc
mov
test
xchg
loopne
and
jmp
adc
in
inc
scas
in
sub
push
mov
clc
popa
jno
dec
fidivs
sub
inc
adc
popa
sahf
add
and
and
mov
and
inc
cmp
enter
jl
in
cwtl
jle
cmp
add
sarb
add
xchg
sub
xchg
push
mov
gs
sarl
sbb
pop
data16
fldl
mov
fs
repz
sahf
mov
inc
jmp
xchg
cmp
call
test
adc
test
pop
and
pop
scas
mov
dec
leave
test
add
mov
push
data16
mov
pop
xlat
jo
lds
mov
mov
mov
sbb
je
xor
out
stos
inc
insl
mov
xor
fdivrp
jmp
leave
mov
movsl
pop
and
add
int
repnz
stc
xor
inc
push
push
jge
adc
and
lcall
jne
jecxz
pop
xchg
jo
mov
jecxz
push
clc
or
adc
mov
inc
or
cmp
sub
xor
pop
cli
bound
lret
in
icebp
sub
lds
cmp
jmp
scas
mov
stos
out
sbb
ljmp
add
xchg
mov
sub
jecxz
fcomps
mov
adc
movsl
mov
push
dec
les
movsl
and
sbb
dec
sub
cwtl
inc
adc
test
icebp
dec
sub
pop
inc
xchg
andl
std
add
nop
in
inc
dec
cmp
out
xchg
xchg
dec
outsb
aaa
shr
push
fldenv
ljmp
sub
fstpt
nop
add
cwtl
jecxz,pt
sbb
mov
cmp
adc
pop
pop
aaa
and
rclb
in
sbb
imul
and
or
js
outsl
stc
or
mov
add
dec
mov
mov
fldenv
mov
xor
faddl
mov
aad
cmpb
stos
sahf
lret
xchg
xchg
adc
xlat
sub
xchg
leave
xchg
js
xor
lock
mov
int3
mov
mov
cld
mov
adcb
ficompl
mov
pop
nop
sbb
aad
jno
or
or
mov
fldl
mov
cli
sub
mov
ja
push
imul
popa
or
out
dec
jl
jo
cs
mov
jl
cmp
xor
or
mov
cmp
sub
mov
outsb
add
cwtl
in
adc
scas
icebp
mov
mov
hlt
repz
and
jno
sub
push
loopne
mov
sbb
fimull
stos
movsb
cltd
ror
xor
dec
dec
adc
call
xchg
xchg
jne
hlt
movb
jmp
mov
add
mov
inc
sbb
xorb
sti
ja
pop
enter
arpl
dec
loope
push
sub
addr16
mov
leave
mov
mov
frstor
cs
mov
rcrb
mov
fnstcw
sub
xchg
pop
mov
rol
adc
repnz
xchg
jmp
adc
nop
call
int
or
cmp
notb
mov
cltd
pusha
cld
and
sub
outsl
push
or
jae
xor
ror
sbbb
fidivl
pop
mov
add
andb
frstor
pop
jecxz
xor
push
jne
fildl
je
outsl
ret
jg
pop
ret
insl
and
fs
push
outsl
mov
xchg
xchg
out
push
cs
in
jbe
stos
popf
jb
shll
inc
lcall
xor
push
lcall
jno
out
jbe
rol
add
das
cs
mov
dec
pusha
xchg
stos
mov
sbb
cmp
push
fwait
push
mov
sahf
int3
xor
pop
push
into
sub
jecxz
rorb
js
sub
jnp
push
push
sub
adc
add
fimuls
add
orl
cmp
jnp,pt
fdecstp
les
inc
loop
test
mov
ja
jmp
and
cmp
xchg
cmp
popf
out
outsl
test
aam
out
jge
outsl
jmp
inc
notl
xor
roll
jno
fucomip
push
pop
adc
mov
lods
cmpsl
stos
test
and
aam
sub
mov
pop
lea
push
gs
or
or
clc
ret
and
cmp
es
push
jl
add
repnz
push
jae
jge
or
aaa
mov
je
xor
incl
pop
into
pop
not
aad
or
fistpll
lock
push
pushf
or
sbb
dec
sbb
xor
inc
enter
pop
mov
sub
cltd
adc
dec
mov
mov
fildll
mov
adc
mov
ja
jp
vmwrite
pop
in
shrb
dec
ljmp
mov
fcmovnu
dec
xchg
scas
push
lods
inc
insl
adc
mov
mov
xor
scas
rcll
push
outsl
int3
sbb
ss
xchg
cmpsl
pusha
and
loop
test
sub
push
jbe
out
test
inc
and
out
dec
movb
pop
or
cmp
dec
or
shr
iret
shrb
sbb
mov
mov
add
jae
decb
xchg
pop
xor
inc
mov
cltd
iret
stos
push
test
fwait
outsb
jecxz
jb
pushf
cmp
lods
shr
je
pop
pop
xor
pop
jno
les
xor
sbb
test
pop
sub
repz
loopne
pop
jl
outsl
sub
negl
add
inc
scas
loop
mov
pop
mov
das
cmp
aam
cwtl
data16
add
xlat
leave
sub
out
xchg
das
xchg
ficomps
movsb
xor
cmp
daa
insb
push
sahf
fwait
adc
iret
or
mov
mov
cmpsb
stc
cld
popa
ss
push
mov
and
push
imul
sub
and
pop
xor
subb
jnp
enter
xchg
outsb
dec
mov
push
fcmovbe
push
xchg
sti
dec
hlt
pop
out
fdivr
cmpl
in
pusha
jb
xor
test
sbb
repz
in
cmp
lret
repnz
scas
lods
adc
xor
and
push
adc
fnstsw
sbb
sub
pop
aam
or
jl
popf
push
ds
in
popf
repz
push
cld
cmp
xor
xorb
ss
test
sbb
push
xchg
mov
or
out
push
mov
jo
dec
adc
push
pop
pop
push
adc
adc
lret
cmc
out
imul
lret
adc
call
xor
enter
jl
sbb
mov
or
lds
mov
add
pop
adc
jge
mov
insb
jae
imul
push
add
adc
repnz
adc
jo
xor
xlat
mov
jp
fisubl
and
dec
sbb
add
insl
pop
mov
aam
sti
push
adc
popf
icebp
repz
jae
jb
ljmp
fcmovbe
pop
iret
jns
adc
test
xchg
les
lods
mov
jae
xchg
les
xchg
jl
lcall
sub
call
adc
in
cmpsb
popa
test
jo
push
pop
adcl
xor
xchg
rorb
pop
aam
mov
ret
insl
dec
call
add
mov
cld
jbe
cltd
and
sbb
rclb
fisubrl
fsubr
sarl
mov
in
movsb
or
arpl
or
rolb
adc
inc
sbb
bnd
ret
imul
dec
mov
sahf
mov
out
les
jg
mov
push
addr16
aam
das
xchg
fs
lock
mov
xchg
mov
aaa
aad
mov
stos
loop
pop
xor
and
push
ljmp
popf
arpl
cli
addr16
pop
fiadds
cld
mull
outsl
cli
sbb
dec
mov
mov
sbbl
aas
hlt
sahf
clc
xor
xchg
sbb
pusha
mov
mov
xchg
xor
mov
adc
mov
movsb
test
idivb
inc
adc
fstpl
cmp
stc
jo
lods
mov
hlt
mov
into
xor
jmp
cmp
je
or
lahf
enter
movsl
pop
jg
adc
stos
outsb
dec
mov
push
pop
out
dec
lea
mov
and
cmp
jb
lods
jo
mov
cmp
push
nop
or
jecxz
mov
lret
xchg
pop
cmp
cwtl
xor
xor
repz
les
mov
pop
scas
xor
pop
sub
cmp
outsl
in
in
sub
sbb
lret
adc
push
mov
mov
dec
js
and
inc
test
outsb
lret
outsb
jecxz
cltd
cmp
pop
sbb
push
ds
push
je
xchg
pop
daa
sahf
mov
sbb
jbe
pop
xchg
jle
jbe
sub
mov
sub
mov
popf
imul
sub
add
mov
push
jno
addl
or
cltd
add
mov
js
push
popa
gs
sbb
cmpsl
cmp
ss
fs
stos
insl
stos
out
clc
outsb
fcom
or
out
mov
lds
cmp
jmp
out
xchg
pusha
icebp
jb
push
mov
lds
popa
shlb
add
jne
stos
dec
adcl
jl
pop
aad
push
test
dec
js
cmc
negb
pop
or
pop
adc
push
xor
or
push
subb
andl
loopne
in
push
repz
cltd
or
sbb
je
dec
scas
fldl
inc
and
xchg
inc
rolb
fstl
lea
rol
test
mov
inc
push
and
sbb
mov
test
lahf
dec
mov
xchg
fildll
inc
and
fsubs
das
mov
jmp
je
fs
xor
xor
sub
push
dec
mov
jle
inc
cld
pop
pop
mov
ret
jle
adc
adc
cwtl
scas
jnp
in
js
inc
push
adc
mov
jmp
in
mov
dec
mov
inc
mov
lret
push
jmp
cld
dec
nop
sahf
in
fildl
xchg
cmp
inc
lcall
iret
int
mov
lds
push
dec
out
daa
xchg
or
daa
in
sahf
je
orb
cld
mov
inc
sahf
aaa
pusha
jg
inc
mov
fstpt
push
orl
jbe
push
xchg
add
mov
insb
cld
cmpsb
icebp
xor
push
arpl
or
jns
lods
mov
dec
hlt
mov
repnz
int3
sub
jne
push
pop
bound
pusha
fdivrl
fnstcw
adc
jl
frstor
lahf
or
enter
pop
das
inc
stos
pop
mov
inc
sub
jle
outsb
cmp
or
mov
fsubp
push
mov
add
push
jg
dec
pop
lock
lock
outsl
mov
stos
xchg
xchg
popf
jbe
pop
inc
addl
mov
mov
movsb
shrl
mov
sub
and
arpl
outsb
test
and
repz
dec
popf
push
rcll
push
loope
mov
dec
out
cli
jl
cld
daa
icebp
sub
inc
fbstp
mov
fnstsw
jg
cmc
shll
mov
jmp
mov
pop
adc
inc
xor
adc
sub
pcmpgtb
lea
xor
inc
push
filds
les
xchg
push
sbb
pop
scas
sti
xchg
dec
cltd
ds
mov
cmpsl
fnstcw
je
dec
enter
and
dec
roll
loope
test
xchg
xchg
ljmp
xchg
sahf
mov
xor
jae
je
fyl2x
cmp
scas
loope
xor
icebp
mov
sub
pushf
dec
mov
adc
or
sbb
mov
add
into
test
pushf
fistl
pop
dec
les
cld
sub
jp
jmp
fsts
cmp
in
sahf
stos
xor
sbb
in
inc
dec
mov
mov
push
jecxz
call
dec
add
mov
or
rol
adc
sbb
adc
imul
clc
hlt
addr16
out
lret
leave
icebp
xor
clc
out
inc
out
js
add
xlat
or
xchg
test
in
pop
hlt
fadds
in
das
pop
xchg
push
jbe
insb
loop
push
hlt
stos
scas
movsb
les
cwtl
sub
in
scas
mov
mov
fidivrl
int
jle
cld
mov
aam
fisttpl
sarb
fwait
mov
or
sbb
inc
popf
dec
inc
push
loopne
mov
jl
rorl
pop
sub
dec
add
repz
mov
test
jbe
rorb
scas
xor
push
test
pop
mov
mov
jmp
mov
jo
jo
imul
test
sub
mov
pop
sub
lret
iret
push
shl
add
or
es
stos
dec
add
inc
fadds
mov
xorl
jns
arpl
rcr
lret
jae
jmp
les
inc
lcall
adc
xchg
xor
xor
and
xchg
mov
pusha
fs
jae
loopne
ja
sahf
cmc
hlt
repnz
inc
pop
lods
or
lret
jecxz
je
scas
es
mov
xor
push
lcall
dec
push
andb
cmp
jb
add
adc
arpl
in
pop
loop
movsl
leave
xor
int3
or
pop
rcl
lea
pop
xor
aaa
cs
int3
cmc
pop
inc
cmc
es
sub
inc
adc
cld
aam
arpl
cs
jnp
jmp
xor
fidivrl
mov
sti
in
pop
imull
xor
and
adc
or
inc
adc
repnz
or
or
pop
dec
daa
xor
adc
cmp
add
pop
outsb
ds
sub
or
clc
or
jle
fists
fwait
aad
fistl
and
push
mov
test
jns
insb
loop
mov
test
test
pop
shl
push
jb,pt
mov
pusha
jle
pop
dec
jecxz
jb
pop
cmp
in
inc
add
push
into
lock
xor
sub
mov
aas
push
xchg
cmpsb
add
pop
lock
push
addl
hlt
xor
mov
pop
push
cmpsb
mov
sub
jle
mov
adc
cmp
xchg
repnz
int
int3
test
test
push
pop
aaa
lods
bound
clc
fdivrl
in
cmp
mov
aam
les
adc
ret
adc
inc
fcoms
push
les
inc
fwait
mov
je
inc
adc
std
jecxz
dec
push
xor
das
and
clc
add
popf
add
xchg
push
adc
xor
pop
mov
loop
mov
aaa
sbb
cmc
or
jle
repz
lock
outsl
fcom
cmp
jp
or
je
or
inc
mov
adc
ds
bound
inc
in
sbb
sbb
fcoml
add
xor
mov
loop
ret
push
mov
jp
lock
sub
mov
and
sub
sbb
bound
sub
pusha
pop
xchg
xchg
push
adc
out
or
shll
stos
daa
std
adc
adc
xchg
and
mov
enter
ljmp
push
jecxz
mov
cs
inc
and
ljmp
or
jns
in
test
xchg
mov
push
adc
xchg
inc
push
dec
jno
mov
roll
jbe
mov
push
push
xchg
shlb
sbb
jg
ja
jg
aas
xchg
je
and
fildll
push
testb
sbb
adc
shrb
inc
js
add
and
stos
ja
nop
add
hlt
ret
scas
or
leave
or
out
repz
fstl
icebp
sbb
sbb
pushf
sbb
jl
xchg
inc
mov
mov
pop
hlt
pusha
cld
push
mov
pop
add
fistpll
push
and
imul
xor
jno
int
decb
and
inc
cmp
mov
std
mov
pop
and
jae
in
movsbl
int3
stc
xor
xchg
icebp
and
shll
aad
outsb
sti
test
adc
cmc
jnp
xor
int3
jge
mov
dec
push
fwait
shl
xchg
test
addb
jo
mov
sub
sti
sahf
mov
push
mov
sub
push
mov
sub
mov
xchg
adc
in
sbb
mov
test
push
inc
pop
mov
shll
sti
lods
push
sahf
pop
incb
jle
popa
sbb
in
pop
jb
insl
fwait
mov
into
mov
mov
or
rorl
mov
pop
jmp
ret
mov
and
adc
pop
repnz
cmpsl
push
les
lret
fs
adc
sub
loopne
pop
testb
jnp
cmp
addr16
jno
jno
or
pop
clc
xor
scas
ret
sbb
dec
hlt
dec
and
arpl
dec
js
insb
jo
pop
iret
fwait
ljmp
sbb
or
movsb
aad
cmp
push
xchg
mov
push
or
cmp
ljmp
jmp
mov
sbb
and
push
pop
in
in
or
mov
stos
imul
xor
jns
fistpl
mov
xchg
lea
add
clc
repz
pop
inc
cmpsb
out
jmp
cmp
sub
cmpsl
in
loopne
xor
stos
dec
lret
lods
mov
ljmp
jge
js
xchg
add
adc
mov
ss
mov
rolb
test
dec
mov
xchg
jl
imul
add
fcompl
fcoms
mov
test
sbbb
out
fstpt
arpl
ds
mov
dec
pop
sub
mov
insl
scas
sbb
push
gs
fsubs
xlat
dec
filds
push
dec
mov
sarb
xchg
cmp
xor
lea
addr16
outsb
pop
inc
adc
xor
jns
inc
hlt
inc
insb
sub
test
cmpsl
cmp
stos
xor
sub
mov
imul
cmp
sbb
push
mulb
or
imulb
lret
add
dec
jecxz
sti
mov
stc
or
ret
cli
jl
add
in
sub
fucomip
ss
mov
xchg
cmc
loopne
in
mov
mov
mov
dec
stos
lcall
and
mov
or
xor
fs
xchg
mov
jp
xchg
int3
add
fildll
cs
insb
outsb
ds
rcr
mov
mov
mov
xor
ds
jg
in
pop
pop
xchg
pusha
add
cli
fldl
push
and
jge
pushf
shlb
inc
push
imul
or
mov
addr16
cltd
lods
mov
mov
lcall
adc
adc
clc
jecxz
and
xchg
pop
inc
in
mov
xor
mov
cmp
pusha
subb
mov
repz
xor
cmpsb
jge
adc
cmp
arpl
fxch
mov
add
push
cmp
inc
or
cmpsl
fildl
cld
gs
in
fadd
mov
mov
popa
scas
and
aas
mov
inc
outsb
scas
mov
jns
xchg
push
outsb
dec
mov
pop
std
push
inc
sub
jp
ss
test
sub
push
sti
jl
jecxz
fistpl
mov
aam
lods
hlt
out
cmc
push
push
or
jle
test
add
mov
data16
ljmp
xchg
add
lods
lock
adc
inc
in
std
push
rcr
inc
fistpll
mov
push
pop
xchg
clc
mov
mov
fiaddl
test
mov
jb
stos
out
mov
test
fwait
xchg
mov
sub
lea
jmp
addr16
jns
dec
cmpsl
jae
shr
inc
add
lea
sbb
sbbl
incb
push
insb
test
mov
add
pop
push
and
addr16
bnd
stos
lahf
mov
cmc
cltd
pop
lds
sbb
lock
push
xchg
jnp
out
jae
cmpsb
repz
dec
and
adc
push
rcrb
movsl
pop
xchg
jmp
lods
pop
jns
lods
aas
negl
pop
mov
lods
ljmp
cmpsb
cwtl
ds
push
push
cwtl
in
dec
les
sub
jg
les
inc
or
mov
jae
adc
sub
sti
or
pop
lock
sub
popa
push
sub
dec
dec
iret
push
out
mov
mov
cmp
jo
fcomp
sub
imul
inc
jns
not
mov
pop
pop
movsl
dec
scas
jns
out
jnp
test
jecxz
popa
cwtl
mov
fwait
push
insl
inc
mov
mov
divl
out
pop
scas
out
out
push
jae
push
and
mov
jecxz
inc
sbb
jne
adc
lds
lods
pop
lahf
mov
lods
adc
fildl
scas
ss
mov
dec
sbbb
popa
dec
cli
xchg
xchg
adc
bound
lds
inc
test
jnp
mov
xchg
cmp
scas
div
arpl
pop
movsb
dec
sbb
test
rolb
or
mov
xor
stos
push
push
lcall
jno,pt
movsl
mov
cltd
sar
outsb
fldln2
jecxz
pusha
decl
fwait
sbb
jb
mov
lret
aad
or
pop
inc
hlt
dec
inc
cmp
sbb
cmp
ret
xchg
or
and
test
xor
ret
sub
push
dec
insl
pop
flds
jno
adc
loop
in
mov
xor
push
in
call
aad
loope
test
cmp
aad
sar
jns
mov
idivb
xchg
pop
mov
inc
xchg
push
popf
jae
fildll
sub
mov
ja
pop
ljmp
xor
mov
mov
add
add
inc
add
mov
cmpsb
pop
adc
enter
mov
insl
shl
test
adcb
push
addb
lahf
jo
or
pop
inc
cmp
cmp
add
jl
xchg
xor
cs
sbb
mov
das
inc
lods
mov
and
mulb
adc
mov
pop
js
cltd
mov
jae
insb
cmp
sbb
push
lods
mov
or
push
xchg
enterw
xchg
sbb
and
or
int3
or
and
xlat
pop
dec
adc
fdivrs
add
sbb
mov
pop
bound
hlt
inc
or
pop
inc
inc
add
mov
mov
lret
jg
cmp
outsl
int
push
push
lret
nop
dec
jge
stc
pop
or
add
xlat
mov
xor
mov
push
rcrl
fwait
dec
pop
pop
subb
gs
scas
push
add
dec
movsb
sub
mov
and
bound
aaa
inc
fmul
cmp
popf
sbb
cld
lods
push
xor
aam
or
andl
test
pop
jp
test
push
fsubrl
cs
inc
or
push
push
cltd
xchg
mov
scas
xlat
ja
scas
add
push
inc
popa
xorl
or
scas
fimull
xchg
push
dec
shll
add
pop
in
jne
cmp
cmp
jl
sahf
test
in
test
in
int3
lock
hlt
push
dec
lcall
js
mov
ret
xor
jne
or
leave
sahf
jl
mov
or
stc
mov
in
xchg
xor
leave
mov
clc
arpl
mov
dec
dec
fcoml
imul
fcompl
dec
lods
je
hlt
outsb
jle
xchg
lds
ljmp
divb
adc
mov
fsubrp
fstps
insb
lcall
popa
icebp
sub
sbb
mov
lock
inc
xchg
icebp
enter
rcll
inc
push
push
xchg
and
nop
ljmp
fsubrl
mov
scas
je
popa
jp
cmpsb
daa
xchg
adc
icebp
push
xlat
ljmp
mov
jl
jb
and
jno
scas
je
jp
movsl
dec
cmp
aaa
cmpsl
push
ret
mov
stos
mov
fwait
lret
sahf
adc
dec
sti
cs
push
lcall
aad
adc
popf
popa
daa
sub
call
mov
add
or
push
mov
and
idivb
in
pop
mov
rorb
aad
add
add
clc
daa
loopne
push
cmp
arpl
mov
out
adc
in
push
out
jg
add
sbb
sar
dec
dec
cmp
gs
inc
aad
add
or
lods
or
data16
mov
out
in
jns
xchg
mov
push
xor
ret
and
or
push
pop
into
test
ss
out
mov
and
fsubrl
scas
rorb
sbb
xchg
jnp
nop
addb
icebp
pop
cmpsl
dec
movsl
xor
or
data16
xchg
imull
je
add
push
add
mov
mov
jge
sub
es
xor
jne
inc
xchg
dec
jb
scas
jno
mov
xchg
push
ret
mov
enter
jb
push
dec
jne
jmp
es
cli
sbb
lods
xchg
xchg
lock
xor
lret
cmc
ja
mov
sbb
orb
insl
daa
shrl
mov
mov
xor
mov
push
push
adc
repz
jnp
jle
call
psubusb
jbe
mov
les
mov
inc
fimuls
fucomip
test
sbb
pop
jae
bound
sbb
push
pop
aas
dec
mov
testb
lods
sbb
pop
push
cmpsl
ja
pop
pop
add
lret
xchg
daa
xchg
pop
jo
test
mov
enter
aad
leave
jno
movsb
pusha
mov
mov
test
call
mov
repnz
outsl
inc
mov
or
outsl
inc
and
mov
pop
fistl
movsb
inc
lods
jno
and
int
add
scas
dec
mov
mov
shlb
adc
mov
imul
sbb
bound
rorl
adc
adcb
cmp
pop
push
push
lahf
and
add
jmp
xor
imul
mov
dec
pop
lcall
out
pop
std
and
add
mov
aaa
dec
xor
in
outsl
or
inc
pop
in
fcoms
mov
mov
jne
sub
int
lret
add
test
sub
sub
pusha
adc
sub
ficoml
popa
pop
out
xlat
lods
and
mov
inc
aaa
push
ret
leave
fadd
cmc
fcompl
sub
std
dec
pop
mov
push
addr16
sbb
pop
sub
sbb
push
xor
xor
ds
out
pop
mov
aas
pop
nop
and
inc
dec
mov
xchg
pop
fsin
mov
sub
pop
mov
push
cmp
sub
sbb
mov
sub
and
lods
aas
movsb
adc
or
cltd
addr16
je
jb
scas
fadds
dec
and
rolb
pop
sub
addr16
ret
jno
fstpl
add
and
inc
jno
fucom
in
je
jne
add
iret
gs
or
aam
xchg
push
cwtl
add
negl
mov
and
push
add
adc
jbe
push
addb
aaa
leave
in
cli
mov
fsubrl
push
or
or
out
movsl
pop
and
xchg
lods
int
sub
call
sub
cmp
rcrl
cmp
test
dec
fsub
cld
lret
into
mov
out
pop
sahf
out
adc
nop
pushl
dec
mov
insb
repnz
je
sbb
mov
pop
push
dec
sub
sbbl
xchg
adc
lock
adc
xor
mov
xor
repnz
cmp
sbb
jecxz
jle
jge
movsl
dec
xor
dec
loope
loopne
femms
push
movsl
dec
mov
in
lret
pushf
and
xchg
pop
rolb
loopne
or
mov
movsb
xor
push
cld
pop
hlt
sub
push
je
cltd
repnz
or
cmp
mov
sarl
xchg
xor
jae
loopne
std
lahf
jb
insl
dec
mov
pop
cmp
cmc
cli
lret
pop
pusha
scas
loope
xor
pop
jo
decb
out
pop
xor
sbbl
jmp
add
int3
pop
sbb
cmp
iret
mov
stc
xchg
and
jae
lea
pushf
cmpsb
mov
cmp
je
fmuls
aad
cltd
xor
and
xchg
push
js
addr16
in
push
pusha
pusha
cmp
sbb
inc
repnz
jno
pop
insb
pop
scas
cmpl
out
mov
rep
or
test
mov
shrl
and
sbb
inc
push
pop
pop
std
popf
push
jo
mulb
push
push
std
aaa
aaa
pop
mov
outsl
or
and
cmp
fistl
arpl
rcrb
pop
pushf
andb
add
cmp
adc
aam
xchg
sahf
push
fdivrl
mov
or
lahf
cmc
fbld
pushf
sub
sti
ja
push
cld
xchg
mov
test
xchg
pop
lock
int3
xchg
ss
cmp
xor
push
xor
ret
rorb
mov
mov
outsl
jp
fbstp
mov
push
es
call
mov
mov
lcall
push
stc
xchg
mov
dec
lods
pop
movb
out
ret
pop
adc
out
adc
xor
pop
jl
or
xchg
mov
lea
outsb
aas
lret
push
add
pop
mov
int3
jnp
xchg
jbe
test
stc
xor
lds
mov
sub
cmp
movsb
insb
push
scas
sbb
in
inc
push
push
mov
sub
or
xor
sub
js
pop
mov
add
jl
jo
into
push
pop
add
and
mov
lock
adc
fldcw
xchg
call
mov
ja
xchg
jl
fwait
call
aam
pop
gs
mov
inc
push
sar
mov
xor
sub
nop
aaa
fisttpll
adc
mov
or
cld
mov
jo
jbe
mov
int
ret
push
dec
add
mov
lcall
push
test
dec
rcll
add
cli
push
mov
mov
test
sbb
pop
cmpl
add
mov
push
mov
out
out
dec
cmp
jmp
pop
in
pop
insb
aad
xchg
mov
adc
push
inc
jmp
mov
cmp
ja
sbb
loopne
pop
pop
xor
loop
mov
lods
push
lahf
jno
dec
mov
std
pushl
cld
loope
inc
fildll
int
fwait
cli
stc
sbb
and
mov
call
cld
sub
cli
or
or
pop
movsl
mov
iret
inc
pop
sbb
sub
jae
push
dec
data16
pop
and
pop
rcll
mov
jp
je,pn
push
cwtl
push
and
mov
frstor
mov
and
icebp
cmp
flds
xor
xor
mov
rclb
inc
mov
leave
repz
pusha
add
fcmovnbe
and
loope
sar
icebp
shl
mov
mov
leave
test
pop
popf
subl
push
adc
jl
or
push
cli
xchg
mov
and
shrl
outsl
inc
loope
cmp
int3
dec
stc
test
cmp
jae
and
ds
xlat
das
adc
push
mov
into
push
insl
inc
jnp
push
adc
stc
push
stos
repnz
xchg
out
ror
inc
out
bound
pop
and
mov
or
push
jl
imul
sbb
clc
loopne
es
rcll
test
test
fdivrs
sbb
xlat
push
and
sub
repz
mov
sahf
or
push
test
int3
outsb
hlt
dec
in
lock
xchg
push
fadd
jle
mov
repnz
mov
mov
shr
out
imul
cmp
lock
loope
cmc
lods
add
adc
jle
in
cld
out
mov
inc
fistl
xlat
sub
into
scas
xchg
int
add
xchg
sub
pop
outsb
mov
int3
call
imul
std
sbb
add
das
xor
push
daa
pop
mov
and
repnz
aas
adc
das
fwait
dec
mov
push
cmpsl
inc
pop
cwtl
xchg
rol
sbb
push
add
inc
mov
xlat
or
das
in
sub
sbbb
mov
xor
jnp
jnp
or
xchg
ds
das
push
ficomps
xchg
adc
adc
ror
hlt
xor
add
cmp
adc
in
xor
inc
ret
dec
inc
pop
pop
inc
cli
mov
in
inc
enter
es
sbb
mov
mov
push
jle
push
loop
les
pop
dec
jg
lods
cld
mov
clc
xchg
xchg
lds
daa
ret
pop
popa
dec
jo
sbb
push
xchg
lret
fnstsw
ret
jne
negl
hlt
out
mov
inc
daa
loope
dec
in
adc
mov
outsb
lcall
inc
fistps
movsl
mov
push
stos
adc
aaa
testb
mov
lea
enter
aas
xor
mov
lret
inc
push
stos
dec
pop
mov
or
add
or
punpckhwd
ljmp
push
sar
adc
enter
test
or
mov
popa
dec
inc
into
or
mov
mov
icebp
repnz
sub
mov
shll
mov
iret
mov
pop
std
fiaddl
scas
dec
adc
lock
testl
rcrl
fcoml
arpl
pop
popf
pop
cmpsl
aaa
fstpl
inc
and
test
xchg
rol
shlb
leave
sahf
mov
xchg
and
lret
daa
shr
jle
xchg
mov
iret
popf
cs
pop
test
stc
adc
or
jns
shr
adc
sub
push
dec
sbb
xor
in
test
xor
cli
aaa
xor
popa
insl
inc
pop
neg
sbb
jbe
mov
fidivs
repz
bound
inc
pop
add
xchg
pop
sbb
fwait
mov
out
adc
push
ss
sar
in
jo
pushf
lea
dec
loopne
adc
in
out
push
rclb
cwtl
jle
leave
push
std
ret
or
xor
movsb
movsl
or
pushf
jb
fcomi
pop
lods
sbb
out
std
or
pusha
scas
mov
es
cmp
fadds
leave
ret
jnp
fcoml
sbb
xor
push
dec
xchg
jmp
sbb
inc
mov
jns
pushl
cli
negl
insb
outsl
pop
hlt
out
pushw
stos
cmp
out
aas
addr16
test
cld
ja
daa
test
in
push
stc
adc
aad
mov
lahf
dec
scas
fsubs
push
mov
mov
xchg
pop
test
push
mov
xchg
jno
add
fidivs
pop
testl
dec
test
mov
dec
mov
sub
in
jp
shlb
fxam
mov
popa
addr16
sbbl
pop
ja
test
xchg
pop
push
cmp
push
xabort
and
gs
ds
adc
inc
aaa
xor
jl
xor
mov
adc
insb
add
loop
dec
add
cmp
ja
sub
xor
out
lods
cmp
mov
arpl
into
rolb
in
ss
mov
sub
or
dec
xchg
sarb
popf
cmp
and
std
stos
jb
xlat
stos
mov
enter
imul
adc
sub
sub
xor
jbe
test
in
adc
sbb
faddl
lds
cmpsl
add
push
pusha
and
test
jnp
inc
and
mov
xor
dec
lcall
neg
mov
mov
xor
out
or
and
mov
test
and
dec
fmull
rolb
mov
dec
out
xor
and
xchg
push
adc
dec
rcl
lret
mov
add
dec
xchg
inc
fiadds
in
int3
cs
mov
sub
stc
push
xchg
shrl
fs
and
pop
lods
outsl
jno
lea
test
out
hlt
sub
dec
jp
test
xchg
aad
mov
sbb
mov
pop
adc
xchg
test
fldenv
pusha
xor
adcb
or
clts
fidivrl
sbb
lret
ss
cmovbe
jne
sbb
xor
inc
mov
adc
cmp
fcmovbe
into
insl
aad
arpl
mov
jae
mov
mov
mov
out
stc
popa
fwait
sbb
sbb
std
out
jb
ret
mov
jno
jg
int
push
pmulhw
add
incl
dec
adc
or
mov
lock
imul
xchg
fsubrl
rorb
cltd
dec
shll
mov
inc
jle
xchg
pusha
aad
cmc
pop
pop
pop
xchg
int3
repnz
jl
test
das
stos
adc
aad
xor
and
jno
out
dec
mov
jp
xchg
add
test
je
lods
das
das
sub
fldl
dec
movsl
in
dec
mov
adc
mov
ret
add
lds
mov
aas
jge
lock
lds
iret
outsl
movsl
fsubr
adc
jb
push
lret
rcrb
jae
notl
cwtl
mov
mov
inc
arpl
xor
mov
mov
xchg
fidivrs
out
es
xor
cs
mov
dec
pop
push
sbb
mov
gs
cmp
inc
jno
mov
fsin
fmull
lahf
xchg
scas
pop
push
cs
aad
inc
leave
out
pusha
sub
pop
mov
int
adc
pop
test
inc
dec
scas
arpl
bound
stos
test
adc
add
js
mov
push
inc
mov
shr
cmp
shl
jg
xchg
ja
in
push
mov
mov
jo
add
addb
or
dec
push
fistpl
testl
sub
jbe
mov
pop
jg
int3
out
out
xchg
aad
cmpsb
shll
dec
jp
push
sbb
xor
xor
movsl
mov
mov
pop
dec
jnp
mov
sub
add
lcall
or
nop
add
xchg
add
xchg
shlb
adc
and
sbb
sub
adc
add
adc
add
gs
int
mov
idivl
sub
bnd
out
enter
mov
add
push
fcmovu
xchg
xchg
dec
sbb
andl
int
add
pushf
adcb
cmp
mov
cli
mov
xchg
xchg
loope
orb
mov
data16
mov
imul
mov
into
mov
scas
rol
insb
push
dec
cld
test
adc
mov
jl
sbb
pushf
xchg
cmp
mov
rcl
addb
push
mov
mov
sarb
int3
push
movsb
push
ret
js
or
scas
ffreep
xchg
ds
jp
xchg
shl
sbb
sub
in
mov
incl
jp
jae
mov
daa
push
aad
out
aaa
add
xlat
mov
das
in
pushf
pop
pop
std
addb
dec
aam
loopne
dec
rcll
mov
xchg
jnp
cmp
mov
lret
xchg
popa
insb
dec
inc
pop
daa
arpl
mov
mov
jno
sbb
adc
mov
cmp
ret
xchg
test
aas
out
pop
push
out
lcall
or
fdivl
cli
or
or
test
cli
lcall
push
jno
insl
iret
imul
pop
xor
test
scas
jge
xor
push
nop
sbb
jbe
cmp
pop
fidivl
popa
cmp
xor
pop
dec
bound
and
jae
mov
xchg
dec
push
je
pop
pop
fcompl
mov
cltd
nop
inc
pop
jmp
xor
mov
insl
xchg
daa
inc
push
mov
mov
and
push
lock
mov
std
mov
enter
movsl
xchg
test
cmp
push
xor
and
pop
inc
adc
inc
xchg
push
pop
arpl
and
imul
jge
inc
cwtl
scas
jbe
xor
movsb
cmp
es
movsl
pop
lahf
pop
dec
xchg
fnstenv
movsl
push
andl
dec
icebp
loopne
movsl
bound
sub
out
ljmp
scas
out
sub
mov
push
cltd
leave
repnz
imul
push
mov
mov
push
inc
jne
insb
leave
mov
cmp
mov
cmpsl
ljmp
int
pop
adc
insl
pop
cli
inc
data16
dec
sub
lock
aas
insl
xchg
shlb
andb
inc
cltd
repnz
mov
les
mov
stc
cwtl
xchg
push
arpl
push
lret
xchg
movsw
fwait
cmpsl
call
jb
and
sbb
mov
jge
xchg
pop
mov
xlat
and
sbb
jae
notl
faddl
fidivrs
and
stos
xchg
xchg
and
push
lcall
arpl
repz
mov
rcl
pop
fdivr
gs
cwtl
test
dec
int
and
sbb
aad
xor
push
popa
fcomi
mov
popf
lea
pop
movsb
mov
mov
fldenv
dec
add
movsl
imul
insl
xchg
or
add
or
ja
mov
stos
int3
pop
cld
sarl
cli
jo
or
orl
push
frstor
xorb
repz
or
xchg
popf
rcll
jbe
adc
dec
sbb
inc
mov
or
xor
mov
jmp
inc
add
aaa
add
cli
push
cwtl
pop
add
daa
popf
hlt
incb
push
aaa
pop
fdivl
jmp
adc
jnp
pusha
cltd
mov
cmc
jle
pop
insb
insb
push
in
sub
dec
out
xchg
dec
and
add
leave
fwait
in
ret
mov
scas
cltd
mov
mov
inc
dec
pop
sub
mov
cmp
test
data16
mov
inc
pop
clc
out
jg
xchg
scas
cmp
fwait
mov
mov
sub
in
and
or
sbb
mov
cli
xlat
cmp
popa
nop
mov
icebp
bnd
push
dec
sub
lods
fadd
dec
push
test
repz
xchg
cmp
daa
pop
sbbb
daa
inc
arpl
sub
pop
inc
pop
mov
cmp
fisubs
and
ja
pop
adc
add
shlb
das
and
paddsw
lret
sahf
xchg
jae
inc
insb
call
dec
inc
pop
pop
sbb
repz
jbe
jg
pop
xor
test
or
mov
adc
xchg
cli
mov
rol
sbb
pop
mov
jns
and
and
jge
cmp
lods
pop
and
pop
cld
das
fmuls
xor
lods
pop
imul
inc
xlat
jp
andl
push
pop
insl
sti
xor
adc
sbb
add
int3
pop
mov
fnstsw
push
mov
addr16
arpl
mul
mov
test
cmp
out
fcmovbe
test
push
adc
outsb
call
sahf
cs
insl
push
in
inc
addr16
push
subb
shll
xor
xor
dec
push
xor
mov
xchg
add
scas
push
in
rolb
aam
jae
lds
xchg
mov
xor
cmp
dec
inc
inc
fnstsw
outsl
mov
out
cmp
mov
fldenv
ret
mov
mov
jns
adc
stos
cwtl
je
stc
cmpsl
sti
mov
cmp
mov
cmp
xchg
pop
js
cwtl
loop
mov
scas
inc
adc
cmp
lret
or
test
les
repz
dec
jmp
push
decl
sbb
xor
cmp
jns
or
mov
les
jo
movsl
push
adc
clc
dec
mov
fdivl
test
jae
xlat
dec
sbb
cli
into
mov
inc
inc
jg
shlb
jle
push
lea
jp
dec
cmp
adc
inc
fimuls
push
mov
aas
call
cmp
outsl
push
lea
fbld
pop
jecxz
mov
sub
rclb
lods
mov
sbb
in
outsb
loopne
jp
je
xchg
adc
cmp
lcall
ss
test
test
ja
lcall
ljmp
scas
out
mov
mov
sub
mov
xor
repnz
mov
add
in
mov
test
movd
and
icebp
xor
mov
add
cmp
pop
data16
bound
jb
dec
shll
add
into
ja
cmp
mov
dec
push
mov
addr16
mov
ja
add
mov
jnp
loopne
ljmp
repz
ljmp
in
cmpsb
xchg
adc
test
mov
dec
cmc
popa
xchg
paddusb
mov
negb
lea
cmovle
hlt
adc
sti
cmpl
lret
jmp
sub
lea
shrl
add
sbb
faddp
cmp
adc
push
cli
fdiv
mov
lds
sub
dec
ss
pop
cmp
jmp
dec
sahf
jge
out
frstor
cmp
push
inc
rcrl
jp
pop
or
ja
mov
ret
and
adcl
mov
shrb
jo
dec
notb
sbb
arpl
xor
addr16
imul
shr
pop
insb
sub
int
mov
push
pop
inc
cmp
jbe
lret
sti
cs
xor
mov
jnp
imul
out
loop
sbb
les
sub
insl
mov
sub
int
inc
dec
int3
into
push
lods
pop
jne
rcrl
ds
mov
sbb
cmpsb
cmp
mov
inc
arpl
bnd
dec
notb
dec
out
mov
daa
stc
jns
insb
pushl
pop
lock
lcall
mov
bound
icebp
fiadds
or
and
jno
das
aaa
test
cmpsl
adc
cmp
jns
pop
out
into
mov
xor
xor
mov
int3
xchg
outsl
adc
xchg
xchg
push
enter
rep
mov
and
sbb
mov
repnz
cmp
sbb
sahf
in
jb
ret
xlat
shll
push
jo
std
mov
jmp
aad
test
movsb
jg
pop
push
adc
push
test
jge
test
push
bnd
and
iret
jp
rolb
pop
and
test
adc
pop
sbb
push
outsl
pop
cli
sub
mov
outsb
aas
hlt
int3
cs
adc
lods
call
dec
loope
or
dec
jge
loop
in
mov
ret
mov
lea
pop
repnz
sbb
cmp
sarl
push
iret
add
jno
in
and
jbe
mov
jae
xlat
and
sarl
cmp
sbb
cmp
push
in
popf
or
daa
int
jle
mov
bound
or
popa
fisubs
or
fidivs
cmp
jbe
lods
adc
inc
mov
and
aad
gs
inc
outsl
mov
mov
xor
adc
jecxz
cli
cmp
xor
fistpl
cmp
popa
push
out
loopne
mov
call
pop
mov
shr
dec
les
icebp
jo
sub
xor
insl
test
xchg
push
lret
mov
add
shlb
or
ret
jbe
fs
xor
test
cmp
mov
scas
rorl
gs
jns
sub
daa
popf
in
inc
mov
add
sbb
push
jae
lcall
and
mov
cmp
dec
push
stc
cmpsl
pop
push
aas
pmulhw
xchg
cmp
out
daa
rcr
sbb
pop
insb
test
push
rorl
add
cmp
aam
pop
jge
sbb
pusha
mov
scas
jp
add
pop
add
mov
add
push
add
fstl
mov
jbe
cmp
clc
scas
notl
push
fwait
xor
push
daa
fstl
mov
adc
iret
add
jnp
xor
or
jo
sarb
dec
stos
xor
lock
pop
cmpsl
cmp
jle
rcll
cld
lods
fidivrl
gs
call
movsb
add
sti
or
push
jge
jnp
sarb
jecxz
int3
pextrw
test
push
clc
xchg
mov
and
mov
fstp
push
popf
loop
pop
rolb
or
std
and
fbld
xchg
xor
mov
adc
push
pop
mov
push
sbb
xor
adc
repz
mov
push
push
in
cmc
inc
adc
inc
sti
inc
or
mov
aad
cmpsb
mov
imul
push
stos
dec
xchg
xchg
sub
fsts
pop
xchg
or
insb
cwtl
cmp
or
cmpsl
cmpl
popa
mov
outsb
mov
mov
pop
xchg
stos
xchg
out
mov
enter
pushf
lcall
lahf
mov
mov
dec
push
aaa
aam
mov
imul
ret
scas
sub
mov
scas
pop
mov
dec
push
add
aas
test
adcb
sti
popf
in
mov
lret
or
leave
mov
jg
add
sub
mov
aas
test
dec
cld
int
cli
filds
xor
js
sub
repz
cmp
lea
les
jmp
jl
into
ret
ja
and
mov
xor
dec
sbb
jb
mov
dec
clc
xchg
mov
sub
sbb
or
fsubrl
daa
xor
push
cmc
mov
orl
push
adc
cmp
jo
dec
inc
cmpsb
add
in
xchg
cmpsb
insl
cli
pop
sub
mov
cmp
lock
les
dec
into
sub
add
sbb
popl
mov
jb
jl
hlt
mov
into
and
push
adc
push
fcmove
lret
adc
enter
mov
mov
data16
dec
imull
lea
mov
bound
call
jecxz
jne
xchg
push
cmp
jbe
mov
rcrb
cld
loope
mov
or
addr16
rclb
in
ret
mov
clc
xchg
jno
add
rorl
popf
test
mov
pxor
jb
pop
ja
sbb
xchg
movb
cmp
cld
jmp
sub
mov
cmp
mov
mov
movb
adc
aam
xchg
cmpsb
out
insl
jo
jmp
into
cmp
cmp
xor
xchg
scas
stc
mov
jl
add
mov
adc
add
repz
pop
pushf
dec
popf
mov
outsb
mov
xchg
pop
pop
and
mov
push
repz
jnp
hlt
loope
push
adc
out
gs
xchg
rorl
mov
iret
sbb
jno
xor
dec
pushf
dec
aad
es
sbb
xchg
frstor
pop
cld
mov
cmp
push
xor
push
stos
inc
je
lahf
frstor
or
mov
insb
mov
mov
jo
push
or
dec
in
hlt
cmpsb
call
lods
sub
pop
outsb
sub
outsl
paddsw
and
gs
and
addr16
xchg
mov
push
orl
rcl
push
xchg
add
xor
icebp
xlat
adc
cmp
dec
lcall
inc
or
int
or
in
dec
aas
push
sub
mov
fmuls
jae
pusha
mov
xor
movsl
sub
inc
shrl
les
inc
repz
xchg
movsl
dec
fisubs
stos
adc
aaa
call
xor
test
jg
call
mov
arpl
pop
jne
cmc
sbb
mov
ret
jp
sub
popf
add
mov
mov
arpl
sti
into
lret
andb
aam
std
jle
jl
mov
jg
xchg
dec
dec
xchg
mov
cmp
mov
addr16
xorb
jnp
sbbb
adc
adc
into
mov
adc
push
and
xchg
push
scas
aam
inc
xor
mov
mov
and
sbb
cmpsb
pop
enter
xchg
shlb
mov
packssdw
pop
sbb
inc
xchg
scas
in
xor
mov
int
in
mov
aad
repnz
mov
es
xchg
dec
add
stc
sub
jmp
add
lret
lcall
push
lret
add
addb
pusha
enter
test
mov
hlt
push
inc
out
mov
xchg
mov
add
xchg
mov
ret
test
sahf
xchg
and
jns
addr16
shr
and
jnp
add
fdivrl
jbe
pop
cmpsb
cwtl
push
aam
cmc
popf
jle
lock
push
sub
repz
inc
std
add
call
andb
ds
mov
xchg
pop
mov
int
jmp
stos
pop
push
stos
adc
mov
arpl
add
das
lcall
adc
push
insl
push
sbb
push
shlb
sbb
loop
mov
leave
rol
xor
mov
adc
cmpsl
nop
adc
int
lods
fisttpll
insl
sub
daa
outsl
mov
ja
dec
aam
dec
inc
add
push
call
pusha
ja
lods
dec
mov
das
push
int3
or
nop
fidivs
gs
loope
adc
pop
comiss
sti
iret
push
add
xor
movsb
or
stos
insl
scas
adc
mov
dec
idivl
loope
mov
or
push
sbb
psllq
mov
and
cmp
sahf
aad
jecxz
insb
jecxz
testl
popf
xchg
dec
lock
xchg
js
sbb
mov
cmp
dec
xchg
push
lret
sbb
jns
inc
push
cs
or
out
mov
and
lock
add
sbb
push
es
xor
leave
pop
or
gs
xor
ficompl
mov
fimuls
sub
jg
mov
xor
push
dec
push
mov
mov
dec
jmp
add
mov
sub
cmp
mov
je
inc
ja
clc
sti
jmp
sub
insl
xchg
pop
aam
inc
or
xor
nop
and
mov
sarl
dec
jmp
push
or
cwtl
pop
repz
outsl
push
jp
call
jecxz
shrb
sub
mov
adc
xchg
cwtl
mov
sahf
and
cmpl
gs
mov
jae
and
mov
movsl
push
test
mov
dec
aam
bnd
iret
daa
sub
sbb
push
add
push
add
dec
arpl
pop
mov
xor
fists
push
data16
jb
jbe
faddl
sub
push
xor
fucomp
cmp
out
push
mov
add
pop
icebp
pop
jle
clc
in
add
fisttps
push
fstp
nop
imul
test
aas
push
int
xchg
mov
cmpsb
or
pop
pop
ss
ret
add
pop
loop
shll
inc
ss
push
repz
sarl
cltd
xchg
inc
js
mov
outsb
ret
xchg
into
data16
xchg
incb
and
inc
jge
addr16
adcl
ret
pop
lea
jmp
push
sbb
stc
imul
pop
out
xchg
stos
lcall
sti
cmp
ret
into
pop
imul
test
push
sahf
popf
jp
jne
fadds
in
push
test
in
icebp
mov
aam
xor
mov
mov
add
xchg
mov
shrl
pop
mov
lea
loopne
stos
push
cmp
jb
jno
cld
sbb
shl
pop
lret
enter
xchg
mov
fidivl
ja
jno
and
sub
movsl
inc
xchg
aaa
sbb
adcb
cs
outsl
mov
mov
leave
dec
jp
push
stc
inc
in
popa
stos
out
or
add
repnz
xor
push
jge
scas
xchg
jno
sbb
mov
jg
add
cmpsb
fwait
je
popf
ds
adc
fcomip
ds
pop
mov
fisubs
out
xchg
roll
dec
ret
lock
ficompl
mov
ss
negb
xchg
adc
test
dec
dec
and
xchg
loope
es
icebp
das
rcrb
mov
cmp
jp
pusha
movb
add
sbb
sub
popf
lret
imul
shr
xchg
inc
or
js
cmpsb
pop
rclb
or
inc
mov
adc
sub
leave
lock
loope
imul
mov
cmc
mov
inc
xchg
pop
sbb
lret
cmpl
in
sahf
sub
mov
in
call
pop
mov
fs
sarl
aaa
cmp
in
xchg
add
inc
int3
dec
psllq
adc
xchg
adc
test
vpmaxub
jae
data16
push
pop
in
fsts
adc
out
add
lock
jb
inc
xor
rcl
in
js
jp
gs
sub
push
push
mov
cli
mov
in
dec
pop
imul
mov
movsl
add
add
inc
mov
out
pop
inc
int
andb
push
mov
ss
cwtl
cmpsb
push
mov
mov
out
cmpsb
loope
int
jecxz
daa
int
mov
icebp
sbb
pop
leave
xchg
incl
push
dec
lds
add
imul
push
ja
xor
notb
push
fstpt
pop
sbb
rclb
add
add
mov
je
pop
mov
jg
test
lods
push
mov
adc
push
jecxz
pusha
xor
arpl
pop
test
movsl
daa
jmp
mov
push
dec
jge
pop
sub
test
pop
mov
iret
mov
sbb
pushf
jmp
mov
sahf
aad
jp
jb
maskmovq
negl
pop
sub
push
mov
fdivl
push
mov
or
push
lahf
fidivs
pop
xchg
cltd
xor
fdivs
xlat
int
in
inc
dec
xchg
mov
lods
mov
in
mov
outsb
xor
add
cmpsl
shrb
and
popa
cmc
std
testb
mov
sub
xchg
jg
inc
gs
jae
push
loope
or
mov
mov
and
out
aad
unpckhps
ret
imul
mov
inc
push
and
inc
pop
test
into
adc
push
and
int
outsb
pop
sbb
fs
jp
incl
enter
and
popa
test
lret
cmp
mov
dec
addr16
aad
or
jo
mov
pop
sub
jl
outsb
jmp
inc
lock
repz
stc
pop
loop
cmovp
jecxz
loopne
shrb
push
pop
or
sub
imul
fstpl
mov
dec
cltd
sarl
jo
sub
xchg
or
adc
outsb
xchg
lods
mov
cld
lds
mov
xchg
sbb
in
sarl
mov
ud1
cmpsb
adc
movsl
cmpsl
insb
fisttps
clc
outsl
mov
lahf
jecxz
inc
mov
sub
call
add
or
jb
fidivl
rcrl
stos
pop
dec
mov
andl
sahf
and
aaa
test
push
jl
ret
ljmp
sarl
xchg
jl
jns
mov
addr16
mov
or
add
lret
add
dec
decb
pusha
mov
pop
divl
je
fdivs
cs
cwtl
mov
rcrl
iret
cmp
popf
and
jno
mov
lahf
mov
inc
push
and
mov
in
mov
lea
sti
iret
aam
mov
mov
mov
lds
sub
fisttpl
and
cmp
pop
rorb
mov
mov
adc
dec
mov
movsl
adc
push
inc
dec
test
bound
adc
adc
sbb
inc
aaa
pop
movsl
mov
sub
inc
inc
shrl
loope
pop
add
pop
test
mov
fnsave
mov
push
and
lretw
sub
mov
inc
jg
pop
cwtl
push
lcall
je
addr16
dec
test
pop
mov
js
hlt
rol
dec
bound
cmpsl
sbb
add
shll
insl
cmpsb
stos
in
lret
inc
int3
sahf
icebp
call
dec
es
stos
ljmp
or
push
pop
std
cmp
lods
sub
lret
inc
mov
jb
clc
loope
push
lock
or
xchg
xchg
mov
js
mov
sti
push
pop
popf
mov
aaa
pop
xor
push
cmp
std
add
adc
gs
jb
cmc
outsl
xchg
shrb
mov
cmp
jbe
enter
loop
add
andl
fs
mov
pop
nop
fadds
mov
cwtl
dec
in
jnp
pop
bnd
std
cltd
pop
lods
js
xchg
pop
test
stos
mov
and
mov
or
cld
xor
jg
pop
inc
cs
outsb
xchg
lret
adc
mov
sub
xor
insl
movsl
lds
test
cwtl
mov
pop
xchg
add
xor
daa
xor
xor
rorb
xor
mov
imulb
sarl
adc
xchg
push
test
ret
mov
cmp
xchg
xor
inc
rcrl
cmp
jno
fcomi
mov
aad
sub
sbbl
mov
lods
or
ss
mov
cmc
pop
dec
imul
mov
fwait
sub
repz
cmpsb
cmpsl
fwait
xor
and
mov
push
call
cmp
mov
push
mov
stc
cmp
leave
cmpl
aas
ljmp
mov
addr16
fisubl
ss
int3
jecxz
fimuls
mov
call
xchg
ret
incl
sbb
aad
mov
insb
repz
xor
sbb
js
adc
in
outsb
sub
xor
stos
lss
in
call
je
andb
leave
mov
movsb
loopne
push
mov
sub
or
xor
addb
pusha
pop
fadds
mov
adc
xor
mov
jns
jns
aad
xchg
xchg
add
pop
mov
sub
loope
inc
je
add
int
fwait
mov
loopne
lret
cmp
push
pop
sahf
mov
inc
jge
stc
outsb
pop
cwtl
clc
addr16
jo
push
and
or
adc
mov
jp
icebp
fwait
sbb
jb
ret
shrl
adc
loop
mov
jmp
mov
in
or
aas
add
inc
lods
or
push
jl
inc
adc
add
jg
pop
jge
loop
inc
arpl
sbb
or
pop
dec
or
sub
hlt
scas
xlat
adc
mov
aaa
aaa
jmp
push
cmp
xorb
sbb
mov
cld
sub
push
sbb
sbb
mov
sub
cmp
ss
dec
stc
inc
mov
mov
jg
inc
scas
or
mull
dec
cld
enter
xchg
sub
add
mov
repz
push
in
sbb
scas
incl
mov
dec
rcrb
mov
jl
cmpsl
mov
lea
pusha
add
and
insb
ja
andl
or
cmpsl
xchg
in
mov
imul
inc
sbb
jns
xor
mov
and
or
scas
mov
outsl
mov
add
lock
cld
sbb
add
sub
push
cld
pop
pop
xchg
push
or
negb
mov
jg
int3
adc
insb
cmp
shr
daa
fidivrs
mov
cmp
xchg
or
add
xchg
sbb
clc
test
adc
cmp
mov
mov
add
lods
popf
out
in
dec
mov
das
mov
test
sub
xchg
lods
mov
mov
mov
cwtl
jno
xchg
jmp
cs
lret
jb
pop
popf
xchg
movsb
add
xchg
mov
bound
loop
xchg
push
inc
sub
xchg
mov
jno
nop
das
outsl
test
jnp
loopne
push
test
outsb
cmpsb
data16
xchg
jmp
jge
push
jnp
movsb
insl
cli
popf
lcall
pop
loope
sti
orb
inc
push
nop
jg
aad
sti
ficompl
jl
dec
xchg
or
popf
popa
xor
xchg
cmp
ss
xor
cmpsb
mov
push
leave
xchg
popf
add
je
mov
mov
cmp
hlt
mov
mov
mov
sbb
ljmp
leave
jmp
push
inc
xchg
adc
jmp
xor
or
rolb
ljmp
in
sbb
leave
cmc
das
mov
or
inc
sbb
pop
inc
imul
fdiv
js
sti
js
aam
push
xchg
pop
mov
or
jle
and
fcom
lds
dec
test
jecxz
mov
sbbb
orb
popa
std
dec
test
sbb
lret
mov
mov
and
out
inc
jg
cltd
add
mov
rorb
rcll
int3
cmp
push
gs
dec
fmul
xor
xchg
in
xlat
loop
pop
mov
mov
cmpsl
js
clc
loop
call
sbb
jmp
cmp
cmpsb
pop
mov
pop
mov
mov
mov
mov
adc
iret
out
lret
mov
out
nop
pop
clc
pop
in
stos
and
inc
clc
mov
sarb
out
gs
sarl
mov
sub
inc
cmp
adc
add
sub
pusha
and
call
sarl
fistpll
lea
loop
sarl
dec
mov
add
cmp
fs
sub
xchg
xor
pop
pop
punpckhwd
mov
fwait
mov
pusha
xchg
adcl
sub
mov
in
xchg
bound
ja
fidivl
cmc
bound
pop
push
xchg
ret
fcomps
mov
xchg
adc
pop
xchg
fdivs
xchg
xor
jb
dec
xchg
popf
test
rcrb
inc
dec
push
testb
push
adc
xor
sub
xchg
mov
jmp
xchg
scas
mov
cltd
sub
pop
sub
add
add
pop
test
aas
or
popa
or
sahf
mov
lds
inc
cwtl
insb
inc
lock
insb
lahf
fnstcw
push
and
jle
pop
xchg
call
push
and
sti
cmp
inc
fnstsw
xor
iret
cwtl
popf
rolb
push
test
xchg
stc
into
mov
aas
xchg
mov
icebp
sbb
mov
in
loope
stos
mov
loopne
mov
xor
mov
jge
mov
lock
jle
inc
leave
xor
mov
jae
ret
rcll
inc
lret
icebp
mov
mull
mov
cltd
bound
std
jae
aas
ljmp
in
mov
fldl
jmp
adc
xor
das
xor
xor
dec
fwait
mov
mov
je
ret
lret
sub
test
mov
pop
adc
push
inc
xchg
inc
pop
jle
xor
rol
ret
hlt
and
and
inc
leave
out
mov
cmp
pavgw
pop
mov
sub
or
mov
push
sub
cld
push
cmpsl
push
jae
adc
and
pop
add
jnp
xchg
sub
int
and
push
inc
dec
imul
xchg
sbb
mov
pushl
mov
fwait
mov
pop
mov
xlat
inc
nop
push
outsl
call
push
out
ds
cmc
cmpsb
repz
jecxz
out
xchg
sarl
subb
insb
xor
lds
out
fstpt
test
or
aam
comiss
and
je
imul
out
dec
movsl
jmp
andb
fwait
pop
pushf
negb
clc
xor
stos
test
xor
das
xchg
sub
movsl
mov
lock
or
les
sub
ret
cmp
stos
adc
pop
inc
addb
adc
mov
fsubrl
dec
das
mov
adc
push
pusha
mov
xchg
out
lcall
mov
pop
and
mov
sbb
dec
or
adc
psubusw
or
cltd
xor
sahf
cltd
or
stos
cmp
xchg
mov
dec
add
in
aaa
inc
mov
adc
sub
ljmp
in
iret
out
fxam
pop
test
pop
xor
out
dec
sub
pop
sub
rorl
push
ret
sbb
inc
ror
push
push
sahf
imul
jl
fldl
pop
mov
or
test
fdivrp
cmp
test
out
sbb
xchg
pop
push
add
pop
sbb
jmp
scas
leave
adc
stc
loopne
lret
xchg
int
mov
call
mov
and
sti
fs
sub
adc
push
fidivrs
addb
les
cmp
loope
addr16
imull
scas
inc
or
mov
or
add
sub
sti
and
sbb
aas
dec
xor
subl
lret
fistpll
enter
inc
add
cld
pop
fistpl
jl
ja
fs
out
push
or
sbb
lock
loopne
int
inc
arpl
int3
and
push
es
jne
mov
imul
scas
lret
iret
ljmp
adc
jmp
leave
movsb
gs
cmp
aaa
or
mov
mov
mov
inc
das
and
subps
mov
bound
or
mul
jecxz
push
push
mov
cmp
pop
cli
ds
inc
dec
dec
int3
fimuls
nop
lret
shlb
test
aad
jmp
jns
out
dec
int
dec
subb
sbb
bound
imul
push
sbb
mov
aad
xchg
loopne
pop
adc
ds
xchg
xlat
jp
in
jo
jmp
sbb
xor
dec
adc
pop
adc
push
shrl
cmp
adc
adc
push
mov
dec
xlat
push
lods
push
push
insb
push
dec
fistps
fcomip
cmp
xchg
mov
cs
jle
cltd
lea
pop
jbe
or
lock
loopne
out
or
xchg
or
mov
aam
push
push
adc
out
jp
aad
js
and
gs
movl
add
add
decl
dec
lds
insb
add
and
cmp
mov
adc
jb
adc
add
cwtl
pop
mov
ja
add
in
aad
or
out
dec
cmp
in
hlt
pop
iret
jne
int
push
jp
sbb
cwtl
scas
in
stos
test
lods
cmp
cwtl
cwtl
sub
jno
adc
pop
mov
fs
or
stos
in
cs
jnp
lret
dec
inc
ror
or
jo
cli
nop
in
and
jmp
add
mov
scas
adc
push
cli
adcl
int3
pop
add
adc
mov
xchg
ja
stos
sub
and
jae
push
push
inc
xchg
stc
or
jbe
enter
or
xchg
fsts
fst
xor
or
stos
ret
rorl
jno
mov
flds
ret
out
inc
xor
pop
sahf
fsts
cmp
inc
or
mov
divb
add
sbb
and
sub
mov
mov
and
popf
push
stos
add
test
icebp
je
out
mov
xlat
aad
ja
and
stos
lock
cld
js
sub
dec
repnz
mov
cli
rcrb
aad
adc
mov
bound
cmp
les
fnstenv
fisttpl
loop
xor
fcomi
cmpsb
adc
data16
fnsave
insb
adc
mov
dec
cmpsb
sbb
clc
pop
mov
push
jge
sahf
hlt
arpl
clc
bsr
xchg
pop
xor
or
pop
inc
and
push
pop
addr16
cmp
xor
ret
aaa
push
pop
out
jg
inc
subl
jp
add
and
push
shr
decb
cmp
repnz
jecxz
lea
push
and
inc
pop
xor
xchg
aam
inc
rcrl
pop
lds
sbb
dec
push
xor
out
mov
jae
sub
jg
jge
jmp
daa
iret
ljmp
sub
fld1
sub
dec
sarb
or
stos
ret
ret
sub
das
loope
pop
mov
or
mov
mov
out
loopne
clc
jnp
mov
mov
mov
divps
cld
insb
insb
popf
and
in
in
mov
pop
lret
mull
adc
push
mov
xor
movsb
push
mov
jl
loop
push
imul
out
pop
in
movzwl
xor
out
xlat
pop
test
mov
mov
jecxz
or
loopne
mov
das
pop
inc
xor
lret
aaa
pop
loop
test
lea
fisttps
outsl
dec
insl
aam
iret
pop
in
sbbl
mov
push
popf
inc
sbb
out
jno
out
xchg
mov
mov
push
in
cmp
das
ljmp
lret
jne
inc
push
add
cmp
xor
push
dec
mov
mov
or
imul
push
inc
nop
and
xchg
mov
mov
pop
pusha
push
and
shll
mov
movsb
mov
xor
cmp
add
xchg
fwait
pop
inc
and
mov
adc
sbb
xchg
xlat
jb
dec
dec
es
call
sbb
and
push
ffreep
gs
iret
mov
js
outsl
jle
or
cmp
xchg
enter
pop
adc
jmp
and
loope
mov
stc
pushf
xor
xlat
fcmovne
cmpsl
sub
dec
pop
in
xchg
dec
sub
cmpsb
lret
into
pop
cs
jnp
pop
add
mov
jno
push
sbb
or
mov
mov
roll
scas
scas
cltd
push
jns
xchg
fidivs
out
repz
dec
pop
bound
jmp
out
pusha
aaa
add
cmp
and
int
insl
mov
sub
fxch
or
fstpt
in
addr16
lock
shrl
imul
pusha
dec
jecxz
xor
fdivrl
inc
cmp
mov
jl
mov
dec
das
outsl
aas
mov
test
jmp
cmc
loop
xchg
pop
jbe
cltd
idivb
adc
jmp
pavgb
cmpsl
inc
cmp
inc
add
jae
cmpl
mov
xor
xor
sub
in
xlat
fs
push
xchg
jmp
imul
cwtl
mov
sub
sbb
gs
mov
popf
test
loop
shlb
mov
out
jmp
inc
in
xchg
movsb
jb
xor
push
insb
out
cmc
pushf
imul
push
imul
dec
pop
or
stos
or
mov
lods
xchg
cmpb
js
pop
ja
xor
cmpsb
push
es
mov
xchg
add
jno
scas
pop
adc
sub
add
mov
bound
or
sbb
sub
jl
std
movsb
loopne
js
xchg
jae
dec
mov
cwtl
fcmovnbe
daa
or
cmp
adc
or
repnz
shlb
xor
and
cmc
sub
inc
dec
sti
inc
out
mov
sahf
popf
lcall
push
movsl
imul
mov
xchg
repz
push
sub
add
mov
push
xlat
sbb
imul
adc
or
idivb
jns
mov
sub
jge
xor
insb
jb
ret
rorl
xlat
lahf
sbb
frstor
add
insb
mov
jge
popa
or
test
xchg
jle
inc
push
jnp
cmp
roll
dec
dec
lods
sbbl
push
xlat
sahf
loope
aas
imul
xor
jecxz
scas
add
xlat
test
adc
insb
and
je
jns
xor
add
scas
cmpl
jae
dec
jge
push
dec
shll
stos
and
or
xchg
lea
rol
cld
mov
mov
cld
and
cmpsb
test
sbb
cmp
hlt
xchg
scas
ds
cmp
sub
shlb
iret
outsl
mov
pop
imul
dec
insb
mov
mov
cmc
and
jmp
and
int
std
pop
andl
inc
in
cwtl
enter
fstpt
cwtl
cmovle
jge
add
add
xor
mov
sub
cmpsb
in
std
mov
and
arpl
dec
scas
dec
cltd
dec
xchg
or
lret
stos
std
jo
into
aad
cld
ret
das
cmpl
loope
pop
scas
xchg
inc
fcompl
sbb
pop
pop
les
jecxz
lock
fsubl
and
sbb
outsb
xor
pop
xor
out
mov
mov
xlat
out
arpl
adc
sub
dec
addb
mov
xchg
cmp
cmp
sti
jl
lcall
inc
xchg
shrb
hlt
and
push
mov
mov
or
mov
addl
das
pop
xchg
inc
ret
sarl
repz
pop
inc
inc
pushf
and
pop
lods
xchg
out
sbb
add
shll
mov
pushf
sbb
push
push
mov
bound
push
xchg
loope
fistpl
pop
scas
xor
dec
xor
shll
pop
imul
outsl
dec
cmp
adcl
mov
sub
xor
jecxz
adc
cmp
cmc
shll
xor
fnstsw
dec
pop
xchg
jg
adc
push
ret
dec
add
out
add
repz
stos
jne
icebp
sbb
sahf
loopne
fwait
inc
fcoml
sbb
cmpsl
sbb
mov
inc
into
leave
stc
jp
add
cmp
cs
pop
or
fwait
xchg
ret
mov
adc
xor
fldt
cmpsb
cmp
pusha
loopne
xor
cmpsb
test
iret
mov
aad
popf
inc
data16
xchg
add
and
fistps
jae
xchg
stos
in
lcall
pusha
add
mov
fldt
sti
cmc
push
xchg
and
dec
cli
sbb
popa
test
adc
jnp
in
push
cli
mov
lcall
xchg
xchg
fsubr
and
rcr
aam
dec
in
pop
and
cmc
jmp
jle
cmp
or
inc
rcll
lds
imul
out
push
push
shll
fldz
cli
xor
loopne
mov
ds
enter
inc
jne
insb
jb
ja
adc
clc
add
or
repz
xchg
ss
sub
jecxz
or
fwait
out
adc
in
cmp
mov
jnp
shll
sub
adc
sub
rcrb
bound
lret
lods
aam
add
cmpsb
lock
inc
sub
call
push
fidivrl
add
mov
int3
mov
in
pop
loope
mov
push
popa
pushf
jnp
sub
pop
aaa
mov
je
mull
pop
mov
das
xchg
addr16
inc
mov
push
test
jb
xor
std
sub
in
in
out
pushf
cld
mov
daa
xor
ds
lret
dec
imul
mov
pop
or
iret
pop
pusha
fs
jbe
mov
or
in
xor
pop
jns
fwait
and
sub
movsl
cmpb
push
dec
mov
mov
push
testl
push
test
rorl
mov
dec
sbb
push
pop
lock
dec
add
mov
push
mov
jp
nop
mov
std
jbe
ja,pn
in
pop
iret
and
popf
inc
sub
add
mov
rol
xor
pop
and
lret
insl
jp
call
or
bound
out
fcmovne
add
pop
inc
neg
pop
ret
js
sti
dec
or
pop
stc
cmp
xchg
cmp
leave
iret
testl
adc
ja
cltd
loop
loope
insb
in
fcompl
sar
loopne
add
fdivr
sbb
xor
je
or
inc
inc
std
push
call
xchg
lods
mov
jge
pop
lret
inc
ret
mov
jg
sahf
push
adc
ds
cmpsl
xlat
insb
out
loopne
lss
imul
xlat
mov
inc
and
pop
jl
les
sahf
lock
stos
mov
xchg
js
ljmp
sti
cmp
ret
cmp
cltd
fmuls
sub
push
sbb
dec
mov
leave
jnp
and
xchg
cwtl
mov
xchg
repz
lods
xor
mov
mov
daa
or
mov
gs
lods
add
ja
sti
mov
lret
out
ficomps
mov
les
lcall
sub
fists
mov
stc
cmp
cmc
scas
scas
and
stos
movsb
lret
lea
or
shlb
in
xor
clc
out
in
clc
pop
push
cltd
and
call
inc
ret
icebp
iret
xor
fstl
cmp
mov
xchg
adc
xchg
xor
mov
adc
xor
mulb
jno
lock
jecxz
out
stc
dec
push
imul
in
xchg
in
pop
js
hlt
ljmp
xchg
jno
hlt
add
pop
shrb
add
lcall
popa
loop
ja
pop
xlat
add
dec
lret
jmp
dec
pop
and
dec
ja
ss
inc
or
jmp
test
adc
into
addr16
jmp
mov
cli
fcoml
das
test
into
xor
xchg
insb
ljmp
arpl
repz
push
jbe
int
pop
push
jle
dec
jns
mov
mov
ds
aaa
fstpt
divl
lcall
and
or
adc
lcall
data16
fucomip
inc
push
xchg
fcomps
popf
jb
inc
jmp
lahf
ljmp
in
scas
and
inc
push
mov
mov
fcomps
xor
pop
cld
mov
push
mov
xchg
jmp
xchg
popf
mov
jle
fistpll
mov
or
sub
loop
dec
dec
ret
pop
add
mov
mov
push
xchg
xor
cmp
bnd
push
cld
push
nop
fs
leave
dec
mov
pop
sub
adc
movsb
mov
cmpsb
fs
fcomp
idivl
push
jecxz
arpl
cmp
sub
ret
js
mov
imul
lods
cmp
and
addl
les
dec
push
xchg
neg
in
push
addr16
mov
sub
or
push
jno
or
mov
enter
jle
xor
notb
inc
jp
lcall
xchg
and
cmp
repz
sub
sarb
adc
mov
cmpsl
jne
repnz
sahf
fwait
stos
data16
mov
mov
add
and
fsubs
gs
subl
adc
out
scas
inc
pushf
jle
pop
xorb
sbb
pop
pop
xchg
stos
test
or
jbe
outsl
repz
sub
inc
fisubrl
jo
pop
fnstcw
pop
mov
xchg
dec
xchg
outsl
insb
xchg
aaa
pop
pop
lods
pop
mov
dec
fs
leave
loopne
dec
mov
cld
sbb
mov
loope
pushf
popa
pop
mov
adc
mov
inc
cmpsl
mov
int3
lret
and
in
mov
dec
inc
pop
shrl
out
jp
and
xlat
in
or
pop
add
rcl
add
in
sahf
cmpsl
daa
mov
push
mov
mov
inc
ljmp
test
or
insb
cmp
xor
xchg
shll
arpl
jp
test
int3
test
pushf
lahf
cmpsl
dec
jmp
and
inc
popl
orl
push
inc
mov
xchg
mov
pop
add
pop
lcall
inc
pop
push
in
addr16
out
loopne
lahf
arpl
repnz
repnz
hlt
loop
lock
push
fiaddl
in
mov
lods
push
nop
call
paddw
shr
cltd
loope
outsl
sbb
jbe
pop
das
pop
shrl
cmp
lahf
imul
sbb
push
fildl
aad
cmp
xor
stos
xor
inc
outsb
inc
inc
cli
adc
dec
das
rclb
push
outsl
sub
xor
repnz
sbb
or
icebp
je
outsl
add
sbb
lret
inc
mov
push
fsubrs
jno
jge
insl
sbb
add
add
bound
es
mov
lock
stos
fcomi
adc
test
push
add
mov
mov
mov
adc
cli
jne
pop
xchg
or
pop
ja
in
aad
popf
loope
mov
out
cmp
and
jecxz
test
mov
mov
push
or
pop
jmp
mov
cmpsl
test
out
jp
push
clc
test
mov
fists
sbb
xchg
mov
adc
or
mov
adc
mov
push
jnp
xchg
mov
cmpsb
insl
inc
cli
movl
or
out
cli
sahf
mov
xchg
mov
mov
add
xor
sahf
test
push
addr16
repz
push
popf
pushf
stos
xlat
mov
out
sub
loopne
dec
push
mov
adc
test
xor
fsts
cltd
inc
xor
jg
dec
int3
add
push
inc
leave
push
shlb
rcrb
sub
pop
out
stc
in
mov
in
jmp
jbe
add
mov
jge
and
xchg
add
pop
and
fcoml
and
mov
or
or
repz
jae
hlt
mov
stos
enter
rol
xor
popf
jp
shld
movb
out
add
js
ret
jle
inc
push
cs
jp
icebp
test
shl
js
addr16
js
push
outsb
jle
sahf
stc
sbb
cwtl
int3
push
loope
stc
ficomps
mov
sti
cmp
in
test
fprem1
or
adc
mov
push
es
xor
sahf
add
sbb
dec
jge
jnp,pt
or
loope
test
shll
mov
push
movsb
imul
push
fadd
lcall
pop
cwtl
add
lea
fldt
rol
cwtl
adc
add
test
repz
lret
or
sbb
rorb
or
dec
pop
test
mov
push
push
xor
insb
bound
jl
mull
dec
pop
outsb
jno
cmp
ficoms
add
dec
mov
dec
mov
fcoms
movb
aas
xchg
jge
cmp
loopne
fisttpll
sbb
jp
arpl
bound
rorb
pop
xchg
in
xor
jge
out
iret
shrl
mov
push
adc
xchg
repnz
adc
sub
jmp
or
dec
mov
push
adc
stc
dec
cmc
xchg
fdivrp
cltd
dec
jp
insb
fildl
imulb
in
or
sarw
jle
jns
mov
sarl
lcall
aaa
mov
cmc
sarl
xchg
pusha
xor
mov
lods
pop
ficoms
and
pop
xchg
negl
mov
xchg
roll
dec
and
adc
inc
mov
pop
pop
lods
or
pop
mov
cmpsb
out
sbb
jne
jge
adc
enter
lahf
add
push
push
sbb
enter
mov
pop
dec
outsb
mov
dec
data16
sub
dec
sti
push
lock
dec
cmp
mov
call
ljmp
push
cmc
sbb
fldl
mov
mov
xlat
pop
pop
push
mov
xor
ljmp
dec
std
lock
jl
fadd
ss
cmc
rcr
pop
cmpsb
sbb
mov
mov
pop
xor
xchg
mov
push
cmp
aam
mov
cltd
sbb
xor
mov
cmpsb
mov
fdivp
cmp
loope
sub
sub
cmp
ret
stos
xchg
cmp
cmpsb
jg
push
dec
jnp
gs
jbe
sub
scas
imul
adc
nop
xchg
mov
sbb
push
js
lea
push
mov
insl
lock
lods
inc
in
pushf
in
cs
lea
cmp
push
adc
lods
jecxz
test
in
or
xchg
sub
pop
jp
std
mov
and
fisubrl
sbb
adc
jle
ja
ljmp
and
movsl
cmp
pushf
movhps
pop
test
mov
add
cmpsb
scas
mov
jge
adc
inc
sub
lret
xchg
popf
scas
in
push
inc
in
scas
jno
mov
cltd
pop
xchg
je
adc
jmp
or
push
add
loopne
filds
pop
mov
sub
pop
adc
fwait
arpl
loop
or
xor
inc
jmp
arpl
push
in
xchg
and
mov
movhps
mov
jae
jo
out
jne
sbb
jns
mov
pop
xchg
or
mov
xchg
movlps
fldl
jge
or
or
sbb
shrl
fwait
push
ret
mov
out
xor
iret
xor
loop
lods
sbb
push
cmc
pop
int3
push
sbb
adc
daa
movsb
mov
fwait
sbb
ret
pusha
cmpsb
leave
dec
movl
in
int
cltd
cmc
cmp
xchg
js
lret
dec
cmp
mov
insl
mov
inc
sbb
repz
dec
lods
sbb
xchg
pop
mov
in
popa
push
stos
mov
into
nop
rcrl
mov
sub
hlt
dec
addl
mov
xchg
fistl
lcall
pop
ret
arpl
xor
mov
xchg
push
repz
inc
sub
cmp
in
mov
scas
test
lds
aam
ficoms
mov
ljmp
es
pop
cmc
push
cmp
sbb
mov
bound
outsl
das
fucomip
js
cmpl
sub
repz
xor
cmp
in
mov
mov
insl
mov
ds
add
sbb
call
cld
sbb
pop
pop
pop
mov
pop
pushf
push
fwait
or
sbb
ds
push
repz
push
cs
push
xor
mov
or
jne
jne
add
fistpll
cmp
xlat
not
mov
lea
int
pop
jmp
cmc
xor
or
lret
push
movb
dec
iret
mov
xchg
dec
aad
xchg
lods
mov
loop
mov
xchg
and
mov
xor
ds
cmpsb
mov
sub
shrl
jns
dec
cmc
in
cmp
fs
stos
push
adc
or
or
push
add
mov
bound
jle
inc
cwtl
jb
clc
sub
xchg
push
push
scas
stos
push
xchg
add
and
xchg
out
mov
jge
lea
lods
dec
stos
pushf
pop
outsb
xor
bound
fcoms
popa
fwait
clc
outsw
or
xchg
sbb
pop
cmc
aas
push
ds
xchg
fmul
aad
lcall
mov
adc
sbb
js
xchg
dec
call
dec
or
fs
push
notb
mov
push
push
lahf
xor
or
xchg
bound
pop
out
shlb
test
mov
cli
repnz
bound
and
push
push
ds
lahf
pop
push
ljmp
mov
adc
push
lret
push
mov
jg
int3
dec
iret
enter
adc
or
sbb
xchg
iret
xorl
fsubr
movl
divps
lret
sub
push
pop
or
imull
jle
into
and
shl
gs
inc
filds
mov
or
and
add
fdivl
cmp
or
jo
xchg
pop
test
mov
push
add
mov
rorl
mov
dec
or
mov
or
fstp
add
int3
add
mov
jne
pushf
sbb
into
int
push
nop
lret
ljmp
adc
call
lea
mov
and
or
out
lods
lea
pop
pop
ret
fstps
dec
into
das
stc
pop
fwait
pusha
imulb
inc
int
jb
pop
pop
out
pop
pop
in
pop
testl
cltd
sbb
imul
in
add
sbb
jg
icebp
scas
inc
xchg
scas
ja
iret
add
push
aam
bound
cs
mov
fs
aad
pop
in
adc
push
out
inc
out
jns
adc
push
jnp
test
xchg
dec
in
leave
add
lcall
imul
push
cmp
je
xlat
into
fdivrl
in
cmpsb
mov
mov
lods
imul
push
dec
mull
ret
pop
test
xchg
xlat
sub
push
cmp
sub
mov
out
movsl
ljmp
and
push
cmp
or
jmp
fwait
pop
add
jge
in
sbb
push
cmpsl
fildll
inc
mov
jmp
mov
or
jl
add
pusha
inc
mov
les
lahf
dec
rolb
cmp
dec
cwtl
movsl
shlb
jecxz
jmp
arpl
in
lret
es
sbb
aaa
jae
shlb
sub
std
ja
pop
icebp
nop
mov
mov
mov
jmp
mov
es
push
fisttpl
stc
ret
push
sbb
hlt
movsb
dec
cmc
sbbl
cli
aas
in
adc
mov
setge
xor
outsb
mov
xchg
mov
outsl
in
or
sbb
push
outsb
push
fdivs
sbb
mov
addb
ss
pop
ljmp
lock
inc
xchg
popf
lret
jle
or
leave
sbb
xchg
icebp
imul
xchg
fidivrl
ljmp
outsl
out
dec
jg
jb
pop
fs
jno
lcall
in
in
mov
fsubs
inc
or
ds
add
sub
jl
mov
adc
movsb
sub
pop
hlt
in
cmpsb
dec
cmpsb
push
lods
inc
pop
test
pop
insl
leave
outsl
mov
jg
add
test
sub
mov
lret
je
mov
mov
pop
mov
ja
pushf
jl
aas
repz
pop
sub
sub
fnsave
pop
push
dec
sbb
cmpsb
mov
cmpsb
rol
push
mov
into
rorl
imul
popf
cmp
in
mov
xor
xor
inc
es
inc
pinsrw
sub
pop
vmovups
repnz
jno
push
xchg
mov
je
pop
dec
inc
or
inc
andb
add
jbe
inc
divl
push
fldlg2
cmpsb
loopne
loop
jmp
sarl
sti
xchg
ljmp
test
adc
ficompl
daa
cmp
jnp
test
leave
xchg
das
pop
add
cmp
jns
add
sub
test
mov
sub
push
and
inc
xchg
lcall
sbb
cmp
in
outsl
ret
jo
popa
push
lea
jb
scas
adc
int
imul
pop
xor
movsb
push
mov
insb
or
mov
cmpsb
iret
and
hlt
sbb
pop
daa
add
sbb
push
enter
xchg
ret
cwtl
int
mov
sub
fstp
inc
mov
rcrb
shrl
mov
inc
jns
test
adc
insl
icebp
dec
cmp
push
sbb
cltd
out
scas
cwtl
jmp
pop
sar
mov
pop
or
pop
ret
pop
fisubrl
imul
and
rcrb
gs
call
in
ljmp
sbb
addb
xor
xchg
loope
ds
mov
movsl
loop
push
les
movsb
aas
lret
mov
jae
dec
mov
sub
cmp
cmpb
xor
add
mov
push
or
push
ss
leave
int
pop
scas
dec
scas
or
lret
nop
xchg
jae
xor
fimull
sbb
insl
das
mov
mov
test
dec
out
adc
shl
push
push
xchg
fwait
mov
cwtl
ret
fmulp
movl
fcoms
idivl
les
push
mov
xor
stc
mov
sub
add
lahf
ret
add
arpl
ja
pop
fucompp
sbb
mov
call
leave
jg
out
sbb
sbb
pop
mov
rcll
sbb
orb
and
cmc
das
repz
jno
xchg
adc
mov
jle
into
mov
popf
pavgw
mov
mov
lret
push
leave
iret
jo
incl
addr16
jge
shrl
mov
out
sbb
fs
int
adc
xor
stos
push
mov
outsl
inc
inc
icebp
sub
mov
adc
jp
mov
push
cmc
jbe
mov
jbe
cmc
inc
mov
movsb
pop
popa
cmp
test
jl
dec
andb
ret
dec
popa
adc
clc
mov
xchg
cmp
sub
lret
push
outsl
cmp
ret
xor
push
mov
dec
out
rcll
notb
cmp
inc
pop
sub
add
pusha
inc
mov
pop
and
pushf
mov
jb
and
setnp
call
add
imul
psubw
inc
mov
adc
scas
xor
subb
insl
adc
jecxz
pop
aad
or
xchg
test
loopne
mov
pop
shrl
rcrl
or
jle
mov
adc
adc
xchg
lret
mov
int
cmpsl
pop
dec
adc
dec
push
cmpsl
out
cmpsl
mov
shlb
and
sub
fildll
mov
cmp
insl
notl
cmp
mov
aas
dec
mov
jns
mov
and
mov
xchg
jcxz
inc
cmpsl
js
in
mov
gs
in
jbe
rorb
pop
or
xchg
int
xor
xchg
xor
jg
add
sub
push
push
xchg
imul
mov
dec
in
cmpsb
outsl
inc
sbb
push
xor
notb
sub
mov
inc
clc
mov
dec
mov
cmpsl
adc
pop
xchg
aas
dec
lret
xchg
loope
fcompl
cmp
mov
sbb
pop
add
or
mov
pop
sbb
test
jp
sbb
mov
scas
or
rcrl
add
imul
cltd
ja
add
in
lahf
xlat
cmp
ljmp
out
daa
sbb
cmp
jnp
popa
sbb
push
push
cmpsl
test
lcall
lods
out
pop
adc
mov
and
lods
sbb
aam
icebp
jmp
dec
xchg
ret
pop
cld
sti
jbe
sbbb
test
xor
jnp
subl
notb
loop
cmp
pop
sbb
mov
cmp
and
adc
shrl
sbb
pop
repz
je
outsb
inc
dec
mov
and
push
push
jg
ds
xchg
adc
dec
arpl
xchg
iret
cmp
cmc
repnz
movl
mov
jmp
cmp
aas
sub
cmpsl
movsl
jmp
inc
lret
sbb
add
movsb
or
iret
jns
xlat
shlb
cmp
enter
mov
daa
and
pop
inc
repz
mov
cmp
rorb
imul
inc
jmp
daa
int
imul
icebp
xor
shrl
push
scas
add
adc
inc
cmp
or
xchg
or
dec
shrl
hlt
or
mov
daa
pop
mov
movsl
sub
dec
cmpsl
jbe
imul
jge
mov
sbb
pop
data16
xor
dec
shl
pop
xchg
push
mov
leave
iret
imul
lahf
pop
jecxz
arpl
mov
jae
jmp
sbb
xor
xor
cmp
xor
outsl
pop
shr
das
jnp
pusha
ja
insl
push
sub
stos
xor
dec
aaa
data16
sti
push
pop
sbb
pop
push
and
dec
jno
push
adc
lahf
sti
mov
and
sbb
and
xchg
std
outsl
mov
inc
inc
dec
jb
insb
mov
jmp
daa
cmp
ljmp
jo
push
ja
mov
and
test
cmp
movsb
test
or
lock
cli
popa
stos
lea
adc
xor
and
pusha
pushf
fidivs
adc
mov
scas
icebp
fucomi
cmp
or
cmp
inc
inc
fcmovu
dec
int3
jg
inc
sbb
orl
int
les
in
xchg
cmp
push
mov
sbb
mov
or
mov
jo
add
and
jle
mov
add
cltd
aad
jge
mov
arpl
scas
lock
outsb
stc
arpl
push
out
xchg
cwtl
jae
test
and
push
mov
inc
pop
iret
xchg
lods
lret
inc
sub
sbb
xor
or
jl
xor
hlt
mov
ss
inc
out
cli
push
inc
jle
cmp
mov
out
and
xchg
add
mov
ss
aad
jns
dec
adc
jge
push
cmp
xor
inc
cmp
shlb
adc
inc
popf
imul
loopne
mov
and
and
es
arpl
dec
jae
dec
dec
push
jmp
mov
inc
inc
rcll
in
pop
mov
jnp
fdivrl
xchg
jl
or
jb
stos
test
jnp
call
out
xchg
gs
mov
jnp
sbb
pop
les
clc
push
dec
cmp
mov
dec
mov
sub
xchg
pop
inc
rol
es
lret
add
push
cltd
mov
fdivs
or
xchg
add
sbb
mov
sbb
out
ficoms
ja
and
iret
lock
jmp
mov
ret
pop
outsb
jp
fnstcw
xchg
mov
add
dec
push
lret
and
out
outsl
ds
mov
mov
test
out
push
int
gs
pop
add
push
xchg
leave
jecxz
xor
inc
pop
cmpsb
pop
xchg
inc
jl
test
cld
imul
repz
ret
jne
lods
repz
mov
pusha
add
cwtl
mov
push
pop
icebp
out
pop
fcoml
decb
mov
hlt
daa
out
aaa
push
inc
daa
ja
sbb
mov
or
outsl
jp
dec
adc
mov
mov
push
cmp
or
adc
lds
out
pushf
stos
inc
rclb
testl
adc
fildl
and
out
cltd
and
cmp
and
aam
jne
and
into
addr16
std
int3
ja
roll
jmp
lahf
cmovl
mov
push
lea
scas
in
insl
adc
loopne
jecxz
inc
popf
popa
dec
and
and
subl
cli
lods
daa
or
sub
inc
sub
in
push
ja
jo
pop
dec
aas
into
add
cmpsl
push
adc
loop
sbb
inc
xchg
jnp
or
push
mov
push
shlb
dec
iret
sbb
jns
dec
lahf
iret
mov
insb
pushl
pop
call
jl
clc
push
add
shll
xor
or
ret
add
jno
mov
dec
mov
fstpt
loopne
bound
dec
shl
orl
xchg
mov
dec
loope
cmp
cltd
adc
pushaw
pop
pushf
sbb
jecxz
dec
pusha
mov
movsb
fs
outsl
adc
xor
jae
shr
lret
inc
mov
in
cltd
std
popa
aam
jg
dec
push
scas
data16
push
pop
and
jns
xchg
sub
jbe
loope
repnz
aad
adc
fs
add
popf
push
or
sahf
xchg
faddp
jg
testl
add
pop
lea
mov
xchg
add
fldl
cmp
xchg
adc
test
in
cmc
inc
sbb
sbb
shl
fstpt
testl
jbe
or
add
movsb
jp
xchg
or
cmpsl
xchg
sbb
shrl
adc
outsb
sub
ret
adc
adc
lcall
cmpsb
sub
leave
cltd
es
lock
imul
mov
cli
cmp
dec
int3
ss
jnp
push
and
nop
cmp
xchg
mov
lea
aaa
mov
add
add
pop
ja
push
cld
mov
or
inc
or
fildll
sub
inc
insl
add
repnz
dec
xchg
xchg
pop
or
xchg
or
mov
scas
push
xchg
jns
cltd
push
sbb
insb
dec
mov
loope
mov
or
add
mov
lea
xor
pop
mov
rcr
mov
js
pop
insl
pop
in
lds
add
movsb
lret
lret
movsb
inc
pop
push
jae
inc
js
and
or
nop
out
roll
cmp
orl
call
cmp
hlt
or
sbb
mov
mov
ret
or
nop
inc
popf
sub
or
daa
les
xor
cmpsl
insb
push
cmp
jmp
insb
sub
jle
jns
inc
jo
cmp
div
mov
sub
adc
pop
jmp
mov
jb
or
jne
jg
aam
lock
push
test
addr16
fisubrl
and
call
fiadds
mov
popa
leave
add
leave
jl
fistps
mov
int3
into
into
subb
loope
je
xor
pop
jnp
das
je
popa
xchg
cs
jp
pop
cmp
or
mov
xor
out
jl
mov
lea
mov
push
ljmp
jmp
loope
popf
mov
data16
push
xor
and
mov
pop
push
cltd
xor
or
dec
jb
xchg
outsb
sahf
mov
sub
jle
adc
les
lret
xor
xor
mov
icebp
outsl
cli
cmc
mov
lcall
mov
jb
or
push
aas
and
pop
jb
add
xor
fisubrl
cmp
cmp
push
int3
adc
ds
jbe
rorl
cli
cmpsl
fiaddl
mov
or
add
inc
mov
repz
inc
loopne
loop
mov
scas
arpl
xor
jo
stc
stos
fidivrs
mov
lahf
inc
mov
cwtl
aaa
ds
lds
push
xor
inc
xchg
in
xor
push
lea
mov
inc
in
inc
adc
leave
jmp
adc
push
daa
aad
cmp
mov
sbb
or
mov
test
lcall
sti
dec
popf
sahf
sbb
shll
cmp
in
leave
sbb
xchg
mov
and
enter
ret
loopne
std
jbe
setb
lds
jg
mov
mov
jns
std
push
ljmp
push
cmp
aaa
cmp
mov
pusha
jne
into
push
test
lock
fcom
notb
pop
aam
dec
xor
imul
pusha
pop
adc
stc
popa
cmp
outsb
loop
lret
adc
or
xorb
pop
xchg
shrb
pop
xor
movntq
lods
je
out
add
jbe
jp
fsubs
dec
rcll
jns
sarb
add
pop
int
lcall
imul
in
rcr
fidivrs
outsl
lret
jne
xor
in
mov
push
in
dec
fstl
mov
inc
aad
gs
and
lcall
les
sub
jbe
push
push
outsb
add
fcoml
sarb
dec
jnp
movsb
ja
cmp
ret
shlb
inc
leave
dec
push
jne
rcrb
jge
pop
cmp
jo
or
xor
dec
dec
mov
push
stos
sahf
vsqrtsd
outsb
push
jne
stos
mov
mov
pop
jbe
das
dec
lods
mov
imul
mov
ret
popf
movsl
test
mov
or
je
cmpsl
insl
push
xor
test
sub
pop
enter
cmp
jnp
sbb
sub
push
scas
sub
in
pop
jb
dec
jmp
mov
fimull
out
push
jp
mov
shll
mov
shl
jo
shrb
out
rol
cli
xchg
data16
dec
int
movsl
gs
cmc
ds
imul
leave
xor
mov
fnstenv
xor
adc
lds
sub
push
test
jg
pop
cmp
mov
mov
cmpsb
xor
addr16
mov
xchg
push
test
in
inc
and
imul
xor
mov
js
aam
into
outsl
enter
outsl
jmp
inc
rclb
cmp
cmpsb
mov
pushf
dec
ss
dec
jbe
out
adc
lcall
aad
mov
ljmp
inc
mov
mov
scas
cmp
icebp
insl
imul
mov
pusha
in
and
jns
dec
dec
mov
cltd
jo
aaa
or
xchg
clc
add
lea
mov
lds
mov
out
xor
in
fcmove
pop
lds
repnz
pushf
inc
inc
sbb
iret
mov
push
jecxz
mov
mov
xor
fisttpl
stos
adc
push
fildl
fistps
test
out
sbb
into
aam
jo
jg
jge
cmp
das
sub
xor
in
cli
cmpsb
jg
je
fwait
jo
mov
test
adc
cltd
xor
aaa
ficoms
add
outsl
cmp
out
in
in
and
xchg
ficompl
dec
xchg
and
pop
jb,pn
jg
mov
xchg
jmp
in
mov
stos
shl
rcl
jl
lds
push
and
stos
cmp
dec
xchg
popf
pop
daa
dec
negl
mov
in
imul
xor
push
add
jo
mov
or
aam
or
adc
inc
test
pushf
sbb
negb
ds
enter
lds
sub
fstps
or
inc
mov
pop
lcall
ljmp
adc
mov
xchg
jp
sbbb
in
push
jecxz
jle
incb
xlat
icebp
xchg
enter
int3
xbegin
xchg
jmp
ret
jae
aas
xchg
mov
mov
cmpb
mov
mov
mov
sub
add
outsl
scas
xchg
mov
pop
leave
pushf
scas
and
mov
jecxz
repz
jle
cs
es
fnstenv
outsl
fcmovnbe
push
mov
imul
lods
test
jno
cli
pop
dec
xor
pusha
and
insl
add
add
ret
into
imul
pop
pop
add
mov
clc
js
cmp
push
cmp
out
sub
jne
xor
test
movsb
adc
xor
xor
sbb
orb
mov
iret
gs
push
jo
push
mov
shr
aam
cmp
jl
arpl
xchg
add
push
mov
pop
out
cltd
leave
or
or
scas
pop
outsl
add
ljmp
cmp
cltd
and
cmc
sbb
xchg
gs
lret
sbb
dec
push
in
cmp
jo
pop
mov
add
or
sar
movsl
cld
mov
shl
es
pop
add
loope
and
mov
mov
cld
xchg
mov
sbb
inc
xor
push
or
inc
cld
jbe
pop
cltd
iret
fstl
loop
xchg
test
ljmp
xchg
jbe
rclb
or
adc
cltd
mov
jae
xchg
push
add
stos
lock
cwtl
enter
fcmovb
leave
repz
daa
dec
in
mov
lods
mov
adcl
lock
mov
adc
mov
inc
in
out
sahf
or
add
rcl
add
push
cmpsl
aaa
pop
xchg
daa
mov
scas
shll
pop
mov
aaa
xchg
or
ret
into
jns
and
scas
push
mov
xchg
dec
and
push
mov
sti
out
pop
rcrb
mov
sub
inc
mov
or
mov
add
xchg
jp
mov
dec
sub
cmpsl
fnstenv
pusha
cmc
xchg
inc
insl
aad
inc
mov
cld
loope
xchg
rcrl
adc
xor
or
mov
notb
insl
out
jnp
and
test
cmpsb
call
mov
ss
leave
mov
js
sbb
mov
push
push
push
dec
lods
outsl
xchg
lret
lds
call
cli
pusha
and
xchg
or
aas
mov
xor
jp
or
push
jno
ds
lcall
fs
sbb
sub
out
fwait
xor
insb
out
xchg
sub
add
lods
subb
in
loope
ljmp
insb
mov
data16
or
aas
dec
pop
jge
xchg
lret
movsl
jmp
xchg
je
pop
dec
lock
jecxz
fistpll
jl
mov
dec
xor
scas
fucomp
ret
jge
jge
pop
aas
addr16
repnz
or
movsb
and
dec
mov
jb
jb
xchg
dec
out
bound
mov
pop
call
sarb
psubd
inc
inc
outsl
stos
leave
out
cli
pop
cmp
test
scas
sub
fcomip
sub
int3
add
stos
jp
aas
cmp
inc
and
test
xor
push
dec
movsl
dec
dec
out
mov
mov
rcrb
fistl
das
push
jae
mov
aaa
ds
jle
xor
fimuls
ljmp
mov
pop
imul
jne
dec
in
jmp
fs
xor
mov
inc
jns
xor
push
jecxz
insb
pusha
sub
rcrb
and
inc
jns,pn
int3
push
aad
push
xchg
lds
out
mov
iret
push
sahf
mov
outsb
add
or
fstl
andb
icebp
xor
repnz
push
xor
cmc
cmpxchg
insl
mov
in
dec
filds
xor
loop
mov
aad
sbb
adc
ret
xchg
std
imul
mov
in
dec
insl
push
or
pop
repnz
aad
xor
cmp
pop
scas
jb
cmp
pop
pusha
or
dec
jl
rcrb
lcall
mov
mov
or
test
sbb
lds
mov
mov
add
pop
imul
xor
call
adc
lods
pop
jnp
push
out
cmpsb
xor
and
inc
jns
pop
test
push
or
dec
add
push
sbb
pop
mov
repnz
sti
mov
out
imul
or
add
mov
jbe
daa
cmp
sub
fstl
add
mov
or
xchg
shr
int
mov
push
dec
pop
shlb
xor
or
popa
mov
psllq
and
push
xor
cmc
dec
out
jl
call
cmp
mov
notb
or
sbb
add
push
push
jle
inc
sub
push
leave
cmp
or
out
aas
call
cmp
mov
xor
push
pop
inc
mov
jl
pushf
mov
xor
mov
mov
jbe
mov
nop
cmc
mov
cld
mov
push
jmp
popf
mov
push
jp
sub
shrb
mov
inc
test
jecxz
inc
sub
into
inc
inc
cld
stos
fsubl
call
int
push
mov
fnsave
movsb
or
jmp
mov
jae
aaa
imul
jae
and
mov
cmp
xor
inc
aaa
lret
add
sbb
or
mov
inc
stc
int
dec
cmpsb
jae
jae
dec
sub
lret
pop
dec
mov
jecxz
in
orl
pop
jns
cmp
bndstx
jo
sub
lret
adc
jne
ficompl
mov
push
cmp
pop
dec
mov
cmpsb
out
jae
mov
or
stos
cmp
xchg
add
lock
ss
jno
pop
xor
xor
fisttpll
push
cmp
outsl
mov
mov
xchg
lods
inc
cmpsl
mov
sub
enter
push
add
mov
cmp
das
dec
adc
mov
cmp
hlt
sahf
pop
pop
int3
fabs
mov
mov
or
decl
push
push
push
mov
lret
sub
sub
jnp
int3
xor
xchg
jge
scas
pop
xchg
out
mov
push
icebp
mov
negl
jae
cwtl
push
mov
popa
inc
xchg
dec
lret
aaa
lcall
jno
cmp
mov
mov
sbb
shrd
dec
mov
shl
into
insl
jp
adc
std
leave
lret
data16
jg
andb
daa
std
or
add
repnz
cltd
adc
dec
cmpsb
mov
dec
mov
or
int
or
add
mov
push
bnd
inc
xor
fwait
push
dec
sbb
and
jno
pushf
mov
cmp
dec
xchg
in
cmovae
and
mov
enter
fdivrl
subl
lods
shll
lock
jge
sub
inc
leave
pop
mov
mov
pop
sub
imul
mov
addr16
hlt
and
dec
push
and
or
cmp
sbb
push
and
inc
stos
insl
imul
cwtl
sbbl
pusha
mov
shrl
es
in
sbb
ja
or
and
jnp
xchg
jo
bound
sub
cld
adc
push
sbb
lods
xchg
sub
stos
lock
les
and
fcoml
xchg
or
pop
movaps
test
das
push
outsb
push
lods
xor
inc
aad
sub
pop
mov
sbb
cld
sub
and
scas
out
das
repnz
dec
fsub
dec
aas
int
sub
cmp
or
cmp
sub
mov
cmp
sub
sbb
out
bound
pop
ja
iret
out
test
inc
dec
add
inc
inc
dec
movsl
movsl
in
xchg
and
mov
cmp
rol
ljmp
xorb
pop
iret
stos
in
movsl
xor
movsb
imul
xor
and
jecxz
jne
iret
xor
jbe
bound
lret
rolb
push
xchg
pop
mov
hlt
mov
test
outsl
popa
ljmp
pop
leave
and
icebp
data16
les
mov
dec
inc
call
jae
les
in
mov
pushf
std
mov
push
add
mov
jae
cmpsl
and
inc
test
cmp
ds
arpl
aad
movsl
mov
rcll
pop
add
mov
scas
enter
adc
shll
repz
add
pop
gs
cmp
and
cld
cs
stos
fidivrl
and
in
lods
ss
sub
push
iret
je
add
sub
rcrb
jle
cmp
xlat
jno
jg
or
jbe
xlat
dec
in
xchg
rclb
mov
xor
jo
adc
jb
sub
dec
jmp
jno
adc
xor
test
ret
insl
repnz
mov
adc
xchg
xchg
iret
lret
jns
cmp
jle
xchg
lock
xor
shlb
in
scas
dec
xor
arpl
add
mov
jns
mov
aad
adc
mov
sub
sbb
lods
or
repnz
out
lds
rcr
pop
nop
sar
add
and
aam
pop
xor
sar
insl
mov
rorl
loopne
mov
xchg
jne
cld
add
ds
lahf
aam
movsb
mov
xchg
mov
subb
push
push
inc
mov
pop
add
sti
lret
pop
mov
push
xchg
adc
cmp
add
jmpw
xor
push
mov
or
mov
fidivrs
mov
cmc
jo
outsl
xor
in
mov
popf
mov
and
shlb
ret
outsl
iret
add
jle
adc
and
es
mov
cmpsb
out
jp
mov
aam
lds
fists
and
lea
leave
mov
fidivs
xor
sahf
das
jp
repnz
stos
jmp
pop
and
jne
sahf
inc
enter
scas
cmp
js
push
cltd
pusha
movsb
gs
pop
cmp
pop
mov
push
lock
cmp
rcr
insb
jp
or
scas
daa
mov
pop
iret
ja
scas
push
pushf
fildl
mov
gs
cld
scas
mov
not
and
enter
dec
mov
lods
repz
add
dec
mov
sbb
mov
clc
sbbb
out
cwtl
aam
leave
cmpl
mov
jns
mov
cmp
push
adc
and
xacquire
notb
ds
mov
jnp
stos
xchg
arpl
dec
add
add
jo
mov
cmp
mov
outsb
popl
jp
rcrl
add
mov
push
xorb
jp
sbb
addr16
shll
add
add
mov
addb
inc
sbb
jns
and
cmp
aas
push
xor
push
ficoms
lret
and
jbe
inc
cmp
and
sar
add
imul
push
jno
mov
mul
sub
daa
sbbb
mov
mov
rorl
inc
add
lahf
mov
pop
sbb
stc
or
mov
xor
lea
cmp
dec
bound
add
test
push
add
xor
jge
cmp
dec
lea
pop
fnstcw
sahf
mov
leave
nop
xchg
mov
dec
cltd
mov
sub
int
out
imul
xchg
xchg
mov
ror
mov
popf
dec
in
ret
mov
imul
divb
mov
std
mov
and
dec
adc
ds
or
gs
stc
or
sbb
dec
pop
sub
push
dec
push
inc
je
es
xchg
xlat
and
outsl
pop
mov
push
mov
push
test
leave
testb
jecxz
fimull
adc
hlt
mov
hlt
notb
cmpsl
into
sbb
leave
iret
xchg
pop
mov
mov
addl
inc
out
cmp
mov
xlat
mov
sbb
sbb
cmp
clc
jge
add
ljmp
cltd
sbb
arpl
push
shlb
dec
std
iret
lods
ds
aam
sbb
ljmp
fsub
andb
mov
dec
jne
sub
nop
adc
add
mov
cli
xchg
cmp
sahf
pop
cmp
and
push
push
xor
leave
add
cmp
std
add
add
js
fcomps
fwait
or
xlat
rorl
or
lds
js
mov
pop
outsb
fistpl
or
mov
pop
cwtl
adc
and
lcall
or
stos
scas
imul
mov
mov
and
mov
shl
inc
popf
mov
dec
lds
ror
push
or
aas
pop
loopne
loop
push
dec
inc
in
movsb
mov
adc
pop
dec
and
fnstenv
mov
dec
sbb
adc
pop
mov
adc
iret
nop
rcr
ss
divl
xor
xchg
ficoms
outsb
jge
dec
and
filds
loopne
fs
loope
push
mov
sahf
ret
ret
ljmp
xchg
lahf
adc
mov
sti
inc
lock
mov
push
insl
mov
xchg
push
fisttpll
fst
cmp
xchg
pop
mov
jmp
sub
cwtl
xor
push
insl
mov
xlat
jl
mov
jmp
pop
fwait
mov
or
push
hlt
add
mov
aaa
dec
jg
or
sarb
xor
cmp
sbb
insb
sar
mov
cld
xor
pop
aad
pushl
mov
in
pop
and
pop
ds
ss
mov
inc
fldz
cmpsb
in
popf
push
mov
sbb
xor
dec
push
jecxz
mov
shll
je
adc
arpl
inc
dec
hlt
lods
shl
cltd
outsb
xchg
pop
repz
inc
jp
inc
and
jge
repnz
cmp
movsb
xor
leave
adc
enter
dec
xchg
xchg
hlt
daa
xor
jbe
into
jl
cmp
inc
mov
gs
xchg
mov
sarl
outsl
and
aad
mov
or
jmp
mov
js
call
add
adc
inc
fcompl
dec
xor
xor
rcpps
enter
sub
das
dec
sbb
dec
int3
mov
push
sbb
mov
sub
mov
iret
inc
aas
xchg
shll
adcb
mov
and
mov
clc
pop
xor
cmp
ds
mov
negb
pop
fisubrl
mov
mov
inc
xor
aam
sbb
movsb
push
pusha
in
pop
pop
sub
lcall
inc
pop
jno
ja
imul
and
mov
jg
dec
xchg
inc
mov
lret
adc
lods
jmp
fs
jne
mov
cmpsb
mov
and
lods
imul
outsb
push
mov
push
sbb
adc
cmc
scas
mov
dec
shlb
andl
inc
and
jmp
or
inc
je
fmuls
push
movsl
xor
stos
xchg
xor
movsb
sub
in
cmpb
mov
imul
sarb
mov
popa
dec
stos
call
rorl
int3
dec
adc
subl
fists
sbb
mov
cmc
dec
aaa
push
pop
pop
and
cmp
movl
push
faddl
mov
test
repnz
ljmp
add
enter
mov
xchg
sbb
out
cmp
or
or
adc
hlt
pop
adc
hlt
ja
mov
lcall
or
sub
mov
adcl
mov
out
mov
pop
loopne
mov
xchg
icebp
mov
adc
add
popf
fisttpl
clc
mov
sub
add
jnp
fldt
fadds
xor
inc
xor
xchg
testl
stc
repz
or
rcll
ficomps
repnz
sbbl
sbb
jmp
gs
mov
dec
and
into
xchg
testl
xchg
negb
push
daa
cmp
jmp
mov
in
pop
es
jge
mov
scas
add
jno
pop
push
jnp
imul
sbb
aad
mov
lods
inc
push
xchg
dec
fwait
adc
dec
inc
jb
and
push
mov
dec
xchg
popf
sbb
out
jmp
mov
inc
or
or
xlat
je,pt
lahf
xchg
gs
mov
fwait
push
hlt
xchg
insb
mov
xchg
inc
mov
mov
mov
jp
sbb
dec
push
rolb
popa
shll
jo
or
adc
sub
shlb
das
rcll
pop
dec
jae
jecxz
cld
pop
subl
dec
out
jl
dec
xlat
cli
xchg
in
in
push
out
int3
mov
daa
sub
jae
loope
xchg
cmp
mov
jmp
sbb
add
push
stos
cmp
cltd
cmp
mov
in
or
cmp
sarb
dec
leave
int
out
push
dec
divl
fadds
xlat
xchg
aaa
rclb
or
inc
andl
into
mov
lret
je
daa
testl
lods
stos
sub
int
push
popa
push
dec
inc
adc
sti
pop
jge
pop
cmp
adcl
scas
sahf
repnz
xor
mov
pop
in
sub
aas
mov
add
sbb
sub
ficoms
push
rorb
adc
mov
mov
fdiv
lcall
shll
test
xchg
push
lock
stc
pop
adc
jns
cmp
dec
dec
mov
mov
xchg
xor
xor
jp
push
rol
push
cmp
push
add
xchg
xor
repnz
dec
inc
cmpsb
push
xchg
rolb
mov
jl
mov
pop
call
lock
pusha
cmp
and
mov
popa
jmp
push
out
push
shrb
div
pop
nop
inc
adc
bound
data16
enter
dec
nop
mov
pop
mov
sub
ret
rorb
mov
pop
mov
aas
mov
mov
sbb
aad
sub
sbb
and
push
sub
pop
xchg
mov
outsb
and
lret
lcall
xor
lock
es
jne
xchg
into
mov
sbb
in
fwait
shlb
out
adc
sub
cmp
inc
imul
inc
es
mov
fldl
test
ret
ret
out
sub
push
ss
xchg
add
sub
vcvttps2udq
mov
cli
lahf
adc
and
dec
repnz
push
cmp
data16
int3
bound
cltd
outsb
push
fcmove
sbb
mov
or
aas
lea
stc
push
push
dec
fstps
rol
call
push
cmc
in
pop
fcoml
sub
js
push
dec
add
fwait
insl
cmp
push
std
cmpsl
cmpb
push
mov
cli
cmp
addr16
xor
idiv
test
cmp
inc
sbb
loopne
push
mov
hlt
xchg
inc
iret
orb
and
mov
dec
iret
or
sub
and
movsb
xor
mov
mov
push
jle
fbld
mov
shll
or
ljmp
loop
xor
cld
enter
fbstp
nop
stc
cmp
mov
lods
movsl
mov
push
push
xchg
es
add
mov
inc
jns
fwait
in
pop
pop
fwait
or
mov
movsl
sub
mov
call
dec
das
inc
or
enter
cmp
cmp
lock
mov
popa
cltd
lods
lock
dec
in
test
sub
xor
in
pop
in
mov
push
je
aam
cmp
adc
pop
sub
cltd
xlat
jbe
and
ljmp
divl
negl
decl
aas
shlw
mov
jmp
imul
jmp
sbb
xor
subl
xchg
lea
dec
jle
sub
xchg
scas
outsb
xchg
adc
add
push
jecxz
leave
hlt
fs
aas
cld
fnstcw
cwtl
outsb
dec
pop
dec
out
jo
sub
push
fiaddl
sbb
inc
and
adc
sub
mov
mov
scas
popa
mov
push
je
mov
mov
les
xchg
lock
scas
push
mov
int
popa
and
sbb
lret
sbb
fstpt
in
and
das
sub
mov
push
aam
dec
imul
subl
sbb
inc
add
test
dec
pop
cmc
out
mov
pop
mov
test
ret
sbb
push
ret
movsb
inc
mov
pop
test
addr16
clc
or
cmp
pop
fwait
mov
fwait
inc
aad
pop
jmp
fisttpll
lcall
xlat
add
jbe
xchg
xor
data16
xchg
js
sbb
cmp
jae
or
inc
xor
shrb
lret
pop
sub
sti
cmpsl
shll
or
ja
xor
mov
in
leave
cmc
mov
aas
fstps
mov
loope
xor
push
and
adc
push
gs
jbe
shrb
ss
mov
jmp
pop
xchg
cld
pop
mov
xchg
loope
scas
inc
push
iret
bound
hlt
sub
inc
ret
popf
mov
mov
mov
dec
or
aam
mov
and
rorb
scas
mov
frstor
ljmp
add
mov
cmp
cltd
cli
movsl
clc
lcall
mov
sub
aaa
push
scas
pushf
leave
pop
mov
ss
cmp
mov
mov
jge
pop
fs
rol
in
sub
add
push
movsb
sbb
and
out
cmpsb
int
dec
xor
jnp
jns
mov
xchg
dec
es
mov
cltd
ljmp
jmp
mov
xchg
mov
pop
push
pop
pushf
sub
dec
jge
pop
ret
test
xchg
sub
push
and
pop
xchg
lea
add
scas
mov
cs
leave
daa
mov
add
test
pushf
mov
xchg
ljmp
cld
adc
std
fdivs
jno
mov
xor
nop
jmp
ljmp
faddp
and
addb
scas
daa
mov
adc
push
lcall
adc
pop
out
lcall
adc
sbb
mov
dec
rorl
dec
cmp
xchg
inc
lds
ljmp
push
popf
iret
or
push
sbb
rcrb
out
mov
negl
push
and
sbb
mov
xchg
adc
ja
cmp
pop
cs
xor
insb
outsl
filds
mov
out
cld
lcall
movsl
jl
inc
add
cmpsb
fcoms
ret
push
pop
and
loop
pop
pop
push
fsubs
xchg
test
cmpsl
in
inc
jae
mov
sti
xchg
or
xor
in
mov
sub
les
and
push
push
test
std
xchg
nop
cmp
shl
lods
ja
icebp
addr16
loope
xchg
lods
out
nop
stc
aas
pusha
sbb
inc
out
cmp
mov
in
daa
fimull
mov
shll
sbb
pop
adc
sbb
xchg
rolb
les
dec
or
jge
testb
jo
and
jnp
dec
shlb
jne
gs
and
xchg
add
arpl
push
popl
mov
bnd
mov
loopne
outsb
add
mov
ss
sbb
push
xchg
scas
jle
push
stc
in
xchg
add
int
xor
mov
push
notb
cmp
adc
adc
push
adc
scas
pop
sti
xchg
adc
ja
pop
sub
das
push
jbe
fmull
push
xor
mov
cmp
cld
nop
jb
jl
into
dec
popf
movsl
dec
ja
adc
aam
mov
enter
dec
pop
mov
dec
jmp
in
sti
adc
mov
or
sub
dec
mov
xchg
fisubrs
enter
sbb
xchg
arpl
mov
icebp
bound
push
fsubrl
pop
push
jns
test
mov
aad
push
stos
in
pop
dec
movsl
lcall
xchg
inc
mov
rcrl
fstpt
push
gs
mov
jmp
adc
xchg
cmpsl
adcl
cwtl
add
fdivr
push
sub
mov
mov
fldl2e
ret
nop
xor
outsl
sub
insb
dec
pop
pop
sub
pop
js
xor
mov
stc
or
imul
jae
add
lds
jp
test
mov
mov
mov
cwtl
dec
dec
cli
push
adc
fldt
lret
inc
int3
jo
adc
shll
push
lods
xorl
sub
lahf
imul
stos
adc
std
outsl
in
jb
jl
and
scas
pop
bound
cwtl
jmp
ja
outsb
ds
xchg
add
ss
push
xchg
inc
and
imulb
in
mov
mov
loop
jecxz
sti
adc
pop
fwait
jg
push
pop
and
and
lds
stc
out
cmp
mov
dec
mov
adc
popa
test
lcall
cs
movsb
aas
sahf
lock
or
lods
and
xor
dec
aaa
stos
lret
loopne
popf
shll
stos
sbb
movsl
shll
int
push
out
cltd
add
mov
insl
push
mov
test
pop
in
leave
or
inc
cli
mov
out
push
jl
xor
cmp
loope
sti
add
pop
subl
ret
mov
das
cmp
popf
xor
je
movsl
push
push
xchg
pop
fdivrl
push
inc
sub
rol
js
pop
js
bound
xchg
fists
or
and
xlat
loopne
cwtl
idivl
aad
cli
sub
sub
clc
or
xorb
fmuls
gs
aam
mov
cmp
insl
fisubrs
test
sbbl
jle
push
nop
popf
hlt
rorl
cmp
cmp
fdivs
inc
testb
test
repnz
pusha
sub
aam
push
xor
roll
mov
and
loop
dec
push
pop
adc
lods
adc
or
lret
dec
pop
and
jb
aaa
or
dec
notl
cmc
dec
mov
in
mov
repnz
decb
push
mov
rcl
out
xor
ret
loope
imul
out
loopne
daa
shr
push
mov
mov
xchg
xor
ficoms
jnp
std
hlt
mov
fs
xor
cli
pop
je
mov
loopne
cmp
and
xchg
jns
add
arpl
pusha
jnp
mov
fwait
push
pop
sar
loope
mov
scas
inc
iret
mov
ja
pop
mov
shlb
inc
mov
sbb
mov
add
pop
mov
cwtl
pusha
inc
mov
cmp
mov
loopne
jecxz
stc
pop
push
clc
mov
push
aam
jb
aam
mov
or
pop
xchg
or
testb
repnz
push
addb
and
adc
scas
enter
add
or
pop
mov
jnp
push
idiv
adc
lods
or
dec
and
jmp
es
sub
popf
jl
jl
loopne
decb
cmp
push
addr16
or
mov
ss
inc
push
cltd
push
cltd
sub
push
jmp
and
adcl
mov
mov
xor
insb
xor
mov
int3
pop
cli
lock
mov
aad
add
test
test
sbb
aas
inc
push
aad
mov
lods
out
cmpb
push
lcall
mov
fs
xor
mov
sbb
loope
and
cmp
pop
mov
mov
les
xchg
fistps
pop
xchg
fidivl
or
sti
in
pop
push
mov
ficompl
jae
movsb
pop
aaa
mov
add
add
and
jae
das
rcll
es
int3
shl
gs
jmp
mov
mov
jno
idivl
hlt
shll
push
inc
das
add
xchg
cwtl
fsts
bound
cmp
dec
sbb
mov
imulb
pop
nop
arpl
push
fs
lea
mov
movsl
in
mov
nop
clc
mov
std
jns
fldcw
mov
test
daa
xchg
jbe
cmpsl
adc
or
bnd
iret
je
in
outsb
jae
sub
or
fcoms
inc
xor
cmp
adc
mov
sub
incb
push
sbb
mov
mov
jl
push
inc
outsl
nop
push
add
fdivl
fbld
or
and
pop
orl
xchg
adc
xchg
mov
or
mov
inc
jne
push
mov
cld
filds
cmp
cltd
cltd
mov
loope
and
addr16
pop
xchg
push
jle
fnsave
popa
imul
lahf
cmp
movsl
rcl
inc
fimuls
sub
and
dec
dec
outsb
pop
daa
sub
popa
push
xchg
mov
sahf
mov
dec
stc
scas
movsl
pop
icebp
xchg
ret
stc
test
cmc
and
jecxz
pop
imulb
les
rolb
xlat
repz
lods
dec
scas
mov
add
sbb
shll
sbb
jbe
add
stos
out
or
adc
cltd
jnp
scas
jae
pop
ss
add
pop
aam
rclb
lahf
std
cmc
xchg
mov
sbb
and
test
dec
js
les
and
stc
pop
leave
pusha
or
xor
outsl
in
adc
fs
pop
jge
ja
insl
dec
or
jo
je
fstpt
jb
or
imul
outsl
jmp
scas
enter
mov
lods
xor
add
mov
dec
sub
pusha
aam
rcll
sti
or
jmp
and
mov
arpl
cli
fcoml
rdtsc
int3
lock
dec
int3
sti
lret
mov
xchg
pop
push
jb
pushf
loope
and
stos
jp
outsl
or
ss
mov
rol
or
xlat
je
cwtl
pop
inc
dec
lock
sub
jns
test
cmc
push
adc
adc
mov
or
add
adcl
and
inc
inc
push
mov
cmp
popa
push
clc
cmp
adc
jp
mov
push
inc
adcl
fwait
pop
push
sar
cwtl
push
xorl
ss
je
test
loopne
sti
add
mov
cltd
scas
loopne
cld
xor
lret
shll
lret
cwtl
loope
push
xchg
daa
cmp
jg
sti
int
pop
pushl
push
sahf
ljmp
or
mov
mov
jge
or
dec
pop
cmp
cld
sar
insl
jle
xchg
nopl
jbe
xchg
sub
or
push
and
pusha
aaa
cli
out
mov
jae
inc
mov
cs
addr16
xchg
add
loopne
jno
pop
push
mov
cmp
sub
les
push
inc
stc
mov
xor
jbe
lret
imull
popa
cmp
sbb
inc
push
mov
mov
fstps
or
sbb
and
jbe
mov
ja
fcoms
loop
inc
movsl
les
xchg
dec
pop
outsl
xlat
push
cmp
lahf
jne
and
push
daa
add
xchg
hlt
mov
in
cmpsb
cwtl
mov
xor
les
fs
mov
pop
fs
icebp
out
ja
rcrb
xchg
outsl
hlt
ss
int
call
stc
push
roll
inc
enter
pusha
int
and
push
fadd
ds
jecxz
sbb
push
test
push
aaa
dec
sbbl
pushf
push
scas
and
push
pop
out
xchg
sbb
push
sub
mov
pop
call
sti
inc
xchg
push
mov
in
testb
mov
inc
lret
mov
xchg
sub
xchg
or
fwait
or
sbb
movsl
inc
lods
mov
imul
mov
xlat
lret
scas
ret
les
and
push
sub
inc
pop
mov
shrl
ficoml
adc
or
mov
sub
xchg
lea
cmp
mov
std
sete
adc
inc
pop
iret
js
mov
out
lods
dec
pop
mov
pop
cmc
pushf
test
mov
ret
loopne
pusha
scas
shll
inc
imul
jmp
jae
sbb
fcmovbe
aam
cmp
aas
in
ret
fstps
lods
mov
pushf
xor
mov
and
cmp
inc
mov
sbb
sbb
cltd
outsb
inc
dec
adc
ljmp
mov
and
mov
pop
subb
pop
mov
jns
cld
jbe
stos
fidivrl
stc
push
inc
es
mov
jno
rcll
jae
push
scas
xchg
push
jns
ret
loop
pop
sub
mov
fstpl
adc
xor
xchg
push
loop
lods
ror
rdtsc
mov
movsb
push
std
add
push
enter
cmp
and
cwtl
shr
sbb
add
xchg
pop
adc
cmp
inc
push
sbb
xchg
add
mov
lret
xchg
adc
push
sbb
sbb
jno
pop
enter
pop
sub
enter
sub
mov
ret
jmp
mov
add
movsb
cmpb
jmp
inc
sbb
outsl
adc
and
dec
jl
push
inc
out
cltd
addr16
jne
xchg
popa
mov
lret
cmp
push
icebp
push
add
decb
mov
or
pusha
sub
movsb
ficompl
ljmp
out
out
sub
aas
aaa
push
cltd
call
push
dec
add
int
fwait
ret
push
mov
loope
test
dec
repnz
fiadds
loope
dec
push
or
add
sbb
dec
loopne
jmp
test
pop
std
pop
sub
cmp
adc
jb
push
cltd
dec
mov
mov
nop
or
and
inc
call
xor
adc
cmpsb
jb
pop
in
adc
js
cltd
or
mov
mov
fisubs
pop
aad
push
or
test
push
shrl
fcmovbe
in
sahf
repnz
xlat
repnz
inc
mov
mov
sub
pop
enter
dec
pop
ja
pop
pop
ret
push
stc
xchg
iret
inc
pop
lcall
cmp
and
popf
sbb
into
cld
ss
lahf
loop
inc
xor
mov
add
lahf
or
inc
insb
push
add
sbb
xor
icebp
inc
stos
aaa
pop
cmp
jg
mov
sbb
in
push
xor
ss
mov
pop
repnz
jmp
je
in
xor
popa
xor
fildl
addr16
or
pop
or
js
movsb
pop
cmpsb
notb
xchg
cwtl
mov
pop
repnz
mov
jmp
adc
int
xor
or
inc
fmul
inc
inc
adcb
sahf
xorb
and
jnp
pop
push
adc
xorb
out
mov
scas
sbb
movsb
call
cmp
das
and
xchg
add
fwait
scas
out
bound
jg
pop
cld
pop
in
cmp
pop
jl
movb
mov
adc
mov
cwtl
call
mov
out
call
fidivl
sub
gs
test
sbb
call
mov
mov
xor
cmpsb
push
js
adc
mov
mov
mov
js
dec
jle
aaa
sub
repnz
cmp
dec
cmpsb
pop
xor
lods
or
cltd
mov
add
add
or
jecxz
cmp
sbb
xchg
dec
inc
ret
outsb
aad
in
dec
cmp
js
clc
outsl
sub
pushf
mov
adc
dec
sahf
imul
dec
outsb
cmp
mov
rcr
rcl
push
and
pop
sbbb
sbb
popf
loop
adc
jl
mov
test
sahf
adc
stc
push
pop
sub
cmp
and
xchg
mov
mov
bnd
shll
sbb
sbb
ret
xor
aam
cwtl
inc
cld
mov
adc
add
sbb
movsb
sbbb
sbb
aam
jae
in
scas
sub
pop
pop
dec
adcl
push
dec
scas
or
je
cmp
push
decl
pop
sbb
dec
add
icebp
mov
fistpl
sar
push
xor
lods
inc
jmp
jo
das
xchg
xor
adc
dec
int
dec
xor
sbb
inc
xor
xchg
pop
idivb
mov
mov
mov
insl
push
xor
xchg
leave
andl
out
fnsave
xchg
mov
aas
sub
bound
dec
lods
adc
sbb
sbb
in
stc
dec
loop
cmp
frstor
cmc
inc
mov
out
pop
loop
sub
das
push
hlt
aad
push
fwait
xchg
jmp
or
ret
jecxz
stos
pop
mov
loop
rolb
aam
xor
loope
mov
sbb
add
hlt
jl
dec
mov
arpl
adc
sbb
fimull
or
sahf
ja
xor
js
mov
mov
push
es
outsl
aas
push
fs
cmp
jae
add
pop
or
test
mov
jo
insb
stc
jbe
lods
dec
jl
push
ss
subl
cmpsl
sub
cmpsb
mov
je
mov
push
imul
and
leave
lods
push
jnp
xchg
cmp
pop
std
test
cltd
mov
xor
xorl
scas
adc
push
mov
fwait
cltd
insl
in
out
adc
push
je
loop
mov
sbb
inc
mov
jae
cs
pop
gs
repz
jae
stos
rcrb
pop
sbb
stos
dec
mov
ljmp
add
mov
push
adc
andl
lcall
fiaddl
adcb
into
dec
icebp
insl
inc
sbb
pop
inc
enter
inc
xchg
fnstenv
cmp
xchg
and
and
jmp
inc
decl
repnz
dec
cmpsb
std
pop
mov
push
add
jg
test
stos
and
out
test
js
xchg
inc
ret
adc
sub
mov
in
pop
push
int
pop
mov
das
dec
dec
xor
in
pop
hlt
xor
popf
mov
add
mov
ja
dec
xchg
push
add
push
ljmp
out
xchg
or
or
repnz
std
ret
fiadds
sub
lret
and
int3
dec
mov
sub
xchg
jp
lods
cs
lcall
xor
movsb
adc
pop
out
int3
pop
xlat
or
adc
xor
xor
sub
xlat
lret
iret
jb
mov
ds
jno
and
inc
aam
lock
aam
and
or
push
dec
faddl
aam
xchg
xorb
imul
jae
shrl
stos
mov
jbe
aad
mul
roll
movsl
test
dec
fcmovnbe
lret
lahf
dec
mov
nop
outsl
sbb
in
dec
dec
mov
sbb
cmp
push
repz
pop
and
mov
fbld
push
jecxz
push
inc
ret
push
sub
cmpsb
cld
bound
xchg
mov
cld
in
adc
clc
mov
push
int
negb
es
adc
inc
leave
shll
cltd
lock
mov
sti
mov
test
and
mov
mov
subb
fdivrl
enter
sahf
push
jg
repz
cmpsb
sti
outsl
push
fwait
mov
xor
movsb
push
data16
aas
jbe
ret
fidivrl
test
leave
cmp
psllw
pop
or
shll
xchg
outsb
lock
cwtl
insb
test
mov
and
popf
xchg
xchg
mov
idivb
dec
add
mov
adc
or
std
test
clc
sti
lret
fisttps
in
fcomip
jno
inc
cmpsl
mov
mov
adc
jnp
jo
outsl
cmp
jp
add
adc
mov
xor
jb
outsl
push
out
rcrl
jne
in
xchg
adc
fnsave
inc
mov
fnstsw
xchg
mov
push
jecxz
lret
or
data16
jns
sub
push
xchg
mov
xor
jle
xchg
icebp
mov
mov
shlb
push
cmpsb
repz
push
cmp
jl
mov
and
xchg
jecxz
testb
xor
lret
arpl
xorb
inc
test
repz
push
add
sbb
push
xchg
aam
mov
movsb
cltd
xchg
lods
adc
jae
mov
dec
fdivrs
or
test
das
into
mov
mov
lea
shrl
leave
test
aam
or
das
push
mov
lds
or
mov
sub
jle
outsl
inc
sbb
lret
std
insl
lds
lcall
ss
aad
add
mov
scas
sub
icebp
mov
scas
xchg
sub
dec
js
adcl
ds
add
xchg
dec
rol
pushf
fs
pop
sub
push
in
inc
mov
insb
or
pop
or
adc
add
inc
mov
pusha
addl
add
pop
and
push
imul
bts
not
push
vpaddusw
jge
xchg
pop
loop
dec
imul
mov
mov
dec
jecxz
insb
jo
jl
outsb
jbe
ret
ret
inc
or
xor
loopne
aam
push
fmul
stc
sbb
pop
push
inc
sbb
or
and
cli
pop
inc
pop
jg
cmp
ja
push
xchg
mov
or
loope
lea
xor
mov
ficompl
fiaddl
aaa
jo
sbbl
fidivs
fnstenv
push
sarl
inc
push
sub
into
sbb
pop
xor
jmp
fwait
and
mov
arpl
lahf
loopne
ret
fisubl
insb
in
xor
xorb
jb
pop
shrl
cli
dec
sbb
ljmp
pop
push
test
jle
jo
mov
shll
and
test
push
in
cld
inc
push
or
fcoml
test
daa
sub
mov
mov
outsl
out
and
or
imul
cmp
cmp
movsl
push
and
dec
js
shl
enter
arpl
pop
out
mov
mov
xor
imul
call
cmp
outsl
stc
inc
in
and
enter
dec
into
test
mov
or
ja
xchg
push
add
push
lds
sub
adcb
cmc
mov
add
test
mov
ja
add
cmc
mov
jbe
xchg
popa
add
mov
dec
stos
aas
mov
rcrl
lret
cltd
dec
and
add
mov
inc
cmc
iret
and
inc
or
mov
fistl
add
nop
xchg
xchg
sbb
frstor
cmp
in
xchg
pop
push
inc
sub
or
inc
add
or
push
out
or
mov
pop
popa
lods
push
aam
dec
add
xor
das
cltd
fstps
jnp
outsb
mov
push
mov
jge
scas
mov
fs
cmpsb
enter
dec
jl
xor
es
dec
mov
in
lahf
jno
out
mov
jae
pop
mov
cli
jae
pop
xchg
jno
xor
in
sbb
movsl
int3
jns
lcall
mov
sub
je
scas
xchg
pop
aas
mov
sbb
testl
outsl
mov
add
orl
inc
addr16
sbbb
push
sbb
aam
mov
mov
sbb
dec
cmp
push
cmp
push
adc
aaa
inc
dec
and
sbb
and
jp
pushf
out
mov
hlt
jnp
xlat
push
cltd
sbb
leave
mov
popf
cmp
push
sbb
push
fnstcw
arpl
sbb
jbe
mov
shll
enter
or
test
out
repz
mov
mov
push
outsl
add
ja
or
ljmp
mov
cmpl
mov
ljmp
sub
mov
xchg
fmuls
lods
dec
in
out
jo
outsl
mov
jae
cmpsl
int
cmp
xlat
sub
jp
and
jo
jecxz
dec
or
mov
adc
xor
jg
shlb
out
ljmp
repz
pop
add
shlb
call
push
sbb
fwait
mov
push
xchg
and
aaa
jnp
mov
dec
pop
enter
scas
hlt
push
out
rclb
repz
ret
cmpsl
jbe
xor
lea
cld
adc
push
sub
cli
push
jmp
test
mov
pop
loopne
or
rol
sub
sarl
in
cmp
cltd
mov
cwtl
dec
jge
mov
int
mov
in
pop
add
in
jmp
sub
mov
ss
sub
mov
or
dec
test
inc
pop
cld
add
fisubrs
and
test
mov
stos
and
cmpsl
and
jge
ret
or
xorb
arpl
inc
movsb
call
xor
in
hlt
nop
mov
push
fisttpll
mov
insb
push
xchg
jbe
lcall
fwait
cmc
pop
cmpsb
add
stos
sub
mov
push
cmpsb
sub
in
popf
mov
arpl
scas
jmp
fldl
fs
fildll
imul
leave
test
jecxz
lods
adc
leave
jp
fisttps
ficoms
les
jb
pop
or
movsb
movsb
push
cwtl
loopne
lea
sub
sbb
inc
jns
push
xchg
test
cmp
je
pop
shlb
test
shr
sbb
mov
xor
inc
add
add
lock
inc
cmp
out
and
and
sbb
or
aam
in
add
jmp
cmp
std
movl
sub
mov
mov
movsl
push
mov
outsb
cmp
or
cmc
fdivs
aad
pop
ret
pop
popa
pop
imul
pop
mov
cmpsb
sub
sbb
cmp
cld
lcall
inc
jp
mov
fisttps
xchg
jno
movsl
xchg
push
cmp
scas
sbb
out
dec
in
push
jbe
into
sahf
jg
xchg
fisttpll
jns
or
arpl
test
and
jg
into
out
pop
pop
dec
adc
lea
cmpsb
ficomps
call
cmp
push
jnp
cltd
dec
fwait
pop
ljmp
pop
sub
mov
and
ficomps
mov
mov
mov
std
pop
bound
in
pop
push
fwait
xor
mov
xchg
xchg
gs
imul
mov
and
mov
cmp
lret
push
jo
jecxz
scas
lret
pop
mov
add
jle
in
xor
jbe
arpl
cmpsb
adc
lcall
hlt
mov
mov
mov
cmpsl
aad
or
sti
mov
xchg
dec
adc
or
lcall
lods
clc
decb
push
std
sahf
jnp
pushf
and
push
lods
push
and
pop
fwait
mov
mov
inc
lgs
outsl
inc
push
pop
cmp
jecxz
ret
pop
dec
cmp
mov
and
mov
cmp
fdiv
adc
test
adc
jae
lret
and
push
jp
fldl
xchg
test
dec
pop
imul
and
jge
inc
or
ja
dec
cmpl
sbb
js
add
adc
jl
push
or
xchg
js
jge
mov
mov
loop
dec
adc
iret
cmpsb
testb
jae
fsubrp
lock
xor
pop
ret
xor
clc
push
adc
popf
loop
jmp
xchg
rcrb
pop
mov
lea
leave
loope
inc
inc
cmp
pop
je
sahf
xor
fldenv
dec
test
mov
mov
inc
bound
xorl
rolb
inc
aaa
addb
or
xchg
cmp
outsl
xor
ss
or
dec
negl
insl
data16
push
push
lahf
es
adc
movsl
mov
jmp
fimull
rolb
cwtl
jmp
adc
jno
add
jae
add
inc
orl
xor
in
pop
cmp
fisubl
daa
push
and
call
xor
xchg
cmp
push
ja
sub
jge
shlb
out
ret
jg
outsl
cli
or
stos
lock
lods
or
aam
xchg
mov
jb
clc
incl
sbb
sbb
push
or
jp
cmp
fcmove
lds
jnp
jae
fidivrl
arpl
call
sbb
mov
inc
ja
lret
lret
xchg
and
mov
xor
cmp
pop
add
xor
cwtl
add
xchg
dec
adc
add
and
jb
int3
in
jp
and
xor
stos
jns
rclb
popa
out
lcall
mov
dec
xlat
rcl
sbb
cmpsl
push
je
or
mov
ss
jl
fwait
jmp
dec
xor
inc
and
push
push
cmpsl
jbe
push
sarb
out
in
pop
push
daa
lods
fldt
jns
imul
int
and
lret
or
in
mov
mov
mov
imul
xchg
andl
xchg
push
xchg
and
mov
pop
xor
fildl
mov
test
mov
jmp
adc
ss
cwtl
sub
aad
imul
push
fcoms
sti
cwtl
sti
imul
imul
fsubrs
mov
lock
cmp
mov
ret
je
xor
jge
rclb
ret
push
cwtl
push
xchg
or
fstl
or
mov
in
mov
hlt
fstpl
mov
and
ds
adc
xor
adc
adc
adc
cmp
aam
or
andl
icebp
pop
in
ljmp
dec
xchg
imul
cwtl
dec
pop
rclb
nop
mov
mov
mov
add
decb
add
shrl
iret
repz
mov
test
inc
cld
lret
sbb
xor
int
xor
mov
add
jl
js
inc
popf
push
jl
jb
sbb
loop
hlt
inc
cmc
fistpl
xchg
dec
push
stos
out
xlat
jns
gs
xchg
lcall
aad
xor
add
popf
xlat
and
sahf
popa
test
inc
adc
or
incb
rcrb
xchg
sub
fsubr
dec
cltd
mov
div
dec
push
ret
mov
pop
mov
bound
inc
xchg
hlt
fwait
inc
pop
add
jnp
push
adc
cmp
pop
jp
stc
or
push
sub
lock
xor
fistpl
movsb
jecxz
daa
aad
sbb
inc
lods
mov
icebp
xor
dec
mov
iret
xchg
adc
sub
enter
jno
sbb
inc
int
stc
jp
or
cwtl
xchg
xor
adc
sbb
xor
xor
cld
imul
mov
cld
in
mov
sbb
mov
daa
pop
lret
fsubrs
std
adc
sub
push
xchg
add
in
xor
mov
or
cs
xchg
push
repz
out
mov
ret
mov
outsl
js
or
mov
bound
cmc
les
fs
enter
pop
enter
das
call
test
jg
scas
in
test
add
out
or
dec
sbb
mov
bound
jmp
cmp
popf
jmp
push
adc
xorb
sbb
ja
sbb
push
pop
gs
lds
inc
xchg
jmp
jnp
cmp
and
add
fstl
adc
inc
add
adc
xchg
scas
popa
out
gs
loop
dec
cltd
sahf
lcall
fbstp
mov
mov
icebp
cs
neg
push
test
mov
inc
rorl
pop
push
mov
sub
sbb
dec
sub
aad
fisttps
sub
add
dec
test
jmp
push
mov
orb
andb
jmp
mov
aad
add
fucom
mov
loope
dec
jecxz
cltd
or
push
flds
xchg
loop
out
cmp
into
adc
fbld
fwait
pop
mov
jns
mov
cmpsl
movsb
jne
decl
andb
xor
mov
scas
push
call
adc
jl
pop
push
add
xor
mov
jg
mov
mov
gs
xor
repz
fsubs
jnp
and
test
adc
push
or
sbb
cmp
inc
rcrb
fiaddl
mov
cmp
das
testl
mov
push
test
add
mov
cmp
loope
cli
repz
push
cld
int3
and
repnz
jno
and
cmp
xchg
mov
push
jg
nop
mov
mov
or
jns
addr16
in
mov
xchg
mov
repnz
sub
sub
jne
mov
lret
shl
xchg
push
fildll
inc
add
and
icebp
dec
fcmovnu
fwait
adc
lods
xchg
insb
lret
mov
pop
inc
ficoms
pushf
in
jno
push
out
hlt
mov
or
rcrb
cmp
xor
pop
into
arpl
dec
push
mov
pop
fbld
fsubrp
popf
and
cmp
mov
or
and
in
mov
inc
mov
inc
sub
add
cmp
les
dec
arpl
into
xchg
inc
inc
jg
adc
insb
sbb
ja
xchg
xor
shll
data16
inc
dec
xlat
clc
fwait
test
test
or
mov
pop
cmp
push
mov
add
xchg
int
outsb
sbb
sub
push
dec
bound
popf
sub
out
lock
inc
in
xor
sbb
fwait
or
fstpt
adc
mov
xor
jle
stos
xchg
dec
std
lds
loope
fcmovnbe
mov
sub
es
insb
jmp
roll
repz
adc
xchg
sbb
int
push
sti
push
add
jns
fbld
xchg
xor
inc
jbe
lock
cmc
jecxz
or
out
ss
leave
xlat
sub
bnd
cmpsb
xchg
pushf
xor
xor
shlb
out
pop
mov
roll
jbe
mov
and
stc
and
aaa
xor
cmp
or
push
sti
xchg
arpl
pop
insl
in
jbe
mov
push
adc
arpl
xchg
fildll
out
sbb
and
adc
cmp
adc
cmc
std
fwait
pop
outsb
aad
aad
ss
add
aad
jns
fldenv
push
repnz
or
js
or
ss
xrelease
pusha
cmpsl
js
xchg
fstps
shlb
add
repz
pop
push
loop
jns
cmc
xchg
les
dec
jnp
into
orl
inc
dec
std
xor
push
jnp
and
cmp
in
xchg
shrl
jno
add
loope
pop
nop
add
out
mov
fs
dec
gs
sar
xchg
pop
or
test
mov
and
sahf
and
mov
push
pop
add
pop
and
jge
icebp
loope
rclb
xor
add
dec
mov
cld
aas
pop
sub
dec
rcll
add
fidivs
repz
pop
cmp
ja
mov
xchg
fbstp
fisttps
xchg
mov
int3
outsl
lret
iret
int3
sub
cmp
dec
and
adc
mov
jne
mov
mov
leave
and
xor
int
sbb
jo
ficoml
je
xchg
add
xchg
jmp
and
jne
cmpsl
xchg
fstl
push
inc
jne
mov
insl
in
pop
lcall
pop
roll
push
fildll
outsl
push
dec
lds
and
lds
and
cmp
ds
rcrl
ljmp
fstps
and
aas
mov
fwait
xor
cmp
inc
mov
loop
cld
mov
fwait
in
cwtl
pop
sahf
bound
fsts
ja
mov
sbb
xor
cmc
mov
pop
and
mov
add
inc
mov
mov
sbb
push
adc
jmp
sub
cmpsl
add
subb
dec
jmp
mov
push
jbe
test
add
mov
cmpsl
loope
mov
test
lock
pop
or
mov
dec
pop
xchg
aas
lods
aas
and
ret
fsts
iret
xchg
xlat
dec
lret
iret
femms
shrb
mov
push
add
cmpsl
imul
inc
mov
xor
inc
mov
stc
out
cld
loop
test
fwait
mov
lds
aaa
shlb
inc
inc
out
sbb
lds
insb
dec
cli
xchg
pop
mov
or
mov
mov
sbb
lock
cmpsl
leave
xor
mov
into
dec
out
xlat
xor
jecxz
push
test
sti
mov
cld
out
pop
push
nop
mov
mov
dec
outsl
pop
push
lods
iret
popa
test
and
xor
shrl
fdiv
nop
mov
xor
sub
mov
mov
xchg
pop
out
push
pop
pop
cmpsb
sub
mov
jmp
cmp
sbb
add
das
lcall
cmp
dec
nop
sti
lock
dec
fs
imul
stos
arpl
in
imul
xchg
das
push
imul
repnz
inc
repz
test
cmp
or
in
xor
pushl
push
and
stos
or
xor
xchg
imul
mov
sub
call
popa
sti
dec
pop
pop
inc
xchg
js
std
cmc
and
fisubl
loop
test
push
mov
loopne
or
xchg
inc
push
mov
and
mov
ret
sbb
aam
les
clc
ds
call
sbb
daa
std
cmpsl
xor
addr16
cmpsb
stos
cs
rcrl
cmp
fbstp
mov
cld
test
mov
or
sub
push
pop
lods
sub
dec
adc
shlb
or
out
int3
push
movsb
xchg
incl
ss
inc
adcl
and
call
lret
adc
and
icebp
or
loope
mov
push
lret
sub
test
subl
into
push
scas
bnd
repz
xchg
into
jbe
jnp
push
out
mov
lret
fcmovnbe
out
shl
mov
mov
lods
add
scas
push
arpl
mov
lock
mov
in
sub
iret
inc
sbb
test
inc
fiadds
mov
cltd
and
outsl
jo
in
or
cmp
clc
fcoms
sbb
dec
adc
cmp
cld
addl
cmp
or
xchg
repnz
out
out
jmp
inc
mov
jp
sub
shll
cmp
inc
movsb
lcall
cmp
push
cli
lret
imul
outsl
ja
push
insl
cmp
idivb
xchg
mov
mov
mov
lcall
testl
jecxz
adc
icebp
mov
inc
jg
je
cwtl
add
ret
mov
jp
mov
jns
dec
pop
mov
imul
pop
mov
test
in
das
sub
jecxz
xchg
lea
pop
add
or
icebp
shrb
xor
xchg
divps
adc
inc
xchg
sbb
xor
in
or
subl
pop
mov
cmpsb
lahf
arpl
sub
xor
aas
js
xor
push
pop
inc
jecxz
clc
inc
adc
xchg
cmp
aam
ret
push
adc
add
mov
aaa
fisttps
addb
and
xchg
sbb
xorb
adc
jae
ss
leave
icebp
push
or
jg
cmpsl
cmp
bound
lods
pusha
mov
add
stos
add
pop
lcall
adc
imul
loop
aad
mov
xlat
cmp
mov
push
xor
mov
jg
mov
repnz
inc
or
gs
je
push
mov
lods
not
mov
jg
stos
adc
int3
movsl
mov
pop
lods
ds
aad
push
jle
mov
stos
not
mov
xchg
inc
or
stc
cltd
les
je
add
jecxz
scas
in
xor
pushf
cmp
cmp
cmp
sbb
leave
aas
int3
stos
add
cmp
je
pop
mov
or
iret
dec
push
bound
jnp
cmp
adc
bound
sti
mov
jns
jns
fsub
jg
or
orb
adc
cmp
pop
mov
pop
icebp
xor
mov
adc
sbb
call
sbb
xchg
push
sahf
ja
ljmp
jae
jmp
adc
out
jo
dec
jo
out
mov
pop
in
outsl
lcall
lret
cmp
inc
xchg
cs
xor
in
mov
leave
adc
jecxz
cmp
pop
mov
sbb
xor
cltd
sbb
cmc
push
popf
leave
mov
sub
mov
dec
rcrl
mov
mov
les
out
push
mov
loope
add
jb
js
sbb
jl
push
in
outsb
xor
push
mov
je
fdivs
insl
iret
xchg
out
js
pop
mov
push
iret
add
jno
hlt
cmpsb
out
inc
icebp
pushf
and
adc
lea
mov
dec
adc
daa
mov
rcll
mov
pop
addb
sbb
jno
jne
lock
mov
insb
divb
iret
ss
cs
jp
adc
fdivr
outsl
jo
inc
adc
adc
popf
cli
lcall
mov
mov
out
pop
arpl
movsl
repz
fs
mov
cwtl
xchg
sti
sub
inc
mul
adc
fistpll
in
and
inc
dec
add
mov
gs
mov
ret
xlat
inc
xchg
or
sti
mov
les
call
mov
std
andl
pop
aaa
xchg
cmp
ljmp
sub
fdivrl
sahf
cmpsb
movsb
inc
mov
ret
fiaddl
mov
das
xor
sahf
push
push
pop
mov
sbb
pushf
scas
insl
or
mov
sets
andb
aam
mov
pop
out
test
mov
dec
popa
mov
add
jp
cmpsl
lcall
jge
pop
je
rcrb
rcll
ficompl
mov
push
out
and
std
stc
lea
rol
cmp
dec
inc
mov
mov
dec
inc
rol
add
ret
jns
xchg
jecxz
adc
arpl
push
xor
lods
dec
xlat
js
jmp
ljmp
out
dec
lret
sbb
inc
push
jp
js
ret
push
ret
adc
inc
daa
or
or
arpl
cmp
inc
sbb
dec
xor
mov
and
add
mov
cmovl
adc
xchg
nop
add
popf
mov
pop
into
push
pop
mov
lahf
xor
add
test
dec
ret
xor
int
inc
mov
cmp
mov
push
les
test
mov
out
and
mov
int
mov
xor
ret
in
xchg
das
jle
mov
xchg
cs
push
xorb
push
xchg
xor
popf
cmpsl
fcomip
mov
mov
mov
fildl
clc
test
js
pop
test
and
sbb
std
loop
imul
xchg
xchg
inc
inc
out
je
div
les
arpl
dec
repnz
inc
jno
lds
or
sub
inc
jl
leave
push
mov
add
test
aam
jl
sub
out
xchg
mov
test
fwait
push
clc
cmp
in
cmp
sti
sub
mov
lcall
or
test
and
jns
inc
inc
imul
and
fs
in
js
sbb
or
xor
addb
push
add
add
add
shrl
mov
lret
lret
jg
xor
pop
test
test
loopne
mov
in
mov
push
sub
test
bound
popf
jp
dec
xchg
cs
cmp
mov
xchg
aam
add
jno
lds
testb
jge
xchg
aaa
movsbl
subb
jae
push
loopne
sub
call
cmpsl
mov
xchg
in
hlt
add
cmp
mov
lods
loopne
jmp
out
xor
mov
decl
call
pop
sub
jle
arpl
fldcw
ret
mov
push
xchg
in
sbbb
jl
cld
insb
scas
mov
mov
lea
loope
imul
cmp
pop
lret
outsb
pop
mov
jl
mov
arpl
and
or
daa
sub
mov
mov
jecxz
inc
stc
xchg
shr
popf
sub
filds
cvtps2pd
outsl
movsl
cmp
push
enter
cmp
lods
sub
outsb
das
push
je
cmpsl
mov
or
aam
or
pop
jmp
xchg
and
mov
sahf
mov
push
test
in
bound
outsl
xor
enter
enter
cmpl
and
lcall
push
mov
jle
std
addl
insl
mov
xor
lods
inc
jge
pop
sbb
cmp
mov
int
nop
dec
cmp
in
or
pop
cmpsl
cmpsb
lcall
scas
adcl
cmp
test
mov
ljmp
std
rol
rep
popf
sbb
shrl
jbe
lds
mov
adc
call
out
imul
push
add
arpl
mov
push
mov
xchg
int
xchg
iret
cmpsl
shrl
in
xorl
mov
aaa
xchg
mov
inc
jl
movsl
sub
jae
call
daa
push
sbb
mov
and
les
aam
mov
or
fidivs
imul
xchg
popa
xchg
shll
jo
push
mov
add
adc
or
xor
lcall
cmc
lcall
push
push
pop
mov
cs
dec
cld
cli
mov
or
mov
or
repz
mov
push
pop
sarb
in
into
push
aaa
adc
add
les
or
pop
cmp
sbb
xor
hlt
jne
cmp
push
xor
in
and
shl
ss
jb
lret
and
sub
jae
cmp
imul
sbb
add
clc
adc
outsb
jns
pop
xchg
popf
push
adc
sti
xchg
sti
sub
push
push
icebp
mov
mov
and
sbb
add
add
daa
push
xor
cmpb
mov
ja
push
sbb
mov
jo
dec
xchg
add
int
cwtl
addr16
cmp
mov
cmp
ret
imul
test
loopne
call
ss
sbb
into
icebp
jb
mov
xchg
les
push
xor
mov
xchg
pop
or
mov
daa
dec
cmp
and
xchg
aam
xchg
call
pop
fbstp
xchg
int
das
out
mov
jno
sub
cmpsl
scas
jle
in
jb
scas
adc
fldl
or
mov
xchg
adc
ret
jmp
ja
jle
lock
cwtl
movsl
loope
jo
dec
imul
push
test
jmp
js
cmp
pop
imul
imul
pusha
jbe
addr16
inc
add
pop
and
popf
inc
mov
sbbb
mov
mov
jp
xor
je
pop
sbb
shll
stc
mov
jp
xchg
mov
sbb
mov
in
jbe
popa
push
shl
test
jecxz
jmp
imul
jg
sbb
rcl
repz
or
dec
adc
fnstcw
lret
add
xor
xor
push
pop
shlb
mov
mov
mov
mov
movsb
fistpl
add
pushf
push
adc
shll
hlt
daa
ljmp
cmc
cmp
pop
inc
cmp
adcb
mov
inc
fists
push
inc
mov
xor
pop
adc
sbb
sbb
adc
inc
out
dec
jno
mov
jbe
or
push
aas
punpckhbw
adc
jp
shr
mov
cmpsl
out
icebp
pop
xchg
push
mov
fwait
cmp
fdivr
rcrl
inc
mov
pop
lret
and
in
mov
mov
and
fildll
icebp
add
pop
fcoml
jnp
jbe
pop
lods
xchg
fiadds
dec
add
ret
mov
insl
fidivl
push
loop
int3
ficompl
inc
shll
mov
mov
push
pop
and
pop
adc
lret
loopne
cs
add
adc
data16
lock
add
xchg
stos
and
pusha
ror
out
or
shlb
adc
mov
lahf
jb
cmp
lods
out
inc
inc
and
not
das
xor
cld
cmpsl
lods
jno
int3
imul
cltd
inc
test
dec
shll
shl
and
xor
fsubs
mov
lret
mov
mov
testb
cld
les
jge
sbb
cltd
out
dec
add
xchg
inc
inc
adc
pop
mov
cld
mov
divl
inc
js
ljmp
sarb
clc
xchg
xor
add
fistpl
mov
jg
imul
mov
imul
movsl
mov
bnd
gs
cs
ret
leave
pop
xor
fs
cmp
sbb
mov
out
add
adc
xchg
in
or
xor
push
dec
pop
in
mov
xchg
push
ret
insb
mov
xlat
ja
pusha
mov
pop
mov
jb
add
cs
stos
sub
xchg
sbb
or
out
pusha
dec
shrb
out
xor
es
xorl
jb
sti
sub
sahf
add
stos
fisubrl
add
pop
out
test
cmpsb
jl
mov
xorl
jb
dec
add
es
inc
stos
push
and
jecxz
fldl
jb
aas
sub
insb
movsb
cmp
cmp
sbb
popl
xchg
enter
mov
fidivs
shlb
pop
cs
jne
leave
daa
aas
cmp
ja
and
or
add
sbb
jl
daa
cmp
and
xchg
stos
shlb
cmpsb
push
aaa
jle
sub
sub
in
insb
mov
add
in
adcb
pop
fsts
int3
shr
ja
jle
pop
mov
pop
repz
dec
adc
mov
dec
add
pop
fdivl
mov
stc
mov
aad
inc
movsl
xchg
dec
adc
push
inc
jecxz
daa
sbb
mov
pop
sub
mov
ljmp
ljmp
sbb
inc
rcrb
stc
gs
ret
cmp
sbb
call
callw
and
out
adc
movsl
out
sub
pop
leave
push
add
aaa
es
jg
jb
dec
icebp
lcall
mov
push
adc
mov
jns
sbb
and
cmpsl
and
popf
es
push
cmp
mov
inc
or
ret
push
adc
int3
testb
ds
mov
push
repnz
push
loope
imul
cmpsl
mov
xor
imul
repnz
das
and
add
mov
je
or
loopne
sti
sbb
imul
testl
pop
ret
jns
pop
mov
fisubrl
sti
clc
popf
ljmp
inc
into
mov
out
lods
mov
fwait
sbb
jne
fstpt
test
dec
and
mov
cmp
mov
add
imul
or
mov
jle
mov
mov
push
inc
jb
cmp
jo
shrl
dec
mov
fstps
inc
roll
push
sub
push
push
xor
cmp
inc
test
sbb
rolb
jmp
je
lods
addr16
and
test
sbb
out
pop
push
sahf
and
pusha
adc
adc
pusha
jp
dec
jae
in
jmp
data16
xchg
lahf
mov
and
movsb
call
fwait
push
push
xlat
cmp
test
xlat
lds
xlat
and
mov
add
into
mov
pop
or
stos
imul
aam
sub
mov
stc
and
fwait
xchg
ret
out
and
or
lods
cmp
insb
push
andl
mov
xor
stos
mov
push
cmp
data16
dec
pop
add
inc
je
insl
wrmsr
xchg
cmp
cmp
mov
xor
push
stos
stos
jo
xor
or
sbb
ss
xor
jb
dec
and
js
add
mov
hlt
sar
in
fimull
dec
cmp
jne
push
sub
icebp
dec
into
cs
dec
sarb
adc
xlat
sahf
ret
cli
outsl
inc
xchg
mov
add
mov
ljmp
stc
pop
mov
or
es
hlt
mov
cmpsb
mov
and
jae
xchg
arpl
pop
imul
data16
ficompl
xchg
daa
cld
int
daa
xor
lcall
cmpsl
sbb
das
icebp
pop
ret
jbe
push
mov
adc
or
sbb
sahf
pop
add
fnstcw
and
sbb
mov
pop
aam
daa
mulb
icebp
test
orb
into
icebp
nop
or
inc
add
insl
or
fsubl
mov
jnp
in
iret
cld
mov
and
or
fnstenv
nop
inc
mov
test
call
sahf
mov
insl
push
addr16
ds
js
push
call
imul
adc
xlat
std
popf
xchg
xchg
out
fwait
sbb
or
add
aas
aad
pop
xchg
cmp
inc
lahf
sbb
inc
jno
sbb
and
clc
pop
fldl
xor
aad
shlb
cltd
bound
xchg
inc
mov
ret
jmp
stos
lcall
mov
pop
sahf
sbb
out
pushf
cmc
cmc
pop
aam
jecxz
ret
orb
mov
sbb
out
mov
mov
rolb
sub
je
cli
into
adc
xor
call
pop
sbbl
inc
sbb
jb
fnstcw
pop
sub
icebp
clc
lock
mull
mov
out
jg
xlat
lcall
lods
movsb
mov
push
add
and
jge
jmp
out
xchg
je
and
sbb
xchg
call
ja
pop
jns
fadd
mov
push
gs
repz
dec
mov
and
sbb
sbb
sahf
lods
rorb
enter
call
jg
mov
jmp
mov
mov
and
xor
or
mov
sub
cmc
iret
mov
cmpb
cmp
sbb
push
cmp
iret
aaa
or
lret
inc
adc
jl
lea
pop
gs
stos
pop
xchg
rcl
stos
dec
sti
push
mov
mov
adc
or
or
pusha
sub
sbb
push
dec
stos
out
dec
sbb
mov
sti
arpl
or
and
xchg
cmp
jge
mov
shrl
mov
out
js
xchg
push
mov
jecxz
dec
jl
mov
addr16
inc
or
sbb
and
mov
mov
mov
lods
je
sub
cmp
cmp
cmpsl
shrb
push
loopne
mull
mov
insl
fnsave
push
out
sub
or
adc
sub
inc
sub
iret
fadd
addb
rcrb
negb
xchg
adcb
icebp
dec
in
dec
adc
or
fs
ljmp
add
cmp
cs
fcmovne
mov
xorl
cmpsl
mov
inc
xor
mov
pop
jbe
jo
sbb
int
cmpsb
pop
mov
cli
aaa
or
jp
das
xor
ja
sti
mov
or
incb
mov
and
mov
add
je
push
xchg
ror
int
imul
xchg
loope
adc
jecxz
lea
dec
outsl
rolb
vmwrite
int3
jb
outsl
adc
mov
fcoml
sub
stc
sbbb
fistpl
jne
sub
repnz
push
adc
imul
enter
or
sub
hlt
ja
cmc
adc
pusha
pop
lahf
test
out
in
pop
push
cltd
xchg
mov
adc
mov
mov
jmp
push
aad
mov
add
xor
ret
arpl
aam
cmpsb
and
mov
lret
mov
adc
insl
push
inc
pop
mov
dec
movl
and
lods
push
pop
push
fmull
pop
sub
sbb
push
mov
leave
xchg
mov
outsb
sar
outsl
push
das
fildll
pop
shr
add
jnp
daa
bnd
adc
dec
mov
fwait
pop
popf
stos
popf
jecxz
adc
xor
mov
or
outsl
mov
add
mov
out
mov
mov
dec
lods
aaa
lods
or
int
xlat
jg
imul
lods
xchg
sub
cltd
test
jmp
sub
xor
inc
mov
sub
loope
fwait
mov
insl
mov
stos
inc
add
js
test
push
sahf
sub
or
imul
xor
ss
hlt
push
pop
jmp
movsl
jecxz
stos
ret
les
mov
dec
je
dec
cmpsb
add
mov
mov
push
negl
enter
bound
xlat
lods
xchg
in
inc
stos
ds
sbb
cmc
jae
testb
xchg
jmp
fnsave
cli
xor
aas
sbb
sti
or
sub
cmpsb
jg
scas
or
orb
ret
push
jbe
adc
in
xchg
sbb
loope
pop
push
shrb
outsl
adc
jnp
inc
add
test
js
movsb
xor
outsb
or
cmp
int
mov
loopne
cmpsl
mov
lds
push
inc
pop
test
enter
repnz
dec
clc
arpl
sbb
scas
jp
inc
push
pop
pop
test
scas
jge
mov
push
std
xchg
mov
mov
ss
test
sbb
call
cs
arpl
push
jge
jno
cltd
xlat
pop
in
sti
xor
mov
pusha
adc
dec
mov
jns
cmp
out
loopne
mov
test
pop
div
mov
xor
out
or
mov
push
xchg
pop
and
cwtl
rorl
mov
pop
jl
inc
mov
pushl
jbe
pop
xchg
mov
inc
dec
pop
cmp
je
jle
fidivl
adc
clc
mov
xor
and
adc
push
outsb
popf
insl
mov
inc
mov
xor
xchg
dec
ds
idiv
out
stc
add
stc
jo
fistl
cmc
movsl
mov
xor
pop
push
add
sub
inc
in
insl
jp
dec
pushl
icebp
adc
pop
lds
leave
push
cwtl
pop
sbb
fildll
dec
inc
xlat
enter
stc
sub
test
pop
xchg
or
aas
lret
inc
jns
pop
movl
loope
std
cmp
fwait
push
out
adc
push
sbb
or
pop
push
ficoml
inc
add
inc
sub
mov
sub
xchg
popf
cmp
sub
mov
xchg
pop
insl
xor
int
out
test
cld
ss
xor
nop
mov
in
lahf
sbb
or
in
xchg
into
icebp
cmpsb
xchg
stos
lds
in
sahf
sub
xor
mov
aad
divb
adc
dec
ficoml
and
arpl
push
dec
sbb
jecxz
int3
sub
add
pop
scas
adc
insl
lds
jae
in
test
mov
add
lret
xchg
shlb
xlat
pop
cli
cmp
out
push
adc
gs
mov
fists
inc
and
loopne
shl
dec
pop
dec
mov
movsl
lret
popf
dec
test
cltd
cmp
jae
and
add
cmpsl
aam
cmc
fists
xor
loop
fsubr
mov
mov
shrb
xor
leave
mov
pop
dec
and
cbtw
rorb
and
mov
jb
mov
mov
and
gs
int3
pop
mov
xchg
cmp
sub
das
xchg
out
icebp
icebp
mov
mov
inc
rorb
insl
nop
mov
xor
or
mov
fbld
jno
push
and
mov
enter
incb
xor
push
cmc
jne
mov
pop
es
jle
add
icebp
mov
sti
or
mov
xchg
les
fsubs
jo
imul
jp
sbb
push
jg
dec
push
and
mov
sbb
popa
hlt
fbstp
mov
mov
push
cmp
enter
fs
movsl
inc
arpl
in
clc
jg
mov
push
call
add
divb
arpl
sti
pop
adc
fistps
pushf
loopne
int
clc
jmp
mov
leave
xor
dec
mov
pop
mov
cs
test
cli
in
lods
dec
mov
imulb
ss
push
mov
push
and
sub
std
sar
pop
repz
les
pushf
out
push
xchg
dec
into
jle
inc
push
adc
popf
sbb
cmp
decb
sahf
stos
mov
ret
xchg
lahf
ret
sbb
pop
push
jno
fwait
pop
sbb
mov
aam
std
mov
sub
or
mov
adc
add
gs
stos
and
xor
mov
outsl
and
aad
addr16
dec
jb
mov
adc
cs
lcall
dec
add
mov
out
adc
jb
adc
xchg
jg
dec
mov
add
test
and
jne
mov
stc
push
xor
or
movsl
dec
lret
nop
repnz
adc
cmp
ja
jnp
frstor
subl
or
lcall
jns
cmp
push
fildl
push
xchg
mov
loopne
imul
sahf
push
leave
dec
or
push
adc
push
call
insb
jbe
sbb
inc
hlt
lahf
enter
xchg
fdivs
repz
repnz
sbb
adc
cmp
insb
pop
rcll
xor
lds
scas
push
cmp
cli
dec
in
mov
push
pop
dec
stc
inc
daa
dec
pop
cltd
lds
shll
xchg
scas
dec
dec
idivb
push
fisubs
xor
mov
inc
movsl
push
push
or
or
mov
test
and
push
leave
xchg
adc
icebp
dec
jb
xor
popa
data16
cli
stc
and
jae
sbb
push
pop
sahf
push
cmp
pusha
sbb
std
pop
pop
or
test
push
xchg
ja
out
stc
sub
test
movsl
pop
sbb
and
sbb
dec
mov
int
cmp
or
fwait
and
sar
add
xlat
aaa
mov
bound
mov
inc
.byte
and
mov
add
cmp
jle
jle
xchg
add
pop
repnz
dec
pop
aaa
jno
mulb
adc
dec
in
fiadds
xor
adc
add
xchg
out
xchg
mov
adc
mov
ret
mov
mov
test
jle
xchg
sbb
loop
ds
or
idivl
mov
mov
movsb
mov
out
and
push
imul
jecxz
popa
addr16
or
test
cs
loope
jne
jb
or
dec
pop
adc
push
adcl
xchg
add
pop
sbb
sub
out
loopne
mov
and
pop
cmc
fmul
cmp
outsl
fisttpll
testl
jne
and
push
jle
inc
xchg
dec
sub
mov
and
mov
ja
cmpsb
shlb
push
cmp
pushfw
call
sub
shrl
lcall
mov
stos
data16
pusha
push
pop
adc
sti
data16
loopne
movsl
or
lret
mov
lret
push
inc
jge
xchg
imul
jns
xchg
add
es
inc
fwait
cmp
mulb
push
sahf
pop
sub
in
sbb
aam
into
mov
test
sub
sbb
cmc
les
add
mov
gs
xchg
inc
cmp
mov
mov
fmuls
xchg
xchg
testl
xor
dec
enter
sbb
hlt
aam
frstor
outsb
ds
xchg
push
dec
lret
jmp
push
dec
mov
inc
mov
mov
pusha
dec
mov
sub
nop
in
pushf
inc
adc
jae
adc
jo
mov
push
std
cmpsb
adc
js
outsl
mov
fidivs
pop
int3
xchg
dec
in
mov
mov
int
push
cmpsb
and
xor
or
nop
jbe
stos
pop
sbb
dec
scas
push
jns
fiadds
push
mov
mov
aad
mov
sub
enter
jnp
leave
mov
dec
mov
xchg
popa
hlt
push
cmpsb
mov
rcrl
out
leave
sub
jnp
xor
inc
mov
and
pusha
or
dec
ss
cld
icebp
scas
and
jge
inc
stc
sti
jo
jo
orb
xchg
mov
lock
xor
mov
test
sub
inc
js
jg
iret
sub
stos
push
je
and
mov
xor
cs
addl
push
adc
aad
aam
idivl
sbb
and
jae
and
sbb
std
mov
push
out
lcall
outsl
push
nop
call
xor
sbb
dec
sarb
push
out
fsts
insb
pop
repnz
js
lock
mov
cmp
or
insb
movsl
mov
cld
adc
ds
sub
in
push
aad
in
dec
mov
js
mov
lea
pushf
mov
dec
dec
repz
stos
stos
cli
out
inc
mov
sub
adc
dec
inc
inc
js
xchg
lods
adc
fsubs
sub
pushl
std
ljmp
inc
xchg
jl
aaa
enter
mov
mov
insl
add
fucomp
mov
inc
cmp
std
test
sub
adc
ja
aaa
cmp
pop
lahf
pop
aad
rcr
test
and
cwtl
cwtl
adc
add
dec
mov
sub
xor
addr16
jg
scas
xchg
mov
in
xor
adc
jl
shll
sub
pop
adcl
jns
jg
loopne
sub
ret
sahf
jb
pusha
mov
call
test
sbb
inc
arpl
cmp
sub
jecxz
in
mov
test
sbb
insb
push
fs
pop
and
cmpsb
push
dec
divb
pop
daa
push
inc
push
into
push
mov
aam
xchg
xlat
push
mov
int3
mov
mov
dec
pop
cld
jp
adc
jnp
stos
cmc
out
xchg
mov
sbb
mov
pop
pop
sbb
shll
jns
push
mov
jo
or
lret
mov
xchg
cmp
shll
lahf
test
ds
mov
pop
mov
enter
or
fbld
or
pop
loopne
js
xchg
xchg
testl
add
cmpsb
ficompl
pop
std
test
ja
sub
jnp
loop
mov
jg
dec
mov
loope
cld
jmp
into
add
sbb
lret
mov
pop
jge
jns
mov
push
out
mov
jg
rcl
sub
imul
and
inc
sub
cmp
mov
daa
xchg
inc
push
sub
test
mov
jnp
pminub
xchg
loop
push
sahf
fldt
mov
jne
adc
out
mov
sbb
pop
sub
sub
sub
negb
or
xchg
mov
push
xor
sti
out
xchg
bound
in
xorl
xor
jmp
fistpl
dec
imul
pushf
sarb
push
and
cli
scas
push
xchg
rol
test
xor
dec
dec
call
mov
sbb
pop
push
lcall
pushf
mov
jno
adc
xchg
movsl
mov
jge
testl
xor
jmp
setae
mov
loope
pop
mov
enter
pop
sbb
in
jp
cmc
mov
adc
dec
dec
xchg
rcrb
pushf
iret
in
xor
fwait
es
xchg
inc
jb
out
sub
jne
fiaddl
sbb
sarb
mov
mov
jmp
hlt
enter
ljmp
add
pop
xchg
jecxz
jno
mov
adc
or
xchg
nop
pop
sbb
stos
xlat
xlat
fcompl
lods
mov
push
and
xlat
mov
sbb
mov
jae
push
jno
sbb
cli
jle
mov
imul
xchg
jo
jno
xlat
mov
out
mov
jl
dec
into
dec
fadds
push
outsb
inc
ss
or
imul
scas
pop
push
dec
pusha
push
dec
hlt
cli
movsb
insw
jae
pop
jge
cmp
sbb
movsl
xchg
cld
mull
push
xchg
adc
stos
mov
in
insb
in
and
jp
loop
scas
outsl
adc
in
push
fdivrs
cmc
test
in
inc
test
xchg
cmp
mov
xor
jmp
mov
shl
fcoms
xchg
mov
sbb
lret
sbb
lret
dec
aas
movsl
push
insl
aaa
stc
pop
ret
adc
mov
or
idivl
jge
cmp
xchg
out
lcall
std
outsb
ja
push
scas
jmp
lods
push
push
push
popw
add
sbb
aaa
sub
jae
sub
cmc
leave
sbb
inc
arpl
cwtl
jno
das
mov
rorl
ja
cwtl
loopne
test
mov
idivl
outsb
das
arpl
popf
inc
je
or
or
int
out
aad
pusha
in
shl
jne
in
inc
leavew
ret
jp
mov
push
fsts
icebp
stc
push
rclb
ja
adc
or
ret
sahf
mov
test
cmp
into
inc
leave
aad
mov
imul
lock
push
js
jp
test
popf
fwait
sti
insb
xor
imulb
and
sti
xchg
imulb
js
fcomp
mov
lcall
sub
sbb
and
sub
scas
movsb
sbb
pushl
lds
lds
jg
push
aam
enter
push
cmp
out
push
cmp
pushf
xchg
xchg
subb
scas
fnstcw
lock
loopne
loopne
and
xchg
cmp
dec
sbb
xlat
and
test
insl
sub
call
push
mov
jb
xorl
mov
adc
fnstsw
push
or
ds
push
dec
incl
mov
jp
pop
scas
imul
mov
inc
jbe
sbb
pop
jo
mov
xlat
loope
scas
std
mov
icebp
and
or
fidivl
aam
add
mov
arpl
es
sbb
lods
aaa
xchg
mov
mov
inc
and
jo
cmp
into
mov
cltd
pop
sub
test
rcr
push
fsubrl
and
add
push
jg
imul
xchg
or
jmp
sub
inc
sahf
dec
inc
sub
mov
ficoms
xor
scas
out
arpl
cmpsb
mov
andl
push
jbe
out
pushf
lret
pop
mov
mov
and
popa
jno
xorl
inc
pop
cmp
fimuls
je
push
sub
xchg
mov
sub
in
and
pop
adc
sub
inc
xor
lahf
cmp
in
sub
mov
sub
aaa
cmpxchg
pop
shl
jp
pop
out
insb
clc
shll
pusha
cmpsb
stos
scas
xchg
pop
dec
insb
adc
and
mov
lcall
out
jo
mov
repnz
fld1
test
stos
push
push
outsb
in
fdivs
push
lods
rolb
imul
stc
mov
sub
xlat
cwtl
jle
enter
mov
inc
xor
in
shll
lods
fcmovnb
addr16
leave
ss
in
outsb
jmp
imul
sbb
out
pop
leave
cli
inc
add
ret
jge
cmp
push
jnp
sub
clc
sbb
imul
scas
dec
mov
dec
adc
xchg
les
sbb
aad
inc
xchg
and
and
mov
xchg
jo
mov
cmpb
int3
xor
lahf
insl
arpl
bound
in
jns
push
shrl
in
aas
push
add
fcoms
mov
cld
add
movsl
in
jecxz
adc
inc
imul
ret
push
in
enter
push
jmp
cmpsl
add
test
outsl
lds
lds
cltd
pop
mov
mov
pop
dec
mov
or
pop
mov
outsl
jnp
lods
push
ret
test
and
movsb
cmpsb
xor
fcomps
iret
inc
mov
xchg
insl
lods
testb
adc
xchg
sub
xor
xor
scas
mov
hlt
dec
lret
xor
and
mov
int3
repz
cmp
fsubl
daa
sub
iret
mov
jne
jmp
push
movsb
mov
add
pusha
push
mov
jo
cltd
cmc
fwait
mov
xor
.byte
.byte
.byte
add
dec
add
dec
add
jo
add
and
and
stos
sub
sar
mov
outsl
mov
daa
lret
cmpsb
roll
mov
adc
push
sbb
pop
iret
xchg
mov
jb
sidtl
inc
adc
idiv
loop
inc
clc
aad
in
pop
and
movsb
push
adc
int3
pop
add
movb
cmp
adc
fcomp
enter
cmp
and
mov
xchg
and
add
push
mov
xchg
out
mov
andl
pop
mov
dec
in
cmp
out
mov
test
jmp
inc
enter
jne
jbe
xor
and
pop
and
mov
scas
dec
inc
movsb
mov
and
fcmovb
mov
ret
fsubl
add
mov
pop
pop
add
cs
roll
push
dec
fwait
cltd
xchg
lret
and
push
cltd
scas
outsb
data16
sub
dec
jne
loopne
jp
adc
xor
sub
adc
scas
in
sub
out
aas
insb
xor
pushl
inc
jp
int
push
and
int
mov
loop
dec
adc
adc
sarb
je
inc
sub
or
mul
and
out
jl
push
lock
into
dec
je
es
popl
dec
sahf
dec
stos
sbb
jbe
mov
xor
xchg
rcll
ja
bound
pop
pop
out
popa
mov
insl
add
femms
lret
cmpb
cltd
dec
sbb
cmp
dec
push
iret
xor
mov
mov
adc
pushf
jns
jbe
stc
jb
push
sub
sahf
fldt
xor
jp
pop
jb
jae
dec
mov
je
in
dec
sbb
inc
in
pusha
push
movsl
lock
es
out
xchg
mov
mov
push
cmpsb
hlt
loopne
aas
sbb
dec
add
pop
xor
cld
test
dec
adc
out
repnz
jge
and
movsl
xchg
fdivrl
stc
into
pop
enter
cmp
lret
inc
shll
push
or
add
sub
in
sub
arpl
jbe
fnstcw
repnz
fmul
adc
xor
add
mov
mov
cmc
adc
scas
aas
fistpl
sbb
outsl
add
outsl
jl
adc
mov
test
das
inc
xchg
xor
lcall
cmpsb
xchg
into
pushf
lahf
and
inc
push
sub
inc
je
mov
fnstenv
or
push
add
les
sti
mov
jae
push
dec
jl
mov
pop
push
outsb
push
sbb
jp
test
imul
push
jmp
or
movsl
les
imul
push
inc
mov
jb
aas
cmp
repz
int3
push
xor
inc
mov
mov
xchg
aaa
mov
mov
xchg
mov
add
mov
loop
xlat
ss
sar
enter
fcoms
jge
mov
or
insb
sbb
cmp
decb
xchg
js
xor
push
adc
and
cmp
lret
not
mov
fs
in
clc
in
jno
sbb
nop
lret
push
test
and
movsl
xchg
js
pop
mov
dec
adc
rclb
inc
popa
push
push
pop
pop
xchg
push
xchg
push
mov
mov
jae
cmp
mov
dec
xchg
push
fstps
add
jns
mov
jl
or
jns
dec
sbb
cld
adc
inc
jbe
enter
mov
jbe
cld
popa
add
sbb
jno
jno
pushl
stos
add
lcall
loope
inc
dec
fnstcw
sbb
dec
in
mov
ret
inc
and
add
mov
xlat
xchg
lret
loope,pt
xchg
mov
mov
lret
pop
out
cli
ds
sub
icebp
pop
or
stos
int3
dec
mov
mov
xchg
in
iret
lds
std
idiv
out
loope
lds
shlb
sti
outsb
push
dec
lds
mov
xchg
pop
lods
dec
call
or
xor
fs
sahf
imul
rorl
roll
shl
vpcmpeqd
setnp
xor
scas
dec
jle
ds
fldenv
rorb
dec
xchg
jb
stos
sub
pop
sbb
aad
push
cmp
jo
test
les
inc
xor
mov
out
outsb
xor
outsb
add
dec
cmpps
mov
add
stc
mov
xchg
mov
dec
and
or
inc
std
test
dec
push
push
in
xchg
lea
pop
or
jl
fsts
shlb
dec
in
cld
add
jne
movsl
xor
adc
std
outsb
push
sub
lods
repz
pushf
sub
rorl
lds
inc
fwait
outsb
jns
cmp
rorl
mov
push
leave
nop
outsl
dec
and
bound
daa
xchg
mov
push
adc
lahf
mov
adc
add
je
pop
fsubs
test
hlt
lret
and
loop
cmp
std
movsl
inc
pop
in
sub
test
ljmp
int3
mov
and
stos
cmpb
adc
xor
test
loopne
popf
xchg
xor
push
and
lret
xlat
dec
dec
cmp
repz
mov
mov
ds
out
inc
lahf
adc
push
adc
sarl
dec
out
push
sub
loop
adc
push
sub
lcall
aam
ret
sbb
and
mov
xor
jmp
cmp
sbb
arpl
insl
or
outsb
iret
inc
sbb
push
jo
div
xor
adcl
push
mov
fwait
add
sti
lahf
mov
pop
cld
cmpsb
dec
or
push
sub
jns
ja
push
xchg
pop
jmp
jmp
mov
pop
mov
in
inc
or
jge
inc
in
cmp
dec
mov
adc
sbb
mov
xchg
jns
repz
cmp
dec
movsl
fbld
test
cwtl
and
popa
lea
push
dec
jg
jmp
mov
movsl
aam
in
mov
sub
mov
mov
out
stc
aaa
popl
fucomip
imul
xlat
push
mov
sub
ljmp
dec
enter
xchg
shll
inc
rclb
inc
aam
dec
and
mov
ds
mov
sub
stos
in
ret
jae
cli
cmc
test
movsb
std
pop
out
rcl
mov
mov
push
jge,pt
std
cwtl
push
xchg
pop
iret
add
int3
sarb
push
mov
sub
stc
jae
mov
and
xchg
out
cwtl
negl
insb
push
repnz
cmpsb
lret
mov
adc
into
cltd
call
andl
pop
clc
test
in
sub
repz
lret
mov
push
mov
xor
int
cmp
loope
add
dec
jmp
push
mov
inc
mov
ds
iret
js
jg
inc
inc
inc
addr16
loope
call
sbb
xchg
cli
and
testb
xor
mov
push
clc
pop
std
sarl
pop
jmp
ss
repz
out
das
ficoms
push
pushf
imul
jo
iret
fidivrs
loop
filds
adc
jg
xchg
sub
xchg
test
jecxz
aad
call
xchg
out
into
test
mov
xor
xor
inc
dec
repnz
nop
push
sahf
lock
mov
pop
xchg
add
pop
rcrb
fisubl
fsubr
fxch
lea
stos
push
popf
ficoms
xchg
mov
clc
add
push
adc
inc
inc
xchg
push
repz
cmpsb
divb
lock
insl
push
pusha
js
cld
mov
cwtl
sub
mov
popf
adc
sbb
inc
or
dec
in
cmp
iret
jb
or
out
ljmp
xchg
push
leave
mov
in
inc
mov
and
mov
jo
lods
and
mov
mov
out
call
gs
into
jp
xor
and
js
push
call
xchg
data16
cmp
pop
cltd
xchg
inc
inc
adc
sub
ret
dec
js
pop
iret
push
repz
or
push
or
cmp
stos
add
stos
mov
orb
lret
loope
inc
add
repnz
jl
cmp
in
lds
mov
arpl
in
test
push
cmp
filds
add
cmpsb
mov
cwtl
push
ljmp
lcall
scas
fs
mov
xchg
sub
xor
mov
lea
in
xchg
movb
jle
pop
adc
aam
std
inc
jae
fnstsw
mov
movsb
push
mov
sbb
loope
xchg
adcl
inc
rcl
pop
sahf
and
mov
popa
mov
fistps
and
bound
and
sub
sub
mov
lods
xchg
pop
adc
stos
inc
popf
movsb
push
outsb
mov
out
sarl
mov
das
pop
shll
rcrb
push
push
into
push
push
fsubs
loop
mov
data16
mov
fs
outsb
lret
aaa
enter
dec
mov
daa
mov
clc
jb
cmp
push
xor
xchg
jge,pn
dec
sbb
jnp
repnz
aam
xchg
clc
sub
cmc
pop
xor
push
xchg
clc
dec
fwait
jo
outsl
scas
xor
stc
outsl
lea
pop
lahf
js
mov
cmp
fisubs
mov
xchg
jp
adc
push
imul
mov
jg
mov
scas
push
xor
negb
pop
mov
ret
stc
movsb
sbb
gs
dec
icebp
stc
jno
les
jnp
mov
dec
scas
pop
test
mov
imul
cmc
test
xor
addr16
rcl
push
mov
outsl
inc
inc
mov
pop
mov
lock
cmp
xor
rcrb
repz
pushf
pop
jg
incb
filds
fists
dec
sbb
mov
jmp
jb
xor
arpl
mov
js
adc
pop
addr16
aaa
lret
pusha
cmp
cmp
pop
int
pop
cmp
sbb
rorl
cmpb
mov
sbb
mov
mov
xchg
subps
inc
js
shll
and
cmp
mov
jno
dec
sbb
ja
dec
jl
insb
inc
lret
sbb
jbe
outsl
mov
push
mov
fdivs
jbe
enter
arpl
jecxz
pusha
push
lahf
pop
inc
out
inc
pop
call
dec
rclb
and
push
arpl
rolb
add
pop
stos
out
push
or
mov
mov
adc
aam
push
xchg
out
pusha
and
ret
mov
jl
and
mov
inc
ror
pop
mov
scas
fwait
add
shlb
mov
scas
xor
xor
in
dec
sbb
jecxz
sub
adcb
xor
iret
sub
pusha
xchg
pop
mov
fcmovnu
push
stos
jle
sub
xor
clc
cmpsl
aas
jmp
push
fstl
sbbb
mov
dec
cmpb
mov
jb
mov
pushf
es
xor
aad
mov
in
out
cmpsl
leave
leave
xlat
lret
push
jp
add
sub
mov
add
push
int
fcoms
sub
dec
repnz
lock
jmp
and
or
pop
mov
xchg
repz
mov
clc
je
xchg
pushf
lock
rclb
pop
sub
and
inc
mov
dec
mov
gs
ss
push
pop
sub
fcoms
enter
and
pusha
nop
jmp
dec
adc
push
mov
loop
cmp
mov
loope
xchg
mov
rolb
out
sarl
push
sbb
cmpsl
insb
repz
mov
shll
xor
stos
daa
adc
stos
push
fidivl
sbb
adc
sahf
shlb
cli
mov
mov
xor
popf
adc
push
pushf
sub
mov
jbe
pop
mov
mov
xchg
out
inc
mov
and
int
ss
jne
sbb
dec
shlb
xchg
das
mov
mov
aad
fs
loope
cmp
dec
or
rcrb
test
dec
into
movsb
out
push
stos
xchg
cmp
clc
push
jb
mov
test
sbb
cmp
mov
rorl
sbb
sbb
shrl
jl
add
dec
or
inc
sahf
push
mov
sub
popa
pushf
jge
xor
push
mov
jbe
in
jnp
fsubr
xor
andl
xor
or
mov
pop
addr16
or
sub
xor
xchg
test
loopne
mov
mov
lock
int
xchg
jecxz
pop
cmc
pop
dec
inc
lret
insl
pminsw
mov
push
popf
in
xchg
ljmp
sbbl
dec
mov
cmp
sbb
scas
lret
sti
cmp
pop
in
call
mov
cmp
jle
jns
pushf
sar
push
das
sub
add
jbe
push
sub
jle
out
xchg
in
dec
je
test
stos
mov
daa
cmc
sbb
cmpsb
lods
add
mov
sub
dec
ja
sahf
call
adc
mov
pop
add
cmpb
pop
inc
mov
cli
jle
loope
adc
repnz
fldt
jne
and
popf
fwait
rol
xor
loope
mov
ja
std
loop
mov
cmpsb
or
ljmp
out
out
shlb
jmp
ret
push
and
xchg
xor
jns
filds
rcl
out
sbb
jno
inc
mov
push
pop
loop
pop
add
push
jno
or
dec
mov
aaa
popa
fimuls
mov
ror
lods
xchg
xor
and
faddl
dec
xor
or
data16
push
sub
test
push
mov
jae
testl
subb
mov
mov
shrb
or
xor
fisubrs
xchg
ficoms
add
es
rclb
pop
ss
ljmp
insl
push
cmpsl
pop
je
pop
int3
sbb
inc
ljmp
aaa
cmp
dec
mov
rclb
push
dec
mov
into
mov
xchg
les
mov
mov
leave
fdivrl
pop
inc
dec
pop
adc
cltd
leave
cmpsl
ljmp
mov
xchg
adc
ret
in
jle
fisubrl
cmp
lret
adcl
mov
cwtl
cmpsb
fcmovne
or
add
mov
jae
mov
fisubs
lret
int3
mov
pop
mov
in
fwait
leave
cs
inc
scas
mov
dec
pop
aam
mov
cmpsb
lret
push
inc
xchg
shll
popa
mov
and
xchg
cs
mov
aad
cmpsl
outsl
imul
pop
movsb
loopne
shlb
stos
mov
xor
ret
int3
call
mov
inc
gs
dec
mov
xchg
push
das
jnp
and
push
test
sub
inc
inc
rcrl
jne
or
jle
pop
icebp
pusha
popf
xchg
fcoms
mov
mov
in
mov
lret
xchg
inc
inc
mov
aas
sbb
lahf
repz
cs
lds
and
xor
sbb
sbb
mov
pop
add
xor
pop
stc
cmp
fmull
push
cmp
int
sbb
sti
popf
fisttpll
stos
cmpb
cmp
std
sub
shlb
fdivrl
clc
cmp
into
ljmp
jmp
popl
lods
scas
xor
sbb
pushl
lret
shrl
inc
js
into
mov
sahf
mov
mov
xor
xor
lea
sbb
fcmovnbe
loop
or
leave
sbbl
cltd
daa
adc
idivb
in
jecxz
fsubr
in
nop
movb
subb
mov
in
loopne
jl
sarb
pop
add
repz
out
dec
xchg
movsb
xchg
bound
cmp
inc
in
je
loope
test
xor
std
inc
mov
lahf
in
xor
es
push
les
repnz
lock
idivb
fcoms
mov
out
mov
mov
dec
insb
cld
outsb
mov
or
ret
dec
mov
inc
mov
cmp
pop
sub
or
pop
fs
dec
xchg
push
cmpl
mov
leave
mov
adc
lahf
pop
or
dec
sbb
xchg
fistps
dec
jg
sbb
cmpsb
mov
ret
adc
repnz
idivb
cli
push
fdiv
adc
into
cmpsl
push
insb
scas
pop
subb
aas
sarb
out
in
pop
mov
dec
adcl
test
dec
dec
xor
xor
sti
dec
movsl
mov
xlat
in
lods
outsb
and
shl
leave
test
fadd
or
mov
repz
int3
lahf
ljmp
jmp
ficomps
aaa
gs
enter
into
test
bswap
add
clc
imul
inc
sbb
cmp
movsl
jle
shl
mov
push
mov
daa
adc
loope
xor
add
or
scas
and
sar
sub
out
sbb
mov
jo
and
sbb
push
inc
dec
ss
adc
xor
jne
dec
pop
xor
data16
bound
xor
aaa
into
test
add
fisubrs
pop
pop
ret
dec
rcll
lods
imul
popa
add
mov
xor
jmp
xor
dec
add
xor
int
dec
shr
dec
mov
stc
mov
mov
out
and
mov
in
dec
imul
sbb
insl
pop
aad
jne
std
je
mov
sahf
push
push
addr16
jne
fdivrs
xchg
popf
out
ds
add
idiv
fisubs
pop
icebp
loope
or
aaa
movsb
lock
rcrl
mov
jg
imul
push
cmp
in
sub
sarl
cli
pop
gs
mov
out
mov
lcall
aas
arpl
lret
aaa
icebp
jno
jl
sbb
inc
and
adc
sub
mov
in
icebp
repz
lret
xchg
pop
repnz
push
ss
adc
or
stc
adc
sbb
insl
fs
movsl
aaa
test
sbb
insl
sbb
push
pop
xor
push
push
xchg
outsl
xchg
aaa
xchg
push
pop
cmp
mov
jnp
leave
inc
leave
cmc
and
inc
jns
mov
xchg
xor
cmpsl
mov
xchg
scas
mov
test
push
jo
pop
push
xchg
sub
bound
aas
jbe
mov
lea
stos
std
or
xor
test
mov
mov
enter
js
and
dec
cli
and
xchg
mov
push
add
cmpsb
cmc
in
mov
cmc
lret
into
mov
sub
mov
xor
xlat
xor
shrl
pop
imul
adc
mov
in
mov
ret
sub
jp
loope
mov
and
sub
andb
cmp
int3
lahf
xlat
out
stos
mov
add
sub
cltd
mov
sti
outsb
xor
push
in
mov
mov
mov
push
mov
data16
adc
ljmp
or
stos
rcrl
dec
outsl
inc
xchg
xor
adcb
jne
xchg
loop
push
pop
mov
sbbl
insl
je
push
mov
in
sub
and
repz
sub
decl
iret
inc
cmpsb
decl
add
xchg
dec
data16
and
dec
mov
jne
mov
mov
sbb
fbld
jne
pop
addb
fld
mov
mov
jnp
stc
out
pop
sub
dec
sub
cld
or
add
adc
jno
pushf
xchg
cmpsb
sbb
adc
clc
xor
xchg
add
jge
mov
addr16
or
cld
xor
push
add
jno
loope
negb
xor
sub
aam
call
int
push
cmc
dec
int
push
repnz
shl
and
cmp
cmp
ret
in
in
cmc
rol
shrl
and
shlb
shlb
inc
ret
pop
cmp
mov
lock
jmp
mov
mov
dec
fildl
cmpsl
push
and
pop
jmp
in
sbb
dec
and
scas
cmp
stos
loope
aam
push
sar
subl
mov
pop
repz
lock
jge,pn
xchg
sbb
das
daa
mov
add
and
push
cmp
dec
fdivl
mov
push
and
adc
cmp
jle
inc
xor
mov
or
push
mov
hlt
push
mov
pop
sahf
jle
pop
mov
or
mov
hlt
fidivrs
push
dec
int
push
aam
xchg
out
dec
fnstsw
cmp
jbe
fldt
lret
call
fs
mov
daa
es
inc
lock
lea
lock
adc
addr16
shll
shr
jmp
mov
imul
add
jns
cmp
ret
fcmovu
in
pop
pop
ja
jno
xor
ljmp
stos
insb
imul
mov
xor
adcl
mov
add
pop
lcall
dec
or
cmp
out
mov
lret
lahf
fcom
inc
enter
adc
leave
pop
xor
popa
ds
cmpsl
mov
pop
xchg
ret
lahf
pop
je
push
fdivs
xchg
xor
idivb
xchg
jns
pop
sub
pop
fdivl
stc
out
pop
out
dec
mov
insl
enter
adc
cmp
aam
std
test
adc
fnstcw
test
lret
movsl
sbb
lahf
lea
fidivrl
outsb
sub
push
test
sub
jbe
xchg
inc
in
mov
out
in
lock
js
dec
sar
dec
mov
cmc
sbb
cmp
out
shll
je
pop
in
xchg
xchg
addb
arpl
aad
adc
mov
imul
stos
punpckldq
sbb
loopne
cmp
push
xor
shr
rcr
cmp
sarl
mov
and
xchg
sbb
js
stos
xor
sub
fcmovnbe
sub
shl
or
mov
xchg
jne
lcall
jns
cs
xchg
fcoms
adc
insb
push
aam
jns
adc
test
int3
push
or
loope
xchg
sarb
dec
mov
pop
jmp
stc
fcmovnu
stc
insl
xlat
sbb
add
and
shl
rorb
adc
pop
loop
dec
fucomp
out
insb
fwait
and
push
jp
xor
dec
nop
jnp
lret
pop
adc
out
mov
into
call
test
insb
imul
lods
lret
jl
rorb
ret
jge
inc
mov
les
enter
add
sahf
gs
xchg
mov
cmc
jle,pn
mov
dec
pushw
and
jle
into
orl
jmp
bnd
sti
mov
mov
and
push
cmp
xchg
gs
call
push
std
imul
xchg
xor
sub
jle
sub
scas
shr
xchg
sbb
ja
mov
xor
inc
arpl
cmp
push
and
push
or
out
stos
stos
daa
popa
xor
sbb
pop
pop
mov
xor
sbb
addb
aad
push
mov
sub
mov
sbb
test
sub
mov
jns
and
mov
jmp
mov
mov
out
es
cmp
sbb
cltd
fidivl
sub
jmp
cmc
aad
sbb
sbbb
ss
subb
repnz
in
pop
ja
cltd
add
mov
add
mov
rolb
call
cltd
movsb
lret
sahf
and
add
cs
ss
mov
in
sub
adcl
les
pop
pop
add
or
dec
push
mov
mov
and
push
nop
aaa
mov
adc
dec
popa
xchg
adc
aaa
out
adcb
sbb
hlt
lret
jnp
aam
je
hlt
repnz
push
dec
cmp
push
into
lahf
out
leave
loop
pop
icebp
xchg
call
cltd
mov
jae
xchg
movsb
fistps
push
sbb
jne
sbb
cmpb
pop
loopne
and
cmpb
and
mov
int3
mov
sub
mov
add
inc
lods
jg
pushf
dec
notb
mov
dec
mov
mov
js
and
in
lahf
xchg
mov
cmp
cs
jb
jle
xchg
cltd
push
scas
jl
addl
cs
xchg
in
mov
xor
and
jg
scas
rcll
lret
cs
icebp
jp
out
popa
mov
dec
test
outsb
mov
adc
inc
xchg
xchg
scas
cmc
mov
jns
lds
clc
sbb
dec
sbb
push
ret
adc
xchg
in
in
stos
push
xchg
jl
push
pop
mov
loope
std
add
fadd
mov
outsb
lahf
test
sub
mov
stos
or
mov
out
fmulp
xlat
jecxz
fwait
mov
mov
mov
jecxz
or
push
cs
mov
out
imul
mov
mov
lods
jecxz
dec
ficompl
xchg
push
adc
movsl
sti
in
and
iret
add
in
sub
adc
das
push
add
scas
or
mov
or
and
adc
imul
push
sti
adc
sbb
test
notl
ret
nop
fistl
scas
xor
cmp
xor
xchg
lret
outsb
and
fildl
mov
cld
mov
xor
and
mov
mov
cmp
cltd
mov
shll
dec
jp
in
xchg
mov
xor
imul
inc
inc
or
cltd
xchg
sub
test
gs
mov
in
or
movsl
sahf
push
dec
fldl
and
xchg
inc
xlat
outsb
mov
sbb
mov
xlat
hlt
prefetch
or
mov
sbbl
cmp
lea
orb
or
mov
mov
xchg
mov
js
cmp
xor
sub
cwtl
rcrb
fsubl
jge
jnp
outsl
cmpsb
jae
ja
mov
adc
outsb
xchg
gs
test
mov
sbb
pop
xor
xor
mov
push
jge
push
nop
cmp
adcb
push
jge
gs
cwtl
sub
gs
pop
pushf
fistps
stc
je
mov
cmpsb
fcoms
cmp
mov
iret
jmp
dec
or
adc
pop
out
inc
xor
cli
and
lcall
mov
jbe
stc
ljmp
push
inc
subl
mov
push
out
xchg
adc
mov
repz
dec
int3
jmp
aas
mov
xlat
loopne
pop
pushw
out
mov
dec
pop
shl
dec
inc
inc
dec
scas
mov
fmuls
dec
push
in
ljmp
dec
cld
sub
into
pop
and
lahf
outsl
xchg
iret
add
lahf
cmp
mov
inc
repnz
fdivrs
fwait
sbb
sbb
insb
pop
je
mov
dec
mov
mov
push
and
ds
mov
xchg
fistps
or
lcall
enter
stos
data16
in
aas
mov
notl
push
int
mov
mov
ja
or
addb
xchg
or
scas
aam
fidivs
je
inc
add
fmull
xchg
and
insb
push
loopne
mov
pusha
addr16
rorb
jno
push
mov
mov
xor
jae
adc
mov
cmpsl
das
and
mov
or
sbb
xchg
xchg
fists
mov
pushf
adc
xor
mov
mov
icebp
iret
daa
or
adc
push
push
loop
stos
xchg
jb
xor
rcrb
pop
pop
pushf
add
and
out
fisubl
data16
stc
hlt
addr16
stc
push
lock
fsubrl
aas
mov
adc
push
std
jo
sahf
jl
iret
test
lods
xchg
fsubrl
pop
ret
cmp
inc
jl
cli
movsl
mov
test
jns
jae
idivl
ficoms
and
cmp
mov
mov
inc
pop
outsl
mov
and
sbb
push
and
mov
push
adc
push
andl
out
andb
shlb
sub
jmp
push
andl
sub
not
mov
push
mov
mov
inc
in
shrl
mov
test
sti
xchg
lds
aam
popf
sbbb
xor
das
mov
hlt
inc
and
add
mov
dec
sbb
mov
out
pusha
mov
sub
lret
or
pop
push
das
call
xchg
andl
fnstcw
adc
adc
rorl
or
jmp
mov
fwait
dec
call
push
mov
jle
sti
inc
cmc
or
or
inc
cmpsl
jbe
stos
movsl
cmp
les
data16
mov
enter
dec
stos
or
jl
rcll
sub
mov
inc
in
sub
addl
xor
lea
aam
cltd
inc
sbb
push
xchg
add
loope
int3
sub
repz
int3
xor
repnz
cmp
xor
mov
sbb
add
sbb
xchg
push
in
mov
cwtl
outsl
scas
les
imul
repz
mov
xor
pop
lds
std
in
call
push
test
push
stos
jno
fdiv
pop
pop
lahf
out
or
inc
mov
dec
push
and
divl
enter
adc
sbbb
mov
mov
call
xor
or
inc
xchg
mov
jnp
lods
dec
lea
inc
or
and
fcoms
sub
pop
inc
pop
dec
inc
jae
pop
pop
jg
enter
ljmp
in
cmpsb
jge
pop
sub
push
jnp
lret
aaa
or
imul
shl
das
xchg
shr
pop
inc
mov
ret
or
sbb
mov
test
fs
stos
pop
fs
pop
mov
ret
pop
jnp
ret
stos
xchg
or
dec
scas
dec
adcb
andb
xor
inc
mov
fldenv
pop
mov
flds
mov
pop
into
mov
in
cld
xchg
fldl
loop
jg
ds
rclw
push
scas
cmpsl
mov
push
test
lahf
xchg
icebp
into
jno
sbb
jnp
xchg
and
jbe,pt
data16
add
loopne
es
jbe,pn
nop
inc
shlb
inc
adc
scas
inc
jle
decb
sti
std
stos
cmp
pop
scas
jp
lods
int3
mov
inc
dec
lock
mov
outsl
adc
pop
and
mov
shl
jmp
push
cltd
aaa
out
and
call
out
mov
popa
dec
sub
xchg
ret
leave
push
and
sbb
push
push
push
xor
ret
daa
cwtl
sub
push
insb
test
jecxz
rcrb
insl
movsb
subl
sub
sbb
mov
popa
call
sub
mov
lret
push
imul
in
ja
and
cli
ret
fdivrl
rcrl
inc
sbb
lods
out
data16
stos
xchg
sahf
mov
shl
out
jno
mov
fs
ret
and
lea
in
xor
movsl
sbb
sbb
ret
pusha
cli
jae
pop
xchg
mov
idiv
repnz
jo
repz
xor
jg
cld
call
rcrb
and
xchg
sbb
movsb
dec
sahf
mov
pop
add
sub
data16
repnz
cmp
in
lods
pop
cmp
incb
cmpsb
stc
rcrl
lcall
int
mov
adc
mov
jge
adc
adc
sbb
call
pop
loop
jge
nop
sarl
gs
dec
mov
push
mov
addr16
cmp
and
lds
adc
xor
cmpsb
shlb
sbb
popa
pop
test
pop
mov
inc
in
mov
mov
fistps
fstps
cmp
mov
outsb
cmp
push
mov
mov
popa
pop
arpl
scas
shrb
ret
push
movsl
dec
idivl
or
jae
mov
sub
scas
or
add
jl
cltd
ret
lock
and
sbb
sub
repz
mov
shlb
sahf
sub
outsl
in
ficoml
cwtl
fdivr
mov
mov
add
dec
jecxz
adc
xchg
ja
repnz
jecxz
int
sub
cld
xchg
xor
add
pop
pushf
int
mov
stos
int
jge
jmp
mov
cmpsl
test
out
xchg
ljmp
clc
sbb
or
and
pop
rclb
popa
mov
imul
insb
mov
mov
mov
mov
jl
mov
stos
imul
leave
add
mov
ficompl
pop
push
imul
xchg
mov
or
xor
pop
pusha
or
out
std
int
fbld
pop
mov
rolb
shll
jge
ss
cmp
out
xor
fmull
and
sbb
mov
push
mov
cmpb
and
fwait
bound
push
mov
inc
pop
cmpsb
sbb
jno
mov
outsl
mov
test
jle
xor
loop
loopne
dec
inc
test
sbb
inc
or
mov
add
cltd
mov
push
lock
enter
fldl
data16
mov
imul
pop
loope
cltd
mov
jg
cmp
wrmsr
loopne
arpl
and
inc
int3
in
sub
jo
mov
pop
arpl
aam
cmp
out
addr16
js
clc
fistps
cmpsl
cmp
cmp
cmpsb
ret
pop
out
and
mull
mov
inc
or
call
fs
outsl
cmp
dec
dec
iret
das
or
cmp
mov
and
in
or
int
leave
out
out
adc
call
mov
int
xchg
inc
mov
jb,pt
jecxz
daa
mov
fisttpl
xchg
and
jecxz
or
fstl
adc
jg
add
imul
int
push
and
hlt
jge
jne
push
and
test
sub
jmp
jle
adc
xchg
xchg
lahf
sbb
call
leave
jp
pop
je
out
lea
cmc
jne
push
push
std
sub
arpl
cltd
icebp
scas
dec
je
push
adc
dec
ds
xor
maxps
xchg
jl
fstl
push
mov
imul
jle
push
or
lcall
jnp
dec
scas
xchg
cs
stos
mov
push
mov
sti
or
jbe
nop
push
call
and
out
mov
es
push
mov
xchg
movsb
clc
xchg
loop
sbb
or
add
aad
mov
ficompl
jp
cmp
nop
mov
lock
jo
mov
jbe
inc
movsl
mov
xor
mov
addr16
nop
shlb
dec
fisubrs
mov
sbb
dec
lret
adc
and
lods
jnp
out
inc
lret
daa
insl
or
push
push
mov
xor
cmp
sbb
mov
mov
out
push
lds
lret
xor
scas
cwtl
inc
inc
jle
orl
jp
repnz
pop
mov
pop
add
loop
cmp
or
sbb
mov
sub
cltd
fidivl
inc
lcall
adc
jmp
les
shll
push
cwtl
call
jae
movsb
sub
jb
fldenv
adc
loop
mov
or
fisubs
insl
pusha
inc
lods
adc
jns
xchg
sahf
and
enter
push
stos
add
pushf
jmp
mov
lret
xor
outsl
aam
getsec
jecxz
adc
std
pop
jmp
or
test
scas
movsb
flds
es
push
es
mov
ret
cltd
vmread
mov
test
pop
xor
clc
and
leave
lahf
pop
mov
add
push
sbb
inc
inc
cmp
lock
les
mov
and
popa
adcb
mov
cmp
xchg
mov
nop
jecxz
ret
push
loop
in
mov
add
scas
push
out
inc
lds
ffreep
mov
inc
add
es
das
repz
test
adc
inc
dec
sub
and
fistpl
jbe
sarl
call
xor
rorl
dec
inc
fld1
icebp
mov
inc
lods
xor
ret
iret
adc
icebp
jl
lret
ficompl
push
stos
jmp
popf
jg
loopne
mov
pop
rclb
and
fmull
les
leave
je
mov
sub
repnz
stos
pusha
lds
mov
sbb
movsl
pop
es
movsb
sahf
in
xor
xor
faddp
push
cwtl
aam
mov
fbstp
js
enter
insl
cmpsl
inc
cltd
jg
movsl
cltd
sahf
jle
cmp
push
xbegin
lret
imul
aaa
cmp
mov
lret
xor
xchg
mov
nop
push
dec
add
pop
cs
popa
add
imul
push
push
sahf
int3
loop
pop
sahf
mov
mov
loope
shll
jne
movsb
mov
mov
ja
lret
icebp
ret
sub
arpl
dec
push
sbb
inc
out
mov
dec
cld
out
jnp
fbld
xlat
jl
push
jb
subl
nop
push
or
sub
jnp
push
aad
or
xor
pop
out
popf
jne
fadd
xor
mov
lret
and
nop
add
sbb
filds
pop
out
mov
adc
ja
sbb
cmc
icebp
dec
xchg
into
sbb
cli
stc
pop
mov
es
inc
xorl
aad
popf
dec
movsb
adc
pusha
sbb
mov
pop
test
sub
mov
jg
pop
js
and
data16
add
ljmp
in
inc
fidivrs
bound
pushf
dec
add
pushf
pop
sbb
lcall
leave
jbe
adc
adc
pop
and
or
xor
sti
addr16
test
or
push
sahf
es
inc
ficoms
jne
inc
adc
outsl
xor
cmp
sub
push
push
and
mov
aaa
clc
roll
xchg
xor
pop
arpl
push
jae
outsl
data16
sub
pusha
mov
dec
cltd
cmp
push
test
stc
push
insb
adc
iret
enter
mov
mov
add
pop
sbb
mov
or
mov
hlt
and
jae
push
push
inc
test
pop
jno
mov
jge
ss
sbb
mov
mov
outsb
incb
rep
dec
xor
sti
stos
in
mov
stos
dec
out
xor
mov
in
mov
push
push
rcrb
push
outsb
iret
insb
popf
pop
inc
and
push
in
jmp
icebp
stc
mov
mov
pop
ret
mov
sbb
lahf
mov
movsl
repz
mov
ds
jo
icebp
xor
hlt
aad
nop
mov
out
inc
push
cmc
jge
insb
cld
subl
out
sub
les
pop
sbb
mov
pop
out
ficomps
pop
cmpsl
dec
xchg
aaa
cmp
mov
push
movsl
or
icebp
jns
testb
jnp
mov
imul
das
movsb
jne
add
hlt
mov
sbb
cld
add
jmp
and
sbb
or
fwait
bound
les
mov
cld
ret
xor
inc
fsts
sbb
pop
mov
xchg
sbb
mov
repnz
lahf
cs
bound
sar
dec
movsb
dec
xchg
mov
xor
xorb
mov
push
addr16
or
lock
mov
xchg
sub
addr16
dec
jecxz
xor
stc
sbb
jo
mov
cltd
imul
and
jmp
mov
xchg
add
jnp
push
mov
sbb
mov
push
js
push
stos
xor
cmpsb
mov
mov
loope
hlt
fnsave
dec
and
addr16
ficoms
push
imul
sbb
roll
in
bound
mov
xchg
pop
rcrl
adc
sbb
imul
mov
dec
xchg
sub
push
addl
int
jp
adc
mov
outsb
je
repz
pop
iret
pop
je
mov
push
iret
push
mov
gs
gs
fidivrl
xchg
jge
pop
jmp
dec
test
mov
test
push
test
jg
add
inc
adc
jo
sbb
outsb
sbbl
rol
adc
adc
push
pop
or
sti
adc
fs
add
clc
loopne
int3
arpl
sarb
adc
push
mov
jo
sub
stc
les
dec
call
enter
cmp
mov
sub
mov
pop
mov
popf
lahf
stc
andb
lahf
cmp
mov
je
aad
in
mov
xchg
and
icebp
and
insb
xchg
shrl
xchg
mov
popf
cwtl
fsubrl
lret
and
push
ljmp
xor
mov
adc
cmp
mov
sbb
xchg
pop
roll
sti
insl
div
cmp
xor
sti
pop
sub
pop
inc
aas
cmp
gs
jg
dec
test
mov
lods
ljmp
mov
insb
adc
lret
add
ja
xchg
popa
inc
dec
pushf
mov
insl
and
addr16
mov
sub
cmp
movsb
and
lfs
cmp
out
mov
mov
xchg
dec
lret
jle
testb
cltd
ficoms
add
dec
add
mov
inc
push
dec
das
add
es
nop
aaa
ret
push
aad
adc
mov
push
fcomps
inc
notb
xor
pop
ja
xchg
and
scas
jae
adc
inc
or
mov
clc
mov
push
fldt
pop
jp
mov
enter
push
inc
push
rcr
jne
jo
lods
sub
xchg
cld
dec
cmp
imul
pusha
stc
cmp
push
add
cmp
pop
lock
cmp
mov
mov
xchg
ds
xchg
and
xchg
add
dec
mov
fbstp
inc
ret
cmpsb
pushl
mov
xchg
mov
xor
fwait
inc
scas
iret
mov
inc
jge
jl
push
inc
out
ljmp
in
int
xor
pop
incl
or
mov
movsl
fwait
sub
jbe
lcall
or
ds
xchg
mov
pop
mov
sti
mov
inc
xor
mov
xor
iret
outsl
gs
mov
and
mov
inc
dec
xor
mov
push
in
mov
xor
cmp
imul
fadds
sub
mov
fwait
cmp
xchg
push
out
mov
xchg
pop
pop
mov
adcb
dec
or
inc
je
mov
mov
fisttpll
popa
stos
jbe
sub
jmp
ljmp
push
or
aad
cmc
pop
jnp
sbb
jno
xlat
mov
adcb
das
rcll
add
das
cmp
ljmp
and
popa
mov
jno
xor
js
jg
daa
add
mov
jecxz
loope
xlat
sbb
push
xor
repz
dec
jp
je
das
mov
sub
and
add
adc
iret
and
movsl
mov
sub
dec
jp
mov
xchg
shrl
fistl
dec
into
or
mov
into
test
and
out
cltd
or
dec
stc
push
sbb
push
ljmp
icebp
adc
aam
imul
xchg
mov
pop
decb
dec
aad
ret
call
push
mov
in
inc
cltd
aas
mov
out
dec
xchg
push
sbb
in
outsb
in
aas
test
xchg
inc
cmc
or
jmp
push
jo
lods
repz
scas
sbb
iret
jns
xchg
inc
pop
push
in
fisttpl
xchg
cwtl
call
in
sarl
mov
xor
lds
pop
jmp
inc
lret
fs
inc
outsl
xchg
jbe
or
insl
mov
ficoml
sbb
or
xchg
push
outsb
out
pusha
fs
mov
jmp
mov
fwait
push
stos
pop
ret
lea
je
add
data16
inc
arpl
arpl
ret
jmp
fcomps
lret
cmpsw
jg
jg
xlat
push
jp
in
cmp
icebp
pusha
cltd
out
repz
adc
push
jbe
xor
out
pop
mov
aaa
cmp
or
push
inc
shl
and
xor
stos
add
icebp
pop
inc
lcall
fists
outsl
push
std
aas
out
add
cmpb
mov
fstpl
das
mov
gs
lcall
jmp
push
mov
and
arpl
and
sub
mov
negb
inc
popa
push
cmc
ds
dec
pop
mov
jge
mov
test
inc
ljmp
lret
shrb
jbe
loopne
and
cmp
pop
paddusb
in
mov
stos
inc
mov
leave
mov
scas
xorl
inc
out
xchg
repnz
ret
push
cmpsb
push
inc
xlat
jp
pushfw
into
dec
inc
push
dec
add
ret
outsl
inc
mov
call
test
lret
repnz
test
cli
jae
shll
jge
std
vpunpckhqdq
inc
add
aaa
adc
add
out
fistpll
jge
xchg
ds
sahf
divb
mov
mov
inc
je
je
aad
sbb
pop
inc
lret
push
jbe
xor
sahf
out
add
ja
gs
inc
xor
pop
aad
cmpsb
into
xor
or
enter
mov
sub
push
fstpt
gs
subb
mov
jnp
jb
repnz
dec
clc
push
lcall
lock
push
popa
mov
cli
outsb
inc
pop
inc
mov
fimull
test
mov
daa
pop
sbb
fnsave
shll
jecxz
je
js
in
sub
neg
jb
mov
dec
cmp
jecxz
mov
jb
enter
sbb
jg
xchg
loop
jo
push
adc
mov
lcall
dec
push
pop
nop
push
roll
and
fwait
mov
lcall
in
out
push
push
lock
jecxz
int3
mov
mov
and
xor
leave
aad
sub
ds
sbb
in
repz
sbb
xor
shlb
dec
sub
in
or
mov
out
fsubrs
mov
jo
jl
shl
sbb
stos
imul
push
sub
mov
cs
cmc
inc
jmp
pop
orl
dec
ret
mov
and
jmp
mov
push
lcall
mov
int3
aas
xor
xchg
add
bnd
sbb
testl
aaa
or
les
lcall
cmp
nop
jg
adc
loope
out
sub
cmp
xchg
out
pop
out
in
shl
jle
add
iret
jae
pop
imul
xchg
cltd
jmp
xlat
and
jg
sbb
jl
jb
push
lds
daa
or
jle
and
stos
mov
mov
bound
mov
mov
movsb
fstpt
dec
stc
stc
or
adcb
mov
call
cltd
jl
lahf
arpl
push
fnstcw
int3
lcall
inc
enter
pusha
std
stos
mov
add
lock
xor
pop
aam
mov
mov
pop
std
cmp
jbe
dec
rcrl
in
outsw
fcmovnu
orb
pop
xchg
decl
cwtl
sub
xchg
mov
shr
dec
aam
adc
or
out
mov
sbb
dec
ss
cmp
test
and
sub
jl
jnp
lods
imul
add
xchg
jnp
call
add
jmp
mov
fbld
lea
pop
pop
inc
mov
hlt
mov
bound
mov
jmp
mov
sub
enter
in
insl
or
leave
rcrl
jns
mov
xor
jg
fmuls
xor
mov
aaa
and
int3
pop
dec
sub
pop
cmp
or
xchg
mov
shll
and
test
add
cli
loopne
inc
mov
cwtl
in
jb
sbb
xchg
xchg
cltd
xor
xor
or
inc
xchg
outsb
mov
pop
and
flds
jnp
lock
mov
addr16
cmp
aam
int3
lcall
out
jb
cmp
and
data16
fdivl
xor
into
jae
adc
pop
inc
mov
test
mov
mov
outsb
and
lea
and
mov
fistl
add
dec
rcll
out
jg
aam
je
ljmp
add
or
mov
mov
bound
cmp
icebp
sub
shll
lds
pushf
dec
out
jns
test
dec
orl
rorl
dec
popa
mov
gs
jl
sub
lahf
shrb
add
push
pop
cmp
jmp
add
gs
xchg
inc
xchg
dec
inc
iret
push
pusha
xor
inc
xchg
xchg
sbb
or
enter
stos
out
jge
xor
push
mov
push
xor
xorb
andl
push
cmpsb
ror
xchg
fidivs
pop
pop
xor
cs
es
xchg
xor
mov
ficompl
scas
daa
outsl
mov
jae
movsl
shl
in
arpl
push
inc
dec
jmp
aaa
cmpsb
and
cli
jg
es
mov
mov
icebp
mov
jg
out
fsubl
pop
popa
pop
pop
jbe
mov
addr16
jne
and
inc
dec
lahf
push
and
xchg
loop
or
cmp
scas
mov
push
inc
inc
sbb
mov
cli
sti
jb
mov
jno
xor
je
mov
push
imul
push
inc
daa
daa
in
push
in
in
or
add
stos
frstor
lahf
add
bound
mov
leave
mov
rcrl
aad
ljmp
sar
sbb
xchg
jns
inc
in
pop
xchg
cmp
decl
imul
in
std
mov
mov
mov
loope
sbb
ljmp
jmp
pop
mov
jl
mov
iret
push
lea
pop
fiaddl
dec
jns
cld
inc
negb
ljmp
addr16
enter
lods
inc
sub
mov
dec
inc
mov
cli
add
out
or
sbb
mov
insb
xor
stc
push
push
push
shlb
push
repz
inc
pop
movsb
movsl
out
and
adcb
xchg
add
sub
push
pop
mov
xlat
dec
ss
repz
mov
fs
fstpl
and
repnz
dec
sub
shrb
in
je
icebp
mov
pusha
cs
push
xor
push
test
pop
sbb
out
cli
out
fbstp
xlat
fnstsw
inc
lret
mov
cmpsl
loop
in
jno
je
in
jnp
push
sti
add
fcomps
or
push
mov
mov
cmpb
lret
fisttpll
call
fdivs
inc
scas
add
cmc
popf
inc
adc
and
dec
mov
adc
pop
mov
ss
inc
loopne
mov
orb
sahf
jbe
les
and
stos
push
push
jo
cmp
out
and
std
stos
test
mov
jge
into
push
cmpxchg
jle
movsl
mov
ret
cmp
int3
mov
mov
pushfw
pop
sbb
nop
rorl
lret
adc
push
mov
cld
cltd
jg
push
in
inc
rorl
nop
cmc
adc
mov
js
je
js
shrb
and
jmp
xchg
das
mov
fldl
add
pop
sbb
jl
ret
xor
jle
lods
repnz
jmp
pop
push
fwait
popf
test
stos
inc
pop
sub
mov
pop
mov
ret
addl
out
sub
inc
push
cmp
add
out
jg
pop
popa
in
and
cmpsl
mov
jbe
repz
ljmp
cmp
ljmp
push
sbb
push
lcall
jno
insb
push
nop
stc
notl
xor
xor
cs
mov
fcomi
pop
mov
pop
sti
and
jbe
cmpsb
sbb
mov
cmpl
enter
mov
hlt
ret
add
jl
call
xor
std
or
inc
outsl
mull
clc
mov
dec
sub
jae
pop
rclb
sbb
out
rorl
cs
fsubrp
inc
sbb
in
dec
or
in
cltd
push
das
sub
xchg
pushf
leave
les
pop
repnz
dec
push
lea
inc
jo
imul
xchg
push
insb
lods
xlat
sbbb
ficomps
fidivl
mov
icebp
pop
nop
leave
jnp
lock
test
pop
xchg
xchg
leave
out
cmpsl
cmp
mov
sbb
fidivs
and
mov
sub
jmp
push
mov
cltd
int
sbb
lods
in
and
stos
dec
xor
cltd
bound
pop
gs
cwtl
shlb
or
test
movsl
fimull
loop
fs
xor
out
lret
ret
and
jmp
add
or
in
vmovups
add
cmc
xchg
icebp
inc
cmp
push
inc
add
and
mov
jb
push
decb
dec
loopne
add
or
scas
jno
xor
xchg
mov
movb
pop
add
aad
rcrb
mov
and
xor
and
sbb
push
pop
int3
pop
fs
mov
cld
jns
dec
bound
cmp
mov
es
cmp
or
cmp
inc
jecxz
sbb
outsb
push
in
dec
mov
subb
pop
roll
pop
sub
pop
xchg
push
xchg
cmp
sbb
lods
enter
cmp
mov
sbb
nop
mov
cld
movsb
mov
sahf
loop
sbb
xchg
pop
or
sub
dec
pusha
add
test
push
leave
sarl
int
dec
ret
push
inc
js
mov
push
ret
inc
scas
or
out
movsl
movups
subb
adc
jecxz
cmp
sub
or
pop
shrb
jnp
jbe
imul
mov
idivl
xor
sbb
and
mov
xchg
cltd
xchg
sub
and
push
lods
xchg
movlps
cmp
sbb
adc
sbb
ja
cmp
inc
lahf
pop
add
and
out
mov
inc
xchg
pusha
mov
sbb
or
fimull
mov
xor
lods
fwait
fwait
sbb
push
fwait
popf
pop
cmc
sub
pop
adc
lods
adc
mov
pop
xchg
loope
xor
cmp
lods
push
xor
clc
and
mov
ljmp
push
mov
push
out
mov
jmp
mov
sbbl
lds
imul
push
vpcomuq
js
inc
fsubs
aas
jle
xorl
leave
imul
test
sahf
daa
outsb
clc
xor
cmpsl
out
jp
sub
adc
add
notl
mov
cmp
sbb
and
das
or
pop
jbe
out
mov
xor
jle
mov
out
cmp
outsb
repnz
adc
mov
inc
xchg
jnp
dec
lods
jns
mov
rcr
jne
push
sahf
mov
mov
cwtl
cmp
stos
and
int3
xor
imul
mov
push
mov
xor
ljmp
dec
pop
mov
leave
cs
xlat
nop
mov
insl
imul
push
repz
lret
inc
dec
test
push
pop
xor
xor
cmpsb
roll
jb
sbb
and
pop
pavgw
popf
push
and
mov
movsb
push
mov
and
xchg
mov
xor
dec
and
test
stos
cmp
enter
inc
imul
jecxz
hlt
pop
sbbb
loope
push
scas
or
lds
push
ljmp
add
sub
shlb
lcall
int
sub
rcr
cmp
lods
jne
ja
test
push
lahf
daa
cwtl
cmp
mov
xor
cmp
inc
and
cmp
int
mov
add
stc
or
dec
cmp
movb
xchg
fidivrs
mov
sub
sub
out
xchg
add
daa
stos
out
and
movsb
loop
push
int
mov
sahf
push
lahf
jge
push
mov
ret
pop
idivl
inc
mov
cld
popa
cmp
pop
fisttpll
leave
push
push
testb
fnsave
cmpsl
dec
cmp
icebp
fwait
sar
inc
push
jbe
test
data16
outsl
pushf
fiadds
and
push
xchg
inc
fs
in
bound
jne
aas
int
push
jae
ljmp
sub
sub
jmp
repnz
mov
fidivl
rcrb
add
push
iret
xchg
and
mov
xchg
nop
lahf
out
idivl
and
outsl
in
pop
aam
push
pop
ret
inc
push
inc
or
pop
lahf
xor
sahf
xchg
pushf
std
fstps
add
loope
inc
aad
subb
or
nop
jecxz
add
fadd
in
outsb
ljmp
dec
push
sub
inc
jno
jp
fdivs
pop
jl
or
sub
dec
jae
popf
stc
es
sbb
cli
or
cltd
sbb
loop
testl
mov
ds
push
int3
push
cld
sarb
ds
ret
mov
fisubrs
test
imul
mov
pop
in
push
push
test
loope
loope
leave
insb
movsb
cmp
jmp
lods
jg
cli
and
loop
popa
sbb
call
ror
mov
sahf
or
aaa
sbb
lret
shl
les
dec
add
je
jb
or
mov
daa
cmp
mov
fsts
cmp
cmp
and
add
ds
dec
mov
inc
call
stos
movzwl
dec
addr16
push
loop
add
pushf
lds
push
sbb
jnp
dec
push
or
mov
lea
fst
adc
push
push
mov
push
stc
cmpsb
pop
mov
inc
add
stos
gs
cli
pop
sbb
imul
frstor
push
xchg
or
std
cmp
aad
les
push
push
sub
shll
movsl
lret
lahf
inc
xchg
jle
lods
inc
sub
mov
sbb
push
push
pushf
xor
or
in
jae
inc
lock
sbb
mov
xor
inc
scas
movsl
adc
push
and
cmc
out
xchg
inc
lcall
sbb
and
test
lock
cmp
xlat
ds
mov
enter
add
mov
gs
sbb
push
into
adc
or
rolb
xor
sbb
adc
gs
dec
or
lahf
cld
push
sbb
arpl
or
fstpl
or
mov
jno
in
sub
popa
xor
push
dec
les
lds
out
std
or
cwtl
popf
mulb
dec
cmp
push
mov
icebp
xor
cmpsb
cmpsb
testb
adc
pop
dec
jno
popa
shrb
or
scas
jle
in
fnsave
jae
mov
or
fcoms
push
xorb
es
mov
and
fs
or
xchg
imul
or
insb
outsl
test
test
xor
adc
and
inc
daa
enter
popf
inc
imul
or
outsb
bound
gs
in
popa
xor
dec
lock
ja
dec
loopne
ficoml
mov
and
dec
outsl
filds
jge
pop
xor
inc
sbb
mov
and
inc
insb
out
addr16
sahf
mov
inc
dec
out
and
push
dec
ret
repnz
aad
in
imul
pop
cmc
push
xor
xor
push
mov
out
xchg
push
sub
stos
inc
mov
mov
call
adc
mov
jbe
dec
add
es
or
jne
mov
fstl
adc
repnz
and
mov
xor
in
or
or
cld
dec
cmc
cmc
das
sbb
mov
arpl
mov
adc
cmpsl
mov
and
pop
insl
loope
fmull
adc
sub
mov
dec
cmp
inc
dec
fistps
out
js
clc
dec
lea
fsubl
sar
mov
adc
fldenv
ss
jp
fldcw
test
sti
shrb
rol
incl
je
pop
jbe
sbb
test
lcall
dec
or
sub
dec
sub
push
xor
mov
jecxz
push
imul
bound
jl
jle
pop
xor
lcall
nop
sub
stos
adc
aaa
stc
dec
cmpsb
jg
xor
pushf
cmp
inc
mov
rorl
adc
push
sbb
push
add
cmc
xchg
adc
adc
rcl
test
or
sub
pushf
mov
imul
movsb
pusha
mov
jo
movsb
inc
pop
cs
mov
add
adc
in
out
mov
mov
aad
xor
testl
jns
pop
and
addr16
mov
xchg
in
into
lock
mov
sub
jnp
sub
or
xchg
aaa
in
dec
add
xchg
mov
shrl
mov
jbe
jb
mov
xchg
inc
sbb
push
adc
sub
dec
cltd
pop
mov
imul
add
mov
mov
jmp
nop
or
xchg
cmp
in
inc
cmp
mov
mov
pop
add
add
out
out
mov
cmpsl
ljmp
jb
mov
adc
pop
add
test
hlt
in
push
push
stos
lds
adc
mov
push
add
mov
cmp
outsb
fsub
shll
push
addl
jmp
aad
jge
loope
int3
add
or
jne
test
push
pop
cmpsl
inc
inc
lods
out
cli
dec
cltd
popa
jle
mov
or
adc
push
cmp
pop
addr16
popf
fsubrs
jbe
clc
loopne
addr16
clc
sub
faddl
mov
rclb
insb
fs
mov
and
pop
mov
stos
iret
push
xchg
pop
fisubs
int3
fdivp
loope
es
nop
jbe
jbe
insb
jg
pushfw
in
mov
std
xor
jno
mov
add
sub
cmc
pop
out
push
mov
mov
xlat
mov
stos
xor
jnp
mov
sub
push
jne
mov
mov
movsb
popf
outsl
loope
test
out
sub
inc
xor
cmp
mov
das
and
jp
add
in
jg
insb
mov
negl
mov
scas
push
pop
xchg
outsb
push
cld
sub
mov
mov
mov
nop
jl
test
mov
hlt
ret
lods
loope
jb
stos
pop
rol
cld
sbb
insl
mov
sub
pop
mov
jno
loop
jno
push
dec
add
sbb
aas
aas
mov
in
ss
test
or
add
mov
adc
cmp
cmpxchg
vmread
call
iret
sub
mov
fs
repz
loope
imul
out
pop
in
sub
jge
gs
mov
inc
rorl
sahf
daa
mov
push
mov
xlat
pop
ss
xlat
lahf
sub
pop
push
imulb
daa
test
stos
out
movsb
into
or
imul
push
dec
mov
fldcw
mov
mov
mov
jns
push
mov
jnp
addl
xchg
mov
fldl
or
dec
mov
jmp
shl
mov
add
pop
xchg
adc
mov
scas
clc
adc
inc
gs
stos
xchg
fwait
sbb
aad
into
pop
lea
mov
mov
lods
sbb
mov
movsb
adc
pop
stos
and
rcrl
dec
repnz
ja
lcall
int3
push
mov
in
push
in
push
rolb
push
inc
push
aaa
ja
pop
ss
push
jge
cli
jl
mov
fstpl
dec
inc
add
ret
out
outsl
dec
lds
ja
pop
ss
pop
ss
xchg
and
repz
aas
iret
dec
rclb
push
rorb
sub
mov
mov
jns
out
pusha
lahf
xchg
dec
xchg
mov
mov
push
popa
std
or
xchg
push
shll
ret
and
stos
inc
in
gs
xor
pusha
jb
dec
adc
add
push
and
pop
pop
sbb
in
jae
hlt
xchg
push
cmpsb
in
and
pop
cmp
adc
push
cmpb
xchg
loopne
and
push
cmp
stos
lret
dec
pop
jmp
inc
cmp
cmp
mov
xor
mov
mov
idiv
bound
arpl
fists
icebp
jl
je
bound
icebp
push
pop
rolb
adc
loopne
int
dec
xchg
lods
pop
and
mov
pop
aaa
imul
inc
adc
stos
mov
add
fs
and
mov
xchg
inc
mov
inc
cmpsb
and
cltd
or
lret
mov
call
or
shrb
push
popa
adc
js
lcall
adc
sbb
cmpsb
xchg
pop
mov
lcall
and
push
ror
rcrl
add
rorb
jo
dec
jne
stc
xor
into
loop
rcrl
push
mov
jl
cwtl
nop
or
insl
xchg
out
fstps
arpl
mov
inc
inc
sub
push
lret
loopne
mov
inc
test
ret
js
fucom
loopne
sbb
pop
dec
cmpsb
fidivrl
inc
shll
lea
push
ss
lea
mov
push
mov
addr16
cmp
inc
subb
lahf
pop
movsl
inc
inc
sub
dec
lahf
lcall
scas
mov
mov
mov
lods
mov
dec
scas
mov
xchg
ret
testl
xchg
out
sbb
inc
push
mov
js
out
and
mov
scas
lea
leave
cmp
xor
xchg
pop
movb
cld
push
fdivrs
out
sub
popf
divl
pushf
sub
cmpsl
xor
add
arpl
mov
adcl
mov
js
je
popf
mov
sbb
mov
test
add
adc
pop
repz
and
daa
adc
movsb
pop
mov
or
ljmp
xchg
out
dec
push
xchg
fbstp
sbb
aad
jecxz
and
xor
push
jns
or
pop
sarb
dec
xchg
out
repnz
aad
movsl
xorl
sar
or
dec
or
cmp
inc
mov
push
mov
movsb
jl
xchg
out
in
arpl
hlt
decl
ret
shrl
pushf
shrb
stos
dec
sbb
imul
inc
cli
pop
lock
movb
lret
jb
mov
cmp
les
js,pt
lock
sub
mul
sbb
popa
dec
ds
stos
or
jge
sub
jg
push
add
jmp
leave
dec
jbe
cmpsl
push
sahf
lock
pushf
imul
and
outsl
jne
sub
jno
roll
mov
out
push
add
fisttpl
jbe
fisttpll
ds
addr16
insb
xchg
xor
sub
or
test
jp
fisttpll
or
and
adc
fisttpl
lret
stc
gs
idiv
js
lahf
imul
ljmp
add
fmuls
test
je
jnp
dec
mov
sub
scas
fisubl
push
add
sub
pop
jns
adc
add
xchg
les
push
fimuls
mov
js
ret
push
fsubrs
test
sub
push
jge
xchg
outsb
cmpsl
mov
or
sbb
and
fcoml
push
cmp
cmp
fwait
sti
pushf
ret
sarl
pop
sbb
mov
adc
mov
mov
xlat
arpl
in
mov
inc
fcmovb
mov
add
js
fcomps
stc
iret
cli
push
mov
pushf
push
ret
mov
in
mov
sbb
or
xchg
movsb
cltd
cmp
fdivl
sbb
adc
xchg
mov
hlt
dec
out
pop
xchg
sbb
or
rolb
cld
inc
scas
mov
mov
fildll
in
sub
mov
repnz
sbb
repnz
pop
jecxz
cltd
mov
aad
inc
jae
je
jg
das
fimuls
inc
popf
or
xchg
jg
jmp
sarl
add
or
add
mov
icebp
lahf
cmc
fs
adc
cli
cmpsb
and
or
push
int
push
popa
inc
adc
sbb
xor
in
ja
cli
cmp
jnp
aam
daa
xor
ret
add
ss
pusha
stos
mov
adc
dec
movsb
cmpb
mov
int
into
insl
lret
xorb
jae
pop
leave
jge
imul
dec
int
clc
js
les
in
pop
sarl
sbb
mulb
sti
push
mov
lea
mov
lcall
push
cld
lahf
out
mov
push
stos
adc
std
mov
pop
cli
cmp
pop
mov
fwait
pminsw
adc
push
dec
xchg
std
jne
xchg
add
mov
ficomps
mov
aam
inc
inc
std
cmpsl
rorb
sbb
pop
mov
ss
push
mov
jle
ret
jns
ja
and
repz
mov
imul
jnp
loope
lods
in
movsl
xchg
out
or
and
idivb
out
fdivl
add
xor
jnp
xor
inc
movsl
adc
xor
aam
pusha
fcompl
xchg
cli
inc
daa
mov
mov
push
xchg
out
ljmp
xor
push
jp
sub
arpl
ret
stos
xchg
inc
dec
add
ret
arpl
mov
ja
popf
jae
cmpsl
pop
and
hlt
call
aas
jp
jge
fisubs
fs
into
xchg
adc
lods
repnz
jo
call
addr16
stc
pop
lcall
jmp
adcb
psubusw
outsb
pop
imul
sbb
jecxz
loop
lcall
iret
mov
add
cwtl
adc
pop
mov
leave
mov
mov
lahf
loop
insb
gs
sbb
fstps
dec
sbb
mov
dec
out
call
xchg
xchg
push
adc
ja
mov
fwait
stc
stos
loopne
cmpsb
jge
sub
pop
sub
adc
out
dec
sbb
mov
dec
push
xchg
lds
seto
aaa
int3
shlb
stos
jae
testb
sub
jnp
adc
push
dec
pop
mov
loopne
inc
mov
lahf
lock
fucompp
push
push
pop
rol
scas
xchg
sbb
xor
test
or
jbe
mov
and
xor
jns
loop
jbe
cmp
push
test
inc
cmc
movsl
or
test
push
add
push
lods
jb
mov
mov
mov
mov
xchg
mov
cltd
fldcw
movl
xchg
sub
loopne
pop
idiv
clc
mov
idivb
movsb
hlt
loopne
add
jge
movb
pushf
xchg
dec
and
bound
out
loop
fcompl
pop
xor
xchg
cmp
jno
xor
test
mov
dec
or
push
icebp
pushf
xchg
movl
das
imul
dec
adc
mov
pop
enter
sub
dec
xor
sub
jge
pop
popa
and
cmp
jmp
sub
mov
sub
push
cmpsb
xor
cmp
add
insl
stos
fsubr
cmp
rorb
rorb
daa
dec
jbe
dec
hlt
sbb
mov
sahf
dec
hlt
dec
jo
sbb
inc
jne
add
pop
push
xor
xchg
mov
nop
adc
into
imul
fisttps
mov
or
and
mov
and
cltd
ljmp
mov
or
pop
push
pop
lahf
sbb
popf
je
js
orl
shll
add
pop
push
inc
loop
lea
inc
mov
jno
xchg
enter
cmp
decb
cmp
dec
cld
gs
cmc
add
xchg
lcall
mov
in
loopne
xchg
mov
jmp
addl
cmp
aad
leave
testl
jae
inc
pop
jno
push
sub
pushf
sbb
stos
mov
pop
test
mov
mov
and
and
pushf
mov
push
mov
push
scas
loopne
jbe
inc
lahf
and
inc
addr16
cmp
xor
push
jmp
add
pop
sti
lret
aam
inc
adc
adc
sbb
fiadds
sbb
push
movsb
sbbl
mov
mov
dec
inc
movb
lods
loopne
and
push
pop
mov
pop
jno
ds
jnp
or
data16
sbbb
rcrb
cs
pop
fmul
and
xlat
push
iret
out
bnd
xor
pop
mov
inc
add
mov
mov
sbb
jle
sbb
stos
repnz
pop
push
std
cmp
push
lahf
pop
jbe
cmp
int
scas
mov
ret
sbb
mov
scas
test
and
mov
out
in
cwtl
adc
xor
ficoml
dec
jle
das
les
xchg
sbb
mull
cmp
sbb
je
add
sub
push
and
sahf
call
fisubrl
push
ret
rcll
mov
popf
inc
in
xchg
mov
adc
jecxz
mov
data16
jo
mov
dec
pop
loope
push
adc
in
jmp
bound
fidivs
lea
cmpsl
fisttpl
xchg
sbb
jg
mov
pop
jne
lods
imul
push
scas
arpl
test
cmp
pop
mov
push
inc
in
in
scas
xchg
sbb
scas
and
and
mov
mov
call
push
lods
or
and
stos
aas
dec
sub
addl
mov
or
enter
cld
inc
jmp
lds
ret
or
movsb
call
daa
cli
jae
dec
hlt
scas
test
mov
sub
pop
cmp
bound
sbb
fildll
stc
mov
dec
pushf
iret
clc
jg
adc
btr
fwait
loope
push
jns
dec
mov
adc
int3
movsb
es
pop
adc
movsb
clc
test
add
mov
fistpll
test
xor
or
testl
sub
sbb
sbb
jmp
mov
or
lahf
add
cwtl
ljmp
fsubr
dec
aam
leave
sub
mov
mov
mov
stc
and
jbe
push
inc
aaa
add
cmp
mov
leave
aaa
fidivrs
stos
aam
ljmp
add
out
or
es
imul
xchg
push
adc
cmpsb
shl
sub
sub
fwait
jbe
xor
and
repnz
add
daa
in
push
test
cltd
cld
pop
push
fdivrs
cwtl
icebp
call
arpl
call
cmc
das
out
mov
shrb
in
jb
mov
mov
push
out
out
cltd
call
aad
sbb
cmp
cwtl
test
mov
xchg
pop
fldt
mov
add
pop
andl
notl
shlb
xchg
pushf
ja
fdivrs
and
mov
addb
dec
pop
inc
in
shlb
adcb
xorb
adc
insb
xchg
jbe
mov
test
popf
pusha
inc
cmc
sbb
mov
pop
jg
mov
mov
cwtl
xor
int3
sub
lds
js
xchg
in
scas
lds
jns
cmp
scas
mov
and
mov
out
mov
mov
add
xor
xchg
add
mov
pop
popf
cmp
lcall
gs
pop
fisubrs
imul
addr16
mov
sub
seto
or
jge
lret
stos
sub
xchg
adcb
arpl
popf
xchg
cmp
loope
mov
xchg
mov
jp
inc
xor
dec
inc
fdivs
push
jns
and
pop
movsl
rcr
leave
dec
ret
or
mov
and
loop
popf
adc
cwtl
clc
dec
sub
divl
mov
scas
pushf
adc
lret
popf
mov
xchg
sbb
outsb
sbb
and
rorb
add
sahf
jg
mov
or
pop
test
or
xor
cmp
add
insb
push
loop
dec
and
mov
repz
bound
pop
sbbl
sub
dec
dec
testl
mov
xchg
into
mov
xchg
fisubs
addr16
pop
mov
inc
ljmp
shll
ret
jb
inc
mov
mov
ret
jl
scas
movsb
xor
xchg
xlat
mov
aam
outsb
scas
adc
in
pop
jne
out
mov
jp
insb
cld
movsb
or
mov
push
adc
subl
hlt
adc
dec
cmpsl
mov
mov
mov
adc
sti
arpl
jne
pop
mov
dec
popf
inc
pop
ja
or
pop
dec
push
pushf
ret
dec
xor
dec
jno
and
xlat
pop
push
jns
jp
push
or
push
sarl
mov
testl
daa
mov
test
xchg
inc
icebp
addr16
das
adc
lret
fldl
les
das
mov
movsb
fiaddl
cs
and
mov
nop
ljmp
or
gs
adc
xor
pandn
cmpsb
imul
push
xor
mov
mov
int3
dec
es
cli
andb
out
dec
cmp
lcall
imul
xchg
nop
test
cld
push
xchg
sub
add
mov
ds
xor
jp
xchg
xchg
in
mov
xchg
icebp
ss
adc
out
mov
lcall
loopne
out
push
mov
xlat
cmp
push
jne
cli
cwtl
outsb
cld
notb
fiadds
int3
movsb
cmp
push
in
movl
out
fstps
sbb
xchg
vcvtsi2ss
fistps
jo
rcrb
orb
sbb
xor
movsl
js
mov
push
push
insb
sub
mov
lret
cs
inc
nop
or
jle
sbb
inc
jg
inc
fwait
enter
fwait
lret
leave
in
add
jmp
daa
dec
or
xchg
insb
push
sbb
cli
loopne
mov
loope
dec
push
hlt
pop
jge
push
inc
add
inc
sbb
lea
int
mov
and
aad
push
sub
shlb
push
lret
or
fsubrp
fcomps
push
adc
push
jo
jb
sbb
mov
mov
jne
fisubrs
mov
jnp
push
mov
mov
xchg
in
add
sbb
or
jbe
jge
lods
rcl
xor
cmp
iret
and
pop
pop
int
int
or
rep
jge
cmpsb
ja
xor
jmp
add
inc
flds
xchg
test
je
sub
dec
imul
popa
jo
out
and
cmp
inc
pop
rcrl
cld
incb
inc
sub
adc
cmc
daa
mov
pop
es
xchg
sbb
popf
into
in
xchg
jp
jmp
gs
out
push
pop
mov
lahf
pop
xchg
andl
mov
pop
adc
add
push
aaa
fwait
mov
mov
push
dec
fs
outsb
sbb
cmpsl
sbb
andb
jecxz
sbb
pop
or
pop
adc
int3
imul
adc
push
cs
jb
push
outsb
ss
sbbl
out
mov
jb
sub
cmp
add
cltd
fadd
push
pop
or
xor
sub
inc
dec
cmp
dec
or
rorl
or
fimull
mull
aas
dec
scas
and
pop
int
loope
fistps
stc
icebp
push
push
ljmp
xor
pop
aas
inc
cmp
mov
xor
and
or
mov
out
ret
arpl
sarb
daa
jle
out
repnz
mov
das
sub
aam
cmpsb
pop
fdivs
jg
pop
fdivrs
mov
dec
and
pop
sbb
sbb
add
xchg
or
popa
ret
xchg
adc
xchg
mul
push
xor
mov
sbb
subl
sahf
aaa
mov
mov
outsl
xor
insl
xor
push
mov
and
or
sbb
push
rorl
iret
xchg
lods
dec
out
test
mov
mov
rcrw
arpl
movsl
and
arpl
or
mov
or
aad
inc
cmp
sub
mov
adc
pushl
pushf
addr16
insb
mov
jbe
addr16
sbb
mov
mov
jbe
pusha
mov
stos
ret
xchg
dec
jl
adc
pop
cli
fcoml
mov
and
jo
sub
test
aad
mov
inc
insl
push
clc
mov
icebp
pop
leave
push
sbb
enter
or
adc
lods
jae
jge
push
ds
cs
push
stos
sub
lods
xchg
xlat
xchg
rcll
fimull
add
adc
xor
data16
xchg
mov
pop
insb
ss
or
dec
dec
push
imul
sbb
decl
ffree
call
pop
lret
jp
loop
push
in
pop
xchg
in
xlat
jp
xor
mov
and
fsubrl
insb
cld
fsubl
push
bound
jno
lods
mov
scas
fs
xchg
loop
pop
dec
in
dec
lods
pushf
sub
jge
jmp
movsl
add
repnz
aam
sbb
pop
inc
cld
dec
jg
pop
or
pop
jg
leave
sbbl
xor
aas
add
call
lds
cld
jmp
sti
fwait
and
hlt
fidivrl
xchg
inc
call
mov
out
cld
call
mov
push
sahf
faddl
insb
xchg
push
add
xorb
vmptrst
adc
test
mov
mov
sbb
sbb
pop
das
rclb
lret
pop
xchg
xlat
cs
aam
ss
inc
and
fisubrl
in
fdivs
in
pop
lods
cli
push
les
or
jge
push
aam
xchg
cld
cli
test
lock
push
and
insb
sub
add
mov
je
in
mov
jae
inc
sbb
insb
push
xchg
or
sbb
rcrb
out
mov
ja
lcall
add
sub
addr16
or
arpl
out
in
cmc
hlt
shll
jle
sub
aad
mov
sahf
xchg
and
je
loope
iret
jge
bound
cmp
cwtl
adcb
popa
adc
aaa
xchg
or
mov
je
mov
or
push
lock
cli
xor
clc
xchg
decb
loope
and
fs
adc
lods
stos
rcll
xchg
imul
sbb
adc
repz
adc
adc
clc
pop
aam
push
test
and
out
or
push
ja
mov
jno
jne
popa
sub
in
imull
insl
mov
dec
scas
cmp
pop
int3
push
aad
jne
add
or
push
and
jl
fcomps
push
outsb
sub
mov
mov
dec
add
cmpsl
repz
fsubl
roll
xor
fstps
dec
loopne
cmpsb
mov
jae
test
mov
xor
pushf
out
nop
xchg
inc
mov
jmp
into
aam
sub
add
pop
dec
mov
dec
out
sub
push
adc
stc
xor
mov
ret
ficoms
lret
mov
xchg
mov
inc
scas
and
inc
mov
mov
nop
cmp
jle
dec
jae
test
jno
jb
insl
jno
ret
mov
mov
lods
jecxz
test
add
xchg
cmp
inc
cli
or
jb
test
jne
aaa
cwtl
mov
sbb
jmp
pop
and
enter
.byte
add
add
adc
add
add
add
add
add
add
add
cwtl
add
addb
add
add
add
sbb
add
xor
add
add
add
sub
add
jo
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
sbb
add
adc
add
add
add
add
or
xorb
add
dec
add
cmpb
andb
orb
cmpb
sbbb
adcb
add
jle
add
mov
add
xchg
or
xor
add
or
subb
add
add
add
add
add
cmp
addb
add
adc
add
add
add
add
or
adcb
addb
add
adc
add
add
add
add
sldt
push
sldt
addb
jmp
add
cwtl
add
sub
add
mov
add
enter
out
sldt
loopne
add
clc
add
xor
add
adc
add
sub
add
inc
add
add
pop
add
add
jo
add
mov
add
mov
sldt
mov
sldt
rolb
add
call
sldt
add
add
sbb
add
xor
add
dec
push
add
pusha
push
add
js
add
nop
push
add
adc
outsl
insl
add
add
loopne
add
out
or
add
add
fadds
add
adc
add
add
add
add
jg
add
push
add
or
add
and
add
cmp
add
push
pop
add
push
jg
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
adc
add
add
add
add
add
add
pop
add
add
add
adc
add
add
add
add
add
add
pop
add
add
add
adc
add
add
add
add
add
add
pop
add
add
add
adc
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
rorb
add
add
add
adc
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
inc
outsl
insl
add
add
add
add
orb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
adc
add
sub
or
xor
add
pop
in
or
xor
add
nop
out
or
xor
add
out
or
xor
add
clc
lock
xor
add
sub
or
xor
add
pusha
repz
xor
add
xchg
hlt
or
rolb
add
testb
in
add
dec
clc
or
rolb
add
sbb
or
rolb
add
call
add
add
add
add
add
add
or
rolb
add
sub
or
rolb
add
clc
add
add
add
add
push
or
call
add
add
add
add
or
add
or
push
add
add
add
xchg
push
or
in
add
add
add
add
add
mov
or
fadds
add
pusha
and
add
add
add
add
sbb
or
adc
add
xor
or
enter
clc
sub
call
add
add
add
add
sub
add
add
add
xor
aam
add
xchg
xor
faddl
add
jo
or
xor
add
mov
add
add
aaa
or
or
add
adc
or
test
add
cwtl
ds
mov
add
dec
inc
or
sbb
add
or
cmp
add
cwtl
inc
or
in
add
add
add
lods
dec
or
mov
add
add
add
add
add
add
add
add
lock
or
les
add
mov
or
mov
add
add
add
add
add
add
enter
inc
push
add
or
add
add
sbb
or
adc
add
xor
add
add
inc
bound
adc
add
pop
bound
adc
add
insb
bound
adc
add
andb
adc
add
xchg
bound
adc
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
push
add
inc
add
dec
add
add
push
add
inc
add
dec
add
or
movsb
jg
add
add
add
add
add
add
inc
add
dec
add
inc
add
dec
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
incl
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
addb
add
add
add
add
add
add
incl
incb
incb
incb
incb
cld
add
cld
add
clc
add
clc
add
push
add
push
add
jmp
add
inc
add
inc
add
inc
add
cld
add
cld
add
cld
or
cld
ud0
cld
aas
cld
aas
cld
aas
jg
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
incl
add
test
add
add
add
mov
add
add
add
rolb
add
add
add
add
add
add
add
add
push
add
psubb
add
add
add
test
out
jmp
sbb
ficompl
out
fcmovu
jmp
cmp
inc
add
inc
add
jmp
add
jmp
add
jmp
add
push
pop
clc
ud0
cld
pop
aas
aas
aas
cld
pop
clc
ud0
lock
jmp
add
jmp
add
jmp
add
inc
add
inc
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
incl
add
lock
add
add
pushl
add
std
mov
pop
std
mov
pop
std
mov
pop
std
mov
pop
std
mov
pop
cmp
mov
push
fldl
add
jl
add
add
data16
add
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
add
add
add
add
add
inc
pop
inc
pop
incb
pop
incb
pop
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pushl
aas
pushl
add
call
add
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
incl
incl
decl
lcall
aas
decl
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
addb
adc
add
and
add
add
add
incb
add
add
add
incb
add
add
add
incb
add
loopne
add
and
add
inc
add
or
add
add
add
std
clc
push
jg
jmp
aas
inc
pop
inc
pop
clc
cld
add
cld
add
cld
add
cld
add
cld
add
clc
inc
pop
inc
pop
jmp
aas
push
jg
clc
std
call
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
loopne
add
mov
add
add
add
sub
add
mov
inc
add
test
add
sbb
add
mov
add
add
add
cld
pop
cld
pop
cld
pop
cld
pop
jmp
adc
inc
adc
incl
jg
add
aas
incl
add
test
inc
adc
jmp
adc
cld
pop
cld
pop
cld
pop
cld
pop
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cld
add
pop
cmp
add
faddl
add
faddl
add
mov
add
inc
add
add
add
jbe
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
add
add
add
add
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pushl
pushl
add
call
add
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
incl
incl
decl
lcall
aas
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
add
or
add
sbb
add
push
add
sub
add
inc
add
add
add
inc
addl
add
add
pusha
xor
add
sbb
add
push
add
sbb
add
sbb
add
loopne
add
add
add
cld
pop
push
pop
jmp
add
inc
sar
xor
incl
clc
jg
sbb
sbb
jg
push
sbb
lcall
or
decl
test
pop
incl
loope
jmp
add
push
pop
cld
pop
ljmp
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
mov
xor
xor
xor
xor
xor
xor
xor
add
xor
adc
xor
xor
xor
add
xor
adc
xor
adc
xor
mov
xor
add
cmp
adc
xor
repz
clc
xor
xor
sbb
xor
repz
add
xor
cmp
adc
adc
xor
xor
clc
xor
add
xor
xchg
adc
sbb
xor
xor
repz
aas
xorl
add
xor
xor
adc
xor
xor
add
xor
cmp
adc
xor
repz
xor
xor
xor
xor
cmp
xor
xor
cmp
sbb
sbb
xor
xor
xorl
xor
add
xor
xchg
adc
xor
cmp
cmp
cmp
xor
add
xor
sbb
xor
xor
add
xor
cmp
xor
xchg
adc
xor
clc
xor
repz
add
xor
xor
xor
cmp
xor
xor
xorl
incl
xor
xor
xor
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
jl
add
adc
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
aas
xor
xor
xor
add
and
xor
cmp
xor
xor
xor
add
sub
sub
and
xor
cmp
xor
xor
repz
add
xor
and
mov
cmp
xor
add
inc
and
xor
xor
repz
add
sub
and
and
cmp
repz
xor
mov
and
popl
xor
repz
cmp
xor
and
and
xor
cmp
cmp
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
and
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
cmp
add
xor
xor
xor
cmp
xor
xor
xor
xor
clc
repz
xor
xor
xor
xor
xor
xor
xorl
add
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
mov
xor
xor
xor
xor
xor
xor
xor
add
xor
adc
xor
xor
xor
add
xor
adc
xor
adc
xor
mov
xor
add
cmp
adc
xor
repz
clc
xor
xor
sbb
xor
repz
add
xor
cmp
adc
adc
xor
xor
clc
xor
add
xor
xchg
adc
sbb
xor
xor
repz
aas
xorl
add
xor
xor
adc
xor
xor
add
xor
cmp
adc
xor
repz
xor
xor
xor
xor
cmp
xor
xor
cmp
sbb
sbb
xor
xor
xorl
xor
add
xor
xchg
adc
xor
cmp
cmp
cmp
xor
add
xor
sbb
xor
xor
add
xor
cmp
xor
xchg
adc
xor
clc
xor
repz
add
xor
xor
xor
cmp
xor
xor
xorl
incl
xor
xor
xor
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
cmp
div
xchg
mov
xor
add
inc
inc
inc
or
mov
xor
popl
add
xor
pop
push
xor
mov
cmp
xor
ud0
xor
xor
cmp
aas
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
ud0
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
push
hlt
xor
xor
mov
xor
repz
add
xor
inc
aad
out
in
xor
xor
repz
add
xor
dec
pop
push
hlt
xor
xor
mov
xor
repz
add
xor
inc
inc
inc
inc
inc
xor
xor
clc
repz
add
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
add
xor
xor
xor
aas
push
xor
add
xor
xor
stos
mov
xor
mov
add
xor
xor
add
xor
xor
xor
clc
repz
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
repz
xor
add
xor
xor
inc
arpl
xor
xor
xor
xor
xor
add
xor
xor
inc
xor
xor
xor
cmp
xor
xor
add
xor
xor
arpl
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
xorl
xor
add
xor
xor
inc
arpl
xor
xor
xor
pushl
xor
xor
add
xor
ss
xor
xor
xor
cmp
add
xor
xor
inc
xor
xor
xor
cmp
xor
xor
add
xor
ds
xor
xor
cmp
xor
xor
add
xor
xor
inc
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
repz
xor
add
xor
xor
xor
inc
xor
xor
xor
add
xor
xor
inc
xor
xor
repz
add
xor
inc
inc
inc
xor
cmp
incl
add
xor
data16
xor
repz
add
xor
xor
data16
xor
repz
cmp
xor
add
xor
xor
out
jecxz
xor
xor
incl
xor
xor
xor
xor
xor
xor
cmp
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
inc
xor
xor
inc
xor
pushl
xor
pushl
add
xor
sub
xor
mov
xor
add
xor
xor
xor
aas
xor
add
xor
arpl
xor
cmpl
xor
xor
stos
inc
xor
xor
xor
cmp
xor
xor
xor
add
xor
inc
sub
xor
xor
xor
cmpl
xor
add
xor
stos
and
xor
xor
xor
xor
add
xor
push
and
xor
xor
xor
clc
pushl
add
xor
stos
inc
push
xor
cmp
clc
cmpl
aas
xor
add
push
inc
mov
xor
cmpl
aas
cmp
xor
add
xor
stos
inc
sub
xor
cmp
repz
clc
aas
xor
add
xor
mov
xor
xor
xorl
xor
xor
add
xor
xor
stos
inc
xor
xor
xor
xor
aas
xor
add
xor
xor
and
xor
xorl
xor
add
xor
xor
inc
xor
xor
xor
xor
aas
xor
xor
add
xor
mov
xor
xor
cmpl
xor
add
xor
xor
stos
inc
xor
xor
xor
xor
add
xor
xor
data16
xor
xor
xor
cmp
add
add
add
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
aas
pushl
xor
add
xor
xor
xor
xor
mov
add
xor
mov
adc
mov
xor
xor
pushl
add
xor
adc
cltd
xchg
adc
cmp
add
xor
adc
xor
cmp
repz
xor
adc
xor
xor
cmpl
repz
cmp
xorl
adc
adc
cmp
clc
repz
add
sbb
xor
cmp
repz
add
cmp
xor
adc
xor
cmp
clc
xor
sbb
adcl
cmp
repz
xor
sbb
adc
xor
xchg
cmpl
clc
xor
xor
orl
adc
cmp
cmpl
xor
xor
adc
xor
cmp
xor
xor
xor
clc
cmp
add
xor
adc
xor
xor
xor
add
cmp
sbb
xor
cmp
add
xor
cltd
adc
adc
mov
decl
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
repz
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
cmp
xor
add
and
xor
cmp
orl
add
cmp
xor
and
xor
cmp
xor
repz
xor
add
xor
inc
xor
xor
xor
add
xor
xor
cmp
and
xor
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
xor
xor
xor
cmp
inc
xor
xor
xor
cmp
popl
add
xor
xor
xor
mov
xor
xor
popl
xor
xor
xor
xor
xor
xor
xor
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
mov
add
xor
and
and
cmp
mov
xor
add
and
and
and
inc
xor
clc
cmpl
pushl
xor
add
and
sub
cmp
xor
mov
add
and
mov
inc
cmp
aas
xorl
xor
and
xor
cmp
inc
cmp
cmp
xor
cmp
popl
add
and
and
xor
inc
inc
cmp
decl
addl
cmp
xor
xor
mov
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
incl
add
xor
xor
xor
xor
pushl
xor
mov
inc
inc
xor
cmp
and
mov
xor
add
cmp
inc
xor
xor
xor
xor
xor
inc
and
cmpl
clc
xorl
add
xor
and
and
xor
cmp
add
cmp
and
and
stos
and
cmp
xor
xor
mov
add
xor
stos
and
and
mov
decl
xor
xor
xor
xor
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
and
add
adc
add
add
add
add
add
push
add
add
add
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
repz
xor
xor
add
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
xor
xor
xor
xor
add
xor
and
xor
xor
cmp
xor
add
xor
and
xor
xor
xorl
cmp
xor
xor
add
sub
and
xor
cmp
cmp
xor
add
and
xor
cmp
orl
add
cmp
xor
and
xor
cmp
xor
repz
xor
add
xor
inc
xor
xor
xor
add
xor
xor
cmp
and
xor
xor
xor
repz
xor
add
xor
xor
mov
xor
xor
xor
xor
xor
cmp
and
xor
xor
xor
repz
add
xor
xor
xor
mov
xor
xor
xor
xor
xor
cmp
inc
xor
xor
xor
cmp
popl
add
xor
xor
xor
mov
xor
xor
popl
xor
xor
xor
xor
xor
xor
xor
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
add
adc
add
adc
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
xor
xor
xor
xor
add
add
add
xor
ud0
push
xor
ud0
incl
add
add
push
js
add
ud0
pop
mov
lock
decl
mov
decl
call
incl
out
xchg
xor
push
js
add
ud0
incl
add
xor
push
xor
ud0
incl
add
xor
decl
add
xor
incl
xor
xor
add
add
xor
xor
add
add
add
add
add
add
sbb
add
add
add
add
add
mov
mov
mov
mov
test
test
mov
mov
test
movb
add
add
incl
test
mov
mov
test
mov
movb
add
incl
test
test
incl
incl
incl
incl
add
incl
mov
test
test
test
test
test
add
test
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
add
add
incl
add
add
test
add
mov
mov
mov
test
test
add
add
incl
incl
incl
incl
test
test
add
incl
add
add
incl
add
add
test
add
mov
test
test
add
test
test
add
test
test
add
test
add
add
incl
add
add
incl
add
add
test
add
mov
test
test
movb
add
inc
mov
test
add
test
test
add
add
add
add
incl
add
add
incl
add
add
test
add
test
add
test
add
mov
test
test
add
add
add
test
add
add
incl
add
add
incl
add
add
add
add
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
add
add
add
test
incl
add
add
add
test
add
add
mov
mov
incl
test
add
add
add
incl
add
mov
add
add
add
add
test
test
test
test
test
movb
test
test
test
test
test
mov
mov
incl
add
test
test
mov
test
add
test
mov
mov
test
incl
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
movb
test
movb
mov
mov
add
test
test
test
add
mov
mov
inc
mov
test
add
test
add
test
mov
test
add
inc
mov
add
add
add
test
test
test
mov
test
test
mov
add
add
add
inc
mov
add
test
add
add
incl
add
add
incl
add
add
incl
add
add
test
mov
test
add
test
test
test
test
add
incl
add
add
test
incl
mov
test
add
test
add
add
add
test
add
add
incl
mov
test
add
test
test
add
incl
incl
mov
test
add
test
test
add
incl
test
add
test
add
mov
test
add
test
test
add
incl
add
incl
add
add
test
mov
test
add
test
add
add
add
incl
add
mov
test
add
test
test
test
mov
test
add
test
test
test
test
test
test
mov
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
incl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
add
test
test
test
test
test
test
add
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
inc
add
push
add
add
add
add
add
cmp
dec
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
add
add
add
add
add
add
add
add
add
incl
add
add
add
outsl
add
outsb
add
arpl
je
imul
and
outsb
add
je
and
popa
add
add
ja
add
add
jns
and
jb
jne
insb
add
jae
add
add
dec
add
je
ja
outsl
add
imul
add
outsb
add
add
arpl
push
add
add
add
add
outsl
add
je
and
jne
outsb
add
add
arpl
push
add
add
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
jne
jae
add
add
push
add
add
add
js
jo
imul
add
add
add
outsl
add
insl
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
add
add
jae
jae
and
je
jns
jo
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
popa
add
outsb
add
je
and
arpl
push
add
add
add
add
and
jae
imul
and
outsl
add
and
popa
add
add
push
add
inc
add
add
insl
add
add
push
add
push
add
inc
add
add
jb
jb
outsl
add
and
and
and
add
push
add
inc
add
add
insl
add
add
and
inc
add
insb
add
adc
add
outsb
add
arpl
je
imul
and
je
imul
add
add
jne
je
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
jne
jae
add
add
add
add
and
insl
add
outsb
add
and
insb
add
jbe
add
add
add
data16
add
jns
insl
add
outsl
add
add
and
insb
add
outsb
add
jae
add
add
imul
and
outsb
add
insl
add
and
je
outsl
add
and
insb
add
outsb
add
add
add
je
and
imul
add
ja
outsb
add
add
add
outsl
add
add
outsl
add
je
add
add
add
add
outsl
add
je
add
add
add
add
je
outsl
add
jns
and
outsb
add
je
and
add
jo
je
jns
str
outsl
add
je
and
outsb
add
je
and
data16
jne
outsb
add
add
add
add
jne
add
je
and
jb
add
add
je
add
add
jb
and
data16
imul
add
add
add
jne
add
je
and
jb
add
add
je
add
add
add
popa
add
jae
add
add
dec
add
dec
add
and
jae
add
jbe
add
and
arpl
popa
add
outsb
add
je
and
arpl
outsl
add
outsb
add
arpl
je
add
push
add
jno
jne
add
je
and
jb
add
add
je
add
add
add
popa
add
jae
add
add
add
and
arpl
insb
add
add
je
and
jo
jb
outsl
add
jb
popa
add
and
popa
add
add
add
add
outsb
add
add
add
add
outsl
add
je
and
add
data16
add
add
je
and
jne
jae
add
sub
add
add
push
add
imul
add
ja
outsb
add
add
outsl
add
imul
add
add
jb
jb
outsl
add
add
add
imul
add
add
add
jbe
add
and
add
add
add
outsl
add
add
add
jo
outsl
add
add
add
dec
add
jbe
popa
add
add
add
outsl
add
imul
add
add
jne
je
push
add
add
popa
add
add
outsb
add
add
add
add
add
add
add
add
outsb
add
add
popa
add
add
outsb
add
add
jb
jb
outsl
add
and
je
outsl
add
add
outsl
add
imul
add
add
add
jbe
add
add
add
add
popa
add
add
dec
add
dec
add
and
jae
add
jbe
add
and
data16
imul
jb
add
add
add
add
outsl
add
imul
add
add
add
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
outsb
add
add
outsl
add
imul
add
add
add
jb
outsl
add
add
outsl
add
add
popa
add
imul
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
add
add
jae
jae
and
data16
insl
add
insb
add
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
jns
and
jo
jb
outsl
add
add
outsl
add
add
popa
add
imul
add
add
add
add
jae
jae
and
popa
add
add
popa
add
add
add
outsb
add
add
jae
add
add
add
popa
add
outsb
add
je
and
popa
add
jae
imul
and
jb
add
jne
add
je
add
add
add
add
jae
jae
add
add
add
add
jb
imul
add
jae
and
add
ja
outsb
add
add
add
add
add
jb
imul
add
jae
and
jne
outsb
add
add
arpl
push
add
add
add
add
add
add
add
jo
jo
add
add
outsl
add
outsb
add
arpl
je
imul
and
outsl
add
and
jb
add
add
add
add
outsl
add
je
ja
popa
add
add
add
popa
add
jae
add
add
outsl
add
outsb
add
arpl
je
imul
and
popa
add
outsl
add
je
add
add
outsl
add
outsb
add
arpl
je
imul
and
jb
add
add
add
jns
and
jo
add
jb
add
add
outsl
add
add
jne
data16
add
and
jae
jo
popa
add
add
add
jbe
popa
add
insb
add
bound
insb
add
add
push
add
arpl
imul
add
add
jae
and
popa
add
add
popa
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
outsl
add
imul
add
add
jae
and
outsb
add
je
and
arpl
outsl
add
outsb
add
arpl
je
add
add
add
popa
add
outsb
add
je
and
jae
add
add
add
jb
and
jb
add
add
jbe
add
add
data16
add
and
jae
outsl
add
imul
add
add
jae
and
arpl
insb
add
jae
add
add
add
add
and
insl
add
outsb
add
and
jb
add
add
add
arpl
add
sub
and
arpl
popa
add
outsb
add
je
and
jae
jo
insb
add
arpl
add
add
add
add
imul
add
add
jb
jb
outsl
add
and
and
and
and
add
add
add
outsb
add
add
jb
jne
jo
je
add
add
jns
jae
je
add
and
arpl
popa
add
add
add
add
popa
add
add
imul
and
outsb
add
insl
add
add
add
add
arpl
arpl
add
jae
and
add
outsb
add
add
add
inc
add
add
add
add
add
jae
jae
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
push
add
outsl
add
add
popa
add
jns
and
outsl
add
add
and
data16
insb
add
jae
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
insb
add
add
insb
add
arpl
imul
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
and
imul
jo
jb
outsl
add
jb
add
jae
add
add
jo
add
popa
add
add
outsb
add
add
insb
add
add
add
and
imul
jo
jb
outsl
add
jb
add
jae
add
add
outsl
add
imul
add
add
jo
add
popa
add
add
outsb
add
add
outsb
add
add
outsl
add
sub
add
imul
add
add
add
je
imul
je
imul
and
popa
add
add
add
jae
and
jb
add
jne
imul
add
add
add
add
jae
popa
add
add
add
add
and
insb
add
outsb
add
add
add
jb
outsl
add
add
outsl
add
add
jb
outsl
add
add
add
add
add
add
outsl
add
and
jae
outsl
add
imul
add
add
inc
add
add
add
jb
outsl
add
add
outsl
add
add
jo
je
imul
add
add
jb
outsl
add
add
outsl
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
add
add
outsl
add
outsb
add
arpl
je
add
add
outsl
add
add
add
add
add
add
add
add
add
add
inc
add
outsb
add
add
outsl
add
add
imul
and
imul
jo
outsl
add
je
and
jb
popa
add
add
and
sub
and
add
add
add
dec
add
jbe
popa
add
add
add
outsl
add
je
and
push
add
outsb
add
add
add
add
add
add
add
push
add
popa
add
add
add
add
jne
je
sbb
dec
add
js
and
insb
add
outsb
add
and
insb
add
outsb
add
je
push
add
arpl
add
add
add
add
add
jb
jb
outsl
add
and
outsl
add
and
arpl
popa
add
add
add
imul
outsl
add
imul
add
add
add
jb
popa
add
jns
and
data16
outsb
add
je
imul
and
and
add
jb
jb
outsl
add
and
outsl
add
and
insb
add
popa
add
add
add
add
imul
outsl
add
imul
add
add
add
jb
popa
add
jns
and
sub
and
add
add
add
outsl
add
add
outsb
add
and
push
add
add
insl
add
and
and
add
add
outsl
add
outsb
add
arpl
je
imul
and
je
outsl
add
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
add
arpl
outsl
add
outsb
add
arpl
je
imul
add
add
arpl
outsl
add
outsb
add
arpl
je
add
add
add
add
outsl
add
outsb
add
arpl
je
and
je
imul
add
add
jne
je
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
add
jbe
imul
add
add
add
add
popa
add
add
add
add
and
jae
imul
popa
add
add
add
add
outsb
add
popa
add
add
add
dec
add
inc
add
add
imul
popa
add
add
add
add
popa
add
add
add
imul
outsl
add
jae
and
dec
add
popa
add
add
add
outsb
add
add
and
add
arpl
add
add
and
add
je
popa
add
add
add
je
imul
popa
add
jns
and
arpl
outsl
add
outsb
add
add
outsb
add
jne
jo
jo
outsl
add
je
add
add
outsl
add
sub
add
add
add
and
insb
add
outsb
add
jne
popa
add
add
add
inc
add
add
outsb
add
add
add
outsl
add
jb
arpl
add
add
outsb
add
popa
add
add
add
je
jb
add
insl
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
adc
inc
add
add
popa
add
add
add
outsl
add
outsb
add
arpl
je
add
add
add
popa
add
outsb
add
je
and
popa
add
add
arpl
popa
add
add
add
outsl
add
imul
add
add
add
outsb
add
arpl
je
imul
and
inc
add
add
add
add
jb
popa
add
add
jne
insb
add
add
add
add
outsl
add
insb
add
add
outsl
add
add
imul
and
jae
outsl
add
imul
add
add
add
add
add
jae
jae
and
popa
add
add
add
outsl
add
je
and
popa
add
add
add
insb
add
add
add
and
imul
jne
jae
add
add
add
outsl
add
add
outsb
add
jne
add
and
add
je
popa
add
add
outsb
add
add
jne
data16
add
add
add
jae
outsl
add
imul
add
outsb
add
je
imul
imul
je
imul
and
inc
add
jb
outsl
add
add
add
add
add
imul
and
inc
add
arpl
add
add
add
add
add
imul
and
and
and
add
add
outsl
add
add
outsl
add
outsb
add
add
outsb
add
add
add
outsb
add
and
push
add
add
outsb
add
add
jb
add
jp
add
add
popa
add
and
add
imul
and
jo
add
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
outsb
add
arpl
je
imul
and
inc
add
jb
add
jb
adc
dec
add
popa
add
je
imul
and
inc
add
jo
je
imul
adc
add
arpl
je
imul
and
inc
add
jo
je
imul
and
push
add
js
je
str
outsb
add
outsl
add
add
popa
add
imul
add
outsl
add
outsb
add
add
outsb
add
outsl
add
add
add
je
str
add
jne
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
add
jne
and
push
add
js
je
add
dec
add
outsb
add
or
push
add
jb
outsl
add
add
add
popa
add
push
add
add
add
add
imul
add
push
add
ja
or
xor
inc
add
add
add
push
add
imul
outsl
add
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
imul
outsl
add
and
inc
add
popa
add
add
add
imul
outsl
add
and
push
add
js
je
sbb
dec
add
and
push
add
and
imul
add
ja
outsl
add
add
add
jo
add
imul
add
add
add
outsl
add
add
add
add
add
jae
outsb
add
add
add
jne
jo
jo
outsl
add
je
and
jae
je
jb
add
insl
add
outsb
add
or
push
add
jns
and
inc
add
add
add
add
popa
add
or
dec
add
add
jne
insl
add
add
jb
popa
add
or
add
add
add
add
outsl
add
add
jb
push
add
arpl
je
imul
and
inc
add
jo
je
imul
adc
add
insb
add
arpl
popa
add
add
outsb
add
add
outsl
add
imul
add
popa
add
add
add
popa
add
imul
add
outsl
add
outsb
add
add
jne
je
je
outsl
add
and
inc
add
arpl
add
add
jne
je
je
outsl
add
and
dec
add
add
insb
add
add
je
or
add
add
outsb
add
add
push
add
ja
or
inc
add
je
je
outsl
add
and
push
add
js
je
or
inc
add
jo
je
imul
and
push
add
js
je
pop
add
add
popa
add
insb
add
add
jb
popa
add
and
push
add
js
je
adc
dec
add
add
insb
add
add
je
and
inc
add
arpl
imul
add
outsl
add
outsb
add
add
imul
insb
add
add
je
and
push
add
js
je
add
push
add
popa
add
outsl
add
outsb
add
add
add
add
add
jbe
add
dec
add
jbe
jns
push
add
jne
jb
jo
insb
add
add
push
add
popa
add
add
jb
popa
add
push
add
imul
add
add
push
add
add
dec
add
insl
add
push
add
add
add
ja
add
inc
add
add
pop
add
jne
arpl
push
add
add
inc
add
jne
popa
add
add
je
add
add
outsl
add
add
and
inc
add
add
outsb
add
add
outsb
add
add
jb
outsl
add
popa
add
add
add
push
add
add
outsb
add
add
add
jbe
imul
and
data16
imul
add
add
outsb
add
add
jne
jae
je
outsl
add
and
insl
add
jae
jae
popa
add
add
add
add
add
add
add
add
jbe
imul
and
imul
je
popa
add
add
add
add
jne
arpl
arpl
add
jae
data16
insb
add
add
add
add
jbe
imul
and
and
and
add
add
popa
add
insb
add
add
add
add
add
outsb
add
je
popa
add
add
add
imul
and
add
jb
outsl
add
cmp
and
and
and
add
add
add
jbe
imul
and
jne
outsb
add
outsb
add
je
popa
add
add
add
add
jne
arpl
arpl
add
jae
data16
insb
add
add
add
add
jbe
imul
and
and
and
add
add
popa
add
insb
add
add
add
add
add
outsb
add
outsb
add
je
popa
add
add
add
imul
and
add
jb
outsl
add
cmp
and
and
and
add
add
add
imul
add
add
outsl
add
je
jb
outsl
add
add
jne
jae
je
and
push
add
and
popa
add
add
popa
add
add
add
outsl
add
and
jb
add
outsl
add
imul
and
arpl
outsl
add
je
jb
outsl
add
add
jb
outsl
add
and
add
arpl
imul
add
add
add
add
add
add
arpl
imul
add
outsl
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
arpl
imul
add
outsl
add
add
add
popa
add
and
outsb
add
and
arpl
outsl
add
je
jb
outsl
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
imul
and
popa
add
add
add
insb
add
and
outsl
add
and
inc
add
outsb
add
add
je
jae
adc
dec
add
and
push
add
and
data16
jne
outsb
add
add
outsl
add
and
and
add
outsl
add
add
outsl
add
je
add
je
sub
add
jae
imul
jbe
add
add
add
add
add
outsb
add
je
popa
add
add
add
dec
add
and
je
outsl
add
imul
bound
popa
add
add
add
add
add
add
jns
jae
je
add
and
imul
je
popa
add
add
add
add
arpl
imul
add
add
inc
add
ja
outsb
add
add
outsb
add
add
inc
add
insb
add
add
push
add
add
add
insb
add
add
inc
add
add
add
add
outsb
add
popa
add
add
add
insb
add
jo
bound
outsl
add
jb
add
add
outsl
add
insl
add
je
and
inc
add
add
bound
outsl
add
jb
add
add
add
jae
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
and
dec
add
outsl
add
jae
adc
add
outsb
add
je
and
outsl
add
add
and
arpl
insb
add
jo
bound
outsl
add
jb
add
add
add
jne
and
daa
add
add
add
jae
and
popa
add
add
popa
add
add
add
add
outsb
add
and
jne
jae
add
add
jns
and
popa
add
outsl
add
add
jb
and
data16
jb
insl
add
add
add
jbe
imul
and
data16
imul
add
add
outsb
add
add
add
add
add
js
add
jne
je
add
add
jb
je
add
jae
je
outsl
add
add
add
jae
add
add
outsl
add
je
imul
add
add
add
add
add
add
outsl
add
add
add
insb
add
add
add
and
je
outsl
add
add
insb
add
add
add
and
je
outsl
add
add
add
insb
add
add
imul
add
add
push
add
bound
add
inc
add
arpl
add
add
add
add
add
arpl
add
push
add
push
add
add
push
add
inc
add
add
inc
add
add
dec
add
insl
add
add
dec
add
data16
add
jo
add
add
push
add
add
add
popa
add
outsb
add
je
and
add
popa
add
and
popa
add
add
outsl
add
insl
add
add
add
add
imul
jae
adc
inc
add
push
add
add
add
add
add
imul
jae
add
add
outsb
add
pop
add
imul
popa
add
jae
pop
add
popa
add
outsb
add
outsb
add
add
add
outsl
add
or
dec
add
data16
jb
insl
add
je
imul
pop
add
outsl
add
data16
jb
insl
add
add
add
add
add
outsl
add
add
dec
add
add
popa
add
arpl
add
add
add
add
add
add
add
bound
outsl
add
je
push
add
add
add
add
add
adc
dec
add
outsb
add
and
imul
add
je
add
add
add
arpl
add
add
jne
bound
sub
add
jne
and
imul
outsb
add
je
and
imul
insl
add
outsb
add
sbb
dec
add
je
and
add
outsl
add
add
and
je
imul
jb
jae
and
popa
add
popa
add
insb
add
bound
insb
add
inc
add
jb
outsl
add
jo
dec
add
add
js
and
arpl
popa
add
outsb
add
je
and
bound
add
add
add
jae
and
je
push
add
add
and
jo
jb
add
imul
jae
and
insl
add
outsb
add
and
imul
insl
add
add
and
inc
add
outsl
add
jo
dec
add
add
js
xor
add
outsb
add
je
and
arpl
jb
add
je
add
add
outsl
add
insl
add
add
add
outsl
add
add
inc
add
and
data16
jb
insl
add
and
popa
add
add
add
jne
jb
jb
add
je
insb
add
and
popa
add
je
imul
sub
inc
add
add
outsl
add
je
jb
outsl
add
add
popa
add
outsb
add
je
and
push
add
and
imul
add
add
add
jae
and
imul
and
jo
popa
add
add
je
add
dec
add
push
add
popa
add
arpl
add
add
add
add
add
add
outsl
add
add
insb
add
push
add
add
insb
add
jae
add
add
add
add
outsl
add
add
add
add
add
add
add
add
jb
je
add
add
insb
add
add
add
push
add
jae
jne
jo
jo
outsl
add
je
add
add
insb
add
jo
bound
outsl
add
jb
add
add
outsl
add
insl
add
je
pop
add
jne
je
and
outsl
add
and
jae
jns
jae
je
add
and
jb
add
outsl
add
jb
arpl
add
sbb
add
jbe
popa
add
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
popa
add
imul
adc
dec
add
jbe
popa
add
add
add
insl
add
add
and
jae
imul
adc
dec
add
jbe
popa
add
add
add
insl
add
add
dec
add
jae
je
pop
add
outsb
add
popa
add
add
add
insl
add
add
dec
add
jae
je
and
dec
add
add
js
sub
inc
add
imul
add
add
add
add
add
add
add
insl
add
add
dec
add
jae
je
and
add
je
popa
add
add
jb
outsl
add
and
jae
je
jb
add
insl
add
add
popa
add
insb
add
add
add
add
add
jb
imul
and
dec
add
popa
add
add
add
je
and
add
je
popa
add
add
add
add
je
jb
add
insl
add
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
ja
imul
outsl
add
and
add
jbe
imul
and
arpl
outsl
add
je
add
je
sbb
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
ja
imul
outsl
add
and
arpl
insb
add
jae
jae
sub
inc
add
outsb
add
outsl
add
add
outsl
add
jne
jae
and
popa
add
add
add
popa
add
insb
add
add
add
jb
and
imul
imul
bound
insb
add
and
ja
imul
outsl
add
and
inc
add
outsb
add
add
insb
add
add
add
add
add
popa
add
and
outsb
add
and
jo
popa
add
add
je
and
ja
imul
outsl
add
sbb
add
outsb
add
je
and
push
add
and
popa
add
and
dec
add
add
add
push
add
add
outsl
add
insl
add
add
popa
add
outsb
add
je
and
arpl
push
add
add
add
imul
bound
insb
add
and
imul
dec
add
push
add
outsl
add
and
outsl
add
and
dec
add
dec
add
add
and
inc
add
outsb
add
outsl
add
add
popa
add
add
add
and
jbe
imul
bound
insb
add
and
ja
imul
outsl
add
and
insl
add
add
insb
add
add
add
jne
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
add
adc
push
add
add
popa
add
and
ja
jb
imul
and
add
jb
outsl
add
sbb
push
add
jb
add
add
add
jb
add
je
imul
and
add
jb
outsl
add
cmp
and
and
add
add
add
add
add
jb
jb
outsl
add
cmp
and
and
add
add
add
add
imul
outsl
add
jae
and
jae
outsl
add
imul
add
add
jb
jb
outsl
add
cmp
and
and
add
add
add
and
outsl
add
and
inc
add
dec
add
add
add
add
inc
add
jns
outsb
add
push
add
outsl
add
jae
and
jae
outsl
add
imul
add
add
jb
jb
outsl
add
and
and
add
outsl
add
add
add
add
jae
jae
and
jae
jo
add
imul
add
add
popa
add
daa
add
add
add
je
add
and
outsl
add
and
popa
add
and
outsl
add
add
and
jae
outsl
add
imul
add
add
popa
add
daa
add
add
jb
add
je
add
add
add
and
jae
outsl
add
imul
add
add
outsl
add
imul
add
add
insb
add
add
add
and
outsl
add
add
sub
inc
add
outsb
add
add
add
push
add
add
add
popa
add
add
and
ja
push
add
and
jae
outsl
add
imul
add
add
jae
and
popa
add
je
imul
sbb
inc
add
je
insl
add
jo
and
imul
add
and
imul
outsb
add
je
and
jbe
popa
add
add
add
arpl
outsl
add
and
imul
add
and
imul
outsb
add
je
and
jbe
popa
add
add
add
add
add
imul
and
imul
outsb
add
je
and
jbe
popa
add
add
add
outsb
add
popa
add
add
add
imul
insb
add
add
outsl
add
insl
add
je
sbb
push
add
popa
add
and
insb
add
outsb
add
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
and
inc
add
outsb
add
outsl
add
add
push
add
add
add
add
and
jae
imul
and
outsl
add
and
popa
add
and
imul
outsb
add
add
add
outsb
add
popa
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
add
je
and
arpl
popa
add
popa
add
imul
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
je
and
arpl
outsl
add
outsb
add
add
jne
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
je
and
imul
add
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
add
add
add
jne
je
and
outsl
add
and
insl
add
insl
add
jb
jns
and
ja
push
add
and
add
jo
popa
add
add
outsb
add
and
insl
add
insl
add
jb
jns
and
jae
je
jb
add
insl
add
add
jb
jb
outsl
add
and
jb
add
add
outsb
add
and
and
add
and
add
add
add
je
jb
add
insl
add
add
add
add
add
jb
jb
outsl
add
adc
add
jo
add
je
jns
and
imul
jb
add
add
add
add
add
popa
add
insb
add
add
add
add
add
jb
add
je
add
add
add
and
and
add
popa
add
insb
add
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
popa
add
insb
add
add
add
add
add
add
add
add
add
add
outsl
add
and
daa
add
add
add
outsl
add
jb
arpl
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
imul
add
outsl
add
add
insl
add
insb
add
insl
add
outsb
add
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
insb
add
add
add
add
outsb
add
add
outsl
add
je
add
add
add
je
and
and
add
outsl
add
add
outsb
add
add
and
arpl
insb
add
jae
jae
and
jb
add
imul
jb
popa
add
add
outsb
add
add
jb
outsl
add
jo
sbb
push
add
outsl
add
add
je
jns
and
and
add
add
jae
and
outsb
add
je
and
add
imul
sbb
inc
add
outsb
add
outsl
add
add
jae
jae
imul
and
popa
add
add
add
add
add
and
and
add
imul
and
imul
add
and
outsl
add
je
and
outsl
add
and
jb
popa
add
add
sub
inc
add
outsb
add
add
add
jb
imul
and
je
outsl
add
add
and
jb
add
add
add
add
add
add
outsl
add
jb
arpl
add
add
je
jb
add
insl
add
inc
add
add
imul
add
outsb
add
push
add
imul
and
arpl
popa
add
add
add
add
jb
outsl
add
and
je
push
add
add
add
and
add
add
push
add
and
imul
dec
add
push
add
add
add
and
insl
add
imul
je
push
add
add
add
insb
add
jae
jae
and
and
add
outsl
add
add
outsl
add
outsb
add
add
and
arpl
insb
add
jae
jae
and
outsb
add
insl
add
add
add
add
insb
add
add
add
and
add
imul
jae
and
add
je
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
jo
insb
add
arpl
popa
add
add
and
sub
and
xor
and
add
add
and
arpl
outsl
add
jo
outsl
add
add
je
and
outsb
add
insl
add
add
add
add
insb
add
add
add
and
add
imul
jae
and
add
imul
and
insb
add
jae
je
and
add
add
and
outsb
add
je
and
popa
add
add
ja
and
add
jo
insb
add
arpl
popa
add
add
sbb
inc
add
outsb
add
outsl
add
add
jb
add
je
add
add
imul
and
and
and
add
add
add
add
popa
add
outsb
add
je
and
outsl
add
add
and
data16
insb
add
and
and
and
add
add
add
add
outsb
add
popa
add
add
add
je
jb
add
insl
add
add
outsl
add
insl
add
je
and
daa
add
add
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
outsl
add
jo
outsl
add
add
je
and
outsb
add
insl
add
push
add
outsb
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jbe
popa
add
add
adc
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jo
popa
add
add
add
outsb
add
popa
add
add
add
jb
outsl
add
add
je
jns
and
jbe
popa
add
add
add
push
add
outsb
add
add
outsl
add
add
push
add
add
add
add
add
add
add
inc
add
imul
popa
add
add
jne
outsb
add
add
push
add
outsl
add
add
jns
pop
add
add
jae
add
jns
or
push
add
add
add
add
jns
or
push
add
jne
jb
jae
add
jns
push
add
jb
imul
jns
or
push
add
je
jne
jb
add
jns
sbb
push
add
popa
add
insb
add
and
je
outsl
add
add
jb
add
je
add
add
add
add
je
outsl
add
jns
sbb
inc
add
arpl
add
je
outsl
add
and
data16
jb
and
daa
add
add
add
outsl
add
add
outsl
add
outsb
add
add
add
add
add
add
dec
add
je
add
dec
add
jbe
add
inc
add
arpl
pop
add
popa
add
jne
popa
add
jns
or
inc
add
bound
jb
jne
popa
add
jns
add
add
arpl
push
add
jb
imul
dec
add
jns
add
dec
add
outsb
add
add
dec
add
insb
add
push
add
jne
add
jae
je
or
push
add
jo
je
add
bound
add
pop
add
arpl
je
outsl
add
add
or
dec
add
jbe
add
bound
add
or
inc
add
arpl
add
bound
add
adc
inc
add
jae
add
je
imul
and
data16
imul
add
add
outsb
add
add
data16
arpl
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
js
arpl
add
je
imul
and
imul
jae
popa
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
jae
je
jb
popa
add
je
and
inc
add
jb
outsl
add
aas
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
outsb
add
add
outsl
add
add
add
add
add
add
add
add
add
data16
add
add
add
jae
jae
and
and
add
jns
jae
je
add
and
inc
add
jb
outsl
add
add
add
add
outsl
add
add
add
add
add
add
pop
add
and
arpl
popa
add
add
add
add
add
outsb
add
add
push
add
add
jne
outsb
add
je
imul
and
data16
imul
add
add
popa
add
add
inc
add
bound
add
dec
add
jb
add
inc
add
jb
add
dec
add
jns
add
dec
add
outsb
add
add
jne
insb
add
add
jne
add
add
push
add
popa
add
add
jb
imul
and
inc
add
jb
outsl
add
and
arpl
jb
add
je
imul
and
jbe
popa
add
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
sub
push
add
jb
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
add
and
outsl
add
je
and
outsl
add
and
bound
outsl
add
outsb
add
add
add
popa
add
imul
je
and
outsl
add
and
jae
popa
add
add
add
jb
jb
popa
add
and
imul
insb
add
arpl
imul
add
add
outsb
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
outsl
add
jbe
add
jae
imul
sbb
dec
add
jbe
popa
add
add
add
popa
add
imul
je
and
outsl
add
add
popa
add
add
outsb
add
add
popa
add
add
add
popa
add
imul
je
and
outsl
add
add
popa
add
add
outsb
add
add
add
add
add
add
sub
or
and
add
outsl
add
insb
add
add
outsl
add
add
outsl
add
jbe
add
je
and
jbe
popa
add
imul
je
and
outsl
add
and
je
jns
jo
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
jb
data16
add
and
ja
push
add
and
arpl
outsl
add
jbe
add
je
imul
and
jbe
popa
add
imul
je
and
outsl
add
and
je
jns
jo
add
add
add
add
add
outsb
add
add
add
add
add
add
add
add
add
popa
add
imul
je
and
outsl
add
add
data16
add
adc
dec
add
jbe
popa
add
add
add
jb
add
insl
add
outsb
add
add
outsb
add
popa
add
add
add
popa
add
imul
je
and
je
jns
jo
add
add
jo
add
popa
add
add
outsb
add
add
outsl
add
add
jne
jo
jo
outsl
add
je
add
add
outsb
add
js
jo
add
je
add
add
popa
add
imul
je
and
add
jb
outsl
add
adc
add
add
outsb
add
insb
add
add
js
arpl
add
je
imul
and
and
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
add
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jbe
add
data16
add
sbb
inc
add
add
je
imul
and
jo
outsl
add
outsb
add
add
outsb
add
add
data16
add
sbb
dec
add
jbe
popa
add
add
add
outsl
add
outsb
add
add
and
outsl
add
add
popa
add
add
outsb
add
add
outsb
add
popa
add
add
add
insb
add
jae
jae
and
je
jns
jo
add
popa
add
je
xor
inc
add
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
and
popa
add
add
add
jae
and
and
add
add
add
data16
add
add
add
jae
jae
and
and
add
arpl
arpl
add
jae
and
jbe
imul
popa
add
add
outsb
add
add
je
popa
add
imul
add
jbe
add
data16
add
or
add
je
jb
outsl
add
add
and
push
add
add
jb
imul
insb
add
add
add
add
outsb
add
je
jb
jne
arpl
je
imul
adc
dec
add
add
popa
add
add
outsb
add
add
bound
outsl
add
je
add
add
js
arpl
add
je
imul
and
and
add
outsb
add
add
outsl
add
add
add
add
add
je
and
and
add
add
and
add
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
jb
jb
outsl
add
xor
inc
add
jb
insl
add
je
and
daa
add
add
add
outsb
add
popa
add
add
add
jb
and
imul
outsl
add
jo
popa
add
add
insb
add
and
ja
imul
and
popa
add
add
insl
add
outsb
add
add
outsl
add
add
jb
add
insl
add
outsb
add
add
outsl
add
and
data16
jb
insl
add
je
and
daa
add
add
add
popa
add
imul
je
and
insl
add
je
push
add
add
popa
add
add
and
outsb
add
je
and
jae
jne
jo
jo
outsl
add
je
add
add
add
add
add
add
add
jae
and
outsb
add
je
and
popa
add
add
popa
add
add
add
outsb
add
add
add
and
jbe
popa
add
add
pop
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
add
add
add
add
outsb
add
outsl
add
add
add
outsb
add
popa
add
add
add
jb
add
insl
add
outsb
add
add
add
add
add
add
add
outsb
add
outsl
add
add
add
add
data16
add
add
outsl
add
jns
or
dec
add
add
and
add
jb
outsl
add
and
and
add
imul
and
outsb
add
je
and
data16
jne
outsb
add
add
outsb
add
popa
add
add
add
imul
outsb
add
insl
add
adc
push
add
outsl
add
add
popa
add
jns
and
outsl
add
add
and
data16
insb
add
jae
adc
inc
add
insb
add
and
popa
add
arpl
add
jae
and
add
outsb
add
add
add
add
add
add
add
outsl
add
add
add
outsb
add
add
data16
add
imul
or
inc
add
jae
imul
add
jne
insb
add
add
outsb
add
popa
add
add
add
jne
insl
add
jb
imul
imul
jne
je
adc
inc
add
jbe
imul
outsl
add
and
bound
jns
and
jp
add
outsl
add
add
popa
add
add
and
arpl
push
add
and
add
jb
outsl
add
adc
dec
add
je
add
add
and
outsl
add
add
data16
add
and
dec
add
jbe
popa
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jo
add
popa
add
add
outsb
add
add
xor
inc
push
dec
inc
pop
dec
add
xor
gs
test
jo
and
jb
gs
arpl
jae
or
imul
dec
outsb
jne
or
jb
gs
je
insb
gs
or
push
imul
popa
jo
imul
or
insb
imul
addr16
inc
insb
imul
je
add
add
jb
or
inc
je
inc
popa
arpl
inc
outsl
outsb
je
inc
push
je
push
inc
inc
xor
xor
pop
inc
dec
inc
push
push
inc
push
or
outsb
je
inc
outsl
insb
outsl
jb
or
insb
push
imul
js
or
outsb
je
dec
imul
inc
outsl
outsb
je
dec
popa
insl
adc
add
add
inc
outsl
outsb
je
push
je
insb
or
or
jns
jb
jbe
gs
push
dec
insb
fs
jb
popa
je
dec
jb
gs
or
jae
je
outsl
outsb
pop
push
jo
push
arpl
outsb
inc
outsb
je
jb
dec
outsb
inc
jb
popa
je
pop
or
jb
inc
jb
popa
je
or
dec
gs
outsl
ja
pop
or
jb
dec
gs
outsl
ja
or
insb
jae
gs
outsb
arpl
pusha
or
je
imul
push
push
push
popa
outsb
gs
push
push
popa
outsb
gs
xor
gs
add
push
outsl
jo
add
push
imul
push
popa
bound
fs
add
add
dec
fs
inc
push
inc
insb
imul
je
outsl
imul
imul
js
imul
outsl
outsb
pop
or
inc
js
gs
imul
fs
imul
add
dec
outsb
inc
outsl
outsb
outsb
arpl
pop
sbb
je
outsl
imul
imul
outsb
arpl
add
outsl
jb
add
add
gs
sbb
add
push
push
imul
je
dec
outsl
imul
pop
inc
outsb
popa
bound
or
dec
outsb
je
jb
popa
insb
add
ljmp
imul
jne
outsl
dec
outsl
imul
push
imul
data16
cmp
add
push
push
jns
push
jb
jns
push
jns
push
jb
jns
arpl
push
inc
arpl
or
inc
gs
outsb
imul
outsl
outsb
cs
popa
je
or
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
or
add
js
mov
add
jo
ja
pop
jo
add
clc
mov
add
mov
pop
ja
jo
add
incl
ja
ja
add
js
mov
add
js
mov
jg
clc
xchg
add
jg
mov
add
ja
pop
ja
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
add
add
add
add
add
add
dec
imul
insl
outsl
je
inc
outsl
outsb
je
outsl
insb
or
jo
jo
outsl
fs
insl
push
imul
arpl
or
jo
jo
insb
imul
push
imul
jo
sbb
add
dec
fs
inc
push
inc
insb
imul
push
inc
push
inc
insb
imul
popa
js
imul
outsl
outsb
pop
or
inc
js
gs
imul
fs
imul
add
outsl
jb
add
add
push
push
push
imul
jb
or
je
jb
popa
insb
add
push
imul
insl
jb
push
imul
data16
push
add
add
add
cmp
inc
xor
xor
cmp
inc
inc
inc
cmp
xor
xor
xor
xor
inc
xor
inc
inc
inc
xor
inc
xor
cmp
inc
ss
inc
inc
inc
inc
xor
inc
inc
xor
inc
xor
inc
cmp
xor
inc
xor
xor
xor
inc
aaa
inc
inc
inc
xor
xor
xor
xor
inc
xor
inc
inc
inc
inc
aaa
cmp
xor
xor
aaa
xor
inc
xor
cmp
inc
cmp
xor
xor
cmp
xor
xor
cmp
inc
xor
inc
aaa
xor
inc
inc
ss
inc
inc
inc
inc
aaa
inc
xor
xor
xor
inc
xor
inc
xor
inc
inc
inc
xor
xor
cmp
xor
xor
xor
xor
xor
aaa
xor
xor
inc
inc
xor
xor
xor
cmp
inc
cmp
xor
aaa
inc
inc
inc
xor
xor
xor
aaa
xor
aaa
inc
inc
inc
inc
ss
xor
xor
inc
inc
cmp
xor
inc
inc
xor
cmp
inc
xor
inc
ss
xor
inc
inc
inc
aaa
inc
xor
inc
xor
inc
cmp
xor
inc
inc
inc
inc
inc
inc
inc
xor
aaa
ss
xor
inc
inc
xor
inc
xor
xor
inc
inc
inc
cmp
cmp
xor
inc
inc
xor
inc
inc
inc
xor
ss
inc
xor
inc
xor
inc
xor
aaa
aaa
aaa
inc
xor
xor
xor
xor
inc
inc
xor
xor
xor
xor
xor
inc
xor
inc
xor
inc
xor
cmp
xor
inc
inc
cmp
xor
inc
inc
xor
inc
xor
inc
inc
xor
ss
xor
inc
inc
aaa
xor
xor
inc
ss
xor
inc
xor
inc
xor
ss
aaa
inc
inc
xor
xor
inc
xor
inc
xor
inc
xor
inc
cmp
inc
inc
inc
xor
xor
inc
xor
xor
cmp
ss
inc
xor
cmp
aaa
xor
inc
cmp
inc
xor
cmp
cmp
xor
cmp
xor
inc
cmp
xor
inc
cmp
xor
inc
inc
inc
inc
inc
xor
aaa
inc
xor
xor
or
add
add
int3
add
add
mov
add
add
gs
adc
push
imul
insl
jae
adc
arpl
gs
add
push
jns
je
insl
add
adcl
je
sbb
dec
gs
popa
addr16
or
push
imul
adc
jns
gs
adc
dec
popa
je
add
popf
push
jns
inc
outsl
outsb
jae
add
add
jae
je
insb
jae
adc
je
jb
add
movl
add
push
imul
add
pop
inc
insb
popa
jae
gs
adc
push
push
dec
inc
outsl
outsb
jae
jae
adc
popa
jb
popa
outsb
je
add
and
popa
jb
je
insb
jae
adc
jns
dec
outsb
outsw
add
sub
popa
jo
imul
outsl
insl
insl
inc
je
insb
add
popl
popa
je
inc
add
fists
fs
arpl
add
mov
bound
add
pop
push
je
push
je
insb
jae
sbb
push
push
push
dec
add
es
outsl
outsb
je
outsl
insb
jae
adc
gs
adc
outsl
insl
inc
je
insb
jae
adc
je
jae
adc
je
jae
adc
dec
popa
jo
add
inc
inc
arpl
imul
outsb
jne
add
xchg
outsb
je
jb
add
int
insl
addr16
imul
je
inc
je
insb
jae
adc
outsl
addr16
adc
je
insb
jae
sbb
inc
insb
addr16
sbb
inc
outsl
insl
insl
inc
insb
add
sub
insb
dec
bound
sbb
push
gs
je
add
push
imul
sbb
push
jb
dec
outsl
outsb
add
mov
js
inc
insb
addr16
adc
inc
jne
je
outsb
jae
adc
push
imul
fisttpll
imul
adc
js
push
adc
dec
bound
add
push
imul
add
xchg
insb
push
imul
jae
inc
arpl
add
movsl
dec
jne
je
dec
outsl
outsb
add
dec
insl
insl
add
movsl
push
imul
imul
push
dec
gs
jo
outsb
je
jae
adc
push
gs
outsb
gs
outsb
imul
inc
push
inc
outsl
outsb
outsb
arpl
outsb
add
mov
je
inc
jb
gs
inc
popa
jae
add
or
inc
js
gs
imul
fs
insb
outsl
bound
add
les
push
je
arpl
imul
adc
push
gs
jne
arpl
je
imul
dec
fs
je
arpl
adc
fs
je
arpl
outsl
outsb
jae
jae
adc
dec
fs
imul
add
inc
dec
fs
push
dec
add
push
dec
fs
popa
jae
inc
outsl
insl
jo
outsb
outsb
je
adc
dec
fs
je
gs
insl
add
mov
fs
inc
push
push
je
gs
insl
add
decb
inc
outsl
insl
jo
outsb
outsb
je
adc
fs
outsl
arpl
je
popa
outsb
fs
add
push
dec
fs
outsb
je
jb
gs
add
inc
dec
fs
dec
dec
popa
outsb
fs
gs
adc
inc
push
gs
jns
adc
fs
dec
dec
popa
outsb
fs
gs
outsl
arpl
je
adc
fs
outsl
arpl
add
in
fs
jae
imul
insl
bound
jae
adc
imul
add
out
inc
inc
push
add
pop
jne
popa
push
arpl
inc
add
jne
popa
push
je
insb
jae
adc
insb
popa
arpl
outsl
add
push
jne
popa
push
jns
gs
sbb
push
insb
dec
gs
jo
xor
adc
outsb
popa
dec
push
push
popa
jb
gs
adc
outsb
popa
inc
insb
popa
jae
gs
sbb
dec
dec
push
jns
je
insl
add
xorl
dec
jae
arpl
push
dec
add
icebp
jne
popa
dec
jae
arpl
insb
popa
jae
gs
adc
outsb
popa
push
popa
jbe
add
push
jne
popa
push
dec
inc
inc
add
push
imul
adc
jne
popa
push
outsl
arpl
je
add
in
push
push
jns
gs
add
dec
popa
imul
jbe
push
outsb
fs
outsb
imul
inc
push
inc
insb
imul
push
imul
push
outsb
imul
add
mov
jae
jae
adc
outsl
inc
popa
jo
adc
popa
jo
adc
push
outsb
imul
add
and
arpl
xor
jns
adc
pop
dec
dec
push
inc
push
add
lret
dec
dec
inc
outsl
outsb
jae
add
cs
arpl
inc
outsl
insl
jo
adc
dec
je
jo
jb
js
add
mov
push
inc
xor
add
and
jae
jb
jns
adc
arpl
jb
or
push
imul
cmp
push
gs
insb
jbe
jb
adc
imul
jae
add
arpl
imul
popa
push
imul
sbb
dec
ja
push
imul
dec
ja
inc
arpl
je
insb
add
dec
ja
push
imul
sbb
dec
ja
dec
je
je
je
jae
adc
dec
push
inc
inc
dec
add
hlt
push
add
aas
ja
outsb
outsb
je
gs
imul
imul
add
les
outsb
dec
outsl
popa
fs
imul
adc
pop
dec
imul
imul
add
inc
jne
imul
arpl
inc
inc
popa
je
add
mov
push
gs
jne
arpl
gs
imul
imul
add
mov
insl
popa
addr16
insb
jo
adc
dec
inc
js
dec
gs
push
outsb
imul
add
add
add
add
add
xor
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
add
add
xor
add
push
add
add
add
add
add
add
add
xor
add
pop
add
add
add
add
and
add
add
add
xor
add
adc
sub
movsb
repnz
les
incb
cmpsl
addr16
cmp
cld
push
add
mov
ljmp
xchg
sub
mov
lock
sbb
sti
and
iret
pop
mov
std
ds
add
adc
mov
out
sbb
xchg
ret
addr16
pushl
sub
js
js
gs
out
sbb
mov
stos
add
loop
inc
pop
sarb
js
cwtl
rcll
push
cli
sub
scas
add
bound
cld
imul
outsl
fwait
push
mov
movsl
dec
lock
popa
mov
scas
xlat
jge
mov
pop
jno
inc
mov
mov
scas
enter
lahf
bound
and
jbe
adcl
jb
push
push
sub
push
shrl
mov
adc
cltd
ljmp
dec
test
loope
jns
and
push
fisubs
add
gs
repz
push
ja
call
fs
insl
pop
fistl
mov
mov
adc
adcl
and
pop
cmpl
out
adc
in
mov
fisttpll
jle
xchg
jle
arpl
out
ret
push
lcall
mov
out
roll
mov
xchg
ja
and
clc
jmp
pop
push
pop
inc
jl
cs
mov
das
dec
xchg
push
adc
xchg
and
pop
sti
jle
jbe
lret
daa
inc
mov
mov
mov
adc
and
ljmp
filds
fnstsw
fldenv
push
add
les
notl
sarl
inc
xorb
inc
lret
das
shl
cmpsb
in
push
add
sub
test
fiaddl
mov
mov
mov
cmp
or
mov
ffree
adc
das
in
fprem1
ds
pop
jo
into
repnz
aaa
jbe
pop
push
cmp
cmpsl
ret
cmp
sub
mov
push
daa
cmpsl
cmp
les
jne
or
imul
pop
js
mov
jmp
int3
push
addr16
mov
adc
xchg
xchg
insb
dec
or
ret
push
imul
cmp
or
sbb
leave
orl
push
adc
adc
das
mov
jno
outsl
js
adc
test
stc
xchg
push
mov
out
inc
or
jae,pn
outsl
mov
movb
rclb
pop
inc
outsb
cmp
or
add
jae
cmp
cmp
cmpl
inc
sub
enter
mov
cli
vmovupd
jbe
pop
sbb
lret
inc
cmc
cmpsl
lock
fbld
fcompl
and
sub
cmpsl
hlt
pop
sahf
dec
rorb
pop
add
sub
adc
mov
sbb
bound
jl
lods
sahf
test
mov
in
stc
and
xchg
mov
movsl
sahf
les
mov
aaa
cmp
out
push
xchg
sarb
gs
cmp
push
stc
dec
adc
mov
mov
jge
int3
fisttps
mov
mov
and
push
jmp
pop
fcoms
push
xor
xlat
test
mov
add
mov
inc
aam
cmp
xchg
andb
xor
sbb
test
lods
insb
loope
into
pop
shrb
push
pop
fsubs
mov
push
add
das
sub
adc
mov
popf
cmc
in
xchg
jle
mov
xor
push
jecxz
test
xor
xchg
xchg
test
popf
mov
cmpb
popf
test
adc
mov
in
into
je
sub
or
dec
inc
cmp
pop
mov
shr
enter
adc
call
test
test
mov
jne
push
mov
cmp
fldcw
sbb
data16
pop
pop
stos
sbb
fucom
pop
push
xor
xor
inc
cltd
push
xchg
fs
movsb
dec
mov
clc
sub
xor
pop
imul
lock
sub
rolb
ss
or
fcomp
std
xchg
mov
cmp
sub
adc
cmpsb
iret
or
cmpsb
xchg
lods
mov
mov
bound
inc
movsb
int3
inc
stos
loope
out
cmp
mov
xor
movb
popf
jne
cmp
movsb
jle
mov
inc
pop
outsb
adcl
scas
xor
std
jne
push
mov
and
pop
test
popa
add
mov
popf
sub
or
mov
xchg
ss
sbb
add
dec
jl
bound
xchg
mov
push
decl
or
add
lock
mov
dec
fists
inc
loopne
push
leave
mov
cltd
mov
popa
push
jg
pop
stc
sub
xor
mov
clc
mov
iret
adc
jge
fstpt
int
inc
int
outsl
cli
cmp
neg
or
jb
mov
jl
out
stos
rorl
push
pushf
out
cmp
mov
imul
das
adc
jnp
in
repnz
push
inc
daa
sub
fs
filds
mov
imul
nop
sbb
ret
aad
das
in
jno
xchg
jbe
dec
fists
adc
push
and
jns
das
mov
addr16
sub
test
sti
push
bound
in
dec
jmp
cmp
ficomps
push
shll
scas
sbb
inc
arpl
cwtl
jno
loopne
lahf
inc
sub
rorb
add
repz
bound
and
push
jae
std
pop
adc
rcrb
sbb
out
icebp
dec
fistpll
idiv
les
sub
pop
sar
jns
out
repnz
inc
repz
xchg
fbld
mov
clc
fs
mov
xchg
push
cmp
push
rcrb
xor
or
js
adc
cli
cltd
nop
es
loope
cmc
mov
loop
movsl
or
push
je
pop
inc
aaa
dec
mov
cwtl
andb
xchg
ss
hlt
pop
cld
fwait
mov
inc
push
scas
push
fimull
pop
and
sub
and
xlat
push
pop
pop
mov
mov
les
mov
fs
and
fdivrs
push
in
lods
pop
adc
aaa
pop
jae
mov
pop
mov
jno
imull
aam
movsb
mov
not
jo
cmpsb
cmp
cmpsl
jmp
jno
xchg
iret
arpl
push
popa
je
adc
icebp
push
aad
xchg
push
dec
pop
insb
pop
cmp
call
push
stos
gs
inc
dec
or
sahf
test
in
in
push
mov
int
or
mov
cmp
scas
lods
sbb
popa
and
xor
mov
div
push
xchg
xchg
jns
xchg
push
dec
adc
rol
repnz
xchg
mov
mov
jp
cmova
mov
pop
hlt
xchg
push
xchg
sbb
repz
xor
fs
int
addr16
pop
clc
cmp
dec
jp
cmp
mov
aam
popa
pop
clc
outsl
enter
jne
and
jnp
jp
aam
outsb
call
std
jmp
mov
jl
out
push
in
inc
in
aaa
xchg
fimuls
ficomps
cmp
jecxz
jae
xor
jns
fcmovu
js
into
jb
int3
mov
mov
push
frstor
sbb
jb
sbb
fnsave
clc
add
fsts
dec
dec
fsubrl
stos
cmp
xor
fdivs
lods
and
fcomp
out
cmp
mov
mov
pop
ja
movsb
jb
stos
daa
out
insb
test
psrlq
pop
mov
sub
cmp
jmp
lcall
pushf
jb
pop
sbb
inc
or
ret
loopne
scas
xchg
inc
inc
dec
sti
sub
stc
jecxz
or
fidivrs
popa
fld1
int
dec
xor
test
cmpsl
or
popa
cmp
push
cs
dec
test
addr16
dec
mov
push
repnz
insb
add
enter
hlt
mul
gs
cmp
add
xchg
lock
sub
mov
sub
insb
aam
movsl
in
je
mov
push
icebp
or
xor
fsubl
test
sub
lahf
insb
in
lcall
adcb
andl
xchg
int
xor
pushf
cmpsl
mov
mov
lock
inc
xor
xchg
pop
inc
popa
and
je
add
mov
scas
xchg
jne
cmp
add
xor
dec
xor
adc
push
push
add
adc
scas
pop
mov
add
sbb
push
sbb
mov
mov
enter
sub
xor
mov
sub
sbb
xchg
fcompl
arpl
jge
mov
arpl
sub
hlt
fdivp
sbb
pop
in
adc
es
and
stos
lock
mov
pop
mov
int
ss
dec
in
mov
les
add
add
xlat
mov
je
aam
test
aad
jnp
inc
fsub
jns
rep
xor
fsts
push
call
fiaddl
lret
pop
pushf
or
cwtl
cmp
ds
imul
addr16
inc
cld
fs
jecxz
outsb
add
and
je
xor
push
inc
push
mov
lods
imul
or
jae
mov
xchg
and
sub
mov
xlat
imul
and
dec
inc
xchg
sbb
xlat
and
inc
mov
loop
pop
push
pop
xor
fisttps
inc
ret
outsb
sti
scas
popf
jbe
sbb
sbb
subb
sub
xor
add
lahf
aad
repz
popa
cwtl
loopne
scas
popf
in
and
inc
pop
dec
ret
mov
mov
roll
mov
push
pop
mov
out
test
dec
clc
push
icebp
notb
dec
popa
adc
dec
js
lds
xchg
jae
pop
imul
cmp
jae
imul
fsubs
popa
imul
mov
xlat
cmp
xchg
sub
mov
jbe
insb
ud0
imul
inc
and
iret
cmp
cwtl
out
sbb
xchg
sbb
popf
sti
mov
mov
jb
inc
lcall
mov
jne,pt
testl
dec
push
jl
test
inc
enter
dec
repnz
xchg
xor
and
cmpsb
insb
repz
sub
sub
fdiv
mov
aaa
mov
fs
jne
shlb
cld
adc
inc
fsub
pop
adc
mov
mov
std
pop
mov
lahf
mov
ds
adc
jb
and
or
cmc
repnz
xchg
push
in
push
leave
clc
std
hlt
mov
xchg
add
push
iret
jmp
adc
fadds
mov
sub
sbb
push
in
pop
xchg
pop
xchg
push
jne
addr16
add
adc
mov
cs
cld
in
cltd
imul
fs
or
sub
xchg
cs
call
add
ret
lods
dec
enter
cmp
sbb
jne
subb
jge
fwait
mov
shrl
xor
inc
cmpsl
mul
cmc
cmc
xor
rorl
inc
push
inc
mov
mov
ds
inc
insb
sub
mov
rcl
dec
call
fisubl
inc
fwait
dec
adc
pop
arpl
ja
stos
in
pop
push
sub
cmp
push
add
ret
test
mov
movsb
jo
or
push
pop
fsts
mov
cwtl
mov
movsb
add
dec
or
xchg
jno
mov
mov
out
xchg
mov
shl
mov
repz
rcl
push
in
pop
enter
dec
imul
sub
dec
outsb
jp
mov
decl
mov
sahf
xor
mov
jnp
add
mov
cli
sbb
lods
xor
je
dec
loop
mov
dec
lret
imul
fisubs
movsb
call
scas
ljmp
lods
push
into
adc
movsl
call
adc
outsb
cmp
jge
sbb
push
xchg
insb
movb
adc
stos
xor
add
sbb
in
jno
lahf
lds
xchg
sarl
rcr
xchg
xchg
nop
in
cs
out
sbb
mov
addr16
pop
sbb
sbb
xchg
ljmp
insb
mov
and
dec
mov
sar
out
cwtl
push
jecxz
imul
sahf
pop
fstl
adc
sbb
loope
frstor
out
inc
xchg
pop
mov
pushf
cmp
ficoms
adc
fbld
aaa
test
stos
movsb
sub
mov
into
inc
jmp
inc
xor
loope
inc
mov
mov
jmp
push
enter
push
stc
pop
and
mov
sti
ss
in
js
pop
iret
add
into
cmp
sti
lods
loopne
xchg
mov
cmp
sub
movsb
cli
bound
push
addr16
mov
push
out
cli
loopne
sub
insb
ja
jne
adc
sbbb
mulb
mov
in
lock
inc
dec
push
adc
fisubrs
pop
push
cmp
and
popf
adc
scas
jnp
in
shlb
push
in
clc
add
mov
jo
mov
mov
jp
push
shrb
pop
es
and
in
ss
push
mov
adc
sub
xlat
push
aas
inc
addl
mov
fwait
scas
push
loop
xor
daa
test
mov
pop
movsb
fistpl
and
adc
and
scas
ror
enter
test
addr16
mov
pop
fisubrs
xchg
mov
sbb
mov
xchg
sbb
xchg
adc
pop
push
into
sbb
push
push
add
push
sbb
repz
pminub
push
jo
jae
lret
cmpsl
add
hlt
mov
rep
pop
push
cwtl
arpl
xor
imul
cmc
push
outsb
lret
nop
dec
mov
lock
into
inc
pop
cmc
pop
add
sbb
data16
test
lds
in
lea
stc
jl
gs
jo
fwait
jae
jge
outsb
adc
aas
xchg
push
mov
add
arpl
lock
or
pop
dec
fcoms
add
xor
mov
js
add
add
mov
bound
adcl
cmpl
push
cmp
dec
pop
dec
mov
pushl
into
mov
cmpsl
hlt
pop
mov
lea
clc
jae
imul
pop
inc
cli
aas
icebp
mov
mov
pusha
dec
les
xchg
pop
jmp
push
mov
inc
add
imul
sti
mov
aaa
inc
cmp
adc
pop
sub
enter
lcall
cmc
or
ljmp
mov
xor
cmpsb
xchg
jmp
popf
pop
cmc
fsts
inc
adc
rorl
xor
jp
ds
or
jno
lock
cmpsb
push
mov
or
dec
insb
pop
push
loope
out
fadds
cmp
fsubr
aaa
fldl
popf
push
dec
out
push
mov
movsb
cmp
sbb
sbb
mov
jl
sub
add
adc
add
call
add
lods
inc
mov
test
cmc
cmp
pop
int
dec
fisubs
pop
pop
push
xchg
cwtl
jg
xchg
dec
cld
andb
pop
inc
ret
testb
aad
or
jmp
xchg
lcall
pop
aam
pop
mov
mov
or
push
mov
loopne
pop
sbb
add
aaa
movsl
and
mov
nop
mov
mov
leave
call
es
stos
scas
mov
movsl
mov
mov
fdivr
mov
stos
or
lds
or
xchg
jp
adc
inc
sbb
cmp
das
in
pop
or
jbe
sub
shll
xor
or
aad
xor
mov
cmp
jmp
orl
std
cmpsb
and
out
fildll
inc
ret
cmp
pushl
aaa
imul
push
sbb
stos
pop
adc
xchg
sbb
adc
bound
push
push
leave
les
sbb
aas
pushf
subb
int
jecxz
xor
movsb
imul
jl
jo
pop
rol
in
js
dec
int
add
or
lret
dec
mov
test
xchg
arpl
xor
xor
loope
fdivrs
dec
int3
addr16
jae
jno
push
xor
std
cs
in
test
cmp
movsb
adcl
cmp
adcl
in
dec
inc
data16
test
mov
leave
and
sbb
stos
hlt
fs
pop
mov
sub
adc
push
mov
fcmovbe
daa
loop
ds
add
leave
mov
inc
mov
inc
cmp
ljmp
lcall
jae
test
dec
ss
mov
test
fisubrs
push
dec
jecxz
xchg
xchg
jae
jmp
mov
add
lea
adc
dec
aad
xchg
ss
insb
jnp
cs
ds
mov
lahf
adc
pusha
aas
daa
ds
cmp
push
jns
leave
inc
cmp
adc
js
or
mov
jp
bound
mov
add
movsl
lock
call
push
add
xor
cmp
rclb
addr16
orb
jo
push
cmp
insl
mov
xchg
popa
mov
test
sbb
dec
neg
push
mov
stos
inc
push
ljmp
xchg
xor
add
outsl
add
insb
scas
loope
lcall
les
mov
mov
mov
pop
or
pop
lds
inc
mov
dec
cmc
xor
xchg
pushf
popf
xchg
xchg
std
insl
xor
dec
iret
mov
mov
pop
fisubl
push
jmp
aas
repnz
hlt
fs
test
add
in
adc
je
out
jns
xlat
xchg
int
cld
ss
arpl
jle
mov
fcoms
loopne
pop
shl
pop
mov
orb
out
ds
leave
push
xor
xchg
push
or
sbb
fldenv
pop
into
loope
ret
pop
inc
dec
loope
outsl
lods
mov
movsl
push
orl
nop
test
repnz
mov
jl
pop
cmp
ss
add
in
sub
add
stc
adc
mov
mov
inc
inc
or
test
lock
sbb
inc
popf
xor
jp
mov
lcall
push
inc
jnp
aas
lret
xchg
or
dec
xor
mov
rcrl
inc
sub
mov
xchg
and
mov
push
in
js
jb
movsl
adc
int3
cmp
cmp
jmp
jbe
in
mov
ds
cs
pusha
adc
sub
push
mov
icebp
xchg
pop
shlb
adc
pop
hlt
pusha
xlat
popa
add
hlt
ja
out
or
mov
cmc
dec
sbb
or
inc
cmp
arpl
add
addb
out
mov
dec
mov
repz
insl
pop
rolb
cmp
inc
repnz
loop
add
das
xor
mov
enter
jb
loop
into
std
inc
sbb
mov
rol
cmc
adc
pushf
repz
loop
insl
mov
or
popa
xor
pop
test
inc
xchg
mov
sbb
ds
hlt
repnz
mov
dec
sub
sbb
ja
cmp
adc
jb,pt
jecxz
or
mov
mov
inc
sub
fcoms
mov
lcall
pop
mov
jmp
jle
or
or
lods
cmp
je
roll
mov
and
inc
imul
divb
rcr
pusha
jnp
adc
pop
jb
pop
push
inc
add
out
lods
mov
fs
insl
dec
jo
add
aam
pop
cltd
cwtl
outsl
lods
jmp
into
dec
popa
ds
sub
adc
cmpb
mov
out
inc
push
das
fsub
divb
mov
lods
mov
lea
mov
lea
sbb
cmpsb
gs
call
cld
add
xrelease
cmp
push
lock
movsb
aas
das
sbb
add
out
dec
inc
pop
dec
loope
icebp
pop
jp
cmc
add
jmp
push
and
fwait
mov
pop
lods
mov
fwait
divb
inc
mov
xchg
sti
pop
jecxz
loope
movsl
imul
arpl
and
scas
and
addr16
inc
pusha
jae
aad
lret
clc
sbbl
pop
bound
inc
adc
or
cwtl
pop
xchg
ja
inc
int
sbb
jle
rorb
cmp
negb
cmpsb
fwait
aas
jecxz
or
gs
xor
cmp
sub
xchg
lret
push
dec
mov
mov
fstp
cmp
mov
mov
mov
in
cmpsb
rclb
pop
and
mov
mov
into
inc
inc
mov
pop
mov
mov
repz
adc
pushf
add
inc
xchg
daa
lret
mov
movsl
mov
xlat
pop
cmc
mov
xchg
cwtl
add
outsl
insl
sbb
lock
cmp
add
cmp
les
xchg
and
arpl
sub
fsts
int
leave
ror
inc
mov
xlat
jmp
adc
mov
mov
inc
int
sar
mov
dec
scas
js
dec
mov
out
mov
pop
jo
dec
add
popf
push
mov
lds
js
and
call
mov
out
pop
mov
inc
rcrl
push
pop
xchg
outsl
in
outsb
pop
or
sub
sbb
icebp
xor
lock
data16
sahf
lds
sahf
jmp
sahf
sbb
xor
inc
xchg
roll
lods
jmp
jb
jnp
or
sub
fmull
int
xchg
mov
pop
hlt
dec
and
or
mov
adc
xor
hlt
pop
pop
jle
ret
gs
stos
cwtl
test
jle
enter
pop
imul
lods
pop
aad
cmp
jge
gs
push
or
fildl
jg
sti
mov
push
fimull
testb
pushf
cmp
and
cld
mov
dec
lret
in
mov
jae
aad
imulb
scas
mov
sub
jp
cwtl
insb
jbe
inc
sarb
inc
cs
enter
push
test
push
add
scas
inc
cmpsb
int3
cmp
cmp
faddl
pop
pop
clc
bound
fndisi(8087
rcrb
jge
mov
mov
inc
ja
outsl
push
sbb
popa
cmpsb
out
add
hlt
sbb
into
or
and
push
ds
xor
nop
xchg
xchg
or
sbb
inc
aad
add
xchg
sub
daa
xor
fpatan
and
mov
or
push
mov
fcmove
outsb
mov
adc
sub
outsl
aad
lock
imul
sub
lcall
repnz
test
pop
mov
mov
mov
sbb
fdivl
push
stos
fsubs
cmp
idivl
pusha
ds
loop
arpl
mulb
int
add
push
sbb
loope
cmp
in
push
xor
jae
lock
sub
std
pop
or
imul
fwait
xchg
mov
lret
je
xchg
imul
rcll
rclb
add
xchg
es
sub
outsb
stos
push
fmull
pop
or
aad
add
lods
jle
fs
mov
xchg
pusha
bound
mov
mov
nop
or
jg
add
jne
mov
adc
loopne
fstpl
enter
pop
push
movsb
int
or
insb
or
mov
addl
shll
push
mov
push
cld
sti
repnz
popa
and
push
jbe
lret
popa
xchg
jb
push
insl
push
test
psrld
sub
mov
rcl
jno
xchg
xor
test
xchg
and
std
mov
leave
ror
cmp
aaa
ficoml
cmpsb
fcoml
jae
mov
daa
inc
ss
leave
into
add
push
xchg
je
arpl
rcl
sti
movsb
not
and
sbb
push
xor
sub
push
adc
mov
pop
pop
rcrl
out
push
lock
mov
dec
mov
mov
stos
xor
inc
mov
add
pop
xor
or
loopne
cld
sbb
sahf
push
mov
xchg
fwait
test
ret
dec
xor
mov
sbb
fldt
movsb
test
cmpsl
lret
xlat
mov
nop
fnstcw
jae
adc
xchg
push
call
pusha
jl
ljmp
push
cmpsb
jbe
shrb
arpl
outsl
popf
adc
jp
bound
xchg
jb
lods
dec
les
push
int3
dec
mov
or
mov
arpl
stc
sub
inc
and
inc
add
fstl
movsb
hlt
xor
jne
lret
clc
mov
mov
hlt
push
sbb
aas
sub
sub
xchg
lret
xchg
mov
jmp
dec
pushf
xlat
sbb
stc
test
dec
pop
outsb
mov
mov
imul
daa
mov
lock
repz
enter
push
dec
out
pop
sbb
add
sarb
sub
cli
and
out
sub
sti
fcompl
mov
std
out
movsb
add
pop
sbb
mov
pop
adcb
cmpsb
daa
mov
rcrl
js
or
push
push
jge
fisubrl
pop
movsb
or
pushf
fstpt
jns
fcompl
xchg
pop
lcall
xchg
cli
lds
xor
decl
stos
add
mov
mov
sarl
xchg
mov
xchg
xchg
cmp
or
mov
sub
push
pop
xor
out
mov
int
cmp
outsl
sbb
mov
push
mov
out
lods
arpl
lcall
popf
cltd
push
mov
cmpsl
cmpsl
packsswb
cmp
xlat
xchg
adc
jne
pusha
add
mov
inc
inc
inc
or
outsb
loope
and
or
aam
xor
enter
inc
xor
pop
popf
sub
push
push
cmc
sub
inc
fistpl
test
mov
stc
pop
jl
jb
pop
mov
sub
xor
sub
lret
mov
mov
pop
lock
incl
lods
dec
in
push
xor
andb
rorb
cli
inc
cmp
lock
cmp
mov
les
ror
push
rcl
ss
push
loop
fadd
lcall
mov
cmp
inc
addb
or
add
jae
call
mov
inc
pop
data16
push
lahf
inc
jae
inc
and
clc
jg
hlt
xor
cmp
mov
imul
xchg
je
stc
in
fdivrl
pop
dec
dec
repz
pop
dec
jnp
sti
sub
xchg
xor
jmp
aas
addr16
fidivl
dec
in
push
xchg
xchg
sbb
add
mov
push
lea
in
or
cmp
mov
out
sti
repz
inc
into
popf
fs
add
pop
repnz
lea
lods
cmp
pop
push
add
add
std
cmp
cmp
mov
fwait
push
cs
pop
rcrl
stc
loope
mov
mov
clc
std
loope
fildl
repnz
ja
jle
into
jge
or
data16
shl
lahf
push
fadds
jbe
aam
jecxz
inc
ds
test
fwait
lcall
push
repz
aam
lock
mov
clc
cli
scas
and
adc
repnz
push
or
in
cmp
dec
lock
popa
sub
insl
sub
inc
cmp
enter
lock
arpl
mov
and
loop
dec
ljmp
jge
jno
jo
loop
pop
stc
std
and
cmpb
loopne
orb
inc
orb
aas
insl
lea
xorb
adc
lods
mov
cmc
sbb
lods
in
imul
in
in
inc
lods
outsb
xor
jle
xchg
loopne
jb
loop
jo
mov
mov
pop
jbe
int
arpl
mov
push
cmp
add
push
jno
dec
lahf
push
mov
mov
push
mov
sub
and
popa
add
push
mov
aad
js
jecxz
in
fildll
icebp
divl
jge
in
push
test
sbb
add
mov
or
mov
fneni(8087
fcoms
pusha
lret
shl
xor
sub
fstl
aad
or
call
push
cmp
adcl
push
xchg
cld
shrb
push
inc
dec
xor
mov
imul
push
movsb
mov
mov
push
adc
cmpsl
xchg
test
data16
aad
and
jl
jno
fldl
dec
xor
and
xchg
cmpsl
xor
cmc
jg
mov
sbb
pop
lahf
cs
popa
jg
cmpsb
imul
add
or
mov
cmp
hlt
jae
inc
mov
and
sub
pop
add
in
mov
test
pop
icebp
inc
or
xchg
sub
and
sub
mov
cmp
xchg
cli
sub
clc
mov
sarl
push
add
add
dec
cmpsl
xchg
dec
ret
mov
inc
in
pop
sub
pop
fnsave
mov
aad
out
jg
jecxz
ljmp
jg
sub
shlb
out
push
aaa
xchg
or
mov
inc
pminsw
cmp
sbb
jno
dec
mov
jmp
push
lahf
jns
and
pop
ret
scas
imul
popa
pop
dec
xchg
int
ja
sub
jg
or
inc
mov
test
inc
aaa
cmp
sub
mov
mov
or
add
imul
cld
outsl
xchg
stos
cmp
jbe
movsl
xbegin
inc
fisttpl
out
arpl
mov
pop
int3
cmp
into
sti
lods
xchg
push
push
mov
dec
int
dec
or
jb
or
cmp
pop
xchg
mov
popa
push
divb
mov
repz
jb
mov
lret
insb
or
std
xorl
popf
repz
rcl
and
shr
adc
sbb
and
jmp
stos
adcb
ret
push
jp
cmp
rcr
dec
mov
push
xor
adc
loope
movsb
outsb
call
aam
stc
rcr
ljmp
adc
mul
pop
add
mov
xchg
mov
repnz
pop
inc
adc
or
into
pop
push
xchg
in
add
movsl
out
mov
stos
cmp
adc
xchg
popf
cs
push
lret
jno
pusha
add
ss
lcall
jne
push
shl
cld
push
jmp
or
mov
pop
cmp
loopne
scas
cmpsl
js
inc
jp
inc
pop
cmp
outsl
js
stc
cld
std
jo
jb
repnz
out
dec
fidivs
xchg
adc
jg
add
mov
cmp
test
xorb
nop
push
sbb
aad
in
fmul
sub
lcall
fisubrl
je
cmp
imul
insl
subb
int3
jno
jle
xor
inc
jnp
mov
mov
call
ja
add
addr16
jne
out
xchg
push
outsb
call
bound
dec
xlat
into
fstl
dec
jp
mov
dec
subb
ret
mov
pop
push
cmpsl
test
push
pop
aad
cmpsl
mov
adc
dec
lahf
sbb
xchg
sar
jp
sub
sbb
lods
jbe
push
add
mov
dec
push
popa
into
in
mov
std
ja
pop
out
fisttpl
shlb
sub
call
inc
in
rorl
mov
fstpt
ss
inc
in
jnp
xchg
lcall
cmpsb
add
int
xlat
test
mov
insb
mov
mov
jmp
outsb
pushw
cmp
xchg
cmp
jg
cmp
ds
inc
fists
filds
mov
aas
mov
mov
inc
xchg
out
jae
cld
ja
cmpsb
mov
test
arpl
les
stc
cmp
std
movsl
into
pop
scas
jmp
push
or
movsb
cmpsb
int
cmp
scas
jb
lahf
icebp
in
scas
dec
xor
push
pop
dec
imul
icebp
aam
ficomps
push
add
imul
int
aaa
mov
push
xchg
jl
cmp
mov
ljmp
push
dec
lea
cmp
pop
enter
add
jno
pop
in
int
or
xchg
cmp
and
sub
repz
aaa
lods
popf
mov
xchg
div
mov
mov
in
jne
add
filds
pop
fsubs
loop
imul
popf
jle
mov
fcoms
ret
repnz
mov
stos
fldenv
outsb
outsb
test
inc
and
xchg
adc
aam
mov
es
fldl
mov
imul
out
add
lock
dec
icebp
test
ljmp
sbb
xor
shlb
jp
push
out
shl
outsb
stos
rcrl
adcl
pop
jb
pop
popa
cmpsb
lds
sub
xchg
jbe
inc
dec
push
mov
cmp
and
add
insl
fcmovnu
enter
sbb
adc
push
mov
iret
arpl
fucomi
xchg
enter
xor
push
fisttps
.byte
push
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
pusha
sbb
mov
jae
jg
pop
mov
add
sub
push
movzwl
pop
call
push
xchg
test
xor
cmp
mov
pop
stos
adc
xor
push
mov
pop
sub
push
jmp
addr16
mov
cmpb
push
mov
popl
sub
mov
add
mov
cmp
jne
mov
cltd
mov
mov
loope
jge
hlt
bound
mov
movsl
das
in
sub
xorl
mov
pushf
pop
std
cmp
xchg
test
movsl
test
or
lret
inc
inc
rolb
mov
cmp
adc
mov
adc
mov
das
mov
mov
pop
lahf
imul
inc
pop
and
stos
mov
jp
cld
sysret
ds
xchg
addr16
ljmp
jl
dec
xchg
popf
jl
movsl
sub
jae
data16
cmp
repnz
fisubl
sub
push
inc
mov
in
cli
mov
gs
and
push
ljmp
xchg
loopne
sahf
inc
mov
mov
xchg
mov
adc
repnz
pushl
add
jl
xor
cwtl
mov
xchg
cmp
mov
fcoml
repnz
lret
and
push
inc
or
push
inc
repnz
loopne
ret
sbb
xchg
in
mov
push
push
mov
inc
add
iret
jmp
cmp
cltd
mov
and
loop
sub
and
mov
sub
fidivrl
in
rcr
push
sti
add
push
jnp
fmulp
in
sahf
test
and
ja
sub
push
shrb
or
adc
fmulp
mov
sub
js
rcrb
mov
fmulp
in
fmul
mov
xchg
push
cli
incb
out
inc
iret
in
rcr
dec
pop
jecxz
int3
in
adc
push
call
mov
cs
movsl
stc
lock
jo
rcr
int3
test
mov
dec
jge
cwtl
leave
and
xor
mov
movsb
cmp
fs
xor
mov
cmp
fcompl
cmp
adc
lea
inc
fmul
in
rorl
inc
lret
stc
iret
dec
mov
jp
aas
push
dec
dec
int3
xor
xor
mov
and
ret
dec
icebp
imul
leave
and
xor
ret
pop
and
and
cmp
and
jmp
ret
outsb
ret
ficoml
adc
add
add
test
outsb
pop
stos
pushf
pop
stos
ret
adc
pop
xor
cmp
jle
pop
popa
mov
push
insb
mov
fcmovb
push
mov
or
mov
xor
int
mov
rcr
cmp
lds
push
or
outsb
rcrb
fildll
push
push
add
sub
enter
enter
enter
and
xor
cmp
scas
int
mov
cwtl
push
xor
push
cmpsb
pop
sahf
cmp
rorl
and
push
int
sahf
push
mulb
mov
push
hlt
out
jns
pop
hlt
rol
and
push
mulb
mov
sarb
mov
xor
out
pushf
pop
xor
les
out
mov
xor
mov
sub
push
mov
dec
insl
or
nop
jecxz
xchg
pop
mov
or
movsl
outsl
cmp
lods
xor
push
mov
andb
sub
and
scas
stos
and
andb
daa
ja
mov
xor
inc
sarl
push
push
and
xor
cmpsl
test
andb
scas
and
sub
and
scas
and
scas
outsb
and
xor
loop
pop
out
stc
mov
jle
loop
xor
push
mov
mov
andb
hlt
jge
mov
andb
loope
and
xchg
push
outsl
inc
ljmp
inc
sbb
xor
push
mov
xchg
or
mov
stc
andb
js
pusha
mov
sub
cmpsl
add
andb
jmp
andb
cmp
cmc
add
out
sub
and
scas
scas
and
pop
pop
dec
mov
sub
lret
andb
xor
pushf
mov
xor
and
jg
push
lcall
xor
pop
add
sbb
das
shl
mov
clc
repnz
pop
sub
mov
clc
jbe
in
sub
daa
and
shll
pop
insb
lret
xchg
popf
sbbl
mov
shl
mov
clc
push
pusha
outsl
sub
sub
pop
imul
pop
loope
and
cs
das
shl
mov
clc
xor
fiadds
and
cs
das
shl
mov
clc
xor
xor
add
cltd
ljmp
out
and
pop
insb
lret
xchg
popf
psubq
push
fdivrl
sbbl
xlat
sub
mov
xor
add
sahf
sbb
add
jno
fnstenv
lret
sub
call
mov
xor
cmp
ljmp
fimull
sahf
ljmp
pop
push
push
inc
arpl
xor
or
xchg
int3
and
xor
and
addr16
fwait
cmp
cmpb
mov
cmp
xor
and
xor
les
xor
dec
cmp
testb
ret
daa
ja
mov
sub
push
fisubrl
andb
and
pop
or
sbb
test
lret
nop
stos
xchg
add
xor
fldenv
jno
and
xor
loopne
xor
movsl
push
ret
mov
pop
mov
push
outsl
inc
jae
sub
add
fmuls
adc
aam
cmp
adc
add
fstps
mov
mov
sbb
pusha
sub
and
xor
and
xor
daa
mov
xchg
sub
mov
xor
and
lods
sbb
xor
testl
and
xor
and
inc
pop
sub
dec
dec
jle
or
sbb
and
fmull
in
nop
dec
shl
and
push
jb
sbb
add
and
mov
mov
xchg
mov
adc
loopne
pop
push
pop
and
fwait
sbb
les
dec
push
imul
push
jl
lods
insb
cli
negb
add
xor
adc
push
or
xor
and
xor
cli
test
bound
mov
sub
xor
jbe
xchg
dec
dec
out
int3
jp
mov
loopne
andl
pop
cmp
mov
ds
test
xor
cmp
add
push
fnstcw
dec
sbb
mov
fildl
mov
cld
mov
sub
mov
jne
ds
int3
and
mov
or
fsub
aad
cmp
mov
xlat
or
mov
inc
out
push
lds
jge
xchg
lahf
out
in
mov
jne
push
and
sub
pop
mov
mov
jne
cmp
arpl
pop
inc
out
inc
jns
xchg
nop
in
jl
adc
xchg
dec
imul
movsl
pop
fisubs
leave
xchg
cld
stos
roll
pusha
movsb
dec
cmp
fsts
sub
jne
sub
or
mov
or
mov
jp
ss
sqrtps
adc
or
jns
push
cli
inc
sbb
outsb
mov
adc
sbb
aad
sub
jge
in
adc
test
fldl
inc
test
dec
lret
push
leave
std
cmpsb
mov
jno
jbe
adc
jg
clc
movsl
addr16
sbb
mov
mov
or
xor
das
hlt
push
push
add
sar
repz
jo
sbb
imul
push
mov
xor
ja
daa
lock
ret
push
stos
aad
mov
cvtps2pd
xchg
sahf
stos
sbb
xchg
lret
lcall
mov
ud2
aas
lret
jbe
lret
and
xchg
inc
repnz
cmpsb
jb
stc
mov
orw
sbbb
movsl
imul
into
out
xlat
pop
loope
mov
decb
inc
pop
or
jne
lcall
lods
push
mov
call
fisttpll
sbb
fmuls
cmp
cmp
push
and
xchg
jns
hlt
inc
mov
mov
sbb
inc
dec
add
pop
add
imul
clc
mov
ds
daa
cmp
insb
push
insl
mov
lds
fs
add
and
add
add
add
adc
adc
dec
add
jo
add
and
adc
lods
or
cmp
add
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
lods
or
hlt
stos
or
sub
or
xor
or
aas
scas
or
inc
scas
or
dec
scas
or
dec
scas
or
push
scas
or
push
scas
or
arpl
or
outsl
scas
or
pusha
scas
or
jp
or
push
add
add
scas
or
xchg
scas
or
js
or
mov
scas
or
stos
scas
or
mov
add
mov
or
nop
scas
or
ret
add
add
add
scas
or
mov
add
add
scas
or
test
or
call
scas
or
hlt
scas
or
mov
add
add
scas
or
shrb
add
scas
or
enter
push
scas
or
shrb
add
and
or
imul
insb
add
popa
addr16
insb
insb
add
outsb
insl
insl
cs
insb
add
imul
fs
insb
add
jbe
jo
xor
cs
insb
add
popa
arpl
xor
fs
insb
add
xor
xor
fs
insb
add
outsl
arpl
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
gs
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
gs
insb
xor
cs
insb
add
outsb
imul
insb
add
jbe
jo
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
jb
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
scas
or
add
add
repnz
or
add
add
pop
mov
add
add
add
mov
add
add
add
mov
add
add
add
or
add
add
push
mov
add
add
add
or
add
add
insl
mov
add
add
add
or
add
add
mov
add
sahf
mov
add
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
or
add
add
pop
mov
add
add
add
add
jb
popa
insb
imul
arpl
add
arpl
jne
dec
popa
jo
gs
imul
jbe
dec
jne
push
jb
je
add
add
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
add
push
gs
arpl
imul
add
popa
arpl
outsl
jb
popa
je
push
inc
add
add
inc
dec
outsl
arpl
add
push
push
inc
inc
insb
gs
outsb
jne
add
add
jae
jb
gs
je
imul
gs
jb
inc
jbe
outsb
je
add
add
je
gs
outsl
popa
jb
push
jns
add
add
gs
je
push
imul
inc
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
push
dec
outsl
je
data16
arpl
inc
add
add
je
jb
gs
gs
fs
imul
popa
jb
push
gs
imul
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
gs
jo
outsb
inc
outsb
jne
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
jmp
add
incl
add
add
add
pop
pop
push
fbstp
ds
push
add
sub
jnp
lock
in
aaa
xchg
lods
inc
sub
jns
adc
jecxz
daa
int3
push
mov
dec
mov
lcall
jmp
daa
mov
leave
mov
inc
and
repz
or
rorb
or
push
fs
jo
or
mov
mov
mov
stc
nop
or
jg
cs
sub
or
stc
dec
imul
sub
sbb
cmp
ficompl
inc
cmpsl
lods
push
and
psrlq
sbb
mov
mov
je
dec
inc
hlt
cs
xchg
in
bound
mov
popf
cmp
dec
pop
inc
pop
jne
fwait
dec
mov
push
xchg
cld
adc
dec
icebp
stos
lods
xor
mov
mov
popa
repnz
push
test
clc
cmpsb
sbb
mov
pop
sbb
lods
rcrb
mov
sub
movsb
push
popa
mov
xchg
cmpsb
hlt
jge
mov
push
add
lods
xchg
ljmp
addr16
xor
xchg
cli
out
mov
scas
insb
sub
popf
ret
hlt
jg
cmp
pop
repz
enter
adc
mov
popa
pop
or
outsl
cmp
mov
shll
scas
jle
dec
sub
inc
fsubrl
pop
lds
stc
jp
jg
or
push
jb
loopne
jle
cmp
andl
push
test
dec
dec
ja
push
aam
push
mov
cmp
outsb
xor
orl
in
or
adc
mov
ja
push
add
inc
jg
add
xorb
call
and
cmp
push
jecxz
mov
pop
cmp
in
je
pop
add
stos
sub
mov
test
jnp
sub
pop
pop
mov
ja
mov
fs
movsl
out
add
into
out
push
push
lock
cmp
ret
out
ficoml
and
lret
les
add
xchg
lock
and
cltd
mov
or
repz
dec
jnp
xchg
in
mov
mov
cltd
cmp
pop
scas
lea
lcall
sarb
sbb
push
add
sarl
or
cwtl
push
push
test
pop
sbb
xchg
jmp
insb
movb
jne
xchg
or
xchg
outsb
das
cmp
sub
xor
mov
adc
stc
pusha
add
lea
add
pop
into
sahf
pushf
push
fxch
sti
xchg
leave
and
fs
adc
incb
rcrl
push
out
inc
jmp
push
ret
inc
jge
es
xor
jl
add
aaa
loop
pop
or
fistl
cltd
jl
aas
into
in
sarl
outsb
cmpb
aaa
repnz
adc
xchg
dec
repnz
imul
fistpl
sbb
sbb
add
push
in
and
mov
inc
push
sub
cmp
ret
add
in
push
adc
xchg
add
sub
fsubrp
in
cmc
dec
dec
add
out
mov
das
adc
leave
mull
xor
enter
lods
push
adc
in
xlat
adc
or
pop
lods
mov
pop
cmp
hlt
cld
jl
insb
and
xchg
cli
mov
stos
fisttps
xchg
add
inc
pushf
inc
cmc
cli
and
imul
daa
cmp
insl
rcrl
out
es
inc
fistpl
mov
mov
andb
stos
dec
lea
int3
fcompl
xor
adc
into
jp
cmp
pop
sti
test
out
lds
mov
jmp
ss
lea
or
out
orl
mov
pop
shrl
movsb
xchg
xchg
dec
jle
sbb
andl
xchg
jp
jns
outsb
xchg
lcall
test
ror
fldt
lods
popf
jle
pop
dec
lock
add
and
sbb
out
ja
xlat
std
lcall
int3
xor
jns
pop
js
add
out
sbb
jbe
pop
lahf
shll
les
mov
sub
or
lock
adc
add
adc
rolb
add
loope
fisubs
and
inc
jecxz
shl
loopne
ljmp
int
sbb
ja
pusha
push
pop
cmc
bnd
stc
cltd
inc
xor
nop
sub
add
incb
jmp
dec
ljmp
inc
mov
mov
shrl
add
xchg
sti
cwtl
call
sub
sub
xorb
and
inc
in
lea
mov
pop
leave
nop
stos
jle
imul
adc
out
incb
sbb
dec
jecxz
rcrl
shl
inc
pop
sbb
sbb
in
sub
imul
pushf
and
fwait
ljmp
cmp
and
sub
loope
mov
xchg
mov
sbb
repz
cmpsb
inc
xchg
push
mov
imul
and
gs
js
lahf
push
arpl
mov
cmp
xor
mov
pop
test
add
mov
data16
pop
sahf
sarb
in
push
loope
xor
aaa
and
xor
ljmp
push
dec
sbb
push
lret
scas
xor
in
xorl
push
inc
pop
movsl
xchg
mov
mov
inc
divb
mov
xor
fnstsw
test
lods
cs
push
test
ja
es
out
pop
xor
imul
movsl
fists
dec
sbb
xchg
js
pop
xor
les
nop
pop
bound
push
popa
xchg
and
ss
outsb
mov
js
jle
xchg
loop
nop
cmpsl
aaa
xchg
add
push
push
or
mov
loop
jecxz
and
adc
ret
pop
sub
push
cld
lds
xchg
xchg
xor
xor
rorl
xor
pushf
les
mov
pop
andb
inc
and
shlb
sbb
out
xor
adcb
jg
jnp
push
mov
mov
mov
push
cmp
lea
jnp
mov
lcall
ja
cld
or
sub
in
insb
lea
inc
das
insl
add
cmpsl
jne
xchg
pop
gs
popa
sub
lock
movsb
mov
pusha
xchg
mov
or
mov
xabort
xchg
mov
sub
jne
sub
in
and
cmp
sub
ss
insb
pop
add
pop
and
pop
cmp
sub
idivl
push
popf
jmp
out
rorl
das
insb
sbb
outsb
push
mov
dec
ljmp
jne
add
adc
add
adc
lret
sub
aas
add
shr
pop
lock
outsl
incb
sbb
dec
ja
sbb
jl
push
or
mov
or
pop
mov
mov
xchg
and
sar
cmc
daa
sbb
push
mov
cmp
inc
aas
cli
push
xlat
rorb
scas
dec
scas
adc
scas
int
mov
mov
or
andb
divl
pop
push
mov
mov
lds
popa
add
jnp
xchg
mov
push
sti
push
sahf
lods
adc
push
push
mov
cld
mov
push
xor
dec
mov
sub
jb
push
addr16
stos
cmpsl
pop
fisubs
cmp
pop
clc
mov
mov
aas
out
mov
sbb
hlt
mov
fcmovb
stos
xor
repnz
movsl
loope
gs
loop
adcb
push
clc
daa
cs
nop
shll
ficomps
fwait
lahf
mov
adc
lock
insl
ja
inc
out
in
dec
add
rol
inc
scas
bnd
repz
xchg
dec
sbb
inc
push
adc
dec
pop
cmpsl
push
pop
imul
jmp
inc
pushl
orb
inc
mov
pop
bound
fdiv
enter
js
adc
pop
ds
shll
and
loop
nop
and
psubsw
cli
movsb
lret
ljmpw
mull
and
jbe
inc
jecxz
or
pop
cmc
movsl
push
outsl
xlat
jnp
cli
push
mov
stc
inc
pop
aam
mov
adc
or
sub
or
or
mov
adc
push
rep
mov
fwait
data16
fsubrs
out
data16
cmp
aaa
or
cmpsb
cwtl
xor
jns
adc
sub
xchg
loop
ss
mov
lret
xlat
mov
cltd
cmp
in
inc
jecxz
pop
jp
ja
out
xchg
leave
pop
mov
das
cltd
add
dec
adc
daa
and
dec
aad
pushf
out
lods
mov
aaa
pop
sbb
dec
mov
stos
dec
sub
les
dec
test
call
sbb
loopne
mov
repz
arpl
movsl
push
lahf
xor
jge
dec
nop
mov
imul
lea
in
insl
xchg
cmp
imul
push
orb
lret
popf
int3
pop
addr16
in
inc
mov
and
out
popa
popf
pushf
loop
rol
sbb
test
les
mov
mov
mov
adc
lahf
jns
mov
xchg
xor
out
dec
mov
xchg
jb
mov
outsb
test
icebp
ret
stos
dec
cli
xchg
leave
sub
das
sti
and
rorb
xchg
insl
icebp
xor
outsb
arpl
fs
fdivl
mov
fidivs
mov
add
mov
lret
das
or
in
cmp
lods
xchg
sarl
fbstp
mov
or
mov
mov
loope
loope
jmp
hlt
pop
dec
mov
lds
cmc
xchg
xor
mov
adc
lds
pop
mov
call
pop
out
adc
cmp
fldenv
jbe
sbb
ds
mov
adc
sbb
push
popf
mov
aas
xorl
fs
sbbl
bound
ret
sub
lods
lock
sbb
inc
adc
cwtl
jp
sbb
cmp
into
cmc
or
add
pop
push
pop
mov
in
js
lock
mov
mov
dec
dec
pusha
inc
rolb
xchg
mov
fisubl
xchg
idivl
jae
xor
sbb
jbe
loop
lcall
or
movq
int
xchg
or
mov
add
jbe
pusha
cmp
shr
stos
push
inc
push
scas
inc
ret
out
or
aad
daa
movsb
pushf
aad
inc
jnp
arpl
push
mov
or
pop
lock
jae
push
stc
pop
sub
sbb
pop
mov
ficoml
mov
ljmp
mov
pop
xor
je
mov
jle
sbb
inc
leave
xor
scas
and
loopne
adc
xor
sub
icebp
daa
into
lret
sbb
push
imul
cmp
mov
mov
inc
fistpl
outsl
sub
ja
test
sbb
or
leave
aam
test
aas
hlt
loopne
push
je
in
adc
out
bound
lret
test
ljmp
bound
pop
insl
leave
leave
fsubr
fsub
in
xlat
ficompl
sub
xor
pop
and
cmc
sbb
sub
cmpsl
mov
dec
sbb
pop
pop
lods
call
cltd
inc
push
test
je
fs
popf
cltd
and
sub
lods
testb
cld
jns
adc
jbe
mov
add
xchg
and
aam
xor
jb
inc
ss
pop
jno
pusha
jle
insl
insb
mov
sti
mov
sbb
or
xor
test
inc
stos
add
jbe
icebp
inc
push
xor
sahf
scas
jge
push
xor
popa
cmp
and
cltd
jecxz
jno
push
pop
add
pop
fcompl
dec
mov
cmpsl
pusha
cmc
ret
xor
gs
mov
push
mov
mov
daa
in
les
mov
cmpsl
push
ds
add
fnsave
lods
add
mov
jnp
inc
test
add
push
in
movsl
inc
push
jno
inc
jmp
inc
pushl
dec
andb
aad
imul
addb
rolb
push
cmp
cmc
and
fldenv
jns
push
idivb
sbb
push
xor
push
push
dec
aaa
fnstenv
cmc
jae
push
xor
lds
andb
lods
fsubs
int
and
adc
jge
push
xchg
add
popf
in
enter
dec
jo
jne
dec
jnp
mov
mov
cs
scas
fildll
popa
pop
in
add
outsl
clc
ret
pop
popa
stos
out
cmp
mov
mov
mov
adc
mov
repnz
or
jmp
sbb
pop
mov
sbb
sbb
decb
cltd
push
int
add
mov
fists
fs
jp
and
jno
jns
sub
sti
movsb
sbb
jle
xor
mov
popf
mov
mov
in
imul
in
nop
inc
mov
sub
jno
fwait
mov
push
aas
sub
add
scas
pusha
vpsubb
movsl
ret
cli
faddl
inc
das
cmp
jecxz
popl
arpl
inc
stos
and
pop
leave
clc
jns
jo
js
cli
add
pop
stos
jg
es
or
mov
ret
sub
xchg
pop
iret
xchg
jmp
xchg
cwtl
sbb
push
push
adc
mov
xorl
xchg
adc
jmp
mov
dec
mov
jg
popa
lods
sub
xchg
push
ja
xor
int
arpl
outsb
lahf
das
out
sbb
sbb
cmpsb
aas
mov
ja
ds
pop
subl
xor
mov
gs
adc
jge
out
arpl
mov
mul
cli
mov
fwait
je
inc
ljmp
aas
mov
pop
icebp
fs
lods
int3
insb
out
xchg
mov
dec
test
xchg
stos
jns
stc
lods
les
aas
dec
or
lds
mov
in
pop
scas
mov
cmpsl
xchg
mov
aam
faddl
xchg
or
pop
scas
popf
mov
das
and
dec
pushf
mov
xor
push
pop
repz
mov
sub
and
sub
mov
or
aam
add
adc
rol
sbb
lret
ffree
shlb
sahf
add
dec
pop
mov
inc
xchg
push
add
lcall
jmp
xchg
xor
sub
cmp
dec
add
stos
or
psubusb
lods
cs
out
jge
popa
stc
test
push
ret
out
pop
jge
jne
push
mov
pop
sti
pop
mov
stos
cwtl
outsl
xor
int3
xchg
adc
pop
sbb
inc
in
pop
lds
clc
cmp
je
mov
rorl
xor
pop
push
mov
pop
jbe
jno
fistps
inc
ja
lea
sti
jmp
popf
test
ficoml
sarb
aas
add
xor
test
pop
in
je
sbb
mov
out
add
jg
or
stos
mov
add
ljmp
push
ret
pop
inc
cmpsl
out
in
call
mov
cmp
fadds
loop
fstpl
aas
or
int
mov
jno
aad
and
ret
rcr
rcrl
mov
insl
cmp
in
adc
jg
push
int
cmp
iret
and
xlat
jmp
lcall
cli
popa
jns
imull
mov
pextrw
jge
or
roll
test
mov
in
sti
or
xchg
xorb
pop
ss
lcall
int3
mov
mov
insb
out
inc
sti
mov
or
inc
cli
pop
xchg
ret
inc
sahf
sub
cmp
repnz
cld
sbb
test
xchg
jb
cmc
xchg
test
cmpsb
xor
in
pushw
add
jmp
add
mov
shl
ds
push
jecxz
test
sahf
rol
loopne
shl
dec
pop
mov
mov
pop
sbb
sbb
push
ret
jns
fisubs
fbld
add
jbe
fistl
inc
or
iret
mov
or
sbb
sub
test
mov
cmc
sbb
and
xchg
dec
lds
ljmp
cmpsb
jl
xor
call
sbb
sti
adc
imul
repz
sub
sar
or
daa
or
push
and
inc
lods
pop
add
negl
iret
push
push
push
cs
sbb
mov
lds
fwait
inc
mov
mov
or
rcr
mov
fsts
sbb
pop
ret
xor
mov
cli
cmpsl
int
mov
jo
loope
punpckhdq
jp
xlat
xlat
daa
addr16
std
xor
cmp
mov
or
sahf
or
divb
lods
add
rorl
js
or
mov
add
pop
sbb
cs
outsb
xchg
sbb
enter
je
sbb
dec
dec
ja
pop
xchg
inc
int3
adc
repnz
jl
ret
add
mov
lds
out
scas
mov
pop
out
or
inc
add
push
mov
lds
mov
push
pop
jbe
inc
mov
adc
jecxz
fdivp
rolb
sahf
push
cmp
dec
pop
cmp
shr
imul
adc
jecxz
or
cmpsb
jecxz
test
fiadds
jge
lcall
movsb
call
mov
cmp
mov
fsubrs
xchg
jp
xchg
imul
dec
jp
dec
int
lock
lret
cmp
lcall
push
inc
inc
aas
add
repz
sbb
mov
rcl
hlt
pop
mov
inc
repnz
inc
fstpt
pop
lcall
dec
cwtl
mov
call
mov
int
lahf
add
push
add
or
lock
xor
mov
clc
pop
cmp
jl
push
dec
jle
aaa
insb
mov
imul
mov
cmc
or
jns
jnp
mov
imul
sbb
iret
sub
loope
lock
in
fiaddl
and
sub
test
sub
jno
je
dec
xor
mov
inc
aas
ja
mov
or
push
inc
lcall
xchg
test
pop
fnstenv
cmp
fldcw
push
xchg
jg
jmp
mov
xchg
jle
pop
xchg
imul
repz
fdivrl
in
push
push
in
loopne
and
jb
out
add
bound
sub
ret
sti
inc
xor
mov
fsubrs
jg
mov
int3
sub
pusha
aaa
inc
divb
and
jb
addr16
cmp
adc
orb
imul
pop
pop
mov
fcmovb
loopne
pusha
jge
ss
jo
sarl
mov
jge
cld
insb
cwtl
sarl
les
push
sbb
lock
int
sub
repz
sbb
mov
xor
ret
cmp
dec
subl
pop
mov
mov
xor
mov
lret
add
push
lock
dec
testl
fldl
mov
lock
xchg
mov
add
cli
and
ficomps
xchg
rolb
cs
jo
sub
in
cmpsl
out
cmpsl
out
mov
mov
adc
nop
cld
inc
mov
int
add
jecxz
xor
push
aad
push
ljmp
push
cmp
mov
les
jg
das
xchg
sub
cmpsb
stc
sbb
sahf
fld1
sbb
in
shr
jecxz
sbbl
xor
hlt
js
popa
mov
dec
adc
insl
js
add
jns
cmp
jne
or
cmp
lock
ds
mov
sub
subb
mov
fsts
imul
movsl
fldcw
pushf
adc
jne
pop
aam
inc
add
mov
ljmp
pop
inc
test
add
cld
out
and
je
inc
sbb
iret
jmp
pop
mov
out
fsub
pop
nop
xlat
mov
je
sub
ret
and
and
mov
xor
mov
jb
add
les
lahf
aam
andb
or
rcrb
ja
lret
scas
hlt
adc
in
add
adc
pop
fs
or
xor
ss
and
jp
pop
test
rcrl
outsl
sub
push
lret
inc
mov
adc
xor
movsb
xchg
out
jnp
nop
das
fistps
jo
push
aaa
nop
mov
sub
pop
add
cmp
cmpsb
dec
and
dec
sbb
popa
jecxz
or
push
xor
loop
psrlq
js
lods
or
add
insb
mov
xchg
jg
push
std
lret
jno
rcll
dec
push
dec
jl
repnz
jmp
in
push
les
insb
dec
mov
mov
sub
jecxz
push
jle
daa
and
movsl
sbb
and
push
xor
movsb
notb
mov
add
lahf
jmp
bound
je
or
aas
xorb
fidivrs
adc
mov
cli
inc
dec
push
mov
ret
jge
popa
add
nop
lcall
cmp
cmp
js
cmp
sub
sbb
test
jecxz
dec
pushf
out
jge
pop
cmp
stos
repz
add
ss
iret
repz
lds
call
jmp
xchg
pusha
pop
pop
lret
aad
dec
int
popf
cmpb
fnstsw
out
pop
in
ljmp
jge
stos
insb
push
ret
and
les
sbb
add
or
sub
lcall
popa
mov
and
mov
xlat
sbb
xchg
pop
add
adc
inc
fstpt
push
mov
jbe
cmp
mov
mov
push
dec
and
into
pop
adc
xchg
aaa
in
test
pushf
mov
mov
dec
loope
mov
and
test
mov
and
js
fisubrs
lahf
lret
lret
iret
mov
into
sub
push
sub
push
pop
int
sbb
pop
shll
sub
imul
enter
lods
stc
dec
repz
fwait
cltd
add
je
xchg
push
mov
and
or
jecxz
popa
shll
xor
dec
inc
nop
jne
xor
mov
cld
add
xor
xor
or
mov
movsb
sub
rcrl
in
or
adc
je
sahf
push
or
push
lret
sbb
aad
or
sub
fmul
cltd
sbb
out
add
shrb
push
in
jle
popf
add
sahf
or
int3
cmp
dec
mov
sbb
enter
mov
call
in
fdivl
dec
cli
push
push
jmp
stos
stc
int3
jp
inc
dec
aad
mov
in
test
push
into
adc
loop
andb
dec
and
push
mov
ret
daa
into
enter
xor
addr16
xlat
push
jnp
sbb
jae
outsl
xor
and
xor
pop
popf
dec
dec
jae
mov
loop
fsubs
mov
rcrl
int3
and
sbb
in
call
pop
mov
fwait
sbb
push
out
sub
test
and
test
mov
hlt
jge
cmp
push
xchg
pop
sbb
scas
inc
or
scas
aaa
test
add
lcall
mov
add
mov
xor
cmc
imul
xor
int
sub
xor
pop
insb
inc
lahf
jg
jl
ss
stos
dec
test
inc
sbb
and
sbb
divb
mov
movsb
mov
adc
out
shlb
push
or
ja
das
cwtl
mov
clc
lds
lret
xchg
sbb
jo
dec
and
mov
popa
insb
ror
xlat
mov
sbb
dec
or
mov
adc
inc
shrb
sbb
push
lcall
fsts
icebp
out
and
sub
push
fsubp
or
mov
stos
xchg
addl
out
pop
loope
jns
jo
and
into
std
shlb
push
ds
inc
imul
ret
jg
aad
insb
jno
ljmp
push
sub
cli
mov
add
dec
pop
pop
shrl
xor
cmp
insb
mov
ret
mov
and
insl
or
idivl
ss
push
inc
lahf
fiaddl
shll
das
sub
push
push
cltd
enter
push
fwait
sarb
mov
push
xchg
mov
add
pop
pop
push
mov
adc
cmp
ja
and
mov
cmc
das
sub
insl
movq
ficoml
inc
and
jl
xchg
adc
sub
shld
adc
xor
pusha
mov
mov
xlat
mov
pop
ror
insb
stos
and
sbb
cmp
insl
jge
xlat
leave
xchg
xor
mov
insb
mov
out
mov
stos
add
jmp
mov
xchg
ss
inc
push
pusha
xor
stos
mov
mov
call
push
and
jbe
jns
hlt
jle
push
lods
xchg
push
push
ret
xchg
push
mov
jge
fsubp
pop
pushf
pop
push
outsb
or
adc
js
ss
add
and
out
cmp
cltd
mov
jae
cmp
ret
in
adc
popf
and
pop
cltd
outsb
mov
inc
xchg
int
dec
addr16
std
xor
arpl
push
pop
mov
addr16
repnz
or
xlat
insl
stos
rcl
xchg
push
dec
lea
push
mov
loopne
js
sub
dec
das
lods
popf
pop
ss
fs
maxps
insl
std
ja
and
fistps
addr16
es
mov
pop
mov
cmp
in
dec
inc
jp
jne
in
pop
mov
stc
and
xchg
arpl
cmpsl
push
subl
xchg
dec
aaa
repz
pop
or
add
in
nop
jae
fldcw
push
pop
sub
mov
out
dec
xor
filds
loop
push
icebp
imul
jl
es
xor
aad
cld
pop
jne
ja
mov
movsl
rolb
pushf
xlat
dec
jo
xor
in
mov
sahf
sub
xchg
and
movsb
push
movb
ret
sub
mov
mov
fiaddl
gs
mov
movsb
xor
push
add
adc
stos
pop
push
add
add
push
call
cmp
imul
addr16
inc
cmpsb
inc
sub
mov
js
mov
les
sahf
pushf
dec
dec
cmp
mov
adc
sbb
cmc
sbb
add
cli
push
rorl
add
repnz
pusha
out
leave
in
pop
in
cmp
xchg
jp
xor
xor
repz
sbb
adc
mov
push
add
fistpll
mov
jg
cmpsl
xor
mov
inc
clc
xchg
mov
aad
enter
ss
int3
pop
insb
sub
fldcw
xor
push
sbb
jmp
in
dec
sbb
xor
stc
xor
xor
shrb
mov
mov
sbb
test
and
loopne
mov
out
cmpsb
and
xchg
or
les
aaa
or
dec
aad
pop
sahf
test
push
or
ja
cmc
outsl
call
ja
imul
notb
jle
mov
adc
imul
filds
jp
xor
inc
daa
jae
popa
inc
out
jecxz
popf
jbe
fdivr
aaa
mov
or
pop
pop
je
movsl
xchg
sub
les
mov
shlb
xor
fdivr
test
mov
or
frstor
fisubrl
or
ljmp
jp
mov
jge
jmp
ljmp
imulb
dec
enter
push
mov
sti
fisubrl
xlat
mov
mov
mov
sub
negb
shl
jle
outsb
sbb
js
fcomps
mov
push
insb
nop
addr16
adcb
lret
sbb
jns
pop
jbe
cld
int3
mov
out
arpl
fadds
dec
aam
jne
ja
xchg
filds
cs
dec
xor
enter
xor
stos
movb
or
out
xchg
push
jmp
cmp
mov
stos
sub
cmp
mov
pop
pop
test
js
mov
testl
leave
out
or
clc
lret
mov
pop
lret
insl
dec
pusha
leave
xchg
xor
popa
cmp
add
arpl
xchg
fxtract
aas
push
mov
fdivrl
sub
xchg
inc
fsubs
add
jge
add
cli
push
jp
cmpsb
jge
and
inc
push
push
pop
jbe
or
cmpsl
and
cs
jae
roll
sub
jnp
adc
xor
iret
jae
lahf
nop
sbb
test
mov
lds
lods
xlat
xor
xchg
pop
pop
lret
lea
mov
repnz
cmp
xchg
aad
mov
mov
int
scas
or
lds
ds
mov
call
jle
aaa
and
fs
sbb
mov
faddl
ret
cmp
sub
data16
in
cmpsb
js
sbb
movsl
jb
pop
mov
lahf
push
mov
ficoms
fmull
das
movsl
aas
or
adc
sti
insb
imul
push
mov
or
cmp
mov
shrb
or
jge
inc
xchg
inc
fabs
js
add
dec
cld
sbb
loope
pop
shrl
add
dec
repnz
mov
notb
add
mov
cld
sbb
xor
test
push
cmc
xlat
ror
or
imul
sub
dec
dec
in
cld
outsl
mov
stos
mov
dec
sub
xlat
sti
cmp
mov
ret
pop
hlt
loope
mov
cld
pop
lods
mov
pushf
shll
js
mov
cli
xchg
jne
ja
mov
jp
push
push
push
cmp
inc
stc
add
mov
adc
dec
inc
jo
pushf
rolb
bound
ljmp
out
out
or
mov
add
xchg
and
xor
cmpsl
rclb
mov
inc
mov
std
stc
jg
jae
bextr
and
dec
mov
neg
mov
and
fs
ljmp
icebp
notl
shl
pop
xchg
mov
dec
pop
fstpt
push
insl
icebp
xlat
int
test
xchg
fildl
or
push
inc
push
add
jnp
cld
or
inc
adc
jae
mov
mov
push
pop
lea
mov
out
call
jno
loopne
outsb
push
stos
loope
repnz
imulb
mov
icebp
pop
xor
mov
push
inc
incl
lods
xchg
and
pop
cmpsl
dec
sub
xor
test
xor
mov
sbb
or
mov
sbb
push
fwait
and
mov
sarl
jmp
or
movsb
icebp
push
nop
out
and
xor
in
jns
out
xor
pop
mov
outsl
cmp
xor
pushl
inc
hlt
mov
and
scas
stc
roll
int3
ret
sub
sub
es
out
mulb
dec
std
je
xchg
mov
imul
shll
cmpsb
inc
push
mov
stos
mov
push
cmp
sti
jmp
pusha
mov
fcomps
ret
dec
push
div
xor
xchg
pusha
shrl
in
fiaddl
ror
clc
pop
shll
xor
negb
loop
lock
clc
mov
ja
sbb
mov
jae
xchg
scas
push
int
lcall
xchg
pop
mov
push
outsb
mov
std
roll
shr
mov
out
pop
mov
mov
insl
cmp
mov
sub
pusha
mov
cmc
loop
xor
pop
pop
cwtl
xchg
mov
cmp
lds
sub
mov
and
faddl
dec
sbb
in
xor
push
adc
in
pop
stos
pop
inc
lds
cwtl
loopne
aad
shrb
lods
jg
mov
xchg
icebp
adc
stos
sbb
add
mov
std
test
mov
mov
imul
iret
jl
inc
arpl
mov
jecxz
pop
xchg
mov
mov
lret
shlb
inc
mov
and
mov
not
sbb
pop
dec
js
and
sbb
test
sbb
pop
cmp
shrl
jmp
pop
out
ds
call
mov
mov
xor
lock
rcrl
loopne
push
dec
popf
inc
add
bound
es
daa
xchg
jno,pn
jecxz
or
push
cmp
mov
pop
outsb
lret
lock
lods
and
push
out
sub
xchg
adc
in
inc
adc
xchg
sub
icebp
jge
mov
fdivrs
dec
inc
sub
jns
mov
lods
scas
xchg
nop
fisttps
xchg
shl
push
into
add
mov
mov
cmp
sub
lahf
out
mov
jmp
jecxz
sub
testb
int3
std
incb
mov
fidivl
movsl
sbb
xor
sub
dec
faddp
ljmp
mov
or
addr16
sahf
xor
or
and
adc
add
fistpll
ja
out
enter
loope
movsl
fildl
lds
ds
jne
sub
stos
int
inc
lret
lds
loopne
push
jle
mov
aas
sahf
mov
push
es
dec
add
push
into
sbb
shl
in
xchg
mov
jg
or
push
and
icebp
xor
iret
push
inc
jae
fwait
mov
sarb
stos
jno
mov
test
out
add
pusha
aam
or
lret
pop
out
sbb
rcll
int
js
popa
mov
int3
push
dec
cld
dec
in
mov
mov
cli
adc
push
inc
and
inc
push
dec
mov
aam
adc
and
jle
add
mov
push
or
leave
mov
pusha
adc
leave
inc
je
shr
mov
xchg
aam
sub
xchg
jmp
loope
movsl
scas
mov
in
xor
cli
insb
sbb
sbb
push
fdiv
pop
rcr
fdivr
std
add
jb
pop
jne
xchg
jg
fwait
push
fdivp
sbb
pop
fs
in
ja
dec
inc
sbb
mov
xchg
inc
sbb
inc
or
push
repz
cmc
xor
popa
rolb
ret
loop
jno
mov
add
mov
in
out
push
faddl
aam
mov
push
mov
imul
mov
daa
test
or
fisubrl
sarl
scas
xor
rcl
mov
aaa
cmc
mov
ljmp
sub
xchg
jbe
push
test
sti
or
cmp
rorl
jp
rsm
mov
cld
fdivrl
aas
and
mov
aaa
mov
dec
mov
or
sub
ja
push
cld
inc
push
jl
dec
fwait
mov
pop
in
xchg
scas
jbe
dec
sbb
cmp
daa
sub
cs
add
lret
mov
cmp
pusha
in
shrb
dec
fldenv
mov
cwtl
inc
jnp
shlb
mov
pop
int3
pop
and
sbb
out
push
mov
int3
pushf
add
mov
aam
les
sbb
push
sbb
data16
dec
push
int
or
fwait
pop
push
nop
pop
add
jle
jno
test
or
insb
icebp
add
jae
xchg
cltd
int
aam
mov
adc
imul
js
mov
pop
push
pushfw
js
and
ds
sbb
js
push
jbe
aam
dec
pop
mov
jo
test
mov
jns
sbb
pusha
fldt
jno
and
sti
bound
fistpl
xchg
jb
adc
adc
call
stos
push
inc
jne
xchg
pop
mov
pop
test
stos
mov
ja
out
add
push
push
pop
xor
icebp
xchg
and
push
mov
ja
mov
cmp
mov
cmp
sti
repz
ret
dec
inc
cmpsb
dec
mov
mov
fldt
fsub
push
mov
jo
orl
out
cli
clc
fdivrl
inc
add
and
sbb
insb
scas
and
jb
push
in
cmpsb
loopne
or
gs
roll
andb
or
jecxz
push
dec
mov
cmp
cmc
add
mov
jb
cwtl
adc
cld
adc
gs
ljmp
lods
adc
mov
mov
dec
cmp
push
mov
sarb
mov
jb
pop
popf
and
xchg
insb
in
inc
and
pop
cmp
mov
ficoms
out
pushf
jno
push
sbb
cmp
loope
clc
sti
pop
inc
gs
inc
add
mov
je
fs
shl
add
ja
imul
loope
movsl
lea
xchg
popf
cwtl
lret
leave
or
icebp
mov
inc
sbb
imul
inc
fs
push
pop
sub
notl
add
shll
ret
push
push
jnp
test
inc
mov
pop
testl
in
push
test
movsb
dec
or
mov
gs
xchg
pop
inc
xor
xor
jle
pushf
mov
sbb
fs
enter
stc
popf
fwait
add
lock
int3
iret
xchg
adc
pusha
mov
out
inc
pop
cs
xchg
mov
push
icebp
pop
cs
adc
adc
imul
xor
sbb
mov
jbe
cmp
subl
aam
ss
xor
adc
and
mov
mov
push
mov
fwait
add
enter
lea
dec
mov
imulb
shlb
pusha
fldcw
enter
subl
add
je
pushf
xor
aad
stos
cmp
nop
dec
or
fdivrs
jle
pop
add
push
xchg
movsl
fadd
mov
aas
lea
cmp
mov
mul
out
ret
cwtl
mov
call
xor
sub
xor
shrl
push
mov
adc
cmp
pop
scas
xor
enter
hlt
jg
and
rcrb
push
cmp
bnd
shlb
or
add
add
push
mov
sub
or
enter
sbb
mov
or
leave
fwait
cmpsb
dec
jnp
xchg
push
xchg
lods
scas
xlat
mov
add
outsb
sbb
pop
mov
xchg
testb
cmpl
fdivs
pop
adcl
fnstsw
adc
jg
or
pop
test
cmp
movsb
aam
shrl
sub
pop
mov
xor
insb
ds
add
nop
push
movsl
cmp
push
or
in
sbbl
lea
into
in
push
and
lahf
xchg
subl
cltd
test
cmp
dec
sarl
dec
test
stos
or
fidivrs
xor
repz
sub
cmpsb
sub
into
and
push
push
add
jg
pushw
rol
enter
sahf
inc
fldenv
mov
push
and
adc
jmp
mov
in
enter
loopne
popf
jae
add
gs
ror
add
jb
dec
mulb
iret
dec
add
xor
and
jge
or
ds
shl
adc
pushf
xor
add
das
in
fstl
mov
inc
pop
adc
push
mov
sbb
adc
enter
cld
or
jae
adc
jle
cmp
xor
push
mov
test
in
adc
repz
fcomps
mov
stos
aaa
cmp
jle
add
in
mov
mov
bound
cmp
std
int3
rcrl
pop
lds
repnz
add
xor
cs
subb
int
xchg
mov
jns
mov
ret
inc
xchg
adc
jge
and
into
out
mov
aad
fwait
inc
sarb
jecxz
inc
mov
adc
mov
lods
fwait
lods
fldt
push
aam
push
xlat
fwait
pop
loop
mov
fs
or
out
cmp
mov
inc
xchg
pop
inc
insl
or
in
repz
mov
leave
add
sbb
cmp
test
pop
cld
sbb
sub
and
cmp
lret
push
lods
mov
pusha
pop
mov
sub
xor
mov
pop
pop
ret
aaa
sub
xor
jle
dec
cld
bound
jno
dec
sub
and
jno
fs
adc
pop
rcrb
fmul
jmp
inc
cmp
xchg
ret
jle
add
push
into
or
leave
stc
or
inc
or
loope
incb
cli
rolb
push
and
mov
mov
aam
movsl
or
aaa
in
ja
ss
mov
push
mov
inc
mov
movsb
jmp
jecxz
aam
lods
inc
or
rol
add
aas
sarl
push
stos
inc
hlt
or
ret
push
mov
mov
push
jns
sub
or
loop
mov
pop
sbb
lret
mov
sbb
pop
xchg
les
cmpb
xor
adc
sarl
sbb
out
push
mov
and
icebp
pop
call
cmp
stos
popa
jge
lret
int3
popf
mov
mov
pop
xlat
or
lahf
jl
movhps
cltd
pop
mov
imul
nop
mov
pop
ds
loopne
test
push
xor
push
mov
and
dec
nop
cmc
dec
jmp
repz
xchg
movsl
cmpsb
out
mov
pop
mov
or
cs
rclb
and
addr16
push
rolb
jle
sbb
sti
pop
arpl
in
lcall
es
aad
inc
ja
jae
cmp
jbe
fmul
dec
insb
idivl
xchg
and
mov
push
push
loop
ss
loopne
sbb
lods
sbbl
sarb
fimull
mov
scas
mov
xor
movsb
jns
push
pop
mov
ja
mov
popf
pop
js
cmp
movsb
xchg
push
lock
sub
jns
loope
gs
push
jmp
pop
stc
cmpsl
pop
out
nop
lods
cmp
mov
jecxz
je
adcb
pushf
call
aas
jecxz
jb
out
xchg
je
adc
pop
sub
add
sahf
dec
lods
xor
mov
mov
out
and
stos
or
jne
add
mov
mov
jge
addr16
push
dec
lret
cmp
testb
hlt
arpl
inc
js
push
aad
inc
push
cmp
pop
cmpsb
push
nop
jnp
mov
inc
flds
daa
fnsave
push
mov
fcompl
cmp
pushf
gs
lock
test
pop
fnstenv
repz
fsts
lods
jno
into
xchg
aaa
adc
push
inc
andl
inc
leave
outsb
dec
adc
insl
mov
or
mov
push
clc
push
mov
mov
shll
jne
xor
clc
xchg
jmp
dec
test
mov
test
jno
sbb
aas
cltd
nop
mov
pop
sub
movsb
lret
mov
mov
fcmovu
sti
xor
push
mov
xor
sub
pop
ljmp
jl
jo
jbe
loopne
mov
nop
pop
sbb
jne
push
xlat
ss
add
push
outsb
stos
mov
rcrl
and
int
cli
mov
iret
inc
lods
inc
rorl
fdivs
adc
xlat
imull
push
outsb
out
push
pop
fsubrs
cwtl
lret
push
mov
add
aas
mov
aam
pop
gs
lahf
test
cmp
nop
xchg
sbb
xchg
iret
add
xor
adc
xor
out
or
and
lsl
mov
outsb
or
fnstenv
clc
adc
cmpsb
clc
cmp
inc
sub
xor
pop
push
push
mov
es
popf
jge
xchg
cmp
push
pusha
adc
inc
loope
fnstsw
pop
test
bound
fwait
xor
fiadds
leave
or
jae
out
push
xor
shrl
out
jecxz
xor
xchg
pop
xchg
jecxz
scas
xchg
cmp
scas
and
mov
xchg
mov
imul
in
pop
jp
jnp
adc
cmp
xor
mov
mov
pushf
ret
sub
jne
or
lea
push
stc
arpl
mov
mov
mov
xor
cmpsb
adc
loop
and
pop
jae
sbb
adc
cmpsb
sub
add
cmc
sub
ds
mov
sub
xlat
or
int3
add
imul
cmp
in
sbb
dec
popa
adcl
aas
mov
xchg
sub
sbb
lcall
and
jg
imul
mov
ret
xor
mov
mov
movsb
mov
neg
lock
mov
adcl
ja
mov
fwait
test
aam
ret
out
xchg
je
rcr
inc
fstps
mov
and
int3
and
adc
rclb
ss
pusha
adc
mov
inc
daa
scas
inc
pop
aas
shlb
decl
sub
jl
shlb
enter
xor
mov
or
pop
and
cmp
jae
js
mov
cmp
imull
mov
in
sbb
cmp
cltd
mov
es
sub
dec
pop
jo
or
push
dec
sub
jno
rcrl
jp
mov
rolb
lods
hlt
mov
mov
sbb
mov
sub
addr16
aas
shll
jl
jns
adc
or
stos
adcb
add
xchg
sti
lret
lods
and
mov
xchg
repnz
adc
jmp
cmp
cmc
imul
inc
popf
and
cmc
mov
cmpsb
push
sub
inc
jmp
cmp
dec
and
in
scas
jno
fidivl
jmp
push
and
aas
in
insl
jno
outsb
cs
outsb
dec
lds
pop
addr16
gs
fisubrs
pop
imulb
testb
dec
mull
hlt
iret
pusha
idivl
fisubrs
out
push
movsl
dec
mov
dec
push
push
pop
mov
push
cmpsb
roll
popa
push
dec
xorl
inc
or
aaa
out
pop
jmp
xchg
sahf
mov
mov
cmp
daa
xchg
adc
aad
pop
lret
test
lret
divps
push
out
inc
int3
push
pop
xor
mov
out
outsb
sbb
popa
sub
adc
push
out
rcll
pusha
jae
add
sbb
in
cmp
pop
xchg
imul
mov
xor
xchg
dec
sbb
mov
call
jge
hlt
push
arpl
mov
fistps
out
lods
aad
adc
lahf
loope
iret
adc
xchg
push
add
jecxz
xchg
mov
cltd
ret
mov
adc
ds
inc
test
jmp
and
or
sti
sahf
test
je
arpl
cmpsl
or
repz
pop
jmp
lret
pushf
nop
push
test
lds
pop
loopne
sub
push
mov
fisubrs
dec
jl
test
dec
stos
cs
push
repnz
cs
fldenv
mov
and
cmp
add
add
cmc
nop
push
and
inc
sbb
movsb
cmp
ret
inc
test
cltd
jbe
pop
in
add
jmp
push
mov
mov
add
mov
fcmovnb
inc
dec
push
sub
popf
andb
pop
insl
push
cltd
fiaddl
mov
xchg
adc
add
and
lods
and
push
xor
pushw
pop
mov
mov
pop
ret
loope
andl
test
push
les
pop
mov
inc
jg
into
imul
insb
xor
outsl
and
insl
test
cmp
cltd
mull
push
mov
xor
cmp
inc
xor
xchg
xchg
push
pop
push
icebp
add
sub
cli
xchg
movsl
daa
test
xchg
jbe,pn
cmp
aam
add
jb
cli
scas
pop
mov
out
inc
jbe
push
mov
push
sahf
pushf
push
gs
lods
gs
pop
mov
xchg
jno
jbe
push
outsl
mov
mov
sbb
mov
ljmp
sahf
xchg
scas
scas
loope
mov
dec
lock
stos
insl
fcmovnbe
sbb
pop
imul
fstl
sbb
adc
data16
inc
lock
int
xor
push
adc
iret
bnd
sahf
test
and
testb
pop
and
jo
or
add
or
hlt
jle
scas
add
shrl
pop
sbb
fidivrs
mov
lret
lds
pop
sub
outsb
pop
mov
inc
pop
dec
mov
fimull
outsl
inc
xlat
int
xchg
mov
pusha
jmp
stc
dec
arpl
cwtl
lea
sub
pop
push
jmp
or
adc
ret
and
sub
sbb
jb
push
cs
movsb
adc
sub
loopne
mov
push
add
mov
loope
jbe
arpl
add
pop
pop
sbb
adc
adc
xor
push
cmp
ss
and
pop
mov
into
icebp
dec
pop
push
xor
lret
lds
movsb
pop
insb
popa
icebp
mov
insb
xchg
aaa
push
repnz
jae
cmp
xchg
lahf
xchg
aas
dec
movsb
jb
lret
aaa
rcr
xchg
sub
addr16
bound
jge
fadd
jnp
mov
mov
dec
cmp
sub
cltd
pop
das
inc
fdivl
mov
adc
push
stos
xor
and
dec
xchg
or
js
stos
sbb
mov
or
pop
push
mov
push
cmc
loope
mov
inc
push
push
fistl
dec
sbb
mov
sbb
sbb
out
mov
shll
mov
dec
lcall
or
fnstcw
nop
in
nop
add
clc
ret
shlb
inc
lahf
pop
sub
ljmp
sbb
jne
and
mov
push
cmp
push
and
bound
iret
imul
mov
pop
dec
lahf
dec
mov
sbb
add
ret
sub
sub
hlt
pop
iret
mov
lret
rcrb
cltd
cwtl
repnz
fildll
mov
mov
andl
lea
enter
jae
inc
out
bound
ret
cwtl
mov
and
add
or
cmp
xor
push
mov
pop
xor
jnp
mov
inc
fwait
stos
in
jbe
mov
and
cld
inc
ds
repnz
inc
insb
aas
jecxz
test
cld
cltd
fnstenv
ss
xchg
js
sbb
push
inc
gs
ret
into
or
pop
pop
scas
cmp
les
clc
xor
scas
inc
fs
out
rorb
push
push
jne
jne
outsb
test
xchg
outsl
addb
mov
mov
rclb
adc
std
inc
jg
rclb
xlat
lahf
mov
inc
out
xor
jl
add
and
frstor
add
inc
sbb
push
test
lock
mov
inc
imul
stos
jp
jb
sub
jo
fstps
and
push
lds
and
adcl
jno
lods
push
push
test
jo
rcll
pop
fwait
pop
xchg
pop
push
xchg
rclb
fcoms
fsubp
popa
enter
clc
inc
mov
es
push
xor
test
cmp
out
or
stos
adc
dec
push
xchg
dec
subl
mov
call
aas
call
adc
sar
out
jl
xor
pushf
cmp
and
imul
mov
lahf
sti
jecxz
inc
mov
cltd
movsl
pop
sbb
outsl
clc
cld
aam
add
js
xchg
ss
push
xchg
repz
mov
xor
push
fistpl
imul
xchg
lret
imul
pop
fstps
scas
movsl
and
add
out
subl
mov
mov
jl
add
pop
scas
push
outsl
xchg
popf
xchg
sub
out
xor
bound
pusha
mov
jge
pop
insl
in
cltd
outsl
mov
mov
fdivs
xchg
sarl
jecxz
ret
xchg
rcll
push
push
int3
jne
cmp
and
mov
into
out
nop
daa
int3
mov
fildl
sbb
or
popf
jecxz
pop
fcoml
and
sbb
movsb
mov
xchg
mov
mov
dec
int3
lret
je
loope
sub
dec
repnz
sbb
mov
sbb
aad
icebp
mov
mov
dec
xchg
loope
pop
out
xor
out
neg
push
xchg
push
jo
xchg
nop
inc
mov
dec
dec
movsl
or
mov
mov
xchg
dec
sub
fnstsw
hlt
shll
xchg
ss
or
cli
lods
mov
mov
mov
pop
lahf
jne
xchg
mov
lret
pop
lret
sti
sbb
dec
xor
inc
imul
out
cmpsl
jl
imul
jne
jl
push
dec
cld
inc
je
addr16
mov
cmp
ss
xchg
mov
mov
leave
pop
add
push
sbb
jecxz
pop
cli
or
inc
dec
fildl
mov
adc
inc
mov
mov
rcrl
xor
out
int
pop
fstpt
loop
xchg
das
addl
add
lock
mov
mov
data16
mov
jp
jbe
pushl
ret
shll
arpl
lcall
sarb
xor
iret
adc
daa
jmp
and
adc
jmp
out
sbb
lods
sbb
mov
push
jmp
idivb
in
sbb
ret
sti
sbb
adc
mov
mov
je
sub
insl
mov
in
and
popf
fidivrs
fs
rclb
sahf
cmc
xorl
lcall
fisttpll
test
movb
or
popf
popa
xchg
push
das
lahf
lock
loopne
fsubrs
inc
js
movl
fimull
mov
imul
stos
sbb
iret
xchg
leave
jge
mov
push
imul
and
adc
inc
mov
lods
sbb
lods
movsb
dec
cmpb
stos
test
ja
cmp
lea
in
out
add
and
push
and
outsb
mov
fmuls
lret
jns
adc
adc
shll
test
pop
adc
pop
roll
xor
mov
jb
scas
les
inc
jne
dec
inc
ficoml
fbstp
add
lret
adc
in
cmpsb
cmp
test
mov
fistps
mov
cwtl
call
popa
inc
xchg
cmc
sub
mov
ljmp
pop
in
xchg
jge
sbb
xor
xchg
and
mov
fisubs
mov
pop
ror
mov
jo
stos
and
jo
jns
std
mov
sub
inc
mov
call
sub
fisttpl
cmc
and
in
push
jae
mull
xchg
sti
sbb
jo
sub
stos
pusha
adc
jmp
mov
sahf
sbb
insl
sbb
pop
popa
cmp
xchg
add
lret
test
jns
pushf
and
gs
or
mov
addb
es
aaa
daa
int3
shr
dec
cmove
dec
stc
jle
leave
iret
fadds
cld
fcoms
lea
faddp
xchg
mov
push
mov
scas
in
dec
hlt
xchg
mov
pop
testl
sbb
cwtl
jae
lret
loopne
xchg
xchg
xchg
out
mov
or
cmp
out
mov
shrl
aaa
adc
lea
pop
sahf
push
call
movsl
outsl
lcall
push
mov
ja
mov
inc
and
das
push
inc
repz
jg
push
in
push
xchg
fsubs
pop
fildll
xchg
xlat
into
sbb
cmp
fisttpl
div
sub
xchg
imul
or
or
jmp
pop
mov
cmp
sbb
ljmp
rorl
shll
popa
sub
popf
fs
dec
ror
inc
mov
mov
int3
fstpl
ret
inc
sub
out
xchg
mulb
sbb
push
enter
cmpl
arpl
movb
aam
jg
mov
mov
jnp
sub
rclb
loopne
sub
xchg
out
mov
inc
pop
in
cmp
scas
or
in
mov
insl
pop
pop
mov
and
sbb
jo
jne
push
push
std
push
rcll
gs
cmpsl
lahf
push
dec
xchg
adc
shlb
jae
test
xor
test
mov
sub
inc
push
daa
es
mov
notb
and
fs
inc
lcall
addr16
ficoms
mov
mov
lods
cmp
inc
push
das
cmp
mov
adc
push
std
push
data16
mov
cmp
les
enter
testb
sbb
mov
jns
add
xchg
jmp
loope
shlb
or
sahf
xor
inc
aad
push
adc
repnz
dec
mov
jmp
mov
test
add
jnp
adc
lcall
pop
rorl
inc
cltd
fldenv
out
int
aaa
pop
pushf
stos
test
sbb
xlat
push
and
fistpll
fimuls
push
cltd
jge
into
scas
insl
aam
jae
test
mov
int3
xlat
push
das
mov
out
in
dec
sub
movsl
iret
imul
and
jae
add
stos
xor
pop
mov
pop
mov
inc
push
mov
mov
add
inc
and
cmp
outsl
rcl
add
or
xchg
and
mov
rol
jo
repnz
in
rcl
push
sarb
pop
enter
mov
jg
pop
xor
int3
jno
pop
insl
add
push
xchg
in
enter
sahf
or
ficoml
nop
mov
aad
int3
ror
je
clc
adc
scas
in
jl
ljmp
xor
inc
dec
sarb
mov
loopne
pushf
add
fistl
push
pop
cld
lcall
sahf
icebp
negl
jnp
in
fcmove
adc
into
xlat
call
xchg
mov
clc
add
mov
sub
cmc
lods
pop
and
cwtl
add
je
xlat
inc
mov
jl
add
mov
enter
cmc
jb
mov
pushf
mov
jg
jbe
inc
push
cmp
aas
shl
push
not
mov
or
adc
into
addr16
inc
fcomps
mov
fsubr
mov
sbb
jno
xchg
ss
ret
aad
daa
mov
xor
xor
call
arpl
lahf
jecxz
ret
mov
mov
or
jl
sbbb
mov
jle
xlat
mov
jnp
daa
fsubl
xchg
mov
xlat
iret
sub
test
jae
cmpsl
jmp
movl
bound
add
clc
sub
ret
or
sub
xor
push
int3
sbbl
stos
mov
dec
js
movsb
leave
sbb
cmpsl
jbe
outsb
dec
inc
jmp
int
lock
fdivrl
dec
sub
fs
push
push
dec
mov
sbb
pop
lods
add
and
rolb
jecxz
int
dec
rclb
push
xorps
jmp
roll
xor
mov
repnz
xchg
xchg
xor
gs
jns
sar
pop
adc
and
outsb
jmp
mov
inc
daa
ljmp
mov
mov
cmpsl
cmp
lods
sbb
dec
jecxz
testb
push
inc
test
xchg
lds
and
sbb
adc
dec
xchg
push
comiss
adc
pslld
add
mov
or
push
jmp
cmpsb
xor
mov
and
lea
nop
movsl
ds
sub
shl
lods
cld
xor
add
push
jno
jl
test
sub
sbb
mov
imul
adc
les
aaa
aaa
addb
addr16
bound
mov
iret
popa
enter
jb
shl
push
push
iret
loopne
fisttpl
in
daa
int3
add
idiv
and
mov
insb
mov
dec
xor
pop
cmp
push
cs
sbb
daa
fcompl
push
out
sub
cmp
js
mov
in
and
aad
mov
sub
jp
cmp
sbb
mov
sub
test
pop
aas
fwait
dec
jl
xchg
sub
sbb
outsb
cld
jecxz
and
cmc
cli
mov
pop
add
dec
mov
xchg
or
je
inc
cli
add
dec
dec
push
inc
dec
lret
cmpsb
std
pop
loopne
es
mov
xchg
movb
into
in
add
push
rcl
insl
clc
jne
popa
dec
cli
inc
jp
jmp
out
lret
sbb
int
dec
loopne
add
pop
xchg
clc
and
jbe
mov
pop
cld
sarl
lock
push
insb
cli
jnp
sbb
mov
add
jb
mov
fiadds
mov
inc
lahf
adc
dec
fxch
xchg
adc
out
pop
popa
repnz
lock
fwait
sbb
leave
jmp
pop
movsb
mov
or
jbe
xor
mov
hlt
int3
imul
insb
mov
cmp
movsb
sub
pop
adc
pop
xchg
push
lret
outsl
stos
adc
xor
mov
inc
in
les
ficoml
mov
addb
cwtl
cs
stc
stos
icebp
pop
cmp
mov
lea
lods
jne
push
or
jbe
inc
cmp
je
or
xchg
cmp
shrl
mov
mov
mov
xor
pop
cmp
inc
ljmp
test
add
ss
cmc
xchg
xor
lret
test
xlat
jp
adc
jnp
mov
dec
mov
in
mov
push
arpl
into
cmp
test
inc
pop
mov
pop
mov
dec
es
out
dec
addr16
xor
pop
push
inc
or
ret
fcmovnbe
shrl
jle,pn
jbe
in
xor
adc
scas
or
xchg
sub
mov
xchg
icebp
mov
mov
or
jae
mov
loope
verr
mov
cmpb
cmc
or
es
lds
cmp
inc
or
lahf
inc
rolb
sbb
push
mov
stos
sub
cs
cmp
lahf
es
mov
dec
jge
cmp
xor
or
test
aaa
jp
push
mov
jle
inc
or
xor
gs
pop
mul
std
cmp
hlt
les
imul
lds
movsb
clc
pop
out
bndstx
dec
push
ja
or
cwtl
sub
xchg
sbb
test
in
scas
cld
mov
test
adc
push
xchg
or
jle
orl
pop
popa
js
push
jp
test
cwtl
lock
hlt
in
outsl
adc
test
call
mov
mov
stc
rcrl
addr16
scas
movsl
test
and
pop
push
clc
and
in
or
icebp
dec
adc
push
add
daa
icebp
dec
or
inc
mov
dec
adc
lods
dec
sahf
loop
out
in
gs
push
pop
sbb
jns
cmpsb
mov
nop
mov
repz
lods
or
xor
mov
cli
mov
and
loopne
cmpsb
sub
inc
je
into
inc
push
adc
dec
sbb
insl
mov
fwait
and
jg
sbb
sub
mov
jl
inc
lods
sub
cmpb
xchg
dec
cmpsl
xchg
jge
add
mov
loope
sbb
loopne
sbb
jecxz
inc
push
mov
mov
cmpsl
movsl
popa
add
int
push
repnz
add
cmpb
sti
pop
or
call
mov
enter
pop
stos
stc
fisttpl
xor
mov
inc
mov
xchg
mov
xor
xchg
mov
push
pop
icebp
std
xchg
in
dec
roll
imul
cmpsl
jbe
fiaddl
into
push
add
sbb
sahf
ljmp
jp
ljmp
sub
lds
xchg
xchg
jns
and
sbb
orb
sub
inc
out
addr16
out
or
out
mov
dec
jl
sahf
divl
push
into
mov
inc
xchg
ret
add
xchg
cmpsl
cwtl
leave
clc
mov
pop
fidivrl
jnp
cmp
sbb
das
addr16
sti
push
imul
frstor
push
out
sahf
mov
cmpsb
cmp
sar
cmp
aas
xor
xchg
jle
jno
shl
jno
rcll
stos
out
adcl
pop
divb
push
sub
mov
mov
popa
stos
iret
and
mov
sbb
mov
out
adc
andl
repz
in
mov
push
mov
sub
fistl
nop
fisubl
ds
xchg
inc
subl
xor
cmp
ja
int
xchg
mov
test
mov
cltd
sahf
or
cmp
shll
jp
dec
mov
mov
xchg
adcl
xchg
jmp
jp
fstpl
fwait
imul
mov
inc
push
aam
jo
cmp
sub
cwtl
fs
js
sbb
fs
inc
push
cmpsl
mov
mov
and
fisubrs
jp
mov
jo
mov
sbb
clc
mov
xor
jns
scas
dec
xchg
dec
sbb
cmp
adc
add
jno
mov
lods
add
decl
add
cmpsl
xor
sbb
iret
ss
mov
and
aaa
cld
inc
adc
pop
daa
add
das
in
sub
jnp
ror
in
or
das
jl
push
out
aad
jno
and
adc
mov
xchg
sbb
ljmp
je
fwait
popa
test
push
ret
adc
cmp
mov
dec
jl
cmp
xor
gs
test
enter
test
jge
out
lea
scas
mov
ret
mov
mov
sbb
xor
rclb
xor
jmp
xor
mov
push
adc
push
dec
ds
lret
xor
add
les
xor
xchg
mov
mov
push
cmp
test
sbb
fdiv
dec
dec
sbb
lcall
in
add
sbb
mov
dec
imul
cmp
or
mulb
dec
lods
out
lock
and
jl
push
adc
pop
dec
bound
lahf
pushf
adc
and
sub
dec
notb
xchg
mov
negb
cli
imul
lods
adc
sti
decb
dec
sbb
shll
iret
mov
ret
xlat
ret
in
dec
pusha
add
xchg
cmc
arpl
cmp
mov
rcrb
imul
jge
das
mov
xor
jb
push
jae
iret
push
movl
jno
aad
ret
fisubl
push
pop
sbb
jbe
mov
add
and
jg
sub
das
xor
cmp
fisttps
stos
sub
bound
imul
sti
mov
lds
rol
outsl
sub
inc
iret
roll
mov
and
mov
iret
mov
in
imul
mov
dec
scas
cmp
test
xor
subb
inc
inc
and
rcrl
lea
icebp
and
sub
es
in
xchg
and
shlb
dec
dec
mov
sub
xchg
enter
mov
push
pop
fidivs
adc
mov
in
cli
jne
pop
mov
lret
popf
into
test
xor
xchg
xor
pop
out
test
cwtl
and
and
xchg
fsubl
sbb
inc
pop
or
orl
addr16
jbe
fstpl
repz
sbb
jbe
ss
imul
sbb
cmp
jns
insb
add
cmp
sbb
cmp
inc
xor
adcl
jecxz
lea
jecxz
out
cs
ficomps
jmp
lcall
xor
xlat
fs
push
mov
jle
arpl
ret
xor
out
cmp
or
sub
lods
inc
addb
lock
not
mull
movsb
jne
cmpsl
movsl
pop
mov
in
cmp
dec
icebp
sbb
push
mov
adc
iret
dec
push
inc
lods
inc
inc
sbb
stc
inc
mov
rcrb
or
out
out
test
shrb
jge
fwait
push
addr16
or
mov
dec
fwait
in
js
in
decl
ret
cmp
out
jb
repz
mov
mov
lds
ds
add
lret
daa
ffreep
pop
daa
cmp
ja
inc
notl
fildl
sub
sbb
add
or
mov
addl
mov
gs
inc
bound
stc
aad
lds
inc
mov
inc
mov
mov
push
test
lods
fs
aas
es
sbb
shr
ficoms
sbb
sub
pop
ss
sub
push
testb
jl
jb
fcmovbe
mov
and
js
cli
aaa
jo
inc
out
nop
arpl
jbe
inc
enter
clc
jl
call
test
push
in
inc
push
aad
jb
enter
push
scas
mov
and
xor
lcall
mov
and
cmp
sbb
mov
push
movsl
andl
push
aas
push
or
lods
fdivl
icebp
and
jne
mov
inc
mov
mov
xlat
dec
dec
xchg
mov
lret
adc
xor
outsl
xchg
mov
pop
sbb
aad
cmp
test
or
cmpsl
mov
fadd
mov
fs
int3
jne
icebp
mov
stos
data16
popa
add
jns
pop
std
mov
vxorps
jbe
mov
ljmp
cmpsl
int3
ljmp
leave
mov
push
loopne
lods
mov
aam
sbb
cwtl
mov
movsb
lret
sub
push
inc
aas
dec
cs
sbb
js
sub
cmp
jecxz
mov
stos
jge
jecxz
fldenv
gs
or
jo
ja,pt
idiv
outsl
push
leave
or
dec
scas
cs
lods
or
add
cmpb
sub
mov
mov
push
int
out
sub
fildll
sbb
inc
test
test
fcomps
test
stc
pop
sbb
outsb
push
add
cmpsl
call
mov
lock
les
dec
inc
cmp
cmpsb
es
test
int3
ret
push
cmp
fs
xor
push
outsl
sub
js
sbb
jns
test
add
outsl
lods
shr
je
cs
test
cmp
dec
inc
addl
sarl
dec
mov
xchg
xorl
or
aad
mov
adc
xor
out
int
sbb
jbe
arpl
push
mov
cmp
cs
xor
repz
mov
xchg
cmpsb
sbb
out
cmp
adc
jns
popf
xchg
dec
xchg
gs
mov
push
add
xlat
mov
pop
mov
ret
add
sub
out
stc
js
ljmp
ret
jg
jmp
test
cmp
inc
jecxz
clc
jp
and
pcmpeqd
daa
sub
adc
inc
divb
inc
mov
jecxz
cld
xor
sbbb
arpl
std
adc
insb
std
mov
es
jb
into
sub
in
js
inc
in
mov
or
int3
rcl
pop
xor
mov
subb
adc
push
jl
rcrb
inc
mov
stos
daa
adc
mov
cmc
jg
sbb
dec
push
jmpw
fucomp
jl
fnsaves
cwtl
mov
adc
leave
rolb
arpl
adc
mov
sbb
add
jno
and
js
jne
pop
xlat
jp
dec
push
std
loope
push
xchg
imul
scas
fadds
ds
mov
jb
sti
leave
dec
jp
je
pushf
test
and
or
dec
jecxz
sub
cwtl
pop
jmp
int
mov
jo
xchg
in
repz
xchg
repnz
loope
add
pop
out
or
xor
ds
jp
imull
cld
pop
mov
xor
in
mov
test
out
xor
mov
fld
rclb
shrb
add
movsl
outsl
out
mov
sbb
pop
push
and
sub
adc
xor
movsl
into
pushl
sub
adc
sbb
popa
test
jne
das
xchg
bound
cmpsl
dec
sbb
out
mov
adc
and
xchg
and
fninit
inc
or
cld
mov
mov
fsubrl
scas
mov
xor
icebp
adc
push
and
bound
rcrb
mov
jl
fiadds
sti
ds
mov
leave
sub
push
dec
ret
je
jnp
les
iret
std
or
and
sub
xchg
or
std
rclb
adc
ret
jae
add
xor
addl
sbb
bound
lahf
pop
sbb
pop
in
pop
xlat
xor
int
xchg
popf
in
lret
data16
xchg
out
cmp
mov
push
mov
fwait
inc
fdivr
sbb
jecxz
dec
movsb
loop
das
fsts
xlat
aam
insb
in
incb
jg
jne,pn
mov
mov
xor
loope
push
jno
daa
div
and
push
fdivs
cmpsl
sub
sti
push
dec
jbe
jp
test
adc
xchg
xchg
and
out
mov
hlt
push
dec
xlat
cwtl
cmpsl
fildl
lock
ss
xchg
mov
inc
adc
and
xchg
adc
dec
push
ds
fwait
xor
add
sub
int
repnz
sub
jecxz
or
xlat
ret
jecxz
sub
stos
rcll
popf
xor
jnp
lods
cwtl
mov
dec
ret
insb
jmp
mov
xchg
or
lret
fadd
inc
mov
js
call
add
pop
mov
mov
pop
push
lea
cld
out
mov
test
cmp
pushf
xchg
test
and
jo
and
dec
loopne
mov
in
stos
xlat
add
xchg
dec
mov
push
pop
dec
push
add
andl
daa
dec
sbb
aas
push
xchg
inc
push
fstpl
jbe
lods
fisttpl
cltd
sbb
out
lea
out
sub
mov
testb
add
push
inc
mov
int3
add
das
push
sub
pushf
mov
sub
iret
pop
js
lcall
jnp
sub
gs
mov
cmp
mov
sbb
pop
mov
shll
push
sub
xor
cs
mov
dec
jo
and
mov
jae
int
sti
dec
inc
xchg
mov
mov
outsl
pop
lcall
push
mov
push
jp
ret
in
loop
fidivrl
je
call
mov
enter
xchg
add
sub
or
fisubl
push
sbb
lahf
adc
iret
xor
stos
dec
out
jg
inc
push
ficomps
push
imul
js
jne
jo
ljmp
and
jno
or
lea
push
pop
out
pop
in
loop
fildll
xor
mov
fidivs
jae
push
jle
push
inc
inc
pop
mov
imul
mov
pushf
lods
mov
loopne
aaa
pop
std
sahf
sub
add
into
lock
xchg
adc
mov
pusha
lock
mov
fwait
lret
or
cmp
fwait
jl
pusha
cmp
cmp
aam
and
mov
push
cmp
flds
sbb
push
sub
ja
loop
sub
call
cli
in
pop
jmp
sar
cmpsb
xchg
and
inc
test
adc
sbb
pop
cwtl
jmp
je
cld
mov
push
lahf
and
xor
lahf
inc
pop
xor
or
inc
jge
sub
dec
out
adc
lods
or
jmp
add
ret
cmpsl
sbb
and
push
dec
cmc
aas
jmp
pop
call
pop
jl
adc
inc
insl
cmp
fwait
decl
inc
sbb
lods
ja
pop
cmp
dec
cmpsb
cmpsb
cmp
mov
cwtl
pop
inc
daa
popl
mov
or
ljmp
sbb
cs
and
les
fistpll
xor
int
jbe
mov
xor
movswl
je
sbb
push
out
testb
scas
jb
lea
mov
xchg
inc
imul
or
mov
xor
mov
daa
mov
dec
pop
add
mov
das
cmp
xor
insl
loope
xchg
pop
fs
pop
pushf
push
sbb
pop
or
pop
xor
movsl
stos
fs
mov
sarl
push
mov
lods
lds
sub
jl
inc
std
int
lret
call
scas
inc
roll
call
add
out
das
ret
addr16
nop
inc
arpl
out
mulb
outsb
inc
mov
es
fstpl
cmp
pop
add
insl
loope
jns
cltd
dec
inc
cmpsl
mov
out
xor
xor
jecxz
lods
mov
xchg
mov
mov
adc
xorl
into
hlt
loop
pop
mov
test
icebp
inc
imul
jbe
clc
push
sti
adc
add
in
ret
push
repnz
leave
inc
push
jmp
cmpsb
push
ret
insl
jle,pt
xchg
inc
inc
hlt
mov
in
inc
lret
mov
movsb
out
fldt
testl
sub
push
jmp
adc
js
xor
pop
and
ja
push
lods
mov
push
outsb
sbb
movsb
mov
adc
jb
sbb
mov
cmpsl
xchg
repnz
jg
notl
mov
lods
in
dec
cmp
mov
test
xchg
mov
pop
add
pop
xlat
std
stos
fsubs
pop
mov
dec
enter
loop
fcomps
or
in
push
add
inc
sahf
adc
adc
inc
std
pushf
push
mov
loope
mov
dec
sarb
jge
loope
rcll
sbb
iret
xchg
outsb
call
aam
mov
sub
ds
shr
popf
add
mov
jbe
add
xchg
nop
jbe
jg
movsl
inc
push
stos
ret
pop
mov
and
push
leave
or
or
out
sbb
inc
sub
movsb
xchg
bound
push
das
test
push
dec
add
int3
jmp
call
fisubrl
xchg
jno
cmp
mov
clc
rcll
loop
pop
jmp
ret
popf
dec
jns
std
sub
aam
imul
cmpsb
and
or
xlat
jle
dec
mov
push
lea
jbe
and
mov
ret
rclb
daa
push
jle
loope
cli
cld
pop
cli
or
mov
int3
add
and
dec
aad
jo
pop
loopne
pop
adc
dec
pop
imul
jns
ds
sub
push
pop
lahf
add
mov
stos
test
shll
sub
loop
jno
cmp
lock
pop
mov
cwtl
sub
loope
pop
xchg
test
daa
data16
sub
adc
aas
and
rcll
jle
gs
out
cmp
mov
add
push
sbb
add
xlat
mov
iret
adc
pop
xchg
xchg
mov
push
sarb
push
jnp
pop
inc
pop
xor
jl
rolb
jg
xchg
sti
xchg
adc
data16
and
fnstenv
and
scas
jp
leave
xchg
dec
icebp
imul
fiadds
sbb
repz
fildll
xchg
rcr
jno
imul
push
dec
rorl
rcr
adc
ja
push
sahf
mov
dec
loopne,pt
jg
aaa
jns
xchg
dec
xchg
mov
mov
or
and
mov
imul
insb
dec
cmc
sub
lods
in
dec
pop
filds
add
sar
idivl
or
ret
inc
popa
incb
nop
lcall
inc
out
mov
loop
and
mov
push
jb
mov
imul
mov
sub
sbb
rclb
cmp
pop
push
adc
shlb
cwtl
rolb
sahf
addr16
push
dec
es
pushf
adc
and
leave
nop
mov
add
pop
jle
adc
sub
bound
aam
mov
out
mov
xchg
cwtl
and
sbb
push
data16
inc
jg
scas
jp
gs
pop
subb
stos
lods
stc
push
mov
cmc
jge
mov
push
xchg
mov
enter
push
dec
int
call
dec
push
pushl
adc
sub
sub
sbb
lods
add
xchg
lds
int
push
cmpsl
and
sarl
mov
in
inc
repnz
orl
std
fs
out
lock
push
sti
push
push
pop
std
xchg
dec
dec
mov
and
aas
mov
lahf
or
jl
ja
test
mov
dec
in
test
and
jbe
xchg
xchg
lahf
daa
sbb
fldl
sub
leave
xor
xchg
ds
mov
xchg
sub
inc
jae
cmp
lods
icebp
push
push
inc
popa
clc
jnp
loope
test
sbb
mov
insb
sti
movsb
rcrb
ja
arpl
or
add
dec
repnz
daa
in
or
adc
sub
outsl
xchg
xor
cwtl
into
fiaddl
sub
pop
in
lea
movsb
jns
lahf
and
xchg
jnp
sahf
div
jmp
in
pop
out
fwait
mov
mov
xor
lods
adc
shll
stos
dec
aam
outsb
stc
pop
fstpt
ret
lret
pusha
jle
jns
mov
fisubrs
push
fs
pop
cwtl
test
inc
cmp
cmp
scas
test
xchg
xor
xchg
cvtdq2ps
xchg
pop
xor
out
sbb
xor
cmpsl
push
mov
mov
xchg
in
insl
push
cmp
out
jbe
popa
adc
cmp
xchg
and
add
jae
push
call
adc
cmp
lods
dec
setle
mov
mov
cmp
inc
sub
cli
mov
pop
jmp
in
mov
inc
mov
fs
jo
pop
rcl
dec
jg
movsb
aam
mov
out
cmp
pop
mov
aad
mov
jns
mov
notb
stc
incb
test
hlt
stos
adc
in
or
jle
cmp
xchg
cwtl
lret
lret
xor
adc
sbb
adc
das
dec
in
mov
mov
pop
mov
jg
es
push
xor
loop
rclb
cmp
fnstenv
ret
fstps
inc
push
mov
pop
jns
push
jo
popa
adc
out
adc
sahf
call
subb
mov
sub
push
mov
xlat
dec
aaa
cmp
mov
lcall
mov
movsb
inc
xor
das
outsl
test
stos
or
and
lretw
mov
mov
dec
mov
popf
push
rorl
mov
test
jge
mov
mov
test
push
xor
lret
jl
jae
loope
daa
lahf
jecxz
sbb
dec
loopne
jbe
in
mov
and
add
test
out
pop
mov
sahf
jmp
inc
mov
cs
sbb
mov
out
adc
clc
cmpsb
adc
dec
cwtl
movsb
xor
test
aas
in
dec
and
xchg
leave
loope
and
dec
stos
jb
lods
add
lods
fstl
mov
jp
xlat
sub
sbb
in
aam
out
repz
mov
pop
or
test
cwtl
sarl
push
fstpt
out
out
jne
pop
jecxz
cmp
jecxz
lcall
and
push
addr16
testb
int
xchg
jl
sahf
inc
mov
cs
popa
pop
pop
sub
test
mov
or
or
push
sub
loope
mov
push
xchg
adc
pop
fs
inc
jo
cmc
xchg
vmovlps
in
cmp
inc
loop
xchg
test
jecxz
enter
sahf
jns
ret
push
jge
xchg
cmpsl
jmp
push
in
outsl
cmpsb
addl
mov
mov
pop
fisttps
imulb
add
dec
jg
int
dec
aam
mov
mov
dec
xchg
aam
jle
add
stc
bound
or
jge
push
jb
std
nop
hlt
int3
scas
xchg
jg
ja
mov
jb
pop
cmpsb
push
pop
xor
fs
cltd
or
cwtl
pop
jmp
or
and
mov
pop
jmp
xor
cmp
lea
push
pop
clc
mov
cs
orb
dec
stc
cmp
dec
scas
loopne
push
icebp
or
mov
out
push
movsb
fucomi
negb
lret
repnz
push
iret
adc
std
lret
and
add
jno
inc
mov
xchg
enter
jmp
jbe
xchg
mov
inc
stos
pop
in
test
fisttpl
inc
xchg
jnp
cmpsb
mov
add
or
adc
data16
ds
pusha
subl
and
ljmp
sub
cmc
inc
lock
shrl
arpl
loopne
mov
mov
xchg
cmpsl
clc
sub
fisttps
push
inc
jmp
mull
or
adc
scas
sbb
cmpsl
inc
jge
mov
shr
xchg
mov
sub
sub
inc
cmp
push
shl
inc
pop
loopne
xchg
shl
sti
add
add
xor
inc
fistpll
mov
mov
xchg
lods
push
and
cmc
mov
hlt
daa
lret
lods
dec
cmpsl
add
add
mov
jbe
cli
push
lret
cmp
and
mov
std
mov
add
lret
notl
jne
xlat
lea
cmp
ljmp
push
pop
jmp
das
xchg
sar
aad
rorl
pop
xor
and
xchg
xchg
roll
dec
cli
cmp
push
jno
idivl
cmc
xchg
cli
insl
test
dec
pop
and
gs
lods
ror
fs
and
adc
xor
rorl
jne
jl
jns
addr16
inc
inc
mov
push
xor
add
nop
lods
sahf
sub
add
pop
scas
inc
scas
imul
add
inc
loope
jae
add
mov
adc
rcrb
out
cs
sbbb
pop
bnd
mov
in
pop
xorb
xchg
mov
ja
sub
cmp
mov
mov
mov
into
add
bound
popa
sbb
iret
pusha
cmp
daa
push
pop
mov
mov
sub
adc
adc
lahf
leave
call
ja
loop
dec
dec
sbb
fnsave
jnp
lods
sub
mov
dec
push
and
jl
mov
inc
pop
add
mov
shrl
push
add
push
loope
daa
and
push
lcall
push
mov
outsb
mov
push
negl
and
xor
lock
and
jmp
mov
mov
loop
fdivl
push
mov
loop
inc
and
stc
out
add
jl
mov
cwtl
and
negl
movsl
inc
adc
mov
sbb
arpl
std
aam
fwait
std
cmp
xchg
int
jb
jle
pop
mov
pusha
sahf
or
inc
dec
repnz
out
das
ret
push
mov
xchg
imul
sub
and
sbb
jno
inc
scas
rcrb
outsb
hlt
mov
and
sbb
in
jb
aad
movsb
rorl
ja
leave
mov
push
add
mov
pushf
sbb
and
aas
mov
lret
dec
mov
imul
cmp
icebp
dec
xchg
adc
mov
imul
xor
sub
and
popf
sub
mov
or
push
sbb
insl
fldcw
add
dec
dec
inc
cmpsl
jbe
rol
xor
push
cltd
test
divb
pushf
jne
mov
push
cmp
roll
jbe
sub
dec
ret
or
popa
bound
sbb
sbb
inc
out
dec
sub
push
sbb
addr16
push
mov
mov
inc
and
bound
icebp
lods
adc
dec
rorl
mov
lcall
leave
cltd
jp
enter
fdivrp
xchg
aam
daa
pop
repz
fistpl
imul
jge
add
mov
mov
mov
inc
fldcw
int
inc
adc
sbb
mov
cmp
rcl
fcompl
xchg
mov
and
mov
jg
push
jecxz
mov
fidivrs
arpl
mov
xchg
jne
jp
fldl
ljmp
out
in
cmp
sti
jg
mov
jb
ret
cmc
sbb
mov
test
inc
int
mov
pop
fwait
sbb
aas
bound
outsl
adc
xor
mov
and
and
std
jecxz
jo
mov
fstl
mov
mov
lods
mov
cmp
loop
jb
je
cmc
les
cltd
js
sbb
or
lret
xchg
mov
xor
inc
or
push
adc
mov
cltd
mov
in
ds
mov
cmp
lods
insb
jge
mov
lods
or
js
pop
dec
test
and
icebp
aas
cli
rcrl
push
push
adc
adc
xchg
mov
scas
push
les
scas
push
inc
adcb
call
xor
jge
out
mov
xchg
inc
pop
ja
in
jmp
ret
mov
test
pop
loopne
inc
fistps
fists
sbb
adc
int
sahf
lods
pop
test
les
movb
jge
ret
or
loopne
cltd
es
sti
add
into
dec
icebp
arpl
xchg
inc
in
adc
mov
sahf
xor
ds
jae
mov
ja
sti
test
ds
mov
inc
dec
shl
lcall
insb
ret
xor
dec
jae
rcrl
xchg
cltd
call
jg
insl
movsb
sahf
pop
mov
int3
jbe
mov
xchg
repz
push
pop
in
jne,pt
xor
adc
mov
push
jnp
pop
pop
pop
xchg
fcmovb
ret
lods
mov
xchg
repnz
pop
add
inc
mov
ret
and
fldcw
sbb
cwtl
pop
jl
or
adc
lcall
and
ret
ljmp
ficoms
mov
jno
filds
pop
mov
into
push
push
dec
sub
push
jb
aas
adc
mov
cmp
and
mov
add
adc
pop
clc
sbb
rorl
adc
push
sub
inc
mov
in
adc
ljmp
out
xor
jnp
jl
pop
or
je
lods
mov
mov
in
leave
out
sub
inc
je
das
cltd
xlat
mov
cmpsb
add
pushf
scas
mov
lds
xchg
popf
cmp
add
leave
nop
das
xchg
cmpsl
push
add
xor
xchg
movsl
fiaddl
and
dec
inc
arpl
es
push
mov
je
jg
ja
mov
push
and
cmp
cli
in
xor
push
outsb
shl
ret
test
xor
inc
inc
push
outsl
xor
je
sti
adc
xchg
xchg
jge
rorl
adc
fnstsw
lods
sahf
stos
jno
dec
ja
adc
dec
pop
outsl
test
cli
sarl
xlat
arpl
pushf
mov
lret
flds
es
mov
loop
mov
or
mov
xchg
cli
push
and
test
xor
mov
xlat
sbbb
scas
jbe
leave
add
sub
testl
insb
sti
leave
lock
jp
pop
and
mov
xor
pusha
lods
in
movsb
push
adc
inc
popf
or
and
stos
sti
pop
test
scas
loop
xlat
add
cmp
pop
dec
pushaw
push
pop
hlt
int3
lock
ds
pop
das
and
into
inc
push
xor
adc
fsts
insb
adc
sbb
out
roll
xchg
push
enter
or
or
cld
inc
sbb
gs
inc
aas
inc
mov
lret
test
dec
sbb
lret
mov
icebp
fyl2xp1
push
inc
xor
int3
jne
and
clc
push
in
sti
mull
in
fsubl
scas
jnp
scas
xor
fiadds
ja
cmpsl
outsb
adc
ret
xchg
jne,pt
cmp
mov
outsb
jo
inc
adc
mov
pop
dec
ret
adc
mov
pop
mov
aam
out
lds
sti
adcb
lahf
in
fs
or
loop
jns
andl
dec
sub
cmpsl
dec
or
and
push
xchg
pop
push
cmp
ja
pop
inc
loope
lret
in
and
pop
fadd
adc
push
xchg
or
pop
mov
add
jecxz
cmpsl
push
aaa
lods
push
and
sbb
cmc
or
aam
psllq
dec
inc
pop
add
rolb
push
ja
popa
dec
nop
aad
and
xchg
cmp
pushf
jae
cmp
dec
mov
scas
test
aad
data16
sub
or
test
adc
lcall
jmp
or
inc
shlb
add
stos
cmp
call
pop
inc
sbb
xchg
fiaddl
lret
outsb
or
jns
leave
dec
sbb
adc
popa
mov
fisubs
in
pop
sbb
dec
sub
jo
and
repnz
mov
in
adc
and
outsl
scas
mov
push
dec
dec
lcall
add
std
adc
ret
repz
mov
mov
rclb
push
or
push
incl
push
cltd
cmp
cmpsl
adc
jns
out
inc
jmp
nop
stos
out
and
aam
gs
mov
mov
decb
call
push
nop
pop
or
mov
mov
roll
daa
mov
inc
sbb
sub
mov
addl
repnz
lds
lock
adc
fistpl
addr16
fwait
adc
cmpsl
fwait
xlat
in
mov
popf
mov
imul
push
pop
orl
jecxz
add
repnz
xor
outsb
pop
push
xchg
bnd
call
dec
sub
pop
push
aas
and
fs
sbb
xor
shll
mov
insb
lcall
ja
jno
dec
mov
jecxz
add
nop
mov
je
jecxz
push
adc
es
hlt
dec
lcall
sbb
test
adc
mov
push
ljmp
lods
xlat
xchg
ljmp
push
into
mov
aaa
je
or
xor
and
pop
pop
sti
das
loope
lahf
adc
and
movsl
ss
pop
ds
jg
mov
xchg
shrb
jecxz
rolb
sbb
add
lods
sbb
add
xchg
dec
data16
imull
mov
scas
push
loopne
xchg
jmp
int3
idiv
rcrb
jge
lahf
and
arpl
fnsave
mov
int
mov
mov
ffreep
jg
pushf
mov
lock
jno
repz
mov
ds
repz
jns
call
jne
out
dec
je
xor
adc
sbb
inc
fsub
push
mov
test
pop
mov
jp
jp
mov
lretw
enter
push
fcompl
ss
xor
shr
aad
fiaddl
fnsave
sub
idiv
jne
xchg
adc
pop
shl
fidivs
push
ret
imul
dec
in
xchg
or
xchg
test
sub
lds
aas
clc
and
ret
sub
mov
clc
xchg
jno
cmp
popf
inc
int3
push
mov
imul
stos
ret
sbb
test
test
fists
sbb
in
sub
loop
mov
push
xchg
repnz
fadds
dec
push
push
arpl
fmul
push
push
and
fnstenv
and
jp
jno
or
cld
scas
mov
add
notl
adc
stc
or
out
popa
loop
das
movsl
push
call
mov
mov
test
or
loop
ret
push
jno
hlt
dec
xor
mov
lret
cmp
mov
dec
sti
faddl
sub
bound
cld
mov
imul
push
xchg
jbe
scas
pop
sbb
ret
out
inc
add
aad
stos
movsb
aaa
inc
mov
leave
lods
mov
add
movsl
ds
push
dec
daa
mov
insb
cmp
or
cmpsl
xor
cld
xor
xor
nop
mov
iret
cmpl
lcall
push
subl
sub
or
adc
stos
mov
mov
mov
out
jp
fwait
dec
dec
and
xlat
cltd
pop
movsl
test
outsb
mov
ret
cltd
outsl
ss
dec
fidivrl
jae
rcrb
jae
xor
shlb
xchg
push
and
cmpsl
inc
loopne
mov
inc
das
push
divl
call
lahf
aad
insl
sub
decl
sub
outsl
jnp
push
cmp
jle
addb
xor
call
dec
sub
lods
sbb
insl
mov
call
loope
mov
fdivrs
cld
mov
movsb
add
push
call
stc
or
cmp
popf
in
stos
gs
lcall
scas
push
sub
movsl
test
shll
inc
popf
inc
dec
shlb
or
fidivrl
shrl
flds
push
sub
pop
aad
enter
stos
pop
insb
sub
fdivrs
lds
daa
mov
inc
lods
icebp
sti
dec
icebp
mov
mov
push
pop
adc
cs
adc
iret
mov
out
out
push
sbb
lds
jo
mov
or
push
mov
arpl
addr16
lcall
add
cmc
sbb
mov
lods
xchg
inc
movsb
mov
fadds
or
jge
fwait
cmp
insb
nop
cmp
jae
dec
pop
sub
popf
pop
icebp
sub
arpl
lock
jne,pn
cmp
pop
mov
int
pop
pop
into
cmc
mov
or
cmp
sub
inc
dec
add
xchg
rorb
pop
add
lcall
inc
imul
scas
jne
scas
xor
cmp
pop
mov
scas
stos
repz
aam
mov
mov
jmp
js
or
inc
filds
or
sbb
mov
pop
hlt
push
nop
jecxz
jmp
lods
xchg
jnp
mov
out
stos
mov
jns
adc
out
xor
test
cltd
cltd
and
push
aas
adc
xor
mov
pop
jmp
sbb
jge
pusha
pop
popf
sbb
pushf
xor
adc
jb
test
subl
pop
push
cld
xchg
into
popw
adc
out
cmp
shlb
dec
adc
jno
sahf
into
std
cmp
push
andl
daa
xor
test
adc
mov
add
cld
add
pop
cmp
aad
out
dec
xor
imul
sbb
iret
sub
adc
pop
scas
pop
leave
jge
pop
jns
out
in
loop
add
lock
mov
lahf
cmp
stos
fimuls
add
mov
les
arpl
lods
or
insb
ss
xchg
fistpll
mov
nop
fisttpll
ret
mov
sbb
sti
test
sbb
lret
sub
std
xchg
mov
addb
add
cmp
outsl
push
mov
mov
or
mov
testb
lods
repz
pop
inc
add
clc
push
mov
hlt
das
adc
shlb
mov
popf
std
push
push
inc
lret
adc
or
mov
or
test
dec
inc
mov
or
mov
and
jnp
xor
mov
lods
jle
bound
jno
nop
push
pushf
push
xor
outsb
push
daa
shrl
sbb
and
sbb
repnz
in
inc
xchg
xlat
outsl
movsl
arpl
hlt
jle
mov
mov
in
dec
mov
mov
or
lock
out
fwait
xlat
push
push
add
mov
inc
sub
add
xor
scas
pop
dec
add
or
inc
adc
push
sbb
lret
loope
mov
push
outsl
cmp
outsl
lods
cmp
sahf
inc
loope
xor
xchg
popa
mov
rcr
repnz
dec
sti
or
pop
ret
jne
cs
jns
lahf
lret
fdivs
negl
push
dec
mov
pop
pop
dec
mov
leave
ret
cwtl
add
push
jp
sub
leave
imul
jno
or
xchg
xchg
push
mov
fwait
into
sahf
imul
inc
fmull
not
ss
push
fwait
mov
mov
sub
xlat
nop
adc
gs
mov
pop
pusha
jmp
repnz
and
ffree
into
stc
inc
mov
inc
pusha
pop
aas
mov
fstl
add
adc
cmp
dec
pop
repz
adc
loopne
in
push
inc
mov
cmp
xchg
mov
pop
cltd
jno
js
mov
push
pop
decl
jl
lcall
mov
lret
push
imul
stos
scas
cmp
jno
add
mov
adc
shl
pop
cmp
insl
shr
push
inc
sub
dec
cmp
lea
push
xchg
ffreep
ja
popf
xor
rorb
add
lods
pop
pusha
or
mov
fldl
xchg
sbb
lds
pushf
add
jmp
jg
out
push
push
dec
pop
sbb
ja
add
stos
sub
or
or
jge
xchg
jecxz
movsb
aas
sbb
nop
mov
clc
push
sahf
das
lret
outsb
jle
mov
mov
lret
sbb
stc
imul
mov
jecxz
push
aam
jne
sub
sbb
jle
shlb
xchg
pop
xchg
mov
jae
testl
das
inc
aaa
xor
pop
pop
fisttpl
loopne
cmp
sbb
mov
sbb
imul
negb
mov
jmp
mov
pop
sbb
sbb
or
jns
xor
out
and
pop
add
cs
sub
push
sbb
pop
fcmovnu
push
scas
pop
cltd
mov
cwtl
daa
mov
ss
test
loopne
enter
inc
or
dec
jb
mov
popa
mov
std
cwtl
rcrl
lea
out
aaa
xor
jne
insl
adc
jne
das
test
jg
sbb
movsl
inc
bound
pop
mov
fsubr
popf
leave
mov
xor
xlat
pop
jne
insb
push
xchg
and
adc
jmp
cld
mov
mov
pop
push
popf
jnp
inc
xor
cmp
movsb
arpl
dec
insb
fs
add
inc
shl
pop
scas
loopne
adc
and
outsl
pop
xor
mov
stos
popf
nop
push
push
or
fbld
scas
sti
pop
dec
inc
dec
nop
in
mov
ja
push
aaa
push
jne
and
loop
inc
inc
mov
mov
lret
pop
jle
xchg
inc
mov
pop
push
pop
std
mov
sbb
push
dec
pop
das
stos
scas
xchg
adc
test
inc
inc
cmp
outsl
ret
repz
out
gs
or
pop
fcomip
inc
jnp
mov
movsl
je
clc
fsubrl
ja
pop
in
push
add
outsb
stos
pushf
faddl
cltd
sbb
push
scas
inc
shlb
repnz
sti
stos
popf
cmp
mov
decl
cmpsl
sub
mov
lcall
and
jle
mov
leave
cmp
das
mov
pop
and
popf
stc
mov
dec
bound
inc
push
mov
push
mov
and
cmp
sbb
pop
cmp
pop
add
sbb
lods
call
inc
rclb
inc
cmp
daa
sti
push
mov
addr16
jp
pop
add
jne
dec
xchg
movsb
fs
outsl
loopne
pop
shrb
xor
push
shlb
mov
lahf
into
xchg
out
cmp
inc
inc
or
push
shlb
repz
add
push
lcall
adc
cwtl
or
cmp
push
xchg
je
fiaddl
sahf
in
jmp
test
pop
sub
fstpl
jns
aad
nop
cmpsl
cli
push
out
sub
pop
sbb
mov
push
fldl2t
jp
cld
fcom
jnp
pusha
dec
rcrb
arpl
add
mov
xor
in
or
cmp
mov
aam
lret
inc
or
cmp
icebp
mov
add
mov
jbe
lods
add
inc
mov
pop
ds
pop
lea
enter
int3
jg
cmpsb
dec
add
push
cmp
sarl
xor
lret
mov
or
xchg
stc
push
movsb
bound
out
sub
inc
enter
push
dec
xchg
sbb
out
ret
scas
jg
call
cwtl
mov
jns
xor
das
add
sub
sub
xor
lods
icebp
jecxz
and
std
cmpb
rolb
jle
insb
mov
and
pop
sbb
inc
out
sbb
mov
jp
mov
lret
adc
jne
pop
cmp
mov
add
xchg
arpl
pop
mov
mov
cs
mov
or
lods
sub
adc
fcmovbe
fwait
mov
mov
mov
and
cs
xor
mov
or
lods
jbe
xchg
mov
jnp
jl
into
inc
pop
mov
xchg
cmc
icebp
or
xchg
xor
test
icebp
push
rolb
push
jge
mov
mov
dec
repz
xor
xor
xchg
mov
mov
pop
xor
inc
js
std
pop
add
nop
sbb
fidivl
out
adc
pop
sti
dec
pop
dec
and
fdivrl
stos
inc
mov
or
dec
cwtl
mov
repnz
ljmp
mov
rcrl
sub
repnz
add
dec
in
neg
imul
xor
insb
push
in
and
scas
dec
fs
xchg
jmp
and
fwait
pop
push
stos
mov
jo
jge
inc
jno
cmp
fcoms
inc
pop
jno
je
push
push
ret
sub
sbb
xchg
mov
movsl
sbb
loopne
sub
out
movb
pop
ljmp
dec
lahf
mov
push
cmp
sub
in
mov
push
jge
int
fmuls
dec
pop
fnstsw
std
xchg
pop
adc
mov
or
test
fstpt
rorb
dec
inc
jb
cld
bound
into
aad
mov
pop
jge
or
pop
movsb
gs
xor
mov
and
dec
gs
dec
add
scas
lcall
xor
rolb
leave
jmp
data16
inc
pop
jmp
pop
xor
mov
inc
xchg
movsb
mov
dec
icebp
push
nop
ret
mov
mov
aaa
testl
jno
sbb
aad
pop
xchg
dec
xor
out
dec
cmc
dec
or
mov
mov
xchg
rolb
cmpsb
adc
js
mov
mov
mov
inc
mov
rclb
adc
mov
subb
mov
adc
xor
testb
movsl
dec
cmp
addl
jnp
and
and
jmp
pop
ss
jle
mov
cmc
mov
xchg
cmc
add
mov
je
fwait
and
aam
daa
push
push
jge
idivb
shll
mov
cmp
jbe
cmp
push
cmp
repz
mov
lock
dec
fs
inc
in
in
mov
pop
pusha
je
lret
pushf
je
ja
push
inc
pop
mov
push
frstor
and
jge
test
mov
ficoms
jmp
ffreep
pop
insl
cmpsl
or
sti
ret
jno
daa
xchg
push
leave
pop
jae
or
negb
mov
sti
and
inc
incb
pop
addr16
sub
inc
in
jg
sub
js
lods
and
lods
mov
and
es
mov
mov
inc
mov
or
dec
stos
fisttpll
aaa
addr16
mov
mov
pop
mov
push
mov
mov
fistpll
xchg
or
sbb
call
sub
arpl
scas
mov
jmp
push
and
fwait
aad
pop
aaa
inc
fldl
mov
and
inc
clc
push
cmpsb
xlat
inc
out
mov
jbe
adc
imul
cmp
insl
sbb
daa
aam
sarl
inc
cltd
cmp
cmpsl
ds
outsl
imul
push
jnp
sbb
daa
ja
fisttps
xchg
adc
adc
or
mov
test
lcall
adc
sbb
mov
imul
mov
andl
push
sbb
or
jg
mov
cmp
out
pop
scas
xor
aad
repz
add
push
scas
mov
scas
arpl
mov
aam
bound
dec
push
xor
add
jle
scas
sub
cmpsl
repz
sti
cli
cmp
cmp
jae
push
xchg
fildl
sbb
xchg
dec
inc
cmpsl
mov
inc
mov
lods
incl
jmp
fmull
push
test
cltd
or
or
es
lock
jp
sbb
scas
addr16
mov
xchg
mov
pop
dec
push
push
lret
lods
mov
dec
insb
inc
push
inc
mov
std
lea
push
xor
les
rcrb
out
in
add
cmp
sbb
insl
lahf
test
jge
stc
mov
sbb
sub
sbb
das
cmc
ss
jecxz
rcl
pop
int3
loope
mov
xchg
mov
inc
das
mov
je
fdivr
in
stos
dec
xchg
mov
mov
test
add
jg
subl
add
cli
rcrl
in
mov
mov
mov
push
lods
pop
test
pop
ja
ja
test
cmp
out
dec
sub
cwtl
test
mov
cli
cmp
xor
sbb
divl
jo
rcrl
xchg
shr
pop
imul
mov
pop
sub
leave
jo
clc
xchg
int3
mov
adc
or
pusha
dec
outsb
ret
mov
and
push
lcall
pusha
insl
xor
pop
mov
sub
mov
out
jg
ljmp
imul
xchg
xchg
add
jp
jnp
popf
insl
outsl
loopne
jb
test
filds
or
lcall
jecxz
xor
lods
pop
outsl
clc
hlt
imul
lea
sbb
mov
pop
dec
or
sub
out
aaa
inc
and
inc
insl
pop
mov
scas
sub
subb
add
push
pop
std
scas
jno
idivl
mov
push
cmp
mov
or
mov
inc
lock
addr16
cmp
push
xor
subb
popf
call
imul
call
rclb
lret
pop
cmp
sub
jp
pop
leave
mov
push
daa
es
push
stos
sub
ror
xor
dec
cmp
cmp
imul
mov
xor
pop
sbb
lahf
jno
sub
aaa
cmpsl
fdivrl
xchg
sti
jb
mov
inc
adc
mov
movsb
inc
pop
bound
jae
sbb
fildll
jb
notl
or
sub
sbb
aad
push
dec
fisttps
fstl
imul
jb
sub
push
or
dec
xor
jmp
mov
repnz
in
lret
clc
pop
or
clc
enter
inc
inc
test
xchg
cld
add
push
scas
cmp
lds
mov
ret
mov
jmp
mov
mov
cwtl
leave
out
or
ss
and
mov
scas
hlt
out
bound
loop
stos
push
mov
loopne
jbe
out
lock
and
xchg
jg
lret
sarl
fidivrl
stos
mulb
pop
push
inc
sbb
add
repz
inc
and
stc
adc
xchg
pop
roll
in
adc
adc
int
arpl
and
mov
adc
loopne
or
mov
mov
add
xor
inc
data16
ror
cmp
or
out
xchg
pop
test
fsubl
mov
dec
push
push
sbb
ja
ja
arpl
in
xor
xchg
fistpl
cs
xchg
mov
test
lret
out
in
hlt
sub
insb
sub
imul
adc
cmp
mov
push
popa
sarb
or
adc
jnp,pn
xchg
fwait
dec
sbb
pop
and
lock
mov
sbb
psraw
pop
jge
pop
sar
add
push
test
sub
jge
inc
or
ret
xor
push
aaa
adc
addb
pusha
popa
mov
jl
dec
imull
rcrb
jmp
jne
pop
mov
shr
jbe
cmp
mov
xor
pop
lods
lret
fbstp
inc
pop
inc
bound
and
sub
xchg
testb
jp
adc
mov
out
dec
xlat
in
mov
stos
mov
add
repnz
sbbl
bound
scas
jae
jp
pushf
dec
or
mov
stc
mov
pop
pop
inc
testb
ss
sahf
repnz
dec
jmp
in
mov
adc
dec
xchg
aas
rcrb
fdivs
insb
cmc
scas
pop
repz
stos
dec
xchg
imul
jg
inc
jnp
dec
pop
sub
sub
leave
out
fcoml
in
les
jae
rcrl
imul
adc
cmpsb
mov
adc
test
sbb
out
xor
jl
xor
js
cmp
nop
popa
xchg
pushw
dec
lahf
data16
jmp
paddsb
es
gs
jbe
flds
or
cmp
jge
pop
sbb
xorl
nop
aam
xor
scas
idiv
lret
insl
mov
xor
pop
in
xchg
lods
or
inc
inc
inc
xchg
call
lret
jg
inc
clc
jno,pt
cmp
pushf
add
jle
fwait
arpl
xor
fstpt
mov
push
pop
clc
mov
cmpsl
in
test
mov
fs
sbb
sbb
xlat
lret
sahf
loopne
xorb
mov
pop
subl
add
fcmovnbe
shrl
sbb
adc
shrb
add
adc
inc
xor
daa
scas
push
ss
fdivrl
cmp
jmp
cmp
and
push
pop
sub
add
xlat
mov
inc
jle
or
jns
add
inc
mov
ljmp
cmp
int
mov
les
push
loope
mov
out
xor
ds
inc
fsubrs
and
xor
addr16
cmp
xchg
je
popf
lret
dec
and
loope
push
out
dec
lock
xor
cli
imul
je
or
ljmp
jge
jp
fs
lret
jbe
nop
xor
scas
mov
jecxz
and
sbb
popf
ljmp
push
push
push
xchg
mov
jle
lea
mov
int3
sar
push
ret
push
test
or
in
rolb
jnp
fidivl
addr16
in
movsb
in
adc
push
sbb
aas
sbb
inc
and
scas
jp
jmp
icebp
add
xchg
in
std
cmp
out
xor
shll
or
outsl
mov
adc
mov
jns
xor
fisubl
dec
movsb
insb
push
scas
and
pushw
inc
movsb
ret
push
pop
jb
cmp
fildl
adc
ret
xchg
fs
jecxz
das
nop
jno
sub
aam
cmp
xchg
push
fs
fs
mov
pop
mov
ja
push
mov
bound
mov
cmp
cmp
adc
inc
cmp
or
shrl
loopne
xchg
mov
adc
and
sub
aam
mov
arpl
jge
push
jp
and
call
rcrl
inc
rcrb
into
adc
sbb
cmp
repnz
jb
scas
adc
lahf
movsl
adc
jmp
pop
cmp
add
xchg
jge
clc
inc
xlat
nop
adc
lcall
movsb
push
loopne
lds
mov
sub
inc
lds
add
mov
icebp
sub
jno
add
cmp
stc
addr16
jmp
push
popf
xor
jbe
mov
stos
pop
push
call
or
pop
adc
fidivrl
or
mov
rcll
cs
lods
movl
mov
addr16
add
mov
push
lods
push
ret
lahf
sbbl
mov
fmull
shl
aaa
or
jo
jl
adc
xchg
sbb
pop
lahf
adc
shlb
sahf
or
test
push
mov
test
or
push
sbb
pop
dec
movsb
sbb
push
mov
enter
jmp
and
dec
mov
push
loopne
daa
lods
lods
daa
mov
xor
mov
mov
xchg
cmp
imul
cwtl
cmp
test
sbb
mov
arpl
sub
or
pcmpeqw
dec
xchg
dec
xor
adc
in
es
cmp
cmp
lret
push
ficompl
bswap
and
add
and
std
mov
dec
mov
xchg
loopne
rolb
stos
nop
adc
inc
and
dec
mov
cmp
cmp
and
and
sahf
movsl
adc
pop
jbe
mov
dec
stos
jmp
mov
rclb
push
enter
mov
push
fdivs
and
push
pop
add
ljmp
std
mov
push
rcrb
adc
mov
jb
rorb
mov
inc
call
dec
push
pop
sub
xchg
js
fdivrs
dec
jecxz
lods
dec
mov
jmp
data16
or
insl
sbb
enter
cmp
xor
sub
test
adc
int
mov
hlt
imul
ja
arpl
cli
cs
divl
pop
and
cs
icebp
and
push
test
insb
aad
aam
das
cmpsl
sub
les
ljmp
sahf
pop
pop
ds
add
adc
test
cmp
mov
pop
cmp
or
sbb
push
mov
clc
out
test
push
call
test
cmp
xlat
lea
and
cltd
jl
outsl
sti
and
and
add
in
imul
andl
arpl
int3
lods
test
mov
inc
sub
xchg
movsl
clc
inc
fwait
pop
xor
repz
jl
jle
xor
mov
rclb
ljmp
gs
shlb
push
push
scas
in
jecxz
xlat
mov
jbe
cltd
popa
repz
xchg
or
je
pop
fildll
scas
test
loope
clc
xorl
mov
push
or
in
jo
pusha
lcall
data16
rcr
pop
test
mov
insb
mov
lahf
cmp
xor
popf
shrb
divss
sbb
mul
xor
outsb
push
out
sbb
sub
jmp
xor
push
xchg
pop
shl
mov
xchg
mov
adc
adcl
out
push
pop
adc
and
js
pop
stc
pusha
add
outsb
or
int
je
push
xor
pushf
cmp
popf
popf
add
mov
ficoms
add
gs
enter
je
mov
out
or
sbb
push
jo
mov
pop
mov
in
cmp
leave
sub
mov
pop
aas
mov
or
scas
cmpsw
sub
adc
mov
inc
out
pop
push
push
mov
cwtl
xlat
jp
cmp
data16
push
call
lret
fisubrs
jmp
pop
inc
xchg
ds
int
adc
enter
aaa
aad
pop
int
das
pusha
pop
inc
pop
xchg
cmp
push
or
xor
cmp
inc
sbb
dec
int
in
inc
call
adc
clc
adc
jns
mov
outsl
adc
push
sub
es
fildl
inc
xchg
cmp
push
push
adc
cmpsl
dec
mov
sbb
lods
xor
push
and
fnstsw
sbb
add
mov
jo
pop
dec
push
mov
jp
cltd
sub
adc
mov
pop
out
movsl
mov
xorl
jo
in
jge
cltd
rcll
mov
js
sti
aas
mulb
pop
divb
fsubs
addr16
jns
div
idiv
mov
lcall
mov
insb
cltd
jo
lods
sub
lds
cmc
xchg
jns
push
and
and
xchg
daa
push
xor
out
add
aas
outsb
test
cmp
movsl
das
inc
mov
xchg
pop
idiv
in
imul
arpl
data16
jecxz
in
sti
jg
and
push
dec
adc
aaa
paddsb
pusha
ret
jecxz
mov
xor
inc
movsb
fnsave
es
fnstcw
into
addr16
aam
sahf
lahf
push
jne
loop
jl
cmp
jp
je
out
shrb
inc
mov
mov
cmp
mov
xor
xor
mov
add
fbstp
je
outsl
or
filds
dec
mov
cmp
dec
add
push
mov
jecxz
sub
push
push
inc
sub
push
push
in
pop
xor
mov
test
cli
inc
jl
dec
pop
out
dec
ffree
icebp
adc
xchg
repz
dec
aas
jno
add
cmp
test
cmp
xchg
jmp
lahf
mov
mov
pop
test
fdivrs
js
and
mov
add
xor
fwait
mov
movl
pop
call
dec
cmp
sahf
lods
stos
jl
push
mov
cld
mov
pop
add
ljmp
stc
jg
aaa
clc
mov
stc
shl
inc
roll
push
sub
ss
adc
insb
cmp
or
xchg
push
jno
daa
xor
lock
adc
push
jno
fs
or
ljmp
dec
popf
orb
xor
mov
clc
scas
scas
jge
sub
ds
cs
fimull
sbb
iret
jae
pcmpeqd
movb
iret
push
in
loop
adc
pop
lods
push
popa
fs
and
mov
outsb
jo
insl
pop
decb
sub
out
cmpsb
push
scas
xchg
lahf
jne
dec
push
xchg
inc
cmp
cmp
sub
or
mov
pushf
push
movq
xchg
jl
popf
pop
sub
mov
ret
xchg
arpl
popa
das
hlt
fs
inc
jns
imul
insb
jno
das
xor
adc
or
mov
jge
xchg
aam
mov
inc
mov
dec
ret
push
loopne
push
data16
jne
mov
sub
jl
inc
lret
mov
xor
fsts
jb
push
pop
lods
jle
xor
in
popf
and
sub
cmp
and
cwtl
inc
test
mov
push
pop
inc
call
pop
xchg
mov
mov
pop
add
ljmp
fmuls
cmp
imul
and
adc
imul
mov
xor
fisttpl
out
sub
sub
std
insb
cmpsb
push
imull
and
or
and
xlat
bound
or
jge
xor
sahf
cmpsb
negl
ljmp
leave
fs
mov
in
test
jge
and
xlat
shlb
stos
insb
shll
dec
sbb
test
fs
ret
push
out
sub
jle
popa
shlb
or
stos
xchg
cmpb
nop
popl
mov
lods
shrl
cmpsl
fbld
push
fldl
push
push
jmp
mov
pop
fucomi
add
add
sub
sub
lcall
int3
dec
lret
xchg
fwait
in
sub
stos
xor
pop
jecxz
mov
scas
cld
cmpsl
nop
push
xchg
out
jns
imul
enter
inc
cvtpi2ps
push
mov
jae
adc
sub
mov
gs
sub
popf
int3
xchg
mov
adc
aas
cmpsl
and
mov
xchg
inc
inc
pop
inc
fucom
or
sub
jo
outsb
scas
popf
jnp
adc
pop
enter
mov
imul
notl
dec
jle
lcall
mov
ror
jmp
mov
jno
pop
jecxz
adcb
cld
push
and
pop
fldt
lea
scas
movsl
lret
xor
push
daa
outsb
and
push
jo
sahf
fld
xchg
movsb
and
test
gs
sbb
popa
pop
mulb
pop
jbe
dec
ret
xchg
aaa
or
add
cmp
mov
pop
cmp
or
cmp
ficoml
das
aaa
je
mov
jl
pushf
mov
out
add
or
xchg
jp
cmp
push
out
ja
repnz
jg
in
pop
mov
pop
cli
push
mov
pop
push
push
outsl
add
mov
mov
push
cmpsb
inc
ja
imul
les
add
mov
nop
pop
push
pop
xorl
shlb
lahf
mov
dec
sahf
ja
inc
xchg
and
inc
mov
ret
insb
std
mov
inc
int3
in
xor
adc
loope
adc
out
push
inc
mov
pop
jae
ret
out
inc
cmp
loop
rcr
sbb
mov
mov
push
mov
push
call
or
into
gs
jl
scas
sarb
out
inc
std
inc
mov
dec
sbb
xchg
xor
push
inc
das
add
outsb
add
pusha
mov
xor
stos
xor
mov
mov
mov
lahf
rcr
xchg
or
mov
sub
or
les
pop
lcall
out
jle
jp
scas
ljmp
xchg
rclb
ljmp
xchg
cld
sarl
scas
push
pop
fdivrl
fsub
or
out
outsl
mov
sbb
xlat
lea
xlat
pop
pusha
xchg
adc
shll
testb
fists
lcall
hlt
fistpll
aas
or
push
scas
movsb
in
cmp
add
xor
insl
movsb
or
add
test
cmp
sbb
dec
jg
loope
int3
test
dec
xor
cmpsl
scas
push
dec
adc
mov
xchg
mov
dec
rcl
cli
mov
inc
testb
pop
and
into
fmull
push
or
pop
sub
aad
push
loop
xor
pop
jb
jmp
push
sub
xor
cltd
add
in
pop
and
hlt
lods
dec
in
je
push
xchg
mov
movsl
push
xchg
bound
sub
stos
push
mov
js
push
dec
xor
les
sbb
pop
sahf
jp
mov
icebp
leave
xchg
or
rcrb
mov
leave
push
jge
filds
cmp
repnz
push
lret
orb
cld
sbb
xor
mov
or
or
mov
es
adc
std
repz
mov
jl
sbb
out
xor
mov
push
outsl
pextrw
sub
push
repz
jns
movl
jae
fildll
inc
or
pop
test
sbb
mov
icebp
and
jno
dec
sub
stc
add
or
lcall
aam
jg
adc
push
call
loope
js
lret
pop
inc
mov
lret
pop
in
aas
icebp
addb
inc
es
addr16
div
mov
dec
adc
in
jne
mov
iret
and
xchg
sti
xchg
hlt
jmp
inc
loope
cwtl
les
and
bound
aam
mov
sub
mov
lahf
sbb
aaa
pushf
mov
mov
pusha
stos
xor
or
fwait
cmovb
fs
add
add
sbb
pop
test
or
sbbb
daa
mov
test
add
mov
lahf
je
ja
xchg
xorl
out
inc
mov
shr
jle
loope
inc
mov
bound
aas
ss
or
mov
jbe
sbb
dec
adc
aaa
sbb
mov
sub
jb
jle
add
pop
outsb
sarl
dec
mov
mov
jle
out
mov
cwtl
mov
jb
div
cmp
in
sahf
loop
jnp
cli
sub
orl
push
mov
test
sbb
jecxz
test
inc
sbb
adc
movsl
ljmp
xor
mov
mov
insb
clc
xor
in
xchg
cld
fs
lea
push
fnstenv
cmp
push
daa
mov
push
adc
pop
icebp
mov
rorb
addr16
mov
jl
insl
aaa
pop
loop
cmp
ja
popf
cltd
insl
cmp
sub
fists
xor
add
sbb
jge
push
mov
mov
jg
pop
bound
addb
pop
sub
aas
sub
inc
jo
mov
mov
add
clc
test
jbe
mov
pop
mov
popa
mov
sarb
inc
jns
and
faddl
iret
dec
xchg
mov
push
gs
sbb
xchg
xchg
mov
mov
adc
aam
outsl
test
sub
add
lfence
pop
dec
es
cmp
pop
and
xchg
fwait
daa
lea
xchg
jo
jmp
mov
inc
lea
call
clc
sbb
mov
jno
dec
push
mov
add
cs
xor
add
add
or
repnz
in
lahf
add
dec
les
stc
pop
sub
inc
lea
loopne
lds
mov
iret
mov
pop
push
or
arpl
pop
jne
mov
sbb
clc
xor
fs
test
adc
push
movsl
int
fcmovu
outsl
pop
ss
push
sbb
jmp
loope
dec
std
test
rcll
add
ja
pop
mov
int
cltd
les
lahf
mov
or
pop
sub
emms
lahf
stos
leave
call
lahf
inc
dec
sbb
pop
cmp
dec
test
out
insb
fisubrs
enter
xor
mov
addr16
pop
push
push
adc
mov
fwait
int3
or
call
repnz
xchg
mov
jmp
cltd
jo
nop
fdivs
xchg
push
out
mov
push
add
inc
jno
les
mov
xor
test
push
mov
shr
fidivrl
push
cmpsl
out
and
out
shrb
xlat
je
jle
popf
testb
mov
shlb
mov
pop
pop
pcmpgtd
iret
js
jnp
sbb
mov
jbe
rorl
dec
xchg
cmpsb
mov
data16
cmp
mov
outsb
loopne
mov
in
lock
add
mov
test
pop
mov
in
xchg
add
cmp
cmp
cli
lods
sub
xchg
aad
add
jg
sub
and
mov
insl
push
icebp
or
pusha
jns
mov
mov
cltd
cmp
jg
inc
movsb
ret
ja
imul
orl
jl
insb
lahf
mov
subb
pop
jecxz
jmp
mov
insl
in
mov
ret
out
arpl
cltd
bound
mov
and
adc
and
xchg
jns
mov
sub
add
out
inc
bound
sub
loope
fidivrs
mov
add
cmp
and
xchg
sbb
jecxz
dec
test
or
pop
cltd
mov
aas
lret
inc
mov
inc
jmp
cmp
clc
addb
jns
inc
lret
daa
adc
dec
cmp
cmp
xor
iret
enter
lea
sub
xchg
or
add
inc
dec
mov
sbb
jns
lods
cmc
pop
pop
lock
push
imul
je
adc
bound
mov
popa
cmp
push
pop
mov
in
sbb
xchg
cmp
imul
mov
xchg
jo
fistps
sbb
or
aad
in
das
ret
cwtl
push
je
inc
mov
aam
jae
ficoms
xchg
sub
adc
mov
mov
and
push
sub
and
stos
xchg
mov
hlt
es
xchg
dec
aad
jmp
fnstsw
mov
popf
sahf
adc
shlb
cmp
adc
mov
scas
mov
cltd
aas
sbb
fisubrl
xor
inc
sbb
push
cltd
pop
xor
dec
xor
xor
in
aas
xchg
xor
sub
push
or
mov
adc
cmc
jmp
outsb
data16
cmp
ds
icebp
pop
push
test
movsb
inc
cmp
jg
add
sub
sub
pop
shr
fwait
push
mov
xchg
ljmp
mov
adc
mov
scas
movsl
mov
dec
push
adcb
cwtl
jl
and
call
popa
addr16
outsb
lods
or
jnp
repnz
pop
xchg
ljmp
outsl
pop
out
rep
mov
mov
jp
sti
imul
insl
dec
xchg
sub
xor
mov
inc
stos
insb
rorb
cmp
pop
add
and
leave
xor
in
out
ss
push
lock
iret
mov
or
jno
pop
insb
insb
imul
outsl
and
stos
ss
incl
or
mov
insl
cmp
push
or
xchg
cmc
shll
cmp
pop
data16
mov
cmp
idivl
imul
std
pop
sbb
std
ds
jnp
cld
pop
mov
push
test
add
xchg
lcall
mov
xchg
push
lea
mov
cmp
sbb
pop
dec
nop
xlat
mov
cli
inc
inc
sub
sti
dec
test
jmp
out
std
jg
popa
fstpl
into
sahf
insb
aas
int
in
call
fmuls
pop
out
jg
loopne
das
sub
cwtl
adc
ret
add
and
cmpsb
fldl2e
mov
int
arpl
int
daa
add
add
adc
push
bound
rcl
ljmp
cltd
jae
das
cli
in
add
mov
inc
mov
das
sti
scas
daa
pop
adc
std
rol
addr16
ss
push
dec
push
sahf
mov
js
pop
push
push
cli
sub
and
xchg
mov
adc
mov
loope
pop
cmp
cld
mov
mov
pop
mov
mov
jg
adc
outsl
and
pop
aaa
jecxz
cltd
jo
fsubrl
inc
mov
add
mov
das
xor
sub
xor
push
repz
xchg
push
rcl
fisubl
xchg
cmp
pop
push
cs
or
mov
ds
push
cmpsl
cmp
push
dec
jmp
fadds
mov
lods
push
dec
xchg
mov
adc
cltd
out
push
shr
ljmp
mov
inc
mov
outsb
mov
mov
test
scas
popf
adc
adc
fldenv
or
je
xchg
cwtl
and
adc
fildll
mov
cld
dec
mov
pop
xchg
push
scas
divb
dec
lds
pop
add
out
mov
lret
xchg
into
test
sbb
mov
add
pop
sbb
std
iret
das
and
add
cmp
cli
sarb
popf
test
push
inc
pop
inc
dec
sbb
call
xlat
mov
nopl
imul
pop
in
divl
sbb
pop
imul
scas
scas
icebp
push
mov
inc
popf
in
scas
mov
xchg
and
sub
aaa
cli
out
mov
mov
and
pop
push
inc
scas
fadd
push
pop
rcrl
push
dec
or
push
cld
jne
lret
ret
mov
imul
fnstcw
cmp
mov
ret
xchg
fadds
scas
ss
sti
and
repnz
lds
loope
xor
xor
pop
and
aas
shl
les
scas
xlat
gs
fisubrs
push
dec
gs
xchg
loope
mov
pop
jmp
fiadds
mov
mov
push
clc
fwait
dec
add
out
cmp
or
mov
gs
movsl
and
cli
andl
mov
test
divl
rcrl
xadd
xlat
mov
mov
out
pop
mov
pop
push
or
orl
sub
mov
arpl
mov
xchg
int3
lds
mov
adc
lea
aad
repz
add
cli
pop
int3
test
sti
sub
mov
xchg
or
arpl
je
jae
out
jne
ja
cmpsb
pop
clc
add
and
push
movsl
and
adc
adc
scas
xor
xchg
scas
fdivrs
sahf
xor
jecxz
int
pop
dec
dec
cmc
pop
insl
out
cwtl
mov
jb
inc
xlat
xlat
hlt
cmp
pop
jne
pop
lods
loop
lds
js
adc
sbb
lahf
mov
adc
or
jmp
mov
clc
mov
decl
xlat
nopl
jb
mov
imul
addr16
add
xchg
pop
dec
loop
pop
pop
adc
add
or
push
scas
popl
int3
sub
inc
lds
sub
repnz
data16
sbb
repnz
outsl
stos
mov
cltd
cmp
je
or
jmp
pop
dec
bound
scas
clc
or
mull
xor
mov
movsl
pop
sahf
lcall
mov
aam
in
mov
sarl
mov
inc
sub
mov
mov
jo
mov
push
cwtl
cmpsl
rdpmc
scas
hlt
imull
lret
cmp
mov
fmull
cld
adc
push
movsl
adc
arpl
jno
cmpsl
mov
adc
hlt
pop
mov
cmp
call
jge
out
push
mov
mov
dec
repz
cmp
pop
mov
xchg
mov
cltd
dec
inc
push
out
fmuls
int3
mov
inc
push
int
adc
movsb
imul
fildl
inc
jb
lods
fildl
loop
adc
es
push
lods
sbb
out
jnp
fwait
mov
fdivl
jl
jmp
gs
adc
cmp
out
repnz
mov
cmp
lea
jmp
pop
mov
imul
lods
call
rorb
mov
aaa
pop
movsl
imul
mov
lcall
fcomp
xchg
mov
xchg
push
pop
xor
sarl
scas
imul
or
je
dec
nop
fists
sbb
pusha
popf
mov
clc
mov
mov
sub
xor
ss
and
mov
dec
outsb
jmp
addr16
add
xchg
outsb
cs
movsb
inc
insb
xchg
movnti
jne
and
push
mov
dec
stc
pop
into
andl
jnp,pt
cmp
pushf
inc
ret
push
pop
rcrb
data16
or
outsb
sbb
gs
stos
test
pop
fistps
enter
cltd
or
jb
bound
aam
and
inc
or
ss
xchg
int
lret
sub
out
jbe
mov
inc
xor
mov
loope
out
es
test
xchg
hlt
fisubl
pusha
mov
imul
and
leave
jl
mov
ret
push
sub
pop
cltd
out
test
scas
push
stos
mov
xchg
mov
addb
xchg
test
sub
ds
das
xchg
pop
push
mov
dec
dec
sarb
lret
insl
or
mov
pop
scas
mov
lcall
sbb
sarb
xorl
insb
adc
mov
pop
inc
lahf
ret
pop
aas
xchg
ret
push
pop
cltd
outsb
inc
and
push
test
cmp
ljmp
pop
cmp
inc
and
loopne
or
push
imulb
fistl
add
ret
jge
inc
fs
or
je
jg
loope
or
in
js
adc
nop
jne
cmp
mov
lods
cs
or
scas
or
jne
clc
mov
mov
push
or
push
push
xchg
ds
cmp
push
jnp
aas
in
mov
orl
out
and
xor
push
xor
scas
add
insl
pusha
inc
enter
jg
adc
add
jo
shll
repz
inc
cmpsl
movsb
jb
fdivrp
jne
mov
andb
fnstcw
loop
sahf
xchg
aaa
mov
cmpsl
addl
mov
ds
mov
mov
jmp
shll
mov
push
xchg
mov
dec
aam
cmpl
jae
mov
or
fs
test
cmp
sbb
filds
cmp
shl
leave
insl
jg
sub
fstpt
adc
push
sbb
flds
ds
repz
lcall
out
sahf
jo
ja
pop
out
dec
rcrl
mov
pop
mov
pop
jbe
stos
int3
out
test
ja
or
fwait
es
lcall
mov
pop
pop
xlat
jo
mov
das
movsl
sbb
stos
or
lret
adc
je
cmc
jecxz
cld
cmpsl
inc
test
fadds
leave
mov
xchg
in
or
add
xlat
push
inc
jns
enter
push
jmpw
loopne
roll
xor
ljmp
ja
shrb
or
call
add
dec
lods
add
into
out
mov
sbb
pop
push
xchg
xchg
inc
ds
fcomip
imulb
xchg
dec
scas
mov
xor
sub
cmpsb
cmpsl
push
xor
mov
arpl
push
ficomps
lods
cmc
fldt
jae
clc
imul
incl
enter
dec
jp
sub
arpl
lret
jecxz
dec
insl
test
inc
jnp
sar
mov
cmp
cwtl
insb
lock
lods
test
add
fstl
xchg
clc
adc
les
ret
mov
repz
push
scas
gs
or
mov
add
and
cli
inc
mov
roll
push
dec
leave
and
pop
sub
lahf
and
icebp
aam
inc
sub
pop
jnp
ja
xor
mov
mov
sub
inc
loope
aad
je
mov
jnp
sub
scas
pop
iret
mov
inc
mov
sub
clc
iret
mov
addr16
add
int3
sub
sbb
int
int3
js
add
cmpsb
pusha
shlb
xchg
clc
xchg
leave
cwtl
mov
push
fwait
inc
sti
dec
or
pop
jmp
test
lcall
les
cmp
jge
enter
pop
inc
sub
or
test
adc
stos
inc
or
push
adc
sub
movsl
fidivrl
dec
adc
push
adc
icebp
push
inc
lds
push
jne
daa
mov
lea
idivb
push
nop
loopne
scas
xor
mov
cmp
xchg
test
outsl
lcall
test
loope
mov
inc
cmp
test
jg
cmc
jmp
jp
mov
lret
adc
push
inc
cmpsb
adc
cmp
xor
frstor
movsl
push
or
mov
pop
and
out
imul
mov
push
mov
mov
cltd
dec
push
pushf
enter
jl
mov
lahf
sahf
sbb
test
pop
je
mov
pop
mov
mov
add
inc
xor
sahf
mov
movsl
mov
and
nop
into
sub
aaa
outsb
in
push
jb
xchg
rcrb
xor
push
scas
ljmp
xchg
repz
dec
roll
sahf
cmp
movsl
std
dec
es
mov
cmp
stos
sarb
addl
sbbb
shlb
xlat
mov
or
pop
push
nop
into
cmc
pushf
mov
out
hlt
push
xor
mov
sti
add
scas
jg
inc
adc
xchg
cmp
mov
inc
int
xchg
pop
push
inc
xchg
push
push
inc
jmp
push
divl
fisttpl
lahf
jp
sbb
mov
jb
cmp
cld
call
rorb
insb
loope
scas
mov
dec
stos
jb
prefetcht1
sub
sbb
push
cmp
adc
or
jecxz
data16
xor
in
int3
inc
lods
bound
dec
es
decb
pop
mov
test
std
idiv
es
lcall
cmp
mov
mov
adc
or
jg
aaa
fsubrp
loop
sbb
add
out
shr
inc
das
nop
and
int
push
pop
lea
mov
inc
mov
sub
dec
inc
push
ja
and
test
fnstcw
cmp
inc
mov
pop
adc
push
addr16
test
adc
int3
out
xor
repz
lock
add
and
in
or
xor
in
cmp
xchg
mov
add
inc
loopne
sub
out
imul
lds
test
push
arpl
outsl
aaa
aam
gs
notl
xorb
in
frstor
xchg
dec
pop
and
sbb
mov
add
enter
adc
lods
xlat
jbe
xor
dec
mov
fs
adc
dec
in
add
pop
sbb
fwait
nop
xor
jo
leave
test
mov
out
xchg
pop
out
cmc
cmp
xchg
cli
xchg
shrl
dec
out
out
add
cmpsl
fimull
and
cmp
dec
mov
jge
sub
inc
jnp
in
out
sub
bound
ljmp
loope
lret
leave
je
inc
mov
sar
sbb
push
add
ja
add
cmpsl
nop
std
or
push
ret
inc
add
cmp
sub
sub
lods
ja
cmp
and
inc
and
xlat
cmp
enter
scas
cli
add
js
daa
xchg
or
xchg
mov
xlat
cmp
add
mov
jno
dec
sbb
inc
aam
into
mov
out
add
imul
push
adc
add
or
adc
mov
popa
cmp
mov
mov
add
xchg
mov
test
lock
fwait
sarl
cmp
mov
or
or
mov
fmul
pop
adc
out
xchg
push
sbb
adc
push
fcmovb
mov
imul
jmp
in
out
xor
or
or
addr16
lret
cmp
mov
test
adc
cmp
dec
xchg
aas
push
add
pop
outsb
push
push
add
sti
mov
dec
fs
and
leave
sub
push
adc
and
fcomps
scas
shlb
jp
jge
out
repz
stos
jns
sub
jmp
inc
in
sbb
and
adc
or
xchg
jae
roll
cmp
int
fcmove
pop
mov
sub
mov
or
cmpsb
mov
jle
bound
call
inc
xor
inc
mov
dec
pop
xor
popa
jno
fcompl
lret
int
mov
xor
or
aaa
mov
mov
sahf
push
inc
rcll
adc
testb
imul
jg
in
mov
insl
out
xchg
mov
lods
push
fcompl
sub
jae
add
pop
jp
ja
icebp
std
sub
movsl
les
jb
sub
adc
fnstsw
add
lods
call
lock
icebp
push
mov
sub
jo
sub
push
pop
and
imul
pop
lods
cmpsl
ret
inc
hlt
mov
sub
into
rorb
lds
xchg
mov
push
enter
inc
inc
shr
sub
subb
aas
ds
scas
inc
sub
or
scas
push
fbld
in
jl
mov
pop
mov
jle
jne
test
jmp
int
pop
xchg
insb
jae
mov
sarl
push
das
mov
lock
imul
test
or
mov
jo
adc
inc
test
dec
sarb
mov
mov
mov
mov
test
add
in
mov
pop
push
out
mov
mov
add
push
inc
jnp
cs
iret
scas
inc
pop
push
lea
add
out
adc
mov
mov
sbb
ljmp
mull
sarl
bound
push
and
movntq
jae
pushf
xchg
out
fidivs
pop
dec
mov
cmpl
or
fs
mov
incl
fldlg2
orl
nop
mov
pop
mov
outsl
xchg
fistl
mov
lds
xchg
sub
jo
sarl
shll
or
jmp
adc
push
dec
sbb
jae
es
mov
outsl
repnz
jbe
repnz
lods
add
into
or
pop
out
aad
cmp
dec
outsl
outsb
in
mov
sbb
cwtl
les
lds
shld
fwait
mov
addl
xor
xchg
rcll
in
pop
aam
dec
and
inc
jp
fsubl
mov
lock
jmp
test
mov
ljmp
ljmp
shlb
in
cs
repnz
xor
sub
sub
fcmovne
out
jp
push
sbb
repz
inc
sbb
mov
jnp
addb
inc
or
test
fstl
adc
cli
fcmove
cmp
movsb
adc
div
and
lds
xor
cli
cmc
fwait
xchg
mov
in
shll
ds
daa
arpl
rclb
pushl
and
xchg
outsl
stos
add
movsl
in
and
mov
jg
shll
arpl
je
cs
pop
lods
gs
cmp
inc
mov
into
pop
sub
pop
jbe
push
dec
add
int
mulb
divb
inc
movsb
push
lcall
out
gs
and
insb
or
in
push
imul
subl
clc
inc
icebp
scas
xchg
xchg
cltd
hlt
xchg
repnz
pop
call
pushf
push
sub
pop
xchg
cs
fsts
jnp
add
scas
call
loop
pop
out
and
pop
jecxz
rolb
jne
std
icebp
subb
lret
arpl
ret
pop
fsubrl
inc
or
mov
ds
loope
retw
jmp
sub
je
aam
test
rorb
xchg
test
outsb
into
inc
sbb
add
ss
sbb
xor
adc
stc
rcrl
and
pop
cmp
movswl
das
push
lcall
imul
mov
xor
and
je
inc
or
mov
stos
or
mov
repz
add
addr16
into
push
inc
aas
ret
nop
mov
jge
ljmp
pop
sbb
xchg
lcall
mov
nop
mov
mov
orl
mov
shrb
ret
jl
cmpsb
sub
mov
pushf
ja
lret
lods
push
adc
testl
iret
aaa
dec
jns
dec
mov
lret
mov
add
pop
mov
pushl
sti
dec
insl
clc
fnstenv
dec
int3
jns
dec
nop
cmp
incb
enter
les
mov
ss
shrb
push
xchg
test
xchg
pusha
les
in
fs
js
cltd
test
xchg
fisttpl
ss
scas
inc
xchg
sbb
mov
jl
or
adc
xchg
mov
xchg
inc
sbb
clc
inc
add
mov
mov
xlat
xchg
mov
lods
add
xchg
mov
jns
xor
data16
cli
jl
in
stos
notl
pop
scas
popa
cmp
jg
and
push
aaa
movsb
stc
iret
sub
test
xor
sbb
cli
das
push
push
inc
movsl
adc
cmp
dec
add
cmp
out
aad
push
aam
pushf
outsb
xchg
jno
fidivrl
pop
ss
or
rorl
fnstcw
mov
pop
pusha
push
clc
and
aad
mov
int3
mov
sub
ljmp
pcmpgtw
test
jp
mov
je
pop
and
ficomps
mov
push
test
int3
int
out
out
test
pop
shlb
xchg
in
cltd
cli
cwtl
jnp
jle
pop
cmp
insl
in
mov
jmp
pop
mov
jge
jle
shlb
popa
nop
in
out
mov
movsb
lcall
add
out
mov
jp
shll
sbb
xchg
inc
mov
inc
push
jp
call
and
in
jae
and
mov
or
in
cltd
int3
fsubrs
inc
inc
cs
test
mov
sub
push
scas
lods
or
loopne
push
xchg
cmovo
in
pop
inc
or
sub
pop
pop
xchg
test
and
pop
mov
sbb
sbb
cmp
mov
xor
mov
push
jae
xchg
adc
ja
jecxz
ds
arpl
lret
leave
les
add
sbb
jg
mov
and
in
mov
out
outsl
in
sahf
scas
or
and
in
mov
jge
push
xor
jnp
jg
mov
mov
or
mov
inc
mov
mov
and
shlb
add
or
aas
mov
std
cmp
loopne
cmp
out
insb
bound
mov
dec
ja
ja
sub
mov
push
sar
aaa
leave
dec
ret
insl
ja
adc
jne
xchg
and
andl
les
ret
aam
dec
pop
xor
lahf
sub
sub
enter
mov
or
and
iret
mov
push
gs
sub
stos
inc
gs
cmp
bound
mov
adc
jnp
sahf
insl
mov
xchg
jo
lea
outsl
stos
add
fidivrs
sbb
or
mov
or
mov
es
in
add
lahf
sbb
imul
push
test
test
dec
adc
jle
mov
pop
test
leave
inc
mov
or
jo
adc
add
add
std
inc
ja
mov
xor
orl
push
and
idivb
xor
stos
xor
push
leave
mov
incl
bound
js
je
mov
jae
mov
sub
or
lret
fdivrs
push
repz
mov
cld
loopne
cld
mov
add
cs
js
push
mov
scas
mov
push
lret
js
or
mov
jnp
xchg
jg
sub
jmp
sti
fdivs
mov
int
arpl
jb
mov
push
push
mov
and
jle
or
lea
sbb
dec
jbe
jae
iret
cmpsl
lcall
mov
mov
in
mov
sarb
push
insl
test
dec
loop
push
mov
rclb
test
test
int
lods
mov
mov
divl
movsl
andl
jge
mov
adc
ljmp
in
shll
mov
fsubs
lock
sub
addr16
aad
pop
add
push
ljmp
out
xor
clc
xchg
cmp
test
lock
inc
pop
push
sbbb
cmp
mov
and
sbb
push
andb
mov
pop
pop
icebp
int3
push
mov
int
cld
sub
repz
mov
in
pop
ret
inc
dec
fisubs
cmc
pop
data16
mov
dec
int
push
xchg
les
and
xchg
push
cmpsl
loop
xchg
mov
sub
les
dec
mov
jle
test
adc
dec
or
ret
push
jbe
addb
jl
repnz
mov
arpl
mov
pusha
ja
or
das
xor
pop
push
imul
push
shrb
incl
ss
inc
popa
loope
xor
adc
aam
test
imul
js
mov
mov
adc
sti
push
je
mov
and
push
cwtl
push
xchg
cld
add
fistpll
push
js
xor
jmp
cmpsb
dec
out
inc
outsl
lret
sub
sbb
adc
xchg
push
es
pop
stc
inc
test
in
xor
cmp
sbb
sub
cmp
aaa
jle
push
sbb
jno
in
pop
mov
inc
or
popf
mov
cmp
sbb
xchg
jecxz
push
lock
add
jne
leave
push
out
adc
stc
jp
mov
pop
cmp
xor
fisubl
jl
popf
mov
or
cmpsl
inc
ja
sahf
push
out
test
arpl
pop
das
add
arpl
daa
data16
cmp
mov
push
or
mov
add
push
mov
cli
mov
lret
adc
cld
inc
jle
add
cltd
pop
mov
dec
inc
mov
xor
xchg
out
repnz
dec
inc
out
mov
movsl
enter
repz
sahf
jnp
clc
cmp
inc
leave
out
push
repnz
gs
jmp
mov
sub
fistpl
insb
lret
testb
aad
call
cld
ficompl
lods
adc
fisttpl
out
adc
fsubrs
data16
aam
push
jg
and
movsl
jmp
loop
popf
add
jns
les
xchg
mov
push
roll
pushf
adc
call
scas
sbb
or
mov
imul
jmp
out
repnz
xchg
cmpsl
add
lea
les
iret
enter
pop
sub
js
adc
sbb
loope
add
jne
push
out
nop
sahf
addr16
jge
xchg
mov
and
adc
popa
push
in
ficoml
dec
sbb
out
inc
mov
outsb
push
or
stos
xor
mov
jge
dec
je
outsl
mov
mov
scas
ss
adc
cmp
fstl
jg
xchg
inc
jecxz
xchg
push
gs
and
test
pop
stc
out
adc
mov
icebp
jge
popf
ds
mov
das
cmpsl
daa
jae
jno
or
loope
or
test
push
imulb
test
cmp
xchg
xor
mov
push
push
shl
aaa
mov
lock
outsb
pop
mov
pop
aas
test
stos
push
enter
and
or
int3
mov
xchg
xchg
mov
mov
test
gs
xor
in
xor
lret
jae
and
xor
cmpsl
adc
pushf
mov
and
adc
les
jmp
out
imul
mov
movsb
mov
jle
xchg
sbb
mov
xchg
nop
adc
gs
cmc
enter
popa
mov
call
mov
cli
and
icebp
cmp
jmp
push
cmpsl
pop
int3
cmp
or
in
mov
pop
in
int3
mov
lahf
pop
je
fnsave
add
fmuls
xchg
inc
xchg
enterw
jp
cwtl
mov
inc
push
lahf
cmp
and
cmp
into
add
mov
hlt
or
adc
stos
xchg
or
or
imul
outsb
test
nop
xor
xchg
cmpsb
mov
mov
enter
push
outsl
mov
push
subb
adc
imul
inc
sbb
in
out
out
mov
jmp
inc
dec
xor
loope
inc
in
daa
and
dec
dec
dec
push
pop
jp
stc
jo
nop
mov
mov
and
xlat
cmpsb
pop
cmp
dec
das
test
xchg
sarl
das
mov
ljmp
into
pop
lea
ret
jo
dec
mov
cltd
dec
fisubrs
mov
sbb
scas
xchg
or
jp
aas
mov
or
pop
loop
jno
dec
cmpsl
dec
cmp
push
int
xlat
dec
cmpsl
or
fdivs
iret
mov
cltd
jne
ss
inc
notb
and
dec
cmpsb
cmp
mov
mov
lods
cmp
jnp
faddl
add
kandw
cld
fistl
sbb
mov
mov
adc
imul
push
lods
push
dec
in
rclb
ror
push
fldt
mov
adcb
nop
and
sbb
sbb
mov
das
mov
cmp
dec
push
jo
mov
je
jmp
in
sub
xchg
dec
sbb
mov
cmp
pop
dec
rorl
lods
pop
mov
ds
xchg
push
ficoms
pop
call
insb
mov
mov
movsl
movsb
mov
in
cmpsb
ficoms
jbe
sbb
xor
adc
jl
xacquire
cmp
movsl
xchg
fcoms
fisttpl
sub
push
out
adc
dec
xchg
mov
cwtl
pop
xchg
cmc
ffreep
and
adc
popf
adc
sahf
lcall
dec
shlb
mulb
outsl
jns
xchg
rclb
inc
fdivl
dec
mov
roll
pop
inc
push
fs
sti
sbb
push
int
in
negl
mov
xor
repz
cmp
pop
adc
sub
fs
add
xor
lahf
daa
icebp
fcmovb
xchg
ss
enter
pop
jne
cld
cmp
mov
jp
rcl
dec
jmp
mov
push
sbb
xlat
cltd
pop
cs
das
pop
clc
jns
pop
call
mov
inc
add
xor
push
and
ficoms
je
and
adc
fmull
adc
mov
cmp
jle
imul
xchg
xor
inc
fisubl
mov
stos
ffreep
sub
dec
and
jmp
cmp
bound
xor
movsb
mov
test
jg
in
jecxz
xacquire
rorl
mov
in
v4fnmaddss
loop
jbe
out
inc
lods
push
mov
push
rclb
clc
xchg
or
pop
das
loopne
cmp
dec
push
inc
cld
lahf
repz
lds
inc
sbb
out
adc
xor
cmpsl
popf
mov
dec
inc
pop
sub
push
mov
mov
mov
push
sbb
popf
or
xchg
pop
and
fstpt
rcr
push
addr16
inc
and
add
inc
ret
jne
or
icebp
jecxz
mov
jecxz
lods
shrb
sub
add
cmp
dec
mov
mov
das
fsts
mov
or
das
enter
iret
pop
pop
jae
add
loope
jnp
jecxz
mov
rolb
pop
cmp
sub
cli
les
xor
mov
imul
hlt
cmp
jnp
in
lahf
xchg
addr16
sbb
fbstp
movsb
xor
sub
or
dec
fisttpll
cld
xor
pop
jmp
mov
test
sub
hlt
pop
mov
xor
jp
cmp
mov
mov
mov
dec
outsl
int
xor
push
add
jns
das
hlt
xor
pop
shrb
jp
sub
and
xchg
mov
push
fisubs
xor
jecxz
int
mov
imul
test
mov
inc
mov
in
add
lods
push
jnp
pusha
in
aam
cmp
inc
mull
shll
add
lds
ss
fdivp
pusha
dec
pop
mov
xchg
mov
fwait
xor
cmp
add
adc
add
add
add
outsb
sub
lret
lahf
pushf
push
xor
or
xchg
shl
clc
lahf
in
push
push
roll
adc
inc
xor
mov
pop
xchg
and
movsb
add
inc
xchg
cwtl
jne
and
mov
fldenv
mov
in
cmc
ds
xchg
push
or
push
cmp
and
outsb
jne
pop
jg
lods
nop
pop
sbb
insl
xor
mov
mov
mov
andb
dec
inc
aad
lret
ja
in
and
pop
sbb
xchg
sub
and
mov
and
push
loope,pn
mov
pop
sbb
mov
cltd
aas
mov
cmp
dec
fs
dec
jbe
je
cmp
sti
daa
add
lods
fsubs
jnp
jo
clc
dec
push
ficoml
es
ret
int
dec
aas
movb
fstl
les
cltd
out
xor
movsb
xor
rclb
shl
mov
mov
adc
leave
mov
fcomps
jb
add
cld
dec
xor
outsl
mov
int3
and
ds
push
int
int3
test
iret
xor
mov
out
jno
jle
shll
add
repz
cwtl
shrl
iret
filds
mov
fidivrs
repnz
push
mull
adc
jb
dec
xorl
popf
push
ja
cs
or
xchg
jbe
icebp
xchg
sbb
scas
imul
sbb
mov
pop
mov
in
test
dec
sbb
cld
push
pusha
sub
inc
sbb
ret
inc
cwtl
ret
dec
mov
push
icebp
pop
mov
inc
cwtl
sub
dec
inc
rcr
sbb
test
sbb
adc
imul
repz
and
adc
sti
testl
cmp
jle
sub
sbb
fnstsw
mov
pusha
lret
ret
inc
jmp
out
push
dec
sub
scas
pop
into
insb
outsb
xor
xor
xchg
or
jno
dec
sub
xor
pop
inc
subl
dec
mulb
test
aas
icebp
cmp
and
in
ja
or
pushf
mov
repz
push
add
sbb
lea
test
loopne
dec
cli
stos
dec
mov
push
je
lea
adc
pop
in
in
push
add
jne
adc
iret
std
lods
push
and
xor
cmp
loope
xor
add
rcrb
xor
push
mov
mov
ss
rcrl
dec
sbb
add
or
xor
dec
push
inc
nop
in
scas
fwait
stc
xor
inc
add
scas
popl
ss
gs
popa
aaa
fsubrl
out
inc
jmp
jg
push
mov
ljmp
leave
lahf
psrad
jae
inc
push
lcall
outsb
jo
hlt
adc
psraw
dec
es
fsincos
outsl
out
and
or
sbb
popf
push
mov
mov
xorl
dec
inc
jmp
cwtl
xor
mov
jge
fs
sti
test
daa
je
jecxz
xchg
rcrl
jg
mov
jp
xchg
dec
mov
xchg
sub
leave
imul
inc
shl
add
ficomps
add
sarb
out
mov
test
xlat
in
out
mov
pushf
orl
jbe
and
add
stc
mov
mov
fldcw
ret
mov
push
outsb
and
ss
imul
decl
adc
outsl
xchg
xchg
add
mov
jo
xchg
add
sub
rcrb
adc
mov
fxch
aaa
sub
dec
lods
xlat
lods
inc
sub
cmp
and
aaa
sbb
ret
xchg
cwtl
pop
inc
popf
into
lret
shlb
fidivrl
jne
xor
inc
arpl
pop
inc
cmp
out
sahf
outsl
fwait
cld
mov
adc
and
cltd
sarb
cmpsb
ja
pop
sbb
jns
cs
lods
xchg
xchg
jmp
scas
push
bound
loopne
stos
aad
pop
push
cmpsb
data16
scas
dec
push
xchg
rcrb
or
icebp
pop
pop
pop
inc
lahf
and
pop
cld
and
mov
lcall
inc
mov
jp
shlb
adc
aaa
pop
lret
mov
xor
jb
js
cs
fwait
adc
lret
dec
mov
scas
pop
ds
ds
ror
jo
sbb
xor
imul
cmc
mov
jle
lds
jle
mov
push
add
sbb
inc
adcl
mov
sahf
lods
js
cwtl
dec
int
mov
scas
lcall
in
notb
mov
clc
out
int
loop
pop
lods
sbb
mov
hlt
mov
mov
rcrb
and
push
pop
xchg
lock
test
sub
out
loopne
add
insl
push
hlt
data16
imul
outsl
cmp
push
inc
mov
je
jne
adc
or
xchg
xchg
adc
push
icebp
mov
loopne
ss
jmp
mov
jl
or
or
sub
dec
ds
mov
mov
cmpsl
adc
inc
mov
outsl
lret
loope
arpl
pop
daa
or
mov
adc
cmp
sahf
xchg
cmp
jmp
jle
mov
jp
mov
adc
mov
push
dec
mov
sub
adc
lret
testl
sub
jecxz
push
into
pushf
cs
sub
testb
xor
mov
xlat
cld
popf
mov
or
lds
lods
and
mov
out
mov
cld
std
stos
ret
push
push
jg
dec
push
lock
test
jg
pop
sbb
gs
xor
out
lret
push
add
rorl
sbb
dec
popa
xor
inc
jo
sti
mov
or
or
aad
out
push
mov
add
jge
lods
mov
xchg
sbb
mov
jns
jge
sub
insb
imul
mov
addr16
push
js
aad
lods
in
imul
mov
test
enter
call
imul
addr16
lods
movl
push
arpl
inc
jbe
jne
cltd
lea
cmp
outsb
lea
and
testl
pusha
xchg
fwait
leave
push
in
xor
imul
jns
jnp
xchg
adc
test
repz
sub
cmpb
xor
js
out
sbb
push
mov
cmp
ljmp
cli
add
jp
mov
cmpsb
mov
cli
loop
mov
or
sub
ja
sbbb
aaa
movb
sub
mov
pop
ss
or
jbe
pop
icebp
or
jecxz
push
add
pop
andl
lahf
ret
inc
mov
leave
divl
mov
popa
pusha
mov
mov
adc
das
mov
sub
stos
decl
lcall
sbb
aaa
lcall
notl
outsl
xchg
movsl
fwait
insb
jae
pop
adc
and
xchg
add
xchg
ret
add
adc
push
orl
sub
ror
call
jno
decl
sub
lods
jle
add
mov
pop
xchg
in
mov
sahf
test
sbb
pop
and
inc
jg
jae
mov
or
lcall
pushf
add
cmp
and
xchg
fcmovb
cmpsb
and
push
mov
call
pop
mov
into
mov
adc
iret
stos
mov
iret
xor
sub
pop
pop
push
xor
loop
adc
push
lcall
xchg
scas
or
mov
ja
lods
push
in
int3
out
cmp
jae
inc
out
cmpsb
push
pusha
cmp
call
dec
fisttpl
lcall
jle
xor
lods
push
sbb
jmp
xor
insl
cmp
jnp,pn
es
sbb
and
int
pusha
pop
add
xor
rcrb
mov
ficomps
ficoms
push
add
nop
insb
data16
xorb
pop
sub
shlb
add
jbe
ja
scas
cmpsb
xor
inc
fisubs
jno
lcall
std
sub
push
sub
xchg
les
je
mov
jno
insl
cmp
xchg
loopne
mov
jge
push
cwtl
cmp
add
enter
aad
jge
loop
mov
xchg
pushf
push
aaa
mov
es
and
jo
push
imul
jp
loopne
iret
jle
rcrb
mull
int3
dec
stos
sbb
jp
loopne
lcall
or
xchg
cli
ret
xchg
outsb
repnz
jbe
pop
mov
sahf
cmpsl
mov
mov
xor
fstps
xchg
mov
push
lcall
pop
in
fldl
popf
lahf
stc
push
loop
lret
rcrl
test
push
das
jmp
ljmp
sbb
xchg
stos
out
and
jb
aad
enter
xchg
cmpsl
fwait
sbb
iret
jae
lock
jb
mov
sahf
mov
aaa
push
addr16
xchg
sbb
das
or
test
leave
jecxz
mov
mov
cmp
test
cmp
pushf
leave
sbb
negb
and
pop
sub
pusha
sbb
add
outsb
rolb
addb
dec
adc
sbb
pop
cli
fdivl
std
frstor
int3
pop
lods
ss
ds
je
add
stos
mov
imul
icebp
imul
xor
adc
dec
push
jns
in
mov
mov
lret
mov
cmp
xor
sbb
mov
int
test
push
or
pop
out
psllq
inc
jae
fcoml
add
jg
lret
jge
mov
insb
inc
clc
cmp
test
lret
cmpsl
int
jbe,pn
or
lock
mov
inc
fcmovnbe
dec
shlb
push
gs
mov
lods
add
fstl
xor
adc
cmp
fidivs
dec
dec
xor
fsub
mov
lods
in
fisubl
aam
mov
fisubs
fildl
call
adc
cmpsb
adc
bound
sti
adc
jbe
sbb
jg
push
subl
pop
pop
mov
xor
mov
test
js
int3
xchg
push
push
xchg
stos
rorb
loope
jge
daa
hlt
lock
push
out
jp
push
lods
adc
mov
lds
cmp
jl
in
sti
fisttpll
push
push
int3
xchg
sbb
sbb
pop
xchg
pop
sub
sub
xchg
fsubl
fwait
and
mov
xchg
fstpl
loopne
cmc
inc
mov
mov
scas
imul
idivl
dec
js
adc
xchg
add
insb
xor
int3
decl
push
fcoml
add
dec
lods
mov
cwtl
clc
leave
xor
aad
repnz
xchg
call
xchg
cmpsb
popa
dec
mov
sbb
fwait
ljmp
jle
sub
in
test
fistps
stos
test
or
mov
stc
push
xchg
xchg
js
dec
and
das
inc
les
cmp
xchg
xchg
insl
lcall
push
sbb
cmp
outsb
fnstsw
xor
add
mov
jno
enter
dec
jbe
xchg
pusha
in
or
xor
pop
sub
push
cmp
and
je
addl
aad
in
adc
out
push
mov
loop
clc
dec
movsb
loope
sub
dec
dec
test
insb
mov
mov
in
cmp
jge,pt
push
add
mov
pop
jnp
lret
in
lea
ja
mov
test
sub
push
adc
lods
rorb
xlat
fidivrl
insl
aad
pop
xor
and
movsb
cmp
fiaddl
push
adc
pop
std
into
imul
fisubrl
jecxz
adc
and
orb
adcb
mov
xor
loop
aas
lret
or
scas
in
sub
pop
xorl
mov
and
push
aaa
ds
dec
jo
pop
xchg
sbb
push
test
out
jnp
rclb
cs
xchg
in
cmpsb
es
sbbb
sub
jecxz
sbbl
cmp
push
mov
dec
mov
cmp
sub
or
mov
adc
ljmp
pop
das
js
in
dec
aad
into
hlt
mov
icebp
in
xchg
std
into
cli
in
mov
cs
inc
adc
fcmovnb
dec
adc
es
jnp
add
out
pop
mov
sbb
mov
dec
nop
mov
cmp
mov
cmpsl
cmp
pop
shrb
jns
loop
mov
cmp
and
loop
mov
sbb
jp
mov
jo
pop
push
mov
xor
push
mov
test
and
push
and
jne
ljmp
and
aad
clc
enter
pop
cld
in
in
outsl
mov
mov
pop
jnp
pop
and
test
xchg
mov
xchg
and
mov
mov
xor
mov
fildl
shlb
shll
cmc
xchg
add
fiaddl
mov
mov
test
loope
aaa
dec
add
imulb
pop
xor
xor
stos
iret
aaa
mov
inc
xchg
dec
inc
orl
aaa
stc
cmpl
ljmp
sarl
cmp
add
test
jp
add
add
push
adc
mov
imul
inc
jns
pop
jge
out
xchg
cmp
xchg
push
jle
add
arpl
outsl
or
jl
jbe
ds
pop
aam
in
out
mov
pop
out
mov
cs
inc
sahf
sub
andl
jle
in
repz
mov
and
lods
sub
cmc
xchg
mov
dec
jo
iret
or
mov
mov
xlat
xor
push
sbb
enter
sub
dec
scas
add
jge
xor
scas
mov
scas
fisubs
jl
mov
sbb
jl
adc
xchg
jmp
sub
cmpl
insb
push
xor
data16
inc
xor
or
or
or
es
sub
incl
lahf
or
call
push
add
sub
les
repz
sbb
cltd
push
pop
xor
es
sbb
lcall
adc
mov
fdivl
ljmp
and
addl
stos
and
lods
cli
jg
mov
sub
sarl
out
add
into
in
in
imul
or
movsl
cli
jecxz
jo
pop
or
je
test
lock
fs
out
fcoms
cltd
mov
pushf
idivl
and
fsubrl
insl
push
sbb
in
cmpl
adc
lods
shll
cmp
mov
pop
or
add
stc
in
faddp
jl
es
int
dec
dec
xchg
cmp
jge
adc
inc
cmp
jnp
cmp
imul
test
push
mov
into
sbb
push
repnz
cwtl
hlt
into
clc
dec
cmp
or
add
ljmp
movsl
stos
pusha
sub
pusha
cmpsl
shl
das
pop
pop
xchg
mov
inc
sbb
pop
mov
rorb
loope
cmp
popa
dec
adc
jne
or
rcll
adc
mov
in
dec
or
cwtl
lcall
xchg
jle
cltd
stc
jo
jle
jl
xor
xor
mov
inc
ja
cli
cli
pop
push
ret
les
pop
sbb
add
frstor
pop
ret
push
jle
push
and
rclb
inc
data16
popf
fisttpll
jecxz
roll
xor
scas
and
and
sbb
in
jp
push
out
iret
mov
insb
inc
lahf
add
pop
das
orl
std
cmp
fxch
mov
xchg
dec
sub
out
dec
rclb
sbb
call
xor
aas
mov
cmpsl
mov
pop
shll
out
cmp
test
mov
loop
icebp
inc
cmp
imul
fcomps
inc
lods
mov
sarb
xlat
std
test
shl
push
cmp
ret
outsb
into
in
xlat
popf
dec
mov
cmp
fs
or
imul
inc
sub
loopne
xchg
arpl
movsb
cltd
xor
mov
lcall
dec
aaa
or
cmp
inc
stos
fmul
ret
mov
repnz
ds
les
int
jns
mov
xor
jb
pop
xor
fcom
je
sahf
les
out
mov
bound
and
jno
movsl
scas
cmpsl
divl
in
adc
mov
push
pushf
mov
mov
vandnpd
movsl
hlt
popf
push
jo
push
sub
lea
pushf
adc
es
inc
add
mov
fsub
cmpb
sbb
jne
pop
sub
int3
xor
xor
inc
mov
xchg
inc
xchg
out
mov
pop
push
rcrl
mov
sub
push
popa
divb
scas
xchg
xor
push
popl
adc
dec
add
add
sub
out
pop
mov
cs
or
jne
mov
test
outsb
fsts
std
mov
outsb
shlb
fdivl
sahf
jb
dec
jne
in
jae
jmp
idiv
call
or
xchg
fs
sub
sbb
xchg
aam
dec
lock
in
dec
jmp
push
pop
mov
mov
pop
negl
or
push
fsts
dec
push
jno
mov
push
mov
movsb
cltd
pusha
cmp
jmp
lock
lds
pop
jo
jge
mov
sub
and
lret
mulb
mov
lds
push
cmp
ds
jp
cmp
repnz
push
pop
sbb
dec
jg
sub
sti
and
scas
ljmp
push
jp,pn
jmp
mov
push
rcrl
das
inc
stc
jecxz
push
jge
xchg
lcall
jecxz
or
pop
ret
in
loopne
cld
insb
mov
xchg
dec
dec
push
sbb
call
in
cwtl
insb
xchg
add
pop
push
cli
fists
roll
lods
jne
sbb
push
dec
test
int3
ss
movsl
mov
push
negb
xchg
mov
or
cltd
pop
xchg
mov
lds
sti
repz
lret
das
mov
mov
mov
pusha
aam
push
or
test
pop
mov
xchg
cld
stc
clc
dec
fildll
sbb
lahf
popf
inc
adc
and
stos
or
das
cwtl
push
ds
push
push
push
jbe
insb
orl
jno
or
jne
pop
inc
pop
loope
jno
pop
dec
push
pop
aam
xor
add
in
push
cwtl
repz
or
sub
jbe
je
cld
lret
test
xchg
jle
mov
inc
cltd
repnz
add
ret
cmc
jle
mov
stc
and
cmp
pop
test
icebp
fidivs
mov
mov
outsl
or
into
data16
jp
mov
outsl
push
xor
fdivrl
mov
sub
nop
push
ret
fiadds
les
push
xchg
icebp
out
and
jmp
mov
inc
cmp
jp
mov
xchg
cwtl
lret
mov
in
sbb
shl
ljmp
ret
push
mov
jecxz
hlt
sahf
out
or
push
test
std
ret
dec
and
jb
push
push
jge
loopne
arpl
pop
cmpsb
daa
mov
aad
pop
inc
iret
jg
nop
test
testb
lea
insb
xchg
adcl
and
fisttpll
add
in
jg
lret
fsubs
jp
out
jmp
insl
or
xchg
and
daa
mov
adc
mov
pop
xor
push
jle
jle,pt
xchg
movsb
je
jecxz
fs
jmp
add
mov
xchg
mov
xchg
xorb
cmp
call
xor
adc
pop
and
sub
xchg
push
flds
and
in
ja
mov
mov
jp
mov
mov
pop
xchg
je
xchg
fchs
call
mov
outsb
sbb
cmpsb
orb
pop
sbb
fimuls
or
xchg
cmpsb
scas
dec
test
test
xor
out
cmp
sub
clc
out
scas
pop
iret
scas
or
or
sbb
mov
cmp
je
scas
dec
loop
jmp
dec
movsl
sub
imul
add
sti
fstpt
xlat
jecxz
iret
and
mov
dec
sub
in
pop
xor
adc
jno
xor
mov
push
std
mov
js
dec
popf
pop
adc
xchg
ret
push
pusha
mov
fstpt
push
fst
out
inc
add
mov
aad
xchg
sbb
inc
push
sub
mov
or
mov
sbb
aaa
adc
mov
mov
or
das
cmp
pop
enter
pusha
movsl
pop
cmp
stos
adc
pop
dec
sbb
cmpsb
ljmp
sbb
das
xchg
pusha
rorl
or
mov
inc
pusha
pop
add
and
shr
dec
or
icebp
sti
sub
adc
push
test
sub
jmp
mov
jg
loope
jne
jo
pop
pop
push
ret
cmp
dec
jle
fs
inc
mov
xchg
jmp
push
movsb
in
fistpll
dec
add
push
call
jnp
roll
gs
or
sbb
adc
cmp
mov
pop
pause
les
sarb
cs
dec
dec
cmp
xor
inc
insb
mov
loope
lret
mov
xchg
nop
cltd
jmp
xor
adc
call
int3
fidivrl
je
aad
pop
mov
xor
mov
nop
mov
scas
mov
or
pop
mov
cwtl
icebp
scas
sbb
scas
out
loop
pusha
adc
mov
xchg
inc
push
cmp
jo
stc
push
jp
iret
fisttpll
sbb
sbb
hlt
adc
addb
jns
mov
add
arpl
xor
stc
sub
and
mov
jmp
sub
or
inc
je
movsl
iret
nop
and
inc
mov
call
sub
jne
es
or
xchg
dec
out
jns
jmp
clc
fsubrl
outsb
test
add
jb
mov
mov
adc
xor
fstpl
jle
movsb
out
pop
sub
sti
arpl
shrb
sbb
push
inc
mov
scas
sbb
outsb
or
cmc
sbb
jp
pop
clc
movsl
mov
insb
cmp
inc
call
test
add
ficoml
xchg
fsub
jmp
loop
lods
mov
cmpb
int3
xor
push
in
in
jl
mov
movsl
add
mov
mov
mov
out
push
aaa
jbe
and
test
aad
fs
jl
sbb
fisttpl
lcall
fisubrs
mov
jnp
insb
mov
jno
fstpl
pop
mov
shll
gs
mov
test
adc
jl
repnz
pusha
jge
xchg
pop
shrl
les
fmul
sbb
push
loop
ret
in
std
outsl
scas
jecxz
into
push
ja
test
aad
dec
jmp
sar
fs
mov
add
in
sbb
rorb
lahf
jns
addr16
inc
out
mov
fwait
pop
cmpsb
adc
mov
mov
sbb
cmovl
jle
xor
mov
in
pop
pop
xchg
fs
mov
fs
inc
in
sub
repnz
hlt
mov
jnp
xchg
dec
in
add
cwtl
cmc
sbb
or
inc
cmp
xlat
add
imul
out
lahf
adc
xchg
push
roll
mov
inc
and
mov
adc
dec
jl
add
push
orb
mov
xchg
scas
inc
add
xor
mov
xchg
inc
xor
rolb
lea
jle
nop
jne
lret
scas
fsts
mov
hlt
inc
movsb
stos
pop
outsl
cld
mov
std
sbb
fs
mov
popa
pusha
mov
cmp
insb
and
jno
push
jnp
pusha
popa
sarl
and
clc
mov
es
cld
sbb
push
and
shll
jns
fcomps
sti
cmp
xchg
xchg
pusha
lea
mov
pop
dec
pop
pop
shlb
insb
dec
shl
cld
dec
lds
test
or
mov
adc
fwait
cmp
mov
cmpsb
push
std
in
jne
inc
popf
insl
sbb
jae
push
push
fistpl
lret
mov
and
push
mov
dec
xor
lds
push
adcb
or
call
add
dec
int3
in
iret
setnp
inc
imul
cmpsb
iret
and
sub
xchg
scas
les
adc
mov
out
das
gs
test
stos
loope
pop
jns
js
nop
pop
mov
push
aaa
loop
fsub
std
aad
rclb
sbb
addb
xchg
xor
mov
mov
jns
out
jge
daa
loopne
pop
icebp
mov
lcallw
jo
out
imul
fwait
sbb
lock
adc
stos
xchg
int
rcrl
and
outsb
push
xor
test
mov
or
jae
mov
je
jmp
pop
sbb
bnd
rorl
ds
pop
push
pop
incb
out
dec
push
fstps
orl
xchg
push
mov
mov
and
jb
add
out
scas
jle
pop
insb
hlt
lock
nopl
loop
adcb
and
dec
or
push
test
and
fistps
inc
add
pop
iret
push
sbb
push
inc
sub
or
ret
jg
jle
or
stc
cmp
jb
fcoms
dec
push
or
ret
cs
lret
inc
adc
mov
in
iret
mov
xchg
pop
mov
lea
jg
in
jle
dec
push
loope
or
dec
test
jne
mov
pusha
adc
cmp
ror
cmc
dec
gs
and
and
pop
out
xchg
xorb
mov
orl
outsl
and
pushl
or
std
mov
sbb
sbb
xor
jecxz
lods
dec
mov
into
insl
cmpsl
loopne
xor
mov
bnd
mov
aaa
and
jno
push
xchg
sbb
pop
push
ret
push
test
sub
aad
inc
jne
jb
mov
pop
mov
pop
inc
pop
mov
int3
push
hlt
pop
jle
into
sti
cmc
mov
mov
data16
pushf
pusha
cmpsl
xchg
insb
into
push
lods
push
jle
inc
mov
in
mov
push
rol
pop
push
repz
pop
iret
repz
push
inc
mov
pop
and
inc
add
xchg
adc
arpl
inc
cmp
push
in
dec
mov
lcall
jl
cwtl
mov
push
lahf
movsl
mov
cltd
outsl
stos
daa
nop
pusha
or
out
cmpsl
push
call
clc
std
sub
ja
inc
dec
add
xor
xchg
shll
jns
pop
cmpb
pop
cltd
imul
sbb
lods
mov
rcl
ret
popf
push
test
lahf
test
stos
cmpsl
and
dec
push
int
ds
jmp
scas
dec
cmp
shrb
pop
test
loopne
std
inc
in
lahf
data16
cs
lds
adc
inc
ret
push
in
push
lock
inc
arpl
arpl
cmp
ror
cmpl
add
xlat
pop
filds
fnstenv
test
mov
dec
fnsave
jl
mov
fcomp
aaa
push
fidivl
push
mov
and
push
adc
fisttps
mov
push
dec
out
add
mov
pop
fsubs
jb
pop
lods
inc
jnp
dec
mov
int3
inc
sub
iret
les
jmp
jnp
mov
and
rorb
daa
mov
adc
mov
fadd
jb
sub
sub
pop
jmp
dec
or
inc
mov
pop
cmpsl
lea
inc
cmpsb
in
lods
sbb
fwait
movsl
cli
cs
mov
loope
mov
data16
aam
shr
out
mov
out
arpl
repz
sbb
jg
lods
cmp
mov
xor
lea
xchg
mov
sti
adcb
jns
repnz
jnp
aaa
imul
push
orb
aad
jp
mov
inc
retw
outsb
sub
mov
pusha
lods
push
bound
cmp
and
test
lcall
stos
lcall
sbb
sbb
in
jl
loop
push
clc
mov
jbe
test
addr16
xor
adc
xlat
jp
jb
mov
or
adc
and
pop
iret
sbb
cmp
orb
mov
xchg
ds
fchs
jg
dec
mov
lahf
xchg
xchg
pop
leave
fwait
sbb
aaa
aam
pop
jnp
adc
je
movsl
jmp
out
jle
scas
add
es
mov
jb
shll
js
mov
in
inc
nop
add
mov
out
cmp
xor
pop
adc
mov
push
jp
push
cli
inc
lret
sub
jl
sub
push
je
sbb
add
cwtl
and
xorb
pop
pop
dec
sar
scas
jns
bound
jecxz
mov
adc
insb
sub
sub
dec
in
out
dec
and
in
popf
je
out
test
shll
push
inc
add
sub
cmp
xor
lcall
mov
cmp
xlat
mov
pop
inc
hlt
call
nop
ret
adc
add
sub
repz
dec
mov
mov
shl
mov
jecxz
cltd
pop
mov
inc
ljmp
xchg
or
sbb
mov
fldt
or
cli
mov
mov
bnd
imul
ss
lret
xchg
lock
jp
push
push
pop
mov
and
adc
mov
loopne
cmp
fiadds
testb
data16
inc
and
add
pusha
dec
sub
and
jl
xor
fidivrs
jge
pop
lds
cmp
pop
push
daa
stc
pop
roll
mov
pop
xor
repz
push
lcall
jge
push
pop
lods
xor
cmp
cmp
fwait
setbe
enter
mov
jne
in
in
lods
or
and
adcb
push
adc
pop
ljmp
daa
aad
mov
add
cmp
loopne
ja
fisttpl
push
inc
adc
ja
mov
loopne
fnstsw
xchg
dec
pusha
popa
movsl
dec
movsb
dec
dec
sub
into
pushw
imul
and
mov
dec
rorb
adc
mov
push
dec
sub
cmp
jne
lret
pop
jp
pop
inc
leave
lcall
jle
roll
xor
pop
loopne
js
sbb
pop
into
enter
int
in
or
xor
sbb
in
dec
dec
icebp
les
mov
sbb
ds
or
nop
adc
mov
fs
push
jge
xchg
push
scas
cmp
mov
aas
ficompl
xor
cmp
jns
pop
push
push
push
cltd
xor
sub
add
ret
push
sub
pop
inc
nop
nop
dec
adc
cmp
cmpsb
jmp
mov
cmp
dec
fldcw
xor
pop
fistl
jmp
in
daa
xor
adc
jp
mov
stos
inc
pushf
arpl
pushf
add
xor
xor
fmuls
scas
imul
adc
add
mul
inc
pop
pop
add
mov
or
shrl
or
lret
xchg
mov
imul
sub
lret
mov
inc
sbb
mov
mov
stos
push
dec
inc
cwtl
mov
or
lcall
mov
int3
fwait
jg
mov
jno
dec
push
in
inc
movsl
decl
cmp
jl
or
jmp
sbb
rcrl
push
leave
iret
out
mov
jo
pop
jecxz
cltd
push
fsubl
sbb
pop
jne
aam
cmc
add
mov
popf
dec
jle
cmc
push
push
notb
push
mov
and
jg
aam
jmp
mov
daa
aam
mov
and
cmp
cmp
shrl
lods
jo
mov
leave
sbb
insl
push
sti
loope
jo
push
insl
pop
push
mov
xchg
inc
push
push
icebp
sbb
bound
inc
lcall
adc
mov
xchg
mov
adc
daa
add
mov
jmp
outsl
mov
jnp
imul
jmp
sbbb
push
and
push
dec
dec
mov
jb
ljmp
add
leave
mov
jae
mov
sbb
nop
cmpl
mov
int3
mov
adc
mov
push
mov
mov
xchg
inc
stos
xchg
lods
and
xor
shlb
xor
insb
pop
jo
mov
ret
push
mov
pop
cwtl
iret
sbb
data16
inc
adc
movsl
xchg
mov
xchg
js
repnz
cmp
and
dec
inc
and
pop
cmp
mov
daa
dec
pop
sub
fists
and
lods
or
mulb
adcl
loop
sub
imul
jge
lcall
push
cmp
adc
ss
xor
jmp
inc
aad
iret
ss
out
inc
jmp
add
push
xor
sbb
xchg
and
loop
jp
aas
jne
ret
rcrb
push
mov
adcb
mov
fwait
mov
sbb
xchg
push
dec
xor
mov
mov
cmp
push
mov
imul
cmp
inc
loopne
mov
push
sub
into
lret
js
ds
mov
jge
repz
repz
pop
inc
add
jl
pop
xchg
pop
outsl
xlat
mov
jnp
rcl
popa
shrl
les
push
leave
adc
xchg
add
adc
and
mov
add
fnstcw
les
out
into
orl
fcompl
and
or
xlat
sbb
dec
loop
inc
inc
popl
lret
inc
inc
scas
aam
jns
inc
into
or
pop
sub
ss
icebp
mov
frstor
mov
jecxz
mov
push
cmp
xchg
xor
push
jle
in
popa
xchg
or
stos
mov
dec
movsl
pop
movsl
mov
ds
mov
cltd
jno
xchg
inc
in
loop
add
ss
scas
and
adc
adc
xchg
add
xor
mov
cld
mov
test
cwtl
add
inc
idivb
cmp
mov
inc
xlat
xlat
add
sub
adc
cltd
scas
mov
inc
cld
int
insl
jns
cmp
lret
and
push
cvtps2pd
add
xor
out
jecxz
stc
ja
inc
pushf
adc
add
jbe
sbb
andl
xchg
std
mov
push
xchg
dec
pop
loop
enter
pop
fnstenv
pop
cs
mov
xor
xor
pop
loope
scas
sahf
mov
enter
es
fists
or
es
into
pop
mov
mov
jg
xor
pop
pop
cmp
imul
sub
and
pop
jmp
adc
mov
stos
xchg
push
sub
inc
add
inc
push
shrb
fdivs
inc
mov
push
and
add
push
test
inc
aam
outsl
push
decb
fstpt
out
sar
jge
or
aas
int
push
sub
dec
and
mov
mov
daa
add
test
rcrb
xor
lret
lods
fmul
push
aaa
mov
cmpsl
roll
or
sub
daa
stos
xchg
add
push
pop
cmpsl
adc
add
sti
mov
or
int3
sbb
es
ja
push
mov
pusha
sub
or
or
iret
in
shrl
pop
sub
sahf
sub
lcall
movsb
es
pop
jecxz
jb
inc
outsl
aad
dec
sarl
jmp
gs
sub
in
popa
mov
lahf
mov
dec
lret
cmp
mov
lods
sub
cltd
hlt
sub
xchg
cmp
jns,pt
std
icebp
fcoml
test
push
mov
clc
and
sub
cli
insl
in
mov
sub
popa
repz
outsl
les
in
lods
jmp
jo
push
stos
ficompl
jno
mov
shl
xchg
mov
inc
lret
in
jmp
fisttps
jle
xor
test
aad
pop
and
mov
shlb
mov
pusha
test
push
sbb
jnp
pop
bnd
sbb
jno
pop
ficompl
ds
pop
lods
stos
jns
sbb
jo
xor
es
scas
shl
mov
sub
mov
repnz
ret
ljmp
movsl
sbb
pop
jp
in
insl
insl
push
fwait
testl
jmp
jo
popa
cmp
cmpsl
push
push
and
mov
fiadds
imul
dec
xor
xchg
adc
mov
das
cmc
hlt
repz
xor
fwait
cmpsl
jmp
pop
out
ss
cmp
xor
out
and
jle
leave
xor
scas
leave
mov
or
iret
or
fstl
int
mov
mov
cmp
lods
sti
cmp
cmp
pop
xor
xchg
jne
jl
mov
shrb
sbb
cmpsb
pusha
xor
repnz
sarb
outsb
insl
enter
ficompl
addr16
outsl
repnz
scas
push
sbb
xor
gs
or
add
clc
inc
or
xlat
js
dec
cmpsl
bound
cmp
push
idivb
or
enter
jge
lods
adc
adc
in
nop
test
in
lods
sbbl
fsubrs
mov
fdivrl
sarb
xchg
sub
inc
push
cmp
jo
out
in
movsl
pop
and
xchg
jl
add
and
push
mov
outsb
dec
mov
sti
int3
push
lret
xchg
test
pop
and
cld
push
mov
push
std
in
pop
shrb
dec
xchg
out
jg
cmp
or
es
mov
mov
pop
inc
ds
in
inc
jb
lea
int
ds
mov
lea
sbb
adc
and
xchg
rcl
pushf
dec
jle
mov
xorl
push
push
ret
add
sbb
loopne
mov
mov
daa
and
sub
xor
mov
out
mov
ja
and
dec
xchg
test
push
in
xor
push
test
adc
jecxz
lods
cli
sbb
lret
xadd
test
dec
dec
inc
mov
loop
data16
call
push
push
negl
add
sbb
xchg
sub
stos
dec
pop
lahf
pop
js
add
jne
popf
gs
pop
enter
pop
addr16
sbbl
ret
rcrb
pop
cmp
push
jnp
icebp
jne
orb
mul
push
cmp
cmp
add
xchg
sub
cmp
pop
mov
add
inc
in
add
stos
in
xor
shlb
stos
cmpsl
pop
arpl
sahf
cmpsb
cmp
in
sbb
pop
stos
mov
adc
adc
pop
mov
into
jns
inc
add
and
gs
xchg
push
mov
pop
jb
mov
jmp
adc
loop
xor
loop
and
xchg
cwtl
enter
into
jbe
icebp
xor
popf
outsb
in
fidivrl
sti
or
pop
aam
jb
inc
sbb
jmp
pop
xchg
outsb
pop
lcall
sbb
aad
push
popf
push
insb
sbb
pop
xchg
mov
or
adc
cli
mov
xlat
movsb
adcl
hlt
push
mov
fmulp
mov
insb
mov
shll
mov
insl
fstps
and
sbb
popf
cwtl
inc
push
push
setno
imul
rclb
sbb
pop
in
sahf
mov
push
ret
shll
jmp
cwtl
loop
hlt
mov
rcll
pop
dec
inc
loope
dec
das
mov
fdivl
add
and
das
sub
es
sbb
push
pop
add
mov
mov
xchg
mov
mov
push
aad
inc
pop
inc
pop
sbb
push
inc
xchg
in
cmpsb
popa
mov
inc
and
push
leave
inc
lods
in
adc
iret
ljmp
nop
add
leave
add
sarl
pop
mov
mov
clc
mov
outsl
inc
dec
fdivs
dec
imul
add
aam
mov
clc
je
xchg
inc
mov
xlat
push
cs
subl
push
fcompl
push
jae
sbb
orb
cmp
adc
pushf
adc
cli
insb
sar
add
jb
adc
inc
stos
roll
movsl
enter
nop
adc
out
inc
xchg
cltd
sub
pop
pushf
mov
cli
fst
cmc
scas
jle
scas
inc
popa
inc
mov
mov
les
sti
jne
jno
rcr
inc
xor
cvttps2pi
mov
push
xchg
sbb
lds
ret
push
into
sub
ds
jle
imul
add
imul
loopne
ret
ss
data16
clc
cmp
test
hlt
cmpl
mov
outsl
and
sbb
fcmove
leave
aaa
pop
test
pop
imul
xchg
outsl
into
adc
pushf
adc
ret
push
lods
dec
push
inc
sbb
pop
out
out
xchg
mov
inc
pop
add
in
xchg
xor
or
sbb
in
rcr
insl
int3
loope
push
stos
rcl
xor
cmp
out
pop
jecxz
or
inc
jg
out
xchg
dec
addr16
mov
imul
sbb
mov
push
fdivr
jae
das
clc
pop
test
xchg
lahf
cld
jno
adc
negb
push
xor
cli
ljmp
fnstenv
addb
adc
or
jae
arpl
mov
loope
cmp
jno
les
int
push
popa
test
mov
cmpsb
std
addr16
mov
add
std
aad
lret
cmp
jbe
mov
loopne
add
loope
jnp
xor
das
shrb
pop
dec
rclb
adc
add
daa
mov
xor
or
lcall
add
jl
xchg
jmp
adc
icebp
gs
ljmp
movsb
stos
push
loope
cmc
xchg
test
mov
and
insl
inc
movb
enter
mov
sbb
pop
out
or
ret
push
jecxz
dec
cmpsb
fisubrs
lds
and
addr16
sarl
jb
adc
lcall
loop
fadds
sar
cmpsl
std
js
xchg
xchg
lret
subb
mov
mov
iret
pop
je
loop
int
movsl
xchg
insl
dec
or
mov
push
mov
cltd
ss
lret
call
jae
icebp
add
push
cli
xor
mov
mov
cmp
ljmp
push
add
enter
adc
xchg
sbb
dec
xchg
inc
pushf
ficoml
js
xlat
ss
outsb
arpl
out
xchg
push
add
in
dec
mov
cmp
aam
dec
cmp
push
out
xchg
mov
sub
lcall
mov
aad
fs
daa
xor
inc
aaa
pop
mov
test
mov
repz
sub
sbb
fldt
movb
push
mov
xor
fisubl
jecxz
out
fstpl
adc
adc
xchg
inc
jnp
arpl
cld
cmp
cld
idivb
jnp
push
daa
jo
jo
lcall
jmp
das
inc
insb
adc
dec
push
cmp
sub
xchg
sbb
or
ss
js
add
jns
cmp
int
enter
mov
sbb
out
popf
inc
mov
inc
fdivrs
jo
xchg
cmpb
in
enter
push
clc
out
add
mov
cld
adc
call
or
movb
pop
in
adc
dec
pmaxub
sar
aad
cmp
push
mov
sahf
mov
add
mov
and
sub
mov
xchg
sti
imul
push
add
mov
pop
iret
movaps
sub
sub
sub
in
pop
mov
cmpxchg
leave
rorl
ret
xor
mov
xor
xchg
adc
outsl
call
stos
fnstenv
or
sbb
notl
dec
add
inc
shl
rcrl
or
jmp
cwtl
jmp
push
lcall
xor
inc
mov
lods
push
mov
stc
adc
int3
xor
push
subl
or
inc
rorl
popf
inc
lods
lret
cmc
sbb
sbb
pushf
sub
mov
jle
mov
cmpsb
xor
ss
adc
push
dec
push
nop
mov
ds
test
dec
cld
adc
jge
push
loopne
faddp
xor
jnp
loopne
push
mov
and
pop
in
sbb
pop
test
jne
pop
in
outsb
je
push
lcall
pop
xchg
aam
shlb
lea
ret
push
repz
notb
outsb
in
ljmp
cmp
pop
ljmp
gs
out
push
rorb
add
jmp
stos
cmp
push
and
jno
add
out
push
xchg
decl
lock
fsubl
cmc
mov
maskmovq
imull
jmp
pop
pop
pop
push
pop
incb
lret
and
push
cwtl
test
jne
das
mov
mov
fdivs
ret
das
inc
popa
dec
pop
xlat
push
mov
adc
jp
sub
dec
enter
das
dec
mov
gs
repz
rcll
mov
dec
scas
aas
scas
fcmovu
inc
mov
scas
mov
jb
scas
mov
adc
or
rcr
push
out
push
popf
sbb
lahf
adc
call
call
scas
inc
dec
in
stc
xor
jnp
in
sub
or
shlb
mov
cwtl
lea
roll
aam
dec
fildl
and
loopne
std
push
insb
lods
push
shrb
push
cld
jns
idivb
mov
xor
jno
fiaddl
fiaddl
gs
int
inc
sub
in
xor
mov
aas
and
xor
or
sbb
scas
add
imul
int
add
lods
adc
clc
pop
sub
inc
insl
aas
pop
inc
lret
movsb
mov
roll
ljmp
cs
push
xchg
imul
mov
pop
lret
xlat
fwait
inc
aam
divl
aas
call
mov
ss
fwait
adc
das
fisttps
mov
scas
inc
outsb
lods
mov
mov
outsb
popa
push
add
mov
jmp
into
in
xor
xchg
scas
jle
out
lahf
mov
dec
and
mov
adc
popf
inc
sbb
outsb
bnd
adc
dec
imulb
sarb
xor
add
cwtl
fadds
sahf
and
outsb
xlat
pop
cmp
xchg
xlat
xor
adc
push
lods
adc
int
mov
mov
mov
movsl
sub
mov
adc
xor
cltd
adc
stc
add
test
mov
mov
in
inc
pop
pop
jmp
push
mov
aam
inc
push
xchg
scas
push
jbe
push
jmp
jno
mov
ret
aam
data16
xchg
sbb
mov
dec
cmp
push
xor
sbb
xchg
in
clc
and
mov
cmp
popf
mov
push
pop
xor
sbb
add
out
mov
inc
sbb
es
out
jecxz
stos
stc
xchg
and
cwtl
jg
rorl
cmpsl
cwtl
push
test
mov
insb
jecxz
idivb
cltd
insb
xor
es
or
mov
loope
sub
in
mov
lcall
pop
das
push
jmp
or
test
sti
aam
gs
add
loop
push
adc
pop
and
inc
xor
push
leave
adc
inc
je
dec
sbb
js
insb
movsl
xchg
pop
mov
out
in
pushl
dec
das
repz
push
inc
sub
repnz
rcl
repnz
ret
cld
or
lcall
cld
aas
pop
cmp
xchg
adcl
xchg
loopne
out
aaa
mov
jb
nop
add
inc
sarb
sbb
test
stc
test
pop
cmp
jae
push
pusha
xlat
repz
ds
xchg
cld
imul
pop
push
xchg
stos
pop
sub
push
jae
xor
movl
sbb
push
cs
mov
in
mov
rol
loope
xchg
loopne
pusha
loope
lahf
mov
and
push
ljmp
mov
add
mov
sbb
shlb
shll
jp
loop
or
xor
jle
lods
xchg
test
jnp
add
jle
lea
sub
insl
pop
mulb
fwait
xor
movsb
push
insl
dec
notb
in
test
inc
mov
cmc
bswap
inc
pop
pusha
bound
adc
ljmp
pop
sahf
add
mov
addr16
sbb
loopne
mov
fdivrs
data16
xlat
and
in
sub
test
jns
aas
xchg
popa
mov
out
sbb
jle
aaa
fcoml
pop
test
sbb
js
xorl
mov
xor
push
and
mov
into
es
inc
push
mov
push
mov
mov
xor
jl
or
stos
push
int
sahf
stos
fistpl
jbe
lods
arpl
jb
xor
mov
stos
mov
aaa
xchg
fnstsw
sub
call
imul
cmpsl
cmp
mov
out
xor
mov
rcr
xchg
movhps
lods
lods
scas
out
pop
mov
les
cmp
addb
int3
ljmp
shll
pop
xor
inc
jl
subl
inc
cld
shlb
xorb
push
cs
mov
sub
inc
clc
xchg
dec
xchg
sub
jmp
xor
mov
inc
xchg
xor
cmc
je
dec
fnop
sbbb
adc
push
xchg
push
repnz
pop
pop
icebp
dec
xchg
ret
adc
insl
push
push
xlat
cs
movsb
inc
push
jnp
es
mov
dec
pusha
sub
ficoms
sub
push
jns
xor
repz
pop
and
xchg
xchg
inc
idivl
pop
clc
lock
lods
shll
div
call
pop
or
out
popa
xor
repz
shll
mov
inc
pop
jnp
jb
mov
in
into
mov
sub
jns
or
xor
fs
sbb
mov
and
andb
xchg
jp
push
les
xor
roll
jo
call
inc
adc
insl
enter
andb
stos
orb
popa
jne
dec
lfs
outsb
fs
cmp
stos
add
pop
cwtl
dec
push
push
out
mov
enter
cmpl
inc
and
in
rcrb
push
cmc
ret
int3
test
ret
adc
push
lret
clc
xchg
std
cmp
in
xrelease
js
cli
xchg
dec
mov
dec
lds
fcomi
push
dec
pop
inc
insl
adc
ret
rcr
push
push
pop
adc
sub
mov
in
into
popa
adc
push
adc
mov
das
pop
pushf
jne
dec
sbb
gs
adc
and
iret
adc
adc
pop
shl
lea
push
jmp
sahf
mov
xchg
push
inc
xor
mov
sbb
lcall
inc
push
sub
test
mov
ja
stos
pop
fistps
jbe
cmp
push
dec
push
jle
mov
or
pusha
call
imul
jecxz
test
add
dec
sbb
pop
and
dec
lods
mov
pusha
sahf
loopne
dec
sub
popf
pop
aad
and
out
mov
cltd
mov
xchg
or
xor
xchg
add
mov
sbb
js
or
jle
mov
sbb
addr16
dec
fwait
pop
mov
adc
jl
and
xchg
mov
and
inc
pushf
sub
andb
stos
or
dec
xchg
cmp
std
ficompl
sahf
sub
dec
add
outsb
dec
fsubrs
xchg
ret
fmull
jns
inc
fldl
or
das
imul
pushf
xorl
insb
sarb
rclb
inc
andl
arpl
or
push
repz
sub
sbb
ss
pop
int3
das
popf
popa
fdivr
mov
imul
fcoms
xlat
mov
jne
lahf
xchg
cltd
pop
int
pop
xor
cmp
xchg
xchg
ret
inc
stos
mov
mov
inc
jae
cli
aam
fisubl
cltd
cmp
xchg
movsb
or
mov
jo
scas
in
push
movsb
insb
dec
lods
mov
daa
jle
add
cmpsl
aam
pusha
test
and
ss
stos
fstpt
lret
jns
mov
scas
sbb
jbe
lea
mov
out
dec
jns
rcr
jo
in
push
mov
pop
test
cmc
mov
adc
lds
shl
push
or
mov
out
sbb
icebp
mov
sbb
imul
cmpsb
sub
pop
stos
gs
mov
sbb
lcall
push
cmp
repz
arpl
popf
stc
lahf
push
push
mov
fdivrs
mov
rol
or
jle
fwait
into
xlat
cmpb
xchg
mov
mov
jl
pop
push
lods
push
int3
pop
outsb
frstor
outsb
xchg
clc
adc
outsb
aaa
test
dec
mov
stc
dec
sub
jne
insb
inc
lock
test
inc
sbb
push
push
out
adc
cmpsw
push
std
sub
ja
aad
imul
sub
jne
movsb
negl
pop
stos
movsb
inc
sbbl
jno
or
imul
pop
and
rclb
imul
sti
add
fildll
cmp
aas
mov
xchg
in
imul
jmp
push
nop
js
xor
cmpsb
or
sub
xor
fnstsw
mov
arpl
cmp
xchg
icebp
sarb
aad
inc
fldenv
js
arpl
cmpsl
scas
push
sub
pusha
ja
jae
popa
jle
cld
sub
adc
gs
jle
lret
js
pop
or
inc
adc
and
sbb
test
ss
dec
mov
scas
fs
lods
pop
pavgb
sbb
mov
test
push
adc
loopne
push
xor
or
test
call
pop
jle
and
mov
cmp
and
xor
dec
cmp
mov
mov
pusha
rcrb
adc
mov
mov
stos
sub
xchg
lock
arpl
jl
test
or
mov
mov
arpl
fildll
mov
sub
or
inc
dec
jns
and
rep
cli
mov
push
cmp
lahf
dec
addr16
and
hlt
fbstp
jmp
push
push
aam
arpl
mov
dec
lods
jno
insl
in
rcr
xchg
cmpsl
xchg
jge
push
call
push
nop
push
out
lods
ret
xor
dec
fs
rol
pop
adc
mov
into
ret
pop
push
xchg
into
pushl
scas
cmpsl
or
clc
int3
push
inc
movsl
aaa
mov
mov
xchg
xor
test
idivb
scas
pop
or
test
or
jecxz
add
xchg
out
jmp
mov
hlt
sbb
shll
pop
xor
mov
notl
sbb
addr16
mov
bound
out
jne
or
ret
les
pop
scas
decl
leave
leave
inc
xchg
jns
negl
cwtl
mov
fmul
push
jmp
push
cli
hlt
pop
arpl
lcall
and
mov
xchg
xor
pop
test
mov
add
addl
mov
sub
fistl
xchg
cmpsb
sbb
sbb
add
add
dec
xchg
aad
scas
and
push
adc
stos
inc
sbb
and
clc
adc
mov
fcmovbe
add
fstp
scas
xor
cltd
cmc
sti
je
and
cli
es
push
inc
jae
rcrb
xor
scas
stc
add
mov
add
cmp
mov
sub
in
mov
cmp
leave
aas
imul
ret
push
or
cmp
and
cmp
lahf
cmc
sub
ds
jecxz
nop
loope
lret
and
or
add
pusha
or
rorw
mov
mov
xchg
pop
cmpsb
test
addr16
sbb
out
bound
lods
in
dec
inc
in
xor
or
and
lahf
jp
jg
fcomps
sub
loopne
mov
fnstsw
mov
lret
mov
mov
and
mov
popa
lret
sub
push
cltd
add
sub
js
aas
mov
lock
mov
jmp
xor
je
dec
cmp
or
in
jmp
pop
xchg
push
daa
cmc
fsubs
dec
enter
dec
push
push
addl
inc
pop
outsb
and
xor
in
add
pop
repnz
out
xchg
xlat
mov
fwait
pop
push
inc
xchg
les
hlt
fsubrl
mov
insl
aas
jmp
push
mov
fs
dec
lret
leave
jg
cli
popa
xor
int
adc
adc
scas
int3
insb
and
xorl
inc
add
pop
xor
scas
adc
icebp
pop
ret
pop
dec
aam
inc
cmp
lcall
jb
cmp
push
sub
rcll
sti
mov
mov
sub
out
sbb
aas
outsl
test
or
inc
jns
inc
scas
jmp
ja
push
call
jbe
jle
pusha
movsl
mov
imul
push
push
xor
addr16
and
jns
and
mov
xchg
cmp
std
cmp
mov
sbb
xlat
jno
mov
cmpsb
mov
loope
mov
mov
adc
aas
inc
add
cmp
jl
lock
cmp
and
repnz
insl
sar
sbb
cmp
mov
loop
sub
ret
cmp
dec
jnp
shrb
xchg
add
or
movsl
mov
bound
orb
xchg
test
adc
xor
dec
ljmp
fstp
xorb
aas
cmp
outsl
pop
dec
push
mov
sbb
jno
mov
or
pushl
pop
add
xchg
cmc
lods
ljmp
mov
icebp
insb
nop
inc
dec
testb
pop
scas
or
sub
icebp
adc
jb
jmp
in
xor
mov
into
mov
pop
and
inc
cs
dec
icebp
adc
daa
mov
mov
xchg
ljmp
cmp
pop
or
ret
push
jb
jb
call
fnstenv
popa
jns
ljmp
cld
mov
icebp
push
sub
loopne
pop
mov
out
pop
sub
outsb
testb
arpl
rolb
clc
out
push
lea
and
push
pop
popl
das
ret
mov
pop
mov
in
push
cmpsb
call
xchg
das
sti
xor
sbb
jmp
pop
adc
inc
cltd
dec
jne
mov
add
mov
scas
mov
mov
dec
pusha
andl
jo
inc
dec
add
das
sub
pop
xchg
scas
xor
roll
inc
les
inc
jl
sbb
je
jne
sbbl
push
leave
fmull
jle
mov
add
add
xchg
cli
dec
push
xchg
das
test
in
push
push
pop
test
pop
pop
shlb
sub
dec
cmp
nop
adcl
pop
sti
xor
in
add
stc
push
cmp
ret
dec
rcll
in
shll
repz
cld
outsl
jbe
jb
test
int3
mov
and
lret
adc
xchg
lods
stos
sbb
fstl
inc
mov
or
in
add
addr16
fs
inc
or
xchg
push
cmp
aam
jbe
inc
pop
pop
mov
mov
push
divb
shrb
sbb
das
fmull
jae
sbb
mov
out
ret
sbb
lret
inc
adc
orl
push
and
mov
mov
sahf
pop
test
cmp
fadds
adc
jmp
sti
stos
or
push
push
mov
aam
dec
stos
or
push
pop
cmp
leave
add
ret
aaa
in
mov
or
outsl
inc
mov
dec
pop
and
mov
pushf
icebp
pop
les
mov
mov
push
inc
in
scas
and
xchg
shlb
jp
xchg
imul
sbb
and
cmc
add
out
fs
cmp
xor
es
cmpsb
mov
mov
push
pop
cmp
shrl
test
xchg
pop
in
lret
push
rolb
mov
shl
pop
ret
lock
shll
sub
mov
or
loopne
adc
cmp
stc
xchg
fistps
ljmp
mov
and
xchg
or
cmp
imul
fcmovnbe
add
sub
mov
pop
out
mov
jp
pop
jns
nop
xchg
pop
loopne
jg
xlat
jb
repz
nop
fstpt
inc
xchg
hlt
pop
stos
fcmovb
pusha
into
shl
scas
cmp
and
dec
add
pop
add
push
mov
aaa
scas
mov
das
orl
loop
test
popf
cmp
shll
or
push
int3
push
dec
ljmp
repz
ja
ficoms
jmp
cmp
out
push
jo
enter
aaa
sub
cmp
arpl
loop
lahf
je
xchg
scas
imul
rorl
ds
sub
aad
shl
push
add
test
sbb
gs
aaa
fdivrs
jne
or
ljmp
cmp
out
repnz
and
insl
cmp
xor
sub
mov
push
mov
mov
add
enter
divl
jg
fstl
mov
sbb
pop
inc
fnstcw
xchg
add
loopne
mov
test
aam
lahf
shrb
stos
xchg
cli
test
dec
fldt
in
push
or
mov
stc
lret
push
ret
jbe
jbe
jae
jecxz
mov
iret
ret
in
mov
mov
dec
es
daa
xlat
cld
xorl
add
movsb
repnz
adc
jmp
lock
addb
xchg
lcall
aaa
aas
addl
jmp
gs
xchg
add
push
pop
addr16
push
movsl
sbbl
inc
inc
cs
cwtl
sub
fcmovnb
ljmp
and
outsb
xor
mov
dec
mov
pop
inc
mov
mov
subl
cmc
rcrb
mov
sti
mov
dec
mov
lods
sahf
sbbl
inc
and
addl
add
inc
movsb
jbe
scas
push
and
int
iret
sbb
add
pop
mov
add
roll
mov
cmpsl
mov
mov
xchg
jo
mov
sub
mov
sbb
xlat
ss
mov
jbe
mov
js
fwait
in
add
out
fnstcw
jnp
pop
ss
sub
inc
cmc
movsb
adc
popf
ljmp
dec
and
fwait
lods
cmp
push
in
rcpps
xorl
mov
test
sbb
test
jl
fstl
mov
lods
mov
shll
loope
xchg
jno
cmpl
rorb
es
push
or
ds
lret
fcomps
stos
incb
stos
lods
add
int3
dec
jae
pop
sbb
dec
rcrl
scas
shll
aam
or
pop
push
icebp
sub
fists
mov
mov
lock
fdivs
mov
inc
mov
and
scas
jbe
stos
mov
test
xor
push
in
mov
push
ret
and
sub
call
out
fcmovb
mov
xchg
cmp
fbld
jle
sub
shll
je
pop
cmp
in
test
test
dec
mov
sub
push
and
subb
jb
jno
mov
fisubrs
xchg
mov
bound
mov
cs
cmpsb
jbe
imul
popf
mov
cmpsb
lds
jmp
pushf
mov
fcomip
sub
in
cld
pushf
das
imul
jns
test
dec
xchg
int
stos
pop
ljmp
std
repnz
inc
add
in
aam
xchg
xchg
faddp
pop
and
mov
outsb
mov
cltd
cltd
enter
jo
mov
movsl
shll
pop
jmp
sbbb
jns
fdivrs
rcrb
adc
decb
popa
in
je
mov
cmp
or
jle
and
sar
outsl
sbb
push
repnz
dec
push
inc
orl
push
or
mov
icebp
imul
shr
push
fsubs
mov
into
je
aaa
adc
data16
rolb
pop
jp
es
subb
imul
lds
insb
pushf
roll
mov
aaa
sbb
js
mov
mov
lret
and
mov
sahf
jle
mov
addr16
cltd
cmpsb
in
inc
mov
fcmovnbe
inc
or
dec
rcrb
xchg
adc
xchg
xchg
inc
push
dec
cmp
sub
sub
mov
rcl
or
push
pop
test
lea
or
mov
mov
ja
mov
scas
jl
cmpb
je
mov
push
or
test
jo
test
mov
xor
repz
aam
cltd
std
sbb
test
push
ja
shll
push
dec
scas
bound
and
push
adc
xlat
inc
adcl
xorl
sub
mov
fdiv
int3
divl
jle
push
sbb
sahf
nop
push
test
jle
ret
lods
outsl
and
xor
shll
mov
xchg
loope
idivb
adc
orl
popf
cmp
leave
in
divl
stos
add
jmp
bound
adc
rcrl
add
sbbb
test
jecxz
out
lret
jmp
push
daa
cwtl
loope
aam
sbb
xchg
cmp
cmp
fdivrp
loopne
adc
xchg
popa
in
jp
sub
dec
pop
std
insl
cmpsl
sub
dec
scas
fiaddl
scas
pop
adc
xchg
cmp
out
stc
das
lcall
pop
mov
inc
lret
test
aas
ror
ret
pop
xchg
sub
mov
aad
shll
xor
or
jbe
add
mov
xchg
sbb
or
lret
mull
fxch
and
jo
in
inc
pop
jb
test
inc
mov
sbb
jmp
js
xchg
out
cmp
iret
adc
xchg
cwtl
test
aam
out
mov
mov
jne
pop
and
rclb
xchg
enter
push
jo
lods
insl
mov
test
jae
daa
xor
pop
andl
insb
test
leave
jno
mov
cmp
fidivrl
outsl
sub
pusha
and
seto
mov
lahf
mov
or
jmp
daa
fst
jle
int3
sbb
pop
test
adc
push
xorb
dec
out
xchg
mov
jge
cmp
pop
adc
push
in
mov
jne
push
push
add
jge
jl
pop
movsb
pop
jns
or
jp
cmp
out
add
inc
pop
push
mov
ds
lret
sarl
sbb
popf
or
lods
sahf
insl
dec
fdivrp
cmp
stc
out
mov
idivl
outsb
sbb
xor
adc
push
mov
mov
xor
sbb
mov
and
push
outsb
scas
mov
pop
pop
jb
das
out
sub
jnp
and
mov
aas
stos
into
push
insb
ss
sub
push
xchg
xchg
test
loop
jle
xchg
mov
add
pop
push
xchg
xchg
int3
outsb
jecxz
ds
sbb
imul
rolb
pushf
fdivrs
mov
adc
mov
sub
cmp
mov
lret
int
test
xchg
xchg
sbb
ret
fs
inc
rol
imul
stos
jbe
pop
xchg
pop
enter
das
clc
or
movsl
mov
jns
popf
inc
dec
into
cmpl
negl
cltd
std
push
in
sti
bound
pop
cmp
add
sbb
fistl
mov
jg
mov
pop
inc
jecxz
jge
push
test
stos
pop
bound
add
push
gs
rolb
sahf
popf
pop
adc
es
push
jnp
xchg
dec
ret
sub
into
shlb
jg
pop
sbb
sti
sub
dec
cmc
inc
leave
sbb
imul
imul
cmp
jmp
sahf
aaa
push
push
pop
loope
pop
jp
jb
inc
inc
outsl
mov
mov
xchg
push
mov
mov
out
sbb
add
out
out
jb
lcall
daa
xor
in
inc
xor
or
and
xor
insl
stos
lods
push
imul
std
pop
mov
mov
dec
pop
imul
or
jnp
mov
inc
popf
outsl
lret
loope
cltd
mov
ja
cmp
push
rcrl
je
xorb
add
clc
mov
jmp
imul
pop
leave
fcomps
cmpsb
mov
push
movsl
cli
mov
repnz
push
dec
dec
in
lahf
and
fists
pop
orb
js
dec
hlt
repnz
xchg
sub
addb
jle
mov
and
or
rorb
repz
outsl
jle
mov
pushf
fmuls
je
push
das
pop
or
pop
into
mov
idivb
idivb
xchg
push
leave
sbb
jno
loop
inc
xchg
cmpsb
mov
mov
rol
test
sbb
inc
adc
test
adc
jmp
pop
jg
ret
mov
xchg
sbb
ljmp
out
sahf
test
pushf
scas
pop
popf
lahf
sub
pop
popa
add
loope
adc
aad
cwtl
xor
jle
mov
into
out
mov
fisubrl
xchg
pop
leave
movsb
xchg
sbb
stos
dec
dec
nop
add
jg
mov
adc
fwait
pop
out
pop
pop
sbb
dec
sbb
seto
xchg
jo
mov
into
mov
pop
subl
jnp
xor
mov
push
iret
mov
lea
push
add
or
repnz
pushf
dec
lock
fwait
int3
scas
mov
movsl
int
cli
or
push
cli
sarb
add
dec
test
cmc
enter
in
fadd
roll
sub
ret
xor
pop
les
cwtl
push
cmpl
lock
cmp
sub
mov
xor
add
int
test
mov
push
mov
into
gs
sbbl
pop
repz
or
out
lds
push
mov
push
inc
ret
mov
aas
xchg
arpl
in
pop
int
cmp
pop
xorl
push
lret
scas
mov
mov
idivb
sarb
lods
mov
sbb
repnz
or
pop
pop
push
aas
xchg
call
icebp
dec
or
adc
mov
xor
addb
repz
sahf
test
test
adc
clc
dec
gs
imul
and
pop
outsb
add
les
ret
mov
mov
jb
jb
lods
adc
adc
dec
bound
xchg
outsb
cmp
jae
test
out
and
xchg
mov
nop
leave
scas
stc
add
jnp
xor
push
scas
pop
imul
pop
jmp
cmp
enter
pop
xor
or
enter
cmp
test
cli
jbe
aam
dec
xchg
iret
movsl
flds
imul
rcrb
mov
jne
mov
xor
mov
push
aas
sub
mov
insb
mov
imul
mov
rcrl
pop
mov
mov
fstp
outsl
pop
cmp
sub
ds
push
jmp
sahf
sub
cmp
add
xor
imul
loop
js
add
xlat
movsl
into
cmc
jle
loopne
je
mov
inc
js
or
xchg
push
and
in
int
mov
mov
and
mov
es
imul
into
gs
ds
xor
rcrl
push
lcall
stc
test
shll
movsb
push
out
rorl
data16
popl
mov
addr16
bound
add
cmp
int3
or
imul
push
int
mov
insl
adc
imul
fucom
lret
dec
cmp
rcrb
inc
push
aad
enter
push
sahf
lret
jne
jg
scas
push
sub
or
xchg
fnstenv
xchg
lahf
adc
das
or
cmpsb
cmpsl
sbb
popa
push
push
cmovno
inc
adcl
cmp
mov
pop
imul
dec
adcb
push
inc
imul
cmpl
popf
mov
xchg
outsb
insb
mov
ljmp
add
insl
js
dec
dec
xchg
mov
jb
enter
xor
int
rcr
inc
lods
push
mov
pop
sub
jne
xor
xorb
repz
cmpsl
rorb
or
mov
push
jns
rorb
fistps
add
add
sub
add
push
fsubs
mov
and
int
jmp
mov
or
fwait
push
out
repnz
adc
push
xor
out
fwait
push
inc
jae
aaa
mov
adc
stos
test
or
mov
xchg
xor
pop
lock
cmp
pop
mov
test
mov
push
sarb
aaa
and
rcll
pminub
sbb
inc
sti
lock
hlt
loop
adc
push
pop
sub
sub
negb
sbb
icebp
cmc
mov
aaa
mov
es
adcl
popf
push
cs
movsl
daa
pop
daa
cli
lret
adc
push
pop
pop
iret
ret
add
jmp
xchg
add
neg
sahf
xchg
xchg
add
sbb
cld
xchg
popf
fisttpll
mov
enter
mov
inc
mov
add
pushl
out
iret
dec
and
stos
out
adc
stos
je
lahf
push
repz
inc
cmpsb
mov
fisttpll
dec
pop
adc
xor
aam
mov
addr16
and
andb
pushf
fdivrp
jno
test
arpl
inc
sbbl
inc
mov
mov
sbb
jecxz
dec
lret
adc
imul
inc
and
push
cwtl
xor
push
in
push
popf
mov
inc
out
data16
lods
fmull
sbb
ja
adc
sub
in
mov
inc
sub
mov
icebp
adc
dec
xchg
inc
ljmp
xchg
sub
and
mov
mov
gs
inc
test
add
lahf
jle
sub
lds
sti
cmpsb
pmullw
xchg
inc
xor
jecxz
outsl
gs
xchg
fucom
into
mov
sahf
pushf
pop
cmp
inc
clc
mov
leave
arpl
or
cmp
cmp
inc
and
lock
xchg
jbe
fildl
lods
push
or
daa
imul
lahf
dec
or
mov
dec
cltd
dec
push
mov
fs
xchg
mov
ja
stos
shrl
filds
cmp
fwait
iret
movsl
lods
and
pop
sub
cmova
jbe
lcall
outsl
fisubl
pop
lcall
loope
mov
ret
repz
pop
test
lea
xor
sub
sar
inc
push
decb
std
or
add
cmp
aad
fbld
cltd
sbb
lcall
inc
mov
bound
push
fucomi
cmp
xchg
pop
or
adc
add
out
adc
mov
pusha
hlt
mov
lahf
inc
xchg
repnz
mov
inc
es
push
imul
inc
pushf
ret
push
or
pop
cwtl
mov
xchg
mov
jno
xor
aam
out
imul
dec
sub
inc
and
in
test
xlat
ljmp
push
sbb
call
jbe
mov
push
push
xchg
into
pop
test
ljmp
or
ss
pop
xor
and
cmp
ret
daa
inc
rcr
push
push
je
repnz
xlat
dec
mov
das
add
inc
cmp
jg,pt
jl
movsl
inc
nop
inc
xchg
mov
aaa
inc
pop
rcll
lcall
xchg
aad
call
xchg
jle
xlat
adc
mov
movsb
push
xchg
nop
inc
or
cmpsl
push
out
subl
push
add
daa
xchg
iret
rcll
fwait
stos
and
xorb
sub
adc
call
mov
sub
xchg
xchg
pop
and
mov
adc
pop
lods
rcrb
lret
cmp
cmp
xchg
push
out
push
push
push
mov
lods
mov
xchg
shlb
cmp
push
ss
jns
sti
add
ds
loope
mov
jl
add
cld
push
lcall
mov
sub
cmp
dec
adc
fistl
push
dec
int
xchg
clc
pushf
jl
pop
stc
pop
adc
loope
ss
jbe
rcrl
dec
sbb
xchg
pop
shlb
movsb
insb
movsb
and
xchg
cmp
test
cli
arpl
mov
add
lds
daa
fdivr
std
xor
mov
cmpsl
je
mov
pop
pop
adc
sub
sub
lods
mov
stos
push
jae,pt
mov
cmp
xchg
mov
fs
rcrb
mov
push
xchg
hlt
xor
stc
push
mov
pop
sbb
pop
sbb
mov
or
mov
adc
sti
jge
mov
jge
mov
cmpsl
fmuls
fnsave
push
xor
cmp
mov
xchg
in
mov
cmp
push
stos
pop
inc
pop
shl
push
adc
fdecstp
insl
inc
out
outsb
insl
and
xchg
cmpsb
cmp
xor
mov
jle
mov
insl
rcrb
and
out
mov
int
bound
add
arpl
sub
fdivs
jnp
cmc
cli
jns
mov
movsl
pop
in
in
fstps
jno
push
scas
jae
xchg
pop
and
xchg
sub
ljmp
xchg
push
repz
sbb
sbb
jge
aaa
les
inc
aam
dec
inc
sti
sbb
sbbl
mov
jl
inc
pop
cli
call
adc
imulb
xor
jb
leave
mov
in
inc
scas
and
fcoms
js
mov
pop
cwtl
push
lcall
mov
cmp
sbb
mov
int3
mov
pop
pop
nop
or
cmpsl
lock
out
test
xor
lcall
icebp
inc
and
sub
mov
inc
rcrl
add
push
sub
add
shr
xor
pop
mov
mov
bound
xchg
aad
xchg
and
dec
out
fisttps
xor
cmp
xor
adc
mov
int3
in
loope
outsb
xor
jge
test
out
jg
in
adc
push
push
mov
sbb
ret
xor
dec
call
push
mov
lods
mov
mov
pop
arpl
cltd
loopne
and
jb
mov
sub
ret
sub
xor
cmp
shll
sub
hlt
outsl
test
roll
or
add
lret
repnz
dec
int
jo
jo
mov
inc
dec
sbb
shr
lea
inc
mov
xchg
mov
sub
add
and
adc
jbe
pop
es
fimuls
sbb
das
add
js
or
std
lcall
sub
and
aad
adc
xlat
call
lea
push
out
and
jns
push
and
jp
or
xor
xchg
sub
sarb
inc
fwait
cld
stc
mov
lods
dec
aaa
push
or
fwait
call
ja
jns
mov
cmp
add
xchg
xchg
out
cmp
or
sub
ljmp
adc
pop
loope
imul
sbb
jmp
or
xchg
sbb
push
insb
insl
mov
hlt
ret
je
jb
clc
fsubrs
pop
jmp
and
cmp
mov
fwait
and
dec
xchg
cltd
mov
jmp
fsubs
pop
xor
xchg
icebp
lods
ljmp
jecxz
mov
mov
out
or
and
cmp
outsb
popf
xchg
cs
jp
loope
mov
jle
fldt
pushf
fwait
or
subl
cmp
jp
adc
jl
es
stc
jg
pushf
in
jl
es
sub
out
int
jbe
sub
loop
mull
cli
into
or
loopne
push
mov
jmp
scas
mov
jo
adc
pop
sahf
dec
inc
xor
sub
bound
popf
cltd
push
enter
leave
sti
dec
xor
sbb
ficomps
mov
sub
cmp
xor
lds
jnp
out
push
or
and
jl
int3
out
jp
lret
or
push
lahf
xchg
xchg
xchg
enter
mov
cs
xchg
add
into
sarl
ljmp
outsb
into
lret
and
xor
add
xlat
cmp
fnstenv
lds
inc
imul
xor
inc
adc
xor
std
push
push
insb
mov
jmp
adc
mov
mov
shlb
mov
push
xchg
and
stos
mov
clc
and
push
dec
out
pop
iret
jmp
dec
and
mov
ret
jnp
jle
or
sub
adc
outsl
test
mov
je
lods
push
xchg
stos
fstpt
je
fwait
sub
push
js
fs
pop
sahf
mov
dec
push
jno
or
and
movsl
sahf
mov
js
dec
and
dec
sub
fiadds
sub
xchg
daa
out
pop
jl
arpl
popf
adcl
mov
out
and
imul
mov
inc
sbb
dec
xchg
arpl
subb
out
mov
push
insl
sbb
imul
mov
cmp
push
mov
jae
cs
add
pop
jb
add
sub
outsl
mov
js
mov
add
fs
or
push
mov
ret
add
hlt
jmp
xchg
ret
mov
push
loope
xor
daa
movq
movsb
rcl
mov
arpl
jnp
mov
cmpsl
pop
push
sbbl
sbb
adc
inc
jb
add
lea
hlt
mov
sub
rolb
loop
cmp
lods
dec
pop
jb
test
mov
out
iret
arpl
orl
and
arpl
xchg
sbb
insb
arpl
clc
mov
cltd
bound
mov
test
arpl
out
mov
ss
addr16
xchg
push
shl
loope
cmp
fsts
pop
mov
leave
mov
fists
out
lret
sub
int3
mov
repz
lock
xchg
addr16
cmpsb
cld
xchg
mov
cld
pop
pop
fldcw
xlat
cld
sti
aas
push
or
pop
xchg
in
imul
cmp
mov
cld
cmp
mov
adc
xor
into
data16
shlb
push
mov
sub
mov
mov
int
mov
mov
push
fldcw
ror
out
mov
xchg
jbe
nop
lock
lahf
cmp
ds
in
fildl
sahf
sbb
lods
mov
sti
fnsave
jns
stc
adc
mov
xchg
xchg
mov
les
das
jbe
loope
cmp
push
add
mov
loopne
jae
dec
add
and
pop
icebp
cltd
enter
int3
scas
cmp
sub
iret
aad
sbb
fcoml
xchg
mov
mov
and
sbb
cmp
mov
ja
and
jg
hlt
jmp
daa
cmc
ss
jb
and
mov
test
mov
push
mov
pop
cwtl
popa
add
sub
orl
jno
and
inc
jmpw
xchg
push
cmp
pop
es
adc
outsb
jbe
repz
xlat
test
in
cmp
dec
cmpsl
cmovl
stc
jne
in
push
and
mov
stos
cmp
and
mov
mov
mov
in
cmp
pop
lret
add
inc
lret
push
mov
iret
jl
fcmovu
sbb
cld
test
mov
mov
mov
add
fmuls
dec
xor
lahf
lods
in
mov
bound
push
pop
iret
negl
ds
ret
jmp
ficomps
push
idiv
mov
std
cmp
mov
stos
mov
fnstsw
insl
fcmovne
pop
aad
cs
cmp
jnp
inc
sub
data16
dec
mov
shrl
mov
or
mov
ss
dec
mov
mov
lods
leave
or
mov
and
xor
aas
push
sbb
test
pop
imull
ds
movsl
mov
dec
and
cmp
out
jbe
mov
push
mov
mov
lods
daa
fucomip
pop
movsl
push
data16
mov
mov
ret
adc
sti
adc
sahf
fisubrs
cmp
in
inc
mov
ret
jne
js
cwtl
aaa
add
sti
and
sarb
lods
and
inc
xchg
hlt
pop
dec
jnp
in
insb
add
mov
add
sti
cmp
xor
push
fcmovnbe
fmulp
andb
call
mov
jmp
xor
out
mov
dec
sbb
adc
xchg
lret
cs
popa
xchg
jno
cmp
lds
aam
pop
js
pop
jo
ds
adc
mov
loope
inc
loop
pop
xor
fucomp
sub
rorb
fadd
incb
push
cmp
dec
shll
add
sub
mov
test
into
insl
dec
pop
jp
in
jnp
sub
insb
and
sbb
js
jns
pusha
pop
and
lret
or
inc
notrack
imul
and
ficoms
mov
inc
test
stos
sti
pop
scas
fwait
mov
mov
lea
adc
repnz
add
fiadds
or
cmc
pop
mov
es
in
push
jno
add
mov
out
in
xlat
push
jge
pop
pop
or
xchg
sahf
sub
jmp
nop
push
lcall
pop
sbbl
mov
jg
sub
inc
jmp
ret
jb
in
xor
cld
std
orl
pop
scas
sbb
or
out
jbe
pop
stos
bound
sub
cli
dec
inc
stc
cmp
mov
mov
jnp
pop
std
sub
outsb
xor
out
xor
in
add
xor
loop
inc
mov
in
test
mov
pushl
dec
les
add
cmp
add
mov
or
add
movsl
in
cltd
mov
mov
in
adc
insl
aaa
out
in
adc
adc
fiadds
sbb
fcmovbe
dec
roll
xor
lds
or
mov
dec
push
jae
cmpsl
int3
imul
jb
mov
xchg
cli
pop
mov
add
xlat
jg
sub
dec
mov
jg
inc
rorl
sarb
cmp
mov
mov
mov
lods
shl
fstl
jecxz
out
mov
dec
lret
adc
inc
lcall
lcall
pop
cmp
lods
cwtl
or
dec
add
fcomp
divl
adc
and
xor
xor
push
add
ja
pop
cmpl
aad
dec
sbb
dec
pop
and
xor
and
call
and
sub
inc
push
mov
pop
xchg
dec
loopne
jecxz
arpl
icebp
inc
and
mov
push
inc
nop
stc
adc
or
adc
add
fisttpl
mov
je
sub
pop
cmp
mov
addr16
or
jae
in
leave
lods
jae
mov
xchg
bound
ljmp
pushf
lret
pop
addb
push
hlt
sbb
lods
add
cmc
jnp
jne
pop
xchg
roll
push
add
int3
ljmp
aas
sbb
gs
data16
push
adc
jmp
aas
pop
inc
ss
cmp
jo
sub
lea
pusha
push
xchg
out
sbb
mov
test
test
test
test
out
pop
sub
and
mov
pop
out
sub
stc
test
pop
mov
insl
ja
sbb
out
mov
inc
mov
mov
test
enter
dec
in
adc
and
js
dec
cmp
jmp
loop
fsubrs
push
cltd
testl
jns
in
popf
push
imul
jp
add
shl
push
push
jnp
daa
mov
gs
loop
fisttpl
ret
loope
nop
add
into
rorb
insb
jle
leave
cmpsl
ret
lahf
sbbb
inc
repnz
dec
xorb
push
push
and
xchg
or
xlat
dec
jae
rolb
dec
xchg
pop
int
sbb
inc
jge
add
movsb
test
leave
pop
and
xchg
cmp
pop
cs
out
sbb
jmp
fdivrl
das
mov
mov
mov
mov
push
lret
test
std
jbe
sahf
inc
out
test
scas
xchg
lock
stc
pop
mov
lock
pop
sbb
icebp
push
xchg
into
jmp
push
push
popa
adc
pop
pop
xor
ret
fcmovnb
or
repnz
sbb
arpl
lds
jl
sub
adc
out
jmp
ret
jle
jmp
adc
insb
mov
jbe
add
adcl
add
sbb
sub
pushf
push
es
in
sbb
mov
ret
int
dec
je
sub
ret
pop
sbb
aas
aas
xchg
xchg
adc
cld
cwtl
loope
lcall
mov
rcll
mov
popf
mov
jo
fnstcw
gs
ret
pop
aam
mov
mov
call
iret
daa
insl
mov
add
jp
and
es
popf
cmp
jae
add
loope
mov
cli
dec
sub
stos
cmp
cmpl
jmp
bound
xor
scas
mov
push
mov
dec
mov
mov
xchg
enter
push
movsl
and
adc
daa
clc
push
aam
cmp
push
rolb
mov
faddl
js
stos
inc
sti
dec
insl
sbb
inc
xchg
cmp
push
xor
add
in
and
mov
xor
mov
repnz
jo
js
dec
sub
mov
dec
fisttps
out
xchg
cmp
or
mov
push
jge
mov
movsb
fdivs
mov
push
enter
adc
mov
or
sahf
jge
and
fcmove
cmp
lods
add
lock
loope
sub
pop
data16
call
push
ss
inc
fwait
mov
repnz
stos
jp
mov
cmpsb
cmp
push
mov
cmpsl
movsb
pop
pop
and
sub
jg
subl
mov
push
mov
jle
xchg
mov
test
jmp
ds
pop
in
shll
and
test
xchg
jns
mov
xchg
mov
ljmp
push
cld
aad
shll
xor
mov
cld
scas
sbb
imulb
jecxz
stc
push
and
loop
rorl
or
pop
movsl
fwait
cmp
xchg
jns
lods
lcall
cmpsb
xchg
pop
inc
mov
mov
push
aas
mov
repz
cmpsb
jp
xchg
loopne
pop
inc
lea
mov
add
lret
inc
jne
adc
movsb
mov
mov
sarb
adc
xor
mov
out
inc
push
mov
stos
int
mov
in
test
ljmp
add
out
jnp
sub
mov
inc
ret
loope
aam
jecxz
adc
xor
cld
scas
lahf
lcall
push
inc
jnp
pop
movsb
and
imul
scas
mov
cmpsb
mov
xor
add
jno
xchg
xchg
xchg
cwtl
mull
add
inc
scas
in
xor
int
adc
add
stos
outsb
call
shrb
jb
pop
test
dec
cmpsl
in
mov
jbe
push
push
dec
iret
out
psubd
lods
or
cmp
cmp
dec
cmp
jle
and
jbe
aad
rolb
jo
leave
in
and
adc
leave
mov
lahf
jle
mov
xchg
rcl
add
outsb
mov
insb
imul
sub
outsl
iret
and
jbe
add
and
pusha
sbb
xor
gs
push
pop
cmp
sarb
gs
out
xchg
lods
mov
leave
add
push
mov
mov
ret
mov
pcmpeqd
cmp
push
in
cs
mov
push
or
lea
jns
xchg
out
cld
sarb
and
ds
push
cmp
push
insb
pop
cmp
xor
rorb
mov
inc
push
mov
push
into
mov
push
add
fnstsw
or
or
inc
cmp
mov
inc
push
dec
test
repz
xor
xchg
adc
jl
popa
dec
andl
mov
xor
sbbl
xor
cmp
fiadds
aaa
jmp
std
in
or
addr16
push
test
pushf
test
and
mov
popf
out
jge
es
jecxz
nop
jecxz
insb
jnp
in
out
push
xorl
cmpsl
sub
sub
mov
jo
pop
bound
and
insb
iret
dec
push
in
shlb
out
push
shll
xor
cmp
dec
adc
xchg
inc
lods
sti
leave
mov
stos
sbb
mov
fcmove
imul
loopne
loopne
sub
dec
mov
and
and
mov
dec
mov
cmp
mov
mov
pop
push
adc
jae
xchg
popf
iret
push
inc
aaa
pop
inc
or
mov
and
pop
pop
pusha
movsl
rolb
nop
rorb
jo
in
pop
in
mov
pushf
pop
push
pop
decl
mov
sbb
cmp
loop
aad
gs
dec
dec
add
movb
stc
in
mov
inc
sbb
jmp
inc
out
int3
std
xor
inc
jns
adc
out
icebp
fwait
je
push
insl
mov
adc
dec
mov
es
push
movsl
cmc
movsb
int
sbb
mov
and
add
cmp
addr16
in
stos
cmp
popf
dec
negb
daa
add
rolb
popf
out
insb
loopne
int3
lret
and
sbbl
adc
inc
movsl
faddl
int
jne
xchg
out
mov
mov
jp
sbb
push
in
mov
aam
adcb
xlat
adc
sbb
jl
sbb
cmp
cmp
repnz
cmpsl
xchg
xor
clts
dec
cmp
fisttps
insb
stos
pop
pushf
scas
push
iret
cmpsb
imul
out
push
jp
inc
inc
push
inc
mov
jg
mov
mov
cltd
sub
adc
jns
xor
jge
fnstcw
dec
idivl
adc
xchg
add
xchg
push
and
push
sbb
push
dec
jg
xchg
in
jecxz
xchg
insl
cld
popf
test
xchg
push
push
pop
add
negl
add
adc
or
push
aaa
sub
ljmp
dec
jae
push
push
mov
inc
jns
or
sbb
ret
sub
push
lahf
in
jge
xor
repz
mov
shll
add
xchg
mov
dec
incb
add
mov
push
mov
js
lahf
xor
nop
aam
xchg
mov
or
out
jle
mov
loope
jmp
insl
cs
mov
lret
jo
out
in
stos
into
rclb
hlt
add
outsl
insl
mov
pop
dec
jo
push
xchg
jp
mov
mov
add
cmp
and
xor
loopne
aas
inc
orl
rcll
aad
mov
dec
ja
mov
sti
sbb
outsb
add
loopne
test
roll
pusha
cmp
push
push
gs
leave
jl
dec
cld
xacquire
and
fsubrl
mov
mov
jo
shlb
push
cltd
out
xchg
sbbb
adc
out
lods
or
pop
inc
mov
and
push
cmpsb
add
cmp
cmp
enter
inc
add
cmp
push
add
inc
push
jg
push
fwait
aad
ss
jb
stos
jne
adc
push
jmp
stos
popf
mov
mov
dec
js
in
or
lret
mov
das
jle
jae
pushf
test
adc
bound
sarb
addb
push
inc
cwtl
cmpsl
bswap
xor
sub
gs
pop
mov
icebp
or
push
mov
mov
sub
call
loopne
notl
adc
jno
clc
xor
std
or
cltd
enter
push
iret
mov
dec
mov
scas
or
icebp
adc
out
int
jb
or
imulb
enter
cwtl
scas
fiaddl
repnz
push
out
adc
mov
in
test
enter
xchg
daa
lcall
xchg
push
xlat
xchg
add
shlb
aam
and
inc
pop
je
mov
loop
fldenv
and
fildl
mov
sarl
mov
or
mov
mov
jno
mov
pop
popf
xor
xlat
add
mov
enter
cs
scas
outsb
lcall
hlt
cmpsb
or
inc
inc
in
adc
and
fs
rclb
out
dec
loop
adc
and
nop
incl
jo
aam
scas
pushfw
sub
cld
mov
pop
fcmovnu
sbb
add
mov
dec
pusha
lea
push
sub
not
fs
fsts
pushl
inc
in
xchg
fisttps
cld
push
das
mov
clc
aad
cmp
xchg
inc
jno
xchg
out
fistl
xor
leave
out
mov
js
lock
sbb
jnp
mov
cmpsb
ljmp
test
mov
mov
jne
xor
jle
dec
cmp
inc
sahf
xlat
push
out
and
mov
repz
dec
mov
push
stos
push
jbe
ret
mov
mov
nop
testl
xchg
xchg
js
aad
lods
sub
movsl
mov
loop
xor
xlat
rorl
add
inc
adc
push
daa
ja
mov
loop
xor
add
sub
lcall
out
movw
mov
jns
pop
push
cld
addr16
faddl
mov
xorl
xchg
mov
sub
jmp
mov
push
mov
imul
mov
sti
jle
adc
mov
pop
dec
xchg
lcall
cmp
sub
lock
stos
push
aaa
sub
fst
movsl
dec
movsb
jb
xor
pop
mov
xchg
jmp
js
jno
mov
xchg
test
daa
adc
movsb
add
or
cmp
cltd
cwtl
pop
mov
cmp
fst
lds
ss
push
in
xchg
faddl
cmp
leave
cmpsl
pop
inc
scas
orl
xchg
mov
cmc
clc
mov
cwtl
and
sub
pusha
pop
mov
mov
sub
hlt
xor
jns
adc
sti
das
movsb
push
jae
add
sbb
fs
push
mov
sub
out
lea
stos
fucomi
jbe
adc
push
outsl
jns
dec
or
jl
cld
mov
shl
push
data16
das
fs
xchg
xchg
push
xor
mov
push
sahf
aad
adc
mov
stc
das
ret
mov
pop
jmp
arpl
push
lods
loop
add
add
cmp
pop
mov
ret
loop
test
xchg
sbb
mov
scas
mov
rorl
lods
pop
orl
push
xchg
insb
lock
and
fnstsw
imul
lahf
iret
cmp
push
inc
pop
sub
test
xor
push
mov
xor
jge
subl
xchg
inc
cmp
bswap
xchg
sahf
and
cld
add
popf
sub
scas
push
sbb
sti
cmp
mov
je
mov
mov
movl
cmp
mov
push
mov
and
pop
pusha
flds
lcall
sbb
or
dec
in
dec
fnstenv
jg
movsl
mov
pop
ja
mov
jns
lret
sbb
jp
push
loop
sar
in
ljmp
jmp
jae
inc
sarb
pop
pop
add
mov
xchg
jo
mov
shlb
push
inc
orb
lea
std
xlat
and
cs
dec
xor
push
add
jmp
scas
sub
out
xchg
in
mov
push
or
xor
and
mov
mov
test
push
push
add
cmp
in
cmc
idivl
lods
imul
fwait
add
mov
bound
adc
pop
setno
iret
mov
sub
jmp
mov
pop
or
outsb
insb
imul
or
inc
popa
cmpsb
pop
pop
das
mov
stos
mov
cmp
sub
lds
insl
or
mov
arpl
in
or
lock
xchg
lcall
dec
imul
sahf
out
and
adc
xchg
cwtl
pop
mov
jae
xchg
insl
add
lahf
adc
mov
ffree
mulb
test
pop
in
sbb
addb
mov
into
fildll
or
xchg
inc
daa
and
push
sub
jno
lea
jmp
mov
lcall
decl
pop
subl
iret
push
cmc
push
imul
rorb
loop
fistl
leave
orb
add
xchg
xchg
xchg
in
inc
gs
jmp
jl
xor
loopne
mov
shl
scas
xor
loope
push
push
and
incb
dec
mov
inc
leave
enter
add
adcl
call
inc
jae
sti
and
push
mov
push
xchg
pop
push
orb
jl
dec
mov
lds
jne
jbe
mov
dec
mov
adc
ficoml
add
or
jo
pop
dec
jne
xchg
mov
add
je
push
cmp
pop
fwait
inc
sub
scas
insb
inc
out
xchg
jp
pop
or
idiv
xor
sbb
loope
imul
pop
sbb
insb
add
xor
pop
push
lret
jb
fs
inc
test
pop
sbb
pop
aam
push
lods
lahf
add
cld
in
xor
sbb
popf
inc
aam
mov
cmp
repz
fnop
push
fnstsw
or
add
cmp
test
scas
xor
lcall
push
lcall
xchg
jl
sub
push
sbb
call
loopne
add
or
lcall
mov
mov
cwtl
je
pop
sub
jge
adc
mov
jb
push
fisttpll
clc
rcrl
and
sbb
push
mov
fmuls
daa
pop
jnp
adc
add
outsb
out
hlt
mov
or
push
mov
fstps
sarb
pop
xchg
addr16
sub
inc
mov
push
add
int3
mov
mov
cmp
mov
sar
outsl
ds
mov
mov
push
inc
push
xor
sub
and
fimull
and
cld
fwait
inc
jo
repz
int3
adc
and
dec
push
cld
push
shrb
aaa
inc
jbe
sbb
stos
outsl
gs
into
adc
cmp
jl
lods
mov
pop
jmp
or
lcall
movsb
fwait
and
arpl
loop
sarb
pop
xchg
fs
iret
loop
mov
fistpll
js
xchg
or
pop
push
imul
adc
fs
mov
and
clc
sti
out
or
pop
les
mov
xchg
roll
add
sbb
les
inc
shll
xor
xlat
add
inc
int3
dec
xchg
cmp
pop
add
or
xor
rcrl
aas
jg
jecxz
mov
scas
fimuls
mov
les
or
sbb
xor
outsl
insl
stos
aam
or
inc
mov
into
loopne
adc
insl
loop
loope
mov
movsb
push
xor
cmpsl
mov
out
sarl
inc
xor
mov
sub
stos
xchg
add
adc
pusha
inc
loope
cmpsb
pop
jge
out
imul
jl
xor
xchg
add
inc
aas
bound
and
xchg
cmc
fcomps
sub
add
cmp
xor
fs
pusha
mov
mov
ds
out
and
pop
scas
push
iret
fsubrl
mov
adc
shlb
int
out
fldenv
xor
ljmp
or
lea
push
fcompl
movsb
and
push
adc
clc
ja
dec
mov
das
fucomip
sbb
push
fs
ficompl
push
mov
ss
loop
js
dec
sti
xchg
xlat
fcompl
mov
outsb
out
push
add
dec
push
fldl
push
scas
shlb
insb
mov
leave
mov
aad
popf
outsb
dec
or
inc
mov
pop
add
nop
cmp
cmp
loopne
adc
ret
inc
pop
addr16
and
pop
dec
es
jo
and
cmpsb
jnp
rclb
inc
or
add
or
gs
test
test
mov
in
pop
ds
mov
nop
test
int3
jl
inc
jge
outsl
fcmove
dec
mov
jne
mov
data16
push
mov
jge
cmp
outsb
xor
cmp
mov
jmp
sub
jecxz
mov
push
push
cmpsb
test
mov
jle
inc
popf
dec
dec
jbe
icebp
fstl
lret
enter
and
xor
xor
in
ficoms
into
sbb
aas
cmp
xor
jae
push
jae
jno
pop
ss
mov
inc
push
jp
cmp
cmp
sbb
dec
stos
ja
fildl
pop
loope
scas
or
dec
sub
mov
dec
push
xchg
cli
xchg
sub
jb
es
scas
outsl
mov
insb
dec
test
mov
pop
pop
jmp
jp
int
dec
cmpb
pop
popf
iret
stos
jbe
leave
rolb
lock
jg
mov
push
or
iret
xchg
xchg
adc
add
stos
mov
dec
call
jp
in
lea
insb
inc
add
or
push
in
cmp
cltd
test
mov
and
fisttpll
sub
dec
sbb
sub
popf
out
lods
jmp
jo
lcall
inc
roll
and
test
adc
cs
dec
mov
call
insl
jl
or
rcrb
mov
cmpb
test
rorb
mov
pop
mov
rclb
xchg
mov
sbb
movsb
div
sub
cmp
mov
cmp
pop
roll
jno
fisttps
jmp
add
push
push
jmp
mov
xchg
inc
sbb
int
das
pop
scas
gs
inc
pop
repnz
fcomps
xchg
mov
pop
outsl
sub
idivl
xchg
insl
in
test
sbb
push
in
enter
mov
in
mov
addr16
adc
dec
sub
outsl
jno
movsb
xor
jp
sub
fdivl
dec
push
mov
test
mulb
mov
fisttps
arpl
std
mov
in
dec
js
xchg
xchg
mov
add
nop
shlb
sbb
pop
add
push
pop
into
jge
in
dec
dec
scas
or
arpl
pop
icebp
dec
xchg
or
lahf
punpckldq
aas
sbb
mov
push
lock
mov
in
fsubl
sti
push
xchg
inc
fimull
sub
rorl
in
decl
push
cmp
mov
loope
out
sbb
pop
outsl
xlat
jp
and
pop
sbb
ret
sub
cmpl
adc
dec
jbe
xchg
iret
inc
xor
xchg
push
inc
int3
out
dec
jnp
loope
imul
loopne
sbb
pop
ljmp
sub
cmp
pop
and
call
pop
fildll
test
push
hlt
mov
sbb
mov
mov
nop
and
cmp
cwtl
cmp
xor
or
fs
jmp
bnd
mov
inc
lods
test
lcall
out
mov
int3
pushf
int
sub
mov
push
ds
sub
mov
outsb
lock
dec
rolb
loop
mov
cmp
push
rcl
xchg
movsb
aas
enter
pushf
bound
fwait
adc
or
push
je
sbb
sub
cmc
xchg
sub
dec
add
add
xchg
mov
in
mov
xchg
sub
lret
cmc
xchg
cld
stos
inc
mov
stos
jle
es
fcmovnbe
mov
xchg
pop
dec
mov
add
add
cli
or
data16
inc
out
cmp
int3
add
jp
add
xor
push
mov
imul
lcall
in
mov
test
xor
pop
adc
inc
jge
mov
outsl
or
sub
jbe
or
dec
cld
cmpsl
ror
into
cmp
or
or
lods
xchg
jg
lret
mov
adc
fcomps
dec
jge
lcall
int3
push
jnp
fwait
cmp
dec
jl
xor
lret
and
mov
into
xor
adcl
shrb
addr16
inc
jmp
xchg
outsl
jbe
jmp
out
in
shll
loop
cmp
mul
mov
cmpb
and
pop
test
ja
jo
and
out
inc
jne
jbe
test
push
js
mov
ret
xor
ss
push
push
xchg
jl
pop
lret
gs
jne
mov
lahf
fistps
sbb
imul
pop
nop
lea
dec
iret
pop
bound
in
jg
cwtl
outsl
lret
mov
jbe
mov
das
insl
pop
sbb
imul
pop
mov
inc
mov
stos
pop
aam
add
test
call
jns
xor
jmp
mov
sti
dec
xor
inc
les
jp
and
cltd
and
enter
adc
call
sub
dec
jns
aaa
mov
sub
data16
or
xchg
mov
mov
sbb
jns
insb
test
xchg
movsl
xor
xchg
std
insl
jmp
cmpsb
push
xchg
cmpsl
fs
mov
scas
pushf
lods
popa
xor
pusha
leave
cmpsb
adc
xchg
xor
stc
jne
das
add
fiadds
fisubs
lcall
mov
ret
mov
idivl
ret
mov
push
push
testl
adc
incl
push
test
aam
cmc
stos
xchg
push
aad
cmp
sahf
sbb
jns
adc
bound
pop
adc
jo
nop
jnp
adc
into
add
mov
adc
mov
xchg
cmp
pop
movsb
arpl
mov
test
or
xor
mov
movsb
pop
mov
gs
xchg
xchg
or
sub
ss
ljmp
mov
push
sarl
xchg
inc
icebp
or
sub
jne
inc
jp
and
mov
cltd
cmp
fldt
subb
adc
mov
jns
test
int
lcall
xchg
imul
mov
pause
push
and
push
sahf
divl
inc
out
adc
negb
inc
dec
jbe
decl
inc
lret
push
push
inc
loope
adc
xchg
xchg
sbbb
fwait
sub
pop
ror
imul
sbb
popa
or
xor
outsl
jo
adc
stos
leave
jnp
sub
add
pushf
sahf
in
mov
pop
stos
stos
pop
in
jmp
inc
sub
and
dec
mov
jl
fisttpll
sub
cltd
mov
fdivrl
jg
fiadds
jmp
xor
loopne
add
push
int
loop
inc
out
xlat
aad
es
test
or
push
or
in
int3
xchg
repnz
sub
dec
orb
cmc
add
loope
xchg
pop
lahf
adc
stos
xorb
add
push
shll
pop
add
add
xchg
hlt
mov
cmp
fldenv
pop
xchg
shrb
pop
or
loop
cmp
ljmp
adc
push
fisubs
mov
into
das
movsb
icebp
je
cmp
cld
popa
mov
sbb
arpl
xor
shll
sar
clc
add
inc
fsubrs
pop
fwait
call
sub
cmp
insl
and
out
xchg
ror
mov
and
xchg
lods
insl
mov
push
jg
arpl
mov
xchg
imul
sbb
orb
call
fwait
vmovntps
push
push
out
icebp
push
outsl
jl
sarb
addr16
gs
mov
stos
fcmovb
sub
leave
clc
in
push
sub
fadd
sbb
fwait
push
lret
or
and
mov
push
fisttps
jne
lds
or
lret
icebp
lods
inc
jae
push
xchg
fsubrs
cli
sbb
ja
pop
xor
add
mov
dec
sub
ljmp
add
dec
cli
add
or
in
cmp
inc
push
fwait
js
push
addb
jno
popa
repz
push
std
mov
data16
icebp
arpl
jnp
leave
add
xor
mov
sub
arpl
negb
mov
dec
iret
test
icebp
in
ljmp
push
imul
jne
adc
aad
xor
cs
ret
cld
and
int
movsl
pushl
jb
sbb
sbb
mov
xorl
push
subb
pushf
andl
inc
jle
sub
shl
xchg
add
clc
pop
jb
jp
mov
inc
xchg
into
cmp
sar
out
pop
int
mov
lcall
rol
mov
or
ret
sahf
and
add
lret
dec
pop
push
ljmp
inc
sub
testl
adc
mov
cld
xor
xchg
inc
and
icebp
js
adc
xor
arpl
into
inc
mov
inc
add
inc
popf
xchg
or
aad
mov
fs
mov
push
orb
jl
movsl
fdecstp
inc
xchg
mov
xorb
jg
pop
mov
dec
out
sub
sti
cwtl
lret
inc
leave
push
in
imul
mov
sbb
adc
cmc
or
pop
xchg
dec
loope
ret
mov
mov
cld
je
outsl
movsb
inc
dec
mov
shrl
rclb
das
ret
xchg
xchg
jle
sti
aam
mov
and
js
inc
mov
or
lock
pop
mov
imul
lret
push
and
mov
xchg
mov
inc
stos
fnstcw
outsb
inc
xor
and
fists
mov
and
int
xor
push
addr16
sub
sub
xchg
int3
cld
insl
adc
lds
xchg
and
test
repnz
pop
scas
mov
jmp
sbb
lcall
cmpsl
aaa
xchg
add
inc
jns
cmp
outsb
lcall
add
pop
mov
or
add
fidivrs
gs
rclb
add
pushf
inc
cltd
in
imulb
add
aas
test
mov
jb
add
sub
lahf
and
pop
jbe
adcl
sub
adc
pop
ret
cmp
xchg
and
call
sbb
jno
jnp
and
stos
cltd
cmc
jbe
push
dec
cld
cs
push
push
xor
fistpll
push
cmpsl
or
mov
scas
push
lahf
push
pop
push
sbb
fs
in
mov
ret
xor
arpl
test
mov
rcrb
push
pop
push
in
push
dec
mov
mov
lret
pop
clc
sub
lahf
mov
cmpsb
cld
cmc
cmp
out
sbb
in
sbb
imul
fiadds
xlat
fimuls
fs
scas
jecxz
adc
leave
xchg
sahf
lahf
testl
xor
pop
mov
aaa
loopne
pop
repz
test
cwtl
lahf
ja
lods
sahf
sub
jp
jl
popf
cmc
lods
mov
pop
dec
insl
addr16
pop
cltd
leave
sub
mov
adc
lds
les
sub
lock
cmp
inc
xchg
dec
mov
ja
xchg
add
push
lcall
jg
aad
jne
fcmovnu
mov
sahf
add
sbb
loopne
adc
lahf
xchg
aaa
push
jno
mov
cmp
xchg
lods
sbb
or
and
cmpsl
adc
fwait
iret
cmpsb
dec
fnstenv
pop
test
adc
push
dec
jle
and
lahf
and
aaa
sub
mov
popa
and
mov
adc
cmp
mov
mov
jno
in
jge
les
dec
testl
lahf
and
dec
cli
lods
pop
mov
rcrl
fidivs
xor
inc
lea
xchg
scas
inc
adc
sub
mov
xor
xlat
call
cmp
sbb
jmp
xchg
push
pop
mov
incl
mov
les
loopne
dec
shlb
push
jge
mov
mov
mov
andb
pop
fsin
add
sbb
aas
fsubs
adcb
movsb
sbb
test
push
sbb
gs
lret
int3
add
leave
mov
dec
subl
sbb
xlat
in
cmp
xlat
data16
imul
fdiv
add
push
sbb
push
fbld
push
dec
sbb
jecxz
mov
inc
push
in
cmp
sbb
popa
dec
ja
push
repz
pop
in
add
pop
xor
inc
cmp
aaa
aad
mov
jns
testb
mov
cmp
inc
out
jle
imul
dec
adc
pop
inc
xchg
insl
imul
jge
icebp
pop
adc
xor
cmpsl
and
movsb
std
adc
mov
xchg
fs
aas
mov
mov
insb
std
mov
mov
roll
xchg
iret
loop
jle
into
adc
shrl
push
or
lret
imulb
mov
repz
dec
cld
nop
add
dec
cmp
lcall
lret
push
mov
pop
mov
sub
notb
add
mov
iret
inc
xchg
ds
sti
cs
daa
rcll
dec
int
subb
push
cmpsb
mov
push
xor
movsb
enter
lock
test
sbb
cld
mov
mov
int
pop
sub
ljmp
add
and
jmp
cli
push
hlt
sbb
or
dec
sub
scas
in
mov
add
sub
and
xor
lea
clc
xor
cld
ljmp
pop
fimuls
shl
fisubrs
and
push
popa
sbb
add
negb
loopne
jl
ljmp
jae
clc
dec
ja
test
fs
subl
outsb
mov
es
test
sbb
pop
shll
stc
push
sbb
lock
xor
adc
and
lahf
test
jg
pop
xor
mov
xor
popa
jb
in
ljmp
sbb
cltd
pop
xchg
cmp
and
inc
sub
daa
cmpsl
xchg
xorb
cli
adc
push
sti
sub
subl
and
xchg
mov
jmp
shl
repnz
inc
hlt
adc
or
insb
enter
add
dec
jne
cmp
sub
or
fisubrl
and
adc
lahf
cmp
mov
xchg
push
into
mov
dec
aad
adc
fs
imul
movsl
shl
mov
push
add
fwait
and
test
sti
out
out
sbbb
and
add
sub
dec
and
ss
ljmp
xlat
xchg
mov
out
test
cmpsb
mov
inc
iret
rorb
cmp
addr16
inc
jns
or
cld
inc
fisubl
cli
movsl
out
xor
and
push
add
inc
mov
pushf
cwtl
fimull
lcall
lret
push
std
outsl
in
sahf
xlat
data16
mov
or
pushf
cmpsl
aam
lock
lea
sbb
pop
mov
and
andl
test
pop
sbb
mov
mov
or
idiv
in
push
inc
in
mov
dec
lret
adc
movsb
or
popa
leave
fmull
sbb
in
push
push
xchg
les
mov
dec
ret
dec
fimull
cmp
std
xor
ljmp
shll
inc
xor
dec
in
push
cmc
cmpsb
and
fwait
lret
call
imulb
pushf
pop
sub
xlat
and
pop
push
cmc
xchg
aaa
inc
cltd
inc
jo
in
mulb
fsubp
inc
jl
jg
pop
stos
push
or
jg
ret
pop
mov
jp
add
jle
push
sub
pop
xchg
pop
rcll
fidivrl
aas
loop
fistps
mov
stc
lret
pop
adc
adc
jae
out
jle
pop
mov
and
loopne
adc
mov
adc
out
sub
sub
or
mov
das
push
xlat
push
cmc
imul
pop
and
mov
sbb
sub
arpl
sub
popf
inc
adc
xorl
fs
addr16
jnp
mov
cmpsl
out
daa
sbb
das
adc
jne
mov
cld
or
and
sahf
out
or
push
and
xchg
adc
cltd
push
ja
adc
or
ljmp
fbld
mov
mov
daa
xor
sbb
xor
jb
or
fsubrl
jns
in
sub
stos
stos
andl
je
ds
out
push
xchg
loope
mov
inc
lea
mov
cs
repnz
xchg
xchg
add
cmp
ror
clc
in
loopne
outsl
pop
testl
inc
mov
cmp
pop
cli
cmc
push
insl
nop
lcall
movsb
mov
fidivrl
dec
mov
sub
bnd
inc
les
pop
scas
es
push
ljmp
push
fcomp
xchg
test
cmpsb
push
jp
out
cmp
les
xor
dec
inc
sti
ss
push
dec
cmp
lcall
fmuls
dec
push
adc
sti
pushf
xlat
and
adc
and
or
cmp
jnp
fldcw
ds
loope
pop
mov
clc
idiv
mov
jne
loopne
pop
daa
sub
shlb
jge
jmp
inc
clc
iret
popl
dec
or
repnz
inc
rorl
push
push
xorb
xor
or
cwtl
or
xor
sahf
int3
pop
xchg
popa
jl
fs
mov
or
cmpsb
lea
xorb
mov
popa
movsb
xchg
test
and
fidivrl
or
fiadds
push
out
lahf
loopne
pop
xchg
data16
add
cmp
mov
pop
rcrl
fucom
fisubl
pop
ss
lret
test
push
pop
and
and
dec
pushf
sub
mov
or
cwtl
and
in
in
cmpb
and
fcompl
and
mov
popa
mov
push
outsl
sti
sahf
lods
sub
xchg
sub
call
out
inc
lret
sarl
add
bound
pusha
xor
mov
ffreep
mov
stos
ret
dec
test
in
test
mov
fistpll
pop
insb
imul
cmc
pop
ret
insb
mov
sbb
jle
je
pop
push
sbb
jo
popf
loopne
lods
push
repz
sbb
xor
add
dec
in
std
fcoms
aad
push
jge
mov
test
in
jp
and
xor
mov
clc
cmc
xor
and
div
sbbl
mov
push
jb
test
outsl
push
sub
push
mov
fldlg2
lods
mov
adc
aaa
int
enter
add
add
jmp
movsl
adcb
leave
out
push
adc
push
push
pushf
inc
jae
push
mov
mov
mov
andl
ljmp
iret
ljmp
in
fsubs
push
inc
mov
jnp
xchg
ficomps
push
iret
inc
cmp
nop
sbb
mov
sbb
aas
sbb
cld
testl
cld
cmp
call
lods
jle
push
int
in
mov
cltd
adc
test
sub
mov
sub
mov
mov
xor
adc
jl
fistps
aaa
mov
push
xchg
mov
int3
scas
xor
sub
dec
dec
bswap
inc
sarl
sti
fstpt
cmp
push
mov
in
inc
repz
adc
cld
lea
sbb
add
push
xor
inc
xor
mov
jmp
add
das
xchg
int3
mov
mov
dec
fnsave
xor
out
gs
xchg
dec
popf
mov
scas
inc
mov
mov
pushf
rclb
mov
fcmovu
ficompl
das
sub
leave
push
xchg
test
jmp
xor
adc
pop
push
rcrb
sub
cs
test
sbb
mov
xor
rcrl
stos
fstpl
fcoml
test
into
xchg
ljmp
lret
mov
add
jae
iret
repz
jle
std
cwtl
fidivs
les
pop
out
or
add
mov
jp
and
out
cld
out
or
dec
into
fcoms
sbb
push
xchg
mov
jbe
test
push
sbb
or
add
fdivl
fcmovnu
pop
rclb
mov
sub
xorb
sbb
xor
shrl
inc
nop
mov
dec
inc
add
mov
orl
lret
ror
stc
subl
out
jo
test
sahf
xor
push
mov
xchg
and
xchg
ja
icebp
ds
add
dec
pop
pop
shll
aad
stos
call
loope
lcall
loopne
xchg
stos
pop
or
mov
jmp
cltd
pop
cmp
inc
jmp
je
sbb
add
gs
popf
scas
jmp
push
cld
stc
test
addr16
inc
push
xchg
sar
scas
xor
push
xor
repz
jle
mov
ret
repz
repz
arpl
mov
inc
push
aas
enter
mov
push
adc
ret
jns
pop
addr16
sub
dec
je
aam
push
and
cmc
ss
xchg
rdmsr
call
sbb
inc
xor
add
jne
pop
inc
ret
imul
mov
sbb
jno
pop
pusha
ret
xchg
mov
movb
fadds
out
je
aad
clc
repnz
iret
aad
pop
lret
jge
or
cmp
cmp
pusha
cmp
dec
push
insl
sahf
stos
add
in
mov
xchg
popa
add
mov
js
aas
sbb
outsb
pop
insl
add
es
add
and
aam
and
fs
out
mull
push
bound
push
pop
xchg
es
pop
ljmp
out
pmaddwd
mov
data16
rcll
fiadds
jl
imul
xchg
jecxz
ss
mov
mov
push
fcmovu
cmp
ret
pop
shll
jp
repnz
lods
dec
test
int3
pop
mov
mov
cmpsb
mov
xchg
test
scas
xor
xor
add
cs
cli
imul
cli
cltd
sahf
xchg
mov
sbb
in
sarb
outsb
mov
stc
pop
sahf
mov
pop
adc
repnz
fdivl
push
jno
out
mov
adc
dec
imul
sar
lods
and
scas
je
push
das
shl
xchg
aam
mov
jp
pop
repz
stc
jne
pop
inc
or
mov
cmp
popa
cwtl
out
stos
mov
push
mov
pop
icebp
call
dec
cmp
popf
std
inc
fldl
mov
sbbl
in
mov
in
call
loope
pop
jg
mov
andb
fnstcw
or
movsl
fnsave
xchg
enter
adc
jmp
inc
sbb
ret
push
cmp
dec
or
out
int
cmc
or
lahf
sbb
test
xchg
enter
mov
push
sub
call
cltd
sbb
xorb
stc
push
or
fisubs
shl
mov
or
fldcw
call
lea
mov
mov
iret
out
stos
jecxz
loop
cmpsb
call
inc
nop
sbb
pop
imul
and
aam
cmpsb
mov
xor
daa
jae
jno
decb
ret
mov
and
and
ss
push
pop
repz
cmp
adc
cltd
pop
gs
rol
add
call
dec
pop
mov
jo
mov
lods
jb
cmpsb
lea
rolb
scas
and
add
and
negb
mov
popf
jp
or
fsincos
out
mov
testb
sub
jbe
xchg
push
push
or
and
inc
xchg
popf
xlat
js
aam
push
xchg
jo
jb
shl
xchg
cs
test
bound
out
xor
ret
test
xchg
nop
xor
fwait
sbb
mov
mov
mov
cltd
loop
shll
dec
aad
sub
icebp
movsb
icebp
popf
je
add
roll
out
fdivp
iret
vmwrite
adc
lods
or
mov
add
imul
push
cmp
jmp
adc
mov
jmp
ror
add
popf
mov
or
test
jmp
out
ror
aaa
inc
dec
lahf
es
lods
xchg
jp
push
sub
xor
push
cmp
in
or
rorb
dec
loopne
add
test
jmp
push
push
jns
push
mov
idivb
notb
movsb
dec
inc
sbb
lods
addr16
fs
sbb
daa
push
sbb
and
or
icebp
and
dec
cmpsb
js
shll
daa
jecxz
jae
push
es
cmc
and
or
pop
cmp
out
adc
cmp
adc
arpl
inc
test
pop
loopne
les
movsl
cmp
mov
lret
add
dec
mov
mov
mov
adc
jge
add
mov
jecxz,pn
sbb
xor
mov
xor
xor
mov
mov
cs
xor
pop
out
mov
je
addr16
mov
jmp
adc
pop
push
lahf
sbb
rol
mov
jae
inc
iret
daa
push
repnz
pop
xchg
cld
mov
enter
pushf
lret
mov
out
out
insl
mov
sub
fwait
in
es
adc
popf
xor
jno
jge
xor
xchg
dec
sub
and
leave
test
cmp
sbb
inc
push
insb
loopne
mov
cld
test
cmc
shll
mov
pop
call
fmull
aad
adc
out
icebp
cwtl
enter
cmp
les
js
jge
dec
aam
push
ja
movsl
rcrb
pop
out
mov
cmp
rcll
enter
sbb
fnstenv
xor
or
pop
mov
sub
shrb
shll
inc
iret
test
das
mov
loop
scas
sbb
xchg
adc
cmpsb
test
jl
call
test
sbb
filds
push
out
popf
cld
xchg
adc
mov
or
mov
xlat
sbb
iret
and
data16
add
mov
pop
xor
add
push
push
adc
pusha
push
sub
movsl
lret
jae
outsb
push
fisttpl
scas
cs
xchg
xor
jne
enter
ret
loop
std
push
sbb
push
mov
outsb
push
pop
aaa
jo
add
jo
xchg
decb
mov
xchg
lods
inc
hlt
enter
mov
dec
cltd
mov
and
cli
icebp
cmpl
mov
mov
cs
leave
insb
xchg
dec
or
out
movsb
shll
jmp
xor
in
adc
scas
hlt
and
leave
ss
cwtl
shlb
ja
jecxz
loop
lea
jae
je
loope
test
aas
lock
sub
fistpl
pop
std
popa
lahf
sbb
nop
rorl
add
cld
inc
xor
fisubrs
fwait
cmpsb
in
mov
aad
cmp
dec
rorb
inc
jno
dec
and
sbb
lahf
sbb
xchg
xchg
inc
sub
gs
shlb
iret
push
pop
lret
sbb
inc
std
xor
fwait
and
ss
shl
pop
pusha
push
xchg
addr16
ss
or
mov
jecxz
lds
ret
mov
dec
repz
in
sbb
fsubs
loopne
and
fsubl
push
pop
pusha
fdivr
imul
movsb
jne
call
jb
fsubrl
or
insl
jg
mov
lock
pop
cmp
arpl
repz
xor
test
or
push
subl
inc
xlat
xchg
mov
scas
inc
cmp
push
sub
jp
je
inc
subl
mov
aas
outsl
sub
adc
aas
icebp
mov
nop
xlat
jne
rol
push
loope
jo
sbb
push
xchg
xchg
fldcw
xchg
sarl
mov
fadds
mov
leave
add
lods
insb
sub
clc
add
push
and
mov
pop
jno
lods
repz
in
outsb
ds
test
xor
daa
or
push
pop
add
test
push
xor
gs
mov
push
push
xor
mov
mov
add
jle
ljmp
cltd
mov
ja
xchg
xchg
andb
std
lods
nop
test
or
xchg
fistps
xor
jmp
cmp
arpl
sbbl
pop
cmp
ret
in
add
enter
je
loop
pop
mov
inc
and
scas
outsl
jno
not
dec
push
and
mov
in
aad
lret
hlt
aas
ret
lret
sub
loop
addr16
xchg
xor
dec
fsubp
das
inc
xor
sahf
sub
andl
xchg
inc
mov
push
js
mov
push
out
ret
pop
lea
cwtl
lret
pop
jno
push
test
or
sbb
xchg
test
into
das
test
mov
cmp
push
ret
call
xchg
and
idiv
rorb
cmp
sub
test
test
cwtl
fstpt
push
mov
repz
insl
push
mov
xor
loope
push
shll
dec
ret
push
test
nop
aam
sub
or
out
enter
cltd
sub
sbbb
insl
inc
lods
fsubrl
cwtl
popl
push
lock
cwtl
out
std
lds
cwtl
pushf
jge
pop
inc
sub
aad
mov
dec
jge
test
inc
into
cmpsb
ja
mov
push
pop
adc
mov
gs
mov
mov
fdivr
jmp
ja
stos
jbe
sbb
sub
mov
mov
cmc
dec
cli
sub
and
mov
dec
mov
cmp
jbe
xchg
sub
jb
mov
jnp
test
mov
push
dec
cld
std
test
or
sub
sar
jae
ja
loope
xor
sub
mov
jne
inc
lcall
inc
in
mov
out
inc
cli
jb
inc
bound
add
dec
js
pop
xchg
or
lock
lea
xor
out
jg
ficomps
cmp
test
dec
mov
loopne
inc
xchg
hlt
test
mov
out
out
mov
add
sbb
dec
loope
stos
push
cmp
imul
addb
or
xchg
in
cmpl
xchg
inc
push
pop
mov
ret
loope
iret
inc
hlt
mov
icebp
push
and
fisubrl
and
cmpl
push
cmp
pop
je
aam
and
das
add
sub
cmc
mov
ja
push
mov
stc
repnz
pop
jne
sti
xchg
cs
lret
repz
push
jmp
loope
stos
dec
xchg
fwait
dec
mov
sbb
mov
leave
int
cmp
xlat
movsl
or
pop
xchg
dec
dec
push
xlat
adc
mov
into
es
fnstcw
or
idivb
divb
ret
jle
and
push
push
or
mov
loop
dec
ficompl
pop
stos
push
xlat
sub
xor
xchg
jecxz
cltd
icebp
xchg
jb
mov
icebp
dec
and
cs
mov
cmp
mov
je
mov
dec
cmp
lds
insb
in
mov
or
mov
cltd
inc
jecxz
push
nop
cmp
inc
inc
push
call
xor
push
push
andb
inc
mov
movsb
push
in
cs
push
and
mov
testl
mov
push
pop
sbb
cmp
inc
cmp
mov
lret
into
xor
xor
mov
dec
data16
xor
test
push
jge
push
stc
mov
je
push
jle
inc
jne
je
xchg
inc
iret
push
xchg
arpl
ds
or
fsubr
js
sbb
add
out
push
jne
inc
or
pop
push
in
adcl
push
outsl
add
pusha
frstor
push
add
repz
mov
pop
pushf
xchg
lcall
repz
pop
mov
into
insb
inc
cmp
jl
add
call
xor
mov
movsl
imul
inc
add
push
jbe
or
fcmovb
inc
cltd
jae
mov
and
pop
mov
fwait
push
adc
dec
push
lret
ja
fimull
je
jl
arpl
mov
jl
mov
jge
shrl
mov
jle
out
jne
rcll
fucomi
pop
add
mov
mov
out
dec
test
mov
pop
dec
inc
js
incl
jmp
rcll
out
add
or
incb
dec
fnop
aaa
xorb
in
popa
lock
popa
sbb
imul
scas
cld
imul
cltd
sti
jnp
push
dec
repnz
xlat
or
xorb
leave
jp
stc
shl
popl
jo
or
inc
pop
adc
sbb
stos
int3
adc
push
call
inc
jne
jo
icebp
stc
int
push
xor
mov
js
cmp
movsl
or
xchg
aaa
movsb
repnz
jge
mov
jno
mov
mov
aam
mov
push
sub
gs
lcall
adc
repnz
movsl
cmp
xlat
bound
mov
cmp
fisttpll
in
aaa
add
and
push
inc
imul
xor
sbb
fs
inc
fstps
shl
jbe
in
test
cmp
or
sbb
fnsave
or
or
mov
pop
enter
xor
mov
mov
dec
pop
into
mov
out
xchg
sub
inc
inc
push
sbb
incb
inc
pop
xlat
movsl
int
inc
pop
mov
jg
mov
fcoml
add
or
or
int
les
idivl
cli
dec
add
mov
popa
inc
jecxz
push
xchg
fnstcw
jnp
int
insl
outsb
jg
ret
add
sub
jg
and
cmp
jl
clc
mov
fsubp
fs
pop
jne
loopne
aad
mull
ret
sti
sbb
adc
ja
adc
pop
push
or
jge
daa
adc
je
adc
and
fdivl
push
adc
out
mov
sahf
cmpsb
ret
adc
mov
aam
cwtl
mov
addl
dec
push
mov
es
imul
cmp
or
push
bound
cmp
cli
loope
push
daa
jae
adc
pop
bsf
jbe
pop
jge
xchg
inc
xchg
lret
pop
fadds
adc
lods
inc
inc
jnp
push
jmp
daa
stc
insl
sbbb
mov
pushf
mov
lods
mov
iret
addr16
or
xchg
subl
out
cwtl
add
pop
fistpl
dec
cmp
sub
call
rcrl
rcl
and
aaa
es
test
xchg
mov
mov
sbb
roll
inc
jp
aas
mov
sub
jns
out
pop
xchg
aam
sub
popa
jle
jae
inc
cmp
fwait
je
add
sbb
jecxz
sbb
test
and
sub
pop
adc
xlat
dec
adc
xor
mov
jae
push
pushf
mov
pushf
sahf
stc
mov
std
arpl
ljmp
fbld
sbb
scas
lahf
sub
xchg
test
insb
lahf
mov
xchg
aad
add
fcomp
lods
test
sahf
xlat
push
push
insb
icebp
call
fmull
lock
cmc
mov
loope
sub
inc
and
add
aaa
dec
cwtl
xchg
jnp
lret
add
xchg
sub
xor
dec
shll
dec
icebp
and
repnz
and
inc
clc
aaa
daa
negb
mov
mov
sub
pushf
dec
inc
inc
adc
sbb
dec
out
push
add
mov
push
lea
cmc
mov
mov
mov
mov
xor
je
lods
mov
ret
jne
sbb
adcl
lods
sbb
sbb
push
sbb
mov
shrb
imul
cmp
mov
ret
sbb
mov
cld
cwtl
daa
fldt
ret
mov
pop
push
cmpsb
dec
jg
loop
push
lods
in
adc
loope
out
cmpl
cmp
inc
dec
or
shl
xchg
lret
push
clc
or
sahf
sbb
idivl
data16
sub
mov
add
and
out
jmp
jno
movsl
xor
out
cmpsb
or
or
add
xchg
jecxz
pop
test
cmc
scas
or
adc
mov
or
lds
out
stos
ja
pop
mov
pop
cli
orb
push
mov
fsubrs
dec
lret
repz
enter
cmp
cmpsb
adc
insl
push
and
rorl
mov
or
shlb
bound
adc
data16
jecxz
mov
shrb
or
adc
add
aaa
fldl
jle
mov
adc
xchg
popf
adcb
push
and
push
xor
and
cltd
scas
out
les
jmp
sbb
insb
push
movsl
xchg
repnz
push
pop
pop
js
dec
pop
dec
dec
in
imul
jecxz
cltd
insb
or
movsl
das
add
jbe
iret
out
xchg
or
jo
and
inc
inc
hlt
out
push
xorb
dec
mov
xchg
cmp
cli
inc
xor
aad
mov
xchg
push
ss
inc
dec
cmc
and
adc
jbe
rorl
shrb
dec
test
xchg
pop
mov
rcr
cmc
xlat
cld
arpl
mov
arpl
dec
rolb
push
pop
fwait
mov
jge
add
and
dec
jae
ds
ret
or
arpl
pop
mov
in
adc
ret
sbb
lods
add
push
leave
fisttpll
js
and
jp
mov
pop
into
lds
mov
pop
pop
andb
add
add
aas
ret
repnz
data16
adc
inc
mov
sbb
fistps
cld
or
adc
pop
mov
int3
popa
ljmp
stos
push
dec
cmp
ljmp
push
loopne
sbb
fcomps
js
mov
fxch
dec
neg
pop
addr16
mov
imul
xchg
and
pusha
incl
or
out
outsl
inc
je
sarl
call
add
mov
mov
mov
pop
jle
test
jle
sub
xchg
jp
jns
xor
lock
lods
in
cmp
inc
or
xchg
clc
iret
mov
sti
sub
je
pop
insb
jbe
xor
fcoml
test
movsl
ds
popf
push
stos
pop
stc
push
repnz
jle
ror
xchg
or
int3
loopne
movsb
mov
pop
add
test
mov
xchg
fsubl
push
add
xlat
adc
push
subl
add
push
addl
pop
cmp
jge
lahf
sti
mov
push
xor
dec
inc
and
jge
adcb
adc
push
aam
rcl
rorb
iret
out
jae
clc
inc
inc
mov
and
loop
sbb
mov
xchg
pushf
mov
push
mov
jle
mov
dec
jmp
in
jle
sbb
sub
and
pop
cld
inc
inc
push
push
jbe
inc
push
jo
ret
inc
aam
add
fstpt
mov
and
dec
cltd
aas
jp
push
les
push
xor
and
mov
pusha
sbb
shl
push
dec
jns
xor
and
add
test
ret
outsl
add
test
aas
jmp
fmul
add
lret
dec
cld
xor
aad
dec
xchg
add
mov
mov
xchg
lahf
loope
int3
ss
and
mov
sub
adc
test
adc
ret
nop
sti
mov
lods
ja
insl
scas
cmp
xor
ret
int
out
outsl
cmp
sbb
shll
out
pop
test
jns
pop
mov
jecxz
xchg
adc
test
adcl
lock
inc
jmp
lods
push
popf
mov
rcr
push
repnz
movsb
fmull
sti
and
lcall
pop
enter
cltd
mov
jmp
adc
mov
push
subl
test
loop
ds
sbb
in
lods
xchg
push
add
sub
and
pop
mov
dec
arpl
repnz
mov
repz
mov
daa
andb
cmp
out
cmp
xchg
mov
xchg
insb
int
pop
lahf
mov
std
inc
fs
in
das
ror
fnstcw
out
rcl
fidivs
out
lret
mov
lods
inc
outsb
cmpb
pop
mov
dec
cmp
mov
scas
cmp
fidivrs
inc
xchg
popf
aaa
sbb
ror
mov
cmp
xchg
es
cltd
jnp
in
jle
pop
in
stos
inc
es
push
adc
push
mov
fprem
adcl
lahf
call
enter
mov
and
mov
xor
pop
mov
inc
push
imul
loop
stos
scas
mov
mov
rorl
sbb
mov
pop
js
adcl
jno
iret
pop
sbb
ss
pop
imul
sub
lret
cltd
xchg
xor
lods
out
and
fdivl
or
pop
std
int
ja
shrl
cmp
sbb
jo
mov
push
inc
out
jbe
mov
aam
cmp
loop
notb
insb
sub
pop
addr16
js
sub
jge
fs
xlat
fcomi
xor
int3
jbe
mov
negl
cmc
fwait
mov
jbe
fistpl
icebp
frstor
push
popf
aas
jl
fstpl
or
xor
sbb
rcll
xor
in
ja
aas
cld
int
aad
out
sub
stos
mov
push
mov
xchg
idivl
out
adc
jbe
test
gs
data16
cltd
outsb
call
je
adc
add
push
bound
insl
add
adc
inc
loope
incb
insb
repnz
and
js
icebp
push
xchg
data16
push
into
mov
stos
hlt
and
lds
rorl
cld
ret
jns
sbb
mov
dec
xchg
pop
pusha
cs
jb
mov
jg
fimull
push
adc
mov
sbbl
pop
adc
cwtl
in
into
mov
sub
test
pop
mov
jp
or
pushf
pop
push
dec
jecxz
sbb
cwtl
push
mov
arpl
lret
jns
imul
jle
fistpl
sbb
stos
mov
nop
into
test
pop
rorl
sub
or
in
sbb
jnp
pusha
fdiv
aaa
imul
dec
adc
xchg
notl
mov
push
or
test
sub
icebp
repz
add
lods
pusha
jns
jg
inc
das
sub
adc
pop
fwait
pop
mov
mov
stc
inc
mov
ss
push
or
outsl
rol
and
ss
jae,pt
sub
dec
add
xor
cwtl
in
aam
popa
fcompl
icebp
mov
mov
cld
push
mov
dec
popl
gs
xchg
add
dec
xchg
mov
icebp
lock
add
xchg
sub
push
mov
enter
jb
sbb
stc
cld
push
pop
mov
clc
sub
sub
mov
rolb
xchg
rcl
add
mulb
sub
sbb
test
pop
leave
xor
je
mov
and
and
std
iret
mov
jp
stc
inc
mov
mov
pop
leave
jg
outsb
xchg
xor
lock
sub
mov
les
adc
repz
shl
and
push
mov
mov
mov
inc
pushf
setbe
icebp
movsl
jl
push
arpl
sbb
imul
push
aas
fcoms
push
inc
xchg
aaa
cmp
sahf
imul
enter
push
out
nop
xor
mull
call
pop
add
movsl
and
or
push
mov
dec
cmp
in
mov
rorl
mov
ljmp
dec
ja
hlt
push
dec
and
pushf
test
dec
or
sti
mov
call
add
and
loopne
xlat
cltd
push
add
sti
int3
dec
adc
lods
xchg
xchg
push
stc
popa
icebp
pop
pusha
dec
sub
outsb
pusha
xor
push
sub
shrl
mov
clc
cmp
out
push
xchg
int3
cmp
add
out
scas
data16
jmp
lret
xchg
test
mov
cltd
shll
mov
sbb
dec
push
inc
xchg
aam
jns
cmpsb
orl
aad
int3
imul
jnp
sbb
in
or
push
rcr
das
fcmovb
mov
loope
or
xchg
and
stos
in
mov
ss
jne
icebp
faddl
out
cld
pushf
dec
imul
lretw
sub
arpl
aad
fwait
jecxz
nop
jg
ljmp
sub
mov
adc
push
hlt
in
std
push
lds
push
or
lret
jle
dec
mov
rcl
mov
sbb
sub
xor
out
inc
mov
mov
stos
mov
jbe
xor
or
std
into
scas
hlt
clc
repnz
lret
int3
loopne
xchg
lcall
loopne
aaa
test
push
je
lret
xor
mov
out
xchg
pop
add
enter
fcomp
stos
or
adc
lds
out
pop
rcr
pop
pop
mov
pushf
ljmp
testl
pop
pop
std
cltd
in
cwtl
xchg
push
mov
in
pushf
adc
fcmovnb
add
xchg
iret
stos
into
adc
add
push
sub
lds
fdivrl
sti
pop
mov
shl
adc
ja
push
call
pop
jmp
adc
lods
aam
mov
ljmp
jae
mov
inc
mov
xorps
mov
repz
in
xchg
popf
fdivs
imul
stc
mov
jmp
mull
lds
in
shll
mov
inc
pop
movl
addr16
jae
test
loope
push
xlat
test
add
push
aas
lcall
in
fisubl
sahf
push
pusha
hlt
sbb
pop
jg
sbb
inc
ds
in
sbb
mov
or
roll
xchg
scas
test
xchg
ret
std
rorl
dec
pop
push
cmp
mov
cmp
cmpsb
sahf
test
inc
pop
add
sub
cmp
aad
pop
push
inc
push
jge
sub
or
leave
xorl
test
push
out
add
xchg
dec
std
jmp
and
cli
pop
fsubrl
and
and
fcoml
xchg
mov
lock
push
aaa
and
mov
jo
push
sub
jo
jmp
sub
lret
daa
xlat
lods
and
mov
shll
loopne
sbb
in
sbb
icebp
insl
inc
mov
push
lcall
xchg
add
test
add
movsl
cmpsl
push
in
movsb
lcall
dec
mov
stc
sub
das
lods
outsb
fmulp
adc
idivb
in
je
lds
mov
mov
in
push
pop
jno
jo
sub
xor
daa
fstp
push
cmp
jl
push
bound
jmp
jae
push
les
or
sbb
adc
dec
pop
lcall
adc
cmp
out
xchg
and
push
push
aam
push
jmp
ret
int3
pop
sub
dec
or
jle
mov
sbb
mov
mov
mov
mov
bound
sub
leave
dec
adc
into
rclb
cmp
rcrl
xchg
xchg
cmp
pop
jl
adc
adc
pop
lret
adc
jb
xchg
push
or
cld
movsl
xchg
xchg
pop
mov
in
inc
pop
push
repz
xchg
sub
xchg
jmp
adc
loop
ret
fwait
loopne
aam
sbb
push
bound
or
cmpsb
xlat
jae
adc
add
adc
push
imul
dec
in
dec
adc
dec
inc
ret
cmp
cmpsl
inc
filds
loopne
into
sti
jbe
test
xlat
mov
dec
test
jns
xchg
roll
ss
pop
lods
sbb
xchg
cmovbe
fwait
xchg
push
cmc
pop
cmp
cmc
add
lahf
push
loop
cld
inc
push
push
sbbb
pop
pop
mov
sub
out
xor
mov
es
and
mov
sbb
cwtl
jle
mov
jns
add
dec
add
mov
dec
ret
aas
pop
test
adc
or
fisttps
aam
xchg
inc
pop
in
mov
or
mov
imul
shlb
inc
and
jmp
mov
flds
mov
and
mov
pop
xchg
mov
stos
lods
rep
repz
jbe
lods
jae
out
xchg
inc
cs
cltd
push
das
push
fwait
lea
insb
jo
add
aad
inc
aaa
in
xchg
cmp
pop
lds
addr16
pop
add
sar
sub
mov
xor
xor
movsl
push
xchg
test
das
js
dec
int
popf
les
and
test
xor
dec
mov
xor
bound
fwait
sarl
push
and
push
mov
test
cli
or
jae
adc
mov
jg
sysret
das
cmp
jnp
int
xorb
jne
jbe
jmp
hlt
jns
imul
mov
mov
shlb
ss
mov
gs
cmp
rclb
or
pop
jg
or
cmp
mov
sbb
and
fists
and
les
insl
test
push
fs
outsb
pop
add
fs
sbb
xchg
cmp
xor
imulb
mov
push
bound
pop
sub
mov
mov
pop
aas
mov
int3
hlt
lret
loop
sub
push
xor
sub
inc
pop
inc
dec
lcall
into
movsl
jle
in
xor
jecxz
push
scas
jg
cmpsl
imul
movsb
pop
mov
and
imul
add
sti
in
outsb
lods
jae
inc
fisttpl
xchg
test
jae
lret
adc
adc
xchg
jmp
sub
xchg
les
dec
dec
pop
push
ficoms
out
pop
mov
jb
in
sti
lds
jecxz
inc
sub
decb
or
mov
je
sub
and
inc
ret
ret
insl
mov
sti
arpl
ficomps
jb
pop
fsubs
negl
add
dec
push
out
add
stos
repz
push
lods
mov
ss
adc
lret
cmp
cmp
ss
mov
pop
mov
subl
fnstsw
sbb
push
cmpsb
lods
repz
push
adc
hlt
orb
daa
jnp
xor
rclb
ret
test
ret
fisubrl
adc
push
pushf
and
rclb
jle
loop
cli
push
lods
push
imull
cmpsl
or
stos
and
adc
dec
dec
into
into
divb
inc
stc
pop
ficoms
mov
faddl
mov
push
cld
popf
mov
add
mov
les
lea
or
mov
cmpsl
lods
adcl
dec
sbb
inc
mov
ds
sub
xor
lea
sub
push
scas
push
pop
mov
mov
clc
xor
jnp
pop
jae
adc
pop
push
push
fcoms
aad
lods
cli
mov
xor
inc
fcomip
addr16
xchg
xor
loope
sarb
push
pop
xchg
cmp
mov
daa
mov
mov
clc
xchg
insb
dec
bound
hlt
outsl
push
mov
gs
out
stos
mov
inc
sti
pop
mov
mov
inc
fidivl
fiadds
sbbl
fbld
testl
out
fwait
stos
mov
inc
movsb
inc
xchg
inc
fstpt
sub
clc
inc
sbb
je
std
push
jo
jmp
std
cmpsb
shll
or
push
dec
lret
sub
jmp
xchg
insl
hlt
leave
imul
loop
mov
and
stos
push
hlt
shrb
dec
mov
inc
pushf
mov
sub
negl
xchg
jecxz
mov
dec
sbb
xor
pop
ja
xor
and
scas
ror
in
jae
pop
push
xchg
pop
mov
mov
repz
xor
inc
lret
push
stos
lret
cmc
sub
ljmp
out
imul
sub
cmpb
int
push
sbb
sbb
scas
lods
shll
nop
pop
inc
inc
mov
mov
sbb
mov
pop
das
stc
jnp
fnsave
jns
arpl
stos
jecxz
adc
lods
bnd
cld
jo
pop
cmp
inc
cmp
sub
mov
pop
andb
and
sub
xchg
sbb
gs
jo
mov
fists
lds
fadd
add
out
pop
lret
lock
mov
clc
cmp
jb
sub
jge
push
cmp
xor
imul
lods
icebp
rolb
pop
into
jmp
adc
mov
loope
test
fstl
adc
mov
adc
or
jbe
lods
js
and
mov
inc
mov
decb
cmp
sub
lcall
push
jmp
adc
je
loop
daa
or
dec
xlat
dec
fimuls
mov
xchg
mov
mov
dec
push
add
xchg
cli
cmp
jecxz
leave
add
cmp
stos
lods
out
mov
lret
push
out
xchg
pop
push
jmp
lahf
repnz
ret
rorb
xchg
mov
jne
negl
xchg
pusha
xor
push
notb
xor
pop
adc
inc
mov
rcl
and
cs
mov
lret
out
add
enter
mov
push
cs
xchg
lret
data16
rcrl
mov
dec
vmwrite
and
shr
pop
xor
mov
jp
sub
das
pop
in
ret
mov
lods
fistpll
fcompl
rcll
inc
movsb
out
pop
test
or
mov
sbb
lcall
mov
sub
or
lods
nop
add
cmpsb
mov
add
or
mov
cmp
sub
cmp
dec
push
rcl
in
push
out
xchg
xor
mov
test
inc
inc
popa
lods
clc
sub
das
dec
mov
loop
call
or
iret
and
mov
test
lds
aaa
push
push
adc
xchg
lret
sub
and
and
add
mov
fidivs
andl
inc
mov
test
adc
cmpsl
add
std
cli
in
shrd
loope
or
mov
mov
stos
xchg
stos
adc
idivb
push
movsl
add
fwait
test
jno
cwtl
push
add
add
mov
pusha
dec
addr16
pop
push
push
push
or
sbbl
sub
mov
or
mov
or
sub
xchg
dec
pop
jl
cmp
jmp
pop
test
xchg
adc
inc
lock
das
cmp
or
bsr
mov
push
in
add
pop
jmp
pop
xchg
cli
fwait
dec
xor
jbe
jecxz
push
in
hlt
add
push
aad
mov
call
pushf
pop
test
inc
dec
int
and
imul
push
or
jg
cmp
aam
pop
adc
adc
testb
std
inc
dec
imul
nop
insl
jae
jl
dec
in
push
lods
daa
cltd
rorb
mov
mov
mov
cmp
sbb
inc
push
test
jbe
xor
push
pop
mov
xchg
mov
fwait
lea
jle
addl
lea
test
push
test
sbb
std
cwtl
jb
mov
pxor
aas
cltd
inc
adc
push
out
std
or
icebp
cmp
xor
in
and
repnz
aad
test
cmc
les
mov
enter
sti
cmp
jne
fists
lahf
out
jbe
xor
xor
imul
jmp
push
sbb
notl
je
pop
jns
xor
cs
idivl
xchg
in
mov
lods
es
pop
fidivrs
sbb
std
adcb
out
in
jmp
popl
xchg
mov
xor
fs
insl
mov
pop
xchg
push
insb
daa
pop
push
mov
js
movsl
sbb
and
mov
or
aaa
mov
add
out
xchg
add
in
dec
adc
pushw
repz
mov
fsubs
or
and
ljmp
test
push
insl
sahf
mov
pop
mov
inc
jmp
mov
out
push
push
and
stos
jmp
xor
and
xchg
js
add
add
xchg
fadds
xchg
push
ret
lret
mov
popa
fisttpll
ljmp
loop
cld
cmpsl
adc
fstps
scas
aas
inc
adcl
xor
push
icebp
inc
lret
data16
ds
mov
int3
or
insb
cld
or
push
mov
cmpsb
inc
cmpsb
and
jbe
push
dec
xchg
jne
cmp
fcoml
xor
sub
movsl
mov
js,pn
pop
insl
test
cmp
add
pop
lods
or
xlat
push
xchg
sar
repz
pop
sarb
lods
mov
std
movsb
inc
or
leave
or
imul
add
loop
jecxz
jnp
idivb
pop
dec
popa
pop
dec
aaa
stos
xor
jl
outsb
clc
loop
mov
mov
cmp
and
mov
loope
or
adc
push
iret
fisubrl
jge
frstor
hlt
pop
mov
out
into
add
xchg
sub
jmp
xchg
hlt
and
icebp
in
mov
out
mov
ljmp
jae
leave
lock
rorb
inc
mov
ret
fwait
ss
mov
outsl
nop
cmpb
mov
out
mov
mov
lahf
inc
and
dec
mov
scas
imul
imul
mov
push
lret
inc
rcrb
popf
dec
fldl
insb
imul
sub
leave
enter
fsub
hlt
js
mov
cmc
xor
dec
sbb
xlat
mov
push
fadd
sti
pop
into
lret
fsubrl
dec
sub
in
sub
mov
pop
cltd
xor
mov
or
inc
rcl
adc
insb
xor
dec
mov
sub
stc
or
xlat
or
xor
inc
adc
test
cmp
xchg
push
out
pop
mov
sti
lret
roll
stos
inc
jne
xchg
jmp
jbe
ja
jge
push
sbb
lods
aad
popf
out
into
call
xchg
sahf
and
movsb
adc
sarb
adc
and
xchg
mov
mov
subb
jbe
lock
push
mov
lea
cwtl
int3
or
and
and
dec
pop
jmp
aaa
js
cmp
mov
mov
mov
xchg
push
loopne
push
sbb
sbbb
out
jb
jle
notb
out
mov
pop
rcrl
lods
xor
and
loope
sbb
adc
fistpll
dec
lds
xchg
jo
loop
shlb
pop
movsl
push
fcomps
pop
pop
js
add
or
mov
sub
xor
sbb
test
jl
dec
ja
pop
ficomps
clc
and
faddl
enter
mov
bound
imul
pop
xchg
cmc
push
mov
lods
adc
mov
scas
sub
or
mov
mov
adcb
jp
jge
movsl
cwtl
stc
xchg
add
add
xchg
aam
dec
movsl
xor
inc
jno
adc
or
popf
ret
adc
inc
jb
lods
sub
scas
clc
mov
add
cli
int
or
outsb
dec
cmpsl
test
in
pop
and
inc
xchg
sub
das
mov
fidivrs
fidivl
pop
or
dec
or
add
loop
jle
mov
iret
jae
sti
jp
call
xchg
int
sbb
gs
test
or
aas
xchg
jno
outsl
shl
notl
xor
call
aad
xchg
mov
ljmp
mov
jns
cmp
ss
add
insb
outsb
fdivrs
mov
and
out
jl
hlt
int
ss
cmp
mov
dec
sahf
sahf
imull
stos
push
pop
mov
xchg
inc
std
mov
pushf
arpl
sti
push
mov
mov
adcl
mov
xchg
imulb
nop
push
sahf
pop
mov
or
or
or
stos
fildll
stos
mov
or
push
sub
pop
sub
mov
aaa
pop
mov
xchg
shrl
pusha
mov
inc
xchg
push
enter
xchg
in
adc
cmp
adc
jne
push
mov
xor
push
xor
dec
and
and
lea
jle
pop
data16
pop
nop
imul
mov
out
inc
pop
sbb
and
pop
mov
scas
rcrb
and
sbb
pushf
and
aam
xor
adc
repnz
insb
and
ret
push
stos
jg
dec
mov
xor
pop
popf
push
jl
rorb
mov
ficoml
and
sarl
jmp
in
dec
ret
sbb
add
out
sub
gs
insl
ret
outsb
sbb
add
pop
dec
jmp
fstp
dec
xchg
rclb
movsl
adc
aad
pop
test
inc
jle
aam
sti
sbb
adc
dec
iret
pop
outsb
lods
sbb
stos
gs
test
push
pop
test
and
jae
rorl
jns
sub
movsl
dec
mov
adc
imul
adc
lods
inc
push
or
cmpsl
fbstp
mov
xchg
xchg
mov
jecxz
call
cmp
jbe
cmpsl
int
xor
jg
sbb
call
and
test
enter
int3
insb
fistl
outsl
andl
pop
pop
adc
and
dec
mov
sub
in
pop
jp
sbb
xchg
inc
movsb
insl
inc
push
fildll
xlat
xchg
and
in
out
pop
xchg
sub
add
js
dec
mov
jns
sbb
adc
xchg
nop
insb
outsl
and
xor
out
dec
add
bound
rcll
aas
push
add
inc
push
fstpt
dec
sbb
cmpsl
shr
sti
adc
sti
lds
outsl
add
icebp
stos
loop
sub
pop
or
in
hlt
orl
jge
adc
push
adc
jecxz
idivl
jl
push
push
dec
fidivrs
add
insl
mov
sbb
in
cmp
xchg
mov
iret
loope
cmc
adc
mov
popf
xchg
imul
push
hlt
inc
xchg
sbb
push
sub
ja
sti
mov
jne
pop
pop
jb
xchg
int
test
xor
test
jnp
xchg
add
fs
stos
int3
into
xor
in
out
add
xor
cwtl
mov
enter
push
int3
mov
dec
test
xor
mov
cli
and
mov
std
loope
inc
leave
jns
pusha
icebp
push
cmpl
sub
sbb
out
js
mov
loope
sti
jns
mov
lds
imul
shlb
dec
xchg
sbb
gs
jl
lret
aam
lcall
push
pop
mov
out
mov
ds
out
outsb
jo
test
mov
enter
or
pop
cmpsb
scas
cld
pop
into
mov
push
xor
cmp
cld
mov
mov
jle
mov
mov
fwait
push
inc
jns
sahf
fsubrl
lds
clc
xor
scas
lods
cs
paddb
cmp
xor
xchg
mov
bound
aaa
xor
cmp
lock
bound
std
dec
and
jno
ss
jmp
adc
sbbl
lret
inc
jge
xchg
sti
and
nop
dec
mov
mov
icebp
inc
addr16
ret
cmpl
js
inc
iret
push
adc
jno
mov
sbbb
ficomps
into
movsl
idivb
ret
movsb
inc
and
lea
and
adc
cs
aam
adc
icebp
mov
jb
filds
jb
cli
cmp
push
mov
and
or
movsb
mov
repz
xchg
xchg
mov
inc
ftst
mov
lcall
fnsave
add
loope
imul
mov
xchg
mov
es
icebp
call
pop
xor
push
lods
fwait
into
ja
std
fxch
fidivrs
sahf
jp
push
addr16
jge
mov
pushf
mov
xchg
mov
mov
and
lret
stos
inc
loop
cmp
imul
aam
in
sub
jne
push
shr
lret
out
inc
ds
out
cs
ret
sub
out
or
dec
inc
cmpsl
stos
imul
adc
push
aas
lods
shlb
xlat
popa
js
jecxz
inc
std
cmpsl
repz
or
pop
popf
repz
adc
cmpsl
repnz
mov
adc
cmp
aam
repz
imul
mov
dec
dec
xlat
cmp
jmp
popa
es
pop
imul
pop
or
lock
enter
jle
jo
mov
outsb
inc
push
ljmp
fsubs
cmp
jns
nop
arpl
adc
inc
sub
mov
push
insb
test
aam
sbb
fcoml
adc
xchg
mov
stos
push
jo
push
lock
push
pop
inc
cmp
icebp
mov
mov
ds
icebp
push
xchg
into
aam
pusha
jne
call
dec
cmp
cmp
jecxz
ljmp
jns
push
jb
add
or
mov
das
cmp
inc
fiaddl
add
pusha
sbbb
dec
xchg
mov
mov
fidivl
sbb
cli
je
push
pusha
xor
or
mov
cwtl
xchg
cmc
xor
mov
jp
mov
add
mov
ss
dec
jmp
sub
fadds
ss
xor
ljmp
push
insl
adc
mov
sub
and
push
insl
inc
call
and
jns
cwtl
enter
cmp
jle
sub
popf
into
lods
stos
adc
aaa
fsts
inc
cmp
mov
dec
inc
lret
adc
or
sbbb
lret
jbe
mov
scas
pop
and
popf
or
xchg
xchg
mov
pop
fisttpll
inc
mov
daa
pop
and
sbb
jle
iret
fcomps
cmpsl
mov
cmp
fiaddl
pushf
inc
lds
jle
sub
std
int3
decl
shrb
sub
dec
imul
loope
jb
mov
xchg
xor
inc
cmc
in
popa
addr16
xor
or
push
stos
sub
push
mov
dec
push
cmp
test
xchg
jmp
and
xchg
mov
sub
outsl
cs
xchg
out
pop
movsb
in
shr
mov
xorb
pop
ret
stos
adc
rolb
jno
je
aaa
adc
push
or
scas
fistpll
xor
mov
jo
add
mov
fdivrs
movsb
inc
test
or
dec
lods
out
mov
jmp
out
or
xchg
hlt
pusha
shll
add
push
add
rcr
add
push
mov
lret
mov
sub
insl
ja
subb
lret
cmp
test
mov
out
jmp
xchg
hlt
adc
and
les
adc
sub
and
lea
lret
inc
push
stos
mov
add
add
jno
pop
call
shlb
push
dec
sub
icebp
repz
out
push
mov
inc
mov
cs
aas
in
mov
ficoms
pop
lahf
cmp
xchg
sbb
mov
dec
in
cwtl
adc
in
les
adc
adc
add
push
push
scas
outsb
jb
aam
pusha
lods
repnz
repnz
sbb
adc
add
scas
outsl
cmp
dec
fstpl
fldcw
xchg
add
sub
shrl
pop
fstl
or
cli
inc
movsl
cs
push
stos
and
and
cltd
mov
cld
sub
outsl
push
stos
sbb
mov
pop
xor
icebp
pop
pop
pusha
out
fdivrp
out
and
arpl
push
jmp
test
adc
fs
inc
pop
mov
pop
jae
fisubl
ss
insb
js
push
inc
and
ja
ret
sbb
mov
into
xor
mull
fisubrl
inc
hlt
out
xchg
cld
clc
stos
adc
jmp
mov
repnz
cwtl
insb
jbe
jge
mov
cmp
jg
jns
retw
jp
sti
jle
test
mov
ret
jns
add
xchg
enter
mov
scas
adc
mov
dec
aaa
movlps
mov
mov
lods
and
repz
and
scas
xor
ljmp
mov
ficoml
push
pusha
mov
lret
inc
out
push
loopne
das
or
xor
in
into
and
mov
jne
out
out
ljmp
pop
sub
add
xchg
cltd
rcrl
xor
leave
outsb
call
adc
sbb
and
shlb
mov
dec
inc
shlb
cmp
jnp
xorb
sbb
add
outsb
sbb
mov
jnp
orb
popa
push
xor
or
in
popw
incb
fidivrl
xor
mov
mov
jg
cltd
lods
and
mov
fdivs
fwait
daa
insb
jbe
sub
in
cmp
mov
pop
aas
dec
ljmp
stc
mov
daa
xor
sub
mov
loop
or
repnz
in
sub
bound
je
sti
mov
mov
mov
int3
pop
dec
inc
inc
push
in
out
aam
mov
adc
add
movsl
in
in
push
leave
popf
rolb
sahf
cmp
loopne
faddp
aaa
xor
jmp
shlb
fldl
in
jl
jecxz
sti
inc
jbe
loop
xor
movsb
imul
int
dec
fcomps
push
pop
push
inc
shrb
add
cmp
pop
mov
jne
dec
add
mov
das
dec
xor
shll
or
pop
dec
add
sbb
push
cltd
mov
fmul
sbb
cwtl
decl
int
xchg
aaa
je
incl
inc
pop
ret
int
mov
cmp
ret
jl
push
idiv
mov
movsb
ljmp
fdivl
sub
jae
stc
inc
mov
jb
imul
insl
dec
mov
inc
lods
out
out
cmp
and
jo
cmp
mov
mov
icebp
das
je
pop
or
adc
jo
jmp
test
or
dec
test
or
out
into
rclb
ds
mov
adc
xchg
sbb
stc
mov
inc
push
push
ss
pop
adc
push
mov
xlat
es
lock
cmp
lock
pop
push
imul
dec
add
in
movsb
shl
icebp
aaa
repz
adc
repz
in
mov
shrb
sbb
ror
add
xlat
cmpsb
or
or
push
dec
addl
cmp
daa
pop
sub
mov
mov
mov
std
sbb
aaa
jnp
dec
adcb
lock
dec
test
out
stos
hlt
shlb
shlb
mov
sub
adc
imul
loopne
lea
mov
or
jne
roll
data16
xor
stos
sbb
and
add
xor
inc
outsl
inc
sbb
push
push
jp
aad
fimuls
ret
mov
stos
mov
push
mov
in
in
jl
cltd
dec
mov
inc
mov
clc
into
push
dec
shll
sub
movsl
aam
jae
jge
aaa
jl
testl
jmp
sti
pop
and
mov
aad
add
test
sti
hlt
sbb
pusha
xlat
add
repnz
imul
mov
clc
mov
cwtl
in
sbb
push
ror
mov
or
movb
imul
sarb
lret
shll
sbb
movsl
push
mov
popf
mov
xchg
xchg
in
hlt
stc
adc
cmp
nop
sbb
fwait
in
push
xchg
jo
pop
xor
stc
adc
pop
int3
push
flds
idivl
pop
pop
cld
xchg
movsl
dec
fldl2t
inc
rorl
push
xchg
popf
rolb
push
jbe
sbb
aas
movsb
push
sub
push
add
std
mov
cltd
movsl
loop
mov
push
js
mov
push
arpl
orl
sub
pusha
mov
pusha
mull
int
lahf
arpl
les
cmp
pop
jnp
fsubrp
cmp
jle
enter
dec
mov
mov
movsb
lret
pop
jno
dec
rcll
push
ficoms
adc
jg
mov
push
mov
sub
movsb
mov
out
sahf
dec
mov
jge
cmp
adc
add
mov
xor
sub
lahf
pop
pop
mov
js
mov
mov
std
cwtl
int3
dec
mov
ja
inc
outsl
repnz
hlt
daa
sti
out
in
test
cmp
pop
fnstsw
adc
inc
fistl
test
and
aad
push
or
pop
mov
pusha
shlb
enter
inc
stos
push
ja
cmp
into
and
jg
aam
scas
push
push
imul
imulb
sbb
out
enter
xchg
call
sub
test
imul
xchg
loop
inc
xchg
sub
jno
pop
into
fimull
sti
popf
adcl
mov
xor
fidivrs
jge
xchg
pop
sahf
xchg
adc
movsb
lds
jbe
sub
dec
xor
push
fistpl
mov
call
mov
out
mov
pop
lahf
sbb
fildll
rclb
xchg
cmp
push
mov
aas
into
pop
xchg
popa
jae
or
lods
lods
mov
rsqrtps
push
cmpb
shrb
cmpsb
mov
leave
test
pop
sahf
shll
adc
fsubrs
adc
push
icebp
push
repz
mov
stos
or
dec
dec
test
adc
cmpsb
fs
xor
ja
sbb
lds
data16
fiadds
out
cmc
jns
stc
pop
sub
js
in
out
mov
jbe
stos
xlat
xor
jmp
arpl
lret
daa
adc
mov
add
ret
fidivs
push
cli
and
dec
aam
cmpb
enter
inc
mov
jmp
outsb
ret
sub
in
je
sub
pop
pushf
adc
fnsave
xor
dec
sub
rcll
pop
fsubrl
mov
aas
adc
xchg
mov
es
imul
inc
jmp
and
mov
insb
lods
iret
shlb
push
insb
adc
inc
xor
cmpsb
hlt
fs
stos
fnsave
adc
cld
and
out
push
cmp
mov
out
jne
cmp
inc
std
js
push
outsb
sbb
aad
xor
push
cmp
xor
jecxz
and
testb
addr16
loop
jp
xor
mov
dec
ljmp
jecxz
ror
pop
test
sub
gs
pop
sub
pusha
jno
mov
cld
mov
bound
aaa
popa
mov
dec
hlt
xchg
inc
mov
in
aam
jbe
out
jns
mov
ljmp
aas
add
fwait
jne
fildll
mov
jge
adc
lds
outsl
xchg
cmp
xchg
pop
out
mov
add
ret
sbb
xor
jmp
les
js
jb
cltd
or
shrb
mov
pop
dec
cmp
mov
aaa
cwtl
inc
mov
out
mov
sbb
icebp
fsts
fucomi
jbe
test
in
cmp
jl
dec
add
jae
adc
stc
lods
fldl
in
jl
cmp
dec
les
pop
inc
or
fists
add
int
jmp
push
mov
mov
cmc
out
jp
jl
js
cmp
jns
sub
fstpt
rcrl
lea
cmp
pop
xchg
or
in
xor
ds
gs
imul
nop
cmpsb
sub
nop
repnz
ljmp
fwait
mul
xor
mov
and
inc
push
loop
or
roll
sub
pop
test
sbb
and
nop
nop
xchg
gs
jecxz
into
pop
je
mov
imul
dec
mov
mov
cmc
shlb
sbb
or
dec
clc
jle
pop
movsb
lret
in
imul
aam
imul
ror
lahf
push
and
jae
add
and
mov
inc
fists
lods
mov
movsb
call
cmpb
jg
mov
push
adc
insl
xchg
jle
pop
outsb
add
dec
jb
ja
lahf
pop
inc
gs
push
fstp
inc
stos
in
hlt
push
das
xlat
pop
stc
sub
lea
stos
dec
bound
stos
arpl
push
sub
rolb
xchg
outsl
push
fxch
push
shrb
mov
ret
jns
lcall
icebp
and
test
jno
dec
cwtl
fs
addb
pop
bound
pushl
or
dec
mov
adc
bound
js
push
sbbb
inc
dec
lret
ss
shr
xor
pop
push
scas
ret
inc
pop
sbb
aaa
adc
xchg
xor
cmpsb
jbe
jge
gs
pop
aam
push
adcb
divl
dec
cmp
ja
push
and
jns
dec
jl
dec
clc
jno
shll
fldenv
cs
out
test
adc
loope
test
jp
sbb
pop
lret
es
xchg
dec
pop
scas
fcoms
lcall
cld
inc
xchg
xor
and
lds
push
push
in
nop
rclb
pusha
and
push
and
shrb
ds
or
sbb
frstpm(287
sub
fs
inc
pop
loop
pop
dec
cmp
es
mov
inc
xchg
repz
adc
into
xor
mov
gs
dec
sbb
insb
cltd
pop
cmc
jmp
scas
andb
mov
mov
inc
ja
dec
sub
data16
push
lods
lock
or
pop
adc
out
jp
mov
push
inc
mull
arpl
jbe
and
mov
xchg
call
cli
sub
mov
cmpsb
notl
mov
pmuludq
stos
and
fstpl
jp
push
cld
dec
add
loope
movsl
xor
js
mov
xchg
scas
inc
popa
jge
je
insb
cltd
xor
cmp
inc
seta
pushf
inc
mov
cmp
mov
movsb
pop
or
popf
mov
lods
dec
mov
mov
cltd
fldcw
loop
adc
ds
cli
jmp
mov
imul
mov
cwtl
mov
rcrl
loop
and
mov
xor
add
push
dec
jg
push
mov
or
arpl
in
cwtl
incb
push
loop
rorl
jmp
ret
mov
push
in
out
test
push
adc
push
mov
out
dec
add
dec
scas
sbb
xor
ss
test
pushf
pop
xor
push
mov
lea
lret
jbe
sub
push
rorb
adc
xor
sub
loope
dec
cmpsl
scas
movsl
imul
orl
enter
pop
sbb
fnstcw
mov
adc
paddusb
xor
std
xor
jg
mov
adc
out
push
mov
dec
psubd
shll
dec
dec
sub
rcr
push
fs
pusha
jbe
inc
mov
xchg
push
push
das
pop
xor
sbb
dec
jl
loopne
cld
cmp
repz
mov
jb
jmp
iret
enter
jp
mov
xchg
inc
lahf
jae
mov
stc
subl
insl
lea
jmp
inc
stos
cmp
pop
xchg
xchg
pushf
dec
jb
mov
inc
test
cmp
negb
pop
sub
clc
scas
xchg
lret
pop
dec
mov
xlat
mov
pop
pop
aaa
or
pusha
or
dec
out
sub
bound
xchg
mov
jne
push
xchg
adc
sbb
push
orl
mov
sub
aam
push
xchg
mov
repnz
add
jnp
inc
pop
sub
jo
xchg
mov
hlt
sub
and
push
sub
loop
and
jae
push
add
xchg
xor
push
push
mov
xor
cmp
ja
pop
outsb
mov
stc
stos
dec
or
hlt
movntq
out
pop
cltd
pop
rcrb
xchg
push
mov
mov
ret
scas
fdivl
or
scas
jge
xlat
out
pop
pop
imul
popf
aam
mov
popa
jb
out
stos
add
or
fwait
xchg
mov
mov
sbbl
rcrl
jae
jp
push
test
mov
mov
cmp
and
into
xor
dec
pop
cltd
add
adc
pushf
rorl
mov
insb
out
adc
cmc
jge
loopne
push
pop
lret
test
loopne
adc
mov
and
ret
lea
mov
lods
cmc
sbb
sbb
xlat
pop
test
sahf
adc
sub
push
scas
mov
inc
cmp
pushl
mov
daa
xchg
out
cmp
ds
scas
les
mov
sbb
jecxz
js
mov
lea
rcrb
decb
popf
sbb
cld
dec
cmpl
clc
cld
sub
ja
push
pop
out
iret
fsubrs
xchg
loope
into
mov
xchg
rep
fildl
xchg
cwtl
rcrl
fucomi
dec
shrl
jecxz
and
hlt
push
pusha
outsl
cmp
dec
je
or
loope
adc
shlb
stos
iret
xchg
jg
repnz
fwait
out
insl
sub
les
fmulp
scas
fsub
jbe
int3
int
sub
fnstcw
movsb
out
out
mov
jno
mov
sub
cmpsb
mov
ja
out
jae
add
sub
cmp
or
movsb
testb
mov
mov
pop
sbb
add
loopne
mov
push
or
xchg
xor
in
mov
cmp
test
pop
idivl
arpl
in
mov
aas
sarb
movsl
daa
in
push
aam
decl
mov
ficomps
and
mov
lods
pop
xchg
sbb
imul
cmpsl
ret
movsl
and
adc
push
cmp
shlb
lock
pop
shr
mov
sbb
cmp
ret
add
gs
popf
cltd
nop
mov
out
adc
xor
psubsb
sbb
loop
dec
inc
cli
sbb
mov
add
outsl
sub
dec
lds
mov
clc
inc
mov
xchg
pop
pop
fcompl
addr16
test
push
xor
aam
and
cmpsl
iret
sub
or
and
xchg
out
mov
xor
icebp
dec
movsl
mov
xchg
ffree
dec
repz
mov
mov
push
call
mov
sub
jg
pop
shrl
xor
in
mov
dec
pop
push
or
int3
js
std
cmp
jge
sub
test
mov
sbb
fistpl
das
std
test
pop
sub
ja
in
enter
insl
mov
shlb
xchg
jb
clc
xchg
push
add
in
out
adc
cmpsl
scas
lahf
call
pop
and
push
cmp
pop
pop
xchg
std
push
cmpsl
and
pop
add
call
add
stos
add
aad
imul
fbld
fstl
mov
insb
mov
pop
out
mov
das
pop
dec
mov
js
mov
adc
lods
cmp
lock
sahf
xor
dec
mov
rcrb
mov
mov
adc
scas
fcoms
in
sub
xchg
push
jp
popf
xor
data16
add
cmpsb
arpl
loopne
add
cmp
mov
inc
mov
jl
push
fisubl
mov
dec
push
js
mov
fdivrl
mov
xchg
adc
jg
push
push
cmp
in
cmp
pop
inc
and
cmpsl
sbb
stos
xchg
and
ficoms
cmp
mov
jp
insb
pop
roll
hlt
sbb
push
xchg
test
or
nop
testl
mov
push
popf
mov
stc
mov
pop
xchg
xor
jo
xor
shlb
lret
insb
loop
or
jg
mov
mov
xor
sbb
in
addr16
pushf
movsl
xor
and
push
or
rcr
mov
js
mov
addr16
pop
cmpsl
clc
jb
mov
addb
xor
add
je
sbb
xor
adc
stc
enter
add
push
cmp
pop
xor
dec
mov
and
xor
jae
mull
sbb
push
mov
sub
xorb
insb
and
inc
push
mov
loopne
inc
dec
scas
fnstenv
cmp
jnp
not
es
push
mov
test
idivb
clc
es
and
pop
mov
mov
mov
ret
fcmovnbe
xchg
cmp
sbb
xor
loop
add
xchg
push
mov
in
leave
jecxz
sub
push
jl
dec
cmp
popf
sti
lods
lods
in
xchg
and
movsl
or
pop
iret
stos
jmp
push
imul
iret
idiv
cmp
imulb
jge
adc
mov
cli
ja
push
adc
in
jg
andb
ret
dec
pop
btr
and
scas
in
jl
and
and
popf
mov
add
inc
lea
adc
jle
mov
or
addr16
cmpsl
and
pop
mov
repz
fadds
subb
fldcw
leave
mov
mov
mov
dec
scas
into
push
or
mov
push
mov
mov
add
jns
dec
test
jmp
push
inc
mov
sbb
jmp
jg
add
add
fsubl
cmpsb
cmp
int
nop
sub
pop
mul
rolb
ds
pop
mov
int3
push
pop
ja
pusha
jge
xchg
incl
popf
mov
mov
jno
pop
shl
dec
cmp
outsl
rcrl
dec
dec
adc
xchg
xchg
test
daa
push
mov
adc
out
xor
dec
mov
xor
push
sbb
dec
cltd
test
lods
and
icebp
pop
test
rclb
push
stos
xchg
test
ret
in
xchg
mov
and
or
pop
fldenv
adc
repnz
xchg
call
lods
mov
xchg
jnp
ret
jp
mov
lods
sbb
lock
repz
movsl
stc
orb
pop
dec
or
mov
inc
inc
mov
xor
cmp
pop
cwtl
or
pop
jne
imul
inc
ss
es
mov
xlat
hlt
add
sub
mov
scas
rcll
push
dec
adc
push
mov
idivb
loop
jbe
mov
sahf
mov
mov
inc
mov
xchg
lret
and
faddp
into
fimuls
add
lret
test
loopne
aad
jmp
fs
or
or
loop
cltd
sbbb
js
dec
mov
and
bound
push
jns
ljmp
cmpsb
xchg
pushf
cmc
je
dec
mov
push
jge
sub
push
std
sbb
lcall
jo
lret
push
imul
sub
jae
fisttpl
sbb
push
fiadds
jno
aad
decb
sub
fcmovbe
cmp
cmp
xor
sbb
pop
push
ret
mov
aad
mov
mov
cltd
and
sub
cmpsb
or
pop
sbb
or
mov
fs
sahf
mov
inc
cli
xor
mov
sarl
sub
mov
push
adc
mov
mov
xor
rorb
into
jmp
sbb
jae
push
insl
xor
push
repz
mov
outsl
ret
pop
sub
or
or
cmp
jno
ds
pop
out
sti
mov
add
aam
fbstp
jl
cli
rorb
int
xchg
lods
xchg
sahf
outsl
push
fistpll
dec
fldcw
lods
and
shrl
or
xor
inc
fbld
dec
out
cmpsl
jne
and
jge
sti
inc
push
rcrl
in
std
adc
addr16
addr16
sub
or
pop
call
xchg
aas
dec
aaa
dec
addl
xor
ljmp
jbe
sti
sub
dec
ja
lds
pop
stc
stc
std
or
push
stos
ss
xor
dec
jae
loope
mov
icebp
adc
push
lea
int3
jp
push
icebp
movsl
pop
mov
icebp
out
pusha
sbb
out
xchg
in
mov
lock
lock
inc
ss
into
dec
lret
outsl
pushf
jb
add
xor
mov
mov
aas
mov
mov
leave
leave
or
out
lret
lds
mov
xor
pop
xchg
shl
arpl
xchg
sub
outsb
push
enter
mov
mov
add
ds
in
or
inc
or
gs
or
negb
mov
and
inc
or
lds
mov
andl
outsl
xor
jmp
data16
andl
shll
scas
xchg
inc
stc
sarl
pop
adcl
mov
pop
ds
sahf
xchg
inc
jmp
ret
mov
jns
inc
icebp
or
lcall
mov
add
or
jp
sub
cld
pop
movsb
sub
inc
shlb
mov
sub
or
mov
ljmp
sti
jno
imul
faddl
push
xchg
aas
ret
push
dec
sub
into
lock
loope
push
mov
cmp
outsb
movsl
push
inc
fiadds
sahf
inc
popa
sub
das
and
leave
jecxz
inc
push
xor
mov
jns
pushl
push
mov
jecxz
fidivrl
lret
and
mov
inc
stos
fwait
dec
and
adc
into
push
sub
call
in
out
pushl
mov
adc
or
enter
xor
inc
inc
xor
lcall
hlt
stos
pusha
dec
mov
mov
je
hlt
sub
push
jbe
mov
test
test
pop
add
negl
dec
rcr
rcl
mov
mov
sub
aaa
pop
pop
testb
ret
sub
jns
fstl
cmp
xchg
clts
cli
shr
loope
insb
sti
mov
test
push
add
decl
stos
stos
mov
jg
aad
add
adc
mov
push
push
xchg
xchg
sarl
sahf
xor
xchg
xchg
mov
subb
inc
sub
jecxz
int3
out
fmulp
add
add
loope
jbe
xchg
cmc
adc
add
stos
sub
and
jo
and
fidivl
stos
jb
and
xchg
fcoms
jle
adc
xchg
jne
inc
aaa
mov
push
add
xchg
fisubrs
mov
scas
js
push
or
test
push
mov
push
nop
dec
cli
aad
int3
xor
and
xchg
and
adc
nop
mov
stos
fs
cmp
or
xchg
cmp
xchg
rcll
xor
mov
sbb
cli
ja
fstl
jecxz
lcall
push
jne
add
and
or
rorb
lret
mov
mov
pop
or
andl
inc
imul
ret
sub
popf
mov
cmp
lea
mov
adc
jle
gs
in
das
out
cmp
dec
pop
aaa
pop
push
jecxz
test
pop
je
int
fdivrs
out
sub
sti
push
mov
dec
or
xor
dec
and
xchg
outsb
bound
or
icebp
add
mov
cld
cmp
test
jo
sti
xor
pushf
dec
push
pop
inc
sub
sbb
enter
mov
adc
ret
cmp
sbb
sbb
adc
add
mov
adc
enter
mov
sbb
mov
mov
aaa
cwtl
int3
in
xor
mov
xchg
pop
hlt
push
jg
push
mov
sar
lock
fcomp
repnz
daa
jne
sti
cmp
pop
call
jnp
iret
repnz
fildll
sub
std
xor
fldenv
inc
out
repz
and
into
loopne
pop
in
and
push
scas
movsb
add
loope
xor
mov
lea
ds
ror
cmp
clc
addr16
xchg
in
xchg
stos
in
add
mov
dec
mov
or
movsl
iret
sub
test
mov
or
movsb
movsl
mov
inc
sarl
pop
and
mov
xchg
pop
incl
sub
adc
pop
push
out
push
sbb
xor
or
sub
xchg
sbb
xchg
mov
in
xchg
push
inc
sub
lods
ss
pop
mov
insl
cmp
sbb
pop
mov
out
out
and
mov
jecxz
push
clc
xchg
push
mov
mov
inc
mov
xchg
cmpb
cmpsl
push
loop
xor
pop
pop
mov
add
mov
imul
dec
mov
xor
roll
jmp
cld
cli
nop
imul
test
jg
dec
lcall
ficoml
dec
cmp
mov
xchg
dec
repz
add
push
pop
cmp
push
mov
ret
and
cwtl
and
mov
jns
test
push
leave
adc
mov
lret
jge
push
lods
enter
pavgb
fdivr
fistpl
shl
pop
push
ljmp
addr16
loope
mov
icebp
jmp
or
inc
arpl
pop
roll
mov
scas
bound
mov
jns
into
sub
sub
mov
sbb
imul
decb
out
outsl
aaa
aad
sub
sahf
or
cmp
adc
mov
cmp
mov
inc
std
jo
clc
push
aas
dec
mov
orl
mov
sub
sti
dec
outsl
dec
cmpsb
xor
cmc
sbb
lret
pusha
sbb
sub
dec
or
and
jmp
adc
repz
mov
jnp
fdivs
jnp
inc
pop
sub
fdivl
test
ss
jle
movsl
add
aad
sbb
xorb
cmpsl
add
push
xchg
and
mov
je
push
sbb
mov
dec
shll
test
ret
mov
cli
faddp
push
outsl
lret
in
cmp
adc
and
xchg
insl
js
into
mov
jmp
or
and
out
mov
jle
adc
ret
loope
in
lret
out
pop
mov
movsl
push
push
mov
jge
daa
dec
adcl
dec
xchg
pop
out
and
cmc
push
shl
inc
xchg
aaa
mov
jae
adcb
hlt
jmp
inc
fwait
in
xchg
adc
fadds
mov
in
aas
fwait
or
out
mov
mov
cmp
std
ljmp
mov
sbb
pop
pop
lea
and
push
add
cli
loope
sar
add
pusha
jnp
addr16
movsl
in
sbb
jp
in
push
dec
pop
gs
fdivrl
stos
xor
cmp
xor
mov
in
loope
es
fs
mov
adc
icebp
adc
filds
rolb
adc
and
jae
xchg
jnp
cmp
dec
dec
or
stos
and
jle
scas
js
fcoml
ds
pop
mov
scas
sbb
add
adc
in
into
sbb
daa
sub
testb
fldl
jmp
and
mov
outsl
sahf
aad
pushf
jge
add
inc
adc
push
jl
clc
scas
adc
clc
sub
dec
cli
xchg
cmpsl
mov
jmp
inc
or
in
mov
dec
shlb
mov
pop
imul
add
ficomps
incl
xor
rcl
adc
pop
pop
or
adc
inc
ja
dec
mov
xchg
sub
pop
or
push
shrl
xor
push
mov
xchg
nop
push
int3
sub
mov
int
lcall
jae
mov
mov
xor
push
add
mov
xchg
mov
mov
das
flds
pop
adc
lret
lods
mov
hlt
xchg
cli
mov
hlt
lds
cmp
test
mov
cltd
mov
push
mov
cmpb
pop
repz
rol
rorl
xor
data16
mov
adc
mov
std
jmp
cmp
mov
dec
xchg
imul
cmp
jge
cs
jmp
ja
xor
cmpsl
in
repnz
mov
inc
test
jmp
push
mov
arpl
mov
jmp
mov
mov
mov
out
sub
pop
jecxz
push
pshufw
stos
insb
icebp
adc
add
lods
sub
loop
int3
lcall
sub
mov
dec
xchg
movups
test
daa
sar
addr16
pop
daa
mov
or
imul
clc
sub
cmp
ss
push
je
ja
pop
pop
insl
push
loope
sub
test
sub
in
or
inc
dec
rorb
test
and
push
xor
adc
mov
stc
push
mov
mov
mov
inc
sub
inc
dec
call
aaa
jae
xor
xor
jmp
in
fidivl
jg
mov
add
push
push
shll
xor
add
push
outsl
adc
xlat
out
fcomip
addl
sub
inc
fwait
xchg
push
xor
lods
pop
jecxz
jecxz
stc
pushf
push
rol
in
pop
iret
enter
in
push
ja
jbe
sub
dec
rclb
dec
inc
cwtl
stos
lret
cmc
fidivs
shl
add
fwait
push
jae
mov
mov
in
out
sub
inc
dec
jne
in
gs
cmpl
inc
rcr
fisubs
aaa
mov
push
dec
xchg
pop
inc
xchg
jo
into
push
cli
inc
daa
sub
clc
sbb
inc
dec
cli
mov
mov
in
stos
cmp
lahf
add
add
fdivp
adc
inc
cmp
jle
leave
ss
jp
jns
adc
pop
xor
je
pop
and
fmul
pop
in
je
iret
lcall
xchg
mov
mov
add
sub
incb
xchg
rol
bound
or
jbe
cmp
mov
testl
mov
scas
mov
mov
scas
sub
mov
data16
fld1
clc
aam
cwtl
popa
push
or
jns
and
fs
int
cli
push
mov
jp
dec
inc
out
mov
xorb
pop
add
cmp
pop
mov
lahf
jge
adc
pop
ss
nop
pop
andb
adc
push
int
sbb
out
jp
xchg
jl
cmp
cmp
push
lret
add
fwait
enter
hlt
jbe
add
insb
dec
movsb
sarb
popa
xor
mov
xor
mov
les
push
fists
mov
fdivs
popf
jae
push
shlb
out
push
xor
shrb
pop
mov
insl
repz
outsb
add
loopne,pt
les
rcrb
hlt
xor
xorl
adc
lcall
pop
mov
lds
frstor
xchg
mov
js
fcompl
jp
dec
mov
jae
mov
mov
movsl
pop
loope
push
push
dec
xchg
fistps
in
lret
jl
inc
add
aaa
sahf
xor
mov
and
push
xor
mov
leave
call
iret
cmp
popl
dec
push
shl
fisubl
lods
in
xchg
mov
fdivrs
test
fcomps
aad
pop
jbe
daa
test
mov
push
sub
adc
test
cld
dec
mov
lds
cltd
xor
icebp
add
sub
aaa
mov
shlb
andb
dec
fsubrs
sbb
mov
sub
lret
sub
xor
rcr
loopne
and
mov
jne
ss
pop
arpl
shrl
mov
jge
inc
push
pop
adc
xlat
outsb
xor
push
arpl
iret
push
scas
out
mov
dec
pop
pop
sub
popa
mov
and
sub
xor
fldt
or
xchg
les
or
shl
xlat
jl
inc
ss
jno
add
repz
pop
and
cmpsl
aam
mov
lret
pusha
add
popa
lds
or
mov
imul
out
and
les
mov
imul
ret
mulb
fucomi
cli
ret
mov
int
cmp
cld
ljmp
cltd
out
push
das
jne
xor
mov
mov
dec
mov
xchg
fbstp
std
insl
cld
or
subb
xor
or
adc
hlt
out
daa
imulb
sub
ror
pop
and
enter
sbb
out
je
jge
inc
cmpsl
int
insb
mov
cmp
mov
iret
xor
in
in
test
jae
out
cwtl
inc
sbb
stc
std
jne
mov
pop
mov
dec
mov
ds
pop
push
aas
sub
jg
lods
sub
clc
add
sbb
call
or
int3
jmp
mov
push
xor
fnstsw
or
js
test
mov
mov
add
outsb
and
inc
adc
daa
jnp
mov
push
mov
or
test
xchg
nop
pop
mov
mov
dec
or
cmp
mov
xor
cmp
cmc
je
das
jns
js
xchg
mov
rcrl
push
aaa
sub
mov
xchg
pushf
test
xchg
cmpsb
cs
cmpsb
adc
es
ret
pop
cmpsb
mov
bound
mov
imul
adc
scas
cmpsb
lea
xchg
adc
jnp
pop
int3
rcll
jo
mov
fisttpll
jae
dec
add
or
arpl
in
xchg
addr16
xchg
xchg
mov
lds
enter
nop
push
adc
or
cmp
jne
cmpl
pusha
fwait
sub
mov
mov
jecxz
subl
fwait
daa
xchg
dec
dec
mov
ja
movl
es
nop
mov
xlat
mov
dec
jnp
ljmpw
cmp
data16
cli
add
pop
dec
mov
shrb
aas
adc
inc
push
decb
adc
and
dec
dec
and
and
jle
arpl
push
mov
stc
xor
mov
jne
clc
in
popa
bound
and
cmp
jmp
mov
sub
inc
je
or
repz
rol
cmp
xor
clc
sbb
and
xchg
out
shll
fcompl
and
mov
inc
rorb
jb
push
lea
popf
or
insl
push
xchg
mov
pop
xor
in
pop
xchg
adc
bound
addb
gs
mov
jb
or
fadds
mov
and
cmpsb
sar
mov
daa
divb
dec
jge
stc
ret
pop
push
test
push
sub
std
xor
jne
sbb
iret
mov
sub
cwtl
jl
ljmp
cmp
add
lahf
daa
xor
lret
addr16
out
hlt
movb
insl
mov
in
sub
movsb
push
push
pusha
push
in
outsb
fs
mov
ja
dec
ss
dec
dec
add
push
xchg
cltd
cs
cmp
leave
cmp
insb
in
rcrl
aam
sti
je
push
jnp
xchg
fbstp
call
xchg
lock
cmp
jnp
pop
and
cmc
dec
sub
pop
add
dec
inc
mov
loop
cmpsb
xchg
inc
call
pushf
ss
sti
sahf
mov
lods
and
jge
adcl
in
dec
and
ss
cld
les
adc
pop
ss
xor
add
sub
andb
or
push
fwait
cwtl
ret
xor
or
and
mov
mov
mov
push
fwait
fwait
bound
jle
or
push
aad
mov
cmp
inc
lds
xlat
inc
or
xchg
jge
out
mov
sub
stos
sarl
mov
inc
adc
lret
push
out
jmp
cmp
and
aas
insb
push
cmp
mov
sbb
dec
xor
andl
call
sbb
movsb
leave
bound
xlat
js
and
notb
into
test
mov
int
xchg
ss
xchg
daa
push
cmpsb
test
xchg
add
sub
shlb
lea
pop
push
sahf
inc
pop
cmpsb
cltd
sbb
mov
cmp
push
adc
mov
xlat
cmpb
inc
xlat
pop
add
filds
inc
mov
in
stos
ss
movsb
or
xor
jae
push
jle
cmp
movsb
sub
repz
jecxz
int3
repz
jmp
push
jmp
lcall
loop
mov
lea
jno,pt
out
ret
xchg
dec
jbe
xor
lock
jmp
mov
sub
cli
aaa
mov
clc
mov
dec
sbb
not
sub
lret
insb
sbb
pop
pop
push
pusha
test
mov
lret
mov
or
xor
or
sbb
outsb
insb
cld
mov
ret
cmp
cmp
enter
or
mov
insl
adc
ss
pmulhw
push
pop
cmp
push
aad
test
fisubl
imul
sahf
sbb
jae
add
pop
test
pop
out
out
mov
mov
pop
jb
out
mov
adc
xor
adc
sub
test
push
subb
pop
push
jmp
add
dec
iret
lret
jge
sti
mov
es
or
sbb
push
mov
mov
xor
lahf
cmp
sbb
cmc
sub
aam
cmpsl
aam
inc
inc
pop
sbb
and
out
xlat
cli
pop
int
loop
mov
dec
ret
xor
in
sar
loop
mov
out
in
outsl
push
mov
jge
pop
xchg
imul
out
jns
mov
xor
lcall
pop
sub
sbb
pop
adc
iret
sub
call
mov
xchg
repz
pcmpeqb
scas
jp
sbb
mov
out
sub
sub
aaa
inc
xor
push
and
test
das
test
dec
adc
dec
adc
mov
lock
push
cmp
jns
ds
cmp
sbb
ja
int
cli
mov
adc
fs
int3
fisttps
bound
jnp
pop
jno
mov
jl
xorb
adc
scas
mov
stos
in
fsubp
cmp
cmpsb
shrl
cmpsb
push
dec
mov
lahf
jge
or
out
lock
outsl
push
xlat
xchg
and
jbe
push
mov
ss
mov
mov
ja
out
mov
mov
pop
mov
dec
stos
xor
lods
mov
dec
push
xor
cs
je
sbb
outsb
jmp
rclb
pop
call
rcrl
mov
push
add
push
push
lock
push
je
and
push
das
leave
and
mov
test
jle
and
out
aas
insb
mov
push
orb
mov
mov
mov
or
xchg
daa
mov
sub
pop
pop
in
ja
mov
sbb
dec
enter
loope
imul
and
mov
mov
push
sub
arpl
adc
dec
fnstsw
sbbl
int
arpl
in
and
push
mov
push
jmp
and
push
jl
dec
pushf
xor
loop
jnp
loopne
xchg
push
sti
outsb
jge
aaa
pusha
pop
loop
mov
push
ljmp
adc
xor
scas
lret
cmp
mov
pop
bound
inc
cmp
repnz
or
mov
aaa
xor
mov
jns
ret
pop
loopne
mov
xor
filds
outsb
add
pop
rcrb
push
and
inc
test
xor
iret
xor
int
or
imul
scas
sbb
lods
stc
inc
inc
iret
out
data16
inc
cmp
das
test
jle
testb
movsb
hlt
mov
adc
je
cmp
std
sub
das
push
lret
test
repnz
jl
or
subb
adc
loopne
das
xchg
mov
push
xor
ds
into
sti
and
lea
xor
and
test
push
insl
loop
inc
mov
jnp
fcmovnbe
lods
mov
push
bound
mov
inc
cltd
js
test
dec
xorb
fmulp
jne
mov
fnstcw
jns
sbb
sub
hlt
sbb
movsl
gs
lret
jne
lock
adc
or
leave
andb
sbb
cmp
scas
dec
addr16
jle
shrl
mov
ja
cmc
mov
jno
inc
insb
xchg
push
inc
and
test
addb
insl
loopne
xor
dec
xchg
data16
stos
add
imul
sbb
sub
jb
dec
jle
xchg
cmp
xchg
sub
xchg
pushf
aas
pusha
pop
push
rol
outsl
push
je
and
push
mov
inc
mov
loope
test
fidivs
pop
mov
jge
sbb
leave
outsl
push
mov
xor
aam
outsl
pop
push
aad
bound
push
add
popf
orb
push
jmp
loop
inc
mov
inc
dec
add
pusha
inc
adc
out
add
and
inc
int3
fldl
subl
xchg
xor
add
movsl
sbb
popa
dec
outsb
dec
sbb
adc
mov
orl
lea
in
mov
or
je
test
mov
outsl
add
dec
inc
sbb
fnsave
adc
push
mov
or
test
sbb
adc
xchg
xchg
std
push
lock
test
mov
imul
inc
out
sbb
lcall
cs
sbbl
loope
xor
pop
add
pushf
adc
mov
fldl
fsubp
test
test
mov
sub
mov
xchg
cmp
inc
dec
ss
mov
shll
cmp
stc
dec
adcb
jmp
repnz
pop
bound
push
sbb
lods
cmp
dec
xor
mov
add
loop
inc
adc
arpl
shll
shll
xor
mov
pop
cs
cltd
adc
jbe
fistpl
test
add
mov
sti
fsubrs
or
mov
pop
rol
mov
or
les
add
mov
xchg
popf
jecxz
stos
into
mov
mov
mov
adc
sub
add
add
jge
lret
pop
dec
pop
mov
filds
lret
dec
sbb
pop
je
jl
int3
sbb
cmp
shrl
lea
add
xor
push
insl
aas
test
stc
adc
add
js
mov
dec
mov
sbb
pop
mov
mov
and
jo
flds
test
pushf
mov
dec
ret
jp
mov
sub
stos
mov
mov
lea
sub
inc
add
movsb
bound
shrb
mov
iret
or
sub
arpl
xchg
stc
out
rclb
ret
sbb
mov
repnz
ret
pop
push
das
push
adc
dec
popa
xchg
xlat
sub
cmpsl
sti
jb
fdivp
push
out
mov
sub
je
iret
dec
insb
in
jmp
cli
push
lcall
and
in
lds
sub
push
dec
fstl
pop
repz
imul
ljmp
ds
insb
fisubrs
enter
out
adc
pop
cmp
xchg
out
popa
insb
sub
jmp
bound
adc
jae
inc
test
mov
inc
jbe
jecxz
bound
and
mov
enter
out
jp
leave
dec
pop
aaa
bound
cwtl
test
rcll
add
or
mov
cwtl
into
or
pusha
hlt
out
clc
xchg
cld
mov
mov
sub
xchg
and
mov
sbb
mov
mov
rcl
int3
mov
mov
lret
in
lock
insb
dec
add
mov
sbb
mov
shr
lret
jg
push
in
mov
mov
adc
vmaxsd
mov
movsl
cmp
lret
mov
inc
pop
out
dec
fwait
pop
test
sbb
imul
hlt
adc
and
sub
fs
in
outsl
mov
lahf
xchg
or
and
pop
adc
mov
cltd
cltd
imul
xor
sarb
and
sub
cmp
mov
jno
lods
movsb
out
fwait
ljmp
loopne
xor
add
in
out
push
daa
mov
je
and
sub
sbb
add
cs
jne
xchg
ror
dec
out
lock
jmp
lds
and
outsl
out
mov
test
push
mov
repnz
fisubrl
loope
ja
int3
dec
rol
jmp
dec
adc
incb
lgs
jae
out
in
sti
dec
cmp
fldt
adc
pop
in
jmp
aas
aam
add
and
mov
sub
jae
cmp
mov
sahf
dec
pop
js
and
shl
fs
jbe
dec
outsl
iret
lods
xchg
repz
jecxz
lahf
sbb
sbb
xchg
or
inc
xorb
repnz
pop
inc
fidivrs
push
or
or
inc
sub
xorb
call
sub
push
xchg
sbb
cmc
scas
sub
mov
cwtl
rcll
push
pop
and
test
mov
in
mov
movsb
scas
cli
adc
lock
sub
lcall
or
push
mov
into
sub
mov
iret
jne
and
hlt
mov
cs
xchg
pop
cmc
pop
or
cld
daa
dec
sahf
pushf
lock
cmpsb
sahf
xor
or
push
cld
les
xor
xchg
pop
push
cld
jns
push
add
sti
lea
or
sbb
daa
sbb
jl
pushf
dec
fists
xlat
mov
add
es
divb
lds
xlat
test
add
sbb
aad
mov
out
test
jle
inc
in
mov
jne
rcll
test
repz
sbb
jecxz
sbb
mov
cmp
jl
jae
ret
dec
xchg
in
fsts
dec
push
or
sbb
ljmp
xchg
stos
fisubl
push
jne
adc
pushf
lret
aad
xchg
pushl
addl
push
addb
mov
mov
loopne
mov
push
push
xchg
mov
rcll
bound
je
subl
pop
cs
pop
xor
push
out
push
shll
pop
inc
bound
adc
dec
test
pop
mov
mov
pop
push
sbb
and
or
sub
sub
int3
mov
inc
int
icebp
cmpb
mov
mov
push
dec
ss
mov
xchg
cwtl
xchg
in
imul
pop
pop
sbb
sbb
and
xchg
call
push
cmp
or
jp
jns
lcall
sub
fwait
enter
jle
push
pop
lret
in
sbb
je
movsl
imul
ret
lret
adc
push
lods
xchg
sbb
jae
faddl
mov
mov
sbb
cmp
cmp
push
inc
push
cmp
adc
push
ret
mov
cwtl
xor
add
fimuls
sub
xor
sbb
jmp
outsl
mov
int
dec
or
sbb
leave
jecxz
negl
pop
push
push
jo
cmpl
mov
add
push
xlat
mov
flds
push
inc
stc
inc
push
or
jno
dec
add
jbe
lods
push
movl
xchg
imull
mov
sbb
cmp
adc
or
mov
cmp
pushf
xor
int
clc
pop
iret
addb
loop
xchg
dec
jno
mov
xchg
fs
cmp
push
mov
hlt
mov
inc
leave
lea
xchg
fwait
sbb
and
pop
xchg
fsubp
dec
and
push
shlb
mov
mov
scas
adc
int
xor
and
in
inc
mov
bound
sub
outsl
and
mov
cmpsb
mov
sahf
xor
dec
push
rcl
mul
cli
cmp
xor
fs
repnz
xor
mov
adc
lret
andb
add
fcom
adc
mov
mov
mov
mov
inc
mov
push
adc
scas
push
adc
lcall
jo
aaa
mov
and
mov
inc
fxch
lahf
cwtl
test
push
or
cwtl
loopne
inc
ret
subb
jmp
int
sub
jmp
or
loop
xchg
cs
loopne
cmp
mov
xlat
adcb
call
cs
adc
std
and
sbb
mov
loop
sbb
shrl
jle
mov
mov
addr16
inc
ja
cmpsb
das
daa
into
mov
in
dec
mov
jmp
daa
iret
stc
loopne
in
lods
gs
popa
adc
add
cmc
jl
js
cmp
or
sbbb
adc
xchg
inc
out
cmpsl
insb
jb
incl
mov
mov
cmp
dec
outsb
aaa
rcll
shlb
sbb
adc
dec
xor
xchg
dec
clc
adc
xchg
lcall
loope
movsl
and
and
pop
adc
enter
inc
cmp
in
pop
jl
stos
pop
dec
insl
sahf
or
sbb
cmpsl
movsl
rol
lea
jecxz
adc
in
mov
mov
sbb
scas
sub
xchg
mov
mov
or
loope
adc
aam
fcmovbe
sbb
mov
repz
std
mov
pop
mov
jg
jae
adc
pop
mov
push
ds
cmpsl
mov
push
dec
inc
sbb
jne
popa
gs
inc
inc
and
mov
adc
jo
jno
mov
mov
add
stos
dec
mov
loop
mov
mov
aam
mov
or
or
pop
lds
dec
push
push
dec
xchg
test
mov
dec
aas
adc
rcr
dec
lea
imul
jb
sahf
pushf
xchg
call
punpcklbw
loope
fmull
ljmp
mov
arpl
arpl
xchg
adc
xor
or
adc
and
leave
mov
stos
sarb
rcll
cmp
mov
or
mov
icebp
mov
mov
stos
pop
dec
dec
jl
xor
mov
sub
mov
add
push
cli
icebp
sub
rclb
daa
test
out
dec
iret
rorb
xchg
popa
mov
pusha
sbb
sbb
push
adc
jge
imul
fdivrl
outsl
jo
mov
adc
xchg
loop
lahf
insl
xchg
into
mov
cld
mov
or
jns
in
pusha
ror
pop
push
mov
xchg
dec
cmp
cmpsb
mov
cltd
outsl
mov
fisubrl
adc
push
xchg
push
mov
add
xchg
mov
pop
ret
cmp
bound
mov
xor
dec
push
push
mov
xor
pop
scas
shrl
aam
addr16
inc
sub
lods
jae
std
cmp
outsb
jmp
lea
inc
xor
sbb
ja
lahf
mov
ja
int3
fldcw
inc
hlt
fcoml
gs
out
adc
orl
jnp
insb
mov
inc
pop
fwait
arpl
mov
scas
ss
scas
out
and
sub
xor
fisubrl
xchg
mov
mov
mov
dec
outsl
cmpsb
jp
xchg
push
test
pop
and
pop
scas
adc
dec
lods
push
int
testb
rcl
push
sub
or
jno
mov
xchg
sbb
dec
loop
loopne
adc
ret
aam
dec
pop
inc
es
jmp
or
clc
mov
add
sbb
mov
je
enter
daa
mov
mov
push
pop
jg
movsb
adc
mov
aam
adc
or
jnp
and
sar
int3
imul
in
mov
push
cmp
push
adc
nop
ret
xchg
shl
lods
cmp
das
in
jno
insl
stos
sahf
cwtl
mov
jecxz
idivl
xor
mov
adc
xchg
jno
ret
lods
mov
mov
pop
xchg
inc
fadd
fsts
hlt
das
jb
dec
mov
push
add
jb
jne
ret
aaa
push
mov
mov
jp
xchg
adc
loope
bound
repz
xchg
and
pop
adc
jp
fsts
sub
fcomip
dec
mov
gs
fisubs
cmp
sbb
icebp
lods
lahf
in
cmp
add
add
sbb
int3
js
sbb
xchg
cmpsl
inc
mov
pusha
or
imul
pop
cli
pusha
clc
ret
mov
jg
and
bound
sub
bound
sbb
js
int
push
sbb
mov
rclb
cli
cmp
and
test
and
inc
or
mov
cmp
mov
popf
inc
push
shlb
add
mov
insl
jb
sub
inc
out
test
sub
mov
jae
jb
ret
mov
into
ljmp
or
push
ja
jmp
scas
dec
jno
fisubs
sarw
cwtl
jmp
inc
mov
xchg
mov
push
mov
push
pop
jecxz
out
inc
into
sbb
out
push
pushf
add
addr16
subl
or
movsb
inc
cmp
icebp
cmp
andl
scas
ffreep
inc
sub
cmc
jl
xchg
jb
es
push
out
cld
cmp
jb
js
fldenv
into
pop
jae
add
mov
pop
adc
adc
outsb
pop
lock
call
xor
sbb
and
aam
aam
dec
dec
test
in
add
push
lcall
out
cmp
inc
push
fs
lock
sub
push
sbb
cmp
push
mov
sbb
aad
aaa
ja
pop
sti
mov
xor
movsb
pop
outsb
and
push
loop
cltd
cmp
shll
cmp
cli
and
mov
mov
idivl
popa
mov
scas
mov
in
ret
or
adc
adc
mov
mov
lea
mov
sub
call
in
roll
adc
sbbb
mov
xor
cmp
cmc
jnp
dec
mov
cld
scas
xchg
and
pop
dec
cli
and
mov
jno
pop
int
lods
out
xor
jmp
mov
test
aad
insb
lret
push
js
sbb
call
test
ffree
cmpsl
mov
mov
mov
imulb
add
push
cmp
arpl
aad
mov
into
mov
lds
xlat
add
add
adc
xor
out
fsubrl
testl
cmpsl
mov
outsb
in
xchg
ss
inc
cmc
mov
xchg
les
push
sbb
add
adc
les
out
cmp
cmp
stos
stc
lret
int3
mov
inc
pop
jecxz
mov
xchg
sub
mov
sbb
jo
sub
aas
popf
mov
stos
sti
addl
pop
jbe
xor
fs
mov
sbb
push
or
pushl
xchg
or
loopne
hlt
je
push
pusha
jg
das
push
xlat
sbb
push
pop
xchg
je
lahf
dec
push
sti
std
jno
test
enter
jge
push
push
lret
mov
test
mov
and
push
int
add
jae
push
mov
addr16
and
imul
repnz
inc
jbe
sarl
xor
cli
mov
dec
xchg
mov
stos
outsb
movsb
sbb
mov
cmpsl
out
js
pop
or
ret
std
add
pushf
push
je
lods
call
into
cmp
push
roll
mov
pop
jae
ja
iret
call
shr
xor
mov
stos
mov
sub
mov
jne
mov
icebp
stc
lret
pusha
mov
cltd
repz
sbb
xor
je
in
stos
push
mulb
test
lods
adc
out
jmp
mov
inc
mov
pop
mov
lret
xchg
push
jns
ficoms
js
fsubr
and
fistl
call
std
push
mov
data16
rcrl
or
sbb
cwtl
lret
and
jbe
inc
dec
cmp
push
mov
fimull
in
in
lods
jb
roll
jo
jnp
aas
ja
imul
xchg
adc
mov
fstl
mov
ret
call
js
cmpsl
cmp
pop
movsl
fdivrs
xchg
mov
fcmove
push
jo
sahf
mov
xchg
jno
xchg
test
stc
lahf
loop
mov
shlb
sbb
xchg
mov
push
dec
jmp
fadd
jl
lret
aaa
push
fdivrs
mov
adc
gs
orl
popf
aas
cmp
fdivrl
push
leave
mov
lret
push
div
aas
in
sub
jle
jmp
pop
mov
cmp
pop
mov
aas
mov
xor
push
cmp
push
xor
pop
sbb
xchg
jge
and
or
repz
pushf
in
lret
or
les
xor
cld
out
and
in
shr
insb
fldenv
popa
lret
sub
fiaddl
jb
and
insl
sub
cwtl
push
test
lds
xchg
pusha
sub
or
test
xchg
insl
pop
test
stos
aas
jmp
fxch
pop
les
push
and
or
sbb
repnz
mov
std
mov
adc
aaa
incb
xlat
pop
mov
outsb
popf
add
jnp
rcll
pop
int
xor
push
push
pop
in
cmp
xchg
mov
dec
popf
pop
outsl
data16
adc
les
sti
fnsave
jl
cmpsl
enter
cli
out
adc
and
inc
xchg
mov
fcoms
std
adc
sbb
xorl
mov
jns
es
xor
out
cltd
push
jbe
jo
add
clc
push
inc
mov
adc
dec
ds
gs
std
mov
loopne
xchg
mov
jg
cld
or
pop
pop
outsb
lods
jmp
test
ss
int
fldl
and
lcall
sub
je
and
xchg
jnp
pop
push
push
stos
pop
xor
out
call
lret
stos
std
cli
test
adc
or
popf
or
in
mov
lds
iret
mov
cmp
and
sub
test
sub
arpl
mov
xor
ret
loop
pop
or
into
push
sub
int3
jae
iret
push
cltd
xchg
lock
int
mov
xchg
sahf
sub
fstps
mov
pop
add
fistl
aas
xor
loopne
addl
out
mov
mov
mov
ljmp
jb
inc
xchg
loopne
pushf
call
cmp
and
xchg
adc
push
hlt
cmp
roll
xlat
lea
jmp
es
sarb
aam
andb
and
xor
imul
inc
ret
stos
add
ljmp
xor
sbbl
inc
and
mov
pop
cltd
cmp
dec
sbb
cli
std
jbe
icebp
xchg
pop
roll
jbe
xchg
or
test
sarl
cmp
std
mov
pop
mov
pop
orl
and
add
or
inc
lods
out
out
xorb
sub
je
sahf
lods
lret
pop
lahf
push
cmp
movsb
sbb
daa
xchg
mov
sub
es
inc
cmpb
jle
nop
iret
adcb
addr16
inc
cmp
clc
cs
movsb
subl
test
das
std
fstpl
loopnew
aas
sub
adc
xchg
hlt
xchg
fstl
movsb
stos
inc
mov
mov
add
jp
stos
flds
push
int
or
in
int3
lds
sbb
sbb
lods
arpl
pop
jb
ja
adc
stos
aaa
lcall
jmp
push
mov
in
xor
add
mov
pop
xor
jns
std
sbb
lret
jle
out
mov
xchg
fistpll
nop
adc
dec
cmp
sbb
ss
jecxz
mov
inc
xchg
jbe
rcrl
sti
inc
test
inc
mov
insl
push
jbe
push
lds
or
pop
fwait
sub
adc
dec
push
in
pop
sbbb
loopne
mov
imul
mov
inc
ficoml
cltd
sbbl
rolb
imul
in
ficoml
mov
inc
jmp
pop
cmpsb
sub
add
cmp
lret
iret
leave
adc
or
mov
mov
xchg
push
jo
out
mov
insb
push
ret
insl
mov
mov
repz
push
addl
push
pop
cmp
test
mov
inc
iret
lods
enter
out
dec
or
xchg
movsl
add
ret
xchg
rcll
imul
jecxz
cmc
sti
cmc
sbb
dec
scas
hlt
add
pop
inc
adc
and
adc
int3
adc
aaa
shrl
aas
jo
mov
jp
out
lret
idivl
repnz
sub
addb
or
imul
pushf
popa
addr16
push
lea
stos
mov
loope
mov
mov
or
xor
adc
sbb
pop
xchg
inc
repnz
cltd
sti
rcrb
and
pop
jb
adc
in
add
mov
sbb
xor
in
dec
test
pop
inc
sub
outsl
add
pop
jne
add
push
mov
cmpl
add
add
pusha
mov
jns
aaa
addr16
xor
add
rorb
sbb
mov
sbb
lock
inc
add
lock
pop
jecxz
fwait
adc
or
mov
jnp
sbb
or
rorb
xor
mov
add
les
mov
xchg
add
jge
sbb
and
mov
fcomp
lods
cltd
push
sbb
stc
fdivr
fstpt
and
mov
mov
mov
jmp
cmpsb
jp
push
cmpsb
roll
inc
adc
aaa
imul
shll
sar
mov
jmp
sbb
xchg
in
lret
stc
xchg
or
hlt
andb
cmpsb
sbbl
xor
pop
inc
dec
rorl
les
jp
repnz
leave
sub
scas
add
cmc
dec
jnp
mov
mov
sub
loop
aas
and
int3
xchg
loope
icebp
mov
cmp
cli
jg
dec
jp
imulb
mov
movsl
fs
mov
pop
mov
jmp
adc
lods
or
cmp
pushf
push
movsl
aad
adc
sub
out
adc
sti
gs
std
pop
mov
pop
out
test
out
cltd
subb
cmp
inc
sbb
je
cwtl
and
imul
stos
in
pushf
add
sbb
xor
ljmp
mov
mov
cmp
in
xchg
nop
in
ret
mov
leave
cmpsl
cmp
jp
and
xor
xor
mov
or
leave
imul
aam
and
or
jns
daa
in
lds
xchg
pop
movsl
jge
push
xchg
insl
dec
dec
clc
stos
dec
stos
test
add
mov
loope
sub
orl
inc
repnz
mov
add
lcall
stc
bound
and
mov
xchg
fs
xchg
push
fs
xlat
jge
inc
repnz
insb
and
pop
js
and
mov
jne
dec
and
push
pop
ret
pop
movsl
jecxz
adc
fmuls
jo
pop
add
add
js
shl
arpl
aas
cmp
movsl
out
adc
adc
dec
insb
gs
xor
or
inc
mov
mov
cmp
jno
mov
cmp
scas
jg
mov
sbb
dec
cli
xchg
adc
in
fdivrl
dec
pop
dec
push
add
repz
xlat
add
ljmp
ret
push
iret
lock
int3
faddp
pop
jp
jecxz
lret
rorl
test
xchg
fdivl
inc
pop
push
cs
adc
push
fistl
dec
into
das
pop
movl
or
mov
cli
test
sbb
xor
cmpsl
mov
mov
testb
rcll
fstpt
xchg
leave
sub
fs
or
add
pop
stos
and
rcll
into
loop
loop
push
adc
mov
mov
sbb
insb
aam
lds
out
dec
push
dec
push
push
gs
cwtl
roll
inc
sbb
pushf
push
mov
cld
sbb
sub
xor
xchg
outsl
icebp
cmp
mov
fsubs
test
jl
pop
fwait
jne
aam
test
push
adc
std
jne
pop
pop
add
rcrb
rcrl
mov
sub
repnz
mov
or
mov
je
jp
sar
fdivrp
add
xchg
cmp
and
inc
cmp
mov
adc
pushf
int
popa
aam
sar
push
dec
out
mov
xor
or
pop
jecxz
fldcw
pushf
cmp
in
jno
xor
mov
movsl
xchg
or
dec
call
repnz
movsb
in
mov
pop
sbb
xchg
int
test
das
push
enter
shlb
sub
pop
mov
imul
out
test
jnp
mov
lock
or
sub
jg
fstpt
sbb
pop
in
push
cmpsb
jne
cmp
dec
shr
xchg
mov
out
mov
sbb
cwtl
jmp
xor
cmp
pusha
nop
scas
sbb
mov
bound
sbb
int3
lods
adc
jl
lock
fwait
icebp
jg
sub
pop
hlt
sahf
push
leave
jne
dec
es
lock
push
xchg
inc
arpl
mov
jno
das
adc
mov
imul
dec
adc
loopne
push
ja
fidivrs
sahf
mov
call
pop
mov
pop
mov
and
inc
pop
push
sbb
ja
faddl
inc
pop
subb
mov
in
and
xor
fisubl
adc
imul
or
mov
xchg
push
sub
or
fucom
fs
xchg
outsb
insl
aam
xchg
push
idivb
cmpb
outsb
lock
pushf
xchg
adc
push
sahf
outsb
add
cltd
out
ljmp
dec
cli
insl
xor
mov
in
in
lea
repz
shlb
test
les
cmpsl
or
fdivrl
out
sbb
insb
jo
movsb
gs
jae
into
clc
push
dec
xchg
xchg
and
daa
add
repz
xor
loopne
out
clc
push
pop
in
jg
test
int
stos
aad
clc
and
cmc
sub
push
ljmp
lahf
es
insl
push
in
jecxz
mov
or
mov
push
mov
pop
sbb
cmpsl
push
sub
jl
mov
or
ror
and
mov
xor
iret
fmull
push
push
ljmp
out
jo
ljmp
jae
sbb
js
adc
xor
and
xlat
dec
arpl
jb
dec
out
popa
jb
and
push
bound
cmp
mov
fsubr
push
or
insl
jecxz
sbb
inc
out
bound
loope
aas
ret
mov
pop
dec
xchg
imul
pop
fwait
mov
xchg
dec
call
loop
inc
add
inc
shlb
iret
mov
lcall
pop
pop
xor
mov
cmp
jecxz
xchg
sub
jle
repz
adc
ret
shll
loopne
mov
jecxz
movsb
lods
cwtl
add
adc
pushf
xchg
sbb
test
inc
movsb
jns
lds
mov
add
push
and
xlat
leave
xchg
inc
lds
std
xor
and
popf
add
add
adc
lret
mov
xor
inc
pop
mov
loope
jg
pushf
add
jno
aas
lods
cli
mov
into
test
jecxz
xor
ret
pop
aaa
lods
dec
rcrl
xor
or
fmull
lahf
aaa
test
aaa
cmp
xor
jae
enter
mov
push
jnp
mov
cmp
mov
adc
icebp
sahf
mov
mov
inc
inc
jne
int
shrl
loop
icebp
adc
xchg
inc
push
sbbl
push
int
mov
sub
cmp
cld
push
sub
jmp
mov
mov
and
rorl
loope
push
adc
in
push
out
add
pop
cmp
popa
sub
mov
vpcmpgtd
jnp
pop
xlat
cmc
test
xor
dec
and
bound
mov
fistpl
test
cmpsl
adc
pop
test
mov
pop
jnp
push
ss
arpl
cmp
pop
ret
out
jbe
das
scas
cmp
push
cmpsb
rcll
gs
pop
lret
add
cmp
adc
push
setl
data16
insb
push
cmpsl
stc
xchg
jne
mov
cmp
subl
push
adc
mov
jbe
dec
dec
les
fmul
insb
stc
jecxz
bound
push
mov
push
ja
into
pushf
je
imul
sub
dec
insb
out
xor
jns
loopne
fldcw
testl
add
ret
pop
ret
push
das
or
sub
jo
push
sahf
push
test
lcall
inc
push
gs
jl
add
insl
into
mov
lods
or
outsl
xchg
add
fwait
push
into
scas
mov
jno
loop
dec
mov
pop
fidivl
mov
and
sbb
mov
fistpll
sbb
jmp
lds
pusha
or
adc
shll
push
cmp
repz
inc
fisubs
inc
ucomiss
mov
mov
and
cld
inc
add
mov
stos
or
dec
add
in
pop
or
mov
int
in
movsl
xchg
addr16
call
clc
jb
inc
sbb
testb
add
pop
ret
mov
idivb
jge
mov
push
test
xchg
mov
adc
mov
adc
popa
cmp
dec
mov
dec
test
das
test
push
push
in
cmp
stos
xchg
mov
fistpl
cli
and
fisubs
inc
sahf
fisttpll
sbb
dec
cmp
dec
xchg
pop
pop
fs
mov
push
and
imull
imul
js
jno
sbb
xchg
inc
jne
inc
or
push
mov
sar
jo
mov
pop
mov
aaa
rorl
shrl
rcll
dec
inc
xchg
mov
lods
in
pop
fs
or
dec
sbb
mov
ja
xchg
push
into
jo
mov
push
mov
sbb
lret
pushf
dec
cmp
stos
pop
sbbl
ficoml
add
jo
inc
mov
mov
test
jnp
aas
lock
dec
push
std
fdivl
into
mov
inc
ret
lock
jg
jno
pop
rorb
int3
pusha
xchg
mov
jns
push
pop
mov
cwtl
add
loope
cmpsb
add
xchg
pushf
fstl
out
sub
rcrb
data16
roll
mov
ds
out
fs
add
dec
lods
ljmp
sbb
jle
or
cmp
xor
adcb
bound
in
pop
mov
jle
cmpsb
sbb
mov
mov
sub
rcl
in
pop
cmpl
lock
xchg
sub
adc
pop
test
ljmp
sbb
in
in
mov
daa
ja
or
sbb
aas
xchg
inc
cmp
cmpsl
data16
mov
push
pushf
iret
push
jb
lcall
jae
adc
fisttpl
mov
push
cmpsb
sbb
cmp
stc
push
or
sti
repnz
js
xchg
loop
jno
aam
movsb
dec
add
sub
rorb
out
popa
mov
push
das
and
mov
jge
sarl
dec
fidivs
mov
lcall
dec
jno
in
cmp
pushf
inc
adc
mov
jbe
adc
bound
dec
fnstcw
in
repnz
fistps
pop
scas
jno
pop
in
mov
dec
mov
mov
add
xchg
xchg
fmuls
sbb
lahf
mov
ret
fs
xchg
cmp
jno
pop
out
adc
nop
ret
scas
arpl
das
test
pushf
rclb
sub
dec
fucomip
sub
mov
push
xchg
jb
pop
out
aas
ret
mov
pusha
add
fsts
cld
cli
add
stos
jns
int3
sub
and
cmp
sub
imul
cmp
ljmp
mov
imulb
out
icebp
loop
xorb
in
jge
xchg
lods
mov
stos
jecxz
iret
arpl
add
aaa
ret
shll
pop
cmp
cmp
and
das
and
nop
clc
mov
scas
jns
mov
and
lcall
addr16
xchg
les
pushl
cmp
out
sub
leave
mov
sbb
sbb
loope
and
push
or
sbb
js
lock
and
add
cmp
mov
inc
adc
loopne
add
or
icebp
mov
mov
pusha
in
loopne
mov
pop
ficoml
aam
mov
leave
outsl
fistpll
xchg
test
push
lods
mov
jnp
mov
cld
xor
call
xchg
xchg
in
mov
jbe
loopne
les
pop
pusha
ljmp
mov
mov
and
mov
cmp
ljmp
sbb
mov
adc
fdivrs
xor
scas
fs
or
adc
ret
push
aaa
pop
xor
lret
and
lret
cmp
in
xlat
sub
int3
in
mov
in
sub
or
mov
mov
lea
loopne
insl
pop
adc
cwtl
roll
aam
lock
cmc
push
loopne
xor
insl
cs
test
scas
mov
fsubs
fidivl
pop
ret
leave
fisubs
mov
inc
sbb
mov
adc
sbb
pusha
xor
les
xchg
gs
cmpsl
jg
in
pop
sub
jne
pushf
pop
pop
imul
outsl
aad
mov
in
push
lods
ret
popf
cmp
mov
pop
shll
mov
jnp
or
xchg
repnz
lret
inc
lret
mov
in
pop
lcall
imul
adc
mov
jnp
jmp
das
sub
inc
cmc
mov
mov
lea
ret
dec
inc
ljmp
addr16
out
test
mov
jecxz
push
arpl
bound
pop
dec
and
dec
mov
out
cmp
xchg
fmul
in
adc
jp
jns
add
shll
je
and
fmuls
xchg
int
or
aam
xor
lahf
lcall
leave
arpl
mov
jbe
mov
leave
aad
fdivs
push
outsb
daa
lods
cmp
scas
sub
push
mov
sub
inc
xchg
lods
jge
push
mov
xchg
sti
xor
sub
ficoms
rorl
mov
les
pop
ret
push
mov
les
pop
outsb
lcall
pop
bound
push
push
cmp
pop
imul
enter
sbb
std
test
fidivl
sub
lods
mov
dec
daa
ret
push
mov
clc
cltd
mov
pop
stc
loopne
sbb
fidivrl
ds
dec
in
xchg
fdivr
mov
hlt
mulb
sbbb
mov
jg
push
loope
jmp
fisttpl
inc
sbb
or
cmpl
jp
cmpsl
jge
cmp
imul
lcall
in
sub
rorl
xchg
sti
aad
xchg
mov
pop
ljmp
xchg
or
les
push
sub
neg
out
pop
mov
js
or
leave
mov
dec
mov
sbb
pushf
dec
jle
aaa
pop
sahf
mov
shl
stos
xchg
inc
xchg
popf
sub
idiv
fisubrl
inc
ja
jb
sbb
sbb
mov
aas
push
pop
push
out
lret
icebp
leave
sub
std
lock
adc
mov
xchg
cmp
xcrypt-ofb
cmpsl
stos
lds
push
fimuls
test
mov
sbb
out
cs
ljmp
mov
or
adc
call
mov
lcall
fs
cmpsl
inc
stos
int
ja
repz
mov
adc
fstps
stos
and
xor
mov
push
stc
stos
mov
mov
sub
pop
cmc
xchg
iret
jno
repz
xchg
scas
hlt
dec
jae
in
ffreep
xchg
mov
rol
or
or
dec
cltd
jle
or
popf
sarl
add
mov
dec
jbe
fdivs
das
int3
and
jnp
xor
jae
test
fnstcw
xchg
fildll
lock
inc
pop
push
fsubrl
push
clc
fisubl
cmc
jb
scas
pop
sbb
mov
std
push
mov
jmp
insb
push
loope
push
movsb
jo
mov
jb
xor
mov
bound
adc
rcrl
data16
sbb
pop
xchg
mov
mov
test
pop
mov
lea
jg
and
aam
adc
aad
push
insl
xchg
jns
gs
inc
pop
lods
bound
cmp
das
mov
fnstenv
dec
icebp
push
lods
sub
mov
and
out
loop
cmp
loop
or
stos
pop
out
inc
mov
mov
icebp
and
push
lahf
or
les
ret
pop
jge
pop
les
mov
outsb
add
sbb
int3
out
sbb
pop
sbb
pop
xorb
cmpsb
lahf
test
dec
and
sarl
jae
bound
cmovbe
or
jmp
mov
and
pop
cli
pop
in
lcall
sbb
int3
loop
sbb
aad
ljmp
xchg
push
fmull
mov
addb
xor
xorb
add
mov
xor
cwtl
and
inc
insl
sbb
adc
mov
stos
xor
outsb
jl
lea
testb
xchg
mov
xchg
ror
jae
cmp
imul
call
scas
mov
rcrb
pop
nop
mov
inc
bound
shl
or
xor
or
dec
std
in
adc
in
cld
xchg
cmp
sub
sub
lods
xchg
clc
push
dec
jg
mov
and
outsl
js
adcl
adc
or
test
mov
test
movl
xor
mov
mov
jbe
sub
stos
icebp
jbe
inc
enter
fsubs
jle
jmp
out
sbb
xor
test
xchg
lods
xorl
fcmove
xchg
mov
pop
sub
ret
ret
mov
test
dec
push
mov
ret
addr16
push
mov
out
add
lret
xor
scas
mov
stos
push
mov
mov
sbb
jle
pop
sbb
xchg
sub
cmp
xchg
mov
lea
lods
xor
stos
rorb
xorb
adc
dec
cmp
nop
jb
jbe
jle
xchg
lods
pusha
jo
xor
xchg
rol
bound
mov
rorb
cltd
adc
jp
sub
mov
adc
jns
mov
jle
rclb
rol
mov
lret
push
cld
in
adc
fnstcw
xor
pushf
mov
adc
and
pusha
pop
cmp
imul
sub
out
clc
fadds
daa
inc
das
movsb
lods
sbb
out
test
in
mov
mov
jecxz
jno
aad
add
and
lahf
push
sbb
adc
mov
pop
and
jge
mov
adc
push
jnp
dec
pushf
jne
jae
repz
pop
pop
dec
inc
jbe
cmp
ret
and
movl
out
and
fsubs
xor
das
lods
or
shl
mov
mov
pop
or
or
das
jg
sub
cld
push
mov
add
in
mov
sarb
adc
addr16
push
cltd
icebp
pop
mov
lock
push
pop
lock
mov
pop
aad
pop
rorb
and
icebp
aam
pushf
fnstcw
and
ret
imul
aaa
es
call
stos
sbb
mov
inc
popl
xchg
xchg
cmp
pop
mov
ljmp
mov
stos
pslld
fistpll
popw
adc
sbb
pop
xchg
stos
pop
ljmp
mov
xchg
xor
jecxz
push
xor
add
mov
aam
mov
mov
jp
pop
sub
fs
xor
mov
daa
shrb
adc
fisubrl
cmc
addr16
xchg
ds
aas
lret
push
mov
repz
icebp
les
sub
rorb
mov
outsb
xor
cwtl
fisubs
sub
les
mov
and
push
inc
xorl
cmp
clc
dec
xor
fstps
cmp
gs
mov
ficoml
mov
jg
mov
lcall
jle
cmp
out
jns
aam
scas
and
xor
sti
insl
imulb
or
adc
sub
cwtl
es
sbb
ss
inc
xchg
and
notl
inc
loop
mov
sarl
dec
mov
jbe
push
jle
loope
xchg
cld
jmp
in
imul
jns
scas
pop
sarl
ja
in
insl
jp
pop
sub
add
adc
push
sbb
sub
mov
mov
sbb
fiaddl
xlat
mov
sub
mov
or
in
xchg
and
or
enter
popf
cwtl
add
add
mov
test
push
hlt
movsb
sub
or
mov
push
imul
movb
cwtl
cwtl
adc
xorps
test
repnz
sti
adc
jnp
in
dec
or
data16
aaa
add
in
mov
adc
sahf
mov
xor
jge
stc
out
or
in
and
inc
repnz
inc
or
cli
cmpsb
jg
ja
sub
sub
movsl
test
insb
mov
push
pop
into
arpl
or
sbb
fcmovnb
mov
mov
sbb
inc
cmpsb
push
or
insl
mov
push
test
dec
das
mov
and
in
inc
adc
jae
xor
adc
push
outsl
dec
and
test
lret
push
push
push
sub
cmp
inc
fcompl
push
bndstx
negb
push
leave
adc
sub
inc
scas
sahf
inc
rorl
stos
ljmp
jno
dec
sbb
and
rcrl
mov
ret
and
movb
xor
push
xchg
sbb
inc
jp
adc
mov
out
mov
adc
dec
js
in
jl
mov
shll
out
add
xor
xchg
sbb
sti
and
mov
mov
subb
pop
ds
adcb
aaa
out
dec
int3
fcomps
mov
sbb
and
or
pop
sub
fimuls
mov
jno
pusha
dec
ror
push
js
ss
adcl
loopne
gs
push
fisubs
sub
or
push
aaa
out
pop
mov
in
add
rol
mov
hlt
adc
sbb
aam
adc
das
ja
dec
roll
and
adc
xlat
mov
pop
jl
roll
mov
lods
jo
in
xchg
push
dec
adc
add
ljmp
xor
xor
rcr
jns
aad
cmpsb
lock
loop
sti
push
test
mul
loope
insl
ja
xor
add
push
in
xchg
mov
pushf
rorl
stc
notb
out
and
xor
repz
or
jmp
mov
sub
and
pop
sahf
xor
xchg
nop
pop
test
pop
insb
out
mov
std
ret
jp
cltd
dec
xchg
clc
cmpb
roll
mov
cltd
cmpsl
pop
or
imul
sub
stc
lods
les
adc
sbb
push
cmp
cwtl
shrl
mov
or
add
jecxz
out
add
push
testl
pop
xchg
addl
push
sbb
js
lock
daa
in
push
and
adc
ja
call
sub
jmp
insl
fcomip
pop
inc
loope
jbe
outsb
out
jnp
add
cmp
and
xchg
lea
test
mov
inc
push
into
jp
lret
add
inc
in
test
jle
mov
outsl
push
pop
mov
dec
adc
loope
inc
enter
xchg
dec
add
mov
jnp
fs
add
ret
push
lods
bound
pop
nop
cmpsl
sbb
fs
jb
bound
cmp
jl
lods
js
mov
les
push
outsb
inc
cmp
inc
jmp
rcl
movsl
push
lret
adc
xchg
jnp
mov
xchg
lods
add
inc
fs
nop
xorb
push
cmc
sub
imul
xor
div
int3
mov
mov
push
dec
jmp
cmpsl
adc
push
in
rcrb
jb
push
lret
or
clc
ljmp
aaa
in
sti
shl
out
roll
out
mov
aaa
inc
lea
daa
or
mov
cmp
test
inc
in
repnz
sbb
lds
addr16
fiaddl
in
inc
lahf
push
in
aad
mov
or
out
xor
inc
mov
add
leave
lea
sub
jns
lcall
mov
jl
cmp
lret
jge
mov
push
jp
push
into
inc
pop
mov
stc
sbb
in
cmp
outsl
out
mov
pop
dec
dec
xchg
or
or
nop
inc
ljmp
into
xor
push
cmpsb
inc
cmpb
mov
ljmp
xorb
out
pop
xchg
loopne
jl
mov
mov
add
xlat
or
ja
push
scas
shll
ja
adc
dec
pop
mov
mov
inc
pop
xchg
push
fucomi
xchg
jno
pop
add
fimuls
sub
dec
jnp
es
push
inc
or
lahf
iret
dec
insl
jge
push
mov
in
sub
inc
add
cltd
inc
fsubrl
insb
dec
mov
pcmpgtb
sub
push
loop
test
sub
push
jb
adc
fmull
int
test
cmp
sub
daa
test
pop
pop
jno
aam
sub
dec
stos
repnz
mov
mov
outsl
add
mov
jb
jle
adc
jns
and
adc
out
inc
loope
push
ljmp
lea
mov
imul
cmp
jp
jns
jbe
inc
xor
dec
idivl
cmpsb
dec
enter
pop
sahf
lock
jecxz
xor
movsb
dec
daa
dec
dec
inc
adc
dec
adc
mov
out
lods
and
in
loopne
test
jg
and
jns
cli
fs
push
mov
or
pop
sub
or
into
push
in
lods
cmp
gs
outsb
xchg
roll
pop
icebp
sbb
push
gs
rcll
jle
jmp
jnp
xchg
inc
mov
les
xchg
enter
iret
pop
mov
push
mov
enter
scas
fwait
hlt
dec
icebp
pop
push
mov
int
cwtl
pop
xor
pusha
neg
orb
pop
add
sub
xchg
leave
js
daa
into
sub
aam
push
sub
sbb
mov
adc
inc
mov
int3
lods
jbe
push
ret
dec
jmp
fs
xor
pop
pop
fs
mov
sbb
divb
adc
cwtl
sub
mov
mov
stos
mov
cmc
add
fwait
or
sub
lock
mov
je
outsb
mov
loope
bound
jno
lret
mov
js
pop
lret
test
mov
daa
mov
idivb
inc
jmp
ret
out
cmpsb
inc
xchg
xchg
ret
push
cld
sub
mov
fsubp
fcoms
dec
pusha
mov
mov
cltd
cmp
xchg
bound
cmp
cmp
shl
addr16
loope
jg
sbb
push
lea
jbe
cltd
js
adc
jmp
push
aas
fcomps
out
push
or
sbb
lods
sub
jae
mov
pop
out
into
jno
and
rolb
daa
mov
cwtl
mov
dec
cmpsl
xor
rcrb
movsl
testl
pop
dec
ret
movsb
fdivs
adc
add
push
dec
sub
xchg
push
mov
cmpsb
pop
bnd
mov
push
mov
mov
jbe
adc
ret
das
outsb
cmp
adc
out
mov
andb
xchg
add
sbb
dec
int3
mov
dec
int
xor
xchg
dec
int3
dec
aad
in
cmp
lds
pushf
pop
adc
out
cmpsl
testb
pop
mov
push
jl
leavew
lea
xchg
imul
push
xchg
hlt
into
das
xchg
stc
sbb
addr16
pusha
or
xor
jle
sbb
aad
outsl
push
sti
push
lods
cmp
adc
jno
push
push
andb
aad
stos
jnp
nop
mov
pop
fisubs
movsl
mov
jb
mov
jae
jne
push
mov
in
inc
ja
mov
test
adc
pop
pushf
out
inc
adcb
test
out
std
ss
push
scas
ds
dec
dec
js
clc
cs
pop
out
std
inc
dec
jns
insb
mov
mov
lds
jge
jg
sti
xchg
pop
aam
mov
mov
insl
pop
and
sub
hlt
jbe
sbb
in
xlat
stos
adc
mov
push
in
call
mov
idivb
fcoml
ret
pop
repz
sbb
cmp
mov
sbb
loopne
sub
stos
fbstp
fcoms
inc
add
push
repnz
les
mov
adc
cld
imulb
pushf
inc
dec
rcr
into
inc
in
pop
mov
sub
xorl
pop
stc
jns
out
ljmp
push
js
je
pop
test
out
clc
or
mov
jecxz
cs
inc
sub
add
xchg
fildll
or
das
push
fmull
sub
out
cld
daa
insl
lods
movsl
enter
in
xchg
mov
out
push
sbb
mov
xchg
push
les
push
and
idivb
pop
adc
pop
cmp
dec
or
sbb
lahf
pop
cwtl
or
in
push
rcrb
xor
push
ja
pop
push
xchg
add
cmc
sbb
dec
jb
mov
outsb
push
xchg
daa
lods
call
jg
mov
lahf
dec
leave
enter
mov
outsl
xor
xor
rclb
jae
dec
outsl
mov
icebp
cmpsb
mov
lds
dec
dec
dec
cmpsb
pusha
ja
fcomps
add
jmp
and
repnz
lret
dec
mov
mov
cmp
lret
cmp
sub
dec
xchg
cmp
xor
xchg
cld
shll
data16
xorb
xchg
and
fiaddl
push
out
xchg
out
addb
pop
fisubs
cmpsb
sbb
outsb
push
aad
lret
lods
xchg
cmpsb
aas
adc
jg
sbb
inc
lret
mov
lcall
popa
fwait
sub
mov
xlat
pop
cs
test
leave
add
fnstsw
dec
pop
lret
and
fucom
and
pop
in
push
jecxz
scas
sub
mov
push
push
cltd
ret
cmp
jbe
rolb
sarl
fs
ret
in
cmp
nop
mov
dec
pop
loope
add
lret
dec
imul
loop
cltd
mov
adc
mov
adc
aas
xlat
adc
bound
push
in
add
int3
cmp
jns
test
xchg
or
icebp
scas
in
loopne
fmuls
imul
sbb
sti
movsb
sbb
dec
and
in
add
jmp
pushl
and
xlat
pop
xorl
fmul
or
add
or
leave
xor
fs
mov
xchg
mov
fxch
jbe
leave
aam
jmp
data16
les
ja
arpl
addl
mov
jne
imul
or
jmp
subb
sub
mov
lods
into
hlt
int
adc
push
push
or
insb
int3
dec
popf
fwait
or
lods
xchg
fldl
dec
roll
test
add
or
sbb
sbb
jns
repnz
adc
int
pop
ret
sbb
arpl
push
adc
jno
ss
sbb
jle
inc
xchg
adc
mov
ret
sbb
lods
push
mov
jne
loopne
aaa
or
in
cmp
xchg
fsubr
hlt
adc
imul
cmc
pop
inc
leave
bnd
sub
jg
pop
inc
imul
movsb
push
hlt
lahf
mov
dec
popa
or
push
mov
xorl
or
inc
sahf
data16
xchg
dec
ljmp
sbb
push
ret
adc
xor
xor
jmp
push
push
in
daa
cmp
aad
lahf
mov
or
nop
aas
push
outsl
cmc
adc
push
mov
pusha
mov
pop
fwait
sahf
testb
idivb
popf
lods
jle,pt
movsl
lds
test
and
xor
outsb
xor
push
loope
ljmp
mov
or
movsl
cmp
jg
lods
jmp
in
push
mov
aas
add
xchg
addr16
mov
sbb
sub
sbbl
pop
push
lea
jecxz
shlb
or
jns
dec
out
fidivrl
inc
dec
packuswb
pushf
jns
call
mov
dec
xchg
xchg
leave
cmp
stos
cmp
insl
push
dec
fsubrl
cli
push
cmpsb
dec
lret
in
dec
jns
add
mov
sub
mov
in
adc
and
aas
sarl
mov
test
sub
add
dec
scas
dec
mov
xchg
add
aad
mov
xchg
or
push
sub
enter
xchg
mov
sub
ret
pop
add
dec
push
jg
arpl
cmp
movsl
adc
mov
icebp
repz
dec
sub
bound
sbb
std
insb
add
add
xor
xlat
xchg
cmc
int3
dec
lahf
sbb
arpl
push
mov
ds
adcl
mov
movsl
mov
imul
jbe
cmp
cmp
lods
fdivl
inc
test
push
or
jmp
push
mov
and
mov
cmp
mov
orl
rcll
cmpb
fildl
mov
rolb
fcmovb
lret
faddp
sub
xchg
fisubl
jae
jmp
cmp
daa
push
cmp
push
sbb
lods
mov
aas
data16
push
mov
std
dec
add
test
in
test
es
ds
ret
aas
lret
ds
xlat
insl
pop
call
out
mov
and
sar
push
fildll
sbb
pop
pop
jbe
push
inc
dec
gs
in
call
or
cmpsb
add
and
dec
pop
stc
adc
rorl
cwtl
sub
pop
adc
and
movsl
dec
mov
sbb
xor
inc
xor
es
mov
sub
jmp
push
adc
das
pop
popf
mulb
mov
pop
cwtl
cmpb
or
jne
push
loope
xchg
test
mov
sbb
in
popf
arpl
std
aad
dec
insb
fwait
push
stos
and
jmp
repz
mov
dec
mov
mov
daa
pop
xchg
push
xorb
jg
vdivpd
loope
mov
pusha
dec
adc
jge
arpl
cwtl
sbb
pop
cmp
push
xchg
mov
lock
add
or
mov
adc
jecxz
js
sbb
aad
dec
adc
pusha
cmp
lahf
mov
jne
mov
call
ljmp
xchg
pop
dec
pop
and
sub
sbb
test
std
out
mov
stos
jg
and
je
idivb
jb
jns
jp
loope
test
dec
into
jno
fadds
cs
imul
test
adc
adcl
push
and
or
fisttps
sbb
cmpsl
jge
sub
pop
cmpsb
popf
inc
sarl
push
test
or
mov
mov
loopne
sub
fcmovu
mov
sbb
sub
inc
repnz
or
jl
mov
and
cli
rol
jns
push
jb
pop
mov
and
xor
in
mov
pop
dec
les
push
icebp
or
lcall
ds
lret
adc
xchg
aas
je
xchg
nop
cs
dec
stos
cmp
xlat
jle
push
mov
popf
pop
jle
nop
and
add
sbb
fidivrs
shr
inc
sub
fdivr
inc
xchg
pop
pop
sbb
adc
test
mov
sub
out
arpl
xchg
pusha
cmc
sub
mov
imul
out
dec
aas
cli
xchg
out
lods
cmc
mulb
out
into
sub
orb
lahf
push
or
mov
mov
xor
push
inc
dec
mov
ljmp
out
add
mov
or
jo
and
daa
int
add
pop
loopne
rorb
inc
ficoms
or
fadds
sbb
jbe
arpl
dec
imul
jle
sets
dec
xchg
mov
mov
lcall
addl
dec
popf
daa
push
sbb
js
mul
movsb
loope
pop
push
push
out
push
mov
cmc
inc
xor
cmp
dec
sarl
pop
adc
and
popf
add
cmp
fwait
aas
adc
idivl
bound
test
or
xor
jne
iret
or
mov
add
mov
lods
mov
aas
adc
pop
aaa
cmp
xchg
inc
hlt
jns
xchg
or
mov
stos
test
mov
push
roll
lret
icebp
push
xlat
xchg
mov
fdivrs
push
mov
sub
stos
and
or
mov
pop
mov
imul
sbb
xchg
inc
jmp
adcl
dec
movsb
or
and
cmpsl
xor
add
movsl
mov
dec
cmpsb
lds
push
lds
jg
mov
jne
or
sbb
sbb
mov
in
out
hlt
out
pushf
sbb
popa
fidivrs
ret
lcall
cmpsl
dec
insb
ret
mov
aam
xchg
outsl
mov
cmpsb
imul
push
adc
sti
cmp
movsb
sbb
mov
mov
popa
mov
icebp
nop
hlt
outsl
pop
cmp
fwait
xor
daa
lods
mov
outsb
clc
mov
add
jae
push
aaa
lods
adc
sbb
movsb
in
scas
movsl
adc
xchg
mov
fnsave
test
ret
imul
int
jb
insl
sahf
repz
incb
in
gs
jne
rcrb
dec
ja
sbb
mov
mov
loop
mov
and
test
push
cwtl
and
sub
test
mov
pop
jae
and
sub
or
repz
and
outsl
fstpt
jbe
test
xor
cmp
stc
sub
inc
fmulp
leave
mov
mov
cmpsl
or
insl
and
jecxz
xor
pop
lahf
sub
mov
lods
xchg
inc
stos
xor
loope
xlat
pop
test
aad
adc
popa
out
insl
xchg
addl
fnstcw
ret
mov
push
pop
ret
cld
xchg
or
aas
inc
push
cld
movsb
out
lods
mov
ljmp
cmp
push
push
inc
add
lods
scas
pop
push
adc
mov
imul
popa
or
jmp
mov
push
pop
add
out
sbb
add
stc
pusha
xor
shlb
test
leave
push
mov
and
xchg
mov
cli
xchg
test
xlat
fldcw
push
sub
mov
push
fsubr
or
fs
std
lods
adc
daa
aad
pop
jb
cmp
dec
sub
xchg
fldl
fcmovnu
jo
xchg
pop
stos
and
push
pop
ficoms
cmpsb
adc
in
pop
xchg
and
aad
in
sub
cmp
inc
pop
lods
popf
aam
mov
enter
testb
sbb
arpl
stc
mov
xchg
mov
clc
and
mov
add
pop
push
test
clc
jecxz
cmpsb
mov
fs
and
iret
or
mov
xchg
adc
pop
jle
stc
cmp
mov
daa
mov
jecxz
outsl
lock
enter
je
push
sub
loope
lahf
out
enter
or
inc
out
test
fs
push
sub
lea
pusha
xchg
dec
or
fdivrs
adcl
dec
js
sub
hlt
rorb
sub
mov
xor
idivl
shlb
loopne
mov
imul
in
outsl
push
or
dec
dec
rcrb
ja
je
push
jmp
and
push
jge
jmp
or
fistpll
dec
and
jp
xchg
imul
loop
ss
in
outsb
push
icebp
ljmp
or
xchg
dec
jnp
stos
roll
xchg
jno
fisubs
and
and
data16
outsl
in
sbb
mov
pop
push
push
dec
addl
sbb
push
xchg
hlt
and
or
pop
jb
stos
add
jg
in
es
les
or
out
lods
adc
insl
adc
pop
in
mov
adc
cmpl
adc
gs
fistps
sbb
inc
jne
clc
push
jno
mov
adc
jmp
cmp
popa
pop
jno
int
ss
shll
rcl
in
pop
out
sbb
and
test
jmp
adc
mov
mov
or
cmc
clc
xchg
lcall
stos
bound
popf
idivb
fdiv
sbb
movb
jne
imul
sti
cmpsl
scas
add
push
jp
icebp
mov
sbbl
xchg
adc
mov
popf
sbb
mov
popf
imul
or
in
je
push
mulb
push
insb
and
ret
cmp
cmp
hlt
iret
inc
jmp
pop
sub
jle
or
adc
std
and
aam
std
sbb
int3
mov
lret
sbbb
pop
jns
sbb
push
jo
and
ret
inc
mov
xchg
jmp
int3
push
rol
add
jp
xchg
mov
fstl
inc
mov
scas
fstpt
mov
je
xor
push
cld
icebp
sbb
es
mov
mov
pop
mov
gs
shlb
mov
stos
and
lahf
push
xor
and
pop
lods
mov
xlat
push
mov
loope
lret
lods
push
aaa
aaa
dec
mov
xor
int3
adc
cli
sub
dec
mov
stos
and
lea
repz
jmp
inc
or
inc
leave
xchg
mov
adc
sbb
sbb
ret
outsb
shlb
test
in
sub
pop
pop
pop
into
icebp
stos
sti
ja
xchg
pcmpeqb
lret
ljmp
jae
adc
jo
sti
jno
mov
call
in
xorb
cs
scas
mov
push
xchg
fisttps
xlat
rcrl
xor
or
jg
into
inc
adc
or
sbb
jmp
inc
mov
pop
insl
movsl
xor
xchg
push
lret
int3
ja
mov
adc
mov
ss
inc
int3
addr16
cmpsl
sub
pop
or
je
enterw
mov
mov
test
je
int
mov
sub
subb
test
jb
bound
xchg
and
mov
xor
inc
mov
adc
mov
daa
mov
lock
mov
mov
filds
jne
in
and
ret
mov
mov
adc
rorb
jg
xchg
add
into
aaa
lods
sbb
das
cmpsb
jp
loope
mov
inc
shrb
enter
ljmp
xlat
mov
add
frstor
and
xchg
fnstcw
mov
push
insl
cmpsl
test
shlb
les
int
push
sti
cs
dec
inc
aas
jnp
mov
les
and
push
outsl
sub
mov
jl
call
xor
jle
sub
inc
cmp
push
push
push
mov
arpl
in
testl
and
sub
call
jmp
test
jne
cld
pop
and
lds
pop
pushf
sub
shl
xchg
jns
jmp
cmpsl
das
dec
adcl
cmpsl
pop
mov
and
cltd
idivb
cmpl
or
xchg
jmp
inc
mov
and
adc
xlat
enter
xorl
sbb
push
test
popa
push
fdivrl
or
ficompl
je
adc
out
jmp
jg
pop
or
movsb
pop
jnp
sub
imul
adc
pop
push
mov
xor
out
sti
cmc
lock
push
test
mov
sbb
add
in
cmpl
adc
data16
push
jl
sbb
test
mov
dec
fldt
xchg
shll
sub
and
dec
fimuls
imul
pop
pop
pop
jne
cmc
das
sub
popa
ljmp
inc
stc
clc
loop
mov
jge
mov
sbb
mov
mov
push
jno
inc
add
nop
add
push
lea
push
xchg
mov
push
loope
push
or
mov
adc
lahf
xchg
idiv
cmc
lea
test
push
or
repnz
out
pop
outsl
in
lods
cli
fwait
imul
jecxz
sbb
adc
iret
push
aas
mov
xchg
jnp
mov
lret
stos
xchg
pop
jb
xchg
sub
insb
cmc
cld
pop
mov
pusha
jns
mov
cltd
test
movsl
ret
js
loopne
pop
add
push
mov
mov
or
stos
inc
xor
out
cmpl
add
jp
mov
popf
push
nop
lret
add
shlb
cmpb
xor
pop
xor
fdivp
dec
inc
movsl
ljmp
sub
roll
mov
ljmp
nop
xor
pop
dec
dec
mov
cld
test
mov
cmp
pop
je
push
inc
ficomps
pop
dec
dec
mov
ds
out
fadds
mov
xchg
hlt
in
negl
fsubrs
jno
addr16
inc
in
imul
pop
nop
aam
jno
adc
repnz
add
fadds
sbb
add
push
int3
fldenv
sub
les
inc
pop
lahf
sbb
lods
jl
push
push
out
inc
dec
dec
cmpsl
add
out
jle
loopne
push
adc
jnp
mov
push
out
lods
decl
jmp
or
mov
ret
jp
push
into
sub
lret
fisubl
repz
add
nop
mov
arpl
push
into
jle
das
push
ss
jp
enter
notb
aaa
insl
mov
rclb
sub
insl
xor
les
xchg
aam
mov
ret
pop
mov
sub
ljmp
sbb
pop
stos
inc
mov
inc
mov
sbb
mov
scas
add
or
push
push
mov
std
jle
jnp
sub
jnp
xchg
xchg
pop
add
pop
lock
sub
in
sub
push
enter
stc
mov
pop
dec
sub
ret
outsb
add
gs
out
and
mov
out
leave
mov
packuswb
stc
mov
add
mov
pop
das
stos
push
mov
xchg
push
clc
mov
mov
inc
and
cmp
test
fs
arpl
out
pop
and
movsl
mov
and
xchg
dec
push
lcall
dec
dec
lret
dec
mov
ja
test
mov
daa
dec
ret
and
outsl
cli
shlb
xor
or
add
scas
sub
inc
cld
push
sub
aas
mov
cmp
pop
adc
jge
xchg
fisubl
push
add
out
test
or
fucompp
push
adcb
and
mov
insl
out
push
pop
mov
test
lock
test
arpl
rcll
jae
adc
pop
iret
stos
xchg
push
ljmp
inc
add
and
insl
cmp
dec
jo
adc
stos
loope
cmp
push
sub
loop
inc
mov
cmp
shrb
testl
jno
mov
add
cmp
adcb
sub
scas
rcr
and
and
mov
mov
jge
push
jle
insl
sbb
cmp
mov
stos
mov
xchg
cli
jle
loop
add
inc
daa
ret
push
js
xchg
mov
inc
push
les
outsl
repnz
cmp
inc
add
lds
lret
lods
jmp
ljmp
xlat
out
fwait
jbe
repz
cwtl
cmp
in
push
es
push
loop
ja
lock
dec
jle
cld
pop
test
in
jno
hlt
pop
mov
outsl
jbe
push
pop
dec
into
add
or
pop
push
loope
jecxz
fcmovne
into
adc
dec
dec
movb
nop
repz
in
dec
fcoml
adc
sarb
jmp
dec
cmp
pop
loopne
push
xor
sarb
insb
stc
and
mov
cmp
fcomps
jns
inc
mov
into
shr
xor
pop
adc
pop
sbb
addl
xor
push
sbb
pushf
repz
mov
mov
icebp
leave
ljmp
xchg
popa
jl
incb
imul
sbb
push
lds
jns
mov
push
div
mov
pop
imul
jbe
push
xchg
test
ret
adc
sbbb
inc
mov
mov
pusha
mov
cmp
fwait
popa
push
xchg
mov
mov
cmp
ret
push
je
daa
sub
sub
mov
pop
cs
push
cmp
sbb
sub
or
inc
mul
gs
mov
jecxz
mov
mov
and
jmp
jp
imul
mov
and
pop
lea
je
fsubrl
xor
stc
add
push
repnz
stos
loop
push
mov
sbb
das
in
test
call
pop
inc
inc
jl,pn
pop
push
data16
in
dec
pop
dec
clc
inc
xlat
enter
bound
repnz
out
addr16
cmpb
xor
js
dec
push
xchg
movsb
dec
sbb
nop
push
outsb
or
aam
cmc
fisttps
outsb
jno
sbb
inc
lods
jg
push
je
and
into
pop
cmp
pop
ja
adcl
mov
or
scas
jmp
jnp
adc
pop
xor
push
pop
popa
inc
imul
xchg
imul
daa
mov
or
iret
mov
ret
xor
pushf
insl
xchg
mov
mov
cmp
push
out
mov
dec
xchg
dec
push
jnp
jmp
add
jg
or
shrl
sub
push
xor
aas
sub
mov
bound
aaa
sub
jg
pop
mov
push
leave
xchg
pop
or
jnp
stc
fistps
or
and
insb
loopne
mov
insl
addr16
dec
rorb
jmp
fdivrs
je
mov
pop
xchg
pop
or
testl
mov
xor
jno
sbb
mov
jbe
imul
insb
in
insl
pop
in
xor
rcrl
push
nop
sarb
adc
pop
out
in
xlat
ss
dec
movsl
out
leave
mov
mov
jecxz
add
sub
push
sti
jecxz
in
loopne
push
inc
push
andl
lahf
aad
jb
cmp
adc
jae
add
push
sbb
sub
frstor
mov
imul
lcall
mov
mov
in
add
mov
mov
mov
inc
inc
repnz
sbb
cmp
mov
fdivr
add
ljmpw
lods
push
cwtl
sub
jbe
pushf
dec
or
daa
mov
stos
int
movsl
ret
dec
inc
cmp
lods
int
or
xchg
cmpl
push
test
adc
movsl
pop
leave
pop
cs
dec
adc
and
negl
push
or
jo
cld
inc
pusha
xor
sbb
jl
push
popa
and
sbb
dec
xchg
sub
add
int
mov
push
and
cmovs
test
mov
andl
jbe
cmpsl
add
mov
xchg
jmp
lret
sbb
mov
dec
adc
xor
in
or
cmpsb
sbbl
out
dec
or
add
push
sub
or
fsubs
ret
jecxz
push
pusha
out
xor
das
out
clc
jno
mov
jno
lret
sahf
xchg
add
inc
mov
sti
add
add
pop
shlb
and
dec
lret
cmp
add
xchg
mov
imul
test
imul
lahf
fcomps
dec
inc
push
sysenter
mov
test
push
loope
push
aam
add
or
es
dec
xor
movsl
and
inc
mov
outsl
pop
movsl
xchg
or
xlat
mov
xor
push
xchg
fstps
fldcw
jbe
mov
xchg
jg
sub
imull
push
mov
cmp
or
mov
jno
pushf
ret
test
imul
aas
rcr
push
add
pop
cltd
dec
push
lds
cli
pop
push
pop
sbb
pop
or
pop
test
shlb
cmpsl
insb
imul
in
add
les
rcl
lods
stos
cmp
cmp
xor
pushf
loope
gs
loop
es
pop
jl
imul
xchg
xlat
sbb
push
ljmp
orl
outsl
sub
jmp
mov
jae
test
stos
jbe
pusha
adc
sbb
cmp
adc
ja
add
out
mov
dec
add
in
sarb
push
adc
leave
iret
sbb
jg
out
es
jbe
loopne
in
and
jb
mov
push
out
pusha
ds
call
xchg
dec
add
lret
shrb
inc
sub
jo
iret
lods
arpl
adc
enter
ja
or
fmulp
adc
push
aad
xchg
push
or
sub
aad
cmp
add
rolb
test
jb
jns
shll
push
pop
sbb
insb
cmpsl
mov
nop
scas
inc
push
stos
mov
fiadds
rol
stos
loop
movsb
xchg
cmp
stos
gs
pop
dec
shll
and
insb
jge
imul
push
xlat
sbb
lock
cmpsl
jnp
xchg
mulb
mov
jnp
jmp
jecxz
call
fwait
cmpl
in
adc
and
or
mov
mov
gs
dec
mov
add
mov
xchg
pop
dec
andl
xchg
xlat
mov
mov
mov
lods
popf
movsl
orb
sub
arpl
aad
insb
std
dec
push
orl
outsl
pushf
inc
addr16
test
lock
xchg
sub
lds
xchg
jbe
ret
ret
in
xorl
and
xor
mov
jl
jns
sbb
push
cmp
outsl
loopne
add
dec
ss
std
sbb
cli
pusha
sti
jmp
in
sbb
inc
mov
xchg
jno
inc
cwtl
sarb
not
sub
int3
outsl
aad
mov
mov
int
iret
sub
pop
int3
in
mov
inc
scas
or
shlb
insb
dec
lret
jp
inc
lret
push
sbb
xlat
adcl
and
inc
add
xchg
movsl
push
dec
sbb
scas
lcall
mov
pop
inc
xchg
pop
and
pop
mov
out
jecxz
aas
adc
cmpsb
mov
js
jne
mov
mov
addr16
lcall
rorb
sub
addr16
jecxz
push
imul
xchg
cmp
clc
adc
mov
in
push
mov
push
mov
sub
jo
adc
dec
idiv
and
mov
test
js
pop
test
pop
xchg
sti
mul
push
xchg
leave
or
mov
push
inc
mov
sbb
test
push
int3
test
cmc
andb
sub
sti
aam
pop
adc
dec
cmp
cli
out
push
cmc
jns
js
rcll
xor
mov
pop
jecxz
pop
lock
ret
add
scas
pusha
add
stc
movsb
cwtl
inc
dec
or
iret
push
pushl
out
subb
pop
push
daa
dec
ja
pop
fisubrs
jne
loop
jno
or
popf
fldcw
pop
loop
adc
push
arpl
cmp
movsb
xchg
and
jl
repnz
xlat
mov
push
ret
rorl
mov
xchg
pop
or
mov
adc
lret
std
ret
xchg
repz
je
mov
sub
idivb
aam
mov
push
icebp
jmp
shl
xchg
icebp
or
addr16
test
daa
push
mov
dec
and
arpl
jp
loop
inc
daa
inc
pop
push
shlb
adcb
bound
dec
push
lahf
adc
rorb
js
push
jmp
jge
fldt
xlat
jg
xor
fldcw
xchg
sbb
and
mov
ds
stos
dec
dec
xorl
roll
mov
push
or
int
inc
mov
ss
js
ret
imul
sarb
in
and
sbb
xchg
icebp
or
and
push
imul
pop
mov
leave
ja
inc
sbb
add
shrb
out
test
jae
cmp
je
mov
jmp
shl
jecxz
jp
hlt
sub
test
jp
mov
lcall
bound
roll
mov
pushf
or
mov
or
popa
stc
sub
orb
in
jge
cld
sbb
push
aam
ret
pop
push
add
and
pop
or
mov
sbb
mov
loope,pt
mov
xchg
fsub
fldcw
movsl
jp
jl
push
mov
std
out
es
imul
lea
xor
dec
icebp
mov
push
ret
xor
dec
ja
mov
mov
jecxz
push
cmp
sbb
std
fistl
pop
inc
fldenv
sbb
push
ljmp
in
lods
stos
ficompl
fucompp
dec
data16
lods
pop
loop
xor
out
and
and
cmpsl
data16
aam
add
aaa
scas
clc
fnsave
repnz
cmp
arpl
jmp
or
cmpsl
add
out
add
or
xor
mov
pop
ret
cmp
push
mov
in
or
enter
push
cmp
movsl
push
in
ljmp
fsts
dec
test
xor
add
outsb
xor
incb
sbb
mov
movsl
xchg
fcoml
sbb
sub
test
lret
jp
stos
and
rorl
fidivs
dec
jne
imul
test
mov
cmp
push
jno
adcl
out
pusha
mov
ret
fisttpl
add
inc
jnp
inc
push
mov
fs
cmpl
mov
das
sub
in
mov
pop
jb
into
jl
inc
mov
adc
fcoms
cmp
and
in
cs
rol
in
out
cld
inc
sahf
cmp
push
xchg
rcll
sbb
dec
aad
ret
imul
cmp
mov
add
mov
push
addl
cld
pusha
add
sbb
jno
insl
cmc
push
jo
mov
outsl
jne
pusha
lds
dec
jg
mov
lods
adc
xchg
jnp
sub
mov
icebp
pop
jg
fsub
and
gs
es
pushf
and
outsb
xor
sub
les
pop
dec
mov
xor
sub
mov
inc
shl
add
sbb
mov
push
xor
push
stos
pop
cwtl
fs
xchg
xchg
mov
jns
inc
ss
sbb
push
jne
inc
sti
pop
and
push
push
sbbb
out
and
push
mov
pop
xchg
scas
mov
push
push
adc
jmp
mov
mov
incl
xchg
inc
inc
sub
jbe
mov
sahf
jns
je
fdivp
popa
in
cmc
hlt
adc
test
xor
add
out
mov
ss
rorb
xchg
xlat
call
hlt
push
xchg
mov
mov
bound
or
pop
xchg
lcall
xchg
dec
aam
psubusb
cmp
test
cmp
jg
sbb
cmp
stos
inc
shrl
mov
cmovne
mov
stos
jo
in
enter
pop
inc
sub
rolb
rcl
or
faddl
push
test
out
sbb
shlb
lret
insl
aas
movsb
mov
dec
js
shlb
sarl
arpl
mov
leave
xchg
insb
mov
mov
lret
fwait
js
xchg
adc
or
in
inc
shrb
out
lret
adc
test
nop
mov
in
inc
loop
mov
mov
push
mov
cmp
sbb
jecxz
jnp
dec
mov
dec
mov
in
jno
inc
out
in
mov
mov
outsl
clc
or
cltd
shll
ret
mov
in
gs
and
pop
push
pop
ss
dec
push
mov
les
movsb
mov
jo
test
das
jl
shrl
lret
int3
mov
adc
inc
xor
mov
inc
call
jnp
lods
xchg
fisubrl
dec
outsl
rolb
dec
push
add
es
dec
pop
sub
mov
sub
adc
fs
aas
outsl
or
mov
in
xor
inc
adc
aam
cld
mov
sahf
data16
xchg
push
cmp
mov
imul
je
xchg
scas
call
sbb
xor
test
rcll
std
jno
inc
es
notb
jecxz
dec
xchg
mov
jge
mov
dec
stos
iret
in
sub
lcall
add
adcb
cld
dec
and
out
mov
call
subl
inc
mov
sub
aaa
xor
pusha
icebp
jp
or
pop
test
push
pop
xor
push
loopne
adc
mov
pushf
orl
div
mov
sbb
mov
add
or
jmp
dec
jae
roll
mov
pop
and
lods
ror
shlb
jecxz
in
xchg
jnp
nop
fdivrl
mov
mov
test
cmc
bound
pop
cli
mov
fsubrl
cmp
outsb
mov
mov
fistpll
hlt
enter
pop
mov
bnd
lock
jmp
push
test
xor
adc
sub
and
dec
and
jns
in
push
xor
test
adc
in
ss
lcall
repz
mov
cmp
les
cmp
inc
push
jne
movsl
cmp
mov
push
jmp
pop
shlb
out
push
aas
dec
stos
rcrb
inc
mov
test
sti
sub
mov
fcomps
mov
stos
aaa
mov
cwtl
and
sbb
mov
fisubrs
enter
cld
es
in
jnp
xor
icebp
insb
xor
mov
test
pop
mov
arpl
les
or
mov
cmp
mov
sub
or
xchg
xchg
iret
mov
popa
cld
cmp
cltd
jp
pop
mov
mov
call
adc
fdiv
inc
and
xor
mulb
data16
pusha
cmp
dec
lret
jb
sti
xor
mov
ljmp
xchg
shlb
jl
sub
sub
push
lret
inc
arpl
adc
cmp
cmp
sar
xchg
js
jl
add
mov
push
fs
cmp
imul
repz
lock
sbb
insb
or
lret
mov
sub
bound
mov
mov
dec
fstpl
pop
cmpsl
dec
mov
mov
or
insl
xor
jle
clc
push
or
stc
push
incl
idivl
pusha
imul
stos
and
outsb
or
aas
mov
dec
jno
les
inc
cmp
repnz
cwtl
out
cld
inc
jo
not
mov
out
subb
fnstenv
mov
jecxz
cli
jg
fwait
int
add
cmp
or
sti
pop
push
stos
int3
sbb
out
lret
push
pop
les
xor
add
iret
sbb
enter
push
cmp
pop
fdivrp
mov
adcl
nop
cltd
cmp
sub
jle
cmp
or
imul
pop
int
add
aaa
in
sbb
sbb
fnsave
pop
aad
rolb
movsb
aad
dec
mov
rorl
das
inc
xchg
mov
loope
mov
jne
aaa
shl
push
lock
jp
cmp
scas
pop
xchg
inc
cmpsb
jmp
jge
jecxz
or
fbld
iret
pop
cmp
sbb
icebp
mov
icebp
adc
inc
call
xor
jb
ds
cld
lods
xchg
push
daa
jbe
or
loop
mov
repz
mov
push
sbb
std
clc
int
jns
xor
aas
testl
out
stc
xchg
add
add
out
int
mov
test
test
icebp
outsl
mov
gs
icebp
adcl
sbb
outsb
cwtl
push
loop
mov
inc
leave
sti
inc
ss
cmc
pop
cli
repnz
push
js
outsl
pop
inc
dec
jne
jg
shll
ret
insb
leave
cwtl
loop
stos
cltd
cwtl
push
add
dec
inc
push
insb
inc
lods
ljmp
adc
stc
push
inc
mov
cwtl
adc
jg
in
loope
sti
ja
rol
xor
leave
sbb
scas
and
or
loop
sbb
orl
lea
sub
push
js
or
xlat
pusha
pop
imul
cwtl
notl
add
inc
adc
pop
popa
adc
mov
inc
cmp
repnz
out
enter
and
ja
pop
dec
mov
cli
arpl
pop
movsl
push
push
inc
jb
and
cltd
std
sub
aas
push
jmp
subb
mov
sbb
aad
pop
cmp
popa
mov
push
imul
bound
addb
int
add
fwait
jne
jge
jmp
cmc
loope
mov
and
or
and
push
dec
pop
hlt
jb
movsb
adc
adc
gs
jb
or
dec
dec
in
inc
inc
cmpsb
cwtl
arpl
cmp
push
pop
push
mov
push
test
faddl
lcall
dec
mov
aas
insl
and
xchg
ror
fbld
addb
inc
mov
rclb
mov
jp
into
push
out
push
mov
pop
rsm
enter
xor
rcrl
mov
xchg
sbb
fsubs
mov
cwtl
cli
or
dec
cltd
fisttps
hlt
outsl
aaa
aas
lret
lds
inc
pusha
lds
shll
mov
scas
out
cmp
adc
mov
xchg
mov
lea
iret
enter
iret
ss
or
sbb
adc
add
outsl
inc
push
ret
and
std
rcr
inc
outsb
jnp
shrl
push
inc
icebp
dec
lret
aad
ret
out
add
push
xchg
loop
into
xchg
popf
push
mov
stc
jge
cltd
push
mov
pop
jne
cld
xchg
rorl
mov
jo
hlt
loopne
imul
aad
lret
mov
and
xchg
nop
dec
add
pop
sahf
inc
sbb
int3
push
cmp
lods
lock
rorb
loope
iret
enter
lds
push
jns
xor
pop
mov
arpl
xor
arpl
pushf
mov
lods
dec
pop
int3
push
inc
psadbw
push
mov
ret
jns
pop
iret
push
fdivs
dec
jp
add
dec
cmp
xchg
xchg
fnstenv
and
push
push
outsb
sbb
pop
jmp
lock
add
mov
adc
xlat
mov
xchg
xlat
aad
xchg
sub
jmp
mov
stos
adc
and
and
dec
mov
jne
shr
out
add
jmp
ja
cwtl
gs
cmc
mov
inc
arpl
incl
adc
loop
jg
neg
sbb
cmp
cmpsb
loope
adc
bound
jb
mov
aas
inc
mov
cmp
cmc
sbb
imul
mov
pusha
inc
ficoms
rcl
test
cmpsl
cs
cmc
inc
jg
jg
scas
adc
pop
rolb
dec
xchg
push
mov
dec
sub
pop
xchg
sbb
dec
sbb
pop
sub
je
stos
jl
push
or
mov
xor
shll
jge
into
ds
sub
add
outsb
add
mov
and
in
pop
push
dec
mov
dec
cli
jl
mov
shll
dec
mov
ljmp
fwait
pop
in
pop
mov
repnz
rorb
out
cmp
and
push
leave
cmp
int
jecxz
inc
je
mov
mov
xchg
ret
insb
cwtl
cmpsl
movsl
test
dec
shll
jmp
push
ljmp
sub
stc
inc
fcomps
cmpsl
lock
rcrl
mov
adc
and
test
jmp
jne
sub
mov
test
das
cld
loope
test
cmp
xor
rcrl
xor
push
xchg
fs
xchg
jge
faddl
mov
lock
lds
arpl
sub
cld
outsl
std
iret
sub
imul
inc
movsb
push
xchg
fwait
lret
or
dec
add
movsb
in
mov
je
mov
mulb
cld
outsb
pop
xor
insb
push
hlt
lods
sti
fisttps
add
sti
fs
or
push
inc
cwtl
push
test
loopne
dec
outsl
inc
ret
sub
es
jb
cmp
xchg
lds
dec
xor
inc
out
and
movsb
out
stos
and
roll
mov
lahf
dec
ss
mov
daa
test
mov
arpl
sarb
arpl
jns
push
fimuls
xor
sbb
xchg
movsb
mov
clc
insl
sub
out
loopne
add
outsl
jbe
out
iret
mov
add
push
jns
inc
pop
push
push
mov
mov
je
sub
lods
loop
sahf
adc
jns
leave
aad
xchg
into
xchg
lahf
aas
scas
mov
mov
js
in
or
stc
loopne
iret
lods
cmp
sub
dec
rcll
jno
sahf
pop
mov
lds
adcl
loopne
adc
ficompl
push
lock
xor
aad
push
call
ffreep
inc
cmp
sub
cmp
mov
lds
mov
jmp
xor
sbb
shr
leave
cld
ljmp
adc
data16
rsqrtps
nop
adc
adc
inc
jbe
pop
push
lahf
call
lret
fwait
stc
aaa
lea
jae
adc
ret
push
stos
pop
mov
pop
sub
lret
cmpl
push
lcall
mov
xchg
ss
add
sbb
loop
mov
xor
cmp
xchg
scas
pop
aas
insl
xor
cmp
pop
and
enter
jbe
adcl
sub
push
pop
and
xchg
mov
jno
pop
xlat
andl
sub
pop
lret
and
ja
outsb
xor
mov
and
adc
subb
or
xchg
sarl
sahf
xchg
mov
stos
push
jp
int
jmp
mov
maxps
lcall
daa
pop
std
ss
lds
loope
paddsw
scas
pop
mov
stc
leave
popf
pushf
ja
icebp
or
std
push
scas
test
pop
icebp
gs
adc
bound
push
pop
std
sbb
sub
add
icebp
mov
mov
pop
mov
and
push
imul
push
sahf
xchg
cmp
sti
jae
mov
pop
fnstcw
cmp
push
sbb
stos
inc
loopne
xchg
int3
xchg
inc
popf
mov
and
movsl
mov
movsl
fildll
jae
jb
stc
dec
call
lret
ret
add
mov
sahf
insb
mov
repz
dec
pusha
sub
call
test
bound
sub
mov
inc
mov
sbb
icebp
dec
pop
cmp
gs
lret
mov
cltd
xchg
test
mov
push
cltd
mov
and
sahf
mov
rcl
imul
lret
shlb
cmp
mov
lahf
arpl
mov
or
jne
pop
movsl
mov
jbe
mov
lcall
jbe
iret
call
xchg
fdivrl
sbb
adc
leave
add
jbe
jo
push
in
jmp
dec
cmc
mov
ljmp
dec
loope
inc
xor
push
in
out
clc
cmp
add
xchg
fcomip
addl
xchg
sub
mov
ret
lds
loop
gs
and
lahf
dec
cmpsl
js
movsl
cmp
test
aam
lahf
jmp
cmp
cmp
sub
mov
mov
out
cltd
fildl
dec
mov
push
xchg
int3
repz
lahf
mov
sti
mov
xchg
adc
mov
and
cs
call
scas
cmp
cmc
sti
jp
mov
mov
addr16
lret
cs
mov
notl
stc
pop
lret
xchg
int3
inc
insl
aaa
gs
mov
gs
xchg
and
aad
and
jle
mov
cmp
aad
sti
loope
dec
sbb
add
movsl
ret
ror
lcall
jo
push
cs
roll
js
scas
inc
es
xchg
sbb
mov
daa
rorl
popa
push
dec
adc
pop
mov
cmp
jnp
sti
pop
xchg
out
adc
notl
lods
fidivrl
sahf
gs
mov
mov
test
mov
mov
loop
sbb
mov
pop
mov
dec
aad
scas
clc
mov
or
outsb
ds
sahf
pop
pop
mov
filds
and
push
push
add
mov
pop
adc
cld
insb
call
or
daa
mov
sarl
cmp
arpl
insb
arpl
sbb
or
and
jns
xchg
xor
lcall
shlb
dec
repz
roll
mov
enter
pop
int
add
shrb
je
push
jns
sbb
adc
shr
jg
shll
cmp
aaa
ficoms
or
mov
lds
sbb
or
jne
into
add
aaa
or
push
inc
sbb
xchg
lcall
and
loop
outsb
fs
leave
jae
aaa
ja
dec
adc
or
pop
add
dec
xor
mov
mov
inc
add
mov
enter
insb
mov
imul
xor
shlb
sbb
or
jl
pop
leave
int
jle
std
cld
enter
inc
test
cmp
mov
add
sahf
inc
mov
or
aad
jns
cmc
inc
cmc
clc
shll
insb
xor
add
jge
daa
xlat
adc
js
pop
ljmp
jb
aam
mov
dec
push
fsub
jbe
not
push
push
sti
adc
jnp
aas
xlat
mov
jns
popa
jge
lods
jl
call
xor
outsl
enter
inc
lods
adc
into
std
aad
stos
adc
and
js
sbb
mov
shl
mov
pusha
cwtl
and
scas
loope
push
lods
aad
outsl
nop
push
jbe
sbb
ljmp
dec
and
addr16
ffree
pop
cmp
mov
or
aas
popa
fs
out
sub
cmp
jns
aas
push
jne
jg
inc
pop
xor
stos
xlat
mov
cmp
cmp
leave
lods
jno
repnz
pop
int3
push
lret
jecxz
mov
or
aam
sub
jg
adc
clc
mov
mov
repz
insb
jno
pop
jae
xchg
arpl
and
or
test
mov
cmp
xor
lahf
sub
xchg
iret
inc
mov
pop
lock
not
enter
push
stc
inc
and
dec
pop
idivl
je
push
sub
mov
mov
mov
adc
mov
not
lcall
push
sbb
hlt
inc
push
pop
lret
jp
repnz
movsb
aam
sti
icebp
test
inc
xchg
pop
sbb
stc
jmp
ficoml
mulps
mov
xchg
inc
xor
cld
stos
shl
shlb
notl
inc
xor
out
add
and
xchg
xchg
mov
icebp
push
or
sbb
frstor
je
cmp
jmp
stos
adc
imul
jle
icebp
xor
cmp
aas
ficompl
mov
xchg
inc
mov
push
lret
and
in
jecxz
cmp
mov
and
mov
jnp
cld
mov
hlt
inc
movsb
sbb
add
xchg
cmp
cwtl
inc
bound
cmp
push
mov
sub
xchg
rcrl
out
pop
inc
repz
or
push
inc
gs
push
sbb
sub
shr
mov
pushf
sbb
mov
clc
mov
mov
and
inc
inc
add
pop
pop
push
test
test
out
test
in
jns
pop
add
pop
or
add
iret
fisttpl
pop
iret
xor
adc
sub
mov
les
mov
lret
dec
or
mov
nop
mov
pop
lds
insl
jle
jno
ficoms
pop
pop
pop
inc
xor
test
cmp
popa
xchg
add
mov
sbb
pusha
sub
repnz
xor
mov
add
rcl
mov
mov
in
les
add
add
push
int3
test
adc
adc
xchg
imul
push
pop
nop
aaa
ja
loop
out
mov
call
lds
cli
clc
mov
or
mov
push
push
dec
xchg
movsl
sti
enter
aaa
jae
dec
aaa
lock
mov
out
xor
fwait
adc
mov
cmp
jecxz
lret
ret
ss
out
outsl
push
mov
sbb
jmp
in
out
push
sarl
lcall
mov
mov
es
cwtl
cmp
and
mov
cmpsl
sahf
sarl
pop
fiaddl
sahf
sbb
ret
cmp
adcb
xchg
or
pushf
call
mov
mov
ljmp
or
aad
push
daa
ljmp
xchg
imul
fcmovnu
push
shll
dec
pop
loope
and
dec
sub
jns
inc
shll
je
js
imul
test
fidivl
mov
xor
sub
sbb
pop
jnp
push
clc
and
out
clc
mov
ror
out
outsl
shll
popf
lds
xor
popf
jl
daa
negl
mov
mov
in
push
aam
mov
sahf
popa
sidtl
push
in
mov
aam
lcall
dec
filds
sbb
jns
lods
dec
mov
or
jae
arpl
dec
sarl
jae
ret
jb
mov
cmp
or
pop
aaa
and
xchg
xchg
mov
cld
add
mov
adc
mov
mov
je
dec
xchg
xor
and
mov
cmp
cmp
mov
mov
xchg
das
mov
add
push
stc
lods
es
cmp
mov
cmpsl
sbbl
inc
sub
in
push
sub
or
push
add
call
xor
and
test
push
imulb
pop
push
in
enter
nop
scas
lcall
sbbb
xor
jbe
sti
pusha
jns
mov
sbb
pop
stos
imul
mov
pop
sahf
fisubs
je
call
push
aad
mov
push
andb
iret
adc
inc
aad
stos
mov
adc
pop
push
pushf
sub
out
out
jne
iret
cmp
outsl
aam
shll
repz
mov
clc
mov
jb
and
loop
insb
pop
and
cld
shlb
cmp
dec
push
and
mov
and
movsb
imul
mov
inc
jbe
xor
in
push
xor
lret
ret
in
xchg
divl
imul
bound
sub
sub
call
cmpsl
or
into
shr
sbb
cmpsl
pop
or
sub
out
nop
cmp
popl
lahf
fisubrs
and
decl
in
adc
xchg
cmpsb
mov
push
lods
incl
les
test
lock
int3
shlb
add
js
mov
cs
imul
hlt
add
sti
fs
outsb
push
in
dec
add
xchg
add
mov
movsb
sub
repz
sub
inc
lret
fnstcw
orl
mov
sub
dec
xchg
cmpsl
ret
or
adc
stos
push
sub
inc
mov
fisttpl
shll
fcmovb
inc
pushf
out
add
inc
or
and
or
add
xchg
into
ffreep
test
dec
fwait
and
mov
outsl
rcrb
enter
xlat
push
imul
and
popf
mov
leave
loope
stos
and
pop
mov
subb
jmp
jnp
repz
leave
incb
aam
cli
mov
nop
adc
das
dec
fimuls
mov
sbb
adc
jmp
mov
movsl
pop
xor
cld
or
sbb
ret
pop
inc
lcallw
jnp
or
stc
and
mov
lds
mov
aad
dec
inc
stos
xor
mov
jne
in
sbb
repnz
cmp
jbe
mov
inc
or
mov
fildl
insb
push
push
fildl
mov
mov
in
xor
add
int
hlt
mov
adc
jecxz
push
scas
xor
xchg
push
shl
inc
mov
xor
addr16
test
and
shlb
lock
xchg
push
jg
fcomps
or
mov
dec
mov
xchg
lahf
push
or
cmp
push
adc
push
imul
cmpsl
add
sbb
nop
leave
outsb
iret
mov
shl
pop
scas
jmp
cwtl
popf
mov
add
pusha
jns
mov
test
mov
cwtl
jle
pop
push
mov
inc
dec
adc
into
sub
shll
pop
inc
cld
adc
xor
dec
push
ljmp
fildl
push
sbb
loopne
inc
addr16
int3
sub
cmp
sbb
movsb
aaa
loope
adcb
or
lock
pop
test
cli
jne
add
and
out
fstl
cmp
in
and
lret
mov
sbb
xor
add
gs
popf
testl
pop
xchg
ds
lret
mov
aaa
jl
negb
and
daa
cwtl
xor
xchg
sub
aam
into
push
outsb
xchg
cmpsb
xor
iret
push
shll
ja
dec
orl
push
dec
andl
cmc
jmp
mov
mov
inc
xchg
loopne
shll
out
mov
xchg
push
dec
and
test
hlt
enter
shrb
int3
xor
fs
push
fcomps
dec
or
insl
xchg
fwait
insb
outsl
ss
or
mov
fdivrl
cmp
fdivl
inc
cs
xchg
sub
aad
fwait
lret
out
inc
mov
cmp
loop
data16
inc
testl
aaa
push
scas
stc
inc
test
shrb
xchg
jns
shrb
scas
inc
lahf
xor
push
lahf
cmp
jns
or
inc
mov
and
icebp
mov
sar
iret
dec
mov
mov
or
sahf
add
sub
adc
cmc
insb
lds
sbb
mov
push
dec
push
lret
std
into
pop
xchg
or
adc
pop
jb
adc
ret
jp
sbbl
outsl
or
cmp
mov
inc
dec
aas
dec
cmc
mov
xor
nopl
stc
jns
es
hlt
cmp
cmpsl
frstor
mov
mov
jo
sbb
jns
mov
cmp
add
cmp
and
ret
mov
movsb
and
insb
inc
cmpl
clc
xchg
xchg
xchg
push
push
sti
mov
and
lock
bound
mov
dec
lods
xor
sub
dec
bound
and
cmpb
mov
xor
mov
pushf
outsl
xchg
scas
xchg
push
mov
push
jnp
into
repz
sahf
sbb
in
es
and
inc
jno
xor
imul
xchg
push
or
pop
clc
out
scas
pop
imul
jnp
lds
pop
icebp
aaa
in
add
and
inc
xor
push
testl
ss
out
mov
xor
xlat
push
test
scas
xor
or
xchg
inc
les
inc
int
mov
cld
call
add
jge
scas
ljmp
lret
inc
jo
ss
aas
dec
jle
in
or
call
sub
lods
cli
call
jecxz
dec
int3
movsl
js
inc
cmp
or
pushf
cmpsl
dec
xor
xor
add
lret
sub
xchg
pop
mov
and
aaa
adc
fsts
add
dec
in
mov
stc
mov
loope
jae
and
sub
mov
mov
pop
je
sti
loopne
cmc
repz
movsb
pusha
fnstcw
pop
fadds
fbld
and
fs
push
lods
pop
leave
cmp
push
test
xchg
dec
pusha
sub
jp
out
inc
mov
inc
and
out
fcomp
cltd
popa
call
or
jle
adc
jle
push
out
popa
ljmp
add
sub
fs
push
bound
inc
out
mov
arpl
fsubrl
xchg
or
xor
pushf
sub
mov
ja
les
repnz
mov
xchg
cmp
xor
push
fwait
fs
inc
ror
adc
mov
out
or
testb
xor
mov
inc
push
enter
stc
mov
mov
shlw
sub
mov
cwtl
push
movsl
inc
aam
lret
std
dec
ret
fs
pop
jbe
adc
pop
lock
sti
xor
push
fs
ds
and
sbb
imul
and
or
sbb
push
mov
enter
or
ljmp
dec
add
adc
into
jbe
xchg
mov
pop
hlt
mov
dec
xor
shl
cmpsl
fiadds
int3
xor
jg
inc
mov
js
lock
out
scas
sbb
inc
push
or
sbb
shl
push
xchg
mov
pushf
xchg
insb
xor
or
imul
xchg
aad
cwtl
mov
test
pop
or
test
xchg
sub
shlb
addr16
scas
jb
dec
mov
mov
push
lea
dec
fwait
popa
mov
push
xor
push
dec
out
ja
outsl
call
rorb
and
dec
adc
add
dec
mov
mov
xor
test
sub
cltd
out
pop
sahf
jmp
fldcw
cmpsl
pushf
je
subb
mov
sbb
pop
cli
imul
pop
xchg
jmp
xchg
test
add
jp
ljmp
mov
push
data16
cwtl
dec
adc
in
pop
clc
jnp
inc
xor
adc
ljmp
sub
mov
pop
or
mov
fstl
sahf
cmp
xor
pop
and
cld
mov
mov
mov
es
ja
and
mov
and
xor
jl
mov
dec
call
addb
sahf
mov
outsl
jmp
jl
cmp
stos
int
pop
mov
or
jle
push
xor
lods
out
int3
mov
andl
cli
xchg
outsl
push
push
mov
cmp
sahf
mov
rorb
jg
mov
xor
adc
loope
sti
sub
xchg
test
fimuls
push
xchg
ret
pop
loope
shlb
sarb
push
fcoms
rcrl
jp
lods
loopne
mov
ret
inc
test
mov
sub
sub
popf
xor
ja
popl
data16
inc
push
adc
fiaddl
push
add
adc
ficoml
mov
xlat
xlat
lret
and
pusha
movsl
jmp
mov
sub
fldenv
mov
jg
inc
pop
test
or
fdivrp
xor
out
add
mov
repnz
shrl
pop
out
movsb
ret
pop
out
call
mov
imul
xorb
and
push
mov
sti
mov
push
xor
shrl
xchg
fisubrs
in
sarb
or
xor
mov
jnp
xlat
test
scas
fisubrl
mov
in
and
xor
xor
dec
jno
dec
cltd
jmp
lcall
testl
add
insl
je
fwait
repz
icebp
xchg
mov
ja
cmp
addl
into
fldt
ss
pop
cmpsb
xor
aas
das
pop
arpl
sub
pop
iret
xchg
dec
pop
xchg
sub
ljmp
out
sbb
in
dec
pop
cmpb
arpl
sub
pop
mov
movsb
mov
jne
aaa
and
mov
lahf
outsl
mov
push
or
and
jmp
mov
test
notl
cmpsb
dec
mov
test
xchg
mov
cmp
sub
jle
loope
insb
andl
js
adc
stc
jl
dec
mov
adc
cmc
dec
ljmp
mov
jae
aad
jmp
jmp
mov
inc
jns
jp
sti
addb
mov
jp
cmpsb
clc
and
push
sbb
mov
loop
cmpsl
jne
cld
hlt
add
repnz
push
jmp
adc
in
push
js
pop
sub
les
jmp
in
loop
add
jo
fistpll
jmp
inc
mov
pop
jno
sub
xchg
mov
incb
xlat
fistpl
mov
rcrl
imul
out
mov
arpl
popf
cli
jle
dec
in
sub
pop
scas
adc
sbb
push
movsl
xor
push
stc
andl
push
imul
push
test
leave
mov
sti
pop
push
inc
push
jbe
mov
lcall
in
xchg
in
inc
out
cltd
jle
adcb
cld
pop
sub
ja
xchg
testb
scas
pop
inc
std
out
jnp
xchg
sub
rcll
jb
bound
mov
mov
xchg
mov
loop
fdivrl
or
add
repz
loop
lret
or
movsl
iret
comiss
xor
sti
repz
adc
and
mov
push
adc
add
jle
cmc
xchg
mov
mov
push
jne
mov
cli
mov
mov
ret
rcrl
xchg
cmp
push
mov
jge
add
mov
jmp
iret
sub
mov
scas
shr
enter
les
lret
add
add
jno
add
addr16
adc
mov
sbb
mov
int
mov
mov
xlat
inc
or
loopne
sbb
adc
cmp
mov
xlat
xor
dec
cwtl
lds
and
push
xchg
lods
arpl
rcll
lea
in
out
xchg
add
mov
sub
into
test
add
int
sub
pop
adc
ja
call
pmulhuw
jecxz
xor
sbb
adc
xor
sti
and
cli
test
andl
stos
sahf
fimuls
add
dec
dec
mov
lcall
mov
ljmp
pop
rcr
jle
add
jae
add
jo
dec
in
mov
ja
lret
pushf
in
stos
icebp
pop
mov
fisubrl
cmp
movsb
cwtl
mov
dec
cs
lods
leave
mov
hlt
push
mov
cmp
and
mov
cmp
out
jbe
xchg
cs
js
push
into
xchg
mov
dec
fbld
stos
int
dec
loope
in
dec
dec
sahf
lods
inc
inc
std
xor
pop
adc
push
mov
sbb
aas
jns
test
in
fucomi
pop
cmp
in
imul
loopne
jp
xchg
jae
push
arpl
jp
push
fbld
jnp
and
dec
mov
mov
pop
mulb
add
or
push
and
loop
cwtl
cwtl
pop
mov
xchg
cld
adc
push
outsl
loop
js
std
sbb
int3
jno
je
ljmp
imul
lea
nop
and
jns
pop
inc
jg
popa
test
mov
push
insb
inc
mov
scas
xor
jo
inc
popa
loopne
pop
push
jno
pop
shl
mov
mov
leave
adc
inc
push
adc
inc
sub
ficomps
out
pop
push
enter
scas
jmp
in
out
sub
out
push
pop
mov
mov
sahf
into
shlb
cmpsl
xchg
dec
js
mov
push
inc
sbb
inc
xor
fadds
inc
jo
ja
out
push
jl
pop
ret
and
mov
loop
pop
sbb
repnz
sbb
lods
jnp
imul
je
je
jecxz
add
jg
add
outsl
jmp
cld
imul
mov
push
cmp
addb
ljmp
dec
stc
xchg
out
xchg
and
jl
cwtl
pop
push
nop
rcll
pop
add
lods
popa
in
imul
push
out
cs
sbb
jb
mov
scas
fs
fmuls
push
push
stos
call
fcoms
stos
cmpsb
pop
sbb
push
xchg
fldt
repnz
in
pop
movsl
stc
mov
inc
dec
call
pop
sbb
in
cmp
cmp
or
orl
push
xchg
enter
mov
or
out
jo
push
adc
js
hlt
pushf
je
mov
pop
or
fldt
xor
sbb
or
popa
out
cltd
test
mov
cmpsb
push
loopne
cld
ja
lods
out
xor
xor
push
popa
mov
push
fs
lods
test
jne
popa
push
in
jl
out
adc
push
clc
movsb
dec
fimull
std
cmp
addr16
stc
xchg
mov
xorl
fstps
push
inc
dec
jae
insb
std
aad
xchg
mov
dec
je
sub
nop
and
jns
insb
imul
icebp
lods
xchg
xor
mov
aaa
fucomi
inc
psubusb
lret
pop
in
sahf
icebp
fwait
dec
push
adc
adc
ret
loop
mov
adc
cld
rclb
push
add
shll
jmp
mov
mov
inc
movsb
rcrb
es
inc
mov
roll
inc
cmp
icebp
jp
push
bound
sbb
lock
lret
add
add
in
inc
movsl
in
stc
or
jnp
iret
jecxz
dec
int
xor
cmpsb
icebp
jnp
int3
out
scas
fiaddl
cmp
es
cmp
cmpb
aam
adc
aad
nop
fs
mov
lds
scas
imul
test
js
out
mov
rorl
adc
sarl
divps
in
cmc
jns
xlat
xchg
mov
les
sarl
jae
outsl
insb
sub
adc
repz
ljmp
daa
out
out
mov
ja
cwtl
sbb
cmp
leave
pusha
das
orb
call
xchg
push
insb
cs
js
sub
inc
int
loop
sbb
sbb
lods
test
mov
insl
add
lcall
outsl
push
dec
pop
adc
int
add
push
popf
mov
mov
ficoml
cmpsb
inc
test
jl,pn
pop
scas
test
out
lods
ret
and
lret
pop
stos
enter
movsl
stos
jbe
fnstenv
pop
movsl
stos
in
inc
outsl
lea
movsl
add
dec
sbb
dec
lock
jle
rolb
add
in
fnstenv
in
xchg
adc
cmp
icebp
lea
mov
popf
rcrl
out
mov
scas
or
shll
xchg
inc
inc
mov
push
xchg
jg
imul
arpl
sbb
out
add
test
push
jl
mov
or
ss
adc
pop
pop
bound
sbb
jns
add
mulb
xlat
andb
jns
and
aad
out
adc
xchg
push
mov
test
mov
xorl
xor
xchg
addb
or
xor
mov
xor
and
dec
jnp
into
sub
or
je
mov
mov
scas
pop
nop
cmp
xor
arpl
mov
mov
and
sbb
dec
xchg
mov
aas
push
push
mov
insl
cwtl
xlat
ss
mov
lret
mov
int3
pop
and
push
inc
xor
jno
addr16
cld
loop
cmp
mov
in
adc
or
add
jmp
and
pop
mov
fwait
out
push
imul
xchg
jmp
add
gs
xor
or
mov
insl
dec
filds
outsb
or
jne
jp
jns
dec
push
cltd
cmp
fsubrs
adc
pop
inc
dec
dec
test
in
xor
adc
test
xchg
adc
push
or
xchg
lods
dec
jae
and
out
scas
cmpsl
and
and
test
divb
or
ficoms
lock
push
pop
loope
clc
push
or
mov
mov
cmp
ret
pop
mov
push
pop
dec
xor
aaa
wrmsr
xchg
insl
xor
jmp
loop
cmp
test
sbb
adc
xchg
test
imul
jae
aad
mov
out
addr16
lds
imul
jno
mov
adc
in
hlt
loop
aas
rcll
rcl
pop
loop
out
jnp
and
in
movsb
and
mov
mov
mov
cmpsl
mov
inc
dec
nop
add
cmp
fisubrl
xchg
ds
or
push
lret
dec
xchg
pop
or
cmpsl
xchg
mov
pop
je
fidivrs
cmp
xor
jns
sub
mov
and
dec
insl
sbb
pushf
mov
test
mov
cmc
lea
insb
stos
xchg
fs
and
subl
xor
adcl
outsl
inc
int3
bound
mov
arpl
inc
call
js
out
xor
je
adc
test
jp
inc
popa
pop
xchg
cmpl
cld
jo
and
daa
addr16
cmp
inc
daa
je
mov
push
stc
mov
xchg
sub
popa
jge
lret
out
jbe
testb
scas
inc
aaa
push
pushf
add
sub
pop
sub
fnstenv
push
fs
popf
roll
outsb
imul
mov
xchg
jl
test
cmp
stc
xor
inc
aam
sub
jnp
cs
dec
pop
jle
sahf
sub
aam
push
icebp
insb
push
into
mov
jle
push
inc
jmp
mov
cld
push
xor
add
ret
fsubs
aad
aad
cmp
es
or
jmp
jne
fisttpll
test
cmp
xor
push
inc
ret
mov
and
adcl
pusha
xor
and
and
mov
in
sub
xchg
sbb
fisubrs
push
aam
inc
loope
pop
inc
arpl
sbb
jnp
jg
mov
cli
fnsave
and
loopne
rorl
lret
cmpsb
pop
movlhps
fcmovnbe
inc
inc
fstpt
push
mov
or
sbb
movsl
pop
test
fists
add
rcrb
fmul
jo
pushf
jo
jns
xor
cmpb
cwtl
lods
arpl
ret
ror
loop
loop
mov
push
lods
loopne
repz
mov
lea
imul
adc
sub
adc
push
imul
mov
js
divl
repz
xor
or
sbb
sbb
sti
js
xor
jb
jl
adc
mov
sub
pushf
sub
xor
adc
sbb
sub
filds
pop
leave
mov
cld
popa
cmp
xor
testl
or
ret
dec
fcomps
aad
int3
dec
xchg
out
cltd
xor
mov
fcoms
imul
cmc
hlt
xchg
xchg
sub
adc
dec
dec
inc
lods
lods
sub
les
and
lcall
lahf
outsb
pop
push
fisttpll
mov
loope
mov
jge
cmp
movsb
pusha
push
mov
in
movsb
movsb
ficoms
dec
icebp
adc
pop
loop
in
sub
sbb
cmp
push
sahf
pop
inc
outsl
test
pop
js
xor
shl
xchg
dec
sbb
shl
xlat
ret
xor
fwait
add
hlt
jl
lret
js
pop
jae
inc
rol
mov
or
mov
aaa
push
test
arpl
pusha
pop
or
in
push
sbb
cmp
test
clc
repnz
or
scas
pop
push
and
ret
stos
sti
movsl
xchg
movsl
inc
mov
xchg
mov
rcrb
adc
fiaddl
lods
nop
xor
sub
in
sbb
shr
xchg
mov
mov
jne
and
adc
or
sarl
cwtl
jl
testb
inc
fdiv
xor
out
test
or
pop
dec
sbbl
rolb
push
stc
fs
mov
lds
daa
shll
mov
sub
jp
and
nop
scas
jno
pop
lea
bound
sub
mov
nop
das
inc
jo
sbb
adc
and
stos
push
add
mov
sub
in
arpl
imul
das
jbe
ret
and
sahf
popa
xor
popf
cmp
mov
scas
cmpsb
sarl
dec
or
add
cwtl
lds
adc
or
mov
inc
test
shrl
std
ret
sbb
mov
push
pop
loopne
jnp
pop
in
xchg
push
repz
push
dec
sahf
fwait
loopne
rcrl
pop
add
lods
add
mov
xchg
rcl
shl
cmpsb
pushf
ss
dec
inc
lcall
mov
popf
sahf
insb
add
mov
jno
add
dec
mov
cmpb
push
pushl
pop
pop
test
adc
js
xor
inc
daa
test
dec
ucomiss
in
sbb
push
ret
adc
xlat
jb
clc
outsb
js
lock
cmpsl
dec
xor
cmp
popa
cltd
mov
popa
imul
test
out
sbb
in
xchg
mov
sti
out
push
scas
roll
mov
mov
pop
lret
lods
outsb
lods
orb
or
divb
or
lea
enter
outsb
test
test
add
push
pop
push
jno
sbb
cmpsl
dec
dec
cmp
mov
jle
dec
int
lea
pop
sarb
and
and
cltd
mov
fimull
movsb
pop
and
sbb
lahf
je
enter
pop
add
add
addr16
pop
mov
or
pop
xchg
test
ret
stc
mov
or
stc
mov
mov
fistpl
cmpsl
leavew
std
inc
mov
test
or
mov
call
lods
lods
lock
das
push
int
cmp
cs
sub
and
add
fstps
or
mov
push
mov
fisttpll
std
fildll
in
adcb
fildl
and
lock
cmpsl
sub
jg
jge
sub
xchg
jp
sub
xchg
or
std
loope
fistpll
xchg
jmp
mov
addr16
and
or
ds
leave
ffree
xchg
and
fildll
jp
in
pop
or
jecxz
clc
sahf
inc
push
adc
xor
sbb
push
mov
or
push
inc
jp
sub
xor
push
xlat
gs
stos
gs
sub
and
aam
cmp
popf
dec
xor
cmp
pop
xor
mov
mov
dec
ljmp
test
insl
sub
cmp
and
or
addr16
lods
andnps
stos
les
fdivr
fbstp
inc
or
ss
pop
adc
add
pop
popf
sbb
ret
jg
sarl
scas
xor
cmp
mov
and
or
jmp
rolb
lods
push
ficoml
xchg
das
inc
sbb
pop
cmp
xorl
add
jecxz
cltd
jmp
lret
mov
sub
lock
fbld
mov
lahf
scas
adc
push
xor
jne
addr16
in
cmp
int3
inc
out
cmp
inc
add
jb
push
or
adc
out
jns
sub
push
loop
sbb
pop
xchg
mov
pop
push
inc
push
mov
add
imul
test
add
je
inc
inc
push
filds
aad
out
jle
ljmp
cmc
or
mov
mov
shll
stos
mov
sub
nop
test
data16
lock
popf
scas
xchg
add
imul
rcrb
sahf
and
mov
inc
out
stc
test
push
mov
sbb
movsb
shlb
push
jmp
and
dec
lcall
cli
pop
lods
add
outsb
push
rcl
loope
out
cltd
cld
scas
add
mov
lods
shl
sub
add
cmpl
loope
movl
loop
lcall
dec
loope
lret
and
sbb
in
inc
mov
cmpsl
popa
aaa
push
fcomps
xor
mov
xchg
pop
clc
fs
stos
pop
xchg
aad
and
in
ja
fnstcw
test
pop
mov
das
lea
mov
addr16
mov
jle
push
dec
xlat
mov
inc
cmp
fildll
mov
shr
icebp
sbb
icebp
popf
jbe
lret
and
cmpb
test
lods
jne
mov
adc
je
sbb
outsl
pusha
imul
stos
int3
popf
push
cld
arpl
dec
imul
xchg
or
pop
ja
scas
frndint
loope
push
ljmp
inc
xchg
jmp
add
into
jae
outsl
nop
push
sti
pop
mov
adc
jbe
mov
out
sub
clc
cmp
mov
pop
stc
int3
fwait
imul
lret
or
inc
lock
cltd
push
sahf
fisttps
rcrb
push
cmp
addb
jno
jle
outsb
imul
loope
xor
lods
sub
daa
pop
mov
dec
sbbb
mov
insl
cmp
loope
hlt
mov
test
gs
xor
or
loopne
sti
mov
xchg
mov
pop
cmp
jnp
pop
and
push
ljmp
dec
ret
inc
insb
lock
seto
dec
xor
push
arpl
imul
mov
adc
push
mov
sahf
inc
dec
inc
pop
mov
mov
dec
xor
push
xchg
add
in
rcrb
into
push
lret
pop
xor
pop
outsl
jmp
aam
pop
dec
movl
push
aaa
and
stos
leave
rorl
adc
call
andb
adc
int3
xor
cmpsb
mov
and
dec
in
in
adc
decb
shlb
inc
xchg
lret
repnz
out
adc
cli
jmp
sub
ds
into
js
mov
in
ret
xor
inc
and
loopne
mov
out
jo
ljmp
shrb
ficoms
in
in
ss
and
pop
dec
adc
arpl
xor
out
sub
pop
or
stc
inc
movsb
push
or
and
pop
mov
fxch
xor
fidivs
cmp
or
push
or
inc
loop
add
push
lods
add
mov
imul
loopne,pn
add
shlb
add
sbb
ss
pop
adcb
xchg
jns
jo
pusha
clc
jo
xchg
dec
jge
jg
cmc
fdivrp
fld
pushf
les
sub
mov
dec
or
xor
insb
je
test
mov
and
fisttps
into
or
jg
lock
hlt
int3
dec
int3
repz
add
cmp
mov
fadd
dec
xchg
mov
incl
push
sti
dec
or
xchg
mov
mov
scas
dec
out
pusha
call
out
lea
jecxz
or
test
sbb
adc
add
or
popa
sbb
mov
cmp
or
jge
push
sbb
ret
aam
mov
mov
outsl
insl
outsb
out
mov
out
lcall
and
pop
cltd
test
jge
push
inc
xor
mov
icebp
lds
jnp
sub
aas
or
clc
mov
popf
negb
sub
fisubrl
inc
xor
and
xchg
adc
pop
inc
leave
push
add
dec
xlat
cltd
cmp
movsb
fmull
push
pfrcpit1
push
mov
xor
fwait
mov
pop
and
dec
je
xor
jne
push
cmpl
sbb
xor
ljmp
outsl
test
mov
push
inc
push
ds
sbb
pop
int
or
es
fstpl
fwait
jmp
insb
fwait
outsl
pop
pop
imulb
cmp
sub
pop
jp
push
jne
mov
cmp
gs
sub
js
mov
dec
js
out
fwait
in
int3
test
mov
sbb
dec
jmp
lea
int
lret
sub
in
cli
cmp
test
stos
sub
adc
adc
sbb
in
or
ja
fwait
jbe
mov
add
sahf
dec
in
jno
cmc
pop
dec
sbb
and
mov
pop
xor
cmp
mov
inc
outsw
cld
xorl
jbe
shlb
ror
sti
xor
fbstp
aas
push
lret
scas
addb
das
cli
imul
and
js
and
xor
add
or
idivl
xor
mov
and
lds
ljmp
test
xchg
fistl
in
out
jge
fdivrl
and
and
xor
ret
loopne
pop
int3
sbb
dec
push
filds
dec
inc
inc
movsb
sub
mov
xor
je
addr16
ja
scas
cmpsl
adc
out
sbb
push
mov
test
fwait
call
sub
cs
sti
inc
jle
cld
ret
inc
shl
lods
js
mov
and
dec
outsb
sub
push
jmp
test
mov
cmpl
jb
xchg
insl
xlat
inc
or
push
mov
pop
leave
sbb
mov
mulps
push
cli
mov
jae
out
aad
dec
repnz
mov
push
sub
add
fildll
subb
fimuls
adcb
jecxz
loope
outsl
pop
dec
jl
adc
pop
imul
aas
call
dec
dec
pop
shlb
jae
cwtl
and
inc
into
pop
adc
insl
inc
mov
shl
jbe
sahf
mov
sbbb
sbb
and
mov
cli
fwait
jp
mov
xor
push
sbb
test
iret
cld
jns
call
hlt
aad
fwait
jo
inc
cld
pop
imul
inc
into
leave
aad
int
push
lds
pop
enter
cmp
inc
adc
xchg
fildl
leave
xor
mov
in
pop
gs
mov
sub
sbb
sbb
leave
test
inc
pusha
mov
sbb
mov
fs
jnp
or
or
rep
xor
fcomp
lods
cmpsb
fdivrs
mov
xorb
sub
cltd
leave
ja
sbb
cs
push
es
inc
out
out
add
inc
imul
out
push
mov
mov
or
xlat
mov
icebp
inc
loopne
dec
jmp
push
push
ja
and
pop
test
fsubs
test
hlt
sbb
adc
out
in
popf
les
lock
add
inc
pop
dec
lock
sub
and
pop
lock
fists
adc
jg
sub
fildll
adc
adc
cmp
cld
fimuls
cmp
ljmp
jmp
sub
leave
jmp
jle
mov
dec
and
add
push
ud0
cltd
lods
dec
in
popf
and
outsb
test
add
sub
psubd
lock
dec
dec
mov
cltd
sub
add
mov
mov
into
outsl
in
jecxz
fcompl
popa
mov
addb
inc
and
movsb
sbb
addr16
cmp
jnp
es
mov
js
sub
dec
sbb
addr16
xchg
mov
jns
je
lods
mov
dec
mov
xor
adc
mov
in
jge
fsubs
dec
out
call
xor
outsl
dec
inc
jno
pop
cmp
add
fwait
stos
sti
xchg
jl
push
aad
push
xor
aam
sbb
mov
mov
loopne
and
xor
xor
sub
ljmp
into
cmc
repnz
aam
jae
pop
push
outsl
bound
mov
cmp
aas
mov
imul
or
pop
xchg
int3
push
mov
jo
in
add
hlt
add
or
cmpsl
aaa
cwtl
jne
int
test
mov
jns
insb
addr16
mov
repnz
sahf
jae
and
and
daa
icebp
std
cwtl
call
inc
ja
int3
xor
mov
adc
or
jge
jo
mov
insl
hlt
stc
jo
cmp
ja
or
cmp
inc
ss
pop
sbb
stos
shl
leave
mov
mov
xchg
xchg
cmp
hlt
aas
mov
repz
aam
stc
shlb
add
movsl
sbb
dec
popa
xchg
fimuls
aam
jnp
dec
xchg
lahf
xchg
mov
inc
cmp
ret
lods
and
sub
pop
movsl
inc
xorb
incl
pop
dec
dec
ja
and
adc
clc
arpl
sub
xor
div
or
mov
test
out
into
fwait
dec
std
ljmp
lods
pop
addr16
fs
mov
xchg
test
sbb
ss
cs
pop
aad
mov
pusha
out
adc
sarl
cmp
xchg
loopne
cld
aam
lret
adc
mov
mov
sbb
in
sbb
mov
out
je
mov
cli
dec
jle
repz
mov
push
push
mov
sahf
jmp
lea
mov
sub
dec
mov
lods
dec
sbbb
lret
inc
or
pop
push
jmp
aad
or
stos
push
and
out
push
adc
adc
mov
push
mov
sub
bound
adc
ret
mov
mov
mov
sub
sbb
mov
repz
imul
das
fcmovbe
stos
jle
add
sub
scas
cmpsb
cld
stos
rcrl
mov
aas
push
adc
mov
iret
or
jo
stos
and
push
loopne
and
mov
scas
pop
and
mov
mov
fimull
or
add
push
incl
in
jb
mov
jle
shufps
xchg
mov
je
add
daa
aas
sbb
or
xchg
arpl
or
fsubs
hlt
sarl
sbb
movsl
or
fmull
arpl
mov
add
adc
fldt
adc
mov
xor
or
adc
lods
sahf
andb
ss
ds
stos
mov
enter
sub
enter
xchg
subb
adc
or
jge
push
xchg
into
ds
dec
cli
movsl
and
cmpsb
es
into
xchg
sti
stos
mov
push
sti
adc
jle
dec
shr
xor
pop
and
adc
inc
xchg
aas
testb
cli
aaa
cmp
pop
xlat
xchg
stos
inc
jno
ds
out
xlat
mov
mov
push
aas
imulb
cmp
repz
in
fstpt
push
xor
cwtl
pop
sahf
andl
test
mov
addl
adc
or
orb
stos
xchg
xchg
test
jmp
mov
push
xor
mov
mov
out
mov
rorb
mov
cld
mov
fildl
pop
ljmp
and
or
mov
into
aad
out
xlat
outsb
jbe
mov
and
pop
jb
scas
sbb
xchg
and
pop
ret
rorb
loop
pop
mov
rcrl
call
lcall
mulb
mov
popf
and
data16
mov
mov
daa
mov
jae
js
outsb
cmp
lock
and
subl
jecxz
mov
je
movsl
call
mov
jo
pop
push
mov
xchg
and
outsb
cmp
in
pop
cmp
addr16
mov
popa
pop
pop
jmp
pop
and
ret
jno
pop
jecxz
pop
mov
and
and
or
dec
or
or
mov
sub
sbbl
mov
fstps
adc
mov
ret
xchg
xchg
enter
fcoms
xchg
fstpl
add
xchg
mov
cmpsl
daa
cmp
pop
add
dec
adc
inc
aaa
daa
add
pop
add
pop
add
cmp
jno
cmc
dec
mov
scas
add
push
repz
adc
sti
aas
js
mov
mov
pop
ss
mov
inc
stc
enter
insl
test
dec
add
xchg
in
xor
sbb
push
add
dec
gs
adc
push
cwtl
mov
sub
lds
inc
jp
xchg
push
ljmp
fs
add
jnp
and
and
and
stc
mov
jne
cltd
xor
cmp
add
mov
ljmp
jbe
cmpsb
in
inc
int3
imul
nop
and
sbb
in
mov
lret
bound
pop
sbb
inc
sbb
push
xlat
lret
adc
outsl
cld
dec
outsl
in
dec
insl
jo
lahf
inc
pop
lea
xor
dec
fstp
mov
outsb
lahf
and
push
int
arpl
gs
sbb
cs
movsb
push
cmp
inc
pop
out
jne
lds
scas
push
cmc
sub
or
out
sub
addr16
sbb
xchg
mov
lret
pop
sub
rcr
jbe
js
jge
xor
leave
das
lahf
add
repz
push
xchg
call
std
cmpsb
sub
gs
jecxz
inc
ds
sbb
inc
mov
sbb
push
xchg
mov
mov
push
jle
stc
or
xor
inc
jb
or
ss
popa
bound
filds
add
sbb
hlt
enter
ret
xchg
adc
cltd
in
add
std
rolb
imul
cmp
add
sbb
repnz
icebp
xor
mov
mov
xchg
iret
sahf
insb
adc
sub
inc
out
xor
fsubrl
test
mov
dec
aad
jmp
or
xor
shrb
jnp
dec
fsubl
sub
outsb
mul
fnop
shll
outsl
out
daa
jmp
inc
add
push
dec
cs
jb
loope
bound
push
iret
ja
sbb
mov
out
mov
mov
sub
cltd
fwait
icebp
loope
imulb
sub
sti
pushf
in
es
imul
in
mov
ja
jg
nop
mov
xchg
sahf
pop
sbb
lods
lods
mov
scas
cs
dec
test
xor
out
jnp
and
adc
push
lods
pop
in
xchg
mov
jns
fnstsw
mov
cmp
les
push
cmpsl
sbb
std
xorl
sbb
insb
mov
cmp
test
sub
in
adc
ret
xor
xchg
pop
scas
cmp
xchg
lret
daa
mov
lahf
xchg
and
shl
ja
cltd
rorb
fsubl
out
and
cmp
in
push
enter
mov
xchg
inc
test
int
rol
push
ja
sbb
jb
mov
push
mov
pushf
nop
mov
dec
lods
and
pusha
xchg
adc
mov
push
in
mov
sbb
xchg
ret
outsb
push
dec
fcmovnu
xor
dec
icebp
jmp
int3
mov
sub
rcl
ud0
mov
into
push
inc
ljmp
je
std
popa
sub
or
sub
add
dec
jmp
mov
mov
call
aas
out
test
imul
jae
out
test
mov
mov
sbb
jp
pusha
add
pop
sub
sub
jnp
outsb
and
shll
add
mov
jg
add
ja
clc
icebp
and
mov
pop
imul
push
pop
xchg
mov
add
mov
jmp
and
fldl
gs
in
insl
pop
xor
pusha
mov
xor
int3
xor
in
push
and
shrl
mov
mov
jo
lds
sbb
mov
loope
out
add
addl
push
mov
xchg
ja
jo
lods
and
divl
fcomip
stc
push
mov
cmpsb
mov
xchg
sti
sbb
dec
jmp
jp
pop
inc
fwait
sahf
int
or
negl
scas
xor
dec
ja
adc
subl
je
lret
cltd
cmp
sbb
iret
sub
aam
shrl
das
push
mull
lahf
aad
mov
repz
and
popf
sbb
sbb
or
fsts
mov
sub
inc
pusha
push
or
jecxz
out
pop
testl
and
mov
icebp
dec
std
jge
dec
and
ja
loope
int3
mov
dec
or
inc
inc
push
outsl
jge
test
test
mov
mov
movl
inc
aas
pop
mov
jge
push
pop
pop
xorb
cs
popa
and
out
lret
adc
inc
lret
or
mov
iret
mov
push
xchg
movsl
test
mov
add
out
jp
or
adc
ja
in
lods
cli
and
push
pop
mov
jg
loop
je
add
rcr
sub
xor
movsl
popf
jecxz
hlt
xchg
test
push
fldenv
sbb
inc
dec
mov
orb
sub
stos
shll
push
js
or
inc
sub
adc
vcmpsd
add
sbbb
repz
xorb
xorl
in
cmc
data16
cld
in
nop
pop
cmc
lea
push
popf
push
pop
mov
xor
mov
cli
pop
cmp
push
adc
jl
push
fldl
add
pop
xchg
or
xor
ja
or
hlt
insb
xchg
pop
jo
ja
sub
lods
adc
push
xchg
insb
stos
lods
rcl
xchg
lcall
sub
enter
xor
outsb
adc
and
jmp
or
or
add
push
cwtl
xchg
lret
mov
push
mov
addb
clc
fcomps
movsl
adc
xor
or
and
adc
leave
adc
out
pop
and
adc
xor
add
cs
push
movsl
jns
inc
fwait
stos
leave
jno
mov
es
pusha
out
jecxz
sahf
sub
mov
aad
sub
mov
mov
sub
xchg
into
test
dec
mov
mov
push
fldl
test
dec
fnstenv
jge
dec
aad
jg
sbb
imulb
and
out
test
mov
sbb
sbb
xchg
cmpsb
aas
pop
out
push
mov
xchg
xchg
fisttps
outsb
xchg
arpl
gs
dec
and
sbb
xor
adc
hlt
inc
mov
xor
mov
and
stc
fnstcw
xchg
xor
and
loopne
mov
shrl
inc
lock
jge
xchg
or
push
loope
fldcw
lods
aaa
cmp
cld
cld
mov
mov
shl
orb
pandn
add
pop
add
or
int
outsl
push
and
insb
scas
insb
lret
loop
clc
outsb
movsb
or
sahf
fistpll
fscale
cmp
std
je
scas
inc
pop
inc
or
pop
pop
inc
pop
dec
out
out
mulb
sbb
pop
mov
sub
mov
test
out
imul
scas
jle
roll
pop
jne
in
shll
pop
inc
mov
jle
inc
sub
add
pop
jno
outsl
es
push
mov
repnz
aam
popf
add
int3
pop
mov
popf
or
adc
insl
shrb
repz
pop
pop
bswap
dec
adc
scas
adc
daa
add
adcb
cmp
sarl
scas
mov
adc
rdpmc
cmp
adc
rcrb
push
or
inc
test
pop
pop
test
sbb
gs
cwtl
push
bound
adc
cmpsl
ret
jge
cmpb
add
and
cmp
jo
pop
mov
ja
xchg
ja
inc
lods
xchg
sti
dec
sbb
adc
push
fsts
repz
mov
fisttpll
in
mov
gs
inc
fimull
fimuls
or
cmc
jmp
pusha
movsbl
mov
rorl
jge
nop
sub
test
rcrb
and
call
xor
sarb
push
or
insl
repnz
xchg
lret
mov
jb
hlt
pop
xor
jo
sub
pop
cmp
insl
daa
cwtl
push
jns
test
cmp
xor
loopne
xor
xchg
sub
scas
add
dec
sub
jb
roll
mov
sbb
mov
xor
movsb
shlb
jns
loop
subb
pop
mov
mov
std
loopne
cmpsb
stc
add
outsl
push
pop
jno
jecxz
adc
shll
mov
xchg
filds
mov
fwait
inc
imul
shr
loope
pushl
or
clc
int3
mov
or
add
and
xchg
sub
stos
sbb
adc
aam
ret
decl
push
aaa
adc
adc
cmp
rorb
cmp
xchg
jecxz
fs
mov
cld
ljmp
push
dec
adc
jb
jb
aam
sarl
adc
push
xchg
ds
ljmp
pushf
inc
sbb
cmp
fcomps
lods
sbb
inc
inc
push
jae
dec
or
sub
das
addr16
dec
xchg
sbb
jp
js
and
lret
cmp
inc
scas
adc
xchg
sub
das
enter
jmp
xor
push
jl
test
stc
push
loopne
inc
xchg
ljmp
mov
add
or
repnz
push
pop
cs
lcall
repnz
sbb
sbb
icebp
out
push
dec
pop
adc
inc
into
in
int
mov
jno
push
or
mov
dec
push
sbb
add
cmp
imul
and
je
jno
data16
xor
ja
bound
xor
lds
pop
jmp
fstps
push
inc
xchg
lret
lret
sahf
cmp
aad
repnz
cmp
push
pop
fsub
popf
mov
adc
pop
gs
vpcmpeqd
movsl
pop
dec
cmpsl
repnz
cmp
or
jmp
loop
mov
mov
or
sbb
or
jge
and
and
sub
xchg
mov
addl
dec
mov
xlat
mov
pop
sbb
cmpsb
jbe
loop,pt
mov
lods
xchg
mov
and
xchg
pop
test
movsl
cwtl
xlat
push
fidivrl
gs
les
fucomip
jo
pop
pop
lock
xchg
push
test
out
sub
mov
and
enter
xor
and
in
sti
mov
jle
adc
data16
xchg
add
fwait
negb
cmpsb
in
imul
test
ss
or
xor
lods
xor
hlt
jnp
xor
jne
dec
push
or
push
push
loopne
add
pop
mov
xor
cli
adc
fbld
pop
cmpsb
andnps
and
mov
pop
push
sbb
sbbl
mov
cmp
test
dec
in
js
test
mov
inc
push
pop
js
test
adc
push
mov
repnz
fmuls
push
and
divb
xchg
sar
nop
push
pop
nop
lret
jl
push
and
lea
hlt
outsb
fwait
xor
push
add
xorl
push
lret
sbb
lret
jno
xchg
push
or
fadd
xchg
loope
jle
in
jg
inc
insl
lret
fistps
gs
fwait
or
mov
mov
cs
push
scas
les
pop
fldenv
jo
pop
jno
loope
lods
mov
imul
test
jns
ja
dec
fdivrs
cmp
in
out
push
aaa
push
not
fadds
cli
jecxz
adcb
xchg
pop
mov
push
mov
dec
fmulp
aam
or
scas
jb
ror
cmp
ret
out
popf
dec
ret
into
mov
xchg
push
nop
stos
add
test
mov
mov
and
aas
popa
mov
sub
arpl
jno
xchg
dec
xchg
loope
ljmp
movsb
out
lcall
xchg
ret
mov
xchg
xor
gs
inc
push
imul
loope
pop
mov
push
sbb
sbb
push
aam
inc
stc
mov
jno
jmp
push
push
int3
in
daa
push
mov
scas
and
stos
push
dec
fs
popf
aad
enter
xor
sub
jae
stc
jae
mov
cmp
jmp
imul
cmp
dec
jnp
jmp
cmp
es
aam
cs
push
in
lock
fwait
dec
jb
subb
pop
addr16
mov
jmp
dec
inc
in
stc
pop
negl
stos
adc
mov
sub
rol
outsb
mov
adc
iret
sub
xchg
pop
stos
jns
xor
mov
mov
dec
lcall
dec
push
mov
imull
xchg
adc
aaa
andb
pop
mov
gs
das
dec
jb
rorb
fs
sub
out
adc
adc
mov
mov
mov
inc
fstps
int3
sbb
xlat
cmpb
or
and
fisubrs
push
sbb
test
fcomps
test
ret
and
mov
push
shll
cmp
addl
and
or
mov
add
pop
fidivrl
jno
je
inc
push
add
aas
lcall
fbld
inc
pushf
frstor
push
mov
aam
mov
mov
jmp
mov
add
daa
adc
outsl
mov
lods
adc
inc
in
or
or
stc
pop
fwait
adc
inc
cmp
ljmp
xchg
dec
push
sbb
sti
jne,pn
mov
cli
lods
adc
push
jnp
push
cmpsb
das
ret
inc
xor
xchg
lahf
and
out
scas
stc
adc
mov
popf
test
and
push
push
mov
mov
bound
pop
cli
cmc
xchg
dec
cmp
mov
cwtl
js
adc
data16
pusha
in
mov
adc
mov
adc
sti
jo
orb
loopne
push
jp
mov
outsb
leave
xchg
dec
jge
add
xor
inc
cmp
pop
sbb
pop
test
pop
xor
or
inc
in
or
stos
push
pop
in
inc
stos
mov
aad
std
cs
in
loopne
test
sbb
mov
add
int
xor
clc
jmp
mov
mov
syscall
push
movsl
shrb
addr16
fadds
inc
mov
adc
mov
dec
js
mov
repz
in
adc
xchg
leave
ja
mov
jl
lock
inc
jo
ds
mov
pop
jg
pop
dec
aas
lret
and
in
aam
popa
cmp
sub
mov
cs
mov
dec
or
sbb
imul
sbb
lret
xchg
and
mov
xchg
xor
sbb
mov
dec
mov
xchg
sub
and
mov
pop
std
cmpsb
mov
pop
cwtl
sti
inc
mov
mov
fs
mov
sbb
fiadds
aaa
pop
or
xchg
inc
mov
add
in
inc
mov
mov
loope
dec
ss
ss
xchg
insl
mov
cmpb
into
adc
sub
fmul
hlt
ljmp
cmp
xchg
xchg
dec
jns
jl
push
scas
jmp
rcrl
in
pop
addl
and
bound
int3
rcll
loope
inc
inc
fcompl
imul
mov
inc
push
and
sbb
dec
orb
xlat
adc
cmc
in
cltd
repz
aaa
sub
jmp
jae
pop
dec
or
and
dec
sbb
xchg
xor
dec
push
pop
adc
stos
inc
in
push
pop
jnp
jg
push
jne
scas
cld
decl
iret
ds
sbb
xor
dec
daa
mov
ret
idivl
inc
imul
jno
cmpsb
xchg
jecxz
popf
aas
test
rcrb
test
mul
popf
push
and
xchg
mov
fxch
in
ret
mov
inc
dec
pushf
imull
pop
cltd
fidivs
pop
or
push
test
shrl
lret
mov
test
sbb
paddd
imul
gs
fmuls
imul
test
sbb
or
xor
mov
xchg
in
lds
inc
cmp
pusha
pop
test
mov
mov
popl
xchg
dec
dec
pop
adc
es
jge,pt
mov
scas
add
bound
js
out
cmp
fwait
and
push
jb
push
pop
shl
lods
add
mov
adc
add
mov
push
pop
fmuls
test
mov
mov
mov
subb
movsb
or
inc
lods
aad
sbb
and
xor
push
sbb
xor
scas
shll
lods
xor
mov
push
pop
push
jb
lea
fadd
rclw
push
xchg
ljmp
loop
jb
or
jge
xchg
add
lahf
sbb
imul
mov
xchg
jbe
jo
and
sbb
fildl
adc
mov
add
mov
dec
scas
cmpsl
pop
rclb
jns
mov
push
ss
imul
xchg
shlb
insb
mov
inc
rcr
sub
sub
jbe
adcb
pop
aam
add
fnsave
sbb
out
testl
mov
das
ret
xchg
mov
cli
mov
inc
outsb
sbb
mov
mov
cmpsb
test
pop
xchg
dec
iret
xor
fs
add
in
xchg
sub
sbb
popf
in
sub
push
dec
push
outsb
outsb
push
push
sti
mov
test
js
mov
pop
shll
dec
hlt
aam
fs
xchg
and
pminub
or
push
rcrb
pop
shrb
or
jmp
mov
or
jbe
or
dec
mov
test
adc
mov
cmp
imul
dec
ret
mov
xchg
push
aas
stc
aad
adc
outsb
mov
push
jnp
loop
ljmp
stos
inc
xchg
cmpsb
lods
add
sti
in
fimuls
ljmp
das
dec
insb
repz
shrb
rorb
fs
les
xchg
xor
adc
jmp
jbe
xlat
loop
call
iret
push
dec
xchg
jnp
imul
sub
lret
je
xchg
ret
push
jo
jnp
in
mov
adc
mov
pop
shr
cli
aaa
jg
adc
test
in
and
mov
in
inc
bound
inc
fs
sub
mov
int
dec
cmp
jo
test
test
or
dec
cmp
fimuls
sub
mov
lahf
imul
inc
push
pusha
pop
xchg
mov
cmp
or
call
fnop
jbe
js
pop
add
sti
mov
adc
mov
nop
dec
je
adc
mov
push
hlt
dec
push
into
scas
outsb
sub
sub
push
xchg
or
and
data16
neg
rcrb
in
sub
pop
pop
push
jp
popa
xchg
dec
ja
movsb
push
jnp
mov
xchg
push
fsubrp
jae
cmp
dec
lock
stos
notb
fdivs
inc
and
cmovno
cmc
cmp
nop
mov
cmp
pop
arpl
push
rclb
enter
daa
outsb
aaa
in
sub
push
out
fiaddl
push
mov
sbbl
dec
push
cmp
sub
xchg
dec
cmpsb
jo
outsl
jo
and
and
xor
out
push
push
repz
or
loope
adc
xchg
mov
lock
mov
pop
lret
push
push
mov
cli
lahf
mov
mov
jbe
or
dec
or
cmpsl
movb
je
out
ret
inc
or
test
enter
andb
pop
insl
cmp
push
sub
adc
adc
ss
pop
mov
adc
inc
jne
push
fwait
xchg
out
mov
xchg
dec
jns
sbb
fdecstp
enter
jmp
xchg
ja
mov
test
pop
lods
push
leave
call
push
mov
push
sbb
lret
iret
push
inc
jb
push
xor
or
pop
sbbl
push
jno
imul
jno
adc
es
adc
xor
or
jbe
fadds
or
and
cwtl
adc
cmpsb
inc
ljmp
dec
inc
mov
lahf
mov
mov
movsb
aas
sti
and
fcmovnb
add
push
shr
repnz
movsb
arpl
lret
pop
sub
add
or
jne
test
test
clc
ret
ja
hlt
adc
negb
dec
mov
rcr
sbb
aas
or
lret
mov
fwait
popa
std
push
cmpsl
call
xchg
cmp
shl
jae
mov
or
fmull
add
sbb
sub
iret
insb
nop
adc
out
adc
leave
repz
mov
imul
stos
xchg
mov
xchg
pop
or
iret
or
scas
mov
add
mov
pop
cmp
sub
mov
testb
xchg
mov
aad
ret
push
lret
lds
add
subb
mov
aam
push
orb
mov
mov
and
pop
jnp
out
pop
mov
xor
std
mov
ljmp
lock
jge
sbb
sbb
in
mov
xor
movl
scas
aam
or
push
mov
lahf
sub
dec
or
addr16
idivl
sub
jo
and
hlt
fistl
sbb
xlat
mov
repz
loop
sahf
cmp
xchg
test
cmp
adc
in
pop
inc
dec
sub
mov
xorb
movd
pop
mov
sub
mov
dec
icebp
sahf
or
mov
pusha
adc
and
and
mov
mov
jne
shl
cmc
cmp
xor
xor
mov
fnstenv
mov
ja
cmpsb
ret
outsl
fs
mov
lods
push
jno
and
sub
movsl
dec
pop
jg
push
mov
xchg
out
inc
and
push
and
cmpsl
add
in
dec
nop
cld
xor
mov
loop
lahf
popf
add
cmp
or
cmc
push
in
sub
stc
cmp
mov
stos
adc
test
gs
fsubl
icebp
cmp
cmpsb
shrl
mov
inc
loopne
mov
loope
sbb
fyl2xp1
cmp
out
dec
fisubs
add
adc
xor
adc
fstpt
in
mov
and
pop
jmp
sbb
movsb
inc
mov
cmp
xor
push
inc
sbb
inc
mov
sub
into
data16
jge
pop
insb
shl
xchg
sub
popa
test
fmuls
pop
test
out
int
mov
adc
sbbb
outsl
insb
or
mov
jmp
mov
rol
sbb
cmpsl
add
jnp
test
mov
addb
clc
mov
cmp
adc
pop
mov
cmp
arpl
clc
mov
fimull
std
add
sbb
and
mov
push
out
xchg
and
mull
mov
pop
mov
xchg
jbe
pop
loopne
jmp
push
les
popf
dec
subb
shll
xor
into
fstl
cli
stos
gs
xchg
hlt
sub
pop
cltd
lret
lret
addb
fnstenv
mov
pop
pop
in
sti
imul
inc
icebp
cmpsl
cmpsl
ret
mov
xchg
test
push
sub
or
lea
aaa
addr16
xchg
mov
cmp
sub
out
inc
mov
adc
adc
pop
adc
fstpt
pop
int3
out
dec
int3
push
lfs
mov
es
aad
es
bound
adc
add
lea
or
popa
xchg
xchg
sbb
and
add
ret
aad
lcall
popa
stos
imul
clc
pop
popf
mov
jo
lds
mov
lret
lret
stc
and
dec
inc
movsb
test
inc
sub
mov
loop
adc
stos
inc
adc
mov
lret
jno
xor
mov
add
cmp
jae
sbb
jno
icebp
pop
xchg
shrl
push
test
adc
ljmp
push
int3
lret
stos
xor
jnp
xchg
je
and
pop
gs
stc
aam
jp
add
insl
jo
cmpsl
inc
pop
mov
cmp
cmp
mov
loopne
cmpsl
ret
lock
idivb
lcall
adc
test
call
lret
inc
jl
push
das
in
fistps
pushf
shrl
imul
into
xor
sbb
sbb
popl
movsb
push
dec
dec
clc
mov
mov
int
xor
jg
outsl
sbb
add
or
lret
xchg
xchg
pushl
inc
sahf
dec
cmp
sub
pop
mov
push
sbb
add
and
call
add
dec
out
xchg
loop
push
movsb
loope
mov
sub
idivl
dec
mov
enter
test
add
inc
mov
jecxz
jnp
int3
cmp
pushf
add
add
adc
movsl
cmp
jp
mov
movsb
out
movsl
test
sbb
ss
enter
xlat
xor
stc
aaa
jmp
mov
mov
dec
mov
jecxz
pop
push
pop
xchg
xchg
xor
fs
pop
insb
jo
mov
and
dec
cmp
popf
test
dec
adc
in
xor
ret
in
jbe
hlt
mov
dec
daa
mov
mov
push
call
andb
or
jb
pop
rolb
fwait
pop
jg
mov
add
or
pop
mov
or
push
ja
pop
sub
adc
out
sahf
lahf
mov
adcl
movsl
mov
scas
adc
stos
pusha
mov
add
lds
jge
mov
out
jg
mov
dec
dec
ss
sbb
adc
jp
repz
adc
adc
xor
pushf
mov
mov
or
loop
push
out
and
push
cmp
mov
test
stc
fyl2xp1
pop
ds
cmp
stos
sar
cmp
jmp
mov
mov
fs
or
or
les
in
call
jle
ret
jg
insb
mov
jb
sbb
and
or
out
pop
dec
int3
lret
in
aam
adc
add
mov
add
aam
mov
xchg
jg
gs
cmp
in
arpl
xor
or
xorb
pop
or
adc
mov
icebp
mov
sub
movsl
inc
std
into
ljmp
je
xor
loopne
cmpsb
or
shll
xor
scas
sub
xchg
xchg
popf
mov
rolb
pop
dec
pop
push
pop
neg
mov
mov
jmp
push
mov
hlt
or
push
rcll
sub
pop
sbb
xchg
repnz
xor
or
ret
notl
das
shlb
loop
testb
lret
sbb
icebp
pop
mov
lahf
dec
xor
sub
loop
mov
lret
push
movsb
cmp
insl
test
xlat
stos
mov
jae
out
sbb
mov
frstor
aaa
stos
add
insb
jl
or
lds
xor
aaa
and
add
pushf
incb
mov
test
cld
jno
inc
xor
aam
nop
xor
scas
aaa
inc
mov
and
jne
jnp
nop
aam
push
out
rorb
decl
ljmp
js
or
pop
jg
lds
test
jb
mov
jbe
ss
xchg
sub
cmpsl
sbb
jg
sahf
lret
mov
out
push
ficoms
sbb
cmp
fildl
in
adc
lahf
xchg
cs
adc
cld
push
lret
push
jmp
inc
mov
loopne
push
mov
lret
xchg
and
shrd
push
jnp
fisttps
mov
in
jle
sbb
mov
mov
je
movsl
sub
jbe
dec
mov
cmp
cmp
jge
mov
rolb
cwtl
push
push
int3
sti
ds
jge
rclb
jg
ss
sub
jnp
or
inc
sub
call
fildl
imul
orl
and
insl
mov
adc
cltd
out
pusha
push
jl
ds
outsl
pop
xchg
jle
cmpb
xchg
pusha
repnz
adc
pop
orl
daa
sub
nop
add
jge
xchg
cmpsb
int3
sub
inc
das
xor
xor
repnz
push
std
dec
inc
cmp
jmp
loope
not
outsl
lahf
lods
xor
xor
mov
sbb
pop
pop
mov
call
addr16
rcl
mov
mov
loop
and
add
pushf
dec
decl
jmp
mov
push
stos
xchg
fildl
inc
mov
cmp
xchg
or
pop
mov
stos
add
das
sub
ja
insb
pop
movsl
cmp
and
xlat
mov
sbb
push
out
shll
sbb
scas
jg
jge
mov
in
xor
xor
enter
insb
test
or
xchg
xorb
test
add
sbb
push
std
int
movsb
mov
lock
imul
adc
sbb
xchg
test
pop
insl
dec
fdivrl
imulb
adcb
outsl
push
xchg
test
test
mov
dec
mov
mov
arpl
pop
out
rcrb
mov
mov
mov
adc
sahf
mov
dec
jb
movsb
inc
xor
call
stos
or
cmp
sahf
pop
mov
mov
jne
adc
pop
imul
and
xchg
mov
pushf
imul
sarl
push
push
scas
jge
sub
imul
inc
pop
stos
pop
and
ljmp
out
aam
xchg
shrl
dec
daa
xor
sub
xor
sbb
imul
sar
add
popa
push
adcl
or
sbbb
dec
sub
pop
mov
xor
stos
outsb
cli
adc
int
xchg
mov
lret
call
or
cmp
push
push
dec
repnz
jmp
adc
fistpll
push
adc
stc
repnz
movsl
jns
stc
and
out
lret
bnd
shrl
xor
add
xchg
adc
sbb
adc
ds
pop
mov
inc
mov
add
xchg
leave
or
inc
cmp
inc
cmc
mov
mov
push
outsb
mov
xchg
xchg
jge
and
ss
imul
andb
out
mull
cld
mov
cmpb
jecxz
mov
push
lahf
mov
jne
rcrb
pop
xchg
fwait
xchg
mov
orps
inc
testl
pusha
adc
sub
shll
insb
int
data16
mov
ss
out
inc
cmpsl
or
bound
xchg
fistl
pop
and
dec
inc
mov
test
mov
out
sti
out
cmp
mov
lds
sarb
movsb
ja
inc
inc
sbb
ret
push
jmp
xor
dec
sbb
fnstenv
inc
push
xor
rcrl
test
imul
mov
pop
std
sbb
dec
rcll
sub
pusha
rorl
add
lds
xchg
adcb
and
add
cmp
loopne
xchg
add
stos
xorb
data16
jbe
cmp
push
pusha
sub
xchg
outsb
not
mov
mov
pop
popa
sub
sbb
addl
adc
dec
xchg
mov
out
movsb
inc
lea
jl
mov
loope
out
dec
sbb
icebp
lods
xor
clc
dec
cmp
out
sub
das
cmp
sub
mov
pop
or
out
movsb
pop
mov
and
je
xchg
push
inc
popf
daa
pop
xchg
inc
sub
mov
push
incb
and
test
adc
dec
out
cmp
xlat
movsb
or
dec
sti
bound
inc
pusha
mov
xor
jno
scas
and
inc
jmp
test
js
mov
cs
out
sub
or
push
add
movsl
nop
jl
mov
xor
pop
mov
in
inc
out
popf
ret
pop
in
and
jae
xchg
fcomp
cmc
xchg
lock
ret
enter
out
mov
gs
and
fisttpll
sub
add
xor
cli
lock
xchg
add
imul
xchg
icebp
rorl
call
jle
aam
cmp
xchg
adc
ja
test
in
ljmp
push
orb
lods
in
iret
repz
cmp
or
int3
rcrl
dec
pop
popa
loopne
insb
cmp
sbb
or
and
mov
xchg
lahf
sahf
pop
cmpsb
insb
mov
add
push
enter
mov
jbe
xchg
imul
or
arpl
jecxz
dec
or
test
push
pop
mov
bound
mov
sub
add
jns
iret
aam
aaa
leave
in
dec
test
push
test
jb
cmp
dec
mov
jp
gs
movsb
roll
lea
out
jle
ljmp
xchg
pop
xchg
xchg
dec
loop
mov
adc
ja
xor
mov
sti
ljmp
je
clc
mov
jle
stos
pop
inc
add
cmp
fbstp
jno
mov
out
mov
fxch
shlb
cmp
sbb
out
pop
mov
and
or
sbb
fucomi
and
popf
jge
push
xor
sub
xorl
mov
ja
push
add
hlt
jb
and
pop
jle
aam
stc
leave
cmp
lahf
aas
adc
adc
xor
stc
jbe
dec
ret
lcall
out
dec
xchg
popa
notl
ret
mov
jo
sub
rorl
sub
cmp
je
cs
sub
mov
xchg
loope
push
insb
es
push
jl
imul
daa
xor
or
pop
daa
pop
lods
jnp
pop
imul
andb
pop
out
adc
dec
add
fsubp
and
inc
sbb
pop
dec
enter
push
sbb
and
out
pop
lods
jne
push
cmp
pushf
fidivrs
xchg
and
sbb
imul
mov
xchg
aad
xor
sti
add
icebp
mov
stos
mov
andb
push
in
xchg
shlb
aad
and
cwtl
nop
outsl
fs
xchg
sbb
inc
xor
inc
popf
add
roll
ljmp
mov
lock
xchg
adcb
roll
data16
rcrb
rclb
lods
inc
aam
xor
popa
xchg
dec
imul
pop
cli
mov
inc
jmp
adc
mov
popf
mov
loopne
xchg
inc
fisttps
into
mov
test
cmpsb
push
sahf
gs
test
popf
mov
mov
inc
dec
fdivs
out
pop
mov
mov
arpl
sub
push
insl
and
cli
inc
push
sub
sub
loopne
aaa
push
inc
cltd
mov
adc
lcall
lods
hlt
scas
gs
testl
pop
adc
popf
cmp
cmpsl
pusha
add
in
push
inc
int
pusha
or
out
xor
clc
xchg
jmp
fdivl
frstor
ficompl
out
ljmp
inc
sub
cmp
mov
addr16
inc
lret
fistps
int
cmpsb
adc
hlt
shll
stc
ja
push
das
jnp
test
mov
stc
pop
aam
iret
sub
ret
add
lods
xchg
lods
mov
or
out
push
and
in
cld
push
fwait
xchg
aam
jnp
fwait
repnz
fiadds
gs
jl
push
dec
in
ja
add
adc
mov
outsb
negb
in
sbb
dec
sbb
cmpsb
inc
mov
lock
in
jne
xor
add
scas
testl
inc
outsb
mov
mov
pop
inc
aad
jmp
fwait
loope
repnz
dec
mov
jmp
xchg
cmc
adcl
fnstsw
test
sub
sahf
sbb
adc
mov
fistpll
aad
inc
scas
jnp
aaa
bound
adc
jl
fidivs
xor
in
rorl
loop
xor
jbe
xor
stc
jb
fmuls
mov
cmp
shl
fidivrl
push
and
pop
lcall
xlat
bound
test
adc
dec
pop
sub
mov
in
adc
adcl
leave
push
pusha
cwtl
insl
or
push
das
fmuls
inc
repnz
jl
cmpsl
addr16
in
mov
scas
mov
mov
pop
pop
mov
inc
cmp
aaa
hlt
mov
imul
fisttpl
roll
xchg
aad
add
xor
stos
dec
imul
push
outsb
inc
cmpsb
mov
lea
add
mov
mov
roll
decl
adc
mov
mov
sbb
sti
sbb
jmp
fnclex
jns
push
cmp
adc
cs
and
inc
outsl
shlb
sbb
jae
push
das
sar
adc
movsl
cwtl
arpl
push
sub
xor
add
push
push
dec
or
lcall
xchg
rcr
roll
pop
nop
test
mov
lds
xchg
repnz
jbe
xchg
cmpsb
mov
inc
xchg
stc
cmpsl
cmpsb
jl
cs
and
pop
sub
push
push
lea
push
inc
cli
xchg
xchg
pop
adc
popa
or
jmp
outsb
cs
jnp
xchg
fnsave
pushf
inc
jge
push
mov
push
pop
pop
xor
mov
inc
xchg
cltd
or
and
stc
add
cld
adc
jno
mov
das
sub
inc
jb
sahf
das
and
xor
mov
push
add
mov
add
divl
je
rorl
dec
dec
lret
mov
arpl
mov
sbb
jmp
bound
pop
and
xchg
jae
jo
sti
xor
mov
add
inc
clc
sub
lds
pop
mov
fs
sub
ret
push
repz
idiv
ja
popl
sbb
mov
lds
cmp
lods
xchg
fnstsw
sbbb
mov
adc
fwait
pop
inc
pop
add
es
push
add
inc
ret
dec
cmp
or
scas
push
insb
pusha
enter
mov
inc
loop
push
and
insb
es
jle
leave
test
pop
aas
and
imul
mov
pop
pusha
jb
xlat
dec
adc
bound
inc
js
cwtl
inc
cli
fidivs
mov
mov
jno
jl
popa
lods
stc
rorb
mov
dec
push
pop
push
jb
push
movsl
sbb
fucompp
mov
fwait
mov
testl
nop
sub
add
lcall
pushf
and
in
nop
out
fwait
mov
ja
cs
in
xchg
cld
mov
jmp
pop
or
and
scas
push
arpl
xor
mov
mov
mov
push
and
and
xchg
mov
pop
mov
out
xor
mov
pop
das
call
fldenv
dec
das
cwtl
aaa
mov
out
mov
add
cmp
dec
jb
out
negb
cmc
repnz
sbb
stos
sbb
in
ret
pusha
push
dec
push
sbb
clc
repz
cwtl
xchg
movsl
nop
and
cmp
xor
imulb
adc
in
xchg
mov
or
pop
xchg
xchg
into
out
jb
lods
scas
adc
or
inc
gs
mov
push
or
cmp
sbb
push
mov
mov
jno
repz
mov
pop
shr
mov
pop
mov
sub
test
adc
pop
out
leave
repz
ljmp
bsf
mov
lahf
sbb
daa
pop
jno
push
sar
movsl
xchg
mov
repz
repnz
leave
sbb
xchg
xchg
repz
dec
in
push
pop
mov
push
mov
ds
push
gs
dec
ja
pushf
inc
out
loope
pop
stos
scas
jbe
outsl
insl
dec
adc
pop
orb
dec
ljmp
scas
insl
nop
dec
push
in
cmpsl
push
jmp
sbb
ficomps
xchg
xchg
outsl
scas
or
cmp
mov
rorl
sbb
cmpsb
dec
stos
in
mov
fsts
in
das
sbb
popa
mov
lcall
adc
gs
je
gs
fbstp
stos
cmc
sub
xor
ljmp
mov
sahf
test
sub
cli
adc
xor
popf
dec
rorl
pop
rclb
cmpb
test
pushw
jp
loop
bound
jg
nop
in
cmpsl
ss
or
mov
push
fidivrl
sahf
mov
aam
or
jo
sbb
stos
js
xor
mov
loope
pop
jns
adc
add
fsts
jne
sahf
out
iret
inc
sbb
sbb
subb
fimuls
inc
jp
or
add
pusha
pop
inc
repz
das
out
pop
repnz
pop
rolb
insb
clc
mov
jecxz
mov
sti
ja
sbb
loop
mov
shl
jmp
lcall
adc
fs
adc
out
pop
shr
mov
daa
cmp
or
jle
cmp
sub
sub
lret
jo
std
inc
jle
lods
adc
and
jecxz
std
dec
mov
push
inc
aas
push
gs
fidivl
in
test
mov
mov
add
lahf
bound
mov
stos
adc
jmp
int
out
mov
push
aam
testb
fidivs
pushf
shlb
aaa
xadd
aam
daa
lret
ds
bound
dec
adc
dec
pop
or
call
fs
loope
popa
pop
out
jmp
clc
sbbl
push
sub
and
out
sub
cmp
pusha
andl
insl
push
scas
test
pop
adcl
outsl
adc
imulb
adc
enter
pop
repnz
insb
cli
movsb
dec
mov
imul
aam
jnp
ljmp
out
jo
jmp
dec
pop
sbb
loop
or
std
sub
repz
adc
cmp
pop
faddp
scas
mov
cmp
movsb
xor
cmovne
xchg
stc
ds
xchg
xchg
mov
dec
push
mov
popf
movsb
sub
push
add
xchg
pop
data16
leavew
adc
in
adc
aas
pop
das
call
dec
jge
push
ss
inc
push
flds
pop
test
pop
jecxz
adc
lret
imul
dec
dec
xor
shrl
pop
shrb
sub
and
out
ljmp
push
in
sarb
ss
ret
pop
cltd
dec
ss
jge
push
and
xor
sub
jg
mov
push
outsl
pop
xchg
loope
cmp
mov
ds
pop
hlt
scas
lods
add
xchg
sub
scas
cmp
xor
sub
mov
jge
fxch
daa
cmp
jns
dec
push
push
insb
add
lods
decb
xor
leavew
and
ss
inc
push
push
adc
hlt
addb
in
pushf
jne
xor
push
xlat
shlb
adc
mov
xorl
loope
cmp
mov
jns
mov
adc
pavgb
lahf
xchg
out
sub
pop
or
in
fldcw
adc
movl
push
add
mov
mov
xchg
repz
jb
scas
dec
js
cmp
out
inc
xchg
xchg
cmp
sub
mov
pop
or
cmpps
dec
out
aaa
int3
and
aas
sub
nop
sub
pop
ss
aaa
dec
pop
mov
ror
jns
sbb
and
jns
mov
cmp
add
jb
shll
add
dec
popf
dec
fpatan
data16
out
xorb
add
das
addr16
aas
xor
lea
aad
in
out
jmp
ds
lea
stos
or
cld
dec
mov
dec
cmpsb
out
mov
mov
push
push
adc
mov
or
mov
int
lock
push
xor
lret
out
sarl
cmp
dec
in
scas
push
shrb
mov
scas
push
jle
or
and
in
insl
dec
ljmp
sub
movsb
fidivs
adc
mov
test
xchg
xchg
xlat
es
sbb
gs
adc
ffree
dec
sub
push
cld
lahf
mov
lods
pop
push
insl
aas
mull
sti
jb
aaa
xor
xor
mov
data16
call
insb
daa
dec
ljmp
leave
out
sbb
sti
pushf
sbb
cs
pop
pop
cmp
mov
out
ret
push
aad
jno
cwtl
es
push
fiadds
pop
add
mov
pop
sub
or
in
das
push
push
rclb
ja
push
and
push
push
popl
gs
dec
stos
push
sbb
mov
xor
xor
outsb
mov
insb
push
test
cs
xchg
pop
stc
dec
adc
rcrb
mov
mov
loopne
mov
adc
loopne
xchg
lahf
add
out
pop
add
pop
repnz
lret
lock
inc
inc
cwtl
and
dec
or
dec
aaa
push
mov
es
xor
pop
mov
sub
cmpsl
and
and
mov
adc
imul
data16
enter
adc
fimull
ret
push
shr
inc
sbb
daa
scas
cld
pop
cs
int3
sbb
add
fsubrp
movsb
clc
cmc
jno
and
jle
lea
push
out
push
inc
jl
pop
fwait
jns
lock
mov
rorb
xor
and
scas
sbb
or
xchg
aaa
push
ss
lock
outsb
negb
add
js
push
pop
rcrl
pop
add
dec
dec
fadd
push
fmull
mov
data16
xor
jns
imul
dec
lock
ret
sub
sub
insb
xor
lret
push
mov
daa
gs
popf
lret
mov
movsb
imul
mov
in
addr16
mov
sarb
in
cld
les
int3
lock
adc
movsl
mov
test
push
xchg
add
inc
fistpll
xchg
push
sub
inc
xor
xchg
inc
add
mov
jecxz
and
or
sbb
outsl
flds
clc
fcmovu
ficomps
dec
pop
fs
sbb
ja
imul
pop
sarb
sub
lahf
insb
mov
dec
mov
aad
cld
mov
outsb
xor
mov
dec
add
adc
into
das
in
adc
xor
pop
mov
xchg
pop
cmp
xor
and
es
movsl
subl
pushf
inc
sbb
pop
leave
test
add
subb
aaa
add
inc
pop
out
mov
loope
sub
xor
cs
dec
xchg
imul
xchg
mov
xor
jno
filds
cmp
ss
hlt
add
and
jmp
jb
jecxz
lcall
mov
cld
sub
dec
mov
shrb
test
xchg
rcl
jp
sub
or
pop
lret
cwtl
mov
cmpsb
jae
pop
xchg
add
aam
jb
cwtl
loop
iret
xor
test
xor
push
rorl
jmp
idiv
mov
lock
das
insl
test
loop
int3
sbb
pushf
xchg
xchg
into
cmp
sbb
adcb
add
mov
dec
dec
cmp
lock
push
rorl
push
fwait
lret
pop
adc
add
sub
jnp
js
mov
push
lds
push
cmp
sub
jl
push
xor
rcrb
icebp
out
mov
push
gs
or
int3
shll
adc
cld
mov
rorl
or
dec
dec
in
rcrl
inc
cmp
sub
and
pop
cmp
xor
xor
stos
or
rclb
lods
mov
add
in
fsubl
sbb
ja
mov
dec
or
sub
popa
test
fstp
faddl
sahf
mov
mov
cmp
mov
ss
mov
aad
mov
das
aad
fmul
jp
icebp
outsb
adc
shl
sub
shrb
mov
xchg
pop
clc
leave
repnz
mov
leave
stos
shll
fbld
sbb
call
lahf
xor
jmp
lret
int3
test
sub
and
mov
pop
push
repz
xor
jb
data16
mov
lret
imull
mov
push
pop
dec
or
push
adc
aad
fildl
dec
cmpb
mov
xchg
insb
mov
outsb
stc
aam
int3
pusha
es
mov
xchg
imul
sbb
and
dec
shrl
xsavec
cmp
mov
push
mov
or
cmpl
iret
ds
sbb
stos
shlb
dec
jb
xor
outsb
pop
outsl
pop
aam
stc
div
out
out
lods
mov
bound
arpl
icebp
movsb
mov
or
adc
cmpsl
xchg
das
sti
xchg
loopne
sub
dec
iret
ljmp
jmp
add
mov
stc
into
mov
fidivrs
fwait
mov
jnp
or
or
mov
arpl
push
loopne
outsb
adc
add
fcoms
addr16
ja
adcl
jne
push
or
gs
mov
jmp
push
pusha
mov
inc
sahf
mov
and
shrl
mov
push
push
push
arpl
or
hlt
and
fstps
jmp
sub
and
sub
movsb
push
inc
xlat
or
orb
sbb
inc
lods
ret
nop
mov
mov
rcll
lahf
rcl
in
pop
insb
je
mov
push
fdivs
lcall
stos
pop
add
jns
sbb
adc
pop
ret
aam
jne
lcall
xlat
lret
dec
or
scas
shlb
pop
mov
sbb
inc
imul
cmp
filds
push
xchg
rorl
push
cmp
and
inc
popf
jns
es
jno
xchg
out
into
imulw
or
jae
mov
fcompl
pusha
and
sbb
and
mov
shll
adc
mov
shll
sbb
inc
xor
jo
addr16
add
lahf
aas
lds
out
aad
mov
lret
shrl
jecxz
jge
fldenv
jge
jbe
xchg
xor
enter
dec
or
xchg
jge
arpl
pop
sahf
ds
jne
pop
add
lds
sbb
sbb
out
jge
xchg
dec
mov
das
mov
daa
je
fsin
aam
jo
lret
cltd
or
enter
xchg
push
xorl
adc
mov
rcr
rcrl
and
pop
adc
insl
mov
add
lods
das
aad
in
dec
mov
xchg
lea
lcall
call
dec
push
pop
int
inc
mov
shlb
fdivl
icebp
ffreep
sbb
in
lock
fwait
cmp
adc
jnp
sbb
aad
or
sub
adc
mov
test
shrb
inc
aaa
jb
or
ret
call
out
insb
loopne
adc
mov
std
sub
jecxz
ljmp
ja
add
cmp
sub
dec
je
sub
aad
shrl
pop
xchg
test
scas
mov
jnp
test
mov
hlt
xchg
mov
out
lods
push
cmp
mov
push
ljmp
rclb
xor
popf
in
xor
jne
das
decl
iret
ror
pop
sbb
mov
mov
add
sub
call
imul
xor
aaa
das
cmp
mov
jecxz
mov
mov
stos
pop
and
out
fstpt
mul
fldl
sbb
mov
mov
loope
mov
scas
iret
mov
cld
cmp
mov
inc
loope
jle
inc
insl
pop
xor
hlt
cmpsb
dec
popf
sub
xor
mov
test
push
sub
andb
push
push
out
mov
mov
jo
adc
xlat
mov
sub
aad
push
sahf
add
test
jo
jbe
pop
int
pop
call
testb
pop
jmp
dec
xchg
movsb
icebp
xchg
sbb
pop
xchg
jns
insl
cmpsl
pushf
adc
in
sbb
ja
inc
mov
sub
popf
dec
push
pop
test
or
sub
dec
mov
mov
dec
outsb
cmpsb
mov
or
dec
iret
sahf
out
test
faddp
inc
popf
test
mov
and
dec
and
dec
test
and
pushf
jbe
ss
rorl
ss
pop
pop
repnz
cmp
push
push
das
leave
jge
stos
inc
dec
add
mov
outsb
in
mov
xchg
dec
pop
int
inc
rorb
shrb
xlat
fimuls
js
mov
and
jne
pop
lcall
lods
leave
es
mov
stos
push
hlt
cmpsl
push
ljmp
sar
or
jg
xchg
adc
es
xor
outsl
cmp
in
repz
or
ret
rcrl
add
outsb
dec
sub
loope
pusha
orl
pop
and
sub
adc
jns
inc
fistpll
cld
test
jecxz
les
jo
fstl
add
cmp
jbe
popa
sub
ss
jg
inc
sub
sub
out
adc
xor
sbb
cld
mov
jecxz
clc
pop
mov
pop
fcompl
and
ret
jae
lods
xchg
push
jg
loopne
jb
cmp
adc
xor
adc
pop
adc
daa
rol
cmpsl
enter
inc
adc
mov
inc
fistl
xchg
jmp
pop
jg
mov
jbe
add
clc
outsl
lret
adc
mov
insb
xor
inc
popf
and
mov
mov
scas
popa
std
jmp
xor
rcrl
inc
mov
mov
jg
cltd
xorb
jno
jmp
mov
push
nop
mov
stc
mov
clc
popf
ret
sbb
and
inc
dec
bound
inc
xchg
pop
mov
inc
loop
ficomps
xchg
cwtl
movl
cld
adc
cwtl
add
jne
xchg
out
pop
insb
mov
jmp
and
mov
movsl
xor
inc
jg
jo
stc
imul
sub
inc
and
psrlq
scas
adc
lods
xor
fstps
stos
je
dec
lock
cmp
add
xchg
outsl
mov
xchg
sub
inc
lock
inc
in
sub
cmc
leave
test
fs
mov
sarb
jbe
cltd
neg
daa
mov
adc
pop
jge
bound
mov
cld
imul
add
sub
dec
pop
icebp
mov
mov
fidivs
gs
jecxz
test
rcrl
fcomps
dec
push
jmp
arpl
das
or
cmp
or
push
popa
loopne
sar
filds
or
and
and
or
xor
push
out
test
aam
idivb
or
outsb
cmp
inc
sbb
ret
jge
xor
lods
adc
arpl
pop
movsl
in
int3
inc
jbe
and
or
test
push
out
cmpsb
or
add
jo
push
sbb
into
lock
fs
ljmp
sub
or
dec
push
mov
pop
fcomp
jae
mov
ret
mov
enter
jle
repnz
fadds
pop
mov
test
sbb
sbb
xlat
pop
mov
adc
and
sbb
lods
cmc
xor
dec
daa
cmc
jge
or
sbb
cmpsl
dec
fcmovnbe
aas
rcll
inc
ja,pn
repnz
outsl
jno
jae
xchg
std
popa
mov
pop
cmp
adc
loop
inc
lock
shr
loopne
or
push
in
ljmp
addr16
fwait
push
cmp
in
andl
arpl
aaa
xchg
and
mov
adc
sbb
pop
fldt
lds
stos
or
adc
mov
push
pop
push
lahf
enter
das
sbb
out
xchg
addr16
aas
inc
cmp
jne
out
lock
stc
std
or
jg,pn
pushl
jbe
std
sub
cwtl
into
idivl
sub
pop
cld
adc
sbb
fisubrl
imul
sbb
xchg
clc
lods
push
aad
push
hlt
jns
and
push
add
stos
out
shll
mov
dec
push
mov
fdivr
in
pushl
or
jae
dec
cmp
cmc
mov
mov
sbb
add
imulb
jl
sti
mov
dec
mov
mov
sbbl
or
mov
loop
cltd
popf
pop
xchg
sub
push
xlat
xbegin
std
mov
or
dec
xor
leave
les
mov
arpl
mov
mov
jns
fs
add
and
and
xchg
mov
inc
mov
popf
data16
in
mov
adc
daa
or
cmp
cmpsb
fcmove
cs
mov
add
xchg
incb
jae
jl
sbb
test
insl
std
cmpsb
lds
ss
loope
shlb
xor
push
cmpsl
enter
push
repnz
je
in
decb
mov
cmp
dec
cmp
cmp
das
jmp
es
pop
popf
enter
mov
out
arpl
pop
inc
std
mov
fldcw
xchg
adc
aam
cmp
mov
mov
push
hlt
jbe
push
faddp
cli
test
add
sub
xlat
jb
ret
mov
xor
rorb
jecxz
xchg
and
sbb
or
pop
out
fidivs
jmp
dec
sbb
sbbl
jg
mov
adcl
sbb
cltd
cmpsl
std
ljmp
inc
or
jb
in
mov
pop
fsubrl
gs
mov
das
fcoms
js
xlat
cltd
cmc
arpl
repz
outsb
popf
adc
or
nop
mov
and
mov
stos
aaa
add
int3
add
movsb
pop
mov
std
push
in
pop
adc
ljmp
iret
pop
mov
mov
jecxz
xor
and
mov
xlat
add
mov
shrb
insb
subl
aas
div
je
fadds
lcall
aam
mov
insb
daa
out
mov
pop
int
fs
in
into
and
or
pop
call
cmp
add
or
or
mov
mov
dec
push
dec
mov
imul
mov
rcl
sti
call
lods
inc
lods
jo
jle
sub
popa
imul
in
mov
mov
mov
mov
movsl
jns
xorl
lret
mov
cmpsl
mov
adc
aaa
and
push
sub
cmp
les
movsb
pushw
mov
sbb
push
or
iret
fadds
leave
sbbl
into
sbb
jle
cmp
sub
mov
cmp
dec
dec
xor
mov
xchg
lea
xor
loopne
or
mov
int3
adc
repnz
dec
or
sbb
in
pop
xchg
xchg
fwait
inc
call
cmp
aam
mov
sub
outsl
cli
push
insb
pop
aad
jo
jg
mov
push
les
daa
fadds
aad
fnstcw
adcl
cli
rorb
adc
ret
xchg
out
mov
fs
repz
nop
or
sbb
sti
mov
addr16
repz
dec
push
out
mov
dec
jnp
sbb
jo
cmp
out
jno
jo
sub
lcall
mov
xor
sarb
dec
mov
or
xchg
imul
dec
cmp
ficoms
arpl
and
out
out
xchg
lock
arpl
or
sbb
rcrl
push
sbb
xor
ja
xor
or
jno,pt
mov
push
adc
or
cmpsb
dec
jno
jns
je
cvttps2pi
xor
icebp
dec
mov
xchg
shll
xchg
enter
icebp
xchg
xor
cwtl
pop
imul
mov
int3
lret
cmc
adc
mov
xchg
push
es
rcrl
push
jl
dec
icebp
cmc
inc
add
sbb
add
push
fwait
in
shlb
test
movsl
mov
call
xor
inc
mov
dec
push
xchg
and
xor
mov
sub
sbb
mov
jge
icebp
jne
add
mov
push
jb
xor
ljmp
sub
xchg
repz
cmpsb
int
mov
fimuls
inc
loope
je
xchg
aam
add
mov
test
into
das
xchg
cltd
lock
shl
xor
push
lahf
fwait
sbb
lcall
push
das
xchg
outsl
movsb
mov
xchg
jmp
or
add
out
xchg
or
stos
into
sti
loop
out
pushf
sub
push
in
fisubl
jno
lcall
pop
adc
stos
push
in
dec
adcb
movsl
outsb
sub
pop
outsb
sub
filds
pop
mov
inc
notl
fiadds
std
push
outsb
cmp
mov
xor
sub
lcall
add
jecxz
sbb
xchg
jne
addr16
insb
sbb
or
jo
cwtl
sar
neg
push
jb
repz
sbb
xchg
cmp
pop
adc
ljmp
mov
mov
sub
jb
loope
inc
bound
mov
bound
lea
fcoms
aam
pop
mov
sti
insl
rclb
lock
cmp
mov
add
dec
mov
xor
cmc
push
pop
push
pop
xchg
in
ffree
mov
and
mov
pushf
mov
or
dec
fwait
inc
sahf
adc
cmc
or
pop
arpl
xor
and
ja
jle
fistl
test
and
daa
call
dec
sub
mov
lds
mov
std
leave
aad
nop
adc
cltd
movsb
jg
xchg
dec
push
jp
inc
js
adc
xor
loop
out
mov
mov
push
aad
lret
dec
lcall
sbb
fucomp
fs
inc
test
insl
xor
aas
xchg
cmp
jbe
aad
cmc
int3
add
pop
lcall
mov
lahf
cmp
and
add
test
repnz
cwtl
rcrb
scas
sbb
add
loopne
cmpsb
mov
cltd
or
shrl
push
movsl
xchg
scas
sub
add
pop
add
mov
scas
adc
jg
aam
aas
mov
sbb
pusha
push
mov
cmpsb
jp
or
mov
xchg
call
scas
xor
rcll
push
cmc
out
call
movsb
xchg
cmp
lea
mov
jp
dec
and
data16
pushf
notl
and
outsb
out
xchg
push
sbb
fistpll
iret
and
mov
xor
inc
xor
cmp
jae
xchg
arpl
adc
mov
pop
xchg
into
push
push
xor
out
lods
mov
sub
pop
ret
or
ret
mov
mov
inc
call
cmp
cmp
data16
popa
pop
jp
jnp
or
daa
and
dec
mulb
push
xor
sub
mov
add
xchg
out
out
repz
mov
fdiv
cs
pushf
mov
mov
jne
ljmp
add
fsubs
adc
mov
pop
sbb
or
mov
sub
sub
int3
outsl
push
test
xorb
jle
inc
jns
lds
jno
test
std
xlat
push
cld
lret
sub
mov
xchg
sbb
les
and
cmp
nop
enter
cmp
into
pop
and
cmp
inc
mov
and
sti
mov
dec
out
mov
jmp
addr16
mov
outsl
dec
movsb
lds
push
xor
mov
mov
pop
insl
mov
jae
push
jge
gs
push
mov
sti
cmp
loope
imul
add
push
test
lods
les
cltd
dec
scas
xor
pop
loop
cmc
ret
movsl
test
mov
rcll
filds
adc
loopne
sbbl
scas
cmp
cli
inc
fcmove
push
sbb
bound
mov
jg
jbe
jb
xchg
fwait
outsl
popf
gs
repnz
dec
rol
mul
sbb
out
dec
and
mov
mov
xchg
mov
in
mov
movsl
lret
lods
pop
jo
cmp
mov
xchg
jmp
inc
sub
or
sbb
inc
and
xor
xchg
and
loope
fimull
daa
pop
shrl
mov
mov
pop
sub
shll
fs
fs
cmp
xor
jp
xchg
inc
cs
sub
xor
aaa
push
add
add
xlat
fs
xlat
mov
dec
and
mov
shl
in
pop
loopne
mov
orl
jl
mov
iret
dec
cli
daa
cmp
rcl
aam
cs
dec
and
or
push
fld
imul
jg
mov
mov
sbb
imul
fdivr
into
xlat
pop
push
xchg
in
lahf
scas
jle
adc
xor
inc
flds
mov
rcrb
mov
push
hlt
sbb
ja
rolb
add
mov
mov
sbb
lret
jmp
xlat
filds
mov
or
jmp
inc
mov
jl
das
lcall
cmp
out
or
jns
mov
mov
dec
ja
rcll
arpl
cmp
sub
das
jg
dec
std
or
stos
xchg
or
dec
adc
add
jp
gs
xor
ja
sub
sti
out
dec
test
xchg
sbb
dec
dec
rorl
pop
dec
cmp
in
into
sub
mov
cmp
insb
orl
pop
adc
popa
push
dec
sub
pop
mov
repnz
or
ljmp
push
cwtl
jecxz
dec
mov
cli
mov
dec
and
adc
mov
ljmp
and
and
push
in
fs
shll
cmc
jge
lret
push
out
movsl
push
ret
adc
arpl
xchg
sub
xlat
xchg
cmp
push
jle
dec
inc
jmp
push
stos
stos
test
xchg
xor
arpl
sbb
sbb
roll
sub
push
pop
js
mov
sub
jg
pop
push
insl
divb
push
cmp
leave
in
push
jp
arpl
lods
mov
lcall
cmp
pop
mov
and
pop
inc
stos
movsl
push
imul
xchg
lods
andb
sbb
enter
pop
mov
xor
int
push
pushl
repnz
lcall
lcall
jge
xchg
popf
cltd
jl
mov
lock
xchg
into
mov
xor
mov
addr16
ja
dec
in
dec
and
xor
mov
out
aam
or
fadds
inc
stos
jmp
shl
rolb
jmp
icebp
adc
adc
stos
fsubl
cs
psubsb
mov
add
call
cld
jns
mov
xchg
push
les
cmpsb
xchg
mov
mov
pop
icebp
xchg
lods
inc
inc
sbb
je
xor
push
add
add
and
ret
cs
adc
nop
fimuls
test
add
cmp
into
sbb
bound
addr16
inc
out
in
lret
addr16
inc
fiaddl
push
je
push
mov
arpl
adcl
sbb
mov
inc
scas
and
fs
cmpsl
mov
call
and
cmpb
adc
push
ja
insl
dec
cltd
repz
hlt
mov
ss
dec
jp
xchg
push
bound
jno
mov
ljmp
es
mov
stos
push
inc
bound
std
dec
pop
sbb
lahf
inc
pop
mov
and
mov
mov
mov
adc
push
inc
add
push
mov
aaa
lock
enter
adc
test
push
lahf
test
pop
outsl
fmulp
ljmp
xlat
loopne
xchg
mov
jns
dec
sbb
scas
push
mov
mov
into
nop
or
int
or
sbbl
movsl
pop
imul
movsl
dec
hlt
add
sbb
outsl
mov
pusha
lds
fwait
rorl
jb
ds
push
push
pop
xchg
xchg
inc
leave
add
push
fistpl
xor
jns
test
pop
sub
xor
inc
inc
xor
stos
ret
jne
and
pop
insl
nop
mov
daa
inc
pop
jge
in
cwtl
mul
leave
sub
pop
rcrl
inc
dec
or
fcmove
ss
loop
test
dec
test
repz
pop
sub
pushf
adc
mov
mov
shr
mov
scas
frstor
xchg
leave
push
push
movsl
xchg
add
gs
add
xchg
push
lahf
popf
jbe
int
add
add
ret
and
jae
pop
push
pop
lahf
ret
fldt
call
xor
je
loope
sub
cli
das
or
test
mov
shrl
inc
xlat
out
sahf
lahf
dec
inc
dec
lahf
leave
mov
jb
mov
mov
test
stos
fadds
andl
mov
xchg
int
lea
fidivrl
shll
xor
jp
pop
jo
repz
lret
stos
popf
fsubs
test
xchg
test
icebp
jle
in
or
pop
inc
jmp
xchg
pop
daa
mov
pop
pop
or
stc
lds
call
call
dec
inc
xchg
cltd
xchg
mov
xor
enter
les
adc
sub
xchg
loop
outsb
dec
cmp
mov
lods
rcl
jnp
dec
mov
jp
fiaddl
adc
leave
addb
xor
xchg
cmpsb
ja
sbb
mov
dec
gs
into
iret
sahf
mov
loopne
mov
int
xlat
mov
lcall
pop
aad
xchg
call
cmc
mov
js
sbb
movsb
repnz
mov
or
out
fidivrl
sub
xchg
add
pop
addr16
fxch
fwait
pop
pop
xchg
sbb
jns
fwait
and
pop
mov
rolb
sbb
enter
add
push
mov
iret
xchg
pop
sub
mov
lock
pop
repnz
sub
lcall
jl
leave
cmp
push
adc
mov
insb
test
sbb
mov
cmp
bound
insl
scas
or
rcrl
adc
pop
out
sbb
addb
mov
and
push
mov
dec
and
mov
cmc
in
sahf
push
sub
and
or
pop
pop
ss
sub
popf
out
mov
xchg
dec
insb
lods
fmuls
enter
inc
mov
mov
andb
rcrb
repz
or
sbb
insb
imul
sub
orb
scas
js
sbb
fnstsw
jo
lea
xchg
dec
out
adc
xor
push
fld
mov
addr16
adc
mov
stc
sub
jge
sahf
pop
test
and
pop
data16
roll
pushf
gs
and
call
dec
inc
mov
xor
xor
shlb
sbb
arpl
stos
shrl
pop
je
shl
out
jmp
and
enter
pushf
dec
push
outsb
flds
out
xlat
inc
mov
outsl
scas
xlat
in
dec
adc
loop
pop
pop
arpl
inc
cltd
xchg
mov
add
mov
mov
bound
dec
leave
lock
les
mov
ret
adc
add
cmp
mov
repz
xchg
jns
popf
sub
test
call
mov
or
test
aas
mov
dec
aaa
cmp
xchg
sbb
sbb
cltd
cli
ret
movsb
xchg
mov
cmpsb
fcomps
mov
hlt
mov
sbbl
js
jle
shlb
mov
mov
or
mov
lds
rorl
inc
loope
inc
push
ffreep
mov
sbb
jge
les
sbb
adc
pop
cltd
mov
enter
int3
sbbl
and
lock
repz
mov
mov
xchg
jb
out
dec
repz
mov
mov
push
out
out
cld
in
lcall
xchg
pop
lock
and
aad
or
repz
push
add
pusha
inc
mov
pop
xor
sub
mov
pushf
jb
out
mov
testb
dec
shll
fs
in
pop
or
mov
jge
sub
cmp
push
xchg
fadds
mov
jmp
xchg
mov
mov
movsl
ljmp
popf
aam
mov
pushf
clc
push
jne
pop
jge
out
stos
lahf
sbb
fsin
adc
out
xchg
insb
pop
or
in
addl
push
xchg
jnp
inc
push
add
pop
sbb
or
mov
test
push
lds
cmpsb
movsl
push
pop
jle
jecxz
cli
adc
cmovno
and
fs
test
ret
stc
pop
sbbl
sbb
or
fdiv
mov
jp,pt
imul
cmovg
cmp
or
subl
mov
add
sbb
ficoml
jne
mov
fcoml
test
test
sbb
outsb
cmc
lret
outsb
pusha
xchg
movsb
pop
push
ja
adc
out
xchg
xchg
push
cmp
ret
xchg
jne
movsl
push
add
inc
jns
xlat
stos
insl
mov
add
and
insl
push
ljmp
insl
mov
or
ja
test
movsl
mov
push
jg
or
adc
jbe
push
jmp
mov
mov
lcall
daa
cld
cmp
fwait
jmp
mov
sahf
flds
sub
adc
mov
jle
psubsw
jmp
adcl
or
movsl
shll
add
mov
push
ret
xchg
shrl
fnsave
add
inc
and
les
icebp
insb
jbe
or
mov
sbb
and
shrl
xor
std
sbb
stos
mull
push
mov
inc
mov
cmp
int
mov
xchg
aaa
imul
cmp
movsb
test
xorl
xchg
cltd
xchg
xor
insl
add
xchg
and
inc
or
push
cmpb
xchg
add
sbb
data16
repnz
dec
fimull
add
push
jle
pop
pop
pop
xor
dec
dec
nop
mov
out
inc
arpl
fistps
sub
dec
cmp
sti
sub
imul
or
notl
insb
fcompl
pusha
fisubrl
pop
fldenv
mov
jmp
push
insl
mov
xor
xchg
mov
lea
mov
mov
fwait
cs
cmp
jle
cmp
push
or
into
add
cmp
jns
xchg
push
fwait
sbb
in
insl
sbb
pushl
mov
jbe
enter
sti
mov
cmp
jns
loopne
sahf
in
or
sbb
lea
and
pop
in
fmul
into
lcall
xor
xchg
test
xor
xchg
out
adc
aas
mov
test
mov
in
outsl
sub
int3
adc
test
stos
insl
xor
rclb
push
push
and
aas
outsb
pop
mov
cli
insb
lock
cmp
hlt
insl
sub
mov
jae
push
dec
pop
add
js
inc
enter
or
jg
into
jmp
or
xchg
push
rorl
jne
test
sbb
pop
jns
sbb
and
filds
dec
dec
jnp
lds
imull
ja
jp
cld
adc
sti
sub
push
daa
xchg
cmpsb
push
adc
adc
jecxz
xchg
and
loopne
adc
ret
jl
sub
inc
sub
subl
xor
inc
or
xor
popa
mov
fnsave
adc
out
push
outsl
jne
cmp
sub
scas
jbe
sbbb
and
shl
jl
jp
pop
mov
adc
push
lea
push
xchg
rolb
es
mov
dec
xor
mov
dec
cs
sub
cmpsl
pushf
xor
sbb
sti
bound
jne
and
shlb
es
mulb
jmp
push
cmp
sbb
les
pop
fildl
and
aad
xor
std
sahf
jbe
leave
mov
cld
xor
lea
or
jae
fldenv
cmp
aas
les
xchg
mov
xchg
aam
sub
xor
cld
xchg
sbb
mov
scas
gs
cmp
sub
jno
cmp
jbe
xor
cmp
xor
repz
int
arpl
inc
hlt
push
pop
mov
pop
sub
mov
rorl
add
adc
rolb
jge
xchg
sbb
mov
imul
inc
pop
dec
and
sbbb
pop
pop
int3
clc
aad
cmpsl
fnsave
fiaddl
jecxz
ficompl
sahf
mov
inc
es
sahf
pop
dec
mov
lods
ljmp
adc
pop
push
scas
mov
mov
xorb
cmp
pusha
push
mov
push
xchg
and
mov
lcall
das
xlat
cmc
push
mov
leave
sbb
scas
iret
lds
das
push
dec
rcrb
cli
outsl
pop
xchg
dec
xchg
cmc
fstpt
dec
lea
inc
cmp
movsb
xchg
or
pop
push
int
sbb
pop
push
cmc
cmpl
mov
or
sbb
jo
out
push
je
icebp
daa
xchg
out
cmp
pop
mov
cmp
xor
mov
dec
std
out
scas
adc
loopne
adc
or
stos
addr16
pop
paddusw
hlt
bound
rorb
sbb
fiaddl
mov
in
jmp
sbb
arpl
xchg
cmp
sti
movsbl
push
mov
inc
cmp
int
pop
xor
dec
jne
pop
lods
lods
xor
out
mov
push
stos
push
xchg
test
adc
inc
js
loopne
jae
aas
jle
daa
sbb
aaa
fstps
jl
scas
xor
push
orb
mov
push
adc
push
push
cmp
rcrb
outsb
stos
repz
add
inc
adc
jp
push
sub
mov
pop
or
mov
xchg
cli
xor
ja
sbb
or
mov
mov
insb
fisubrl
mov
inc
mov
int3
jle
jae
mov
jecxz
pop
sahf
inc
push
mov
ds
mov
jg
js
jo
fs
mov
mov
or
fdivrs
pop
sub
sbb
adc
aas
stos
inc
cmp
mov
in
fs
add
insl
pushf
cmc
mov
adc
push
rclb
adc
enter
cs
sbb
aaa
cmp
cmp
mov
jo
gs
shll
shrl
or
mov
out
adcb
mov
lods
pop
push
jae
dec
cs
inc
adc
xor
xchg
pop
mov
lahf
xlat
daa
lds
inc
out
cmp
xchg
test
push
leave
push
dec
in
stc
ret
push
sbb
push
dec
mov
cld
mov
pusha
lahf
dec
lahf
sbb
cmp
xchg
outsl
mov
fsubr
xchg
ljmp
push
imull
je
divl
pop
push
jge
xor
push
pop
fstpl
xchg
dec
and
sub
push
cs
add
pop
dec
enter
cwtl
jae
dec
lcall
push
imul
lea
shll
add
fnstenv
icebp
sub
movl
inc
adc
flds
sarl
outsb
out
sub
mov
sub
xor
sti
movsb
std
in
js
mov
and
bound
outsl
pop
bound
or
loop
stos
fidivs
mov
mov
sbb
enter
call
mov
add
ret
out
and
add
cmpsb
pop
or
data16
dec
cli
lret
cmc
and
cmp
sbb
jb
js
icebp
jmp
adc
aam
jg
pop
cmp
in
daa
ja
cli
insb
das
push
sub
pop
loop
mov
loopne
fiadds
adcb
jp
inc
push
repnz
call
dec
or
scas
jbe
lahf
jle
sarb
cmp
arpl
insl
std
mov
scas
mov
push
je
inc
mov
pusha
enter
rclb
pop
popf
mov
mov
xorl
jbe
lods
jl
push
inc
pop
jae
jecxz
ficomps
inc
and
and
push
push
insb
fsts
mov
dec
push
aad
mov
dec
jl
cmp
xchg
in
mov
push
jl
mov
add
mov
and
adc
shlb
add
fstp
nop
pop
lea
cmp
jo
mov
cmp
cli
call
popa
pop
pause
cmc
test
in
mov
lods
in
or
jnp
jp
push
pop
jmp
lret
push
fiaddl
out
xchg
js
scas
jle
fcmovbe
or
das
int3
xlat
decb
inc
cmp
fisubs
dec
push
ja
fldcw
mov
movsl
xchg
orl
outsb
fwait
popf
xlat
sbb
mov
aam
and
jecxz
and
pop
dec
or
out
data16
nop
stos
ja
arpl
daa
out
je
sbb
and
out
imul
push
lock
pop
rcrl
push
and
mov
mov
dec
push
cld
sub
ret
in
xor
stos
or
repnz
fnsave
fidivrs
add
mov
cld
sbb
inc
sub
dec
loope
loope
xchg
je
xor
dec
movsl
xchg
mov
xchg
mov
dec
xchg
int
fmull
fs
scas
sub
push
loopne
or
cmp
add
mov
fld1
stos
pop
push
arpl
inc
xchg
push
imul
jge
daa
cmpsl
shll
mov
jae
fs
shl
negb
fnstsw
jo
addr16
cmp
aaa
or
xor
mov
adc
lods
stos
push
sbb
fldln2
inc
into
scas
in
cmc
stos
xchg
ficoml
mov
mov
clc
pop
mov
test
cwtl
push
fcompl
sbb
fwait
pop
mov
and
xchg
adc
sub
mov
fcmovnbe
call
std
push
lods
orb
mov
shll
inc
jle
leave
test
xchg
leave
stos
xchg
add
cmp
pop
jbe
push
mov
mov
push
jg
sti
xchg
stc
je
push
icebp
stc
outsb
mov
add
inc
loop
sub
push
cmp
xchg
mov
push
popf
loopne
cmpsb
or
or
cmp
jmp
je
mov
int3
sarb
arpl
push
es
sub
mov
mov
sub
data16
test
adc
mov
push
scas
movsl
dec
mov
sahf
cmp
test
or
out
sub
mov
ror
or
xchg
lea
add
lret
test
cs
outsb
xor
shr
dec
mov
sub
jb
xor
jmp
mov
out
lods
inc
pop
xor
xchg
cmp
jmp
fcomps
xor
fldcw
jp
add
outsb
outsl
test
sti
mov
mov
cli
sbb
cmpsb
ja
clc
ret
jmp
sbb
mov
xchg
push
rcr
or
adc
arpl
test
push
lods
test
push
push
add
stc
sbb
push
sbb
inc
jg
sub
sub
mov
dec
mov
in
pop
popa
stc
jns
test
sub
pusha
lock
cld
cmp
shll
adc
pop
jl
add
push
jmp
pop
or
lods
mov
push
mov
or
and
pop
jmp
lcall
sub
popf
add
cmp
lahf
add
lock
jp
int
stos
lds
push
or
bound
mov
in
mov
mov
pop
xchg
sub
mov
jp
jp
lods
dec
xchg
clc
lds
out
jle
ja
int
movsb
push
push
or
pusha
int3
out
jb
dec
add
scas
or
push
sbb
add
out
xchg
xor
jp
cmp
xor
mov
dec
scas
pusha
inc
inc
cmc
out
lds
jne
push
fbld
adcb
sbb
or
loop
sbb
es
or
int
cld
dec
xchg
jo
or
fucomip
sbb
lods
and
sahf
and
add
jae
out
or
mov
and
jle
pop
jnp
pop
cmp
sti
dec
xor
xor
fs
shll
pop
and
jo
mov
insl
leave
loop
jnp
inc
popf
jl
adc
scas
fidivrs
dec
outsb
dec
add
popa
mov
insb
fs
mov
rcrl
or
enter
pop
mov
or
lcall
leave
xchg
test
in
lods
pop
iret
cmovle
loopne
and
rclb
and
dec
mov
arpl
fidivl
push
or
jg
bound
int
arpl
cmp
sbb
mov
pop
cmp
mov
mov
inc
test
mov
cltd
pop
lahf
fwait
dec
cmpl
adc
xchg
inc
movsb
sahf
hlt
adc
dec
les
and
push
dec
pop
jae
aad
or
mov
mov
dec
inc
lea
adc
movsb
repnz
fstps
fsubrl
loopne
or
lret
cwtl
imul
xchg
scas
iret
repz
or
pop
push
jnp
testb
xor
cmp
cwtl
mov
into
dec
inc
lock
test
mov
loopne
and
pushf
sbb
mov
scas
scas
xor
mov
adcl
mov
sbb
mov
sub
xchg
lcall
gs
mov
push
inc
orb
insb
mov
inc
pop
pop
cltd
lods
test
mov
stc
jp
rcrl
dec
cld
xchg
push
mov
mov
out
test
add
dec
data16
mov
aad
test
movl
push
mov
inc
test
jg
movsb
push
cmpsl
jl
xor
mov
sbb
mov
test
cwtl
push
sub
cmp
notl
or
cmp
daa
ljmp
in
cmp
mov
ret
push
mov
pop
mov
jg
ret
icebp
push
jo
cmpsl
add
enter
stos
push
or
fiaddl
sbb
jecxz
fcmovne
xchg
insb
mov
dec
aaa
add
arpl
sub
and
xchg
imul
jbe
pop
ss
xorl
in
inc
addr16
js
fists
mov
mov
and
cli
aad
push
mov
ret
mov
rcrl
stos
xor
sub
testl
jge
fldz
in
cmp
stos
jle
xor
mov
loop
and
xchg
lret
mov
repz
ds
adc
fistps
add
scas
int
in
pop
push
sub
mov
add
rorb
adc
or
inc
inc
and
sub
push
mov
sub
testb
sub
push
cmp
mov
mulb
push
sar
int
inc
sub
add
ret
jae
pop
aas
cmc
sbb
xrelease
lahf
mov
pop
push
push
movl
xchg
enter
out
adcl
and
testl
pop
testb
push
cmp
pop
lods
push
lahf
xchg
pop
dec
add
shrl
mov
inc
push
xchg
mov
stos
js
ljmp
adcl
xor
push
xchg
mov
popa
cmp
pop
std
pushf
outsl
or
push
inc
movsl
adc
sub
push
add
and
out
jp
lahf
adcb
inc
test
jno
push
loopne
mov
xor
xor
lock
pop
xchg
lods
jno
sub
sub
mov
or
mov
sti
outsb
inc
dec
movsb
je
jmp
adc
push
loop
mov
xchg
pop
lret
mov
xchg
or
sbb
mov
push
shll
test
dec
adc
pop
loopne
js
add
inc
les
mov
sbb
insb
mov
rcrl
jb
dec
lds
das
stc
aaa
out
jnp
mov
call
mov
lret
lcall
add
stos
lods
dec
lea
lcall
inc
lcall
and
jge
xchg
mov
xor
xor
sti
cmpb
cltd
mov
repnz
mov
xchg
dec
push
mov
mov
insl
dec
cmp
ficoms
out
out
sub
test
mov
popa
xor
adc
or
popa
adc
push
jb
jne
mov
push
in
pushf
in
jno
outsl
movsl
push
sbb
push
ret
fs
adc
enter
nop
mov
dec
ret
insb
push
sbb
jbe
mov
push
cmp
mull
sub
mov
mov
add
sbb
mov
jecxz
imull
aas
test
shr
call
iret
xchg
mov
pop
int
jl
xchg
das
jg
inc
jge
pop
pop
test
div
nop
scas
mov
fists
pop
loop
iret
pop
push
fistl
sti
dec
dec
ret
pop
mov
mov
mov
lods
sbb
jge
movsl
stos
mov
dec
les
pop
xchg
cwtl
sbb
mov
jae
loop
cmp
add
ljmp
jmp
jl
dec
xor
ret
sub
aad
or
stos
fmuls
lds
xorl
mov
lret
sti
lret
mov
fs
mov
dec
xchg
ror
fcoml
xor
test
adc
dec
cwtl
jae
jl
in
into
fwait
mov
inc
inc
dec
cwtl
push
fld
das
hlt
hlt
rcll
cmp
bound
sub
rcll
icebp
pop
sti
sub
fldcw
and
loope
mov
popf
ret
mov
out
in
pop
lea
lock
mov
insb
les
and
lock
aad
xchg
or
xor
sbb
sbb
inc
loope
adc
subl
fldt
lods
mulb
sbb
icebp
popf
sahf
addr16
mov
into
jbe
push
arpl
mov
ss
clc
cmc
push
xchg
push
sti
or
test
popa
mov
lods
gs
jb
mov
sti
xor
and
and
and
icebp
ja
in
ret
in
pop
mov
pop
pop
or
mov
es
pop
fldt
push
or
push
push
lret
and
sarl
pop
sub
jle
fsubrl
ds
push
sub
xor
mov
clc
cmc
in
sub
cmp
push
test
and
pusha
test
push
out
mov
das
pop
fwait
subb
pushf
jmp
inc
jle
cmp
stc
xchg
jno
mov
push
repz
stos
lods
pop
adc
std
mov
or
mov
sbb
mov
xor
scas
int
fwait
push
aam
xchg
movsl
xor
cli
rorb
xchg
push
dec
jg
mov
rclb
cmp
jl
pop
xchg
push
mov
lcall
nop
mov
jno
jbe
rolb
pop
ret
cli
cltd
outsb
int3
push
call
lock
cmp
and
xor
lds
insb
mov
sahf
scas
ret
adc
mov
ret
int3
vpsllq
push
rcll
les
inc
add
mov
movsb
xchg
jb
dec
push
cld
aam
adc
enter
adc
fstpl
mov
jmp
jnp
sub
cs
cmpsl
in
daa
mov
lcall
or
int3
adc
sub
push
rcrl
xsavec
xchg
xchg
jmp
cmpsb
adc
mov
cmp
pop
out
outsb
xor
test
andb
xchg
cmpsb
sbb
outsb
and
leave
push
push
pusha
or
cmpsb
test
mov
mov
xchg
hlt
mov
mov
divb
pop
mov
mov
cmp
adc
sub
jns
dec
test
movsb
jl,pn
sub
je
mov
push
or
imul
jns
jno
add
push
or
mov
mov
movsb
push
loope
test
das
cmp
insb
jmp
push
daa
rcrl
inc
bound
sahf
ficompl
dec
mov
cli
fstpl
jl
pop
add
imul
inc
fwait
pop
rol
cmp
sub
push
mov
lcall
test
or
fnstsw
mov
xor
sar
sahf
insl
jne
cmp
dec
movsb
xor
loopne
xlat
clc
jo
pop
adc
fstp
or
add
leave
mov
clc
or
sbb
mov
xchg
in
ret
lret
stos
xchg
imulb
test
dec
cli
outsb
sub
cltd
stos
cmpsl
push
daa
imul
pop
sbb
cmp
lock
inc
mov
inc
in
cld
jmp
loop
lahf
push
mov
xorb
leave
pop
and
dec
mov
sub
ds
cmp
das
fstp
cld
rorl
fisubrl
mov
mov
mov
or
sub
push
out
push
into
test
jecxz
xchg
pop
repz
cmp
lret
push
push
add
sub
outsl
iret
pop
sti
dec
int
ja
cmpsb
out
push
stos
aad
ret
mov
stos
lock
repnz
mov
xchg
movhps
out
pop
aad
mov
out
test
mov
and
or
or
sbb
dec
hlt
jne
cmpsb
mov
mov
mov
ljmp
add
mov
cmp
or
inc
and
mov
ja
or
mov
fildl
inc
cmp
bound
or
mov
testb
jns
repz
cltd
arpl
add
mov
mov
xor
jmp
mov
xor
lea
mov
not
hlt
test
sbb
icebp
sub
sahf
add
lds
jb
dec
shll
imul
scas
sub
jno
lret
sub
adc
push
movsl
adc
out
cmpsl
add
push
out
mov
adc
xchg
xlat
xorl
xorb
scas
mov
jnp
jno
mov
enter
pop
rcrb
jbe
xchg
inc
jns
jnp
jno
cli
inc
fs
movsb
int3
mov
rcll
push
movsl
jp
lcall
adc
mov
mov
cld
pop
jnp
test
lret
pop
jg
sbb
sbb
xlat
es
mov
or
cmp
push
add
push
inc
insb
js
mov
and
rcl
sbb
fnstsw
sub
pop
loopne
loopne
lods
mov
sub
pusha
pusha
in
shlb
lret
xchg
adc
add
in
repz
lea
add
bound
bswap
in
test
je
push
push
lods
mov
jno
fcmovnu
adc
dec
pop
mov
push
js
push
dec
pop
fsubrl
mov
mov
pop
jmp
add
pop
not
cmpb
ficoml
popf
mov
pop
cmp
mov
mov
dec
icebp
sbbl
scas
dec
xchg
xor
add
sub
jae
mov
push
sub
fisttpl
outsb
inc
jmp
mov
and
push
and
and
arpl
sub
cmp
lods
ja
jo
xor
pop
xchg
sub
std
or
arpl
out
outsl
outsl
mov
sbb
cli
inc
bound
repz
aas
jecxz
xchg
enter
mov
push
inc
mov
dec
pop
ja
xor
ficoml
sahf
sub
mov
sub
scas
cltd
into
inc
lds
pop
jbe
test
mov
xchg
xchg
mov
xor
xchg
cli
in
stos
mov
cmpsl
mov
das
sbb
mov
into
or
mov
test
popf
xor
sbb
cwtl
mov
hlt
mov
scas
or
jg
movl
aaa
push
arpl
sti
shll
hlt
dec
adc
xor
xor
mov
jb
fbstp
or
mov
mov
jp
imul
push
lock
mov
sbb
or
in
xchg
imul
sbb
stos
aad
stc
fisubl
or
cmp
mov
ljmp
ljmp
hlt
ret
inc
or
jmp
mov
lods
jg
xor
out
push
outsl
mov
jge
mov
jae
cmp
lret
push
test
mov
xchg
mov
sbb
icebp
pushf
sti
pop
cmp
lods
xchg
dec
add
frstor
cmp
lcall
out
iret
rcl
jo
lea
mov
xor
fdivr
rorb
lods
cltd
push
cmpsb
fs
jmp
shrb
and
xchg
push
xchg
test
lods
jle
and
jmp
out
add
inc
inc
adc
xlat
adc
push
in
xorl
push
pop
jmp
int
int
adc
outsb
loope
sbb
pop
frndint
daa
pop
leave
cmpsl
mov
aaa
into
mov
in
into
cmpsb
inc
push
das
xchg
loop
xor
lods
aam
mov
daa
sbb
fisttpll
mov
xchg
or
xor
sub
jae
mov
pusha
mov
cli
jg
arpl
mov
dec
push
xlat
adc
gs
mov
inc
or
mov
mov
mov
popa
adc
mov
mov
and
jl
fcoms
sbb
fstpt
add
fistpl
lods
sahf
into
cltd
push
jns
leave
dec
mov
ljmp
and
fisubs
sbb
enter
pop
sbb
out
test
cmp
pop
push
clc
sbb
das
mov
cs
inc
mov
lock
xor
enter
mov
xchg
cmp
cmp
mov
add
add
das
ret
push
jecxz
inc
insb
lret
ljmp
xor
or
jg
popf
cli
data16
pop
add
xchg
bound
outsl
xchg
pop
enter
mov
leave
mov
or
fildl
test
add
leave
push
pop
and
and
or
xor
xor
aaa
out
push
lret
push
notb
push
cmp
dec
out
ja
push
sahf
or
jle
pop
pop
rclb
sub
inc
insb
and
mov
stos
cmp
push
pop
mov
sbb
sub
xchg
sub
push
sub
push
push
jl
nop
pop
mov
xor
xchg
sbb
adc
mov
pop
movsb
cmp
jbe
mov
ljmp
cmp
rdpmc
sub
mov
push
mov
adc
lcall
enter
jl
in
stc
movsb
and
dec
fistps
pushf
and
pop
cli
ss
mov
push
sbb
xor
in
xor
cmp
pop
int
jecxz
idiv
mov
dec
test
xor
dec
cmp
cmp
jnp
and
sub
aam
popf
lea
outsl
bnd
xor
in
push
ljmp
xor
add
cmp
inc
jmp
lds
sahf
dec
push
movsb
push
inc
dec
aam
mov
mov
dec
add
push
js
pop
dec
add
mov
lret
push
xchg
or
and
cli
or
in
lock
jg
xchg
cmpsb
jmp
enter
iret
mov
incl
orl
push
test
adc
pop
icebp
jo
cmp
xchg
ljmp
add
cli
pop
ja
mov
push
cmp
test
dec
xchg
mov
mov
je
outsb
in
sarb
dec
mov
mov
je
lds
shrb
loop
movsl
push
mov
cmp
divb
rcr
xor
push
mov
jno
xchg
clc
mov
iret
pop
mov
mov
xor
jno
pop
xchg
jb
repnz
or
popl
sahf
dec
loope
movsl
rorb
and
cli
lods
lods
mov
or
and
mov
jg
std
scas
out
sub
sti
fs
faddl
push
mov
push
out
incl
xor
in
imul
or
cmp
mov
cltd
mov
and
das
stc
and
mov
sub
xchg
sub
in
int3
sbb
scas
xchg
aad
and
imul
pop
data16
test
xchg
push
sub
add
cmc
push
jns
cmp
push
pop
xor
mov
hlt
mov
arpl
mov
sbb
mov
push
or
lahf
push
outsl
nop
bound
jg
cltd
cmp
bnd
je
pop
gs
int
iret
das
sbb
push
xchg
mov
xor
out
daa
in
jae
pop
pop
dec
mov
insl
in
test
jecxz
stos
inc
and
push
cwtl
sub
mov
xor
jle
fcompl
push
mov
fwait
pop
sbb
ds
jae
fs
xchg
xor
mov
jns
mov
add
pop
cwtl
mov
or
sub
push
lret
loop
and
clc
jecxz
js
inc
movsl
sbb
push
movsb
stos
mov
fs
sbb
mov
sbb
mov
loope
cmpsb
scas
inc
mov
push
ljmp
ret
sbb
stc
xor
lock
mov
pop
es
sub
mov
icebp
lea
das
pusha
popa
inc
fmulp
mov
addr16
cmp
repz
daa
aam
xchg
jo
in
enter
subb
xor
call
shrl
mov
int3
and
xor
cmp
add
push
test
loopne
add
cs
lret
ss
call
dec
xchg
push
sarb
cmp
in
dec
or
lods
cltd
adc
ss
push
loope
rcr
pop
loopne
loopne
dec
jg
test
sub
rcrb
icebp
aam
sub
lret
cmp
outsl
adc
sbbl
fistpll
ds
xor
andb
dec
ljmp
fiaddl
clc
stc
cli
add
enter
xchg
decb
or
lret
push
in
pusha
addl
pop
stc
xor
gs
lock
mul
insb
jno
mov
mov
lods
adc
push
sbb
stc
shlb
push
push
ds
fwait
pop
sub
mov
dec
dec
aaa
aas
cli
fnstsw
xchg
loop
fwait
xor
jmp
adc
pusha
dec
inc
dec
es
cmpsb
in
jl
cld
in
jecxz
push
mov
mov
call
pushf
or
inc
jns
out
sbb
lods
ret
xor
fsub
push
daa
in
cmp
daa
or
fimuls
push
scas
add
icebp
inc
fwait
pushf
pop
or
add
adc
fs
push
mov
xlat
in
movsl
jns
shll
loope
dec
jne
hlt
out
add
psrlw
add
inc
js
mov
rclb
add
mov
xor
fdiv
adc
stos
xor
mull
and
insl
ds
xor
mov
std
rorl
adc
push
icebp
cmp
outsb
or
adc
rorl
leave
mov
add
fdivl
mov
in
cmp
add
xchg
jle
xor
mov
inc
add
sbb
insb
xchg
add
add
mov
jnp
xlat
cmp
jae
incb
and
sbb
js
dec
rol
pop
mov
in
push
push
mov
mov
xor
jns
hlt
mov
mov
xor
sub
push
fs
int
inc
jno
adc
int
pop
dec
shlb
mov
lcall
loop
ss
fucom
jno
dec
xor
je
jmp
insl
test
or
lods
and
iret
int3
xchg
xchg
rcrb
push
push
popf
pop
inc
lds
mov
loope
dec
loope
js
mov
sbb
jbe
sbb
jecxz
inc
adc
or
push
test
cmp
call
mov
adc
shl
cmp
enter
lret
fwait
jle
fistl
loopne
inc
inc
stc
adc
push
frstor
daa
ds
setno
dec
mov
gs
out
add
sub
add
shll
cmc
mov
icebp
js
dec
push
clc
aas
out
arpl
or
leave
push
les
out
cwtl
fildl
ror
cli
cmp
xlat
sub
or
or
call
cltd
pop
jmp
mov
popf
mov
or
and
dec
xchg
imul
xor
imul
mov
mov
push
xor
sbb
jae
shll
dec
nop
inc
mov
fcoml
cmp
mov
jg
sbb
mov
adcb
adc
add
cmp
mov
add
ret
idiv
sub
orb
mov
pop
in
pushf
iret
and
es
test
pop
rorb
mov
ds
sbb
xchg
int
mov
mov
clc
scas
cmp
pushf
xor
leave
jns
shlb
in
sub
std
mov
sbb
push
nop
fdivl
scas
in
movsb
or
fmuls
repz
jns
mov
pop
or
stos
pop
in
or
dec
inc
inc
sub
cmpsl
orl
pop
das
mov
sub
xlat
xchg
mov
cmp
push
add
pusha
sbb
xchg
sbb
dec
sbb
stc
mov
repnz
lods
aaa
pop
lods
rorb
cmp
xchg
shlb
mov
mov
call
inc
repz
nop
inc
xchg
and
test
cld
push
ficoms
push
outsl
scas
cltd
ror
jae
sub
out
wbinvd
or
jle
fdivs
in
data16
mov
pop
mov
call
jecxz
mov
push
dec
jl
mov
push
xchg
add
sbb
jecxz
mov
int3
or
xor
pop
mov
sbbl
mov
xchg
push
jnp
lea
lds
jns
pop
iret
xor
shrb
lock
repnz
and
cwtl
stos
cmp
es
scas
das
es
jo
jge
xchg
and
loop
aaa
inc
insl
rolb
dec
mull
add
inc
in
ret
test
add
outsb
inc
sub
inc
lods
mov
scas
aad
pop
fsubp
shrb
ret
add
sub
test
sub
pusha
rcrl
cmp
sub
xchg
or
mov
shll
pop
jle
mov
roll
movsl
jg
pop
dec
add
dec
test
in
into
insl
or
inc
adc
lds
popa
fidivrs
xor
mov
pop
mov
fs
cmp
lds
ja
xchg
mov
add
arpl
add
jl
test
xlat
cmp
inc
hlt
hlt
xchg
sub
inc
xchg
adc
pop
in
mulb
jns
scas
je
or
popf
jl
addr16
out
cmpsl
sub
mov
push
sbb
inc
mov
cmp
sub
ret
ja
cmp
pop
sub
mov
mov
cmp
xlat
or
sbb
mov
xor
ret
adc
inc
outsl
loope
inc
mov
sbb
or
push
fcoml
jl
add
jo
pop
out
cmpsb
and
xor
xor
dec
lds
daa
popa
in
jno
iret
int3
xchg
ja
in
test
mov
mov
loop
cwtl
cltd
push
outsb
xor
push
out
out
adc
out
pop
insb
std
outsl
test
lods
popa
pop
push
cmp
pop
mov
rcr
mov
ret
out
fnsave
dec
and
dec
mov
pop
cmp
sbb
add
add
dec
mov
xchg
lahf
xchg
enter
adc
in
and
sarb
jo
pop
in
inc
test
or
push
jl
les
dec
rclb
scas
mov
mov
push
sbb
cli
lds
js
sbb
push
sbb
push
fs
notl
rcrl
ja
or
lahf
es
mov
ret
push
outsl
mov
addb
pop
xchg
adc
adc
mov
inc
cmc
jbe
jb
repnz
adc
jb
je
jns
pop
movsl
xchg
and
repz
adc
sub
mov
or
jo
cwtl
fwait
mov
cmp
rol
sbb
cmp
jns
push
cmp
and
xor
dec
mov
sahf
mov
pop
lret
xchg
cltd
push
std
test
sbb
mov
adc
cld
adc
push
stos
jae
and
test
jmp
int3
push
pop
icebp
lcall
dec
jmp
mov
sbb
mov
jbe
icebp
fwait
or
or
pop
lods
push
aaa
xchg
pop
mov
xchg
fstps
cmp
outsb
sub
or
lods
ret
cmp
dec
addr16
and
push
pop
push
sub
jb
kmovd
push
out
stos
sbb
jle
xchg
test
inc
xchg
and
out
adc
into
inc
pop
imul
xor
fmull
mov
int3
pop
cmp
sbb
addr16
jg
andb
arpl
push
push
xchg
stc
push
stc
int
xchg
mov
inc
sbbl
loope
pop
ss
xchg
ja
inc
outsl
xorb
and
sbb
je
mov
xchg
hlt
and
push
push
inc
cmp
or
sbb
int
ror
push
mov
fidivs
sbb
scas
dec
or
cmpsb
xor
cmpsl
cmp
and
jne
pop
adc
imul
and
movsb
addr16
push
inc
testb
sbb
repz
notb
push
or
adcb
lds
pop
mov
mov
cmpsb
xchg
repz
mov
cltd
sbb
testl
test
ret
stos
xor
repnz
jnp
mov
rorb
cld
xchg
dec
lahf
adc
mov
adc
mov
sub
or
aam
inc
add
hlt
les
psubq
inc
arpl
add
sub
pop
movsl
xchg
imul
aas
lret
test
iret
lds
enter
sti
push
push
test
mov
inc
jae
in
sarl
imul
jns
mov
push
sub
or
and
gs
xlat
xor
mov
sarl
pop
lahf
cmp
out
ss
shlb
jge
mov
jg
jmp
and
cmpb
scas
sub
dec
int
mov
mov
loopne
std
insb
xchg
iret
scas
outsb
into
not
mov
pop
mov
mov
aad
add
pop
stos
into
inc
jo
test
pop
xchg
push
push
and
adc
fldcw
pop
rol
mov
jp
gs
adcb
enter
fstp
adc
imul
test
sahf
push
imul
pop
paddd
movsb
cmp
repz
pop
mov
gs
jo
inc
lahf
imul
in
scas
inc
pop
fs
fs
daa
inc
es
popf
inc
push
ljmp
mov
arpl
jbe
stc
insb
sbb
arpl
out
fnstsw
or
pop
fldcw
daa
out
nop
fsubrs
rcrb
dec
push
push
scas
in
movsb
lret
mov
jno
pop
sbb
sub
fwait
shlb
add
mov
insb
or
pushf
or
outsl
cmc
pop
enter
xor
or
cmp
imulb
or
mov
push
test
jno
cmp
sub
ljmp
cmp
int
mov
fldl
std
mov
test
scas
lret
arpl
je,pn
aad
mov
ja
mov
and
icebp
jae
mov
aaa
mov
lods
sbb
into
push
cs
pop
inc
mov
sub
jno
add
cmp
push
dec
mov
mov
les
ja
jns
or
and
sub
outsl
xchg
arpl
icebp
and
and
inc
ss
mov
xchg
and
and
add
inc
and
lea
inc
jecxz
mov
mov
pop
xor
inc
and
sbb
adcb
dec
xchg
mov
mov
lock
nop
je
jmp
inc
cld
cmp
test
mov
int
xlat
jle
push
jae
mov
xchg
mov
int
loopne
pop
lcall
call
daa
lods
adc
mov
lahf
out
push
and
into
fcmovne
jecxz
call
repnz
add
mov
pop
adc
mov
pop
lea
cmp
divl
sub
push
push
or
mov
incb
into
flds
ds
shlb
daa
stos
jb
aad
repnz
jae
mov
sbb
cmp
jno
fbstp
mov
jl
pop
jp
pop
icebp
fisttpll
jge
imul
mov
push
inc
nop
aad
frstpm(287
fsubs
les
push
cmp
cmp
mov
movsb
mov
push
stc
cld
cmp
jns
jns
out
cmpsb
cmp
ds
fldenv
or
and
mov
add
mov
push
mov
pop
sub
insl
inc
repnz
outsl
xlat
scas
push
dec
testl
sub
adc
jae
dec
add
inc
push
dec
cmp
out
dec
lret
sub
sub
push
mov
jg
lcall
adc
clc
mov
xor
jne
enter
out
ret
adc
mov
sbb
dec
sbb
mov
jle
pop
popa
sub
adcb
dec
add
iret
leave
xor
cltd
dec
rorb
jns
mov
mov
ret
fwait
icebp
jo
aam
push
pop
filds
shll
lahf
xchg
jg
js
lcall
push
cmp
jbe
cs
shll
inc
xor
adc
push
fld
mov
push
sti
push
pop
les
addr16
jae
sahf
cli
add
cmp
popa
and
xchg
cmp
cld
push
add
andb
cld
ds
imull
dec
mov
js
scas
les
mov
repz
cmpsb
jmp
mov
or
sti
rolb
mov
stc
or
mov
add
adc
or
in
cmp
adc
pop
js
mov
push
test
repnz
hlt
rcrb
pop
or
bound
jo
xchg
imulb
mov
jmp
xchg
inc
or
mov
cltd
and
in
cmp
ret
pop
add
cmpsb
mov
push
sub
push
mov
nop
scas
cwtl
movsl
rcrb
lds
inc
loop
push
dec
push
idivl
inc
add
cld
cli
pop
sbb
outsl
lods
jne
inc
xor
xor
fldl
aad
mov
and
xor
dec
lret
fs
or
dec
xlat
cmp
mov
call
mov
shll
shr
sub
dec
xor
movsb
cmp
out
in
xchg
pop
pushl
or
pop
jg
js
pop
and
daa
xchg
mov
ret
push
popf
pop
out
scas
inc
mov
add
addr16
nop
sbb
pop
incb
je
pop
mov
icebp
sub
mov
frstor
cmp
pop
adc
pop
push
gs
inc
lea
lea
repz
idivb
jo
movsb
aam
sub
outsl
sub
testb
mov
or
dec
shrl
lret
or
mov
mov
pop
cmp
ds
dec
enter
mov
stc
or
in
and
xor
ljmp
push
out
mulb
xor
xchg
pop
pop
bound
and
test
xchg
fldenv
xlat
scas
sub
or
jle
fisubs
xor
add
mov
les
and
cmpsl
aaa
mov
scas
xchg
bound
pop
test
fisubrs
in
adc
mov
inc
inc
xchg
and
pop
add
sub
adc
scas
push
stos
lods
cltd
mov
testb
jo
jns
fbstp
pop
adc
sub
out
aam
xchg
mov
mov
sbb
incb
pop
insb
jnp
fsubrl
icebp
lods
jae
bound
add
push
cmpsl
xor
dec
xorb
aaa
andb
sahf
sbb
outsl
xor
adc
or
je
lret
test
mov
hlt
test
or
clc
imul
hlt
test
nop
cmc
cmp
push
xor
sbb
lcall
or
xlat
outsl
test
adc
sub
in
lahf
jb
out
jle
mov
in
test
mul
inc
sub
xor
test
cld
mov
jmp
jo
jb
jnp
push
pop
pop
stos
mov
mov
lds
scas
movsb
push
lods
push
fcmovb
push
and
incl
pop
stos
stc
dec
int3
enter
loope
loope
scas
ds
fldl
test
push
cs
add
fcompl
mov
sub
xor
cmpsb
andb
pop
js
sti
cmp
sbb
sarb
int3
insl
stc
ret
cmp
ficomps
adc
dec
or
lret
inc
xchg
or
xorl
jg
lahf
pop
shlb
lods
lahf
mov
enter
les
imul
cld
sbb
daa
push
in
and
pop
mov
lods
imul
push
xor
mov
arpl
faddl
mov
aas
lock
mov
xchg
lods
xchg
sub
hlt
push
stos
movsb
scas
xchg
ret
insb
clc
push
push
pushf
out
sub
cmpsb
inc
rolb
sub
loopne
and
dec
movsl
xor
in
cmp
rdpmc
imul
jnp
push
dec
dec
xor
add
add
mov
push
mov
pop
mov
adc
call
in
adc
insl
stos
adc
test
ljmp
push
inc
inc
xchg
ss
jo
rcll
out
push
and
jae
stos
push
adc
dec
dec
loope
add
pop
daa
pushf
stc
test
cltd
or
cmpsb
mov
inc
or
lcall
and
fdivrl
pop
sub
add
or
insl
xor
mov
test
add
into
jl
mov
addr16
adc
pop
xchg
out
mov
imul
dec
in
push
push
pop
mov
push
cmc
adc
int
inc
cltd
sub
pop
shll
rcrb
or
xor
jbe
mov
cmp
icebp
fisubl
popf
out
or
call
or
mov
mov
cmp
adc
cltd
stos
pushf
mov
and
xlat
popf
dec
sahf
js
jl
dec
push
add
daa
jg
and
or
add
stos
mov
scas
and
or
pop
imul
jne
and
mov
mov
int3
in
mov
dec
mov
pop
popf
ljmp
jle
add
adc
xchg
and
xor
cltd
push
lds
in
aam
jbe
mov
not
sub
and
pop
daa
in
push
test
je
mov
mov
das
clc
inc
mov
push
adc
add
scas
int3
pop
jns
addr16
fnstenv
jecxz
rol
repnz
pop
adc
mov
popa
enter
mov
in
gs
mov
loop
mov
fcoms
mov
shrb
inc
jmp
lahf
rorl
cmpb
xchg
icebp
push
add
and
pop
dec
mov
imul
in
int3
jno
iret
leave
and
mov
mov
gs
push
push
cmpsl
cltd
push
ljmp
imul
fld
pop
loop
les
lods
adc
js
adc
cltd
cwtl
jg
and
pop
fsubrs
stc
xchg
adcb
inc
cmp
lea
in
out
pop
emms
or
inc
insb
arpl
cld
insb
int3
mov
and
add
xchg
pop
pop
aas
out
call
mov
in
roll
jg
xchg
mov
jbe
cmp
jge
sbb
lods
xchg
push
mov
sahf
jae,pn
pop
sahf
push
jl
ss
or
jno
add
xchg
pushf
test
adc
mov
ret
int
jp
lea
sbb
add
and
mov
push
add
cmp
sub
xchg
xchg
and
rcll
enter
fs
push
pusha
arpl
add
jb
xor
push
cltd
adc
cltd
loop
rcrb
inc
and
mulps
shll
or
lds
aad
cwtl
mov
out
xchg
mov
int
in
arpl
mov
mov
mov
es
es
lock
xchg
je
and
jmp
xchg
aad
ljmp
fsubrs
cmp
lea
mov
push
fsubrp
fwait
add
pop
pop
add
mov
push
aam
xor
mov
pop
and
dec
add
ret
sbb
sub
and
outsb
stc
fldcw
rcll
lock
dec
adc
sbb
stc
test
jae
ficompl
test
aaa
or
cmpsl
fdivl
outsl
jo
ja
cwtl
jmp
idivl
inc
inc
fs
sti
xchg
jne
std
sbb
push
pop
push
lods
mov
jo
jge
scas
xchg
popf
dec
imul
or
imul
loopne
nop
hlt
sub
fadd
xchg
xor
movl
jns
mov
push
scas
xchg
pop
mov
mov
ret
cli
scas
stos
std
cmc
xor
cltd
inc
mov
rcll
ficoms
shlb
mov
stos
notl
add
fadds
sbb
push
fidivrl
sub
dec
iret
ficoml
xchg
pop
scas
xchg
sbb
fildl
xor
pushf
cwtl
cmp
sub
lock
add
jbe
icebp
nop
xchg
jmp
lea
call
clc
pop
hlt
jb
cltd
push
testb
push
sbb
int
out
mov
inc
push
and
iret
loopne
adc
jns
pop
cwtl
call
in
jl
mov
fwait
mov
daa
fwait
dec
jb
lods
sbb
test
adc
xor
in
push
pop
lret
add
inc
cli
add
sar
loope
stc
bnd
dec
lods
lret
dec
iret
inc
outsb
cmp
jno
cmc
pushl
popa
lods
lret
mov
in
push
or
add
mov
adc
or
lods
cmp
insb
mov
into
repz
bswap
dec
dec
outsb
pop
js
add
ret
neg
mov
and
cwtl
sub
xchg
idiv
xor
mov
dec
rol
inc
pop
shl
mov
cmp
lods
jns
cli
movsw
and
sub
and
test
mov
adcl
das
roll
das
lret
xchg
adc
adc
mov
xor
inc
lods
and
cmp
aad
lods
ds
mov
int
mov
push
scas
jbe
fwait
jg
jne
cmc
lea
push
out
dec
push
dec
mov
loopne
loope
int
lods
ret
mov
mov
adc
or
inc
out
and
out
and
pop
outsb
mov
adc
outsl
das
mov
bound
xchg
cmp
inc
popf
sub
adc
repnz
sahf
xchg
lret
loopne
add
add
and
xor
dec
mov
inc
adc
ds
jns
or
ljmp
cmp
div
fwait
stc
push
xchg
xchg
xor
fiadds
inc
jbe
pop
ficoml
ret
test
test
adc
enter
fidivs
jns
xor
adc
loope
mov
lods
jp
movsl
fisubl
inc
and
ja
lcall
xor
int
inc
cmp
out
cmp
push
js
mov
mov
push
mov
mov
jg
sub
cmpl
push
sarb
push
scas
xlat
or
mov
shlb
outsl
jle
jmp
mov
push
push
jno
and
cmc
push
add
inc
push
pop
dec
cld
rcrb
test
arpl
imul
clc
ljmp
enter
in
outsb
shlb
adcl
or
dec
mov
cwtl
cltd
and
addr16
inc
xor
fcmovbe
fisubs
add
xchg
test
outsl
or
imul
adc
ja
andl
das
sbb
and
mov
in
imul
inc
xchg
insb
int
push
test
fs
jns
xor
stos
shll
mov
xor
aam
test
out
aaa
push
sub
or
in
out
lret
jbe
icebp
les
leave
push
sub
cmp
xchg
aam
inc
js
les
sbb
sbb
jmp
fimuls
dec
jb
pop
lds
cmp
adc
push
das
mov
cmp
ret
and
int
outsl
jl
xchg
es
pop
dec
pusha
and
aam
bound
dec
jge
xchg
xchg
sbb
pop
dec
in
js
dec
rcrl
lea
out
scas
cld
loopne
nop
inc
lahf
inc
gs
popf
adc
scas
popf
push
sub
mov
movsb
adc
out
mov
push
dec
mov
sarl
aam
push
mov
testl
or
loopne
adc
xchg
dec
push
push
jae
xor
sbb
imul
inc
jns
mov
or
sbb
orl
mov
in
aaa
loop
mov
rorl
and
fdivl
adc
enter
fnsave
arpl
sub
push
aad
sub
out
and
add
in
inc
add
add
inc
mov
or
add
cmp
jbe
dec
ss
jg
jae
and
cli
push
mov
adc
push
jno
cs
and
stos
mov
outsl
jl
and
inc
xlat
and
ds
out
push
xor
stos
jle
fldcw
lret
imull
call
jnp
jge
scas
fldenv
add
pop
fimull
lcall
mov
xchg
or
imul
stc
sub
inc
xchg
hlt
lret
mov
adc
cld
pop
cmp
out
fucomi
imul
xor
inc
mov
xor
cwtl
sbb
inc
inc
aam
jno
ret
pushf
add
dec
out
mov
enter
pop
or
mov
mov
push
mov
xchg
sub
inc
xchg
fidivrl
or
iret
mov
test
in
sbb
sub
popf
hlt
adc
or
lret
outsl
xchg
cmp
cmp
add
shr
jecxz
push
xchg
jecxz
add
ss
aaa
bound
inc
lods
aad
fwait
push
addl
loop
loop
xchg
into
mov
mov
sbb
insb
cmp
scas
inc
cmp
cltd
adc
mov
mov
adc
into
ja
adc
test
decl
cmpsl
fwait
adc
fldcw
pusha
push
adc
pop
jmp
in
pop
out
push
cmp
mov
xchg
loopne
sub
icebp
pop
add
mov
out
cmp
loopne
jmp
jge
outsl
pushf
jae
sub
enter
cmp
sarb
js
popf
adc
mull
movsb
and
movsb
fwait
adc
inc
adc
ja
push
pop
mov
lods
sub
aam
jg
cmp
loop
lret
ficoml
in
add
out
les
cs
rclb
inc
pop
call
fxch
ret
outsb
sti
in
mov
aaa
sbbb
test
jle
imul
mov
push
mov
dec
dec
jp
fsubp
repnz
or
negl
mov
cmp
idiv
decb
xchg
cld
shrb
lahf
arpl
pop
lock
in
in
ja
add
gs
jno
jge
orb
push
push
mov
cmp
push
ja
je
hlt
inc
ret
dec
inc
iret
ss
pop
cmpsb
ret
inc
bound
loope
fmuls
xlat
stos
xchg
push
idivb
xchg
fisttps
sarb
arpl
mov
shl
sbb
hlt
mov
ficoml
adc
jnp
dec
fdivrp
ljmp
mov
add
pop
inc
scas
rcrl
popa
add
ret
movsb
mov
inc
outsb
and
scas
lods
loopne
lret
sbb
jne
ficoms
or
mov
ficoms
inc
mov
sti
lea
pop
push
sti
test
or
addr16
xchg
mov
ret
and
subb
xor
xchg
mov
test
daa
mov
sub
xchg
roll
adcl
add
test
loop
or
inc
cmc
in
test
aam
dec
pop
fwait
inc
rcr
in
stos
sub
ds
adc
sbb
inc
shrl
mov
add
inc
int3
jb
mov
imul
cmp
cmpsl
das
aad
scas
xchg
icebp
push
cmp
cmpb
cmp
sbb
pop
dec
jecxz
imul
cltd
mov
lahf
fnstsw
xor
and
cs
push
adc
mov
sbbl
lods
push
testl
cmp
adc
jp
cmp
push
lea
outsl
subl
cltd
add
fstpt
popa
daa
and
jnp
sub
dec
pop
push
notb
sub
out
push
or
cs
es
hlt
pop
rol
movsl
inc
rcrl
ss
sbb
ds
enter
mov
iret
loope
add
mov
push
xchg
ds
mov
or
ds
inc
cwtl
loope
xorl
aaa
push
xchg
push
push
fsubrl
fldcw
test
or
adc
mov
jge
jbe
sbbl
add
push
or
je
rol
mov
aaa
in
cmpsb
les
mov
xor
sarl
clc
xor
cltd
out
mov
jbe
mov
test
or
cwtl
jnp
cmp
scas
and
sub
and
cmp
int3
das
test
adc
imul
loopne
lea
call
jp
mov
cmpsb
mov
leave
push
divb
push
stos
in
pop
jns
xchg
outsw
xchg
mov
jmp
out
rcrl
jmp
mov
sub
adc
adc
inc
mov
sti
imul
push
sahf
inc
mov
push
or
push
mov
fimuls
sahf
or
incl
inc
loop
lret
nop
sub
jb
push
jnp
out
shll
pop
push
out
test
dec
mov
mov
fisubl
pushf
dec
scas
mov
loopne
testl
or
mov
lock
dec
imul
aam
sub
int
add
push
inc
cmpl
jno
aad
dec
mov
cmp
cmp
cmp
jno
scas
mov
sti
mov
test
ret
cmpsb
inc
int3
and
pushf
sbb
dec
push
incb
dec
rclb
in
xor
out
jecxz
and
iret
lahf
dec
jne
push
xchg
das
jg
xchg
mov
inc
sbb
push
popa
inc
or
ja
outsb
jmp
loopne
fdivs
jmp
orl
add
fidivl
cltd
cmp
jp
or
mov
adc
jo
lcall
lods
mov
jle
adc
mov
das
pop
leave
sbb
jmp
add
cmpsl
stos
je
sbb
mov
test
sub
jno
scas
mov
inc
fldt
pop
push
push
nop
fs
mov
fimuls
mov
cltd
orb
rcl
inc
mov
clc
add
popf
sub
ret
pushf
lods
mov
bound
test
int
inc
mov
and
jecxz
add
fbld
xor
outsl
lods
push
xchg
loopne
leave
loope
lds
cs
sub
mov
loopne
mov
scas
je
into
cmp
aad
xor
ret
mov
or
in
popa
push
lods
xchg
push
stos
mov
lock
or
hlt
sarb
xchg
cs
jb
pop
cmp
pop
mov
sbb
out
xchg
enter
cmp
mov
fsubl
aad
shlb
jg
mov
add
iret
or
mov
sub
cld
cld
pop
icebp
nop
imul
lret
int3
xor
mov
sub
and
std
sbb
out
add
ficompl
iret
js
rorb
jecxz
push
pop
xchg
sarl
lea
dec
lret
push
fisttpl
push
inc
cmpsb
adc
pop
mov
xorl
rcll
aam
shll
mov
lods
dec
iret
push
fs
cld
push
call
jle
cmp
cmp
push
inc
mov
int3
push
jbe
mov
in
sub
add
and
jne
xchg
out
rcrl
movb
dec
test
pop
sub
lret
push
out
ljmp
std
adc
cwtl
xor
test
jae
data16
adc
or
sub
add
push
add
xchg
fbld
stc
lcall
adc
aad
mov
cmp
stos
sarl
jg
xorb
sahf
adc
mov
inc
pop
xchg
or
dec
cmp
daa
ja
shll
pop
dec
out
pusha
add
je
