add
sub
sbb
cmp
dec
sbb
fstps
inc
ss
jbe
xorb
jb
cld
testl
mov
in
lods
sub
ljmp
ret
loop
addl
idivb
cmp
shll
mov
lahf
or
add
ret
add
les
add
xchg
in
or
mov
es
inc
xchg
lret
or
les
test
addr16
xor
fcmovne
mov
out
loope
sub
popa
push
sub
xor
ljmp
sbb
addr16
push
and
mov
mov
rcrb
repnz
pop
xchg
mov
pop
invd
dec
sub
jp
xchg
dec
xchg
pop
cmp
mov
aas
pushf
inc
or
clc
mov
das
mov
dec
jnp
pusha
and
sub
jb
int3
in
xor
adc
icebp
fstl
xor
cld
test
mov
out
inc
cmpsb
lcall
bound
xor
insb
arpl
out
dec
and
jo
jns
bound
mov
scas
cmp
inc
or
or
sub
pop
jbe
push
xor
cmp
adc
subb
xor
call
stos
int
in
test
pop
mov
cmp
add
lock
push
iret
or
xchg
in
scas
add
int
or
push
mov
xchg
or
cmp
xor
sbb
adc
cmp
clc
mov
sub
mov
jecxz
xchg
or
movl
enter
fwait
sub
mov
mov
rcl
data16
or
test
insb
ds
ja
mov
mov
push
ja
imul
mov
int3
outsb
lcall
les
xor
xchg
pop
cmpsb
inc
ror
sub
sbb
js
jbe
insl
pop
sahf
jnp
stc
sub
sub
out
inc
mov
jb
sbb
dec
in
add
cmp
inc
cmp
mov
push
nop
popf
stos
pop
and
imul
adc
pop
lret
je
mov
jp
cmc
loope
out
jmp
mov
mov
jne
inc
repnz
mov
pop
lea
mov
test
and
inc
push
mov
push
mov
or
test
icebp
push
push
stc
faddl
out
jecxz
std
outsb
bound
mov
pop
cmp
mov
xchg
or
leave
mov
mov
adc
push
test
fwait
mov
xchg
xor
mov
scas
mov
sarl
idivb
pop
loop
jo
or
xchg
jle
int3
imul
dec
cmpsl
push
cs
dec
fldenv
mov
jae
and
adc
jge
sbb
arpl
dec
scas
enter
cs
imul
add
repnz
mov
dec
sbb
shll
addr16
inc
movsb
mov
jb
cmp
mov
fistpl
mov
lods
pushf
jo
push
ss
dec
xor
inc
inc
inc
nop
xor
fldenv
add
mov
cli
outsb
jns
outsl
mov
mov
adc
daa
push
imul
arpl
shrb
mov
jge
mov
pusha
inc
mov
push
sub
insb
mov
inc
mov
pop
fwait
mov
rcrb
pop
pop
imul
imul
and
push
pop
arpl
ret
adc
fcmovnb
lock
movsl
jns
and
ss
test
or
outsl
pushf
mov
cwtl
repnz
mov
test
push
into
jl
pusha
shlb
xor
loop
jl
mov
insb
jns
data16
sub
pushf
in
shlb
cmc
dec
adc
aas
or
fdivrl
cmp
nop
inc
xchg
xor
movsl
jno
mov
push
jnp
mov
or
sbb
outsb
fldenv
add
lahf
imul
out
clc
fldz
and
in
mov
out
lods
testb
mov
clc
push
mov
pop
fnstsw
stos
lret
sub
mov
push
loop
icebp
mov
mov
loop
and
xor
push
and
enter
icebp
dec
mov
or
cmp
rcrl
adc
inc
adc
pop
xchg
add
or
push
int3
pop
sbb
xchg
inc
inc
push
ja
push
jno
mov
les
cs
test
rcr
in
mov
pop
xchg
pushf
mov
je
xchg
mov
lea
dec
mov
arpl
fcmovbe
orb
or
popa
dec
sbb
out
sub
mov
testb
stos
xorb
mov
mov
xor
sarb
and
lret
sbb
insb
add
xchg
stos
mov
mov
pop
xchg
fsubrs
xchg
push
cli
jge
mov
jns
mov
inc
ror
pushf
add
mov
ja
loop
ds
je
test
add
cmp
sub
into
cmp
or
rorb
test
pop
imul
nop
mov
data16
movsl
push
es
gs
xorl
sub
inc
mov
test
pop
aad
pop
bound
jl
cmp
outsl
or
jecxz
test
orb
xlat
mov
fldt
push
arpl
aam
loope
rcll
inc
xchg
xor
adcb
inc
sbb
pushf
jg
pop
mov
fcmovu
scas
dec
bound
loopne
fildl
dec
jb
in
popa
enter
fcomps
lahf
cmp
outsb
fistps
dec
dec
lret
dec
negl
dec
dec
cmp
mov
lret
adc
mov
call
sbb
xor
mov
mov
xor
ljmp
and
cmpb
pop
push
out
pop
test
push
outsb
sub
mov
mov
mov
test
lcall
stos
xchg
or
xor
jns
fwait
push
outsb
push
mov
pop
fwait
pop
jecxz
mov
cli
leave
sub
data16
cmp
sbb
sub
stos
bound
adc
fs
push
mov
sub
ret
cmp
mov
scas
add
push
scas
mov
into
icebp
mov
movsb
testl
daa
mov
lret
xlat
xor
jns
push
out
jnp
shlb
push
repnz
leave
sbbl
subb
push
sbb
xchg
cwtl
roll
pop
xorl
pop
repnz
repnz
cmp
dec
sub
nop
addl
js
jns
scas
or
sub
movsl
repnz
mov
mov
rcrl
cmpl
pop
inc
clc
cltd
pop
jl
fsub
xchg
sbb
cwtl
cmpsb
imul
xor
cmp
testl
mov
loop
sbb
inc
add
mov
add
mov
xor
ret
add
idiv
or
fwait
mov
dec
lcall
adc
fnstenv
sub
and
inc
xor
out
stc
push
mov
adc
xchg
fdivl
jmp
stos
and
dec
ljmp
pop
out
mov
dec
imul
js
xor
adc
insl
and
xor
out
out
or
out
or
cmpsb
flds
jp
dec
loope
mov
sahf
dec
sub
pop
in
js
and
or
gs
out
cwtl
ss
pop
or
pop
inc
sub
or
xchg
in
mov
and
mov
leave
clc
int3
fimull
sub
out
dec
jle
push
insl
popf
and
stos
pop
lahf
pushf
dec
pop
adc
pushf
sub
fwait
mov
sbb
popa
or
jbe
mov
das
cmp
cltd
sbb
aam
pop
sub
pop
adc
movsl
movsb
pop
adc
push
aad
lret
sarl
sub
mov
repz
je
ret
cmp
ljmp
cld
das
push
std
add
and
aas
popf
sbb
sbb
rorb
sub
repz
sbb
lock
mov
xor
push
mov
daa
or
sbb
xchg
xchg
fmuls
or
pop
mov
sbb
pop
sbb
mov
cmp
cltd
sub
mov
pop
mov
mov
enter
mov
mov
mov
lret
js
mov
sub
mov
ret
mov
inc
sbb
std
mov
test
leave
dec
pop
loopne
cmp
pop
dec
lea
xlat
jl
inc
and
imul
pushf
dec
inc
adc
push
xchg
xchg
cmp
aam
and
in
jl
pop
adc
cmp
push
enter
pop
jb
loope
fisttpll
lods
mov
lods
addr16
mov
insb
xchg
fs
mov
jne
or
rorw
hlt
stos
or
call
jno
fdivrs
push
jl
or
loope
std
or
icebp
dec
adc
jmp
mov
jnp
xchg
icebp
fwait
cmc
es
icebp
xlat
adc
and
icebp
adc
scas
push
lret
shll
enter
jg
push
cld
cmpsl
fcoml
in
out
xchg
test
lcall
jno
test
inc
jnp
lret
push
call
jne
jae
cwtl
fbld
sub
fwait
xchg
dec
adcl
xchg
icebp
add
sbb
cmp
nop
inc
xor
cmpsl
lods
cs
ja
leave
lret
inc
fcomps
pop
and
movb
shrb
add
add
adc
xor
pop
add
std
stc
imul
push
and
js
push
lds
adc
mov
sti
into
out
dec
and
push
loope
cs
cmp
add
mov
mov
and
jo
add
pushl
push
push
cmc
repz
xchg
stos
sub
pop
xchg
cmp
pop
jae
movl
popf
jmp
loop
adc
rcll
notl
mov
in
mov
lods
sub
sub
add
mov
inc
xlat
jnp
hlt
mov
dec
int
or
sbb
and
push
test
inc
jp
adc
es
andb
or
lcall
movsb
push
rorb
adc
sahf
push
xchg
add
push
pop
inc
fistpl
cmp
cmpsl
xlat
xchg
aas
jg
push
scas
inc
rorb
add
and
hlt
loop
nop
hlt
fidivrl
idivb
dec
fidivl
int
xchg
or
pop
divb
aad
lods
mov
cmpl
scas
jge
or
jecxz
cmp
sub
xchg
call
mov
jmp
push
mov
inc
pop
data16
jge
xchg
movsl
fxch
jl
scas
testl
sbb
aas
in
nop
xor
jns
cmp
jae
pop
or
jno
adc
jge
mov
fcoms
adc
in
or
jmp
push
cmp
pop
mov
cmp
incb
mov
pop
pushf
adc
dec
std
cmp
push
cmpsb
mov
add
out
pop
ror
sub
mov
pop
xchg
or
imul
lea
fcmovnu
fdivs
sbb
out
cmp
xor
and
dec
cmp
fdiv
mov
test
popa
jl
out
insl
test
mov
cmp
mov
scas
fcoml
icebp
xchg
fcoms
stos
sbb
xchg
shl
testl
add
popf
int3
ret
and
jnp
out
jno
push
xchg
or
mov
and
test
pop
add
cmpsb
mov
lret
testl
inc
inc
repnz
ficomps
scas
leave
lahf
lds
cmp
lock
stc
mov
imul
inc
ret
mov
sbb
and
movsb
xorl
out
jne
dec
mov
xor
mov
sbb
lds
sti
into
push
lods
ficompl
into
inc
push
popw
push
jnp
rorl
sub
mov
adc
cmpsl
shrb
mov
lock
mov
cmp
mov
mov
and
cli
in
aas
inc
cmpb
xor
mov
xor
cli
mov
add
mov
inc
sub
mov
pop
mov
pusha
dec
imul
dec
add
out
les
popf
mov
jmp
mov
jge
fwait
ljmp
cmp
nop
adc
int3
aad
pop
popf
sarl
movsb
fbld
jle
mov
inc
mov
shrb
test
xlat
xchg
adc
cltd
mov
repnz
out
dec
fidivrl
mov
pop
into
add
in
dec
jb
mov
test
cli
mov
sahf
lret
ret
rorb
mov
jns
subl
rcrl
ss
das
sub
fildl
jl
lahf
clc
mov
mov
test
clc
inc
lods
lock
lea
or
xchg
das
les
in
pop
xor
call
jl
adc
lahf
fadd
rorb
lretw
push
lret
ror
in
push
jp
adc
scas
push
jmp
repz
mov
sahf
gs
cmp
xchg
scas
scas
lock
movsb
test
popa
test
movsl
jl
rcr
mov
dec
lods
pop
std
cmp
jae
xchg
iret
and
adc
shrl
xchg
test
push
sub
xor
xorl
mov
inc
insl
lret
in
push
sbb
jl
inc
outsl
ret
sahf
mov
inc
daa
mov
daa
bound
adc
mov
sbb
es
mov
xchg
jl
cltd
dec
insb
testb
pusha
in
push
jae
cmp
mov
dec
cmp
xchg
test
sbb
cmp
ja
sti
sti
dec
mov
in
inc
stos
sbb
lret
jo
jp
dec
fisttps
nop
cmpsl
movsb
scas
xor
rorb
ss
dec
das
xchg
int
xor
pop
in
jmp
faddl
xchg
int3
pop
jg
loopne
push
stos
sub
stos
out
mov
dec
xor
pop
cmpsb
add
out
mov
ja
add
in
or
cltd
cmp
and
mov
mov
ja
addl
clc
rcl
scas
lret
ja
sub
es
lret
clc
add
lret
pop
daa
adc
jp
test
inc
xchg
and
stc
mov
xlat
addl
kmovb
inc
jg
jge
mov
sbb
rol
mov
push
imul
xor
mov
cld
into
sbbb
push
pop
jecxz
jbe
int
inc
in
jbe
mov
xor
mov
sub
dec
leave
cmp
mov
or
inc
add
aaa
lods
pop
adc
add
stos
xor
repz
add
fwait
xchg
inc
rorl
adc
gs
or
pop
push
pop
lahf
jge
push
sbb
in
iret
push
cmp
test
out
add
call
lahf
hlt
pushf
pop
cwtl
nop
imul
pop
jle
subl
jp
stos
inc
sub
inc
jo
lea
bound
sbb
xchg
addr16
nop
fwait
test
sbb
data16
sub
insb
lret
pmaxub
jne
pop
push
add
mov
jne
nop
jmp
imul
pop
xor
cmpsb
insb
jo
lods
movsb
bnd
xor
pop
aas
sahf
xor
push
push
sub
cli
xor
push
xor
pop
inc
sbb
in
or
mov
pushfw
rcrb
movsb
fidivrl
mov
push
or
xchg
in
outsb
cli
hlt
mov
fnstsw
int3
xchg
addr16
shl
mov
fldenv
dec
jp
es
insl
call
push
in
jecxz
popa
or
pop
mov
arpl
xor
adc
inc
dec
test
movsb
movsl
mov
js
jns
push
xchg
and
sbb
in
inc
in
jmp
popa
cwtl
push
or
push
aaa
cmp
add
inc
mov
inc
fistpl
fidivrs
pushf
cmpsb
xor
dec
stos
mov
mov
call
and
je
mov
stos
push
mov
lahf
out
pop
ret
movsb
ljmp
lahf
or
and
inc
sti
and
js
jl
movb
lods
push
hlt
jg
jne
and
into
gs
orb
stos
push
stos
stos
xchg
imul
int
cmp
jecxz
out
mov
popa
shrb
mov
aam
in
jg
mov
int3
js
mov
or
ds
xor
push
outsb
cmp
daa
out
inc
repnz
jns
cmc
scas
add
mov
incb
scas
and
out
mov
fdivrs
arpl
adc
adc
sbb
mov
mov
popf
fadds
mov
or
sbbb
add
or
xor
or
gs
in
push
sbb
mov
add
rolb
jns
movsb
ficoms
loop
jbe
push
es
cld
cmp
gs
pop
pop
dec
divl
jo
mull
push
in
mov
in
jae
je
xor
outsl
aas
dec
es
aas
xor
data16
into
xor
xorb
adc
mov
or
pop
lds
and
in
cltd
xor
inc
cmp
insb
lret
mov
mov
mov
mov
pop
jbe
nop
mov
inc
jge
mov
sahf
pop
cld
pop
repz
pop
data16
out
gs
cmp
clc
adcb
clc
dec
mov
push
ljmp
lret
sahf
ds
shlb
push
lret
xchg
cs
sub
shlb
mov
sub
mov
movsl
add
mov
and
adc
imul
and
dec
mov
es
pop
inc
cmp
xlat
lods
xchg
push
or
adc
add
leave
adc
cs
mov
mov
gs
mov
adc
jle
int
mov
hlt
jge
inc
push
das
je
pop
adc
xor
les
insl
loopne
jmp
mov
xchg
fcmovbe
push
pusha
rorl
push
icebp
inc
and
dec
mov
imul
and
cmp
or
shll
movsl
cwtl
xor
mov
sub
xchg
push
jecxz
add
shlb
cmp
mov
push
rclb
movsb
or
fsubr
nop
inc
add
lret
mov
fwait
jne
mov
dec
adc
dec
pop
cmp
stc
stc
and
fisttpll
lret
loopne
iret
loope
sbb
ljmp
into
and
fstpl
mov
mov
enter
mov
lods
cmc
in
jge
repz
outsb
mov
arpl
lock
iret
fwait
push
adc
dec
roll
test
add
in
std
add
int
pop
xchg
xor
enter
push
inc
popa
mov
je
push
adc
xor
jo
push
andl
insl
xor
adc
nop
rorb
mov
pop
aaa
xor
jle
fucomi
mov
lret
imul
cs
jge
lahf
int3
pop
mov
push
dec
in
dec
arpl
mov
pop
mov
ds
pop
xlat
mov
jns
inc
scas
cmp
aam
das
cld
push
je
sub
out
sub
test
mov
fidivs
mov
xchg
sub
sub
or
inc
js
fcomip
sub
or
mov
xor
fimuls
inc
pop
std
pop
sti
ljmp
rcrb
add
inc
dec
negb
adc
or
pop
insb
test
std
test
loop
or
movsb
decb
das
je
jl
cmc
sbbb
cmpsb
cmpsb
dec
pushl
out
pop
dec
int
insl
shll
push
outsb
ret
repnz
cmp
mov
push
sub
mov
push
mov
push
jae
sub
mov
mov
out
push
subl
test
int
movsl
or
mulb
nop
adc
xor
inc
stos
pop
and
inc
outsl
jle
int3
push
pop
loopne
aas
jmp
test
sub
imul
gs
lods
lea
sbb
mov
out
push
lods
inc
stc
mov
jns
cmp
scas
out
cwtl
adc
test
gs
popf
cmpb
lods
inc
jge
fldt
cld
ret
fimuls
push
dec
in
xchg
dec
mov
iret
ret
mov
in
sub
cld
sbb
shll
add
int3
jp
lahf
dec
push
dec
dec
inc
in
negb
push
pop
adc
or
stos
shr
rol
or
or
inc
mov
jl
sub
scas
std
scas
jge
cld
bound
add
cmp
scas
popa
dec
shrl
sahf
ret
addr16
aas
fbld
mov
sbb
cld
sub
ret
hlt
out
insl
out
mov
js
xor
subb
loop
adc
jnp
sub
aas
icebp
ds
and
mov
ror
xor
divl
mov
das
ret
xor
shll
add
jb
push
movsb
and
ret
xchg
lods
aam
andl
push
xchg
push
cmpsb
fldcw
call
push
dec
cmpsl
popf
lods
das
loope
mov
jp
ss
xor
int3
push
lret
mov
and
cmc
lods
pop
sub
sbb
jnp
push
aaa
sub
add
dec
mov
test
sub
xchg
pop
mov
add
xchg
push
cmpl
mov
daa
aad
jae
dec
outsb
fisttpl
test
cmp
dec
into
daa
xlat
out
test
lret
push
inc
dec
fldl
sbb
and
rorl
pop
xor
sahf
jl
dec
mov
cld
inc
cmc
dec
xchg
adc
adc
xor
mov
data16
dec
sti
int
xor
lods
mov
cmp
sub
notl
lock
pop
sbb
dec
fs
and
cs
std
out
xchg
add
mov
cwtl
imul
jle
mov
adcb
add
jb
test
push
insb
aas
fwait
popa
add
popf
xchg
insl
in
adc
test
lahf
imul
mov
cmp
subb
mov
mov
xor
sub
push
push
js
ljmp
add
cmc
jmp
adc
bnd
jp
daa
or
mov
mov
in
mov
xchg
jp
push
fcompl
les
movsl
daa
pop
fwait
adc
jo
mov
in
sub
test
lret
sti
add
call
mov
or
gs
enter
paddusb
lods
mov
stos
mov
xor
les
es
scas
popa
and
mov
mov
jne
fwait
lret
ds
xlat
fcmovne
and
aad
aam
fiadds
fs
inc
fdivs
cltd
outsb
pushf
sub
and
bswap
jb
adc
add
ret
fadd
push
vmread
or
jecxz
mov
das
and
hlt
mov
xchg
add
movzbl
cli
pop
push
mov
cmp
cs
inc
mov
push
mov
inc
mov
movsb
mov
cltd
loop
mov
dec
icebp
lahf
mov
lahf
cmp
int3
enter
cld
fwait
pusha
in
dec
out
sub
sar
mov
shlb
sub
test
add
mov
mov
jne
mov
es
add
nop
add
inc
mov
mov
sub
cmp
mov
add
adc
jns
ret
mov
xchg
cmpsb
hlt
into
in
and
dec
pop
push
mov
lds
dec
and
or
pop
xchg
repnz
xchg
jo
lods
addr16
inc
pop
repnz
inc
jb
xchg
leave
and
jns
icebp
pop
jle
frstor
cmpsb
stos
push
in
sub
dec
imul
adc
jo
lea
lret
cmp
dec
int
mov
jle
or
scas
sbb
mov
mov
mov
jae
xor
add
loopne
imul
pop
jg
insb
popf
mov
in
xor
sbb
stos
stos
dec
pushf
push
dec
fs
cmpl
xchg
and
jno
ds
cmp
and
xor
mov
outsb
add
inc
das
test
push
into
pop
xlat
cmpsb
cmpsb
mov
scas
push
rcll
sub
fwait
leave
hlt
dec
cmp
adcl
aas
subl
popa
out
cwtl
ja
ret
jo
out
mov
stc
lahf
outsl
enter
pop
testl
dec
fstpl
int
dec
sbb
inc
cltd
jno
iret
jbe
inc
out
call
outsl
pop
fsubp
xchg
in
pushf
ljmp
cmc
adc
mov
sti
cwtl
inc
mov
mov
push
xchg
hlt
insb
mov
lret
inc
pop
shrb
lods
data16
outsb
pop
jnp
in
ljmp
mov
push
push
cmpb
mov
rcr
cmp
fmulp
out
pop
mov
enter
push
push
clc
cmpsb
add
lea
std
mov
inc
xlat
xchg
add
cmpl
mov
and
jns
push
das
nop
inc
test
inc
fildll
add
imul
orl
adc
cmp
mov
xchg
enter
xchg
cmp
std
mov
jecxz
push
mov
and
push
aam
nop
sbb
cmc
xor
movsb
cwtl
push
mov
in
lcall
pop
sti
andl
aaa
mov
vsubss
mov
xor
into
inc
sub
scas
enter
sbb
mov
sbb
bound
out
jle
pop
jbe
out
lret
pop
arpl
jnp
sbb
sbb
ljmp
jg
movsl
xor
jns
sarl
in
xchg
scas
xorl
loop
jp
fidivl
fisubl
cs
jl
arpl
xchg
pushf
cmp
test
add
xchg
add
pop
or
jg
adc
jb
xor
repnz
fwait
push
pop
push
call
inc
dec
movsl
cwtl
lret
xchg
xchg
andl
roll
or
es
jp
clc
cld
insb
cmp
addl
dec
imul
and
fs
scas
cmp
adc
rcrb
je
push
mov
mov
add
aas
orb
xor
mov
leave
push
dec
lods
push
inc
push
jmp
fmuls
add
pop
insl
mov
ja
fiaddl
jnp
push
xchg
addr16
lahf
rol
aad
mov
sahf
rorb
or
mov
xchg
sarl
xchg
iret
jns
mov
push
stos
sti
in
sub
cmc
jo
fwait
movsb
pop
mov
std
mov
dec
mov
dec
dec
push
jbe
mov
jnp
int3
icebp
push
jo
out
lods
sub
je
cmp
mov
stos
std
push
inc
xlat
in
scas
fcoml
pop
in
xchg
mov
out
sbb
cmp
sub
jns
leave
pop
and
mov
shlb
mov
or
push
sub
subl
mov
mov
adc
js
call
shlb
jne
loope
push
movsl
xor
add
add
inc
in
xchg
cltd
sbb
dec
xor
out
test
jg
je
add
cld
push
sub
inc
inc
inc
dec
stc
mov
jmp
adc
js
fadds
xor
enter
pop
mov
jmp
push
lea
xchg
inc
fcompl
mov
stos
sub
fndisi(8087
lock
in
or
int
movsb
dec
inc
xor
test
mov
ja
push
into
ret
cmpl
iret
lahf
xchg
xor
fsubr
add
je
cmp
cmpsl
jb
out
mov
scas
je
push
ljmp
repnz
daa
mov
test
jns
sahf
sbb
enter
push
jp
cli
scas
pusha
xchg
nop
mov
enter
sbb
je
xor
jbe
in
sbbb
dec
repnz
cwtl
imul
int
inc
cmpsb
cmp
clc
jecxz
cltd
or
jle
out
adc
sub
xchg
adc
xorl
repnz
jge
mov
or
or
inc
push
js
jg
inc
lcall
pop
movsl
sub
jge
pop
aam
add
push
mov
iret
lods
jo
scas
sub
mov
pop
rclb
cmp
xor
xchg
scas
or
add
xor
cmpsl
sti
pop
add
fs
ret
pop
test
jle
sbb
in
std
lods
adc
insb
shrl
jb
repnz
aas
loop
rorl
cmc
into
jbe
cmp
mov
testl
or
sarb
dec
or
sub
and
xor
daa
popf
stos
xor
mov
decl
stos
leave
xor
into
inc
mov
into
test
in
rorl
subl
rcl
stc
cmp
mov
jge
add
push
clc
xor
lock
and
cmpsb
imul
push
jle
icebp
add
ficoml
sub
inc
aad
jne
add
out
test
mov
cmp
mov
std
fsubs
cmp
scas
gs
mov
loopw
mov
cltd
fsubp
imul
mov
mov
add
shrb
sti
inc
negl
lds
bnd
lahf
lret
in
add
add
out
lds
and
repz
inc
mov
stos
addr16
xor
jmp
loop
scas
sbb
jl
jbe
call
mov
or
lods
xchg
cmp
call
in
sbb
popa
push
out
jns
lods
xor
xchg
daa
lock
mov
mov
add
mov
jle
movsb
sub
leave
lcall
push
dec
ret
dec
jl
scas
enter
outsl
xchg
das
ret
pop
cmc
jge
push
mov
fists
in
mov
movsl
jo
cmp
xor
je
stos
mov
add
mov
xor
es
push
in
xchg
mov
sarb
fxch
test
cmp
add
mov
clc
mov
push
into
add
inc
mov
adc
shlb
int3
icebp
sub
inc
aaa
add
mov
jns
xchg
sub
lods
insl
xchg
mov
cmp
or
sub
and
loop
loopne
cwtl
je
push
sbb
adc
adcb
sbb
xchg
pop
in
add
adcb
jmp
xchg
or
divb
cmp
pop
test
and
push
inc
mov
insl
icebp
jbe
rol
bound
fldcw
fcmovne
or
stos
stc
test
pop
hlt
push
mov
mov
mov
mov
scas
stc
cmpsb
std
sub
add
dec
gs
pop
add
sbb
mov
inc
andb
fwait
jne
dec
push
cmp
loope
push
ljmp
jmp
ja
push
mov
cmp
inc
add
flds
vcvtss2sd
clc
inc
divl
cmpb
xchg
es
stos
lahf
and
mov
or
or
repnz
mov
cltd
push
push
mov
push
aad
push
mov
inc
test
sub
push
xchg
popf
adc
xor
outsl
jnp
and
xchg
add
psrad
orb
jae
je
cmc
fcmovnb
iret
xchg
arpl
sbb
aaa
pop
push
lret
dec
and
mov
shr
inc
mov
cmp
xor
pushf
cmp
dec
lcall
mov
pop
mov
adc
out
js
push
leave
mov
std
xor
movsb
add
data16
jno
dec
sbb
or
into
imul
and
pushf
inc
inc
test
xchg
mov
ja
fwait
gs
pusha
pop
mov
push
add
std
imul
popa
xor
add
mov
fsubs
test
rcr
pminub
inc
movsb
cld
jge
out
stc
je
mulb
xchg
les
and
push
or
les
push
aas
adc
js
stc
add
and
aad
int
cwtl
cmp
mov
sbb
inc
fisubs
test
sbb
lock
ss
fbstp
mov
dec
mov
or
sahf
push
push
ds
decb
add
orl
mul
cmpsl
pop
clc
xchg
inc
ljmp
mov
dec
out
das
dec
push
aad
push
movsb
mov
push
cmp
int
pop
pop
xor
sub
or
mov
lods
inc
popa
inc
outsb
cltd
data16
aad
xor
adc
lock
ljmp
pop
shlb
insl
pop
psubsb
loop
adc
cmp
stos
cmp
imul
mov
sub
in
or
aam
jl
les
mov
nop
enter
loop
in
in
pop
rolb
repnz
insl
cmp
mull
lcall
xor
int3
mov
push
lods
or
dec
fbstp
sbb
sbb
inc
test
loopne
in
pop
out
cld
lods
pusha
mov
push
jecxz
jl
stc
insb
arpl
sti
adc
cmp
inc
loope
test
orl
dec
leave
push
scas
cmc
aaa
jb
dec
pop
jecxz
int3
fstpl
mov
popa
mov
sub
ljmp
add
rcr
inc
xlat
cmc
iret
arpl
outsb
inc
js
cmp
fidivl
push
lcall
sahf
jg
sahf
test
lret
add
arpl
mov
in
dec
nop
push
fmulp
packsswb
xchg
test
inc
or
ja
sub
divb
jne
int3
add
sarl
pop
add
jne
dec
enter
into
je
mov
inc
fcmovu
jbe
push
sbb
xchg
jecxz
jmp
daa
aad
ror
into
add
xlat
iret
mov
daa
jo
push
jl
ja
outsl
ret
adc
jnp
repnz
outsl
in
and
into
add
lahf
dec
dec
nop
cmp
js
rcll
mov
cmp
xchg
xchg
adc
loop
inc
pop
scas
xor
fisubrs
test
inc
movsb
pop
daa
cld
xchg
mov
jecxz
push
subl
loopne
andb
lods
lcall
jle
pop
push
pop
scas
mov
in
sti
xchg
push
ffreep
dec
lret
insb
and
andb
int
lahf
mov
cmp
imul
inc
enter
xlat
nop
stos
mov
sub
pop
jmp
in
and
shlb
sahf
xchg
les
lret
fstpl
iret
out
jecxz
cld
icebp
mov
adc
jecxz
inc
push
cmp
jg
mov
shlb
push
cmp
mov
mov
repz
add
or
mov
stos
movsl
xchg
sbb
adc
mov
adc
inc
jae
sahf
cmp
mov
call
jbe
pop
adc
fdivrl
rcrb
es
dec
pop
dec
xchg
mov
jmp
jp
dec
test
outsl
aas
add
xor
mov
fs
adc
add
sub
cltd
xchg
and
jmp
jp
mov
adc
mov
das
loope
dec
stos
mov
push
js
inc
cmpsl
cltd
push
outsb
sbb
mov
js
mov
movsl
jnp
lret
pop
mov
idivl
mov
lret
pop
lahf
jl
push
and
lods
idivb
ret
test
and
push
ret
clc
sbbl
pop
lock
fbld
inc
leave
subps
pop
mulb
imul
cmp
rorb
jg
lods
and
or
mov
adc
repz
test
mov
loope
ds
dec
add
inc
jbe
pop
xor
inc
jg
jns
inc
movl
cmp
jmp
add
sub
fs
cwtl
xor
mov
sub
cltd
push
gs
pop
andl
xchg
subl
mov
mov
je
jnp
hlt
shl
in
imul
scas
in
cli
and
jo
aaa
sbb
insb
cmp
mov
and
shl
add
cli
push
adcl
xor
or
inc
sub
jge
mov
test
negb
scas
mov
sub
imul
push
inc
jmp
xchg
xlat
cli
sbb
pop
pop
mov
pop
push
cmp
call
xlat
mov
cwtl
fldt
pusha
in
xor
add
sbb
push
adc
cmp
lret
aad
dec
aaa
jno
insl
scas
repz
fcoml
push
cmp
dec
sbb
andb
lea
ljmp
repz
lock
mov
adc
pop
or
mov
out
fsubrp
jmp
cmp
test
vmovdqu
pop
movsl
mov
test
sbb
cmpsl
push
add
les
push
in
adc
mov
and
jae
loop
mov
cmpsl
popa
cli
in
lds
aam
push
push
mov
clc
lret
mov
js
or
fs
jg
into
mov
jbe
cli
mov
sbb
add
cmovno
add
adc
jecxz
cmp
and
mov
inc
mov
rorl
xchg
jp
xor
or
aad
addl
jg
in
pop
test
and
or
dec
and
out
movsb
xchg
loope
xor
mov
mov
rolb
pop
mov
fsubl
ss
sbb
out
inc
cltd
ficomps
xchg
out
sbb
adc
pop
mov
and
ja
insb
mov
xchg
adcb
sbb
sub
jle
loop
inc
xor
pop
lock
fdivr
ss
cli
sti
in
sub
std
xor
test
div
jle
sbbb
dec
pop
insb
and
pop
mov
test
sub
in
mov
dec
dec
mov
sub
fbld
and
iret
push
and
inc
scas
pop
push
jno
shl
inc
imul
in
adc
mov
cld
cmpsl
mov
js
xor
pop
lods
iret
imul
fidivrl
or
stos
neg
rcrb
xchg
adcl
or
pop
push
push
ja
int3
jmp
mov
lret
dec
in
xor
jg
ret
pop
ljmp
scas
sub
insl
ds
out
jp
ljmp
callw
mov
clc
loop
xchg
movsl
lock
mov
sub
sub
aad
scas
pushf
addl
mov
lret
mov
aas
sbb
push
lock
cmp
adc
mov
mov
rcll
icebp
or
jo
mov
out
sub
mov
in
inc
xlat
dec
pop
loope
movsb
mov
mov
mov
test
dec
insb
and
mov
pop
ljmp
repnz
add
and
jae
addr16
call
mov
and
pop
push
insl
dec
popa
dec
cmpsl
pop
push
xchg
pusha
jns
pop
cmp
mov
repz
leave
sub
dec
and
inc
test
pop
vmaxpd
subl
clc
dec
repnz
daa
lcall
push
ss
push
shrl
mov
aas
aas
nop
outsb
pop
imul
in
cmp
jmp
cmc
dec
jns
fadd
jb
pop
mov
icebp
lods
push
xchg
inc
jno
xchg
xor
orb
jnp
push
lret
out
add
pop
es
mov
jne
rclb
jp
pusha
jg
push
pusha
mov
aaa
jecxz
jae
sub
jo
xor
lods
lods
push
imul
aad
fists
pop
jle
and
int
mov
mov
sbb
xchg
mull
add
mov
fsubrl
adc
sti
add
xchg
push
adc
leave
mov
inc
stos
scas
and
mov
inc
or
fimull
push
loopne
xor
cmp
dec
xlat
dec
push
test
adc
testb
loopne
divb
mov
mov
fstps
mov
push
and
dec
adc
daa
adc
jne
dec
jo
out
and
stos
push
push
jns
pop
jle
add
add
lret
movsl
nop
or
inc
iret
xchg
lods
arpl
testb
jp
outsl
adc
xlat
pusha
sub
sti
sbb
outsb
stos
sub
and
jle
mov
pop
mov
in
aas
jbe
mov
jle
sub
xlat
xor
shlb
cwtl
repnz
mov
sbb
lods
inc
inc
ljmp
and
out
adc
sysenter
enter
lea
arpl
sbb
mov
sub
ljmp
fidivrs
mov
mov
sbb
loope
mov
mov
mov
gs
mov
xchg
xchg
jbe
jp
mov
sbb
add
push
xchg
mov
xor
mov
outsl
js
fistl
leave
lock
je
jp
push
mov
xchg
je
lds
mov
sub
xchg
pushf
dec
sub
sub
jne
cmpsb
adc
xor
ret
inc
push
jb
lods
aas
mov
mov
repz
cltd
jp
xchg
loopne
test
mov
and
loope
lods
scas
jmp
out
push
int3
fwait
mov
or
xor
stos
pusha
lahf
mov
hlt
mov
lock
mov
loope
jae
ljmp
jg
int3
push
sbb
shrb
popa
pop
rsm
stos
xor
cmpsb
in
ret
dec
xchg
sti
adc
sti
cmp
cmpsl
popa
adc
repz
mov
rolb
xor
add
mov
dec
dec
jno
xorl
inc
in
inc
mov
vpandn
or
cmpsb
cmpsb
aad
push
push
mov
aam
scas
dec
loope
dec
cmpb
test
jae
mov
imul
jbe
test
js,pn
jne
in
fnstcw
push
add
sbb
pop
pop
movl
addb
in
pop
fdiv
add
int3
mov
jp
lcall
sbb
mov
dec
aaa
dec
sbb
shrb
ljmp
inc
xor
in
xor
testl
pop
fucomip
dec
dec
push
cmp
and
mov
iret
cmp
mov
mov
out
cmp
outsb
push
popf
pop
nop
mov
xchg
adc
std
add
or
ficoml
xlat
sarb
int
rcl
pusha
mov
inc
mov
popa
jl
jle
lahf
lea
mov
inc
inc
mov
and
stc
int
cmpsb
loopne
jg
inc
jg
and
sbb
and
inc
sbb
repz
and
orb
cmp
daa
xor
repz
pop
jnp
mov
adc
inc
and
mov
add
je
cmp
mov
sub
mov
stos
add
cltd
cmp
out
cmp
pop
push
mov
sub
and
aam
aad
sti
cmp
cmp
ja
sbb
lods
fs
jnp
imul
sbb
lods
adc
jecxz
xor
out
in
and
mov
lcall
sti
ffreep
cltd
sbb
mov
cmpsl
fisubs
mov
ja
xor
mov
inc
or
sub
jne
jecxz
mov
gs
sbb
cmp
cmp
cmp
mov
add
mov
add
mov
es
hlt
jl
bextr
mov
push
popa
in
into
mov
icebp
loope
xorb
fwait
cmp
test
pop
cmp
push
movsl
mov
mov
pop
adc
aaa
sub
cld
xchg
jb
mov
out
pop
add
fisttpll
cmp
ret
dec
loop
pop
cmpsb
adc
or
mov
and
sarb
mov
imul
mov
or
pop
pop
sbb
cmpl
out
add
adc
mov
inc
lahf
pop
popfw
test
loopne
mov
insb
mov
sbb
inc
addl
insb
xor
mov
pop
popa
add
push
mov
movsb
jbe
xor
cmp
inc
shrb
pop
fistpl
lods
das
ss
sub
stc
cltd
or
and
push
or
xchg
data16
int3
inc
in
xchg
inc
fmull
mov
push
and
icebp
inc
mov
jmp
push
jp
out
enter
mov
inc
add
pusha
mov
roll
push
sar
cltd
fidivl
fwait
ss
es
adc
xchg
or
test
xor
repz
das
cld
fdivl
lods
stc
shrb
dec
mov
mov
aad
pop
ja
daa
push
cmpl
inc
subl
cwtl
ficoml
shll
sbb
lret
jl
insl
stos
sub
ss
gs
push
das
push
pop
cmp
sub
int
jg
cmpsl
nop
dec
and
mov
push
scas
stos
daa
or
adc
or
scas
movsl
push
cwtl
into
mov
imul
dec
icebp
test
aas
std
mov
push
push
repnz
mov
pusha
repz
sbb
xchg
pop
push
add
add
mov
and
aad
jl
pushf
mov
fbld
jae
mov
fsubrl
jmp
popa
leave
inc
xchg
int3
push
inc
leave
loopne
lods
adc
jle
add
adc
int
jecxz
xchg
fists
mov
mov
in
or
loopne
adc
scas
fcomi
insb
fs
mov
mov
xchg
dec
mov
stc
nop
or
add
call
ffreep
movsb
pushf
pop
ss
mov
adc
mull
gs
jp
fwait
xor
lds
loope
and
push
pop
pop
adc
test
stc
rcr
pop
cld
mov
mov
sub
sub
mov
leave
dec
fstl
lds
int3
aad
cld
fidivrl
jns
and
cltd
mov
mov
es
push
jge
xlat
aam
add
or
jo
pop
inc
addr16
push
jne
arpl
mov
mov
popf
pop
icebp
bound
cmpb
fcoml
je
sbb
pop
add
push
es
inc
fnstenv
cmp
sub
and
push
pop
cmpsb
icebp
push
cwtl
jo
rdtsc
pop
sahf
dec
cltd
adc
cmp
push
push
adc
or
adc
movsl
rcrb
enter
cmp
push
push
xor
ds
dec
aam
in
xchg
mov
mov
push
adc
out
adc
fs
dec
lea
lcall
dec
into
into
add
mov
mov
int
mov
call
mov
int3
leave
rorb
pop
cld
addb
add
cmp
cs
jp
jl
stc
jmp
les
sarl
push
cli
ret
dec
mov
daa
mov
pop
cwtl
les
shll
lods
fs
pop
mov
lods
jge
push
ja
sbb
rol
ret
in
cmc
mov
outsl
jns
mov
loopne
js
mov
dec
xor
pop
xchg
out
mov
mov
insb
inc
fdivs
imul
imul
pop
sbb
lods
sbb
daa
cmp
daa
dec
or
or
pop
movl
sub
xor
adc
and
js
sbb
push
aas
xchg
xchg
in
sbb
mov
jl
repnz
mov
gs
or
out
mov
arpl
arpl
jnp
fistpll
push
ss
jle
mov
rcrl
in
sbb
xor
divb
jb
aaa
divl
mov
sub
xchg
stos
xor
jne
push
insl
aaa
pop
sahf
inc
jge
leave
dec
out
shl
ljmp
xor
out
ljmp
jecxz
mov
jge
mov
add
push
movsb
jge
in
je
shrb
jmp
or
sub
pop
repnz
inc
je
xor
xchg
lret
pop
pop
mov
into
in
and
mov
mov
popa
les
sbb
adc
or
mov
and
insb
lods
adc
jl
adc
sub
cmc
pop
daa
sbb
inc
in
loopne
test
adc
roll
jmp
xchg
mov
jmp
stos
jg
cld
cs
push
mov
mov
nop
push
fsubrs
mov
aam
ficompl
ja
add
in
idivb
xchg
shll
jmp
push
ljmp
test
or
pop
mov
out
sbb
test
scas
pop
out
xchg
jp
insb
test
ficoml
mov
popa
cmp
and
inc
pop
push
mov
cmp
movsl
jmp
arpl
xor
mov
sbb
mov
jle
xor
movsl
mov
ret
hlt
mov
lcall
jnp
push
jno
jnp
push
sarl
xchg
lret
repz
xchg
mov
jbe
push
pop
xor
enter
jmp
int
pop
lea
and
in
xchg
xorb
and
mov
std
and
xor
xchg
pop
add
mov
cwtl
cmp
xchg
sub
daa
mov
push
cmp
sbb
cld
jbe
sub
jns
mov
sub
subb
or
pop
sbb
add
jo
fdecstp
sub
add
sbbb
sbb
adc
ud0
inc
hlt
cmpsl
decl
push
dec
and
push
clc
rcr
lret
scas
pop
xchg
loopne
shll
push
shrb
mov
inc
mov
mov
and
lahf
or
fisubl
pop
fisubrs
or
sbb
pop
test
pop
fsubrs
lret
push
lds
xchg
jb
ljmp
aas
xchg
out
sbb
inc
jecxz
push
jne
push
jnp
xchg
pop
sub
in
das
mov
mov
aaa
jo
add
push
out
imul
out
push
adc
fxch
cli
jl
cmp
cmpsl
sub
mov
call
xor
sti
cwtl
adc
ret
sti
mov
mov
mov
pop
jno
loopne
ljmp
inc
push
mov
mov
or
sbb
or
rcrl
lea
sub
rol
adc
jo
inc
add
push
mov
shl
pusha
sahf
test
sub
pop
rcl
jb
dec
adcl
rolb
sub
lahf
in
add
ds
xor
add
daa
mov
xchg
push
rcrb
push
ljmp
push
and
or
xchg
cld
sti
lret
pop
xor
xchg
out
or
push
cs
jae
pushf
xor
push
cmp
test
loopne
sbb
push
mov
mov
cs
jle
int
inc
dec
adc
data16
sbb
jnp
dec
jb
fs
xchg
or
test
cli
int
mull
xchg
pop
xchg
loop
call
test
dec
adc
arpl
mov
dec
push
jo
fsubs
mov
test
add
lret
mov
cld
fs
mov
add
lcall
incb
sub
jno
push
xor
jl
in
dec
enter
fdivrs
cmp
into
sub
adc
xor
xor
hlt
in
shr
lock
sbb
imul
jmp
sahf
xchg
loopne
ds
lds
pop
cmc
cmp
jg
push
xlat
push
add
fwait
and
shl
ljmp
push
or
pop
xchg
int3
jno
sarb
movsl
stc
testl
lahf
cs
xchg
movsl
iret
sbb
out
sub
jns
add
arpl
mov
adc
mov
cmpsl
arpl
out
mov
sbb
sbb
lods
gs
je
call
clc
and
pop
in
sbb
imul
cli
sbb
xor
mov
outsl
lret
cmp
repnz
cmp
xor
cmc
xorb
pop
test
aam
cmp
repnz
add
out
mov
mov
aas
lods
sub
ret
sub
rclb
test
call
in
test
lods
inc
ds
and
adc
pop
mov
adc
cmpsb
aad
fwait
outsl
out
or
mov
adc
pushf
push
cs
pop
adc
imul
lods
sbb
addr16
into
fcompl
adc
adc
inc
adc
imul
pop
push
jae
jle
cmpsl
and
and
sarl
aas
popf
mov
fiaddl
and
add
cs
xchg
div
mov
xor
rclb
xor
movsb
lret
mov
stos
daa
ds
rclb
leave
aad
sti
xchg
stos
sub
je
jle
or
ljmp
hlt
outsl
inc
jle
cmpsl
add
xchg
fwait
repnz
and
push
push
mov
xchg
add
dec
jb
lcall
jns
and
xchg
fildl
mov
les
repnz
pop
push
hlt
dec
in
xlat
mov
and
inc
dec
test
out
and
in
and
rcll
jae
mov
pushf
pop
loope
fst
cmp
sahf
pop
sbb
cmpsb
mov
mov
jp
cmc
fst
adc
pop
inc
inc
popa
imul
data16
pop
add
pop
pop
out
int
jbe
int
push
scas
shrl
loop
incb
fsubrl
sbb
and
pop
pop
push
jno
imul
adc
sbb
pop
jmp
and
pop
pop
dec
loop
lea
outsb
adc
les
inc
push
mov
xor
outsb
lock
sti
out
and
into
xor
jecxz
dec
sub
enter
enter
cmp
jo
ljmp
ja
in
mov
adc
repz
call
mov
nopl
jns
imul
xor
add
enter
cmp
sub
cmc
pop
pop
mov
cmp
cwtl
std
rcrb
int3
imul
xchg
cmpb
js
iret
push
rol
std
cmp
dec
int
rcrl
movsl
xchg
cmp
mov
push
imul
cs
pop
jle
ja
ja
fisubl
inc
in
jno
into
jp
test
lods
mov
or
inc
test
cmp
push
sub
add
in
mov
sub
cmp
mull
mov
call
iret
rol
movsb
ljmp
ret
pop
xchg
dec
cmc
rcll
mov
pop
add
jns
and
or
sub
hlt
mov
mov
bound
cmc
pop
dec
ljmp
fistps
jg
dec
push
or
inc
sub
fiaddl
out
out
sbb
cli
xchg
loopne
jg
or
push
inc
mov
push
sar
mov
dec
nop
pop
fdivs
aad
cmp
cmpsb
daa
insl
in
pushf
ljmp
add
repz
xchg
sbb
push
push
jmp
mov
scas
cmpsb
pop
call
or
nop
out
stos
out
jmp
stos
push
pop
test
ds
in
jne
mov
jbe
iret
movl
arpl
jns
cld
mov
mov
jle
call
lds
dec
inc
inc
pop
hlt
fsubrs
mov
dec
sbb
sub
mov
cmp
repz
fstps
jns
push
sbb
cltd
push
add
sbb
lods
jbe
and
inc
add
mov
shll
sub
aaa
or
scas
jo
add
sahf
int3
pop
cmp
or
sbb
lods
daa
and
cmp
in
sub
sub
int3
imulb
jle
repnz
cld
sti
cmp
test
repz
add
imul
jp
clc
push
pushf
add
push
push
clc
jl
mov
dec
mov
pop
xorl
dec
daa
push
clc
cs
inc
enter
lret
fcmovb
adcb
inc
jg
addr16
dec
das
loop
ds
xchg
mov
ss
lahf
imul
lods
pusha
sbb
xchg
call
mov
adc
popa
mov
js
imul
mov
arpl
fxch
pop
xorb
xchg
in
add
add
gs
add
push
insl
lahf
dec
test
out
orl
pushl
push
stos
mov
sub
arpl
sub
inc
cmp
inc
pop
mov
mov
int3
mov
xchg
adc
incb
ficoml
mov
in
push
out
inc
ja
pop
mov
popf
sarl
and
nopl
cmp
mov
xor
ja
sbb
mov
xchg
lcall
int
mov
or
jp
lret
xor
stc
inc
or
cmp
addr16
push
xor
insb
decb
les
arpl
mov
sarl
insl
xorb
xor
xor
xlat
popf
bound
add
test
pop
add
sbb
rorb
jg
mov
xor
cmovne
lret
cld
add
pop
bswap
or
sub
sub
out
add
jne
lea
roll
mov
adc
or
lret
shlb
or
ret
push
test
ljmp
jl
arpl
cmc
test
mov
scas
pop
xorl
mov
jecxz
mov
test
jmp
dec
mov
outsb
aas
inc
sti
mov
push
cmc
pop
fbld
or
inc
dec
popf
lahf
dec
push
sub
imul
cmc
inc
or
push
xchg
add
jo
pop
cli
loopne
pop
outsl
mov
mov
or
inc
and
push
in
fwait
mov
cmp
out
push
repz
stc
xchg
rcll
dec
int3
or
gs
xchg
cmp
sbb
gs
movsb
lcall
push
xlat
xor
test
das
fcmovbe
push
mov
gs
sub
mov
push
repz
aas
test
test
mov
push
in
cmp
adc
mov
insl
inc
nop
les
testl
or
push
cmc
push
cmpsl
jmp
movsl
jb
fistpl
adc
add
sub
aas
push
xor
pop
cmc
mov
test
xor
add
sar
mov
or
adc
mov
divl
insb
xchg
xchg
push
ljmp
sbb
roll
adc
or
movsb
loope
sar
adc
and
push
lea
adc
js
out
ds
sbb
es
repnz
xlat
mov
jne
adc
shll
sbb
sbb
push
popf
sub
into
hlt
leave
mov
jnp
outsb
push
sub
fs
jp
dec
sbb
popa
jmp
xchg
mov
and
sbb
pusha
bound
mov
mov
test
push
adc
mov
imul
mov
xlat
lock
es
adc
call
test
jns
aas
adc
fstps
xlat
addl
loopne
xchg
xor
and
or
push
or
xor
cld
test
stos
xchg
pusha
sarl
andb
movsb
adc
repnz
cmp
mov
mov
les
dec
pop
lods
adc
fnstsw
out
push
iret
fwait
test
cs
sbb
fmuls
xor
mov
sbb
out
sti
mov
sub
push
pop
pop
inc
jl
mov
pop
mov
cmp
gs
lret
pop
pop
stc
nop
cmp
sbb
hlt
mov
adc
in
enter
mov
clc
mov
mov
mov
mov
cmp
jmp
add
leave
lds
pop
jne
jbe
and
mov
xchg
jecxz
push
movsb
push
call
data16
or
aaa
xor
aaa
dec
das
jle
sub
jmp
imull
xchg
shlb
out
adc
fs
cmp
seta
les
mov
adc
push
sub
dec
call
and
xchg
ljmp
lock
div
xchg
decb
int
jmp
and
pop
outsb
xchg
sbb
mov
dec
stos
fdiv
pop
sbbl
fcomps
popa
mov
fwait
xchg
push
cmp
rcl
or
enter
mov
jnp
shl
jge
push
arpl
int
daa
scas
shlb
in
pop
xchg
scas
popf
cmp
add
cmp
ret
pop
lcall
pushl
push
cwtl
or
pop
std
sub
push
scas
mov
je
out
xor
push
adc
mov
xor
push
fucomi
aam
imul
test
xchg
cmp
xor
xchg
or
add
pusha
xor
cld
push
lods
test
or
scas
mov
iret
xor
mov
inc
push
ret
and
cmpsb
push
cmpl
mov
fwait
cs
mov
mov
push
add
movsl
in
scas
in
jo
pop
lahf
ds
mov
enter
fbstp
push
cmpsl
sub
aam
popa
loop
and
sahf
adc
adc
imul
and
mov
in
aad
nop
push
je
pop
or
mov
cmp
ret
lds
loope
leave
arpl
mov
mov
jno
ljmp
clc
in
cmpsl
inc
and
ret
cmp
into
fstpt
movsl
xchg
xchg
adc
jg
divb
sub
mov
out
pop
arpl
jo
pusha
or
mov
mov
orb
add
xchg
ficompl
int
loop
inc
pop
mov
add
jmp
imul
shrb
cld
in
push
push
jecxz
inc
pop
sub
dec
ds
or
nop
cltd
outsl
and
cmp
cmp
ds
insb
test
cmpsb
addb
shll
leave
adcl
xor
sahf
inc
push
lret
inc
aam
dec
mov
sbb
xor
pop
lods
mov
mov
mov
mov
push
das
xchg
push
jge
mov
nop
cld
shrl
leave
fcomps
inc
inc
repz
scas
adc
loopne
ja
leave
jg
imul
jnp
mov
cmpsl
fsubs
push
mov
enter
testb
adc
push
lret
jns
inc
loope
test
sbb
dec
lcall
pop
mov
imul
and
jae
repz
icebp
inc
xchg
rcrb
xchg
mov
sub
ret
push
lahf
dec
scas
xchg
or
xchg
js
push
inc
push
mov
mov
and
dec
lret
cwtl
or
add
jecxz
pop
in
mov
mov
lods
jnp
cmp
add
cwtl
es
sarl
push
mov
xchg
lret
and
mov
mov
pop
sbb
daa
jmp
xchg
imul
jp
cmp
inc
jns
sbb
call
pusha
fldcw
pop
and
sub
ret
jno
jo
mov
sti
xchg
leave
and
fcoms
sbb
mov
mov
inc
jb
xor
lock
jb
fdivl
dec
cmpsl
pop
xchg
adc
out
outsl
movsb
sub
mov
push
dec
lods
adc
add
repnz
movsl
lock
mov
nop
hlt
inc
jnp
jae
outsb
in
push
into
lcall
push
inc
cli
out
xchg
push
adc
mov
add
cmp
das
mov
xlat
add
pop
add
xlat
les
popf
icebp
or
cmp
add
jp
add
cwtl
and
or
add
dec
pop
push
aam
jae
fcmovu
in
je
in
lahf
je
cmp
je
jp
stos
jle
out
inc
out
fs
icebp
clc
add
push
clc
std
ret
stc
jno
and
mov
mov
outsb
add
enter
cmp
je
orb
js
fisubrl
loope
std
out
xor
fs
test
out
out
pop
inc
adc
mov
cmp
mov
push
rclb
insb
testl
sbb
cwtl
sbb
fchs
xchg
cmp
jo
dec
daa
sub
dec
aas
inc
test
inc
pusha
mov
pop
inc
xchg
lcall
mov
cmpsl
jecxz
clc
in
testl
cmp
xchg
lahf
fiadds
into
pop
jne
mov
sbb
call
gs
stos
scas
imul
dec
in
adc
push
pop
outsb
rcrb
cmp
dec
pop
push
sti
test
pop
inc
dec
sbb
aaa
sahf
imull
mov
mov
xor
jl
pop
fstl
shrl
in
shrl
mov
adc
add
jp
jbe
fsubs
ss
sahf
inc
mov
leave
adc
xor
mov
push
mov
inc
flds
mov
and
or
stos
cs
cmova
push
scas
inc
scas
in
push
iret
and
insl
adc
adc
les
mov
out
mov
cmp
push
pusha
and
cmp
fiaddl
push
xchg
cmova
js
xchg
adc
loope
loopne
mov
cmp
jle
inc
mov
add
pusha
sub
pushl
pop
lock
ret
cli
outsb
xlat
loope
inc
lock
fcompl
xchg
inc
jnp
dec
jnp
pop
inc
lret
push
dec
ljmp
sub
popa
in
lds
mov
dec
pop
sbb
jae
or
imul
and
fdivp
sub
stos
adc
imul
movsb
insl
addb
cmp
jno
mov
and
jae
jnp
sar
leave
aam
jo
jb
mov
push
add
in
nop
lods
std
mov
push
icebp
dec
lods
lods
loope
test
fs
pop
add
daa
daa
aad
mov
cli
enter
leave
shl
sarl
push
pop
lret
loop
out
sti
mov
cmp
xchg
push
or
push
subb
or
jns
pop
xchg
std
aam
daa
adc
mov
fldenv
rcrl
mov
mov
sub
out
pop
rcrl
cmp
pop
jo
cmpsb
test
add
imul
iret
jle
ljmp
push
jo
sbb
xor
or
add
dec
outsl
and
repnz
lock
mov
sahf
xor
sbb
jo
jno
shlb
js
jge
jg
adcl
cmc
iret
jg
push
dec
int3
lock
loope
test
or
inc
pop
das
add
outsb
pop
or
fildll
add
dec
dec
cmc
add
add
mov
and
jns
cwtl
or
popa
fdivrs
adcb
and
imul
push
pop
out
pop
in
xchg
orb
insb
scas
or
or
jns
cmp
lods
mov
loope
inc
ret
dec
aam
xlat
aam
dec
push
cmp
cltd
push
sbb
ss
adc
sbbb
cltd
aad
xchg
aas
jmp
sub
push
adc
push
ds
xor
mov
inc
adc
out
dec
add
push
cltd
inc
xor
shlb
decl
xchg
enter
add
cwtl
cmpl
scas
jmp
rcl
in
scas
std
mov
mov
ret
les
cld
lret
popa
xchg
xor
cwtl
rclb
dec
xor
outsb
xorl
push
mov
cltd
and
pop
loopne
mov
in
or
dec
leave
mov
leave
pop
and
dec
add
pop
or
xchg
lahf
imull
xor
stos
cmp
push
test
ds
pop
test
inc
or
lcall
adc
loopne
jmp
outsb
adc
cmpb
scas
push
fistl
shll
inc
sahf
fmuls
inc
lds
dec
out
call
mov
les
int
notb
adc
pop
and
dec
mov
mov
dec
and
sti
pushf
pop
adc
pop
int3
cmp
push
imul
mov
inc
cmp
cmp
arpl
incb
rol
neg
stc
cmp
mov
in
mov
dec
imul
aas
scas
cmp
ret
hlt
push
adc
xor
mov
pop
push
jne
sub
movsb
imul
int3
add
lods
sbb
mov
xchg
aam
addr16
mov
call
pop
push
jl
or
mov
push
push
inc
dec
pop
insb
fstps
and
xchg
push
filds
sti
fwait
ss
into
faddp
xchg
jmp
mov
out
stos
shrb
imul
ja
add
dec
jae
mov
push
jp
mov
insb
int
jl
ret
fistpll
stos
cltd
incb
mov
adc
aad
les
sub
xlat
lret
adc
sub
outsb
repz
testb
sbb
jo
jle
popf
dec
add
push
cltd
jmp
sahf
cmp
inc
jg
fdivrs
or
pop
push
or
xchg
outsl
rcrb
xchg
fdivl
inc
and
jp
movsl
sarl
jne
adc
inc
cwtl
lret
xchg
aad
pop
or
xchg
mov
cmp
sub
jbe
shl
sar
je
and
outsl
aad
jmp
aam
mov
xor
pusha
das
aad
daa
loopne
mov
xchg
xchg
nop
jnp
xor
push
lret
dec
stc
imul
inc
push
cmp
jge
test
repz
push
jne
jnp
aas
out
outsl
imul
cmc
cmp
sti
or
mov
je
scas
data16
mov
cmpsb
inc
js
mov
insb
push
mov
jmp
rcll
sbb
repnz
sbbl
iret
mov
mov
faddp
xchg
pop
pop
test
xchg
les
inc
jl
inc
fs
loope
push
inc
pop
fnsave
sar
mov
cs
inc
out
cmp
sub
push
cmpsb
test
add
mov
mov
cmp
arpl
xlat
push
popa
push
xchg
in
jmp
adc
sbb
push
and
push
icebp
mov
repnz
jno
xchg
push
stos
repz
rcll
dec
insb
sub
lret
dec
sub
ror
int
mov
dec
fs
sahf
adc
dec
push
add
das
std
jne
popa
sub
in
pushf
mov
jbe
push
xchg
ret
dec
loope
xchg
pop
cli
mov
mov
cmp
sub
mov
lock
pop
ja
jge
adc
loopne
xchg
add
movsl
mov
xchg
ss
daa
inc
sub
mov
test
adc
cwtl
jl
cmc
js
pop
ja
fldenv
jne
dec
and
pop
fldl
fimuls
mov
jge
hlt
hlt
test
mov
aaa
repnz
dec
xchg
inc
and
and
xor
mov
sbb
mov
pushw
add
mov
sbbb
mov
andb
pop
addb
xor
xchg
and
aaa
jge
sbb
add
or
sbb
mov
adc
sti
lahf
cmp
push
cmp
ss
mov
fisttpl
mov
add
jp
ja
and
dec
sbb
in
fdivrl
lds
and
dec
jmp
push
in
xorl
add
mov
mov
fimuls
notb
ret
cmp
inc
mov
loope
lods
xchg
andb
imulb
dec
js
ljmp
and
adc
lret
push
cmp
and
xchg
dec
arpl
and
aad
je
leave
pushf
push
pusha
add
insl
dec
cltd
mov
iret
sahf
cs
fwait
rol
cmp
mov
cmp
cmpl
lcall
xchg
packssdw
and
mov
aas
adc
in
stos
mov
xchg
add
dec
ss
lcall
xor
cmpb
leave
popa
mov
ret
sub
jno
or
mov
addr16
or
pop
call
pop
or
xchg
pop
push
mov
mov
imul
sbb
sbb
inc
cmp
sub
xor
rorl
or
pop
dec
xchg
shlb
pop
repnz
or
push
xchg
dec
cmpsl
nop
cmp
bound
add
inc
xchg
pop
fcoms
pusha
int3
rcl
shlb
repz
pop
sahf
xor
mov
mov
sbb
lea
clc
pop
je
nop
and
adcl
fisubl
nop
inc
stos
cmpsb
loope
repz
loop
lret
cld
sti
dec
pop
dec
jmp
lret
daa
fisttpll
push
fiaddl
leave
in
mov
pop
dec
insl
cmc
inc
adc
jno
cmp
cmpl
sub
bound
xchg
sub
pop
nop
mov
es
xchg
or
fidivl
mov
leave
mov
jbe
dec
inc
daa
fiadds
mov
push
ficompl
cld
arpl
jb
jmp
mov
add
sub
jp
into
fldt
gs
push
jmp
mov
jo
adc
adc
inc
mov
nop
bound
xchg
adc
inc
lret
and
push
jne
mov
push
aad
jns
cmp
push
cmp
int
cmp
jnp
lods
pushf
loopne
ret
inc
insl
mov
fmul
dec
sbb
jnp
in
push
cld
clc
outsb
fwait
in
repz
jnp
stos
mov
lcallw
push
rcl
cmp
mov
and
jo
cmpsl
insb
fldl
lds
movsb
jmp
hlt
loope
aas
xor
sub
sbb
push
pushf
sbb
fsubl
dec
icebp
sbb
decb
sarl
dec
fwait
jb
dec
xor
lcall
jbe
pop
mov
int
add
dec
push
add
popa
inc
dec
test
icebp
ljmp
add
push
js
cmp
mov
jl,pn
mov
fcmovbe
int3
xchg
pop
push
push
mov
jb
sub
mulb
test
cltd
lahf
ja
or
pop
out
add
mov
cmc
roll
jnp
mov
call
leave
jb
nop
outsb
xchg
push
jae
int
je
addr16
out
hlt
flds
or
cmpsl
sub
fnstsw
hlt
push
dec
and
fnstenv
nop
fisttps
and
xchg
sbb
xchg
stos
push
dec
sub
jle
lahf
and
xchg
scas
push
div
jbe
out
xchg
mov
icebp
jle
pusha
clc
push
pop
es
or
rcl
push
mov
xor
cltd
mov
add
sahf
pop
ljmp
jl
aad
in
loopne
imul
aas
rorl
sahf
scas
icebp
dec
addb
nop
push
mov
movl
call
mov
fadds
movsb
movsl
inc
jb
cmpsb
pop
and
pop
shlb
inc
aam
fdivp
loopne
mov
adc
in
cmc
push
aas
and
or
jg
add
jne
sub
sbb
push
in
push
pop
mov
mov
mov
repz
lahf
xlat
cmp
aaa
sub
mov
stos
ljmp
aaa
das
pop
lods
pushf
xchg
sbb
jns
cwtl
xchg
mov
xor
cmpsb
iret
rorb
jno
or
imul
enter
ret
xchg
or
cmp
xor
pushf
cmp
jb
test
jnp
ljmp
fucomip
dec
pop
aad
repnz
cmp
or
imul
dec
pop
hlt
jmp
inc
mov
jae
shl
repz
pmullw
mov
test
ret
icebp
scas
adc
or
pusha
aam
mov
mov
icebp
loop
jno
pusha
icebp
jl
and
mov
xor
cld
push
leave
fcmovne
rorl
into
xchg
jp
sub
lahf
pop
insb
or
repnz
push
mov
xchg
pop
cmc
cmp
cwtl
xchg
stos
push
jb
sub
push
pop
pop
icebp
pop
xchg
data16
lods
mov
fdivrl
comiss
int
stc
adcb
mov
cmpsl
dec
adcl
or
pop
sbb
push
mov
push
sbb
push
aad
xchg
xor
pop
sarl
testl
cld
popf
sbb
mov
pop
aad
fnstenv
jb
lcall
mov
jns
lea
xor
jg
fisubrs
add
adc
out
pop
xchg
mov
mov
mov
pop
call
test
fmul
das
or
mov
data16
dec
inc
or
je
push
jg
jle
sahf
or
ljmp
pushf
inc
mov
mov
lods
dec
inc
mov
fadd
xchg
daa
rorl
ffree
or
repnz
int
clc
jmp
lret
fdivrl
clc
xchg
pop
and
mov
fbstp
arpl
lret
cmp
rclb
add
loopne
push
lods
movb
cmp
outsl
push
mov
push
push
negl
jle
loop
test
mov
or
xor
lcall
dec
lods
movsl
ds
mov
sbbl
push
and
mov
jle
in
faddl
loop
das
mov
les
loop
popa
imul
push
xchg
mov
xchg
mov
lds
adc
stc
imul
mov
shll
out
inc
cltd
dec
jp
imul
sbb
sbb
adc
fcmovbe
xor
test
lahf
xor
jb
test
scas
cmc
xor
insb
loopne
outsl
fnstenv
inc
jmp
lahf
adc
cmpsl
filds
push
mov
mov
add
scas
push
loope
ja
cmp
xorl
mov
pop
lret
dec
add
lea
popf
loope
aad
push
mov
lock
mov
dec
push
sbb
or
push
sti
je
push
inc
ja,pn
mov
outsb
pop
inc
sub
mov
imul
add
imul
mov
stos
ljmp
fwait
pop
and
arpl
add
nop
stc
fistl
pop
push
jns
hlt
or
pop
jge
dec
shrl
sub
xchg
inc
add
outsb
add
xlat
pop
gs
inc
iret
in
inc
notl
add
pop
add
icebp
xchg
jbe
jno
shll
dec
and
ljmp
adc
inc
xor
je
mov
outsl
repz
mov
dec
add
loop
cmpsb
push
xor
ret
pop
fisttpl
sub
je
adc
xchg
mov
dec
int3
leave
inc
adc
dec
mov
jmp
jns
xor
xchg
add
adc
xchg
pop
lahf
mov
pop
es
push
in
fcompp
daa
ja
adc
push
xchg
shlb
into
or
out
sbb
xrelease
mov
sbb
sbb
dec
and
in
hlt
idivl
js
or
lods
ret
repz
pop
pop
mov
icebp
int3
jl
mov
es
popf
ljmp
cltd
outsb
push
movl
dec
shl
jo
shll
add
xchg
xchg
stos
inc
xor
xchg
outsl
xchg
jnp
iret
cld
mov
ljmp
xor
jecxz
imul
mov
cmc
je
stos
dec
fwait
leave
pop
ljmp
adc
ljmp
dec
lahf
and
call
inc
dec
repnz
mov
shll
ficoms
dec
adc
fsubrl
cwtl
stc
pop
mov
mov
cmp
xchg
stc
cmp
jmp
dec
adc
dec
jg
sbb
ss
xlat
push
mov
adc
pop
ds
add
test
push
loope
lcall
adc
ljmp
mov
movsl
shll
lock
sub
lods
icebp
dec
leave
ja
out
fldl
mov
inc
mov
ja
out
push
push
add
cli
nop
or
and
jne
jg
rol
pop
cmp
and
sbb
in
push
cmp
cmpsl
jne
mov
pusha
test
xchg
inc
hlt
call
add
inc
ss
sbb
xchg
sbb
shl
cmp
and
add
pop
add
mov
js
fwait
lea
and
orb
cmovae
mov
rcll
mov
mov
cwtl
test
push
outsl
cmp
das
aad
jnp
inc
mov
add
mov
out
addr16
sbb
fisubrs
adc
ja
sbb
idivl
or
xor
mov
inc
aam
insb
fcmove
daa
in
adc
pusha
adcl
divl
sbb
xor
pop
shll
mov
jbe
cmc
sub
lods
cltd
add
cmp
xor
cmp
mov
add
xor
cmp
jae
pusha
mov
dec
jmp
xor
int3
push
ds
pop
cwtl
adc
popa
jbe
loope
sahf
inc
mov
lods
mov
pop
lahf
push
fimull
mov
inc
and
inc
imul
insl
mov
or
rcrb
rorb
inc
in
xchg
test
std
pop
cmp
cmp
pusha
pushf
xor
int3
addr16
in
outsb
icebp
call
add
mov
sbb
repz
ss
cmpsl
int3
pop
xor
ret
imul
and
sub
mov
in
and
mov
add
jl
dec
xchg
inc
clc
jg
inc
push
fstpl
jmp
cmp
jmp
xchg
mov
pop
or
mov
mov
orl
gs
add
or
pop
xchg
dec
mov
fs
jle
ja,pn
jns
sbb
loopne
rcl
xchg
push
test
testb
push
test
and
data16
push
test
aad
xchg
ja
adc
fisttpl
cltd
jge
push
cmpsl
sbb
pop
stos
adc
jo
adc
mov
push
mov
fnstsw
ja
and
insb
mov
lret
mov
push
out
shl
in
add
xchg
sub
mov
pop
dec
sbb
roll
inc
push
sbb
lret
sbb
pushf
jo
lret
es
mov
push
outsb
scas
mov
cli
pop
cmp
jle
imul
push
add
leave
sub
mov
aam
mov
pop
ds
js
ret
out
adc
loope
mov
push
fwait
mov
push
pop
mov
mov
push
hlt
push
out
gs
movsl
cmp
or
int
and
cwtl
mov
fildl
adc
sbb
rorl
stc
pop
sbb
jg
loopne
dec
xchg
cli
mov
dec
sbb
mov
aam
in
xchg
jp
rcrb
into
mov
push
call
lcall
adc
cmpsl
fdivrl
xchg
loope
cmc
sub
out
cmpsb
xchg
push
add
inc
cwtl
fildl
cmp
gs
or
pushf
mov
test
movsb
push
shrl
cmp
mov
jle
mov
pop
jle
mov
movsl
jnp
imul
or
mov
lret
inc
jnp
pusha
cwtl
push
dec
out
icebp
adc
lret
sbb
jge
das
stos
test
or
popf
gs
jbe
push
lock
lods
mov
push
enter
dec
jns
inc
push
or
out
call
mov
xchg
rcrl
lea
xlat
pop
rolb
xor
ret
mov
mov
jnp
dec
mov
cmpsb
adc
push
cmp
mov
jge
push
or
push
je
xchg
or
enter
mov
mov
mov
mov
inc
ficompl
dec
or
xchg
cmp
xchg
pop
cmpl
repz
je
pop
sub
and
aas
pop
jno
shlb
call
out
ja
popl
push
test
and
je
hlt
inc
scas
add
cmp
ss
dec
pop
out
push
mov
fcompl
lods
mov
mov
push
into
or
sarl
jecxz
mov
push
in
cltd
popa
in
out
and
push
jo
xchg
repz
jle
sbb
gs
mov
xchg
ret
push
js
cmpsb
and
dec
fcmove
int3
and
stc
lds
cs
into
loop
dec
and
inc
fdiv
int
je
xor
xor
cli
mov
mov
out
imul
adc
loope
in
jl
clc
hlt
scas
lock
out
cmp
pop
xor
addr16
cmpb
pop
ja
mov
inc
push
mov
add
and
nop
pop
cmc
aaa
nop
sarl
fidivl
mov
in
or
fs
cli
rorb
dec
cld
push
jb
movsb
mov
pop
jmp
call
cmpb
sub
bound
lahf
aam
cmpsl
push
aas
inc
cmp
xor
mov
add
cld
add
ret
adc
jp
in
daa
loop
pop
popf
daa
test
push
or
mov
gs
ret
push
call
sub
push
mov
test
shr
mov
jnp
push
inc
adc
ret
jne
fisttps
adcl
xor
pop
cmpsb
add
repnz
pop
pop
push
sbb
add
and
pop
xor
mov
nop
jg
push
pop
add
fxam
arpl
add
mov
cmp
pop
mov
pop
cmc
cmp
rolb
push
pop
mov
push
stc
or
sbb
mov
push
adc
loopne
sarb
mov
in
push
push
shrb
inc
in
outsb
mov
pop
sbbb
je
orl
test
jl
mov
mov
push
outsl
rolb
ss
inc
imul
adc
pop
iret
int
sahf
cltd
shlb
pop
xor
ret
dec
mov
jl
cmpsb
sbb
pop
sbb
shrl
mov
es
lret
push
std
stc
test
cwtl
ret
aaa
in
jo
xchg
leave
enter
xor
dec
sub
nop
mov
repnz
jo
cmc
mov
mov
arpl
sbb
xor
sarb
sub
jne
mov
push
loop
jl
mov
push
and
xchg
adc
inc
enter
adc
js
xchg
sub
push
xchg
cmp
bound
je
les
inc
and
jb
pusha
js
sub
aaa
xchg
clc
imul
jge
mov
cmp
mov
xorl
xor
loope
xchg
loop
xchg
dec
shlb
ljmp
shlb
js
xchg
test
loope
push
bound
push
xor
cmpsb
shll
jbe
jle
jmp
dec
out
sbb
jb
push
cmp
and
decl
jecxz
loopne
inc
enter
sub
jae
in
push
inc
in
jmp
lock
inc
adc
pop
fbstp
xor
pop
lea
leave
std
test
arpl
iret
pop
cmc
sub
js
daa
or
xchg
lea
pop
pop
mov
add
ss
div
ljmp
xchg
js
popa
mov
inc
and
std
negl
sahf
daa
mov
in
xchg
inc
adc
xchg
mov
adc
rcrb
ficoml
mov
ret
vphsubbw
fdivrp
and
test
mov
loope
fistpll
fisubrs
lea
nop
mov
adc
int3
lret
mov
lcall
sub
push
pop
stos
lahf
xor
lret
ss
adc
mov
xor
add
mov
in
pop
or
or
sub
dec
adc
mov
popf
iret
pop
js
ficoml
mov
pop
and
pop
push
adc
incl
pop
dec
mov
stos
jge
mov
sahf
push
jmp
add
xor
mov
mov
nop
loopne
test
inc
xchg
jns
xor
sbb
sbb
xchg
test
test
fimull
ficomps
xor
ret
sbb
mov
sbb
fists
pop
imul
call
repnz
aad
dec
aam
xor
xchg
int
xor
pop
lods
push
push
shr
lahf
mov
and
and
daa
shlb
cmpb
add
fimuls
movsl
lahf
inc
out
and
mov
dec
inc
mov
jmp
pusha
call
pop
lea
push
call
mov
mov
lea
lea
mov
or
jne
lea
push
push
push
push
call
or
je
mov
mov
push
push
push
push
call
push
movzwl
dec
mov
or
je
movzwl
or
je
push
push
pushl
push
call
push
mov
mov
add
mov
call
push
push
push
mov
push
mov
mov
add
push
push
call
pop
pop
pop
pop
push
pushl
push
call
add
dec
jne
pop
push
push
push
call
mov
add
mov
or
je
add
mov
push
call
or
jne
push
call
or
jne
push
push
push
push
call
push
call
mov
mov
or
jne
mov
jecxz
add
mov
add
mov
or
je
test
je
and
jmp
add
add
push
push
push
push
call
pop
pop
mov
add
add
jmp
add
jmp
popa
push
ret
push
push
mov
mov
mov
cmp
ja
je
sar
js
rep
mov
and
rep
jmp
lea
lea
sar
js
std
rep
mov
and
add
add
rep
cld
pop
pop
ret
push
mov
sub
xor
inc
mov
mov
mov
mov
mov
mov
xor
mov
rep
mov
push
mov
mov
mov
mov
mov
or
pop
mov
mov
movzbl
shl
or
incl
dec
mov
jne
mov
mov
mov
and
shl
add
cmp
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
movzbl
imul
xor
mov
mov
inc
cmpl
lea
mov
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
cmp
lea
lea
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
test
mov
jne
jmp
sub
sub
mov
shr
sub
test
mov
mov
lea
je
cmp
jl
jmp
cmp
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
sub
mov
shr
sub
mov
sub
cmp
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
cmpl
mov
mov
mov
mov
mov
mov
mov
jge
andl
jmp
movl
mov
add
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
sub
shr
add
mov
add
shl
mov
mov
add
cmp
mov
lea
jae
mov
shl
mov
mov
movzbl
shl
or
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
mov
sub
shr
add
xor
cmpl
mov
mov
setge
lea
mov
mov
sub
incl
mov
mov
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
mov
mov
lea
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
andl
mov
lea
jmp
sub
sub
mov
shr
sub
cmp
mov
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
shl
mov
lea
movl
movl
jmp
sub
mov
shr
sub
sub
mov
add
movl
movl
mov
xor
mov
inc
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
mov
xor
inc
mov
shl
mov
sub
add
cmpl
mov
jge
addl
cmp
jge
mov
jmp
push
pop
mov
shl
lea
movl
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
sub
mov
shr
sub
mov
lea
decl
jne
sub
cmp
mov
jl
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
sub
mov
lea
jmp
sub
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
shr
add
cmp
jb
sub
or
dec
jne
mov
add
shl
movl
xor
inc
mov
mov
cmp
jae
mov
mov
movzbl
shl
or
shl
incl
mov
mov
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
mov
add
jmp
sub
mov
sub
mov
shr
sub
or
mov
lea
shll
decl
jne
inc
mov
je
mov
mov
inc
sub
inc
add
mov
mov
mov
dec
incl
inc
test
mov
mov
jne
jmp
mov
jmp
mov
leave
ret
subb
add
stos
add
jp
add
lahf
test
add
lds
add
out
add
cmc
test
add
push
stos
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
fs
imul
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
jb
arpl
fs
jae
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
jne
insb
push
jb
je
arpl
add
push
imul
jb
add
add
imul
jae
push
push
inc
push
xor
cs
dec
dec
add
add
jae
popa
addr16
outsl
js
