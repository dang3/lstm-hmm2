pop
je
fmulp
lret
out
sbb
dec
lret
cwtl
lcall
es
stos
sti
or
ss
fiaddl
lret
or
fimull
into
inc
lahf
fsubp
or
rolb
lret
or
rorb
into
inc
lahf
jecxz
addb
jae
lret
dec
or
inc
lcall
jecxz
dec
and
inc
lcall
lret
dec
and
fmuls
and
or
iret
inc
lcall
fidivl
mov
pushf
xor
mov
lcall
xor
dec
xor
fiadds
test
lods
dec
lock
lret
cmp
ss
inc
ss
or
add
sti
add
xor
ror
adc
lret
and
and
and
jmp
das
dec
es
stos
sti
xor
mov
mov
into
lret
sbb
inc
mov
dec
or
and
xor
and
inc
mov
inc
mov
dec
xor
mov
bound
ss
xor
add
into
lret
and
ror
lret
cmp
das
dec
es
stos
sti
or
ss
lahf
ret
mov
lret
lahf
ret
mov
xor
add
or
stos
inc
add
into
lret
pushf
xor
lret
lahf
inc
das
inc
pop
inc
rolb
into
dec
icebp
leave
lret
mov
lret
shll
jb
xor
into
lret
cmp
lret
lahf
inc
das
dec
es
stos
sti
xor
sbbl
lds
decl
ss
xor
iret
push
decl
lret
jmp
fists
mov
leave
fistps
mov
lds
dec
decl
dec
decl
decl
jl
push
decl
or
ret
lock
add
push
decl
jl
dec
or
and
inc
add
into
lret
pushf
stos
fmul
lret
pop
lret
lret
sub
jp
mov
lahf
inc
das
stos
mov
and
xor
mov
or
mov
dec
xor
ret
or
xor
inc
or
mov
leave
lahf
ret
fcmove
mov
or
aad
int
xor
int3
leave
pop
dec
or
cwtl
lcall
nop
inc
enter
or
dec
or
and
xchg
dec
or
and
add
into
lret
into
lret
lahf
inc
das
dec
es
stos
sti
or
ss
pop
lds
dec
xor
out
leave
mov
lds
dec
xor
faddl
mov
les
mov
lahf
or
leave
lret
sbb
ss
inc
add
ret
push
cmc
into
lret
stos
imul
lret
inc
mov
lret
add
jge
dec
xor
fldl
loop
add
push
mov
dec
and
jecxz
jnp
inc
ret
lret
stos
or
in
ror
lret
push
mov
lahf
inc
das
dec
es
stos
inc
pop
dec
or
lcall
lret
inc
decl
xor
decl
decl
iret
inc
decl
sub
stos
add
into
lret
push
mov
push
ret
call
lret
lahf
inc
das
stos
sti
cmp
mov
lahf
ret
inc
call
xchg
inc
jmp
lahf
ret
fimull
adc
add
lret
insl
lret
sub
lret
out
xlat
lret
lret
das
stos
inc
mov
cmpsl
inc
dec
into
lret
lret
lret
xor
xor
movb
sti
add
mov
fadd
into
lret
enter
add
mov
fadd
into
lret
or
into
lret
or
add
popf
xor
xor
sbb
fcmove
lret
fs
add
ret
int3
jmp
lret
lahf
inc
das
stos
inc
mov
inc
mov
cmp
add
lret
ret
lret
xlat
xor
inc
das
dec
es
or
ss
fcmove
lret
ret
data16
sub
xor
ret
enter
lret
lahf
leave
cwtl
test
enter
lret
add
or
mov
cwtl
mov
mov
ss
inc
mov
inc
cmp
or
pusha
inc
mov
leave
mov
inc
sbb
pushf
popf
and
xor
xchg
sub
inc
mov
inc
mov
lret
outsb
stos
inc
add
into
lret
inc
sbb
cmp
loop
mov
xchg
scas
fisubl
mov
cmp
lock
pushf
jmp
ds
add
jp
cmp
mov
xor
and
shrl
xor
lret
lret
stc
leave
dec
jg
adc
cmc
adc
mov
xchg
int3
enter
xlat
fiaddl
pop
xchg
test
stos
imul
sbb
cmp
lea
test
mov
rcl
xor
inc
sahf
jp
jp
push
mov
outsl
stc
jbe
leave
pop
fmuls
shll
leave
dec
addl
pop
cld
sub
xchg
mov
xor
xchg
call
pop
xchg
pop
imul
inc
fstpl
movsb
movsb
mov
cmp
movsb
movsb
movsb
movsb
movsb
movsb
mov
jbe
cmc
lea
mov
les
push
adc
pusha
mov
xor
gs
movsl
lea
xor
movsl
fdivs
sbb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
out
sti
iret
push
es
clc
lret
and
add
dec
testb
push
cmp
ret
notl
sub
in
xor
loopne
xchg
xchg
out
aas
sbb
das
dec
fsubrp
cmp
cmp
pusha
inc
xchg
stos
movl
stc
lds
pop
es
movsb
gs
mov
cmp
xchg
mov
xor
xchg
add
cmp
ljmp
add
add
repnz
add
pop
into
test
leave
mov
cli
lahf
cmpl
lret
js
or
out
xchg
push
add
mov
pop
inc
mov
rclb
and
adc
scas
into
icebp
mov
jnp
jmp
call
cltd
jp
ljmp
sbb
mov
mov
mov
cmc
jno
ljmp
fiaddl
inc
jg
or
insl
adc
dec
into
cmp
push
or
incl
out
add
jge
std
xchg
test
pop
inc
add
cmp
repz
push
xchg
loopne
xor
jmp
dec
aam
iret
inc
mov
es
push
js
jo
lret
mov
xchg
ficoml
out
xor
repz
push
adc
adc
and
fisttps
loopne
leave
and
push
out
aas
out
cltd
sbb
pop
and
add
dec
insl
jg
pushf
xlat
ja
cmpsl
or
push
ret
pop
popa
add
push
add
sub
mov
into
inc
jns
jo
daa
cmp
mov
aam
cmp
pop
stos
sbb
fstpl
movaps
inc
xor
gs
and
repz
ja
xor
jge
add
push
insb
jne
mov
lods
pushf
xor
mov
roll
lret
mov
inc
mov
xchg
int3
rcrl
fists
add
dec
jg
hlt
loope
push
out
loopne
std
jae
xchg
mov
jnp
imul
loopne
imul
rcll
rcr
sbb
cmp
enter
pop
push
cmp
pop
cmp
icebp
sub
sub
jno
out
das
inc
out
pop
cld
mov
xor
std
fidivs
out
mov
inc
push
insb
stc
aad
cmpsl
out
jge
xor
lret
mov
xorb
or
jp
xor
sub
pop
and
addr16
push
cmp
or
jp
inc
scas
pop
ret
jmp
lock
dec
aas
or
jo
adc
xor
adc
xchg
cwtl
call
xchg
push
pop
sub
ret
inc
xchg
lret
cmp
cmp
adc
mov
adc
push
icebp
and
pop
mov
out
je
lret
or
aaa
mov
sub
or
sbb
pop
sbb
or
mov
das
sbb
out
dec
and
leave
mov
ds
mov
push
sub
cmp
mov
add
les
xor
sub
jg
sbb
das
pop
repz
xchg
clc
mov
movsb
cmp
cmp
ret
add
mov
call
nop
jo
data16
xor
out
rcr
insb
in
cmp
mov
out
or
fstpt
jg
xor
mov
jnp
sbb
daa
jb
imul
add
outsl
fs
lcall
adc
inc
xor
mov
dec
xchg
xchg
addr16
loopne
jns
push
clc
sbb
adc
enter
push
es
jns
cmp
or
jno
sti
push
or
shl
insl
jmp
xlat
adc
xor
mov
sub
add
push
aaa
dec
movl
push
icebp
test
fdiv
pop
adc
mov
into
jne
popa
fidivl
pop
xchg
imul
push
sub
dec
sarl
fisubrs
mov
or
pop
or
pop
sub
jae
xchg
enter
test
push
xor
dec
stc
cs
jb
loope
mov
pop
or
in
add
sbb
xor
push
arpl
xlat
or
xor
lret
or
xchg
mov
cld
fmull
sbb
insl
and
sub
shrb
push
outsb
xchg
imul
pushf
pop
addr16
dec
mov
out
mov
imul
imul
scas
or
jnp
mov
loopne
cld
cli
aad
cmp
in
and
cld
idivl
cmp
adc
shll
mov
or
push
jg
aas
inc
mov
and
ficoms
imul
test
loope
push
data16
sbb
pop
push
fmul
cmc
push
fimull
shlb
shll
sub
pop
lret
repz
std
push
pushf
add
ds
and
push
jno
jp
add
push
jo
cmp
mov
or
daa
push
push
sti
inc
loopne
mov
pop
outsb
inc
push
pop
inc
or
jecxz
push
lcall
and
fcoms
push
mov
out
push
data16
packssdw
outsl
push
pop
mov
scas
test
sbb
mov
cmp
testl
and
adc
push
xchg
icebp
push
xchg
inc
es
ljmp
jge
daa
jecxz
cmc
imull
dec
xor
fwait
pop
movsl
mov
sahf
mov
out
testb
and
ret
xor
fistpll
aas
test
shll
movsb
or
or
push
aas
subl
adc
pop
jnp
add
fcmovnbe
push
pop
or
insl
fwait
or
jecxz
mov
mov
imul
rorl
loope
mull
or
pop
push
iret
js,pt
ficompl
cltd
adc
mov
ja
dec
xchg
jmp
out
aaa
aad
ret
mov
pop
arpl
sub
insl
mov
scas
lcall
cs
paddq
add
xor
pop
mov
ret
rcrl
iret
out
stc
imul
lahf
push
mov
adc
fstps
and
ja
sbb
pop
lahf
sbb
es
push
stc
ffreep
imul
add
pop
sbb
adc
add
pop
in
lret
enterw
aam
es
fwait
add
xchg
jns
fwait
mov
das
loop
ljmp
or
adc
mov
xor
push
push
sbb
divb
iret
ss
jp
pop
sub
jl
daa
mov
sbb
dec
mov
sarb
sbb
loope
mov
mov
ret
adc
ss
pop
subb
jle
pop
mov
add
test
cs
xor
shr
int3
sbb
push
jo
adcb
sub
nop
test
mov
push
std
push
fidivl
jo
sub
or
ret
out
adc
adc
ret
mov
push
fxch
rcrl
clc
rcll
das
sbb
call
nop
aam
mov
or
or
or
push
jnp
int3
jle
popf
xlat
out
inc
dec
dec
adcl
dec
adc
jae
clc
jg
sar
pop
call
mov
das
mov
jle
cmp
sbb
or
push
pop
cmp
jns
jbe
int3
xchg
out
push
js
lret
xchg
dec
pop
or
pop
jp
push
pusha
outsl
out
xchg
mov
add
repz
inc
mov
icebp
add
nop
test
fprem
js
jo
dec
xchg
clc
push
push
into
clc
jbe
roll
sub
aad
fimull
aas
f2xm1
sub
mov
dec
adc
sbb
enter
mov
cmp
jns
inc
push
insb
in
jg
andb
das
mov
das
xchg
mov
pusha
pusha
mov
fnstenv
dec
test
sbb
clc
rorl
inc
add
dec
and
pop
pushf
imul
sub
push
pop
lahf
cmp
cmpsl
add
jmp
repz
inc
cmc
xor
inc
mov
and
fcoml
mov
in
jg
lds
jge
mov
pop
xor
mov
jmp
inc
sbbl
dec
das
pop
stc
roll
adc
icebp
dec
jecxz
imul
dec
cmc
leave
jg
adc
pop
fnstcw
push
adc
mov
inc
out
enter
adc
jb
cmp
sbb
ficomps
adc
mov
cmp
sbb
mov
fcmovnu
inc
and
push
mov
inc
mov
ret
scas
decb
xchg
fcompl
mov
jo
jg
inc
push
lret
popa
ds
cltd
dec
sub
addb
fimull
jae
pop
mov
je
imul
lcall
pop
aad
adc
enter
adc
push
mov
cwtl
ja
movsb
cmp
fsubp
stos
cmp
test
pop
fwait
ja
sub
sbb
mov
ret
ds
xor
repnz
add
push
sahf
mov
mov
or
jg
dec
adc
fs
push
inc
ja
cld
mov
inc
mov
dec
pop
push
in
addr16
imul
out
sti
lret
sub
cmpsb
cmp
leave
xchg
sar
pop
add
mov
cmp
pop
cmp
add
outsb
pop
mov
in
les
inc
pop
mov
push
inc
pop
push
sbb
fcmovne
loop
pop
add
mov
aam
stos
shrl
inc
testl
cmc
inc
scas
push
or
sbb
pop
xor
push
pop
push
pop
add
mov
fidivrs
ljmp
mov
cld
dec
dec
sub
dec
jp
sub
mov
mov
incl
sbb
ja
sbb
jg
cmp
mov
ror
shlb
out
popa
ret
pop
pop
jle
inc
pop
push
mov
or
push
cld
fnstsw
jnp
lock
sbb
mov
stos
jb
por
add
outsl
negb
push
inc
jmp
sbb
or
and
mov
fistl
jle
stos
pushf
movl
cmp
jns
xor
dec
bound
pop
xor
rcrb
stos
std
popf
fldl
dec
lods
rcll
gs
out
push
loop
stc
cmp
shll
lahf
jg
lods
mov
sub
ret
sbb
subb
add
stos
scas
xchg
and
sahf
repnz
jl
jns
push
pushf
adc
inc
xchg
fsubrl
sbb
cwtl
cmc
aaa
popf
mov
notb
pop
sub
xchg
lret
push
clc
imul
mov
into
stos
dec
lea
cwtl
pusha
icebp
out
push
sub
clc
jmp
sub
and
sahf
jns
cmp
dec
adc
fnstcw
dec
cmp
cmc
pop
dec
pop
addr16
and
jno
xor
push
fwait
cwtl
imul
dec
in
pop
dec
shll
mov
jmp
sbb
mov
add
sti
cwtl
pop
out
push
mov
test
fst
adc
lcall
sub
addr16
xor
dec
adc
xchg
jb
in
dec
and
adc
jge
das
sub
jnp
movzbl
mov
leave
int
das
gs
aas
cwtl
push
push
jecxz
ss
ss
push
outsb
pop
jo
inc
dec
inc
fnsave
mov
jno
lahf
je
movsl
jle
adc
fwait
andl
fistl
jmp
addr16
insl
fcomps
xchg
sti
test
jns
sub
or
insb
mov
jnp
mov
repnz
push
cmp
xor
fistpll
sbb
scas
pop
int
dec
mov
or
push
cmpsl
addb
cmpsb
pushf
dec
rorl
cmp
push
jmp
imul
dec
jns
cmpsl
xor
jb
push
pushf
jle
iret
sub
orl
pop
insb
imulb
inc
ja
sbb
pop
ljmp
push
cmp
dec
fcom
fdiv
mov
sub
sub
loopne
cld
pop
or
pop
int
and
sbb
jmp
movsb
mov
or
lods
jns
sbb
xchg
imul
adc
orb
cwtl
fdivr
lods
cld
mov
hlt
movsl
cs
cmc
pop
imul
into
lcall
xor
fs
push
mov
int
testb
je
jg
mov
je
add
jecxz
test
jne
loope
test
rcrl
dec
xchg
xor
add
sbb
inc
push
and
lret
fwait
inc
faddl
pushf
ds
mov
and
mov
push
lods
cld
hlt
dec
call
push
mov
imul
inc
daa
xchg
imul
pop
inc
ds
push
push
popa
jo
cmp
mov
mov
cld
lret
mov
inc
push
push
inc
or
and
nop
push
int3
push
pop
popa
scas
negl
loope
pop
push
sbb
xlat
sub
je
push
cwtl
lcall
pop
jnp
in
jge
or
mov
pop
int
mov
jnp
ficoms
int
sbb
enter
jno
xchg
repnz
insl
ficoml
dec
outsb
adc
in
fcomps
addr16
mov
and
push
inc
and
movsb
movsb
movsb
movsb
mov
push
jp
push
xchg
and
in
sub
mov
and
movsb
mov
adc
mov
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
or
out
pop
push
push
pop
loope
popa
sub
scas
dec
popf
out
sub
mov
xchg
fsubrl
pop
fidivl
adc
sbb
cmp
repz
pop
ja
lock
mov
hlt
adcb
mov
or
xor
and
lds
cmc
iret
icebp
jmp
mov
dec
test
pop
adc
cmp
mov
iret
stos
lods
jle
jo
call
push
cmc
mov
ret
negl
inc
std
jge
lds
cwtl
js
mov
loop
xor
test
fxch
divl
xchg
std
dec
jmp
in
sbb
dec
arpl
dec
ds
ret
out
or
sbb
popa
stos
or
sub
mov
mov
inc
xor
pop
pushf
sbbl
gs
aam
inc
and
mov
popa
jg
push
mov
ret
mov
stos
xchg
and
scas
or
pop
push
mov
and
or
or
push
cs
pop
in
xlat
lea
hlt
sub
flds
sbb
ja
pop
mov
and
pop
pop
in
sahf
sub
inc
xlat
loope
pop
xchg
jne
jne
push
mov
sub
or
cmc
fadds
add
dec
sahf
out
outsb
cltd
pop
cmc
dec
xchg
sub
xor
or
jns
mov
jecxz
outsb
cltd
sbb
dec
xchg
sub
nop
jnp
adc
arpl
cltd
ret
sub
xor
sbb
jo
or
fnstsw
push
adc
xlat
pop
loope
jle
dec
je
shlb
mov
cmp
jb
ret
xchg
cmp
push
ret
mov
lahf
cmp
popf
cmp
push
lahf
mov
push
xchg
lahf
mov
popf
cmp
imul
mov
fs
mov
lahf
pop
add
push
inc
rorl
sbb
cmp
push
fsts
daa
cmp
inc
shrl
xchg
repz
pop
or
clc
fsin
inc
dec
jae
loop
pop
shll
or
sub
in
fdivr
out
jbe
mov
xchg
int
pop
cmp
ret
xor
loopne
lcall
pop
inc
shl
sub
push
push
shrb
pop
mov
imul
out
inc
imul
inc
pusha
dec
rcl
adc
sbb
fwait
popf
pop
ds
movsl
je
leave
push
dec
dec
loop
sti
jp
ret
xchg
rorl
dec
sub
pusha
push
jg
call
adc
aaa
cwtl
jle
negl
jns
int
sub
test
arpl
add
outsl
daa
xchg
sahf
aad
add
loope
or
xchg
ljmp
fwait
push
xchg
dec
sbb
aaa
cmp
and
aad
mov
into
inc
mov
rolb
mov
jp
push
arpl
fadd
push
gs
je
cwtl
push
dec
sub
fisubrs
sti
out
mov
out
sub
je
sub
ret
das
cmp
lahf
sub
xchg
mov
sbb
pushf
nop
mov
mov
push
out
push
stc
movsl
push
mov
rcrb
jae
shl
in
mov
jmp
mov
mov
sub
sub
arpl
mov
int
adc
inc
mov
ss
push
es
mov
jle
mov
sub
jle
add
nop
es
movsb
movsb
mov
movsb
movsb
movsb
call
movsb
fsubrl
movsb
movsb
mov
movsb
movsb
movsl
mov
pop
jno
cwtl
jne
movsb
stos
ret
push
inc
popa
das
mov
mov
lods
xchg
test
dec
sbb
cmp
movsb
movsb
jns
mov
movsb
sahf
dec
or
xor
test
std
xchg
movsb
movsb
mov
test
add
xchg
xchg
nop
imul
repz
in
xchg
pop
data16
loop
fbld
sbb
push
cs
stos
daa
in
lods
loop
inc
adc
mov
pusha
or
mov
push
push
push
xchg
or
int
int
cltd
xor
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsl
fdivrs
xchg
daa
pop
xchg
pop
jb
outsb
adc
jecxz
sahf
pop
stos
stos
js
orl
sub
ret
or
xchg
or
repz
xor
jle
sbb
sub
aad
dec
stc
cli
orb
and
iret
out
add
adc
push
mov
add
jmp
push
pop
dec
mov
jb
daa
inc
test
stos
mov
iret
xchg
nop
dec
adcl
rcrb
lahf
das
stc
shlb
sbb
xchg
sbb
mov
mov
ds
pusha
sbb
push
lea
pop
loopne
cmc
aam
mov
jae
lock
cwtl
push
or
inc
sub
mov
sbb
sbb
sbb
fdivs
outsb
xlat
xchg
jge
push
jb
ret
push
lret
jg
dec
jo
jg
sbb
mov
flds
adc
ret
ss
aas
movsl
xchg
fisubs
icebp
xor
inc
mov
inc
pop
add
outsb
inc
adc
push
in
cs
pushf
mov
cmp
imul
jb
cmp
outsb
cld
dec
dec
shrl
xchg
mov
inc
repnz
xchg
dec
xor
lods
cli
mov
cmp
xchg
pop
ret
and
inc
or
sub
sub
ret
das
cmpb
sub
dec
push
jno
dec
adc
mov
pop
jae
jmp
or
lahf
mov
inc
cmpsb
push
pop
outsb
ss
pop
or
xchg
push
adc
gs
jb
push
jmp
std
mov
mov
lds
out
jge
sbb
push
pop
aam
cmp
fbstp
and
int
mov
pop
xchg
fidivrs
push
outsb
mov
pop
icebp
repz
stc
push
add
int
pop
in
xlat
push
mov
lret
leave
pushl
cmp
ss
xchg
movsb
jge
lcall
negl
clc
xchg
jo
push
mov
outsl
out
jo
mov
fldt
lret
das
imul
nop
or
pop
push
shrl
dec
sbb
jmp
add
adc
add
insb
shll
std
mov
mov
adc
sbb
add
aam
pop
xor
dec
push
dec
pop
movsl
fscale
adc
andb
aaa
fs
push
cmp
dec
inc
ret
xchg
movsb
movsb
mov
filds
and
or
andb
mov
daa
inc
mov
pusha
scas
daa
xchg
add
xchg
loope
jns
shlb
mov
loope
imul
dec
pop
mov
jno
xor
into
clc
and
xor
cmp
xorl
jo
push
scas
movsl
inc
jbe
into
or
in
hlt
std
ss
xchg
push
in
mov
out
cmpsb
and
in
pop
xor
iret
out
mov
subb
mov
mov
xchg
mov
push
jp
pop
fdivl
pop
test
imulb
enter
inc
iret
clc
xchg
xchg
cmpsb
rclb
lea
pushf
xchg
mov
lds
mov
gs
mov
divl
subl
gs
cmp
je
popa
into
pushf
das
mov
adc
stos
and
jl
xchg
mov
mov
call
das
cmp
icebp
je
mov
mov
cmp
cs
insb
or
cmp
adc
gs
iret
jecxz
outsb
pop
in
loop
iret
mov
ss
movsb
inc
mov
rcll
and
fwait
mov
xchg
adc
cmc
jae
cmp
aam
mov
and
mov
cmpsl
stos
sub
add
mov
dec
shrb
xchg
in
bnd
int3
mov
in
fstpl
ds
loopne
test
lods
inc
in
jmp
call
push
mov
cmpsb
adc
inc
xlat
xor
in
call
popa
cmp
aam
jl
xorb
cld
clc
in
lret
movsb
add
loop
gs
mov
scas
mov
mov
fsubrl
pusha
loope
mov
scas
jp
xchg
into
add
mov
mov
mov
repnz
incb
mov
les
inc
adc
stos
jl
pusha
loopne
cmc
je
mov
pop
fistpll
xor
and
shrb
xor
ss
enter
pusha
xor
fcmovu
cmp
adc
cmpsb
add
stos
jbe
jns
push
out
push
pushf
repz
mov
test
mov
scas
test
cmc
clc
cltd
repnz
popf
sub
cs
mov
mov
enter
test
push
shll
outsb
out
stos
rcrl
loopne
out
mov
jno
movsl
or
dec
xchg
add
mov
mov
fsubr
not
les
int
leave
push
push
lods
xor
sub
mov
addr16
addr16
mov
mov
aas
imull
add
out
xchg
cs
push
int3
xor
push
es
xor
and
sbb
aaa
mov
in
adcl
pop
mov
orb
cmc
cs
les
stc
mov
dec
cmp
lea
jne
fs
mov
lahf
movsb
and
mov
out
repnz
push
or
mov
mov
jmp
sar
arpl
mov
push
xor
add
and
or
and
mov
in
nop
out
mov
es
add
push
es
cmc
movsl
jp
dec
and
dec
repz
mov
lods
dec
push
pop
jle
insb
add
xchg
imul
pop
lea
cmp
dec
xchg
mov
add
das
mov
push
add
repnz
cmp
out
mov
mov
inc
fisubl
xchg
push
outsb
mov
popa
imul
mov
in
and
lods
mov
jno
ljmp
movsb
xor
mov
ficoms
hlt
les
test
in
sbbb
pop
clc
pop
cmpsl
inc
sub
sbb
mov
mov
jbe
xrelease
fisubrl
roll
push
stos
pop
out
imul
add
out
cmp
cmp
test
movsb
mov
mull
mov
ror
insb
pop
cs
mov
pop
or
adc
movsb
pusha
push
sbbb
les
std
in
dec
out
popf
movsb
pop
mov
add
nop
mov
movsl
lds
xor
mov
ret
rclb
icebp
inc
cltd
lods
push
bound
daa
pop
lcall
push
aad
in
lcall
cmpsl
insl
loop
imulb
and
push
fmull
fwait
gs
or
sub
out
xchg
mov
or
aaa
xchg
test
stos
ljmp
sbb
xlat
ss
cltd
and
xor
xchg
xchg
out
push
nop
test
arpl
test
add
les
mov
xlat
mov
or
jle
movsb
push
aaa
xlat
adc
sub
add
push
or
xchg
cmc
movsb
mov
xchg
inc
cmp
xchg
and
stos
xor
mov
call
sbb
xchg
inc
xor
push
mov
push
jbe
xchg
xor
pushf
dec
lods
int3
push
sbb
or
xor
daa
add
stos
das
in
or
mov
outsl
or
push
mov
nop
les
out
xchg
in
mov
lahf
in
mov
xor
std
fwait
mov
test
daa
xchg
insl
xchg
stos
and
mov
incb
jne
xchg
inc
or
loop
add
jmp
ds
aad
sub
stos
jns
adcb
mov
and
sub
lret
fidivrl
cli
lods
mov
mov
roll
adc
adc
mov
shlb
push
push
cwtl
jno
or
arpl
orl
mov
add
or
pop
xchg
adc
in
ds
cmpsl
mov
or
lods
fimuls
adc
and
movsb
orl
adc
fdivrl
insl
fs
jbe
adc
cs
sbb
arpl
repnz
mov
jb
outsb
push
sub
iret
cmpsb
inc
mov
arpl
cmpsl
icebp
lods
mov
call
pop
bnd
mov
adc
hlt
adc
in
push
mov
test
int3
into
mov
inc
mov
movsl
inc
shll
jb
mov
add
in
iret
in
insb
daa
lods
outsl
std
scas
sbb
shlb
cmpsl
jmp
mov
loop
pop
xchg
nop
test
int3
movsb
into
stos
jne
push
xchg
pop
jo
cmpsb
int
out
mov
fs
shl
xor
test
add
mov
push
jbe
test
dec
add
data16
mov
subl
leave
movsb
or
cmpsl
jle
jno
dec
jbe
xor
xor
push
inc
in
mov
aam
loop
cmp
xor
adc
jecxz
and
hlt
out
add
xchg
fs
sub
call
ret
aam
int
repnz
xchg
outsb
ret
or
inc
cmp
enter
add
xchg
mull
notl
pop
push
cmpsb
adc
xchg
aad
push
add
js
into
loopne
addb
xchg
divl
roll
call
sub
scas
aam
enter
lods
mov
add
mov
xchg
scas
divb
js
es
lea
in
test
scas
xchg
sub
sub
movsl
hlt
fimull
jmp
loop
aaa
aam
daa
test
mov
and
ret
les
int3
xor
int3
jl
xchg
adc
or
in
mov
jge
inc
xor
enter
mov
xchg
adc
imul
mov
xchg
shl
mov
mov
push
xchg
or
xchg
sub
das
daa
and
sbb
daa
and
clc
mov
in
mov
fcoml
dec
adc
addr16
mov
mov
mov
js
lret
mov
dec
enter
rol
shrb
jnp
fidivs
nop
in
aam
mov
arpl
mov
aas
xchg
mov
int3
push
stos
outsl
xor
mov
or
inc
das
outsl
aam
insl
xchg
mov
jg
push
mov
xacquire
dec
and
dec
cltd
add
out
outsb
inc
mov
in
loopne
adc
add
aam
jo
cmc
adc
shll
push
cmp
test
jg
iret
mov
cli
popa
sbb
cmpsb
out
push
rclb
adc
arpl
out
mov
inc
test
mov
clc
lods
sti
mov
sahf
cmp
mov
int
and
cmpsl
mov
test
adcl
dec
push
mull
addr16
loopne
outsl
or
push
cld
sub
pop
adc
movsl
fisubrs
shlb
or
xlat
mov
shrb
in
add
mov
int3
and
xchg
adcl
cmp
js
in
jmp
iret
mov
rcrl
and
cli
movsl
test
scas
add
mov
jl
stos
les
xor
sahf
scas
mul
cmpl
movsl
adcl
pushf
icebp
sahf
cmpsb
enter
cmpsb
xchg
mov
push
dec
ss
rorb
pop
incb
mov
fisubs
outsl
push
out
xchg
add
cmp
data16
scas
out
adc
push
mov
xor
std
int3
les
mov
out
dec
int
jmp
leave
inc
in
sbb
mov
movsl
js
pop
lods
int
cmp
movsl
orb
test
in
rcll
in
push
mov
scas
xchg
addr16
sbb
push
jmp
mov
clc
mov
push
inc
lods
xorl
stos
movsb
daa
mov
cmp
sub
push
ljmp
ss
in
lahf
movsb
sbb
or
daa
pop
iret
stos
xchg
aaa
es
mov
xor
jge
int3
push
xor
cmp
int3
add
aaa
sub
fs
scas
or
mov
int3
fwait
movsb
cmpsb
lds
xor
test
jmp
leave
das
inc
mov
loop
xchg
fsubl
in
pusha
je
das
cmpsb
mov
insb
lods
in
jb
adc
lea
push
and
in
mov
xchg
in
jae
shll
lea
pop
add
mov
jmp
inc
cld
repz
mov
xor
push
outsb
adc
mov
cmpsl
jmp
ss
sub
inc
shrl
lock
or
subb
cltd
fcoms
addb
mov
cs
or
and
push
or
repnz
mov
cmp
mov
mov
fcoms
sub
sahf
cmpsb
ljmp
jmp
mov
push
push
js
ret
repnz
out
arpl
jp
xor
test
cmp
movsb
xchg
test
dec
adc
test
popf
mov
xchg
test
test
popf
sbb
imull
data16
ljmp
add
out
call
mov
dec
pushf
aaa
enter
lods
divb
and
mov
push
and
call
scas
adc
sbb
stc
or
aaa
decl
mov
ss
pop
or
sbb
lret
fisubs
loope
mov
or
sub
movsb
cmpsl
les
nop
mov
dec
mov
push
adc
pop
movsb
xchg
push
xorb
pop
sub
lds
lret
xchg
cmp
cmpsb
ret
iret
int3
pusha
mov
cmpsb
cmc
fs
mov
sti
in
sbb
aas
or
movsl
or
je
adc
roll
push
jne
data16
movsl
movsb
xor
jmp
push
xor
add
test
and
fwait
add
cs
aad
sub
push
mov
inc
sbb
cmpsl
movsb
add
scas
mov
movsb
cmpb
out
sti
es
adc
pop
in
shrb
popf
xor
test
repnz
xorl
sub
cmp
mov
add
cmpsb
ss
outsl
insb
xchg
mov
sti
arpl
aam
test
sub
cli
xchg
and
lock
inc
out
fs
call
subb
cwtl
adc
out
xchg
dec
fmull
xchg
fldcw
mov
shlb
sub
stc
cmpsl
leave
dec
fs
loopne
mov
sub
test
mov
mov
fwait
mov
mov
mov
ret
sarl
outsb
movsb
push
sahf
mov
test
icebp
nop
lods
cmp
or
daa
in
inc
inc
sbb
test
mov
pushf
dec
push
cs
and
ret
or
mov
shl
lods
scas
mov
mov
fs
xchg
jo
loopne
movsl
cmpsb
lock
in
repnz
ljmp
mov
data16
pop
jmp
mov
sub
stos
dec
in
and
les
push
gs
pop
mov
push
xchg
addl
cmp
nop
cmp
xor
cld
fcompl
mov
add
pop
jle
movsl
out
push
fcompl
push
xor
jecxz
inc
dec
mov
mov
int3
xchg
xchg
mov
jae
insb
push
aam
test
out
lock
jg
out
sbb
xchg
out
cmpsl
push
jge
rcrb
in
sbb
and
cmc
sub
test
add
sbb
sub
nop
jle
mov
cwtl
mov
jo
enter
inc
mov
aaa
in
inc
inc
mov
data16
nop
pop
sbb
addb
bound
mov
mov
insb
cmc
xchg
inc
dec
addr16
xchg
mov
test
cmp
das
dec
aaa
push
movsl
cmpsb
addl
mov
sub
adc
popf
fs
nop
add
movsb
movsl
loope
push
and
mov
je
inc
add
out
stc
sub
mov
test
divb
jno
add
fs
cmpb
outsb
adc
orb
aam
mov
xchg
add
cmp
sub
push
add
inc
inc
ljmp
cwtl
and
movsb
pushf
clc
lret
hlt
mov
and
nop
sub
jle
aaa
adc
mov
outsb
hlt
xor
mov
pop
lods
adc
mov
int
push
data16
in
jns
insb
repnz
mov
jmp
je
xchg
and
rcrb
dec
cld
notb
mov
add
lods
movsb
mov
pop
xor
mov
mov
jns
xchg
mov
nop
daa
test
mov
fwait
push
in
lods
int3
jmp
sbb
lods
sbb
pop
les
add
lods
jno
cld
add
lods
pop
fldl
xchg
shl
loope
inc
adc
or
xchg
or
or
test
hlt
add
mov
outsl
dec
pushf
pop
dec
inc
cmp
xor
mov
test
bound
sub
pushf
int3
mov
std
testb
pusha
pop
adc
xchg
dec
and
adc
mov
lahf
sub
cmpsl
and
and
mov
xor
movsl
mov
mov
fwait
xchg
push
dec
push
lock
jecxz
in
sub
stos
xchg
addl
cs
aam
rcll
xor
in
std
outsl
daa
inc
mov
mov
xor
mov
xor
aam
lret
mov
inc
lods
cmpsb
sub
and
loope
xorb
dec
insl
sub
xchg
inc
pushf
mov
rclb
push
sahf
test
jae
pop
cmc
stos
aam
testb
cmp
inc
je
pop
jl
mov
sbb
adc
cmpsl
mov
popf
xor
lods
cli
mov
mov
test
loopne
mov
lods
xor
inc
inc
and
ljmp
mov
test
loop
rol
xchg
xor
mov
fsubrs
loope
mov
jb
mov
in
mov
xorb
ja
push
or
adc
mov
push
gs
nop
mov
mov
adc
insb
and
dec
cmpsb
jg
sub
in
arpl
mov
leave
ret
pop
push
xorl
push
xchg
xchg
mov
inc
loope
sub
jg
and
fs
pusha
sub
sub
les
and
flds
int3
dec
leave
cmp
insb
test
sub
push
lds
in
mov
lds
mov
push
inc
int3
popf
jle
popf
movsb
jo
mov
cmpsl
and
xor
adc
es
stos
out
add
idivb
adcb
bound
hlt
addr16
test
jbe
add
hlt
addr16
lock
xor
fstps
xor
cmp
lods
mov
mov
imul
sub
inc
add
sbb
jle
adc
stc
ljmp
divb
in
int3
push
mov
cmp
call
stos
mov
adc
mov
hlt
mov
insb
ljmp
popf
mov
popf
call
xor
cwtl
subb
adc
mov
xchg
push
sub
popf
fs
pop
and
enter
cmpsb
mov
sbb
mov
lcall
test
dec
out
dec
pusha
shlb
jl
je
xchg
mov
xor
repnz
outsl
cmp
mov
sub
lock
or
int
fsubl
mov
aaa
xchg
jmp
jb
int3
pop
pusha
xor
lret
mov
addr16
sub
inc
sbbb
xchg
call
ret
repnz
in
mov
add
sbb
pop
push
mov
cmp
insl
xor
push
clc
mov
cmp
xchg
xchg
cld
pusha
jge
cwtl
mov
bound
test
lea
mov
mov
pop
jne
ja
jb
sbb
jno
mov
cld
push
or
cmp
mov
xchg
push
addr16
into
addr16
out
inc
sub
ret
lock
sbb
pop
lret
push
push
fucomip
es
shl
mov
cld
and
mov
dec
pop
xor
fildl
aas
push
int3
nop
pop
sub
push
in
push
cwtl
repnz
cmp
lret
ret
or
inc
cmp
jns
xchg
push
fstl
adc
inc
jne
shrl
xchg
cwtl
leave
aaa
sbb
mov
das
lcall
push
ret
jae
addr16
xchg
pop
or
in
in
sub
jge
xor
cmp
mov
adc
test
pop
das
inc
into
mov
arpl
scas
inc
or
add
fnstcw
lock
pushl
sbb
add
and
xchg
jnp
pushl
mov
pop
dec
aaa
dec
jnp
ljmp
xor
ret
out
pop
adc
std
in
jbe
outsb
mov
inc
loope
and
jbe
dec
aaa
dec
mov
stos
sbb
std
push
jo
jb
dec
mov
in
rorb
jge
mov
pop
ds
daa
sbb
pushf
inc
bound
xchg
dec
jo
or
adc
dec
fdivrl
outsl
mov
dec
dec
repz
adc
addb
mov
push
ret
xlat
out
dec
xorl
pop
sub
inc
pop
out
aas
dec
xorb
roll
cwtl
push
mov
imul
sub
inc
sbb
mov
rol
idiv
adc
out
arpl
add
iret
scas
loopne
mov
lcall
mov
inc
dec
mov
sbb
test
pop
ret
cltd
xor
pop
rcll
sbb
out
inc
aaa
jbe
nop
imul
mov
sbb
call
pop
cmp
das
push
inc
dec
or
adc
xor
subl
add
dec
adc
xor
push
lea
mov
xor
push
or
dec
pop
or
aas
cs
mull
gs
push
lcall
mov
jns
cwtl
mov
and
ret
cmpl
xlat
sbb
cmp
push
aaa
leave
loopne
lods
xor
mov
xor
push
push
rcr
stc
and
gs
dec
sbbb
roll
scas
sbb
lret
fs
mov
mov
jns
adc
movsb
and
jecxz
sub
mov
lret
cmp
addr16
dec
push
mov
mov
mov
sbb
leave
sbb
mov
ret
fcomi
divl
lea
das
fidivrl
push
movsl
sbb
leave
or
hlt
mov
stos
inc
insb
leave
push
pop
lcall
rcl
stc
push
jle
jmp
inc
in
ds
mov
aam
jg
stos
cmp
jns
test
daa
scas
stos
nop
pop
mov
pop
adc
sub
dec
cli
or
pop
and
mov
hlt
jp
jnp
ja
cmp
stos
xlat
xor
popf
ficomps
ret
mov
ret
ja
cmp
rol
mov
push
or
cmp
int3
push
or
fcomip
sbb
jle
movsl
mov
test
pop
test
fisttpl
aad
cmp
ret
or
imul
mov
cmp
aad
clc
push
outsb
xchg
mov
fistpl
xor
adc
mov
addr16
nop
shrl
int
dec
mov
push
int3
cmp
aam
stc
xor
push
mov
mov
out
sarl
push
cmp
lods
iret
sbb
push
inc
adc
xor
sub
mov
aad
push
sti
test
pop
inc
fwait
daa
xchg
xor
sbb
dec
cli
aaa
inc
dec
dec
sarl
or
sbb
mov
jns
mov
xor
pop
sbb
stc
xchg
sbb
shlb
stos
mov
ret
stos
xor
mov
jle
sub
xchg
inc
popl
push
push
lods
ljmp
dec
insl
cmp
jo
push
xchg
xor
mov
or
fstpl
lock
mov
cmp
test
push
mov
div
sub
push
insl
jecxz
daa
push
pop
sbb
or
mov
push
aas
iret
push
lahf
push
push
xlat
push
lahf
aas
adc
hlt
pop
jle
xor
dec
or
inc
sbb
xchg
cmp
dec
sbb
pop
mov
pop
push
cmpsl
push
pop
jno
sbb
addr16
loope
xchg
imul
xor
jns
jns
mov
cwtl
jns
add
dec
mov
add
imul
add
mov
mov
pop
xor
fstl
popa
jle
mov
jne
pop
mov
data16
fcoml
fcomps
lcall
push
roll
cmp
pop
pushf
lods
lret
sub
pusha
add
and
dec
pop
mov
inc
jge
cmp
inc
fimull
or
xchg
xchg
inc
je
dec
xchg
ja
stc
push
shl
add
fwait
repnz
adc
daa
pop
xor
push
sbb
int
push
push
imul
enter
mov
push
repnz
lret
aas
adc
mov
push
xor
or
push
xor
rcll
inc
add
mov
in
jb
push
int3
sub
jb
mov
sub
sahf
fsubrl
sbb
sahf
shll
ss
and
xchg
movb
mov
xor
and
jnp
js
or
int3
sbb
hlt
inc
pop
mov
cld
test
jnp
in
push
pop
sahf
testl
cmp
in
xchg
xor
xchg
xchg
int
sub
cmp
ror
inc
or
sub
jne
pop
out
jecxz
and
pusha
sub
decl
push
test
adc
push
xchg
int3
ja
jnp
and
or
jp
stos
add
std
and
shll
xor
mov
dec
mov
pop
lcall
mov
add
inc
in
pop
sahf
ret
sbb
mov
icebp
jp
jbe
or
add
test
sub
ds
or
divl
sbb
imul
mov
js,pt
mov
inc
lret
sub
test
aaa
lods
fnsave
pop
movl
xor
repnz
insb
js
mov
inc
cmc
out
cltd
push
xchg
imul
cmc
aad
add
jle
mov
mul
cmp
xlat
ret
sub
xor
mov
pusha
mov
lock
stc
or
sahf
cmp
mov
sub
in
xchg
mov
in
jne
mov
xor
jmp
add
pop
lods
mov
ret
out
aad
ss
add
pop
scas
cld
fisttpll
xor
std
enter
push
jle
sub
ja
repnz
push
lret
push
lds
xlat
addb
ljmp
or
loopne
pop
pusha
jbe
add
add
xor
add
loope
stc
jge
out
movsl
pop
mov
jbe
rcrl
int
fildl
cmp
imul
in
and
mov
pop
jne
aas
hlt
add
cmp
and
stos
loopne
out
fistpll
das
jne
or
xor
push
cld
or
shlb
jge
sub
pop
jge
out
inc
add
ljmp
dec
sbb
and
fsub
inc
dec
shll
dec
mov
adcl
popa
jle
cs
lods
aam
mov
out
ret
xor
inc
int
hlt
rcll
add
in
popf
aaa
icebp
scas
stos
ss
fmull
push
pop
out
cmp
jne
imul
sub
sub
add
jnp
push
xor
jecxz
into
fnop
pop
pop
and
loopne
push
shrb
mov
sub
cli
pop
mov
jnp
jmp
inc
sub
enter
negl
dec
icebp
jae
popf
inc
outsl
pop
sbb
mov
lcall
mov
push
jae
xchg
out
add
in
lods
lods
mov
lock
imul
ret
mov
mov
mov
imul
xchg
outsb
mov
or
and
xchg
dec
stos
xchg
pop
jge
std
test
sbb
mov
icebp
or
aaa
rcll
fnstenv
mov
dec
insb
sahf
xor
dec
insb
popf
xor
or
mov
adc
mov
mov
add
dec
cltd
or
mov
push
aad
pop
inc
push
mov
sbb
or
in
push
add
fimuls
mov
les
cli
pop
adc
adc
xchg
lods
mov
rolb
test
lods
mov
repnz
enter
sbb
mov
fyl2xp1
mov
nop
dec
xor
adc
in
repnz
dec
adcb
dec
insb
push
sub
lret
mov
push
mov
mov
or
test
inc
lahf
mov
fucom
or
les
adc
pop
fs
mov
mov
xchg
loopne
jmp
enter
pop
cli
mov
in
sub
add
mov
pop
xor
jb
mov
cmpsb
jbe
push
adc
cmp
lahf
mov
or
sbb
in
jmp
cld
sbb
xchg
mov
adc
out
jne
cmp
sub
or
inc
sub
add
ficompl
or
or
sbb
mov
inc
lcall
fmulp
push
dec
mov
into
inc
addr16
pusha
lcall
leave
stos
std
std
jb
dec
add
dec
jno
sbb
mov
push
inc
jno
dec
ret
cmp
call
loop
pusha
cmp
inc
hlt
popa
dec
imull
lcall
push
xor
ror
dec
xor
jbe
jmp
dec
jno
xor
pusha
xor
and
lea
push
js
jmp
std
enter
rcll
push
cmp
mov
mov
insl
pop
outsl
or
sub
and
das
sbb
out
add
ret
xor
jmp
in
fiadds
and
into
mov
add
or
sub
pushf
insb
mov
xorl
lret
add
sub
pop
jo
jge
xchg
loopne
inc
add
jl
xchg
or
lds
dec
aas
loopne
jo
cli
and
push
in
pop
cmp
repz
inc
sub
lock
ja
in
lret
xor
rcl
sarl
in
inc
sub
pop
mov
xor
scas
stos
fimull
or
mov
stos
ficompl
jb
dec
push
sbb
inc
cmp
out
adc
ja
idivl
add
int
xchg
out
popa
jle
rcl
mov
push
adc
mov
out
movsl
inc
call
into
in
insb
sbb
mov
pop
dec
daa
iret
mov
inc
js
jae
cmp
icebp
pop
push
xchg
imul
jle
imul
inc
data16
sub
dec
jl,pn
add
pop
repnz
loope
adc
repnz
lds
push
push
jne
xor
add
or
mov
mov
push
arpl
shl
jb
push
shll
repz
shll
shrl
aas
sbb
fimull
or
adc
shlb
mov
sarl
jecxz
pcmpgtw
xor
add
nop
xor
into
xor
push
pop
adc
insl
mov
or
repnz
push
or
add
mov
mov
push
fcoml
fldenv
jns
add
loopne
xor
shlb
mov
mov
sbb
push
or
addr16
mov
mov
add
mov
sub
jne
cmovno
ret
daa
repz
or
pushf
sub
ljmp
jecxz
xchg
shll
mov
sub
jb
jnp
xchg
ljmp
mov
mov
sbb
inc
sub
mov
push
pop
cltd
sbb
out
mov
vmwrite
loope
mov
pop
setp
jbe
aas
jno
jl
dec
dec
cmp
into
inc
aad
lds
jmp
push
dec
mov
jne
mov
shlb
mov
rep
repz
outsl
mov
stos
in
cmp
jecxz
xchg
repz
dec
pop
mov
test
jge
inc
inc
lea
or
inc
adc
repz
push
hlt
rcrb
adc
adc
lock
push
sub
or
mov
xchg
or
sub
into
sub
data16
pop
repz
sarb
aaa
cs
mov
xchg
inc
mov
mov
jnp
mov
loop
test
jae
loope
mov
mov
sbb
mov
xchg
add
xchg
daa
jp
cwtl
outsb
or
xor
shl
les
push
std
icebp
mov
repnz
outsl
jno
push
lret
enter
adc
scas
adc
sbb
push
cmpl
push
push
sbbb
mov
cmp
imul
xor
jg
cld
jmp
add
push
loop
cmc
shl
loopne
push
cmp
data16
or
repnz
fnstsw
mov
lcall
insl
pusha
jecxz
test
xor
inc
add
or
in
lds
mov
push
sub
out
sbb
pop
dec
test
lahf
jb
stc
lock
loope
jmp
xor
cmp
add
jg
jo
pop
lret
les
daa
inc
adc
xchg
and
cmp
jl
xlat
scas
into
bound
repz
dec
addr16
mov
adc
mov
jmp
or
cld
and
fistpl
mov
jmp
inc
inc
xor
xorb
and
xchg
xlat
dec
sbb
mov
into
inc
jns
cmc
loopne
sub
test
push
mov
lcall
ss
and
cmpsl
out
pop
je
fsubrs
inc
leave
and
cld
add
repz
cwtl
mov
xchg
out
das
add
loope
add
verw
pusha
pop
add
ja
push
push
in
cmp
out
adc
ja
out
add
or
loope
lock
mov
mov
testb
leave
loope
adc
fidivrs
fwait
jge
enter
scas
insl
jl
jno
test
mov
gs
push
ret
ljmp
pop
leave
out
push
xchg
dec
subb
imul
xor
and
xor
test
mov
pop
mov
xor
pop
xchg
jmp
or
xchg
xchg
sub
xor
cmp
mov
sbb
xchg
dec
cs
lods
ss
mov
sub
xchg
mov
nop
sbb
jbe
pop
xor
dec
mov
in
je
repnz
fwait
jns
xchg
sbb
mov
xchg
and
xchg
lret
jmp
or
sub
into
es
std
push
rsm
in
insl
orb
ficoms
lea
xchg
call
pushf
sbb
cmp
jl
insb
pop
cmpl
test
dec
bnd
mov
test
cmpxchg
ja
push
mov
add
lcall
pop
push
punpckldq
add
sti
lds
into
sbb
sub
fdivrs
xchg
mov
push
mov
and
call
jle
fcmovnbe
xchg
ud1
andb
jns
arpl
cld
and
lcall
or
xor
push
icebp
mov
lcall
or
sbb
push
push
addb
js,pt
lea
push
or
cmp
or
xor
inc
shl
icebp
or
aas
xor
push
lea
dec
stc
sub
rcll
ret
inc
imul
mov
daa
add
prefetch
mov
shll
mov
lret
fistl
pop
mov
mov
out
mov
inc
mov
mov
pushf
jecxz
in
test
add
iret
inc
stos
incb
sbb
shrb
jg
jnp
flds
lahf
mov
pop
insb
icebp
mov
xchg
je
lea
add
mov
outsl
je
ja
dec
ret
outsb
shrb
push
dec
fisttpll
add
loopne
adc
leave
cmp
or
push
loope
xor
fmul
push
test
dec
shl
or
sub
dec
insb
sub
mov
in
scas
cmp
inc
scas
jg
lret
jns
sbb
movsl
sbb
xchg
lock
add
out
add
fstpl
popa
sbb
das
pop
fldcw
stos
xchg
mov
jmp
lods
mov
out
mov
xchg
mov
jbe
and
mov
add
es
pop
lret
dec
pop
add
sub
fcmove
sbb
cmp
dec
cmp
pop
test
imul
jge
loope
frstor
mov
jle
mov
insb
adc
fimull
mov
aam
add
xorl
jecxz
push
mov
push
mov
mov
add
pushf
cli
add
iret
mov
or
jl
aas
fscale
mov
add
adc
outsl
fidivrl
and
xchg
or
imul
sub
out
test
cmc
xor
add
dec
or
mov
adc
fisttps
addr16
adc
mov
mov
pop
xchg
sbb
pop
dec
sbb
insl
sar
sub
enter
xchg
popf
jle
lret
hlt
movsb
sarl
leave
xchg
xchg
jne
popf
cld
pop
jns
and
rolb
ljmp
rcl
iret
int
add
sahf
cmc
inc
xchg
dec
outsl
in
into
mov
insb
xchg
push
mov
dec
or
add
shll
adc
enter
pop
daa
cld
jp
dec
mov
sbb
outsl
aas
mov
xchg
add
js
push
sbb
inc
mov
insb
mov
mov
and
rol
scas
clc
dec
pop
fsts
push
or
out
inc
enter
jbe
enter
sub
mov
mov
rolb
xchg
jmp
inc
fmulp
sti
in
xor
out
mov
aas
mov
xchg
xchg
and
add
pop
faddp
push
ja
stc
rorl
mov
mov
iret
xchg
pop
pusha
sbb
icebp
mov
xchg
repz
outsl
fldl
adc
rcr
hlt
fs
push
push
pop
jns
push
rcr
repnz
pop
cmp
fisttpl
dec
insb
jb
and
mov
ret
xor
jg
push
xlat
imul
rclb
xlat
cmp
pop
scas
mov
push
dec
lds
lcall
add
add
jne
xchg
adc
push
fsubrs
cs
and
punpckhwd
adc
shlb
sub
jmp
ds
lock
push
xor
repz
in
or
int3
dec
ljmp
mov
push
xchg
aaa
clc
dec
push
movsb
xor
mov
out
scas
sbb
or
unpcklps
xchg
xor
out
xchg
test
push
push
lea
xor
rol
pop
mov
inc
xchg
lock
jb
cmp
xchg
fistl
int3
push
loopne
jl
test
fisttps
test
scas
sub
fwait
je
sarl
popf
insl
les
xchg
insb
sub
das
movsb
fs
sub
mov
xchg
sub
lock
add
ds
mov
insl
fmul
add
imul
push
adc
mov
dec
mov
mov
addr16
inc
daa
mov
xchg
xor
sahf
jge
mov
mov
dec
and
clc
aad
push
and
jge
inc
dec
pop
mov
out
ja
inc
ss
in
in
lock
es
inc
xchg
sbb
rolb
sbb
ret
dec
aad
movsb
sub
push
data16
mov
add
push
ret
scas
push
xchg
into
sub
in
add
lods
cmp
mov
inc
fwait
push
popf
push
mov
mov
cmp
dec
add
ds
dec
call
inc
jecxz
lahf
ret
lods
sub
and
stos
push
arpl
cmp
pop
cmpsl
xchg
mov
xor
inc
add
and
test
shrb
movsb
sub
mov
cmp
adcb
pop
mov
cwtl
and
xchg
push
call
sbb
sub
bound
repnz
sbb
cmp
jne
jo
ss
aas
sbb
push
int3
mov
sahf
aad
cmpsl
mov
push
gs
repnz
pop
lahf
jno
shll
loop
xchg
adc
pusha
ret
push
push
or
pop
lret
stos
mov
clc
add
insl
add
xchg
inc
data16
lods
rcll
sahf
lds
mov
sbb
pop
sahf
xor
jl
pop
or
jno
iret
jg
in
call
into
sub
out
fcomp
cmpsl
out
insb
cmp
repz
jl
movsl
jp
sti
ror
rorb
pop
mov
test
jae
jne
movsb
mov
adc
push
cs
fwait
mov
mov
pop
pop
mov
in
rorl
lret
xor
pushf
aad
mov
fldt
sub
xor
cmpsl
ret
sub
cmp
je
ds
das
pop
sbb
lret
ja
les
inc
incl
xchg
push
dec
add
cmpsb
dec
out
aam
scas
adc
or
test
movsl
mov
jns
xchg
sbb
and
out
mov
cmp
movsb
mov
test
bound
shlb
shll
cmp
xchg
or
ret
lahf
daa
sbb
int3
dec
outsb
ret
pop
add
or
xor
sub
mov
push
sub
xchg
out
xchg
push
mov
mov
js
add
xor
mov
orb
mov
mov
in
cmc
frstor
daa
jmp
clc
int
out
rclb
cmpsb
sbb
in
xlat
test
xchg
xchg
in
test
inc
test
xchg
hlt
mov
stos
mov
test
mov
scas
jge
aaa
push
rcrb
push
ss
pop
shlb
cmp
gs
ret
xchg
bound
sub
push
push
ret
xchg
les
mov
test
push
push
push
add
and
push
jl
sarb
adc
gs
xor
push
inc
shrl
aas
test
mov
or
mov
shrb
stos
mov
in
xchg
in
bound
ret
outsb
lods
arpl
lds
sub
mov
add
fcmovb
mov
cltd
xchg
scas
insl
pop
inc
dec
xor
mov
push
hlt
cmp
ret
je
rorb
mov
sahf
pop
mov
and
jno
iret
ljmp
cmc
push
jnp
mov
insl
pop
push
sbb
pop
sbb
sub
test
in
xor
xchg
out
insl
mov
sbb
scas
addl
adc
int
sahf
ret
and
in
pop
xor
pushf
mov
fnstcw
jl
sub
and
dec
xor
dec
cmp
sbb
sti
imul
xor
push
pop
insl
mov
lods
jnp
mov
xor
xchg
sub
insb
mov
jecxz
push
aaa
cltd
add
sub
cmpsb
lods
ret
mov
into
dec
mov
insl
xchg
mov
in
pop
into
mov
sub
mov
xlat
loop
mov
jo
sub
outsb
dec
test
mov
sbb
add
cmp
sub
into
icebp
pusha
cmp
push
add
je
add
mov
dec
cld
sub
push
shll
xchg
sbb
stos
jle
cmp
xor
pop
call
arpl
pop
ficoms
cs
cmpsb
cmp
dec
leave
inc
sub
les
movsb
imul
sub
mov
sub
pop
pop
sarb
daa
cmpsb
bound
mov
and
push
and
aaa
add
add
xchg
int3
cmp
jecxz
or
dec
and
call
mov
mov
dec
test
mov
sbbl
inc
mov
sbb
movb
stos
lcall
cmp
inc
lods
fwait
or
addl
movsb
jae
pop
pushf
bound
sbb
and
stc
mov
cmpb
mov
push
inc
mov
push
sahf
lea
data16
xor
dec
sbb
aad
jae
push
inc
loop
in
pop
mov
dec
adc
ficoml
iret
add
je
pop
bound
cmc
cmc
xchg
std
in
imul
mov
ljmp
cmpsl
cmpsl
mov
gs
pop
add
outsb
or
lods
dec
ljmp
lea
xchg
in
movsb
xchg
xlat
sub
mov
ljmp
addb
cwtl
addr16
push
lock
ljmp
pop
xor
and
mov
dec
sbb
in
adc
orl
lds
in
adcl
in
imul
or
in
sub
push
scas
xchg
mov
ror
addr16
stos
mov
outsb
fcmovnbe
cmp
mov
push
mov
pusha
sarb
test
fdivrs
les
xor
mov
jmp
in
push
xchg
aas
sbb
mov
in
cli
inc
in
xchg
fistpll
and
orb
and
inc
dec
insb
lahf
scas
cmp
jmp
ljmp
aad
cwtl
stc
ret
std
shrb
fistpll
cmp
adc
movsb
jb
ret
pop
xchg
add
inc
sbb
push
mov
add
xchg
ljmp
jecxz
or
cmp
sti
lcall
mov
and
sahf
shlb
outsb
lock
popa
dec
mov
clc
or
lret
inc
dec
cltd
ds
cltd
sub
sub
pop
clc
inc
shll
imul
xchg
jmp
scas
xor
insb
or
gs
cmpl
xchg
xchg
shll
addr16
push
inc
int
push
xchg
insb
xor
and
jbe
das
jo
mov
jae
jno
sub
pop
mov
fdivrl
xchg
out
ss
pop
jl
rclb
into
mov
aad
pusha
and
sub
pop
mov
push
mov
lret
sub
in
xor
cmpsb
je
mov
hlt
and
movsb
scas
jge
icebp
lods
push
addr16
repnz
jge
aas
rol
or
dec
mov
mov
ljmp
int
mov
pop
repz
rcrb
pop
mov
lds
push
add
int
jb
or
das
jle
idivb
xchg
iret
in
jmp
aam
in
pop
push
loop
mov
and
add
movsb
jnp
hlt
xchg
pop
icebp
pushf
pushf
insl
pop
shll
lods
outsl
add
out
push
mov
pop
xchg
ds
cmp
push
call
enter
adc
out
icebp
orl
cltd
loopne
pop
xchg
enter
in
paddusb
mov
xor
mov
and
in
cmc
test
push
inc
push
or
pop
pop
or
or
fldcw
fwait
cmp
divl
repnz
test
fmuls
xor
and
repz
repnz
pop
bound
jne
sti
or
sub
jnp
add
rorb
and
mov
fidivs
test
es
aad
add
filds
lds
push
mov
mov
cmp
in
hlt
adc
inc
mov
mov
mov
test
xchg
out
mov
ficomps
cmpsl
ret
sbb
in
cltd
or
pop
jo
mov
mov
jmp
mov
fs
inc
out
loop
add
dec
lock
hlt
xchg
test
shlb
ljmp
adc
divb
adc
and
loopne
and
xchg
in
loopne
cmpsb
stos
in
pop
mov
push
push
xor
push
mov
sub
or
adc
or
pop
dec
mov
sahf
and
int3
push
cmp
cmc
cmp
xchg
cmc
jmp
push
cmpsl
ds
mov
and
xchg
shrb
outsl
inc
aaa
jne
adc
add
mov
fcomi
mov
movsl
pushf
push
repnz
div
inc
jb
xor
loopne
shl
mov
loope
adc
push
xchg
movsb
add
push
aad
cs
mov
pusha
fs
inc
jg
insb
sbb
lret
sahf
mov
dec
xlat
xor
in
and
pop
sub
cs
cltd
loope
xor
hlt
xchg
adc
jg
and
jno
pop
jo
cmp
scas
lods
das
gs
es
sub
dec
sub
iret
ljmp
mov
lock
lods
addr16
addr16
rcll
mov
in
les
xchg
add
fimull
fs
xor
imul
data16
insb
out
mov
mov
ss
loop
push
mov
adc
sub
dec
adcb
sub
out
hlt
xchg
xchg
or
andb
inc
adc
loope
mov
movsb
movsb
andl
fstl
sub
jae
insl
pusha
jecxz
call
in
or
cmp
shll
dec
jno
cs
es
sub
lock
jle
mov
cmp
mov
pop
and
addb
es
movsb
fs
loopne
jecxz
adc
ljmp
or
pusha
in
loopne
nop
cs
out
inc
ss
push
lods
jno
outsb
shrb
dec
loopne
mov
push
add
sub
gs
ret
dec
sub
xchg
mov
cld
loopne
enter
inc
and
enter
xor
push
cld
pusha
test
lods
xchg
loopne
in
add
cmp
push
test
xor
jl
sub
mov
push
jo
dec
movsl
mov
lret
cmpsl
or
xchg
xchg
add
cmp
adc
xlat
loop
xor
fcompl
jecxz
push
fs
sbb
movsl
adc
stc
pop
fdivs
cmp
push
mov
loopne
addl
clc
pop
sbb
loopne
push
out
and
jge
mov
pop
mov
mov
in
xchg
iret
addb
cmp
mov
mov
or
add
push
push
insb
test
clc
stos
xchg
mov
sbb
dec
test
adc
fs
cmc
cltd
stos
je
pop
gs
mov
lock
dec
pop
in
js
addb
jp
enter
mov
fwait
sbbb
xor
fwait
stos
mov
fidivl
xchg
jl
push
sbb
push
mov
sub
adc
into
add
mov
pushl
stos
in
fidivrl
inc
pop
jecxz
imul
xchg
inc
push
lahf
int
loope
jl
jae
mov
add
sbb
inc
adc
sbb
mov
mov
test
adc
in
xor
insb
js
ret
mov
jge
inc
loopne
push
and
arpl
hlt
iret
std
scas
daa
mov
testl
insb
clc
mov
mov
mov
adc
jmp
fisubrl
nop
lods
or
mov
sub
fisttpll
rorl
push
fldenv
sbb
jge
mov
ja
mov
mov
jl
loope
fsubrl
push
subl
aas
mov
dec
sub
out
cmp
ljmp
and
cmp
lods
cmp
or
leave
jne
add
xor
push
in
pop
mov
xchg
dec
test
data16
arpl
in
stc
jbe
push
and
ss
pop
ret
and
xchg
js
inc
mov
xchg
pop
pusha
inc
imul
xchg
orl
mov
out
iret
in
repz
jmp
adc
nop
jecxz
adc
shlb
imul
iret
and
ret
sbb
mov
mov
sbb
ds
or
mov
ret
aad
cmp
loopne
movsl
mov
js
lods
inc
sub
add
idiv
test
or
pusha
mov
push
mov
mov
dec
negb
and
cmc
int
aaa
inc
je
add
push
dec
es
repnz
cmp
iret
jnp
pop
scas
test
negb
xor
jae
jbe
mov
xor
stos
out
subb
push
lods
jne
mov
xchg
aam
sbb
mov
and
movsl
mov
shr
cld
or
mov
mov
mov
dec
mov
and
mov
sub
movsb
stc
shl
inc
lahf
loopne
in
mov
andl
insb
sub
and
xor
and
sar
lea
and
loopne
and
dec
mov
push
mov
and
sbb
repnz
test
clc
call
cld
pop
jns
mov
out
cmp
mov
pop
daa
and
dec
mov
xor
cmpsl
dec
sbb
lods
jns
data16
and
neg
xchg
cltd
aad
out
jecxz
cli
jo
inc
stos
adc
or
mov
jns
imul
xchg
insl
inc
repz
mov
shlb
pop
push
lahf
inc
xor
js
inc
xchg
movsb
fxch
bound
iret
fs
stos
mov
jnp
mov
mov
loopne
push
arpl
xchg
lret
cli
cmp
adc
pop
mov
mov
daa
dec
scas
mov
movsl
scas
cmpsb
loop
bound
and
jl
mov
inc
push
cmpsl
fcoms
repz
cmp
out
in
cmpb
fwait
ret
xchg
aad
pushf
xchg
cli
xchg
dec
not
mov
inc
hlt
cmpsl
mov
in
jno
sahf
sbb
lock
or
test
int
repz
pop
enter
xorl
out
in
pusha
mov
jb
jecxz
repnz
pop
cmp
mov
in
and
xchg
mov
je
xchg
xchg
mov
subl
cmpsb
jmp
adc
popf
fsub
add
cmp
xor
jecxz
outsb
jmp
je
lret
mov
data16
and
cltd
lret
inc
stc
out
in
push
rorb
lahf
jge
dec
xor
mov
dec
aam
xor
xor
mov
jmp
xchg
out
push
ret
cmpsl
int
mov
cmpsb
insl
xchg
dec
cmp
out
out
clc
fsub
pop
push
sar
sub
xchg
pop
jne
mov
insb
push
popf
mov
sbb
push
add
jmp
push
lret
add
shll
insl
jae
xchg
sbb
push
cmpl
pop
mov
jns
dec
push
enter
sub
push
mov
js
and
mov
loopne
lods
mov
lock
pop
ss
stos
scas
fistl
dec
lret
std
js
scas
sbb
pop
lods
mov
cmpsl
cltd
pop
test
in
xchg
divl
add
cmpsl
je
pop
push
mov
je
jg
dec
inc
fisubrs
dec
stos
mov
cmpsl
push
insl
cmpsb
mov
mov
mov
mov
xchg
jge
xchg
inc
stc
jg
aas
int3
shl
mov
cltd
gs
push
push
xchg
push
mov
mov
cmpsl
and
inc
sub
in
cltd
lock
cwtl
loopne
mov
dec
clc
jmp
lock
jo
fwait
mov
dec
jno
dec
adc
aaa
sub
mov
je
xchg
shl
das
int3
or
fidivs
fwait
aad
jae
stos
fimull
lea
cmp
fcoml
and
mov
int3
sti
mov
xchg
cs
int3
out
and
sub
scas
mov
jmp
mov
jo
shlb
scas
xor
cmpsl
and
add
cmc
mov
fdivrl
push
cmp
test
pop
fstpt
xchg
cmp
stos
leave
sbb
push
adc
ss
into
and
inc
add
xchg
movsb
hlt
cli
loope
inc
in
add
ret
aas
push
addl
mov
out
inc
rolb
mov
insb
bnd
mov
bound
cmp
sub
add
xchg
jno
jmp
jo
mov
inc
push
enter
ret
lret
aaa
mov
stos
into
mov
jnp
test
push
jbe
inc
xchg
dec
sub
setno
jns
mov
lret
pop
mov
jmp
mov
test
xchg
xor
adc
int
andl
out
and
jmp
sahf
push
sub
or
sub
xor
mov
pop
loope
and
punpckhwd
fdivl
imul
pop
mov
dec
mov
and
pusha
and
mov
cli
fst
mull
mov
and
sub
push
lea
xorl
lock
outsl
mov
xor
faddl
mov
ficoml
or
iret
bound
cmpsb
stos
push
mov
push
sub
inc
ds
stc
mov
shll
or
into
jl
test
popf
inc
jns
jge
or
lea
orl
les
push
jp
test
inc
xchg
or
into
cltd
bound
jl
dec
pop
loopne
push
cmp
xlat
imull
dec
cmp
sbbb
inc
lea
mov
ja
inc
pop
dec
mov
fs
rorl
outsb
and
loop
cmp
movsb
cld
and
and
gs
bound
pop
cmpsl
adc
or
shlb
cmpsb
mov
push
cmp
or
sub
pop
pushf
rclb
push
cltd
in
cmp
pop
lods
fwait
mov
inc
lock
sub
pop
mov
loop
dec
imul
xlat
mov
test
repz
xchg
push
stos
loope
push
icebp
dec
push
mov
fistl
insb
pop
sti
xor
ret
xlat
cmp
mov
add
gs
out
in
es
mov
add
and
mov
insl
mov
pop
sub
call
call
sub
xchg
push
sbb
mov
xchg
lock
movsb
out
add
enter
mov
lods
add
in
push
pop
cmpsl
mov
pop
mov
add
test
and
filds
into
mov
out
xchg
outsl
test
mov
or
jbe
lock
add
and
jno
and
xchg
push
mov
xchg
ljmp
lods
push
stos
xchg
pop
std
ds
xor
inc
ret
add
jge
int
jmp
scas
xchg
adc
enter
imul
loopw
in
xchg
roll
or
adc
mov
popf
lods
pop
push
insb
mov
movsl
sar
idivl
xchg
clc
and
add
xchg
lods
and
fs
dec
stc
add
sub
adc
xor
repnz
subl
test
loope
aad
pop
test
bound
pop
lods
xor
jg
jo
je
mov
cld
xchg
pop
xchg
and
cli
nop
gs
lods
ficompl
sub
adc
mov
pop
fsub
adc
test
mov
jb
cld
xchg
or
jne
or
or
pop
aaa
or
imul
clc
outsl
mov
jnp
fcompl
int
fists
stos
pusha
push
pop
jl
push
test
mov
push
aad
fdivl
inc
mov
test
xchg
mov
xchg
xchg
pop
inc
dec
jl
enter
push
lahf
or
outsb
xor
and
pop
xchg
imul
dec
dec
mov
stc
xchg
outsb
inc
jb
push
test
faddp
cmp
jns
test
xchg
add
mov
fmuls
hlt
mov
pop
in
jge
bound
mov
pusha
adc
sub
enter
xchg
xchg
subl
stos
ljmp
repnz
xchg
xor
cmp
mov
dec
repnz
jbe
inc
addl
or
loop
push
out
test
js
rcrl
cmc
cmp
repnz
es
push
lock
xor
pmulhw
push
test
es
mov
imul
add
add
lahf
pusha
pop
mov
dec
dec
cmp
es
cmp
cmp
mov
aam
mov
jl
sbb
repz
jne
out
jnp
push
and
mov
test
cmp
lods
pop
loopne
shlb
cmp
mov
xchg
loopne
push
mov
insl
das
mov
add
xchg
aam
test
xchg
pop
and
mov
push
add
lock
out
sbb
movsb
mov
fisttps
xor
in
mov
in
xlat
in
movsl
and
insb
push
repz
aaa
push
stos
mov
add
dec
cld
jbe
push
mov
fwait
jg
xchg
pop
mov
movl
sub
lret
pop
daa
stos
lds
xchg
stc
cmpsb
push
pop
test
cmc
jae
cld
xlat
mov
lods
cmp
mov
ja
or
add
hlt
mov
xor
out
aam
push
xchg
cmpsb
push
sti
lods
mov
cmp
je
xchg
push
fsubs
add
xor
sub
lcall
xchg
pop
and
lret
shrb
push
call
jecxz
flds
sbb
insl
xchg
cmpsl
push
jo
sahf
es
stos
ret
aam
mov
jecxz
xchg
nop
fsubs
test
jne
xor
psrld
jae
add
jmp
jmp
mov
popa
or
pusha
divb
fisubrl
int
push
add
dec
mov
out
jmp
cmp
jne
sub
cmp
mov
pop
mov
mov
adcb
mov
pop
fdivs
push
test
lcall
push
and
outsl
jb
push
xor
aad
cmc
mov
xchg
mov
fwait
mov
bound
fsub
pop
mov
in
sbb
ficoms
mov
inc
adc
call
std
xor
jecxz
js
frstor
pushf
mov
out
sahf
lods
ljmp
in
adc
pop
cmp
frstor
sub
jmp
in
scas
mov
cmc
imul
cmc
rorl
insl
add
loop
mov
and
mov
push
mov
sub
shll
test
push
pop
fcoms
punpckhbw
test
out
xor
jae
mov
mov
insb
out
dec
jl
xorb
scas
mov
pop
mov
ljmp
ret
jmp
int
inc
stos
cmpsb
pop
icebp
shlb
and
stos
cmpsb
cmp
call
lods
enter
xor
and
out
and
pop
movsb
leave
dec
inc
js
inc
pop
enter
push
fsubl
pop
push
mov
jge
fstps
imul
jmp
cmc
cmc
mov
andl
in
test
mov
lods
mov
jnp
mov
js
ja
cs
jle
in
cmp
inc
jbe
fdivrs
mov
push
inc
shr
xchg
daa
cmp
jmp
fwait
loopne
fs
jmp
dec
cmp
jo
notl
mov
lods
fdivl
mov
call
test
xchg
mov
repnz
xchg
xchg
xchg
add
adc
mov
mov
into
dec
sbb
jp
cmp
jnp
and
pop
mov
inc
sbb
pop
lahf
test
dec
stc
sub
es
xor
mov
adc
and
cmpsl
vpermt2ps
or
cmp
out
adc
jae
es
push
and
movsl
cmp
lods
mov
notl
ret
scas
xchg
push
bound
aaa
lds
sub
jmp
daa
and
mov
or
mov
popf
push
inc
mov
cmpsl
adc
movsb
pop
popf
cmp
fs
sub
push
testb
scas
jae
add
loop
and
mov
movsb
or
adc
jecxz
mov
hlt
add
cmp
push
mov
mov
call
loope
and
test
das
loop
cmpsl
in
sub
and
pop
ret
pop
or
and
add
push
and
test
lods
sbb
push
mov
dec
and
mov
dec
rorb
incl
daa
fs
mov
push
lea
push
movsl
fadds
js
push
dec
cmp
nop
adc
out
jbe
roll
mov
mov
sub
sbb
test
xchg
pusha
xchg
out
adc
adc
subl
jnp
out
sbbl
loope
out
cs
dec
dec
sub
ret
and
adc
xchg
fyl2x
in
mov
xchg
cmp
cmpsl
movsb
or
les
sbb
aas
rorb
xor
test
fs
add
ja
sbb
push
cmp
sahf
nop
cmp
es
loop
xchg
test
xchg
jb
les
stc
cmp
xlat
sbb
xchg
push
and
cmp
je
in
and
mov
adc
das
mov
outsl
aam
stos
ljmp
cmpsb
push
mov
adc
rorb
cmp
test
or
push
ret
add
imul
xchg
pop
mov
xor
and
in
fcomp
loopne
mov
xor
pusha
aad
stc
movsl
shlb
mov
sarl
shrl
and
push
divb
dec
repnz
int3
int3
mov
outsl
imul
cmp
mov
lods
cwtl
pop
sub
sub
pop
push
jns
pop
push
cmp
stos
or
mov
jo
fsubr
cmp
xchg
mov
and
rol
les
sarl
pop
dec
sub
xor
fbld
fcmovnbe
popa
pop
in
inc
aas
mov
jl
fstpl
ret
add
mov
out
or
xchg
es
and
jle
sbb
sub
ret
pushl
adc
xor
out
test
subb
dec
cmc
mov
xchg
mov
xchg
aaa
and
cmp
sbb
nop
je
cs
fisubl
ja
mov
xor
bound
addr16
push
scas
push
pusha
fmull
aam
jo
loopne
cmpsl
pushf
cwtl
iret
pop
add
cwtl
mov
lds
das
je
mov
das
sbb
daa
xchg
ljmp
cld
cmc
cmp
loopne
cld
sti
call
add
mov
mov
adc
or
mov
sub
sbbl
mov
orb
jl
int
rcl
insl
cld
sub
add
fistps
mov
mov
scas
push
sub
stos
je
add
in
popf
and
repnz
xor
sti
add
xchg
clc
cmpsb
andb
aaa
mov
lods
in
mov
mov
scas
sbb
add
jl
in
fs
xchg
xchg
jp
and
cld
les
mov
and
mov
mov
test
movsl
lret
or
pusha
sbb
xchg
in
cmpsl
xor
jae
repnz
xchg
xchg
push
lret
nop
xchg
xchg
xor
mov
in
sbb
loopne
jle
fs
imul
jp
push
or
lret
dec
push
fs
push
orl
aam
gs
lahf
add
jmp
cmpsb
adc
mov
movsl
dec
xchg
fists
sar
mov
aaa
sbb
xor
mov
lret
scas
nop
and
aaa
and
fdivrl
ret
mov
pop
push
or
and
mov
test
popa
xadd
jo
cmpsl
out
fs
test
xor
pop
adc
ret
adcl
jmp
xorl
mov
cmp
pcmpgtw
sahf
mov
cmp
cmpsl
pop
fcompl
push
mov
jno
mov
loope
cmp
out
not
fcmovnb
mov
lods
mov
mov
add
and
fimuls
lahf
lods
stos
dec
sarb
fisttps
test
mov
nop
dec
repz
mov
xchg
mov
es
stos
cmp
and
mov
ret
xchg
in
adc
jnp
dec
fsub
in
cmpl
mov
fldcw
mov
adcb
inc
add
xor
xor
add
and
shll
adc
jg
sub
pop
dec
insb
test
addr16
ret
jns
lds
addr16
mov
pop
cld
mov
enter
adcl
adc
xchg
cmp
jnp
add
mov
repz
cli
inc
aam
adc
sub
test
and
xchg
insl
mov
dec
dec
inc
inc
aas
andl
cmp
aaa
push
fldcw
jg
add
push
push
sbb
out
in
sarb
push
mov
xor
xor
sbb
fimull
ret
and
mov
xor
test
ret
dec
dec
scas
dec
daa
insb
mov
dec
dec
sub
dec
jbe
orl
out
das
popf
push
dec
dec
jb
std
dec
and
sub
pusha
jg
mov
loope
in
data16
inc
dec
sahf
filds
sbb
push
dec
mov
sahf
repz
xor
into
js
or
stos
add
inc
das
insb
cmp
int3
test
data16
cmpl
sti
fs
lods
test
sub
mov
neg
subl
leave
in
xchg
mov
daa
inc
int3
dec
lahf
pop
jno
stos
cmp
aam
in
bound
sub
or
mov
xchg
jbe
fstpl
icebp
arpl
lahf
inc
movsl
lret
fistps
adc
dec
lahf
sarl
mov
pop
push
xchg
and
adc
add
dec
add
out
mov
adc
pop
xchg
or
imul
aaa
cmp
insb
add
inc
lahf
jmp
inc
push
lock
and
imul
dec
pop
imul
ret
jns
in
dec
test
enter
jmp
repz
sbb
push
inc
sbb
outsb
pop
jmp
ss
andb
icebp
out
nopl
in
mov
adc
imul
inc
mov
out
rcrb
aam
in
aam
cmp
push
orl
and
inc
mov
fs
test
dec
cmp
and
pop
cmp
inc
mov
in
stc
dec
and
ret
out
cli
add
fmuls
sub
mov
loopne
push
sub
pop
ss
cs
movsb
shlb
push
gs
mov
or
popa
sahf
in
and
aad
test
xchg
imul
sub
xchg
adc
pop
xchg
popa
test
fildl
repz
fisubrs
xor
test
enter
pusha
sub
mov
pop
test
movsb
push
inc
aaa
insb
jae
js
push
inc
loope
jg,pn
movsb
js
pop
pop
jmp
ja
fildll
mov
push
shll
jge
jnp
into
add
jecxz
pop
add
aas
pop
pushf
outsl
xchg
mov
sbb
sti
xlat
or
xchg
int3
gs
sbb
jbe
out
cmp
and
add
pusha
aad
leave
inc
daa
mov
add
bswap
test
jno
push
mov
mov
pop
mov
popf
pop
jg
xchg
xor
mov
setnp
push
inc
fistl
aaa
pushf
inc
add
sbbl
test
inc
jno
xchg
sti
add
push
add
shll
daa
loopne
fcmovb
gs
sub
jmp
js
fwait
sub
sarb
xchg
rorl
inc
xor
xlat
mov
push
test
mov
je
dec
scas
push
sbb
mov
mov
mov
push
aaa
out
dec
mov
pop
mov
fisttpl
jnp
push
or
test
mov
enter
push
adc
call
jb
or
dec
insl
aad
gs
dec
scas
movb
or
cmp
mov
aam
in
xlat
pop
ljmp
sbb
pop
popf
std
mov
inc
xlat
sbb
mov
lret
dec
mov
cld
mov
xchg
pop
dec
imul
xchg
sarl
inc
lcall
je
rol
cmp
scas
adc
mov
icebp
jb
add
sub
push
inc
shlb
mov
cmpsl
dec
xlat
jne
jg
dec
add
in
fs
cmp
out
pusha
imul
mov
fiaddl
xchg
or
pop
push
sub
jl
sub
lods
adc
addr16
jno
iret
bound
add
inc
hlt
sbb
and
push
pop
mov
cmp
or
add
dec
repz
test
pop
adc
mov
scas
movl
dec
pop
rclb
dec
movsb
push
fdivrl
adc
int3
xchg
call
pop
jno
dec
nop
notl
fstps
cld
fldcw
pop
pop
add
sub
cs
mov
inc
scas
push
incb
or
adc
and
mov
sub
lock
push
fwait
mov
inc
dec
out
dec
stos
aaa
aaa
dec
sub
scas
push
inc
outsl
jecxz
push
sub
pop
int
xor
and
jns
es
scas
divl
jne
jnp
mov
inc
cmp
or
add
fwait
dec
pop
inc
daa
iret
sbb
rcrl
or
cmpsl
inc
mov
scas
xchg
sub
pop
std
inc
cwtl
aad
pop
mov
add
leave
pop
sarl
inc
inc
popf
mov
push
xlat
lds
xchg
lods
ja
ret
arpl
rcrl
imul
addr16
mov
push
outsb
push
add
jecxz
jne
pop
ss
mov
inc
movsb
xchg
lret
adc
jle
addr16
push
cmp
push
pop
std
negl
pop
subl
fdivs
mov
addr16
push
andl
les
push
cmpsb
xchg
dec
leave
popf
popf
mov
add
pop
outsl
popa
xor
int3
repnz
movb
rcl
sbb
dec
pop
out
mov
pop
in
mov
dec
cld
rolb
cltd
rclb
and
sti
xchg
push
movsl
fildll
dec
iret
stc
push
aad
test
xchg
fsubr
je
xorb
repz
jge
out
cmpsb
imul
cs
out
aad
jns
lret
mov
ret
incb
imul
inc
pushf
sbb
cmp
aam
andb
aaa
add
mov
outsb
enter
inc
and
dec
in
test
dec
jae
mov
ja
pop
das
loop
rolb
cmc
int3
lods
push
push
mov
add
push
pop
aaa
ret
push
pop
lock
mov
dec
jg
popa
xorl
sbb
sbb
push
inc
jmp
push
mov
dec
inc
adc
clc
int3
loope
popa
in
shrl
xchg
movsb
or
dec
and
dec
rcrl
popa
add
das
jge
dec
rcll
push
inc
inc
or
xchg
add
test
inc
pop
je
mov
rol
arpl
push
test
into
or
cmpsb
loope
and
pop
pop
shlb
dec
ret
pop
outsl
pop
imul
insb
jge
iret
adc
xchg
and
inc
in
sbb
push
push
pop
push
inc
mov
in
aam
and
sbb
xchg
lods
push
inc
gs
pop
mov
ret
or
jge
daa
sbb
xchg
mov
movl
mov
call
xor
and
pop
or
inc
add
ds
rcll
and
jne
or
jnp
into
push
fucomi
lret
ja
xor
pusha
in
dec
ret
popa
mov
and
scas
ret
mov
iret
inc
shlb
bound
out
pop
loopne
addr16
rcll
xor
movsb
xchg
add
push
into
dec
shrl
ror
or
subb
xchg
push
dec
xor
dec
fldl
je
jecxz
fucom
das
aas
dec
rorb
xchg
add
mov
adc
add
xchg
je
fisttps
xor
popf
sahf
push
xlat
add
ljmp
pop
adc
mov
inc
jb
mov
push
lods
aaa
and
repz
gs
jne
aas
sub
popf
into
push
movsb
gs
std
gs
popa
adc
dec
repnz
arpl
insl
out
sbb
mov
xchg
sub
dec
jo
sbb
idivl
fisttpll
andb
and
shrl
jne
inc
jg
jmp
xchg
test
push
and
add
fwait
pushf
sub
adc
sarb
and
push
push
mov
and
pop
dec
outsb
call
mov
loopne
mov
push
movsl
test
sub
xchg
je
inc
cmp
pop
in
mov
jbe
jne
ret
push
mov
addl
dec
in
arpl
or
mov
test
mov
les
push
add
iret
add
fildll
inc
imul
pop
repz
push
add
dec
addr16
pop
xchg
out
jmp
jecxz
cmp
push
push
adc
and
shr
fcmove
lret
inc
push
ret
inc
jne
out
out
pop
pop
adc
lods
repnz
enter
gs
mov
sbb
pop
std
stc
ss
dec
pop
jg
inc
mov
cmc
lret
mov
pop
test
or
repnz
repz
les
cmpb
mov
testl
dec
push
stc
dec
test
or
fbld
mov
push
nop
mov
cmp
shlb
jnp
int
outsl
pop
shlb
outsl
dec
jecxz
jae
sbb
pop
pop
lsl
shlb
pop
cltd
xchg
jmp
or
daa
push
cmp
out
aaa
inc
pop
stos
movntq
imul
fdiv
repnz
push
inc
inc
push
cli
pop
inc
mov
or
mov
call
push
in
push
dec
adc
hlt
xchg
ja
sbb
call
jns
pusha
aaa
push
mov
rorb
adc
pop
test
lret
sbb
into
add
jmp
jge
data16
jg
and
out
add
mov
shrl
inc
call
and
shlb
push
es
dec
and
xor
sbb
xor
or
mov
ret
mov
inc
add
inc
add
je
sbb
xchg
cmc
rolb
hlt
adc
div
das
xor
inc
dec
rcrl
mov
ja
ret
out
pop
lahf
jbe
mov
and
xchg
xchg
mov
aas
fldln2
loop
mov
js
ja
push
pop
fldl2t
dec
add
rolb
dec
cltd
push
jo
xchg
call
adc
js
xchg
adc
or
loopne
pop
inc
sub
ja
fdivrl
dec
leave
mov
dec
xchg
dec
push
inc
sbb
gs
cmc
jl
dec
popa
sti
xor
inc
ja
test
in
cmpsb
or
inc
inc
inc
inc
dec
dec
in
mov
imul
mov
inc
cmpsb
lahf
xchg
dec
arpl
add
adc
sub
bnd
pop
movsb
xchg
xchg
xchg
dec
push
aad
test
dec
mov
out
add
idiv
addb
out
fwait
cmpsb
jo
sub
cmpsb
shll
mov
js
mov
in
jge
scas
scas
pop
dec
movsl
movsl
jp
mov
sbb
cs
xchg
dec
int3
push
mov
movl
les
repz
mov
int3
in
xchg
loop
sbb
outsb
xchg
fisttps
jb
imul
jbe
popw
jnp
jbe
sub
adc
push
outsb
sbb
ret
sbb
inc
movl
add
int3
jb
ja
in
mov
pop
inc
jp
xchg
out
xchg
out
pop
dec
out
or
fs
inc
test
pop
xchg
push
lcall
xor
add
add
mov
push
ljmp
sbb
inc
sahf
jo
dec
imul
jnp
imul
jno
iret
fs
sahf
pop
rorb
cmc
fwait
push
imul
sbb
inc
shrl
dec
lret
sbb
outsl
cmp
or
das
stos
xor
loop
sbb
test
mov
movsb
arpl
imul
inc
int
xlat
cmp
sub
rorl
hlt
outsl
add
xlat
fstp
or
xor
inc
adc
stc
lds
inc
sub
aad
imul
fmul
sub
cmp
jmp
cmp
mov
and
xchg
shll
lds
arpl
adc
push
mov
les
mov
fisubl
bound
jae
add
jns
notb
addr16
xor
xor
xchg
dec
push
sub
je
pop
xchg
jge
clc
mov
dec
mov
push
push
aam
xchg
fs
mov
jae
insl
cmc
ds
or
add
xchg
ret
dec
sub
scas
dec
into
or
cmpb
insl
pop
push
xor
das
insl
jg
mov
loopne
jno
or
mov
add
roll
xchg
outsl
and
push
inc
adc
push
int
mov
pop
aam
jns
inc
xor
push
add
adc
or
scas
push
cmp
and
xor
inc
stos
add
inc
mov
jae
inc
fisttpl
lahf
dec
xchg
adc
jnp
or
pusha
in
pop
cmp
adc
sub
or
aad
orb
stc
mov
or
jne
aaa
xchg
inc
mov
pop
cmp
testb
dec
sub
mov
mov
mov
mov
add
push
fstl
mov
lea
repz
int3
aas
outsb
pop
jg
jb
pusha
or
sbb
ficoms
roll
in
add
gs
roll
pop
rclb
and
dec
cmp
rcpps
outsl
jge
xchg
mov
rorb
bound
aad
hlt
sbb
push
push
gs
jp
inc
in
jb
jmp
jecxz
shlb
jbe
push
and
gs
xor
push
xchg
jg
xor
sbb
push
add
xchg
dec
inc
mov
mov
inc
push
pop
dec
add
fmull
mov
sarl
leave
mov
punpckldq
cmc
stos
lods
xor
es
dec
xchg
inc
xchg
xor
daa
in
repz
into
inc
xor
adc
jns
pop
jae
adc
outsl
in
out
xchg
shr
in
mov
data16
mov
sub
loope
and
add
lock
adc
xchg
xchg
jbe
adc
imul
adc
or
lods
push
inc
std
inc
dec
popa
pushf
aad
ret
mov
out
xor
cmp
or
push
and
push
pop
xor
jecxz
push
imul
ljmp
hlt
int3
addr16
es
dec
movsb
dec
adc
dec
test
mov
fld
push
mov
push
in
inc
adc
daa
push
mov
shlb
fcoms
pusha
mov
out
shlb
clc
push
stc
je
adc
jecxz
movsb
dec
jmp
test
clc
mov
pop
popf
mov
or
push
or
rorb
cmp
jnp
pop
xor
adc
out
push
sahf
scas
rcrb
popa
in
inc
bound
insl
testl
mov
js
add
inc
out
pop
ja
arpl
fists
enter
inc
out
add
popa
jg
sbb
xlat
or
rolb
adc
daa
mull
jg
adc
enter
jb
push
divl
push
xlat
rorb
pop
mov
test
push
pop
in
push
dec
or
scas
hlt
movsb
rclb
xchg
push
adc
call
or
aad
mov
stos
scas
cs
cs
mov
ficoml
rclb
pop
dec
push
mov
push
cs
cmpsb
incl
push
sahf
and
ja
roll
sbb
inc
pop
adc
xchg
inc
push
jne
dec
adc
inc
jne
sub
aad
jae
lret
addr16
pop
jmp
arpl
push
and
std
out
push
inc
pusha
cmp
out
inc
push
add
out
loope
rclb
popf
inc
sahf
dec
cmp
jp
or
pop
insl
and
pop
inc
lds
jecxz
add
aam
cmp
psraw
loop
add
and
loop
mov
dec
outsb
xlat
addb
test
in
adc
repnz
adc
sub
std
addr16
push
inc
xchg
out
jne
lds
aas
fistps
pop
call
fcomps
push
mov
xor
mov
pop
shlb
xor
pop
imul
loop
jns
inc
xchg
inc
cli
add
cli
push
andb
ljmp
ficoms
xchg
adc
cmp
inc
repz
repz
adc
push
in
jecxz
in
fdivrp
insb
xlat
or
adc
fwait
dec
jge
out
sbb
dec
jne
inc
xchg
or
dec
std
in
in
aaa
imul
mov
ror
sbbl
mov
xor
add
notl
cmovb
pop
popf
add
and
sti
fsubs
cmpsb
icebp
sub
add
inc
xorb
dec
or
leave
pop
into
aad
and
and
xchg
and
adcl
outsb
or
xchg
int
jl
outsl
pop
daa
das
cmp
mov
or
push
jge
cli
out
std
test
mov
xlat
popa
pop
push
pop
outsl
iret
xor
pop
jecxz
add
lcall
jae
inc
cmp
jno
jl
add
push
mov
pop
adc
jp
xor
adc
es
out
lcall
cs
mov
out
add
sti
xor
addb
arpl
pop
inc
call
sub
test
push
pop
dec
sbbb
insb
or
sbb
arpl
jle
mov
ja
fldcw
aas
xor
add
xor
sbb
sbbb
mulb
je
xchg
inc
je
ficoms
pop
adc
pushf
lret
push
push
jo
out
shl
les
push
loope
out
sbb
cmp
inc
stos
fs
sbb
jg
inc
cmp
pop
inc
or
pop
push
hlt
sahf
popw
ljmp
dec
inc
shrb
sti
jbe
pop
in
jno
rcll
or
inc
aas
daa
andl
ret
jae
mov
pop
dec
or
pop
and
stc
and
lret
jnp
cmc
or
pop
bswap
and
ss
inc
inc
xchg
push
mov
xchg
jecxz
add
es
es
cmpsw
inc
popf
add
pop
xchg
add
inc
lahf
dec
mov
fwait
inc
imul
addb
in
mov
out
cld
xchg
or
dec
divb
sub
ret
popf
pop
pop
inc
sub
dec
dec
orl
cmc
mov
hlt
push
or
dec
xlat
xchg
clc
in
mov
add
mov
fisubrl
xor
dec
or
popa
pop
ds
inc
push
adc
dec
xor
push
arpl
or
pushf
jge
pop
sbbl
inc
popf
add
or
div
scas
add
mov
mov
adc
push
add
inc
mov
cld
push
lret
pop
in
dec
add
repz
icebp
pop
xchg
ret
addr16
scas
add
adc
mov
inc
xor
scas
and
mov
out
sbb
inc
rcrb
jbe
mov
adc
ficomps
in
dec
xor
push
adc
pushf
or
mov
xchg
imul
adcb
push
cmc
hlt
ljmp
or
inc
push
addr16
push
or
jae
or
inc
mov
enter
icebp
test
gs
ret
out
xchg
xor
mov
daa
jg
incb
jge
addr16
popl
inc
adc
inc
loopne
push
adc
movsl
dec
cmp
pop
jne
out
pop
insb
add
and
fwait
and
xlat
in
cltd
or
jg
cmpsl
or
xor
mov
movsl
ja
mov
xor
push
leave
pop
es
pop
dec
push
add
bound
and
xor
pop
jl
sbb
roll
aas
jb
push
outsb
adc
xchg
test
add
pop
sti
push
pop
mov
gs
or
ljmp
fldt
xor
repnz
stc
lea
movsb
cmp
aam
cmp
add
pop
push
lds
addb
lea
adc
lods
push
inc
push
js
imul
das
std
sti
fidivs
cmpsb
adc
inc
daa
add
dec
and
jg
jmp
dec
in
cli
xor
jecxz
mov
sarl
pop
les
and
cmpsb
test
jp
es
push
push
loop
jbe
cmp
jnp
std
test
push
push
sbbb
lds
push
add
sbb
std
pop
mov
push
pop
adc
pop
pop
adc
jmp
ja
dec
pop
jne
in
nop
imul
lock
dec
dec
jecxz
pop
mov
push
ja
rorb
out
sub
lahf
pop
push
or
sbb
xorl
or
push
pop
and
movb
xchg
or
scas
repnz
gs
cmpsl
mov
sub
adc
jecxz
test
pop
and
cltd
mov
add
rol
es
lret
pushl
nop
sub
sbb
aas
into
jle
andl
sbb
iret
pushl
xchg
and
add
jno
xor
sub
dec
xchg
outsl
ret
mov
or
sbb
dec
std
mov
addr16
xchg
insb
and
pop
jae
xchg
push
jg
getsec
cmpsl
out
decl
arpl
stos
mov
push
adc
loope
aas
sbbb
pop
in
scas
xor
jne
into
pop
cmpsl
loope
dec
sbb
inc
xchg
cwtl
jae
adc
sub
psubsw
push
or
inc
push
insl
push
cld
push
ficoml
jbe
xchg
je
adc
lret
inc
rcll
sti
push
ds
xchg
pop
pop
lahf
push
jo
cltd
lds
or
movntdq
les
xchg
dec
xor
rclb
push
push
cmove
loopne
add
sti
push
sub
or
mov
xchg
jmp
addl
rcll
sbb
cli
push
adc
rol
mov
jg
in
pop
cltd
stos
movsb
cmp
int3
adc
mov
xlat
aam
pop
negl
or
cmovl
push
jb
pop
aam
add
ror
in
push
adc
les
pop
insl
ja
dec
aad
loopne
mov
mov
shll
mov
jae
xchg
and
sbb
xorb
pop
in
iret
jmp
in
cmp
cmpsl
shlb
sbb
leave
pop
shl
in
push
fisttps
sbb
fs
jg
std
loope
ss
mov
insb
pop
notl
and
dec
loope
loop
or
push
jnp
faddp
or
mov
sti
push
jbe
pop
fwait
and
outsb
dec
je
scas
xlat
or
je
dec
mov
add
jle
loopne
jge
mov
test
aas
cmpsb
mov
mov
mov
mov
iret
add
xor
inc
loope
js
or
sbb
jb
or
inc
rorb
cli
andl
xlat
pop
js
and
aaa
imul
xchg
pop
int3
imul
cltd
add
incb
inc
push
enter
ret
push
dec
sub
lds
rcrl
insl
cmpsl
jp
cmp
lret
mov
mov
daa
loop
dec
mov
ret
jmp
aaa
or
imul
xor
inc
mov
shrb
mov
mov
jp
push
add
mov
ljmp
inc
aaa
push
ror
test
jle
dec
imul
mov
add
bound
ss
and
insb
push
push
add
add
jecxz,pt
cmpl
imul
and
out
int
daa
lcall
xlat
xchg
call
leave
sti
push
rcl
dec
inc
int3
pop
mov
pop
mov
out
in
jle
xchg
push
adc
jge
adc
mov
pop
aad
aad
jns
mov
inc
jb
sbb
and
inc
leave
mov
xchg
rcl
mov
int
std
out
or
pop
xchg
mov
jbe
xor
ja
push
sti
mov
or
inc
popf
int3
adc
cmp
and
rorl
in
in
pop
xor
inc
fstl
and
pop
fdivrl
mov
inc
adc
xor
mov
loop
js
in
or
gs
mov
add
xchg
mov
adc
sub
loope
add
aam
or
xchg
or
movsl
or
repnz
insl
leave
imul
cwtl
jb
test
or
xlat
or
lcall
movsl
push
adcb
xor
inc
fadd
xchg
and
sbb
nop
js
adc
and
adc
addl
outsb
les
sti
add
pushf
vpaddsb
inc
js
dec
adcl
imul
fistl
mov
inc
fiaddl
mov
adc
lock
or
push
xor
int3
test
xchg
mov
into
jbe
and
out
add
pop
and
stos
jne
fildl
cmp
dec
jecxz
lds
clc
lgs
pop
lea
das
pop
pop
test
and
mov
outsl
sarb
shlb
xor
push
ss
loopne
jae
dec
sub
xchg
xor
dec
lret
push
testl
ds
inc
jns
arpl
repnz
jmp
fidivs
inc
cmp
pop
rclb
inc
dec
jne
out
push
mov
sbb
sarb
ja
test
xchg
jo
cld
movsl
aaa
es
ds
hlt
xchg
mov
lock
fs
push
mov
fs
xor
pop
jmp
data16
add
jp
rcrl
inc
xor
sub
repz
popf
out
aad
test
orb
jne
and
xchg
mov
pop
loope
iret
cmp
dec
in
popa
mov
bnd
hlt
dec
cmpsb
shll
push
test
pop
add
lds
stos
dec
mov
mov
mov
mov
mov
daa
clc
push
xchg
or
int
inc
push
fs
pop
push
ja
sub
stc
mov
adc
jae
xchg
dec
test
mov
popf
in
sahf
pop
in
fcoms
xor
fldcw
movsb
aam
xor
out
or
inc
jle
fdivl
int3
xor
and
xor
sbbb
fstps
mov
enter
into
sti
add
jecxz
lea
loope
shrl
jne
fdivp
push
adc
je
inc
mov
adc
aad
out
mov
jno
xchg
dec
call
push
pop
addr16
pop
sub
mov
push
or
inc
fcom
mov
dec
pop
ds
pop
into
push
adc
jae
movsl
xorl
idivl
lods
jmp
testb
movsl
push
mull
sub
dec
rcr
out
lods
pop
jp
mov
fscale
ds
mov
mov
pop
pop
cmp
pop
mov
xor
add
sub
out
std
sub
sub
pusha
dec
ljmp
dec
loope
insl
fisubl
mov
jp
pushf
xorl
lods
arpl
xor
xor
clc
add
pop
mov
inc
sbb
or
jbe
fdivs
lock
and
pop
stos
cld
fmuls
sub
dec
xchg
jmp
aam
inc
and
adc
push
aas
loope
dec
shrl
mov
dec
xchg
aam
scas
push
dec
jecxz
jg
push
cld
test
ficoms
popf
or
nop
cmp
inc
aas
jno
cs
rolb
inc
adc
test
inc
lods
bnd
lret
lods
out
dec
repnz
sub
pushf
add
aaa
aam
in
mov
mov
repnz
lret
dec
jg
sub
jns
mov
cmpsl
adc
icebp
fndisi(8087
repnz
adcl
lods
test
inc
cs
shrl
mov
cmp
sbbl
imul
or
mov
fistpl
or
and
xor
fnstsw
ss
outsl
dec
jmp
pop
jge
lock
add
scas
fdivp
movsb
or
cmpsl
pop
fwait
in
rorb
dec
add
xchg
inc
mov
lret
adc
icebp
mov
sub
sarb
imul
mov
jo
xchg
xor
arpl
sahf
inc
imul
out
xchg
sarb
popa
dec
aad
xchg
loopne
mov
inc
stos
adc
jnp
jp
ja
pop
jns
xchg
cmp
insl
aaa
sahf
or
dec
into
daa
int3
leave
mov
negb
sahf
add
out
mov
mov
popl
mov
setbe
pop
xchg
push
fwait
xchg
sub
or
in
dec
and
mov
mov
jmp
rolb
lods
push
enter
pop
lock
shll
into
inc
mov
movsl
and
sbb
add
mov
clc
in
sbb
les
mov
jmp
xchg
xchg
cmp
sub
ret
fsubrs
or
add
xchg
arpl
repz
sub
test
mov
sub
pushf
aam
enter
push
pop
fwait
xchg
shr
aaa
or
sub
std
int
cmpsl
dec
in
adc
fmulp
lock
push
repz
xlat
lcall
mov
adc
rorb
dec
subl
inc
aam
out
jp
pop
cs
push
jmp
and
movsb
dec
cmp
iret
push
sahf
xchg
pusha
mov
inc
pop
ljmp
push
mov
xchg
test
mov
xor
ljmp
mov
ss
testb
xor
add
push
bound
cmp
jae
sbb
sarl
sbb
jle
iret
stc
dec
jns
cmp
ffreep
push
cmp
jecxz
insb
popa
clc
orl
jbe
movsb
popa
fistpll
xor
lock
dec
xor
lret
lods
out
or
fadds
ljmp
pusha
scas
jle
inc
hlt
call
loopne
int
mov
stc
cmp
mov
popa
loop
aas
stos
sub
insb
or
addr16
adc
in
movsl
push
inc
jb
movsl
roll
fsubrs
std
sbb
pop
aad
fwait
movsl
push
jmp
jmp
mov
addr16
mov
xlat
punpckhdq
stos
jo,pn
xchg
loopne
push
inc
movsb
movsb
dec
adc
add
xchg
fucomip
adc
lods
or
push
mov
or
and
push
xchg
shll
js
add
and
xchg
push
pushl
inc
inc
dec
add
jns
fisubrs
push
decl
lcall
pop
add
daa
in
movsb
pusha
jne
int
aad
push
dec
dec
je
dec
movsl
sbb
sbb
popf
cmp
daa
es
stos
xor
mov
mov
pop
or
or
cmp
adc
push
mov
dec
rcll
rcl
daa
jnp
xor
mov
mov
call
adc
push
je
push
testl
inc
sbb
lcall
repnz
popa
dec
das
into
out
dec
mov
lret
test
jle
iret
inc
idivl
js
cmp
lock
cmp
add
data16
inc
sub
rolb
mov
mov
test
jae
cli
out
mov
xchg
mov
and
cmp
inc
sub
mov
inc
roll
icebp
leave
xchg
sbb
sbb
push
adc
push
jo
dec
or
ljmp
lds
aas
mov
lock
pop
sti
pop
push
cmp
mov
fdiv
gs
push
pop
jb
add
mov
addr16
inc
cltd
cs
jae
movsb
cmpsb
in
ret
or
dec
arpl
xchg
je
push
repnz
mov
jge
decl
imul
aam
aaa
lds
pop
inc
jo
jecxz
inc
aam
inc
std
roll
inc
pop
pop
dec
daa
inc
ljmp
adc
and
push
ss
cmp
sbb
xlat
shrl
fisubrs
lret
lret
xor
pop
iret
es
repnz
fists
pop
push
push
scas
fcmovb
inc
iret
int
xor
mov
outsb
mov
les
push
jge
inc
ljmp
xchg
push
subb
das
movsl
repnz
repnz
sub
mov
cmp
in
in
sbb
push
paddsw
out
xchg
jnp
pop
inc
mov
mov
es
inc
daa
push
push
outsb
add
and
loop
sub
arpl
push
out
lcall
out
jbe
adc
ja
push
push
fcomip
stos
xchg
pusha
xor
sbb
std
hlt
cmpsb
inc
xor
mov
cmp
dec
aad
adc
jge
mov
pusha
xchg
mov
stc
jle
popf
jge
icebp
popa
arpl
sub
rcrl
loope
jbe
mov
mov
adc
in
cmp
push
fldcw
jmp
test
lret
cli
int
lock
or
mul
xlat
cmp
scas
dec
fs
sti
int3
adc
mov
mov
imul
fcmovnbe
inc
fcoml
lea
adc
int3
fwait
sub
mov
pop
adc
push
cmp
mov
leave
insl
cmpsl
pop
cwtl
mov
sbb
pop
jg
iret
insb
push
mov
pusha
cmp
loope
insl
sahf
enter
lret
in
and
leave
lret
dec
adc
push
jmp
jge
mov
xlat
or
rcrb
cwtl
push
mov
int
jnp
repz
dec
push
cs
adc
cli
adc
adc
inc
data16
mov
xlat
and
out
pop
jp
repz
pop
inc
sbbl
cmp
add
bound
xor
daa
inc
outsb
xorl
outsl
test
push
pop
mov
or
dec
jp
mov
adc
xchg
les
xlat
mov
in
fstpl
dec
ja
cmc
adc
inc
pop
cmp
adc
xchg
jns
les
adc
pop
xorb
inc
push
or
andl
frstor
lock
jbe
lock
cmp
pop
clc
mov
test
lea
arpl
je
pop
cmp
stos
xchg
xchg
push
inc
dec
or
mov
js
stos
dec
ficoms
divb
inc
sbb
int
jge
bound
orb
inc
push
adc
dec
or
pusha
jbe
mov
aam
mov
xchg
inc
in
jo
mov
loope
or
les
xor
add
jne
sbb
and
daa
dec
sbb
or
sub
inc
shlb
loop
jb
popf
mov
sti
xchg
adc
mov
ror
add
shll
lahf
cli
enter
rcll
outsl
xor
mov
es
aam
xchg
test
or
ja
lea
jge
and
neg
inc
push
ret
and
push
lret
mov
stos
and
call
cwtl
leave
xor
inc
shl
shrb
fcoms
jnp
mov
scas
xchg
or
jne
fistpl
mov
add
shlb
sub
add
push
mov
vmovntpd
lea
out
test
rcll
shr
adc
out
andl
jmp
add
sbb
dec
mov
fld
and
data16
push
shlb
mov
or
add
cmpsl
inc
mov
fmull
stc
sbb
neg
ja
mov
push
and
pop
sbb
dec
ds
repnz
mov
mov
jae
das
push
out
sub
mov
repnz
push
pop
fstpt
dec
push
xchg
ret
cwtl
jp
fldln2
push
adc
xchg
mov
add
ret
cmp
sub
sub
inc
loopne
mov
ret
mov
push
xor
xor
pop
in
dec
inc
popa
cmp
fistpll
scas
sub
mov
setno
and
paddb
pop
std
mov
and
bound
push
jbe
test
pop
leave
nop
and
pop
mov
pop
mov
push
dec
insl
sbb
mov
scas
arpl
xchg
ds
shl
jae
and
jle
push
pop
push
mov
mov
or
pusha
adcl
sti
lea
push
cmp
pop
cmp
das
inc
les
jl
inc
dec
adc
les
xchg
inc
pop
jae
shrb
insl
iret
jne
mov
push
pop
dec
cltd
push
scas
mov
pop
sub
push
imul
add
xor
sbb
cmp
inc
push
outsl
and
sbb
push
repnz
pushf
mov
jb
pop
or
cmpl
icebp
nop
adc
into
ds
outsl
and
testb
lret
mov
pop
push
imul
repnz
bound
test
mov
jl
push
hlt
push
pop
jmp
adc
fldl2e
out
pop
call
mov
fwait
xchg
decb
repz
dec
or
jp
lods
mov
inc
push
add
loop
in
push
pop
mov
inc
mov
insl
xor
pop
daa
xor
outsl
and
dec
bound
jbe
pusha
das
inc
sbb
or
or
in
dec
fisttpl
or
sbb
cmp
outsb
popf
mov
inc
add
push
xchg
sub
add
xor
mov
and
inc
push
test
test
imul
loop
mov
fstpt
testb
dec
or
js
push
or
mov
cmp
insb
out
out
xor
iret
mov
mov
imul
push
cmp
push
or
xchg
mov
mov
mov
mov
push
add
inc
sub
mov
leave
mov
lock
repz
push
imull
ret
pop
and
adc
xor
sahf
cltd
rcrl
shll
loope
data16
inc
dec
fmuls
or
das
sub
xchg
adc
xchg
mov
jmp
cmp
pop
rep
inc
lds
sar
mov
filds
fdivrs
not
in
mov
push
aad
push
push
add
ljmp
mov
sbb
push
sbb
xchg
sub
jp
push
sbb
xchg
and
inc
adc
mov
xlat
inc
in
push
jae
mov
sub
outsb
js
mov
clc
add
sbb
gs
mov
test
sub
or
mov
push
or
push
fnstsw
out
inc
jb
cs
jne
or
int
sub
cli
pusha
and
es
push
xchg
inc
roll
sahf
pop
add
xor
popf
inc
adc
dec
filds
out
out
fiadds
scas
mov
xor
xor
addr16
push
add
fs
push
mov
mov
dec
inc
outsl
in
fstpl
xor
insl
push
int
mov
scas
sub
lahf
xchg
adc
scas
daa
mov
pop
js
and
add
ss
imul
inc
loop
movsl
loop
sbb
sub
adc
inc
scas
cs
incb
insb
outsl
adc
sbb
cld
les
sub
sub
inc
mov
mov
hlt
lea
shrl
sub
pusha
loop
pop
gs
cli
cmp
and
fstpt
scas
ret
scas
sbb
test
lods
testb
dec
inc
push
xchg
idivl
cmpsl
movsl
ds
mov
out
cmpsb
lret
into
mov
cmp
outsb
aas
inc
popa
push
mov
stc
vmread
cmc
add
mov
or
lahf
inc
inc
fcmovnbe
stc
and
call
jne
movsb
xor
into
in
push
mov
mov
adc
imul
or
cmp
subl
cmp
aas
sbb
loop
es
popa
xchg
jne
fsubs
faddp
add
ficoml
sub
jbe
jecxz
mov
jle
cltd
push
cli
jecxz
shll
in
sub
jge
add
inc
cmp
sub
mov
pop
out
push
and
inc
fcmovne
jbe
stc
adc
outsb
mov
rcl
aam
inc
mov
lahf
lea
add
sub
stos
and
xor
rclb
gs
jo
fmull
or
sahf
adc
push
aaa
sbb
xlat
lea
jbe
roll
cltd
sbb
sbb
mov
xor
inc
rorb
dec
test
inc
in
scas
shlb
inc
and
cmp
mov
aad
cs
imul
ret
jns
repnz
dec
jp
push
push
into
out
sub
sub
lcall
mov
mov
and
mov
adc
lods
movsl
stc
dec
push
in
test
fisubrl
jle
cmc
xchg
js
mov
ja
mov
push
lcall
mov
pusha
fidivl
jnp
in
push
int
jle
push
inc
mov
mov
mov
add
mov
fstl
cs
sahf
jmp
mov
sbb
lahf
decb
xor
je
jge
es
cmp
sbb
add
addr16
xchg
stos
dec
daa
out
jecxz
stos
jle
nop
out
xchg
xor
mov
enter
mov
cmc
ds
jg
mov
icebp
int3
sub
mov
mov
out
insb
add
and
jmp
mov
mov
in
mov
push
xor
lock
jb
xchg
dec
lcall
adc
aaa
xor
dec
xlat
arpl
and
orb
sub
push
insl
jmp
jle
pushf
sbb
sbb
and
xchg
xchg
adc
test
jno
push
stos
fst
cltd
push
adcl
push
ja
sbb
loopne
cld
mov
or
push
inc
sbb
dec
xchg
add
inc
loop
fmul
dec
filds
inc
gs
sbb
pop
inc
add
mov
dec
lock
inc
pop
inc
enter
sbb
dec
mov
fistpll
inc
insl
cmp
iret
sub
arpl
rcrl
inc
inc
int3
mov
jae
inc
movsl
dec
cmp
pop
mov
push
dec
xchg
pop
addr16
arpl
daa
imul
pop
enter
cmp
movsb
imul
sbb
movsl
xlat
jae
int3
rcr
dec
daa
addr16
pop
icebp
ret
xchg
addr16
aas
hlt
push
iret
xlat
inc
movl
sbb
jg
ds
cs
cltd
cmpsl
cli
mov
push
addr16
pop
shrb
add
mov
subl
iret
or
mov
rolb
xor
lahf
int3
jl
mov
outsl
in
repnz
mov
cmp
push
fisubl
inc
mov
dec
addr16
or
and
push
pop
push
inc
lods
andb
dec
jae
lods
push
and
pop
jb
dec
int3
push
iret
subl
pop
jmp
rcrl
es
adcb
cld
push
xor
imull
adc
sbb
icebp
gs
xchg
sbb
adc
lea
nop
jecxz
push
std
stc
daa
sti
xchg
sbb
add
pop
jnp
lret
sbb
mov
or
pop
sub
jge
mov
adc
int
push
popf
aad
leave
in
adc
lods
add
cli
mov
mov
cltd
shll
mov
xchg
mov
dec
mov
aas
dec
ss
sub
lods
in
cmp
sbb
lret
loopne
shrb
pop
outsl
hlt
shll
in
or
xlat
adc
icebp
hlt
bound
insb
jge
pop
push
outsb
jle
pusha
push
lea
scas
inc
dec
adc
repnz
imul
sub
cwtl
ret
test
test
outsl
ficomps
mov
aad
sbb
lods
aad
test
push
lods
push
sub
jl
pop
ds
es
xor
xchg
cmp
push
hlt
push
in
mov
das
xchg
xlat
jmp
sarb
test
jp
int3
jns
int3
aas
shrb
aam
dec
fsubrl
cli
arpl
mov
adc
and
mov
lcall
leave
aad
std
inc
lahf
mov
js
pop
pop
xor
sbb
cmp
nop
mov
fs
mov
cmp
fisubrl
aad
adc
sbb
sbb
xchg
adc
out
sub
mov
pop
cmp
push
pavgw
xchg
jp
idivb
aas
xor
xor
xchg
das
and
push
xchg
mov
lods
cmc
js
sbb
and
sub
aas
mov
push
in
leave
mov
test
mov
mov
xor
xor
jg,pt
jo
cli
adc
cmpsl
adc
lods
aam
cmc
int
mov
cmpsb
sbb
sub
outsb
or
shrb
mov
lahf
inc
sub
les
fnstsw
dec
adcb
lea
xor
mov
mov
sub
leave
in
xorl
push
popa
or
into
sbb
aas
mov
insl
sub
xchg
mov
cltd
push
popf
and
iret
call
or
jmp
cs
pop
loope
cmpsl
aaa
test
stos
or
sahf
divb
in
shl
pop
adc
lret
mov
test
cs
cwtl
push
fsubl
mov
hlt
cmp
xor
sti
mov
cmpsl
cmp
xor
bswap
cmpsl
out
push
es
test
mov
dec
in
pop
adc
loopne
jg
inc
test
push
xchg
dec
jp
and
sarl
movsl
arpl
sbb
lret
mov
loop
leave
mov
cli
pop
xchg
and
dec
cmpsl
push
lea
pop
pop
outsb
es
sub
leave
sbb
aam
fstpl
xchg
and
mov
dec
or
fcmovnb
loopne
fwait
mov
add
add
cmp
inc
mov
das
mov
std
movsl
gs
xor
mov
and
and
stos
sub
add
icebp
and
add
gs
pushf
das
cwtl
mov
xchg
mov
mov
jecxz
sub
dec
cmp
and
push
pusha
adc
sub
fadd
jb
xchg
popf
fcoml
xchg
and
cld
pop
int
aas
xor
mov
clc
sbb
xor
mov
sbb
xor
xor
jae
sub
inc
std
ds
and
cmc
mov
mov
sbb
push
loope
pop
es
ss
daa
sbb
nop
adc
push
inc
rol
repz
popa
pop
sub
or
adc
adc
bound
sbb
fmulp
in
std
adc
jns
out
jo
and
cmpsl
mov
fnstsw
stos
sub
sahf
push
xchg
xor
fwait
lret
ficoms
push
sbb
jne
jge
jecxz
mov
lret
push
pop
hlt
es
les
sub
popa
cmpsl
pop
aas
cli
into
pop
or
cld
mov
neg
or
stc
imul
push
fwait
mov
lea
cmc
setg
xor
pop
sub
xchg
or
je
sbb
xchg
inc
repz
sbb
dec
test
adc
push
out
fildll
sbb
push
dec
mov
xchg
sbb
notl
ss
mov
pop
mov
outsl
sub
aad
jae
inc
and
mov
xor
dec
icebp
xchg
insl
leave
out
dec
mov
testl
mov
mov
add
xor
push
rcrb
outsl
xchg
out
inc
cmpsl
mov
fwait
stos
dec
xchg
js
sub
in
out
push
and
dec
push
fnstenv
push
int3
xor
push
sbb
xchg
movsl
xlat
cmp
push
mulb
pusha
icebp
arpl
lret
out
push
inc
push
jmp
pop
dec
gs
das
pop
fildl
aam
mov
aad
jg
xchg
or
xchg
or
jp
sbb
loope
inc
lret
mov
data16
or
jo
inc
mov
aaa
fwait
divb
arpl
aaa
xor
sbb
inc
in
xchg
incb
stc
in
pusha
jae
sbb
dec
inc
scas
jecxz
mov
jo
insb
stos
iret
push
cmp
jmp
rclb
outsb
mov
outsb
xchg
inc
mov
dec
sub
addb
ja
inc
mov
arpl
mov
xchg
movsl
bound
daa
dec
jg
inc
cmp
das
mov
repnz
pop
adc
push
test
sub
out
pop
fs
mov
sub
les
cmp
ret
add
cli
test
jno
mov
rclb
push
lods
gs
mov
jb
ret
js
rolb
fsubrs
rclb
imull
iret
popa
and
push
adc
stc
andb
mov
enter
scas
es
in
cmp
inc
into
xor
rcl
test
jne
and
ljmp
mov
push
stc
inc
dec
out
ja
and
inc
shlb
dec
mov
movsl
pusha
les
cmpsl
out
cmp
mov
rorb
pop
mov
pop
ret
test
mov
add
inc
lods
filds
out
jno
or
cmpsb
testb
in
adc
popa
out
adc
mov
jno
mov
add
stos
push
shlb
daa
mov
test
mov
dec
inc
jp
xchg
pop
aad
pop
popf
push
xor
push
cld
inc
idivb
cld
push
pusha
jl
dec
adc
daa
int
hlt
out
cwtl
mov
xchg
pop
and
arpl
sbb
shl
add
mov
arpl
les
mov
jnp
xor
xchg
das
ja
or
mov
jecxz
mov
sub
sbb
in
and
inc
outsl
lahf
pop
insb
int3
sbb
cmp
sarl
inc
sbb
or
test
je
add
push
mov
rcll
xor
ds
mov
gs
nop
mov
lds
push
mov
and
mov
push
aad
add
in
inc
pop
push
pop
adc
in
xchg
movb
sbb
xor
test
popa
push
leave
mov
loopne
ljmp
daa
push
mov
mov
jae
insl
add
push
inc
mov
inc
movl
push
push
int
inc
or
push
shll
aam
out
and
xorb
mov
sahf
push
ljmp
fimuls
mov
lds
sarb
adc
add
stos
loope
cmp
jo
scas
jnp
adc
jno
fmul
xlat
into
es
jbe
mov
fcomi
mov
mov
push
xchg
fs
std
pop
inc
adc
iret
mov
ds
mov
mov
mov
push
fcmove
adc
jae
int
movsl
jns
add
jg
mov
push
in
mov
addr16
dec
jbe
push
dec
out
aad
mov
inc
jg
or
pop
outsb
pop
inc
xchg
push
aaa
cmp
in
inc
pop
inc
and
fsubl
ljmp
mov
xor
arpl
ds
push
pusha
popf
pop
outsb
and
xchg
movsb
inc
or
xor
repz
gs
pop
mov
fcoml
nop
jnp
push
out
pop
cmpsb
jle
jmp
div
popf
ljmp
jno
scas
js
lods
inc
or
hlt
pop
enter
sti
adc
adc
jbe
add
testl
mov
stos
jle
mov
lods
cmpsl
divl
cld
jge
jb
mov
outsl
jae
in
jge
xchg
adc
les
sbb
mov
xchg
out
add
dec
mov
int3
ret
inc
push
add
jne
xchg
test
ret
xor
lods
sbb
and
jbe
inc
add
inc
inc
and
sub
jl
inc
pop
inc
inc
mov
sbb
inc
in
lds
cltd
shrb
mov
add
sbb
cmp
xchg
adc
test
sub
cli
lock
adcb
mov
sarb
ja
push
push
cmp
cli
cmpsl
sbb
shll
cmp
pop
xchg
and
cltd
aas
pextrw
inc
fwait
sbb
sub
lds
scas
arpl
mov
dec
xchg
outsb
xor
movsb
mov
cvtdq2ps
mov
mov
scas
nop
adc
je
mov
fdiv
pop
and
in
pop
push
inc
sahf
lahf
mov
xor
push
flds
mov
cs
sub
or
pop
xchg
inc
ficomps
in
stos
or
addr16
ja
loope
mov
in
dec
sbb
arpl
test
ljmp
aad
jge
shr
dec
fs
mov
rolb
cmpsb
mov
insb
fisttpl
and
lods
inc
mov
xor
les
dec
push
jecxz
and
add
sbb
jecxz
shrb
testl
sbb
pop
mov
or
aaa
jb
mov
and
out
insl
cmp
push
cmpb
ljmp
pop
std
sahf
aad
popa
hlt
push
push
and
leave
rorl
xor
out
adc
mov
push
pop
lcall
fadds
push
push
add
xchg
test
jo
in
aaa
mov
pushf
mov
leave
sub
pop
gs
aad
mov
pop
xchg
rorl
gs
ret
mov
or
ja
fisubrs
hlt
pop
dec
push
mov
in
neg
mov
xchg
and
sahf
test
inc
dec
daa
hlt
jnp
push
movsl
in
adc
in
jg
and
inc
aad
in
xchg
jo
pushf
lret
adc
push
pop
loop
lock
ret
mov
popf
shrl
adc
sub
and
out
jb
loop
ljmp
push
fwait
loope
add
cmc
dec
xchg
repnz
sbb
lds
xchg
pop
ficomps
inc
jmp
in
test
cltd
dec
push
lret
mov
or
inc
mov
and
loopne
movl
dec
push
lock
imul
andl
imul
jmp
fwait
and
outsl
push
jns
cmp
jnp
pop
jl
fiaddl
imul
push
lds
push
or
pop
int3
adc
push
jecxz
mov
fwait
popa
sbb
push
fisttpll
or
stos
pop
pop
push
push
or
push
jg
stos
mov
push
jl
pop
jl
fiaddl
imul
push
xor
or
fidivs
add
pop
mov
adc
pop
dec
jecxz
aaa
daa
test
shll
xor
add
sbb
jmp
cs
repnz
jo
pop
sbb
in
mov
mov
leave
mov
fstpl
sub
mov
dec
loop
insl
lcall
movsl
das
mov
jle
xchg
mov
std
push
add
movsl
lock
inc
stos
fistpll
push
inc
jne
and
sbb
inc
mov
xchg
mov
add
and
icebp
xlat
inc
fs
in
push
dec
fs
sub
cmpb
inc
shlb
data16
xor
loope
ja
outsl
into
inc
popf
sub
test
cmp
scas
sahf
pop
pop
stos
jg
cmpb
pop
mov
push
push
imul
jmp
xlat
leave
ret
enter
nop
mov
jns
movsl
mov
mov
iret
push
lret
mov
xchg
pop
adc
loope
jl
in
sub
inc
xchg
push
push
stos
xor
push
cmpsb
xor
push
adc
or
popa
aas
mov
inc
cmp
or
xlat
nop
inc
inc
jmp
hlt
jp
push
hlt
and
mov
shrb
loope
add
pusha
out
push
mov
push
out
fs
push
repnz
push
addr16
sub
or
and
in
xchg
insl
mov
or
clc
lock
push
push
adc
adc
mov
out
mov
dec
cwtl
loope
dec
je
out
cmp
mov
out
aas
mov
kmovb
lock
xchg
out
cwtl
jne
fisubl
aas
fldt
lcall
add
push
adc
mov
hlt
pop
sbb
addr16
in
pushf
insl
cmp
xchg
cmp
fists
adc
jnp
outsb
ficomps
fdivs
in
mov
mov
or
sahf
loop
pop
scas
sbb
adc
and
jp
dec
jp
leave
inc
movsb
lea
jmp
adc
ret
sbb
mov
repz
out
nop
iret
fidivrs
outsl
add
xlat
fwait
test
out
es
fwait
pushf
cmp
add
stos
push
dec
pop
sbb
mov
into
xchg
dec
int
and
sub
sub
add
imul
outsl
ficoms
fmull
cmp
icebp
lods
push
pop
es
popa
xchg
ljmp
pop
cmpsb
mov
mov
pop
test
aam
fiaddl
cli
daa
in
outsl
in
push
add
pop
rcrl
fdiv
loope
test
fdiv
loope
stos
ss
mov
push
je
popf
stos
pop
out
and
sahf
mov
pop
mov
inc
pop
xchg
pop
push
addr16
mov
xchg
jge
fbld
imul
addr16
cmp
jge
int
xor
push
pop
jnp
fidivrs
sub
cmp
push
lods
inc
jno
cs
ret
in
imul
mov
inc
fiadds
adc
repz
lret
shlb
push
shlb
inc
fiadds
jmp
add
movsb
lret
mov
rolb
add
imul
push
cs
push
mov
movsb
dec
stos
int3
fisttpl
push
xchg
into
iret
and
iret
sbb
mov
dec
dec
popa
adc
rcll
movsl
and
cmp
inc
pop
or
xor
xchg
rcll
andl
imul
aas
push
negl
push
bndldx
fildl
mov
outsl
insb
iret
cmp
pop
inc
jne
fimull
aam
sbb
sub
ja
or
aad
cmp
cmp
aad
adc
lcall
jnp
and
mov
ficomps
jle
or
sub
mov
cld
lcall
dec
mov
inc
sbb
rolb
imul
ss
pop
mov
fsubp
jg
pop
mov
fsubp
bound
arpl
scas
inc
inc
lcall
fs
jo
push
xchg
ja
jmp
sbb
jb
rcrl
mov
ret
or
inc
sub
jns
dec
fildl
les
cmp
rolb
or
rcll
das
jbe
fists
popf
fs
and
cltd
dec
add
iret
or
inc
sbb
add
lcall
pop
xchg
push
ss
push
nop
and
lea
test
jb
dec
sub
inc
mov
ffreep
push
out
jb
inc
insb
iret
sub
jmp
dec
fidivrs
add
xor
pmaddwd
sub
add
roll
sbbl
inc
push
xor
dec
jmp
in
add
mov
and
inc
imul
and
mov
sbb
xor
dec
dec
push
xor
cltd
xchg
out
std
stc
bound
test
shlb
pop
stc
loopne
insb
out
test
or
je
jge
xor
inc
push
xor
ret
add
jbe
jne
aaa
xchg
shll
push
adc
addl
adc
adc
mov
cmpsl
cli
mov
mov
sbb
mov
gs
orb
sbb
xchg
lahf
sbb
roll
mov
xor
jbe
pop
sbb
in
imul
lds
rcrb
movsl
push
lods
jp
fsubs
cmc
inc
in
repz
xchg
jle
cmc
dec
mov
mov
imul
adc
cmp
cmp
adc
in
sarl
inc
cmp
fisubs
xchg
mov
clc
mov
pop
mov
and
and
sbb
int
add
adcb
popf
aad
push
lcall
sub
xchg
das
daa
movsl
push
xor
xchg
popa
xchg
add
mov
fsubl
or
pusha
xor
ret
push
xor
add
push
test
sbbl
imul
adc
repz
enter
sbbl
xchg
call
nop
in
add
aad
mov
cs
pop
mov
xchg
lcallw
data16
lret
orl
ds
fmull
pop
cltd
orb
add
cltd
ja
mov
and
xor
mov
mov
add
add
outsl
scas
bound
enter
repnz
aad
push
pop
mov
mov
pop
dec
aaa
dec
jne
bound
jecxz
sbbl
add
orl
daa
adc
inc
data16
rep
xor
push
rcl
ret
pop
decb
stos
addr16
dec
push
push
insb
in
fsubrl
jl
icebp
lea
dec
inc
in
std
hlt
xchg
sub
jns
xchg
shlb
clc
ja
push
aas
mov
andb
xor
cmpsb
and
mov
daa
dec
adc
neg
push
mov
inc
fwait
xchg
mov
out
ja
pop
enter
pushf
mov
add
xor
sub
dec
cmpsb
inc
aas
cmpsl
fnstsw
pop
and
decl
xchg
jo
sbb
pusha
and
leave
fstl
ss
jge
and
jge
xchg
jne
sahf
xchg
cmpsl
lods
aad
add
or
dec
pop
ret
mov
dec
jecxz
mov
scas
arpl
sbb
add
and
sbb
sarl
popl
leave
movsl
pop
push
sbb
push
inc
bswap
mov
xor
pusha
pop
pusha
fiaddl
cltd
add
mov
inc
ret
test
int
jae
sub
gs
das
cmp
icebp
nop
pop
mov
leave
rcrb
pop
pop
xor
inc
cld
mov
cmpsl
cmpsb
aaa
ja
out
data16
stc
mov
xlat
xchg
popa
sub
ss
lds
iret
popf
cmp
outsb
xchg
jno
push
pop
pop
dec
xor
push
icebp
mov
jl
cmc
in
scas
jo
imul
mov
pop
ja
xchg
jl
pop
push
aad
pop
in
lcall
in
stos
sahf
push
jae
jp
sub
xchg
test
shrl
adc
adc
xchg
mov
mov
insl
negb
xor
shll
into
xchg
outsl
cwtl
inc
xor
adc
insl
jns
cmp
inc
test
jl
rcl
inc
lds
and
xchg
push
cltd
and
and
or
add
test
jno
mov
xor
push
jb
lds
cs
mov
jp
pop
and
insb
adc
scas
fnstcw
sub
add
mov
push
repz
cltd
dec
jl
mov
and
jo
inc
shlb
inc
xchg
jmp
iret
jbe
rcl
lods
into
inc
ja
into
mov
push
inc
mov
rcll
add
cs
aad
loop
add
sbb
aad
xlat
sbb
mov
and
xor
sub
dec
adc
dec
iret
jo
hlt
out
dec
ds
push
inc
push
jecxz
jns
test
inc
fidivs
arpl
dec
addr16
pusha
xor
rorl
sub
mov
mov
cmp
push
cmp
clc
scas
dec
dec
inc
fdivl
scas
out
lret
adc
popf
jns
dec
fisttps
ljmp
pop
das
cmp
add
push
push
js
dec
add
push
adc
bound
leave
je
pop
rcrb
cwtl
pushl
cmp
stc
test
ljmp
ss
dec
jg
inc
shll
xlat
push
add
stos
xchg
mov
cmp
xchg
fdivs
cmpsb
mov
out
cmp
iret
adc
push
push
push
setno
sub
pop
lock
dec
inc
xor
les
mov
xchg
push
sbbb
sub
les
inc
sub
mov
xor
xchg
orb
dec
movsl
mov
pop
jle
stos
jg
pushf
aad
inc
fildll
negl
sahf
pop
xchg
or
ja
ja
imul
loop
ds
sbb
cmpsb
iret
jp
insl
pop
push
and
ss
mov
pop
dec
cwtl
pop
mov
cld
dec
push
icebp
push
pop
ja
ja
mov
mov
negl
inc
es
fcmovb
push
test
dec
pop
sbb
mov
push
mov
fnstsw
addr16
insb
and
out
fisubrl
ret
loopne
imul
rolb
add
orl
out
ret
or
mov
push
filds
push
inc
lcall
stos
pop
push
pop
jl,pt
mov
inc
add
jecxz
add
dec
jno
cli
call
sbb
repnz
mov
popa
sub
cld
mov
inc
sbb
test
ret
aad
pop
jbe
clc
js
sbb
pop
xor
lret
pop
mov
data16
xchg
pop
push
daa
inc
sub
push
add
add
decl
test
popw
ficomps
xor
push
mov
mov
stc
rol
shlb
dec
rcl
mov
pop
pop
cld
lret
test
cwtl
fisubs
lods
addr16
insl
dec
mov
xchg
sub
adc
decb
cld
mov
dec
hlt
jo
gs
push
dec
sahf
push
push
aaa
mov
push
mov
push
fwait
xlat
lods
xchg
outsb
int3
mov
mov
enter
test
inc
loope
pop
push
imul
push
fwait
outsb
jge
xchg
stos
out
cwtl
mov
leave
test
arpl
mov
ds
xlat
fwait
xlat
rorl
xor
outsb
mov
loop
xor
pusha
jge
xchg
fstps
inc
cmp
aam
out
push
arpl
add
fiaddl
out
adc
and
pop
xchg
nop
gs
mull
mov
cmc
cmpxchg
add
fiaddl
adc
bound
sub
mov
add
mov
fstpt
pushf
pop
arpl
inc
popa
leave
cmpsl
call
sbb
ffreep
je
sbb
test
lcall
jns
outsl
test
inc
bound
repz
and
pushf
repz
sub
fidivrs
scas
jno
out
and
ret
iret
dec
sarb
mov
jno
out
int3
push
icebp
xor
push
sbb
add
dec
les
iret
inc
jl
idivb
xchg
and
xor
outsb
fidivl
into
je
or
mov
ja
mov
mov
mov
cmpsb
xor
sbbl
inc
icebp
js
add
cmc
sbb
cmp
in
addr16
rol
push
mov
insl
mov
mov
js
cmp
jae
addr16
subb
or
popa
and
push
mov
pop
jp
jno
jns
push
imul
stos
daa
mov
ss
xchg
nop
lods
lods
scas
cmp
dec
adc
dec
data16
adc
das
xchg
cmp
in
cld
data16
outsl
cmp
stc
dec
mov
icebp
inc
jl
test
mov
call
fistpl
cltd
jo
or
popa
imulb
and
ljmp
mov
jb
bnd
dec
into
scas
mov
cmp
dec
jb
xchg
pop
cmp
int
or
inc
repz
sub
repz
popf
push
out
inc
repz
roll
push
cs
sbb
pop
pop
rorb
lcall
das
inc
sub
fs
or
or
mulb
xchg
push
cs
in
push
loop
jo
sub
inc
jo
dec
repz
loope
scas
or
popf
cs
sbb
aaa
xchg
dec
xchg
dec
inc
loope
cs
push
add
push
xchg
sub
push
movsb
add
shlb
add
imul
sbb
icebp
lret
cld
insb
and
aad
adc
inc
sub
fninit
movl
inc
and
aad
imul
out
iret
aad
xor
mov
dec
mov
aaa
pop
aad
test
mov
or
pop
pop
test
out
iret
aad
xor
jo
pop
dec
mov
push
pushf
mov
xor
clc
addr16
sub
mov
mov
and
aaa
and
xor
sarl
mov
jno
gs
out
out
xchg
sbb
push
inc
mov
cld
xchg
icebp
out
je
mov
lahf
out
mov
push
addl
inc
sbb
push
mov
xor
insl
add
fs
jmp
iret
or
iret
cmpsb
mov
movsl
gs
sub
cmp
xchg
inc
and
inc
dec
and
push
push
cmp
xchg
jno
fbstp
rorb
xorb
or
lea
rorl
jmp
xchg
add
xchg
in
sbb
dec
or
enter
add
lret
or
fcoms
pop
jg
les
dec
shll
lods
push
lock
xchg
push
jae
adc
mov
lods
mov
scas
fisubl
inc
daa
ja
sti
inc
push
cmpsl
cmpb
push
fmull
inc
addr16
dec
jmp
shrb
les
xchg
stos
cmp
loop
push
dec
push
xchg
sbb
lods
push
push
shll
mov
lds
loope
mov
popa
inc
fwait
push
loopne
jl
inc
pop
arpl
aaa
push
stc
popl
xchg
jne
clc
bound
and
mov
mov
mov
or
inc
inc
jnp
pop
mov
sahf
inc
sub
and
xor
in
repz
sbb
sbb
inc
mov
cmp
mov
jo
sub
pop
movsb
and
filds
jg
in
or
dec
dec
sub
and
scas
fidivrs
int3
or
int
sti
lods
ds
mov
pusha
jnp
pop
pop
pop
movsb
and
xlat
add
in
mov
sub
cmpb
inc
or
and
into
push
push
pop
adc
loop
and
cmp
dec
jnp
fistpl
cmpsb
and
lds
inc
sub
daa
add
xor
and
andb
sti
xchg
ret
movsl
adc
sub
sbb
mov
mov
push
dec
dec
imul
mov
add
data16
insb
sti
test
insl
mov
cmp
jmp
inc
dec
add
adc
xchg
vrsqrtps
clc
popa
pop
test
and
stos
cmp
sbb
push
push
lcall
adc
dec
inc
cmp
popf
push
in
into
cmp
mov
ds
out
mov
mov
dec
or
push
imul
lret
les
sbb
addr16
into
es
movsl
push
lock
mov
jle
enter
lahf
out
inc
lds
jb
rorl
xchg
jmp
xchg
cmpsl
mov
push
loopne
cs
mov
mov
testl
push
test
fcmovne
mov
mov
push
mov
sub
fildl
push
inc
fwait
inc
add
out
inc
test
test
mov
shl
rcll
dec
mov
push
dec
and
test
lds
adc
xchg
scas
stos
std
in
sbb
add
or
mov
insb
js
jno
sub
in
les
cmp
pop
xchg
mov
dec
scas
adc
mov
hlt
lret
mov
dec
fildl
and
cmpsb
lcall
cld
incb
adc
adc
ja
and
gs
lea
stos
xchg
gs
sub
in
bound
dec
fcomp
mov
jg
sub
repnz
lret
lret
xchg
mull
mov
xor
jmp
cmp
mov
mov
clc
add
cwtl
and
icebp
imul
mov
push
cwtl
je
mov
pop
cmpsl
daa
pop
jbe
fcomi
adcl
mov
sub
fildl
cmpl
lahf
scas
shll
cmpsl
cmc
scas
mov
push
jl
enter
and
mov
roll
pop
pop
cld
xchg
rclb
sahf
or
arpl
cmp
pop
pop
push
js
push
ret
mov
ja
push
push
stos
sbb
mov
scas
mov
cmp
js
clc
xchg
lret
test
push
mov
lea
xchg
aaa
inc
popa
and
aaa
jmp
jg
push
loopne
sti
lahf
int
mov
insl
ja
mov
js
clc
ror
sbb
sar
stos
sub
lahf
add
loop
jg
sbbl
outsb
in
fisttpll
movsl
fildl
push
dec
int3
outsl
sub
loopne
mov
xchg
push
ds
add
cmp
cltd
dec
sub
scas
push
test
movb
xchg
sub
mov
dec
mov
adc
inc
pop
js
shr
jecxz
pop
xor
and
push
stc
xor
mov
popa
and
push
lahf
les
std
loop
dec
ror
arpl
stc
shll
dec
mov
cmp
cmp
cmp
decb
mov
jmp
into
into
or
or
jmp
xor
je
or
js
push
subl
in
dec
jnp
dec
cltd
mov
cs
xor
adc
add
dec
in
rol
lahf
repz
mov
jnp
adc
jp
lahf
ja
mov
into
xchg
xchg
es
shrb
mov
arpl
cmpsb
inc
push
mov
and
push
cld
nop
aam
sar
mov
add
sbb
and
add
and
inc
int
and
fstl
cltd
repz
mov
jnp
adc
jp
xchg
ja
push
cs
les
mov
add
jns
jno
pop
xchg
cmp
mov
les
arpl
mov
mov
lret
out
mov
adc
add
jp
jnp
adc
jp
lahf
pop
cs
inc
gs
and
incb
or
xlat
jae
les
outsl
inc
mov
cli
pop
jne
jne
movsl
movsl
pop
scas
fisttps
jmp
mov
lea
pusha
inc
mov
cltd
xorl
jne
jp
jp
lahf
pop
sbb
into
xchg
jne
dec
sub
and
xchg
into
inc
push
mov
push
imul
shll
jbe
jg
and
ja
je
gs
call
scas
scas
cmpsb
aad
test
lahf
push
movl
inc
outsl
mov
in
sub
xchg
loope
repnz
cmp
xchg
xchg
mov
into
call
jle
xchg
pop
out
adc
mov
cmp
mov
xchg
inc
ja
lods
mov
push
pushf
xchg
xchg
fcomps
cmp
mov
sub
or
fidivrs
data16
push
mov
call
fwait
sub
scas
mov
push
lret
inc
pop
pop
xorb
je
mov
cli
xchg
flds
out
xor
sbb
mov
cmp
hlt
fs
mov
cmp
mov
mov
mov
adc
mov
movsl
push
sub
mov
test
lods
roll
cmpsb
mov
test
les
popfw
mov
push
add
nop
add
xor
test
jmp
xchg
sahf
xor
ret
inc
fiaddl
lea
test
sub
mov
rcr
daa
fists
repz
xchg
dec
shufps
adc
repz
scas
mov
dec
shufps
xor
gs
leave
subb
xchg
inc
add
add
nop
mov
mov
dec
fidivl
jno
xchg
or
int3
idivb
cli
mov
xchg
add
mov
mov
dec
mov
jno
mov
lcall
in
fldl
mulb
xor
push
mov
mov
mov
jle
nop
inc
xchg
nop
inc
inc
aaa
jmp
add
xchg
push
leave
test
fmuls
aad
push
add
fidivrs
mov
mov
fisubrs
push
lods
bound
fs
xchg
dec
mov
loopne
or
xchg
cmpsb
or
in
inc
cltd
dec
sub
out
jbe
mov
bound
popf
and
popf
mov
inc
test
sub
push
bound
call
push
ds
lea
inc
inc
mov
cltd
test
pop
das
sub
add
cld
push
test
daa
mov
push
outsl
add
addr16
imul
mov
fwait
outsl
push
subb
or
xor
inc
loop
xchg
filds
test
cmp
nop
push
jbe
movsl
das
or
stos
fwait
add
lret
add
xchg
cmp
jnp
cmp
lcall
push
lcall
mov
lods
or
xchg
scas
icebp
mov
cmpsl
push
out
xchg
addl
mov
inc
inc
push
cs
pop
or
pop
ja
push
sub
std
ljmp
and
pop
sarb
pop
dec
inc
push
sbb
inc
mov
jmp
out
jg
ficoms
xor
and
xor
add
xor
mov
imul
ret
inc
add
ljmp
dec
int3
std
pop
add
cmp
lods
pop
fs
mov
sbb
std
push
mov
dec
insl
stos
push
mov
fadds
test
or
push
cmc
scas
xorl
pop
sbb
mov
pop
add
mov
mov
nop
mov
nop
aaa
cs
push
xor
and
stc
mov
xor
frstor
orl
sbb
push
push
add
pop
cmp
into
or
out
add
cmp
sub
push
sbb
jo
into
xchg
mov
ret
insl
fldl
fcompl
mov
sbb
push
insb
pop
add
push
pop
stos
shll
jecxz
push
int3
adc
pop
rcrb
mov
lret
popl
mov
rcl
movsb
push
sarl
ljmp
in
sbb
mov
pushf
mov
jb
mov
jbe
stos
pop
mov
aam
orl
adc
mov
xchg
or
shlb
scas
push
cltd
adcl
lcall
hlt
mov
xchg
jb
cli
inc
sbb
jno
iret
add
ds
mov
and
cmp
mov
in
xchg
rclb
aad
notl
mov
or
ficomps
iret
pop
je
les
mov
mov
mov
aam
cmp
icebp
test
lea
stos
mov
adc
nop
sub
imul
inc
mov
xchg
jp
rcl
pop
aaa
loopne
inc
inc
gs
jae
mov
es
data16
sub
sbb
out
movsb
repnz
push
or
mov
orb
loopne
aad
lahf
daa
sbb
or
xchg
stos
nop
imul
out
inc
addr16
push
aad
sbb
mov
xor
mov
sub
mov
and
insb
xchg
gs
inc
jle
lret
out
mov
and
ljmp
sbbl
sarl
ds
push
aas
enter
shrb
jnp
aaa
inc
in
xor
vpaddb
pop
jl
dec
adc
fnsave
or
sbb
aaa
ss
mov
dec
daa
mov
push
cli
push
rcll
fwait
or
dec
cmc
cmp
pushf
inc
loop
push
lds
push
dec
push
test
sbb
lea
push
and
cmp
dec
aaa
in
add
sbb
push
arpl
xor
in
xor
mov
mov
cmpsb
push
inc
add
mov
or
fwait
sub
int3
jp
mov
and
mov
add
idiv
sysenter
stos
mov
pop
push
outsl
cld
jno
jmp
inc
inc
sti
pop
pop
addr16
nop
movsl
adc
in
test
jp
xchg
mov
inc
ficomps
arpl
inc
mov
add
out
je
and
pop
push
idiv
xlat
fcmovu
xchg
add
push
push
push
sub
fadds
xchg
mov
sub
cmp
fdivs
or
ret
aad
cmpsl
sbb
pop
into
gs
insl
mov
idiv
xor
add
mov
cltd
and
leave
lds
and
repnz
and
test
mov
pop
xlat
push
jle
inc
test
lea
dec
sarb
shrl
lret
hlt
shll
stc
mov
icebp
pushw
push
lahf
movb
mov
xlat
stos
jb
nop
stc
xchg
push
rorb
lret
or
loopne
add
loope
subb
fdiv
repz
mov
push
je
sahf
pusha
mov
shlb
and
xchg
fldl
push
pop
xor
cmpl
mov
and
jmp
fwait
jmp
loope
popa
rol
shll
lods
jae
lret
movsb
scas
lret
nop
sub
jnp
cmpsl
cmc
int
ja
daa
call
movsb
mov
xchg
mov
ss
jg
fcmovb
insb
sbb
pop
es
add
jmp
cmpsb
out
ret
test
das
add
pop
xchg
ja
enter
adc
fistpll
xchg
stos
imul
mov
iret
adc
lods
hlt
or
loopne
aam
xchg
lahf
jl
mov
pop
test
test
enter
ds
mov
iret
je
dec
lahf
sarb
and
dec
mov
out
xor
imul
je
cltd
cmp
and
xor
add
jmp
push
cmpb
xchg
mov
push
add
test
je
jg
dec
jmp
mov
sbb
pop
push
dec
dec
jecxz
mov
add
bound
cmpsb
fdivrs
lods
jle
outsb
mov
stc
in
mov
inc
cmpsb
add
rolb
imul
iret
rol
cltd
cmpsl
cmp
cwtl
jmp
and
mov
js
xchg
out
pop
jle
adc
popa
test
xchg
xchg
mov
std
cmp
mov
adc
sub
imull
scas
popa
jnp
in
sbb
push
dec
mov
jecxz
xor
push
jmp
int
sti
push
popa
out
jmp
xchg
xchg
movsb
mov
mov
int
xchg
push
orl
mov
pop
push
or
lds
loop
xchg
movsl
push
loop
sub
inc
les
lahf
pop
push
add
pop
sarb
in
sub
test
ds
xor
into
movsb
sub
mov
inc
movsl
std
mov
jge
das
add
iret
ret
inc
shrl
sub
outsb
cmp
and
subb
sti
stc
jecxz
add
or
and
add
shrb
pop
out
sbb
aas
mov
cmp
inc
mov
icebp
and
xorl
add
out
enter
imul
or
scas
stos
mov
movsl
add
push
inc
ret
adc
and
pop
push
push
fistl
and
sbb
popf
xor
mov
mov
dec
or
and
mov
inc
push
int
cmc
ss
mov
adc
pop
mov
in
xor
sbb
loop
shrb
xabort
into
pop
inc
ss
pop
ret
lea
repnz
jp
outsl
in
push
mov
add
inc
xor
adc
mov
orb
sub
cmp
push
icebp
cmp
xchg
cmp
pop
aad
shrb
bound
shlb
xchg
in
pop
pop
repnz
mov
int
xchg
fcom
cmpsb
jmp
jmp
addb
pop
pusha
incl
inc
xorl
imul
lods
mov
cld
lret
sarb
cmpsl
adc
sbb
mov
adc
test
aaa
inc
rclb
jne
addr16
adc
adc
mov
cli
out
mov
mov
push
lcall
sub
scas
movsb
mov
mov
insb
jmp
dec
mov
leave
pop
jb
inc
testl
dec
mov
xlat
lds
data16
das
adc
in
pop
cltd
add
jbe
stos
mull
ljmp
sub
cli
out
in
pop
fiadds
lcall
mov
test
pop
sub
xor
sbb
sbb
mov
xchg
adc
cmpsb
xchg
insl
loope
sbb
xlat
push
push
push
fs
mov
or
fnstenv
mov
push
mov
or
mov
rcrw
mov
stc
pop
data16
and
out
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
iret
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
js
das
frstor
fnsave
sarb
aam
repz
adc
xor
xchg
sub
or
jbe
xor
dec
enter
sti
mov
faddl
sub
lods
das
dec
aaa
kmovb
sbb
jmp
repz
in
adc
mov
aaa
pushf
adc
es
lret
dec
enter
rcrb
mov
push
lods
xchg
in
lret
mov
out
mov
xchg
cwtl
xor
fstps
movsl
cmpsl
or
or
jns
jecxz
icebp
inc
ret
sub
scas
add
push
xchg
mov
test
addr16
or
xchg
cmc
in
push
fildll
cmpb
in
mov
xchg
xchg
mov
je
xlat
sahf
add
mov
pop
scas
xor
icebp
test
add
mov
jmp
mov
out
outsb
movswl
lds
ret
add
sbb
out
adcb
out
and
xchg
sub
mov
adc
inc
add
jle
mov
mov
pushf
sbb
sub
negl
pushf
ss
orb
movsl
out
or
pop
mov
repnz
xchg
xorl
loope
insl
push
xchg
pop
fnsave
aaa
aaa
cmc
sub
out
xorl
lods
push
scas
ret
inc
xor
cs
rcll
cmpsb
stos
push
in
pusha
cmp
leave
int3
xchg
mov
outsl
loopne
cwtl
jbe
adc
mov
cmp
movl
repz
orb
mov
sbbl
mov
rolb
iret
inc
hlt
pop
nop
shll
ret
aas
jle
jae
loopne
fcomip
mov
mov
adc
int3
out
rcll
pusha
pop
jle
ss
lods
mov
sbb
loop
fdivr
mov
sub
add
mov
jne
mov
imul
push
leave
test
out
iret
pop
push
addl
pop
scas
push
lret
xchg
mov
xchg
icebp
jg
lret
mov
cmpxchg
mov
mov
shll
aad
cld
dec
mov
fiaddl
xor
xchg
xor
jg
xchg
cmpsl
jg
stos
scas
sbb
arpl
into
fwait
mov
cmp
lret
mov
gs
test
std
out
aaa
dec
jbe
ret
xchg
mov
push
mov
ret
out
add
addb
xor
jle
pop
hlt
xor
push
cltd
sub
pop
add
push
std
data16
notb
push
pop
rolb
inc
xlat
mov
xchg
push
xchg
xlat
pop
aad
xchg
mov
rcrb
dec
fiadds
and
xchg
iret
scas
fwait
cld
hlt
cmp
adc
insb
mov
sar
pop
and
das
mov
and
and
pop
dec
mov
jle
in
addr16
ljmp
mov
aas
ss
sub
inc
mov
fsts
adc
lahf
sub
movsb
xorb
movsb
sar
or
cwtl
dec
or
and
dec
subl
push
dec
test
rcrl
in
dec
and
addr16
lock
adcl
into
or
lea
sub
dec
dec
lret
xchg
inc
adc
stos
add
ficompl
repz
stos
fcoms
ret
nop
dec
mov
aam
das
cmp
gs
aas
cmp
cmp
insl
push
sbb
les
pusha
es
sbbb
not
adc
test
sbb
int
in
sbb
shl
xor
xor
fimuls
dec
push
test
in
jmp
das
ja
aad
fsubrl
fcompl
sarl
test
mov
stos
mov
testb
push
xchg
pop
push
mov
jge
cmc
adc
xchg
add
mov
mov
test
mov
cmc
jg
neg
inc
and
ret
divps
xchg
jae
jmp
popf
add
push
sqrtps
repz
add
sub
adcb
pop
repnz
and
cmp
push
xchg
or
hlt
ss
shll
xchg
mov
cmpl
inc
shll
je
pop
dec
cwtl
sub
add
xlat
ret
mov
outsb
loop
enter
in
psadbw
mov
inc
push
mov
ret
test
push
out
adc
sbb
jmp
xchg
mov
pop
sbb
scas
shll
and
rolb
xor
cmpsb
idivl
sbb
int3
jge
push
ret
shlb
mov
xchg
jno
stc
mov
jnp
or
jle
add
arpl
je
bnd
xchg
jb
lcall
xchg
ja
leave
rcll
mov
jle
xchg
clc
cmp
sub
mov
push
gs
mov
sbb
rorb
repnz
and
push
imul
inc
fdivl
and
cmp
ljmp
out
add
push
out
inc
push
lret
jle
int
and
xchg
fidivrl
sbb
cs
mov
jns
xchg
and
popa
jb
stc
fisubl
int
sbb
js
les
dec
dec
jns
lcall
jecxz
mov
js
call
or
mov
jl
outsl
cltd
jp
out
js
sub
mov
or
shlb
fldt
lret
mov
xchg
out
xchg
jns
or
fs
lahf
ret
or
add
dec
xor
scas
popa
xchg
xor
pushf
add
mov
loope
pop
rclb
addr16
push
repz
xchg
sbb
mov
hlt
scas
daa
test
cmp
insb
fwait
shufps
movsb
ret
mov
jns
jns
jns
jns
jns
insb
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
ss
xor
fistl
adc
or
push
cs
hlt
ret
or
stos
push
inc
hlt
push
aam
lods
adcl
mov
stc
fldl
fdiv
and
outsl
push
lods
push
mov
adc
ljmp
mov
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
jg
add
clc
dec
cwtl
nop
lahf
sbb
lods
lea
aad
mov
cmpsl
jmp
cmpsl
rclb
add
inc
dec
aam
pxor
pop
sti
stc
outsl
rorl
bound
mov
cld
mov
mov
pusha
mov
xlat
aas
dec
sub
and
stos
mov
inc
xor
les
les
cmp
lods
jns
cmp
add
je
mov
popa
bswap
mov
je
sahf
jne
jecxz
nop
loope
mov
clc
push
test
jbe
jmp
sub
xchg
push
mov
mov
call
leavew
jecxz
ror
xor
mov
out
adc
jo
jl
pop
push
inc
jne
xchg
iret
adc
xchg
movb
dec
inc
mov
mov
xchg
cmp
mov
mov
or
pop
ljmp
ret
xlat
loope
sbb
enter
aad
das
push
dec
and
mov
dec
adc
scas
scas
scas
in
inc
mull
jle
mov
mov
pushf
and
clc
mov
mov
pop
out
xchg
out
mov
jle
mov
pop
shl
fcmovbe
mov
sbb
inc
add
bound
xchg
shlb
adc
test
testl
jecxz
and
inc
jb
add
and
inc
sti
sbb
xor
fwait
inc
inc
jmp
mov
add
icebp
test
push
jg
ja
cld
call
or
sub
rcrb
jle
mov
pop
mov
jbe
mov
mov
inc
xchg
xlat
push
out
jg
repnz
scas
push
ljmp
xlat
std
das
fists
bnd
push
gs
pop
push
xor
out
inc
in
add
stc
xchg
test
cmp
mov
aaa
mov
inc
xchg
bnd
jl
mov
aas
or
dec
mov
movsl
out
push
into
push
mov
xlat
fldenv
lods
addb
add
xlat
add
or
es
insw
mov
mov
dec
sub
and
jae
pop
push
dec
or
and
in
and
aam
or
cmp
lret
insb
add
xchg
mov
mov
jns
pop
push
out
add
jnp
insl
out
sub
dec
inc
sbb
mov
jmp
jmp
mov
arpl
dec
mov
cmc
and
mov
sbbl
lods
sbb
clc
out
sbb
rcll
mov
mov
jb
jns
leave
or
sbb
rcl
xchg
dec
mov
dec
in
mov
add
xor
sub
and
adc
push
testl
es
dec
cmp
mov
sub
clc
fwait
adc
in
jmp
xor
addr16
pop
sahf
cmc
shl
lods
mov
mov
xchg
stos
fidivs
mov
push
ja
and
in
and
cwtl
les
fidivl
inc
mov
adc
xchg
pop
cld
mov
mov
test
xchg
mov
push
xchg
shlb
cwtl
dec
or
add
dec
mov
fmul
pop
data16
into
xor
in
ds
cmp
adc
in
jl
daa
int3
sbb
and
mov
fsubrl
stos
and
iret
add
sbb
rolb
add
jae
mov
inc
or
leave
xchg
setb
int
out
test
jbe
aaa
pop
fnstsw
scas
aad
mov
movsb
movsl
mov
movsl
es
xchg
test
mov
push
fwait
mov
push
in
mov
mov
dec
popf
addr16
xchg
sbb
add
ja
xchg
or
ja
sti
push
mov
pop
ficomps
test
adc
ljmp
pop
mov
sbb
jecxz
scas
outsb
data16
jle
imul
insb
mov
mov
pop
sub
sti
dec
rcll
mov
jae
movsl
es
call
fisttpl
mov
cmp
fidivrs
bound
mov
mov
xchg
adc
test
push
lahf
xchg
push
and
into
xchg
nopl
or
jae
mov
cmp
shlb
jo
mov
pop
mov
data16
lret
add
hlt
testb
add
mov
dec
sbb
inc
test
pop
push
stos
ds
add
popl
lods
or
dec
mov
cmp
popa
es
mov
mov
mov
and
push
dec
and
push
and
add
push
mov
daa
hlt
push
mov
inc
sahf
adc
mov
scas
pusha
outsb
cmp
or
cmpsl
in
jne
push
imul
dec
mov
shll
adc
adc
jno
push
insl
test
inc
lret
xchg
jge
cmp
push
mov
cmpsb
mov
xor
insl
cmp
adc
daa
mov
addr16
add
movsl
and
or
negl
xchg
adc
sbb
push
mov
sub
cs
addr16
add
xchg
leave
inc
xor
scas
mov
sbb
jg
push
mov
xor
fisubrs
repnz
mov
xchg
push
unpckhps
bound
mov
sahf
icebp
add
xchg
xchg
xlat
fmulp
rorl
push
dec
aam
push
jo
mov
cltd
dec
shl
push
aam
fildll
sahf
mov
mov
sbbb
je
loop
stc
sbb
movsl
inc
jb
mov
dec
pushf
aad
inc
mov
sahf
scas
add
xchg
loope
ret
jno
mov
sahf
pop
pop
ljmp
ljmp
inc
or
arpl
lahf
lret
adc
cmp
rcl
xor
mov
scas
xchg
movsb
and
daa
je
cld
add
out
mov
inc
jp
fwait
in
dec
iret
jno
xchg
mov
ds
sbb
inc
pop
or
adc
sti
scas
idivl
and
jbe
stos
cli
nopl
or
repz
enter
clc
sti
sub
mov
sub
cli
cmpb
fucomi
cli
std
sub
xor
xor
lock
mov
mov
bound
xor
or
testl
pop
push
addb
cmp
fsts
adc
scas
adc
in
loop
add
call
repnz
mov
xor
pop
lahf
sub
sete
bound
push
pop
ret
fmuls
loop
mov
mov
cli
mov
mov
daa
dec
sub
bound
sbb
into
push
add
cmpsb
xchg
add
or
cs
scas
inc
adc
shll
test
xchg
inc
into
mov
pop
cmp
mov
push
mov
push
out
cmc
adc
in
pop
nop
pop
pushf
dec
xchg
xor
adc
or
mov
lahf
es
into
xchg
lods
les
lret
cmp
clc
test
clc
ja
sub
xor
jb
mov
gs
sbb
xor
lds
jne
in
stos
lods
nop
push
faddl
iret
pusha
mov
repz
fstpt
iret
sub
or
xor
daa
pop
lret
gs
or
mov
mov
cmp
cmc
imul
cmp
out
mov
sub
sbb
adcl
push
fmull
aaa
sub
sahf
sub
aad
aas
sub
fs
push
aaa
outsb
hlt
add
jp
jp
cmp
sbb
cwtl
push
imul
int3
mov
outsb
aaa
loope
sbb
in
mov
stc
clc
sbb
mov
dec
pop
test
dec
push
mov
aas
arpl
jbe
or
xor
outsb
addr16
mulb
sarl
lods
hlt
lods
push
fiadds
lods
mov
mov
xchg
xchg
mov
sub
mov
insl
mov
dec
aad
mov
lea
or
and
fdivrl
add
je
push
pop
adcl
test
repz
shlb
adc
jno
cmpsb
das
pop
fsub
cltd
xchg
out
sub
sahf
sbb
or
xor
mov
out
loop
std
jl
fs
push
xor
push
and
stos
adc
hlt
sub
and
pushf
xchg
aas
xchg
pop
sub
out
sbb
imul
add
shrl
xor
inc
movsb
out
cltd
fwait
jbe
sarb
shlb
out
lods
mov
imul
scas
mov
test
mov
popf
nop
and
ret
inc
mov
mov
test
lock
test
pop
leave
fs
inc
sbb
js
gs
ficompl
jo
sub
loopne
and
popa
mov
jle
int
stos
mov
sahf
ret
rcrb
sub
or
cmp
xor
jecxz
pop
and
adc
sub
inc
js
subl
and
jecxz
or
xchg
pop
sub
push
inc
mov
subb
pop
test
repnz
xchg
ds
pop
ret
dec
or
out
xor
dec
push
or
shll
mov
rcr
shlb
ja
push
dec
out
mov
inc
xchg
sbb
or
mov
fcom
fldenv
pop
ffree
lret
xchg
mov
orl
ret
lea
test
jae
cmp
cmp
xor
jae
mov
repz
fstp
insb
ror
mov
test
mov
stc
repnz
outsb
adc
xor
mov
xor
pop
add
push
ljmp
movsl
roll
leave
lahf
daa
push
daa
std
dec
dec
lret
lock
rcll
xchg
mov
inc
in
dec
aad
xlat
sbb
lret
inc
adc
adc
dec
sbb
repz
ss
nop
sbb
lods
xchg
mov
or
ljmp
xchg
call
data16
cmp
xor
rclb
adc
mov
pusha
mov
and
rorl
sbb
lahf
out
pop
xchg
outsb
xor
adc
xor
mov
sahf
inc
mov
mov
adc
or
test
imul
hlt
mov
inc
call
dec
and
dec
add
inc
aad
xchg
sbbb
int3
and
mov
and
and
and
les
imulb
repz
push
mov
mov
es
push
es
dec
cmpsl
testb
lcall
dec
adc
cmp
or
or
sub
rcrl
lret
push
xchg
gs
push
inc
xchg
lret
cmc
mov
mov
jecxz
mov
push
lahf
nop
dec
or
cmp
push
fwait
mov
mov
mov
mov
lcall
xorb
mov
mov
xor
dec
inc
sti
mov
mov
add
movsl
das
and
xlat
movntps
dec
dec
jecxz
mov
test
mov
cmc
iret
and
lcall
jl
loope
faddl
bound
push
out
mov
dec
andl
and
shl
adc
scas
cwtl
sub
push
dec
out
lods
push
xchg
add
dec
and
pop
push
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sbb
jne
in
call
or
arpl
in
call
fldcw
shrl
xchg
scas
arpl
gs
in
call
insl
sub
gs
shl
in
call
gs
ftst
in
call
call
cmpl
gs
in
call
cmp
popa
ljmp
loopne
popa
loopne
call
sub
das
out
jle
call
subl
jmp
loopne
js
in
call
jmp
loopne
push
jmp
jmp
loopne
push
popa
clc
popa
mov
mov
arpl
jmp
loopne
jp
in
call
jmp
add
cmpsb
mov
rcll
and
cmpl
jmp
loopne
jp
in
call
sbbl
jmp
loopne
pop
in
call
dec
mov
loopne
jp
in
call
popa
ljmp
stos
loopne
mov
pop
pop
arpl
in
call
shrl
xchg
xlat
cmpl
jmp
loopne
jp
in
call
insl
sub
adc
or
jmp
loopne
cli
popa
fiaddl
lock
jmp
loopne
jp
in
call
imul
popa
lcall
sub
call
data16
adc
mov
leave
in
insb
bound
rclb
inc
imul
adc
fsubl
and
push
fwait
adc
icebp
or
pushf
mov
es
jp
lods
test
call
loope
xor
mov
ds
in
arpl
scas
mov
jmp
mov
lods
movsb
xchg
push
fimull
adc
fidivl
push
scas
sti
xchg
dec
rclb
out
sub
lahf
cmpsb
mov
aam
pop
sbb
mov
imul
jecxz
lods
or
jge
cmpb
xchg
and
xor
xchg
mov
push
filds
mov
out
loop
pop
cmc
lods
test
and
dec
xchg
sub
ret
dec
push
nop
leave
lea
inc
ret
sub
push
or
jle
sbbl
xor
jp
mov
aaa
fcmove
outsb
popa
inc
or
rol
jns
cmpsl
add
inc
push
and
xchg
fs
jne
cmpsb
bound
xor
nop
dec
xchg
lods
dec
xchg
outsb
dec
xor
sahf
outsl
jmp
cmp
mov
fcoml
add
push
lret
insl
lock
orl
pop
call
xor
loopne
sub
int3
and
push
add
add
and
add
add
add
jmp
add
cmp
je
jmp
jmp
and
fimull
add
sub
add
add
add
mov
call
scas
daa
add
test
and
add
add
add
mov
add
lcall
add
push
push
push
call
lea
mov
sub
xchg
push
lods
mov
lods
mov
lods
mov
lods
mov
lods
push
xor
sub
xor
mov
push
call
ror
pop
dec
jecxz
jmp
push
xor
xor
xor
xor
pop
mov
test
je
mov
xor
mov
inc
loop
pop
loop
add
call
xor
xor
popa
ret
push
mov
pusha
mov
mov
mov
lea
imul
xor
popa
leave
ret
mov
mov
push
rol
adc
loopw
mov
inc
testb
adc
push
jge
jge
dec
inc
xchg
addb
xchg
loop
testl
mov
adc
rorb
rorb
mov
orb
imul
mov
adc
mov
adc
xchg
push
xchg
adc
xchg
pop
inc
testb
addb
mov
mov
push
xchg
adc
xchg
ret
xchg
adc
xchg
or
mov
push
xchg
movhps
jmp
orl
pushl
push
cmp
es
or
inc
cmp
es
iret
jbe
enter
xchg
iret
jbe
inc
maskmovq
divl
xchg
addb
inc
mov
cltd
addb
addb
subb
jl
subb
jge
xlat
or
outsb
xchg
mov
or
jle
pop
jge
jge
inc
pop
jge
fmuls
testl
xchg
mov
ret
orb
jle
adc
orb
mov
pop
mov
orb
jge
jle
fs
and
jge
addb
test
rcl
push
jge
jge
cmp
push
jge
jge
testl
inc
xchg
addb
subb
jl
subb
jl
subb
jl
cmpb
rol
adc
aad
jl
daa
xchg
ret
push
jge
jge
dec
addl
dec
orl
jge
add
ret
subb
jge
or
inc
pop
jge
push
sbb
sub
jge
push
jge
jge
adcb
jge
pop
inc
idiv
or
enter
ljmp
push
jge
jge
xchg
adc
adc
fists
stc
jge
jge
xchg
adc
lods
addb
adc
loopne
jge
or
addb
sub
xchg
ret
push
jge
jge
or
cmpsb
xchg
or
pop
addb
adc
scas
jge
jge
adc
flds
scas
mov
xor
jge
or
outsb
xchg
ljmp
jge
jge
inc
lea
add
jle
inc
mov
mov
inc
or
mov
addb
jge
jge
add
inc
lds
mov
rorb
mov
xchg
or
xchg
inc
xchg
inc
lds
or
mov
xchg
or
xchg
mov
addb
addb
addb
addb
addl
addb
add
pusha
jnp
or
jle
inc
jno
ja
xchg
add
loop
inc
or
jle
xor
sbb
add
or
adcl
push
mov
cmpb
mov
orb
andb
mov
ret
push
scas
sbb
xor
sbb
push
testl
inc
testb
jecxz
jle
inc
and
xchg
xchg
add
loop
testl
or
xchg
lret
jbe
ret
jle
or
xchg
xchg
mov
jmp
push
xchg
mov
push
cmp
es
jp
mov
or
jbe
lds
bound
jp
test
pushl
mov
or
jp
lds
mov
jle
mov
or
mov
lds
ret
mov
jbe
lds
mov
or
xorb
sub
mov
ret
addb
cmpb
addb
mov
subb
and
adc
cmp
push
mov
stos
loopne
lcall
xchg
popf
push
mov
mov
cmp
or
sub
aam
outsb
jecxz
testl
mov
cmp
dec
cli
lock
mov
cmp
pop
das
sub
sub
ja
sbb
inc
add
ss
add
ss
add
inc
add
xor
sbb
inc
