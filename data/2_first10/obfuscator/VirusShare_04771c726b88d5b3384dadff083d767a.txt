dec
inc
push
dec
pop
push
xchg
pusha
call
pop
mov
add
add
mov
mov
add
shr
je
mov
xor
sub
stos
rcl
loop
cmp
je
add
add
jmp
popa
pop
cltd
push
xor
out
out
call
mov
or
adc
loope
and
stos
scas
inc
jl
sbb
cmp
add
jae
xchg
xor
xlat
bound
pop
pop
or
mov
xchg
fwait
lret
je
mov
cmpsb
in
sbb
xchg
mov
push
pop
ss
bound
pop
mul
stos
and
outsl
mov
repz
cmp
lock
aaa
pop
jns
push
cltd
fwait
lcall
jmp
dec
adc
sub
mov
add
and
jge
jo
xor
xor
test
and
in
xchg
in
or
and
push
add
daa
push
cmp
jl
movsb
push
cmp
cmc
dec
int
idivb
inc
and
pop
cmp
call
mov
stos
les
pop
repz
addb
jl
xchg
cmp
call
adc
pop
or
aad
sub
test
mov
in
rcll
xchg
mov
aaa
mov
mov
inc
add
lret
xchg
sbb
ret
xchg
jae
movsb
and
negb
xor
jno
subl
mov
mov
or
and
stc
sbb
mov
or
sub
mov
jno
mov
or
daa
cld
int
iret
mov
xor
dec
fnstsw
insl
clc
lret
data16
add
cmp
andl
gs
mov
loop
lea
enter
aaa
ja
dec
xchg
mov
fstpt
and
jne
adcl
xchg
push
loop
mov
pop
push
mov
or
push
divb
add
mov
push
mov
out
fsubrs
push
and
or
rclb
fsub
js
dec
push
outsb
daa
adc
dec
pop
shrb
pop
cmp
shll
sarb
js
adc
and
jmp
ja
ss
testl
pop
lods
pop
pusha
pop
pushf
push
pop
lcall
adc
sub
or
aaa
jp
ja
and
imul
sub
mov
icebp
cs
jbe
adc
test
sbb
xor
inc
jge
test
sub
sub
push
aad
inc
inc
adc
ljmp
xorb
in
addr16
jo
imull
pop
cmp
or
push
lcall
push
jp
lcall
daa
arpl
dec
ja
inc
test
fisttpl
clc
xor
or
inc
lret
push
les
fstpl
mov
frstor
push
inc
inc
mov
cmp
xlat
pushf
inc
arpl
fimuls
jno
lods
dec
dec
jo
and
sbb
push
into
or
inc
inc
jne
pop
add
push
sbb
hlt
mov
scas
xor
xchg
sbbl
out
popf
int3
push
sbb
and
adc
popa
cmpsb
fiadds
xor
arpl
pop
cmp
loope
insl
enter
repnz
adc
stc
rcrb
hlt
jae
push
inc
cld
jp
mov
lock
dec
push
loop
adc
ja
or
mov
xor
and
add
divl
cs
fbstp
aaa
fstps
pop
push
bound
and
das
in
and
xlat
sub
sbb
xor
and
cmc
jo
repz
pop
in
stc
xor
les
xor
mov
subl
inc
inc
jne
repz
xlat
inc
push
lods
dec
mov
sti
clc
stos
cmpl
aam
or
shll
fsubs
test
sbb
cs
xor
push
lcall
je
xor
mov
push
mov
ljmp
inc
jnp
sahf
or
lods
or
cs
mov
mov
dec
sbb
int
pop
xchg
sbb
arpl
cmp
pop
mov
rolb
repnz
mov
lcall
inc
das
sub
mov
add
push
int3
dec
mov
sub
imul
or
cmpsb
ret
push
aaa
testb
inc
mov
pop
lret
gs
sbb
es
inc
adc
fidivl
inc
out
sbbl
js
arpl
xor
jg
adc
sub
pop
insb
xlat
adc
xorl
fdivl
cmp
cltd
mov
jcxz
test
dec
sbb
xor
adc
sub
ljmp
xor
imul
out
jge
movsl
outsb
es
int
mov
shll
push
mov
xchg
mov
mov
and
int3
cmc
mov
jbe
in
or
push
lds
in
mov
shll
div
pop
imul
xchg
and
stos
iret
sbb
sub
sbb
shll
inc
sub
pop
dec
mov
inc
jno
int
imul
sar
sbb
test
in
push
fbld
movsb
dec
movsl
repnz
dec
inc
adc
mov
aas
adc
movsb
sahf
clc
adc
out
jnp
in
inc
add
nop
push
sbb
scas
int
mov
int3
sub
jae
inc
cli
adc
addr16
cmp
loop
jo
lahf
pop
pop
sub
xor
cmp
push
popa
mov
ret
mov
dec
in
movb
jno
push
xchg
pop
add
sbb
out
xor
loopne
jl
aam
imul
adc
pop
nop
imul
cli
mov
cmp
divl
ret
les
cmp
and
jae
xchg
rclb
out
mov
into
sbb
sbb
icebp
dec
sbb
xchg
inc
dec
iret
fwait
aad
cmp
xchg
enter
add
mov
sbb
pop
es
ffreep
andl
movsb
cmp
test
pop
outsb
sti
fistl
or
leave
mov
lahf
aaa
and
scas
dec
into
call
inc
dec
leave
dec
pusha
inc
mov
cmc
scas
mov
and
imul
lds
xor
andb
adc
repz
test
sti
xor
aam
sti
adc
mov
fmull
arpl
fidivrs
rcr
jl
sbb
sub
xchg
pop
aaa
mov
mov
into
bound
lcall
scas
andb
shlb
lock
cld
sub
mov
insl
mov
and
out
inc
inc
pop
negl
rol
xchg
test
popf
xchg
sub
roll
jle
daa
adc
popf
idivb
lods
xchg
mov
cmpl
mov
and
push
or
movsb
sub
or
adcb
rorl
pop
sub
ret
fcomp
sarb
push
mov
sub
mov
js
lret
push
xor
sti
cmp
jb
rolb
mov
xchg
lcall
xchg
xchg
pop
gs
jb
insl
sub
mov
jno
dec
and
jbe
mov
mov
lods
cmp
add
xchg
hlt
test
mov
in
mov
pop
test
push
cmc
mulb
ffreep
fucomi
cs
xchg
or
mov
mov
shrl
push
inc
test
insl
push
mov
push
jmp
jns
jnp,pn
cli
push
adc
fnsave
in
ss
pop
les
cmc
nop
push
push
mov
jp
cmp
xchg
xlat
mov
jmp
cld
ret
dec
cmp
cmp
dec
mul
pop
outsl
cmpsl
xor
lea
or
leave
add
pusha
mov
sub
adc
mov
pop
call
bnd
es
xchg
inc
imul
aaa
push
push
ret
popf
stos
in
xchg
mov
cmp
pushw
pop
test
sbb
aas
cli
xchg
sbb
shrl
test
movsl
out
add
loop
fadd
pop
repnz
subb
rorb
pop
lea
mov
cmpsl
lea
ss
cmp
dec
sarl
xchg
test
xchg
xchg
cmp
pop
fisttpll
or
pushf
repnz
lods
pop
pop
gs
cmp
rcl
popa
iret
xor
pop
jecxz
mov
push
sub
or
test
pop
xchg
arpl
test
adc
sub
int
rorl
inc
sbbb
imul
lds
cwtl
sahf
sbb
ficomps
mov
lds
lods
lock
std
add
lods
js
dec
mov
and
jg
test
mov
mov
inc
out
push
insb
insl
cmp
cwtl
fldt
jge
loopne
fs
mov
xor
xor
pop
nop
ds
or
arpl
xchg
sti
loop
and
enter
push
jnp
test
and
sarl
sub
xorl
jns
fnstcw
push
push
outsl
insl
fistps
clc
lods
sub
test
ret
adc
insl
cld
aaa
and
arpl
push
inc
push
sbb
adc
fcompl
jns
jecxz
adc
cmp
dec
mov
xor
std
subb
adc
sub
leave
push
lds
jo
pop
adc
cli
hlt
ret
mov
icebp
fadds
pop
lods
inc
sbb
lret
mov
jo
mov
shl
push
xchg
mov
mov
fs
aam
inc
lret
mov
xor
fwait
daa
xchg
inc
pop
pop
dec
and
and
sub
add
push
imul
jne
insb
and
xor
xor
xor
jb
mov
lods
cwtl
mov
jecxz
gs
inc
scas
mov
in
or
gs
mov
mov
xor
lods
push
xchg
es
mov
sbb
xor
inc
jbe
xor
jle
xchg
xor
push
push
fstenv
xor
dec
mov
pusha
jp
popa
cmp
push
aam
pop
mov
mov
std
mov
enter
add
or
pop
out
or
mov
insb
sub
movsb
lahf
dec
add
adc
das
xlat
add
pop
mov
mov
leave
lret
jae
inc
ficomps
fstpt
sub
repz
aas
pop
arpl
pop
or
leave
or
jg
add
fisttpll
and
or
jmp
sti
cmp
dec
xchg
sub
mov
dec
fmull
aad
popf
dec
aad
fnsave
push
stc
enter
inc
ret
dec
xchg
push
and
adc
pop
fwait
mov
call
jecxz
out
fbstp
mov
les
loopne
xchg
mov
lahf
xchg
movsl
rorl
push
sub
decl
insb
enter
mov
dec
cmp
pop
cmp
xor
mov
sub
push
movsl
mov
jb
cwtl
ss
jecxz
hlt
ljmp
sub
and
shlb
dec
rclb
xchg
mov
mov
mov
mov
popa
lds
push
inc
ljmp
push
add
aaa
xchg
jg
xchg
push
xor
dec
or
test
add
add
ret
fsubrl
cltd
and
clc
mov
call
sub
negl
dec
fistpl
xchg
outsb
pop
cmc
ficoms
mov
push
pop
jmp
arpl
mov
xchg
mov
add
dec
sub
jno
inc
sti
les
dec
sbb
xlat
insl
pop
movsl
lds
add
outsl
xchg
xor
inc
iret
dec
push
lea
cmp
mov
pop
push
mov
push
mov
add
cmp
out
cmp
stc
jg
cmp
adc
sbb
inc
mov
fistps
pop
es
mov
xchg
movb
cmp
cmp
dec
cmpsl
dec
mov
outsb
or
idivb
repz
leave
pop
cltd
popf
fnsave
jp
popf
mov
push
mov
adc
fsubp
xor
loopne
pusha
sub
loope
les
js
pop
fidivrs
neg
int3
dec
sub
test
cwtl
push
mov
or
xor
loop
mov
add
scas
lock
iret
popa
or
mov
loope
mov
sbb
adc
data16
jl
sti
negb
or
jns
xchg
mov
jne
pop
pop
out
js
dec
mov
xchg
pop
dec
fwait
jge
or
jl
incb
fdivs
callw
shll
fisubrl
jmp
shrb
shl
js
sub
and
aad
push
ret
test
sbb
push
cmp
xor
mov
aas
clc
cmp
or
fadds
xchg
lock
scas
shl
stos
cmp
or
aad
add
push
popf
xchg
rorl
xor
mov
xlat
mov
mov
mov
cli
movsb
das
lret
mov
outsl
sbb
cltd
cwtl
stc
inc
lcall
movsl
cmp
std
sbb
mov
mov
bound
insl
or
dec
mov
shlb
mov
inc
out
cmp
pop
cmp
dec
loope
ja
dec
lcall
pop
dec
adc
cmpl
fcmovne
cmp
fildl
mov
add
adc
mov
aam
mov
pop
push
cmp
push
sbb
clc
test
mov
rol
add
test
dec
fwait
push
aad
xor
dec
cltd
and
mov
ja
cs
xor
cmp
fldt
mov
xchg
movsl
mov
fadd
sbb
ret
and
xor
sub
stos
push
outsb
jnp
or
sti
jmp
jmp
in
pop
fwait
ss
push
enter
sbb
mov
xor
repnz
sahf
je
inc
pop
mov
fucomip
cmp
xchg
jecxz
inc
mov
pop
sub
sub
dec
mov
push
push
cmp
shrl
insl
mov
push
pop
push
xlat
push
dec
in
mov
decb
mov
mov
jge
lahf
andb
jne
lcall
mov
mov
inc
aad
or
cmpsl
mov
clc
out
sub
mov
fstpt
outsl
or
cwtl
mov
push
mov
cmpb
sub
pusha
test
mov
inc
mov
cwtl
push
popa
popa
inc
adc
in
mov
les
fdivs
xchg
int3
sbb
mov
mov
test
and
push
and
pop
test
xchg
dec
lods
mov
fwait
addr16
movsb
cld
stc
sub
add
filds
lcall
xchg
mov
mov
jnp
adc
jb
xchg
pop
dec
aaa
xchg
mov
imul
cli
xchg
daa
mov
inc
push
or
mov
add
mov
push
sbb
mov
mov
sbb
loop
jae
mov
lret
and
cmp
in
out
dec
ja
aas
or
push
insl
sub
push
pop
call
xchg
cs
sbbl
je
stos
and
xchg
bound
imul
jp
lods
in
es
daa
int3
fcoml
clc
aad
or
pushfw
cmp
mov
cmp
pop
aam
jmp
mov
or
andb
xor
and
adc
andl
fdivl
rcll
xchg
rcl
shlb
sarl
and
sbbb
mov
and
xor
stos
int3
fcmovnb
jmp
cmp
rcll
in
aas
inc
xchg
ljmp
jmp
push
xchg
mov
cs
sbbb
mov
test
jmp
cltd
aas
imul
jmp
sbb
lods
cltd
aam
js
jbe
out
add
icebp
push
fisttps
inc
popl
insl
sbb
pop
push
movsl
mov
or
jmp
scas
adc
ss
xchg
push
hlt
adc
adc
xlat
mov
shrb
mov
mov
cmc
repz
iret
push
les
stos
xchg
in
sub
xchg
push
mov
nop
hlt
inc
pushf
and
aaa
rcrl
repnz
fptan
mov
pop
lods
popa
mov
bswap
je
enter
sahf
lds
adc
cmp
dec
lret
pop
popf
dec
enter
es
xchg
mov
pop
mov
jb
enter
das
popa
mov
fcmovu
or
adc
lds
lret
sub
mov
xchg
pusha
jb
sbb
jbe
push
leave
adc
and
dec
pop
rolb
clc
sub
mov
out
bound
mov
mov
dec
sub
xchg
pop
mov
in
dec
in
sbb
out
cmp
mov
inc
fs
and
sbb
xor
sbb
das
fwait
shrl
add
mov
lahf
sub
cli
or
jmp
xchg
xchg
aas
icebp
loopne
stc
xor
sbb
out
xchg
push
mov
cli
push
mov
or
jecxz
in
sbb
fwait
pop
outsl
insl
mov
xchg
xor
mov
shlb
into
inc
test
mov
xchg
jp
pushf
les
add
xchg
mov
and
mov
push
dec
xor
or
jge
bnd
jb
and
das
push
loopne
xchg
aaa
xchg
mov
jmp
add
repz
cmp
daa
not
hlt
loope
push
mov
rep
mov
out
aad
pop
push
jae
or
je
gs
sub
cmp
mov
jnp
bnd
and
dec
cld
cld
outsb
cld
and
jmp
int3
add
sarl
cld
fucomip
cmp
jg
bound
pop
fimuls
icebp
rol
lock
inc
pusha
add
fsubrs
sbbb
fimull
xor
andb
xor
sbb
inc
loope
xorl
dec
push
add
scas
push
lret
sub
jmp
pop
mov
jne
cmp
sar
xchg
pop
fwait
imul
ds
insb
clc
daa
mov
subl
notb
fs
or
or
add
inc
jnp
leave
fwait
aas
xchg
imul
xchg
or
mov
shlb
mov
pop
add
aaa
in
test
negb
es
mov
out
pop
int3
ret
adc
xchg
icebp
rclb
cmpsb
mov
sbb
mov
iret
in
mov
stos
sub
cld
outsl
cmc
aam
loope
xchg
xchg
jns
push
xchg
pop
testb
daa
jno
pop
in
addl
xchg
test
cmp
cmp
add
fcmovne
fnstcw
mov
sbb
repz
xor
sarb
cmp
inc
push
stc
pop
test
and
jl
insb
sub
jmp
ficompl
sbb
sub
add
ret
test
fisttps
xchg
xor
adc
loopne
sbb
sub
outsb
and
dec
jp
mov
jmp
push
dec
sbb
mov
xor
enter
test
movb
arpl
jp
fisubrl
sbb
fmull
pop
lods
or
pop
out
sbb
xchg
lea
icebp
leave
std
push
push
ret
add
pop
xchg
dec
sbbb
mov
sub
in
sub
dec
push
repz
lds
ret
movsb
out
lods
and
push
and
push
je
leave
pop
pop
inc
xchg
out
fldt
adc
movsb
mov
dec
push
test
push
sbb
jo
lcall
ret
mov
je
lds
sarb
or
fwait
movsb
mov
mov
jnp
lret
sub
and
pop
inc
notb
pop
pop
push
pusha
inc
mov
mov
ret
cmp
mov
cmpsb
jnp
xor
fdivp
mov
push
mov
mov
iret
mov
push
stc
mov
out
push
nop
cmp
in
divl
adc
xor
outsb
pop
dec
out
or
jle
push
daa
cltd
jl
jp
hlt
inc
sub
xchg
push
sti
jno
mov
inc
jo
lahf
in
push
mov
xor
loopne
push
enter
mov
xor
inc
stos
xor
mov
push
mov
and
mov
dec
loope
pop
add
sub
rcrb
outsb
or
pop
mov
xchg
mov
mov
and
imul
clc
insb
pop
lods
rcrl
test
pusha
outsl
in
ds
aad
mov
popa
repz
testb
or
pop
or
mov
pop
loop
cmp
push
imul
std
pusha
mov
mov
bound
xor
mov
out
xchg
jns
cli
inc
adc
push
out
out
dec
outsl
mov
ss
jo
icebp
mov
test
fs
inc
add
xor
cs
sbb
testl
test
xchg
jnp
add
andb
mov
and
cltd
popf
mov
jg
sahf
lcall
adc
cmp
gs
ljmp
pop
push
xchg
lahf
and
push
jo
adc
pusha
xchg
lahf
cltd
inc
stos
mov
pop
call
into
dec
sub
cmpl
leave
cli
mov
shl
testb
jne
push
fmuls
inc
ret
sarb
dec
roll
cld
repz
or
test
cmp
mov
dec
mov
fimuls
hlt
movsl
xchg
sbb
shl
xchg
shll
aam
jle
mov
lods
in
jp
hlt
pop
and
mov
xchg
inc
add
out
xor
jl
call
popf
sbb
cmp
insl
inc
sbb
push
adc
inc
mov
mov
xchg
lahf
loop
lret
push
sbb
imulb
fmull
sbb
scas
jno
jb
loopne
mov
cmpsb
fisttpl
hlt
arpl
inc
push
add
fsubl
adc
adc
movsb
fbstp
and
sbb
shll
sub
xlat
nop
sub
lea
adc
add
fsubrs
pop
jle
dec
gs
xchg
pop
cltd
data16
cmp
lcall
into
sub
push
jmp
pushf
mov
mov
inc
popa
mov
inc
inc
lahf
bound
push
jnp
cmp
rol
ret
dec
call
dec
aaa
in
movsl
push
push
push
sbb
push
pop
mov
sbb
dec
push
js
loope
sub
push
xor
adc
lret
pop
pop
sub
std
push
mov
mov
movl
jo
cltd
sbb
inc
int3
test
mov
dec
fsubrl
lods
call
es
mov
fbstp
adc
insb
mov
mov
and
gs
sub
popa
sbb
mov
stos
pushf
arpl
xor
mov
push
jl
pop
imul
xchg
int
addr16
das
lods
into
fadds
pop
xchg
sub
gs
in
xchg
jle
stc
dec
mov
std
mov
adc
iret
sub
or
ret
fidivl
push
xchg
or
or
sbb
push
xchg
movsb
lds
sbb
fxch
lret
je
rcll
insl
loope
and
jge
mov
into
aaa
in
add
cmp
popa
aaa
jbe
push
xchg
jne
stos
xor
pop
into
sbb
rclb
dec
jp
ss
xchg
xorl
movsb
outsl
lret
test
xchg
mov
ja
sub
mov
sub
pop
sbb
cmc
insb
jecxz
and
sub
mov
xor
in
inc
dec
aas
cmp
sbb
stos
cmpb
shr
aad
pop
sbb
negl
and
notl
loopne
aaa
adc
push
push
mov
jne
ficoms
cmc
pop
in
adc
test
pop
sub
and
fstp
bound
das
lahf
cmp
rcll
add
or
sub
pop
cmpsb
mov
movsl
push
shrb
imul
icebp
rcrl
mov
das
mov
mov
sub
cmp
pop
lret
ljmp
lret
mov
sub
and
into
pop
movaps
mov
fs
adc
xchg
or
ss
gs
daa
push
cmp
jae
dec
lds
xchg
stc
jp
and
insl
rorb
pusha
enter
cmp
push
xor
mov
mov
popf
pop
les
in
adc
mov
rorl
daa
dec
fldl
jns
pusha
dec
scas
push
test
xor
jecxz
out
xchg
lds
mov
mov
push
pop
pop
mov
js
rorb
stos
mov
fwait
mov
or
jb
cmp
xchg
out
jp
icebp
add
mov
cmp
sbb
pusha
xor
or
push
push
test
sbb
out
jb
sub
sbb
and
jnp
testl
dec
pop
pop
iret
testl
js
jmp
mov
mull
xor
cs
hlt
mov
shrl
inc
mov
test
sbb
xchg
imul
adc
or
cmp
daa
mov
adc
daa
dec
andl
cwtl
adc
mov
or
push
pop
int3
xor
jecxz
jns
jbe
or
test
sahf
push
inc
and
fsubrp
inc
or
loop
xor
and
cmpsl
lods
mov
scas
lcall
lds
mov
add
mov
push
sarl
adc
mov
xchg
mov
xlat
mov
daa
sub
mov
push
jge
ret
mov
push
pusha
rorl
xchg
mov
pop
mov
xlat
adc
cmp
mov
nop
cmp
into
inc
mov
out
fimull
enter
shll
repnz
pusha
rcr
fdivp
lret
call
jmp
fs
sbb
loop
into
into
add
push
sbb
repnz
aas
cmpsb
nop
outsl
test
divl
mov
push
ret
sbb
outsl
aaa
mov
test
fisttpll
popa
std
cmc
movl
mov
pop
mov
scas
xchg
popf
daa
pop
push
sbb
cmp
insb
mov
sbb
sub
in
mov
cmp
xchg
pop
xchg
fmuls
dec
test
je
sbbb
and
mov
add
fstpl
jno
int3
fnsave
inc
pop
or
call
call
mov
xlat
test
or
cmp
repz
jno
sbb
mov
mov
adc
jecxz
dec
loopne
xchg
imul
scas
cmc
cmp
jne
das
push
lea
fnstsw
inc
jnp
iret
xchg
stc
fadd
stos
or
fs
stos
dec
lods
mov
fcomp
cmp
ret
jmp
mov
add
add
les
mov
pop
or
mov
xor
loope
mov
push
mov
sarl
and
push
push
pushf
xchg
shrd
mov
sub
mov
insl
or
imul
inc
mov
ss
mov
test
xchg
push
ljmp
addr16
gs
sub
pop
cwtl
mov
sub
out
or
xor
stos
xchg
xor
into
dec
push
mov
pop
push
dec
rcr
movlps
cmpsb
nop
fcompl
adc
cmpsl
and
js
mov
loop
add
sub
ss
and
punpcklwd
outsl
cli
push
and
cwtl
jno
adc
lea
pop
test
aad
push
test
and
cmp
or
fwait
out
popl
bound
movsl
test
push
jne
push
sbb
xchg
mov
je
jae
test
fsubl
dec
jg
adc
jno
out
xlat
testl
divb
nop
bound
nop
mov
cmpsb
inc
adcb
inc
repz
add
jnp
test
testb
sbb
fcompl
shlb
xchg
les
les
aaa
inc
aas
add
cli
fs
clc
mov
mov
xchg
pop
cmpsb
sub
adc
imul
dec
jne
imul
out
push
ret
mov
aas
mov
push
cmp
adc
xchg
shlb
mov
sub
ss
int3
mov
fcmovnb
loope
push
or
nop
xchg
xchg
adc
out
cli
jne
jo
idivl
test
adc
sarl
mov
adc
adc
inc
cld
jmp
mov
dec
jg
fucomip
stos
jl
xchg
loop
mov
jecxz
jle
aas
push
sti
cwtl
mov
fsts
test
or
add
and
dec
fnstenv
xorl
jb
xor
dec
inc
outsl
cli
js
jp
jae
adcb
movsl
adc
push
loopne
lock
lahf
ret
xchg
ja
test
out
out
jmp
mov
adc
mov
ljmp
mov
dec
cli
mov
dec
dec
fcoml
xchg
outsb
out
pop
sbb
mov
mov
aam
icebp
mov
addr16
jns
into
movsb
mov
add
or
mov
cmp
mov
mov
jl
orb
dec
or
xchg
or
sbb
cmp
xor
xchg
out
push
loop
push
fucomip
lds
mov
imul
pop
cmp
cmpsb
test
and
mov
and
lods
leave
or
mov
mov
and
test
mov
sbb
fisttpll
ret
in
mov
xchg
pusha
sbb
test
sti
orl
sub
mov
mov
insb
hlt
jb
jle
fcmovbe
inc
xlat
dec
scas
icebp
jno
cmp
lret
inc
add
outsl
cwtl
stos
cltd
int
enter
adc
enter
xor
imul
jp
les
je
hlt
subl
lahf
push
orb
dec
xchg
lret
pop
adc
or
ljmp
je
and
inc
jbe
sbb
pop
int
xchg
aam
lock
jnp
mov
nop
dec
stc
pop
or
jl
xor
aam
das
lret
movsl
cli
cmp
sbb
add
out
sbb
fsubp
roll
mov
add
jb
addl
std
mov
addr16
call
push
inc
rcrb
push
and
jle
jp
loope
lock
cltd
outsb
mov
loope
inc
cmp
out
push
fdivs
shl
mov
sub
imul
dec
inc
rorl
arpl
pop
adc
iret
dec
sbb
mov
adc
jle
popa
fidivrs
dec
lock
popa
jo
adc
xlat
cli
hlt
fsubrl
pusha
add
sbb
fisubrl
test
and
rol
shrb
inc
fsubrs
out
in
xchg
lock
sahf
fwait
insl
sar
add
enter
push
and
mov
mov
inc
test
stc
dec
push
push
int3
jecxz
lods
outsl
aas
pop
enter
push
add
cmp
addr16
bound
jg
adc
jnp
mov
test
push
mov
inc
cs
out
icebp
dec
pop
call
test
imul
sbb
aad
ds
in
jb
adc
jne
cmpsl
mov
jle
and
sbb
mov
test
push
andl
xchg
dec
xor
adc
mov
out
jp
mov
mov
dec
lods
pop
lret
in
lret
sub
push
outsl
aas
scas
xor
iret
pushf
negb
add
cmp
fwait
test
and
mov
rcrb
mov
sti
rcrb
jae
pop
xchg
mov
xorl
scas
cmp
in
mov
xchg
mov
cmp
test
out
insb
push
repnz
enter
inc
push
in
sub
scas
push
mov
insb
or
mov
or
ja
push
or
cmpsb
clc
outsl
fisttpll
sti
cltd
shll
pushf
mov
sbbl
inc
daa
xorl
cmp
in
push
mov
repnz
sahf
dec
sub
sti
out
pop
push
push
je
fldcw
fmulp
data16
insl
sub
sar
dec
mov
sub
sbb
mov
adc
clc
or
jle
xchg
sahf
push
lret
jg
les
jb
jb
sbb
sbb
add
cli
and
addr16
test
sbb
pop
filds
jo
xorl
mov
addl
ficomps
in
and
adcb
add
lods
cmp
call
rorb
and
data16
sbb
mov
sbb
sahf
jns
cmp
push
mov
leave
xchg
in
xchg
sub
jmp
je
int
or
push
adc
pushf
bound
into
sbb
xchg
sbb
jecxz
push
push
and
pop
mov
aad
jecxz
sbb
sbb
loopne
out
ljmp
sbb
dec
iret
in
jns
out
outsl
or
js
mov
imull
push
or
decb
xchg
mov
cs
jo
xchg
jmp
jmp
xchg
sub
xchg
cli
mov
jns
jle,pn
dec
or
mov
addr16
and
push
adc
filds
lret
adc
stc
out
in
sbb
jne
mov
cmp
loop
jmp
mov
add
pop
fsubr
dec
xorl
jno
in
fcoml
xorl
js
popf
imul
mov
xor
lahf
negb
inc
sub
popa
mov
push
cmp
mov
rol
mov
adc
icebp
sub
ja
xor
jb
dec
scas
xor
jns
jae
pop
movsb
or
push
mov
incl
pop
movsb
xchg
arpl
inc
sbb
pop
xchg
shrb
and
jnp
popa
sti
mov
mov
add
mov
int3
adc
pusha
sbb
pop
xor
inc
outsb
push
ja
imul
lods
cmp
jb
fldt
push
mov
sub
dec
fcomps
and
xor
into
inc
js
sub
sub
scas
iret
mov
in
adc
inc
xor
add
lret
fsubrl
xchg
and
push
ret
hlt
lret
das
hlt
rcrl
lods
frstor
outsb
mov
fs
inc
test
movsl
inc
out
out
or
sub
inc
sub
aas
push
repnz
mov
xchg
push
stos
and
gs
pop
pop
sahf
bound
orl
mov
add
add
bound
cmpsl
sub
inc
and
mov
outsl
je
out
movsb
aaa
adc
adc
dec
jnp,pn
xor
ljmp
cmp
push
lahf
stos
push
add
pop
xchg
fwait
xor
adc
shlb
mov
mov
stc
mov
xor
fistpll
mov
inc
mov
js
xchg
add
cs
cwtl
push
movsl
cmpsb
push
jle
inc
sarb
aam
orb
test
dec
das
lds
mov
and
mov
and
mov
jg
sub
push
subl
cmp
stos
sub
out
sti
push
mov
fs
fistpl
xchg
das
inc
add
mov
mov
jae
pop
icebp
into
aad
scas
sbb
aas
xor
xchg
shlb
push
jg
test
mov
inc
push
mov
imul
out
cmp
mov
push
sub
and
stos
adc
fmull
push
es
ljmp
test
arpl
sub
enter
jae
mov
call
dec
imul
mov
or
test
dec
inc
mov
mov
cmp
sti
inc
xor
and
lds
add
loop
jp
movsl
js
subl
and
out
or
sbb
jae
pusha
sbb
xchg
es
out
jb
or
add
push
xchg
push
movsl
adc
clc
ss
xor
ret
aam
add
mov
jmp
pop
jl
popa
add
mov
xor
flds
out
lcall
subl
in
loop
int3
xor
lock
icebp
outsl
aad
mov
xchg
in
stos
add
mov
add
movhps
js
sub
ret
je
mov
push
sbb
cmp
mov
test
push
dec
out
push
and
into
nop
jno
popf
loop
out
fcoml
in
aaa
scas
in
inc
clc
cmc
mov
jge
hlt
mov
icebp
jl
sub
push
pop
pop
incl
dec
inc
hlt
ja
aad
stos
push
les
insl
mov
and
imul
and
scas
shrl
mov
add
and
pop
test
scas
std
mov
lock
jnp
mov
test
push
fisttps
dec
or
cli
sbb
cwtl
repnz
xor
ffreep
lret
cmp
daa
fldl
inc
ja
mov
mov
jmp
adc
std
rcrl
hlt
xchg
push
addb
push
xlat
sub
out
xor
cmp
dec
sub
lock
pop
pushf
shrb
inc
out
rorl
inc
imul
arpl
imul
popa
jb
cmp
jb,pt
aaa
call
stos
adc
pop
and
xor
movb
shrl
pop
jb
leave
inc
les
clc
das
punpckldq
icebp
fsubp
xchg
cld
ficompl
aaa
mov
shlb
subl
cmp
shll
xor
sbb
dec
insl
jbe
push
movsb
cld
imull
jge
push
jge
jne
sub
xchg
daa
xchg
dec
sub
push
or
push
mov
mov
xchg
mov
loope
push
pusha
imul
ret
pop
and
xor
orb
cwtl
stos
lret
pop
push
jge
inc
arpl
mov
mov
mov
je
push
fldt
sbbl
sbb
mov
cmpsl
mov
jae
stc
add
sbb
test
cmp
cmc
sbbl
mov
js
movsl
inc
in
push
cmp
cmp
jge
ret
adc
rorb
popa
nop
xchg
pop
lea
insl
loop
mov
push
inc
sahf
negl
lods
mov
mov
pop
es
mov
daa
or
ficompl
ss
cwtl
and
or
adc
jmp
insb
pop
inc
gs
inc
mov
xchg
xor
clc
cmp
fptan
aad
lahf
jo
push
lock
subl
cmp
movsb
xchg
mov
std
dec
mov
xchg
mov
xchg
std
and
pop
sub
sbb
out
mov
pop
cmpl
lds
in
lret
cmp
cmp
out
in
cwtl
inc
mov
lret
mov
xchg
cs
mov
enter
mov
adc
and
sub
rolb
jnp
or
add
repz
mov
enter
pop
push
stc
pop
jg
clc
in
pop
jns
xchg
les
fdivl
fistpll
cmpb
mov
data16
mov
sbb
cmp
mov
call
xchg
cmp
adc
push
stos
mov
pop
jmp
cmp
push
sub
or
iret
stc
dec
lahf
out
inc
popf
or
mov
test
mov
add
das
inc
jge
addr16
bound
mov
mov
push
dec
movb
mov
mov
jecxz
inc
mov
lret
je
stos
push
insb
push
into
mov
imul
fildll
cmpsl
int3
scas
mov
cmpl
ss
push
sub
push
js
shlb
sbbl
or
lret
push
mov
cltd
xor
dec
pop
movsl
std
mov
sbb
and
inc
mov
test
sub
pop
hlt
pop
mov
in
dec
popl
push
mov
inc
les
mov
lcall
dec
dec
inc
data16
fwait
and
push
mov
les
subl
and
or
jmp
sub
mov
push
jbe
adc
inc
in
cmpsb
pop
cltd
fsubrl
lea
je
jns
or
shlb
leave
loop
pop
pop
jne
pop
lock
adc
sub
aad
sub
pop
jb
mov
jp
sub
inc
push
adc
cmc
push
ret
int
lea
sbb
outsl
inc
or
pcmpeqw
cmp
sbb
aad
jmp
jne
mov
sub
sahf
mov
lds
xor
dec
mov
adc
xchg
sub
aas
push
ss
dec
dec
cltd
addb
or
and
hlt
shrb
fstpt
movsl
mov
fisttpl
jb
xlat
inc
sub
fcmovnbe
cmpsb
cmc
xlat
xchg
cmp
xchg
mov
xor
and
out
dec
jno
jg
rolb
cmp
stos
lods
pop
push
enter
mov
sub
xchg
dec
xor
xchg
decb
jb
sti
and
xchg
imul
cmp
bound
pop
enter
add
test
rorb
adc
fldcw
ss
xor
insb
xchg
cmc
fmull
pop
jb
mov
inc
rclb
or
cld
movsb
or
xchg
mov
pop
inc
test
lret
fistpl
aad
leave
adc
mov
push
cli
test
shlb
and
sub
jge
push
cltd
out
pop
popfw
ja
xor
mov
test
xchg
dec
add
mull
enter
mul
fdivrl
xchg
lock
dec
into
rorl
mov
pushf
sub
jle
jg
xchg
pop
fcomps
dec
xor
divb
arpl
call
iret
fistpll
hlt
and
pushf
nop
sarb
sar
popa
lea
fsubrl
xchg
cmp
mov
fcmovnb
test
push
inc
lods
mov
jecxz
or
aam
push
jecxz
adc
xlat
mov
insb
cmp
sub
dec
sub
mov
stos
xor
rorb
fld1
ja
inc
or
dec
xchg
sub
add
pop
adc
in
movsl
jp
sub
repnz
add
popf
mov
add
rorb
mov
mov
leave
or
in
ret
shll
xchg
jge
pushf
and
into
xor
mov
lea
pop
das
lret
mov
push
cwtl
hlt
jae
mov
sbb
into
xor
xor
stc
lds
sub
js
out
sub
push
mov
jp
inc
jecxz
and
cmpsb
or
jmp
mov
jns
dec
push
sub
or
xor
addr16
jo
inc
sar
sbb
pop
dec
stos
or
push
imul
mov
fstpl
loope
movsl
rolb
imul
test
jns
stc
jae
fnstenv
mov
repz
icebp
xchg
lock
mov
xor
fsts
mov
repz
dec
mov
aas
in
pop
cs
pop
mov
add
leave
adc
dec
je
dec
lahf
jnp
nop
fisttpl
xchg
aam
cmc
aas
in
in
call
inc
add
or
push
jns
rorl
js
test
or
aam
mov
and
inc
xor
inc
mov
mov
dec
repz
push
scas
jle
insl
inc
push
jmp
add
scas
mov
dec
add
pop
sti
cmp
pop
fnstsw
pop
and
push
int
jb
mov
sahf
je
test
aad
jl
repnz
icebp
hlt
inc
ja
inc
cmc
sub
adc
fdivrl
in
inc
cwtl
dec
cmp
pop
sbb
loope
dec
or
out
cmp
sbb
adc
push
lods
lea
imul
mov
pop
sbb
add
mov
or
js
jg
outsb
add
xchg
cmc
stc
add
xchg
sbb
push
inc
push
mov
shl
and
jbe
pop
stc
sbb
loop
pop
testb
add
imul
pop
pusha
adc
xor
inc
out
add
outsl
lret
push
addb
ja
ficomps
cmp
fdivrs
xchg
scas
xchg
lods
movsl
mov
sti
sbb
cmpsl
sbbl
dec
pop
rcrl
into
adc
shlb
mov
jecxz
add
fsubrl
dec
pusha
mov
fldt
adc
cmp
fldt
sub
subl
push
test
fchs
mov
adc
and
jnp
fmuls
jle
or
mov
dec
ja
lret
mov
es
cld
repz
and
mov
in
sbb
adc
adc
cli
xchg
int
mov
daa
out
or
inc
mov
loopne
mov
daa
push
jge
aas
bound
xchg
fabs
les
push
gs
or
push
cmp
push
aad
add
and
or
repnz
pop
jbe
aas
je
adc
pop
xchg
loope
adc
cmp
stos
mov
scas
dec
xor
test
cmp
xor
cmpsl
jne
xor
xor
lods
lret
pusha
loope
movsb
sahf
sub
sub
push
push
dec
dec
inc
es
int3
jl
es
in
mov
cmp
imul
and
pop
insl
enter
ds
xor
notb
sub
or
popa
leave
js
pushf
jmp
aad
in
into
mov
mov
stos
mov
dec
and
adc
cld
jb
gs
les
or
adc
pop
lret
in
lahf
adcl
rol
aad
aas
or
inc
lea
dec
xchg
xchg
push
fsubs
call
and
cmp
jae
in
lar
sub
insb
or
outsl
rcr
stos
mov
mov
insb
loopne
ss
ss
xchg
dec
jns
xchg
mov
shll
roll
jp
sbb
js
adc
subl
cmp
dec
jae
sbb
ds
dec
sbb
fcom
mov
sbb
sub
stos
insl
loop
push
xor
lret
aaa
pop
es
pop
jae
stos
ja
mov
mov
daa
and
hlt
cmp
in
ljmp
imul
pop
fsubl
cwtl
fucomip
pop
and
mov
sti
mov
nop
in
sub
jne
out
sbb
sbb
js
cmp
mov
pusha
iret
fcoml
or
jecxz
gs
and
lahf
pop
scas
jge
out
paddw
mov
mov
dec
stos
push
lock
das
jae
pop
stos
xlat
jo
repnz
testb
sbb
pop
push
jmp
fidivs
lahf
push
enter
sub
jne
xchg
mov
outsb
cmp
insb
push
popa
stc
mov
into
mov
movsb
scas
scas
adc
push
data16
insb
test
xor
dec
jne
enter
xor
push
bound
in
xor
imul
mov
lds
ljmp
psrad
push
nop
leave
pop
adc
mov
sub
mov
push
imul
and
mov
mov
outsl
xchg
aad
and
aad
arpl
mov
data16
xor
lcall
pop
mov
loope
mov
jno
inc
mov
dec
and
mov
mov
aad
dec
inc
jge
shr
push
mov
lods
dec
or
orb
out
clc
sub
ret
push
aad
inc
ljmp
xor
jno
mov
mov
frstor
adc
lods
mov
fimull
sub
fimull
movl
add
and
xchg
pusha
cmp
sbb
fsubrp
sbb
pop
sbb
inc
sbb
outsl
loop
mov
jb
jle
cmp
mov
cmp
xorl
in
inc
imull
add
int3
xorl
jg
jbe
nop
cld
dec
cmc
dec
jns
pusha
sub
movb
adc
daa
fsubrs
ds
loop
sbb
ljmp
cmp
leave
jns
add
je
inc
mov
jne
test
es
or
push
inc
add
inc
outsl
in
mov
stc
add
jg
mov
sub
es
cld
mov
xor
jge
hlt
mov
mov
fdivrl
jge
xchg
adc
mov
mov
fstp
mov
inc
test
ljmp
jge
in
add
mov
sub
fistl
loopne
ret
mov
rorl
leave
out
mov
stos
ret
xor
pop
je
cmp
cs
jle
dec
lds
jmp
sbb
sbb
xchg
sbb
popa
mov
push
sub
test
ja
sbb
ss
je
repnz
xchg
cmpsl
fsubs
sahf
repnz
dec
ja
and
xor
and
movsl
in
aaa
and
push
imul
out
pop
lret
add
xor
or
pop
pop
xor
push
nop
cmpb
mov
int
repz
push
leave
lds
add
mov
shl
aas
aam
pop
repnz
cmc
xchg
xor
inc
xor
mov
mov
xchg
inc
sub
push
into
add
dec
mov
in
push
inc
jge
mov
daa
data16
loop
cmp
cli
sub
sub
lahf
rcll
adc
in
push
adc
in
jnp
lock
movsb
xor
pop
jnp
stos
jb
mov
add
out
inc
cmc
iret
jle
add
sub
repz
push
outsb
pop
lcall
loop
sar
scas
fnsave
loope
insb
nop
cmpsb
cld
cmpsl
cmp
mov
daa
insb
or
sbb
inc
xor
fldl
das
adc
mov
ret
mov
push
cwtl
xchg
imul
imul
cld
cltd
sarb
sti
insb
mov
ret
fsubr
mov
sarb
pop
or
lea
repz
mov
mov
lahf
jmp
and
fdivrs
scas
add
shrl
clc
mov
sub
pop
fldl
xchg
push
je
or
mov
cld
mov
in
jbe
sti
js
push
mov
addr16
push
push
pop
mov
add
jecxz
add
push
iret
dec
lock
cmp
daa
iret
ds
hlt
sarb
mov
push
xchg
push
gs
pushf
popa
fs
rcrl
push
mov
xor
jnp
jmp
cltd
jge
mov
xchg
lods
sahf
jo
or
xor
inc
imul
clc
mov
push
nop
push
xchg
into
dec
je
or
scas
or
pop
jp
imul
and
push
fdiv
inc
cs
ficompl
inc
arpl
jno
loop
sbb
mov
pop
mov
outsl
xor
rcrb
nop
dec
test
movnti
sbb
mov
inc
or
lret
clc
push
aas
inc
sub
mov
fisubrs
mov
sbb
cmpsl
mov
insl
cmp
mov
jecxz
out
xchg
movsl
mov
push
and
fst
das
cmp
imul
cmc
int
xchg
jmp
xor
scas
mov
mov
aad
jg
adc
xchg
push
call
mov
xor
sbb
cmp
xor
aam
jno
lea
std
and
cmp
stc
jg
push
in
faddl
imul
jbe
cmp
push
xlat
mov
movsb
or
xchg
sub
push
jle
rcrl
sbb
push
mov
lods
arpl
imul
jp
xor
in
fdivs
test
pop
push
cmp
or
es
jp
cmp
rorl
test
sub
movsb
mov
pop
push
sub
mov
aad
xor
xor
lods
and
and
mov
fcmovu
das
movsb
je
cmp
loop
adc
lret
lock
xlat
xor
aaa
daa
insb
lock
cld
mov
push
arpl
jo
loopne
inc
mov
push
sahf
xchg
pop
sub
pop
in
out
inc
adc
pop
mov
adcb
lahf
inc
stos
mov
daa
lods
mov
int3
pop
mov
fldl
cwtl
pop
inc
mov
pop
cld
stc
rcll
mov
jb
jne
dec
je
sbb
out
sub
dec
sbb
mov
out
dec
push
leave
dec
push
outsl
movb
inc
push
jbe
iret
repz
mov
es
faddl
out
push
leave
sub
inc
inc
in
sbb
dec
sarl
fdivs
jo
add
adc
fcoms
aas
jbe
mov
je
jg
pusha
push
fsts
adc
adc
arpl
cmp
push
push
or
pop
xor
push
fldenv
pop
insb
js
scas
sub
push
mov
stos
out
sub
pop
jecxz
aad
pop
add
pop
movsb
sbb
loope
add
push
and
and
stos
xor
xchg
lea
pop
xor
fisttpll
movsl
pop
insb
dec
test
repnz
adc
out
cs
insb
outsl
xchg
lret
leave
sbb
adc
out
dec
ja
scas
cmp
cwtl
pop
pop
mov
adc
cmpsb
sub
shrb
dec
dec
adc
jmp
clc
out
push
or
mov
loop
pusha
mov
lea
scas
adc
jae
mov
popf
pop
rcl
orb
inc
or
negb
call
pop
ret
out
shrb
adc
data16
aad
sbbl
mov
adc
pop
add
sbb
inc
ret
inc
insl
daa
cs
xlat
xor
lret
cs
into
out
push
lods
jno
mov
jmp
icebp
dec
jecxz
popf
dec
gs
lds
fdivp
jno
dec
mov
test
ss
out
sbb
or
jecxz
bound
loopne
and
gs
outsl
lods
nop
inc
clc
or
adc
arpl
fnstenv
push
mov
scas
rorb
add
fidivrl
out
fsubs
inc
test
push
mov
mov
mov
mov
xor
xchg
iret
mov
fldenv
sub
pop
mov
and
sub
imul
clc
cmp
packssdw
jno,pt
jb
mov
arpl
inc
adc
sub
or
xlat
fstps
cmp
cltd
dec
insb
and
mov
fs
es
and
mov
shl
mov
iret
out
inc
add
add
insb
sbb
jo
ds
push
mov
lods
adc
and
fisubrs
cli
xor
mov
cltd
shrb
aam
push
cltd
std
movsl
nop
pushf
xchg
ja
push
sub
pop
loopne
sti
outsb
mov
add
sbb
stc
jecxz
mov
leave
nop
ret
jl
jle
mov
mov
pop
in
sbb
xchg
cmp
lcall
rolb
insl
or
dec
dec
xor
jmp
in
cmc
sbb
mov
and
icebp
add
or
push
inc
sti
cli
adc
decl
aad
sbb
stos
pop
outsl
lods
test
mov
bound
xchg
push
inc
jnp
cltd
dec
or
fisttpl
idivl
idivl
adc
or
shl
adc
lods
add
dec
fnsave
lahf
xor
xor
outsl
add
repnz
pop
mov
or
ret
inc
push
xlat
pop
pushf
int
cmp
and
cmpsb
jbe
add
cmpsb
jbe
push
std
xor
imulb
repz
sbb
xchg
scas
pop
rcr
push
sahf
adc
lods
mov
push
iret
lret
pop
dec
xor
mov
iret
loope
xchg
rcl
pop
cld
jb
mov
jg
outsl
xor
adc
adc
push
xchg
mov
adc
jmp
inc
sub
arpl
mov
inc
dec
outsb
imull
xchg
popf
inc
das
sub
outsb
jno
push
out
push
cwtl
mov
sbb
insb
or
jne
jo
lea
imul
fiadds
lcall
les
ljmp
mov
fs
aad
into
add
xchg
or
inc
lock
dec
dec
add
pop
cmp
mov
into
rcr
loopne
sub
gs
out
xchg
dec
push
dec
dec
pop
pop
jno
cld
inc
leave
xchg
or
subl
lds
push
rolb
sbb
add
fs
in
add
xchg
mov
pop
iret
cmp
sub
das
and
lds
ss
push
adc
ficoml
aad
cmp
xchg
scas
jl
inc
fcoms
in
out
mov
lret
adc
arpl
pop
mov
mov
pop
fbld
inc
add
add
mov
fs
jge
xchg
in
dec
push
jge
xchg
cmc
mov
loope
lea
arpl
jl
push
xchg
fwait
push
mov
jge
roll
into
movsl
dec
adc
inc
sbb
jnp
insb
push
mov
arpl
ja
mov
jbe
push
int3
jge
push
test
jle
push
xor
lods
xor
test
mov
jo
and
xchg
sub
push
xor
inc
mov
fnstcw
inc
jl
or
cli
adc
and
mov
adc
out
cwtl
fistpl
paddw
mov
outsb
icebp
push
jle
xor
push
scas
movsl
dec
inc
inc
ss
and
xchg
cmpsb
in
mov
cmp
adc
add
sbb
or
rorb
hlt
or
out
jae
std
enter
xchg
lahf
xor
lds
jno
nop
and
pop
testb
xor
ljmp
daa
test
jnp
push
mov
test
inc
xchg
lods
imul
fwait
cmp
mov
cmp
mov
add
adc
out
aaa
mov
inc
pop
fwait
sub
loop
inc
setb
dec
jp
adcl
and
xor
xchg
insl
jg
lret
push
cltd
and
push
gs
sti
clc
sti
andb
bound
into
pop
dec
sarb
sbb
pop
push
xchg
sub
aas
cmpsb
jbe
mov
push
iret
insl
pop
fimuls
out
fimuls
inc
ret
push
mov
divb
cmp
out
scas
and
fcomps
cmp
mov
loopne
xor
in
mov
inc
and
push
sub
and
fldl
cmpsl
aam
add
lret
ljmp
dec
in
pop
sub
or
mov
cld
repz
test
cmp
xchg
int3
repnz
rcr
pop
int
mov
push
fldl
dec
lcall
cmp
loope
mov
popf
jbe
outsl
popf
test
dec
mov
or
jmp
popf
test
out
out
insb
repnz
mov
adc
mov
scas
into
pop
mov
pop
cmp
fxch
mov
adc
mov
pop
xor
jne
mov
mov
mov
ficoms
lods
pop
push
in
les
dec
in
scas
add
rorw
jmp
inc
pop
vucomiss
ja
cmp
orb
jmp
mov
aaa
das
add
scas
push
outsl
xor
push
sbb
xchg
insl
add
inc
add
sarl
mov
in
mov
mov
mov
movsb
scas
mov
add
sbb
rcll
mov
add
add
add
add
and
jmp
jmp
jmp
jmp
