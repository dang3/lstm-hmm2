pusha
pushf
lea
mov
jmp
lea
nop
pop
call
mov
movw
pushf
lea
jmp
pusha
jmp
mov
pushf
pushf
movw
call
xchg
pushl
pushl
ret
pushf
pusha
nop
jmp
aam
mov
add
call
mov
movsbw
lahf
mov
call
mov
jmp
pushl
xchg
mov
pushl
ret
lea
pushl
jmp
xchg
pushf
movb
movb
pushf
pushl
ret
call
movb
mov
jmp
mov
mov
pushf
pusha
pushf
pushl
lea
call
bswap
bswap
nop
push
jmp
mov
jmp
call
xchg
push
mov
pushl
ret
call
jp
fidivs
movzbw
sets
setnp
nop
call
jmp
mov
jmp
lea
jns
lea
jmp
mov
pushl
lea
jmp
pushf
pusha
jmp
movb
call
call
xchg
pushf
pushf
pushl
ret
call
xchg
push
pushl
movb
pushl
ret
pushf
nop
mov
mov
jmp
nop
pushl
pushl
xchg
cwtl
pushl
mov
pushl
pushf
mov
mov
movl
lea
je
push
lea
jmp
xchg
push
pushl
ret
jmp
mov
pushf
mov
pushl
pushl
call
push
pushf
jmp
bswap
movzbl
bswap
nop
lea
pop
pushf
xchg
call
mov
push
lea
lea
jbe
pusha
pusha
push
xchg
mov
push
pushl
ret
jmp
add
mov
jmp
mov
movw
push
lea
lea
jle
pushf
xchg
pusha
pushf
push
pushf
pushl
ret
mov
jmp
xchg
movb
mov
pushl
ret
ljmp
call
pushf
pushf
mov
call
xchg
pusha
pushl
ret
jmp
call
push
fcoml
xchg
movw
mov
lea
jo
pusha
pusha
pushf
lea
call
jmp
xchg
pushf
pushl
ret
movsbw
pushf
mov
pushl
movl
lea
jle
push
mov
push
pushf
lea
call
push
jmp
mov
call
int3
sahf
sub
or
push
stc
push
nop
lea
ja
lea
bswap
pop
pushf
pushf
lea
jnp
push
xchg
push
xchg
pop
pusha
lea
pop
mov
pusha
mov
lea
jle
lea
pushf
push
xchg
mov
pusha
pushl
ret
pusha
movb
nop
pushf
mov
not
jmp
lea
movl
mov
xchg
pushf
pushl
mov
push
pushl
ret
push
push
pushf
nop
pushf
jmp
jmp
xchg
mov
mov
call
call
lea
push
call
pushf
pusha
push
nop
pushf
pushf
call
pushl
xchg
mov
pushl
ret
mov
lea
jl
lea
pushf
call
lea
pushf
pushf
xchg
push
pushl
ret
test
cmp
lea
not
movzbl
nop
not
pop
jmp
lea
pushf
push
call
mov
pushf
lea
jnp
pusha
mov
lea
jmp
mov
movb
mov
pushf
call
pushl
lea
mov
push
movb
call
movb
lea
movb
pushf
xchg
movb
movb
pushl
ret
pushf
xchg
pushf
pusha
push
pushl
ret
mov
pusha
call
xchg
push
pushl
ret
xchg
mov
mov
mov
pushl
ret
push
nop
call
mov
xchg
pushf
push
pushf
pushl
ret
mov
push
dec
call
push
push
xchg
pushf
mov
movzbw
push
pushl
mov
pushf
pushl
mov
mov
pushf
mov
lea
call
pusha
call
mov
movw
push
mov
jmp
pushl
jmp
je
pushf
mov
pushf
nop
push
pusha
pushf
xchg
movb
movzbl
lea
mov
lea
ja
pushf
pushf
mov
mov
jmp
push
pusha
nop
call
movb
call
xchg
movb
pushl
ret
call
sub
adc
lret
mov
call
call
mov
lea
pushf
nop
movsbw
mov
jmp
sub
fs
pusha
mov
xchg
movsbl
movzbw
movzbw
mov
call
mov
lea
bswap
call
xchg
movw
push
pushl
ret
mov
call
call
pusha
pushf
lea
jmp
pusha
pushf
lea
call
mov
pushl
pushf
movb
lea
pusha
pushf
call
pusha
movb
nop
lea
jnp
push
mov
movzbw
mov
pusha
pusha
lea
jl
pushf
mov
jmp
fsubrp
adc
inc
and
pushl
pushl
ret
lea
movzbl
call
jmp
mov
push
call
dec
nop
pushf
push
jmp
pop
sub
pusha
movzbw
lea
nop
pushf
mov
pushf
pushf
push
mov
xchg
pushf
call
xchg
call
movl
xchg
movb
mov
movw
movw
pushl
ret
xchg
movw
pushl
ret
call
call
pusha
pushf
xchg
pushf
pushl
pushf
pushl
ret
pushf
call
call
mov
jmp
call
dec
icebp
addb
cmp
xor
add
shll
dec
and
pushf
push
movw
pushf
pushl
ret
jmp
call
pusha
call
js
jno
lea
mov
pushf
xchg
mov
push
pushl
ret
movzbw
mov
call
push
xchg
mov
mov
pushl
ret
pusha
pushl
nop
pushf
jmp
repnz
add
mov
pusha
nop
jmp
mov
jmp
lea
pushl
jmp
xchg
push
not
mov
pusha
mov
push
movl
call
mov
pushf
jmp
mov
jmp
cwtl
movsbw
nop
jmp
mov
push
xchg
pusha
pushl
xchg
jmp
lea
pusha
xchg
push
pushl
ret
pushf
xchg
pusha
pusha
push
mov
pushl
ret
pusha
mov
pusha
pushf
pushl
mov
jmp
nop
call
movw
pusha
mov
xchg
pop
bswap
mov
jmp
pusha
pushf
nop
push
jmp
nop
mov
push
mov
push
movb
push
pusha
xchg
jmp
push
push
nop
jmp
pusha
movb
mov
movw
push
pushf
pushf
lea
pushf
jmp
mov
jmp
jmp
pop
adc
add
pop
and
pushf
movw
pushf
pushl
ret
push
jmp
push
push
pushf
xchg
mov
mov
pushl
ret
call
push
lea
pushf
xchg
push
mov
pushf
pushl
ret
push
push
jmp
jmp
mov
bswap
lea
jle
lea
not
mov
jmp
xchg
movsbw
mov
push
pusha
push
mov
jmp
mov
push
lea
jmp
pushf
pushf
lea
mov
xchg
pushf
push
pushl
ret
pushf
jmp
bswap
pushf
not
nop
not
lea
movzbl
not
mov
call
jmp
inc
pop
xadd
xor
pusha
mov
push
mov
pushf
mov
call
cmp
fldenv
enter
pushl
call
mov
call
pushl
lea
push
pusha
mov
xchg
pushl
mov
pushl
ret
movsb
cmp
cmc
xchg
pop
mov
pusha
push
mov
pushl
lea
jmp
mov
dec
and
std
les
adc
cld
sbb
xchg
mov
jmp
jmp
xor
cmp
push
lea
mov
pushf
jmp
cli
pop
gs
add
lea
jmp
xchg
cwtl
pop
mov
pusha
pushl
jmp
call
push
mov
jmp
sbb
add
pushf
pusha
call
movw
mov
call
lea
nop
call
pusha
nop
mov
call
pushf
call
mov
jmp
mov
mov
mov
lea
bswap
mov
lea
js
pushf
mov
pushf
pushf
movb
movb
lea
jmp
xchg
pushf
movb
xchg
pop
not
call
pushl
lea
pushl
push
jmp
pushf
lea
push
xchg
pushl
pushf
pushl
ret
les
or
add
test
add
outsb
cltd
add
push
call
cmp
xor
jmp
movb
xchg
not
jmp
pushf
xchg
pusha
pushl
push
push
pushl
ret
push
mov
bswap
mov
pushf
pusha
jmp
mov
push
nop
lea
mov
jmp
jmp
jmp
mov
pushl
pop
pusha
push
mov
pushf
mov
push
call
mov
pushf
pushl
lea
lea
ja
pusha
pusha
xchg
pushf
pushl
ret
xchg
pushf
movb
pushl
ret
mov
push
xchg
pushl
jmp
xchg
pushf
pushl
ret
jmp
cwtl
mov
pushf
movb
mov
lea
je
xchg
push
mov
sete
mov
mov
push
jmp
xchg
fisubl
rorb
push
xchg
jmp
mov
jmp
call
mov
nop
push
call
xchg
mov
pushl
ret
xchg
movb
pushf
pushl
push
pushl
ret
mov
xchg
jmp
xchg
movb
movb
pushl
ret
mov
push
xchg
pop
mov
jmp
or
and
movb
pusha
pushf
pushf
pushl
ret
lea
movw
call
movsb
scas
pop
loop
mov
lds
rolb
mov
je
or
push
mov
pushl
ret
not
bswap
nop
pusha
mov
pusha
movl
call
call
or
dec
jmp
pushf
mov
pushl
ret
mov
jmp
pushf
xchg
push
mov
movl
mov
pushl
ret
xchg
pushl
pushl
movl
pushf
pushl
ret
lea
jmp
call
movb
pusha
mov
not
bswap
mov
pushf
pushf
pushl
call
lea
jns
mov
jmp
xchg
movw
mov
mov
mov
pushl
ret
nop
jp
sahf
pusha
mov
pushf
call
xchg
pushf
movb
movw
pushl
ret
pushf
call
xchg
movb
mov
pushl
ret
bswap
nop
movsbw
setae
mov
call
movsbw
movsbl
nop
call
call
push
pushl
pushl
xchg
pushf
mov
pushl
mov
pushl
ret
mov
bswap
pushf
pop
mov
pushl
jmp
mov
jmp
mov
pushf
push
jmp
mov
push
call
jmp
call
mov
jmp
push
xchg
mov
pushl
ret
mov
call
mov
jmp
jmp
pushl
lea
jmp
nop
pushf
pushl
xchg
movzbw
pushf
mov
jmp
call
xchg
push
pushl
ret
xchg
push
push
pushf
pushf
pushl
ret
pushl
xchg
jmp
lea
call
lea
call
pushl
nop
jmp
jmp
mov
pushf
mov
lea
call
jmp
pushf
xchg
push
lea
jle
push
mov
jmp
jl
nop
setge
cwtl
lahf
mov
pop
pushf
push
xchg
call
call
mov
mov
mov
pushf
mov
mov
call
call
call
lea
movb
movb
mov
xchg
push
pushl
ret
jl
das
decl
add
rolb
add
into
not
nop
mov
movzbl
pusha
mov
mov
push
call
nop
pushf
xchg
lea
lea
jae
mov
jmp
call
xchg
pushf
pushl
push
pushf
pushl
ret
movb
push
mov
movb
pushl
lea
jmp
call
call
pushf
xchg
push
call
lea
mov
movw
xchg
movb
pushl
ret
movzbl
mov
jmp
jmp
xchg
push
push
pushl
ret
lea
mov
jmp
mov
pushf
jmp
push
ss
cli
nop
jp
call
call
nop
mov
push
call
movsbw
bswap
pop
jmp
mov
mov
movb
lea
jns
lea
push
xchg
mov
pushf
pushf
pushl
pushl
ret
mov
movw
lea
movw
xchg
pushf
pushf
movb
pushl
ret
pop
inc
jbe
mov
movsbw
setb
jmp
lods
scas
fsub
jmp
pushf
call
pushf
pushf
call
mov
xchg
mov
pushl
ret
pushf
call
pop
and
je
sub
xor
jmp
pushf
mov
lea
call
nop
pusha
mov
push
jmp
pushf
push
lea
jns
nop
pushf
pusha
pushf
xchg
pop
setg
mov
pushf
mov
pushl
mov
call
movsbl
bswap
bswap
nop
sete
seto
pop
pushf
call
mov
pushf
mov
call
push
adc
push
pushf
pushf
xchg
pushf
push
pushf
pushf
pushl
ret
jmp
push
not
movzbl
mov
pushl
mov
push
pusha
lea
pushf
mov
xchg
push
pushf
pushf
pushf
pushl
ret
mov
mov
jmp
call
lea
pushf
pushf
jmp
pop
outsl
xchg
pop
lea
call
pusha
nop
pusha
lea
jbe
push
not
mov
mov
call
xchg
push
push
movw
pushf
pushl
ret
pushf
mov
pushf
lea
jmp
lea
push
xchg
pusha
pushl
ret
mov
mov
lea
mov
call
fimuls
call
push
jmp
mov
pusha
nop
setb
mov
pusha
jmp
push
jmp
bswap
push
movzbw
mov
call
mov
sbb
call
pushf
xchg
pusha
pusha
pushf
mov
pushl
ret
movb
pushf
xchg
call
nop
push
pushl
mov
pop
bswap
pusha
mov
pushl
mov
pushf
mov
lea
jmp
pusha
pushf
nop
pushl
mov
pusha
mov
mov
movb
jmp
jmp
xchg
mov
push
pushf
pushl
ret
lea
jl
push
lea
movw
call
nop
pusha
pushf
jmp
push
pushf
test
aam
fcoms
rorb
pop
pusha
pushf
mov
pusha
xchg
jmp
cmp
mov
pushl
mov
mov
pusha
mov
lea
movw
jmp
lea
pusha
pushf
xchg
pushf
pushl
pushl
ret
xor
and
xchg
pusha
pushl
ret
push
pushl
jmp
xchg
mov
mov
mov
pushl
ret
xchg
lea
jle
pushf
movzbl
mov
pusha
mov
call
lea
pushl
mov
pusha
jmp
call
nop
movb
jmp
mov
push
lea
call
pusha
call
call
nop
les
or
add
and
pusha
jmp
call
call
mov
jmp
xchg
pushf
push
pushl
ret
call
mov
push
pusha
lea
call
mov
pusha
movsbl
nop
jmp
jmp
mov
xorb
pushf
lea
push
jmp
pushl
push
pusha
xchg
pushf
mov
pushl
ret
nop
pop
movzbw
lea
pop
jmp
jmp
mov
pushf
lea
pusha
xchg
movw
pushf
pushl
pushf
pushl
ret
pusha
mov
call
lea
pushf
pushl
xchg
push
pushf
mov
pushl
ret
lea
movb
mov
lea
jne
pusha
xchg
push
pushf
pushl
ret
pop
bswap
mov
push
pusha
mov
movw
lea
movb
pushl
call
push
mov
jmp
call
jmp
lea
jmp
jmp
xchg
mov
mov
mov
pushl
ret
mov
movl
pushl
lea
call
call
xchg
push
pushl
pushf
movl
xchg
push
lea
push
lea
mov
jmp
pusha
call
pushf
lea
mov
xchg
movb
pushl
ret
pushf
jmp
movb
pushf
movw
lea
call
pushf
xchg
mov
pushf
pushl
movb
pushl
ret
nop
movzbw
pop
call
pushf
call
mov
movsbw
movzbw
bswap
lea
mov
pushl
jmp
pushf
lea
call
movl
mov
call
mov
xchg
push
pushl
ret
nop
pushf
movw
pushf
mov
movb
jmp
pusha
lahf
mov
push
pushf
call
mov
call
les
add
mov
push
jmp
mov
jmp
push
xchg
movsbw
jmp
push
adc
je
mov
call
call
mov
cwtl
pusha
mov
nop
jmp
call
push
mov
call
sarb
add
mov
cwtl
mov
call
pop
sahf
call
push
repz
pusha
xchg
pushf
push
push
pushl
ret
jmp
dec
or
subb
mov
nop
call
mov
pushf
pop
mov
push
mov
pushl
jmp
movsbw
mov
call
call
call
not
push
mov
call
pusha
pushl
pusha
pushf
lea
jmp
xchg
jmp
xchg
lea
jns
bswap
mov
pushf
pushf
pusha
mov
pushf
lea
pushf
xchg
pushl
pushl
ret
jmp
lea
mov
xchg
movb
movw
mov
pushl
ret
mov
jmp
enter
call
lea
movb
push
pushf
pushf
xchg
mov
mov
push
push
pushl
ret
mov
lea
call
jmp
pushf
bswap
pusha
nop
lea
pusha
jmp
lea
jo
xchg
pusha
pushf
pushf
pushl
ret
push
fs
push
mov
pushf
mov
pushl
mov
movb
pushf
lea
jmp
jmp
call
movsbw
call
xchg
call
jmp
push
movb
mov
pushf
jmp
mov
pushf
mov
call
mov
movzbl
mov
jmp
jmp
inc
adc
add
jmp
mov
push
push
lea
mov
pusha
xchg
pushf
pushf
pushl
ret
mov
call
push
nop
mov
jmp
call
jmp
pushf
call
lea
call
pushf
xchg
movb
mov
movl
pushl
ret
pushf
lea
jnp
xchg
pusha
pushl
ret
pushl
call
pusha
nop
call
nop
pusha
mov
jmp
push
pushl
nop
jmp
pushf
xchg
push
mov
pushl
ret
call
call
jmp
xchg
pushf
push
jmp
call
mov
mov
mov
push
mov
call
call
nop
pushf
push
xchg
movzbw
jmp
jmp
xchg
pushf
cwtl
bswap
call
push
pusha
pushf
lea
pushf
jmp
call
pusha
call
jmp
jmp
push
movw
mov
pushl
nop
movb
pusha
movw
mov
not
jmp
pushf
setle
mov
jmp
and
xchg
push
xchg
jmp
call
pusha
nop
pushl
xchg
not
lea
lea
not
mov
movb
jmp
sub
mov
verr
push
and
pushf
movb
lea
mov
jmp
cmp
dec
psubsw
lock
decl
xchg
jge
add
mov
pushf
pushl
lea
push
push
xchg
movb
pushl
movw
pushf
pushl
ret
mov
cs
push
pushf
mov
call
movb
lea
push
lea
jnp
pusha
xchg
push
pusha
pushl
ret
lea
call
mov
call
lea
nop
bswap
jmp
push
loope
jnp
lods
sbb
add
add
lea
jmp
mov
call
mov
jmp
pushl
pusha
mov
jmp
call
xchg
jecxz
xchg
mov
pushl
ret
pusha
lea
bswap
mov
pushf
xchg
pushl
call
pushf
pusha
pushl
xchg
push
call
mov
lea
je
pusha
pushl
lea
pusha
xchg
mov
push
pushl
ret
jmp
jmp
push
jmp
jmp
mov
pushf
push
push
call
xchg
movzbw
pushf
bswap
mov
pushl
call
mov
pusha
mov
jmp
lahf
push
lea
nop
pop
not
setbe
pop
jmp
jmp
pushf
setg
nop
pop
bswap
not
bswap
pop
push
pushl
mov
xchg
call
mov
nop
call
pushf
xchg
mov
mov
pusha
pushl
ret
mov
pushf
jmp
nop
not
lea
jmp
xchg
pushf
movb
pushf
mov
pushl
ret
pushl
movw
mov
jmp
movw
xchg
movsbw
mov
call
jmp
call
lea
pusha
call
push
jmp
mov
lea
pusha
xchg
pushf
push
pushl
pushl
ret
fdivrs
push
lea
call
push
mov
pusha
pushf
pushf
pushf
lea
movb
pushl
pushf
push
xchg
pushf
pushf
mov
pushf
pushl
ret
and
sbb
rorl
add
movsl
dec
add
push
mov
lea
pop
movsbw
mov
jmp
mov
movb
jmp
call
jmp
pusha
push
nop
jmp
jmp
xchg
movw
pushf
pushf
mov
pushl
ret
lahf
lahf
cwtl
pop
pushf
push
pusha
jmp
mov
pushf
call
lea
pushf
call
lea
call
setp
nop
push
movsbw
mov
pushf
pusha
xchg
push
movw
mov
xchg
jmp
lahf
movsbw
mov
push
nop
cwtl
pushf
mov
call
mov
je
add
push
push
add
push
xchg
pushf
pushl
ret
adc
imul
pushl
ret
mov
call
pushf
movl
xchg
bswap
movzbw
mov
jl
push
push
push
mov
pushl
lea
pusha
pushf
call
call
call
call
jmp
xchg
movb
mov
pushl
ret
xchg
pushf
push
movb
pushf
pushl
ret
push
xchg
push
pushf
push
movb
pushl
ret
movzbw
mov
call
pushf
mov
xchg
pushf
pushl
pushf
pushf
pushl
ret
jb
mov
dec
lea
call
lea
call
call
pusha
xchg
push
pushf
call
push
lea
jmp
movzbw
mov
call
mov
jl
add
pop
mov
jmp
mov
xchg
mov
movb
movb
mov
pushl
ret
pusha
xchg
pusha
pushf
pushf
pushl
ret
mov
jmp
pusha
mov
mov
lea
jmp
nop
movzbw
cwtl
jmp
lea
call
xchg
movb
pushl
ret
pushf
xchg
bswap
jmp
lea
mov
mov
xchg
pusha
mov
push
pushl
ret
pusha
nop
pushf
pushf
push
mov
pop
mov
push
pushf
pushf
mov
call
xchg
pushf
mov
call
pushf
nop
mov
xchg
mov
bswap
setnp
movsbl
mov
pushl
mov
pushl
pusha
mov
push
pushl
lea
movb
lea
jo
pushf
xchg
pushl
pushl
ret
movsbw
not
mov
mov
mov
pusha
push
pushf
lea
jg
lea
pusha
pusha
push
pushf
xchg
pushf
movb
pushl
pushl
ret
lea
pushf
mov
xchg
mov
push
push
push
pushl
ret
jmp
jmp
mov
push
lea
jmp
call
movb
xchg
jmp
and
or
pushl
call
lea
jmp
lea
call
nop
call
nop
pushl
mov
movb
mov
mov
pushf
mov
jmp
and
outsb
outsb
pusha
mov
pushf
lea
call
jo
push
jmp
movsbw
movzbw
nop
pushf
mov
pusha
jmp
mov
call
pusha
movsbw
pusha
bswap
nop
mov
movsbw
pushf
movsbl
mov
jmp
nop
pushf
pushl
call
pushl
xchg
pushf
movb
push
pushl
ret
adc
adc
push
mov
pushf
pushf
mov
jmp
pushl
mov
push
jmp
jbe
lret
enter
sbb
call
push
push
mov
pushf
lea
call
mov
nop
pusha
movsbw
push
mov
push
mov
call
pushf
lahf
call
mov
mov
mov
mov
mov
pushf
movb
lea
jmp
lea
mov
xchg
pushf
push
mov
pushl
ret
setb
call
lea
pushl
pushf
call
mov
lea
pusha
pop
pusha
mov
jmp
lea
jmp
push
pushf
nop
pusha
jmp
mov
jmp
movb
movw
mov
bswap
jmp
xchg
push
push
pushl
ret
push
call
push
pushf
mov
nop
pusha
call
mov
mov
pushf
jmp
pushf
mov
call
call
lea
jmp
pushf
pushl
mov
xchg
lahf
mov
pusha
push
mov
pushf
jmp
xchg
jmp
nop
pusha
pushl
mov
pop
mov
jmp
pushf
lea
pushf
call
xchg
mov
bswap
pusha
not
mov
pushf
mov
mov
push
push
call
pusha
movw
lea
call
xchg
pushf
call
jmp
call
push
xorb
xchg
pusha
pushf
pushl
ret
push
movw
lea
call
xchg
mov
push
xchg
movsbw
setns
pusha
movsbw
mov
jmp
xchg
pusha
movb
movb
pushl
pushl
ret
pusha
pushf
nop
pusha
mov
not
seta
lahf
cwtl
mov
pushf
call
pusha
pushf
call
push
ss
incl
pushf
pushf
pushf
pushl
ret
mov
pushf
mov
mov
pushf
push
jmp
mov
jmp
mov
bswap
not
call
xchg
pusha
movb
pushf
pushl
ret
xchg
movb
push
push
pushl
pushl
ret
push
nop
call
mov
movb
jmp
xchg
push
mov
call
jbe
mov
sub
in
jbe
sbb
aam
adc
mov
rolb
data16
aam
adc
pop
and
repz
xchg
dec
push
aam
adc
lcall
clc
rcrl
sbb
negb
aam
adc
mov
pop
adc
into
mov
sbb
pop
rcl
adc
or
cwtl
adc
adc
adc
movsb
movsb
mov
add
nop
mov
fidivs
sbb
sbb
sbb
scas
or
aam
adc
xchg
popa
inc
inc
dec
aad
aam
adc
xor
inc
in
sbb
sbb
lock
sahf
lret
or
mov
popa
stc
rcrl
sbb
mov
sbb
push
adc
sbb
sbb
jle
sti
rcrl
sbb
scas
jno
aam
adc
sahf
loop
add
outsb
sti
rcrl
sbb
shlb
rcrl
sbb
enter
push
pop
add
sbb
sbb
addr16
sbb
sbb
or
test
add
push
repnz
sbb
sbb
sbb
sbb
sbb
dec
pop
clc
rcrl
sbb
mov
sbb
movsb
cs
adc
dec
sub
test
fidivrs
sbb
xchg
pop
push
lds
aam
adc
xchg
push
push
fisttpll
cwtl
rolb
mov
adc
mov
push
sti
rcrl
sbb
dec
inc
and
negb
xor
sbb
sbb
push
shlb
sbb
sbb
push
paddq
sbb
ds
aam
adc
in
lea
adc
dec
sbb
sbb
jbe
adc
sbb
sbb
jne
rcrl
sbb
es
aam
adc
jp
repnz
push
sbb
push
mov
adc
sbb
sbb
loopne
add
mov
sub
sbb
sbb
inc
lahf
or
test
add
adc
shlb
ret
in
sub
sbb
sbb
pop
and
sbb
sbb
push
sbb
aam
adc
mov
add
cld
ss
sbb
push
jno
aam
adc
movsb
add
js
out
out
rcrl
sbb
and
rcrl
sbb
push
push
rcrl
sbb
push
jp
xor
xor
sbb
sbb
pop
jno
or
call
sbb
mov
push
rcrl
sbb
push
test
sbb
sbb
popa
push
jae
add
sbb
enter
pop
adc
adc
data16
push
cmp
jne
sbb
sbb
pop
push
aam
adc
nop
cmp
jnp
aam
adc
sahf
fs
ds
rcrl
sbb
mov
sbb
aam
adc
test
add
or
fcomi
rcrl
sbb
pop
xor
aam
adc
mov
inc
ret
adc
mov
mov
aam
adc
repnz
cmp
push
jbe
and
sbb
sbb
xchg
xor
rcrl
sbb
jns
aam
adc
insl
fwait
inc
js
je
aam
adc
mov
loopne
ja
xor
sbb
sub
rclb
ja
aam
adc
cwtl
nop
push
inc
xchg
outsb
fists
mov
push
jge
rcrl
sbb
outsb
jbe
aam
adc
push
mov
iret
push
aam
adc
jb
xchg
rcl
nop
sbb
sbb
sbb
and
jbe
push
filds
aam
adc
mov
push
push
mov
lods
push
rorb
sub
push
or
sbb
sbb
push
cld
rcll
out
dec
sub
sbb
sbb
sbb
aam
adc
loopne
and
rcrl
sbb
inc
ret
sbb
sbb
std
cmp
push
push
inc
mov
mov
loopne
or
adc
rcrl
sbb
pop
in
rcll
add
aam
adc
nop
popa
pusha
dec
movsbl
add
sbb
sbb
test
rcrl
sbb
in
fistps
adc
out
incb
cmpsb
jno
aam
adc
movsb
or
fimuls
std
rcrl
sbb
daa
jge
push
pusha
push
aam
adc
ret
rcll
add
rcrl
sbb
cs
rcrl
sbb
in
ds
jg
aam
adc
add
or
mov
sbb
xchg
int
rcrl
sbb
jle
adc
sbb
sbb
push
adc
aam
adc
addb
xor
sbb
sbb
sahf
or
xor
test
aam
adc
push
xor
push
mov
rcrl
sbb
imul
sbb
sbb
add
add
sbb
sbb
outsb
add
xchg
mov
cs
aam
adc
mov
inc
mov
sbb
cltd
ret
es
rcrl
sbb
into
aad
rcrl
sbb
jbe
mov
fdivs
sub
sbb
sbb
mov
or
sbb
sbb
fwait
pop
aam
adc
mov
ds
not
sbb
sbb
movsl
leave
cwtl
sub
sbb
sbb
outsb
ds
rcrl
sbb
and
sbb
iret
rcll
es
mov
jl
cmc
scas
mov
movsb
aam
sbb
sbb
mov
jns
jbe
rcrl
sbb
out
sub
nop
add
loopne
incl
sbb
sbb
inc
ret
adc
movsb
insb
mov
jnp
or
stos
daa
loope
in
xchg
rcrl
sbb
es
in
jp
cmp
and
sbb
sbb
negb
or
sbb
sbb
out
insb
jbe
sbb
sbb
mov
mov
push
rcll
sbb
sbb
pop
add
sbb
sbb
es
aam
adc
mov
push
shlb
sbb
sbb
dec
aam
aam
adc
mov
ds
sub
sbb
sbb
fisubrs
sbb
into
or
sbb
es
sbb
lods
fsts
or
clc
rcrl
sbb
jmp
out
sbb
cmp
loop
je
push
pop
aam
adc
mov
adc
sbb
cmp
sbb
idiv
push
aam
adc
pushf
cltd
mov
or
sbb
sbb
jg
scas
push
mov
push
aam
adc
xchg
xor
jmp
sbb
sbb
out
aam
adc
mov
and
sbb
sbb
pop
fiadds
aam
adc
xchg
mov
aam
adc
addb
int3
xchg
and
sbb
sbb
push
push
and
in
xor
add
pop
js
sbb
sbb
cmp
sbb
mul
add
sbb
sbb
xchg
aam
adc
xchg
aas
or
aam
adc
stos
jg
pushf
icebp
xchg
mov
sbb
or
aam
adc
xchg
sub
sub
or
sbb
sbb
jp
rcrl
sbb
push
testl
mov
xchg
stc
sbb
sbb
sbb
adc
test
add
xor
aam
adc
les
sub
fbstp
sbb
sbb
push
sub
aam
adc
nop
pop
out
inc
sahf
mov
sbb
jbe
mov
mov
xchg
or
aam
adc
test
mov
add
sbb
sbb
pop
ss
cmp
mov
sbb
sahf
add
rcrl
sbb
aas
sub
sbb
sbb
sbb
aam
adc
out
imul
rcrl
sbb
scas
sub
push
push
pop
adc
into
or
jnp
mov
adc
sbb
sbb
push
or
aam
adc
ret
test
adc
sbb
sbb
scas
scas
or
repz
sbb
sbb
dec
clc
rcrl
sbb
mov
and
sbb
sbb
sahf
repz
sbb
sbb
mov
adc
xchg
sub
sbb
sbb
jbe
or
sbb
sbb
push
int3
add
sbb
sbb
push
or
sbb
sbb
cmc
pop
xlat
mov
adc
xchg
std
lea
push
inc
rcrl
sbb
push
pop
aam
adc
mov
ljmp
adc
add
sbb
sbb
flds
mov
aad
aam
adc
js
jp
xor
push
aam
adc
inc
cmp
or
jle,pt
aam
adc
xchg
decl
xlat
push
roll
clc
mov
jo
aam
adc
nop
movsb
les
pop
xchg
cs
adc
loop
outsb
inc
cld
xchg
adc
mov
cmpsl
cli
rcrl
sbb
ds
or
sbb
sbb
hlt
aaa
push
jbe
or
movsb
outsb
insb
fidivs
mov
sbb
mov
adc
mov
cld
decl
jg
aam
adc
sub
add
lock
sbb
aam
adc
sbb
inc
pop
cmp
and
sbb
sbb
jbe
push
aam
adc
mov
cmpsb
insl
stc
rcrl
sbb
ss
sbb
sbb
ss
rcrl
sbb
xor
test
add
jbe
sub
sbb
sbb
push
int3
sub
insb
sub
or
cmc
rcrl
sbb
pusha
dec
push
inc
cs
or
sbb
sbb
rorl
sbb
sbb
or
cmp
aam
adc
xchg
loop
in
mov
sbb
in
pop
aam
adc
push
mov
test
sbb
push
lret
mov
mov
loopne
or
sub
sbb
sbb
pop
and
rcrl
sbb
mov
adc
sbb
sbb
idivb
aam
adc
mov
jg
xchg
jmp
aam
adc
cwtl
ret
ss
xchg
call
sbb
sbb
mov
daa
add
sbb
sbb
and
sbb
std
add
sbb
sbb
pop
or
sbb
sbb
das
adc
adc
les
movsb
push
push
rorb
aam
adc
mov
jle
inc
push
and
sbb
sbb
pop
and
sbb
sbb
dec
enter
sub
aam
adc
or
cs
adc
cmpsb
lods
adc
ret
pop
or
rcrl
sbb
loop
cmp
sbb
aam
adc
test
insb
lret
push
aam
adc
mov
inc
add
sbb
sbb
push
fimull
aam
adc
mov
adc
rcrl
sbb
adcl
sbb
cs
fisttpl
adc
sbb
sbb
mov
aam
adc
addb
int3
movsb
rcrl
sbb
pop
push
adc
sbb
sbb
cs
adc
js
mov
adc
test
push
jo
movsl
paddq
sbb
mov
aam
adc
jl
scas
cli
xchg
int
aam
adc
mov
mov
dec
push
and
rcrl
sbb
xchg
je
rcrl
sbb
push
lock
sbb
sbb
push
adcl
sbb
sbb
cmp
addb
inc
in
sub
and
mov
mov
outsb
mov
sbb
push
and
mov
push
mov
rcrl
sbb
inc
xor
outsl
xchg
aam
adc
fdivrs
mov
aam
adc
mov
xchg
sbb
push
test
aam
adc
mov
jle
jle
sbb
sbb
sbb
cld
jno
xor
rcrl
sbb
inc
mov
aam
adc
adc
sbb
sbb
mov
outsl
ret
adc
mov
dec
cmpsl
popf
xchg
add
call
xchg
ljmp
or
call
hlt
mov
loopne
push
pop
lock
ja
rcrl
sbb
ss
sbb
push
into
push
aam
adc
mov
xchg
or
sbb
sbb
cmp
add
sbb
sbb
push
jno
aam
adc
movsb
pop
out
sub
rcrl
sbb
push
cmp
jnp
int
rcrl
sbb
es
xor
sbb
sbb
add
fwait
pop
addr16
sbb
sbb
inc
push
sbb
push
mov
aam
adc
loopne
ret
inc
mov
test
sbb
push
pop
mov
aam
adc
movsb
inc
notb
popf
push
out
sti
rcrl
sbb
xchg
not
sbb
sbb
mov
push
aam
adc
mov
jg
aam
adc
ret
sar
into
stos
xor
sbb
sbb
outsb
test
aam
adc
test
xchg
dec
mov
sbb
sbb
shll
sbb
sbb
out
inc
rcl
sbb
sbb
mov
or
mov
add
cld
dec
push
and
sbb
sbb
arpl
add
ja
test
xor
sbb
sbb
adc
aam
adc
inc
dec
or
rcrl
sbb
mov
aam
adc
cld
out
adc
aam
adc
pushf
cmp
ljmp
adc
and
loope
dec
mov
pop
aam
adc
mov
push
insb
xor
sbb
sbb
add
shll
cli
rcrl
sbb
ss
rcrl
sbb
pop
push
rcrl
sbb
mov
aam
adc
mov
xlat
or
sbb
sbb
jbe
cli
rcrl
sbb
out
and
sbb
sbb
scas
add
aam
adc
addb
or
sbb
sbb
adc
dec
push
pop
add
xchg
jno
cltd
mov
mov
aam
adc
push
mov
notb
mov
aam
adc
xchg
sbb
dec
mov
sbb
sbb
testb
cs
std
loop
in
aam
adc
ret
mov
push
mov
sbb
mov
call
sbb
sbb
fldcw
aam
adc
cli
iret
or
aam
adc
addb
xor
sbb
sbb
jle
stc
rcrl
sbb
push
mov
aam
adc
pushf
out
pop
rcrl
sbb
sbb
negl
inc
pop
aam
adc
mov
add
je
aam
adc
mov
mulb
pop
or
cwtl
add
add
out
add
test
add
mov
sbb
cs
sbb
inc
xlat
mov
lcall
push
aam
adc
cwtl
xlat
cmc
aas
stc
sahf
aaa
add
mov
ret
push
mov
aam
adc
mov
add
cld
push
and
sbb
sbb
je
jp
dec
cli
rcrl
sbb
push
nop
orb
or
sbb
sbb
sbb
aam
adc
in
mov
inc
adc
adc
enter
xchg
push
push
sbb
movsb
sarl
sahf
je
rcrl
sbb
sbb
rcrl
sbb
ss
sub
sbb
sbb
inc
mov
sub
mov
rcrl
sbb
push
cmpsb
adc
sbb
sbb
lcall
aam
adc
movsb
push
push
mov
mulb
rcrl
sbb
adc
add
sbb
sbb
add
xchg
adc
adc
mov
sub
rcrl
sbb
mov
sbb
sbb
xchg
jge
aam
adc
in
push
iret
push
lds
sbb
sbb
dec
clc
shlb
adc
sbb
sbb
push
dec
rcrl
sbb
rclb
adc
fcoms
xchg
and
sbb
sbb
mov
sbb
sbb
sbb
xchg
movsl
jnp
cs
sbb
jle
jecxz
sbb
sbb
repnz
add
lods
out
lock
or
lcall
and
sbb
sbb
xchg
clc
rcrl
sbb
jbe
adc
sbb
sbb
mov
add
test
add
aam
adc
xchg
aas
mov
aam
adc
into
mov
push
xor
adc
int3
fdivrl
not
sbb
sbb
sub
stc
jle
xchg
aam
adc
pop
idivl
jle
sub
mov
lret
stos
mov
push
and
sbb
sbb
jle
add
sbb
sbb
mov
sbb
mov
rcl
sbb
sbb
fisubrs
or
lcall
pop
aam
adc
adc
cmpsb
adc
sbb
sbb
movsb
xor
rcrl
sbb
push
inc
jns
sbb
xor
or
aam
adc
test
mov
push
aam
adc
mov
rolb
mov
or
sbb
sbb
inc
xor
rcrl
sbb
push
rcrl
sbb
gs
xor
lods
add
sbb
sbb
inc
or
sbb
into
mov
sbb
inc
add
aam
adc
mov
mov
add
sbb
sbb
inc
clc
rcrl
sbb
mov
sbb
sbb
sbb
or
cs
adc
and
popf
sbb
lds
aam
adc
pushf
sahf
hlt
aas
xor
mov
mov
out
adc
sbb
sbb
out
add
test
add
push
jns
rcrl
sbb
xchg
push
rcrl
sbb
mov
push
test
sbb
sub
rcrl
sbb
data16
adc
sbb
fistpll
aam
adc
mov
mov
mov
ret
adc
test
add
dec
out
aam
adc
sbb
fistps
aam
adc
mov
repz
aam
adc
mov
mov
aam
adc
lcall
or
mov
push
dec
adc
addb
int3
xor
sbb
imul
sbb
mov
push
cmpsl
dec
add
sbb
sbb
push
cld
xor
sbb
sbb
sbbl
sbb
sbb
mov
adc
ljmp
adc
sbb
sbb
mov
rcrl
sbb
dec
das
mov
sbb
sbb
fstps
not
sbb
sbb
ss
aam
adc
mov
xchg
jbe
aam
adc
dec
dec
icebp
jl
inc
arpl
aam
adc
xchg
cmp
call
sbb
sbb
idiv
sub
sbb
sbb
xchg
aam
adc
xchg
gs
je
loop
aam
adc
pushf
dec
xor
rcrl
sbb
mov
or
scas
cmp
aam
adc
add
loopne
test
cmpsb
paddq
sbb
xor
aam
adc
scas
xchg
clc
rcrl
sbb
imulb
aam
adc
dec
inc
aaa
sbbb
sti
rcrl
sbb
ss
rcrl
sbb
jle
pop
aam
adc
push
jp
lahf
lea
jb
aam
adc
sahf
mov
mov
sbb
ss
sbb
sbb
sbb
test
sbb
cmpsb
sbb
aam
adc
xchg
cmp
inc
mov
sbb
sbb
sbb
cltd
dec
movsb
sub
add
aam
adc
xchg
xchg
scas
cmc
jp
jle
aam
adc
push
shll
cs
scas
or
mov
aam
adc
mov
jae
scas
xor
aam
adc
mov
addb
sbb
sbb
dec
nop
sbb
sbb
dec
stos
adc
sbb
sbb
or
mov
adc
mov
addr16
or
adc
test
add
aam
adc
nop
movsb
les
pop
movb
sbb
sbb
xchg
adc
sbb
sbb
idivb
sbb
jbe
mov
sbb
sbb
aaa
mov
jbe
mov
pop
repnz
add
mov
cmpl
adc
xchg
idivl
and
sbb
sbb
adc
rcrl
sbb
data16
rcrl
sbb
sub
aam
adc
mov
cmp
inc
into
push
stc
rcrl
sbb
or
aam
adc
mov
add
cmp
xchg
rcl
sbb
sbb
fs
sbb
sbb
shrb
adc
pushf
leave
fs
ficoms
aam
adc
mov
or
sbb
sbb
dec
je
ss
and
sbb
sbb
scas
stc
jl
cmpsb
jne
aam
adc
xchg
add
int3
or
sbb
sbb
test
aam
adc
mov
add
cld
ds
xor
sbb
sbb
hlt
cltd
push
test
adc
sbb
out
mov
sbb
nop
jle
sbb
sbb
add
sub
das
add
sbb
sbb
mov
sbb
adc
or
sbb
xor
add
test
add
data16
aam
adc
mov
jp
int
add
sbb
dec
push
and
sbb
sbb
test
pop
add
sbb
sbb
out
and
sbb
sbb
cltd
sub
sbb
sbb
or
test
add
ret
xor
sbb
sbb
or
addb
rcl
sbb
sbb
ss
aam
adc
mov
push
and
sbb
sbb
jmp
aam
adc
mov
outsb
dec
adc
sbb
sbb
inc
adc
sbb
sbb
dec
scas
or
sbb
sbb
mov
inc
pcmpgtd
rcrl
sbb
notb
aam
adc
cwtl
add
add
sbb
sbb
cmpsb
mov
aam
adc
jl
dec
and
jge
rcrl
sbb
mov
sbb
sbb
jg
push
out
dec
sbb
sbb
sbb
inc
and
sbb
sbb
mov
lret
add
sbb
sbb
or
clc
sbb
aad
outsb
push
cli
rcrl
sbb
in
adc
jno
insl
adc
adc
xor
cld
pop
lcall
sbb
sub
mov
repz
sbb
sbb
test
sbb
adc
aam
adc
nop
jnp
pop
in
mov
add
sbb
sbb
outsb
and
rcrl
sbb
cwtl
in
ret
push
aam
adc
ret
mov
sbb
sbb
cmpsb
call
adc
addb
int3
push
mov
aam
adc
xchg
add
iret
paddq
sbb
dec
enter
adc
aam
int
into
xchg
aam
adc
fisubrl
std
stc
pop
idivb
sbb
xchg
sbb
popf
mov
inc
sbb
add
adc
cwtl
cltd
xor
push
test
aam
adc
sahf
xchg
xchg
out
adc
rcrl
sbb
out
jg
aam
adc
cmpsb
sub
jmp
aam
adc
je
sbbl
push
dec
adc
sbb
sbb
inc
ds
fnsave
or
sbb
sbb
test
sbb
mov
sbb
jbe
pop
aam
adc
movsb
and
mov
dec
inc
not
sbb
sbb
in
lods
inc
fs
adc
adc
loop
shlb
dec
sbb
aam
adc
in
sbb
adc
stc
xor
sbb
sbb
mov
push
aam
adc
mov
add
add
pop
not
sbb
sbb
mov
and
sbb
sbb
add
aam
adc
inc
scas
xor
aam
adc
addb
cld
rcrl
sbb
xor
aam
adc
addb
int3
push
xchg
rcrl
sbb
xor
mov
push
stc
jp
andb
aam
adc
xchg
or
jmp
cmpsb
test
sbb
out
add
xchg
push
add
aam
adc
lock
mov
sbb
sbb
ds
or
mov
pop
sub
sbb
sbb
idiv
sub
sbb
sbb
out
sbb
sbb
sbb
arpl
mov
sbb
scas
addb
xchg
sahf
sub
scas
cltd
and
fmulp
ds
rcll
test
sbb
sbb
syscall
aam
adc
test
add
pop
insl
add
sbb
sbb
mov
sbb
jb
aam
adc
shlb
es
sbb
sbb
dec
test
sbb
sbb
dec
aad
rcrl
sbb
into
jecxz
aam
adc
fidivrs
sub
rcrl
sbb
push
lds
aam
adc
mov
adc
rcrl
sbb
lock
xor
and
sbb
sbb
push
stos
rcl
adc
adc
mov
lods
testb
mov
inc
in
cld
mov
not
sbb
sbb
xorb
out
adc
sbb
sbb
ss
cli
rcrl
sbb
ds
sub
mov
xor
pushf
jle
adc
sbb
sbb
dec
mov
sbb
sbb
sbb
mov
sbb
mov
stos
orb
sbb
xchg
add
cmp
cmc
push
dec
clc
rcrl
sbb
mov
sub
sbb
sbb
pusha
xchg
mov
aam
adc
hlt
adcl
aam
adc
mov
mov
xor
sbb
sbb
xchg
adc
xchg
pop
pusha
out
cs
sbb
fwait
or
sbb
sbb
xorb
aam
adc
xchg
inc
cmp
mov
aam
adc
add
mov
js
sbb
sbb
das
jbe
int
cmp
sbb
jle
and
sbb
sbb
mov
jge
into
mov
sbb
out
imul
aam
adc
cmpsb
sbb
jae
xchg
push
adc
sbb
sbb
sahf
lret
sahf
outsl
adc
sbb
sbb
or
test
add
push
adc
rcrl
sbb
imulb
aam
adc
shl
sub
into
or
aam
adc
addb
and
sbb
sbb
sbbl
sbb
sbb
push
mov
aam
adc
mov
ret
rcrl
sbb
xor
jmp
sbb
sbb
out
or
sbb
sbb
scas
incl
aam
adc
mov
inc
sti
data16
aam
adc
xchg
sub
test
xchg
rcrl
sbb
pop
and
sbb
sbb
sbb
rcrl
sbb
push
sub
rcrl
sbb
es
aam
adc
mov
leave
adc
sbb
sbb
enter
out
inc
rcrl
sbb
popa
jns
mov
sbb
aam
adc
movsb
outsb
outsb
fisubs
sub
sbb
sbb
divps
incl
cmp
rcrl
sbb
aam
mov
sbb
sbb
jecxz
mov
aam
adc
addb
sub
sbb
sbb
push
jbe
aam
adc
sahf
push
movsl
dec
repz
add
rcrl
sbb
inc
inc
adc
sbb
sbb
mov
cli
rcrl
sbb
lods
add
sbb
sbb
add
aam
adc
xchg
sub
mov
testb
aam
adc
mov
mov
add
sbb
sbb
es
rcrl
sbb
not
sbb
sbb
inc
es
rol
int3
fistps
sbb
sbb
fistpll
and
and
lahf
dec
mov
rcrl
sbb
jle
divps
sbb
mov
mov
mov
fiadds
out
inc
daa
aam
adc
les
jns
rcrl
sbb
es
rcrl
sbb
xchg
sbb
sbb
sbb
addr16
cmp
adc
mov
cmp
sbb
sbb
es
sbb
sbb
mov
in
sbb
sbb
iret
mov
rcrl
sbb
outsb
stos
sbb
sbb
sbb
es
sbb
clc
call
sbb
sbb
lds
push
cwtl
and
sbb
sbb
test
xor
add
sbb
sbb
push
jmp
sbb
xchg
cli
rcrl
sbb
outsb
push
add
sbb
sbb
jbe
mov
xchg
loope
inc
imul
sbb
jae
fildl
bound
mov
sbb
aam
adc
dec
les
not
sbb
sbb
mov
xor
mov
sbb
aam
adc
cwtl
push
roll
sbb
sbb
test
test
mov
jo
xchg
rcl
sbb
sbb
push
sbb
aam
adc
test
add
or
les
aam
adc
addb
and
sbb
sbb
dec
or
rolb
das
ljmp
sbb
fwait
jns
xor
arpl
aam
adc
mov
pusha
leave
shl
imul
in
jle
jl
fwait
sub
sbb
sbb
outsb
dec
adc
pop
inc
xchg
adc
daa
rcl
sbb
sbb
push
mov
sbb
mov
sbb
xchg
movsb
and
sbb
sbb
cmpsb
cld
rcrl
sbb
sahf
aaa
or
sbb
sbb
xchg
jo
aam
adc
cwtl
ja
test
rcrl
sbb
scas
cli
fucomi
cmp
aam
adc
mov
cmp
outsl
sahf
pushf
sub
sbb
sbb
mov
adc
mov
add
pop
push
or
aam
adc
rolb
leave
push
out
rcrl
sbb
push
das
add
sbb
sbb
movsl
push
aam
adc
mov
jmp
adc
ret
mov
jbe
sub
sbb
sbb
stos
insb
cmpsb
push
jle
clc
rcrl
sbb
ret
sub
sbb
sbb
and
rcrl
sbb
cmpsb
mov
aam
adc
sbb
or
fdivrp
adc
adc
test
aad
jbe
out
aam
adc
sahf
fidivrs
stos
divb
rcrl
sbb
or
xchg
and
sbb
sbb
push
and
rcrl
sbb
ds
inc
lods
mov
add
sbb
sbb
divb
aam
adc
mov
jle
sub
sbb
sbb
insl
lret
xchg
ss
or
sbb
sbb
xchg
iret
jns
or
sbb
sbb
sub
sbb
sbb
pop
jns
sbb
sbb
negb
and
sbb
sbb
push
fists
aam
adc
mov
sbb
sbb
mov
sbb
leave
out
mov
sbb
sbb
push
test
sub
ja
aam
adc
enter
dec
push
mov
sbb
adc
sub
aam
adc
mov
cmpsb
fs
ficoms
pop
aam
adc
mov
xorl
inc
add
sbb
sbb
xchg
call
sbb
sbb
push
or
rcrl
sbb
mov
rcrl
sbb
cmp
aam
adc
negb
cmp
mov
add
rcrl
sbb
out
xor
sbb
sbb
mov
aam
adc
sub
pop
out
push
mov
aam
adc
nop
add
add
xchg
rorb
aam
adc
mov
mov
cli
rcrl
sbb
pop
movl
in
jb
adc
or
sbb
sbb
fidivs
sbb
fisubs
ret
aad
sbb
sbb
cs
sub
mov
cmp
push
push
insb
adc
sbb
sbb
dec
pop
add
xchg
popa
mov
clc
leave
xchg
xor
ss
sbb
sbb
out
aam
adc
mov
push
mov
mov
outsb
out
aam
adc
mov
xchg
sar
sbb
sbb
mov
and
sbb
sbb
mov
and
sbb
sbb
xchg
mov
sbb
cmpsb
push
clc
rcrl
sbb
mov
adc
xchg
repnz
sbb
sbb
xchg
ljmp
dec
jb
ds
adc
adc
int3
scas
sub
movsl
ds
call
sbb
sbb
jle
aam
adc
lock
mov
jp
aam
adc
mov
xchg
daa
adc
sbb
sbb
dec
sbb
sbb
sbb
xchg
or
aam
ss
lea
adc
nop
fcmovb
xlat
jg
push
sbb
sbb
sbb
lods
mov
rcrl
sbb
jmp
jg
sahf
popa
stc
rcrl
sbb
mov
sbb
push
filds
fmulp
sbb
sbb
sbb
dec
test
aam
adc
mov
xchg
adc
clc
ljmp
aam
adc
cwtl
add
add
ss
pop
aam
adc
insb
dec
ds
adc
test
sub
ss
rcrl
sbb
outsb
push
rcrl
sbb
push
push
rcrl
sbb
roll
rcrl
sbb
xchg
stc
rcrl
sbb
inc
cwtl
sub
sbb
sbb
jl
popa
stos
xchg
movsb
push
aam
adc
test
xorb
jle
sbb
sbb
sbb
movsl
ret
mov
aam
adc
mov
mov
aam
adc
mov
test
aam
adc
xchg
jno
sahf
add
adc
push
dec
repnz
jbe
std
rcrl
sbb
mov
adc
lods
test
or
sbb
sbb
inc
cltd
mov
mov
mov
clc
rcrl
sbb
aad
rcrl
sbb
ss
aam
adc
mov
xchg
adc
mov
add
std
pop
jns
aam
adc
cld
out
outsl
inc
dec
push
mov
sbb
data16
adc
sbb
sbb
scas
int3
sub
sbb
sbb
dec
sub
ret
dec
mov
sbb
sbb
into
bound
aam
adc
mov
jnp
jb
aaa
adc
jb
ror
stc
cmc
rcrl
sbb
dec
stos
and
sbb
sbb
push
add
test
add
test
rcrl
sbb
dec
add
aam
adc
pop
mov
addr16
rcrl
sbb
test
test
sbb
push
dec
and
push
insb
popa
out
push
clc
rcrl
sbb
notb
sti
rcrl
sbb
data16
sbb
sbb
sahf
or
sbb
leave
cmc
rcrl
sbb
jle
stc
rcrl
sbb
dec
push
or
les
ret
or
sbb
sbb
incb
sbb
ds
stc
rcrl
sbb
adc
adc
insb
ja
sbb
ss
add
clc
leave
xor
ss
sbb
sbb
lcall
mov
js
push
xor
popa
and
sbb
sbb
or
aam
adc
mov
sbb
sbb
sbb
lds
sbb
sbb
jbe
add
sbb
sbb
pushf
add
sbb
sbb
push
push
rcrl
sbb
data16
aam
adc
mov
add
sbb
sbb
mov
aam
adc
xchg
decl
lret
mov
rcrl
sbb
jbe
sub
sbb
sbb
mov
addr16
adc
addb
int3
out
lret
sbb
sbb
stos
add
add
xchg
aaa
mov
sbb
sbb
add
aam
xchg
sbb
mov
or
scas
or
add
sbb
sbb
mov
adc
adc
int3
mov
and
sbb
sbb
testl
rcrl
sbb
inc
xchg
cli
rcrl
sbb
fcomps
lock
hlt
cmp
fdivr
rcrl
sbb
adc
aam
adc
addb
add
sbb
sbb
rolb
aam
adc
cmpsb
clc
stos
cmp
pop
add
sbb
sbb
adc
aam
adc
addb
sub
sbb
sbb
mov
adc
mov
xchg
aam
adc
mov
push
jns
aam
adc
sahf
pushf
cli
push
sbb
xchg
rcrl
sbb
or
imull
push
sub
sbb
sbb
clc
xchg
inc
xor
lock
sbb
sbb
stos
sbb
sbb
sbb
pushf
sahf
xchg
mov
adc
addb
rcl
sbb
sbb
inc
adc
sbb
sbb
es
rcrl
sbb
das
rcrb
mov
sbb
ret
pop
rol
scas
scas
rcl
sbb
sbb
outsb
std
cld
rcrl
sbb
push
loopne
rcrl
sbb
ss
aam
adc
mov
cs
sbb
shll
xor
sbb
aam
adc
mov
xchg
or
rcrl
sbb
inc
clc
rcrl
sbb
es
cli
rcrl
sbb
xorl
mov
sbb
fdivrl
rcl
sbb
sbb
into
js
rcrl
sbb
hlt
nopl
sbb
sbb
mov
sbb
pop
out
aam
adc
mov
xchg
add
push
aas
std
rcrl
sbb
in
lods
push
aam
adc
lcall
or
sbb
sbb
mov
sbb
mov
adc
fmuls
rcl
sbb
sbb
mov
notl
adc
aam
stos
call
rcrl
sbb
cs
and
int3
mov
mov
cmc
mov
aam
adc
nop
arpl
add
data16
sbb
sbb
push
push
insb
jne
incl
shlb
and
sbb
ds
sbb
xchg
jne
outsb
fs
sbb
sbb
xchg
or
sbb
sbb
negl
aam
adc
test
jb
int3
pop
sahf
adc
stc
rolb
aam
adc
test
in
add
sbb
sbb
mov
or
sbb
sbb
mov
sbb
pop
movsb
mov
out
aam
aam
adc
lcall
and
sbb
sbb
cmpsb
sbb
sub
push
inc
into
dec
test
sbb
sbb
lods
cmp
aam
adc
mov
add
or
or
sbb
sbb
stos
xchg
xchg
adc
scas
test
add
scas
in
rcrl
sbb
cmp
sbb
sbb
out
sti
rcrl
sbb
xor
into
inc
adc
sbb
and
jg
repnz
mov
adc
mov
push
pop
lods
outsb
sub
rcrl
sbb
scas
sti
rcrl
sbb
mov
cmp
push
push
sbb
xchg
add
test
add
outsb
mov
sbb
sar
rcrl
sbb
push
xchg
not
sbb
sbb
cs
aam
adc
mov
rolb
into
or
sbb
sbb
push
add
aam
adc
shlb
ret
not
sbb
sbb
sub
aam
adc
pop
addb
aam
adc
pushf
aam
sub
outsb
mov
rcrl
sbb
pop
cmp
pop
outsb
mov
aam
adc
mov
ror
push
stos
add
mov
outsb
xor
xchg
adcl
lcall
and
sbb
sbb
push
mov
aam
adc
pop
xor
cmp
adc
mov
adc
sbb
push
jnp
aam
adc
pop
jns
mov
sbb
sbb
fwait
sub
sbb
sbb
xor
add
sbb
sbb
out
push
paddq
sbb
mov
pop
aam
adc
ret
inc
notb
sbb
rcl
adc
push
scas
insb
test
not
cli
rcrl
sbb
lods
mov
mov
and
repz
or
sbb
sbb
aad
aam
adc
mov
pop
jo
aam
adc
xchg
lock
shrb
adc
mov
jl
push
fmulp
sub
sbb
sbb
jle
repz
pushw
rcrl
sbb
cmpsb
not
sbb
sbb
scas
push
scas
mov
sub
sbb
sbb
data16
sbb
sbb
xchg
aad
aam
adc
mov
mov
test
sbb
sbb
orb
out
mov
sbb
repnz
aam
adc
pusha
xchg
jb
mov
mov
sbb
fidivrs
sbb
sbb
outsb
pusha
lods
jbe,pn
push
aam
adc
mov
cld
incl
daa
push
aam
adc
pushf
rolb
dec
ficomps
sbb
cmp
daa
aam
adc
inc
outsl
mov
add
sbb
sbb
dec
in
jbe
paddq
sbb
cmpsb
pushf
add
sbb
sbb
cmpsb
xlat
lret
inc
sahf
jle
aam
adc
mov
movsb
movb
xchg
pop
aam
adc
scas
jno
cltd
jne
es
aam
adc
ret
sbb
sub
sbb
sbb
inc
mov
rcrl
sbb
scas
adc
aam
adc
fcoml
into
sbb
sbb
sbb
xchg
ret
sbb
sbb
ss
adc
shrb
xchg
or
sbb
sbb
push
push
sbb
cmpsb
shll
aam
adc
loop
lods
xabort
pop
add
sbb
sbb
push
ds
rcrl
sbb
cs
rcrl
sbb
dec
or
sbb
outsb
lret
sbb
sbb
lock
sbb
sbb
out
sub
sbb
sbb
fisttpl
push
int
rcrl
sbb
adc
sub
lea
rcrl
sbb
mov
jecxz
aam
adc
cwtl
add
add
scas
mov
aam
adc
ljmp
sbb
sbb
sbb
cmpsb
rcrb
aam
adc
enter
addr16
es
aam
adc
fs
jp
fsubrp
push
aam
adc
mov
std
xor
sbb
sbb
push
movsb
push
xchg
adc
les
jp
mov
cld
rcrl
sbb
mov
clc
rcrl
sbb
lods
or
sbb
sbb
mov
adc
addb
adc
sbb
sbb
mov
sub
sbb
sbb
outsb
test
sbb
fsubl
dec
rcl
adc
dec
addl
sti
sti
rcrl
sbb
push
lods
paddq
sbb
push
xor
sbb
cmp
aam
adc
xlat
ret
into
xchg
mov
add
outsb
test
sbb
jbe
or
sbb
sbb
xchg
mov
dec
test
out
add
test
add
mov
adc
mov
mov
adc
ds
arpl
cwtl
add
add
cmpsb
or
aam
adc
mov
into
xor
sbb
sbb
adc
jne
mov
aam
adc
addb
int3
push
adc
aam
adc
lods
repz
mov
aam
adc
xchg
mov
lret
lock
popa
rcl
sbb
sbb
adc
lock
inc
mov
adc
aam
in
push
cs
not
sbb
sbb
outsb
xor
sbb
sbb
cs
add
sbb
sbb
cmp
aam
adc
out
insl
mov
testb
rcrl
sbb
mov
dec
scas
push
test
sbb
dec
push
bound
push
aam
adc
cwtl
add
add
sahf
dec
sbb
sbb
sbb
insb
enter
jmp
aam
adc
loop
aaa
sub
or
aam
adc
sub
loop
aam
adc
mov
test
sub
lea
aam
adc
xchg
fs
aam
adc
mov
rolb
sahf
inc
cld
rcrl
sbb
xchg
sbb
negb
rcrl
sbb
xor
repz
inc
testb
sbb
sbb
faddp
rcrl
sbb
xchg
rcll
out
fimuls
aam
adc
add
jb
aam
adc
enter
xor
adc
stos
shlb
into
insb
adc
nop
and
cli
rcrl
sbb
mov
rcrl
sbb
mov
lock
mov
jno
aam
adc
je
pop
push
scas
aas
sub
lods
dec
test
testb
sbb
sbb
sahf
pop
sub
mov
inc
add
jbe
cld
rcrl
sbb
lret
sbb
sbb
rol
sbb
sbb
stc
adc
sbb
sbb
sahf
xchg
ret
rcrl
sbb
incl
aam
adc
test
xchg
jle
or
sbb
sbb
shlb
sarb
sbb
fstpl
aam
adc
stos
dec
jge
cmp
adc
repnz
dec
mov
aam
adc
push
push
cli
xchg
lahf
paddq
sbb
push
xchg
mov
sbb
sbb
outsl
rcl
sbb
sbb
jle
daa
aam
adc
mov
outsb
addb
sbb
sbb
push
les
aam
adc
loopne
xor
roll
push
cs
adc
mov
inc
bound
or
rcrl
sbb
pop
mov
aam
adc
xchg
add
in
add
mov
cld
cld
mov
std
rcrl
sbb
outsb
jmp
aam
adc
shr
testl
sbb
sbb
ds
rcl
sbb
sbb
mov
aam
adc
nop
jecxz
cmpsb
shlb
adc
mov
mov
and
sbb
sbb
xlat
add
jle
add
sbb
sbb
add
rcrl
sbb
enter
stos
or
sbb
sbb
push
inc
adc
sbb
sbb
outsb
mov
test
add
rcrl
sbb
push
mov
sbb
xchg
push
aam
adc
mov
out
fs
sbb
sbb
dec
das
cmp
jle
sbb
sbb
sbb
mov
rcl
adc
addb
int3
push
fnstenv
sbb
sbb
jp
aam
adc
lcall
and
sbb
sbb
xor
loope
ret
sbb
sbb
pop
mov
je
std
ljmp
adc
mov
add
add
adc
sbb
sbb
or
sbb
cmp
sbb
into
das
xor
sbb
sbb
xchg
xor
add
sbb
sbb
cmpsb
repz
adc
shlb
mov
xchg
rcrb
add
rcrl
sbb
std
test
sbb
sbb
sbbl
sbb
sbb
push
dec
push
aam
adc
shlb
rcll
rcrl
sbb
shll
sahf
rorb
aam
adc
ret
push
adc
xor
rcrl
sbb
out
pop
adc
sbb
sbb
inc
and
sbb
sbb
out
pop
aam
adc
mov
std
or
sahf
jmp
or
aam
adc
lcall
sbb
sbb
sbb
push
dec
mov
pusha
stc
rcrl
sbb
fincstp
rcrl
sbb
jbe
or
sbb
sbb
xchg
pop
add
push
stc
rcrl
sbb
insb
or
sbb
sbb
and
rcrl
sbb
mov
adc
mov
jge
add
sbb
sbb
clc
adc
sbb
sbb
xchg
mov
push
sub
sbb
mov
cs
aam
adc
inc
mov
je
decb
aam
adc
nop
add
add
push
mov
test
jbe
clc
rcrl
sbb
ss
aam
adc
test
sub
aam
adc
or
cmp
aam
adc
nop
fldl
loopne
push
pop
aam
adc
xchg
mov
lret
sbb
sbb
ljmp
fst
stos
ficompl
mov
movb
jp
not
or
test
add
shlb
aam
adc
dec
les
test
sbb
sbb
mov
or
sbb
sbb
cltd
lods
sti
sbb
pop
aam
adc
mov
push
ret
sbb
sbb
daa
jp
sbb
sbb
push
add
aam
adc
mov
addb
mov
sbb
pop
xor
rcrl
and
and
sbb
aam
adc
scas
add
subb
or
sbb
scas
inc
adc
sbb
sbb
sbb
sbb
sbb
xchg
or
sbb
sbb
sbb
jmp
sbb
jbe
sbb
ss
or
sbb
sbb
push
jmp
sbb
sahf
pop
clc
rcrl
sbb
cmpsb
mov
rcrl
sbb
xor
xlat
fiadds
rcrl
sbb
dec
pop
aam
adc
xchg
push
sbb
jnp
aam
adc
pushf
outsl
ficomps
scas
and
aam
adc
mov
jbe
ret
rcrl
sbb
xlat
inc
xor
sub
sbb
sbb
mov
push
paddq
sbb
outsb
imul
sbb
sbb
jle
in
sbb
sbb
es
sbb
sbb
mov
sbb
data16
aam
adc
mov
icebp
mov
rcrl
sbb
xchg
pop
push
aam
aad
rcrl
sbb
dec
xor
xchg
testb
mov
outsb
add
rcrl
sbb
push
adcb
sbb
sbb
push
cmp
sbb
jl
js
xchg
xor
sbb
sbb
je
add
pop
and
rcrl
sbb
cmpl
loope
aam
adc
mov
sub
sbb
sbb
fiaddl
aam
adc
lock
push
push
push
clc
rcrl
sbb
push
and
out
test
andl
sbb
sbb
arpl
cmpsb
je
aam
adc
push
jl
sub
xchg
xor
aam
adc
nop
inc
out
xor
mulb
aam
adc
sbb
pusha
add
sbb
sbb
xchg
mov
sbb
xor
mov
mov
push
aam
adc
mov
rol
rcrl
sbb
pop
jp
rcrl
sbb
add
test
add
push
and
aam
adc
mov
dec
inc
adc
sbb
sbb
out
or
rcrl
sbb
cs
std
rcrl
sbb
lcall
aam
adc
fsubr
xchg
push
mov
rcrl
sbb
pop
cmc
test
mov
rcrl
sbb
repnz
sbb
sbb
ret
sbb
sbb
xchg
and
sbb
sbb
push
push
adc
sbb
sbb
xchg
aam
adc
test
loope
jbe
or
mov
rolb
jbe
add
sbb
sbb
movb
aam
adc
mov
add
std
push
addb
sbb
sbb
pop
xchg
or
sbb
sbb
es
sbb
sbb
sbb
ljmp
loopne
or
into
and
sbb
sbb
xchg
aam
adc
mov
cmp
aam
adc
mov
add
rcrl
sbb
push
hlt
or
mov
mov
cli
rcrl
sbb
scas
inc
cld
rcrl
sbb
xchg
mov
aam
adc
mov
jmp
cmp
aam
adc
lods
dec
pop
into
lea
rcl
sbb
sbb
xchg
xchg
push
int3
add
mov
aas
repz
cld
not
sbb
sbb
mov
sbb
test
pop
clc
rcrl
sbb
cli
adc
sbb
sbb
xchg
dec
clc
rcrl
sbb
ds
adc
dec
push
in
dec
ficomps
rcrl
sbb
es
rcrl
sbb
xchg
mov
mov
or
sbb
sbb
xchg
adc
into
cwtl
push
push
xchg
dec
ret
adc
movsb
insb
mov
jnp
sbb
aam
adc
mov
rorb
sbb
sbb
sbb
jl
out
aam
adc
lock
sub
xchg
xchg
jle
sbb
sbb
int
insb
push
and
aam
adc
adc
adc
aam
adc
addb
and
sbb
sbb
mov
adc
xchg
fimull
aam
adc
xchg
popa
inc
inc
dec
jbe
clc
rcrl
sbb
mov
rcrl
sbb
mull
aam
adc
in
jge
pushf
push
push
sub
sbb
sbb
cmpsb
xchg
mov
sbb
sbb
jg
sbb
adc
movsb
gs
popf
and
rcrl
sbb
mov
push
rcrl
sbb
sahf
push
fcmovnbe
insl
clc
rcrl
sbb
jae
rcrl
sbb
mov
sbb
into
scas
cli
rcrl
sbb
std
add
dec
mov
push
push
icebp
sub
sbb
sbb
data16
push
leave
push
aam
adc
cwtl
add
add
cs
and
sbb
sbb
incb
aam
adc
mov
add
add
adc
xchg
mov
aam
adc
mov
cmc
rcrl
sbb
outsb
int3
add
xchg
add
inc
pop
aam
adc
test
adc
aam
adc
mov
fsubrl
aam
adc
pushf
xchg
cmp
sbb
sbb
ss
aam
adc
lcall
add
sbb
sbb
push
pop
sbb
sbb
sbb
adc
icebp
ficomps
sbb
sbb
sbb
inc
xchg
sbb
sbb
sbb
xchg
sbb
out
not
sbb
sbb
push
addr16
adc
mov
xor
aam
adc
lcall
not
sbb
sbb
inc
in
shl
and
aam
adc
xchg
or
adc
aam
adc
ret
add
mov
aam
adc
shr
mov
inc
rol
rcrl
sbb
push
cmp
aam
adc
mov
popa
repnz
sub
aam
adc
push
test
nop
ja
int
aam
adc
hlt
in
and
aam
adc
test
add
push
xchg
or
sbb
sbb
jle
xchg
xchg
add
xchg
sub
or
xchg
and
sbb
sbb
adc
faddp
mov
sbb
sub
rclb
es
sbb
sbb
pop
push
mov
add
sbb
sbb
ss
sub
sbb
sbb
cmp
rcrl
sbb
push
rorb
aam
adc
mov
jle
push
xor
sbb
insb
divb
into
xchg
aam
adc
ret
inc
xor
fwait
rcl
sbb
sbb
inc
xlat
xchg
push
sub
sbb
sbb
inc
icebp
and
sbb
sbb
cmpsb
add
aam
adc
test
ss
int3
push
lods
adc
sbb
sbb
xor
aam
adc
cld
pop
inc
xlat
fimuls
push
aam
adc
lret
inc
sub
aam
adc
addb
push
aam
adc
mov
filds
rcrl
sbb
jle
in
sbb
sbb
xchg
int
push
xchg
std
rcrl
sbb
cs
sbb
jle
adc
sbb
sbb
or
and
sbb
sbb
mov
int
xchg
sbb
sbb
sbb
push
adc
sbb
sbb
add
aam
adc
mov
jne
rcrl
sbb
cwtl
inc
mov
aam
adc
mov
sub
out
or
sbb
sbb
out
jmp
sbb
jae
aam
adc
lods
lods
add
scas
mov
aam
adc
mov
fdivrs
adc
nop
aad
add
jbe
add
sbb
sbb
push
subb
sbb
sbb
push
rcrl
sbb
sbb
mov
and
aam
adc
shl
jmp
aam
adc
rolb
scas
call
sbb
sbb
dec
jae
aam
adc
adc
and
sbb
sbb
ds
rcrl
sbb
mov
adc
neg
and
mov
sbb
sbb
sbb
arpl
adcb
daa
aam
adc
cmpsb
dec
mov
pop
aam
adc
nop
fldl
rcrl
sbb
decl
jns
sbb
sbb
sub
addr16
sbb
sbb
and
push
into
jae
aam
adc
xchg
pusha
add
cmp
sbb
sti
xor
idivl
sbb
sbb
push
xlat
sub
sbb
sbb
fdivrl
dec
push
loope
aam
adc
nop
add
fcmovnu
loop
aam
adc
mov
stc
and
cs
rcl
sbb
sbb
into
push
and
xchg
mov
adc
adc
mov
imulb
aam
adc
les
clc
sbb
adc
mov
add
sbb
sbb
xor
aam
adc
dec
jno
cmpsb
xchg
daa
clc
rcrl
sbb
mov
adc
ret
jnp
testb
sbb
sbb
mov
sbb
ss
aam
adc
nop
add
add
into
fildl
and
andb
outsb
xor
sbb
sbb
add
rcrl
sbb
ss
sub
sbb
sbb
dec
aam
rcrl
sbb
pop
cmp
or
sbb
sbb
push
sub
rcrl
sbb
jbe
rcrl
sbb
push
add
mov
inc
insl
clc
rcrl
sbb
fwait
outsb
sbb
push
inc
mov
push
and
and
rcrb
cmpsb
stc
push
aam
adc
mov
lahf
and
sbb
sbb
ss
or
sbb
sbb
ds
aam
adc
mov
cmp
ss
add
sbb
sbb
push
ss
aam
adc
mov
addb
push
adc
sbb
xchg
or
sbb
sbb
in
outsl
and
adc
mov
ja
aam
adc
mov
out
mov
rcrl
sbb
sbb
aam
adc
mov
push
inc
xor
sbb
sbb
dec
data16
jbe
ret
rcrl
sbb
and
aam
adc
cwtl
gs
cmc
xor
cld
ret
rcrl
sbb
rorl
insl
not
sbb
sbb
jbe
and
sbb
sbb
add
aam
adc
cld
lea
rcrl
sbb
int
aam
adc
mov
rolb
out
cli
rcrl
sbb
scas
xchg
aam
adc
push
ret
ret
cmc
sub
sbb
sbb
cmp
aam
adc
mov
aaa
std
rcrl
sbb
stos
sbb
sbb
sbb
jbe
sub
sbb
sbb
jle
rcl
sbb
sbb
loopne
sbb
lock
sbb
sbb
out
stc
rcrl
sbb
lahf
loopne
mov
push
aam
adc
mov
inc
add
into
test
rcrl
sbb
mov
rcrl
sbb
and
push
std
mov
xchg
and
hlt
inc
push
jge
rcrl
sbb
push
inc
sbb
mov
not
call
sbb
sbb
jno
insl
jne
arpl
sbb
sbb
push
jmp
repz
adc
sbb
sbb
jbe
adc
cwtl
lods
mov
rcrl
sbb
push
and
rcrl
sbb
ss
aam
adc
enter
orb
aam
adc
test
add
or
adc
cwtl
pop
inc
xchg
sbb
sbb
dec
loop
dec
jle
es
adc
in
mov
aam
adc
nop
add
add
mov
sbb
sbb
sbb
out
sbb
sbb
sbb
and
and
adc
addb
int3
push
pop
add
sbb
sbb
mov
sbb
sbb
rcrl
sbb
cld
test
add
jecxz
sbb
sbb
pop
xor
outsb
and
sbb
pop
add
sbb
sbb
mov
sbb
cmpsb
movsl
or
mov
jp
insl
xchg
pop
aam
adc
mov
and
not
sbb
sbb
mov
sbb
lods
std
rcrl
sbb
nop
or
sahf
into
sbb
sbb
sbb
xchg
sbb
loopne
test
aam
adc
pushf
mov
add
sbb
sbb
xlat
adc
sbb
sbb
out
push
aam
adc
and
out
aas
push
sub
aam
adc
xchg
call
stc
cli
rcrl
sbb
xchg
out
push
aam
adc
mov
fmulp
add
sbb
sbb
inc
and
sbb
sbb
ss
sbb
sbb
jnp
popf
pop
cmpsb
mov
rcrl
sbb
inc
repnz
ss
pop
aam
adc
xchg
xor
aam
adc
addb
int3
push
fdivrp
rcrl
sbb
mov
popf
sbb
sbb
sbb
not
jg
sbb
sbb
sbb
mov
mov
adc
repnz
addr16
sub
aam
adc
scas
pop
or
mov
not
sbb
sbb
out
pop
aam
adc
mov
fstpl
aam
adc
xchg
jb
test
inc
add
xchg
pop
inc
lret
mov
mov
xor
cmp
xor
sbb
sbb
test
aam
adc
or
mov
aam
adc
xchg
in
mov
mov
sbb
sbb
dec
daa
push
push
ds
sbb
sbb
jo
rcrl
sbb
xchg
inc
clc
rcrl
sbb
es
rcrl
sbb
aas
outsl
jo
pop
push
aam
adc
mov
pushl
popa
sub
mov
mov
adc
sbb
sbb
jl,pt
aam
adc
into
pop
ja
lods
jbe
add
sbb
sbb
cmpsb
out
rcrl
sbb
mov
not
sbb
sbb
ficoms
sbb
cmp
aam
adc
mov
aas
cld
rcrl
sbb
push
aaa
cmp
sbb
sbb
ds
rcl
sbb
sbb
test
rcrl
sbb
idiv
rcrl
sbb
mov
adc
push
mov
outsb
fldl
adc
test
add
ds
rcrl
sbb
pop
push
aam
adc
xchg
xchg
add
aam
adc
lret
fadd
scas
mov
sbb
pop
paddq
sbb
pop
sbb
sbb
pop
dec
push
scas
xchg
adc
push
xchg
pop
fs
in
add
sbb
sbb
mov
add
sbb
sbb
out
and
sbb
sbb
or
mov
rcrl
sbb
push
and
rcrl
sbb
push
imull
aam
adc
fdivl
aas
adc
sbb
sbb
dec
sub
sbb
sbb
lea
int3
mov
adc
jle
test
add
sbb
sbb
scas
out
pop
mov
in
sbb
sbb
pushf
inc
lea
cmp
sbb
in
out
jle
push
aam
adc
mov
jg
pop
add
rcrl
sbb
bound
mov
push
mov
aam
adc
inc
out
fcom
jbe
pop
aam
adc
insb
sbb
in
movb
rcrl
sbb
fdivs
pop
mov
sbb
sbb
xor
les
xchg
mov
pop
in
sbb
sbb
fldl
pop
leave
jbe
sub
sbb
sbb
mov
sbb
jbe
paddq
sbb
push
cltd
xchg
aam
adc
mov
jbe
and
cmpsb
adcl
aam
adc
xchg
xor
aam
adc
rclb
addr16
adc
mov
jl
rcrl
sbb
push
fsubl
sbb
sbb
pop
jmp
clc
rcrl
sbb
xchg
sbb
jbe
add
test
add
rcrl
sbb
mov
pop
aam
adc
inc
pop
fdivrs
outsb
vmfunc
sbb
sbb
xlat
rcl
sbb
sbb
inc
jp
sbb
sbb
push
add
aam
adc
mov
push
push
mov
sbb
sbb
movsl
leave
in
cs
sbb
sbb
push
rorb
aam
adc
mov
jl,pt
ss
pop
aam
adc
cli
dec
adc
imul
sbb
es
rcrl
sbb
mov
sbb
out
pop
push
aam
adc
stos
xchg
repz
xchg
dec
mov
sbb
aas
mov
loopne
mov
mov
adc
pusha
mov
xchg
xchg
jle
clc
rcrl
sbb
fstpl
add
dec
push
aam
adc
nop
jge
aaa
mov
sbb
sbb
pop
add
test
add
xchg
imul
mov
add
std
push
rcrl
aam
adc
mov
push
adc
sbb
sbb
in
aam
adc
fsubrl
in
inc
push
inc
add
sbb
sbb
xchg
sbb
or
adc
mov
jb
mulb
pop
aam
adc
clc
les
je
jle
or
sbb
sbb
xchg
sbb
lods
cltd
sbb
xor
sbb
sbb
xor
add
sbb
divl
sbb
sbb
lea
sbb
sbb
adc
aam
adc
mov
cltd
add
sbb
sbb
push
mov
adc
mov
shrb
rcrl
sbb
dec
fs
sbb
sbb
xchg
pop
aam
sbb
sbb
jle
clc
rcrl
sbb
xchg
cmpsb
sbb
or
sbb
sbb
jbe
cli
rcrl
sbb
es
or
mov
mov
adc
mov
pop
data16
add
sbb
sbb
push
rcrl
aam
adc
lcall
test
sbb
sbb
daa
rcl
adc
cwtl
hlt
outsb
sbb
test
shlb
jmp
aam
adc
in
add
push
aam
adc
nop
inc
sub
testb
mov
inc
sbb
mov
cld
jno
ds
adc
sbb
sbb
hlt
adc
adc
sbb
sbb
rcrb
jp
es
sbb
sbb
jmp
aam
adc
xchg
xchg
and
cli
mov
aam
adc
or
add
cmpsl
or
sbb
sbb
fiadds
and
sbb
sbb
je
lock
jae
aam
adc
jmp
sbb
sbb
push
pop
add
test
add
ss
aam
adc
mov
mov
into
mov
sbb
push
stos
sub
sbb
sbb
or
rcrl
sbb
inc
mov
adc
adc
ljmp
push
aam
adc
pushf
dec
sti
push
enter
aam
adc
aam
xor
aam
adc
es
ljmp
sbb
sbb
lds
sbb
sbb
sbb
push
rcl
adc
test
dec
inc
test
insb
sbb
sbb
sbb
mov
sbb
sahf
cli
rcrl
sbb
sahf
mov
mov
fcmovnb
rcrl
sbb
add
jmp
and
stos
adc
adc
fdivrl
mov
sahf
adc
out
dec
dec
inc
imulb
aam
adc
mov
cld
call
cs
sbb
sbb
push
jge
aam
adc
mov
scas
mov
sbb
adc
rcrl
sbb
into
adc
and
jmp
sbb
jbe
add
mov
std
jmp
pop
aam
adc
mov
add
aam
adc
nop
fldl
loopne
mov
xchg
add
sub
aam
adc
cwtl
enter
out
test
aam
adc
cwtl
push
scas
inc
mov
pop
aam
adc
nop
add
add
push
push
cs
adc
or
mov
push
clc
rcrl
sbb
mov
ret
rcrl
sbb
out
out
rcrl
sbb
orl
xchg
clc
mov
adc
adc
in
jp
add
sbb
sbb
mov
decl
sbb
sbb
xchg
mov
es
aam
adc
mov
or
ret
sbb
mov
xchg
rorb
inc
cli
rcrl
sbb
jno
mov
aam
adc
push
arpl
cmp
mov
or
sbb
sbb
pushw
sub
sbb
sbb
sbb
rcrl
sbb
jle
std
rcrl
sbb
pushf
data16
sbb
sbb
fdivs
add
sbb
sbb
es
das
aam
adc
fidivrs
push
sub
sbb
sbb
cmpsb
inc
xor
xchg
add
or
adc
mov
rolb
sbb
push
loop
aas
icebp
das
push
add
aam
adc
ljmp
add
sbb
sbb
scas
mov
sbb
xchg
lret
sbb
sbb
sbb
dec
adc
sbb
sbb
jl,pt
arpl
adc
rcrl
sbb
mov
sbb
sbb
jmp
rcrl
sbb
xchg
aam
adc
mov
add
cld
dec
insl
stc
rcrl
sbb
into
test
rcrl
sbb
sahf
cmp
aam
adc
mov
in
adc
dec
not
sbb
sbb
call
paddq
sbb
movsw
mov
sub
push
popf
push
je
aam
adc
mov
std
jae
mov
sbb
mov
js
push
call
sbb
inc
filds
cmp
lds
mov
sbb
sbb
push
leave
pop
aam
adc
cwtl
add
add
push
dec
push
aam
adc
mov
pushl
cld
rcrl
sbb
mov
or
sbb
sbb
jb
dec
dec
negb
aam
adc
nop
add
jle
or
sbb
sbb
push
push
aam
adc
movsb
and
mov
es
and
sbb
sbb
cs
or
sbb
sbb
push
test
sbb
sbb
jae
aam
adc
add
push
add
sbb
sbb
test
aam
adc
cwtl
lret
cltd
stc
mov
sbb
sbb
push
inc
or
sbb
sbb
or
aam
adc
clc
push
dec
cmp
push
sbb
cmpsb
stc
adc
sbb
sbb
xchg
sbb
aam
adc
cmpsb
xchg
adc
out
fcmovnb
rcrl
sbb
xor
mov
aam
adc
sahf
ret
xchg
jge
xchg
pop
add
sbb
sbb
test
sbb
mov
adc
cmp
rcrl
sbb
xchg
jecxz
sbb
sbb
loope
gs
push
fistps
aam
adc
xchg
je
inc
fsubr
adc
sbb
imul
pop
push
mov
aam
adc
mov
mov
adc
and
cmp
fsubl
pop
aam
adc
mov
les
sbb
sbb
push
movsb
rcl
sbb
sbb
cmp
rcrl
sbb
dec
inc
add
sbb
sbb
push
add
aam
adc
sub
inc
sub
negb
sbb
adc
aam
adc
mov
shll
push
fmull
sbb
sbb
push
add
rcrl
sbb
mov
sbb
fisttpl
add
sbb
sbb
lret
sbb
sbb
lret
push
fwait
not
sbb
sbb
in
add
mov
ret
adc
addb
clc
rcrl
sbb
cmp
aam
adc
mov
fwait
or
sbb
sbb
sbb
aam
adc
cwtl
jp
jge
mov
adc
mov
add
cld
jbe
or
nop
add
add
test
sbb
jbe
cli
rcrl
sbb
cs
xchg
or
insb
inc
outsb
and
sbb
add
sbb
sbb
fiadds
sbb
push
rcrb
aam
adc
scas
cli
movsl
aas
stos
negb
aam
adc
nop
pop
out
fists
aam
adc
xchg
sub
sub
mov
sbb
or
sahf
lahf
or
sbb
sbb
cmp
mov
or
or
sbb
fisubs
sbb
push
ficoms
aam
adc
mov
cmpl
adc
mov
inc
inc
fs
aam
adc
nop
and
pop
call
sbb
sbb
mov
add
sbb
sbb
imul
sbb
sbb
push
imul
xchg
test
cmpsb
enter
aam
adc
mov
lods
subb
and
into
cld
hlt
jae
negl
aam
adc
addb
rcl
sbb
sbb
push
sub
aam
adc
mov
push
clc
rcrl
sbb
mov
sbb
ficompl
aam
adc
ret
add
or
aam
adc
mov
scas
mov
aam
adc
nop
movsb
les
pop
fidivrs
sbb
loop
aam
adc
lods
in
xchg
out
xchg
fimull
aam
adc
cwtl
add
add
sahf
mov
sbb
into
fnstenv
aam
adc
xchg
add
sub
adc
cmpsb
outsl
jnp
xor
adc
les
xchg
push
aam
adc
and
adc
dec
xchg
fdivr
rcrl
sbb
mov
add
test
add
out
lret
sbb
sbb
cmp
aam
adc
cli
mov
repnz
sahf
mov
sbb
inc
adc
sbb
sbb
outsb
lea
mov
in
dec
movb
add
add
sub
mov
movsl
push
aam
adc
mov
sub
push
and
sbb
sbb
into
paddq
sbb
push
mov
sbb
inc
idivb
sbb
sbb
mov
or
sbb
sbb
sahf
int
rcrl
sbb
jbe
push
aam
adc
pop
mov
rcrl
sbb
in
ja
mov
mov
rcrl
sbb
xchg
sbb
sbb
sbb
jnp
aam
adc
xchg
add
add
mov
sbb
push
or
test
add
fisttpl
aam
adc
mov
insb
paddq
sbb
pushf
xor
jno
mov
cwtl
jne
pop
cs
daa
cld
rcrl
sbb
mov
adc
mov
insb
add
sbb
sbb
sbb
rcrl
sbb
pop
fidivrl
aam
adc
test
add
scas
iret
clc
rcrl
sbb
sub
lahf
add
lahf
push
aam
adc
mov
mov
sbb
sbb
xchg
rcrl
sbb
mov
cmp
inc
mov
mov
or
fisubrs
add
sbb
sbb
mov
addb
sbb
sbb
inc
or
sbb
sbb
xchg
cmc
rcrl
sbb
xchg
jle
sbb
sbb
insl
outsb
scas
push
sbb
sbb
out
adc
sbb
sbb
cmp
xchg
in
cmp
or
dec
sub
mov
cs
sbb
sbb
into
repz
sbb
sbb
mov
sbb
sbb
jbe
or
sbb
sbb
cmpsb
jecxz
aam
adc
les
inc
xchg
sbb
sbb
sbb
add
aam
adc
mov
test
aam
adc
movsb
outsb
insb
fimuls
into
paddq
sbb
xchg
lcall
add
pusha
stc
rcrl
sbb
ds
clc
rcrl
sbb
in
rcrl
sbb
pop
out
pop
in
cmc
and
sbb
sbb
push
inc
adc
sbb
sbb
dec
rcrl
sbb
sbb
sahf
xor
sbb
sbb
push
cld
lea
sbb
sbb
flds
aam
adc
xchg
popa
inc
inc
dec
ss
push
aam
adc
cwtl
or
repnz
clc
rcrl
sbb
mov
adc
mov
mov
rcrl
sbb
push
sbb
lds
aam
adc
mov
add
cld
imulb
sbb
scas
mov
rcrl
sbb
xchg
rorb
adc
mov
inc
add
xchg
sbb
into
mov
sbb
cs
rcrl
sbb
jmp
aam
adc
mov
std
jle
daa
aam
adc
test
add
push
sbb
sbb
cmpsl
xor
sbb
sbb
out
rcrl
sbb
xchg
aam
adc
mov
add
aam
adc
mov
sbb
sbb
sbb
mov
mov
and
sbb
sbb
adc
push
mov
sbb
jle
or
sbb
sbb
xchg
aam
adc
or
push
not
sbb
sbb
outsb
add
aam
adc
jo
push
adc
ds
sbb
sbb
divb
sbb
push
mov
rcrl
sbb
push
es
rcrl
sbb
push
and
sbb
jbe
call
sbb
sbb
popf
xor
sbb
sbb
test
sub
xchg
xor
aam
adc
loop
inc
ljmp
inc
add
std
into
negb
aam
adc
mov
cs
sub
sbb
sbb
push
dec
push
jne,pt
rcrl
sbb
aas
jbe
rcr
pop
rcl
adc
xchg
cmc
subps
das
add
sbb
sbb
sbb
sbb
and
jg
outsb
add
jb
pop
xor
sbb
sbb
cwtl
lahf
mov
mov
sbb
xor
cmp
cmc
sbb
sbb
sbb
xchg
jb
aam
adc
mov
inc
loop
mov
and
sbb
sbb
clc
rcrl
sbb
jne
aam
adc
sahf
inc
xchg
aam
adc
movsb
jge
fistl
pop
push
and
sbb
sbb
mov
adc
mov
fiaddl
aam
adc
mov
or
aam
adc
xchg
push
inc
xchg
sbb
sbb
adc
aam
adc
cwtl
daa
js
enter
rcrl
sbb
ss
aam
adc
in
lods
sbb
rcrl
sbb
dec
sbbb
sbb
sbb
sbb
sbb
push
mov
xchg
rolb
je
aam
adc
mov
cld
jmp
jmp
aam
adc
mov
push
inc
sub
sbb
sbb
push
or
sbb
sbb
xchg
imul
sbb
sbb
rolb
jp
pop
pop
add
mov
ds
cld
rcrl
sbb
add
xchg
add
rcrl
sbb
into
push
sbb
xchg
fsubrl
aam
adc
mov
xchg
popf
mov
mov
jmp
stc
rcrl
sbb
push
mov
sbb
push
dec
add
sbb
sbb
inc
test
sbb
add
inc
imul
mov
inc
push
aam
adc
sahf
mov
in
sub
aam
adc
xchg
add
add
add
rcrl
sbb
xorl
jp
mov
jle
add
test
add
jo
rcrl
sbb
sub
aam
adc
mov
add
add
test
sbb
jl
popf
cmpsb
sahf
mov
mov
add
sub
rcrl
sbb
pop
sub
mov
ds
call
sbb
sbb
scas
sub
sbb
sbb
inc
es
push
add
sbb
icebp
cli
rcrl
sbb
into
sti
or
sbb
sbb
jb
mov
aam
adc
lret
jle
out
push
xor
sbb
sbb
ja
rcrl
sbb
cs
rcl
adc
mov
ret
pop
in
std
rcrl
sbb
jle
add
sbb
sbb
push
push
not
sbb
sbb
mov
sbb
outsb
fwait
cmc
rcrl
sbb
sub
nop
jecxz
inc
mov
flds
lcall
sbb
sbb
sbb
mov
sbb
mov
mov
aam
adc
stos
xchg
sub
outsb
xchg
or
sbb
sbb
push
hlt
jecxz
sbb
sbb
fmulp
xchg
add
popa
adc
adc
test
out
push
xchg
xchg
push
shl
jmp
sbb
sbb
inc
xor
into
jg
sbb
sbb
idiv
pop
push
adcl
mov
insl
scas
insl
mov
xchg
shlb
jp
rcrl
and
fcoml
int3
push
cmp
cwtl
add
add
push
mov
sbb
mov
push
std
and
sbb
sbb
mov
adc
addb
rcl
sbb
sbb
out
mov
sbb
and
fistl
push
hlt
adc
mov
decl
lret
not
sbb
sbb
push
stos
adc
sbb
sbb
push
jmp
in
aam
adc
mov
pop
loope
aam
adc
xor
inc
fnsave
adc
pusha
mov
pop
add
sbb
sbb
push
test
aam
adc
mov
jle,pt
ds
sub
sbb
sbb
xchg
jne
rcrl
sbb
cs
sbb
idivb
sub
sbb
sbb
je
and
lahf
aam
sbb
sbb
and
push
sbb
sbb
cmp
in
cli
rcrl
sbb
sahf
rcrl
aam
adc
mov
subb
aam
adc
mov
push
jle
rcl
adc
out
insl
ss
pop
pop
clc
rcrl
sbb
out
aam
adc
mov
cmpsb
ja
aam
adc
rorb
cltd
or
sbb
xchg
add
sbb
sbb
cmp
jle
or
sbb
sbb
mov
sbb
dec
clc
rcrl
sbb
data16
aam
adc
ret
push
or
fiaddl
aam
adc
mov
add
popa
push
pop
sbb
sbb
sbb
in
not
sbb
sbb
scas
push
adc
sbb
sbb
dec
in
or
pop
push
aam
adc
mov
out
shlb
aam
adc
mov
add
cld
cmpsb
inc
rcl
adc
jo
add
add
sbb
sbb
js
mov
xchg
not
sbb
sbb
push
sbb
ss
aam
adc
mov
inc
xor
push
xchg
rcrl
sbb
shlb
sbb
sbb
xchg
sbb
sbb
sbb
psubd
sbb
sbb
into
xor
mov
cli
adc
sbb
sbb
data16
adc
sbb
sbb
inc
xchg
and
fdivrp
sub
sbb
sbb
push
into
sbb
sbb
sbb
cmpsb
pop
add
sbb
sbb
inc
stos
add
mov
cmp
rcrl
sbb
jle
clc
rcrl
sbb
inc
cli
test
sbb
sbb
mov
es
xor
sbb
sbb
xor
inc
into
jne
rcrl
sbb
adc
xchg
aam
adc
les
lock
push
cmpsb
or
sbb
sbb
aam
aam
adc
mov
jle
lcall
and
rcrl
sbb
ss
push
aam
adc
mov
jnp
rcrl
sbb
add
aam
adc
mov
lcall
adc
cmpsb
in
cmpsl
xchg
push
mov
sbb
shlb
sbb
sbb
movsb
popl
testb
rcrl
sbb
push
aam
adc
cmpsb
int
adc
aam
adc
stos
xchg
fdivs
rcrl
sbb
sbb
aam
adc
xchg
inc
sbb
rcrl
sbb
add
push
dec
or
sbb
sbb
inc
xor
aam
adc
movsb
cmp
inc
jns
jne
rcrl
sbb
jbe
cld
rcrl
sbb
aas
pop
das
push
aam
adc
mov
incb
sbb
fidivs
mov
jecxz
sbb
sbb
adc
sbb
repnz
loopne
mov
adc
enter
mov
aaa
test
sbb
sbb
mov
jmp
rcrl
sbb
cs
sub
sbb
sbb
sbb
aam
adc
push
lock
pop
sbb
sbb
sbb
mulb
test
sbb
sbb
stc
movl
stos
push
push
xchg
sub
mov
sahf
paddq
sbb
xchg
les
aam
adc
mov
xchg
aam
adc
mov
lock
aam
adc
xchg
add
or
ficoms
aam
adc
mov
rolb
sbb
sbb
sahf
fcomps
aam
adc
nop
aad
add
dec
add
sbb
sbb
jbe
adc
sbb
sbb
mov
or
aam
adc
test
leave
roll
sbb
sbb
not
rcrl
sbb
gs
add
sbb
sbb
adc
aam
adc
mov
scas
xchg
and
sbb
sbb
enter
xchg
xor
sbb
sbb
into
dec
adc
sbb
sbb
jp
rcrl
sbb
data16
not
sbb
sbb
dec
mov
sbb
push
jb
rcrl
sbb
jp
ds
jbe
add
sbb
sbb
mov
adc
sbb
sbb
pusha
cld
scas
dec
sbb
rcrl
sbb
mov
sbb
xchg
inc
inc
inc
out
loopne
aam
adc
mov
test
sub
adc
nop
add
add
testb
aam
adc
mov
mov
scas
adc
aam
adc
mov
decl
or
sbb
sbb
shll
and
addb
sahf
mov
sbb
mov
aam
adc
addb
int3
dec
bound
mov
sahf
out
rcrl
sbb
data16
in
xchg
aam
adc
ljmp
mov
xchg
sarb
pusha
pop
aam
adc
mov
push
push
rcrl
sbb
ss
clc
rcrl
sbb
ror
les
aam
adc
fdivs
pop
add
cmpsb
adc
test
add
add
pop
push
aam
adc
mov
xor
sarl
rcl
adc
ficoml
adc
mov
add
cld
jmp
sbb
xchg
mov
xchg
rorb
push
xor
sbb
sbb
xor
or
sbb
sbb
jbe
sbb
sbb
sbb
sahf
cmp
aam
adc
test
and
and
mov
inc
pop
leave
out
daa
aam
adc
bound
xor
jns
mov
sbb
mov
stos
push
dec
xchg
or
sbb
sbb
cmp
rcrl
sbb
imul
adc
mov
addl
sbb
sbb
push
cs
data16
rcrl
sbb
shlb
sbb
sbb
pop
xchg
push
aam
adc
rolb
call
push
aam
adc
mov
mov
or
sbb
sbb
movb
add
add
adc
mov
add
sbb
sbb
jbe
paddq
sbb
dec
adc
rcrl
sbb
movsb
not
sbb
sbb
incb
sbb
mov
paddq
sbb
mulb
aam
adc
test
imul
sbb
sbb
jns
imul
sbb
sbb
xchg
fnsave
sbb
sbb
cmpsb
stos
xchg
mov
aam
adc
xor
out
aam
adc
xlat
fldenv
aam
adc
test
add
outsb
pop
or
movsb
dec
sub
adc
sbb
sbb
xchg
push
aam
adc
pop
fiaddl
sub
sbb
sbb
bnd
adc
mov
into
sub
aam
adc
cwtl
gs
cmc
xor
pop
adc
test
add
or
not
sbb
sbb
and
sbb
sbb
lods
les
xchg
shrb
aam
adc
test
xor
aam
adc
je
xor
int
aam
adc
mov
jl
push
rcl
adc
push
and
mov
rcrl
sbb
enter
pop
xor
rcrl
sbb
repz
inc
xchg
adc
aam
adc
movsb
add
mov
sbb
sbb
fildll
test
sbb
sbb
lret
hlt
xor
sbb
sbb
jle
sub
sbb
sbb
push
imul
lds
and
sbb
sbb
mov
push
aam
adc
cwtl
hlt
bound
push
fmuls
sbb
sbb
push
outsl
add
sbb
sbb
xchg
mov
sbb
sbb
jno
rcrl
sbb
cmpsb
scas
sbb
sbb
sbb
imulb
sub
sbb
sbb
mov
sbb
sbb
cmpsb
pop
add
sbb
sbb
scas
mov
aam
adc
xchg
aas
or
aam
adc
mov
outsb
pop
add
sbb
sbb
xchg
jecxz
sbb
sbb
aam
outsb
mov
adc
xchg
aam
and
aam
adc
shlb
inc
push
ss
sbb
es
mov
sub
adc
xlat
jle
sbb
arpl
aam
adc
notb
cmp
pop
sub
sbb
sbb
dec
sahf
push
aam
adc
mov
xchg
iret
add
nop
adc
sbb
sbb
or
cmp
mov
add
out
aam
adc
mov
incl
adc
xchg
ds
outsl
mov
sbb
sbb
dec
clc
rcrl
sbb
shll
aam
adc
mov
mov
sbb
mov
rcrl
sbb
and
pop
test
addb
das
aam
adc
mov
mov
mov
rcrl
sbb
ds
sbb
inc
cmp
adc
aam
adc
clc
or
mov
sbb
sbb
mov
rcrl
sbb
xchg
add
sbb
sbb
jns
and
push
inc
sub
sbb
and
fisubrs
rcl
adc
sbb
push
mov
aam
adc
mov
inc
lea
sbb
sbb
xchg
jmp
aam
adc
jbe
adc
scas
aam
adc
sarb
push
aam
adc
nop
add
cli
rcrl
sbb
int3
pop
mov
sbb
sbb
fldl
and
sbb
sbb
mov
je
aam
adc
test
loop
rcr
xor
sbb
sbb
or
sbb
aam
adc
xchg
push
arpl
inc
data16
aam
adc
lods
push
ret
push
std
add
sbb
sbb
mov
adc
xchg
pushf
cmpsb
test
xchg
mov
aam
adc
add
imul
ss
adc
adc
ss
add
mov
or
aam
adc
imul
sbb
pop
cmpsb
paddq
sbb
scas
mov
push
aad
stc
xor
aam
adc
movsb
and
mov
mov
adc
adc
lret
sbb
adc
adc
sahf
movsl
push
lret
lods
sub
sbb
sbb
in
or
xor
adc
ret
insb
mov
sbb
sbb
lret
and
add
test
add
push
adc
aam
adc
mov
or
cs
xor
fcoms
mov
rcrl
sbb
push
xlat
adc
sbb
sbb
xchg
test
cmp
rcrl
sbb
pop
add
sbb
sbb
pop
pusha
and
sbb
sbb
push
out
pop
stos
idivb
sbb
out
test
out
add
sbb
add
add
test
add
inc
es
sbb
sbb
sub
aam
adc
jbe
addl
dec
clc
rcrl
sbb
test
rcrl
sbb
add
rcrl
sbb
push
sbb
sbb
push
cltd
ja
or
rcrl
sbb
out
ss
test
add
inc
mov
push
aam
adc
cmpsb
adc
ja
aam
adc
mov
add
dec
mov
sbb
push
jo
aam
adc
pushf
fnsave
adc
sbb
sbb
mov
aam
adc
xchg
xchg
mov
xor
sbb
sbb
pop
test
sbb
sbb
decb
sub
sbb
sbb
out
rcrl
sbb
js
adc
sbb
sbb
pop
jle
xchg
adc
mov
add
aam
adc
cwtl
inc
scas
cmp
push
faddp
rcrl
sbb
lahf
paddq
sbb
scas
pop
xor
sbb
sbb
push
ja
mov
and
nop
into
adc
push
negb
add
test
add
scas
jb
aam
adc
add
daa
sub
ret
rclb
push
adc
sbb
sbb
push
aam
adc
mov
fdivp
sbb
sbb
sbb
mov
adc
test
dec
pusha
into
aas
xor
or
add
cli
mov
adc
test
dec
adc
adc
push
subl
sub
pop
add
sbb
sbb
or
add
inc
jp
sbb
sbb
mov
rcrl
sbb
push
push
shlb
adc
mov
test
pop
aam
adc
mov
inc
inc
adc
sbb
sbb
into
outsb
adc
sbb
sbb
mov
enter
and
sbb
sbb
ds
add
sbb
sbb
imul
adc
mov
add
aam
adc
mov
mov
sbb
sbb
sbb
push
sbb
sbb
sbb
shll
insl
adc
sbb
sbb
inc
and
mov
push
adc
rcrl
sbb
out
add
mov
cltd
or
sbb
sbb
out
fwait
add
sbb
sbb
out
pusha
and
loop
cld
add
sbb
sbb
mov
adc
cmpsb
adc
loope
aam
adc
mov
cmp
aam
adc
outsb
in
xor
cltd
push
aam
adc
stos
mov
xlat
add
sbb
sbb
jle
adc
adc
jp
adc
pop
adc
push
lea
mov
or
aam
adc
test
add
inc
sahf
jg
sbb
sbb
ss
mov
mov
dec
and
xchg
aam
adc
test
iret
mov
aam
adc
cmpsb
mov
clc
clc
rcrl
sbb
xorl
adc
in
in
mov
inc
and
sbb
sbb
sahf
jp
aam
adc
ss
xorl
pop
xchg
or
sbb
sbb
loope
es
arpl
rcrl
sbb
scas
rol
rcrl
sbb
into
lods
leave
jo
fwait
adc
jl
and
mov
rcrl
sbb
outsb
sbb
rcrl
sbb
out
sbb
sbb
sbb
jle
or
sbb
sbb
jbe
sbb
pop
add
sbb
outsb
and
rcrl
sbb
mov
pop
adc
sbb
sbb
push
jns
aam
adc
loopne
ss
outsb
add
es
push
in
hlt
add
sbb
sbb
daa
sbb
sbb
sbb
jbe
or
mov
inc
cmp
xor
rcrl
sbb
and
sub
sbb
sbb
mov
and
xchg
loopne
lret
pushf
sbb
mov
out
jg
sbb
sbb
les
jle
add
sbb
sbb
out
sub
rcrl
sbb
into
jle
aam
adc
xchg
mov
pop
pop
aam
adc
cwtl
sub
scas
lahf
sub
aam
adc
scas
dec
je
pop
mov
adc
mov
lods
iret
mov
sbb
sbb
mov
sub
sbb
sbb
fistpl
sbb
sbb
and
aam
adc
inc
aaa
mov
push
out
pop
aam
adc
mov
xlat
sbb
rcrl
sbb
sbb
rcrl
sbb
push
adc
adc
scas
ret
in
push
and
push
aam
adc
mov
inc
lea
sbb
sbb
out
jne
aam
adc
nop
xchg
scas
idivl
push
mov
mov
and
mov
sbb
sbb
jle
std
rcrl
sbb
negb
sbb
scas
in
rcl
sbb
sbb
xchg
sbb
sbb
sahf
cmp
aam
adc
addb
xor
sbb
sbb
push
jmp
aam
adc
mov
std
incl
adc
sbb
sbb
inc
cmp
aam
adc
mov
mov
sbb
or
aam
adc
mov
out
cli
rcrl
sbb
cmpsb
paddq
sbb
div
sti
rcrl
sbb
pop
std
add
sbb
sbb
xchg
stos
or
sbb
sbb
decb
aam
adc
nop
add
add
idiv
sti
rcrl
sbb
push
mov
rcrl
sbb
movsl
sub
sbb
sbb
mov
aam
sbb
sbb
cmpl
sbb
sbb
addb
incb
lea
xchg
dec
or
mov
add
cld
xchg
ljmp
push
mov
or
sbb
sbb
inc
jb
aam
adc
mov
add
cld
push
and
rcrl
sbb
mov
xor
sbb
sbb
fidivs
aam
adc
stos
movsl
fwait
xor
insb
push
aam
adc
cwtl
aaa
pmaxsw
stos
rcl
sbb
sbb
inc
push
sbb
test
lret
sub
sbb
sbb
sub
aam
adc
pushf
cmpsb
int3
out
xchg
dec
enter
adc
pusha
ss
or
fnstenv
aam
adc
jbe
mov
aam
adc
mov
inc
cmp
femms
aam
adc
mov
push
icebp
sbb
sbb
sbb
mov
adc
mov
lcall
sbb
sbb
push
rcrl
aam
adc
movsb
jge
fistpl
lods
sbb
sbb
sbb
cmc
pop
push
repnz
loopne
int3
cmp
jle
and
sbb
sbb
aaa
aad
shlb
xchg
and
scas
mov
pop
push
aam
adc
cmpsb
in
mov
push
cs
rcrl
sbb
ret
ss
inc
push
dec
stc
rcrl
sbb
ss
sti
rcrl
sbb
push
out
rcrl
sbb
push
out
sub
sbb
sbb
mov
xchg
pop
push
rcl
adc
addb
int3
push
push
es
adc
inc
jb
stos
out
xor
sbb
sbb
repz
sbb
sbb
neg
or
sbb
sbb
dec
addb
sbb
sbb
jle
or
sbb
sbb
jbe
cmc
rcrl
sbb
sbb
adc
cwtl
cltd
or
sub
sbb
sbb
call
cmp
aam
adc
cwtl
adc
xlat
ss
aam
adc
cwtl
add
add
pop
stc
or
sbb
sbb
mov
sbb
cmc
adc
cli
ss
or
mov
mov
sbb
sbb
sbb
pause
push
into
mov
sbb
sbb
push
inc
aam
sbb
sbb
std
pop
mov
xchg
adc
sbb
sbb
out
and
sbb
sbb
jne
aam
adc
ljmp
add
sbb
sbb
push
adc
xchg
fdiv
jae
xchg
sub
sbb
sbb
insb
and
sbb
sbb
push
jp
rcrl
sbb
dec
xchg
push
aam
adc
les
mov
rcrl
sbb
ljmp
aam
adc
xchg
cmp
sbb
sbb
ss
and
sbb
sbb
test
aam
adc
mov
add
aam
adc
mov
es
rcrl
sbb
es
aam
adc
test
and
rcrl
sbb
push
jmp
sbb
jle
or
sbb
sbb
lea
pop
aam
adc
stos
notl
xchg
adc
push
or
popa
jl
aam
adc
pop
mov
add
sbb
sbb
cs
and
sbb
sbb
mov
jno
aam
adc
movsb
dec
sub
add
dec
aam
sbb
sbb
push
push
jne
jle
sub
sbb
sbb
shrl
sbb
sbb
sbb
sbb
roll
aam
adc
mov
in
aam
adc
mov
adc
aam
adc
sub
xor
sbb
out
movsl
and
sbb
sbb
scas
ja
aam
adc
mov
scas
jne
xlat
paddq
sbb
mov
sbb
push
pushf
sti
rcrl
sbb
aam
aad
fidivrs
sbb
push
pop
push
aam
adc
mov
addb
sbb
sbb
es
sub
sbb
sbb
je
rcrl
sbb
cmpsb
fiaddl
aam
adc
mov
mov
xor
aam
adc
shlb
shlb
aam
adc
mov
push
addr16
sbb
sbb
sub
mov
push
daa
aam
adc
mov
adc
aam
adc
shlb
ja
aam
adc
mov
pop
xchg
popa
and
sbb
sbb
mov
mov
aam
adc
lcall
add
pushf
cwtl
ret
test
out
aam
adc
mov
mov
mov
sbb
push
xchg
sub
sbb
sbb
scas
add
sbb
sbb
out
xor
sbb
sbb
jbe
adc
sbb
sbb
adc
rcrl
sbb
data16
out
cmp
sbb
dec
pop
aam
adc
mov
push
rcrl
sbb
into
pop
sbb
sbb
sbb
outsb
dec
mov
fldl
xchg
adc
mov
out
adc
lcall
rcrl
sbb
jmp
push
sbb
dec
adc
sbb
mov
add
test
add
mov
sbb
mov
sbb
fsubl
sbb
aam
adc
test
add
cs
pop
aam
adc
cmpsb
xor
in
outsb
and
sbb
sbb
adc
sbb
jp
rcrl
sbb
push
cmc
sti
rcrl
sbb
jbe
sub
sbb
sbb
in
insb
inc
stos
idivb
test
cmpb
paddq
sbb
scas
jo
aam
adc
fs
inc
jbe
rcrl
sbb
testl
aam
adc
shlb
rorb
mov
push
inc
clc
rcrl
sbb
es
sbb
sbb
xchg
and
sbb
sbb
and
push
or
sbb
sbb
out
mov
and
inc
cmp
sbb
sbb
stos
paddq
sbb
data16
aam
adc
test
add
push
sbb
sbb
pop
rcl
adc
push
rorl
rcl
sbb
sbb
es
sbb
sbb
sbb
mov
sbb
and
aam
adc
cwtl
loope
cmp
aam
adc
mov
pop
adc
mov
sbb
adc
jbe
push
aam
adc
test
push
out
mulb
aam
adc
movsb
stos
push
inc
dec
into
aaa
rcrl
sbb
cmpsb
mov
sbb
lcall
aam
adc
mov
pop
or
mov
push
incb
sbb
sbb
adc
adc
mov
test
cli
push
jmp
aam
adc
xchg
jg
dec
mov
dec
not
sbb
sbb
mov
mov
aam
adc
pushf
fwait
cli
sbbb
ret
adc
adc
adc
adc
pop
cmpsb
test
data16
rcrl
sbb
mov
or
sbb
sbb
push
test
rcrl
sbb
mov
mov
adc
sbb
sbb
mov
aam
adc
push
add
adc
sbb
sbb
push
not
sbb
sbb
out
push
add
sbb
sbb
outsb
xor
sbb
lds
add
push
pop
sti
rcrl
sbb
jbe
rcrl
sbb
jbe
add
lret
jne
outsb
xor
aam
adc
xchg
push
movl
sbb
lcall
aam
adc
lcall
sbb
sbb
sbb
push
pop
paddq
sbb
into
adc
sbb
sbb
or
aam
adc
shl
fstps
addr16
aam
adc
xchg
ja
icebp
adc
sbb
and
lahf
add
pushf
sub
sbb
sbb
dec
add
sbb
jge
aam
adc
test
mov
adc
mov
sbb
xchg
inc
clc
rcrl
sbb
push
or
rcrl
sbb
arpl
daa
daa
aam
adc
mov
imulb
aam
adc
mov
dec
pop
iret
scas
jle
aam
adc
cwtl
sete
fwait
inc
xchg
ret
rcrl
sbb
out
mov
rcrl
sbb
xchg
rcll
pop
push
aam
adc
mov
push
sbb
sbb
sbb
pop
adc
sbb
sbb
hlt
add
sbb
and
add
mov
iret
adc
sbb
sbb
push
imul
and
add
mov
sbb
sbb
sbb
leave
adc
jne
lock
cwtl
popf
aas
jae
sahf
cmpsl
cmc
rcrl
sbb
dec
popa
jbe
sbb
sbb
inc
popf
xchg
in
addr16
aam
adc
loop
sbb
push
aam
adc
test
ljmp
out
paddq
sbb
push
jne
aam
adc
addb
push
aam
adc
lods
inc
mov
arpl
push
aam
adc
sahf
xor
std
dec
pop
pop
aam
adc
cwtl
sub
scas
fwait
cmpsb
cmp
sbb
mulb
aam
adc
xchg
pop
scas
inc
adc
call
sbb
sbb
test
aam
adc
xchg
decl
not
sbb
sbb
out
sub
sbb
sbb
fimuls
sbb
es
rcrl
sbb
dec
clc
rcrl
sbb
push
sbb
aam
adc
lods
pop
cmc
int3
rolb
adc
mov
add
out
rcrl
sbb
lea
aam
adc
mov
push
sbb
sbb
push
mov
sbb
arpl
je
dec
push
std
rcrl
sbb
sahf
lock
sbb
sbb
outsb
arpl
aam
adc
mov
cmp
aam
adc
mov
add
aam
adc
test
add
aam
adc
mov
stos
adc
sbb
sbb
loop
aam
adc
lret
dec
push
push
lods
pop
aam
adc
lret
dec
push
push
not
sbb
sbb
xchg
sbb
sbb
cs
rcrl
sbb
fcmovnb
pop
inc
xchg
xor
sbb
sbb
scas
or
rcrl
sbb
ss
push
aam
adc
and
sbb
rcrl
sbb
fcmovbe
push
inc
push
hlt
sbb
sbb
sbb
aam
aam
adc
mov
jg
jbe
adc
sbb
sbb
cmpsb
addb
sbb
sbb
into
mov
sbb
inc
jl
jp
aam
adc
xchg
sahf
and
cs
not
sbb
sbb
xchg
cs
adc
mov
cld
xor
sbb
sbb
push
ss
rcrl
sbb
es
aam
adc
fsub
mov
aam
adc
mov
add
cld
mov
or
sbb
sbb
notl
aam
adc
mov
stc
rcrl
sbb
lock
sbb
sbb
cs
sbb
mov
sbb
sbb
sbb
fnstenv
add
test
add
aam
adc
cmp
enter
inc
clc
rcrl
sbb
movsb
push
aam
adc
mov
push
pop
jle
sub
stos
lea
repz
rcrl
sbb
dec
fdiv
rcrl
sbb
dec
addr16
sbb
sbb
push
xchg
not
sbb
sbb
xchg
negl
aam
adc
test
mov
sbb
xchg
lcall
dec
mov
sbb
sbb
pop
or
aam
adc
jecxz
call
aam
adc
mov
mov
adc
mov
inc
inc
rcl
adc
xchg
out
add
ss
adc
rcrl
sbb
pop
scas
cmp
adc
mov
ss
sbb
sbb
sbb
out
insl
add
jb
aam
adc
cld
loope
inc
add
sbb
sbb
mov
push
aam
adc
xchg
fsubl
and
sbb
sbb
subl
sbb
sbb
dec
pop
aam
adc
xchg
mov
mov
sbb
into
and
sbb
sbb
movl
sbb
sbb
add
sbb
sbb
sbb
inc
lds
rcrl
sbb
sbbb
out
pop
aam
adc
nop
add
add
mov
or
sahf
xchg
xchg
daa
out
hlt
and
sbb
sbb
sub
sti
jae
cmpsb
ret
rcrl
sbb
inc
sarb
xchg
cmpsl
mov
aam
aam
adc
test
js
aam
adc
mov
cmpsb
push
rcrl
sbb
mov
adc
xchg
push
push
cmp
aam
adc
hlt
inc
cmovnp
push
or
aam
adc
test
add
xchg
jl
rcrl
sbb
dec
pusha
pop
aam
adc
test
gs
push
mov
sbb
repnz
rclb
sbb
sbb
inc
or
aam
adc
call
sahf
aam
adc
lret
dec
push
sahf
cmp
rcrl
sbb
lahf
cltd
pop
inc
mov
aam
adc
mov
cmp
rcrl
sbb
scas
inc
adc
adc
add
inc
rcl
adc
pushf
sbb
sbb
aam
adc
mov
and
push
mov
in
sbb
sbb
xchg
mov
inc
push
and
rcrl
and
mul
pop
aam
adc
loop
daa
jnp
rorb
aam
adc
mov
jge
push
pop
rcl
adc
addb
int3
jbe
daa
aam
adc
call
fisubs
rcrl
sbb
cwtl
lds
cmp
clc
rcrl
sbb
scas
and
mov
dec
inc
or
sbb
sbb
mov
adc
sbb
sbb
cmpsb
pop
adc
sbb
sbb
scas
mov
sbb
into
adc
sbb
sbb
push
outsl
std
rcrl
sbb
and
sahf
cli
rcrl
sbb
cs
rcrl
sbb
mov
xchg
in
mov
aam
adc
rorb
xchg
sub
sbb
sbb
into
popa
add
sbb
sbb
ss
sbb
sbb
sbb
popl
aam
adc
xchg
push
cmp
mov
ss
sbb
sbb
aam
jl
sub
sbb
sbb
insb
adc
aam
lods
ror
xor
rcrl
cs
test
sub
pop
adc
sbb
sbb
xchg
sbb
jbe
adc
sbb
sbb
push
sub
aam
adc
nop
stc
arpl
fadd
xchg
sbb
sbb
jbe
not
sbb
sbb
inc
push
aam
adc
mov
std
call
ficomps
aam
adc
ret
cld
lcall
sbb
ret
inc
cmc
inc
cmpsl
pop
aam
adc
stos
xor
push
sub
sbb
enter
cmpsb
repnz
mov
inc
add
mul
sbb
sbb
sbb
jle
or
sbb
sbb
dec
rcll
aam
adc
nop
mov
mov
aam
adc
mov
add
add
add
test
add
push
dec
sbb
sbb
sbb
shrl
test
dec
mov
aam
adc
cwtl
add
rcrl
sbb
mov
sbb
pop
rcrb
mov
sbb
sbb
cmpsb
mov
aam
adc
xchg
out
xchg
pop
cmp
aam
adc
inc
or
pop
add
sbb
sbb
pop
call
sbb
sbb
sub
mov
add
sbb
sbb
sahf
add
aam
adc
mov
into
dec
mov
sbb
and
bound
nop
jg
mov
aam
adc
ljmp
add
sbb
sbb
xchg
lret
sbb
sbb
jbe
cli
rcrl
sbb
jle
add
sbb
sbb
mov
sbb
std
push
aam
adc
les
and
xchg
sbb
sbb
into
sub
rcrl
sbb
mov
cmp
aam
adc
mov
es
and
sbb
sbb
into
mov
aam
adc
nop
movsb
les
pop
dec
mov
sbb
aaa
paddq
sbb
inc
xchg
aam
adc
mov
push
mov
sbb
and
in
aam
adc
mov
mov
sti
rcrl
sbb
cmp
pop
aam
adc
xchg
jl
inc
xor
adc
mov
add
aam
adc
cwtl
jecxz
scas
mov
sbb
sbb
lock
push
loop
aam
adc
fsubr
mov
jg
je
aam
adc
div
push
in
insl
mov
aam
adc
nop
add
add
push
adc
xchg
xlat
popa
jmp
jbe
sub
sbb
sbb
lcall
sbb
sbb
or
aam
adc
enter
data16
and
sbb
sbb
mov
aam
adc
mov
add
add
adc
repnz
sub
push
call
sbb
sbb
dec
adc
sbb
sbb
outsb
sub
aam
adc
addb
push
aam
adc
xchg
add
and
aam
adc
and
mov
aam
adc
xchg
and
sub
mov
inc
add
jbe
or
sbb
sbb
cmp
mov
rcrl
sbb
sbb
jae
cmpsb
out
rcrl
sbb
push
hlt
sub
rcrl
sbb
xchg
push
add
sbb
sbb
mov
sbb
xchg
or
aam
adc
test
add
push
ljmp
add
add
dec
adc
sbb
sbb
mov
sbb
inc
pop
adc
sbb
sbb
scas
xor
inc
jbe
mov
clc
leave
pop
xor
pop
pop
aam
adc
mov
inc
jecxz
aam
adc
mov
mov
aam
adc
mov
add
std
ficomps
adc
addb
int3
data16
aam
adc
movsb
je
cltd
sub
jo
pushf
stos
xchg
insb
fidivrs
mov
jae
jbe
and
sbb
sbb
sub
shrb
sbb
sbb
cmp
and
or
mov
outsl
stos
or
push
adc
sbb
sbb
out
sub
aam
adc
mov
mov
stc
dec
adc
sbb
sbb
jbe
xchg
aam
adc
fmull
in
outsl
push
xlat
mov
pushf
dec
aas
mov
sbb
sbb
fiadds
aam
adc
ljmp
stc
rcrl
sbb
syscall
aam
adc
test
add
ss
add
sbb
sbb
push
imul
mov
sub
sbb
jmp
sbb
adc
fwait
mov
sbb
sbb
into
jae
aam
adc
mov
clc
insl
es
sbb
sbb
stc
mov
or
paddq
sbb
cmp
aam
adc
mov
xor
sbb
sbb
xchg
rcl
sbb
sbb
mov
enter
sbb
sbb
sbb
mov
xor
aam
adc
ret
or
sbb
sbb
mov
aas
mov
sbb
sbb
mov
adc
sbb
sbb
rclb
add
mov
addb
int3
mov
adc
mov
into
pop
and
sbb
sbb
dec
pop
adc
sbb
sbb
jle
adc
sbb
sbb
ss
cli
rcrl
sbb
xchg
sub
aam
adc
mov
std
incl
test
rcrl
sbb
adc
imul
sahf
es
sbb
adc
lret
es
push
jae
aam
adc
jp
ret
divb
push
aam
adc
nop
add
add
mov
adc
test
add
or
add
xchg
cmp
aaa
subb
sbb
sbb
aam
adc
mov
xor
xchg
adc
sbb
sbb
ds
rcrl
sbb
xchg
jmp
sbb
fstl
aam
adc
loop
sbb
xchg
push
add
aam
adc
imulb
mov
aam
adc
push
data16
mov
call
sbb
sbb
popf
insb
ret
rcrl
sbb
push
sbb
sbb
sbb
sbb
sbb
xchg
adc
fimuls
rcrl
sbb
out
sbb
sbb
cmp
sbb
out
sub
rcrl
sbb
out
sub
sbb
cmpsb
add
aam
adc
xchg
add
cmp
or
sbb
sbb
aaa
and
insb
testb
sbb
sbb
mov
sbb
fsubp
xor
sbb
sbb
cltd
push
aam
adc
test
xor
rcrl
sbb
mov
aam
adc
movsb
jle
ficoms
decb
sbb
or
rclb
lahf
or
sbb
sbb
mov
pop
aam
adc
repnz
aad
aam
adc
ret
sarl
pop
not
sbb
sbb
stc
sbb
sbb
sbb
int
js
xlat
xor
sbb
sbb
jne
aam
adc
addb
adc
adc
mov
and
sbb
sbb
jp
cmp
xchg
sarb
add
mov
dec
add
aam
adc
es
inc
sahf
sbb
aam
adc
test
add
rclb
rcrl
sbb
outsb
sbb
sbb
sbb
xor
aam
adc
fmuls
out
mov
stos
cmc
rcrl
sbb
aam
xchg
adc
outsl
out
add
add
rcrl
sbb
scas
push
aam
adc
push
add
ss
push
out
aam
adc
lods
pushf
cmp
rcrl
sbb
fidivrs
adc
mov
or
rcrl
sbb
push
xor
aam
adc
test
add
inc
xchg
ja
aam
adc
mov
push
lea
aam
adc
mov
add
rcrl
sbb
push
popa
jbe
xchg
and
sbb
sbb
cmc
rcrl
sbb
push
or
sub
sbb
sbb
cld
pop
aam
adc
mov
es
pop
aam
adc
cwtl
sub
out
fildl
adc
mov
ret
stos
jmp
and
aam
adc
mov
inc
mov
scas
adc
cmp
sub
aam
adc
fimuls
mov
xor
sbb
sbb
flds
scas
dec
mov
rcrl
sbb
push
aad
rcrl
sbb
push
sbb
sbb
ss
adc
xchg
cmp
into
add
sbb
sbb
cltd
ss
add
mov
inc
cmp
rcrl
sbb
add
movsl
jg
add
aam
adc
mov
mov
not
sbb
sbb
mov
adc
sbb
sbb
daa
or
mov
add
aam
adc
add
mov
sbb
sbb
es
faddl
cs
cs
adc
jle
lahf
add
xchg
push
aam
adc
movsb
xor
stc
rcrl
sbb
mov
sbb
push
into
paddq
sbb
push
push
pop
aam
adc
ds
push
into
nop
mov
or
sbb
sbb
inc
sbbb
add
rcrl
sbb
push
insl
sbb
sbb
sbb
dec
sub
rcrl
sbb
movsl
sub
sahf
sbb
aam
adc
mov
fs
mov
add
std
xchg
add
xchg
cmp
orb
adc
mov
fidivrs
sbb
out
xor
aam
adc
mov
add
cld
cmpsb
pusha
and
sbb
sbb
into
and
aam
adc
fdivs
pop
pop
scas
addr16
adc
mov
cmp
sbb
out
push
dec
or
and
rcrl
sbb
fnstsw
mov
aam
adc
xchg
inc
subb
rcrl
sbb
sub
enter
aam
adc
mov
xchg
es
sub
sbb
sbb
xchg
inc
divps
aam
adc
mov
call
sbb
pop
and
movsb
sti
call
sbb
sbb
in
into
das
push
rorl
aam
adc
mov
jg,pt
pushw
aam
adc
xchg
out
iret
adc
adc
mov
movsl
xor
add
rcrl
sbb
into
std
and
sbb
sbb
lods
cmp
jl
dec
xor
sbb
sbb
ds
aam
adc
mov
es
pop
aam
adc
enter
xchg
popf
or
sbb
sbb
sbb
sbb
push
dec
xor
sbb
sbb
mov
sub
push
push
aam
adc
mov
push
add
sbb
sbb
push
or
sbb
out
adc
sbb
sbb
xchg
outsb
clc
rcrl
sbb
push
push
sbb
sbb
sbb
xchg
add
xchg
cmp
rcrl
sbb
or
sub
mov
aam
adc
scas
ljmp
aam
adc
push
shr
mov
xchg
xor
sbb
sbb
testb
or
jmp
sbb
fimuls
aam
adc
cwtl
mulb
or
sub
sbb
sbb
out
inc
sbb
sbb
sbb
jbe
adc
sbb
sbb
js
xor
adc
pop
roll
subl
adc
xor
ret
rcrl
sbb
mov
ss
sbb
sbb
out
pop
rcl
sbb
sbb
es
not
sbb
sbb
ds
sbb
sbb
sbb
push
loopne
aam
adc
lcall
add
test
add
add
adc
jle
notb
rcrl
sbb
test
aam
adc
int3
adc
sbb
sbb
sbb
lret
sbb
sbb
not
sbb
sbb
dec
movsl
mov
xchg
shlb
adc
lcall
ret
rcrl
sbb
sub
movsb
dec
sub
add
adc
addb
mov
mov
adc
sbb
sbb
jge
aam
adc
cmpsb
popf
jae
lods
ds
aam
adc
test
lods
loopne
sbb
test
add
inc
mov
sbb
pop
in
call
sbb
sbb
push
in
aam
adc
mov
addb
push
mov
aam
adc
hlt
out
and
insb
mov
adc
nop
jmp
mov
sbb
ss
adc
sbb
sbb
out
add
sbb
sbb
out
fisttps
sbb
sbb
inc
pop
das
enter
rcrl
sbb
mul
add
sbb
sbb
rorb
aam
adc
nop
add
add
jbe
jg
sbb
sbb
sahf
sub
aam
adc
mov
add
rcrl
sbb
xor
mov
push
sbb
sbb
sbb
es
std
rcrl
sbb
xchg
dec
sbb
sbb
sbb
lods
pop
pop
or
rcl
sbb
sbb
pop
mov
aam
adc
enter
pop
mov
aam
adc
and
xlat
dec
fsubp
xor
sbb
sbb
xchg
stos
stos
dec
lret
adc
adc
xchg
in
add
jle
pop
aam
adc
sahf
xchg
push
xchg
fcomps
pop
push
aam
adc
sbb
xor
rcrl
sbb
mov
mov
rcrl
sbb
jmp
aam
adc
test
add
rcrl
sbb
jbe
sti
rcrl
sbb
jnp,pn
aam
adc
rolb
fbstp
dec
or
sbb
sbb
xchg
mov
sbb
sbb
loopne
aam
adc
cmpsb
cmp
push
das
xchg
loope
aam
adc
cwtl
add
add
movb
lret
out
jmp
sbb
sbb
pop
shll
sbb
sbb
scas
bound
lcall
rcl
adc
in
mov
in
mov
not
sbb
sbb
mov
nop
add
sbb
sbb
or
aam
adc
mov
mov
rcl
adc
test
add
push
sbb
sbb
cmpsb
popa
cs
adc
loopne
sbb
arpl
adc
mov
daa
add
sbb
sbb
out
fadds
je
aam
adc
dec
push
stc
ljmp
adc
push
mov
mov
aam
adc
push
xor
mov
rcrl
sbb
cs
push
aam
adc
cwtl
adc
rcrl
sbb
sti
push
aam
adc
les
enter
clc
rcrl
sbb
xchg
nop
xor
sbb
sbb
out
ret
rcrl
sbb
push
sbb
mov
push
lret
sbb
sbb
sbb
jbe
push
aam
adc
movsb
test
mov
adc
sbb
sbb
jbe
aam
adc
mov
or
or
sbb
sbb
and
sbb
sbb
lcall
rcrl
sbb
add
aam
adc
nop
movsb
les
pop
dec
or
sahf
xchg
xchg
daa
out
xor
aam
adc
addb
add
test
add
xor
or
cltd
call
rcrl
sbb
and
cmp
push
add
sbb
and
add
adc
test
add
xchg
pop
aam
adc
lcall
sbb
sbb
sbb
mov
sub
les
mov
rcrl
sbb
scas
sbb
hlt
lret
mov
sbb
sbb
outsb
mov
rcrl
sbb
inc
lods
adc
sbb
sbb
dec
stos
rolb
gs
sbb
sbb
out
jg
xor
sbb
sbb
movl
out
adc
leave
jle
or
sbb
sbb
in
cs
aam
adc
nop
movsb
les
pop
mov
adc
push
xor
data16
push
test
sbb
sbb
ficoms
rcl
sbb
sbb
inc
pusha
rcl
sbb
sbb
push
nop
or
sbb
sbb
ss
aam
adc
call
push
sbb
sbb
std
or
sbb
sbb
and
pop
scas
mov
sbb
sbb
push
jmp
rcrl
sbb
into
mov
aam
adc
mov
push
add
sbb
sbb
out
cmp
lods
and
sbb
sbb
xchg
xor
sbb
sbb
mov
aam
adc
pushf
cmpl
and
lock
sub
sbb
sbb
ds
aam
adc
cwtl
je
sub
aam
adc
aam
gs
aam
adc
xchg
or
sub
mov
xchg
sbb
xor
xor
sbb
sbb
mov
add
sbb
sbb
xchg
sbb
aam
adc
mov
add
rcrl
sbb
es
rcrl
sbb
pop
xchg
xchg
cld
rcrl
sbb
xchg
jnp
rcrl
sbb
mov
and
sbb
sbb
mov
aam
adc
cwtl
fadds
mov
sbb
sbb
faddp
sub
sbb
sbb
pop
push
not
sbb
sbb
sahf
popf
mov
sbb
sbb
ss
aam
adc
jg
scas
pop
push
and
aam
adc
adc
xor
sbb
sbb
add
in
or
aam
adc
xchg
cmc
mov
test
sbb
sbb
adc
cmp
cs
sbb
ficomps
aam
adc
ret
sub
jbe
or
sbb
sbb
add
sbb
jbe
sbb
sbb
sbb
mov
call
sbb
sbb
mov
pushf
add
sbb
sbb
push
jecxz
aam
adc
mov
mov
or
mov
int
aam
adc
cwtl
push
shrb
rcrl
sbb
outsb
popf
sub
les
sbb
aam
adc
nop
nop
push
dec
push
addb
sbb
sbb
pop
push
stc
rcrl
sbb
es
sbb
sbb
shll
int
fildl
and
scas
push
aam
adc
adc
cmp
into
jg
rcrl
sbb
mov
ret
adc
mov
out
add
sbb
sbb
fiadds
and
sbb
sbb
outsb
xchg
xor
sbb
sbb
push
and
aam
adc
rclb
mov
insb
and
sbb
sbb
pop
pop
aam
adc
mov
push
iret
ss
paddq
xor
jp
inc
out
adc
cmp
adcb
or
lret
inc
daa
sbb
sbb
sbb
mov
ret
rcrl
sbb
mov
sbb
loopne
rcrl
sbb
movsl
sub
hlt
jle
sub
sbb
sbb
cmp
mov
aam
adc
mov
movsb
push
scas
adc
adc
mov
add
xchg
sbb
ss
sbb
movsb
not
sbb
sbb
xchg
sub
sbb
sbb
inc
shl
rcrl
sbb
dec
mov
aam
adc
mov
rorb
xchg
sub
sbb
sbb
jbe
push
aam
adc
mov
jns
aam
adc
mov
jbe
test
sbb
sbb
cltd
ret
and
sbb
sbb
ss
mov
push
adc
sbb
sbb
out
and
sbb
sbb
mov
adc
sahf
mov
sbb
mulb
aam
adc
mov
test
add
sbb
sbb
sahf
cld
rcrl
sbb
imul
sbb
fwait
inc
jbe
scas
bound
aam
adc
mov
mov
pop
aam
adc
mov
xor
rcrl
sbb
aaa
push
aam
adc
nop
pop
mov
decl
aam
aam
adc
ret
repz
push
loop
aam
adc
mov
xchg
stc
rcrl
sbb
cmp
pop
dec
cmpsb
and
fmull
or
sbb
sbb
push
cli
rcrl
sbb
mov
adc
int3
aam
add
aam
adc
lret
es
mov
mov
fs
push
pop
push
aam
adc
mov
ss
aam
adc
notb
repz
push
xor
aam
adc
mov
push
push
add
sbb
sbb
push
dec
clc
rcrl
sbb
xor
aam
adc
les
lock
cmpsb
sbb
aam
adc
mov
mov
sbb
jge
aam
adc
mov
or
pusha
or
cmpsb
and
xchg
and
mov
xchg
push
aam
adc
aam
mov
aam
adc
mov
push
lods
and
sbb
sbb
push
cmc
and
sbb
sbb
ds
rcrl
sbb
dec
rcl
adc
pushf
pop
push
pop
aam
adc
addb
or
sbb
sbb
aaa
pop
xor
adc
sahf
adc
lret
sbb
sbb
clc
ret
popw
adc
sbb
sbb
or
or
sbb
sbb
addr16
aam
adc
cwtl
jp
rclb
adc
mov
and
sbb
outsb
push
xor
mov
push
mov
aam
adc
xchg
xor
sub
sbb
sbb
aam
or
add
rcrl
sbb
rcrl
sbb
mov
sbb
pop
loop
push
push
aam
adc
les
cmp
aam
adc
into
sbb
push
das
inc
addr16
sbb
sbb
enter
mov
push
aam
adc
fidivrs
out
or
mov
add
aam
adc
mov
adcl
adc
mov
sub
dec
pop
xor
sbb
sbb
cs
in
mov
mov
mov
lcall
aam
adc
scas
pop
movsb
or
cmpsb
lock
lods
pop
test
jle
ret
rcrl
sbb
xchg
cwtl
add
sbb
sbb
stc
xor
sbb
sbb
push
stos
paddq
sbb
push
popa
mov
sbb
sbb
sahf
jp
aam
adc
shrb
int
outsb
not
sbb
sbb
fsubr
ljmp
adc
lods
xchg
iret
jg
or
rcrl
sbb
insl
adc
sbb
sbb
push
cs
adc
hlt
inc
xchg
dec
popa
divb
aam
adc
mov
add
aam
adc
movsb
stos
clc
fyl2x
cs
aam
adc
out
dec
roll
iret
cs
adc
push
dec
out
lods
jbe
cmc
rcrl
sbb
push
push
jns
fs
sbb
sbb
jbe
push
aam
adc
mov
jne
aam
adc
addb
push
aam
adc
mov
movsl
imull
adc
mov
or
dec
sahf
mov
aam
adc
ss
aam
stos
mov
push
fs
rcrl
sbb
pop
inc
std
rcrl
sbb
outsb
imul
xchg
popa
inc
inc
dec
ds
sbb
mov
add
push
fwait
sti
rcrl
sbb
outsb
shrb
aam
adc
cwtl
lahf
aas
jbe
inc
sbb
sub
and
sbb
sbb
sbb
adc
mov
or
js
xor
lret
mov
mov
adc
xchg
popa
inc
inc
dec
jbe
and
sbb
sbb
outsb
movsl
jecxz
sbb
sbb
mov
repz
cwtl
add
add
jle
sub
mov
je
shlb
rcrl
sbb
scas
pop
adc
sbb
sbb
repnz
out
pop
adc
fnstsw
and
sbb
sbb
loope
sbb
cmpsb
add
aam
adc
xchg
je
inc
notb
rcrl
push
xchg
push
pop
rcl
sbb
sbb
ss
cli
rcrl
sbb
jbe
ja
sbb
sbb
sub
rcrl
sbb
jbe
or
sbb
sbb
not
inc
icebp
mov
sti
rcrl
sbb
dec
mov
aam
adc
lcall
adc
sbb
sbb
es
aam
adc
cwtl
jne
or
inc
xor
test
add
divb
aam
adc
pushf
sahf
mov
add
sbb
sbb
fidivs
rcrl
sbb
in
loop
out
sub
sbb
sbb
xchg
push
aam
adc
mov
outsb
mov
rcrl
sbb
mov
add
sbb
sbb
decb
sbb
mov
sbb
cs
not
sbb
sbb
out
repnz
fwait
add
sbb
sbb
xchg
iret
or
sbb
sbb
xchg
int3
push
aam
adc
mov
cld
pushl
adc
cwtl
sbb
and
stos
jns
cs
add
cmpsb
in
cmpsl
xchg
out
adc
nop
aaa
mov
aam
adc
test
add
jbe
pop
aam
adc
mov
push
iret
push
push
paddq
sbb
inc
mov
sbb
xchg
or
and
or
sbb
into
adc
sbb
sub
loopne
es
rcrl
sbb
mov
fstpl
aam
adc
nop
jmp
jnp
aam
adc
lods
ficompl
add
sbb
sbb
inc
xor
sbb
clc
pop
aam
adc
mov
repnz
adc
or
adc
sbb
sbb
xor
mov
sbb
cs
sub
mov
gs
ss
sbb
sbb
or
sbb
sbb
loope
es
addl
daa
es
sbb
sbb
cmpsb
push
aam
adc
cld
negl
jbe
add
sbb
sbb
negb
sbb
and
xchg
sbb
cli
rcrl
sbb
add
aam
adc
nop
bound
xor
sbb
sbb
fs
andl
or
jle
or
sbb
push
and
aam
adc
scas
mov
aam
adc
clc
iret
and
mov
inc
call
sbb
sbb
cwtl
fsubs
add
test
add
cmpsb
add
sbb
ds
rcrl
sbb
inc
inc
push
aam
adc
mov
das
dec
dec
xchg
add
test
add
push
shl
rcrl
sbb
mov
sbb
out
adc
sbb
sbb
cmpsb
adc
mov
sbbb
sti
rcrl
sbb
push
aad
sbb
sbb
sub
mov
inc
add
into
sti
sub
sbb
sbb
out
pop
aam
adc
mov
add
cld
mov
adc
mov
sub
pop
loopne
aam
adc
test
add
aam
adc
xchg
loopne
test
sti
rcrl
sbb
jbe
rcrl
sbb
jp
rcrl
sbb
sbb
outsb
hlt
ds
sbb
outsb
dec
adc
sbb
sbb
push
inc
sub
sbb
sbb
pop
pop
aam
adc
mov
imul
clc
or
mov
sbb
sbb
push
adc
sbb
sbb
out
mov
xchg
push
add
push
mov
aam
adc
or
aas
cmp
cmpsb
jge
rcrl
sbb
sbb
mov
sub
sbb
sbb
adc
sbb
sbb
lock
lods
pop
mov
sbb
push
inc
aam
sbb
sbb
cmp
aam
adc
xchg
add
js
les
aam
adc
ret
adc
aam
adc
push
mov
out
sub
sbb
sbb
sub
rcrl
sbb
mov
jle,pt
aam
adc
mov
jl
aam
adc
call
outsb
pusha
stc
rcrl
sbb
lods
jecxz
sbb
sbb
inc
xchg
or
and
mov
ret
rcrl
sbb
cs
aam
adc
sahf
jnp
in
push
sarb
mov
dec
addr16
xor
sbb
cmpsb
mov
sub
push
shl
push
sub
sbb
sbb
xchg
sub
aam
adc
jbe
or
rcrl
sbb
mov
mov
test
jae
loope
scas
rcl
adc
shrb
sub
loopne
cmp
out
add
mov
test
aaa
push
aaa
push
aam
adc
mov
mov
adc
sbb
sbb
pusha
ror
or
sbb
sbb
sbb
inc
add
rcl
sbb
sbb
push
subb
in
cmp
xchg
sub
sbb
sbb
data16
aam
adc
sahf
fists
rorl
lcall
aam
adc
mov
sub
adc
mov
dec
clc
mov
dec
adc
sbb
sbb
or
mov
jle
xchg
shlb
clc
sti
rcrl
sbb
mov
rcl
adc
push
xchg
sbb
sbb
sahf
sbb
stos
or
int
aam
adc
mov
pop
add
test
add
xchg
aaa
push
aam
adc
nop
add
add
ss
rcrl
sbb
xchg
push
js
sbb
and
sub
stos
testb
mov
orb
push
sub
sbb
sbb
pop
add
sbb
sbb
scas
mov
rcrl
sbb
jbe
sub
sbb
sbb
or
rcrl
sbb
out
and
sbb
sbb
pop
adc
aam
adc
mov
int
aam
adc
nop
add
add
mov
or
mov
mov
or
sbb
sbb
mulb
xor
sbb
and
cmpsb
adc
rcrl
sbb
sbb
aam
adc
cwtl
xchg
jle
jnp
out
and
mov
mov
clc
rcrl
sbb
adc
aam
adc
or
andb
adc
enter
push
into
xor
aam
adc
mov
dec
or
push
push
sbb
or
mov
sbb
dec
mov
sbb
add
aam
adc
pushf
aam
inc
inc
push
cmp
rcrl
sbb
dec
fs
xor
popa
out
push
add
aam
adc
pushf
mov
cmc
mov
push
aam
adc
mov
decb
sub
mov
inc
rcrl
sbb
or
lahf
mov
sbb
cmp
divb
sbb
jne
or
sbb
sbb
push
xchg
push
std
push
data16
sbb
sbb
xchg
xor
sbb
sbb
subl
leavew
es
adc
cwtl
jl
push
xor
movsl
xor
sbb
sbb
popf
pop
aam
adc
nop
add
or
sbb
sbb
addr16
inc
xchg
push
mov
nop
pop
ret
out
jg
aam
adc
xchg
aas
dec
fbld
call
sbb
sbb
inc
aas
and
or
std
call
sbb
sbb
mov
adc
aam
adc
fs
insl
jecxz
jle
or
mov
movsl
xchg
inc
adc
sbb
sbb
inc
lods
mov
aam
adc
cwtl
add
add
ds
sbb
sbb
mov
adc
out
int
pop
in
fisubs
aam
adc
aam
xor
aam
adc
addb
or
sbb
sbb
push
adc
fisubl
and
call
sbb
sbb
push
dec
xor
sbb
sbb
fisubrs
daa
aam
adc
les
pop
add
test
add
fisubs
sbb
ss
aam
adc
mov
add
mov
rcrl
sbb
into
lahf
and
enter
sub
jmp
sbb
push
out
rcrl
sbb
lcall
sbb
sbb
push
sti
ja
xchg
mov
sbb
loopne,pt
aam
adc
scas
jge
cli
xorb
sub
sbb
sbb
outsb
aam
sbb
sbb
jbe
or
sbb
sbb
push
not
sbb
sbb
incl
sbb
sbb
insl
add
sbb
sbb
sarl
sbb
sbb
jle
sub
movsb
das
test
xor
or
xor
xor
xor
sbb
sbb
mov
sbb
outsl
xchg
xchg
ret
push
pop
push
aam
adc
mov
or
aam
adc
mov
fidivs
mov
ss
mov
adc
mov
sbb
jmp
aam
adc
mov
sub
xchg
aam
aam
adc
nop
mov
pop
rcl
sbb
sbb
xchg
push
adc
sbb
sbb
xchg
sbb
cmp
aam
adc
lock
rcrl
sbb
xor
imul
adc
mov
cld
incl
adc
cmpsb
outsl
jecxz
mov
sbb
sbb
push
add
sbb
sbb
aaa
add
movsb
paddq
sbb
loope
rcrl
sbb
scas
push
sub
sbb
sbb
inc
rcl
adc
aam
push
loope
ds
xor
sbb
sbb
int3
sti
rcrl
sbb
mov
sbb
btrl
aaa
rcrl
sbb
je
mov
in
and
sbb
sbb
xchg
cmp
mov
dec
sbb
sbb
sbb
out
sub
sbb
sbb
mov
add
sbb
sbb
dec
or
sbb
sbb
fiadds
adc
xchg
les
jbe
xor
sbb
sbb
out
adc
mov
call
sbb
sbb
push
xchg
rcr
sub
sbb
sbb
jle
aam
adc
xor
sub
cmpsl
outsb
clc
rcrl
sbb
es
mov
es
rcrl
sbb
add
jbe
sbb
sbb
in
fs
ds
aam
adc
lods
push
push
inc
mov
add
sbb
sbb
jbe
ret
adc
mov
inc
jno
aam
adc
es
aam
outsb
mov
sbb
outsb
imul
sbb
sbb
lds
aam
adc
int3
inc
lret
xchg
mov
aam
adc
nop
add
add
out
sub
aam
adc
mov
cmp
es
aam
adc
sar
or
aam
adc
pushf
bound
xchg
testl
cmp
mov
sbb
jae
rcrl
sbb
out
aam
adc
mov
jge
lcall
sbb
jbe
add
test
add
outsb
and
sbb
mov
adc
push
aam
loopne
xchg
and
rcrl
sbb
out
in
add
sbb
sbb
cmp
insl
push
es
aam
adc
cmpsb
scas
popa
das
mov
sbb
sbb
outsb
es
sbb
sbb
lahf
arpl
lock
adc
aam
adc
mov
add
les
xchg
xor
sbb
sbb
imul
add
jmp
imul
sbb
into
test
aam
adc
fadd
shr
jo
mov
sbb
out
pop
aam
adc
nop
in
cwtl
fnsave
adc
mov
es
rcrl
sbb
xchg
sbb
cs
sbb
sbb
push
paddq
sbb
jnp
add
sbb
sbb
push
push
add
mov
aam
adc
into
add
mov
sbb
sbb
jmp
sbb
pop
mov
push
aam
adc
pushf
mov
dec
pop
push
adc
rcrl
sbb
je
test
sub
aam
adc
nop
add
add
es
sbb
sbb
sbb
pop
sbb
sbb
fisubs
xchg
out
mov
push
ret
add
sbb
sbb
sahf
or
rcrl
sbb
ret
cmp
adc
fidivl
in
fsubp
adc
sbb
sbb
push
fprem
rcrl
sbb
push
fimuls
aam
adc
lret
aaa
das
push
jns
aam
adc
mov
add
aam
adc
mov
mov
rcrl
sbb
imul
aam
adc
test
add
testb
stos
loop
sti
in
mov
adc
sahf
sub
ud2
aam
adc
mov
mov
adc
xor
jo
aam
adc
mov
jns
aam
adc
mov
jle
in
sbb
sbb
dec
cs
aam
adc
push
or
push
push
les
xchg
add
in
leave
adc
test
add
xor
rcrl
sbb
shl
pop
add
fiadds
lods
push
xchg
cld
mov
adc
cwtl
adc
pop
aam
adc
mov
jbe
pop
aam
adc
xchg
add
add
push
sbb
mov
aam
adc
lods
cmp
inc
mov
sbb
sbb
testl
aam
adc
test
push
out
mov
adc
xchg
sbb
add
adc
cwtl
add
add
dec
jge
aam
adc
test
add
inc
jbe
adc
sbb
sbb
push
movsl
cmc
rcrl
sbb
rorl
aam
adc
mov
jle
push
cmp
aam
adc
nop
popa
inc
pop
clc
fsubrp
rcl
sbb
sbb
lock
ret
mov
out
rcrl
sbb
shrb
xor
sbb
sbb
fisubl
int3
and
sbb
sbb
sahf
pop
aam
adc
lods
jl
outsl
dec
dec
sbb
aam
adc
addb
add
sbb
sbb
out
xor
sbb
sbb
addl
ds
sbb
sbb
negb
aam
adc
mov
mov
mov
sbb
sbb
imul
cmpsb
call
sbb
out
and
aam
adc
mov
into
sahf
pop
rcrl
sbb
cmpsb
les
cmpsb
cmc
push
pop
stos
testb
rcrl
sbb
shl
sbb
sbb
push
cmp
sbb
sbb
xchg
sbb
out
sbb
sbb
sbb
xchg
scas
and
sbb
sbb
sbb
aam
adc
cmpsb
mov
into
sbb
sbb
sbb
sbb
aam
adc
fcoml
insl
mov
aam
adc
nop
movsb
les
pop
out
or
sbb
sbb
addr16
mov
call
adc
pushf
outsl
cli
ficomps
sbb
sbb
push
jne
aam
adc
mov
sbb
test
add
es
aam
adc
test
cld
std
rcrl
sbb
test
push
jbe
adc
nop
add
add
push
sub
sbb
cmp
and
sbb
sbb
es
and
sbb
sbb
in
das
dec
addr16
adc
sbb
sbb
data16
unpcklpd
sbb
sbb
pop
sbb
adc
adc
test
add
cld
mov
adc
pushf
xor
pop
cmp
xor
sbb
sbb
xor
jmp
sbb
ds
and
into
rcl
dec
idiv
rcrl
sbb
push
push
sbb
or
sahf
int3
add
mov
cmp
xlat
mov
adc
mov
add
aam
adc
mov
inc
add
mov
push
aam
adc
mov
rolb
sbb
sbb
or
jbe
add
test
add
es
aam
adc
test
add
jle
add
sbb
sbb
sahf
or
sbb
sbb
sbb
sbb
sahf
nop
push
aam
adc
xchg
fwait
cmp
or
sbb
sbb
push
push
aam
adc
mov
xchg
into
and
clc
add
mov
sbb
movsb
or
rcrl
sbb
sbb
dec
fdivs
sbb
sbb
and
aam
adc
movsb
sub
xor
sbb
sbb
pop
daa
adc
sbb
sbb
rorb
aam
adc
mov
mov
ret
rcrl
sbb
push
xchg
add
sbb
sbb
dec
dec
sbb
mov
insl
hlt
or
add
sbb
sbb
mov
adc
sahf
nop
notb
aam
adc
xchg
push
es
sbb
sbb
push
sub
sbb
sbb
out
adc
mov
sbb
rcrl
sbb
mov
orb
adc
xchg
es
rcrl
sbb
negb
stos
pushf
mov
cld
rcrl
sbb
push
push
sbb
sbb
sbb
jae
sti
pop
cmpsb
out
sbb
sbb
sbb
dec
in
sbb
adc
mov
mov
xor
sbb
pop
sbb
stos
xor
sbb
sbb
notb
inc
mov
paddq
sbb
outsb
ficompl
aam
adc
mov
mov
rcl
sbb
sbb
and
rcrl
sbb
adc
lcall
or
sbb
sbb
jbe
xor
push
sti
mov
rcl
sbb
sbb
push
sbb
aam
adc
aam
cmp
xchg
scas
movsl
add
stos
adc
mov
sbb
sbb
jle
sub
sbb
sbb
push
jecxz
aam
adc
ret
repz
jbe
push
aam
adc
cwtl
add
add
push
push
add
test
add
fisubrs
sbb
sbb
cs
call
sbb
sbb
int3
cmp
add
sbb
sbb
in
push
mov
adc
mov
cmpsb
mov
sbb
into
cmp
aam
adc
scas
cmpsl
int
mov
jg
aam
adc
loopne
xchg
ja
div
add
mov
mov
ret
xor
sbb
sbb
add
test
add
mov
adc
add
add
jbe
sbb
sbb
aas
inc
in
cs
rcrl
sbb
sahf
rorb
sbb
sbb
fisttpll
sbb
sbb
ds
add
sbb
sbb
inc
stos
fsub
out
sub
rcrl
sbb
out
and
sbb
sbb
roll
sbb
sbb
fsubrl
xor
xchg
rcrl
sbb
sub
aam
adc
mov
cmpsb
mov
scas
push
rcrl
sbb
fcomps
aam
adc
mov
push
add
test
add
inc
call
sbb
jge
aam
adc
xchg
sub
je
rcrl
sbb
push
or
aam
adc
pushf
insb
lret
sbb
aam
adc
mov
pushl
clc
rcrl
sbb
decb
aam
adc
xchg
sbb
or
movsb
jge
fistpl
idivb
sbb
rcrb
aam
adc
ret
add
ret
or
sbb
sbb
decb
aam
adc
xchg
aam
rcrl
sbb
push
out
or
jle
mov
sbb
sbb
jmp
not
sbb
sbb
pop
aas
stc
rcrl
sbb
cld
lea
fidivs
aam
adc
mov
jg
push
mov
sbb
jnp
add
push
popf
or
sbb
sbb
push
in
push
addb
sbb
sbb
mov
leave
adc
sbb
sbb
xchg
aam
adc
lods
or
orl
sub
sbb
sbb
inc
test
rcrl
sbb
push
sbb
stc
mov
and
sbb
sbb
pop
mov
mov
nop
call
mov
pushf
pop
jnp
adc
xor
test
add
push
or
adc
mov
inc
cmp
mov
rcrl
sbb
pop
outsb
rcl
adc
mov
shlb
retw
sbb
sbb
imul
sub
sbb
sbb
adc
jl
scas
cli
divb
sbb
mov
sbb
mul
add
sbb
sbb
jbe
adc
sbb
sbb
fcompl
aam
adc
cmpsb
xlat
inc
lock
push
mov
aam
adc
mov
fsubrs
aam
adc
rclb
daa
aam
adc
mov
mov
add
sbb
sbb
clc
xor
sbb
sbb
push
xchg
aam
sbb
sbb
push
pop
aam
adc
xchg
lock
xor
push
inc
sub
sbb
sbb
insl
or
mov
mov
rcl
sbb
sbb
sbb
mov
addb
into
mov
aam
adc
addb
sbb
sbb
sbb
mov
not
sbb
sbb
loop
inc
out
in
add
stos
dec
popa
jmp
aam
adc
xchg
inc
dec
inc
pop
jnp
rcrl
sbb
adc
aam
adc
push
mov
xchg
out
add
aam
adc
mov
bound
sbb
sbb
sub
lret
sub
aam
adc
out
inc
xchg
outsb
push
or
aam
adc
test
cmc
call
sbb
sbb
movsl
dec
push
out
rcl
sbb
sbb
std
xchg
mov
mov
adc
hlt
icebp
mov
jno
push
push
aam
adc
pushf
pop
cmpsl
mov
aam
adc
lret
dec
push
push
dec
rcl
adc
mov
push
mov
sbb
sbb
push
add
sbb
pop
pop
push
xchg
dec
pop
aam
adc
fs
dec
pop
and
div
rcrl
sbb
lcall
aam
adc
test
adc
jo
pop
aam
sbb
sbb
ss
sbb
sbb
dec
subl
mov
cwtl
lods
dec
sahf
ljmp
out
leave
clc
jns
or
aam
adc
cmpsb
and
mov
aam
adc
test
jns
pop
movsl
sbb
sbb
sbb
jge
or
xchg
loop
rcrl
sbb
push
jle
aam
adc
xchg
movsl
scas
sbb
rcrl
sbb
mov
stos
sbb
sbb
sbb
insb
add
sbb
sbb
out
adc
aam
adc
les
xchg
mov
pop
and
sbb
sbb
jecxz
aam
adc
in
and
xchg
jbe
add
sbb
sbb
les
mov
sbb
sbb
mov
sbb
jl
mov
sbb
sbb
testb
mov
push
fisttps
aam
adc
rclb
das
aam
adc
and
add
sbb
ss
rcrl
sbb
xchg
sbb
into
jb
aam
adc
sahf
sqrtps
aad
loopne
aam
adc
ljmp
ret
rcrl
sbb
lods
into
mov
aam
adc
mov
es
adc
rcl
ss
or
sbb
sbb
jge
xchg
lret
jbe
or
mov
add
cld
ss
rcrl
sbb
pushf
sbb
sbb
sbb
mov
aam
adc
xchg
loopne
push
fidivrl
adc
movb
lahf
pop
lret
jecxz
sbb
sbb
sub
add
mov
jecxz
sbb
sbb
push
rcrl
sbb
insb
stc
adc
out
mov
aam
adc
mov
nop
mov
clc
enter
into
out
aam
adc
les
jp
leave
sub
sbb
sbb
mov
mov
sbb
xchg
or
sbb
sbb
in
aam
adc
mov
xchg
sbb
clc
push
aam
adc
or
mov
sbb
jle
add
sbb
sbb
cmp
inc
sbb
sbb
sbb
test
dec
xor
and
sbb
sbb
mov
in
aam
adc
movsb
xor
mov
jecxz
aam
adc
test
add
aam
adc
cmpsb
sti
mov
or
sbb
sbb
push
sbb
mov
adc
test
js
cmp
sbb
sbb
push
push
xor
sbb
sbb
negb
not
sbb
sbb
mov
lahf
pop
loop
rcrl
sbb
add
fidivrs
sbb
sbb
sub
aam
adc
lods
daa
mov
dec
shlb
aam
adc
mov
hlt
or
in
aam
adc
lods
dec
test
rcrl
sbb
out
add
sbb
sbb
adc
mov
adc
pushf
test
not
sbb
sbb
xchg
add
test
add
xchg
repnz
xor
sbb
sbb
and
ljmp
sbb
pop
xor
sbb
sbb
es
aam
adc
mov
test
aam
adc
xchg
nop
mov
xor
sbb
sbb
cmp
or
xchg
popa
inc
inc
dec
jle
or
test
or
rolb
aam
adc
mov
add
rcrl
sbb
jmp
js
mov
sbb
push
inc
adc
adc
lcall
push
aam
adc
lcall
sub
pushf
pusha
xchg
xchg
cwtl
push
add
aam
adc
cwtl
xchg
js
mov
sub
testb
mov
push
cmpsl
aam
sbb
sbb
pop
add
jbe
xor
sbb
sbb
jbe
add
test
add
fidivrs
xor
sahf
or
aaa
mov
sbb
sbb
pop
push
add
sbb
sbb
pop
adc
sbb
sbb
or
sbb
push
ja
rcrl
sbb
sahf
cmp
rcrl
sbb
ss
rcrl
sbb
add
aam
adc
addb
sti
rcrl
sbb
inc
sbb
sbb
sbb
push
pop
adc
fisubl
push
cmpsb
cmp
rcrl
sbb
sahf
sub
sbb
sbb
pop
xor
sbb
sbb
js
mov
adc
cli
xor
sbb
sbb
sbb
out
test
sbb
sbb
scas
rcrl
sbb
sbb
out
adc
adc
and
sub
lods
pushf
adc
adc
mov
push
jle
aam
adc
xchg
mov
cmp
aam
adc
shlb
jmp
jle
sbb
sbb
sbb
pushf
add
xor
mov
mov
fsubs
aam
adc
lods
xor
pop
lods
testb
aam
adc
test
js
repz
fwait
add
sbb
sbb
xchg
aam
adc
cwtl
jns
sub
aam
adc
cmpsb
jae
mov
aam
adc
push
xlat
cmp
push
add
sbb
sbb
jae,pn
aam
adc
enter
rcr
sub
mov
mov
rcrl
sbb
cmp
aam
adc
mov
mov
add
sbb
sbb
mov
loope
aam
adc
lods
lahf
js
or
repz
mov
sahf
xor
sbb
sbb
ss
and
sbb
sbb
ss
sbb
jbe
cmc
rcrl
sbb
mov
popa
or
sbb
sbb
mov
aam
adc
mov
dec
rcl
adc
or
cmp
sbb
sbb
rcrb
aam
adc
cwtl
add
add
lcall
daa
lds
into
and
aam
adc
clc
lock
inc
push
or
sbb
sbb
jne
sbb
adc
sbb
sbb
out
sti
rcrl
sbb
push
add
rcrl
sbb
mov
aam
adc
xchg
popa
inc
inc
dec
ds
rcrl
sbb
sahf
mov
sbb
out
addr16
sbb
sbb
mov
sbb
nop
scas
nop
stc
std
rcrl
sbb
xchg
mov
addl
push
sbb
sbb
sbb
mov
rcrl
sbb
push
xor
aam
adc
test
add
ficoms
call
sbb
sbb
push
sub
aam
adc
stos
imul
sahf
nop
add
sbb
sbb
scas
lods
and
mov
out
nop
sbb
sbb
xchg
add
sbb
sbb
ss
sbb
sbb
sbb
fidivs
sbb
sbb
scas
mov
cli
add
fcomps
inc
mov
sbb
add
sbb
sbb
clc
rcrl
sbb
dec
adc
ss
add
sbb
sbb
inc
lock
rcrl
sbb
mov
sbb
xchg
push
aam
adc
lret
in
scas
cmpsb
and
aam
adc
mov
cmp
cmp
adc
rcrl
sbb
mov
sbb
into
push
clc
rcrl
sbb
ret
sbb
sbb
das
aaa
enter
and
sbb
sbb
xchg
add
sbb
out
adc
sbb
sbb
sahf
clc
jg
sbb
sbb
scas
cmpsb
sbb
sbb
sbb
dec
push
aam
adc
mov
out
and
sbb
sbb
sbb
popa
paddq
sbb
xchg
sbb
dec
dec
adc
adc
ljmp
or
mov
add
cld
jbe
adc
sbb
sbb
jns
divl
sbb
sbb
out
jecxz
sbb
sbb
shl
pusha
push
pop
rcrl
sbb
push
ljmp
div
ret
sub
rcrl
sbb
pop
fildl
aam
adc
xchg
cmpsb
push
jnp
push
popa
rcl
sbb
sbb
push
aam
adc
xchg
ficompl
rcrl
sbb
xchg
rcl
adc
xchg
test
mov
aam
adc
mov
rolb
jbe
sub
sbb
sbb
cs
aam
adc
mov
lods
and
and
rcrl
sbb
sahf
pop
cld
rcrl
sbb
and
xorb
adc
mov
push
and
sbb
sbb
adc
aam
adc
test
add
jbe
sub
sbb
sbb
movb
aam
adc
int3
sbb
negl
aam
adc
xchg
jmp
mov
aam
adc
cs
mov
roll
sbb
sbb
sbb
mov
and
sbb
sbb
push
xor
aam
adc
mov
sahf
pop
aam
adc
lcall
or
mov
rolb
outsb
push
sub
sbb
sbb
scas
and
sbb
sbb
sub
adc
cwtl
add
add
bound
xchg
and
pop
mov
or
sbb
sbb
out
or
sbb
sbb
xchg
inc
int
syscall
aam
adc
test
add
push
xor
enter
outsb
in
or
sbb
sbb
dec
adc
adc
loopne
cmp
testb
sbb
sbb
push
cmp
rcrl
sbb
es
lods
dec
test
rcrl
sbb
mov
aam
adc
scas
sub
fdiv
ss
sbb
int
and
je
rcrl
sbb
jge
popf
leave
push
aas
test
sbb
sbb
mov
xor
test
add
aam
adc
fmulp
or
push
iret
sbb
sbb
sbb
ss
rcrl
sbb
jno
aam
adc
fidivrs
add
stc
rcrl
sbb
mov
shll
sbb
out
lahf
orb
das
aam
adc
and
lea
and
aam
adc
mov
stc
imul
or
sbb
sbb
and
aam
adc
mov
imul
adc
test
add
insb
push
pop
cs
adc
jo
int3
in
mull
adc
or
mov
sahf
and
rcrl
sbb
push
loopne
aam
adc
mov
decl
adc
mov
jle
clc
rcrl
sbb
xor
mov
push
pop
test
aas
test
sbb
sbb
push
jp
bound
or
mov
jp
aam
adc
fcmovbe
jmp
in
inc
sbb
sbb
sbb
push
cmp
xchg
les
scas
add
in
aad
sub
sbb
sbb
pushf
mov
adc
mov
pop
push
adc
sbb
sbb
test
sbb
mov
sbb
out
dec
pop
adc
aam
adc
in
push
add
rcl
adc
mov
or
push
cwtl
rcrl
sbb
push
or
aam
adc
mov
mov
or
sbb
sbb
scas
shll
aam
adc
mov
inc
jbe
in
sbb
sbb
dec
in
fwait
or
add
sbb
sbb
inc
fdivl
sbb
sbb
push
gs
sbb
sbb
ss
rcrl
sbb
fidivrs
sbb
push
insb
rcl
adc
clc
testl
aam
adc
lcall
push
aam
adc
cwtl
add
add
dec
mov
sbb
dec
sub
aam
adc
dec
push
test
lahf
dec
add
sbb
sbb
mov
sub
sbb
sbb
push
xor
sbb
sbb
push
mov
aam
adc
xchg
jg
rcl
clc
xor
sbb
sbb
push
cwtl
add
sbb
sbb
sbb
pop
lock
aam
adc
pop
in
div
sbb
test
add
mov
sbb
push
fwait
sbb
sbb
sbb
mov
cli
pop
push
insl
mov
xchg
rorb
in
aam
adc
mov
mov
out
pop
clc
rcrl
sbb
mov
sbb
sbb
scas
sub
rcrl
sbb
jbe
add
sbb
sbb
jle
add
sbb
sbb
push
into
or
sbb
sbb
pop
add
test
add
push
dec
rcrl
sbb
mov
sbb
push
int
cmpsb
sbb
sbb
sbb
ret
daa
pop
push
xor
sbb
decb
adc
sbb
sbb
push
cli
sbb
sbb
sbb
sahf
mov
sbb
cmpsb
adc
aam
adc
pop
test
xchg
imul
add
add
lahf
or
cwtl
add
add
fisubrs
push
aam
adc
lret
dec
push
push
push
test
sbb
sbb
xor
aam
adc
addb
int3
push
test
rcrl
sbb
fwait
in
xchg
ss
mov
sbb
sbb
push
adc
sbb
decb
rcrl
sbb
stc
or
sbb
sbb
repz
sbb
sbb
into
and
sbb
sbb
inc
fcomps
sbb
sbb
push
aaa
or
mov
addb
int3
pop
pop
call
sbb
sbb
scas
pop
sbb
sbb
sbb
ret
das
aam
adc
xchg
add
push
sub
sbb
sbb
sbb
aam
adc
mov
je
cmp
adc
scas
jb
cli
xchg
sti
rcrl
sbb
lods
not
sbb
sbb
cmpsb
push
add
test
add
mov
xchg
in
test
pop
sbb
sbb
sbb
mov
adc
add
add
xchg
aam
adc
sahf
out
sub
dec
fsubrp
ret
rcrl
sbb
jl
push
mov
sbb
ds
adc
sbb
sbb
dec
fstpt
mov
daa
call
rcrl
sbb
mov
sbb
sahf
dec
xor
imulb
sbb
daa
adc
mov
add
sbb
sbb
add
rcrl
sbb
into
mov
aam
adc
lods
mov
adc
paddq
sbb
xchg
xchg
lcall
sbb
out
aad
sbb
sbb
scas
shll
sbb
sbb
mov
add
sbb
sbb
or
pop
sub
sbb
sbb
push
ret
rcrl
sbb
stc
add
cmpsb
shlb
rcrl
sbb
jbe
or
sbb
sbb
inc
aam
sbb
sbb
ljmp
push
outsl
or
sbb
sbb
int
push
push
push
aam
adc
mov
ss
sbb
sbb
jge
rcrl
sbb
out
or
rcrl
sbb
xor
aam
adc
mov
ja
aam
adc
mov
cmp
mov
sbb
ds
sbb
fdivrs
adc
fld
ljmp
into
loopne
rcrl
sbb
cs
aam
adc
xchg
pop
mov
in
or
test
add
push
adc
aam
adc
mov
out
insl
ret
rcrl
sbb
ss
mov
fcomp
xlat
push
xchg
es
adc
adc
sahf
shrb
in
mov
sbb
sbb
sbb
pop
pusha
xchg
mov
sbb
adc
mov
loop
jmp
add
mov
or
xchg
dec
out
jecxz
sbb
sbb
movb
sbb
sbb
fcmove
movsl
pop
sti
rcrl
sbb
mov
aam
adc
scas
push
xor
pop
aam
adc
fsubrl
adcl
sbb
xchg
sbb
sbb
shrl
and
sbb
sbb
fidivs
xchg
jg
ret
idivb
rcrl
sbb
push
stos
adc
sbb
sbb
xchg
sbb
xor
mov
adc
sub
sahf
std
mov
sbb
sbb
push
aas
add
sbb
sbb
push
mov
aam
adc
push
pop
mov
pop
aam
adc
pop
aad
or
pop
or
in
mov
push
aam
adc
cwtl
mov
es
push
paddq
sbb
lret
aam
fs
sbb
sbb
cmpsl
mov
sbb
sbb
dec
jmp
aam
adc
xchg
push
lods
test
ds
rcrl
sbb
sbb
sbb
sbb
cmpsb
lds
aam
adc
idivb
aam
adc
dec
dec
adc
mov
sbb
sbb
outsb
inc
clc
rcrl
sbb
push
jmp
sbb
dec
cld
rcrl
sbb
hlt
arpl
and
jl
aam
adc
idiv
jp
mov
sbb
sbb
sbb
dec
das
sbb
out
sbb
mov
push
pop
fstpl
adc
cwtl
jle
jns
xchg
push
aam
adc
mov
mov
push
aam
adc
xchg
loope
loop
sahf
lds
aam
adc
loop
mov
rcl
adc
addb
int3
cmpsb
lret
sbb
sbb
es
xchg
add
sbb
sbb
imul
sbb
sbb
push
dec
add
sbb
sbb
jle
sub
sbb
sbb
hlt
or
cli
rcrl
sbb
incl
sbb
sbb
sbb
aam
adc
mov
push
or
sbb
sbb
or
popf
rcl
sbb
sbb
and
aam
adc
lods
dec
cs
rcrl
sbb
sbb
push
mov
sbb
fisubrs
sbb
sbb
sbb
dec
jb
rcrl
sbb
lods
and
rcrl
sbb
jns
sbb
sbb
outsl
xchg
sbb
sbb
test
aam
adc
push
mov
fistpll
adc
repnz
adc
pop
adc
sbb
outsb
xchg
xchg
aam
adc
lock
mov
mov
adc
mov
add
std
inc
mov
adc
xchg
rorb
sub
sbb
sbb
insb
push
cs
into
testb
adc
mov
addb
sahf
xchg
xor
sbb
sbb
xor
addb
int3
xchg
in
push
cmpsl
dec
sbb
sbb
sbb
push
sub
sbb
sbb
mov
rcrl
sbb
sub
jbe
jle
push
aam
adc
xchg
pop
stos
lock
add
test
add
outsb
push
adc
jae
test
ss
aam
adc
imulb
adc
sbb
sbb
es
sbb
sbb
hlt
decb
outsb
mov
rcrl
sbb
mov
adc
pusha
fists
adc
xchg
or
sbb
sbb
ds
aam
adc
add
inc
dec
ljmp
sbb
dec
jg
rcrl
sbb
jp
mov
aam
adc
mov
add
push
scas
movsl
or
sbb
sbb
out
rcl
sbb
sbb
push
jo
rcrl
sbb
xchg
jecxz
sbb
sbb
out
iret
dec
push
icebp
mov
rcrb
add
loopne
lret
decb
sbb
sbb
rcrl
sbb
push
xchg
add
into
fnstenv
or
mov
pushf
lds
ds
sbb
sbb
dec
out
sti
rcrl
sbb
outsb
or
aam
adc
mov
xchg
rcrl
sbb
sbb
sbb
aaa
in
mov
mov
adc
inc
jno
fisubrs
jge
aam
adc
pusha
push
mov
mov
sbb
sbb
out
and
mov
aam
sbb
sbb
push
test
sbb
addr16
sbb
sbb
cmpsb
mov
sbb
jp
rcrl
sbb
mulb
rcrl
sbb
xlat
add
sbb
sbb
ss
adc
cwtl
add
add
es
aam
adc
mov
mov
add
sbb
sbb
scas
es
mov
add
aam
adc
lret
out
aaa
outsb
clc
rcrl
sbb
cs
aam
adc
movsb
out
sbb
xchg
mov
add
test
add
jbe
and
sbb
sbb
push
test
rcrl
sbb
into
iret
xor
sbb
sbb
xchg
adcb
test
roll
cs
jg
mov
sbb
sbb
push
mov
aam
adc
jg
scas
pop
div
add
sbb
sbb
jo
aam
adc
xchg
out
xchg
cmpsb
es
rcrl
sbb
scas
xlat
or
sbb
sbb
mov
shrb
aam
adc
cwtl
dec
sti
inc
pop
cmp
aam
adc
es
leave
xchg
add
ja
aam
adc
cwtl
push
and
sbb
sbb
sbb
mov
push
aam
adc
nop
add
add
scas
fs
sbb
sbb
inc
xor
sbb
jg
mov
rcrl
sbb
dec
or
xchg
sbb
scas
sbb
aam
adc
test
cli
stos
cmp
rolb
aam
adc
les
pop
inc
pop
xchg
sub
sbb
sbb
addr16
sbb
sbb
fdivl
aam
adc
and
push
sub
adc
mov
push
std
add
test
loop,pt
testb
nop
xchg
mov
sbb
movsb
insl
lock
nop
cmp
sbb
imul
cli
rcrl
sbb
cmpsb
and
aam
adc
xchg
mov
movsb
xchg
aam
adc
enter
sub
push
clc
rcrl
sbb
mov
aam
adc
pop
icebp
sub
or
sbb
sbb
and
xchg
ss
sbb
push
paddq
sbb
sbb
cs
sub
jb
add
xchg
push
aam
adc
lcall
cld
rcrl
sbb
sbb
sbb
push
das
test
sbb
sbb
xchg
add
mov
rcrl
sbb
mov
sub
sbb
sbb
jmp
mov
aam
adc
stos
sbb
ja
dec
fstps
aam
adc
pop
mov
add
sbb
sbb
test
sub
sbb
sbb
xchg
sbb
lods
paddq
sbb
fmulp
aam
sbb
sbb
cmpsl
jl
outsb
test
sbb
sbb
or
aam
adc
cwtl
add
add
push
xchg
aam
adc
mov
cli
mov
aam
adc
sbb
fcompl
mov
sbb
scas
mov
aam
adc
mov
add
or
adc
mov
inc
cmp
imul
xchg
in
rcrl
sbb
sahf
mov
aam
adc
repz
push
push
or
aam
adc
xchg
imull
sub
arpl
les
mov
inc
sub
mov
add
std
into
inc
push
aam
adc
pushf
dec
aaa
ja
cs
rcl
adc
sahf
cmp
gs
cs
aam
adc
into
xorps
push
pop
in
push
aam
adc
mov
cs
add
sbb
sbb
ss
clc
rcrl
sbb
mov
xor
mov
scas
sbb
aam
adc
aam
push
mov
aam
adc
add
or
notb
sbb
data16
aam
adc
mov
inc
and
push
aam
adc
mov
das
jae
push
sbb
aam
adc
lcall
stc
rcrl
sbb
xchg
sbb
sbb
sbb
ds
rcrl
sbb
outsb
add
aam
adc
enter
pop
jle
sub
mov
add
cld
jle
not
sbb
sbb
pop
add
sbb
sbb
outsb
sbb
aam
adc
pushf
sbb
test
aam
adc
mov
mov
cli
rcrl
sbb
mov
adc
pushf
aad
inc
inc
out
shrb
aam
adc
faddp
sub
aam
adc
mov
dec
pop
stc
rcrl
sbb
mov
and
sbb
sbb
mov
xor
mov
or
rcrl
sbb
call
sbb
mov
pushf
pop
and
ficoms
aam
adc
addb
int3
xchg
xchg
push
mov
or
sbb
sbb
ss
add
sbb
sbb
repz
sbb
sbb
push
scas
xor
sbb
sbb
add
sbb
sbb
push
push
aam
push
lea
aam
adc
mov
rcrb
rcrl
sbb
inc
js
and
sbb
sbb
sbb
jbe
add
nop
add
add
data16
adc
sbb
sbb
dec
add
cmp
adc
cmp
mulb
sbb
sbb
jle
and
sbb
sbb
jg
aam
adc
xchg
out
xchg
mov
add
mov
call
cli
rcrl
sbb
push
sub
rcrl
sbb
push
dec
clc
rcrl
sbb
inc
jno
aam
adc
xchg
add
jge
aam
adc
test
cmpsb
rcll
aam
adc
ret
rclb
in
aam
adc
mov
push
icebp
and
sbb
sbb
cs
aam
adc
mov
xchg
cld
push
sbb
sbb
xchg
rcrl
sbb
jbe
sub
sbb
sbb
cs
push
aam
adc
push
lahf
ja
cmp
sbb
sbb
xchg
sbb
sbb
aam
adc
clc
pushf
sbb
sbb
in
xchg
testb
addb
int3
cmpsb
or
aam
adc
mov
rcll
sbb
sbb
enter
jle
push
aam
adc
aam
bound
adcb
sbb
xchg
push
push
aam
adc
mov
call
adc
xchg
ljmp
aam
adc
addb
add
sbb
sbb
js
aam
adc
push
cmpsb
mov
push
aam
adc
cwtl
jbe
or
mov
sbb
sbb
push
jge
aam
adc
mov
inc
dec
mov
lcall
aam
adc
mov
inc
cmp
sbb
sbb
outsl
sub
int3
jge
sub
not
or
sbb
sbb
ss
sbb
repnz
sbb
sbb
jae
popa
cmc
jno
rcrl
sbb
mov
rcrl
sbb
out
iret
pop
push
mull
aam
adc
lods
pusha
and
cs
sbb
and
or
sbb
sbb
adc
aam
adc
in
sbb
aam
adc
xchg
dec
and
daa
aam
adc
sahf
iret
adc
fldenv
adc
addb
int3
dec
add
rcrl
sbb
inc
xor
dec
push
shr
je
push
paddq
sbb
es
aam
adc
addb
int3
xchg
in
rcrl
sbb
insb
push
xchg
fistl
xchg
pop
aam
adc
add
popf
loop
push
repz
rcrl
sbb
enter
es
paddq
sbb
mov
daa
aam
adc
test
add
push
sbb
sbb
lods
adc
sbb
sbb
cs
sbb
sbb
dec
in
and
sbb
sbb
inc
jl
aam
adc
inc
stos
int
movsl
js
sbb
sbb
repz
push
push
sbb
rcrl
sbb
jbe
test
sbb
sbb
and
cltd
push
lods
paddq
sbb
out
sbb
sbb
sbb
cmp
sbb
sbb
incb
mov
push
ret
adc
xchg
push
adc
cld
es
adc
sbb
sbb
mul
sub
sbb
sbb
push
xchg
sub
sbb
sbb
pop
sbb
sbb
out
add
sbb
outsb
ret
mov
cmpsb
fs
push
cmpsb
push
test
sbb
jl,pn
aam
adc
mov
add
adc
adc
in
test
pop
push
dec
daa
aam
adc
cmpsb
shrl
rcrl
sbb
sahf
push
sub
sbb
sbb
decb
sbb
inc
bound
sbb
sbb
scas
stc
rcrl
sbb
lahf
cmp
paddq
sbb
call
sbb
xchg
or
sbb
sbb
ds
fidivrl
outsb
or
sbb
sbb
xor
rcrl
sbb
jbe
push
aam
adc
mov
add
add
mov
rcrl
sbb
mov
cmpsb
or
rcrl
sbb
or
aam
adc
mov
add
cld
xchg
aam
adc
and
or
fdivp
rcrl
sbb
mov
add
sbb
sbb
idivb
aam
adc
not
movsl
jns
in
xor
sbb
sbb
push
cld
sub
sbb
sbb
dec
gs
sbb
sbb
lret
mov
cmp
mov
sbb
sbb
cmp
test
sbb
sbb
pop
and
sbb
sbb
push
jae
aam
adc
mov
mov
adc
adc
loop
sub
aam
adc
stos
adc
aam
adc
in
imul
fs
rcrl
sbb
loop
mov
sbb
cmp
cld
rcrl
sbb
mov
roll
scas
add
loop
dec
ret
adc
movsb
insb
mov
jnp
out
cmc
rcrl
sbb
push
jg
aam
adc
mov
imul
mov
jbe
add
aam
adc
pushf
insb
repnz
inc
mov
addb
int3
push
dec
clc
rcrl
sbb
xchg
add
sbb
sbb
push
adc
mov
jecxz
sar
in
aam
adc
ret
push
or
mov
test
add
or
pf2iw
adc
mov
rorl
sub
sbb
sbb
scas
arpl
aam
adc
repnz
int3
orb
outsl
not
sbb
sbb
enter
xchg
sbb
call
es
sbb
sbb
push
and
sbb
sbb
out
enter
adc
nop
movsb
les
pop
ss
sub
sbb
sbb
pop
add
sbb
sbb
jle
and
sbb
sbb
shr
lret
lcall
aam
adc
cwtl
mov
push
into
repnz
in
mov
imul
pusha
jnp
sahf
mov
rcrl
sbb
inc
add
sbb
sbb
xchg
leave
pop
aam
adc
nop
add
add
pop
rcrb
sbb
sbb
mov
sbb
add
shll
sbb
sbb
sbb
lods
or
sbb
sbb
daa
pop
inc
mov
sbb
inc
addl
sbb
sbb
adc
aam
adc
push
add
pop
aam
adc
nop
lds
add
data16
aam
adc
cmpsb
fbstp
ljmp
adc
test
push
add
ret
mov
outsb
sbb
rcrl
sbb
xchg
test
sbb
sbb
into
xor
sbb
sbb
push
and
sbb
sbb
and
jg
mov
aam
adc
sahf
mov
shlb
aam
adc
mov
lock
mov
mov
arpl
movsl
paddq
sbb
xchg
jns
aam
adc
cwtl
lea
or
sbb
or
add
sbb
sbb
sub
sbb
dec
sub
aam
adc
xchg
cmc
mov
sbb
sbb
sbb
ds
sbb
sbb
jecxz
aam
adc
mov
xorl
aam
adc
xchg
aas
sbb
pushf
mov
leave
sub
sbb
sbb
xchg
fsubrs
test
push
inc
lea
adc
addb
int3
mov
aam
adc
ss
add
rcrl
sbb
or
rorl
sbb
sbb
push
outsl
rcl
sbb
sbb
xchg
mov
sbb
mov
rcl
sbb
sbb
pop
add
sbb
sbb
cs
jle
sbb
dec
mov
push
sbb
or
test
add
push
orl
sbb
sbb
sbb
imul
add
sbb
sbb
xchg
aam
adc
mov
add
inc
rcl
adc
xchg
add
mov
rcrl
sbb
enter
stos
adc
adc
pop
sbb
push
ds
rcrl
sbb
in
push
jnp
sti
and
sbb
sbb
push
push
push
aam
adc
mov
cld
jmp
adc
mov
loop
or
lods
paddq
sbb
into
in
add
sbb
sbb
icebp
out
mov
push
push
add
sbb
sbb
es
aam
adc
mov
add
cld
push
sahf
paddq
sbb
cs
sbb
es
sub
sbb
sbb
ljmp
add
add
sbb
stos
aaa
mov
lods
dec
mov
rcrl
sbb
cmpsb
xor
sbb
sbb
out
mov
aam
adc
mov
push
idiv
rcrl
sbb
sub
lds
sbb
sbb
jl
aam
adc
mov
mov
push
stos
sbb
sbb
sbb
cs
sbb
sub
aam
adc
repnz
roll
push
in
aam
adc
addb
push
aam
adc
mov
mov
and
sbb
sbb
ss
sbb
sbb
ss
dec
dec
cs
push
aam
adc
mov
aas
sub
dec
push
aam
adc
test
arpl
or
sbb
sbb
dec
popa
and
sbb
sbb
sahf
xchg
add
sbb
sbb
jle
rcl
adc
inc
adc
test
sbb
sbb
inc
xor
sbb
sbb
and
aam
adc
xchg
out
pop
jge
adc
rcrl
sbb
push
mov
aam
adc
lods
rorb
cmpsl
mov
xchg
rcrl
sbb
ss
sbb
dec
nop
jecxz
sbb
sbb
jle
add
or
aam
adc
mov
add
cld
test
sbb
sbb
inc
sbb
sbb
sbb
out
aas
cli
rcrl
sbb
mov
or
sbb
cmp
sub
pusha
out
mov
aam
adc
jp
and
scas
inc
call
sbb
sub
sbb
lods
loope
and
sbb
sbb
loop
aam
adc
cmpsb
and
add
rcrl
sbb
mov
xor
sbb
sbb
jbe
jne
mov
addb
int3
outsb
and
rcrl
sbb
push
sub
sbb
sbb
push
jne
rcrl
sbb
mulb
rcrl
sbb
out
inc
sbb
sbb
sbb
es
paddq
sbb
cmpsb
loope
aam
adc
mov
imul
loope
outsb
mov
sbb
sbb
outsb
sbb
rcrl
sbb
xchg
push
sbb
mov
sbb
sbb
sbb
pop
push
enter
pop
aam
adc
add
add
notl
dec
adc
sbb
sbb
ss
sbb
push
adc
sbb
dec
lret
sub
sbb
sbb
push
lahf
paddq
sbb
ss
rcrl
sbb
or
rcrl
sbb
pop
jg
mov
xchg
rcrl
sbb
pop
testb
dec
clc
rcrl
sbb
pop
dec
and
jbe
loop
movsbl
sbb
sbb
sbb
mov
ss
sbb
sbb
idivb
sbb
mov
sbb
nop
or
sbb
sbb
sbb
imul
mov
add
aam
adc
or
test
aam
adc
mov
mov
std
rcrl
sbb
fistpl
aam
adc
test
cwtl
sub
sbb
sbb
jle
sbb
sbb
sbb
push
rcrl
sbb
sbb
xor
aam
adc
scas
jno
test
notb
sub
mov
or
sbb
sbb
xabort
rcrl
sbb
mov
mov
dec
out
adc
fisttpl
sbb
sbb
sbb
mov
aam
adc
addb
int3
push
mov
aam
adc
xchg
cmp
push
jle
mov
sbb
pop
sub
sbb
sbb
push
popf
sub
sbb
sbb
dec
xchg
xor
sbb
sbb
push
pushf
mov
addb
int3
xchg
call
sbb
sbb
sahf
lret
jle
sbb
sbb
sbb
pop
xor
sbb
sbb
loope
add
rcrl
sbb
pop
pop
and
sbb
sbb
and
add
test
add
inc
not
sbb
sbb
mov
sbb
sbb
sbb
addb
rcrl
sbb
xor
rcrl
sbb
push
in
aam
adc
addb
adc
adc
mov
pop
pop
add
push
aam
adc
mov
push
repz
xchg
les
jbe
aam
adc
nop
arpl
mov
aam
adc
cwtl
mov
push
shll
call
sbb
sbb
push
insb
sub
sbb
sbb
sub
aam
shl
rcrl
sbb
sub
sub
sbb
sbb
hlt
sbb
sbb
sbb
stos
mov
push
aam
adc
cwtl
adc
not
sbb
sbb
idivb
aam
adc
lock
xchg
scas
lret
fmulp
and
sbb
sbb
int
popf
xchg
pop
add
sbb
sbb
popa
xor
sbb
sbb
jbe
push
aam
adc
shlb
test
mov
sbb
notb
sbb
jb
rcr
sub
sbb
sbb
out
sub
aam
adc
sahf
fisubrs
adc
adc
mov
andl
adc
lret
in
scas
int
aam
adc
xchg
dec
int
shrb
adc
xchg
fdivrs
or
sbb
sbb
push
xor
adc
adc
repnz
push
je
sahf
push
test
sbb
sbb
pop
pop
aam
adc
xor
jl
divl
xchg
add
sbb
sbb
inc
cmp
mov
xchg
sbb
sbb
into
adc
rcrl
sbb
push
dec
adc
sbb
sbb
dec
repz
sbb
sbb
cwtl
sub
mov
xor
aam
adc
mov
adc
aam
adc
mov
loop
aam
adc
lods
sub
mov
dec
mov
sbb
sub
aam
adc
nop
js
scas
lret
sub
movsb
pop
out
sub
push
iret
rcl
sbb
sbb
add
aam
adc
mov
cmp
aam
adc
out
push
push
dec
cs
and
sbb
sbb
mov
add
test
add
pop
sbbb
sbb
sbb
fidivrs
aam
adc
les
popf
sbb
lcall
push
aam
adc
test
in
stos
out
cmpsl
sti
rcrl
sbb
movsb
xor
push
sbb
loopne
cmpsl
leave
mov
sbb
sbb
sti
or
aam
adc
stos
inc
xchg
out
aam
adc
imulb
xchg
add
sbb
sbb
push
out
aam
adc
mov
add
aam
adc
mov
ds
mov
sbb
sbb
mov
sub
sbb
sbb
divb
pop
aam
adc
repnz
sbb
sbb
jbe
adc
mov
mov
aam
adc
mov
jl
es
rcl
sbb
sbb
ds
rcrl
sbb
cmpsb
mov
aam
adc
rclb
pop
ret
mul
push
aam
adc
cwtl
add
add
push
fs
sbb
sbb
dec
fcmovnbe
rcrl
sbb
in
jbe
mov
cmp
rcrl
sbb
mov
rcl
sbb
sbb
or
dec
fs
aam
adc
scas
dec
mov
aam
adc
mov
out
out
add
aam
adc
nop
movsb
les
pop
xchg
xor
sbb
sbb
mov
aam
adc
mov
add
cld
jbe
sbb
sbb
sbb
add
sbb
sbb
sbb
cmpsb
sub
fcompl
or
sbb
sbb
jle
sbb
sbb
sbb
push
std
rcrl
sbb
sub
sbb
sbb
xchg
mov
rcrl
sbb
fwait
in
into
insb
in
sbb
sbb
xor
sbb
sbb
mov
aam
adc
push
xor
xor
jbe
sub
sbb
sbb
pop
add
mov
test
pop
push
js
aam
adc
jo
xchg
loope
pop
add
aam
adc
mov
jae
fiaddl
adc
rcrb
add
test
add
out
sub
aam
adc
mov
push
rcl
rcrl
sbb
cmc
pop
lds
push
aam
adc
mov
sub
pop
daa
aam
adc
lods
and
sbb
sbb
sbb
xchg
inc
and
sbb
sbb
fstpl
aam
adc
test
add
aam
adc
test
ret
out
call
sbb
sbb
xchg
sbb
aam
adc
mov
ds
push
aam
adc
sahf
xchg
add
mov
adc
rcrl
sbb
es
sbb
jecxz
rcrl
sbb
pop
push
loopne
testb
aam
adc
xchg
pop
pop
jge
mov
push
aam
adc
mov
add
add
test
sbb
sbb
push
iret
and
sbb
sbb
scas
pop
and
sbb
sbb
jmp
aam
adc
lcall
pop
aam
adc
xor
push
sbb
aam
adc
mov
out
cs
adc
ret
inc
mov
jne
rcrl
sbb
push
test
rcrl
sbb
cmpsb
cmp
cs
dec
ret
push
and
sbb
sbb
je
insl
pop
fimuls
aam
adc
movsb
mov
mov
lahf
rcl
adc
out
call
and
sbb
or
sbb
sbb
pop
mov
sbb
adc
mov
hlt
mov
sbb
sbb
lods
jge
sub
xor
cld
xchg
test
xchg
out
not
sbb
sbb
mulb
sbb
dec
es
adc
or
scas
sub
adc
nop
movsb
les
mov
aam
adc
mov
mov
sbb
sbb
test
pop
jbe
sbb
sbb
inc
xor
aam
adc
push
out
jecxz
dec
inc
ljmp
icebp
xchg
jae
movl
test
add
aam
adc
mov
jge
rcrl
sbb
jle
xor
sbb
sbb
pop
xor
sbb
sbb
push
inc
adc
adc
mov
add
aam
adc
pusha
push
fucom
mov
rcrl
sbb
scas
push
rcrl
sbb
mov
aam
adc
dec
movb
rcrl
sbb
data16
rcrl
sbb
in
adc
adc
scas
xchg
push
sahf
outsl
mov
sbb
sbb
sub
or
aam
adc
test
add
dec
or
sbb
sbb
jle
or
sbb
sbb
inc
add
leave
arpl
sbb
sbb
xchg
adc
sbb
sbb
sahf
jne
aam
adc
cmp
xchg
rcrl
sbb
and
sar
into
ret
sbb
sbb
loopne
aam
adc
cli
xor
adc
adc
dec
xor
push
jbe
aam
sbb
sbb
xchg
and
sbb
sbb
push
mov
aam
adc
mov
out
adc
adc
loopne
push
loope
mov
adc
nop
inc
rcrb
enter
aam
adc
pushf
sahf
sub
aam
adc
ret
rcll
std
rcrl
sbb
pop
int
or
push
aam
adc
sbb
and
in
aam
adc
mov
jbe
push
aam
adc
repnz
adc
aam
adc
pop
outsb
lea
push
or
test
add
out
pop
aam
adc
test
adc
mov
push
cmp
push
ds
sbb
sbb
add
push
aam
adc
movsb
dec
sub
add
popl
aam
adc
xchg
insl
push
aam
adc
in
xor
sahf
push
loope
aam
adc
les
pusha
adc
sbb
sbb
pop
xor
aam
adc
mov
push
rcrl
sbb
sbb
pop
out
aam
adc
or
and
cli
mov
adc
pusha
mov
xor
js
mov
xchg
les
aam
adc
pushf
mov
inc
sub
sbb
sbb
mov
rcrl
sbb
fisubs
sbb
shll
sbb
sbb
add
xchg
push
sbb
sbb
fistl
fimuls
and
sbb
sbb
es
aam
adc
mov
out
rcrl
sbb
les
aam
adc
lcall
in
sbb
sbb
mov
aam
adc
xchg
dec
adc
sbb
sbb
dec
xor
sbb
sbb
inc
jnp
aam
adc
stos
xor
pop
mov
cmp
rcrl
sbb
outsb
ficompl
sbb
sbb
out
add
sbb
sbb
push
das
add
mov
xor
inc
mov
aam
adc
mov
inc
mov
sbb
and
cld
xor
adc
mov
cmpl
adc
ds
mov
push
dec
clc
rcrl
sbb
push
adc
sbb
outsb
es
scas
jae
xor
sbb
sbb
push
dec
clc
rcrl
sbb
pop
or
lret
es
test
aam
adc
mov
idivb
aam
sbb
sbb
scas
outsl
push
aam
adc
lcall
push
aam
adc
add
or
aam
adc
mov
call
adc
mov
add
sbb
sbb
jg
adc
push
mov
sbb
ss
aam
adc
cwtl
add
add
scas
push
add
sbb
sbb
xchg
int
aam
adc
mov
stos
test
xor
rcrl
sbb
push
sahf
mov
xchg
shrb
shrb
aam
adc
test
add
aam
adc
nop
arpl
mov
aam
adc
loop
stos
shll
sbb
sbb
pop
sahf
and
sbb
sbb
jbe
and
testb
nop
push
sbb
aam
adc
xchg
push
fldcw
pop
adc
sbb
aas
add
cmp
int
inc
xchg
xchg
adc
adc
and
andb
mov
aam
adc
addb
int3
push
push
and
sbb
sbb
xchg
aam
adc
xchg
xchg
scas
cmc
jp
cmc
or
lret
dec
push
push
cmp
aam
adc
fdivs
xchg
pop
aam
adc
mov
or
negb
sbb
mov
sbb
sbb
sbb
mov
adc
sbb
sbb
ss
std
rcrl
sbb
push
add
sbb
scas
fcompl
aam
adc
aam
icebp
jle
ss
aam
adc
mov
call
or
sbb
sbb
imul
sub
sbb
sbb
iretw
not
sbb
sbb
add
icebp
sbb
lcall
add
ret
sbb
sbb
sbb
mov
aam
adc
mov
cmp
ret
adc
test
add
sbb
rcrl
sbb
into
lds
xchg
popa
inc
inc
dec
ss
aam
adc
lcall
adc
int3
mov
test
mov
mov
or
mov
push
mov
sbb
sbb
ss
sbb
arpl
idivb
adc
mov
sbb
aam
adc
cwtl
add
add
sbb
test
add
out
adc
sbb
sbb
imul
push
aam
adc
cwtl
jbe
sbb
cmpsb
inc
test
sbb
sbb
xor
xchg
psubw
sbb
sbb
sti
add
pushf
mov
aam
adc
nop
iret
jmp
add
popl
aam
adc
xchg
mov
sbb
push
pop
enter
aam
adc
addb
int3
mov
aam
adc
fdivr
lods
dec
xchg
sbb
sbb
sbb
mov
cli
rcrl
sbb
push
lock
inc
add
test
add
dec
leave
add
sbb
sbb
cs
rcl
adc
cwtl
xorl
sbb
mov
aam
sbb
sbb
mov
sbb
sub
mov
rolb
push
mov
sbb
notb
rcrl
sbb
cs
adc
addb
adc
sbb
sbb
sti
sahf
jbe
mov
sbb
xor
sub
sbb
sub
sbb
das
rorl
idivb
sbb
xchg
sbb
sbb
xchg
push
or
ret
adc
sahf
fidivs
sbb
sbb
mov
add
xchg
mov
enter
xor
adc
mov
add
add
adc
nop
inc
cmpsl
into
push
sbb
rcrl
sbb
push
mov
rcrl
sbb
fwait
or
dec
jmp
pop
aam
adc
nop
in
mov
push
aam
adc
dec
xchg
xchg
adc
fsubrs
or
sbb
ds
aam
adc
mov
jle
paddq
sbb
mov
or
sbb
sbb
data16
xchg
sbb
sbb
mov
jne
outsb
repz
sbb
sbb
neg
adc
sbb
sbb
cwtl
xor
sbb
sbb
test
rcrl
sbb
fs
xchg
sbb
adc
mov
mov
adc
mulb
cmp
mov
aam
adc
xchg
loope
push
mov
fmuls
aam
adc
mov
add
add
mov
sbb
movsl
data16
sbb
sbb
mov
add
sbb
sbb
push
mov
sbb
out
rcrl
sbb
jae
aam
adc
sub
mov
sbb
faddp
mov
cmpsb
inc
pop
and
ss
aam
adc
pushf
fnstenv
sub
sbb
sbb
jmp
aam
adc
xchg
in
xlat
adc
adc
mov
in
mov
push
sbb
sbb
sbb
jo
icebp
dec
outsb
pop
cs
adc
mov
or
xchg
lds
aam
adc
pushf
insl
lret
into
fsubrs
aam
adc
mov
scas
dec
and
sbb
sbb
sahf
je
rcrl
sbb
push
add
sbb
ret
sbb
sbb
into
lods
xor
sbb
sbb
cs
sbb
sbb
sbb
pop
sub
sbb
sbb
ss
rcrl
sbb
fidivs
aam
adc
addb
int3
jbe
sbb
sbb
sbb
out
aam
adc
xchg
inc
xchg
mov
aam
adc
lock
test
sbb
sbb
push
loop
pop
into
cmpsb
add
sbb
sbb
mov
or
imull
xor
xor
sbb
sbb
inc
cmp
xchg
push
aam
sbb
sbb
or
adc
lcall
or
sbb
sbb
mov
adc
mov
add
cmp
adc
les
lock
aam
adc
cwtl
imul
sbb
into
jne
rcrl
sbb
scas
in
rcrl
sbb
outsb
jecxz
aam
adc
mov
push
clc
rcrl
sbb
inc
cmp
sbb
ss
outsl
jmp
cmp
aam
adc
pop
add
or
nop
fldl
loopne
adc
aam
adc
cwtl
popf
cmp
xchg
adc
sbb
sbb
imul
rcrl
sbb
out
sbb
sbb
sbb
mov
and
lcall
sbb
sbb
jbe
or
stos
addr16
inc
cs
sbb
loop
pop
push
into
lcall
add
or
lcall
sub
sbb
sbb
push
sub
sbb
sbb
sahf
xlat
mov
addb
int3
incb
aam
adc
ret
jnp
neg
sub
sbb
sbb
loopne
jnp
sbb
rcrl
sbb
ds
adc
adc
xor
aad
cmp
sbb
sbb
dec
in
sbb
sbb
adc
aam
adc
mov
incl
cs
adc
in
outsl
push
les
or
rcrl
sbb
jbe
cld
rcrl
sbb
cmpsb
cmp
sbb
sbb
addr16
test
push
pop
add
sbb
sbb
rcll
aam
adc
mov
rorl
aam
adc
mov
jl
pop
fidivl
sbb
sbb
pop
sub
sbb
sbb
addl
xchg
decl
pop
aam
adc
mov
jge
mov
sbb
sbb
jb
aam
adc
mov
jbe
not
sbb
sbb
outsb
and
rcrl
sbb
jno
add
rcrl
sbb
scas
arpl
int3
dec
push
adc
addr16
clc
leave
xchg
xor
repz
sbb
sbb
aam
aam
adc
mov
cmp
ja
aam
adc
mov
push
adc
sbb
jbe
sbb
outsb
push
adc
sbb
sbb
mov
sbb
mov
push
aam
adc
mov
rolb
push
pop
rcl
sbb
sbb
cmp
aam
adc
xchg
cwtl
add
sti
cmpsb
mov
sbb
paddq
sbb
adcb
push
ret
adc
rcrl
sbb
xchg
pop
aam
adc
les
mov
sbb
sbb
cmp
aam
adc
pushf
xchg
les
aam
adc
mov
inc
pop
push
aam
adc
sahf
in
push
stc
mov
ret
rcrl
sbb
mov
sbb
mov
cmc
rcrl
sbb
mov
ss
sub
sbb
sbb
push
inc
clc
rcrl
sbb
xchg
mov
sbb
mul
adc
adc
lock
in
outsb
dec
das
and
sbb
sbb
push
jb
rcrl
sbb
sahf
mov
sbb
cmpsb
and
aad
imul
sbb
sbb
jecxz
add
aam
adc
mov
divb
sbb
push
lods
adc
sbb
sbb
fwait
and
rolb
pf2iw
adc
mov
cmp
rcrl
sbb
subb
sbb
sbb
popa
sbb
sbb
sbb
push
inc
rcrl
sbb
sbb
rcrl
sbb
cwtl
adc
sbb
sbb
dec
and
sbb
sbb
scas
inc
fstenv
add
sbb
sbb
or
mov
sbb
sbb
jl
rcrl
sbb
xchg
aam
adc
or
aad
aam
adc
cmpsb
xor
push
pop
aam
adc
cwtl
sub
lods
xchg
outsb
sti
jbe
sbb
sbb
xchg
jp
out
add
test
add
push
add
sbb
sbb
call
xor
sbb
sbb
and
aam
adc
xchg
add
js
xchg
add
test
add
jne
aam
adc
js
dec
cmpsb
sahf
push
and
rcrl
sbb
push
scas
not
sbb
sbb
and
dec
mov
push
sbb
dec
xchg
xchg
aam
adc
mov
loopne
inc
cs
sbb
push
jae
rcrl
sbb
cmpsb
adc
sbb
sbb
lahf
sub
sbb
sbb
sahf
or
aam
adc
cmp
push
xor
cmp
sbb
push
call
sbb
out
mov
sbb
out
fidivrs
aam
adc
idivb
sarb
adc
sub
and
je
movsl
add
sahf
ljmp
aam
adc
xchg
pop
scas
xchg
into
jmp
aam
adc
les
jp
out
cld
rcrl
sbb
push
stos
sub
sbb
sbb
dec
pop
sbb
sbb
sbb
cmp
lock
rcl
sbb
sbb
mov
or
push
xor
sbb
sbb
cmpsb
les
sbb
sbb
icebp
adc
sbb
sbb
push
daa
sub
sbb
sbb
mov
paddq
sbb
or
sbb
out
and
sbb
sbb
fildl
lcall
stc
rcrl
sbb
loop,pn
aam
adc
mov
jne
and
and
sbb
sbb
fnsave
add
sbb
sbb
push
mov
scas
adc
xchg
dec
inc
xchg
not
sbb
sbb
fdivl
mov
xor
not
sbb
sbb
cmpsb
clc
rcrl
sbb
jo
lret
cwtl
rcrl
sbb
into
cmp
sub
or
sbb
sbb
jle
push
aam
adc
lcall
adc
sbb
sbb
mov
sub
sbb
sbb
fwait
cld
rcrl
sbb
and
in
js
sub
push
add
sbb
sbb
xor
sbb
hlt
aas
xchg
sti
data16
xchg
aam
adc
fiaddl
mov
push
test
sbb
aaa
daa
aam
adc
add
out
lods
dec
cmp
aam
adc
xchg
add
sub
adc
movsb
adc
push
clc
rcrl
sbb
push
rorl
adc
mov
divb
test
sbb
sbb
dec
jb
mov
sbb
sbb
and
mov
sbb
sbb
cld
dec
ja
mov
and
sbb
sbb
lods
push
aam
adc
sahf
ficoml
push
repnz
pushf
iret
xor
and
adc
mov
add
cld
push
jns
aam
adc
push
jmp
out
sbb
rcrl
sbb
ss
adc
imul
sbb
push
adc
aam
adc
xchg
xchg
cmp
xor
sbb
sbb
dec
adc
sbb
sbb
jbe
add
mov
addr16
addb
sbb
jbe
adc
sbb
sbb
es
sbb
ds
xchg
aam
aam
adc
scas
int3
sbb
out
sbb
sbb
sbb
divb
mov
sbb
and
insb
imul
xchg
rcl
adc
xchg
test
jmp
aam
adc
test
hlt
xchg
or
adc
int3
outsb
popf
xchg
adc
sbb
sbb
scas
cmp
rcrl
sbb
shll
scas
sub
aam
adc
addb
es
adc
or
int3
outsb
popf
sub
sbb
sbb
mov
mov
addb
int3
push
clc
cld
rcrl
sbb
dec
add
sbb
sbb
ss
sbb
xor
sbb
sbb
sbb
ds
sub
sbb
sbb
outsl
insb
or
scas
js
rcrl
sbb
fidivrs
rcrl
sbb
mov
lods
das
aam
adc
push
shrb
sbb
sbb
jmp
jle
ss
push
aam
adc
sahf
int3
push
push
icebp
out
mov
sub
xchg
sub
negb
sbb
sbb
sbb
std
aam
data16
jle
aam
adc
mov
push
adc
aam
adc
lcall
sub
sbb
sbb
dec
sbb
sbb
sbb
cmp
aam
adc
adc
fisttps
mov
xor
rcrl
sbb
push
xchg
andl
cltd
xchg
loopne
ds
rcrl
sbb
xlat
push
sbb
test
add
mov
and
sbb
sbb
push
cmpsb
cmp
rcrl
sbb
cmpsl
jno
xchg
data16
adc
sbb
sbb
cs
sbb
sbb
scas
jne
rcrl
sbb
scas
fdivr
rcrl
sbb
rcrb
pusha
daa
aam
adc
fmul
out
push
nop
xchg
and
rcrl
sbb
push
xchg
or
sbb
sbb
into
not
sbb
sbb
push
test
sbb
sbb
xchg
not
sbb
sbb
out
or
sbb
sbb
jbe
sbb
jbe
xor
mov
jb
lahf
xchg
rcrl
sbb
mov
adc
das
pusha
dec
xchg
push
aam
adc
mov
es
daa
aam
adc
xchg
xor
push
aam
adc
mov
inc
cld
cld
push
iret
and
sbb
sbb
cmp
aam
adc
call
outsl
rcl
adc
es
into
inc
data16
add
aam
adc
cwtl
xor
push
add
sbb
sbb
sub
aam
adc
call
push
push
push
aam
adc
xchg
cmpsb
loop
daa
lods
xor
sbb
sbb
pop
rcrl
sbb
ds
daa
aam
adc
xchg
je
cmp
push
add
test
add
mov
mov
jo,pt
rcrl
sbb
mov
aam
adc
loopne
movsl
inc
pop
jbe
push
aam
adc
xor
fsubl
out
lret
or
sbb
sbb
iret
mov
adc
sbb
sbb
mov
rcrl
sbb
popf
popa
cmpb
adc
addb
int3
mov
sbb
ss
cld
rcrl
sbb
and
sbb
xchg
xchg
and
sbb
sbb
xchg
jg
sbb
sbb
fcoms
sbb
sbb
sbb
mov
dec
std
rcrl
sbb
sti
xor
adc
adc
lock
adc
stc
rcrl
sbb
inc
sub
aam
adc
mov
jmp
in
sbb
sbb
xor
rcrl
sbb
dec
and
aam
adc
add
cmp
sbb
mov
aam
adc
mov
mov
adc
nop
jmp
les
mov
mov
clc
rcrl
sbb
mov
dec
fadds
adc
sub
les
outsb
jle
aam
adc
cmp
xchg
ljmp
adc
out
into
mov
sub
mov
mov
adc
adc
sarb
scas
not
sbb
sbb
push
mov
rcrb
leave
fmulp
not
sbb
sbb
ljmp
mov
rcrb
sbb
sbb
dec
cmp
aam
adc
mov
cmp
sbb
sbb
pop
pop
aam
adc
test
add
aam
adc
sahf
dec
shlb
adc
cs
adc
lods
jmp
cmp
rcrl
sbb
cld
outsb
jb
mov
rcrl
sbb
outsb
les
sbb
sbb
outsb
pop
sub
sbb
sbb
jge
aam
adc
mov
scas
inc
sbb
rcll
sbb
sbb
lock
shl
mov
sbb
sub
rclb
shrl
aam
adc
ret
sarl
adc
cmp
mov
movsb
xchg
rcl
sbb
sbb
jg
fadd
push
loop
aam
adc
or
dec
sub
out
ss
mov
mov
add
sbb
sbb
sahf
xor
aam
adc
mov
into
adc
sbb
sbb
in
inc
aas
popf
push
aam
adc
push
xchg
sbb
push
or
les
nop
call
sbb
sbb
rcrl
dec
pop
add
sbb
sbb
into
adc
lret
or
js
aam
adc
nop
pop
push
cld
fsubp
push
aam
adc
push
mov
cwtl
mov
paddq
sbb
les
ret
nop
loope
lret
sbb
sbb
repz
sbb
sbb
notb
push
aam
adc
cwtl
add
add
testb
mov
bound
test
sbb
imul
sbb
sbb
dec
in
rcrl
sbb
orl
aam
adc
cwtl
jb
mov
cmpsb
stos
ret
adc
nop
fdiv
outsb
mov
pushf
adc
adc
scas
pop
pusha
push
pop
into
xor
aam
adc
pop
aad
fdivr
movhlps
sbb
sbb
pop
pop
and
dec
push
aam
adc
mov
and
rcrl
sbb
sahf
push
add
sbb
sbb
push
mov
sbb
pop
pop
sub
sbb
push
mov
dec
shll
sbb
sbb
fisttps
and
sbb
sbb
push
mov
sbb
sbb
cmpsb
adc
aam
adc
mov
inc
cmp
mov
sbb
outsl
or
mov
add
aam
adc
mov
jge
stos
mov
rcrl
sbb
push
fidivs
sbb
sbb
mov
in
sbb
sbb
add
repnz
jno
aam
adc
cwtl
mov
test
rcrl
sbb
inc
aaa
inc
dec
js
aam
adc
cwtl
mov
push
pop
aam
adc
xchg
mov
cld
clc
rcrl
sbb
xor
xchg
ds
sbb
sbb
fwait
mov
aam
adc
mov
cld
decl
not
sbb
sbb
jle
rcrl
sbb
fimuls
sbb
sbb
lods
sbb
jl
sub
sbb
lods
cltd
adc
aam
adc
xchg
stc
sahf
dec
aad
aam
adc
mov
or
rcrl
sbb
movb
fisttpl
mov
aam
adc
ss
hlt
mov
sbb
sbb
cs
neg
adc
mov
outsb
imul
sbb
sbb
ret
inc
mov
adc
addb
add
xchg
aam
adc
mov
cmp
aam
adc
xchg
pushf
in
repz
adc
rcrl
sbb
xchg
sbb
sbb
lahf
xorl
in
out
imulb
aam
adc
lcall
sbb
xchg
or
js
out
add
sbb
sbb
jbe
add
test
add
add
push
rcl
adc
test
add
or
adc
test
add
ss
aam
adc
addb
or
cwtl
add
add
scas
push
aam
adc
xor
fsubrs
cmpsb
inc
ret
adc
movsb
insb
mov
jnp
cmc
cli
rcrl
sbb
pop
les
sbb
sbb
daa
rcl
adc
add
sti
xor
sub
aam
adc
out
mov
out
lret
cmc
rcrl
sbb
cmp
flds
and
sbb
sbb
ss
and
sbb
sbb
loopne
push
adc
xor
sbb
sbb
push
ja
fistl
or
sbb
sbb
or
aam
adc
mov
add
cld
mov
and
shrb
test
and
sbb
sbb
cmp
aam
adc
mov
push
jmp
aam
adc
movsb
das
stos
dec
add
adc
mov
inc
jnp
push
push
aam
adc
stos
mov
cli
rol
scas
sbb
sbb
sbb
mov
adc
push
fs
sbb
sbb
out
pop
adc
test
ljmp
sbb
sbb
stos
cltd
push
sar
rcrl
sbb
mov
sbb
sbb
icebp
into
push
xor
sbb
sbb
jbe
sub
sbb
sbb
push
mov
dec
or
aam
adc
rclb
adc
aam
adc
sbb
sbb
outsb
push
aad
sbb
sbb
xchg
rcr
stc
rcrl
sbb
inc
cmp
push
push
add
sbb
sbb
xchg
mov
sbb
jbe
sbb
sbb
sbb
mov
adc
mov
push
inc
mov
mov
sbb
loop
aam
adc
nop
add
loopne
cmp
rcrl
sbb
xchg
adc
sbb
sti
or
lock
sbb
sbb
pop
lock
sbb
sbb
cld
xor
sbb
sbb
mov
rcl
adc
test
add
push
sbb
sbb
fidivs
sbb
notb
aam
adc
mov
std
jmp
iret
sbb
sbb
sbb
es
and
ret
push
in
and
rcrl
sbb
push
lods
mov
scas
sbb
adc
out
sub
rcrl
sbb
mov
sub
xlat
frstor
gs
sbb
sbb
data16
aam
adc
mov
push
pop
idivb
adc
sbb
sbb
jbe
add
sbb
sbb
xchg
fmull
sbb
sbb
push
mov
rcrl
sbb
xchg
pop
pop
aam
adc
sbb
rcrl
sbb
pop
repz
pop
aas
sbb
sbb
sbb
sahf
fnstcw
addb
int3
push
imulb
aam
adc
mov
out
adc
cmpsb
call
paddd
sbb
sbb
ja
xchg
jle
pop
adc
xchg
cmc
int
sbb
adc
mov
add
sub
pop
adc
adc
add
shlb
repnz
lcall
sbb
sbb
sbb
push
push
rcrl
sbb
adc
push
and
push
outsb
sbb
aam
adc
mov
pop
push
jns
xchg
ret
rcrl
sbb
adc
and
sbb
sbb
adc
aam
adc
enter
mov
mov
sbb
hlt
add
ljmp
mov
rcrl
sbb
push
or
test
add
aaa
adc
sbb
sbb
jno
jp
mov
sbb
out
and
rcrl
sbb
push
and
mov
sbb
negb
add
test
add
jbe
sbb
sbb
sbb
push
push
pop
aam
adc
jb
aam
lahf
jle
adc
sbb
add
sbb
sbb
es
sbb
outsl
sbb
sbb
sbb
xchg
add
sbb
sbb
xchg
sbb
sbb
stos
into
push
lret
cs
rcl
sbb
sbb
push
or
les
jp
outsb
and
and
rcrl
sbb
sub
aam
adc
test
add
or
in
aam
adc
stos
mov
adc
rcrl
sbb
push
pop
adc
sbb
sbb
in
mov
aam
adc
jl
scas
repnz
adc
sbb
sbb
dec
xchg
aam
adc
mov
push
mov
sbb
out
ljmp
sbb
sbb
xchg
dec
push
fisubrs
rcrl
sbb
es
outsb
ficoms
sbb
mov
sbb
sbb
add
sbb
sbb
sub
rcrl
sbb
inc
push
aam
adc
xchg
out
xchg
dec
stc
rcrl
sbb
nop
adc
je
ret
sbb
sbb
sbb
dec
pushf
add
rcrl
sbb
xor
aam
adc
mov
pop
adc
sbb
sbb
scas
sbb
xchg
out
xchg
ds
adc
adc
sub
sar
or
std
rcrl
sbb
cmpsb
sub
sbb
sbb
ss
rcrl
sbb
arpl
cwtl
add
add
push
adc
sbb
push
jno
rcrl
sbb
cs
add
mov
jle
adc
sbb
sbb
jbe
mov
sbb
sbb
pop
xor
rcrl
sbb
xchg
stos
fs
pop
push
aam
adc
cwtl
hlt
loop
incl
and
sbb
sbb
fs
sub
fcompl
aam
adc
ret
adc
lret
sbb
sbb
sbb
ss
sbb
push
aaa
mov
rcrl
sbb
mov
aam
sbb
sbb
movsl
jecxz
sbb
sbb
or
rcl
sbb
sbb
data16
sbb
sbb
out
addl
addb
clc
rcrl
sbb
inc
push
ret
adc
inc
in
cltd
pusha
cmpsb
mov
aam
adc
push
pushf
rcrb
sbb
sbb
sahf
cmp
lods
fidivs
pushf
scas
mov
sbb
mov
sbb
or
das
xchg
fdiv
rcrl
sbb
xchg
mov
sbb
sbb
mulb
sbb
sbb
out
mov
add
sbb
mov
adc
mov
or
aam
adc
test
add
imulb
sbb
les
sbb
and
sbb
sbb
xchg
sbb
sbb
sbb
outsb
fimuls
aam
adc
lcall
sti
rcrl
sbb
les
aam
adc
scas
dec
fwait
lock
inc
xchg
ret
rcrl
sbb
jae
insl
cmpsb
adc
sbb
sbb
lock
sbb
sbb
outsb
cmp
ss
add
test
add
cld
lretw
add
sbb
sbb
sub
sbb
mov
sub
sbb
sbb
outsb
sahf
rcl
adc
into
add
or
aam
adc
addb
int3
into
jmp
aam
adc
cmpsb
in
mov
aam
adc
mov
aas
icebp
ret
add
sbb
sbb
es
call
sbb
sbb
ss
aam
adc
sbb
sbb
aam
adc
cmpsb
lcall
aam
adc
xchg
add
or
sbb
sbb
or
cld
rcrl
sbb
sub
sbb
sbb
push
lods
js
idivb
sbb
into
adc
sbb
sbb
outsb
in
sbb
sbb
cmp
or
mov
sbb
dec
and
jno
add
ret
pop
or
adc
les
xchg
push
mov
or
sbb
sbb
mov
adc
mov
push
jbe
rcrl
sbb
sahf
xchg
push
aam
adc
xchg
movsb
push
aam
adc
mov
decb
sbb
jle
and
sbb
sbb
fimuls
and
sbb
sbb
push
mov
sbb
cmpsb
mov
sbb
hlt
add
in
sbb
sbb
mov
adc
mov
add
push
xor
rcrl
sbb
fwait
sbb
sbb
sbb
into
jbe
aam
adc
aam
or
mov
sbb
sbb
sbb
mov
or
sbb
sbb
inc
cmp
dec
jbe
adc
sarl
mov
aaa
and
sbb
sbb
jne
aam
adc
xor
or
sub
rcrl
sbb
into
xchg
add
sbb
sbb
cmpsb
mov
sbb
scas
sbb
sbb
sbb
dec
adc
sbb
sbb
mov
adc
xchg
imul
sbb
jo
jbe
add
sbb
sbb
pop
cmp
sbb
sbb
sbb
aam
adc
dec
mov
mov
push
jl
rcrl
sbb
xchg
and
ret
adc
mov
mov
sbb
aam
sbb
sbb
mov
aad
rcrl
sbb
mov
adc
subb
pop
aam
adc
mov
rolb
out
xchg
adc
adc
or
cmp
xchg
adc
adc
pushf
push
push
loope
mov
not
sbb
sbb
jbe
cli
rcrl
sbb
sbb
inc
sub
ds
cwtl
sbb
sbb
sbb
and
aam
adc
mov
cmp
cs
aam
adc
mov
add
or
pop
aam
adc
mov
mov
aam
adc
clc
stos
fcoms
push
push
pop
call
sbb
sbb
jo
aam
adc
cmpsb
push
adc
out
pop
sub
sbb
sbb
sti
scas
xchg
jbe
rcrl
sbb
sbb
cltd
loope
cmc
sti
rcrl
sbb
xchg
sbb
sbb
sbb
mov
insl
pop
aam
adc
mov
add
rcrl
and
loop
jecxz
aam
adc
ret
push
je
lret
pop
aam
adc
cmpsb
mov
mov
aam
adc
or
aad
scas
mov
adc
lcall
sub
sbb
sbb
pop
andb
sbb
sbb
stos
and
mov
aam
adc
mov
fisubs
aam
adc
sahf
fwait
cmp
adc
aam
adc
movsb
push
scas
push
insl
xchg
call
sbb
sbb
jle
ret
rcrl
sbb
sahf
lods
or
sbb
sbb
sub
mov
xchg
sbb
rcrl
sbb
jbe
push
aam
adc
cwtl
add
add
push
adc
sbb
sbb
push
inc
rcrl
sbb
dec
xchg
mov
aam
adc
mov
mov
rcrl
sbb
cmpsb
xor
aam
adc
mov
ds
sbb
dec
loop
aam
adc
mov
cmpsb
mov
enter
adc
test
add
or
mov
rcrl
sbb
push
xor
aam
adc
scas
inc
lea
sahf
cltd
daa
aam
adc
test
add
push
sbb
sbb
insl
fs
aam
adc
push
repz
sbb
sbb
cs
sub
sbb
sbb
fwait
outsb
das
pop
jp
aam
adc
cs
lsl
sbb
sbb
jae
inc
xchg
es
sub
sbb
sbb
xchg
inc
add
sbb
sbb
sub
aam
adc
mov
jp
jbe
pop
aam
adc
nop
frstor
add
sbb
sbb
mov
not
sbb
sbb
ds
ret
rcrl
sbb
out
or
sbb
sbb
xor
je
lahf
paddq
sbb
fisubrs
aam
adc
loopne
ss
sti
rcrl
sbb
cmpsb
mov
aam
adc
xchg
xchg
jns
sbb
pop
fmull
and
ret
sarl
popa
and
sbb
sbb
mov
sbb
out
and
sbb
into
negb
aam
adc
mov
shlb
fsubl
or
sbb
sbb
std
outsb
dec
outsb
pop
aam
adc
ret
xchg
push
pop
adc
adc
mov
push
sti
adc
sbb
sbb
push
and
sbb
sbb
das
and
sbb
sbb
daa
xor
sbb
sbb
pusha
jns
insb
es
adc
sbb
sbb
dec
sbb
sbb
sbb
dec
rcl
adc
mov
add
test
sbb
sbb
jge
aam
adc
mov
cs
add
sbb
sbb
dec
bound
rclb
sbb
sbb
push
ljmp
in
xchg
mov
xchg
rcrl
sbb
loopne
pop
imul
sbb
sbb
faddl
adc
adc
and
mov
aam
adc
nop
jmp
sub
aam
adc
cmpsb
and
mov
aam
adc
mov
sub
sbb
sbb
cmp
in
sbb
sbb
jle
sbb
sbb
sbb
sub
rcll
sbb
sbb
add
dec
das
aam
adc
movsb
push
mov
xchg
push
cmp
rcrl
sbb
mov
sbb
mov
mov
test
jb
lds
bound
xchg
out
sub
push
aas
clc
rcrl
sbb
inc
dec
push
aam
adc
pushf
pop
jnp
dec
mov
sbb
inc
push
clc
rcrl
sbb
loope
aam
adc
xchg
or
sub
pop
arpl
aam
adc
dec
push
cmpsl
scas
cmc
sahf
lea
aam
adc
jle
sub
aam
adc
mov
mov
and
sbb
sbb
ds
aam
adc
cmp
adc
push
clc
rcrl
sbb
push
mov
aam
adc
addb
int3
data16
aam
adc
mov
sbb
push
mov
adc
mov
rolb
push
push
not
sbb
sbb
push
xchg
stc
rcrl
sbb
into
call
sbb
pop
int3
adc
sbb
sbb
ret
add
rcrl
sbb
fwait
inc
out
mov
sub
sbb
sbb
push
fs
sbb
sbb
or
cmp
xchg
sbb
sbb
sbb
in
clc
rcrl
sbb
xor
loop
mov
or
sbb
sbb
es
not
sbb
sbb
mov
mov
xchg
cmpsl
mov
cmp
adc
aam
mov
add
sbb
sbb
pop
mov
rcrl
sbb
inc
mov
aam
adc
mov
add
xor
mov
sbb
adc
aam
adc
or
sub
cmc
roll
int3
out
js
lods
add
sbb
sbb
sub
popa
push
cmp
into
js
cld
stos
adc
aam
adc
cwtl
add
add
shrb
aam
adc
and
out
aam
adc
int3
jge
xchg
lret
into
mov
aam
adc
xchg
mov
dec
rcrl
sbb
in
aam
adc
push
jae
jge
xchg
not
sbb
sbb
mov
xchg
mov
sbb
sbb
cmpsl
adc
sbb
sbb
xchg
rcrl
sbb
in
lods
scas
int3
xor
sbb
sbb
pop
clc
rcrl
sbb
mov
sbb
xchg
add
sbb
jle
ret
adc
nop
push
mov
aam
adc
cwtl
dec
sbb
dec
out
jecxz
sbb
sbb
aaa
outsl
jmp
scas
mov
sbb
ds
aam
adc
mov
arpl
sbb
sbb
jle
or
pop
mov
pop
aam
adc
out
inc
je
cli
or
sbb
sbb
bound
rcrl
sbb
adc
aam
adc
mov
push
stc
rcrl
sbb
sub
loopne,pt
es
aam
adc
push
lock
out
sti
rcrl
sbb
into
fadds
aam
adc
nop
movsb
les
pop
push
cltd
adc
stos
mov
mov
fs
cmpsl
repnz
aam
adc
test
add
mov
sbb
andb
outsb
imul
sbb
sbb
xchg
sti
not
sbb
sbb
mov
adc
sbb
sbb
mov
sbb
sbb
sbb
inc
and
aam
adc
addb
and
sbb
sbb
roll
adc
sbb
sbb
mov
sahf
sub
rcrl
sbb
mov
adc
mov
mov
adc
movsb
add
iret
scas
scas
lret
sbb
sbb
inc
sbb
sbb
sbb
fidivrs
enter
cmc
push
sub
rcrl
sbb
rcrl
sbb
push
pop
sbb
jbe
rcl
sbb
sbb
outsb
stc
or
ret
stc
pop
cmpsb
adc
sbb
sbb
or
cwtl
sbb
aam
adc
out
cmp
fidivrs
sbb
push
or
and
or
rcrl
sbb
xchg
push
imul
push
sbb
movsb
sti
rcrl
sbb
insb
cltd
loopne
ss
add
lret
fiadds
sbb
sbb
into
cmp
aam
adc
mov
xor
aam
adc
addb
pop
aam
adc
xchg
les
out
aam
adc
mov
jmp
sbb
sbb
sbb
jbe
not
sbb
sbb
out
jo
aam
adc
add
jge
xor
fcompl
aam
adc
ret
sbb
pop
aam
adc
sahf
ja
nop
dec
data16
rcrl
sbb
scas
test
sbb
es
xor
sbb
sbb
push
lods
sbb
sbb
sbb
into
xlat
mov
cli
xchg
mov
xor
sbb
sbb
lods
jg
sbb
sbb
aas
test
sbb
sbb
fimuls
aam
adc
lods
fildl
mov
mulb
mov
dec
cmpl
adc
pushf
adc
cmp
mov
adc
mov
ret
cs
stc
rcrl
sbb
outsb
add
aam
adc
xchg
popa
inc
inc
dec
cbtw
adc
sbb
sbb
dec
sbb
sbb
sbb
fnstsw
cwtl
scas
das
sub
sbb
sbb
pusha
mov
sub
sbb
sbb
mov
sbb
mov
sub
sbb
sbb
bound
adc
leave
jns
push
sbb
rcrl
sbb
shl
add
jbe
pop
aam
adc
mov
add
add
aaa
daa
aam
adc
xchg
push
push
cmp
aam
adc
mov
add
add
sbb
sbb
ss
sbb
fsqrt
rcrl
sbb
adc
sbb
ss
aam
adc
jl
sub
adc
aad
rcrl
sbb
cwtl
mov
sub
sbb
sbb
sbb
aam
adc
aam
xor
add
sbb
sbb
out
mov
aam
adc
mov
and
sbb
sbb
push
add
dec
mov
jecxz
sbb
sbb
jecxz
shll
es
rcrl
sbb
mov
sbb
into
inc
aam
sbb
sbb
out
ret
jle
xchg
aam
adc
pushf
popf
cmp
rcrl
sbb
add
arpl
adc
mov
sbb
sbb
sbb
aad
aam
adc
xchg
mov
mov
sbb
scas
cli
rcl
sbb
sbb
xchg
mov
rcrl
sbb
mov
or
sbb
sbb
scas
adc
sbb
sbb
jle
pop
mov
sub
sbb
sbb
outsl
cs
adc
sbb
add
sbb
aam
adc
ret
add
pushf
xor
sbb
sbb
push
aam
aam
adc
test
inc
sub
idivb
rcrl
sbb
cs
sbb
cmpsb
insl
rcl
sbb
sub
mov
sbb
sbb
cli
cmpsb
mov
sbb
sbb
cmpsb
lcall
fidivrl
and
sbb
sbb
push
xchg
aam
adc
xchg
cld
mov
test
sbb
sbb
push
fcmove
mov
sbb
mov
pop
adc
sbb
sbb
ss
sbb
out
mov
sbb
push
jnp
ja
lea
aam
adc
mov
jno,pt
aam
adc
ret
dec
jbe
cmp
nop
add
loopne
xor
rcrl
sbb
push
jae
aam
adc
ficomps
das
scas
rcl
sbb
sbb
jmp
pop
shl
pushf
or
sbb
sbb
ss
rcrl
sbb
sahf
xor
aam
adc
fadd
pop
cmp
sbb
sbb
testb
mov
mov
sbb
sbb
sbb
inc
xorb
adc
or
jmp
mov
or
sbb
sbb
add
sbb
push
or
sbb
stos
mov
adc
mov
push
je
aam
adc
adc
push
lea
rcl
adc
shlb
pop
adc
or
sbb
cmc
xor
sbb
sbb
divb
aam
adc
xchg
adc
insb
loopne
insl
add
sbb
sbb
outsl
ret
rcrl
sbb
fisubrs
sbb
mov
or
sbb
sbb
push
fwait
cld
rcrl
sbb
cs
sbb
sbb
ret
sbb
sbb
mov
add
scas
pusha
call
sbb
sbb
mov
or
sbb
sbb
cs
adc
sbb
sbb
jbe
cli
rcrl
sbb
scas
dec
or
sbb
sbb
lret
icebp
into
daa
cli
rcrl
sbb
addb
sahf
jp
rcrl
sbb
outsl
xor
in
mov
rcrl
sbb
xor
aam
adc
out
clc
xor
es
jno
rcrl
sbb
jbe
adc
sbb
sbb
inc
push
adc
sbb
sbb
out
aam
adc
movsb
outsb
outsl
fidivs
and
aam
adc
mov
mov
stc
rcrl
sbb
cs
aam
adc
call
push
addr16
cwtl
add
add
push
lods
adc
adc
jp
mov
sbb
sbb
push
mov
rcrl
sbb
push
sti
cmc
rcrl
sbb
icebp
imul
sbb
sbb
shlb
xchg
sbb
jle
xor
sbb
sbb
pop
sub
outsb
aam
adc
mov
push
add
aam
adc
lock
mov
aam
adc
pushf
sbb
cwtl
je
dec
sbb
sbb
sbb
imul
sbb
xchg
xlat
sbb
sbb
sbb
inc
add
lret
push
push
aam
adc
pushf
rolb
dec
push
push
add
call
mov
adc
sbb
sbb
cwtl
ret
adc
call
outsb
xlat
add
sbb
sbb
push
dec
and
sbb
sbb
mov
sbb
sbb
sbb
cs
xor
sbb
sbb
subl
aam
adc
rolb
mov
aam
adc
int3
xlat
mov
std
xchg
and
sbb
sbb
sar
rcrl
sbb
es
es
mov
rcrl
sbb
pop
scas
ret
adc
adc
cld
rcrl
sbb
push
mov
sbb
jbe
lcall
adc
into
insb
lret
cmpl
sbb
sbb
pop
out
push
and
sbb
sbb
inc
jl
pushf
push
es
adc
test
add
push
sbb
sbb
ja
aam
adc
les
xor
mov
or
not
sbb
sbb
inc
adc
aam
adc
cmpsb
out
mov
aam
adc
rcrb
fbld
add
sbb
sbb
out
pop
push
aam
adc
lcall
adc
hlt
ss
fsubr
andl
mov
clc
rcrl
sbb
out
sbb
xchg
mov
and
sbb
sbb
decb
sub
sbb
sbb
ret
xor
sbb
sbb
js
rcrl
sbb
push
mov
aam
adc
call
push
hlt
adc
adc
ret
and
sbb
sbb
xchg
sbb
sbb
sbb
dec
sub
sbb
sbb
mov
adc
pushf
mov
sti
inc
aam
aam
adc
mov
jns
inc
push
or
aam
adc
cmp
fnstcw
jmp
sbb
sbb
xor
rcrl
sbb
out
popf
or
nop
movsb
les
pop
ss
adc
sbb
sbb
outsb
or
aam
adc
mov
add
cld
inc
scas
or
sbb
sbb
scas
mov
aam
adc
mov
xor
aam
adc
xchg
fsubrl
pop
aam
adc
mov
mov
rcrl
sbb
inc
rcl
sbb
sbb
hlt
xor
xchg
sbb
cmpsb
mov
aam
adc
cmp
popa
jmp
into
mov
sbb
cmpsb
mov
aam
adc
addb
int3
dec
xor
aam
adc
add
shlb
adc
lret
pop
xchg
add
sbb
dec
test
mov
sbb
rcrl
sbb
sbb
push
icebp
or
sbb
sbb
push
sub
rcrl
sbb
rcrl
sbb
fiadds
aam
adc
xchg
stc
scas
inc
push
jbe
and
pushf
rcrb
cmp
pop
cs
adc
addb
or
sbb
sbb
sbb
aam
adc
xchg
fsubr
insb
inc
xchg
lock
sbb
sbb
mov
sbb
outsl
mov
gs
popa
mov
sbb
sbb
xor
sbb
hlt
adc
sbb
sbb
aad
push
jbe
add
mov
push
adc
adc
mov
fisubl
jbe
push
sub
sbb
sbb
movsl
mov
sbb
sbb
ret
inc
mov
rcrl
sbb
mov
sbb
sub
movsl
push
mov
sbb
inc
icebp
call
sbb
sbb
mov
push
add
sbb
sbb
pop
push
not
sbb
sbb
push
aad
rcrl
sbb
xor
xchg
or
sbb
sbb
outsb
movsb
or
sbb
sbb
mov
not
sbb
sbb
push
push
stc
rcrl
sbb
mov
adc
insl
mov
add
sbb
sbb
movsl
add
sbb
sbb
out
ss
sbb
sbb
jbe
sti
rcrl
sbb
pop
pusha
add
sbb
sbb
lcall
sub
sbb
sbb
mov
sbb
addr16
aam
adc
cs
daa
and
sbb
sbb
psubw
sbb
sbb
inc
pushf
sub
sbb
sbb
jbe
in
sbb
sbb
fbstp
and
scas
and
mov
sbb
sbb
add
aam
adc
movsb
pop
ljmp
sbb
sbb
adc
sbb
fwait
rcrl
sbb
inc
mov
push
adc
aam
adc
xchg
add
add
es
adc
test
add
push
sbb
sbb
ss
rcrl
sbb
lret
dec
cmpsl
inc
scas
pop
aam
adc
stos
push
ss
int
cmpsb
cmc
rcrl
sbb
mov
aam
adc
mov
push
mov
pop
not
sbb
sbb
dec
pop
rcl
sbb
sbb
das
adc
sbb
sbb
jecxz
aam
adc
sarb
inc
aam
sbb
sbb
repz
sbb
sbb
cs
rcrl
sbb
movsl
sbb
sbb
sbb
cli
daa
push
push
pop
add
sbb
sbb
mov
add
imulb
rcrl
sbb
mov
adc
mov
movsl
paddq
sbb
mov
pop
aam
adc
xchg
shrl
and
sub
sbb
sbb
push
loop
aam
adc
mov
cld
incl
or
sbb
sbb
pop
mov
push
aam
adc
into
cld
test
push
inc
sbb
sbb
sbb
add
rcrl
sbb
mov
sbb
adc
nop
adc
mov
cmp
jbe
rolb
sbb
sbb
push
icebp
add
stos
jg
scas
imul
adc
faddp
push
push
aad
int3
and
sbb
sbb
out
add
sbb
sbb
fdivr
int
clc
jg
sbb
sbb
aaa
xchg
decb
rcrl
sbb
in
aad
and
jecxz
sbb
sbb
inc
or
ret
in
sbb
sbb
pop
ljmp
sbb
sbb
cmp
adc
aam
adc
xchg
das
sbb
pop
sahf
xchg
push
push
mov
sbb
mov
or
xchg
call
test
jecxz
sub
xor
sbb
mov
pop
aam
adc
add
arpl
aam
adc
fcomps
fs
aam
adc
xchg
cmp
push
jle
sti
sub
sbb
sbb
push
lods
xor
sbb
sbb
push
in
sbb
sbb
jmp
cmp
aam
adc
xchg
imull
lcall
sbb
mov
adc
sahf
call
mov
rcrl
sbb
xor
aam
adc
mov
ja
aam
adc
mov
ss
cli
rcrl
sbb
push
xchg
sub
sbb
sbb
push
lret
xchg
not
sbb
sbb
cld
xchg
out
call
sbb
cmpsl
rcl
sbb
sbb
add
sbb
sbb
aam
inc
push
push
lds
mov
cwtl
push
aam
adc
fisubl
jo
aam
adc
mov
lahf
pop
mov
pop
adc
adc
inc
test
pusha
jne
repz
sbb
sbb
and
sbb
sbb
sbb
jecxz
sub
adc
dec
ret
popa
scas
cmp
rcrl
sbb
mov
and
and
push
scas
xchg
mov
push
shrl
sbb
shl
ja
and
sbb
rcrl
sbb
mov
cld
rcrl
sbb
xchg
sbb
sbb
sbb
mov
mov
push
pushf
push
or
aam
adc
les
jnp
inc
popf
sub
sbb
sbb
push
out
push
aam
adc
mov
movb
rcrl
sbb
test
rcrl
sbb
notb
jle
out
push
adc
adc
mov
mov
jge
cmp
sbb
mov
sbb
push
jmp
sbb
push
nop
jle
sbb
sbb
and
sbb
fisttpll
aam
adc
mov
add
add
sub
cmpsb
loop
mov
push
sbb
sbb
and
aam
adc
mov
add
aam
adc
into
fwait
lahf
sbb
add
sbb
or
xchg
sbb
sbb
push
xchg
add
sbb
sbb
js
rcrl
sbb
out
ret
rcrl
sbb
mov
sbb
sbb
sbb
loopne
aam
adc
es
push
jo
fisubrs
sbb
js
rcrl
sbb
mov
not
sbb
sbb
ss
rcrl
sbb
push
fsubp
rcrl
sbb
mov
adc
adc
add
and
aam
adc
mov
add
add
add
test
add
mov
adc
fs
or
rcrl
sbb
inc
pop
and
sbb
sbb
push
jmp
aam
adc
mov
xchg
push
hlt
add
mov
mov
adc
lcall
add
nop
xor
aam
adc
fdivrs
or
aam
adc
movb
data16
cmp
aam
adc
mov
jle
jecxz
sbb
sbb
mov
movsl
std
rcrl
sbb
fdivrp
sbb
sbb
sbb
mov
sub
sbb
sbb
push
xchg
sbb
sbb
or
sbb
sbb
xchg
xor
sbb
sbb
mov
repz
sbb
sbb
push
aam
adc
mov
cmp
rcrl
sbb
sbb
mov
into
xchg
rcrl
sbb
dec
push
rcrl
sbb
pop
cmp
sbb
sbb
xchg
or
rcrl
sbb
ds
ret
adc
fsubrs
cmp
xchg
xlat
jno
mov
push
sbb
mov
sbb
mov
inc
sbb
sbb
sbb
pop
and
sbb
sbb
scas
cmp
rcrl
sbb
mov
jno
inc
clc
or
ret
adc
aam
adc
xchg
mov
jg
aam
adc
mov
imul
enter
adc
rorb
inc
push
aam
adc
pushf
dec
out
mov
scas
sti
push
aam
adc
mov
aas
sub
adc
rcrb
mov
not
sbb
sbb
fimuls
aam
adc
mov
movsb
jl
mov
stc
rcrl
sbb
sbb
aam
adc
add
mov
sbb
outsb
lds
aam
adc
into
push
or
aam
adc
fdiv
dec
aad
jbe
add
sbb
sbb
loopne
rcrl
sbb
and
adc
adc
mov
dec
js
aam
adc
xchg
hlt
add
mov
adc
adc
mov
jmp
sbb
push
rcl
sbb
sbb
xor
sbb
sbb
outsb
mov
ror
popf
sbb
jle
sbb
sbb
sbb
es
and
sbb
sbb
push
inc
rcrl
sbb
es
sbb
mov
adc
test
add
rcrl
sbb
cmpsl
sbb
sbb
sbb
cs
rcrl
sbb
fmulp
xor
sbb
sbb
sarl
sub
adc
sub
sbb
aam
adc
xchg
popa
inc
inc
dec
mov
cli
rcrl
sbb
pop
inc
adc
adc
fcmovbe
xchg
cmpsl
push
jb
rcrl
sbb
sahf
les
aam
adc
lods
dec
mov
rcrl
sbb
cmpsb
sbb
sbb
sub
adc
ret
sbb
sbb
sbb
ficomps
aam
adc
cmpsb
sbb
mov
sbb
sbb
push
sub
sbb
mov
adc
inc
add
pop
dec
sbb
sbb
sbb
push
sub
mov
out
sub
aam
adc
mov
cmpsb
lds
mov
sbb
mov
adc
lock
and
iret
xchg
clc
rcrl
sbb
dec
loop
rcrl
sbb
push
xchg
not
sbb
sbb
rcl
add
and
mov
mov
push
in
rcrl
sbb
push
in
mov
loopne
aam
adc
test
mov
scas
push
mov
aam
adc
mov
outsl
adc
aam
adc
push
mov
jge
cmpsb
mov
aam
adc
mov
add
rcrl
sbb
add
aam
adc
mov
add
cld
pop
push
aam
adc
mov
mov
adc
sbb
sbb
mov
aam
adc
lods
in
and
pop
sti
sbb
sbb
sbb
add
movsb
mov
cs
rcrl
sbb
xchg
dec
ret
adc
movsb
insb
mov
jnp
pop
mov
sahf
sbb
pushf
add
lcall
lret
xchg
mov
sbb
sbb
push
sbb
inc
adc
aam
adc
xchg
rcrl
addr16
rcrl
and
xchg
mov
xchg
sub
aam
adc
xchg
add
or
adc
rorb
pop
push
push
or
rolb
enter
aam
adc
shlb
push
or
shrb
aam
adc
test
add
aam
adc
mov
call
pop
aam
adc
mov
mov
sbb
xchg
aam
adc
xchg
pop
mov
add
mov
push
out
xor
sbb
sbb
xlat
cmp
lods
mov
aam
adc
mov
add
push
mov
sbb
sbb
in
xchg
pop
iret
xchg
xchg
or
sbb
sbb
les
aam
adc
mov
xchg
fisttpll
aam
adc
lods
pop
test
xchg
add
sbb
sbb
pop
mov
int
add
rcrl
sbb
divb
sbb
push
add
sbb
sbb
inc
mov
sbb
in
adc
pop
pop
test
sbb
sbb
roll
and
sub
adc
cli
dec
popf
daa
mov
add
aam
adc
sahf
movsl
and
or
adc
adc
idivb
cmp
mov
sub
mov
xchg
aam
adc
xchg
jle
out
scas
xor
nop
and
add
scas
mov
aam
adc
sahf
or
inc
lahf
xor
sbb
sbb
or
aam
adc
ret
cli
xchg
mov
adc
xor
mov
ss
lock
rcrl
sbb
push
xor
sbb
xchg
shrl
cs
rcrl
sbb
cs
sbb
sbb
push
dec
in
mov
and
sbb
sbb
mov
sub
test
push
inc
mov
int3
or
lods
pushf
cmp
rcrl
sbb
cs
rcrl
sbb
ds
sbb
sbb
push
push
add
sbb
sbb
mov
sbb
jp
sub
xor
sbb
sbb
push
xchg
and
adc
mov
sbb
sbb
sbb
cltd
imul
aam
adc
mov
dec
cmp
aam
adc
nop
fldl
loopne
les
sbb
sbb
xchg
mov
sbb
movsl
cmpsb
sbb
sbb
sbb
push
xor
aam
adc
lcall
and
addb
int3
jbe
add
sbb
sbb
push
dec
aam
sbb
sbb
push
inc
mov
sbb
sbb
inc
mov
aam
adc
fdivp
push
sub
std
rcrl
sbb
loopne
adc
or
sbb
sbb
mov
sbb
jbe
adc
cmpsb
aas
aaa
sub
adc
aam
adc
test
add
push
jo
aam
adc
mov
sbb
sbb
xchg
rcrl
sbb
xchg
adc
sbb
sbb
adc
lods
arpl
pop
adc
push
in
or
pop
mov
aam
adc
nop
popa
jnp
mov
jb
rcrl
sbb
jbe
or
sbb
sbb
mov
adc
repz
push
out
inc
adc
adc
xor
cmp
sbb
out
sub
and
inc
rcl
adc
addb
int3
mov
adc
hlt
inc
js
dec
out
jecxz
sbb
sbb
xchg
pop
jg
push
stc
sbb
sbb
sbb
push
xchg
or
sbb
sbb
stos
paddq
sbb
es
jmp
or
pop
clc
rcrl
sbb
mov
sbb
outsb
int
aam
adc
nop
movsb
les
pop
cs
sbb
push
adc
sbb
sbb
push
push
paddq
sbb
pop
sbb
sbb
sbb
scas
je
mov
out
in
sbb
sbb
push
push
stos
pop
dec
adc
adc
rorb
add
sbb
sbb
adc
adc
sbb
sbb
ss
mov
xor
and
sbb
sbb
loop,pt
aam
adc
test
adc
aam
adc
mov
push
lahf
rcl
sbb
sbb
xchg
aaa
cld
rcrl
sbb
mov
add
sbb
sbb
cmpsb
mov
aam
adc
lret
cmp
jbe
jns
sbb
pop
mov
out
incb
aam
adc
mov
cmp
inc
jle
and
sbb
sbb
or
dec
mov
or
sbb
sbb
pop
push
pop
aam
adc
xchg
mov
cs
test
pushf
movl
adc
xchg
addl
aam
adc
cmpsb
aad
aad
neg
sub
sbb
sbb
mov
aam
adc
scas
add
mov
push
jmp
sbb
xchg
push
rcl
sbb
sbb
es
rcrl
sbb
out
mov
xchg
add
sub
adc
test
add
testb
loop
mov
aam
adc
outsb
out
dec
pop
sahf
std
xor
sbb
sbb
js
inc
push
fs
sbb
sbb
mov
adc
mov
add
ds
pop
aam
adc
stos
stos
leave
hlt
mov
sbb
sbb
push
adc
test
add
in
or
sbb
sbb
sbb
sahf
clc
cld
rcrl
sbb
fstl
xchg
fcomi
rcrl
sbb
cmpsb
xchg
add
sbb
sbb
mov
sbb
push
sti
rcrl
sbb
into
or
sbb
out
jmp
rcrl
sbb
aaa
adc
aam
adc
mov
adc
mov
addb
push
add
mov
mov
rcrl
sbb
shr
adc
into
addb
insl
jb
inc
cmpsl
sbb
sbb
sbb
cmpsb
or
test
add
push
arpl
mov
test
adc
sbb
sbb
xchg
iret
sbb
sbb
sbb
out
inc
rcl
sbb
sbb
push
mov
aam
adc
sbb
inc
dec
sbb
aam
adc
sahf
xor
jae
mov
rcrl
sbb
xor
mov
mov
sbb
cmp
adc
stos
mov
frstor
sbb
sbb
sbb
out
rcrl
sbb
out
jo
aam
adc
mov
cmp
inc
jle
js
sbb
sbb
out
push
aam
adc
test
inc
data16
push
sub
mov
ds
sub
sbb
sbb
lcall
ret
adc
addb
sbb
and
rcrl
sbb
enter
es
rcrl
sbb
movb
jl
pop
shr
test
aam
adc
mov
add
std
push
jle
aam
adc
addb
int3
dec
jbe
aam
adc
nop
movsb
les
pop
into
dec
call
sbb
sbb
jo
mov
sbb
sbb
sahf
lods
add
sbb
sbb
mov
adc
xchg
add
mov
aam
adc
pop
mov
or
sbb
sbb
mov
xchg
paddq
sbb
shlb
mov
ret
rcrl
sbb
mov
rcrl
sbb
cmpsl
mov
adc
sbb
sbb
fidivs
aam
adc
in
cmp
inc
xchg
adc
sbb
xchg
adc
adc
mov
sub
or
sbb
sbb
gs
fsubl
dec
add
rcrl
sbb
pop
cwtl
sub
sbb
sbb
cs
aam
adc
xchg
aas
lret
mov
xchg
ret
adc
mov
lret
xchg
notl
lcall
sub
sbb
sbb
out
and
aam
adc
or
out
cwtl
aad
sbb
rcrl
sbb
es
or
sbb
sbb
xchg
inc
clc
rcrl
sbb
and
aam
adc
pushf
outsl
ror
fwait
ds
sub
sbb
sbb
popa
sbb
sbb
sbb
ficoms
aam
adc
addb
sbb
sbb
sbb
xchg
ds
dec
scas
push
mov
cmp
mov
xor
mov
sbb
mov
mov
aam
adc
scas
movsl
jb
shrl
adc
pusha
int
mov
out
rcl
sbb
sbb
aas
daa
aam
adc
sahf
movsl
mov
mov
or
mov
into
sbb
aam
adc
mov
dec
push
aam
adc
mov
inc
cmp
cmpsb
add
test
add
push
rcrl
sbb
mov
jmp
sbb
sbb
cmpsb
imul
mov
mov
pop
xchg
not
sbb
sbb
scas
dec
xor
adc
adc
cli
xchg
and
rcrl
sbb
cwtl
add
rcl
adc
lock
xchg
dec
cmpsb
adcl
sbb
sbb
cmp
rcrl
sbb
mov
data16
rcrl
sbb
and
enter
sbb
sbb
sbb
in
push
aam
adc
mov
xchg
aam
adc
cmpsb
std
stos
adc
inc
adc
sbb
sbb
push
xchg
sub
sbb
sbb
movsl
rcl
sbb
sbb
jo
sub
sbb
sbb
xchg
aam
adc
pushf
xchg
mov
imul
jo
cs
aam
adc
mov
icebp
push
gs
out
aam
adc
movb
int
and
aam
adc
mov
sbb
push
xchg
jbe
rcrl
sbb
pop
inc
xor
mov
push
jg
aam
adc
enter
arpl
adc
mov
add
test
aam
adc
mov
add
std
mov
add
sbb
sbb
xchg
insl
test
sbb
sbb
les
xor
sbb
sbb
fimuls
rolb
lret
add
mov
push
sbb
sbb
sbb
out
pop
xchg
fisttps
adc
mov
inc
stc
rcrl
sbb
inc
or
aam
adc
mov
inc
call
sbb
and
pop
cwtl
mov
sub
sbb
sbb
pop
mov
sbb
sbb
sbb
mov
inc
or
sbb
sbb
into
mov
aam
adc
mov
jbe
sbb
and
lods
pop
add
mov
sbb
mov
dec
and
shl
sbb
sbb
push
dec
clc
rcrl
sbb
xchg
mov
or
movsb
int3
fisttpl
adc
stos
out
rep
jbe
in
sbb
sbb
outsb
clc
rcrl
sbb
xchg
loop
aam
adc
cwtl
and
negl
sbb
sbb
mov
sbb
repnz
mov
sbb
lret
mov
adc
cwtl
xor
in
mov
sti
rcrl
sbb
xorb
movsl
xor
sbb
sbb
push
adc
adc
and
or
mov
mov
out
adc
sbb
sbb
jbe
pop
aam
adc
xchg
popf
in
jae
xor
test
add
inc
cmp
rcrl
sbb
outsl
cld
xor
adc
loop
push
ja
push
pop
not
sbb
sbb
sbb
cmp
mov
rolb
pop
fwait
stc
rcrl
sbb
into
pop
pop
aam
adc
loopne
inc
fmul
scas
rcrb
aam
adc
xchg
inc
jecxz
cltd
out
ret
sbb
sbb
sbb
jg
scas
stos
push
xor
aam
adc
nop
fldl
loopne
or
sbb
enterw
adc
mov
inc
cmp
sbb
sbb
mov
adc
cmpsb
xor
or
aam
adc
mov
dec
xchg
add
sbb
sbb
mov
sub
cwtl
xchg
mov
sbb
sbb
mov
sbb
xchg
orb
sbb
sbb
xchg
sbb
sbb
out
adc
sbb
sbb
jg
add
ss
aam
adc
ret
bound
sbb
sbb
xchg
or
sbb
es
add
sbb
sbb
push
add
mov
cs
add
sbb
sbb
push
pop
add
sbb
sbb
jbe
add
sbb
sbb
xlat
add
sbb
sbb
and
mov
inc
add
push
mov
sbb
add
aam
adc
or
sbb
jne
lret
add
nop
ret
sbb
rcl
adc
mov
mov
sbb
sbb
into
stos
sub
sbb
sbb
and
test
int3
sub
sbb
sbb
movsl
mov
push
ds
rcrl
sbb
pushf
sub
sbb
sbb
out
sub
insb
and
sbb
sbb
mov
sub
sbb
sbb
xchg
sbb
out
ret
sbb
sbb
add
aam
adc
or
inc
cld
mov
sbb
sub
sar
cmpsb
mov
rorb
sarl
es
jg
sbb
sbb
testb
into
ljmp
xor
fiadds
sbb
sbb
jbe
cli
rcrl
sbb
push
push
add
test
add
add
sub
sbb
sbb
out
paddq
sbb
mov
add
sbb
sbb
xchg
mov
shrb
stos
es
rcrl
sbb
pop
shrl
sbb
sbb
mov
or
mov
call
sbb
inc
clc
aad
mov
or
sbb
sbb
inc
out
imulb
or
mov
lret
jmp
jle
add
sbb
sbb
pop
testb
sbb
sbb
push
adc
aam
adc
mov
pop
adc
adc
add
mov
rcrl
sbb
jle
sub
sbb
sbb
dec
les
aam
adc
nop
movsb
les
pop
jle
adc
xor
clc
cmp
sbb
sbb
push
test
rcrl
sbb
movsl
sbb
sahf
mov
aam
adc
adc
mov
cmp
push
add
sbb
sbb
es
rcrl
sbb
pop
enter
add
sbb
sbb
test
mov
rcrl
sbb
push
add
sbb
sbb
inc
or
aam
adc
addb
int3
fisubs
sbb
cmp
mov
push
scas
sbb
sbb
sbb
decl
aam
adc
mov
incl
adc
loopne
lea
sbb
sbb
out
testl
sbb
or
sbb
sbb
and
aam
adc
out
pop
mov
sbb
sbb
lret
dec
push
xor
sbb
push
repnz
sbb
sbb
into
mov
sbb
mov
add
sbb
sbb
cs
rcrl
sbb
fidivs
aam
adc
in
add
mov
aam
adc
add
iret
pop
add
sbb
sbb
cwtl
dec
adc
sbb
sbb
push
add
sbb
sbb
leave
fistl
or
stos
sub
sbb
sbb
call
cmp
aam
adc
pop
inc
les
aam
adc
imulb
inc
cld
rcrl
sbb
out
add
test
add
ss
sbb
sbb
imulb
rcrl
sbb
pop
push
add
sahf
das
cmpsb
in
push
cli
rcrl
sbb
out
rcrl
sbb
mov
clc
rcrl
sbb
mov
aam
adc
push
push
mov
rcrl
sbb
jbe
rcl
sbb
sbb
push
outsl
clc
rcrl
sbb
push
icebp
or
movsb
outsb
outsl
fisubrs
notl
aam
adc
ret
ret
scas
sub
sbb
sbb
push
pop
add
sbb
sbb
xchg
out
add
sbb
sbb
push
mov
sbb
scas
ffree
rcrl
sbb
testb
sbb
sbb
jbe
sbb
sbb
sbb
bound
lcall
sbb
test
pop
ret
movsl
sbb
sbb
sbb
lret
sbb
sbb
das
mov
xor
sbb
sbb
push
dec
sub
sbb
sbb
imul
adc
nop
pop
insb
lods
ret
adc
sbb
sbb
push
into
and
sbb
sbb
out
sbb
sbb
sbb
jmp
fnstsw
mov
xchg
adc
aam
adc
mov
fisubs
aam
adc
mov
add
std
cmpsb
or
test
add
mov
add
sbb
sbb
out
pop
sbb
sbb
sbb
notb
aam
adc
pop
je
dec
sub
or
sbb
sbb
scas
cs
aam
adc
aam
fistpll
sbb
sbb
ss
rcrl
sbb
es
sbb
lock
mov
push
bound
aam
adc
mov
push
jmp
aam
adc
or
jbe
js
outsb
std
rcrl
sbb
push
push
sub
sbb
sbb
cs
sbb
sbb
push
sbb
aam
adc
mov
sbb
test
add
or
sbb
sbb
cs
sbb
sbb
push
mov
sbb
xchg
xor
sbb
sbb
push
and
push
push
dec
push
aam
adc
cwtl
add
add
ds
fldl
loopne
rclb
sbb
sbb
testb
xchg
add
sub
aam
adc
mov
add
rcrl
sbb
jp
xchg
ja
inc
sbb
sbb
sbb
pop
mov
and
sbb
sbb
ds
rcrl
sbb
push
sahf
jg
sbb
sbb
outsb
mov
sbb
ss
aam
adc
cwtl
add
add
outsb
pop
push
aam
adc
nop
test
sub
sbb
sbb
out
pop
aam
adc
nop
jmp
bound
aam
adc
ljmp
add
sbb
sbb
testb
sbb
sbb
add
aam
adc
mov
mov
sbb
sbb
inc
pop
scas
lret
cs
aam
adc
cmpsb
les
mov
lret
push
aam
adc
cwtl
add
add
push
jb
aam
adc
adc
add
cli
rcrl
sbb
lods
mov
add
sbb
sbb
pop
push
or
sbb
sbb
cs
sbb
decb
rcrl
sbb
push
cwtl
or
sbb
sbb
jbe
jo
cmp
sbb
out
or
sbb
test
loope
xchg
sub
sbb
pop
xchg
inc
out
cs
sbb
sbb
sbb
sahf
ljmp
ljmp
aam
adc
fimuls
in
cmp
adc
clc
repz
push
out
rcrl
sbb
outsb
sbb
rcrl
sbb
jb
rcrl
sbb
into
add
aam
adc
xchg
push
shlb
rcrl
sbb
mov
aam
adc
cmp
int
ss
aam
adc
xor
jne
outsb
adc
rcrl
sbb
es
sbb
adc
aam
adc
mov
add
aam
adc
nop
mov
je
aam
adc
addb
rcrl
sbb
pop
inc
adc
bound
aam
adc
mov
int3
dec
dec
rorb
aam
adc
mov
dec
pop
add
sbb
sbb
out
or
lods
dec
test
aam
adc
nop
add
add
or
aam
adc
test
add
sbb
aam
adc
stos
sti
cmp
add
sbb
sbb
mov
aam
adc
sahf
out
gs
es
aam
adc
xchg
add
js
aam
adc
push
outsb
outsb
mov
sbb
sbb
jbe
xor
sbb
sbb
push
int3
jg
sbb
sbb
mov
add
sbb
sbb
xchg
mov
sbb
dec
and
cs
loop
aam
adc
mov
sub
scas
xchg
cmpsb
or
xchg
jno
rcrl
sbb
iret
bound
push
aam
adc
mov
test
add
sbb
sbb
xchg
pusha
inc
jb
sub
adc
jle
sarl
sbb
sbb
cmp
sbb
cmpsb
push
sub
mov
jecxz
mov
sbb
sbb
lds
aam
adc
test
pop
cmp
push
out
and
mov
mov
add
sbb
sbb
aaa
iret
mov
daa
adc
sbb
sbb
insb
stc
rcrl
sbb
xor
aam
adc
shlb
adc
rcrl
sbb
xchg
add
sbb
sbb
fdivp
sub
sbb
sbb
mov
or
sbb
sbb
pop
mov
stc
rcrl
sbb
jmp
hlt
add
mov
inc
adc
sbb
sbb
cs
adc
addb
sbb
sbb
sbb
outsb
ficoml
aam
adc
mov
cs
or
sub
xor
aam
adc
xchg
lods
inc
cmpsb
sbb
sbb
push
hlt
sbb
sbb
sbb
push
pop
inc
push
add
sbb
sbb
scas
add
sbb
sbb
cmpsl
paddq
sbb
inc
insb
mov
sbb
sbb
into
dec
stc
rcrl
sbb
out
xchg
or
rcrl
sbb
mov
and
sbb
sbb
xor
sbb
sbb
cs
std
rcrl
sbb
xchg
ja
sbb
sbb
xor
xor
sbb
sbb
cmpsb
jo
rcrl
sbb
call
and
rcrl
sbb
andl
sbb
sbb
push
and
aam
adc
mov
sub
sbb
sbb
jg,pn
aam
adc
pusha
mov
dec
clc
rcrl
sbb
cmpsb
ret
rcrl
sbb
or
adc
fldl
aam
adc
push
movsb
fisubrl
xchg
iret
push
aam
adc
cmpsb
xor
or
xchg
rorb
mov
aam
adc
push
xchg
mov
and
sbb
sbb
out
add
sbb
sbb
cmpsb
sub
rcrl
sbb
scas
push
daa
aam
adc
rclb
sub
sbb
sbb
push
mov
sbb
push
push
aam
adc
mov
ss
aam
adc
stos
xor
movl
jmp
sbb
sbb
push
mov
aam
adc
xchg
jl
fsubr
rolb
aam
adc
or
or
and
aam
adc
ljmp
sub
sbb
sbb
sahf
loopne
aam
adc
mov
xchg
adc
sbb
sbb
pop
mov
es
add
aam
adc
movsb
flds
cli
rcrl
sbb
fsubp
add
sbb
sbb
dec
mov
aam
adc
xchg
mov
xor
sbb
sbb
leave
dec
rolb
push
movsl
aam
sbb
sbb
and
lock
outsl
ret
rcrl
sbb
inc
ret
adc
nop
mov
out
aam
adc
mov
std
incl
or
sbb
sbb
jle
xor
sbb
sbb
mov
rcl
adc
in
mov
idivb
icebp
add
sbb
sbb
push
outsb
rcl
sbb
sbb
pop
fsubrp
idivb
sbb
sahf
mov
rcrl
sbb
outsb
xlat
std
rcrl
sbb
jno
dec
lea
pop
aam
adc
sahf
push
cmp
sahf
pusha
or
nop
add
loopne
aaa
add
sbb
sbb
inc
jb
cs
cli
rcrl
sbb
rcrb
aam
adc
ljmp
add
sbb
sbb
xchg
mov
paddq
sbb
jno
aam
adc
test
or
cmpsb
orl
cmpsb
jge
inc
mov
es
rcrl
sbb
inc
test
rcrl
sbb
xor
and
sbb
sbb
mov
sbb
sbb
mov
mov
sbb
sbb
inc
jmp
xchg
aam
adc
ljmp
sbb
sbb
sbb
pop
sbb
sbb
sbb
outsb
cmp
inc
in
push
inc
or
aam
adc
cmpsb
daa
pop
mov
aam
adc
jle
dec
mov
rcrl
sbb
mul
push
aam
adc
mov
outsb
scas
jg
sbb
sbb
add
jo
mov
sbb
inc
rcl
adc
mov
inc
pop
inc
roll
test
repnz
sbb
sbb
xchg
add
test
add
into
mov
rcrl
sbb
jbe
mov
sbb
sbb
push
ds
aam
adc
mov
adc
sbb
sbb
mov
adc
push
mov
add
rcrl
sbb
negl
or
dec
dec
sbb
sbb
sbb
mov
sbb
out
in
rcrl
sbb
lcall
shrb
sub
shlb
ret
fisubs
rcrl
sbb
push
xchg
and
sbb
sbb
jb
aam
adc
sahf
outsl
jb
int
popa
in
sbb
sbb
push
jl
aam
adc
xchg
lret
push
mov
sbb
sbb
dec
jge
mov
rcrl
sbb
sbb
aam
adc
cwtl
add
add
idiv
cli
rcrl
sbb
into
pop
push
aam
adc
sarb
push
or
notl
cwtl
and
cmp
sbb
sbb
push
xchg
xor
sbb
sbb
xor
rcrl
sbb
sub
or
mov
xor
aam
adc
mov
mov
sbb
mov
and
clc
leave
xchg
pushf
pop
cmp
sbb
cmpsl
pop
sahf
sub
sbb
sbb
out
out
rcrl
sbb
data16
aam
adc
push
jle
rcl
adc
xchg
sub
push
nop
scas
lds
aam
adc
mov
add
shlb
sub
xchg
aam
jmp
ds
rcrl
sbb
scas
das
cmp
aam
adc
nop
gs
jo
and
aam
adc
lods
pop
test
mov
add
sbb
sbb
cs
aam
adc
or
mov
xor
sbb
sbb
xchg
add
aam
adc
mov
inc
lea
sbb
and
add
xchg
rcrl
sbb
xor
push
add
xor
sbb
sbb
out
push
adc
sbb
sbb
jbe
add
sbb
sbb
or
rcrl
sbb
jle
and
sbb
sbb
xchg
add
sbb
sbb
fs
sbb
sbb
dec
aad
aam
adc
mov
inc
push
int3
sahf
mov
aam
adc
sub
cmpsl
loop
inc
inc
sub
sbb
sbb
out
sub
sbb
sbb
adc
sub
sbb
sbb
scas
inc
sub
sbb
sbb
xchg
loopne
dec
out
pop
push
aam
adc
cwtl
xor
rcrl
sbb
sbb
shlb
aam
adc
xor
clc
rcrl
sbb
dec
arpl
xchg
sbb
pop
cld
cld
mov
lret
sbb
sbb
rcrl
sbb
ficoms
or
sbb
sbb
icebp
sub
push
dec
adc
adc
sbb
insb
push
lods
es
sub
sbb
sbb
mul
push
aam
adc
test
jno
scas
mov
or
sbb
sbb
outsb
mov
aam
adc
xchg
aas
dec
lea
sbb
sbb
ret
push
out
rcrl
es
jmp
inc
not
sbb
sbb
fwait
mov
clc
leave
pop
xor
adc
test
add
es
sbb
sbb
loope
es
dec
add
sbb
sbb
outsb
xchg
ret
rcrl
sbb
jl
aam
adc
pop
adc
lock
push
pop
sbb
sbb
sbb
inc
pop
outsl
leave
ds
jp
sbb
sbb
dec
push
sbb
shlb
ficomps
add
test
add
xchg
not
sbb
sbb
mov
sbb
dec
dec
daa
aam
adc
cmpsb
in
adc
mov
sbb
mov
rcrl
sbb
mov
adc
data16
push
out
add
sbb
sbb
subb
sbb
sbb
mov
mov
mov
ret
adc
movsb
insb
mov
jnp
push
add
add
jg
aam
adc
test
add
aam
adc
rorb
rcl
adc
shlb
roll
push
or
fiaddl
push
and
pushf
fnstenv
lds
dec
adc
sbb
sbb
out
mov
aam
adc
mov
pop
cld
rcrl
push
stos
gs
add
shrl
aam
adc
mov
mov
mov
xor
aam
adc
clc
arpl
inc
cs
sbb
sbb
sbb
push
aaa
mov
in
in
push
sub
cmp
ficoms
leave
mov
aam
adc
or
sbb
xlat
inc
mov
loopne
enter
loopne
aam
adc
into
sbb
into
pop
outsb
ret
or
mov
add
cld
push
or
aam
adc
mov
jle
sbb
sbb
sbb
adc
movsl
pop
out
sbb
aam
adc
jg
scas
or
mov
sbb
push
sbb
aam
adc
cwtl
add
add
leave
jecxz
sbb
sbb
xchg
gs
aam
adc
stos
outsb
pop
jae
or
rcrl
sbb
xchg
inc
ss
rcrl
sbb
xchg
sbb
push
sub
rcrl
sbb
cwtl
rcl
adc
popf
pop
repnz
aam
adc
cwtl
add
add
outsb
mov
rcrl
sbb
pop
or
sbb
sbb
cs
rcrl
sbb
cmpsb
jg
sbb
sbb
push
scas
clc
rcrl
sbb
sahf
aaa
adc
adc
int3
add
icebp
mov
js
aam
adc
mov
cmpb
sbb
sbb
sahf
lret
sub
sbb
sbb
je
rcrl
sbb
mulb
paddq
sbb
jbe
or
sbb
sbb
push
inc
test
sbb
sbb
add
cs
adc
mov
jae
pop
inc
or
aam
adc
mov
adcb
sbb
mov
xchg
sbb
pop
xor
lret
sbb
sbb
mov
loop
aam
adc
xchg
movsb
mov
sub
cmpsb
in
mov
aam
adc
lods
dec
xor
mov
int
aam
adc
mov
scas
pop
daa
aam
adc
mov
jle
push
sbb
sbb
sbb
add
test
sbb
sbb
ja
in
push
clc
rcrl
sbb
ret
sbb
sbb
xchg
sbb
push
push
aam
adc
shrb
popa
xchg
sbb
sbb
pusha
adc
adc
mov
sbb
stos
push
aas
add
sbb
sbb
cs
aam
adc
sahf
xchg
xchg
iret
out
movsb
paddq
sbb
mov
adc
mov
adcb
sbb
sbb
push
jno
rcrl
sbb
cltd
lock
test
sbb
sbb
sbb
ss
or
sbb
sbb
mov
adc
pushf
fists
mov
sbb
sbb
pop
jp
cmpsb
dec
sub
mov
outsb
out
sub
sbb
sbb
data16
test
add
mov
adc
dec
sbb
lcall
adc
xchg
and
aaa
xchg
mov
rcrl
sbb
rclb
aam
adc
push
xchg
loopne
pop
adc
adc
cld
mov
in
das
aam
adc
or
mov
aam
adc
sahf
icebp
sub
rolb
adc
inc
mov
jle
rcrl
sbb
std
sub
add
sbb
sbb
or
lods
std
cmp
xchg
cmpsb
adc
fildl
clc
rcrl
sbb
fisubs
rcrl
sbb
scas
push
aam
adc
fsubs
daa
mov
imul
adc
mov
stc
imul
aam
adc
mov
cmpsb
leave
sub
sbb
sbb
push
das
and
sbb
sbb
es
aam
adc
test
mov
sbb
add
sbb
sbb
mov
aam
adc
mov
rcl
sbb
sbb
stos
add
out
add
test
add
mov
adc
adc
cmp
imul
adc
mov
add
cld
inc
xchg
xchg
aam
adc
cld
loop
fs
mov
push
aam
adc
mov
add
movsb
sub
sbb
sbb
cli
sub
sbb
sbb
or
sbb
sbb
outsb
not
rcrl
sbb
pop
popa
gs
inc
push
rcrl
sbb
lret
ja
inc
pop
and
sbb
sbb
dec
lcall
pop
add
rcrl
sbb
int
lahf
mov
sbb
sbb
jle
rcrl
sbb
inc
push
push
aam
adc
add
cmp
mov
es
sbb
sbb
or
aam
adc
test
out
jnp
faddl
aam
adc
pushf
rolb
or
sbb
sbb
push
shll
adc
nop
add
cld
cld
mov
adc
addb
sub
sbb
sbb
es
sbb
sbb
out
xchg
aam
adc
inc
cmpb
into
sbb
sbb
mov
or
mov
mov
rcrl
sbb
in
fcmovu
jle
not
sbb
sbb
cs
mov
aam
adc
addb
int3
sahf
adc
sbb
sbb
pushf
fwait
or
cmp
sbb
inc
je
aam
adc
mov
push
cmpsb
lods
push
adc
xchg
pushf
dec
xchg
repz
jno
aam
adc
enter
data16
scas
cli
rcrl
sbb
scas
in
aam
adc
xchg
cmp
mov
sbb
sbb
push
rcll
mov
add
negb
sub
sbb
sbb
push
dec
add
mov
jecxz
lcall
sbb
outsb
xor
ss
rcl
sbb
sbb
dec
out
or
sbb
sbb
xchg
ficoml
mov
xchg
aam
adc
sahf
lahf
jo
shll
rcl
sbb
push
ljmp
rcrl
sbb
xchg
rorl
aam
adc
mov
mov
clc
rcrl
sbb
push
out
rcl
sbb
sbb
jge
inc
xchg
sbb
into
dec
rcl
adc
add
fadds
sahf
inc
and
sbb
sbb
sahf
iret
sub
sbb
sbb
xchg
sbb
test
add
mov
sbb
xlat
push
inc
outsb
mov
sbb
dec
add
sbb
sbb
and
pop
leave
mov
push
aam
adc
cmpsb
in
mov
rcrl
sbb
jg
data16
sbb
sbb
and
and
sbb
sbb
scas
aas
adc
adc
ret
cmp
aam
adc
lcall
add
sbb
sbb
movsb
sbb
sbb
sbb
pusha
call
aam
adc
pushf
push
insb
mulb
sub
sbb
sbb
inc
dec
adc
sbb
sbb
into
hlt
or
sbb
sbb
jecxz
push
testb
aam
adc
mov
mov
adc
enter
mov
sbb
sbb
movb
sbb
sbb
data16
int3
mov
or
sbb
sbb
cs
sbb
sbb
xor
xchg
data16
aam
adc
mov
pusha
leave
shrl
inc
adc
sbb
sbb
mov
sbb
push
sbb
aam
adc
test
add
push
adc
aam
adc
ret
push
or
adc
test
aam
inc
out
sub
scas
mov
or
sbb
sbb
enterw
adc
fdivrs
push
shrb
sbb
sbb
push
add
aam
adc
incb
scas
orb
aam
adc
pop
mov
mov
rcrl
sbb
mov
rcrl
sbb
jp
icebp
pop
xchg
sub
sbb
sbb
mov
sbb
enter
jbe
stc
rcrl
sbb
rcrb
aam
adc
mov
lret
sub
sbb
sbb
push
aam
adc
mov
push
sbb
sbb
sbb
sahf
rcl
sbb
sbb
inc
call
sbb
mov
aam
adc
ljmp
sub
sbb
sbb
mov
lock
mov
adc
cwtl
pushf
cmp
sub
sbb
sbb
mov
adc
pop
fdivrl
cs
adc
idivb
add
sbb
fisubs
mov
push
aam
adc
mov
sub
mov
aam
adc
nop
subl
push
aam
adc
cmpsb
daa
pop
mov
rcrl
sbb
jle
xchg
push
repz
adc
mov
cmp
or
sbb
sbb
sahf
mov
sbb
sbb
lahf
xor
sbb
sbb
and
pusha
xchg
loopne
aam
adc
loopne
popa
mov
aam
adc
mov
test
aam
adc
nop
popl
mov
pop
fistpll
mov
divw
sbb
sbb
movsl
rcrl
sbb
jae
aam
adc
mov
mov
stc
rcrl
sbb
inc
or
shlb
sarb
sbb
mov
das
aam
adc
int3
in
cmp
dec
in
sbb
sbb
idiv
or
int3
insl
lret
add
rcrl
sbb
es
or
sbb
sbb
adc
sbb
outsb
adc
adc
in
negl
cs
dec
clc
rcrl
sbb
push
ret
xor
sbb
sbb
out
jecxz
mov
adc
loop
adc
sbbb
sbb
sbb
out
cld
rcrl
sbb
and
adc
sbb
sbb
fmull
cli
rcrl
sbb
negb
aam
adc
stos
pop
out
pop
cs
test
sbb
sbb
pop
aam
adcb
aam
adc
mov
or
jp
aas
add
sbb
sbb
gs
scas
xchg
xor
sbb
sbb
push
dec
clc
rcrl
sbb
ss
rcl
adc
xchg
insb
add
lock
sbb
sbb
push
or
sbb
sbb
int
dec
cld
push
enter
adc
cwtl
add
add
out
rcl
sbb
sbb
xchg
sbb
sbb
stc
rcrl
sbb
adc
les
mov
sbb
push
inc
xchg
cmp
scas
mov
sbb
push
adc
stos
push
gs
ljmp
sbb
push
cmc
rcl
sbb
sbb
mov
mov
sbb
sbb
jle
adc
cmp
mov
adc
test
add
cld
sahf
loope
rcrl
sbb
mul
cli
rcrl
sbb
mov
sbb
sbb
pop
mov
jp
push
adc
sbb
sbb
aaa
sbb
sbb
sbb
idivl
notl
adc
push
dec
fnsave
lds
adc
mov
sahf
insl
pop
aam
adc
mov
outsb
dec
rcrl
sbb
mov
sbb
sbb
inc
pop
das
enter
rcrl
sbb
into
dec
adc
sbb
sbb
out
xchg
or
sbb
sbb
ss
xor
sbb
sbb
add
add
test
add
jbe
paddq
sbb
mov
adc
gs
adc
aam
adc
push
dec
sub
push
stos
or
sbb
sbb
pop
push
sbb
and
mov
sbb
sbb
out
aam
adc
mov
cmp
aam
adc
notb
in
rcrl
sbb
xchg
aam
adc
mov
test
into
movsl
pop
aam
adc
nop
jmp
mov
sbb
out
mov
aam
adc
cwtl
mov
mov
sbb
sbb
dec
or
push
scas
add
sbb
sbb
xchg
adc
sbb
sbb
push
dec
push
aam
adc
cwtl
add
add
ss
aam
adc
cmpsb
lcall
aam
adc
xchg
in
stos
sarb
adc
adc
pushf
repnz
aam
adc
rorb
repnz
cmp
rcrl
sbb
es
and
sbb
sbb
cli
and
add
inc
mov
add
test
add
out
and
fimull
pushf
subl
adc
ret
sbb
xor
sbb
sbb
push
rcrl
sbb
es
aam
adc
xchg
dec
test
sub
sbb
sbb
rorl
aam
adc
mov
mov
sub
sbb
sbb
add
insb
xchg
aam
adc
xchg
sbb
add
mov
std
repz
inc
push
aam
adc
mov
dec
ds
nop
jle
sbb
sbb
xchg
mov
sbb
inc
je
rcrl
sbb
and
stos
jle
xor
sbb
sbb
push
add
aam
adc
cmpsb
push
xor
out
data16
sbb
sbb
out
call
sbb
mov
mov
test
jb
in
jmp
aam
adc
jae
xchg
sbb
sbb
stos
and
sbb
sbb
int3
inc
xor
sbb
and
sbb
xor
sbb
sbb
push
leave
call
sbb
sbb
call
sbb
mov
mov
fsubrs
das
sti
rcrl
sbb
sbb
aam
adc
mov
pushl
adc
mov
push
and
aam
adc
aam
pusha
jne
push
push
aam
adc
mov
inc
lock
sbb
sbb
es
aam
adc
mov
sarl
mov
adc
mov
push
fdivs
aam
adc
es
ja
mov
sbb
sbb
mov
cmpsl
outsl
out
cli
rcrl
sbb
cs
sbb
mov
sbb
sbb
jbe
xor
mov
add
adc
addb
int3
push
jns
aam
adc
and
mov
aam
adc
pushf
xchg
icebp
adc
adc
mov
out
jp
rcrl
sbb
mov
push
aam
adc
mov
out
push
cmpsb
inc
rcrl
sbb
mov
gs
out
rcl
sbb
sbb
mov
rcrl
sbb
std
rcl
sbb
sbb
dec
into
loop
jno
aam
adc
xchg
rol
mov
sbb
sbb
mov
rcrl
sbb
mov
sbb
outsb
push
loope
sbb
aam
adc
nop
mov
or
test
add
cs
adc
sbb
sbb
push
repnz
aam
adc
mov
add
call
sbb
sbb
cmp
sub
adc
sbb
sub
test
aam
adc
sbb
dec
push
aam
adc
mov
add
rcrl
sbb
in
pop
jle
dec
sub
lret
dec
push
idiv
add
sbb
sbb
inc
daa
aam
adc
mov
out
pop
add
sbb
sbb
inc
inc
cld
rcrl
sbb
jle
sbb
sbb
sbb
sahf
and
sbb
sub
aam
adc
outsb
inc
icebp
pop
xor
rcrl
sbb
mov
aam
adc
mov
add
jmp
aam
aam
adc
shlb
inc
rcl
sbb
sbb
insl
add
in
sbb
sbb
jmp
iret
mov
addb
int3
sbb
sbb
sbb
mov
rcrl
sbb
sub
aam
sbb
sbb
push
lea
aam
adc
repnz
sbb
sbb
test
shr
cmp
cmpsb
mov
and
cld
rcrl
sbb
sbb
sbb
lret
cmp
repnz
sbb
sbb
dec
sahf
add
sahf
adc
aam
adc
mov
xchg
xor
sbb
sbb
lds
push
aas
or
sbb
sbb
negb
adc
sbb
sbb
cs
or
sbb
sbb
jbe
pop
ret
out
fdivs
sbb
sbb
outsb
arpl
aam
adc
js
bound
cmpsl
mov
and
sbb
sbb
mov
sbb
sbb
sbb
inc
lds
sbb
mov
aam
adc
js
sub
in
scas
sbb
sbb
sbb
and
rcrl
sbb
cmp
lods
test
xchg
adc
adc
test
pop
jne
xchg
fdivrl
sbb
sbb
dec
mov
mov
sbb
sbb
jle
call
sbb
sbb
data16
add
sbb
sbb
test
popf
out
mov
sub
lcall
sbb
sbb
cs
sbb
sbb
push
jmp
sbb
jle
pop
aam
adc
lods
pushf
cmp
aam
adc
xchg
in
sbb
adc
addb
int3
mov
cmpsb
test
xor
pop
mov
cld
rcrl
sbb
push
add
aam
adc
ret
fnstcw
sbb
sbb
scas
je
rcrl
sbb
jle
ret
rcrl
sbb
fistl
pop
divb
jo
mov
mov
addb
int3
push
xchg
and
sbb
sbb
fidivrl
sbb
sbb
sbb
or
movsb
push
enter
pop
aam
adc
les
xchg
decb
add
sbb
sbb
mov
sbb
negl
aam
adc
addb
sti
rcrl
sbb
xlat
or
mov
push
aam
sbb
sbb
dec
ja
sahf
mov
sbb
jbe
clc
rcrl
sbb
ss
adc
sbb
sbb
push
push
add
sbb
sbb
outsb
mov
mov
add
pop
sahf
test
sbb
push
ja
aam
adc
lret
xchg
repz
pop
aam
adc
nop
add
add
push
sub
rcrl
sbb
push
add
aam
adc
mov
dec
mov
aam
adc
jb
xor
dec
push
xchg
not
sbb
sbb
push
mov
aam
adc
pushf
stos
dec
loop
xchg
leave
pop
aam
adc
push
mov
movsb
xchg
cltd
adc
sbb
sbb
xchg
sbb
sbb
sbb
out
adc
sbb
sbb
call
mov
mov
mov
sbb
push
and
sbb
sbb
mov
aam
adc
addb
int3
xor
aam
adc
in
inc
mov
sbb
sbb
push
outsb
int3
and
sbb
sbb
jbe
adc
adc
pop
push
hlt
loope
mov
aam
adc
mov
addb
pop
mov
aam
adc
out
jmp
cmpsb
mov
cmpsl
mov
sbb
mov
lcall
paddq
sbb
ss
adc
mov
ss
sub
sbb
sbb
leave
push
xor
rcrl
sbb
or
sbb
sbb
fstpl
rcl
adc
nop
jecxz
inc
jg
loop
aam
adc
mov
mov
or
sbb
sbb
lods
cmp
or
xlat
xor
sbb
sbb
out
add
sbb
sbb
mov
sub
int
lcall
sbb
pop
adc
inc
cmp
rcrl
sbb
jbe
adc
test
pop
jbe
out
mov
sbb
sahf
loopne
aam
adc
lods
div
pop
push
js
rcrl
sbb
adc
aam
adc
mov
loope
inc
mulb
aam
adc
xchg
xor
xor
out
nop
push
aam
adc
aam
or
sbb
test
and
aam
adc
test
js
repz
and
sbb
sbb
fisubs
sbb
sbb
jbe
rcl
sbb
sbb
cltd
add
xor
ret
sbb
sbb
mov
call
sbb
out
les
aam
adc
cwtl
jbe
sub
rcrl
sbb
fiadds
sbb
lods
mov
paddq
sbb
cmp
sbb
sbb
pop
sbb
aam
adc
xchg
add
cmp
movsb
dec
sub
add
adc
sbb
sbb
push
xchg
sbb
sbb
sbb
scas
xchg
xor
sbb
sbb
push
sub
loope
iret
cmc
rcrl
sbb
xor
rcrl
sbb
lods
adc
adc
fidivrs
sbb
cwtl
std
popa
addr16
mov
xor
sbb
sbb
out
mov
lret
sbb
sbb
xchg
and
aam
adc
enter
and
adc
nop
movsb
les
neg
pop
aam
adc
nop
in
adc
mov
pop
aam
adc
mov
js
rcrl
sbb
or
out
out
cs
adc
mov
stos
sub
sbb
sbb
push
ljmp
ljmp
aam
adc
pushf
or
cmpsb
sub
sbb
sbb
xchg
std
sbb
sbb
sbb
mov
rcrl
sbb
xchg
rcrl
sbb
dec
push
add
sbb
sbb
inc
adcl
add
sbb
aam
adc
shlb
add
sbb
sbb
mov
and
in
mov
leave
push
xchg
adc
adc
shrb
mov
data16
sbb
sbb
dec
inc
das
aam
adc
dec
sbb
push
pop
mov
add
sbb
sbb
push
fstpl
sbb
sbb
in
mov
rcrl
sbb
aad
dec
mov
popf
aam
sbb
sbb
push
and
aam
adc
push
scas
pop
add
dec
mov
aam
adc
mov
jno
jbe
adc
sbb
sbb
push
in
aam
adc
xchg
xchg
sbb
add
mov
pop
push
push
aam
adc
les
lock
cs
aam
adc
shrb
loope
push
movsb
paddq
sbb
push
insb
or
mov
add
cld
data16
fisubs
dec
ret
adc
mov
fisubs
sbb
sbb
jbe
push
aam
adc
shlb
pop
test
ret
sbb
sbb
orl
outsb
insb
fisubs
fwait
add
sbb
sbb
xor
js
fbstp
adc
sbb
sbb
mov
aam
adc
xchg
in
sar
cwtl
inc
fdivr
rcrl
sbb
cmp
not
sbb
sbb
outsb
dec
rcrl
sbb
jbe
push
aam
adc
mov
push
inc
sub
sbb
sbb
ds
test
sbb
sbb
xchg
fiadds
aam
adc
addb
mov
pushf
sub
xor
js
aam
adc
push
test
and
into
mov
xor
aam
adc
out
popf
sub
and
aam
adc
sub
orl
dec
xor
aam
adc
mov
mov
sub
sbb
sbb
popf
jg
sbb
sbb
or
push
adc
sbb
sbb
push
mov
push
mov
in
sbb
sbb
loop
mov
aam
adc
addb
stc
rcrl
sbb
cmpsb
lea
aam
adc
test
sbb
aam
adc
xchg
jno
xchg
push
xor
sbb
pop
push
push
rcrl
sbb
outsb
test
sbb
sbb
pop
xchg
xchg
push
pop
clc
rcrl
sbb
and
sbb
xchg
or
sbb
sbb
jbe
adc
addb
int3
push
inc
adc
inc
gs
rcrl
sbb
sbb
sbb
call
aam
adc
mov
jbe
sbb
xchg
jo
test
push
je
aam
adc
out
stc
mov
aam
adc
ret
push
cmp
sbb
sbb
sbb
negb
aam
adc
mov
in
xor
sbb
sbb
out
cld
rcrl
sbb
ds
adc
sbb
sbb
mov
aam
adc
ret
insl
fdivrs
adc
mov
cmp
inc
push
outsb
or
sbb
sbb
es
aam
adc
mov
sub
aam
adc
rcr
mov
push
xor
aam
adc
mov
add
cld
out
sbb
sbb
sbb
movsw
rcl
sbb
sbb
mov
xor
sbb
sbb
mov
sbb
sbb
fcom
rcrl
sbb
arpl
add
in
aam
adc
mov
call
sbb
sbb
sbb
out
add
sbb
sbb
ss
sbb
fidivrs
sbb
into
xchg
aam
adc
movsl
jbe
sub
sbb
sbb
push
insb
add
sbb
sbb
jbe
rcl
sbb
sbb
fdivs
stc
rcrl
sbb
jl
mov
ret
adc
mov
std
rcrl
sbb
rcrb
not
sbb
sbb
cmpsb
sub
aam
adc
aam
cld
mov
jne
aam
adc
addb
cld
rcrl
sbb
scas
ds
sbb
sbb
push
std
rcrl
sbb
mov
adc
adc
cmpsb
mov
scas
or
cmp
rcrl
sbb
push
jmp
popa
inc
addr16
sbb
sbb
or
sub
sbb
sbb
insl
add
sbb
sbb
out
mov
sbb
cld
stc
sbb
dec
adc
scas
push
push
mov
mov
rcrl
sbb
mov
test
sbb
sbb
cmp
jb
mov
aam
adc
cwtl
add
add
sub
aam
adc
into
mov
add
aam
adc
cwtl
add
add
imulb
in
sbb
sbb
fdiv
mov
aam
adc
cwtl
dec
mov
adc
adc
lcall
sub
mov
rolb
es
rcrl
sbb
push
idivl
pop
add
sbb
sbb
cmpsb
mov
aam
adc
in
subps
sbb
sbb
cmpsb
sub
rcrl
sbb
mov
xor
sbb
and
pop
mov
sbb
idivb
shrb
and
in
rcrl
sbb
mov
and
sbb
sbb
loope
mov
sahf
mov
sbb
in
xchg
in
xor
aam
adc
mov
push
movsb
pop
es
rcl
sbb
sbb
std
cmp
or
sbb
sbb
into
adc
rcrl
sbb
jge
mov
sbb
sbb
jg
scas
jb
addr16
sbb
sbb
sub
sbb
sbb
mov
adc
mov
fisubrs
rcrl
sbb
jl
or
rcl
adc
in
je
pop
js
push
call
sbb
sbb
pushf
sub
cwtl
mov
sahf
aam
sbb
sbb
out
mov
daa
into
pop
or
sbb
sbb
sub
pop
adc
or
mov
and
rcrl
sbb
pushf
pop
aam
adc
mov
rolb
sbb
sbb
stos
inc
das
xor
aam
adc
mov
out
sahf
xchg
aam
adc
in
hlt
dec
cwtl
out
pop
sub
sbb
sbb
fwait
xor
sbb
sbb
in
aam
adc
mov
sub
sbb
sbb
outsb
das
and
sbb
sbb
sub
jecxz
aam
adc
divb
imul
cli
rcrl
sbb
inc
sbb
mov
xchg
add
sbb
sbb
push
mov
aam
adc
mov
cld
jns
es
rcrl
sbb
in
fwait
xchg
icebp
data16
xor
sbb
sbb
divb
sbb
out
rcrl
sbb
cltd
sub
sbb
sbb
outsb
addl
sbb
sbb
sub
rcrl
sub
xor
out
popf
sbb
sbb
sbb
ss
push
aam
adc
cwtl
add
add
out
adc
adc
addb
ret
rcrl
sbb
ds
and
sbb
sbb
xchg
aam
adc
xchg
decl
std
rcrl
sbb
imul
dec
xor
ds
mov
add
sbb
sbb
test
aam
adc
push
jae
or
rcrl
sbb
cs
aam
adc
nop
movsb
les
pop
divb
aam
adc
add
xor
scas
or
aam
adc
jb
sbb
add
adc
mov
cmpsb
or
rcrl
sbb
add
rcrl
sbb
outsb
sbb
lcall
add
test
add
push
and
sbb
sbb
push
push
aam
adc
js
rorl
xchg
sbb
push
add
sbb
sbb
mov
sbb
sbb
sbb
cli
ret
and
out
and
aam
adc
fsubrs
add
fsubrp
call
sbb
sbb
adc
aas
push
push
sbb
xor
sbb
sbb
xchg
fs
sbb
sbb
ds
sbb
sbb
xchg
push
or
int3
sbb
add
sbb
sbb
mov
sbb
cmpsb
cmpl
rcrb
psrld
sbb
sbb
dec
dec
xchg
inc
xchg
jb
rcrl
sbb
ss
add
sbb
sbb
loopne
adc
aam
adc
lcall
adc
sbb
sbb
dec
mov
rcrl
sbb
push
es
rcrl
sbb
ss
rcrl
sbb
mov
push
aam
adc
mov
cmpsb
rcrb
inc
or
sahf
repz
sbb
sbb
out
push
aam
adc
cwtl
xlat
mov
and
sbb
sbb
scas
cmpsb
pop
aam
adc
cmpsb
dec
outsb
movsb
icebp
out
bound
mov
push
sbb
aam
adc
test
add
ds
sbb
mov
or
aam
adc
test
add
outsb
inc
sub
mov
addb
repnz
sbb
sbb
xchg
aam
adc
lret
es
outsb
arpl
aam
adc
add
push
orl
adc
pushf
outsl
jbe
iret
cmpsb
shrb
sbb
sbb
push
cli
rcl
sbb
sbb
out
adc
sbb
sbb
into
and
sbb
sbb
out
lods
ret
adc
xchg
xor
adc
sbb
sbb
sbb
sbb
adc
mov
sbb
sbb
orl
mov
push
pop
cmp
int3
push
aam
adc
cwtl
add
add
push
sbb
sbb
test
aam
adc
lcall
add
sbb
sbb
mov
sbb
into
add
mov
lret
imul
adc
nop
fldl
loopne
sbb
aam
adc
mov
add
cld
scas
loope
rcrl
sbb
fdivrs
sub
add
test
aam
adc
xchg
pop
stos
xchg
ret
or
sbb
sbb
push
xor
mov
add
aam
adc
sahf
cmp
adc
sbb
sbb
xchg
or
sbb
sbb
out
cmpsb
dec
xchg
xchg
push
aam
adc
sahf
cmp
in
push
cs
sbb
mov
sbb
rcrl
sbb
out
sbb
sbb
sbb
out
or
mov
lds
scas
iret
adc
sbb
sbb
fcomps
xor
sbb
sbb
into
inc
sbb
sbb
sbb
into
movb
ficoms
dec
scas
xor
aam
adc
ljmp
rcl
adc
aam
pop
sbb
jbe
add
sbb
sbb
ss
sub
sbb
sbb
cmpsb
popf
add
sbb
sbb
lds
aam
adc
add
inc
xor
mov
into
sub
test
push
push
pop
ss
sbb
std
xor
outsb
jae
rcrl
sbb
push
aam
adc
add
xchg
in
mov
sbb
addr16
fstl
sbb
aam
adc
cwtl
pop
sbb
mov
test
and
jg
sbb
sbb
repz
sub
sbb
sbb
sbb
dec
xor
out
arpl
xchg
sahf
push
sbb
push
mov
sbb
sbb
idivb
aam
sbb
sbb
xchg
test
sbb
testb
pop
dec
bound
cld
jbe
sub
sbb
sbb
ds
sbb
push
adc
rcrl
sbb
add
mov
aam
adc
mov
cmp
aam
adc
nop
jecxz
jge
push
lret
or
sbb
sbb
rorl
sbb
arpl
stos
lods
daa
pop
cmpsb
push
fildl
aam
adc
cmpsb
aam
xchg
adc
mov
push
fildll
sbb
sbb
push
xor
inc
insb
pop
and
aam
adc
mov
xchg
jmp
aam
adc
xchg
inc
pop
mov
aam
adc
movsb
jb
ljmp
adc
mov
inc
cmp
mov
aam
adc
mov
xchg
inc
clc
rcrl
sbb
push
and
rcrl
sbb
movsb
xor
sbb
sbb
ret
adc
ds
movsl
stos
mov
mov
sbb
sarl
aam
adc
ret
push
or
in
push
aam
adc
lods
leave
dec
mov
aam
adc
fisubrl
pop
aam
adc
jl
scas
add
pop
add
sbb
sbb
mov
adc
scas
mov
sub
sbb
sbb
adc
and
sbb
sbb
xor
aam
adc
mov
mov
sbb
sbb
sbb
xchg
mov
mov
jnp
pop
xchg
mov
sbb
ss
lcall
mov
sub
imul
adc
fiaddl
fisubl
sbb
sbb
push
sti
adc
sbb
sbb
es
sbb
xor
xlat
not
sbb
sbb
mov
aam
adc
mov
pusha
leave
shrl
sti
rcrl
sbb
test
sbb
xor
adc
fcomps
add
sbb
jbe
add
sbb
sbb
and
aam
adc
nop
add
add
push
sub
aam
adc
mov
cmp
sbb
sbb
inc
repnz
aam
adc
cmpsb
ds
pop
add
daa
aam
adc
stos
sbb
ja
outsb
call
sbb
inc
test
aam
adc
xchg
cwtl
xchg
out
inc
sbb
pushf
lds
inc
push
shl
rcrl
sbb
pop
mov
sbb
sbb
push
or
sbb
sbb
pop
pop
adc
adc
sub
enter
adc
test
adc
sahf
cmp
rcrl
pop
and
xchg
mov
out
add
sbb
sbb
push
xchg
sbb
sbb
sbb
adc
ficoms
rcrl
sbb
outsb
pusha
sti
rcrl
sbb
mov
aam
adc
enter
repz
fs
aam
adc
addb
rcl
adc
mov
and
test
add
or
ret
sbb
sbb
push
sbb
lods
pop
sbb
aam
adc
mov
cmc
sbb
das
aam
adc
mov
inc
add
sbb
sbb
dec
and
aam
adc
mov
enter
sub
sbb
sbb
push
xlat
not
sbb
sbb
jecxz,pt
aam
adc
mov
push
fucom
rcrl
sbb
mov
or
mov
add
clc
outsb
out
rcrl
sbb
xchg
sub
sbb
scas
xor
test
add
rcrl
sbb
push
scas
mov
rcrl
sbb
jbe
mov
mov
out
xor
sbb
sbb
fmuls
sbb
sbb
test
sbb
and
ja
cmp
rcrl
sbb
data16
aam
adc
movsl
and
movb
mov
xchg
adc
pop
add
sbb
sbb
cmpsb
rcrl
sbb
push
or
sbb
sub
call
sbb
sbb
imul
mov
cmp
aam
adc
lcall
sbb
sbb
sbb
out
adc
movsl
leave
mov
movsl
sub
sbb
sbb
xchg
sbb
shll
sub
sbb
sbb
push
adc
out
inc
cmc
movsl
lcall
sbb
into
push
aam
adc
xchg
aad
stos
or
push
jns
sbb
sbb
adc
data16
pop
add
sbb
sbb
cs
add
sbb
sbb
imul
sbb
sbb
adc
nop
push
mov
rcrl
sbb
jbe
sbb
sbb
sbb
xchg
cli
lahf
cmp
js
aam
adc
mov
les
aam
adc
movsb
jae
imul
adc
cwtl
add
out
std
rcrl
sbb
pop
lret
cmp
mov
sbb
scas
mov
aam
adc
inc
insl
push
fisttpl
aam
adc
cwtl
add
add
mov
aam
adc
jbe
sub
rcrl
sbb
push
dec
adc
addb
int3
idivb
sbb
sbb
dec
sbb
sbb
out
jecxz
sbb
sbb
outsb
jg
jle
rcl
adc
mov
imul
sbb
sbb
ss
aam
adc
call
lcall
mov
push
mov
xchg
rclb
stos
adc
sbb
sbb
cli
xor
sbb
sbb
dec
aad
rcrl
sbb
xor
aam
adc
or
inc
movsl
xor
jg
aam
adc
addb
int3
mov
push
aam
adc
xchg
test
xchg
imulb
sbb
ret
jnp
mov
sbb
mov
adc
xchg
sub
sub
adc
sbb
pop
xor
cltd
mov
addb
int3
mov
and
sbb
sbb
out
sub
dec
cmp
inc
cmpsb
out
rcrl
sbb
negl
sbb
sbb
dec
clc
rcrl
sbb
sahf
mov
sbb
jmp
mov
nop
movsb
les
pop
push
jge
rcrl
sbb
dec
jb
jns
jge
rcrl
sbb
sub
cltd
add
in
pop
jmp
aam
adc
test
leave
leave
xchg
push
aam
adc
mov
add
cld
xchg
aam
adc
push
mov
in
sahf
adc
aam
adc
movsb
mov
sbb
jbe
clc
rcrl
sbb
movsl
adc
sbb
sbb
es
xor
sbb
sbb
ss
aam
adc
mov
add
add
push
rcrl
sbb
xchg
push
add
pop
aam
adc
pop
mov
jge
aam
adc
or
sub
outsb
lldt
sbb
sbb
cmp
test
ficoml
sahf
mov
sbb
or
sbb
mov
sub
sbb
sbb
idiv
or
sbb
sbb
ds
mov
mov
out
insb
mov
sbb
sbb
stc
in
cmpl
or
sbb
sbb
imul
sbb
sbb
pop
mov
aam
adc
mov
test
jbe
rcl
adc
mov
inc
add
sbb
inc
dec
rcl
sbb
sbb
push
push
pusha
mov
cli
rcrl
sbb
into
xor
aam
adc
enter
xorl
or
fimuls
aam
adc
xchg
push
sub
rcl
sbb
sbb
int3
or
sbb
sbb
mov
adc
cwtl
mulb
inc
mov
aam
adc
mov
push
add
sbb
sbb
pop
and
into
push
jecxz
fadds
adc
lret
push
sahf
js
rcrl
sbb
push
repnz
test
pop
push
int
push
sub
nop
fldl
loopne
xchg
mov
clc
enter
dec
cmp
out
lcall
sbb
sbb
push
lcall
pop
add
push
ds
adc
test
push
faddp
push
clc
rcrl
sbb
xor
repnz
ret
sbb
sbb
sbb
xchg
rcrl
sbb
outsb
ds
in
or
jle
aam
adc
test
lret
push
pop
mov
xchg
rorb
adc
aam
adc
mov
sbb
rcrl
sbb
push
lret
sbb
sbb
mulb
mov
rolb
push
roll
pusha
cld
sub
rcrl
sbb
data16
aam
adc
ret
stc
pop
testb
aam
adc
test
add
cld
mov
sbb
test
sbb
repz
sbb
sbb
jo
int3
stc
jbe
test
sbb
sbb
or
pop
lret
rcl
sbb
sbb
cmpsb
jp
aam
adc
mov
push
daa
mov
shll
sbb
sbb
cld
or
nop
jmp
sbb
aam
adc
inc
jnp
jo
pop
push
sbb
popa
jne
notl
sub
aam
adc
mov
mov
xor
sbb
sbb
or
adc
sbb
sbb
add
aam
adc
mov
ss
aam
adc
test
cwtl
dec
mov
sbb
sbb
cltd
xchg
and
adc
mov
es
sbb
sbb
dec
sub
sbb
sbb
sub
or
sbb
sbb
inc
scas
rolb
and
aam
adc
fisubs
arpl
aam
adc
mov
test
aam
adc
notb
add
push
cmp
mov
add
cld
xor
test
add
push
sahf
mov
mov
push
cmpl
adc
mov
test
sub
sbb
sbb
cs
sbb
jbe
sub
sbb
sbb
ss
add
sbb
sbb
jle
xor
sbb
sbb
fmuls
aam
adc
lock
fwait
inc
out
loop
aam
adc
fxch
xor
adc
mov
add
add
adc
adc
push
enter
and
sbb
xchg
sbb
outsb
sub
aam
adc
mov
dec
cmpl
adc
das
mov
sbb
sbb
sbb
mov
sbb
push
jo
rcrl
sbb
push
mov
sbb
add
in
inc
add
fdivr
rcrl
sbb
push
cmp
aam
adc
push
sub
push
aam
adc
mov
add
add
and
sbb
sbb
lret
das
push
push
xor
sbb
sbb
out
repz
sbb
sbb
lods
ret
rcrl
sbb
push
sub
aam
adc
xchg
cmpb
stc
rcrl
sbb
mov
cmp
mov
rolb
inc
sub
sbb
sbb
outsb
leave
mov
sbb
cmpsb
mov
test
jge
rcrl
sbb
loope
rcrl
sbb
into
lods
mov
addb
int3
xchg
xor
rcrl
sbb
push
cwtl
push
aam
adc
sub
cmp
into
int3
rcl
sbb
sbb
mov
pop
adc
adc
jp
adc
xchg
loopne
rcrl
sbb
push
adc
rcrl
sbb
push
mov
sbb
data16
aam
adc
addb
add
sbb
sbb
push
add
aam
adc
cwtl
add
add
pop
paddq
sbb
test
sbb
dec
arpl
rcrl
sbb
add
paddq
sbb
jns
rcrl
sbb
pop
pop
aam
adc
mov
pop
rcl
sbb
sbb
mov
mov
idiv
sub
sbb
sbb
ss
rcrl
sbb
cld
or
sbb
sbb
mov
adc
add
mov
fadds
adc
stos
xor
sub
ss
aam
adc
rclb
sbb
mov
mov
out
inc
xchg
std
push
aam
adc
ret
xor
sbb
sbb
push
stc
sbb
sbb
sbb
cmp
sbb
into
jle
aam
adc
xchg
sub
adc
adc
scas
and
scas
cli
rcrl
sbb
outsb
rorl
aam
adc
lret
es
hlt
and
sbb
sbb
ss
and
sbb
sbb
mov
adc
jl
lods
push
aam
adc
mov
cmp
push
inc
clc
rcrl
sbb
push
fldl
aam
adc
mov
cmp
inc
push
fwait
jg
sbb
sbb
lds
pop
aam
xchg
aam
adc
mov
cmp
aam
adc
lcall
push
aam
adc
mov
add
add
sbb
sbb
cmpsb
xor
aam
adc
test
add
data16
aam
adc
xchg
cmc
arpl
out
lcall
movsl
sub
sbb
sbb
es
and
sbb
sbb
cmpsb
std
rcrl
sbb
pushf
mov
or
adc
mov
hlt
mov
ror
into
repz
adc
repnz
addr16
cs
xor
sbb
sbb
cli
in
es
aam
adc
xchg
or
adc
sbb
sbb
decb
sbb
lods
jns
jl
orl
sbb
sbb
xchg
or
sbb
sbb
mov
stc
rcrl
sbb
or
sbb
adc
push
mov
rcl
sbb
sbb
movsl
xor
data16
add
sbb
sbb
push
push
sub
mov
cmpsb
and
lcall
sub
mov
dec
push
or
sbb
sbb
lcall
aam
adc
mov
mov
sbb
sbb
mov
sbb
notb
add
sbb
sbb
push
and
push
jbe
aam
adc
mov
cwtl
lret
jae
fmuls
aam
adc
mov
dec
pop
stos
adc
aam
adc
scas
mov
aam
adc
mov
orb
sbb
sbb
scas
sub
rcrl
sbb
scas
addr16
sbb
sbb
and
aam
adc
mov
cmpsb
sbb
sbb
sbb
fisubl
sbb
sbb
incb
sbb
xchg
out
sarb
into
jmp
sbb
aas
stos
bound
adc
aam
adc
mov
lret
sbb
sbb
push
and
aam
adc
mov
fcoms
aam
adc
mov
gs
sbb
sbb
es
sub
mov
add
std
xchg
add
sbb
sbb
push
adc
aam
adc
mov
add
cld
scas
and
rcrl
sbb
scas
das
sbb
sbb
sbb
rorb
or
sbb
sbb
or
pop
push
aam
adc
mov
test
push
test
sbb
jbe
add
xchg
mov
xchg
push
fs
sbb
sbb
add
aam
adc
mov
xchg
push
sub
sbb
sbb
cmpsb
push
sbb
mov
sbb
mov
adc
rcr
xchg
lods
push
xchg
sub
sbb
sbb
insb
scas
js
ss
rcl
adc
addb
int3
push
xchg
mov
sbb
push
addb
dec
es
stc
rcrl
sbb
pop
add
test
add
sti
rcrl
sbb
es
rcrl
sbb
scas
or
aam
adc
test
jp
mov
sbb
sbb
cmpsb
loop,pn
jle
sub
sbb
sbb
cs
fs
arpl
rcrl
sbb
notb
push
aam
adc
nop
add
add
scas
movsl
and
sbb
sbb
test
stc
rcrl
sbb
sub
mov
fisubs
rcl
sbb
sbb
test
aam
adc
mov
jg
push
shrb
adc
addb
or
sbb
sbb
xchg
loope
push
aaa
in
sbb
sbb
push
add
sbb
push
imul
lods
lods
and
pop
aam
sbb
sbb
push
out
push
scas
bound
aam
adc
shlb
push
push
aam
adc
mov
adc
hlt
push
adc
xchg
es
mov
mov
sub
sbb
sbb
out
test
aam
adc
mov
cmp
inc
out
adc
sbb
mov
push
aam
adc
sahf
mov
out
aam
adc
test
add
aam
adc
mov
jle
push
aam
adc
ds
adc
mov
not
sbb
sbb
push
rcl
adc
into
add
dec
cmp
adc
sbb
sbb
add
aam
adc
ret
cwtl
andl
sbb
xchg
rorl
sbb
sbb
clts
aam
adc
test
rep
cli
incb
and
sbb
sbb
jo
lock
push
arpl
aam
adc
or
aas
dec
cmpsl
mov
aam
adc
mov
push
iret
outsb
xchg
addb
int3
jle
adc
pushf
adc
fwait
or
sbb
sbb
imulb
aam
adc
mov
add
add
arpl
aam
adc
cmpsb
pop
push
movsb
fnstenv
adc
mov
xchg
push
sbb
sbb
sbb
jbe
adc
adc
out
cwtl
repnz
popa
stc
rcrl
sbb
mov
cld
rcrl
sbb
mov
adc
xchg
rclb
je
aam
adc
sahf
jmp
jp
xchg
pusha
mov
mov
notb
sbb
xchg
aam
adc
xchg
add
js
aam
adc
mov
jg
adc
adc
lods
mov
add
rcrl
sbb
or
fists
adc
test
add
sub
test
mov
sbb
jp
aam
adc
pushf
loop
jmp
rcrl
sbb
cmpsb
insb
mov
nop
pop
mov
pop
sbb
rcrl
sbb
xchg
xlat
paddq
sbb
testb
aam
adc
lcall
and
sbb
sbb
aam
adc
mov
jl
push
dec
daa
aam
adc
sahf
aas
xchg
sbb
ret
js
sbb
sbb
and
out
mov
rcrl
sbb
sub
jecxz
sbb
sbb
mov
sbb
jbe
push
aam
adc
scas
xchg
cmpsb
or
movsw
mov
test
add
aam
adc
mov
jl
mov
sbb
cs
sub
ret
stc
pop
es
sbb
sbb
mov
mov
rcrl
sbb
lods
mov
mov
negb
test
sbb
sbb
ficoms
aam
adc
mov
filds
mov
jbe
jbe
sbb
pop
push
repnz
pushf
jbe
add
sbb
sbb
xchg
icebp
adc
inc
cld
rcrl
sbb
xor
test
add
cs
or
mov
add
cld
mov
sbb
push
add
sbb
sbb
mov
add
sbb
sbb
mov
adc
jo
test
stc
mov
adc
sahf
outsl
xchg
sbb
insl
and
enter
dec
mov
xor
sbb
sbb
outsb
sub
sbb
sbb
loopne
aam
adc
adc
ds
cs
sbb
cs
sbb
mov
sbb
cmp
sbb
cwtl
loop
aam
adc
mov
add
cld
ds
mov
mov
movsb
or
sbb
sbb
xchg
aam
adc
les
jp
mov
mov
sbb
sbb
data16
mov
xlat
push
aam
adc
mov
out
pop
sub
sbb
sbb
lret
cmp
or
sbb
sbb
sti
fs
inc
and
sbb
push
std
sub
sbb
sbb
or
add
test
add
out
or
addb
sbb
sbb
sbb
popl
adc
sbb
sbb
repz
dec
mov
sbb
outsb
ret
or
sbb
sbb
out
cwtl
stc
rcrl
sbb
lea
adc
mov
lcall
adc
sub
cmc
pop
jnp
mov
aam
adc
pushf
dec
or
fistpl
mov
sahf
pop
stos
push
push
push
sbb
sbb
call
sbb
mov
int3
out
sbb
sbb
sbb
lahf
push
sti
sbb
adc
test
add
rcrl
sbb
cs
sbb
dec
insl
out
inc
ret
rcrl
sbb
xor
and
xchg
lock
stc
scas
outsb
ret
adc
sbb
sbb
das
mov
cs
adc
xchg
les
push
jne
rcrl
sbb
out
xor
sbb
sbb
mov
adc
addb
mov
cmpsb
aam
sub
sbb
sbb
mov
cmpsb
dec
sub
mov
movsl
rcrl
sbb
xchg
lret
sub
sbb
sbb
push
mov
aam
adc
repnz
cmpsb
xchg
push
mov
sbb
mov
rcl
adc
mov
inc
pop
xchg
lods
and
sbb
sbb
pop
mov
sbb
jbe
sbb
fiaddl
cmpsb
mov
sbb
and
sub
inc
idiv
sti
rcrl
sbb
sbb
rcrl
sbb
into
lds
aam
adc
rolb
jno
rcrl
sbb
mov
sbb
cs
sub
mov
popa
daa
aam
adc
mov
mov
mov
sub
cmpb
adc
test
add
or
adc
sbb
sbb
mov
rcrl
sbb
invd
mov
scas
test
aam
adc
sbb
dec
gs
adc
pushf
jns
and
ss
sbb
sbb
dec
add
aam
adc
inc
clc
mov
adc
adc
mov
out
ds
mov
add
rcrl
sbb
mov
aam
adc
mov
rorl
adc
test
add
notb
xor
mov
sbb
out
cli
sbb
sbb
sbb
lods
clc
rcrl
sbb
enter
inc
repnz
rcrl
sbb
dec
inc
out
cmc
rcrl
sbb
repz
sahf
jne
rcrl
sbb
outsb
cmp
rcrl
sbb
dec
mov
push
push
mov
aam
adc
call
into
sub
mov
xchg
add
sbb
sbb
fldl
fwait
sub
sbb
sbb
mov
sub
sbb
add
push
rcrl
sbb
push
rorl
aam
adc
mov
jle
push
sbb
sbb
enter
xchg
rcl
sbb
sbb
into
xor
divb
aam
adc
cwtl
aaa
xor
cmpsb
cmpsb
sub
sbb
sbb
insb
sub
mov
sbb
sbb
pop
adc
sbb
sbb
imul
sbb
mov
aam
adc
ret
sub
xchg
jle
aam
adc
push
sbb
xor
sbb
sbb
push
xchg
sub
sbb
sbb
push
jmp
ds
add
sbb
sbb
cmpsb
add
rcrl
sbb
mov
sbb
fidivs
rcrl
sbb
outsb
jb
aam
adc
out
cli
add
mov
add
test
add
cmpsb
adc
aam
adc
rclb
mov
aam
adc
xchg
mov
mov
rcrl
sbb
mov
rcl
sbb
sbb
into
lds
aam
adc
adc
adc
sbb
sbb
push
sarb
sbb
sbb
lock
sbb
sbb
pop
stos
mov
lea
aam
adc
xchg
sub
sbb
cmp
sbb
adc
aam
adc
test
add
push
push
and
sbb
sbb
add
pop
push
sbb
sbb
push
adc
aam
adc
fmull
outsl
add
adc
sahf
mov
into
sub
sbb
sbb
push
or
aam
adc
mov
inc
int3
jbe
add
cwtl
pop
lret
adc
aam
adc
xchg
adc
xchg
inc
rcrl
sbb
adc
inc
aaa
jns
lds
adc
test
dec
ja
push
mov
sbb
pop
insb
mov
xchg
adc
and
mov
rcrl
sbb
outsb
fstl
aam
adc
test
push
push
aam
adc
movsb
outsb
outsl
fisubrs
cs
sbb
sbb
loope
into
rcl
rcrl
sbb
mov
adc
mov
outsb
pop
xor
sbb
sbb
mulb
sbb
arpl
aam
adc
mov
mov
aam
adc
xchg
add
pop
push
aam
adc
fcomps
pop
ret
push
jp
aam
adc
int3
add
mov
sbb
or
sbb
sbb
popf
shlb
push
subl
loop
inc
into
inc
push
mov
rcrl
sbb
imul
test
add
cld
es
and
sbb
sbb
sub
aam
adc
mov
ljmp
adc
addb
adc
dec
test
aam
adc
mov
orb
push
jg
rcrl
sbb
push
push
push
cltd
es
ja
sbb
sbb
fdivl
sub
sbb
sbb
push
mov
sbb
es
sbb
scas
jo
rcrl
sbb
dec
lcall
sbb
sbb
adc
pushf
int3
imul
sbb
sbb
sahf
imul
sbb
sbb
cs
sbb
sbb
dec
xchg
and
sbb
sbb
push
ret
sbb
sbb
cmpsb
loope
aam
adc
mov
push
data16
rcrl
sbb
push
dec
xor
sbb
sbb
xor
aam
adc
dec
lahf
das
insl
movsb
or
sbb
sbb
ss
ret
adc
or
popa
and
sbb
sbb
sahf
loopne
aam
adc
mov
cmp
aam
adc
cld
mov
mov
or
sbb
sbb
push
ret
sbb
sbb
inc
data16
rcrl
sbb
and
subb
xor
sbb
sbb
dec
out
aam
adc
addb
add
sbb
sbb
push
dec
call
sbb
sbb
daa
clc
rcrl
sbb
push
mov
aam
adc
cld
cltd
lods
mov
outsl
adc
adc
mov
clc
pop
cwtl
ss
rcrl
sbb
push
imul
jnp
push
xchg
push
or
aam
adc
scas
sbb
mov
aam
adc
mov
mov
rcl
sbb
sbb
sub
and
adc
addb
int3
incb
rcrl
sbb
aam
aam
adc
pushf
lcall
aam
adc
mov
cmp
pop
cltd
adc
into
mov
test
mov
das
aam
adc
and
sbb
sbb
jle
rcrl
sbb
repz
xchg
sbb
sbb
xchg
xchg
aam
adc
addb
int3
fisubs
sbb
sbb
lock
push
inc
ss
paddq
sbb
push
sub
rcrl
sbb
push
pop
sub
mov
fadd
push
out
adc
shll
fimuls
das
sti
rcrl
sbb
jbe
push
aam
adc
mov
xchg
data16
aam
adc
xchg
xchg
scas
cmc
jp
push
sub
sbb
sbb
or
rcrl
sbb
push
insb
adc
sahf
mov
es
adc
nop
lods
or
rcrl
sbb
outsb
and
test
add
or
cmpsl
js
sbb
sbb
adc
jno
push
cmc
sbb
sbb
sbb
fstl
push
aam
adc
mov
adc
rcrl
sbb
inc
pop
add
test
add
ficomps
rcl
sbb
sbb
xchg
rcrl
sbb
notb
aam
adc
ljmp
add
sbb
sbb
dec
add
aam
adc
xchg
popa
inc
inc
dec
data16
aam
adc
mov
jb
xchg
outsb
and
sbb
sbb
jbe
mov
mov
ss
rcrl
sbb
jnp
rcrl
sbb
push
lock
rcrl
sbb
fidivrl
sbb
sbb
fs
dec
clc
push
xchg
and
sbb
sbb
xor
pop
es
sbb
into
hlt
adc
adc
xorb
and
sbb
sbb
push
outsb
mov
mov
test
adc
sbb
pop
sbb
sahf
mov
sbb
sbb
cmp
rcrl
sbb
es
adc
sbb
sbb
cs
or
sbb
sbb
jp
aam
adc
mov
lock
pusha
cmpsb
xor
addb
int3
pop
mov
sbb
sbb
outsb
fsubl
aam
adc
cwtl
sti
arpl
aam
adc
movsb
jge
lret
popa
mov
sbb
dec
push
push
aam
adc
mov
sahf
outsb
or
lcall
sub
sbb
sbb
push
ret
rcrl
sbb
push
test
fldl
ret
adc
or
push
sub
adc
adc
or
ret
rcl
adc
dec
xchg
test
aam
adc
mov
mov
test
sbb
sbb
or
addb
adc
adc
push
test
pop
das
aam
adc
mov
mov
inc
mov
adc
mov
es
adc
sub
addr16
sahf
rolb
xor
xchg
rorl
sbb
out
or
sbb
sbb
loope
es
cmp
rcrl
sbb
xchg
dec
clc
rcrl
sbb
fimuls
sbb
xchg
xor
sbb
imul
adc
mov
inc
mov
notb
adc
mov
jmp
rcrl
sbb
jecxz
dec
hlt
jbe
pop
aam
adc
test
in
fcomps
rcrl
sbb
sbb
xor
add
sbb
sbb
ds
rcrl
sbb
inc
sub
sbb
sbb
add
aam
adc
mov
cmpsb
mov
aam
adc
xchg
and
xor
out
push
rcl
adc
mov
ds
stc
rcrl
sbb
push
cltd
add
sbb
sbb
sahf
ljmp
inc
inc
push
push
into
push
add
sbb
sbb
jbe
pop
aam
adc
mov
ds
test
lea
aam
adc
add
stc
jle
clc
rcrl
sbb
in
xchg
out
sahf
mov
sbb
cmpsb
push
add
test
add
ficoms
xor
sbb
sbb
xchg
mov
lea
adc
cmpsb
out
mov
xchg
lret
sbb
sbb
push
popf
not
sbb
sbb
in
adc
int3
das
aad
addr16
fmuls
nop
add
loopne
add
aam
adc
cwtl
add
add
push
and
rcrl
sbb
test
cmp
in
aam
adc
mov
inc
in
cld
cmpsb
ja
aam
adc
nop
mov
testl
aas
out
iret
fisubs
sbb
outsb
popf
xchg
adc
sbb
sbb
mov
aam
adc
nop
push
cmp
sbb
sbb
mov
mov
sbb
sbb
out
add
test
add
xor
aam
adc
mov
decl
cld
rcrl
sbb
pop
xor
jl
or
test
add
fimuls
sbb
ficomps
sbb
cmp
aam
adc
mov
cld
decl
sbb
sbb
sbb
pop
cld
jp
push
mov
sbb
sbb
push
jae
inc
push
rorl
aam
adc
mov
jge,pt
dec
in
aam
adc
pushf
lock
sbb
sbb
xchg
or
sbb
sbb
cltd
adc
sub
adc
lea
add
sbb
sbb
notb
add
sbb
sbb
pop
dec
rcl
adc
stos
hlt
mov
adc
adc
in
mov
adc
sbb
sbb
xchg
xchg
not
sbb
sbb
sahf
leave
ret
rcrl
sbb
mov
adc
sbb
sbb
inc
pushw
aam
adc
nop
and
fildll
pop
add
sbb
sbb
ds
sub
scas
out
outsl
jnp
clc
rcrl
sbb
testb
pushf
loopne
clc
mov
sbb
sbb
ss
sbb
add
sbb
sbb
mov
sbb
fcoml
xchg
dec
or
sbb
sbb
dec
rcl
rcrl
sbb
into
popa
adc
adc
mov
lea
sbb
sbb
cmpsb
pop
sti
rcrl
sbb
cmc
jg
sub
scas
ret
rcrl
sbb
sub
add
sbb
sbb
cwtl
adc
inc
xchg
xchg
jmp
aam
adc
nop
sahf
xchg
xlat
xor
sbb
sbb
mov
sbb
out
xor
sbb
sbb
xchg
and
rcrl
sbb
push
add
sbb
mov
aam
adc
fs
mov
xor
sbb
aam
adc
mov
jmp
mov
aam
adc
pop
inc
popf
lcall
adc
mov
into
pop
sub
sbb
sbb
sbb
aam
adc
mov
add
xchg
sar
rcrl
sbb
mov
sbb
sbb
cmpsb
mov
sbb
je
std
cmp
mov
aam
adc
mov
cmp
or
sub
sbb
sbb
mov
xor
out
sti
adc
push
cld
rcrl
sbb
mov
adc
shl
and
mov
fildl
aam
adc
add
out
xor
rcrl
sbb
jg,pn
aam
adc
add
xchg
jg
sbb
sbb
arpl
pop
aam
adc
addb
clc
rcrl
sbb
push
cli
and
sbb
sbb
out
xor
sbb
sbb
addr16
sbb
sbb
mov
or
sbb
sbb
sbb
mov
addr16
xchg
shl
sbb
sbb
lock
sbb
sbb
inc
push
dec
ror
les
sbb
sbb
outsb
add
aam
adc
mov
mov
pop
aam
adc
xchg
mov
mov
aam
adc
inc
and
or
sbb
sbb
sahf
roll
sbb
sbb
cld
repnz
scas
add
sbb
sbb
out
push
ret
mov
sbb
dec
pop
ret
rcrl
sbb
outsb
pushf
xchg
push
lods
paddq
sbb
ss
rcrl
sbb
push
aam
aam
adc
les
movsb
or
sbb
sbb
in
mov
sahf
add
insb
mov
clc
leave
pop
xor
and
aam
adc
mov
inc
cmp
mov
rcrl
sbb
leave
mov
adc
xchg
fiadds
or
mov
or
aam
adc
sub
pop
out
rcl
sbb
sbb
push
rolb
sub
add
sbb
sbb
cld
pop
jbe
out
daa
adc
sbb
sbb
incb
sbb
pushf
adc
adc
sbb
xor
pause
lods
insl
jbe
sub
sbb
sbb
xchg
jo
xchg
aam
adc
fdivs
adc
gs
xor
sbb
push
xor
aam
adc
mov
rolb
sbb
sbb
decb
sbb
or
mov
aam
adc
fcompl
cld
rcrl
sbb
adc
aam
adc
mov
inc
add
xchg
and
sbb
sbb
push
shl
rcrl
sbb
cmpsl
lods
mov
and
sbb
sbb
mov
adc
scas
bound
mov
scas
mov
aam
adc
scas
popf
push
jb,pn
aam
adc
in
jle
fwait
push
fiadds
sbb
jle
pop
aam
adc
mov
push
iret
popfw
and
sbb
sbb
push
movsl
xchg
push
adc
pushf
xor
xor
aam
adc
call
mov
aam
adc
cmpsb
call
popf
or
sbb
sbb
mov
aam
adc
jl
or
sub
sbb
sbb
fisubrs
rcrl
sbb
out
add
test
add
mov
and
sbb
sbb
ds
or
sbb
sbb
sahf
loop
movsl
xchg
xor
test
add
outsb
push
sub
nop
fldl
loopne
int3
adc
dec
mov
mov
push
cld
rcrl
sbb
mulb
sub
sbb
sbb
test
xor
mov
cmp
lds
mov
inc
or
push
push
aam
sbb
sbb
or
inc
data16
sbb
sbb
sbb
sahf
cld
sbb
sbb
sbb
ss
adc
sbb
sbb
mov
ss
rcrl
sbb
xchg
out
or
sbb
sbb
push
pusha
stc
rcrl
sbb
cs
sbb
sbb
push
jo
rcrl
sbb
idivb
add
sbb
sbb
dec
mov
aam
adc
aad
dec
inc
push
shll
rcrw
sbb
sbb
push
fdivrs
jle
adc
sbb
sbb
stc
insl
push
mov
fs
iret
mov
adc
jge
cmp
xchg
das
test
sbb
sbb
jp
mov
gs
sbb
sbb
mov
push
aam
adc
enter
cmp
or
sbb
sbb
imulb
aam
adc
mov
sub
pop
mov
xchg
mov
into
clc
sbb
sbb
sbb
inc
adc
cmpsb
fsubs
adc
lcall
sub
mov
add
std
xchg
sahf
paddq
sbb
out
pop
add
sbb
sbb
inc
sbb
sbb
sbb
scas
inc
xor
sbb
sbb
insb
inc
mov
aam
adc
mov
mov
cld
rcrl
sbb
inc
rcl
sbb
sbb
xchg
insb
jnp
into
jae
aam
adc
pushf
xchg
add
into
popf
or
sbb
sbb
xchg
rcrl
sbb
out
pushf
xchg
aam
adc
push
xchg
mov
cld
rcrl
sbb
jbe
adc
sbb
sbb
pushfw
paddq
push
es
xor
jno
or
sbb
pushl
sbb
sbb
cmp
adc
int3
jo
jbe
push
sbb
xchg
loope
and
pop
jae
rcrl
sbb
mov
jb
aam
adc
xchg
sbb
jecxz
rcrl
sbb
push
rcrl
sbb
xchg
or
sbb
sbb
cs
test
sbb
sbb
out
rcrl
sbb
inc
push
lahf
es
not
sbb
sbb
into
lret
sub
sbb
sbb
mov
call
sbb
sbb
dec
sahf
mov
aam
adc
mov
jl
pop
mov
sbb
sbb
aam
adc
jbe
rclb
divb
sbb
push
lock
rcrl
sbb
mov
adc
js
fdivp
negb
aam
adc
xchg
push
add
aam
adc
cwtl
xchg
sahf
pop
xor
test
into
mov
mov
push
and
rcrl
sbb
lahf
jg
sbb
sbb
jb
push
dec
scas
cmp
aam
adc
test
add
sub
imul
sbb
sbb
clc
rcrl
sbb
outsb
and
sbb
sbb
nop
and
sbb
sbb
aaa
addb
sbb
sbb
shll
adc
xchg
subb
aam
adc
and
out
mov
sbb
sbb
shlb
jp
aam
adc
mov
add
cld
jle
adc
sbb
sbb
ficomps
adc
adc
xchg
cmp
ffreep
into
aas
sub
sbb
sbb
xchg
imul
aam
adc
sub
or
aam
adc
xchg
ds
adc
push
pop
xor
aam
adc
mov
push
data16
sbb
xchg
orl
add
sub
sbb
sbb
push
mov
aam
adc
mov
jl
ficoms
xor
sbb
sbb
rcrw
aam
adc
nop
loope
adc
rorl
aam
adc
mov
std
inc
pushf
jg
sbb
sbb
addb
xchg
adc
sbb
sbb
gs
adc
cmp
shr
mov
sbb
sbb
jbe
fcmovb
inc
dec
sub
sbb
sbb
ss
adc
adc
bound
push
add
test
add
out
ud2
aam
adc
jbe
inc
int
es
test
sbb
sbb
lahf
scas
adc
sbb
sbb
jbe
rcrl
sbb
sahf
add
aam
adc
sbb
xchg
cs
push
aam
adc
nop
fldl
loopne
mov
sbb
test
cs
stc
add
sbb
sbb
es
sbb
mov
rcrl
sbb
mov
jg
sbb
sbb
hlt
scas
inc
arpl
add
sbb
out
and
sbb
sbb
jbe
not
sbb
sbb
out
leave
sub
sbb
sbb
ret
pop
lcall
inc
orl
mov
adc
adc
cli
hlt
aam
in
mov
jp
sbb
sbb
mov
in
sbb
sbb
push
fnstcw
sbb
sbb
add
xchg
mov
adc
mov
insl
mov
xchg
rcrb
sbb
rcrl
sbb
loopne
dec
sbb
sbb
sbb
pand
inc
xchg
sbb
sbb
cmpsb
call
sbb
sbb
icebp
cmp
lahf
mov
or
nop
fldl
loopne
push
sbb
adc
movb
sbb
sbb
outsb
mov
rcrl
sbb
cmpsb
dec
test
sbb
sbb
pmaxsw
xor
fstps
aam
adc
mov
add
sbb
sbb
mulb
aam
adc
mov
cld
cld
push
rcrl
sbb
adc
enter
adc
push
out
imul
mov
adc
addb
int3
jle
jg
sbb
sbb
push
mov
aam
adc
addb
int3
push
fs
rcrl
sbb
mulb
aam
adc
or
cmp
push
out
or
sbb
sbb
push
out
aam
adc
mov
cmpsb
add
sbb
aam
aam
adc
mov
mov
pop
aam
adc
mov
aad
aam
adc
or
dec
sbb
sbb
sbb
adc
fidivl
aam
adc
push
and
push
dec
sahf
std
rcrl
sbb
in
in
loop
sbb
aam
adc
lcall
push
aam
adc
mov
push
push
enter
adc
cwtl
add
add
es
rcrl
sbb
push
mov
mov
fwait
add
sbb
sbb
jle
mov
enter
enter
rcrl
sbb
dec
rcrl
sbb
jmp
jle
cs
sti
rcrl
sbb
jbe
sub
sbb
sbb
pushf
cmp
sbb
sbb
sbb
out
sub
sbb
sbb
mov
rcrl
sbb
mov
adc
testl
aam
adc
xchg
decl
iret
ds
rcrl
sbb
rcl
sbb
sbb
xchg
sbb
outsb
xchg
add
sbb
sbb
mov
std
rcrl
sbb
cmp
and
into
addr16
aam
adc
mov
ret
push
outsl
xor
sbb
sbb
out
loope
aam
adc
nop
cmpb
rcrl
sbb
out
lock
adc
pop
test
rcrl
sbb
push
rcl
adc
pop
pop
and
movsl
out
or
cld
inc
je
or
cmp
sbb
jno
aam
adc
mov
sub
std
rcrl
sbb
mov
not
sbb
sbb
push
jmp
rcrl
sbb
mov
cwtl
fxch
sub
rcrl
sbb
push
cmpsl
and
adc
mov
mov
adc
mov
cs
and
sbb
sbb
push
push
xor
sbb
sbb
dec
aam
adc
addb
push
aam
adc
lods
dec
test
aam
adc
loop
mov
into
dec
test
sbb
sbb
shlb
aam
adc
pop
test
xor
sbb
sbb
push
test
rcrl
sbb
mov
xchg
rcrl
sbb
out
aam
adc
mov
orb
adc
mov
push
sub
rcrl
sbb
ds
mov
xchg
shlb
aad
aam
adc
mov
pop
mov
sbb
cs
sbb
sbb
mov
add
mov
scas
lahf
sub
mov
pop
stos
outsb
mov
aam
adc
mov
jbe,pt
aam
adc
cwtl
and
roll
sbb
sbb
xchg
jecxz
rcrl
sbb
xchg
inc
stc
rcrl
sbb
push
jg
aam
adc
data16
dec
daa
insl
push
sarb
mov
push
scas
and
cs
adc
xor
push
out
mov
adc
xchg
mov
insb
adc
mov
sbbl
fisubrl
std
push
xchg
movb
addb
int3
scas
add
aam
adc
test
imulb
dec
pop
mov
pop
push
or
and
push
push
aam
adc
stos
jns
loop
push
xlat
clc
rcrl
sbb
out
push
pushf
mov
pop
aam
adc
xchg
mov
shl
sbb
sbb
sahf
push
add
sbb
sbb
ss
clc
rcrl
sbb
scas
test
rcrl
sbb
and
je
sub
rcrl
sbb
cmpsl
jno
push
dec
jno
aam
adc
scas
add
push
push
sub
aam
adc
mov
xchg
mov
mov
add
aam
adc
mov
add
cld
js,pn
aam
adc
lcall
or
sbb
sbb
outsb
push
add
sbb
sbb
cmpsb
cs
sbb
sbb
into
and
aam
adc
mov
xchg
sbb
sbb
sbb
insb
push
pop
lret
or
sbb
sbb
mov
cli
rcrl
sbb
dec
cs
rcrl
sbb
ds
sbb
sbb
pop
xchg
rcrl
sbb
out
mov
mov
cs
sbb
xchg
sub
sbb
popa
mov
cmp
aam
rcrl
sbb
lret
clc
outsl
push
test
sbb
or
daa
jmp
sbb
sbb
inc
out
rcrl
sbb
dec
lret
lea
xchg
aam
adc
mov
data16
rcrl
sbb
dec
xor
ud0
sbb
sbb
inc
dec
sub
adc
test
push
out
push
pop
sub
sbb
sbb
push
movsl
cli
rcrl
sbb
inc
lahf
ret
adc
jo
inc
gs
push
ljmp
inc
dec
inc
arpl
adc
out
sbb
push
mov
sbb
sbb
push
iret
or
sbb
sbb
jbe
pop
aam
adc
in
jg
dec
es
rcrl
sbb
lret
sbb
sbb
xor
aam
adc
xchg
loop
xchg
nop
cli
rcrl
sbb
push
arpl
aam
adc
mov
push
aam
adc
nop
add
add
xchg
fisttpl
aam
adc
mov
jmp
add
test
add
pop
pop
aam
adc
movsb
pop
jmp
xor
ret
xchg
add
adc
mov
pop
rcll
sbb
sbb
inc
jno
aam
adc
pushf
sub
inc
jp
test
or
clc
rcrl
sbb
data16
aam
adc
mov
cmp
aam
adc
xchg
or
adc
sbb
sbb
into
jnp
sbb
pop
aam
adc
mov
pop
sub
pushf
cmp
push
mov
sbb
mov
adc
adc
lods
popa
or
scas
fst
rcrl
sbb
cmp
aam
adc
mov
cmpsb
pop
push
aam
adc
mov
add
cld
mov
adc
xchg
fsts
mov
sbb
sbb
sub
aam
adc
movsb
jge
fildl
scas
hlt
sti
rcrl
sbb
push
addr16
sbb
sbb
in
aam
adc
xchg
mov
push
ss
pop
aam
adc
lock
lods
cmp
div
rcrl
sbb
push
ficomps
aam
adc
xchg
add
add
das
sbb
sbb
sbb
jns
aam
adc
cwtl
jne
mov
aam
adc
xchg
or
idivl
enter
mov
sbb
sbb
ret
add
sbb
sbb
ss
adc
pushf
lds
les
mov
aam
adc
addb
int3
outsb
adc
sbb
sbb
out
jns
rcrl
sbb
xchg
sbb
sahf
stc
rcrl
sbb
jg
jmp
scas
stos
or
sbb
sbb
das
xor
aam
adc
addb
paddq
sbb
into
mov
sbb
cmp
cmp
sahf
sub
aam
adc
pushf
sarb
mov
call
mov
sti
rcrl
sbb
push
stos
paddq
sbb
push
outsb
add
sbb
sbb
mov
push
xchg
dec
rcl
adc
addb
int3
push
out
cs
adc
repnz
mov
sub
sbb
sbb
cmpsb
aad
rcrl
sbb
sahf
add
aam
adc
xor
inc
or
xchg
push
clc
rcrl
sbb
add
aam
adc
mov
and
push
aam
adc
mov
mov
rcrl
sbb
push
jbe
rcrl
sbb
push
call
sbb
push
aas
rcrl
sbb
adc
pmaxsw
xor
sbb
sbb
push
jb
aam
adc
xchg
add
add
leave
call
sbb
sbb
into
mov
sbb
mov
cmc
nop
inc
or
sbb
sbb
sahf
nop
ret
rcrl
sbb
movsl
loope
out
enter
adc
fs
loope
mov
adc
pop
js
cltd
cmp
adc
dec
cmp
sbb
aam
adc
mov
int3
push
add
aam
adc
xchg
popa
inc
inc
dec
dec
pop
sub
sbb
sbb
push
aam
adc
les
jl
outsb
into
rcl
sbb
sbb
add
adc
sbb
aas
mov
ljmp
imul
adc
test
add
aam
adc
scas
inc
dec
mov
inc
in
aam
adc
shr
fisttps
rol
rcrl
sbb
jbe
add
sbb
sbb
es
aam
adc
mov
jb
ss
rcrl
sbb
push
lcall
jb
xchg
pusha
sahf
je
rcrl
sbb
fsubrs
adc
sbb
sbb
cmpsb
xor
sbb
sbb
cs
sbb
sbb
scas
stc
and
sbb
sbb
scas
ljmp
lea
pop
sahf
jle
rcrl
sbb
es
or
sbb
sbb
lcall
aam
adc
mov
icebp
lret
paddq
sbb
push
lahf
jecxz
sbb
sbb
scas
jne
aam
adc
addb
add
sbb
sbb
std
sub
sbb
sbb
es
rcrl
sbb
into
enter
adc
sub
pop
sbb
aam
adc
addb
int3
push
add
test
add
push
add
sbb
xor
push
jb
add
sbb
mov
adc
cwtl
add
add
into
stc
and
mov
mov
dec
into
sub
aam
adc
loopne
rclb
and
rcrl
sbb
ds
sbb
sbb
push
mov
sbb
xchg
rcrl
sbb
leave
mov
aam
adc
cmp
sub
rcrl
sbb
jmp
rcrl
sbb
icebp
aad
cmp
fwait
jecxz
sbb
sbb
icebp
mov
mov
mov
rcrl
sbb
cmpsb
cmp
aam
adc
stos
push
movsl
aas
add
or
sbb
sbb
es
aam
adc
mov
push
rcl
sbb
sbb
push
and
sbb
ss
rcrl
sbb
jbe
add
test
add
jecxz
aam
adc
mov
mov
mov
call
push
nop
sbb
sbb
cmpsb
add
sbb
repz
cwtl
add
add
ss
sbb
scas
fwait
sub
sbb
sbb
add
and
sbb
mov
adc
sbb
sbb
lahf
pop
lock
out
pop
and
sbb
sbb
incb
pop
aam
adc
enter
add
sbb
sbb
push
adc
rcrl
sbb
lahf
test
neg
das
sub
sbb
sbb
cltd
sarl
outsb
aas
adc
sbb
sbb
idivb
rcrl
sbb
outsb
jbe
rcrl
sbb
pop
arpl
mov
sbb
push
bnd
adc
sbb
sbb
jle
pop
aam
adc
mov
add
rcrl
sbb
sti
mov
and
sbb
sbb
xchg
add
test
add
mov
xor
sbb
sbb
rolb
mov
rcrl
ss
fs
mov
adc
outsb
xchg
bound
aam
adc
and
xor
sbb
loop
idivb
pop
lcall
jl
xor
incb
aam
adc
mov
xchg
sbb
xor
push
cmp
aam
adc
mov
dec
mov
out
xor
sbb
sbb
push
or
aam
adc
mov
cmp
mov
repnz
mov
sub
sbb
sbb
into
jmp
rcrl
sbb
dec
adc
sbb
add
dec
divps
sbb
mov
sbb
xor
ret
rcrl
sbb
fisubs
aam
adc
ret
rcll
lods
xor
sbb
sbb
mov
rcrl
sbb
xor
sbb
xor
aam
adc
fidivs
loopne
jns
aam
adc
mov
nop
inc
sub
push
push
aam
adc
mov
add
cld
push
hlt
and
sbb
sbb
mov
pushf
or
sbb
sbb
mov
or
sbb
sbb
outsb
fldl
aam
adc
sahf
fs
mov
aam
adc
out
push
sub
sbb
sbb
nop
lret
or
aam
adc
mov
push
push
aam
adc
mov
cld
mov
adc
xchg
cmp
push
out
xor
rcrl
sbb
jbe
ret
rcrl
sbb
or
aam
adc
lock
pop
aam
adc
movsb
jg
in
dec
negb
sub
sbb
sbb
push
mov
sbb
cmp
movsb
xchg
cmp
leave
dec
mov
aam
adc
xchg
add
insl
aam
sbb
sbb
ss
aam
adc
test
add
scas
xchg
rcrl
sbb
push
push
push
aam
adc
cmpsb
sti
or
adc
fcoms
aam
adc
xor
daa
aaa
lods
into
mov
sbb
push
mov
aam
adc
addb
int3
cs
rcl
sbb
sbb
dec
jg
aam
adc
rolb
leave
xchg
xchg
call
sbb
sbb
push
push
aam
adc
nop
add
add
ss
aam
sbb
sbb
jns
je
mov
adc
xchg
sbb
rcl
sbb
sbb
and
sbb
or
sbb
std
in
ret
adc
adc
cld
mov
and
aam
adc
in
sub
or
movsb
or
sbb
sbb
inc
sbb
aam
adc
mov
inc
pop
push
push
in
aam
adc
mov
popa
repnz
adc
pop
inc
in
or
sbb
sbb
shrl
push
aam
adc
lods
jge
pop
mov
stc
not
sbb
sbb
push
incl
aam
adc
mov
mov
adc
out
insl
mov
add
mov
lods
arpl
out
mov
jo
rcrb
in
mov
mov
or
xchg
scas
ret
sbb
sbb
sub
aam
adc
mov
inc
pop
popa
adc
aam
adc
icebp
sbbb
jbe
aam
adc
test
cmp
sbb
neg
and
sbb
sbb
or
call
sbb
sbb
fnstsw
not
sbb
sbb
fbstp
sbb
sbb
jbe
add
test
add
rolb
push
add
or
pop
sub
mov
cld
jmp
adc
es
ds
rcrl
sbb
outsb
pop
rcrl
sbb
pop
jg
rcrl
sbb
push
add
test
add
testb
sbb
sbb
sahf
sub
rcrl
sbb
xchg
mov
adc
xchg
add
add
push
aam
sbb
sbb
mov
adc
xchg
xlat
stos
lock
or
sbb
sbb
negb
aam
adc
stos
xchg
stos
lds
sbb
sbb
jbe
std
rcrl
sbb
push
movsb
adc
push
pop
add
sbb
sbb
xchg
adc
adc
mov
into
jno
rcrl
sbb
push
out
ss
rcrl
sbb
adc
aam
adc
mov
mov
or
sbb
sbb
notb
rcrl
sbb
jo
rcrl
sbb
loope
pop
xor
cld
rcrl
sbb
mov
sbb
mov
sbb
out
push
aam
adc
test
fidivl
scas
xchg
xor
sbb
sbb
mulb
cwtl
push
add
jae
pop
cld
rcrl
sbb
fimull
aam
adc
xchg
nop
mov
add
test
add
fimuls
rcrl
sbb
shl
sbb
sbb
mov
adc
mov
rolb
sbb
sbb
push
pop
sub
sbb
sbb
ss
sbb
sbb
pop
xchg
mov
sbb
sbb
fcoms
aam
adc
mov
std
incl
adc
and
loope
push
ficoms
push
aam
adc
pushf
out
iret
inc
xor
xor
stos
imul
inc
scas
inc
stc
rcrl
sbb
push
mov
sbb
lret
and
aam
adc
cwtl
add
add
or
rcrl
sbb
ds
or
ret
sbb
sbb
sbb
sbb
inc
icebp
ljmp
adc
les
push
jle
jbe
sbb
sbb
ds
cmc
mov
fildl
xchg
sbb
add
sbb
sbb
out
push
aam
adc
jg
scas
jp
jae
rcrl
sbb
scas
cmpsl
rcrl
sbb
sub
aam
adc
test
mov
inc
xor
aam
adc
les
cmc
mov
aam
adc
addb
add
sbb
sbb
ss
or
sbb
sbb
scas
jns
aam
adc
ljmp
test
rcrl
sbb
jle
not
sbb
sbb
push
fsubrs
lcall
mov
sbb
sbb
mov
sbb
sbb
push
xchg
scas
sbb
cmp
aam
adc
xor
push
adc
adc
xchg
push
rcr
es
aam
adc
test
add
enter
aam
adc
lods
test
pop
xor
adc
mov
cmpsb
cmp
rcrl
sbb
out
sbb
sbb
sbb
ds
aam
adc
ficoml
ds
rcrl
sbb
lea
push
inc
bound
addl
sbb
sbb
jno,pn
aam
adc
mov
dec
cmpl
adc
sub
stc
out
jbe
push
aam
adc
cwtl
add
add
push
xchg
push
aam
adc
xchg
xor
test
mov
aam
adc
scas
scas
add
jbe
add
mov
inc
xor
sbb
sbb
jbe
mov
rol
lret
int3
out
sbb
sbb
sbb
xchg
out
or
cmpsb
in
mov
rcrl
sbb
jle
mov
sbb
sbb
fwait
or
sbb
sbb
into
pushf
or
sbb
sbb
in
inc
sub
sbb
sbb
out
shrl
aam
adc
fsubl
out
sub
sbb
sbb
fimuls
sbb
ss
aam
adc
pushf
and
jge
out
popa
rcl
sbb
sub
mov
sbb
sbb
push
or
rcrl
sbb
in
not
sbb
sbb
jle
add
sbb
sbb
inc
push
test
sbb
sbb
xor
dec
cmp
not
sbb
sbb
inc
add
nop
sbb
add
rcrl
sbb
or
mov
rcll
lret
sbb
sbb
negb
sbb
cmp
rcrl
sbb
cmpsb
ss
cmp
loopne
rcrl
sbb
enter
out
loop
aam
adc
cmp
imulb
testb
aam
adc
xchg
cmp
aam
adc
call
inc
cli
rcl
sbb
sbb
jmp
sarb
outsb
dec
adc
sbb
sbb
in
rcrl
sbb
fimull
push
cmpsb
and
rcrl
sbb
into
loope
rcrl
sbb
sbb
sbb
sbb
sbb
outsb
or
jbe
sbb
sbb
sbb
mov
sbb
add
daa
out
xor
sbb
cmpsl
paddq
sbb
outsb
xor
aam
adc
mov
rcrb
sbb
sbb
imul
add
sbb
sbb
mov
sbb
push
or
aam
adc
mov
or
aam
adc
scas
sahf
inc
cmp
add
sbb
sbb
mov
and
sbb
sbb
decb
jns
sbb
sbb
arpl
rcrl
sbb
inc
xchg
aam
adc
xchg
add
add
xchg
sbb
sbb
sbb
push
or
cmpsb
pop
and
sbb
sbb
push
push
and
sbb
sbb
add
mov
mov
adc
sbb
sbb
jnp
rcrl
sbb
fmull
or
sbb
sbb
mov
sbb
push
scas
and
sbb
sbb
lcall
and
dec
pop
aam
adc
mov
pop
adc
add
sbb
sbb
fimuls
sbb
sbb
add
or
sbb
sbb
mov
push
aam
adc
rcrb
fldenv
mov
xchg
shrb
sahf
rcl
adc
xchg
pop
rolb
aam
adc
rolb
das
jmp
enter
adc
test
ret
imul
add
or
sbb
sbb
mov
popa
mov
test
pop
fwait
aad
dec
add
sbb
sbb
push
mov
sbb
sbb
test
sbb
sbb
cs
rcrl
sbb
push
xor
aam
adc
mov
jno
rcrl
sbb
into
and
sbb
or
aam
adc
nop
pushf
outsl
push
lea
adc
mov
add
std
out
add
sbb
sbb
xchg
add
sbb
sbb
out
xor
and
sbb
sbb
popa
idivl
aam
adc
pusha
scas
push
das
jl
insl
sbb
sbb
sbb
mov
push
aam
adc
inc
push
popa
mov
mov
aam
adc
mov
xor
jbe
or
sbb
sbb
jle
mov
mov
fdivrp
pop
aam
adc
xchg
mov
rorb
fincstp
rcrl
sbb
push
das
paddq
sbb
es
sbb
sbb
sbb
mov
arpl
aam
adc
rolb
and
sbb
sbb
add
sbb
sbb
sbb
inc
stc
rcl
sbb
sbb
sbb
notb
aam
adc
jl
xchg
pop
mov
sbb
sbb
imul
mov
mov
sbb
inc
test
aam
adc
je
push
rcl
adc
or
inc
fmull
and
aam
adc
nop
movsb
les
pop
push
sub
mov
dec
push
aam
adc
cwtl
add
add
scas
cmpsb
mov
incb
xchg
pop
aam
adc
mov
out
cmp
xchg
mov
xchg
std
rcrl
sbb
cmpsb
jmp
sbb
push
or
aam
adc
mov
std
decl
push
sbb
sbb
sbb
mov
adc
movsb
outsb
insl
fidivs
ret
pop
aam
adc
sbb
xchg
inc
int
movsl
xor
sbb
sbb
jns
ret
in
mov
adc
adc
ret
aam
push
dec
push
aam
adc
dec
jmp
or
sbb
sbb
fdivs
aam
adc
in
divb
mov
es
mov
aam
adc
cwtl
add
inc
clc
rcrl
sbb
outsb
sbb
sbb
sbb
or
jo
jbe
push
aam
adc
cwtl
jbe
xlat
rclb
sti
rcrl
sbb
into
push
sub
movsb
das
stos
dec
xor
mov
sarb
popa
inc
push
jbe
mov
clc
enter
push
sub
aam
adc
xchg
inc
adc
sbb
sbb
sahf
es
sbb
sbb
ficoml
xor
sbb
sbb
fidivrs
sbb
popf
loope
and
and
sbb
sbb
inc
cmpsl
and
sbb
sbb
int
xor
push
imul
sbb
sbb
xchg
ret
and
sbb
sbb
jmp
call
aam
adc
mov
mov
push
outsb
aas
xchg
jecxz
sub
rcrl
sbb
push
adc
aam
adc
cwtl
jb
mov
aam
adc
mov
aas
jno
imul
xchg
dec
inc
adc
aam
adc
xchg
pop
xchg
push
data16
or
sbb
sbb
fisttpl
sbb
sbb
xchg
sbb
sbb
sbb
ss
sbb
push
mov
aam
adc
fisubs
push
cs
mov
aam
adc
xchg
aas
or
aam
adc
int3
inc
lret
movb
sbb
sbb
push
add
aam
adc
mov
lea
add
add
rcrl
sbb
insl
jl
cld
xchg
sub
aam
adc
pushf
or
jl
push
lret
sbb
sbb
cmpsl
adc
sbb
sbb
loopne
aam
adc
mov
pop
xchg
adc
adc
or
repz
pop
ficoms
aam
adc
int3
sbb
clc
rcrl
sbb
xchg
cmp
aam
adc
mov
mov
sbb
stos
es
rcrl
sbb
or
mov
dec
adc
sbb
sbb
lea
aam
adc
addb
int3
dec
aaa
stc
rcrl
sbb
add
test
mov
sbb
push
aaa
clc
rcrl
sbb
div
add
sbb
sbb
test
aam
adc
push
nop
push
push
mov
mul
rcrl
sbb
pop
jb
aam
adc
push
mov
adc
xchg
fs
ret
rcrl
sbb
xchg
xchg
push
aam
adc
mov
jmp
adc
sbb
sbb
daa
and
sbb
sbb
hlt
std
rcrl
sbb
mov
cmpsl
mov
sbb
sbb
pop
rcl
out
leave
xor
sbb
sbb
into
and
sub
sbb
sbb
push
jmp
sbb
push
sub
mov
sbb
cmpsb
std
or
movsb
jge
fistl
cmpsb
ret
sbb
sbb
cs
push
aam
adc
pop
mov
or
ss
mov
adcl
sbb
inc
loope
rcrl
sbb
jbe
adc
adc
cwtl
and
ficomps
aam
adc
lcall
and
sbb
sbb
xchg
add
sbb
sbb
mov
outsl
push
xchg
rcl
adc
push
stc
mov
sbb
mov
aam
adc
mov
mov
rcrl
sbb
ss
mov
rcrl
sbb
es
rcrl
sbb
cmpsb
dec
mov
in
dec
fiadds
mulb
stc
rcrl
sbb
push
ret
cli
rcrl
sbb
cmpsb
popa
add
sbb
sbb
dec
xor
sbb
sbb
addr16
sbb
sbb
pop
out
mov
sbb
sbb
mov
and
sbb
sbb
ss
js
sbb
pop
mov
outsb
or
sbb
jbe
sub
sbb
sbb
shrl
aam
adc
xchg
xchg
scas
cmc
jp
mov
rcrl
sbb
pop
cli
rcrl
sbb
cmpsb
loop
aam
adc
cmpsb
add
or
pushf
clc
rcrl
sbb
pop
xor
push
jo
rcrl
sbb
sbb
pop
subb
rcrl
sbb
mov
adc
sarb
jno
pop
xchg
sbb
out
cs
adc
ret
movsl
pushf
sahf
testl
addr16
rcrl
sbb
outsb
mov
aam
adc
xchg
aas
or
aam
adc
repnz
call
aam
adc
mov
add
cld
jno
aam
adc
xchg
sub
xor
sbb
sbb
testb
roll
sbb
sbb
into
pop
or
sbb
sbb
adc
cmpl
adc
xchg
push
jmp
pop
mov
aam
adc
cwtl
xor
sub
sbb
sbb
dec
mov
mov
xchg
rcrl
sbb
out
mov
aam
adc
mov
mov
sub
sbb
sbb
push
push
test
sbb
sbb
adc
cmp
adc
stos
sub
cmpsl
mov
sbb
sbb
push
jo
rcrl
sbb
cmp
aam
adc
mov
icebp
adc
mov
cs
aam
adc
enter
mov
ja
aam
adc
mov
out
and
sbb
sbb
add
test
and
aam
adc
sbb
inc
cmc
js
daa
in
sbb
sbb
dec
rcl
adc
test
add
sub
jae
aam
adc
mov
cs
aam
adc
stos
mov
scas
rcl
adc
xchg
test
inc
adc
sbb
sbb
mov
inc
adc
sbb
sbb
out
push
aam
adc
sbb
and
dec
clc
rcrl
sbb
or
or
arpl
aam
adc
cmpsb
dec
lds
jle
cld
rcrl
sbb
mov
sbb
sbb
inc
adc
sbb
sbb
xchg
add
sbb
sbb
negb
mov
xchg
shrb
and
mov
ss
aam
adc
mov
fidivs
sbb
fs
and
sbb
sbb
inc
aas
push
aam
adc
mov
inc
add
push
cmp
rcrl
sbb
xor
mov
addb
cmp
pop
aam
adc
nop
add
sbb
sbb
sbb
pop
push
in
sbb
sbb
and
and
aam
adc
mov
incl
adc
mov
add
mov
and
sbb
sbb
aad
mov
rcrl
sbb
jbe
not
sbb
sbb
fiaddl
or
sbb
sbb
fmuls
jns
data16
adc
addb
int3
inc
ds
aam
adc
mov
add
add
or
aam
adc
xchg
push
push
stos
mov
or
sbb
sbb
std
add
or
sbb
sbb
repnz
sbb
sbb
es
sbb
sbb
sbb
out
ret
adc
mov
pop
adc
sbb
sbb
xchg
jl
aam
adc
mov
mov
jbe
mov
sbb
sbb
mov
sbb
sbb
sbb
outsb
mov
jbe
ljmp
add
add
mov
not
sbb
push
scas
or
cmpl
jecxz
cmp
rcrl
sbb
push
cli
sbb
ss
or
nop
stc
popa
add
jbe
push
aam
adc
loop
pusha
xor
outsb
push
aad
sbb
sbb
xchg
sbb
xor
sbb
pop
push
sbbb
adc
xchg
push
mov
aam
adc
aam
loop
jbe
rcl
sbb
sbb
scas
xchg
rcrl
sbb
push
addl
mov
cmc
mov
mov
sbb
add
adc
adc
pushf
pop
nop
js
push
mov
aam
adc
movsb
pop
mov
mov
mov
sbb
stos
push
aam
adc
xchg
out
xchg
adc
not
sbb
sbb
stos
xlat
hlt
out
jbe
stc
rcrl
sbb
mov
sbb
mov
rcrl
sbb
lock
jmp
pop
dec
rcl
sbb
sbb
jle
ret
rcrl
sbb
clc
mov
enter
mov
sbb
sbb
mov
mov
inc
in
pop
insb
testb
repz
adc
rcrl
sbb
xchg
mov
sbb
sbb
lods
out
sbb
sbb
sbb
inc
inc
adc
sbb
sbb
push
mov
sbb
xchg
dec
adc
sbb
sbb
mov
mov
sbb
sbb
pop
and
mov
orl
adc
mov
cld
fidivs
sbb
sahf
jae
sub
nop
movsb
les
pop
into
push
and
sbb
sbb
test
or
sbb
sbb
pop
sub
movsb
test
and
sbb
sbb
jbe
test
sbb
sbb
xchg
sub
js
pushf
add
sbb
sbb
mov
sbb
push
jnp
rcrl
sbb
mov
sbb
sub
rclb
loop
aam
adc
and
mov
sbb
mov
daa
aam
adc
rclb
adc
sbb
sbb
push
sbb
sbb
sbb
scas
not
sbb
sbb
stc
adc
lods
lcall
aam
adc
mov
add
aam
adc
enter
push
pop
cli
rcrl
sbb
iret
rcl
sbb
sbb
scas
push
enter
aam
adc
mov
out
aam
adc
out
add
lcall
sbb
mov
inc
jbe
stc
rcrl
sbb
cmp
aam
adc
mov
xchg
rcrl
sbb
xchg
enter
adc
cwtl
add
add
das
and
mov
mov
cli
rcrl
sbb
push
push
add
sbb
sbb
negl
aam
adc
mov
add
rcrl
sbb
mov
cld
push
repnz
sbb
sbb
leave
daa
mov
aam
adc
mov
out
rcrl
sbb
push
sti
and
sbb
sbb
negw
aam
adc
nop
movsb
les
push
ja
rcrl
sbb
jbe
push
aam
adc
scas
mov
xor
adc
in
dec
sbb
cs
and
sbb
sbb
jle
add
sbb
sbb
hlt
sti
rcrl
sbb
outsb
xchg
and
push
movsl
rcrl
adc
scas
jae
or
testb
aam
adc
test
add
xchg
jno
rcrl
sbb
cs
rcrl
sbb
js
fstl
mov
rcrl
sbb
push
adc
aam
adc
cwtl
add
add
dec
mov
rcrl
sbb
mov
sbb
fimuls
aam
adc
addb
int3
into
adc
sbb
sbb
push
adc
rcrl
sbb
dec
sbbl
aam
aam
adc
mov
ljmp
add
add
push
sub
aam
adc
pushf
xor
lock
push
aam
adc
lock
ds
and
adc
rcrl
sbb
adc
fidivrl
jecxz
sbb
sbb
jle
push
push
mov
aam
adc
xor
and
shrb
xchg
sbb
cwtl
test
push
aam
adc
in
inc
jbe
shll
adc
mov
cld
call
in
aam
adc
addb
pop
aam
adc
lret
es
cmp
aam
adc
call
sbb
sbb
sbb
push
add
rcrl
sbb
push
mov
rcrl
sbb
popf
xchg
std
outsb
push
and
sbb
incb
sbb
sbb
insb
aam
sbb
sbb
mov
or
cmpsb
out
cmpsl
xchg
push
cmp
rcrl
sbb
ds
pop
aam
adc
xchg
lock
xor
es
xchg
aam
adc
ljmp
and
sbb
sbb
push
enter
adc
mov
ficomps
sbb
mov
aam
adc
shr
adc
inc
mov
adc
addb
int3
cmpsb
fisttps
mov
inc
push
rcrl
sbb
mov
cmp
sbb
sbb
pop
outsb
andl
adc
mov
sar
sbb
sbb
xchg
sbb
sbb
push
push
sub
sbb
sbb
mov
adc
lods
mov
mov
aam
adc
adc
push
jns
sbb
aam
adc
cmpsb
or
bound
sbb
sbb
inc
sbb
sbb
sbb
fisubrs
test
sbb
sbb
jp
xchg
sbb
sbb
sbb
fwait
or
sbb
sbb
pop
jle
aam
adc
addb
or
sbb
sbb
ffree
sbbl
sbb
mov
rcrl
sbb
insb
adc
and
mov
mov
in
sbb
sbb
orl
push
aam
adc
xchg
xor
and
sbb
sbb
out
and
sbb
sbb
xchg
sbb
out
stc
sahf
xchg
xor
sbb
mov
adc
cwtl
mov
push
mov
sbb
jbe
cs
adc
loopne
jo
outsl
sub
sbb
sbb
push
shll
sbb
sbb
test
test
aam
adc
mov
popa
call
test
xchg
ret
sbb
pop
xor
sbb
sbb
out
inc
shll
cwtl
xchg
mov
xchg
xor
sbb
sbb
pop
adc
sbb
push
cmp
rcrb
es
mov
aam
adc
scas
sub
popf
sbb
sbb
sbb
mov
cmp
aam
adc
push
inc
popa
add
aam
adc
lcall
sub
sbb
sbb
jae
and
aam
adc
ret
add
rcrl
sbb
out
aam
adc
mov
lods
sbb
sbb
sbb
xchg
jle
aam
adc
addb
int3
xorw
std
call
aam
adc
pushf
sub
daa
adc
stos
addr16
or
adc
mov
inc
cld
cld
sahf
outsb
add
sbb
sbb
mov
adc
xchg
dec
scas
pop
push
sbb
sbb
in
push
outsb
mov
adc
lcall
jle
sbb
sbb
aas
hlt
adc
call
sbb
jmp
aam
adc
mov
and
rcrl
sbb
jle
notb
sbb
sbb
inc
inc
inc
ds
rcrl
sbb
pop
imul
adc
ss
adc
xchg
pop
xchg
sub
rcrl
sbb
scas
pusha
push
aam
adc
inc
inc
cmpsb
outsb
das
cmpsb
lcall
add
stos
paddq
sbb
xor
aam
adc
imulb
or
sbb
sbb
xchg
add
adc
mov
push
and
rcrl
sbb
xchg
push
aam
adc
mov
incb
aam
adc
sahf
repz
scas
sahf
push
and
sbb
sbb
ss
adc
adc
cwtl
jmp
outsl
out
jbe
sub
sbb
sbb
xchg
fisttpll
xchg
sbb
sbb
xchg
sub
popa
xchg
mov
add
sbb
sbb
jbe
push
aam
adc
mov
std
inc
mov
aam
adc
cwtl
xchg
pushf
jb
pop
lret
sbb
sbb
ds
and
xchg
push
push
and
sbb
sbb
and
rcrl
sbb
jae
aam
adc
test
xchg
xchg
push
sub
aam
adc
pushf
aad
push
add
test
sbb
sbb
cli
stos
jecxz
jge
rcrl
sbb
ljmp
rcrl
sbb
push
xor
push
lret
sbb
sbb
mov
adc
pushf
cmc
clc
mov
sbb
sbb
jbe
in
sbb
sbb
xor
jmp
cmpsb
xchg
rcrl
sbb
mov
xor
sbb
sbb
outsb
or
aam
adc
mov
xchg
iret
out
add
xchg
add
adc
nop
sarb
sahf
imul
push
sub
movsb
std
push
testl
xchg
adc
addb
ret
adc
sahf
adc
rcrl
sbb
xchg
and
mov
push
and
rcrl
sbb
xchg
rcrl
sbb
jb
push
dec
push
adcb
mov
add
sbb
sbb
jbe
mov
mov
lds
inc
or
rcrl
sbb
dec
mov
rcrl
sbb
outsb
pop
sbb
sbb
sbb
pop
add
sbb
sbb
pop
dec
out
mov
aam
adc
test
push
imul
sbb
sbb
xchg
add
sbb
sbb
add
ret
sbb
sbb
ds
rcl
adc
addb
int3
push
aam
sbb
sbb
leave
data16
pop
ret
adc
mov
scas
jmp
rcrl
sbb
fldl
aam
adc
pop
lods
fmulp
inc
push
popa
pop
aam
adc
faddp
ficoms
cs
aam
adc
cwtl
jecxz
add
scas
xor
aam
adc
sub
mov
sbb
sbb
sbb
fmulp
js
sbb
sbb
mul
pop
aam
adc
xchg
add
add
and
aam
adc
mov
std
decl
push
clc
rcrl
sbb
mov
not
sbb
sbb
sbbl
sbb
sbb
jbe
mov
sbb
sbb
outsb
mov
xchg
xor
mov
rcrl
sbb
mov
adc
addb
int3
ds
adc
adc
rclb
pop
aam
adc
ret
pop
jl
xchg
or
sbb
sbb
cs
adc
adc
ret
pop
ss
sbb
lock
sbb
sbb
out
rcl
sbb
sbb
or
mov
mov
aad
sbb
sbb
xor
pop
sahf
push
call
sbb
sbb
fwait
pop
push
sub
adc
in
jl
sub
rcrl
sbb
push
rcl
mov
sbb
sbb
mov
sbb
inc
inc
mov
aam
adc
mov
inc
sbb
sbb
sbb
data16
aam
adc
addb
int3
cmpsb
in
sbb
sbb
sbb
out
and
rcrl
sbb
dec
jle
aam
adc
in
or
fwait
xchg
adc
sbb
sbb
mov
js
aam
adc
mov
mov
rcrl
sbb
outsb
ret
rcrl
sbb
ds
sbb
fiadds
sbb
ds
clc
rcrl
sbb
jo
es
ss
aam
adc
addb
int3
div
sbb
sbb
sbb
and
int3
in
xchg
or
sbb
sbb
outsb
xchg
addb
int3
cmpsb
dec
rcl
adc
xchg
pop
nop
cmp
sbb
sbb
adc
aam
adc
nop
fldl
loopne
repnz
rcrl
sbb
jbe
ret
adc
pushf
pushf
xchg
insb
dec
outsb
add
sbb
bound
inc
mov
sub
adc
ds
shrl
pop
daa
aam
adc
mov
sahf
jp
aam
adc
mov
cmp
aam
adc
add
pushl
aam
adc
inc
ret
test
sub
sbb
sbb
xor
hlt
adc
mov
rcrl
sbb
mov
loop
es
push
aam
adc
les
mov
sbb
adc
mov
faddl
aam
adc
xchg
pop
orb
sub
sbb
sbb
push
xchg
add
sbb
sbb
cmp
aam
adc
or
loop
lea
rcl
sbb
sbb
push
aam
adc
xchg
add
mov
aam
adc
scas
out
notb
adc
xchg
stc
adc
push
aam
adc
fcmove
inc
push
push
arpl
sbb
sbb
push
dec
push
aam
adc
mov
rorb
testb
sbb
sbb
xchg
xchg
outsl
xor
adc
scas
jbe
cwtl
cli
data16
aam
adc
cwtl
jnp
cmpsl
adc
aas
ret
adc
lcall
sbb
sbb
sbb
push
clc
std
rcrl
sbb
add
fs
mov
sbb
sbb
push
mov
aam
adc
nop
movsb
les
pop
push
adc
aam
adc
cwtl
xchg
lds
aam
adc
mov
xchg
mov
mov
push
pop
add
sarb
push
aam
adc
test
inc
push
nop
ss
or
orl
push
ret
rcrl
sbb
into
sbb
rcrl
sbb
mulb
sbb
fisubs
and
rcl
int
jae
sbb
sbb
xchg
aam
adc
in
call
adc
sbb
sbb
push
pop
sub
sbb
sbb
out
jp
push
fmuls
movsb
dec
sub
add
jne
aam
adc
mov
mov
adc
ret
pop
test
adc
push
rcr
mov
sbb
sbb
push
xor
sbb
push
mov
jbe
push
aam
adc
mov
incl
adc
mov
sahf
arpl
aam
adc
mov
lods
and
jle
sbb
sbb
sbb
xor
stc
sahf
loope
rcrl
sbb
test
sub
sbb
sbb
outsb
inc
pop
aam
adc
lret
icebp
stos
push
jno
rcrl
sbb
push
aaa
and
sbb
sbb
dec
and
lahf
jb
rcrl
sbb
push
xor
test
add
es
jmp
adc
rcrl
sbb
adc
rcrl
sbb
push
or
rcrl
sbb
pop
adc
sbb
sbb
testb
sbb
sbb
ss
rol
xchg
jae
rcrl
sbb
das
add
xchg
pop
xlat
lock
test
aam
adc
mov
iret
sti
rcrl
sbb
enter
movsl
jg
sbb
sbb
mov
stc
test
bound
mov
mov
and
sbb
sbb
adc
add
mov
into
inc
mov
xchg
push
adc
aam
adc
mov
jns
ja
div
rcrl
sbb
int3
push
mov
mov
out
rcl
sbb
sbb
adc
aas
or
sbb
sbb
test
jbe
pop
adc
push
mov
rcrl
sbb
xorl
push
out
adc
sbb
sbb
neg
xchg
ja
xor
aam
adc
cmpsb
push
xchg
jmp
rcll
mov
inc
or
push
add
rcrl
sbb
hlt
xor
sbb
sbb
sbb
aaa
sub
sbb
sbb
xchg
cmpsb
aam
sbb
sbb
out
rcl
sbb
sbb
out
mov
aam
adc
mov
jbe
in
sbb
sbb
mov
js
aam
adc
test
add
or
mov
aam
adc
push
inc
outsl
add
mov
adc
adc
cwtl
inc
loope
fists
adc
mov
jmp
and
sbb
pop
fsub
notb
aam
adc
mov
pop
arpl
aam
adc
in
shll
adc
rclb
addr16
jle
cli
rcrl
sbb
push
icebp
mov
jb
ds
jb
sbb
mov
add
std
cmpsb
inc
not
sbb
sbb
sub
aam
adc
cli
or
rcl
imul
pushf
dec
push
pop
out
inc
add
sbb
sbb
and
es
sbb
sbb
jbe
clc
rcrl
sbb
scas
jne
rcrl
sbb
out
stos
rcl
sbb
sbb
lock
add
jecxz
aam
adc
mov
mov
adc
xchg
add
icebp
movsl
push
xor
sbb
inc
and
fdivp
mov
rcl
sbb
sbb
outsb
out
sbb
sbb
sbb
xchg
das
mov
lret
sbb
sbb
mov
scas
std
add
rclb
add
mov
mov
mov
sbb
sbb
jle
mov
cmpsb
add
inc
ret
rcrl
sbb
or
xchg
jbe
rcl
sbb
sbb
jle
add
sbb
sbb
pop
imul
sbb
sbb
push
aad
aam
adc
mov
mov
or
adc
pusha
add
xchg
cmpsl
cltd
and
sbb
sbb
cmp
sbb
sbb
xchg
mov
xchg
jl
rcrl
sbb
or
inc
or
or
aam
adc
mov
loop
rclb
mov
rcrl
sbb
idivb
inc
sbb
aaa
push
aam
adc
in
mov
sub
rcl
sbb
sbb
lret
sbb
sbb
sbb
mov
dec
adc
sbb
sbb
push
xor
sbb
sbb
xor
insl
mov
mov
aam
adc
cwtl
lahf
lods
pop
ljmp
sbb
inc
out
stc
rcrl
sbb
aaa
mov
adc
and
std
rcrl
sbb
inc
adc
aam
adc
test
add
inc
test
pop
insb
or
or
sbb
or
push
dec
scas
adc
aam
adc
add
sbb
aam
adc
xchg
xchg
aam
adc
xchg
jg
mov
sbb
lret
sahf
sbb
rcrl
sbb
cmp
cmpsb
mov
aam
adc
in
test
sub
es
rcrl
sbb
sub
sbb
sbb
outsb
pusha
push
aam
adc
xchg
fnsave
jmp
adc
aam
adc
mov
jg
scas
es
test
sbb
sbb
push
std
adc
and
addr16
rcrb
cmp
aam
adc
mov
jl,pt
push
sbb
aam
adc
xchg
jno
mulb
data16
aam
adc
xchg
dec
notb
sub
lret
call
sbb
sbb
imul
sbb
sbb
movsb
or
sbb
sbb
out
ret
rcrl
sbb
mov
aam
adc
addb
int3
scas
xchg
add
sbb
sbb
out
mov
rolb
stos
sub
and
sbb
sbb
push
pop
rcl
adc
lods
cmp
cmpsb
push
out
or
pop
repz
aam
adc
mov
fistpll
das
push
mov
sbb
ss
cmc
rcrl
sbb
xor
lret
sbb
sbb
mov
mov
sbb
sbb
ficoms
cmpsb
stos
aam
aaa
mov
sbb
push
jne
aam
adc
xchg
loope
dec
scas
testb
sbb
sbb
mov
sbb
sbb
sbb
jl
scas
shl
mov
rcrl
sbb
outsl
lahf
sub
lahf
jbe
sbb
sbb
jle
not
sbb
sbb
imul
clc
lret
push
pop
jge
aam
adc
dec
not
sbb
sbb
cmp
aam
adc
icebp
xchg
mov
cmp
rcrl
sbb
inc
rcrl
sbb
push
mov
sbb
sbb
xchg
lcall
mov
jg
aam
adc
xchg
pop
lds
inc
sbb
sbb
sbb
int
fwait
das
icebp
sub
sbb
sbb
push
imul
sbb
sbb
push
cmp
rcrl
sbb
push
mov
sbb
incb
adc
sbb
sbb
cmpsb
icebp
cld
rcrl
sbb
xchg
sbb
test
add
xchg
test
aam
adc
xchg
or
lock
cmp
aam
adc
test
add
enter
rcrl
sbb
push
jb
aam
adc
mov
mov
inc
outsb
call
sbb
sbb
in
xor
sbb
sbb
ss
sbb
sbb
sbb
xchg
mov
push
jp
rcrl
sbb
mov
sub
aam
adc
nop
jmp
jne
aam
adc
mov
jl
jbe
sub
sbb
sbb
out
fadd
cld
and
sbb
sbb
pop
cmp
sbb
lret
cli
rcrl
sbb
cmpsb
pop
ret
rcrl
sbb
push
mov
sbb
fidivrs
sbb
rclb
xchg
xchg
aam
adc
adc
mov
sub
and
mov
out
pop
add
sbb
sbb
push
jmp
sbb
js
leave
rcl
adc
adc
mov
xchg
leave
push
aam
adc
mov
call
adc
xchg
out
adc
sbb
not
sbb
sbb
and
rcrl
sbb
test
aam
adc
ret
out
inc
sub
ret
repz
data16
jg
sbb
sbb
lods
xor
pushf
into
mov
aam
adc
rcrb
mov
cmp
cmp
lcall
add
sbb
sbb
sbb
negb
aam
adc
test
add
or
adc
repnz
in
loopne
jbe
sbb
sbb
sbb
mov
aam
adc
mov
ficompl
push
sbb
scas
je
rcrl
sbb
out
imul
sbb
lods
or
sbb
sbb
mov
adc
cwtl
or
add
sbb
sbb
xchg
stos
pop
aam
adc
aam
andl
xchg
aas
dec
xlat
pop
loopne
rcrl
sbb
mov
adc
jmp
es
sbb
sbb
push
rcrl
sbb
scas
or
sbb
sbb
and
aam
adc
shlb
lock
aam
adc
aam
pop
mov
jbe
push
aam
adc
xchg
jo
je
push
daa
sbb
sbb
sbb
fldl2t
push
mov
sbb
sbb
push
ret
adc
and
loop
inc
cld
rcrl
sbb
cmp
aam
adc
lods
pop
arpl
jns
rcrl
sbb
out
aaa
push
aam
adc
int3
cmc
inc
xlat
cmp
mov
xchg
les
pop
mov
rcrl
sbb
divl
sbb
sbb
loop
jle
into
not
sbb
sbb
mov
sbb
push
mov
rcrl
sbb
sahf
rol
rcrl
sbb
mov
pop
paddq
sbb
inc
int
push
outsb
data16
sbb
sbb
out
jg
aam
adc
xor
cmp
adc
rorl
aam
adc
movsb
das
test
cmp
out
sub
sbb
sbb
push
ja
aam
adc
xchg
xor
aam
adc
mov
jns
rcrl
sbb
imulb
shrb
daa
rcl
sbb
sbb
out
lods
sub
sbb
sbb
lods
sbb
sbb
sbb
push
int
aam
adc
mov
outsb
movl
nop
xorb
aad
push
daa
aam
adc
enter
and
adc
mov
add
add
sti
or
sbb
sbb
aas
pop
aam
adc
test
cmpl
int
in
not
sbb
sbb
push
imul
cmpsb
dec
les
add
sbb
sbb
mov
adc
into
imul
sbb
insb
push
outsb
dec
and
rcrl
sbb
inc
xchg
ret
scas
sti
and
sbb
sbb
lock
dec
and
adc
and
sub
rcl
push
aam
adc
ds
popa
test
sbb
sbb
cwtl
and
ret
sarl
adc
test
mov
mov
xor
nop
xchg
stos
xchg
dec
jbe
sbb
sbb
sbb
add
out
jl
outsl
inc
scas
cwtl
daa
aam
adc
mov
outsb
cs
movb
adc
mov
xchg
rcrl
sbb
insl
insb
mov
adc
nop
clc
push
sbb
inc
int3
sub
sbb
sbb
adc
rcrl
sbb
sub
sbb
jge
cmp
scas
nop
or
sbb
sbb
mov
adc
xchg
rorb
das
test
sbb
sbb
js
rcrl
sbb
jbe
push
aam
adc
cwtl
xchg
pushf
push
xchg
adc
lods
in
sbb
mov
sbb
or
rcrl
sbb
push
xchg
sbb
sbb
sbb
inc
clc
adc
adc
lods
mov
fmull
aam
adc
scas
leave
cltd
into
or
adc
loopne
int3
xor
cs
push
aam
adc
mov
push
jo
rcrl
sbb
cs
sbb
sbb
or
sbb
sbb
mov
lret
movsl
and
sbb
sbb
jbe
mov
sbb
sbb
scas
mov
sbb
dec
loopne
pop
sub
mov
adc
inc
sbbl
mov
pusha
cltd
fs
adc
and
sub
sbb
sbb
movsb
mov
xchg
rclb
aaa
cld
rcrl
sbb
out
and
stos
nop
xor
and
xor
aam
adc
xchg
cmc
sub
xchg
mov
adc
adc
test
cmpb
sbb
sbb
pop
adc
mov
and
xchg
add
mov
sbb
scas
mov
aam
adc
mov
out
cld
rcrl
sbb
push
or
rcrl
sbb
ret
push
pop
mov
sbb
sbb
out
or
mov
imulb
sbb
out
sbb
sbb
sbb
cmc
sub
jle
adc
sbb
sbb
xchg
mov
clc
enter
push
adcb
test
loopne
xor
xchg
les
dec
addb
inc
jmp
not
sbb
sbb
out
shrb
aam
adc
mov
out
cs
adc
mov
fmul
pusha
rcl
sbb
sbb
lods
sbb
sbb
sbb
movsl
add
mov
sbb
pop
inc
push
aam
adc
jl
jp
jae
push
sbb
sbb
sbb
ds
rcrl
sbb
negb
test
sbb
sbb
inc
inc
lret
mov
sbb
sbb
push
out
aam
adc
sahf
cmp
scas
or
sbb
sbb
insb
stc
rcrl
sbb
ds
pop
aam
adc
testb
jbe
rcl
sbb
sbb
hlt
mov
sti
adc
sbb
sbb
ss
clc
rcrl
sbb
push
xchg
sub
jp
push
addr16
andl
sbb
sbb
roll
or
aam
adc
mov
decl
adc
call
jbe
sti
rcrl
sbb
inc
sbb
sbb
sub
rcrl
sbb
xchg
push
cld
rcrl
sbb
cs
sbb
leave
and
sbb
sbb
push
and
sbb
sbb
sub
sbb
sbb
pop
outsl
test
adc
addb
int3
cmpsb
data16
rcrl
sbb
push
cmc
mov
xchg
les
mov
cli
rcrl
sbb
inc
push
aam
adc
mov
call
lods
push
aam
adc
mov
es
rcrl
sbb
je
pusha
cwtl
push
test
push
xor
mov
mov
adcb
dec
jae
and
mov
push
sub
sbb
sbb
mov
or
rcrl
sbb
out
aam
adc
cmp
or
add
sbb
sbb
push
xchg
add
sbb
sbb
out
filds
call
push
push
cld
rcrl
sbb
outsb
push
sbb
sbb
sbb
ficoms
rcrl
sbb
adc
rcrl
sbb
xor
popa
sbb
inc
in
sbb
sbb
fnstenv
sbb
sbb
mov
or
sbb
sbb
data16
aam
adc
ss
lods
jno
mov
rcrl
sbb
push
js
rcrl
sbb
cs
ret
rcrl
sbb
sub
mov
adc
xchg
mov
test
cs
ret
rcrl
sbb
out
and
sbb
sbb
out
and
sbb
sbb
mov
add
sbb
sbb
movsl
adc
sbb
sbb
hlt
push
mov
mov
add
test
add
out
or
rolb
out
jmp
jbe
rcrl
sbb
push
fmuls
jmp
sbb
sbb
mov
sbb
pushf
mov
ljmp
add
sbb
sbb
movl
sbb
mov
sbb
imulb
sbb
dec
dec
rcl
adc
test
pop
inc
outsb
sub
aam
adc
loop
lock
aam
adc
mov
ficomps
add
sbb
sbb
mov
sbb
ds
sbb
push
imul
sbb
sbb
xchg
mov
sbb
push
inc
rcrl
sbb
scas
mov
sbb
in
fisttpll
test
aam
adc
pop
or
out
mov
add
sbb
sbb
shl
sbb
sbb
sub
inc
idiv
ret
rcrl
sbb
sub
popf
push
scas
sub
rcrl
sbb
mov
cld
rcrl
sbb
jbe
or
sbb
sbb
push
mov
sbb
cs
rcrl
sbb
outsb
stos
and
sbb
sbb
testb
sbb
sbb
ret
sbb
sbb
sub
rcll
cmpsb
xor
sbb
sbb
push
mov
sbb
data16
sbb
sbb
decb
aam
adc
stos
sbb
adc
sbb
sbb
fidivrs
aam
adc
mov
cmpb
movb
push
xchg
xor
sbb
sbb
sahf
shl
rcrl
sbb
scas
xchg
aam
adc
jg,pn
inc
add
sub
mov
out
mov
sbb
scas
scas
and
sbb
sbb
frstor
aam
adc
mov
add
rcrl
sbb
lea
sub
sbb
sbb
ss
ret
pop
dec
mov
sbb
xchg
aam
adc
into
lret
mov
sbb
sbb
push
aad
aam
adc
mov
cmp
aam
adc
mov
mov
rcrl
sbb
mov
adc
xchg
loopne
lret
mov
rcrl
sbb
or
aam
adc
nop
add
loopne
and
enter
cmpsl
mov
sbb
fisubrs
push
adc
sbb
sbb
loop
aam
adc
rcrb
pop
mov
sbb
sbb
mov
jge
aam
adc
jbe
data16
adc
rcrl
sbb
inc
pushf
add
sbb
sbb
dec
movsl
xchg
aam
adc
loopne
pop
dec
cld
mov
sbb
ss
sbb
push
jne
rcrl
sbb
dec
xchg
aam
sbb
sbb
icebp
cmpsb
es
fdivrp
sbb
sbb
sbb
jbe
rcl
adc
bound
outsl
aam
sbb
sbb
mov
jmp
sbb
mov
xor
sbb
sbb
add
jle
in
jg
sbb
sbb
cld
xlat
outsb
mov
sbb
push
pop
sub
mov
or
rcrl
sbb
push
dec
clc
rcrl
sbb
jle
sub
sbb
sbb
out
and
sbb
sbb
call
sbb
sub
jmp
sbb
sbb
push
lods
adc
sbb
sbb
pushw
rcrl
sbb
xchg
scas
sub
sbb
sbb
into
lahf
and
mov
aam
adc
mov
cmpsb
dec
add
sbb
sbb
test
jecxz
sbb
sbb
dec
dec
rcl
sbb
sbb
negb
aam
adc
cwtl
add
add
mulb
sbb
mov
add
sbb
sbb
jbe
push
aam
adc
mov
inc
popl
es
jae
stos
jbe
not
sbb
sbb
cmp
aam
adc
lods
pushf
cmp
rcrl
sbb
jns
and
pop
sbb
sbb
sbb
adc
mov
lds
aam
adc
xchg
popa
inc
inc
dec
mov
mov
mov
mov
sbb
scas
xchg
sbb
push
xchg
sar
rcrl
sbb
jbe
or
sbb
sbb
out
sub
sbb
sbb
mov
adc
test
mov
clc
rcrl
sbb
divb
in
les
cltd
mov
push
aam
adc
dec
mov
push
mov
jbe
sbb
pop
mov
adc
xor
enter
iret
ss
aam
adc
test
add
or
or
aam
adc
test
sub
sahf
cltd
or
sbb
sbb
add
aam
adc
sbb
push
movl
sbb
sbb
and
aam
adc
pushf
jb
popf
jb
mov
rcrl
sbb
popf
add
sbb
sbb
int
aam
adc
pushf
shl
ds
push
gs
rcrl
sbb
mov
add
sbb
sbb
idivb
aam
adc
sahf
xchg
xchg
aaa
out
daa
rcl
adc
scas
xlat
pop
loop
or
test
add
push
adc
addb
sti
rcrl
sbb
or
rolb
outsb
mov
sbb
repnz
pop
push
dec
rcrl
sbb
adc
test
add
fnstsw
sbb
sbb
inc
shrl
std
cs
adc
mov
fiadds
mov
adc
ret
sbb
ret
adc
mov
jmp
xchg
jbe
rcl
adc
addb
int3
inc
sbb
sbb
sbb
sub
mov
push
aam
adc
mov
pop
stc
rcrl
sbb
outsb
sub
mov
scas
call
sbb
sbb
fsubrs
gs
mov
rcrl
sbb
push
push
and
sbb
sbb
data16
rcrl
sbb
pop
add
test
add
jle
ret
rcrl
sbb
mov
and
sbb
sbb
sahf
mov
sbb
fildl
sbb
and
sbb
sbb
dec
push
mov
aam
adc
push
fwait
mov
cs
cmc
rcrl
sbb
push
ss
movsb
and
mov
mov
sbb
push
stc
rcrl
sbb
rolb
or
sbb
sbb
sbb
aam
adc
test
add
or
adc
mov
dec
push
xor
mul
sbb
xchg
rclb
sbb
sbb
mov
rcrl
sbb
mov
adc
addb
int3
xchg
add
sbb
sbb
cmpsl
pop
lcall
sbb
data16
xor
je
aam
adc
push
add
jle
add
movsb
lahf
iret
mov
aam
adc
ljmp
stc
rcrl
sbb
or
xchg
inc
cwtl
or
mov
adc
test
mov
mov
rcrl
sbb
push
sub
sbb
sbb
xorb
mov
sbb
sahf
or
sbb
sbb
mov
or
cwtl
add
add
dec
push
or
sbb
sbb
fs
das
push
ds
sbb
sbb
test
aam
adc
pop
icebp
ljmp
sbb
sbb
push
in
xor
sbb
sbb
es
sbb
sbb
sbb
adc
fisttps
orl
sbb
sbb
mov
fld
scas
cs
sbb
sbb
arpl
aam
adc
lods
xorl
clc
rcrl
sbb
rcrl
sbb
xlat
je
jbe
aam
adc
xchg
jnp
mov
ss
sbb
xor
push
xchg
add
sbb
adc
jae
aam
adc
rolb
out
call
sbb
sbb
ja,pn
aam
adc
xchg
popa
inc
inc
dec
mov
adc
xchg
lea
adc
adc
shrb
gs
hlt
mov
or
sbb
sbb
sub
rcrl
sbb
xchg
add
mov
jp
insl
scas
lea
aam
adc
sahf
xchg
push
jge
mov
sbb
pop
mov
or
ret
sbb
sbb
push
cmp
aam
adc
mov
inc
add
mov
adc
adc
das
jbe
push
out
add
sbb
sbb
imulb
sbb
xchg
sbb
pop
add
rcl
sbb
sbb
push
test
aam
adc
ljmp
adc
sbb
sbb
ret
call
sbb
sbb
in
in
push
es
sbb
sbb
div
cli
rcrl
sbb
ss
aam
adc
jbe
pop
jbe
xchg
cmp
rcrl
sbb
scas
rcrb
aam
adc
push
cmpl
push
aam
adc
xchg
mov
incl
xchg
aam
adc
mov
shrl
aam
adc
cwtl
add
add
lods
call
sbb
sbb
popa
add
mov
sbb
ret
and
sbb
sbb
xchg
push
add
sbb
sbb
push
xchg
rcl
sbb
sbb
push
add
test
add
dec
scas
es
adc
fadds
pop
aam
adc
cwtl
add
add
dec
sbb
add
sbb
inc
sub
aam
adc
in
and
dec
push
stos
paddq
sbb
push
insb
sbb
into
push
pusha
pop
fmull
rcl
sbb
sbb
xlat
test
in
xchg
sbb
cmpsl
jg
sbb
sbb
xor
loope
aam
adc
cmpsb
cmp
lods
sub
sbb
sbb
imul
rcrl
sbb
pop
add
aam
adc
ljmp
or
sbb
sbb
push
popa
stc
rcrl
sbb
imulb
add
pushf
outsb
out
ljmp
adc
mov
mov
rcrl
sbb
js
mov
sbb
sbb
dec
out
aam
adc
and
pop
sub
sbb
sbb
jmp
aam
adc
mov
add
outsb
xchg
add
mov
je
add
sbb
sbb
arpl
sbb
sbb
sbb
mov
mov
aam
adc
lock
fwait
or
sbb
sbb
mov
push
adc
sbb
sbb
push
movl
mov
jle
jg
sbb
sbb
mov
cmp
aam
adc
adc
push
test
and
sbb
sbb
ss
aam
adc
mov
push
test
sbb
aad
and
sbb
sbb
cli
add
sbb
sbb
push
mov
rcrl
sbb
mov
lahf
call
sbb
sbb
rcrb
aam
adc
mov
pop
out
sub
or
sbb
sbb
add
xchg
adc
adc
mov
xchg
mov
sbb
mov
or
pushf
lcall
rcrl
sbb
inc
stc
rcrl
sbb
push
push
sbb
sbb
sbb
fsubrs
mov
dec
cltd
daa
aam
adc
push
sbb
xchg
xchg
add
test
add
popf
std
rcrl
sbb
pusha
push
aam
adc
mov
xchg
imul
mov
lcall
and
push
cld
rcrl
sbb
insl
arpl
mov
imull
aam
adc
mov
inc
mov
aam
adc
repnz
adc
add
adc
lret
jecxz
fdivp
sbb
sbb
sbb
test
sbb
sbb
jbe
and
sbb
sbb
add
sub
sbb
sbb
pusha
aas
mov
aam
adc
mov
jle
call
adc
mov
leave
push
test
sbb
sbb
xchg
int3
not
sbb
sbb
cs
or
sbb
sbb
push
sbb
jae
daa
rcl
sbb
sbb
and
jbe
out
xor
aam
adc
xchg
cmc
xchg
call
aam
adc
xchg
xchg
or
fsts
adc
mov
jg,pt
sahf
add
rcrl
sbb
or
aam
adc
into
pop
imul
adc
mov
mov
sub
sbb
sbb
sbb
aam
adc
test
jl
repz
mov
aam
adc
fadds
fstps
aam
adc
mov
sahf
aaa
aam
sbb
sbb
in
and
sbb
sbb
ds
ret
xor
sbb
sbb
test
aam
adc
push
es
xor
sbb
sbb
daa
sub
sbb
sbb
push
and
mov
sbb
sbb
testb
aam
adc
test
add
ss
aam
adc
cwtl
add
add
push
dec
ret
adc
test
aad
arpl
stos
add
sbb
sbb
das
push
cmp
sbb
sbb
mov
mov
adc
sbb
jo
rcrl
sbb
scas
dec
rcl
sbb
sbb
stos
add
and
sbb
sbb
in
aam
adc
mov
nop
mov
nop
push
ret
fisubrs
movb
aam
adc
mov
pop
pop
aam
adc
cmpsb
push
adc
out
scas
pop
aam
adc
mov
add
std
scas
js
aam
adc
mov
cmpsb
rcrb
aam
adc
nop
jmp
push
sub
sbb
sbb
je
and
or
sbb
sbb
mov
aam
adc
mov
jp
insl
push
inc
clc
rcrl
sbb
aas
sbb
sbb
sbb
xor
sbb
sbb
into
lret
sbb
sbb
scas
mov
sbb
xchg
or
aam
adc
nop
cmp
cmp
sbb
sbb
cmp
cwtl
lret
jbe
jg
aam
adc
nop
add
add
lods
paddq
sbb
pushaw
and
sbb
sbb
ss
aam
adc
xchg
hlt
stos
xchg
inc
push
aam
adc
pushf
push
pop
or
rcrl
sbb
push
and
rcrl
sbb
push
xor
js
sbb
and
out
add
sbb
sbb
mov
adc
sub
scas
pop
out
test
sbb
sbb
lahf
pop
aam
adc
nop
rol
add
push
inc
and
sbb
sbb
scas
mov
sbb
sti
ret
and
aam
adc
xchg
pop
pop
out
mov
aam
adc
mov
push
push
rcl
adc
xchg
xchg
push
mov
aam
adc
xchg
mov
inc
rcrl
sbb
incb
rcrl
sbb
jnp
aam
adc
mov
add
add
push
call
sbb
sbb
dec
push
add
sbb
sbb
xor
aam
adc
mov
inc
cmp
push
cli
rcrl
sbb
jmp
push
mov
aam
adc
test
loopne
xchg
not
or
sbb
sbb
mov
sbb
sbb
outsb
idiv
rcrl
sbb
jbe
inc
mov
sbb
sbb
xchg
add
aam
adc
rolb
enter
aam
adc
mov
inc
scas
out
xchg
stos
paddq
sbb
push
xchg
aam
adc
addb
int3
mov
aam
adc
ret
xchg
push
je
aam
adc
push
es
sbb
and
push
pop
iret
sti
jle
or
sbb
sbb
dec
lds
sbb
sbb
inc
mov
mov
pop
ss
inc
or
sbb
sbb
mov
mov
cmpsb
xchg
pop
dec
es
and
mov
out
pop
adc
sbb
sbb
xchg
sub
sbb
sbb
xchg
shrb
cmc
mov
or
sbb
sbb
cs
or
sbb
sbb
or
dec
into
lret
sbb
sbb
and
out
hlt
push
frstor
sbb
sbb
ss
aam
adc
dec
add
inc
sbb
sbb
sbb
gs
inc
std
rcrl
sbb
out
enter
loope
aam
adc
mov
int3
push
rcrl
sbb
sbb
sbb
adc
das
insb
sbb
sbb
sbb
ja
bound
mov
sbb
cs
aam
adc
mov
ror
mov
adc
shlb
add
sbb
sbb
imul
inc
or
xor
sahf
rcrl
sbb
aam
adc
lcall
not
sbb
sbb
xchg
mov
test
and
mov
mov
xchg
shrl
adc
mov
jge
scas
add
rcrl
sbb
rolb
dec
rcrl
sbb
sbb
sbb
xchg
sbb
sbb
fiadds
aam
adc
mov
out
clc
rcrl
sbb
es
add
jge
aam
adc
ret
add
sbb
sbb
mov
out
xchg
aam
adc
mov
xor
in
into
jge
aam
adc
add
mov
push
cmp
aam
adc
mov
mov
or
sbb
sbb
xor
rcrl
sbb
cmp
and
or
sbb
jns
aam
adc
sub
xchg
aam
adc
cwtl
mov
rcrl
sbb
sahf
popa
and
sbb
sbb
popf
or
sbb
sbb
sahf
add
aam
adc
mov
ret
into
call
sbb
add
aam
adc
sahf
jno
and
sbb
sbb
mov
adc
mov
add
add
cwtl
pop
aam
adc
mov
es
cmc
rcrl
sbb
push
hlt
or
sbb
sbb
out
dec
rcrl
sbb
out
cmp
sbb
out
sub
loope
loopne
rcrl
sbb
mov
adc
sbb
sbb
inc
xor
xchg
aam
adc
xchg
mov
pop
add
test
add
mov
sbb
sbb
sbb
push
add
mov
inc
mov
sbb
sbb
sbb
cmp
aam
adc
push
rcl
adc
push
aad
aam
adc
mov
jle
ljmp
adc
call
inc
jbe
aam
adc
mov
idivb
aam
adc
xchg
mov
sbb
lcall
sbb
js
cmp
aam
adc
addb
and
cmp
add
enter
adc
sub
push
sbb
sbb
mov
adc
aam
out
or
jbe
not
sbb
sbb
jl
jl
xor
sbb
sbb
pop
xlat
push
dec
clc
rcrl
sbb
sahf
mov
sbb
je
aam
adc
mov
jno
ss
push
aam
adc
xchg
mov
shl
add
rcrl
sbb
or
aam
adc
xchg
add
add
push
sbb
outsb
push
or
sbb
sbb
sub
shrb
adc
cli
out
xor
int
inc
clc
rcrl
sbb
xchg
sub
xchg
fistps
aam
adc
mov
add
cld
ss
pop
aam
adc
xchg
push
scas
xchg
aam
adc
xchg
xchg
mov
call
sbb
sbb
push
add
sbb
sbb
cmp
rcl
adc
cmp
mov
movsb
mov
sbb
dec
nop
xchg
aam
adc
ss
sbb
mov
sbb
sbb
xchg
rcrl
sbb
xlat
jnp,pn
ss
aam
adc
sahf
test
ret
rcrl
sbb
sub
rcrl
sbb
ss
or
sbb
sbb
negb
aam
adc
push
subb
sti
jbe
pop
aam
adc
xchg
inc
jl
push
push
or
aam
adc
mov
ss
rcrl
sbb
out
sbb
sbb
aad
dec
or
sbb
sbb
xchg
add
sbb
sbb
cld
add
test
sbb
aam
adc
sahf
daa
ret
mov
adc
adc
faddl
loopne
aam
adc
loop
jl
pop
pop
mov
aam
adc
xchg
jg
mov
cmpsb
push
clc
rcrl
sbb
and
xchg
sbb
mov
sbb
test
movsb
xor
aam
adc
sahf
loop
adc
adc
sahf
mov
ret
rcrl
sbb
xchg
or
sbb
sbb
xchg
aam
adc
lret
jns
jae
rcrl
sbb
inc
or
les
xchg
push
push
xor
aam
adc
mov
lcall
ffree
rcrl
sbb
gs
aam
adc
mov
add
cld
dec
xor
sbb
sbb
ss
add
test
add
data16
rcrl
sbb
orl
sbb
jbe
adc
mov
orb
sbb
sbb
dec
add
sbb
sbb
push
add
rcrl
sbb
imul
add
sbb
sbb
lret
sbb
sbb
dec
pop
mov
ss
aam
adc
nop
jmp
mov
aam
adc
mov
mov
aam
adc
mov
add
std
push
add
rcrl
push
adc
cwtl
mov
rcrl
sbb
ds
sbb
sbb
into
scas
jne
sbb
sbb
mov
aam
adc
fadds
sbb
sbb
sbb
xor
or
pushf
pop
aam
adc
mov
mov
mov
xchg
rclb
push
adc
sbb
sbb
cmpsl
xchg
ljmp
adc
jle
imul
sbb
sbb
push
mov
sbb
push
ret
rcrl
sbb
jmp
fisubrs
testb
aam
adc
addb
int3
test
sbb
mov
sbb
push
test
adc
sbb
sbb
mov
sbb
out
mov
sbb
sbb
adc
rcrl
sbb
pushf
fwait
pop
xchg
xchg
add
rcrl
sbb
movsb
sub
sbb
sbb
ja
aam
adc
test
add
dec
push
fistl
aam
adc
mov
data16
rcrl
sbb
orl
sar
or
sbb
out
or
stos
mov
nop
add
sbb
sbb
jle
add
ficomps
jl
aam
adc
idivl
and
and
aam
adc
xchg
mov
rcrl
sbb
or
sbb
xchg
sbb
stc
or
sbb
sbb
cmp
adc
adc
push
push
push
sbb
sbb
sbb
rolb
cmp
adc
sub
sbb
sbb
push
mov
rol
in
sbb
sbb
mov
movsl
xchg
adc
sbb
sbb
aam
adc
into
cmp
int
rcrl
sbb
push
pop
das
aam
adc
jle
sub
out
jg
aam
adc
ret
sbb
paddq
sbb
aam
aam
adc
mov
icebp
mov
xchg
repnz
rcrl
sbb
jbe
sub
sbb
sbb
xor
clc
rcrl
sbb
adc
test
add
jbe
or
mov
xchg
aam
adc
fsubrl
jb
rcrl
sbb
adc
inc
ficompl
jecxz
aam
adc
addb
cld
rcrl
sbb
into
mulb
aam
adc
push
jbe
fsin
decb
aam
adc
ds
leave
fldenv
push
aam
adc
cwtl
xlat
jle
cli
push
add
aam
adc
ret
cli
pop
cmpsb
dec
adc
sbb
sbb
mov
sbb
testb
mov
inc
sbb
test
add
ds
or
sbb
sbb
addr16
sbb
sbb
leave
rcrl
aam
adc
mov
add
test
add
dec
push
sbb
mov
not
sbb
sbb
push
sbb
sbb
sbb
lcall
add
cmpxchg8b
adc
adc
mov
rcrl
aam
adc
or
xchg
pushw
add
test
add
outsb
repnz
sbb
sbb
pop
add
test
add
dec
xchg
rcl
adc
addb
int3
out
ret
adc
test
add
dec
cmpsb
shl
rcrl
sbb
pop
arpl
push
aam
adc
mov
cmp
or
sbb
sbb
mov
pop
adc
adc
in
out
pop
xchg
xchg
dec
aad
aam
adc
int3
jp
cmpb
adc
test
popf
push
aam
adc
dec
push
adc
lcall
sbb
jns
rcrl
sbb
sarb
scas
push
imul
sbb
sbb
jo
aam
adc
mulb
enter
aam
adc
inc
outsl
mov
sub
fistl
aam
adc
test
loopne
in
into
and
sbb
sbb
push
jle
rcrl
sbb
sysret
enter
aam
adc
mov
cmpsb
mov
sbb
mov
aam
adc
test
ret
stos
mov
sbb
sbb
int3
cli
rcrl
sbb
xchg
sub
sbb
sbb
push
push
rcrl
sbb
or
aam
adc
loop
pop
push
rcrl
sbb
push
sbb
aam
adc
mov
add
cld
out
adc
sbb
sbb
dec
lods
xor
sbb
sbb
mov
rcrl
sbb
sbb
test
add
push
dec
push
aam
adc
pushf
iret
push
add
aam
adc
jbe
out
insl
scas
adc
sbb
push
ljmp
add
add
xchg
aad
aam
adc
lods
pop
je
addb
add
or
mov
stc
es
aam
adc
mov
imul
sbb
sbb
cs
sbb
push
add
jle
jmp
rcrl
sbb
je
pusha
aas
dec
outsl
adc
sbb
sbb
push
arpl
rcrl
sbb
into
xchg
pop
aam
adc
fidivrl
add
dec
enter
adc
enter
aam
adc
xchg
popa
inc
inc
dec
scas
dec
daa
aam
adc
pushf
lret
sbb
push
aam
adc
mov
into
xchg
xor
sbb
sbb
push
jne
aam
adc
rolb
lret
jbe
and
sbb
sbb
jne
aam
adc
adc
lret
ss
mov
dec
push
daa
aam
adc
cmp
xor
mov
add
clc
dec
sub
rcrl
sbb
and
and
sbb
sbb
out
std
rcrl
sbb
insb
inc
outsb
sbb
aam
adc
lcall
xchg
aam
adc
notb
test
rcl
sbb
sbb
pop
adc
aas
and
out
aaa
sub
sbb
sbb
imul
add
sbb
sbb
push
xchg
add
sbb
sbb
rolb
mov
xchg
cmc
adc
adc
fdivrl
call
sbb
outsl
add
sbb
sbb
mov
sbb
std
xor
sbb
sbb
into
jl
rcrl
sbb
sahf
rcrl
sbb
mov
aam
adc
inc
mov
jbe
aam
adc
shrb
pusha
into
dec
test
sbb
sbb
icebp
mov
pop
cmpsb
adc
adc
dec
fucomi
mov
xchg
mov
aam
adc
addb
int3
xchg
stos
paddq
sbb
inc
mov
aam
adc
mov
mov
inc
xor
nop
push
mov
or
sbb
sbb
dec
mov
sub
sbb
sbb
add
sbb
sbb
ljmp
les
adc
xchg
cmc
in
insb
push
outsb
sbb
sbb
sbb
data16
push
ds
adc
adc
mov
cmp
aam
adc
mov
and
aam
adc
mov
inc
add
mov
adc
adc
int3
xchg
outsb
test
sbb
sbb
xchg
mov
mov
jbe
sbb
sbb
sbb
jp
aam
adc
push
jmp
push
test
sbb
aam
adc
ret
imul
sbb
sbb
nop
cmp
xor
adc
cld
lock
data16
sbb
notb
aam
adc
test
cmc
mov
cmp
rcrl
sbb
fdivp
pop
aam
adc
or
sbb
xor
mov
cmp
imulb
sbb
imul
sbb
sbb
aam
adc
mov
push
dec
daa
aam
adc
mov
jmp
sub
sbb
sbb
and
movsl
sbbb
rcrl
sbb
mov
or
sbb
sbb
push
js
aam
adc
xchg
cmc
xor
dec
or
aam
adc
xchg
add
push
clc
rcrl
sbb
mov
aam
adc
mov
add
cmpsb
push
sbb
sbb
sbb
jp
aam
adc
mov
inc
push
cmp
aam
adc
repnz
push
inc
add
pop
daa
aam
adc
and
pop
shll
sbb
gs
xchg
xchg
pop
test
sbb
sbb
cli
sbb
out
adc
sub
sub
push
sub
aam
adc
rolb
das
jmp
dec
push
aam
adc
cwtl
add
add
ss
rcrl
sbb
out
adc
aam
adc
or
aad
aam
adc
xchg
addr16
sbb
sbb
push
push
aam
adc
fcompl
dec
rcrl
sbb
leave
cmc
rcrl
sbb
mov
adc
adc
inc
sahf
lcall
adc
mov
decl
jg
sbb
sbb
nop
or
sbb
sbb
xchg
insb
pop
aam
adc
mov
xchg
sbb
cwtl
and
mov
sbb
sbb
loopne
aam
adc
mov
or
out
pop
aam
adc
mov
lea
out
cli
rcrl
sbb
add
and
sbb
sbb
mov
sub
lahf
adc
adc
out
aaa
and
push
sub
mov
sub
xchg
popa
inc
inc
dec
inc
fwait
push
aam
adc
cmp
jbe
aam
adc
cmpsb
or
sub
sbb
int3
and
ljmp
sbb
pop
jl
adc
sbb
sbb
xor
or
sbb
sbb
jg
rcrl
sbb
cmp
addb
int3
push
inc
test
sbb
sbb
aam
aam
adc
xchg
inc
stos
test
xor
aam
adc
xchg
lret
or
sbb
sbb
push
push
pop
aam
adc
clc
mov
mov
aam
adc
cwtl
js
or
incb
sbb
sbb
and
rcrl
sbb
imul
pop
jae
fs
popl
xchg
in
fsubl
sbb
sbb
jmp
push
add
test
add
push
sbb
sbb
cmp
scas
jle
sub
sbb
sbb
js
rcrl
sbb
push
aad
aam
adc
mov
jg,pt
hlt
ja
sbb
sbb
and
aam
adc
mov
cmp
rcrl
sbb
push
pop
and
sbb
sbb
into
aas
paddq
sbb
pop
mov
sbb
sbb
divb
sbb
hlt
or
sbb
sbb
push
in
or
sbb
sbb
dec
clc
rcrl
sbb
xchg
ret
rcrl
sbb
lcall
aam
adc
lcall
adc
sbb
sbb
fdivrp
mov
enter
lret
xchg
pop
sub
sbb
sbb
popf
sbb
sbb
sbb
dec
push
xchg
jb
sub
aam
adc
loopne
mov
mov
sahf
adc
and
rcrl
sbb
xchg
inc
sbb
rcrl
sbb
ss
rcrl
sbb
push
rcrl
push
ss
inc
jnp
rcrl
sbb
stc
dec
sub
add
mov
lods
aas
xor
adc
mov
push
negb
sbb
mov
xchg
xchg
dec
clc
rcrl
sbb
xchg
ret
rcrl
sbb
dec
mov
sbb
jle
adc
sbb
sbb
notb
sbb
xchg
into
paddq
sbb
scas
add
sbb
sbb
test
aam
adc
scas
jno
mov
sbb
sbb
idivb
sbb
es
push
aam
adc
stos
test
not
sbb
sbb
into
daa
ret
adc
scas
push
cld
xor
aam
adc
test
add
aam
adc
pushf
mov
and
aam
adc
mov
rolb
fimuls
sbb
sbb
pop
in
test
adc
mov
cltd
stos
lea
push
rcrl
sbb
fisubs
pop
mov
sbb
sbb
dec
xor
sbb
sbb
pop
xor
sbb
sbb
repz
sub
sbb
sbb
sahf
mov
sahf
iret
pop
mov
hlt
sub
sbb
sbb
push
sub
rcrl
sbb
jbe
mov
rclb
dec
mov
push
scas
adc
adc
into
inc
sbb
nop
adc
test
stos
xchg
and
sbb
sbb
pop
imul
adc
mov
push
loop
notl
aam
adc
fimuls
sub
rcrl
sbb
push
paddq
sbb
mov
sub
sbb
sbb
out
or
sbb
sbb
jbe
pop
aam
adc
test
enter
adc
sbb
sbb
lahf
cs
adc
call
dec
addb
sbb
sbb
sub
pop
xchg
sbb
sbb
mov
or
sbb
sbb
pop
or
pop
mov
pop
aam
adc
push
lret
push
jle
sub
sbb
sbb
ds
sbb
out
cld
add
sbb
sbb
lcall
aam
adc
aam
xor
sbb
sbb
sbb
mov
adc
push
adc
aam
adc
xchg
inc
push
cmp
inc
int
aam
adc
lret
orl
mov
sbb
movb
adc
test
xchg
cmpsl
into
cs
rcrl
sbb
cmpsb
aas
sbb
sbb
sbb
imulb
sbb
ds
rcrl
sbb
mov
adc
adc
shlb
cmpsb
fsubrp
mov
ret
xchg
sahf
ss
rcrl
sbb
cmp
sbb
sbb
fnstsw
pop
out
xchg
add
cwtl
xchg
popf
push
scas
jbe
adc
sbb
sbb
xchg
sar
rcrl
sbb
mov
xchg
cltd
aaa
push
mov
adc
testb
adc
adc
scas
dec
lcall
xchg
mov
sbb
sbb
out
aam
adc
push
mov
mov
aam
adc
xchg
xchg
mov
cs
adc
mov
push
adc
add
ffree
rcrl
sbb
cli
jne
neg
adc
cwtl
add
add
mov
not
sbb
sbb
ss
clc
rcrl
sbb
ss
add
sbb
sbb
mov
adc
sbb
sbb
sbb
in
sbb
sbb
push
lahf
and
sbb
sbb
mov
xor
sbb
sbb
dec
stos
xor
sbb
sbb
jbe
push
aam
adc
mov
mov
or
add
sbb
sbb
push
dec
cs
adc
inc
inc
and
pop
push
mov
sbb
imulb
fdiv
outsl
xor
mov
aam
adc
pushf
xchg
lods
repz
stos
and
mov
data16
aam
adc
shlb
xchg
xor
clc
rcrl
sbb
out
insl
ja
sbb
sbb
shl
shlb
jge
aam
adc
mov
jl
push
sbb
nop
add
add
push
iret
paddq
sbb
jbe
jecxz
sbb
sbb
pop
pop
pop
ds
add
mov
push
mov
pop
dec
sbb
scas
fiadds
sbb
push
rcrl
sbb
push
add
mov
mov
sbb
sarl
nop
data16
imul
add
sbb
sbb
push
imul
xor
add
rcrl
sbb
and
push
in
outsb
icebp
sub
sbb
sbb
notb
rcrl
sbb
mov
stc
rcrl
sbb
pslld
out
sub
sbb
sbb
mov
aam
adc
push
ss
sbb
sub
rcrl
sbb
loopne
aam
adc
lret
jecxz
pop
xor
sbb
sbb
jno
inc
fnstenv
sti
rcrl
sbb
jle
sbb
sbb
sbb
adc
sbb
inc
std
rcrl
sbb
jg
aam
adc
cwtl
lahf
cmp
sbb
mov
cmpsb
jl
aam
adc
inc
test
push
and
sbb
sbb
xchg
aam
adc
mov
std
and
jb
aam
adc
mov
mov
adc
mov
sbb
rcrl
sbb
sbb
mov
mov
stc
rcrl
sbb
mov
cld
rcrl
sbb
xchg
daa
push
aam
adc
mov
mov
sbb
sbb
xor
adc
lock
sbb
sbb
push
xor
sbb
sbb
divb
sbb
sbb
push
icebp
push
insb
pop
xor
aam
adc
lret
pop
aam
pop
add
test
add
dec
testb
sbb
sbb
loop
dec
cmp
xor
sbb
inc
add
cwtl
ds
sub
mov
nop
pop
aam
adc
ds
mov
rcrl
sbb
mov
rcl
adc
test
mov
rcrl
sbb
mov
sbb
scas
fdiv
rcrl
sbb
cmpsb
sbbb
xchg
or
sbb
sbb
xor
mov
rolb
xchg
fwait
pop
aam
adc
mov
inc
cmp
test
sbb
mov
mov
dec
mov
fcmovnu
mov
sbb
inc
fnstcw
cmpsb
mov
jns
es
rcrl
sbb
adc
rcrl
sbb
out
sbb
sbb
sbb
mov
cli
rcrl
sbb
fsubl
lock
jl
adc
dec
in
aas
mov
leave
sub
sbb
sbb
jbe
sbb
lret
pop
sub
xor
sbb
push
cmp
sbb
sbb
jl
loope
scas
cld
rcrl
sbb
pop
popa
sarb
sbb
sbb
testb
mov
push
mov
sbb
out
aam
adc
or
fs
stos
jle
adc
adc
jl
scas
mov
pop
call
sbb
sbb
xchg
mov
adc
jb
fs
sbb
sbb
sbb
cmc
sbb
sbb
sbb
rolb
sbb
sbb
or
add
push
in
sbb
sbb
jae
pop
xchg
push
aam
adc
mov
inc
cmp
sbb
sbb
jo
rcrl
sbb
sub
aam
adc
data16
cltd
test
dec
add
fcomps
push
test
adc
nop
fldenv
fmull
adc
sbb
sbb
push
and
sbb
sbb
xor
icebp
dec
mov
adc
scas
icebp
jo
dec
cltd
aam
sbb
sbb
jg,pn
sub
and
sbb
sbb
sbb
sbb
jle
adc
sbb
sbb
push
cwtl
jg
jbe
and
sbb
sbb
scas
sti
pop
aam
adc
push
sbb
sbb
cmp
and
hlt
push
aam
adc
sub
mov
call
sbb
sbb
pop
or
rcrl
sbb
push
into
xor
sbb
sbb
idivb
aam
adc
addb
rcl
sbb
sbb
inc
imul
inc
add
call
push
and
aam
adc
xor
and
sbb
sbb
loop
aas
jno
xchg
sub
sbb
sbb
sahf
sub
sbb
out
xor
sbb
sbb
clc
or
sbb
sbb
xchg
es
test
cmpb
not
sbb
sbb
mov
daa
aam
adc
scas
cltd
xchg
into
cs
mov
or
dec
adc
sbb
sbb
out
or
sbb
sbb
sahf
pop
rcl
adc
stos
jl
pop
pop
xchg
iret
not
sbb
sbb
jbe
push
aam
adc
sbb
push
out
or
mov
mov
jle
mov
nop
pop
mov
aam
adc
cwtl
orb
lods
push
pop
rcrl
sbb
rorb
sbb
sbb
mov
gs
sbb
sbb
or
aam
adc
test
add
shlb
aam
adc
mov
out
pop
and
lret
push
imul
adc
int3
dec
inc
mov
aam
adc
test
add
push
sub
rcrl
sbb
mov
sub
sbb
sbb
pop
mov
sbb
mov
sbb
sbb
xchg
clc
sub
sbb
sbb
adc
ds
ds
adc
push
mov
ret
fdiv
rcrl
sbb
notb
sbb
out
xor
sbb
sbb
ds
rcrl
sbb
push
xor
aam
adc
xchg
cltd
aaa
push
mov
adc
addb
int3
push
repz
sbb
sbb
push
sahf
pop
rcl
sbb
sbb
scas
jns
sbb
sbb
arpl
les
push
xchg
clc
rcrl
sbb
mov
adc
adc
mov
jbe
add
sbb
sbb
jle
sub
sbb
sbb
push
lret
sbb
sbb
cmpsl
cmpsl
insl
mov
adc
xchg
or
push
push
sahf
fwait
or
sbb
sbb
push
add
aam
adc
cwtl
add
add
jle
adc
mov
hlt
push
lret
adc
sbb
sbb
loope,pt
aam
adc
enter
data16
scas
sub
sbb
sbb
inc
out
aam
adc
mov
mov
rcrl
sbb
dec
call
rcrl
sbb
pop
xor
int3
cmpsl
inc
pop
popa
out
ret
adc
xchg
das
push
addb
adc
pushf
iret
xor
mov
sbb
sbb
shl
daa
or
adc
mov
add
cld
fcomps
aam
adc
lods
fsubs
aam
adc
xchg
loope
ljmp
sbb
sbb
push
cs
sbb
sbb
jle
adc
sbb
sbb
cmpsb
scas
rcl
adc
xchg
test
push
std
rcrl
sbb
inc
inc
arpl
stos
and
sbb
sbb
add
aam
adc
mov
cmpsb
push
pop
aam
adc
xchg
mov
pop
rcrl
sbb
lahf
popf
ss
aam
adc
mov
cld
call
jbe
rcrl
sbb
push
mov
sbb
notb
aam
adc
or
jp
es
jbe
sbb
sbb
mov
xchg
or
sbb
sbb
push
jno
aam
adc
movsb
aaa
push
into
pop
push
adc
adc
adc
cld
mov
ds
aam
adc
push
inc
dec
jne
out
or
sbb
sbb
xor
test
add
into
cs
rcrl
sbb
jl
shrb
adc
loopne
mov
jns
sbb
pop
add
pusha
dec
jmp
sbb
sbb
lods
jmp
lcall
sbb
dec
hlt
add
sbb
sbb
add
movb
mov
sbb
sbb
into
xor
rcrl
sbb
jbe
mov
call
push
mov
rcrl
sbb
into
aaa
mov
sbb
sbb
jbe
or
test
add
aam
adc
xchg
mov
jle
mov
or
sbb
sbb
movsb
inc
in
push
in
mov
xchg
ss
mov
aam
adc
mov
arpl
aam
adc
mov
pop
adc
sbb
sbb
shlb
aam
adc
in
fnstenv
dec
addr16
ret
sbb
sbb
outsl
clc
rcrl
sbb
xor
aam
adc
mov
loop
aam
adc
cli
inc
push
xor
adc
sbb
sbb
notb
sbb
sbb
and
jle
aam
adc
xchg
jno
mov
sbb
sbb
mov
or
sbb
sbb
out
es
adc
sahf
movsl
das
fsubs
jl
aam
adc
cmpsb
hlt
mov
push
aam
adc
lcall
adc
sbb
sbb
fsubl
aam
adc
adc
push
test
and
aam
adc
mov
popl
sbb
sbb
xor
rcrl
sbb
ss
aam
adc
cwtl
add
add
push
adc
aam
adc
mov
cs
das
aam
adc
in
lods
push
jge
out
aam
adc
lret
es
jbe
pop
aam
adc
fsubl
and
pcmpeqd
test
add
sahf
sti
rcrl
sbb
shld
sub
sbb
sbb
push
pop
add
sbb
sbb
xchg
add
sbb
sbb
mov
mov
mov
xchg
push
jno
scas
xchg
aam
adc
and
fwait
sub
int
rcrl
sbb
xchg
or
mov
cld
lds
xchg
ret
adc
ficompl
lret
into
adcl
dec
sbb
mov
sbb
xchg
xchg
es
xor
sbb
sbb
push
negl
aam
adc
cmpsb
in
mov
aam
adc
pushf
shlb
cmp
es
paddq
sbb
xchg
aam
adc
lret
sbb
push
les
sbb
sbb
out
cmp
aam
adc
mov
add
add
adc
xchg
xchg
dec
xchg
and
aam
adc
or
or
hlt
push
sub
sbb
sbb
rorb
negb
adc
adc
fs
inc
bound
negb
aam
adc
xchg
push
lods
iret
fistps
push
aam
adc
test
add
sub
adc
mov
incb
sbb
mov
rcrl
sbb
out
fs
adc
loopne
repz
aam
adc
mov
jbe
not
sbb
sbb
lret
sbb
sbb
hlt
fsubl
push
jae
aam
adc
call
jg
rcrl
sbb
icebp
data16
push
insb
adc
adc
int3
lret
shlb
aam
adc
cld
ljmp
rcrl
sbb
mov
push
jbe
rcrl
sbb
mov
or
aam
adc
addb
int3
jle
adc
sbb
sbb
and
or
jmp
aam
adc
in
or
sbb
sbb
into
js
aam
adc
lret
lods
adc
sbb
sbb
xor
ds
push
aam
adc
dec
xor
pop
jl
clc
or
sbb
sbb
es
xor
sbb
push
push
jecxz
mov
aam
adc
mov
test
sbb
cmpsb
add
rcrl
sbb
pop
xchg
mov
aam
adc
aam
imul
leave
sub
sbb
sbb
out
mov
sbb
sbb
popa
cmp
repz
stos
adc
sbb
sbb
test
aam
adc
mov
push
cmp
rcrl
sbb
out
in
sbb
sbb
mov
and
aam
adc
xchg
add
notb
aam
adc
cmpsb
call
adc
test
add
push
lea
aam
adc
or
in
inc
fiadds
sbb
sbb
sbb
ss
or
sbb
sbb
fwait
push
push
mov
pop
add
sbb
sbb
idiv
add
cwtl
add
add
sbb
add
jae
stc
adc
adc
mov
xor
and
sbb
sbb
push
mov
sbb
adc
aam
adc
movsb
pop
ljmp
sbb
sbb
add
sbb
stos
xchg
push
add
shl
rcrl
sbb
pop
popa
rcrl
sbb
ja
ds
jbe
sbb
sbb
sbb
push
cmpsb
rcrl
sbb
sbb
aam
adc
xchg
cmpsl
clc
adc
sub
mov
es
aam
adc
xchg
popa
inc
inc
dec
es
and
sbb
sbb
leave
or
sbb
sbb
out
lods
adc
sbb
sbb
test
rcrl
sbb
into
das
add
sbb
sbb
dec
sbb
sbb
sbb
icebp
sbb
subl
aam
adc
mov
xchg
mov
sbb
mulb
pop
mov
sbb
jmp
aam
adc
push
test
push
pop
aam
adc
cmpsb
pop
xor
ds
stc
rcrl
sbb
addr16
sbb
sbb
xchg
notb
cwtl
inc
popa
sub
dec
adc
addb
int3
jbe
add
mov
sbb
sbb
xchg
stc
add
sbb
sbb
or
mov
rolb
mov
and
sbb
sbb
and
aam
adc
mov
lods
sbb
outsb
mov
aam
adc
push
es
jns
jle
adc
sbb
sbb
cmc
add
sbb
sbb
xchg
sbb
movb
aam
adc
scas
pop
movsb
push
mov
sbb
sbb
mov
aam
adc
addb
int3
mov
aam
adc
jg
scas
add
or
rcrl
sbb
es
rcrl
sbb
into
rcl
sbb
sbb
push
ret
sbb
sbb
xchg
adc
aam
adc
mov
popa
repz
adc
xchg
sbb
leave
jle
pop
aam
adc
mov
inc
add
mov
add
sbb
sbb
out
xor
aam
adc
mov
add
cld
push
mov
aam
adc
nop
movsb
les
pop
divb
aam
adc
xchg
addr16
adc
sbb
sbb
outsb
shl
rcrl
sbb
xor
aam
adc
xchg
cmc
scas
rcll
sbb
sbb
mov
sub
sbb
sbb
inc
ret
adc
movsb
insb
mov
jg
cs
sbb
sbb
sahf
outsl
daa
aam
adc
int3
hlt
rcrl
inc
sub
aam
adc
mov
inc
push
aad
sbb
aam
adc
mov
outsb
sub
mov
rcl
sbb
sbb
xchg
add
sbb
sbb
push
sbb
sbb
sbb
xchg
push
aam
sbb
sbb
jl
xor
cs
add
sbb
sbb
push
aam
adc
mov
push
ss
sbb
sbb
pushf
inc
popa
out
mov
adc
mov
add
cld
cmpsb
out
aam
adc
ljmp
jg
sbb
sbb
xchg
dec
sbb
push
xchg
push
aam
adc
xchg
insl
mov
add
sbb
sbb
fidivs
or
mov
add
std
push
cmp
rcrl
sbb
outsb
fmuls
aam
adc
movsb
jge
fistl
popl
aam
adc
xchg
stos
pop
aam
adc
scas
jmp
add
aam
adc
cmpsb
push
push
out
lret
scas
or
sbb
sbb
sbb
sbb
scas
or
mov
adc
push
adc
sbb
sbb
inc
mov
scas
cs
sbb
sbb
mov
inc
aas
cmpsb
xor
sbb
cmpsb
popa
sbb
sbb
sbb
xlat
add
sbb
sbb
lock
sbb
sbb
jp
out
push
xor
sbb
push
cli
and
sbb
sbb
ja
ja
mov
sbb
insl
cld
rcrl
sbb
push
mov
mov
inc
lds
push
shll
aam
adc
inc
sti
cs
jle
mov
sub
sub
sbb
sbb
sbb
push
in
sub
sbb
sbb
mov
adc
addb
int3
xchg
xchg
sbb
sbb
sbb
fstpt
not
sbb
sbb
leave
not
sbb
sbb
sahf
negb
aam
adc
xchg
pop
outsb
mov
into
mov
aam
adc
xchg
loopne
stc
inc
mov
aam
adc
sbb
js
aad
push
or
sbb
sbb
push
add
sbb
sbb
cmpsb
and
rcrl
sbb
mov
daa
aam
adc
mov
pop
daa
aam
adc
mov
jle
add
sbb
sbb
sahf
insl
push
aam
adc
sahf
xchg
xchg
out
push
jbe
aam
adc
xchg
shl
or
outsb
push
aam
adc
or
cli
es
jbe
and
sbb
sbb
testb
fidivrl
mov
adc
xchg
rcrb
sbb
rcrl
sbb
dec
xchg
or
sbb
sbb
push
xor
aam
adc
inc
sub
or
push
aam
adc
cmp
mov
sahf
cmc
sti
rcrl
sbb
lcall
add
mov
sbb
pop
pop
pop
aam
adc
movsb
pop
out
sub
rcrl
sbb
mov
push
aam
adc
mov
fimull
aam
adc
mov
jl,pt
xchg
rcrl
sbb
jno
mov
rcrl
sbb
out
or
sbb
sbb
out
aam
adc
mov
or
aam
adc
nop
add
loopne
mov
sbb
push
mov
jns
or
mov
in
sbb
sbb
mov
add
sbb
sbb
xchg
aam
sbb
sbb
ds
rcrl
sbb
popw
mov
into
pop
or
sbb
sbb
cli
lods
cmp
clc
rcrl
sbb
pop
and
sbb
sbb
push
inc
rcl
sbb
sbb
idivb
sbb
into
mov
aam
adc
enter
cmpl
add
std
sahf
push
and
sbb
sbb
mov
sbb
mov
sbb
xchg
aam
adc
test
js
test
ret
push
aam
adc
fmuls
imul
sbb
sbb
push
mov
aam
adc
mov
add
std
cmpsb
xchg
paddq
sbb
mov
aam
adc
mov
jg
negb
sbb
sbb
sbb
scas
xchg
aam
adc
xchg
add
sub
or
sbb
sbb
mov
adc
aam
adc
pushf
dec
adc
sbb
cmp
test
push
out
push
mov
sbb
push
ret
or
sbb
sbb
push
lret
cli
rcrl
sbb
dec
jmp
rcrl
sbb
mov
sbb
jle
std
rcrl
sbb
jbe
add
sbb
sbb
out
and
pushf
add
push
pop
aam
adc
cwtl
sub
xchg
add
rcrl
sbb
ficoms
sbb
inc
out
rcrl
sbb
outsb
std
rcrl
sbb
xchg
cmp
aam
adc
pushf
xlat
push
xchg
test
sub
rcrl
sbb
imull
out
sarl
jns
aam
adc
addb
int3
adc
mov
pushl
adc
decb
inc
lret
fiadds
aam
adc
out
mov
xchg
rcrl
sbb
push
adc
aam
adc
test
mov
mov
or
sbb
sbb
push
mov
paddq
sbb
ss
xor
mov
or
outsb
push
adc
adc
mov
mov
adc
mov
testb
sbb
sbb
push
aam
adc
lcall
aam
adc
mov
mov
sbb
ja
fsub
mov
sbb
inc
ds
sbb
sbb
sbb
xor
ret
cmc
xchg
sbb
and
cld
push
cmpsb
sub
rcrl
sbb
mov
sbb
ljmp
add
insb
and
sbb
sbb
ss
rcrl
sbb
cwtl
lret
ficompl
sbb
sbb
dec
dec
adc
sbb
sbb
or
sbb
push
sbb
sbb
sbb
jge
xchg
lret
ss
or
sbb
sbb
push
adc
repz
data16
push
rcrl
sbb
mov
cmpsb
or
sbb
sbb
scas
dec
pop
aam
adc
mov
push
iret
jnp
aam
adc
mov
std
pushl
out
rcrl
sbb
movb
sbb
sbb
push
in
aam
adc
mov
fwait
jnp
push
pushf
adc
sbb
sbb
int
scas
or
sbb
sahf
mov
aam
adc
mov
add
aam
adc
mov
pop
ja
push
add
aam
adc
xchg
and
mov
cmpsb
test
xchg
sbb
out
or
xchg
ss
ds
pop
and
sbb
sbb
push
test
into
shrl
sbb
sbb
cltd
jo
pop
ss
add
sbb
sbb
sbb
mov
aam
adc
sbb
ret
adc
add
sbb
sbb
ficomps
aam
adc
shrb
or
sbb
sbb
fildll
sbb
sbb
outsb
cmp
rcrl
sbb
pop
add
mov
jbe
mov
clc
enter
jle
add
sbb
sbb
push
pop
adc
adc
add
pushf
call
sbb
sbb
inc
add
sbb
sbb
xchg
aad
aam
adc
stos
test
mov
sbb
sbb
jb
negl
sbb
sbb
es
rcrl
sbb
int
or
mov
sbb
sbb
out
mov
aam
adc
xchg
push
cmp
int
dec
add
sbb
sbb
mov
sbb
mov
in
sbb
sbb
sub
sbb
outsb
test
sbb
sbb
sbb
mov
test
aam
adc
addb
and
sbb
sbb
jle
sti
rcrl
sbb
xchg
movsl
not
sbb
sbb
adc
sbb
cmpsb
daa
pop
scas
push
xchg
std
rcrl
sbb
jbe
sub
sbb
sbb
scas
push
pusha
fisttpl
fidivs
sbb
sbb
mov
aam
adc
mov
inc
imul
adc
cmpsb
xlat
popf
mov
sbb
sbb
fstpl
aam
adc
mov
dec
jbe
add
sbb
sbb
mov
or
es
rcrl
sbb
xchg
pop
sti
rcrl
sbb
mov
adc
mov
aas
jb
js,pt
aam
adc
sahf
cld
call
sbb
nop
cmpsl
sub
aam
adc
mov
inc
add
ss
adc
pop
cwtl
int
push
push
clc
rcrl
sbb
callw
sbb
sbb
insb
add
add
or
test
rcrl
sbb
into
es
sbb
sbb
xchg
sbb
sbb
movsl
fs
negb
add
sbb
sbb
dec
popf
xor
sbb
sbb
not
adc
sbb
sbb
add
mov
sbb
sbb
xor
sbb
dec
or
cwtl
add
add
out
icebp
adc
sbb
sbb
pop
stc
rcrl
sbb
outsb
push
ret
adc
fisubl
aam
sbb
sbb
mov
adc
cmpsb
jge
js
push
rcrl
sbb
scas
push
sbb
movsb
pop
mov
jbe
cli
rcrl
sbb
in
aam
adc
mov
out
lret
and
sbb
sbb
push
in
sbb
sbb
xchg
test
push
aam
adc
mov
std
lcall
inc
cld
rcrl
sbb
push
mov
rcrl
sbb
pop
int3
xor
sbb
sbb
mov
or
sbb
sbb
stos
or
sbb
sbb
mov
not
sbb
sbb
push
fisttpl
aam
adc
nop
movsb
les
pop
jbe
or
sbb
sbb
mov
aam
adc
nop
movsb
les
pop
out
mov
sbb
push
sub
rcrl
sbb
xchg
and
sbb
sbb
push
aad
sub
mov
rcrl
sbb
push
ficoml
aas
into
pop
and
sbb
sbb
xor
clc
rcrl
sbb
pop
dec
or
adc
nop
movsb
les
pop
xchg
and
aam
adc
xchg
add
add
sub
aam
adc
cmpsb
pop
xor
pop
aam
adc
mov
loop
shlb
adc
cwtl
sub
jns
sbb
sbb
in
in
pop
cmc
add
sbb
sbb
and
inc
rcrl
sbb
or
xor
jg
scas
shlb
lret
rcl
sbb
sbb
aam
lret
ljmp
xchg
popf
jp
inc
jecxz
sbb
sbb
idivb
aam
adc
pushf
icebp
dec
ljmp
adc
sbb
data16
pop
cmp
aam
adc
mov
or
dec
push
sub
mov
mov
add
sbb
sbb
sub
aam
adc
rolb
leave
xchg
sub
sbb
sbb
jle
stc
rcrl
sbb
into
cs
adc
addb
int3
inc
pushf
mov
je
jne
loopne
rcrl
sbb
std
inc
pop
mov
aam
adc
pushf
lcall
rcrl
sbb
inc
test
sbb
sbb
xchg
lcall
iret
mov
not
sbb
sbb
inc
popf
or
sbb
sbb
out
jb
rcrl
sbb
outsb
pop
push
aam
adc
mov
shl
jns
jnp
rcrl
sbb
xchg
aam
adc
test
add
aam
adc
cwtl
push
lret
dec
pop
or
sbb
xor
aam
adc
addb
mov
lods
loop
adc
aam
adc
lcall
rcl
sbb
sbb
jbe
push
aam
adc
lcall
xor
sbb
sbb
inc
jge
mov
daa
aam
adc
call
divb
test
jmp
aam
adc
mov
jg
xor
fisubrs
sbb
sbb
outsb
ret
sbb
sbb
xor
rcrl
sbb
scas
lods
push
aam
adc
xchg
fsubs
add
sbb
sbb
push
icebp
sub
sbb
sbb
nop
inc
aas
into
push
es
rcrl
sbb
xchg
add
sbb
sbb
ljmp
sbb
sbb
scas
xchg
rcrl
sbb
jecxz
aam
adc
nop
add
add
cs
rcrl
sbb
pop
add
sbb
sbb
dec
cmp
rcrl
sbb
out
pop
in
sbb
sbb
leave
pop
pop
in
rcrl
sbb
mov
sbb
daa
and
sbb
sbb
out
xchg
rcrl
sbb
push
mov
les
adc
adc
push
push
or
ret
rcrl
sbb
cmpsb
cmp
aam
adc
cwtl
gs
cmc
xor
in
cld
rcrl
sbb
lock
aam
adc
mov
jle
ret
rcrl
sbb
xor
rcrl
sbb
pop
pop
aad
push
sbb
aam
adc
xchg
mov
fcomps
adc
mov
sahf
rcrl
sbb
jbe
cli
rcrl
sbb
jle
sbb
sbb
sbb
mov
aam
adc
hlt
jns
add
sbb
sbb
push
and
aam
adc
mov
jle
pop
aam
adc
xchg
jmp
sbb
jbe
or
cwtl
add
add
es
sbb
scas
stos
or
sbb
sbb
add
aam
adc
ja
les
aam
adc
cmpsb
push
pusha
out
mov
sbb
sbb
cs
mov
sbb
sbb
mov
or
sbb
sbb
lods
jns
jl
loope
aam
adc
nop
add
add
jbe
push
aam
adc
mov
cmp
xor
sbb
sbb
pop
adc
stos
insb
push
xor
sbb
sbb
and
rcrl
sbb
inc
fistpll
lds
jle
mov
js
dec
or
nop
add
add
divb
sbb
out
pushf
sub
sbb
sbb
data16
rcrl
sbb
cs
rcrl
sbb
pop
xor
mov
rcrl
sbb
mov
add
sbb
sbb
xchg
fs
push
adc
adc
sub
cltd
inc
fldl
rorb
aam
adc
inc
clc
mov
aad
ret
sbb
sbb
fiadds
sbb
fdivp
std
rcrl
sbb
xchg
je
aam
adc
adc
rcl
sub
inc
clc
rcrl
sbb
mov
sbb
and
testb
pop
scas
icebp
repz
jbe
adc
adc
and
rcrl
scas
add
sbb
sbb
mov
sbb
sbb
sbb
pop
mov
sbb
sbb
sbb
sub
aam
adc
mov
dec
lds
sbb
sbb
es
or
sbb
sbb
out
pop
nop
push
push
and
rcrl
sbb
jbe
clc
rcrl
sbb
push
iret
push
aam
adc
xchg
add
test
pop
or
sbb
sbb
mov
faddp
or
sbb
sbb
pop
jp
sahf
ss
sbb
sbb
in
js
incb
rcrl
sbb
fcomps
aam
adc
int3
and
sub
sbb
sbb
mov
aam
adc
mov
decb
sbb
mov
sub
mov
xchg
aam
adc
xchg
push
lds
inc
rcrl
sbb
push
inc
add
sbb
sbb
inc
fs
aam
adc
lcall
add
sbb
sbb
inc
pop
cli
rcrl
sbb
mov
sbb
sbb
xchg
xchg
aam
adc
movsb
lret
mov
sbb
sbb
sub
test
sbb
sbb
mov
pop
sub
sbb
sbb
sub
jg
mov
and
sbb
sbb
xchg
test
sbb
ss
aam
adc
test
adc
dec
data16
sbb
sbb
mov
adc
addb
add
test
add
sahf
ss
sbb
sbb
out
rcl
sbb
sbb
into
push
in
sbb
sbb
scas
cmp
aam
adc
movsb
das
stos
dec
cmp
lds
sbb
sbb
cmp
aam
adc
xchg
inc
movsb
mov
aam
adc
shlb
sub
sbb
sbb
sub
rcll
pushl
sbb
sbb
jle
push
aam
adc
into
mov
cmpsb
mull
aam
adc
mov
inc
insb
outsl
ds
sbb
sbb
sbb
out
and
sbb
sbb
xor
push
aam
adc
nop
popf
outsb
ss
fildl
aam
adc
loop
inc
jo
push
test
aam
adc
xchg
mov
push
xor
test
add
aam
adc
clc
inc
and
outsl
scas
lds
aam
adc
pop
fwait
and
aam
adc
mov
sub
sbb
sbb
js
and
aam
adc
nop
add
shll
mov
sbb
inc
lcall
aam
adc
nop
push
mov
sub
sbb
sbb
mov
and
sbb
sbb
push
cld
jp
into
aam
adc
xchg
js
adc
js
aam
adc
sbb
arpl
aam
adc
push
stos
pop
loop
pushf
cli
rcrl
sbb
cmp
aam
adc
mov
sbb
sbb
sbb
scas
pushf
cmc
rcrl
sbb
pop
clc
pop
mov
adc
xor
clc
mov
pop
dec
rcrl
sbb
ds
sub
sbb
sbb
inc
adc
sbb
sbb
push
inc
ret
rcrl
sbb
mov
rorb
aam
adc
mov
adc
mov
fistps
aad
mov
aam
adc
scas
ret
jl
imull
inc
sub
test
mov
int3
xchg
aam
adc
lock
xchg
dec
sub
sbb
and
mov
out
stc
ss
sbb
sbb
sbb
jbe
mov
xchg
rclb
jae
aam
adc
nop
movsb
les
mov
aam
adc
jbe
fisubs
into
inc
xor
sbb
and
dec
jne
orl
adc
xchg
add
sbb
aam
adc
fdivr
in
outsb
aas
xchg
rcl
sbb
sbb
lea
sbb
sbb
sbb
xchg
mov
mov
aaa
out
data16
rcrl
sbb
imul
jmp
sbb
sbb
add
add
sbb
sbb
xabort
rcrl
sbb
jle
call
sbb
sbb
std
xor
sbb
sbb
jno
rcrl
sbb
mov
ret
adc
pushf
jle
es
sbb
sbb
sbb
test
sbb
cmp
sbb
pop
test
imul
adc
xchg
hlt
in
lret
adc
sub
rcrl
sbb
sbb
cmp
xchg
xor
rcrl
sbb
mov
push
aam
adc
mov
cs
paddq
sbb
mov
stos
pushw
out
push
and
sbb
sbb
sahf
cli
add
out
adc
cs
arpl
push
loope
outsl
push
std
push
aam
adc
xchg
popf
in
jae
jl
aam
adc
mov
divb
push
aam
adc
mov
cmc
mov
xchg
pusha
cmp
aam
adc
xchg
add
mov
adc
sub
rcrl
sbb
data16
rcrl
sbb
sti
xchg
jp
rcrl
sbb
rclb
nop
add
add
xchg
push
clc
rcrl
sbb
outsb
nop
or
sbb
sbb
jbe
sub
cwtl
jl
jge
sahf
jge
aam
adc
mov
mov
mov
sbb
sbb
mov
adc
es
adc
adc
aam
cmpsl
adc
idiv
sti
rcrl
sbb
scas
mov
sbb
scas
aaa
test
sbb
sbb
pop
mov
scas
cltd
add
sbb
sbb
outsb
jnp
aam
adc
xchg
popa
inc
inc
dec
push
inc
daa
aam
adc
clc
pop
xchg
pusha
sbb
adc
mov
jmp
sbb
std
in
sub
sbb
sbb
leave
es
dec
popa
sbb
sbb
sbb
mov
or
sahf
mov
aam
adc
cwtl
push
sahf
pop
xchg
mov
adc
xchg
sub
sub
sbb
sbb
push
adc
sbb
stos
ret
rcrl
sbb
xchg
aam
adc
sahf
pop
pop
in
scas
push
aam
adc
mov
testb
sbb
sbb
mov
adc
xchg
dec
insl
outsb
mov
aam
adc
int3
into
xor
sbb
sbb
incb
sbb
imulb
rcrl
sbb
push
sub
rcrl
sbb
movsb
jg
sbb
sbb
pop
mov
adc
sbb
sbb
leave
adc
rcl
sbb
sbb
not
or
cwtl
add
add
into
or
sbb
sbb
imulb
aam
adc
cmpsb
cmp
inc
xor
sbb
sbb
xor
sub
sbb
lahf
or
sbb
sbb
xchg
add
sbb
sbb
cmpsb
mov
aam
adc
addb
int3
xchg
sar
sbb
sbb
ret
pop
mov
xchg
cli
rcrl
sbb
into
imul
sbb
sbb
cs
rcrl
sbb
es
aam
adc
cwtl
jns
les
sbb
sbb
jbe
adc
sbb
sbb
mov
push
jmp
jno
aam
adc
nop
inc
out
pop
dec
add
sbb
sbb
mov
call
sbb
sbb
mov
sahf
and
inc
and
sbb
sbb
push
mov
rcrl
sbb
jl
aam
adc
mov
push
jle
rcrl
sbb
testb
sbb
sbb
outsb
adc
sbb
sbb
fidivrs
rcrl
sbb
decb
aam
adc
mov
cmp
aam
adc
mov
std
rcl
sbb
sbb
testb
sbb
sbb
fidivrs
sub
pushf
add
sbb
sbb
fimuls
aam
adc
xchg
and
aam
adc
mov
jecxz
rcrl
sbb
and
out
shll
aam
adc
mov
mov
sub
stos
mov
aas
daa
aam
adc
mov
movb
test
add
push
in
rcrl
sbb
push
jl
rcrl
sbb
mov
adc
xor
leave
push
cmp
add
sbb
sbb
mov
adc
nop
jmp
push
sbb
sbb
sbb
sahf
adcb
sbb
sbb
outsb
gs
sbb
sbb
or
aam
adc
and
aam
adc
hlt
jp
xor
in
sub
sbb
sbb
mov
adc
adc
jl
mov
fcomip
xchg
add
sbb
sbb
cmpsb
subb
sbb
sbb
data16
rcrl
sbb
cs
rcrl
sbb
fidivrs
aam
adc
out
stos
push
negb
aam
adc
ret
out
adc
mov
sbb
into
js
aam
adc
mov
or
es
adc
sbb
sbb
ss
aam
adc
mov
push
aaa
cld
rcrl
sbb
jle
sub
sbb
sbb
insl
add
sbb
sbb
ficoms
and
sbb
sbb
or
mov
cmp
hlt
repnz
leave
adc
cmpl
jns
lds
cld
fmulp
stos
mov
push
stc
add
popl
add
rcrl
lahf
pop
mov
jge
repz
push
nop
and
movsb
and
dec
and
gs
jo
sub
xor
jecxz
mov
jl
sub
jno
and
cmp
stc
add
int
ror
mov
cltd
cmpsb
mov
adc
test
fdiv
rcrb
sbb
ds
popf
cmp
test
loope
sub
pop
jg
mov
pop
lods
lods
loop
fidivrl
mov
sbb
dec
shlb
sarb
outsb
out
cmp
rorl
push
inc
out
xchg
lcall
lods
sub
out
dec
push
jno
bound
rcrl
mov
aad
mov
xor
xor
and
sahf
xlat
mov
sbb
mov
loop
enter
repz
outsb
popa
insb
fmuls
fists
ss
xor
fs
dec
stc
leave
aaa
xchg
loop
or
outsl
dec
lods
and
inc
lret
jo
xchg
and
in
loopnew
cmp
in
xor
cli
or
pop
out
jge
mov
faddl
cmpsb
ficompl
data16
cmpsb
std
add
adc
adc
icebp
xchg
imul
fwait
repz
outsb
push
xor
fdivr
pop
nop
push
mov
fidivl
loop
mov
pop
push
es
jmp
repz
loopne
sbb
cmovge
sub
dec
xchg
out
nop
push
repz
aad
ljmp
sbb
xor
imul
or
xor
cmpsl
adcl
push
or
mov
dec
dec
bound
scas
cltd
aas
mov
shll
fwait
ret
fs
and
popf
add
orl
out
jle
dec
cwtl
pop
and
std
mov
repnz
push
shlb
mov
pop
pop
sbb
in
ljmp
pusha
push
mov
add
lret
loop
and
popf
or
mov
push
cmpsl
int3
sti
loopne
lahf
mov
insl
shl
es
in
ret
jle
lods
aam
sub
rolb
popw
adc
aam
and
jl
sub
jmp
loop
mov
enter
gs
jns
js
dec
ffree
or
cmp
pop
mov
pushf
iret
test
lods
jo
xchg
int
add
imul
lods
sub
out
sbb
stos
mov
mov
lret
sbb
rolb
out
cmovge
lret
and
xor
push
jle
dec
mov
mov
xor
add
adc
push
test
fwait
loopne
mov
aas
or
insl
mov
mov
mov
sbb
inc
xchg
jmp
lods
in
inc
bound
and
bound
fisubl
mov
in
les
inc
rorb
nop
mov
pop
divl
es
shll
xchg
and
jle
stos
sub
cmp
addl
xchg
pop
add
mov
rorl
cld
push
cmc
pusha
jo
test
xor
adc
insb
test
repz
enter
leave
push
push
insb
out
cmpsl
inc
outsl
popf
stos
mov
int
xchg
stos
cmp
and
aad
inc
push
push
ret
fmul
inc
sub
test
push
pop
sbb
scas
adc
and
mov
sbb
xchg
mov
loop
mov
mov
iret
inc
je
loopne
gs
or
rol
cmp
in
pop
hlt
cmp
or
mov
stos
repnz
fidivs
in
xor
lahf
js
sbb
aam
mov
sbb
fdivs
dec
mov
movsb
lods
mov
jle
sub
test
out
mov
sbb
dec
lcall
jno
cmpl
enter
in
mov
add
inc
inc
xlat
pop
push
outsl
adc
stos
clc
stos
lahf
and
andl
pop
lahf
cmp
cmp
shll
and
mov
cmpsb
rcrb
loop
popf
sbb
icebp
popf
dec
add
adc
sbb
test
ss
js
mov
adc
dec
popf
mov
mov
insb
fsubl
rorl
lcall
data16
iret
int
jecxz
push
je
inc
and
outsb
movsb
mov
faddl
mov
mov
and
adc
sahf
jp
loopne
popa
scas
ljmp
popa
fcmove
out
xchg
sub
stos
std
cmp
mov
jns
fs
rcrl
cmpb
outsl
sub
fidivl
sahf
xchg
pop
cmc
pop
mul
into
sahf
data16
or
pop
xor
mov
dec
cs
cli
aas
cmp
jb
sti
or
lods
lea
data16
add
adc
and
imul
dec
mov
cmp
sti
push
addb
dec
xchg
sub
lods
xlat
lods
test
ds
scas
in
repz
xor
and
pop
inc
add
inc
pushf
sub
nop
icebp
faddl
cs
popl
pushf
jmp
ja
mov
sbbl
push
or
and
push
push
cli
jecxz
test
dec
lds
mov
inc
mov
mov
fcmovne
stos
pop
dec
jo
push
and
jl
mov
lcall
dec
push
sbb
outsb
inc
lret
roll
cltd
push
mov
icebp
jg
das
les
or
xchg
xchg
jp
sub
mov
lret
push
adc
enter
pusha
std
xchg
mov
lret
mov
insl
cmpsl
sub
es
mov
pusha
aam
std
dec
sub
rclb
mov
xor
or
fwait
out
sarb
stos
std
lods
cmc
std
mov
ljmp
icebp
clc
mov
sub
out
xor
mov
xor
test
push
sub
int
sub
insb
cmp
push
mov
scas
out
jnp
sbb
cmpsl
inc
sub
fcmovbe
ret
std
mov
sbb
xchg
and
or
push
xchg
dec
mov
push
inc
aaa
or
pop
jns
imull
jae
mov
sbbb
mov
push
or
push
inc
stos
dec
xor
ja
push
ds
mov
jb
mov
fsubl
in
mov
jns
stc
mov
mov
fucomip
fwait
idivl
lret
mov
out
adc
pop
mov
imul
pop
sub
decl
jns
sub
mov
lock
pop
adcb
mov
in
pop
mov
enter
add
insb
lock
sti
stos
push
inc
pop
push
dec
or
popf
shll
stc
jae
push
imul
add
iret
lahf
arpl
push
lahf
lret
push
scas
je
inc
imul
dec
xchg
cmp
add
sub
cs
or
mov
xor
mov
mov
repnz
dec
mov
jg
lds
xor
adc
sahf
pop
fs
fwait
int3
gs
jecxz
mov
jb
jge
bound
sbb
xchg
nop
push
jp,pn
movsb
aaa
out
cmp
pop
mov
mov
pop
dec
jo
nop
movsb
inc
push
test
icebp
les
lret
jno
add
daa
lret
sub
addr16
lcall
inc
aad
pusha
push
cmp
cmp
xor
lahf
inc
rcl
shlb
ds
cmpl
inc
fwait
sub
sbb
movsl
push
popa
and
std
add
pop
sti
outsl
daa
pusha
mov
gs
bound
imul
mov
jne
add
adc
insl
outsb
lods
mov
mov
push
out
adc
lcall
pop
sub
mov
mov
out
rcl
cmp
mov
jle
cli
mov
inc
xchg
jg
push
subb
cltd
sahf
sbb
push
mov
and
testb
lret
push
imul
cmp
orb
push
add
adc
ljmp
loope
loop
adc
stc
insl
cs
and
out
into
orl
and
xor
mov
dec
out
adc
xor
incl
aaa
adc
test
mov
pop
stos
pop
ljmp
outsl
xor
fsts
aaa
in
movsl
fcoms
sub
sahf
fcmovbe
in
xchg
add
je
jno
mov
adc
jne
xor
or
xchg
and
inc
pop
inc
add
in
nop
int3
fimull
ret
cs
fwait
jmp
add
pushf
xchg
rorb
adc
mov
ss
mov
fsubr
popf
sbb
lea
das
lods
push
or
jecxz
test
cmpsl
dec
cmp
daa
jb
les
idivl
aam
movsb
inc
test
adc
pop
jp
pop
xor
inc
mov
xchg
mov
call
in
icebp
fstl
divb
mov
jle
test
test
das
mov
ja
mov
xchg
dec
mov
rcll
xchg
out
aaa
nop
dec
mov
lret
dec
xchg
imul
pop
cmpsl
subb
aam
sbb
shl
cmpsl
pop
push
push
cmpsl
mov
mov
aad
mov
pusha
mov
popa
pop
mov
cmp
out
and
push
ret
mov
or
test
dec
adc
jg
pop
sysret
gs
push
arpl
push
out
fisubs
stos
xchg
dec
mov
int
sbb
xchg
xchg
inc
enter
inc
dec
jae
pop
xchg
push
mov
popa
lds
or
mov
mov
out
xor
push
out
cmc
xor
cmpsl
adc
mov
movsb
inc
inc
jle
dec
push
mov
ja
rorl
mov
rclb
pushl
jns
jb
bound
lahf
out
jp
js
mov
add
repz
and
sahf
dec
jle
lea
jp
adc
sub
je
pop
sub
inc
cmpsb
in
pusha
out
je
repnz
nop
js
xchg
jl
jb
cmp
add
cmpsb
xor
or
mov
jnp
pop
adc
pop
xlat
and
nop
ret
stos
jns
lea
sub
mov
clc
mov
ja
jnp
movsb
inc
cmp
mov
stc
ret
iret
iret
gs
adc
loope
push
out
scas
xlat
into
fsubrs
mov
mov
sbb
mov
push
in
dec
mov
arpl
xor
hlt
rol
xchg
leave
ja
push
bnd
jns
mov
scas
jno
mov
adc
pop
xchg
int3
push
push
jge
dec
test
or
sahf
aaa
faddl
repz
aaa
arpl
fcmovne
push
jge
mov
ret
cmp
stc
pusha
and
xchg
scas
xchg
subb
scas
xchg
xor
mov
dec
js
jnp
mov
push
jno
cmpsl
or
jns
add
enter
in
subl
lret
inc
fs
push
add
inc
xchg
movsb
fistps
insl
mov
and
insl
fnstsw
and
and
push
jns
pop
cmp
ja
mov
and
and
dec
leave
add
add
sbb
aad
cmpsl
mov
push
out
adc
adc
fdivl
sbb
pop
out
lcall
mov
sbb
lods
int
jp
push
jp
frstor
pop
js
xchg
dec
mov
mov
fidivrl
ret
dec
inc
les
shr
sbb
sti
xor
les
int3
decb
ljmp
rsm
mov
adc
pop
sub
out
stos
in
loop
mov
lret
push
xor
cmc
call
mov
sarb
dec
call
cli
movsl
or
out
cmpsl
add
lods
pop
jl
data16
add
sbbl
mov
rcrl
ret
shl
sub
gs
cmpsb
lret
aas
sbb
in
adc
mov
xor
mov
cmp
pusha
sbb
xor
dec
repz
adc
shlb
inc
insl
sbb
scas
call
data16
mov
mov
gs
inc
pop
popf
adc
mov
fcoms
xor
mov
sbb
lea
xor
adc
jp
mov
fdivs
cmpsl
imul
mov
outsl
inc
xor
mov
jg
fldt
dec
rorl
adcl
out
mov
xor
test
shll
in
and
leave
mov
cmp
xchg
mov
xor
lock
insb
sbb
jge
lods
lret
das
mov
icebp
push
inc
lock
leave
enter
es
insl
jne
mov
ret
sub
inc
sub
rcl
mov
fwait
dec
mov
test
rcrl
lret
cmp
popa
mov
outsl
test
xchg
pop
push
ret
clc
sub
les
out
repnz
and
pop
inc
add
ljmp
sti
cs
inc
push
inc
stos
test
pop
dec
fldt
jno
outsl
sbb
dec
test
stos
test
fcmove
and
mov
lods
sahf
pushf
or
pop
repz
repz
pop
in
mov
sbb
xchg
and
or
inc
es
lcall
mov
pop
sbb
xchg
mov
in
xor
mov
jne
faddl
adc
pop
mov
test
dec
imul
mov
or
jp
scas
xor
add
outsl
movsb
icebp
sub
ret
std
xchg
sub
sbb
aaa
lret
jp
fistps
fsubl
push
jle
mov
jnp
lock
jmp
adc
or
push
lret
int3
and
popf
pop
xchg
push
push
fdivl
jae
push
or
ret
je
pop
insb
out
adc
push
subb
jbe
sbb
jmp
xchg
out
cmpsb
fcmove
pop
xor
icebp
jae
push
push
jbe
inc
fcoml
in
arpl
ds
push
mov
leave
out
sbb
repnz
jne
gs
sar
popf
lds
pop
ficomps
insl
pop
ret
int3
cmp
add
inc
fimull
arpl
aaa
fwait
xchg
call
push
mov
push
push
arpl
loop
movsb
dec
imul
and
mov
scas
jno
push
jo
lods
or
outsl
insb
fimull
fstps
jno
outsl
das
cmp
pusha
enter
in
push
insl
sbb
ret
rcrb
test
and
mov
or
stos
ja,pt
gs
xchg
mov
loope
fisttps
test
or
pop
dec
ret
out
cmpsl
xor
addr16
cli
lcall
xlat
sub
xchg
cs
adc
jae
enter
fstp
and
push
popf
lret
jae
pop
test
pop
mov
and
xchg
enter
sbb
push
jge
repz
ljmp
inc
and
jg
rcrl
jne
fistpl
out
sub
mov
xchg
shll
lret
inc
imull
mov
testb
xchg
sahf
fs
sbb
stc
movsl
sbb
leave
xor
xor
shlb
inc
orl
and
jo
xor
aaa
ss
fadds
call
mov
or
inc
jp
add
add
or
xorl
cmp
mov
adcl
jmp
cmp
pop
jecxz
sti
sbb
and
jnp
mov
cmpsb
pop
push
and
jbe
cmp
test
and
dec
sbb
mov
andb
or
adc
aaa
xchg
cs
jb
jmp
jle
pushf
in
mov
adc
test
mov
or
xchg
std
mov
pop
aad
jecxz
mov
cltd
dec
sub
dec
jb
mov
cmpsb
inc
or
inc
mov
jno
lods
loopne
fistpl
fisttpll
pop
subl
adc
cwtl
inc
arpl
std
aas
fwait
dec
divb
testl
mov
stos
lock
je
mov
pop
lock
scas
lret
sahf
outsb
push
cld
dec
push
icebp
in
hlt
mov
enter
mov
insl
pop
gs
xchg
add
mov
dec
mov
popa
fcmovu
rorb
sbb
mov
mov
lcall
movsb
ljmp
jle
ljmp
cld
clc
fs
dec
fstpl
push
dec
dec
cli
mov
xchg
cltd
jb
cmpsl
add
jae
push
sbb
xchg
inc
jno
out
movsb
cmp
stos
je
cs
imul
pop
ror
movaps
xor
movl
inc
inc
mov
test
fnstenv
lock
cld
loop
add
loop
add
xor
cwtl
add
inc
jo
mov
ja
sub
pop
aam
add
sub
mov
daa
xor
jns
dec
dec
bound
out
cmp
aaa
mov
test
adc
out
test
hlt
nop
add
repnz
addr16
jmp
push
fwait
sub
inc
leave
dec
cmpl
xchg
mov
pop
jmp
and
sub
js
sub
scas
in
adc
jle
rolb
jae
xor
loop
sub
inc
stos
pop
fisttpl
push
or
test
xchg
fidivrs
push
pop
jae
fiaddl
dec
add
pop
and
mov
or
pop
iret
mov
sub
push
je
adc
push
clc
lea
mov
xchg
jne,pt
fiaddl
fdivrl
push
jae
or
fbstp
arpl
mov
hlt
imul
in
and
insb
mov
pop
lahf
sbb
cli
bound
std
insb
loop
icebp
incl
add
test
push
sbb
aaa
pop
das
mov
mov
pop
cmp
push
sbb
xor
sub
and
scas
push
push
call
xor
push
outsl
outsl
dec
push
hlt
fwait
jl
movsb
sbb
pop
insb
cmp
pop
adc
enter
in
dec
push
add
sbbb
test
negl
aad
mov
mov
movsl
xor
loope
lcall
sub
jno
loope
data16
les
js
xlat
ds
jo
repz
test
adc
add
inc
aad
push
dec
dec
subb
push
rolb
cmp
adc
push
sub
fmul
ret
mov
hlt
pop
mov
pop
xor
mov
push
adc
and
icebp
mov
inc
xchg
mov
mov
fdivrl
lds
test
rclb
sbb
out
sarl
xor
sub
sbb
mov
push
cmp
lret
adc
sub
stc
pop
sub
jle
test
ret
xor
js
cmc
jbe
dec
into
sub
or
xor
stos
into
out
push
out
mov
mov
sub
mov
mov
imul
sub
or
loopne
mov
jmp
inc
jp
sti
lret
in
out
push
mov
sbb
adc
test
js
sbb
mov
in
pushf
les
fnstcw
mov
inc
xchg
fs
insb
std
and
xchg
inc
pop
cs
push
icebp
jmp
loop
pushf
xchg
jecxz
adc
xchg
or
das
loop
call
outsb
jle
pusha
jmp
add
dec
mov
or
and
xchg
lods
pop
dec
ss
mov
mov
addl
jnp
cmp
movsl
cwtl
add
jb
jp
cltd
rol
mov
cs
cmp
lret
jo
add
loopne
inc
insb
arpl
or
xchg
mov
mov
cmp
xchg
insl
inc
inc
inc
or
ret
dec
outsl
aam
pusha
mov
shlb
push
pop
mov
js
lock
cmp
sub
mov
mov
xchg
xlat
ljmp
push
clc
lahf
adc
adc
push
or
xchg
mov
sub
test
sub
mov
add
mov
jl
pop
pop
mov
mov
mov
sbb
ja
xchg
mov
dec
test
aam
cmpl
xor
dec
fisttpl
lahf
dec
fdivs
inc
aad
lcall
jnp
add
fcoms
fwait
xor
lods
or
push
test
jmp
dec
sub
les
sub
mov
imul
in
mov
jns
mov
bound
je
out
pop
xchg
xlat
mov
lret
pop
jne
aaa
jecxz
pushf
imul
pop
lock
and
and
mov
dec
out
or
or
xchg
pushf
jmp
cmc
inc
mov
xchg
mov
pusha
ja
stc
in
lds
jnp
lock
pushf
pop
and
jecxz
shlb
bound
mov
lahf
popf
insl
mulb
push
pushf
inc
sbb
call
dec
dec
pop
push
sub
ret
add
sbb
in
mov
jl
imul
mov
in
dec
xchg
xchg
mov
and
enter
loopne
and
inc
loop
mov
pop
pop
dec
hlt
mov
ror
fsubrl
mov
xor
andl
arpl
adc
dec
add
jne
aaa
sbb
pop
cmp
xchg
jbe
xchg
xchg
push
push
mov
arpl
cmp
mov
and
cltd
xchg
scas
das
ret
pop
jo
out
xor
xor
shl
jl
cmp
cmp
dec
daa
or
in
ss
cmpsb
lret
inc
adc
test
lret
lahf
mov
stos
loop
cmp
ds
testl
push
imull
pop
stc
and
cmp
movsb
stos
insb
xor
xor
xlat
adc
or
add
aaa
push
dec
push
shl
add
adc
cmp
sub
in
ja
ss
dec
adc
lcall
inc
sub
or
cmp
and
mov
mov
in
cltd
mov
push
mov
aam
jg
int3
cltd
sbbb
sti
sahf
test
lcall
mov
sbb
push
out
lret
inc
imul
pop
inc
fsubrs
cmp
or
jge
fs
pushf
stc
adc
mul
dec
xchg
fsubrl
cmpxchg
mov
out
into
or
inc
cmpb
adc
ds
mov
cmpsb
jne
mov
fwait
shrd
and
or
adc
or
inc
pop
adc
push
jmp
daa
adc
loopne
sahf
dec
gs
mov
icebp
sti
jns
movsl
in
push
sbb
mov
mov
pop
xlat
call
fwait
cmc
sbb
jge
repz
les
pop
scas
jae
jb
aad
cmpsb
fsubs
nop
cmp
xchg
cs
pop
jmp
or
inc
out
adc
aad
idivl
scas
nop
dec
call
aad
in
arpl
jecxz
loope
je
xor
inc
jb
mov
jae
adc
inc
adc
inc
lds
loope
sbb
xchg
mov
dec
scas
cwtl
mov
call
out
adc
and
test
mov
rcrb
das
pop
cmp
lock
sarl
mov
mov
pop
cld
lret
jl
mov
icebp
xchg
inc
mov
cmp
or
into
mov
fdivr
repnz
lret
cld
sub
leave
shlb
iret
sub
mov
mov
cmpl
shlb
aam
ljmp
sar
lret
mov
push
into
fs
jno
cltd
loopne
inc
add
cmc
inc
jae
lock
push
cwtl
stos
push
sbb
shll
sbbb
cmp
xchg
push
dec
dec
sysexit
lcall
popa
add
and
xor
repnz
add
daa
xchg
jnp
ja
arpl
lds
and
inc
sahf
lods
add
ja
test
pop
dec
or
xchg
mov
fnstcw
xchg
lds
mov
sub
adc
mov
imul
xchg
add
dec
jg
out
cmp
mov
jmp
mov
add
pusha
jl
sub
dec
mov
rcll
notl
mov
fbld
js
in
jle
out
jnp
adc
xchg
and
push
stos
inc
sbb
push
mov
hlt
mov
xchg
test
pop
sub
gs
mov
iret
jp
inc
adc
adc
scas
arpl
imul
mov
xchg
in
icebp
inc
inc
testl
cmp
or
in
sub
cmc
mov
pushl
push
jmp
repnz
mov
dec
insl
xchg
or
fiadds
xlat
pop
dec
clc
insb
int3
cld
movsb
test
movsb
cli
testl
fsubr
lds
sbb
jle
popa
or
fildll
push
mov
and
mov
in
sbb
or
arpl
sbb
dec
xor
jmp
xor
mov
loopne
lret
jle
and
sbb
ret
inc
inc
mov
and
test
popf
imul
cmp
ret
movsl
inc
push
mov
loopne
clc
cmp
dec
mov
loope
loopne
push
fisttps
pop
cmp
mov
js
std
pop
mov
mov
xor
loop
add
aam
sbb
adc
sub
mov
dec
push
outsb
pushf
or
dec
push
fsubl
xor
pop
lcall
fisubrs
push
sub
inc
pop
jmp
and
pop
mov
in
iret
mov
insb
pop
mov
jnp
jg
fdivs
test
push
jbe
dec
aaa
and
jnp
xchg
cmp
lret
mov
cmpsl
fldlg2
fsubs
pushf
fidivrl
push
pop
xor
in
mov
fs
push
xor
loop
mov
outsl
subw
setae
lock
jo
push
pusha
int3
jge
push
test
cli
jno
mov
mov
inc
or
test
pusha
add
dec
fsts
xor
push
jecxz
pop
inc
fcompl
fists
loope
mov
in
mov
rorl
daa
fwait
or
daa
push
xor
sub
iret
repz
loopne
les
stos
fldcw
adcb
adc
adc
mov
jmp
negb
in
mov
pop
pop
inc
mov
in
call
cmp
push
insw
jecxz,pt
pop
pcmpeqb
push
in
adc
and
lea
pop
xchg
mov
lea
adc
xor
cmp
xor
div
add
dec
and
pop
mov
arpl
scas
das
mov
lock
xor
or
lret
jmp
pop
cld
lret
icebp
push
xchg
mov
lds
insl
adc
dec
ret
addr16
or
push
mov
sub
mov
push
pop
fcomps
out
mov
mov
mov
mov
cmp
xor
int3
xchg
push
mov
adc
fs
mov
inc
add
cltd
pop
arpl
fsubrp
xchg
loop
lds
xlat
cli
xchg
pop
nop
hlt
out
int
jg
inc
clc
repz
clc
adc
sbb
je
insl
cld
jecxz
inc
test
dec
jbe
xchg
xchg
stos
in
fmuls
or
and
fnstcw
add
loope
into
xchg
mov
fwait
xchg
pop
ds
push
repz
xor
popa
imul
adc
testb
push
fdivl
adc
and
jns
imul
out
aad
dec
mov
dec
or
mov
bound
icebp
mov
sub
mov
jno
jp
and
addr16
in
in
sub
iret
jecxz
subl
add
fwait
adcl
lods
cli
add
push
mov
jnp
cmp
les
jo
stos
mov
test
popf
mov
jg
jae
jo
jo
call
ret
cs
fldcw
movsb
push
dec
sbb
scas
or
sbb
cli
jae
inc
dec
ficompl
sub
std
or
call
clts
hlt
dec
mov
leave
lret
repnz
fwait
jp
push
inc
insl
fsubp
mov
pop
jle
xchg
int3
out
pop
add
sub
aaa
xchg
adc
jge
jns
jbe
scas
adc
in
movsb
jns
sbb
je
mov
scas
in
lods
xor
outsl
pop
xor
sti
das
mov
mov
jno
sti
pop
cmp
add
lds
cwtl
enter
in
add
inc
cmpsb
rol
add
mov
push
cld
or
push
jo
push
lahf
std
filds
and
movsl
dec
test
sbb
mov
sub
cmp
xchg
sarl
pop
ja
sbb
pop
in
jmp
repnz
xorb
xor
add
sbb
and
add
xchg
shl
adc
inc
jae
cmp
push
fmul
sub
push
stc
call
pop
pop
lods
pop
or
int
mov
push
mov
movsb
mov
aas
in
dec
mov
dec
jg
call
sub
out
stos
and
stos
loope
mov
jge
xorb
mull
adc
loop
jns
push
or
adc
jmp
jl
xlat
stc
cmpl
movsl
xor
ss
lret
fwait
movsl
into
shl
mov
cmp
cmp
xor
movsb
frstor
out
cmp
add
ficomps
adc
mov
jae
fcoml
mov
imul
jl
lods
add
gs
add
stos
mull
daa
mov
mov
jb
lret
xchg
stos
cmp
dec
sbb
add
repz
aas
int3
les
add
loopne
call
dec
mov
jecxz
out
jno
aad
lret
movsb
push
jmp
cmpsb
scas
pushf
cwtl
push
adc
lods
dec
pop
repz
lods
jns
call
mov
fnsave
je
mov
dec
push
push
xchg
and
aas
mov
scas
inc
jbe
faddl
mov
cmp
je
adc
scas
mov
mov
adc
mov
xchg
cmp
fcmovnb
cmp
inc
cmp
shrl
cld
pop
mov
imulb
inc
lock
mov
sahf
jo
in
sbb
cld
cmc
or
icebp
inc
cmc
jo
adc
cmpsl
ja
pusha
insl
clc
sub
ret
idivb
movsb
aam
pushf
push
sub
lods
lods
pop
or
xor
xchg
stos
push
mov
loop
sbb
mov
xchg
xchg
and
add
mov
mov
test
mov
icebp
adc
inc
shrl
pop
bound
stos
xor
imul
jne
sbb
xchg
mov
xchg
xor
push
aaa
imul
mov
leave
js
fiadds
pop
mov
das
push
roll
rcl
or
fadd
inc
int3
fwait
pushf
dec
add
xor
pop
rcrb
mov
xor
xchg
xchg
arpl
shl
inc
jmp
jns
mov
ss
mov
cld
mov
cmpsl
push
jne
inc
mov
mov
add
mov
in
jp
inc
mull
bound
sub
push
jg
cmpl
mov
pop
mov
outsb
clc
dec
fcomip
jne
pusha
dec
xchg
shl
insl
xor
mov
lods
pop
insb
fnstsw
pop
stos
sub
xor
loop
push
push
in
icebp
jae
dec
mov
jnp
xchg
pop
cld
dec
xchg
ret
iret
cmp
sbb
pop
mov
push
nop
xchg
imul
sbb
paddd
dec
cmp
inc
insb
cmpsb
leave
push
push
pushf
adc
pusha
and
insl
aaa
hlt
xchg
inc
daa
leave
inc
push
std
bnd
lret
outsb
jl
orl
fimuls
add
int3
rolb
add
jnp
or
les
sbb
lret
sub
addr16
push
push
push
test
cmp
shlb
scas
int3
daa
bnd
shll
push
fiadds
fwait
dec
adc
ljmp
js
cmp
fsub
enter
in
jmp
fsubl
mov
inc
movsb
test
inc
xchg
lahf
sbb
jge
jb
sbb
es
pusha
cmp
inc
xchg
sub
iret
arpl
lods
ljmp
mov
imul
pop
or
push
mov
mov
imul
lret
sbb
sub
cli
pop
jmp
jo
repnz
mov
add
mov
sub
xchg
inc
fdivrl
out
push
or
fldcw
ret
test
mov
and
shlb
test
jmp
enter
ljmp
sahf
xchg
adc
sbb
clc
aad
lods
scas
rcll
cmpsl
lret
push
mull
loope
cmp
push
inc
adc
enter
loopne
loop
xchg
int
and
lea
jbe
aad
xchg
mov
or
gs
adcb
xlat
push
adc
mov
dec
test
xchg
pop
jmp
adc
addb
pop
sbb
loopne
les
dec
pop
addr16
xchg
mov
in
push
xlat
movsl
or
cmp
dec
repnz
pop
dec
repz
subb
pop
adc
fildll
call
sti
mov
fistl
jmp
sbb
pushf
inc
ljmp
cmpsb
push
sub
lea
pusha
rol
rcll
mov
outsb
lcall
aas
scas
aas
push
jns
inc
xchg
mov
pushf
pop
fistl
fildl
dec
enter
popf
shlb
mov
mov
in
repz
std
orb
sar
cmp
and
mov
mov
mov
lret
fs
mov
out
lret
leave
add
cld
and
fstpt
ret
dec
pop
dec
jb
ret
xchg
xchg
es
enter
add
xor
iret
shrb
js
pop
pop
dec
and
mov
cld
mov
dec
leave
mov
ljmp
clc
mov
fstpl
subl
pop
out
push
mov
addr16
arpl
cltd
test
cmpsb
push
pop
mov
xchg
movsl
cwtl
into
out
xchg
or
stos
pop
lcall
test
sbb
scas
dec
test
pop
mov
lahf
loope
les
mov
outsb
lcall
ds
pop
cmpsl
fwait
add
repnz
fs
fwait
lock
adc
jbe
inc
arpl
sbb
clc
sub
ja
aas
and
iret
dec
mov
ja
push
mov
and
stc
jl
adc
int
dec
lret
xchg
jbe
mov
sbb
jne
push
dec
sub
mov
mov
outsb
jge
jp
push
pusha
addr16
sbb
push
mov
sub
aad
pop
orl
xchg
jg
jmp
inc
inc
leave
fists
int3
push
pusha
jecxz
insl
in
jno
jle
lods
pop
jnp
push
sbb
inc
and
inc
sbb
jp
mov
or
push
jae
seto
bound
stc
call
iret
xchg
out
adc
dec
mov
xlat
push
std
scas
mov
imul
pop
sbb
stc
cld
xchg
icebp
mov
sub
mov
inc
or
out
incb
inc
hlt
loopne
sub
mov
and
inc
loope
sahf
mov
pop
fisubrs
xor
sub
int3
mov
repnz
or
out
sbb
xchg
add
push
cmpsb
jl
movsb
rcl
cmp
push
push
and
aad
stos
cmpsb
adc
dec
es
ror
dec
xor
dec
jno
sbb
cmp
push
mov
ret
and
xor
sar
cmc
cmpsb
sub
inc
dec
cs
xchg
mov
scas
dec
popa
push
push
arpl
lahf
cmp
lcall
jns
ds
cmp
cmp
jmp
sub
push
int
pop
cmc
jge
js
xchg
xor
sbb
js
pushl
cmp
popa
sbb
jge
orb
rcl
dec
lock
lds
cmpsb
fsubl
xchg
iret
push
cmpsl
dec
sti
lcall
lock
fxch
ja
in
xor
addr16
ss
addr16
addb
rcrl
or
lcall
or
jmp
in
jp
pop
loop
cmp
sbb
andb
stc
out
es
xchg
dec
mov
add
push
xor
sbb
into
cltd
jns
or
fwait
cmc
xor
push
push
cli
or
mov
stos
cmpsl
lods
lods
and
add
cmpsl
xchg
imul
mov
loopne
clc
int3
gs
lret
icebp
mov
sub
fwait
xor
pop
jb
xlat
in
mov
fdiv
mov
popf
stc
push
xchg
mov
and
mov
ret
rcr
dec
or
repnz
dec
inc
ja
nop
movsb
cltd
sub
cli
bound
jmp
push
out
out
cmp
dec
pop
pop
dec
lret
jb
call
jno
lcall
pop
insl
je
jle
dec
hlt
je
jb
mov
aas
out
shl
inc
lods
jbe
inc
loope
or
cs
jae
jns
mov
mov
mov
imul
hlt
out
dec
cwtl
cmpsl
cltd
and
sub
out
leave
xchg
and
and
ret
jge
cmp
shld
fwait
daa
add
dec
lret
mov
push
dec
mov
aad
cld
dec
roll
icebp
out
ss
mov
ret
dec
insl
jae
insl
loop
es
cs
adc
and
ja
push
sub
sub
pop
dec
ja
mov
fimull
bound
roll
sbb
popa
iret
xor
xchg
adc
sar
mov
fldl
and
add
test
loop
mov
add
ud0
push
cmp
xchg
in
xor
out
imulb
leave
pop
stc
mov
rcl
incl
sbb
adc
ljmp
dec
stos
mov
xchg
sbb
es
in
xor
lcall
xchg
lahf
pop
add
pop
sti
mov
push
in
inc
cli
sbb
dec
jmp
lret
ja
iret
movsl
pop
sbb
mov
mov
cld
push
in
pop
cmp
inc
sahf
and
jb
add
cmp
pop
lods
mov
mov
imul
sahf
sbb
mov
mov
and
adc
pop
adc
sbb
add
pusha
mov
adc
mov
pusha
jle
and
push
test
jnp
push
push
and
push
mov
mov
jl
xor
test
repz
inc
xchg
movsb
or
inc
ret
push
cmp
adc
lock
push
push
mov
out
add
sbb
mov
xchg
dec
fwait
sub
mov
rolb
pop
push
and
adc
arpl
icebp
hlt
sub
leave
das
push
dec
repnz
mov
mov
mov
mov
fmulp
xchg
sub
sbb
test
mov
add
movsl
aaa
aam
and
add
sbb
jbe
xor
pop
movsb
sbb
cmp
cltd
pop
push
and
inc
outsb
scas
mov
xorl
shlb
movsb
test
dec
lock
pop
jl
mov
cmp
or
daa
ret
enter
in
mov
lea
push
pop
mov
mov
lahf
pop
and
jnp
pop
notl
ds
dec
add
cltd
push
fisubrl
jne
loope
test
push
test
pop
xor
cmpb
stc
pop
pop
lock
cmp
or
pop
mov
add
in
sbb
mov
cs
mov
adc
sub
pop
fmul
pop
mov
mov
sub
sub
test
repnz
int
jne
push
xchg
lahf
or
jbe
cmp
jbe
mov
sbb
jg
das
xchg
es
sahf
fadd
inc
sbb
jae
mov
icebp
leave
lret
xchg
mull
ja
cmp
pop
pusha
or
sub
jae
sbb
adc
loop
inc
sub
loop
out
sub
jo
and
push
or
cmpb
xorb
in
cli
cmp
mov
leave
mov
jge
lcall
adc
and
imul
pop
ret
loopne
inc
aas
gs
dec
adc
lods
sti
in
scas
in
push
mov
sub
push
or
and
sbb
dec
rcrb
pop
cmpsb
flds
sub
dec
cmpsb
fwait
scas
nop
jg
aad
enter
mov
jmp
dec
lods
pushf
cltd
gs
adc
sbb
sub
mov
jb
inc
jecxz
loope
je
loop
dec
imul
jb
adc
inc
movl
pop
and
dec
sahf
cltd
outsb
or
es
mov
loope
cwtl
adc
sarb
rcrl
and
movsl
popf
mov
scas
int
das
jp
aad
and
insb
mov
out
mov
imul
icebp
or
imul
lods
adc
cmp
mov
int
sub
and
mov
mov
loope
push
mov
jo
test
and
pop
test
xchg
push
add
xchg
lea
out
pushf
or
jns
aas
cltd
rep
add
divps
sub
pop
aas
pop
stos
std
adc
pop
movsb
nop
mov
sub
sbb
mov
xchg
jno
das
out
dec
adc
xchg
jbe
xor
cmp
xor
fimuls
add
stos
lds
dec
mov
inc
xchg
nop
mov
fmulp
mov
add
imul
push
xchg
mov
sub
popa
popf
in
adc
addb
push
jle
mov
aaa
dec
jne
fcompl
dec
push
mov
hlt
mov
sbb
std
jp
fstps
and
data16
and
fisttpl
and
addr16
loopne
adc
aas
adc
push
test
pusha
sbb
mov
jle
dec
hlt
jnp
dec
xor
and
or
stos
test
mov
push
cmpsl
imul
ret
inc
pushf
in
pop
mov
sbb
push
das
call
in
stos
xchg
push
and
xchg
shrl
cmc
mov
xchg
lahf
lahf
jp
gs
aas
inc
jmp
push
sub
hlt
xchg
mov
pop
pop
hlt
jbe
and
cmpsb
les
repnz
xchg
rcl
cli
lds
push
pop
cmp
or
add
data16
xchg
int3
mov
shlb
jbe
dec
out
inc
and
cmp
mov
jns
test
shlb
xor
xchg
push
dec
pop
sbb
mov
cmp
daa
rorl
gs
in
mov
popa
inc
inc
imul
push
sub
mov
mov
inc
jne
loopne
movsw
fldcw
cmp
fsubrl
xchg
loope
pop
add
lock
pop
jae
daa
js
out
push
subl
or
jp
sbb
stc
lods
rolb
pop
call
mov
cmc
mov
fdivrl
rcll
hlt
lcall
jno
insl
push
jmp
inc
aaa
rolb
xchg
cmpb
test
mov
pop
mov
mov
movsl
dec
incl
lods
adc
data16
push
mov
out
fdivr
jae
push
rorb
into
lahf
jp
out
mov
ss
xchg
dec
adc
mov
stc
pop
mov
jno
roll
xor
mov
into
pop
fnstsw
cmp
dec
loop
mov
push
cli
jo
or
mov
sub
jp
pop
sbb
add
out
std
imul
out
xor
adc
loopne
popf
mov
xchg
daa
aaa
dec
nop
sti
xchg
push
in
rcl
dec
mov
outsl
xchg
xlat
bound
rcrb
and
repz
les
in
in
sbb
leave
dec
add
adc
aad
xchg
cs
out
push
push
ja
inc
popa
pushf
adc
inc
pop
mov
jnp
call
aas
arpl
jne
je
call
fwait
jge
loop
cli
jb
leave
cmpsb
aas
sub
and
inc
out
push
sub
les
sub
flds
hlt
xchg
push
mov
pop
insb
cwtl
sbb
xor
testb
shr
mov
mov
stos
lods
loopne
inc
rcrb
jge
inc
mov
sbb
ret
mov
or
mov
rolb
dec
arpl
mov
ret
xor
in
aam
xor
sbb
xchg
pop
mov
cmp
and
adc
mov
punpcklwd
ss
ljmp
sbb
cmp
lret
pop
enter
inc
mov
sbb
test
sub
mov
push
icebp
test
xchg
jp
hlt
out
mov
les
roll
adcb
call
daa
repnz
jns
int3
xchg
adc
loopne
dec
xor
jg
add
sarl
push
dec
test
jge
push
or
cmp
sub
mov
shll
pop
lods
imul
inc
rclb
xchg
xchg
lahf
or
in
sbb
inc
bound
insl
push
out
xor
and
lret
sub
dec
shrl
mov
mov
dec
mov
mov
and
or
inc
enter
cmp
call
xchg
loopne
iret
jmp
mov
out
pusha
mov
shl
mov
jnp
or
mov
xchg
add
test
jle
in
icebp
cld
push
jae
clc
inc
inc
cmpsl
jp
pop
fmul
ret
pop
add
mov
repz
jnp
push
lods
sbb
mov
push
imul
mov
scas
xchg
xchg
test
ficompl
fadds
mov
push
repz
out
inc
notl
popa
hlt
rcl
leave
sbb
clc
int3
mov
out
mov
lds
aas
ficoms
inc
aam
jle
or
cs
aaa
push
test
jnp
cmp
ja
jno
ret
pop
pushf
movsb
xor
cmp
xchg
and
sbb
sub
in
sbb
test
push
hlt
jl
jbe
jno
shl
cmp
mov
enter
in
xchg
cmpsb
pop
stos
adc
cli
fnsave
repz
xor
jnp
xchg
movsl
imul
ds
bound
imull
sub
insb
insb
loope
scas
mov
pop
mov
ja
ss
test
call
shll
add
negl
dec
data16
in
movsb
mov
fidivs
sbb
sub
inc
lahf
fsubl
sub
negl
lcall
movsl
sub
pop
dec
int
fdivrl
cwtl
flds
mov
int3
pusha
mov
movsl
pop
jg
jb
adcb
test
aam
xchg
std
popf
mov
pop
shll
lret
div
and
sbb
pop
dec
cmp
loop
or
js
xor
jns
push
shrb
loop
and
scas
aaa
lret
std
rorb
or
cmp
xor
push
cli
mov
mov
mov
jnp
data16
out
inc
adc
adc
scas
loopne
push
xlat
lea
pop
sbb
inc
je
in
ds
pop
mov
mov
jne
mov
ret
adc
xchg
shl
cmp
les
adc
sub
adc
iret
mov
data16
xchg
aaa
pushf
out
xor
adc
xor
daa
mov
out
lea
idivl
sub
inc
add
mov
aas
int3
repz
std
adc
inc
jbe
ret
pop
xor
add
dec
je
stos
cmp
mov
mov
push
mov
fadds
enter
in
notb
push
andb
insl
mov
aad
test
lock
mov
mov
mov
fxch
test
iret
cld
int3
mov
icebp
je
sarl
mov
inc
imull
daa
aas
es
loop
rcll
sub
clc
scas
sar
jge
pop
test
or
out
lock
into
ljmp
adc
sbb
in
ret
rcl
cmp
ja
movsl
fnstsw
std
and
cltd
lret
cltd
popa
sub
add
stos
nop
push
push
int3
in
xchg
rcrl
pop
inc
dec
stos
fstpt
pop
cli
lds
rcl
fldl
sbb
mov
addr16
aad
and
movsb
sub
cltd
push
push
mov
lcall
xor
out
call
or
push
lock
or
and
pop
dec
les
ja
xchg
insl
pop
addr16
mov
xorl
out
idiv
in
jnp
jns
jmp
lret
out
setbe
jne
fisttpll
mov
cmpb
repz
imul
pop
cmpsb
jmp
sub
loope
addw
mov
sub
mov
fisttps
scas
jb
nop
pop
mov
jnp
lea
insb
hlt
dec
icebp
and
jmp
stos
push
sub
xchg
enter
mov
push
mov
mov
inc
mov
out
pop
clts
lret
fcomps
mov
mov
jp
scas
sbb
ficomps
adc
fcmove
hlt
mov
push
pop
push
daa
inc
cli
decb
jg
cmc
hlt
or
mov
repnz
mov
or
sbb
or
cwtl
jnp
int3
imul
das
or
lods
pop
aaa
adc
inc
sbb
imul
mov
inc
push
loop
shlb
and
lret
xchg
lods
xor
dec
insl
push
dec
cmp
stos
jno
add
cmp
orl
outsb
pop
push
cmpsb
loop
test
mov
movsb
push
mov
mov
push
fimull
and
js
movsl
jb
dec
ds
adc
cmpsb
sbb
sub
es
loope
jp
push
jecxz
pop
icebp
sbb
adc
int
test
mov
add
mov
mov
dec
push
dec
sarb
loop
outsb
push
cmp
fmul
push
jbe
add
std
lcall
adc
arpl
ror
adc
push
fwait
movsb
popf
and
pop
sbb
test
out
xorb
test
imul
call
inc
rorl
sub
cmp
xchg
sbb
inc
lods
sahf
cmp
and
mov
stc
lret
test
pop
outsl
jg
aad
cmp
sbb
into
and
dec
stos
cmp
dec
ljmp
inc
jl
sahf
cmc
imul
popa
lds
sarb
adc
xchg
imul
sub
jne
sbb
pop
gs
lret
cwtl
jge
sti
icebp
push
in
test
fisubl
and
out
loopne
add
les
push
xchg
xchg
ds
adc
sub
inc
ds
into
dec
ret
and
nop
adc
mov
push
push
nop
cs
jmp
fcmovu
pushf
lcall
pop
and
xchg
loop
popa
mov
jnp
add
push
adc
je
pop
decb
shrb
jb
aam
aas
imul
sbb
pop
or
ljmp
gs
mov
mov
mov
rcll
xchg
clc
in
std
lds
or
mov
jge
sbb
lods
mov
pop
push
outsl
lock
mov
mov
mov
xor
lret
hlt
mov
push
icebp
dec
push
mov
mov
push
lahf
insl
bound
cmp
movsb
push
jmp
push
outsl
xchg
mov
fidivrl
pop
movl
out
and
iretw
sti
mov
fs
popa
sub
cmp
pusha
jo
xchg
adc
arpl
loop
mov
mov
jmp
test
pop
xchg
add
cmp
jnp
mov
xchg
or
stos
lret
pop
movsl
push
inc
shrl
lds
xor
test
data16
inc
and
xchg
cmp
out
xor
adc
pushl
iret
test
call
add
xchg
loop
mov
leave
sub
mov
jb
inc
lea
or
sbb
cmp
jae,pn
cmpsl
adc
out
out
daa
fidivl
pop
hlt
xchg
dec
xchg
xchg
jno
mov
adc
nop
pop
jp
ret
push
cmpsb
testl
mov
test
adcl
xchg
jbe
mov
and
inc
xchg
pusha
ffree
fildll
mov
cmp
pop
movsl
jnp
shl
insb
pop
in
and
adc
push
and
mov
int3
add
imul
incl
rcrl
jecxz
ret
mov
adc
adc
ds
jnp
sbb
cmpsb
daa
xchg
sbb
cmc
fists
jle
adc
dec
jl
pop
or
sar
inc
std
loopne
arpl
xchg
dec
leave
or
repnz
or
and
pop
cmpsb
ficomps
cvtdq2ps
jns
int3
push
or
add
or
pop
ret
andb
cltd
outsl
test
testl
movsb
inc
xor
cmp
mov
xor
xchg
scas
push
pop
cmp
xor
xor
add
sbb
jl
mov
jno
pop
iret
cmp
in
daa
mov
cmp
cmpsb
gs
xor
xchg
insl
push
mov
cmp
mov
and
xlat
sub
cmp
mov
loope
imul
xor
js
leave
sahf
pop
divb
inc
add
xor
pop
add
xor
rolb
stos
pop
fcmovbe
xchg
cwtl
or
mov
mov
ret
fdivrl
push
push
pop
movb
or
lods
pop
fisubs
int
rcrl
sahf
jecxz
and
mov
mov
std
fwait
jg
lds
and
sbb
repz
push
mov
xor
mov
cmc
negl
xchg
and
push
fildl
fs
pop
or
andb
jbe
fsubrs
mov
xor
gs
into
or
scas
or
jg
cmp
test
xor
repnz
out
mov
mov
sub
data16
frstor
add
adc
push
subl
lcall
mov
repz
mov
mov
pushl
adc
lock
xchg
mov
xlat
pop
mov
push
sbb
pop
sti
mov
xchg
dec
mov
ret
fldenv
mov
adc
and
nop
jmp
add
pop
inc
iret
cs
out
pushf
inc
dec
mov
pop
fmuls
and
outsb
lea
jle
mov
je
mov
out
mov
inc
aas
or
stos
inc
xor
push
inc
test
fistpl
or
dec
andl
sbb
scas
aam
cwtl
dec
xorb
insb
ficompl
sbb
rcr
lcall
shrb
das
mul
lret
lock
mov
pop
adc
arpl
cld
and
fdivp
and
cmpl
fs
dec
push
add
insl
dec
leave
sbb
daa
cmp
ret
fisttps
and
pop
dec
rcrb
mov
mov
std
jecxz
mov
sub
sti
lods
iret
sub
ljmp
pop
clc
in
pop
mov
or
sbb
test
cmp
test
xor
add
xchg
pminub
push
sbb
xchg
dec
adc
stos
mov
dec
insl
roll
mov
imull
scas
jg
xchg
andb
push
or
insb
xor
jl
add
mov
out
push
ss
fwait
or
and
into
sti
ja
pop
stos
pop
fnstsw
jl
ss
mov
push
xor
push
shl
out
int
xchg
and
dec
jp
cmp
int
inc
mov
add
and
sub
or
cmp
sub
out
dec
andl
imul
sbb
jg
xor
int
mov
in
sub
jnp
fcompl
lret
and
pop
sbb
mov
add
popf
repz
mov
cmp
inc
inc
enter
jge
push
ret
sti
iret
shl
out
pop
arpl
push
andl
imul
or
xor
push
inc
in
add
lock
add
leave
arpl
jne
leave
cmp
repnz
and
inc
imul
movl
push
int3
aas
adc
add
lods
add
mov
add
lods
jle
jge
sub
sub
push
andb
cmp
lds
subb
mov
xor
adc
dec
sbb
push
jno
rcr
cmp
sbb
ror
push
scas
cmp
cmp
popa
cmpsb
call
pop
ret
pop
pusha
test
or
stc
lahf
cmc
call
mov
ds
pop
cmp
lock
adc
sbb
cmpsb
adc
outsl
cmpl
or
roll
sbb
sbb
test
shrb
sbb
pop
add
sub
mov
push
mov
xchg
lcall
dec
sub
adc
loope
jl
mov
xor
mov
sub
movsb
jg
cmc
sbb
leave
mov
sahf
pop
mov
loopne
sbb
dec
lret
call
fdivrs
push
shlb
jecxz
adc
mov
cmp
loop
add
stos
xor
mov
inc
into
jmp
pop
or
bound
xchg
lea
in
xchg
cli
cmp
lcall
sbb
sub
add
insb
jns
cmpsl
outsb
add
clc
lock
mov
dec
mov
loopne
sti
dec
imul
jg
mov
or
xor
pop
rcll
sbb
sbb
repz
dec
int
test
cwtl
bound
dec
orl
mov
nop
pop
jmp
mov
pushf
lock
mov
cmpsl
lock
pop
mov
movsb
mov
les
subl
out
mov
scas
iret
aas
test
gs
inc
or
push
int3
dec
fisttpl
push
jb
mov
pop
out
mov
pop
cwtl
or
xlat
negb
mov
and
stc
pop
mov
mov
and
jmp
fsubl
add
das
lret
ror
push
cld
dec
or
icebp
stc
pop
adc
mov
inc
insl
xor
es
cltd
push
ret
outsb
hlt
imul
add
shlb
add
add
mov
mov
cmp
popa
pop
repz
ljmp
mov
sub
fnsave
sti
xor
or
mov
enter
dec
jp
push
mov
add
sbb
push
pop
jns
xchg
xchg
add
out
dec
insb
fsubrl
sti
dec
sub
fdivr
int
cwtl
imul
pop
daa
test
cmc
lcall
cmp
mov
jnp
mov
mov
or
jo
iret
add
cmp
push
flds
enter
xor
fcomi
inc
test
cmc
dec
popf
sbb
ja
add
mov
dec
rolb
in
clc
jns
push
frstor
jae
out
lods
push
test
jne
dec
aas
dec
pop
mov
mov
clc
scas
stos
mov
xchg
inc
jp
leave
addr16
pop
or
loopne
sub
push
sbb
or
mov
adc
test
in
xchg
mov
in
sub
aad
jnp
stos
jae
xor
lret
ret
nop
sbb
setg
sbb
dec
push
std
out
ja
int
mov
rcll
and
mov
cmp
in
jle
iret
xor
or
xor
mov
lock
inc
mov
imul
xchg
push
rcrl
in
repnz
fs
xchg
push
lret
inc
add
call
hlt
in
cmpsl
out
leave
stc
mov
jb
js
aaa
rcrb
lds
and
mov
ret
sub
mov
mov
inc
or
nop
sbb
jp
out
xor
jge
imul
cmp
and
fisubrl
xchg
mov
xor
imul
das
dec
mov
mov
jno
outsb
inc
cmp
dec
daa
mov
mov
sub
imul
pusha
xchg
push
pop
cld
dec
test
fistl
mov
movsl
xchg
push
ds
sub
dec
shl
fs
push
xchg
mov
js
jmp
cli
int
push
xor
ljmp
mov
les
jp
rorb
cmpsl
adc
jp
aas
sub
sbb
and
ljmp
push
sub
dec
pop
hlt
push
movsb
mov
push
mov
icebp
pop
mov
in
jge
xor
sub
ret
test
mov
push
inc
repnz
cmp
negl
pop
jns
xor
in
ss
pop
mov
fs
mov
pop
loop
cs
xor
shl
lret
into
into
add
or
xor
xor
jo
out
js
stos
mov
std
push
data16
push
enter
sub
imul
lidtl
mov
loopne
cwtl
adc
lods
mov
out
add
lcall
lret
sub
outsb
xlat
popf
insl
cmp
xor
jne
xor
lods
fmul
or
iret
fldcw
dec
loopne
lods
nop
mov
pop
xor
repz
xchg
pushf
fwait
mov
adc
mov
lock
and
jl
shrb
cmp
movb
je
and
push
fdivl
push
aas
dec
scas
fiaddl
test
inc
xchg
xchg
pop
pop
repz
xchg
mov
lret
ret
adcl
data16
data16
cwtl
les
std
mov
sbb
shll
mov
rorb
and
arpl
inc
std
popa
mov
push
xor
inc
clc
gs
js
outsb
icebp
rorb
lods
mov
mov
adc
insl
pop
sti
dec
es
pushf
rcl
add
and
in
push
test
inc
int
pop
and
sub
or
pop
mov
movsl
xchg
sbb
mov
dec
xchg
int
mov
arpl
int
push
pushf
push
push
das
dec
repz
popf
cmp
rol
add
arpl
sub
fstpl
out
stos
mov
stos
xchg
mov
pop
cmpsb
and
xor
sbb
filds
adc
das
dec
jl
mov
movsl
sbb
mov
hlt
or
mov
sub
pmulhuw
adc
hlt
push
jl
ficompl
jnp
jg
sbb
dec
nop
jl
ja
sub
push
mov
popl
jns
and
cmp
out
jmp
mov
xor
scas
nop
cmp
inc
js
mov
stc
sbb
dec
cltd
jp
add
sbb
sub
ljmp
in
pop
pop
add
push
xchg
xlat
cmp
or
xchg
xor
pusha
or
lods
mov
jle
push
push
jnp
cmp
insb
mov
pop
or
cmp
incb
popf
inc
push
xor
int
inc
fimuls
pop
jmp
cmc
ret
mov
movzwl
push
pavgb
scas
movsb
clc
jnp
jae
ds
push
loop
test
arpl
inc
jecxz
and
jecxz
or
push
aas
xchg
scas
mov
cmp
inc
leave
jo
xchg
repnz
sbb
shlb
vpsubd
inc
push
add
or
int3
adc
mov
or
frstor
and
es
xor
rorb
push
jg
movsb
out
sarl
push
popf
and
test
jo
lret
add
rorb
mov
push
ret
xorb
jae
jbe
push
daa
mov
push
in
or
hlt
cmpsb
out
loopne
inc
lds
pop
test
scas
xchg
in
xor
and
pop
jne
popa
jge
cmp
cmp
push
or
jnp
mov
repz
pop
in
divl
pop
imul
nop
sbb
xor
jecxz
sbb
push
lret
pop
jae
cmp
shlb
stos
data16
fstpl
add
jnp
sub
mov
and
xor
mov
inc
and
push
cmpsl
pop
scas
and
adc
mov
icebp
xor
pop
pusha
add
xlat
fucom
sahf
dec
cmpsb
rcrl
cmpb
shll
lret
movsl
neg
xor
fdivs
mov
lods
xor
push
insl
sub
ljmp
loop
mov
outsl
sti
test
xor
xchg
push
into
mov
pop
or
xor
mov
out
adc
add
das
mov
mov
push
adc
sbb
loopne
insl
std
gs
mov
sti
lods
mov
push
pop
inc
mov
lock
not
fmull
js
aad
xchg
mov
lcall
push
cmc
cld
inc
mov
dec
dec
aas
or
jl
or
xor
cs
pop
in
ljmp
adc
xor
mov
add
dec
add
movb
movsl
je
sarb
jb
pop
xchg
aas
out
ret
inc
test
sbb
aaa
addr16
xchg
dec
addr16
cli
test
or
in
das
sti
mov
hlt
add
popa
mov
and
and
add
mov
mov
add
xchg
mov
shlb
lret
lret
mov
cld
cld
mov
ffree
mov
mov
jnp
insl
imul
mov
or
jecxz
pop
rclb
arpl
inc
rcr
mov
adc
repnz
cmp
inc
lods
adc
or
sub
in
or
or
sahf
inc
cmc
fnstsw
hlt
push
repnz
mov
mov
test
imul
maskmovq
negl
ficoms
push
idivl
stos
xchg
jns
push
leave
xor
mov
dec
sbb
sbb
xchg
pop
jbe
mov
orb
leave
xchg
push
jb
adc
insl
xor
cmp
add
sahf
add
pop
add
fwait
xchg
add
or
and
dec
adcl
pop
push
inc
xchg
shlb
in
inc
ret
jns
sbb
ds
push
adc
jne
inc
dec
and
mov
mov
std
daa
int3
jp
daa
sbb
into
mov
and
ljmp
jle
adcl
xchg
mov
dec
mov
lods
xor
sub
movsl
in
dec
mov
jnp
xchg
insl
insb
or
data16
test
dec
pop
mov
push
and
jae
mul
inc
jmp
shlb
out
stos
mov
ljmp
scas
pop
xor
enter
in
xchg
add
repz
bound
loope
pop
mov
inc
or
shll
mov
hlt
orl
leave
out
push
mov
xchg
sarb
fsubp
addl
add
mov
mov
sub
sbb
jno
jge
add
insl
push
shld
cmp
repnz
xchg
scas
adc
jo
cmc
xor
mov
lret
cmp
cmp
adc
cmp
push
mov
in
icebp
push
sub
push
cmp
mov
test
addl
and
neg
test
out
adc
sbb
xor
xchg
lea
xchg
mov
js
pop
in
pop
xchg
mov
pop
xor
jge
dec
lds
mov
std
hlt
rolb
push
add
outsb
inc
rclb
sub
inc
fsubl
insl
sub
adc
lcall
cmp
lret
int
jno
push
stos
adc
out
jmp
mov
gs
cmc
mov
pop
mov
cmp
and
sahf
lock
jns
scas
cld
mov
fistpl
sbb
std
sbb
iret
negl
in
sarb
je
adc
rcl
pop
ja
loop
sbb
sti
xor
iret
cmc
pop
jo
into
xchg
rorb
fs
imul
out
out
mov
cmp
add
rclb
cld
xchg
arpl
xchg
push
out
pop
mov
push
mov
sub
stc
sti
pop
inc
mov
mov
arpl
sarb
add
sbb
fs
repz
es
out
loop
fnstcw
cmp
dec
sahf
dec
loope
push
stos
aad
add
cs
mov
push
adc
cmc
and
call
adc
xor
mov
add
mov
and
pusha
jb
jl
aas
xchg
aam
mov
stc
pop
fistpl
imul
jl
mov
pop
into
cwtl
cmp
std
or
out
rcll
or
sbb
mov
jb
lock
push
inc
mov
xchg
mov
popf
pop
cld
into
mov
jle
into
mov
mov
jbe
insl
in
push
xor
ret
sbb
and
fcmovu
dec
shr
sub
pop
bound
lret
int3
jae
adc
loop
lods
jnp
inc
popa
sahf
mov
lret
stos
cltd
clc
fsts
jo
movsl
mov
mov
adc
cltd
stos
std
out
add
aas
movsb
orps
push
out
rorl
imul
out
jno
stc
stos
jne
enter
loope
cmp
mov
inc
xchg
jne
pop
and
dec
in
xchg
into
ret
xor
rcll
and
int
int
dec
pop
in
xchg
incl
ret
fwait
and
leave
inc
dec
dec
fwait
dec
jbe
cmp
sti
adc
pop
leave
mov
adc
adc
sbb
jns
jp
bound
inc
out
dec
cmp
jae
cmp
mov
mov
andb
sbb
daa
dec
jp
add
or
inc
cmp
repz
jns
insl
insb
mov
testl
fisttps
cli
pusha
icebp
xor
in
ja
jle
in
jnp
stos
lock
jbe
shlb
in
inc
stos
sbb
outsb
push
mov
dec
dec
popf
inc
call
test
cmp
shl
ret
push
iret
dec
repnz
lds
push
popf
ljmp
push
jne
sbb
cmpsb
dec
xchg
push
rclb
std
sarb
loope
in
push
les
inc
or
add
incl
leave
pop
jo
repnz
mov
lods
sbb
jecxz
out
fimuls
in
data16
jmp
addl
xchg
pop
or
sbb
and
jbe
inc
or
addr16
std
roll
or
push
scas
popa
ja
jo
xor
push
lahf
cli
les
pusha
cmpl
jno
sbb
push
mov
dec
or
fcomps
roll
or
orb
push
push
and
mov
mov
stc
add
cmpsl
aad
cmp
pusha
mov
mov
cmp
test
fwait
ja
imul
ja
jae
mov
insb
aaa
xor
aas
add
sti
arpl
inc
out
insb
or
mov
adc
mov
mov
sub
sarl
xor
pop
mov
loopne
int
push
in
lods
ljmp
cmpl
in
popf
adc
adc
sbb
jg
mov
in
rcll
negl
adc
cmpsb
mov
cmp
mov
fistl
lock
fs
xchg
adc
jecxz
outsl
mov
ss
cmc
pop
lods
data16
ja
cmc
or
std
outsl
cmp
and
cli
or
out
cmp
mov
xor
arpl
adc
sub
dec
adc
call
loopne
push
hlt
gs
mov
sti
or
cmp
sub
jge
cmova
xlat
pop
push
idivl
es
adc
daa
ja
repz
insl
ljmp
test
dec
std
xchg
jge
xor
mov
cs
test
pushf
pushf
push
xchg
adc
repnz
pop
push
fbld
mov
gs
lea
sub
lea
jecxz
sahf
pop
je
sub
jb
aam
aas
and
jmp
rcrb
leave
fisttpl
movsb
dec
loope
mov
mov
push
dec
cwtl
cmc
fidivrs
std
scas
lds
arpl
and
push
pop
mov
fisubl
lock
lcall
nop
popf
fmul
mov
inc
icebp
push
out
xor
jne
mov
mov
add
aas
es
enter
push
aam
push
sbb
sarb
dec
inc
mov
and
fidivrl
out
nop
popa
mov
nop
ljmp
pop
clc
adc
in
xlat
imul
mov
test
aad
cltd
loop
pop
add
fadd
lgs
push
leave
lods
test
mov
xor
stos
fcoml
cmpsl
xchg
loopne
cmp
mov
addb
dec
mov
mov
mov
cmpsl
inc
dec
or
bound
in
sbb
add
jecxz
push
gs
fistps
cmp
jmp
loopne
outsb
dec
imul
sti
pop
test
mov
pop
dec
xchg
xchg
pop
in
in
inc
push
jns
jp
bound
out
mov
pop
enter
sbb
in
xchg
mov
popa
mov
stos
dec
cmpb
jae
sbb
or
cmp
out
and
subl
xchg
cmp
jmp
push
adc
push
mov
inc
jle
inc
pop
jnp
mov
loope
mov
stos
mov
cmpl
or
data16
pop
adc
sbb
nop
xchg
ret
lods
iret
lods
cmp
adc
add
add
aaa
negb
stos
scas
xchg
scas
sbb
inc
pusha
test
or
cmpxchg
hlt
sbb
mov
mov
rorb
lds
sub
sub
adcb
mov
mov
aaa
dec
fcmovnb
sbb
push
jge
and
mov
push
or
pop
movsb
mov
cmp
loope
scas
inc
and
jo
xchg
in
adc
cmpb
jl
inc
push
jno
dec
cmp
ret
mov
movsb
in
mov
or
and
dec
mov
test
daa
cmp
jb
push
in
movsl
mov
outsl
xor
outsl
outsl
hlt
sub
push
loop
dec
pop
inc
pop
stos
xchg
js
sbb
pop
loopne
inc
flds
xor
test
sbb
cmpsl
sbb
cli
in
ret
sub
outsb
push
and
fdivrl
push
fs
mov
and
sub
mov
in
sub
mov
les
or
out
mov
push
les
leave
out
jg
pop
test
insb
or
sahf
ss
pop
sbb
test
shrl
adc
loop
stos
negl
xchg
mov
popa
adc
ss
mov
jl
mov
xor
int3
js
loop
fsubrl
xor
dec
in
pop
dec
mov
or
cmp
pop
test
pop
stos
adc
cmp
call
mov
lcall
mov
out
sahf
out
fsubrl
fdivs
cmp
into
pop
clc
test
popa
lds
jb
mov
push
fsubl
dec
das
inc
xlat
cltd
push
cmp
jne
dec
daa
jge
ljmp
les
adc
add
add
aad
cmp
jg,pn
pop
jmp
inc
dec
pushf
inc
jle
adc
cmpsb
pop
or
pop
stos
movsb
call
fiadds
jecxz
into
mov
dec
adc
movsb
aas
les
and
insl
mov
jg
lods
fstpt
push
dec
int3
es
xorl
mov
xchg
std
push
cmp
imulb
mov
and
addb
sbb
or
xor
out
mov
xchg
in
mov
dec
lret
std
push
cmp
and
scas
icebp
sub
imul
ss
insl
mov
mov
cmp
pop
ret
cmp
mov
xor
sub
idivl
pop
mov
repnz
sub
inc
add
lods
push
pop
lahf
popa
int3
dec
movsb
ljmp
cmp
or
push
cmp
int3
mov
cltd
popf
test
or
cltd
sbb
rorb
adc
notb
stos
pop
xchg
stc
fwait
jmp
aaa
insl
subl
mov
lods
sbb
jecxz
xchg
shrl
sbb
xchg
cli
xor
add
setne
xor
sub
mov
and
mov
or
push
or
fwait
and
mov
inc
mov
dec
pop
add
ja
add
pop
aas
js
mov
fwait
leave
push
xchg
data16
in
inc
mov
bound
dec
push
out
pop
xchg
adc
lret
dec
int3
cmpsl
jnp
iret
or
adcb
addr16
push
adc
adc
loope
out
mov
cwtl
xchg
add
jecxz
in
cli
xchg
and
or
xor
enter
test
mov
dec
aas
sub
mov
cmp
push
cmp
dec
popf
fnstsw
jo
fmuls
inc
or
fildll
dec
stc
or
mov
push
sub
clc
imul
jns
popf
test
xchg
add
adc
fbstp
clc
or
adc
lock
fs
sub
cmpsl
js
mov
loop
cmp
icebp
cwtl
in
ds
adc
jl
shll
or
cmpsb
aaa
or
xor
push
cltd
in
sub
fwait
jbe
or
movsb
adc
add
aaa
inc
mov
pop
in
popf
xor
gs
dec
mov
ret
jl
sbb
jno
fwait
mov
daa
mov
dec
enter
in
cmpsb
rol
cmpsb
cli
lcall
push
cmp
test
cli
mov
scas
push
cmp
out
inc
xlat
movsl
stos
sub
ds
std
sbb
push
inc
shrb
roll
loop
push
into
push
pop
jmp
pop
mov
pushf
popl
add
arpl
mov
adc
inc
pop
inc
rclb
mov
outsb
imul
xchg
fsubl
popf
jmp
mov
int3
push
pop
lahf
call
ror
dec
sar
mov
js
sbb
mov
pop
inc
xor
sbb
imul
xor
test
fbld
sahf
fldenv
out
sbb
pusha
mov
cmp
neg
adc
cmp
cmp
xchg
fs
mov
or
jnp
lahf
outsl
ja
jp
adc
push
lock
cmp
push
lds
add
cli
outsb
jp
out
jne
mov
mov
adc
inc
jbe
adc
add
pop
adc
inc
rcrb
mov
loopne
xchg
xchg
push
pop
sti
imul
imul
loop
fsubrs
cmp
xchg
aas
popa
sub
leave
repz
mov
push
call
ljmp
cmpsb
test
outsl
adc
sar
sahf
cwtl
push
call
inc
cmpsl
mov
xchg
xchg
pop
jecxz
inc
mov
dec
mov
jb
push
out
aas
arpl
mov
lock
inc
xor
mov
mov
mov
ret
cmp
mov
test
imul
std
xchg
mov
roll
dec
cmp
jnp
rcll
andl
push
lock
mov
mov
mov
movsl
lret
insb
push
ds
dec
adc
fstpt
mov
sbb
fbstp
lcall
ret
enter
sti
pop
jo
mov
ret
mov
fcoml
cs
mov
cmc
xor
lods
mov
lds
clc
sub
or
scas
fstpl
push
adc
pusha
lods
mov
rorl
repnz
imul
jae
fists
mov
fldz
lcall
pop
std
mov
shl
movups
lret
xchg
orb
js
out
dec
jg
add
and
mov
or
push
ljmp
lods
ljmp
nop
rcrb
stos
bound
or
mov
sbb
dec
call
adc
cli
mov
mov
fidivrs
std
in
xchg
sub
push
push
out
out
cmpsl
mov
testb
scas
push
clc
mov
mov
mov
pop
fdivrl
int3
pop
addr16
ss
or
fcompl
hlt
fcoms
orl
jmp
clc
ret
lcall
add
jle
fcoms
mov
lods
and
push
cmp
jne
ss
js
pop
mov
add
ljmp
inc
mov
adc
fcompl
iret
push
test
push
jb
fwait
scas
xchg
scas
imul
fistpl
xor
pop
pop
stc
ficoml
rcrb
popa
outsl
push
stc
lods
icebp
inc
adc
jbe
hlt
scas
mov
repnz
push
pushf
mov
std
push
pop
lds
scas
fidivs
test
sti
ror
lods
jae
add
adc
insb
xor
es
js
jge
aam
jbe
sbb
adc
and
and
popa
scas
incb
loope
jecxz
mov
dec
lahf
aad
and
add
jno
cmp
jle
mov
enter
in
ret
jge
jg
nop
sbb
push
loope
and
cmp
or
or
lahf
into
mov
mov
adc
cmp
out
cmp
out
icebp
dec
push
not
pop
sub
or
sub
pop
jle,pn
pop
dec
push
xor
xchg
insl
sbb
cmc
sbb
mov
dec
add
int3
aas
xchg
sub
and
push
adc
xchg
pop
push
cli
dec
sub
dec
iret
push
mov
cmpsl
and
out
mov
bound
jae
outsl
orb
cmpsb
mov
sahf
jl
mov
imul
rcrl
lret
and
xchg
adc
lea
andb
mov
or
loop
insb
jmp
xor
xchg
cmc
je
cli
into
and
stos
cmp
aas
sbb
lds
sub
xchg
push
mov
mov
mov
gs
outsl
repz
push
push
pop
ss
mov
cli
lcall
int
in
insb
ret
mov
das
movsb
mov
cmp
data16
sbb
jo
scas
repz
mov
push
fstps
sbb
jmp
mov
aad
incl
inc
lock
jmp
aad
pushf
popf
fldenv
adc
insl
mov
jo
mov
sbb
rorb
lods
lods
and
xchg
int
jecxz
cli
push
je
cs
dec
lcall
sub
add
enter
push
pop
lds
fcmovnbe
sarl
sbb
roll
cmpsl
jp
cwtl
mov
xor
adc
and
iret
jnp
mov
in
xchg
xchg
inc
das
out
push
cltd
lock
mov
xor
adc
fistl
js
jp
pusha
icebp
ficoml
cld
mov
mov
sub
sub
xor
adc
push
and
aam
push
sub
mov
outsl
shlb
pop
mov
fisubrs
aaa
and
mov
sub
mov
cli
lcallw
xchg
inc
loopne
clc
lds
push
fldl
mov
rcrl
mov
insl
scas
cltd
xchg
xor
push
fsubrl
rcrb
ret
xchg
xchg
stos
xor
icebp
pop
test
cmp
cwtl
sbb
repz
inc
dec
out
mov
mov
mov
cld
xor
mov
add
mov
add
dec
popf
mov
std
aam
inc
movsl
or
dec
inc
cmpb
pop
out
mov
sbb
and
and
cmp
push
push
push
bound
out
mov
jg
jne
push
add
testl
mov
loop
mov
fisubl
sub
sti
push
xchg
cltd
ret
ljmp
ljmp
pop
les
add
jle
adc
jnp
mov
stc
and
mov
in
mov
dec
mov
sub
ja
push
mov
jae
les
pop
xor
leave
xchg
iret
leave
xor
xor
in
scas
imulb
or
mov
xchg
mov
or
leave
and
fstl
dec
or
sbb
xor
rclb
cli
aaa
mov
repnz
pop
les
sbb
mov
jae
outsb
fldl
xchg
sbb
add
cmp
xchg
sbb
divl
mov
mov
cmp
cmp
scas
fnstsw
jo
cmc
mov
push
sub
repz
inc
jno
test
cmp
jg
enter
in
je
sti
cmpsb
add
jge
lods
xor
mov
mov
icebp
sub
movsl
mov
notb
jl
push
sub
lock
add
sar
pop
addr16
cmc
pop
push
jmp
sub
add
sbb
sbb
inc
cmp
add
pop
rolb
push
adc
das
cmp
fdivrl
icebp
push
imul
movb
jo
xor
push
push
mov
sbb
mov
adc
mov
lcall
jg
addl
lcall
shl
adc
mov
fwait
cmp
xchg
mov
mov
ret
inc
jg
sub
inc
fs
in
stc
icebp
dec
jae
mov
cltd
das
xor
or
cmc
cmp
adc
iret
ret
cmp
sub
pushf
and
cli
aam
mov
mov
pop
sub
mov
out
ljmp
adc
into
in
loopne
or
xchg
fcmovne
insl
sti
pop
adc
xlat
mov
dec
sub
adc
pushf
sbb
xor
xchg
repz
and
or
inc
cld
mov
xchg
fdivrl
cs
fldpi
test
stc
pushf
dec
lds
pop
xor
pop
and
cwtl
call
adc
and
testb
stos
dec
jbe
mov
ja
mov
mov
scas
testl
test
push
dec
lea
xorl
aad
and
cwtl
loope
std
std
dec
lock
divb
rcrl
cmc
mov
aas
inc
mov
das
int
jg
roll
mov
ror
lahf
aad
movsl
or
cmp
mov
int
daa
or
insl
push
fstl
ret
out
add
xchg
imul
std
jp
mov
cmp
idivl
push
ljmp
adc
xchg
xchg
mov
push
test
insb
mov
fistps
or
and
and
rdtsc
ja
push
xor
cmpsb
pop
out
pusha
ja
stos
and
call
rcll
jp
fsubrl
js
dec
out
adc
inc
sub
sarl
inc
xor
ljmp
addl
vpaddusw
icebp
lret
fwait
mov
mov
ficompl
cmp
sbb
int3
pop
ja
iret
daa
pop
jo
push
mov
add
xchg
push
mov
in
xor
jns
in
jmp
dec
out
movsb
mov
mov
sbb
jne
push
pop
dec
jne
push
pop
adc
jp
dec
addr16
mov
push
shrb
adc
subl
enter
pop
xchg
sahf
inc
jnp
in
fisubl
lcall
in
ds
jnp
test
insb
lea
testl
push
mulb
mov
push
iret
mov
jae
xchg
sub
mov
ret
or
test
iret
sub
or
add
scas
pop
mov
negb
or
xchg
or
inc
pop
dec
aas
push
movl
fxtract
inc
or
mov
movsb
repnz
mov
and
xchg
fidivrs
add
adcb
or
pushf
aaa
inc
outsw
sbb
hlt
fidivrl
push
clc
jbe
fwait
sub
inc
sarl
mov
cmp
fwait
js
mov
xchg
out
jno
cltd
push
push
rol
dec
add
jl
cmp
sbb
fstpt
ror
and
jo
pop
push
cmc
cmpsb
subl
scas
and
push
ja
add
sub
lahf
or
cmp
mov
ds
pusha
add
sub
sub
lds
push
popa
in
pop
cmpsb
aam
js
mov
in
inc
xor
inc
add
cmc
mov
subb
mov
shlb
lds
outsb
xchg
cs
sub
loop
fsubrl
inc
inc
push
sarb
lcall
push
sub
and
mov
mov
mov
sti
dec
mov
rcr
mov
jmp
pushf
sbbb
jnp
ret
sbb
mov
mov
jp
xchg
pushf
lret
mov
fmuls
out
cmp
push
pop
int3
adc
pop
fs
pop
stc
test
loop
lret
leave
outsl
adc
ja
es
cmc
add
and
ds
lahf
cmp
jne
xor
ret
mov
out
cmpsl
lea
xor
push
add
repnz
adc
fldt
adc
adc
loop
loopne
insl
shlb
xchg
jo
sti
jbe
adc
inc
test
mov
adc
iret
out
cmp
and
testb
lods
inc
lods
les
adc
inc
femms
test
nop
jns
ds
push
cs
and
jae
pop
pushf
repz
sbb
sbb
sbb
stos
pushl
lea
mov
pushf
mov
lcall
cs
jb
xchg
cmp
inc
jecxz
inc
inc
xchg
dec
inc
lret
pop
or
loopne
xor
jne
js
imul
xor
mov
dec
lcall
repnz
sbb
shr
and
cli
outsb
lret
mov
mov
xchg
shl
sbb
popf
mov
fs
mov
push
in
mov
sbb
mov
or
and
dec
bound
inc
push
add
jne
aam
adc
sub
xor
sbb
sbb
or
mov
mov
add
lods
std
pop
add
adc
mov
lds
int3
clc
cmp
xchg
fisttpll
stos
lods
mov
aam
test
and
cltd
cmc
loop
add
out
seto
adc
xchg
adc
bound
stos
rcrl
xor
jmp
and
jecxz
xchg
xchg
inc
test
push
cmp
xor
push
mov
push
dec
decb
jmp
pop
xor
and
add
lds
add
xchg
out
sbbb
mov
inc
rol
dec
dec
sub
xchg
ja
sbb
pop
sub
ja
mov
push
leave
xchg
mov
adcb
sbb
bound
fs
xorl
into
inc
jne
mov
dec
pop
pop
xor
jnp
aad
ficomps
int3
jp
ljmp
add
mov
cmpl
int
das
out
jmp
jno
mov
pusha
xchg
test
in
mov
inc
jnp
pop
imul
subb
pop
out
push
jle
jns
sub
fcoms
jae
mov
pop
mov
imul
adc
and
lahf
scas
mov
jl
sbb
xor
xchg
popa
mov
mov
fisttpl
mov
inc
push
jg
arpl
push
sub
nop
xor
leave
sub
repnz
enter
lds
popf
or
int3
in
inc
int3
insl
in
add
jnp
or
out
add
jmp
mov
fmuls
call
movsb
aas
stos
add
and
mov
jo
dec
or
icebp
xlat
jno
jno
xchg
jl
mov
jno
inc
cmp
sti
xchg
daa
mov
mov
pop
or
insb
cmpsb
push
xchg
incb
cmp
test
inc
rclb
pop
mov
cmp
cmp
xor
sub
outsl
pop
loope
mull
pop
in
std
js
sbb
test
mov
add
and
cmpb
mov
adc
cmc
adc
pop
imul
push
pop
lds
pop
fwait
inc
inc
sub
xchg
aad
out
test
mov
cmp
inc
aaa
xchg
mov
imul
mov
repz
and
sahf
fistpl
clc
cmpsb
adc
daa
ror
mov
xor
or
shll
dec
out
adc
mul
fs
test
xchg
loop
enter
adc
xor
dec
jo
leave
push
dec
or
into
push
xor
stos
cli
cmp
mov
xchg
adc
inc
lods
sbb
jmp
pop
loop
or
mov
mov
scas
mov
xchg
cli
push
loopne
loop
gs
or
sti
and
and
mov
mov
test
cmp
fdivl
jnp
sbb
cmp
inc
and
push
nop
push
pop
in
aad
xchg
aad
outsb
mov
ljmp
sub
pop
mov
js
lcall
loope
arpl
lahf
cmp
mov
and
fs
cmp
and
aas
fistpll
inc
pop
mov
push
inc
sahf
pop
scas
push
or
adc
jp,pt
mov
cli
pop
cwtl
push
xchg
or
cltd
fnstsw
sarl
cmp
mov
dec
pop
mov
mov
lock
pop
mov
adc
mov
push
lods
lret
sub
mov
icebp
pop
test
mov
mov
mov
orl
ss
sbb
enter
add
jmp
daa
or
sub
popa
sub
cmp
push
mov
dec
in
imul
scas
lods
push
and
xchg
add
pusha
clc
jbe
xchg
fnsave
add
prefetch
test
cli
add
inc
mov
pxor
inc
xchg
pop
testl
pop
test
xchg
cltd
sbb
out
test
jo
dec
sbb
xchg
imul
bound
xor
add
cmpsb
cli
mov
inc
add
add
aaa
add
jmp
inc
push
loopne
sbb
mov
out
xor
ljmp
in
and
scas
bound
cmp
mov
xchg
mov
dec
cmp
jmp
mov
push
nop
jp
mov
addr16
mov
sub
mov
push
or
nop
xchg
cli
jbe
jmp
inc
xchg
insb
fbld
call
pmulhw
xchg
jle
jne
jnp
iret
and
jnp
and
push
rclb
fisubrs
adc
xor
fwait
pop
popa
jae
aad
inc
inc
adc
into
ret
jle
out
jecxz
ret
push
mov
fisubrs
fcmovbe
leave
sbb
xor
xchg
mov
jle
inc
pop
dec
std
push
xchg
out
inc
and
insl
arpl
cmp
fldt
imul
mov
xor
imul
push
pop
sti
sbb
add
js
cmp
and
mov
cmpb
int
sbb
mov
in
xlat
movsb
lret
cmp
push
cmp
push
xor
jp
sub
xor
aam
fisttpll
in
and
mov
cmp
icebp
daa
mov
stc
enter
in
sub
cmpsb
mov
outsb
push
or
rcrb
sbb
pop
lahf
dec
mull
and
dec
xchg
pushf
adc
sub
in
mov
dec
xchg
pop
push
fwait
or
and
hlt
js
cmp
pop
lret
imul
xor
xorb
enter
push
iret
out
push
test
rcr
mov
adc
pop
in
xor
divb
call
outsb
addr16
shrl
mov
insb
movsb
push
ret
and
mov
mov
enter
imul
or
adc
std
test
insb
jmp
daa
xchg
shll
hlt
notl
bound
mov
push
mov
popa
adc
jnp
fs
sub
push
frstor
loop
cli
dec
outsl
rcr
nop
xor
cmp
aam
lods
iret
mov
cmp
sti
iret
xor
loop
cli
insl
sbb
xchg
pop
sub
add
add
xlat
add
adc
fcoms
pop
adc
mov
mov
pop
mov
mov
gs
pusha
incb
sti
aam
inc
in
sbb
inc
sub
std
pop
xlat
adc
idivl
ret
or
xchg
jl
cltd
repz
aam
les
and
cmc
mov
imul
or
mov
leave
rcll
mov
pop
pop
cmp
sub
sbb
sub
mov
scas
xchg
mov
xor
add
add
out
aas
jle
pop
inc
ja
cs
fsubs
pop
push
mov
fistl
or
cmpl
jne
mov
sub
inc
std
inc
stos
jbe
cmp
adc
mov
xor
mov
fists
das
push
jo
rol
mov
mov
dec
dec
lret
xchg
shlb
es
or
mov
orb
stos
insl
sbb
xchg
popa
ret
xchg
into
arpl
repnz
xor
rolb
push
adc
push
pop
lock
pusha
mov
or
push
add
aaa
cmp
xchg
inc
push
mov
mov
arpl
fucom
mov
int
loopne
fimuls
xchg
cltd
arpl
add
loop
dec
sbb
dec
stc
xchg
mov
adc
cmp
rcrl
sbb
roll
pop
and
jo
xchg
rcrb
insl
daa
mov
or
mov
xor
mov
inc
fdivr
add
mov
pop
pop
insl
push
fimull
sub
ds
mov
or
push
call
loope
mov
xchg
dec
mov
dec
mov
xchg
sbb
repnz
lock
mov
or
jne
test
dec
push
pop
mov
mov
mov
push
jp
sub
adc
notl
ss
or
pop
adcl
xchg
lds
jmp
pop
mov
filds
push
leave
xchg
pop
in
iret
out
push
jle
jnp
or
into
std
iret
and
mov
mov
scas
mov
jmp
push
jae
arpl
pop
adc
ret
iret
inc
mov
adc
mov
scas
cmpb
imul
sbb
add
ficoml
in
push
cld
outsl
push
inc
and
push
arpl
stc
hlt
es
leave
push
sbb
repnz
pushf
mov
test
lds
mov
mov
push
icebp
int3
inc
xor
or
push
mov
cmpl
sbb
dec
jge
xorl
push
xor
aaa
movsb
push
out
sbb
sar
and
xorl
xchg
xchg
mov
xor
jl
js
jno
je
cmp
daa
mov
fwait
enter
in
adc
xchg
cmpsb
or
mov
push
fsubs
cld
test
in
xchg
xchg
nop
es
movsl
aam
mov
mov
inc
aaa
sub
ds
popa
pop
inc
push
inc
xchg
pop
arpl
movsb
js
repnz
jge
fisubrl
add
jnp
sbb
rclb
andb
jge
lcall
jp
outsb
mov
ret
sub
push
lds
adc
cltd
or
cltd
int
insl
out
push
lds
and
loopne
fldcw
adc
push
or
jg
push
rolb
stos
lock
sbb
popf
mov
adc
dec
xchg
notl
leave
fdivrs
fstpt
iret
push
or
push
xchg
out
int
mul
in
pop
cmpsl
outsl
mov
inc
xor
and
cmp
cmp
cld
push
xor
adc
mov
jge
mov
lods
ljmp
add
insb
cmpsl
imul
ss
loopne
pop
jnp
idiv
paddd
push
sti
subl
in
sbb
mov
outsb
xchg
xlat
push
push
xchg
cmp
out
sbb
aas
int
repz
fldcw
roll
cwtl
dec
cmc
imul
clc
inc
jns
xor
jmp
pushf
hlt
mov
es
out
mov
cwtl
add
call
scas
sub
jecxz
mov
je
mov
or
aas
sbb
mov
inc
pop
out
sub
fcmovnb
rclb
cmp
sub
and
and
int
mov
out
shl
push
rcr
pop
std
and
rcrl
sbb
mov
dec
jecxz
lock
lcall
push
imul
or
out
or
mov
leave
dec
adc
insl
add
cmp
ret
and
aam
cld
lock
imul
sahf
and
push
xchg
pop
mov
ds
xchg
test
ljmp
mov
fldl
inc
push
nop
pop
xor
xor
xor
insl
icebp
pushf
shrd
xchg
ljmp
stos
fdiv
xchg
pop
jmp
shl
das
inc
sbb
stos
xor
pop
fildll
scas
mov
jp
or
loop
mov
mov
syscall
loope
mov
jge
jge
insl
lret
cmp
dec
add
pop
pop
aaa
xor
mov
cmp
mov
dec
jns
nop
sub
push
jle
and
jge
fs
and
dec
add
mov
inc
inc
mov
arpl
jp
pop
dec
addr16
data16
cmpsl
cmc
sub
mov
xor
out
mov
nop
xchg
sti
jmp
ljmp
pusha
fs
push
jns
test
push
add
and
fildll
repnz
mov
out
bswap
push
and
jae
xor
outsb
pop
dec
inc
arpl
rcrl
iret
movsb
pop
fcoms
js
xor
lock
scas
in
daa
imul
std
xchg
insw
ja
dec
xchg
addb
sub
jle
or
daa
ror
arpl
push
hlt
jno
xor
lea
repnz
lods
xor
rcrb
push
fiadds
xchg
pop
pop
les
int3
cs
sti
add
fisttps
inc
xor
sbb
jge
dec
pushl
or
andl
loopne
ret
cmp
and
cmp
test
fucomi
sub
lcall
jl
sbb
cmp
aam
enter
in
negl
daa
cmpsb
rcrb
ljmp
test
mov
mov
inc
movsl
fistpl
ret
cmp
je
sub
arpl
loope
inc
push
push
cmpsb
mov
mov
cmp
pop
sbb
icebp
push
jg
xchg
add
add
movsl
mov
xorb
fdivrl
rorb
dec
fsubrl
jl
sub
xchg
sbb
aam
mov
lcall
loop
cwtl
mov
int
push
push
enter
test
out
and
mov
mov
sub
jg
int3
mov
test
sbb
test
test
jecxz
lret
dec
notl
hlt
xor
cmp
adc
mov
stc
test
je
cmp
outsl
nop
insb
mov
cmc
push
fs
into
jb
cmp
cli
mov
cmp
shl
xor
imul
mov
rep
sarl
lds
cs
mov
imul
pop
sub
xor
test
mov
dec
in
out
cmc
shll
loope
jge
xchg
loopne
cmp
push
cmp
add
enter
inc
les
fldenv
cmp
push
out
push
clc
nop
in
adc
mov
cs
sbb
jmp
icebp
iret
pushf
lahf
lret
dec
adc
das
pop
pop
mov
mov
lea
mov
jecxz
fsubp
je
or
dec
leave
cld
int
push
or
aas
mov
in
inc
out
jp
xchg
sub
in
and
sti
subl
data16
pop
mov
std
mov
or
ret
shrl
sti
dec
and
popf
ljmp
lock
das
sub
insb
mov
jae
mov
lds
icebp
in
mov
scas
jb
dec
push
adc
es
mov
push
aam
repz
shrb
cmp
pop
cwtl
int3
in
mov
pop
push
lods
mov
test
and
sbb
cmpsl
clc
daa
fnstcw
mov
xchg
mov
dec
into
test
jp
cltd
rorl
add
repnz
push
jl
les
dec
cwtl
cmp
stos
mov
roll
pusha
sbb
sbb
orl
movl
dec
faddl
or
cmp
incl
sub
in
and
or
jg
mov
dec
hlt
rorl
jno
mov
pop
jle
mov
mov
jecxz
fsubrp
or
jns
push
lret
out
call
js
add
cs
in
push
mov
adc
mov
cmp
pop
jp
ds
lahf
or
iret
clc
sub
adc
leave
xorl
xchg
pop
push
daa
jmp
mov
into
pop
pusha
push
xor
add
or
enter
xor
and
xlat
stos
lcall
mov
adc
xchg
inc
jae
dec
mov
mov
jg
xor
in
js
add
mov
ja
dec
mov
imul
jge
mov
das
outsl
inc
xlat
movsb
mov
or
sub
arpl
cmp
mov
outsl
repnz
repz
mov
xchg
xor
call
ds
sbb
add
sbb
aaa
add
cmp
dec
mov
in
outsb
push
shl
or
imul
and
xchg
js
pop
fsubrs
xor
jge
imul
lea
shlb
sub
fiaddl
fwait
daa
scas
jno
enter
in
fimuls
cmpsb
adc
leave
inc
jns
adcl
test
xchg
aaa
negb
adc
movsl
loop
cmpb
mov
add
fistps
dec
fwait
push
mov
in
js
sbb
pop
aas
and
mov
jl
sub
sbb
roll
push
shrb
cmp
outsb
xorl
fdivrl
xchg
push
jae
sahf
lcall
inc
sub
xchg
xor
sbbl
lret
hlt
das
and
insb
fmull
mov
jbe
shll
fildl
sub
sbb
leave
sarl
lret
pop
not
xchg
mov
cmp
push
xchg
push
adc
popf
mov
jl
cmp
jae
outsl
cmp
xor
and
in
into
push
out
cmpsb
or
sarl
jecxz
cli
push
mov
out
cmc
insl
mov
jp
mov
or
add
subl
cltd
leave
je
cmpsl
pop
push
pop
jae
inc
gs
cs
lods
add
pop
in
mov
push
jecxz
xlat
shrb
cmpsl
cmp
sbb
lds
repz
les
add
lcall
dec
mov
std
nop
rclb
xchg
jmp
jns
pushf
dec
scas
adc
movsl
pop
push
sar
xchg
pushf
lods
call
jge
nop
stos
and
je
lods
rorb
lret
imul
inc
enter
insl
sub
pop
cmp
fistpl
lds
add
jbe
or
ret
hlt
sti
std
xor
shrb
jns
or
mov
add
pop
subl
mov
sub
lret
in
jne
cmpsl
pop
icebp
mov
ja
dec
or
insl
rclb
es
sbb
inc
pop
and
push
ds
sub
fcom
sti
inc
arpl
mov
call
and
xchg
icebp
and
adc
out
popa
fwait
mov
inc
xchg
add
mov
push
push
fistpll
mov
cwtl
mov
shrb
imul
push
push
and
mov
stos
mov
dec
dec
rcrl
cmp
test
sahf
pop
dec
mov
sub
lcall
or
outsl
dec
xor
sub
and
jno
out
in
push
ret
out
fwait
lret
sbb
inc
movb
dec
out
fidivs
push
cmp
mov
imulb
push
in
divl
jns
mov
mov
mov
jno
jne
sbbb
mov
pop
jae
adc
jp
pop
addr16
movb
sub
pop
out
orb
adcb
xchg
andl
nop
stos
sbb
lcall
jle
push
inc
jnp
dec
popa
insb
ud2
call
stos
or
pop
inc
mov
cmp
or
cmpsl
pop
inc
jae
movsl
cmc
inc
insl
adc
testl
pop
adc
jne
push
stos
xchg
push
imul
loope
adc
fisubrl
jne
push
xor
inc
sub
mov
hlt
pop
fcoml
push
add
xchg
insb
mov
rcl
imul
mov
pop
mov
dec
int3
add
jbe
int3
sub
or
sbb
cmp
daa
mull
and
popa
movsb
testb
in
sbb
lret
jns
imulb
push
push
pusha
inc
movsl
dec
pushf
pop
cld
jl
aad
jno
aaa
cmp
xchg
cld
enter
in
lds
cmpsb
xchg
aas
sub
mov
outsb
test
gs
push
lahf
mov
movsl
jmp
loope
cmp
subl
xor
push
sbbl
rcrb
xchg
ja
shll
xor
outsb
sbb
jl
lcall
adc
in
repnz
in
push
lret
lcall
shrl
mov
imul
into
jae
and
dec
stos
mov
fnsave
or
jb
mov
test
ss
sbb
stos
leave
mov
push
push
rcll
aaa
lret
aas
testl
call
mov
fs
outsl
mov
repnz
cmp
cmpsb
enter
adc
dec
inc
cmp
lods
adc
fcom
xor
xor
or
cmp
in
gs
int
lahf
jmp
into
add
adc
lea
nop
cmpsb
imul
cs
and
addr16
outsl
or
rcrb
sti
nop
lcall
or
mov
xchg
aad
sgdtl
cmp
aam
xchg
mov
xrelease
push
les
jmp
inc
xorl
dec
nop
fwait
cwtl
or
int
push
cs
jae
jmp
lds
adc
insl
pop
or
adc
xchg
in
jg
scas
std
dec
jecxz
dec
out
je
mov
sub
cld
mov
inc
jecxz
add
pop
fnsave
dec
gs
dec
cli
adcl
std
push
lret
cwtl
mov
pop
testb
ror
ljmp
and
sub
mov
sub
das
out
out
fiadds
mov
ror
lret
rorb
std
mov
lods
mov
dec
add
subb
ss
addl
push
fldl
outsb
ror
jp
pop
mov
xchg
mov
adcl
mov
shr
mov
clc
popf
mov
adcb
dec
mov
and
sub
add
fdivs
push
xor
scas
xchg
mov
jmp
stos
test
mov
shl
movsl
inc
sbb
add
lret
fcmovnu
dec
push
xchg
inc
xchg
decb
test
lcall
mov
inc
inc
jbe
add
pop
xlat
add
retw
cli
imul
xor
inc
pop
dec
jmp
fimull
ret
pop
fnstsw
cmp
xor
jns
lret
lock
out
mov
lcall
stos
push
les
jge
pop
mov
sbb
cs
fisttpl
out
mov
adcl
repz
arpl
fistpll
test
movsl
jle
sub
xchg
cmc
insb
jp
inc
and
adc
fnstcw
arpl
pushf
push
push
mov
inc
js
lods
pop
in
xchg
adc
iret
shll
or
or
scas
push
add
imul
ficoml
popa
jg
inc
aad
add
sub
inc
xor
je
lea
je
push
cli
fmul
repnz
repnz
hlt
mov
lock
ffreep
aaa
cld
fisubrs
fildll
int3
out
and
divl
lret
sbb
jge
or
push
pusha
push
jo
xchg
movsb
andl
cmc
xor
jo
aaa
xor
inc
add
or
xorb
sub
inc
inc
adc
enter
in
lods
dec
push
cmpsb
sbb
inc
xchg
mov
in
jmp
stos
data16
in
movsb
and
dec
les
dec
testl
sub
lret
dec
loope
int
push
std
dec
pop
pop
cmc
push
js
xchg
cmc
pop
lea
cmp
xor
inc
pop
add
sbb
sbb
mov
fisttps
pop
xlat
mov
inc
js
sub
mov
mov
pop
xchg
lret
jae
or
and
push
pop
xchg
push
shll
and
jg
mov
test
adc
out
push
push
aam
cmp
rcrl
adc
mov
or
shrl
sub
fsubrs
or
mov
ja
test
movsb
outsl
sub
jbe
cmc
jae
aas
into
sbb
or
cmpb
jg
push
inc
out
cli
insb
dec
nop
out
jge
mov
fwait
lods
xchg
jb
pop
pop
add
adc
jmp
imul
ffreep
loopne
inc
pop
gs
loope
repz
sti
aas
inc
add
das
cmp
sub
cmp
dec
xlat
dec
push
int
ljmp
xchg
dec
fcoms
repz
jmp
les
jo
or
imul
ficoml
adc
push
rorb
pushf
mov
jbe
pop
mov
inc
es
dec
sti
test
dec
xor
adc
shll
add
cs
movsb
jb
sarl
cltd
arpl
imulb
addb
dec
in
mov
mov
out
mov
out
cwtl
mov
add
sub
and
icebp
pop
mov
mov
cs
lock
push
sahf
mov
pop
adc
lret
ret
cld
std
push
adc
imul
call
inc
insl
mov
and
ret
pop
pop
outsb
aam
iret
bound
gs
sbb
mov
xchg
test
and
fcompl
mov
popa
leave
fs
ljmp
jns
fmuls
out
pushf
xchg
mov
cmc
add
cltd
jbe
dec
add
shlb
push
or
dec
xchg
js
sub
stos
testb
hlt
sbb
xchg
mov
aam
push
dec
test
jnp
shrb
cmp
clc
out
sub
jp
add
dec
jmp
hlt
add
or
jp
or
push
or
fidivl
inc
hlt
mov
dec
int
xchg
popf
cmp
lret
dec
or
jl
xor
dec
fsub
jns
jnp
bound
adc
and
dec
lea
mov
mov
and
or
sbb
fidivrs
jge
lcall
xchg
mov
test
ss
movsl
fcoms
rcrb
pop
in
sbb
jnp
movsl
mov
and
push
adcb
fidivrl
mov
fdivl
and
inc
addl
pop
and
add
sbb
icebp
icebp
adc
and
scas
jno
lret
push
lea
xchg
xchg
ret
ficoml
lret
push
pushl
inc
xor
arpl
aas
leave
imul
addr16
or
lds
push
pop
adc
cmp
add
imul
aaa
ds
sbb
add
push
mov
mov
mov
movsb
or
and
push
rcrl
scas
mov
shlb
jp
xor
es
das
jl
loope
jno
pop
jae
jae
sbb
lods
pusha
xlat
enter
in
xchg
daa
aaa
cmpsb
fwait
jl
inc
es
aam
loopne
push
push
or
push
lahf
add
clc
and
lahf
into
outsb
add
mov
inc
push
loope
inc
inc
push
sub
pop
sahf
cs
jbe
xor
std
mov
data16
xchg
lock
mov
add
pop
push
xchg
sar
mov
pop
outsb
stos
or
faddl
pop
sbb
adc
push
sub
dec
push
aam
inc
and
nop
inc
mov
push
adc
lods
stos
imul
lock
filds
fcmovbe
lock
mov
sarl
lret
push
testl
fildl
push
pop
jge
repz
pusha
push
cld
loop
addr16
xor
mov
dec
into
mov
cmpsb
cmp
outsb
push
xor
sub
out
xchg
mov
xchg
lods
insl
test
popf
add
iret
adc
popf
cmpsl
imul
leave
pop
insb
adc
loopne
inc
mov
sbb
jbe
out
mov
in
lcall
sub
xor
cmp
inc
mov
and
cmp
mov
fnstcw
insl
std
inc
cmpsl
ficoms
dec
shrb
xchg
pop
push
inc
and
pushf
dec
push
call
pop
outsb
shrl
loopne
call
mov
gs
mov
and
mov
sahf
dec
movsl
or
aas
cmp
mov
jp
inc
add
pop
and
dec
sarb
in
jecxz
fnsave
je
mov
sub
out
into
in
test
data16
and
or
scas
mov
and
movsb
or
mov
ret
or
xor
sbb
sub
icebp
inc
sbb
mov
stos
push
iret
dec
cli
jecxz
insl
xchg
and
pop
xor
ret
in
inc
mov
mov
push
sub
shlb
pop
adc
dec
mov
jnp
test
jmp
push
lods
push
sub
loopne
pop
ljmp
add
adc
add
push
pop
or
test
cltd
lods
hlt
stc
add
sbb
mov
mov
call
ffreep
out
fisttpl
xchg
pop
push
or
mov
push
ja
push
repz
in
orb
int3
mov
xor
test
iret
xor
jae
lcall
add
jnp
test
lret
push
lods
push
fs
pop
pop
jae
sub
mov
cli
ja
or
hlt
mov
and
xchg
sbb
in
mov
bound
adc
out
jnp
in
mov
sub
dec
jo
je
in
lock
mov
xchg
jmp
pop
or
fnstenv
imul
mov
adc
jl
xchg
or
mov
imul
jle
mov
lcall
popf
aas
stos
dec
fsts
sarb
mov
mov
fists
lock
fdivl
dec
push
mov
mov
xor
lahf
iret
jg
cli
adc
hlt
xchg
scas
aam
stos
imul
sbb
push
dec
xchg
sbb
mov
push
push
std
inc
ss
and
call
les
mov
inc
mov
es
lds
out
je
push
pop
inc
iret
xor
lds
add
pop
xchg
aaa
std
enter
cmp
arpl
ret
push
test
xchg
xchg
sahf
cmp
dec
sub
sbb
bound
rol
xor
or
dec
jmp
movsl
or
pop
cmpb
dec
mov
stos
or
hlt
in
jp
pop
cmpsb
push
dec
in
inc
mov
jle
lcall
push
fsubrp
push
lahf
and
insb
and
fsubs
sbb
ds
ljmp
sub
mov
loope
push
adc
fucomp
fs
pop
aas
pop
fistl
shlb
outsb
enter
xchg
sbb
sub
mov
mov
aad
fcoml
or
xor
fsubrl
in
push
iret
jmp
push
jne
pop
xchg
ret
fsubr
int
sub
push
xlat
test
and
arpl
mov
or
dec
cli
scas
orb
cwtl
sahf
jge
and
jo
adc
rcl
adc
cmp
loopne
int3
xor
arpl
dec
stos
scas
ss
mov
adc
mov
lcall
loop
add
xorl
sbb
cmc
add
into
loope
jg
and
sbb
add
inc
cli
shlb
mov
push
pop
call
add
cmp
adc
mov
mov
repz
mov
loopne
push
sub
cmp
sub
push
hlt
cmp
and
xlat
int3
popl
sbb
rcll
sbb
xchg
jl
fnstenv
xchg
inc
mov
xor
sub
aad
mov
xchg
and
fiaddl
pushf
testb
pop
and
lods
call
sbb
jecxz
imul
mov
dec
sbb
gs
out
fstpt
xlat
shlb
mov
pop
movb
dec
mov
mov
add
add
das
xchg
mov
shll
mov
shll
js
mov
in
stos
das
sub
lock
ret
outsb
mov
nop
out
cli
lods
jnp
mov
xchg
xchg
icebp
pop
sub
aas
rorb
cmc
mov
es
std
ret
jl
mov
jg
mov
rolb
sbb
mov
sbbb
sbb
fsubrl
lcall
cld
jnp
clc
dec
push
fucomp
xchg
inc
push
and
or
jbe
dec
cltd
in
into
add
mov
out
ficoml
mov
jae
ds
enter
cs
add
outsl
sar
pop
repz
les
cmp
push
dec
push
int3
sbb
and
scas
add
sbb
jmp
add
mov
add
dec
or
fwait
xchg
orb
inc
inc
and
std
dec
mov
insl
ja
stc
lods
pop
mov
test
mov
mov
imul
fdivrs
enter
inc
adc
pop
aad
mov
mov
dec
push
aam
mov
mov
insl
add
sbb
out
and
sub
mov
loopne
xchg
push
lds
xchg
fdivr
sbb
pusha
push
dec
mov
jle
outsb
fidivrs
or
insb
mov
xchg
sub
fprem
adc
mov
fsubrs
call
inc
cltd
dec
lahf
pop
xchg
mov
ret
push
iret
fdivp
push
adc
xchg
scas
aaa
fwait
ljmp
ss
dec
out
and
jp
loopne
push
filds
mov
sbb
cmp
fcomi
xor
leave
push
hlt
push
repnz
mov
inc
test
xchg
ficoms
pop
out
jae
ror
out
push
sub
sbb
rcr
dec
aaa
mov
or
mov
push
pop
xchg
mov
and
daa
and
push
les
cmp
push
in
stc
sub
adc
jno
add
fchs
lcall
xor
repnz
mov
inc
dec
push
gs
fldt
mov
cwtl
lahf
inc
pusha
repnz
cmp
add
icebp
loop
add
loope,pt
lahf
in
push
cmpsl
enter
pusha
js
sbb
outsb
andl
cld
test
sub
cmp
shlb
jl
outsb
jo
shrl
outsb
fwait
push
aaa
or
leave
mov
pop
adc
sub
push
int
mov
mov
fidivrs
mov
adc
aad
leave
mov
and
jg
jne
subb
inc
sahf
and
sbb
cmp
shrl
lret
add
fcomps
pop
pop
movsb
es
adc
sub
stc
into
inc
cmp
repnz
shrl
xchg
cmc
enter
fdivp
or
xchg
fldenv
cli
add
daa
clc
mov
lret
lods
cmp
stc
data16
mov
mov
adc
cld
and
adc
ret
stos
xchg
sarl
gs
out
pop
fs
loope
in
jo
push
mov
xchg
jno
xlat
or
cmp
cmp
inc
repz
les
ljmp
mov
nop
pop
push
movsb
cs
pushf
and
adc
dec
pop
aam
mov
adc
fisttps
mov
push
cmp
inc
dec
xchg
imul
inc
dec
mov
pop
pop
imul
dec
cmpsb
aas
fiadds
leave
pushf
push
mov
push
lds
js
sub
roll
outsl
and
cmp
sbb
inc
mov
aaa
xorb
inc
ja
xor
jle
cmc
icebp
out
popa
sarl
test
push
or
arpl
pop
aam
mov
outsl
rcrb
push
pop
push
jg
mov
mov
lds
fmuls
inc
popa
push
in
into
ljmp
repz
mov
fstl
addr16
test
mov
out
cmovbe
mov
iret
out
pmaxsw
cli
sbb
rcll
and
xchg
pop
test
cltd
imul
popa
xchg
push
mov
or
or
mov
fildl
mov
cmp
repnz
fwait
mov
das
or
les
inc
mov
ja
ja
insb
mov
dec
or
mov
popa
mov
ljmp
bound
test
cmp
push
jne
push
inc
dec
ss
mov
notl
sub
xor
inc
inc
jl
pop
push
fisubl
ret
iret
jecxz
sub
and
incl
sbb
push
fs
scas
xchg
adc
cmp
sbb
mov
sub
jle
pop
gs
data16
es
and
lods
lcall
xchg
lret
add
push
jbe
xor
bound
movsb
outsb
mov
ret
cmp
mov
fildll
inc
je
sbb
pusha
dec
xchg
aaa
sub
inc
roll
push
xor
testb
mov
rol
jle
mov
repnz
add
pop
mov
out
mov
das
lods
int3
fwait
test
add
dec
clc
aaa
jnp
bound
dec
jno
jge
sub
jbe
cmp
push
lods
in
mov
lods
sbb
and
aad
push
add
push
xor
iret
mov
jl
stos
jge
fcmove
mov
or
jp
test
cmp
in
dec
or
and
incb
push
pop
push
xor
inc
push
test
dec
lahf
popa
fistpll
push
cmp
xlat
xlat
dec
cmp
cltd
psraw
adc
or
pop
pop
pop
repnz
js
je
pop
sub
inc
dec
cmp
ds
add
cld
sbb
mov
filds
jne
xchg
rorb
or
outsb
shll
sub
xchg
faddl
mov
lcall
test
int
mov
push
fnstsw
lahf
mov
xchg
testb
scas
les
cmc
mov
ret
roll
ret
xchg
into
shrb
roll
lret
repnz
inc
cmp
out
adc
or
fs
pushf
stc
test
mov
outsl
test
or
cmc
cltd
dec
cmpsl
ljmp
aas
dec
xor
out
out
mov
lods
and
movsw
mov
pop
mov
sbb
xchg
adc
fs
mov
or
jg
je
sti
pushf
sbb
fcmovnu
inc
mov
push
stos
cmp
dec
fmuls
nop
sub
xchg
adc
xchg
push
and
test
push
inc
loopne
xor
cmp
nop
loop
or
xor
movsl
jmp
mov
sbb
jae
es
xchg
add
mov
out
loop
mov
jg
je
push
test
jb
jmp
daa
inc
push
mov
xchg
cmp
push
fstpt
add
dec
xchg
rol
mov
adc
mov
sub
cwtl
movsl
pop
std
pop
lock
notb
mov
and
dec
scas
mov
or
das
inc
mov
inc
mov
pop
and
jle
pop
cld
test
mov
push
cmpsl
test
or
xchg
push
insl
cmp
mov
out
add
lcall
sub
scas
shr
cmpsl
lret
pop
jno
xchg
mov
nop
loopne
mov
xchg
lods
xchg
inc
repz
and
cmp
xchg
jp
ds
les
and
cmp
push
push
test
aad
and
jbe
cltd
push
in
mov
add
fbstp
and
add
add
int
push
or
push
inc
shrl
roll
xor
mov
hlt
jl
xor
mov
or
sub
fcoml
add
popa
add
xchg
push
push
fwait
in
outsb
or
mov
inc
dec
cltd
xor
ja
fs
mov
mov
fnsetpm(287
jne
xchg
jns
cmpsb
sbb
push
and
sbb
pop
jne
mov
pushf
mov
and
mov
sbb
int3
or
cmpsl
or
pop
xor
cmpsb
jns
sbbl
xchg
call
cmp
sbbb
pop
leave
or
ret
xor
jmp
jnp
test
xchg
xorl
mov
cmp
mov
es
xchg
push
cmp
jae
push
pop
inc
scas
jecxz
pop
add
lock
outsl
iret
pushf
add
push
cli
scas
std
outsl
int3
imul
and
cmpsb
adcb
adc
push
fwait
dec
sti
inc
aas
icebp
cmp
fmuls
jo
inc
aas
push
repnz
push
shlb
push
ficomps
cmc
pop
roll
jecxz
push
pushf
pop
or
xchg
add
jge
insl
pop
jbe
mov
inc
movsb
cmp
pop
cmp
mov
push
scas
xor
mov
xor
mov
mov
andb
mov
mov
aas
and
mov
in
das
jae
cmpsb
cmpsl
cmovae
mov
sti
and
mov
pop
fwait
lahf
andb
add
andl
pop
jp
sub
pop
inc
loope
mov
push
repnz
lcall
pop
push
data16
or
xor
pop
sbb
push
movsb
orb
xor
popw
popf
adc
xlat
stos
sub
fsubrl
push
aam
jns
insl
icebp
pushf
pop
adc
shrb
jo
scas
int
mov
loopne
fldenv
cld
je
mov
imul
push
outsb
mov
insb
das
jg
jns
sbb
jo
fcoml
sahf
data16
sbb
pop
iret
mov
cmp
fwait
push
lret
xlat
testl
jle
cmp
sub
pcmpgtb
lcall
les
sbb
adc
pop
cltd
xor
hlt
cmc
push
jp
into
mov
in
or
arpl
dec
sbb
xchg
fwait
cli
imul
out
xlat
inc
mov
out
lods
or
cli
callw
add
lods
jne
pop
dec
cmp
pop
call
or
imul
stos
sbb
in
inc
cltd
cmp
xchg
clc
sub
and
cmp
mov
std
xchg
sbb
mov
les
mov
cmpsb
cmp
leave
in
nop
mov
sub
mov
cmpsl
mov
push
adc
adc
pop
cmp
test
jns
outsb
popf
in
lea
nop
mov
mov
pop
out
jg
outsl
ds
sbbl
aas
mov
jno
test
inc
push
inc
sbb
scas
sub
fldt
test
andl
out
mov
pusha
pushf
cmpsb
std
movsb
scas
neg
ret
mov
mov
mov
and
outsl
mov
push
pop
mov
cmp
cld
aam
jbe
pushf
cmp
mov
cmpsl
fisubl
out
and
and
add
ret
sub
call
rol
sbb
pop
nop
test
push
in
cmpsb
and
mov
gs
add
pop
popa
cmp
xchg
ljmp
test
decl
frstor
pop
push
imul
test
frstor
in
inc
push
push
cmp
addr16
outsb
stos
inc
loopne
pop
add
sbb
xchg
insb
test
jo
dec
mov
or
add
cmp
jg
add
mov
pop
clc
add
add
cmp
mov
xlat
adcl
mov
dec
pop
out
cmpl
nop
lds
insl
dec
xchg
push
out
in
leave
xchg
jns
mov
notl
mov
shlb
dec
cld
in
mov
adc
pop
jp
test
addr16
testb
jge
xor
sub
pop
sub
and
mov
jg
push
rorb
pop
mov
ja
pop
pusha
xlat
pushf
jge
cmp
push
jle
inc
sbb
adc
and
mov
push
sub
mov
dec
jnp
push
cld
pop
cmp
mov
pop
aaa
xchg
daa
ret
cmp
sti
nop
inc
adc
sub
push
fwait
cltd
cli
scas
pusha
enter
cmp
sbb
shlb
insb
jp
xchg
dec
lea
cwtl
cmp
sbb
out
inc
inc
aas
xor
mov
xchg
leave
mov
insl
movsb
mov
xchg
pop
scas
lds
push
fiadds
jno
pop
add
sub
in
add
or
and
sbb
xchg
xorb
lock
dec
gs
movsb
ret
in
stos
cmp
lods
xor
addr16
scas
pandn
xor
xchg
adcb
push
pop
jno
enter
aad
daa
cmpsl
jmp
sub
push
shlb
icebp
inc
sub
test
sub
mov
and
ljmp
push
out
aaa
clc
xchg
loope
mov
push
movsl
xor
gs
fcoml
pop
ja
into
int3
jmp
xor
icebp
xchg
add
in
sbb
rcl
xor
rolb
jge
or
sub
sub
je
daa
jne
sub
jnp
and
loopne
loopne
sub
sti
int
ja
push
jecxz
les
or
mov
xchg
sbb
cmp
adc
add
stc
icebp
add
or
imul
mov
js
int3
scas
cmpl
mov
pop
fs
out
stc
repz
mov
outsl
addr16
inc
xor
dec
add
sbb
or
outsb
into
cmp
xchg
pushf
xor
cmp
out
jne
mov
adc
imul
xor
add
imul
jmp
loopne
jno
gs
jle
lds
push
in
mov
cli
mov
in
ss
enter
dec
inc
mov
fldl
insb
repz
xor
mov
popf
mov
push
fwait
adc
pop
xchg
nop
cwtl
xchg
in
aad
push
adc
adc
ss
mov
shlb
mov
testl
outsb
mov
sbb
inc
push
jb
mov
aas
push
fistl
mov
mov
pop
push
hlt
test
dec
addr16
cmpl
arpl
cwtl
sbb
std
insl
cmp
sub
icebp
insl
jmp
or
mov
xor
sub
mov
scas
inc
mov
jns
cld
call
add
or
push
loope
ret
sbb
es
pop
mov
aam
fs
sub
cmp
xchg
mov
les
sahf
hlt
sbb
scas
adc
in
icebp
lods
insb
je
popa
push
mov
ljmp
and
cmp
aaa
fisttpll
pop
loop
ret
outsb
mov
cltd
shlb
sub
packsswb
cs
das
mov
out
lret
stos
xor
pop
lods
ficomps
rcll
ret
sbb
mov
into
cwtl
and
out
loope
xchg
cmp
shlb
je
imulb
mov
sbb
add
cmp
push
fldt
inc
adc
or
and
jle
pop
dec
jg
divl
loopne
pop
stos
mov
mov
mov
mov
mov
jns
adc
out
test
mov
jmp
jne
inc
xchg
sar
mov
shlb
leave
fdivl
mov
push
push
or
cmp
fs
out
insb
xchg
cmpl
jle
mov
xchg
sub
add
mov
in
mov
stos
jnp
or
and
aam
stos
movsl
stos
rcll
dec
mov
je
pusha
push
mov
add
inc
pop
outsb
shlb
ret
imul
push
add
push
loop
dec
scas
ret
adc
imul
mov
xchg
int3
cmp
fiaddl
js
dec
mov
push
imul
arpl
imul
hlt
pop
mov
xor
repnz
popf
shrb
dec
fisubs
cld
int3
pop
inc
pop
add
leave
aaa
mov
adc
jge
lahf
shll
sarl
push
cltd
xchg
movsb
dec
push
daa
cmp
mov
aas
jo
lods
jae
push
inc
cld
push
js
jno
adc
in
xchg
out
jno
jge
cmp
sub
enter
in
std
lock
cmpsb
lods
adc
inc
andb
stos
ja
push
std
movsl
ficomps
cmp
sub
inc
inc
js
mov
movsl
loope
add
bound
loop
fsubr
pusha
pop
sahf
adc
xor
push
inc
sbb
xorb
xchg
mov
sbb
std
adc
cld
jne
sub
out
cmp
or
push
adcb
shll
pop
push
xor
sub
popf
int
inc
cltd
push
out
sub
sbb
mov
push
sbb
mov
test
adcb
test
loop
sahf
lods
mov
sbb
in
mov
pusha
push
ror
jne
clc
mov
cmc
fadds
adc
and
int
push
fs
and
stc
stos
aad
loop
and
add
and
fs
in
into
push
dec
or
mov
shlb
cli
sarl
out
xchg
arpl
xlat
dec
arpl
adc
adc
stos
push
imul
jp
mov
xchg
gs
mov
sti
or
in
sbb
sub
pop
mov
pop
and
cmp
out
xchg
mov
cltd
adc
lret
ret
out
or
add
add
negb
test
adc
xor
cmc
dec
or
cli
inc
lea
aad
sub
fidivl
orl
out
aas
repnz
lds
xor
inc
sub
es
cmc
mov
fcmovnb
imulb
orl
fidivs
fldt
adc
in
mulb
das
roll
repnz
mov
clc
xor
or
fimuls
mov
jno
mov
insl
lret
lret
jge
cld
sub
xor
outsl
enter
adc
fdivrl
insl
icebp
ds
outsl
daa
push
ret
inc
dec
cmpsb
aam
mov
stc
shlb
outsb
pop
into
fwait
adc
movsl
adc
mov
xchg
fsubs
xlat
lret
das
popa
push
das
ljmp
lahf
clc
jne
test
mov
mov
xchg
cmp
lods
into
sbbb
int
cmpps
push
or
mov
out
sub
mov
pop
jmp
shrl
xorl
lods
jbe
mov
mov
sbb
cmp
xlat
xor
pop
mov
sub
push
jle
out
fwait
jb
lock
xchg
testb
dec
jb
cmp
arpl
gs
mov
xchg
hlt
dec
pop
in
inc
inc
jns
inc
dec
bound
jp
mov
mov
jne
and
dec
ret
mov
dec
stc
mov
lods
sahf
jp
lret
add
sub
sub
das
adc
orl
test
jmp
sti
negl
fbstp
mov
in
mov
jle
inc
popf
jnp
jne
insb
shr
add
push
jle
stos
sbb
dec
push
cmpsl
dec
test
fwait
jnp
push
adcb
inc
sarb
inc
pop
movsl
mov
ret
xor
mov
out
cmp
inc
scas
es
and
std
adc
mov
xor
fmull
push
rorb
dec
aaa
xchg
arpl
mov
or
jge
mov
shrl
lds
lods
fiadds
and
pop
and
sbb
or
jmp
add
call
xchg
or
in
xchg
movsb
fsts
cmpl
enter
enter
jp
xor
pop
dec
jns
sub
jl
mov
popf
cmp
push
lret
out
ror
push
mov
cmpsb
xor
push
test
rcrb
pop
and
pop
mov
ds
jp
insb
decb
loope
jbe
push
sub
pop
push
das
pop
js
xchg
lcall
pop
dec
xor
std
add
sbb
sbb
mov
push
shl
sub
add
mov
sub
cs
fsubrl
rcr
lcall
pop
sub
sbb
adc
jmp
ljmp
sub
hlt
jg
sbb
subb
in
test
add
mov
jle
pusha
in
lret
xor
inc
pop
jmp
cmp
repz
adc
out
fdivl
loop
cli
pop
outsl
and
loope
cmc
stos
je
into
xor
sti
cmp
mov
jmp
out
cmp
in
lods
mov
jae
add
ss
test
push
adc
mov
lock
loopne
jbe
gs
ss
or
in
xchg
jp
fildl
sub
xchg
xlat
inc
cltd
sbb
ret
sbb
arpl
and
aad
xchg
fld
pop
icebp
inc
sub
in
dec
imul
pusha
fdivs
push
jmp
in
pushf
clc
pop
add
iret
mov
and
mov
jle
sbbl
leave
sbb
cmpsl
je
sti
repnz
out
xorb
test
inc
aas
daa
inc
mov
push
fcomi
jp
dec
cmp
inc
and
push
lods
ss
xchg
std
mov
fs
cmp
and
out
push
mov
push
rol
mov
test
rorl
cmp
cld
push
adc
icebp
and
mov
dec
xlat
cwtl
push
insl
fadds
es
aam
ss
sub
cmpsl
dec
pop
in
lods
adc
and
hlt
out
fs
inc
div
popa
sbbl
or
mov
xchg
fstp
out
push
mov
mov
popa
or
test
xchg
mov
leave
push
in
mov
out
nop
lea
stos
adc
inc
pop
add
lods
roll
xchg
sbb
and
push
or
mov
arpl
xor
ja
xorl
xor
sub
mov
imul
push
and
fwait
mov
flds
lods
push
mov
ja
imul
and
lret
mov
data16
mov
adc
bound
mov
xchg
lret
pusha
popa
dec
movsl
mov
mov
outsb
repnz
ja
inc
jp
push
addr16
or
mov
daa
sub
mov
mov
xchg
adc
xor
cmp
aam
or
in
adc
jle
mov
jnp
mov
out
addr16
mov
push
out
stos
mov
ret
push
inc
loop
jae
ret
sub
pop
fdivl
daa
ret
ror
push
out
mov
das
mov
mov
xchg
sbb
add
and
lods
xor
inc
dec
idivb
push
aaa
imul
arpl
mov
leave
and
mov
pusha
add
shl
ljmp
pop
cld
pop
lea
mov
xor
push
add
and
sbb
jge
pusha
stos
jbe
iret
mov
cwtl
mov
and
or
pushf
scas
lods
ret
leave
jo
pop
mov
push
ds
fmull
xchg
sarl
pop
jno
push
push
cmp
push
andl
cmp
enter
in
lret
icebp
cmpsb
mov
ljmp
pop
mov
push
mov
xchg
clc
and
lcall
mov
push
sub
mov
mov
pop
xchg
mov
pop
in
dec
dec
adc
pop
pop
add
ss
sbb
xor
sbbb
push
mov
sahf
adc
ret
sub
xor
fmuls
sbb
or
sub
int
mov
in
push
sub
cmp
imul
test
pop
orb
test
add
sahf
repnz
insl
mov
add
testl
dec
xorb
pusha
lret
adc
fs
fdivr
sbb
loop
add
outsl
add
gs
enter
in
into
push
jb
or
jne
cmp
push
sar
aaa
mov
fimull
movsl
dec
mov
hlt
dec
xchg
add
test
mov
test
adc
inc
dec
loopne
pop
jmp
orl
ret
in
repnz
repnz
inc
xlat
test
repnz
xor
loopne
movsl
fincstp
ss
aas
scas
push
dec
enter
sub
aad
dec
jno
cmp
jmp
fmuls
mov
jecxz
pop
push
mov
mov
ljmp
jecxz
push
lret
aaa
pop
dec
pop
out
jb
jmp
push
inc
icebp
bound
cmp
cmp
dec
std
dec
sub
or
adc
imul
pop
addr16
xlat
cmp
fiadds
outsb
and
cmpsl
inc
mov
jmp
subb
int3
xchg
mov
mov
les
cld
orb
icebp
clc
sahf
push
mov
mov
dec
stos
insl
mov
sbb
ret
sbb
aam
sbb
cmpsl
rorb
push
pop
or
ret
mov
mov
sarb
xchg
push
lods
lods
divb
popa
cwtl
push
ljmp
push
clc
jmp
sbb
jmp
cs
ja
jns
xor
test
add
cltd
gs
aam
fs
insl
jo
cld
lods
xchg
test
ja
fcmovne
pop
scas
or
pop
push
lahf
sbb
mov
test
push
jl
and
or
aas
push
xor
add
push
sub
out
mov
negl
mov
les
cmc
or
repz
dec
pop
imul
icebp
pop
xor
mov
negb
in
or
test
out
jae
or
jne
add
mov
pop
mov
dec
mov
or
or
ja
out
mov
sub
inc
les
repz
push
pusha
inc
iret
jnp
push
shrb
adc
mov
push
and
inc
stos
push
sahf
push
and
dec
arpl
or
aad
out
xchg
pop
adc
ret
inc
iret
ja
into
adc
jle
scas
in
mov
imul
mov
outsb
iret
xchg
roll
in
inc
lret
jb
push
sahf
imul
arpl
xchg
data16
inc
xor
xor
or
sar
lds
jae
mov
fcompl
mov
int3
sbb
add
xor
cmc
mov
jecxz
ss
adc
jge
push
xchg
mov
ret
and
ret
jp
xor
and
lret
dec
popa
add
jno
jae
cmp
sahf
sub
mov
jl
in
mov
cmpsb
ss
ss
sub
das
shrl
jbe
and
and
and
sarl
test
jg
sub
movsl
pop
loope
enter
jnp
pop
aad
in
js
popf
lea
mov
ljmp
movsb
cld
sbb
add
subb
scas
fisubrl
sub
xchg
sub
divl
push
xchg
dec
lcall
sbb
xlat
sub
push
add
and
inc
mov
repz
push
or
bnd
inc
daa
andb
test
ss
xchg
inc
daa
sbb
jns
mov
out
jo
mov
lret
popa
test
cmp
cmp
jns
outsb
adc
ror
stc
iret
cmp
add
xor
xor
les
cmp
scas
or
add
cli
push
pop
out
adc
jne
mov
dec
data16
or
jno
mov
imul
pushf
fnstsw
adc
sub
pop
mov
inc
sti
adc
test
stc
sub
adc
cmp
cwtl
xchg
sbb
jmp
add
fldcw
mov
inc
push
jae
dec
daa
ret
jnp
add
vpminub
pop
cs
cmpl
dec
repz
jge
sub
mov
adcb
mov
iret
pop
outsl
jecxz
sbb
je
mov
aam
jnp
dec
mov
mov
or
mov
pop
xchg
pop
fisubs
pop
dec
adc
inc
adcl
inc
mov
push
in
cwtl
pop
xchg
xchg
or
mov
and
mov
mov
jl
icebp
das
jnp
stc
lock
xchg
add
or
dec
mov
add
or
icebp
iret
roll
mov
xchg
inc
insl
cmpsb
inc
es
ds
ret
hlt
data16
aam
push
mov
or
sbb
sub
or
mov
sub
mov
sbb
test
scas
adc
xchg
hlt
add
mov
push
cmp
shll
sbb
pushf
sub
pandn
push
fwait
lahf
sub
push
fmuls
out
test
pop
pop
or
mov
push
sbb
cltd
flds
adc
rorl
aaa
mov
mov
sbb
std
xor
adc
xchg
mov
add
bound
add
addr16
fwait
pushl
or
loope
inc
fimull
jge
and
dec
pop
xchg
mov
mov
sbb
inc
xchg
loope
outsl
in
in
popa
jns
sahf
arpl
push
out
out
push
je
mov
mov
sbb
adc
push
fnsave
mov
hlt
mov
test
pop
addr16
out
or
and
mov
pop
bound
cmp
adc
mov
pop
negl
jnp
dec
mov
and
pushf
enter
jnp
push
mov
push
lret
rorl
inc
icebp
test
ret
hlt
iret
xchg
dec
adc
outsl
push
xor
imul
pop
sbb
lods
lea
adc
lcall
int
or
push
xchg
cmp
test
leave
jo
scas
mov
sbb
lds
mov
pop
jmp
push
int3
or
dec
add
pop
orl
mov
cmpsl
sbb
inc
jge
mov
jbe
sahf
popa
push
aad
lcall
mov
scas
push
pop
jmp
outsl
imul
add
ja
shlb
jl
iret
fdivs
mov
lock
mov
imul
cltd
pushf
mov
mov
xchg
inc
test
dec
lods
daa
lahf
cmp
add
movsl
sub
ds
sar
cmp
sti
sub
arpl
mov
mov
pop
adc
in
js
jmp
fwait
jb
xor
dec
lret
data16
cmp
addb
fwait
rorb
out
hlt
outsb
mov
jmp
out
movsl
fsubrl
popf
dec
push
fisubs
in
lahf
in
pop
or
cmp
push
repnz
insl
mov
pop
scas
mov
es
loop
addb
pop
sahf
cmp
xchg
pop
cltd
rorb
movsb
mov
testl
or
ss
rolb
stc
xchg
movsl
outsl
ret
xor
cmp
fsubr
and
or
test
insb
outsb
repz
lret
inc
out
inc
daa
mov
mov
push
cli
dec
mov
adc
fwait
dec
imul
jns
mov
xchg
shll
xlat
je
dec
sti
les
xchg
in
enter
and
subl
add
cmp
and
lods
cwtl
or
cmp
neg
rcrl
dec
xchg
nop
ffreep
adc
add
xor
mov
push
or
call
mov
movsl
sbb
mov
lods
dec
dec
test
jb
mov
mov
daa
in
inc
dec
mov
push
fildl
jbe
subl
jns
cwtl
ret
std
mov
pushf
imulb
sarl
and
push
xchg
mov
pavgb
das
pop
mov
lock
mov
cmp
cld
jp
icebp
cmpsb
sub
mov
mov
insl
fisubrl
mov
es
cld
ret
xor
aam
out
sub
pop
popf
shlb
clc
fisubl
sarl
aaa
push
mov
xorl
movb
xor
cmp
dec
xchg
lds
add
pusha
test
xchg
cltd
shl
mov
xchg
mov
jbe
fistl
mov
icebp
push
add
sbb
or
sub
jns
dec
xchg
test
aad
dec
xacquire
repz
pop
fsubs
or
jg
xchg
jne
pushl
repz
lret
push
or
fwait
cs
inc
jno
decl
pop
pop
ja
lcall
jp
in
pop
jae
xchg
xor
in
and
jns
pop
aam
iret
out
xor
mov
mov
push
mov
pop
mov
cld
push
arpl
jg
addr16
hlt
or
ljmp
inc
sub
pop
push
xchg
inc
fwait
outsb
fbstp
mov
pusha
jns
adc
bound
add
sbb
dec
insb
jle
dec
and
mov
inc
push
mov
aaa
sub
push
mov
jae
pusha
mov
pop
sbbl
dec
adc
xor
dec
xor
imul
and
lds
inc
leave
testl
inc
push
xchg
cwtl
arpl
fdiv
std
lahf
leave
xchg
repnz
adc
cmp
xor
lds
push
ja
sbb
int3
repz
add
sub
pop
inc
push
aaa
jae
mov
and
jge
xor
jbe
xor
push
and
aas
movsb
add
je
and
repnz
xor
ss
adc
out
push
dec
aas
sub
jl
fstpt
xchg
and
cmp
push
enter
in
addb
cmp
mov
push
mov
test
sbb
sbb
inc
inc
xor
out
pop
fwait
cmp
adc
mov
stos
lods
push
sahf
pop
pop
push
lods
movsb
js
cmc
push
popa
push
mov
pop
mov
xor
jl
sbb
adcb
mov
arpl
icebp
outsb
jmp
imull
aad
loopne
fldenv
push
xor
add
pop
mov
fcmovne
and
and
and
mov
mov
mov
mov
ds
mov
sbbb
fwait
bound
test
fcmovu
sbb
out
mov
jae
sarl
testl
sarb
lcall
aas
adc
fsubs
cmpsb
stc
cmp
pop
adc
ds
xor
imulb
xor
mov
pop
repnz
scas
das
xor
sbb
shl
dec
out
std
aad
and
sub
jge
out
fucomi
movsb
imul
dec
pop
pop
rcrl
inc
jno
gs
xchg
lock
sti
jae
xchg
in
xor
shll
sahf
mov
sub
sbb
outsl
jns
repz
xchg
fstps
lcall
or
aad
cli
mov
mov
mov
movsb
push
mov
sub
das
pop
pop
call
mov
lea
lock
aad
cmp
enter
jl
loope
ret
jb
repz
jmp
inc
iret
xchg
xchg
push
addl
movsb
mov
jo
cwtl
jge
cltd
std
push
test
scas
jmp
inc
and
int3
push
mov
mov
xchg
pop
lock
mov
push
sub
fsubs
lret
testb
cld
add
js
jge
cltd
mov
mov
fcoml
es
out
ret
adc
xchg
aam
leave
xlat
sub
cmp
rolb
sbb
lea
cmpb
outsl
movsb
lods
out
in
shll
sbb
fidivl
loopne
pushf
call
movsb
push
rolb
test
inc
or
add
mov
jbe
pop
sbb
out
sbb
out
stos
int3
and
scas
xchg
mov
pusha
inc
mov
sub
add
test
xchg
sti
dec
pop
mov
pop
mov
scas
out
adc
shrb
call
repz
sub
pushf
push
lods
cwtl
outsb
fwait
pop
aaa
inc
or
cmp
dec
xor
ja
mov
pop
or
push
mov
mov
je
in
scas
xor
mov
adc
adc
jne
inc
mov
mov
pop
push
mov
xlat
dec
jp
out
sti
add
or
jp
out
and
outsl
xchg
inc
scas
jnp
push
popa
je
sbb
pop
fists
arpl
dec
in
insl
ret
in
mov
lret
add
jmp
in
pop
stos
push
dec
push
push
loop
ds
pop
xchg
xchg
push
push
xchg
push
jae
jb
inc
pop
pop
nop
pop
mov
popa
test
xchg
in
adc
mov
push
mov
mov
adc
adc
cmp
js
loopne
dec
add
mov
fwait
inc
push
adc
hlt
and
leave
std
or
mov
dec
sbb
fidivs
xchg
pop
dec
inc
test
push
shll
push
dec
aaa
xor
xchg
sbb
testb
push
sarl
push
jae
out
movsb
nop
cmpsb
dec
cmp
std
jmp
insb
push
scas
sub
cmc
jo
scas
xorl
jb
dec
scas
in
jl
mov
pop
cmp
push
cltd
daa
mov
imul
lret
mov
out
adc
repz
out
push
adc
fldt
movsl
dec
and
xlat
jg
sub
pop
into
loope
rorl
push
ds
pop
xchg
adc
mov
outsl
imul
test
add
out
sbb
adc
sarb
mov
outsb
dec
xor
sub
in
faddl
lcall
or
mov
int
leave
adc
and
mov
cmc
insb
mov
xor
and
and
mov
addl
xchg
push
sbb
xchg
mov
xlat
mov
testl
xor
ss
inc
int
cmpsl
and
xchg
jae
stc
hlt
imul
outsl
orb
inc
cs
cmc
mov
pushf
or
mov
ret
xor
out
cli
add
lret
dec
shrb
add
mov
push
xor
adc
mov
imul
iret
mov
loopne
popa
sahf
gs
imul
in
sahf
cmp
mov
adc
xlat
andl
xchg
xor
repz
test
or
sti
add
negl
inc
mov
push
aad
cmpsl
mov
mov
sub
dec
lea
xor
pop
shlb
movl
icebp
in
xchg
add
xlat
ljmp
jo
dec
cmp
aas
lods
dec
inc
pop
mov
inc
push
mov
pop
daa
enter
sahf
dec
aam
pop
sbb
push
movsb
mov
jmp
cwtl
cmp
std
pop
or
rcrl
loopne
and
aad
mov
xor
sahf
lock
divl
mov
lods
pop
cld
sub
jmp
mov
lahf
inc
rorb
fildll
subl
aam
add
sub
negb
pop
clc
loope
mov
mov
iret
or
mov
scas
inc
fldcw
sar
ljmp
psubb
mov
iret
push
xorl
insb
mov
fwait
cltd
inc
outsl
nop
add
out
push
sub
test
out
jg
pop
stos
mov
fwait
iret
shll
add
xchg
or
rcl
xchg
mov
mov
cli
nop
add
aaa
adcb
xor
inc
dec
flds
push
lret
dec
fwait
mov
or
mov
outsb
dec
and
out
ja
dec
sbbl
inc
mov
xchg
into
loope
in
lea
rol
cmp
adc
out
out
xchg
sub
jne
jbe
dec
adc
rorl
xlat
mov
jg
jp
adc
jmp
or
out
push
out
test
xchg
or
jmp
in
movsb
dec
fildll
popf
pusha
scas
inc
or
jo
cltd
jle
push
ljmp
sbb
stos
lret
push
and
mov
test
pop
push
adc
dec
jae
enter
vmulps
insb
inc
ret
iret
repz
cltd
adc
sbb
shll
mov
xchg
sti
out
sbb
pop
test
sub
inc
mov
or
pop
pushl
arpl
hlt
insb
push
mov
je
xor
outsl
call
shrb
lds
jbe,pt
js
adc
leave
test
movsl
inc
lret
mov
icebp
cltd
mov
jge
jbe
mov
pushf
movsb
sbb
cmp
aas
cmp
pop
out
jo
hlt
mov
lods
mov
dec
sbb
outsl
or
pop
aad
or
xchg
enter
in
dec
aaa
lret
aaa
pop
inc
imul
fists
xchg
nop
lahf
xchg
mov
and
lret
movsl
push
dec
sbb
xor
mov
sub
xchg
mov
lcall
push
xchg
inc
pop
roll
js
sahf
mov
scas
jb
in
enter
and
mov
cmpb
sub
sbb
adc
mov
in
mov
hlt
fsubrl
insl
mov
mov
lcall
sub
cs
repz
sti
inc
and
shl
repnz
repnz
inc
aaa
jg
int
adc
das
test
inc
and
movsb
mov
shr
sub
test
add
cmp
test
or
divb
gs
stos
rcrb
inc
inc
add
pop
pop
outsl
xor
cmc
insl
into
test
add
cmp
lods
in
xor
mov
outsl
out
cmc
xrelease
jnp
lods
sub
addw
lods
cmp
jno
mov
or
adc
xchg
loopne
inc
gs
daa
fstl
sti
rorl
test
gs
xor
test
sarb
and
or
xchg
cmc
xchg
cmpsl
dec
pop
pop
mov
push
inc
sahf
mov
insb
es
jo
pop
aad
mov
stc
jmp
sbb
adc
shlb
movl
adc
fildl
jecxz
roll
adc
dec
mov
fnsave
incb
inc
js
sub
fldl
pop
push
fisttpl
test
dec
mov
mov
pop
mov
jmp
popf
std
movsl
adc
xor
add
and
xor
stc
aas
mov
imull
xorl
aam
mov
icebp
sub
sbb
dec
mov
and
ret
xor
aam
mov
sub
pop
cltd
shrb
ds
pop
cmpsl
loopew
ret
xor
and
adc
pop
aad
lods
les
popa
or
ljmp
and
mov
mov
inc
inc
test
ret
js
insl
add
mov
cvtdq2ps
pop
push
pop
repz
loop
jp
stos
rcrb
add
lock
sbb
movsb
cld
test
pop
dec
daa
int
xchg
mov
mov
inc
xchg
scas
testb
adc
add
cmp
push
repz
xchg
fwait
mov
loope
inc
ss
dec
pop
aaa
ja
outsb
jno
andb
es
clc
xchg
sbb
mov
lcall
mov
aad
cmp
jp
nop
fistpl
add
cmc
mov
dec
xchg
jp
jmp
xchg
or
inc
dec
out
pop
aaa
xor
cmp
push
mov
fisttps
rolb
jle
inc
sarl
leave
xchg
insb
mov
adc
stos
cmp
sub
inc
inc
pusha
popf
lods
or
push
xlat
mov
bound
inc
sbb
lret
daa
mov
iret
push
inc
adc
xchg
cmp
out
scas
fcmovnb
xor
movsl
pop
sbb
jmp
xchg
test
push
fcmovu
clc
dec
inc
inc
popf
mov
push
or
pop
popa
aad
outsb
aaa
xor
jmp
lods
bnd
mov
test
fld
and
mov
jg
int3
mov
add
mov
aaa
mov
in
sbb
test
jbe
stos
scas
push
adc
movsb
cmpsb
popa
ljmp
mov
scas
out
xchg
jo
dec
add
mov
xchg
nop
xchg
cmp
cmpsb
mov
jno
xor
cmp
ret
mov
jp
xor
out
inc
clc
test
push
jmp
daa
repz
xchg
hlt
jae
mov
mov
movsl
pop
fsubrs
cmp
mov
out
push
cwtl
mov
adc
mov
xchg
pop
pop
cmpsl
cmp
add
mov
sbb
cmc
or
mov
mov
add
adc
daa
sub
scas
jg
cmp
ljmp
dec
subb
loop
int
shl
incb
cmp
xchg
inc
dec
mov
loopne
mov
insl
mov
or
sub
mov
and
sbb
sarl
popf
roll
cmp
jg
dec
fcomps
scas
cmp
enter
inc
test
stc
bound
jmp
outsb
pop
xor
fcoms
push
sub
int
in
jle
cli
imul
mov
test
pushw
into
call
adc
lret
add
cmp
push
xchg
loopne,pt
jg
gs
dec
incb
repnz
sti
xorb
mov
idivl
xlat
incl
pop
add
sbb
mov
or
and
nop
flds
mov
dec
add
mov
dec
push
sub
cmp
jns
jmp
mov
pushf
adc
aad
pop
cmp
out
cmp
push
lea
ficomps
jecxz
jmp
je
test
dec
daa
jae
jb
shll
aas
ljmp
inc
fs
or
dec
stos
repnz
pop
cmc
dec
mov
insb
movsl
cwtl
scas
stc
jb
dec
scas
cmp
js
mov
in
mov
pop
loop
das
ret
push
lock
ret
dec
mov
mov
inc
xor
orb
add
lcall
add
dec
mov
xchg
insl
sub
es
jge
mov
imul
xchg
xor
and
jmp
cs
das
push
pushf
popa
and
call
dec
and
push
or
scas
test
jnp
add
lds
push
loop
xchg
xchg
das
sbb
inc
shrl
cltd
dec
ds
mov
push
sbb
out
inc
fmuls
dec
mov
mov
nop
iret
xchg
or
mov
out
add
push
add
xchg
or
fwait
ljmp
inc
int
push
or
pusha
pop
cmp
or
xchg
insb
mov
ds
bound
xchg
out
lods
mov
xor
dec
ficoml
mov
jo
mov
pop
cmp
jp
je
addr16
jmp
adc
out
mov
popf
xchg
mov
inc
xchg
xchg
jle
fildll
jb
in
mov
jle
pop
fwait
jnp
push
xchg
insb
sub
aaa
and
fistps
pushf
and
jg
mov
rcrl
push
lcall
inc
sub
mov
iret
mov
adc
mov
ds
imul
sbb
dec
jge
fninit
in
xchg
cmp
lds
test
icebp
lods
or
pusha
aaa
xchg
arpl
cmpsl
hlt
add
leave
bound
cli
mov
mov
je
ficomps
pop
pop
roll
xor
add
shlb
mov
sbb
or
out
jge
adc
push
pusha
mov
movsb
xor
in
and
pmuludq
mov
adc
jae
bound
lods
add
sbb
out
sub
cmp
sub
popf
cmpsl
jge
mov
or
sbb
sahf
cmpsb
dec
or
inc
xchg
xchg
push
mov
mov
push
push
or
and
cmp
jnp
stos
cmp
arpl
sub
addb
insl
push
cmp
dec
imul
std
and
push
or
repnz
sub
sbb
loope
filds
pop
ror
test
ja
fisubrl
xchg
mov
faddl
into
add
pop
test
sub
xchg
mov
add
and
push
mov
loopne
push
mov
add
add
mov
test
jne
sbb
mov
mov
jecxz
sbb
idivl
aad
fcomps
bound
or
xchg
pushf
dec
fs
mov
sbb
loop
negl
sbb
dec
outsb
cmc
jecxz
mov
or
movsl
gs
cld
inc
xor
subb
cmp
cmpsl
mov
fwait
and
mov
mov
lret
push
sbb
push
fwait
adc
jmp
cmp
stos
jns
sbbb
sti
das
and
in
filds
mov
push
sbb
fisttpl
sbb
jnp
repz
or
les
or
les
dec
popa
flds
aad
pop
test
lock
dec
jmp
repz
adc
push
movl
cwtl
loope
sub
add
iret
je
or
inc
jb
aas
mov
inc
jmp
hlt
pop
mov
cli
fldt
mov
sbbl
jae
cwtl
imul
adc
pop
or
stos
mov
out
and
das
mov
popf
lock
cmp
mov
aad
mov
lret
mov
add
lods
adc
fdecstp
in
mov
pushf
stos
and
pusha
dec
insl
adc
jg
dec
mov
cltd
pushf
pop
sub
or
rcl
rcrb
in
ret
add
and
or
inc
mov
lcall
ljmp
mov
fstl
loopne
push
int3
add
fldenv
pop
test
ja
add
push
jp
sbb
mov
jbe
sahf
out
test
outsb
stos
mov
inc
sarl
mov
les
outsb
dec
cmc
outsl
xor
add
mov
fldt
pushf
iret
mov
call
sbb
add
cmp
xor
lock
imul
sahf
cmp
mov
lods
cwtl
push
xchg
mov
and
jns
cmpsb
popf
bound
shll
dec
hlt
jne
dec
dec
mov
lret
pop
push
nop
mov
dec
std
jp
mov
addr16
jno
or
mov
filds
insb
mov
repnz
xchg
mov
int3
sbb
pusha
subb
in
or
xor
mov
test
stos
and
sahf
push
ficoms
mov
cli
adc
pop
mov
xor
mov
ret
mov
adc
stc
scas
mov
inc
or
cmpsb
orb
inc
xor
dec
xchg
call
imul
out
sub
dec
xor
leave
fnop
repz
daa
scas
sarb
xor
add
mov
add
mov
add
mov
sbb
popf
aaa
cs
fnstcw
add
and
jp
movsb
mov
mov
and
sub
idivl
in
xor
push
xchg
push
push
jno
dec
les
mov
adc
enter
in
add
and
inc
push
jb
push
jg
mov
push
jnp
push
cmp
lahf
hlt
mov
mov
ds
inc
test
xchg
loop
sub
aaa
push
loope
inc
push
ret
sbb
mov
fstpt
jno
pop
and
sub
test
xchg
fcompl
xorb
shrb
in
xchg
outsb
fidivrl
sub
xor
and
pop
add
mov
int
inc
addl
mov
ja
add
push
mov
dec
mov
xor
jg
andb
pop
test
sub
or
sbb
push
movsl
shrl
inc
idiv
ds
aad
sub
dec
bound
fs
pushf
inc
loop
mov
popf
xor
jnp
into
cs
xor
cmpsb
loopne
cmp
popa
add
fwait
cmpsb
cmpsl
cli
iret
xchg
out
inc
adc
fucom
data16
out
pop
divb
out
mov
pop
pop
jne
loopne
in
fs
inc
incb
aad
dec
out
mov
stos
mov
sub
orl
aad
rcrb
ds
adc
cmp
fcomp
scas
add
inc
xlat
jg
dec
rclb
aad
inc
mov
jmp
pop
push
sti
in
pop
adc
inc
rcrl
outsb
popf
movl
jnp
lea
lock
jecxz
call
xor
adc
adc
aas
sub
cmpsb
inc
jb
movsl
pop
push
xchg
pushf
xchg
mov
and
adc
pop
mov
dec
cwtl
and
xor
lcall
rcll
test
inc
test
sbbl
insb
mov
jg
mov
test
and
cld
fsubrs
dec
mov
fwait
stos
dec
stos
mov
insl
notl
out
ret
fucomp
test
fs
sub
push
and
movsb
inc
sub
add
js
xchg
pop
in
and
das
test
mov
add
pop
sub
sbb
xchg
ret
aad
fnsave
add
push
pop
mov
sbb
in
sbb
mov
js
add
inc
and
out
or
ja
jb
push
mulb
adc
jmp
xchg
dec
test
or
xchg
orb
xor
xchg
lock
out
xlat
mov
mov
pop
add
fcompl
test
inc
sti
cmp
lock
clc
pop
mov
int3
mov
out
enter
aas
add
jns
cmp
bound
sahf
out
imul
mov
faddp
jne
sub
dec
mov
out
mov
push
xchg
addr16
jge
or
cmpsb
mov
dec
mov
mov
repnz
or
cmp
add
jmp
aaa
pusha
sbb
sub
mov
pushf
jle
imul
add
and
fists
push
sbb
gs
and
icebp
push
and
sti
jae
rolb
jae
lret
mov
mov
adc
ret
or
scas
add
int3
imul
sbb
mov
ret
out
push
jl
inc
data16
sub
hlt
cwtl
aaa
or
mov
popf
dec
rcl
stos
lds
test
int3
jne
or
or
mov
sbb
fdivl
and
pop
push
decb
iret
cmp
push
and
mov
jo
shlb
insl
je
flds
data16
mov
daa
fwait
std
mov
cmpsl
xor
in
ljmp
inc
movsl
cmp
push
dec
xchg
test
push
dec
lcall
loop
cmp
roll
sub
rcll
pop
mov
push
out
pop
int
xchg
js
filds
lock
add
in
sbb
jle
cmpsl
cmpsb
rolb
hlt
test
test
outsl
mov
cmpsl
push
aas
jne
lcall
pop
sub
loopne
push
pop
stc
add
mov
ss
into
rorb
aas
xchg
pusha
cmpb
lods
sahf
lods
jp
sbb
mov
push
fists
lret
shl
mov
cmp
xchg
int3
mov
xor
xchg
stc
xchg
cwtl
outsl
fcmovnb
shll
or
cmc
jno
push
into
adc
insl
cmp
lcall
add
out
adc
lods
frstor
cmpsl
add
adc
adc
lahf
subl
jae
pop
jnp
push
loopne
inc
jno
nop
pusha
std
imul
sub
push
xchg
dec
xlat
mov
add
sbb
add
repz
rol
inc
dec
and
out
rolb
jecxz
dec
pop
push
xchg
nop
fcoml
aad
out
cs
push
jmp
fistpll
adc
jb
movl
add
out
push
jecxz
int3
lods
je
sbb
dec
mov
jb
sbbl
jp
inc
in
cmp
pop
idivb
push
dec
imul
or
adc
mov
or
cwtl
fisttps
jecxz
inc
dec
mov
movsl
sub
icebp
je
aad
data16
jae
jp
ljmp
mov
lea
sub
nop
ss
cld
add
and
mov
lcall
insl
fiadds
sti
ret
insb
pop
cmp
das
inc
sub
dec
or
ja
es
and
mov
repnz
mov
sbb
cmp
mov
ljmp
xor
decb
jnp
push
cli
xchg
mov
adc
es
imul
cmp
sub
xchg
add
cwtl
out
outsb
and
pop
cmpsl
pop
mov
jg
push
rcrl
outsl
cmp
in
inc
mov
xchg
push
bt
aaa
adc
or
xchg
enter
mov
add
jg
rcrb
and
inc
xchg
sub
sbb
sbbl
adc
mov
insl
adc
psrld
arpl
fldenv
out
dec
adc
test
push
push
jecxz
adcl
dec
leave
aaa
mov
fucom
adc
dec
shll
or
lds
shrb
insl
xorl
add
add
jmp
or
fcmovnu
or
cli
pusha
mov
ljmp
pusha
sub
xchg
fstpt
dec
adc
call
mov
dec
stos
mov
jecxz
dec
jae
jno
inc
dec
mov
adc
jae
iret
into
aaa
adcl
fdivl
scas
add
imul
sbb
imul
inc
inc
pop
outsb
push
cmp
jno
arpl
xchg
popa
leave
or
repnz
cs
icebp
xor
mov
inc
cmp
arpl
jge
pusha
mov
mov
add
fcompl
cmp
xchg
mov
push
dec
fistl
cmp
lods
add
fimuls
je
lods
cmpb
sbb
mov
jl
pusha
js
jae
fdivrl
or
repz
lcall
in
shll
int3
inc
xor
jb
adc
pop
loopne
loope
ret
lahf
xor
push
and
sbb
jne
xchg
ds
sarl
icebp
sub
sub
push
or
jb
xchg
push
mov
lcall
fsubrp
mov
int3
xor
mov
lods
inc
push
sbb
cmp
sbb
inc
popl
test
or
mov
push
faddl
jle
lcall
fldt
sub
int
pop
ds
or
lds
cltd
inc
mov
sub
jg
dec
xor
sbb
push
jmp
sbb
push
pop
rcr
or
pop
jl
idivl
adc
dec
les
ss
add
cmpl
stc
ds
push
loop
nop
les
in
xor
cmc
cmp
ror
hlt
cld
dec
or
adc
dec
pop
repnz
xor
addr16
add
ljmp
adc
adc
cmp
adc
das
ret
imul
gs
push
sbb
mov
mov
cmp
dec
in
and
nop
sub
pop
or
sti
mov
cmp
insb
sbb
les
repz
sbb
dec
add
fstps
jnp
dec
jle
mov
mov
xchg
aad
jmp
sbb
stos
pushf
push
test
adc
rol
add
mov
sub
xchg
ljmp
je
sahf
and
mov
xor
inc
decl
sbbb
and
cli
mov
dec
push
scas
icebp
andl
scas
mov
lahf
inc
cwtl
lcall
testb
and
repz
cmpsl
and
das
push
aas
lahf
lock
sbb
cmpsb
mov
push
cld
cs
ss
pop
out
idivl
cltd
mov
lret
pop
arpl
xchg
std
aad
sti
or
sub
cmpsl
cld
pop
inc
jno
mov
stc
or
mov
enter
fstpt
jle
aas
ljmp
sar
cmp
sbb
test
mov
mov
in
pop
test
mov
cltd
mov
and
insb
dec
ficoms
fst
xchg
dec
cmp
out
rcl
inc
stos
push
jmp
inc
rol
adc
sbb
aam
xchg
dec
test
adc
dec
sub
push
xchg
fwait
into
mov
mov
jecxz
xor
dec
aad
out
outsb
add
and
cli
fwait
cmpsb
mov
mov
mov
inc
or
xchg
cwtl
ja
enter
daa
mov
jne
xchg
test
aaa
in
test
jns
push
pop
bound
out
sub
xor
sbb
sub
movsb
pop
mov
cmp
sarl
test
lret
or
xchg
push
inc
bound
int
add
xlat
cmpsl
xchg
fbld
inc
pusha
push
lds
lcall
jnp
and
insb
pop
mov
stos
jl
adc
mov
outsl
dec
mov
cmpsb
add
jae
pop
sahf
inc
push
pop
xchg
pop
cmp
fcmovnb
xchg
iret
sub
push
call
scas
lret
imul
les
sbb
xchg
aaa
popf
ficompl
push
inc
shrl
or
insb
pop
test
addl
ds
cmp
mov
or
push
inc
fsubrp
pop
xchg
jb
int3
dec
xchg
adc
das
arpl
aaa
imul
sbb
dec
push
jge
xor
scas
push
pushf
jno
movsb
pop
jae
cmp
mov
and
lea
or
xchg
xor
call
jbe
mov
lcall
js
cmp
ds
cltd
arpl
popf
sub
cmpsb
push
es
inc
ret
popf
mov
test
mov
negl
sbb
adc
pop
fisubrl
sub
push
mov
mov
into
push
dec
jl
dec
data16
js
ja
pop
cltd
cmp
and
xor
mov
add
cld
daa
sbb
jbe
subb
lds
cmp
in
add
dec
fstps
push
in
stos
std
lcall
xor
movsl
unpcklps
pop
mov
mov
frstor
imul
repz
cmovne
lds
push
mov
mov
xor
dec
sahf
fdiv
cmp
cmp
pop
std
inc
adc
mov
add
loop
aad
outsl
cltd
or
shl
incl
mov
repz
out
mov
xor
lock
push
cmp
aam
xchg
jne
xchg
pop
popf
add
adc
inc
imul
and
mov
lods
gs
mov
scas
pop
push
in
mov
xlat
mov
shll
cmp
xchg
add
xchg
sub
les
jns
push
mov
iret
dec
fucom
into
nop
xchg
or
mov
inc
xchg
jmp
fistpl
cld
ret
jp
jecxz
inc
pop
mov
push
movl
sarl
mov
jecxz
pusha
popa
je
jbe
dec
jp
jb
jno
add
or
mov
pmaddwd
sub
dec
inc
outsl
aad
cli
aas
sti
mov
jp
mov
mov
cwtl
push
pop
std
sbb
roll
add
mov
cmp
sahf
das
xor
lock
cmp
lock
or
outsb
arpl
cld
pop
jb
icebp
xor
adc
cmpsl
cwtl
outsl
mov
fwait
and
insl
lods
adc
ret
mov
or
lds
push
rcrb
mov
mov
add
mov
ja
fsubrs
shl
ljmp
movsb
clc
je
ljmp
shll
push
mov
cltd
ret
add
xchg
pop
push
sub
xchg
xchg
ds
xor
lea
pop
in
pop
rcrl
push
mov
in
xor
loop
mov
xchg
pop
xchg
mov
pop
sub
xor
nop
inc
add
mov
xor
push
vcmppd
mov
aas
dec
leave
xchg
push
ja
add
pop
in
mov
pop
xchg
jl
mov
dec
shl
and
shl
jmp
out
or
mov
or
jecxz
push
dec
dec
ljmp
add
mov
jp
mov
dec
or
pop
sub
shll
dec
and
xchg
cwtl
cmp
notl
dec
or
pusha
in
lret
adc
mov
es
inc
jg
insb
inc
sub
and
or
mov
popf
xchg
rcl
push
imul
pusha
pop
jo
xchg
cltd
loope
iret
mov
adc
push
popa
push
les
mov
mov
sbb
mov
arpl
adc
push
inc
inc
aam
push
or
xor
arpl
mov
leave
mov
or
mov
hlt
mov
daa
xor
lds
jmp
pop
rorl
add
in
or
movsl
lods
aaa
sub
jb
mov
scas
jge
mov
sub
dec
scas
movsb
call
pop
imul
mov
scas
and
clc
xor
loop
enter
int
out
mov
and
xchg
cwtl
fcoml
cwtl
add
and
inc
push
xor
push
stos
nop
imull
xchg
lahf
jo
jb
mov
int3
movsl
andl
sub
fidivrs
dec
test
loope
sbb
lods
mov
js
mov
xchg
cmp
std
div
add
push
sbb
cmpb
fwait
pop
cmp
ss
sub
sahf
mov
lea
add
push
sub
cmp
adc
arpl
in
test
mov
sbb
test
dec
lcall
in
in
mov
ret
inc
rorl
xlat
lret
mov
fadd
jmp
mov
adc
or
lods
maxps
dec
dec
sub
cmp
xor
mov
inc
into
mov
jbe
cmp
xorl
fwait
inc
cmp
ja
mov
testl
xchg
data16
adc
push
cmpsl
adc
loopne
mov
movsl
jno
shlb
pushf
in
neg
jo
push
sbb
sub
xchg
cmp
xor
sub
dec
repnz
add
les
dec
dec
dec
cmp
xlat
nop
insl
add
test
add
xchg
incl
pushf
cmpsl
mov
adc
xlat
mov
cmp
call
mov
mov
dec
adc
dec
icebp
jb
or
movsb
jl
inc
xor
push
ljmp
ffree
dec
sub
mov
mov
mov
jge
adc
std
ss
or
clc
and
repnz
mov
adc
add
shll
inc
cld
test
or
sbb
xchg
stos
lahf
dec
xchg
adc
stos
cmp
cltd
into
mov
sbb
push
aam
xchg
test
or
lock
icebp
pop
xor
mov
pop
mov
mov
repnz
lods
stos
test
xchg
test
cs
fst
insl
jl
fwait
push
sahf
mov
jb
test
jecxz
stc
add
pmuludq
cwtl
push
add
and
xchg
sbb
xor
pop
mov
test
outsl
mov
sbb
adc
pop
push
jp
adc
push
xor
imul
and
ljmp
rolb
sbb
or
push
push
sbb
inc
push
xlat
test
ja
mov
gs
sti
adc
xchg
inc
fsubrl
jns
divb
xchg
ljmp
out
mov
stos
sbb
dec
sub
push
mov
test
mov
into
hlt
jp
jnp
addr16
xchg
jne
cmc
sub
pop
rcrl
xchg
arpl
inc
xchg
test
sti
fbld
and
out
in
push
jbe
in
jne
repnz
fwait
and
aaa
jb
sbb
mov
mov
ljmp
push
xchg
pop
cmpsl
inc
mov
lods
jnp
iret
jmp
out
adc
or
or
inc
imul
dec
sbb
cli
fcoms
ret
mov
mov
fs
jb
cmpsl
inc
jb
sbb
loope
hlt
les
enter
jle
jae
pop
rolb
sbb
xor
pop
pop
lock
cld
int3
and
daa
or
ret
jmp
push
pop
jge
pop
dec
jbe
hlt
lret
push
cmp
movsb
jae
xor
push
test
adc
mov
nop
sbb
dec
xchg
out
jl
loope
jno
cmc
idivl
mov
fstps
enter
in
xchg
mov
loope
repz
jbe
xchg
test
pop
inc
jno
jnp
and
cld
movsl
mov
mov
sub
cs
loope
test
pop
leave
cld
mov
dec
pusha
clc
pop
out
mov
cld
inc
sbb
int3
jle
add
movsl
sbb
loop
and
or
jge
test
and
sub
add
xchg
push
lcall
sub
fwait
cli
mov
push
adc
test
sti
test
mov
jmp
mov
and
jg
lcall
shl
lcall
js
mov
mov
shll
mov
fdivrs
cmp
popf
std
notb
outsb
mov
pop
stc
arpl
mov
xor
push
cmc
lea
pop
into
popf
mov
fwait
cmp
icebp
xor
jg
cli
into
pusha
pushf
out
jne
mov
lods
pusha
popf
jg
fwait
pop
sbb
and
xchg
imul
sahf
ss
div
shl
push
pop
lods
lods
xchg
sub
cmc
sti
or
dec
mov
lret
mov
sbb
adc
mov
push
xor
push
dec
mov
pop
fwait
jl
outsl
and
fld
jo
inc
ss
dec
fwait
jg
nop
dec
adc
aad
push
out
inc
jbe
jmp
out
pushf
push
ja
adc
mov
jle
cmc
call
and
shll
pop
add
je
and
push
dec
sarb
inc
test
inc
push
inc
mov
pop
subb
fildl
insl
add
sub
ja
enter
lret
insl
es
fucom
xor
loope
fbld
out
enter
jns
pusha
clc
lret
das
out
lds
lock
mov
mov
cmp
jecxz
push
mov
xchg
imul
jp
bound
sbb
adc
aam
mov
sub
mov
aas
mov
push
aad
mov
aad
add
test
ljmp
lcall
add
pop
pop
mov
push
shl
cltd
xor
mov
pop
or
rcpps
push
fistps
xchg
and
out
cli
test
stos
and
or
pop
or
cmp
xchg
icebp
icebp
dec
pop
mov
loope
add
or
js
es
clc
decl
and
dec
dec
add
or
fwait
xor
push
or
mov
mov
scas
cmpsb
icebp
ja
cld
jl
pop
dec
icebp
mov
xchg
in
and
jns
mov
lret
ret
mov
shll
dec
rsqrtps
mov
testl
cmp
push
divb
or
add
faddl
insb
ja
xchg
cs
xchg
pop
pop
test
xchg
cwtl
pusha
and
out
pop
mov
xor
pop
and
icebp
add
cmp
rcrl
out
mov
jae
shlb
faddp
dec
ret
inc
iret
dec
imul
adc
repz
imul
push
xchg
cmp
aad
jbe
inc
inc
ds
push
fnstcw
inc
jne
hlt
arpl
ja
hlt
cmovae
leave
mov
mov
jl
pop
cmpb
pop
jmp
mov
or
push
add
push
mov
int3
xchg
sbb
test
jb
sub
lea
test
movsb
insl
add
or
test
jno
sbb
sbb
test
add
dec
xchg
dec
jno
ljmp
xchg
pop
mov
mov
in
insl
pop
je
fnstsw
mov
test
sub
inc
adc
movsl
xchg
pop
mov
jo
cmp
fsub
loope
adc
push
and
pop
or
jo
push
mov
cli
xor
push
jno
int3
cld
in
fs
add
int3
sub
adc
sub
cld
sub
mov
sqrtps
or
pop
imul
push
dec
and
or
iret
mov
stos
rorl
mov
pop
push
add
inc
test
clc
sahf
fdivl
lds
inc
dec
lret
pop
divl
aas
fdivs
pop
scas
cmp
loopne
lds
mov
lea
stc
sbb
xor
popf
xor
shlb
test
in
or
jp
jo
leave
xor
xor
out
xlat
orl
pop
aaa
pushw
mov
adc
call
cli
adc
or
subb
out
adc
sbb
ss
clc
add
int3
push
cwtl
mov
jb
xlat
mull
cmp
mov
sbb
rorb
lret
jbe
les
mov
inc
dec
in
dec
cli
push
insl
nop
and
aad
movsl
cld
push
pushf
std
push
ficoml
call
adc
call
mov
sbb
insl
cmp
je
div
dec
fisttps
loopne
test
inc
imul
pop
and
sbb
add
xchg
mov
pop
insb
mov
adc
xchg
mov
notb
pop
stos
and
inc
jae
push
cmpsb
add
into
cli
xlat
lock
mov
mov
scas
push
lret
mov
lods
ja
mov
repnz
dec
mov
ja
popa
in
es
outsl
add
aam
xor
sub
xchg
mov
int
and
add
sahf
mov
xchg
jge
fcmove
call
xchg
daa
mov
frstor
jl
push
and
push
orb
test
cmpsl
cltd
addr16
les
outsb
mov
mov
mov
popf
xchg
out
pop
sub
stos
adc
cmp
stos
rcrl
outsb
test
push
psubd
mov
xchg
inc
into
mov
call
hlt
push
xor
sub
test
int3
mov
push
scas
xor
bound
ss
test
xlat
dec
mov
mov
add
mov
outsb
lahf
xchg
in
fucom
dec
xchg
jns
sub
bound
clc
inc
mov
ljmp
bnd
mov
inc
mov
adc
jle
sbb
shlb
cli
or
xor
pop
sub
cmp
bound
leave
cltd
xchg
sub
push
pusha
mov
fs
sub
jnp
xor
insb
adcb
sarb
stos
dec
pusha
gs
xchg
mov
mov
or
cmp
inc
sub
pop
adc
dec
add
test
dec
movsb
push
cltd
fadds
sti
subl
sub
xchg
xchg
xchg
ljmp
gs
push
inc
repz
js
outsb
arpl
push
mov
leave
sbb
shl
dec
sarl
js
fadd
fbstp
lret
arpl
int3
divl
push
add
sbb
aaa
addr16
xor
in
jge
cwtl
arpl
mov
push
fdivs
movsb
mov
cmp
xor
mov
push
popf
jo
add
xor
mov
dec
dec
jae
in
jl
add
push
cmp
jne
daa
xchg
pop
fwait
enter
in
push
je
cmpsb
pusha
andb
or
dec
test
add
lahf
int
nop
and
and
xchg
cli
xchg
cmp
sub
pop
dec
loope
sbb
adc
inc
mov
rcrl
mov
cmpb
xor
out
add
sbb
sbb
adc
loope
add
cmpsl
fistpl
or
outsb
or
or
lcall
ret
sub
sub
push
sbb
imul
mov
add
mov
and
ret
mov
test
leave
fstpl
jp
sub
rcl
add
sbb
push
divl
xchg
sbb
repnz
cmp
and
and
or
leave
mov
stc
rcrl
loop
hlt
stos
outsl
adc
mov
cmc
sbb
into
arpl
lret
or
push
mov
jl
jp
xor
adc
je
push
mov
cmp
lods
cs
sub
sub
adc
es
imul
adc
loopne
loopne
gs
outsb
cmpsl
push
clc
in
aaa
movl
xlat
ss
lcall
xchg
pop
cmp
mov
sbbl
mov
inc
pop
adcb
sub
nop
push
aad
loope
or
jmp
add
pushf
test
xchg
adc
ds
pop
orl
adc
call
repz
stc
mov
inc
je
and
jb
arpl
aas
andl
pop
pop
enter
in
xchg
dec
in
mov
rorb
inc
cmp
cwtl
inc
push
data16
sub
not
clc
in
sarl
dec
and
out
mov
xchg
push
and
mov
jl
jmp
sub
dec
cld
add
pop
cmp
xchg
jae
dec
xchg
cs
dec
aam
es
mov
jp
aam
add
push
addr16
fstp
mov
rcrl
and
and
fnstcw
repnz
mov
ljmp
xchg
clc
pusha
add
in
imul
sahf
imul
movups
sbb
xchg
mov
push
out
shlb
pop
mov
or
je
lock
fnclex
test
rcr
sub
aam
mov
xor
rorb
push
rcll
decl
roll
insl
pusha
or
movsl
push
pushw
push
loopne
fwait
xchg
sub
inc
inc
sbb
jnp
xchg
mov
pop
sarb
mov
lret
xor
in
lds
jns
cmp
bound
or
test
xchg
mov
or
dec
aad
rorl
mov
int
out
inc
jp
std
pop
addr16
inc
adc
data16
ss
loop
jns
mov
mov
jmp
fbstp
les
inc
pusha
pop
scas
push
in
add
dec
and
insb
in
mov
and
dec
cli
stos
mov
test
pop
popf
xor
lds
jne
int3
jae
add
mov
js
dec
stos
out
in
or
sbb
adc
push
loopne
pop
scas
mov
fs
sbb
decl
xchg
ljmp
inc
cmp
mov
dec
insb
dec
or
jnp
mov
add
jmp
leave
xchg
sbb
repnz
cli
mov
xchg
and
lds
push
ficomps
jb
pop
jge
push
int3
loop
clc
add
pop
xchg
or
mov
int
ljmp
pop
push
daa
pop
xor
cmp
loopne
push
outsb
repz
pushf
xchg
cmp
and
outsb
insl
jmp
loop
out
jl
aad
jno
inc
mov
daa
xchg
call
in
cmp
mov
push
xlat
mov
test
rcr
and
pop
loopne
ds
sub
or
sub
mov
loope
sahf
ss
popl
pop
xchg
js
adc
pop
pop
pop
pushf
inc
arpl
cmp
xchg
sbb
xor
testb
mov
fisubrl
lcall
mov
jnp
mov
sbb
or
in
int
add
and
stos
mov
and
mov
repz
or
cmp
push
test
mov
sbb
mov
lret
movsb
div
sbb
fsubrs
and
ss
out
pop
subb
xchg
cmp
push
xor
adc
inc
adc
or
dec
pop
cmp
pop
insb
xor
add
out
daa
stos
mov
enter
xchg
data16
xchg
add
inc
loope
sub
mov
pop
push
cmpsb
mov
and
push
mov
pop
xchg
sub
push
fmulp
in
mov
ret
jne
inc
xlat
jne
idivb
lods
cmp
xor
xchg
push
pop
repz
push
les
lret
outsl
push
cs
mov
mov
aad
aas
sbb
imul
jmp
aaa
cli
pushf
push
mov
test
ss
sti
or
call
pop
jae
cld
popa
mov
je
pushf
fisttps
popf
clc
jb
aas
repz
and
mov
pop
imul
fistl
dec
dec
fcomps
stos
mov
in
cwtl
cld
es
ror
xchg
notb
lods
adc
jmp
and
loopne
mov
sbb
nop
lock
mov
mov
mov
cltd
mov
jmp
mov
xchg
mov
jl
das
push
movsl
loopne
ret
push
ret
mov
sub
ds
cld
xor
insb
add
and
inc
cmc
dec
mov
pop
lea
or
ljmp
addr16
fwait
xor
outsl
sbb
mov
scas
outsb
test
xchg
cltd
aad
add
xchg
les
pshufw
jo
mov
out
and
aam
out
dec
mov
xor
lret
test
sbb
sub
dec
push
push
dec
xchg
bound
sbb
fwait
mov
jle
sub
xor
scas
add
out
bound
mov
repnz
hlt
cmpb
lea
xor
dec
mov
mov
pop
mov
xchg
pop
fwait
loop
cmpb
jns
icebp
sub
ficoms
out
arpl
mov
cmp
dec
mov
arpl
mov
mov
nop
jb
rep
mov
sub
gs
ja
sbb
xchg
mov
and
shr
ss
push
pop
pusha
repz
in
add
jle
les
insb
pop
out
and
jg
stos
cs
outsl
push
adc
jg
popf
pop
into
push
push
cmp
pop
inc
xchg
dec
sub
adc
iret
addr16
jp
inc
loope
push
daa
xchg
stmxcsr
sbb
jp
sbb
test
std
fimull
pop
push
push
push
nop
xchg
inc
jle
jmp
shl
hlt
lock
repnz
add
shrb
adc
pop
lods
jae
int3
int
cltd
add
ds
aaa
in
loope
pop
inc
jo
cmpsb
mov
fs
jbe
aad
lahf
pop
cmp
dec
in
and
push
cmp
sub
xor
push
hlt
sbb
or
jns
jno
mov
jb
xchg
cmc
inc
enter
in
and
push
cmpsb
data16
sbb
fsub
test
cmpsb
jp
lahf
or
mov
mov
mov
or
mov
fdivl
loope
lcall
lds
js
and
pop
adcl
or
lea
or
add
and
sbb
imul
pop
jns
adc
push
add
fdivl
xor
sub
pop
jnp
js
xchg
mov
mov
mov
mov
loopne
mov
cmc
pop
jg
loope
adcb
sahf
lds
dec
mov
pop
mov
add
sub
mov
neg
push
push
popf
ss
and
mov
leave
cli
loop
mov
cmp
cmc
test
adc
or
xor
cli
lcall
mov
ljmp
cmpsl
lret
popa
jle
adc
popf
out
imul
outsl
loopne
mov
gs
xorl
mov
call
adc
in
in
mov
push
repz
mov
out
sahf
test
inc
adcb
jmp
mov
dec
add
inc
test
pushf
dec
or
in
ss
pop
jmp
mov
test
shll
jecxz
jl
je
insb
fwait
dec
inc
pop
bound
dec
insl
aas
mov
stos
mov
xor
push
inc
mov
dec
ret
pop
inc
addl
add
jns
push
negb
or
and
sub
mov
imul
mov
or
mov
aam
or
cld
pop
pop
jle
aas
pop
pop
mov
xchg
lea
jge
adc
push
push
sub
ret
in
dec
aam
movsb
out
jnp
cmp
pop
sbb
jnp
sub
and
lods
enter
pop
add
add
clc
pop
sbb
aas
imul
mov
jle
cmp
cmpsl
adc
push
push
dec
insl
sbb
out
xchg
stos
fidivs
lea
shll
shlb
testb
push
or
sti
or
ljmp
popf
pop
or
jmp
jb
or
xchg
add
jmp
push
xchg
sbb
or
pusha
pop
inc
dec
or
jnp
fs
and
inc
std
push
mov
dec
fbstp
rcrl
je
sbb
bound
out
inc
mov
mov
jg
jne
xchg
lret
xchg
mov
les
push
mov
mov
sar
jp
xlat
das
addr16
js
jo
jg
call
push
js
pop
mov
jmp
movsb
xor
add
mov
stos
jle
pop
insl
jnp
ret
out
adc
add
jecxz
push
push
es
popf
subb
ret
dec
testl
rol
or
mov
and
push
outsb
xchg
scas
jg
mov
sbb
daa
add
inc
jne
inc
cmp
enter
inc
inc
adcl
hlt
cmp
leave
jg
repnz
sub
mov
leave
push
push
lds
ficomps
enter
and
add
lods
or
sbb
jge
jl
jbe
push
adcl
push
into
cmp
leave
ljmp
adc
xor
xor
add
sarb
icebp
icebp
int3
jno
es
daa
xchg
xchg
in
or
sub
lods
dec
rclb
test
jns
insb
lahf
sub
fsubs
cld
xchg
cmp
mov
fstps
push
lret
add
push
pop
stos
cmpsl
lret
push
mov
xlat
sbb
add
daa
add
test
imul
push
adc
cmp
adc
mov
push
outsb
imul
xchg
cli
xlat
cmc
sub
fs
cs
push
push
and
and
insl
mov
out
out
std
insb
pop
mov
sub
jg
mov
jne
push
lods
fimull
std
inc
lret
leave
divl
fsubs
cmp
ss
in
jo
stc
and
fs
jae
loop
insb
xor
xchg
icebp
xor
ja
jo
add
or
jbe
cld
dec
arpl
loope
xor
fnsave
int
int3
out
xchg
lods
jecxz
mov
sub
lock
std
je
rcl
imul
pop
loopne
mov
mov
movsb
mov
mov
js
std
mov
pop
int3
sbb
repz
and
and
pop
sbb
faddl
repz
sbb
aad
jb
xchg
mov
nop
popl
xor
xchg
pushf
test
jmp
mov
stc
mov
call
sub
jecxz
jmp
loope
jno
mov
xchg
cltd
aas
pop
in
dec
inc
xlat
ss
inc
mov
stos
sbb
ret
scas
in
sbbl
adc
jb
fs
and
negb
andl
adc
aas
imul
lock
rorb
ja
add
xchg
pop
mov
xchg
loopne
dec
js
sahf
insl
std
add
es
and
jae
sub
push
jae
sub
xor
loop
xchg
pop
cmp
cmpsb
mov
xor
xchg
mov
xor
in
xchg
test
jb
adc
fnstsw
inc
or
mov
xor
add
pop
or
rcll
jmp
loopne
pop
mov
mov
sbb
jp
test
dec
mov
xchg
xor
xor
xlat
push
or
sbb
and
xchg
ss
cmp
or
bound
inc
loope
shlb
pop
pop
add
mov
xchg
aas
xchg
and
mov
repnz
jns
inc
shlb
mov
mov
imul
test
sbbl
xor
mov
jp
shrb
icebp
push
add
push
push
pop
sub
imul
aaa
ja
xchg
and
insl
xchg
ja
dec
fbld
mov
in
xor
mov
jp
or
clc
insb
cs
mov
stos
adc
adc
stos
loopne
inc
push
mov
cmpsl
outsb
mov
jae
pop
cmove
inc
push
pop
xchg
iret
and
les
scas
loop
xchg
repnz
js
xchg
out
iret
xor
cmc
cmp
pop
mov
mov
mov
dec
arpl
bound
hlt
xchg
add
stc
xchg
shl
dec
fiadds
insl
pop
pop
or
add
addr16
or
adc
jge
cmp
mov
mov
movsb
mov
sarb
mov
sbb
scas
cmp
jo
add
cmpsb
dec
decb
pop
dec
das
mov
jl
mov
cmp
frstor
daa
xchg
fwait
mov
jne
leave
in
lock
test
insb
sbb
inc
cmp
and
cmp
test
dec
dec
loop
dec
jp
and
pop
movsl
mov
clc
ds
pop
jne
sbb
cmp
stos
cmp
inc
cld
cmp
cmc
dec
pop
inc
and
js
stc
dec
pop
shll
outsl
mov
lds
jge
sbb
push
aas
add
push
pop
mov
xchg
sbb
outsb
dec
push
movsl
es
orb
sub
mov
xchg
fcmovbe
push
and
pinsrw
cli
mov
xchg
mov
jne
das
orb
test
sub
lds
sbb
iret
add
shrl
divl
shr
fcomp
and
ds
jl
das
adc
int
mov
ret
dec
push
scas
outsl
xchg
fsubl
xchg
int3
mov
into
out
negl
imul
cmp
bound
fmuls
jmp
jo
das
mov
ljmp
lods
cmp
adc
imulb
pop
sub
popa
idivl
pop
mov
dec
loopne
fiaddl
lcall
arpl
fwait
in
jecxz
push
mov
into
in
xlat
xor
dec
cmp
gs
lahf
and
cmc
les
call
rorb
mov
nop
push
sub
fsubrs
leave
jmp
imul
push
jno
adc
inc
inc
js
add
jnp
and
mov
movb
xorb
dec
xor
and
or
inc
repnz
inc
aas
pop
pop
pop
push
insb
sbb
mov
inc
dec
xorl
cld
adc
scas
int
fistpll
sarl
les
mov
sub
and
clc
sti
mov
xchg
or
or
enter
shl
in
jo
mov
nop
mov
dec
jae
shrl
xlat
out
es
ret
add
adc
imul
jbe
pop
dec
add
cmp
jle
mov
int3
mov
sahf
inc
hlt
popa
dec
mov
ljmp
mov
dec
mov
in
call
mov
movsb
inc
test
push
int
decl
lea
push
add
xchg
lret
out
dec
or
pop
pop
inc
inc
rcl
pop
in
sbb
xchg
dec
fimuls
adc
mov
pop
xchg
xor
dec
inc
sub
cmc
add
frstor
push
fwait
dec
stos
jg
hlt
aaa
fwait
inc
js
ljmp
dec
xchg
into
jnp
xchg
out
scas
mov
ret
outsl
xchg
outsl
sub
imull
mov
fisubs
cmp
out
add
mov
inc
int3
jne
push
movsb
dec
popa
imul
mov
inc
xor
bound
or
sub
out
jge
add
insl
xchg
lock
dec
jmp
dec
push
filds
shlb
in
pop
jle
fstps
jnp
cld
js
cltd
jnp
and
out
std
stos
xchg
push
shlb
push
into
adc
push
and
xchg
inc
mov
push
pop
sub
nop
ret
adc
test
jnp
cld
cwtl
jo
inc
leave
cmpsl
imul
inc
xchg
inc
mov
repnz
cmp
lods
or
xchg
arpl
push
hlt
shll
repnz
sbb
sar
pop
lds
test
pop
cmp
scas
int3
mov
add
test
jle
std
aaa
and
xor
jbe
jno
push
arpl
and
push
mov
cltd
scas
sbb
icebp
xor
cli
inc
int
sahf
lods
lret
jl
pop
dec
jno
fwait
dec
cmp
mov
stos
enter
in
xlat
js
cmpsb
out
and
lret
push
add
adc
pop
xchg
push
mov
adc
ljmp
arpl
push
aad
pop
or
js
ret
nop
pop
clc
xor
xor
or
sbb
cmp
adc
test
out
jnp
adc
jle
into
sub
pop
push
cld
xchg
and
pop
clc
cmpsb
out
clc
data16
int
aas
cmp
sub
jae
fs
hlt
mov
or
jmp
outsl
mov
xor
jg
subb
test
xchg
sahf
scas
mov
mov
rol
mov
div
imul
cltd
lahf
cmp
jb
fstl
xchg
imull
inc
pop
sbb
fs
loop
imul
jo
test
repnz
jb
mov
out
or
popa
push
cmp
mov
xor
fnstsw
outsl
idiv
mov
enter
ss
data16
adc
push
leave
and
imul
push
and
fnstsw
ljmp
in
dec
cmpl
mov
mov
xlat
jno
sbb
cltd
jge
sbb
bound
or
flds
jno
mov
mov
into
aad
pushf
jno
mull
addr16
scas
dec
pushf
incl
mov
pop
add
clc
negl
add
or
jecxz
and
je
aad
dec
test
mov
aas
pushf
xor
mov
inc
mov
pop
mull
popa
fcmovnbe
cs
test
orl
xchg
mov
mov
cwtl
call
repz
add
lds
mov
gs
das
or
mov
in
add
push
xchg
popa
cld
fdivrl
icebp
les
mov
adc
dec
outsb
scas
pop
insl
lret
xchg
or
ret
xchg
lea
sub
and
mov
ret
bound
rorl
sahf
lods
or
imul
mov
xchg
mov
mov
bound
xor
mov
sub
test
xchg
call
paddsb
inc
push
fmull
mov
scas
inc
stc
stos
stos
xchg
or
mov
movq
xchg
int
test
in
dec
xor
xchg
popa
cmc
mov
stos
inc
pop
or
push
arpl
pop
add
adcb
or
loope
inc
paddq
ja
sub
pop
ja
xor
adc
mov
push
dec
jns
sub
bound
in
aas
out
fisttps
loope
loop
lcall
add
mov
sbb
aaa
addr16
inc
xchg
or
mov
out
sbb
xchg
xchg
mov
xchg
ficoms
pop
shl
pusha
pop
mov
in
out
stos
jle
sarb
insb
add
sbb
dec
mov
stos
cli
mov
jge
mov
inc
popf
cmc
sahf
aad
inc
mov
jae
inc
jp
ret
pop
pop
and
ret
dec
iret
jecxz
inc
adc
mov
dec
imul
popa
xchg
popf
les
pop
cmpsb
cmc
inc
mov
dec
push
stos
jns
inc
mov
arpl
xchg
hlt
sbb
mov
repnz
fnstsw
mov
sbb
fdivs
push
test
add
cli
or
loope
sbb
or
fs
jbe
cs
movsb
lret
xor
push
daa
mulb
das
jmp
shlb
cli
sbb
push
fstl
call
jno
mov
daa
push
add
imul
cmpsb
jb
push
push
into
addr16
fistl
sbb
icebp
pop
lahf
xchg
es
jb
ret
ds
pop
cmp
mov
aas
lret
outsl
out
push
push
xchg
js
and
pop
pop
adc
mov
inc
inc
out
add
and
pop
sub
mov
ror
movsb
pop
adc
loope
outsb
sub
notl
push
sub
add
ja
cmp
jae
mov
arpl
mov
jae
in
mov
adc
sub
adc
sub
mov
rolb
mov
sahf
push
stos
sbb
xchg
popa
out
push
es
rcrl
lret
adc
mov
jl
push
mov
cmp
mov
adcl
into
and
stc
sbb
jae
enter
inc
xor
push
cmc
lds
into
mov
pop
or
imul
cli
lcallw
std
mov
cmp
lods
cwtl
fmull
data16
inc
add
jge
imul
lock
out
fneni(8087
sub
pop
gs
test
or
push
arpl
mov
xlat
mov
cmpl
mov
xlat
xchg
and
jmp
mov
inc
into
insb
mov
xchg
push
nop
and
aad
in
jbe
pop
pop
mov
pushf
stos
fs
adc
jecxz
mov
rol
jbe
iret
call
pop
push
mov
jecxz
xor
je
cmc
jno
and
sub
cmp
inc
sub
inc
dec
pop
adc
lret
mov
decl
stc
and
mov
stos
cwtl
mov
mov
lret
and
jo
imul
das
out
insb
lock
add
and
les
mov
icebp
fwait
push
inc
mov
mov
mov
insl
mov
mov
ret
and
and
mov
jg
push
cwtl
rcrb
pop
xchg
sbb
mov
inc
divb
adc
mov
inc
xchg
loopne
xchg
ret
fnsave
mov
mov
stos
jecxz
cltd
call
popa
mov
dec
dec
lods
push
mov
sbb
out
adc
lcall
sarl
xchg
sbb
popl
mov
push
test
or
xchg
jp
and
jle
xor
std
addb
jge
add
and
sbb
lret
inc
cmpsb
jne
dec
inc
push
shlb
mov
pop
xor
inc
mov
push
js
xchg
or
mov
bound
loope
mov
pop
cmc
jne
cltd
xlat
dec
daa
adc
adcb
mov
icebp
sub
cmp
addr16
add
sub
hlt
xor
xchg
xchg
test
je
xchg
lock
lahf
fistpll
les
pop
add
out
inc
jle
ss
jnp
inc
xchg
push
stos
insl
adc
es
sbb
mov
jae
push
lods
inc
int
clc
pop
xchg
mov
push
adc
cmp
imul
sbb
pushaw
xchg
hlt
hlt
fimull
je
inc
lds
das
pop
ja
adc
or
and
arpl
movsb
hlt
addr16
leave
pop
cmp
mov
or
shlb
mov
jmp
bound
subb
fs
add
es
mov
jle
jge
into
jg
xchg
push
add
movsb
push
jp
cmp
cmp
and
popf
fldt
icebp
xchg
mov
sti
out
pushw
shl
dec
jl
inc
jl
sbb
jno
mov
pop
daa
mov
or
dec
inc
in
movsl
mov
cmpsb
cmc
ja
call
pop
push
rolb
lds
rcr
movsl
leave
fadds
mov
cmp
pop
mov
xchg
mov
js
adc
pop
inc
in
std
xlat
aad
xor
xor
xor
sbb
pop
jp
shlb
pushf
outsb
inc
inc
dec
sub
jp
push
stos
out
lcall
mov
out
mov
xchg
push
cs
jmp
mov
jne
mov
mov
mov
or
sbbb
xchg
mov
hlt
mov
sbb
sarb
aas
mov
shl
out
sarb
outsl
sub
fmuls
push
aam
xor
add
xor
inc
push
stc
rolb
ret
outsl
cs
mov
test
add
into
cwtl
jae
or
fnstsw
pop
jl
cli
cltd
or
out
ja
mov
inc
ljmp
ss
ja
sub
jae
in
push
imul
loope
pop
push
jae
loopne
test
gs
cmp
test
in
and
jg
in
jbe
sub
outsw
xlat
out
mov
out
sbb
call
in
shlb
mov
mov
mov
dec
xacquire
sti
adc
lods
mov
stos
jmp
sbbb
mov
sahf
mov
call
std
stos
push
mov
test
xchg
dec
xchg
stos
cltd
jb
cmpsl
add
fiaddl
stos
inc
aam
ret
pop
cmp
stos
add
mov
mov
xchg
mov
mov
repnz
mov
arpl
test
mov
mov
mov
das
xor
lock
test
fimuls
xor
xor
jns
mov
lea
fs
ds
cltd
mov
es
ljmp
testb
cs
daa
pop
mov
inc
mov
dec
inc
out
mov
cld
fmuls
lods
fildll
popa
xchg
loop
ljmp
dec
clc
std
test
fstpl
cld
push
cmp
scas
mov
decb
mov
jns
pop
pop
popl
push
mov
rsm
ficoms
pop
xchg
xchg
lahf
pop
fsubr
jne
inc
stos
mov
pop
pusha
mov
rcl
push
jp
jne
push
xchg
lret
and
ret
das
pop
jae
mov
mov
xor
fs
mov
popf
in
push
ret
push
push
fcmovbe
js
mov
inc
inc
cmp
into
int3
ja
insl
sbbb
pop
mov
cltd
add
pop
std
aaa
in
dec
inc
jns
mov
sub
aaa
test
jo
lret
shll
mov
enter
mov
dec
addr16
dec
loop
inc
sbb
out
mov
clc
xchg
push
jmp
jmp
ret
mov
fistps
cmp
in
cmp
jle
into
jnp
or
and
mov
loopne
push
push
jecxz
mov
inc
pop
insl
push
lret
jae
cmp
inc
fadds
pop
int
inc
push
pushf
iret
mov
jl
push
shll
pop
scas
outsb
dec
in
imul
sbb
pop
hlt
xchg
dec
dec
stc
fcmovb
cmc
xchg
inc
mov
mov
mov
in
inc
nop
aaa
arpl
pop
hlt
mov
sub
rolb
cli
repnz
add
mov
push
inc
mov
pop
in
inc
fimuls
add
int3
dec
aas
fiaddl
inc
lret
push
nop
jl
pop
or
sbb
int
lret
push
push
xor
leave
cmp
and
shrb
inc
gs
mov
xor
jl
mov
jno
fisubrl
cmp
pop
sbb
popa
jle
in
mov
adc
ja
addr16
movsl
jmp
leave
sahf
lods
push
cwtl
fcompl
pop
addb
or
stos
sti
inc
cmp
cs
sub
cmp
push
stos
fists
aas
fstpl
js
lcall
lcall
add
sbb
jae
unpckhps
flds
mov
inc
insb
add
mov
fdivl
les
dec
adc
pop
jne
dec
sub
push
int
enter
pop
dec
and
sub
mov
cmp
mov
inc
lea
sbb
nop
sahf
xchg
pop
adc
mov
lret
mov
lret
shl
cs
es
sarl
cmp
xchg
adc
repnz
mov
loop
lock
outsl
or
and
push
xlat
imul
das
jb
daa
cmp
cmp
scas
fidivs
xor
adc
int3
xor
mov
fidivrl
lods
data16
mov
add
in
imul
fstps
and
repnz
xchg
push
push
iret
sti
pop
cld
stos
in
add
xchg
lcall
cmp
xor
xlat
fst
xchg
stos
xor
repz
sub
fld1
pop
cmpsb
inc
hlt
mov
dec
push
jg
nop
jmp
push
and
outsl
pushf
add
insb
pop
sbb
je
sub
addr16
lea
mov
adc
adc
cmp
inc
mov
out
ja
jns
pop
inc
pop
sbb
loopne
inc
fistpl
fwait
dec
inc
adc
orl
push
cmp
cwtl
sbb
arpl
imul
inc
push
and
jecxz
mov
push
out
push
lock
popa
mov
xchg
mov
cmp
adc
icebp
dec
les
mov
mov
jmp
pop
lock
insl
sbbb
cmp
inc
ret
ds
aas
aam
imul
pop
aad
fbld
push
sub
mov
stos
xor
and
ljmp
mov
cmp
fldl
jle
mov
dec
dec
test
das
cltd
push
pop
xchg
add
inc
xchg
wbinvd
ds
scas
xchg
out
sbb
fsubrs
mov
shrl
lods
sbb
in
push
mov
js
cmpsb
sbb
dec
gs
roll
cwtl
add
mov
lahf
or
insb
xor
incl
dec
add
syscall
fnsave
push
fwait
or
or
xlat
xor
and
dec
sub
aad
pop
test
cs
fdivr
lock
stos
jbe
in
imul
out
jl
dec
mov
ret
jne
jae
dec
in
mov
pop
xor
mov
lods
adc
inc
call
or
jg
sub
cli
mov
addl
adc
and
xchg
xchg
push
rcr
mov
xor
fcompl
ja
mov
mov
into
adc
into
sti
fnstsw
push
push
push
aam
jae
sahf
mov
pop
add
add
sbbb
add
adc
push
sbb
scas
shll
imul
push
jge
xchg
mov
sub
push
filds
inc
xchg
shrl
std
cmc
fcmove
dec
push
out
mov
imul
fidivs
pop
out
cmc
dec
sbb
cmp
mov
or
ds
push
xchg
sub
ja
out
aaa
push
mov
push
lahf
aas
mov
dec
dec
and
mov
mov
cmpsl
add
or
dec
pop
ds
es
jno
aaa
cmp
shll
shll
mov
mov
in
jae
clc
cmpsb
sti
int3
xor
push
das
inc
in
rcrb
imul
in
jg
idivl
fisubl
into
test
sub
cs
mov
outsb
push
pop
pop
pop
jle
mov
mov
pop
xchg
out
pop
icebp
jge
mov
nop
add
pop
sbb
andb
inc
cmp
jl
pop
xchg
ret
push
outsb
or
sub
sahf
fsub
sti
dec
push
pop
lds
cmc
mov
sub
pop
test
push
xor
or
mov
das
out
mov
mov
mov
mov
jg
and
mov
sub
sbb
sti
mov
rcrl
cmp
imul
cli
pop
fadds
nop
xchg
ss
arpl
ror
jae
outsl
jbe
stc
inc
call
subl
xchg
xor
mov
sbb
orb
mov
cmp
push
mov
or
out
pop
movsl
mov
add
cmp
ficoms
push
stos
imul
negl
xlat
loopne
xchg
sub
frstor
jbe
aaa
sti
into
jmp
in
cli
xor
mov
or
mov
sbbl
add
sub
call
xchg
xchg
and
dec
mov
push
mov
fst
cmp
xchg
subl
pushf
stos
xchg
pop
into
or
call
xchg
testb
add
jb
mov
jns
jb
imul
inc
jns
gs
loop
pop
addl
dec
xor
sub
std
leave
jl
aam
inc
std
or
inc
imulb
xchg
push
roll
call
mov
mov
arpl
test
xor
cs
mov
cmp
mov
jo
adc
and
and
sarl
mov
mov
es
xchg
ret
aam
xor
rcl
add
pop
hlt
insb
cmpsb
mov
pop
jno
mov
pop
push
lods
mov
je
rcl
ljmp
and
jae
xor
cmpsl
xor
push
mov
in
test
rcrl
cltd
lea
pop
add
pop
push
dec
shll
xchg
sub
mov
adc
cmp
adcl
fldt
ret
mov
push
dec
int3
lods
sbb
xor
mov
xor
adc
or
inc
mov
add
dec
add
or
push
fwait
cmp
mov
inc
imul
dec
and
ja
shr
arpl
mov
pop
insl
icebp
xchg
cli
xor
jns
cmpsl
loope
jbe
inc
out
pop
out
jno
mov
dec
shlb
popa
mov
ficoms
mov
jbe
sarl
jp
addr16
arpl
cmp
sub
jge
cli
adcl
stc
jmp
imul
pop
in
sbb
jle
sbb
dec
insb
mov
enter
adc
pop
jnp
or
cltd
nop
popf
xchg
scas
call
jae
inc
jnp
out
loope
pop
cmp
ret
or
pop
jnp
adc
push
mov
scas
xor
loop
inc
mov
cltd
xchg
stc
pop
mov
daa
adc
cld
push
inc
mov
scas
arpl
cmp
leave
shlb
jmp
adc
xchg
lds
push
fstpl
push
int3
and
push
int3
or
mov
in
jge
data16
jbe
stos
or
out
shlb
inc
sub
jnp
add
add
aam
push
push
xor
dec
leave
or
jl
imul
push
xchg
sbb
mov
pop
enter
in
pop
rcr
jle
inc
inc
xchg
add
pop
test
ds
adc
xchg
or
movsl
ficomps
mov
sub
not
loope
xorb
mov
arpl
mov
sub
cmp
gs
xorb
pushf
shlb
cwtl
stos
outsb
insl
jnp
sub
pusha
fmull
ljmp
jae
ja
pop
or
int
xchg
pushf
push
aaa
dec
pop
and
mov
mov
pop
popa
jg
cs
sub
mov
sahf
fucom
mov
mov
mov
icebp
lret
jae
lods
sub
inc
mov
pop
rcll
adc
lods
mov
daa
stc
testl
test
xor
fsub
into
inc
subl
add
int
xor
lods
jmp
xor
fisttpll
xor
inc
mov
add
ljmp
push
je
adc
jb
imul
add
stc
sti
jge
fsubr
gs
mov
cmpb
xlat
lods
xchg
mov
sbb
xor
repz
repz
mov
sbb
jo
mov
aad
sbb
out
jp
mov
cmp
movsl
mov
mov
call
stc
dec
pop
pop
mov
je
mov
xor
sbb
inc
xchg
xor
inc
imul
int
sbb
das
cmpl
les
mov
icebp
divb
das
rcll
push
mov
inc
xchg
das
arpl
lock
push
in
mov
push
mov
xchg
lret
sbbb
mov
mov
test
cmpsl
mov
dec
insl
dec
xchg
dec
es
lret
insl
ret
pop
inc
sub
fisttps
sub
mov
shlb
out
mov
bound
ljmp
or
popa
xlat
jge
ljmp
or
scas
mov
js
push
xor
mov
mov
fistpl
aas
out
push
vmptrst
push
and
je
and
sahf
mov
in
popa
dec
fimull
xchg
pushf
jnp
dec
xor
xchg
inc
mov
xor
cwtl
push
or
mov
jle
scas
add
dec
add
scas
push
sbbl
add
adc
cmp
xor
pop
push
and
mov
push
js
dec
xor
std
jns
pop
out
or
out
cmp
mov
jns
jne
fmull
mov
daa
mov
jbe
pop
cltd
mov
dec
shrb
popa
cmp
sub
adc
add
sub
xchg
mov
sub
push
mov
xchg
cmp
adc
cli
int3
push
pusha
pop
sub
add
insb
jnp
add
insb
sbb
pop
and
xchg
dec
mov
push
popf
mov
xchg
jae
cs
inc
stc
cs
jb
mov
iret
mov
push
cli
push
cmpsb
xor
imul
outsl
sbb
in
xchg
push
push
insl
fcmovu
mov
inc
xor
push
push
lods
out
inc
cltd
xor
lcall
leave
aaa
and
repnz
sarb
mov
cmc
inc
fidivs
lea
and
int3
adc
or
aaa
lds
pushf
xor
sbb
inc
cli
jge
popa
sahf
jbe
lods
jl
cmp
loopne
cmp
js
scas
push
mov
repz
dec
xchg
inc
dec
cmp
jno
pop
push
cmp
cmpsl
add
mov
test
cmpsb
add
or
push
fists
add
adc
and
sub
clc
add
adc
mov
sub
xchg
cmpsl
loope
rcrl
aad
pop
cld
xchg
pop
js
movsl
sub
jecxz
mov
dec
xorl
pop
pop
rcrl
mov
jp
idiv
dec
rclb
popf
daa
adc
shlb
dec
cmp
fdivl
int
push
push
xor
lcall
icebp
sub
dec
push
int
push
xlat
push
cmp
pusha
and
cmp
mov
cs
sub
or
test
xchg
mov
jg
test
rorl
lret
mov
imul
fdivr
scas
hlt
cmp
add
jge
jno
mov
iret
stc
scas
fsts
loop
dec
jmp
xor
hlt
cmc
test
lret
into
and
pushf
or
cmp
sbb
mov
fcoms
out
cmpsl
cli
mov
jbe
inc
add
add
out
sbb
imul
pop
mov
loopne
shll
gs
call
inc
sti
sub
in
rolb
xchg
repz
popf
xlat
jmp
cld
cmp
cmp
sbb
hlt
mov
std
adc
popf
push
dec
outsb
andb
jcxz
aad
pop
or
dec
mov
cmc
pushf
add
cmp
cld
mov
icebp
xor
call
pusha
jg
sbb
jae
cmp
int
push
popa
mov
inc
lock
inc
pop
leave
addr16
ljmp
adc
cmp
cwtl
dec
and
std
pop
hlt
inc
divb
add
stos
dec
mov
xlat
lods
sub
inc
lods
inc
lock
cmp
cmp
rcl
cld
ficomps
dec
icebp
into
jl
mov
mov
adc
push
gs
insl
xor
inc
lahf
ret
jmp
data16
mov
pushf
sarb
cmp
xor
mov
imul
mov
popa
out
dec
shr
das
test
sbb
into
mov
pop
mov
ficoml
loope
jae
sti
out
add
push
mov
xor
ljmp
add
push
pop
or
xor
xor
push
inc
mov
add
lcall
mov
insb
jno
or
clc
xor
xchg
lcall
in
add
push
dec
or
popa
inc
test
dec
push
mov
ja
and
pop
fldenv
mov
movsl
test
jmp
dec
mov
jns
cmp
bound
mov
inc
jae
jne
cmpsl
ja
xchg
into
mov
push
push
mov
orb
cld
push
addr16
and
sbbl
scas
adc
xchg
jge
mov
xchg
imul
fistps
or
movsb
in
mov
jle
jnp
jnp
insb
xchg
and
xor
push
mov
sbb
popf
fisttps
add
pop
adc
mov
ret
pop
iret
sbb
jae
push
in
cmpsl
int3
scas
cli
push
mov
and
sbb
rclb
lea
inc
mov
sbb
or
adc
push
inc
pushf
pop
cmc
arpl
les
leave
scas
jbe
repnz
rcrl
mov
or
ficomps
cli
and
int3
sti
mov
or
sub
aaa
pop
inc
lds
test
mov
jbe
and
movsb
or
sub
js
xor
lea
in
xor
das
movsl
cmp
cmpsl
cmc
dec
jl
outsl
shlb
cmp
daa
mov
cmp
in
sub
pop
cmpsb
test
mov
mov
pop
push
nop
adc
in
fstps
enter
in
mov
std
cmp
push
xor
stc
and
push
mov
pushf
js
jnp
pop
or
cmpsb
add
add
std
xchg
xchg
cmp
push
xchg
jmp
ficoml
xor
sub
jae
push
pop
mov
lock
jno
inc
sub
mov
int
mov
and
ja
mov
cmp
stc
mov
cmp
jg
sub
andb
adc
and
inc
sbb
add
in
lcall
adc
fdivs
sub
shll
shlb
adc
loop
into
jno
mov
daa
cmc
outsl
jb
into
pop
cmpsl
add
jecxz
in
cmp
cmp
xor
int
out
mov
lods
add
lds
cmp
imul
cmp
test
daa
gs
subl
sub
fistl
in
cmp
inc
mov
data16
xlat
sub
mov
cmp
jae
xchg
xchg
mov
adc
jno
mov
fld
adc
dec
int
jge
inc
or
aad
or
lods
mov
cwtl
cli
inc
pushf
lods
push
lods
adc
jg
out
fadd
jo
xchg
push
pushf
jle
cltd
sti
sbb
inc
hlt
je
fwait
or
std
sub
adc
cmc
mov
ret
imul
insb
leave
js
sbb
xchg
dec
icebp
sbb
add
mov
inc
mov
add
inc
lahf
div
inc
mov
and
inc
dec
mov
push
push
das
and
inc
lock
inc
push
loop
and
bswap
pop
or
or
icebp
movsl
push
iret
mov
mov
mov
insl
sbb
dec
es
xor
ret
jp
fs
jl
sub
fcoms
rorb
push
pop
push
in
mov
jo
add
addr16
push
lods
imul
xor
inc
pop
ljmp
clc
and
inc
fstpl
fists
xorb
mov
cltd
xor
jne
xchg
jo
add
inc
stos
xor
imul
rorl
pop
adc
mov
aaa
test
sub
add
mov
mov
push
or
cmp
xor
lret
mov
pop
add
cmc
and
out
dec
mov
inc
xor
pop
dec
stc
icebp
int
mov
mov
call
add
in
sbb
bound
test
mov
add
push
mov
call
mov
mov
arpl
jp
dec
cltd
addr16
xlat
sbb
push
sub
ds
cmpsb
xchg
dec
pop
pop
jmp
loop
jecxz
cmp
pusha
pushf
aad
in
popa
jle
cwtl
or
jp
insb
icebp
into
push
and
out
cmp
lret
mov
push
push
hlt
push
cltd
pop
inc
jae
int
inc
pextrw
sbbb
rol
loop
iret
jl
and
push
xor
je
pop
cmp
imul
sbb
pushf
sahf
xchg
decb
sbb
or
push
jnp
push
inc
lahf
jno
arpl
pop
ss
and
repnz
xlat
gs
lds
aad
pop
mov
push
int3
out
push
add
das
cmp
push
aad
aaa
sbb
or
jge
add
jbe
or
push
fistl
popa
movsb
cwtl
or
cmp
pop
cmp
scas
adc
xor
adc
mov
jno
adc
mov
in
fsubs
inc
mov
ds
mov
xor
arpl
sub
pop
mov
sub
dec
and
adc
pop
jp
or
in
pop
xor
add
add
inc
xor
into
push
mov
mov
sbb
repnz
adc
xchg
inc
jg
sub
sbb
mov
lcall
pop
sub
xchg
or
push
inc
adc
fcoml
push
mov
ja
jg
sub
pop
test
jno
fnstsw
mov
popa
sbb
lret
dec
imul
leave
clc
fdivs
or
mov
rclb
psrad
fs
shrb
js
jae
push
into
push
cmc
rorl
or
leave
cmp
xor
cli
lret
jbe
out
push
cmpsb
mov
push
or
add
and
mov
int3
xor
pop
enter
imul
incb
ret
inc
sti
mov
in
cmpsb
es
jbe
jmp
fldenv
imul
sbb
jp
lahf
repz
pusha
stos
les
pushf
fsincos
fsubs
push
jmp
nop
sbb
push
ja
punpckhdq
xchg
pushf
push
dec
jge
stos
pushf
jl
lcall
call
cs
cmpsb
and
jecxz
xor
je
pop
mov
popa
mov
aas
xchg
out
inc
in
outsl
inc
negb
pop
nopl
fisttpl
movsb
dec
fdiv
addb
lea
stc
sbb
cwtl
rclb
std
cmpsb
jns
idivb
imul
aaa
insb
and
sub
push
jae
std
xchg
add
lods
mov
lret
imul
push
jo
xor
xor
push
sub
xchg
dec
inc
xchg
xchg
insl
add
es
xchg
sub
or
adc
sub
mulb
pop
jo
sbb
ja
sarb
push
orl
popa
sbb
loop
adc
cmp
clc
pop
adc
inc
mov
xor
test
stos
repz
imul
pmulhuw
out
push
mov
and
out
outsl
and
bound
rcr
or
and
xchg
mov
sbb
xchg
inc
mov
add
out
pop
imul
pop
push
mov
int3
add
add
cwtl
jp
fwait
hlt
int3
mov
inc
sarb
in
loope
ja
cwtl
ljmp
mov
adc
pusha
fidivl
jns
popa
fsubs
xlat
mov
mov
mov
hlt
dec
pop
bound
mov
jp
fistpll
dec
mov
imul
mov
or
cld
mov
or
or
fnstsw
xchg
mov
jnp
push
xchg
jmp
aaa
xor
sbb
les
and
shll
stos
xchg
mov
xor
mov
sub
jbe
jae
andl
push
test
ret
aas
iret
fistpl
push
jnp
add
cmp
lods
xor
lcall
push
mov
inc
mov
and
je
mov
repnz
pop
mov
repnz
aam
inc
orb
movsl
rcrb
and
push
add
adc
out
fsincos
lock
lods
sbb
test
sbb
outsl
hlt
movsb
and
mov
cmp
pop
jo
std
sub
insb
insl
mov
cmc
sahf
sub
test
cmc
jl
ret
push
jno
and
cmp
sbb
xchg
dec
enter
in
negb
inc
rcl
cld
push
es
xchg
mov
pop
lahf
jg
jb
adc
jge,pt
aad
out
and
xchg
gs
daa
push
pop
push
push
or
js
jecxz
pop
push
out
adc
movsb
adc
mov
in
sbb
repz
adc
scas
adc
stc
sbb
sbb
add
or
dec
lcall
sub
dec
xchg
or
fwait
in
push
inc
cmp
test
bound
jg
xor
sbbb
test
in
sahf
imul
mov
das
lret
push
imull
push
mov
ss
test
pop
rcrl
cmp
rcll
sbb
or
outsl
inc
xchg
xor
xchg
dec
into
int
jge
rcrl
ds
std
out
jne
mov
sbb
lretw
xchg
lret
add
jns
fwait
imul
lret
mov
out
and
gs
cmp
and
push
paddsb
xor
mov
dec
test
cmp
pop
xchg
cmp
cmp
les
repnz
xor
pop
dec
dec
mov
rcl
sahf
xchg
jb,pn
xor
jbe
das
pushf
add
adc
fisttpl
pop
dec
fs
outsb
mov
call
xchg
jp
and
mov
dec
movsl
je
enter
xor
jb
ficoms
aas
xor
cmpsl
inc
add
inc
test
repz
mov
cli
push
fwait
jecxz
cwtl
mov
mov
jnp
cwtl
jnp
cmpsb
std
dec
xchg
dec
idivb
cmp
shll
insl
mov
nop
inc
daa
das
fcomip
das
lock
mov
test
mov
adc
stos
cld
pop
popf
push
icebp
push
jns
mov
xchg
dec
inc
push
and
cmp
dec
insl
in
cwtl
sahf
push
or
shrl
mov
mov
mov
jle
jb
push
repz
int3
and
popa
xor
xchg
xchg
fmul
xchg
clc
lcall
push
mov
mov
enter
hlt
cmp
mov
mov
fsts
daa
mov
out
sub
stos
stos
adc
mov
shll
rclb
xchg
sub
iret
mov
mov
dec
cmc
orl
inc
and
push
negb
add
lods
mov
pop
mov
cmp
or
pop
and
pop
xchg
cmp
test
pop
or
and
test
hlt
in
in
popa
jns
push
bound
push
out
mov
or
loope
and
aas
shl
mov
sub
add
jp
push
andb
dec
or
sti
xor
or
push
sbbl
fiadds
notb
jbe
xor
sahf
out
pop
pushf
add
scas
mov
xchg
add
and
xlat
stos
add
popa
mov
leave
repz
push
pop
pop
shll
jge
inc
and
mov
ret
push
iret
cmp
dec
push
ret
scas
and
mov
sbb
mov
stc
fisubl
fsts
or
movsl
or
hlt
mov
dec
repnz
xchg
mov
or
and
popf
int3
mov
and
or
inc
pop
aaa
cwtl
pushf
pop
sbb
dec
sbb
xor
jbe
cmp
movsb
scas
xchg
cmp
push
and
je
into
insl
cmpsb
jo
aaa
aam
xor
push
fmuls
in
jl
sub
aas
pop
sbb
add
mov
enter
in
fisttpll
cmpsb
or
ss
push
icebp
rcrb
push
pop
loopne
lahf
sahf
sbb
add
mov
jns
sub
push
clc
loope
and
cmp
clc
rcrl
jbe
pop
jle
out
out
and
xor
xlat
lock
adcb
sarb
adc
pop
loop
sub
lea
push
or
sub
and
flds
inc
fmull
mov
aas
mov
mov
popl
dec
inc
cmp
lret
sahf
or
jg
cmp
bound
mov
stos
mull
or
cmp
adc
ficoms
lods
add
fs
cs
mov
sahf
xchg
mov
xor
rorb
xor
fbstp
adc
in
out
pop
sub
mov
out
dec
add
add
pop
imul
cwtl
iret
pop
push
fs
lahf
cmp
pop
decb
stos
sti
call
pop
mov
stos
xlat
cmp
mov
and
add
repz
les
cmp
imul
dec
ljmp
aad
pop
push
cs
imul
jb
pushf
lods
sub
adc
xchg
pop
add
in
loop
call
cld
inc
in
es
dec
jecxz
fnsave
dec
dec
inc
cmp
mov
cmp
sarb
inc
sbb
mov
pop
push
cmpsb
jl
cmpsb
cmp
dec
mov
mov
cmc
scas
scas
mov
pop
movsb
cwtl
ss
imul
rorb
and
stc
in
mov
and
xor
mov
pushf
data16
ljmp
stos
dec
sbb
mov
icebp
sub
or
test
je
cmp
jmp
rcr
les
iret
mov
ret
daa
lahf
push
aam
mov
clc
rol
adc
pop
scas
jg
mov
test
mov
je
mov
popa
dec
sti
push
rcll
aad
mov
push
push
movups
or
lock
scas
dec
cpuid
decl
push
push
xchg
xchg
xlat
mov
bts
mov
pop
mov
mov
dec
xchg
xchg
xchg
cmc
mov
cwtl
push
test
dec
mov
sub
cltd
addr16
add
add
fidivrs
fwait
push
jmp
or
adc
cmc
ja
dec
rcr
xlat
ja
sbb
mov
mov
mov
jbe
jns,pt
pop
and
sbb
mov
and
dec
and
call
mov
and
jp
jno
addr16
sub
sbb
sub
popl
jmp
pop
xchg
test
fldl2t
xchg
pop
adc
fists
and
in
adc
add
jmp
insb
xor
into
stos
js
xor
adc
jnp
jnp
mov
loop
jl
inc
mov
out
pop
test
loope
add
cld
adc
and
insl
xchg
fstl
sbb
in
xchg
add
adc
pop
push
repz
lods
int
push
mov
mov
test
mov
hlt
or
xor
mov
repnz
scas
shrb
push
lds
jnp
cmpsb
and
cmpsb
hlt
int3
cmpsl
inc
push
add
dec
mov
out
pop
adc
push
roll
jg
jge
mov
rcll
testl
xor
daa
and
sbb
scas
lods
in
jo
xchg
push
mov
testl
cmp
cwtl
pusha
daa
test
stc
enter
in
nop
push
or
mov
push
xor
mov
lea
or
test
dec
xchg
mov
insl
adc
loope
sbb
pop
aaa
pop
mov
pop
movsl
pusha
xor
mov
in
xor
and
sbb
stc
andb
stc
rclb
add
outsb
mov
dec
lcall
mov
inc
pop
insl
divl
int
arpl
push
dec
out
or
mov
xchg
arpl
push
push
jg
dec
sbb
push
rcrb
scas
push
mov
mov
sbb
lret
mov
es
mov
jb
ss
xchg
mov
fs
es
inc
imul
xor
das
outsl
add
mov
mov
into
xchg
pop
push
or
or
cli
fs
lret
cmp
and
shl
jp
xor
imul
cltd
arpl
xor
loopne
dec
mov
sub
fwait
imul
xchg
jmp
mov
xor
add
mov
push
sbb
ret
push
aas
rep
mov
les
push
mov
loope
dec
dec
rorb
aad
xchg
test
cmp
jae
pop
aad
adc
cmpsl
insb
cltd
sbb
aas
push
push
lea
push
sub
jecxz
cltd
sub
jge
sti
or
jns
aas
jno
ret
arpl
inc
xchg
icebp
lods
pop
clc
xlat
mov
dec
popf
imul
call
lds
icebp
sarb
fwait
outsl
insl
testb
jg
outsl
test
and
fbld
mov
popf
loope
lock
push
mov
nop
mov
stos
cld
mov
out
icebp
add
jo
shll
cmpsl
test
loope
aaa
mov
add
push
jbe
ret
mov
mov
sub
daa
xchg
rcrb
adc
sbbl
out
push
xor
and
pop
popa
popa
cmp
outsb
enter
jae
clc
adc
nop
push
adc
xchg
mov
enterw
push
cltd
push
dec
nop
add
cltd
je
inc
or
lock
dec
pop
arpl
ds
lret
rolb
test
js
dec
popf
icebp
adc
mov
jecxz
add
fisubrl
xor
stos
sub
cmp
addb
inc
fadds
subl
or
adc
andl
xchg
das
mov
hlt
sub
add
jl
sbb
or
mov
jle
jne
jns
dec
add
fdivrl
pusha
push
push
jp
nop
jne
in
cwtl
or
outsl
fldcw
adc
les
je
push
jmp
cs
andb
cli
in
repnz
jge
out
out
cwtl
jle
popf
pop
mov
inc
dec
jbe
jmp
jns
dec
xor
mov
jp
jae
cmp
insl
pop
mov
cmpl
ffreep
adc
mov
fcomps
jmp
mov
mov
fimull
jbe
sub
mov
or
stos
popa
jnp
hlt
jo
hlt
push
pop
mov
add
mov
inc
push
mov
xchg
and
pop
insl
or
int3
xchg
xorl
loop
repnz
push
push
sbb
and
outsl
cmc
mov
push
pop
and
movsb
les
cmp
and
jle
mov
jo
call
mov
sahf
cmp
dec
shlb
int
dec
js
jno
sub
out
daa
test
push
in
stos
pop
xchg
cmpsb
adc
or
mov
sbb
push
add
xchg
lahf
fdivrl
andl
call
xchg
ds
test
sub
test
out
push
sbb
jbe
adc
push
pop
int3
outsl
rcl
jne
adc
sub
test
mov
sbb
mov
mov
adc
and
sub
into
add
cmp
push
push
adc
jns
cltd
pop
cld
pop
in
rorb
mov
js
push
dec
jbe
and
mov
fwait
mov
loop
movsl
js
jg
arpl
subb
out
sahf
push
mov
adc
insl
sub
xlat
mov
lret
es
fdivr
fcomps
mov
mov
push
adc
stc
clc
or
imulb
out
dec
xor
hlt
push
cmc
push
ds
or
and
cmp
dec
pop
xor
bound
xchg
and
arpl
decl
test
mov
push
cmp
adc
je
imul
into
mov
loopne
push
xor
decb
stc
shr
push
pop
les
movsl
push
std
xlat
sbb
pop
int3
dec
sbb
xchg
mov
les
jo
xlat
pop
cmovb
out
loop
mov
aas
aad
xor
cs
imul
add
adc
outsb
jb
data16
mov
jmp
mov
mov
jns
sub
fsub
jnp
divb
hlt
dec
cmp
xchg
sbb
adc
jns
push
push
in
inc
sbb
repz
pop
dec
mov
outsl
mov
mov
inc
cwtl
lods
loop
std
inc
xor
testb
sarl
sbb
inc
loopne
mov
jl
div
sub
jmp
mov
mov
or
mov
orl
insl
lahf
int
es
and
inc
insb
pushf
aam
xor
hlt
aad
shrb
pop
in
movsl
push
mov
xchg
rcrl
shr
add
sub
ljmp
sti
clc
dec
stos
fcmovnu
fisttps
xlat
fisubrs
sbb
and
jl
inc
dec
add
xor
push
push
and
test
out
push
gs
fistpll
je
cmp
lcall
jae
test
stc
std
mov
xchg
mov
xor
insl
inc
or
popf
mov
dec
ror
call
mov
add
sub
pushf
mov
push
or
jo
inc
and
xlat
ja
scas
rcrl
insl
mov
aaa
aas
popf
xchg
jb
and
mov
jns
pop
aas
bound
das
mov
push
outsb
xchg
mov
out
in
jne
pushf
mov
mov
fidivrs
repz
arpl
or
pop
sbb
xchg
out
flds
aas
std
das
jmp
add
rcl
pushaw
mov
xor
mov
or
insb
or
clc
and
aas
stos
pop
pusha
hlt
push
add
mov
popf
leave
nop
mov
jae
add
inc
inc
jp
pop
repz
sub
sub
idivl
mov
in
xchg
mov
sub
mov
inc
mov
fisubrs
inc
scas
cmp
adc
leave
js
ja
xor
mov
pop
jg
lds
sbb
in
imul
ss
add
sbb
aaa
aad
inc
sbb
mov
std
jbe
gs
push
xchg
fsubl
inc
adc
adc
pop
scas
imul
jo
pop
es
addl
xchg
jl
pop
mov
cmp
in
enter
in
xchg
mov
add
ljmp
outsl
lret
xlat
fistpl
push
test
or
cmp
adc
loope
imul
sbb
jecxz
mov
pop
js
movsb
cmp
bound
cmp
xor
into
ret
movsl
out
loope
popa
or
pop
popl
cltd
rorb
jmp
outsb
test
pushf
sub
adc
jno
addr16
or
imul
sub
pop
inc
int
jb
push
dec
jno
and
cs
mov
xor
sbb
daa
jnp
add
cwtl
test
sub
enter
pop
lods
mov
outsb
jae
lret
test
movsb
es
sbb
fnstenv
fnstenv
stos
fs
and
stc
scas
push
mov
outsl
ret
outsb
xchg
xor
xchg
xchg
into
pop
repnz
or
cmp
data16
lcall
out
adc
xchg
lods
insb
sbb
add
fists
int3
ret
rcrb
add
jo
fsubl
pop
adc
mov
pop
sti
cmc
int3
lods
in
mov
out
sub
pextrw
sbb
sbb
dec
test
les
in
pop
popa
inc
mov
sbb
psubusb
mov
or
lea
cmp
pop
sbb
mov
lea
in
adc
das
lcall
inc
adc
dec
mov
in
jb
jecxz
aas
scas
jns
inc
insb
mov
mov
ds
dec
xchg
push
dec
jae
adc
hlt
addb
cmpsl
je
mov
lcall
fmull
rorl
cmpsb
imul
xor
das
pop
filds
lock
lea
jb
push
lret
clc
jo
cld
or
dec
icebp
scas
insb
push
mov
sbbb
insl
xchg
ret
aam
aaa
icebp
push
jmp
aas
pop
xchg
pop
or
xchg
lcall
mov
js
dec
popa
divb
ljmp
sub
xchg
fldl
mov
push
lcall
test
pop
push
cltd
jl
les
xlat
adc
mov
cmp
xchg
lods
inc
mov
mov
ss
into
loop
pop
mov
push
cmp
lock
xchg
pop
enter
in
xchg
aaa
mov
jns
sbb
mov
jge
mov
sub
push
es
add
and
or
ficoms
mov
sbb
cli
pop
testb
mov
je
jp
pop
xchg
ror
in
jg
jns
cmc
mov
out
xor
test
std
and
setnp
mov
inc
mov
scas
fs
ljmp
or
mov
sbb
sbbl
xchg
or
mov
pusha
and
in
fcomps
jle
dec
sub
inc
out
insb
jae
sbb
jne
lcall
dec
and
lock
jmp
sub
mov
sub
nop
pop
sub
ret
jnp
mov
sub
shlb
push
outsl
scas
scas
lcall
add
dec
xchg
or
or
jb
inc
inc
sub
push
in
push
inc
mov
sub
stc
mov
jmp
movsb
leave
out
scas
xchg
repnz
pop
clc
mov
jns
and
in
int3
fimuls
and
int3
push
mov
or
mov
xchg
inc
ds
xchg
cmpl
push
adc
movsb
fisubrl
pop
add
std
scas
dec
popa
inc
jo
jmp
and
fs
fdivrl
xchg
jno
xchg
cmpb
cwtl
or
xorb
in
jns
test
inc
pushf
pop
iret
push
sbb
out
push
push
test
insl
into
and
stc
cmp
cmp
sub
scas
push
cmpsb
loope
lret
mov
fcoml
hlt
imul
cmp
sti
stos
into
xor
jmp
push
sbb
sub
out
test
ds
call
and
fmull
mov
jnp
pop
ljmp
int
dec
cltd
push
push
loopne
and
in
mov
test
insl
adc
mov
xor
loopne
ss
inc
cmp
idivl
pop
roll
inc
mull
inc
fcom
and
jge
sbb
es
jns
and
data16
jno
ljmp
xor
div
loopne
cs
cmp
mov
cmp
push
mov
jno
push
cli
std
xor
out
lods
mov
push
call
add
push
sub
adc
imul
call
loopne
call
lock
aam
mov
in
sub
mov
add
jno
mov
cli
cmp
inc
and
xchg
or
inc
repz
les
xchg
flds
out
inc
lds
pop
nop
aas
inc
icebp
aad
lcall
and
ret
pushf
pop
sarb
mov
mov
push
or
jmp
repz
lea
retw
gs
je
jne
dec
sub
in
add
aas
dec
out
xchg
out
pop
loope
out
mov
pop
push
mov
mov
bound
cwtl
and
push
std
nop
imul
and
mov
das
cmp
loop
mov
mov
out
mov
xor
addr16
gs
xchg
mov
xorl
imull
dec
es
ret
arpl
aam
add
loop
outsb
rclb
xor
sub
jbe
push
add
sub
xor
push
popa
cmpsb
out
ljmp
pop
clc
shrl
sub
jle
mov
push
les
cmp
add
mov
nopl
push
jno
xchg
repz
ss
sbb
sbb
fs
shr
rclb
xchg
shrb
test
les
xchg
or
les
cmp
sub
repz
mov
jae
outsb
ss
add
push
out
fwait
push
pop
loop
mov
jbe
dec
sahf
inc
ja
push
pop
pop
mov
gs
mov
xor
pop
jns
xor
out
adc
mov
push
adc
dec
scas
inc
add
loope
fwait
mov
mov
pop
fbld
mov
or
repz
cmpsl
dec
out
push
andl
adcl
mov
fists
mov
fpatan
mov
inc
loope
jle
adc
jnp
cmp
xor
and
dec
push
orl
mov
pop
mov
push
out
xchg
mov
inc
pop
test
pop
popa
add
iretw
adc
and
adc
push
imul
js
pop
xor
repnz
test
outsl
popa
or
mov
js
and
outsb
hlt
ss
outsl
leave
data16
sub
xchg
mov
xchg
adc
test
pop
cli
xor
push
sub
or
jl
sbb
inc
cmpsb
jbe
sbb
push
add
sbb
imul
cmp
scas
sub
js
nop
xchg
xor
inc
insb
fwait
dec
pop
cmp
jno
jl
cmp
mulb
orl
mov
cmpsb
pushf
add
inc
sub
push
test
jl
ficomps
mov
fldt
ds
pop
inc
cmp
cmpsl
fildll
bound
push
dec
cmp
xor
pop
inc
cmc
mov
dec
mov
jge
sbb
dec
xor
fimull
ret
adc
adc
dec
sbb
outsb
fdivrl
jns
push
adc
sbb
pop
imul
int
adc
and
sbb
lock
sahf
fistpl
jg
mov
cmp
sahf
test
xchg
sahf
cmp
loopne
xor
lret
and
and
fmuls
clc
adc
pop
mov
push
fs
into
jle
jge
subl
mov
repz
pop
push
cmpsl
or
and
adc
xor
jb
xor
fs
std
or
test
lods
cmp
data16
in
add
jp
cmp
fwait
imul
movsb
dec
pop
mov
inc
dec
gs
imul
notl
in
xchg
out
cmpsl
mov
decb
jle
and
sbb
iret
shll
les
and
jl
sub
pop
cmp
pop
push
nop
sbb
lods
aad
arpl
les
test
adc
adc
pop
jg
ffreep
push
push
cmp
xor
xor
dec
mov
push
mov
inc
mov
mov
pop
test
push
fistl
cmc
sbb
mov
lds
fisttpll
sub
movlps
shrl
mov
ret
mov
sbb
out
cmp
sqrtps
pop
sbb
popa
idiv
icebp
pop
ds
addb
and
and
push
sbb
clc
imul
int
mov
shl
loopne
pop
dec
jge
mov
test
loope
loopne
repnz
dec
lcall
cmp
mov
cld
das
in
fstl
push
and
jge
cmp
inc
mov
cltd
ljmp
or
mov
mov
stos
lods
orb
in
stos
roll
jbe
mov
popf
test
push
push
dec
cmp
xchg
pop
mov
psubusw
mov
test
pushl
xchg
or
sbb
popa
inc
call
and
pop
insb
lcall
add
loopne
pop
fidivrs
jns
adc
out
lock
jne
pop
or
testl
and
dec
adc
xchg
or
inc
shrl
push
roll
mov
push
xchg
jp
aad
xor
push
pusha
je
pmulhw
sahf
jle
shl
jnp
negl
dec
and
stos
mov
xchg
push
pop
mov
ds
ficoml
mov
es
in
mov
rcrb
lcall
je
sahf
adc
insl
xchg
scas
jne
push
imul
sub
fadds
inc
push
mov
xlat
inc
mov
push
arpl
xchg
jmp
ljmp
or
and
aad
imul
mov
add
push
mov
aaa
adc
mov
or
in
jbe
movsl
xchg
push
push
jae
movsb
lock
push
cmp
je
and
shll
or
jo
cmp
fisttpll
add
sub
int
mov
jl
add
dec
mov
aaa
sbb
or
lret
mov
cmpsb
pop
dec
cmc
inc
mov
xor
push
dec
mov
sbb
movsl
sub
lret
jb,pt
lahf
cmp
inc
and
hlt
ljmp
jge
js
pop
sub
push
cmpsb
stos
xor
testb
cld
sbb
mov
lods
cld
push
rcrb
jnp
outsb
scas
sahf
lods
sub
insb
push
insb
int
lcall
mov
test
loope
insb
mov
push
pop
sbb
and
mov
pop
leave
mov
push
mov
mov
xor
hlt
xchg
push
dec
mov
shll
call
mul
daa
imul
push
adc
mov
int3
cmpsl
fs
xchg
stc
aam
cmp
adc
sti
xor
jmp
aaa
or
cmp
and
enter
push
out
mov
mov
inc
lods
and
pushaw
pop
in
popa
ret
add
imul
test
test
gs
mov
sbb
push
add
and
dec
sub
cs
data16
iret
xlat
popa
sub
cmp
push
sbb
xchg
cmpsb
and
mov
cmp
mov
addl
jecxz
and
mov
aad
nop
xchg
cs
lods
movsb
jmp
or
mov
bound
pop
xor
out
call
data16
pop
cmp
jecxz
inc
aaa
je
cmp
dec
sbb
cmpsb
or
mov
flds
arpl
pop
daa
sbb
fcmovnb
rcrl
xor
jecxz
mov
hlt
cmp
cwtl
icebp
push
std
fisubrs
mov
sar
test
pop
mov
xchg
or
das
clc
jns
lock
fiaddl
inc
test
pop
lret
inc
jp
cld
mov
icebp
xor
jg
shrb
push
dec
push
jg
insl
cmp
es
icebp
ret
xorl
std
sub
cmc
xchg
sarb
and
and
add
btc
imul
xchg
xchg
and
clc
aaa
test
jnp
fcoms
in
stos
mov
xchg
xlat
test
mov
add
mov
paddusb
pushf
push
mov
scas
xchg
subl
stos
fwait
cmc
xor
in
xchg
xor
aas
ficoml
test
dec
mov
adc
pop
mov
add
xor
or
dec
add
mov
test
or
and
dec
test
movsl
pop
daa
mov
push
mov
or
in
sahf
je
mov
or
out
iret
lea
jne
movntq
subl
mov
mov
std
fbld
std
add
mov
aas
dec
xchg
imul
in
es
xchg
dec
mov
xor
aad
in
pop
and
addl
mov
jl
mov
ret
add
insb
mov
gs
ja
je
stos
jae
ret
jb
repz
iret
rorl
fldl
iret
rcrl
pop
push
mov
add
ja
adc
stos
cmp
mov
movb
gs
sbb
repz
inc
stos
hlt
int3
pop
sbb
push
cmc
cld
repnz
shlb
pop
out
int3
ror
dec
lds
movsb
fidivrs
imul
fmulp
sub
or
jno
sbb
mov
push
je
scas
push
mov
or
cmp
les
pop
xchg
pop
scas
out
push
xor
or
jno
jl
xor
xchg
cmp
js
jg
icebp
enter
in
cs
cmpsb
mov
cmp
push
jle
sub
and
lahf
ja
pop
and
fisubrs
xchg
inc
or
dec
mov
out
add
loope
mov
aam
mov
stos
js
movsl
cmpsl
pop
pop
cmp
inc
push
mov
add
movsl
xchg
sbb
jl
or
adc
adc
sub
sub
ret
mov
dec
pop
addr16
cld
sub
pop
int
sarl
out
push
pop
in
and
insl
mov
push
mov
xchg
or
mov
push
xchg
test
fcompl
test
mov
ror
fdivrl
mov
pop
in
cld
adc
ss
insb
adc
fildl
stc
mov
adc
outsl
aas
xchg
sbb
std
and
cmc
xor
mov
cmp
adc
xor
sbb
out
cmc
mov
or
data16
scas
add
jns
imul
loop
pop
fildll
loopne
cmp
cmp
ret
mov
mov
in
lods
xlat
mov
aam
sbb
push
out
xchg
fldl2e
lods
addr16
decb
dec
cmpl
aad
and
mov
aas
jmp
push
dec
pushf
pop
aas
nop
adc
push
enter
es
int
sub
cmp
mov
dec
nop
mov
jb
sub
inc
fsubs
inc
mov
add
mov
ret
or
mov
in
push
out
std
test
notb
dec
dec
and
and
mov
sub
das
xlat
or
stos
adc
pop
cmpsl
mov
in
xchg
lret
mov
mov
mov
jne
or
cmpsl
jle
xchg
aaa
insl
and
es
ret
adc
xchg
arpl
sub
xlat
pop
rorb
lret
fisubs
mov
mov
push
mov
and
andb
aam
and
xchg
rcl
clc
jb
rcr
mov
shl
mov
lahf
test
ljmp
cmp
sub
inc
or
mov
mov
shr
sbb
xchg
inc
sbb
jp
xchg
mov
movsl
outsl
push
or
test
push
mov
add
fisubrs
push
push
push
xchg
fwait
fwait
rep
or
fidivrs
dec
ja
pop
ja
cmpsb
gs
loop
pop
mov
xchg
std
cld
scas
in
push
push
rolb
in
mov
scas
pop
pop
mov
push
sub
or
push
mov
mov
mov
push
push
jp
setno
and
and
and
jno
aam
dec
xchg
ss
jmp
and
cld
fildll
loope
stos
jecxz
in
push
adc
sub
jnp
mov
out
rcll
jo
popf
pop
adc
jae
mov
mov
insl
push
aaa
mov
outsb
inc
jge
lods
pop
push
mov
ret
adc
xor
movsb
adc
into
mov
cli
popl
xchg
push
imul
sbb
loopne
xchg
sbb
inc
es
mov
fistps
pop
inc
mov
cmp
pop
stos
pop
leave
lret
push
jmp
and
mov
in
hlt
lds
inc
mov
pop
xchg
xor
sbb
mov
xchg
sbb
sbb
cltd
jbe
adc
push
xchg
dec
cmp
xchg
xchg
add
fidivrl
imul
push
lock
xor
jl
cmp
dec
cmp
and
in
adc
cmp
inc
fdivrs
out
inc
out
push
cmc
cs
lahf
xchg
add
and
cmp
mov
mov
mov
imulb
je
lock
pop
mov
or
pop
jb
xor
std
mov
aaa
lock
shrl
push
cmpsl
rclb
adc
je
imul
hlt
in
cmp
push
sbb
pop
out
jo
sahf
xchg
mov
cmp
mov
imul
dec
pop
js
xchg
adc
dec
sub
test
pop
stos
sahf
and
sbb
lods
inc
shll
lret
push
negl
out
mov
imul
ss
push
adc
stos
lods
stc
inc
push
jg
ss
into
outsl
push
sub
xor
or
cld
push
mov
or
push
cli
xor
jns
cli
leave
mov
mov
out
and
data16
sbb
clc
adc
inc
pop
imul
dec
lds
push
test
ja
pop
gs
hlt
pop
pusha
push
cmp
imul
cli
stos
mov
push
dec
dec
xlat
cmp
cmp
xchg
sbb
les
fisttpll
adc
xchg
nop
stos
shll
in
test
pushf
add
pusha
xchg
mov
sub
fldl
ds
mov
aad
aaa
je
dec
test
loop
jb
jl
aas
lret
inc
repz
inc
inc
out
pop
insl
jecxz
fistpl
into
fisttpl
imul
outsl
add
cwtl
push
jno
std
sub
mov
rcrl
push
sub
mov
lahf
push
lock
and
loope
sahf
lret
and
push
cld
loop
mov
loop
inc
mov
jge
jg
adc
jl
or
out
out
lret
xor
aam
andl
pop
xor
mov
mov
mov
mov
popl
ljmp
adc
pop
orps
mov
gs
sahf
cltd
pop
lahf
add
test
setp
cmp
adc
mov
movsl
insl
push
stos
jns
rcrb
mov
inc
es
dec
insl
xchg
inc
cmpsb
dec
outsb
xchg
push
mov
lock
xor
add
xchg
fs
add
mov
mulb
push
or
jo
inc
lods
mov
dec
push
iret
ja
leave
and
popf
push
mov
leave
and
xchg
dec
jb
in
push
xchg
jns
lea
lea
dec
jne
mov
sbb
lea
mov
jbe
jp
sbb
call
out
rorb
arpl
xchg
xchg
add
fsubrp
xchg
repz
or
pusha
inc
push
pop
in
in
loope
jb
cmc
jnp
enter
jmp
and
popa
xor
jg
lret
mov
mov
sub
cli
mov
jae
cmp
hlt
scas
pop
cmp
insl
cmp
xchg
or
push
inc
mov
scas
sahf
hlt
aaa
imul
sbb
ret
mov
mov
inc
movsl
add
push
call
aaa
sub
hlt
bound
and
mov
add
mov
fidivrs
inc
cmp
add
jg
aaa
dec
ja
sbb
jge
sub
jbe
clc
mov
mov
idivl
in
imul
jo
enter
lahf
orl
scas
jmp
jl
sbb
into
xchg
cmp
test
cmp
adc
in
cld
cltd
imul
jge
push
adc
insb
test
enter
mov
les
or
lahf
movsl
inc
dec
cmc
ds
int3
cmp
stc
mov
loope
ret
int
aaa
pop
das
push
dec
js
sahf
jle
cmp
lret
xor
imul
sub
test
aas
cmpsb
cmp
das
loopne
adc
xlat
ficompl
jno
in
dec
push
jno
add
gs
sub
pop
aad
mov
xlat
stos
and
std
jno
ror
mov
mov
jg
pop
data16
test
dec
movsb
sbb
push
jne
fisubrl
or
clc
in
lret
xor
push
int
fdivrs
adc
ss
adc
fs
pop
scas
stc
stc
jo
loop
jmp
lock
ret
xchg
into
stos
lea
cmp
popa
dec
xor
stos
out
std
mov
lods
rcrb
jmpw
add
popa
repnz
out
cli
pop
sbb
jg
bound
incb
xlat
es
aas
push
push
mov
lret
xlat
push
jecxz
cmp
push
mov
fcmovnu
imul
inc
xchg
les
mov
inc
and
jbe
inc
and
das
aad
jo
cs
loopne
jmp
xor
pushf
mov
adc
pop
dec
aad
fs
call
fwait
dec
mov
inc
jle,pn
in
xchg
je
push
push
dec
jle
jno
lahf
add
aas
imul
adc
pop
adc
inc
dec
cmc
rorb
adcb
cwtl
leave
mov
std
roll
shl
push
test
fisttpl
inc
bound
das
xchg
cmp
lock
into
orl
or
xchg
pop
mov
jl
aaa
dec
jo
xchg
es
jp
cs
or
sub
pusha
jae
lds
add
les
adc
cli
iret
mov
mov
mov
clc
call
les
sub
xlat
mov
jl
test
call
add
fimuls
stc
repz
mov
xchg
push
push
sti
out
or
shrb
mov
push
sbb
roll
push
aam
dec
aad
push
xchg
xchg
mov
cmp
or
xor
jl
cmc
mov
add
cltd
das
push
stc
fstps
push
jmp
inc
fiadds
pop
cltd
in
jle
rcrb
sub
xchg
mov
popa
xchg
fwait
sub
in
mov
jns
std
in
bound
fadds
out
insb
dec
xor
cmpsl
jg
dec
sbb
cmp
mov
dec
jp
fisubrl
or
pop
add
sub
xor
and
jae
xchg
push
mov
lods
sahf
jg
loopne
mov
gs
addr16
pop
insb
cmc
sub
dec
and
mov
add
popf
ficoml
and
mov
fildl
xchg
fldenv
ret
test
adc
stc
xor
inc
or
inc
ret
push
sbb
js
xchg
adc
fisubl
mov
notl
inc
ret
add
arpl
hlt
lods
mov
sbb
enter
cmp
push
lds
out
rcr
popa
jns
pop
in
int3
ljmp
or
xchg
aaa
push
inc
test
jge
lcall
popl
movsb
sbb
mov
mov
or
scas
test
sub
xor
mov
imul
es
leave
sub
and
cmp
xchg
mov
enter
in
jecxz
scas
cmpsb
sub
cmp
sbbl
scas
imul
mov
aam
enter
or
inc
test
jae
mov
loope
stc
mov
pop
outsb
dec
mov
pop
add
inc
lea
or
notb
sbb
test
rorb
test
adc
cmp
sub
aam
nop
inc
xchg
push
enter
xor
imul
xchg
mov
int
xor
push
fs
mov
mov
inc
fmull
cmp
nop
imul
mov
das
sbb
mov
rorl
dec
neg
mov
fdivs
push
ss
push
adc
mov
jmp
loop
adc
xor
pushl
mov
aam
mov
or
inc
in
jnp
push
cli
das
cmp
mov
lods
mov
xor
dec
adc
shrl
imul
les
cmp
lods
aas
push
gs
test
mov
jnp
mov
cmp
jge
cmp
sub
repz
add
clc
ret
mov
adc
cs
mov
pushf
pop
and
adc
movsb
sbb
jecxz
arpl
xchg
lret
add
icebp
movb
repz
je
mov
dec
cmc
xor
aas
or
inc
sub
aaa
inc
push
stc
mov
fstpt
dec
loopne
iret
adcl
xchg
scas
cwtl
test
std
jp
negb
add
ss
and
mov
mov
loope
shrb
je
ljmp
clc
out
cmpsl
push
sub
cld
cmp
scas
icebp
nop
inc
jge
pushf
aam
jnp
icebp
dec
or
insl
xlat
xor
es
mov
aam
cmp
sub
iret
pop
in
xlat
mov
lret
adc
dec
cmpl
xor
xchg
xchg
clc
idiv
and
mov
mov
push
pop
test
scas
cltd
std
pop
jge
pop
outsb
sub
pop
mov
push
clc
pop
xor
popf
insb
dec
out
imul
stos
push
jno
pop
lretw
jecxz
repz
sbb
xchg
jne
and
test
stc
mov
inc
pop
xchg
dec
mov
xchg
sub
xor
gs
iret
lret
repnz
cmp
aam
cmpsb
push
cmp
mov
or
adc
fldt
cmpsl
dec
push
stc
lret
popf
pop
pop
adc
mov
adc
xchg
ljmp
jns
adc
cmpsb
fwait
and
dec
in
cmp
outsb
ret
add
mov
dec
xorl
dec
fstpt
push
or
xchg
pop
sub
lods
mov
ficoms
sub
cltd
inc
sbb
pusha
jnp
sahf
in
dec
xlat
jle
iret
scas
jnp
sub
pusha
inc
sahf
and
bound
std
jnp
mov
add
push
cmp
jae
shrl
adc
stos
and
ror
iret
dec
addl
iret
xor
fs
in
imul
xor
mov
jg
imul
inc
mov
add
mov
out
aas
movsb
arpl
xor
xor
repnz
enter
xor
ss
jecxz
add
push
pop
adc
iret
int3
aad
clc
add
fdivrl
insl
gs
int
ljmp
icebp
inc
jbe
pop
xor
xchg
stc
movsb
cmpsl
and
and
gs
jo
loope
xor
cltd
mov
dec
mov
dec
pushf
jno
in
cmp
outsl
daa
jnp
test
in
lret
cmpsb
scas
sbbl
push
stos
fists
push
outsb
push
ljmp
movsl
movsl
dec
pop
adc
and
fs
loopew,pn
push
dec
push
xchg
loopne
lods
movl
push
mov
adc
jbe
cltd
sub
andb
popl
cmp
xor
sub
mov
cmp
rcrb
stos
sbb
shld
addr16
and
lahf
push
inc
mov
filds
scas
jb
nop
sbb
iret
sbbb
add
or
mov
mov
lods
shll
push
lret
lret
and
fdiv
data16
icebp
push
sub
adc
fsubl
or
loop
jo
outsl
mov
sbb
into
jno
outsl
or
or
je
push
imul
bound
dec
out
adc
push
lods
movsb
fimull
out
sahf
ret
add
ret
js
std
cwtl
mov
lds
or
or
pop
pop
xor
loopne
adc
gs
into
dec
sub
insl
cli
das
in
adc
sbb
sub
fwait
cmc
cmp
scas
sbb
popa
lcall
mov
inc
cmp
cmpsb
mov
mov
mov
cs
jno
jmp
sbb
fists
adc
sub
bound
leave
call
imul
je
arpl
insb
dec
nop
jb
scas
repz
cmpsl
into
popa
inc
inc
inc
mov
fstps
adc
stos
xchg
lret
push
out
subl
pop
cwtl
aas
xchg
std
and
jecxz
mov
jae
and
loop
mov
je
aad
push
jbe
lock
mov
mov
xchg
mov
test
arpl
enter
and
jp
pushf
dec
add
mov
push
ret
dec
sub
int3
sub
push
aam
add
pusha
and
mov
stos
mov
shl
xchg
popa
inc
outsl
leave
ljmp
push
fnstsw
jmp
push
mov
or
push
push
test
and
outsl
lahf
rorl
mov
fstl
and
out
into
dec
sub
adc
dec
and
sbb
mov
inc
dec
mov
xor
xor
mov
push
and
cmp
ljmp
rolb
xlat
pop
add
fildll
ss
push
rclb
or
push
push
dec
inc
or
mov
mov
xchg
xor
xchg
in
arpl
jns
lret
xor
cmp
cltd
mov
outsl
test
dec
jecxz
or
push
insb
nop
mov
popf
out
jl
pop
fimull
or
lock
xor
pusha
adcl
mov
jmp
insb
gs
ljmp
in
adc
jle
inc
mov
insb
lret
sub
sub
into
test
cmp
pop
mov
sub
jns
sub
cltd
inc
test
lea
ret
sbb
adc
test
int
imul
das
sbb
pop
mov
fimull
loope,pn
and
push
sbb
icebp
into
arpl
sbb
leave
cmpsl
cmp
repnz
stc
stos
mov
push
cltd
mov
sbb
xor
cmpsl
in
int
inc
es
int3
rcrb
js
push
or
nop
aaa
mov
sbb
sub
ret
pusha
dec
push
sub
stc
adc
adc
lahf
and
popa
mov
or
mov
push
jl
rorl
icebp
jl
movsl
or
lret
imul
out
in
mov
mov
inc
adc
nop
push
jne
xchg
test
inc
mov
lahf
adc
and
test
ds
cmp
sub
or
loope
rorl
es
daa
pop
in
enter
push
nop
adc
xor
push
hlt
add
enter
inc
insl
cmpb
out
rol
or
mov
loope
add
imul
xchg
test
jbe
mov
pop
loop
mov
mov
stos
int
dec
push
push
push
bound
scas
sub
fwait
mov
xor
jg
add
test
stos
xchg
sahf
mov
mov
outsl
dec
adcl
pop
push
out
fsubrs
outsb
mov
xor
insb
adc
loopne
xor
movsl
ja
addb
outsl
lcall
cmc
sbb
sub
push
cmp
or
cmp
lea
cli
xchg
mov
mov
and
jb
je
pop
mov
dec
imul
xchg
loopne
cld
xor
ja
xchg
in
sbb
sti
sbb
push
in
orb
pusha
mov
xlat
fstpt
add
and
sahf
repz
pop
and
scas
and
insb
inc
pop
mov
xchg
nop
pop
mov
aam
jns
adc
cltd
cmp
pushf
mov
repnz
pop
fs
jp
loope
adc
mov
decl
dec
push
adc
je
fisttps
pmulhw
rcll
inc
dec
inc
pop
mov
inc
pusha
pushf
outsl
pop
stc
loope
fcmovnu
notb
mov
xchg
addl
push
mov
aaa
ret
cwtl
cli
pop
cmp
in
cmp
aam
xor
fs
mov
pop
aaa
ds
xor
in
lock
ja
mov
dec
lret
fistpll
dec
cld
mov
xor
or
cmpsl
jns
sub
mov
insl
movsl
testb
repz
fadd
fistpl
aam
inc
cli
sub
and
mov
mov
test
push
lods
cmp
mov
pop
cmp
xchg
or
sbb
cltd
mov
push
push
jne
pop
mov
mov
cltd
imul
movhps
push
scas
clc
out
sub
out
xor
mov
shll
stos
xor
movl
ljmp
xchg
push
sbb
xchg
loope
xor
inc
aad
inc
xchg
push
adcb
or
add
ss
ja
adc
mov
sbb
aad
js
mov
jecxz
cli
mov
sub
mov
aas
mov
test
jne
jae
dec
and
mov
arpl
scas
dec
sbb
loope
or
ret
call
jae
mov
test
sub
test
xchg
aas
mov
lcall
cmp
jnp
xchg
scas
insb
ss
and
stos
fsubr
mov
rcrb
enter
dec
sarb
jae
pop
enter
ds
sbb
or
test
in
push
pop
cmp
scas
sub
js
adc
sbb
xchg
push
xchg
pop
push
xchg
inc
mov
shrl
inc
int3
pop
fldenv
add
leave
push
into
shl
ss
mov
insb
mov
lds
adc
pop
jb
adc
stos
mov
add
jbe
or
icebp
aaa
dec
mov
sbb
mov
jbe
push
and
jl
sti
movsb
mov
test
and
pop
xchg
scas
and
push
xor
pop
xor
dec
xchg
jl
jl
rcrb
jno
roll
daa
jns
mov
in
cwtl
push
sub
inc
mov
cmp
ret
push
adc
out
lahf
xor
inc
movsl
pop
sti
push
fiadds
orb
imul
pop
sub
js
jg
pop
jns
mov
fdivr
xor
iret
inc
add
cmp
pop
std
jb
inc
sbb
rcrb
jns
outsb
arpl
pop
sub
jle
push
int
or
pop
popa
xor
sub
sub
push
insl
sub
inc
adc
pushf
in
mov
jle
jg
inc
jne
roll
in
push
and
sbb
pusha
rol
stos
and
scas
sbb
negl
mov
fs
lds
ja
jle
mov
mov
stc
aad
cmp
adc
dec
inc
xor
lea
into
aaa
add
dec
cmp
out
cmp
add
cli
enter
pop
cmp
imul
int
add
movb
mov
rcll
sub
pop
cltd
sub
mov
jle
xor
paddd
sti
lret
sub
andl
sbb
out
imul
daa
insl
repz
jmp
push
fnstenv
movsb
dec
mov
push
jne
cmpb
jmp
sbb
adc
pop
loop
pop
dec
adc
pusha
pop
das
call
aaa
pusha
pop
dec
mulb
je
shlb
jmp
cwtl
aas
in
add
inc
out
out
pushf
xor
or
push
mov
xchg
xor
sub
loopne
mov
std
outsl
outsl
insl
mulb
fmull
shll
mov
pushf
mov
lcall
lock
int
mov
or
dec
mov
cld
mov
and
jg
js
xchg
inc
movsl
insl
mov
push
add
and
xchg
mov
jge
xchg
pop
inc
push
mov
lds
std
and
clc
int3
mov
lods
cmpsb
inc
adc
mov
ljmp
std
clc
aam
cmp
mov
add
pushf
pop
les
xchg
popf
icebp
pcmpeqw
mov
xchg
jb
ret
stos
jmp
pop
addr16
das
sar
jp
sbb
test
test
loop
dec
jno
dec
xchg
or
adc
inc
sub
loopne
or
lods
add
add
jbe
imul
dec
or
mov
inc
mov
push
cmp
cmp
mov
sbb
adcl
fs
jns
sub
out
call
idivb
dec
test
inc
mov
fs
mov
shrl
fdivr
sbb
sub
xorb
clc
jbe
jmp
adc
fildll
mull
fucomip
in
xor
or
insb
mov
lock
stos
dec
mov
or
add
stc
push
leave
push
and
or
inc
mov
push
mov
iret
insb
push
sbb
pusha
inc
call
scas
lea
call
sbb
xchg
jmp
outsb
mov
fidivl
filds
and
push
jmp
push
inc
iret
mov
arpl
lret
push
leave
xchg
add
std
mov
xchg
cmp
in
das
aaa
pop
mov
fsubrl
cmpsb
js
or
jge
or
cmpsb
jge
dec
pushf
jbe
aas
lock
lret
aad
movsb
dec
movsb
jmp
and
scas
add
jo
pushf
sti
xor
inc
jbe
dec
push
xlat
insb
jl
rclb
cmp
dec
add
js
add
clc
bound
in
jg
or
xor
push
or
test
out
lret
pop
andl
dec
lahf
movsl
arpl
mov
cmp
fwait
xor
inc
push
loope
cmp
mov
push
pop
js
sub
pop
mov
mov
xor
xchg
lds
mov
sbbb
xchg
shlb
add
stc
push
sub
sub
cmp
ret
push
and
and
loopne
out
sub
int
icebp
mov
and
cmpsl
mov
test
mov
jg
xchg
test
jno
idiv
or
int
pop
mov
int3
shr
sub
mov
test
and
clc
cmp
mov
mov
fs
mov
sub
test
repnz
pop
cmc
divl
jp
pushf
cmc
cmpsb
cmp
sbb
or
and
and
xor
mov
pop
out
pop
push
mov
lahf
lods
pop
xchg
insb
data16
fiaddl
jbe
dec
adc
loop
imul
xor
loopne
or
test
dec
sti
jp
or
push
insl
push
mov
or
add
pop
push
out
cmp
pop
fwait
sbb
stos
pushf
shl
mov
stos
fldcw
leave
inc
orl
nop
int
jl
or
cs
lock
ja
int3
pushf
pop
jmp
popa
pop
lret
psubsb
movsb
lea
dec
push
jecxz
push
mov
jg
mov
jle
jb
mov
aas
test
inc
xchg
ret
pop
inc
outsb
iret
mov
aas
sbb
fstpt
and
mov
cmp
aas
pop
repnz
call
dec
std
push
in
imulb
loopne
jb
and
mov
mov
sub
jo
lock
push
mov
xchg
jp
mov
loope
icebp
in
arpl
push
dec
cmpsl
dec
mulb
insl
jae
push
es
pop
push
ret
stc
mov
lock
cmpsb
sub
push
mov
pusha
fisttpl
out
jge
sbb
xor
lods
adc
aas
ljmp
add
psadbw
sti
lret
aas
mov
dec
incl
inc
mov
paddq
dec
push
fs
xchg
mov
adc
outsl
rorl
dec
sbb
push
xchg
xchg
push
test
push
mov
fmul
pop
xchg
insb
mov
mov
mov
xor
mov
dec
lret
jl
xchg
add
enter
in
scas
or
aas
pop
inc
aaa
lret
sbb
cmp
pop
jmp
dec
mov
pop
movsl
xchg
es
addr16
arpl
jns
int
mov
out
mov
cmpsl
push
in
mov
fmull
int
mov
or
xlat
xchg
or
aad
js
int
scas
out
add
cmpl
dec
jmp
in
das
filds
mov
in
mov
jle
pop
pop
jnp
push
aam
or
pop
and
or
stc
adc
mov
popf
ret
mov
dec
jae
add
inc
lret
pop
xchg
nop
iret
lret
mov
addr16
jmp
sbb
out
mov
cmp
and
repnz
lahf
push
inc
push
push
xor
inc
sarb
sub
leave
or
xor
mov
mov
jp
ficoms
call
sub
cmp
mov
cmp
into
pop
stos
jge
xor
push
sbb
shll
cmp
mov
push
jo
add
xor
and
cmc
jecxz
jp
push
jno
push
fdivrl
add
cli
enter
in
mov
inc
shll
test
mov
lahf
mov
scas
stos
jno
push
aaa
lods
push
cld
cmp
insl
mov
loope
sub
jg
or
test
sbbl
add
add
data16
jne
pop
xorb
adc
adc
sub
in
or
push
fsub
or
pop
imul
enter
sub
int
fwait
xchg
jae
popa
and
dec
cmpsl
mov
xchg
mov
scas
cmp
fwait
into
orb
xchg
test
leave
loopne
cld
sbb
ret
roll
xchg
negl
mov
cmp
std
test
adc
mov
stc
inc
popf
mov
outsl
aaa
movsl
xor
dec
dec
cmc
insl
add
into
std
js
or
sub
xor
inc
adc
push
jne
mov
outsb
lods
inc
lcall
add
clc
cmc
imul
cmp
cs
mov
mov
sub
in
sarl
sub
xlat
cwtl
cmp
cmp
sbb
insl
test
repz
fcmovnb
iret
ret
mov
ds
jnp
push
nop
test
loopne
push
mov
leave
jmp
and
sti
adc
jo
jge
pop
pop
mov
jns
add
adc
ds
and
lret
dec
dec
sub
jb
jae
aas
and
push
inc
mov
mov
pop
loop
nop
fimull
xchg
orl
sarl
mov
xchg
cwtl
sub
std
mov
push
repnz
fcoml
mov
rorb
lock
std
test
push
iret
lret
sub
push
cld
mov
icebp
ret
pop
mov
jbe
js
icebp
sbb
cmp
jl
daa
ret
mov
test
jg
test
pop
jg
inc
mov
out
xchg
mov
ds
imul
adc
mov
fcoml
dec
jle
fstp
out
push
mov
jne
test
pushf
xchg
add
mov
mov
out
pop
aad
stos
add
push
sbb
loopne
test
popa
inc
dec
aas
test
loop
pop
xor
jmp
insl
xor
xchg
sbb
add
imul
or
popf
dec
inc
into
lret
loope
pcmpgtw
ja
xor
pop
mov
inc
xorb
pop
jp
fwait
mov
jns
push
xchg
bound
ds
add
or
in
mov
dec
ret
fs
mov
sbb
jp
sbb
mov
or
pop
imull
cmp
out
dec
imul
jmp
mov
lahf
shll
sub
jle
mov
movsb
insb
ja
push
and
sbbb
jns
or
dec
and
test
pop
mov
dec
fwait
iret
sub
pop
adc
pop
sbb
mov
or
add
sbb
push
in
xchg
sbb
inc
fcmovbe
lods
incl
add
mov
inc
adc
jns
hlt
outsl
int3
cmp
andl
mov
mov
lds
pop
jae
xor
pop
incl
adc
insb
scas
aad
aam
ljmp
enter
out
jge
lods
jbe
in
pop
push
imul
cmp
adc
and
mov
mov
push
or
decb
xlat
push
jl
dec
inc
jno
lds
cmp
mov
das
in
dec
jl
cmpsb
cmp
aas
jg
mov
xchg
push
push
lea
lahf
mov
data16
imul
lea
sub
leave
scas
aaa
pop
push
push
notb
call
cmp
fs
pop
shlb
jecxz
add
cwtl
les
lods
add
les
in
sub
imul
sbb
fcoml
jbe
lcall
push
sub
and
jb
dec
push
jbe
insl
and
xor
mov
aam
mov
mov
mov
xchg
insl
jg
sbb
andb
sahf
cmp
mov
mov
push
rcrl
push
mov
ljmp
and
inc
mov
adc
pop
jg
cli
aaa
pop
loop
push
dec
outsl
push
pop
mov
cmc
xor
or
and
pop
cmp
or
xor
cwtl
mul
push
push
push
mov
mov
jle
xchg
xchg
leave
hlt
adc
popa
js
cwtl
insb
and
mov
inc
js
dec
addr16
gs
cmp
js
adc
in
sub
icebp
mov
out
inc
pop
xlat
xlat
out
adc
xchg
mov
sbb
xor
mov
into
xor
fimull
pop
inc
test
pop
push
nop
xorl
cs
push
sub
adc
addb
fucomi
je
nop
lea
push
dec
icebp
jecxz
jle
je
rcr
mov
dec
aas
ret
inc
lret
and
add
and
dec
bound
ja
and
stos
enter
std
fs
div
popa
outsb
rcll
loope
and
mov
mov
push
mov
es
daa
xlat
mov
call
cmp
lcall
cmpsl
jne
jmp
in
push
andb
inc
ret
pop
enter
dec
push
sub
insl
shl
push
push
pop
sahf
jno
mov
cmc
jne
mov
fs
lods
out
xchg
popa
mov
or
xchg
pop
xor
clc
test
insl
push
orl
test
xchg
in
into
mov
push
sbb
xchg
inc
cmpsb
dec
out
mov
mov
lret
nop
jg
cmp
mov
test
decb
in
xchg
nop
mov
dec
push
inc
or
pop
arpl
mov
add
push
mov
fwait
inc
push
mov
inc
gs
dec
add
mov
mov
push
mov
loope
jmp
les
jns
add
bound
jne
out
test
push
mov
push
pop
jne
xchg
dec
push
lock
mov
pop
mov
lock
jp
clc
addr16
fisttps
lret
or
out
pop
push
sbb
mov
jmp
mov
xor
test
mov
xchg
mov
movsb
jnp
cmpsb
xor
pop
and
outsb
mov
ja
cmp
mov
dec
popf
jmp
loopne
adc
inc
loopne
inc
pop
cmc
dec
push
ret
cmp
mov
adc
or
scas
mov
sbb
adc
xchg
jae
pop
fimull
xor
cmp
fdivs
jl
aad
xor
mov
sbbl
or
int
rcr
ljmp
cmp
pop
cs
and
imul
pop
testl
sbb
jge
lods
pop
jbe
jae
push
mov
sbb
cmp
outsl
scas
popf
jb
jo
or
push
jmp
ret
dec
push
jle
jl
lret
xchg
cmp
cmp
jne
fmul
jmp
push
int
rclb
fbld
mov
test
pusha
xor
lahf
lods
cmp
and
cmpsb
xor
ds
lods
cmp
insl
sub
lret
jmp
lds
push
xchg
daa
mov
js
mov
jle
loop
push
add
push
out
sbb
dec
addl
pop
aaa
mov
outsb
out
adc
xchg
fdivrl
mov
lcall
es
fs
int
cltd
addl
mov
jb
insl
addr16
mov
scas
je
fldcw
cmpb
cmpsb
test
fidivrl
sbb
inc
mov
fdivs
lret
notl
mov
push
dec
outsb
cmp
adcl
in
adc
in
scas
mov
mov
ja
popa
out
outsl
cmc
adc
mov
cmc
sti
cmp
or
mov
or
xchg
popf
ss
mov
lahf
lods
push
push
mov
add
std
mov
imul
push
mov
ljmp
fwait
adc
sti
xchg
in
in
xchg
aam
mov
bound
adc
push
and
mov
jg
inc
xchg
repz
repz
shlb
in
jecxz
adc
inc
mov
js
nop
pop
data16
pushf
dec
scas
cs
inc
into
pushf
or
adc
dec
add
add
pop
and
shll
cmp
pop
jp
je
imul
jb
mov
aas
popa
not
inc
out
sub
pop
sub
fimuls
fiaddl
sbb
arpl
mov
lcall
pop
sub
and
fadds
scas
jno
out
das
lea
mov
int
mov
add
lret
or
sar
sbb
icebp
jno
leave
mov
je
out
dec
out
fwait
insl
sub
popf
es
ret
cmpsb
dec
cs
pushf
ret
sub
mov
pop
mov
rclb
and
test
sahf
mov
push
sti
jb
shl
shr
sahf
mov
cs
rorb
sub
ss
xchg
jae
enter
jle
std
add
or
push
cmc
push
into
xchg
mov
mov
pop
adc
inc
rcll
sbb
lods
dec
xchg
xchg
dec
or
mov
mov
xchg
adc
xor
ljmp
xor
add
and
push
mov
push
fwait
jno
inc
or
aad
inc
cld
cmp
cmc
dec
mov
aas
dec
pop
xor
mov
mov
xchg
jo
adc
or
lea
fwait
out
fs
gs
repz
jne
test
dec
xor
xchg
imul
and
or
dec
adc
inc
cmp
and
insl
jmp
pop
jp
fbld
mov
popf
loop
jle
pop
cmp
xchg
jno
dec
call
mov
push
stos
sbb
xlat
push
mov
cmp
adc
pop
push
aad
dec
jae
jp
inc
jmp
mov
sub
push
ret
movsl
iret
call
enter
lods
lret
scas
sbb
imul
xchg
lret
fidivrl
ret
inc
sbb
cmp
or
or
add
dec
stos
repnz
jne
mov
repz
jns
cmc
pop
pop
addr16
inc
sarb
adc
pop
sbb
bound
jge
aas
sbb
insb
pop
push
pop
out
movsb
je
hlt
cmp
jns
mov
ds
jl
sub
scas
mov
xor
push
into
or
dec
ret
jl
sbb
cmp
dec
mov
in
sbb
inc
cmpsb
inc
or
inc
outsb
dec
cli
push
aaa
gs
test
xor
cmp
jg
xchg
push
imul
loope
ror
fdivrs
test
lcall
movsl
fwait
cwtl
xor
inc
and
clc
mov
sub
add
loop
adc
push
pop
fldt
fcomps
add
adc
add
fmull
cmp
push
jl
mov
or
add
mov
outsb
xorb
mov
out
test
mov
mov
lea
xlat
lret
pop
not
xchg
pop
fmuls
fsubrs
ss
insb
adcb
or
fs
push
stc
push
scas
ret
int3
inc
xor
or
cmc
ret
into
cmpsb
dec
gs
stc
cs
inc
and
xor
fdivr
push
add
push
cmpsl
fmuls
cmc
add
add
xor
adc
and
push
loopne
adc
mov
mov
popf
in
add
jmp
xlat
push
fisttps
sbb
mov
cli
rep
mov
lock
push
flds
fwait
inc
iret
xchg
orl
nop
cmp
adc
jecxz
xchg
cs
icebp
cmp
xor
movsb
pushf
mov
cmpsb
adc
pusha
pop
xchg
jb
fistpl
inc
lea
sbbb
imul
dec
lods
or
jb
jmp
mov
inc
mov
ficomps
divl
fcomi
stos
das
dec
cmp
or
jo
mov
jnp
cwtl
pop
sahf
je
mov
fwait
divb
shrw
push
mov
mov
mov
das
insb
dec
pusha
lock
sub
mov
xchg
cld
nop
rolb
mov
jae
jne
loop
fldt
pushf
add
add
adc
subl
aad
rcrb
shlb
add
mov
ret
lods
mov
fisubl
xchg
test
clc
sti
mov
fisttpll
out
pop
fwait
xchg
mov
mov
test
movsb
mov
mov
dec
add
cmpsb
sbb
push
shlb
popa
out
cmpl
pop
mov
push
out
mov
out
test
cmc
mov
xchg
ret
std
xorl
lods
or
clc
leave
inc
or
add
push
pop
dec
fwait
mov
scas
xchg
inc
xchg
test
dec
call
mov
mov
jcxz
xchg
bound
lock
enter
or
inc
insb
pop
mov
movsl
dec
jne
call
repz
xchg
dec
mov
nop
cmpsb
jp
ss
shrl
jmp
sub
lds
fistl
repnz
ret
push
jbe
push
lods
cmpsl
in
arpl
jle
sub
insb
mov
add
mov
push
cmc
in
adc
popf
cmp
push
cwtl
inc
jae
jg
inc
imulb
cltd
ret
add
adc
mov
sub
sbb
pop
inc
xchg
and
ja
out
in
flds
sub
sub
jnp
out
fcompl
arpl
push
lods
hlt
push
inc
addr16
call
ljmp
push
icebp
mov
int
test
sbb
add
stc
adc
sub
mov
pop
aaa
lds
inc
jge
mov
jbe
fnstenv
movsb
decl
fisubl
inc
jno
scas
pop
in
imul
pop
xor
mov
xchg
dec
xor
jbe
es
jno,pn
cld
xchg
cmp
xchg
enter
in
add
cwtl
inc
std
mov
push
add
clc
test
push
xor
cmp
sbb
or
ds
fstpt
lcall
loope
cmp
push
add
movsl
inc
aad
cltd
sub
pop
arpl
xor
call
fistpl
push
into
std
cmp
scas
jg
xchg
sarb
lahf
outsb
mov
nop
sub
movsb
add
push
xlat
lcall
pop
es
int
sub
push
jg
push
and
jg
mov
mov
mov
add
pop
adc
mov
sahf
and
repnz
mov
mov
lret
fincstp
xchg
and
cmp
or
pop
adc
dec
cmp
loopne
loop
lods
add
xor
dec
cmc
mov
ror
rorb
push
cltd
sub
or
dec
cli
cli
ret
test
push
adc
jg
fcompl
xor
inc
xor
adc
xchg
jns
jge
mov
pop
push
sbbb
test
loopne
loope
push
sti
in
arpl
insl
cmp
pop
sub
mov
xchg
sbb
cmp
xchg
jns
mov
cmp
or
sti
inc
fnstcw
cmp
push
rorl
xor
nop
adc
aad
imul
and
pushf
pop
and
int
adc
xchg
aaa
pop
lcall
mov
mov
xlat
je
mov
dec
and
sbb
fnstsw
aas
lahf
and
inc
sbb
cmp
movsl
ficompl
push
sbb
and
dec
and
sbb
mov
mov
sub
std
pop
xchg
idivb
test
mov
or
ljmp
xchg
pop
add
mov
xchg
cwtl
cld
mov
mov
lret
lods
insb
dec
ffree
arpl
sub
mov
ret
les
mov
out
inc
sub
and
outsl
push
and
sti
lock
mov
or
mov
jno
shrb
test
xchg
les
clc
ss
push
lret
mov
shlb
jl
cltd
in
push
inc
add
js
imul
inc
xchg
sbb
stos
out
out
cltd
stos
mov
mov
jmp
sbb
movl
fstpt
clc
mov
sub
mov
rclb
add
mov
push
imull
add
pop
jb
sub
leave
dec
dec
ja
pop
sbb
xchg
enter
mov
mov
data16
inc
xchg
jns
mov
insl
out
and
das
mov
push
jne
scas
popa
dec
sti
lea
movsb
shl
mov
jne
repz
imul
lcall
sbb
out
dec
push
orl
ja
js
pop
xchg
add
inc
out
inc
pusha
out
stos
adc
stos
dec
idivb
cmp
mov
and
fcomps
add
push
xor
mov
popf
pusha
mov
push
pop
cmp
jae
leave
pushf
inc
add
ret
pop
lcall
iret
cmpsb
pushfw
adc
das
push
imul
addr16
js
pop
fisubl
jmp
push
push
orl
add
hlt
fwait
mov
inc
repnz
xchg
ljmp
jb
lds
fidivrs
daa
scas
int3
sbb
add
jl
or
cmp
dec
sbb
jge
adc
fstpt
jl
mov
sub
scas
cmp
test
push
xchg
or
dec
mov
aaa
xor
add
cmp
jl
daa
jb
enter
in
jmp
lahf
inc
mov
push
int
jp
dec
dec
push
flds
and
stc
ret
sbb
cmp
imul
add
or
xor
clc
fists
in
in
js
dec
sbbl
inc
popa
xor
test
sbb
adc
fdivrp
add
cwtl
inc
jl
rcrb
sub
std
es
cs
ss
sub
bound
lock
inc
or
xorb
es
mov
sbb
fnstsw
outsl
jg
jo
adcb
rcrl
sarl
mov
and
jne
lock
outsb
notl
cmp
adcl
cmp
dec
cmc
dec
adc
into
and
lea
daa
loop
outsl
xchg
push
bound
pushf
xchg
mov
push
clc
mov
or
cld
and
push
xor
xlat
into
cli
sub
pop
aaa
mov
mov
std
data16
and
push
in
imul
pop
jb
sub
mov
inc
xchg
incb
in
xchg
ljmp
in
fsubrs
push
sub
fistps
sbbl
hlt
xor
adc
or
les
scas
fnstenv
into
fisttpll
cltd
int
out
incl
jno
pop
cs
stos
mov
adc
sahf
adc
sbbb
adc
call
or
xchg
movb
icebp
je
pop
orl
into
jb
cmp
aas
rolb
cwtl
enter
lahf
push
fistl
and
popa
cmp
mov
mov
pop
negb
add
cld
push
dec
rorl
and
inc
add
lahf
jnp
das
sub
add
xchg
pop
cmp
test
cld
out
mov
not
xor
cmpsl
jno
lds
pop
jecxz
fstpl
xchg
push
jb
aam
mov
rolb
jle
sbb
dec
mov
adc
pop
mov
and
xchg
mov
popa
push
sbb
notl
pop
xchg
add
xor
popf
lods
push
push
lea
pop
test
test
cltd
and
push
add
jge
femms
repz
xchg
arpl
out
dec
outsb
fs
lods
mov
sub
pop
cmpsb
std
sbb
and
xchg
sub
test
cmp
dec
inc
lret
adcl
xor
inc
insb
or
gs
push
fmuls
add
lcall
or
filds
shr
dec
into
mov
pop
popa
mov
mov
in
ffreep
xchg
add
lods
jns
sbb
or
add
les
xor
out
fdivrp
pop
mov
sbb
mov
dec
lods
or
jns
rcll
test
sub
lret
xorb
test
out
jmp
xlat
ret
add
movsb
in
xchg
inc
jle
inc
inc
jnp
hlt
mov
and
rorb
xor
push
jae
and
xchg
push
push
lahf
mov
push
jge
or
mov
ret
push
add
cmpb
inc
rcrl
imul
popa
xchg
iret
lcall
cltd
das
popa
or
in
push
arpl
in
hlt
out
aam
jns
repnz
jno
mov
inc
pop
ljmp
mov
es
add
dec
add
jp
or
adc
aaa
inc
call
in
jge
dec
iret
jbe
adc
push
hlt
mov
fnstcw
and
and
sbb
inc
or
add
dec
xadd
jl
add
loop
jae
xor
jl
jno
xchg
enter
in
rorb
inc
sbb
cwtl
roll
int
popf
push
lods
or
lahf
sub
jp
xchg
sbb
jg,pt
add
sub
sbb
loope
lahf
mov
pop
and
mov
pop
mov
xchg
out
dec
pop
xor
jle
sbb
mov
cmp
ret
pop
or
outsb
jnp
mov
movsl
fcmovnu
jmp
adc
lcall
out
sub
lret
jne
dec
push
test
mov
cltd
cld
mov
mov
and
subb
adc
push
jne
mov
clc
xchg
lret
dec
notl
lret
jp,pt
cmp
addr16
adc
xchg
andb
stc
fstps
outsl
jno
xchg
xor
ja
cmc
pop
push
ljmp
and
cmp
pop
xor
mov
outsb
mov
lea
or
jae
adc
pop
xchg
imul
xchg
pop
xchg
mov
fs
fwait
daa
addr16
inc
fwait
repz
inc
not
mov
cs
xlat
adc
adc
sbb
jge
repz
pop
les
fldenv
in
mov
dec
mov
or
mov
je
jmp
test
xchg
jnp
and
stc
jae
pop
and
test
gs
dec
jecxz
adc
je
push
outsb
dec
adc
add
frstor
inc
push
stc
arpl
push
sbb
mov
pop
fildl
mov
js
in
fs
adc
cwtl
lea
inc
std
cmpsl
add
idivb
cmpsb
test
fwait
repnz
mov
xor
mov
in
inc
xor
push
add
cld
adc
cld
icebp
int
mov
jo
outsl
dec
rorl
das
mov
aam
das
test
dec
ja
rclb
scas
les
sbb
or
iret
xor
lods
lock
sub
popf
mov
inc
mov
lods
shll
ffree
sbb
push
clc
jo
insl
js
hlt
sub
add
fsubl
popa
or
out
lods
xor
push
mov
test
sbb
push
test
mov
add
cmp
cmp
dec
or
les
jmp
sub
cmp
nop
inc
or
xor
outsl
dec
roll
pop
sbb
adc
xor
in
mov
jns
ds
out
loopne
adc
sti
push
rorl
mov
lock
jp
test
rorb
or
insl
out
cs
andl
hlt
jmp
stos
in
and
fsubs
in
in
and
inc
add
repnz
insb
stc
enter
icebp
stos
stos
out
push
push
mov
xor
scas
sbb
loope
cmp
inc
pop
cs
pop
or
dec
ret
ror
fs
xchg
adc
nop
push
push
faddl
scas
movsl
xchg
imull
shlb
es
fimull
xorl
sbb
stos
push
and
inc
out
imul
enter
leavew
dec
rorl
repnz
and
lods
push
ret
rcrb
lds
sub
pop
sbb
imul
pop
popf
adc
ficomps
cs
dec
sarl
add
popa
fldl2t
push
inc
cmp
mov
xor
cld
cmp
clc
inc
fidivl
decl
xor
pop
ffree
dec
jle
das
jl
mov
mov
adcb
xchg
fmulp
sar
mov
cmpsb
dec
jae
inc
stos
mov
arpl
fcoml
shrb
jmp
shlb
cltd
sarb
cmpsl
mov
xchg
loope
xchg
push
add
bound
aaa
js
dec
pop
pop
fsubs
dec
xor
and
sbb
pop
and
pushf
rcl
rorb
and
outsb
ficoms
xchg
shll
push
faddl
ficomps
fcoms
std
sub
mov
push
mov
push
and
mov
xor
lret
cwtl
fnstenv
hlt
xor
test
sahf
push
adc
mov
iret
adc
mov
jb
not
jecxz
fdivr
jbe
cmp
rorb
adc
sub
gs
inc
dec
fisubs
xor
or
ficoms
jae
mov
pushf
in
pop
int
xchg
inc
push
out
ja
mov
enter
mov
xchg
cvtps2pi
out
cli
mov
imul
stos
pop
mov
xor
icebp
pop
pop
gs
fsubrp
sti
repnz
popf
in
scas
adc
mov
mov
lock
stc
movsb
xchg
ret
repz
out
sbb
repnz
mov
inc
sbb
hlt
dec
adc
mov
movsl
pop
imul
test
jmp
insb
fstps
inc
popa
pop
bound
add
lods
adc
push
call
lods
push
bound
mov
insb
jb
pop
imul
insl
sub
inc
cmpsb
cmp
push
push
outsl
pop
addl
ret
xchg
mov
dec
cld
cwtl
dec
lods
addr16
dec
cltd
insb
testb
sbb
jg
mov
lds
das
call
inc
push
mov
gs
dec
lret
xor
add
movsb
push
mov
outsl
mov
dec
into
dec
mov
das
or
adc
xchg
ret
jno
dec
aam
es
movsl
shr
das
add
pop
xchg
cmpsl
mov
pop
ljmp
jle
je
imul
pop
ljmp
sub
fucomp
imul
adc
mov
cltd
xchg
flds
int3
leave
stc
push
cmp
into
xchg
icebp
out
mov
psllw
pop
push
roll
mov
outsl
inc
rolb
xchg
rcrl
xchg
jmp
add
xchg
xor
mov
add
add
loopne
fwait
pop
pop
outsl
or
pop
add
dec
mov
adc
xor
cld
pop
xlat
lods
fnstsw
jae
pop
xchg
sahf
rolb
push
add
mov
add
ret
dec
movsb
mov
xchg
mov
cli
push
push
jp
mov
iret
add
aad
add
dec
loopne
xor
xchg
xor
pop
mov
xchg
jge
sbb
aas
andb
push
in
dec
cld
jle
xor
mov
fs
and
xor
stos
pop
leave
pop
push
icebp
push
fistpll
aad
std
push
movsb
enter
aas
jns
and
pop
aas
xchg
movsb
push
in
iret
ret
movsl
lods
adc
mov
push
and
dec
scas
or
imul
sbb
or
nop
fidivrl
inc
add
adc
insl
or
ljmp
hlt
jl
lret
leave
int3
push
repnz
ret
jns
sarb
vpcmpeqd
fisubrs
dec
push
fldenv
rorb
fadds
aaa
rcrl
cmpsb
xor
jo
movsb
push
lods
push
xchg
mul
movsb
sub
into
cmp
sbb
mov
jo
add
cmpsb
push
cmp
js
jl
pop
sti
jno
out
cmp
xor
lret
xchg
in
sahf
add
inc
cmp
repnz
push
lods
xchg
lahf
addr16
sti
movsl
mov
stos
cmp
jns
lahf
aaa
ljmp
pop
test
js
sub
pop
ljmp
je
xor
dec
add
es
sbb
les
sub
lret
sbb
outsb
inc
or
push
pop
push
xor
mov
push
les
shl
jge
inc
notb
push
mov
xor
std
mov
xchg
fwait
mov
loope
pusha
test
lds
jle
sbb
mov
inc
lret
lcall
pop
test
ss
lock
fs
stc
sti
bound
loop
stos
in
outsl
das
mov
xor
cmp
sub
cmpsb
xor
daa
cli
movb
mov
mov
or
jmp
adc
jbe
imul
pop
pop
iret
or
les
insl
dec
push
pop
in
sbb
push
mov
adc
loope
nop
imul
test
sbb
test
call
les
sub
fstps
addr16
cs
pop
dec
jae
mov
aad
push
scas
cs
hlt
int3
pushf
or
fwait
adc
jecxz
pop
adc
mov
sbb
imul
je
aas
arpl
test
jb
mov
dec
inc
mov
inc
sub
aas
mov
fists
dec
iret
loope
add
fidivrl
mov
or
sti
std
cmc
adc
test
cmp
cmp
and
popf
popa
mov
pop
scas
jno
cmp
mov
mov
pop
lret
movsb
adcl
icebp
jnp
jo
xor
cmpsl
outsb
adc
leave
movsl
xchg
dec
pop
es
jns
ret
add
das
aam
jno
sub
pop
mov
mov
jge
mov
xchg
push
jp
mov
aam
add
test
xchg
shl
clc
and
add
mov
dec
or
dec
addb
les
push
pop
pop
dec
xchg
cmp
out
jb
inc
stos
jp
or
rcrl
rcrl
and
cltd
xchg
jge
dec
ja
jne
mov
mov
or
mov
xor
push
stos
jmp
jo
add
pop
add
adcl
fwait
mov
mov
pop
roll
call
xchg
ja
shll
mov
inc
mov
in
xor
repz
xlat
imul
sahf
pop
mov
mov
mov
xchg
mov
shl
insb
jp
and
or
and
loope
add
mov
jmp
push
fisttps
pop
insl
xor
mov
cmp
cmp
and
jge
int
xchg
push
xor
mov
cld
adc
push
mov
jae
cwtl
je
sub
movsb
xchg
mov
icebp
iret
and
sbb
out
jmp
push
push
push
scas
imul
imul
sbb
pop
das
xchg
aam
repz
fiadds
adc
jp
icebp
cli
pop
inc
in
mov
mov
out
mov
cmp
push
inc
jg
ljmp
lds
sbb
dec
mov
pop
ja
pop
int3
les
out
or
leave
xchg
aaa
sbbb
popa
mov
jge
arpl
push
loope
dec
movsb
mov
jne
movsl
scas
mov
and
scas
mov
cmp
xor
and
dec
pop
jnp
jl
pop
leave
jno
jl
cmp
push
cmp
outsb
push
adc
in
test
xchg
cmpsb
push
loopne
inc
enter
stc
xor
push
and
rcrl
movsl
test
jmp
test
loope
shl
mov
in
loopne
jecxz
rcrb
aaa
push
fdivs
repz
add
clc
insl
sbb
sbbb
pop
mov
rolb
out
outsb
movsb
mov
sub
cmpsb
fsubr
psubd
push
push
lcall
lods
sub
sbb
stos
mov
test
cli
or
jp
mov
pop
aam
xor
cmp
test
or
mov
lret
pop
rcl
sub
and
testl
fidivrl
pop
jbe
adc
adc
loop
lods
push
outsl
push
mov
xor
lcall
clc
scas
dec
or
ret
dec
xor
jno
out
divl
and
jecxz
xchg
lock
rcll
cmpsl
imul
xlat
pop
out
lods
loopne
cld
daa
gs
test
nop
test
sti
push
push
addr16
test
lods
mov
xchg
xlat
iret
adc
cmp
arpl
dec
sbb
les
push
jge
xchg
lock
inc
inc
mov
dec
rclb
nop
pop
call
lea
xchg
jmp
inc
xchg
pushf
mov
sub
andb
aad
adc
lea
pavgw
into
sub
insl
xor
dec
ja
lcall
pop
addr16
mov
ds
adc
push
icebp
jns
mov
mov
mov
push
dec
cwtl
mov
outsb
testb
leave
rorl
push
mov
mov
cmpsb
or
sub
ds
mov
adc
lret
adc
cld
xchg
xchg
mov
mov
insl
hlt
mov
les
xchg
es
movsb
push
ret
pop
es
nop/reserved
fldl
mov
pop
xchg
push
mov
sub
push
xlat
mov
aas
fwait
shlb
xor
xchg
lcall
clc
pop
dec
cld
fnstsw
mov
loope
fcmovu
pop
test
gs
add
or
mov
les
aad
push
stos
imul
push
shll
cmp
xchg
mov
test
imul
testb
add
jno
push
incl
loopne
add
es
fwait
mov
das
adc
dec
lcall
pop
dec
imulb
mov
stc
dec
pop
xchg
cmp
dec
in
pusha
ss
js
bound
xor
jne
insl
pusha
dec
push
jae
iret
aad
mov
test
or
adc
addr16
dec
or
sbb
mov
push
pop
jnp
mov
sub
dec
jo
xchg
and
inc
pusha
cmc
iret
dec
in
popf
push
jnp
addl
cmp
and
shrb
outsl
stos
into
mov
and
int
sub
mov
scas
ss
inc
cmp
jp
lret
iret
orl
movsb
scas
into
lcall
or
xchg
sub
fisubl
insb
sbb
imul
or
lock
test
dec
xor
hlt
adc
hlt
repnz
out
inc
mov
mov
fcmovnb
neg
cmp
out
inc
xchg
pop
cmpsb
mov
scas
pop
js
and
or
mov
fs
aas
jecxz
sbb
jbe
jo
lods
jbe
in
xlat
push
xor
lea
in
and
mov
inc
xor
add
fwait
dec
lret
inc
xchg
jl
jl
jno
xor
test
enter
in
insb
or
inc
push
rcll
inc
test
clc
pop
and
mov
mov
or
dec
cmp
adc
jge
ds
pop
inc
pop
pop
sti
mov
stc
cli
loope
xor
js
add
push
repnz
aaa
ret
lods
hlt
rcr
lea
adc
pop
push
or
fcoml
scas
mov
pop
push
stos
xor
leave
jo
int
xor
jnp
jno
xchg
mov
rorl
xor
dec
jg
jbe
adcb
and
divl
daa
sbb
test
pop
shrl
lret
dec
testl
in
cmp
fwait
mov
sub
inc
add
loop
loop
outsl
in
pop
mov
arpl
pop
cmc
xor
lock
push
cmp
adc
xor
ret
cli
sub
jo
dec
jge
mov
pop
xor
inc
ror
sbb
addl
sub
inc
in
adc
addr16
ret
rorb
sar
mov
add
pushl
movsb
mov
cli
pushf
mov
cmp
mov
sbb
adc
int
fxch
add
inc
push
jae
dec
xor
cwtl
nop
ss
aad
and
andb
jmp
push
and
adc
mov
jnp
mov
push
gs
icebp
push
lea
adc
aam
aam
pusha
je
jnp
dec
out
cs
jb
sbb
aas
pop
or
mov
push
or
outsl
stos
fstpt
outsl
and
mov
mov
cwtl
jns
sub
inc
scas
int
dec
imul
sti
stos
and
aam
mov
jle
aam
test
je
pop
lods
into
mov
dec
ret
mov
sbb
orb
cld
mov
pop
les
insb
pop
or
psllq
cmp
es
aam
add
and
fstl
pop
mov
mov
xor
adc
mov
push
lods
stos
es
popa
mov
stos
ljmp
cmpsl
clc
cwtl
pushf
fstp
pusha
mov
push
pop
ja
mov
test
xchg
cltd
and
jns
pop
psubsw
loop
pop
aas
out
cmp
out
stos
pop
sbb
pop
imul
sbb
push
xchg
test
mov
dec
inc
jae
xchg
in
xor
lret
in
in
xor
sub
and
add
add
push
leave
mov
push
or
aad
inc
mov
mov
ja
or
bsr
lds
mov
iret
in
sti
sarl
sub
inc
jno
out
pop
or
xlat
jne
mov
dec
test
mov
out
enter
popf
mov
cmpsb
jp
insl
sub
push
cmp
sub
pop
fs
and
jnp
jl
inc
jmp
mulb
inc
pusha
nop
inc
cld
in
fcmovu
jle
sar
push
xchg
je
movsl
rcl
and
push
stos
mov
sub
inc
icebp
mov
dec
lcall
jge
push
inc
inc
lret
in
xchg
ret
outsb
iret
loopne
mov
movsb
xchg
push
clc
push
cmpsl
scas
xor
mov
add
sbb
jb
xchg
orb
aam
sub
push
mov
inc
sbb
repnz
hlt
pop
jg
leave
sub
inc
mov
lret
sbb
lds
mov
pop
aad
cmp
lcall
or
jmp
sbb
jo
jge
in
jbe
xchg
movsb
int3
mov
adc
xchg
scas
je
test
xor
out
pop
dec
cmp
stos
jl
insb
jno
adc
daa
insb
and
in
push
loope
cmpsb
pop
sbb
test
test
lret
cmpsl
pop
lahf
les
dec
movsl
mov
mov
cmp
jmp
loope
mov
push
mov
pop
pop
jo
ss
pop
je
iret
mov
imul
cmpsb
cwtl
cltd
sbb
mov
test
mov
sbb
sub
into
faddl
test
cmp
pop
lcall
mov
int
stos
addb
push
stos
and
pop
sbb
mov
rorb
ljmp
addb
sahf
lcall
mov
rol
jns
lret
pop
test
xor
fisubrs
adc
inc
push
stc
and
loop
dec
sbb
int3
cmp
cmc
cli
add
into
mov
gs
xor
push
in
pop
jo
out
xchg
sbb
adc
pushf
sub
std
adc
imul
mov
pop
sub
sbb
pop
jmp
adc
inc
sti
scas
and
in
pop
ret
cli
adc
rcl
inc
es
sub
xchg
into
insl
inc
repz
les
test
mov
pop
dec
nop
inc
push
nop
adc
aad
and
jecxz
push
jmp
and
pushf
or
fs
cs
addr16
sar
callw
lret
add
je
add
jecxz
push
add
lock
gs
jl
clc
mov
push
inc
ret
pop
jecxz
mov
insb
jge
dec
nop
je
addl
popa
cbtw
xor
and
ljmp
shll
test
and
out
out
mov
adc
push
lock
adc
xlat
icebp
jp
cld
call
dec
dec
mov
imul
mov
add
sbb
jmp
dec
sub
jno
aam
or
and
mov
lods
jbe
adc
xor
les
clc
roll
dec
push
pop
stc
push
mov
mov
xchg
cltd
insl
addb
cmovs
pop
xchg
or
inc
stos
inc
loopne
pop
push
mov
shll
data16
add
xchg
push
and
lods
fidivrl
xchg
lea
mov
ss
or
sub
mov
pop
jo
inc
fmuls
insb
jl
fwait
sbb
loop
jmp
mov
dec
and
js
sub
pop
mov
jg
dec
xchg
ficompl
add
jge
je
out
cmp
add
jne
push
ret
dec
xor
jecxz
xchg
fcmovne
mov
pop
stos
jp
and
addr16
sbb
fldcw
fstl
xorl
xchg
inc
or
cmp
neg
mov
shl
in
jnp
jle
subl
insb
adc
dec
and
imul
in
pop
jo
add
rcrl
mov
adc
ds
inc
dec
inc
xor
aam
ret
dec
iret
aas
xchg
push
aas
inc
into
scas
xchg
mov
imul
pop
sbb
cmp
xchg
fldcw
sub
xchg
js
add
or
idivb
sub
test
push
leave
mov
in
mov
out
outsb
lds
push
xor
add
mov
test
add
rorl
popf
aam
aaa
mov
lods
push
jge
jnp
jbe
xchg
int
into
xchg
data16
push
cli
pop
cmp
cmp
and
inc
daa
scas
push
jae
jo
out
xor
leave
xchg
sub
sbb
jl
xor
in
adc
cmp
js
imul
enter
in
cmp
insl
inc
jne
jmp
test
sahf
arpl
and
cmp
push
or
adc
fldcw
gs
stos
and
and
popf
mov
mov
and
xor
mov
sbb
jo
adcb
xchg
rclb
loope
outsb
int
inc
sub
insb
leave
fsubr
nopl
aad
lcall
aas
sub
add
push
xchg
jmp
push
mov
xor
mov
neg
mov
loop
jg
bound
test
mov
cmp
pop
sbb
pusha
jnp
rcll
aad
mov
sbb
adc
or
and
fs
loopne
stc
xlat
and
push
xor
jo
cmc
shll
or
and
cmp
xor
cli
xchg
jge
out
adc
int
adc
xor
xlat
incl
mov
xchg
push
imul
roll
clc
std
mov
loopne
dec
stc
jge
sti
pop
push
inc
in
lds
cmp
loopne
adc
mov
outsl
sbb
xchg
mov
xchg
les
xor
ss
popa
inc
jp
loopne
out
daa
nop
in
int3
fcom
bound
mov
pushf
mov
push
adc
add
call
or
jecxz
out
cmp
or
inc
xchg
jb
inc
push
aas
xchg
js
inc
hlt
push
mov
mov
pop
xchg
fistpl
dec
addb
ds
pushf
xor
std
xchg
fdivrl
shll
jge
popf
pop
pop
mov
movsb
and
movsb
adc
cvtps2pd
mov
stos
sar
adc
push
mov
push
popf
dec
mov
xor
cs
mov
push
fst
aas
in
sub
pop
pop
repz
or
and
loop
pusha
mov
cmpb
ljmp
dec
clc
push
stc
daa
out
cmc
mov
pop
lds
xchg
push
mov
push
sub
xchg
push
jmp
out
in
stos
imul
sbb
jo
xchg
ljmp
cwtl
and
xchg
mov
or
into
sub
push
sahf
lcall
add
cmp
add
rdpmc
fistps
pushf
jno
loop
cs
jae
fdivs
push
sarl
sbb
pop
sub
jns
jbe
bound
gs
sbb
inc
mov
gs
movsl
cmc
inc
dec
adc
loop
sbb
ds
sub
xchg
addr16
or
das
out
mov
addl
clc
xchg
adc
adc
xor
xchg
pushf
xor
push
adc
outsl
call
jle
aaa
lret
clc
test
jnp
push
and
adc
cmp
cmp
mov
push
jae
cmp
sbb
sbb
ret
enter
fcoms
pop
xchg
movsb
push
xchg
mov
adc
mov
or
inc
xchg
xor
fidivrl
test
or
sub
stc
mov
arpl
xor
leave
pop
push
ja
sahf
cs
data16
rolb
lds
add
sub
sub
add
pusha
pop
or
mov
dec
jl
jge
notb
jbe
adc
push
sbb
adc
and
mov
mov
into
pushf
push
lods
xor
dec
sbb
push
jno
aaa
cmc
cmp
xor
mov
enter
mull
add
test
ja
mov
push
jno
jnp
add
mov
je
pop
cmp
int3
xchg
sub
andb
in
push
add
pop
fdivr
pusha
js
sub
pop
ret
inc
adc
cld
add
mov
sbb
in
test
xchg
jo
mov
outsb
xor
dec
sub
xlat
popf
fcoml
sahf
mov
pop
shl
test
int
inc
mov
lcall
mov
arpl
mov
cmp
push
jb
sahf
loopne
movsb
sbb
int
dec
mov
shrl
out
dec
push
and
pop
xchg
enter
aaa
rclb
push
jns
fs
sbb
mov
loop
mov
xorb
fistps
cmc
mov
in
into
test
or
cmp
pushl
lds
out
out
daa
or
lods
sti
repnz
add
adc
out
cmpsb
imul
test
verr
xchg
es
gs
ljmp
dec
or
xor
mov
push
push
loope
lret
cmpl
xchg
push
xchg
movsb
repz
les
mov
insl
adc
cmpsb
dec
dec
dec
or
test
lods
sub
popa
clc
jg
fcoml
xchg
jnp
rol
xchg
cmp
fmull
jp
push
jecxz
xlat
mov
dec
push
inc
mov
aas
ss
sti
inc
shl
cld
pop
sub
lret
dec
data16
and
mov
lret
mov
or
stos
fwait
dec
std
cmp
in
adc
icebp
rol
int3
movsb
and
sbb
push
mov
and
inc
mov
mov
mov
lahf
mov
movsb
lock
scas
xchg
inc
mov
imul
sub
and
ret
lret
xchg
sub
pop
pop
rcr
pop
pop
pop
adc
mov
dec
outsb
idivb
cwtl
cmp
popa
into
mov
ljmp
test
dec
add
xchg
pop
enter
addl
cmc
sbb
push
pop
push
adc
popa
pop
loope
and
pop
nop
rcll
xchg
inc
sbb
lock
js
dec
jp
mov
movsl
inc
mov
or
pop
xor
cmp
add
sub
push
mov
pop
fwait
jbe
add
mov
mov
ja
fcompl
mov
add
fs
stos
ret
push
pop
cld
pop
dec
out
stc
mov
mov
ficoms
dec
neg
xchg
jmp
mov
xchg
addr16
inc
lds
bound
outsl
cmc
sub
jecxz
inc
orl
sub
daa
xchg
dec
xchg
outsl
leave
pop
push
int3
pusha
popa
and
loopne,pn
jnp
push
dec
insb
out
out
and
push
push
imul
js
ss
mov
and
ret
inc
xor
pop
mov
pop
ret
and
std
stc
adc
rorb
pop
movsb
xor
sbb
dec
cmpsb
xchg
xchg
ljmp
jecxz
push
hlt
pop
cmp
arpl
into
out
mov
xchg
sbb
mov
fidivrs
mov
int3
pop
rcrb
orl
aaa
cmp
cmp
or
dec
jge
push
stc
jbe
or
movsb
insl
jge
cmp
and
and
sub
adc
aad
mov
shll
aam
push
jno
subb
mov
daa
imul
loop
in
cmp
js
push
lock
inc
ja
lahf
and
pop
and
sbb
movsl
int3
cmp
cmp
or
je
loope
xchg
push
dec
leave
pop
sbb
mov
out
cmp
mov
push
mov
jae
incb
ja
adc
xor
cltd
push
adc
xchg
dec
xchg
sbb
mov
jp
ret
pop
push
test
mov
lods
bound
push
popf
sti
cmp
lods
sbb
mov
out
mov
adc
dec
pop
adc
adc
push
into
sbb
mov
ror
shl
or
push
nop
mov
cmpsl
dec
dec
adc
or
lods
loop
sarl
out
xor
bound
cmc
dec
dec
dec
into
arpl
ret
out
push
jmp
sar
clc
mov
out
mov
xchg
lods
loop
shll
addl
inc
popf
mov
and
adc
into
pop
mov
loopne
arpl
out
and
aas
sar
sti
mov
stc
xchg
mov
movb
or
fnstcw
xchg
sbb
pop
aam
repz
push
test
movsb
mov
fmull
aam
nop
mov
jno
cs
pop
jmp
cmp
pushf
or
lea
xor
add
push
out
call
cmpsl
movsl
jge
aam
adc
out
in
mov
jb
ds
aas
aad
push
inc
sub
and
pushf
sub
cmp
add
orl
pop
mov
pop
nop
cwtl
gs
fistps
in
adc
and
xor
mov
lret
das
add
lock
mov
dec
xor
ds
movsb
cld
imul
mov
push
rcll
mov
imul
cmp
aam
adc
add
lods
pushf
inc
pop
xor
mov
push
bound
mov
push
pushf
les
es
ljmp
lock
test
notl
ss
mov
xchg
lock
cltd
adc
add
into
pcmpgtw
scas
xchg
loop
and
rolb
pop
in
aam
push
outsb
xacquire
cltd
jl
loope
lods
xchg
inc
xor
mov
enter
adc
dec
lcall
movsl
add
push
jl
fwait
movsl
dec
jo
lods
mov
inc
adc
pop
ja
aam
pop
hlt
lret
xchg
mov
dec
mov
in
lods
xlat
jns
push
pop
bound
pushf
xchg
xor
push
dec
ftst
cmp
cli
cld
jb
adc
in
fistpl
xchg
jp
jb
addr16
mov
aam
data16
xchg
test
push
jmp
inc
xchg
clc
fistps
sar
pusha
cld
call
imul
jo
insb
push
sbb
and
icebp
or
push
stos
int3
js
mov
negb
stc
lahf
je
mov
cmpsb
mov
ret
jg
pop
sbb
adc
fisttps
adc
jle
mov
jno
sbb
xchg
or
ficoms
fisubl
int3
mov
jno
outsb
or
push
shll
ret
hlt
mov
clc
repnz
pop
push
mov
aaa
leave
jecxz
lcall
pop
xchg
adc
int3
inc
sub
or
jae
cli
rcrl
ret
xlat
add
xchg
and
push
mov
cmp
cmp
int3
and
cltd
jo
bound
push
jb
mov
negb
bnd
in
repz
mov
daa
push
xchg
cld
in
out
sub
cmpsb
addr16
test
and
mov
leave
test
pop
iret
xchg
lahf
inc
stos
adc
ret
movsl
movsl
shl
pop
ds
cmpsb
sub
cmp
lock
adc
dec
lahf
pop
pop
or
js
insl
push
adc
inc
xor
ficoms
sbb
outsb
adc
xchg
mov
dec
adc
imulb
xchg
fsubr
orl
xchg
popf
mov
pop
shl
hlt
sub
inc
mov
push
mov
mov
stos
mov
addl
sahf
push
xchg
test
pushf
sbb
lahf
dec
rcrl
lret
xchg
test
sub
cmp
ljmp
fs
mov
pop
loop
cli
movsl
outsl
dec
shll
cli
cld
cmc
push
sub
into
dec
arpl
xor
ds
push
mov
inc
push
sbb
out
xlat
sbb
leave
shrb
add
int3
adc
lahf
and
push
mov
pop
test
xlat
loopne
mov
gs
mov
dec
sti
push
in
push
mov
mov
cmp
mov
dec
rcrb
cmp
out
push
sbb
fimull
leave
les
call
inc
mov
mov
or
mov
jge
pop
aad
incl
jmp
sbb
pushf
mov
clc
adc
xchg
iret
xchg
hlt
call
push
movsl
dec
movb
movsb
je
shll
jb
or
inc
inc
xchg
mov
fisubs
or
sub
scas
dec
cmp
ret
nop
ja
outsl
sub
mov
mov
cwtl
and
fdecstp
lcall
and
pushf
or
mov
loopne
ret
repz
arpl
sub
lods
aam
cld
xchg
and
icebp
pop
jno
mov
sbb
cmpsb
ss
insl
jecxz
cmp
sub
jbe
jmp
lods
cmp
clc
hlt
int3
rolb
dec
add
push
mov
mov
lods
rorl
cld
mov
scas
xchg
jns
jnp
mov
add
mov
test
setns
xchg
add
fisttpl
les
xchg
sub
cmc
out
daa
sbb
stos
add
sarl
sti
mov
punpckhwd
test
dec
in
dec
pusha
and
mov
cmpl
xor
pop
cmp
sub
jb
pusha
adc
clc
push
xor
xchg
jle
inc
cmpsl
ret
mov
and
ja
push
lcall
scas
pop
mov
stos
xchg
push
mov
sub
cmp
out
mov
imul
mov
ljmp
mov
lahf
jp
cmc
aaa
addr16
jne
or
mov
add
xchg
jae
xor
adc
xchg
push
fbstp
xchg
mov
ret
jbe
clc
out
jle
push
jnp,pt
push
inc
insb
mov
push
pop
stos
repnz
push
jmp
in
push
popf
or
mov
jae
jge
inc
jp
iret
pop
mull
ret
push
iret
mov
mov
xchg
scas
and
imul
int3
sbb
stos
daa
xchg
xor
cmp
inc
cmp
or
add
arpl
cmpsb
add
jl
mov
push
es
lds
jae
faddp
fldenv
int3
xor
add
adc
sbb
int
pop
mov
push
push
or
movsb
adcl
cmpsb
fwait
insb
and
nop
bound
into
or
push
push
mov
xchg
jl
mov
xor
daa
addr16
vmovq
cmpsb
ljmp
push
xchg
push
push
ljmp
and
lret
jmp
fisttpll
in
not
adc
pop
cli
dec
push
add
js
jmp
pop
aaa
xchg
ret
mov
pushf
and
add
in
push
and
mov
add
xor
pop
add
xchg
fcoml
shrb
pop
dec
shlb
jnp
mov
and
fwait
or
mov
xor
jg
push
out
test
mov
sbb
lock
or
add
jg
lret
mov
mov
pop
fmuls
mov
sub
sti
bound
or
mov
add
imul
daa
ret
mov
cmc
fnsave
into
sub
lret
push
pop
jmp
cli
pop
mov
cmp
mov
clc
sub
ljmp
pop
in
jmp
loopne
sbb
gs
test
sti
sbb
fucomi
jno
cmp
lods
rcrl
xlat
mov
cmp
cmpsb
sbb
popf
mov
repz
jno
les
xchg
fsts
jmp
inc
pop
push
dec
imul
nop
pop
mov
aad
lock
jmp
les
pushf
bound
jo
loope
sti
pop
lods
sbb
dec
rolb
mov
sbb
xorl
jecxz
daa
call
dec
mov
or
inc
pusha
jl
inc
gs
lock
adc
sbb
push
ret
daa
stc
sbb
mov
sub
std
sub
sub
and
pop
mov
add
jns
mov
mov
mov
sbb
cld
mov
adc
mov
cwtd
fimull
sub
stc
lods
jge
ret
js
mov
sub
ss
push
mov
pop
outsl
push
mov
pop
jbe
mov
movsl
dec
lods
sub
repz
adc
ljmp
pop
clc
cli
mov
scas
push
out
dec
inc
mov
and
cltd
cmp
add
sbb
mov
xchg
push
out
ret
jo
add
mov
stos
repnz
pop
insl
mov
rcll
sti
stc
sbb
clc
xchg
test
cwtl
lret
dec
scas
cmp
movsb
decb
lods
fimuls
mov
pop
xor
dec
hlt
add
ret
fidivl
xchg
fwait
add
ret
sbb
inc
ds
pop
ja
dec
negl
sub
ret
xor
xchg
gs
inc
in
jle
jns
shrl
xchg
jl
mov
ret
sarl
lahf
int3
xchg
mov
fwait
out
push
add
js
int3
addr16
aad
or
icebp
add
insb
int
cmpl
xchg
ds
test
or
into
xchg
call
popa
je
xor
popa
jle
xchg
mov
testl
stos
gs
notb
test
add
jg
push
jae
not
inc
test
ret
adc
sbb
adc
jp
push
mov
lods
bound
sar
mov
shrb
inc
push
sub
addr16
or
add
cli
xchg
pop
adc
ljmp
shrb
lds
sbb
dec
int3
sbb
sti
add
or
aaa
js
ret
sbbl
leave
adc
mov
xor
push
mov
aas
and
or
xor
cmp
imul
add
jno
xor
cmp
pop
daa
ljmpw
out
in
mov
mov
inc
inc
dec
inc
push
push
lods
mov
push
mov
mov
xchg
movsl
loope
adc
add
cmp
sub
inc
fwait
loope
dec
mov
and
pop
fsubrs
addr16
std
pop
pop
pop
pop
dec
pop
pop
xor
cwtl
add
pop
in
sbb
fldl
push
loopne
rcr
jae
adc
mov
sub
faddl
push
inc
sub
lcall
push
sub
aad
int
push
test
and
ret
shrb
mov
mov
lcall
aam
mov
sahf
insb
xor
sbb
add
mov
ficoml
mov
lret
inc
inc
fadds
mov
ss
imul
scas
imul
stc
push
or
decb
and
mov
xor
fs
movsb
sbb
into
adc
bound
adc
cmp
jl
xor
jne
cli
xchg
dec
in
out
xchg
cld
mov
aas
pop
lods
xchg
inc
or
repnz
test
pop
adc
sahf
jmp
or
shlb
pop
out
and
call
push
test
jb
enter
fsubl
sub
sub
xlat
xor
cmp
pop
sbb
pusha
dec
fdiv
mov
pop
mov
dec
jp
inc
flds
dec
lret
nop
xor
aad
inc
jge
xor
xor
or
enter
bound
int
xor
and
rorb
xchg
mov
dec
das
mov
jb
cmp
aas
mov
cmp
ja
inc
in
ljmp
xchg
rolb
dec
dec
mov
divb
xchg
lret
aam
mov
and
insb
and
imul
mov
inc
sub
sahf
inc
push
lock
addr16
jbe
and
sub
fs
mov
scas
cld
ljmp
mov
gs
in
pushf
mov
pop
es
dec
aam
pop
icebp
push
aam
lock
sbb
shlb
mov
pop
mov
mov
gs
mov
out
push
test
lods
xchg
es
popa
sub
ljmp
mov
xor
xchg
push
mov
mov
push
iret
lret
push
adc
xchg
in
sub
push
lret
xchg
mov
mov
stos
loope
arpl
xchg
shrl
add
xchg
jbe
dec
push
sti
int
cmpsl
xlat
lahf
mov
clc
xchg
or
add
jns
jne
bound
jmp
adc
xor
or
mov
inc
aad
in
xor
ja
rcl
pop
and
and
mov
cli
in
mov
out
xchg
into
xchg
jne
pop
mov
mov
jne
push
test
scas
fwait
mov
nop
mov
pusha
and
jp
pop
and
mov
stos
sub
out
je
or
es
or
lock
mov
das
mov
in
jbe
jle
or
jnp
popa
jle
xchg
test
adc
push
fldl
pop
lods
popf
pop
test
push
inc
enter
mov
inc
nop
std
ljmp
shll
mov
xchg
xor
imul
cmp
jecxz
leave
fidivrl
popf
subb
push
nop
out
inc
or
mov
lds
leave
push
mov
not
pusha
mov
jmp
lea
call
xchg
pushf
movb
pushl
ret
bswap
mov
pushl
mov
pushl
xchg
pushf
jmp
xchg
push
pushf
push
pushl
ret
jle
push
rolb
je
add
je
cmp
inc
add
xor
xchg
push
mov
mov
pushf
pushl
ret
movl
mov
mov
jmp
movb
push
mov
setl
mov
pushf
mov
push
pusha
mov
mov
mov
lea
jmp
xchg
test
add
jmp
pushf
xchg
push
mov
call
push
pusha
nop
call
pusha
push
lea
nop
pushf
lea
ja
lea
bswap
pop
push
xchg
mov
jmp
mov
mov
mov
call
pushf
mov
call
pushl
lea
mov
xchg
pushf
pushf
push
pushl
ret
pushf
mov
lea
jno
lea
jmp
lea
call
pop
int3
jbe
int3
enter
aad
add
pushf
call
call
xchg
jmp
hlt
xchg
lds
fs
jp
push
mov
call
xchg
jmp
lea
mov
xchg
pushf
push
movb
mov
pushl
ret
pushl
mov
push
mov
call
mov
call
pushf
mov
lea
jmp
movsbw
nop
mov
pop
pusha
pusha
call
xchg
call
call
pushf
mov
movw
mov
call
pusha
xchg
pushf
pushl
ret
jmp
call
pushf
movb
jmp
push
mov
jmp
nop
pushf
mov
call
imul
or
push
pushl
pushl
ret
lea
jmp
bswap
movsbw
call
pushf
lea
jb
mov
push
jmp
pushf
mov
mov
jmp
pushf
xchg
jmp
pusha
jmp
pushf
jmp
mov
pushf
pushl
jmp
lea
call
xchg
jmp
pushf
pushf
mov
pushf
mov
jmp
xchg
pushf
jmp
pushf
pusha
xchg
jmp
setl
mov
call
nop
call
movb
xchg
lahf
mov
jmp
pushf
jmp
mov
call
pushf
pusha
pushf
mov
nop
mov
pushf
movb
mov
mov
call
mov
lea
call
mov
jmp
mov
lea
jb
lea
push
xchg
pusha
pushl
ret
mov
pushf
lea
jmp
xchg
mov
lea
jbe
mov
pushf
mov
jmp
jmp
pusha
nop
call
jmp
push
mov
mov
scas
add
or
ljmp
xor
and
test
jmp
xchg
not
pushf
pushf
jmp
mov
pusha
mov
pushl
call
pushf
xchg
pushf
mov
xchg
bswap
pop
mov
pushl
mov
mov
mov
jmp
lahf
jmp
rcrb
mov
imul
test
mov
call
call
xchg
pushl
pushl
movb
pushl
ret
jmp
lea
movsbw
mov
jmp
xchg
pushf
mov
mov
movzbw
bswap
lea
mov
pusha
mov
pushf
push
pushf
movw
lea
call
movb
mov
push
mov
movb
lea
jmp
call
xchg
bswap
bswap
bswap
pushf
mov
pusha
mov
push
jmp
jb
cmc
sub
add
xorb
push
adc
xchg
pusha
mov
mov
pushf
pushl
ret
movsbw
mov
jmp
jmp
jmp
push
pushf
jmp
mov
call
pushf
pusha
nop
push
mov
pushf
movzbw
mov
call
xchg
jmp
xchg
jmp
cmpsb
jns
in
adc
pop
pusha
jmp
pusha
sahf
cltd
cmp
add
loopne
add
call
je
cmp
je
or
xor
pushl
ret
pusha
mov
jmp
movw
pushf
pusha
mov
movb
movl
lea
call
call
jmp
lea
jle
pop
jmp
mov
jmp
pushl
xchg
movsbw
setle
lea
mov
push
jmp
mov
pop
pushf
mov
pushl
mov
pushl
mov
pushf
pushf
pushf
call
pusha
push
xchg
pushf
mov
push
mov
xchg
lea
not
pop
mov
pushf
mov
jmp
push
cmpsl
movsl
iret
movl
xchg
jmp
pusha
pushf
call
movb
movb
mov
lea
lea
jle
not
push
mov
call
pushf
lea
push
xchg
pushf
pushl
ret
mov
call
pushf
xchg
pushl
pusha
mov
pushl
ret
jmp
pushl
pushf
call
push
movb
mov
call
pushf
lea
jne
pushf
xchg
pushf
pushl
ret
pushf
lea
jae
push
mov
lea
movsbl
call
xchg
movsbw
movzbw
mov
call
xchg
movw
pushl
ret
lea
jmp
xchg
pusha
push
pushl
ret
xchg
mov
mov
mov
call
xchg
mov
pushl
ret
mov
pusha
push
pushf
mov
mov
movw
lea
ja
pusha
lea
call
pusha
pushl
xchg
mov
pushl
ret
jmp
xchg
pushf
movb
mov
pushl
ret
pusha
xchg
pusha
xchg
pop
mov
movb
mov
push
lea
pushf
push
jmp
cwtl
mov
add
add
push
jmp
pusha
nop
jmp
nop
movl
xchg
seto
bswap
mov
call
pusha
push
pusha
push
xchg
push
pushl
ret
call
mov
movzbl
mov
call
pushf
movb
lea
call
not
pushf
pusha
nop
movzbw
mov
pushf
xchg
call
xchg
pushf
movl
mov
movzbl
movsbw
mov
call
push
call
lea
jmp
mov
xchg
pusha
pushl
ret
in
mov
cld
ljmp
mov
and
not
movzbw
mov
mov
jmp
movsbw
nop
movzbw
lea
push
call
movsbw
lea
nop
lahf
movzbw
call
xchg
pushf
pushl
ret
xchg
push
ret
lea
jno
pop
call
pusha
mov
lea
jb
pusha
lea
jmp
movzbw
mov
pushf
xchg
pushf
jmp
jmp
pusha
push
pop
mov
push
jmp
jmp
pusha
pusha
mov
movb
call
pusha
pusha
nop
jmp
and
pop
pushf
push
lea
call
jmp
mov
mov
pushf
call
movb
jmp
mov
call
call
not
mov
call
movw
xchg
push
pushf
pushl
ret
lea
push
call
xchg
push
pushl
ret
push
nop
push
pushl
push
mov
pushf
push
pop
mov
jmp
pushf
nop
pusha
mov
lea
mov
pusha
mov
jmp
cwtl
pusha
pushf
jmp
lea
nop
movzbw
pop
pushf
call
call
lea
mov
movl
xchg
mov
pushl
ret
jmp
pusha
xchg
movb
mov
pushl
ret
lea
pushf
mov
jmp
imul
int3
call
bswap
mov
pushf
movl
jmp
xchg
insb
xchg
push
movb
movb
jmp
pushf
lea
pushf
xchg
pushf
pushf
mov
mov
pushl
ret
jmp
call
mov
movl
movw
lea
mov
xchg
mov
movb
mov
movw
pushl
ret
xchg
movb
pushl
ret
jmp
call
jmp
push
xchg
mov
movb
push
pushf
pushl
ret
mov
bswap
jmp
mov
mov
mov
call
bswap
not
mov
jmp
push
push
push
call
mov
movw
pushf
pushf
mov
jmp
push
pushf
lea
pusha
push
jmp
pusha
pusha
mov
push
push
call
xchg
movl
movb
pushl
ret
call
xchg
pushl
pushf
xchg
movzbw
jmp
jle
or
add
push
mov
mov
nop
pushf
xchg
lea
jmp
call
xchg
pushf
pusha
pushl
push
pushl
ret
jmp
pop
pusha
pushf
xchg
jmp
xchg
movw
pushl
ret
xchg
pusha
push
call
xchg
pusha
push
xchg
movsbl
not
lea
mov
mov
pushl
pushf
pushl
call
mov
lea
pushl
jmp
pushf
push
push
lea
jl
nop
pusha
call
xchg
call
movb
jmp
pushl
xchg
pop
bswap
mov
jmp
movb
mov
lea
call
xchg
pushl
push
mov
pushl
ret
jmp
jmp
jbe
rcrl
sub
and
sub
setb
mov
push
jmp
push
mov
movl
nop
call
mov
mov
call
pusha
mov
jmp
pushf
pushf
pusha
xchg
call
xchg
pusha
push
pushf
call
lea
movsbw
lea
mov
pusha
pushf
jmp
movb
xchg
mov
mov
pushl
ret
mov
jmp
bound
insl
xchg
nop
mov
movl
jmp
call
push
mov
movzbw
movzbw
mov
movb
call
pusha
pushf
nop
mov
jmp
pushl
xchg
movl
push
pushl
pusha
pushl
ret
pushf
pushf
push
jmp
movb
mov
push
pushf
lea
pushf
mov
pushf
call
mov
lea
call
pusha
call
jmp
jmp
mov
lea
mov
jmp
lea
pushf
mov
mov
pushf
xchg
push
push
mov
mov
pushl
ret
test
or
jae
xchg
pusha
pusha
xchg
pushf
bswap
mov
movl
pushf
jmp
mov
call
call
lea
call
pushf
pusha
mov
jmp
lea
pushf
xchg
mov
pushf
movb
pushl
ret
into
pushf
cmpl
movw
lea
call
push
pusha
pusha
xchg
pushl
pushf
pushf
pushl
ret
mov
mov
push
call
pushl
pushf
xchg
push
jmp
mov
push
call
lea
jmp
or
mov
pusha
cwtl
not
pushf
mov
movb
mov
mov
lea
pushl
xchg
mov
push
push
push
pushl
ret
push
not
mov
nop
call
pushf
lea
pushl
call
nop
lea
jge
pushf
mov
jmp
jmp
xchg
push
mov
pushf
push
pushl
ret
pop
push
lahf
mov
pushf
mov
pushf
call
pushf
mov
pusha
pushl
mov
lea
call
push
pusha
nop
call
call
nop
pusha
mov
push
movsbl
mov
push
pushl
mov
mov
mov
mov
pushf
mov
lea
pushf
jmp
lea
jne
mov
pusha
lea
mov
push
xchg
push
push
pushl
ret
pushf
pusha
jmp
pushf
jmp
out
pop
std
mov
not
lea
pushf
mov
call
lea
jmp
lret
cmpsb
mov
call
xchg
pop
jmp
pushf
mov
mov
mov
pushl
lea
call
call
push
jmp
xchg
push
pushl
ret
fidivs
xchg
add
xchg
das
xor
pusha
xchg
call
lahf
mov
push
mov
xchg
jmp
lea
jg
mov
jmp
mov
pushl
mov
pushf
bswap
not
movzbw
mov
pusha
pushf
mov
jmp
jmp
bswap
bswap
mov
movb
pushf
mov
movb
mov
pushf
pusha
call
jmp
lea
js
pushf
lea
push
jmp
pusha
mov
call
mov
pusha
call
pushf
nop
jmp
jl
sbb
pusha
mov
lea
not
lea
lea
mov
pushl
pusha
mov
mov
lea
mov
pushl
call
mov
nop
lea
movsbl
cwtl
jmp
bswap
mov
pushf
jmp
jmp
xchg
pushf
pushf
movb
pushl
ret
mov
pushf
movb
mov
pushf
lea
movb
xchg
pushf
pushf
push
pushl
ret
imulb
mov
call
jmp
loop
stos
sbbl
and
orb
nop
pop
add
xchg
pushf
mov
pushl
ret
jmp
mov
jmp
xchg
movsbw
mov
call
pushl
xchg
movw
pushl
ret
call
movb
push
pushf
mov
jmp
push
mov
pushf
pushl
pushf
pushf
lea
call
xchg
add
push
mov
xchg
pushf
pushl
push
pushl
ret
mov
pushf
pushf
pushl
call
lea
pushf
call
mov
jmp
pusha
movw
jmp
jmp
call
not
jmp
lret
lret
jl
or
inc
insl
add
mov
call
jmp
mov
pusha
call
pushf
movb
xchg
mov
pushl
ret
mov
mov
pushf
jmp
lea
call
call
mov
movsbl
push
mov
push
mov
pushf
push
lea
call
lea
mov
movb
xchg
mov
pushl
ret
xchg
pushl
mov
pushf
call
mov
pushf
xchg
pusha
jmp
movb
movb
xchg
push
pushf
pushl
ret
pushf
mov
jmp
push
xchg
pushf
mov
pushf
pushl
ret
jmp
dec
sub
xchg
pushf
pushf
mov
mov
call
mov
mov
push
movw
pushl
mov
pushf
call
lea
pushf
call
call
adc
push
sub
addb
jmp
mov
jmp
call
pusha
jmp
pusha
nop
jmp
call
call
push
xchg
pushf
pushf
pushl
ret
mov
pushf
pushf
xchg
pusha
pushf
call
mov
lea
push
jmp
pushf
mov
jmp
jmp
pusha
lea
mov
xchg
push
mov
pushf
pushl
ret
nop
pushf
mov
push
xchg
pushf
mov
call
je
push
nop
pushf
jmp
bswap
mov
pusha
call
pushf
call
pushl
jmp
pushf
call
mov
jmp
mov
pushf
xchg
movl
mov
movb
pushl
ret
lea
call
push
movw
xchg
pushl
mov
pushl
ret
pusha
pushf
mov
xchg
jmp
mov
nop
jmp
inc
mov
xor
mov
pushf
jmp
pushl
mov
mov
lea
lea
jo
push
mov
xchg
movw
pushl
ret
push
xchg
pushl
push
pushl
ret
call
xchg
pusha
push
push
pushl
ret
lea
movzbw
nop
movzbw
seta
pop
pusha
xchg
jmp
pushf
pushf
xchg
push
pushf
pushl
ret
pusha
pushl
call
push
xchg
mov
pop
mov
jmp
mov
push
pusha
jmp
jmp
push
lea
push
pusha
movw
xchg
pushf
push
movb
pushl
ret
xchg
pushf
push
pushl
pushf
pushl
ret
pusha
nop
pushl
pushf
xchg
movzbw
not
mov
pushf
mov
mov
movb
lea
mov
pushf
jmp
call
cwtl
push
pushf
lea
mov
mov
pushf
pushf
mov
pushf
push
movb
pusha
lea
jmp
pushf
jmp
push
pushl
lea
jno
push
nop
jmp
mov
push
push
pusha
jmp
pushf
movb
nop
call
xchg
pushf
pushl
ret
call
mov
nop
movsbw
pop
call
test
cmp
call
je
cmp
adc
popl
add
call
push
call
cld
rcl
movsbl
nop
call
pushf
mov
jmp
xchg
pushf
pushl
ret
push
mov
call
call
mov
not
mov
mov
mov
push
call
push
cli
sub
push
pushf
nop
call
pusha
xchg
pushl
pushl
pushl
ret
pusha
nop
setnp
pushf
mov
jmp
pushl
mov
movl
push
jmp
mov
call
pusha
call
push
mov
call
pushf
pushf
nop
pushf
mov
pushf
xchg
mov
jmp
jmp
jmp
xchg
mov
pushf
jmp
push
call
not
pushf
nop
pushf
movzbl
lea
movzbw
mov
pusha
jmp
pushf
lea
jmp
mov
call
xchg
movzbl
movzbw
pushl
movsbl
mov
pushf
jmp
jmp
jmp
jmp
bswap
mov
jmp
xchg
setg
cwtl
mov
pushf
pushf
pushf
mov
pusha
push
pushf
lea
pushl
call
dec
mov
iret
bswap
push
lea
mov
call
call
mov
bswap
movzbw
push
push
mov
lea
jae
pusha
push
mov
jmp
xchg
push
pushl
pushl
ret
shlb
jge
mov
in
decl
add
xor
pushf
pushf
lea
jmp
mov
lea
jge
push
mov
mov
push
pusha
push
lea
jmp
jmp
lea
jmp
pushf
jmp
jmp
push
nop
jmp
call
lea
call
xchg
jmp
jmp
mov
jmp
mov
pushf
lea
movb
pushl
xchg
pushl
mov
mov
mov
pushl
ret
call
pushf
call
xchg
jmp
xchg
mov
mov
mov
movb
pushl
ret
pushf
pusha
pusha
lea
call
xchg
movl
not
mov
call
pusha
xchg
not
pop
movzbw
pop
mov
pushf
movb
movb
push
mov
jmp
mov
jmp
xchg
push
pushl
pushf
pushl
ret
movl
mov
lea
jge
lea
push
pushl
xchg
pushf
pushl
ret
pushf
movb
pushf
xchg
pusha
pushl
ret
jmp
push
nop
pushf
jmp
call
push
lea
call
movzbw
not
bswap
pop
jns
pushf
pushf
pushf
xchg
call
pusha
push
call
push
jmp
fsubr
sbb
lahf
bswap
push
call
lea
push
push
pusha
xchg
pushl
pushf
pushf
pushf
pushl
ret
mov
pushf
call
add
push
xor
pushf
xchg
movb
movw
movb
mov
pushl
ret
mov
mov
pushf
call
movzbw
nop
push
mov
mov
jmp
call
pushf
pushl
pushl
nop
jmp
xchg
movw
pushl
ret
mov
pushf
pushf
mov
pushf
jmp
pusha
lea
pushf
push
xchg
movw
pushl
ret
movzbl
mov
movb
call
pusha
mov
pushl
nop
push
call
jmp
nop
mov
push
bswap
mov
lea
jns
pushf
xchg
call
pushf
pushf
lea
jb
lea
ja
xchg
pusha
pushl
ret
mov
movl
mov
lea
jg
push
mov
lea
js
push
mov
movb
lea
pushf
xchg
pusha
pushl
ret
push
call
call
call
pusha
jmp
mov
pushf
lea
js
nop
jmp
mov
lea
mov
not
not
mov
jmp
lea
pushl
pushf
call
mov
jmp
loopne
jge
pushf
xchg
movb
pushf
push
pushl
pushl
ret
mov
mov
mov
pusha
lea
pushf
movb
jmp
mov
call
mov
pushl
pushf
mov
pushf
call
jmp
lea
call
clc
and
pop
nop
jmp
mov
call
call
pushf
pushf
pushf
mov
movl
call
pusha
pushf
mov
lea
not
mov
push
pushl
call
pop
sbb
inc
call
mov
xor
lea
jns
xchg
pusha
mov
mov
pushf
mov
pushf
pushf
pushf
mov
mov
lea
jmp
pushf
movb
xchg
mov
mov
pushf
pushl
ret
mov
movw
xchg
movb
movb
movb
mov
pushl
ret
call
xchg
call
jb
push
mov
nop
jmp
push
movsbl
movzbw
call
pushf
push
call
pusha
pushl
nop
mov
jmp
movb
lea
pusha
mov
xchg
pushf
movb
pushl
ret
lea
pushf
jmp
call
jmp
pushf
pushf
pushf
mov
lahf
mov
push
push
mov
pushf
pushf
push
jmp
pushl
pushf
xchg
jmp
pushf
xchg
mov
pushl
movl
pushf
pushl
ret
xchg
mov
pushl
movw
movw
pushl
ret
push
pushf
call
movb
xchg
bswap
jmp
lea
call
pusha
bswap
pusha
not
nop
mov
pop
push
mov
pushl
mov
xchg
movb
mov
pop
lea
jge
mov
pusha
pushf
push
call
mov
call
mov
call
xchg
push
pushl
ret
push
nop
push
call
subb
inc
pushf
push
movw
pushl
ret
call
call
xchg
pushf
pushf
pushl
ret
push
movb
pushf
pushf
nop
mov
mov
call
call
push
pusha
jmp
jmp
push
not
mov
jmp
jmp
nop
jmp
pushf
lea
pushf
xchg
mov
pusha
pushf
pushl
ret
movzbw
movsbw
mov
pushl
mov
mov
push
lea
jmp
pusha
xchg
call
mov
mov
movzbw
pushf
mov
jmp
xchg
pushl
mov
pushf
pushl
ret
call
jmp
mov
pushf
pushf
pushf
push
lea
mov
xchg
pushf
mov
movw
pushl
ret
pushf
xchg
movzbw
mov
pushf
pushf
call
pushf
pushl
jmp
mov
movb
jmp
lea
jge
pusha
xchg
pusha
pushl
push
movzbw
mov
jmp
pushl
push
xchg
push
mov
mov
movb
pushl
ret
pushf
pop
lea
nop
push
pusha
mov
push
mov
jmp
bswap
call
lea
pushf
push
jmp
xchg
pushf
push
pushl
ret
pushf
xchg
jmp
call
mov
jmp
push
jmp
xchg
pushf
movb
mov
call
lock
push
cmp
jmp
sti
decl
shl
or
pop
loopne
jmp
out
bswap
pop
nop
pusha
movzbw
mov
jmp
outsb
in
pop
mov
jmp
jmp
xchg
push
pushl
mov
pushf
pushl
ret
jg
pushf
pushf
nop
call
jmp
movw
xchg
push
movb
push
pusha
pushl
ret
movb
xchg
push
movb
pushf
pushl
ret
je
sub
push
mov
mov
lea
mov
call
push
xchg
push
mov
pusha
pushf
pushf
push
mov
mov
pushl
lea
jns
lea
call
jmp
lea
jmp
movb
mov
setg
not
mov
pushf
mov
pushl
mov
call
jl
cmp
bswap
pusha
pop
nop
bswap
pop
pop
mov
push
pushf
lea
jge
pushf
xchg
pushl
pushf
call
pushl
pushl
mov
lea
pop
call
lea
ja
push
lea
pushl
pushf
jmp
xchg
movw
pushl
ret
pushf
xchg
pusha
pushl
ret
nop
jmp
push
mov
mov
je
xor
inc
and
je
add
pushf
pushl
ret
push
pushf
lea
jmp
pushl
jmp
pushf
lea
mov
xchg
push
pushf
push
pushf
pushl
ret
push
nop
pushf
call
xchg
mov
xchg
pop
pusha
pushf
bswap
mov
call
movb
xchg
pushf
push
pushl
ret
pop
mov
pusha
mov
pushf
movb
jmp
bswap
nop
push
mov
pushf
lea
jge
push
xchg
jmp
xchg
push
pushl
ret
lea
movl
jmp
pushf
pushf
mov
call
call
pushf
xchg
pushf
mov
jmp
mov
call
xchg
pop
std
shrl
cltd
cmp
xchg
movzbw
lea
setne
mov
push
mov
pushf
push
jmp
xchg
pushl
pushl
ret
push
mov
jmp
call
movw
mov
xchg
movb
pushf
mov
push
pushl
ret
pusha
nop
pop
mov
mov
mov
push
pushf
xchg
mov
mov
pushl
mov
movsbw
call
lcall
cmp
inc
add
add
xor
lea
pushf
xchg
movb
mov
push
pushf
pushl
ret
pusha
movb
nop
pushl
movb
mov
mov
pop
mov
pusha
pushf
jmp
pushl
jmp
mov
pusha
movb
jmp
xchg
push
call
lea
call
lea
jmp
jmp
pushf
mov
movb
xchg
lea
jno
push
pushf
pusha
pushf
mov
movb
call
lea
js
push
pusha
mov
jmp
pushf
mov
push
lea
lea
js
pusha
pushf
pushf
xchg
pushf
pushf
pushl
ret
call
mov
lea
pop
bswap
mov
pusha
jmp
movzbw
movzbw
mov
jmp
mov
mov
movzbl
mov
pushl
mov
jmp
xchg
pusha
pushl
ret
call
call
mov
mov
pushf
pushl
lea
mov
pushl
jmp
xchg
pushl
mov
mov
pushl
ret
nop
pushf
pushl
pusha
mov
movzbw
not
mov
pushf
mov
jmp
movzbw
mov
jmp
movb
pushf
call
inc
adc
add
popf
ret
bswap
nop
push
movsbw
movzbw
not
mov
call
xchg
push
mov
pushf
pushl
ret
pop
pop
pusha
jmp
pushf
pushf
jmp
xchg
pushf
pushf
pushf
push
pushl
ret
fsubr
ljmp
push
mov
push
mov
movb
lea
push
call
call
lea
jl
nop
movzbw
bswap
call
xchg
mov
mov
movb
pushl
ret
jmp
call
call
pushf
xchg
pushf
pushf
pushl
ret
pushf
lea
jge
mov
pushf
pusha
pushf
mov
lea
call
xchg
pushf
pushf
mov
movb
pushl
ret
lea
push
pusha
mov
xchg
push
pushl
ret
shlb
xchg
clc
setp
movzbw
nop
movzbw
not
jmp
pusha
mov
pusha
movsbw
movzbw
pop
mov
pushf
pushl
mov
pushl
lea
jmp
pusha
xchg
movb
pushf
xchg
jmp
xlat
and
mov
incl
push
mov
je
or
adc
call
jmp
mov
movb
jmp
call
bswap
push
nop
pushf
mov
lea
jb
pushf
pushf
pusha
xchg
call
push
pusha
mov
pushf
pushl
lea
call
xchg
pushf
pushl
ret
lea
push
jmp
push
mov
push
mov
pushf
call
pusha
call
lea
call
jmp
call
sbb
mov
and
mov
movb
lea
mov
jmp
mov
setle
pushf
lahf
push
mov
movw
mov
pushf
jmp
call
movsbw
not
push
lea
nop
bswap
pusha
jmp
xchg
mov
mov
pushf
pushf
pushl
ret
jmp
pushf
pusha
nop
call
lea
mov
mov
pushf
call
mov
mov
xchg
pushf
mov
pushl
pushl
ret
pushf
jmp
lea
jb
pusha
lea
call
mov
pushf
xchg
call
pusha
nop
lea
movzbl
push
mov
mov
xchg
push
call
jmp
movw
xchg
push
push
xchg
not
mov
pushl
jmp
push
pushl
nop
movzbw
not
lea
jo
push
mov
pushf
xchg
movb
call
pusha
lea
pushf
pushf
jmp
push
push
lea
call
jmp
pushf
call
pushl
xchg
mov
pushl
ret
pushf
nop
jmp
xchg
push
mov
pushl
ret
movzbw
mov
pushl
lea
jg
push
pusha
mov
pushf
lea
pushf
jmp
xchg
pushf
pushl
jmp
jmp
mov
nop
pushf
mov
bswap
bswap
call
pushf
xchg
pushf
mov
pushl
ret
lea
movb
pushf
pushf
xchg
movb
pushl
ret
nop
movb
push
call
jmp
movb
xchg
pop
setp
mov
mov
mov
jmp
lea
lea
pop
pop
call
jmp
mov
nop
pushf
mov
xchg
movzbl
movzbw
pop
setge
mov
pushf
pushf
call
xchg
pushf
xchg
lahf
cwtl
lea
pop
mov
pushf
movw
jmp
jmp
nop
call
movb
nop
call
mov
mov
jmp
push
push
pusha
lea
jmp
pushf
lea
call
int3
mov
lds
add
mov
sbb
sbbb
lldt
and
push
and
mov
pushl
ret
jmp
lea
lea
je
xchg
pusha
movb
pushf
pushl
ret
lea
ja
pushf
pushf
xchg
pusha
pushl
ret
xchg
pusha
movb
mov
call
call
lea
movl
jmp
push
pusha
mov
nop
movb
jmp
pushf
mov
lea
jge
push
mov
jmp
push
jmp
pusha
push
jmp
push
pusha
jmp
mov
xchg
pushl
movb
pushf
mov
pushl
ret
pushl
call
lea
jb
push
call
movw
lea
pushl
pusha
lea
jbe
xchg
push
pushf
pushl
ret
lea
jp
pusha
xchg
mov
pusha
pushl
ret
movb
call
pusha
push
mov
nop
call
movsbw
pusha
movzbw
pusha
nop
not
mov
call
nop
pushf
pusha
jmp
movsbw
pushf
nop
pushf
movsbw
call
xchg
bswap
mov
call
call
lea
pushf
jmp
pushf
xchg
pushf
mov
pushl
ret
call
xchg
jmp
call
seto
movsbw
jmp
cld
imul
setno
bswap
nop
mov
push
pushl
mov
pushf
pushf
movl
movb
xchg
pusha
call
mov
mov
push
mov
mov
jmp
push
mov
pushl
mov
nop
call
jmp
call
pop
push
and
rolb
je
add
push
pushl
ret
xchg
pushf
pushf
jmp
jmp
and
or
lea
movb
call
movsbw
nop
movsbl
push
mov
jmp
pusha
mov
xchg
pushf
setp
push
mov
jmp
call
pusha
xchg
pushl
mov
pushl
ret
jmp
call
mov
pushf
lea
call
call
push
pusha
mov
call
movsbw
pusha
nop
movzbw
lea
jp
pop
call
lahf
lea
pushl
mov
jmp
lahf
bswap
mov
pushf
mov
push
lea
pusha
xchg
mov
movb
movl
pushf
pushl
ret
mov
bswap
call
pusha
mov
jmp
call
jmp
mov
cwtl
or
add
add
xchg
pushf
jmp
lea
jmp
not
pop
push
push
xchg
push
mov
bswap
mov
pusha
pushf
mov
call
mov
repnz
push
push
lea
push
xchg
pushf
pusha
pushf
pushl
ret
call
pushf
call
call
mov
call
lea
jmp
movsbl
pop
lea
nop
movzbw
jmp
mov
jmp
pushf
mov
jmp
mov
movw
jmp
xchg
mov
pushl
ret
inc
int3
out
inc
add
cmpsb
cld
dec
mov
push
pushf
xchg
movw
mov
pushl
ret
mov
movw
xchg
mov
movw
pushl
ret
pusha
nop
pushf
call
mov
pusha
pushl
push
mov
lea
mov
movb
call
call
jmp
mov
nop
mov
pop
jmp
xchg
pushf
pushf
movb
mov
pushl
ret
lea
call
not
mov
call
lcall
add
movw
movl
push
lea
jmp
xchg
pushl
push
push
pushl
ret
mov
add
and
js
push
jmp
call
jmp
pushf
mov
jmp
mov
call
mov
lea
pop
push
jmp
movzbw
mov
pushf
mov
mov
pushl
lea
call
jmp
mov
bound
call
call
ja
nop
push
push
jmp
call
call
xchg
pushf
pushf
mov
movw
pushl
ret
push
or
movl
xlat
lea
mov
mov
pushf
mov
push
mov
pushf
call
pusha
movl
nop
movsbw
movzbw
jmp
pusha
nop
call
call
push
mov
push
mov
mov
movb
jmp
push
mov
call
ret
ja
insl
daa
inc
xchg
call
jmp
xchg
mov
push
push
pushf
pushl
ret
xchg
lea
mov
pushf
mov
pushf
jmp
sub
jo
jmp
push
pushf
mov
pushf
lea
jmp
movb
movw
jmp
test
add
mov
sbbb
lret
xchg
pushl
mov
mov
mov
jmp
lea
pushf
pushf
push
call
mov
pushf
pushf
push
movb
lea
movw
mov
pushf
xchg
mov
movb
pushl
ret
pushf
movb
mov
mov
pushf
lea
jmp
jmp
mov
jmp
xchg
pop
push
mov
jmp
bswap
mov
movw
mov
call
nop
movb
call
call
imulb
mov
jnp
add
je
add
jmp
push
jmp
jmp
jmp
movl
mov
movb
call
lea
mov
pushf
nop
lea
pushf
bswap
pusha
mov
jmp
pushf
lea
jmp
movl
xchg
pop
mov
pushf
movb
jmp
call
call
pushf
pushf
nop
jmp
jmp
jmp
xchg
pushf
pushl
pushl
pushl
ret
xchg
pushl
lea
jle
pusha
mov
pushf
lahf
mov
jmp
lea
pusha
jmp
mov
call
mov
pushf
push
movb
jmp
pusha
nop
pushf
push
push
xchg
not
mov
pushf
push
mov
pushf
mov
call
pushf
lea
mov
xchg
pushf
pushl
ret
push
xchg
pushf
pusha
push
mov
pushl
ret
movl
call
mov
dec
jns
inc
and
push
movb
movb
pushf
pushl
ret
bswap
pop
pushf
jmp
rorl
inc
and
xchg
movl
movb
pushl
ret
push
pusha
pusha
nop
push
mov
jmp
call
xchg
mov
mov
mov
pushl
ret
jmp
pushf
pushf
movb
mov
xchg
pushl
pushf
pushl
ret
movb
nop
call
fiaddl
sbb
xchg
pusha
push
mov
call
mov
pushf
mov
jmp
jmp
pushf
pushf
lea
pushl
mov
push
movw
xchg
movl
pushf
pushf
mov
pushl
ret
pushf
mov
jmp
xchg
jmp
jmp
mov
movw
pushf
lea
pushf
pushl
xchg
movb
pushl
ret
jmp
xchg
pushf
pushl
ret
pushf
pushf
nop
movw
push
lea
jp
push
push
movzbw
mov
pusha
call
jmp
jmp
pusha
lea
jne
xchg
pushf
call
call
movw
jmp
jmp
mov
push
pusha
jmp
pushf
pushf
call
lea
pushf
mov
jmp
jmp
lods
fdivrs
and
push
push
in
not
not
mov
push
mov
call
movsbl
jmp
movb
xchg
mov
movw
movl
pushl
ret
xchg
movl
mov
movl
pushl
ret
call
pushl
xchg
movb
movb
mov
movb
pushl
ret
call
adc
jne
andb
sub
add
lcall
inc
add
xchg
push
pusha
pushl
xchg
pushf
mov
call
movb
lea
call
jmp
push
jmp
push
lea
movb
pushf
pusha
jmp
xchg
push
push
push
mov
pushl
ret
call
dec
sar
aad
pushf
mov
pusha
pushf
lea
js
push
lea
pusha
pusha
pushf
jmp
pushf
mov
pushf
mov
nop
push
movw
mov
pushf
pusha
jmp
call
xchg
jmp
push
xchg
pushf
movw
movl
pushl
ret
jmp
pusha
mov
not
pop
mov
mov
jmp
push
pushf
pusha
xchg
movb
lea
jge
pusha
mov
xchg
movsbw
jmp
xchg
pusha
pushl
ret
mov
pushf
push
mov
lea
jmp
call
movb
mov
pop
mov
mov
jmp
push
lea
jle
xchg
push
pusha
movb
pushl
ret
mov
jmp
mov
call
call
fdivs
inc
jmp
out
jns
int
push
and
pushf
pushf
mov
pushl
ret
lea
mov
call
mov
call
movsbl
mov
pushl
jmp
push
jmp
not
mov
call
lcall
add
pushf
movw
mov
pushf
call
call
pushf
pusha
mov
pusha
jmp
lea
call
xchg
jmp
movsbw
nop
mov
call
pushf
xchg
pushf
pushf
pushl
ret
xchg
pushf
push
pusha
pushl
ret
jmp
xchg
call
lea
movw
pushf
call
xchg
push
pushf
mov
movb
pushl
ret
pushf
xchg
pushf
push
mov
jmp
push
lea
pushf
xchg
movw
movb
mov
movw
pushl
ret
push
jmp
pusha
call
sbbb
movsbw
mov
movsbw
pusha
nop
lea
jnp
movzbw
push
mov
mov
mov
pusha
xchg
movb
xchg
mov
mov
pusha
pushl
mov
movw
pushf
pushf
lea
mov
call
call
pushf
pushf
mov
pushf
movsbw
jmp
mov
pushf
push
mov
lea
jmp
mov
xchg
movb
mov
movb
pushl
ret
xchg
pusha
movb
pushl
ret
ljmp
add
add
jg
or
jmp
fs
jmp
lea
movb
jmp
lea
movb
push
pushl
mov
xchg
movb
movw
pushl
ret
add
pop
idiv
je
add
ss
mov
pushl
jmp
pushf
xchg
mov
mov
pushf
bswap
mov
push
mov
jmp
mov
jmp
pushl
mov
call
push
lea
push
call
xchg
pop
mov
mov
pushf
mov
pushl
lea
pushl
xchg
pushf
mov
pushl
ret
jmp
pusha
call
xchg
movl
mov
pushl
movl
pushl
ret
xchg
mov
pushl
ret
mov
jecxz
add
dec
icebp
in
xchg
mov
pushf
pushl
lea
push
pushf
xchg
push
pushf
pushl
ret
lea
pushf
pushf
push
pushf
xchg
pushl
push
mov
pushl
ret
bnd
not
movzbw
mov
lea
jb
mov
jmp
adc
fcomi
call
jmp
setl
setbe
nop
movsbl
pushf
not
pushl
mov
call
call
pushf
mov
pushf
mov
call
push
jge
cli
xchg
movw
mov
mov
movb
pushl
ret
push
not
mov
movw
pushf
pushf
mov
push
lea
call
mov
jmp
pushf
movb
xchg
pushf
pushl
ret
jmp
movb
push
pushf
xchg
push
movb
pushl
ret
xchg
mov
push
pushl
ret
lea
jns
pushf
pushf
lea
pusha
jmp
jmp
jo
sbb
xor
aaa
call
pop
les
call
dec
push
fildl
nop
call
call
lea
push
mov
push
xchg
push
push
movb
pushl
ret
jmp
call
push
movb
mov
pusha
call
insb
test
and
pushf
pushl
pushf
pushl
ret
pushf
pushf
xchg
push
movw
push
pushl
ret
cmp
pushf
xchg
pusha
pushl
jmp
call
jmp
jmp
ficoms
decl
test
test
pushf
nop
movsbw
bswap
not
mov
movw
xchg
pusha
pushf
mov
mov
mov
mov
mov
mov
mov
jmp
lea
pushl
mov
push
jmp
mov
xchg
mov
pushl
ret
jmp
push
pushf
pushl
push
nop
pushf
mov
movb
lea
ja
movsbw
push
mov
pusha
pushl
mov
call
push
jmp
pushf
mov
call
push
movb
xchg
mov
pushl
pushl
ret
pushf
mov
mov
jmp
push
jmp
call
pushl
mov
setl
call
push
pop
movzbl
bswap
mov
push
mov
call
pushl
mov
setae
not
pusha
pusha
mov
pushf
mov
mov
push
lea
mov
movb
xchg
movb
pushl
ret
pusha
nop
call
cmp
pop
add
jmp
mov
pushf
mov
call
xchg
pushf
movb
pushl
ret
not
lea
movzbl
pop
call
jmp
jmp
pushl
jmp
pushf
pusha
xchg
push
pushl
ret
je
jp
decl
mov
call
mov
push
xchg
jmp
pushf
xchg
pushf
mov
pushl
ret
call
call
pop
movsbw
mov
push
pusha
push
mov
call
nop
pushf
call
push
pushl
pusha
jmp
mov
lahf
bswap
mov
pusha
mov
pushl
lea
jae
pushf
pushf
mov
jmp
mov
xchg
push
movw
pushl
ret
movsbl
mov
mov
pushf
pushl
jmp
pushf
lea
jmp
inc
adc
push
pusha
pushf
mov
jmp
add
pop
pusha
movw
xchg
sete
lea
movzbw
mov
pushf
pushf
push
movb
mov
pushl
pushl
call
push
mov
nop
pusha
call
nop
push
push
pushf
pushf
mov
bswap
call
movb
lea
call
jmp
or
movd
insb
and
jmp
scas
push
movzbw
push
not
nop
lea
jle
movzbl
movsbw
bswap
pop
call
pushf
mov
mov
movl
movb
push
lea
call
pusha
pusha
nop
push
jmp
movw
movb
mov
call
call
xchg
sete
mov
pushf
mov
mov
pusha
call
call
lea
jo
pushf
nop
pushl
pusha
call
push
pushf
lea
pushf
lea
jno
pushf
xchg
pushf
pushf
pushl
ret
xchg
mov
mov
pushl
ret
nop
pushl
pusha
lea
jle
push
movsbl
call
jmp
call
pusha
push
mov
jmp
cwtl
movzbl
sets
nop
lahf
not
mov
cwtl
pop
call
xchg
jmp
mov
pushl
jmp
ss
jne
jl
dec
pushf
pushl
ret
xchg
pushf
pusha
mov
push
pushl
ret
pushf
bswap
call
lea
jp
mov
call
xchg
mov
movb
movb
mov
pushl
ret
pusha
movzbw
mov
lea
jno
pushf
mov
mov
push
lea
movb
jmp
jmp
xchg
movzbw
mov
call
bswap
mov
call
call
call
inc
out
xor
jl
pushf
pusha
xchg
pushf
movsbw
mov
pushf
call
lea
pusha
push
jmp
jmp
push
les
mov
call
call
xchg
pushf
xchg
movsbw
pushf
not
push
mov
lea
jge
push
push
mov
pushf
pushf
lea
pushl
jmp
hlt
loope
cmp
xor
add
pushf
lea
jb
pusha
lea
call
push
lea
mov
call
pushf
push
mov
call
pushf
pushf
lea
pushf
mov
push
jmp
xchg
mov
pushl
ret
mov
push
pusha
lea
jmp
pushf
mov
call
pushf
pushf
xchg
seta
mov
pushl
movw
mov
jmp
pushl
pushf
xchg
pushl
pushf
call
xchg
pushf
mov
lahf
mov
lahf
mov
jmp
lea
jmp
mov
pushl
movl
pushf
mov
lea
jmp
mov
mov
push
call
pushf
mov
pushf
pushf
nop
call
mov
mov
mov
call
xchg
movl
movw
pushl
ret
pushf
movw
xchg
call
pushl
pushl
nop
call
push
call
mov
jmp
call
push
pusha
pushf
xchg
push
mov
jmp
push
mov
bswap
movzbl
mov
jmp
pushf
mov
pusha
lea
movb
xchg
push
pushf
pushl
ret
lea
jmp
mov
jmp
mov
jmp
xchg
pusha
mov
pushl
ret
mov
call
in
inc
ljmp
and
insb
and
jmp
pushl
xchg
mov
xchg
pop
mov
pushf
push
pushf
push
mov
jmp
mov
pushf
lea
call
pushf
pushf
pushf
xchg
movsbw
call
jmp
mov
xchg
pushf
mov
movl
movl
pushl
ret
pushf
mov
push
xchg
jmp
jmp
nop
pushf
movb
jmp
not
not
jmp
pushf
pushf
jmp
cs
aaa
enter
and
push
pushl
ret
pusha
pusha
movzbl
nop
lea
mov
pushf
movsbw
mov
call
mov
pusha
bswap
lea
mov
call
jmp
mov
mov
lea
jns
lea
pusha
push
xchg
pushf
pushl
ret
lea
push
push
pushf
call
mov
push
mov
xchg
pushf
movw
pushl
ret
call
mov
call
inc
or
int3
push
push
push
xchg
pushf
mov
mov
mov
pushl
ret
call
sbb
in
scas
movw
mov
pusha
xchg
pushf
call
xchg
mov
pushf
pushl
ret
xchg
jmp
pusha
lea
pushf
call
mov
jmp
xchg
pushf
push
pushf
pushf
pushl
ret
movb
pusha
nop
push
mov
lea
js
movsbw
movsbw
mov
pushf
pusha
push
mov
jmp
call
pop
mov
jmp
lea
jmp
mov
jmp
pusha
movb
pushl
mov
pushl
pushl
push
lea
call
sahf
clc
sbb
movl
mov
not
mov
jmp
xchg
pushf
pushf
movl
mov
pushl
ret
andb
jnp
add
cwtl
pushf
push
xchg
pushf
push
pushl
ret
mov
movzbl
mov
call
push
mov
call
push
xchg
push
pushf
pusha
pushf
pushl
ret
call
bswap
bswap
movzbw
pushf
nop
movsbl
lea
mov
call
pushl
push
pushf
xchg
pushf
pushf
pushf
pushl
ret
xchg
call
push
mov
mov
call
pushf
not
mov
push
call
pushf
push
xchg
setp
mov
movb
call
xchg
jmp
xchg
call
movb
xchg
mov
pushf
mov
movsbl
pop
pop
call
mov
movb
pushf
jmp
call
mov
nop
movl
pusha
jmp
call
jmp
pushf
nop
pushf
pusha
movw
pushl
xchg
movzbw
mov
mov
push
mov
push
jmp
pusha
call
push
lea
lea
nop
not
pushf
mov
push
movw
xchg
jmp
mov
movb
push
mov
movl
mov
jmp
enter
call
pushf
mov
mov
movsbw
bswap
mov
push
jmp
movsbw
lahf
lea
mov
pushl
mov
pushf
jmp
jmp
lea
lea
jns
pusha
xchg
pushf
mov
pushl
ret
mov
lea
movw
xchg
pushf
movl
mov
push
pushl
ret
shl
testb
pushl
movb
jmp
pushf
xchg
pushl
pushl
ret
jmp
pushf
pushf
mov
call
pushf
xchg
pusha
pushl
ret
call
lea
jmp
push
pushf
nop
pushl
push
call
push
movb
xchg
push
push
push
movb
pushl
ret
jmp
pop
push
xchg
movw
xchg
not
call
push
not
nop
movzbw
mov
lea
jae
push
xchg
push
xchg
mov
mov
jmp
movl
movl
xchg
mov
mov
pushl
ret
mov
xchg
pushf
xchg
not
mov
mov
call
jo
setle
mov
out
push
add
scas
ret
pushf
jmp
mov
pushl
pushl
lea
pushf
xchg
movb
pushl
ret
mov
fs
jl
push
pushf
lea
movb
mov
xchg
pushf
pushf
pushl
ret
call
nop
pushf
push
pushf
mov
pushf
push
lea
mov
movb
pushf
mov
push
movb
pusha
lea
pushf
push
xchg
push
mov
movl
mov
pushl
ret
adc
fwait
and
add
push
push
mov
lea
call
push
xchg
push
movb
pushl
pushl
ret
pusha
pushl
nop
jmp
lea
mov
pushf
movb
call
lea
jb
pusha
mov
movsbl
movsbw
setg
mov
call
into
jg
outsb
call
jmp
mov
jmp
xchg
pushf
pushf
mov
movl
pushl
ret
mov
pusha
movzbl
movsbl
pop
mov
push
call
nop
push
pushl
xchg
seto
call
movsbw
movsbw
movsbw
nop
movzbw
jns
pop
push
jmp
movsb
push
jle
push
nop
pushl
xchg
jmp
pusha
bswap
pushf
nop
pushf
mov
bswap
mov
mov
pushf
push
movb
xchg
call
pop
fbld
cltd
jmp
cltd
fcoms
inc
cld
pusha
pushf
nop
pop
pusha
mov
pushf
push
xchg
pushf
mov
jmp
jo
nop
jmp
adc
leave
insb
xchg
jmp
jmp
pushf
movzbl
cwtl
mov
push
pusha
xchg
pushf
mov
mov
bswap
jmp
xchg
pushf
pushl
ret
mov
mov
pushf
lea
jmp
lea
mov
jmp
mov
and
pushf
pushl
pushl
ret
push
pushf
mov
not
bswap
mov
mov
call
push
pusha
not
nop
lahf
not
mov
call
lea
movb
push
call
pushl
call
mov
not
pushl
call
xchg
push
pushl
setp
mov
pusha
jmp
mov
xchg
mov
cmp
call
je
dec
call
pop
mov
pushf
call
pushf
movb
lea
jmp
xchg
mov
pushl
ret
pushl
call
pusha
xchg
movb
pushl
ret
pushf
lea
lea
jnp
pusha
pusha
xchg
pushf
mov
pushl
pushl
ret
mov
pusha
lea
jo
pusha
xchg
lea
jae
pushf
pushl
push
xchg
movsbw
call
xor
movsbl
nop
mov
lea
jp
not
mov
pop
push
call
mov
xchg
movb
mov
pushl
ret
jmp
pushf
nop
movsbw
pop
lea
sete
mov
movl
pushf
jmp
data16
lock
jl
or
lcall
add
mov
call
call
nop
cwtl
movzbw
not
seto
mov
pushf
jmp
pushf
call
movzbl
pusha
pushf
nop
not
call
mov
pushf
pusha
lea
call
mov
movb
call
inc
and
mov
lcall
cmpsb
push
movb
call
lea
call
lea
jmp
nop
lea
jo
push
lahf
pusha
jmp
lea
mov
call
call
jmp
call
xchg
movb
jmp
pushf
pushf
xchg
pusha
mov
pushl
ret
movw
xchg
lea
pushf
movw
mov
mov
pushf
call
movb
lea
call
mov
movw
lea
call
jmp
pusha
not
push
movzbw
nop
push
pop
mov
mov
pushl
push
xchg
movb
xchg
pop
lea
mov
call
push
call
push
jmp
movb
lea
lea
jle
xchg
pushf
pusha
pusha
pushf
pushl
ret
jmp
call
movzbl
push
mov
pushf
push
pushl
call
call
call
pushf
lea
jp
pusha
xchg
pushf
pushf
jmp
jmp
mov
pushf
pusha
mov
mov
jmp
mov
call
pushl
xchg
pusha
pushl
ret
call
call
jmp
pushf
nop
call
jmp
jmp
xchg
push
pusha
pushf
pushl
ret
pushf
mov
pushl
lea
lea
js
pushf
pushf
pusha
xchg
movb
pushl
ret
mov
inc
pushf
movb
mov
movb
xchg
pushf
mov
lea
push
mov
call
movw
mov
movsbw
setl
pop
mov
push
mov
jmp
jmp
push
movl
mov
pusha
call
xchg
lea
lea
bswap
mov
jmp
call
add
je
jmp
xchg
movl
pushf
pushf
push
pushl
ret
pushl
movw
movb
lea
mov
jmp
push
movb
nop
call
movw
mov
call
jmp
pushl
call
mov
pushf
xchg
pushf
mov
jmp
mov
jmp
jmp
xor
cmpsl
cmp
jmp
push
push
mov
pushf
nop
call
mov
xchg
movl
movb
pushl
ret
pushf
call
lret
lret
lods
xchg
lock
shlb
cmp
mov
xchg
pushf
movw
pushf
pushf
pushl
ret
pusha
call
lea
movsbw
nop
lea
pop
pusha
jmp
pop
jmp
xchg
movb
pushl
ret
jmp
or
cli
clc
xchg
pushl
movsbl
pop
mov
movw
jmp
xor
xor
push
pusha
pusha
nop
pushl
pushl
call
xchg
push
push
push
pushl
ret
call
push
mov
push
pushf
pusha
xchg
push
xchg
movsbw
lea
mov
call
pusha
jmp
push
xchg
pushl
pushl
movb
pushf
pushl
ret
xchg
pusha
pop
lea
call
push
mov
call
pushf
mov
pushf
pushf
jmp
call
mov
pushl
mov
push
mov
jmp
push
lea
mov
jmp
pushf
nop
jmp
mov
movsbw
bswap
lea
pushf
mov
call
adcb
pushf
nop
mov
call
clc
out
mov
pushf
call
jmp
xchg
call
jmp
pushl
lea
pushf
call
jmp
push
xchg
pushf
movb
pushl
ret
call
mov
pushl
mov
call
mov
not
pushf
bswap
mov
pushf
mov
push
pushl
mov
jmp
pushf
movb
nop
movb
pushl
push
jmp
jmp
pushf
pushf
mov
jmp
mov
mov
movb
lea
call
movl
mov
pusha
pushl
call
call
jmp
xchg
movw
push
push
pushl
ret
cwtl
cmp
inc
add
movw
call
mov
mov
mov
push
lea
jmp
call
jmp
xchg
pushf
pushf
mov
cwtl
mov
pushl
push
jmp
out
fsubr
lea
add
xor
aad
jmp
lret
mov
xchg
xchg
jb
xchg
test
cmp
xchg
and
movsl
movsl
call
push
call
call
mov
mov
push
lea
call
xchg
cwtl
not
mov
pushl
mov
pushf
jmp
mov
jmp
jmp
mov
pusha
xchg
jmp
push
jmp
not
lea
nop
call
jmp
pushf
pushf
lea
jmp
mov
push
mov
call
jmp
jmp
mov
jmp
movb
pusha
jmp
lea
jmp
mov
pushf
pushf
mov
mov
jmp
movb
call
aam
xor
jmp
pop
mov
call
mov
pusha
pushf
xchg
lea
jl
push
mov
mov
not
mov
pushf
pusha
mov
pusha
pushl
pushf
pushl
lea
movb
call
pusha
pushf
lea
pushf
call
call
call
xchg
mov
pushl
mov
movb
pushl
ret
xchg
push
mov
movl
mov
pushl
ret
cmp
push
bnd
pusha
lea
mov
mov
xchg
movl
mov
pushl
pushl
ret
lea
pushl
mov
xchg
movb
pusha
push
pushl
ret
jmp
movl
mov
push
call
mov
lret
sub
add
push
into
xlat
pushl
nop
pushl
mov
pushf
push
call
xchg
mov
pushl
mov
mov
mov
call
pushf
movb
lea
push
push
call
pushf
jmp
bound
jno
pop
pushf
push
xchg
pushl
pusha
xchg
setle
cwtl
not
mov
pushl
push
mov
call
js
pushf
pushf
pushf
xchg
pushf
setne
lea
js
mov
pusha
jmp
mov
jmp
mov
pusha
jmp
movb
pushf
lea
jmp
test
cli
jb
mov
pusha
lea
pushf
call
push
movb
pusha
jmp
movw
jmp
push
push
xchg
push
pushl
ret
lea
jmp
pusha
jmp
mov
pushf
pushf
call
lea
call
pusha
jmp
push
pushf
nop
pushf
jmp
pushf
mov
pushf
movsbl
lea
jg
mov
call
movw
xchg
mov
movb
mov
pushl
ret
jmp
pusha
aam
xor
and
pushf
movb
call
movb
lea
mov
xchg
movw
movb
mov
mov
pushl
ret
mov
mov
push
pushf
movzbw
not
mov
pusha
mov
jmp
jmp
lea
call
call
mov
mov
push
call
xchg
pushf
pushl
ret
xchg
mov
pushf
pushl
ret
in
repz
pop
call
movw
lea
call
xchg
pop
mov
jmp
mov
nop
pushf
call
movzbw
nop
call
lea
mov
xchg
pushf
pushl
ret
lea
jmp
xchg
pushf
lea
push
push
mov
pusha
call
call
lea
jle
mov
pusha
call
pusha
push
lea
call
pushf
nop
push
call
mov
call
jmp
nop
pushf
call
jmp
mov
not
jmp
lea
jmp
pushl
push
push
lea
movb
jmp
push
nop
pushl
xchg
bswap
setae
movsbw
not
mov
jmp
mov
jmp
movb
jmp
insb
ds
or
in
and
lret
mov
jle
ljmp
repnz
je
add
je
or
je
xor
cmp
mov
movb
mov
xchg
mov
pushl
ret
pushf
call
xchg
movb
mov
pusha
jmp
push
pushl
lea
pushf
call
lea
js
pusha
pusha
lea
push
pushf
push
xchg
mov
movw
pushf
pushl
ret
setb
mov
jmp
mov
call
lcall
call
push
pushf
nop
push
pushf
pusha
mov
mov
lahf
mov
pushl
mov
pushf
jmp
lahf
nop
lea
mov
pop
jmp
pushl
pushf
xchg
pushf
movb
push
pushl
ret
mov
movw
xchg
mov
movb
mov
pushl
ret
mov
lea
mov
movb
mov
push
push
jmp
pushf
xchg
jmp
jmp
jmp
push
pusha
lea
lea
jge
pusha
push
xchg
push
pushl
pushl
ret
pushf
nop
movb
jmp
and
sub
mov
call
push
pushl
nop
call
jle
xchg
dec
pushf
xchg
movsbw
call
lea
jmp
not
nop
pusha
pushf
bswap
mov
mov
movw
movb
mov
pushl
xchg
movw
movb
jmp
pusha
bswap
movsbw
movzbl
nop
lea
movzbw
mov
pusha
push
jmp
xchg
mov
push
mov
pushl
ret
lea
jmp
xchg
not
pop
pushl
mov
jmp
lea
movl
push
pushl
call
call
nop
push
call
jmp
pusha
xchg
mov
pushf
xchg
pop
mov
pusha
mov
call
lea
pushf
pushf
xchg
push
push
pushl
ret
lea
call
pushf
movl
call
jmp
cwtl
cmpb
jmp
lea
jmp
push
movzbw
pushf
lea
js
nop
bswap
push
bswap
mov
call
xchg
push
pushf
pushl
ret
jmp
lods
inc
popa
push
xor
mov
jmp
call
call
xchg
mov
push
mov
pushl
ret
pushf
call
push
pusha
lea
jne
nop
call
mov
call
pusha
nop
bswap
pusha
movzbl
mov
pushl
pushl
xchg
push
jmp
pusha
pushf
mov
pusha
lea
call
call
pusha
pushl
nop
pusha
movw
xchg
pop
pushf
setae
mov
push
call
call
push
jmp
xchg
pushl
push
pushl
ret
pushf
pushl
pusha
xchg
pushf
mov
mov
movb
pushl
ret
pusha
mov
push
mov
pushl
pushf
push
push
lea
pushf
xchg
pushl
pushf
mov
pushl
ret
xchg
movsbw
movzbw
not
not
mov
mov
call
movl
mov
movzbw
movzbw
pusha
mov
mov
pushl
call
push
dec
xor
dec
mov
jmp
pushl
mov
bswap
movsbl
not
mov
jmp
lea
push
xchg
movb
pushf
pushf
pushl
ret
xchg
pusha
pushf
bswap
mov
mov
mov
jmp
pushl
mov
lea
mov
pusha
pushl
push
mov
jmp
lea
jl
pushf
mov
xchg
mov
pushl
ret
jmp
not
lea
mov
movl
mov
mov
mov
pushf
lea
call
pushf
mov
call
pusha
jmp
pusha
movw
pushl
push
nop
lea
jl
mov
movzbl
not
pop
push
call
xchg
mov
pushl
ret
pushf
xchg
push
pushf
push
mov
pushl
ret
xchg
lea
mov
pushf
jmp
push
dec
call
jmp
xchg
movw
mov
push
pushf
mov
pushf
lea
jmp
mov
jmp
lea
movl
movb
xchg
movw
mov
pushl
ret
pushf
push
nop
pusha
push
mov
lea
mov
movw
mov
push
lea
mov
pushf
mov
xchg
pushl
pushl
ret
call
xchg
pushf
pushl
ret
xchg
pushf
movw
pushf
movb
pushl
ret
adc
inc
and
push
pushf
push
pushl
ret
mov
pushf
push
pushf
mov
lea
jl
pushf
pushf
lea
jmp
in
mov
add
mov
rorl
add
repz
add
lods
leave
incl
inc
and
pushl
dec
ret
jmp
call
xchg
mov
pushl
ret
jmp
lea
pushf
pusha
push
mov
xchg
pushf
pushf
pushl
push
pushl
ret
movl
mov
call
mov
movb
push
pusha
jmp
push
call
pop
pusha
jmp
mov
push
pusha
call
jmp
push
push
xchg
movl
mov
pushl
ret
push
push
push
mov
nop
jmp
je
push
lea
jmp
jmp
sbb
pop
push
cli
sub
lea
pushl
pushf
push
xchg
push
movb
pushl
ret
xchg
mov
push
pushl
ret
pushl
mov
pushl
pushl
movw
lea
pushf
jmp
xchg
pushl
pushl
movw
mov
pushl
ret
bswap
mov
jmp
jmp
lea
mov
xchg
pushl
pushl
ret
pushf
lea
jmp
rcr
mov
movsbw
pusha
pushf
mov
jmp
mov
jmp
movb
xchg
pushf
call
pushf
pushf
pushf
bswap
nop
setno
call
jmp
movl
pushf
mov
setle
not
mov
call
call
mov
push
jmp
mov
jmp
loopne
mov
mov
jmp
lea
jo
xchg
pusha
pushl
ret
mov
not
pop
not
jmp
ret
pushf
mov
jmp
pusha
pusha
pushf
xchg
movsbw
mov
push
mov
pushf
call
pushl
xchg
movl
pushf
mov
pushf
pushl
ret
call
xchg
movb
pushf
pushl
ret
nop
mov
pushf
jmp
xchg
pusha
movb
pushf
mov
pushl
ret
pusha
mov
mov
pushf
push
push
lea
call
push
mov
setle
pusha
movsbw
mov
pushf
mov
call
or
call
jmp
pushf
jmp
xchg
mov
pushl
movb
call
pusha
xchg
movb
pushl
pushl
ret
mov
call
mov
pushf
lea
jae
xchg
pusha
push
pushl
ret
jmp
lea
push
pushl
xchg
pushf
pushf
movb
pushl
ret
jmp
jmp
movsbw
setne
mov
jmp
sbb
rolb
sbb
movb
mov
movw
pushl
ret
lea
pushl
call
mov
mov
jmp
not
lea
pop
push
mov
pusha
pusha
xchg
call
movb
mov
bswap
mov
pushf
pusha
jmp
movsbw
push
not
pushf
nop
bswap
mov
movsbw
mov
mov
lea
jnp
pushf
xchg
jmp
call
xchg
movw
mov
movb
pushl
ret
lea
jmp
pushl
jmp
pushf
jmp
jmp
pushf
lea
jmp
pushf
mov
call
jmp
lea
jg
mov
push
lea
mov
call
jle
pushf
pusha
pushf
nop
pushf
mov
bswap
mov
movb
mov
pushl
jmp
pushf
pushf
mov
pusha
pushf
lea
call
pushf
xchg
pushf
pushl
ret
lea
jb
mov
pusha
mov
call
push
xchg
bswap
mov
pushf
mov
pushf
pushl
movb
lea
push
call
lea
call
push
nop
pusha
movb
pusha
mov
movzbw
movzbl
mov
pushf
push
push
mov
pushl
movl
lea
call
movzbw
mov
mov
setbe
nop
movzbw
pop
call
pushf
pushf
pushf
mov
jmp
mov
jmp
xchg
movb
pushl
ret
jl
mulb
and
xchg
call
pusha
nop
push
call
mov
call
pushf
mov
mov
pushf
movb
lea
jmp
xchg
pusha
mov
push
jmp
pushf
jmp
call
push
pusha
pusha
pushf
mov
movsbw
call
mov
pushl
push
jmp
jmp
xchg
mov
xchg
pushf
mov
pusha
mov
push
pushf
lea
call
call
loop
add
push
pusha
push
mov
call
xchg
movb
pushl
pushl
ret
pushl
lea
mov
xchg
mov
mov
pushl
ret
mov
pushf
xchg
pushf
pushf
pushf
mov
pusha
mov
call
mov
push
xchg
push
movw
pushl
ret
mov
call
xchg
movb
pushl
ret
bswap
mov
jmp
nop
push
call
mov
nop
call
jmp
pushf
nop
call
mov
pushf
pushl
pusha
movb
lea
push
call
push
mov
bswap
seto
mov
mov
movw
call
push
push
push
mov
call
movb
xchg
mov
pushl
ret
lea
mov
mov
call
mov
jmp
xchg
pushf
call
pushf
pusha
pusha
nop
movb
xchg
setbe
mov
mov
pushl
jmp
pusha
pusha
xchg
call
clc
pop
cmp
push
nop
pushf
push
push
xchg
movsbl
mov
call
xchg
pushf
pushl
ret
pushf
mov
push
lea
pushf
pushl
lea
jae
pushf
xchg
pushf
pusha
pushl
ret
and
call
pushf
jmp
call
movzbw
push
setge
nop
movsbl
cwtl
cwtl
mov
pushf
jmp
mov
mov
jmp
lea
push
xchg
movb
pushl
ret
fidivrl
lret
loopne
pusha
nop
call
call
xchg
pushl
pushf
movl
movb
pushl
ret
lea
call
lea
push
pushf
xchg
pushf
movb
push
pushf
pushl
ret
push
lret
xchg
pushl
pushl
ret
jmp
call
bswap
mov
jmp
pushl
jmp
sub
jns
xchg
imul
call
seto
mov
nop
not
lahf
pop
jmp
xchg
pushf
mov
pushf
pushl
ret
call
push
lea
jmp
pushf
push
nop
pushf
call
pushf
push
mov
jmp
mov
pushf
pushl
lea
call
lea
jmp
mov
xchg
jmp
jmp
pushf
xchg
movl
pushl
ret
mov
mov
mov
mov
lea
call
pusha
nop
push
setg
mov
call
xchg
pushl
pushl
ret
pusha
pusha
call
mov
mov
xchg
lea
push
bswap
jmp
mov
movl
lea
call
mov
call
xchg
pushf
mov
pushl
pushf
pushl
ret
movw
movw
xchg
movb
pushf
pushl
ret
nop
jmp
cs
cmp
xor
add
push
pushl
xchg
pushl
mov
xchg
movzbw
setge
mov
call
and
lock
aad
scas
sbb
bswap
nop
call
mov
movw
lea
jmp
nop
pusha
mov
pushf
xchg
jmp
jmp
pushf
xchg
pushl
mov
movb
pushl
ret
sub
push
test
jl
sub
movzbw
mov
mov
call
pusha
lea
jae
lea
jmp
lea
push
call
movb
xchg
pushf
push
pushl
ret
mov
call
pushf
bswap
mov
mov
mov
pushf
call
movzbl
nop
mov
movzbw
mov
pop
call
pusha
xchg
movb
mov
pusha
pushl
ret
pushf
pushf
call
pusha
mov
movl
bswap
mov
movl
push
jmp
jp
or
pushl
pushl
ret
pusha
mov
movb
push
push
jmp
call
xchg
pushf
movzbw
mov
mov
call
jmp
lea
pusha
nop
pusha
movsbl
call
mov
movb
push
pushf
call
jmp
movb
pushf
lea
pushf
movw
pushl
xchg
movw
pushf
push
push
pushl
ret
mov
nop
push
mov
mov
pop
lea
mov
call
movw
xchg
call
repnz
loope
mov
mov
not
pusha
movb
mov
pushl
mov
call
jmp
mov
pushf
lea
pushl
push
xchg
pushl
pushl
ret
pushf
lea
pusha
movb
jmp
push
lea
pushf
call
xchg
pushf
pushf
movb
mov
pushl
ret
nop
pushl
mov
call
pushf
jmp
call
jmp
movb
jmp
pushf
call
call
mov
mov
mov
movw
push
call
pushf
xchg
pushl
push
call
mov
nop
bswap
movzbl
lea
jbe
pop
call
jmp
loop
xchg
inc
pushf
movzbl
lea
pushf
nop
push
jmp
mov
rcll
push
mov
call
push
call
call
call
jmp
mov
pushf
lea
pushf
lea
jp
xchg
push
pusha
push
pushf
pushl
ret
xchg
pushf
movb
pushl
ret
lea
pushf
pushf
pusha
xchg
mov
pushf
movb
pushl
ret
jmp
push
jmp
pushf
pusha
xchg
pushf
pushl
ret
pushf
pushf
pushf
xchg
pushf
pushf
pushl
ret
mov
nop
pusha
movb
movw
pushf
xchg
movzbw
movsbw
pop
push
mov
call
cmp
stos
or
inc
and
pop
je
mov
call
mov
lea
jbe
pusha
lea
pushf
xchg
mov
push
mov
pushl
ret
mov
mov
call
pushf
mov
mov
pusha
pushf
pushl
lea
call
jmp
mov
call
xchg
push
pushf
pushf
mov
pushl
ret
pushf
lea
je
nop
call
xchg
mov
mov
movl
pushl
ret
xchg
call
mov
movw
bswap
movw
mov
pushf
pushl
pushl
mov
push
pushf
jmp
call
push
pusha
pusha
nop
pushf
xchg
setp
pushf
jmp
movb
call
mov
pushl
movl
pushf
lea
push
pushf
jmp
mov
mov
jmp
lea
mov
call
pushf
xchg
pushf
pushf
pushf
pushl
ret
pushf
nop
movb
xchg
cwtl
call
call
lea
push
xchg
movw
push
pushl
ret
mov
lods
in
sub
xor
xchg
pushf
movb
mov
mov
pushl
ret
xchg
push
push
mov
mov
pushl
ret
lea
push
xchg
mov
pushf
pushl
ret
pushf
call
jmp
movsbw
movzbw
push
push
nop
bswap
mov
push
pushf
xchg
call
push
xchg
call
call
jmp
mov
mov
lea
pushf
bswap
mov
push
push
call
xchg
push
push
mov
pushl
ret
pushf
push
call
pusha
push
mov
call
mov
pushf
lea
movb
jmp
nop
pusha
mov
seta
call
pop
mov
push
call
movb
pusha
mov
movzbl
pushf
mov
mov
call
mov
jmp
pushl
call
xchg
pushf
pusha
mov
mov
bswap
lea
call
pushf
lea
push
xchg
pushf
push
pushl
ret
movb
pushf
lea
push
push
xchg
push
pusha
pushf
pushl
ret
push
bswap
movb
nop
jmp
pushf
xchg
pusha
mov
pushl
ret
lea
jmp
add
add
push
icebp
mov
call
jmp
pushf
call
call
push
daa
xchg
ds
xchg
je
sub
sbb
and
ret
push
xchg
pushl
pushl
ret
call
jmp
call
pusha
movb
call
mov
pusha
call
je
repz
lods
jns
xchg
xor
insb
and
movw
pushl
pushf
pushf
pushl
ret
mov
movzbw
cwtl
cwtl
mov
push
mov
mov
pushf
pushl
pushl
lea
call
mov
call
call
lea
mov
call
mov
pop
jmp
xchg
movw
pushl
ret
mov
pushf
jmp
pushf
push
pushl
mov
pushf
pushf
call
jmp
js
pushf
pusha
pushf
nop
pushf
jmp
pushf
xchg
movsbw
not
lea
mov
movl
mov
pushl
push
call
xchg
mov
movb
movb
pushf
pushl
ret
nop
push
call
pushf
jmp
bswap
nop
push
mov
pusha
jmp
mov
mov
call
nop
pushl
pushl
jmp
push
lea
pushf
call
xchg
push
pushl
ret
pusha
xchg
pop
mov
seta
movzbw
mov
movb
pushl
pushl
call
call
mov
jmp
pop
pop
mov
pushf
mov
mov
lea
jnp
lea
pusha
call
mov
call
mov
pushf
jmp
xchg
pop
mov
pushl
mov
pusha
push
push
pushf
lea
pushf
xchg
push
mov
push
pushl
ret
push
nop
jmp
pushf
fs
in
movb
xchg
pushf
pushf
xchg
pop
bswap
jmp
mov
jmp
lea
jmp
pusha
lea
pushl
pushf
xchg
pushf
pushl
pushf
pushl
ret
mov
xchg
pushl
call
lea
jmp
xchg
pushl
pushf
pushl
ret
call
pushl
lea
jmp
pushf
pushl
mov
push
pushf
lea
pushf
movb
lea
je
xchg
push
pushl
pusha
pushl
ret
pusha
call
pusha
movb
push
jmp
xchg
movzbl
mov
pushf
mov
mov
lea
movb
mov
movl
xchg
pushf
pushl
ret
jmp
lea
movsbw
nop
lea
pushf
not
movzbw
mov
pushf
call
mov
jmp
pushl
mov
lea
call
mov
push
jmp
pushf
lea
jmp
call
movw
pushf
push
xchg
pushf
movw
mov
pushl
ret
mov
call
lea
movw
xchg
push
movb
mov
pushf
pushl
ret
lea
jmp
movw
xchg
movb
pushf
pushf
pushl
pushl
ret
mov
std
and
add
clc
push
out
nop
call
mov
mov
jmp
cmp
mull
enter
leave
xchg
or
xor
mov
xchg
mov
pushl
ret
pushf
call
mov
call
mov
call
into
mov
or
add
subb
popa
test
jge
pushf
pushl
pushl
xchg
pusha
pushf
pushf
mov
pushl
ret
lea
mov
push
mov
jmp
dec
mov
int
bswap
mov
push
call
push
xor
mov
jmp
setg
nop
push
pushf
mov
push
movb
xchg
call
xchg
movw
mov
mov
pushl
ret
pushf
nop
pushf
movw
pusha
mov
mov
bswap
mov
movb
jmp
push
mov
push
push
lea
call
sub
icebp
fcos
incl
pushl
ret
pushf
setns
mov
pusha
mov
movb
jmp
lea
pushf
lea
ja
pushf
xchg
movb
push
movb
pushl
ret
push
jmp
push
lea
pusha
xchg
push
pushf
movb
pushl
ret
lea
jmp
mov
movb
pushf
movb
push
lea
call
xchg
push
push
push
push
pushl
ret
pushf
push
nop
pusha
pushf
jmp
mov
push
call
pushf
mov
xchg
mov
movb
pushl
ret
mov
lea
pop
pusha
lea
mov
pushf
mov
push
movb
lea
lea
jbe
xchg
push
pushl
ret
vcvtdq2pd
xchg
add
add
lea
jge
push
pusha
mov
mov
push
lea
jns
lea
push
push
xchg
pushf
pushl
ret
bswap
mov
push
pushl
mov
push
lea
jmp
push
pusha
nop
pusha
jmp
push
movb
pushl
lea
mov
jmp
mov
movsbl
setae
mov
mov
jmp
call
movb
jmp
push
call
lea
call
pushf
xchg
pushf
mov
pushf
pushf
mov
movb
call
bswap
nop
movsbw
mov
pop
pushf
mov
mov
xchg
call
xchg
pusha
push
movw
pushf
pushl
ret
push
movw
mov
xchg
mov
jmp
movb
movb
mov
movw
jmp
mov
call
call
movw
mov
call
pusha
pushl
xchg
not
mov
push
mov
pushf
lea
call
lea
jnp
push
xchg
pusha
pusha
push
jmp
xchg
mov
mov
push
push
mov
pusha
mov
call
lea
call
xchg
pushl
pushf
pushl
ret
pusha
nop
jmp
setnp
mov
pushf
jmp
mov
jmp
mov
scas
lods
call
pushf
movb
nop
push
jmp
pushf
jmp
call
push
mov
pushf
lea
jmp
pusha
xchg
setp
jmp
xchg
mov
movl
pushf
push
pushl
ret
call
push
pushf
call
pushf
push
xchg
pushf
call
mov
pusha
call
push
pusha
nop
pusha
lea
jo
push
jne
push
pusha
mov
pushf
jmp
lea
pushf
call
push
mov
pushl
pushf
lea
jmp
pushf
xchg
pushf
pushl
ret
mov
pusha
pushf
movw
mov
jmp
pushl
mov
push
lea
jmp
movb
mov
mov
jmp
push
mov
pushf
jmp
pushf
xchg
pushf
pushl
movw
mov
pushl
ret
nop
movb
jmp
mov
jmp
pop
push
jmp
pushf
xchg
pushl
push
pushl
ret
jmp
lea
js
push
mov
pushl
jmp
jmp
movl
mov
pusha
mov
jmp
lea
jmp
jmp
call
push
pushf
xchg
pushf
pusha
pushl
ret
call
jmp
push
pushf
jmp
setbe
mov
push
call
xchg
jmp
pushf
nop
push
call
jmp
bswap
pop
mov
pushf
mov
call
xchg
mov
mov
pushl
ret
call
nop
pop
setb
setnp
call
not
cwtl
call
call
xchg
pushf
push
xchg
jmp
pusha
mov
pushf
mov
jmp
xchg
pushl
mov
push
mov
pushl
ret
call
call
mov
push
lea
jmp
mov
jmp
push
mov
mov
add
call
pushf
call
mov
jmp
mov
push
mov
jmp
pushf
nop
push
pushl
mov
movzbl
mov
pushf
call
lea
push
movl
pushl
mov
xchg
pushl
mov
movb
pushf
pushl
ret
mov
pusha
xchg
pushf
pushf
pushf
pushl
ret
nop
lea
mov
pushl
jmp
pushf
lea
jmp
nop
bswap
movsbw
mov
movb
xchg
jmp
movsbl
bswap
nop
lea
call
mov
call
lea
lea
jnp
pusha
pusha
pushf
xchg
mov
pushl
ret
mov
xor
mov
mov
lea
call
jmp
call
pushf
nop
push
push
push
mov
bswap
pusha
jmp
jp
cltd
les
xor
push
pushl
ret
jmp
xchg
movzbw
pop
mov
pushl
mov
call
xchg
pushf
pushf
movl
jmp
scas
aad
incl
movl
pushl
ret
push
mov
push
jmp
jmp
lea
push
xchg
pushl
pusha
pushf
push
pushl
ret
lahf
lea
mov
movb
pushf
xchg
jmp
call
pushf
pusha
nop
movb
jmp
jmp
jmp
adc
sub
add
xor
pusha
mov
jmp
lea
ja
mov
push
pushf
pusha
mov
lea
push
pushf
push
xchg
mov
movb
push
mov
pushl
ret
mov
push
lea
movw
jmp
mov
mov
push
mov
mov
xchg
call
push
mov
pushf
lea
pushf
push
jmp
pushf
mov
call
sub
jo
push
push
jmp
mov
call
push
lea
push
movb
xchg
push
mov
pushl
ret
lea
pusha
xchg
pushf
movb
movw
pushl
ret
lea
push
pushl
mov
xchg
movb
pushl
pushl
ret
call
xchg
push
movb
movb
push
pushl
ret
bswap
movzbl
pop
mov
movl
pushf
mov
call
mov
mov
call
mov
lea
jp
push
mov
jmp
xor
ja
pushf
pushl
xchg
mov
mov
pushl
ret
pusha
pop
movsbw
mov
push
mov
pusha
mov
push
lea
jmp
xchg
movw
movb
pushl
ret
mov
lea
movb
pushf
xchg
push
movb
movw
movb
pushl
ret
xchg
movw
mov
pushl
ret
mov
push
pop
not
mov
jmp
push
nop
pushl
pusha
xchg
pop
cwtl
lahf
movsbw
mov
pusha
mov
pushl
movb
pushf
lea
jmp
pushl
lea
call
movl
mov
jmp
mov
lea
jge
push
push
mov
push
jmp
call
rorb
inc
pusha
xchg
pushf
pushf
pushf
mov
lahf
pop
pop
cwtl
mov
push
mov
jmp
xchg
mov
push
pushl
ret
jmp
pushf
movb
pushf
xchg
push
movb
pushf
push
pushl
ret
pushl
lea
push
pushf
movw
xchg
mov
pushf
pushl
ret
movsbw
mov
push
nop
pushf
mov
push
xchg
movl
pusha
call
pushf
call
pushl
xchg
pushf
pushl
ret
lea
mov
pushf
push
xchg
mov
pushl
pushl
ret
mov
mov
nop
lea
jns
pusha
xchg
not
mov
call
push
xchg
pushl
pushf
pushf
call
push
push
lea
push
pushf
call
call
xchg
movsbw
call
xchg
pushf
pushf
push
pushl
ret
call
xchg
push
movb
pushl
ret
rolb
xor
pusha
pushf
nop
pushf
mov
jmp
push
xchg
pushf
pushf
pushf
mov
lea
pop
mov
lea
mov
push
movb
jmp
mov
nop
jmp
xchg
movb
pushl
ret
mov
call
lea
call
jmp
movsbl
not
mov
lea
ja
mov
push
pushl
movw
jmp
pushf
jmp
push
lea
jmp
pushf
lea
pushf
push
call
lea
js
push
call
pusha
nop
pushf
mov
call
lea
jbe
push
not
movsbw
push
mov
mov
mov
pusha
mov
call
pusha
push
nop
jmp
pushf
pusha
xchg
pusha
mov
lea
jl
mov
movzbw
mov
pusha
jmp
xchg
call
nop
call
xchg
pushl
mov
pushf
mov
mov
jmp
nop
mov
pusha
pushf
mov
call
ss
mov
mov
mov
jmp
xchg
jmp
call
call
call
jmp
mov
pushf
call
xchg
pushf
pushf
pushl
ret
pushf
mov
pushf
jmp
lea
jmp
lea
lea
jae
pusha
pushf
xchg
push
pushf
pushl
push
pushl
ret
jmp
es
aad
insb
and
call
lea
call
push
pushl
lea
jnp
xchg
push
pushf
mov
setg
setb
lea
cwtl
mov
pushf
call
push
mov
jmp
xchg
movb
mov
mov
pushl
ret
call
mov
not
mov
call
mov
lea
ja
pushf
pushf
pusha
lea
jmp
nop
movzbw
pushf
lahf
pop
mov
mov
jmp
mov
mov
push
nop
jmp
xchg
lea
movl
movsbw
mov
lea
jbe
push
mov
pusha
jmp
xchg
not
mov
push
lea
jge
pushf
mov
pushl
movb
pushf
jmp
mov
pop
mov
call
movw
call
cwtl
mov
pushl
pushf
jmp
pusha
nop
call
push
lea
pusha
jmp
mov
pushf
pusha
mov
movw
pusha
lea
pushf
movb
pushf
pushf
xchg
movb
movl
mov
movl
pushl
ret
movsbw
nop
pusha
mov
jmp
add
pushf
or
cs
add
movb
jmp
xchg
movzbw
movsbw
mov
jmp
movb
movb
xchg
pushf
movb
push
movb
pushl
ret
xchg
pushf
pushf
mov
pushl
pushl
ret
mov
jmp
xchg
pushf
movl
pushf
pushl
ret
lea
push
pushf
movb
xchg
mov
movw
movb
mov
pushl
ret
movb
lea
movb
xchg
pushf
movb
pushl
ret
lea
push
mov
nop
call
xchg
pushf
push
pushl
ret
pushf
nop
push
mov
call
pusha
pushl
pushf
xchg
pushf
pushl
ret
lea
js
push
xchg
movsbw
mov
push
call
mov
lea
push
pushl
bswap
mov
pushf
mov
pushf
lea
pushf
xchg
mov
pushf
pushf
pushf
pushl
ret
pop
bswap
movzbw
mov
call
pushf
xchg
movw
pushl
ret
mov
test
call
movsbl
mov
push
call
pushf
push
push
xchg
push
pushl
pushl
ret
push
xchg
not
lea
push
mov
pusha
mov
pusha
mov
push
mov
lea
jmp
push
pop
sti
mov
or
lea
pushf
movb
mov
mov
xchg
movw
movw
mov
movb
pushl
ret
pushf
pushf
pusha
mov
xchg
pushf
movb
pushl
pushl
ret
nop
jmp
lea
jge
push
xchg
lea
push
pushf
mov
mov
movw
call
jmp
or
icebp
lea
mov
movsbw
mov
pushf
pusha
pushl
pushf
mov
mov
mov
pushf
call
xchg
pushl
mov
call
jmp
movzbw
mov
nop
pushf
movsbl
movsbw
pushf
mov
pusha
xchg
push
pushl
push
xchg
jmp
mov
pushf
push
lea
jmp
pushf
xchg
jmp
call
pushf
pushf
call
mov
call
mov
lea
jb
pusha
mov
pusha
lea
pushf
xchg
pushl
push
mov
pushl
ret
pop
pushl
mov
pushf
pushf
movb
push
mov
call
push
pushf
mov
jmp
jmp
mov
xchg
movsbw
mov
mov
pushl
mov
mov
mov
jmp
lea
pushf
movw
xchg
mov
mov
pushl
ret
lea
call
nop
call
inc
mov
xor
scas
xchg
sti
decl
enter
call
nop
push
cwtl
mov
mov
call
pushl
lea
jmp
loopne
xlat
popf
jmp
call
pushf
movb
call
call
mov
jmp
pushf
call
mov
movl
not
mov
jmp
not
nop
pusha
pushf
jmp
call
mov
xchg
mov
pushl
ret
jmp
movsbl
jmp
push
movzbl
pop
nop
mov
movsbw
jne
pusha
mov
pushl
xchg
movb
xchg
mov
mov
mov
pushf
call
pushf
nop
mov
movb
mov
jmp
pusha
pushf
pusha
nop
push
call
pushf
mov
call
lea
push
jmp
jmp
pusha
nop
call
sahf
push
dec
xchg
add
fucomi
bound
decl
or
add
pusha
push
mov
not
pop
not
mov
pushf
movb
mov
jmp
xchg
test
inc
faddl
xor
pushf
mov
movb
pushf
jmp
not
jmp
mov
call
movb
xchg
pushl
movw
pushl
ret
mov
jmp
pushf
nop
call
mov
push
movw
xchg
pushf
push
pushf
mov
pushl
ret
movw
mov
push
push
pushf
lea
pushf
pushf
push
xchg
mov
movl
movb
mov
pushl
ret
xchg
movb
mov
mov
movl
pushl
ret
ret
mov
mov
ljmp
inc
add
sub
bswap
not
bswap
mov
call
nop
lahf
loop
call
movb
push
mov
pusha
call
xchg
jmp
lea
jmp
setbe
lahf
cwtl
lahf
nop
pushf
lea
lahf
mov
jmp
jmp
inc
cmp
out
nop
pusha
pushf
xchg
movsbl
push
sets
mov
call
jmp
jge
push
nop
mov
mov
push
pop
mov
call
pushf
lea
push
jmp
pushf
mov
lahf
not
pusha
not
mov
push
mov
jmp
pushf
pusha
call
jmp
pushl
pushl
xchg
movsbw
push
not
mov
mov
mov
jmp
pushf
jmp
pushf
xchg
lea
jle
pusha
mov
lea
jl
pusha
pushf
pusha
mov
jmp
call
jmp
pop
movsbw
mov
pusha
jmp
pushf
pushf
xchg
pushf
push
pushl
ret
jmp
ljmp
inc
add
scas
lahf
incl
les
je
inc
ret
pushf
mov
nop
pusha
xchg
lahf
lea
mov
call
mov
pushl
mov
pushl
pushf
lea
movb
pushl
push
xchg
pushf
movl
pushl
ret
call
mov
not
pushf
mov
pushf
pushf
mov
pushl
call
cmp
mov
add
mov
sti
jmp
pop
and
push
jmp
push
call
lea
jp
push
pushf
xchg
mov
pushf
pushl
ret
addb
mov
push
lea
pushf
push
push
xchg
push
push
pusha
pushf
pushl
ret
jmp
push
mov
int3
decl
ss
call
bswap
bswap
nop
setg
pop
push
mov
xchg
jmp
push
pushf
xchg
pushf
pushf
mov
pusha
pushl
ret
xchg
pushl
mov
jmp
movw
mov
lea
setl
mov
push
mov
pushf
movb
push
lea
mov
pushf
xchg
pushf
movb
pushf
pushf
pushl
ret
xchg
mov
mov
movb
movb
pushl
ret
fs
pushf
movb
xchg
mov
xchg
pusha
mov
setg
jmp
pushf
mov
and
pushf
push
pushl
pushl
ret
movw
xchg
pushf
pushf
mov
pushl
ret
nop
jmp
mov
pushf
pushf
push
pushf
lea
pushf
mov
xchg
push
pushf
pushf
pushl
ret
call
pushl
movb
xchg
call
jmp
push
xchg
call
pusha
lea
push
xchg
pushf
pushl
pushl
ret
pushf
nop
pushf
pop
jmp
pushf
mov
jmp
cmpsb
jg
sbb
jl
add
inc
and
loop
cli
test
out
jmp
movb
call
movb
xchg
movb
movw
pushl
ret
push
mov
pushf
lea
call
not
call
nop
pusha
jmp
lea
movw
call
xchg
pushf
call
xchg
pusha
mov
mov
pushl
pushl
ret
call
jmp
xchg
mov
movb
movw
pushl
ret
movb
push
call
lea
js
lea
pushf
mov
mov
pusha
pusha
mov
call
lock
pop
in
test
call
mov
call
xchg
movw
pushf
call
pop
pop
pusha
push
xchg
pusha
jmp
pop
movsbw
movw
mov
call
mov
mov
pushf
lea
pushf
xchg
pushf
pushl
pushf
pushf
pushl
ret
lea
jmp
pushf
nop
pushf
pusha
xchg
pusha
pushf
mov
mov
call
mov
pushf
pushl
lea
pusha
xchg
mov
pushf
pushl
ret
call
push
mov
call
movb
call
push
movzbw
movzbl
movsbw
nop
pusha
pusha
mov
movw
jmp
jmp
xchg
lea
call
bswap
mov
jmp
nop
pushl
xchg
seta
mov
pushf
mov
pushf
push
movb
jmp
lea
jmp
mov
call
lea
movl
movb
jmp
call
jmp
call
pusha
call
jmp
xchg
pushf
call
xor
mov
movb
pusha
pushf
mov
movb
call
push
pushf
pusha
push
nop
lea
jno
push
mov
jmp
push
pushf
lea
movl
mov
mov
xchg
movb
movb
pushl
pushl
ret
mov
pushf
mov
pushf
push
lea
movb
pushl
pushf
xchg
movb
push
pushl
ret
xchg
mov
call
mov
lea
jbe
lea
call
call
cwtl
lahf
movzbw
nop
push
movsbw
mov
push
pusha
movw
xchg
call
xor
mov
call
push
call
mov
pushf
jmp
call
xchg
push
pushf
mov
not
mov
bswap
mov
call
sbb
jecxz
pushf
mov
pushf
xchg
lea
not
mov
pushf
mov
pusha
movb
lea
jmp
pusha
mov
movw
nop
pusha
xchg
mov
lahf
lea
jle
mov
call
jmp
xchg
push
pushf
pushl
pushl
ret
lea
push
call
xchg
lea
jle
not
pushf
pop
mov
push
call
mov
lea
jmp
xchg
pushf
pushl
pusha
mov
push
sete
mov
pushl
mov
movl
push
pushf
lea
movw
call
call
push
pushf
xchg
push
push
movw
pushl
ret
call
lea
jp
push
mov
call
lea
mov
xchg
pushf
pushl
ret
call
push
nop
lea
bswap
mov
pushf
pushf
xchg
pushl
jmp
mov
movzbl
mov
jmp
call
mov
mov
loope
cmpsl
movw
call
xchg
call
pusha
mov
pusha
xchg
push
movb
push
pushl
ret
pop
pusha
pushf
xchg
jmp
jmp
lea
pusha
movb
pushf
movb
xchg
mov
push
pushl
ret
es
mov
nop
bswap
jmp
lea
push
jmp
xchg
push
pushl
pushl
pushf
pushl
ret
xchg
movzbl
mov
pusha
mov
push
lea
lea
ja
xchg
push
pushf
pushl
ret
fs
sub
add
call
pusha
nop
pushf
pushf
mov
call
mov
mov
xchg
pusha
pushf
xchg
push
bswap
mov
mov
mov
mov
pushf
lea
movb
push
push
xchg
pushf
pushl
ret
lea
call
xchg
pushf
pushl
ret
movsb
lds
movsl
xchg
mov
movzbw
push
mov
pushf
movl
mov
pushl
pushf
pushf
lea
pushf
lea
jbe
pusha
xchg
pushf
pushl
ret
movb
xchg
mov
mov
pushl
ret
mov
mov
pushl
push
lea
movl
pushf
lea
jns
pushf
xchg
mov
pusha
mov
push
pushl
ret
lea
pushl
xchg
push
push
mov
pushl
ret
pushf
pusha
xchg
not
bswap
mov
jmp
pusha
lea
push
movl
xchg
mov
pusha
pushl
ret
nop
call
cwtl
nop
pusha
call
pushf
pusha
nop
pushf
jmp
mov
jmp
lea
mov
jmp
jmp
pusha
pushl
mov
pusha
nop
push
call
not
mov
mov
jmp
mov
adc
nop
bswap
lea
jmp
jmp
movw
call
mov
jmp
mov
not
movzbl
push
setb
mov
pushf
mov
pushl
lea
jmp
mov
bswap
movsbl
bswap
mov
push
mov
call
pusha
pushf
nop
call
jmp
mov
jmp
pusha
lea
pushl
push
jmp
call
pushf
pusha
pushl
xchg
pushf
pushl
ret
push
pushf
nop
pushl
pusha
jmp
movw
xchg
movb
mov
pushl
ret
xchg
pop
pushf
lea
ja
mov
mov
push
mov
pusha
call
movw
pushf
pushl
lea
pushl
xchg
pushf
pushl
ret
call
sahf
fwait
loopne
call
mov
in
mov
pushf
xchg
jmp
mov
mov
pusha
call
pushl
call
pushf
pushf
mov
call
pushf
pushl
call
mov
pushf
mov
call
push
pusha
mov
pushl
mov
mov
jmp
mov
movsb
and
add
jp
pushl
xchg
pushf
pushf
pushl
ret
pusha
jmp
mov
call
mov
jmp
pushf
jmp
xchg
mov
pushl
pushl
ret
mov
push
lea
js
lea
call
pusha
pusha
nop
jmp
pusha
bswap
mov
pusha
pushf
call
bound
cmp
inc
and
aaa
test
and
pop
mov
pushl
jmp
call
stos
movsb
inc
push
lea
movsbw
nop
push
lea
call
call
pusha
pushf
pusha
jmp
mov
mov
lahf
bswap
mov
jmp
pushl
jmp
jmp
jmp
call
xchg
call
lock
out
pusha
pushf
nop
jmp
push
lea
pushf
xchg
pushl
mov
movb
pushl
ret
push
pushl
mov
xchg
pushf
push
mov
pushl
ret
xchg
pushl
pushf
pushf
pushl
ret
push
call
nop
lea
jnp
pushf
pushl
push
xchg
pop
movzbw
pushl
mov
call
xchg
pushl
push
pushl
pushl
ret
push
movsbw
pushl
nop
pusha
not
mov
jmp
pushf
jmp
push
lea
pushl
call
mov
xchg
pusha
push
push
pushl
ret
jmp
pushl
lea
jge
push
sets
mov
jae
push
mov
pusha
call
jmp
pushf
mov
pushf
pushl
setle
mov
call
pushf
pushf
mov
call
pushf
jmp
lea
pushf
xchg
push
pushl
ret
addb
call
call
call
mov
call
enter
movsbw
nop
movsbw
lahf
setg
pop
pushf
pushl
xchg
pushf
pusha
xchg
movsbw
push
mov
movw
mov
mov
lea
jmp
movb
jmp
xchg
pusha
mov
push
mov
push
lea
call
movb
lea
push
xchg
movw
movw
pushf
pushf
pushl
ret
lea
call
lea
jl
pushf
lea
pusha
push
xchg
push
mov
pushf
pushl
pushl
ret
or
decl
popf
pushf
xchg
movb
pushl
ret
pusha
call
mov
mov
mov
call
mov
pushl
xchg
pushf
mov
jmp
mov
jmp
jmp
push
jmp
lea
pushl
xchg
pushl
pushl
ret
sbb
mov
call
das
out
incl
pushl
ret
mov
nop
not
pop
jmp
push
jmp
call
mov
xchg
mov
mov
movb
movw
pushl
ret
xchg
jmp
jmp
call
lea
lea
jl
push
xchg
pushf
movw
push
pushl
ret
lea
mov
call
lea
call
xchg
pusha
pushl
pushl
ret
pushl
xchg
jmp
xchg
pushf
pushf
pushf
mov
movl
pushf
call
pushl
call
pusha
mov
pushf
jmp
call
pushf
nop
movzbw
mov
pusha
xchg
jmp
call
nop
pusha
xchg
push
mov
lea
ja
pusha
pushf
movw
mov
jmp
mov
lea
pushf
mov
xchg
pushf
pushl
ret
call
call
movzbw
call
xchg
and
xchg
mov
pushf
push
pushf
pushl
ret
pushf
xchg
push
pushl
ret
mov
call
mov
call
call
call
mov
pusha
mov
call
mov
roll
dec
and
pushl
mov
movw
pusha
movb
mov
pushf
lea
mov
jmp
movzbw
mov
pusha
pushl
pushl
mov
push
pushf
pushf
lea
call
jmp
jmp
pusha
mov
movw
jmp
bswap
bswap
pushf
push
nop
movsbw
seta
jmp
pushf
jmp
pushf
lea
pushl
jmp
pushl
xchg
call
push
insl
push
add
call
jmp
xchg
pushf
pushl
ret
xchg
push
pusha
push
pushl
ret
mov
jmp
mov
call
jmp
pushf
mov
jmp
lea
movw
push
movb
xchg
movb
pushf
pushf
pushl
ret
mov
jmp
call
xchg
push
pushl
ret
xchg
mov
movsbw
pop
pusha
mov
push
jmp
jmp
mov
movsbl
pushf
pop
jmp
pushl
jmp
xchg
pusha
jmp
pushf
nop
pusha
jmp
pushl
mov
mov
call
mov
movsbw
mov
call
jmp
xchg
push
pushf
push
pushl
ret
xchg
push
movb
pushl
ret
mov
not
pushl
movzbw
mov
jmp
call
lea
pushf
movl
xchg
mov
pushl
ret
pushf
mov
movsbw
pusha
movsbw
mov
jmp
lea
nop
sets
pusha
not
setb
mov
jmp
mov
call
movb
lea
pushf
xchg
pushl
pushl
push
movb
pushl
ret
mov
pusha
mov
nop
movzbw
bswap
mov
call
xchg
pushf
movb
push
pushl
ret
pushf
pushf
pushf
xchg
pushl
pushf
pusha
pushf
pushl
ret
jmp
xchg
xor
inc
and
jmp
lea
pusha
jmp
fs
cmp
mov
call
call
pushl
mov
mov
xchg
pusha
mov
pushf
movw
pushl
ret
adc
ret
pop
push
jmp
adc
pusha
xchg
push
mov
call
push
lea
jge
pusha
mov
call
pusha
xchg
push
push
movw
push
pushl
ret
lea
jmp
lea
push
xchg
pushf
movw
mov
push
pushl
ret
mov
pusha
lea
jge
push
push
lea
pusha
mov
movb
pushl
xchg
movb
pushl
ret
pushf
pusha
pushf
jmp
pushf
pusha
setno
seto
nop
lea
ja
pop
pusha
xchg
pushl
push
call
call
pushf
xchg
movw
movl
pushf
pusha
pushl
ret
sbb
addr16
call
call
xchg
movb
movb
movw
movl
pushl
ret
pushf
pushf
mov
call
push
mov
xchg
pushf
pushl
ret
mov
pusha
call
pushf
jmp
mov
xchg
movb
mov
pushf
pushf
pushl
ret
mov
jmp
not
nop
movsbw
movzbw
pop
jmp
xchg
pushf
mov
mov
push
pushl
ret
push
xchg
pushf
pushf
mov
pushl
ret
lea
jmp
call
mov
movb
pushf
mov
pushl
call
call
xchg
bswap
lea
pop
mov
call
mov
mov
lea
call
lea
call
xchg
not
pusha
mov
jmp
pushl
call
js
roll
push
and
movw
push
pushl
mov
pushl
ret
pusha
call
mov
jmp
pusha
pusha
mov
lea
mov
pushf
call
enter
jmp
push
pushf
jmp
jmp
call
lea
pushl
call
jmp
push
call
pushl
xchg
pushf
pop
push
call
nop
movb
xchg
movzbw
push
movsbw
mov
push
mov
pusha
pushl
movb
lea
pushl
jmp
pushl
mov
movsbw
mov
lea
jl
pusha
push
mov
jmp
mov
call
scas
jb
lds
mov
mov
lea
jb
pusha
movb
mov
xchg
jmp
mov
call
xchg
push
pushl
ret
push
pushf
nop
push
call
pop
bswap
call
movb
lea
pushl
xchg
pushf
push
pushl
ret
call
out
mov
add
sbb
pushf
pushl
ret
call
pusha
pushf
jmp
push
xchg
push
push
pushf
pushl
ret
mov
pop
cwtl
cwtl
mov
call
mov
pushf
lea
pushl
jmp
jmp
call
pusha
xchg
movb
call
call
nop
jmp
lea
pushf
pushf
jmp
push
lea
jmp
mov
not
mov
push
movb
call
pusha
xchg
bswap
mov
pushf
pushf
mov
push
jmp
or
fsubrs
js
call
pop
movzbw
mov
pusha
mov
push
call
pushf
xchg
pusha
movb
pushf
pushf
pushl
ret
jmp
hlt
dec
mov
not
push
jmp
mov
setnp
mov
pushf
jmp
cwtl
push
lcall
decl
dec
lea
jp
xchg
pusha
pushl
ret
jmp
call
int3
ffree
jl
lock
std
std
mov
xchg
insl
inc
mov
ret
jns
dec
test
iret
nopl
and
pop
cmp
xor
inc
setl
jnp
in
mov
cltd
aam
pop
leave
add
in
and
pop
test
rcrl
xor
fs
movsb
inc
mov
xchg
push
out
push
and
xchg
fsubs
jg
enter
filds
lock
std
std
mov
xchg
data16
pushf
ret
jb
push
mov
and
mov
pop
jno
xor
rcr
mov
in
cwtl
dec
dec
call
pop
lret
add
jmp
xchg
out
test
jb
xchg
inc
mov
lods
adc
inc
stos
and
xchg
push
scas
and
cmpsl
cld
add
insl
ror
or
fadds
lock
std
std
mov
insb
dec
mov
ret
jae
rcrb
and
or
ss
enter
jge
jns
adc
dec
aam
pop
leave
add
loope
sub
pop
test
push
fstl
push
out
mov
xchg
ret
in
xchg
push
push
test
xor
xchg
sub
sarb
push
enter
fmull
lock
std
std
notl
ret
jp
push
pop
ret
scas
popf
sub
pushf
mov
pop
mov
xor
subb
jge
stc
in
or
and
mov
push
pop
lret
add
call
pushf
jbe
test
cmp
addr16
or
inc
mov
jecxz
xchg
push
cmpsb
movsl
xor
xor
jns
mov
mov
enter
rorl
lock
std
std
test
imul
adc
testb
enter
gs
pushf
mov
pop
pushl
xor
dec
fistpll
cmpl
les
out
daa
adc
test
push
mov
push
add
add
aad
in
xchg
push
push
mov
mov
xchg
adc
mov
xlat
dec
push
lock
std
std
mov
xchg
outsl
ja
gs
jp
lods
faddp
lcall
mov
pop
pop
ss
fisubrl
std
jge
sbb
xchg
call
adc
push
pop
movb
shlb
adc
test
push
rolb
out
inc
xchg
jecxz
xchg
push
cmpsb
movsb
xor
mov
fistps
adc
ror
fcompl
xlat
inc
push
lock
std
std
lea
out
in
mov
inc
leave
mov
and
mov
pop
imul
lret
inc
rcrl
sub
jge
stc
in
dec
dec
dec
in
xchg
aam
pop
ret
add
jmp
das
adc
test
mov
ljmp
sahf
arpl
xchg
push
ss
movsb
push
fs
icebp
sub
mov
jmp
adc
dec
push
lock
std
std
mov
xchg
insb
adc
shlb
iret
ret
std
and
pushf
mov
pop
divb
xor
pop
scas
fmull
jae
in
enter
and
aam
push
int
mov
dec
xchg
cmpsb
xchg
test
push
mov
in
jbe
sub
push
mov
mov
xchg
add
mov
cmp
pusha
enter
faddl
lock
dec
fimuls
movsl
call
fdivs
push
fwait
cli
push
aam
or
and
mov
dec
jb
add
cmpsb
sbb
in
outsb
add
push
adc
jo
cmp
jne
xchg
mov
jecxz
add
aad
jno
xchg
add
xor
push
jecxz
cmpsb
xchg
xchg
sub
fldt
fldcw
mov
pop
mov
mov
cmpsl
xchg
push
in
or
addr16
iret
dec
dec
aad
add
add
test
out
clc
pop
mov
dec
pop
enter
cmpsb
std
adc
and
pusha
mov
fcomip
cmp
fisubs
out
bound
sar
sahf
ret
mov
cmp
jb
sti
repnz
jecxz
neg
fiadds
inc
cmp
mov
push
add
into
arpl
jnp
rclb
sbb
dec
sbb
das
and
pop
arpl
ljmp
jb
jmp
xorl
push
xor
mov
xchg
mov
mov
nop
jns
and
mov
add
mov
mov
xchg
es
sub
jno
cmc
insb
or
xchg
mov
js
iret
xor
in
add
pushf
cmp
pushf
ret
stos
int
and
push
fcompl
xchg
cltd
clc
out
or
mov
bswap
aaa
adc
sti
inc
stos
pop
into
in
sub
imul
inc
jo
mov
mov
loop
repnz
mov
aad
shr
icebp
xor
ret
mov
shl
inc
outsb
adcb
xchg
rolb
or
xor
repnz
arpl
idivl
pop
popl
nop
testl
fdivrp
mov
inc
push
repz
jmp
xchg
adc
inc
outsb
stos
or
jo
push
jnp
mov
cmpsl
sub
in
jmp
ficoms
or
lods
lock
dec
dec
inc
inc
sub
aad
xchg
aas
add
outsb
sbbl
inc
push
es
pop
cvtpi2ps
jb
push
into
lods
sbb
lea
mov
mov
insb
or
test
inc
xchg
mov
jecxz
add
out
add
in
ja
psraw
lret
stc
pop
jbe
movsl
xchg
pushf
clc
push
fadd
call
lret
cmpsl
sbb
cld
dec
test
ds
leave
cmp
inc
aad
mov
inc
mov
addb
lock
jns
ja
xor
movsb
mov
push
aam
out
outsb
adc
push
cmp
sbb
sbb
andb
or
and
cli
fmuls
dec
fists
and
lea
outsl
mov
loope
mov
ret
into
adc
test
notb
das
dec
int
sub
scas
das
jmp
ficoms
cwtl
ljmp
rolb
push
and
cmp
xchg
loopne
xor
inc
fdivs
push
lret
aad
pushf
cltd
or
jb
or
mov
and
in
arpl
aaa
xchg
push
inc
or
add
jle
xchg
mov
sub
jg
add
in
fcomi
in
jl
jl
sub
pop
lcall
fldt
filds
mov
enter
fwait
adc
inc
mov
lods
adc
jmp
dec
dec
aad
rcl
inc
mov
mov
in
lret
mov
jmp
xchg
mov
pusha
mov
dec
adc
cmp
fadd
out
imul
fcoms
notb
pop
mov
cmp
icebp
sbb
out
fcoms
iret
mov
ret
mov
sti
xchg
pop
out
das
or
int
adc
repz
xor
adc
sub
pop
and
push
arpl
rcr
ja
out
lock
scas
dec
mov
loope
cmp
sbb
push
les
mov
popf
leave
movntps
jb
add
mov
arpl
gs
fstps
leave
push
jge
popf
insb
add
movsb
jbe
xchg
mov
cwtl
sbb
and
xchg
jmp
mov
fdivl
imul
sbb
and
or
mov
lahf
sbb
adc
jg
dec
cmpsl
and
in
cmp
push
lds
aad
sub
imul
mov
out
shl
das
mov
out
test
xor
xchg
out
pusha
mov
pop
and
push
out
outsb
cmpb
inc
push
aam
nop
test
loopne
push
xor
loop
jnp
dec
rol
icebp
cwtl
push
mov
nop
mov
or
mov
in
out
daa
or
rcrl
add
lock
in
adc
dec
popf
sub
cvtpi2ps
pop
arpl
ficoms
push
lods
into
inc
rclb
add
in
cmp
xchg
fdivs
das
out
and
rolb
das
lcall
inc
leave
jb
add
cmpsb
sbb
in
adc
pop
push
out
push
hlt
aaa
jge
pushf
insb
add
mov
jecxz
add
mov
addl
mov
sbb
xlat
ret
sub
fsts
mov
fldt
aad
mov
lret
mov
sbb
push
adc
cmc
inc
cmpsb
mov
gs
les
aad
adc
inc
add
addb
stc
loop
imull
mov
xchg
push
sub
or
xor
pusha
mov
iret
and
cmp
flds
dec
arpl
fcmove
lcall
xor
ds
inc
xor
repnz
dec
fists
and
mov
mov
xchg
ja
gs
push
lds
add
xchg
or
mov
push
iret
sub
push
arpl
ficoms
mov
lods
lock
pusha
jle
add
xlat
movsl
jmp
xor
jb
ss
ret
aad
xchg
or
and
jbe
or
or
movsb
sbb
out
out
xor
xor
sbb
jae
loopne
pop
stos
mov
shl
xchg
add
jno
inc
add
out
jae
shrl
leave
pop
ja
stos
cltd
pushf
sub
and
jl
mov
enter
sub
sbb
ja
push
je
inc
cmpsb
pop
in
sbb
insb
xchg
rorl
pop
jle
popa
inc
lock
xchg
fimuls
stc
out
cmc
les
jecxz
xor
shll
pusha
mov
outsl
loopne
cmp
aad
out
data16
ficompl
jmp
push
cmp
xchg
pop
mov
cmp
repnz
nop
aaa
inc
sbb
sahf
rol
jae
in
and
ret
xchg
adc
push
out
push
adc
popf
jnp,pt
sub
das
fs
lahf
and
ficoms
test
lods
lock
imulb
cwtl
arpl
jnp
inc
loop
aaa
add
into
and
pushf
adc
cs
shll
mov
add
movsb
sbb
ljmp
testl
cmp
stos
jle
xchg
mov
jecxz
add
call
mov
iret
or
dec
inc
jp
sub
sahf
xchg
mov
fldt
fisubrs
mov
dec
pop
daa
sbb
cli
dec
stos
lcall
roll
pop
in
mov
inc
inc
or
loope
aad
jecxz
decb
js
loop
cmpsl
fdiv
pop
xorl
mov
push
fst
out
outsl
sbbb
and
test
mov
sbb
lahf
int
jb
sti
inc
dec
mov
neg
mov
pop
dec
push
push
mov
arpl
xor
sub
out
and
pop
ret
into
jae
dec
push
test
sahf
aaa
jnp
in
adc
and
pop
aas
das
jmp
ficoms
clc
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
fcmovne
fnstenv
lds
test
push
mov
negb
add
lahf
mov
push
lea
js
out
adc
push
outsb
mov
jne
test
shll
sbb
iret
gs
jmp
loope
pop
mov
jno
jg
imul
jb
sub
daa
sbb
lcall
into
sub
mov
xchg
fdivl
jl
xchg
mov
jnp
rclb
mov
notb
adc
jmp
nop
sub
test
js
jno
ljmp
jl
pop
aas
nop
enter
mov
dec
pushf
es
rcrl
das
lahf
icebp
clc
mov
imul
icebp
add
lock
adc
pop
jnp
clc
cmpsl
dec
cltd
aam
mov
mov
adc
mov
xchg
int
mov
adc
dec
shr
fidivrl
inc
mov
stos
dec
mov
lods
pusha
xor
lahf
gs
jmp
jmp
in
lods
or
je
into
mov
outsl
ljmp
jb
fs
js
arpl
addr16
mov
in
int
mov
dec
shr
fdivrs
fidivrl
fsubrl
xchg
stos
insb
cwtl
gs
pop
outsl
fidivs
cwtl
movsb
xchg
addb
pop
cmp
lock
xor
push
popf
lcall
in
or
into
add
lods
iret
mov
xor
aaa
cmp
jmp
pop
int
jge
imul
adc
into
push
call
dec
push
push
xor
lret
mov
adc
or
mov
loope
lret
inc
out
addr16
shr
dec
mov
mov
pop
mov
lahf
xor
dec
imul
lods
clc
pop
lock
push
fucomi
mov
add
outsl
stc
aam
mov
out
lea
mov
xor
xchg
pop
sbb
testb
mov
adcb
fdivl
xchg
or
insl
ret
jne
inc
add
and
hlt
push
inc
int
pop
arpl
insb
aad
xlat
leavew
jae
push
lock
in
and
scas
xor
jo
dec
shr
shrl
lds
sarl
fildll
and
sub
and
xor
out
fsubs
sbb
incl
dec
shll
shl
and
iret
out
dec
mov
pop
xchg
mov
xor
and
or
loope
adc
and
mov
and
and
add
daa
cmp
sub
inc
aas
mov
jp
mov
scas
repnz
test
andl
xor
aaa
add
stos
gs
mov
jmp
dec
shr
xchg
subb
pop
daa
add
cmpl
imul
pop
cmp
xchg
imul
test
pop
and
push
jbe
int
fsubrl
std
lret
xchg
enter
subl
pop
xchg
repnz
loopne
imul
mov
cmp
andb
push
mov
adc
mov
test
test
in
mov
xor
mov
movsb
les
and
pop
lods
dec
int3
jo
mov
pop
subl
ja
xchg
and
sahf
mov
dec
mov
pop
dec
shr
sub
xor
inc
jle
jo
test
pop
jmp
adc
popa
imul
test
rcll
sti
sbb
dec
shr
inc
mov
mov
notl
xchg
addr16
pop
mov
ja
mov
adc
int3
mov
inc
mov
inc
mov
fnstsw
test
out
pop
push
push
cmp
and
incb
xlat
enter
in
push
enter
shrl
int3
loope
sbb
int
lahf
shll
xchg
test
xchg
jb
cmp
mov
stos
xor
mov
add
mov
cmp
adc
in
cmp
out
mov
mov
xchg
stos
lea
cs
adc
push
pop
jle
cwtl
xchg
rcll
mov
cmp
lods
pop
mov
xchg
in
shll
iret
nop
push
mov
dec
shr
adc
pop
call
adc
jecxz
arpl
call
inc
mov
cmpsl
adc
add
cmp
imul
cs
subl
push
pusha
aam
push
sbb
lcall
je
lret
mov
int
dec
das
stc
mov
inc
sbb
dec
mov
and
add
xchg
jno
in
inc
loop
cld
pop
jecxz
out
inc
jae
fs
mov
cmp
gs
insb
imul
or
shr
add
shld
xadd
mov
cmp
pusha
bts
adc
add
btc
rcl
add
add
btr
mov
cmp
pusha
shr
movw
cmp
jmp
lea
jae
test
cmp
pushf
cmp
pusha
jmp
pushf
adc
pushf
movb
pushf
pushl
lea
jae
jmp
jle
rorl
out
stc
add
add
out
or
lahf
or
into
jle
mov
lds
data16
add
lret
je
mov
fdivrp
test
outsl
inc
cmp
mov
or
xor
mov
lea
jb
bt
jmp
lea
jae
test
stc
pushf
cmp
movb
lea
ja
jmp
out
fmuls
out
lock
xchg
idivb
loopne
push
mov
adc
repz
sbb
push
jmp
out
or
push
mov
jne
adc
sti
sbbb
mov
pop
in
loop
arpl
call
or
data16
add
and
push
jecxz
popf
cltd
clc
gs
vcomisd
and
fldcw
movsb
xchg
cld
pushf
fwait
leave
mov
subb
xchg
pop
lcall
shr
adc
inc
loop
call
push
lock
jle
pusha
scas
jmp
jne
out
pusha
pushf
push
movl
jmp
lea
jg
rol
stc
not
pusha
mov
push
mov
pushl
pushf
test
add
mov
test
call
not
jmp
cli
mov
and
dec
mov
mov
mov
dec
bound
test
cmp
mov
add
inc
mov
xchg
mov
and
lret
sub
lods
stos
nop
jno
cld
jnp
shlb
xchg
push
pushf
mov
lret
push
aad
mov
inc
jae
add
ja
xchg
fsubrl
xchg
cmp
add
xor
cmp
inc
pop
fnstcw
pop
mov
repnz
lea
movsbw
pusha
movzwl
mov
not
lea
call
stc
clc
mov
cmp
pushf
call
scas
or
inc
shr
inc
fnsave
xor
sub
sub
les
lahf
mov
cld
outsl
xchg
cmpsb
push
mov
add
cmpsb
mov
jns
testb
jge
pop
xor
outsl
frstor
cld
push
mov
and
testl
leave
add
mov
mov
inc
lret
mov
cmp
or
inc
pop
mov
ret
mov
push
add
add
or
jp
cmp
mov
daa
nop
sbb
out
frstor
pop
mov
test
fs
xchg
mov
je
sub
lret
mov
inc
lods
dec
scas
mov
sbb
std
andb
push
add
jbe
mov
test
xchg
mov
loopne
xor
ds
sub
lds
lods
mov
in
cmp
mov
call
mov
out
inc
and
aad
and
and
cmp
out
enter
add
stos
or
mov
and
addr16
clc
rcrl
pop
pusha
nop
jb
loop
mov
sub
cmp
add
sbb
mov
sbb
outsb
jae
mov
pop
pop
call
mov
scas
push
xlat
or
mov
cmp
mov
push
mov
pushf
xchg
mov
add
nop
lock
jbe
jmp
test
stos
adc
sbb
xchg
mov
lret
je
or
push
inc
shr
fldt
aad
aad
into
sub
ss
das
sar
push
aam
pop
jb
cmp
jle
sub
inc
ljmp
jecxz
icebp
sbb
pop
sahf
xchg
insb
push
and
push
pop
in
or
mov
mov
clc
mov
lods
lea
sbb
lods
cs
je
jb
cmp
ret
enter
jb
in
add
sub
push
stc
push
lea
lea
jle
dec
inc
and
adc
adc
lock
sbb
jmp
shr
in
jmp
loopne
out
pop
std
sbb
sbb
or
out
movl
sub
std
add
pop
and
je
pop
rorl
aas
sbb
mov
fsubl
aad
aad
or
movsl
orb
mov
add
pushf
sbb
call
mov
pusha
movsl
and
xor
inc
dec
xor
lcall
int3
dec
sbb
xchg
insl
push
out
dec
std
inc
in
hlt
pop
testb
test
mov
xchg
jnp
shr
mov
fldt
shlb
das
shlb
loope
loop
xchg
out
popf
mov
pusha
fisubl
je
test
xchg
imul
pop
adc
sarb
xchg
cwtl
fs
scas
test
leave
stos
cmc
jg
inc
jnp
aas
mov
push
mov
sbb
adc
cmp
and
xor
jne
dec
push
loop
sub
pop
add
sub
shr
push
jnp
popa
sahf
lods
push
add
imul
jnp
sahf
mov
lahf
loope
out
or
or
push
std
adc
fimuls
add
lret
fidivrl
xor
out
push
jne
sahf
sbb
mov
cmpsl
pop
stos
sbb
xchg
aad
in
test
jmp
adc
inc
shr
shlb
inc
cmpsl
pop
mov
dec
xor
push
inc
jbe
push
mov
push
bound
xchg
pop
es
xchg
adc
shrb
and
int
xchg
inc
jne
nop
jmp
push
push
mov
cmpsl
das
inc
mov
add
inc
shr
jp
imul
sarl
jne
mov
andl
imul
lea
gs
out
inc
cld
pop
cli
int
fcoml
ror
mov
inc
shr
or
insb
xchg
js
jns
sbb
add
mov
mov
sub
dec
inc
int3
test
inc
loope
push
movsl
inc
int
push
and
sbb
push
fsubrl
into
stos
dec
push
jle
or
add
scas
sbb
sbb
cmp
inc
add
adc
vmovsldup
out
into
inc
pop
aas
or
jg
iret
mov
mov
cmpsb
fdivr
dec
incb
dec
jmp
fcoml
imul
push
loop
inc
shr
scas
shrb
int
cmp
xor
xor
push
cmp
aas
jg
iret
shrb
adc
mov
repz
sub
mov
fsubrl
push
and
outsb
push
pop
xor
repnz
dec
das
xchg
cwtl
sbb
leave
stos
adc
add
sbb
sbb
rolb
movsl
pop
mov
icebp
xchg
fiaddl
pop
cmp
mov
pop
aas
pop
mov
xchg
loope
push
add
gs
inc
shr
sub
dec
mov
or
inc
jae
or
out
cmp
ja
mov
mov
test
sbb
sbb
xchg
jmp
aas
stos
shlb
push
sahf
out
add
push
inc
cmp
add
mov
int
jl
push
movsb
cwtl
or
cmp
adc
fstpl
push
pop
push
cs
ljmp
test
pusha
inc
outsl
data16
mov
cmp
mov
out
add
test
stos
add
sbb
arpl
cli
lods
pushl
push
movsl
jmp
test
mov
jb
jo
push
in
sub
in
or
push
mov
sahf
mov
sub
test
loopne
movl
rcr
mov
sbb
cmp
jnp
jno
dec
es
add
adc
notl
inc
pop
dec
adc
xchg
add
cmp
pop
jbe,pt
dec
daa
dec
xlat
lods
xchg
push
push
imul
int
ss
pop
cli
push
sti
pop
jecxz
sti
dec
fldcw
sarb
fs
call
pusha
sub
pusha
pushf
lea
jae
jne
jmp
not
mov
clc
bt
call
je
jbe
shr
pop
mov
imul
int
mov
push
arpl
push
mov
pop
and
sarl
fnstsw
cmp
and
stos
ss
or
bound
cmpsl
sbb
test
inc
push
mov
mov
mov
jg
or
dec
push
sub
mov
mov
cs
mov
mov
mov
dec
cs
pop
mov
insb
arpl
shr
or
stc
cwtl
jbe
cld
pop
incl
push
out
push
ljmp
mov
fistpll
shr
fnstsw
fdivs
lret
xor
and
and
sub
sub
push
cmovb
idivb
test
mov
cmp
icebp
enter
sub
and
xchg
ret
adc
adc
cmpsb
cltd
xchg
sub
jmp
mov
sbb
pop
cmp
loope
loope
sahf
jb
jo
cmp
int
mov
or
xchg
and
aas
outsl
xor
je
dec
shll
jle
jne
outsb
fisubs
ds
xchg
fs
movsl
push
imul
cmc
clc
cmc
add
jmp
pusha
push
pushf
lea
jne
call
mov
mov
push
mov
ja
jae
insl
cmp
mov
pop
movsl
cmp
cmp
push
popa
test
aam
push
outsb
sub
pushf
sti
mov
lcall
je
xor
fisubs
stos
out
cmpsb
out
sbb
out
dec
mov
cld
negb
jmp
cmp
negb
popa
xor
xchg
pushf
lods
cwtl
sbb
push
xor
jnp
and
ljmp
aam
outsl
hlt
xchg
bound
pop
ljmp
push
jl
mov
jns
ljmp
out
sbb
pusha
test
arpl
gs
in
ret
inc
mov
ljmp
sbb
rclb
jl
mov
nop
imul
dec
and
hlt
repz
loope
jmp
gs
shr
xchg
xor
or
fstps
lret
shl
loope
clc
push
in
stc
inc
in
fwait
clc
stos
ds
mov
xchg
call
push
pushf
lea
ja
pusha
inc
pushf
not
call
icebp
push
fistpll
sbb
outsl
xchg
jbe
jg
outsb
mov
push
imul
cmpsb
ret
lret
mov
mov
rolb
push
test
adcl
dec
and
add
mov
inc
dec
dec
sub
add
push
push
insb
std
in
mov
loop
add
insb
out
jne
out
lock
loop
cld
pop
stc
push
cli
mov
pop
sti
fldcw
jle
push
jl
out
xchg
hlt
or
decl
sti
pop
jmp
call
stos
dec
lods
jecxz
in
insl
mov
push
stos
sbb
mov
dec
lret
imul
push
mov
pop
pop
jmp
mov
or
mov
pop
int3
push
gs
jno
inc
cmp
sbb
movsb
xor
sti
sbb
xchg
mov
lea
sahf
cs
sub
push
dec
mov
mov
cli
mov
cmp
dec
mov
push
mov
popa
jb
adc
fs
ja
mov
adc
mov
cmp
hlt
xchg
push
stos
cmp
or
push
jnp
inc
xor
jns
dec
dec
push
sub
cmp
jnp
ja
push
jp
jb
ljmp
lret
popf
cmpb
and
dec
arpl
push
stos
mov
daa
mov
aas
mov
test
adc
cmpsb
pop
pop
lea
je
cmc
cmc
cmp
call
mov
pushf
pushl
ret
pushf
push
pushl
popl
movb
pushl
pushl
ret
not
lea
bswap
push
cwtl
pushf
lea
call
jmp
xchg
fstpl
cmp
fsubl
cmp
xor
pop
mov
lds
or
mov
and
adc
pop
test
aam
add
jg
aad
mov
sub
in
mov
cmp
dec
or
icebp
std
popf
cmpl
sbb
and
pop
aad
cltd
inc
out
sbb
popa
call
jns
mov
jbe
mov
sbb
jle
jge
jbe
popa
fdiv
addb
ljmp
xor
jle
out
mov
aaa
shlb
aam
aad
fistpll
ret
in
dec
and
cmp
and
dec
mov
lods
sbb
sub
pop
mov
test
inc
rcr
sahf
jg
mov
shll
ds
lret
adc
hlt
shlb
sub
inc
xor
ret
sbb
and
sub
xchg
rorb
out
or
pushf
rorl
test
pusha
or
pushf
jmp
jmp
movb
movl
pusha
pushl
popl
pusha
mov
pushf
pushl
ret
cmc
ror
jmp
cmc
stc
push
sub
stc
repnz
pushl
jmp
push
inc
push
push
dec
dec
dec
cs
dec
dec
add
rolb
cmp
lahf
bswap
bswap
sets
lea
pushf
mov
call
jne
jns
out
out
or
or
loope
ljmp
push
outsl
shll
pusha
jbe
sbb
inc
jae
ret
or
mov
ds
cmp
outsb
xchg
pop
shll
std
and
je
loop
cmpsl
int
push
pop
mov
xchg
sub
clc
cwtl
imul
xchg
out
sahf
idivl
xchg
cmp
stos
in
jne
adc
lahf
std
dec
push
imul
popa
xchg
cmp
fdiv
xchg
sbb
mov
pop
movsl
push
mov
mov
fs
jae
notb
js
out
lock
add
or
hlt
pop
in
or
hlt
ret
pop
psubq
push
jno
ss
xchg
mov
xchg
rolb
push
fucomip
or
repz
cmc
push
mov
rol
mov
lods
mov
andl
adc
xor
mov
mov
aad
add
dec
lea
loope
std
bound
loop
pusha
ret
jo
retw
jb
jno
xchg
out
pop
icebp
push
mov
adc
mov
pusha
pushf
mov
lea
jmp
pop
std
je
shr
mov
cmp
cmp
aaa
xlat
cmp
fisubl
out
pop
push
xor
cmp
mov
adc
mov
xor
les
gs
push
idivl
push
lods
mov
mov
add
sub
outsb
and
fs
mov
jmp
popf
push
sub
popa
add
and
aaa
xchg
es
ss
ret
jns
mov
xchg
not
call
lret
jl
jnp
out
frstor
sarl
fldcw
les
aaa
shll
shll
adc
call
repnz
fs
cmp
push
mov
mov
mov
fdivrl
pop
test
les
mov
stc
xchg
out
sub
sbb
add
push
cmp
pop
cmp
test
das
out
jle
mov
mov
dec
sub
notb
dec
out
pop
notb
push
cmc
push
fwait
and
hlt
es
jne
dec
pushl
shr
pop
mov
inc
movsl
dec
mov
movsl
pop
scas
xchg
push
fs
xchg
jb
jl
mov
mov
dec
imul
cmc
sbb
sbb
adc
fs
call
cmc
lret
lret
xlat
hlt
stc
mov
pop
dec
cmpsb
push
pop
push
loopne
mov
out
ljmp
pop
adc
jl
cmc
dec
testb
call
pop
imul
iret
dec
jae
adc
pop
lret
jl
jp
out
fnstsw
sarl
cmp
ss
dec
sub
mov
and
adc
ljmp
pop
xchg
imul
mov
outsb
adc
ret
or
and
xchg
inc
hlt
or
pop
scas
stos
lcall
and
mov
pop
test
cmp
inc
add
cmp
xchg
push
and
loopne
rcr
insb
lret
fldcw
pop
and
fildl
xchg
out
pushf
sti
jle
mov
or
adc
dec
imul
nop
mov
les
add
mov
xchg
add
sbb
mov
lds
xor
push
adc
push
fs
outsb
enter
push
notl
add
jnp
xor
adc
jne
or
cmp
pushf
dec
je
mov
sbb
stos
sub
gs
je
push
lret
jns
adc
xor
xor
out
ss
push
add
xor
inc
bound
adc
aaa
icebp
add
sahf
rcrb
ja
shr
jns
add
mov
adc
xor
lods
incl
jp
fs
ja
shr
call
movw
mov
lea
jae
call
push
mov
pushf
lea
jmp
push
push
inc
push
xor
cs
dec
dec
add
jbe
shr
mov
and
leave
xor
shll
fucomi
es
clc
inc
pop
cmp
jle
mov
xchg
mov
mov
pop
adc
cmp
add
jle
and
cmc
aam
mov
and
xchg
cltd
aaa
ret
es
xchg
or
cmp
pop
push
xchg
mov
mov
mov
popl
add
fldenv
push
das
and
lods
inc
data16
int3
fs
push
jne
and
pop
and
mov
je
out
xor
dec
lods
dec
test
scas
pop
mov
mov
jnp
mov
out
inc
clc
lods
mov
negb
js
and
lds
loop
push
popf
out
mov
lds
sub
cmc
xchg
mov
mov
sbb
xor
xor
cmp
mov
mov
mov
add
push
adc
cltd
xor
sub
es
je
out
fwait
cli
add
sbb
cld
add
neg
ret
sub
xchg
mov
movsb
mov
sbb
mov
xor
xlat
das
sub
icebp
and
sub
cmp
adc
mov
insl
jg
insb
mov
cmp
or
add
push
cmpsb
adc
inc
ret
sub
pop
jl
lret
ja
out
add
jl
bound
je
pusha
xlat
push
ss
push
xor
jne
jbe
cmp
addr16
adc
outsb
mov
movsl
xchg
and
loope
repnz
xor
fldcw
add
xor
inc
test
sbb
push
jl
enter
xchg
push
lods
rclb
pop
adc
in
aad
rcr
mov
test
insl
out
cmp
mov
testb
out
out
dec
icebp
push
hlt
shll
fdivrl
fs
rol
cmc
cmc
pushf
not
pushf
mov
pushf
add
jmp
lods
pop
mov
out
dec
sub
ret
es
ret
movsb
imul
hlt
or
jne
push
push
nop
mov
cmp
mov
fsubp
cli
adcb
inc
inc
mov
enter
stc
mov
ret
sbb
fsubl
inc
cmpsl
outsl
hlt
lret
testl
jmp
pop
cmp
loopne
push
out
pop
jmp
pop
jp
cmp
leave
mov
ds
and
aaa
scas
fistpll
pop
dec
int
mov
jbe
out
sub
sarl
daa
shll
int
fsubrl
loope
push
push
push
add
pop
mov
outsl
xchg
scas
cwtl
lret
dec
adc
sar
cmp
cmpsb
push
scas
dec
fisubs
lock
add
mov
imul
lock
jecxz
pop
xor
and
adc
push
lret
aas
xor
mov
cmp
jne
push
rolb
jae
dec
ss
jbe
hlt
dec
stc
pop
cld
push
incl
pop
push
jb
adc
ret
mov
add
sbb
maskmovq
testl
adc
mov
mov
fdivrl
andb
shrl
aas
add
arpl
lock
mov
leave
xor
es
jno
xchg
xchg
xchg
rcll
xchg
outsb
inc
testb
jmp
add
fwait
and
add
outsl
lds
jbe
jno
sbb
fdivrl
btc
cmc
movzbw
mov
test
jmp
pushf
lea
jo
call
push
cmp
pushf
pusha
call
lods
jnp
and
sbb
cs
aas
iretw
push
loope
andl
fldt
jp
andl
mov
data16
xchg
add
and
stos
leave
sub
jg
xchg
pop
mov
int
andl
xchg
xor
andl
stc
lds
in
add
sahf
xorl
xchg
mov
data16
pop
xchg
mov
andl
cld
shrl
sub
xchg
dec
test
sub
xchg
mov
das
andl
lock
jg
xchg
ljmp
mov
push
aaa
andl
cmpsb
ret
aaa
andl
mov
or
dec
xchg
fidivrl
rol
imull
xchg
or
das
and
cmp
andl
xchg
pop
jle
andl
scas
and
xchg
mov
das
and
inc
ljmp
icebp
sub
xchg
push
cs
das
andl
fwait
push
mov
and
int
test
mov
push
xchg
fcomip
fdivs
sub
xchg
mov
andl
jno
dec
mov
andl
inc
movl
pushf
dec
dec
xor
xchg
xor
das
andl
cmpsl
mov
loope
and
pop
daa
ds
mov
and
adc
and
jne
xchg
cmp
dec
mov
sub
xchg
lds
andl
inc
mov
std
das
and
fisubl
out
xchg
inc
in
push
aaa
andl
sbb
shrl
andl
mov
add
sub
xchg
mov
data16
xchg
xchg
lock
sbb
jg
xchg
mov
gs
andl
inc
ret
xchg
shrl
jl
leave
das
xchg
ds
shr
jae
icebp
sbb
jecxz
loopne
cvttsd2si
mov
jb
shrb
mov
daa
xor
push
jmp
push
and
sub
mov
pop
xchg
pop
movsb
mov
sbb
outsl
fdivl
pop
hlt
movsl
fsubrl
mov
xor
pop
mov
mov
adc
inc
shll
mov
sbb
jb
out
ret
mov
dec
mov
movsl
push
mov
mov
xchg
jne
or
inc
iret
pop
sbb
jle
dec
stos
mov
jns
lds
adc
dec
movsb
in
dec
adc
or
outsb
and
fdivrs
push
mov
and
push
pop
fldcw
ja
out
testb
sbb
lds
stos
cs
sbb
xchg
mov
out
out
adc
xlat
jae
jnp
jl
imul
shl
test
sbb
repnz
ljmp
and
push
add
test
mov
lea
jmp
mov
mov
movl
movb
lea
jmp
lret
insl
shr
hlt
add
adc
pop
repz
jecxz
and
mov
inc
movsb
dec
sahf
add
cmp
lret
loopne
push
ud0
jge
stc
sub
inc
mov
aaa
cli
sahf
test
adc
gs
sub
inc
aam
iret
and
and
mov
into
lds
mov
test
lock
imul
or
inc
ret
lret
stos
pop
mov
add
das
fildll
aam
call
frstor
fnstsw
pop
adc
sub
or
jecxz
jnp
popa
lahf
js
jnp
xor
pusha
add
adc
push
in
daa
mov
mov
or
push
ljmp
push
imul
movzbl
jmp
lret
insb
shr
and
mov
dec
mov
cmpsl
pop
mov
insb
lea
adc
cmp
fs
dec
sbb
mov
leave
shll
cwtl
fsubrl
mov
jmp
and
movsb
adc
mov
jbe
ret
enter
fs
in
mov
and
mov
test
ds
stos
xchg
aaa
mov
mov
xchg
loop,pn
inc
push
sbbb
push
lea
je
pusha
adc
pusha
mov
pushf
lea
jmp
pushf
lea
call
pusha
pushl
push
pushf
lea
jmp
call
movl
mov
lea
jmp
pushf
dec
and
out
or
sbb
add
add
adc
pop
call
jbe
push
ljmp
fisubrl
add
je
fsub
sub
xchg
mov
addr16
sahf
cltd
mov
cmp
mov
cs
in
and
mov
lret
ja
gs
jle
jne
jge
sbb
dec
std
gs
and
out
in
jns
imul
mov
jp
jge
jp
pusha
nop
imul
stc
jl
dec
add
int
adc
rep
jge
xor
out
sub
dec
mov
pop
mov
pop
mov
clc
lahf
popf
xor
sub
frstor
stos
cmc
mov
and
mov
mov
pop
cmpsl
popf
cmp
and
mov
sbb
outsl
ret
test
lea
jae
push
call
pusha
call
setns
sbb
sub
setbe
add
push
mov
mov
mov
mov
pushl
pusha
test
repnz
push
call
fsubrl
outsb
shr
into
xor
sub
and
sub
ds
sub
test
cli
inc
stc
sub
mov
hlt
test
pop
test
xchg
ret
lahf
xchg
repz
hlt
test
or
cltd
mov
xor
lahf
in
pop
fldenv
cmp
mov
adc
adc
or
jle
in
mov
fcoms
std
push
sti
pop
in
repnz
idivb
test
cld
ljmp
cmp
sub
cmp
xor
and
and
cmp
and
movzwl
fcomp
sahf
xor
inc
cmp
out
lret
rcrb
stc
mov
test
shlb
fs
repz
repz
mov
sub
jo
jo
push
cmp
xchg
vucomisd
cmp
shl
daa
enter
cmpsb
jne
jb
add
in
push
mov
xchg
cmp
fsubl
jbe
cmp
je
xchg
adc
push
call
vandps
cmp
out
adc
sbb
adc
or
sbb
in
ret
imul
sahf
and
pop
mov
mov
inc
mov
ds
shr
out
add
xchg
cmp
xor
test
lret
rcrl
test
or
adc
enter
mov
push
mov
int3
and
leave
mov
push
insb
je
sahf
mov
adc
xchg
adc
insl
push
cmp
inc
mov
divl
cmpl
and
cmp
scas
leave
cld
pop
pop
jmp
cmp
pusha
lea
jb
pusha
test
test
cmp
jmp
loopne
lret
out
loop
out
or
or
pop
call
adc
insb
xchg
sub
scas
mov
xchg
jo
xchg
negb
push
arpl
ret
cmp
add
push
xchg
dec
pushf
hlt
stos
loop
into
inc
lret
jmp
in
out
mov
sbb
sahf
into
cmpsb
jae
lcall
jno
icebp
cli
addb
aas
into
incb
jae
or
cwtl
jno
icebp
push
in
repnz
in
out
push
ljmp
adc
mov
movl
jmp
clc
add
push
pushl
lea
je
cmp
push
movb
test
add
pushf
pushf
push
mov
lea
jmp
xchg
es
imul
imul
or
push
std
add
sbb
add
into
inc
mov
shll
mov
test
cld
cmpsl
inc
int3
mov
push
sahf
xchg
divl
and
push
cmpsb
add
xchg
xchg
xchg
sarb
imul
xchg
adc
aam
iret
xchg
fistpll
cmp
das
xlat
fwait
les
add
jae
lods
xchg
sub
pop
adc
rcl
repz
push
test
pop
and
and
push
push
bnd
sub
ret
add
pushf
push
call
popa
rcrb
shr
jae
jns
pusha
lahf
xorb
jl
dec
imul
mov
pop
jno
add
add
je
ret
xchg
imul
jne
mov
xor
dec
ss
jle
xorl
mov
movl
into
sbb
xchg
les
jg
inc
scas
add
imul
adc
jle
and
adc
push
dec
in
dec
ret
push
out
jmp
in
add
sbb
adc
notb
daa
fwait
movsb
cmpsl
jge
push
push
add
cmpsb
scas
shll
js
sbb
push
dec
dec
xchg
aam
femms
aas
addl
std
lahf
orl
pop
cmp
ds
sbb
stc
icebp
mov
jl
inc
outsb
adc
ds
cmp
lret
push
and
fiadds
pop
push
push
out
ss
and
sub
cmp
shll
ret
stc
ret
sub
inc
inc
fcomi
and
andb
test
in
shrl
xor
push
ret
les
sbb
and
cld
sti
mov
sbb
push
pop
mov
mov
inc
insb
loope
nop
out
pop
add
imul
movsb
push
test
mov
mov
test
stos
jbe
adc
mov
adc
repz
out
dec
sub
sub
xor
out
jl
mov
cmp
movsl
lcall
insb
nop
jae
jns
arpl
xchg
cmp
push
cmpsb
xchg
lods
out
aam
mov
inc
jns
mov
push
in
inc
jne
push
mov
int3
insl
adc
cmp
decb
xchg
in
pushl
xor
sti
xchg
cmpsl
push
add
out
out
aad
sub
jb
xor
xchg
out
ja
repz
out
ljmp
push
jnp
push
in
jmp
outsl
inc
loop
cmp
xor
mov
cmp
jo
sbb
jnp
or
out
scas
dec
mov
repz
test
mov
std
xchg
nop
mov
or
std
or
xchg
mov
xchg
mov
mov
sub
pop
lret
fldenv
or
and
jle
sbb
fnstsw
jno
repz
add
adc
lcall
test
dec
cmp
adc
insl
imul
push
jae
subl
jo
mov
jge
std
fdivl
mov
bound
movsb
movsb
test
lret
mov
jmp
xchg
jbe
sbb
mov
jmp
stc
leave
mov
loopne
sbb
mov
pop
and
call
jmp
xor
ljmp
mov
mov
movsb
or
pop
int3
pop
mov
fcmovne
mov
stc
jecxz
aad
sub
lret
or
into
mov
lret
imul
jp
cwtl
or
loope
xchg
and
data16
dec
mov
sub
flds
mov
cmc
cmp
loope
fdivl
mov
mov
clc
hlt
jmp
int3
aaa
lret
lret
add
orb
jl
jg
int
jo
xor
cmp
mov
mov
hlt
or
and
pop
lret
sti
icebp
dec
xor
lret
xor
sahf
out
sti
xor
jnp
add
mov
mov
mov
mov
xor
adc
inc
aad
outsb
bound
mov
and
or
loopne
add
xor
testb
sbb
jle
mov
cmp
scas
cmp
fbstp
cwtl
or
cmc
inc
loope
out
roll
cmpb
imull
jle
icebp
xor
sbb
mov
cmp
scas
std
insl
adc
inc
mov
fnsave
xor
fiadds
xchg
icebp
cwtl
or
xchg
dec
aas
add
sbbb
arpl
or
push
aad
jg
dec
lcall
inc
mov
add
mov
cmpb
pop
or
xor
push
add
cld
call
call
adc
cld
mov
xchg
xorb
cmc
inc
add
out
add
lahf
mov
out
adc
popf
adcb
lret
cmp
shlb
or
out
inc
cs
out
sub
sub
cmp
outsl
les
sbb
add
inc
cmc
inc
dec
dec
pop
cmpsl
sub
cmp
les
sar
or
fcmovnbe
scas
iret
ss
sbb
xchg
or
enter
or
aam
mov
or
or
inc
in
add
loopne
int3
inc
sti
inc
std
popa
cmp
mov
or
shr
aam
cmpsl
aad
push
fidivrs
inc
shll
or
jp
or
std
aam
sti
or
cmc
icebp
push
int3
pop
ret
and
inc
int3
daa
scas
pushf
out
ret
hlt
cld
mov
sbb
xchg
outsb
loop
or
fistpll
in
je
fstp
fucomp
out
or
push
fldl
aad
testl
and
sti
into
jmp
xor
mov
cmpsb
in
add
or
call
or
int3
fdivs
fwait
or
call
into
lahf
sbb
int3
ret
hlt
icebp
mov
cli
mov
or
es
or
xlat
and
jmp
js
or
aad
int3
mov
mov
lock
xor
mov
in
loop
mov
test
dec
cmp
xchg
or
jp
out
add
out
in
repz
or
clc
pusha
les
test
or
int3
stos
in
inc
lret
movsl
push
add
iret
jmp
or
add
in
inc
xor
mov
out
jecxz
add
flds
or
inc
stc
loopne
jne
add
pop
fistpll
add
jmp
push
gs
sbb
in
or
out
add
jmp
call
or
out
dec
xlat
sub
and
add
sahf
or
ljmp
mov
call
pop
fisubrl
mov
repz
pop
test
test
add
adc
or
pop
fadd
mov
jmp
push
and
or
xor
or
pop
add
rorl
out
xor
pop
out
into
mov
dec
jmp
fcmove
or
lock
dec
dec
pop
pop
icebp
fcompl
jo
rcr
jmp
sti
loop
std
mov
jmp
or
pushf
or
xor
std
rcr
pop
out
in
or
xchg
pop
std
pop
or
lret
add
out
ror
orl
or
or
mov
pushf
jno
xor
dec
add
dec
mov
xor
jo
repnz
inc
scas
int
clc
mov
cmp
mov
lock
rclb
mov
mov
xor
incl
add
leave
enter
sub
sahf
hlt
mov
imul
aad
mov
pop
call
in
xchg
jmp
in
inc
ljmp
call
or
add
cli
mov
cmp
insl
xor
jl
out
inc
shl
dec
dec
add
mov
mov
push
in
jl
jg
leave
je
loop
aas
inc
and
jl
loopne
mov
mov
ficomps
lret
jo
scas
mov
cmp
pop
and
pop
mov
bnd
ss
xor
and
mov
add
add
cmp
fsubrs
xchg
aas
xlat
jns
enter
mov
imul
aaa
or
nop
call
cmp
or
rolb
inc
jle
mov
cmp
jne
mov
cwtl
jp
sbb
sub
or
or
xlat
orb
leave
add
xor
pop
dec
les
mov
dec
dec
dec
test
jg
mov
add
add
hlt
loope
mov
or
mov
mov
enter
loopne
inc
pop
add
cmp
fadds
push
fld
fcmovnbe
std
jnp
jo
xchg
add
scas
shlb
cli
orb
stc
call
ds
inc
xchg
inc
icebp
fdivrl
inc
jg
jmp
cmpl
cmc
push
pop
jmp
jmp
addb
sub
mov
rclb
mov
js
inc
orb
jecxz
or
imulb
jl
testl
cmp
push
ljmp
dec
or
out
mov
int3
ror
fldl
addr16
xchg
or
les
idiv
in
ret
js
xchg
call
mov
stc
jnp
or
mov
movsl
out
pop
in
ja
call
fimuls
mov
aad
shr
cli
or
test
mov
and
or
sti
add
lret
cld
in
int3
div
mov
addb
testb
orb
jle
mov
pop
shrb
or
js
imul
or
frstor
std
sub
lret
dec
imul
cmp
inc
dec
outsl
jle
dec
push
and
pop
mov
cmp
sbb
cli
std
fwait
or
or
fcmovu
lret
fadds
aam
roll
sti
shrl
into
pushf
ret
add
sti
or
pop
push
stos
add
sti
add
stos
std
mov
add
sti
cli
test
test
cld
div
stos
mov
fmuls
cmp
lret
test
cmp
jmp
cli
fmul
mov
mov
idivb
or
fdiv
mov
stc
pop
fisubl
cmp
jl
iret
imul
out
mov
ret
fnstenv
push
cmp
fisttpl
arpl
imul
repnz
or
or
lds
add
or
push
rorb
fisttpll
bound
testl
aad
fisubl
mov
push
jl
hlt
lds
pop
sti
add
div
stos
in
mov
add
sti
loopne
faddl
xor
test
or
add
stos
sti
enter
in
lret
shll
and
xorb
xchg
int3
add
cmp
into
aad
add
hlt
add
jmp
push
cmp
inc
add
hlt
in
aas
notl
loope
sti
mov
or
sub
jne
fcomi
dec
cmp
push
icebp
cmp
sub
jmp
inc
jmp
in
cmp
push
fnstsw
sub
shrl
or
sub
std
sub
inc
frstpm(287
dec
cmp
push
aad
jmp
mov
cmp
push
icebp
cmp
sub
cmp
sub
cmp
sub
cmp
cmp
jmp
dec
inc
in
or
stc
lret
add
out
or
std
jns
std
mov
sbb
fistpl
int
push
xlat
push
xchg
pop
xchg
dec
push
adc
aam
icebp
add
ret
scas
jno
stc
jno
add
int3
mov
fadds
outsl
mov
inc
add
int
jl
cld
mov
loope
lret
cmpsb
xchg
lret
decl
repnz
test
cld
out
stos
fisttps
rcr
jg
lods
lret
add
cmc
sti
out
test
jp
addr16
xlat
call
cli
add
sti
test
cld
std
stos
decl
ljmp
rorl
hlt
movsl
fmuls
das
push
or
mov
dec
or
or
jns
add
or
or
and
iret
or
test
call
loope
jmp
push
xlat
add
repnz
or
xchg
loope
in
or
fs
dec
or
lahf
insb
fadds
imulb
enter
loop
or
mov
push
add
and
sub
jmp
or
adc
out
mov
fmull
call
jecxz
pop
loopne
shrb
imul
ror
sti
mov
or
imul
or
enter
pop
testl
pop
pop
std
or
cmp
enter
jmp
pop
jg
test
enter
cmc
add
stc
outsb
fbld
shr
add
in
decl
or
test
cmc
ror
mov
in
sti
rcl
enter
shr
enter
fucomp
fisubrs
adc
shrb
push
shll
fmul
and
and
mov
add
enter
cld
pop
enter
cmp
or
xchg
xor
enter
enter
fsub
enter
aaa
enter
mov
or
xor
out
mov
pop
enter
xor
xchg
out
into
imull
out
xchg
pushf
repz
in
in
mov
and
imul
mov
popf
pop
xor
or
dec
imul
add
add
enter
or
in
or
cmp
add
sub
add
enter
or
mov
enter
aad
iret
enter
iret
or
hlt
cmpsl
sti
xchg
in
enter
sti
sti
enter
rcll
or
stos
std
aad
or
add
inc
loope
in
fstp
test
ljmp
in
std
std
add
and
enter
insb
inc
xor
dec
or
add
icebp
or
sbb
test
mov
add
std
aam
call
enter
jmp
cli
loopne
cmpsb
or
cmpsb
enter
in
enter
pop
in
mov
icebp
sub
clc
enter
push
clc
xor
pop
mov
icebp
loope
sub
push
loope
fcmove
in
lret
shll
out
lcall
cs
lahf
push
jo
aad
sbb
push
icebp
push
xor
enter
imul
mov
mov
or
or
sbb
enter
push
pop
int
cs
fldt
jmp
loope
add
sbb
mov
sti
enter
add
enter
cld
sub
jb
add
enter
incl
enter
in
enter
in
enter
int
je
imul
enter
aad
ror
inc
cmp
std
pop
fmuls
jmp
cmp
mov
mov
push
or
mov
ja
dec
std
jp
pop
mov
call
subb
mov
das
or
cmp
mov
jl
pusha
or
fs
push
pop
sbb
or
aam
mov
add
cmp
ljmp
mov
mov
xchg
jbe
sub
std
stc
jne
or
icebp
jne
scas
adc
rolb
loopne
popa
inc
mov
ljmp
or
dec
int3
leave
mov
jno
pushf
mov
sub
int3
cld
sti
jae
or
mov
repnz
enter
orb
pop
or
add
dec
shll
call
mov
aam
or
shlb
mov
or
xor
add
or
enter
in
cli
fmul
arpl
decl
test
out
mov
mul
sti
jae
mov
test
cld
or
stos
int3
mov
add
sti
into
test
or
dec
lock
add
lret
xor
add
out
ret
push
test
leave
sti
fsubrs
xchg
or
dec
or
dec
sti
cli
test
test
cld
inc
in
sub
sti
call
cld
dec
mov
add
sub
or
push
xchg
ror
enter
xchg
mov
cmc
stc
int3
cmp
mov
movsb
or
test
mov
ljmp
insb
sti
repnz
test
cld
jmp
stos
movsb
mov
add
sti
fldcw
pusha
mov
stos
fimull
sti
test
test
cld
or
ss
cmp
dec
outsb
fildll
or
or
daa
cld
or
jae
mov
mov
mov
hlt
es
xchg
mov
jns
or
add
stc
pop
dec
push
xor
leave
pop
js
add
ss
fwait
aas
lret
mov
sub
rclb
mov
sbb
cmpsl
out
pop
sti
add
in
das
jo
or
ljmp
out
addl
or
mov
add
fstps
or
xchg
imul
cld
push
stos
dec
mov
add
sti
lea
mov
in
mov
sti
sub
cld
cld
int3
dec
sub
jbe
push
pushl
inc
jecxz
insb
aaa
ss
cld
mov
iret
ret
or
in
shr
add
add
stc
int3
jecxz
jmp
test
cld
shrb
mov
add
sti
cmpsb
jmp
ljmp
out
stos
in
jecxz
loop
loope
out
outsl
pop
icebp
dec
dec
mov
dec
mov
add
fisttps
test
cmpsb
fcmove
lea
shrb
enter
iret
add
jne
cld
decl
cli
mov
test
test
cld
in
push
stos
out
nop
add
sti
shrl
fcoms
rorl
shlb
cmc
cld
adc
stos
push
mov
mov
mov
cmp
xchg
icebp
cmp
inc
or
aam
mov
mov
inc
jg
fldenv
fiadds
dec
or
dec
dec
aas
int3
mov
incb
clc
dec
or
add
in
outsb
decb
cmp
sub
std
mov
and
out
xor
jnp
or
popf
hlt
sub
mov
xlat
mov
xorb
inc
stos
or
cmp
fdivr
popf
pop
ffree
repnz
mov
xor
testb
cltd
test
les
sub
out
xchg
out
int
xor
xor
mov
sbb
hlt
cmp
pop
addr16
outsl
jae
repnz
jae
insb
std
jb
jnp
js
in
push
or
jecxz
push
les
fildl
fsubr
out
stc
sub
iret
dec
fwait
add
dec
cld
xchg
or
sub
jge
cmp
movb
cli
pop
fcomi
test
fucomi
jb
mov
repnz
data16
mov
jecxz
jmp
dec
add
and
dec
lods
pop
outsl
inc
add
repnz
cwtl
add
push
out
add
sti
lods
mov
jecxz
xor
shlb
iret
shl
dec
stc
pop
xor
fldl
or
ror
add
mov
idivl
cmp
test
test
stos
rcrb
nop
xor
test
aad
cmp
ja
mov
pop
jecxz
into
fnsave
or
push
pushf
out
push
imul
or
pushf
jp
lock
js
push
fwait
add
jmp
add
sub
or
jnp
jle
cmp
fdivl
test
aam
sti
les
in
sbb
pop
addr16
ret
mov
add
dec
insl
add
scas
imul
repnz
scas
xor
pop
ds
jno
or
xchg
outsb
dec
xor
add
cli
lock
pop
cli
mov
mov
movsl
mov
add
addl
inc
or
lret
or
or
add
jo
test
mov
mov
pop
add
lods
add
bnd
or
insl
mov
pop
add
iret
popf
mov
imul
add
into
fwait
repnz
imul
xchg
shl
add
mov
loopne
ds
jmp
jo
or
fxch
ret
cmpsl
add
pusha
sti
mov
test
push
out
mov
test
push
jecxz
in
inc
inc
or
fcoml
jl
clc
out
cmpsb
pop
testb
aaa
or
faddl
in
add
or
iret
stos
add
push
jp
add
push
ret
hlt
add
testl
popa
inc
in
clc
jns
dec
iret
test
les
fcmovne
lcall
pop
fcmovb
in
ljmp
int
or
add
test
jecxz
cmp
ljmp
mov
iret
fldenv
lock
loopne
push
call
lock
decb
sbb
add
or
out
mov
jp
adc
or
fcmovnb
ljmp
cwtl
add
push
neg
cli
pop
or
fistpl
repnz
in
out
call
fidivrs
movsb
jmp
cwtl
push
xchg
push
lcall
repz
dec
stos
or
int3
xor
sti
out
out
lcall
mov
add
adc
movsb
decb
mov
or
and
repnz
ljmp
sarl
inc
fisubrs
inc
addr16
cmpsl
or
hlt
daa
lods
fidivrl
or
out
es
or
mov
add
stos
decb
add
lcall
mov
fdivrp
std
js
sti
sub
jmp
add
fsubrl
call
add
incb
push
in
je
mov
fbld
pop
movsb
jecxz
icebp
push
mov
aam
mov
lret
jl
sbb
es
jmp
fwait
out
jno
fcmovnu
scas
ficoms
stc
icebp
or
cmpsl
inc
cli
xor
push
out
std
sub
cmc
repnz
inc
imul
loope
adc
testb
loop
stos
fmuls
push
call
lret
negl
fmul
cld
rorl
or
out
popa
test
mov
in
shlb
jo
into
jl
pop
adc
sbb
or
imul
jno
mov
add
or
jae
push
xor
lock
push
mov
hlt
mov
pop
mov
jle
mov
jno
mov
divl
jae
insb
repz
dec
enter
inc
or
hlt
add
add
jp
jl
push
repnz
out
fnstenv
sahf
or
nop
cmp
fsub
or
in
mov
mov
iret
out
fistpl
sub
fwait
aad
mov
hlt
clc
les
mov
dec
repz
mov
stos
fstpl
repz
cmp
pop
jns
imul
aam
dec
stos
rcr
push
jmp
and
in
jecxz
scas
int3
outsb
sub
or
cwtl
adc
ss
adc
int3
ja
pop
aam
cld
cld
out
push
or
cwtl
or
pop
popa
aam
into
aam
add
in
add
js
cmc
test
std
pop
cld
jmp
fbld
std
jl
push
cmc
mov
idiv
ret
add
cld
sti
cld
jl
fcomip
stos
in
pop
fsub
sti
jecxz
int3
mov
or
or
dec
sbb
lcall
stc
add
or
hlt
mov
or
or
sti
fdiv
cli
fsubrs
in
inc
inc
in
out
and
or
or
and
cmp
xor
jne
xor
je
imul
pop
pop
icebp
xor
dec
sub
loop
jno
or
loop
xchg
pop
fnstsw
incb
xchg
movsl
push
out
jmp
jmp
aam
cld
out
pop
push
xchg
loopne
cmp
cwtl
add
push
aad
add
add
int
enter
adc
cmp
add
std
roll
fwait
stc
xor
lock
fwait
jecxz
repnz
fs
scas
repnz
fcomps
icebp
daa
pop
std
ret
or
push
mov
push
or
or
jp
xlat
shl
js
add
or
fsts
aam
cld
repz
je
test
pop
in
fdiv
mov
jecxz
cmp
pop
loop
out
cmp
loopne
aad
loopne
out
fnstcw
aad
enter
aad
or
aad
or
pop
push
fldenv
cmp
push
dec
out
loop
aad
sub
inc
add
or
inc
or
and
xlat
adc
add
repnz
mov
mov
push
add
call
add
cmp
xchg
inc
ljmp
int
push
insl
out
jmp
push
mov
push
insl
cli
aaa
mov
add
loop
clc
repnz
lcall
test
push
pop
add
pop
repz
int
mov
or
push
pop
or
push
pop
ret
push
in
out
pop
push
movsb
nop
add
std
dec
or
jmp
push
add
jmp
mov
push
inc
lock
add
lret
or
sti
out
test
or
adc
shr
stos
ror
add
fcoml
mov
cmpsb
cmpsb
ljmp
jecxz
loopne
stos
fcmovne
or
fldl
xor
fpatan
js
sti
sub
sub
xlat
mov
cmc
push
push
add
push
hlt
xlat
stc
in
and
out
mov
out
lea
cmp
aam
sti
imul
or
test
cli
test
lock
push
jmp
mov
ss
pusha
faddl
pop
or
adc
out
jnp
mov
or
stos
div
adc
js
out
loop
fstpt
out
into
jmp
push
lret
test
cmp
enter
jp
sti
divl
dec
pop
aad
push
std
push
sbb
mov
repnz
test
fldl
insb
or
test
dec
mov
mov
std
push
enter
or
or
or
aas
add
out
imul
int3
int3
je
jo
jno
mov
adc
sbb
mov
xor
add
jle
femms
pop
inc
scas
sbb
mov
adc
and
into
push
cmp
add
mov
cmp
mov
mov
jo
and
push
mov
rolb
js
pusha
stos
cmp
lds
xor
jle
jo
out
icebp
arpl
repnz
mov
in
mov
sbb
into
stos
xchg
push
sti
icebp
mov
add
outsl
xchg
mov
xor
or
ja
lock
dec
xchg
xchg
inc
mov
jbe
std
jns
iret
xchg
xchg
les
repz
pusha
jne
jno
loope
testb
insl
cwtl
jmp
push
fisubrl
xchg
xchg
xor
push
insl
stos
push
test
adc
add
or
or
cld
or
orl
sarl
jmp
mov
shrl
out
test
or
dec
cld
sub
and
mov
js
cmp
movsl
pop
mov
les
test
pushf
pushf
outsl
cmp
xchg
add
xor
push
xor
jl
or
add
xor
in
std
jg
ret
lock
je
ds
out
shlb
dec
rol
add
xorb
xchg
adc
clc
mov
mov
fistpl
in
inc
mov
mov
sbb
mov
aas
xchg
add
xor
cmp
call
mov
ret
dec
and
cmp
cmp
sub
jl
xchg
sub
xor
xchg
or
add
mov
or
jae
aam
jmp
mov
daa
xor
mov
shll
push
or
add
xchg
add
push
hlt
inc
or
into
jmp
test
movsl
repz
out
sbb
call
pop
int3
lret
adc
mov
cmp
push
xor
xchg
jae
cltd
das
pushf
and
inc
cmp
in
lret
dec
push
mov
xorb
inc
jl
int3
pop
pop
incl
imul
movntq
out
mov
push
fidivl
sbb
mov
hlt
aaa
ljmp
out
sbb
jge
mov
xchg
mov
call
je
test
sbb
mov
in
or
seto
test
add
dec
lret
adc
inc
fwait
mov
dec
dec
add
loop
mov
outsb
lret
adc
mov
test
inc
xor
inc
cmp
dec
jnp
int3
mov
xchg
add
mov
lret
inc
mov
inc
sarb
rorb
push
shll
inc
sub
sarl
cmp
jmp
addl
jp
test
add
sti
movsl
test
test
sbb
stos
dec
enter
inc
add
sti
jns
test
cld
outsl
out
loop
pop
add
sti
test
icebp
std
adc
stos
inc
mov
add
sti
mov
stos
test
loop
stos
sbb
dec
jmp
ror
add
add
jns
stos
cs
add
sti
aad
push
jmp
push
mov
scas
cmpsl
xor
ss
adc
mov
aas
mov
out
cmp
jnp
repz
pop
push
icebp
scas
cli
stc
mov
xorl
sub
mov
jne
jp
xchg
xchg
xor
jnp
mov
dec
add
xor
xorb
push
dec
sbb
in
xchg
and
jns
add
cli
das
stos
and
jbe
jg
lds
jnp
push
push
sti
or
sbb
insb
cmpsl
or
xor
push
mov
mov
adc
std
arpl
ljmp
jne
mov
xorb
xorb
outsl
loope
scas
adc
cmp
mov
loopne
xor
jg
sub
dec
jns
stos
in
stos
jo
scas
inc
in
lods
mov
test
mov
jmp
popa
xchg
mov
loop
cmp
mov
mov
xor
push
cwtl
leave
and
xorb
test
mov
inc
cmp
mov
push
lea
mov
inc
pxor
adc
bound
test
icebp
jecxz
iret
jae
daa
jl
xchg
imul
xor
call
hlt
rcrl
xor
jmp
jl
jb
and
sarb
out
fsubrs
ds
scas
fldlg2
push
pop
push
and
ret
mov
dec
scas
in
xor
rol
cmp
sti
sub
inc
jl
in
hlt
sub
popf
add
mov
cmpxchg
add
icebp
mov
pop
or
lcall
sub
or
lods
mov
shrl
popa
mov
cld
jl
sub
mov
aas
pop
je
jae
fdivl
dec
rolb
dec
push
js
loop
pusha
cld
pusha
lds
out
setp
or
xchg
adc
and
sub
adc
push
inc
jp
add
loopne
cli
flds
addr16
repz
mov
sbb
aas
call
mov
fldcw
xchg
inc
adc
dec
mov
ja
int3
insl
stos
test
or
pop
or
lret
leave
mov
iret
or
testb
mov
add
xor
fldenv
inc
sti
adc
fwait
in
inc
mov
stos
lods
int3
ret
int3
aam
std
insb
or
insl
ljmp
sti
or
add
pop
loopne
cld
inc
add
aas
sti
ljmp
sub
imul
mov
add
mov
adc
sti
sub
dec
icebp
mov
mov
mov
dec
je
mov
mov
out
dec
int
dec
or
mov
dec
or
mov
enter
or
int
pop
movb
inc
add
int
addl
addb
roll
ds
mov
pop
cmc
xor
mov
xchg
repnz
cwtl
icebp
mov
fnsave
outsl
int
out
scas
outsb
divb
add
lods
insl
sub
in
int
imul
stos
push
ljmp
push
addr16
out
data16
movsl
gs
in
mov
bound
loop
mov
pusha
and
int
pop
pop
fistps
popf
pop
sbb
fmul
fwait
pop
sbb
lcall
sbb
cwtl
pop
sbb
int3
xchg
push
pop
xlat
xchg
push
push
inc
and
push
adc
xchg
push
adc
int
push
adc
nop
push
adc
int
dec
bswap
mov
into
mov
loopne
add
jp
cli
mov
int
cmp
mov
aaa
divl
add
cmp
mov
push
and
icebp
mov
cli
cmp
mov
or
mov
xchg
mov
out
add
mov
stc
sub
sub
ja
mov
jl
fimuls
jo
jnp
or
mov
cmp
mov
js
mov
mov
lret
add
add
mov
iret
testb
into
call
mov
add
sti
push
test
test
psubw
mov
push
test
lea
lds
add
lret
sti
mov
cld
div
stos
hlt
mov
add
sti
icebp
test
test
cld
in
stos
stos
sub
gs
test
loopne
stos
fwait
mov
pop
sti
push
test
test
push
push
stos
push
mov
push
sti
dec
call
adcl
jle
adc
dec
imul
inc
xor
shr
add
js
mov
daa
movsb
cmp
cmove
mov
sbb
ds
add
dec
sub
mov
sub
mov
jg
scas
mov
mov
aaa
or
clc
repz
jo
lret
mov
dec
cmp
test
lret
xorb
jg
add
add
jp
xchg
xchg
jo
das
mov
xchg
lret
mov
mov
fiaddl
dec
xor
mov
sub
test
cmp
sbb
test
cld
xor
lret
js
mov
sti
add
jge
add
and
js
add
mov
test
test
xor
stos
scas
mov
sub
cmp
aas
rorl
inc
repz
pop
pop
lret
movb
dec
test
inc
cld
add
push
xor
in
or
mov
push
fstpt
dec
or
jo
or
stc
sbb
dec
or
mov
in
addr16
ljmp
or
lcall
lahf
icebp
inc
jecxz
fwait
mov
arpl
or
pop
sbb
aad
xchg
in
lcall
imul
insl
bound
int
popa
in
adc
jnp
mov
scas
lods
imul
lcall
fstsw
sub
jbe
int
add
fadd
js
pop
pushf
sub
in
or
scas
std
fnstenv
jae
jle
xor
nop
and
shlb
repnz
fcomps
daa
inc
fdivs
pop
addl
cmp
pop
or
xchg
sbb
push
xor
cwtl
or
jge
insl
imul
out
js
dec
or
sub
xor
push
pop
sti
pop
in
lret
mov
and
pop
daa
mov
popa
mov
mov
enter
or
mov
xor
fnstsw
add
arpl
aam
jle
data16
xchg
bound
cmpsl
dec
sub
jmp
pop
mov
jb
mov
pop
outsb
enter
js
inc
push
gs
add
sub
enter
orb
lret
sbb
jp
mov
jle
fildl
pop
dec
mov
adc
mov
mov
in
xor
out
out
ret
lock
mov
lock
int3
jecxz
in
dec
jne
xchg
sbb
push
enter
or
jmp
stc
out
bt
int
jp
out
add
test
test
cld
or
stos
xchg
sahf
fmulp
subb
fmuls
sarl
data16
jae
cli
add
mov
test
mov
sbb
ja,pn
cmp
repnz
dec
pop
daa
stc
aas
lret
enter
pop
push
dec
sub
push
inc
rep
jbe
jne
jb
mov
icebp
repz
lock
add
shrb
in
ja
cmp
test
fisttpl
aam
jo
mov
cmp
test
push
les
sub
cmp
jmp
mov
jle
rol
loope
xlat
or
pop
mov
iret
adc
out
mov
dec
les
aam
sti
sub
notl
test
jl
lcall
fs
pop
add
cmp
or
stc
push
pop
sbb
divl
jmp
fdivl
psrlq
mov
subl
js
fnsave
fimull
test
inc
push
pushf
sbb
icebp
xchg
xorb
xchg
pop
les
dec
mov
sub
push
mov
cmp
clc
adc
cmp
cmp
sbbl
cmp
sbb
js
inc
aam
js
loop
sub
xor
push
mov
clc
mov
js
jnp
pop
inc
in
daa
jge
inc
add
add
lock
les
cli
mov
push
sahf
andb
or
adc
and
cli
icebp
add
dec
jno
cmc
daa
clc
fbld
fs
and
stos
jae
jge
idiv
jnp
add
mov
dec
cmp
xchg
clc
iret
cmp
ret
xchg
push
jl
xor
movsl
dec
scas
mov
mov
jl
jae
xchg
shll
cwtl
adc
mov
adc
cmp
mov
adc
or
sub
sub
lock
mov
sti
or
push
lret
mov
mov
dec
sbb
ja
adc
jl
inc
fs
out
movsb
js
inc
add
pop
stos
inc
ror
mov
push
or
mov
in
mov
test
test
pop
cltd
and
shll
sahf
stos
add
cld
pop
les
mov
jl
aaa
enter
xchg
mov
inc
lahf
inc
in
je
jecxz
jbe
nop
cld
sbb
cwtl
fs
pop
hlt
add
in
and
push
mov
in
imulb
sbb
roll
add
jo
cmc
jmp
mov
dec
cld
shll
cmp
inc
fdivr
adc
je
cmp
inc
mov
xor
pop
sbb
push
add
cmp
in
aaa
fisubrl
les
jmp
pushf
repz
adc
cmp
sbb
mov
arpl
add
sbb
jns
pop
cltd
jmp
repz
jb
arpl
les
sbb
mov
jmp
xchg
mov
hlt
mov
xchg
jbe
cmpsb
enter
test
jge
jo
cwtl
cmp
jnp
cmp
push
xchg
sar
sbb
les
std
lock
adc
push
repz
mov
aam
sarb
sbb
jg
mov
mov
jo
cmp
xchg
dec
iret
cmp
pusha
ret
stos
sub
cmpsl
outsl
fmuls
push
call
cmpsl
lods
mov
inc
jl
inc
sub
ror
push
sti
andb
jecxz
or
cmpsl
or
lock
jmp
xor
int3
ret
test
add
jmp
rol
pop
add
sti
into
ror
fcomi
nop
jmp
mov
cmp
repz
loop
scas
loopne
fsubrs
or
std
mov
jmp
out
cmp
push
loop
aam
decb
cmp
gs
push
fdivrl
cmp
fucomi
dec
inc
ljmp
test
inc
rorl
or
imulb
jecxz
fldt
or
sbb
mov
push
cmp
cmp
fucomi
scas
in
fildl
pop
jmp
inc
or
testl
repnz
xlat
inc
outsl
shll
jp
pusha
rolb
inc
fmull
inc
or
inc
jmp
jmp
jl
fsubrp
stos
fmull
xchg
sti
loop
jmp
pop
or
and
sub
fsubr
notb
scas
fcmove
in
adc
push
rolb
mov
hlt
lret
mov
mov
repnz
nop
sbb
mov
jmp
mov
cmp
aaa
jmp
insl
mov
jnp
xor
or
repz
rol
push
add
iret
icebp
out
xchg
scas
fdivrl
pop
sbb
gs
clc
add
inc
call
clc
add
out
pop
in
jmp
call
fadd
roll
mov
push
push
out
ljmp
or
add
and
xrelease
neg
cli
dec
mov
jb
cmp
gs
cltd
ds
loope
sahf
sub
xchg
rcl
test
clc
push
in
js
or
rol
cltd
cli
js
int3
ret
into
fwait
add
or
jmp
inc
mov
cmp
or
dec
pop
add
pop
ss
mov
les
lret
nop
stos
xchg
mov
dec
sti
into
test
test
cld
aad
push
je
mov
fldl
rorl
int
dec
dec
sbb
adc
sbb
icebp
ljmp
and
sub
cmp
flds
int
push
inc
adc
sbb
adc
in
jmp
out
and
sub
and
xor
iret
or
faddl
rorb
ds
dec
int
aas
por
fucomip
in
int
loopne
sub
push
cs
cmp
das
add
pop
xlat
add
aam
fadds
inc
push
inc
int
inc
pop
jecxz
out
in
hlt
call
ss
xor
aaa
mov
mov
pop
jge
int3
pushf
rclb
insb
jl
jo
int
pop
insl
lods
mov
mov
mov
int
test
xchg
enter
xchg
lds
popa
int
gs
mov
mov
mov
pop
jle
mov
pop
jg
lret
mov
int
mov
outsb
imul
pop
outsl
stos
mov
mov
xchg
int
xchg
xchg
xchg
ret
int
xchg
bound
jbe
int
addr16
mov
mov
xchg
out
dec
fwait
mull
or
enter
cs
xor
or
repnz
incl
mov
or
adc
push
clc
incl
push
insl
testl
add
std
adc
decl
insb
inc
aas
inc
inc
aad
add
or
sbb
cld
jecxz
ljmp
xor
movsl
sarl
mov
pop
xor
ror
enter
fsts
add
fnsave
dec
add
xchg
fnsave
mov
cwtl
hlt
int3
sbb
daa
dec
pop
fiaddl
daa
mov
add
adc
cld
dec
xchg
add
cld
ret
inc
and
leave
sbb
xor
movl
add
sti
subb
arpl
orb
add
sti
ret
test
test
jle
stos
add
inc
test
test
mov
sti
aas
test
les
or
or
inc
lock
test
aaa
jle
ret
cmpsl
leave
pusha
mov
mov
in
push
divl
cmpsl
stc
fcompl
push
mov
addb
add
sti
xor
mov
hlt
std
sti
mov
mov
ret
in
cld
scas
out
stos
mov
sti
cmpsb
add
sti
hlt
xchg
xor
out
cmpsb
repz
mov
mov
aam
jp
add
ljmp
xchg
cmp
movsl
push
movsb
or
lcall
push
push
jns
ret
cmp
inc
sub
pop
insl
push
push
and
lret
mov
mov
mov
int
mov
dec
test
mov
subb
mov
roll
inc
je
insb
jo
lcall
mov
xchg
mov
movsl
mov
xchg
mov
push
inc
sub
add
adc
lds
pop
xchg
or
fimuls
mov
and
enter
int
mov
dec
test
add
inc
js
lret
cwtl
int
add
xchg
ret
nop
in
imul
lahf
loopne
loopne
and
in
push
jbe
jmp
pop
pop
xor
test
in
in
push
int3
nop
int3
mov
cmc
or
test
pop
cld
fdivr
sub
pop
dec
fdivp
fs
out
rorl
or
in
cmpb
mov
adcb
ds
aam
clc
mov
mov
mov
jo
pop
lret
or
jl
lret
pop
in
test
push
imul
enter
or
and
pop
in
jge
stos
add
loope
sti
mov
add
sti
out
test
test
cld
loope
stos
fimull
or
test
cld
add
stos
cld
mov
add
sti
out
test
test
cld
loope
stos
xlat
mov
add
cld
or
or
test
test
cld
clc
hlt
stos
out
mov
add
sti
loopne
fcmovnb
aad
movsb
in
fsts
out
out
or
jmp
mov
sti
in
jecxz
loope
stos
fisttpl
aad
roll
mov
add
sti
add
std
sti
stos
stc
mov
add
sti
icebp
test
test
cld
jmp
stos
out
in
clc
in
jmp
add
fmul
aas
rcrl
sti
test
lock
mov
add
sti
ljmp
stc
imull
icebp
sti
out
test
test
cld
jmp
jecxz
loope
fildll
stos
aad
roll
sti
iret
jecxz
sub
test
pop
cld
add
jmp
test
test
cld
stos
fisttpl
aad
roll
pusha
movsb
lret
pop
sti
add
cld
std
stos
sti
mov
add
sti
cmc
test
test
cld
out
in
stos
jmp
jmp
test
test
cld
stos
fisttpl
aad
roll
test
fdivp
lret
cmc
test
test
cld
in
add
std
sti
ljmp
lret
aad
aam
or
mov
mov
lret
fdivr
aad
stos
rorl
or
or
or
jmp
cmp
shlb
enter
xchg
fmul
add
ret
cld
add
stos
or
jmp
cs
sti
lret
out
fcmovnb
jmp
test
stc
test
add
das
add
lret
mov
add
jnp
roll
jmp
icebp
orl
test
cld
stos
fimull
andl
cmp
faddl
or
stc
add
jnp
arpl
stos
repz
add
sti
lock
test
jae
xchg
or
cld
decl
stos
cld
mov
add
cld
iret
mov
or
test
test
cld
add
incl
test
cld
jmp
stos
out
in
jecxz
loope
filds
xlat
mov
add
sti
shrl
lcall
add
sti
repz
test
cld
in
jmp
jmp
sti
jecxz
loope
fstp
stos
shrl
jbe
lock
xor
pop
mov
lret
imull
icebp
out
stos
in
mov
add
sti
out
in
stos
loope
filds
mov
std
adcb
sti
add
clc
stc
iret
neg
lret
repz
jae
lods
ror
cld
rcl
stos
xlat
mov
aam
cmp
out
lret
into
add
or
clc
icebp
test
cmc
orl
int
pop
mov
out
ja
jp
js
insl
mov
jno
insl
xchg
cmp
jg
je
jae
xchg
and
fucom
or
mov
shl
das
cmp
mov
xor
mov
loop
sti
cld
ja
loopne
add
inc
inc
mov
xchg
std
fisubs
xchg
xchg
push
insl
loopne
into
or
jl
jmp
or
jb
push
ficoms
push
sub
mov
dec
stos
loope
xor
std
cltd
addr16
incb
pop
cli
inc
in
jecxz
jnp
leave
lahf
xor
sbb
nop
fistps
jmp
fnstenv
mov
out
shrl
xlat
xor
loopne
pop
cmp
stos
jg
and
testl
les
fdivs
aam
shlb
cmpsb
add
sub
adc
stc
dec
cmp
sub
push
stos
sub
rolb
or
sahf
jno
imul
inc
mov
xorb
mov
mov
push
lods
sub
inc
insb
xlat
insb
int
enter
leave
bound
cmp
shr
shrb
fldcw
fdivrs
and
xor
xor
pop
decb
ljmp
std
sbb
fiadds
mov
fsubp
adc
test
sahf
inc
idivl
fdivrs
outsl
pop
add
outsb
cld
shl
push
lret
push
xlat
or
imul
mov
add
adc
dec
mov
aam
or
add
mov
xchg
xor
mov
int
pushf
push
lea
jne
pusha
pusha
pushf
mov
mov
pushl
push
jmp
jmp
lahf
lea
lea
setle
push
setns
not
bswap
movzbw
push
setle
lea
jmp
pusha
mov
not
pusha
mov
lea
mov
push
mov
movb
movb
pushl
ret
mov
setae
pop
movl
jmp
jmp
push
dec
jmp
add
cmp
stc
cmp
push
pushf
lea
jb
push
stc
pusha
cmp
push
lea
jae
btr
btc
mov
rol
cmc
dec
mov
add
shld
mov
cmc
test
sub
jmp
pusha
lea
jnp
push
call
cmp
mov
out
adc
add
stc
sbb
add
sbb
sarb
sbb
cmp
dec
mov
fistpl
mov
repnz
out
xor
pop
rcl
test
cmpsb
es
icebp
push
jno
scas
loope
int3
mov
mov
sub
push
das
inc
jmp
ror
lods
cmp
popf
and
xchg
cmp
push
push
cmp
jp
inc
add
movw
mov
call
pushf
movl
pushf
movl
pushf
lea
jmp
cltd
ds
shr
jae
loope
std
add
sbb
sbb
pop
ljmp
push
sub
sbb
pop
lods
jnp
xchg
flds
idivl
icebp
or
aam
sub
mov
mov
pop
aam
shlb
xor
popf
jp
aam
sub
pop
addr16
xor
idiv
cltd
xor
rcrb
mov
jnp
mov
add
sbb
add
pop
adc
das
ss
add
pop
sbb
fldenv
fdivrs
cmp
ss
inc
jnp
data16
lahf
mov
les
loop
mov
mov
dec
fnstcw
sbb
pop
das
and
imul
jb
imul
icebp
pushf
aaa
cltd
scas
int3
mov
pushf
shll
test
or
xchg
ds
xor
and
sub
lea
ja
stc
imul
push
stc
mov
add
movb
pushl
push
lea
jmp
stc
push
jecxz
incl
lock
stc
add
or
pop
cmp
lds
gs
cmpb
and
mov
ds
mov
movsl
jbe
negl
shl
sbb
dec
out
and
cmp
push
jb
sahf
test
ret
mov
inc
dec
sub
add
inc
xchg
pop
mov
cld
fsubl
mov
or
loope
jno
shll
insl
jns
mov
xor
lcall
cs
dec
dec
add
add
lds
inc
and
pop
or
push
pushf
pushf
pushf
mov
movl
mov
push
lea
jmp
mov
push
sbb
repnz
lock
es
cmp
cltd
loop
xchg
sub
sbb
mov
in
sbb
arpl
xor
fisubrl
fistps
fisubrl
lods
stos
push
addl
cli
imul
and
jmp
lahf
repnz
leave
imul
aam
fsubl
fdivrl
sub
mov
adc
jae
lods
shr
into
stos
pop
stos
inc
movsl
dec
mov
stos
inc
mov
adc
sbb
mov
mov
sbb
inc
pusha
nop
hlt
or
dec
xor
push
out
pop
aam
ror
cwtl
mov
dec
jae
cmp
adc
or
mov
hlt
mov
pushf
mov
mov
mov
sub
sub
daa
andl
cmp
xor
mov
pushl
popl
push
pushl
ret
movl
pushl
lea
jmp
movl
movl
jmp
pushl
jmp
stc
pusha
sub
js
push
xor
lea
bt
or
pushf
call
clc
shl
mov
test
and
cmp
add
push
mov
add
pusha
dec
lea
jo
push
pushf
lea
jne
ror
shr
sub
call
rorb
out
popa
cltd
jle
data16
je
fs
insb
mov
xor
aam
movsb
int3
pop
cmp
push
loopne
ljmp
clc
pop
fidivl
insl
cmp
outsl
arpl
adc
push
mov
jbe
imul
in
pop
ret
pushf
scas
shr
mov
test
mov
inc
cmpsl
inc
lods
dec
jnp
sti
ljmp
mov
ja
mov
add
adc
iret
push
out
enter
cwtl
repz
in
test
inc
imul
in
or
push
jae
dec
add
das
or
pop
mov
shlb
inc
bound
int3
mov
inc
mov
cwtl
ss
daa
xchg
sub
mov
dec
or
add
xor
xor
xor
sub
fldcw
fildll
pop
outsl
repz
shll
xor
insl
aam
sbbl
cmp
das
xchg
das
mov
mov
shr
test
les
add
cmp
mov
push
xor
test
adc
out
clc
pop
in
push
call
mov
aaa
adc
movsl
sbb
mov
scas
shr
add
or
pop
loopne
out
adc
add
or
push
js
or
adc
pop
sbb
repnz
pop
loope
cld
cltd
sbb
mov
jmp
sub
sbb
pushf
sub
ret
mov
enter
loopne
lcall
aas
pop
stos
popf
sub
xchg
pushf
and
sbb
xor
out
fistpll
mov
inc
test
dec
outsb
imul
mov
in
mov
fwait
dec
enter
incl
test
outsl
jo
xchg
sbb
cmpsb
xor
jge
icebp
and
xlat
xor
xchg
jmp
lret
in
mov
jns,pt
leave
mov
dec
mov
ds
sub
cmp
inc
imul
out
jbe
jmp
out
cmc
sbb
add
sbb
add
aam
call
pop
pop
mov
sub
xchg
outsl
push
not
inc
mov
imul
or
add
aam
xor
inc
pop
cld
and
xorb
or
cld
fcompl
cmpsl
xor
inc
lock
clc
aam
fsubr
leave
adc
clc
jl
imul
and
addr16
lods
ljmp
jl
sti
add
outsb
sti
inc
out
lea
adc
xchg
ljmp
repz
into
xor
leave
cmp
roll
mov
outsl
lahf
outsb
sti
test
loope
or
lret
ja
xor
jge
push
clc
outsl
inc
inc
push
dec
cs
movsl
add
mov
popf
pusha
pop
outsb
mov
adcb
ret
xchg
and
insb
mov
out
jle
push
xchg
cli
xchg
add
inc
pop
sahf
jle
outsl
push
cmc
mov
sbbl
out
cmp
fildll
inc
push
sub
in
dec
imul
mov
fldenv
movsb
xor
jmp
pop
es
mov
push
dec
or
mov
fisubl
cmpsl
aas
sub
or
sbb
cld
push
pusha
dec
pop
pop
add
in
inc
aaa
or
xor
fcmovnb
inc
push
sbb
dec
jb
movsb
ret
sbb
sbb
hlt
ret
lds
repz
mov
arpl
xlat
or
add
xchg
add
js
leave
cmp
jne
and
mov
test
jo
popf
cld
lahf
mov
jmp
adc
aas
xchg
in
cs
adc
test
frstor
mov
mov
fmuls
or
or
fsubrp
pop
jnp
pushf
and
lds
jae
pusha
cmpsl
adc
sti
mov
and
mov
fcoml
jae
cmp
pop
leave
rclb
pop
sbb
movsb
call
repnz
inc
loopne
dec
or
popa
pop
je
cld
or
icebp
or
pop
fdivrs
inc
push
imul
stos
sbb
and
fsubrp
loope
outsl
and
fchs
flds
push
inc
outsw
repnz
add
std
lahf
mov
rcrl
jns
mov
or
push
push
push
inc
cmp
ljmp
das
loop
xchg
inc
js
cmpsb
push
loop
repz
jo
hlt
sbb
ja
adc
cwtl
sarb
adc
add
inc
cmp
inc
adc
aas
sar
subb
in
into
mov
dec
jle
test
in
sub
adc
push
jns,pt
mov
dec
and
ds
scas
push
cmpl
fcompl
xchg
sub
jg
pop
aaa
push
sub
mov
repz
fisubl
rclb
inc
cmp
jb
sub
push
jge
test
jge
and
pop
sbb
lods
dec
ss
popa
cmp
sbb
mov
pop
push
mov
repz
sbb
in
xchg
test
xchg
dec
xchg
lcall
jns
les
cmpsl
vunpckhpd
mov
mov
sahf
repnz
push
xchg
rcrl
push
sahf
mov
jne
xor
dec
aad
sbb
or
push
je
push
push
aaa
mov
push
or
fsubrs
dec
pop
fiadds
in
cld
shlb
or
iret
lods
mov
shl
fucomip
or
dec
cs
push
hlt
mov
inc
xchg
add
mov
inc
hlt
xor
shrl
pop
dec
add
dec
mov
jl
add
jg
in
push
cmp
push
and
shll
pop
mov
fdivp
jb
repnz
inc
push
xchg
and
int
sub
cmp
sti
sbb
lahf
mov
pop
mov
repz
out
inc
sub
sbb
jno
movsl
dec
mov
loop
cli
out
xchg
lods
lahf
repnz
cmpsb
mov
xor
and
lock
inc
dec
out
push
aad
mov
shlb
push
add
jno
mov
add
jecxz
mov
pop
add
mov
or
adc
mov
push
mov
mov
push
fs
xor
jno
xchg
jp
out
adc
add
add
mov
std
inc
aas
add
cmpsl
jle
shll
ss
ljmp
mov
jecxz
adc
lods
ret
enter
xor
xchg
enter
jge
divl
or
imul
imul
in
and
imul
push
in
cwtl
outsl
insl
mov
pop
popa
push
jmp
inc
repz
xor
lock
arpl
dec
adc
fldenv
inc
pop
and
loop
cwtl
lds
adc
cwtl
xchg
lock
and
into
inc
and
fldt
push
call
mov
inc
cli
cwtl
subb
inc
mov
movsb
in
cmc
xchg
jle
out
sti
push
push
movsb
aas
inc
inc
add
add
data16
cmp
mov
ja
push
mov
push
rolb
cmpsl
push
inc
into
rcrb
std
add
loope
sti
mov
cmpsl
push
mov
jle
jp
sbb
test
ja
das
jns
xor
mov
mov
scas
pop
movsb
and
jno
out
insb
ja
sbbl
outsb
xchg
scas
or
clc
inc
xor
xor
ror
cmp
and
inc
and
lock
xor
jmp
pushf
or
push
test
hlt
xor
shr
sbb
or
out
aad
mov
cmp
shrl
mov
jle
test
add
cmpsl
ss
dec
fisubl
insl
mov
es
imull
dec
movsb
xchg
sub
jecxz
cmpsl
imul
sub
mov
sub
icebp
lea
jmp
or
cmp
testb
jae
test
fwait
dec
daa
fucomp
pop
js
xor
lahf
mov
pop
xor
push
xor
pop
cmpsl
lcall
shrl
scas
mov
out
mov
mov
or
leave
xor
aad
cmp
xorl
adc
popf
clc
sbb
push
xchg
int3
jbe
mov
mov
cmc
pushf
jbe
jnp
sahf
test
bound
adc
xchg
lret
add
ret
lret
add
mov
das
inc
mov
mov
mov
inc
es
loop
jb
arpl
lret
cs
lods
sbb
icebp
lods
sbb
add
sbb
jmp
sub
cmc
sub
jp
in
sub
fwait
ja
mov
fisubs
je
enter
dec
push
inc
mov
adc
cld
xchg
inc
iret
mov
pusha
shrl
pop
cmc
call
lods
xchg
xchg
xor
xor
jnp
lods
inc
mov
jae,pn
inc
inc
pop
aaa
sub
stos
or
loopnew
jb
int3
sub
std
fcmovbe
cmpl
mov
sub
sahf
mov
xchg
pop
cmpsb
push
data16
mov
insb
cmp
in
lret
sbb
repnz
mov
xor
jge
lds
cld
repnz
insb
fildll
les
xor
and
mov
pop
test
testb
cmp
mov
push
mov
data16
mov
add
push
mov
mov
inc
ret
test
sbb
add
mov
mov
stos
popf
ret
lds
mov
pop
test
fdivrs
roll
in
pop
scas
cwtl
push
mov
cmp
loope
jne
sub
cmp
adc
mov
call
push
dec
mov
sub
insl
loopne
sub
inc
and
xor
jo
hlt
into
outsb
xchg
pop
mov
repnz
shlb
mov
leave
xor
jno
push
out
xchg
add
mov
jmp
shr
lahf
cltd
incl
fmull
inc
mov
cmpl
scas
push
mov
lret
stos
loopne
push
xchg
or
push
lahf
test
adc
lods
dec
js
jmp
sub
stc
xchg
insl
ljmp
mov
jno
inc
movsb
pop
mov
dec
add
pop
ret
loopne
pop
lea
push
bound
pushf
sub
icebp
dec
test
add
lods
out
adc
cli
adc
pop
and
or
je
out
insl
push
or
ret
mov
aas
in
add
adc
cmp
testl
sub
xor
and
pop
push
push
jbe
mov
outsl
loop
jbe
bound
int
and
add
dec
xor
lds
add
jl
sub
scas
test
scas
lahf
mov
cmp
push
xlat
sub
in
and
push
push
push
jg
je
and
shlb
imul
lods
xchg
icebp
call
or
test
mov
pop
popa
jecxz
mov
pop
lock
pusha
xchg
stos
mov
pop
inc
rcrb
mov
mov
icebp
sbb
pop
mov
test
decl
ljmp
push
xchg
adc
mov
divw
stos
leave
test
scas
mov
pop
imul
xchg
xchg
lock
add
int3
adcb
fwait
jb
fcoml
in
dec
nop
fnstsw
push
or
movsl
add
dec
mov
test
in
add
sbb
int3
ljmp
negb
cmp
daa
andl
inc
shlb
test
and
dec
es
xor
and
mov
cltd
jno
add
int
jne
je
lods
xchg
aad
mov
popa
aaa
adc
rcl
xchg
xchg
scas
pushf
cmc
pop
sbb
xchg
leave
aam
les
stos
leave
aas
or
loopne
xchg
push
mov
ret
cmpsb
adc
mov
enter
and
inc
fadd
shll
mov
nop
ret
xchg
adc
adc
jno
pop
dec
sub
clc
pop
cmpsl
push
sbb
loopne
mov
inc
mov
and
clc
shll
dec
cmpw
popa
repnz
or
cs
repnz
fwait
clc
mov
dec
jnp
call
out
es
dec
sub
dec
test
cmc
sarl
arpl
inc
out
shlb
daa
mov
out
adc
insl
jbe
push
aaa
sarl
and
inc
pop
movsb
inc
and
jecxz
fwait
mov
movsb
dec
sub
adc
jnp
mov
jecxz
in
push
cmp
push
mov
jne
into
icebp
jae
loope
loopne
xor
add
xchg
xchg
push
loope
jle
pop
xchg
daa
mov
inc
test
push
aas
sub
push
dec
and
in
pop
jg
push
and
aas
lods
dec
imul
mov
mov
jb
inc
and
call
mov
sub
mov
fdivrl
fistpll
and
dec
in
mov
in
lret
sbb
xchg
cwtl
mov
lods
xchg
mov
outsl
jae
xchg
push
cmp
inc
jmp
ljmp
outsb
push
mov
or
or
mov
movsl
pop
js
add
gs
imul
arpl
repz
sub
popa
or
mov
sub
sub
stos
mov
out
mov
andb
lods
inc
out
fiadds
mov
adc
stos
mov
fildl
push
xor
pop
mov
test
popf
sbb
cmp
mov
in
jl
mov
movsb
sahf
ds
outsb
adc
pop
mov
imul
jno
fs
outsb
pop
andb
add
adc
iret
xor
insl
out
xchg
mov
fistl
outsl
dec
ret
mov
shl
mov
mov
dec
jns
mov
je
mov
loopne
loopne
mov
jo
gs
xchg
movsb
fs
jae
mov
inc
popa
outsl
or
ss
inc
outsb
fadd
cmp
sub
lods
or
pop
dec
xor
notb
pop
fstps
aad
hlt
jbe
lea
ret
cmp
insl
xchg
jg
jno
aad
ljmp
sub
sub
and
mov
mov
fwait
imul
mov
movl
mov
fs
icebp
push
adcb
xchg
adc
jp
mov
mov
push
shrb
cmp
out
enter
xchg
mov
das
aas
pop
mov
jg
pop
out
or
dec
das
mov
jg
cs
mov
ss
pop
into
mov
adc
mov
out
call
sarl
std
outsl
push
sub
dec
add
push
arpl
shl
mov
inc
mov
aad
cmp
mov
jge
pusha
jae
mov
xchg
jbe
xchg
popf
call
sub
es
lds
iret
xor
adc
aaa
iret
xor
loopne
mov
mov
xchg
bound
cmc
xor
fnstcw
cld
iret
jne
and
pop
mov
and
jnp
fnstsw
cmp
pushf
fstpl
std
outsb
jne
push
pop
lods
dec
xor
pop
push
mov
imul
insb
ja
nop
pop
inc
cmp
test
shr
dec
imul
dec
push
aad
jns
mov
ficoml
rcl
push
pop
pop
jle
mov
push
add
adc
repz
xor
pushf
xlat
push
stc
add
sbb
jg
pop
mov
mov
and
sti
xchg
ja
mov
push
or
mov
sbb
out
jge
jl
cmpsb
cltd
mov
std
fcmovu
js
les
bound
xchg
xor
adc
cmpl
mov
sbb
push
hlt
jae
fisubrl
adc
in
pop
sbb
scas
dec
mov
sub
jl
dec
push
mov
clc
or
dec
das
sbb
push
clc
mov
jge
fs
push
xchg
or
pop
pop
fwait
mov
dec
das
mov
pop
cmp
jae
fcoms
js
loope
xchg
mov
push
cs
insb
jg
adc
stc
or
jns
pop
out
fwait
or
call
mov
adc
cld
insl
inc
popf
add
pop
inc
push
insl
sub
ds
pop
push
xchg
jmp
xchg
outsl
es
and
addr16
push
aaa
jnp
jo
mov
sbb
mov
ss
shll
jp
sahf
mov
call
mov
push
xorl
mov
xchg
fstpl
mov
push
push
mov
fimuls
icebp
jo
sub
cmp
andl
pop
das
aam
ret
add
out
xor
xchg
enter
cmpsl
xchg
push
sbb
enter
enter
xor
loop
adc
pusha
push
seto
test
cmpl
xlat
daa
ret
mov
aaa
int3
jbe
mov
stos
dec
jle
push
mov
add
cmpsl
cmpsl
fisubl
ds
int3
jo
bound
mov
xlat
test
out
repnz
push
jo
int3
sub
cmp
and
jp
sub
xlat
push
lods
push
cmpsb
pop
les
add
mov
xor
dec
mov
popf
add
inc
mov
out
incl
adc
mov
shll
mov
pop
xchg
push
in
lret
stc
jmp
cmp
ljmp
or
pop
cmp
mov
push
loop
xchg
jecxz
sbb
mov
sbb
adc
mov
jbe
add
shll
pop
pop
loop
fbld
lds
mov
nop
sub
xchg
gs
call
sub
push
rcll
push
call
loope
jp
mov
dec
mov
mov
and
fmuls
jge
add
mov
icebp
mov
push
dec
icebp
outsb
jb
push
into
cmp
lahf
fistpll
push
push
jo
fs
std
fsubp
or
push
and
and
shrl
push
push
in
adc
or
pop
scas
push
xchg
hlt
out
lds
insb
pushf
jp
loopne
sbb
stos
cs
repnz
orb
cli
cs
into
in
mov
lods
push
pop
test
sub
mov
mov
or
pop
push
jmp
sub
in
xchg
fs
je
lea
into
jnp
lds
les
rorb
sbb
add
or
imul
mov
xchg
nop
lret
sub
dec
in
mov
and
shlb
or
pop
push
xor
shrl
mov
out
je
inc
pushf
mov
adc
popf
bound
adc
push
aas
mov
aam
cli
mov
pop
nop
sub
cli
pop
lods
push
ror
aaa
mov
inc
jno
lret
and
repz
jp
mov
repz
sbb
xor
cwtl
movsl
fldt
fstpt
lds
aas
xchg
adc
test
outsb
push
arpl
push
subb
repz
mov
sbb
mov
paddd
inc
fs
or
pop
mov
int3
dec
in
addr16
push
mov
icebp
adc
mov
add
mov
jmp
pop
push
mov
push
or
pop
daa
stos
xlat
sbb
popf
pop
imul
fcmovnbe
pop
testb
jp
aam
dec
lock
fidivrl
jp
je
movsb
add
lcall
bound
ss
repz
lret
cmpsb
dec
dec
mov
imul
fmull
movsl
mov
push
mov
lret
sub
cmp
dec
fwait
sub
pop
out
rclb
or
push
in
test
pop
into
mov
push
pop
in
sahf
mov
pop
lret
fsubrs
lahf
bnd
add
arpl
mov
jp
xor
push
add
xorb
dec
jp
shrb
sub
bound
gs
iret
ds
fwait
lcall
lock
clc
add
mov
imul
or
lret
jnp
mov
add
dec
stos
fadd
mov
aaa
in
iret
ret
mov
jno
adc
jae
mov
jnp
into
xor
inc
sbb
mov
jl
ss
xchg
imul
mov
cmp
dec
cmpsl
xchg
mov
lahf
and
aas
sub
out
push
in
jo
loope
or
pop
xor
jmp
inc
or
rcll
xchg
andl
repz
loop
xchg
mov
out
xchg
and
adc
arpl
mov
das
mov
cmp
data16
pop
scas
pop
cmp
jecxz
adc
std
and
xor
mov
mov
push
cltd
or
xor
inc
cmp
pop
lds
clc
hlt
mov
cli
out
xchg
or
andl
mov
dec
jge
push
adc
mov
test
sub
jmp
scas
jp
outsl
sarl
inc
mov
in
pop
cmp
lahf
imul
pop
sbb
mov
sub
cmp
lock
cmp
mov
mov
sub
cmp
cld
fucomi
sbb
lcall
cmp
cmp
dec
incb
sar
nop
fs
dec
jge
stos
cmp
mov
pop
cmp
or
add
xor
pop
push
add
sbb
cmp
pop
cmpsb
xchg
pop
int3
xchg
cmpb
mov
stos
into
sub
and
mov
sub
cmpsl
pop
lea
jns
sets
xor
mov
outsl
push
mov
cmp
ss
mov
add
sub
scas
std
lahf
testb
flds
pop
mov
or
push
fsubrs
pop
mov
roll
adc
pop
scas
push
out
adcb
notl
xchg
pop
mov
nop
out
repz
hlt
sarl
sahf
movsb
xchg
mov
fcoml
lcall
lea
sub
lret
aaa
scas
int
ss
in
ficomps
push
fimull
mov
jecxz
xchg
bound
test
cwtl
or
xor
cmp
cmp
ficoms
xor
into
addb
imul
ja
popa
fisttpll
xchg
cld
cltd
gs
push
pop
and
out
mov
xor
shl
xchg
xor
mov
mov
jnp
push
xor
lock
mov
jbe
dec
adc
enter
fbld
mov
test
movb
jecxz
dec
mov
fs
pop
and
hlt
inc
addr16
cld
mov
push
lds
mov
pushf
js
mov
lret
cld
mov
fistl
stos
cmp
cld
lcall
jno
mov
inc
popf
push
mov
out
or
adc
notl
clc
outsb
xor
cmp
mov
movsb
jg
mov
and
push
sub
aaa
jnp
mov
lahf
test
dec
shll
xlat
fdivrs
dec
mov
cmpsb
xor
mov
add
adc
or
fcompl
jmp
xchg
push
enter
mov
push
scas
sarb
andb
int3
push
dec
cmpb
roll
pop
sahf
outsb
mov
gs
or
mov
cmpsb
frstor
mov
cmp
imul
sub
inc
mov
sub
mov
jae
cwtl
fsubl
pop
xchg
out
je
rep
in
mov
rclb
cmp
mov
xchg
mov
enter
mov
push
stos
inc
pop
and
fucomp
adc
or
aam
mov
das
dec
lret
push
ljmp
push
sub
fcomp
mov
flds
push
decb
les
bound
testb
out
sub
dec
rcll
rclb
scas
push
in
inc
and
xorl
jge
movsl
lret
xchg
or
stos
nop
jge
fdivrs
and
and
call
mov
mov
cmp
mov
push
push
jo
nop
andb
mov
pop
mov
sbb
mov
pop
arpl
jne
ljmp
bound
mov
in
popa
add
lock
fst
test
cmp
push
adc
push
adc
call
subl
cmp
sub
jg
sbb
cld
mov
inc
and
add
sub
not
call
notl
rcl
out
icebp
or
sbb
add
or
push
jmp
ljmp
mov
insl
cmc
jbe
out
push
dec
pop
cmc
mov
sub
pop
pop
arpl
cld
inc
pop
mov
pop
cmp
sub
das
push
loope
loop
nop
testb
jne
imul
shrb
cltd
mov
cmpsl
add
cmpsl
sbb
scas
mov
add
xorb
pop
add
movw
call
push
cmp
sub
call
icebp
pop
dec
test
cmp
sub
scas
lret
xor
xor
sub
xor
out
inc
in
fisubrs
shlb
push
xor
int3
lods
mov
mov
imul
jmp
inc
dec
cs
in
fwait
mov
das
dec
js
dec
push
cmp
mov
xorl
test
adc
xchg
jae
cmpsl
add
stc
push
fcmovnbe
shr
pop
fs
subb
push
std
push
shlb
rorb
push
mov
xchg
mov
push
scas
repz
scas
pushf
xor
push
cltd
xlat
cmpsl
inc
mov
aad
mov
push
cmp
and
sbb
mov
data16
mov
stos
pushf
mov
in
add
insl
dec
sbb
lds
and
das
mov
xchg
mov
movsl
lods
leave
stc
inc
aam
rcrb
shr
lahf
notl
out
or
pop
incb
loop
mov
push
cmc
dec
jnp
mov
or
mov
jl
movsl
les
mov
mov
fisttps
jmp
loop
or
pop
in
push
bnd
nop
psadbw
cmp
lock
jp
add
pushf
jle
inc
jnp
adc
adc
data16
sahf
and
xchg
subl
sub
mov
or
inc
jecxz
scas
xor
xor
mov
arpl
lret
xchg
lret
cmp
shr
push
cmp
call
std
test
shr
inc
cmp
xor
and
sub
cmp
movsb
imul
xor
jecxz
sbb
call
and
inc
xchg
lret
cld
sub
add
subl
cmp
or
dec
xor
xchg
xchg
add
xchg
imul
ret
fisttpl
inc
sti
inc
jmp
push
sti
pop
repz
push
xor
and
call
call
mov
out
pop
aas
shll
shll
cmp
xor
mov
arpl
sub
out
mov
popl
xor
cli
std
es
inc
imul
pop
leave
into
push
sub
pop
and
or
rcl
xchg
pop
sbb
or
or
filds
daa
pop
mov
inc
inc
hlt
xor
xor
decb
cmp
cmp
dec
daa
mov
cmp
das
pop
lods
xor
shr
icebp
nop
push
imul
lods
popa
push
inc
and
add
or
jmp
scas
jae
jb
sbb
cmpsl
jnp
lea
ret
leave
shll
insl
pop
popf
inc
loopne
cmpsb
xorl
push
mov
in
outsl
push
cmpsb
inc
pop
xchg
lret
ss
leave
call
shl
push
repnz
dec
out
xchg
ss
push
fiadds
mov
pop
mov
pusha
fists
mov
test
jl
and
jns
jle
insb
xchg
outsb
mov
lea
lock
ljmp
imul
aad
xchg
dec
jmp
mov
fucom
movsb
btr
cmp
push
jne
sti
call
fwait
mov
fsts
and
mov
add
inc
call
mov
xorb
xchg
mov
mov
mov
sub
aaa
popl
bt
bt
bt
call
adc
sbb
shr
fnsave
push
scas
push
mov
lea
sar
repz
dec
jno
scas
daa
mov
sub
jmp
daa
out
xor
xor
into
notb
call
jbe
dec
insb
jne
pop
test
ficompl
mov
xchg
add
fsubrs
adc
nop
daa
adc
iret
scas
cmp
push
outsl
push
dec
xor
mov
push
movsl
mov
shr
stc
notb
pop
scas
or
mov
mov
scas
pushl
push
pushl
clc
or
pushl
push
lea
je
bswap
seta
mov
bswap
mov
bswap
movsbw
bswap
lea
pushf
pushf
lea
jle
push
push
pushl
popl
jae
push
lahf
push
movsbl
call
adc
iret
shr
aam
inc
cmpsl
inc
mov
push
mov
mov
sbb
pop
scas
dec
shlb
fisttpl
aad
or
sahf
pop
mov
or
js
xlat
sbb
pop
lods
loope
mov
lods
movsb
cmp
jecxz
xor
mov
movsb
or
push
gs
pusha
and
jo
test
push
ficoml
and
mov
ss
mov
out
fadds
loopne
or
je
jle
jle
sarb
faddp
arpl
int
pop
in
daa
pop
into
shr
lcall
in
add
push
decl
fmuls
scas
imul
arpl
repnz
xchg
cmpsl
int3
cmp
fisttpl
xor
rcrl
hlt
jmp
bound
cmp
mov
clc
lcall
rcl
ret
mov
loopne
jmp
push
cld
pop
sti
push
sbb
dec
arpl
pop
cmp
movw
lea
ja
inc
sbb
xor
pushf
sub
shr
or
movsbw
sub
add
setnp
or
mov
rol
setbe
pusha
rcr
mov
cmp
repnz
pushl
push
push
movl
lea
jne
movzbl
movb
pushf
movb
mov
lahf
movzbw
call
lock
into
leave
shr
or
jb
outsb
cltd
insb
ja
pusha
xchg
imul
insl
iret
hlt
jne
fildll
rcr
xchg
aaa
jae
jecxz
jg
ret
rclb
pusha
add
push
out
dec
xchg
xchg
pop
add
mov
addr16
pop
addr16
jb
xchg
and
fisubl
popf
push
adc
mov
insb
roll
cmp
sbb
sub
gs
scas
sahf
mov
inc
in
popf
jg
cs
add
xorb
cld
push
inc
fisubs
into
lds
addr16
or
dec
mov
sbb
xchg
adc
push
test
call
add
dec
outsl
arpl
inc
jb
add
push
leave
shr
xchg
jmp
add
mov
fldt
imul
jae
scas
daa
mov
ss
lods
push
mov
in
cld
movsb
addl
popa
adc
xchg
jle
cmp
jp
cmpsl
add
adc
pop
sbb
sub
jmpw
pop
add
mov
enter
adc
pop
jecxz
jp
lods
mov
fbstp
push
xchg
hlt
enter
sub
xchg
je
outsl
test
imul
mov
adc
mov
mov
and
add
cmp
outsl
mov
mov
incl
sub
aam
xor
shr
pop
dec
sub
cmp
xor
daa
xorb
insb
dec
out
cld
cmpb
pushf
pushf
call
lea
jmp
lea
jne
adc
clc
call
jle
lea
ja
push
pusha
lea
jb
stc
test
cmpb
push
pusha
push
lea
jne
neg
and
inc
or
mov
jmp
out
sub
shr
push
xchg
xchg
outsl
cmpl
test
jmp
or
jne
fdivrl
and
lcall
wbinvd
inc
xchg
jns
es
sub
stos
dec
cmp
cwtl
nop
clc
mov
mov
clc
mov
fldenv
loopne
mov
cmp
pusha
or
dec
xor
mov
xchg
push
ret
decl
pop
repz
cli
push
cmc
push
out
loop
jne
shlb
imul
shr
dec
test
movsb
dec
cli
repz
jmp
jmp
adc
xchg
or
xchg
popa
xchg
bound
ljmp
int3
test
neg
push
fsubrl
adc
out
or
jle
sbb
cmp
cmp
jae
add
stos
push
and
fwait
pop
sub
shr
dec
pop
and
lret
sub
sbb
pop
sub
inc
scas
pushl
sub
rcl
add
inc
gs
outsl
fs
gs
imul
add
mov
or
insb
jmp
stc
jl
or
sahf
in
or
add
push
icebp
mov
sub
add
test
or
in
std
idivb
sub
fildll
in
fisubrl
in
in
int3
fsubl
cmp
fldenv
in
loope
testb
and
jmp
add
fsubp
repnz
add
jl
rolb
jmp
das
cld
jp
les
or
xlat
jg
or
mov
stc
jl
or
pop
test
rcrl
sti
or
add
testl
stc
mov
mov
jecxz
sub
fldl
or
mov
pop
rolb
mov
add
enter
ljmp
xlat
jecxz
out
in
fistpll
sti
mov
or
fsubrs
sti
mov
jbe
out
sub
in
cwtl
or
sti
cmp
mov
ret
cmpsl
cld
jbe
rclb
push
xchg
decb
cmc
jae
testb
out
add
test
add
ja
sti
pop
or
clc
mov
cmc
shll
or
fstpl
les
sbb
jp
icebp
sub
in
clc
aad
add
stc
push
mov
jl
or
dec
sti
or
adc
and
cmp
push
ret
push
mov
or
out
out
mov
add
pop
dec
pusha
xchg
enter
lock
cld
or
loope
enter
inc
add
mov
in
jl
or
test
fcomip
or
repz
jecxz
fsin
or
imul
add
ffree
fidivrs
or
imul
dec
or
fcomi
hlt
repz
loop
jmp
jl
in
jmp
icebp
and
pop
or
imul
aaa
or
fcomi
hlt
jmp
pop
aad
pop
in
push
inc
test
mov
test
sti
je
stc
out
aam
in
cmp
les
jmp
shrl
imul
out
fstps
in
clc
fiaddl
jmp
pop
cld
in
std
fimuls
jmp
adc
cli
sti
test
add
lock
stc
or
jl
sti
jmp
mov
shlb
mov
push
jle
inc
jns
cmp
cmp
xchg
rcrb
pop
frstor
mov
enter
add
loope
dec
or
dec
sub
in
leave
int3
scas
jne
push
sub
add
mov
pop
xor
dec
inc
mov
lock
add
js
cmp
testl
dec
lret
sub
add
push
push
pop
out
inc
or
cmp
out
jb
ds
ja
out
ret
jl
inc
test
mov
mov
out
mov
cli
pop
lret
fadds
lret
cmp
stos
mov
movsb
lds
lods
pop
xchg
or
popa
fdivs
sub
or
jp
scas
or
sbb
dec
mov
lods
and
fsubs
imul
pop
pop
in
mov
shl
cmc
push
arpl
fidivrs
repz
mov
aam
mov
push
fbstp
mov
add
jno
jae
pop
xor
dec
scas
jl
test
aaa
ja
jl
mov
xchg
or
jmp
jne
divb
mov
shrb
sub
in
pop
test
ret
sbb
scas
jo
cli
ds
cmp
hlt
stc
adc
jp
inc
xchg
or
sbb
es
ja
icebp
cmp
test
xor
popa
int3
sbb
leave
les
movsb
and
sub
jne
mov
dec
outsb
mov
movsb
or
ds
xor
leave
lock
das
mov
inc
mov
mov
jno
mov
cmc
xor
fs
add
mov
mov
or
pop
or
xor
mov
sub
fld
outsb
mov
mov
ret
dec
enter
popa
pop
mov
test
add
fisttps
xchg
in
test
ret
xor
rcrb
fmul
stos
mov
mov
mov
dec
cmpsb
cmp
mov
mov
sub
push
int3
dec
sub
outsl
add
shll
adc
in
xchg
in
hlt
mov
add
imul
or
cmc
roll
xchg
pop
negl
adc
sbb
inc
jnp
mov
das
push
rcrl
mov
xchg
rolb
int3
scas
mov
xor
or
pop
mov
lret
inc
pop
stos
mov
xchg
or
test
jecxz
fdivs
sbb
cmp
aad
mov
or
xchg
sub
mov
add
or
ss
stos
stos
ffree
call
jmp
adc
mov
leave
add
mov
lock
int3
repz
cmp
adc
loop
adc
dec
repz
ret
cwtl
dec
bound
xor
scas
dec
faddl
stos
fistpll
dec
inc
mov
decb
loop
scas
inc
rcrb
cmc
push
adc
imul
sub
stc
xchg
mov
add
imulb
shl
mov
out
add
push
adc
dec
mov
in
mov
cld
stos
sbb
cli
push
xchg
mov
je
ret
jb
mov
sub
sub
test
stos
cmp
std
iret
dec
insb
insl
sub
mov
inc
into
rcr
cmp
sbb
sub
loopne
cmp
push
andb
add
push
pop
mov
sbb
arpl
inc
in
lods
pop
inc
mulb
or
jmp
xchg
mov
hlt
add
mov
jne
pavgb
jb
add
mov
arpl
xorl
leave
pop
push
or
inc
loopne
cmp
mov
mov
iret
xchg
pushf
stos
mov
pop
lret
cld
pop
out
cmp
in
pop
or
in
pusha
pop
roll
push
fcmovne
mov
ljmp
shl
sub
js
push
call
mov
fistpll
or
push
std
out
mov
add
mov
xlat
rcll
test
cmpsl
sbb
popa
ja
in
pop
mov
fmulp
test
neg
cmp
pushl
gs
hlt
mov
inc
fucomp
js
neg
and
out
or
arpl
fnstsw
scas
xor
mov
mov
cmp
xor
gs
rolb
rcr
mov
loopne
cmp
jnp
mov
out
arpl
js
repnz
push
sti
stos
cli
dec
test
jo
js
ficoms
add
clc
ret
add
in
adc
jl
out
mov
jb
lcall
and
fdivs
add
add
jge
jmp
mov
pop
mov
cli
out
add
adc
pop
pop
dec
xchg
add
pop
cwtl
sti
sub
test
cltd
scas
lret
mov
mov
sub
int3
add
pushf
outsl
iret
dec
sub
decl
mov
call
jle
fbld
test
fisttpll
pop
mov
into
test
into
std
stos
adc
daa
or
jmp
pop
lret
js
shll
flds
sub
pop
int3
pop
push
sub
test
xchg
ret
add
sub
movsb
flds
sbb
add
test
je
loopne
repz
add
in
xor
inc
jb
mov
ljmp
int3
nop
sub
test
test
icebp
roll
leave
mov
sub
sti
or
push
roll
stc
rcrl
or
pop
or
gs
addb
dec
in
ret
aam
int3
jno
jmp
rol
and
in
enter
cli
or
mov
adc
and
jns
pop
aam
and
cmpsl
xchg
jp
add
add
xor
shl
jns
fstps
neg
xor
shrl
cmc
lret
add
jge
jecxz
mov
int3
ljmp
outsb
stos
stc
stos
rcrl
sub
cmc
fstps
xor
std
repnz
aad
sbb
xchg
mov
shr
jl
jmp
fdiv
stc
push
sahf
mov
je
fisttpl
mov
add
jle
or
mov
call
mov
ret
fnstcw
lock
out
dec
push
sbb
xor
jecxz
or
rorb
add
ficoms
cmpb
out
iret
stos
aad
repnz
stos
or
mov
int3
fcomp
jmp
dec
out
cli
pop
ficomps
jo
mov
dec
fadd
lods
out
adc
shll
adcl
repnz
sbb
jnp
fbstp
cmpsl
sub
lret
sub
sti
xlat
int
pusha
iret
cwtl
lock
test
in
enter
test
lcall
shl
xor
out
out
xchg
pushf
scas
mov
pusha
mov
sbb
out
add
or
or
loope
add
loopnew
fbld
daa
push
or
cs
in
jmp
or
lret
outsl
add
shl
jmp
in
gs
jnp
push
mov
jae
clc
xlat
sub
mov
xchg
in
xlat
fists
mov
mov
pop
icebp
mov
mov
jns
aam
cli
xlat
out
and
or
pusha
std
xor
push
shl
xor
lods
aad
jns
jmp
shll
or
lret
rol
xor
ret
xchg
lods
iret
mov
push
inc
repz
dec
stos
push
jae
enter
jmp
adc
in
call
stos
inc
addb
ds
lret
mov
dec
and
int3
js
sbb
or
lock
cmc
jo
push
jb
add
lahf
in
or
hlt
test
xor
xor
out
adc
sbb
fcmovnbe
fdivl
cmp
cmp
inc
hlt
outsl
push
add
das
or
sti
sbbl
mov
lcall
or
out
clc
fdiv
dec
call
jnp
jmp
cld
mov
aad
inc
cltd
pop
ret
mov
mov
int3
mov
fisttps
fisubrs
and
cld
fdivs
fbld
aam
ss
les
ret
push
or
xlat
and
aad
sub
psubq
into
push
fdiv
pop
fnstcw
add
std
loope
arpl
shl
cmp
aas
aad
sahf
std
sub
jae
lods
adc
push
fwait
test
xchg
or
pop
fs
rcrb
mov
pop
orb
xor
ss
lods
fcmovnbe
sar
stc
in
cld
call
pop
jns
ror
icebp
fildl
or
mov
jns
cli
gs
out
popa
cmp
je
jle
inc
dec
inc
stos
test
aaa
and
faddl
xor
loopne
or
in
movsl
dec
mov
add
cmp
mov
fcompl
stc
call
mov
mov
or
jecxz
or
fisttps
jp
out
cld
add
stos
cld
fdivp
loopne
flds
lea
add
mov
lret
and
inc
loopne
adc
mov
movsl
mov
loope
add
ja
loop
aam
test
iret
or
test
sbb
loop
in
pop
cld
es
jmp
pop
cli
jecxz
pop
js
int3
cmp
rolb
das
stos
aam
test
mov
loopne
lret
jl
roll
mov
adc
sarb
or
push
rolb
inc
pop
lock
pushf
stos
in
arpl
jmp
sbb
aam
jecxz
lock
sub
add
or
shr
fwait
mov
mov
push
loop
fstpl
rol
xchg
les
dec
shrb
iret
pop
xchg
decb
js
in
outsb
push
icebp
or
cli
mov
cmp
cld
push
mov
aad
test
push
test
sahf
call
aad
out
lods
add
cmpl
adc
add
xor
and
jmp
xchg
std
cli
mov
int3
ljmp
in
cltd
xchg
and
sbbb
pop
mov
dec
push
mov
xchg
sub
in
fwait
mov
add
sahf
mov
mov
inc
sub
fdiv
sub
pushf
push
das
shll
cwtl
iret
out
mov
flds
scas
out
inc
and
jnp
mov
loop
dec
adc
pusha
mov
add
push
daa
subb
loope
mov
stc
jmp
or
mov
mov
imul
and
loopne
pushf
inc
jmp
mov
jg
mov
les
test
xor
add
sub
inc
jp
scas
and
call
gs
ja
stc
das
ljmp
jp
fwait
cmp
shl
sub
aas
lock
fistpll
std
or
test
shll
int
filds
cld
xchg
or
or
loopne
je
mov
outsl
in
test
int3
call
add
add
lea
cmc
or
mov
in
pop
push
push
mov
pusha
les
xchg
in
cwtl
add
fstpt
or
fptan
fldl
test
scas
fcmovnb
aam
add
clc
mov
cmpsl
loopne
mov
in
lds
mov
add
mov
in
add
add
ret
fidivrl
loop
inc
jno
inc
pushf
xor
fcompl
mov
push
aad
or
in
psubw
cli
shll
pop
dec
fidivs
xorb
jb
adcb
addb
rorb
mov
xchg
sti
dec
lcall
cmp
in
loop
loope
cld
es
push
jl
lods
stos
cld
loope
pop
fs
or
or
lret
lret
or
cmp
add
test
mov
enter
in
cmp
mov
or
in
cmp
ret
mov
lret
rcr
push
mov
ret
addr16
mov
jg
push
rcll
sti
push
jae
fstps
call
push
or
ljmp
jmp
mov
xchg
aam
aad
mov
jmp
and
jmp
mov
sar
mov
stos
sub
xlat
in
cmp
ret
adc
rolb
cmp
push
cld
aad
or
jnp
enter
and
shlb
out
add
ljmp
mov
pop
add
rcr
in
xlat
filds
cs
lret
les
std
push
and
add
lds
add
dec
mov
lea
fiaddl
cmc
leave
sub
add
imul
pop
cld
add
inc
in
aam
inc
push
sub
pop
cmp
jmp
mov
fcmovnb
ret
stc
or
in
ret
fmul
js
ret
inc
out
fcmove
scas
sbb
and
sti
enter
push
test
test
rolb
jl
inc
test
sar
add
jns
insl
jmp
repnz
mov
dec
xor
lock
pop
sub
or
mov
adc
mov
ficoms
inc
in
ret
fcmovne
push
cmp
cmpsb
lds
insl
xchg
cmp
enter
clc
in
in
pop
pop
shll
in
adc
mov
movl
dec
push
rclb
sahf
testl
add
mov
push
pop
clc
push
mov
lret
fisttpl
pusha
roll
sbb
mov
popf
or
loop
xor
push
or
lret
in
repz
daa
xchg
jmp
pop
js
add
jns
jl
sub
and
sub
rolb
cmc
dec
push
notb
hlt
enter
iret
inc
lcall
jbe
cmp
outsl
inc
out
or
mov
mov
mov
add
les
lock
rorb
andl
and
in
lret
mov
add
gs
jp
lods
push
mov
leave
push
add
jmp
leave
mov
decl
jg
push
jecxz
jecxz
cld
enter
inc
or
pop
and
cwtl
fdivrl
pop
mov
lds
push
addr16
call
pop
imul
mov
out
js
xor
sahf
movsb
xorl
sahf
cmpsl
add
sahf
pop
xchg
cmc
pusha
or
or
cwtl
jne
stos
cmc
test
cmp
xor
sbb
mov
adc
mov
int3
movb
or
mov
add
cld
or
mov
ret
mov
out
jmp
pop
dec
or
sti
fsubr
out
cmc
add
out
xor
repnz
or
aaa
or
xchg
lock
mov
gs
pxor
shl
test
jl
pop
cld
and
icebp
adc
mov
jae
xor
out
jae
add
mov
xor
sti
xor
xor
repnz
or
repnz
imul
out
repnz
cmp
and
insb
test
idivl
orb
call
mov
mov
mov
mov
clc
stc
mov
scas
jl
jno
pop
jae
clc
cmp
ret
jp
cwtl
lods
mov
stc
or
stc
testl
movsb
xor
inc
dec
lret
push
fscale
push
or
fs
xor
out
enter
out
divb
jno
mov
pop
mov
add
sbb
ljmp
sub
or
push
lods
fisttpll
inc
cmpsl
lcall
inc
jecxz
add
movsl
cmp
mov
ret
imul
les
xor
xlat
test
jb
jmp
add
lods
add
lret
adc
add
ljmp
stos
pusha
cwtl
adc
jbe
shrl
out
test
stos
jp
dec
addl
xor
cli
mov
and
nop
dec
mov
cmpsl
jnp
and
ret
cli
mov
je
int3
sbb
rorl
mov
xor
xlat
xor
mov
lcall
add
iret
or
or
out
ss
mov
and
sti
cmp
lcall
pop
mov
fst
movsl
in
cmp
pop
stc
adc
xor
fcompl
sub
mov
jle
shl
idivb
jp
push
rorl
lods
ljmp
call
sarb
in
cmc
or
aaa
jns
cld
lret
aam
pop
dec
jmp
mov
lret
inc
mov
hlt
cmp
push
or
mov
cld
cmp
arpl
lret
cmp
mov
mov
mov
test
sti
cs
cli
mov
xrelease
jg
imul
jns
mov
jmp
jg
js
dec
pop
push
mov
xor
mov
or
orb
jl
out
mov
pop
mov
jmp
mov
clc
cmp
sar
cmpsb
movsl
cmp
add
dec
lahf
push
sbb
dec
rcl
roll
add
loop
lods
cmpsb
stc
or
mov
add
sti
pop
test
test
into
shll
ja
roll
mov
sbb
inc
stos
jle
xchg
stos
add
and
and
mov
push
push
jmp
dec
fdivrl
insb
or
stos
mov
in
dec
stc
xor
or
cld
mov
lods
mov
stos
push
sub
repz
sub
ja
jmp
idivl
stos
sub
incl
stos
orb
stos
lret
sbb
es
mov
push
jno
add
mov
xor
dec
sub
pop
cmp
xchg
mov
fdivrl
js
clc
cwtl
inc
add
sarb
adc
jns
and
add
push
dec
mov
pushf
cli
mov
add
or
roll
mov
or
hlt
insb
out
rorl
xor
std
and
ret
mov
fwait
mov
inc
fstpl
jl
js
sbb
sub
popa
mov
out
ret
movsb
aam
xchg
sbb
iret
scas
dec
in
jns
mov
push
cmc
out
xchg
repz
dec
inc
or
faddp
push
orb
imul
sbb
rorb
aad
test
mov
lcall
std
xchg
js
push
int3
pop
in
repnz
outsl
cld
repz
test
jl
fs
sar
dec
xchg
add
idiv
stos
mov
mov
loop
rcr
pop
jo
sti
loopne
adc
insb
add
rolb
test
cmp
jl
les
jl
xor
data16
pushf
pop
stc
mov
js
push
inc
stos
insb
or
stos
scas
jg
pushf
add
cmc
cmp
insb
inc
inc
dec
mov
fmull
or
mov
xchg
xor
pop
ror
cmp
rcll
aas
popf
and
or
repz
push
vpmacsswd
dec
dec
jo
fwait
mov
flds
mov
cmp
add
add
icebp
int3
cmpsb
jae
les
insl
mov
leave
fs
dec
in
cmpsl
cmp
stos
aas
push
sbb
stos
xchg
cmp
inc
es
js
dec
inc
or
or
pop
faddl
je
rolb
ljmp
jmp
fdivr
je
sar
sti
ljmp
jmp
fdiv
je
shl
repz
jmp
fsubr
je
shr
jmp
jnp
inc
jmp
fsub
je
shl
jecxz
jnp
inc
loope
loopne
fidivs
out
fsubl
or
ja
or
add
cmp
lock
test
xor
pop
hlt
ds
xor
int3
repz
stos
mov
stos
push
or
cld
out
cmp
orb
jge
push
fwait
repz
out
jl
les
enter
cld
pop
test
mov
or
jmp
cld
aad
mov
imul
fmul
test
enter
cld
mov
les
jmp
cmc
jo
enter
imul
mov
aam
test
enter
in
jl
inc
fucompp
xor
mov
clc
test
ds
test
enter
in
jl
enter
inc
cld
cmc
test
in
cmp
xor
lea
std
imul
icebp
enter
cld
lock
mov
jmp
mov
out
daa
jmp
cld
loope
stos
enter
imul
mov
ljmp
enter
in
jl
enter
inc
cld
out
push
mov
cmp
les
in
call
add
test
mov
cmp
les
aam
test
enter
in
jl
inc
loope
es
cld
fdivl
enter
imul
or
daa
mov
jae
add
mov
inc
xchg
jnp
out
dec
scas
out
lock
adc
cmp
shlb
or
dec
cmp
xor
push
enter
cmp
xor
shlb
scas
inc
jno
jg
sbb
xor
push
xor
pop
mov
mov
into
cmp
or
mov
or
mov
xor
mulb
pop
dec
cld
sti
or
loopne
mov
or
fdivs
sub
jno
hlt
or
test
scas
clc
out
nop
xor
in
and
fiaddl
cmp
jnp
jl
sub
xor
iret
push
mov
xchg
push
sub
sub
rorl
movsb
or
movsb
or
mov
out
cmp
push
xchg
add
push
scas
cmp
hlt
mov
inc
or
repnz
mov
and
movsb
fmuls
jl
scas
xor
pop
xchg
xchg
arpl
stos
or
dec
js
or
addr16
mov
xchg
icebp
pop
and
lret
cmp
xor
clc
push
xor
xor
mov
add
lock
lahf
jo
mov
aaa
ret
pop
push
add
inc
jns
pop
out
cmpsl
sub
test
ret
add
cli
stc
jp
mov
dec
fbstp
cmp
das
inc
or
icebp
test
mov
out
scas
xchg
in
lret
leave
sbb
pop
push
or
in
mov
les
test
sub
inc
jns
add
sub
lret
les
adc
ss
in
mov
and
cmp
les
add
adcl
jge
out
icebp
lret
jp
or
call
test
fs
cld
jmp
cmp
adc
addb
repnz
loopne
push
ret
mov
mov
cld
xlat
lahf
movsb
push
add
ret
dec
mov
in
xor
movsb
ljmp
in
push
cmp
in
in
imul
call
in
ret
shll
cli
and
or
iret
inc
add
mov
idivb
push
dec
jo
out
rorb
rorb
popa
lock
mov
sti
in
cmp
in
std
sbb
loop
or
test
adc
repnz
mov
push
mov
jae
mov
call
pop
lret
add
loop
jnp
rorl
loop
or
nop
stc
dec
adc
sub
fstpt
sbb
loopne
push
mov
lock
jp
sbb
jg
test
adc
sbb
fs
mov
push
std
dec
sub
or
sarl
jle
sbb
loop
cmp
mov
loop
movsl
data16
leave
and
lods
or
sahf
loop
out
or
mov
jl
std
or
imul
aad
in
sub
ret
sahf
cs
inc
add
or
mov
ds
sbb
cmp
ror
pop
icebp
jl
add
mov
jnp
lret
sub
sub
add
imul
sahf
std
mov
rcll
mov
adc
or
jle
cmp
stc
and
in
adc
mov
sbb
dec
adc
idivl
dec
mov
mov
call
or
add
movsb
sub
aas
jne
xlat
sub
out
insb
dec
sar
mov
or
push
scas
mov
dec
mov
daa
call
add
ret
loope
lods
pop
pop
xchg
adc
inc
inc
sub
sbb
lahf
mov
fnstsw
sbb
insl
pop
cs
xor
iret
andl
lods
or
jns
out
into
imul
cmpsb
jno
lods
push
xor
lock
sub
add
data16
test
mov
push
and
or
arpl
in
or
insl
or
rcl
dec
jne
lea
in
int3
jge
jo
repz
lods
test
shlb
cwtl
ret
add
cli
mov
movsl
fsubr
cmp
push
push
mov
push
inc
hlt
lret
ljmp
pop
shrl
mov
in
jl
or
push
les
mov
stc
jmp
shlb
cmp
push
sahf
in
mov
rcl
dec
stc
or
stc
or
xlat
xchg
pop
in
adc
in
mov
mov
addr16
dec
shrb
mov
jp
jae
rolb
arpl
faddp
into
lcall
sbb
jg
mov
leave
mov
orb
stos
jg
jo
xor
scas
icebp
fsubrl
rorb
sarl
mov
ja
cld
call
xlat
test
xor
loop
inc
jp
fsub
mov
repnz
jns
mov
rcll
mov
js
push
in
std
lock
cli
enter
out
enter
in
stos
rorb
in
jmp
jns
cld
jmp
jl
test
add
mov
mov
cld
cli
adc
add
ret
stos
jmp
js
outsl
test
xchg
lret
lock
or
mov
in
or
fstpt
in
add
jmp
insb
mov
ljmp
test
stos
fstl
jmp
xor
inc
shll
mov
inc
jecxz
cmc
leave
cmp
loop
or
push
mov
cli
inc
sar
loope
add
mov
mov
inc
pop
call
mov
mov
xlat
inc
lcall
mov
add
inc
lods
addr16
or
pop
mov
test
add
js
push
cmc
or
std
int3
repz
ret
sbb
inc
and
repz
les
or
jmp
hlt
and
enter
imul
mov
loop
xorb
lret
mov
out
les
filds
xchg
or
add
movsb
or
fildl
aam
add
in
lea
aad
cmp
fdivrl
or
push
inc
je
or
jl
inc
fwait
jmp
rolb
stos
or
jmp
fnsave
xor
ret
hlt
mov
out
cmp
jl
stc
mov
or
xor
xor
sub
testl
sub
inc
lea
lahf
add
repz
xchg
cmc
clc
sub
js
loopne
cmpl
xor
mov
pop
fdivp
es
jmp
ja
fadds
jl
push
fcoms
les
shll
jae
addb
shrl
fs
mov
sbb
or
ja
in
les
or
movsb
sbb
xchg
cld
aaa
jo
mov
and
jl
mulb
xor
sbb
test
add
test
test
or
mov
enter
lods
inc
repz
fnstcw
jmp
jbe
daa
xchg
cmpsl
hlt
dec
daa
xchg
ja
xchg
mov
mov
sub
shll
jg
or
sub
add
jo
or
lock
jecxz
dec
testl
or
push
sub
dec
iret
xor
or
pop
stos
inc
shl
sarb
inc
test
clc
std
jg
imul
out
imul
push
and
std
test
mov
add
inc
or
pushf
lock
repz
or
test
aaa
cmp
lcall
inc
xor
mov
cld
adcl
xor
fdivp
nop
mov
fidivrl
cld
out
jl
inc
push
cmp
add
rorb
mov
xchg
jns
cmp
fistpll
fisttpl
aam
mov
out
xchg
loope
dec
xchg
dec
leave
ret
mov
jnp
or
jo
jge
int3
int
sub
loope
xor
sahf
int3
fnstsw
scas
mov
test
jae
in
lea
iret
dec
dec
daa
lcall
mov
xor
enter
xrelease
shl
jmp
push
decb
and
mov
add
jae
jge
or
sarb
inc
int3
jmp
or
mov
hlt
lret
repnz
cmp
loope
mov
or
out
xor
je
clc
rcr
lret
sub
xchg
cmp
aaa
or
add
or
adc
nop
cmp
xlat
pushf
xchg
mov
lea
inc
cwtl
or
rclb
aas
mov
test
es
fmuls
or
xor
sbb
add
ss
hlt
inc
lret
lret
test
test
cld
xor
add
sti
cmp
mov
add
sti
and
mov
int
push
or
mov
nop
push
cwtl
cmpsl
pushl
rolb
int
inc
fwait
sti
push
mov
int
in
mov
push
mov
mov
sti
push
icebp
jmp
int
cli
add
pop
int3
inc
inc
pop
enter
mov
jle
out
testb
mov
mov
test
add
jmp
push
aad
pop
in
pop
out
mov
mov
loop
hlt
add
dec
mov
mov
popw
lock
jge
fstpt
clc
stos
mov
js
cltd
loope
dec
clc
cmpsb
xchg
pop
jns
je
lret
inc
mov
or
adc
in
lret
iret
int
in
idiv
add
and
pop
lock
sub
add
psubsw
cmp
lock
pushf
and
sbb
movl
movsl
cmpsl
dec
sbb
fs
in
hlt
in
loope
loop
or
rorl
push
cmp
in
sbb
mov
test
xchg
loopne
test
fnstcw
hlt
sub
xchg
insl
test
cmp
cmp
leave
sub
stos
or
pop
iret
xor
mov
or
pop
dec
sbb
enter
inc
add
fstpl
mov
xor
out
or
or
scas
jge
ja
jp
mov
and
or
pop
cmpsb
add
cltd
cmp
and
inc
fisubrs
or
or
inc
dec
sbb
push
into
adc
pop
dec
insl
dec
cmpsl
inc
lock
jp
cmp
sub
cmc
lea
stos
mov
into
cs
arpl
xor
pop
test
mulb
cmp
daa
mov
jg
fdivr
mov
std
cmp
pop
ret
mov
pop
addb
fistpl
sub
dec
mov
insb
mov
out
mov
or
sbb
push
sub
push
adcb
lret
mov
pop
les
push
mov
jnp
pop
clc
gs
pusha
fidivrs
std
add
or
cmp
out
cmp
dec
push
xchg
mov
bound
add
add
add
push
int
out
mov
mov
mov
into
enter
or
dec
jl
out
pop
fdivp
or
fmul
jl
das
imul
mov
mov
xlat
jmp
das
push
test
or
sbb
rclb
xor
pop
outsl
jns
pop
ljmp
inc
test
leave
mov
test
or
mov
cmp
fcompl
sub
push
pop
ds
or
sub
mov
and
lret
rorb
mov
dec
in
movsl
fmull
mov
adc
add
jl
jbe
inc
aas
pop
mov
orb
hlt
das
ja
fmulp
pushf
mov
fists
cmp
jg
cli
shl
xchg
adc
add
stos
dec
pop
mov
lods
dec
mov
dec
and
rcrl
mov
push
jg
stc
jl
xor
xor
test
js
mov
dec
pop
inc
xor
pop
push
add
bound
adc
lea
je
repnz
cli
loopne
cld
mov
sbb
shl
add
cs
popa
test
pop
push
dec
or
icebp
stos
sbb
ds
mov
pop
rcr
jg
hlt
stos
add
fucomp
fistpl
ror
or
je
dec
imul
mov
out
pop
imul
test
mov
dec
adc
loop
cmpsb
jbe
sti
mov
enter
add
aad
xchg
jae
lea
scas
sbb
add
add
repz
lods
sub
lods
sahf
repnz
push
fsubrl
xchg
xor
popa
insb
sub
dec
xchg
add
mov
ja
ds
imul
les
push
dec
ljmp
ljmp
or
aam
iret
adc
aam
shl
xor
sarb
mov
or
test
stos
leave
in
ror
adc
daa
mov
push
jl
or
sbb
ds
lods
cmpsl
mov
xlat
hlt
scas
in
mov
cmp
ror
into
in
push
test
adc
inc
mov
jl
fnsetpm(287
xor
mov
or
in
jo
pushf
xchg
xchg
dec
repnz
push
pop
js
and
test
or
dec
cmp
out
das
inc
jecxz
adc
add
fdiv
mov
rolb
mov
movsb
mov
cmp
jno
leave
movsl
inc
xchg
sarl
popa
sahf
lock
jns
mov
test
xor
add
xchg
nop
or
imul
popa
loop
sbb
fdivp
cmp
lods
rorb
insb
repz
jl
xor
and
sarl
test
fdivr
and
xchg
and
cs
js
je
pop
stos
popa
test
test
add
mov
inc
addr16
dec
push
js
dec
cld
cli
popf
xlat
imul
or
xor
add
mov
dec
stc
movsl
pop
cli
mov
rcl
subl
sahf
out
cmp
enter
mov
lcall
dec
mov
cld
int3
mov
dec
sub
inc
test
js
add
and
pop
ds
dec
mov
xchg
mov
cmpsb
xor
sbb
fldlg2
cmp
fnstenv
fxch
or
jno
mov
push
jmp
roll
test
imul
pusha
push
mov
cld
shl
push
add
lret
gs
fwait
xlat
or
cmp
mov
fcmovu
test
jmp
adc
leave
or
xor
adc
mov
mov
cmp
mov
fldln2
xor
xor
orb
hlt
push
lret
rcr
xchg
rorl
out
sti
in
or
out
ror
repz
pop
add
and
pop
cmp
sub
adc
test
cld
mov
jnp
add
push
add
mov
lret
dec
mov
or
aad
test
in
push
adc
mov
bound
aam
add
popf
insb
inc
mov
xchg
push
adc
das
add
leave
call
sbb
xchg
and
cmp
les
dec
or
gs
mov
pop
sti
mov
test
add
jb
divb
add
mov
ret
cmp
push
scas
or
mov
mov
inc
enter
pusha
pop
or
leave
out
mov
or
lret
inc
inc
inc
iret
sub
lret
dec
enter
sub
xchg
pop
ror
sub
pop
pop
inc
dec
mov
xchg
out
repnz
pop
faddl
bswap
and
test
leave
or
js
out
aad
push
push
iret
test
xchg
out
mov
mov
adc
push
hlt
shlb
inc
xchg
fwait
mov
and
aad
sarl
loopne
daa
roll
fidivrl
mov
fidivrs
shl
xchg
inc
jmp
sbb
or
adc
or
into
out
xchg
dec
cld
out
shr
ljmp
in
jno
dec
or
adc
mov
lret
ret
push
dec
std
sub
out
inc
inc
test
jl
test
in
jecxz
or
je
and
sti
std
lret
mov
mov
dec
and
scas
jae
ret
push
sbb
mov
pop
gs
cmp
and
dec
push
les
inc
lret
lret
orl
inc
dec
adc
adc
jl
insl
test
mov
outsb
cmpb
jne
jmp
sbb
jg
push
push
repnz
cld
in
scas
jp
fidivrl
mov
push
std
cmp
push
or
repnz
in
sbb
call
outsl
in
clc
js
js
cmp
add
rorb
mov
in
int3
sahf
and
cmc
inc
leave
dec
mov
cli
mov
cmp
mov
push
scas
mov
push
js
enter
or
xor
jo
jno
fsubr
js
cli
mov
imulb
sar
inc
andl
in
add
clc
jl
jo
cmp
sahf
rcr
mov
clc
mov
jl
lds
flds
adc
lahf
mov
mov
into
sbb
repnz
add
mov
ja
fldenv
rcrb
cmp
mov
xchg
jmp
gs
sbb
or
jle
rcrl
test
mov
add
repz
leave
lock
or
push
mov
cmp
jo
dec
in
fnstcw
mov
cmc
mov
cld
xor
rorb
mov
bound
jl
inc
or
roll
fistpll
in
pusha
dec
lret
add
stc
mov
popa
scas
lods
in
mov
out
lret
mov
scas
das
xor
imul
stc
cmc
clc
lret
mov
scas
in
or
mov
mov
stos
mov
or
dec
lea
icebp
leave
push
jge
and
test
jno
insl
int
jno
add
mov
mov
popf
jecxz
pop
sahf
sti
cwtl
iret
sti
jnp
test
jno
ja
or
enter
imul
sahf
xor
icebp
neg
or
sub
sub
div
xchg
testb
stos
push
mov
loopne
cmp
decb
jl
mov
mov
or
mov
std
loope
das
jo
je
hlt
not
hlt
sub
mov
sub
outsl
jmp
imul
push
jo
testb
jo
mov
xor
outsb
testl
xor
or
aaa
pusha
fcmovb
xchg
stos
in
rcrb
repz
xor
movsb
add
mov
cld
xor
add
mov
cmpsb
mov
add
cltd
mov
aam
pusha
aam
enter
jp
loope
hlt
pusha
push
out
jo
cmpsb
cld
push
popf
cmc
xabort
or
or
in
stc
sar
or
dec
iret
or
icebp
daa
mov
clc
subl
rorb
cmpsb
aad
dec
cmp
pushf
scas
jne
data16
push
fnsave
mov
cmpsl
clc
pusha
in
or
jno
js
clc
loop
jae
mov
or
or
mov
dec
repnz
or
lret
imul
shl
dec
and
stos
ret
or
or
iret
sub
or
mov
mov
mov
fidivl
lret
int3
mov
lcall
cld
outsl
pop
test
lock
sub
pop
jae
cli
cld
decb
scas
cmp
fstpl
rcl
stc
in
outsb
decl
inc
jge
stos
xbegin
hlt
adc
lock
cwtl
cld
dec
out
aaa
dec
mov
loope
dec
push
mov
mov
dec
insb
fldl
inc
out
dec
sarb
enter
add
push
mov
add
pop
loope
lock
and
pop
les
cmp
mov
rolb
fs
out
mov
shlb
int3
push
and
jmp
int3
or
out
and
cwtl
mov
inc
shl
mov
mov
and
or
jle
js
or
jmp
test
jle
jne
aam
cmpsl
repnz
nop
add
or
pop
mov
aad
dec
lock
or
popf
fwait
into
push
mov
hlt
mov
ds
and
repz
inc
add
hlt
cld
aam
and
out
pusha
les
or
or
in
loopne
stos
lret
sar
jmp
repnz
icebp
scas
in
pop
cli
incl
add
clc
in
hlt
and
in
loope
jno
ret
inc
mov
sbbb
add
fs
mov
dec
mov
sti
das
mov
in
shl
scas
sahf
add
pop
out
add
aam
lret
pop
stc
add
lods
loop
lret
jae
aaa
shl
mov
add
stc
inc
icebp
adc
lret
add
icebp
add
enter
xchg
int
sub
ret
outsb
push
add
in
shl
inc
popf
std
push
pop
add
lods
test
mov
or
shrl
int
cs
or
ds
movsb
out
push
fsts
sbbl
call
repnz
out
test
cld
or
cmp
sarb
ret
out
cmp
sbb
shr
outsb
jmp
xlat
or
pop
fildll
ljmp
stc
dec
clc
gs
shrl
cld
icebp
jl
push
mov
hlt
or
pop
test
jg
inc
inc
add
ret
rclb
mov
cld
cmc
ficoml
mov
pop
sti
sub
inc
shrb
sti
mov
das
test
push
rorb
sarb
jle
mov
mov
dec
fisttps
mov
test
mov
jmp
or
sti
aad
test
mov
or
push
lret
lods
sbb
or
and
clc
push
je
ja
loop
jmp
insl
into
mov
mov
jmp
mov
daa
mov
pop
pop
pop
fcmovu
hlt
mov
jp
fimull
ljmp
icebp
fldt
or
or
add
lret
aad
fists
hlt
fs
add
pop
dec
mov
mov
sub
repnz
in
clc
hlt
loop
incb
std
rcr
std
iret
aam
mov
rorb
scas
xrelease
stos
inc
mov
mov
shl
ret
dec
xor
in
mov
std
int
shll
enter
sbb
movsb
xor
mov
pusha
fidivl
jle
jecxz
add
in
lds
test
xchg
or
enter
stos
ds
mov
mov
xor
fistl
testl
shlb
xor
insb
mov
rolb
les
mov
lods
in
inc
sbb
jo
pop
lods
test
movsl
fiaddl
mov
cmpsb
fmulp
add
mov
mov
out
xor
insb
mov
int3
or
fcmovb
fcmovne
mov
fisubrl
lret
stc
mov
sub
mov
addr16
dec
xchg
mov
dec
mov
mov
mov
repnz
lock
out
cld
jmp
out
in
loop
notl
out
out
lret
loopne
les
rorb
enter
dec
hlt
mov
push
call
inc
dec
pop
adc
or
addb
scas
test
or
sti
xchg
insb
dec
clc
mov
sti
cmc
out
insb
fcoms
inc
add
ror
into
enter
add
stos
repz
clc
jl
pop
xor
and
cli
adc
xor
iret
sub
sub
cmp
jae
lret
add
in
aad
or
mov
lock
mov
mov
cld
sti
push
stos
repz
dec
lds
or
loope
loop
out
dec
rolb
jae
mov
mov
mov
mov
sub
test
ss
pushf
cmp
xchg
push
outsb
mov
pushf
add
stos
or
add
clc
cmp
sub
or
jmp
inc
mov
cld
mov
add
xchg
test
push
jle
out
or
lock
inc
dec
out
in
insl
or
out
in
pop
movb
stc
lret
inc
xor
iret
push
icebp
loope
cmp
jne
lock
jl
fdivl
jmp
push
or
inc
lahf
xchg
cmp
or
or
xchg
addr16
daa
fisubl
jnp
or
mov
cld
push
sbb
cmp
push
xchg
jo
dec
stos
xchg
rclb
ret
call
dec
adc
jns
sbb
fwait
mov
movsl
jae
popf
loopne
leave
mov
stos
or
shr
xchg
or
mov
mov
fisttpl
jle
leave
outsl
and
mov
icebp
push
or
mov
addr16
jno
enter
xchg
and
and
inc
ss
in
mov
int3
dec
mov
mov
mov
mov
xor
mov
xchg
pop
adc
sbb
lods
or
imul
das
and
xchg
push
rcrl
scas
data16
cwtl
lret
lret
or
jb
xchg
jg
xorb
mov
or
jnp
test
or
les
ret
enter
mov
xchg
add
lock
mov
push
mov
in
andb
repz
ret
inc
mov
jns
push
dec
mov
fmulp
insb
cmp
mov
cmp
lret
push
mov
hlt
push
xchg
mov
pop
mov
inc
pop
es
js
cmp
pop
inc
or
sub
test
xchg
or
test
cmp
adc
jne
cmpsl
cwtl
pop
add
movsb
gs
add
insl
pop
je
leave
dec
test
or
leave
jmp
or
icebp
cmpl
pop
scas
dec
test
cmp
pop
orl
xor
pop
bound
nop
push
ret
js
data16
in
mov
dec
dec
lock
in
movsl
call
into
aam
push
pop
aam
sti
sbb
jg
incb
xlat
mov
jg
mov
stos
iret
sub
or
ret
ret
mov
sub
inc
cmpsl
ficoms
or
xor
push
push
push
mov
test
movsb
mov
push
xchg
sbb
ljmp
stos
xchg
movl
in
ljmp
add
ds
dec
lock
add
mov
sar
dec
inc
pop
stc
mov
xchg
mov
jge
jecxz
std
jl
adc
dec
mov
sbb
pop
or
sbb
stc
insb
pop
bswap
cmp
lcall
outsl
cmp
lea
leave
int
jnp
int3
and
adc
aam
xor
pop
adc
xchg
push
mov
cld
jp
test
sub
jp
je
inc
sub
mov
inc
iret
mov
pop
rcrl
mov
push
pextrw
cmp
mov
dec
fcmovnb
les
add
mov
pop
loope
ljmp
lret
push
inc
inc
hlt
bnd
test
aad
in
out
or
mov
iret
fwait
nop
in
pop
push
jne
mov
not
pop
mov
or
in
daa
aam
xchg
hlt
xchg
jp
stos
enter
lret
push
or
cmp
add
decl
rol
dec
into
ja
mov
test
inc
leave
jmp
push
insb
scas
xchg
mov
jp
mov
addr16
and
or
call
mov
popf
or
sbb
ret
rorl
add
dec
es
cld
mov
mov
test
iret
mov
mov
sbb
dec
rol
cwtl
or
ds
lock
roll
fstpt
mov
jnp
pop
inc
loope
jg
bound
mul
and
test
ds
js
ret
dec
repz
add
test
cmp
pop
gs
mov
pop
pop
dec
sub
cld
aas
dec
ror
xlat
cmpl
and
cmpsb
sub
jmp
inc
push
addl
imul
add
mov
xchg
adc
iret
mov
dec
enter
stos
subl
stos
aam
cltd
je
in
testb
mov
pop
lock
je
add
cmp
shll
es
xor
jl
enter
int3
ret
mov
mov
cli
aad
mov
sahf
mov
cmp
fstpl
add
jmp
shll
sbb
scas
dec
bound
mov
inc
aaa
or
mov
ret
xchg
lods
mov
mov
pushf
add
adc
lds
or
mov
adc
ds
insb
sub
or
xlat
cmpsb
xchg
mov
mov
in
or
push
es
mov
pop
push
test
push
jg
mov
aad
xchg
push
popa
out
lret
push
call
push
out
stc
je
stos
shll
jns
insl
dec
jmp
scas
fs
inc
hlt
ret
mov
xchg
lldt
and
mov
cmp
or
movsb
pop
lret
iret
jb
push
mov
ja
sbb
jb
and
pop
pusha
les
sub
mov
jnp
lds
std
movsb
ljmp
enter
mov
adc
mov
enter
loope
leave
aam
jmp
xchg
fwait
push
shll
pop
out
cmp
into
xlat
ret
xor
xchg
into
stc
test
sbb
rclb
stos
mov
pusha
lret
shlb
add
mov
lock
xor
imul
into
push
lods
ds
jbe
xor
outsb
stos
fwait
xlat
sbb
xchg
lock
addr16
or
jl
into
or
in
pop
jl
test
inc
out
or
mov
jnp
jle
inc
inc
mov
jmp
push
cli
cmp
les
gs
sub
movsb
mov
test
cmp
int3
les
fwait
pop
mov
dec
dec
les
imul
adc
or
fldlg2
and
jnp
mov
adc
imul
jmp
test
inc
or
in
popf
add
push
lret
mov
arpl
mov
ret
sti
lods
jbe
or
or
xor
aas
out
inc
sahf
push
cmp
xchg
add
sub
sbb
into
clc
test
and
sti
fdivrl
pusha
gs
xchg
iret
and
clc
mov
fisubrs
les
push
pusha
sahf
pop
or
xchg
ds
scas
leave
sbb
mov
rcll
dec
ret
scas
data16
add
stos
mov
ret
push
scas
adc
cmp
divl
mov
mov
or
insb
sti
sbb
loope
int3
jns
cmp
sub
fidivrl
xor
fdivrl
test
mov
ds
nop
or
mov
lcall
aam
mov
leave
adc
inc
mov
rorl
lcall
stc
and
sub
adc
add
fistl
loop
add
sti
sti
mov
cmp
cmp
inc
sbb
mov
push
or
subl
lret
fdivl
daa
outsl
in
gs
call
andl
push
fidivrs
push
xchg
lds
ss
je
rcr
adc
adc
pop
xor
aaa
add
or
cld
sub
jae
call
inc
add
addl
fcomi
cmp
and
fsub
pop
xor
daa
mov
stos
pop
ljmp
out
sub
test
jnp
ss
push
inc
les
stos
popf
jecxz
add
jmp
pop
decl
mov
lods
add
rcll
ret
sub
add
test
or
push
js
dec
faddp
or
sti
push
std
inc
in
in
dec
adcl
cmp
test
stc
mov
in
jmp
ror
or
push
insl
mov
subb
lods
fmul
loop
push
std
cpuid
mov
or
push
inc
ds
daa
out
and
iret
pop
jns
je
imul
push
pop
pop
jne
xlat
loop
movsb
jb
xchg
iret
adc
or
in
adc
dec
lods
test
xchg
cwtl
jp
fiaddl
xchg
push
jmp
push
or
shlb
inc
or
loop
push
cli
xchg
dec
lods
pop
mov
jae
lret
out
pop
xchg
in
into
ds
fnstcw
lods
ds
inc
arpl
xor
bound
mov
inc
gs
jo
imul
jno
movsb
add
xchg
testb
pop
jge
add
flds
sub
insl
xchg
jne
fcmovb
push
mov
dec
or
and
pop
int
mov
or
dec
addb
loope
jns
sub
lcall
decb
pop
stc
js
ret
cld
or
jle
lret
inc
mov
fwait
subb
lret
jle
or
dec
jecxz
fildl
pop
mov
out
loop
cmp
xlat
mov
lods
add
dec
lcall
mov
cld
popa
je
inc
pop
add
repz
inc
jmp
loop
and
fs
push
repz
stos
dec
lock
pop
cld
mov
mov
out
fnstenv
jmp
push
xchg
mov
jno
pop
mov
daa
mov
mov
fisubrs
pop
sarb
sbb
cmpl
cmp
sbb
test
pop
sbb
dec
sub
inc
cld
fisubs
dec
push
stc
or
dec
std
insl
mov
lcall
mov
insb
mov
lret
adc
dec
pop
sub
sub
sub
loope
ds
or
lods
cmp
mov
inc
out
lcall
or
dec
sti
pop
push
daa
sub
std
and
add
fcoml
dec
call
push
rorl
sbb
cli
nop
cmp
into
push
lods
aas
sub
and
dec
pop
lea
ds
stos
ret
add
pop
stc
insb
fstps
mov
rorl
jecxz
subl
add
pop
jcxz
mov
test
scas
jmp
lea
test
mov
lods
mov
jl
test
lock
repnz
or
cmpsl
insb
out
and
and
in
and
mov
push
xor
sub
mov
sbb
lret
insb
fdivr
inc
fldt
and
push
push
cmc
dec
inc
lea
mov
mov
aad
jns
pop
lret
aad
cwtl
int3
sub
mov
jnp
aas
ja
or
ret
rolb
jnp
cltd
add
les
add
add
jecxz
push
inc
push
adc
mov
and
daa
fnsave
jns
lods
stc
in
push
imul
btr
pop
mov
inc
xchg
idivb
sub
js
scas
jno
or
push
repz
xchg
push
subb
in
out
in
int3
lock
adc
push
cmp
lcall
push
adc
add
scas
push
push
jbe
cmc
xchg
std
xchg
adc
sbb
out
mov
jno
mov
call
out
in
or
out
enter
lea
xor
jl
jmp
hlt
hlt
mov
aam
shrl
mov
mov
ljmp
stos
leave
in
jecxz
faddl
jo
push
push
or
fstpt
add
lods
mov
aas
mov
or
in
ljmp
sbb
mov
add
inc
in
lret
sub
xchg
or
test
rcrl
xchg
lret
or
adc
cmp
push
or
add
inc
xchg
jle
popf
mov
mov
mov
addl
push
dec
push
jl
cld
xchg
mov
adcl
mov
stos
in
pop
ds
ljmp
fimuls
dec
and
sbb
and
sub
dec
dec
ljmp
jl
sarl
mov
testl
mov
std
popf
gs
rcl
xor
lock
testl
das
mov
or
dec
and
jo
add
aad
dec
inc
xchg
ds
mov
incb
or
sbb
and
sbb
in
and
xchg
pop
out
adc
insb
ret
or
mov
in
mov
sub
enter
dec
in
out
pop
outsl
push
add
insb
in
lds
xchg
dec
mov
add
adc
sbb
pop
es
rorb
stos
stos
stc
ds
rcl
shr
loope
stc
cmp
in
lahf
gs
std
int3
out
ljmp
mov
out
xchg
gs
je
xlat
or
pop
mov
repnz
xchg
addb
sub
inc
aaa
xchg
enter
and
and
add
cmp
push
add
rcr
sbb
pop
mov
les
mov
dec
mov
xchg
scas
test
aas
call
rol
push
gs
inc
jecxz
or
pop
jl
fxch
xor
testb
or
jg
fildl
stc
push
imul
testl
cmpsl
mov
xor
movsb
and
int3
stc
or
adc
fistpl
decl
and
loop
push
cmc
in
cmpsb
cmc
lcall
fisttps
mov
out
add
pusha
insb
push
fsubrl
notb
repnz
jbe
ficompl
andb
outsl
dec
stos
insl
mov
test
or
adc
iret
fs
movsl
dec
lods
repz
sub
mov
imul
sbb
xchg
sbb
fxch
imul
loop
ds
bound
loopne
cmc
push
jns
aad
xchg
pushl
sti
sbb
pop
rcrl
cmc
sub
scas
mov
in
xlat
mov
imul
js
xchg
mov
jnp
push
test
xor
stc
in
pop
test
fucomi
sub
mov
cmp
scas
push
mov
xor
and
sbb
cmp
test
xchg
or
pop
cmpsb
insl
xchg
mov
mov
jge
push
sar
fldt
sub
add
jmp
pop
cmp
lods
adc
andb
jl
leave
inc
loopne
or
lret
push
jns
je
ja
rcll
mov
pop
xor
xchg
std
addr16
pop
call
daa
adc
ds
cmp
sarl
scas
cli
lret
repz
xor
inc
push
rolb
add
movsb
dec
pop
not
out
jl
or
inc
or
shr
shrl
pushf
adc
adc
mov
xchg
loopne
insl
jbe
imul
jmp
dec
imul
dec
cli
jmp
out
xchg
andb
mov
xchg
pushf
push
fiadds
mov
std
xor
mov
mov
lret
psubsb
out
or
xlat
ds
sbb
cmp
sub
shlb
stc
and
add
lret
arpl
sbb
in
adc
hlt
addl
rcrb
adc
mov
aam
setg
push
lods
inc
sbb
push
ror
adc
out
pop
in
push
sbb
fwait
mov
nop
lock
mov
out
xchg
and
dec
rcrl
jnp
aaa
bound
test
shll
rolb
xchg
call
xchg
xchg
add
cmpsl
cmp
add
add
mull
rorl
mov
dec
pop
jg
les
mov
or
les
test
or
pop
pop
mul
xchg
jg
dec
fdivs
mov
xchg
mov
push
enter
dec
fsubrs
pop
xchg
sbb
jns
mov
arpl
arpl
fdivs
jp
rcl
leave
sub
push
not
iret
sbb
and
mov
lea
xchg
push
iret
push
inc
out
or
scas
aam
ljmp
imul
add
aas
loop
popa
push
jo
sbb
sub
pop
nopl
pop
std
push
mov
inc
fs
inc
lcall
xor
imul
aad
cmc
fmul
mov
call
push
xchg
aas
mov
push
mov
js
test
cmp
mov
icebp
and
rcrl
inc
test
jg
mov
xchg
or
je
sarl
orb
pushf
jnp
add
movsl
enter
push
jecxz
leave
test
aaa
orb
call
sub
xor
sar
fcoml
jo
xor
test
jecxz
mov
mov
pop
shrb
cmp
data16
pop
dec
or
dec
or
or
jae
in
ret
inc
jne
insb
pop
mov
or
sbb
mov
repnz
cmp
fucomi
dec
test
loop
leave
scas
in
inc
pop
or
daa
dec
xor
imul
or
cld
sbb
push
imul
dec
sbb
ljmp
inc
mov
sub
xchg
inc
mov
jp
loop
lahf
inc
inc
push
add
mov
cmc
pop
cmp
cli
gs
cld
stos
jb
inc
pop
movsb
push
outsb
cmpsl
rorl
push
or
mov
repnz
xor
test
sbb
jbe
fdiv
in
push
add
jnp
gs
bound
out
mov
cld
inc
popa
dec
cmpsb
inc
cmp
jae
leave
jle
pop
xchg
pop
jmp
pop
xchg
xor
ljmp
loope
cmpsl
mov
inc
sub
add
into
aam
in
inc
jo
repnz
add
mov
dec
ds
add
mov
stos
popa
mov
or
aaa
call
sub
loope
xchg
xchg
or
cli
imul
sub
dec
xchg
loop
sub
loopne
xor
xchg
jbe
jo
hlt
jne
mov
jecxz
fisubs
fnstenv
paddq
andps
xchg
add
sbb
dec
xor
cmp
and
es
mov
decl
sbb
add
push
faddl
call
repz
fsubrs
xchg
inc
loop
out
dec
enter
dec
faddp
in
fmull
push
cmp
xchg
xor
movsb
or
loop
out
loope
in
sbb
stos
in
int
mov
xchg
lock
cld
ds
test
pusha
mov
pop
pop
mov
inc
adc
out
dec
mov
mov
fildl
testl
push
out
mov
add
popa
push
fldenv
cmpsl
jae
ret
xor
and
push
nop
ret
mov
js
ds
mov
cmp
jecxz
scas
into
adc
int3
cmp
pop
and
test
or
xchg
scas
add
pop
popf
or
pop
lcall
leave
scas
test
mov
out
inc
pop
xchg
add
cmp
mov
push
mov
adc
push
arpl
cmp
dec
sbb
or
test
xlat
test
adc
cli
insb
test
inc
and
mov
sbb
mov
push
adc
jb
lock
scas
dec
xchg
aad
inc
xor
cmc
and
dec
js
cmpsl
add
hlt
divl
and
or
jl
pop
jg
in
add
mov
mov
dec
shr
enter
push
ja
outsb
or
leave
pop
inc
xchg
std
faddl
pop
cld
inc
push
int3
daa
jns
jbe
xorb
cmc
or
movb
and
jb
push
sbb
clc
dec
jo
das
mov
or
mov
sub
pop
xlat
mov
jne
jbe
fsubrp
add
bound
or
sbb
mov
cmp
clc
test
and
push
jns
dec
stos
adc
adc
adc
lods
jg
push
stc
cmp
stos
insb
xchg
dec
lret
repz
repz
pop
sbb
lret
add
out
leave
movsb
pop
iret
iret
mov
sti
xor
leave
popf
or
jle
pop
lods
out
mov
or
test
daa
orb
pushf
ret
add
mov
or
inc
fwait
mov
mov
or
iret
mov
cld
insb
pop
stc
push
pop
mov
dec
cmp
out
jl
xchg
and
push
repz
inc
in
cs
cwtl
orl
rcr
call
cmpsl
ljmp
in
ret
add
jo
dec
out
fstpt
adc
aam
ror
repz
push
mov
adc
push
inc
xlat
jmp
mov
adc
daa
fstpt
mov
mov
adc
add
push
jl
fildl
or
push
test
xor
add
inc
cmp
push
jmp
cwtl
hlt
cmp
sbb
enter
ret
add
mov
test
pop
mov
cwtl
push
or
or
add
sbb
mov
xor
and
stos
aam
lcall
stos
or
cmp
out
negl
sbb
std
mov
xchg
ret
lods
mov
jge
xor
sti
push
push
add
insl
add
cld
pop
xchg
mov
sti
stos
xchg
or
lock
or
adc
add
or
out
lcall
leave
mov
int3
adc
push
test
leave
in
cmp
in
sub
mov
int3
mov
sub
add
mov
arpl
call
nop
cmpsb
adc
insb
add
jl
std
xchg
add
fsubs
loop
outsl
mov
or
mov
stc
add
cmp
pop
pop
cmpsb
pushf
dec
jo,pn
pop
inc
fidivrs
cli
push
dec
lcall
add
hlt
hlt
dec
fmul
jmp
imul
xchg
sbb
rcr
call
jb
add
fdivrp
mov
je
in
sbb
enter
fldenv
shrl
call
ja
mov
inc
addr16
push
insb
fadds
or
jmp
add
js
fs
jbe
jmp
enter
adc
enter
xor
or
lods
inc
cltd
in
dec
adc
push
add
push
adc
jne
fsubl
pop
int3
xor
in
into
aaa
and
in
xchg
mov
xor
sub
inc
dec
adc
mov
cmp
push
or
sar
hlt
out
ret
jns
push
or
sub
into
movsb
cld
add
jno
addb
mov
or
outsb
mov
pop
test
sti
add
enter
pop
popa
fidivl
jge
je
pop
stos
das
jle
cmp
inc
je
dec
sahf
hlt
pop
insb
or
into
sahf
stos
add
add
enter
mov
pop
lock
adcl
pushf
jne
jp
jl
push
subl
or
jg
add
add
pop
or
std
cmpsl
dec
mov
call
add
les
insl
test
mov
adc
and
or
mov
out
or
mov
call
inc
fstpt
in
into
fcmovnb
adc
jbe
in
adc
xor
adc
in
sbb
jmp
or
pusha
int3
jnp
pop
stos
pushf
cmp
mov
jno
cmpsl
jns
repnz
movsl
mov
or
cmpb
push
scas
or
jl
jmp
in
call
xor
cmp
fidivrl
outsl
call
lods
sbb
dec
lods
xor
in
in
jo
adc
adc
or
sub
inc
dec
sub
std
add
test
aad
pop
sahf
and
pushf
mov
clc
push
lods
jg
mov
push
notb
xchg
loope
inc
or
add
je
daa
xchg
std
aad
loope
xor
test
mov
mov
test
xchg
dec
sub
cmp
ds
cmpsl
js
add
mov
mov
dec
ds
or
or
js
lret
cmp
mov
adc
xlat
mov
enter
sub
xchg
pop
sbb
mov
cmpsb
testb
fnstcw
and
jns
jmp
adc
call
sbb
je,pt
fadds
repz
stos
test
jbe
ja
out
mov
fisttpl
je
or
jmp
pop
imul
vpmuludq
inc
lcall
add
loop
mov
lret
jp
es
sub
dec
pushf
shrl
outsl
leave
dec
sub
mov
mov
dec
stos
in
adc
cmpsb
or
adc
in
pop
pop
clc
xor
out
lods
lret
fists
das
shlb
cmpsl
lcall
push
mov
roll
jae
test
stos
outsb
popf
cli
mov
xor
popf
hlt
xor
sbb
aas
pop
lahf
fsubrl
and
cld
jp
dec
repz
dec
cli
dec
clc
xchg
cld
insl
in
mov
add
cmpsl
mov
lret
hlt
out
pop
pop
pop
mov
mov
lahf
test
into
in
mov
mov
rorl
das
or
mov
in
mov
inc
cld
in
inc
add
cld
push
or
sub
sbbl
iret
test
inc
mov
data16
cli
push
nop
mov
scas
negl
adc
cmp
stc
pushf
pop
fwait
lret
mov
ss
mov
rcrl
or
popf
enter
fs
jge
aam
inc
add
aad
icebp
add
loop
movsl
aam
ret
add
push
subb
push
mov
fisttpll
or
xor
push
testb
mov
test
sarl
pop
mov
adc
dec
iret
lret
fmul
sbb
lret
lds
test
std
ror
mov
push
jmp
pushf
divb
std
int3
dec
enter
adc
adc
enter
jl
inc
inc
stos
lods
sti
jbe
fdivrl
jecxz
mov
sbb
mov
push
xchg
in
fucomip
test
scas
out
sub
ljmp
jl
dec
pop
fisubs
cmc
xor
jge
sti
and
bound
and
or
out
mov
aaa
xchg
mov
jo
mov
rep
stc
fidivrs
lret
sub
or
pop
add
lcall
rsqrtps
sbb
pop
subl
dec
test
pop
rcrl
jne
imulb
sub
int3
jo
lock
or
mov
test
pop
jmp
testb
popa
and
or
xchg
mov
push
bound
pusha
push
pop
inc
pushf
rorb
jl
or
mov
or
mov
push
orl
dec
xor
jne
movl
out
cmp
pushf
or
rcrb
fisubrl
rorb
or
shrd
jae
stos
cwtl
adcw
lret
jbe
adc
stos
push
stc
push
or
aas
aad
push
sub
mov
pop
dec
or
ds
pop
lock
scas
dec
mov
mov
jg
add
pop
dec
shll
ret
or
lret
fcompl
lds
mov
shlb
incl
add
fsubl
mov
add
lcall
mov
shrb
dec
popf
int3
insl
add
or
sub
loop
stos
into
sbb
cmp
fnsave
lcall
cld
xchg
adc
mov
js
es
imul
cmp
or
sub
inc
add
ds
ss
in
mov
addl
out
jecxz
mov
sub
es
insl
adc
add
jle
fwait
cmp
push
fs
shll
inc
xlat
jmp
or
add
scas
stos
push
mov
xor
jmp
vpunpckhbw
xor
cli
mov
mov
lret
lret
add
leave
in
fstp
or
mov
or
out
add
mov
repnz
cmp
les
cli
mov
adc
and
mov
and
mov
in
push
adcb
mov
push
bound
stos
cmp
lods
cmpsb
outsb
je
xchg
or
les
and
or
lea
adc
je
bound
insb
pop
pop
addr16
out
or
mov
test
pop
lahf
xchg
cmc
roll
sbb
push
clc
xchg
or
clc
adc
jp
mov
cmp
and
out
shr
pushf
push
hlt
incb
jne
stc
adc
ror
daa
mov
sti
mov
xchg
or
or
test
rcrl
push
pop
xchg
jmp
mov
in
cmp
das
je
fdivs
lret
in
push
subl
push
fstps
leave
dec
lahf
and
or
inc
sarl
stos
dec
dec
xchg
shl
pop
scas
jp
jl
mov
pusha
jbe
lret
out
and
fwait
rcll
shrl
dec
movsl
andl
jmp
stc
push
jge
xor
inc
jbe
mov
or
into
js
shlb
dec
push
jae
stos
in
pop
sbb
jnp
push
loop
loope
shrb
into
adc
std
sub
push
iret
stc
push
jb
dec
adc
fwait
js
icebp
in
or
or
mov
push
lret
sbb
shrb
jbe
test
xor
dec
dec
pop
in
fsubrl
mov
orb
aas
adcl
jge
fisttpll
lods
iret
add
jnp
or
pusha
jmp
xor
test
jp
jbe
enter
add
sbb
xor
test
cli
hlt
fildl
test
adc
movsb
or
and
mov
fucomip
popa
add
cmp
sub
lods
int3
enter
sub
pop
xor
xlat
fistpl
or
push
and
xchg
sub
mov
pushf
fcmovne
icebp
sub
push
outsb
jo
push
inc
rol
leave
mov
incl
push
jl
cltd
ret
ret
dec
cmp
and
cltd
or
decl
mov
sbb
mov
icebp
out
dec
dec
std
push
mov
rcll
fcoml
or
rcll
lods
jnp
inc
leave
test
jmp
dec
cwtl
push
in
stos
push
mov
or
jp
and
fwait
cmp
xchg
fs
xor
adc
mov
punpckhdq
fwait
js
xchg
scas
jno
lret
push
jg
xor
lret
lods
xor
sub
xchg
js
test
hlt
sub
movl
mov
dec
mov
cmp
jge
pop
clc
inc
push
dec
icebp
daa
pop
sbb
jp
mov
imul
ja
push
fadds
sbb
jl
stos
sub
mov
into
fldenv
in
ds
imul
jmp
inc
imul
or
sbb
pop
filds
int3
shlb
fisubs
imull
mov
mov
jge
iret
stos
and
xor
cmp
and
stos
hlt
ret
xchg
jne
movsl
ljmp
pop
add
in
js
or
inc
das
sbb
fnstcw
arpl
ror
movsb
push
push
or
pop
mov
add
mov
dec
clc
jne
push
mov
enter
movl
mov
push
pop
jb
sbb
mov
hlt
in
xchg
call
or
fisubrs
fyl2xp1
loopne
fcoml
mov
add
add
jns
lds
jl
xor
sub
jecxz
out
insb
imul
dec
jbe
xor
test
add
adc
ja
add
std
bound
pop
or
xlat
sbb
mov
lock
or
movl
and
int3
rcr
fisubl
add
and
mov
xchg
sub
lods
fs
mov
mov
cmp
cmp
test
mov
gs
ds
lret
out
jge
insb
fisubrl
mov
lods
test
inc
cmpsb
push
call
or
ret
mov
dec
je
leave
clc
daa
cmp
in
hlt
lods
cmc
andb
push
iret
fcmovnbe
mov
adc
jne
xor
or
repz
cld
imulb
out
sahf
jecxz
add
cmpsl
dec
movsl
ja
sub
ja
mov
jge
push
rorb
xorb
stc
mov
mov
pop
std
cld
std
inc
adc
xor
out
add
xchg
ficoml
insl
or
aaa
ds
push
inc
cmp
sahf
les
nop
popa
dec
clc
add
lock
in
fidivl
mov
or
inc
sar
test
cmp
popa
in
out
push
jg
and
dec
lea
int3
ror
adc
pop
xchg
je
pop
pop
xor
lea
cmp
ficoml
mov
scas
xchg
mov
shll
rep
in
jmp
sbb
sub
mov
popf
fldlg2
dec
mov
add
pop
pop
nop
insl
je
ficoml
stos
cmpsl
test
jl
or
xor
ljmp
xchg
ret
inc
lods
test
cmp
pop
fyl2x
jb
adc
lar
and
mov
jne
xor
mov
out
pushf
mov
and
sbb
mov
push
into
scas
push
inc
aam
xor
xchg
pop
popa
out
add
and
push
mov
popa
push
dec
stos
jp
scas
jmp
ficompl
stc
mov
mov
push
inc
dec
xchg
fcmovu
mov
jl
mov
ljmp
add
inc
push
ja
in
hlt
lret
mov
mov
lock
cmpsl
nop
cs
pop
ret
push
pop
xchg
mov
pop
jae
inc
jp
cltd
andb
rcl
jns
or
shll
data16
shlb
push
sub
pushf
out
cmpsb
cmc
lock
test
or
sbb
cltd
dec
sub
sub
imul
shr
xor
lret
or
aad
lods
mov
or
shll
aas
mov
in
scas
mov
shll
popf
iret
adc
daa
xchg
nop
and
movsb
push
leave
enter
roll
or
pop
cli
add
mov
adc
push
cmpsb
adc
or
cmp
dec
pop
adc
jns
out
inc
or
mov
pop
test
xchg
jo
xchg
or
ret
mov
adc
stc
jmp
mov
adc
dec
in
lret
lret
pop
ss
sub
push
adc
outsb
lahf
movsl
jnp
daa
icebp
sub
or
in
adc
cld
dec
fs
or
or
add
lret
scas
rcrb
jae
inc
into
pop
xor
xor
in
mov
lods
xchg
sti
insl
adc
std
mov
insl
negl
sbb
and
push
sbb
cmc
inc
negl
fdiv
xor
aam
pop
pop
sub
xor
cmp
mov
mov
or
les
fnstcw
jg
scas
cli
repz
out
adc
cmp
or
add
stos
jnp
mov
pop
inc
je
and
mov
sbbb
mov
and
fdecstp
xchg
daa
in
mov
pop
in
inc
enter
jg
cmpsl
adcb
out
hlt
pop
sub
sti
xchg
xlat
inc
fs
addr16
or
xor
lods
out
or
mov
sub
push
leave
inc
xchg
pop
das
cmpsb
adc
cmp
sbbl
arpl
xlat
mov
jnp
je
pop
mov
stc
inc
sub
fnstsw
push
inc
or
test
js
cmpsb
ret
stc
addb
inc
jae
divl
rcr
and
cmp
orl
insb
test
mov
lods
lret
lock
adc
dec
mov
gs
adc
xchg
add
fnstenv
inc
addb
sbb
push
repz
scas
lret
out
shll
add
int3
imul
imulb
sti
mov
inc
sbb
mov
mov
jns
cmp
neg
mov
scas
stc
loope
stc
mov
xor
lods
xchg
cmc
push
xor
jmp
xor
cmp
dec
les
stc
sarb
lods
inc
inc
xor
cmp
cli
mov
div
popf
sub
jmp
stc
shlb
jl
shr
loop
aas
into
push
ret
dec
jmp
stos
inc
imul
inc
mov
push
cmp
lods
adc
mov
mov
mov
xchg
dec
xchg
xchg
shrb
testb
add
std
jno
or
negb
sub
negl
cli
lock
or
sbb
in
xorl
movsb
or
roll
ds
scas
or
adc
fs
data16
or
cmpb
not
in
or
das
xchg
dec
call
mov
push
les
or
test
pushf
call
sub
inc
or
shlb
movsb
sub
dec
pusha
clc
sub
rorl
or
push
in
mov
packsswb
inc
add
in
or
addb
lea
lret
xlat
cld
jl
xor
xacquire
dec
lock
test
inc
adc
aam
lea
push
dec
in
xor
test
xchg
std
pop
jne
aam
push
loopne
mov
add
ror
sahf
rorl
xchg
inc
dec
pusha
cmp
mov
roll
movsl
pop
in
lds
out
cmp
cmp
hlt
push
xor
in
or
inc
cmc
push
orl
sub
call
cmp
stc
movsb
loop
in
sub
jmp
roll
jl
pop
jne
mov
dec
leave
pop
push
mov
pushf
adc
pop
xchg
sub
fnstsw
xchg
enter
xchg
xorl
or
test
test
lahf
es
dec
or
scas
gs
push
adc
or
imul
int
cmpsl
push
inc
fstpt
and
lahf
mov
shr
ret
les
add
lcall
cmp
add
cmp
leave
stos
mov
lods
shrb
test
push
pop
sbb
or
lret
adc
and
cmpb
mov
rcll
and
cld
lock
test
test
mov
dec
add
andb
test
cmpsl
iret
lret
jne
aam
push
in
xchg
sub
jl
or
pop
cmp
in
mov
pop
sub
popa
cmp
roll
or
repz
lock
cltd
je
pop
xchg
es
add
pop
lret
in
ss
lock
pop
lcall
rorb
sahf
mov
and
adc
leave
inc
push
lds
mov
jmp
jbe
or
fisttpl
fmul
test
aaa
fcoms
push
jmp
or
or
or
cmp
cmp
inc
or
cltd
cld
mov
or
xchg
mov
inc
jmp
dec
test
add
stos
cld
add
jmp
xlat
leave
loopne
cmp
xchg
xor
fisubs
push
mov
jnp
push
and
add
repz
int3
xlat
shlb
push
out
cmp
insl
sbb
iret
leave
dec
sub
test
xchg
movsl
rorl
lret
loopne
mov
mov
or
ret
jp
lret
stos
test
mov
add
shrb
in
in
pop
out
dec
and
and
dec
fnstenv
adc
mov
movsl
sub
inc
adc
jmp
dec
rorl
sbb
push
repz
insl
movsl
jp
insl
std
aad
mov
xor
mov
out
jo
xchg
sbb
sub
sbb
push
xor
lods
mov
mov
cld
aad
or
sbb
xchg
adc
pop
cld
aam
sub
or
sbb
xor
in
fcoml
dec
jmp
mov
inc
ss
fwait
scas
jmp
imul
cmp
test
and
enter
cmp
rorb
aad
mov
sar
fldt
fwait
blcfill
add
stos
dec
bound
cld
and
mov
dec
xchg
push
mov
push
lret
outsb
mov
cmp
inc
enter
mov
inc
out
push
fwait
scas
les
nop
push
inc
add
hlt
aad
movsb
lock
test
jl
cmp
out
mov
dec
mov
clc
mov
mov
rcll
pop
test
jl
call
jmp
rcl
mov
loopne
cwtl
iret
adc
popa
jne
flds
movsl
xchg
adc
stos
ret
lcall
cltd
ret
mov
adc
push
sbb
sub
dec
mov
pop
mov
mov
or
movsl
enter
aaa
movsl
push
andb
pop
jns
ljmp
hlt
imul
add
das
fadds
mov
jg
bnd
enter
xorl
fildll
in
imul
pusha
dec
test
xchg
shll
xchg
mov
stc
dec
sub
scas
jmp
xlat
adc
pop
mov
sub
ret
dec
sbb
cmp
dec
mov
hlt
repnz
imul
inc
pop
test
testb
and
shll
popf
pop
cld
inc
adc
lds
xchg
repnz
dec
mov
xor
mov
call
inc
push
shrb
in
mov
cmp
outsb
fdivl
add
xor
ret
pop
add
xor
xchg
fs
cltd
out
xor
push
call
dec
mov
iret
and
xchg
mov
gs
mov
mov
outsl
out
sbb
fstpl
stc
ja
jb
mov
loope
sti
test
add
xlat
pop
pop
stos
fs
pop
leave
push
mov
cmp
in
mov
and
inc
enter
mov
rcr
in
pop
cmp
and
stos
adc
dec
outsl
push
sub
in
jbe
aad
mov
ret
popa
out
int
dec
scas
ret
decl
popf
roll
xor
adc
and
mov
iret
cmpb
inc
sti
push
fs
add
push
inc
aad
push
aas
insl
lret
lret
inc
daa
int3
sti
outsb
cmp
sbb
xor
ljmp
mov
test
push
cmp
stos
rclb
dec
icebp
and
in
lds
push
enter
mov
andl
pop
into
cmpsb
insl
ds
or
push
rclb
adc
inc
xchg
dec
mov
lret
and
stos
push
dec
mov
mov
sbbb
mov
enter
add
and
mov
popa
sub
adc
adc
ret
ljmp
xchg
lods
stos
enter
and
bound
enter
call
sar
jg
mov
outsb
sbb
dec
jle
jo
mov
repz
push
mov
stc
fiadds
push
jl
movb
test
jl
inc
or
in
cmp
imul
das
mov
in
xor
adc
add
lock
dec
addl
mov
int
ds
mov
out
in
jae
addb
xchg
and
mov
or
and
ss
mov
cmp
xchg
adc
push
mov
jp
cmp
cmp
cmp
fmuls
dec
out
jp
sahf
test
sti
pusha
lock
cmpsl
mull
jg
mov
inc
rol
and
pop
test
jl
mov
mov
sub
adc
fmuls
cmp
insb
dec
es
or
and
int
cmp
pop
mov
lcall
or
sar
cmp
add
pop
sbb
dec
pop
scas
sub
and
jge
in
pop
cltd
rorl
and
dec
jo
loope
pop
imul
xor
inc
shl
popf
mov
xlat
lods
outsb
fucomi
aam
insl
pop
mov
pop
dec
addr16
mov
mov
dec
mov
std
movsl
adc
cmp
add
iret
pop
mov
stos
lret
adc
filds
stc
mov
and
xchg
push
or
adc
addr16
sub
ja
insl
movsl
enter
lret
sarb
and
cli
enter
in
inc
mov
jne
aam
mov
les
pop
lea
in
sar
das
sub
jae
test
lods
add
stos
insb
in
mov
xor
dec
push
rcrl
rclb
shl
test
dec
add
jp
jo
cmp
add
pop
sti
shlb
jbe
fucomip
push
out
test
insb
mov
rorl
mov
test
xchg
push
or
js
cli
jp
decl
fmull
xchg
jge
in
pusha
xchg
sbb
rsm
sub
mov
sbb
pusha
mov
pop
adcl
rolb
add
fdivrl
jecxz
aaa
jnp
or
pop
push
mov
adcb
cmp
sub
not
inc
scas
shlb
jns
rorl
cli
fmull
aaa
pop
aas
addl
stos
sarl
xchg
scas
inc
mov
or
mov
and
into
adc
in
imul
inc
push
add
cmp
mov
in
or
fists
dec
rcl
adc
or
enter
in
decb
mov
add
inc
sbb
mov
fiadds
inc
push
sbb
pop
xchg
loop
stos
or
cmp
dec
and
cmp
pop
and
pusha
imul
mov
shl
adc
xchg
inc
mov
ljmp
stos
push
mov
cld
mov
lret
ret
lret
clc
in
lock
mov
int3
jbe
inc
lock
mov
xor
jmp
jge
cmp
xchg
push
ss
pop
mov
stos
shll
pushl
std
xchg
add
inc
scas
xchg
ja
in
fidivrs
test
idivb
ss
stc
sbb
add
dec
shll
sbb
dec
mov
jmp
xchg
je
adc
shll
mov
adc
sub
nop
stos
in
loopnew
xchg
mov
and
stos
xor
mov
mov
pop
enter
das
enter
cld
mov
std
test
mov
cmp
inc
pop
pushf
pop
xchg
rorb
mov
and
dec
clc
cmpsl
jecxz
pop
mov
cwtl
and
jmp
push
push
jo
xchg
sti
lea
push
inc
mov
rol
add
lret
add
push
adc
xor
push
in
fistl
mov
sahf
mov
leave
jmp
imul
cld
xor
dec
push
mov
adc
out
icebp
movsb
addr16
mov
push
stos
inc
pop
rcr
call
adc
test
dec
adc
orl
sbb
neg
ds
arpl
cltd
inc
adc
xor
pop
or
fstpt
mov
inc
addr16
test
faddl
xchg
sbb
push
adc
stos
jne
icebp
incl
ljmp
or
enter
pushf
cld
fsts
orl
call
mov
adc
popa
push
ret
xor
in
mov
or
jl
les
cld
and
test
decl
filds
imul
out
arpl
ja
stc
jno
lods
in
push
mov
jae
xchg
mov
dec
or
jl
les
hlt
pop
inc
ljmp
jmp
cmp
inc
add
pushw
mov
enter
lods
push
mov
add
add
into
push
les
inc
not
lcall
cld
push
cld
testb
dec
mov
out
shlb
mov
subb
jecxz
ret
js
pop
xchg
js
insb
mov
mov
mov
mov
xchg
dec
lret
loope
or
mov
push
stos
inc
xchg
push
mov
xchg
xchg
aas
mov
nop
dec
cmpsl
in
jnp
test
mov
inc
pop
cmp
xorb
and
sub
ljmp
push
repnz
push
cs
xor
inc
insb
dec
leave
mov
test
arpl
mov
jbe
aaa
mov
mov
or
inc
roll
into
pop
insb
sub
out
lock
dec
jmp
sub
jmp
xchg
sbb
fstpt
mov
xchg
out
out
js
or
clc
lods
stc
inc
pand
mov
mov
sbb
dec
cli
or
outsl
sub
pop
or
lret
xchg
mov
scas
lds
lds
hlt
add
pop
mov
push
push
xchg
jb
dec
clc
pop
xorb
repz
lock
xchg
push
rcrl
fs
push
in
out
lods
faddl
scas
pop
pusha
insl
inc
into
push
daa
and
lret
inc
or
mov
jecxz
lods
adc
fistpll
cmp
out
jne
cwtl
outsb
lret
inc
adc
aam
xchg
mov
or
lods
pusha
mov
in
mov
push
mov
shrb
inc
rol
fsubl
and
fcoml
mov
jo
xchg
loop
pop
dec
movsb
jp
add
shll
test
fwait
cwtl
pop
lock
dec
mov
out
jl
xchg
jle
hlt
adc
jle
je
and
nop
fistps
lret
std
filds
push
cltd
lret
mov
xchg
fcomip
push
out
imul
call
lcall
xor
jecxz
insl
lods
fs
sub
add
dec
lahf
arpl
inc
repnz
or
jl
cmp
cli
out
jno
hlt
in
pop
repz
lds
lret
mov
jl
ljmp
stc
out
imul
ret
and
int
in
push
jl
cmp
push
int3
cmp
imul
dec
pop
push
pop
dec
inc
sahf
aam
faddp
xchg
add
data16
jge
or
scas
fcmovne
jmp
push
pop
push
or
stc
orb
add
sti
aam
iret
inc
inc
les
inc
or
cld
add
dec
leave
dec
in
jl
and
clc
lods
xchg
cmp
push
addr16
xor
mov
aas
cmp
or
jns
fcomi
mov
test
or
xor
fadds
cmc
cmp
les
fsubl
cmp
inc
out
fucomip
test
in
pusha
out
pushf
popl
enter
ret
adc
jbe
jg
addl
sbb
pop
add
mov
dec
std
mov
mov
adc
push
sti
push
int3
adc
addl
push
xchg
mov
xchg
jmp
push
cli
out
icebp
push
loopne
jl
ljmp
shlb
mov
sbb
cmp
xor
jnp
mov
out
loopne
ret
adc
or
dec
jg
int3
stc
daa
sbb
enter
je
or
or
pop
adc
jl
pusha
lret
xor
mov
xor
inc
out
add
or
fdivs
mov
jne
ss
sbb
xchg
dec
in
test
xchg
sub
pusha
dec
mov
pop
subb
pusha
or
inc
inc
inc
fidivs
sub
ss
or
mov
fdivr
lea
push
sub
lock
push
pop
inc
push
xchg
adc
sub
pop
out
add
xor
adc
loop
or
mov
jmp
dec
cmpsb
loop
mov
gs
mov
push
enter
jbe
das
mov
test
stos
ret
xchg
in
out
insb
les
adcl
stos
sub
cmp
rorb
loop
fnstenv
add
lret
or
xor
or
jo
pop
add
sub
mov
into
or
xchg
or
add
mov
sub
cmpsb
mov
ds
and
mov
mov
cli
pop
sub
mov
scas
xchg
loopne
jmp
imul
lds
mov
loop
mov
and
jmp
or
jmp
cmpsl
xchg
mov
inc
dec
in
jo
shl
das
xor
pop
fmull
mov
rorb
and
stc
iret
cmc
and
pop
incl
mov
pop
scas
adc
fcmovnu
sub
jmp
or
icebp
xchg
pop
xlat
lcall
movsb
jp
iret
leave
jl
in
scas
cld
adc
outsl
outsl
lea
sbb
pop
ja
xor
mov
or
lds
or
aaa
xor
gs
add
insl
add
scas
pop
xchg
movsl
mov
adc
cmp
mov
pusha
xor
mov
jbe
inc
call
dec
sub
jl
mov
jl
scas
ss
jl
mov
insb
push
jno
jge
pop
ss
icebp
jb
fisttpll
push
push
cmp
mov
fs
out
mov
enter
ja
or
xchg
jae
dec
rol
sub
mov
lea
cmpsb
gs
out
not
ds
mov
std
fistps
sub
push
mov
and
subb
fwait
push
test
sbb
jge
inc
xchg
rorl
pop
jle
addr16
jae
sub
sbb
jmp
mov
mov
ja
or
test
sahf
cld
ja
std
sbb
shll
stos
jne
xchg
dec
scas
add
scas
jecxz
daa
test
jne
subb
mov
shl
jp
push
out
movsl
iret
popf
pop
cmp
insl
cld
int3
lret
inc
pop
adc
push
xor
xchg
dec
mov
in
xchg
lock
sbb
insl
or
stc
in
mov
pop
ret
pop
cmp
mov
mov
xchg
inc
dec
pop
dec
jb
lret
sub
push
adc
pop
shr
or
imul
insb
ror
cmp
divl
hlt
pop
lcall
repnz
sbb
cltd
popa
ljmp
cwtl
ljmp
sarl
fstl
push
rcl
jno
jmp
int3
sub
sub
enter
shrl
nop
mov
shrl
bound
pop
lret
xor
push
cmpsl
xor
xchg
mov
dec
mov
mov
push
orl
pop
stos
ficompl
sub
aam
fwait
repnz
inc
or
cltd
xor
or
pop
jbe
ret
iret
lahf
in
dec
outsl
pushl
lods
mov
xchg
mov
jp
andl
pop
addr16
mov
or
mov
sbb
or
sub
scas
les
imul
testb
cmp
mov
lret
mov
mov
loope
xchg
mov
hlt
inc
clc
leave
mov
mov
shrl
nop
xchg
dec
adc
cmc
cmp
mov
jb
inc
movsb
push
jbe
in
mov
mov
test
or
in
addl
into
imul
mov
outsl
mov
sti
adc
or
es
popf
imul
jb
jns
lock
adc
xor
lret
stc
leave
les
fs
ljmp
jb
or
icebp
adc
test
jl
sub
pop
lock
add
subb
jmp
mov
das
jnp
in
mov
xchg
sarb
stos
sarl
add
cld
add
mov
cmpsb
add
or
add
push
out
out
ret
mov
push
lret
rorl
mov
jns
or
cmp
scas
cli
or
push
ret
leave
int3
jae
movsl
pop
sub
mov
inc
xor
test
notl
mov
mov
test
test
mov
repz
dec
pop
test
or
insl
mov
push
inc
iret
imul
out
mov
push
mov
test
xlat
daa
mov
lahf
adc
push
popf
js
clc
test
add
inc
pop
jl
mov
adc
js
and
xchg
jno
sahf
xchg
lock
out
stos
cmp
dec
xor
jmp
or
xor
sbb
and
jmp
ds
cmp
jle
mov
adc
inc
into
mov
inc
cmc
xor
or
pushf
mov
mov
negb
repnz
pop
outsb
lds
mull
jmp
inc
and
mov
cmpsl
inc
xor
xchg
in
xor
or
int3
xchg
mov
les
mov
jg
and
pop
icebp
out
in
jl
je
inc
data16
mov
out
pop
inc
dec
int3
jae
cmp
jnp
frstor
xor
aam
sbb
sub
mov
jbe
fcmovnb
xchg
imul
jo
or
mov
push
dec
adc
jl
xchg
jno
neg
cwtl
out
movsb
inc
fdivl
enter
insl
mov
mov
or
mov
js
sbb
shr
or
sbb
mov
cld
lret
jns
hlt
fmulp
dec
dec
cmp
mov
dec
push
xchg
adc
push
mov
cmp
sahf
xor
mov
pop
inc
mov
cmp
jg
jl
xchg
jmp
repnz
jns
arpl
cli
lds
inc
mov
out
dec
jae
jnp
les
scas
dec
jae
hlt
push
push
cmp
cmp
iret
call
mov
sbb
mov
andl
mov
add
pop
ret
mov
jbe
and
push
mov
shll
ss
and
mov
rcl
xlat
test
dec
jmp
mov
int
leave
stos
or
add
jnp
inc
rcrb
stc
push
push
roll
daa
arpl
cli
xchg
dec
jge
cmp
ret
out
dec
push
jl
ret
pop
jbe
push
push
flds
mov
mov
cmp
imul
in
std
stos
in
xchg
pop
push
clc
int3
mov
jle
ljmp
jl
or
hlt
mov
xchg
sub
xor
push
fsubrl
adc
in
clc
pushl
icebp
cmp
dec
or
sarl
add
cmpsb
cmp
add
add
jl
call
and
dec
mov
add
fmuls
iret
jecxz
bound
push
push
cmp
scas
and
dec
jg
xor
out
mov
jne
add
scas
mov
aad
cld
outsb
addr16
mov
lret
scas
sub
sbb
cmpl
push
cmc
sbb
pop
sti
rorb
sbb
into
dec
imul
jle
cltd
test
add
cmpsl
and
cmp
popf
clc
add
mov
cmpsl
rcll
sbb
int
xchg
clc
je
out
mov
mov
dec
ss
fnstsw
stos
add
push
nop
in
enter
sub
ja
out
pop
adc
and
subb
dec
cmpsb
out
dec
int3
mov
adc
cli
jecxz
mov
fs
shll
jg
jns
mov
sub
aam
and
jae
insl
cli
stc
nop
mov
or
jl
or
or
sub
adc
jle
sub
test
push
lret
scas
in
int3
ds
sub
adc
call
subb
jg
xor
sbb
aam
lock
insb
stc
insb
cli
dec
mov
out
fimuls
or
push
dec
out
insl
mov
mov
test
stos
and
mov
in
mov
inc
das
or
fsub
and
cmp
xor
mov
or
pop
push
pushl
test
cmp
scas
fs
pop
jle
ja
dec
cmp
fildl
push
cmp
addr16
sub
lea
mov
xor
cmpsb
jmp
or
adc
jecxz
scas
or
es
das
fimull
fistpll
aaa
jmp
insl
nop
sub
push
test
xor
lret
hlt
fnsetpm(287
mov
and
add
gs
mov
jl
xor
fmul
sbbb
or
or
leave
xor
std
or
cmp
dec
dec
ljmp
push
xor
in
js
fsubrl
mov
fmull
adc
hlt
mov
insb
sarl
lock
xor
xor
or
shll
adc
test
loope
shlb
sub
shll
test
pushf
fdivl
mov
pop
mov
adc
mov
mov
daa
cmp
adc
xorb
sub
incb
inc
addr16
push
imul
loope
std
stc
inc
rclb
popf
inc
push
testl
test
mov
jo
pop
scas
ljmp
push
cld
add
mov
mov
das
add
push
data16
stos
aad
fwait
add
stc
or
jnp
std
cld
std
jmp
mov
push
aam
or
jo
jmp
fcmovnu
ds
std
in
or
cld
lock
stc
stc
shr
or
out
pop
pop
rcl
jmp
aad
adc
xor
ja
hlt
add
adc
out
jle
call
insb
jne
add
fsubrl
imul
or
mov
xlat
into
xor
jl
je
enter
or
xchg
mov
sahf
cmp
shl
mov
in
or
sub
or
cmp
or
out
adc
pop
xor
cmp
int3
testl
nop
mov
push
ds
hlt
loop
jns
aas
and
cmp
or
jmp
xor
repnz
xchg
jmp
repz
cmp
rclb
rorb
push
fisttps
in
fs
rorb
dec
dec
sub
pushf
out
lret
push
icebp
mov
pop
dec
xchg
loop
stos
into
adc
sbb
mov
jmp
pause
and
xlat
fdivrs
dec
je
sarl
repz
movsb
cld
addb
addr16
mov
in
insl
fcmovnbe
int3
cwtl
cld
ret
add
sbb
adc
dec
lods
push
lock
push
fildl
enter
sahf
mov
sbb
sub
jg
stos
enter
push
insl
jl
pop
lret
and
not
dec
mov
add
push
add
mov
test
shl
xor
push
or
rcl
or
cmp
loopne
pop
pop
adc
aaa
data16
repnz
mov
add
inc
lock
jae
xchg
rorl
sbbb
and
sub
xchg
in
dec
nop
shl
cmp
loope
xor
adc
xchg
cmp
gs
dec
pop
dec
movsl
out
inc
jp
dec
or
loope
cmp
popa
shl
jg
imul
sbb
push
pop
mov
jmp
mov
scas
cmpsb
stos
sbb
int3
mov
enter
call
enter
stc
cmp
push
hlt
or
cld
jecxz
lods
xlat
cmpsb
loope
jne
mov
mov
add
in
aas
jb
mov
repz
cltd
ret
enter
sub
pop
cmp
mov
mov
dec
add
incb
test
mov
jns
or
repnz
adc
cld
ror
ror
sbb
ficoms
pop
mov
das
mov
in
xchg
stos
cs
nop
pushf
or
icebp
or
shll
jge
add
movb
mov
push
into
lcall
sti
out
or
lods
stos
and
leave
sbb
lock
out
stos
cmp
mov
cmp
xchg
inc
in
jl
les
or
mov
jecxz
lods
pop
or
hlt
pop
stos
inc
mov
scas
mov
jmp
or
dec
cmc
imul
leave
mov
pop
lock
push
xor
ss
bswap
push
scas
and
fnstenv
adcl
jg
sbb
jns
push
mov
rcr
push
scas
mov
addr16
stos
push
sub
inc
idivl
cmp
inc
push
cld
rolb
sub
add
inc
jb
out
cmpsb
sti
lret
pop
je
mov
movsb
fstpt
ja
fcomip
and
movsl
push
je
jle
sbbl
lret
xchg
daa
nop
inc
stos
ljmp
scas
mov
test
cmpsb
dec
mov
aad
sub
sbb
add
mov
out
push
stos
mov
jle
cmpb
inc
outsl
jg
or
hlt
sbb
test
add
and
lods
xchg
clc
shll
mov
das
stos
add
sbb
out
cmpsb
cmpsb
sbbb
pop
lret
outsl
cwtl
pop
sub
std
std
mov
pop
push
jg
test
cli
inc
inc
in
inc
rol
scas
js
sbb
jg
out
push
mov
jl
mov
sahf
out
dec
hlt
dec
add
jmp
add
pop
into
or
aad
hlt
popa
add
cmp
add
xchg
push
cmp
into
mov
jo
or
scas
lret
lods
push
test
lret
push
cmpsb
xchg
jle
in
pop
cli
or
lods
sub
mov
lret
stc
repnz
cmp
pop
inc
mov
jecxz
cwtl
es
and
in
ds
out
push
xchg
lods
outsb
and
pop
inc
into
mov
add
sbb
xchg
xor
call
sub
or
popa
sarl
out
insb
int
test
mov
scas
out
loope
sub
in
mov
xor
mov
jmp
dec
push
rcr
in
sbb
inc
jmp
std
nop
out
call
inc
div
jmp
stos
stos
out
les
jecxz
pop
call
pop
xor
shr
mov
or
sbb
jne
cmp
rclb
mov
lahf
jns
add
dec
jno
or
add
int
cmp
and
test
lds
in
out
inc
ror
int3
ljmp
daa
outsl
cli
rolb
inc
or
add
sti
add
add
pop
or
fiadds
in
inc
das
fwait
cmc
inc
loope
push
mov
lret
add
jle
in
and
inc
mov
scas
dec
je
mov
repz
or
dec
jno
and
xchg
jnp
std
test
rorb
cmpsb
lods
jle
imul
dec
cmp
faddp
stos
movsl
cmp
jno
enter
or
xchg
pop
pushl
mov
jne
cmp
inc
enter
pop
stos
inc
or
cmp
faddp
push
ror
push
sbb
add
lcall
jp
fistpl
mov
add
leave
fisttpl
pop
pusha
mov
es
mov
jp
adc
and
adc
idiv
icebp
pop
push
sub
mov
mov
je
sbb
pop
cmp
stos
lahf
inc
adc
adc
fisttps
cmp
push
add
or
xor
cld
das
mov
lret
call
xorb
insl
stos
push
enter
lods
pop
push
or
xchg
cmp
cwtl
cmpsl
or
jmp
xor
add
cmp
add
dec
add
lret
lret
aad
jl
scas
inc
orl
cmp
outsl
push
cmp
mov
shr
jo
outsl
pop
inc
rcrb
shll
sub
ljmp
ja
enter
divb
adc
mov
movsb
enter
enter
mov
hlt
mov
mov
in
les
pop
cld
cltd
in
out
mov
pop
inc
fnstsw
or
js
fdivrl
or
std
or
pop
mov
push
sti
ret
adc
aam
rcl
test
jnp
or
mov
ss
call
jmp
les
xchg
fdiv
mov
bound
adc
and
xchg
add
loop
xchg
lahf
ja
cmpsl
lret
lcall
xor
jo
sbb
mov
sbbb
fwait
pop
mov
scas
cmp
testl
out
adc
or
insb
or
lret
mov
jno
jne
add
rcr
pop
cmp
sub
lahf
inc
sti
jno
int3
lret
jae
sbb
lock
ror
pop
stos
jmp
add
shlb
cmp
das
fmulp
add
mov
test
fcom
movsb
leave
rclb
jno
repz
jl
es
stos
orb
xor
dec
aas
rcll
into
out
subb
adc
enter
mov
js
in
or
enter
xlat
xchg
fiadds
popa
add
out
xor
in
rclb
lods
mov
std
shrl
iret
lret
xchg
cmpsb
test
je
ror
movsb
jg
pop
pop
lods
mov
jne
lret
in
test
repz
cld
xchg
jp
pop
jbe
or
sti
inc
in
inc
jnp
outsb
mov
roll
dec
test
add
xchg
fdivrp
ds
jp
inc
repz
mov
cld
pop
stc
inc
mov
dec
shr
add
add
mov
jae
inc
and
sub
xchg
in
in
push
or
orl
jmp
or
in
or
add
jmp
pop
lods
dec
sub
sub
or
pop
faddl
into
push
inc
or
mov
ja
dec
scas
pop
or
repz
xor
inc
push
in
inc
shrl
cmp
mov
mov
test
mov
mov
stc
mov
hlt
push
imul
mov
mov
jb
or
fimull
roll
or
mov
lret
dec
sbb
inc
push
insb
test
pop
push
mov
aad
aam
shl
cmp
aaa
fsub
xchg
stos
rolb
les
xor
inc
fmuls
mov
pop
cmp
and
and
mov
fists
das
rcl
gs
pop
fwait
xchg
in
pop
ret
loop
xchg
sbb
push
ja
jne
call
loop
int3
ds
sub
pop
push
stc
mov
inc
fsub
scas
push
xchg
rorl
int3
inc
push
mov
push
jmp
cmp
rorl
je
ds
pop
icebp
sahf
add
mov
dec
cmpsl
pop
aaa
and
scas
jmp
sbb
movsb
into
aaa
jmp
and
out
ds
or
rclb
dec
push
out
inc
loopne
popa
cmp
leave
in
add
dec
fmuls
std
xchg
pop
idivl
scas
jg
out
movsb
sti
mov
nop
or
lret
add
mov
inc
gs
push
rol
push
loop
add
test
shr
dec
rcrb
or
sbb
dec
test
lods
out
inc
dec
rcr
mov
jp
scas
dec
push
testb
addb
dec
sbb
xchg
lret
mov
mov
std
jp
ror
iret
insl
xchg
push
dec
rcll
jle
mov
std
xor
test
loopne
aad
push
lods
add
shll
cwtl
jle
sahf
fiaddl
sub
jnp
jbe
sti
mov
fdivrl
mov
add
loope
jnp
stos
cwtl
lret
dec
push
out
subb
push
push
mull
pop
mov
jne
dec
dec
pop
out
test
xchg
push
leave
jae
sub
xchg
adc
pop
pushf
cmp
inc
scas
shlb
rclb
fldt
in
xchg
adc
push
stos
repnz
lds
pop
mov
adc
add
int
add
imul
or
aaa
incb
das
dec
iret
imul
xlat
xchg
lods
loop
andb
jle
cmp
dec
add
lret
cmp
int
dec
mov
jp
test
dec
fistpll
jo
dec
das
leave
dec
sbb
ffree
rcrl
testl
mov
enter
dec
test
or
push
pop
insb
fimuls
xor
sbb
aam
mov
aas
lcall
xorb
int
or
and
aad
dec
outsl
dec
pop
dec
jo
insb
dec
dec
movl
push
cmp
or
jmp
sbb
sbb
out
pop
jl
daa
mov
icebp
int3
in
mov
cmpsl
mov
dec
add
adc
mov
push
das
add
push
sbb
out
je
aam
ja
add
or
push
test
jne
push
mov
fmul
sbb
dec
xor
mov
sub
cld
xchg
mov
dec
std
sbb
gs
push
scas
jmp
js
rcrb
addr16
xchg
adc
jmp
dec
in
mov
mov
sbb
call
sbb
incb
aaa
or
xchg
arpl
push
dec
pushf
ficoms
and
xor
mov
pop
pop
clc
lret
cs
jbe
pop
bound
jns
cli
mov
and
push
mov
cmp
adc
addl
cmc
sbb
or
pop
outsl
shlb
xor
fdivrl
ja
stos
xor
mov
aad
fwait
mov
cld
add
icebp
push
or
mov
ror
jecxz
pop
decl
jmp
fistpll
xchg
push
sbb
sub
insl
sbb
in
aam
add
cld
nop
sub
xchg
int3
test
nop
out
mov
mov
das
xchg
dec
in
xchg
dec
in
jmp
mov
sub
adc
push
jg
movsb
lock
ds
adc
faddl
dec
mov
test
js
jp
sarb
jae
shrl
or
das
jmp
stc
add
lods
ret
cli
test
cmp
call
xchg
mov
les
pop
push
ret
in
les
jae
mov
fstps
add
pusha
add
test
pop
pop
stos
sbb
mov
mov
test
sub
movsl
push
mov
push
inc
clc
sbb
pop
fwait
dec
lods
adc
and
lods
cli
or
jmp
bound
push
bound
stos
xchg
repz
add
mov
fmuls
rorl
and
shlb
stos
fiaddl
cwtl
jmp
mov
andb
xchg
pop
mov
xor
mov
fcoml
jl
int
or
flds
cmpsl
or
add
sti
fsubr
hlt
cmp
in
inc
mov
push
iret
inc
jmp
jnp
mov
repnz
ss
ret
inc
mov
negl
jmp
mov
shll
xchg
je
or
cmp
cli
xchg
cmp
sub
push
in
mov
jge
dec
lcall
cmp
dec
arpl
fmull
icebp
xchg
in
adc
dec
leave
dec
scas
sbb
inc
inc
das
js
dec
jge
dec
stos
jmp
fbld
rol
imul
imul
mov
push
xchg
arpl
icebp
jne
imul
push
cmp
or
jae
xlat
es
lods
dec
push
inc
push
test
cmp
mov
push
mov
cmpsl
out
fs
xor
sarb
xor
push
mov
leave
stc
or
sti
mov
nop
inc
outsl
in
jno
push
and
addr16
in
inc
xchg
sub
shl
cld
mov
outsb
idivl
lcall
je
fwait
sub
jmp
mov
retw
adc
iret
lret
pop
lret
cmp
mov
sti
sbb
outsb
add
mov
or
mov
test
out
and
sub
daa
std
xor
lods
cmp
stos
ljmp
dec
pusha
mov
add
jecxz
lret
mov
jl
negl
insb
add
sti
in
xchg
mov
sbb
xchg
dec
cld
in
sub
pop
jae
lock
mov
insl
or
xchg
mov
push
stos
pusha
or
lret
ret
mov
sub
dec
pop
dec
or
enter
adc
mov
or
repz
or
cld
add
lret
scas
leave
pop
or
cmp
inc
dec
or
push
dec
icebp
jbe
test
jne
js
movsb
int
leave
mov
or
sub
mov
test
mov
add
std
push
mov
xchg
xchg
xchg
xchg
test
jp
aad
cmpsl
lcall
dec
stos
lret
inc
cmc
les
mov
add
in
or
cld
in
mov
int
dec
cwtl
pop
mov
add
psubsb
test
stos
out
leave
in
movl
stos
cmp
sbb
into
adc
fsubs
inc
sbb
dec
pop
in
mov
test
stos
out
ret
inc
cwtl
insb
cmp
das
outsb
sub
aad
adc
mov
ds
push
adc
aad
or
iret
and
sub
test
jbe
cmc
outsb
xor
mov
data16
push
dec
pop
or
lods
xor
or
mov
push
lcall
xor
adc
xor
leave
jo
dec
jae
je
ds
xor
test
inc
or
pushf
dec
or
daa
cld
inc
dec
popa
inc
sti
mov
pop
mov
lahf
cli
pop
cmp
sub
xchg
push
fldcw
pop
xor
scas
mov
pop
jne
xchg
pop
dec
movsb
jbe
loope
pop
xchg
into
jl
sbb
dec
cmc
push
les
or
xchg
xchg
and
xor
dec
pop
enter
dec
ja
pushf
stc
adc
ja
or
sub
jmp
fistps
or
cmp
lods
outsb
or
jb
loope
pop
add
sbb
popf
insb
dec
leave
clc
lea
je
enter
insb
rorl
rcll
or
popa
jl
push
inc
mov
js
sarb
mov
notb
mov
sub
cmp
mov
fwait
pop
js
rolb
dec
jnp
pop
hlt
cmp
test
or
jge
ror
adc
sub
add
mov
inc
push
or
mov
addr16
xor
outsb
jns
lret
in
or
xchg
xorl
mov
shr
aam
xchg
rclb
push
mov
lock
xchg
push
flds
scas
inc
fucomip
and
addl
jle
in
out
shl
xchg
pushl
pop
leave
in
popf
movsb
mov
fsubrp
push
lcall
sbb
inc
push
cmp
mov
movb
dec
out
dec
les
rcl
mov
lock
pop
outsl
jle
jmp
cmc
out
mov
ss
iret
jmp
lret
mov
or
loope
in
xorb
xchg
jb
fistpll
xchg
mov
mov
in
imulb
out
stc
sbb
push
dec
pusha
mov
mov
xchg
movsb
adc
push
mov
dec
loope
and
mov
sbb
sub
enter
pop
pop
and
movsl
subl
push
aam
int3
push
mov
cli
jge
xlat
stos
shrl
shrl
jle
dec
jge
jge
xlat
test
cs
ja
xchg
push
pop
inc
lock
dec
aaa
and
test
xchg
mov
or
dec
test
fwait
mov
in
test
xor
call
cmp
std
sub
pop
pop
stc
insl
punpckhwd
lock
stos
adc
test
stc
iret
pushf
jne
mov
cmp
fisubrl
decl
pushf
int3
push
scas
mov
filds
rorl
sbb
lds
lods
adc
dec
sbb
leave
decl
fisubs
jecxz
lcall
mov
jge
sbb
stos
insb
xor
or
dec
sbb
xlat
lock
or
ljmp
in
dec
jp
or
push
jnp
daa
call
lret
cmp
cmp
enter
ds
sbb
in
adc
mov
sub
int3
xor
xor
cmp
lods
jg
sbb
jp
test
jp
into
cli
rcr
add
push
cmp
mov
add
idivb
jmp
xchg
movsl
enter
fcomps
or
cmp
ss
daa
pop
inc
sbb
jbe
test
stos
jns
popa
sbb
push
mov
jmp
jl
cmp
xor
loop
push
jp
js
daa
jne
arpl
nop
mov
xor
mov
insl
cmp
pop
es
jg
or
addl
lret
leave
or
inc
mov
add
push
fwait
jmp
dec
cmc
hlt
mov
or
and
add
adc
into
in
xlat
mov
out
lret
daa
jmp
imulb
cmp
xor
jmp
adc
push
js
stos
add
push
fisttps
out
mov
or
out
or
and
jge
mov
call
mov
xchg
xlat
cld
mov
fcmovnbe
repz
scas
ljmp
enter
iret
push
sub
movsb
or
mov
and
inc
jae
sub
cld
push
xchg
dec
xchg
jbe
fnstcw
jecxz
loope
mov
mov
mov
stc
dec
les
mov
xlat
and
ret
xlat
rorb
rcl
or
mov
add
push
pop
add
or
or
or
cmp
hlt
sbb
sbb
out
adc
inc
faddl
testl
loopne
or
push
fistpl
clc
adc
and
ja
xlat
push
sub
ret
les
or
push
aas
dec
fwait
rorl
mov
push
outsb
mov
outsb
aas
push
xchg
pop
push
dec
jp
mov
ror
je
jg
or
data16
test
fldl
sbb
loopne
loopne
inc
pop
dec
scas
sti
mov
out
mov
ror
inc
pop
pop
adc
or
paddq
jo
mov
cmp
inc
lea
aad
xchg
aam
jo
mov
cmp
adc
push
jo
mov
cmp
adc
pop
jo
mov
cmp
pop
test
aaa
testl
add
fdivrs
pop
mov
mov
std
lds
lahf
in
fwait
in
cs
add
lahf
fcomp
aaa
add
ss
mov
and
ret
decl
sub
xchg
xchg
leave
mov
pop
test
insl
mov
pop
fcompl
fisttps
pop
or
jl
lock
scas
mov
jo
repnz
popa
mov
rclb
addr16
movsl
dec
into
mov
adc
cmp
ret
push
inc
outsl
std
pop
cmpb
cmc
mov
lea
sbb
jmp
xor
divb
enter
mov
mov
pop
xchg
js
pop
xchg
arpl
fwait
xchg
jge
out
add
ja
or
test
or
xlat
sub
out
movsl
mov
push
ss
inc
inc
pop
enter
fcoms
mov
adc
fadd
mov
lret
lods
out
addb
xchg
aad
sbb
loope
pop
mov
push
pop
pop
stos
add
je
xlat
repz
popl
mov
jmp
in
cmp
or
out
rcll
out
cld
jg
pop
cli
js
out
jbe
push
jb
pop
add
lods
in
pop
cltd
popf
xor
inc
scas
mov
add
repz
sub
mov
lret
jno
cmc
repz
cmp
je
inc
and
icebp
ds
or
loope
xlat
fildl
cld
loopne
rol
add
or
or
jmp
cld
add
cmp
out
xor
loop
jne
adc
xor
jno
sarb
outsb
into
fs
or
cmp
jo
outsl
mov
add
xor
addr16
mov
scas
out
pop
cwtl
push
shrl
cmp
inc
hlt
mov
test
adc
and
push
ja
sbb
mov
push
xchg
sbb
fwait
stc
and
sbb
cmp
and
ret
faddl
mov
leave
xchg
push
ja
sub
push
mov
test
mov
adc
rolb
fimull
mov
in
lods
lea
jmp
mov
movsl
xor
arpl
pop
lds
das
add
pop
lods
fsub
xor
xlat
adc
xor
stc
mov
daa
lods
jge
jnp
inc
xor
mov
std
cmp
mov
xor
xchg
and
ss
mov
pushf
nop
mov
and
test
push
fcmovnbe
mov
push
or
in
cld
test
xchg
push
sub
fadds
adc
bound
sbb
jmp
stc
lret
or
mov
mov
int
test
push
sub
lahf
repnz
push
idivb
mov
enter
or
or
std
and
adc
stc
out
sti
popa
adcl
inc
pop
inc
stos
test
or
aaa
mov
mov
test
mov
int3
iret
xchg
repz
pop
data16
in
cmp
push
or
insb
cli
das
cld
std
stos
mov
jge
cltd
or
fwait
xor
roll
sbb
adc
faddl
enter
lret
mov
jp
adc
dec
or
jmp
lret
out
hlt
leave
dec
imul
js
inc
jmp
ds
dec
stos
adc
popa
loopne
pop
push
mov
fisttpll
out
loopne
lods
fbld
jnp
lahf
inc
aam
push
dec
test
dec
xchg
outsb
mov
scas
lret
fistps
int3
popa
xchg
js
adc
or
pop
fisubrs
sub
cs
rorl
das
add
dec
push
xlat
mov
or
loope
test
movsb
in
mov
pop
mov
aad
or
xchg
fisttps
cmp
into
insl
or
outsl
or
rcll
push
jl
push
scas
aam
jmp
cmp
cmp
in
cmc
stc
shll
push
loope
inc
xor
jb
mov
icebp
mov
ds
inc
ret
push
loopne
shrl
sbb
mov
out
add
jg
in
lret
pop
shrb
pop
mov
mov
mov
inc
jmp
sar
pushf
aad
mov
fdivrl
fidivs
scas
adcl
add
mov
mov
fisttpll
into
or
mov
mov
or
mov
cmpsl
inc
sbb
xor
test
insb
cltd
jo
mov
inc
stos
jge
jae
nop
fucomip
pop
jnp
push
cmp
lods
mov
scas
test
std
test
and
cmpsb
cs
jae
xchg
lret
dec
fwait
ret
mov
xchg
mov
jp
sub
mov
rorl
or
nop
pop
aaa
enter
mov
dec
nop
or
dec
fnstsw
outsl
jg
add
in
and
xchg
lret
mov
leave
ret
mov
testb
mov
aad
cmp
test
dec
loop
shll
shrb
add
shl
lcall
inc
mov
insl
xchg
je
jl
ret
iret
mov
push
lret
dec
clc
lods
cmp
jge
ret
fildl
inc
or
inc
xchg
add
cmp
inc
rorl
fiadds
incl
leave
cltd
nopl
cmp
sbb
ja
mov
adc
fwait
cwtl
dec
dec
pop
and
mov
inc
fnstcw
sbb
gs
jecxz
push
jl
rclb
dec
sbbl
adc
je
pop
add
and
jne
and
add
mov
xchg
cld
aad
sbb
mov
pop
push
test
jecxz
dec
add
or
or
das
jns
push
ss
stc
sub
or
inc
movsl
push
je
mov
add
sub
cmp
add
sbb
push
xchg
fiadds
imul
adc
ret
xchg
std
dec
dec
lret
mov
leave
xchg
ret
sahf
lret
sarb
dec
fyl2xp1
mov
in
movsb
mov
ja
cli
repz
or
fisttpl
flds
push
jne
pusha
je
push
adc
stos
mov
or
popf
and
rorl
fnstcw
dec
add
mov
or
push
fldt
or
mov
rorl
or
xchg
lods
mov
sub
es
mov
adc
or
or
movsl
inc
mov
rcrl
mov
xchg
push
push
ret
cmpb
mov
bound
adc
mov
jne
mov
fdivl
test
movsb
mov
jbe
std
lret
setge
out
icebp
fs
jbe
add
jnp
decl
orl
jecxz
movsb
add
add
mov
cld
cmp
cmp
sarb
pop
sbb
loope
scas
add
fsubr
and
push
jmp
or
mov
sbb
cmp
pop
or
mov
push
test
xchg
cld
or
xor
push
in
repz
mov
out
mov
jl
ds
pop
ljmp
rorb
fadds
and
sti
or
rol
push
xchg
pop
jecxz
push
or
fbstp
push
das
or
jmp
mov
sbb
sarb
pop
or
int3
xor
cmp
int3
dec
mov
inc
push
or
pushf
roll
xchg
lret
cmp
or
sbb
or
mov
lock
movsb
aas
sahf
je
daa
adc
movsb
jecxz
sarl
xchg
add
jo
decl
imul
jnp
or
dec
xor
cmp
testl
cmp
xor
xor
popf
hlt
test
test
out
std
nop
test
clc
sahf
in
fcmovne
jmp
jo
sbb
mov
hlt
loopne
push
jmp
mov
dec
or
pop
mov
mov
shrl
ljmp
les
pop
sub
cmp
cmp
xor
mov
inc
push
int
cmp
nop
fs
add
rol
mov
dec
ja
and
mov
jo
jae
or
outsb
sub
cmp
je
sti
cmp
jge
mov
xchg
add
movsb
push
and
out
mov
xor
add
mov
or
xchg
jno
call
mov
rcll
imulb
or
shll
into
nop
cmpsl
aam
fdiv
xchg
fdivrs
pop
push
fldt
jno
movsl
or
add
cmp
imul
pop
xor
jno
add
int
jp
jp
mov
idivl
inc
aam
xchg
aam
rorb
fisttps
jne
add
cmp
sar
jnp
or
jp
mov
xchg
scas
jbe
push
xor
call
adc
cmp
inc
shl
xchg
rorb
cmp
fisttpll
repnz
cli
mov
or
mov
in
shl
imul
ficoms
or
testl
ret
pop
ss
pushf
stc
mov
mov
mov
jecxz
imul
jecxz
stc
or
filds
jns
inc
xchg
jns
jmp
dec
test
mov
pop
div
dec
mov
push
cmp
jle
push
fbld
div
fistpll
fwait
leave
mov
xor
cmp
mov
ja
stos
repnz
push
movsl
adc
xchg
lock
cwtl
scas
repnz
aam
aaa
pusha
fcmovb
push
mov
lods
inc
add
negb
idiv
cld
adc
push
std
inc
notl
push
fcmovnbe
popf
imul
adc
inc
les
add
hlt
push
adc
jecxz
adc
mov
and
hlt
out
pop
dec
loop
add
test
jl
into
or
in
cmp
repnz
aaa
js
arpl
daa
adc
cmp
xor
pop
hlt
lods
enter
aas
add
dec
cmp
or
mov
mov
jnp
repz
js
add
lcall
sahf
filds
or
and
push
mov
imul
stc
jne
and
mov
mov
fadds
or
push
mov
xor
xchg
pop
pop
or
sbb
aaa
in
ljmp
add
sti
shll
sub
int
cli
out
aaa
aad
mov
cmp
aad
icebp
ss
mov
add
pusha
stc
add
mov
js
mov
adc
scas
xchg
adc
xor
into
mov
add
mov
adc
rorl
addb
dec
jae
ds
mov
sbb
xchg
clc
aam
add
dec
fisttps
mul
popf
lret
or
xlat
xchg
stc
inc
sbb
rorb
fcmovne
rol
mov
cmpsl
call
lret
out
jecxz
stos
or
outsb
mov
stc
jb
and
movsb
cmp
sbb
add
aaa
ja
flds
mov
mov
shll
cld
inc
lods
into
xchg
shrl
dec
rcrb
cmc
jae
fstps
stos
cli
ds
sub
int3
push
adc
fadds
mov
das
ret
clc
add
jno,pt
xor
pop
mov
jmp
les
dec
stc
xchg
int3
inc
jmp
push
sarb
jnp
fidivrl
or
jle
pop
mov
rcrl
jbe
add
xchg
push
sti
lea
push
int3
inc
out
scas
or
or
adc
dec
outsb
dec
ficoms
std
adc
scas
push
dec
or
or
or
ret
sbb
rcr
mov
and
inc
loope
inc
jl
sbb
sub
nop
or
pop
mov
movsb
ds
or
int
dec
ret
andl
scas
or
adc
bound
pushf
or
dec
test
inc
insl
pop
fstl
cmpb
dec
pop
test
jae
pop
lods
mov
dec
sub
mov
push
adc
test
and
stc
sub
adc
mov
mov
push
repz
jecxz
mov
xchg
lcall
mov
lock
add
push
enter
js
decl
add
sub
mov
dec
fldcw
dec
dec
sub
add
or
ret
mov
into
lock
or
dec
jecxz
out
movsl
mov
jb
stos
lret
inc
jp
xchg
dec
or
into
jle
or
int
lahf
jns
out
sbb
pusha
in
stos
pop
xchg
lock
xchg
dec
jno
daa
jae
xor
dec
stc
cwtl
dec
lods
stc
xchg
add
mov
dec
xchg
jl
fildl
loop
sbb
sbb
test
inc
daa
fists
les
hlt
sbb
movsl
dec
shll
rorb
dec
xor
mov
add
lods
mov
test
adc
fildl
pop
inc
ret
sbb
mov
push
out
push
pop
cmp
fxch
ret
jmp
into
cld
pop
inc
jbe
jne
insb
pop
pop
pop
lock
rolb
add
outsl
ja
and
mov
leave
adc
cmp
dec
mov
mov
or
mov
mov
inc
and
add
jo
push
cld
xlat
arpl
sub
mov
fstpt
inc
or
pop
cmpsl
lret
aam
xchg
stos
xorb
ljmp
xor
shrb
mov
or
add
or
dec
leave
xor
or
enter
push
out
cmp
ret
push
push
mov
dec
mov
jmp
mov
xchg
cmp
and
and
and
inc
mov
lds
xchg
in
xchg
inc
lods
sti
packuswb
stos
lcall
sub
adc
jo
push
in
pushf
sbb
enter
lock
inc
lcall
in
lcall
int
ret
adc
dec
xor
mov
jb
lock
lds
or
js
fnsave
cld
jnp
mov
xchg
add
into
mov
sbb
or
scas
mov
or
dec
scas
loope
sarl
cmp
nop
cmc
in
pop
add
pop
jle
dec
or
cmc
xchg
push
mov
mov
outsl
or
cwtl
loope
rclb
adc
or
out
in
mov
stos
push
sub
or
rcrb
shl
push
not
fidivrs
push
lret
dec
fmull
pop
and
clc
add
cmp
cmp
jge
icebp
fcmovu
arpl
add
clc
add
add
jnp
sarl
icebp
or
in
or
out
add
cmp
mov
sub
loop
mov
mov
hlt
outsl
adc
pop
popa
mov
adcb
and
adc
adc
jno
jns
iret
sbb
mov
xchg
add
xlat
out
mov
sbb
adc
xchg
jae
mov
or
sbb
pop
lds
adc
adc
std
add
rol
test
pop
inc
les
sbb
fisttpll
sbb
dec
test
in
outsb
out
shlb
divl
mov
sarl
stos
testb
clc
movsb
daa
add
loopne
sub
or
xor
rol
mov
cmpsl
push
fadds
pop
xlat
std
clc
or
stos
pop
mov
sub
jbe
flds
mov
rclb
cmp
scas
test
add
or
js
int3
dec
ror
add
mov
ret
stc
xchg
sub
add
add
jl
out
dec
mov
jle
cmp
fimull
mov
out
jae
push
fcoms
inc
cmp
xchg
scas
nop
add
mov
or
aaa
pop
imul
pop
fldcw
stc
ja
mov
js
lcall
cmp
je
aad
lock
adc
inc
push
loop
clc
inc
push
fldenv
int
push
mov
xlat
fs
cld
cli
int3
dec
cmpsl
dec
adc
mov
mov
jmp
mov
push
fs
mov
pushl
inc
jmp
dec
addb
jno
sbb
rol
mov
inc
xlat
addr16
push
ret
mul
cmpsb
cmp
add
shll
jp
inc
enter
stos
bound
add
ret
sbb
jae
mul
sub
mov
dec
int3
dec
mov
cmp
sti
xchg
fdivrs
and
or
cmp
movsb
aad
stos
icebp
fisubrl
stc
or
shll
and
lds
and
ror
and
adc
mov
in
add
mov
or
enter
sbb
push
cld
xchg
push
shl
lret
push
test
mov
add
std
sti
and
lods
mov
lahf
leave
mov
sbbb
out
lock
fmull
lods
loope
iret
pop
xchg
jno
add
sahf
mov
push
ret
mov
in
dec
repz
lds
adcl
and
rcrl
lahf
icebp
addb
lret
lret
cmp
push
add
xchg
mov
push
fisubs
and
xor
xor
int
mov
add
push
xchg
scas
imul
or
push
lret
or
mov
scas
mov
mov
in
shrl
lea
jns
test
leave
cmc
ret
stos
test
mov
pop
mov
jl
dec
push
test
inc
or
pop
pushl
inc
xlat
inc
mov
data16
sub
lods
lods
dec
sub
push
stc
lods
or
orl
ss
mov
loop
lret
stos
push
sti
test
or
or
mov
imul
stc
mov
mov
sub
lahf
pop
lret
xchg
pop
add
cli
lds
test
add
scas
push
clc
jnp
add
cli
cmp
mov
out
inc
jl
xor
insb
ljmp
ds
into
inc
or
divb
repz
aad
sahf
or
popf
rorl
loop
dec
mov
pop
push
int3
iret
addps
xchg
jne
push
or
mov
test
cmc
shrl
lahf
insl
popf
inc
sbb
std
push
aam
mov
inc
jg
clc
dec
push
and
xchg
scas
ljmp
add
leave
enter
xor
out
jmp
push
fisttpl
add
push
mov
movsb
imul
push
lea
mov
scas
mov
loope
inc
xchg
int3
cmp
dec
in
xor
mov
push
lret
inc
test
push
rcr
jecxz
incl
das
mov
or
idivb
fldl
inc
sub
ret
mov
insl
mov
mov
imul
xor
sbb
sarl
mov
sbbl
sahf
arpl
incb
fildll
mov
idivb
jb
std
or
cld
hlt
mov
in
pop
testl
out
dec
mov
sbb
xchg
or
sub
push
daa
clc
cmpsl
mov
addr16
repz
mov
jne
lret
and
mov
sti
movsb
or
pop
cld
imull
adc
mov
pop
jl
jmp
lret
xor
lea
int3
mov
sarb
es
dec
rcrl
inc
ret
test
decb
add
and
inc
mov
lret
jmp
mov
mov
cmc
test
mov
popa
xor
out
cld
out
movsb
inc
lret
adc
subl
out
test
fmull
idivb
sub
idiv
cmp
mov
int3
popa
jae
xor
xchg
pop
push
mov
js
dec
stos
movsb
cmp
cmp
inc
xchg
in
test
jge
stos
mov
inc
into
push
out
jl
jp
pop
dec
cmpxchg
ret
das
ret
fs
add
jne
cmp
sti
xchg
cmp
in
rol
out
gs
jno
push
mov
lock
dec
dec
jae
or
in
xchg
scas
dec
fs
sub
push
or
lcall
test
mov
popa
test
addb
push
ret
repz
enter
loopne
or
jmp
pushf
outsb
inc
std
jnp
dec
out
or
jae
lods
jae
mov
negl
jnp
push
inc
daa
test
sbb
fbstp
inc
mov
adcb
paddusw
push
inc
dec
iret
fnstenv
jne
xor
push
in
sub
fs
mov
loope
jecxz
xor
fimull
jnp
add
dec
call
scas
dec
xchg
jl
test
xchg
outsl
dec
inc
jo
cli
xchg
sub
sti
and
mov
sub
aam
sti
stc
cld
dec
push
or
or
mov
or
mov
cld
inc
inc
stos
jmp
mov
jl,pn
cmp
push
lret
inc
mov
lret
es
add
pop
adc
int3
push
or
fldcw
inc
mov
add
dec
push
or
push
add
push
add
adc
pop
push
and
jle
xor
sbb
in
ret
pop
sets
pop
jp
or
ret
lds
test
loop
sub
xchg
jnp
into
sub
xchg
cli
pop
mov
imul
repnz
adc
mov
push
mov
jne
sbbl
add
lea
fcoms
popf
lea
int
call
test
rcl
sbb
int
inc
outsl
lret
push
and
jp
fdivs
dec
adc
dec
fcoml
sub
push
sbb
add
mov
into
or
inc
in
in
cwtl
jmp
push
mov
cli
add
sbb
sahf
add
pop
mov
lds
jg
cli
pop
loope
xchg
mov
pop
aaa
jl
loope,pn
call
call
shrb
in
iret
movsb
dec
sarb
xchg
and
leave
mov
inc
fisttpl
adc
xchg
inc
scas
mov
hlt
mov
dec
imul
in
xchg
rcl
insl
xor
add
pushf
inc
sbb
adc
ljmp
test
jbe
add
subb
inc
add
sti
insb
pop
xor
push
in
inc
lods
adc
adc
xchg
pop
stos
cwtl
repz
sub
or
add
add
sub
rcll
inc
mov
popf
jbe
sub
xchg
cmp
push
incb
jo
pushf
mov
ja
and
int3
sbb
or
notl
rcl
nop
test
mov
in
out
push
dec
jle
lock
imul
dec
adc
mov
js
or
add
add
inc
sub
aad
cmpsl
pushf
jb
aad
hlt
xor
lret
sti
sub
repnz
push
enter
lret
mov
shlb
sti
push
jecxz
jns
xchg
sub
in
xlat
inc
ret
into
pop
or
scas
hlt
pop
adc
pop
sub
jl
xchg
cld
dec
in
add
roll
jecxz
and
test
cmp
add
hlt
and
and
jne
icebp
or
sbb
add
outsb
enter
cmp
test
sbb
dec
je
jae
dec
outsl
dec
stos
sti
pop
xor
push
adc
lcall
loop
enter
mov
sub
dec
lret
into
sti
add
sbb
xchg
push
ss
outsb
sub
cmpsl
lret
dec
lret
pusha
sub
or
mov
ret
test
arpl
ret
mov
or
lcall
cmp
xchg
bound
add
lock
icebp
pop
icebp
and
dec
mov
lock
push
dec
mov
dec
jns
paddw
or
mov
ror
pop
outsl
ret
xchg
dec
xchg
idivl
cmp
nop
fistpll
adc
test
shl
or
dec
stos
cmp
movsb
mov
stos
push
push
push
jp
sbb
xchg
sbb
add
leave
clc
mov
jb
fimull
mov
sbb
pop
fists
inc
inc
push
mov
aaa
push
ljmp
shll
dec
inc
sbb
xchg
movsl
nop
cwtl
dec
pusha
lret
loopne
cmp
stos
aad
cmp
or
js
dec
test
cwtl
push
add
sbb
fdivl
shrl
hlt
jg
push
aad
daa
xchg
mov
mov
cmp
in
mov
mov
aam
roll
push
mov
fstl
or
insb
and
or
sti
into
stos
int3
sub
push
add
sahf
cs
arpl
or
andl
sar
add
les
mov
dec
xor
mov
mov
add
ja
rorb
push
scas
cltd
lods
int3
adc
mov
rorl
popa
fwait
or
jmp
bound
push
movnti
lret
xor
jmp
cmp
shll
xchg
cmp
bound
divl
push
stc
jp
pop
mov
dec
cmc
push
push
roll
mov
pop
cmp
adc
or
out
dec
jns
dec
clc
inc
movsl
jbe
clc
lods
imul
mov
cmp
inc
cmp
dec
shrl
jl
shll
into
dec
pop
pop
shl
in
rorb
icebp
xor
xor
addr16
adc
in
cs
pop
sub
lock
das
pop
imul
mov
pop
insl
mov
in
jne
movsl
out
test
dec
or
add
dec
xchg
nop
mov
icebp
test
jns
inc
xchg
dec
loop
outsb
mov
add
or
nop
je
mov
and
sub
out
pop
mov
in
jge
add
push
cmpsb
setbe
adc
adc
test
stc
iret
or
jmp
cmp
and
dec
add
iret
add
xor
test
cwtl
bound
mov
push
scas
loopne
push
pusha
xlat
mov
sbb
in
rcrb
sarb
or
mov
mov
pop
cld
js
in
call
lahf
jp
div
mov
int
adc
adc
sar
add
mov
scas
rorb
dec
pushf
pop
xchg
push
jg
shrl
int3
bound
cs
and
cltd
push
pop
mov
rclb
mov
cmp
or
lcall
out
jmp
in
mov
jnp
and
dec
std
lock
sarb
xor
iret
mov
notb
aam
stos
test
add
std
mov
dec
sbb
add
xchg
push
sub
adc
ret
push
lret
cmp
insl
and
mov
add
xchg
or
dec
ret
adc
stos
sti
fcomp
aad
sbb
push
shr
icebp
es
jecxz
rol
fbld
xchg
xchg
test
xor
cli
ret
stos
jmp
dec
scas
test
jnp
sub
jge
lret
insl
fimull
dec
cli
std
xchg
pop
cmp
repnz
dec
inc
push
orl
fisttpll
mov
mov
sarb
std
xchg
xchg
loopne
shll
dec
or
adcl
and
sub
nop
dec
sbb
mov
lret
jmp
or
shrl
lret
push
cld
adcb
mov
aam
jae
lret
add
add
adc
neg
lret
insb
enter
mov
lea
mov
and
xor
out
or
pop
cld
mov
leave
dec
std
enter
das
xchg
adc
sbb
pop
or
mov
add
nop
insb
into
ja
adc
pushf
push
daa
stos
mov
cmp
jg
hlt
lret
int3
or
sub
in
cwtl
dec
in
pop
pop
inc
or
fsubp
lock
shlb
stos
or
or
in
sub
inc
sbb
shrl
pop
aad
xor
mov
mov
aam
je
or
sub
inc
push
lret
and
mov
fsubl
sbb
leave
movsb
or
pop
scas
testb
inc
mov
xchg
fisttpl
sbb
les
cld
notb
int
cli
dec
dec
ret
stc
dec
shr
stc
cmp
mov
or
jmp
mov
rorl
aam
shlb
jns
push
or
es
cmp
movsb
push
push
xlat
shl
loop
push
add
stos
out
lret
or
ror
int3
jnp
nop
shr
loope
pop
push
jle
je
or
mov
inc
inc
mov
addl
jnp
rorl
dec
inc
test
jmp
mov
fincstp
sub
mov
or
xchg
aad
and
adc
jb
adc
or
scas
mov
bound
ljmp
xor
add
xchg
cmp
add
mov
dec
push
cli
leave
clc
daa
test
mov
in
subl
vsubss
xor
lods
jmp
mov
push
push
mov
xchg
imul
movsl
sub
sub
mov
dec
jne
jb
xlat
push
mov
icebp
in
add
stc
mov
aam
add
stos
and
inc
mov
mov
xor
mov
jno
dec
mov
sub
clc
daa
repnz
adc
mov
dec
ret
push
jle
pop
test
les
popf
movsb
pop
or
pop
and
clc
jmp
test
xor
add
mov
adc
or
or
rorl
jl
movsb
lret
push
pop
sub
xchg
loopne
ret
push
add
imul
dec
cmp
push
lret
ja
sar
in
pop
sub
shlb
jbe
test
xchg
cltd
and
mov
mov
stos
jo
inc
mov
iret
sub
or
out
jae
pop
shlb
or
xchg
cmp
dec
sbb
sarl
pop
neg
jecxz
in
push
jg
mov
test
push
sbb
dec
pop
jmp
jnp
push
mov
sbb
mov
mov
xchg
pop
and
int3
pop
gs
pop
cmc
in
sbb
cli
daa
push
imulb
xchg
jo
cwtl
sub
pslld
add
or
or
in
cmp
xchg
std
push
xchg
iret
popf
out
aam
pop
push
addr16
jge
adc
dec
sub
push
mov
in
fcmovbe
std
test
xchg
lcall
aaa
fidivl
mov
or
out
add
scas
mov
or
fwait
inc
pop
lds
dec
stos
inc
sbb
iret
sahf
jmp
lret
dec
and
push
pop
add
repnz
push
mov
stos
mov
xchg
in
adc
xor
fwait
lcall
inc
xchg
test
das
jb
add
jo
leave
or
xor
outsl
sbb
idivb
subb
sti
insb
jmp
int
dec
idivb
mov
add
xchg
mov
cmpsb
shlb
sub
enter
dec
mov
add
std
jg
std
insl
mov
lods
push
test
push
and
in
adc
loop
clc
cmpsb
aam
add
in
test
movsl
clc
jg
mov
or
test
std
mov
jb
push
outsl
inc
sbb
adc
sarb
popf
jne
push
push
or
jl
lock
mov
out
rcll
aam
in
subb
push
test
cli
push
clc
stos
and
das
sarb
popf
addl
andb
pop
divb
lahf
nop
data16
inc
rorl
or
xchg
lret
cli
shr
cmp
add
mov
add
fsub
pop
sti
fnstcw
pop
fsubrs
push
or
sti
jle
ds
or
ret
inc
adc
fisttpl
iret
or
mov
std
xchg
sbbl
shl
movsl
mov
in
jbe
icebp
and
adc
test
gs
sbb
fmul
sahf
addl
mov
std
fnstsw
clc
sarl
jle
cmp
push
imull
push
scas
movsb
xchg
inc
cmpsb
into
in
mov
sub
into
xchg
inc
testb
push
call
lret
mov
mov
xchg
mov
pusha
fsub
ss
mov
and
daa
arpl
lret
or
jb
ret
fwait
xor
mov
dec
aaa
jmp
jecxz
ss
or
inc
call
inc
test
sub
pop
lcall
dec
aam
dec
lret
jle
push
lock
push
cld
sbb
ja
ss
fistpl
addb
pushf
insl
icebp
or
mov
mov
sar
cli
push
shll
pop
std
xchg
int3
jo
std
adc
sub
cmp
cmc
js
cmp
cmp
pop
aam
mov
ret
into
ljmp
inc
mov
test
mov
push
ljmp
or
mov
arpl
sub
shll
ret
jb
and
sahf
das
aam
ds
leave
mov
adc
je
test
lret
jg
xor
aam
jns
stos
movsl
inc
lret
add
push
out
lock
cmp
lock
cmpsb
fnclex
mov
sub
imul
hlt
cmpl
lahf
mov
and
xor
jp
mov
cmp
jno
cmpsl
shll
fisttpl
into
fs
adc
jo
dec
aas
cmp
dec
decl
mov
push
dec
scas
sub
sbb
mov
scas
mov
out
scas
or
outsl
or
out
adc
ds
or
data16
adc
dec
out
push
push
ret
inc
dec
or
cmp
rcll
add
in
incl
pop
inc
cmp
jb
jg
pop
decl
dec
jmp
insl
mov
or
movsb
push
inc
rcll
scas
scas
xchg
push
pop
push
xchg
mov
dec
fcoms
jmp
outsb
or
lods
test
or
stos
js
pop
cmp
ds
cmpsb
sub
fists
inc
in
iret
in
in
out
add
pop
mov
aad
add
ljmp
fcoml
clc
dec
dec
shll
dec
call
or
inc
stos
or
mov
mov
add
push
inc
int3
or
add
hlt
add
cmpsb
mov
ds
sti
dec
mov
jns
mov
jns
sbb
adcl
mov
test
or
add
lret
xor
mov
pop
dec
fisttpll
lret
out
add
mov
or
or
mov
sub
lret
mov
lods
or
insb
or
add
in
cld
push
dec
stos
lds
adcl
lods
shr
jge
stos
int3
lock
sahf
sbbl
pop
push
je
mov
ljmp
pop
mov
cmp
addl
insb
rcl
gs
adc
xor
fsubr
les
test
test
imul
lods
lret
add
test
cmp
xchg
dec
add
jmp
enter
push
repz
mov
insl
push
movsb
mov
jns
dec
mov
ret
push
xlat
mov
sub
ds
xor
aas
test
movsl
into
pop
xor
xor
add
popf
out
cmpsb
mov
out
inc
int3
stos
jmp
mov
movsb
add
or
push
mov
shlb
dec
add
pop
aad
aas
xchg
jns
pusha
jmp
cmp
cld
pop
test
rcll
mov
mov
dec
lock
cs
mov
sti
jne
xchg
adc
mov
mov
dec
mov
pop
cmc
out
jns
fsubp
add
in
inc
push
dec
in
addb
fadd
jnp
inc
xchg
pop
fildl
mov
repz
dec
mov
aad
or
mov
dec
xchg
fs
mov
scas
and
mov
stos
inc
mov
or
sbb
dec
sub
lret
add
leave
insl
dec
sbb
sti
lahf
pusha
push
cld
outsb
les
mov
push
jae
adc
dec
add
fisttpl
mov
pop
mov
jmp
mov
scas
or
xor
les
inc
es
inc
cmp
andb
dec
jae
repz
aam
data16
mov
jl
mov
lahf
aam
scas
inc
push
ds
test
dec
mov
sti
or
imul
scas
push
mov
int3
pop
sbb
adc
decb
inc
fwait
xor
adcb
fidivrl
add
push
sti
sti
dec
imul
push
adc
sarb
adc
int3
incl
mov
jp
mov
jnp
gs
aaa
and
xchg
dec
loop
mov
jno
inc
xchg
inc
mov
stos
push
push
enter
int
jmp
repz
fisubl
dec
rorl
pop
sub
movsb
cmp
insl
call
or
in
mov
cmpsl
ret
mov
mov
mov
inc
push
xchg
xor
jle
test
mov
test
xor
cmp
xchg
mov
inc
or
inc
inc
push
ret
adcl
clc
adc
xchg
iret
stos
dec
xchg
jmp
das
adc
and
xor
adc
popa
cld
mov
bsr
push
or
sub
in
dec
fld
iret
and
sbb
or
jnp
rol
orb
ljmp
push
dec
insb
mov
pop
ficomps
insb
jne
addr16
cmp
mov
stc
and
shll
dec
daa
sti
mov
inc
loop
mov
fs
adc
pop
mov
mov
inc
inc
dec
add
xchg
push
pushf
xchg
or
add
lods
adcl
push
pop
sbb
mov
jmp
flds
mov
dec
inc
les
lods
out
ds
insl
mov
mov
faddl
outsl
mov
xchg
int3
adc
push
std
lods
cmp
inc
sub
faddl
inc
mov
bound
adc
xchg
push
sbb
ret
xchg
xchg
xchg
lods
lea
stos
lods
xor
icebp
shr
daa
xor
jns
push
jmp
iret
or
push
xchg
inc
int3
mov
sub
mov
xchg
stos
sarl
jns
jp
add
mov
mov
out
jno
ds
sub
and
cld
mov
scas
xchg
shll
int3
sbb
fnstcw
sbb
cmp
lds
cmp
sbb
fisttpll
mov
lret
jmp
mov
pop
inc
out
ds
insl
sbb
sti
xor
adc
mov
xor
inc
int3
stos
dec
mov
sbb
inc
xor
dec
out
cmp
sarl
ret
pop
xor
shl
nop
mov
mov
lcall
shlb
das
lock
fwait
xlat
rorl
sbb
jbe
cmp
jecxz
sub
jmp
idiv
cmpsl
cmp
or
add
mov
scas
jle
push
xor
add
inc
nop
movsl
sbb
cmpsb
inc
pop
inc
aam
faddl
sbb
xor
sbb
mov
or
dec
negl
idiv
sub
dec
sbb
nop
or
in
aad
std
idivb
jno
or
push
pop
and
ret
cltd
pop
or
rorb
xor
mov
sub
dec
aas
cmpsl
inc
adc
dec
mov
push
lods
sub
inc
sub
jbe
repnz
scas
adc
fbstp
test
lret
movsb
dec
std
je
imul
insl
ja
xchg
icebp
push
jns
mov
leave
mov
fadd
mov
push
mov
addl
sub
sub
add
je
aaa
dec
out
insb
push
xchg
cld
repz
inc
incb
mov
or
push
aam
or
test
enter
lock
inc
push
jmp
cld
adc
or
sub
sahf
ds
mov
add
int
lods
aam
das
jb
jle
adc
mov
inc
add
mov
jae
rcrb
aas
jl
mov
mov
sub
fldt
test
hlt
adc
mov
pushf
jmp
jp
jnp
cli
push
jl
mov
into
push
ror
dec
int
mov
loopne
je
call
fildl
out
dec
push
icebp
insb
mov
and
xchg
aam
es
push
hlt
lret
pop
mov
scas
push
arpl
dec
insb
sub
cs
lret
mov
subl
or
pop
stos
sbb
js
test
js
sub
adc
subb
enter
mov
or
notl
fndisi(8087
adc
enter
sbb
push
or
mov
loopne
aam
adc
dec
jp
lods
xchg
out
mov
add
hlt
mov
fdiv
xor
dec
dec
push
stos
sbb
mov
clc
cmpb
mov
or
fwait
lock
imul
pop
or
add
enter
dec
mov
lret
sbb
lea
fildl
shlb
insl
cli
or
cli
bound
mov
sti
cmp
mov
or
mov
js
xor
insb
push
outsl
cmp
mov
or
lret
stc
adcl
inc
pop
iret
push
pop
inc
test
jmp
faddl
in
mov
test
lds
je
iret
or
add
mov
inc
cmpb
or
jge
scas
dec
stos
or
dec
xchg
int3
inc
or
shl
emms
cmpsl
cmp
test
popa
std
or
pop
fstps
mov
cmp
mov
inc
jne
sbb
push
add
mov
dec
inc
fdivrl
push
les
jbe
jno
sarb
in
pop
lea
in
shl
inc
push
int3
mov
ljmp
lret
leave
push
cmp
lea
nop
dec
mov
leave
cmp
inc
mov
xchg
leave
in
sub
lret
add
out
xchg
pop
test
movsb
or
ficomps
lret
inc
adc
leave
hlt
jb
mov
pop
jns
inc
push
jb
add
clc
js
sbb
sub
rorl
fwait
addr16
insb
orb
nop
mov
lock
ljmp
popf
mov
rol
xor
shll
mov
mov
test
dec
fstpt
add
push
mov
js
mov
jbe
push
in
add
mov
add
jne
mov
jmp
adc
mov
push
push
mov
sbb
pop
scas
leave
xlat
add
fbld
mov
test
mov
and
sub
add
adc
leave
jp
inc
pop
fistpll
in
pop
cwtl
cwtl
sbb
jb
jmp
xchg
mov
sbb
cmp
sti
ret
shrl
jmp
inc
shrl
ja
rcrl
sub
dec
out
insb
push
leave
scas
popa
test
out
fildll
shll
or
aas
and
push
dec
sahf
or
push
rcl
in
hlt
rclb
jg
mov
test
adc
dec
xor
adc
xchg
sub
or
pop
test
shl
jae
mov
push
adc
rclb
out
adc
inc
mov
movsl
mov
sbb
gs
xor
mov
push
add
into
test
adc
pop
adc
gs
or
ret
pop
scas
push
mov
xor
jl
or
data16
shrl
dec
inc
sub
push
dec
sahf
push
ret
dec
or
sti
lea
lods
and
adc
xchg
fsubrs
mov
jb
das
ja
lret
repz
adc
xchg
lcall
adc
ja
mov
shlb
js
aad
or
in
xchg
rorb
bound
imul
xchg
rcll
and
lcall
sbb
or
jecxz
xchg
adc
push
sti
sbb
jo
jmp
cmpsl
jmp
test
add
lcall
jp
jno
sti
or
inc
ja
xor
aas
in
ret
dec
fsts
roll
adc
xchg
mov
adc
test
fnstcw
fistl
adc
lods
ja
pop
sub
subl
mov
and
orl
fstpl
fwait
sub
test
dec
mov
pop
cli
pop
push
inc
adc
aaa
cmp
call
fmull
in
ror
add
jmp
push
lods
ret
adc
cmp
cld
or
stos
adc
or
scas
mov
mov
adc
shlb
inc
xchg
rolb
dec
imul
jp
stos
mov
push
in
and
mov
sbb
jmp
pop
ss
jbe
or
add
mov
mov
sbb
mov
inc
fmull
add
jl
jne
cmc
mov
push
test
mov
test
inc
int
scas
push
repz
fisttpl
jl
das
stc
fadd
rcll
jbe
scas
inc
push
jo
mov
sub
aam
lret
movsl
inc
fidivs
les
pusha
imul
in
enter
jl
add
icebp
cmp
aad
add
sub
pop
in
ljmp
fdivrs
lock
xchg
mov
cltd
lahf
xorb
dec
ret
inc
aam
hlt
pop
pop
test
mov
pop
test
decl
clc
addr16
shrl
sub
lods
leave
stos
and
xor
loop
leave
or
addb
sbb
fildll
movsl
test
lods
mov
popf
fucomi
fisubrl
jp
adc
sbb
cmp
data16
or
sbb
cs
cltd
or
mov
ret
lods
mov
or
xchg
lock
aad
loop
lcall
add
stc
add
ficompl
push
imul
cli
add
pop
popf
inc
mov
dec
rcl
mov
or
shll
push
inc
das
dec
mov
loop
mov
cld
call
std
ds
mov
rorb
insb
std
adc
orb
lock
or
xchg
push
insl
in
pusha
push
mov
push
push
std
mov
scas
fadds
aam
jmp
fmuls
negb
fcoms
ljmp
test
cmp
cld
je
into
sbb
cli
adc
out
adc
or
les
jo
mov
and
jmp
sbb
test
cmpsb
dec
fiadds
sbb
pop
inc
outsl
sbb
add
cld
mov
push
and
nop
outsb
fdivrs
lcall
adc
pusha
mov
sub
mov
sbb
mov
xchg
stos
jmp
roll
push
lds
insb
clc
lock
mov
imul
and
in
push
rol
loop
aam
xor
mov
cld
gs
scas
nop
mov
sub
aam
aaa
sahf
sbb
adc
or
push
out
imul
icebp
or
mov
or
pusha
push
cmp
pushf
fldcw
dec
negb
cmc
lret
in
push
inc
xchg
pushf
clc
movl
ret
test
divl
or
or
hlt
mov
xchg
pusha
pop
xor
push
and
pop
ljmp
aam
mov
ss
push
es
mov
scas
leave
out
pop
push
rcll
lea
test
dec
xor
je
lods
rorb
push
or
movsb
loopne
aas
ret
fcmovne
jmp
sub
es
and
sub
out
lahf
sbb
push
sbb
mov
xchg
cmp
rcr
je
mov
lds
vcvtps2pd
enter
jno
mov
iret
sbb
push
lock
mov
imul
ror
mov
sub
into
outsb
sti
aam
iret
lret
hlt
mov
cmp
dec
lret
cmp
je
shrl
add
jnp
mov
lea
sbb
mov
loope
sbb
or
mov
add
lods
lret
or
or
or
ljmp
push
jecxz
movsb
dec
sarl
mov
loopne
cmp
add
movsl
mov
into
mov
mov
sti
dec
in
ljmp
jb
movsl
jmp
rolb
lods
rcr
adc
and
cmp
or
dec
and
lret
adc
cwtl
lret
repnz
fildll
pop
xchg
mov
stos
sbbl
test
mov
inc
fstpt
jle
faddl
fisttpl
jmp
fxch
call
sti
addb
fisubrs
or
jns
fisttps
pop
mov
out
mov
out
in
in
jnp
call
or
in
arpl
idiv
call
add
insl
xchg
push
out
push
jae
or
pop
sub
loop
pop
bound
sub
jno
lea
pop
negb
add
jp
mov
test
pop
push
sub
insb
rorb
outsl
and
pop
je
cmp
add
add
mov
pop
cmpsl
imul
fisubl
jnp
sub
icebp
cltd
stos
xchg
jmp
mov
in
jl
lods
sbb
cmp
cwtl
in
mov
pop
ljmp
and
out
inc
xor
daa
jmp
sbb
jl
dec
jb
dec
jmp
gs
jns
adc
cwtl
hlt
pop
enter
fisttps
fsubs
jnp
sub
test
or
xchg
int3
cmp
adc
in
jmp
jmp
stos
add
lcall
push
loop
lret
jmp
mov
imul
enter
dec
addl
xlat
insb
cmpsb
mov
repnz
lret
cld
call
xchg
or
and
shl
jp
dec
or
rcrl
or
sar
and
pop
int3
subb
orl
inc
adc
enter
dec
imulb
xchg
shll
pop
ljmp
js
or
clc
ret
insl
sub
ficomps
movsb
cmp
pop
ds
push
lret
cld
in
inc
adc
pusha
mov
xor
ficompl
lret
out
cmp
fisubs
mov
decb
jp
es
in
add
in
mov
xchg
and
pop
pop
inc
cmp
in
sti
lcall
fstpt
xchg
lds
mov
jbe
inc
pop
addr16
lret
mov
in
loope
negb
push
mov
adc
ficomps
add
add
hlt
lcall
or
inc
pop
lods
xchg
fsts
mov
push
jmp
mov
cmp
xor
dec
arpl
cli
lret
addl
jp
repnz
mov
inc
lcall
aaa
test
pushf
cs
jmp
std
ds
insl
dec
dec
sbb
call
mov
stos
xchg
sub
dec
lcall
fwait
in
cld
rorb
mov
mov
mov
idivb
adc
add
mov
in
outsb
rorl
pop
out
jnp
sti
lods
or
xchg
add
xor
mov
ss
adc
gs
ds
lods
scas
lret
leave
scas
into
out
push
dec
xchg
test
fiadds
or
enter
and
pop
xchg
lds
sbb
inc
push
inc
out
jmp
pop
jmp
fdivrl
mov
mov
lret
nop
iret
enter
mov
enter
dec
lods
fs
or
push
and
mov
repz
xlat
mov
pop
insl
push
push
adc
jl
pop
lods
leave
dec
pop
lahf
flds
insb
add
jmp
je
lods
dec
lods
xor
cli
xchg
or
pop
insl
repnz
cmp
add
add
push
testb
clc
jecxz
pop
and
mov
mov
pop
imul
dec
pop
sti
in
in
iret
or
int3
mov
add
inc
roll
jno
or
mov
mov
or
fsubp
push
daa
test
xchg
jg,pn
add
mov
fdivrp
sbb
out
fistps
imul
and
shrl
push
pop
sti
test
jge
addr16
adc
add
or
mov
pop
pop
xor
mov
fwait
orb
test
ret
jp
rcrb
add
mov
rolb
sbb
dec
stos
jbe
mov
lret
lods
xor
cmp
dec
dec
incl
dec
stos
mov
add
outsl
sbb
sub
in
hlt
mov
loop
movsb
jl
cwtl
pop
pop
outsl
inc
iret
dec
cmp
mov
jp
pusha
ds
push
ja
or
inc
add
das
mov
jmp
mov
in
cld
push
and
jbe
dec
dec
in
lods
outsl
xor
lock
adc
and
pop
lods
arpl
jo
add
nop
xchg
push
loop
mov
xchg
inc
out
gs
cli
jl
push
or
loope
in
pusha
mov
mov
loope
cmp
xlat
or
iret
addb
int3
scas
fisttps
adc
sub
mov
mov
cmp
cmp
sarl
sbb
mov
mov
ljmp
cmpsb
xchg
lret
sbb
or
jnp
or
add
push
mov
stos
aam
add
and
xchg
faddp
pop
arpl
dec
sbb
mov
sub
adc
xor
fldl
scas
or
mov
sbb
daa
lret
adc
popa
test
aas
jge
divb
fst
jo
cmp
mov
push
xchg
sbb
and
cmp
lret
scas
pop
mov
xlat
jns
dec
pop
fdivrs
mov
cmp
jnp
insl
or
or
xchg
pop
xchg
sti
pop
mov
sub
fstps
xor
lods
pop
pop
mov
dec
fstpl
pop
icebp
jecxz
jmp
outsl
shrl
adc
ja
lret
push
jg
shr
xchg
leave
inc
inc
adc
push
stos
loop
shr
add
sbbb
dec
cmp
jne
sti
mov
lret
xchg
cwtl
mov
int3
shrb
inc
lock
sub
ss
jge
or
out
adc
aas
popa
xchg
inc
sbb
fadds
mov
ss
test
push
inc
mov
fisttps
cmp
pop
outsb
xor
es
test
adc
and
or
cmp
ljmp
jnp
jo
adc
mov
lds
enter
jmp
mov
aam
je
aam
cmp
push
or
pop
lds
jecxz
cmpb
out
in
jnp
les
push
mov
pop
insb
filds
std
fsubr
in
jnp
cmpsb
fdivs
xchg
jnp
aad
add
cld
test
or
test
add
cmp
lret
mov
filds
mov
push
test
fcmovu
add
popf
cmp
iret
fcmovnb
pop
lods
xchg
enter
pusha
jb
xchg
or
mov
xchg
stos
dec
inc
jp
fdivrl
fmull
jbe
je
or
inc
or
jmp
mov
pop
fsubr
fidivl
dec
aam
cltd
arpl
jge
mov
repz
les
je
add
lcall
push
inc
inc
or
pusha
sub
and
push
iret
lods
adc
cmpsb
xor
insl
push
ss
sar
divb
dec
call
cld
mov
xchg
sti
dec
divl
add
lock
icebp
lds
dec
scas
mov
sub
jmp
cmc
pop
jle
stos
in
pop
wrmsr
test
popa
aam
shll
mov
or
or
and
rcl
cmp
pop
incb
adc
pop
pop
hlt
sbb
fildl
adc
cmp
inc
loope
stos
and
and
sub
and
mov
pop
push
xlat
jnp
daa
lock
or
sbb
jg
and
aam
shlb
ss
xor
jle
stc
mov
inc
push
jg
mov
ds
pop
jmp
adc
push
adc
sub
scas
pop
xor
sbb
dec
sub
sbb
mov
mov
mov
jl
lret
aam
xchg
lcall
inc
dec
jns
mov
ss
enter
xchg
lods
movsb
sti
mov
dec
mov
mov
aam
mov
out
mov
dec
mov
mov
lfs
xchg
hlt
mov
pop
movl
lret
push
dec
cli
cmpsl
mov
inc
jbe
dec
fstpl
add
jne
or
in
jecxz
cwtl
jp
in
adc
jl
push
mov
dec
scas
popl
or
sbb
or
mov
lret
jne
sub
xchg
xlat
push
sub
add
ss
outsl
cmp
stos
xchg
dec
ljmp
test
sub
iret
fs
lock
popf
in
sti
jmp
cmpl
jge
cwtl
stos
stos
mov
cli
test
pop
add
cmp
lods
pop
movsl
dec
clc
stos
sahf
lea
adc
lcall
in
dec
ds
ret
cmp
jg
cli
stos
dec
push
cli
dec
pop
addr16
xchg
mov
jnp
mov
xor
and
sti
call
or
jg
faddl
stc
or
ret
roll
sub
rcl
adc
xor
sub
adc
lds
push
mov
aad
add
fistps
fldl
in
jecxz
mov
rolb
jo
in
subl
dec
xchg
xor
or
std
rcl
sbb
or
cmp
lret
sar
popf
jge
fiaddl
and
add
arpl
hlt
cmpsb
jg
je
cmp
movsl
nop
jge
out
pop
lds
mov
pop
or
loop
mov
xchg
dec
xchg
fcmovnbe
repz
imul
lods
in
ljmp
cmp
call
aam
sub
mov
mov
fidivs
jno
repnz
inc
mov
xor
jl
cmp
mov
jp
lods
loope
push
mov
xor
or
lods
sub
stos
fnstcw
call
fidivs
jmp
fidivl
outsl
cwtl
or
dec
stos
adc
mov
or
or
loope
fwait
roll
jp
add
and
je
pushf
push
lret
shrb
lcall
push
or
mov
loopne
cmpsl
or
or
aaa
dec
call
sub
jbe
stos
push
movsb
out
inc
jl
aas
rorb
jns
xchg
jge
sbb
xlat
cmp
cld
sbb
bnd
test
inc
fsubrl
test
ds
xor
mov
leave
sti
or
add
or
jb
lods
imulb
adc
test
lret
rcrl
lods
jb
subl
bound
ss
sbb
jno
push
jp
push
jecxz
icebp
pop
pop
xchg
in
enter
mov
lock
adc
lret
mov
jnp
ret
rcrl
or
jns
sbb
js
icebp
pop
sbb
add
pop
xchg
mov
mov
pop
outsb
push
decl
pop
pop
adc
sbb
mov
gs
jns
inc
pop
jnp
mov
mov
mov
sbb
cmp
js
cmp
mov
not
dec
xor
lods
jmp
cmpsl
jns
sbb
add
mov
inc
int3
dec
jae
dec
daa
sbb
adc
xor
scas
or
lea
adc
cmp
cmp
ja
xchg
addb
stc
and
mov
aas
sub
sub
enter
lods
movsl
add
sub
dec
call
mov
fdivrl
cmp
cmp
sub
outsb
call
dec
imul
or
dec
cmp
jmp
and
iret
std
cmp
sub
inc
int3
adc
cmp
std
arpl
cli
sbb
movsl
adc
mov
cmp
mov
into
mul
cli
fimull
jmp
mov
mov
ret
mov
into
in
cmp
xor
clc
in
das
dec
lret
add
aaa
fildl
lret
jmp
movb
cmc
out
sahf
xchg
dec
test
dec
mov
add
call
jp
mov
sbb
mov
fnstenv
inc
lock
fstpt
rcrb
pop
repnz
inc
push
pop
pop
push
sbb
nop
lret
pop
add
inc
dec
lea
fisubs
loop
xchg
jle
cmp
or
cmp
scas
and
mov
mov
xor
add
inc
inc
shll
mov
jecxz
syscall
add
xchg
add
sbb
data16
jp
popf
aaa
rorb
pop
mov
sahf
xchg
rcrl
dec
adc
out
fcmovnbe
cmp
mov
cmp
sub
sbb
dec
fs
aaa
lcall
add
mov
test
loop
pop
cld
in
stos
jecxz
or
testb
stos
rorl
out
aad
out
xlat
rep
icebp
test
test
cld
fcomip
stos
loope
clc
add
sti
stc
test
test
cld
out
stos
jmp
sti
std
test
test
cld
out
ljmp
repz
add
testl
sti
test
out
add
test
neg
ljmp
stc
fildl
test
fildl
test
fildl
test
fildl
std
fildl
test
fildl
test
fisttpl
test
fisttpl
test
fisttpl
test
fisttpl
test
fisttpl
add
or
in
pop
test
inc
or
roll
rolb
roll
aam
imul
test
cmp
test
cmp
test
cmp
test
cmp
test
cmp
test
cmp
test
cmp
test
cmp
test
cmp
test
cmp
test
cmp
test
cmp
test
cmp
test
cmp
test
cmp
jne
add
negb
add
rorb
mov
sbb
mov
stos
scas
arpl
pop
pop
or
jnp
dec
dec
add
push
inc
aam
jp
mov
ss
test
fwait
jl
enter
stos
clc
push
in
mov
or
in
jl
les
pop
fisttpll
add
pop
cld
incl
or
add
mov
dec
in
mov
divb
aam
testl
or
cwtl
lahf
test
in
or
stos
clc
enter
sub
popl
dec
fs
inc
clc
or
cmpsb
mov
movsb
out
or
mov
xor
xchg
cmp
cmp
or
push
pop
xchg
add
or
fisttps
pop
lods
jmp
pop
and
mov
arpl
in
mov
jmp
mov
rcrl
add
mov
loopne
cld
push
mov
xchg
ret
fcompl
clc
sbb
lahf
jle
fcoms
loope
mov
push
test
fcmovnu
aam
jo
mov
cmp
fcmovnu
aam
jo
mov
cmp
adc
pusha
aam
jo
mov
cmp
inc
fildll
push
jo
mov
cmp
jo
mov
cmp
inc
jecxz
mov
jo
mov
cmp
inc
jmp
aam
jo
mov
cmp
inc
out
cmpsb
es
mov
cmp
fldt
jo
mov
cmp
inc
jmp
stos
fldt
sub
mov
cmp
inc
icebp
test
xor
mov
cmp
inc
out
test
fldt
jo,pn
mov
xor
rcrl
add
nop
add
jo
pusha
stos
jmp
mov
inc
cld
addr16
dec
rclb
inc
aad
pop
hlt
stc
dec
or
mov
jns
and
lret
dec
lock
push
lret
or
push
or
jb
fmuls
push
shrl
pop
or
push
hlt
add
pop
leave
daa
xchg
or
gs
push
or
and
sahf
mov
ds
push
mov
push
repz
bnd
sub
lods
ljmp
pop
mov
jl
scas
test
icebp
dec
lahf
sub
cltd
jo
pop
xchg
loope
xor
sahf
je
pop
lds
xor
maxps
mov
les
cmp
push
xlat
out
cmp
int3
popf
out
push
mov
adc
pushf
jo
sarl
fbld
sub
pop
jbe
popl
sub
push
add
or
sarl
or
scas
rcr
mov
fldt
test
mov
shlb
aad
ja
inc
push
xor
daa
repnz
cmpsb
stc
lahf
xor
arpl
sti
icebp
lock
ja
int3
fcompl
jo
dec
jno
jo
lret
inc
shlb
xor
out
pop
cmp
or
in
xor
popa
shl
push
iret
popf
and
sub
inc
test
or
jp
add
adc
xor
lods
decb
or
test
scas
mov
mov
repz
out
pop
out
stos
arpl
or
fimuls
and
jno
add
fildl
icebp
cld
flds
xlat
or
fildl
hlt
out
test
enter
sub
shr
ss
call
in
cmp
fmul
test
std
mov
cld
fwait
imul
or
dec
cmp
jl
or
pop
or
imul
add
jmp
add
cmp
imul
call
xor
insb
sbb
cmc
or
in
jl
les
cld
cmc
test
repz
cld
in
cmp
bnd
inc
xor
add
cmp
in
pop
or
jmp
je
pop
add
test
jb
xor
mov
scas
lock
jle
cmp
mov
mov
outsl
fwait
mov
cmp
lock
mov
les
test
sbb
mov
xor
mov
test
divl
icebp
pop
cmp
icebp
pop
mov
xor
cmp
pop
in
inc
js
fdivr
out
cld
adc
sti
scas
loopne
lods
jl
xchg
push
add
inc
or
stos
mov
or
pop
fisttps
xchg
fwait
push
in
add
rcrb
in
or
inc
lret
rcrl
rcrl
jne
cwtl
add
cs
mov
popa
ljmp
pop
and
pop
mov
andl
xchg
jge
int
in
mov
into
fidivl
jmp
repz
push
jge
mov
xchg
sbb
adc
pop
or
inc
rolb
inc
fst
popa
testb
leave
cwtl
sti
xchg
cli
bound
cld
xchg
add
jae
cld
sbb
lods
mov
call
xor
icebp
movl
arpl
imull
adc
in
or
rolb
pop
ficomps
sub
out
jl
cwtl
dec
stc
pop
dec
push
ljmp
xchg
xor
mov
mov
stos
jmp
int
fistpl
pop
xchg
cmp
fmuls
std
lcall
or
in
pop
dec
sbb
mov
in
pusha
in
cmp
pop
push
pop
hlt
or
pop
or
faddl
add
push
xorb
pcmpeqw
fcomi
xchg
cmp
push
sub
fstps
xor
out
add
cmp
or
mov
jle
sbb
arpl
aam
and
hlt
out
sbb
or
repz
or
jl
push
icebp
ja
hlt
inc
repz
mov
rcr
rorl
loopne
repz
inc
cmp
cmc
xor
jmp
add
jg
popf
sub
push
repz
addr16
js
in
out
fistps
jo
rcr
ret
mov
in
push
addb
pop
test
mov
ret
sub
mov
xor
jae
in
lods
icebp
stc
pop
insl
mov
aaa
jne
cmp
stc
in
hlt
bound
movsb
hlt
adc
add
xor
and
into
cld
icebp
and
jg
pop
inc
aam
xchg
pop
cmpsb
icebp
sub
xchg
sbb
inc
rorl
imul
or
adc
jmp
or
test
jecxz
mov
cmp
lods
cmp
push
repz
fldt
xchg
push
in
fs
sbbl
cmp
rcr
outsl
jnp
jmp
jl
sbb
test
sbb
mov
add
or
and
ret
jle
sarl
or
mov
sub
cmp
in
leave
shll
xchg
dec
sbb
int3
int3
xchg
outsb
ljmp
cmp
xor
dec
data16
mov
or
out
mov
xor
sti
or
jge
push
call
mov
in
fld
push
in
bnd
pop
add
sbb
sbb
iret
or
imul
icebp
les
cmp
add
shlb
add
aas
xlat
call
cmp
adc
movsb
lock
cmp
lods
sub
les
push
les
movsb
out
test
inc
sar
fistps
sti
xchg
cld
jecxz
fiadds
movsb
pop
add
push
fiaddl
test
leave
les
in
orl
xlat
jmp
lcall
xor
call
fwait
mov
or
mov
jnp
jmp
das
dec
inc
mov
mov
sbbl
mov
pop
cli
jg
lods
add
or
movsb
in
js
es
faddl
cld
stc
clc
in
adcl
mov
lea
cmpsl
mov
stc
or
jmp
cmp
push
gs
push
adc
cmp
cmpsb
inc
cld
cmp
out
subl
or
lea
clc
or
mov
cmp
jmp
jmp
cmp
out
push
stos
fdivl
hlt
fbld
fiadds
mov
enter
or
add
bnd
ret
test
enter
or
and
pop
adc
in
push
pop
repz
in
repnz
repz
gs
xchg
pop
add
in
inc
popf
movsl
and
pop
mov
dec
adc
fdivp
lods
pushf
xchg
aaa
into
sbb
mov
dec
or
cmc
arpl
call
dec
and
repnz
mov
out
and
mov
xor
dec
ljmp
ret
out
jp
or
mov
test
std
js
adc
stos
ljmp
sti
shll
mov
mov
insb
out
into
enter
and
dec
std
int3
add
lret
inc
orb
dec
pop
in
dec
aas
sbb
or
xchg
ret
or
lock
mov
xlat
iret
inc
adc
dec
in
enter
cmp
mov
xor
test
pop
call
inc
in
cmpsl
into
out
test
cmp
loopne
mov
cmp
stc
in
flds
or
or
or
or
ret
or
mov
cmp
scas
outsl
cmp
cmp
imul
mov
or
push
adc
cli
and
lock
lock
addl
add
cmpsb
mov
mov
or
js
or
push
xchg
incb
and
mov
or
leave
iret
shll
in
adc
insb
hlt
dec
or
dec
or
mov
adc
int3
lods
mov
fisttps
or
mov
add
add
adc
mov
or
lock
sub
lahf
fsts
mov
hlt
dec
xlat
lock
sbb
and
bound
xor
testl
stos
push
loope
dec
cmp
fs
insl
push
mov
xor
addr16
leave
sub
jmp
inc
inc
shll
xchg
inc
shr
pop
mov
enter
xchg
ja
ds
fldcw
repz
jno
jb
add
lret
xchg
mov
je
gs
cmp
lods
mov
dec
stos
xor
lcall
jnp
pop
in
iret
loope
inc
pusha
add
addr16
or
adc
add
shlb
enter
sub
mov
adcb
mov
push
loope
into
and
mov
lahf
xor
sub
lds
lret
adc
mov
pop
loop
jmp
jb
jb
pop
push
and
jecxz
loop
fstpt
stos
ds
test
in
mov
sahf
iret
pop
aaa
jae
cld
pusha
adc
dec
cmp
push
enter
or
gs
jbe
scas
neg
ds
jg
popa
subb
pop
mov
or
lcall
mov
jl
pop
xchg
ljmp
test
je
pop
and
pop
pop
mov
mov
aad
fsubs
out
cmc
loop
inc
cmc
popa
or
loop
test
ret
loop
push
in
roll
xchg
stos
mov
hlt
inc
sbb
or
sub
push
jmp
in
xchg
push
in
jae
nop
lret
mov
cld
cmpl
sti
mov
add
call
or
test
test
cld
mov
ss
sbb
in
sbb
xchg
adc
filds
les
mov
rcl
mov
jmp
xchg
mov
add
test
mov
movsl
adc
repnz
mov
or
pop
or
adcb
inc
test
add
dec
jecxz
adc
in
std
pop
int3
out
mov
inc
xor
mov
enter
lret
or
cwtl
dec
or
jns
setg
jge
pop
mov
pop
add
out
lret
xor
pop
xchg
push
movl
lods
cmp
add
jp
dec
shlb
int
cmpsl
addr16
cmc
fisttpll
int3
std
scas
out
adc
dec
xchg
das
mov
aad
xor
dec
test
dec
xor
leave
xchg
push
or
out
lahf
nop
cmc
cmp
push
les
fsub
imul
enter
dec
int
hlt
xchg
xor
sbb
pop
ja
mov
bound
pop
push
out
mov
jg
insl
cmpb
std
add
insl
je
fs
pop
call
ja
jne
fcoml
add
cmp
aam
inc
bound
or
out
mov
dec
bnd
ds
cwtl
lea
cmp
push
xchg
add
pop
in
jo
popf
jp
scas
mov
fwait
dec
ja
xlat
jo
push
movsb
cmp
adc
or
pop
lret
shl
cli
inc
in
fidivs
add
stos
cld
repnz
lret
rcrl
and
ret
ljmp
mov
dec
add
in
fwait
dec
mov
testb
sti
lods
pop
stc
push
adc
addl
lds
add
inc
pop
adc
xor
lret
cmp
add
or
out
jae
jmp
jl
pop
sub
xchg
adc
inc
pop
or
loopne
fldl
sti
push
jmp
adc
cld
js
stos
rorl
lds
out
popa
test
movsb
ds
dec
in
mov
push
rorl
in
in
test
dec
stos
je
or
cld
shlb
out
jbe
push
mov
out
pop
lret
mov
push
adc
jle
ljmp
fiaddl
lahf
movsb
inc
mov
test
jl
sub
sbb
cmp
pop
adc
inc
push
mov
lret
jmp
push
pop
jmp
sub
rolb
movl
ljmp
adc
lahf
cmp
test
enter
jb
ja
popf
or
mov
stos
mov
sub
inc
jb
dec
jmp
fwait
lods
push
push
shr
lret
jp
int3
jmp
or
xchg
jge
cmpsl
xchg
mov
mov
jg
or
cmp
or
shlb
push
jle
leave
and
addb
or
in
lea
test
mov
adc
mov
and
pop
adc
lret
pop
stos
in
or
mov
dec
or
cmp
pop
aad
rcl
jo
addr16
jp
jl
sub
rorb
in
clc
rcl
and
aad
testl
push
xor
or
std
scas
gs
mov
add
xchg
mov
outsl
vmread
lret
enter
pop
sub
add
je
pop
ret
shl
out
jl
cmp
cmc
rorb
cmp
xchg
hlt
mov
arpl
ret
lods
cmp
repz
dec
or
stos
mov
rclb
outsl
pop
mov
mov
into
call
pusha
cwtl
rclb
jmp
mov
insb
stos
and
faddl
cld
or
movsb
test
test
js
or
or
inc
cld
jle
stos
testl
xchg
cli
arpl
fcomip
mov
add
sbb
aaa
pop
lock
mov
lods
int
stc
pushf
iret
inc
ds
mull
sub
mov
enter
test
pusha
push
mov
repz
mov
inc
incb
jnp
aad
sti
fisttpl
sbb
dec
lods
or
mov
ret
test
jmp
aam
je
mov
jmp
stos
scas
pop
mov
testb
or
mov
ja
stos
inc
addb
inc
cmpsl
jmp
call
dec
or
adc
ret
inc
enter
int3
mov
in
pushf
or
test
iret
mov
pop
stos
dec
std
aam
js
or
xor
in
cld
and
stos
adc
mov
lret
or
js
cmc
test
jnp
mov
jl
movsl
bound
jl
lcall
fldt
inc
aam
or
xchg
xchg
push
xchg
inc
inc
nop
jnp
call
js
fisttpl
xchg
pop
cli
inc
sahf
ljmp
jecxz
cmp
out
mov
or
adc
xor
sti
mov
xor
xchg
fisubrs
stos
test
in
adc
mov
xchg
or
js
push
xchg
call
loopne
xchg
xchg
xchg
aas
test
mov
shlb
in
movsl
and
push
jnp
pop
fnstsw
mov
int3
jo
xor
ds
leave
lret
aad
adc
lahf
stc
adc
sub
notb
sub
mov
mov
mov
or
pusha
lret
or
daa
scas
das
adc
aas
sbb
adc
dec
mov
sbbl
mov
xor
stc
sub
aam
daa
mov
add
loopne
mov
test
or
push
fldenv
aam
lret
loopne
adc
popa
mov
and
imul
or
je
push
stos
jecxz
scas
jb
adcl
mov
dec
int3
mov
pop
in
lret
lret
mov
rcrl
adc
neg
xchg
call
mov
pop
xchg
arpl
outsb
test
ja
lret
enter
sar
ja
mov
mov
lret
in
shlb
sbb
xchg
test
les
fmull
stos
test
jo
shrb
rol
imul
or
lret
adc
cld
fcompl
out
inc
mov
aad
mov
inc
jnp
cmp
sbb
fdivrs
in
mov
adcl
out
dec
lods
dec
add
ss
movsl
xor
fcmovb
sub
push
add
sti
sbb
cmp
dec
pop
iret
adc
mov
sbb
les
jnp
dec
mov
enter
dec
xchg
and
xchg
call
mov
rclb
enter
sub
xchg
fdivl
stc
shl
clc
cmp
addr16
popa
lcall
addr16
cmp
jne
cmp
addl
rcl
push
ss
lret
testl
or
adc
sbb
sub
ss
cmp
das
jl
adc
lahf
je
inc
enter
or
imul
mov
dec
stos
stos
mov
sbb
cmpsb
xchg
nop
aam
mov
in
dec
add
loopne
or
loop
cmp
inc
mov
dec
repz
mov
cld
push
mov
jno
adc
shrl
ss
push
cmp
or
xor
push
rcl
fucom
or
out
inc
rolb
shlb
cli
test
sub
sbb
adc
jg
ss
cld
sbb
in
hlt
and
mov
and
mov
out
or
xlat
cmp
sbb
push
jbe
flds
les
movsl
dec
xchg
test
test
cmp
repnz
sti
loopne
pop
or
push
test
hlt
xchg
js
or
or
rol
dec
add
sti
inc
test
aaa
lods
stos
xchg
repz
xchg
fisttpl
pop
repnz
arpl
xchg
push
mov
push
xchg
add
js
mov
jo
pop
stos
xchg
or
adc
push
mov
jbe
pop
mov
rcrl
js
xchg
ficomps
dec
ret
addr16
repnz
loopne
dec
sub
lcall
addr16
imul
push
dec
sti
imul
or
or
add
faddl
stos
addb
dec
ss
sbbl
jg
fcoml
inc
lea
pop
and
jmp
jne
stos
or
push
or
adc
cld
test
test
cld
jmp
stos
pop
or
ret
jnp
or
push
inc
ret
mov
inc
mov
jl
fsubrs
xlat
stos
and
xchg
xchg
icebp
dec
pop
pop
out
stos
mov
test
aad
pop
js
pop
jmp
pop
rorl
push
inc
fs
sbb
jnp
insl
pop
pop
outsb
fwait
ljmp
ret
sti
mov
cmp
jnp
cld
or
lea
ds
jl
adc
push
repnz
mov
push
fcompl
hlt
mov
xchg
mov
hlt
or
icebp
xchg
push
push
sbb
push
fadd
cltd
loop
outsb
nop
shl
les
addr16
sbb
iret
inc
lock
lret
cs
inc
insb
xor
push
fistl
repnz
inc
fs
decl
and
or
cmp
enter
pop
stos
xor
rol
ret
sub
sub
dec
test
pop
jb
xchg
push
xor
cld
adc
addr16
adc
rcrl
gs
cli
test
jmp
jl
je
mov
js
ljmp
push
lods
pop
hlt
xchg
iret
or
cmp
xorl
mov
xchg
fwait
mov
xor
ljmp
adc
sar
test
test
cld
stos
dec
jmp
shrb
loopne
or
mov
fiaddl
xchg
sbb
daa
push
or
inc
loope
mov
xor
vaddpd
fimull
mov
jl
cmp
add
mov
sub
sbbl
test
in
push
leave
xor
int3
adc
fs
dec
frstor
test
insl
dec
mov
inc
scas
lahf
mov
sub
enter
cmp
fdiv
fildl
cwtl
dec
in
cs
pop
rep
jp
add
or
loope
cld
or
call
lret
repz
mov
jo
insl
or
pop
popl
adc
mov
dec
imul
out
je
popf
pop
loope
pop
jnp
sub
add
sub
dec
push
imul
out
js
or
lahf
cs
stc
out
iret
cld
movsb
or
adc
ljmp
outsl
and
nop
inc
jno
sbb
out
into
imul
cmp
in
jb
shll
cmp
dec
xlat
fisttpll
mov
test
test
cmp
sub
xor
mov
jl
lock
aad
mov
lret
fstl
adc
push
stos
jmp
fwait
out
and
enter
out
jmp
mov
xchg
insb
mov
iret
sbb
jmp
or
mov
or
dec
or
xchg
pop
test
mov
xchg
out
scas
push
xchg
iret
filds
sysret
test
push
in
les
add
add
pop
enter
lret
out
cmpsl
lock
addl
or
cld
ja
stos
lock
out
inc
mov
cmp
jecxz
test
hlt
or
or
ret
lret
into
mov
jbe
xchg
push
es
inc
lret
xchg
and
dec
add
pop
ret
adc
out
hlt
pop
push
jo
mov
arpl
sub
xor
cmp
mov
les
add
mov
dec
mov
cmp
ss
cmp
pop
fstpt
pop
out
in
cmp
pop
or
outsb
mov
repnz
or
cld
or
add
jo
enter
dec
jae
es
fwait
jge
enter
test
mov
mov
cld
ja
call
sti
or
fcmovb
dec
lret
mov
subl
add
pop
lret
jbe
or
sti
stos
test
test
ja
inc
mov
or
mov
or
xchg
xor
in
add
or
jp
ret
loopne
pop
add
sub
bound
push
pusha
sub
adc
xor
jl
pop
mov
mov
test
sbb
mov
pop
add
jp
xchg
mov
or
shl
fcmovnbe
jae
mov
movsl
xchg
hlt
lcall
add
push
lods
arpl
cld
adc
sub
rolb
loop
stos
add
test
jns
mov
sarb
int3
jae
fisttpl
push
cwtl
shlb
adc
mov
nop
out
mov
orb
push
cmpsb
dec
fwait
pop
shrb
dec
fbstp
cld
mov
ljmp
inc
pop
jl
out
push
push
js
dec
mov
cmc
shl
test
rcll
jns
cltd
mov
jl
xor
mov
push
cmc
lahf
mov
ja
push
std
or
jl
in
mov
push
aad
aam
lods
aam
adc
test
ret
aam
adc
out
cmp
mov
in
scas
cmp
paddw
and
imul
lock
scas
rcrl
je
dec
ljmp
cmp
lea
scas
in
mov
aam
dec
cld
xor
ret
insb
bndldx
frstor
imul
or
test
push
push
sbb
push
in
iret
sbb
xchg
pop
andb
push
dec
aas
pusha
cmpsl
in
mov
lock
jae
or
stos
stc
loopne
ljmp
rolb
fcmovnbe
fadd
pop
repnz
xor
imul
pop
jmp
aam
test
cmpsb
rol
out
or
or
or
test
test
sti
je
mov
hlt
sbb
fisttpl
or
add
scas
sub
adcb
cli
cld
mov
xchg
into
push
mov
cmp
roll
cld
xchg
lret
mov
movb
int3
jmp
lea
cwtl
out
fsubr
add
ljmp
or
jmp
stos
or
push
outsl
or
mov
cmp
insb
jnp
test
adc
fisubl
fsubrs
add
in
repz
or
mov
sbb
jl
jmp
out
cmp
loopne
add
pusha
aas
push
scas
inc
test
jecxz
imul
or
push
lcall
fsubrl
dec
jge
jmp
call
jl
sbb
jmp
fdivrs
push
outsl
in
cmovl
xchg
mov
jmp
sbb
dec
or
jl
rcl
shl
lret
out
in
les
mov
adc
bound
nop
mov
pop
xchg
repz
cli
stos
add
xor
cmpsl
inc
push
repz
in
or
or
xlat
pop
fsubrs
or
or
fdiv
cwtl
les
or
mov
mov
mov
push
or
jg
jnp
div
jmp
mov
test
or
lret
aam
or
mov
jg
mov
out
movsb
xchg
jle
add
xchg
add
jg
dec
sarb
or
or
lock
fdivs
test
mov
loopne
in
push
xchg
dec
inc
ret
insl
jmp
gs
lcall
pop
push
adc
arpl
jle
jp
sbb
int3
xor
aam
and
pusha
mov
jbe
mov
cld
insl
mov
mov
dec
or
or
fcmovb
iret
lret
pop
push
stos
add
stc
js
or
or
mov
push
lret
pushf
aad
aam
sub
ficomps
mov
inc
add
push
or
mov
mov
or
enter
mov
sbb
pop
jo
inc
stos
adc
mov
adc
adcb
ja
inc
notb
mov
roll
jg
jle
add
shrb
das
popf
out
xchg
je
or
das
lcall
cmp
test
mov
jae
lahf
mov
dec
cmc
lret
out
ja
cmp
jp
dec
or
lret
cli
dec
mov
and
sub
in
iret
sub
dec
shl
icebp
das
mov
cli
lahf
jae
fsubl
mov
cmpl
imul
inc
push
je
xchg
lret
jo
fdivl
mov
mov
imul
sbb
repnz
in
sub
jl
cld
inc
mov
inc
jb
addr16
cmp
scas
add
lods
shll
ja
push
jmp
mov
nop
sbb
scas
mov
inc
and
ljmp
stos
or
sbb
iret
sub
das
loopne
mov
jle
xchg
gs
lock
cltd
or
fistps
insl
pop
push
pop
cmp
pop
and
loop
cmp
pop
cld
leave
xorb
pop
aam
xor
jle
and
jne
jmp
inc
xchg
dec
fidivl
pop
in
aam
test
adc
dec
js
fsub
inc
sub
fsts
cmpsb
iret
push
jl
shrl
push
dec
or
shl
shrb
je
push
cmp
sub
cmp
jmp
or
push
pop
jg
je
mov
push
test
or
test
es
std
leave
test
std
or
fcmovb
dec
lret
movb
jp
and
or
fsubr
push
jp
fcomp
pushf
mov
aam
xor
shlb
enter
jp
scas
add
cmp
in
out
inc
icebp
imul
dec
push
xchg
push
dec
fcompl
pop
ffree
sub
stc
mov
dec
stc
pushf
jne
fdivr
add
xor
rorl
cmp
insb
aas
hlt
mov
sub
rcll
nop
mov
fnstcw
fdivl
jl
test
orb
aad
dec
adc
std
mov
add
dec
pop
jmp
jns
mov
jb
dec
xor
lock
sti
jl
test
icebp
or
mov
inc
pop
mov
mov
js
xor
cld
in
jne
test
push
stos
fcmove
fcmovbe
xlat
jne
test
gs
lea
test
cld
push
es
fdivr
shll
in
jecxz
cmpsl
sub
inc
mov
fmull
icebp
jl
test
addr16
dec
out
aam
push
std
leave
sbb
mov
stos
das
mov
popf
sti
test
jnp
orb
sahf
jmp
or
ret
add
sti
in
test
xor
iret
fs
or
nop
jle
inc
call
imul
mov
imul
jae
jmp
adc
call
icebp
loopne
cmp
out
stos
fmull
sti
ljmp
pushf
or
xchg
jb
ret
shr
imul
sub
decl
pop
repz
adc
mov
ret
sbb
push
dec
stos
in
sbb
cmp
fs
out
aaa
sbb
int3
mov
bnd
out
and
sarl
pushf
pushf
call
jmp
fwait
and
push
sub
jge
fucomi
inc
call
stc
movsb
add
fisttpl
pop
mov
inc
sbb
test
ljmp
add
cmpsl
clc
mov
and
in
shlb
loopne
dec
enter
aad
adc
add
or
cmc
stos
pop
test
imul
jg
cld
out
or
roll
ja
test
iret
sarl
xor
adcb
push
cmp
mull
call
xor
enter
push
out
jl
xor
aad
and
inc
xor
mov
xchg
scas
enter
mov
out
hlt
aad
cmp
lcall
decl
ss
hlt
imul
mov
mov
pop
fs
std
push
ret
lcall
nop
test
sbb
in
jne
sbbb
daa
aad
ljmp
inc
pop
ss
test
inc
lods
mov
add
jge
xor
sti
pop
jmp
or
and
pop
scas
add
fisttpl
xchg
ret
inc
add
sti
mulb
add
jg
inc
icebp
or
mov
jmp
mov
mov
or
sti
mov
fwait
inc
jl
mov
stc
dec
insl
inc
clc
les
les
cltd
inc
or
stc
loop
stos
outsb
inc
or
lds
stos
ds
mov
aam
pop
inc
pop
cld
imul
jns
je
pop
test
cmp
adc
dec
imul
in
jle
push
mov
xlat
je
cmp
shrl
fcom
adc
xor
stos
int3
repnz
cmp
inc
stos
aam
sbb
add
aas
jecxz
arpl
les
xor
stc
xor
mov
xchg
stc
movl
leave
xchg
add
test
sbb
or
scas
test
test
addr16
loope
push
mov
jb
mov
fnsave
fdivs
mov
add
jb
mov
inc
loope
mov
clc
lret
mov
pop
rolb
mov
shrb
dec
push
loop
out
push
out
push
mov
mov
cld
mov
sbb
cld
stos
mov
cmp
dec
pushf
cld
out
sbb
inc
mov
out
jle
mov
and
shll
sub
aam
sti
lods
xor
mov
fldt
jl
repz
enter
dec
adc
lret
in
mov
test
mov
cmpsl
xchg
xchg
pop
lret
shlb
add
imul
push
xor
adc
ffree
push
pop
int
mov
fstpt
in
inc
jnp
or
adc
sub
mov
jne
lcall
lahf
add
aam
repnz
fmul
pop
and
or
mov
loope
orb
ret
testb
cmp
bound
stc
adc
sbb
mov
stos
out
and
out
or
inc
xchg
or
mov
jecxz
fisttpl
jno
les
xchg
mov
push
loope
dec
stc
mov
mov
loopne
test
aam
fidivl
test
dec
sbb
adc
lret
std
sti
fistpll
jmp
scas
lret
cmp
les
cld
jl
push
in
imul
ljmp
xor
mov
loop
das
jnp
mov
dec
and
mov
data16
mov
sub
sbb
push
mov
stos
dec
adc
and
push
dec
stos
das
or
jne
mov
pop
xor
shrl
xor
into
iret
jbe
xchg
shlb
jmp
sti
std
out
rcrb
lahf
adc
jl
cmc
pusha
fisubrl
sub
pop
cmc
inc
or
inc
jnp
stos
add
mov
push
cmp
xor
enter
mov
stos
jns
push
loope
add
push
loopne
cmp
xchg
rcrl
mov
js
or
out
xor
in
push
sub
jnp
stc
out
jae
mov
sub
sub
ret
dec
push
pop
jle
sub
ja
add
lret
int3
test
call
ds
out
loope
les
jl
cmp
mov
and
adc
jg
jl
stc
idivb
fcmovne
clc
cmpsl
cwtl
mov
out
nop
fistps
xchg
pop
add
push
in
or
mov
dec
loopne
in
pushl
dec
scas
jbe
lcall
lret
sbb
hlt
sub
push
push
js
stos
push
rcrl
xchg
movsl
lock
pop
fisttps
mov
scas
sbb
and
jmp
cmp
ja
or
xor
btc
inc
cmp
mov
mov
fisttps
cld
xor
scas
je
cld
inc
cmp
jo
push
std
cmp
fwait
out
add
je
test
cmp
pop
mov
cmp
sbb
jl
mov
jno
or
out
mov
xor
das
pop
pushf
cld
mov
mov
sbb
int
add
jnp
mov
and
sarb
scas
mov
jnp
push
fsqrt
xor
or
add
ret
dec
loope
test
or
stc
sub
mov
adc
add
or
xchg
inc
dec
ficoms
sub
sub
scas
enter
ljmp
je
or
sti
out
adc
jp
test
ds
mov
and
lret
mov
cli
sub
pop
inc
cmpsl
add
add
sbb
mov
mov
lret
dec
sbb
add
jecxz
dec
jbe
dec
std
push
fucomip
mov
lods
inc
jp
sti
lret
shll
aaa
jmp
ret
xchg
daa
out
or
jnp
jmp
shr
mov
scas
addb
pop
test
incl
in
js
jae
out
mov
jl
insb
pop
decl
in
lods
dec
fcmovnbe
mov
jae
pushl
cmpsl
scas
mov
leave
mov
lods
hlt
pop
push
adc
xor
loopne
mov
lods
cli
mov
push
movsl
ss
pop
dec
sbb
jp
fiadds
xlat
sbb
in
loop
iret
cmpsl
add
xchg
xor
cmp
sub
add
or
add
jnp
in
sub
jns
mov
and
add
in
mov
inc
scas
outsl
popf
pop
ret
xchg
xchg
pop
mov
jecxz
dec
add
add
inc
movsb
cmp
sub
dec
push
dec
dec
sbb
adc
icebp
mov
out
in
mov
push
sub
in
xchg
fmul
scas
lret
add
push
or
mov
iret
sub
inc
or
add
pusha
inc
mov
dec
inc
mov
dec
adc
orb
xchg
dec
js
rcrl
jae
xchg
cs
or
icebp
mov
frstor
scas
in
jae
aad
movsl
pop
arpl
rcll
ds
lock
loop
stos
fimull
int3
cmpsb
cmp
sbb
popa
adc
cli
mov
dec
jp
data16
test
or
jecxz
adc
fidivrs
jl
hlt
stos
and
pushf
loopne
add
imul
jae
cmp
mov
ror
std
shlb
addr16
jge
iret
in
mov
fldln2
loopne
xchg
mov
cmp
sub
insb
subl
popa
or
lods
push
or
roll
out
insb
mov
clc
or
push
repnz
mov
in
add
mov
dec
mov
dec
inc
js
cmp
imul
or
inc
arpl
mov
inc
lods
adc
hlt
mov
fldl
scas
ret
sbb
or
xchg
js
cmp
test
lahf
popf
scas
push
aad
mov
adc
mov
cwtl
pop
add
dec
loopne
movsl
les
inc
shr
mov
cli
into
mov
int
cmp
mov
scas
dec
ss
lcall
or
cmp
rcrl
or
mov
aad
push
fsubr
push
mov
leave
call
xchg
mov
mov
xchg
aam
nop
repnz
jnp
push
cmp
push
cld
lock
int3
xor
add
mov
push
call
insl
add
hlt
xor
or
sub
stos
fwait
icebp
adc
mov
sbb
dec
mov
iret
out
sbb
sbb
dec
repz
jns
les
les
ret
shl
loope
xrelease
cmp
daa
bound
push
sbb
cmp
js
jmp
movl
push
pop
lods
frstor
rolb
sbb
mov
cmp
push
int3
push
cmc
or
pop
inc
sub
mov
mov
sarl
or
repz
neg
sub
pop
pop
jae
or
dec
adc
aaa
cs
enter
fcompl
dec
scas
pop
mov
jae
pop
mov
pop
call
ret
insl
jl
pop
fidivl
add
or
lret
jns
dec
insl
inc
sbb
push
xor
lock
stos
or
or
jns
push
sub
or
and
loopne
adc
aaa
leave
jge
arpl
shll
sahf
stc
mov
add
sbb
out
inc
jnp
mov
or
sti
sbb
pop
sbb
addr16
pop
test
push
pushf
dec
rcl
mov
test
dec
dec
js
sub
lods
int3
lock
add
jp
shl
fnstsw
sub
adc
std
insb
inc
pop
pushf
or
pop
or
hlt
data16
cmp
pop
inc
adc
mov
jbe
scas
sbb
add
shrl
pop
fcomps
dec
fisttpll
or
or
push
lret
or
cmp
pop
lock
xor
jg
movsb
decb
and
ret
sahf
cmp
mov
negl
stc
popw
in
decl
std
stc
int
fldcw
testl
jns
bound
in
mov
and
dec
stos
mov
sbb
mov
mov
lods
dec
sub
xchg
add
int3
inc
pushw
popf
test
push
mov
dec
xchg
mov
xor
out
xlat
sub
lret
fsubs
mov
add
inc
push
in
sti
insl
jp
and
iret
dec
mov
and
pop
sub
push
enter
add
insl
jp
push
jnp
enter
insb
xlat
mov
iret
or
mov
test
into
jge
jl
or
adc
fildl
lret
into
xchg
adc
sub
int3
mov
dec
sub
mov
mov
sub
add
lods
and
jg
ret
cld
push
sbb
test
mov
mov
jmp
or
sti
mov
add
cld
push
xchg
clc
add
lods
dec
pop
lret
sbb
shrl
xchg
mov
shll
jmp
ret
mov
rclb
inc
cvtdq2ps
fwait
nop
push
inc
cld
xchg
imul
adc
inc
pop
test
push
movsl
je
mov
inc
loop
sahf
enter
pop
call
push
cmp
push
mov
ret
out
sbb
test
mov
add
adc
inc
push
mov
int3
movsb
cmp
jl
and
dec
ret
inc
or
subb
jp
out
cmp
invd
adc
imull
icebp
enter
push
bound
pop
dec
fstps
in
mov
mov
push
inc
stos
dec
mul
scas
fld
fwait
inc
lahf
out
jp
cmp
in
or
fcoml
out
and
mov
push
lods
inc
loopne
sub
call
sahf
or
sbb
mov
les
mov
sbb
je
mov
sub
out
inc
mov
pop
jg
out
clc
fldlg2
push
sarl
int3
pop
or
dec
orl
add
push
test
pushf
pop
movsl
stc
or
test
jbe
fnstcw
mov
leave
jns
push
movl
jmp
icebp
cmp
dec
adc
add
insl
mov
shrl
scas
mov
cltd
and
mov
xchg
jp
aaa
xchg
imul
xor
cmp
mov
in
std
add
mov
add
lret
adc
push
cmpsb
dec
rolb
addb
sbb
fmuls
jmp
mov
dec
add
add
inc
inc
xor
xchg
arpl
mov
fadd
pop
int
inc
es
pop
arpl
cld
les
std
pop
adc
cmp
add
xchg
fs
inc
xchg
dec
push
sub
loop
mov
inc
mov
jb
jecxz
or
imul
pop
mov
and
ja
in
and
jp
mov
sti
jge
enter
mov
ret
sbb
in
movb
fmuls
lcall
mov
jmp
in
sub
fildl
dec
shrl
or
es
or
and
es
and
test
enter
enter
subb
ss
xlat
xchg
loope
repz
dec
sub
jns
dec
iret
mov
sti
dec
jbe
mov
pop
outsb
test
or
ds
stc
and
fildl
jle
test
or
loop
cli
in
ljmp
inc
push
sub
pop
and
pop
or
xchg
xor
int
daa
test
or
pop
ds
sbb
ds
add
inc
inc
adc
int
or
cs
xor
sti
enter
or
stos
mov
fs
cld
enter
lock
ljmp
sub
sub
imul
pop
jg
cmpsl
js
push
push
push
or
pop
frstor
ror
add
cmp
call
js
stc
sbb
or
loop
cmp
adc
out
jb
imul
ficomps
cmpsl
clc
dec
push
jne
push
mov
movsl
pop
inc
rcll
or
pop
aam
xor
jo
cmp
push
add
mov
jl
movsl
wbinvd
xchg
cmpsl
call
movb
add
shrb
cld
mov
jecxz
lods
mov
shll
testb
ror
rorb
sti
mov
push
add
je
in
or
stc
jmp
xor
sbb
cmp
cltd
aaa
mov
das
add
push
sub
iret
leave
pushf
adc
sarl
dec
insl
in
addr16
jmp
add
add
aaa
fbstp
out
icebp
bound
mov
lret
js
xor
sti
jbe
pop
out
or
std
mov
stos
mov
test
sti
scas
nop
mov
pushf
popa
pusha
in
push
pop
scas
jl
adc
or
jl
lods
stos
or
mov
repz
fmull
fcmovnbe
fimull
ljmp
mov
jg
lahf
stos
dec
cld
fmul
xlat
or
jbe
jb
movsb
jmp
test
adc
mov
adc
insb
adc
or
sub
aas
cmp
cmp
les
jge
inc
pop
mov
rcll
push
and
in
inc
jbe
or
pop
and
fiaddl
xchg
jle
add
adc
in
jae
lock
mov
xor
jl
or
push
sbb
sbb
or
add
jnp
jns
loopne
sub
insb
fucomp
push
mov
test
or
mov
mov
scas
mov
xor
pop
jb
stos
mov
int3
pop
popa
rcrb
nop
loopne
pop
pushf
imul
push
fsubr
cmp
or
and
add
adcb
push
scas
js
je
in
adc
stc
xchg
fs
xchg
aam
inc
and
lcall
jo
xchg
shl
cmp
add
xchg
sub
rcrl
out
inc
add
repz
fisttpl
rorl
mov
stos
mov
lret
pop
fmuls
ret
lret
jb
mov
mov
push
call
mov
shlb
or
xchg
adc
mov
test
add
clc
push
and
ret
jnp
aam
pop
mov
cmp
jp
jne
out
sub
fdivrl
das
scas
addl
cmc
outsb
jecxz
pop
lret
sub
mov
inc
sbb
or
aaa
xchg
or
add
and
dec
add
shlb
add
add
jle
clc
aaa
shll
cmp
cmpsb
sbb
jl
xchg
ljmp
add
or
xchg
cmp
mov
pop
jnp
cld
iret
sarb
stc
out
mov
dec
or
iret
cltd
push
mov
mov
in
dec
out
cld
dec
out
ds
xchg
ret
jbe
mov
scas
inc
sbb
jb
ficomps
mov
les
push
sti
test
ljmp
add
int
jae
in
lahf
cld
pop
fcomps
lods
out
shll
js
shlb
shll
in
inc
inc
xchg
cmp
mov
push
enter
jl
push
and
call
pop
mov
sbb
or
out
mov
loope
leave
and
test
jp
mov
jo
pop
lock
or
jl
xchg
adc
movq
js
mov
add
dec
jle
mov
xchg
cli
add
icebp
std
stos
outsb
lock
adc
cmp
fistps
lcall
into
iret
lods
sarl
movsl
das
pop
cwtl
cwtl
mov
fwait
std
int3
or
sub
mov
dec
shl
mov
jle
js
pop
aam
adc
push
sbb
xchg
clc
mov
mov
js
inc
jne
stc
or
mov
in
xchg
mov
decl
adc
or
or
add
in
mov
scas
pop
or
les
cld
loopne
inc
cmp
adc
mov
sarl
in
decl
xchg
xchg
mov
cmp
cmp
or
mov
aaa
mov
rorb
mov
jnp
xor
dec
loopne
mov
sti
ret
push
popa
push
mov
xor
jle
xchg
outsl
enter
cmpb
enter
cmc
adc
xchg
add
mov
inc
or
in
jl
int3
inc
ret
push
cli
mov
mov
jle
lret
xlat
pop
rol
outsb
aaa
mov
xlat
sub
or
cmp
cmp
enter
jo
ret
std
test
scas
sbb
rorl
fildl
mov
lock
pop
testb
bound
ret
out
lds
fsubl
shrl
ret
or
or
jbe
push
add
jo
lods
sahf
mov
sub
movsl
dec
or
sub
insl
adc
sti
daa
cmp
sub
jl
sub
mov
lret
sub
out
ds
dec
and
shr
fistpll
sub
subl
mov
jmp
sbb
scas
jnp
adc
mov
pop
gs
lods
dec
push
out
gs
or
rol
sti
xchg
cld
mul
stos
cmp
stos
lods
mov
stc
lods
or
fistps
mov
or
pop
add
leave
sar
mov
test
sbb
dec
loopne
pop
sbb
lcall
jle
mov
test
mov
ror
roll
pop
iret
in
ffree
inc
jns
lret
in
lret
shll
and
cmc
add
in
mov
bound
inc
add
sbb
mov
sahf
popa
push
sub
pop
dec
cmp
mov
stos
lock
iret
popa
sahf
rcrl
out
push
sub
or
xor
jb
jmp
in
leave
and
inc
sar
pop
adc
cli
cltd
ret
stos
mov
or
xchg
adcb
mov
jl
out
mov
out
add
in
sti
stc
mov
in
ljmp
jmp
je
inc
subb
xor
mov
and
or
icebp
scas
push
jge
adc
ret
or
ret
cs
mov
jl
ret
dec
cs
jl
dec
movb
jge
cld
or
stos
or
andl
jg
hlt
popa
fistpll
lret
movsl
ja
insb
rorb
fidivrl
mov
or
jnp
jmp
mov
cwtl
xor
faddp
dec
aaa
shl
mov
sub
or
fnsave
std
add
aad
dec
clc
sbb
mov
mov
mov
or
inc
dec
mov
jae
xor
ret
xchg
cmp
orb
repnz
xchg
scas
clc
push
xor
movsb
ficoml
and
lret
lea
jl
jo
inc
mov
mov
rolb
mov
ror
js
sbb
nop
fcmovu
add
clc
mov
imul
cld
or
imul
mov
pop
mov
adcl
push
sar
fidivrs
push
mov
jl
dec
in
push
add
lock
test
testb
lret
ss
jae
mov
in
mov
repnz
cmpl
dec
mov
add
sub
mov
dec
nop
repnz
xor
or
add
xor
xor
cmp
push
cmp
cmp
outsl
and
pop
loope
aas
loope
sbb
popa
sub
jns
jp
adc
inc
pop
or
or
or
mov
or
cmp
or
add
repz
add
sbb
add
jg
add
dec
or
mov
enter
add
mov
jns
push
aad
mov
xchg
and
call
mov
mov
pushl
std
pop
or
pop
mov
or
xlat
adc
setbe
aas
repnz
add
xor
or
std
sub
or
mov
sub
add
or
dec
inc
mov
or
stos
push
or
idivl
cmc
add
pop
sbb
dec
dec
pop
push
adc
mov
or
into
testl
shrb
inc
push
lods
push
add
or
lcall
or
sub
mov
mov
mov
hlt
aam
jns
ret
hlt
test
je
mov
int3
jmp
into
int3
rol
sub
xchg
add
ret
test
mov
iret
lods
dec
test
ja
xor
rorl
inc
std
jo
rorl
les
leave
cmp
lds
cmp
test
jb
inc
sbb
dec
and
mov
adc
fcmovnb
sbb
enter
stos
mov
cld
push
test
pop
jbe
jle
popa
ljmp
stos
xor
pop
and
xchg
mov
addl
mov
lea
push
or
mov
xor
ret
stos
aaa
pop
scas
add
sahf
out
xor
test
insl
jns
sbb
jae
test
jb
fsub
push
popa
pop
scas
fwait
popf
into
add
shrl
lret
pop
or
out
jb
pop
fiaddl
dec
lods
mov
xor
dec
pop
in
sub
or
lods
test
pop
in
and
leave
stos
cmp
jae
fbstp
adc
sbb
sub
jecxz
or
jbe
stos
dec
mov
dec
pop
or
outsb
and
ja
xchg
mov
cmp
insl
dec
pop
push
adcl
in
cmp
mov
xchg
cmc
add
sub
add
ds
outsl
jle
inc
inc
int3
adc
sbb
push
into
jg
stos
or
and
sbb
add
lock
cmp
aad
mov
mov
fcoms
adcb
push
je
adc
pusha
lds
jle
adc
sqrtps
pop
sub
or
aad
dec
mov
fimull
or
stc
sub
adc
test
lods
out
jmp
cmp
hlt
mov
push
push
fnstenv
notb
sti
pop
mov
add
lds
sbbb
xlat
cld
outsb
jae
test
cmp
rcl
mov
xor
jne
xchg
movb
or
dec
jbe
sub
test
or
fwait
adc
jb
lea
mov
or
outsl
sti
sbb
add
sub
jns
fucomip
es
and
sbb
adc
pop
in
sub
js
or
daa
lret
inc
xor
test
mov
call
mov
mov
inc
mov
pusha
push
fninit
dec
jp
sahf
filds
insb
call
fwait
inc
pop
jecxz
inc
ja
cmp
or
sahf
iret
cwtl
or
xchg
pop
mov
mov
push
iret
add
popf
xchg
fsub
cli
or
int
mov
pushf
ds
das
stc
outsl
ret
stos
into
or
cmp
mov
add
hlt
fists
inc
lock
mov
dec
std
adc
or
lds
pop
cli
jle
jne
adc
rolb
push
inc
pop
ret
rcrb
test
cld
push
add
movsb
lret
or
or
xor
jge
mov
pop
test
inc
sub
stos
sbbl
mov
mov
jmp
aaa
fisttpll
inc
jp
add
cmp
dec
dec
dec
and
subl
int3
or
stos
dec
in
inc
cs
shrb
jo
out
mov
mov
pop
mov
add
xchg
pop
jo
stos
sbb
jo
and
xchg
jge
xchg
xchg
add
aam
loop
mov
or
jmp
cld
aam
in
hlt
aas
into
pop
cmp
rcr
outsb
cmp
or
test
and
std
mov
ds
cs
loopne
into
xor
aaa
add
aam
rcll
mov
xchg
mov
push
mov
adc
in
push
add
je
arpl
fdivs
xchg
or
fadds
mov
inc
fiaddl
xchg
jmp
pushf
adc
call
cmp
in
push
fldcw
ret
fucomi
stos
pop
pushf
aad
cmp
xchg
jo
add
gs
stos
data16
into
cmp
rcll
insl
shrb
xchg
mov
sbb
mov
cmpsl
sbb
sbb
ret
push
call
mov
push
divb
roll
mov
jge
sub
mov
xchg
lds
adc
std
push
sub
jb
subl
add
jb
movsl
lret
lcall
xchg
jle
jmp
or
mov
or
stos
js
xorb
in
dec
addr16
add
sarl
adc
mov
subl
dec
andb
inc
hlt
stos
call
mov
dec
jbe
sub
push
or
aas
xchg
adc
and
sbb
enter
aas
adc
push
aad
stos
sbbl
pop
int
and
cld
inc
into
movsl
test
cli
sbb
lcall
nop
sar
lods
jns
cmp
sarl
test
cli
jl
shll
push
test
subb
ds
int3
sbb
loope
add
push
jmp
ret
push
mov
movb
lods
jp
test
add
mov
inc
add
mov
int3
divl
test
mov
cmp
mov
xchg
lret
jp
stos
lds
xchg
cld
nop
lret
mov
iret
sti
mov
nop
mov
imul
inc
mov
push
cmpsl
std
cs
or
pop
jns
std
jno
out
xor
sbb
test
xlat
hlt
lods
test
nop
pop
in
aam
cwtl
sub
or
repnz
mov
add
decb
out
iret
repz
test
hlt
stos
das
test
pop
shrl
out
cld
fldcw
mov
adc
mov
xor
pop
add
or
jmp
jae
or
xor
dec
insb
add
in
fldt
add
rcrb
ret
and
aam
pop
cmp
inc
cwtl
or
add
inc
push
fldt
lret
mov
loop
aaa
test
int3
scas
iret
sub
mov
push
adc
add
repz
sbb
pop
and
insb
lret
rcll
int3
stos
xor
cld
or
mov
cmpl
mov
jno
pop
test
push
iret
mov
mov
imul
into
xor
pop
jecxz
mov
mov
roll
lret
mov
adc
ss
inc
add
pop
enter
jb
test
jbe
repnz
mov
mov
cmc
shll
and
jns
ret
pop
rorb
shr
sub
test
sub
add
mov
pop
das
dec
movsb
add
pinsrw
adc
in
test
out
add
mov
int3
push
adc
and
jno
inc
adc
or
push
push
lcall
cpuid
add
stc
iret
test
je
adc
or
stos
jmpw
jo
mov
mov
test
into
add
cmc
test
xor
lret
push
int
xor
movhps
dec
sub
or
sbb
mov
ja
aad
cwtl
sbb
test
gs
mov
aam
xchg
lods
repz
ret
add
cmpsb
std
fnstenv
adc
lret
fisttpll
sbb
dec
mov
dec
fstpt
aam
push
add
xor
mov
cmp
push
dec
arpl
pop
and
lods
outsb
dec
loope
mov
xlat
stos
hlt
rorb
scas
sti
and
push
fistps
mov
push
add
daa
das
inc
out
pusha
xchg
lds
int3
std
pop
fldt
add
pop
mov
adc
add
pop
leave
and
inc
imul
xchg
dec
mov
xor
rolb
imul
les
in
cmp
cwtl
push
enter
xor
xlat
in
scas
leave
cld
and
push
add
fstps
outsl
rep
mov
cmp
std
xchg
ds
inc
das
or
ss
mov
loop
add
iret
outsl
sub
sub
aam
insb
rclb
xchg
or
or
test
dec
lods
and
inc
out
or
mov
lret
insl
les
leave
push
mov
cwtl
lods
or
mov
mov
lods
add
loopne
hlt
or
js
insb
sarl
mov
jl
ds
scas
shl
xchg
mov
adc
xlat
add
dec
or
test
ret
sar
lret
adc
rcrl
jns
pop
adc
popf
dec
ret
and
xchg
and
cmp
call
cmp
scas
fldl
pop
testb
or
ljmp
les
mov
in
xchg
add
movsb
pop
lret
dec
cmp
leave
pop
push
in
or
enter
sbb
sub
cld
push
fcmovbe
sbb
sub
and
jl
jns
add
dec
ss
jp
mov
subl
or
or
mov
mov
mov
js
hlt
sbbb
jecxz
lods
repnz
in
stos
lods
rcrl
in
push
lret
pop
aad
test
dec
sti
dec
loop
ret
aam
push
cmpsb
xor
push
and
jg
shrb
in
dec
stos
js
dec
insl
cmp
sub
add
in
dec
cmp
xor
push
push
inc
mulb
fisttpll
adc
subb
sub
pop
leave
movl
adc
xchg
lahf
mov
aad
lods
xchg
dec
add
sub
and
pop
sub
xor
inc
jmp
and
push
adc
push
outsb
insl
mov
push
lock
mov
lret
jg
insl
shr
or
jmp
push
mov
fmuls
pusha
int3
jmp
sub
sub
push
sbb
fbstp
inc
xor
scas
dec
mov
xchg
push
fistl
sub
xor
cltd
lods
pop
mov
sti
mov
xchg
mov
and
or
mov
insb
mov
dec
ja
fdivl
push
std
jmp
pop
leave
scas
ja
dec
inc
scas
cld
xchg
inc
dec
add
test
or
aas
sub
fisubs
or
lahf
rol
sbb
add
mov
cmpsl
insb
test
orl
push
mov
scas
imul
jo
mov
adc
loopne
or
test
or
xor
xor
or
jne
stos
loopne
div
ss
xchg
js
lock
out
lahf
in
mov
fnstsw
movnti
xlat
sub
cld
aaa
scas
in
dec
add
pop
dec
sbb
inc
fisttpl
sub
jg
adc
insb
jb
xchg
addl
jge
mov
add
sbb
pop
mov
rorb
jp
in
jge
sub
adc
cmp
scas
xchg
icebp
or
inc
sub
sbb
fsubrl
jnp
or
or
leave
cmp
mov
sub
jno
mov
add
or
rol
inc
or
out
inc
or
sbb
iret
ret
mov
sti
int
mov
sbb
in
inc
dec
je
in
adc
mov
push
ljmp
jnp
and
fmul
cmc
push
test
xchg
call
out
rorb
cmp
or
popf
sarb
popa
pop
in
fsubrl
sub
cmp
js
add
out
insl
mov
ljmp
sti
jecxz
ljmp
pushf
shlb
mov
movsb
popf
lahf
addb
or
mov
jl
js
sub
or
and
sbb
scas
lret
shlb
dec
fidivrl
xchg
ficoml
mov
je
ds
mull
jmp
jno
jp
push
das
jno
mov
lahf
xor
mov
sbb
cmp
and
pop
hlt
repnz
lahf
mov
je
cmpb
xchg
jne
ja
leave
mov
mov
jne
add
outsb
adc
sahf
jae
aam
mov
scas
sahf
push
xor
ss
sbb
mov
add
add
dec
in
mov
lret
lret
scas
lds
mov
or
iret
outsl
dec
jmp
outsl
out
xchg
out
mov
pop
add
fcmovb
or
fstpl
mov
sub
add
mov
sbb
les
iret
js
rorl
push
rcl
scas
push
pop
push
push
mov
lret
jne
mov
xor
fildll
sbb
in
pushf
ror
sub
iret
dec
outsl
add
fmulp
pop
push
jmp
xchg
mov
xchg
out
into
call
sbb
dec
xchg
or
or
pop
mov
nop
add
scas
xor
inc
or
sub
imul
sub
stos
push
and
scas
sub
jns
psrad
test
jmp
jo
into
cmc
push
pop
stos
mov
mov
jl
and
lds
ds
dec
sub
or
mov
xor
sarl
ds
mov
filds
or
lret
or
std
jge
pop
cmp
or
mov
dec
ja
mov
imul
or
jne
mov
mov
rcll
adc
jg
outsl
or
lret
insb
sub
out
sbb
lock
andb
and
add
or
aaa
je
xor
xor
imul
imul
inc
xor
or
and
inc
mov
fcomip
xchg
pushf
fucomip
pop
push
insl
dec
add
iret
popa
aam
cmp
pop
xchg
add
js
scas
dec
movsb
xchg
test
aad
adc
roll
inc
stc
stos
fstpt
inc
mov
test
jb
or
adc
mov
mov
or
adc
adc
mov
adc
mov
inc
or
fisttps
dec
pop
in
mov
scas
mov
dec
stc
or
inc
popa
mov
mov
pop
jns
or
cs
mov
mov
aaa
iret
out
movsb
rol
inc
lret
ret
sub
into
pop
sub
leave
jo
lds
in
ret
jecxz
add
rorl
adc
rcll
cmp
loope
jne
sbb
and
cmp
hlt
movsb
sub
cmp
adc
mov
xor
adc
mov
fidivrl
fmuls
inc
leave
or
push
pusha
or
lods
stc
enter
adc
push
pop
das
mov
pop
je
mov
or
mov
jbe
popa
or
fistps
stos
add
loopne
iret
stc
js
ret
cmpsb
jmp
imull
xchg
xlat
xchg
or
loope
test
dec
add
loopne
push
and
inc
jne
dec
inc
sqrtps
sarl
sub
mov
sub
mov
insl
pop
mov
ret
cmc
inc
out
or
psubusw
push
int
dec
cmp
in
enter
mov
shrb
jmp
mov
rcll
inc
jp
call
add
leave
mov
pop
xor
or
dec
mov
jbe
and
or
clc
mov
cmp
push
add
or
leave
inc
pop
roll
lcall
mov
jns
fdivl
rolb
mov
movl
leave
dec
ret
mov
add
add
or
test
into
cli
out
add
insl
xor
out
or
shll
xor
or
sti
cmp
repz
stos
in
dec
js
push
int3
lock
jle
mov
or
push
or
xor
out
xor
or
cwtl
ret
lret
test
jp
mov
xor
iret
ret
add
in
inc
jge
jmp
or
sbb
loope
pop
push
mov
jmp
xchg
mov
in
enter
push
sarl
jge
leave
add
lods
xchg
pop
call
cld
cmpsl
adc
lods
inc
nop
ret
insl
mov
icebp
mov
add
scas
dec
push
cs
or
lret
sub
mov
push
inc
xchg
lds
inc
cs
sbb
rorb
or
inc
sbb
push
push
xchg
inc
std
add
push
mov
ret
movsb
out
and
hlt
xchg
stos
jg
jmp
pop
push
orl
in
std
jbe
mov
push
outsl
leave
iret
dec
dec
jmp
mov
xchg
adc
aam
test
jo
add
mov
push
xlat
sbb
jp
lret
gs
fchs
dec
scas
test
fnsave
add
or
das
test
scas
add
jp
ljmp
sub
jns
xchg
mov
movsl
std
sub
inc
jae
into
aaa
or
add
add
or
cs
mov
jno
inc
outsl
int
mov
jae
cli
pusha
enter
repnz
sbb
dec
mov
mov
mov
and
xchg
inc
xchg
and
or
xchg
mov
add
sbb
xor
pop
mov
dec
push
loope
mov
scas
or
ret
lret
push
xor
inc
rcrl
pop
test
into
stc
sub
mov
jnp
jae
loope
jo
or
mov
pusha
mov
or
scas
cmp
popa
mov
enter
cmp
sub
fistps
js
mov
sub
shll
rcrb
mov
push
cmp
sbb
lods
lds
push
movsl
pop
imul
das
mov
popa
inc
jg
cmp
pop
push
mov
orb
mov
fdivrl
push
mov
xchg
mov
lods
jmp
jl
dec
lcall
dec
mov
mov
jnp
cmp
stc
lods
int3
ret
pop
js
or
lock
inc
mov
dec
dec
jns
or
xor
pop
mov
or
xchg
es
loope
lock
push
mov
scas
inc
clc
scas
dec
idivb
mov
xchg
or
fstl
jbe
out
lock
xchg
mov
sti
mul
mov
push
mov
mov
xchg
sti
jl
ret
pushl
mov
jne
aad
cltd
jne
push
int
push
or
mov
or
ret
fwait
push
dec
icebp
roll
jmp
add
loope
pusha
dec
xchg
je
or
filds
push
or
idiv
push
or
dec
mov
mov
inc
repnz
or
sarb
stos
aam
push
stc
mov
cli
mov
aam
je
aas
adc
cmpsl
push
lret
pop
stos
xchg
or
mov
xchg
sbb
jmp
repnz
push
sbb
push
jnp
push
mov
mov
xchg
je
mov
xor
fnstenv
mul
mov
add
sti
test
pop
add
or
lret
mov
or
ljmp
xor
lock
fsubrs
in
ss
insl
dec
cmp
mov
cmp
xchg
cmp
out
dec
imul
inc
lock
dec
call
outsl
dec
or
int3
lret
das
fnop
sbb
pushf
mov
divl
insb
ljmp
stos
xor
movsl
push
roll
add
cmp
cmpsl
mov
dec
outsl
lret
jecxz
push
cmc
jl
mov
jmp
lret
adc
out
or
in
int3
in
and
js
leave
or
inc
stos
pop
insb
outsl
inc
insl
cmp
and
add
ror
lock
cmp
dec
pop
or
pop
xchg
mov
or
mov
mov
cmp
jae
adc
lods
jnp
mov
fisttps
mov
mov
movsl
xor
or
xchg
cmp
fxam
in
or
cmp
push
fcmovne
or
push
test
or
stc
or
mov
in
enter
lods
add
add
xor
lods
mov
xor
jecxz
or
pushf
adcb
test
or
rorb
add
in
mov
int
sbb
in
mov
aas
inc
in
jle
dec
push
xchg
or
stos
or
inc
sbb
in
je
fwait
adc
mov
outsb
inc
pop
adcl
cld
int
loop
or
out
imul
int
aaa
mov
cmp
movsb
xchg
ficompl
pop
sbb
inc
in
or
mov
mov
js
xor
add
sbb
in
lret
dec
out
mov
xchg
dec
sahf
jg
pop
dec
sub
or
cltd
lcall
lods
mov
outsb
mov
gs
icebp
inc
jecxz
fwait
movsl
sub
sbb
pop
int
or
fwait
xchg
and
adc
in
lcall
bound
sub
pop
mov
inc
dec
mov
out
flds
lcall
push
pop
imul
adc
mov
dec
test
sbbl
outsl
adc
cmp
lods
inc
cld
cmp
in
push
flds
iret
dec
popa
or
fmull
mov
loope
xchg
dec
int
push
hlt
mov
adc
je
fmuls
int
jge
mov
dec
arpl
adc
flds
scas
mov
lcall
mov
xchg
cmp
in
sub
jbe
shll
ljmp
ret
mov
int
push
xor
adc
fs
xchg
in
jno
daa
add
cmc
fadd
scas
shll
enter
cs
inc
jns
or
or
mov
adc
pop
pop
pop
add
cld
leave
mov
cmp
daa
mov
jbe
pop
lret
mov
cmp
sbb
dec
imul
xor
hlt
in
rcll
daa
fdivrl
cmp
mov
cmpsl
xchg
es
repz
sti
fsubp
sub
jle
pop
and
push
xchg
mov
repnz
jo
jae
fisttpll
inc
out
cmp
arpl
hlt
out
int
jnp
aaa
mov
rolb
icebp
repz
js
cli
int
stc
mov
mov
aaa
xchg
decl
adc
adc
mov
loope
xchg
mov
dec
fdivrp
lret
add
lock
lods
aad
out
pop
inc
icebp
fdivs
incl
pop
sbb
mov
jo
jl
popf
subl
push
fimuls
cmp
sbb
dec
loopne
repz
sub
lret
mov
push
pop
push
mov
sti
sbb
and
fwait
mov
mov
or
cmp
std
mov
push
loopne
sub
pushf
nop
daa
jne
pusha
push
testb
les
enter
sbb
fst
and
sbb
sti
dec
or
dec
push
daa
adc
sub
cmc
pop
cmp
insl
lret
call
dec
dec
pusha
mov
or
cmpsl
aaa
dec
and
cmp
rcr
mov
adc
outsl
add
stos
flds
pushf
sub
mov
push
inc
std
insl
adc
dec
sub
push
lods
outsl
dec
and
stos
add
add
rcll
out
and
sub
scas
outsl
outsb
mov
xchg
pop
dec
stos
xlat
cmp
cld
mov
repnz
xor
jl
dec
jo
scas
divb
cmp
add
adc
sub
xchg
out
sbb
jno
test
dec
xchg
xor
pushf
sti
jb
jno
call
xor
push
and
rolb
dec
iret
stos
jge
sti
insl
les
fcompl
jg
cmp
mov
jo
lods
jno
inc
add
push
sbb
cmpsl
popf
xchg
cmp
iret
or
lea
aaa
mov
and
jl
hlt
pop
fistpll
adc
jo
or
jo
xchg
icebp
adc
add
loop
or
test
jp
fwait
jl
mov
fiaddl
dec
dec
shrl
mov
add
stos
pushf
dec
sub
mov
mov
adc
mov
mov
mov
mov
insl
fldcw
aam
dec
sub
mov
and
dec
sub
sbb
int3
ffree
fcmovne
lock
stc
sub
lret
shlb
push
rclb
lods
mov
push
inc
mov
aas
scas
mov
in
jg
xchg
or
or
jecxz
rcrl
jae
mov
enter
lret
mov
inc
pop
loope
fucom
test
stc
mov
stos
add
jne
mov
rcr
imulb
push
in
call
mov
outsl
sub
mov
stc
xchg
leave
mov
int3
pop
cmp
adc
xchg
aaa
negb
mov
adc
scas
push
mov
call
stc
cmp
stos
or
mov
addl
or
dec
out
fnstenv
mov
clc
mov
les
fnstcw
js
cmp
shrb
rcrb
dec
int3
hlt
sub
or
mov
or
or
inc
mov
xchg
cmp
movsb
or
jbe
ror
fcompl
sbb
adc
daa
popf
adc
push
repnz
inc
aam
sbbb
adc
xchg
add
popf
ja
jp
mov
mov
enter
sub
shll
negl
lret
int3
outsl
enter
repz
or
movb
sub
stc
or
mov
lods
lcall
pop
fisttpl
negl
or
push
pop
pop
outsb
repnz
dec
stc
dec
cmp
inc
int
sub
or
dec
pop
fisttpll
pushf
lret
cmc
pop
sbb
sti
dec
sbb
xchg
and
js
add
mov
sbb
adc
dec
ds
rclb
loopne
dec
add
dec
mov
mov
sbb
dec
cmp
jo
mov
cmpsb
dec
in
nop
adc
fst
jmp
rorl
lods
lods
mov
mov
aas
rcrl
lret
or
mov
icebp
cmp
add
cli
shll
dec
js
aad
fucomi
and
pop
add
adc
popa
dec
in
lods
and
sub
call
roll
or
mov
dec
jb
cmpb
push
repz
xchg
or
cmp
pop
add
popf
and
in
mov
xor
mov
sbb
repnz
sub
sbb
shll
sahf
inc
adc
push
ljmp
jge
stos
fmuls
mov
mov
data16
lock
into
pop
out
fldcw
sub
int3
pop
scas
mov
pop
fildl
stos
or
cmp
int
lret
test
fwait
mov
add
pop
daa
cmp
jl
sti
xlat
cmp
inc
hlt
fdivrs
aaa
cmpsl
sbb
lret
sarl
aas
sub
fnstenv
pop
inc
xchg
jnp
lods
cmpsb
or
test
roll
mov
call
jl
jmp
cld
inc
es
and
add
mov
jmp
icebp
add
test
jmp
arpl
imul
cmp
rcrl
into
add
xor
mov
pop
or
lock
xchg
in
sub
leave
leave
sbb
mov
dec
repz
add
mov
or
add
shrl
lds
push
cmc
pop
or
addr16
jo
adc
cmc
mov
ret
loop
add
addps
mov
jl
xchg
lret
fwait
xlat
dec
hlt
push
in
jbe
mov
xorl
jle
xchg
mov
sbb
pushf
add
fisttps
stos
movsb
rcrl
mov
stos
cmc
addr16
sub
cmc
or
xor
leave
stc
test
inc
bound
flds
mov
mov
int
mov
lods
jbe
hlt
add
add
aam
inc
sbb
pop
xchg
or
add
bound
scas
mov
je
testb
aaa
inc
testb
or
cmc
mov
mov
mov
out
ljmp
faddl
adc
loope
roll
sbb
adc
adc
adc
jge
xchg
jge
jge
jge
jge
jge
jge
jge
ret
xchg
fstps
pop
push
xchg
pop
testb
push
movsl
jmp
leave
test
and
pop
mov
add
mov
out
test
push
les
xchg
lea
xor
add
decl
inc
mov
cwtl
imulb
push
in
in
shlb
leave
fstpt
lock
inc
rolb
cmp
jo
testl
jecxz
mov
mov
imulb
jge
imul
stos
and
in
add
aas
je
or
adc
mov
std
stos
push
insl
das
cmp
push
inc
lock
push
sub
push
or
shll
stos
adc
pop
hlt
into
fdivs
incb
xor
adc
or
scas
cmp
fdivs
jle
decb
mov
rolb
mov
xchg
or
cld
jne
fcomps
mov
pop
and
lods
jmp
or
xchg
add
xchg
cmp
daa
or
and
not
imul
aad
sti
in
clc
pop
jmp
or
sahf
or
scas
add
add
sub
lods
testb
sar
sbb
xor
or
add
xchg
sbb
add
lahf
test
jae
sub
nop
test
iret
cwtl
fbld
insl
clc
popf
clc
push
push
test
sub
shr
jne
lret
push
pop
or
nop
insb
out
scas
jl
inc
mov
and
jbe
out
frstor
cli
repz
enter
mov
fld
mov
and
in
add
or
dec
push
lds
ffreep
inc
scas
nop
mov
dec
enter
divb
sub
add
scas
mov
sbb
stos
cmp
scas
xchg
lea
inc
or
sbb
inc
sub
rorl
jne
or
inc
sub
aas
rorb
lods
mov
inc
in
outsl
arpl
shrl
dec
nop
or
cmpsb
loopne,pt
addr16
lret
testl
push
icebp
xor
mov
xchg
or
lret
loop
xchg
add
mov
sub
lcall
or
call
ss
cmpb
dec
cld
adc
loope
out
push
mov
fldenv
mov
cli
or
adc
test
repnz
stos
jo
ss
loope
std
js
pop
movsl
adc
or
inc
inc
movsl
in
rcrl
aaa
pop
and
mov
jmp
dec
mov
rcr
cmp
jecxz
sbb
iret
mov
mov
jl
sbb
mov
negl
xlat
std
push
pop
mov
sbb
mov
or
mov
jns
push
sbb
mov
inc
jl
scas
neg
sub
testl
jmp
adc
or
jno
movsb
out
or
inc
push
icebp
stos
cld
mov
insl
mov
rolb
insl
lds
sub
mov
push
or
cs
jbe
jae
cld
mov
push
aam
pop
xor
xchg
std
iret
add
push
adc
jl
lock
sbb
daa
fstl
or
sbb
lret
jl
cmp
movsl
ja
notb
ds
sbb
sub
test
mov
les
repnz
jge
sbb
xchg
mov
mov
fcoms
nop
das
add
push
sub
in
lcall
lods
lea
les
add
daa
mov
jp
jmp
in
movsl
push
rolb
xor
mov
mov
xchg
dec
push
sbb
xchg
je
in
pushf
arpl
inc
lds
clc
add
cld
cmp
push
pop
mov
loopne
js
push
pop
les
pop
xchg
jl
in
les
mov
pop
lret
sub
lods
dec
mov
xor
sarl
stos
cwtl
jbe
rclb
add
js
je,pt
and
mov
mov
mov
mov
or
xchg
push
jl
insb
js
aaa
jl
jge
push
popa
stc
int3
pushf
je
xchg
mov
cmc
push
mov
imul
jbe
testb
lock
jmp
std
push
jns
pop
push
shrl
rcll
jnp
dec
in
lahf
push
call
scas
dec
outsb
neg
int3
dec
icebp
cmpl
cmp
repnz
orb
jne
daa
test
movl
dec
xchg
fs
aas
in
add
cld
add
out
or
pop
lea
mov
sbb
cmc
imul
cmp
dec
jnp
icebp
xchg
jle
std
sti
mov
sub
imul
xor
cmp
test
push
mov
adc
iret
push
xchg
into
jmp
xchg
pop
inc
dec
xor
loopne
imul
sti
rcrb
mov
mov
pusha
fnstsw
imul
xor
sbbl
ja
lahf
xor
fcoms
cmpsb
das
jnp
sub
xchg
or
adc
dec
push
xlat
sbb
cmp
dec
insl
add
pop
shl
call
fnstcw
out
mov
cmp
cmp
dec
imull
xchg
cld
shlb
add
or
pop
in
outsb
pop
into
out
rorb
scas
xchg
nop
push
out
pop
enter
arpl
or
mov
imul
cwtl
add
cmp
fwait
jl,pn
outsl
in
decl
sbb
cmp
push
or
dec
stc
std
xchg
notl
xor
cld
std
lds
push
stc
push
ss
into
in
xchg
pop
xchg
aas
lcall
mov
fwait
add
or
out
inc
mov
jp
aad
out
dec
sub
sbb
jle
pop
adcl
cltd
dec
lods
ss
cmpsl
xor
sti
mov
fs
add
dec
jns
orb
sub
insl
test
sti
nop
out
popf
sti
jns
int3
dec
push
test
aad
mov
add
inc
in
pop
cld
sub
cmpsb
mov
mov
sub
lods
push
sub
sbb
sbb
cmp
push
shll
xlat
lods
shrl
test
mov
out
sub
cmpsl
leave
push
daa
pop
movsl
and
push
xchg
and
popf
icebp
inc
shll
jo
mov
std
repz
push
les
lock
xlat
dec
cld
cs
xlat
vcvtsi2ssl
mov
aas
or
push
mov
imul
mov
outsl
or
shrl
add
jl
test
aam
dec
orl
inc
test
inc
inc
std
add
movsb
scas
or
jl
inc
jg
dec
jp
cmpsb
mov
or
inc
or
add
dec
pop
push
add
data16
jne
sarl
fld
adc
nop
pop
pusha
call
mov
sti
inc
push
stc
bound
lds
lret
aad
mov
mov
into
pop
out
sub
adc
imul
testb
iret
and
mov
rcll
push
hlt
hlt
in
iret
lcall
shlb
shll
testl
outsb
outsl
jecxz
daa
cmc
push
mov
push
push
xchg
mov
mov
popa
fstpt
movsl
sub
addb
sbb
add
mov
cmpsb
stc
subl
or
jbe
mov
mov
iret
inc
inc
arpl
xchg
cmp
out
or
dec
inc
fmulp
or
mov
push
xchg
mov
lret
xor
imul
and
or
or
stc
mov
mov
fiaddl
push
pop
dec
in
imul
xchg
mov
or
bound
js
jmp
jge
jp
add
lret
xchg
xor
add
sub
add
idivb
jmp
lock
dec
stc
add
mov
lds
xchg
xchg
int3
dec
dec
jbe
pop
lret
fidivrs
dec
cmp
pop
iret
bound
in
lods
lods
and
les
inc
or
ds
les
mov
mov
xchg
xchg
scas
xchg
fsubs
shl
mov
movsb
inc
es
out
lea
mov
fmuls
pop
aam
jg
lcall
arpl
cli
lea
push
push
jmp
test
sub
cmp
int3
imul
sub
xchg
mov
mov
int3
jmp
cwtl
dec
cwtl
test
nop
inc
nop
mov
pop
sbb
pop
mov
push
test
mov
iret
adc
fisttpl
or
adc
subb
orl
ljmp
in
adc
fnstcw
xchg
mov
cmp
dec
xchg
je
int
inc
ss
data16
inc
mov
aas
mov
pop
sar
stos
je
es
lods
xchg
fsubrp
stc
push
mov
jge
mov
pop
testb
orb
test
int3
dec
pop
sub
pop
mov
in
or
add
or
das
mov
bound
or
xor
sub
shll
mov
inc
lods
cmp
rcr
or
jg
test
in
enter
dec
nop
adc
stc
push
or
and
sbb
je
mov
push
mov
lock
pop
int
mov
jmp
pop
mov
or
pushf
insl
std
cwtl
pop
int3
cmp
insb
pushf
out
mov
in
push
mov
mov
add
mov
mov
fmuls
or
icebp
mov
dec
ud1
push
lret
or
add
adc
fisttps
mov
dec
pop
stc
repnz
or
ss
push
add
mov
lret
ret
lret
mov
cmp
mov
cld
or
add
ss
cmpsl
jl
enter
std
dec
or
mov
fcmovnbe
or
mov
cmp
add
inc
shll
xlat
bound
in
jns
add
add
ret
pmuludq
js
mov
sub
gs
mov
gs
and
mov
scas
push
xchg
jmp
dec
mov
cld
fmuls
sarl
or
mov
mov
call
das
jmp
dec
jo
xor
jnp
or
jne
data16
add
lods
decl
xchg
adc
mov
addl
cli
je
js
xchg
loope
rcr
js
data16
stc
push
je
popa
lea
out
and
dec
test
mov
in
xchg
mov
mov
push
jne
dec
fs
lea
pop
sub
mov
and
ljmp
lcall
xchg
xchg
stos
js
mov
les
gs
loopne
cmp
pop
mov
sub
jmp
mov
fistpl
mov
lret
adc
add
mov
orl
xchg
mov
adc
adc
push
mov
in
add
clc
addb
lret
adc
imul
push
movl
roll
xchg
xlat
pop
adc
mov
fiaddl
cli
or
xor
jo
xor
pop
push
leave
inc
mov
xor
sub
add
mov
or
dec
out
jecxz
scas
lret
lahf
dec
jo
adc
lahf
push
lret
outsl
or
adc
sub
orl
jns
dec
in
gs
mov
dec
jl
dec
mov
or
adc
inc
push
cmpsl
or
xchg
in
ss
ljmp
sbb
pop
sub
mov
and
xor
and
mov
scas
xchg
or
push
fbld
ret
mov
in
mov
shrb
test
je
inc
test
mov
dec
mov
adc
loop
sbb
add
mov
sub
sbb
cld
dec
push
add
pusha
shl
mov
scas
xor
sti
subl
lcall
sarb
lock
scas
adc
mov
cmp
stos
pop
or
dec
mul
xor
lret
fidivrl
test
dec
dec
jle
dec
stc
enter
int3
jns
dec
data16
dec
bound
push
pusha
jle
xchg
or
dec
in
inc
cmpxchg
pop
cli
xchg
in
cltd
cmpsb
rorl
mov
sub
add
test
mov
int3
scas
mov
lods
rcl
lds
xchg
fscale
sub
rorb
dec
pop
sarb
in
mov
mov
cmpsl
xor
adc
dec
sub
push
pop
jmp
clc
call
adc
jns
lcall
mov
xor
adc
jno
mov
rcrl
lods
packsswb
iret
dec
movsb
adc
xchg
inc
mov
clc
stc
inc
sbb
push
dec
sbb
cmp
pop
aad
insl
stc
sbbl
out
test
mov
aaa
aam
dec
test
iret
sbb
stos
push
addr16
sbb
mov
pop
clc
sub
fsubr
or
addr16
xlat
or
jns
cmp
loope
pushf
jmp
mov
mov
scas
in
add
rorl
scas
inc
shl
xor
dec
cmovo
sbb
mov
pop
cwtl
push
insl
pop
or
add
or
imul
push
pop
std
cmp
xor
jl
inc
lret
outsb
dec
xchg
loop
ret
jecxz
movsb
cltd
rol
jle
mov
mov
inc
in
lods
sarb
insl
mov
inc
adc
call
pop
mov
inc
fdiv
lret
pop
pop
scas
jge
lods
inc
test
mov
xchg
and
das
push
testb
mov
in
rorl
lahf
push
fstpt
test
mov
or
jp
mov
ret
rcrl
push
out
out
pop
cmp
xchg
mov
cmc
cmp
stc
js
scas
pop
xor
and
dec
jbe
lret
iret
insb
jb
dec
inc
fisubrs
xchg
mov
lea
dec
cld
push
fsubl
push
arpl
stc
and
fdivrl
inc
or
jnp
xor
imul
pusha
int3
loop
xor
fisubl
cmp
popa
lock
cmp
clc
jns
lds
loop
cld
in
sarl
xor
add
or
xchg
push
dec
adc
lods
jb
mov
dec
rcrl
xor
and
dec
seta
sbb
cmp
push
testb
repz
hlt
aaa
xchg
ret
std
xchg
repz
imul
xchg
stc
inc
orps
stc
sbb
mov
xchg
mov
into
das
mov
xor
adc
push
movsl
xor
or
int3
adc
test
in
add
in
jge
bound
cmp
jbe
lds
out
inc
fildll
mov
repz
cmpsl
hlt
ret
jmp
add
mov
mov
jecxz
mov
ja
es
repnz
movsb
mov
ror
lock
adc
add
les
add
rolb
int3
sub
mov
dec
inc
sbb
pop
test
cmp
je
repz
adc
std
je
std
dec
xchg
sub
sti
push
stos
popf
ja
ret
mov
jne
inc
pop
jne
inc
sbb
popa
loope
mov
or
dec
cmpsl
fnsave
sub
adc
cmpsl
stos
cmpsb
lret
pop
mov
add
shll
cmp
call
mov
xchg
pusha
inc
std
test
mov
loope
jmp
jne
inc
mov
mov
stc
pop
stos
fs
push
cmpsl
dec
sbb
push
push
add
lock
les
mov
add
ja
or
fwait
inc
or
shll
cmpsb
test
xchg
addl
or
mov
shrl
jmp
jae
nop
xchg
push
in
popf
cmp
dec
scas
es
lods
adc
ss
push
les
push
xchg
ja
arpl
pop
mov
int3
cmp
sbbl
shl
mov
repnz
call
add
inc
dec
pop
arpl
xchg
ror
nop
mov
xorl
ja
call
hlt
pop
test
adc
add
mov
pop
jg
push
loopne
inc
pop
sbb
and
cwtl
xchg
sarb
dec
movsl
sbb
push
sbb
loop
push
test
inc
push
jnp
add
mov
in
in
testl
mov
dec
cmp
clc
add
ds
scas
xchg
xchg
shlb
stos
stos
adc
sub
jbe
push
xor
jnp
mov
cwtl
mov
jle
push
and
iret
in
fs
ret
scas
push
es
and
ret
test
test
cmpb
clc
ret
fldl
sub
adc
jb
ret
sbb
dec
or
mov
repz
cli
or
jne
push
adc
lret
sub
jmp
adc
movsb
ret
pop
adc
inc
or
mov
scas
lret
mov
dec
push
out
test
push
mov
in
lods
decb
cltd
add
sbb
mov
ds
cmpsb
or
lock
cmp
lcall
jns
std
loopne
jne
add
mov
mov
dec
loope
inc
xchg
test
pop
cmpsb
xchg
mov
cmp
stos
xchg
xor
movd
add
dec
cmp
mov
shll
sub
les
mov
pusha
or
scas
dec
and
hlt
fsubr
jbe
xchg
insb
rcr
push
pushf
subb
jo
sbbl
adc
lret
sub
jns
pop
lea
adc
push
sbb
xchg
lcall
jns
inc
fstpl
or
sub
dec
sub
add
mov
std
push
outsl
shrb
into
das
and
push
pushf
adc
in
sbb
dec
test
pop
adc
adc
sbb
pop
outsb
clc
dec
mov
dec
adc
test
mov
inc
mov
lds
inc
clc
or
mov
add
outsb
push
pop
or
sti
push
outsl
mov
mov
jo
test
pop
insl
shlb
fbld
outsb
hlt
loope
gs
mov
sub
or
ficompl
daa
out
mov
dec
pop
int
cmpb
in
lock
sub
shrb
xchg
sar
cmp
add
mov
add
sti
inc
loope
pop
fnstsw
pushf
xchg
mov
cwtl
sub
jecxz
and
mov
or
or
jle
lret
insb
adc
dec
and
add
clc
jl
jp
test
pop
in
inc
xor
repz
arpl
scas
inc
mov
xchg
xchg
mov
repnz
or
into
mov
cmpb
or
cld
jmp
shl
dec
sub
add
xor
mov
xor
xchg
test
into
jecxz
sbb
ljmp
repnz
cmp
mov
repz
mov
sub
stc
jp
xor
adc
in
mov
adc
imul
jecxz
cltd
lds
fsubrs
mov
lea
fiadds
fcompl
fisttps
mov
scas
shlb
adcb
test
push
movsb
pop
mov
inc
and
ret
std
in
inc
ds
jmp
xchg
mov
pop
fists
out
je
and
das
jno
in
xlat
xchg
mov
outsl
push
out
jmp
jnp
lods
sbb
mov
inc
mov
xor
test
in
push
adc
lahf
pusha
pop
sub
cs
mov
movsb
lods
andb
mov
dec
clc
xor
adc
cmp
and
jne
adc
std
xchg
pusha
jae
cmpsl
mov
popa
addr16
insb
mov
fldenv
jl
fsubr
aaa
mov
mov
mov
test
test
mov
into
clc
pop
pop
inc
or
jp
jae
gs
mov
xlat
or
out
ljmp
neg
int3
pop
lret
iret
cmp
scas
dec
or
xchg
or
test
xor
xchg
test
inc
cli
imul
rcrl
lret
xor
dec
lcall
push
cmp
loope
dec
sarl
push
loopne
mov
mov
in
and
in
add
movsb
mov
mov
xchg
imul
fucom
dec
loop
xor
mov
pop
add
es
or
je
enter
mov
cmp
xor
xor
cmc
inc
push
xchg
xor
jg
aaa
fcmovnb
xor
add
fildll
je
das
or
lret
xor
jno
in
mov
cmpsl
or
or
mov
xchg
js
out
loop
hlt
hlt
aad
push
or
jo
cmpsb
mov
repz
or
jecxz
int3
repnz
out
outsl
cld
das
mov
aam
arpl
icebp
mov
xor
or
movsb
bound
repz
pusha
add
mov
or
mov
xchg
cwtl
inc
xchg
test
ret
repnz
je
or
div
mov
or
mov
ljmp
or
pop
add
jbe
or
add
lock
push
call
or
ds
sbb
cmp
or
subb
dec
repz
add
mov
in
add
leave
sbb
lcall
lea
xlat
in
jl
cmp
jno
inc
lret
hlt
fcomps
rcr
push
or
and
mov
mov
sbb
cwtl
or
cltd
dec
inc
out
xlat
popa
dec
jmp
lret
fisttps
lock
inc
add
ljmp
or
fldl
lret
mov
dec
xor
xor
xor
mov
lock
push
lcall
mov
repnz
fidivs
fidivrs
fcompl
push
loop
fs
insb
add
insl
insb
lods
lock
or
sub
movsl
adc
aaa
push
lods
loop
flds
jle
stos
cld
pop
or
push
je
out
sub
lock
sub
fs
sbb
xchg
icebp
inc
insb
icebp
xlat
push
or
cmp
or
lock
jmp
ss
mov
cmp
add
and
push
or
ds
xchg
add
test
mov
enter
lret
into
out
iret
mov
xor
shll
daa
scas
pop
xor
sbb
test
or
jecxz
scas
mov
andb
notb
hlt
push
push
aad
sbb
adc
iret
fwait
movsb
aam
inc
adc
into
fisubrs
jecxz
mov
pop
pusha
dec
test
stos
popf
rcl
push
call
inc
aaa
cltd
jmp
clc
push
push
sti
shll
push
lods
adc
fisttpll
rol
lret
jo
mov
fadd
adc
aaa
test
inc
mov
xor
jne
inc
mov
dec
dec
into
cmp
dec
jmp
jmp
inc
xor
jmp
dec
addr16
pop
mov
sub
mov
int
sub
add
adc
les
cmp
repz
mov
out
mov
add
insl
or
mov
mov
pop
dec
mov
int3
mov
test
mov
add
cmpsb
mov
mov
fmull
jg
mov
mov
cmp
ds
sub
mov
mov
out
repz
or
mov
cld
or
in
movsl
mov
popa
lret
pop
test
test
rorb
push
pop
sbb
jl
jmp
cld
mov
enter
jmp
jnp
fwait
pusha
cmp
mov
ret
mov
or
pop
inc
or
in
mov
imul
in
pop
adc
or
ret
mov
sub
or
leave
test
dec
or
dec
sti
or
inc
pop
stos
mov
in
lds
mov
fbld
xorb
xor
test
cld
fcoml
test
fs
sti
subb
jno
sub
sti
pusha
test
test
cld
xchg
dec
stos
dec
cmpsb
cwtl
pop
lret
jle
sti
sti
ja
hlt
test
in
imul
push
cld
lret
xchg
jb
inc
fdivrl
lea
test
xchg
lds
jns
clc
pop
cltd
fs
js
fldpi
or
sbb
lock
jmp
fcmovnu
inc
xchg
xchg
or
in
jnp
les
or
pop
jg
xchg
in
enter
add
xor
dec
or
in
jnp
les
or
jmp
fmul
test
enter
in
jl
inc
inc
or
cld
test
decb
leave
ljmp
jmp
adc
sti
or
jl
cli
enter
cld
stc
inc
repz
pop
inc
in
jl
inc
or
test
jl
cmc
cld
test
je
add
hlt
cld
test
jae
add
xor
jl
inc
repz
repz
jecxz
movsb
shll
clc
cmc
in
jns
or
clc
or
xchg
dec
or
mov
inc
inc
subb
or
std
leave
test
add
or
jle
movsb
out
jle
js
mov
scas
xlat
lcall
push
mov
jb
rorb
dec
cld
dec
mov
mov
add
mov
push
xchg
mov
xchg
dec
lret
dec
or
sahf
pop
ret
cmpsb
rclb
fisubrs
test
or
xchg
push
sbb
adc
fiadds
jb
dec
mov
scas
stc
push
xchg
pop
jmp
cmpsb
aad
aam
xlat
pop
les
cmp
xlat
out
add
test
pop
or
testb
inc
cwtl
push
stos
mov
cmpl
or
test
sbb
out
sbb
jns
adc
out
call
xchg
cs
mov
dec
dec
jne
loope
jmp
cmp
pusha
into
cwtl
fisttps
std
in
scas
mov
ljmp
insb
pop
adcb
add
xchg
scas
push
jecxz
inc
cmp
lret
xchg
sub
notl
scas
sub
mov
pop
sarl
sbb
lret
adc
test
in
pop
pop
pop
cmpsl
ffreep
sub
fs
daa
or
push
fcmove
mov
or
je
xor
hlt
mov
cmp
xor
jno
xor
cmp
cmp
ja
aaa
mov
cmp
ss
mov
cmp
test
fstpt
mov
cmp
imul
jns
cmp
add
mov
cmp
inc
mov
aam
jo
mov
cmp
inc
mov
aam
jo
mov
cmp
ret
test
fildl
add
mov
clts
shrl
inc
inc
test
fcmovne
aam
jo
mov
cmp
fcmovnb
aam
jo
mov
cmp
inc
int3
test
sbb
or
cmp
pop
cld
mov
sbb
or
fnstsw
ja
dec
pop
mov
inc
jl
outsl
cmpsb
mov
scas
push
clc
or
add
orb
mov
rorl
cld
mov
mov
mov
pop
fsubrs
test
jmp
mov
adc
pop
sub
cld
xlat
cld
scas
xor
inc
fcomip
push
mul
add
jge
mov
xchg
popa
call
test
mov
aaa
mov
cmp
je
clc
rcrb
jecxz
jo
fmull
imulb
push
pushf
cli
mov
push
das
dec
push
inc
jl
scas
xor
filds
mov
cmp
add
in
sti
or
stos
pop
cmp
jno
outsb
mov
xor
imul
add
scas
push
js
add
or
xlat
imull
sti
dec
mov
push
fdivr
aaa
in
cmp
aam
jne
add
repz
ds
stc
mov
jno
popl
and
jo
add
xor
push
push
mov
fdivs
jl
jo
scas
das
mov
aaa
hlt
rcrb
outsb
adcb
lock
add
mov
mov
xor
scas
jl
das
mov
add
jge
xor
mov
idivb
and
mov
shrl
pop
hlt
leave
mov
inc
idivb
divl
jmp
jne
scas
addr16
clc
imul
sti
xlat
cld
mov
jo
cmp
jbe
xchg
repz
js
sub
in
out
rolb
xor
out
out
movsb
popf
mov
loop
repnz
outsl
mov
mov
mov
cs
stc
pop
add
cmp
inc
hlt
repz
clc
xor
call
mov
cmpsb
or
jno
xor
int3
mov
imul
scas
rolb
js
push
sahf
fnsetpm(287
push
gs
ja
or
jnp
jo
mov
nop
xor
iret
xchg
push
hlt
sbb
outsb
pop
push
std
clc
cli
mov
mov
mov
aam
or
fadds
repnz
scas
push
scas
mov
data16
lock
jo
mov
lahf
mov
cmc
call
aad
imul
mov
clc
push
xor
adc
loope
je
incb
mov
sbb
jb
idivl
ja
cwtl
sbb
js
shl
cmp
xor
push
add
mov
fcoms
sbb
testb
pusha
mov
movl
les
jge
in
add
mov
aam
and
rcll
sarb
add
daa
fsubp
jmp
lret
cmpsl
rorl
xor
push
xchg
fisubl
fisubl
ficompl
jle
jbe
fsubr
clc
scas
jo
cld
xor
xlat
mov
scas
loope
stos
pop
lcall
mov
mov
neg
jns
add
and
add
xor
cmp
les
out
jge
jl
jmp
jmp
aam
ret
testl
sbb
inc
enter
hlt
jno
jo
in
pop
out
fdiv
cmp
scas
test
push
add
fldt
mov
pop
imul
fistl
iret
add
or
iret
shl
sti
jecxz
add
ja
mov
mov
xchg
repz
sbb
and
push
lahf
lods
ror
jae
stc
push
cwtl
jmp
add
in
mov
js
push
stc
mov
jmp
xchg
push
mov
xor
jmp
add
xchg
add
lret
stc
fiadds
pop
clc
xor
cli
xor
jns
xor
sti
xor
loopne
out
test
push
test
xchg
repnz
cmp
sub
sti
push
dec
inc
mov
xor
sub
leave
dec
scas
adc
clc
sub
inc
pop
repz
shlb
xor
xchg
movsl
outsl
addr16
in
mov
sub
xor
loop
inc
jmp
shll
mov
mov
mov
push
mov
mov
push
test
outsb
leave
sub
or
pushf
lock
loope
or
lret
in
stc
roll
push
dec
lret
stc
pop
outsb
sahf
xchg
int
in
ljmp
mov
or
stos
mov
cmp
int3
xor
rcr
jne
xchg
mov
push
lods
cmp
leave
les
cld
cmpsb
jo
enter
in
cmp
fildl
cld
mov
dec
testl
and
xor
ljmp
add
push
adc
fsubl
or
mov
stos
xlat
jl
cs
rcr
add
loopne
cld
std
in
loopne
pop
or
or
aaa
jmp
std
mov
adc
rolb
std
ljmp
pop
add
aam
or
scas
xlat
jle
fnstcw
aad
mov
sti
add
jnp
xchg
add
push
xchg
xchg
add
clc
sti
in
mov
jl
ret
fistpl
or
or
hlt
ret
inc
inc
or
shl
or
lock
jns
ret
das
xlat
ret
push
daa
fnsave
mov
cmc
pop
pusha
stos
hlt
jmp
sahf
push
add
in
andl
mov
lret
pop
daa
mov
test
subl
push
data16
enter
aam
mov
sbb
repnz
dec
leave
clc
pop
mov
das
push
xor
adc
push
cmp
repz
jnp
xor
ja
or
sub
lock
leave
mov
jecxz
cmp
movsb
iret
std
les
mov
xor
pusha
jp
or
fmuls
fidivrs
mov
ds
ret
pop
jg
pop
aas
int3
cmpsb
test
testb
push
sub
fiadds
or
cltd
in
xor
in
std
xor
je
fimuls
or
rcrl
repnz
fisttpll
fidivrs
shl
sbb
jmp
adc
or
adc
inc
push
cmpsl
test
dec
pop
in
pop
add
lods
push
inc
dec
ret
sub
sub
inc
xor
int3
dec
mov
lret
push
sbb
mov
int3
dec
lock
inc
pushf
lahf
dec
cmpb
mov
sub
enter
sbb
addb
movsl
jbe
mov
loope
mov
aaa
shl
sti
jnp
test
or
lea
pop
or
cli
push
sub
or
adc
sub
mov
je
add
xchg
je
jno
dec
or
clc
lods
arpl
cmpsl
rolb
dec
mov
add
popf
push
stos
jecxz
dec
or
jl
aaa
insb
iret
xor
aaa
add
out
add
cltd
dec
out
leave
mov
iret
lods
add
les
inc
sub
mov
test
out
add
pop
pop
push
loopne
add
cmp
test
pop
mov
sbb
cmpsl
dec
and
add
test
orb
mov
incb
rcr
push
stc
mov
ljmp
in
in
xchg
add
jl
sub
adc
outsl
movsb
leave
mov
test
jo
sbb
sub
xlat
jmp
pop
js
test
idiv
sub
add
or
sbb
jmp
jmp
or
fs
outsb
add
jns
add
sub
gs
xorl
xchg
jns
inc
stc
pop
and
cld
sub
lcall
bound
mov
sub
iret
add
out
out
dec
shld
jmp
xchg
sbb
cltd
shrl
pop
adc
pushl
lcall
lock
stos
mov
js
or
jnp
adc
add
aam
sbb
sub
addl
repnz
mov
pop
cmp
cmp
xchg
jl
les
jle
sub
sub
fdivr
aam
and
jo
sub
jmp
into
dec
cmpsl
andl
stos
xor
or
xor
xlat
add
add
add
mov
mov
xlat
push
jne
iret
cmpb
inc
cmp
dec
cmp
les
lret
mov
andb
mov
cltd
lea
ret
dec
in
insl
or
scas
leave
inc
je
std
sbb
jns
clc
cmc
cmp
test
imul
cmp
add
std
insb
stos
cmc
loopne
jp
leave
dec
xor
and
add
mulb
clc
in
inc
push
push
je
pop
test
jmp
lock
shr
mov
sbb
loope
sub
jns
add
nop
and
jnp
xchg
out
lods
sub
push
pushf
sbb
lds
rorl
sbbl
out
shll
dec
insb
pop
adc
mov
pushf
dec
cmpsl
sub
test
js
in
scas
and
rcl
pop
or
imul
repz
pop
mov
xchg
cli
mov
lret
cmp
rcl
andb
and
fwait
cli
add
dec
mov
fdivl
mov
xchg
cmp
fmull
pop
fstpl
push
lret
mul
repnz
pop
push
arpl
inc
clc
sub
push
loopne
sarb
pop
or
xor
scas
fsubrp
ds
out
idivl
jg
jmp
aaa
and
cld
or
ja
movb
test
mov
and
jno
cmpsb
xchg
xchg
loopne
cmp
imul
daa
aaa
lret
nop
jmp
dec
add
sbb
cmp
aas
fists
in
adc
cmp
xorb
scas
scas
add
mov
in
xor
xor
add
out
daa
xlat
popf
repz
mov
xor
insl
andl
rcrb
cld
mov
rcrl
iret
jnp
cld
das
and
rcll
mov
arpl
repz
mov
mov
cs
insb
insl
xorl
clc
fwait
std
cwtl
dec
mov
lds
fcomps
or
fiaddl
imul
cmp
cmpsl
hlt
movsb
ret
cmp
enter
enter
cld
arpl
jecxz
mov
cmpsb
jns
or
push
mov
movsb
or
enter
ja
int3
mov
xorb
sbb
stos
pop
mov
jl
add
cmp
cmpsl
mov
ljmp
or
and
push
cmpsb
jb
fmul
repz
push
mov
adcb
mov
outsb
les
mov
popa
push
outsl
test
lret
jle
into
jbe
fcoml
lret
cs
lahf
in
ss
shlb
mov
roll
pop
stc
mov
or
fiaddl
push
pop
jmp
test
pop
xor
pop
xor
inc
xor
mov
inc
sti
sub
inc
insb
test
out
pushf
pop
sahf
mov
pop
je
pop
mov
adc
out
shl
inc
lds
stos
push
daa
sbb
ja
enter
sbb
cmp
jg
leave
decl
jmp
xor
ljmp
ds
lret
int
lret
pop
jbe
xchg
iret
mov
out
and
in
stc
cmp
adc
push
mov
mov
inc
ret
inc
jl
push
inc
dec
add
test
jns
scas
sub
mov
push
or
bound
mov
lds
mov
arpl
pop
jle
or
stc
dec
xchg
pop
mov
pushf
stos
lcall
or
pop
mov
or
jle
cld
and
xchg
cmpsb
sub
mov
add
jmp
cmovns
std
ja
std
inc
and
inc
mov
enter
lsl
dec
les
dec
adc
rcrl
test
push
scas
jb
xlat
leave
or
pop
sti
inc
sar
jmp
dec
stos
jnp
stos
fsubrl
ret
mov
lret
jno
lea
push
cmp
xor
pop
xchg
jnp
test
or
add
out
rep
sub
and
ret
jmp
mov
push
jge
ret
pop
fildl
hlt
add
popf
adc
add
in
and
pop
pop
mov
jl
fisttpl
addr16
mov
fwait
xlat
out
or
sub
outsb
pop
repnz
push
fildl
mov
in
les
and
lret
lock
or
cmp
ljmp
rcr
xlat
pop
cmp
int3
push
sub
testb
xchg
adc
ret
out
or
or
cmp
push
xchg
sti
ret
pop
imulb
int3
sbb
xchg
lcall
or
mov
cmc
adc
cltd
push
in
sti
subl
in
cld
in
shrb
or
dec
add
mov
jecxz
sarb
insl
mov
enter
jbe
mov
js
inc
shr
shll
pop
outsl
jbe,pt
mov
out
xor
cmp
insb
fsubr
dec
das
ss
xchg
dec
mov
outsb
fwait
pop
insb
or
mov
xor
sbb
dec
scas
ds
lock
pop
adc
fcmovb
stos
push
pop
cmp
or
xchg
addr16
enter
sub
adc
or
pop
ss
iret
mov
cmpsl
incb
repnz
rolb
sbb
rcrl
and
lea
pop
dec
in
jne
shlb
pop
jb
pop
inc
fistl
repz
cmp
insl
in
sub
scas
stos
sub
inc
or
negl
xchg
push
xchg
sbb
gs
dec
scas
or
mov
stos
imul
sub
mov
in
daa
mov
fldpi
mov
cmp
sub
cmp
add
sbb
je
outsb
stos
jno
rcl
in
lock
mov
mov
mov
shrb
dec
xor
je
test
test
iret
stos
push
pop
and
imul
sti
push
shl
xchg
sti
iret
mov
clc
or
dec
dec
pop
cmpsb
js
fmul
adc
sarl
xchg
sbb
mov
addr16
pushf
repz
faddl
jbe
adc
dec
mov
xor
and
test
pop
or
lret
fwait
push
mov
jg
scas
jp
add
jge
sti
stos
ljmp
inc
popa
pop
cwtl
aam
ja
fildl
ret
fcomi
pusha
mov
mov
jle
fs
and
mov
lret
xchg
inc
addr16
leave
out
dec
mov
xchg
jp
jp
push
scas
xchg
rol
cwtl
cmpsl
jecxz
scas
jl
dec
mov
mov
cmp
shrl
aad
test
pop
xchg
lods
cs
aas
testl
jmp
cmpsl
aad
fmull
mov
in
in
repnz
mov
cli
in
les
pushl
rorb
int3
jb
clc
push
mov
lods
std
int
jle
mov
xchg
std
into
dec
sub
sar
push
pop
xor
cmpsl
pop
sar
pop
sub
subb
mov
jp
or
movsb
inc
or
in
les
cmp
mov
xorb
xchg
aam
mov
cmp
push
add
sub
add
ja
sti
inc
scas
cli
into
pop
jnp
decl
mov
push
sbb
jnp
or
loope
aad
sub
dec
call
mov
hlt
sti
fidivs
xchg
dec
mov
jl
pusha
or
out
push
mov
in
add
in
xlat
pop
sbb
fadd
jns
in
inc
pop
xchg
enter
leave
test
cmp
popa
xchg
mov
insl
loop
pusha
roll
pop
shll
pop
adc
push
sub
mov
jnp
fcom
jbe
sbb
popf
xchg
fld
or
dec
push
add
adc
xor
or
jae
icebp
imul
xchg
je
sub
fdivr
fldt
sbb
sbb
push
mov
std
jp
iret
dec
rclb
sbb
dec
or
pop
dec
outsb
sbb
int
sbbb
mov
jmp
in
cmp
pop
imul
add
scas
fildll
js
daa
stos
push
and
mov
jo
repz
and
imul
popa
inc
and
xchg
mov
stc
mov
in
jl
or
pop
jl
jns
cmp
and
jb
call
out
movl
les
int3
adc
pushl
mov
pop
popf
rcr
andb
cld
iret
and
cwtl
ficoml
lea
gs
add
jbe
dec
dec
xor
add
testb
mov
fsubrp
jecxz
adc
or
add
popf
inc
fwait
mov
push
jmp
push
lahf
outsb
sti
popf
mov
idiv
ljmpw
mov
stc
shrl
sbb
jmp
pop
mov
xchg
jmp
in
test
add
aad
sbb
sbb
bnd
jmp
test
test
shl
sbb
xor
pop
inc
mov
std
and
mov
out
mov
rcll
arpl
test
or
nop
test
inc
lret
shlb
frstor
xor
sbb
dec
or
movsb
fadd
dec
rolb
dec
inc
or
loope
loop
aas
or
jns
mov
jp
in
xchg
iret
sub
or
loop,pn
icebp
add
std
pop
jbe
push
loop
or
push
add
inc
push
jl
loop
jecxz
mov
mov
xchg
dec
push
arpl
push
mov
hlt
ret
loop
lret
enter
shlb
in
in
dec
inc
fs
mov
mov
aam
nop
jmp
out
cld
incl
inc
out
std
xor
mov
aad
je
or
fs
fisubl
les
hlt
or
or
loopne
add
mov
pop
lret
add
aad
in
lods
out
movsb
int3
push
mov
fildl
cld
jecxz
xlat
cmpsb
lret
loope
lret
enter
fnstenv
lods
loop
cld
fst
in
fidivl
in
add
sahf
add
leave
clc
and
adc
xchg
jp
dec
pop
jmp
std
cmp
icebp
cmp
ljmp
outsl
test
cld
in
jp
or
or
push
pop
decl
std
mov
out
test
movsb
adc
repz
dec
jb
fld
dec
in
adc
sbb
ret
jp
mov
mov
sbb
fdivr
hlt
lret
testb
in
les
add
mov
lret
shrl
mov
sti
cli
test
test
cld
out
out
stos
in
mov
add
sti
ljmp
out
in
dec
clc
je
out
xor
imulb
dec
push
les
fucomi
gs
stc
js
fisttpl
dec
push
sbb
sub
cld
testl
jmp
ret
adc
xor
inc
inc
or
dec
insl
jns
or
fucomip
repz
push
pop
ds
cs
and
loopne
cmp
insb
or
rcrb
negb
outsb
add
scas
jnp
pop
ds
sub
pop
popf
lret
inc
pop
or
loop
inc
xchg
cmp
std
mov
mov
xor
jne
call
dec
lock
gs
dec
add
inc
loope
add
shl
sti
pop
inc
pushf
sbb
aam
outsb
ret
jl
push
and
pop
inc
mov
scas
xchg
loopne
enter
push
and
jg,pn
cs
shlb
mov
cld
repnz
add
cmpsl
sti
mov
pop
ret
sarb
cmp
movsb
aas
loope
aam
sti
lds
out
scas
push
sub
divl
shll
hlt
mov
push
cmp
fstpt
inc
data16
jmp
outsb
push
fsubs
inc
in
mov
or
inc
add
inc
or
or
add
jne
lret
or
jl
not
pushl
dec
rol
stos
push
push
mov
ret
in
inc
cmp
jge
sub
jle
repz
cltd
mov
cmp
add
fcmovnbe
lcall
inc
testl
push
dec
testl
cmp
or
cltd
or
push
ds
scas
or
mov
jnp
inc
aad
jns
popf
gs
in
adc
sahf
sbbl
adc
cld
pop
shll
cmp
push
mov
xor
cmpsb
add
jb
or
push
pushl
stc
insl
in
cmp
cs
stos
sti
enter
inc
sbb
into
test
inc
ds
dec
scas
hlt
xlat
xchg
fidivrs
sbb
pop
add
sti
in
push
out
movb
daa
xor
mulb
push
js
jne
pop
jl
mov
jecxz
cmpsb
sbb
and
add
nop
scas
pop
fcompl
xchg
out
xlat
loope
jl
std
cld
std
push
mov
push
or
jp
neg
out
cmp
scas
push
mov
inc
add
shl
std
cld
addr16
ljmp
push
test
sub
lret
or
stos
or
push
ret
cld
sub
dec
in
fistpl
or
xchg
mov
pop
arpl
shlb
stos
xchg
lock
add
iret
test
test
dec
push
outsb
loopne
xchg
pop
in
lahf
stc
mov
and
insl
xchg
push
jmp
xchg
cmpb
movsl
xchg
adc
lret
lock
ja
je
jmp
insb
xchg
sarl
and
pop
inc
lea
inc
cmp
stos
jp
mov
cmp
stos
scas
jl
sti
cmpxchg
in
imul
aam
jmp
xchg
cmp
mov
jle
push
in
mov
sub
push
int3
add
sbb
incb
das
imul
jecxz
dec
add
jo
adc
pushf
adc
dec
xchg
push
pop
andb
daa
mov
les
or
in
incb
dec
in
cmp
jmp
add
pusha
fstpt
inc
arpl
mov
adc
cld
rolb
or
or
jne
and
sub
fidivs
stos
adc
fidivrs
stc
xor
test
pop
in
or
jb
sbb
das
inc
lods
cpuid
enter
add
fwait
stos
lret
outsl
jmp
ret
mov
adc
dec
bsf
or
ret
xchg
dec
mov
idiv
test
pop
lock
imul
dec
hlt
push
cmp
xchg
pusha
jmp
hlt
mov
xchg
je
ret
test
sti
or
enter
dec
sub
je
mov
sub
and
pop
push
imul
or
std
pusha
mov
cmp
jmp
sbb
xor
lods
decb
cs
in
lret
or
sar
movsl
sub
stc
aad
inc
cltd
jge
inc
fdivrp
push
fsubr
push
mov
loop
test
test
rol
mov
add
jo
mov
test
repz
dec
push
or
std
push
int3
or
jl
in
inc
jle
mov
orl
jl
jp
add
icebp
lret
ss
sub
push
jg
jmp
leave
out
icebp
repnz
or
jge
shll
or
out
sub
loope
imul
xor
jle
lock
add
stos
cmp
add
or
lods
in
add
push
xor
es
in
fistl
pop
in
cmp
sub
fidivs
mov
jle
jb
xor
push
out
add
dec
int3
xor
push
sbb
or
les
out
mov
jmp
call
lahf
fucomip
and
je
push
ss
ljmp
mov
stos
jmp
fcmovnb
jmp
lahf
call
mov
pop
rolb
push
rcrl
mov
pop
add
ds
cmp
arpl
jmp
testb
mov
in
out
sarb
fcomi
fsubr
inc
lock
sub
jl
jl
jne
imul
divb
rcrl
add
push
into
inc
inc
sub
std
or
imulb
sub
dec
jmp
je
sbbl
and
mov
sbb
test
test
ret
shll
orl
in
out
jl
test
decb
stc
lret
lret
xchg
and
in
int3
mov
push
ja
out
cmp
ljmp
and
xchg
lods
sahf
mov
ja
call
jb
ret
cmpsl
mov
mov
or
bnd
repnz
in
push
mov
cwtl
xchg
inc
orb
mov
jbe
mov
mov
jae
scas
mov
cmp
jl
and
stc
jns
jmp
ret
in
push
stos
ret
adc
pop
lcall
lret
iret
jne
pop
mov
cmp
add
ret
cli
mov
fadd
daa
mulb
lcall
pop
sbb
push
pop
xor
aaa
neg
jp
aad
xchg
movsl
or
fcmovnb
popf
xchg
fdivr
repz
push
push
decl
xor
push
mov
sbb
push
add
and
add
test
outsb
lret
repz
jae
movsl
rol
je
out
addr16
aas
push
movsb
xor
dec
jo
ret
mov
rcrl
test
test
mov
test
lods
jbe
in
jecxz
incb
shrl
jmp
loopne
clc
loope
dec
jns
std
mov
int
or
add
aam
mov
int3
lret
mov
insb
jl
pop
rcr
pop
rcl
or
jo
popf
or
cli
cmp
add
fmull
or
ud2
xchg
or
cmp
and
or
jmp
dec
out
mov
or
fildl
fiaddl
std
mov
jmp
test
enter
pop
add
in
add
ljmp
imul
test
mov
shl
clc
icebp
int3
in
jno
or
test
incl
pop
lret
cwtl
hlt
loop
cltd
or
jecxz
repnz
lret
stos
or
mov
lret
fstp
mov
repnz
ljmp
jo
sub
jl
out
jl
test
dec
jne
js
mov
push
dec
mov
cmp
jo
mov
les
inc
lock
or
hlt
clc
in
sub
push
jmp
xlat
lret
cmc
pop
lock
add
js
cmp
push
add
add
pop
xor
ss
movb
sub
or
jno
sbb
mov
out
iret
loopne
lret
popa
jg
mov
cmp
repnz
mov
dec
push
jmp
jl
ljmp
dec
mov
add
loope
out
lret
mov
cmp
jns
cwtl
sub
adc
push
out
stc
push
test
sub
repnz
fiaddl
fldlg2
mov
and
sub
cmp
std
xchg
xchg
pop
sahf
aad
cmp
xchg
lret
or
mov
repz
ss
add
out
xchg
or
and
xor
popf
stc
push
or
inc
rorb
lcall
imul
pushf
xchg
jmp
hlt
hlt
idivb
mov
cmc
jnp
jmp
pop
xchg
imul
loop
xchg
jno
mov
loop
dec
sarl
mov
add
ss
mov
dec
xchg
or
pop
frstpm(287
std
int3
idivl
xchg
outsb
lret
imul
xor
mov
mov
inc
mov
stc
xor
xchg
jl
jl
xor
or
icebp
ss
add
adc
inc
bound
cmpsl
cmpsl
and
stos
lds
sub
jp
repz
out
std
popa
andl
test
mov
add
mov
jno
jmp
imul
js
fwait
xchg
rcrb
in
ljmp
cmp
xchg
mov
or
pop
neg
mov
fildl
or
addl
cmpsl
repnz
ret
xchg
mov
inc
push
cmp
dec
adcb
or
xor
cmp
fcompl
cmp
add
xor
push
ljmp
cld
or
lret
dec
cmp
out
mov
out
lock
jae
out
cmp
testb
test
inc
insb
dec
jle
adc
cmpb
or
lret
lret
cmp
rcr
clc
cmp
nop
jns
leave
mov
cli
cld
ret
mov
mov
pop
mov
ret
imul
jns
xchg
dec
xlat
in
push
ret
in
lahf
or
out
test
sbb
out
ret
or
pop
test
xchg
inc
shr
hlt
clc
adc
add
adc
xchg
inc
rorb
mov
xchg
inc
jno
add
cmpsb
in
mov
sar
sti
stos
ret
test
pop
cmp
or
jmp
sub
sti
nop
inc
pushf
leave
lret
and
adc
dec
test
test
xchg
fsubr
bound
outsl
frstor
fisttpll
lock
test
mov
adc
lcall
stc
lcall
mov
inc
sti
mov
testb
inc
shll
fistl
pushl
ret
data16
lock
mov
icebp
cld
mov
ja
pop
jle
cmpl
mov
fistpll
andl
add
mov
xchg
cli
mov
inc
inc
out
shl
lcall
cli
mov
sub
bound
out
lods
cli
mov
clc
out
rorb
cmp
test
xor
or
les
enter
sbb
icebp
ja
mov
push
add
mov
jns
mov
sub
inc
leave
pop
test
aaa
mov
lds
mov
cmp
push
or
iret
mov
xchg
xchg
shl
mul
cli
jns
in
cmp
sti
mov
das
pop
fmull
incl
jg
icebp
decb
lret
rcl
ret
dec
or
lret
xlat
or
cmp
sub
out
cmp
faddp
mov
add
in
cmc
jg
or
lret
push
mov
mov
fwait
ret
out
cli
call
mov
or
dec
add
rolb
add
xchg
pop
movl
adc
or
jmp
int3
lods
or
mov
cli
xchg
cmp
jl
addb
jg
mov
cmc
fldenv
add
stos
dec
add
add
cmp
mov
cmc
push
addl
sub
mov
dec
outsb
mov
or
enter
dec
gs
adc
mov
ror
fs
jo
xor
mov
stos
ljmp
in
push
out
xchg
xor
mov
cmp
inc
hlt
adc
cmp
les
add
call
out
in
cmp
mov
mov
loopne
movsb
jnp
inc
add
xor
ret
orl
mov
pop
sub
repz
and
or
adcb
movsb
mov
pusha
add
cld
ret
sbbb
mov
fs
aam
mov
sub
les
outsl
cmp
sbb
jg
xorb
push
add
mov
mov
mov
shld
std
mov
and
sbb
cli
xor
hlt
push
pop
mov
fmull
fscale
dec
mov
icebp
and
cmp
inc
out
or
jp
div
movsl
inc
stc
xor
iret
pop
or
jl
jge
jmp
lret
cmp
pop
stc
or
sti
cmp
or
add
push
lods
fucom
std
mov
lret
or
les
pop
or
loope
gs
dec
enter
cs
or
out
cli
cmc
cld
or
stos
jmp
fldl
xchg
js
jmp
dec
jo
cmpsl
xchg
into
mov
xchg
and
in
loop
popf
mov
leave
ja
stc
in
sub
pop
jecxz
loopne
mov
out
mov
cli
call
leave
in
hlt
or
sti
imul
mov
add
dec
cmp
testl
push
repz
sub
call
push
dec
orl
movsl
sbb
xor
xor
xchg
jp
jmp
pop
stos
loop
mov
rol
jno
xchg
inc
test
cmpsl
sti
push
enter
lret
dec
mov
or
cmpsb
mov
cld
in
out
repz
std
or
mov
lock
std
sub
cwtl
cld
dec
jns
repnz
loope
inc
jl
jp
aaa
hlt
fsubs
testb
pop
push
into
xchg
aam
sbb
aam
sub
push
add
add
mov
ss
stc
add
mov
cmpsb
insl
repz
sbb
xchg
add
in
mov
xor
test
lock
nop
add
test
cwtl
test
mov
in
movsb
push
ret
cmc
idivl
mov
xor
mov
out
lret
ret
das
sbb
inc
dec
in
lret
add
rolb
stos
or
mov
cmp
add
insl
pop
js
ret
pop
mov
inc
xorb
jge
addl
cmp
jne
cmp
push
mov
inc
push
lcall
rcrl
mov
mov
cld
or
inc
push
add
hlt
mov
or
pop
push
jl
fidivrs
cmpsl
imul
sbb
stc
fcmovu
fistpl
mov
jmp
mov
jnp
pop
fdivs
mov
insb
mov
stc
rcr
mov
test
cmp
icebp
ficoms
mov
jl
jmp
xor
mov
cmp
lret
mov
cmp
push
xlat
mov
and
dec
outsb
aam
or
mov
insb
xorb
mov
and
cmp
imul
je
mov
or
pop
lret
inc
or
jmp
fcmovnbe
ljmp
inc
iret
in
js
or
jae
mov
aad
aad
fdiv
or
add
clc
mov
lret
push
fstps
push
stos
pop
or
hlt
push
dec
jo
stos
cld
jl
mov
sbb
dec
cmc
or
in
mov
and
cmc
or
ret
leave
les
fisttps
fs
lock
fimuls
stos
mov
pop
les
or
popa
inc
xchg
xor
aam
sub
push
xchg
inc
inc
jmp
aaa
or
and
inc
dec
push
add
fdivr
das
std
test
inc
fistpll
mov
aam
lret
sahf
mov
inc
bnd
lock
jecxz
stos
xchg
inc
dec
pusha
add
ret
sbb
faddl
shr
scas
cmp
cmp
and
jb
dec
faddl
sbb
outsb
mov
adc
inc
aad
aaa
mov
imul
loope
out
mov
rorb
add
cmp
pop
jbe
push
sbb
jb
popa
out
add
mov
test
add
adc
or
clc
cmp
incb
jnp
out
rcll
add
inc
inc
rolb
imul
or
push
or
inc
lret
dec
mov
or
push
hlt
cmpsb
enter
cmpsb
enter
fidivs
loop
inc
xchg
pop
fcmovu
movb
lods
out
lret
fld
xchg
mov
aam
enter
scas
push
in
mov
rorb
shlb
xor
or
insb
jnp
stos
or
aad
loopne
mov
shll
ljmp
pushf
jae
lret
inc
popf
or
testb
cmpsb
mull
shl
lret
jbe
cltd
push
mov
push
jmp
fwait
dec
jns
out
gs
or
or
mov
gs
ror
push
aaa
inc
iret
jnp
out
out
sub
xchg
jns
or
lret
outsl
insb
inc
dec
in
mov
or
pop
mov
or
out
movb
lods
rorl
xorb
fs
mov
inc
scas
add
mov
inc
fs
lds
jo
pop
xchg
bound
fcmovnu
or
jmp
enter
mov
ljmp
sbb
inc
sbb
rcl
cld
mov
jae
scas
repnz
ds
add
loop
mov
and
fstpl
fs
push
pop
mov
fcmovu
push
mov
lds
test
filds
les
inc
test
mov
imul
les
jl
in
adc
inc
cld
inc
sub
and
xorb
jecxz
stos
scas
rorl
hlt
inc
jle
add
sub
inc
rolb
stos
scas
mov
rcr
mov
mov
push
hlt
fdivrp
jno
js
stos
and
dec
ds
xor
mov
mov
lret
in
std
or
cltd
out
scas
mov
inc
out
xlat
out
push
sub
std
jae
lret
in
jnp
dec
enter
sti
divb
ljmp
out
xchg
pop
xchg
popf
adc
ljmp
jmp
mov
imull
mov
jbe
and
repz
dec
jne
mov
fdivp
dec
or
lds
jmp
or
rol
loopne
je
inc
mov
clc
cmp
or
jns
mov
jbe
jb
les
loop
std
jmp
pop
pop
jbe
imul
jb
and
call
dec
jge
adc
xchg
add
fisubs
test
mov
xchg
inc
mov
push
movb
inc
jmp
aaa
or
and
push
push
xchg
test
mov
add
cmp
jecxz
loopne
aaa
or
mov
in
out
ret
jmp
adc
and
inc
mov
push
ret
cmpb
mov
add
shll
fiadds
mov
mov
aam
sub
repnz
or
pop
pop
addl
sarb
xchg
jmp
mov
pop
add
fwait
out
loop
jne
iret
mov
jecxz
test
or
mov
mov
mov
lock
cld
mov
ret
repz
fstpt
mov
jle
mov
adc
fnstenv
ss
pop
cmp
lret
sub
or
test
into
inc
stos
cwtl
pop
mov
faddl
dec
pop
iret
and
push
pop
push
mov
inc
les
jne
rcl
stos
mov
mov
inc
hlt
mov
or
push
pushl
mov
push
addr16
pop
xor
addb
push
xor
mov
xor
mov
fistpll
jecxz
icebp
test
mov
mov
cwtl
cmp
xor
in
lret
repnz
lret
fdivl
or
cmp
cs
sarb
outsb
int3
std
insl
int3
add
mov
mov
stos
stos
dec
push
addl
mov
mov
loope
or
popa
sbb
dec
mov
pop
ljmp
movsl
repz
outsl
add
mov
scas
or
xchg
out
rcr
push
or
out
inc
loop
or
or
or
and
test
inc
dec
inc
mov
or
rcrb
cltd
daa
stc
jmp
add
mov
push
inc
aam
push
add
movsb
and
mov
or
push
or
clc
fwait
jae
jmp
pop
jmp
or
jmp
loope
leave
out
mov
scas
clc
lret
in
ret
shl
cmp
and
in
jns
xchg
or
ss
push
xchg
call
gs
in
push
daa
sbb
lea
std
add
inc
fmuls
hlt
fnsave
cmc
movsl
nop
enter
cli
arpl
je
jnp
and
mov
sbb
je
add
fadd
fnsave
xchg
ret
mov
je
xor
enter
mov
cmp
fiaddl
fdivr
clc
dec
sahf
ds
in
cmpb
lods
add
dec
push
add
shlb
stc
jg
sahf
xor
add
mov
enter
ss
jp
inc
mov
and
or
lods
mov
les
lods
in
cmp
xchg
xor
mov
loope
or
int
jnp
jb
or
clc
mov
push
xchg
hlt
loopne
lock
xchg
xor
dec
xor
cmp
or
shll
popa
sub
xor
into
pop
les
sahf
dec
sbb
push
loop
lahf
or
mov
push
imul
lea
in
push
mov
jae
lahf
shll
xor
jns
lods
pop
or
jmp
loopne
mov
mov
loop
out
scas
adc
sub
or
jg
in
ja
jl
jmp
mov
sbb
jmp
mov
sar
mov
jae
sbb
jl
dec
mov
shll
adc
add
sub
or
fidivrl
rorb
inc
enter
inc
lcall
and
out
cld
fcmovu
fnstenv
dec
cwtl
iret
scas
dec
sub
mov
lods
fcmove
mov
mov
iret
and
cmp
push
lock
mov
leave
mov
rcll
mov
adc
lds
mov
inc
cld
jbe
add
out
arpl
into
mov
cmc
iret
cld
mov
jmp
ljmp
out
and
aam
mov
imul
cmpsl
bnd
sbb
mov
jecxz
fldl2t
pop
lods
add
outsb
into
dec
cli
pop
mov
es
push
pop
sub
xchg
cmp
add
mov
ss
inc
mov
negb
roll
fsubrl
mov
cmp
mov
add
dec
push
dec
adc
dec
mov
inc
lods
add
jmp
pushf
push
movaps
negb
pop
cmp
fiadds
ret
mov
xor
cmp
push
stos
push
xor
enter
hlt
sub
leave
add
pop
lahf
adc
inc
pop
jp
mov
jle
aaa
add
add
mov
xchg
cmp
shll
stos
dec
adc
xchg
test
adc
icebp
inc
dec
dec
ret
stos
mov
lods
cmpsb
sub
iret
leave
scas
jl
and
test
bnd
repz
mov
jecxz
dec
xchg
stos
cmp
or
gs
xor
inc
repnz
mov
pop
imull
or
fidivrs
dec
shlb
mov
lret
mov
adc
shl
stos
or
test
and
in
leave
addr16
xchg
jmp
sahf
push
pop
sub
push
add
scas
push
popf
fimull
jnp
mov
fisttps
pop
cmp
or
inc
mov
cld
pop
or
add
or
lret
sbb
or
adc
cmp
mov
rcll
and
in
cmp
out
jecxz
add
jecxz
xor
inc
scas
stos
lds
inc
push
mov
fiadds
jne
push
in
jl
mov
cmp
dec
lret
add
and
add
xchg
push
movsl
fwait
sahf
aam
in
rorl
push
roll
dec
movsb
ljmp
out
sub
clc
or
ljmp
push
aam
mov
sbb
dec
add
loop
clc
ljmp
dec
jl
or
jmp
pushl
mov
pop
std
cld
rcrl
adcb
mov
int3
sti
add
pop
mov
lods
inc
mov
jae
xor
loopne
imul
stos
gs
pop
negl
shll
loope
pusha
mov
jae
je
add
and
int
sti
mov
xchg
jnp
cmp
mov
je
ds
dec
loope
scas
sub
in
lret
lea
test
faddl
incl
push
inc
insl
and
sub
add
xchg
adc
mov
xor
xor
xchg
cmp
jl
or
push
das
push
add
sarl
sub
mov
lds
sti
and
test
xor
js
sub
js
cmp
inc
mov
or
sub
cld
jae
dec
mov
int
insb
pop
xlat
jl
mov
cmp
push
fstps
popa
ret
in
lcall
jno
or
ret
sub
sub
dec
or
add
sub
lret
cld
mov
test
mov
subl
lcall
stos
shll
mov
sbb
dec
dec
inc
jp
xlat
jne
stc
repz
sbb
dec
adc
std
add
dec
dec
in
cld
outsb
or
movsl
shrb
fmul
jge
sub
sbb
in
inc
int
push
stos
jmp
jp
cmp
inc
in
pop
or
mov
aad
sti
test
loopne
dec
icebp
lods
pop
or
jecxz
adcl
mov
lret
scas
shlb
adc
aad
js
shrl
push
adc
stc
rolb
aam
xchg
lret
roll
lock
loope
shl
pop
mov
xor
xor
pop
pop
std
mov
scas
adc
add
sbb
out
test
sbb
xchg
test
pop
push
es
ret
add
or
sahf
in
sbb
shr
cmp
lret
xchg
add
mov
jmp
aad
imul
test
lea
fs
push
rorb
into
pop
mov
vshufpd
cmp
stos
pop
dec
dec
dec
fstpt
sub
mov
idiv
clc
xchg
cmp
or
inc
xchg
pop
cld
xor
jge
in
adc
mov
ds
sbbl
dec
ds
sbb
loope
pop
add
mov
jns
cmp
orl
cmpsb
in
movsb
push
inc
loop
pop
dec
loope
cs
jmp
and
xchg
mov
xchg
sahf
je
jle
lock
xchg
sub
cmp
scas
mov
rcrl
arpl
in
adc
sub
mov
or
xor
fisubl
sub
pop
pop
outsb
push
popa
or
pop
rep
aad
jge
jne
jae
xor
cmp
dec
mov
cmpsb
cmc
push
mov
mov
mov
outsb
das
testb
cmp
mov
dec
mov
cld
mov
add
pop
test
and
jnp
push
ljmp
aaa
insl
icebp
stc
jnp
sbb
xchg
loop
xlat
scas
xor
lret
outsb
push
loop
adc
inc
sub
pushf
dec
sbb
xchg
fstpt
push
mov
adc
in
enter
enter
dec
pop
push
mov
sub
std
fildl
popf
in
mov
in
sbb
xor
cmp
mov
sub
lods
lcall
lahf
dec
xor
fwait
mov
pop
cmpsl
pop
cmp
inc
dec
push
stc
lahf
push
mov
mov
xchg
fcmovnb
aam
mov
jmp
add
outsl
cmp
lahf
or
cmpsb
jle
mov
cmpb
rorl
jo
xor
mov
and
in
and
gs
rol
dec
loop
movsl
pop
mov
ret
mov
mov
std
jno
xchg
jmp
scas
imul
aaa
fsubl
std
lods
cld
out
rorl
cmpsl
mov
jmp
popf
or
imul
ror
stc
fisttpl
test
adc
pusha
lcall
js
mov
lock
bound
xor
repz
dec
enter
incb
add
or
lock
or
pop
dec
in
in
ljmp
dec
std
stc
in
cmpsl
fldl
int3
inc
stos
dec
out
mov
push
aad
repz
jmp
inc
inc
int
pop
and
lock
mov
out
mov
dec
push
jecxz
jge
or
movsb
aaa
push
cmp
stos
fisttpll
xorl
inc
jmp
or
add
dec
xchg
xchg
movl
pop
stos
fiadds
push
pusha
jge
icebp
push
insb
mov
ds
inc
xchg
sub
int3
stos
sub
mov
adc
mov
lret
xor
jbe
out
xlat
mov
push
out
add
clc
sub
mov
ja
cltd
lcall
subl
out
fsubr
pop
mov
test
lock
mov
sub
mov
mov
cwtl
in
push
addb
add
or
into
stos
in
outsb
or
jl
loopne
scas
mov
xchg
mov
sarb
hlt
mov
outsb
jnp
pop
pop
cmp
divl
shlb
loope
repz
push
xchg
or
lds
xor
xchg
or
fildl
ss
repz
inc
push
xor
sbb
aaa
mov
dec
std
or
jp
pop
inc
sbb
fcmovb
jle
push
testl
dec
xchg
sbb
cltd
icebp
push
ds
inc
cwtl
add
add
mov
in
ds
stc
xchg
rep
or
mov
jp
sahf
jnp
test
hlt
mov
inc
jbe
jl
scas
cld
and
or
mov
ljmp
and
mov
jnp
sti
xchg
addr16
cld
stos
neg
insl
xor
xchg
je
xor
cmpsl
sbb
imul
enter
xchg
mov
cmp
fmuls
in
mov
sti
ja
in
mov
fidivl
pop
fiaddl
lahf
in
inc
test
mov
xor
push
adc
pop
scas
inc
or
add
adc
gs
lret
out
ret
or
mov
out
inc
pop
pop
test
push
lock
sub
xlat
push
cmp
movsb
repz
les
mov
mov
ret
mov
mov
mov
out
pop
jae
insb
cld
test
add
dec
mov
iret
mov
push
inc
idivb
or
add
mov
lret
and
insb
inc
test
push
js
xchg
repnz
xor
loope
repz
cld
cmp
cmp
jge
mov
mov
mov
and
dec
pop
jo
sbb
add
rorl
jmp
mov
aam
mov
dec
push
movsb
cmp
rcll
out
cld
lcall
cmp
iret
add
jne
test
movsl
mov
push
or
inc
mov
lock
xchg
lea
data16
arpl
into
pop
movsl
mov
cmp
mov
push
inc
jecxz
test
push
adc
jg
mov
test
ss
iret
dec
pop
rolb
shrl
in
mov
and
in
xorb
js
and
in
lret
inc
lods
stc
sahf
shlb
add
or
cmp
cmp
pop
cmpsb
inc
dec
iret
cmpsl
in
out
jle
push
leave
mov
adcb
add
mov
fucomip
mov
fdivl
fimull
neg
xor
add
mov
lods
jae
cmp
sub
stos
cmpsb
pop
fnstsw
or
xchg
cmc
out
lock
or
sub
or
cmp
aam
xchg
dec
jl
or
into
sahf
inc
lods
xor
add
out
mov
mov
sub
addr16
stos
aas
mov
ja
xor
gs
pop
ljmp
xchg
jnp
pop
in
mulb
cmp
inc
nop
cmpl
xchg
jle
pushf
adc
in
jno
ret
mov
cld
inc
pop
mov
jmp
outsl
push
ss
or
cmpsl
pusha
dec
sbb
mov
push
inc
imul
sub
or
arpl
in
pop
cli
std
add
imul
sub
shll
dec
hlt
jmp
push
sub
sti
sbb
add
jno
movsb
pop
aaa
cli
ffreep
test
std
or
pushf
push
dec
insb
mov
testl
xchg
mov
jmp
enter
xlat
clc
cmp
jnp
jmp
or
ljmp
mov
inc
fbstp
mov
in
dec
push
xlat
lds
lret
xchg
mov
fcom
cli
dec
and
adc
push
movb
shrb
prefetch
or
push
out
idivb
mov
jnp
push
test
xor
fdiv
push
clc
cmp
jae
push
je
sarb
mov
push
sbb
inc
or
ja
jecxz
push
jb
add
push
inc
fst
mov
dec
jp
ret
jb
sti
xor
pop
sti
dec
test
in
aam
mov
movsb
mov
into
mov
xchg
dec
ror
jmp
sub
mov
aad
cmp
fwait
ja
dec
in
jbe
jnp
ficoms
sbb
adcb
mov
xchg
jg
inc
das
jmp
xchg
mov
or
dec
jae
fdiv
push
or
or
xchg
dec
popf
xchg
fdivr
mov
in
psubq
ror
aam
mov
fistps
les
repnz
mov
jnp
test
mov
ret
enter
out
cmp
inc
adc
jp
sar
loope
pusha
mov
test
das
push
xor
pop
jle,pn
rclb
test
mov
rol
mov
in
ja
jle
sar
insb
mov
cmc
dec
push
mov
add
xchg
and
dec
lcall
into
sub
ficomps
sub
ret
shrl
mov
jecxz
scas
mov
sbb
repz
popf
and
lock
sbb
adc
inc
sahf
shlb
loop
js
push
inc
dec
cmp
dec
iret
dec
pop
test
mov
jno
ret
mov
ja
lods
outsb
in
mov
jmp
int
jae
loope
rcrl
out
mov
not
das
fldt
xchg
jmp
popf
sub
iret
mov
inc
push
cmp
sbb
les
xor
pop
dec
arpl
imul
pop
clc
pop
lock
jmp
inc
jo
std
cmp
pop
xlat
aam
cmp
rcll
mov
out
stc
hlt
out
cmpsb
dec
call
add
je
jle
inc
incb
mov
aas
mull
pushf
decl
jne
cld
cmp
cmc
cmpsl
call
fwait
mov
sbb
add
stc
ja
psubd
or
sub
orb
shrb
sub
insl
jecxz
push
mov
out
jp
dec
ljmp
pop
inc
cwtl
mov
inc
rcr
rorl
test
pop
lds
in
or
call
jl
sub
add
loop
std
jnp
jl
les
mov
in
or
cmp
daa
xchg
frstor
mov
pop
imul
jle
fs
movb
or
mov
xlat
daa
gs
pop
jns
shll
cmp
hlt
sbb
decl
mov
addr16
jle,pt
in
inc
loope
out
push
repz
sbb
mov
cmp
or
jno
mov
call
or
stos
iret
mov
lods
xchg
les
movsl
push
mov
fdivr
pushf
ja
push
inc
stos
sarl
jle
jae
insb
xlat
cld
push
nop
or
adc
jle
loope
add
sub
aad
imul
popa
stos
in
adc
xor
jl
repnz
sub
lret
loop
mov
popf
adc
repnz
cmp
xlat
call
sar
mov
mov
sbb
lods
adc
adc
mov
xlat
insl
lock
loope
adc
icebp
mov
and
xchg
jbe
daa
lret
and
lret
inc
popa
vmovdqa
add
repz
sub
loope
or
enter
jb
sbb
in
cmp
adc
rolb
or
sub
mov
mov
inc
mov
inc
push
stc
icebp
addb
add
loop
xlat
pop
lock
adc
jmp
in
pop
and
outsl
mov
movsb
das
test
or
cmpl
icebp
and
push
inc
or
sbbl
inc
sub
jmp
inc
cmpsl
imulb
dec
imul
mov
in
out
rorb
or
dec
test
stos
xlat
adc
test
insl
sub
jmp
or
or
sets
pop
or
pop
daa
mov
in
out
cmp
xor
push
pusha
jae
enter
sti
outsl
inc
or
or
mov
or
or
or
movsb
das
push
push
sbb
add
sti
movsl
cmp
sbb
or
into
lods
and
stos
pop
out
ds
cmp
aaa
roll
mov
add
cli
stc
aaa
cwtl
leave
sti
mov
mov
pop
js
rcll
xorb
in
or
or
repz
imul
movsl
iret
mov
test
fnstsw
js
sub
hlt
add
mov
pop
fiadds
test
jl
or
lock
bnd
fidivrl
xor
jle
lock
sbb
in
stos
les
test
sti
scas
das
jmp
mov
add
outsl
out
in
jl
xor
insb
in
push
out
mov
dec
mov
or
jae
cmpl
leave
cmp
movsb
stc
mov
scas
or
int3
in
jge
xchg
or
push
stc
stos
jp
fs
xor
add
addr16
jne
iret
xor
add
xlat
ret
stc
dec
sbb
add
jbe
stc
xor
popf
negl
js,pt
mov
add
cmp
or
add
in
stc
cld
js
pop
adc
test
inc
test
sub
add
ds
movsl
inc
mov
stos
sbb
inc
test
xchg
or
cmpsb
or
enter
dec
pop
imul
cmp
or
mov
jmp
adc
inc
fisubs
call
cmp
pop
js
call
cmp
ljmp
xor
aad
or
test
mov
out
add
mov
or
xor
cmp
jp
push
push
and
mov
or
ja
sub
les
cmp
stos
adc
or
stc
add
les
or
arpl
sub
xor
mov
push
call
jns
add
adc
add
ja
mov
adc
add
inc
gs
dec
sbb
jbe
lret
mov
xchg
pop
add
insb
or
rcr
and
imul
sbb
clc
mov
inc
mov
nop
aas
lahf
xor
xchg
dec
lods
inc
add
push
les
les
mov
adc
jbe
ljmp
sbb
lret
repnz
movsl
callw
mov
cmc
push
addr16
jne
jl
stos
jmp
rclb
mov
shlb
mov
imul
fwait
cmpsb
idiv
int3
xchg
push
mov
daa
mov
jb
mov
clc
les
ljmp
push
int
ds
jb
aaa
repz
inc
in
mov
mov
idiv
mov
clc
aaa
mov
arpl
dec
fucomi
repz
outsl
dec
dec
adc
push
clc
lcall
mull
or
cmp
sarl
stos
or
repnz
jnp
add
jl
clc
push
cmp
jns
add
xchg
outsl
jmp
inc
sbb
repz
aam
adc
xor
add
sbb
mov
inc
sarl
jg
cmp
or
stos
mov
and
add
mov
dec
jle
scas
inc
xor
or
pop
repnz
jo
dec
shll
iret
imul
mov
ljmp
iret
clc
mov
cmpsl
dec
fisubl
enter
rclb
pop
dec
pop
cli
dec
js
xchg
clc
or
leave
mov
adc
inc
adc
es
xchg
push
out
lcall
push
jg
in
mov
cld
into
mov
push
mov
xor
je
push
aaa
or
mov
addr16
fsubr
dec
ret
jmp
push
mov
or
out
scas
dec
in
pop
mov
cli
lret
out
fincstp
imul
sti
clc
inc
movsb
dec
add
sub
sbb
add
sti
je
lret
mov
popl
mov
in
push
push
jo
fisttpll
add
ret
mov
lret
je
dec
adc
sub
ss
sbb
lret
lock
or
cmp
ret
jnp
mov
dec
add
adc
mov
mov
int3
cmp
pop
repnz
neg
jl
lahf
js
mov
lret
jecxz
loopne
jle
pop
lock
jmp
xchg
roll
xor
roll
ja
jbe
nop
test
data16
sub
dec
cmp
adc
sahf
std
andb
dec
movsl
pop
adc
jnp
or
lahf
test
xchg
sub
lret
dec
pop
mov
sti
into
pushf
sub
flds
in
fidivrl
test
inc
push
stos
mov
fcom
iret
shll
movsl
test
aam
test
mov
add
ds
mov
mov
add
cld
mov
out
loopne
jmp
ret
mov
dec
jl
or
loop
call
sub
sahf
cmovp
adc
dec
fwait
fidivs
mov
and
dec
xchg
mov
jno
inc
in
mov
lcall
cmp
jmp
inc
mov
dec
mov
add
jp
xchg
jl
mov
js
jne
jae
inc
add
sbb
les
test
xlat
mov
jne
sti
fnsave
or
mov
adc
pop
loope
add
rclb
xchg
dec
sbb
or
adc
sub
insl
pop
sarb
sub
push
xchg
inc
data16
mov
jno
jmp
inc
fidivrl
ds
mov
nop
sub
push
mov
add
inc
mov
xchg
and
out
mov
sub
inc
aas
sti
or
lcall
out
xor
pop
dec
stos
or
lcall
mov
cli
in
aam
inc
pop
sub
sbb
sbb
movb
mov
js
dec
les
add
in
les
push
add
js
mov
mov
hlt
leave
or
cltd
adc
pusha
mov
in
loope
movsl
lock
shlb
int
leave
leave
fsubrs
or
xchg
movsb
mov
xor
mov
lea
push
push
mov
call
jno
jp
push
aas
test
jmp
addl
sub
xchg
scas
outsb
lods
mov
mov
sbb
push
sub
lds
je
popa
xchg
mov
mov
mov
mov
or
jne
movsl
out
movsl
out
cmp
dec
pop
fcomps
mov
test
stos
rcll
inc
clc
mov
popa
je
xchg
mov
jle
sti
inc
push
sub
mov
sbb
in
and
in
sbb
mov
mov
out
fildll
std
and
push
and
mov
dec
add
or
pop
pop
outsl
daa
or
fmull
iret
das
clc
jnp
in
stos
dec
jo
dec
jmp
push
xchg
ds
lcall
dec
rolb
adc
enter
sti
mov
mov
loop
lods
cld
ds
inc
test
add
out
loope
xor
sti
mov
dec
jl
mov
in
loop
pusha
xor
or
and
mov
xlat
mov
dec
gs
out
out
jg
outsl
cmp
fistpl
xchg
or
std
sti
mov
out
add
jl
jecxz,pt
mov
mov
add
mov
lcall
mov
mov
sbb
aaa
scas
jbe
hlt
imul
mov
sbb
stos
adcb
les
les
test
insl
js
mov
cli
sbb
repz
or
scas
mov
adc
mov
fmull
arpl
cld
in
pop
and
cltd
inc
jno,pt
fxch
insl
mov
or
ret
out
and
std
loop
xor
into
cmp
or
movl
dec
sahf
xchg
jmp
sub
cld
pop
inc
xchg
es
fadd
mov
mov
fidivs
fndisi(8087
adc
dec
out
pop
ret
in
fdivl
imul
dec
xchg
cwtl
or
lret
inc
negb
push
mov
stos
sti
xchg
cmc
xchg
clc
sub
aad
arpl
sub
in
mov
stos
adc
mov
fisubl
mov
or
lret
in
mov
lret
mov
stos
out
fbstp
sub
test
push
or
in
push
jne
scas
pop
mov
push
clc
mov
pop
push
sub
mul
push
sar
inc
popl
cmc
ljmp
shl
jbe
movsl
lret
jnp
adc
sub
jno
pusha
popf
push
dec
out
mov
lcall
ror
mov
pop
push
or
sbb
or
enter
jle
inc
pop
sub
jb
dec
jmp
cmp
hlt
adc
aad
adcl
jo
cmpsl
adc
stos
lods
dec
ss
lret
or
jecxz
adcl
dec
inc
sbb
call
add
pop
mov
pop
enter
pop
jl
enter
cmp
repz
xchg
xor
adc
testl
push
cld
data16
fdivl
pop
and
test
jl
jmp
faddl
sub
sbb
sub
pushf
inc
xchg
or
imul
fcompl
stos
addr16
jecxz
pop
out
dec
in
bound
fsubrs
in
xchg
in
pop
lcall
xchg
mov
les
add
int
cmp
jo
negb
in
push
or
lcall
jl
jb
pop
aam
lock
jl
jle
xor
xchg
lret
dec
daa
enter
sbb
dec
mov
add
sbb
and
inc
aaa
fldenv
xchg
mov
pop
js
ror
mov
aam
mov
scas
loop
je
mov
mov
leave
push
mov
inc
jg
xchg
mov
jns
jl
in
lret
cmp
stos
pop
jb
into
sarl
jmp
call
lret
jb
pop
mov
jg
daa
or
aam
inc
sti
mov
leave
inc
imul
jno
mov
sbb
pop
out
lods
inc
push
mov
popa
adc
lret
xlat
sub
lock
mov
mov
or
je
cwtl
sahf
test
dec
sub
push
push
mov
xchg
dec
jmp
int3
inc
lods
lret
pop
call
ljmp
dec
jbe
call
cli
xchg
cld
add
rcrb
clc
ret
ljmp
adc
jge
xchg
dec
stos
add
in
in
ds
ficoms
xor
ret
nop
sti
dec
sbb
bound
fsubp
xor
mov
in
cmpsl
mov
xor
xor
sbb
or
cmp
stc
movl
ret
jmp
jle
jp
xchg
out
or
jle
cmp
and
or
xchg
jne
push
add
shrl
mov
add
push
jmp
lret
scas
sub
mov
xor
fs
lock
inc
adc
jge
jae
push
ds
mov
pop
insl
dec
stos
or
mov
stc
push
les
shrb
in
test
idiv
xchg
iret
inc
lret
add
cld
mov
sub
push
out
rorb
fnstenv
lods
sahf
inc
or
pop
push
test
jbe
icebp
mov
in
sbb
ja
cmpsl
sub
in
add
scas
outsb
test
cld
sbbb
dec
adc
ja
cli
incb
hlt
pop
cmpb
fsubrp
sub
mov
stc
popa
imull
sub
hlt
pushf
dec
xchg
or
dec
insb
inc
insb
ds
mov
dec
add
in
imul
xchg
ljmp
pusha
push
lret
jmp
add
xchg
mov
ret
icebp
jnp
or
movsl
xchg
in
mov
addr16
xor
jecxz
les
mov
insl
push
repnz
decb
rolb
sub
or
pop
ss
fdivrs
hlt
jecxz
mov
pop
or
pushf
xlat
jnp
shl
xcrypt-ofb
cmpsl
push
pop
ret
xor
jecxz
cmp
adc
jcxz
pusha
xor
ja
jbe
fimuls
adc
ja
jmp
orl
jle
fistl
jnp
fsubrp
mov
xor
sbbb
add
mov
call
dec
jbe
test
cwtl
or
and
and
insl
and
cld
pop
ss
jb
xchg
fmull
adc
pop
sub
mov
jae
xor
and
or
or
sub
pop
cltd
lods
fwait
std
in
add
add
into
out
sahf
fbstp
push
xchg
push
lret
dec
clc
jmp
jb
push
add
jb
or
cmpsl
out
mov
ret
int3
jns
lods
cmpsl
aad
xlat
or
sub
or
fisubrl
lods
imul
inc
in
pop
test
shl
in
stc
loopne
in
test
aaa
shl
shl
imul
jp
mov
dec
sarl
sub
fcmovne
cmovp
les
add
and
cli
mov
cmp
jne
jnp
in
cli
test
pusha
into
int
or
cmpsl
fucom
cld
stc
pop
or
addr16
test
rol
jmp
lock
test
int3
repz
add
scas
je
pop
mov
insl
sbb
and
push
test
mov
dec
lret
jmp
cmc
xlat
aad
xor
or
mov
js
cmp
xlat
or
clc
test
out
lret
jnp
aas
xor
and
loopne
aad
mov
add
ds
jo
movsw
mov
ficompl
mov
mov
dec
addr16
clc
stos
mov
or
out
std
mov
lea
or
addr16
ss
or
mov
ljmp
sarl
loopne
outsb
out
add
mov
lahf
inc
lret
or
push
sbb
jne
imul
hlt
mov
scas
mov
int3
push
inc
lods
push
int3
add
xor
cmp
sbb
hlt
push
daa
les
in
out
mov
scas
jmp
inc
outsb
or
js
stos
js
test
int3
clc
jae
lret
repz
cmp
jne
sub
or
xchg
shrl
cld
and
or
jge
xchg
insb
mov
out
movsb
inc
cmp
enter
mov
pop
jb
or
or
jl
mov
push
stos
arpl
rclb
aam
repnz
scas
inc
out
push
xchg
jg
inc
mov
or
dec
lds
lcall
ret
push
lret
ret
test
cmp
pop
pop
mov
mov
cmp
and
xor
jae
mov
dec
xchg
mov
stc
ret
dec
add
inc
dec
xchg
faddl
femms
push
test
inc
or
jnp
fwait
adc
push
mov
mov
bound
mov
mov
push
lock
mov
or
lret
inc
mov
inc
sbb
mov
pop
rorb
jbe
rcr
in
popf
push
loope
repnz
mov
or
lret
movsb
scas
inc
mov
stos
ljmp
test
in
adc
stc
icebp
or
or
stos
dec
shlb
leave
stc
pop
jnp
pop
mov
sub
out
cmp
mov
mov
sbb
in
das
jae
push
shrb
sarl
dec
unpckhps
in
cli
mov
mov
loopne
ja
pop
fidivrs
enter
cmp
fcomip
fadds
mov
or
fninit
ljmp
inc
adc
lcall
out
loope
sahf
dec
or
cltd
addr16
sbb
std
sti
iret
add
scas
cs
test
call
xlat
lods
mov
inc
jne
in
jp
out
enter
out
jmp
fstps
pushf
ret
add
dec
or
inc
and
add
push
adc
rcll
dec
lea
es
sbb
nop
movsb
add
out
fisubrs
ljmp
shlb
xlat
das
or
or
int3
and
scas
addl
cmpsb
in
sub
jmp
or
dec
dec
cli
push
dec
shll
jmp
jae
add
mov
dec
pusha
cmp
or
addr16
dec
lods
jns
or
dec
popf
ficoml
push
into
fdivrs
add
lea
push
scas
ret
les
test
ret
cmp
in
out
mov
test
add
inc
scas
iret
loop
lcall
ljmp
dec
bound
nop
subl
rcll
and
and
lcall
push
or
out
fnsetpm(287
daa
shll
sbb
jp
sub
pop
jne
cld
jb
int3
inc
and
test
rorl
dec
in
dec
cmpsl
cwtl
push
hlt
or
cmp
or
fs
mov
jp
in
hlt
in
adc
or
or
sbb
fwait
imul
ja
repz
and
or
hlt
cld
sub
in
leave
out
shll
fwait
xor
jecxz
add
sahf
shll
loop
pop
orl
mov
and
arpl
dec
mov
cmp
fmuls
sub
lea
cli
jbe
mov
or
test
mov
mov
in
sbb
les
aam
sbb
jmp
add
add
fbstp
cmp
pop
fistpl
out
std
or
and
clc
lahf
pop
popf
dec
shrl
adc
mov
loop
jmp
int3
imul
call
lret
cmp
inc
dec
outsl
jge
hlt
cmp
add
gs
stos
xlat
adc
addb
xchg
sub
mov
add
mov
fdiv
xor
and
sti
in
jecxz
stc
adc
dec
pop
dec
call
jo
lret
ret
or
or
pop
icebp
out
add
enter
decb
pop
xchg
jp
add
mov
ds
xlat
dec
fsub
shrb
add
inc
add
test
mov
add
leave
xchg
repz
ds
jge
lret
inc
mov
lret
stos
pop
mov
or
sbb
rol
cmp
xor
cmp
lret
fcoml
add
dec
dec
test
pop
lods
mov
mov
xlat
mov
stos
mov
aam
xchg
mov
scas
leave
push
fadds
scas
sub
popa
orb
or
fnstenv
roll
into
aas
adc
push
ret
out
dec
mov
jecxz
lods
sbb
fmull
xor
xor
std
add
push
lock
enter
loope
lods
pop
popa
mov
stos
jge
lcall
inc
pusha
cmp
push
pop
mov
popf
adc
lcall
jl
push
addl
sbb
and
hlt
in
push
shlb
dec
ret
sub
insl
inc
and
arpl
mov
cltd
xor
dec
stos
and
and
mov
sub
mov
push
hlt
jbe
addl
or
mov
mov
inc
sarb
inc
subl
outsb
push
pop
add
add
sub
loopne
pop
add
bound
jecxz
cli
pop
mov
clc
jmp
hlt
fistpll
sbb
pusha
or
loop
cmp
and
dec
ret
ret
push
add
or
in
rcll
or
call
jecxz
sar
ror
in
cmp
test
in
in
cmp
push
cld
cmp
fstpt
mov
cltd
pop
cmp
jns
sti
shl
outsb
adc
loopne
add
mov
out
mov
push
mov
jmp
clc
movsb
enter
mov
jno
shr
fiadds
inc
mov
into
gs
mov
push
mov
and
add
lods
or
std
jne
add
mov
arpl
mov
or
fsub
push
xchg
push
out
xor
in
mov
dec
js
je
mov
hlt
push
lea
mov
jge
leave
fsubr
in
pusha
sub
testl
jl
pop
sub
xor
jno
rclb
xchg
dec
dec
xor
lret
xor
fmul
repnz
mov
xor
mov
mov
dec
jbe
jno
repz
test
jmp
mov
test
xor
ret
int3
lret
xor
cld
cmp
sub
jno
jmp
or
loop
loop
dec
enter
xor
mov
test
jae
mov
pop
jno
insb
mov
or
repnz
shlb
fwait
rorb
sti
leave
repz
loop,pn
push
dec
hlt
sub
loopne
aad
push
ficoms
cs
cld
jecxz
jnp
test
daa
les
jmp
cmpsb
add
pop
add
not
and
add
lret
pop
out
sti
imull
or
mul
add
lret
pop
lcall
push
push
or
in
xlat
adc
xlat
mov
pop
mov
iret
aad
pushf
cli
sbb
aam
sub
gs
add
fildl
jno
mov
lahf
or
fs
pop
lcall
popf
sahf
repnz
add
mov
mov
lret
psubq
frstor
je
or
push
or
cli
clc
std
fmul
lcall
fmuls
dec
enter
lods
and
pop
xchg
xchg
xchg
pop
fstps
es
rorl
movsl
test
dec
in
jg
mov
dec
cld
xorl
in
fdivr
or
std
add
xchg
fnstenv
mov
scas
xor
cltd
sub
or
mov
xor
add
outsl
in
pop
sti
sti
sub
lret
inc
mov
sahf
and
bound
lret
push
xchg
cmp
jle
pop
aaa
mov
cwtl
ljmp
fistl
sar
stc
fistps
icebp
jl
out
push
aaa
fsubrl
cmp
pop
mov
xor
jle
or
ljmp
test
mov
repnz
orb
pop
mov
cli
loope
cmp
imul
les
push
movsb
scas
or
mov
or
and
mov
push
jg
repnz
or
or
push
rorl
ja
pop
fstpt
pop
mov
pop
push
dec
or
lahf
into
dec
js
mov
jne
add
inc
shll
enter
imul
shrb
mov
or
cli
fildll
cmp
sbb
push
dec
aaa
mov
in
or
sbb
mov
arpl
call
in
lods
lock
mov
fldl
xchg
add
rorl
insb
test
xchg
inc
incl
leave
sahf
sbb
cmc
pop
cmc
jmp
or
js
or
popa
test
xor
pop
icebp
jge
notb
addl
sti
mov
sub
mov
or
mov
ret
out
aaa
push
fidivs
sbb
iret
enter
fsubl
pop
iret
js
push
add
stos
repnz
jecxz
or
or
das
je
push
mov
xchg
push
pop
lahf
fld
ljmp
jmp
dec
popa
xlat
daa
jl
arpl
out
xor
jmp
sahf
fwait
dec
push
sub
and
loop
orl
testb
hlt
lret
and
je
jo
xor
mov
andl
add
xlat
jg
mov
enter
lret
xchg
lods
add
jbe
lea
lret
repz
subl
clc
mov
jmp
dec
dec
clc
jb
push
jbe
mov
push
jnp
sarl
cli
mov
cli
call
cmp
ja
pop
add
lods
or
adc
out
mov
cmp
leave
lock
movsb
inc
inc
or
cmp
leave
jl
lods
in
cmpsl
sbb
add
sub
mov
je
xor
in
xchg
lds
sub
test
mov
call
cmpsl
mov
xor
ljmp
out
adc
iret
cmp
iret
in
mov
aad
add
mov
pop
add
dec
enter
xchg
jmp
aam
test
mov
jo
cwtl
es
pusha
lret
inc
test
mov
mov
pop
xchg
push
enter
js
xchg
cmp
sti
in
shrl
cltd
mov
mov
mov
cmp
push
push
push
mov
cld
dec
inc
fisttpl
clc
test
inc
repz
dec
mov
mov
icebp
push
mov
rorl
aam
gs
fcmove
mov
xchg
xor
je
addr16
out
jmp
mov
movb
lock
outsb
scas
shrb
and
jnp
mov
add
fcmovbe
mov
add
or
pop
sub
or
add
add
ror
inc
add
int
mov
jnp
int
mov
jns
int
mov
ja
mov
mov
and
ljmp
lods
mov
jecxz
insb
pop
inc
lcall
dec
jl
dec
out
sbb
add
mov
or
icebp
rcl
jno
iret
sbb
dec
lods
mov
mov
push
lea
jae
stos
mov
mov
shr
sub
lock
sub
add
std
mov
in
in
sbb
filds
and
xchg
xchg
insb
dec
mov
pushf
aad
clc
pop
lret
jmp
dec
mov
addb
push
xchg
xchg
adcb
outsb
ja
push
push
dec
in
or
iret
shrl
rcr
add
mov
lods
mov
adcl
std
push
lret
xor
cmp
idivl
add
cli
sti
or
xchg
js
sbb
mov
or
pop
or
cld
xchg
fmul
pop
sub
sbb
cmpsl
sarb
adc
push
ret
inc
lret
sub
jecxz
dec
out
cld
arpl
in
jl
inc
sub
in
sbb
test
push
enter
out
js
leave
add
loopne
decl
mov
xor
sub
add
pop
pop
shrl
jmp
mov
cmp
cmp
add
dec
mov
testl
hlt
mov
mov
lods
fiaddl
xchg
fadds
xchg
xor
push
in
adcb
enter
test
insl
movsb
insl
dec
stos
cmpsb
aad
xchg
lret
pop
jb
lods
xor
aam
cld
push
iret
jge
dec
out
jnp
sub
push
pop
cltd
push
jle
add
dec
inc
aaa
mov
and
sub
adc
sub
scas
xchg
cmp
dec
adc
sub
or
fwait
dec
aad
scas
mov
movsb
dec
push
les
jnp
jp
fcmovnu
jnp
add
jbe
sbb
aaa
sbbb
sbb
sub
sti
jmp
inc
call
repnz
insl
leave
iret
test
mov
jo
aas
scas
lock
or
mov
push
pop
mov
test
or
adc
xchg
les
aad
adc
insl
insl
mov
sbb
or
or
sarb
jo
aam
or
lret
xchg
fs
adc
add
adc
mov
xorl
xorl
dec
adc
cmp
or
ja
scas
and
lahf
pop
dec
or
test
sti
dec
lahf
mov
mov
or
movsb
mull
lret
xlat
pop
jns
mov
or
call
xchg
xor
movsb
sbb
sti
movsb
dec
test
out
mov
frstor
jl
jg
add
inc
push
orb
mov
out
or
jne
dec
mov
push
mov
cld
add
dec
sub
pmuludq
ja
out
dec
daa
cld
insb
xchg
sarl
rcrb
push
push
dec
aaa
mov
lret
push
jne
call
sub
push
or
shrl
mov
std
ds
insl
enter
data16
add
scas
movsb
mov
jecxz
or
or
adc
popa
cli
mov
push
aas
adc
mov
jmp
jecxz
dec
inc
push
dec
pop
jne
mov
pop
xor
jle
stc
xchg
icebp
or
mov
or
push
pop
mov
xchg
mov
mov
pop
shrl
stos
roll
pop
out
js
xchg
mov
push
mov
daa
dec
sub
pop
jle
jecxz
dec
movsb
adcb
imul
pop
inc
jmp
nop
stc
hlt
xor
std
aad
push
js
cmp
jecxz
jmp
faddl
std
mov
repz
lock
or
jnp
hlt
add
mov
jge
call
mov
cmp
fucomi
aam
je
push
push
mov
fcomi
into
jl
loop
hlt
add
in
out
mov
cs
jnp
push
mov
int
js
ds
pop
icebp
pop
push
inc
mov
or
adc
jb
and
sub
push
push
ret
in
in
test
jae
repnz
orb
data16
lds
imul
jge
out
je
lea
enter
in
jmp
aaa
or
mov
add
aaa
fnstsw
pop
jmp
out
push
out
js
add
cmp
mov
dec
idivw
daa
xchg
std
sbb
inc
add
mov
mov
out
push
ljmp
imull
divl
in
mov
std
call
in
cld
push
jl
daa
fmull
insl
pop
jns
jnp
push
or
mov
and
jmp
pop
rorl
stos
fidivl
int3
fisttpl
mov
dec
shll
out
push
xchg
cmpsl
jge
mov
repnz
or
sbb
out
pushf
neg
cmp
sbb
mulb
add
aas
add
sub
cli
fs
jnp
stos
lcall
lcall
dec
cld
adc
pop
cmp
hlt
xor
sbb
jns
adc
sub
add
mov
mov
push
mov
test
aaa
test
xchg
sub
pushf
pop
mov
inc
lcall
jnp
ror
daa
cmp
add
inc
les
call
sbb
scas
pushf
mov
jmp
push
and
in
in
cs
jecxz
dec
dec
mov
test
nop
mov
xor
or
aaa
push
adc
jae
cs
pop
mov
xor
imull
call
or
or
stos
cmp
call
add
xor
repz
push
cmc
mov
hlt
cmp
int3
je
adc
mov
jecxz
or
insb
in
mov
mov
pop
cmp
cmp
in
insl
std
pop
les
inc
in
dec
xchg
cmp
test
jl
mov
pop
or
movsl
jmp
sub
into
faddl
pop
inc
outsb
xchg
mov
dec
cmp
dec
shrb
sahf
mov
daa
fstps
incb
xchg
dec
test
cld
std
push
pop
pop
push
cmp
scas
jnp
cmpb
mov
mov
stc
mov
inc
call
dec
push
pop
mov
push
jecxz
pop
test
shrb
xor
stc
leave
pop
jbe
popf
ror
aaa
shl
mov
mov
icebp
sub
cmp
cld
sub
lahf
cmp
aam
push
imul
add
out
movsl
adc
sub
ret
sub
sub
or
ja
push
std
xchg
adc
stc
sub
and
pop
shl
mov
sar
push
sar
or
in
lahf
cs
lret
sub
jae
data16
and
es
add
icebp
ss
rorb
daa
xor
mov
icebp
stos
push
sub
je
cltd
or
or
test
and
les
inc
dec
int3
rcrl
pop
xchg
adc
shlb
into
dec
or
cmp
jle
dec
ret
sub
mov
mov
ss
les
cmp
vsubps
cld
dec
popf
outsl
pop
lahf
mov
loop
mov
jl
or
repz
add
push
iret
sti
mov
sub
repz
sbb
or
mov
pop
adc
icebp
mov
or
sub
lret
imul
loopne
push
mov
lock
jae
cmpsl
sub
pop
push
popa
push
mov
das
dec
stos
pop
jno
int3
xchg
std
inc
in
rcll
cmpsb
push
jecxz
mov
mov
loop
jmp
or
dec
cmpb
cmp
cld
or
ja
jecxz
inc
or
int3
jns
sub
mov
cmpsb
inc
pop
icebp
inc
and
in
fcmovb
mov
imul
or
xchg
fsts
adc
cmp
ja
inc
ficoms
sbb
notl
jo
gs
mov
mov
in
xchg
ds
add
cmpsl
jmp
test
cli
dec
cld
push
jae
mov
xchg
cs
or
mov
jmp
mov
xchg
loop
or
and
in
and
pop
add
mov
fmull
or
orb
dec
clc
das
cli
mov
dec
add
or
push
add
xchg
sbb
add
mov
xor
test
adc
xor
in
mov
addr16
lods
sub
or
inc
es
xchg
jmp
and
cld
outsl
add
scas
or
adc
stos
sbb
inc
dec
popf
iret
scas
mov
xchg
dec
mov
inc
pop
ja
rcll
add
into
enter
scas
and
rol
aam
add
fs
xchg
dec
jge
dec
add
add
xor
ret
shll
pop
xor
sub
lcall
fdiv
and
adc
jge
mov
add
or
push
in
out
or
pop
es
mov
pusha
sbb
add
mov
add
std
add
jmp
cli
rcr
pop
adc
xor
ret
scas
into
mov
add
mov
pushf
or
rcr
repnz
push
ss
leave
in
sbb
rcll
inc
ds
scas
mov
repz
mov
mov
je
cs
or
add
jnp
or
xchg
in
sub
inc
or
mov
js
add
aaa
mov
mov
xchg
push
dec
xor
xor
in
popf
jo
jp
push
sub
shrb
and
push
adc
push
jmp
jp
lcall
mov
scas
aas
dec
jl
pop
je
dec
lret
cmp
stc
xchg
jl
xlat
das
in
xor
adc
mov
dec
jns
stos
movb
jle
shl
test
inc
ret
arpl
adc
stc
js
inc
mov
lea
fprem1
pop
std
sbb
fnstenv
mov
mov
jl
fildll
imul
aad
mov
stos
jl
leave
test
jmp
jae
mov
add
and
ja
in
fldt
ds
std
iret
fidivrs
mov
lods
int
or
ds
std
insl
imul
gs
xlat
out
inc
add
or
decl
inc
add
icebp
cli
fdivl
je
pop
cs
scas
fstps
sbb
pop
inc
and
jbe
mov
dec
sbb
add
cmp
mov
les
inc
shll
jl
cmpsb
nop
iret
or
loop
cmp
mov
adc
or
jnp
ret
cltd
iret
jb
push
cmp
or
into
sub
add
or
fs
xchg
dec
sar
push
pop
cwtl
and
or
call
adc
mov
add
jl
jg
outsl
sub
in
ret
cmp
mov
mov
lock
dec
cltd
subb
jl
or
pop
subb
mov
clc
mov
push
xlat
out
movsb
test
xchg
leave
loopne
rorl
sbb
pop
popa
xchg
mul
gs
or
mov
fs
repz
sub
movsl
aad
test
sub
mov
hlt
mov
sub
mov
sahf
xor
ret
loopne
cmpsb
push
adc
sub
rolb
push
xchg
mov
ret
iret
or
pop
xchg
jl
xor
lods
or
mov
ret
jecxz
mov
lea
xchg
and
mov
test
in
test
mov
sarl
pop
lods
ja
test
mov
cld
push
add
fsubrs
add
roll
call
outsb
add
or
sbb
rolb
pop
jmp
mov
dec
in
rorl
stos
or
dec
outsb
mov
jge
mov
fistps
inc
xor
sar
mov
addr16
jecxz
dec
jmp
scas
mov
insb
les
sbb
fs
push
and
dec
clc
jp
jl
fst
push
fcoml
mov
stos
leave
inc
ret
iret
xor
js
and
shll
jge
and
ljmp
shll
mov
pop
push
push
lods
fwait
test
pusha
mov
fs
adc
addr16
push
push
cmp
or
or
jbe
sarl
or
cmp
jmp
imul
shll
or
cli
push
fcomi
pop
frstor
es
in
ror
cmp
fldt
jle
aad
add
pop
cltd
popa
nop
aad
mov
sbb
push
pop
loop
jne
fidivs
mov
lret
push
inc
sti
add
pop
rolb
jl
inc
aaa
add
or
aam
pop
sbb
in
cmp
das
iret
mov
lret
test
testb
int3
jl
xchg
call
jmp
cmc
jae
adc
ja
fs
xchg
pop
loop
enter
mov
test
in
out
push
test
out
mov
cwtl
popa
jmp
sbb
jle
xchg
gs
gs
stc
jnp
sub
push
push
jmp
adc
sahf
lcall
les
mov
mov
bnd
repnz
je
popf
inc
jl
sti
adc
and
jmp
pop
test
mov
iret
jmp
popa
mov
mov
dec
movsb
rorl
into
sbb
inc
iret
enter
shr
adc
or
addl
enter
fistl
fidivs
fadds
sub
pop
mov
hlt
fcoml
mov
mov
inc
into
mov
jmp
pop
out
imul
test
icebp
xchg
mov
jmp
mov
inc
inc
fnsave
jns
ret
lea
cli
jo
cmpb
subl
mov
popa
add
cmp
repz
inc
cmp
test
test
mov
cmc
jge
data16
jmp
jb
adc
test
gs
pop
sbb
push
gs
pop
cmc
lahf
test
mov
in
rcrl
pop
push
test
jl
sub
or
pop
dec
or
jecxz
stos
xchg
cmp
movsl
push
ret
add
scas
push
mov
or
jle
mov
sbb
cmp
gs
push
cmp
or
or
fsub
jge
add
xor
repnz
add
mov
ror
scas
or
xchg
movsb
shll
add
loop
and
mov
and
fsubrl
aam
mov
xchg
es
lods
or
lret
dec
rorl
mov
adc
and
adc
jmp
cmp
movsb
mulb
dec
clc
leave
push
adc
mov
lods
insb
stc
mov
push
not
fcmovb
mov
fcmovne
aam
data16
cmp
push
nop
daa
adc
daa
sahf
lret
mov
lahf
ret
mov
add
lock
mov
push
or
push
or
cld
shr
stos
popf
mov
jl
dec
jmp
orb
inc
jp
shrl
adc
dec
insl
scas
pop
movsb
fsubrs
out
out
adc
lret
sub
lret
adc
rcrl
jge
sti
push
sbb
cli
loopne
lods
fsub
aad
sbb
stos
mov
js
jb
dec
ret
pop
add
lea
adc
hlt
bound
rcl
or
push
shlb
sahf
cmp
lea
and
ljmp
int3
movsb
sbb
push
ret
popa
out
sbb
lret
xor
or
add
sbb
shll
jbe
fmul
sub
jno
test
push
mov
xchg
mov
add
std
push
or
sub
test
mov
testl
inc
dec
pop
stos
mov
adc
aas
stc
cli
addr16
pusha
sbb
and
add
or
clc
dec
xchg
and
dec
mov
or
pop
mov
rorl
sub
pop
fidivs
mov
mov
cmc
xchg
stc
dec
das
pusha
and
cli
push
or
jp
inc
mov
and
incl
add
jbe
rolb
leave
inc
sbb
add
divb
popa
jae
or
mov
imul
jb
stc
inc
test
adc
sub
sbb
dec
int
int3
mov
fs
xor
rcl
sub
in
inc
or
hlt
or
sahf
lods
roll
sub
dec
or
stos
pop
lcall
push
iret
jne
mov
jle
sti
mov
pusha
fs
push
idiv
cmp
mov
rcr
stos
lock
test
adcl
ffreep
mov
lret
jle
pop
out
inc
sar
jp
or
fnstcw
xchg
or
push
cmp
dec
or
mov
in
jle
pushl
add
loop
int3
orl
mov
imul
pop
lcall
fs
jge
dec
arpl
sbb
insl
sbb
lods
mov
clc
or
ja
insl
out
jnp
or
test
mov
xchg
jae
ret
lods
scas
rolb
les
pushl
jecxz
in
out
cmp
or
add
dec
jmp
sbb
inc
pop
repz
sub
cmp
fimuls
and
pushf
enter
cmp
fisttpll
or
int3
scas
dec
pusha
ret
mov
int
sub
not
mov
fcomps
push
cmp
movsb
or
into
push
in
jns
ds
cmc
and
and
icebp
in
sarb
idivl
jg
std
add
mov
repz
mov
std
lcall
mov
jno
and
test
sarl
jecxz
dec
inc
pop
inc
nop
cs
ds
jp
xchg
inc
fadds
cld
mov
in
inc
mov
mov
jmp
test
inc
and
aaa
addr16
push
push
mov
mov
fmuls
pop
fwait
popa
lret
jae
adc
ljmp
dec
lock
mov
shrb
jmp
push
je
ret
enter
popf
ret
jle
mov
cld
mov
jnp
scas
push
jmp
imul
stc
mov
pop
repnz
insl
sbb
sbb
jmp
pop
hlt
loop
mov
and
dec
repz
mov
cmc
push
dec
in
leave
imul
mov
enter
add
mov
repz
xchg
mov
shlb
sahf
and
fwait
push
mov
mov
mov
mov
sti
dec
call
scas
sarb
ljmp
pusha
pop
mov
out
imul
fstl
ret
or
xchg
ret
mov
pop
hlt
call
or
mov
mov
in
cs
in
and
pop
xchg
dec
jecxz
enter
dec
add
push
add
cmp
mov
pop
push
mov
push
rcr
imul
add
lds
or
sbb
sub
ss
inc
push
scas
leave
lock
pop
adc
cmp
ja
lcall
es
xchg
mov
fisttpl
dec
jne
and
out
into
daa
setle
sar
nop
ret
int
iret
push
fdivrs
cld
or
cwtl
repnz
cmp
mov
xchg
or
jmp
jl
jns
adc
es
insb
imul
adc
imul
addr16
in
push
mov
xlat
or
inc
jle
add
repnz
ja
ret
leave
repnz
in
adc
cmpsl
inc
adc
xchg
mov
or
addr16
out
inc
inc
cld
ja
cltd
je
cmp
mov
sbb
rorl
ss
fcmovnb
mov
shrl
mov
adc
adc
mov
cmp
leave
mov
jb
pop
and
or
mov
enter
jge
std
lods
mov
fisttpl
push
repnz
and
sub
jp
rcr
add
inc
jnp
aaa
mov
ffree
xchg
je
sub
dec
xchg
xor
fwait
lret
inc
push
cld
hlt
mov
sub
icebp
ret
subl
adc
dec
test
push
dec
jo
cs
mov
bound
mov
add
movl
daa
pop
fistl
es
fistps
subl
fldt
lods
mov
mov
dec
leave
loopne
or
gs
mov
ss
push
dec
pop
jne
rolb
clc
pop
and
enter
addr16
sub
add
insl
add
hlt
test
ret
inc
insl
scas
dec
ja
mov
cs
or
pop
xchg
out
clc
dec
xor
cmp
sub
or
scas
lods
test
rorl
sbb
std
cmp
push
sbb
inc
lods
repnz
in
xor
jl
sub
add
arpl
dec
pop
daa
fadd
jmp
fisubrl
jge
int3
rcrb
pop
jns
mov
xchg
push
aad
cmp
or
xor
mov
adc
jae
pop
sub
push
add
aam
jecxz
cli
jecxz
dec
xor
test
push
add
test
into
ljmp
aam
sub
inc
push
adc
or
dec
and
nop
pop
fcmovne
adc
pusha
jge
clc
popf
out
adc
idivl
std
mov
cld
add
xlat
jge
pop
add
xor
jl
push
mov
or
into
sbb
decb
sti
dec
sbb
push
call
dec
adc
or
and
mov
fwait
push
xchg
mov
inc
cmp
pop
jmp
out
jne
dec
test
inc
les
xlat
mov
cmp
ljmp
pop
inc
add
roll
inc
fcomip
push
loope
pop
dec
repz
sarl
fnstenv
int3
cltd
push
adc
aam
stc
sbb
pop
bound
roll
cmp
adc
lods
add
lea
cli
pop
enter
pop
into
push
xchg
pop
daa
pop
les
mov
pop
add
mov
or
ret
push
movsl
mov
push
push
out
sar
mov
cmp
cmp
mov
jle
cmp
scas
pop
jne
mov
iret
xchg
cmp
ret
adc
mov
cwtl
les
pop
cmp
or
scas
add
pop
in
dec
dec
out
add
adcb
fistpl
enter
int3
int3
adc
sti
scas
xchg
jno
or
cmp
scas
ret
xchg
call
push
dec
push
inc
dec
jl
sahf
popa
mov
mov
loop
cld
ss
jp
jg
std
rcrl
xchg
mov
add
xor
repz
loopne
dec
push
jp
fxch
add
mov
subl
inc
mov
in
jl
rol
out
mov
cli
dec
add
addl
xchg
gs
or
ljmp
push
aaa
cwtl
jecxz
int3
mov
addl
ret
icebp
sahf
cs
loope
adc
insb
jmp
push
cli
in
negb
fcoml
lret
lea
stos
cmp
pop
call
ficoml
jmp
cmpsl
loope
jecxz
shlb
jns
dec
fadds
scas
ret
jl
sub
rep
fiadds
or
stos
or
fcmovnu
mov
in
cmp
pop
cs
push
dec
sbb
arpl
sarb
in
out
cmp
xchg
mov
enter
sub
hlt
faddl
push
jmp
out
hlt
add
test
add
xchg
fwait
push
ljmp
test
xchg
push
mov
in
push
cmp
fdiv
rorb
leave
add
jmp
lock
mull
lahf
in
mov
insl
jp
test
js
mov
out
jg
inc
xchg
or
dec
ljmp
mov
mov
mov
out
mov
jle
add
sub
mov
lret
rcl
cwtl
xchg
fcoms
push
rcrb
cmpsb
xchg
and
mov
repnz
pop
jle
movsl
push
movb
pop
push
sub
aad
repz
add
adc
dec
cmp
out
push
fcompl
dec
jae
mov
push
sub
ja
pop
lock
popf
mov
dec
jno
pop
sbb
adc
jmp
add
insb
and
mov
iret
aas
or
test
filds
adc
enter
cld
loope
xlat
dec
imul
ret
stos
xor
or
out
cmp
inc
jle
les
cmp
cmp
rorl
pop
jmp
shl
mov
vpsubusb
js
in
or
mov
in
cwtl
test
jmp
dec
inc
cmp
in
test
fwait
dec
and
sub
and
iret
leave
jns
xorb
or
fs
mov
push
cmpl
mov
test
rcll
mov
scas
iret
addr16
movsl
mov
xor
pop
dec
add
cmp
sub
shll
lcall
ja
ss
push
sbb
insb
gs
cmc
insb
into
movsl
mov
or
imul
xor
es
call
mov
and
and
cltd
stc
aas
cmp
jbe
insb
mov
or
fnstsw
divl
push
ffreep
jecxz
sbb
daa
push
xchg
out
xchg
lret
add
fsub
sbb
add
das
push
sbb
and
ss
xchg
lret
testb
int
inc
push
out
cmp
rclb
xor
xchg
inc
xor
fisttpl
std
jl
int3
inc
adc
cmp
sbbb
dec
inc
mov
es
js
jl
inc
stos
xchg
sub
in
lods
mov
sti
add
das
scas
rclb
clc
inc
leave
jb
insb
movl
int3
add
fbstp
mov
repnz
add
sub
add
inc
dec
test
scas
sbb
insl
clc
mov
scas
pop
cmp
mov
jle
xlat
cmp
push
mov
scas
mov
mov
push
push
faddl
or
in
add
mov
mov
lcall
dec
sub
sub
insl
mov
lods
dec
cmp
loope
jne
pop
push
enter
enter
xlat
mov
mov
ss
mov
or
add
rcl
inc
dec
adc
imull
gs
xor
insb
cld
jnp
pop
fisubrs
gs
out
xor
outsl
push
test
mov
xchg
inc
test
ja
scas
or
mov
add
jae
sbb
shll
jns
popa
lcall
scas
pop
std
hlt
jnp
mov
lods
mov
call
pop
fdivrl
add
clc
sahf
inc
stc
sub
mov
cmp
fwait
andb
xlat
sbb
repnz
stos
pop
cmp
xor
scas
dec
in
sti
add
lock
or
pop
inc
xchg
cmc
insl
cld
or
insb
iret
cmpb
ljmp
xchg
jae
and
insb
in
or
mov
push
jecxz
in
cmp
sarl
repnz
sahf
fdivs
das
cmpsl
mov
jecxz
mov
add
or
adc
mov
fbstp
movsb
push
data16
shll
jecxz
or
jmp
adcb
cld
mov
inc
out
clc
jl
push
inc
mov
xchg
lock
jo
jp
test
aaa
or
and
ror
push
lods
adc
and
inc
ja
and
or
cmp
dec
push
adc
int3
fadd
scas
dec
jp
dec
jmp
push
test
or
mov
cld
pop
cwtl
cmp
xlat
into
mov
ds
pop
sbbl
repz
cltd
sub
cwtl
fs
cmp
outsl
push
mov
inc
mul
std
fs
inc
mov
scas
scas
out
je
cmpsb
or
sbb
pop
fs
add
mov
jns
movsl
cld
mov
cmpsb
xor
pop
cmp
push
es
inc
or
sarl
outsb
into
lock
stos
roll
loopne
mov
aad
mov
push
or
jecxz
leave
mov
cli
mov
add
dec
xorb
inc
mov
rorb
pop
xor
rcrb
or
cwtl
stos
mov
iret
test
mov
sbb
jae
int3
or
sbb
call
jp
xchg
push
cwtl
shl
jl
xchg
and
and
adc
cmp
outsl
mov
cwtl
mov
sahf
lds
ja
test
mov
or
movsb
adcb
stc
test
idivb
mov
clc
mov
jo
rcll
bound
cmpl
dec
sub
sbb
je
mov
hlt
add
xor
and
add
aad
add
and
and
xor
mov
lock
xor
mov
sub
mov
lods
inc
jb
pop
leave
in
or
shl
cli
dec
out
dec
mov
leave
shrb
mov
jecxz
rcll
push
sbbl
pop
jle
cli
std
add
js
cmp
jecxz
lcall
dec
std
mov
add
add
out
mov
ljmp
loop
out
fdivr
scas
rcrb
out
push
cmpsb
lock
ret
hlt
aaa
cli
xchg
testb
test
push
xor
jbe
cld
mov
hlt
dec
or
outsl
ss
or
ret
xchg
jle
and
lret
fsubs
stc
adc
xchg
mov
ja
scas
lcall
dec
xchg
loopne
mov
cmp
adc
cmp
pop
mov
ss
into
stos
xor
mov
mov
mov
iret
jb
inc
push
in
push
rorb
aad
dec
rcll
aaa
jnp
add
les
lods
ds
or
mov
lret
adc
cmpsb
sbb
dec
shrl
push
in
adc
in
and
add
lea
add
mov
or
subb
std
dec
jae
add
lret
cmpsl
xchg
popa
fisubrs
rclb
pop
xor
notl
pop
pop
mov
or
cmpsl
mov
jne
cmpsl
push
add
jg
push
std
stos
pop
mov
stos
aaa
and
je
cltd
cmp
xor
bound
adcl
rorb
mov
inc
jmp
add
js
mov
jmp
icebp
flds
in
push
leave
sub
sub
inc
mov
add
cwtl
leave
sbb
add
push
fsts
or
test
push
les
data16
rol
loope
add
jmp
dec
push
aad
frstor
jl
jle
lock
aas
push
ret
pushf
fcmove
test
dec
or
mov
js
cmp
lret
lret
lcall
test
or
popf
inc
and
jge
and
sbb
out
mov
push
add
mov
cmpsb
roll
incl
stos
adc
push
lret
push
pusha
sti
aas
sub
stc
mov
xor
lock
pop
dec
add
fisttps
hlt
repz
addb
ds
outsl
jnp
out
dec
mov
iret
jo
and
jo
stos
stos
push
imul
fsubr
push
mov
jp
mov
test
mov
test
pusha
int
ret
shll
mov
cmpsl
stos
cmp
lds
xor
xchg
sahf
lret
mull
popa
je
jle
std
or
jmp
aaa
push
hlt
cmp
and
mov
aaa
pop
inc
xor
sbb
js
mov
or
stos
ret
mov
or
adc
add
aas
sub
mov
xor
dec
and
push
add
jmp
or
out
push
mov
addr16
jp
and
mov
mov
or
lahf
mov
sbb
or
and
xor
add
jns
ret
lcall
add
sbb
lretw
loop
es
mov
loope
fnstenv
movsl
pushf
mov
mov
push
or
int3
insb
ds
sti
insl
testb
cmpsb
push
sti
cmp
sub
rorl
sti
cmpsb
test
sbb
stos
add
mov
inc
fwait
xor
in
and
das
fisttps
lret
mov
movl
jge
jp
cmp
jmp
or
add
movsl
jmp
mov
aad
mov
mov
or
adc
inc
sub
mov
jnp
inc
push
popl
std
push
ja
add
notb
je
das
sti
ret
push
pop
jbe
scas
imul
sbb
dec
mov
enter
lods
xor
mov
lods
mov
xchg
sar
aad
or
lods
dec
mov
adc
cwtl
daa
jmp
sub
push
xlat
fdivs
push
cmp
gs
lea
jge
or
cltd
pop
jge
cmp
cmpb
rol
loopne
fiadds
ret
clc
aad
stc
ja
add
mov
sar
cmp
mov
or
aaa
push
mov
js
push
sbb
dec
pop
push
adc
lret
or
jl
cmpsl
enter
xchg
pop
mov
push
cwtl
fadds
mov
sbb
inc
xorl
sarb
rcll
bound
ljmp
out
flds
push
fcmovb
das
add
or
jl
rorl
cld
je
dec
mov
mov
aas
test
dec
orl
push
outsb
cmp
add
dec
dec
pusha
xor
jmp
mov
dec
push
rcl
imul
xchg
outsb
jo
jo
sbb
jge
lret
inc
adc
or
loop
sub
clc
cld
adc
rcrl
xor
push
or
jp
test
cmp
stos
ljmp
sahf
pop
call
push
in
push
jecxz
fisubrs
jb
xorl
mov
mov
stos
inc
stos
mov
push
fwait
pushf
out
call
adc
shll
or
or
inc
adc
fs
scas
jne
xor
dec
jle
icebp
lock
jmp
pop
std
add
add
dec
adcb
not
lret
pop
mov
jb
aaa
into
mov
lock
nop
clc
repz
daa
push
pop
push
push
mov
add
jmp
jno
add
ds
dec
lahf
xor
sub
mov
ds
add
mov
idivb
scas
pop
jmp
pop
addr16
mov
sub
sbb
jmp
push
pushl
call
mov
mov
cltd
das
xor
mov
enter
cmp
cmc
adcb
cmpsl
outsb
inc
add
out
lds
dec
add
sti
mov
push
mov
sub
push
cmp
shr
mov
and
popf
out
adc
jne
cltd
sti
mov
divl
cmc
cmpsl
pop
push
in
push
push
out
daa
mov
lods
xchg
enter
repz
inc
leave
sub
mov
in
or
push
cli
mov
jl
fmull
sub
and
hlt
add
fmull
inc
dec
ret
xchg
fisttpl
lock
cmp
inc
jle
fs
cmpsb
push
sub
inc
cmp
dec
adc
fildll
dec
pop
ja
push
sub
xchg
ja
jg
mov
repnz
loop
icebp
imul
mov
mov
fisubrs
popf
inc
int3
cmp
out
scas
sub
stc
pop
jnp
or
or
movsl
imull
mov
or
popa
mov
loop
rolb
mov
clc
xchg
sub
adc
jo
jo
mov
test
lret
not
mov
mov
scas
cltd
fmull
dec
cmpsb
sub
repnz
xchg
pop
push
out
lods
dec
sub
jmp
mov
dec
jl,pt
or
inc
jmp
cmp
or
dec
scas
or
andl
add
cmp
or
pop
mov
inc
add
in
and
into
and
aad
repnz
mov
movsb
xchg
jp
leave
or
jne
cld
lock
lea
push
enter
xchg
addl
mov
call
nop
sub
pop
mov
lahf
cld
cbtw
cmp
shl
push
call
add
or
shll
fs
fcomps
stc
pop
out
test
xlat
mov
inc
adc
jle
cmpsl
dec
sahf
or
lret
sti
push
sub
pop
jge
mov
cmc
inc
jl
das
ja
lock
movsb
cmp
int
stos
push
testb
aam
shll
out
inc
sti
rorl
mov
mov
int3
nop
sub
or
ljmp
addb
lret
lock
push
aam
arpl
ret
repnz
jno
shl
ret
mov
jp
cmp
ljmp
fcompl
ljmp
xor
in
mov
ret
lods
stc
int3
ds
test
jmp
sub
test
lock
outsw
or
sbb
jp
ljmp
outsb
idivl
jg
mov
push
fcomps
std
xor
enter
dec
pop
ret
shr
adc
sbb
or
dec
sub
stos
pop
push
mov
jo
mov
dec
push
lret
or
mov
push
push
dec
lock
sahf
sti
or
repz
jmp
xor
pop
or
call
mov
sbb
lea
sub
or
mov
dec
fldenv
testl
ljmp
test
and
push
lcall
mov
lret
cli
jo
jns
push
add
les
dec
cmp
rcl
xchg
mov
shr
cmp
fmuls
xchg
loope
jne
mov
aam
inc
or
icebp
xor
ret
mov
mov
or
push
filds
mov
or
not
add
in
enter
subss
xchg
fldl
icebp
ja
dec
clc
leave
mov
arpl
ret
or
mov
cmp
int
fsts
inc
call
or
dec
sbb
inc
popf
mov
fisubl
xor
rolb
movsl
into
push
pusha
sbb
sub
jmp
std
test
mov
cmp
shll
stos
sub
pop
add
idiv
nop
dec
jge
sbb
repnz
xchg
rcrb
stc
or
jae
or
xchg
inc
mov
dec
aad
dec
shll
xchg
aaa
ja
sub
repz
cmp
shll
xor
mov
call
jnp
mov
cmp
and
add
sbb
sar
mov
or
mov
jg
mov
or
fsubr
mov
jno
jmp
xorl
fisubs
push
jns
jmp
data16
ja
push
dec
fisttpll
int3
lock
lods
adc
cwtl
cmp
push
push
loopne
pop
mov
mov
test
adc
es
movsl
mov
pusha
cli
or
jae
enter
inc
xchg
jmp
lods
aaa
bound
adc
adc
mov
pusha
sbb
xor
ljmp
jl
rorb
adc
mov
xchg
in
inc
in
out
add
xorl
maskmovq
divl
leave
or
movsb
addr16
add
arpl
mov
sbb
adc
lea
adc
pop
leave
shl
dec
lock
stos
cmpsl
add
xchg
jp
movsb
mov
pop
push
ret
xchg
push
mov
jp
leave
sahf
or
mov
pusha
adc
inc
shll
les
out
in
mov
pushf
repnz
rorl
xor
push
cmpb
mov
sarl
push
out
movsb
adc
ja
cmpsl
lcall
adc
sbb
or
popa
add
fwait
add
rcrl
lods
fdivr
jae
add
call
out
push
ret
dec
arpl
push
cmpsl
rcr
cs
sub
lods
push
xchg
leave
pop
mov
movsb
and
pop
lods
cmp
fcomip
mov
stc
cmp
rcr
ret
cmpsl
lds
pop
sub
notl
and
jecxz
fldt
or
lahf
mov
and
aad
fcmovne
shrb
fcom
stos
aam
fildl
fisttpll
fsubrs
loopne
stos
loope
fildl
sti
fsubrl
in
stos
in
filds
sti
loopne
shl
pop
aad
push
jl
sarl
sbb
callw
test
push
mov
mov
or
daa
dec
call
test
or
sar
int3
xor
add
rol
pop
xchg
stos
mov
mov
inc
push
sahf
sbb
or
or
test
in
mov
loopne
std
mov
lods
call
inc
out
add
imul
cli
enter
sarb
ljmp
jl
adc
mov
loope
xlat
mov
lahf
out
andl
fnsave
std
lods
movsl
cmc
mov
mov
repnz
cmp
icebp
repz
xor
notb
jge
cmp
add
mov
jnp
xchg
stc
mov
jb
pop
mov
lret
icebp
mov
ja
jo
mov
jge
dec
xchg
out
sahf
hlt
or
jns
shr
aaa
mov
mov
push
shll
int3
or
repz
mov
ja
or
daa
pop
push
push
enter
jae
jl
mov
push
mov
dec
mov
xchg
je
insb
xor
cs
cli
mov
xor
stc
xor
hlt
add
stc
mov
xor
cmc
sarb
addr16
movsb
dec
mov
or
mov
repz
dec
dec
lock
leave
hlt
or
and
cmp
insl
fwait
leave
fmuls
mov
jnp
adc
dec
push
mov
pop
push
or
mov
mov
mov
iret
cmp
dec
sti
aad
mov
mov
neg
jb
out
jge
xor
cmp
pop
scas
lret
mov
insb
pop
hlt
xchg
sub
or
lds
js
leave
jnp
mov
inc
leave
inc
or
dec
arpl
mov
mov
push
mov
out
mov
or
push
or
mov
jl
out
cld
dec
out
push
je
xchg
or
imul
xchg
adc
jl
jo
adc
ret
or
lods
xor
iret
nop
ljmp
ror
or
shll
or
push
mov
lret
cld
jmp
ss
inc
fprem1
inc
dec
fdiv
mov
cmpsb
mov
push
add
inc
dec
push
mov
jg
mov
stc
sar
cmc
jge
int3
les
inc
and
fxch
gs
add
push
aas
push
push
fldl
cmp
fsubr
cld
repz
jne
add
cwtl
fstp
rcr
les
cld
mov
out
push
jmp
loopne
scas
add
aam
lret
test
test
decl
ret
pop
fiaddl
mov
xor
or
jno
add
adc
or
out
lahf
shrb
or
aam
add
xor
fimull
sbb
leave
jle
cmp
dec
push
or
cli
xchg
insb
fistpll
dec
cmp
and
sub
inc
sub
mov
test
aas
mov
add
xor
sti
xor
aas
aaa
fucomi
cltd
dec
insl
inc
push
lret
nop
fdivp
ja
or
aam
push
inc
in
fisttpl
or
or
dec
jbe
fsubs
sub
mov
or
jne
mov
mov
add
stos
js
add
lahf
lcall
rcrb
aaa
mov
enter
and
decl
leave
fxam
mov
push
out
int
sub
pop
mov
sub
ffreep
mov
add
stc
cmp
jb
mov
mov
lods
iret
pop
push
addr16
ret
or
or
decl
adc
inc
hlt
inc
out
loopne
or
stos
divl
fimuls
inc
cld
xor
inc
add
outsb
mov
out
cmpsl
add
sbb
bound
sar
or
mov
mov
aas
add
push
pop
fidivl
pop
mov
or
mov
sarb
or
jns
shrb
out
xchg
xor
mov
sbb
sbb
ds
fs
push
and
push
js,pt
iret
fcmovnb
or
roll
sti
mov
stos
sti
pop
test
sub
pop
xor
mov
scas
pop
add
js
xchg
mov
das
jns
das
pop
icebp
ss
js
nop
mov
mov
xor
jne
stos
jmp
ret
ret
sti
jb
fimull
in
clc
mov
or
sbb
fdiv
mov
dec
pop
add
cmc
or
mov
sti
mov
stos
mov
bound
test
pop
int
mov
enter
ds
cmp
pusha
xchg
out
sub
add
dec
jle
ljmp
or
mov
mov
frstor
add
stc
in
loope
pop
pop
push
mov
add
std
or
xor
push
call
call
cmpsb
out
mov
and
sti
or
loop
call
or
push
sbb
add
push
enter
out
outsl
ss
push
cmc
sub
xchg
es
or
and
and
es
add
mov
mov
ja
cmpsb
lahf
pop
lret
cmpsb
add
clc
ja
pop
sub
stc
shrd
cmc
jmp
jo
in
add
add
aaa
push
roll
lret
in
bnd
mov
pop
test
std
std
lret
std
nop
lock
or
jne
cs
loop
fstpt
jmp
cmp
xchg
dec
add
cli
sub
lods
dec
and
in
dec
sub
jmp
iret
into
cld
jmp
jmp
seto
or
rcll
loop
jae
or
cmc
je
mov
or
cli
add
loop
nop
inc
call
shlb
jmp
fcomi
push
cmp
or
fcmove
loopne
pop
or
enter
add
or
rorb
std
jp
pop
lret
mov
sti
leave
or
dec
fstpt
out
lret
fdivrl
mov
jle
mov
inc
cld
adc
add
lock
aaa
filds
pop
inc
out
inc
jb
stc
add
cmc
jecxz
pusha
out
push
nop
shlb
in
or
mov
test
xor
ror
add
mov
sti
jb
hlt
jo
shll
add
ret
ljmp
lret
out
inc
add
mov
repz
jecxz
or
not
imul
leave
add
jp
fildll
insl
cli
aas
pop
mov
or
mov
mov
jp
icebp
negb
or
sti
cs
scas
push
out
xlat
cmpsb
ljmp
enter
out
pop
out
mov
nop
lods
push
shlb
iret
lret
clc
scas
sub
into
cs
insl
test
lret
fdivrs
pop
aam
dec
add
or
jle
ds
test
test
int3
mov
ror
imul
cli
std
push
repz
add
hlt
push
decl
xor
lcall
push
jnp
mov
in
fcomi
loopne
push
fpatan
xor
sbb
push
add
cmp
jge
mov
rcr
pushf
out
orb
cltd
rorb
xor
jae
jns
add
add
jae
stos
repz
push
movsl
mov
insb
rcr
inc
shll
sub
inc
dec
add
sbb
xchg
xchg
cli
push
movsl
xchg
xchg
add
xchg
icebp
adc
daa
repz
sti
dec
stos
rcl
sbb
mov
add
lds
icebp
or
repnz
push
or
test
insb
inc
scas
mov
insb
insb
testb
jnp
bound
or
cmpsl
mov
mov
int
shll
dec
insl
clc
or
mov
xor
iret
inc
inc
jae
dec
stos
and
movsb
popa
enter
xchg
aaa
jo
aam
movsl
push
pushf
and
adc
in
mov
aam
adc
aad
rolb
sbb
bnd
into
setge
xchg
lock
push
std
ds
cmp
cld
in
or
gs
pop
scas
mov
push
pop
inc
mov
and
popf
iret
in
les
inc
sahf
addr16
test
enter
jle
cwtl
or
xchg
or
popf
aaa
mov
stc
loopne
loop
roll
jmp
lds
js
mov
lock
repz
pop
xchg
lds
jae
dec
shll
xor
push
in
xchg
push
adc
sub
cmpsl
mov
xchg
or
std
push
nop
loope
scas
popa
jnp
rcrb
pop
inc
push
lock
mov
mov
insl
sub
pop
xor
decl
sbb
outsb
cwtl
push
push
scas
imul
icebp
sti
shll
push
test
mov
std
sbb
out
sub
mov
push
mov
dec
or
shrl
daa
mov
fisttps
mov
xor
jbe
mov
sub
scas
js
in
pop
cs
xor
jp
repnz
jbe
test
mov
fwait
int3
mov
adc
xor
movsl
pop
divl
je
add
xchg
ficompl
add
ds
loope
inc
data16
movsb
mov
outsb
sub
mov
std
lea
xchg
dec
sub
notb
xchg
stos
jmp
in
test
mov
test
push
insb
inc
xor
fdivr
movsl
adc
inc
jl
add
pop
push
cmc
jmp
mov
and
cld
movsl
sub
movsl
xchg
or
or
fiadds
mov
lret
or
mov
jnp
cli
mov
mov
jns
ljmpw
scas
pop
adc
sbb
mov
xor
pop
jmp
aad
das
fmul
mov
lret
xchg
scas
iret
sar
mov
cld
cmp
mov
mov
mull
dec
push
nop
icebp
movsl
sub
sbb
sbb
xchg
jbe
xor
pop
push
faddl
ret
out
jl
jno
aaa
sub
pusha
ret
inc
xor
testb
in
lahf
shl
hlt
jmp
outsl
les
roll
jbe
add
pop
fisttpl
hlt
inc
push
inc
hlt
jb
inc
movb
cs
adc
icebp
pop
mov
push
push
pushf
and
inc
or
shrl
cli
rclb
ja
outsb
inc
scas
fwait
hlt
movsb
ljmp
push
or
add
xor
cmp
stos
mov
or
xchg
jg
push
add
or
or
rcll
stc
xor
daa
push
movsl
add
inc
cld
or
movsl
xchg
fbstp
inc
rcr
out
aaa
mov
jno
pop
leave
or
daa
jns
mov
lret
dec
icebp
xchg
stc
rcrl
inc
sahf
jp
xchg
inc
sar
test
jnp
enter
push
and
xor
ss
stc
or
inc
dec
outsb
push
cs
int3
mov
cmp
xchg
js
mov
pop
push
int3
xor
test
and
cmp
jp
js
insb
mov
jl
dec
sti
mov
xchg
cmc
xor
add
cmp
leave
cmpb
jl
shr
dec
cmp
sar
dec
xchg
jl
cmp
pop
dec
cmp
fldz
out
or
sti
ss
imul
pop
test
sub
jl
in
les
mov
or
or
add
into
mov
call
imull
cmp
mov
sahf
stc
iret
ljmp
hlt
xor
or
pop
test
in
xor
fmuls
pop
mov
das
xchg
mov
in
addr16
adc
mov
inc
mov
clc
pop
lds
out
sub
int3
sbb
or
scas
dec
cld
mov
ljmp
push
cld
roll
cmp
test
rolb
sahf
pop
test
shll
xchg
lds
dec
cmp
mov
dec
add
push
cmp
pop
or
test
adc
leave
mov
orl
push
dec
pop
jne
lods
cmp
mov
xor
pop
fnstsw
sbb
pop
lret
inc
movsb
loop
icebp
aam
int3
add
jnp
sbb
movsb
repz
ret
scas
sub
adc
enter
fmuls
cld
in
in
pop
add
adc
cmp
sbb
sti
outsl
daa
sub
jecxz
xchg
bound
lret
adc
iret
push
and
adc
lret
fcompl
lret
mov
and
cmp
aas
dec
dec
pop
jmp
mov
sbb
ds
lock
or
or
icebp
xchg
dec
or
roll
or
xor
push
lds
mov
jae
sbb
leave
cmp
add
std
or
es
in
stos
mov
jg
adc
pop
rcrl
loope
rorb
int3
repz
jl
les
in
ja
stc
pop
sti
lock
xor
lods
jne
arpl
or
jle
push
pop
scas
dec
fisttps
dec
add
aaa
cld
and
out
das
push
xor
ljmp
mov
cli
out
mov
and
sub
jmp
insb
add
inc
icebp
or
jmp
xor
testl
dec
iret
lds
xchg
into
icebp
mov
cmpsb
inc
mov
sub
or
xchg
fmull
adcb
test
loope
or
in
mov
movsb
test
loope
pop
adc
popa
movl
addl
sbb
or
aaa
stc
fisttps
rol
cwtl
inc
sbb
mov
push
or
icebp
pop
decl
cmp
pop
scas
xchg
loopne
test
cmp
jle
add
loop
add
loope
cld
mov
inc
test
push
dec
sbb
jp
in
ret
inc
clc
mov
bound
push
add
jae
or
ljmp
xlat
mov
or
ret
rorl
or
pop
leave
int3
ret
jge
fstpl
stc
shrl
jp
ljmp
or
hlt
cmp
push
adc
cmp
test
cld
add
dec
mov
jmp
pop
jnp
in
fstps
adc
lahf
fsubs
xor
add
or
mov
int3
movsb
or
sbb
add
in
mov
rcrl
cld
std
xorl
xor
jle
daa
test
rolb
ret
pop
dec
inc
push
clc
roll
mov
clc
or
add
fnstcw
test
mov
ja
shl
enter
cmpb
aam
xchg
filds
pcmpeqd
push
stc
push
jg
les
add
popl
aas
vpsubusb
pop
fisubl
lods
loop
xchg
or
cmp
push
mov
xlat
call
lea
add
sbb
fsubl
cld
sbb
cmp
cmp
cwtl
pusha
scas
sti
test
test
rorb
mov
imul
mov
sbb
int
mov
pop
aad
into
inc
out
sbb
cld
pop
lret
mov
xchg
mov
dec
cld
ror
fisubl
cwtl
ds
adc
enter
inc
ror
ljmp
jmp
dec
pop
jmp
pop
les
sbb
test
sahf
nop
stos
cs
cmp
js
or
mov
jmp
dec
fwait
mov
xchg
pop
outsb
imul
loope
cwtl
aam
or
push
loope
lret
or
fcoms
rcll
fdivs
in
les
mov
fsubrl
mov
scas
mov
adc
shrb
call
test
rcr
mov
jp
das
and
rcr
bound
addb
jo
ja
cltd
pop
add
and
pushf
xchg
divb
jle
pop
ja
shl
jmp
test
add
jl
fsubl
mov
out
xchg
cmp
push
cmp
or
loopne
dec
shlb
sub
mov
loope
mov
cwtl
jbe
jmp
jmp
idivl
cld
push
add
adc
pop
sti
mov
fmull
popf
pop
fildl
cli
fsubr
mov
xchg
cmpsb
adcl
ffreep
data16
lock
pop
mov
lods
js
aaa
xchg
out
pop
test
call
andl
pushf
lcall
mov
scas
scas
or
inc
push
mov
jmp
pop
xor
mov
clc
cld
fs
loope
push
ret
roll
lret
cmp
fmuls
aad
rclb
stos
iret
cmp
push
dec
leave
push
fisubrl
dec
cmp
scas
out
xchg
push
jge
scas
test
xchg
jnp
js
pop
jbe
test
aas
mov
rol
push
xchg
or
adc
inc
shll
scas
int3
roll
scas
decl
mov
add
nop
in
std
rcl
in
push
jno
je
or
bound
cld
mov
dec
xor
jp
sti
or
cld
mov
ds
dec
cmp
fsts
sub
inc
and
add
movsb
out
jne
xchg
add
das
or
or
cmpsb
lods
mov
les
push
mov
les
ljmp
into
fmull
je
xchg
push
and
pushf
cld
sub
lret
nop
cltd
jmp
imul
aaa
xchg
sbb
out
lcall
popa
test
jnp
rcl
out
arpl
in
or
adc
jb,pn
pop
jge
daa
jmp
stos
add
rcl
cli
jl
xchg
push
insb
aam
jmp
cmp
in
bound
je
int3
stos
sub
test
mov
sbb
inc
sarl
bound
cltd
shlb
test
ds
push
scas
jle
cmp
mov
test
inc
push
fadd
repnz
jb
fs
ja
into
in
ss
or
inc
or
jle
cmp
cli
repnz
xchg
and
mov
lods
loopne
sbb
stc
sub
cld
and
sub
in
or
popf
add
xor
mov
sub
cli
jp
les
lret
mov
sarl
sub
mov
cli
pop
dec
fs
xchg
xchg
das
idivl
shll
or
enter
idivb
jle
jl
test
rcl
or
stc
addb
jb
mov
lret
or
aam
jl
jle
and
ficoms
fistpll
push
mov
add
push
mov
xchg
cwtl
inc
mov
aaa
jb
insb
cld
mov
lcall
leave
and
dec
add
test
test
in
push
add
icebp
or
mov
aaa
or
sbb
jl
jne
ret
pop
add
bound
pop
xlat
js
in
loop
xchg
shll
pop
ret
cmp
cmp
lods
es
dec
test
mov
ja
jg
adc
mov
fxch
cmp
pop
shll
or
xor
scas
push
push
adc
mov
sti
lret
sub
dec
pop
mov
jns
or
pop
fwait
lret
mov
mov
mov
iret
jb
popf
lock
xor
mov
and
aam
mov
fisttpl
pop
mov
test
mov
dec
mov
popa
jo
fcmovb
in
cmpsl
div
jo
ljmp
stc
clc
ja
pop
and
loop
ljmp
gs
and
cmp
pop
ret
lret
add
push
leave
and
inc
hlt
repz
stos
decl
loopne
dec
test
mov
cmp
sbb
hlt
and
je
ret
jb
ss
clc
or
ljmp
arpl
mov
jmp
jnp
inc
adc
dec
xchg
sarl
mov
ds
mov
mov
hlt
bound
dec
mov
dec
dec
dec
jnp
in
lock
ret
shll
repz
sbb
fwait
ds
shll
into
and
roll
in
adcb
sbb
push
add
pmaxub
xor
push
jns
adc
pop
divb
add
mov
sbb
push
mov
dec
loope
mov
dec
out
mov
jp
je
test
add
add
inc
dec
lret
push
xchg
xchg
cmpsl
cld
aaa
fwait
shll
fidivs
fwait
xor
mov
mov
and
jne
sti
inc
push
pop
mov
mov
jmp
push
mov
hlt
and
mov
stc
sub
jp
mov
dec
rcrb
repz
lea
jo
enter
push
push
aas
and
add
add
es
mov
mov
lods
adc
mov
or
or
or
out
std
cmp
or
int3
mov
enter
daa
mov
inc
or
cmp
mov
addb
ljmp
push
mov
andb
shll
ret
stos
out
lret
nop
push
jae
or
jp
cmp
xchg
xchg
imul
xlat
sarb
or
icebp
mov
test
psubusw
cmp
lock
daa
lret
scas
sbb
cli
out
stc
fimuls
stos
test
cmp
test
mov
ss
mov
ret
sbbl
out
inc
dec
stos
cmp
mov
dec
push
imull
or
inc
cmp
mov
cmpsl
inc
hlt
cmp
psrlw
or
sbb
inc
int
sbb
jns
dec
lret
jnp
mov
sub
dec
leave
and
out
xor
add
js
js
mov
fsubrl
mov
xor
or
sub
jbe
inc
pop
inc
in
subb
iret
mov
jo
add
popa
adc
or
rol
adc
jns
stos
hlt
pop
xor
into
xchg
movsb
loope
or
add
xchg
lahf
rorl
stos
pop
sahf
inc
or
sahf
jl
ret
cmp
pop
mov
add
test
fildl
xor
ret
call
rorb
or
mov
or
jb
js
dec
jecxz
add
xchg
push
test
mov
cld
xor
imul
call
jmp
add
lea
les
jl
fldt
ljmp
add
add
das
mov
add
pop
fcoml
add
test
movsb
shlb
xchg
mov
iret
jl
pop
ror
pop
imul
cld
add
jl
les
daa
xlat
cmpsl
jne
mov
adc
into
lahf
icebp
push
icebp
data16
in
test
mov
adc
mov
roll
das
cld
and
incl
fs
or
ret
test
into
jnp
inc
test
lds
shrb
xchg
out
lret
ret
mov
pop
les
mov
arpl
jns
xchg
fadds
mov
lret
cmp
in
inc
fisubrl
rclb
pop
cmc
mov
aam
sbb
jle
jp
lret
jb
in
rol
jg
insl
inc
cmp
js
mov
subl
je
sub
sbb
mov
test
test
ss
mov
shl
xchg
loope
mov
hlt
and
fs
enter
xchg
inc
out
pop
scas
sbb
shrl
test
inc
movb
rclb
adc
repz
fisttpl
cli
mov
push
and
cmp
xor
cmp
mov
jl
jmp
jnp,pt
dec
lods
test
or
iret
and
leave
cmc
mov
or
mov
and
sbb
sbb
gs
and
xchg
sets
inc
and
out
cmpsb
jle
stos
sqrtps
pop
push
clc
mov
scas
or
jbe
mov
sbb
stos
arpl
xor
mov
aaa
hlt
in
push
scas
hlt
add
add
pop
jne
xchg
and
sub
add
leave
in
clc
add
das
pop
ret
fidivl
hlt
push
lret
add
add
call
sub
test
or
xor
fmuls
ret
adc
xor
sub
jns
dec
out
int3
inc
cmp
ja
loopne
shr
cmp
xor
popf
movsl
cmp
lods
mov
or
mov
mov
ret
movl
hlt
rorl
mov
orl
repnz
mov
dec
cld
xchg
pop
stos
test
mov
push
aad
pop
pushf
jmp
mov
cmp
imul
or
ja
ret
test
aad
iret
and
mov
push
andl
insb
mov
inc
mov
jae
ja
pop
jb
aaa
mov
push
insb
mov
add
loopne
iret
dec
pop
pop
movsb
fisubrl
js
mov
jmp
push
dec
int3
mov
jge
push
into
std
decl
dec
test
imul
ja
fs
sub
cmpsl
mov
in
push
or
mov
jbe
faddp
push
xchg
jle
cld
clc
lods
jmp
dec
lods
mov
inc
pop
mov
js
scas
sub
aad
ljmp
cld
jle
mov
not
mov
jb
inc
movsb
fsubl
adc
sub
out
inc
jmp
insl
or
push
pushf
sbb
stos
or
cmp
push
inc
mov
orb
aaa
or
xchg
dec
in
jne
jmp
mov
test
dec
add
test
sahf
lea
ret
jg
lret
arpl
push
jmp
les
and
xchg
ss
sub
or
push
xor
call
jmp
popf
ss
leave
fisttpll
jge
jne
jne
test
addb
dec
clc
pop
sub
aad
dec
mov
test
add
gs
imul
rol
rol
lcall
ret
mov
lods
jg
and
mov
das
xor
pop
sti
jns
xchg
leave
sti
mov
lods
push
gs
mov
out
inc
test
mov
leave
rcll
test
pop
jo
mov
movsb
pusha
lcall
or
mov
jmp
mov
dec
lret
test
inc
xchg
icebp
ljmp
sub
push
mov
add
mov
cmp
xor
mov
xchg
xor
cli
sub
lcall
xchg
out
add
xchg
inc
mov
jo
rcll
loopne
mov
mov
repz
outsl
cli
mov
or
xor
cld
in
ficoms
jmp
fs
int3
stos
jg
jb
test
out
mov
pusha
aaa
dec
inc
test
jle
dec
mov
stc
jecxz
pop
cmp
mov
jg
dec
push
ljmp
or
pusha
cwtl
dec
js
and
adc
shll
or
stos
jl
dec
inc
mov
sarl
pop
sar
ret
out
out
pop
dec
lahf
out
scas
inc
stos
out
sbb
frstor
push
dec
pop
lret
pop
lcall
and
dec
stos
adc
repnz
and
cmpb
pop
xchg
sti
rcl
stc
jae
dec
test
je
orb
xchg
incl
int3
popf
jmp
add
idivl
mov
inc
sbb
out
insb
sbb
add
rolb
mov
aaa
sbb
jbe
stos
lcall
popf
cmp
fdivl
or
dec
or
xchg
div
inc
imul
adc
mov
in
ja
fistps
aad
push
std
jl
inc
xchg
jne
outsb
mov
xchg
lret
fbld
sbb
gs
pop
ret
mov
inc
fistpl
lcall
scas
jg,pt
dec
rcrl
mov
jl
push
cltd
dec
pushf
cmpsb
inc
pop
pop
cmp
and
ds
insl
or
nop
out
test
clc
push
mov
lds
mov
insl
pop
lods
cmp
loop
shrb
popa
push
int
push
jmp
jl
les
aad
lcall
rorl
loope
les
add
loopne
inc
mov
sahf
sub
scas
inc
jb
pop
cmc
cld
fcompl
iret
sbb
in
mov
sti
dec
subl
notl
mov
inc
inc
rorb
enter
mov
ja
sub
out
test
dec
jae
and
aad
gs
outsl
lock
mov
les
mov
shr
xlat
out
divb
imul
fildl
shll
test
aad
rol
sbb
cli
pop
fwait
pop
dec
dec
imul
cmp
jl
add
add
pop
aam
inc
mov
out
ret
test
or
inc
mov
xchg
cmc
inc
stos
scas
adc
sahf
inc
jmp
arpl
pop
mov
aaa
inc
cltd
mov
bound
jmp
sub
cld
mov
cmpsl
stc
dec
test
dec
std
or
jae
int3
and
jl
sti
std
stc
mov
into
sbb
ljmp
iret
out
call
fcoml
mov
test
fcmovnu
enter
out
mov
mov
loopne
shlb
push
inc
stos
js
dec
sbb
or
mov
push
xor
push
dec
adc
cmp
or
clc
aas
ja
bound
lret
jmp
mov
dec
rcrb
dec
fildll
or
cmpsl
arpl
notb
inc
or
push
out
mov
mov
push
test
pushf
mov
or
jg
push
cmc
fcom
call
push
pusha
add
mov
enter
xor
fisttpl
cmp
fnstsw
jae
mov
dec
lods
ds
dec
repz
sbb
iret
loop
push
repz
cmc
push
clc
add
xchg
jb
pop
hlt
ret
xchg
dec
cmpsl
jns
gs
adc
pop
idivl
enter
test
mov
add
addl
sbb
shll
dec
xchg
addb
orb
pop
xchg
lods
pushf
dec
sti
out
mov
rcl
mov
jae
cmp
les
xchg
add
or
jp
xor
or
add
pslld
adc
pop
inc
sub
dec
xchg
test
sub
or
les
sarb
daa
test
mov
stos
cmp
or
clc
xor
adc
sbb
mov
ret
test
jno
loop
cli
dec
or
jmp
or
xorl
add
adc
fwait
push
pop
mov
pop
leave
cmp
bound
sub
ret
adc
add
xchg
fisubs
test
inc
pusha
xchg
sbb
dec
js
in
arpl
or
mov
roll
cmp
push
fcmovb
push
xchg
add
out
cmpsl
jmp
ja
mov
push
xor
xchg
cmpsb
dec
shll
push
pop
fwait
js
lret
mov
fdivrp
pop
pop
dec
es
clc
out
fsubrl
cld
sbb
aad
shll
sahf
xor
cmp
add
into
rorl
lahf
add
test
sbb
dec
inc
stos
or
insb
jl
adc
cld
icebp
jb
test
sub
shll
loop
add
adc
scas
movsb
lret
aam
aad
stc
jl
stos
and
inc
cmp
sbb
cltd
insb
iret
sti
and
enter
dec
aad
aad
orb
ljmp
jl
testb
hlt
push
adc
sarl
test
stos
xchg
xchg
dec
es
jecxz
call
pop
je
sti
imul
leave
push
sub
jg
sahf
mov
aas
ret
push
pop
iret
or
mov
dec
or
mov
push
mov
stos
popa
and
ja
loopne
filds
sahf
jnp
sarl
int3
lcall
aaa
sbb
sbb
aam
shl
inc
ss
mov
or
scas
inc
insb
pop
mov
clc
jb
iret
sahf
push
xor
aam
clc
add
data16
mov
enter
and
jns
stos
push
pop
push
jmp
pushl
icebp
mov
lahf
inc
push
jmp
out
xchg
aad
add
mov
out
push
fildll
incl
push
notl
cmpsb
pusha
fnstcw
test
pop
jl
sbb
push
je
mov
pop
and
pop
add
into
popf
jae
cmpsl
mov
mov
fiaddl
mov
dec
pop
hlt
add
cmpl
test
mov
mov
testb
rcrl
lods
test
hlt
inc
js
iret
arpl
dec
scas
cmpsl
ja
cmp
popa
pop
and
dec
push
push
stos
lock
xchg
mov
jp
xchg
inc
dec
in
sub
mov
cmp
stos
sbbb
fcompl
adc
imul
movsb
pop
mov
js
sbb
out
mov
dec
lods
movsb
jbe
xchg
test
outsb
lcall
lea
movsb
pop
add
test
lock
xchg
or
ds
repz
mov
jno
vmovq
xor
daa
bound
les
clc
mov
and
push
subb
dec
rcrl
nop
ret
pop
fmul
je
fbstp
into
ror
fldt
mov
popa
cmpsb
in
jb
push
xchg
push
dec
mov
xchg
orl
jp
inc
pop
jns
or
in
jne
icebp
loopne
jne
popa
ljmp
jmp
mov
dec
jmp
mov
push
outsl
jl
les
aas
arpl
jbe
shlb
std
scas
mov
dec
jle
les
fld
or
call
mov
neg
xor
mov
mov
cmp
xor
or
xchg
push
cs
mov
loop
cld
mov
cmp
xor
jnp
lahf
dec
aam
push
enter
bound
pop
inc
add
out
cmp
in
repz
les
mov
mov
pop
push
stc
bnd
xor
pop
out
mov
add
imul
pop
test
in
push
or
mov
pop
lock
jnp
ret
pop
aaa
push
jnp
cld
cld
shll
in
les
cwtl
pop
lds
movl
das
inc
mov
or
mov
mov
xor
into
fucomi
roll
addl
xor
inc
mov
xor
push
dec
lds
scas
inc
xchg
repnz
loopne,pt
jl
stos
and
nop
fld
xchg
gs
nop
jb
scas
les
sub
mov
fisttps
imul
ss
fdiv
jmp
lea
enter
orl
dec
mov
fiadds
xor
mov
dec
out
mov
sahf
test
or
cmp
arpl
arpl
test
push
dec
jbe
call
xor
mov
jne
add
test
inc
orb
leave
pop
mov
and
jne
cmp
add
cmp
sub
dec
jp
mov
cmp
les
jmp
mov
jns
adc
pop
sub
ret
push
imul
ds
xchg
jle
cmc
std
add
testb
ds
enter
repnz
adc
xchg
mov
testl
arpl
push
rol
or
jmp
jb
xchg
add
in
repz
enter
jbe
mov
jl
les
shlb
scas
mov
mov
test
inc
pop
pop
pop
mov
cmp
jne
mov
std
or
cwtl
roll
ss
into
jns
js,pt
adc
addr16
ss
jp
or
pop
mov
fdivr
mov
ss
ret
jmp
pop
jmp
fs
pop
sub
or
in
dec
jbe
mov
lcall
sahf
mov
cld
or
incl
lret
sbb
std
add
icebp
jle
xor
add
push
mov
out
pop
inc
out
add
pusha
aad
push
and
inc
mov
mov
popf
mov
xor
mov
add
inc
sbb
or
cmp
adc
mov
push
mov
sahf
push
adc
adc
and
add
inc
scas
jnp
scas
cmp
ret
push
inc
mov
and
xchg
mov
sar
sti
cmpsl
js
mov
push
jne
movsl
pop
jae
hlt
or
inc
pop
push
sbb
les
push
icebp
out
push
push
ljmp
shlb
pop
jns
lea
mov
inc
xchg
bound
xchg
dec
stos
or
or
insl
stos
stc
or
jmp
mov
push
jge
add
ror
inc
cmpsb
jle
pop
stos
in
dec
mov
push
inc
or
adc
dec
cltd
push
fwait
das
adc
shll
add
pop
inc
into
cli
mov
jl
pop
or
xor
shrl
sti
or
sbb
jne
fimull
rorl
movsb
leave
add
or
adc
pop
in
roll
dec
paddb
xchg
jl
lret
pusha
mov
pop
imul
out
stc
shll
out
pop
jl
mov
in
push
outsl
sbb
cli
sbb
sbb
add
cmp
outsb
in
inc
sbb
xchg
rcr
lret
mov
repz
pop
in
mov
gs
add
add
filds
fmull
mov
mov
roll
ljmp
mov
sbb
xor
jne
adc
dec
pop
test
mov
sarb
xchg
test
inc
xadd
dec
ret
shlb
cld
or
lea
cmp
jae
adc
in
jp
loope
aad
scas
std
addr16
insb
pop
jg
roll
mov
loop
fisttpll
or
fbstp
xchg
std
dec
dec
pop
aad
xor
lods
cmp
or
push
adc
inc
or
or
fsubl
insl
cmpsb
cld
addr16
ret
mov
xchg
hlt
shl
add
and
dec
sbbl
in
jns
or
dec
mov
lock
mov
lcall
sub
mov
mov
add
imul
fcoms
cmp
in
jmp
cmpsl
add
icebp
cmpsl
jge
and
jns
paddsw
into
pop
sti
pop
nop
add
jl
push
mov
or
sbb
lods
subb
int
orb
mov
add
int3
or
mov
ret
mov
enter
jnp
fwait
scas
movsb
mov
ss
or
enter
jl
ror
inc
jnp
xorl
add
aad
imul
stc
add
add
dec
pop
scas
ljmp
orl
int3
xor
jne
mov
xor
stos
mov
or
fbstp
or
hlt
dec
rcrb
mov
push
mov
bound
xchg
imul
movsl
push
adc
mov
inc
cmp
icebp
add
test
rcl
out
aaa
repnz
cli
or
or
xor
pop
mov
jns
sbb
or
mov
jle
clc
std
in
or
jge
or
add
call
out
jmp
mov
ss
jae
movsl
scas
inc
mov
outsl
repz
add
jb
in
outsl
cmp
mov
sar
or
mov
mov
add
test
push
sti
xlat
sub
ficompl
add
ja
sti
popf
test
sbb
lods
dec
push
jp
insl
rcll
jb
xchg
loope
cltd
sub
stos
lock
popa
mov
dec
les
xor
mov
xchg
fisttpll
xor
aaa
rcrl
or
push
imul
test
mov
xchg
sarl
shll
push
add
mov
mov
jo
add
xchg
jae
bnd
push
mov
inc
fildl
sub
ss
sahf
cltd
cmp
popa
and
mov
icebp
cmpsb
gs
inc
lea
jae
cmpsb
test
add
fcomps
sub
icebp
mov
or
or
push
inc
enter
in
xchg
clc
or
push
xchg
ss
out
jmp
testl
scas
lret
adc
add
lret
into
and
push
sub
jle
pop
or
jne
loopne
loope
jnp
lret
push
test
ds
cmpsl
mov
pop
shll
repnz
mov
stos
cs
mov
lahf
mov
adc
mov
pop
stos
fimuls
outsb
pop
adc
mov
push
lods
pop
jmp
fistpl
xchg
dec
jbe
jp
lret
sahf
adc
repz
pop
push
push
sahf
into
xchg
int
pop
cltd
pop
scas
mov
call
push
fs
cltd
xchg
int
mov
xchg
movsl
or
push
add
mov
cmp
out
mov
jae
push
daa
fcoml
pmaddwd
subb
stc
aas
jae
sbb
mov
inc
pop
dec
or
mov
test
les
pop
fimull
insl
pop
cmp
stos
cli
call
push
or
rcrl
xor
push
cmpl
pop
gs
sti
hlt
sbb
ds
mov
inc
or
test
mov
jg
pop
xlat
mov
jmp
sti
inc
fmull
jmp
icebp
jnp
push
and
xor
jg
insb
or
sub
mov
inc
pop
or
loopne
xchg
pop
add
mov
xlat
xchg
and
sbb
sub
xor
pop
pop
xor
out
pop
outsl
push
adc
movsb
mov
push
pop
sti
dec
mov
add
inc
ret
push
jo
roll
push
fadd
hlt
orl
lock
mov
pop
cmp
outsl
push
xchg
sbb
scas
insb
mov
dec
lods
fdivrl
imull
test
scas
pop
mov
test
outsb
sar
pop
in
stos
icebp
enter
or
rorl
mov
int
rcl
aas
fiaddl
ret
sahf
cmp
in
lcall
cwtl
mov
jne
fiadds
mov
cmp
cmp
icebp
or
aam
ret
pop
add
pop
outsl
sub
pop
sbb
push
or
pop
xchg
enter
shr
les
dec
cmp
sti
or
in
sarb
mov
xor
ja
push
test
scas
adcl
inc
mov
inc
jecxz
shl
lock
sahf
push
push
sub
dec
aam
pop
out
loop
pop
or
in
inc
int3
scas
mov
popf
pop
xchg
push
mov
cmp
fldt
dec
out
jb
or
int3
insl
hlt
and
or
add
xchg
daa
cld
aas
jnp
add
stos
lret
jmp
pop
push
test
mov
add
sub
daa
pop
scas
stos
xor
lahf
imul
push
adc
divb
fs
pop
cmp
mov
in
insl
add
sarl
cmp
rcr
pop
inc
xchg
in
inc
pop
negb
and
mov
mov
pop
mov
pushl
jbe
xor
push
mov
lock
lcall
fs
xchg
xchg
or
mov
cmp
and
pushf
or
popa
add
rclb
cli
das
mov
cmpsl
fmulp
test
xchg
fsubrs
add
dec
ret
in
add
mov
push
or
xchg
lret
pop
lahf
daa
pop
xchg
fisubrs
ljmp
or
push
aaa
mov
jmp
add
inc
jmp
or
pop
push
sahf
iret
jl
push
fidivrs
sub
data16
jg
and
sti
or
fstpt
das
jg
push
or
pop
sub
out
cld
jmp
lret
xor
test
and
mov
lret
ja
fstps
in
fsts
stos
std
rolb
sub
rclb
mov
in
sbb
and
ret
push
xor
dec
mov
add
leave
out
jg
jmp
mov
ret
pop
xchg
fucomp
mov
jne
movsl
xchg
pop
movsl
xchg
mov
cwtl
pop
xor
loopne
xlat
mov
outsb
inc
mov
fs
jae
jns
dec
lahf
shlb
fwait
mov
xor
sbb
jns
in
pop
out
add
inc
mov
jle
iret
or
lock
icebp
xchg
mov
push
in
inc
clc
push
enter
xchg
bnd
test
and
icebp
cmp
loopne
out
or
stos
hlt
enter
pop
jecxz
add
cmp
inc
ror
adc
jmp
hlt
dec
in
sub
adc
lahf
daa
pop
clc
mov
cli
pop
mov
adc
sti
sub
or
mov
pushf
push
xlat
jl
stc
sti
inc
shl
xlat
stos
jb
xor
aas
jg
push
add
jne
out
mov
daa
xor
add
push
sub
jno
bound
add
mov
sbb
repz
xor
dec
imul
les
jne
and
xor
mov
iret
js
fwait
mov
ds
fsubrl
iret
gs
insl
aam
add
cmpsl
mov
cmc
or
inc
xor
jl
jecxz
stos
das
testl
cld
inc
mov
xchg
sbb
pop
sbb
stc
aas
inc
imul
cmp
imul
js
fisttpl
xchg
push
sbb
shl
cwtl
mov
or
ficoms
mov
cwtl
push
push
fdivrl
jle
idiv
adc
cld
fisubrl
sti
pop
popa
in
push
test
movsl
inc
inc
jecxz
rorb
movsb
imull
sbb
mov
xchg
icebp
dec
loop
psubsw
add
push
je
dec
test
jmp
pop
xchg
add
icebp
or
add
fs
or
jl
adc
mov
inc
adc
cmp
mov
cmp
cmc
pop
loopne
mov
mov
out
push
js
les
lret
setae
adc
push
jae
std
leave
gs
lcall
ljmp
les
shll
adc
cltd
cltd
push
clc
or
and
or
add
dec
lahf
xchg
jl
jle
stc
loopne
fadd
pop
pop
out
cmp
clc
int3
inc
pop
ds
or
cmpsl
and
adc
push
jno
xchg
or
or
lret
punpckldq
not
jl
jne
aam
sti
nop
lods
jae
scas
orl
sub
fwait
inc
test
jo
fldenv
movsb
pusha
lea
cld
movsb
and
pop
pop
je
push
xorl
out
aaa
clc
stc
test
cmp
xor
or
incl
sar
xchg
in
and
inc
or
push
push
jmp
jl
jno
mov
and
dec
or
sbb
mov
aad
mov
inc
or
adc
add
jl
icebp
xchg
leave
lret
cld
lods
rcl
push
mov
aam
rcrl
lock
ret
jl
hlt
inc
add
jnp
enter
cld
or
lret
out
clc
cmp
adc
sub
ficomps
lods
push
inc
or
pop
imulb
jmp
testl
push
xor
subb
inc
in
aam
push
or
aam
in
add
jne
mov
cwtl
fbstp
jl
mov
scas
adcl
or
jp
add
xor
test
jl
ret
test
leave
filds
or
int
jl
mov
push
or
sub
icebp
mov
add
lret
sti
addl
mov
leave
add
sub
sub
mov
test
jle
pop
or
bound
or
or
add
inc
out
in
mov
adc
add
fimull
repnz
enter
cltd
or
ja
sub
pop
dec
nop
pop
add
rorb
rcrl
xchg
loopne
jb
mov
xchg
into
sub
insl
scas
sbb
mov
insb
cmc
lock
push
inc
sbbl
movsb
pop
call
inc
xchg
inc
or
pop
jns
shl
push
mov
cli
xchg
fildl
stos
adc
iret
or
lret
jmp
adc
and
call
into
jns
jecxz
call
sahf
lcall
sub
rorl
ja
div
add
push
mov
aam
and
aaa
out
ds
jne
push
mov
in
pop
jge
outsl
ja
cmp
fsubrl
xor
cmp
xchg
inc
dec
dec
push
pop
les
int3
shrl
pop
lret
or
js
pop
cmp
and
ret
push
std
or
jbe
or
push
pop
hlt
inc
popf
cmc
xchg
lods
call
jne
or
ss
jne
imul
stc
aas
aam
out
repz
dec
pop
push
lret
roll
into
or
or
mov
into
movsb
ja
pop
enter
or
sub
dec
xchg
div
jmp
mov
or
jge
pop
sahf
jp
dec
sub
test
mov
xchg
or
add
or
xor
arpl
push
bound
je
les
fisttpl
xchg
loope
aad
scas
xor
cmp
xchg
inc
xchg
xlat
jp
or
jns
xchg
enter
pop
pushf
leave
in
aaa
jmp
test
pop
fmul
ljmp
jl
cld
in
or
jb
cmp
fcmovu
clc
ja
fisubrs
repnz
ljmp
in
jp
mov
sub
lret
dec
outsb
push
add
les
mov
mov
or
pop
lret
dec
dec
out
sarl
cmp
pushl
lret
inc
ss
sbb
ret
js
mulb
add
rol
dec
shl
std
xor
test
cwtl
aad
sub
push
lcall
bound
les
add
add
xorl
mov
mov
and
or
ss
pop
int
or
xchg
shl
push
pushf
rcll
or
in
mov
or
jmp
sti
push
jmp
ret
lret
rcll
adc
ret
rcrl
call
and
les
shrl
push
inc
xchg
lret
inc
scas
push
jb
mov
push
add
imul
xchg
xchg
pop
xchg
add
imul
dec
in
dec
lret
pop
mov
jecxz
xchg
shl
hlt
jecxz
jg
jne
adc
mov
jae
out
dec
pop
or
inc
gs
orl
add
enter
inc
aas
aaa
rorl
sti
lahf
iret
lcall
popf
xor
pusha
inc
push
fs
lods
sub
scas
mov
dec
ret
scas
rcrb
test
lock
dec
adc
outsb
aam
pop
mov
mov
outsb
test
cmpsl
lret
movsb
ret
jo
dec
sbb
or
mov
or
mov
loopne
sarl
jbe
rclb
in
out
mov
rorl
jmp
cmp
mov
xchg
inc
call
out
fcmovnu
loope
or
shlb
insl
sarb
adc
or
dec
pop
add
push
jl
fwait
xor
jmp
add
push
sbb
push
fsub
jno
or
fistpl
mov
mov
lock
les
cli
xor
jl
jne
lret
lret
push
inc
jmp
or
and
sti
pushl
in
les
imul
inc
fsubrl
and
in
nop
jne
stos
in
cmp
xchg
rcrl
fldcw
push
mov
cmp
xor
aam
in
mov
push
mov
dec
mov
xchg
xchg
fwait
and
jle
mov
loopne
or
mov
xorl
xchg
inc
in
rolb
mov
add
popl
ljmp
fs
pop
gs
adc
xchg
aas
mov
out
cmp
lret
or
scas
mov
push
rolb
or
mov
cli
dec
adc
lret
clc
sub
div
icebp
outsl
sbb
pop
std
shr
movsl
sub
neg
mov
cmp
or
mull
pusha
mov
cltd
xorb
adc
mov
aam
or
lcall
loop
pop
test
sbb
mov
jle
nop
mov
pop
clc
ret
aam
fwait
out
out
ss
fdivrs
je
shrl
aas
dec
shl
inc
mov
sarl
xor
lods
xchg
jmp
xchg
pushf
iret
or
mov
xor
mov
push
out
sahf
ljmp
orb
fstl
cwtl
ds
out
daa
das
call
inc
adc
mov
test
mov
adc
adcb
mov
imul
repz
sti
inc
in
pop
je
and
pusha
leave
outsl
lret
push
insl
xchg
pop
mov
rorl
cwtl
jo
push
test
add
cli
jl
push
lea
scas
sub
lret
fstl
test
jnp
fidivl
push
xchg
mov
cmp
inc
jno
add
or
jecxz
cltd
mov
call
cmpl
cmp
shll
xchg
adc
ret
lret
jecxz
jmp
cld
cld
mov
ret
jbe
inc
push
inc
push
in
hlt
ret
out
fstpt
mov
adc
jbe
rcrb
mov
inc
sub
push
xchg
leave
ret
aad
stc
aaa
fcmovbe
xor
inc
and
mov
in
mov
push
cmp
xor
aad
js
cmp
and
mov
inc
into
into
push
pusha
mov
sub
xor
xchg
inc
pop
inc
sbb
pop
fildll
fisttpl
cld
add
fdivl
cld
mov
repnz
adcl
mov
leave
push
add
cld
in
xor
add
jne
rorl
add
aam
mov
xor
loop
insb
mov
sbbb
orb
repnz
jmp
add
lret
ds
scas
inc
cli
imul
lret
lret
loopnew
lret
adc
cmc
lret
mulb
stos
push
iret
push
dec
out
or
scas
dec
ds
mov
flds
or
jecxz
shll
sti
xor
into
add
xor
jl
pushf
clc
sti
std
test
enter
sub
add
dec
xchg
adc
mov
iret
or
stc
and
add
dec
iret
add
and
int3
jo
pop
xchg
adc
or
lods
outsb
push
cmp
lods
lods
lret
lock
or
call
pop
or
fmull
add
cmp
mov
or
jmp
push
hlt
insb
jecxz
sub
std
insl
lret
inc
sbb
mov
lret
inc
mov
mov
adc
aaa
sti
fs
movsl
xchg
add
mov
lcall
insl
call
fisubl
add
out
push
gs
lahf
pop
or
jns
mov
and
pop
stos
adc
push
dec
pop
divl
xlat
sbb
fs
lret
js
roll
or
popa
pop
test
popf
outsb
daa
out
aaa
sbb
mov
dec
jp
stos
sti
or
ror
adc
mulb
jle
mov
jp
or
jo
imul
sbb
sti
sti
popf
sti
stc
add
fs
mov
arpl
cmp
sub
fsub
mov
xor
mov
sbbl
push
lahf
das
out
xorb
rolb
jae
fucomi
ss
jge
in
cli
cltd
jp
dec
xor
lock
dec
imul
pushf
pop
mov
mov
fs
push
xchg
mov
or
cmp
push
push
call
xchg
pop
rorl
jmp
gs
ja
and
out
xchg
pop
jl
cli
push
lea
push
insb
cli
xchg
inc
ds
shl
mov
xchg
adc
pusha
addr16
inc
dec
mov
add
call
jmp
mov
sbb
std
orb
in
cmp
test
jne
xor
je
decl
sarb
xor
add
mov
adc
or
rclb
lret
in
scas
std
push
stos
in
mov
add
sub
fcoms
lds
stc
sti
adc
lahf
data16
mov
or
movsb
frstor
sahf
mov
lods
repnz
sahf
std
in
lods
mov
filds
or
ja
iret
xchg
mov
sarl
ss
add
push
ds
out
aaa
jnp
xchg
mov
sbb
lret
hlt
movsb
xor
push
test
pop
cmp
int3
pop
xchg
mov
fcompl
push
push
push
jmp
pop
and
dec
push
add
clc
add
into
jecxz
stos
imul
test
std
rcr
roll
outsl
fisubrl
imul
cmp
test
mov
add
cmp
mov
xor
nop
faddl
push
mov
sub
mov
call
or
icebp
or
test
cmp
or
sub
push
mov
mov
cwtl
out
test
lods
or
jge
dec
inc
or
lods
inc
scas
adc
or
out
adc
insb
hlt
jg
add
in
or
rcll
xor
xchg
data16
fsubl
adc
int3
inc
cmp
notl
push
addb
sbb
lret
out
daa
pop
es
dec
outsl
pop
add
lods
inc
fdivr
adc
add
mov
aad
mov
pushf
aad
dec
call
mov
bound
lds
test
insb
cmp
loope
fsubrs
or
stc
loopne
jl
fstp
sti
sub
or
mov
or
pcmpgtw
push
orb
or
jnp
jae
cld
or
sub
push
add
aad
out
add
inc
scas
aad
xchg
repz
iret
dec
daa
xchg
enter
pop
jp
mov
xor
add
scas
pop
sub
ja
push
mov
dec
jae
sbb
clc
mov
stos
loopne
inc
addl
cmp
or
push
or
sub
rolb
xchg
pop
or
orps
enter
or
mov
mov
and
push
ljmp
fbstp
or
jecxz
enter
imul
scas
shl
cmp
test
lds
inc
loopne
sahf
or
cmp
sbb
stos
xor
push
mov
jle
repz
rol
xchg
pop
mov
cmp
or
std
outsb
inc
fcmovne
mov
scas
mov
cmp
daa
xchg
or
inc
rcll
dec
lods
out
pop
dec
pushw
fstpl
outsl
das
mov
lret
aam
sahf
fbld
shl
inc
mov
or
and
aaa
pop
lds
leave
idivb
int3
pop
mov
movsb
inc
aaa
xchg
lea
cmp
rorl
pop
lahf
or
push
fistpl
sub
rcl
xor
test
addb
in
add
into
cli
add
add
push
cmp
pop
jecxz
add
mov
or
sub
sbbb
js
or
add
inc
fs
or
mov
push
pusha
mov
dec
mov
test
xchg
push
push
outsl
ljmp
fdivrs
hlt
int
pop
dec
orb
adc
mov
imul
xchg
add
or
out
shlb
jns
pop
div
or
inc
mov
xor
cmp
pop
psrld
jle
xor
sti
push
or
loop
xchg
mov
out
mov
xlat
or
xlat
in
js
jmp
mov
jle
sub
stc
imul
subb
fisttpl
or
movd
xor
or
sti
mov
push
sahf
imul
push
add
lahf
add
int3
xchg
popl
pop
xorb
std
push
out
std
add
in
call
lea
cs
jg
lds
enter
adc
call
mov
iret
outsl
das
or
add
mov
sub
jp
repz
int3
addr16
ret
in
push
or
ret
jl
push
rol
sarl
rcrl
adcb
xor
inc
add
jo
inc
lods
incb
call
or
sbbl
in
ret
sbbb
and
ss
jnp
add
insl
or
test
out
lcall
repz
or
clc
aaa
rcll
and
cwtl
enter
inc
xlat
or
lds
xchg
jmp
and
dec
sti
mov
sub
dec
inc
sub
pop
cmp
and
push
lea
and
subl
and
add
gs
idivb
sbb
insl
add
or
mov
push
mov
cmp
xchg
dec
mov
mov
add
cmpsl
repz
dec
push
in
fsubl
rclb
jno
dec
out
mov
xor
mov
aaa
pop
pushf
xor
cmp
aaa
test
into
sbb
mov
fnstenv
mov
test
mov
or
je
add
out
sub
scas
jo
push
test
lret
pop
test
or
xor
outsl
inc
dec
call
adc
xor
clc
stc
jo
mov
insb
or
or
dec
clc
fsubrp
mov
ficomps
cmp
repnz
mov
test
hlt
mov
divl
iret
shrl
dec
add
or
je
mov
shlb
repz
mov
in
les
pop
lret
jmp
sahf
xor
or
cli
mov
jns
shlb
cli
shlb
lcall
cmp
or
out
or
loopne
roll
out
dec
inc
dec
clc
jmp
inc
je
out
xor
xor
push
pop
sub
xorl
jo
push
shll
push
out
fldl
sbbb
rcrb
dec
mov
pop
les
dec
or
enter
dec
in
repz
and
test
imul
hlt
pop
cmp
int3
mov
sti
fdivs
roll
std
les
xlat
jo
rorl
lock
and
push
icebp
xchg
xor
aas
movsb
dec
fstpt
xchg
mov
mov
inc
repz
xchg
and
adc
pop
push
cwtl
insl
mov
add
jo
fldcw
rcrb
push
jae
lcall
cwtl
mov
dec
dec
sbb
lods
lret
ja
xor
and
jbe
mov
cmc
mov
xchg
lods
int3
fdivrl
push
loope
sbb
icebp
adc
iret
or
aad
cmp
inc
stos
fimull
or
scas
jae
and
ret
repz
mov
sub
pop
hlt
adc
hlt
scas
xchg
cmp
lret
xchg
dec
int
push
lea
jp
jnp
pop
mov
pop
fdivs
aaa
shl
sbb
add
xchg
mov
sbb
jmp
sar
inc
jl
mov
stos
xchg
lock
mov
jg
int3
cmp
or
adcl
insb
xchg
jge
push
mov
jno
xchg
mov
jne
test
test
or
xchg
iret
mov
icebp
mov
pop
stos
jge
sti
and
or
mov
xor
sarb
in
and
pop
cld
cmpl
das
jmp
jecxz
jns
pop
sbb
out
sub
leave
dec
or
and
sub
sub
jmp
or
mov
jg
xchg
or
ds
and
scas
jge
out
xchg
or
mov
testl
sbb
sbb
dec
and
sbbl
xchg
dec
push
add
xchg
mov
insb
dec
pushf
jecxz
pop
mov
shll
xchg
in
lock
mov
dec
cmp
stos
cmp
sti
xchg
roll
out
mov
jne
stc
or
stos
jnp
fisttpl
cmp
incb
mov
or
cmp
mov
or
adc
out
jl
inc
mov
fadds
dec
jmp
and
int
dec
mov
dec
push
xor
icebp
or
cli
mov
or
cmpb
js
inc
icebp
mov
in
and
mov
icebp
movsb
push
shl
les
mov
xlat
cmp
mov
aam
push
cmp
dec
xor
sub
adc
or
adc
ss
ja
jl
mov
and
insb
out
mov
movsb
push
lret
xchg
xchg
adc
lock
or
mov
hlt
dec
mov
add
ds
scas
lret
jl
add
shl
std
test
stos
ret
pop
cwtl
repnz
test
push
test
insl
shll
mov
rcl
lcall
nop
adc
add
jns
pop
push
sbb
dec
jecxz
adc
cwtl
push
cmp
sub
call
push
or
fisttpl
cmc
pop
add
cmc
push
push
lea
add
iret
ret
cs
stos
imul
push
dec
jbe
ret
cli
shlb
add
stos
loop
enter
inc
xchg
push
cmpl
test
pop
and
jecxz
xchg
dec
lcall
add
bound
lods
scas
inc
push
ja
popa
or
out
outsb
add
jb
daa
lret
mov
pop
pop
push
fdivrs
mov
xor
xchg
adc
jbe
hlt
adc
cmp
or
scas
mov
pop
or
imul
rcrl
aam
rcrb
inc
push
inc
pop
je
xor
ss
pop
mov
fildl
lret
push
mov
jno
adc
jbe
pusha
mov
mov
loop
xor
push
mov
mov
pusha
lea
pop
in
lock
outsb
xchg
int3
cwtl
dec
stos
push
cmc
mov
ss
jmp
xchg
mov
cmp
pop
jnp
jbe,pt
jl
les
or
lea
adc
inc
xchg
cmc
mov
mov
dec
lds
jns
mov
xchg
sbbl
or
mov
dec
xor
jno
stos
or
shl
push
sub
int
jle
jbe
fnstenv
ret
inc
jb
mov
dec
adc
sub
mov
les
cs
mov
lret
xchg
and
dec
lahf
enter
scas
sar
or
xor
xor
mov
or
push
rolb
jmp
icebp
or
je
jb
psrlw
dec
in
arpl
jns
loopne
stos
lcall
or
xor
faddp
jb
ret
mov
mov
push
xor
jno
or
ret
jbe
and
jg
pop
fcomi
mov
lret
les
fcomps
or
mov
lods
popf
mov
xor
dec
aas
stc
addr16
mov
dec
cld
fsts
push
adc
sti
lret
arpl
scas
movsb
loopne
jmp
fs
xor
sti
add
cmpsb
push
lock
incb
imul
testl
or
add
sbb
jle
icebp
in
or
cmpb
or
mov
lcall
dec
loop
insl
loop
movsb
fisttpl
or
nop
ret
insb
adc
cmp
cmp
mov
int3
mov
mov
loop
pop
ja
mov
scas
rorb
xchg
or
daa
push
jb
add
sbb
out
fld
insl
lock
inc
jecxz
dec
in
mov
xor
add
jae
xlat
and
in
fwait
add
stc
mov
inc
in
mov
out
stos
xor
jae
dec
loope
out
arpl
push
addr16
sbb
ret
ret
roll
and
loopne
mov
leave
sub
xchg
lret
dec
out
rorb
mov
popa
or
sub
rolb
jno
ret
test
subb
imul
mov
aam
add
inc
loope
xchg
and
test
roll
leave
jge
jecxz
mov
lock
or
cmp
cmp
aaa
mov
mov
xor
jae
aaa
push
aas
xchg
mov
mov
or
daa
out
mov
scas
je
insl
setno
imul
cmp
mov
sub
cld
cmp
in
or
in
pop
push
pop
flds
aaa
or
lods
int3
dec
clc
stc
mov
stos
aad
jno
pop
dec
cmpsl
mov
lea
in
and
aam
insb
adc
mov
std
ljmp
icebp
les
aaa
xor
popa
add
or
pop
pop
arpl
fmul
insb
mov
rclb
testl
test
or
push
xchg
jg
sub
test
mov
shlb
cmp
or
ret
or
jmp
or
push
loopne
adc
rol
shll
push
adc
cli
or
dec
jbe
jnp
cmpsl
std
and
pop
add
rorl
movsl
push
mull
mov
or
and
jmp
out
add
cmp
add
pop
pop
sarl
jbe
add
and
push
jb
jmp
mov
sub
dec
std
imul
push
dec
inc
jp
pop
pushf
jl
pop
scas
dec
jle
sbb
push
data16
sub
lret
sti
jnp
mov
pop
jmp
xchg
mov
lret
jns
jbe
mov
test
iret
div
scas
shlb
adcl
cmc
mov
ret
add
xchg
pop
mov
sub
shlb
shrb
mov
or
lea
inc
inc
stc
icebp
or
les
daa
xchg
imull
testl
push
lea
inc
mov
lods
or
enter
movsb
mov
adc
in
and
jno
in
movsl
les
pop
mov
stos
lahf
push
ret
rol
jp
iret
pop
dec
mov
add
lret
cmc
shrl
fbld
enter
in
jl
loopne
pop
jmp
in
or
mov
cs
inc
sahf
add
sub
mov
jl
mov
stc
js
movsl
lahf
mov
roll
or
mov
js
ljmp
xchg
xor
popa
mov
into
loop
xor
jb
pop
and
repnz
and
jl
jge
les
enter
ss
les
mov
out
sahf
add
cmp
shrb
add
orb
pop
or
sub
out
jmp
cld
loopne
inc
jmp
nop
cmpsb
push
inc
fiadds
testb
into
mov
push
enter
aaa
pop
sahf
in
lret
je
jmp
adc
sahf
jmp
ret
jmp
shrb
in
add
and
mov
dec
int3
add
lcall
daa
push
add
push
mov
mov
scas
repnz
decl
lock
push
add
push
imul
repnz
clc
push
mov
out
push
add
ret
fisttpl
in
sub
out
sbb
or
ret
loopne
adc
adc
push
sarl
loop
adc
fstpt
iret
scas
or
out
int
fld
or
fisubrs
add
push
lea
cmc
sbb
sti
add
mov
cmpl
adc
bound
pop
jl
test
inc
add
lcall
jp
pop
or
test
add
xchg
dec
orb
lods
mov
inc
jp
mov
cmp
repz
hlt
ret
or
add
inc
pushf
fmul
pop
outsb
mov
cld
clc
xrelease
in
lds
mov
pop
xorb
xor
add
pushf
or
xlat
test
clc
jmp
out
xchg
decb
pop
popa
mov
stc
aas
or
shll
sti
inc
mov
hlt
mov
orl
aam
int3
xchg
or
or
fldt
hlt
mov
mov
cld
push
out
lcall
jl
inc
add
pop
fcmovnu
out
out
xor
in
enter
call
dec
rcl
in
jmp
xlat
lcall
lcall
pop
ret
ficompl
cld
shr
ficoml
fwait
lret
bound
arpl
dec
mov
rcll
mov
sti
push
fsts
add
mov
pop
fstpl
mov
mov
mov
jle
jl
jae
sub
adc
testb
inc
decl
mov
dec
mov
cwtl
dec
icebp
inc
sti
sbb
shrb
out
std
or
adc
pop
fsubrs
pop
popa
fs
test
lret
adc
orl
or
jle
lret
ds
movsb
or
adc
lods
xor
or
sub
push
mov
sub
mov
loopne
fstps
push
jae
arpl
xor
jmp
inc
add
test
out
enter
xchg
cmp
in
fucom
shlb
xchg
xchg
jge
jl
fucomip
cld
or
test
or
mov
sub
out
inc
xchg
xor
enter
ja
mov
mov
ljmp
and
xor
dec
out
sti
or
mov
pusha
add
push
push
dec
mov
outsl
aam
lds
out
jp
sub
jl
pop
test
cmp
or
call
inc
ret
cmp
jp
adc
in
icebp
pop
clc
lret
lcallw
sti
rep
lret
or
add
adc
divb
or
jnp
xchg
add
repz
sbb
dec
sub
add
mov
or
and
mov
mov
xor
mov
scas
test
cmpsl
call
adc
cmp
stos
or
add
fsubrs
jo
xlat
cltd
stc
test
cld
lcall
rcl
pop
test
xchg
rcrl
inc
lods
push
iret
sti
or
mov
cmp
push
arpl
mov
loop
jnp
mov
adcb
pop
aam
icebp
stos
stc
hlt
inc
out
jge
inc
lret
and
mov
inc
add
mov
sbb
cli
add
ss
daa
into
ja
call
sub
nop
ret
std
lods
stc
mov
adc
test
mov
mov
pop
push
jnp
data16
fistl
sbb
xor
push
lods
inc
jbe
cmpsl
shll
faddl
dec
nop
jmp
inc
std
popa
cmp
ror
dec
xorl
cmpb
mov
or
imul
fwait
add
sub
das
sti
movsb
add
pop
jl
inc
cmp
dec
add
std
mov
fildl
idivl
pop
pusha
psubb
pop
shlb
push
mov
jnp
lret
push
imulb
cmp
test
cwtl
fscale
orb
cmp
push
add
aas
pop
loope
mov
and
sub
js
ret
jns
aaa
lcall
add
loope
andb
lret
test
sub
out
inc
aad
push
mov
or
push
testb
sti
add
or
pop
xchg
ss
add
enter
dec
mov
cmp
mov
out
pop
test
xchg
inc
les
jns
dec
cmp
xchg
jp
mov
imul
jp
test
aad
sub
mov
call
bnd
jle
lret
cmpsb
hlt
cld
jo
add
sub
sub
add
cmpsb
sti
int3
shrl
in
test
mov
test
pop
cmp
or
jmp
or
jge
leave
lret
mov
or
stc
add
sub
int3
frstor
testb
sub
lcall
clc
fnstsw
dec
data16
data16
cld
pushl
sub
addl
add
in
jl
inc
jo
sti
mov
and
fildl
pop
mov
hlt
fnstenv
imul
sti
std
xchg
push
inc
mov
mov
shl
hlt
in
sti
mov
xchg
pop
cli
push
inc
in
push
lods
inc
stc
inc
sti
mov
pushf
mov
shll
sti
or
dec
mov
cld
xlat
dec
shl
cmp
shrl
and
insl
jmp
sub
testb
addl
mov
xor
cmpsl
iret
in
mov
xor
sahf
sti
mov
or
shrb
lds
mov
lea
mov
fucomip
popa
jmp
or
adc
cltd
pushf
or
mov
fildl
mov
sbb
xchg
mov
sbbb
fs
sbb
mov
lods
push
shll
or
xor
jnp
inc
ret
or
push
mov
xor
dec
insb
add
jo
fchs
push
mov
imul
movsb
ss
hlt
rcrb
add
mov
scas
fbld
ret
mov
andl
inc
lods
push
fimull
imul
xor
mov
inc
lret
inc
das
mov
cli
rorb
popa
add
cmpsl
or
xchg
scas
enter
ljmp
adc
xchg
orb
xor
pop
or
jl
jl
mov
aaa
outsb
subb
daa
cwtl
in
les
jmp
jo
or
mov
jo
add
leave
scas
mov
pop
xor
push
mov
jnp
push
mov
or
mov
fsts
add
fs
push
jl
js
dec
jae
or
jnp
insb
cmp
sti
add
cmp
call
mov
or
mov
stos
jnp
or
shll
or
enter
test
mov
leave
mov
jmp
sbb
scas
ret
mov
mov
rol
mov
jmp
xor
jl
scas
push
jecxz
clc
aaa
cmp
dec
sti
je
hlt
repnz
fwait
ret
jp
aam
add
add
sti
ljmp
int3
mov
xor
aaa
divb
jp
movsl
stos
dec
imul
enter
or
cli
icebp
jp
dec
cltd
sub
sub
xchg
mov
pop
in
and
cmpsb
in
jl
xor
dec
mov
mov
add
flds
or
push
sti
imul
fistps
or
fld
hlt
or
loopne
mov
shr
pop
imul
fimull
in
lret
fsubs
aad
pop
clc
add
add
fcmovnbe
cld
repnz
xchg
cld
in
add
xor
add
push
in
or
fcom
fistl
jecxz
or
into
or
dec
jmp
lock
cmpsl
call
pop
icebp
stos
fdivrl
or
pop
add
pop
std
pop
or
lret
add
rcrl
into
subl
or
mov
mov
popa
cltd
in
std
mov
pop
xchg
hlt
out
jmp
loop
fisttps
decb
decl
stos
mov
pushf
lods
add
and
enter
add
shl
out
aad
into
pop
aad
aas
mov
or
cmp
sub
xchg
imul
sbb
sbb
adc
adc
adc
adc
adc
adc
adc
adc
adc
movups
shlb
popa
sbb
sbb
adc
adc
mov
adc
adc
fsts
mov
aam
cltd
adc
adc
or
pop
lret
enter
jmp
test
rorb
out
dec
icebp
std
movl
test
xchg
sti
loope
add
enter
pop
enter
add
in
std
shrl
or
out
fidivl
test
ror
movntq
aad
add
lods
sti
dec
fmuls
push
repz
and
out
andl
test
movb
sub
repz
jge
lret
in
mov
std
xchg
shrl
fwait
mov
jnp
cli
adc
add
enter
jmp
divl
addl
inc
mov
lret
dec
mov
adcb
loopne
add
cmpb
scas
flds
or
inc
test
cmp
pop
lret
cmc
lcall
stc
or
cwtl
or
dec
xchg
cmpsb
sub
mov
stc
gs
leave
test
mov
ret
mov
jp
mov
mov
repnz
xchg
sarl
repz
or
nop
cld
xor
mov
ret
call
dec
pop
jnp
add
loope
mov
int
repz
adc
scas
cmp
cmpsb
ret
dec
lods
stos
mov
mov
ja,pt
das
scas
movsl
and
add
popa
mov
inc
pop
inc
push
pop
push
daa
and
in
addr16
test
adc
icebp
xchg
mov
mov
repz
and
out
xchg
mov
int3
mov
mov
adc
push
or
aad
ss
lds
mov
std
push
into
js
test
jp
xor
push
sti
fimuls
test
daa
and
stc
dec
mov
cmp
xchg
and
mov
clc
aaa
cmp
lcall
xchg
lock
popf
xchg
rorb
fwait
iret
push
mov
ret
aad
jp
test
xor
inc
xchg
cmpsl
mov
add
mov
mov
sbb
inc
mov
dec
fildl
aaa
or
popa
les
or
inc
rcll
dec
adcb
das
shr
push
mov
lret
test
pop
cli
sub
test
mov
sbb
aam
or
addl
mov
adc
nop
aam
inc
aad
xchg
mov
add
and
scas
cmp
mov
add
cli
outsl
fiadds
sbb
aam
add
hlt
stos
fucompp
mov
sbbb
and
aas
out
cmp
inc
dec
xchg
repnz
cmp
shll
cld
jecxz
sub
mov
inc
add
std
mov
inc
dec
xchg
loopne
sti
jg
lret
out
dec
mov
ret
sub
outsb
mov
jge
sub
iret
add
xor
loop
enter
add
xchg
mov
cmovbe
pop
push
dec
jecxz
sbb
jmp
jle
ja
dec
or
cmp
dec
mov
jl
es
add
cmpsl
cmp
mov
sub
or
add
arpl
dec
icebp
adc
push
jge
test
pop
stos
jp
mov
mov
scas
jae
mov
popf
dec
notl
xor
adc
cmp
pop
xor
xor
sbb
lret
pop
mov
daa
inc
lahf
iret
gs
mov
add
cld
in
out
ret
add
ret
xchg
cmc
fstps
mov
adc
cmp
cmp
pop
pop
adc
sbb
lods
mov
mov
jb
cmp
cmpsl
imul
xchg
xor
rcl
cmc
test
aad
sub
cmp
or
sbb
sti
lods
jmp
mov
or
int
gs
sub
and
fld
aas
add
cli
jge
loop
mov
or
scas
add
rcll
xor
sti
mov
sbb
pop
inc
cmp
mov
stc
sbb
mov
jmp
into
cmp
and
aam
mov
aam
xchg
aad
mov
pop
ja
pop
mov
mov
xchg
aas
or
jp
xchg
ja
imul
pop
arpl
or
les
xchg
pop
icebp
cmp
xchg
test
sti
shrb
addb
stos
nop
testb
push
mov
sti
fsubrs
addl
stos
nop
cmc
mov
incl
pop
je
dec
xchg
cmpsl
jecxz
sar
test
addr16
in
xor
or
hlt
cld
adc
mov
mov
mov
jbe
sbb
fsubrs
cmp
imul
mov
inc
add
repz
rcrb
or
add
jnp
lcall
jl
mov
or
loopne
or
or
in
mov
jg
lret
inc
jae
shl
cmp
sbb
jmp
dec
pop
mov
mov
int3
jbe
gs
enter
lahf
cmp
mov
cs
notl
or
shrb
and
mul
pop
fdivp
push
dec
les
or
fbstp
dec
pop
push
lret
das
ss
dec
rorl
cmpsl
or
jmp
xchg
dec
jmp
bound
jmp
lret
es
xchg
ja
mov
cmp
and
mov
icebp
and
pop
in
lock
or
push
les
int3
or
or
sub
dec
dec
cmp
or
mov
imul
stc
or
iret
push
add
enter
jbe
xchg
outsb
and
jl
ret
rcll
mov
aad
in
or
add
push
cmp
test
clc
cmp
mov
adc
mov
testl
out
and
jb
outsb
fwait
dec
or
mov
mov
pop
incb
mov
inc
xchg
inc
sub
sub
mov
lahf
ret
hlt
dec
jo
stos
and
mov
cld
mov
cmp
in
lret
out
fistpll
aaa
lock
push
xchg
insb
icebp
add
flds
int
inc
fstpl
sarl
lahf
aam
aam
or
sahf
jp
ret
and
fisttpll
mov
rcr
fcomps
lret
fmull
adc
ret
pop
loope
stc
in
inc
push
sub
aas
adc
mov
jmp
add
std
xorb
es
iret
and
sbb
xor
or
sbb
enter
fildl
pusha
mulb
popf
xor
inc
add
pop
dec
mov
inc
data16
xor
cli
jecxz
add
sub
cmp
push
movsl
sti
enter
or
test
dec
in
aaa
pop
sti
js
dec
or
stos
adc
fucomp
push
xor
mov
lret
lret
inc
pop
cmp
rcll
or
inc
push
adc
cli
mov
ljmp
sub
jg
rcll
sbb
aad
add
or
sbb
xor
lahf
fucomp
ficomps
mov
or
cld
mov
sbb
stc
rcr
or
js
cli
add
loop
or
xor
shlb
enter
cmp
and
pop
lret
fistps
int3
or
fmull
mov
xchg
pushf
fcmove
or
xchg
or
pop
lea
bound
popf
mov
mov
xor
out
or
cli
sub
adc
loopne
jbe
add
push
push
aam
sbb
pop
or
or
stos
ja
rcr
sbb
icebp
arpl
fwait
imull
jns
xor
add
mov
gs
jb
adc
add
sub
loope
out
inc
stos
lds
dec
les
gs
mov
push
add
movsl
sbb
add
or
mov
add
or
dec
pop
pop
js
mov
or
stos
aas
mov
add
or
adc
pop
in
stc
pop
pop
inc
mov
sub
scas
or
sub
popa
mov
cwtl
sub
test
in
outsl
xorl
iret
add
xor
xor
mov
int3
mov
roll
stos
stos
or
mov
rcll
icebp
push
repz
adc
dec
dec
sar
loopne
js
fildl
cltd
inc
fstpt
add
roll
or
fcmovnb
add
enter
xlat
dec
cmp
pop
dec
mov
or
cmp
jns
push
add
mov
jle
inc
out
add
in
in
add
imul
aad
fnsave
sarb
idivb
push
lock
dec
in
sbb
or
or
rolb
or
mov
out
arpl
jae
jae
inc
mov
and
mul
mov
cmp
add
cmp
or
shr
dec
jnp
or
daa
pusha
mov
or
mov
mov
hlt
or
or
add
stc
jp
pop
ja
jp
cld
xlat
push
rorb
stc
pop
dec
iret
inc
sbb
pushf
push
in
and
xor
sbb
lea
loopne
aad
clc
fnstenv
xor
fnsave
add
or
into
xlat
insb
out
cmpsb
cld
int3
add
lea
push
inc
fcmovne
mov
stos
test
pop
rcrl
shrl
lock
std
jp
adc
pushl
jp
les
fildll
daa
insl
sarb
add
lea
out
std
cmp
scas
sahf
cmp
rcl
or
pop
cmp
dec
xor
jp
adc
pop
sbb
inc
sub
push
ss
int
jmp
pop
jae
icebp
stc
xchg
into
cmp
rolb
out
seto
push
int3
sbb
and
or
or
add
dec
or
or
pop
mov
dec
les
jbe
inc
testb
inc
and
pop
into
stos
cld
int3
fsubl
dec
fwait
cld
aaa
push
pop
fwait
pop
adc
stos
mov
dec
or
imul
xchg
insl
arpl
or
xchg
push
in
popf
iret
mulb
int3
jns
cmpsb
les
inc
sbb
scas
push
sbb
adc
std
ja
pop
outsl
add
shlb
jo
cwtl
mov
rorb
adc
add
out
dec
std
lret
fbld
in
cmp
mov
jecxz
in
jle
scas
push
mov
fnstenv
inc
or
mov
flds
mov
sbb
lret
int3
stc
sarb
jmp
mov
cli
jb
imul
pop
cmp
insl
std
cld
cli
stos
aam
mov
dec
add
xchg
or
dec
cmp
dec
jne
jp
ret
scas
cld
shll
xor
push
and
shlb
mov
cld
jle
xorb
mov
inc
call
cmp
clc
clc
stos
mov
or
xchg
cld
loope
cld
or
lcall
in
std
xchg
dec
shll
in
cld
sub
or
mov
xlat
pop
push
mov
stc
pop
int3
scas
lret
fildl
push
sar
fildl
pop
fistps
inc
stos
shrl
stc
add
dec
jae
iret
cs
xchg
hlt
inc
cwtl
sbb
incl
or
daa
divl
fdiv
mov
hlt
sub
fnstenv
cmc
lret
aad
dec
and
and
dec
inc
jl
in
push
sbb
movsb
cmc
cmpsl
scas
xchg
or
rorb
push
adc
imul
jge
xchg
jecxz
jmp
dec
and
dec
loop
xor
ss
inc
mov
ret
cwtl
push
mov
bound
push
add
lods
xor
loop
aas
add
xchg
stos
add
ret
sub
jnp
aaa
repz
sub
mov
out
and
mov
push
shll
or
jae
ljmp
icebp
jmp
sub
jb
adc
adc
bound
aad
cwtl
sarl
jecxz
repz
int3
push
add
popa
sbb
test
mov
and
xor
sbb
pop
mov
cmpsb
jle
or
xchg
pop
adc
cli
add
push
xor
or
lret
dec
adc
inc
lea
shrb
movsb
cmp
xor
inc
push
rcrb
cmp
inc
pop
cmpsb
or
fmul
stos
mov
mov
lock
orl
add
insl
shrl
dec
inc
dec
or
add
scas
xor
cli
ja
cli
gs
cmpsl
cmp
mov
or
bound
add
lock
or
cmp
sarl
sahf
xchg
in
aaa
cmc
add
frndint
jp
les
add
sbb
fisubrl
add
or
pop
and
popa
lret
push
test
or
sti
imull
mov
stc
fnstcw
xor
repz
or
cwtl
dec
or
in
mov
loop
imul
dec
test
les
cmp
stc
lret
in
inc
lods
out
or
mov
xchg
push
adc
test
js
in
enter
jae
jne
enter
xchg
rolb
popa
in
cmp
lcall
stc
or
mov
xlat
fadds
sub
es
mov
mov
repz
inc
jae
cmp
int3
test
sbb
push
xor
add
testl
mov
cmp
or
in
dec
jle
add
enter
or
mov
push
lods
sbb
call
or
outsl
lods
mov
insl
or
or
mov
add
sub
dec
adc
add
cmp
pop
aaa
aam
jmp
mov
js
aam
fildl
lds
or
loope
adc
repz
sub
and
stos
mov
xchg
cs
aam
aaa
lret
cld
mov
fcmovnb
lock
adc
pop
stc
in
cmp
stc
push
dec
add
jmp
mov
add
scas
test
jl
lret
subb
add
stos
mov
fdivr
das
fstpl
sti
or
stos
lcall
xchg
pop
jns
cmpl
test
pop
mov
sbb
mov
mov
push
and
aam
fs
cld
adc
pop
jne
jne
and
std
add
mov
test
fldl2t
jge
cmp
or
add
push
icebp
jb
xchg
or
pop
jecxz
xlat
mov
xchg
pop
inc
dec
jmp
mov
fucomip
push
jmp
dec
push
jl
ret
aad
push
mov
push
mov
test
jne
or
fisubl
sti
lods
test
pop
sbb
xorl
clc
adc
sbb
outsb
stos
xchg
push
stos
sub
stos
mov
movsb
repnz
fcoml
ffree
pusha
push
pop
or
ret
pop
or
inc
push
addr16
cld
das
std
pop
adcl
or
push
mov
cli
pop
cld
out
out
loopne
daa
dec
or
loop
ret
push
push
jp
sbb
pop
sahf
mov
mov
sahf
pop
shl
into
lret
test
and
jp
daa
dec
inc
mov
in
cmp
xor
pop
fwait
add
pop
cli
ss
out
jecxz
and
ffree
out
jge
jnp
dec
lret
cld
push
rolb
pop
fnstenv
les
shr
push
stos
imul
xor
jp
les
clc
ds
cli
in
push
mov
aaa
jecxz
push
addr16
ret
mov
mov
into
pusha
in
inc
mov
nop
jp
adc
push
mov
or
pop
cmp
mov
sbb
subb
add
adc
mov
mov
pop
in
push
into
clc
std
out
cmp
add
xor
or
sti
pop
and
enter
insb
and
ljmp
add
stc
hlt
mov
mov
dec
call
lret
lea
pop
cmp
imul
out
add
out
or
cmp
mov
shrl
xor
decl
out
mov
push
filds
fwait
pop
push
mov
les
mov
mov
cwtl
adc
mov
repnz
and
dec
jb
pop
push
jle
insb
std
mov
jmp
aam
pop
stos
ss
jnp
dec
adc
stc
mov
push
sub
bound
out
ds
or
mov
mov
clc
test
fidivs
hlt
add
lock
mov
add
sti
mov
push
jle
rorb
jmp
sub
cltd
mov
clc
push
daa
mov
fcomip
jmp
or
jecxz
cmpsl
inc
es
add
push
xlat
push
daa
sti
sbb
nop
pop
in
jl
int3
data16
cmp
movsb
subl
icebp
mov
call
pop
shrl
ret
adc
test
fwait
dec
clc
stos
or
ss
repnz
clc
scas
mov
and
or
or
mov
dec
jl
xchg
fmuls
std
daa
leave
lret
pop
xchg
out
pusha
or
adc
enter
pop
xchg
pusha
popa
data16
rorl
int3
cmp
or
loop
add
stc
pop
add
aas
xorb
clc
xchg
in
sbb
inc
pop
loopne
dec
pop
leave
or
mov
imul
mov
test
movsb
mov
mov
in
lods
mov
scas
gs
in
push
rcrl
cmp
loope
add
subb
push
test
cld
cmpsl
dec
stc
dec
jnp
and
in
aaa
pop
aam
shr
sub
das
or
idivb
mov
cld
sti
out
or
jg
push
leave
and
or
clc
mov
jb
out
inc
cmpb
clc
mov
in
ds
lock
dec
mov
cwtl
ret
mov
test
adc
push
pop
inc
pop
movb
or
cli
xor
ja
jmp
mov
int
cmp
or
movsb
xchg
invd
xor
or
in
adc
cmpsb
xchg
inc
pop
xchg
movsl
jne
jo
insb
data16
ficomps
cld
js
xor
push
xlat
aad
sub
fsubrs
and
jp
mov
sbb
sub
loopne
cmpl
pusha
je
jmp
ja
mov
inc
orl
xor
mov
sub
pop
outsb
jl
mov
push
jmp
call
shl
sbb
pusha
push
add
sti
adc
xchg
icebp
sbb
outsb
or
jp
sub
mov
mov
mov
pop
dec
jb
fdivr
mov
xchg
in
and
stos
or
jl
dec
mov
lret
data16
lret
lods
or
outsb
mov
jbe
xchg
add
iret
enter
adc
sti
bound
std
xchg
lret
insl
fistpll
xchg
xor
sbb
mov
dec
xchg
sbb
pushw
test
rcrb
psubsb
inc
std
or
mov
sbb
cmp
movsl
repz
rcll
gs
cmp
mov
jp
mov
sbb
mov
add
or
in
mov
test
lret
jae
cmp
out
gs
mov
lea
inc
ljmp
inc
fdivl
out
aas
ja
fwait
ret
hlt
sbb
jns
mov
inc
and
xchg
sti
pushf
dec
add
loopne
mov
jnp
sbb
repz
sarb
loop
add
lock
jmp
dec
sarl
inc
jns
push
sub
fcomi
testl
fsubr
sbb
dec
insb
inc
push
stos
movsl
push
pop
stc
push
gs
xchg
repnz
movsb
xchg
repz
push
icebp
roll
ret
sbb
xchg
movsl
xchg
or
rcrl
pop
mov
push
out
dec
in
pop
in
pop
or
stos
leave
lods
in
jmp
dec
xor
or
pop
and
cld
xor
mov
jp
fwait
dec
dec
xchg
in
adc
or
fstpl
mov
imul
cmp
inc
lcall
adc
mov
cwtl
lcall
cmp
in
lods
cli
dec
cmp
xor
mov
fucomip
arpl
mov
ret
and
cmp
inc
in
aaa
rol
test
insb
gs
shll
dec
add
mov
bound
add
fsub
mov
loop
ret
and
addl
pop
loope
ret
in
and
or
sub
enter
nop
aaa
sti
fisttps
pop
sub
stos
sub
sbb
dec
shlb
cmp
enter
push
or
ja
and
jns
sti
push
sar
pop
outsl
push
cmp
jns
or
rcrb
add
std
jb
and
lret
rcl
js
dec
dec
stos
testl
push
imul
out
les
lea
aaa
in
add
cld
shrl
leave
jmp
icebp
shr
mov
mov
xchg
cld
scas
dec
lods
ljmp
xchg
push
insb
sahf
std
jl
adc
loope
mov
sub
push
pop
in
ret
imul
lret
add
mov
and
pop
repnz
in
daa
shrb
jmp
dec
inc
jb
sbb
add
cmp
int3
fdiv
aad
pusha
movsb
mov
pop
outsb
aas
movsb
fdivl
sbb
dec
xor
xor
fs
shlb
lea
or
add
es
inc
into
xchg
cmp
std
out
push
cld
outsl
push
mov
mov
loop
jecxz
adc
cmp
mov
int3
pop
or
push
ja
or
js
push
mov
jge
mov
jl
mov
xor
sub
scas
or
add
add
pop
sub
mov
jle
pop
jnp
mov
loopne
cwtl
les
popa
add
in
dec
push
push
idivl
cmp
mov
lret
add
scas
push
imul
dec
or
inc
inc
mov
jmp
xchg
xor
scas
nop
mov
loopne
cs
test
insl
test
test
mov
filds
test
les
out
push
idivl
sarb
pop
test
adc
ret
cmpsb
arpl
or
mov
fistpl
and
xchg
mov
mov
and
out
jmp
hlt
mov
add
adc
inc
xchg
push
pushw
cltd
add
mov
sub
jp
or
add
or
sbb
mov
sub
push
sbb
fcompl
movsb
daa
inc
mov
inc
or
bound
scas
mov
push
dec
jns
sbb
fwait
int3
jb
pop
dec
dec
lock
xchg
lea
push
cwtl
xchg
stos
adc
adc
insl
or
xchg
or
out
pop
addr16
dec
xor
stos
icebp
jecxz
xchg
inc
fwait
mov
mov
sbb
enter
addr16
add
xlat
test
stos
aam
push
xchg
cmp
out
xchg
in
xchg
pop
pop
test
xor
incl
or
decl
movsb
push
inc
mov
std
add
cmp
sub
or
adc
ret
stos
or
mov
mov
push
or
push
les
push
into
mov
sbb
inc
cmp
aam
fneni(8087
mov
inc
in
push
adc
dec
push
jp
lret
insb
fwait
add
repz
jmp
loope
arpl
sbb
mov
jmp
pop
filds
imul
ljmp
hlt
daa
or
jle
push
fisttps
push
insl
xchg
pop
and
dec
fildl
out
push
or
inc
shll
dec
outsl
dec
shrl
call
inc
fninit
mov
mov
push
inc
xor
les
rcr
xchg
and
aaa
inc
mov
add
cwtl
leave
stos
insb
inc
mov
or
bound
jnp
les
and
fildl
or
stos
cmp
or
jl
jns
sbb
xor
int3
jmp
mov
add
jo
scas
pop
loopne
fwait
or
dec
xrelease
sbb
jb
mov
enter
push
mov
sbb
int
xchg
jae
cmpsb
lea
ret
shrb
dec
iret
lret
dec
sub
je
mov
lret
fs
pop
test
adcb
popf
adcb
arpl
dec
sub
cmp
or
xor
or
aas
test
pusha
inc
ret
mov
enter
add
lcall
jg
and
push
stc
repz
cld
loope
cmc
sti
jne
dec
nop
int3
pop
cmc
xchg
xchg
xor
pop
or
ret
scas
out
test
inc
ljmp
cmp
loope
rcr
fadds
jbe
inc
add
shll
jmp
dec
cmpsb
inc
aad
inc
mull
shll
aam
out
lock
roll
jmp
push
xchg
jmp
loope
int3
ror
pop
add
add
or
jge
pop
hlt
jecxz
mov
mov
xchg
rorl
lock
pop
fsubr
mov
addr16
lds
ja
fmulp
jno
push
scas
xchg
out
ds
inc
subl
xor
dec
das
jno
stos
push
and
pop
outsl
fst
pop
mov
mov
pop
adc
mov
fwait
outsb
xchg
xchg
loope
add
mov
loopne
cmp
push
hlt
push
gs
cmp
js
lret
jmp
sub
xchg
jns
push
in
xchg
xor
mov
add
enter
fldt
rolb
dec
cmc
push
pop
ret
in
negl
cmp
sub
cld
mov
out
js
vpaddb
testb
xchg
fs
mov
mov
pop
repz
jbe
xchg
movsl
or
dec
test
jne
jae
inc
aas
dec
jp
xor
ja
inc
fidivrs
notb
test
mov
pop
je
icebp
inc
xchg
xor
jle
nop
rol
neg
jmp
int3
add
fimull
cmpsl
or
cmpl
dec
mov
add
jb
int3
repz
fisubrl
mov
jns
lret
fistl
xlat
in
ljmp
int3
mov
and
inc
out
sub
movsb
mov
or
dec
lock
xor
imul
jl
cmpsb
rol
mov
out
repnz
rorl
sub
cmp
stc
aam
in
jl
leave
mov
pop
lods
out
push
test
mov
pop
cmpsb
add
test
inc
iret
fadds
or
and
add
cmp
inc
xor
leave
je
bound
sarb
mov
and
lret
cmpsl
fisttpll
iret
cmp
cld
fsubrs
inc
aam
jb
mov
cli
inc
jnp
dec
xor
pop
outsb
xor
or
and
cmp
out
js
hlt
movsl
jne
push
ret
mov
in
push
xchg
in
ds
dec
jl
inc
movb
jne
pushf
aas
iret
sbb
adc
push
fdivrl
iret
pop
sti
nop
mov
or
imul
cs
lock
shll
xchg
xchg
loopne
mull
dec
push
ds
aaa
dec
es
add
jecxz
int
jb
js
hlt
jecxz
fdivrp
dec
lahf
or
rcl
push
add
nop
sarl
mov
adc
xchg
fcmovnu
or
cmpsl
jmp
jmp
sub
sbb
or
dec
mov
daa
hlt
adc
aas
push
subl
in
ljmp
ds
mov
mov
and
cmp
push
hlt
mov
cwtl
cmc
shlb
ret
cmp
sbb
sub
je
adc
cmp
clc
or
inc
stos
sub
gs
xchg
rolb
push
jmp
mov
int3
mov
fiaddl
in
add
cld
or
fisttpl
jle
cs
andl
call
arpl
mov
fildll
inc
or
aaa
or
mov
mov
inc
out
jb
or
sbb
das
dec
int3
scas
rol
fcomps
ret
loope
fwait
mov
imul
pop
lea
or
fucomip
sbb
adc
jmp
jmp
push
sbb
into
daa
shrl
pop
iret
pop
and
pusha
mov
ret
sub
pop
ss
xchg
popf
sarl
jmp
ret
mov
test
scas
dec
push
jnp
xrelease
stc
mov
fs
rclb
cmp
fstps
xchg
jmp
lahf
xchg
push
or
repnz
into
aad
out
aaa
dec
pop
inc
sub
movl
push
add
in
inc
lods
dec
mov
in
sub
sub
out
pushf
push
dec
dec
insb
lahf
pusha
test
lock
jp
jno
movsb
or
xchg
data16
inc
lods
pop
fistpll
add
dec
push
dec
jns
loopne
and
int3
add
or
lods
push
pop
add
js
rorl
rorl
jp
cmp
xor
xchg
test
fisttps
lods
mov
stc
imul
out
enter
stos
rcrb
mov
push
test
xchg
cs
in
mov
stos
pop
jno
sub
hlt
dec
insb
cmp
jns
jle
xor
and
scas
lds
test
in
or
cmp
adc
enter
les
sub
xchg
cmp
jmp
int3
xchg
int3
cmp
xor
add
jae
cmp
jg
push
and
inc
lock
or
jae
dec
insb
mov
xchg
popf
insl
cltd
je
fildll
mov
hlt
jbe
mov
add
scas
push
rolb
mov
test
imul
mov
mov
jmp
xchg
jmp
int3
xchg
test
iret
inc
xchg
xor
cli
iret
sub
filds
or
xor
inc
xchg
jl
hlt
addb
lods
or
ljmp
lret
add
dec
outsl
jae
decl
ds
fnstcw
ret
stos
pop
in
push
lods
jle
add
dec
aas
imul
mov
push
sti
pop
xchg
add
inc
icebp
sbb
ret
pop
add
inc
int3
ret
or
push
daa
mov
sbb
add
or
fs
push
adc
pop
ljmp
lods
jp
mov
xor
mov
mov
pushf
pusha
lret
pop
pop
cli
pop
cmp
pop
stc
pop
or
rcl
dec
jle
push
sarb
adc
adcl
cmp
ror
push
les
cld
pop
pop
mov
add
mov
cmpsb
pop
out
inc
jle
inc
iret
stc
mov
add
mov
add
clc
test
andl
mov
jge
jle
cmp
or
ja
mov
xor
or
scas
sbb
and
movsb
lret
pop
and
inc
or
imull
sub
shll
gs
mov
ret
fcmovnbe
roll
mov
aas
add
jnp
jle
jns
add
cld
xchg
push
or
mov
dec
push
jl
jp
add
lods
stc
orb
ret
out
add
fldcw
jmp
mov
push
mov
sub
jno
lret
fidivrl
push
ret
cmpsl
loope
sbb
cmpsl
mov
loop
cmp
jo
or
or
sub
mov
push
daa
jle
lods
pushf
enter
jns
xor
stc
je
or
xchg
mov
add
aam
add
push
sub
cmp
push
sti
push
lret
inc
cmp
cld
mov
inc
xchg
insl
adcb
cmp
pop
add
ljmp
dec
out
mov
lock
and
mov
mov
fsub
data16
ja
subl
mov
inc
cmp
or
sbb
add
or
mov
dec
xor
cld
adc
in
sbb
test
sti
fcmovb
out
lock
xchg
ja
mov
mov
jp
movsl
lret
loop
aad
sbb
daa
dec
cwtl
cmc
jmp
loop
xchg
enter
jnp
jns
sti
addr16
add
inc
mov
rcrl
lcall
jnp
sub
push
mov
jbe
ds
fwait
mov
dec
or
in
sarl
or
mov
out
sbb
sbb
jecxz
mov
lea
inc
sti
ret
test
les
adc
cld
cltd
cmc
dec
and
enter
adc
aaa
xchg
add
push
mov
pop
mov
push
jge
or
inc
sbb
xchg
pop
mov
js
int3
add
cmpsl
lmsw
cltd
add
or
pop
into
sahf
jmp
test
jecxz
inc
cli
xor
mov
pop
clc
lock
or
ret
dec
adc
sbb
fdivrl
sub
insb
push
stc
in
cwtl
shrb
mov
add
mov
xchg
or
faddp
insb
mov
lcall
jnp
scas
push
bound
mov
ljmp
loope
push
or
fsubr
cmc
pop
sub
insl
hlt
mov
mov
mov
sbbl
adc
push
ja
xor
cmp
xchg
addr16
push
jne
mov
add
jnp
or
in
pusha
dec
mov
xchg
enter
xchg
lods
mov
dec
sarl
in
iret
add
cmp
jle
enter
stos
pop
test
rcrl
push
add
or
outsl
cmc
ja
mov
out
or
clc
jns
push
je
mov
lods
inc
mov
rorb
pushl
sub
jne
std
mov
pop
fidivrs
mov
adc
mov
mov
dec
adc
pop
rolb
adc
pop
push
stc
dec
dec
insb
stos
or
fwait
push
pop
rclb
add
push
sub
enter
pop
push
dec
inc
cmp
cld
add
test
sub
pop
imul
xchg
mov
inc
cmp
dec
xor
mov
lea
outsb
push
out
jmp
add
cmp
gs
loope
in
data16
fs
mov
and
sahf
repz
or
add
xor
scas
lret
test
out
hlt
ffree
cmc
fisttpll
jmp
in
mov
sti
dec
lods
pushf
or
enter
shl
sub
jnp
clc
test
mov
sbb
js
faddl
xor
sbb
dec
inc
push
mov
addr16
xor
jmp
sub
adc
mov
fucomi
lcall
mov
mov
std
cmp
or
lret
xchg
ret
xchg
rorl
fnstcw
stos
imul
pop
fmull
xor
test
in
adc
or
mov
or
fmul
mov
jnp
jnp
or
sbb
sub
jp
addl
sbb
xor
pop
dec
and
cld
lock
or
pop
leave
mov
jmp
leave
add
loope
or
repnz
pop
in
sti
add
negl
jle
mov
mov
sbb
or
adc
push
inc
sub
sbb
xlat
cmpsl
push
sbb
jp
add
aas
repz
int3
add
inc
mov
add
pop
cmpsb
jl
out
push
jp
jl
sti
xchg
push
inc
aas
imul
dec
mov
jmp
xchg
out
xchg
inc
test
jl
bound
ja
push
or
setge
mov
adc
inc
cmpsb
or
std
repz
xchg
jp
jae
sbb
mov
push
test
into
and
xchg
movsb
lahf
adc
cmp
test
jno
jmp
daa
and
push
lods
or
loope
cmpl
push
mov
mov
xchg
nop
mov
cli
jb
add
call
or
add
push
pop
and
stos
int3
pop
mov
inc
lret
dec
adc
dec
inc
push
test
outsl
or
add
or
mov
lahf
js
ss
push
mov
or
inc
fstpl
sbb
mov
sti
pop
repz
and
lds
or
add
and
std
ljmp
cs
and
and
jmp
mov
loopne
inc
push
adc
out
mov
dec
mov
orb
pusha
les
jb
mov
lahf
sbb
mov
lea
lods
cs
cmp
mov
push
mov
arpl
or
mov
dec
xchg
jb
mov
push
xchg
add
hlt
add
in
inc
mov
add
loope
movsb
mov
out
or
fwait
ljmp
cmp
mov
imull
jno
cmp
cld
clc
jnp
les
ret
fwait
mov
hlt
cmp
pushf
xor
outsb
lret
jo
add
add
dec
lock
xor
inc
stos
into
and
cmp
das
cmpsb
add
rcrl
out
scas
enter
scas
jb
fucomip
je
jmp
mov
mov
push
popf
outsl
mov
dec
cld
pop
dec
cmp
jns
out
or
add
xchg
cmpsl
mov
fldt
xchg
add
outsl
stos
cmpsl
adc
push
cmp
add
or
push
popa
push
lods
sub
loop
cmp
xor
lret
dec
or
mov
test
les
fldcw
es
nop
add
or
movsb
fldcw
js
adc
push
repz
pop
or
lods
stos
in
xor
popf
xlat
xchg
mov
sub
mov
jmp
mov
jb
sbb
shl
loop
loopne
fwait
push
adc
filds
ds
lret
sbb
ja
repz
stos
mov
inc
call
leave
cmp
loope
insb
lods
or
jecxz
out
and
cmp
push
mov
mov
sbb
pop
add
int3
jp
in
enter
or
sbb
jb
mov
ds
lret
mov
xchg
bound
icebp
popf
in
pop
jnp
in
mov
into
andb
sub
js
adc
scas
mov
xlat
lock
iret
adc
add
push
fs
test
das
cmp
subl
pop
mov
insb
fmull
jl
subl
lcall
into
pop
iret
adc
dec
insb
lock
sub
xlat
imul
leave
xchg
aam
and
mov
lret
mov
inc
stos
testl
sahf
ror
mov
lret
movsl
lret
mov
fstpt
add
nop
movsb
xchg
bnd
push
insb
mov
lock
aas
jecxz
pusha
pop
inc
inc
jmp
test
push
push
cmp
les
outsl
cltd
stc
rorb
repz
daa
in
xlat
iret
fwait
fs
fstpt
loopne
nop
out
cmp
ret
jl
mov
ret
sti
fisubl
test
je
sahf
ret
mov
outsb
lahf
cltd
faddp
mov
je
or
pop
in
jns
in
sub
dec
mov
jmp
jo
sub
subb
jmp
jmp
hlt
aas
repz
das
sbb
inc
xor
out
test
int3
neg
cmp
cltd
imul
jne
sti
or
stos
pop
enter
aam
popf
jl
inc
or
daa
insl
sub
xor
leave
sub
sbb
and
in
dec
add
mov
jl
cmp
roll
pop
stos
sub
dec
test
cld
add
sti
fbld
leave
data16
pop
xor
and
cld
roll
daa
cmpsb
and
add
les
fiadds
das
mov
fucomi
clc
rcll
sarb
stos
jle
inc
pusha
lea
cmp
jne
or
subl
sub
into
xchg
cmp
sarl
ret
pop
lret
sarl
hlt
or
sub
push
aad
andb
jno
test
pop
pop
push
ds
icebp
scas
inc
inc
mov
sarl
cs
icebp
or
scas
adc
aas
xchg
sahf
call
fistpll
div
jle
add
imul
sub
mov
stc
es
jle
xor
jae
push
push
sub
scas
in
pop
push
sub
scas
ja
cld
or
stc
push
es
and
sbb
cmp
push
xchg
dec
cmp
clc
imul
dec
sarb
pop
cmc
inc
rcrl
ret
inc
loope
adc
dec
push
cmc
fidivl
push
shl
leave
rcrl
add
inc
inc
cmp
dec
clc
stc
sbb
add
adc
xor
nop
or
jl
ljmp
repz
mov
ds
dec
stos
push
cmp
dec
and
push
std
daa
add
insb
repz
sbb
jl
test
fwait
add
mov
out
cmp
jmp
mov
mov
cmpsb
mov
lock
fsubrl
test
inc
fwait
scas
fsubs
xor
push
test
mov
or
pop
dec
fdivl
mov
adcb
mov
add
sub
subb
or
scas
lret
cmp
nop
adc
add
dec
mov
jg
inc
or
rorl
daa
test
outsb
movsb
test
out
or
and
jae
test
and
mov
ja
fs
cld
ret
inc
xor
xchg
add
rorl
jmp
shl
push
or
int3
pop
cmp
stos
shll
mov
pop
test
sub
clc
sarb
cli
test
stos
or
inc
ret
fsubl
mov
inc
cmp
pop
icebp
or
stos
or
in
cmp
jnp
jmp
ret
xchg
inc
sub
cmp
mov
int3
xlat
adc
fisttps
cmp
popf
ret
or
lcall
add
add
idiv
mov
xchg
jl
add
aaa
jecxz
scas
test
cmp
mov
loope
pop
push
mov
mov
es
mov
addb
or
andb
or
roll
aaa
or
and
jo
cmp
mov
stos
xchg
jmp
fstps
pop
loope
insb
or
test
fisttpl
js
ret
xchg
push
adc
jmp
stos
fwait
pop
int
pop
cmp
jae
aad
sarl
dec
push
dec
pushf
cld
dec
call
jl
push
xchg
cmpsb
loope
sub
je
push
lock
movnti
pusha
test
hlt
sti
clc
scas
cli
insl
cmp
push
mov
lds
jecxz
aaa
jne
mov
jb
jns
sbb
push
dec
mov
pop
js
dec
cmpsb
insb
enter
sbb
cmc
sub
mov
add
mov
mov
add
sub
sub
fldt
xchg
fiadds
or
cmp
jle
sbb
sub
fadds
shll
repz
mov
inc
pop
jae
xor
sbb
stos
ds
fstpt
jp
add
icebp
repnz
mov
inc
testb
in
scas
xchg
jmp
int3
ja
dec
loope
or
or
sbb
imul
xchg
les
data16
subl
mov
or
or
add
lock
incb
push
and
cmp
adc
arpl
jne
pop
cmp
ret
inc
xlat
iret
inc
in
and
aam
mov
add
add
dec
test
loope
hlt
adc
shl
mov
stos
sub
ret
into
cmp
or
or
push
stos
and
sub
mov
or
dec
into
sbb
adc
insb
or
lret
mov
mov
xchg
pusha
daa
sar
mov
jno
mov
fisttpl
lock
cmp
and
aam
std
mov
mov
pop
adc
ljmp
cmp
mov
mov
mov
hlt
add
add
test
cmpsb
scas
sbb
pop
pop
in
and
lods
ja
popf
push
addr16
aas
mov
fsubrl
icebp
mov
inc
lret
cmp
lds
inc
xor
inc
mov
leave
cmpsb
add
cmpsb
cmc
call
test
out
xchg
pop
std
or
fsubrs
ret
fsubl
out
or
jp
jl
push
adc
mov
lock
pop
in
aam
pop
or
cmp
aam
js
ss
mov
sahf
pop
dec
and
add
dec
mov
lret
jge
mov
add
adc
pop
sbb
fs
leave
inc
inc
and
pushw
dec
das
jbe
jne
add
roll
jp
ljmp
movsl
dec
in
repz
out
ja
xchg
enter
enter
mov
aad
shrl
lods
add
mov
pushf
test
decl
and
cld
aad
cmp
fistl
dec
ss
into
test
jb
sahf
mov
sub
stc
call
lret
dec
mov
mov
adc
mov
out
or
jecxz
popf
xchg
inc
rorl
call
lock
imul
or
mov
imull
sub
in
stc
rcrb
mov
cld
or
in
sub
stos
fmulp
loop
cmp
xor
shlb
pop
sarb
icebp
popf
js
xor
mov
sbb
add
test
xchg
or
mov
jp
ss
or
xlat
xchg
scas
or
cmpsl
jl
movsb
stc
inc
mov
js
pop
xchg
enter
mov
cli
das
mov
mov
aad
pop
or
or
or
or
or
add
lods
or
iret
or
or
test
lar
xchg
xchg
iret
fmull
cld
in
sub
push
sub
adc
in
push
test
sahf
inc
cmp
adc
mov
pop
into
cmpsl
inc
inc
xchg
add
lret
sbb
lds
add
outsb
push
shll
stos
jmp
jo
enter
xchg
or
push
dec
ds
ret
push
roll
shll
cmp
outsb
cmp
aam
rclb
or
repz
sbb
mov
and
aad
jne
push
or
rorl
adc
dec
fnstsw
fnclex
in
jp
nopl
add
xlat
xor
jg
idivb
add
loope
stc
mov
jle
cmc
add
mov
shll
push
cmp
sahf
and
jle
in
inc
mov
aam
cmp
ret
rcl
push
outsb
jmp
rolb
mov
icebp
cwtl
mov
mov
lods
jb
pop
lock
ret
mov
push
mov
jecxz
mov
lea
add
iret
outsb
rorl
and
lea
fadd
and
cmp
pop
or
ret
sahf
or
and
mov
inc
bnd
add
lar
or
jl
lret
scas
lds
hlt
jbe
rclb
lods
cmp
jnp
adc
hlt
mov
das
fistps
loope
aaa
jle
insb
xor
dec
or
ds
vpcomuq
ret
mov
insl
adc
dec
mov
test
or
mov
mov
jmp
stos
mov
jns
xchg
decb
or
add
cmp
fcmovne
mov
in
ds
repz
imul
aad
xchg
daa
jl
mov
jl
int3
push
js
leave
add
js
xchg
xchg
nop
inc
or
pop
stos
outsl
inc
adcl
fs
mov
dec
or
push
into
addr16
jmp
aad
jns
iret
scas
ss
pop
mov
fmuls
rorl
fcomps
stc
hlt
dec
out
ret
out
repz
in
pop
sarl
loop
cmp
sbb
fbld
fwait
daa
sbb
push
adc
inc
mov
mov
dec
sub
mov
dec
pusha
push
push
bnd
std
clc
stos
inc
fmul
ss
sbb
aam
xchg
add
and
jns
jbe
sub
mov
clc
loopne
roll
fs
mov
int3
mov
and
push
add
xchg
inc
das
int3
push
in
adc
addr16
mov
stc
test
mov
andl
mov
orb
sbb
inc
adc
bound
leave
mov
shlb
and
in
add
in
mov
xor
pop
repnz
das
sar
xor
jg
getsec
mov
adc
jne
ds
stos
pop
jno
cmp
mov
imul
scas
sbb
xor
test
loop
sarl
cmc
out
jno
push
stos
test
lret
jne
cmpsb
push
mov
cmp
cli
sbb
add
fdivl
mov
and
pop
and
or
insl
push
mov
les
and
addps
stc
clc
fadd
mov
push
mov
xchg
fisttps
fmull
mov
in
push
xchg
mov
mov
pusha
lea
mov
leave
mov
dec
dec
or
dec
sub
jb
daa
dec
mov
sbb
andb
add
in
in
icebp
out
movb
popa
into
hlt
xor
ds
dec
and
ret
cs
push
mov
jmp
push
nop
aam
loopne
sbb
pop
inc
xchg
xchg
repz
sub
pop
repz
sub
imul
mov
hlt
jns
mov
dec
ss
fcmovu
or
fwait
or
inc
push
and
ja
jmp
or
or
ret
xrelease
inc
addr16
stos
jae
test
or
les
add
imul
lods
mov
aaa
xrelease
xchg
mov
xor
cmpsl
mov
jo
jns
cli
dec
sbbb
adc
scas
jno
push
sub
cmp
mov
dec
mov
cmp
gs
cwtl
pop
mov
adcl
scas
lock
push
lcall
or
cmpsb
cld
or
fistl
xchg
push
xchg
mov
inc
imul
pop
mov
stos
sub
ret
cld
out
and
or
pop
in
fmuls
pop
inc
fnstenv
lock
js
add
or
ljmp
and
aam
dec
dec
jge
pop
icebp
xchg
lds
cwtl
lea
repnz
sub
push
adc
jle
clc
sub
adc
or
mov
lcall
dec
in
shrb
pop
cmp
jne
mov
out
ds
js
or
shrl
cs
cld
push
test
dec
and
cs
pusha
jne
sub
ljmp
pop
xchg
add
xchg
or
or
sub
lock
adc
popa
pushl
jno
icebp
in
test
or
xchg
mov
jp
icebp
test
enter
ret
pushf
std
or
dec
or
push
xchg
lock
and
dec
dec
pop
cmp
pop
mov
add
or
sti
mov
jnp
jle
add
popa
aaa
lods
jo
mov
dec
out
bound
movsl
testl
jae
arpl
adc
cmp
xchg
jmp
ret
test
in
or
inc
push
cmc
add
push
pop
add
or
call
cld
adc
sub
or
test
mov
inc
inc
xchg
xlat
or
popf
outsl
pop
rorl
ss
in
divb
jbe
call
aad
iret
ds
inc
in
jnp
sbb
adc
jbe
out
xlat
pop
mov
scas
cltd
mov
mov
sub
cmpsl
sbb
cmpsl
or
roll
es
in
scas
inc
dec
pop
or
aad
jae
loope
stos
sbb
lcall
cpuid
jae
sti
xchg
das
add
lock
xor
pop
test
pop
dec
sub
pop
jbe
or
push
mov
shr
and
xchg
jp
add
bound
dec
iret
xchg
add
bound
pop
and
lret
jmp
inc
sahf
sub
in
movsl
xlat
int
lods
xor
mov
loopne
jl
mov
lcall
jp
xchg
call
push
dec
sti
and
mov
rolb
jecxz
call
call
jne
js
push
incb
fbstp
cmpsb
jge
orl
mov
dec
idivb
cmp
lret
enterw
jns
dec
scas
mov
inc
repz
lret
dec
aam
jb
dec
xchg
stc
inc
rorl
and
push
je
in
out
mov
fisubrl
ljmp
or
add
clc
adc
nop
push
sub
xchg
or
dec
mov
call
out
or
mov
jns
fsubp
aaa
testb
lock
or
xor
mov
mov
cmpsb
add
mov
gs
jmp
les
inc
mov
fcomps
ret
xor
hlt
push
shl
dec
push
int3
sub
loop
push
scas
inc
popf
mov
or
add
lock
in
movsl
notl
and
mov
movsl
cmp
enter
sbb
shll
add
testb
bound
testb
ret
fldenv
lret
sbb
fidivrs
add
mov
in
std
rolb
std
insl
cs
jnp
shrb
xor
add
jne
mov
jns
push
mov
fdivrl
dec
sub
int3
mov
iret
mov
es
in
fcmovnb
shlb
clc
cmp
jmp
adc
jle
fdivrl
mov
cs
in
sbb
and
or
ret
in
adc
scas
fwait
push
jb
les
push
cmp
sub
sbb
lahf
jno
jle
stos
dec
xchg
or
popf
or
lock
sbb
add
shll
es
xchg
dec
out
sbb
les
adc
stc
pushf
mov
mov
sbb
shrl
or
add
and
fildll
insb
inc
xchg
inc
or
jae
outsb
mov
insl
adc
test
or
dec
arpl
sub
repnz
mov
sbb
cld
sahf
shll
add
xchg
pop
push
add
mov
xchg
pop
ret
rcr
xchg
mov
aad
rol
in
mov
ret
xchg
fnstsw
mov
pop
fsubp
fwait
dec
jae
xor
pop
add
or
jo
or
sub
cmpsl
cmc
fcomi
dec
and
mov
push
andl
and
inc
iretw
add
add
mov
or
loop
loop
das
or
sahf
jmp
mov
sbb
sub
hlt
outsb
inc
inc
orl
or
shll
bound
add
sbb
adc
mov
sbb
aad
flds
jbe
test
mov
sahf
inc
or
arpl
mov
dec
fmul
mov
clc
xor
jl,pt
dec
mov
dec
js
xchg
shrb
push
dec
cmp
call
out
sbb
pop
sub
cltd
push
adc
les
clc
and
dec
jno
xchg
dec
test
int3
jg
jmp
mov
inc
test
cmpsl
mov
add
fcoml
xor
jmp
ret
dec
pop
adc
jp
mov
push
mov
sub
sarl
cli
sti
les
pop
xor
xor
mov
dec
testl
mov
add
push
fadds
jp
sub
sub
jne
ret
dec
xchg
je
cmpsb
ret
pop
pop
jnp
sbb
jo
mov
jl
lcall
or
sub
pop
dec
mov
cmp
cli
add
ss
dec
in
mov
test
cmc
inc
or
jp
or
add
mov
push
aad
shll
lcall
call
stos
icebp
enter
leave
sub
adc
and
aam
xor
jmp
mov
cld
andb
lods
or
or
pop
xrelease
roll
pop
cmc
insl
add
cld
das
cmpsb
imul
dec
adc
pop
cmp
movsb
mov
fstpt
xor
jo
dec
mov
push
adc
lods
dec
ss
adc
adc
or
pop
mov
mov
push
mov
arpl
xchg
xor
or
in
xchg
mov
jle
add
and
popf
fcoml
stos
adc
or
icebp
mov
or
mov
outsb
stc
sar
mov
push
int3
fistps
testb
add
in
in
movsl
mov
scas
leave
or
fistl
adc
enter
iret
roll
jl
mov
xchg
fwait
cld
lret
lcall
in
lds
and
add
test
int3
or
mov
fisubrl
or
add
push
aas
jns
mov
jno
lahf
adc
adcl
mov
lods
cld
xor
or
nop
stos
inc
pop
adc
inc
fcmovbe
aam
cmp
mov
xor
jnp
sub
or
lahf
cmpsb
sub
or
ror
dec
jl
repz
imul
or
push
pop
or
scas
je
or
cli
xcrypt-ctr
cmpsl
pop
xor
dec
pushf
aas
or
sub
push
lds
or
xor
cmp
hlt
jl
test
xlat
shl
daa
jecxz
pop
mov
mov
lods
inc
sti
hlt
sbb
por
insl
stc
add
jns
sahf
mov
out
aaa
adc
stc
scas
or
scas
mov
pop
pop
int3
orb
inc
outsb
sti
movsb
dec
or
dec
fistps
push
or
loopne
or
inc
xchg
stc
xchg
jns
cmc
ja
std
out
rcrl
sbb
push
ds
jno
lds
aad
sbb
fists
pop
inc
mov
sahf
mov
es
inc
insl
loop
cmp
inc
sarl
pop
mov
aas
nop
or
jno
cmp
or
imul
fs
add
pop
ljmp
adc
pop
std
add
orl
jb
dec
loop
in
cmp
addr16
xchg
jb
dec
inc
inc
ja
pop
dec
mov
scas
js
add
popa
mov
subb
mov
shrl
fdivrl
out
enter
jb
jnp
fbstp
adc
jo
adc
push
insb
xchg
je
les
ds
sbb
pop
clc
mov
mov
dec
sbb
xor
add
mov
mov
leave
add
dec
lcall
push
push
stos
mov
jecxz
jne
lock
ret
cwtl
add
into
mulb
or
add
dec
ja
lahf
repnz
mov
js
lahf
sbb
or
fdivrp
or
rorb
or
inc
fists
dec
jp
pop
ljmp
mov
and
pop
cmpsb
mov
outsl
cld
cmp
in
and
lcall
push
adc
or
scas
jle
fwait
jl
lret
mulb
jg
lret
cwtl
push
fdiv
push
sbb
jmp
icebp
cli
cwtl
dec
mov
adc
push
pop
leave
xchg
sub
stos
incl
dec
push
adc
xlat
lods
daa
ror
xor
add
sbb
sti
stc
dec
movsl
cli
adc
leave
jmp
push
stos
add
xchg
or
pop
dec
xchg
inc
pusha
bound
pop
dec
fists
sub
dec
jl
cld
mov
inc
popa
xchg
dec
jge
lret
or
sub
jmp
add
inc
sti
add
add
xlat
fstpt
lahf
jl
cli
shlb
mov
ror
dec
sbbb
push
add
push
fildl
inc
jmp
pop
cwtl
fwait
dec
push
out
mov
inc
or
or
push
out
mov
sub
ret
sbb
imul
cmp
dec
sbb
jg
inc
cltd
adc
dec
and
ja
subl
sub
test
push
subl
xor
xchg
lret
pop
add
stos
sbb
or
hlt
jbe
test
mov
adc
pop
inc
add
add
nop
jmp
pop
mov
mov
cli
pushf
push
or
jp,pt
lret
add
cltd
stos
rep
leave
popf
cmpsl
mov
adcl
fldln2
jecxz
mov
pop
jle
les
hlt
test
xchg
inc
jg
loop
jnp
fmull
cmp
mov
repnz
mov
out
jae
scas
or
and
inc
cmc
call
test
pop
xlat
shll
and
sbb
add
or
bound
gs
adcb
int
cmp
pop
scas
in
iret
pop
xchg
inc
mov
dec
dec
lcall
adc
ret
ss
or
stos
cmp
xchg
je
push
xor
cmpsb
insb
mov
cmp
xor
popf
or
cmp
dec
cmp
push
mov
int3
ljmp
pop
add
mov
insl
and
or
outsl
xchg
je
mov
aaa
out
mov
shlb
mov
repnz
add
int3
push
push
sub
mov
imulb
lds
lds
push
mov
mov
adc
xor
insl
mov
repnz
cltd
rep
in
or
les
xor
push
lods
push
test
into
imul
leave
mov
lods
jl
ret
jne
clc
mov
and
mov
push
ja
sbb
xor
xor
inc
dec
dec
sbb
call
xchg
pop
xchg
jo
enter
out
add
lock
mov
leave
jecxz
leave
jl
fsubrs
std
mov
loopne
mov
lret
adc
inc
jp
xchg
xor
inc
pop
dec
dec
dec
dec
xchg
or
cmpsl
aam
hlt
adc
add
sub
dec
cmp
fistpl
aad
push
pop
inc
push
lret
inc
test
mov
rcl
push
imul
jne
push
sub
lock
aaa
jns
les
arpl
inc
inc
int3
test
push
repnz
into
pop
and
bound
cmp
sahf
jb
call
enter
test
mov
cmp
fistps
out
jns
push
mov
pop
pusha
inc
dec
rorl
jge
call
jmp
mov
scas
jp
push
stc
int3
scas
xor
out
shrl
adc
pop
jno
ds
mov
jbe
loop
push
add
je
jns
or
in
divl
hlt
in
sub
ss
fs
fabs
test
jbe
ss
scas
cli
and
in
jns
pop
loop
std
fwait
mov
cmp
fs
stc
add
jns
les
rcrl
scas
pop
jp
call
lock
sahf
mov
push
test
aad
movsb
add
pop
mov
loope
clc
jno
inc
and
insl
sub
cmpsb
sbb
adc
sti
imul
repnz
dec
xor
je
inc
xchg
mov
or
ljmp
fdivs
outsl
add
cmp
adc
sarl
iret
xchg
daa
rcl
out
cmp
mov
shrl
les
inc
leave
outsb
push
jge
mov
mov
std
sti
xor
lahf
clc
mov
jge
iret
iret
xor
scas
jno
sbb
rol
inc
adc
cmpsl
shlb
mov
dec
dec
sbb
or
sahf
iret
and
ficoml
fildll
int3
pop
testb
jp
mov
inc
rclb
pcmpgtb
jmp
mov
mov
push
out
inc
jbe
cmpsb
jg
mov
add
rcl
mov
fdiv
out
dec
in
insl
mov
repnz
mov
in
stc
sarl
jno
ljmp
or
cmp
nop
cmp
jmp
cld
scas
xor
inc
mov
pop
add
cld
push
ret
or
cmp
in
les
das
ja
push
jp
mov
fdivrl
out
cmp
xchg
into
jmp
or
rorb
add
out
sbb
or
sti
fcom
ret
jge
or
cmp
fnsave
fldenv
cld
or
pop
dec
popf
pushf
xor
stos
out
dec
pop
enter
pop
stos
insb
mov
mov
mov
lret
aas
std
pop
sbb
mov
jl
mov
sbb
jmp
out
jl
insb
push
lds
push
test
sti
sub
and
cmp
jge
sti
pushf
loope
mov
or
lret
push
xor
nop
add
ret
stos
and
or
inc
sbb
cmpsl
sub
or
cmc
sar
inc
scas
lahf
test
stos
push
or
into
ret
cltd
adc
test
aam
pop
cmp
test
in
pop
jl
cmp
or
rorl
and
or
test
lock
mov
hlt
mulb
stos
lret
outsl
jge
inc
xor
cld
scas
cmp
sub
cmpsb
fnstsw
into
js
push
roll
cmp
sarl
sub
out
js
push
dec
roll
fsubrs
pop
pop
xlat
sbb
adc
loopne
sarb
pop
inc
sub
mov
enter
pop
popa
sbb
dec
scas
mov
xor
push
out
xlat
mov
in
inc
mov
sub
leave
inc
or
mov
imul
mov
add
mov
mov
xlat
push
scas
jo
roll
or
jp
ja
push
aaa
ja
xchg
outsb
add
push
push
pop
in
mov
aaa
repnz
or
cmp
mov
nop
nop
insl
pop
pusha
pushl
xchg
add
pop
fldl2e
or
mov
jle
imul
out
mov
daa
fbld
inc
push
insl
into
inc
ret
mov
dec
cmc
cli
push
add
jno
out
loope
stc
rcrl
lea
xchg
les
outsb
inc
mov
add
xchg
stc
sub
into
cmpsl
xor
lds
call
pop
or
adc
lods
push
or
mov
stos
or
and
sub
mov
rorb
pop
sub
xor
rol
subl
in
jl
jge
clc
cmpsl
stos
or
xchg
dec
jnp
cmp
mov
shr
movsb
xchg
jnp
cwtl
mov
or
or
push
inc
aad
adc
cmp
cltd
testl
mov
dec
lods
jp
stos
les
in
xor
jg
xchg
imul
pop
pop
stos
mov
ds
lret
arpl
lock
xchg
or
in
fpatan
adc
cmp
mov
fs
cmp
call
or
jbe
push
imul
or
and
sub
icebp
pusha
lret
dec
mov
stos
int3
enter
sub
dec
cmp
pop
or
or
push
or
stos
sbb
xchg
hlt
test
add
je
in
scas
das
shl
and
sub
fstpt
ret
sub
pop
icebp
scas
rorb
fisttpl
fldcw
rorl
add
insl
xor
sbb
xchg
add
sub
xor
mov
jae
cmp
mov
cmp
add
js
lret
insb
mov
adc
movsl
fdivrl
int
add
stos
fmul
cmp
sub
outsb
mov
xorl
mov
sub
adc
pusha
jecxz
roll
rcl
cld
orl
fsubr
inc
sbb
arpl
sbb
sub
mov
mov
dec
jmp
cld
test
ja
jg
mov
push
dec
call
ss
test
add
rorl
mov
or
pop
dec
out
imul
jmp
cld
out
inc
mov
les
repnz
xchg
dec
xchg
or
js
xchg
xchg
mov
inc
mov
cmpsl
sub
lcall
stos
xor
xlat
adc
add
loopne
dec
scas
jg
cmp
ds
fidivrs
or
mov
or
pop
call
stc
call
aas
fcmove
mov
or
insb
xor
fnstsw
jg
sub
je
rorl
pushf
or
push
cmp
mov
mov
les
out
adc
lods
or
xchg
pushf
push
pop
pop
ja
sbb
mov
stc
pushf
cmp
dec
mov
loopne
repnz
out
std
dec
push
mov
jnp
add
inc
es
pop
push
xchg
pop
jne
jmp
or
scas
inc
inc
push
jne
cmp
into
push
sub
aaa
jl
insl
add
stos
jge
push
pusha
icebp
stos
shrl
sahf
in
or
addr16
add
pop
or
or
lds
mov
movb
leave
mov
inc
stc
push
into
cld
xlat
xchg
xchg
daa
ss
addr16
or
addr16
add
std
jnp
push
or
ss
fimuls
stos
push
xor
call
imul
xor
in
out
lock
or
scas
dec
jbe
push
in
jp
pushf
scas
cmp
inc
pop
enter
ja
dec
out
jmp
clc
mov
jbe
mull
out
push
and
cli
inc
imul
sub
mov
dec
lock
lret
jl
repnz
pop
lock
add
push
rcrl
mov
sub
xchg
cwtl
dec
sar
or
sbb
or
jge
jne
or
in
push
add
jo
xchg
cs
stos
mov
inc
xchg
xchg
enter
in
or
mov
or
cli
or
add
jb
add
je
out
jl
ret
or
push
addl
jne
imul
pop
xor
lds
mov
lcall
popf
mov
push
lahf
jne
cli
xchg
mov
repnz
cltd
pop
jb
dec
cmp
mulps
or
test
fstpt
scas
jns
mul
mov
mov
fdivs
mov
xchg
ret
pop
sub
cmp
lock
or
push
mov
flds
jnp
inc
cmp
ds
lock
push
stos
push
mov
stos
bound
test
sahf
push
cmpsb
hlt
jnp
lret
push
mov
ss
or
ss
ss
pop
out
or
pop
or
rolb
mov
enter
inc
jp
mov
cmp
ljmp
cmpsb
push
flds
pop
sbb
or
fnsave
cmpl
cmc
push
add
cli
in
out
sub
adc
je
mov
insl
add
and
mov
xor
dec
mov
stos
rorb
daa
clc
cmpsl
rclb
add
xchg
cmp
pop
cmc
or
or
repnz
sbb
out
in
inc
mov
decl
mov
adc
into
jge
mov
cmpsb
data16
sub
pop
or
dec
jl
cli
xor
addr16
xor
mov
ds
lock
js
mov
pushf
insl
pop
in
fistpll
mov
xchg
lds
cmpl
test
icebp
or
or
out
daa
mov
in
push
cmp
xor
sarl
adc
add
cmp
lret
int3
ljmp
add
jmp
add
inc
call
ds
sbb
jg
into
xchg
bound
jmp
js
inc
cmp
push
pop
out
fistl
mov
dec
mov
sub
cmp
stos
pop
xchg
jecxz
leave
jge
leave
mov
jmp
inc
rolb
into
pop
js
cs
inc
inc
jl
lret
es
xlat
out
mov
cmp
push
in
hlt
iret
lea
jge
jae
loope
stc
mov
jle
mov
cmpsl
inc
add
ds
cmp
test
cmp
loopne
arpl
scas
ja
iret
cmp
jmp
mov
mov
in
xchg
out
adc
adc
insb
or
mov
sub
xchg
ret
ret
mov
fisubrs
clc
push
enter
jl
js
gs
call
scas
sbb
fmull
clc
lcall
mov
scas
sbbb
add
scas
lock
ret
addl
mov
stos
bound
or
in
out
sti
cmp
fwait
push
popa
in
jae
out
xchg
movsl
mov
and
xor
scas
inc
sub
dec
dec
loop
cmp
mov
imul
push
dec
les
lahf
movsb
lock
mov
cmp
add
sub
dec
or
pop
mov
lret
into
lret
ds
mov
out
cmc
movsl
std
jae
or
pushf
lahf
cwtl
stc
repz
cmc
ds
lock
insl
xor
shlb
push
add
or
insb
mov
dec
imul
enter
pushf
pop
xor
mov
pop
scas
mov
or
mov
and
sti
testl
inc
frstor
jb
test
popf
lret
adc
sbb
or
ret
sarl
divl
cli
test
dec
cmpsl
mov
and
inc
ret
mov
jl
test
sub
andl
loope
aad
sbb
sub
mov
fnstenv
fcmovbe
adc
jb
call
jl
sbb
int3
clc
mov
ret
in
mov
add
sbbb
cmp
or
sub
orb
fucomi
cmp
sbb
cwtl
add
sar
jae
aaa
pop
nop
and
addb
dec
loopne
lcall
or
mov
or
mov
pop
or
ss
inc
stos
xchg
addb
xchg
pop
lcall
xlat
push
or
dec
in
hlt
imul
push
add
icebp
xchg
cmpsl
xor
dec
lcall
mov
in
cmpsb
push
imul
and
mov
cmp
inc
cmp
dec
xor
sarb
sti
lds
inc
add
pop
dec
sar
sbb
inc
jecxz
xor
cmp
cli
xchg
outsl
jns
dec
dec
inc
add
lock
pop
sub
dec
or
jp
push
fiaddl
stc
lret
lcall
dec
pop
int3
scas
mov
mov
cli
and
je
shlb
push
sbb
mov
adc
mov
jecxz
xor
popf
shlb
shufps
add
cmp
test
or
mov
or
and
scas
adc
cmp
add
jmp
mov
or
jns
lds
popf
adc
lahf
stc
lret
mov
jnp
and
loop
cmp
mov
fcomi
lods
lcall
rolb
cmpsl
jge
or
ja
xor
test
push
inc
jl
mov
cld
jns
dec
int3
jl
adc
rcrl
lret
movsb
inc
je
int3
sub
xchg
jbe
mov
ja
mov
loop
mov
sti
adc
add
cmp
or
and
or
jno
inc
or
fnstcw
ss
scas
add
inc
or
lock
pop
test
movsl
js
inc
xor
xchg
addr16
adc
pop
xlat
mov
and
icebp
mov
xlat
and
cmpsl
xor
cmp
mov
iret
lcall
scas
mov
mov
not
aad
inc
cmp
jb
ds
lods
test
cmp
sub
push
test
push
cmpsb
test
test
push
mov
in
cmp
ficomps
mov
js
pop
scas
orb
in
push
loope
and
not
pusha
mov
icebp
dec
inc
out
add
inc
mov
insb
mov
cmp
sub
addl
lret
scas
pop
ja
out
mov
stos
mov
xor
addl
xchg
jne
inc
or
jmp
sub
mov
dec
and
test
les
lret
and
mull
and
lcall
ret
push
cs
subb
push
leave
jmp
imul
roll
mov
xlat
adc
rorl
gs
mov
add
xor
adc
sub
xchg
jno
add
pop
cmp
rorl
scas
push
in
les
push
ss
pushf
adc
add
adc
cld
jecxz
pop
insl
lods
out
lcall
sti
outsl
test
inc
or
subl
out
push
push
js
cltd
or
cmp
xchg
inc
lcall
pop
fcoms
repz
cmp
inc
orb
scas
out
out
clc
push
inc
inc
sti
mov
adc
add
faddl
dec
adc
repz
loopne
imul
jge
push
dec
mov
dec
adc
stc
fisttps
pushf
xchg
jb
movsb
xlat
mov
int
mov
mov
mov
scas
cmp
or
fwait
movsb
cld
inc
xchg
push
add
fwait
lods
shll
jmp
jge
sbb
shlb
mov
cmc
imul
in
push
mov
jmp
push
xchg
imul
aas
aas
cmp
aad
inc
clc
hlt
jmp
shll
std
test
repz
push
cmp
jl
lock
testb
gs
ds
mov
movsb
dec
in
mov
dec
fwait
pop
aas
stc
std
leave
add
mov
pushf
fisttps
mov
mov
sti
jmp
rorl
mov
imul
jmp
push
leave
or
mov
pop
fs
shll
shrl
adc
aaa
ja
clc
fnstcw
mov
push
push
idivl
inc
or
or
adc
fbstp
or
or
xor
in
sti
jmp
xor
mulb
pop
cmc
xchg
in
mov
rcrl
mov
cmpl
mov
leave
mov
fwait
adc
inc
cmpsb
lea
fs
mov
sbb
mov
aas
daa
das
or
movsl
or
inc
movl
sbb
dec
or
xor
or
mov
pop
cmp
pop
xchg
adc
xor
push
mov
cmp
loope
mov
cmc
mov
sbb
sbb
pop
or
out
rcrb
cmp
xchg
imul
sbb
or
cmp
ljmp
mov
sub
out
inc
dec
ds
mov
inc
add
pushf
dec
or
cmp
mov
mov
dec
roll
ds
dec
pusha
mul
arpl
pop
in
mov
test
sar
inc
cmp
inc
jge
and
mov
push
popa
orl
sar
mov
cltd
cmpsl
add
or
int3
or
mov
or
inc
movsb
fldenv
stos
mov
addb
dec
ljmp
fdivrs
sbbl
orl
rorb
js
fimuls
mov
pop
in
ja
dec
popa
jbe
dec
xor
inc
sub
hlt
or
xlat
ds
push
into
imul
cmp
dec
mov
dec
sub
pop
mov
pop
sub
and
add
dec
pop
imul
inc
cwtl
arpl
mov
add
pop
and
insb
xchg
test
lret
into
popf
pop
fldl
mov
lcall
les
sub
sub
add
xchg
mov
xchg
cs
je
jmp
mov
cli
cmp
inc
lahf
and
mov
jbe
add
inc
lea
dec
out
cmp
in
sbb
rcr
inc
push
xor
cmp
pop
sahf
popa
sbb
jp
jns
or
push
mov
cli
or
out
cld
jo
mov
jge
mov
mov
fsubl
dec
aas
daa
test
jle
dec
and
mov
shr
mov
or
and
sub
gs
pop
in
and
es
js
dec
in
cmpb
sub
add
out
jns
xchg
dec
lahf
addl
or
push
sbb
or
pop
cltd
addl
ret
leave
dec
jmp
mov
imul
dec
int3
push
xor
daa
xlat
into
insb
movsb
lds
pop
scas
jge
pop
neg
leave
inc
or
mov
jns
mov
add
les
shrl
mov
lret
sbb
or
ljmp
hlt
cmc
push
dec
insl
dec
scas
xor
push
test
bnd
out
and
mov
or
aam
and
jp
mov
mov
xor
or
jb
shl
push
inc
jecxz
lock
filds
sahf
or
rorb
shrl
int3
lea
mov
dec
jnp
or
pop
lret
lods
mov
aam
jbe
stos
dec
in
mov
ret
insl
jne
ret
idivb
int3
call
add
out
addr16
jne
int
fs
sarl
jmp
add
push
xorl
out
dec
ja
mul
mov
xchg
add
mov
push
inc
lods
shll
cmp
lock
mov
xchg
pop
repz
lcall
mov
scas
xchg
lds
or
or
imul
pop
or
mov
ja
lea
vpmacsww
sbb
test
aas
popf
in
stos
pop
out
sar
test
add
and
shll
or
ds
pusha
dec
push
or
jp
pop
daa
cwtl
pop
xor
adc
clc
insl
mov
scas
jl
inc
jmp
push
pop
or
jnp
das
jg
xlat
mov
jb
sti
mov
cmpl
int3
push
lret
jle
popa
xchg
out
mov
pop
or
or
stos
xchg
or
mov
in
cmp
add
aam
je
ret
lods
mov
xchg
fdiv
mov
into
adc
test
jo
incl
jl
mov
fbld
xabort
xchg
in
mov
or
sub
add
dec
lock
into
bound
ss
ret
mov
cmp
movsb
fcompl
ljmp
ret
repz
cmpb
cld
mov
inc
std
xor
ljmp
pop
jl
mov
mov
fildll
stc
add
push
call
lods
ret
add
pop
cli
xchg
add
cld
arpl
cmpsb
inc
aad
imul
xchg
and
jmp
leave
outsl
or
stos
sub
jmp
xchg
pop
dec
lret
pop
stos
add
testb
ds
jne
xchg
pop
adcb
outsb
dec
lock
xchg
test
and
loopne
push
and
xlat
mov
mov
sub
xchg
mov
dec
jle
in
shr
mov
clc
into
or
and
inc
add
adc
cmpl
jecxz
cmp
sar
mov
adcl
xchg
sbb
push
fidivl
xchg
pop
int3
repz
je
mov
mov
cwtl
mov
mov
or
pop
hlt
int3
mov
and
sbb
or
test
gs
bound
inc
fsubs
inc
mov
jb
leave
fnstsw
pop
pop
out
jl
ret
jge
cltd
icebp
out
mov
sub
test
adc
inc
push
dec
mov
imul
shlb
addr16
or
stos
enter
fs
cmp
add
ljmp
stc
js
push
inc
pop
enter
xchg
and
arpl
rol
shll
mov
rorb
and
das
or
lret
addb
cmp
sub
stos
ja
test
or
es
sti
or
testl
jecxz
stos
loopne
lret
sub
xor
rorl
les
pusha
jl
or
test
xor
jg
add
xchg
stc
mov
sub
mov
movsb
leave
ret
in
shl
lock
sub
aad
dec
pop
dec
insb
add
dec
jl
dec
inc
rorl
cmp
movl
dec
or
sub
mov
xlat
add
cld
fadd
clc
rol
bswap
fstl
fildll
xchg
inc
fisttps
lock
mov
adc
scas
pop
jbe
sbb
cld
daa
ja
xchg
in
add
mov
jnp
pop
inc
and
jb
xchg
mov
subb
pop
fistl
imul
pop
hlt
inc
xchg
mov
mov
jle
lock
xor
cmpb
movb
jl
mov
enter
movsb
or
dec
dec
jae
mov
add
repz
pop
or
jne
cmp
jecxz
retw
std
xor
push
js
push
or
cwtl
cltd
jp
sub
cli
adcl
fisubrl
imul
dec
jle
mov
ret
jl
cs
loopne
or
or
ret
ss
loopne
ret
jmp
clc
clc
add
mov
inc
jne
and
jnp
cmpsl
or
xchg
dec
mov
lret
pop
movsl
and
ret
mov
cmp
or
movsb
pop
mov
loop
popfw
push
enter
shl
or
jmp
push
and
in
or
hlt
mov
cltd
sti
cli
hlt
insl
add
es
dec
jecxz
pop
xor
testb
inc
jns
into
fistps
mov
mov
lret
jnp
test
fisttpl
jne
mov
lock
je
and
test
or
pop
js
jl
repz
into
or
les
int3
cmpsb
adc
add
movsl
jle
jp
push
xor
dec
inc
pushl
leave
push
dec
fstpt
sarl
add
stc
cmpsb
mov
and
scas
test
and
lret
adc
cmp
rol
adc
leave
dec
les
push
lcall
mov
push
add
add
mov
je
cli
xor
dec
mov
jmp
jns
cmpsl
mov
loope
shll
push
sub
fidivl
mov
dec
pop
js
daa
roll
sbb
sti
or
mov
out
push
pop
cs
ja
dec
aaa
sbb
dec
or
inc
adc
pusha
leave
jp
dec
inc
adc
movsb
add
mov
int3
pop
add
popf
outsl
add
push
sub
inc
mov
or
jl
xchg
push
mov
in
pop
sub
std
out
mov
or
jnp
iret
pop
push
mov
adc
dec
xchg
fcmovne
lea
hlt
test
in
mov
sbb
sarl
pop
mov
mov
int3
jnp
test
sub
fidivrs
inc
or
je
xchg
aad
sub
data16
jp
lea
inc
scas
lret
fbstp
jmp
enter
or
mov
mov
sbb
or
pusha
int3
inc
add
jb
std
pop
adcl
sarb
mov
mov
lods
inc
sbb
fcoml
inc
int3
adc
pop
mov
adc
sub
sbb
mov
divps
add
int3
in
cmp
popa
cwtl
cli
add
ret
arpl
or
jns
sbb
test
out
ficoms
ret
inc
out
add
cmp
mov
loop
mov
dec
or
jmp
or
test
sahf
sbb
mov
or
cld
or
xlat
lcall
fiaddl
not
push
adc
fbstp
lret
stos
xchg
mov
shr
push
cli
sti
or
mov
sti
add
lcall
and
adc
cmc
inc
inc
imul
inc
xor
mov
inc
lret
or
or
out
pop
mov
sbb
jae
sbb
rolb
jp
sbb
jl
mov
fldt
in
mov
cltd
add
push
lcall
ss
pop
sub
or
pop
insb
jmp
dec
aam
jbe
je
mov
shl
shrl
arpl
lods
mov
loop
cs
je
inc
lods
cmp
aam
roll
xor
dec
ret
jle
mov
popa
imul
dec
daa
jb
rolb
fwait
jae
je
xor
iret
out
jnp
or
adc
sbb
in
sub
ret
out
mov
inc
aad
adc
jecxz,pt
js
out
je
je
adc
xchg
enter
pop
or
andl
or
xor
lret
jb
jmp
inc
adc
xchg
dec
cmpsb
test
ja
jg
inc
inc
push
jbe
ja
mov
mov
lret
je
cmp
shll
lds
sub
adc
adc
shll
clc
sti
inc
cmpsl
ja
mov
push
mov
ja
mov
rcll
push
push
mov
enter
les
outsb
fscale
xchg
clc
push
or
pop
leave
xchg
scas
add
test
cs
or
loop
hlt
rol
sub
in
data16
dec
sahf
lret
test
pop
jecxz
lret
pop
pop
lock
dec
ror
lods
adc
jmp
jle
ljmp
outsl
pop
data16
xor
in
sbb
mov
pop
add
mov
or
sub
adc
dec
fbld
leave
xor
xchg
or
sub
ret
pop
pop
lret
dec
roll
rorl
je
mov
movsl
das
push
adc
push
fcomps
mov
rorl
push
inc
stc
xchg
std
inc
jmp
out
movsb
add
sub
jmp
mov
rorb
mov
aam
out
and
or
sub
and
cld
insl
pop
mov
mov
push
or
inc
or
sbb
xchg
add
pusha
inc
mov
sar
or
cmp
cmpb
test
push
stos
or
les
out
pop
push
in
adc
or
in
test
sbb
loope
lret
into
ficomps
add
add
pop
fwait
ljmp
xchg
mov
loop
mov
sti
test
pop
loope
jge
jb
xchg
mov
icebp
dec
add
or
add
stos
or
test
cmp
js
jne
mov
int3
jmp
inc
test
push
aaa
pusha
cmpl
adc
or
jae
out
sbb
xor
in
mov
xchg
or
or
rcrl
and
addr16
sub
mov
cmc
inc
or
or
sbb
stc
shrb
xchg
dec
cmpsb
mov
or
pop
or
cmpsb
scas
dec
sarb
mov
cmp
add
ret
dec
pop
stc
lret
lods
pop
mov
mov
pmuludq
mov
scas
or
add
sbb
pop
lret
inc
cmp
sbb
jecxz
dec
add
cltd
pop
xchg
or
xchg
adc
js
imull
shrl
or
test
jno
enter
xchg
mov
std
adc
fadds
aas
leave
push
das
lds
xchg
jb
lds
mov
mov
push
sub
stos
mov
dec
cld
and
cmpb
lods
xor
pop
mov
mov
in
mov
mov
jae
filds
fstl
and
icebp
mov
es
mov
loope
mov
mov
mov
rorl
shl
xor
aam
mov
dec
scas
lret
into
nop
addr16
shll
enter
or
stos
sbbl
int3
lcall
cmp
stos
sub
ja
imul
arpl
mov
and
pushf
gs
jnp
cmp
int
addr16
fists
rorl
test
rorl
imul
push
rol
int3
mov
pop
loopne
dec
out
loop
roll
stc
test
addr16
dec
xchg
cmp
xchg
and
scas
pop
jp
movsb
stc
bound
or
test
sahf
cmp
add
test
sti
mov
mov
or
cld
cmc
shrb
adc
ror
test
jmp
and
mov
leave
adc
fldcw
imul
jbe
mov
ss
mov
inc
and
or
dec
cmp
jo
sub
adc
leave
add
insl
pusha
add
jnp
and
movb
add
lock
sbb
cmp
pusha
adc
xor
inc
testb
notl
mov
push
idiv
sbb
cwtl
mov
add
fiadds
mov
inc
adc
xor
fwait
jp
push
shrb
stos
or
les
adc
mov
cmp
pop
jl
or
sub
aaa
mov
outsl
adc
test
je
mov
pop
jp
add
loope
jecxz
or
sub
sub
pop
push
test
enter
sti
lret
fisttpl
and
pop
dec
pop
ljmp
fcompl
mov
jge
lods
or
mov
mov
popf
stos
ret
lret
insl
sbb
mov
and
dec
jge
jno
imul
aas
outsl
leave
mov
rorb
lock
pop
sbb
into
add
pop
dec
stos
leave
mov
pop
add
pushf
ret
push
ds
incl
inc
jl
leave
leave
mov
sbb
mov
xchg
loope
int3
andl
js
xlat
iret
or
add
push
rolb
lcall
mov
inc
inc
scas
ljmp
dec
or
inc
or
loopne
inc
ret
add
sti
dec
or
sub
sbb
ret
xchg
out
dec
mov
loopne
mov
jmp
mov
stc
xchg
lret
jmp
mov
lcall
out
mov
imul
mov
push
cmc
sub
insl
stc
icebp
addb
adc
mov
mov
xor
mov
stos
scas
xchg
fwait
shl
incl
jp
dec
or
ret
or
xor
jae
je
cmp
fistpl
push
and
add
pop
mov
or
inc
mov
push
xor
mov
pop
fsubrl
imul
mov
sub
in
shrl
ret
ret
ret
xor
mov
shrl
inc
sub
loopne
mov
ret
dec
pop
sbb
sub
fdivl
mov
movsb
dec
sub
jae
mov
sub
xlat
scas
addl
test
stos
inc
and
add
ja
les
hlt
pop
stos
mov
bound
adc
mov
cmp
dec
sbb
mov
sub
pusha
adc
stc
sbb
cmp
fsub
mov
or
je
dec
inc
rcll
sub
into
repnz
pop
add
dec
mov
lock
xchg
adc
inc
add
rorb
std
and
in
popa
mov
or
dec
lea
daa
jns
pop
hlt
xchg
scas
stos
stos
cmp
dec
push
and
ret
cltd
sbb
jl
les
test
dec
repz
cmpsb
inc
inc
in
or
hlt
shlb
nop
ret
pop
cld
or
jmp
fiadds
popf
pop
mov
inc
and
dec
ds
lock
stos
dec
mov
jle
add
stc
or
dec
loope
pop
cmp
stos
ss
das
or
inc
mov
xchg
jmp
jns
adc
pop
dec
xor
shrb
mov
cli
push
les
xchg
jg
or
test
das
repnz
add
or
pop
jl
sub
mov
add
test
fnstenv
inc
stc
mov
mov
push
outsl
iret
aam
addb
or
mov
stos
push
add
mov
adc
scas
ret
repz
mov
cmp
add
pop
mov
xchg
dec
gs
cwtl
es
into
mov
es
cli
or
sub
shll
sti
xor
nop
stos
push
nop
xor
ja
or
rcrl
jmp
loope
xor
pop
ljmp
dec
xchg
mov
rolb
rcrl
pop
int
inc
jb
mov
loope
sti
pop
lods
outsb
push
pop
popf
enter
pusha
rcrl
inc
sarl
pop
ror
jne
fnstenv
rorb
aas
adc
inc
cmpb
cli
cld
add
aas
lock
daa
xor
push
sub
outsl
stos
lock
test
and
pop
test
add
cld
add
pop
in
jl
popf
iret
in
mov
shll
xchg
cmp
pop
jae
adc
mov
dec
nop
dec
and
std
cmp
addb
pop
mov
sbb
and
push
cmc
adc
mov
lock
add
mov
inc
in
mov
jb
sarb
rol
inc
jno
xlat
inc
test
lea
jne
or
pop
mov
scas
sub
rcl
popf
andb
pop
pop
dec
lcall
fcmovne
cmp
cmp
and
jge
inc
add
cmp
aaa
jle
ret
or
scas
dec
dec
clc
jmp
sbb
push
sub
xchg
cmpsl
lcall
and
roll
data16
data16
dec
pop
inc
add
pop
cwtl
stc
mov
les
stos
xchg
repz
rolb
int
stos
sub
shr
pop
leave
movsb
aad
paddsb
dec
ss
pop
jbe
out
jl
sub
inc
jae
mov
repz
je
jae
inc
cmp
fadds
xchg
mov
add
dec
sbb
test
push
sub
pop
or
xor
iret
aam
push
adc
add
sbb
jno
test
in
sbb
std
movsl
mov
lods
xchg
jge
cs
cmc
aaa
fmull
std
test
jle
push
in
cld
xchg
sub
test
enter
fmull
xlat
push
jne
and
adc
xor
data16
enter
lcall
pop
mov
add
mov
inc
sub
and
rep
stos
xor
push
fs
mov
adc
cmp
shrb
add
push
aam
add
rcl
out
xor
pop
add
popa
aad
scas
jae
ret
test
dec
clc
leave
push
enter
ljmp
loope
and
xchg
sbb
jae
cmp
addb
mov
in
shll
push
clts
jb
ret
aas
jl
dec
sahf
sti
dec
jns
pop
adc
and
lock
pop
xlat
in
shl
mov
add
out
add
adc
hlt
pop
sbb
mov
mov
stos
cwtl
lcall
popa
popf
pop
xchg
fwait
add
jb
mov
cmp
enter
push
push
or
rol
je
scas
or
int3
aam
ret
pop
push
xor
rcl
xor
and
roll
fmul
in
scas
pop
push
notl
mov
fisubrs
scas
pop
jp
popa
cwtl
out
xor
dec
loop
movsl
int3
and
push
aad
stos
pop
sub
dec
pushf
dec
pusha
stos
lods
xchg
stc
iret
movsl
add
adc
pop
clc
xchg
dec
xor
into
lods
mov
sti
jnp
repz
pop
out
cld
mov
pop
rorl
in
movsl
das
jmp
mov
fwait
aad
and
repz
arpl
push
rcl
aaa
aam
fcoms
mov
inc
adc
cltd
sarl
mov
pop
test
inc
shll
push
and
gs
daa
mov
mov
fsubrl
and
xchg
mov
nop
lock
mov
in
in
and
enter
fmuls
lea
es
xor
fldenv
fcompl
lds
pop
push
outsl
mov
dec
iret
in
lock
in
or
fbld
in
into
ret
dec
jmp
cmpsl
into
pop
lods
shrl
sbb
cmpb
push
xor
in
movsl
shl
mov
mov
lods
pop
sub
in
and
ja
les
mov
out
sti
movsb
add
outsl
subl
push
dec
xchg
daa
fcmovnbe
icebp
popf
nop
std
hlt
lock
lret
iret
ret
mov
fisubrs
xlat
popa
lea
push
fwait
or
loope
pop
std
cmp
sbb
mov
push
jecxz
testb
pop
push
imul
sbb
pop
mov
loopne
and
sbb
jl,pt
dec
stos
loope
adcl
cld
movsl
das
arpl
or
fisttpl
leave
and
or
mov
xor
fidivrl
or
pop
nop
in
movsb
add
adc
and
mov
iret
mov
pop
jno
and
jl
jecxz
or
or
das
scas
imul
sub
pop
out
out
les
mov
sbb
sbbl
or
sub
inc
jg
adcl
fadds
jnp
or
push
cld
stos
out
ficoml
cmc
shrl
test
mov
add
imul
sub
bound
incb
mov
fstl
sub
mov
pop
add
or
mov
shll
movb
shrl
stos
stc
inc
or
aaa
add
push
pop
fsubrs
jmp
test
out
mov
xchg
leave
rorb
inc
stos
jns
outsb
lods
pop
stc
xor
mov
movsl
push
sub
and
cmp
mov
das
popa
sbb
test
shll
pusha
inc
pushf
jae
sbb
add
mov
hlt
inc
sub
lret
ret
mov
add
fsubr
subl
ja
hlt
hlt
mov
xor
inc
pop
jns
jmp
movsl
and
and
iret
mov
mov
and
ja
insl
leave
in
fstps
nop
xlat
pop
ret
adc
dec
adc
movl
stos
dec
dec
mov
enter
and
push
cltd
into
insl
divl
push
push
xchg
xchg
or
dec
into
or
cs
fucomp
adc
popf
dec
or
dec
scas
enter
out
out
mov
push
lret
fisttps
cmp
and
xchg
jns
aas
out
mov
inc
shr
test
jge
lret
leave
movsl
inc
insl
pusha
and
test
test
or
data16
sub
sbb
pop
or
in
popf
pop
xlat
adc
insb
xchg
mov
out
sub
add
scas
sti
or
daa
cmpsb
into
dec
dec
ret
sub
mov
dec
cmpsb
mov
ds
lcall
rolb
add
rcrb
mov
or
fs
xchg
ret
mov
push
daa
mov
call
into
jmp
enter
inc
mov
push
rcll
pop
enter
jo
or
sar
pop
mov
aad
jno
cld
lea
push
fwait
roll
and
out
inc
cld
pop
ret
scas
orb
loopne
in
dec
push
into
add
jb
inc
xchg
mov
jmp
mov
stos
jmp
and
sbb
xchg
mov
scas
xchg
jge
stos
repz
mov
test
in
add
dec
adc
pop
pop
std
les
rcll
push
mov
fisttpll
dec
jo
addb
stc
sbb
or
mov
je
lcall
cwtl
lret
push
push
out
xchg
jl
mov
and
or
push
sub
mov
dec
clc
out
jns
inc
in
jnp
or
addl
out
mov
cmp
cmpl
xor
adc
dec
popf
and
mulb
mov
ret
fisttps
cltd
std
push
jle
in
adc
or
test
icebp
push
enter
xor
inc
daa
testl
cmp
push
push
fsubl
or
ja
push
les
or
clc
xor
add
je
jne
pop
cli
mov
enter
ljmp
test
inc
xor
cld
or
out
xor
sbb
outsl
cmpsb
stos
jge
or
sub
repz
adc
loope
or
orb
mov
add
fcoml
sub
adc
sti
jmp
mov
pop
push
add
add
rolb
imul
popa
pop
mov
adc
inc
enter
inc
pop
jl
adc
dec
mov
or
push
push
nop
aam
stc
sub
mull
decl
sti
mov
clc
inc
push
or
clc
test
jl
movsb
adc
or
stos
lds
int3
ror
test
mov
or
or
les
or
sub
pop
pop
add
pop
pop
or
into
mov
and
dec
orb
sarb
movsl
sahf
fisttpll
or
popf
cmp
aam
pop
or
jge
push
add
cmp
xchg
mov
inc
mov
in
lds
pop
icebp
xchg
xchg
scas
test
std
add
lahf
fnstenv
pusha
push
stc
dec
xor
push
sub
or
xchg
add
mulb
js
aam
mov
push
or
mov
pop
xchg
nop
pop
pop
dec
add
stos
pop
daa
push
cmpsl
popf
xor
daa
add
js
jg
push
mov
mov
and
les
add
inc
hlt
or
push
stos
jnp
mov
ret
push
mov
in
add
mov
jne
nop
jp
cmc
push
aaa
lret
jae
mov
or
or
xchg
lcall
incl
jecxz
xchg
adc
cli
add
sahf
push
bound
add
and
mov
je
cmp
adc
inc
mov
mov
mov
scas
aas
pop
jnp
test
dec
add
int
lock
sub
or
hlt
dec
leave
pop
pop
pop
test
or
scas
sub
xchg
shll
repz
test
outsl
mov
or
or
dec
or
mov
stos
lret
rorl
js
call
lock
arpl
pop
mov
sbb
or
cmp
fstpt
lds
ds
in
push
or
rcr
jb
in
and
gs
jnp
and
lds
in
push
inc
add
sahf
cmp
jnp
mov
add
mov
jp
sbb
decb
rcll
pop
les
xchg
lea
call
mov
rcrl
mov
popa
test
mov
add
dec
push
cltd
cmp
shrb
xchg
shr
jb
inc
or
add
imul
stc
mov
movsl
jecxz
repnz
jp
shl
fdivr
in
pop
daa
sub
push
mov
roll
lret
fistpl
xor
or
or
icebp
or
fucomip
lahf
cmp
and
frstor
push
sbb
andl
sbb
xchg
rcll
lods
inc
iret
mov
out
inc
stos
stos
or
std
int3
xor
je
cmp
not
jle
inc
cmc
es
mov
imulb
les
aam
cmc
test
jmp
clc
mov
xor
outsb
jecxz
push
popa
xchg
mov
imul
or
hlt
test
loope
enter
into
out
cli
jns
in
cmp
sti
cmovge
or
test
cmp
fsub
jmp
icebp
dec
cmc
and
xchg
mov
in
leave
or
pushf
inc
sub
in
adcb
fdivrp
rorb
add
and
icebp
mov
pop
or
div
mov
mov
mov
mov
rcl
push
dec
jb
cmp
xchg
aas
or
test
lock
jo
inc
xor
into
mov
or
or
mov
movsb
inc
fwait
or
push
lcall
test
or
jl
ffreep
popf
fdivs
or
mov
loop
mov
cld
mov
icebp
pop
pop
scas
or
mov
ljmp
sbbb
sar
or
mov
inc
clc
enter
enter
pop
or
fwait
add
stos
daa
popa
sbb
inc
jecxz
inc
shlb
cmp
mov
jmp
test
and
repnz
lds
pop
dec
sbb
test
mov
nop
inc
dec
jne
jge
inc
add
les
test
add
aam
mov
subl
inc
dec
pusha
add
ret
xorb
cmp
in
in
add
mov
xor
divb
jge
inc
rorl
icebp
or
std
sub
sbb
mov
pop
add
cli
rol
mov
daa
or
repnz
mov
inc
cmp
cmp
mov
je
inc
nop
add
out
dec
sbb
jbe
cmpsl
clc
dec
aas
cli
dec
jle
or
inc
pop
jmp
leave
inc
mov
jae
leave
dec
dec
fwait
xor
and
add
push
pushl
ljmp
test
cmp
inc
jecxz
or
fldt
bnd
dec
fsub
mov
jmp
leave
insb
sarb
out
xchg
cmp
xchg
dec
adc
pop
inc
les
js
shlb
jecxz
push
enter
adc
fldt
out
add
mov
nop
xor
jmp
fwait
jmp
or
fcmovb
out
lret
pop
ss
out
loop
nop
add
mov
lret
shlb
cmc
push
jo
movsb
out
dec
mov
hlt
lods
jmp
dec
js
test
jb
jb
xchg
mov
mov
test
mov
mov
repnz
cmp
mov
pop
jmp
imull
sub
pop
lock
cmc
lret
rorl
xchg
and
fisubrl
push
lods
popa
mov
nop
dec
loop
xor
mov
mov
je
xchg
clc
icebp
dec
in
jno
bound
cltd
or
mov
and
in
fiaddl
adc
addb
fstps
add
stc
sti
out
test
out
std
and
sbb
out
mov
popa
jb
clc
mov
outsl
out
pop
jle
leave
mov
aam
cmp
mov
test
cwtl
icebp
mov
or
inc
ljmp
add
jnp
lret
js
std
mov
fidivrl
pusha
mov
lret
sub
fsubl
fmuls
mov
imul
mov
mov
out
xchg
out
cmp
fnstcw
pop
lcall
cli
idivb
in
fdivrp
cmpsl
scas
mov
xchg
out
fistl
cmc
cmpsl
fstpl
inc
lea
decl
jp
pop
pushw
out
js
and
inc
xchg
daa
add
dec
les
sub
sbb
xor
push
push
cwtl
inc
lds
jecxz
jp
pop
push
fs
inc
cld
add
mov
mov
inc
inc
dec
jnp
repnz
test
fnstcw
std
lret
ret
loope
mov
and
xchg
inc
inc
mov
inc
mov
ret
push
sbbl
mov
pusha
inc
inc
cld
add
shll
andl
fwait
cld
mov
pop
mov
int3
shl
das
push
sub
imul
in
out
inc
xor
repnz
cmp
subb
inc
push
inc
add
cmpb
pop
jns
jg
hlt
aas
jge
clc
sbb
mov
xor
ds
pop
les
jp
pop
pop
jns
std
hlt
mov
jmp
outsl
jl
iret
jnp
nop
cmp
sti
test
mov
jl
sar
sub
dec
dec
leave
clc
jl
dec
cmp
pusha
repnz
mov
jns
mov
dec
mov
adc
dec
or
inc
mov
pop
or
pop
pop
addr16
rolb
out
pop
cmp
push
pop
cli
xchg
popf
or
std
sahf
sti
fwait
enter
nop
hlt
mov
dec
lret
incb
mov
dec
arpl
mov
fsub
mov
xchg
adc
push
loope
aad
or
or
lock
mov
and
or
jnp
lret
pop
stos
mov
sub
fnstsw
mov
xchg
sub
push
test
in
or
cmpps
scas
mov
popf
jbe
dec
orl
sbbl
jmp
adc
dec
push
ret
insl
pop
cmp
inc
neg
dec
lcall
mov
pushf
xor
sbbb
xchg
in
nop
inc
in
inc
add
in
mov
sub
xchg
adc
inc
add
lret
mov
sub
mov
mov
add
mov
sbb
lock
cmovne
push
mov
leave
push
dec
aas
sti
mov
mov
stc
mov
aam
and
fsub
sbb
std
cmp
pop
ret
testb
mov
andl
mov
subl
addl
jp
sti
and
pop
inc
idivb
or
or
pop
dec
mov
sbb
mov
roll
icebp
scas
fadds
pusha
add
mov
or
inc
aad
jg
adc
insl
adc
into
int
test
add
outsb
cwtl
bnd
or
dec
mov
add
or
jns
or
shl
rolb
pop
mov
jno
or
inc
cwtl
cltd
outsl
in
pop
int3
movsb
inc
test
pop
clc
or
insl
cmp
js
sarl
pop
rcll
cld
in
ret
popa
arpl
int
sbb
jge
sbb
fucomi
mov
repz
xchg
pop
cmpsl
ds
repz
and
sub
int
or
jnp
add
cmp
add
jae
add
fnsave
lcall
push
shlb
and
or
mov
lcall
into
sub
ds
shll
mov
sub
mov
dec
cmp
jmp
notl
pop
jl
xorb
jmp
xchg
mov
popa
add
imul
cmp
sbb
stc
pop
and
xchg
in
clc
iret
movsb
add
pusha
hlt
jno
sbb
mov
mov
add
jge
imul
outsb
iret
insl
outsl
cwtl
or
mov
jno
enter
xchg
test
mov
dec
lods
add
outsl
jae
jl
roll
iret
cmp
cmp
leave
mov
cli
jmp
adc
je
insl
xchg
cmp
xchg
dec
inc
lret
xchg
fistpll
cmc
jno
or
sub
inc
sbb
push
fsubrs
addb
aam
daa
pop
loopne
jg
add
fidivrl
mov
fidivrl
pushf
xor
dec
jb
daa
or
xchg
cs
mov
add
loop
pop
jns
das
cmp
cltd
xchg
lods
mov
out
loop
and
and
pop
pop
cs
sbb
test
jae
lcall
pop
jnp
dec
iret
out
jmp
pushf
mov
ret
pop
xchg
or
clc
js
and
jne
shrb
outsl
mov
popa
sbb
loop
jno
outsl
push
cmpsl
cmp
or
stc
shll
mov
mov
mov
out
dec
and
call
pop
xchg
hlt
dec
les
cmp
popa
imul
mov
rclb
andb
cmp
jp
cwtl
mov
pop
incl
fs
cwtl
inc
cmp
int3
in
cmp
lods
nop
jecxz
mov
push
stos
js
icebp
mov
lods
xor
pop
cs
mov
hlt
shlb
xor
mov
scas
mov
jbe
insb
fwait
shll
xchg
mov
fisubl
daa
std
and
in
popf
loop
je
lods
mov
inc
dec
sbb
and
mov
mov
cmp
xchg
mov
and
jp
iret
aaa
lahf
push
mov
jmp
addr16
dec
std
push
bound
mov
sub
cmpsb
mov
or
jmp
fs
add
popf
rolb
or
add
popa
pop
in
in
push
fiaddl
aad
add
mov
or
inc
daa
rolb
and
xchg
mov
stc
jecxz
jmp
inc
jae
cmp
out
ljmp
jmp
lcall
imulb
es
pop
outsl
aas
cmpsb
dec
mov
add
jg
arpl
cmp
inc
jns
pop
ja
pop
mov
pop
shl
icebp
rcll
lahf
push
arpl
mov
mov
gs
into
mov
ret
shrl
and
xchg
push
mov
push
les
adc
push
add
scas
cmp
loopne
sub
movsl
in
popa
aad
jnp
sti
hlt
xchg
dec
cli
test
movsb
testb
dec
ljmp
psubusw
daa
in
jnp
dec
test
pop
je
cmp
je
mov
cmp
int3
or
bound
push
sub
data16
std
jo
test
sarb
push
test
cmpsb
in
stos
dec
in
add
mov
jmp
xor
shll
adc
stos
fwait
xchg
adc
or
jecxz
mov
mov
nop
jb
sub
mov
arpl
repnz
divb
jle
or
or
jp
out
add
orl
sub
sahf
push
mov
mov
xor
mov
lods
dec
rclb
dec
fisubrl
test
inc
push
pop
sbb
sbb
cmp
shll
jbe
fsubr
jp
xlat
rcll
mov
mov
inc
or
push
xchg
xor
jb
dec
cmp
imul
adc
les
jmp
insb
sub
jae
scas
cli
cli
pop
sbb
mov
data16
xlat
pop
fldenv
stc
jo
or
arpl
or
rorl
ja
xchg
rorb
pop
pop
xlat
add
mov
or
jb
test
or
xchg
inc
loop
test
mov
mov
or
test
in
or
xchg
mov
shr
mov
sbb
sti
mov
movsb
imul
xchg
cmp
mov
rorb
aas
adc
js
and
push
push
add
cli
bound
popa
lret
cmp
or
sti
pop
test
ret
mov
sar
inc
lea
popf
mov
int3
xchg
dec
mov
daa
scas
movsb
or
out
pop
rorl
addl
jmp
jle
xor
mov
out
mov
insl
xchg
mov
aas
mov
outsl
cmpsl
frstor
sarl
dec
mov
sahf
or
nop
jg
mov
sti
js
and
cltd
lea
mov
les
adc
mov
adc
daa
loopne
scas
inc
jae
xor
jb
idiv
dec
fscale
cli
imulb
inc
adc
cmp
push
or
ror
mov
std
inc
int3
sbb
pusha
test
repz
aam
xor
je
lret
mov
cmp
jl
loopne
sti
rol
mov
mov
addr16
sbb
outsb
xchg
pop
mov
xlat
pop
sbb
rolb
orb
shrl
or
sub
xchg
movsb
jbe
rcrl
test
mov
mov
cwtl
adc
pop
mov
dec
push
mov
inc
std
add
loopne
push
xchg
les
and
in
jmp
xlat
in
and
cmp
gs
lret
out
or
in
cs
outsl
jbe
nop
loopne
orb
insl
push
lods
stos
inc
jecxz
cmp
xchg
fidivl
or
std
push
adc
sbb
insb
repz
mov
lcall
pop
lret
std
dec
dec
pop
xor
push
add
add
sub
sbb
lcall
in
dec
sar
testl
jle
dec
pushl
jmp
pop
out
lods
test
movsb
fidivrl
popa
inc
add
rcll
xchg
scas
mov
addps
inc
ja
mov
btc
xchg
dec
jge
icebp
imul
mull
fstpl
in
out
test
mov
push
sbbl
or
and
lret
fwait
out
ret
call
icebp
adc
adc
inc
or
out
sub
pop
bound
sub
inc
sub
sti
hlt
hlt
jle
sub
add
fidivrs
xlat
test
cwtl
ljmp
jmp
neg
fwait
xchg
pop
and
push
in
or
fbstp
out
sbb
sub
push
loop
mov
add
ds
insl
in
sub
ret
mov
mov
test
xchg
movsl
aaa
push
mov
mov
hlt
xchg
mov
mov
cmp
dec
jnp
daa
pop
xlat
hlt
mov
sti
inc
test
enter
pop
or
test
les
pop
inc
cmp
idiv
adc
mov
push
or
in
or
into
test
or
pop
inc
dec
adc
push
cld
shrb
hlt
les
fldl
in
sbb
or
or
pushf
stc
mov
mov
push
mov
add
pop
mov
out
pusha
aam
and
fsub
jle
jl
daa
stos
mov
cmpsb
stos
add
jbe
mov
sub
mov
cld
inc
fwait
daa
push
and
mov
bound
mov
cmp
and
sub
add
fildl
inc
xchg
inc
xchg
pop
push
xor
add
mov
outsb
sub
dec
pop
and
mov
dec
mov
in
movl
or
add
stos
jmp
ret
jge
jmp
or
adcb
aam
lea
fimull
xlat
push
and
iret
aaa
inc
bound
and
or
dec
repz
pop
ret
js
dec
mov
fadd
pop
test
add
pop
test
insl
jmp
mov
scas
in
imul
out
stos
push
jbe
out
stos
pushf
stos
sub
push
jmp
iret
jle
jne
push
aas
into
jmp
mov
mov
cmpsl
fwait
sbb
sti
loopne
ja
shll
sbb
mov
js
dec
sub
ja
jno
test
mov
or
dec
pusha
inc
sub
testl
jbe
icebp
xor
xchg
pop
dec
std
ss
imul
lret
lret
jge
inc
jp
push
sub
leavew
or
roll
jns
cltd
jno
ret
lds
addb
sbb
leave
std
inc
fnstenv
mov
std
rcr
addr16
pop
test
mov
sbb
imul
fstpt
cmp
lcall
ret
pusha
scas
jmp
push
jo
fmull
rcr
push
rcr
mov
jge
lcall
xchg
jl
div
mov
ds
in
dec
movsb
shl
cmpsl
xchg
xorps
pop
imul
int3
cmpsl
divb
psubsb
or
jns
roll
int
mov
loop
jmp
pop
js
add
or
xchg
cmp
data16
pop
fisttps
sub
lret
jns
sub
dec
mov
add
movsb
iret
test
dec
or
test
push
arpl
orl
dec
pop
rorl
push
pop
ret
or
sub
scas
movsb
rorb
sbb
push
test
or
xor
lcall
idiv
sbb
negl
rorl
fdivrs
shrl
fdivrl
jae
and
xchg
int3
or
stos
mov
sub
adc
imul
loope
fstpt
mov
add
lret
cmp
fmuls
orl
es
sub
dec
or
lret
dec
xlat
fists
clc
or
lahf
mov
pop
gs
mov
repz
cmpsl
shr
push
pushf
mov
pusha
cmp
add
dec
movb
xchg
jnp
xchg
sbb
or
mov
and
add
shr
enter
fdivrl
stos
in
bound
and
jne
mov
cmp
js
bound
mov
pop
sub
in
pop
in
sbb
cld
repnz
jbe
inc
add
ljmp
xlat
sahf
pop
adc
sub
scas
js
adc
mov
add
inc
rolb
xor
fimuls
xchg
mov
jle
into
fs
push
mov
add
idivl
mov
sub
sub
push
out
dec
lret
pop
les
push
xor
or
sub
sub
mov
lock
test
ljmp
add
popa
or
inc
data16
les
xor
push
popf
int3
orb
or
shlb
shlb
jne
add
jbe
mov
mov
clc
push
aam
adc
mov
incl
mov
mov
enter
dec
xchg
pop
xchg
adc
pop
hlt
jb
or
mov
or
rclb
ss
mov
dec
mov
rcl
fdivs
rorb
lret
xchg
rcll
insl
mov
xchg
push
xchg
loopne
sbb
dec
sub
outsb
in
mov
test
jnp
cmp
xchg
adc
mov
inc
jl
pop
xor
mov
iret
or
sub
jnp
mov
pop
jmp
push
lods
inc
enter
jg
xchg
push
incl
sbb
sti
mov
inc
lret
mov
pop
sti
adc
mov
inc
jl
fidivrl
shll
jmp
push
xor
add
out
lods
mov
outsb
imul
addr16
std
mov
lret
lock
jnp
outsl
add
fistps
pop
mov
jge
jp
add
push
cmp
sbb
addb
mov
std
cli
sti
dec
std
sub
gs
test
or
idiv
icebp
sarl
mov
fbld
int3
test
xchg
mov
movl
and
add
out
mov
leave
cmp
jbe
adc
mov
and
imul
ja
mov
inc
sub
dec
std
xchg
push
nop
jmp
pop
mov
or
jmp
xchg
jbe
ljmp
hlt
lcall
mov
or
jle
add
xchg
fstl
test
ds
adc
push
mov
ds
rclb
cmp
lret
cmp
inc
mov
cvttps2pi
hlt
or
add
inc
addr16
pop
fstpl
jp
cltd
jb
shll
mov
jbe
cmp
lods
fs
xchg
je
pop
add
sub
lahf
inc
pop
stos
pop
das
sbb
jmp
push
jb
push
repnz
insl
clc
and
xor
sti
ds
lret
jnp
xor
adc
push
add
and
jne
mov
scas
fxch
les
dec
jl
jmp
in
rcll
inc
or
cs
cmp
popa
pop
sub
andb
xor
sub
movsb
je,pn
pop
mov
xchg
push
mov
aaa
mov
out
adc
cmc
mov
js
or
sub
std
or
dec
pop
mov
dec
dec
inc
shrl
sbbb
lock
fstpl
iret
pop
fcmovnu
or
int3
stos
cmp
jecxz
ffree
xchg
rolb
pop
int3
sbb
iret
and
fmull
sbb
push
sub
inc
mov
xor
movsb
pop
int3
dec
mov
cld
or
jae
les
repz
mov
inc
test
out
out
or
cmc
xchg
inc
testl
mov
iret
mov
cmpsb
mov
enter
cmc
push
or
int3
insb
fnstenv
push
jae
shr
mov
ljmp
mov
adc
loope
jbe
jl
cmp
push
mov
or
xor
push
mov
jg
xchg
inc
mov
dec
out
fwait
dec
aad
cmpsl
bswap
jle
mov
inc
sti
adc
shlb
test
div
sub
pop
arpl
push
movsb
into
pushf
outsb
test
xchg
xchg
cld
mov
leave
hlt
jle
fs
pop
fmuls
andl
and
ja
mov
push
cli
xchg
fwait
cld
push
idivb
jmp
mov
sarl
jnp
or
add
in
out
adc
repnz
shl
cmp
call
fdiv
xor
arpl
or
jns
in
in
mov
ds
jl
dec
sub
xchg
incb
lret
adc
in
cmc
add
mov
cmp
lret
or
push
and
mov
cmp
add
cmp
mov
ds
pop
or
rolb
sahf
mov
and
fdiv
fldenv
jmp
and
insl
sahf
cmp
jecxz
xor
iret
sub
sub
xlat
adcl
mov
mov
jne
add
movsl
aaa
and
fwait
or
xchg
pop
aam
rcl
and
jmp
lret
xchg
lods
dec
or
add
sub
and
insl
ja
sbb
lock
cmp
dec
push
xchg
mov
insb
inc
xor
repnz
mov
sbb
or
sub
enter
std
dec
add
sub
jo
fadds
in
ljmp
pusha
ret
std
div
sub
dec
pop
stos
sub
call
or
cmp
je
ret
xchg
mov
jmp
sub
or
js
cmp
stos
ret
shl
add
mov
imul
or
in
jl
cmp
test
pop
or
fpatan
jecxz
fildl
sbb
andl
dec
or
push
shll
push
pop
dec
add
add
hlt
lds
ja
jl
jnp
pop
fidivl
push
or
jp
mov
rclb
inc
faddl
ret
add
fldcw
xor
xchg
dec
mov
push
dec
xchg
xchg
sub
add
ret
cmp
fwait
mov
mov
imul
or
loope
cld
mul
imul
stc
in
cld
cli
in
cld
sti
out
cld
cld
call
imul
jmp
cld
or
imul
iret
mov
jle
fimuls
adc
add
add
test
add
dec
pop
lret
or
pop
fisttps
and
into
sahf
inc
dec
rcll
fisubrs
jmp
out
sub
in
int3
xor
and
jp
mov
les
int3
stc
sbb
fiadds
lcall
int3
or
shr
mov
std
inc
xor
push
in
mov
dec
mov
sub
dec
mov
lahf
hlt
push
sbb
inc
pop
jmp
mov
lret
and
or
shlb
dec
xor
rclb
dec
xor
popa
adc
out
jmp
int3
adc
test
rorl
inc
push
inc
into
inc
rorb
shrb
leave
out
adc
jmp
lret
dec
clc
mov
ret
pop
xor
push
sahf
cmp
jmp
test
addr16
int
loopne
push
xlat
add
cmp
pop
jmp
insb
dec
mov
out
mov
ljmp
add
out
dec
sub
add
jae
ret
jbe
in
xor
ljmp
out
xchg
dec
jns
sub
sbb
iret
fmul
add
lods
sti
enter
adc
test
fsubrl
test
les
mov
testb
ljmp
in
or
ret
or
iret
clc
lcall
or
jnp
aad
loop
inc
or
fldt
jae
into
enter
jbe
pop
cmp
xor
dec
faddp
cld
or
sti
fistl
push
push
sbb
fistpl
jnp
pusha
enter
inc
out
sbb
fwait
jecxz
or
stos
hlt
or
adc
or
dec
jnp
js
aad
inc
loope
jae
lret
add
clc
mov
jmp
jl
sbb
or
add
push
ficoml
icebp
mov
jb
repnz
or
out
add
sbb
push
aam
xchg
in
jnp
mov
aad
in
lret
sti
stos
push
enter
rclb
xchg
mov
lret
or
hlt
inc
lock
push
into
push
test
test
js
pop
call
push
mov
adc
test
dec
add
lret
in
loopne
shll
add
les
repz
xchg
xchg
or
into
lret
pop
jmp
inc
cli
lret
mov
enter
sti
jmp
in
enter
lret
loop
out
out
lret
add
mov
arpl
in
ret
lret
loope
mov
push
jmp
cmpsl
out
bound
popa
pusha
or
adc
jo
pop
aas
mov
mov
add
or
mov
aas
call
rcll
fs
or
jmp
mov
mov
mov
dec
cmp
jno
mov
jns
xor
mov
fildl
pop
test
clc
lea
aaa
mov
pop
test
hlt
xor
push
repnz
into
xchg
imul
xchg
out
decb
jnp
xchg
inc
repz
mov
mov
xchg
mov
shr
xchg
dec
stc
jge
pusha
aam
mov
or
dec
mov
push
sbb
xor
repz
mov
pop
add
dec
jae
filds
mov
enter
mov
inc
sub
jns
leave
xchg
dec
or
push
cmp
fsubr
movsb
orl
int3
mov
inc
dec
clc
iret
mov
lret
fisubrl
repz
sbb
add
pusha
push
add
js
pusha
jecxz
fiaddl
in
ljmp
mov
in
jecxz
hlt
dec
dec
or
scas
mov
imul
arpl
or
lret
out
dec
pusha
std
add
sub
jae
or
inc
or
mov
mov
iret
mov
les
aam
das
jmp
sti
mov
sti
int3
loop
push
lcall
push
in
pop
or
hlt
mov
stos
cmpsb
loop
add
orb
enter
sub
cwtl
add
adc
cld
jne
rcr
or
mov
roll
or
mov
inc
cmp
xchg
inc
pop
or
or
fcompl
push
flds
jo
mov
movsb
jmp
repnz
sub
fwait
out
or
stos
add
pop
xchg
jmp
lret
and
xchg
hlt
dec
popa
enter
out
fiadds
aaa
cmp
or
inc
inc
push
sbb
or
dec
push
sbb
mulb
xchg
pusha
add
repz
movsb
mov
hlt
fcomi
sbb
mov
jne
mov
in
arpl
sbb
loopne
dec
ljmp
loopne
xor
fadd
lcall
dec
aam
scas
sti
mov
clc
idivb
enter
scas
shlb
loop
dec
xchg
or
mov
or
clc
cmp
clc
add
dec
mov
and
int3
jne
mov
xchg
jmp
lahf
fs
dec
jge
cld
mov
sti
fmull
out
mul
sbb
jl
arpl
sub
movaps
cmp
inc
push
movsl
mov
mov
or
icebp
push
scas
clc
add
cmp
mov
test
jmp
or
inc
shr
xor
stos
std
push
ljmpw
ret
push
lret
sub
subb
xchg
shr
mov
movsb
stc
mov
and
movsl
pop
dec
stos
push
sub
or
xor
xor
mov
hlt
pop
mov
pop
repz
push
daa
into
fldt
into
icebp
pop
push
addr16
mov
xchg
sub
xor
mov
int3
lret
jge
mov
das
scas
nop
cld
push
int3
rcll
sti
mov
cli
xlat
or
test
jne
int3
repz
andb
daa
jge
or
mov
pushf
pop
enter
scas
fadds
lret
clc
mov
jnp
stc
shl
cmp
mov
mov
jl
pop
pop
and
ret
call
and
hlt
cmp
fmul
or
jg
hlt
negl
lahf
add
adc
cmp
mov
les
aam
push
popf
stc
and
lret
mov
ljmp
in
out
and
out
mov
sti
out
test
add
clc
daa
pop
or
call
mov
cmp
cld
jns
and
js
rclb
pop
aam
test
push
mov
icebp
push
inc
call
push
ljmp
clc
inc
and
sub
sbb
stos
fstl
out
cmp
pop
sti
xor
jb
jle
jmp
jns
out
or
cmp
mov
sub
fsubr
rorb
int3
dec
mov
lock
dec
out
dec
outsb
mov
lret
mov
mov
mov
cmc
inc
loope
aam
ror
sarb
rorl
sarb
into
add
mov
dec
into
or
push
into
jle
dec
mov
sbb
jne
adc
shll
xchg
and
push
and
adc
and
push
and
pop
and
fsubs
cwtl
and
iret
sub
in
sbb
pop
into
push
into
nop
into
lcall
mov
in
mov
loop
or
lods
hlt
jmp
cli
cmp
flds
mov
inc
idivl
sti
in
testl
rol
xlat
jns
mov
mov
icebp
test
loop
rcl
mov
add
sti
enter
cmc
rol
mov
inc
es
out
cmpsb
jae
mov
xchg
hlt
mov
enter
shr
std
jg
xchg
mov
add
add
xlat
bnd
repnz
clc
fdivr
inc
and
pop
add
xlat
ror
mov
push
int3
pop
test
out
cmp
idivb
rol
lret
int3
fcmovb
lahf
mov
pop
scas
sub
mov
push
bound
hlt
dec
fimull
mov
sub
orb
sub
scas
dec
add
inc
pusha
or
into
std
std
or
and
adc
inc
cmp
mov
pop
jp
add
mov
jbe
mov
jle
jp
dec
pop
push
rcr
xor
mov
in
xchg
or
push
out
or
pushf
lcall
cmpsl
cltd
push
push
clc
scas
push
mov
fmull
jl
mov
das
pop
xor
sub
ret
jmp
andl
lahf
ret
push
negl
repz
add
fmul
add
aam
dec
test
jbe
push
inc
or
or
inc
adc
aad
xlat
dec
lods
out
mov
add
inc
lret
dec
in
js
sub
dec
jp
push
jb
mov
cmp
out
mov
mov
cmp
lahf
leave
cmp
fdivrs
adc
jo
jge
cmp
cmp
aad
mov
scas
cmp
push
lret
leave
in
leave
mov
xchg
icebp
movsl
testl
mov
test
xchg
push
inc
daa
xchg
lret
xlat
jmp
ja
out
inc
je
aam
lret
push
ret
rorb
fmuls
sti
scas
mov
subb
or
mov
or
gs
dec
jp
or
int3
mov
idivb
push
cwtl
mov
adc
das
or
mov
dec
cmp
ds
or
adc
ret
mulb
dec
cmp
mov
loop
xchg
jge
int3
scas
int
imul
jb
cmp
shll
cltd
jno
mov
cld
cmp
icebp
mov
pop
popf
jbe
adc
rol
jmp
fimuls
js
or
insb
int
test
xor
les
cmp
pop
dec
lret
pop
int3
dec
xlat
add
insl
cwtl
test
pop
push
push
xchg
enter
repz
push
lret
mov
popf
mov
xchg
and
lret
jmp
pop
add
or
jnp
push
movsl
sar
lock
movsl
adc
xlat
divb
sub
push
cmp
iret
shl
movsb
divl
xchg
icebp
jo
je
push
xchg
pop
push
add
enter
test
inc
jns
push
loopne
mov
and
jns
xlat
repnz
mov
ds
test
or
mov
and
data16
aad
addr16
enter
lds
pop
leave
int3
mov
jo
lock
outsl
mov
dec
loopne
addr16
sub
adc
or
enter
test
xchg
flds
ret
sbb
mov
or
mov
sbb
pop
inc
imul
cld
insl
mov
pop
dec
inc
jle
cmp
fwait
sub
and
pop
adc
pop
xchg
popf
in
into
fmulp
push
movsl
mov
repz
pop
test
insl
loopne
and
jbe
or
or
shl
test
in
test
cld
rorb
std
imul
add
cld
lock
jmp
test
add
icebp
mov
out
or
pop
add
fsubrl
jecxz
lret
or
and
xchg
loopne
lret
test
iret
jg
push
sbb
repnz
stos
jmp
jmp
jmp
movsb
enter
cld
out
std
imulb
sahf
fucomip
lret
jae
out
add
enter
loopne
stos
iret
jmp
in
add
push
fcmovb
add
div
scas
mov
or
or
cmpsb
or
lret
loopne
fstp
jecxz
call
or
and
cli
call
shll
enter
testb
rcr
mov
pusha
rolb
add
sti
jnp
mov
mov
mov
mov
xchg
lods
rol
loope
iret
or
mov
dec
and
popa
aam
fwait
leave
lea
push
fcmovnb
xchg
fwait
iret
pop
push
call
sub
pop
jnp
and
dec
jno
enter
jo
icebp
repz
push
push
push
add
inc
jmp
pop
in
push
push
jae
repnz
and
mov
je
fidivrl
cltd
inc
lret
shl
push
pusha
jmp
fdivr
jns
divl
push
jmp
rcll
orb
add
sbb
adc
sbb
fwait
add
pop
mov
mov
lret
ret
or
repz
fwait
jae
lret
mov
mov
lock
mov
sti
cmp
dec
dec
call
mov
shr
push
pop
or
fucomi
jmp
push
cmpsl
adc
je
fimuls
or
rcrl
adc
adc
mov
pop
mov
pop
cli
loop
test
lods
loop
jnp
pop
mov
stos
stc
jmp
in
loopne
fucomip
mov
notb
ja
or
call
in
xor
mov
enter
enter
xlat
jmp
or
adc
jge
adc
dec
pop
xchg
push
orl
mov
inc
mov
or
xchg
repz
lret
dec
stos
fnstsw
sbb
push
lahf
aam
mov
dec
xor
int3
xor
scas
repz
daa
pop
out
fisttpl
lret
jmp
in
popa
adc
sarl
jae
fisubrs
inc
nop
dec
pushf
lret
clc
jbe
rorl
cltd
mov
xor
or
mov
cmp
push
cmc
subl
or
idiv
fs
ss
xor
jl
mov
cmp
out
and
loope
icebp
adc
mov
add
lret
mov
xchg
fstl
leave
dec
adc
mov
dec
mov
repz
sub
or
sbb
jmp
cwtl
sti
xchg
enter
add
add
cmp
into
or
enter
pop
orl
stos
lret
cmpsl
sti
fs
test
cld
lcall
jge
adc
lods
xor
mov
lds
mov
lock
cli
fidivrs
cli
or
push
aad
pop
add
add
lret
or
pop
or
xlat
or
adc
std
into
in
movsb
or
int3
or
dec
or
ret
inc
loop
mov
shl
ret
cld
or
fmuls
xchg
out
jae
and
cmc
nop
sbb
adc
add
aaa
fiadds
pop
je
loopne
clc
inc
ficoml
cld
loopne
stc
xchg
add
cmc
lods
adc
loope
or
or
clc
cmp
mov
sbb
ficoml
jb
inc
vpor
adc
icebp
shlb
cld
fdivp
nop
sub
and
sub
mov
mov
inc
sub
enter
ret
call
and
or
push
sbb
or
mov
dec
icebp
pop
push
sbb
or
push
or
test
repz
shlb
or
rorl
lock
stos
sar
into
cld
inc
or
test
mov
lock
mov
scas
idiv
leave
rorb
int3
adc
jp
fcompl
test
fisttpl
add
popf
push
aad
js
cmp
stos
test
or
cmpsl
punpckhbw
sbb
jmp
int3
mov
push
sbb
repz
cli
into
lds
mov
mov
mov
movsb
divb
pop
cmpsb
cmpsb
and
xchg
shl
popf
adc
push
imul
jnp
jge
inc
imul
divl
dec
push
sub
inc
jae
ds
or
add
shll
inc
pop
outsb
or
mov
bound
test
mov
adc
jl
repnz
or
cld
inc
or
mov
sub
xor
fldl
rcr
cmc
mov
enter
adc
jle
outsl
mov
lret
int
ds
bound
add
or
or
mov
pop
mov
inc
lret
jns
and
stos
push
ret
or
sub
fildl
mov
xchg
mov
ret
mov
icebp
insb
jl
les
sti
fists
or
faddp
or
cli
icebp
jns
xor
jno
xlat
les
cmp
repnz
mov
fdivl
lret
mov
sti
mov
cli
aaa
mov
jno
loop
hlt
test
push
mov
cmp
push
rcrb
fimuls
fmuls
call
or
lret
sahf
out
movsb
and
lock
add
or
sbb
push
iret
mov
push
xchg
scas
and
dec
sbb
mov
jno
or
mov
in
sub
cltd
sub
mov
ret
or
lods
test
mov
stos
decb
push
ljmp
sahf
and
stc
or
std
pop
xchg
sub
pop
or
test
jo
xor
pop
mov
adc
inc
ljmp
dec
lock
mov
fidivrs
or
cld
lret
push
lret
mov
loope
push
test
and
daa
lock
mov
into
mov
ds
testl
mov
jae,pn
icebp
cmpsb
rcr
dec
popf
in
or
loop,pn
in
pop
cld
out
jmp
in
or
pop
repz
daa
or
lret
lock
xor
lods
lret
push
inc
sti
cmp
ds
call
lret
jo
into
jnp
or
aam
mov
inc
push
mov
fldenv
xchg
mov
in
add
clc
mov
sub
push
aad
xor
dec
mov
loopne
mov
iret
dec
cs
or
xchg
add
cmpb
aaa
imul
jae
dec
dec
mov
aas
shll
es
mov
sub
loop
out
inc
pop
lods
xor
aaa
lcall
lret
mov
out
cmp
test
xchg
inc
pop
in
ss
xor
inc
pop
dec
cmp
sbb
push
inc
jnp
mov
adc
imul
leave
or
cmpsl
push
loope
xchg
daa
cmp
push
sub
jb
icebp
adc
jecxz
stos
or
xchg
push
sbb
fimuls
or
sub
or
mov
or
mov
or
mov
or
mov
add
stc
repz
aam
inc
ret
adc
loop
fdivs
lahf
push
pushl
fcompl
fdivrs
mov
sub
jo
xor
cli
stc
add
sarl
das
cmpb
out
sbb
lea
jo
pop
lock
imul
pop
divb
xor
adcl
int
in
sub
inc
sti
lock
pop
fucomip
rorl
sbb
push
int3
shrb
mov
andb
xchg
test
movsb
repnz
rcll
sub
cwtl
pop
adc
dec
out
or
loope
int3
jl
ret
not
jo
call
hlt
lret
test
pop
test
inc
movsb
hlt
test
fisttpll
sar
jl
lcall
inc
dec
cmovge
popa
test
out
cmpsb
cmpsb
cs
dec
add
icebp
cli
push
ret
cmc
test
dec
test
divb
mov
in
mov
and
xor
jae
rorb
jmp
or
xchg
inc
and
add
sbb
lea
or
shl
jl
das
shl
cmpsb
iret
sub
popf
xchg
or
ja,pn
add
xor
jno
ds
std
inc
dec
adc
xchg
or
rcll
xchg
mov
xchg
lea
lods
inc
div
clc
pop
xor
nop
mov
add
shrb
std
shl
dec
dec
mov
pop
xchg
les
repnz
insl
or
xlat
in
cli
lods
sub
jnp
adc
lods
lcall
add
jns
popa
std
out
mov
jle
pop
add
cmp
jp
sahf
fs
cli
jne
xchg
cmp
dec
and
and
or
cld
cltd
cmpsl
push
int
add
push
std
movsb
mov
fld
sbb
cmp
jge
jbe
ljmp
xor
pop
mov
test
cmp
cld
jno
dec
lahf
dec
mov
into
push
fldt
jp
mov
lods
mov
sbb
mov
leave
push
cmp
pop
push
add
stos
div
dec
ljmp
push
testb
inc
lock
ja
jbe
cs
xorb
mov
xchg
jp
cmp
in
insb
sub
xchg
lods
push
and
loope
push
lret
cmp
mov
mov
sbb
lret
lods
lret
add
add
push
popa
sar
movsb
cmp
lock
lds
inc
dec
subb
imul
push
rcll
mov
ret
inc
in
or
aas
jmp
in
mov
fldl
pop
add
mov
and
push
pop
inc
cmp
or
xor
pop
out
ja
lock
std
lahf
push
lods
mov
cld
push
or
js
push
sbb
fsubl
out
cmp
loope
mov
and
or
push
ds
das
or
scas
mov
in
movsl
outsb
xchg
and
adc
or
push
imul
pop
stos
das
je
sbb
jo
icebp
je
pop
jl
int3
adc
adc
out
dec
lcall
xor
xor
sub
mov
sub
ret
scas
cmc
scas
jb
jns
scas
shlb
pop
sbb
lcall
rcl
ret
sti
rorb
scas
cmpsb
inc
push
mov
mov
data16
loop
loope
adc
xor
adc
test
cmp
enter
cmp
xchg
mov
inc
sbb
mov
adc
jmp
repz
or
mov
mov
jae
sbb
adc
or
test
or
jnp
xchg
jns
cld
inc
cwtl
insb
dec
lret
repnz
fwait
fdivr
jbe
or
push
les
fbld
mov
lods
mulb
in
decl
xor
ret
push
andl
mov
cltd
in
or
clc
cli
in
pop
pop
lock
fsubs
or
shll
sahf
loop
sub
xchg
jg
test
push
jecxz
inc
jecxz
mov
xchg
nop
or
or
sub
mov
ret
xlat
add
bswap
mov
mov
jbe
in
dec
add
in
jb
mov
in
clc
add
sarb
test
cmp
jns
add
pop
cmp
xor
xchg
cmp
jbe
adc
jg
jmp
in
adc
or
cmpsb
ficompl
or
sar
sahf
fcoml
ljmp
pop
add
loope
jb
icebp
or
repz
hlt
cld
lcall
into
push
fimuls
shrl
scas
lcall
stc
rcrb
fistpll
mov
mov
out
loope
ret
js
sti
cmpsl
mov
xor
xchg
add
sub
cmp
sbb
and
add
jnp
scas
enter
or
hlt
jb
test
push
sub
into
mov
dec
pop
xchg
test
push
jecxz
push
fildll
mov
jne
mov
sub
dec
cmp
mov
or
rolb
jae
add
or
into
sarl
mov
pushf
lods
jmp
iret
dec
int
mov
repz
loope
cld
pushl
cmp
hlt
dec
adcb
add
clc
sbb
xchg
outsb
daa
pop
hlt
jle
jl
or
pusha
hlt
scas
in
cmp
xchg
enter
in
add
lret
sbb
or
mov
push
std
jns
or
inc
insb
pop
aaa
lock
adc
les
jle
out
xchg
loopne
lcall
inc
mov
call
mov
sbb
pusha
lret
sarl
sarb
xlat
adc
mov
mov
jg
lock
fmul
mov
clc
adc
lock
push
cltd
dec
les
inc
jno
dec
cld
aam
jbe
jo
stc
pop
in
js
jbe
pop
pop
cld
lahf
daa
scas
jno
fcmovbe
in
js
inc
add
mov
push
sub
push
scas
add
sub
jmp
scas
jns
mov
imul
insb
lcall
in
into
icebp
mov
adc
fldt
imul
mov
lret
cwtl
mov
cld
test
or
adc
xor
mov
hlt
push
push
in
icebp
fmul
inc
dec
and
pop
lret
out
inc
lods
movb
lock
cmp
mov
out
mov
movsb
loopne
stc
bound
sahf
xchg
inc
popl
ja
mov
sbb
in
stos
lock
or
pop
insl
mov
stos
repnz
or
ret
arpl
sub
mov
mov
dec
mov
inc
xchg
mov
dec
repnz
hlt
push
lock
dec
xchg
test
add
stc
or
dec
or
jb
mov
or
pop
pop
out
inc
cwtl
int3
movsb
add
add
subl
xchg
mov
push
pusha
orl
dec
or
into
imulb
rcr
hlt
js
push
dec
mov
aaa
iret
or
sarb
push
jmp
push
adc
mov
push
pushf
inc
jecxz
out
pushf
and
add
jnp
js
test
or
pop
outsb
pop
arpl
cld
adc
in
dec
sbb
out
add
or
arpl
fildl
test
add
jns
out
xchg
js
in
std
push
mov
das
idivb
sbb
negl
clc
fwait
movl
jmp
fcomi
xlat
enter
insb
jmp
divb
jg
shl
cli
lds
inc
das
pop
sahf
sub
cmpsl
dec
lds
cmp
test
loope
rorl
mov
call
push
test
aaa
mov
add
dec
out
fiaddl
shl
in
leave
ret
mov
mov
std
stc
and
cli
repz
shll
or
fld
fs
mov
jecxz
or
mov
and
mov
sub
mov
jl
cmc
mov
push
test
mov
dec
add
xchg
outsb
or
mov
mov
add
push
cli
xchg
push
test
icebp
mov
jbe
adc
mov
add
cmp
or
dec
pop
stos
lcall
or
data16
pushf
push
or
popa
aas
les
jnp
mov
testl
add
add
xchg
xchg
or
bound
jb
testl
movsb
outsl
outsb
mov
push
loopne
mov
and
pop
sub
loope
mov
icebp
jmp
popa
cmp
inc
sbb
push
aad
mov
scas
mov
inc
or
leave
jnp
pop
iret
in
sub
in
sbb
rcll
scas
jp
pop
cs
scas
jne
sti
arpl
or
sub
lcall
push
cmp
add
adc
dec
imul
aas
sub
xor
mov
ret
jne
inc
sub
cli
xor
add
inc
outsb
lods
xchg
jge
mov
jp
inc
jg
lds
fwait
ss
cmp
or
imul
aaa
popa
and
out
fcomi
push
cld
outsl
mov
popf
test
test
mov
in
shlb
dec
in
out
std
dec
aaa
lods
jnp
mov
loopne
xor
mull
lret
xor
sub
pop
pop
pop
or
xchg
push
cmc
ffreep
movsl
fs
shrl
mov
in
xchg
inc
pushf
ret
sub
mov
mov
aas
scas
mov
xchg
clc
jp
mov
or
add
and
mov
or
in
jno
daa
mulb
mov
out
pop
xchg
subps
jle
insb
lret
sub
jns
or
jmp
std
pop
std
lret
int3
lret
push
add
stc
imul
lret
push
stos
cwtl
inc
inc
sub
jmp
addr16
aad
dec
or
fucomp
cmp
pusha
dec
sbb
pop
cmp
jl
ret
dec
add
adc
push
int3
adc
enter
imul
push
sbb
lods
mov
enter
or
lods
scas
adc
mov
aas
andb
call
pusha
hlt
and
loop
fsubl
scas
dec
rol
movl
repz
repnz
rolb
cmp
or
mov
xchg
imul
inc
out
dec
imul
or
test
dec
dec
fdivrl
xchg
inc
lcall
dec
jmp
or
mov
pusha
xchg
js
dec
sub
mov
mov
cli
mov
test
or
dec
js
inc
cmp
cmpsl
add
imul
lret
ljmp
out
or
movsl
mul
dec
iret
and
dec
xchg
loope
push
adc
xor
jmp
cli
mov
adc
subl
adc
mov
mov
push
fs
dec
or
or
jmp
mov
lock
je
jnp
dec
sahf
pop
lds
int
add
fdiv
sbb
lret
scas
ljmp
mov
sbb
shlb
push
xor
cmc
out
movsl
call
call
out
jae
in
popf
mov
cmp
test
enter
inc
pop
xchg
test
cld
push
dec
out
leave
fisttps
jmp
ret
sbb
es
xor
mov
fldenv
into
and
dec
out
loopne,pt
inc
jmp
mov
in
stos
dec
xor
or
mov
adc
lods
dec
roll
incb
dec
inc
xor
test
lock
push
or
clc
stc
dec
pop
adc
add
jo
lret
cs
shll
stos
loop
in
mov
inc
pop
jp
dec
pusha
out
repnz
jle
daa
adc
rorl
imul
mov
test
jge
mov
add
imul
fmull
cld
sub
les
jne
out
adc
lods
mov
ret
sub
and
dec
inc
push
lods
mov
push
fdivp
jg
sub
mov
pop
jo
mov
hlt
push
mov
aas
jno
pop
bound
add
aas
leave
sbb
mov
mov
lods
mov
or
test
mov
in
dec
shrl
pop
push
xchg
pop
out
bound
dec
pop
sbb
inc
mov
fidivs
cs
dec
imull
dec
add
sbb
sub
imul
add
xchg
mov
mov
lret
fadd
adc
xor
leave
add
testl
fisubl
scas
push
into
addr16
div
scas
stc
sti
lods
ja
lret
or
in
pop
xchg
lock
push
lock
aam
stc
jg
sbb
jl
pop
sub
or
cmp
ret
dec
stos
sbb
add
mul
add
pop
push
dec
iret
xor
mov
inc
add
jnp
test
int3
in
lret
clc
in
sbb
call
cmp
repnz
fdiv
cmpb
pop
sar
aaa
mov
sub
loope
fdivrp
sbb
test
pop
pop
push
aas
or
decl
or
lods
or
das
push
cld
popf
test
push
stos
fwait
jmp
xchg
mov
int3
adc
or
dec
lea
pop
pop
or
xor
outsl
bound
sub
test
or
mov
cmpl
pushf
test
xchg
or
pop
cmp
jnp
ret
xchg
pusha
push
or
pop
and
push
mov
jne
xchg
mov
into
insl
xchg
push
cmp
movsl
xchg
jge
icebp
cmp
inc
shr
fsubl
clc
subb
jns
shrb
adc
jmp
aaa
lds
mov
mov
sub
fs
rorb
ljmp
mov
inc
outsb
lea
xor
ss
mov
mov
ja
lcall
rorb
mov
loope
in
shr
push
inc
lahf
sbb
sti
enter
jbe
and
fimull
add
xor
testl
pop
cli
pop
add
cmp
fmull
jne
stc
decl
or
cmp
pop
lock
push
loope
inc
jnp
mov
mov
push
mov
ret
push
jecxz
pop
fstps
mov
xchg
jno
js
scas
add
xchg
shlb
xor
add
daa
or
enter
rol
cmp
out
mov
hlt
xchg
xor
push
cli
cmpsb
hlt
in
movsb
cmp
js
cmpsl
test
fistpl
pusha
outsl
in
sbb
cld
ds
stos
cs
dec
mov
mov
out
insb
in
in
imul
jle
aaa
aaa
fst
xrelease
dec
ret
push
int3
add
jns
ljmp
add
push
shll
lock
inc
popf
cli
mov
test
out
imul
test
push
shl
pop
cmp
sti
jmp
enter
fisubs
enter
daa
fdivrl
fisttpl
add
dec
or
or
mov
mov
scas
js
test
xor
scas
scas
jbe
cld
or
mov
cmp
cmp
jle
mull
lock
add
add
lds
rorb
out
mov
dec
pop
fcoml
cmp
je
adc
rcrb
add
adc
mov
pop
xchg
jle
icebp
mov
filds
inc
xchg
ds
rclb
les
or
xor
inc
jne
sbb
in
adc
into
pop
cmp
cmp
das
pop
pop
sahf
sub
lock
or
idiv
enter
cwtl
push
cmpsl
adc
jl
out
or
idivl
push
shlb
testl
inc
cmc
out
jne
jae
insl
rorb
movsb
aad
cld
lret
sub
mov
and
popf
and
and
xchg
cwtl
mov
cli
pop
roll
sub
movsb
cli
movsl
lods
adcl
add
jne
add
mov
lcall
repnz
cmp
lret
push
push
pop
jne
mov
fdivr
jg
js
add
das
mov
mov
lock
das
or
sarl
rorl
stos
out
fsubp
xor
adc
fdivr
into
mov
stc
outsl
std
cmp
or
incl
cmpsl
mov
adc
out
ret
lock
cld
lock
cs
inc
push
in
sub
in
std
pop
xchg
mov
cmp
xor
adc
int3
aam
mov
ja
jecxz
sbb
pop
or
sbbl
mov
stos
xchg
inc
stos
rclb
sbb
loopne
repnz
stos
lods
je
jl
scas
ja
fwait
mov
jle
mov
jae
sbb
jmp
mov
add
int3
jle
lock
dec
sub
js
stos
in
cmp
sbb
repnz
std
xchg
imul
std
dec
ljmp
push
mov
mov
inc
push
addr16
popl
pushf
insl
and
inc
in
ficompl
stos
or
fwait
cmp
or
adc
stc
push
sub
repnz
dec
cltd
pop
pushf
std
xchg
es
add
popf
xchg
or
jbe
adc
cwtl
and
xor
jns
pop
jmp
cmpsl
repz
mov
and
mov
lods
pop
pushf
adc
in
icebp
push
jp
push
fwait
mov
xchg
popa
pusha
neg
lock
dec
jae
mov
outsl
inc
adc
push
cmp
pop
mov
test
stc
pop
mov
in
add
fdivrl
mov
cmpsl
cmp
pop
cli
pusha
scas
or
insl
add
cli
aam
lock
ja
nopl
cmp
jg
add
pusha
add
enter
mov
ljmp
xchg
movsl
hlt
test
sbb
xchg
in
inc
sub
inc
or
ds
pop
fisubs
sub
add
sub
mov
ds
cli
xchg
fdivrp
or
or
in
and
mov
rclb
push
jle
xor
pop
imul
jmp
mov
jg
and
movsb
push
inc
pop
inc
data16
std
les
cmp
add
cmpsb
sbb
push
add
push
pop
lea
push
inc
push
jle
scas
add
add
add
xchg
cmc
dec
sbb
movl
sub
cmp
xor
cltd
and
scas
into
imul
ds
les
jmp
dec
lea
lahf
shl
idivb
sub
test
test
inc
scas
dec
cmp
cs
sti
iret
dec
lods
or
cmp
adc
sti
xor
mov
stos
jns
pop
jp
out
cmp
aas
inc
pop
mov
and
ljmp
in
fwait
pop
cmp
lret
outsb
int
dec
into
jmp
mov
fs
scas
or
shr
pop
hlt
dec
xchg
mov
lret
jnp
test
fistpll
fdivrl
lcall
addr16
cmpsl
mov
popf
adc
add
jp
ret
cmc
xchg
or
inc
shrl
leave
mov
orb
xor
add
inc
hlt
int3
or
test
sbb
mov
xor
add
jle
test
popa
or
or
inc
data16
mov
std
or
jecxz
and
mov
stos
gs
mov
test
push
test
push
outsl
iret
in
daa
scas
pushl
cld
sbb
ja
dec
push
push
orl
xchg
xchg
in
add
xor
std
jg
mov
cld
lods
in
jb
add
mov
orb
fs
lret
jmp
repz
add
or
cli
lods
ljmp
nop
popf
xor
sarl
and
and
push
dec
dec
add
mov
lret
xor
add
enter
pop
dec
iret
push
dec
mov
inc
js
rolb
push
xor
jae
sti
clc
cmpsl
xor
cmp
inc
enter
pop
dec
les
or
jne
pushf
mov
repz
inc
lock
pop
inc
mov
add
test
mov
or
ljmp
fbstp
dec
push
iret
mov
clc
or
sub
je
not
js
ja
adc
push
ja
in
subl
adc
or
inc
adc
jecxz
dec
out
add
push
mov
stos
bnd
sbb
pop
in
fs
std
and
push
or
fcomip
enter
pop
aad
push
mulb
jae
dec
sti
out
mov
mov
or
inc
dec
sub
jmp
sbb
out
addb
mov
xor
jp
lock
mov
inc
mov
std
fucomi
jl
adc
imul
test
or
mov
stos
mov
fiaddl
cmp
mov
or
xchg
pop
rolb
cli
aam
cld
or
sub
shl
fisubl
fs
and
cmp
into
das
pop
les
cmp
pop
jmp
cmpsl
iret
movsl
jne
ljmp
mov
or
sub
into
in
imul
test
hlt
int3
mov
scas
scas
cmpl
mov
and
mov
in
popf
mov
mov
in
repz
cmp
add
dec
jmp
ret
cmp
flds
xor
stos
xchg
outsl
xchg
jbe
mov
shrb
push
jmp
or
lds
inc
int3
or
fisttpl
mov
cmp
test
jl
les
mov
loope
inc
lds
imul
hlt
les
xchg
mov
inc
adc
xchg
jne
jl
adc
push
fcmovb
dec
pushf
and
jg
sarl
pop
cmp
rcr
dec
jae
pop
fwait
xchg
in
int3
fldcw
je
jp
cmp
rcll
sbb
push
rolb
cmp
sbb
aas
leave
mov
insl
shl
in
or
push
dec
in
sub
mov
gs
ret
push
mov
imul
stc
xchg
movsb
jle
scas
jecxz
adc
mov
cmp
addb
rorl
inc
lret
cmpsb
jmp
cmc
insb
andb
sti
testb
or
inc
repnz
idiv
or
or
test
mov
mov
cli
in
sub
xor
in
call
or
cli
jne
push
push
repz
xchg
sahf
sub
cmpsb
mov
mov
fcmovbe
in
test
mov
into
mov
loope
inc
in
addr16
cli
popa
mov
jmp
outsl
cmp
les
or
fadds
or
test
test
add
mov
int3
jbe
mov
addr16
stos
jmp
jp
lea
sbb
addb
jns
mov
lret
add
data16
mov
or
mov
and
pop
xchg
pusha
int
addl
cld
icebp
scas
mov
xchg
add
jmp
or
and
cmp
ret
std
test
adc
lahf
fsubrl
xlat
push
test
jno
add
test
jl
jge
dec
cmpsl
xor
sub
xchg
shll
mov
fdivrl
push
jbe
sbb
jo
mov
sbb
lods
xchg
out
push
sbb
ret
inc
inc
mov
lods
leave
clc
pop
fisubs
test
inc
lret
xchg
movsl
incw
aas
cmp
xchg
mov
lds
lcall
ret
arpl
jmp
daa
mov
icebp
dec
or
loopne
sbb
ret
fbld
rorb
shrl
cmpb
enter
js
leave
leave
les
stos
pop
insl
cmc
jp
lcall
out
dec
sti
fs
pop
stos
and
rolb
sbb
gs
and
test
or
xor
mov
sbb
jbe
mov
sahf
repz
lret
fwait
sbb
fildl
gs
insb
or
in
and
jns
pop
push
icebp
mov
test
pop
ljmp
in
and
cltd
and
call
adc
incb
jnp
sarb
jb
or
or
pop
std
cmc
pusha
jmp
push
jl
inc
push
shlb
ja
fmul
repz
xchg
jo
sbb
fisubl
movsb
inc
js
stos
xchg
inc
push
in
mov
jp
adc
xchg
add
out
sub
mov
arpl
add
push
icebp
js
or
mov
lds
or
je
lods
jp
pop
xor
ror
in
jo
js
test
add
add
and
sti
imul
jns
inc
or
fcomp
pop
lods
icebp
lock
stos
and
jmp
jbe
push
or
dec
test
divl
leave
loop
inc
or
test
jnp
das
in
mov
or
stc
cmc
and
loop
les
ds
out
shrb
or
movsb
fbld
inc
sbb
mov
mov
inc
mov
mov
sub
pop
pop
int3
fdivrp
lret
jecxz
mov
ficompl
jne
mov
fucomp
hlt
xchg
dec
add
das
lret
adc
push
sub
sbb
cmp
pop
push
pop
je
cmpsb
mov
mov
add
push
xor
lods
fiaddl
jmp
dec
or
inc
adc
add
sub
in
lcall
jb
cli
in
js
jp
jne
arpl
add
sbb
cmc
arpl
addr16
cwtl
jne
inc
aam
je
repz
jl
fiadds
add
dec
dec
std
rcrl
or
jne
cwtl
aam
pop
loop
cltd
add
jo
fwait
movsl
inc
and
or
cmp
lret
bound
add
jbe
cmp
lcall
mov
mov
pop
insl
jns
sbb
add
std
cmp
rolb
cmp
ja
ret
das
cld
icebp
and
mov
ja
test
insl
lcall
gs
cmp
lret
adc
pop
sub
out
mov
jecxz
mov
mov
sbb
xor
jbe
xor
test
jecxz
in
lods
icebp
adc
scas
inc
add
mov
rorl
mov
sbb
popf
shrb
stos
lods
fldt
mov
pop
lret
sbbl
fidivrl
fcomps
decl
push
xor
hlt
jnp
mov
lret
or
test
adc
fldenv
and
push
ja
or
xor
dec
push
xchg
sub
cmp
pop
jo
fistl
mov
push
sub
sbb
fcomps
aam
nop
inc
mov
or
lea
fwait
pop
es
jp
movsb
push
xor
mov
mov
mov
dec
and
lret
lahf
fcmovu
and
pop
pop
repz
cli
xor
aaa
push
xchg
pop
call
in
in
dec
stos
jp
pop
ss
test
sbb
lods
lret
dec
shll
push
imul
add
outsb
jno
das
cmp
ja
jmp
jmp
dec
les
mov
cmp
mov
mov
sbbl
cmp
shlb
inc
js
jbe
pusha
cmp
or
in
xlat
clc
mov
inc
jle
roll
adc
loop
xor
xor
insb
inc
std
xor
xchg
mov
ret
jl
dec
lret
js
adc
add
shlb
mov
dec
test
pop
sbb
lret
in
or
fisubrl
nop
add
mov
jg
into
out
or
adc
cld
lret
rorb
js
jne
jnp
lret
or
sub
cmp
jle
sti
mov
nop
cmp
jb
sub
adc
push
jge
mov
sbb
sbb
adc
out
pop
mov
push
or
jb
lret
xor
jbe
xor
sbb
xchg
jae
add
lret
inc
call
fucom
dec
inc
pop
mov
or
test
cmp
cld
mov
sub
lea
testl
pop
movsb
jbe
mov
dec
sbb
add
sbb
jp
cli
sbb
inc
jbe
cli
xor
adc
out
neg
mov
fists
mov
std
inc
shll
or
movsl
stos
stos
out
das
hlt
pop
add
sub
xchg
xchg
push
aad
stos
repnz
std
add
push
fsts
add
or
cwtl
andb
mov
xor
pop
dec
jp
dec
jge
insl
adc
jno
out
pop
or
sub
adc
fisubrl
push
mov
sub
mov
inc
cltd
or
lcall
mov
sub
mov
inc
cmp
cmpsl
ret
push
mov
call
pop
fwait
push
xchg
cmp
movsl
daa
jp
decl
aam
push
call
mov
sar
in
popf
call
lds
push
dec
loope
or
lret
out
cmp
sub
aaa
or
add
loop
sarl
ss
out
xor
inc
dec
data16
jl
sub
outsl
cmp
fwait
or
cld
in
daa
std
jnp
lods
js
scas
dec
and
mov
push
test
dec
mov
std
sub
out
stos
bound
test
inc
sub
adc
adc
adc
mov
inc
les
pushf
iret
out
lods
or
xchg
push
adc
ror
test
cwtl
movsb
sub
repnz
sub
test
push
shrb
fstps
xor
inc
xchg
jmp
push
pop
fsubr
js
cli
and
xor
pop
lcall
ljmp
hlt
dec
lods
aad
or
or
cli
stos
add
mov
or
jb
xor
shll
adc
decl
popf
fldt
mov
sarb
cmp
push
shl
mov
add
xchg
add
lods
aam
sbb
dec
add
sbb
rolb
jno
ja
push
cmp
ja
mov
pop
shlb
aas
mov
or
xchg
lds
stc
cmp
jnp
jnp
jle
pop
decl
shlb
je
jns
sbb
xlat
aas
jbe
dec
roll
or
xchg
sbb
ja
mov
cmp
std
sub
mov
das
ja,pt
stc
stos
shrb
repz
in
scas
stc
or
loop
fldt
or
lret
adc
fucomp
out
or
add
xchg
mov
mov
lret
lds
ror
daa
cmp
or
sub
es
add
test
adc
mov
or
pop
xor
xor
sbb
add
fisubl
fsubrl
push
in
popf
xchg
jne
push
xchg
fwait
mov
mov
push
out
sbb
testl
pop
fadds
pop
rcl
mov
add
jle
xchg
pop
cld
ret
jp
dec
inc
mov
scas
mov
cmp
fcmovnb
pop
rol
pop
adc
and
ds
sti
mov
addb
ret
mov
add
cmpsb
dec
test
xchg
add
lods
hlt
pop
inc
xchg
mov
xor
xchg
shr
loope
ljmp
mov
mov
out
in
lods
adc
mov
sbb
fistpl
push
xchg
or
jnp,pt
add
xor
xchg
cmc
add
mov
mov
mov
or
xorl
jp
adc
xor
dec
dec
aaa
test
add
imul
and
lods
shrl
ret
jno
mov
pop
push
ds
roll
shll
mov
pop
pop
repz
iret
jb
pop
xor
mov
lahf
mov
leave
xchg
daa
push
pop
or
scas
aaa
mov
push
push
in
cld
or
xchg
dec
cld
ljmp
jmp
ljmp
dec
test
sub
push
stos
add
push
lock
dec
jbe
and
jmp
daa
pusha
shll
adc
pop
sub
loopne
sub
mov
jmp
cmp
lods
in
insl
ss
lock
std
icebp
and
mov
or
pop
sub
ss
lcall
add
mov
into
push
insl
dec
jbe
and
cmpsl
xor
cld
or
sbb
mov
mov
add
outsl
fs
jae
sbb
pop
or
idivl
cltd
cmp
fistpll
mov
mov
cmp
or
sti
sub
pusha
int
jbe
inc
fdivl
jno
iret
ja
test
subb
or
in
mov
mov
sbb
xchg
mov
das
lock
stos
pop
outsl
lret
jp
lea
out
dec
add
or
mov
orb
xchg
or
cmp
imul
jns
or
xor
sbb
cli
insl
xchg
dec
clc
xchg
jp
jp
jge
adc
or
in
lods
lret
arpl
jne
jecxz
iret
adc
movl
lods
pop
aas
dec
lcall
sub
insl
jbe
push
xchg
dec
test
mov
lcall
push
sar
or
movsl
sbb
adc
shll
pop
dec
ficoml
xor
test
ret
inc
or
lock
ljmp
lcall
sub
cld
or
inc
or
mov
or
sarb
sarl
push
fwait
mov
fisubrs
imul
sbbl
je
xchg
xlat
scas
push
jl
cs
push
sub
dec
stos
icebp
dec
inc
dec
and
sahf
aad
das
adcb
popf
fwait
scas
sti
lods
sarb
pop
lock
addl
dec
dec
insb
int3
popf
leave
jecxz
dec
jge
dec
mov
scas
pop
or
dec
inc
lock
dec
scas
or
mov
je
dec
repnz
int3
in
xorl
and
jmp
mov
push
or
dec
add
and
jo
in
push
sarl
cld
clc
sti
bswap
dec
jecxz
xor
pop
negl
popa
mov
mov
out
add
adc
in
loopne
addb
enter
pop
test
fwait
js
js
in
jle
pop
push
add
shlb
or
adc
jl
or
add
sahf
notl
dec
cltd
xchg
push
sarl
sar
push
aaa
lahf
add
mov
jns
clc
inc
xlat
xchg
xor
inc
mov
mov
outsb
outsl
mov
xchg
or
xchg
lea
repnz
jns
int3
adc
mov
push
das
jecxz
in
out
mov
pop
repnz
cmp
add
mov
ret
jnp
cmp
clc
test
mov
jno
mov
add
lock
pop
addb
add
xchg
mov
jns
popa
lcall
mov
cmp
popf
cmp
sbb
into
cmp
add
push
jecxz
int3
sbb
sbb
cltd
lret
in
mov
hlt
sbb
lret
add
es
mov
add
mov
xor
mov
insl
stc
push
out
cmpsl
or
mov
shrb
lods
mov
sbbl
test
repnz
testl
xor
jl
lret
xchg
cli
mov
xchg
dec
mov
mov
sarl
loope
push
mov
add
aaa
inc
jne
fidivrl
push
dec
popa
add
xchg
sbb
int3
jo
or
or
shlb
xchg
push
aaa
jns
fninit
test
lcall
or
sub
pop
ret
inc
in
ss
inc
divb
inc
test
add
ljmp
inc
adcl
mov
add
xchg
xor
push
rolb
sbb
mov
mov
dec
jmp
scas
cld
or
cs
jns
cmp
and
sti
gs
mov
ljmp
sbb
ljmp
mov
mov
flds
nop
pop
or
stc
repz
mov
stos
movsl
or
icebp
cmova
mov
insb
test
mov
xor
or
push
imul
push
mov
stos
lea
mov
lcall
hlt
out
cld
add
jecxz
mov
push
lock
rol
aam
out
loopne
jnp
push
cld
rcll
decb
jns
std
fdivrl
or
or
mov
mov
inc
clc
pop
addb
je
add
leave
mov
add
mov
or
outsb
sub
adc
test
aad
ds
sub
mov
jecxz
aam
loop
sub
sbb
and
pop
adc
xorb
dec
lock
adc
sub
mov
sarb
pop
xchg
or
mov
loope
imul
mov
iret
ss
push
icebp
outsb
dec
cmp
inc
sub
lret
cli
jl
inc
mov
dec
and
insl
into
loope,pt
jnp
or
xorb
add
mov
loope
fmul
push
inc
std
xlat
ret
dec
or
mov
inc
jl
loope
test
movsl
cmp
lret
jns
pop
call
xlat
ret
push
fwait
sti
mov
push
adcb
xchg
inc
or
mov
out
repz
std
stos
push
sbb
adc
cli
mov
xchg
ret
js
mov
repz
cmp
les
fisttpl
dec
test
dec
in
daa
push
out
mov
rolb
xchg
dec
cmpl
imul
cmp
xchg
enter
aam
mov
repnz
aas
dec
cmp
testl
stos
sub
lcall
lret
fwait
mov
dec
pusha
adc
shl
ret
setns
mov
jecxz
mov
dec
pop
sub
cmp
fistpl
std
mov
enter
cmpsl
fs
add
shlb
or
or
sub
sub
ficompl
imul
cmp
sbb
lods
cs
addb
xchg
jbe
fistl
es
xor
daa
fldenv
sbb
ja
in
adc
pushf
fwait
jl
les
mov
out
pop
test
jo
jo
test
rcrb
mov
inc
pop
iret
repnz
aam
ja
lcall
bound
test
jb
mov
loopne
test
mov
mov
shlb
and
stc
shll
ds
fdivl
add
adc
adc
push
xor
in
sub
push
test
fisttpl
adc
mov
scas
pop
sub
je
pop
repz
pop
in
inc
and
cmp
leave
fwait
mov
jmp
or
test
jp
lret
xor
out
shll
inc
enter
inc
dec
jnp
adc
inc
jb
xchg
and
add
dec
jne
hlt
adc
cmp
xlat
dec
lret
stc
jns
imull
clc
mov
insl
sub
lock
mov
cmp
xchg
push
out
stos
test
mov
add
test
or
adc
cmp
push
dec
shr
or
shll
out
lock
in
testl
pop
int3
mov
out
or
leave
or
adc
mov
push
dec
add
int3
inc
aam
xor
test
fsubs
add
sbb
pop
dec
mov
mov
fsubrs
icebp
lock
test
stos
or
xchg
stc
arpl
dec
xor
jo
ret
mov
or
std
jbe
daa
das
arpl
add
jl
shll
or
push
bound
or
shll
mov
test
dec
int3
in
sbb
inc
cmc
cmc
xchg
mov
adc
xor
jnp
adc
mov
adc
push
mov
test
sbb
cmp
inc
push
int3
imul
adcl
sub
xchg
roll
sti
enter
xor
or
xor
stos
or
pop
push
and
push
imul
cmp
xchg
jl
mov
mov
insb
stos
jmp
dec
xchg
ss
push
mov
adc
dec
in
cs
and
ret
daa
ljmp
pop
mov
inc
repz
pop
inc
out
sub
ja
pop
adc
sti
push
jmp
lret
cld
ret
push
pop
adc
cmp
fs
sbb
pusha
sti
mov
xchg
or
les
setae
push
add
push
push
incb
xchg
pop
pop
add
mov
stc
inc
dec
loopne
jae
and
testb
cld
jg
inc
sub
ds
fsubl
or
ja
mov
add
addr16
movsb
cmp
cwtl
je
orb
mov
jmp
fildll
or
pop
fistpl
into
test
or
cld
dec
std
push
rol
dec
inc
out
shr
roll
iret
or
fsts
das
dec
push
or
inc
pushf
jo
dec
jnp
push
lods
scas
jl
in
aas
aad
cmp
add
das
dec
xchg
sub
mov
mov
push
and
or
aad
ljmp
imull
aaa
mov
popf
fstpl
out
cmpsl
mov
sub
loopne
dec
mov
stos
div
ret
inc
push
jbe
sub
js
sub
push
daa
sar
adc
sbb
sti
mov
sbb
push
ljmp
jle
gs
dec
push
inc
push
test
inc
test
xchg
fs
push
add
inc
push
aaa
hlt
jg
pop
cmp
jne
fimull
scas
fs
pop
repz
mov
imul
aaa
out
shrl
mov
xchg
cmc
mov
daa
imul
pop
mov
mov
in
in
cmp
inc
stos
imul
add
adc
fdivl
js
sbb
add
cmp
add
mov
fcoms
pop
pop
adc
pop
insb
fdivr
jne
xchg
scas
jbe
fisttpll
repnz
push
jl
xor
in
add
call
cmp
stos
xchg
mov
mov
je
nop
jo
xchg
flds
int3
cmp
call
cltd
adc
pop
mov
adc
mov
nop
xchg
lock
mov
cmpsb
test
je
pop
imul
pop
rol
add
aaa
faddl
sub
and
dec
add
jp
pop
orl
or
push
push
mov
lock
xchg
fxrstor
push
ljmp
lods
sub
or
int3
push
xlat
es
pop
push
jnp
mov
sbb
stos
sub
fistl
lret
mov
std
inc
sub
xchg
lods
cmpsl
rorl
pand
scas
sahf
cmc
or
mov
ds
enter
sub
inc
addr16
pop
rcll
leave
xchg
neg
xor
jno
inc
test
or
add
dec
out
jecxz
pop
mov
jbe
jo
sar
daa
shll
es
push
mov
xchg
adc
push
out
out
jns
jo
pop
cmp
mov
cmp
ror
jne
repnz
shll
js
mov
mov
xchg
rcrl
adc
ret
push
popa
into
icebp
or
fiaddl
xor
scas
lret
lret
adc
adc
dec
int3
out
dec
mov
jbe
mov
cmpsl
and
dec
cmp
push
stos
add
out
das
dec
js
and
push
mov
inc
mov
sahf
sub
dec
sbb
mull
xor
mov
imull
or
sbb
fstpt
in
xchg
dec
rclb
jmp
enter
add
lret
insl
xor
popf
pop
sub
shll
adc
mov
mov
fldcw
fisubrl
pop
in
dec
add
jecxz
and
stc
shll
sub
push
or
loop
out
push
in
cmp
cld
or
je
mov
push
or
popa
and
cli
in
cs
jne
pop
xchg
or
dec
hlt
in
xchg
inc
movsb
add
adc
sub
mov
pop
cmp
fildll
sub
lea
test
ret
cmpsb
icebp
adcl
dec
mov
fstps
loopne
xchg
and
mov
lock
es
testb
in
jmp
filds
inc
pop
movl
lock
mov
jmp
shr
les
dec
nop
enter
or
orl
push
stos
int3
dec
cmp
cld
pop
cmp
enter
or
pop
mov
mov
mov
add
or
movsb
add
dec
rolb
out
in
mov
daa
testl
mov
call
pop
mov
lret
cli
jnp
push
sbb
fucomi
jbe
sub
shrb
and
jmp
mov
aad
sbb
add
cmp
loope
icebp
mov
scas
adcb
stos
jmp
jmp
or
enter
cmp
test
rcl
cmpsb
or
rcrl
lds
in
mov
cmp
jecxz
imul
mov
jmp
ja
inc
scas
sub
rol
xchg
pop
or
or
stos
cmp
add
mov
sub
jbe
jmp
mov
je
mov
and
mov
and
stc
and
orl
pop
lea
in
sarl
clc
icebp
and
jno
add
sub
les
jle
sub
cld
fisttps
mov
mov
ret
ret
shrl
jns
bound
dec
scas
dec
insb
in
inc
mov
jne
mulw
pusha
lds
sub
repz
popl
int
add
and
sub
imulb
pushf
lret
les
cmovbe
test
mov
jnp
mov
push
dec
rorb
mov
mov
cmp
fwait
inc
call
popf
push
addb
ret
addb
stos
js
sbb
loop
or
ret
mov
sbb
loopne
mov
dec
add
popf
inc
jmp
fisttps
iret
pop
push
xor
je
les
xchg
fistpl
cld
or
into
adc
inc
mov
cmpsl
cs
mov
mov
push
pushf
cmp
into
mov
loop
fcmovnu
sbb
jne
push
lods
sub
or
push
ret
mov
shl
sbb
sbb
leave
jnp
imul
stos
add
ret
leave
push
shll
ds
jle
mov
dec
cmc
lods
sub
arpl
arpl
jl
add
xor
bound
push
rcr
dec
mov
sar
or
and
sbb
adc
out
test
xchg
sbb
dec
frstor
push
stc
and
cmp
inc
or
add
jnp
enter
add
xchg
imul
cmp
xchg
xor
sbb
sbb
dec
or
or
ret
dec
cld
or
out
or
cmp
scas
or
loopne
filds
lock
sub
add
jnp
in
sahf
lods
sub
mov
leave
test
jmp
and
adc
jb
inc
adc
mov
pop
mov
lock
leave
into
push
inc
pushf
insb
addr16
inc
pusha
mov
mov
adc
stc
iret
adc
outsb
cmpsb
test
cld
mov
mov
iret
and
rorl
aaa
or
adc
scas
hlt
mov
rclb
jl
xchg
scas
subl
pusha
cmp
shrb
shlb
mov
mov
cmp
stc
or
mov
fldt
or
jns
adc
mov
sbb
add
and
in
and
inc
dec
andl
and
jo
ret
testl
or
inc
jp
pop
bound
out
leave
roll
pop
cs
and
adc
mov
cs
mov
cmc
mov
lret
cmp
cmpsb
or
mov
lahf
mov
adc
lods
in
sbb
int3
dec
outsl
ds
fildl
fcmovb
push
std
and
pusha
cld
subl
adc
aaa
insb
inc
mov
cmp
mov
insb
jg
std
ds
ja
lcall
xchg
pop
mov
in
inc
fildl
push
mov
enter
stos
ja
mov
fld
stc
aaa
sbb
inc
std
int3
aaa
or
push
pop
jnp
fcmovbe
mov
ret
xchg
jbe,pn
adc
mov
inc
cs
sbb
notb
into
inc
pop
ret
jmp
out
xor
clc
shrl
inc
leave
cmp
mov
cwtl
call
add
or
popa
cmc
aas
xchg
mov
or
push
cld
lret
push
pop
scas
ja
or
mov
or
xor
jle
pop
lret
fisubl
mov
lret
aaa
loopne
cmp
call
mov
movsl
pop
xor
call
or
mov
dec
cmp
sarl
push
lret
dec
movsl
fstl
outsl
fsubl
xor
out
fs
jae
jne
xor
stos
cld
dec
and
mov
jecxz
jne
scas
fistpl
roll
daa
push
lcall
iret
pop
xchg
cmp
mov
lock
push
inc
mov
jg
stos
sti
xlat
js
shlb
mov
xlat
gs
pop
dec
xchg
enter
or
mov
sub
or
divl
push
enter
jmp
rcll
cmp
push
dec
lret
adc
pop
jl
iret
lock
cld
mov
ss
stos
jns
add
rcrb
movsb
iret
hlt
std
aad
cmp
xchg
sbb
inc
inc
mov
and
xchg
idivb
outsl
in
scas
sti
pop
mov
std
xchg
fwait
cwtl
or
stos
les
or
mov
pop
sbb
loopne
and
xor
sbb
lds
fdivrl
test
mov
and
ret
mov
pop
jmp
shll
stos
push
mov
sbb
clc
scas
cmp
or
scas
cmp
inc
fsubrl
roll
push
mov
adcb
jno
inc
push
jg
lds
xor
mov
cmp
xchg
and
je
sbb
loopne
dec
push
mov
filds
mov
xchg
pushf
out
and
mov
cli
in
add
inc
je
mov
fmul
sub
inc
add
jmp
dec
jmp
or
jae
pop
fidivrs
mov
adc
jmp
push
sub
sub
xchg
hlt
push
adc
adc
jmp
jg
jae
inc
push
mov
icebp
cmp
out
or
jne
push
xchg
xchg
repnz
add
inc
lret
dec
jmp
sti
add
or
add
jo
push
fsub
adc
loopne
pop
mov
out
inc
adc
or
test
clc
stc
adc
push
loop
lret
push
and
lock
int3
imul
scas
dec
and
xchg
lret
iret
shlb
cwtl
aaa
mov
ret
mov
xor
fistpl
dec
mov
test
les
add
mov
dec
scas
js
inc
enter
ss
dec
pop
pop
imul
mov
pop
jbe
and
loop
aam
xorl
push
mov
shlb
sub
add
jl
or
mov
xchg
push
inc
es
lcall
inc
jbe
lcall
cmp
shll
xor
dec
push
pop
mov
dec
cwtl
inc
fwait
or
jbe
int
cmp
sbb
mov
fwait
push
adc
push
sub
je
dec
mov
subb
or
mov
mov
in
sub
aad
sub
lea
xchg
jne
cld
enter
pop
les
loope
imul
out
push
add
loopne
xchg
inc
mov
adc
test
das
dec
and
xor
lock
lock
jg
pop
movsl
adc
jo
stos
inc
mov
jmp
imul
les
push
fldt
leave
test
fucomip
stos
xor
adc
sarl
call
loopne
lds
out
mov
hlt
push
loop
addr16
lods
mov
jecxz
lret
int3
push
loope
pop
popf
push
gs
imul
inc
pop
add
je
fs
les
andb
pop
cmp
adc
fmuls
les
scas
dec
movsb
and
jb
or
pop
stos
mov
mov
or
adc
dec
mov
movsl
mov
ret
shlb
pop
push
lods
and
pop
jbe
sahf
sub
pop
xlat
stos
add
shl
mov
dec
lea
mov
push
sub
inc
mov
mov
scas
loope
adc
lods
pop
push
test
aad
outsl
xchg
xor
pusha
add
inc
jbe
out
fildl
pusha
dec
push
mov
clc
or
xlat
mov
les
xor
ds
dec
addl
inc
or
jmp
shl
mov
cmp
cmp
lcall
xchg
push
pop
and
xchg
inc
dec
push
fistl
inc
pop
or
dec
sbb
mov
lds
popa
xor
fs
out
mov
or
xchg
xor
cmc
or
cmp
ljmp
subb
mov
inc
sub
lret
xchg
and
clc
xor
mov
or
inc
shll
ret
cld
or
sbb
lahf
ret
pushf
pushf
not
add
cmp
stc
ja
loop
pop
xlat
pop
or
mov
pop
stos
ret
or
mov
cs
mov
pop
sub
addr16
ret
inc
xor
sbb
dec
dec
xchg
xor
mov
and
in
decl
add
enter
sub
push
or
movsb
dec
pop
mov
or
adc
mov
dec
sub
daa
pop
push
filds
dec
mov
ss
or
jno
outsl
out
push
fsubrp
rorb
add
dec
sbb
jmp
cld
test
mov
lret
int3
lock
or
dec
loopne
scas
xor
stc
pop
inc
lods
or
pop
xlat
js
or
hlt
sub
daa
scas
jae
or
sti
or
fwait
stc
sbbb
inc
adc
inc
lods
add
dec
stos
scas
jo
lcall
pop
inc
stc
fstpt
or
sub
pop
lret
cld
mov
rorl
iret
pop
mov
lods
jno
and
cmpsb
xchg
rolb
or
fs
add
mov
popf
hlt
out
sub
jmp
add
jb
sub
pop
push
pop
aas
repz
icebp
fimuls
adc
mov
adc
stos
jnp
sub
cld
ds
sar
dec
test
out
loop
fmull
jp
or
jns
test
xchg
leave
stos
imul
out
jo
push
jecxz
or
xchg
lea
shrb
cmp
ror
mov
mov
add
out
out
lcall
shlb
mov
stos
mov
sarb
pop
fmull
jb
or
xchg
imul
imul
sub
sbb
daa
jae
or
add
cmp
repz
xor
cmp
movsl
add
pop
movsl
cld
into
daa
cmp
aad
push
imul
stos
add
test
pushl
xchg
movsl
xchg
loopew
in
sbb
or
lret
push
cmpsl
xchg
arpl
jb
or
sti
pop
or
or
pop
mov
mov
or
je
stc
mov
stos
sub
mov
clc
cmp
jnp
aaa
pop
std
hlt
add
lods
ja
xchg
lods
loopne
imul
scas
aas
cli
mov
mov
mov
jecxz
xchg
ret
mov
stos
imul
or
sahf
ret
clc
sti
adc
push
nop
stos
enter
ja
xchg
iret
lret
dec
inc
rcrl
or
push
and
jns
test
aad
or
insl
subl
into
sub
loope
or
jo
jge
mov
mov
inc
fstps
mov
out
jl
jp
push
aam
and
sub
movsl
xor
sbb
xor
into
sti
lret
mov
rorl
out
hlt
jo
fwait
and
cld
mov
mov
xor
mov
hlt
jl
cld
repz
mov
lods
dec
rcr
pop
stos
rol
dec
jp
std
data16
std
lods
int3
ret
sahf
shll
and
rorb
fistpl
xor
xor
inc
sub
jns
mov
pop
xchg
cmp
xor
call
adc
add
faddl
push
sbb
mov
mov
cmpsl
jns
gs
movl
jnp
xchg
jmp
inc
push
mov
in
lahf
add
mov
xchg
mov
xchg
pop
push
push
std
lea
mov
xor
mov
subb
add
and
add
jne
add
scas
mov
cld
divl
enter
cmp
push
movzwl
fadd
jg
or
or
cmp
push
adc
cld
popa
pop
mov
aaa
jae
cmp
outsl
insb
mov
xor
rcrl
dec
lss
pop
add
mov
test
or
or
cmp
les
or
jmp
pop
icebp
or
push
add
test
xor
jne
jge
shrd
jb
out
adc
ds
mov
mov
idivb
lret
loope
jp
pop
mov
add
inc
out
add
lock
aas
les
add
aam
adc
inc
mov
sbb
and
cmp
test
mov
jle
sbbl
dec
fdivrs
or
jnp
jl
push
mov
fbld
cmpb
xchg
clc
sarl
iret
ja
sub
gs
fwait
cli
dec
xchg
jp
ficoml
loopne
scas
es
test
xor
aam
xor
dec
push
inc
push
fistl
push
in
cli
dec
adc
out
cmpsl
mov
call
lock
pop
add
lret
call
ret
push
adc
sar
add
cltd
push
jbe
push
cmp
scas
dec
jo
out
mov
xchg
add
adc
fistl
call
mov
jle
push
in
cmpsb
dec
addr16
in
mov
cmp
stc
jl
movl
mov
les
jb
mov
xchg
insb
stos
mov
inc
das
leave
push
das
leave
dec
sets
mov
xchg
and
flds
test
stos
add
scas
jbe
in
insb
add
jae
arpl
add
loop
mov
xchg
fisubrs
push
jae
ljmp
inc
mov
stc
inc
lret
jl
and
lods
pop
add
pop
or
push
cmc
std
cli
out
inc
push
pop
jnp
xchg
ss
outsb
cmp
fdivrl
add
gs
sbb
movl
jns
gs
adc
push
or
rorl
push
dec
aaa
cmp
or
mov
or
push
mov
mov
stos
lcall
sbb
cmpsl
or
cmp
jge
add
mov
add
ror
shrl
lret
out
outsb
test
aam
mov
scas
or
loop
inc
int3
not
xchg
xor
je
or
cmp
hlt
inc
stos
sti
or
scas
out
fsts
sub
mov
jl
or
push
out
in
aaa
in
jl
xchg
push
xor
test
popa
fsubl
flds
and
xor
push
add
out
xchg
dec
or
push
js
repnz
sbb
inc
cmp
xchg
lods
sbb
cmp
rcl
lret
mov
pop
or
inc
or
xchg
ja
sarl
gs
leave
mov
mov
test
ja
cwtl
adc
dec
or
sbb
fs
test
adc
mov
shrb
pop
or
dec
iret
mov
pop
adc
stos
mov
adcl
sub
pop
jbe
shlb
adc
mov
push
scas
cmp
jmp
int
sub
fldenv
in
push
je
sti
push
out
add
popf
jl
vpaddsw
test
rcll
icebp
out
pop
mov
inc
mov
adc
outsl
mov
jg
out
clc
roll
xor
jl
mov
aas
stos
repnz
popf
sub
popf
jmp
lods
fdivl
cmc
rcrl
or
jno
pop
mov
add
sbb
pusha
les
jp
lea
aaa
mov
iret
lcall
cld
adc
xor
add
pop
stos
in
xchg
or
mov
roll
or
mov
mov
pop
inc
lret
xor
jo
sti
mov
add
add
jg
or
mov
push
sbb
imul
in
mov
mov
mov
mov
pop
test
shrl
or
mov
movsb
pop
jmp
jg
inc
test
cmp
or
hlt
or
test
or
push
sbb
inc
cmp
or
or
inc
and
or
testl
dec
adc
stc
sbb
mov
cmc
aam
ss
cld
cmc
and
pop
clc
pop
ss
call
les
hlt
xchg
sub
jns
sub
sub
pushf
in
stos
jnp
push
das
jl
aaa
push
iret
cmp
push
add
lods
dec
mov
sub
sub
or
jae
dec
mov
sarl
mov
in
fisttpll
xor
in
inc
movsb
imull
loope
sub
mov
scas
xor
mov
dec
out
dec
or
int3
jne
out
push
movsb
mov
jp
test
cmp
jl
movsb
idivl
mov
mov
insb
js
lret
xor
roll
fisttpl
xchg
das
movsb
or
xchg
xchg
mov
cmpl
inc
or
out
inc
cwtl
cmp
xchg
pop
fildl
mov
ljmp
inc
dec
jl
pop
shlb
pop
xor
inc
xchg
in
mov
test
call
jns
jg
pop
pushf
adc
das
imul
aam
or
rol
mov
in
xchg
and
leave
repz
sahf
lahf
test
sbb
das
lret
decl
push
add
enter
ret
mov
in
add
andb
xchg
inc
int3
cmpsb
js
loopne
mov
popa
rol
or
mov
or
daa
arpl
mov
mov
in
mov
je
stos
sbb
dec
add
or
cmp
enter
lret
insb
mov
push
loope
andb
fs
mov
stos
xchg
mov
into
dec
ja
ljmp
mov
fildll
sbb
stos
cmp
dec
or
hlt
jnp
sub
test
sbb
mov
icebp
shll
add
aad
scas
or
or
add
cmp
stos
jmp
inc
int3
in
test
std
cmp
pop
pop
xor
pop
jo
push
adc
mov
mov
iret
jge
push
mov
in
push
xchg
pop
mov
icebp
push
cmpsb
mov
xchg
pop
out
test
jecxz
stos
pop
jmp
out
movl
xchg
ds
ds
lods
clc
mov
pop
ds
scas
xor
inc
xchg
pop
ljmp
jo
insl
cmp
popf
jmp
and
jl
jle
xlat
int
imul
aam
popf
sti
mov
incl
int3
nop
adc
in
aaa
dec
mov
add
push
mov
push
ds
or
shll
test
mov
add
and
popf
sub
sbbb
das
movsb
je
jo
adc
mov
adc
mov
shll
lods
sbb
stc
fucompp
jae
xor
push
shll
mov
push
ss
jmp
xchg
enter
add
ds
lret
adc
roll
jge
mov
sar
jb
cmpsl
icebp
aad
iret
ret
scas
inc
lock
out
push
and
aaa
mov
push
fs
push
inc
push
shr
jne
and
cltd
xor
pop
push
push
push
hlt
jne
jbe
pop
mov
loopew
sbb
mov
jle
cmc
xor
cmpsb
ljmp
add
adc
mov
in
mov
int3
scas
cmp
outsb
and
fsubr
xchg
lcall
or
push
mov
ret
fcmovbe
sbb
or
fiaddl
xchg
dec
insb
clc
std
cld
or
inc
stos
pop
mov
mov
les
lret
mov
inc
inc
mov
popa
subb
mov
mov
add
ljmp
movsl
cmp
loop
mov
sub
inc
fucomip
test
xchg
adc
shll
les
xchg
aam
sti
mov
push
add
in
ss
push
int
aad
sbb
mov
cmp
lock
push
xchg
dec
stos
arpl
es
xor
lods
shlb
testb
xor
lret
lods
jnp
mov
cmp
dec
test
out
sarl
and
add
xor
and
mov
push
nop
bound
aam
leave
mov
push
icebp
cmp
fcoml
pop
jbe
mov
idiv
mov
fs
inc
call
imul
dec
pop
pop
out
out
in
add
lret
sub
insl
ret
fsubrl
loope
dec
or
addr16
push
mov
je
xor
cli
xor
mov
cmp
mov
in
push
pop
cmpsl
push
mov
movsb
shrb
mov
mov
cmc
xchg
mov
mov
aaa
fbld
or
dec
mov
jle
pop
cmp
clc
xchg
inc
mov
jp
pusha
addr16
push
xchg
je
fiadds
push
cmpb
pusha
mov
lret
mov
hlt
add
mov
fisubrs
push
push
ret
fildll
pusha
iret
hlt
mov
push
add
mov
jns
mov
je
cmp
jp
int3
or
jae
popf
movsl
ja
mov
fisttps
movsb
cld
lahf
or
test
mov
push
push
cld
hlt
scas
add
or
cmp
xchg
push
out
sub
jae
lcall
jmp
add
fiaddl
popa
mov
jnp
icebp
in
fsubrl
dec
lds
test
js
jmp
pusha
mov
adc
ja
mov
push
mov
mov
sub
dec
jl
jb
or
sbb
or
inc
sub
jo
popa
popf
std
pop
nop
jns
pop
test
or
xchg
loopne
jg
sti
xor
lahf
push
push
and
nop
dec
inc
jo
add
dec
fmull
cltd
pop
dec
add
adc
jb
out
push
test
loop
nop
lods
sub
lock
bound
inc
sub
hlt
xor
fildl
test
jmp
arpl
pushf
stos
inc
enter
test
add
in
stc
js
leave
pop
pushf
sti
fmull
cli
dec
mov
rolb
shll
mov
xchg
xchg
push
stc
cmp
stos
mov
das
or
add
adc
ljmp
cmp
test
cmpsb
lea
adc
pop
dec
or
inc
arpl
xchg
loopne
mov
addb
nop
aas
aam
jo
jge
xor
jno
gs
stos
iret
push
lea
cmp
sub
rcrl
les
popa
xchg
outsl
push
inc
into
rcrl
mov
in
movsl
lcall
in
fbstp
std
add
xchg
sti
addr16
and
int3
jecxz
cmp
pop
ficompl
rcll
dec
ror
sub
jmp
sti
mov
ljmp
sahf
add
insl
rclb
mov
add
sbb
fbld
mov
push
xlat
pushf
jp
pusha
stos
or
pop
jnp
enter
and
or
push
fimull
sub
and
mov
test
pop
ret
ret
or
jmp
mov
jg
add
fiadds
ds
stc
dec
sub
cli
or
outsl
add
out
imull
cmp
mov
mov
in
mov
addr16
jle
pop
divl
idivb
dec
and
sub
data16
hlt
mov
std
leave
out
iret
js
cmpsb
push
insb
xchg
xchg
or
cmpsl
repz
dec
sti
adc
mov
je
inc
dec
iret
and
push
push
sti
call
repz
das
gs
lret
das
xchg
leave
mov
roll
push
cmpsl
test
ja
mov
jo
inc
ljmp
or
dec
in
push
pop
ret
inc
rcll
adc
stos
out
add
enter
jmp
repz
je
negl
sarl
in
or
enter
rcll
rcr
sarb
push
iret
ficomps
shrb
xchg
inc
mov
out
sub
mov
aam
aaa
pop
mov
decb
leave
fnstcw
cmp
mov
inc
inc
add
or
movsb
push
mov
inc
adc
dec
lds
sub
jmp
jg
in
push
add
ds
jbe
pop
sub
in
das
xchg
out
ret
scas
push
push
stc
sti
mov
sbb
or
clc
mov
sbb
sbb
fistl
add
sbb
mov
dec
push
scas
mov
mov
ret
mov
in
pop
dec
test
dec
sub
jns
mov
dec
mov
mov
leave
xchg
inc
ret
dec
out
mov
push
ja
inc
inc
scas
test
mov
jbe
cld
pop
aad
in
mov
in
sub
mov
push
inc
outsl
repz
mov
or
ja
push
xlat
mov
sub
mov
dec
and
mov
in
jne
jecxz
cmp
dec
lock
xor
inc
mov
push
mov
jne
inc
and
push
popa
xchg
in
mov
ret
enter
or
popa
dec
mov
and
xlat
jae
ret
rorl
sub
dec
pop
insb
popf
cli
jne
jge
cld
jae
cmc
ljmp
dec
leave
xor
mov
mov
cmpsl
leave
inc
dec
insl
jne
rcll
adc
jae
sub
adc
sub
add
jp
adc
xor
test
notl
mov
mov
daa
add
inc
pop
fcoms
mov
clc
test
inc
lds
adc
imul
mov
addr16
test
jp
xchg
cmp
mov
mov
jne
pushl
push
fistps
push
push
sbb
int3
push
repz
push
or
and
rorb
stos
jae
les
sub
mov
in
stos
sub
ficoms
loop
xchg
inc
loop
mov
test
bound
jns
sub
lret
cmp
adcl
inc
jb
repz
xchg
rorb
mov
ja
aaa
enter
sub
or
sahf
mov
in
pop
fistps
ja
add
out
cmp
inc
clc
shll
out
loop
jl
add
sti
pop
lock
push
aaa
roll
sub
lcall
xor
sub
fcmovb
pop
test
add
xchg
or
xchg
jmp
je
xlat
or
call
push
pop
lock
push
adc
cmp
test
push
jg
je
adc
and
lahf
adc
movb
stc
mov
roll
scas
scas
mov
das
ret
aad
jl
add
in
inc
hlt
sbb
and
cli
out
repnz
rcl
push
jle
push
fcmovnbe
hlt
rol
mov
ds
cmp
call
or
lock
or
pop
call
xchg
test
out
inc
jmp
push
push
je
aaa
pop
push
sub
mov
xor
icebp
cmpsb
adc
add
lods
test
clc
sarb
fcmovnb
jbe
ss
mov
cwtl
int3
pop
xchg
push
enter
imul
add
push
mov
pop
push
xlat
ja
pop
cmp
int
push
test
mov
inc
mov
jne
into
cwtl
stos
dec
aaa
sti
xchg
mov
lock
sbb
adc
call
cmpsb
repnz
xor
mov
or
xchg
inc
mov
ds
or
loop
cli
dec
xor
cmp
cmpsb
test
cmp
mov
ja
cld
loopne
aas
std
shll
mov
arpl
or
insb
jl
pusha
dec
or
repnz
and
ffreep
aaa
or
cmc
or
test
push
cmp
lret
scas
pop
loopne
scas
ficoms
scas
push
cmp
ret
sbb
aam
int3
cld
scas
add
or
inc
fisttpl
inc
xchg
repnz
shl
jne
jmp
xor
push
daa
jbe
clc
inc
rcll
jns
adc
adc
add
cmp
test
lods
jne
scas
iret
or
out
push
and
jmp
or
test
hlt
sub
insb
xchg
mov
inc
sub
fcoms
leave
test
dec
lret
adc
adc
imull
add
mov
add
in
fwait
in
add
sub
push
imul
dec
out
add
dec
push
jmp
xlat
xchg
inc
adc
out
xor
xchg
sbb
outsb
mov
in
pop
mov
fdivrl
stos
push
mov
incb
fcoml
out
mov
mov
jmp
jmp
pop
dec
xchg
cmp
arpl
inc
stc
cmc
js
sbbl
cmpl
pop
sbb
out
xchg
sbb
fistl
cmp
imulb
xchg
push
xor
xchg
add
or
stos
mov
ret
cwtl
add
or
cmp
add
vphaddubq
stos
mov
push
fs
ret
aaa
roll
in
les
cmpsb
cmp
dec
test
aaa
or
test
cwtl
test
mov
bound
in
xor
pop
lret
mov
dec
mov
pushf
mov
or
mov
sbb
inc
iret
push
lcall
dec
mov
sbb
ds
std
js
popf
scas
mov
idiv
aas
push
arpl
repz
cld
jg
sub
dec
test
repnz
roll
push
out
test
movsb
outsb
nop
rolb
aaa
js
cmp
loopne
or
flds
or
push
bound
popa
jmp
mov
sbb
cmpsb
xchg
add
push
fisubl
movsl
add
mov
inc
jmp
mov
mov
push
inc
addb
out
push
inc
sub
sahf
or
sbb
ret
js
or
add
jno
sbb
or
fiadds
mov
sbbb
dec
cmp
sbb
pop
call
add
pop
pop
mov
mov
or
pop
mov
push
nop
jmp
pushf
sar
sbb
imul
pop
adc
xchg
ret
ss
stos
cmp
xchg
inc
ds
jo
stc
in
mov
dec
and
fsubs
stc
sbb
subl
mov
adc
sub
adc
xchg
pop
into
xchg
sub
push
sahf
mov
jne
ret
das
lret
out
or
rcrl
pushl
xchg
cmpsl
enter
adcl
rclb
ds
stos
pop
adc
ss
into
sbbb
ret
mov
les
fwait
ret
leave
hlt
mov
push
push
mov
push
xchg
call
inc
repz
cmp
in
xor
dec
or
or
add
incl
dec
enter
jns
in
clc
cld
sub
lock
sub
sub
adc
cld
popf
sbb
gs
cmp
ffree
push
rcr
sub
or
into
xchg
pop
mov
outsb
fdivr
dec
mov
popf
mov
pusha
cs
rclb
ds
test
dec
mov
cmp
addb
or
roll
dec
rolb
aas
mov
fisubrl
inc
loope
xchg
test
push
roll
push
decb
sbb
dec
scas
mov
mov
add
pop
sti
subb
cmp
add
inc
pop
cli
inc
loope
inc
out
ss
dec
cmp
add
jne
xlat
ret
scas
fcomps
out
push
cmp
xchg
hlt
add
movb
in
add
mov
adc
enter
add
in
mov
sub
sbb
dec
adc
xchg
movl
movmskps
and
xchg
push
pop
xchg
in
mov
mov
mov
test
cmpl
cmp
inc
xchg
push
xlat
jb
mov
sbb
fsubs
xor
cmp
sbb
lret
imull
jmp
repnz
pop
inc
cwtl
or
or
mov
popa
lret
outsl
pop
jo
sarb
js
sbb
mov
loop
movsb
mov
testl
push
lcall
fsubrl
nop
jl
aam
mov
add
jne
xor
icebp
xchg
lret
in
jecxz
or
sbb
movsb
add
andl
bound
pop
xchg
xchg
decl
jmp
or
ret
mov
xlat
mov
cmp
adc
sub
and
add
xlat
flds
mov
jmp
mov
lahf
sarl
stos
adc
jl
ret
cmp
addl
mov
pushf
lock
pop
in
lock
add
test
fs
sti
inc
or
es
adc
test
jne
inc
xchg
or
add
or
xchg
push
fnstcw
adc
adc
imul
jnp
inc
cmp
ds
hlt
pop
push
in
xchg
pop
or
or
add
jo
dec
fcomi
or
inc
sub
or
jg
pop
add
adc
dec
setae
push
push
sub
repz
cmpsl
xchg
lods
lret
jne
inc
or
test
insl
cmpsb
or
xadd
sub
ss
repz
gs
xchg
roll
stos
rolb
add
in
sbb
add
jl
decl
fcoml
xor
and
scas
add
ret
mov
add
sub
or
lcall
xor
or
pusha
xor
lret
outsb
xchg
adcl
jns
scas
mov
adc
pop
ss
lahf
inc
lahf
rclb
cmp
or
pop
xorl
pop
push
cs
fldl
jnp
sub
inc
dec
sub
in
ret
mov
inc
jge
test
fstl
jo
sbb
dec
jne
jns
or
out
insl
insl
lret
jp
and
fdivrl
test
scas
inc
lahf
test
sub
xchg
inc
jne
mov
insb
add
lret
xor
sbb
push
cmpsl
or
in
sbb
lcall
mov
jmp
mov
lret
jmp
or
ljmp
mov
stos
cmp
jmp
jmp
in
scas
decb
in
sti
jmp
pop
lea
xor
adc
les
mov
out
jne
loop
ret
jae
cmp
in
cmp
add
add
adc
mov
jp
push
or
push
mov
loope
jmp
add
push
sbb
and
fs
lea
sahf
test
mov
divl
mov
scas
cmp
mov
add
jmp
dec
test
mov
pop
scas
ja
jo
add
add
xchg
scas
mov
mov
lret
mov
loopne
ljmp
cmp
inc
add
scas
jae
out
std
rclb
sbb
insb
inc
adc
jle
jne
sbb
mov
xchg
lret
xchg
cwtl
dec
or
and
pop
cmpsl
inc
push
pop
ror
adc
push
mov
arpl
jle
lret
hlt
add
and
jl
stos
pushf
xchg
cmp
addb
dec
mov
sub
xchg
and
lea
lock
shlb
stos
and
mov
rcl
push
pop
faddp
xchg
in
out
or
pop
jecxz
in
lret
pop
add
mov
insb
mulb
addr16
pop
std
repnz
sahf
jecxz
ficomps
and
mov
cld
pop
push
sub
lret
pop
scas
dec
adc
lcall
mov
scas
adcb
movsl
xlat
add
xchg
add
cld
dec
icebp
clc
fcmovne
std
mov
pop
out
xchg
mov
sbb
pop
or
out
adc
push
xchg
push
mov
test
jp
jne
xchg
psubsb
jmp
dec
inc
jo
mov
std
sbb
mov
adc
pushl
jnp
xchg
jmp
dec
jle
pusha
pop
mov
or
incb
lods
adc
inc
scas
dec
filds
jecxz
in
xlat
sti
shrl
lods
enter
fstpt
cli
popf
mov
ret
add
daa
addr16
mov
out
push
fdiv
push
mov
stos
div
int3
lock
xor
inc
or
sbb
dec
cmp
inc
lock
xor
shr
test
mov
mov
lret
xchg
dec
out
daa
lods
xchg
mov
icebp
mov
sub
stos
mov
jb
inc
add
decb
test
dec
mov
sub
adc
jmp
ret
or
jbe
xchg
lods
inc
arpl
jae
js
mov
sti
add
xor
sbbl
push
mov
stos
jle
cmpsb
jb
pop
and
and
inc
movsl
scas
sub
test
lret
push
enter
and
xchg
jnp
inc
scas
fdivr
icebp
pop
or
jmp
xchg
cwtl
aam
sbb
mov
xlat
je
scas
push
lock
add
test
and
jo
or
ds
cmpsl
insl
iret
mov
loop
out
or
or
ret
pop
cmpsl
test
xchg
add
mov
cwtl
jle
aam
push
hlt
mov
pop
mov
lahf
xchg
insl
ds
jl
sbb
jbe
invd
jno
lock
shll
and
or
mov
scas
xchg
js
cmpsb
jns
xchg
fsubs
pop
nop
mov
icebp
call
mov
or
shl
pop
mov
sub
dec
ljmp
addr16
cmp
or
invd
movsl
jnp
jl
sbb
sbb
insb
mov
stos
cmpsl
mov
lods
pop
lds
scas
lods
and
gs
pop
mov
dec
jmp
insl
test
jns
cmp
mov
and
test
call
mov
dec
sbb
cmp
push
cmc
sub
popa
mov
fnsave
xor
inc
push
mov
ljmp
or
mov
testb
lds
xchg
dec
fildll
sahf
ds
adc
stos
jns
je
fsubrl
call
jle
ljmp
pop
in
xchg
scas
push
mov
mov
add
add
jge
jl
ret
and
hlt
add
and
loop
adcl
jo
ret
mov
sbb
jge
mov
sub
or
in
add
cwtl
sbbb
sbb
cld
xchg
push
jb
pop
out
cwtl
or
rcr
sahf
sbb
lock
insl
fisubrs
in
xlat
in
cmp
or
ss
fbstp
mov
jae
sahf
add
cmp
ret
lds
or
hlt
add
adc
pop
or
stos
lret
jle
push
mov
xor
or
and
faddl
or
bound
jnp
or
push
dec
daa
popf
jl
out
shl
adc
dec
push
stc
pop
push
cmpsl
enter
out
or
add
out
xor
ds
into
pop
xor
jmp
in
ljmp
mov
lds
sbb
lods
pop
in
or
fildl
out
jno
je
or
enter
mov
jbe
int3
test
aam
and
and
dec
stos
fnclex
or
daa
mov
jmp
roll
adc
xchg
push
xchg
lahf
das
sti
cld
pusha
incb
scas
fxch
outsb
adc
jmp
push
bound
adc
mov
vmwrite
pop
pop
cmp
or
loopne
stos
stos
enter
mov
sbb
and
popf
sub
and
ss
jmp
or
dec
jbe
shrl
mov
aas
testl
adc
or
add
inc
in
push
mov
pop
xor
sahf
cli
mov
pusha
add
lret
xlat
lcall
repz
or
dec
stos
lea
push
insl
fdivr
out
pusha
jecxz
mov
adcl
xor
ljmp
in
pop
int3
sub
das
push
arpl
lret
idivb
lods
xor
rcrl
inc
xor
sub
in
mov
jg
test
cmp
mov
arpl
clc
xchg
mov
or
ficomps
pop
ficomps
dec
jle
push
fisttps
ret
jp,pt
xor
sub
or
inc
push
xchg
cmp
push
mov
lcall
rorl
xchg
int
jle
xchg
cltd
jl
cs
dec
xor
shlb
ret
inc
jnp
jno
fsubrs
dec
jne
adc
fldt
stos
hlt
or
or
adc
inc
loopne
or
leave
push
aad
data16
inc
adc
xchg
rolb
mov
ds
cmpsb
mov
orl
mov
pop
push
fstl
add
cmp
dec
cmp
sub
jo
sbb
dec
das
ret
into
add
sub
in
adc
test
movsl
repnz
fs
push
and
jmp
mov
bt
mov
mov
xchg
adc
inc
pushf
mov
addb
mov
push
cmc
pop
mov
xor
test
jnp
cwtl
sbbb
test
lcall
popa
or
roll
outsl
cmp
push
ror
adc
call
lea
aas
rol
jg
iret
aas
or
or
jmp
adc
sarb
or
arpl
fildll
test
test
enter
in
jl
fmuls
pop
push
jmp
mov
shll
xor
test
ret
pop
or
stos
or
cwtl
mov
mov
xchg
mov
mov
or
out
xor
jb
pop
sbb
mov
filds
out
mov
dec
les
inc
sub
ljmp
mov
jl
or
dec
rcr
push
sti
jl
adc
mov
dec
ret
dec
aaa
sub
fsubl
repz
push
xchg
mov
pop
or
lock
mov
pusha
inc
loopne
push
sti
in
stos
notl
outsl
adc
cld
aad
mov
adc
jnp
lods
xlat
or
mov
sub
mov
jnp
mov
jnp
shrl
insl
xorb
es
add
roll
sub
scas
fisttps
iret
in
bswap
push
dec
or
cltd
and
adc
cld
pushf
push
rcl
test
fdivp
clc
mov
mov
leave
mov
fcomi
or
xchg
sarb
or
hlt
loop
or
orb
mov
stos
push
jmp
xchg
pop
lock
dec
xchg
sbb
push
cmp
repz
cld
outsl
lods
fisttpl
test
sti
cld
or
flds
leave
mov
lret
jnp
sbb
int3
push
int3
jge
int3
xlat
add
fildll
push
or
pop
shll
mov
add
in
pusha
in
or
dec
repz
mov
adc
jmp
int3
dec
mov
ja
add
movsb
aam
mov
cmpsb
data16
in
add
inc
cmc
int3
fldcw
and
ret
shlb
mov
jl
jp
inc
jnp
sarb
push
loopne
lret
sbb
xchg
out
pusha
add
enter
sbb
sub
mov
jmp
mov
jle
fiaddl
inc
jns
mov
out
cmp
cmpsb
shr
adc
test
or
jo
mov
leave
sarl
and
add
inc
and
lea
xor
cli
add
push
cltd
fldenv
or
xor
mov
clc
push
pop
push
shrb
cmp
mov
ss
fwait
sbb
mov
aaa
mov
pop
stc
add
pop
cmpsl
xchg
sahf
pop
inc
stos
adc
push
mov
xlat
sti
or
fadds
ficompl
int3
in
dec
in
mov
divb
mov
jnp
add
rol
aad
cli
or
or
jmp
cld
mov
shr
data16
adc
sub
repz
mov
je
adc
and
jmp
jnp
push
dec
nop
mov
mov
into
inc
xor
or
repnz
jmp
jnp
xor
jg
push
sub
outsl
and
xchg
jnp
icebp
fnstsw
call
cld
lret
dec
aaa
dec
rcll
pop
sahf
mov
mov
imul
dec
sub
hlt
test
repz
cmovg
popf
and
dec
lods
sbb
or
or
stos
or
mov
loop
sub
out
je
imul
loope
xchg
adc
xchg
or
sbb
aaa
jne
je
pop
fs
mov
mov
or
jb
loop
jl
sub
daa
xchg
movsb
into
jg
leave
in
jnp
scas
sbb
popf
add
rcrb
jp
mov
lods
fsubl
and
xor
movsb
ret
or
scas
pop
pop
test
jmp
pop
insl
stos
filds
das
sahf
xor
rcr
xchg
enter
aad
jo
int3
pushf
arpl
testb
jmp
movsl
mov
dec
loope
dec
mov
pop
mov
jp
mov
lods
subl
dec
mov
xlat
dec
add
push
dec
or
mov
or
mov
cmpsl
add
ret
enter
repz
lcall
sub
cmpsl
jmp
dec
subb
jecxz
int3
sbb
mov
sti
fwait
sub
adc
pop
loopne
add
sub
loopne
push
fcmovne
adc
in
test
cli
cltd
or
jg
cmp
and
mov
es
sti
push
in
xchg
clc
fistpll
bound
cltd
pop
jne
pusha
add
data16
cmp
pop
xchg
xor
xchg
mov
dec
rorl
jge
lcall
aam
push
iret
repnz
mov
pusha
sbb
out
sbb
push
pop
xchg
into
aaa
cli
jb
xchg
push
dec
xor
jp
rcl
cs
or
sarl
pop
push
outsl
inc
clc
ret
sub
mov
xlat
mov
xchg
in
mov
lret
mov
mov
xchg
dec
or
jge
cmp
dec
ret
int3
push
shlb
icebp
jno
mov
and
out
in
mov
xor
or
cli
mov
mov
adcb
popa
adc
clc
jle
jl
scas
out
fnstcw
js
mov
jb
mov
data16
mov
sbb
fildl
imul
out
cmpsl
psubsb
psrld
in
or
xor
cmpsb
pop
test
addb
sti
add
lret
clc
dec
lds
pop
ss
lcall
mov
pop
jnp
mov
clc
jae
or
data16
hlt
nop
mov
repz
sysenter
cltd
mov
shll
xchg
cmpsl
pushf
add
and
mov
mov
push
hlt
idivl
push
roll
add
stos
mov
sub
cmp
and
cld
inc
ror
push
daa
sub
lock
call
lcall
nop
lcall
cwtl
cmp
adc
stos
mov
jl
jbe
mov
inc
mov
mov
dec
dec
nop
rcrl
cli
inc
and
movsb
filds
loopne
add
call
jmp
add
push
dec
testb
jg
les
lods
orb
mov
xor
mov
outsb
mov
aaa
adc
mov
shl
push
jb
jmp
xor
or
mov
faddl
mov
sub
js
add
imul
adc
popa
push
test
aaa
xchg
jnp
xor
xor
ret
inc
dec
in
imul
int
sbb
push
or
stc
push
jbe
cmp
pushw
mov
movsb
cmp
mov
add
ret
push
test
or
push
into
or
arpl
insb
jg
push
push
jne
xchg
loope
in
xchg
test
cs
pop
jmp
mov
and
jl
ss
pop
hlt
lahf
xchg
mov
les
jecxz
inc
jns
clc
out
xchg
jecxz
lods
cld
xchg
mov
push
lods
cmp
xchg
push
mov
push
jo
fildll
fs
mov
inc
loopne
sbb
lret
loope
lock
lret
stos
pushf
xchg
adc
test
mov
fwait
jo
fwait
rol
mov
xchg
lods
cld
and
cmp
sahf
mov
pop
fwait
popa
negl
mov
sar
cmp
in
pop
stc
pop
dec
sub
mov
rcr
cld
mov
ds
jmp
dec
pop
push
mov
movsl
and
or
stc
add
push
or
fimull
mov
mov
aaa
push
into
fiadds
xchg
cld
rol
jo
scas
or
cvttps2pi
insb
loope
mov
sub
mov
xchg
lret
inc
cld
ret
int3
clc
add
jo
adc
jae
or
in
inc
fidivs
aam
movsl
mov
mov
mov
aaa
lock
fwait
sti
push
fisubl
jnp
jnp
mov
rcrl
mov
iret
mov
mov
lret
notl
popf
mov
enter
ret
and
repz
push
xchg
les
push
pop
test
or
mov
shlb
mov
push
js
cli
dec
loop
ds
lods
or
inc
fsubrs
inc
cmp
add
lods
imul
sbb
les
or
fcmovnb
sbb
fcmovnbe
hlt
movsl
aas
pop
jb
mov
insb
mov
or
aam
mov
push
insb
inc
insb
test
mov
outsl
dec
mov
lret
dec
out
mov
dec
xchg
xlat
jp
icebp
sbb
xrelease
mov
xor
pop
pop
or
stos
sti
inc
mov
dec
or
jg
fsubrl
mov
dec
pop
rolb
icebp
call
push
insb
js
arpl
pop
adc
xor
adc
call
sbbl
and
mov
addr16
add
add
xchg
lret
jmp
mov
adc
mov
fldt
das
shr
mov
add
pop
scas
cwtl
ja
xor
loop
jl
cli
or
sub
xchg
jmp
das
add
enter
xor
or
xchg
push
mov
cmpsl
mov
jp
ffree
mulb
ret
mov
jecxz
cmpsl
jnp
cmpb
ss
push
jmp
and
jb
and
mov
movsl
adc
jne
popf
pop
xor
je
push
cltd
xchg
std
pusha
mov
add
scas
push
push
std
sbb
test
pop
sub
or
adc
es
les
cmp
mov
lret
cmp
and
xchg
out
inc
mov
into
shrl
mov
or
nop
xchg
xor
push
push
ja
fdivr
popa
hlt
lret
arpl
jno
jge
pop
mov
icebp
iret
xchg
and
lret
ds
dec
mov
loopne
pop
inc
xchg
lea
ds
repz
pop
pushf
stos
sti
aad
out
ss
cmp
andb
pop
xlat
mov
mov
lret
mov
pop
push
stc
xor
or
push
pop
aad
in
cwtl
mov
in
insl
daa
dec
cmp
mov
and
out
aas
adc
sbb
mov
cmovne
stc
dec
out
popa
dec
mov
ror
cmpsl
mov
jle
pop
fwait
add
sub
sbb
inc
pop
mov
ss
fwait
dec
ss
stos
xor
inc
mov
dec
cmpsl
out
pop
fiaddl
sti
repnz
pop
cmp
sub
pop
and
pop
rcll
in
or
shlb
out
and
xor
mov
mov
jl
cmp
fsubr
popa
mov
loopne
je
std
cld
push
pop
fwait
jo
ds
sbb
push
les
mov
test
movsb
out
mov
add
pop
aam
cli
or
call
add
push
add
jns
out
rcrl
test
lahf
sbb
cmp
les
cwtl
shll
add
mov
das
cmp
inc
jmp
and
out
xchg
idivl
stos
jmp
and
test
int3
inc
insl
inc
pop
dec
sub
jnp
mov
push
js
loopne
jnp
inc
push
cltd
sti
push
mov
jl
xchg
rcrl
stos
lods
xlat
dec
xlat
test
sbb
out
fs
das
aad
call
adc
inc
popf
lret
out
sbb
dec
adc
ret
stos
push
sub
in
jne
push
xchg
cltd
mov
inc
clc
rorl
dec
add
push
jl,pt
hlt
fildl
out
and
push
xor
push
or
movsl
cli
and
std
gs
cli
mov
or
cmpsb
jl
scas
add
pop
push
sarl
jns
jnp
mov
out
stc
js
insb
int
pop
jbe
adc
and
mov
mov
push
outsl
sub
lock
sbb
popa
and
mov
out
lret
in
mov
test
jno
sbb
mov
fiadds
jne
ret
adc
sti
stos
or
std
mov
sti
cld
out
sub
jne
sarl
push
sbb
xor
jle
or
scas
dec
sub
pop
sahf
and
rorb
xchg
fildll
xchg
and
sarl
dec
sarl
sbb
out
mov
scas
mov
jns
lods
mov
dec
sub
jg
scas
ror
shrl
lock
adc
test
scas
jnp
loop
lock
clc
jmp
dec
or
scas
jg
inc
inc
cmp
movsb
leave
repz
mov
jbe
jp
xchg
mov
mov
push
sti
pop
adc
xchg
ja
jl
adc
ss
outsl
mov
dec
jb
inc
out
sti
andl
or
shrb
ja
jnp
jp
lods
lret
mov
movsl
stc
inc
or
shrb
lcall
or
mov
or
out
orb
inc
iret
out
jnp
mov
mov
mov
ss
jmp
sgdtl
cmovge
fcoms
and
test
jbe
pop
cmpsb
jle
aas
stos
daa
ds
and
fisttpl
cmp
dec
enter
and
ss
dec
jbe
jg
xchg
and
mov
fs
jne
xchg
or
or
add
inc
dec
cld
sbb
mov
mov
movsl
dec
aad
popf
into
in
iret
ret
jo
push
mov
movsb
sub
jo
cmpsb
inc
movsb
in
dec
cmpsl
mov
cmp
stos
idiv
jo
or
lret
push
sub
imul
lea
xor
add
push
dec
popa
mov
outsl
lahf
insl
fldcw
cmp
sbb
mov
xchg
xchg
sub
ret
fwait
add
push
push
sbb
loopne
xor
or
arpl
int3
enter
jns
ja
dec
push
sub
je
add
cmp
or
push
inc
pop
outsl
cwtl
outsb
add
aaa
repnz
int3
orb
shll
loope
add
stos
jmp
push
inc
mov
or
lret
icebp
pop
mov
notb
sti
cs
sub
lock
hlt
mov
fninit
dec
fs
inc
repz
cmp
xchg
lock
sub
js
xor
les
iret
lods
jle
icebp
inc
ja
stc
rcll
mov
iret
mov
dec
inc
sbb
xor
inc
aad
mov
mov
xor
rorl
or
jle
and
loope
push
test
cmpsl
mov
into
imul
iret
mov
add
addr16
adc
pop
pop
push
test
scas
pusha
into
pop
test
faddl
or
scas
push
icebp
cld
into
stc
sbb
shl
mov
dec
scas
idiv
cmp
movsb
mov
jb
dec
in
lods
jl
out
test
mov
or
insl
movb
push
ret
aaa
mov
push
jnp
push
mov
adc
mov
cmc
mov
lods
ret
testl
aam
ret
xlat
or
incl
sbb
jp
cmpsl
xor
xor
adc
ljmp
sbbb
or
lcallw
cli
dec
icebp
test
xchg
mov
dec
ss
les
cwtl
mov
add
enter
sbb
adc
sbb
stos
xor
xchg
xchg
fmul
mov
or
push
mov
fdivp
mov
add
out
push
cltd
xchg
push
jge
roll
xchg
cmp
jmp
mov
jmp
aaa
or
xchg
add
lods
insl
xchg
dec
xor
xchg
sbb
fisubrl
pop
data16
ficoml
dec
je
out
addr16
dec
pop
xchg
ret
and
lea
mov
shrl
mov
mov
ljmp
jnp
ja
decl
add
ss
mov
xor
popa
push
jge
in
dec
add
mov
int3
or
mov
or
sti
xchg
out
adc
pop
sub
adc
ljmp
es
mov
push
lcall
jmp
cmp
mov
cmp
scas
stos
popf
or
and
push
adc
imul
inc
jae
or
in
cmp
xchg
clc
inc
rcrb
jnp
or
xchg
sub
mov
fnstsw
xchg
pop
fsubl
and
pop
in
mov
aaa
call
shll
pop
inc
stos
xor
psraw
and
sbb
cmp
mov
jb
clc
cmp
inc
mov
inc
imul
pop
inc
lds
sbb
shlb
vphaddubq
mov
push
xor
xor
dec
dec
cmpsb
fcomp
jle
negb
xlat
push
mov
in
dec
mov
leave
stos
icebp
fildll
ret
dec
dec
dec
fcomp
add
movsl
hlt
into
test
add
sub
mov
aad
and
cmp
imulb
jl
mov
js
add
inc
popa
or
push
test
aaa
mov
aad
out
in
fnsave
scas
fldenv
mov
mov
cli
addr16
add
xor
hlt
or
jmp
xchg
inc
movsl
xchg
cmp
xchg
add
cmc
fcomps
xchg
pop
aam
shll
cli
or
fcoml
fwait
or
test
iret
ljmp
pop
jmp
punpckldq
scas
repnz
cs
mov
stos
dec
fisubrl
xchg
dec
push
addr16
out
dec
dec
push
jo
and
jge
fldl
cmp
adc
fnstenv
pop
jbe
fdivrl
push
jmp
inc
mov
jmp
nop
test
jmp
rolb
daa
dec
lds
jle
sbb
scas
add
popf
push
in
outsl
inc
push
push
pop
xchg
adc
mov
pop
inc
adc
jne
xchg
mov
ds
mov
movsb
rclb
andb
mov
leave
jmp
or
cld
ja
test
xor
repnz
repz
popa
sti
ret
cmp
sbb
cld
dec
cli
aad
ficomps
adc
inc
divl
mov
jp
sbb
aad
mov
fmulp
dec
adc
data16
inc
cmp
les
push
into
stc
jmp
fwait
iret
dec
push
test
or
add
movl
adc
inc
ja
loopne
hlt
test
cmp
mov
ret
cmpsb
imul
aam
mov
pop
dec
mov
testl
stos
pop
ret
js
sub
scas
scas
inc
popa
in
xor
outsl
movsl
or
cmp
inc
xchg
jp
push
jnp
outsl
fcoml
xchg
scas
addr16
push
adc
xchg
fdivrp
mov
add
in
lcall
shlb
cmpsl
inc
inc
sub
out
mov
fnstsw
xchg
adc
sbb
cwtl
and
js,pt
faddl
jne
stos
enter
jne
hlt
fisubl
in
jp
add
rcrl
sub
rclb
test
test
in
jae
or
or
sub
cltd
outsb
push
sti
pop
dec
outsb
movb
sbb
dec
ljmp
rcll
dec
jle
hlt
sub
sub
sti
sub
push
dec
ds
lods
in
or
sbb
adc
and
out
cmp
mov
pslld
pop
aas
sub
and
dec
iret
movl
ds
mov
sahf
loope
jmp
jbe
scas
sub
daa
dec
pop
sbb
inc
mov
jns
pushf
lahf
inc
imul
test
push
sub
or
xor
nop
arpl
fcmovbe
add
inc
sub
inc
scas
mov
in
pop
fsubrl
mov
jmp
rcrb
in
pop
es
mov
fidivs
hlt
inc
ret
and
iret
testl
or
cld
or
mov
js
jp
mov
mov
sub
ja
mov
push
xorb
add
xchg
xchg
sbb
adc
jns
jne
shrl
add
dec
enter
test
pop
pop
xorl
mov
ret
fistps
jmp
jl
dec
mov
mov
mov
lock
mov
mov
add
push
scas
test
dec
adc
add
or
push
ret
add
cmp
xchg
clc
inc
js
dec
cmpsb
addb
mov
mov
mov
movsl
addr16
lcall
add
xchg
mov
test
and
mov
dec
pop
and
push
xor
loope
push
push
sub
cmp
push
leave
jmp
lock
push
mov
ljmp
aam
faddp
shll
sahf
sbb
scas
leave
xor
call
clc
dec
icebp
loope
pop
aam
ret
inc
test
int3
add
cmp
fwait
adc
add
sbb
lret
or
jne
addr16
loope
mov
fisubs
cmpsb
pop
xchg
insb
push
js
test
mov
or
fstps
nop
aam
mov
addr16
jae
hlt
lds
sar
mov
daa
or
ret
push
mov
out
out
mov
jmp
adc
movsb
mov
xchg
repz
or
decl
push
mov
fstpt
leave
shll
and
dec
clc
jl
sub
or
jnp
pushf
sarb
lret
ljmp
sti
imul
cld
loope
or
jbe
push
pop
add
stos
insb
or
repz
insb
cs
push
jl
aam
fisubrs
out
lea
cmp
cmp
leave
stos
inc
add
mov
adc
add
or
fisttps
movsl
inc
or
insl
in
mov
xor
lahf
sub
imul
jne
pusha
xor
jnp
adc
adc
add
add
lcall
add
and
pop
fiaddl
sahf
mov
mov
cmp
pop
lds
push
adc
sub
mov
jmp
mov
pop
pop
data16
scas
movl
stos
sbb
jne
jmp
test
mov
into
mov
addl
push
repnz
movsl
jle
repnz
stc
out
in
ret
dec
pop
lea
push
sbb
xchg
lea
sub
popa
pop
enter
lock
shlb
add
push
ja
cmc
aam
mov
and
inc
jbe
inc
sahf
jo
ja
jbe
mov
dec
stos
dec
sub
xor
lods
or
cmp
add
xor
jg
sbb
aam
mov
les
mov
pop
cltd
cmp
in
fildl
mov
or
aam
sbb
or
enter
fildl
mov
pop
push
push
in
cmpb
into
jmp
jl
mov
jge
push
pop
rorl
iret
leave
outsl
cmpsl
addr16
push
sub
sub
mov
or
stos
dec
std
sbb
push
sub
rcrl
fiaddl
test
adc
sub
pop
jp
mov
rcll
roll
xchg
xchg
jnp
test
mov
and
fucomp
jns
jbe
test
mov
icebp
or
cmc
or
in
sbb
test
lahf
les
pop
cmpsb
ret
jmp
cmp
shl
cmp
dec
push
mov
lret
adc
mov
push
lret
lret
cmp
mov
sti
cmc
es
jo
xchg
push
stc
mov
mov
orl
test
jmp
cmp
inc
push
ljmp
push
rcll
sub
or
cmp
stos
push
inc
outsl
and
push
pop
repnz
incl
les
leave
shll
cld
je
lods
iret
lret
cs
dec
stos
pop
nop
jns
cmp
dec
subb
mov
ret
pop
pop
cld
lcall
xor
dec
adc
cwtl
aad
add
jg
stos
sub
and
inc
xchg
stos
clc
cmp
repz
adc
rorb
enter
dec
adc
push
add
add
aam
outsb
xchg
js
push
dec
ss
pop
insb
push
lock
scas
lret
rcr
sub
mov
roll
pop
xchg
dec
stos
inc
pop
mov
xor
mov
outsl
cltd
in
mov
add
push
lcall
test
rclb
call
shl
jbe
dec
xchg
xor
adc
xchg
jmp
add
or
cmp
pushf
jl
adc
nop
mov
cmp
mov
aaa
or
dec
add
sub
mov
xchg
jne
mov
scas
aas
push
in
add
andb
or
into
adc
shrb
lret
sbb
ret
out
or
jb
pop
stc
pop
sarb
gs
pop
fsubrp
daa
stos
scas
jp
push
add
add
pop
test
push
addr16
fildll
fidivl
sti
in
mov
shll
cld
pop
cmp
inc
pop
pushf
sbb
cmp
or
inc
mov
or
sarb
hlt
inc
adc
das
fcompl
rorl
xchg
xchg
cld
push
mov
cmp
scas
dec
outsl
sub
cmp
movb
lods
imul
jmp
adc
mov
ds
xchg
adc
repz
mov
movsb
or
add
aas
stc
pop
test
movsb
or
ljmp
jl
pop
cld
cs
test
sbb
pop
sti
in
jnp
negb
rol
movsb
pop
mov
or
stos
or
cld
fnsave
dec
xchg
fdivrs
mov
in
mov
pop
std
or
iret
add
stos
scas
js
push
cs
cld
jns
loop
stos
xor
adc
xchg
xorb
jecxz
arpl
dec
cwtl
enter
mov
jbe
mov
fs
shlb
sub
jg
repz
xchg
aas
xor
sahf
cmp
xchg
mulb
or
dec
inc
ss
adc
out
std
cmp
je
out
xchg
sar
ljmp
xchg
push
js
adc
in
js
movsb
sbb
fdivrl
xor
movsl
stc
and
sbb
mov
scas
push
and
inc
add
mov
pop
push
enter
aaa
push
lods
push
in
xor
dec
adc
mov
inc
js
cmp
pop
shl
push
mov
mov
mov
popa
sbb
mov
xchg
inc
js
icebp
jp
mov
lods
ja
fsubl
jl
or
adc
pop
mov
or
ret
lock
das
jbe
dec
inc
cld
lcall
divb
bound
flds
arpl
fsubs
ret
cmp
iret
xchg
in
in
pop
dec
test
fcompl
add
in
inc
out
aaa
iret
stc
or
sbb
sahf
loopne
jne
loop
stc
or
imul
cltd
shrb
or
cmp
adc
dec
pop
roll
push
mov
xchg
roll
test
or
dec
repnz
sub
jns
sbb
addr16
test
or
or
jnp
sti
stos
xlat
lret
cmpl
loopne
push
mov
jns
jb
in
push
movsl
push
sbb
inc
lea
lret
imul
xchg
mov
inc
pop
jae
push
idivb
lret
fisttpll
aam
insl
cs
outsl
icebp
test
and
addr16
cli
fbld
test
jne
sub
out
scas
sub
mov
hlt
and
bound
repnz
mov
mov
pusha
or
hlt
imul
sub
xchg
inc
out
jbe
add
inc
inc
jne
ret
enter
fimull
mov
push
cmp
jmp
shlb
mov
fmull
pop
les
roll
or
mov
or
xchg
test
leave
dec
insb
lret
pusha
sar
or
subl
stc
icebp
cmpb
in
or
inc
testb
out
std
lret
mov
push
rcr
push
iret
pop
std
cs
arpl
pop
scas
inc
sti
xchg
add
popa
vpsrlw
ljmp
dec
adc
bnd
sbb
test
push
call
idivb
scas
sbb
mov
add
cmp
stos
mov
or
cmpl
fs
pop
or
adc
push
sub
mov
adc
push
add
je
inc
pusha
xchg
jb
xchg
call
lahf
mov
push
lret
xchg
adc
cmp
mov
pop
inc
call
insb
bnd
cs
mov
sub
lock
imul
cli
imul
jo
ja
outsl
cwtl
test
scas
mov
aas
jge
fwait
push
iret
sub
les
ds
scas
mov
scas
outsb
icebp
add
enter
push
fsubr
pop
movb
adc
add
xchg
or
enter
in
adc
fwait
nop
in
sub
stc
or
mov
cs
xchg
xchg
int
cmp
and
cmp
stc
dec
stos
jne
out
xorb
outsb
inc
xor
push
ljmp
rcrl
add
out
mov
int
stos
xor
xrelease
roll
rorl
inc
fs
stc
xabort
cwtl
sub
mov
pushf
leave
fs
inc
pusha
test
negl
shl
or
or
outsb
cmp
mov
clc
rcrl
xchg
lret
adc
sbb
cmpsb
pop
pop
push
dec
inc
ss
jecxz
adc
das
pushf
adc
sti
sbb
es
cmp
ljmp
and
cltd
scas
dec
push
test
pop
sub
lock
mov
stos
dec
pop
adc
jecxz
dec
xor
stos
dec
stos
sbb
sbb
lahf
fisttps
call
aad
mov
pop
stc
push
test
sub
rorl
dec
jno
push
ja
inc
mov
mov
or
das
lea
mov
push
test
repnz
inc
and
dec
or
pusha
test
iret
add
mov
pop
in
in
test
aaa
ret
ja
mov
scas
cli
xchg
scas
fcmove
out
dec
into
lock
mov
mov
cmp
add
or
out
hlt
or
mov
add
leave
add
mov
lods
stc
movb
add
insl
mov
cmp
push
jne
cmp
stos
cld
outsl
test
icebp
or
pop
mov
dec
jno
out
lods
inc
sub
push
xchg
and
scas
iret
mov
roll
push
add
aad
push
lret
mov
stos
sbb
cmp
sbb
and
aam
arpl
lods
or
lock
roll
pop
aad
orl
in
add
mov
aam
pop
add
sub
xor
adcl
cltd
popa
mov
jecxz
fstpt
xor
mov
lds
pop
outsl
adc
inc
xor
push
and
daa
into
stc
jae
mov
ljmp
jge
push
add
loop
sbb
push
push
jmp
dec
xlat
mov
cmpsb
xor
mov
inc
add
pop
pop
fpatan
add
call
cmpsl
cmp
xacquire
mov
in
xchg
push
arpl
js
inc
imul
rcl
aaa
fbld
movsb
cwtl
lods
test
inc
outsl
rcrl
push
orb
ljmp
es
xor
imull
cmp
pop
inc
rol
xlat
cld
cld
in
je
enter
push
shr
push
add
push
aas
outsl
std
aaa
push
jne
xlat
sbb
daa
insl
rclb
nop
dec
mov
sub
lret
add
jmp
ffreep
adc
mov
loope
mov
rcrl
jp
test
adc
lret
iret
idivl
or
xor
cmpsl
out
add
lea
jecxz
or
xchg
pop
stc
iret
loop
mov
ds
cmpsl
ret
int3
dec
push
call
rcll
sub
add
rcl
leave
lock
arpl
ja
jp
lret
mov
inc
or
hlt
mov
scas
roll
push
push
stos
mov
lods
aas
dec
loope
rclb
pop
sti
pusha
sub
cmp
xchg
xlat
sbb
sbb
sub
lea
push
into
or
pushf
out
cld
frstor
mov
or
in
fisttpl
ret
repz
push
popf
xchg
pusha
int3
mov
aaa
mov
leave
mov
inc
mov
leave
mov
les
icebp
inc
mov
xchg
adc
pusha
stc
pop
add
ss
fbld
daa
stos
gs
into
rcrl
fldt
adc
inc
sub
test
out
out
insb
leave
mov
mov
dec
icebp
popa
fdivl
xlat
mov
dec
adc
scas
ja
mov
jmp
inc
adc
push
test
ja
dec
sti
jle
lret
in
cmp
or
and
jno
test
mov
add
addb
mov
pop
mov
xorb
scas
mov
xchg
fdivr
cmp
iret
jb
push
and
xlat
mov
lock
and
jae
xor
or
add
mov
stos
add
ds
lods
mov
leave
or
out
shl
mov
add
add
in
mov
scas
mov
mov
sbb
jmp
jl
inc
fsubr
int3
int3
inc
jl
dec
ffree
adc
or
repnz
jbe
pusha
in
in
inc
enter
fwait
inc
js
sbb
pop
pop
add
je
add
or
jmp
fmul
lock
in
xlat
in
pop
lods
daa
lret
int3
int3
dec
mov
mov
call
fsubrp
dec
pop
rolb
adc
xchg
mov
push
enter
adc
pop
pop
movl
jb
movsl
cwtl
xchg
fsubp
cmp
or
adc
stos
in
movsb
push
push
jp
les
inc
std
dec
adc
xor
test
js
test
adc
cmp
mov
xchg
mov
pop
inc
xor
dec
mov
inc
insl
rcrb
xor
or
out
mov
mov
lcall
add
lds
mov
sbb
je
icebp
cmc
sbb
and
mov
dec
sbb
inc
jl,pt
aas
out
lret
mov
cmpb
pop
add
mov
enter
jmp
mov
push
or
xchg
push
sub
pusha
ljmp
mov
xchg
ja
xchg
int3
xor
mov
sahf
repnz
jecxz
iret
mov
shlb
cltd
int
xchg
or
int3
dec
scas
divb
mov
imul
mov
mov
inc
xchg
scas
inc
in
or
lcall
jno
arpl
insl
ret
mov
mov
aaa
push
clc
push
scas
mov
inc
mov
xchg
xchg
stos
xor
cmp
mov
es
sub
fsubp
pop
jo
xchg
lods
aaa
cld
xor
lods
test
push
fcoms
dec
hlt
icebp
push
stos
push
xor
dec
or
mov
cld
rolb
mov
std
aam
in
nop
inc
and
add
sti
pop
cltd
add
scas
inc
add
push
jmp
or
adcl
iret
test
pop
imul
lea
rol
stc
scas
dec
pop
jo
xchg
xor
or
jno
xchg
jb
xchg
inc
int3
or
or
js
mov
cmpsl
fsubrs
lds
inc
sub
rolb
lods
or
mov
push
sahf
and
les
sar
add
add
addb
cmp
sub
mov
mov
xor
or
jb
stc
mov
cmc
mov
imul
push
into
jno
fs
loope
iret
push
push
add
roll
and
push
dec
sbb
ret
jb
outsl
int3
js
out
jmp
jp
or
ret
cmp
jne
add
jnp
or
repz
outsl
jmp
cmp
movsb
cmp
adc
push
shll
adc
dec
lret
lock
pusha
add
jbe
jbe
lret
lock
fildll
dec
or
sub
push
jne
sbb
mov
in
rorl
and
dec
mov
rorb
pushf
mov
lock
cmpl
jmp
xchg
aad
adc
add
cmp
add
cwtl
push
pop
inc
cmp
int3
inc
adc
inc
in
pop
push
fwait
sarl
std
lahf
or
push
push
add
pop
inc
mov
lods
jne
out
arpl
in
sub
out
sub
loopne
mov
in
in
mov
arpl
inc
cmp
jbe
and
jnp
fidivrl
mov
les
push
xlat
ret
movsb
or
cmpsl
sbb
and
in
into
jmp
or
add
or
pushl
jl
neg
mov
loopne
icebp
mov
std
or
jmp
mov
lret
out
les
pusha
mov
or
jno
adc
in
cmp
or
mov
pop
jno
ficomps
cs
mov
sbb
mov
mov
pop
rolb
idivl
xor
outsl
leave
jo
mov
adcl
pop
cs
lock
add
lret
and
jg
pop
jecxz
pop
adc
addr16
xor
lcall
jae
or
icebp
movsl
dec
popl
js
js
enter
lea
pop
loop
in
scas
sahf
popf
xor
loope
movsl
testb
xchg
gs
adc
adc
pop
lds
mov
loop
jp
pop
gs
nop
xor
test
testl
int3
dec
jmp
jbe
inc
xlat
out
aad
jl
add
pop
sub
stos
test
in
scas
push
and
arpl
test
nop
mov
mov
cltd
inc
inc
call
cmp
jmp
add
or
sbb
movsl
dec
rcl
out
out
add
testl
fistl
add
mov
xchg
jp,pn
aad
lcall
mov
sarb
add
cmpsl
mov
dec
cmc
sbb
fdivrl
sub
clc
movsb
mov
mov
nop
jae
in
sbb
rcll
lcall
jl
aaa
jns
enter
xchg
test
xlat
jl
and
shl
pop
bound
mov
outsl
in
mov
xchg
pop
shl
int3
and
and
adc
pop
lock
sti
and
fwait
rorl
les
or
arpl
add
orb
shl
mov
fucom
test
xchg
in
jg
shlb
sahf
cli
or
dec
movsb
stc
hlt
pop
and
sub
repz
push
flds
dec
arpl
xchg
fisttpll
cs
sub
push
dec
jb
rorb
shrl
scas
enter
jb
scas
mov
cmc
lret
repz
scas
roll
dec
mov
jae
jle
ret
ljmp
push
and
mov
mov
pusha
shr
shlb
addr16
lret
jae
jne
mull
or
pop
sar
xor
mov
sub
dec
ret
hlt
push
vmwrite
sbb
popl
cmpsb
in
dec
ds
out
jbe
mov
sbb
dec
push
mov
ljmp
gs
movb
adc
mov
lock
stos
dec
sbb
insl
xchg
push
and
xor
cmp
push
arpl
pop
xchg
or
cmp
arpl
dec
aas
cld
std
and
hlt
dec
or
stos
rcll
jns
dec
and
or
insl
mov
push
mov
ret
pop
or
mov
sbb
jp
jne
pusha
mov
xchg
lcall
popf
lock
jbe
xchg
les
and
inc
xchg
sbb
or
ljmp
or
jecxz
mov
loope
test
cmp
and
mov
hlt
xor
test
sbb
lret
cld
sub
push
sti
call
repz
pop
rcrl
dec
sub
sub
in
xchg
mov
dec
mov
push
sub
inc
cmp
loopne
jo
rolb
dec
fildll
mov
xchg
dec
mov
xor
pop
adc
pop
aad
lds
cli
add
cltd
and
push
pop
mov
fcoms
hlt
xor
fldt
fcmovnu
shr
in
jecxz
or
aaa
xor
mov
mov
das
enter
rolb
cmp
jl
adc
enter
iret
xchg
xchg
nop
clc
in
cmp
cs
mov
cmc
bound
sub
out
mul
movsl
fmull
out
mov
xchg
stc
add
das
out
mov
pop
js
jmp
dec
mov
repz
sub
or
xor
jne
mov
or
sbb
lret
or
sub
sti
or
loope
push
out
sub
fists
imul
or
stos
or
call
fistps
sti
xlat
movsb
sub
xchg
rcrb
data16
or
lret
jo
mov
cmp
inc
mov
mov
cwtl
loop
stc
dec
in
xor
pop
in
adc
inc
arpl
rol
enter
aaa
into
imul
test
xor
daa
xchg
add
jecxz
dec
or
stc
loopne
lcall
lret
lock
pop
imul
movsl
xor
push
addr16
mov
das
push
iret
jo
stc
xor
shll
js
or
shl
xor
test
inc
fcoml
or
das
jmp
mov
jnp
add
mov
repz
mov
fmull
popf
push
lcall
jg
jbe
mov
dec
and
popa
cmpsb
push
mov
rcrb
repz
in
or
mov
js
dec
adc
loopne
mov
int3
mov
cmp
pop
push
and
pop
sti
leave
fildll
int3
mov
mov
mov
lret
dec
sub
roll
ret
in
rorb
add
sbb
add
imul
inc
mov
call
repz
scas
push
fld
ljmp
mov
add
add
jns
fimuls
dec
inc
xorl
fninit
shrb
addb
push
mov
jae,pt
jmp
jae
mov
jo
in
dec
jp
cmpsl
and
pop
sbb
imul
idivl
add
cmpb
out
testb
ret
sub
mov
pop
aaa
dec
fstl
xchg
sarb
imul
das
mov
dec
test
leave
aas
cmpsl
ljmp
or
dec
data16
fcmove
add
mov
ret
dec
dec
mov
add
jns
shlb
lret
mov
movsl
mov
pusha
fistpl
sbb
clc
loope
aad
lret
scas
adc
mov
movsl
aaa
out
negb
cld
mov
or
sti
dec
sbb
arpl
test
pop
lret
repz
xchg
push
shlb
hlt
dec
sarl
mov
jle
js
stos
enter
xor
pop
out
xchg
jp
cmp
pop
xchg
std
je
hlt
mov
inc
repnz
mov
je
rcrl
jmp
in
mov
mov
pop
mov
push
ljmp
test
aaa
mov
movsl
aaa
cmp
ret
sub
mov
loopne
mov
add
add
push
stc
dec
xchg
fisubrl
add
shrl
or
mov
sti
adc
ljmp
out
pop
mov
mov
test
test
and
std
inc
idiv
mov
fs
test
mov
ja
mov
mov
pop
jnp
push
cmp
fdivrl
cmp
jl
xchg
cld
sti
out
mov
pop
lret
jecxz
or
es
insb
cmp
lcall
sub
ret
xchg
xor
cmp
test
push
cltd
jp
adc
inc
cmp
fldenv
jae
inc
sarl
xchg
or
or
test
xchg
inc
inc
test
les
cmc
mov
xchg
test
test
in
jmp
jmp
add
out
mov
jl
mov
adc
sbb
clc
fnstsw
stos
imul
mov
pop
cmpsb
ja
sbb
jmp
xor
mov
inc
sti
mov
cli
daa
loope
fldt
in
inc
stos
pusha
mov
data16
mov
pushf
lret
stc
icebp
mov
xchg
mov
or
mov
repz
andb
loopne
or
scas
clc
ficoml
ss
je
xchg
jae
loop
jno
pop
dec
into
or
jle
inc
sarb
push
jmp
mov
jl
enter
jge
fcom
inc
sarl
lret
movsl
inc
jl
mov
inc
in
xchg
and
jo
pop
xchg
jae
roll
jl
sti
out
or
cmp
std
cld
out
std
mov
lret
dec
add
mov
lret
mov
test
cmp
or
ret
rcr
call
and
cmp
add
and
jno
pop
loopne
mov
std
cmp
jns
leave
roll
sub
mov
daa
mov
jmp
pop
pop
mov
out
in
loopne
xchg
or
rorl
fnstsw
repnz
xor
dec
jp
inc
or
jl
jo
addr16
mov
mov
rep
mulb
cmp
or
scas
stos
in
pop
or
sub
adc
jo
xor
aad
sub
mov
or
cmp
hlt
inc
imul
popa
les
mov
rol
mov
sbb
clc
pop
dec
sbb
push
test
inc
add
pushl
push
les
addl
inc
mov
aam
mov
das
jge
jo
and
cld
and
and
in
jns
scas
pop
ret
jae
lds
inc
jge
xor
in
sub
add
dec
or
hlt
and
pop
xorl
xor
int3
stos
cmp
jno
mov
mov
mov
cmpsb
out
mov
pusha
add
outsl
mov
add
inc
cld
mov
jl
add
mov
call
addb
pop
pusha
jle
repnz
jp
lret
inc
cmp
or
jo
cmpsl
arpl
xchg
inc
add
clc
jo
sbb
int3
in
or
sub
faddl
fsubrl
sbb
jp
pusha
das
stos
fbstp
sti
add
out
mov
cmp
pop
iret
jbe
mov
cmp
pop
aaa
xor
mov
icebp
add
mov
rclb
push
rol
aad
jle
cmp
ret
scas
jb
aaa
pop
sahf
cmp
jp
subl
jmp
cld
add
pop
in
repz
push
adc
lahf
lea
jp
xchg
inc
mov
cmp
jl
loop
stos
in
test
xchg
inc
sarl
int
mov
xlat
cmp
repnz
leave
imul
mov
hlt
ds
jmp
xor
jge
cmp
stos
cld
addl
xchg
ss
sar
shlb
aaa
mov
add
or
mov
xor
enter
pop
pop
int3
sarl
popa
inc
call
loope
sbb
lods
mov
addr16
outsb
mov
or
cmpl
xor
fistpl
push
jae
or
shl
sbb
pop
mov
insb
mov
aaa
xchg
cltd
cmp
or
jne
je
xchg
aaa
hlt
inc
xor
lahf
pop
shll
pop
ljmp
aaa
aad
mov
pop
inc
push
adc
mov
ja
cmp
inc
jns
adc
or
lock
push
or
outsl
std
sub
nop
movsb
andb
ljmp
mov
lret
jmp
in
inc
or
add
jmp
or
mov
pop
out
jae
scas
clc
lret
fstp
xchg
add
pop
lods
out
and
add
sbb
mov
mov
inc
or
fldenv
movb
lret
sub
pop
iret
xor
jl
or
das
std
mov
iret
mov
movsb
leave
fnstenv
xor
pop
stc
pop
into
sub
imul
xchg
mulb
sbb
pop
sub
mov
jae
cld
addr16
aam
out
in
add
xchg
fs
popl
aaa
jno
popf
push
test
inc
daa
push
lock
lret
ja
cs
cmpsl
mov
adc
jmp
into
mov
jno
loopne
fsubrp
mov
mov
cli
cs
jl
inc
test
sahf
xchg
fucomi
jl
scas
inc
mov
cmp
xlat
mov
in
pop
cmp
sub
dec
or
or
xchg
mov
adc
cmp
out
lods
faddl
or
adc
mov
iret
push
sbb
aad
hlt
test
mov
loopne
test
mov
pop
or
pop
pop
lds
in
int3
stos
mov
and
pop
rcll
popf
adc
insb
iret
mov
stos
push
jl
div
lods
xchg
cmpsl
mov
sbb
lock
in
stos
lahf
xor
leave
pop
mov
cmpsl
cld
leave
xor
aas
rolb
add
stc
sahf
xor
rorl
subb
clc
lret
aaa
add
or
mulb
add
movsl
pop
cmc
in
std
aad
stos
or
inc
js
adc
or
add
stos
mov
or
movsb
jmp
push
xor
loope
fdivrs
jp
aad
mov
into
sbb
testl
jl
mov
sub
jle
jmp
movsb
inc
and
add
cmpsb
mov
nop
aaa
clc
and
push
cmp
mov
je
mov
sti
jmp
out
jmp
lds
stc
or
pop
xchg
divb
not
mov
scas
into
addr16
mov
pusha
add
push
les
js
mov
addr16
stos
adc
lahf
lock
fdivrs
out
pusha
addr16
mov
out
sub
in
les
jo
es
ljmp
pcmpgtw
mov
and
fwait
add
fadds
jl
leave
or
fcmovu
mov
xor
fldt
or
lods
in
inc
movsl
mov
pushf
cmp
das
mov
les
test
cs
push
call
and
xchg
int3
lcall
shlb
lods
mov
in
adc
inc
jnp
dec
push
cmp
js
and
mov
pop
les
into
dec
pop
icebp
pushf
imul
lods
insb
movsb
aam
cmp
inc
fmuls
jno
mov
fbld
xchg
cmp
xchg
fldenv
movsb
or
stos
or
fcomi
mov
shll
push
pop
push
or
mov
add
xchg
jns
adc
or
push
stc
fildl
repz
in
mov
shrb
stos
or
adc
sbb
cmp
test
popf
rcrb
das
mov
push
cmp
test
cmp
pop
add
fbld
mov
inc
scas
shlb
sahf
in
jle
and
inc
sub
cmp
lcall
fdivs
call
daa
mov
aaa
lds
leave
lods
pop
sub
dec
pop
fildl
fisubrs
cmpsl
rolb
inc
mov
push
hlt
cli
dec
scas
dec
lods
cmp
push
cmp
movsb
mov
leave
sub
ss
je
leave
cmpsl
outsl
cmp
add
jp
jo
cmp
orb
repnz
cmp
into
pushf
cmp
lahf
call
outsb
rcll
movsb
push
je
xchg
and
daa
mov
jbe
in
aam
push
and
push
cmpsb
test
outsb
xor
or
pop
rclb
and
sti
cmp
sub
ss
push
dec
pop
sbb
test
xchg
mov
repz
shrl
outsb
clc
stos
leave
jne
insl
lock
mov
add
in
or
pop
leave
popa
lret
or
out
sbb
sbb
addr16
pop
insb
jmp
mov
jne
mov
jnp
movsl
adc
stc
outsb
imul
clc
bnd
hlt
jecxz
test
jp
rorl
mov
mov
in
jo
test
divb
hlt
xor
jle
cmpsb
mov
or
mov
adc
cmp
pop
stos
cmp
add
push
inc
into
iret
mov
sub
push
lret
pop
stos
je
mov
sub
gs
xor
push
call
or
dec
enter
call
cmp
out
xor
aad
pop
icebp
mov
inc
cmp
jle
fldenv
push
jle
mov
fisttpl
in
sub
les
iret
add
ljmp
fcomps
mov
adc
cmp
mov
dec
sarl
rolb
or
inc
push
mov
je
in
test
cld
mov
or
rcrb
loope
jg
adc
insb
dec
or
mov
cld
cmc
sarl
negb
pushl
xchg
or
in
pop
cltd
mov
les
ret
xchg
jbe
or
dec
lret
scas
neg
testb
pop
mov
jmp
mov
dec
fwait
sti
add
jne
and
xor
in
rorb
cmp
and
jae
sub
data16
jbe
stos
pop
lods
cmp
dec
shll
imul
mov
push
cmpsl
in
movsb
clc
inc
lahf
lock
daa
mov
jecxz
jae
bound
test
push
popl
ret
stos
lret
adc
shlb
mov
mov
or
loope
lds
dec
dec
shlb
cmc
jmp
sarl
inc
jecxz
les
mov
rol
fidivl
addb
xor
mov
xor
scas
dec
sbb
mov
scas
in
adcb
add
cmp
pusha
shr
insl
mov
sub
div
subl
pop
push
mov
or
mov
lret
dec
pop
sub
mov
mov
mov
stos
push
jnp
je
mov
inc
lret
xchg
sti
or
jbe
push
add
shlb
inc
fstpt
pushf
push
or
es
lret
ds
cld
cmpsl
add
aaa
incl
cmp
ret
cmc
sti
add
sbb
xchg
or
and
mov
inc
rolb
sbb
imul
sub
jp
mov
insb
sub
mov
ror
sbb
push
rcrb
cmp
test
stc
out
scas
sub
fcmovnbe
fcmovnb
sub
mov
push
pop
cwtl
adc
mov
fsubl
xor
cld
shrl
les
lret
cmp
sti
or
dec
inc
nop
push
inc
or
loopne
xor
aas
adc
enter
std
stos
adc
psubusb
and
lahf
fstpl
cmp
cltd
mov
cmpb
or
js
inc
stc
pop
call
xor
mov
fwait
jmp
inc
loope
lret
rorl
or
and
xchg
stc
inc
test
jl
jns
addr16
test
mov
dec
add
mov
adc
fdivrs
sar
dec
mov
sub
aam
push
and
insl
sbbl
in
cmp
pushf
addr16
mov
or
out
mov
test
add
rorb
lods
out
cmp
iret
outsb
test
or
cmp
fidivl
repnz
ja
dec
out
mov
cmp
cs
gs
loopne
in
adc
and
andb
xlat
andl
sbb
sub
mov
outsb
movsb
or
std
movsb
popf
icebp
or
aam
dec
xchg
mov
cmp
or
lret
sar
mov
mov
test
nop
scas
jmp
pop
sti
scas
add
xor
in
push
in
adc
dec
xor
or
test
clc
into
mov
add
jp
into
mov
lea
mov
sub
in
pop
iret
insb
scas
cld
inc
imul
rorb
ret
test
mov
mov
or
and
and
xor
cmpb
in
pop
ret
cmp
inc
cld
sbb
mov
testl
ret
add
or
roll
or
jns
insb
mov
mov
stc
mov
dec
stc
jno
daa
jbe
hlt
mov
add
shrl
call
setns
lret
pop
cmp
in
fs
mov
adc
mov
push
fbstp
add
int3
add
ret
into
ljmp
jne
and
mov
push
fs
add
adc
in
lret
nop
lret
sbb
or
dec
dec
add
dec
stos
imull
xchg
dec
outsl
andb
jbe
movhps
jnp
mov
jo
lock
arpl
xchg
loope,pt
fisubrs
jmp
dec
shrl
push
add
les
xchg
jp
sub
hlt
jmp
jb
repnz
repz
sar
sub
test
test
shrl
xor
push
mov
addr16
stc
or
mov
pop
mov
test
orb
add
jecxz
in
dec
mov
je
out
lahf
mov
int
mov
sub
push
sub
rorl
scas
insl
pop
test
push
jns
lret
imul
daa
adc
push
push
cmp
add
mov
mov
fidivs
cmp
ds
mov
addb
or
outsl
mov
push
nop
clc
enter
jle
imul
mov
rolb
xor
sub
stos
dec
jbe
jns
xor
pushl
inc
and
out
xchg
fmulp
or
ds
lods
inc
stos
cmp
push
negb
or
pop
dec
mov
leave
out
fbld
jmp
ds
test
loope
pop
repnz
mov
rcrl
gs
stos
fucomi
xchg
mov
pop
inc
test
jns
ret
test
lock
data16
or
xchg
or
adc
test
cld
jl
mov
rcr
notl
or
sarb
shll
lahf
push
push
xchg
call
into
xor
push
scas
xchg
sbbb
cld
fwait
sub
adc
popa
push
js
xchg
jge
lret
add
push
mov
jb
sbb
pop
lea
insb
out
cmp
insl
inc
into
iret
loope
notb
or
adcb
and
mov
loope
ds
xchg
in
ret
in
mov
and
push
pop
in
stos
mov
inc
mov
stos
or
sbb
pop
ror
push
cltd
into
jmp
inc
gs
and
jl
cmp
adc
add
enter
sti
xor
gs
pop
repnz
ficoml
jl
cmp
repz
cmp
cmc
jp
pop
and
int3
mov
dec
pop
ret
cwtl
or
jnp
mov
loopne
dec
pop
or
xchg
xchg
dec
scas
mov
les
aas
jecxz
rcrl
fs
std
mov
sub
push
inc
or
int3
test
mov
ljmp
pop
jo
lret
ljmp
pop
xlat
or
fsubl
or
cmp
jp
cmp
popa
lret
xchg
sarb
mov
in
jns
sar
mov
mov
aas
je
lock
lock
xchg
pop
adc
scas
gs
mov
add
and
in
addl
mov
aaa
cs
or
pop
add
jl
push
fucomp
hlt
jl
mov
xlat
add
cwtl
or
or
or
pop
shll
inc
adc
scas
js
dec
shrl
addr16
jns
addr16
shlb
pop
stos
repz
pop
daa
ja
adc
cmpsb
add
mov
subb
enter
jl
icebp
fidivrl
cmp
dec
adc
push
call
cld
and
add
pusha
imul
stc
mov
das
pop
push
xchg
mov
loopne
and
mov
les
mov
lea
vpmacssdd
sahf
in
sbb
or
cmp
repz
mov
es
jge
lods
push
add
clc
loopne
sti
dec
daa
jl
add
jmp
les
dec
subl
sbb
in
ds
add
mov
xchg
sub
dec
lods
lock
push
jb
sub
sbb
shrb
sub
ds
mov
push
addl
push
lcall
jp
negb
test
and
test
negb
mov
shrb
rorb
mov
pop
fsubl
inc
ret
cmp
pop
sbbl
les
clc
dec
pop
cmpsb
aas
pop
push
in
js
xchg
jae
inc
loope
pop
dec
cld
lret
pcmpgtd
rol
fs
xorl
mov
cld
sbb
cli
jecxz
sbb
xlat
add
scas
movsl
push
pop
jmp
sarl
xchg
mov
fimuls
add
jp
test
dec
test
inc
mov
in
popf
mov
xor
daa
xchg
in
jae
adc
scas
cmpsl
aad
or
cmp
fsubrs
push
iret
pushf
push
xchg
cmp
cmp
mov
adc
mov
sub
mov
ret
dec
mov
lock
mov
and
scas
fisubrl
push
stos
jl
lods
push
rcll
mov
call
aam
mov
sbb
dec
mov
pop
mov
ret
add
aad
js
mov
iret
mov
je
add
sti
jmp
add
or
mov
ds
scas
fldenv
hlt
cs
jne
and
cmp
fnsave
bound
jnp
cmp
lcall
inc
ds
add
xchg
popa
jnp
xchg
adc
loope
int3
mov
shrb
or
shl
aam
add
jbe
repz
dec
dec
addr16
lret
or
repz
aaa
or
gs
iret
mov
ljmp
sahf
cmp
ja
mov
popl
je
rorb
hlt
mov
mov
add
mov
daa
pop
add
fldenv
pushf
cmp
xor
sbbl
lea
iret
ds
out
jle
cmp
add
adc
adc
insl
iret
pusha
imull
in
sub
adc
cmpsl
adc
inc
ds
arpl
or
fisttpl
cmp
ja
jne
mov
push
sub
xchg
scas
sbb
add
std
jl
mov
sub
or
jmp
test
stc
adc
inc
ds
pusha
and
pop
sti
test
fnstcw
les
cltd
mov
loopne
mov
push
xchg
les
cwtl
shll
inc
imul
rol
rol
stos
enter
scas
scas
add
rol
xor
into
xchg
adc
fdivp
push
lea
jnp
mov
push
leave
js
add
test
nop
jl
addl
adc
add
cmp
mov
ljmp
pusha
pusha
adc
sub
sub
xchg
test
push
push
aas
enter
test
leave
pop
fdivl
shl
or
out
and
hlt
stos
push
in
nop
sub
mov
incb
mov
int
outsb
or
jecxz
adc
fbstp
lret
jb
rorl
lods
inc
nop
or
inc
movsl
pop
je
adc
pusha
add
je
mov
fsubrl
fidivrs
push
adc
pop
dec
adc
xor
adcl
fwait
sahf
dec
or
jo
test
and
push
adc
pop
inc
test
jp
js
mov
in
cmp
aad
adc
sti
push
pop
mov
or
out
dec
inc
les
rolb
lret
lret
add
test
push
xchg
adc
push
std
inc
xchg
dec
mov
jle
cli
shll
nop
std
sbb
cli
xchg
fimull
fcmove
xor
inc
xchg
push
ret
mov
push
or
dec
push
sub
xor
divl
add
sbb
and
fs
jmp
push
jne
sti
test
sub
out
cld
mov
and
or
sub
leave
add
into
push
or
filds
mov
jnp
imul
lret
and
notb
xor
cli
pop
add
mov
add
and
insl
add
sbb
sub
in
push
mov
fwait
add
pop
jp
roll
mov
scas
pop
outsl
add
insb
adc
stc
or
inc
imul
out
fnstsw
jg
push
imul
pusha
int
sbb
cmpsb
or
inc
mov
adc
push
xchg
lret
out
rcrb
xchg
push
xlat
adc
sbb
arpl
mov
cmp
add
mov
in
dec
cmp
call
test
cmp
js
mov
cmp
push
ret
in
in
insl
fs
aas
jo
insl
sbb
lock
and
in
inc
rorb
aas
adcb
jnp
or
test
or
add
adc
ljmp
clc
mov
mov
or
dec
fmuls
lds
inc
cmp
push
fldl
add
shll
ret
xor
mov
jns
jmp
ss
call
adc
clc
push
test
scas
xchg
cli
je
jge
cmp
scas
cli
lret
daa
fdivs
push
xor
movd
cld
mov
mov
lcall
cmp
push
push
lock
or
stos
or
inc
sti
or
jp
mov
mov
pusha
nop
adc
cld
inc
inc
add
lds
or
in
stc
jp
movl
js
or
cmp
pop
mov
in
pop
dec
lock
je
shrl
int3
push
aam
decb
cld
out
mov
movsb
or
mov
lock
or
sub
inc
repz
mov
andl
or
sarl
sbb
shll
jge
jo
or
jecxz
sub
aas
cmp
aam
mov
repnz
lock
mov
fld
mov
jae
js
mov
cmp
repnz
or
jb
dec
xchg
sub
ja,pt
repnz
sub
dec
mov
xor
scas
lret
movlps
jns
cmp
repnz
mov
jecxz
add
adc
mov
out
cwtl
out
fstpt
pop
or
or
sar
jmp
cmp
call
inc
add
xchg
out
shl
pop
xchg
pushl
inc
icebp
fbstp
xor
jecxz
icebp
cmp
in
aaa
cmp
in
cmp
clc
xor
std
in
lret
repnz
lret
fdivl
or
jecxz
jno
or
mov
xor
std
repnz
mov
testb
lock
out
mov
fistl
or
xchg
or
add
or
lock
jmp
out
clc
out
push
outsb
jmp
js
pop
add
popf
inc
sub
mov
fwait
out
push
aam
je
push
push
call
out
cmpl
repnz
out
jp
sub
jl
pop
mov
je
jno
imul
cmpsl
cld
cmpsl
sti
sub
cld
dec
aad
imul
int
mov
or
mov
loop
lret
leave
icebp
cld
stc
rorl
fs
lods
clc
aas
mov
mov
xchg
jmp
popa
lds
rorl
repnz
cld
into
sbb
pop
test
mov
lods
test
pop
test
inc
jmp
shll
jmp
pop
push
out
in
js
inc
stos
jne
repnz
push
xchg
sub
mov
cmp
mov
std
cltd
dec
lds
inc
addr16
inc
into
test
add
aad
add
iret
aam
jle
lods
mov
repnz
lea
mov
cmpsb
shrb
out
xchg
fmul
movsb
inc
repnz
and
ret
xchg
ret
mov
sbb
mov
scas
ret
cmp
xor
rcr
xorl
sarl
test
push
inc
ds
adcl
cltd
sbb
inc
sbb
lock
jecxz
sub
adc
std
aam
cmp
repnz
das
jne
and
push
inc
push
pop
sbb
aam
mov
leave
jbe
inc
and
test
addl
sbb
add
mov
cmp
sbb
xor
js
cmp
jbe
adc
push
adc
pop
ret
inc
clc
hlt
aaa
mov
fcmovu
sbb
xchg
mov
mov
or
mov
xor
mov
mov
icebp
pop
adc
aam
jle
ds
pop
les
cmp
mov
inc
jns
in
or
or
in
stc
div
loope
add
js
mov
sbb
mov
rorl
in
dec
popa
xchg
out
sbb
fcmovbe
movsl
push
xlat
mulb
lret
push
sub
mov
rcl
shrl
push
popa
inc
mov
js
test
adc
xor
rcrb
mov
fcoml
shll
add
dec
dec
sub
scas
shrb
enter
add
pop
or
and
xor
dec
sbb
adc
ret
out
loop
test
xchg
xor
js
jb
scas
leave
test
aas
ret
lds
fistps
jmp
call
rorb
out
int3
jle
dec
call
mov
shrb
pop
out
inc
stc
lcall
les
mov
jno
loope
clc
dec
jge
movsl
int3
and
outsb
pop
sub
adc
jl
dec
push
out
sub
cmp
xor
mov
pop
xlat
orb
sarl
adcb
ds
lods
addb
pop
sti
in
pushf
mov
loopne
clc
mov
call
stos
and
jmp
fldenv
push
gs
adc
stc
test
in
test
or
push
decl
mov
loop
add
jl
sbb
add
jmp
pop
aaa
jb
in
ss
ljmp
push
sub
sti
scas
or
pop
add
adc
pop
inc
xrelease
xchg
inc
jb
xor
or
aaa
stos
pushf
dec
mov
ret
call
push
mov
stc
or
sub
pop
and
push
jo
dec
sbb
fiaddl
fwait
lret
incl
sahf
iret
jnp
cmp
test
pop
nop
lret
clc
ljmp
mov
or
cmp
or
loopne
lds
push
out
sar
test
inc
xorb
inc
fistpll
add
jno
cmp
ljmp
jmp
pop
test
daa
mov
sbb
cmc
push
lret
push
gs
jmp
fnstcw
addr16
push
jl
aas
and
and
xchg
pop
add
mov
cmp
xchg
imul
and
and
roll
loope
test
pop
lret
fwait
dec
push
mov
xchg
movsb
sub
rcl
dec
cmp
mov
aad
dec
pop
xor
inc
jb
dec
or
push
pop
movsb
jnp
out
pop
cmp
sub
ret
mov
mov
sub
loop
adc
scas
sub
adc
mov
mov
and
cmp
xchg
lret
sbb
repz
cmpsl
dec
adc
gs
test
rorl
or
sub
xchg
adc
adc
pop
push
xchg
mov
idiv
cmp
clc
mov
sbb
cmp
nop
cld
jnp
adc
mov
jns
cmp
push
jnp
mov
lock
push
rorl
in
rcll
stos
call
pop
leave
aad
cmp
mov
aam
fwait
rclb
mov
inc
lret
aaa
aaa
enter
ret
mov
popf
jp
jl
cmp
xor
lret
dec
das
mov
lods
add
cmpb
or
test
test
xchg
sub
xchg
jae
mov
xchg
ret
cmpsb
jmp
stos
cmp
adc
xchg
jno
cmp
sub
cs
sub
mov
fs
lock
pop
mov
sbb
in
mov
mov
rcll
xlat
sbb
call
pop
mov
scas
dec
jnp
stos
ds
add
add
cmpsl
dec
or
or
in
cmpsb
stc
repnz
or
and
dec
test
shll
cld
ss
dec
mov
cmc
sbb
call
inc
or
in
in
pop
js
movsl
jmp
aam
jg
cmpsl
cmp
in
add
xchg
fs
ret
sub
rcrl
enter
cmp
aaa
mov
jmp
pop
mov
addr16
sarl
add
movsb
test
push
push
test
scas
mov
aad
repz
popa
movsb
ja
xchg
or
push
icebp
sti
jae
in
inc
aam
lea
lods
in
sub
lcall
jnp,pt
push
daa
xchg
fadds
movsb
scas
mov
cmpsl
ljmp
xchg
mov
or
adc
xor
fidivl
cld
lock
lock
popf
daa
inc
bound
cmpl
or
inc
in
push
or
fmull
and
mov
xor
xorl
je
jnp
pop
icebp
mov
mov
in
bound
fcmovbe
ret
sub
xor
xchg
outsb
lret
hlt
ficomps
mov
cmp
fcomps
fcomps
cli
pop
pop
xchg
pop
mov
dec
xor
roll
sbb
scas
inc
pop
and
or
xchg
dec
pop
ljmp
and
rcrb
ret
rorl
or
roll
xchg
test
jl
dec
lods
fwait
ss
dec
jl
addr16
adc
lock
pop
mov
int3
scas
add
js
xchg
cmp
int3
testl
aam
stos
jmp
or
mov
stc
push
addr16
arpl
sub
mov
xchg
inc
icebp
stc
mov
push
mov
ljmp
repz
jno
sub
or
addr16
das
cmpsb
repnz
lods
movsl
insl
pushl
mov
test
je
inc
or
adc
iret
pop
nop
cmp
jb
jge
or
dec
stc
cmp
jb
and
or
mov
addb
aam
fmul
xchg
mov
ret
dec
pop
ds
sti
or
loop
mov
or
pop
pop
stc
sub
xor
ja
jl
pop
pop
push
jl
std
mov
mov
sub
and
les
push
mov
fidivrl
sub
bnd
mov
jmp
jp
jecxz
push
add
sub
daa
push
ja
aaa
rorb
lods
repz
nop
pop
push
es
scas
fs
cmc
addr16
jl
pop
xchg
subb
adc
mov
jbe
push
call
insl
stos
sub
xor
into
test
in
inc
aaa
push
push
xlat
xor
mov
add
rorl
mov
ljmp
fadd
or
rorl
inc
and
sub
ljmp
jne
or
imul
jmp
aas
lcall
sub
frstor
call
mov
pop
ret
repnz
mov
sarl
ljmp
add
iret
jne
test
inc
mov
add
mov
lcall
ficompl
fisttps
push
xchg
fdivr
mov
stc
je
or
jp
or
jae
pop
jmp
push
leave
enter
daa
xlat
in
pop
movsb
xchg
mov
fnop
mov
es
mov
movsl
fdivr
adc
mov
aas
iret
fisttpl
addr16
pop
add
enter
test
or
in
push
loope
imul
mov
cmp
into
stc
rcrb
pushf
fldl
std
ds
lods
mov
pop
cli
idivb
pop
pop
mov
lods
mov
fsub
movsl
jecxz
mov
mov
fcom
lods
aad
aam
jnp
cmpsl
stos
jne
iret
jl
test
adc
jmp
fnsetpm(287
scas
push
loopne
jne
xchg
inc
fcmovbe
clc
xor
lahf
dec
xlat
sti
xlat
and
cmp
popf
pushf
adc
stc
rclb
lods
into
or
jb
pop
mov
push
lds
add
xor
mov
ss
cmp
xlat
adc
jg
shrl
pop
or
cmp
lods
adc
push
aad
jmp
ljmp
pop
jmp
repnz
push
insb
shlb
roll
rcrb
fistpll
aas
int
sbbl
mov
repz
sub
or
enter
or
fsubrl
divl
lods
mov
push
mov
cmp
dec
mov
lret
daa
orl
jge
pushf
ds
cmp
scas
cmp
push
fwait
mov
loop
fistpll
jmp
mov
shlb
dec
test
leave
ja
mov
ja
repz
loopne
dec
xchg
or
fdivrs
add
jnp
les
test
jmp
mov
pushf
es
add
lret
cmp
xor
mov
std
daa
lock
push
adc
pop
imul
push
sbbb
xchg
imul
pop
jno
mov
fisttpll
or
sub
hlt
add
fdivs
xchg
mov
fisttpll
jl
push
movsb
or
or
and
call
push
fidivrs
cmp
mulb
out
cmp
push
repz
imul
les
mov
xor
xchg
loopne
mov
push
jo
mov
add
adc
cmp
mov
iret
jge
dec
add
sar
in
pop
rorb
xor
loopne
icebp
stc
inc
shr
xchg
or
pop
jo
mov
sahf
push
scas
dec
stc
shll
mov
out
adc
and
mov
or
ljmp
cmp
lret
mov
cmp
dec
cld
mov
jo
jb
add
je
sti
xchg
mov
sbb
mov
mov
xlat
sub
mov
sbb
or
fildl
push
pusha
add
or
or
fsts
aaa
aad
notl
or
std
and
or
or
dec
fisubl
sbb
in
push
mov
ja
aam
roll
push
mov
xor
mov
aam
ja
cld
fdivrs
pop
fbld
xchg
pusha
test
mov
sub
inc
xchg
pushf
mov
cltd
or
test
loope
lea
mov
add
ficoms
aas
or
push
or
pop
movsl
sub
sub
lods
pop
pop
ror
mov
dec
loop
test
icebp
pop
xor
sbb
cmp
dec
mov
sub
pushf
js
mov
scas
int3
inc
movsb
or
jb
cmpb
sbb
cli
orl
repz
jle
shll
xchg
addb
stos
lcall
stc
sub
add
xchg
cmp
pop
mov
sbb
out
test
rcll
jle
int3
mov
movsb
jg
mul
in
pop
push
sub
iret
dec
enter
iret
cmp
add
jle
pop
sub
incb
sub
hlt
and
mov
jecxz
out
sbb
xor
movsl
xchg
pushf
lret
xor
xchg
dec
fisttps
lcall
mov
jecxz
jmp
sbb
mov
adc
sub
inc
ret
pop
cld
add
mov
jb
std
mov
hlt
mov
inc
lahf
iret
mov
add
aas
divl
fwait
aad
jmp
imul
jmp
je
sub
or
stos
repnz
out
pop
jbe
pop
fisubrl
mov
jo
ds
int
dec
aaa
rcll
bound
iret
pop
lahf
fxam
or
jo
dec
test
cmp
jmp
add
push
xor
jmp
or
jl
and
popa
xor
rcll
sub
sbb
aaa
test
dec
xchg
call
stos
sbbl
add
or
pushf
cld
dec
mov
out
iret
clc
dec
cld
jp
mov
xor
rorl
fildl
inc
dec
jg
stos
mov
sbb
mov
aas
jo
jnp
jp
fmul
inc
pushf
push
dec
insl
nop
ss
pushf
lods
or
rcr
add
mov
inc
sbb
mov
jo
pop
hlt
jl
test
xchg
pop
pop
or
ds
jo
loop
sbb
inc
out
fcmovnb
inc
mov
mov
test
or
mov
mov
mov
or
ds
push
xor
dec
push
mov
jbe
dec
stos
jp
lret
rcr
jecxz
insb
mov
stos
xchg
fistpl
mov
mov
jg
in
dec
add
xor
jns
pushf
dec
xor
movsl
pop
or
daa
sti
cwtl
pop
subb
fisubrl
and
cli
pop
fistl
jl
frstor
fsubrp
fs
subb
fadds
and
jl
jae
filds
pop
pop
and
leave
aad
dec
cmp
call
push
and
mov
jnp
jge
sub
add
fstps
mov
dec
pop
xlat
fisubs
cmp
cmpsb
mov
ljmp
in
int3
outsb
jecxz
jae
out
adc
jp
pushf
les
ficomps
ljmp
dec
test
pop
pop
daa
xlat
mov
test
push
int3
shrl
push
mov
jmp
je
push
mov
jae
pop
in
repnz
push
ret
daa
sar
fildl
es
mov
and
xor
out
or
js
dec
dec
aas
cmp
mov
inc
sti
mov
arpl
ss
stos
out
jbe
jns
in
dec
outsl
rorb
cmpsl
loopne
test
lock
mov
cld
mov
enter
and
leave
mov
imul
cld
xchg
or
sbbl
push
test
xor
test
xchg
test
mov
sar
adc
jmp
fsubs
movsb
std
sti
fisubs
cmc
std
xchg
or
imul
dec
daa
rcl
mov
insl
mov
add
scas
test
ljmp
pop
push
jmp
mov
mov
xchg
cmp
add
dec
fdiv
inc
push
or
fs
arpl
mov
cmp
insl
fs
in
mov
mov
jecxz
in
push
or
cmp
int3
sbb
fs
inc
call
test
pop
push
ds
outsl
jae
les
mov
sub
or
jl
ja
test
dec
test
dec
add
fwait
in
dec
dec
ds
add
repnz
std
push
fdivl
popf
movb
incl
jl
add
pop
js
loop
push
dec
mov
hlt
add
repz
sarb
inc
add
add
push
movb
in
mov
inc
inc
stos
scas
add
leave
in
stc
lock
fs
shrb
cmpsl
nop
cli
sahf
inc
and
imul
mov
clc
pushf
nop
stos
lahf
or
mov
cmpsl
rol
inc
dec
insb
test
and
out
jecxz
dec
inc
out
or
ds
jb
ljmp
xor
daa
repz
jns
mov
xchg
cmp
inc
or
movl
loope
or
inc
xlat
and
and
mov
or
jmp
pop
in
add
pop
inc
shrl
or
ret
clc
or
xor
test
inc
ret
movsl
orb
out
inc
scas
dec
adc
xor
into
lahf
mov
test
paddq
aad
pop
pop
cli
iret
js
mov
push
jns
cmp
push
cmp
sbb
or
clc
adc
or
ds
jo
stc
pop
add
addr16
inc
pop
and
clc
cmp
jl
jne
sbb
inc
rcr
mov
push
mov
jecxz
cmp
pusha
nop
mov
dec
jmp
out
xchg
add
mov
pop
insl
or
cltd
xor
mov
add
add
pop
fsubrl
nop
jp
je
sahf
call
fnsave
adc
jae
or
inc
add
push
sbb
jne
out
out
push
fisttps
in
dec
cmp
out
insb
xlat
add
into
jmp
pop
call
outsb
jle
jo
or
enter
or
ljmp
sub
subb
or
mov
imul
push
cmp
shl
out
stc
hlt
xchg
insl
vmovd
repnz
xlat
sbb
insb
out
adc
or
inc
cmp
enter
push
mov
add
cld
add
loop
shll
push
stos
mov
push
or
mov
push
sub
sbb
repz
xchg
fcmove
into
jg
dec
dec
outsb
cmp
mov
sbb
clc
push
arpl
sbb
add
daa
dec
pop
into
xchg
mov
movl
mov
movups
aam
repz
jg
add
test
dec
in
sahf
pop
popf
sub
inc
inc
sub
and
jg
mov
mov
adc
out
mov
fcoms
pop
cmc
lea
fildll
leave
add
in
inc
shlb
lret
out
xor
data16
lods
or
adc
test
jecxz
nop
xor
test
jl
rorl
and
dec
fidivs
scas
mov
sub
stos
and
or
cmc
stos
ja
cmp
or
xlat
xchg
lods
ds
dec
stos
outsb
in
pop
pop
nop
mov
out
add
or
add
stc
outsl
xor
std
push
imul
cmp
hlt
dec
dec
push
or
call
aas
fnstenv
cmp
sar
fchs
sub
fldenv
xchg
xor
cmp
movntq
out
jne
push
add
push
sbb
push
xchg
sarl
xor
dec
mov
iret
or
mov
loope
xchg
fnclex
enter
bswap
movsb
movsl
xchg
jecxz
adc
jp
ffree
and
pop
push
out
icebp
add
mov
sub
pop
or
push
and
call
fs
dec
scas
mov
scas
sti
popf
mov
or
jnp
call
in
cld
or
inc
pop
mov
adc
mov
outsl
test
jo
ljmp
inc
call
shr
fbstp
cld
es
xor
out
inc
inc
rcrb
inc
mov
test
std
push
sub
in
cmp
jmp
aaa
jmp
cs
cmpsb
in
std
xlat
icebp
push
or
sahf
ja
mov
xor
jnp
sbb
pop
outsb
inc
and
jae
es
cmpsb
fisubl
xor
cmpsb
sub
repz
xor
push
fstpl
aam
add
and
sbb
mov
stc
shll
test
lock
mov
test
stc
fcomp
cmp
mov
pop
dec
pop
or
cmp
pop
js
popa
aam
das
pop
outsl
or
dec
out
cmp
cmpsl
rcll
repnz
xchg
inc
seto
jo
loope
cwtl
push
push
ds
xor
mov
mov
inc
pop
ds
das
stc
dec
mov
pop
lock
popa
aam
mov
cmp
rcr
mull
mov
test
sti
ret
pop
aam
decb
pop
pop
mov
ret
dec
sub
jbe
pushf
adc
out
jle
adc
push
dec
mov
push
mov
add
push
mov
movsb
movsb
xchg
rcrb
jmp
mov
imul
aaa
std
jbe
faddl
ja
or
sub
mov
add
xchg
mov
jl
jae
pop
popf
cmp
xchg
cmpsb
lock
orb
lret
or
bswap
sti
add
push
ss
mov
jg
or
push
hlt
std
pushf
shl
cli
movsb
sub
fstps
in
push
lret
add
inc
jo
test
pushf
std
dec
ljmp
fnsave
jns
push
push
lretw
xorb
push
out
ficoml
lcall
insl
xchg
jo
jno
mov
mov
xor
jno
add
out
out
lahf
filds
xor
or
in
sti
movsl
pop
shl
cld
jnp
pop
dec
or
std
outsl
push
fdivrs
jmp
sub
cmpsl
add
or
aam
or
jnp
fadds
jmp
test
xor
out
mov
aad
jne
in
les
inc
cmc
repz
mov
icebp
push
outsl
jne
mov
sarl
pop
lock
pushf
jmp
es
mov
cmp
xor
pop
repz
mov
rcr
jl
sar
out
fwait
rcr
adc
mov
sti
or
push
or
add
jno
repnz
in
fisttps
pop
pop
ljmp
sti
cli
fistpl
pop
inc
sarb
pop
aad
pop
popa
inc
or
scas
stc
enter
mov
sahf
sub
xchg
ja
testl
in
stc
repz
fmulp
xor
mov
jo
pop
jb
jl
xchg
adc
icebp
fildl
cld
cs
inc
fsubr
hlt
or
lods
add
orb
cmp
addr16
cwtl
sub
pop
xchg
and
fcomp
out
mov
jg
mov
cmc
xchg
enter
push
push
cmp
enter
push
mov
mov
and
add
mov
hlt
pushf
loop
ret
mov
or
push
or
inc
fcmovne
in
mov
scas
xchg
add
shll
inc
jecxz
pop
lret
pop
rorb
jge
in
cmp
popf
fimull
mov
add
xlat
ljmp
xor
push
lret
dec
or
mov
lods
imul
xor
stc
add
popf
cld
loop
dec
jb
rcrl
out
stos
fildll
ljmp
sar
es
rcll
jns
cmp
ljmp
sub
add
sarb
push
je
jb
sub
inc
sti
ret
cld
repnz
shll
aas
or
cmc
cmc
fnsave
rol
loop
jl
jmp
cld
out
jo
mov
jg
out
mov
add
adc
sub
fcmovnu
out
inc
popf
jl
out
out
roll
xchg
inc
or
xchg
lods
in
stos
aam
test
loopne
mov
pop
dec
shl
or
mov
lods
sti
das
js
jae
and
aad
ljmp
imul
mov
loopne
loop
dec
cld
in
cmpsl
add
pop
and
add
aad
out
js
add
fwait
dec
cmp
daa
rol
insl
add
cmp
movsl
pop
in
sbb
loop
fwait
cmpsb
add
bound
adc
stos
enter
in
pop
or
xor
sbb
stos
mov
ja
lds
push
mov
inc
lods
or
sar
testb
insl
js
cmp
add
add
pushl
sub
into
sbb
mov
sbb
cmpsb
adc
xchg
scas
pusha
ret
xchg
test
test
nop
or
pusha
add
fnstenv
adc
or
fldl
mov
jmp
movsb
push
dec
mov
xchg
aam
loope
jecxz
out
jno
mov
sti
push
je
scas
and
test
add
cmp
or
outsb
das
pop
or
out
cmp
test
lret
stos
xor
mov
dec
leave
sahf
loope
scas
push
insb
jnp
push
fiadds
pusha
push
test
inc
sbb
cmp
jl
add
or
int3
cmp
add
mov
push
lret
addb
mov
addb
ret
sarb
cmp
add
mov
popf
into
in
clc
pop
dec
enter
sar
adc
add
fcmovnu
jno
scas
lods
faddl
push
test
movsl
loop
movsb
notl
add
or
fldl
pextrw
push
test
push
xchg
rcl
and
loopne
xlat
cmp
jmp
test
imul
out
dec
popf
jns
sbb
add
inc
xor
add
push
or
sti
decb
dec
or
mov
xlat
mov
int
push
add
loop
addb
mov
rolb
incl
sbb
mov
lret
jl
jmp
mov
and
popa
sub
cli
cmp
int3
clc
arpl
jmp
cli
test
std
fiadds
lods
gs
in
jmp
add
std
add
insb
dec
in
or
in
dec
jnp
inc
or
add
add
push
push
or
xbegin
addb
scas
jmp
xchg
push
repz
fdiv
pop
xor
movsl
fbld
enter
push
push
cmc
pop
mov
jmp
dec
ret
and
pop
adc
adc
insl
out
aad
mov
mov
sti
pop
or
mov
out
mul
sarb
jae
push
cmp
testl
cli
and
hlt
push
das
fnsetpm(287
pop
cld
lock
pop
cmp
xlat
in
adc
mov
int
clc
mov
cmp
out
or
pop
pop
or
add
cli
nop
cmp
add
rcll
sarb
pavgw
loope
jl
idivl
mov
aas
je
push
mov
sub
cwtl
fldt
stos
mov
or
fsubrs
add
cs
jb
lahf
in
inc
sahf
pop
or
lret
out
dec
adc
adc
xor
iret
or
lea
js
push
in
cli
imul
xor
pop
leave
xchg
inc
mov
je
div
rclb
add
mov
sub
inc
cmp
fldenv
js
imul
test
push
sub
or
mov
cmp
ret
xlat
pop
cmpsl
add
fldt
push
or
xchg
xchg
jmp
lret
mov
daa
stc
leave
mov
mov
and
ljmp
das
test
ss
sbb
notb
test
mov
andl
pop
cmc
inc
insb
lods
mov
jecxz
sti
xlat
mov
dec
adc
stos
sbb
shrl
in
or
mov
jle
leave
leave
cmp
sti
enter
sti
or
inc
or
mov
cltd
cld
leave
in
pop
cwtl
subl
jecxz
test
push
or
ficoml
in
mov
pop
in
mov
xchg
filds
sbb
add
mov
negb
sahf
fstpt
stos
cli
dec
mov
pop
mov
icebp
jmp
mov
aad
aam
icebp
pop
and
push
mov
shr
loope
shl
mov
mov
loop
mov
test
js
call
aad
inc
adc
cmp
aad
aaa
icebp
push
imul
mov
xlat
cmp
rorl
pop
popf
xlat
push
mov
je
xchg
movsl
pop
out
int
inc
enter
or
adc
mov
stos
sti
xor
mov
mov
shl
push
pop
push
sub
pop
adc
push
lret
cmp
cmpsl
scas
jne
mov
lret
shll
sbb
rcl
xchg
adc
mov
or
mov
fldt
loop
into
int
stc
or
cld
fs
jg
dec
sti
not
add
fsubrs
sub
ss
repnz
jmp
and
mov
pop
cmpsb
mov
addr16
pop
lcall
mov
repz
or
sub
xor
mov
mov
or
mulb
daa
and
outsb
push
int
jle
sbb
std
xlat
or
aaa
mov
nop
imull
clc
pop
hlt
or
outsl
les
call
pop
sub
shr
fisubl
out
hlt
or
sub
jecxz
stos
jp
addr16
adc
out
in
int3
clc
in
aam
sti
mov
stos
hlt
xor
push
inc
jecxz
mov
enter
out
cmpsb
repz
sbb
mov
lock
stos
push
pop
mov
mov
call
push
stos
cwtl
xchg
inc
lret
out
jmp
test
jle
sbbl
cli
cmp
int3
ljmp
cmp
das
clc
jg
stos
stos
sbb
fwait
ljmp
mov
mov
pop
test
mov
outsw
jecxz
xchg
fldenv
mov
jmp
xor
ljmp
fcmovne
mov
stos
xchg
std
mov
icebp
sbb
je
daa
enter
sti
or
icebp
xor
std
mov
repz
es
repnz
scas
inc
pop
inc
imul
nop
jmp
not
lahf
loop
cmp
push
or
xor
mov
fildl
or
lcall
inc
cltd
mov
pop
xchg
cmp
pop
dec
in
imul
add
lcall
cmc
scas
jecxz
cmp
in
mov
adc
jo
mov
mov
xchg
jbe
dec
lcall
jbe
loopne
or
lcall
or
insb
sbb
std
std
mov
icebp
mov
int3
push
popa
sbb
mov
stos
jb
dec
or
cmp
or
sbb
iret
jmp
adc
aam
call
inc
push
cmpb
fdivl
aam
dec
ja
lods
dec
xor
flds
pop
jp
adcl
mov
mov
popf
cmc
stos
inc
dec
insl
add
xor
sti
test
jp
inc
test
int3
insb
cmp
inc
fdivl
push
mov
mov
std
push
mov
scas
out
fwait
mov
lock
jne
jae
das
or
cmp
cmp
or
mov
push
lods
loope
imul
mov
cmp
enter
cli
jle
in
pop
mov
or
fsubl
lods
lods
ja
or
lret
lock
pushf
aad
lret
lret
or
inc
pop
or
mov
inc
les
mov
sbb
add
jns
add
sub
push
sub
inc
jnp
sub
movsb
dec
in
push
iret
shll
out
out
mov
outsl
les
dec
jg
push
inc
cmpb
sarl
lcall
mov
sbb
out
lcall
or
popa
jno,pn
adc
pop
js
fcmovbe
fildll
lahf
inc
dec
xor
and
jb
and
sahf
dec
mov
stos
jns
and
scas
push
inc
sti
out
pop
pop
pop
aaa
loop
mov
mov
adcl
inc
pop
push
sub
sahf
xchg
or
daa
inc
in
shlb
sub
pop
inc
cltd
xchg
add
inc
stc
cmpsl
mov
inc
in
add
jl
cmp
jmp
sub
ret
vmwrite
xor
jecxz
cli
ret
jb
clc
lret
aam
mov
mov
loop
sahf
jmp
fldt
test
jnp
jns
aad
cmp
fldl
setp
leave
cmp
loopne
jecxz
mov
stos
movsl
shll
repz
stc
push
add
dec
lret
jnp
out
into
mov
jnp
ret
mov
sbb
push
pop
mov
lret
or
cmp
lret
cmpsb
push
dec
lcall
ror
xchg
outsl
sti
roll
loop
mov
mov
dec
and
je
fwait
andl
or
mov
out
pop
mov
add
ljmp
outsl
jbe
pusha
sahf
ret
rolb
inc
pop
push
inc
scas
lahf
mov
add
dec
mov
dec
stos
stc
add
dec
sub
push
rorl
jmp
jmp
add
sbb
add
adc
jnp
ret
mov
aam
adc
xor
cmp
pusha
fwait
push
fcmovb
das
jl
lret
in
addb
dec
std
stc
push
jmp
dec
sarl
fstps
loope
or
mov
push
add
arpl
lods
lods
and
stos
idivl
mov
jecxz
decl
iret
pop
push
mov
into
cld
aam
cmc
xchg
out
mov
jp
pop
stos
sbb
xlat
cmpsl
roll
jmp
sbb
add
add
push
fadds
sbb
enter
leave
push
stc
inc
sbb
stc
and
inc
testb
xor
decb
insl
dec
or
mov
lods
leave
mov
cmpsl
pop
cltd
nop
fidivl
popf
mov
es
xor
mov
outsb
insl
leave
adc
add
mov
dec
or
adc
pop
xchg
inc
inc
rorb
stc
adc
enter
or
dec
cmp
scas
sti
push
add
push
out
test
push
add
fmull
or
mov
sbb
inc
fnstcw
mov
in
dec
outsl
and
sbb
flds
rolb
insb
jl
incb
sub
ret
flds
mov
pop
or
dec
jne
faddp
dec
rcrl
mov
add
adc
cmp
sarb
jns
lret
or
jo
fcom
mov
in
cld
mov
data16
jbe
xchg
js
cmp
xlat
cmp
rolb
adc
sbbb
add
push
mov
stc
js
lods
or
dec
into
inc
dec
xor
cmp
xchg
push
lahf
stos
jns
jge
inc
movsl
scas
fimuls
adc
in
push
stos
jmp
and
mov
cmp
pop
and
fsubp
stos
in
add
ljmp
stos
push
cmp
lret
or
lock
stos
xorl
stc
jecxz
rorl
or
dec
and
insb
mov
sarl
sbb
or
inc
mov
jmp
leave
in
cmp
aad
pop
sub
fucomp
iret
xchg
and
out
rol
fs
ror
push
or
jnp
in
add
repz
add
mov
jle
or
mov
scas
ret
jbe
aaa
mov
aaa
mov
ds
xor
push
or
push
addr16
mov
dec
sub
stc
lret
add
dec
pop
push
cmc
scas
mov
push
sahf
sub
ja
pop
mov
mov
cli
cmpsl
imul
cmp
and
ja
je
fsts
adc
mov
imul
repnz
imul
inc
enter
nop
adc
adc
out
jecxz
push
xchg
loop
in
push
adc
or
or
dec
in
es
test
jmp
cwtl
or
push
adc
push
or
mov
shll
sahf
adc
mov
addb
ljmp
loop
div
ljmp
aad
sub
clc
dec
fs
pop
iret
sbb
cmp
int3
cmp
insl
ss
les
add
jns
jnp
pushf
lret
mov
jmp
call
adc
mov
ds
pop
fisubrs
and
insl
xchg
lea
sbb
pop
jmp
dec
enter
add
inc
test
pop
push
cmp
inc
ljmp
lea
sub
jmp
adc
lret
dec
add
lcall
dec
in
or
xor
pop
repnz
or
stos
stos
repz
xor
repz
cltd
ja
xchg
pop
fildl
out
mov
stos
cmp
outsl
push
fldt
and
subb
or
mov
fadd
add
sbb
aaa
mov
mov
adc
addr16
add
pop
mov
cmp
mov
mov
shrb
jp
add
add
jl
sub
add
lret
inc
dec
sahf
test
cld
pop
imul
dec
loope
lock
push
scas
mov
lods
add
mov
xlat
arpl
mov
inc
sti
lcall
into
addr16
jle
popa
adc
test
lock
jmp
xor
in
cmpsl
adc
pop
add
mov
sub
aad
cmp
cmpsb
mov
adc
jmp
aaa
gs
repz
mov
adc
pushf
mov
sub
stos
push
or
ret
or
repz
dec
lods
push
int
lods
scas
xchg
cmpsl
mov
out
mov
lods
int3
clc
jo
sub
popa
sbb
cmp
inc
shll
aad
pop
or
sub
mov
pop
std
mov
out
xor
fisttpl
and
jecxz
pop
test
cmp
cwtl
pusha
int3
add
mov
mov
aaa
divb
shrl
cmp
lods
jb
mov
xorb
xor
out
and
movsl
jmp
daa
sahf
outsb
test
mov
add
sahf
or
gs
int3
mov
insl
add
or
dec
xor
jl
add
popf
cwtl
shrb
fiaddl
cs
clc
adc
cmp
mov
pop
repz
dec
sub
dec
mov
mov
stos
push
push
push
or
xchg
push
add
insb
pop
aaa
xchg
or
push
mov
notl
imul
jmp
xchg
or
imul
mov
data16
fbld
bound
jmp
cmp
sub
cmc
leave
xor
pop
or
pop
mov
mov
jmp
add
enter
push
mov
add
jmp
cmp
nop
mov
subb
adc
movsl
cld
add
lret
pop
mov
or
mov
mov
ds
out
icebp
add
outsl
shll
stos
or
je
push
sahf
or
inc
shrl
cmp
push
jns
insb
push
dec
pop
or
in
jecxz
sub
and
cmpsb
xchg
scas
in
out
inc
movsb
xchg
mov
outsl
ja
into
dec
jnp
xchg
movsb
sti
or
repnz
lahf
lods
js
mov
cmp
clc
icebp
mov
xchg
into
cmp
mov
std
sub
add
jns
clc
cli
jae
jl
jns
sub
orl
fldt
repnz
inc
nop
les
cld
mov
push
cmp
cmp
xchg
xchg
jecxz
sbb
mov
push
loop
jl
enter
rolb
fwait
shll
test
popf
pop
mov
aad
xchg
pushf
jns
sub
push
pop
cs
push
ret
loop
ds
dec
dec
sub
int3
bound
inc
stc
or
mov
or
mov
dec
fistpl
subb
lret
mov
es
std
cmp
mov
sahf
outsb
pop
fimull
cmc
push
pusha
add
repnz
sbb
sbb
mov
pop
adc
jle
ret
cld
in
inc
ds
jmp
xchg
arpl
addr16
cmp
cmp
cli
out
pop
stos
ret
lea
add
push
mov
pushf
cmpsb
dec
mov
dec
mov
ja
sbb
add
clc
jge
divl
inc
xchg
sbb
aad
test
or
mov
das
jg
sub
sbb
xchg
xchg
jo
push
lret
dec
fcmovne
fadd
hlt
int3
cmp
add
push
addb
or
ror
rcll
rcrl
sub
icebp
xchg
xor
cltd
push
stc
xchg
stc
mov
lock
jmp
dec
pop
lcall
mov
shrb
stc
pop
cmp
mov
sbb
dec
mov
lret
or
mov
xor
xchg
or
xlat
cld
out
js
pop
movsb
jmp
shll
mov
cmp
int3
sub
mov
lock
or
xor
stos
xchg
xor
or
push
addl
std
add
lods
add
pop
bound
inc
sbb
mov
enter
mov
fistpll
out
bnd
add
ret
pusha
loopne
or
pop
or
divl
inc
cmp
cmp
mov
cld
cld
insb
or
das
fxtract
pop
in
daa
arpl
insb
daa
stos
je
scas
xchg
add
xchg
pop
sahf
xor
rclb
xor
call
jne
stos
xchg
xlat
cmp
in
imul
cwtl
push
push
cmp
cmp
inc
icebp
fidivrl
repz
mov
pop
loopne
jl
cltd
shl
les
push
or
stos
mov
dec
fidivrl
jmp
shl
cltd
sub
jbe
je
enter
loopne
mov
add
std
add
cld
or
pop
aam
lea
rolb
mov
pusha
mov
add
push
test
or
sub
jae
xrelease
jecxz
adc
pop
inc
fistps
pop
mov
or
int
xor
fistpl
aad
ffreep
jmp
daa
jns
shl
cmp
js
cli
cwtl
lret
ss
in
subl
ret
iret
jae
fidivrs
icebp
aad
repnz
lock
mov
fsubs
test
pop
jl
or
std
push
dec
out
add
mov
std
stos
cld
in
jp
and
fisubrl
iret
popf
xchg
cltd
mov
fiaddl
shll
popf
mov
mov
or
outsb
sbb
pop
sti
out
mov
mulb
jle
or
lahf
stos
cmc
mov
add
test
mov
sbb
addb
cmp
ret
dec
jecxz
jp
and
push
cmc
testb
out
incl
xchg
or
fucomip
data16
push
rorl
mov
pusha
js
or
xlat
add
jo
test
fistpl
pushf
ss
pop
pop
pop
std
hlt
ljmp
mov
rolb
jno
rolb
add
add
in
add
jl
fildl
cld
lods
add
ljmp
add
mov
inc
int
xor
jae
mov
lock
js
shrb
cmc
outsb
test
and
cmp
fcomi
cld
flds
sti
in
sub
fcmovnu
loop,pn
push
sarb
das
push
jecxz
sti
sbb
or
add
jmp
movsl
mov
mov
in
fisttps
mov
cmpsl
jecxz
cmc
sbb
icebp
je
jle
sbb
call
xlat
mov
loop
mov
pop
adc
std
testl
lock
data16
icebp
sbb
aad
pop
repz
push
loop
inc
std
ja
into
cmpsb
fdivrs
scas
xor
inc
loopne
inc
jb
xorb
scas
lock
mov
jecxz
popf
mov
xlat
filds
push
and
xor
scas
les
mov
inc
dec
imul
aaa
cmp
add
inc
fdivp
cwtl
pop
je
hlt
jb
adc
and
cmc
sbb
fldenv
sarl
xchg
lcall
inc
fiaddl
hlt
xlat
les
sahf
icebp
xchg
add
and
leave
repz
mov
inc
xor
cmp
loope
dec
fcomip
insb
jg
xor
and
adc
in
imull
orl
ret
mov
addb
aas
jbe
and
add
pushf
into
pop
adcl
jne
iret
xor
or
dec
in
test
inc
jp
in
out
mov
xor
dec
ds
clc
stos
sub
xchg
adc
fcmovb
je
mov
scas
xor
sbb
xor
inc
ja
mov
cmpsl
mov
movsb
add
cmpsb
sti
cmp
into
aam
mov
sbb
imul
sahf
in
or
sub
and
inc
mov
sar
jne
fldl
repnz
fldcw
mov
jl
lock
jecxz
fisttpll
cmp
xchg
fistps
dec
aad
adc
jecxz
pop
mov
push
jbe,pt
pop
imul
xchg
or
fisubl
adc
push
pop
sbb
inc
jmp
idivl
sbbl
or
shl
mov
insb
arpl
ret
xor
ret
test
aad
and
cld
cmp
and
stos
aad
enter
inc
sub
std
roll
fcompl
inc
test
add
les
mov
or
add
or
dec
dec
ja
shl
sub
sbb
or
jp
mov
les
or
mov
or
out
cwtl
jns
es
add
cmpsl
push
popa
xor
xor
out
push
cmpsb
cli
fbstp
mov
xchg
cmp
or
ret
sub
lods
adc
movsb
pop
fimuls
int3
mov
lds
jle
jbe
fnstsw
ds
sub
or
cmp
ds
fdivl
lret
pop
std
jnp
dec
cmp
mov
js
adc
mov
sbb
je
scas
push
sub
lods
mov
lret
xor
lods
mov
aaa
ds
sti
loope
sbbb
adcb
sarl
mov
and
inc
in
lds
pop
aam
push
sub
and
jg
pop
pushf
sbb
or
inc
sahf
xlat
dec
out
inc
divw
sbb
call
mov
ja
sbb
ljmp
ljmp
or
in
push
push
sti
lock
and
sbb
mov
jo
add
test
js
fimull
fadd
push
dec
sub
cmp
lea
xchg
jg
mov
dec
les
lods
mov
ds
cld
push
test
jl
out
out
aam
aaa
cltd
sbb
push
movsb
push
addb
into
push
arpl
sub
icebp
cmp
jnp
mov
test
std
mov
xchg
cmp
cmp
jp
xchg
push
cmp
popf
inc
outsb
mov
jg
ffreep
scas
mov
xor
xor
sub
dec
lret
test
mov
clc
add
out
test
movsl
out
aaa
imul
pop
cmpsl
fsub
fstpt
mov
cmp
push
cmp
xor
push
jns
jae
inc
dec
xor
mov
dec
test
add
jo
mov
sahf
rclb
pop
daa
mov
nop
adc
add
decl
fildl
hlt
pushl
add
and
cmp
add
add
xchg
inc
mov
pushl
xchg
or
push
test
xor
pop
push
cmp
inc
cmp
xor
fisttpl
push
adc
cmp
enter
dec
andl
sbb
in
cmpsl
dec
add
fistps
fnstsw
les
xchg
inc
loop
js
push
mov
inc
ljmp
lcall
mov
aaa
aad
rol
sbb
push
sub
aad
pop
lods
fnstcw
mov
jne
je
fcmovbe
cmc
inc
mov
repz
icebp
pop
mov
mov
pushf
or
pop
add
into
dec
orl
lcall
add
add
daa
add
in
test
divb
pusha
add
jecxz
mov
or
jmp
sbb
in
dec
jno
cmp
repnz
cld
cwtl
or
test
ret
and
push
push
ret
sahf
out
or
pop
sbb
add
fisttpll
shll
or
repz
inc
stc
test
in
test
and
int
loope
mov
lcall
rorl
push
pop
mov
mov
mov
test
xchg
or
stos
push
outsl
idivl
sub
sub
popw
stos
mov
add
pusha
jbe
fdivrl
fidivrl
iret
mov
shl
push
aad
add
loope
jecxz
fistps
jle
xchg
lock
enter
xlat
in
or
jne
and
out
push
popf
cmp
rcr
in
in
rorl
in
inc
dec
or
xor
fdivs
mov
ret
rcl
pop
or
ja
repz
hlt
add
rclb
sti
jne
in
repz
pop
filds
sbb
adc
sti
iret
ljmp
mov
sbb
sbb
shl
inc
sbb
shlb
dec
gs
dec
pop
dec
dec
push
cltd
mov
pop
insl
icebp
dec
push
mov
inc
dec
mov
movsl
movsb
lret
push
dec
stos
adc
pop
inc
fimull
fadds
in
aaa
jns
sub
xor
jle
xor
push
test
ss
xor
ljmp
test
xor
push
rcr
aam
push
aad
and
pop
fmuls
jecxz
fs
mov
shrb
dec
xchg
pop
dec
or
addb
es
shlb
pop
dec
stos
jb
movsb
jmp
aam
push
aad
sub
in
pop
or
loopne
dec
jge
cld
sbb
cmp
das
lcall
out
pusha
fcoml
and
sub
dec
pusha
in
cmpsb
out
or
stc
inc
inc
ret
enter
lock
shlb
xlat
fcomi
je
cli
mov
xchg
or
jnp
jne
mov
std
jns
popf
movsb
test
popf
sbbb
sub
incb
add
clc
jmp
popf
mulb
cmp
mov
popf
jmp
sub
xchg
in
popf
or
pusha
sbb
inc
clc
adc
cmp
add
pop
daa
loope
popf
aam
add
in
cmp
inc
std
lcall
push
jmp
push
cld
iret
ljmp
dec
je
add
data16
stos
std
sbb
inc
xlat
mov
sbb
jp
mov
test
mulb
jg
xlat
sahf
inc
stos
aam
or
push
nop
ja
adc
lock
cmp
cli
ljmp
mov
out
ret
xchg
out
mov
leave
or
inc
enter
imull
aas
in
loop
add
cmc
xchg
aaa
shr
cmp
jnp
into
repnz
popf
shlb
daa
mov
stos
lret
jl
mov
or
ds
lret
dec
and
in
dec
inc
hlt
or
rorb
mov
or
lea
xchg
xor
xchg
inc
add
push
mov
inc
cmp
subb
imul
into
dec
mov
test
mov
mov
or
mov
jae
rolb
add
jecxz
out
adc
mov
xchg
shr
xchg
push
enter
and
jbe
mov
lret
movsb
xchg
dec
pop
cmp
vpmacswd
aas
outsb
outsl
aad
mov
sti
ds
outsl
sahf
repz
cli
adc
xchg
or
ljmp
test
fsubs
adc
sbb
sbb
leave
push
sbb
xchg
cmp
inc
add
stos
fnstsw
aas
push
fisttpll
pop
jbe
mov
push
repnz
cmp
lock
das
or
loop
mov
jmp
add
inc
mov
mov
sub
mov
in
arpl
sub
or
or
loopne
or
lea
jns
jnp
fistps
jl
mov
jge
jl
pop
in
push
sti
jle
and
lret
in
hlt
and
xchg
out
lret
ds
or
mov
cmpsl
jnp
shl
testl
call
inc
out
call
mov
inc
les
mov
dec
mov
mov
mov
jmp
mov
dec
movsl
push
cmp
in
dec
add
mov
inc
sub
sti
out
mov
mov
jnp
inc
lock
fdivl
cld
jo
repnz
push
inc
insb
call
out
push
cmp
outsl
imul
xor
xor
jno
testb
jg
xor
outsb
es
ret
es
es
mov
movsb
or
imul
cmp
ret
and
pop
bound
mov
pop
movsl
push
xor
js
rorl
mov
and
daa
push
imul
mov
or
orb
push
dec
adc
inc
scas
pop
bound
pop
jecxz
cmp
stos
mov
or
outsb
add
cmpsl
xor
xchg
dec
mov
imul
or
and
mov
filds
sti
mov
sbb
seta
out
push
ljmp
leave
jb
mov
inc
adc
inc
repz
jmp
imull
shll
mov
xor
xchg
jmp
cmp
sbb
dec
jb
jecxz
mov
repz
and
mov
test
or
jge
loop
outsb
pop
jns
push
aad
loop
mov
mov
cmp
cld
mov
mul
outsl
or
xchg
jmp
cld
xchg
fmull
pop
sbb
add
push
sbb
or
movsb
shl
jnp
hlt
sti
fnstenv
mov
or
pop
je
test
fsubrp
xchg
insb
adc
push
test
sbb
cld
xchg
call
mul
push
fildll
push
repnz
movsb
sti
push
sbb
pop
ffreep
adc
dec
sub
or
mov
fsqrt
push
mov
jno
pop
rep
push
sub
icebp
mov
or
xor
test
lods
icebp
cmp
sbb
and
push
or
pop
stos
js
aam
inc
or
out
sarb
fisttpl
lahf
sub
in
adc
jg
or
xlat
pop
cmp
fsub
and
push
cld
in
jl
aam
mov
push
movsb
sti
inc
cmp
sahf
int3
mov
inc
test
xor
lock
mov
mov
jl
mov
mov
and
mov
push
in
pop
in
les
enter
call
inc
sbb
pusha
mov
fdivp
loop
std
mov
jecxz
cmp
movsb
and
inc
or
jmp
dec
jmp
scas
mov
or
fs
icebp
push
icebp
repnz
ret
and
ficoms
sti
or
jo
pop
pop
jmp
push
call
cmp
cmp
stc
test
inc
dec
dec
ds
in
mov
pop
ds
flds
out
fisttpl
out
pop
in
stos
mov
fcomi
cld
jp
inc
pop
in
fsub
pop
cld
in
dec
pop
add
jg
cmp
cmc
nop
leave
mov
and
loopne
cmp
lea
imul
jecxz
fmuls
or
in
ficomps
int
rorl
fyl2xp1
stos
stos
jl
pop
ds
cmp
jecxz
les
imul
and
pop
fnstcw
cld
and
jge
aam
mov
test
out
add
stos
dec
repnz
jo
ror
jge
inc
cmc
in
lret
lea
jge
xchg
out
insl
dec
cmp
sbb
mov
fs
flds
shrl
movsb
rorb
xchg
mov
cmpsl
fnstsw
arpl
popf
aam
add
jno
jnp
inc
pavgb
js
mov
xor
add
and
test
xchg
ret
fidivrs
add
cmp
push
dec
jmp
dec
inc
in
or
in
rcll
enter
push
xorl
ljmp
aam
sub
and
sbbb
jle
mov
mov
xchg
xor
fdivrl
push
call
xor
sub
or
aaa
mov
and
fwait
repz
pop
and
or
loopne
sbb
inc
xchg
mov
xlat
jl
fdivl
cmp
loop
pop
movsb
lcall
in
fldcw
incb
jl
fiadds
jl
shll
cmp
fdiv
in
inc
fdiv
in
sub
mov
fidivrl
dec
or
xchg
loope
nop
or
and
pop
or
in
sahf
lea
lock
ret
xchg
lret
jmp
imul
push
stos
or
rcll
mov
sub
lock
or
mov
pop
cmpsb
fistpll
or
fsubl
lret
push
pop
mov
sub
jecxz
jnp
jo
enter
sub
pop
adc
test
jmp
out
decl
pushl
orb
mov
inc
addr16
add
sbb
fisttpll
shrl
sbb
jecxz
ljmp
adc
sbb
rorb
sub
pop
loopne
xchg
dec
shll
inc
out
fwait
clc
mov
pop
jge
in
xchg
inc
xchg
mov
adc
je
jle
pushaw
je
out
es
sub
rorb
add
jns
rol
push
xchg
movsb
loope
enter
cmp
lret
adc
fisttps
jl
jecxz
and
bound
ror
stc
push
rcll
sarb
jge
fists
mov
or
repz
sbb
fisttps
ljmp
aad
sub
enter
repnz
movsl
js
pop
stos
into
in
add
sub
lret
pop
jecxz
cmc
in
sahf
jge
add
in
xchg
lret
int3
in
jmp
push
loopne
in
or
xchg
loop
stos
lock
jns
adc
or
out
add
fdivr
xchg
aad
jge
add
pop
aam
mov
cs
stc
mov
pop
stc
jns
in
sarb
jl
outsb
lahf
out
or
insb
shrl
inc
lods
xor
jno
push
into
les
sub
jge
pop
lret
stc
mov
jge
and
xchg
mov
lcall
icebp
ds
or
jecxz
loopne
loopnew
int3
or
nop
lods
mov
adc
xlat
out
mov
add
add
nop
out
xchg
dec
in
jmp
or
out
mov
push
jnp
enter
jae
movsl
mov
andl
and
or
adc
and
sbb
jb
cli
sbb
mov
adc
jnp
pop
cs
fstpt
sub
sub
cmp
dec
and
push
mov
stos
xor
mov
movb
icebp
movnti
ja
fisubrl
pop
push
add
stc
ret
iret
out
ljmp
ss
jmp
ret
or
pop
iret
jnp
inc
pop
mov
ss
mov
inc
into
xchg
push
stos
jns
xor
cmpsl
sbb
and
jo
aaa
hlt
data16
add
jmp
pop
sbb
mov
cwtl
imul
repz
es
pop
out
jmp
jmp
stos
mov
sbb
mov
jns
xchg
test
repnz
test
inc
sbb
or
cmpsb
pop
inc
adc
add
scas
mov
nop
call
adc
jbe
push
and
mov
sbb
inc
sub
pop
add
mov
dec
sbb
les
jmp
mov
mov
pusha
jb
je
clc
in
and
pop
add
jl
lock
add
mov
ret
enter
jecxz
mov
push
shrb
or
jae
cmc
add
outsl
mov
pop
mov
add
and
call
nop
dec
iret
sub
and
cmc
add
test
stc
ja
sub
inc
pop
in
cwtl
mov
or
stos
or
lods
mov
lret
adc
call
or
jge
mov
cmp
dec
data16
mov
es
or
and
fistpl
mov
in
mov
cmpsb
gs
fdivrs
mov
sbb
outsl
add
sarl
mov
sub
aaa
fndisi(8087
outsb
xor
lock
insb
movsl
std
xchg
dec
js
jecxz
or
mov
mov
jge
inc
into
cmp
mov
in
mov
jae
shlb
jmp
mov
sub
sbb
out
sahf
mov
push
lock
or
dec
in
stos
jae
adc
outsb
mov
scas
dec
sub
push
hlt
imul
inc
xchg
mov
clc
inc
dec
imul
cwtl
dec
scas
dec
sub
push
movsl
push
adc
push
xor
movsb
inc
sub
dec
fldl
int3
fs
test
dec
cmpsb
daa
lret
xchg
xchg
scas
push
or
mov
repz
je
sub
scas
or
jmp
sub
in
loopne
into
and
xchg
jae
sub
pop
arpl
and
sbb
add
movsl
push
loop
popf
pop
scas
fidivl
mov
das
adc
hlt
xor
movsb
adc
and
adc
mov
jo
jl
out
jnp
in
repnz
test
insl
inc
imull
adc
push
inc
rolb
divl
lahf
das
or
test
adc
xor
test
cmp
test
cli
movsl
addr16
push
adc
clc
dec
cmpsl
cmpsb
clc
push
stos
or
jge
fiadds
call
sub
popf
xor
cwtl
in
test
in
sti
adc
movsb
fsubl
in
jmp
cmp
or
in
push
jnp
fs
cmp
or
fs
cld
add
or
dec
xchg
in
pop
daa
pusha
and
repz
loop
das
adc
cmp
dec
add
loope
pop
and
test
fiadds
or
mov
call
ljmp
inc
or
jmp
int3
mov
mov
push
in
sub
lret
xchg
sub
subb
push
jl
jmp
fdiv
rclb
push
out
stos
stos
repnz
lock
jmp
jno
pop
mov
sub
jl
jno
dec
adc
jge
ds
mov
dec
inc
stos
dec
shlb
clc
xor
pop
push
cli
in
loopne
cmp
inc
or
push
aas
inc
lret
dec
xchg
jno
das
lcall
sub
pusha
and
imul
lock
imul
mov
hlt
stos
hlt
inc
test
or
idivb
stos
fisttps
pusha
adc
dec
imul
loopne
dec
es
inc
jnp
mov
sbb
jno
rorl
adcb
mov
adc
pop
dec
rcrb
push
in
jmp
outsb
and
test
pop
out
and
and
nop
push
mov
bound
adc
lcall
int3
js
das
add
cmpsl
sbb
mov
xor
inc
cmc
adc
inc
movsl
inc
leave
fcomp
idivb
push
dec
sub
ret
insl
dec
push
jno
or
stos
les
sub
or
movsl
mov
fs
hlt
or
cmp
or
loopne
push
fs
lret
mov
fadds
pop
xchg
or
or
insl
inc
mulb
fsubl
dec
mov
xor
mov
std
push
cmpl
fcmovnu
mov
inc
rcr
cmp
nop
imul
jge
jnp
push
dec
loop
mov
jmp
shl
jl
xchg
mov
and
mov
jnp
testl
dec
hlt
lcall
xchg
ds
inc
pop
subb
sbb
jae
jle
mov
sbb
push
insb
fldt
xchg
fldz
lret
add
or
push
xor
jl
enter
and
adcl
aad
outsb
lret
fimuls
fsub
adc
push
fisttpll
cs
nop
lcall
xchg
enter
fsts
mov
lret
adc
push
jbe
jne
cs
sahf
sbb
jbe
sbbl
sti
xchg
pop
rcrb
sbb
inc
or
fldl
stc
or
shl
test
sti
aaa
hlt
clc
pop
lret
cld
jmp
aad
fcmove
out
rclb
jl
testb
jl
test
out
movsl
nop
icebp
cwtl
clc
jl
cli
inc
mov
or
add
add
nop
aam
out
jmp
mov
fdivrl
stos
mov
enter
ds
cld
lret
test
xchg
sub
fisubrs
sub
push
cld
adc
or
xchg
sub
xchg
scas
rcll
je
int3
stc
sub
ss
movsb
inc
test
push
xchg
mov
pop
mov
push
out
xlat
dec
mov
mov
incl
ret
push
pusha
jl
jae
dec
leave
scas
leave
into
add
add
mov
in
cli
and
dec
mov
mov
scas
or
dec
sbb
insb
jge
outsl
sbb
mov
fadds
lods
les
dec
daa
xlat
or
fldl
add
dec
ret
clc
jne
mov
adc
in
shlb
addr16
mov
inc
cmp
add
into
shrl
mov
push
out
rcll
sbb
cli
ficoml
sub
inc
jbe
lods
push
outsb
ret
add
push
insl
sti
aam
fs
jnp
ljmp
aad
jle
js
adc
shll
push
lods
push
push
cmp
jnp
gs
int3
std
cmp
ret
xchg
lea
dec
mov
out
and
iret
mov
mov
add
mov
dec
inc
add
scas
inc
hlt
mov
lret
fs
shll
rorl
dec
mov
and
fmuls
push
dec
sbb
dec
in
mov
ds
cmp
and
fldl
xchg
insl
mov
cmp
dec
and
push
lock
fs
int3
test
push
mul
xchg
les
into
inc
dec
xchg
scas
ret
mov
add
inc
mov
in
cltd
mov
insl
inc
out
or
addr16
call
mov
mov
lret
cmp
lods
dec
dec
inc
dec
xor
inc
dec
dec
mov
jnp
cmp
xor
test
pop
mov
dec
int3
or
mov
or
xchg
mov
mov
inc
push
arpl
repz
lods
mov
roll
mov
mov
sub
pop
hlt
cmp
in
or
pop
mov
les
jmp
cmp
or
std
fildl
push
int3
cmp
mov
dec
ljmp
stc
loop
push
push
jp
lock
add
in
rorb
movsl
adc
jmp
in
mov
adc
movsb
mov
cmp
rcrl
adc
or
movsb
mov
push
or
icebp
movl
add
lret
pop
sti
jp
inc
jo
push
sahf
inc
fs
das
shl
sbb
rol
sub
leave
sti
sub
or
cltd
mov
mov
lahf
push
ljmp
ljmp
lods
mov
lds
dec
sbb
mov
fmull
aaa
sub
or
sbb
gs
iret
ds
pop
xorb
mov
mov
push
add
dec
inc
mov
sub
aad
dec
arpl
xor
cli
rcrl
cmp
cld
mov
shll
stos
inc
lods
imul
jge
rcrb
inc
cmpsb
mov
popf
dec
insb
jne
jmp
mov
jnp
or
add
push
jl
cmpl
ret
out
out
pushf
aad
cmp
jmp
fnstsw
ss
iret
pop
mov
jne
sbb
test
movsl
dec
std
sti
adc
in
jno
ret
mov
jl
mov
add
out
lret
cli
or
or
lret
fnstenv
fs
ret
test
xor
mov
or
rorl
jmp
shr
rcrl
test
jecxz
movsl
xor
repnz
sbb
push
imul
repz
fiadds
sti
fs
mov
mov
popf
mov
test
cmovae
outsb
out
pop
push
xlat
test
or
adc
sbb
stos
inc
pushf
or
shrb
arpl
adc
js
jl
int3
mov
mov
imul
dec
push
ljmp
jmp
push
lds
and
cmp
cmpsl
popf
dec
sbb
or
sti
adcl
lret
sbb
mov
sbb
cmp
pop
xchg
cmpsb
lds
out
mov
mov
mov
xor
jne
push
add
lods
or
push
adc
xlat
jno
stos
lds
ss
clc
add
mov
fisttpl
repz
test
adc
les
pop
push
adc
jmp
and
imul
sub
loop
jl
fadds
mov
lret
in
scas
rcrl
or
jmp
or
aas
add
or
in
decl
dec
jbe
imul
cmp
sti
or
fcoms
add
enter
adc
mov
xchg
and
xchg
or
imul
imul
insl
repnz
sub
nop
insb
sbb
lock
mov
js
movsb
faddl
out
mov
mov
jne
cld
jp
add
jno
pop
sti
or
sbb
pop
pop
movsb
xchg
mov
cmp
shr
mov
js
cmp
outsb
mov
fildl
ficompl
addb
mov
cmpsl
stos
or
jbe
ret
pop
out
rcl
xor
sbb
or
sub
jecxz
mov
mov
clc
ljmp
sbb
fldl
and
or
push
add
mov
jmp
add
jl
dec
dec
adc
fadds
xchg
mov
in
sub
jle
shr
loope
pop
sahf
mov
loope
ret
or
and
add
cmc
ja
jne
fdivp
push
test
adc
xor
add
mov
mov
jns
test
scas
lods
pushf
sbb
rcrb
fidivl
xorl
add
fsubr
xlat
aam
mov
push
fistps
jecxz
mov
icebp
jns
cli
daa
ret
mov
sti
pop
add
ret
pop
sub
add
icebp
pop
rcl
mov
incl
lock
in
pop
lcall
stos
je
mov
lret
pop
pop
xor
pop
inc
mov
loopne
mov
stc
shll
fcomi
adc
mov
stos
into
add
cmp
je
xor
js
ja
les
xchg
mov
cli
mov
add
mov
dec
lock
int
stos
add
test
ret
js
test
dec
dec
jo
lock
out
dec
xchg
ja
je
notb
push
adc
mov
or
xor
lcall
inc
mov
aad
pop
into
in
lock
stos
testb
inc
mov
cmp
dec
lock
test
or
movb
or
mov
or
or
std
movl
test
fucomi
xor
mov
xchg
or
lods
in
jmp
dec
pop
xchg
lret
stos
pop
cld
inc
or
mov
pop
sti
add
test
cmpsb
sbb
imulb
or
or
mov
pusha
cmpb
xor
in
jle
ret
lock
outsl
insl
add
jbe
inc
ret
add
or
dec
movb
pop
or
scas
pop
movsl
mov
leave
test
and
xor
stc
loop
sub
and
pop
test
int3
dec
mov
adc
inc
daa
hlt
xchg
shlb
jle
orl
clc
loopne
out
pop
test
lds
dec
std
jmp
or
or
sti
add
gs
popa
mov
sub
add
pushf
call
mov
xchg
mov
push
jmp
push
rcr
jl
cmp
scas
adc
pushf
mov
xor
cmp
movl
flds
les
push
or
testb
pop
lods
test
dec
mov
xchg
cmp
sub
int3
hlt
shrl
cs
sub
or
push
add
stos
xchg
sub
imul
or
mov
or
pushf
mov
repz
mov
add
lret
mov
outsb
roll
xchg
addb
mov
test
push
int3
cmp
call
dec
cmp
jl
iret
rcrb
jbe
xlat
iret
sub
xorl
js
rorb
test
inc
jno
push
dec
push
js
mov
cmp
sbb
cmp
call
dec
fucomi
sbb
loop
ja
and
sti
xchg
xor
mov
jl
in
leave
jnp
mov
pop
adc
push
push
inc
add
dec
pushf
dec
aas
mov
adc
js
sbb
jmp
dec
pushf
dec
add
ret
jp
sti
mov
mov
rclb
fsub
ljmp
jl
jnp
jae
push
dec
out
popa
add
mov
or
rcr
mov
out
xchg
add
cmp
mov
test
adc
jae
or
pusha
imul
repz
xchg
dec
rcrb
cmp
loop
mov
pop
fstps
sbb
loopne
leave
mov
mov
xor
and
or
ss
sub
add
stos
add
fmull
loop
mov
stc
sub
or
or
loopne
mov
xor
sbb
int
mov
repz
cld
push
outsl
xor
roll
lods
fisubl
testl
in
jl
les
jl
or
jge
lcall
mov
mov
inc
loope
xor
cmp
scas
notb
mov
sti
aad
mov
stos
lret
lock
jecxz
jno
sti
or
add
lock
sbb
into
mov
outsb
pop
mov
lds
mov
daa
jmp
jbe
mov
push
jl
fcmovne
or
cmp
inc
add
iret
in
fwait
dec
lods
push
enter
adcl
loopne
inc
mov
testl
repz
inc
adc
or
dec
mov
pop
mov
xchg
push
in
xchg
dec
jnp
dec
cwtl
inc
out
cwtl
into
mov
lahf
add
mov
mov
jnp
shll
repnz
cmp
push
movsl
dec
je
sbb
movsb
iret
and
mov
in
mov
outsl
test
enter
push
jns
lret
sti
dec
mov
and
jl
xor
xorb
aam
pop
in
jnp
sti
scas
xchg
js
dec
ss
cmpsl
jmp
sti
or
shll
scas
or
adc
in
xchg
mov
cmp
mov
cmpb
sub
in
mov
inc
ss
stc
je
sub
rol
mov
mov
out
ja
xor
lods
xchg
aaa
aaa
test
nop
cmp
loope
jae
adc
std
rolb
fidivl
push
add
jns
gs
cli
dec
rclb
idivl
imul
adc
push
cmpsb
cmpsl
jmp
jp
jmp
jns
mov
xchg
jg
cwtl
dec
add
lea
xchg
mov
inc
jle
cli
loop
and
sbb
push
dec
adc
outsb
cmp
add
cmp
and
xchg
scas
mov
add
inc
testl
shlb
int3
nopl
cmp
mov
fwait
int3
arpl
lret
mov
or
cmp
xchg
test
shlb
lcall
aad
lret
cmpsb
mul
sti
xlat
mov
push
in
inc
adc
in
mov
mov
mov
sbb
add
mov
shrl
mov
xor
lods
pop
sub
or
call
loope
rcll
mov
or
cmp
jp
enter
je
cmp
ja
dec
or
sbb
clc
pop
pop
pop
loop
in
jae
add
mov
repz
fwait
cld
aam
cmp
cld
loope
insb
cmp
repz
int3
adc
dec
loop
cli
sbb
xor
mov
jl
les
scas
push
pop
cld
imul
cmp
ds
mov
inc
mov
data16
or
dec
pop
in
cmp
mov
dec
ja,pn
in
popa
test
aaa
das
and
jne
push
sti
insl
addb
or
in
cmp
pop
dec
mov
cmp
fincstp
or
push
rolb
movsb
mov
bound
or
bound
pushf
or
xchg
inc
adc
mov
push
into
dec
dec
mov
jnp
jne
pop
mov
or
stc
pop
lock
or
psubusw
fcoml
xor
shr
lods
sbb
mov
insl
das
sub
cmp
adc
dec
pop
dec
loop
mov
cmp
cmp
dec
jnp
addb
js
mov
xchg
xchg
mov
into
lds
test
xor
iret
or
fdivl
das
imul
dec
pop
not
popa
imul
xchg
fbstp
mov
jg
cld
nop
sub
inc
push
insb
add
icebp
or
inc
sti
clc
mov
pop
std
nop
mov
sar
repz
rcll
insb
and
daa
iret
mov
outsl
sub
insl
out
fxch
gs
push
or
in
push
scas
add
insl
shlb
bound
sub
iret
or
ret
or
add
cmpsl
mov
or
adc
scas
lret
mov
pop
fs
xor
or
jl
or
xchg
add
add
lea
fnstsw
mov
dec
insl
lods
enter
mov
cli
stc
or
add
test
or
sbb
xlat
fwait
push
stos
mov
addl
or
add
push
popl
mov
sub
mov
or
in
pusha
cmc
cwtl
movsl
add
movsl
jp
sarb
test
insl
or
in
inc
mov
or
out
test
pop
test
test
insl
lret
inc
dec
shll
lock
inc
fnsave
sbb
enter
or
mov
xchg
jl
andb
movsb
in
cmp
or
inc
mov
repz
movsb
add
mov
fdiv
mov
xor
addr16
hlt
cmp
enter
js
jno
stc
sub
testb
lret
lods
lret
cmp
xor
lret
inc
leave
js
or
xchg
mov
and
in
cmp
lret
xchg
push
stos
add
lahf
rclb
pop
rorl
jl
in
add
lea
jle
jle
insb
mov
ds
vmwrite
jno
lea
sahf
movsl
pop
add
lret
shll
mov
mov
mov
mov
mov
cmc
call
movsb
enter
add
and
inc
pop
pop
mov
inc
mov
mov
push
inc
roll
pop
leave
mov
repz
sbbl
jecxz
out
sti
cmpsl
dec
dec
fwait
popf
push
jbe
jb
pop
fwait
rcll
add
ljmp
mov
mov
xlat
outsb
adc
sub
mov
pop
data16
push
dec
xchg
mov
cmc
jbe
mov
pop
add
ds
gs
jnp
sub
sub
dec
adc
inc
adc
rolb
mov
mov
jbe
mov
loop
xchg
mov
stc
enter
mov
shr
cmp
pop
cmp
mov
jns
jb
cmp
fcmovnbe
xchg
mov
shr
sub
pusha
mov
cmp
std
jmp
int3
outsl
dec
ja
aaa
jb
aad
sarl
or
jns
fwait
rol
mov
mov
rcrb
push
xor
ja
or
std
insb
out
sti
jp
jecxz
mov
test
and
je
fdivrp
ret
lret
xorl
rcr
xchg
inc
movsb
shr
jmp
dec
pop
pusha
sarb
jl
jmp
lock
stos
enter
fadd
icebp
ds
pop
mov
pushf
sub
or
int
or
lret
add
loope
and
lods
jmp
xor
js
push
add
fadd
daa
testl
xchg
xchg
daa
popf
adc
dec
mov
movb
out
sbbl
adc
shrb
push
dec
sub
aad
inc
test
dec
lds
push
jmp
jb
shll
pop
mov
adc
mov
pop
or
movsl
test
sti
mov
sbbl
push
dec
cmp
incb
fnsave
insl
mov
scas
jmp
pop
mov
mov
out
add
sub
jmp
popf
lahf
xor
or
add
out
enter
sub
add
fdivr
dec
scas
adc
mov
add
cli
pop
fsubl
sar
scas
in
pop
pop
or
lods
inc
lods
push
iret
imul
xor
ds
dec
fcompl
outsb
jg
clc
xor
and
ret
fmul
ljmp
xor
and
jecxz
lret
mov
insb
aaa
clc
dec
enter
or
jno
leave
cmp
xchg
hlt
enter
ja
sarl
inc
mov
add
add
mov
nop
jl
or
loop
sub
es
sbb
cmc
loope
mov
fs
cmpsl
lcall
push
aad
sbb
inc
je
jbe
push
lock
push
outsl
dec
pop
adc
stc
iret
lock
mov
out
ret
test
add
inc
cmp
and
sbb
add
and
fsubs
jae
ret
dec
push
mov
int3
js
mov
jl
dec
mov
aam
mov
or
sbb
jne
xor
test
mov
push
inc
sub
daa
xchg
or
ret
js
mov
rcll
lods
adc
mov
lods
iret
fnsave
sbb
ja
inc
xchg
dec
arpl
mov
lods
std
fildll
cmp
xchg
shrw
jne
lods
mov
add
cmp
out
or
or
int
sbb
dec
pop
stc
mov
in
stc
ror
sub
mov
mov
xor
test
add
out
dec
mov
sbb
insb
cmp
fistpll
or
loop
sti
clc
scas
xchg
cmp
lret
push
mov
jp
mov
cwtl
adc
outsb
jl
adc
stc
ret
add
jnp
insl
or
leave
ficoms
gs
and
mov
mov
mov
test
inc
outsb
inc
mov
stc
aam
pop
and
jb
bound
into
mov
lcall
shll
push
in
rcrb
jmp
pop
jp
push
ds
mov
fisttpl
cmp
sub
mov
stc
pop
xchg
das
push
cld
xor
out
repnz
or
jns
dec
push
ljmp
loop
repz
cld
pushf
ret
add
add
mov
pop
sarb
lock
mov
add
inc
adc
shrb
mov
in
push
shrb
insb
cld
mov
sbb
or
shrl
dec
lret
int3
lods
into
mov
nop
mov
loop
test
stos
or
out
rorl
mov
ljmp
aam
iret
lea
xchg
jno
wbinvd
inc
dec
jmp
mov
pop
mov
lock
or
inc
sub
cmpsl
fwait
testb
add
int3
idivb
fsubs
cs
inc
push
dec
jnp
mov
outsl
dec
xor
movsl
test
test
in
or
inc
pop
lods
mov
sub
mov
jo
inc
cmp
mov
in
inc
test
xchg
ds
testl
mov
pop
dec
add
mov
out
jl
jb
adcb
add
push
fsub
imul
xchg
lret
xor
sarb
mov
pop
mov
inc
mov
popf
pop
mov
mov
or
mov
bound
addr16
or
cld
xor
out
adc
fisubs
lahf
aas
dec
adc
mov
mov
stos
mov
xchg
and
cli
fstps
hlt
jnp
push
xchg
clc
push
dec
cmp
or
or
insl
mov
addr16
cli
mov
jae
xor
adc
mov
or
aas
or
clc
push
arpl
inc
jge
xor
jle
lret
iret
int3
lret
cmp
fcmovnu
aaa
add
clc
sbbb
fldl
sub
lcall
stos
jo
and
add
int3
es
jp
sahf
cli
xchg
aam
lret
or
inc
pop
je
xchg
in
xchg
aad
ror
insl
insl
call
orl
mov
insl
mov
hlt
mov
clc
popa
fsubrs
mov
cwtl
cmp
pop
lods
movswl
loop
sbb
or
xchg
jae
or
mov
xchg
jb
mov
out
dec
xor
mov
push
shll
outsl
jecxz
idivb
arpl
test
aad
dec
jne
in
dec
push
enter
cmpl
cmp
dec
dec
sbb
add
or
pop
or
and
movsl
rcll
shll
jmp
pushf
aad
test
cs
mov
pop
loopne
test
jmp
clc
mov
les
fidivrs
clc
es
push
xchg
sub
mov
loopne
lods
js
lods
ret
negl
push
stos
or
lret
xor
sbb
sbb
fldl
mov
add
in
ljmp
or
hlt
adc
shrb
jg
hlt
loop
imul
push
loopne
lret
hlt
lret
xor
ret
or
les
imul
ds
jo
xchg
cmp
dec
push
stos
add
ret
cmp
mov
jge
clc
fs
fildll
data16
jecxz
push
sbbl
ds
jecxz
inc
adc
add
lock
lahf
movsl
pusha
mov
test
dec
mov
jb
inc
or
jne
push
stos
aam
shr
mov
pop
std
push
fisttpl
mov
hlt
ret
fisttpl
ret
dec
jp
push
push
lea
icebp
adc
cmp
mov
lahf
lret
lods
adc
addr16
dec
add
mov
and
ret
cmp
testl
insl
lret
dec
add
inc
iret
pop
jl
dec
mov
arpl
mov
jl
imul
mov
sub
xorl
jno
fs
mov
jnp
cmp
jns
jbe
sub
test
ret
orb
sub
ja
add
ja
stc
cmpsl
jb
add
cmp
or
pusha
add
sub
xchg
shrl
push
sbb
in
cmp
push
jmp
or
xchg
fisubrs
ret
inc
dec
sbb
sbb
and
xchg
les
leave
int3
rorl
adc
mov
std
xor
jns
jmp
movsb
jmp
imul
out
je
imul
int3
test
jp
dec
ret
pushf
notl
movsl
loopne
add
in
decb
sbb
mov
enter
movl
les
push
insl
insb
adc
stos
mov
add
push
or
rcll
jecxz
ja
mov
aad
or
std
cmp
repz
adc
push
pushf
push
pop
mov
shlb
mov
lcall
movsb
call
or
std
scas
push
mov
push
mov
ss
test
rcrl
mov
or
sub
loope
pop
das
jnp
sti
mov
sar
inc
js
lock
loop
push
ret
push
in
add
lcall
mov
ljmp
in
neg
mov
in
pop
cmp
push
outsl
ffree
fisubs
push
jnp
lods
push
mov
scas
adc
pop
leave
or
cwtl
outsl
sbb
or
insb
or
mov
push
repz
ret
loope
xor
jmp
push
xlat
mov
mov
mov
leave
cs
into
mov
mov
in
bound
outsl
imull
sbbb
ds
andl
lds
jno
or
scas
popf
mov
jmp
jbe
or
sub
or
mov
pop
adc
aaa
stc
repz
insb
push
out
ret
out
mov
fmul
test
repz
mov
das
mov
push
mov
mov
mov
dec
mov
inc
xchg
lret
xlat
aas
sti
mov
jmp
roll
adc
clc
dec
pop
cld
dec
jle
sub
mov
in
xchg
or
xor
sub
fisttpl
jbe
xor
js
inc
or
push
sbb
lods
push
jnp
daa
dec
pop
insb
pop
lret
leave
scas
cmp
or
cmp
dec
or
push
and
call
stos
adc
testb
out
fsubrl
ret
mov
lods
mov
push
push
pushf
xchg
mov
ja
mov
sbb
add
out
lods
add
lret
mov
dec
sar
jp
and
jge
popl
add
jl
jge
les
pop
in
loope
ret
call
lods
sbb
or
dec
dec
ret
adc
pop
ja
mov
xchg
push
cli
cmp
sbb
fisttpll
cmp
inc
lods
push
cmpb
rcll
xchg
mov
idiv
sub
xlat
adc
movhps
push
nop
mov
mov
pop
fldenv
jge
ret
and
ror
add
or
dec
cmp
pop
push
arpl
imul
in
cmpsb
nop
mov
in
push
pop
roll
mov
jle
cmc
packuswb
out
or
cmp
fstpt
movsb
inc
stc
test
js
movsl
fsubl
or
mov
hlt
cmpsl
orb
inc
jp
or
sbb
push
sub
add
adc
out
sbb
inc
insl
outsb
hlt
jl
jmp
xchg
lahf
stos
cld
mov
repz
jb
mov
or
dec
push
lods
fs
imull
out
mov
aam
or
mov
cmp
xchg
pop
leave
jl
inc
lock
test
ret
or
push
dec
popa
int3
mov
xchg
dec
popa
mov
xor
add
xchg
leave
ret
adc
mov
xchg
mov
or
enter
or
ret
cmpsl
push
or
jecxz
fisttps
hlt
cmp
dec
sti
fucom
pop
push
or
dec
fsub
into
push
sbb
sbb
pop
pop
xlat
fldenv
filds
dec
mov
push
mov
scas
jns
inc
and
call
leave
shrb
rcr
call
cltd
movsb
or
dec
jmp
dec
insl
mov
dec
cmp
fimuls
dec
lret
nop
pop
cmp
int3
das
or
aas
dec
cmp
inc
ja
or
xchg
mov
aaa
leave
jmp
push
adc
fmull
mov
xor
dec
mov
scas
or
mov
jmp
xchg
out
lods
testl
or
test
int
outsl
sub
or
push
stos
dec
or
push
pushf
xorb
int3
aaa
mov
stos
jnp
push
test
incb
ret
jecxz
mov
fdivp
cld
cmp
mov
adc
andl
fidivs
or
notb
std
jns
mov
aad
push
push
dec
aas
pop
mov
aad
stos
jle
hlt
cmp
jl
dec
or
push
je
lret
inc
push
leave
addb
imul
leave
sti
std
add
push
test
aam
clc
and
sbb
cmp
cmp
cmp
cmp
lods
in
cld
cs
ljmp
mov
push
les
dec
or
cmp
xchg
stos
dec
xchg
push
ret
test
mov
push
and
arpl
mov
fdivrs
push
dec
sub
jb
jmp
repz
xlat
lcall
out
rcl
push
cmp
stc
inc
shrb
imul
cmp
addr16
cmp
mov
sbb
fdivr
divl
or
leave
mov
int3
ret
filds
xlat
sub
add
insb
cmpsl
pop
lock
lods
or
sarb
fwait
pop
xchg
dec
sti
push
jle
pop
outsl
cmpsb
push
add
push
mov
xor
jbe
aaa
ja
enter
cmp
imul
enter
add
cld
or
shl
fcomps
mov
sbb
mov
mov
add
iret
pop
int3
jo
pusha
or
shlb
nop
adc
stc
pop
rcl
fistpll
fisttps
je
add
mov
add
add
je
in
mov
or
mov
mov
xlat
xor
inc
testb
sbb
jmp
jmp
mov
mov
mov
add
mul
dec
cmp
hlt
int
cmp
pushf
xchg
dec
movsl
or
sub
pop
and
xchg
out
adc
xor
cmpsl
or
pop
or
add
std
cmp
push
add
or
sahf
inc
ret
ret
inc
push
cltd
mov
xorb
movsb
test
jl
fildl
sahf
and
lcall
test
xchg
lret
add
hlt
fistpl
clc
mov
test
xchg
inc
mov
mov
das
fnstcw
out
call
lods
test
cmp
add
cmp
out
xlat
stos
add
cmp
loope
add
lahf
movsb
out
cmpsb
xor
test
mov
lods
shr
in
sahf
pop
jl
jle
cmpsl
jg
cmp
out
ficompl
in
jl
in
decb
out
inc
loop
cmp
out
jae
cmc
jmp
lds
mov
push
out
les
cmp
in
test
faddl
cld
scas
jns
mov
push
fldcw
add
cmp
mov
sti
cs
lods
push
lret
cwtl
add
js
pop
fs
or
push
xor
pop
and
mov
mov
add
shll
pop
fisttpl
int3
sub
int3
outsl
or
jmp
cmp
mov
adc
sbb
mov
cwtl
add
push
mov
jae
test
insb
rep
imull
sti
jmp
mov
or
push
and
sub
add
or
pop
or
jns
or
xor
aas
mov
fisubs
xchg
imul
xor
ret
hlt
mov
lret
ds
cmp
das
xchg
cmp
mov
js
adcl
jp
and
cmc
push
push
cmp
stc
clc
scas
or
sub
rclb
ds
imulb
sub
imul
dec
repnz
out
ja
dec
pusha
jge
or
sub
ja
fcoms
push
mov
add
or
push
aas
fisttpll
sti
lret
stos
lcall
aad
dec
and
sub
or
test
jp
cmp
pushf
movsb
test
mov
out
dec
pusha
jp
les
jnp
mov
in
push
ret
repz
add
lcall
add
dec
test
sbb
mov
test
enter
mov
mov
shrb
sahf
rcr
fistpl
icebp
sysret
sub
or
mov
add
sbbb
fisttpl
lods
push
xchg
mov
sbb
pop
sub
pop
in
pushf
aad
push
xchg
jmp
arpl
insb
sub
xchg
fnsave
cmp
pop
lret
inc
or
mov
sub
push
add
enter
lret
fcmovne
cmpl
mov
enter
add
cld
sarl
scas
shll
mov
aad
dec
sub
sbb
xchg
cmp
scas
jno
sub
or
mov
in
lods
cmovb
mov
xchg
ret
enter
adc
stos
int3
leave
sbb
sub
cs
add
dec
lds
jno
xchg
push
leave
lret
mov
test
lret
int
mov
push
dec
ror
movsl
std
mov
xlat
popf
loop
push
adc
rorb
xchg
sahf
mov
mov
fscale
fld
ret
jmp
add
fistpll
mov
imul
sub
clc
fucomip
addr16
scas
add
sub
in
dec
dec
pop
test
repnz
push
les
mov
mov
in
mov
test
or
lret
aad
stos
and
mov
into
ret
pop
cld
or
imul
xchg
xchg
inc
jmp
inc
cmp
add
int3
lcall
cmp
sbb
scas
inc
stos
adcb
fisttpl
jl
push
dec
inc
xor
cmpsb
add
sar
jg
in
cwtl
xchg
cli
push
add
mov
stc
call
pushf
dec
jnp
adc
movsb
stos
jl
aaa
mov
mov
adc
mov
add
cmpl
adc
out
mov
pop
jnp
or
or
ss
and
sbb
mov
xchg
jmp
subb
push
imul
or
xor
mov
rol
jne
mov
es
arpl
pop
lock
dec
sbb
jg
pop
cmp
cld
flds
mov
sbbl
xor
aam
cltd
xchg
pusha
inc
inc
leave
push
outsb
out
test
add
mov
add
mov
scas
xor
mov
insb
popa
subb
xor
ja
out
movsl
fmull
in
jle
shrl
or
cmp
shrl
sbb
push
iret
ds
fmull
jp
mov
lahf
std
sub
fstpl
in
fcoml
push
add
dec
fidivl
mov
and
mov
xchg
addr16
inc
cmc
hlt
lods
scas
lcall
mov
mov
sbb
popf
or
int3
pop
sub
jl
rcll
jecxz
adc
jmp
pop
test
in
lods
loop
mov
dec
daa
cmpsl
inc
pop
cwtl
fucomp
xor
inc
outsb
cltd
jp
xchg
cmp
mov
sub
aam
les
in
mov
aam
jmp
lret
push
call
push
sub
push
mov
sti
js
fmull
sub
lret
popf
popa
jmp
adc
push
into
test
sbb
je
xor
xchg
lods
jne
add
push
dec
fbstp
cltd
jb
dec
add
mov
push
int3
or
test
stos
push
aaa
xchg
dec
lds
xchg
lahf
or
push
inc
cltd
dec
shlb
and
fcmovb
inc
or
mov
fs
insl
ret
movsl
pop
imul
or
mov
subl
cmp
cmp
fidivrl
push
push
push
dec
test
mov
xrelease
das
mov
inc
jp
cmp
int3
in
add
push
xor
sti
ret
jns
pop
aam
push
add
out
lock
mov
scas
sti
mov
mov
mov
rcl
scas
cmpsl
fnstcw
xor
add
lcall
roll
cmpsl
fdivrl
sub
lock
rorl
bound
inc
mov
mov
adc
fbld
push
mov
or
xor
inc
scas
shlb
inc
pusha
add
lods
insb
add
adc
sub
inc
push
sub
and
aam
shl
cmpsl
push
cld
fmulp
loopne
cmp
shl
cmp
xorl
movsb
rolb
mov
ret
jns
jno
jae
cmpsb
roll
call
sub
loope
dec
push
std
or
xchg
loopne
inc
out
nop
cltd
jl
imul
mov
addr16
pop
std
loopne
imul
dec
mov
fucom
sarb
ss
mov
cwtl
fwait
test
clc
cmp
jbe
fnstcw
mov
xchg
xor
mov
mov
mov
ss
fs
cmpsl
scas
push
mov
rolb
inc
mov
cmc
push
int3
xchg
jb
mov
or
xchg
push
scas
stc
ljmp
daa
mov
mov
push
fisubrs
rcll
mov
popf
idivb
ret
ret
adc
shll
xchg
pop
daa
enter
lods
fs
iret
mov
jo
jg
jbe
repnz
rcll
mov
ret
rorl
test
in
daa
shlb
or
mov
xchg
xor
mov
mov
push
push
shr
push
ss
outsb
sbb
jns
in
inc
js
adc
and
and
cmpsl
mov
pop
fndisi(8087
mov
sub
mov
loopne
sub
xchg
inc
jmp
lock
les
jbe
hlt
lods
test
cmp
dec
mov
mov
mov
mov
mov
cmp
and
adc
dec
int3
cmp
rcl
mov
sbb
test
mov
xchg
mov
or
xchg
xchg
clc
int3
shll
or
jmp
hlt
lods
jo
shlb
cmp
add
cmp
outsl
imul
les
cld
mov
test
push
jne
lock
mov
or
cmp
jnp
push
std
in
dec
hlt
lock
jns
mov
jl
mov
pop
mov
mov
or
lcall
xchg
dec
repz
daa
jo
inc
jmp
outsl
mov
inc
mov
icebp
test
pop
out
jmp
hlt
mov
or
ljmp
inc
add
adc
divb
in
inc
sub
push
mov
jl
insl
popa
add
sbb
sbb
lods
ret
call
call
xor
mov
cmc
push
out
sub
iret
inc
sti
inc
shll
icebp
aaa
jbe
daa
jo
leave
dec
or
mov
out
jp
or
rorb
lea
dec
les
sbb
cmpsb
mov
std
or
dec
stc
lods
jl
in
adc
mov
or
je
xor
mov
add
lods
lods
shr
ficoms
push
icebp
stos
enter
into
sti
pop
jbe
or
add
call
mov
outsl
repz
add
or
mov
imul
repz
clc
test
lahf
rorb
xor
sub
add
xchg
lds
sub
or
std
icebp
pop
test
outsb
jmp
add
gs
cmp
fmuls
or
int3
je
test
sar
xchg
xchg
fildll
iret
lods
add
inc
and
add
shlb
decl
dec
out
pop
jo
mov
dec
popl
sub
clc
stc
mov
pop
and
rcrb
jg
push
mov
mov
mov
sbb
sbb
cmp
inc
je
out
xchg
in
jb
mov
orb
mov
jecxz
or
shll
lret
or
repz
adc
add
cmp
or
or
xchg
out
notl
mul
add
sub
ds
lock
jnp
add
xchg
xor
repz
cli
repnz
pop
pop
js
inc
add
jnp
iret
into
lret
stos
out
add
pushf
xor
dec
lds
lock
fmull
dec
pop
out
mov
cmpsb
jg
xchg
add
sub
aaa
ljmp
rcrl
or
lret
cmp
push
mov
popa
scas
jle
dec
repnz
rolb
popf
fbld
cmc
stos
cmp
roll
in
test
push
iret
movsb
xlat
lods
fists
cmc
roll
cmpsl
loop
add
push
push
add
sahf
aad
jle
pop
dec
sub
xchg
fwait
cmp
inc
loop
xor
ja
lret
gs
and
or
mov
in
sbb
into
or
std
mov
jl
lret
inc
xchg
out
or
mov
mov
arpl
add
adc
out
movsl
int3
sti
ret
cli
test
out
adc
push
test
repnz
push
cmp
or
pop
cs
dec
ret
mov
cmpsb
push
repnz
ret
clc
or
mov
xchg
aam
add
js
xchg
dec
jge
pop
mov
ds
mov
jo
clc
std
movsb
pop
enter
lret
dec
fidivs
inc
jle
pop
dec
shll
mov
imul
std
test
scas
sub
sub
xchg
cmp
js
xor
inc
jmp
xchg
rcrl
fisttpll
jmp
mov
loop
cld
push
lods
adc
gs
inc
jmp
out
lock
and
inc
daa
push
lret
scas
xorb
cmp
push
jp
faddl
mov
add
aam
xchg
enter
jno
iret
sahf
stos
stos
adc
lods
pop
cli
scas
inc
sub
cmp
ret
or
test
pop
hlt
jb
aaa
mov
xchg
jb
inc
adc
stos
lret
divl
push
mov
scas
add
add
hlt
ffreep
nop
cmp
cmpsl
mov
jl
mov
or
add
stc
push
inc
repnz
test
aam
scas
add
add
dec
jbe
rcrl
add
or
xor
out
negl
pusha
mov
outsl
cli
in
out
jo
push
js
cwtl
pop
jp
mov
xorb
pusha
aaa
or
push
pop
fsubrl
mov
sbb
cmp
dec
cmp
mov
mov
je
push
xlat
stos
das
cld
sub
jp
aas
bound
adc
sbb
lret
int3
fwait
inc
shrl
mov
xchg
in
push
imulb
outsb
cmp
addr16
inc
dec
out
nop
add
cmp
mov
fwait
stos
lds
rorb
sbb
call
pop
pop
xorb
xlat
push
add
pop
cltd
pushf
mov
bound
dec
mov
xchg
sti
inc
xor
mov
pop
dec
inc
jecxz
pop
scas
shr
test
leave
or
sahf
add
out
mov
test
mov
lods
out
xor
xor
dec
movsb
fadd
data16
mov
or
add
cmc
lret
shll
pop
lcall
stc
repz
mov
mov
popa
mov
mov
add
inc
into
fisubs
dec
sub
jp
mov
imul
iret
arpl
test
pop
ds
shrl
inc
mov
sub
decl
popl
inc
inc
inc
shlb
arpl
mov
jmp
push
sarl
mov
push
mov
outsb
shrl
mov
xchg
test
push
aaa
mov
or
pop
add
movb
pop
or
enter
dec
lock
and
add
pop
test
jl
mov
push
dec
rcrb
cli
inc
lods
popl
data16
test
cmpsb
int3
loop
add
fsubrs
cmp
pushf
aad
sbb
or
mov
adc
rcrb
mov
mov
cmp
fs
cmp
jle
add
ret
push
ret
scas
test
mov
add
push
push
in
mov
jp
adc
ja
push
or
inc
cmp
jmp
cmp
loop
faddl
sbb
push
sub
or
mov
stos
cmp
mov
mov
lcall
pop
xchg
mov
scas
cvtpi2ps
pushf
pusha
inc
adc
and
push
lret
sbb
ja
mov
je
pop
shl
scas
sti
shl
adc
and
cmp
pop
imul
fisttps
mov
jmp
mov
xor
stc
push
mov
or
ljmp
sub
out
inc
jl
sub
jns
push
test
add
jl
enter
clc
std
test
outsb
xchg
sub
sbb
mov
sar
add
int3
dec
mov
jp
fnstcw
popf
mov
lods
lock
cmpsl
lret
push
jo
xor
jns
mov
leave
cmp
sti
leave
cmp
stc
add
add
jge
add
shlb
add
fildl
inc
mov
jecxz
mov
xchg
movsl
pop
mov
mov
in
cmp
jp
sbb
jmp
lea
or
jecxz
pop
inc
es
jmp
add
lods
mov
mov
xchg
pushl
stos
jmp
std
or
xchg
sti
inc
stos
jmp
fld
hlt
clc
or
mov
dec
loopne
add
lods
push
dec
or
cmc
xchg
push
mov
repz
pusha
repnz
add
lods
mov
in
out
or
pusha
out
or
add
mov
mov
jmp
jbe
ljmp
jle
call
out
xchg
out
mov
and
push
and
and
loop
jl
fndisi(8087
hlt
pop
add
imul
hlt
data16
imul
hlt
outsb
outsl
add
iret
shlb
mov
cli
inc
test
cmp
push
int3
js
cmp
cmpsb
cmpsl
call
cmpsl
mov
hlt
sub
add
xchg
das
pand
push
lahf
or
push
or
dec
in
shll
or
rcrl
dec
jl
jo
add
push
and
fucomi
mov
xchg
mov
in
dec
mov
or
ss
push
test
sbb
dec
push
pop
loopne
scas
mov
or
in
mov
cmp
jmp
nop
jecxz
push
adc
clc
in
outsl
mov
popf
xchg
sbb
lahf
cmp
mulb
scas
shlb
push
stc
mov
push
xchg
lret
sub
std
cmp
xchg
pop
leave
jbe
stos
in
sti
popf
pop
movsw
jp
in
or
dec
loop
sti
stc
push
rcrl
test
push
mov
dec
sarb
inc
dec
mov
loop
hlt
sahf
stc
sahf
sub
xor
xchg
or
jmp
sahf
aad
out
inc
cltd
shlb
xchg
scas
sti
jl
out
push
dec
push
jne
add
enter
inc
push
inc
shll
lahf
scas
sahf
jmp
or
jmp
cmp
test
dec
cli
ud2
arpl
dec
jmp
mov
inc
fnstcw
add
dec
mov
cmpsl
insb
leave
dec
pop
scas
dec
mov
mov
and
mov
fwait
mov
cld
adc
or
ss
add
mov
enter
sbb
aaa
iret
lcall
stos
jg
jne
loope
hlt
push
and
pop
mov
fldt
pushf
daa
adc
mov
popa
mov
jno
pop
mov
jbe
push
or
repz
sub
cmp
daa
mov
into
sti
cmp
nop
clc
cmp
ret
and
in
aad
sub
add
cltd
int3
pop
mov
xor
cmp
dec
fistps
rorb
shrl
cld
bound
jmp
dec
cmp
mov
jnp
add
cltd
js
rcl
paddd
pop
xor
or
shll
inc
lahf
lret
lea
js
mov
jbe
ret
aam
sub
mov
xchg
lret
xorl
add
cmp
adc
xchg
xor
lret
sub
cltd
loope
mov
arpl
in
and
cmp
testl
xchg
jl
mov
sub
outsb
insb
dec
xchg
stc
dec
pop
adc
adc
push
ror
subb
push
jl
scas
fistpl
cs
lret
pop
icebp
std
mov
fnstsw
sbb
mov
test
pop
outsb
pop
mov
outsb
add
popa
mov
ja
mov
sub
or
xchg
jmp
in
ret
fnstsw
loopne
mov
mov
jg
pop
add
and
add
xchg
or
dec
hlt
inc
in
sbb
push
jb
inc
test
mov
dec
lret
dec
lock
je
test
sahf
inc
add
pop
mov
in
mov
dec
cmp
movb
or
mov
dec
mov
xchg
js
subl
push
subl
nop
loopne
ja
mov
jo
lods
loop
add
or
mov
lods
imul
lods
ja
xor
mov
cmc
or
cmp
mov
mov
cmpsl
shrl
add
mov
aam
rol
lret
xchg
std
or
lods
bound
dec
jb
mov
cmp
jb
les
repnz
add
jmp
or
les
add
orb
push
add
lds
inc
push
decl
or
mov
inc
in
rorb
stos
jmp
push
push
hlt
sti
or
or
cli
or
or
or
clc
lods
add
lods
imul
sub
cmc
add
aad
cmp
or
add
repnz
rcr
or
or
or
out
mov
std
out
jge
xchg
mov
push
xchg
imul
stos
jmp
in
pusha
jo
or
add
pop
addr16
out
mov
imul
movsl
sub
jmp
push
call
push
cmp
add
out
jnp
mov
lods
mov
sti
cmpb
std
jp
jl
fndisi(8087
hlt
cmp
mov
loopne
std
cli
xchg
jl
fcmovnu
hlt
mov
or
mov
cmp
cmpsb
cmp
mov
mov
fildl
dec
mov
rclb
int3
jo
test
mov
ret
addr16
rorl
add
mov
subb
loop
in
add
pop
xor
cwtl
insb
mov
cmp
or
dec
ret
out
add
and
push
mov
or
or
push
aad
mov
mov
popa
ss
fld
orl
ljmp
cmp
add
aaa
into
dec
fildl
mov
inc
hlt
or
out
movl
mov
mov
ficompl
or
enter
or
stos
push
out
dec
mov
loop
test
push
cmpsl
jl
push
mov
shrl
adc
repz
dec
inc
cwtl
mov
push
push
stos
dec
adc
cmp
lods
or
leave
fisttpll
lods
add
loopne
cld
or
cmp
sti
jae
orb
std
pop
or
sub
push
push
mov
sub
or
lods
adc
mov
pop
inc
or
add
lods
or
std
mov
cmp
adc
sub
sub
add
push
cmp
in
fsubrl
stos
leave
sbb
stos
scas
push
jne
stc
inc
pop
jns
nop
loope
mov
scas
dec
cmpb
aam
push
in
fwait
lods
insb
ljmp
cmc
or
into
movsl
fdivr
or
jmp
movsb
dec
adcb
test
fildl
sbb
jno
ja
hlt
lret
jnp
xor
inc
int3
mov
dec
lods
cmp
aad
out
inc
daa
mov
hlt
repz
dec
mov
mov
mov
lock
xlat
mov
mov
push
ret
lret
cmpsl
rorb
lahf
adc
les
xchg
jmp
and
stos
or
aaa
mov
shll
jbe
sub
dec
ja
pusha
or
dec
or
add
sahf
repnz
mov
mov
loop
jl
mov
cmp
adc
sbb
out
pop
test
lahf
ret
sbb
divl
lods
or
cwtl
movsb
fwait
add
dec
in
cmp
test
ret
pushf
mov
xchg
xor
pop
mov
insl
leave
xchg
in
jge
mov
jp
ja
xchg
sti
jmp
cmp
fcmovnb
sbb
xchg
icebp
icebp
fcomi
fistpl
das
mov
in
mov
or
cmpsl
add
outsl
test
mov
mov
insl
out
push
adc
in
jge
mov
pop
test
xchg
cmp
or
mov
add
mov
sub
mov
ljmp
mov
adc
push
xor
xchg
push
mov
xor
add
or
jp
push
mov
pop
out
icebp
sbb
int
push
test
push
and
mov
xchg
xchg
cmp
std
rcr
pop
jge
aam
mov
aaa
mov
call
jne
push
aam
and
inc
clc
sti
jmp
mov
add
lret
mov
xchg
lods
int3
mov
daa
or
pop
push
test
fmul
out
mov
push
and
mov
mov
cmpsb
xor
int3
fcmovnbe
lods
arpl
xchg
jno
fldcw
pop
std
pop
scas
or
or
pop
movsb
and
dec
add
lret
mov
popa
cmp
fisttpl
adc
jbe
popf
sbb
dec
inc
dec
jmp
cmpsl
jne
insb
sbb
mov
inc
sbb
inc
iret
scas
fldcw
inc
push
pushf
mov
xchg
mulb
jecxz
sub
xchg
pop
inc
jmp
add
subb
xor
push
jmp
fadd
pop
cmp
inc
into
sbb
dec
sub
sbb
pushf
movsb
jle
cmpsb
or
int3
out
jo
fcmovnb
sbbb
dec
test
in
xchg
xchg
mov
out
enter
std
cmpsb
movsb
cmpb
popf
mov
popa
mov
fidivrs
cmp
pusha
pop
sub
std
in
dec
js
mov
in
jb
and
jmp
test
shll
adc
cli
ds
outsl
lahf
xchg
scas
adcb
in
dec
ds
into
lods
out
inc
jmp
mov
xor
std
jnp
cmp
out
mov
sbb
mov
jmp
fs
jmp
rclb
jns
sub
cmp
ss
lret
aam
sahf
mov
insb
or
inc
outsb
repnz
rcrb
push
adc
add
jne
int3
lock
add
in
jne
into
addr16
cld
add
and
xchg
hlt
rorb
dec
push
or
mov
pop
fdivl
add
or
cli
add
dec
into
lock
testb
mov
xlat
sub
lock
lds
out
xchg
fiadds
sti
lock
xchg
sahf
std
dec
out
stc
lock
jo
lock
outsl
push
int3
pop
lea
das
or
adc
lret
inc
roll
std
dec
push
adc
nop
or
lock
jnp
adc
into
adc
outsl
xchg
inc
mov
jbe
mov
mov
mov
stos
hlt
dec
lock
xor
push
daa
sbb
inc
les
insb
jne
jns
in
mov
std
mov
push
push
fisttpll
test
pop
inc
aad
push
insb
mov
xchg
cmpsb
sbb
jmp
nop
pop
push
sbb
push
sub
aam
lret
xchg
mov
stc
lods
and
xchg
cs
or
mov
aam
inc
fistpll
iret
mov
add
cmpb
enter
pop
test
std
mov
pushf
iret
dec
jecxz
aaa
cmp
roll
mov
sub
imul
pop
pop
into
lock
jmp
shlb
push
dec
inc
xchg
shrb
sub
in
vmovaps
inc
or
jne
icebp
cmp
fs
jmp
hlt
add
les
jl
xchg
dec
add
xlat
mov
sbb
push
adc
cmp
pop
in
or
cltd
loopne
xchg
pop
sbb
jl
popf
inc
aaa
out
adc
rorl
jbe
outsb
shll
loopne
jnp
pop
xlat
xor
clc
sbb
add
hlt
lods
out
out
cmp
cli
add
in
mov
insl
push
and
xlat
into
cmp
push
jp
loope
test
lods
lcall
ljmp
data16
fcmovnu
adc
jmp
xchg
cwtl
es
xor
fisttps
jae
sti
dec
xchg
mov
add
or
or
imul
testb
cmc
dec
shrl
mov
jl
jb
fisttpl
jne
jl
les
push
adc
ss
mov
jno
outsb
test
jmp
dec
lret
in
scas
mov
scas
mov
or
sbb
jae
fiaddl
mov
sub
outsb
mov
adcb
stos
cmp
jp
cmc
jae
pop
pusha
lret
int
es
out
mov
cmp
mov
pop
mov
daa
insl
daa
dec
or
cmp
jo
lret
inc
pop
mov
jnp
test
addr16
or
fdivrp
scas
cmpsb
js
stc
inc
mov
xchg
shr
jmp
dec
mov
rorl
inc
mov
sub
dec
loope
ja
data16
adc
cmp
decb
add
mov
pop
mov
int3
test
scas
push
fists
insl
or
mov
mov
insl
lock
inc
push
jb
jo
or
xchg
aaa
jl
insb
inc
lods
adc
fildll
sub
dec
rclb
mov
xchg
mov
sarl
dec
jae
pop
xor
ret
pop
pop
adc
or
xchg
sub
xchg
xchg
lea
int3
jns
and
lret
or
fcmovnb
test
add
and
cmp
rcll
mov
add
jnp
mov
push
shll
pop
jae
push
and
sti
mov
or
mov
and
movsb
adc
adcl
adc
movsb
jmp
sub
dec
sbb
imul
sub
xchg
aad
dec
scas
dec
clc
mov
fsubrs
in
pop
or
je
das
mov
sbb
ficompl
add
cmp
push
test
xor
enter
movsl
mov
xchg
mov
cmp
mov
pop
bound
or
mov
fs
out
jb
inc
push
xchg
rolb
mov
pop
andl
rcr
mov
loopne
aaa
add
arpl
push
jnp
or
push
mov
enter
dec
sahf
mov
xchg
dec
clc
sbb
into
mov
sahf
add
mov
test
test
pop
inc
sbb
shll
outsb
xchg
repnz
lahf
insb
js
pop
push
ja
outsb
cmp
cmc
or
mov
cmp
pshufw
pop
fldl
nop
out
push
jle
adc
cmp
imul
lods
repnz
mov
insl
aas
dec
sbb
cld
es
stos
push
iret
int3
push
or
xchg
adc
mov
scas
mov
sbb
stos
or
jo
pop
stc
adc
ret
lcall
sbb
js
or
jl
fistl
xchg
jp
dec
lret
rcrl
insb
dec
lods
dec
pop
dec
ss
dec
dec
pop
scas
pop
sub
mov
fdivl
push
adc
repnz
or
in
adc
ljmp
pusha
les
outsl
mov
hlt
stos
stos
loopne
xchg
inc
insb
leave
cmp
mov
in
inc
jecxz
das
adcb
lret
sbb
rcrl
or
fisttpl
sub
cmp
mov
dec
xlat
push
lock
jnp
xchg
inc
iret
pusha
or
adc
add
sub
out
lods
pushf
or
pop
loopne
push
insl
imul
int
add
rcll
jns
stos
push
mov
push
mov
xchg
push
imul
aad
mov
push
dec
rorl
or
xchg
push
adcl
inc
les
and
mov
or
cld
pop
push
mov
lea
adc
push
xorl
push
xor
add
adc
rcll
out
sub
cld
enter
dec
dec
lret
adc
and
mov
in
dec
lock
xchg
cwtd
mov
pop
cmp
cmpsb
jecxz
inc
stos
cmova
mov
mov
in
fstpl
sbb
iret
in
cmp
scas
mov
or
sub
out
mov
fisttpll
adc
cmc
cwtl
notl
int
movl
sub
cmp
dec
aas
pop
cwtl
fists
pop
repz
lcall
mov
nop
mov
dec
cld
test
test
dec
cltd
or
out
movl
pop
aaa
into
pop
or
cmpsl
pop
xchg
xlat
and
ret
test
in
pop
fnstcw
lock
cli
js
mov
cli
fcoms
pop
stos
xor
sub
adc
add
aam
pop
jmp
insl
jl
jmp
pop
inc
test
add
adc
int3
dec
mov
xchg
cld
adc
test
adc
inc
imul
sub
push
aam
out
sarl
outsl
cmpsb
lea
and
loope
or
mov
or
or
lret
out
cltd
xchg
add
jg
push
add
jle
sub
lds
scas
adc
xchg
or
out
adc
sub
cli
int3
mov
subb
adc
repz
out
inc
add
shll
or
loopne
mov
loopne
inc
in
dec
mov
mov
cmp
add
fsubp
jl
sbb
cmc
adc
jle
lods
lahf
daa
xchg
lods
push
mov
into
pushf
in
mov
or
int3
lods
cmpsb
enter
jge
mov
xor
test
int3
movsl
movnti
aam
int3
fiaddl
pushl
fdivrs
and
mov
std
addr16
xor
xchg
fwait
jecxz
dec
sbb
in
scas
dec
std
lret
popl
or
jmp
mov
xor
xchg
sar
pusha
and
packsswb
push
xchg
sub
cmpsb
or
mov
int3
gs
pop
in
in
lock
or
stos
mov
jns
push
dec
aaa
fsubp
into
std
sub
lret
xlat
scas
push
lods
lods
add
adc
lret
insw
pop
mov
mov
dec
inc
in
add
dec
gs
push
mov
cmc
dec
add
inc
sub
push
in
push
pop
stos
xchg
iret
repnz
xchg
aam
scas
pop
loop
ret
sbb
pop
lret
dec
lret
sub
sbb
stos
out
mov
iret
in
dec
subl
push
and
fcomi
cmp
ret
test
pushf
stos
lock
mov
imul
jp
dec
rcr
push
lods
xchg
xchg
lret
push
mov
lds
aam
repz
add
stos
cmp
mov
clc
sti
divb
fisubs
inc
add
jne
push
mov
jp
or
fwait
inc
clc
cltd
cmc
mov
lock
mov
dec
sub
sbb
mov
push
lods
xchg
inc
test
cmp
jbe
mov
and
in
cld
loope
xchg
adc
jl
cmp
lret
js
inc
lods
adc
mov
movsb
sbb
inc
lea
stos
mov
outsl
mov
dec
or
mov
imul
leave
sub
test
sti
jl
lret
xchg
ja
or
push
iret
push
mov
mov
lea
push
pop
and
lcall
sbb
lret
add
inc
fldcw
and
mov
push
mov
pop
mov
lcall
ret
xchg
aad
mov
cmc
cs
ss
inc
xchg
xchg
cli
sub
mov
movsb
push
or
xchg
aam
mov
xchg
dec
adc
lret
stos
out
mov
pop
stos
adc
sbbl
stos
scas
pop
jg
lods
inc
loope
jnp
and
dec
vsqrtsd
or
scas
mov
cmp
mov
test
sub
lds
int3
lcall
or
xor
out
lea
inc
pop
mov
push
outsl
fstpt
hlt
jns
shll
adc
pop
jp
push
mov
xor
jecxz
fstpl
or
or
xchg
sub
xor
or
inc
pop
or
pop
push
add
inc
std
jecxz
in
dec
inc
stos
mov
push
sahf
imul
xchg
mov
iret
notb
mov
ljmp
or
idiv
aam
or
test
sub
rcl
inc
cli
sbb
push
mov
push
jecxz
push
xchg
jge
push
dec
rclb
fistps
imul
xor
xor
sub
push
or
inc
mov
adcb
cmp
inc
fmull
int3
xor
in
jecxz
push
pushf
cld
faddl
jmp
mov
lods
std
xor
or
mov
adc
add
xchg
cltd
mov
dec
xchg
int3
dec
ret
xchg
lret
dec
hlt
iret
jo
rolb
rcr
test
std
sbb
decl
in
xor
pop
jp
jbe
mov
sbb
xchg
mov
sub
dec
js
in
push
mov
add
sbbb
pop
repnz
adcb
scas
lret
aad
or
rol
popf
pop
test
xchg
add
lds
cmp
mov
or
outsl
stos
popf
lret
xor
notb
je
pop
pushf
aad
jmp
dec
sbb
pop
jle
xor
loope
dec
shl
dec
test
mov
lret
sti
sub
pop
dec
sub
sti
in
sub
inc
pop
sahf
insl
sti
loop
or
fidivrl
mov
push
mov
fcmovnbe
add
shlb
out
lahf
in
nop
add
mov
les
scas
fbstp
roll
mov
gs
sub
cmp
sub
insl
cmp
scas
sti
dec
jo
xlat
push
mov
adc
std
push
adc
ret
sub
sti
ds
fadds
adc
call
dec
xchg
js
shlb
mov
jbe
push
or
stc
out
lods
int3
mov
insl
iret
jmp
sub
int3
sub
adc
fisttpll
push
and
addr16
push
xchg
add
sub
mov
test
dec
cmp
shlb
adc
xor
sub
leave
clc
mov
stos
cld
insl
xchg
pop
nop
mov
insb
repnz
pop
cmp
pop
mov
inc
fcomps
enter
mov
ja
xchg
cltd
std
jbe
cli
rcll
cmp
jnp
push
scas
xchg
inc
push
cld
xchg
cmp
sbb
pop
hlt
xchg
mov
jnp
daa
mov
adc
add
jmp
push
cmp
add
loopne
jmp
adc
ss
orl
cmp
push
daa
popl
pop
in
es
ret
lret
lods
fsubp
movsl
jo
mov
lahf
iret
out
int3
push
mov
shrl
push
cld
lea
into
jp
adc
cmp
add
sbb
mov
mov
mov
pop
push
cmc
outsb
in
pop
sbb
dec
std
jl
int3
pop
lret
lock
test
cmp
fadd
mov
push
adc
jmp
jmp
cmp
scas
or
dec
xor
sbb
std
pop
mov
xchg
xor
mov
fmull
bsf
les
push
mov
and
shl
add
es
jg
popf
or
ds
pushf
insl
adc
aas
sbb
mov
dec
stc
and
lret
out
movsb
jnp
dec
inc
shll
inc
dec
popa
repz
jmp
push
xor
or
cmp
cld
xchg
pop
ret
dec
sub
jae
inc
in
out
cld
aad
std
pop
in
pusha
shrl
add
ret
test
adc
int
icebp
int3
dec
push
ds
sbb
mov
sbb
ss
insb
pop
ss
cmc
inc
mov
notl
push
mov
inc
iret
jbe
dec
pop
aaa
ja
andl
out
into
or
dec
es
ficomps
push
lods
adc
and
dec
daa
fsub
push
jp
sub
rcrl
out
insl
dec
mov
pop
xchg
jecxz
shrl
sub
adc
sbb
push
xchg
adc
imul
mov
call
adc
adc
and
or
or
cli
add
fildl
in
out
sub
fistpll
or
sbb
out
outsb
ret
int
mov
fisttpll
int3
pop
add
pop
mov
sub
inc
into
mov
fistpll
pop
int3
adc
and
fmull
negl
or
or
arpl
dec
lcall
xchg
sbb
cs
fidivrl
cmpsb
movsl
cli
iret
or
and
das
into
add
pushf
rorb
add
pop
dec
xchg
fnstenv
xchg
sarl
jbe
add
fdivs
leave
jge
call
adc
into
jns
add
or
inc
sahf
lods
fcompl
fildl
sub
sbb
addl
lcall
inc
stc
repz
test
xchg
adc
mov
pop
inc
jb
jle
les
or
sub
cmp
dec
leave
clc
or
stc
xlat
shlb
mov
insb
xor
jmp
cmpsl
mov
stos
or
test
push
stc
rcr
out
hlt
pop
lret
stc
insb
fstpt
call
lock
push
ret
stc
mov
mov
pop
rcr
or
ja
dec
ljmp
pop
rcl
js
or
fstpt
mov
loope
push
stc
inc
repz
dec
in
inc
sbb
xchg
push
rcrl
pop
rcl
xor
xor
movb
sar
mov
lret
hlt
rolb
or
ret
or
icebp
or
lea
mov
aas
stc
or
pop
inc
rcr
aam
ret
add
ljmpw
repnz
aaa
mov
sbb
or
mov
sub
push
daa
mov
or
pop
cmpsb
or
adcl
test
mov
push
add
sub
dec
in
jle
rolb
add
dec
lock
xor
test
or
pop
outsb
push
imul
mov
fsubrl
mov
repz
cmp
push
data16
out
adc
scas
nop
xchg
mov
pop
push
scas
ret
xchg
mov
hlt
loope
add
push
jecxz
inc
cli
test
cmp
cmpsb
mov
dec
cmp
insb
loop
xchg
mov
mov
lcall
sub
pop
sarb
dec
in
mov
mov
add
outsl
pop
scas
movsb
mov
jge
cmp
jne
sahf
mov
imulb
mov
sub
jns
or
push
add
cmp
movsb
add
add
ret
xchg
push
mov
int
sub
fisttpll
or
sub
mov
jp
push
inc
push
int3
or
push
leave
stos
or
fstps
mov
les
test
jno
call
mov
xchg
adc
dec
cld
cs
push
xor
adc
dec
in
lock
fstpt
les
enter
scas
sub
inc
push
mov
jmp
or
sbb
movsb
xor
push
jo
enter
sti
movl
inc
imul
mov
mov
out
add
add
dec
loop
jo
jmp
enter
fldt
inc
mov
or
mov
insb
dec
adc
mov
or
fildl
add
inc
add
test
or
dec
xchg
lret
cmp
and
pop
hlt
add
and
lock
mov
out
adc
mov
or
je
xchg
or
rcll
arpl
ja
fisttpl
dec
lods
dec
jmp
jl
enter
lret
test
dec
mov
mov
pusha
hlt
jp
xchg
sbb
test
fisubrs
mov
lock
xchg
mov
pop
xor
dec
sub
ds
cmpsl
jl
movsb
sti
xor
and
sti
pop
jmp
fs
ror
push
cmp
out
sub
dec
pusha
dec
jbe
dec
test
jmp
cld
or
or
aam
int3
test
jno
dec
sub
mov
sub
lds
dec
enter
test
add
dec
test
jl
pop
dec
or
scas
sub
out
stos
imul
imul
das
jbe
cmp
stos
or
lock
dec
shll
scas
lret
inc
push
int3
push
repz
movsl
sti
cmp
or
daa
sbb
or
or
iret
lret
out
add
jo
stos
ret
inc
stos
iret
push
out
mov
jl
xor
push
dec
bswap
fmul
cs
stc
add
in
jg
imulb
gs
dec
gs
in
xor
cmpsl
shr
push
or
test
cmpsl
xlat
loopne
lea
std
xchg
mov
sbb
adc
jl
rol
push
cmc
sub
mov
jl
xor
xorb
cld
icebp
and
hlt
test
lds
lds
mov
cs
repnz
and
mov
aam
jo
imul
ror
push
or
filds
movsb
dec
cmpsb
cmp
sub
stos
inc
aam
shll
or
add
dec
stos
lret
fldl
icebp
lock
or
mov
pop
imul
insl
js
ret
or
daa
and
jne
sub
in
push
movsb
xchg
mov
int3
nop
cli
add
aad
and
out
lock
cmpsl
mov
ffreep
mov
inc
fistps
inc
mov
popl
std
repnz
add
leave
xor
and
dec
mov
mov
push
adc
loopne
nop
lret
ja
xchg
movsb
adc
scas
inc
iret
adc
inc
dec
pop
jle
mov
cli
sbb
fadd
jo
xchg
out
pusha
mov
enter
in
push
outsl
outsb
adc
and
or
adc
inc
ds
scas
out
stos
lock
pop
mov
loope
mov
ret
jp
in
jo
jp
das
es
inc
cld
jmp
cmp
out
mov
enter
add
add
lock
or
dec
test
sub
add
std
gs
aas
jg
push
xchg
push
mov
aaa
mov
popa
xchg
std
inc
or
fmull
cwtl
and
push
decb
or
repnz
push
repz
sti
inc
mov
shl
and
mov
cs
cld
jl
je
jp
or
or
lock
stos
dec
push
jmp
or
xchg
pop
pop
in
das
stos
or
arpl
and
pop
add
adc
inc
pop
mov
ja
lret
rcrl
or
lret
leave
fs
jmp
dec
movsb
or
lcall
leave
mov
mov
aaa
subl
xor
iret
aaa
push
call
out
cmpsl
not
fwait
inc
sahf
std
or
cld
mov
cmpsl
or
adc
sti
mov
and
or
mov
xor
pusha
test
dec
stc
cmp
xchg
dec
jp
mov
in
or
push
mov
inc
mov
xchg
mov
movsb
mov
and
jne
mov
arpl
jecxz
mov
sbb
xorl
xchg
mov
es
jp
jns
cvtpi2ps
xchg
cmpb
push
pusha
add
mov
cmpsl
sub
aad
mov
in
jns
pop
les
push
push
cld
call
mov
add
lret
icebp
push
pop
popf
jb
rol
stc
fs
cmp
and
stos
out
sti
shr
insl
xor
cmpsl
jne
roll
ljmp
insb
jns
jns
outsb
xor
adc
jo
jnp
mov
sbb
repnz
fisttpll
in
xchg
jmp
inc
lret
push
cmp
mov
jmp
aad
mov
popa
cmp
pop
shrl
add
add
hlt
clc
jg
push
inc
jne
dec
scas
mov
cmc
shr
hlt
imul
push
pop
mov
or
cmpl
inc
mov
and
mov
mulb
mov
clc
jecxz
jge
inc
mov
bound
mov
adc
movsb
mov
cmp
in
testl
cmp
roll
jbe
cmp
xor
pop
sarb
repz
fmull
fwait
stos
xchg
or
sub
test
and
repnz
add
test
lcall
and
mov
push
jnp
inc
lods
enter
faddl
je
sar
cmp
jnp
inc
mov
sbb
jmp
faddl
je
mov
cmpsl
pop
lods
fisubrs
repz
pushf
add
xchg
mov
pop
bound
sub
mov
je
xchg
int
pushf
push
dec
test
pop
roll
mov
test
mov
pop
lods
rolb
lea
push
sarl
cmp
mov
jle
test
push
or
cli
mul
cmp
test
sahf
out
jnp
in
sbb
mov
hlt
jno
pop
ja
xchg
mov
xchg
fistl
or
push
lods
mov
ljmp
xlat
mov
sub
xchg
pop
mov
add
scas
mov
insb
lret
or
cmp
lods
dec
push
hlt
xor
imul
inc
imul
jp
js
hlt
insb
shlb
jo
lea
enter
cli
sub
inc
cli
mov
mov
adc
jmp
mov
loope
dec
loope
or
lret
mov
dec
or
or
leave
test
rol
fimuls
fucomip
lret
cmp
mov
push
or
je
sub
lret
xchg
pop
loope
mov
mov
fisttpll
sub
dec
or
sti
sub
or
mov
pop
stos
dec
enter
cmc
and
enter
addl
sub
fisttpll
lods
pop
into
ret
stc
jle
pop
leave
xlat
cmpsl
aad
sub
or
movsb
sarl
add
int
mov
cltd
cmp
ss
mov
pop
dec
dec
pop
mov
enter
aam
je
enter
lods
dec
or
or
adc
push
in
xchg
adc
cld
dec
int3
je
or
add
rcrl
sub
clc
cli
jmp
and
pop
imul
loop
dec
shr
jl
inc
insb
jmp
sar
cmp
jb
mov
jnp
clc
les
imul
cmp
fcmovnbe
pop
adc
add
jo
or
rcl
mov
enter
jp
push
aad
pop
or
pop
repnz
mov
stos
jmp
cmp
pop
push
shrb
push
imul
sarl
push
or
jmp
push
mov
or
les
fcom
xchg
in
in
cmp
fcmovnu
fmull
pop
xor
pop
mov
iret
pop
pop
popa
lds
dec
ret
rorl
or
sub
or
bndstx
test
test
sub
sbb
loop
ja
test
fwait
cmpl
mov
in
push
sbb
and
jge
or
jae
stos
cs
inc
pop
xchg
pop
jbe
movsl
sarb
pop
add
add
adc
add
add
enter
mov
dec
or
int3
mov
pop
jecxz
inc
cmp
fmulp
add
jns
or
fwait
or
sbb
lret
nop
loope
pop
iret
pop
daa
fdivrl
mov
js
subl
addb
cld
inc
int3
lock
lahf
scas
idivl
push
inc
sub
leave
nop
or
sub
clc
aaa
push
mov
iret
mov
add
out
scas
dec
pop
adc
dec
cmp
cwtl
mov
sub
dec
inc
xchg
add
and
cmp
dec
adc
aaa
dec
sbbb
aad
mov
cmp
sbb
and
into
loopne
jo
enter
in
les
int3
mov
loope
lret
imul
push
cmp
jae
rol
loopne
jg
add
cmp
sbb
jbe
mov
adc
insl
loop
mov
or
sbb
std
lock
psrlq
mov
xchg
xchg
iret
jle
or
mov
dec
push
fmull
or
stos
dec
or
lods
push
sbb
testb
mov
inc
aaa
pop
jns
hlt
or
push
daa
pusha
push
aaa
stos
dec
sub
loope
pop
fwait
lds
sub
mov
xorl
jmp
pop
adc
mov
enter
aaa
in
insl
or
add
pop
in
mov
xchg
cmp
jbe
pop
and
cmc
or
cmp
cmp
sarb
pop
ljmp
std
push
jl
mov
sub
lods
push
mov
add
mov
fcoml
sub
or
into
mov
outsl
stos
decl
inc
jmp
gs
stos
iret
aaa
xor
faddl
or
sbb
jno
pop
inc
mov
icebp
in
jnp
xor
push
dec
jns
hlt
mov
js
adc
cmp
mov
fucomip
and
cmp
sbb
mov
sbb
jmp
ss
aam
sarl
test
arpl
loopne
add
hlt
jmp
ret
xor
or
orl
mov
test
jl
les
or
imull
jo
pop
mov
jae
cmp
pushf
mov
mov
bound
mov
gs
or
xor
cli
mov
hlt
clc
sti
ja
mov
push
or
jmp
dec
jmp
lret
or
adc
and
jnp
mov
dec
in
mov
rcl
stos
push
xlat
fildl
and
lods
cmpsl
dec
les
mov
add
jge
mov
mov
std
mov
or
repz
pop
fstl
orl
int3
leave
stos
int3
loope
or
adc
mov
test
out
jnp
xor
test
stos
mov
jp
test
ret
mov
push
rorl
mov
loop
or
dec
enter
jae
outsb
pop
xorl
fadds
std
xlat
or
xor
or
add
std
add
add
add
jmp
js
pop
or
cmp
jp
ds
jl
int3
arpl
pushf
js
fidivs
adc
mov
sub
js
jle
xchg
jae
mov
adc
xchg
mov
icebp
pop
lds
mov
inc
add
orb
or
add
in
outsb
cld
in
in
xchg
ret
xor
xor
mov
addl
jl
sub
lret
and
add
movsl
fadds
hlt
adc
rorb
imul
fwait
movsb
add
sub
daa
xor
pop
lcall
roll
jmp
shrb
testl
or
in
push
lds
leave
sub
xor
xchg
test
pop
or
jmp
add
adc
or
mov
frstor
outsl
shll
ret
popl
test
imul
cmp
cmp
and
pop
jp
or
jmp
jbe
in
cs
xchg
fdivrs
and
fnstcw
or
dec
std
pushf
aad
mov
pop
xchg
cmp
add
sti
add
mov
shrw
cmp
subb
jl
xor
daa
sub
push
lret
call
jl
aad
jae
mov
out
add
or
int3
xor
rorl
clc
jns
or
scas
fcom
xchg
or
test
mov
mov
movhps
add
jne
cld
std
inc
dec
adc
das
inc
jl
mov
sbb
aad
mov
and
lret
inc
stc
jmp
pop
loope
ret
cmp
sbb
or
and
loopne
sbb
ja
jp
js
icebp
or
mov
sub
jnp
std
push
int3
cmp
mov
fimull
cli
cmp
dec
add
add
push
sbbb
subl
cmpsb
es
int
lock
add
cmp
or
jg
adcl
cmp
mov
pusha
mov
mov
add
cmp
ds
mov
dec
test
lret
imul
ret
jno
ds
cmp
mov
dec
fidivl
enter
test
push
and
mulb
dec
in
xor
fcmovnu
or
dec
jl
dec
stos
mov
rcll
imul
aaa
iret
push
jl
cmpsl
push
cli
sbb
jge
cmpsb
lret
lock
fs
xchg
sbb
outsl
lret
mov
mov
mulb
xchg
pop
and
call
ret
out
jmp
lock
repnz
or
les
jne
cld
jle
jg
lahf
jmp
ss
mov
mov
outsl
or
cmpb
enter
in
les
xchg
and
add
fsub
and
xor
inc
pop
shl
roll
mov
mov
jno
lock
imulb
aaa
and
shll
test
js
sbbb
or
jmp
ficompl
les
push
lods
sti
scas
jmp
hlt
mov
jl
jmp
sti
cmp
xor
or
jmp
cld
inc
mov
loope
cmc
repz
les
ds
inc
lock
lret
xchg
mov
addb
loope
adc
push
mov
clc
fs
mov
cs
aam
dec
jmp
jl
xchg
jp
mov
cmpsl
nop
pop
mov
xchg
int3
or
add
dec
int3
cld
call
push
lea
movsl
cmp
inc
movb
mov
dec
or
cmp
lock
jg
or
loope
scas
jno
lds
mov
dec
pop
pushl
enter
lock
mov
add
mov
cmp
mov
nop
std
push
rol
repnz
test
mov
scas
push
ss
stos
mov
inc
mov
loope
ja
add
scas
dec
aaa
jne
pop
mov
and
shrl
ror
xchg
sbb
dec
lods
outsb
add
add
jmp
or
lds
int3
je
outsl
push
dec
xor
jbe
daa
iret
pushf
jns
mov
dec
scas
scas
push
ret
in
mov
mov
int3
mov
inc
mov
add
add
and
push
testb
jmp
cld
xchg
xchg
sti
pop
ds
mov
xchg
loopne
dec
lods
fmul
adc
xchg
mov
cmp
leave
outsb
or
xchg
adc
hlt
test
inc
lds
aam
add
jmp
pop
cmpsb
jle
add
dec
inc
jb
repz
les
dec
or
enter
inc
dec
std
mov
les
xor
sub
dec
jns
in
adc
cmp
filds
roll
int3
jge
mov
cmp
jbe
stc
lods
push
loop
sub
inc
stos
add
movsl
add
sbb
xchg
jno
lods
or
push
mov
stc
lret
or
icebp
test
ss
leave
jecxz
ficoml
enter
imul
sbb
push
stos
arpl
pop
push
jecxz
sbb
sbb
addb
orb
outsl
or
ficomps
pop
icebp
or
xchg
nop
in
mov
testl
push
adc
cmp
mov
jb
and
push
cld
dec
sbb
enter
fisubrl
add
cmp
mov
mov
in
ss
mov
in
lea
cmp
xor
mov
dec
cmp
inc
cmp
les
or
mov
xlat
push
mov
or
testl
ja
dec
cmp
fs
add
dec
add
rol
xlat
icebp
in
jo
mov
xchg
mov
add
dec
pop
in
fcmovnb
lcall
cmp
pop
and
roll
and
dec
testb
mov
xor
daa
xchg
and
or
dec
xor
into
fstp
or
sbb
mov
adc
mov
cld
ffree
xchg
das
stos
roll
mov
push
mov
rolb
ds
sub
lods
fdivrl
adc
pop
in
mov
lcall
push
test
test
or
inc
cli
je
push
pusha
or
mov
in
lret
mov
call
mov
ja
mov
pop
xchg
mov
push
inc
in
stos
push
cmp
push
hlt
mov
in
enter
adc
scas
pop
insb
mov
mov
aas
rorl
mov
cmp
testl
jp
jge
sub
sbb
xchg
ds
das
subl
xchg
sbb
das
roll
pop
out
les
in
les
mov
sbb
lret
adc
or
push
sbb
movsl
push
adcb
les
cld
jp
test
mov
jns
test
scas
les
bound
call
std
rcrb
roll
hlt
mov
movsl
iret
or
mov
scas
orl
hlt
movsl
test
leave
scas
jo
jb
ret
int3
mov
push
hlt
stos
int3
daa
lret
or
lret
adc
sti
test
pop
mov
or
sub
add
sbb
push
test
sub
rcrb
sub
add
xchg
aas
lods
push
outsl
or
fistl
das
out
or
sti
lock
xchg
pop
test
sbb
daa
int3
pop
xor
addr16
pop
cmp
jge
sti
inc
mov
push
addr16
adc
inc
scas
sti
jbe
mov
bound
test
pop
stos
jecxz
test
fadds
cmp
sbb
dec
mov
mov
ss
cs
inc
les
lds
jnp
cmp
outsl
out
sbb
xor
inc
sub
inc
mov
lds
stos
jmp
cld
inc
test
mov
movups
repz
push
sti
jl
les
jns
cmp
and
stc
push
mov
jp
test
test
pop
push
pop
ja
inc
inc
inc
inc
inc
aaa
movb
push
jns
adc
mov
faddp
movsb
inc
dec
mov
sti
dec
lret
in
in
stc
jb
fdivrl
add
iret
push
push
cmp
lds
pop
aad
dec
push
dec
push
addr16
xchg
push
mov
iret
jae
into
sti
imul
inc
stc
loope
jl
lock
in
cmp
jge
jl
mov
or
pop
add
ror
dec
adc
sub
fisubrs
sub
add
push
xchg
ret
out
or
int
out
push
pop
movsl
or
gs
std
dec
mov
adc
enter
stos
push
or
xchg
mov
push
test
mov
sub
fistpll
ljmp
pop
adc
cmp
lret
int3
lock
mov
adc
into
dec
mov
enter
in
jnp
in
jl
xchg
loop
cmpsl
cwtl
mov
sub
pop
add
ret
insb
cmp
mov
push
fcoms
lods
dec
sub
add
insb
mov
icebp
dec
enter
rorb
lock
mov
iret
rclb
mov
enter
jnp
mov
stos
dec
jp
lret
sbb
dec
sbb
mov
push
cwtl
pop
jge
test
dec
add
or
dec
jb
jo
mov
fmull
jp
hlt
enter
test
cmp
imul
mov
jecxz
add
xor
std
gs
sub
mov
jl
shll
enter
jb
in
insl
or
and
shl
in
scas
lds
insl
fbld
xor
mov
mov
or
or
pop
mov
or
xchg
fsubrl
out
or
stc
add
mov
or
arpl
cltd
je
cmpsl
jl
stos
ret
inc
or
ljmp
jo
cmp
repz
cmp
adc
mov
cld
int
clc
into
sub
adc
sti
imul
scas
mov
jo
adc
out
les
or
sti
lret
or
mov
lods
iret
mov
cmp
mov
add
dec
pop
outsb
cmp
cmpsb
popf
movsb
dec
inc
out
movsl
cmpsl
je
adc
addr16
imul
or
fnstenv
xlat
mov
adc
fidivl
cld
out
jp
test
shr
push
dec
in
or
rol
in
roll
adc
lea
std
pop
int3
inc
lcall
cli
inc
rorb
add
sbb
lret
addl
jp
push
shrb
dec
test
icebp
push
std
out
iret
xchg
sub
or
add
gs
out
outsb
notb
mov
mov
test
add
cmpsb
ss
sub
sub
inc
jns
mov
js
pop
or
rol
adcl
adc
or
xchg
es
pop
mov
loopne
cld
add
insb
mov
jp
mov
or
lret
sub
ja
sarb
std
jmp
arpl
mov
jae
push
into
pop
sti
sarl
out
mov
sbbl
stc
int
add
push
aaa
xor
mov
add
stc
or
aam
mov
jl
aaa
push
or
repz
pop
test
std
repz
and
fisubs
or
repz
fs
or
repz
fs
mov
inc
or
pop
cmp
icebp
ss
xchg
add
test
in
add
in
stc
mov
scas
mov
jo
add
push
push
fcoml
dec
nop
xchg
push
lea
fnstcw
fs
or
outsl
jno
repnz
das
ds
push
jmp
outsl
mov
mov
hlt
cmp
clc
movsb
in
or
xchg
out
and
call
cwtl
pop
in
rcl
jl
jno
call
in
push
push
mov
add
mov
lock
ljmp
push
repnz
movsb
fistl
lock
hlt
pop
mov
lock
xor
push
cmpsl
loope
cmp
rcl
mov
pop
insl
lret
sarl
mov
push
mov
fisttps
enter
jns
shll
dec
aam
rol
mov
jg
mov
hlt
add
test
xor
test
jne
orb
fisttps
jp
ret
jnp
aas
shll
dec
inc
fldcw
cmpsl
push
orl
or
loop
stos
out
in
insl
das
stos
jl
push
cmp
imul
fmull
rorl
xchg
add
sbb
jecxz
cmp
mov
or
je
push
fs
add
stc
mov
inc
ja
lds
or
movsb
in
mov
and
or
xor
or
in
insb
or
xchg
jl
test
xchg
test
add
sbb
jl
cmp
push
dec
stos
pop
jne
lds
sti
sarb
test
in
jl
pusha
cmp
addb
shl
cmp
movsb
and
dec
fsubrl
xor
insl
inc
mov
add
and
into
jle
push
push
into
xchg
cmp
fcomi
jl
sti
or
je
mov
jbe
lock
pusha
cmp
enter
dec
inc
popl
popa
inc
shl
cmp
movsb
and
dec
fsubrl
xor
mov
inc
jmp
shrl
stos
pop
loope
xchg
xchg
stos
lret
xchg
sub
or
loop
int3
js
stc
clc
or
ja
pop
test
mov
or
lods
or
shrl
adc
or
mov
insl
or
pop
mov
inc
fstpl
mov
std
or
into
push
insb
or
test
mov
test
lret
imul
xor
fnstsw
adc
test
std
sub
or
jbe
and
xor
std
add
sub
stc
mov
xlat
aad
fsubrs
pop
loope
scas
mov
mov
rcrb
in
mov
loope
and
cs
pop
adc
fbld
test
jmp
jle
cmp
mov
rcr
fimull
or
sti
sbb
mov
test
loope
imul
js
dec
fsubs
dec
mov
jmp
inc
push
into
hlt
mov
in
inc
cld
cs
enter
ret
xor
xchg
add
enter
ljmp
pop
into
jg
or
jae
or
movsb
stos
mov
ret
sbb
sub
mov
or
mov
cmp
xor
loope
mov
out
xor
mov
outsl
sub
aam
aad
add
dec
dec
not
fadd
stc
sbb
mov
stos
stc
shrl
movsb
cld
js
add
xor
jmp
dec
adc
fucomip
mov
lods
dec
push
dec
stos
mov
adc
inc
mov
add
lahf
inc
test
inc
lods
cmp
xchg
icebp
xchg
lcall
mov
sub
push
push
inc
push
or
loopne
scas
bnd
out
pop
mov
xchg
adc
pop
scas
es
jmp
and
shrl
gs
mov
xor
leave
sahf
xchg
lods
in
or
leave
pop
or
pop
fldcw
aad
mov
pmulhuw
or
adc
push
or
pop
mov
push
sub
mov
aad
fmulp
outsl
mov
cld
faddp
xor
push
or
or
xchg
pop
mov
xchg
in
insb
or
push
dec
in
lock
add
hlt
jmp
loop
leavew
adc
in
or
iret
cld
ds
add
push
shl
rorl
popl
sbb
mov
jmp
mov
inc
push
xchg
clc
scas
cmp
psraw
add
adc
adc
sbb
cmpb
lock
mov
inc
lea
cltd
dec
push
sahf
cmp
loope
dec
push
xor
bound
or
xor
out
popf
clc
mov
lds
add
jmp
push
outsl
dec
jp
add
or
repz
jns
pop
sti
xlat
lret
jge
adc
and
shr
mov
stc
add
pusha
sub
lcall
mov
jbe
mov
fistps
in
adc
mov
jae
loop
clc
jp
std
push
fimuls
aas
add
pop
ja
fadd
add
fisubrl
sarl
inc
mov
jbe
or
shll
aas
cmp
dec
stos
sub
aaa
or
or
pop
pop
cmc
xor
dec
stc
test
push
fdivrl
or
out
push
movsl
mov
pop
in
lret
push
dec
lret
data16
xchg
daa
jnp
mov
sti
lret
xchg
cmp
jmp
lods
fisttpll
mov
jl
mov
int
loope
lret
popf
std
out
mov
pop
push
ret
sahf
mov
mov
inc
in
sbb
sarl
in
fsts
sub
stos
lods
in
popa
mov
inc
sub
or
cmpl
sub
mov
xchg
add
adc
xchg
stos
lock
mov
jmp
or
andb
mov
imul
cmp
or
adc
daa
lcall
fldt
loop
push
adc
inc
sahf
sub
scas
shrb
jecxz
leave
pop
sahf
fcmovnu
mov
cltd
jge
dec
test
xchg
andl
inc
mov
xchg
jl
ss
movsl
dec
test
jl
movsb
stos
mov
mov
repnz
jl
xchg
test
mov
aad
inc
dec
ret
icebp
push
cmp
inc
xor
sub
or
cmp
faddl
xchg
leave
sub
jl
mov
jmp
mov
push
jne
dec
loopne
daa
pop
add
dec
shlb
add
addb
or
enter
in
mov
insl
enter
jb
sbb
sti
dec
or
lret
movl
xorb
mulb
mov
jo
jl
mov
mov
jecxz
mov
sub
add
cli
push
out
hlt
lock
imul
scas
gs
pop
xchg
adcb
inc
out
shl
cmp
xor
jle
jnp
lret
or
nop
sti
pushf
testl
testb
jbe
add
cmc
lock
inc
cmc
push
adc
ja
jg
imulb
cli
cmp
pusha
icebp
cmc
xchg
popa
jmp
imulb
out
xchg
fstl
pop
shll
add
ja
adcl
adc
mov
or
sahf
mov
jns
inc
jecxz
ljmp
mov
or
jo
push
jge
cmc
aam
xor
mov
loope
inc
dec
xchg
in
in
cmc
jmp
mulb
ss
xor
or
addr16
cmp
push
cmp
sub
mov
cmp
lcall
insb
or
cmpsb
ffreep
or
or
lods
shll
jl
into
or
lret
lret
out
or
mov
ret
into
add
pop
fistpll
cld
add
xchg
fnsave
push
imul
test
cmp
jl
xchg
cwtl
lret
add
enter
push
cmp
fs
inc
jmp
mov
add
les
or
ds
or
iret
subl
mov
fldpi
mov
cwtl
add
rorb
cmp
les
or
in
fisttpl
or
movsl
cmp
stos
aam
add
in
nop
inc
jmp
outsl
jl
push
enter
enter
pop
xchg
mov
fisttpll
fs
jl
push
mov
jl
inc
mov
or
lret
jl
rol
mov
dec
rol
icebp
mov
test
jmp
faddl
and
lods
stos
fisubrl
ror
mov
jb
aam
mov
jb
jns
xchg
leave
sbb
lea
clc
into
or
les
scas
jl
test
in
jno
inc
lcall
cwtl
lahf
fdivrl
addb
jl
or
add
cmp
in
lock
xchg
pop
push
in
mov
shll
lods
push
push
mov
and
pop
adc
xorb
xlat
inc
and
and
popf
ja
outsb
mov
and
rcrb
cmpsb
mov
xor
mov
inc
out
jo
jmp
cltd
cvtdq2ps
incb
inc
fcompl
dec
fs
mov
push
and
push
clc
cmp
fildl
xlat
fisubrl
filds
pop
inc
jmp
clc
lock
inc
xor
lcall
push
or
test
sarl
jl
ret
inc
add
test
jne
jne
add
icebp
add
int
mov
and
pop
sub
or
ja
xor
cmp
jno
xor
mov
icebp
or
lahf
shlb
lea
push
fcmovbe
or
cli
or
jecxz,pt
pop
ret
cmpsb
or
mov
bound
out
mov
fldln2
aaa
stos
and
iret
insb
sub
pop
sbb
ds
mov
out
int3
sti
jp
xchg
aas
add
sub
mov
dec
in
nop
addl
fisttpl
xlat
adc
sub
gs
and
int
inc
adc
scas
fnstcw
inc
sbb
imul
jmp
iret
cmp
mov
mov
push
iret
ljmp
shlb
or
out
jno
mov
stos
cltd
shr
push
inc
lds
testl
push
lahf
xchg
pop
mov
dec
jbe
inc
mov
pop
fldenv
or
fs
mov
inc
cld
lret
ljmp
or
jmp
es
pop
jo
cs
js
or
into
cmp
rorl
mov
cmp
fldt
fadd
and
clc
push
sbb
loop
jmp
add
mov
fisttpl
movsb
add
imulb
scas
mov
test
pop
mov
xchg
inc
inc
mov
xor
iret
jmp
aam
or
mov
rorl
mov
movsb
lock
sbb
mov
xchg
mov
lods
out
js
jmp
jbe
decb
test
leave
js
testl
insl
dec
in
shll
test
or
repnz
adc
mov
mov
push
lcall
ss
fdiv
in
addr16
cmp
mov
nop
fdecstp
dec
sbb
jne
idivl
pop
jge
stos
stc
add
sub
mov
mov
and
cs
movsb
dec
jb
popa
roll
es
and
insb
sbb
mov
out
add
in
jg
pop
dec
add
loop
out
pop
test
stos
faddl
or
add
int3
sti
movsl
clc
loop
pop
and
dec
pop
or
adc
and
sub
pop
xor
dec
aad
cmp
sti
inc
lock
inc
inc
ja
fdivl
add
cli
leave
sub
pop
push
xchg
pusha
jmp
dec
and
add
jns
sub
xchg
iret
stos
jns
pop
adc
mov
mov
add
clc
inc
jo
mov
sub
or
sbbb
aam
std
ror
mov
jecxz
aam
scas
xchg
sub
mov
mov
dec
pop
lret
mov
cmp
jl
mov
ret
sub
pop
pop
stos
mov
loop
mov
andb
pop
cmpsb
jb
repnz
call
mov
iret
dec
adc
pusha
aas
dec
lret
enter
loopne
inc
dec
mov
mov
addb
add
xor
mov
ljmp
cld
int3
sti
mov
cli
in
cmp
jmp
mov
shl
jmp
add
out
hlt
jp
mov
shrl
push
ror
dec
mov
xchg
lcall
inc
cmpsb
mov
fstps
cmc
fldcw
stc
shl
xor
lret
fcomip
and
or
sbb
inc
mov
lret
filds
ljmp
std
outsl
iret
mov
out
push
in
ret
push
sti
fdivs
inc
dec
or
orb
inc
scas
lret
mov
xchg
loopne
mov
or
inc
cmpsl
lcall
xchg
rcl
movsl
outsb
mov
movsb
leave
test
pop
mov
sbbb
inc
mov
addr16
hlt
or
loop
movsb
out
dec
xchg
pop
mov
pop
cwtl
js
mov
fistpl
popf
pop
fistpl
inc
scas
add
mov
ljmp
insb
mov
add
cmp
mov
sbb
push
pop
mov
sbb
mov
lret
ds
adc
leave
aam
test
in
or
fdiv
lock
movsl
je
mov
mov
bound
pop
sti
stos
jg
push
adc
aaa
mov
and
and
xchg
lcall
and
dec
jne
jno
outsl
or
negl
inc
rcrl
dec
pop
outsl
lret
aaa
insb
inc
sti
adc
mov
mov
inc
dec
jmp
jecxz
inc
cltd
sub
les
mov
cmc
add
leave
ds
mov
je
sub
push
daa
sbb
test
test
push
cmpsl
jmp
cli
mov
je
stos
jmp
leave
daa
inc
cmp
pop
mov
loope
fisttpll
mov
sbbl
dec
nop
stos
int
push
xorb
fisubs
enter
sbb
sub
jb
dec
sbb
jp
dec
stos
sbb
or
inc
pop
negl
jp
or
adc
stc
cs
int3
icebp
retw
sub
sbb
jno
add
shrb
xorb
cmpsb
dec
sub
pop
fiadds
fwait
leave
test
mov
in
ljmp
pop
sub
or
stos
bound
out
insl
dec
stc
xor
xor
inc
repz
adc
jno
or
dec
movsl
mov
cmp
scas
lahf
lret
cmc
sub
ret
sarl
sbb
ds
lods
lret
stos
xchg
sarb
cmp
pop
jnp
pushf
xchg
out
mov
addr16
inc
scas
mov
xor
mov
xchg
lret
cli
mov
adc
je
dec
and
stos
ds
lcall
mov
test
lcall
dec
adcb
mov
lock
jo
cmp
xchg
out
mov
jo
pop
sub
ret
and
int
xchg
imul
push
cli
out
dec
imul
mov
add
adc
dec
loopne
xchg
jge
cwtl
js
xchg
and
cmp
hlt
aaa
stos
dec
dec
and
fadds
mov
dec
mov
stos
out
xor
or
ret
push
jl
loope
dec
or
enter
or
sti
sub
adc
push
add
cld
mov
and
loopne
add
push
fsubr
jb
in
push
push
adcl
mov
lahf
stc
mov
cld
xchg
xchg
ret
subl
shr
out
sbb
pop
or
pop
inc
scas
pop
adc
add
hlt
idiv
sti
inc
cld
inc
mov
mov
push
dec
scas
jb
addb
pop
mov
push
push
stc
pop
sub
rcrl
add
ds
aaa
pop
cld
adc
iret
pushf
cmpsb
jle
dec
pusha
shl
sub
cmpsl
or
test
sti
std
jnp
or
ds
out
add
fidivrl
cmp
mov
add
rcl
dec
loopne
js
es
js
add
mov
dec
and
cmp
jnp
lock
rolb
sti
mov
jno
je
jo
inc
lock
push
rorl
xchg
mov
push
sti
add
stos
inc
mov
sub
das
out
pop
fildl
mov
adc
inc
pop
cmpsl
notl
aas
insl
lret
xor
test
icebp
pop
push
rcrl
jg
out
inc
mov
push
dec
dec
shrb
cltd
daa
push
lea
sahf
and
or
aaa
rorb
cmp
mov
mov
sbb
lods
dec
fcmovb
mov
loope
aas
adcl
or
jmp
loop
data16
loopne
icebp
movsb
notb
pop
adc
ds
mov
and
mov
out
xchg
testb
dec
iret
das
inc
xchg
and
sub
lret
and
add
mov
sahf
inc
nop/reserved
into
out
cmpsl
adc
insl
inc
faddl
dec
ss
dec
lret
imul
mov
popw
jnp
inc
lea
dec
and
test
stc
mov
test
push
mov
les
add
mov
rcll
shrl
rcl
adc
add
jnp
das
push
adc
mov
shll
clc
int3
or
movsb
fs
add
daa
inc
pop
aaa
jle
pop
or
lea
les
add
push
cmp
out
mov
fistpl
ret
jle
inc
push
cmp
rcr
mov
mov
stc
pop
sub
jns
jne
pop
inc
test
outsl
sti
mov
add
loopne
pop
int
sarb
mov
jb
ja
jns
mov
xor
cmp
push
addr16
push
mov
test
dec
and
aad
sbb
in
sbb
jp
std
pop
jnp
inc
sbb
fmuls
push
jmp
or
stc
into
sti
stos
je
jbe
and
push
out
pop
jne
aam
cmp
out
push
add
or
mov
xor
adc
xchg
dec
adc
repz
sub
or
dec
sbb
mov
mov
enter
adc
push
jl
cmp
pop
inc
inc
in
jp
push
outsl
pop
std
jg
dec
fcmovb
adc
jae
in
or
out
rcrb
out
or
icebp
jl
or
clc
or
pop
pop
add
iret
cmp
add
in
in
or
loop
push
and
test
jp
or
or
stos
pop
lods
adc
and
cld
or
enter
xorl
jge
sbb
mov
or
subl
pushf
loopne
lcall
or
shr
movsb
jle
add
pop
mov
lret
push
dec
insl
xchg
mov
movsl
xchg
sub
fadds
lock
pop
inc
dec
sub
sub
stos
mov
sti
test
jmp
push
mov
test
sub
xor
ds
jmp
in
pop
and
xchg
lock
sub
dec
mov
push
mov
sarl
pusha
ret
push
lock
bound
push
or
cmp
idiv
out
add
out
stos
or
add
pop
dec
jnp
push
stc
repnz
roll
and
add
leave
adc
jg
rorl
pop
add
cmpb
pop
and
fisttps
cli
jmp
ljmp
lcall
jg
inc
cmp
lret
and
popl
sar
jmp
adc
cltd
std
jle
cs
mov
enter
cli
push
mov
mov
cmc
shr
add
add
shll
js
sar
fildl
mov
cmovg
ret
mov
sti
mov
sub
outsl
popa
push
dec
aaa
sub
xor
pusha
lret
mov
inc
dec
sub
push
or
ja
mov
or
out
or
fwait
inc
cmpsl
cmc
push
push
xor
or
daa
or
xchg
sub
imul
mov
or
negl
mov
aas
incb
fcmovnu
shrl
adc
std
sbb
movsb
movl
xchg
or
fiadds
add
repz
mov
popf
clc
add
insl
loopne
dec
adc
cmp
or
jo
and
dec
dec
ljmp
ljmp
shr
test
enter
enter
fcoms
loope
stos
or
sub
mov
push
insl
mov
add
push
inc
add
or
mov
or
mov
das
shll
adc
sub
mov
xor
shr
sub
jno
data16
cld
mov
hlt
mov
jns
shl
xor
aaa
fldenv
jmp
loop
xchg
mov
hlt
xor
lods
outsl
cli
in
cs
fcoms
mov
aas
mov
pushf
xor
outsl
test
sbb
add
andb
lret
sti
fiaddl
adc
icebp
ja
or
ret
adcb
add
stos
shrb
xor
inc
mov
lret
rorb
jp
lds
mull
shl
out
shrb
fwait
jmp
aam
lods
mov
and
loop
jl
jo
out
dec
mov
xchg
dec
cmp
mov
not
xchg
jae
mov
ja
push
in
jge
icebp
lret
xchg
into
dec
mov
imul
outsb
test
sub
push
add
lea
add
stc
dec
xchg
lret
jb
cmp
mov
aad
das
cmp
ret
adc
jmp
or
ret
out
call
lcall
add
cmovs
ret
cmp
mov
xlat
and
arpl
int
pop
insl
inc
adc
inc
in
sbb
je
jge
sub
ss
mov
addb
cmp
ret
push
sahf
add
testl
fildll
ljmp
cmp
ljmp
aam
or
add
in
mov
lods
cs
jg
scas
test
movsb
insl
lret
sub
pushl
hlt
lds
jbe
test
repz
ds
dec
jns
lcall
or
xchg
in
pop
cli
add
xchg
sti
scas
sti
pop
add
clc
cltd
jp
std
sub
sti
xchg
out
popf
test
std
xor
insb
adc
sub
insb
int
inc
fiaddl
movsb
add
mov
js
sbb
in
cmp
push
fwait
inc
stos
adc
test
ret
or
or
pop
or
xorb
pushf
mov
call
push
mov
sbb
insl
and
jo
and
mov
aaa
and
ficompl
out
stos
dec
pop
pop
inc
lods
lret
pop
cltd
push
jle
cmp
pop
bound
push
lahf
adc
inc
in
js,pn
cmpsl
pop
lcall
xchg
jl
add
jne
mov
mov
push
test
sub
jne
clc
sub
xchg
mov
jmp
jmp
fdivrs
jbe
mov
test
dec
and
dec
test
outsl
bound
pop
lcall
or
adc
shrb
clc
addr16
fadds
ficompl
cmp
push
stos
mov
jmp
and
stos
xchg
out
stos
lcall
loopne
xchg
data16
daa
inc
jle
jl
or
shll
cmpsb
fsubs
add
popa
call
push
fldt
out
add
jmp
cmp
ficomps
push
add
ja
mov
or
outsl
int3
out
test
loope
mov
movl
movsb
pop
loopne
movl
add
test
mov
xchg
scas
leave
sub
mov
push
pop
lock
sub
out
lock
inc
fadd
cmp
jne
add
lret
add
inc
jecxz
daa
mov
shll
icebp
out
add
lock
or
push
notl
mov
pop
or
inc
mov
enter
cli
xor
jg
mov
push
xchg
test
jl
add
mov
ds
nop
aaa
or
or
sbb
aaa
pop
test
inc
sbb
sub
test
in
sbb
mov
divb
faddp
dec
add
xor
xchg
nop
mov
pop
xchg
or
adc
xchg
cmp
xor
lock
or
or
or
adc
inc
out
int3
mov
scas
mov
dec
push
daa
mov
sub
lret
arpl
dec
jecxz
out
sub
out
sti
shl
arpl
mov
or
in
stos
adc
movsb
js
jmp
in
lret
jns
sub
shrl
ret
repnz
jnp
cmp
repnz
jmp
xor
inc
cmp
std
je
lret
test
mov
ds
std
out
shl
in
in
mov
fmul
jl
add
repz
stc
sub
lea
mov
in
mov
cli
add
fnstcw
inc
pop
lock
aad
lds
or
or
mov
jmp
or
test
hlt
push
hlt
enter
or
repnz
and
and
inc
ss
hlt
in
pop
je
scas
mov
sub
sub
xchg
jo
and
repz
jnp
jae
testb
cmp
jno
roll
inc
sahf
sub
fs
add
sub
in
push
pop
jmp
lcall
movsl
rclb
test
pop
in
dec
sarb
js
mov
cltd
push
aad
mov
push
icebp
int3
mov
cmp
add
fsubrl
adc
call
idiv
inc
loope
sub
mov
cli
addb
ret
sbb
test
mov
cld
sahf
cmp
das
jp
fwait
pusha
and
insl
push
pop
mov
and
lret
stos
or
std
xor
add
adc
mov
fcmovu
dec
test
sbb
dec
sbb
je,pt
ja
mov
push
pushf
ret
jnp
das
jmp
mov
cmpsb
inc
loope
pop
stos
clc
mov
jns
add
jge
mov
ja
or
scas
add
insl
jae
jecxz
popf
sti
add
jl
adc
add
fstl
shll
ret
push
test
inc
fsub
inc
insb
jae
push
sub
movsb
sbb
les
and
les
mov
push
sub
ret
sahf
mov
lret
jge
sbb
stc
mov
cld
add
add
scas
mov
fmul
xor
ret
jmp
sub
lds
loop
push
cmp
or
das
push
lcall
test
mov
or
je
or
imul
addl
push
sbb
xchg
nop
dec
out
inc
in
fmull
mov
fistl
inc
push
rcr
mov
pop
push
mov
insb
sub
fidivs
jae
push
sbb
call
or
dec
or
lahf
xchg
sbb
mov
ja
fdiv
out
sub
sbb
adc
insl
mov
cmpsb
pop
or
cmp
bound
js
mov
out
add
dec
call
test
aad
xchg
gs
adcl
jle
jnp
dec
adc
lds
pushf
push
fwait
dec
and
enter
mov
jge
lods
out
or
les
mov
sbb
ss
mov
mov
inc
mov
ret
stos
push
dec
repnz
push
adc
imull
iret
ds
stos
insl
fimuls
and
je
ljmp
jp
data16
mov
mov
xchg
pop
push
or
add
cld
or
adc
jl
and
or
push
test
xchg
aas
dec
js
les
or
mov
pop
test
push
cmp
jl
jmp
in
sbb
stos
mov
dec
arpl
loope
mov
sbb
and
cmp
fistpll
rcr
lods
cmpsl
imul
xchg
data16
xchg
fisubs
in
ds
dec
sub
inc
rol
jp
addb
pop
lcall
push
adc
repnz
popa
test
or
pop
push
out
roll
push
mov
jnp
push
in
mov
or
or
mov
fldcw
mov
cmpsl
out
push
lret
cld
fisubl
lods
or
scas
cmp
fwait
shll
and
sub
dec
insb
rclb
mov
sub
outsb
lods
enter
sub
add
mov
icebp
or
iret
mov
sti
mov
adc
sbb
cmpsb
popf
enter
xor
xchg
jp
jae
adc
jne
or
int3
cmp
insl
je
in
cmpsl
out
enter
loop
jp
xor
inc
cmc
sub
or
xchg
cmp
jmp
or
mov
mov
inc
orb
mov
jns
xchg
sbb
ret
mov
call
xchg
pusha
insb
aas
dec
inc
hlt
ljmp
xchg
or
mov
incb
rcrb
push
js
push
adc
rcll
mov
ds
insl
les
fildl
xchg
mov
imul
push
jp
pop
ds
or
out
cmp
cmp
sbb
xchg
fnstcw
not
cmp
pop
sbb
sbb
imul
stos
shr
xchg
ds
jmp
push
stos
mov
cli
add
cmpsl
gs
cs
sub
enter
sahf
aam
jmp
add
or
or
jo
push
mov
cmp
push
scas
shrb
inc
or
fdivr
mov
add
xchg
sub
adc
out
movsl
aas
pop
scas
popa
lods
sub
push
cwtl
adc
mov
cmp
test
outsb
dec
ret
roll
ret
add
push
xchg
mov
out
or
outsl
lret
sub
adc
or
jo
outsl
or
dec
test
adc
xchg
cmp
mov
cld
push
je
ret
sub
mov
addl
xchg
shll
dec
test
mov
lret
add
imul
and
sbb
test
mov
add
mov
or
in
enter
mov
push
stc
cli
ja
fnstenv
jns
iret
inc
mov
pushf
dec
or
adc
dec
or
mov
aaa
mov
mov
pop
push
add
mov
sbb
sti
inc
sarl
add
fistl
lods
sub
add
cmpsb
aas
add
cmp
jl
divl
mov
adc
sbb
ret
lods
or
inc
adc
insl
test
pusha
sti
rorb
mov
sub
mov
xchg
shl
popf
or
lret
xor
shr
jmp
cld
out
add
pop
push
les
or
xchg
mov
mov
push
or
add
jmp
ficoms
push
sarb
les
cmp
out
mov
hlt
gs
cmp
cmpl
or
movsb
imul
adc
cmp
loop
add
sti
lret
mov
sti
in
scas
sti
sti
xchg
or
mov
or
lret
and
adc
inc
jbe
out
and
jb
stos
stos
rolb
ror
mov
nop
mov
or
or
lods
sti
fistpll
hlt
insb
add
xchg
add
dec
mov
imul
hlt
or
mov
test
jl
in
hlt
mov
popa
jnp
push
mov
sbb
aas
inc
add
fwait
in
in
jg
or
les
std
cmp
and
addr16
shll
repz
or
or
add
pop
or
ljmp
shl
dec
mov
mov
js
ljmp
into
mov
loopne
xchg
test
mov
jmp
popf
push
add
mov
xor
loopne
ljmp
pushf
out
mov
cmp
xchg
jne
and
ficompl
loopne
inc
lock
and
cmp
mul
jle
mov
or
test
sub
dec
adc
imul
or
notl
push
pop
mov
push
stos
pop
pop
je
sub
int3
repnz
outsl
xchg
fcmove
call
ret
mov
add
mov
cmc
and
cmp
out
shll
mov
ja
call
inc
and
out
mov
sahf
ficomps
xor
adc
inc
cli
orl
push
mov
dec
mov
fsubs
fcmovu
imul
sbb
push
sub
shll
enter
mov
into
lea
push
cltd
jp
roll
lcall
jne
enter
push
jmp
in
mov
dec
dec
xor
sub
jl
str
ljmp
jge
adc
jb
popf
mov
insl
xchg
pop
test
into
sub
add
jmp
sub
sub
enter
sub
ficomps
inc
mov
enter
test
lahf
cltd
lds
pushf
xchg
ja
add
mov
inc
shrl
notl
pop
clc
add
xchg
xor
repz
nop
mov
push
cmp
xlat
shrl
push
mov
das
xchg
lret
jp
cltd
out
inc
sub
push
xor
jnp
int
or
cwtl
outsl
xchg
sarb
jne
adc
dec
clc
imul
addr16
rcr
mov
cli
pop
ljmp
mov
dec
xchg
mov
or
mov
xchg
add
or
out
dec
sub
jnp
sti
sbb
push
fists
scas
fcmovu
pop
out
pop
add
mov
jmp
and
lret
dec
and
stc
ret
out
adc
jbe
popf
mov
mov
addr16
addr16
mov
ja
sbb
or
jl
jns
lock
nop
aaa
or
dec
loop
lds
xor
sti
jl
in
mov
shlb
push
jl
in
mov
ljmp
mov
jmp
mov
je
sahf
jmp
dec
adc
rcrl
jnp
pop
rorb
clc
ljmp
test
popl
sub
lods
dec
xorb
or
adc
mov
leave
ficompl
cltd
and
std
mov
out
insb
cmp
jnp
adc
lret
push
das
or
fiaddl
aam
pop
mov
adc
call
lcall
stos
xchg
mov
test
adc
pop
mov
and
ret
imul
int3
inc
mov
sbb
shrl
jecxz
xchg
mov
add
ljmp
inc
push
int3
mov
jp
sub
mov
pop
dec
outsb
mov
push
test
cld
orl
xor
jb
mov
fnstenv
shll
pop
in
rorb
jbe
dec
test
jl
jge
cli
sub
pop
imul
mov
sub
pop
add
outsb
push
repnz
jae
xor
mov
popf
lret
fmul
mov
mov
mov
sub
in
insl
insl
mov
int3
fdivrs
jl
sub
sahf
xlat
sub
jmp
and
dec
xchg
lods
out
ret
add
fwait
hlt
or
icebp
jnp
loope
inc
add
loope
aam
lods
add
jp
inc
cmp
test
cmp
es
icebp
push
sarl
pop
imul
or
sahf
mov
mov
es
push
test
inc
cmpsl
jbe
test
or
fisttps
adc
xor
jl
hlt
sub
jns
lahf
cmp
jmp
add
push
xor
lock
dec
rclb
cmp
inc
std
jmp
or
mov
cmpsb
sub
ret
cmp
insl
sti
jl
push
dec
shrl
jecxz
dec
lock
inc
jecxz
or
sbb
jg
dec
or
dec
rcrl
push
pusha
pop
lcall
js
or
je
push
stos
mov
jmp
jp
or
daa
push
ljmp
or
mov
fs
jns
jp
popf
mov
shl
mov
or
scas
xchg
jae
jne
js
or
stc
insb
test
adc
inc
dec
dec
add
inc
enter
fmul
mov
sarl
add
cmp
dec
pop
mov
subb
sub
divb
or
insb
or
or
cmp
dec
jns
shlb
sub
orb
sub
sbb
mul
loopne
cmp
push
mov
or
loope
jl
push
aaa
jns
fdivl
xchg
lea
mov
sahf
push
mov
pusha
loopne
nop
notb
lahf
pop
adc
test
mov
stos
in
push
xor
add
sti
jb
fisubs
and
fsub
out
or
lcall
jl
shll
mov
jnp
aam
add
lcall
mov
sbb
ds
loopne
jl
jmp
mov
cld
je
lea
ret
mov
xor
mov
les
push
add
mov
mov
xchg
notl
mov
stc
jbe
in
dec
dec
test
jle
xor
roll
fldenv
inc
daa
xchg
repz
shrb
ret
fdivl
hlt
in
mov
mov
pop
inc
and
add
test
mov
xor
shrl
add
xchg
outsl
ret
or
aam
daa
in
push
in
inc
add
push
inc
loopne
fwait
daa
mov
adc
in
sub
ret
in
mov
dec
js
jmp
mov
push
push
les
jl
dec
test
pop
sub
inc
sub
mov
enter
mov
push
adcl
add
xor
jns
repnz
or
add
mov
add
movsl
stos
jo
jnp
in
push
or
sar
nop
fst
shl
stos
daa
test
sbb
loop
pop
jmp
loope
lcall
jl
outsb
dec
pop
push
pushf
lods
mov
sahf
push
cmc
gs
cmp
out
xchg
push
cmp
cmp
jmp
jne
pop
fldcw
cmp
sub
shr
jmp
je
subl
or
imul
stc
cmpl
in
js
add
jl
std
mov
adc
inc
ret
aam
pop
jns
push
test
lock
sbb
addr16
add
aam
mov
daa
aam
and
loop
mov
lret
dec
pop
insl
test
shll
cld
pop
popf
fdivs
add
jns
aaa
pop
flds
jne,pt
mov
aad
lods
fildl
xor
dec
pop
inc
pop
shrb
lret
mov
fcom
adc
orl
rcr
into
shl
in
pop
xor
cmp
mov
add
in
scas
lret
pop
adc
ret
daa
or
rcll
cmp
and
ret
sub
mov
xor
dec
out
cltd
cld
or
imul
fsts
into
in
cld
pop
stos
scas
mov
or
xlat
clc
and
push
addr16
xchg
sub
jbe
mov
jno
mov
in
pop
aam
mov
icebp
nop
mov
sub
mov
shll
sub
jb
scas
pop
sub
fisubrs
iret
mov
lods
arpl
xchg
mov
dec
xchg
push
stos
or
pushf
dec
or
cmpsb
mov
iret
test
ds
jmp
mov
or
jbe
and
scas
dec
jns
push
or
pop
xchg
daa
int
dec
mov
ss
in
loop
sub
xor
xchg
mov
icebp
dec
pushf
arpl
std
mov
orb
mov
or
enter
insl
add
lret
pop
aas
scas
aad
subl
std
pop
and
jbe
clc
test
dec
fstp
subb
adc
enter
cmp
jne
xchg
loope
test
xor
or
push
subb
rcl
loopne
sub
icebp
cwtl
push
add
imul
xor
mov
or
push
rcr
pop
pop
xchg
scas
sbb
push
or
or
hlt
fiaddl
xchg
sbbb
shrb
inc
jmp
aaa
shlb
insb
and
aas
pop
mov
add
rep
lret
shr
xor
or
or
test
sbb
jmp
sub
scas
jmp
int3
cmpsl
shrb
xchg
or
sub
cmp
mov
mov
dec
in
xor
cmp
push
add
or
out
out
lahf
repnz
mov
pop
mov
outsb
lret
roll
mov
ja
xchg
inc
in
jge
sub
mov
inc
stos
lcall
jle
lahf
fisubrl
xchg
repnz
cmc
fnstcw
add
add
sub
mov
xorb
inc
sub
mov
xor
sarb
fcmovnu
or
or
inc
jmp
cld
or
shlb
sarb
lods
insb
aaa
dec
sbb
xor
mov
jno
xchg
mov
or
cmp
mov
cmp
sub
lea
xor
jbe
mov
lret
add
or
sub
mov
dec
cmpb
pop
orb
icebp
test
mov
cmc
enter
add
test
leave
xlat
add
jl
xor
dec
and
aas
pushf
push
or
cld
int3
or
mov
mov
mov
addl
add
or
js
cld
push
sub
ret
pop
icebp
push
push
pusha
in
lods
push
xor
ds
lods
inc
push
daa
inc
mov
and
push
stos
xor
hlt
jmp
leave
push
push
test
add
sub
jns
inc
mov
dec
push
scas
mov
loop
cmp
stc
insb
outsl
cwtl
mull
fbld
jecxz
jmp
into
adc
add
mov
rorl
or
movl
xchg
cmp
ret
jb
sbb
out
mov
stc
mov
aad
or
imul
xchg
xchg
pop
mov
add
or
adc
lret
fcoml
or
fidivrl
or
sub
push
cmp
andb
fucomi
aad
pop
adc
sbb
mov
inc
int3
add
in
rorb
push
in
inc
push
out
or
jmp
mov
push
mov
in
or
dec
lret
dec
mov
sbb
add
cld
mov
ja
pop
cmp
mov
test
fcmovnb
sbb
dec
cmp
sti
lock
mov
test
add
mov
clc
inc
xlat
jp
imul
lock
inc
cld
add
lock
sub
mov
enter
fwait
ds
cmpsb
test
dec
movsl
sahf
jl
sub
cltd
dec
add
jnp
clc
cmpb
repz
test
aad
inc
jge
inc
and
stc
and
stos
lock
ds
out
jne
push
ret
clc
mov
mov
cld
dec
stc
push
add
dec
test
add
jge
jp
lods
stos
xchg
cmpsl
sti
int3
test
xchg
push
mov
ror
lock
dec
les
xor
jae
cmp
lret
scas
or
fiadds
cmp
add
jns
je,pt
scas
dec
lods
xchg
inc
add
lods
inc
jmp
mov
shl
stos
sbb
pop
add
pop
or
packuswb
push
stc
hlt
out
inc
or
test
cmc
push
shr
push
addb
clc
and
lods
mov
push
mov
pop
cmp
insl
push
cmp
mov
mov
cld
ljmp
jb
repnz
pop
pusha
xor
sbb
stos
mov
mov
pop
and
mov
out
cmp
cs
test
int3
inc
xchg
fldt
pop
jbe
dec
cmpsb
inc
dec
aam
data16
pop
jmp
enter
or
or
pop
fldenv
jae
loope
imul
push
loope
imul
movsl
jne
jno
pop
fisttps
cmp
xchg
or
repnz
add
lret
sti
sti
add
jne
hlt
fsts
or
stos
pop
add
mov
mov
sbb
ds
cmp
ret
fucom
scas
or
clc
into
cmp
stc
js
insl
lods
or
add
add
jbe
pushf
pop
adc
pop
or
test
cltd
pop
lret
and
or
jp
jecxz
call
jp
dec
sub
js
sahf
lret
add
les
stc
push
mov
lcall
push
inc
inc
pop
cld
popf
pop
ss
lods
jno
ret
js
mov
adc
push
jmp
and
adc
or
or
insl
cmc
fwait
xchg
std
mov
mov
lock
sub
push
orl
xchg
sbb
imul
ret
or
add
adc
or
jp
mov
dec
ss
es
into
mov
dec
inc
jns
mov
mov
or
in
div
stc
test
test
mov
inc
sub
jecxz
jmp
lea
push
jo
div
mov
js
mov
xor
clc
sub
lret
inc
mov
or
or
sbb
stc
add
fmuls
js
pop
clc
and
or
mov
mov
sahf
mov
dec
push
push
dec
push
pop
je
lahf
dec
sahf
push
mov
mov
insb
stc
jnp
add
in
arpl
and
or
pop
sti
jnp
iret
outsb
pop
roll
inc
xchg
push
pop
push
adc
or
mov
insl
pop
jmp
subb
fnstenv
xor
dec
pop
xor
enter
test
out
ret
mov
push
fldt
dec
ljmp
push
add
mov
ds
pop
inc
cmpb
fmul
or
pushf
lret
lods
fwait
das
pop
rcl
jb
insb
or
lds
js
inc
std
pop
shll
xlat
daa
or
xor
jl
push
adc
stos
lcall
sub
lea
adc
xchg
and
out
fisubl
mov
std
xchg
sbb
movsl
fcoml
clc
fs
out
icebp
add
jge
lcall
lds
enter
idiv
lahf
lret
adc
sar
add
es
add
mov
stos
jns
cmp
lods
pop
int3
jbe,pt
out
sbb
lcall
mov
ss
pop
jbe
imul
aas
inc
std
out
mov
mov
fildl
or
lods
mov
dec
aad
mov
pop
dec
dec
sbb
inc
jl
xchg
mov
je
push
test
push
ljmp
ret
jl
pop
push
inc
dec
adc
push
outsb
dec
iret
jmp
sbb
mov
sbb
aad
adc
lahf
cmc
sahf
pop
stos
or
and
aam
in
xor
mov
lods
fs
insl
pop
jge
or
shlb
aam
and
or
mov
push
stos
dec
outsl
add
gs
sub
cmpsl
or
into
or
arpl
sbb
adc
mov
dec
in
daa
popf
nop
add
clc
inc
out
loop
and
pop
jbe
mov
aad
ret
imul
ror
test
cmpsl
lret
jl
mov
test
ret
push
test
add
sub
fadds
and
hlt
or
lods
repz
adc
xchg
xchg
dec
mov
mov
or
stos
mov
rcrl
sbb
add
enter
stos
in
mov
jns
xchg
ret
dec
inc
shlb
mov
dec
addb
add
mov
rclb
stos
jb
shr
out
shr
sahf
xchg
out
flds
or
push
andb
movsl
iret
ds
inc
mov
jne
mov
dec
jns
add
or
or
rcrb
or
mov
lods
mov
xchg
lds
lcall
push
ficompl
sbb
mov
xchg
add
rolb
mov
imul
fmuls
xlat
mov
inc
aaa
lret
xchg
mov
rorb
add
dec
xlat
pop
jb
sub
push
rol
test
and
enter
push
hlt
sbb
into
shll
jl
cli
cld
or
push
aaa
das
mov
mov
leave
movsl
cvtps2pd
insb
push
jge
pop
jl
pusha
loope
incb
je
fistl
arpl
mov
xchg
loope
pushf
jb
arpl
das
int3
cmp
roll
stos
mov
and
mov
loope
inc
fimuls
enter
mov
mov
mov
sub
in
sbbb
fildl
dec
and
mov
in
mov
std
sbb
aam
or
xor
cmpsb
xchg
cmp
dec
or
sbb
jge
out
sbb
shl
jmp
dec
sbb
pop
add
or
out
xchg
movsl
stos
cld
mov
hlt
std
enter
dec
mov
or
std
dec
aad
dec
pop
inc
fmull
jae
arpl
nop
xchg
xlat
stos
dec
stos
movb
mov
insl
sarl
cmp
or
sahf
in
scas
shr
out
ret
push
add
sub
or
add
arpl
or
mov
js
adc
ret
mov
or
sti
fstpl
ret
ljmp
sbb
add
or
adc
dec
in
or
into
and
ds
mov
xchg
jbe
xchg
out
jae
and
xorb
ja
push
cmp
sub
dec
int3
jo
lock
cli
outsl
dec
fisubs
xlat
ds
mov
decl
in
loop
cld
lret
mov
lock
jne
cmp
add
inc
rcrl
xor
ja
sahf
mov
adc
and
xchg
mov
jg
les
test
test
xchg
push
aam
fwait
push
cmp
pop
fnsave
loop
je
or
inc
push
adc
out
mov
mov
push
pop
cmpsb
and
fucomp
std
sbb
mov
cld
mov
pop
push
aas
inc
or
movsl
out
xor
xor
ret
enter
add
testl
scas
push
pop
push
xor
gs
mov
iret
xor
rol
jp
xlat
pushf
mov
mov
rclb
roll
sub
dec
xchg
or
call
mov
cwtl
aas
mov
mov
push
fisttps
js
popa
addr16
orps
and
jne
movsb
arpl
adcb
out
sub
push
mov
sub
add
dec
lods
pop
or
adcl
fisttps
jecxz
mov
push
cli
mov
xor
mov
inc
lcall
stc
nop
mov
fcoml
loopne
cmp
aam
adc
sub
cs
imul
out
sbb
adc
pop
pusha
mov
insl
inc
add
pushf
add
stc
loop
dec
pop
test
pop
std
stos
jg
xchg
cmp
cmp
pop
sti
xor
into
xchg
mov
xchg
jmp
stos
mov
hlt
add
push
sub
fs
enter
jp
mov
test
xor
cmc
mov
dec
movsb
stos
hlt
add
dec
mov
jne
sub
xchg
jmp
fwait
push
je
and
scas
fdivs
out
push
add
inc
fdivr
add
cmp
jge
and
mov
mov
or
cmp
dec
out
stos
lret
sub
pop
pusha
push
sub
lods
mov
stos
dec
scas
mov
inc
cmp
lods
std
data16
pushl
insb
xor
pop
jecxz
test
pusha
push
push
jnp
xor
mov
adc
xchg
decb
push
sub
mov
inc
aad
lods
je
dec
and
fsts
pop
pop
pop
adc
dec
sub
cmp
or
divl
lea
or
imul
lahf
sbb
ret
movsl
js
push
cli
sarb
loopne
ljmp
stos
xor
pop
jne
add
shrl
nop
into
pop
je
scas
out
int
rsm
pop
loop
mov
push
xchg
bound
loope
or
mov
jmp
and
push
cld
lret
lret
dec
mov
jmp
cmp
xor
or
sbb
or
sti
or
inc
jns
jbe
dec
popf
jns
movsl
outsb
xor
or
scas
ja
mov
mov
mov
adc
stos
daa
sti
and
std
movb
adc
dec
or
movsb
sbb
in
adc
push
ds
rolb
rcll
or
push
add
lock
fldz
cmpsl
add
cmp
sbb
add
in
ret
ljmp
rcr
ficompl
sub
test
add
push
mov
out
pop
jmp
or
cmpsb
adc
mov
pop
sub
cmpsb
add
lret
jmp
or
sub
iret
push
dec
pop
pop
push
out
cmp
out
dec
sub
sbb
xor
int3
jmp
xchg
dec
pushf
xchg
dec
in
cmp
aaa
dec
mov
jno
test
test
sub
lods
popf
cmp
or
cmpsb
mov
fwait
imul
dec
jne
js
shll
stos
dec
into
xor
lds
outsb
ljmp
enter
aaa
jae
lock
push
mov
sbb
out
in
xchg
lret
jb
add
stos
mov
icebp
add
inc
shl
out
push
faddl
or
and
add
in
lods
mov
lods
sbb
sti
daa
xor
mov
cmc
mov
lret
faddl
dec
push
adc
sub
mov
stos
cmc
jl
repz
mov
mov
stc
push
push
arpl
add
pop
in
and
mov
roll
and
gs
add
cld
aad
or
sub
xor
or
cmpsl
lods
mov
mov
fidivrl
sbb
sub
cld
hlt
mov
add
je
ret
mov
aam
fldcw
mov
int3
mov
ds
into
jp
sbb
mov
mov
jae
jg
insl
imul
inc
into
mov
idivl
mov
dec
add
xchg
add
lods
test
loop
idivl
sar
decb
ss
ljmp
insl
das
lods
iret
mov
les
sub
or
fcmovnbe
fcmovnu
or
jo
frstor
roll
aas
jae
jnp
insl
imul
les
faddl
sub
mov
out
fsubrl
fsubrs
call
jno
pop
cli
mov
jns
stos
xor
test
mov
mov
sar
loop
sub
mov
inc
fisttpll
inc
pushf
and
pop
sti
std
cld
aaa
and
sarb
push
sub
jge
int3
dec
mov
and
cmpsl
ret
stc
call
loop
stos
or
test
into
ljmp
mov
scas
into
pusha
xchg
push
mov
mov
mov
mov
push
ja
pusha
or
in
gs
inc
xchg
test
movsb
lahf
sbb
or
jp
cmp
or
or
pop
mov
stos
or
pop
jmp
fsubr
cltd
adc
fstpt
call
fstpl
in
mov
sub
sub
data16
faddl
xlat
call
shrb
push
rcl
leave
jmp
dec
push
fistps
aad
daa
pushf
push
adc
insl
lods
cltd
or
mov
sbbb
mov
pop
enter
inc
cmpsl
and
cmp
push
dec
cmpsl
call
out
repnz
leave
cld
adc
pop
enter
stc
pop
dec
rcrb
and
or
push
jg
xchg
pop
out
lret
push
xchg
mov
xchg
and
sbb
mov
js
call
mov
js
rolb
push
cltd
and
mov
pushf
mov
in
add
fs
mov
lea
orl
add
repnz
arpl
add
lret
sarb
add
mov
dec
adc
movsb
jae
pop
cmp
test
cli
iret
daa
cli
aaa
call
sub
cld
aam
xor
mov
mov
inc
xchg
xchg
test
mov
rep
stos
or
decb
cmp
lahf
mov
add
stc
xchg
lcall
scas
dec
inc
mov
push
adc
shrb
in
ficoml
push
and
sarl
sbb
das
or
jae
test
cmp
mov
or
and
cmp
add
add
mov
and
or
lret
jns
mov
js
hlt
call
jae
mov
bound
sub
xor
add
sti
mov
int3
dec
or
mov
push
fisttpll
lea
or
fdivrs
and
push
orb
shll
ret
add
jl
daa
push
xlat
xchg
jbe
aad
mov
cmpsb
shrl
jmp
xchg
jmp
loopne
sbb
mov
lret
imul
lea
repnz
dec
pop
clc
fwait
mov
or
or
push
lret
pushf
or
push
lahf
dec
incb
out
dec
xchg
push
or
int3
sahf
scas
mov
data16
je
mov
pop
cli
xor
sbb
or
cmp
and
mov
sub
jmp
or
addb
or
addb
lcall
or
mov
sbb
or
xchg
cmovge
mov
lock
mov
dec
mov
jnp
xor
sub
int3
sti
jmp
jae
push
in
packssdw
in
dec
pop
stos
mov
xchg
push
scas
adc
lods
out
push
jae
repnz
or
sete
arpl
rol
add
mov
add
pop
scas
ljmp
push
aaa
stos
enter
sbb
xchg
loop
sbb
fdivs
mov
out
fdivr
xlat
sbb
nop
mov
aad
push
xchg
cmp
int3
push
or
or
push
pop
push
mov
push
iret
lret
out
push
mov
insl
lcall
mov
stc
pop
fbstp
sub
add
loope
xor
sahf
into
dec
push
call
lock
lods
pushf
mov
cmp
ja
lds
rorl
push
sub
adc
pop
or
iret
or
or
xchg
test
add
push
ds
and
mov
jecxz
push
and
int
cmp
push
ss
fcmovnu
sub
pop
mov
push
mov
jecxz
push
add
test
mov
push
popa
lock
sbb
andb
cmp
int3
lret
sub
idivl
xor
mov
mov
xchg
mov
jl
mov
or
js
or
movsb
dec
aaa
sub
cmp
cli
jns
test
inc
sub
aaa
inc
or
movsb
fs
sbbb
lods
out
insl
jmp
dec
add
inc
icebp
dec
lret
test
and
ljmp
sarl
cmp
jge
dec
dec
adc
pop
pop
test
push
dec
les
push
or
rcr
jp
bound
add
mov
add
cmp
and
popf
orb
cmp
add
imul
scas
out
sbb
jnp
aam
movsl
mov
add
aam
outsl
xchg
rorl
add
popa
mov
out
pop
cmp
push
stos
pop
push
add
cmc
orb
jp
sub
movsl
popf
fldt
mov
dec
int3
xchg
adc
stos
cmp
cmp
adc
cmp
cld
xchg
or
js
popa
daa
xchg
and
xchg
stos
add
leave
and
int
mull
rcrb
adc
addb
add
ret
sbb
or
mov
mov
aad
sub
xlat
aaa
push
or
repz
arpl
jb
icebp
push
cmp
insl
pop
cmp
mov
rclb
add
rcr
lods
cmp
jmp
jp
pushf
add
mov
in
into
mov
clc
ds
out
sub
or
out
jecxz
sub
pop
or
jo
jl
or
xchg
xchg
adcb
fdivrp
inc
data16
push
movsb
or
cmpb
or
pop
add
mov
clc
jl
out
clc
sbb
decb
push
out
jecxz
pop
adc
push
insl
cmpsl
dec
sar
test
stos
lods
sbb
movl
jp
fisttpll
ds
out
pop
out
adc
mov
out
or
lock
pop
jle
mov
mov
pop
dec
in
sub
xorb
mov
mov
sub
dec
mov
and
push
sub
or
out
call
push
xchg
xor
xchg
or
cmp
rcll
cmp
jb
inc
add
mov
insl
mov
int3
sub
inc
xchg
dec
pop
push
mov
mov
jp
mov
imul
std
adc
dec
or
push
jmp
pushf
xchg
cmp
or
sub
sub
or
addr16
testl
jns
std
add
movsl
iret
xor
sub
push
jmp
fdivr
dec
std
popa
xorb
xchg
test
push
jge
cmpsl
test
outsl
lret
push
xorb
ret
xchg
mov
or
or
testl
xchg
mov
jge
mov
outsb
add
inc
stc
mov
rcrl
into
fmul
into
std
call
ret
cli
mov
add
add
out
inc
shlb
mov
lahf
rolb
scas
shl
jg
into
and
lock
add
adc
test
adc
xlat
cmc
sub
imul
sub
sbb
push
addr16
mov
in
movsl
out
mov
cmp
ds
jo
and
ret
adc
imul
mov
scas
xchg
and
ljmp
adc
xchg
lret
add
xor
cmpsl
jl
sti
sub
ljmp
in
or
or
dec
insb
ss
leave
cmpsl
cld
mov
int3
mov
or
dec
xchg
lock
sti
sub
cli
ds
lret
mov
pop
int3
cmp
fcompl
pop
sub
xchg
push
loopne
icebp
push
jo
in
cli
int3
jecxz
repz
sub
xor
in
add
std
mov
dec
and
imulb
pushf
push
add
fs
sti
jl
les
or
cmp
push
pop
test
pushf
dec
sahf
stc
popa
inc
sub
idiv
pop
mov
sbb
idivl
dec
test
mov
sti
in
inc
fcompl
mov
les
lods
sti
add
sub
dec
arpl
sub
pop
aaa
test
fnsave
gs
test
adc
loope
cmp
or
pop
mov
inc
repz
mov
pop
inc
stc
lea
int3
mov
sub
mov
scas
jnp
out
pop
push
push
cmp
mov
mov
sub
out
daa
jae
cli
ret
std
ds
outsl
mov
in
cli
push
mov
cwtl
jle
enter
fildll
add
sbb
call
shrl
pavgw
and
les
loop
out
mov
adc
jnp
or
xor
lods
scas
test
cmc
fsubrl
push
pop
mov
fildll
mov
mov
lods
mulb
sti
and
aam
pop
lock
stc
pop
cmp
push
mov
jo
or
das
repz
push
hlt
pop
mov
int3
cli
dec
rorl
cmp
ficomps
std
or
lds
push
sar
clc
or
xor
sti
inc
mov
add
fmuls
cmc
call
adc
out
std
or
and
sub
lods
xorb
pop
pushf
or
lret
mov
cmp
testb
cltd
cmp
fistl
cmp
add
add
mov
add
cmc
insb
add
call
jo
push
inc
cmpsb
lods
pop
out
addr16
mov
or
stc
aaa
and
push
jnp
shrb
add
dec
cs
xlat
sub
lcall
insl
or
cmp
out
push
mov
push
daa
std
push
lret
pop
push
popf
js
sbb
dec
imul
lcallw
outsb
aas
sub
call
pop
fsubrs
and
lods
sbb
add
test
or
dec
cltd
shll
cmp
scas
test
xor
in
add
mov
mov
jno
mov
pop
ret
jnp
and
test
adc
pop
fimull
outsb
lret
jb
xchg
push
jl
mov
jl
sti
and
std
xlat
aaa
add
jbe
jns
sbb
int
or
mov
int3
mov
mov
mov
shl
test
and
sbb
outsb
push
xor
xlat
xchg
or
add
cmp
jmp
xchg
mov
pop
pop
cli
or
push
scas
cmp
out
leave
stos
or
xlat
test
cmp
cmp
mov
in
insb
sbb
pushfw
pop
xor
sti
int3
in
dec
sub
dec
jg
scas
sub
xchg
pop
fisttpl
and
or
idiv
lods
loope
jns
push
pop
js
stos
or
les
sub
push
dec
mov
mov
in
clc
push
outsb
inc
mov
pop
jecxz
loope
mov
cld
dec
ret
mov
stos
ljmp
jmp
leave
out
push
mov
or
test
inc
outsl
popa
imul
sti
sahf
ja
cmpsb
cmpsb
adc
mov
add
lock
inc
in
push
mov
outsb
dec
mov
jbe
pop
fiadds
stos
or
mov
or
daa
mov
mov
or
pop
mov
std
rorl
daa
fnstsw
test
sbb
cmpsl
jae
imul
jp
mov
cld
jmp
add
mov
sbb
enter
mov
inc
inc
or
or
pop
js
mov
movsl
mov
loop
mov
push
addl
or
mov
push
movsb
pop
add
out
and
jp
push
inc
sub
movq
insb
dec
pop
push
movsl
xchg
xchg
faddl
sbb
shl
pop
out
insb
pusha
mov
gs
movsl
nop
lods
data16
or
icebp
lcall
aaa
cmpsl
mov
fwait
xchg
pop
jp
icebp
mov
loop
rorl
out
adc
pop
cltd
pop
cltd
sub
jb
roll
inc
or
mov
mov
jmp
add
dec
ret
mov
jbe
xchg
in
sar
mov
pop
scas
stc
lods
mov
lahf
add
jle
clc
or
push
pop
imul
adc
mov
faddl
jecxz
testl
out
lods
aam
dec
pop
adcl
std
adc
adc
out
jmp
lcall
jge
and
jg
add
add
xchg
add
out
out
cmpsb
push
call
cwtl
das
mov
loop
mov
out
dec
add
movsl
or
arpl
addb
arpl
lods
dec
xchg
pushf
mov
sub
test
bound
dec
mov
mov
icebp
jp
gs
jp
jne
testl
jp
mov
dec
jle
cmp
sahf
insl
push
mov
int3
data16
mov
cmp
sbb
mov
fwait
sti
jae
lds
or
mov
jp
orb
cmp
and
inc
sti
and
rcll
in
or
movsb
cld
mov
xor
orl
pusha
jmp
cwtl
and
clc
imull
mov
neg
push
cltd
mul
cld
or
cld
outsl
js
inc
add
mov
repz
xlat
lods
fiaddl
cld
cli
push
lcall
incl
xlat
dec
pop
mov
shl
add
call
push
sti
jge
ljmp
cmp
lods
movl
jp
mov
cmp
push
test
mov
hlt
mov
mov
dec
sbb
lock
test
in
in
movsb
stos
out
sub
ljmp
mov
lcall
loop
or
or
imul
test
test
push
cmc
aad
rorl
icebp
jg
ret
xor
jmp
in
jg
inc
out
in
or
dec
cmp
jae
add
lods
ret
lahf
xor
and
stos
push
add
fiadds
enter
sti
sub
pop
inc
xchg
jne
je
divl
movsb
inc
or
cltd
lahf
imulb
ret
scas
jp
or
inc
insl
cmp
call
out
jge
or
aad
mov
addb
inc
mov
jbe
in
push
or
or
imul
lock
in
inc
jp
pslld
lods
movsb
xor
scas
or
pusha
or
enter
sarb
das
or
pop
mov
pop
fwait
pop
inc
repz
cmp
pusha
or
out
ljmp
out
cwtl
in
inc
call
mul
and
in
test
xchg
dec
loopne
orb
or
fs
orl
pop
mov
pop
movsl
lock
dec
push
cmc
sub
jge
and
mov
js
sub
ret
enter
insb
cmp
lock
xchg
mov
mov
int3
insl
mov
xchg
push
in
or
add
pop
rcll
or
imul
lcall
mov
sub
mov
rorb
push
leave
pop
sub
jle
testb
mov
sti
pop
out
cwtl
loopne
adc
xchg
repnz
sbb
mov
xchg
jp
mov
push
fldt
icebp
dec
dec
in
test
sub
sti
cwtl
fildl
sbb
addr16
imul
jecxz
jmp
in
movsl
dec
mov
mov
pop
ret
cmp
mov
out
mov
or
mov
cmp
movsl
sub
aam
jne
pop
pusha
inc
test
adc
ljmp
cmp
aad
xchg
repz
std
push
jl
xchg
stos
xchg
nop
fisubs
in
bound
push
daa
mov
jmp
repz
std
or
fisttpll
insl
and
or
add
mov
rorl
stc
mov
or
fildl
jb
jbe
push
jl
ja
cmc
rorl
insl
mov
imul
sbb
pop
popf
mov
test
jmp
shll
pop
cld
jno
pop
push
out
lret
cmpsb
pop
mov
cmp
mov
loope
mov
or
and
pusha
pop
test
xor
xor
xchg
stc
push
adcl
push
fucomi
je
xorl
mov
outsb
add
mov
dec
xchg
lock
out
movsl
call
pop
std
inc
or
or
mov
in
popf
add
pop
test
js
stos
movsl
test
or
fistpll
stos
sbb
pusha
clc
pop
pop
jns,pt
add
add
popa
xchg
js
das
or
aad
ja
cmpsl
mov
jae
or
outsl
mov
fldenv
push
sti
in
icebp
push
gs
fisubs
sahf
add
imul
mov
pop
pop
mov
roll
std
lock
pop
enter
cmp
pop
add
fcmovbe
or
jne
pop
xor
out
cmpsl
cwtl
push
and
fstps
mov
jno
jne
ficoml
dec
add
or
outsl
or
cs
or
or
shrb
out
stc
into
sub
lea
sarl
js
or
ja
lods
adc
push
enter
push
and
out
mov
adc
sub
in
or
fstpl
test
test
pusha
push
test
xchg
lea
ret
lods
fcoms
push
pop
pushf
aaa
or
mov
add
insl
cld
sbb
std
or
sti
dec
or
out
mov
lock
scas
mov
hlt
sub
aas
lock
mov
push
roll
jg
pop
inc
cmp
mov
jnp
les
add
ds
pop
loopne
lds
dec
mov
xor
pop
inc
push
lcall
dec
sub
xchg
mov
fildl
inc
in
xchg
loop
mov
push
add
call
pand
test
aaa
sbb
mov
push
pop
in
cmp
dec
pop
xchg
neg
dec
mov
jl
adc
lds
sahf
in
les
sahf
push
push
lods
sbb
or
cmp
lcall
stos
test
cld
test
jnp
mov
push
sbb
jge
inc
call
pop
test
push
lret
arpl
jne
cli
jl
andb
push
lds
lret
or
test
cli
test
adc
ss
jne
cmpsl
push
or
adc
fcomp
mov
sahf
clc
jg
or
pop
stos
imul
push
cs
out
add
lret
jne
mov
int3
and
pop
cmp
roll
movsl
scas
jnp
sbb
dec
lahf
xchg
or
pushf
outsb
pusha
ljmp
je
jmp
add
not
clc
cld
cmc
add
popf
orb
fucomip
ret
add
imul
out
hlt
xchg
iret
lret
data16
cmpsb
rcr
test
xchg
dec
stos
push
rcll
mov
push
sbb
dec
inc
or
ja
cmp
jae
mov
popf
mov
pop
jo
insl
pop
daa
xchg
push
insb
fs
stos
or
fs
addr16
scas
mov
sahf
shrb
xor
push
add
ret
out
into
mov
or
mov
dec
mov
pop
lea
xor
cmp
mov
cmp
or
jbe
inc
shrb
test
inc
or
sbb
or
lret
inc
pop
or
sti
lock
gs
scas
sarb
andl
or
test
jp
mov
xchg
sub
cmovns
outsl
xchg
jnp
test
stos
pop
insl
or
inc
std
jp
sub
pop
in
insl
mov
not
std
stc
popf
mov
sti
pop
mov
icebp
mov
push
imul
pusha
int3
daa
push
xchg
js
jne
mov
aam
rcrb
rcr
add
rcrl
mov
stc
aad
cli
iret
add
enter
jmp
jl
sub
outsb
shlb
push
hlt
popf
push
fcmovnu
sbb
jmp
testb
inc
fucom
int
insl
xchg
dec
or
or
cmpsw
mov
cmp
pusha
and
mov
sbb
enter
sbb
xchg
cmp
shlb
in
mov
rorb
mov
mov
rorb
adc
aam
xchg
lods
jnp
push
out
and
mov
mov
push
add
lret
dec
inc
lret
test
dec
pop
xchg
ret
or
dec
stos
inc
or
xor
cmp
jne
mov
push
cmp
jo
sti
movb
add
push
mov
adc
inc
jns
add
call
mov
inc
mov
in
fdivrs
inc
movsb
add
aam
dec
xlat
jmp
fcoms
adc
lcall
lahf
jp
montmul
cmpsb
inc
pushf
jmp
int3
test
scas
stc
dec
mov
dec
test
mov
jbe
movaps
cltd
dec
jecxz
test
icebp
icebp
xchg
add
cs
arpl
incb
inc
jb
dec
sbb
mov
push
outsl
dec
sbb
pop
clc
dec
mov
or
shl
in
cmp
mov
cmp
push
call
pop
out
inc
mov
lods
es
gs
fs
xchg
call
sbb
jo
add
dec
outsl
jo
push
stc
aam
dec
ljmp
cwtl
dec
mov
or
dec
rcrb
mov
cmp
push
inc
pop
cltd
sbb
jbe
ljmp
mov
or
and
jbe
into
shrb
add
mov
pop
or
mov
leave
sub
rcll
jb
out
or
dec
sub
xor
jb
xor
ret
inc
cmp
cmp
call
int
pusha
jle
shlb
jge
into
mov
or
mov
sub
loope
mov
jnp
fxtract
xor
ret
or
xchg
xchg
sarb
stos
cmc
scas
pop
js
stos
test
lret
or
dec
pop
mov
scas
inc
test
ret
stos
sbb
test
mov
add
xor
imul
inc
lea
cmp
movb
movsl
adc
inc
ljmp
icebp
fldt
or
stc
lds
jmp
mov
mov
ljmp
shl
dec
jns
mov
mov
lods
add
rcrl
push
pop
out
cmp
clc
sub
popf
pop
shll
cmp
xchg
sub
pusha
pusha
xor
sbb
stos
inc
add
testl
hlt
movsb
cmp
mov
sbb
add
add
sti
cmc
enter
dec
push
dec
sbb
and
loope
stos
popf
mov
mov
std
cmc
add
mov
cmp
mov
cld
imul
add
or
inc
pop
mov
sbb
xlat
sti
data16
xchg
push
dec
pushf
pop
xchg
push
jge
inc
mov
add
or
icebp
cli
insb
test
aad
xor
inc
stc
je
rorl
fildl
shrb
shr
jo
orps
push
lret
call
scas
andl
test
push
fs
or
leave
setbe
mov
scas
rcrl
xchg
rcrb
jmp
mov
das
mov
pop
sti
xchg
pushf
dec
or
pop
icebp
cmc
dec
jge
lods
clc
enter
add
std
aaa
dec
mov
cmp
clc
stos
iret
clc
fcomip
leave
sub
dec
mov
ret
jp
lods
mov
orb
or
pop
inc
cmp
mov
pop
or
or
add
inc
or
pop
roll
adc
pop
aad
push
enter
ja
add
add
ret
sti
imul
sbb
push
inc
inc
pusha
sub
aad
push
mov
data16
mov
pop
mov
cld
mov
sub
push
adc
ja
cmp
xor
movsl
ljmp
nop
loop
jnp
jnp
mov
ljmp
cmpsb
mov
xor
pop
sub
sub
lret
pushf
push
dec
andl
inc
test
mov
aam
sbb
jns
aam
mov
aad
enter
xchg
je
or
test
pop
lds
in
js
call
xlat
insb
hlt
mov
ljmp
cli
sbb
mov
sub
push
inc
dec
mov
pusha
sbb
lret
pop
daa
jae
ja
lea
mov
stc
or
jmp
dec
dec
repnz
and
pop
push
loopne
xchg
ret
fs
cltd
lods
addr16
gs
mov
stc
test
aas
inc
jp
adc
add
mov
fs
mov
push
in
dec
mov
mov
or
cmp
xor
leave
sub
les
dec
test
push
cmpsb
mov
mov
or
or
lea
inc
mov
dec
fimull
sbbb
mov
shrb
or
out
add
mov
xor
xchg
push
mov
lret
leave
mov
adc
jns
push
mov
testl
push
xchg
jmp
das
pop
cmpsl
or
pop
mov
rcrb
aad
stos
or
jmp
jnp
lea
sarb
insb
pop
mov
xchg
mov
inc
adc
stc
mov
sti
enter
inc
pop
push
nop
gs
lea
xor
mov
mov
jmp
cltd
jne
xchg
out
and
jae
push
sub
xor
xchg
mov
mov
sub
lds
stos
or
dec
cwtl
out
push
inc
jmp
sub
or
scas
xor
add
and
or
pop
sub
pop
jne
lds
sbb
les
sub
call
or
loope
pop
popf
hlt
dec
mov
popf
es
rcrb
movsb
addb
stos
or
je
sub
sub
les
lock
push
fildll
sar
cmc
cmp
or
outsb
mov
in
mov
movsl
shll
shr
xchg
mov
add
jne
arpl
hlt
cmp
in
pop
mov
rol
je
int3
movsb
ja
scas
incb
dec
push
push
int3
outsl
inc
sub
je
sub
in
mov
mov
stc
or
add
or
cli
hlt
lods
jecxz
imul
or
into
add
lahf
inc
xchg
mov
or
sub
push
and
cmpl
xchg
push
fisttpl
sub
xor
inc
pushf
js
lahf
dec
jge
sahf
add
sub
mov
add
or
fdivr
mov
cmpb
lock
iret
and
lret
jge
dec
sub
push
pop
sbb
mov
std
or
js
mov
cmc
stos
mov
mov
or
dec
or
mov
cmp
fwait
cmp
rolb
pop
mov
or
sbb
fnstcw
popf
mov
or
sbb
sti
pusha
or
jns
dec
jle
xchg
mov
fistpll
stos
sti
xchg
mov
jl
mov
jle
lret
xchg
sarl
js
out
aaa
mov
push
jbe
mov
dec
sarl
rcr
clc
fiaddl
mov
jp
cld
xor
mov
out
je
dec
stc
mov
mov
scas
mov
xor
push
add
stos
add
xor
sarl
xchg
arpl
mov
mov
fcomi
mov
stos
sti
pop
mov
and
fstps
lock
std
sbb
adc
sti
lret
fisubl
jno
lcall
in
pop
inc
jnp
inc
push
pop
jae
add
jns
or
add
repz
cmp
push
inc
or
or
ljmp
inc
data16
out
aaa
pop
add
cmpb
sub
call
or
mov
xor
mov
cmpsl
pop
sbb
inc
jmp
or
or
pop
loope
jecxz
push
pop
jmp
mov
push
jbe
icebp
sbb
iret
lods
push
fdivs
icebp
lret
xchg
inc
sbb
or
and
fld
mov
jns
inc
mov
lods
sar
pop
mov
sbb
cmp
add
dec
dec
or
xor
push
insb
inc
cmpl
dec
sti
stc
cs
lcall
pop
hlt
or
or
or
enter
push
inc
movl
lcall
ret
daa
insl
cmp
mov
jle
insl
sbb
clc
movsl
sarl
clc
mov
cld
xchg
movsl
enter
movsl
mov
std
test
imul
pop
imul
push
arpl
scas
xchg
pushf
test
fcmovnb
aam
add
jl
ret
mov
cld
add
lods
pop
out
push
sub
push
js
inc
incl
mov
mov
insl
or
movsb
or
push
or
push
jmp
cmp
mov
pop
test
ret
dec
std
cld
or
lock
dec
sub
popa
int
dec
adc
dec
add
loopne
fcoml
cmp
pop
xchg
push
shlb
mov
rol
lods
cmp
xchg
test
insb
mov
mov
test
jbe
imul
pop
enter
add
ljmp
shll
es
xchg
mov
loop
mov
ljmp
pop
out
shr
cmp
jmp
negb
jp
mov
popl
rol
js
shll
jnp
rclb
sarl
push
dec
test
sbb
mov
adc
cmp
sbb
inc
testl
push
imul
sub
insb
outsl
dec
test
inc
push
fwait
test
stos
fisubs
mov
mov
mov
hlt
aaa
adc
push
hlt
inc
insb
lock
mov
jle
les
es
adc
adc
cwtl
adc
cmp
std
dec
xlat
jnp
js
mov
shr
jle
jnp
or
les
mov
cmpsb
xor
lock
cmp
inc
mov
mov
mov
dec
pop
dec
loope
fwait
mov
mov
mov
lds
lods
push
mov
mov
sub
jno
gs
jl
subl
cmpsb
inc
push
add
std
aad
sub
mov
fwait
aas
and
or
call
sarl
out
sbb
sti
xor
sub
mov
push
test
jl
daa
shll
sub
mov
out
adc
jbe
xchg
test
int3
inc
ds
xchg
push
fwait
loopne
xlat
stos
stos
cmpsl
enter
das
mov
inc
fdivrp
in
jo
mov
lds
add
mov
je
cmp
ds
lret
jnp
mov
add
orb
sbb
test
aas
mov
imul
fisubrl
jmp
push
stos
mov
addr16
cs
add
dec
jae
jl
cmp
push
jae
js
ret
inc
add
xchg
add
test
in
pop
jnp
lock
sub
das
test
jmp
adc
imul
mov
flds
xlat
les
lock
mov
pop
int
test
push
aaa
gs
jns
jmp
lock
popa
sub
push
sarl
and
ret
pusha
into
pop
cmp
mov
push
inc
sub
fisttpll
mov
mov
adc
jl
xchg
into
mov
and
and
in
inc
notl
and
or
cmp
ficoml
xor
fsts
lock
jle
pop
inc
les
jns
xor
repnz
inc
mov
clc
pushl
mov
fiaddl
nop
fnstsw
jle
cmc
or
pop
fs
popf
mov
or
pop
mov
adc
in
outsb
int3
std
hlt
addr16
rorb
dec
std
je
in
rorb
mov
out
clc
mov
push
jl
lcall
cld
loope
into
cwtl
inc
jl
sbb
cld
lret
mov
xor
jo
mov
iret
adc
sbb
jnp
cmp
pop
sbb
jno
lods
pushf
jmp
add
and
jns
shll
pop
frstor
add
cwtl
out
sahf
add
inc
mov
cmpsb
push
push
add
enter
lock
out
lods
mov
xchg
ret
enter
stos
insl
mov
mov
popf
or
mov
test
ds
xor
ljmp
jmp
mov
push
cmpsl
je
cmpsl
jo
clc
mov
enter
cld
push
lods
push
xchg
xor
dec
in
xchg
adc
add
mov
xor
shll
dec
or
pop
adc
and
imulb
cld
neg
clc
jp
outsl
push
add
mov
leave
sub
xchg
in
jae
arpl
inc
add
xor
xorl
shrl
lea
or
roll
rcr
jmp
mov
dec
mov
ljmp
aam
cmp
adcb
or
cmp
cli
ss
ficoms
lret
and
and
jl
mov
sarb
cmc
aam
adc
dec
leave
in
dec
insb
aam
dec
inc
pusha
pop
dec
xor
or
xchg
es
sub
or
test
and
arpl
jecxz
push
in
jmp
out
and
scas
movsl
and
lahf
cli
mov
cmc
xchg
call
fnstsw
xchg
rorb
jecxz
add
addb
sub
dec
out
xchg
clc
test
out
adc
mov
dec
adc
mov
mov
lahf
or
or
lods
stc
sahf
inc
scas
sti
sarl
cmp
fcoml
lret
daa
sub
call
inc
jo
push
jp
fildl
push
inc
mov
movb
mov
out
popf
in
lock
test
ja
loopne
mov
mov
mov
mov
pop
adc
or
jae
cli
xchg
cltd
iret
cmp
pop
js
xchg
xchg
ret
add
aaa
sub
adcb
dec
ja
test
cmp
add
aas
into
out
clc
cmp
in
sub
popa
sbb
outsb
ds
movsl
popf
push
gs
cli
pop
xchg
add
stos
jmp
jns
test
or
mov
ret
ret
jle
ret
xchg
popf
jge
mov
sarl
insl
dec
in
cmp
lcall
mov
in
icebp
dec
pop
inc
inc
cmp
lods
pop
inc
lock
sub
jl
nop
scas
lock
push
add
xchg
shll
aaa
inc
in
lock
fs
js
inc
add
pop
loopne
repz
out
and
clc
push
outsb
inc
cmp
mov
mov
fidivl
inc
std
cs
fwait
jo
xchg
inc
push
test
add
lods
sub
push
push
xlat
pop
mov
lds
daa
mov
ret
jmp
incb
out
add
sub
xchg
sbb
add
out
push
mov
cld
shll
les
sub
orl
lods
sub
mov
les
mov
mov
into
insb
rcrl
or
sbb
ret
inc
add
jl
mov
add
add
sub
fldl
push
daa
icebp
mov
jl
out
stc
or
lret
push
add
jmp
fcmovne
enter
out
mov
or
sub
andb
decl
sub
lea
or
mov
movsl
rolb
insb
push
cld
xorl
ss
or
test
or
xchg
push
mov
repnz
movb
inc
and
or
fildl
mov
enter
addr16
sahf
inc
sub
push
test
fbstp
stos
inc
sbb
dec
or
mov
or
les
sub
mov
sub
push
outsl
imul
faddl
inc
jecxz
or
cmp
sbb
push
push
sbb
fs
mov
out
js
push
ret
push
imulb
roll
je
cwtl
xlat
dec
or
cld
addl
mov
out
cmpsb
dec
jnp
sub
rorl
mov
or
fnstcw
bound
add
xchg
out
fidivrl
scas
fldt
xchg
sub
add
dec
into
jb
adc
inc
push
push
fistpll
push
decb
sub
jp
mov
push
je
inc
lods
dec
xchg
xchg
cli
repz
enter
or
ret
insl
das
push
sbb
int3
sub
push
lret
out
xlat
lock
adc
push
scas
sbb
enter
push
or
jg
imulb
or
inc
sbb
lock
add
xchg
cmc
fsubrp
addr16
addr16
lret
lret
sbb
loop
inc
xchg
aas
or
xorl
push
jne
insb
aaa
jl
in
lret
or
insb
in
rolb
lods
sub
or
jo
fld
cmp
dec
sbb
jl
sbb
loop
mov
clc
data16
iret
call
js
and
pop
push
insb
xchg
cld
mov
out
jae
std
add
jnp
movsb
adc
pusha
xchg
test
stos
out
fsubrl
int
add
or
inc
nop
lods
mov
pop
stos
lcall
fs
aad
scas
or
mov
dec
sahf
fcompl
addl
or
les
pop
push
rcrl
lret
pop
and
les
xor
cmpsb
cmp
ret
les
sub
adc
sub
sub
das
ljmp
pusha
test
mov
ror
cmp
mov
sahf
mov
ljmp
iret
mov
and
scas
ljmp
cmp
dec
lahf
push
shll
inc
pop
jne
jns,pn
sahf
int3
mov
bound
mov
inc
rclb
fs
insl
ret
clc
test
xchg
js
push
int
stc
js
outsb
mov
test
cmp
cli
pop
pop
out
xchg
dec
sub
mov
fists
inc
ds
cs
push
adc
sti
ror
mov
sub
inc
stc
mov
or
icebp
in
subl
push
sbb
cmp
popa
xorb
mov
cmp
pop
sahf
in
repnz
test
add
faddl
pop
int3
repnz
test
shll
out
iret
stos
sub
jl
or
mov
or
jl
mov
imul
pop
sarb
jp
push
shrl
pop
stos
or
inc
dec
add
mov
ja
scas
ljmp
jns
xor
sarl
fnstsw
jb
add
daa
fcomp
js
and
jl
xor
dec
xchg
mov
jmp
fsubl
int
icebp
or
das
notl
outsl
cmp
cmp
pop
and
call
cli
and
sarb
inc
lret
dec
test
stos
ja
inc
pop
jns
push
jbe
mov
neg
cmp
sbb
in
cld
ja
lret
ljmp
mov
loope
or
scas
xchg
divb
add
mov
hlt
push
dec
in
pop
push
and
test
mov
mov
add
inc
or
ret
sahf
imul
test
pushf
adc
arpl
pop
pop
jp
sub
dec
mov
mov
dec
lcall
or
add
pop
rcrl
pop
movsb
in
jbe
mov
fs
data16
in
into
lahf
outsb
test
shrl
enter
xlat
or
jne
or
mov
loopne
jl
dec
xchg
daa
std
sahf
insl
adc
mov
nop
and
or
jl
addr16
inc
enter
cmp
jns
fsubs
adc
push
movsb
repz
test
rol
clc
js
mov
repz
or
hlt
add
test
pushf
or
stos
mov
test
lret
ret
js
bnd
or
pop
inc
pop
out
xor
sti
dec
icebp
mov
add
or
sub
xchg
jo
mov
lcall
sbb
lock
cmp
or
in
sub
loop
stc
sub
js
loopne
push
sub
insl
mov
outsb
or
int3
add
fbld
fiadds
add
stos
mov
lcall
jp
faddl
pop
test
xor
bound
xchg
or
dec
push
mov
jae
in
loope
stc
add
lret
cs
pop
movsb
or
or
push
test
lea
les
or
sarl
cmp
jbe
incl
dec
shrl
les
jns
inc
pop
sbbb
fdivr
push
outsl
push
cmp
mov
pop
fiadds
sub
sub
dec
sub
xchg
mov
inc
icebp
arpl
jmp
mul
mov
and
scas
jg
in
nop
testl
or
or
dec
jl
jne
repz
sti
sub
mov
inc
dec
mov
stos
fdivr
xchg
nop
cmp
mov
mov
xchg
enter
xor
mov
jl
clc
cmp
fidivl
fstpt
das
and
aaa
mov
mov
cltd
jne
push
js
fs
or
lahf
add
mov
jb
fisubl
into
sub
jmp
mov
lahf
jge
in
ror
or
sub
aas
decl
ds
or
out
cmp
dec
cmp
push
pop
adc
mov
stos
or
repz
lret
mov
jl
imul
pop
popa
or
addr16
js
add
shrb
lods
or
lret
add
fcomip
pop
dec
stos
idivb
insl
inc
add
imull
cli
lods
or
sbbl
jnp
sub
xor
movsl
jmp
in
aas
sub
test
dec
test
iret
mov
leave
rcll
cli
pop
push
daa
aam
in
mov
jno
mov
lods
lcall
or
sub
out
jle
pushl
jmp
pop
or
dec
inc
scas
dec
jnp
lret
or
sbb
les
push
popf
add
insl
or
sbb
pop
dec
out
dec
iret
sbb
cld
outsb
adc
outsl
cld
inc
pop
repnz
into
inc
pop
addr16
dec
or
or
sub
aas
sub
clc
clc
push
ljmp
stos
test
ret
mov
lcall
mov
jge
jecxz
mov
add
leave
dec
stos
repz
push
or
cmp
lock
mov
xlat
lret
cmp
pusha
icebp
test
cmp
mov
push
aaa
push
fidivs
fucomi
mov
xchg
icebp
bound
add
flds
icebp
nop
adc
jl
in
jbe
rcll
das
xchg
fcmovne
clc
jmp
push
lea
and
mov
jmp
cs
scas
scas
mov
adc
jp
in
xor
pop
push
inc
xor
and
jmp
popf
gs
sub
call
jae
pop
enter
stos
sbb
ljmp
nop
scas
cwtl
scas
mov
sbb
jl
jo
inc
and
sahf
mov
sbb
je
test
sub
out
pop
mov
inc
sub
mov
enter
cmp
jecxz
stos
ja
popf
and
loope
ja
lock
sbb
mov
aam
and
cld
loope
dec
dec
stos
mov
dec
xlat
push
adc
rcrl
push
dec
scas
xchg
decl
sub
call
xchg
pop
jge
into
fdivs
inc
enter
out
les
push
add
js
sub
inc
fisubrl
std
or
clc
or
xchg
repnz
mov
xor
xchg
sarl
int3
arpl
jmp
and
stos
out
test
cld
in
stos
push
aam
mov
sub
jmp
sub
pop
stos
push
mov
call
cmp
int
pop
lret
sub
push
and
or
pop
or
mov
lock
test
insl
dec
mov
adc
push
daa
jp
scas
mov
sti
push
inc
pop
pop
push
faddl
add
ds
ret
cs
ret
out
cmp
add
sub
or
out
jp
inc
push
icebp
movsb
clc
dec
add
scas
aaa
mov
lcall
pop
idiv
dec
cmc
aaa
or
sub
lret
inc
adc
push
jge
or
mov
sub
shll
mov
xchg
sbb
push
out
icebp
cmp
and
inc
lods
imul
mul
jnp
ja
les
mov
cli
add
dec
sti
or
loope
shll
lods
cmp
cmp
pop
pusha
ljmp
dec
lahf
lcall
pushf
dec
bound
or
out
stos
add
push
negl
insl
dec
repnz
mov
mov
fiadds
pusha
jmp
sub
jae
incl
outsl
pop
aad
cmp
scas
lcall
push
pop
push
mov
das
hlt
in
dec
pop
popf
divl
mov
cltd
fistpl
xchg
dec
je
mov
pushf
xlat
repz
dec
pop
inc
cli
mov
add
clc
pushf
notb
rcrl
movsb
aaa
mov
pop
inc
xor
imul
stos
movsl
out
cmp
or
inc
mov
leave
sti
shr
pop
imul
mov
adc
leave
add
shll
cmpb
sbb
stos
test
shrb
inc
xchg
push
sahf
cmp
push
stos
in
idivl
test
rorb
ret
test
mov
mov
mov
or
cmp
aad
out
sub
ljmp
push
pop
xchg
repnz
xor
cmp
cwtl
xor
rcrb
cmp
jns
and
add
les
dec
and
jae
add
ljmp
sbb
add
inc
pop
xor
adc
pop
hlt
xchg
pop
cmp
xchg
clc
add
sub
rcll
dec
into
or
push
mov
out
fmuls
jnp
ret
jmp
jno
roll
mov
sbb
rolb
mov
inc
xchg
bound
jnp
sub
out
inc
pop
mov
scas
pop
sbb
lahf
std
push
jg
mov
loope
scas
mov
pop
mov
pushf
aad
fldcw
jne
mov
and
pop
inc
bound
sti
leave
jnp
cmp
jl
cs
inc
pop
js
call
loop
mov
or
int3
enter
push
sti
mov
pop
xchg
ret
cmp
lret
sub
dec
cwtl
in
jl
xchg
mov
and
mov
cmpsb
lds
push
loop
cmp
scas
movsl
xchg
ret
or
out
js
or
mov
cld
hlt
je
enter
in
jnp
push
add
loop
mov
mov
dec
sahf
cli
jle
xlat
sub
push
fbld
dec
in
loopne
xchg
push
mov
dec
test
push
lods
dec
cmpsl
mov
dec
jbe
negb
or
xchg
cmpsl
out
dec
sbb
lods
mov
pusha
clc
and
cs
pop
xor
fs
out
lret
stos
xchg
and
jl
add
decl
xchg
dec
call
ficoms
je
enter
and
ja
add
mov
dec
push
imul
add
enter
inc
dec
es
call
xchg
push
mov
xchg
cwtl
or
pusha
ds
mov
into
int3
adc
pop
pop
mov
repnz
rorl
insl
or
mov
loopne
push
cltd
xor
hlt
je
jbe
ljmp
xor
out
lock
xchg
jle
mov
cs
stos
add
rcrl
sub
inc
loop
mov
mov
in
stc
insl
push
sahf
pop
ljmp
add
test
lcall
xchg
sarb
insb
inc
add
test
xor
repz
cld
sub
in
hlt
sbb
js
pushf
jge
sub
mov
shl
jl
clc
enter
cld
inc
sahf
mov
lea
test
mov
shll
cmc
js
sub
incl
faddl
dec
or
lahf
or
cmp
or
or
mov
pop
adc
cmp
repz
outsl
mov
lret
cld
or
dec
push
dec
mov
add
fs
xchg
jge
sbb
add
sub
pop
and
sub
push
mov
xchg
mov
sub
movsl
ds
xchg
popl
push
sub
xchg
and
sub
cmp
push
test
rcll
nop
jo
or
std
mov
insl
or
push
adc
aam
enter
or
or
out
aam
popl
inc
sbb
dec
sub
sbbb
cmp
pop
imul
sub
pop
rcr
js
in
lods
mov
in
or
es
mov
dec
rcrl
arpl
test
dec
or
and
sbb
lock
add
aad
aad
testb
cs
or
nop
push
sbb
xchg
out
cmp
pushf
std
out
nop
dec
xchg
loope
jnp,pt
addr16
adc
aad
cli
fiaddl
adc
add
cmp
frstor
xor
clc
rclb
fcoms
and
push
mov
insl
dec
dec
lds
lds
js
data16
sub
popa
hlt
decl
daa
out
xchg
insl
pop
cli
test
push
out
lret
nop
jne
fcoml
mov
mov
xor
push
bound
stos
or
out
loop
push
or
fstps
push
fisubl
fwait
stc
xor
in
inc
dec
in
jbe
mov
inc
dec
dec
std
lods
add
outsb
inc
in
inc
stos
cs
cs
or
pop
pop
jnp
adc
mov
mov
mov
lds
xchg
and
push
add
inc
test
or
stos
sti
dec
xlat
cmp
lock
das
ds
lods
cmp
mov
or
sub
stc
push
adc
out
inc
ds
cmc
mov
mov
mov
aam
fdivr
or
insl
loop
out
push
test
mov
ljmp
mov
mov
cmp
inc
mov
cmp
pushl
add
imul
int3
inc
or
cmc
pmulhw
insb
jecxz
loopne
imul
jl
hlt
andb
pop
xchg
rcrb
xor
dec
stc
xchg
adc
add
scas
cmp
pusha
pop
pop
scas
xlat
adc
cwtl
js
push
jmp
inc
test
dec
add
dec
filds
jo
jp
xchg
sub
sar
mov
push
adc
test
int
adc
addr16
mov
xchg
jl
negl
lea
jl
push
sub
bound
in
adc
and
dec
outsl
xor
cmp
in
test
mov
je
mov
std
fs
cmp
inc
je
cmp
lods
daa
or
inc
in
jo
cmp
repz
fnstcw
int3
cmp
xchg
clc
mov
jmp
or
mov
or
or
or
rorl
pop
inc
out
jl
cmp
sbb
cmp
imul
or
xor
sub
jne
xchg
cs
std
or
test
or
jmp
jne
rcll
dec
pop
mov
push
jp
jmp
fs
lret
xorl
sti
cmp
jnp
or
movsb
push
cmpsb
ds
mov
xchg
jl
xchg
fdivrl
rcl
and
daa
in
testb
cmc
and
jl
add
xchg
outsb
add
loopne
pop
jmp
in
sub
test
xor
data16
clc
aam
jg
jl
dec
lock
cmp
xchg
inc
pop
sbb
stos
hlt
ljmp
cli
cmpsl
test
icebp
mov
lock
xchg
ret
pop
int3
cmp
cmp
mov
jo
ja
pop
jno
loopne
pop
lds
scas
mov
add
stc
cmp
or
dec
lcall
dec
inc
or
or
adc
pop
ret
pop
lods
mov
add
imul
fdivl
mov
aam
inc
lcall
dec
aam
roll
jnp
jp
and
jmp
adc
sbb
xchg
sub
notl
orb
jbe
inc
lock
fcmovnb
int3
pop
mov
lock
pop
sub
sahf
add
lret
addr16
faddl
sbb
stc
fisttpll
mov
dec
shl
fcmovnbe
jecxz
add
add
out
mov
imul
fbld
xor
and
lret
mov
mov
inc
add
mov
insb
leave
sub
clc
dec
mov
ss
fcmovbe
sub
fistps
pop
mov
scas
sarl
mov
jl
or
or
xor
jno
dec
push
sub
jmp
push
lret
sahf
or
sbb
mov
stc
lret
adc
out
cmp
ljmp
ret
scas
mov
clc
push
shll
outsb
iret
or
or
inc
or
lock
add
out
cmp
ds
rcll
or
or
xor
std
js
xor
cli
lcall
sarl
push
jl
lcall
pop
xchg
mul
inc
ret
fisttps
mov
sub
stc
sti
cmp
cmp
push
scas
pop
imul
mov
pusha
add
shrl
adc
add
cld
loop
add
jmp
push
fistpll
mov
rorl
inc
mov
stc
dec
stos
pop
rcl
xchg
cmpsb
or
inc
out
cmp
pusha
xor
push
pop
add
jecxz
fs
sub
dec
fdivrs
inc
jns
aas
fsts
jl
shlb
stos
sub
movsb
xchg
add
pop
add
cli
sub
in
mov
fcomip
das
cli
dec
mov
add
mov
adc
sub
ds
sbb
lods
mov
test
inc
fiadds
js
insb
sbb
mov
orl
dec
or
adc
out
test
scas
add
testb
or
jno
lods
add
js
notl
cmpsb
clc
mov
adc
lret
mov
xchg
jmp
pushf
add
sbb
adc
and
or
or
ffree
sbb
jns
push
or
and
and
or
dec
mov
mov
pop
in
xor
mov
mov
aaa
icebp
out
xlat
sbb
inc
fadds
mov
inc
push
mov
jmp
xor
xchg
je
push
shl
mov
and
or
insl
movsl
and
shll
in
nop
or
or
test
jb
sub
testb
jge
pop
stc
add
push
fisttpl
rolb
cmp
in
aam
jmp
inc
push
sahf
adc
icebp
pop
orps
scas
movaps
mov
fcmovnbe
mov
inc
ds
jmp
mov
or
stc
stos
call
push
pop
pop
in
push
mov
adc
pop
aam
les
fisubrs
xor
adc
les
push
loopne
push
lahf
repnz
push
shrl
fisubrs
scas
ja
jne
lahf
fwait
stc
push
test
cmp
mov
xchg
mov
push
lret
cmp
imul
push
pop
or
popf
aaa
addl
add
shrl
jmp
rclb
aam
xor
jl
lret
in
inc
inc
sbb
test
fstps
dec
cld
popa
add
or
cli
jp
add
or
xchg
and
ss
je
push
ret
pop
ljmp
jg
cmpsb
inc
scas
or
mov
sub
push
jge
stc
fistpl
icebp
std
test
push
jns
and
fnstsw
xlat
leave
shrl
test
pop
stos
jle
out
repnz
cmp
mov
lret
lret
scas
sbb
and
popf
stos
adc
nop
dec
out
icebp
stos
or
ss
out
or
sti
ds
pop
xor
shll
or
stc
pop
negb
mov
cmc
outsb
adc
add
daa
jo
adc
subl
push
test
enter
mov
jle
into
mov
sub
shrl
or
clc
jo
movb
jp
sub
enter
jnp
ljmp
jne
mov
sahf
and
adc
jo
cmp
mov
jbe
outsb
lock
ror
lcall
and
mov
test
or
sbb
addr16
add
ficompl
mov
sahf
and
dec
xchg
rcrb
sub
dec
imul
lock
jns
lcall
sub
dec
out
or
in
add
int3
in
adc
sbbb
inc
jl
mov
shlb
scas
dec
stos
add
lret
xchg
mov
or
or
lret
sti
lods
out
adc
mov
je
xchg
mov
adc
add
rcrl
hlt
popa
rcrl
pop
adc
scas
cli
addr16
and
inc
dec
mov
xchg
fsub
dec
adc
movl
inc
mov
pushf
in
out
push
adc
aaa
out
sti
test
mov
sarb
clc
jl
dec
in
jle
fidivl
pop
imul
xchg
or
pushf
in
fndisi(8087
mov
dec
ljmp
or
scas
test
mov
fwait
std
dec
test
dec
jmp
pop
movsb
mov
or
ret
lret
mov
and
adc
dec
insb
dec
imul
ret
xor
jno
roll
fsubp
jbe
jecxz
mov
xor
add
xchg
mov
xchg
mull
push
dec
je
mov
mov
and
iret
cmp
and
jp
fldcw
fwait
rcrb
imul
sahf
lcall
mov
jl
les
xchg
dec
jno
out
and
dec
xchg
rclb
xor
negl
xchg
push
stos
xchg
mov
inc
pop
pop
dec
lahf
pop
das
rclb
orl
add
lret
clc
fcmovb
mov
add
in
cmp
pop
ret
pop
dec
push
inc
xor
mov
call
xor
int3
mov
push
jb
lret
dec
repz
mov
in
cli
ror
or
or
mov
mov
mov
sub
test
ljmp
mov
cmp
adc
adc
or
mov
sbb
scas
outsl
inc
and
cmp
and
sub
mov
shrl
or
or
xlat
inc
mov
xlat
and
cli
xchg
mov
lret
enter
dec
rcrl
out
jo
push
popf
loopne
dec
scas
stc
pop
stos
nop
or
or
and
mov
pop
jae
pop
mov
aaa
mov
ror
fisubrl
into
add
or
jecxz
fwait
mov
cmp
daa
xor
inc
add
add
or
pusha
je
jge
or
sub
scas
cld
pop
jno
roll
les
stos
dec
rclb
or
mov
cmp
or
outsl
sbb
jl
fcompl
add
test
cmp
sahf
repz
xor
stos
push
out
xor
clc
push
loopne
aam
mov
cmp
fcompl
std
into
xor
loope
xor
das
mov
inc
cmp
pop
mov
hlt
xchg
out
jb
test
xor
jg
xor
ja
pop
inc
add
popf
shrl
xor
mov
and
int3
xchg
mov
test
jnp
and
xchg
insb
pushf
mov
jl
cmp
dec
or
imul
inc
lds
dec
xchg
ret
or
or
inc
and
or
sub
xchg
dec
sub
or
in
cwtl
call
adc
or
dec
jl
or
jbe
pop
or
adc
imul
jo
jle
pusha
inc
rorb
shlb
scas
cmpsl
enter
aaa
mov
test
dec
mov
mov
add
push
push
or
mov
aad
test
rorb
jle
lods
mov
stc
mov
pop
sub
shrb
lock
out
adc
js
xchg
cmc
test
pushf
push
or
jmp
sub
movb
aam
call
imul
push
add
std
enter
push
mov
out
xlat
mov
fnstenv
or
rcll
jne
lret
out
test
ljmp
sbb
pop
fs
ror
fisttpl
shll
cmp
popf
jl
inc
rclb
movsb
fmull
mov
push
pop
push
xchg
or
sub
fldt
fs
mov
pusha
or
mov
fldt
pop
push
movsb
and
sbb
or
lods
or
cld
pop
in
fisttpl
ss
sbb
cmp
mov
jo
xchg
or
iret
aad
aam
sub
lods
sbb
pop
ret
orl
jge
add
iret
or
push
movsl
outsl
add
add
ret
lcall
adc
jle
and
pop
std
dec
scas
iret
ljmp
push
cmpsb
jmp
xchg
mov
or
jmp
iret
test
sub
adc
ret
mov
pushf
jle
out
out
in
iret
lods
jnp
mov
pop
inc
in
inc
xor
xor
push
enter
shlb
or
insl
mov
and
or
popa
cmpsb
jmp
sahf
or
pop
adc
pop
xor
mov
mov
inc
and
and
sub
lock
lret
imul
sbb
jo
paddw
dec
sub
in
or
xchg
mov
or
enter
inc
lock
and
dec
ja
push
scas
jo
or
add
les
out
fadd
cld
pop
add
inc
stos
sub
pop
push
insb
sbb
in
jnp
sahf
mov
enter
jno
les
or
aas
aam
in
xchg
pop
mov
mov
or
addb
sbb
fstpt
js
nop
stc
shl
jbe
aaa
popf
idiv
add
loopne
insl
jns
inc
or
or
push
dec
ja
mov
int
stos
dec
push
or
or
jns
sub
je
out
aad
jb
pop
cltd
or
insl
add
es
dec
and
or
jmp
and
cmp
ja
sbb
and
push
dec
pop
dec
enter
xchg
cmp
cmp
cwtl
lcall
pop
or
aas
ror
push
scas
mov
pop
or
add
fisubl
jo
fucomi
xor
mov
lods
aam
sbb
call
sbb
jae
ret
or
movsb
xor
js
jo
xchg
mov
stc
and
mov
rcr
dec
or
push
ffree
mov
adc
lcall
xlat
dec
jae
outsb
mov
int3
cs
lods
inc
jge
or
rorb
push
ja
cmp
int
lods
or
add
add
jl
out
sarb
aad
pushf
gs
lods
aam
jmp
das
ret
dec
jne
loopne
sbb
jo
jle
lldt
sbb
cmpsb
and
dec
cwtl
dec
sub
inc
rorl
mov
dec
inc
jb
scas
pop
pop
and
or
cmp
cli
out
shll
fdiv
sbb
js
pop
xlat
xchg
and
inc
push
in
ja
sub
into
jmp
test
mov
fsts
pop
js
adcb
cmpsb
in
lahf
dec
mov
jmp
repz
xchg
ds
xchg
repz
ret
cmp
lret
jbe
lds
push
out
xchg
jns
clc
roll
out
fs
jmp
jl
shll
cmc
inc
push
or
push
loope
sub
fwait
roll
add
or
cwtl
pop
rclb
jne
movsb
and
stos
daa
rclb
add
sub
loope
xor
loop
imul
int3
or
pop
add
xor
shlb
or
daa
mov
fidivrl
xlat
pop
dec
nop
mov
test
bound
popf
lcall
cwtl
jne
pop
movsb
es
dec
icebp
sahf
jae
rcr
jns
rcrl
rorl
ja
xchg
or
fadd
in
iret
lcall
xlat
rclb
mov
add
mov
inc
test
aam
xchg
lret
xchg
insb
push
into
pop
xchg
lods
into
sarl
lret
mov
lret
inc
insl
repz
dec
out
push
rcl
mov
repz
es
mov
mov
xchg
jb
data16
int3
in
xor
std
lods
and
adc
cld
dec
shlb
mov
add
sub
mov
imul
rorb
cmp
mov
mulb
pop
mov
pop
jp
mov
adc
jge
inc
mov
push
pop
test
mov
mov
mov
jns
fldz
mov
movsb
test
mov
dec
je
mov
fisttpl
enter
mov
ret
add
in
clc
mov
cmp
xchg
pushf
mov
lret
lret
test
lahf
jl
push
push
fsts
in
sub
add
add
lds
xchg
scas
push
xor
or
mov
or
dec
sbb
cmpsb
mov
add
loopne
lcall
cmp
in
stos
testb
dec
mov
xchg
lret
cmpsb
iret
dec
xchg
in
dec
fmull
pusha
outsl
jbe
dec
or
xor
jbe
inc
jl
cmp
ss
add
xchg
push
repz
das
bound
int
inc
fisttpl
outsl
cwtl
jg
jg
mov
or
outsb
pop
scas
jle
pop
mov
push
andb
dec
xchg
bound
icebp
ss
mov
add
push
out
rol
push
jecxz
cmc
mov
mov
cmp
cmp
daa
pop
pop
or
inc
or
mov
inc
scas
loope
or
ret
add
sbb
add
mov
xchg
xchg
out
cmp
fmull
test
test
dec
pop
arpl
ja
mov
mov
cmp
out
add
movsb
mov
lock
sahf
push
mov
pusha
lds
add
push
into
pop
inc
scas
cmpsl
ret
cmp
xchg
lahf
or
mov
jmp
xchg
pop
movsb
ret
or
inc
aam
pop
sbb
xor
inc
inc
hlt
xchg
nop
movsl
add
dec
mov
pop
out
dec
lods
sub
lods
mov
out
or
pop
jle
and
mov
cld
cmpsb
jp
xor
lock
das
inc
adc
xchg
dec
push
mov
les
cld
data16
dec
pop
jg
cmp
dec
mov
pop
dec
lock
ja
dec
and
aad
or
dec
dec
dec
std
out
xchg
xchg
loopne
je
add
pop
jns
test
add
pop
test
pop
fisttpll
test
arpl
sub
test
mov
mov
or
mov
fisttpl
xchg
vcvttpd2dqy
mov
imul
out
sbb
faddl
add
mov
jno
or
lret
dec
and
mov
mov
mov
aam
mov
pop
cltd
imul
rcl
xchg
jmp
loope
push
scas
test
rolb
xor
mov
js
int3
in
dec
mov
inc
dec
xor
in
stos
jbe
stos
or
and
or
test
mov
sarl
cltd
push
or
in
push
out
sti
pop
lds
jge
push
mov
in
cwtl
iret
dec
dec
xlat
ds
push
dec
mov
leave
sti
xchg
adc
pop
jno
pop
mov
iret
sahf
lods
jae
pop
and
inc
mov
dec
sbb
dec
and
jns
or
cld
inc
xchg
mov
xor
push
fildl
mov
xchg
cmp
rorl
dec
cli
jnp
lahf
push
or
xchg
fwait
xchg
xchg
mov
adc
stos
cld
xor
clc
jnp
das
stos
cld
fdivs
out
clc
jnp
das
stos
cld
fidivl
out
push
mov
push
cmp
loopne
mov
inc
movsb
out
test
adc
pop
call
lret
dec
stos
mov
insl
mov
aam
dec
or
dec
xchg
dec
jae
lret
test
jmp
lods
jmp
popf
sbb
mov
in
jnp
jb
insl
mov
mov
lods
sbb
sbb
mov
mov
mov
or
notl
push
xchg
add
add
or
jne
push
test
daa
push
loop
aam
daa
iret
or
adc
cs
sub
decl
cmp
test
lock
xchg
in
adc
dec
sti
push
jp
mov
cld
out
inc
push
sub
or
rorl
fwait
cmp
std
push
add
mov
inc
iret
push
clc
fcoms
cmp
loope
inc
sub
push
push
inc
pop
daa
or
cmpb
ret
jnp
loope
or
mov
add
cmp
xor
pop
mov
mov
out
out
and
stc
xchg
daa
decl
jmp
mov
cld
fiadds
incb
pop
mov
inc
out
hlt
sub
pop
js
xor
and
pop
pushf
ss
mov
lods
cmp
pop
adcb
or
push
fidivl
pop
in
push
sub
daa
fsubrl
xor
aad
cmp
testl
pushl
scas
mov
push
lahf
bound
repnz
mov
repnz
arpl
add
imul
dec
adc
inc
cltd
rcll
xor
sub
lea
cmp
mov
lods
adc
jle
cli
jmp
dec
cmp
pop
push
lods
push
xchg
ss
cmp
icebp
mov
pushf
stc
push
push
xchg
adc
lods
pop
stos
adc
imul
mov
push
lods
push
outsb
mov
jne
mov
testb
cmpsb
int
push
push
pop
shr
cld
jp
pop
cmp
fcomip
jne
rcrl
iret
cmc
fwait
push
sub
sub
add
stc
dec
sahf
int3
arpl
out
popf
jb
fs
adc
cld
mov
lret
jge
clc
dec
int
int3
jnp
iret
scas
sti
push
into
mov
sbb
xchg
inc
outsb
fimull
scas
stos
fistpl
ror
dec
or
xchg
pop
incb
mov
out
subl
inc
mov
ret
or
dec
push
inc
in
pop
fldpi
enter
mov
add
int
je
roll
ds
test
inc
cmp
hlt
or
mov
push
xchg
pop
je
lods
ret
sub
xchg
add
aaa
pop
fisubs
mov
ja
xchg
movsl
push
inc
insb
mov
ja
jne
dec
decb
test
mov
sbb
iret
enter
cwtl
aam
rcrl
outsb
dec
jbe
cld
xchg
sbb
popf
jge
dec
inc
cld
add
push
icebp
int3
lods
lret
or
xchg
sti
dec
outsl
cmpl
insl
dec
mov
ret
jbe
mov
jge
or
aam
xor
mov
jae
js
push
mov
inc
hlt
or
add
mov
dec
adc
or
es
push
jns
bound
addr16
loopne
jp
nopl
sbb
pop
lock
pop
sbb
add
add
imul
mov
jmp
jge
insb
shrl
lcall
jge
cmpsl
xchg
ret
idiv
xor
ss
int
or
mov
sbb
fldcw
or
inc
sub
mov
jnp
ss
jle
cmpsb
cli
xchg
std
aam
insl
addl
mov
pop
ret
inc
or
or
cwtl
or
cwtl
ljmp
add
shll
xor
push
fsubr
addr16
or
aam
pop
or
add
imul
std
push
ljmp
ljmp
push
orl
stc
or
in
test
hlt
cmpb
test
cmp
push
push
ficomps
sub
repnz
dec
pop
in
push
cmp
jl
nop
jne
mov
rcrl
push
hlt
pop
rcr
sbb
add
fsub
movsl
movsb
or
mov
stc
dec
imull
mov
dec
jbe
clc
lods
rcr
xchg
out
test
mov
jno
mov
lcall
jp
test
or
filds
enter
inc
nop
cmp
pop
aaa
pop
fdivrp
and
rcll
jno
pop
test
out
les
or
and
jo
testb
inc
mov
ljmp
jne
adc
cmp
fbstp
mov
inc
or
inc
sbb
push
and
and
adc
fcoms
adc
cmp
jbe
add
out
adc
in
jae
xchg
adc
sub
mov
mov
and
sub
push
sbb
push
mov
les
mov
jae
sti
fs
lods
mov
mov
push
and
es
fsub
mov
inc
dec
mov
push
or
shr
or
add
adc
mov
int3
xor
aas
cmovbe
lret
mov
outsb
mov
int
sti
cli
cmp
out
gs
jns
mov
jmp
stos
cmpsb
fildl
stos
jnp
repz
pop
insb
jl
mov
shrl
jne
dec
fisubl
test
dec
push
hlt
adc
pop
popa
sarb
adc
cmpsb
mov
jne
pop
jnp
imull
out
mov
aas
pop
lods
mov
adc
fcoms
int3
stos
dec
test
lret
imul
lcall
repnz
repnz
imul
push
repnz
or
js
jle
mov
xchg
mov
clc
leavew
stos
pop
mov
testl
sub
jbe
mov
sub
lds
dec
inc
mov
aas
fidivs
mov
mov
fisttpl
xlat
maxps
les
dec
int3
ds
or
or
out
fs
nop
mov
rorl
out
outsb
sbb
push
aam
xchg
outsb
xchg
mov
add
ss
xor
add
insb
xchg
roll
jnp
sub
or
testb
mov
sub
sub
sub
adc
imul
test
sar
pop
pop
shll
sub
dec
sub
jecxz
enter
adc
in
rorl
xchg
dec
jbe
xchg
or
xlat
addr16
xchg
aam
or
js
icebp
mov
adc
ljmp
adcl
xor
cmp
das
mov
mov
ja
xchg
pop
je
pop
shlb
mov
and
lds
fidivs
aas
loope
cmp
inc
nop
cmp
mov
jmp
mov
lods
stos
daa
inc
push
mov
jnp
call
cmp
in
roll
leave
or
jnp
add
lock
mov
pop
pop
jle
add
shr
fsubp
mov
scas
loope
add
roll
pushf
add
or
dec
fisttps
and
les
sub
clc
cmpsl
imul
lcall
jecxz
mov
enter
imul
rcr
add
add
or
sarl
std
pop
or
fildl
jmp
orb
sub
pop
and
fcoms
cli
nop
stos
lcall
scas
or
or
mov
dec
xchg
fwait
dec
out
or
dec
stos
scas
or
out
mov
jbe
clc
in
pop
je
ja
xor
sub
lret
gs
xlat
clc
aaa
cld
jle
jge
or
cmp
rcl
lahf
shl
aam
adc
xor
push
iret
mov
push
mov
inc
lods
insb
mov
dec
cmp
ds
sbb
mov
add
jmp
or
xor
jno
out
pop
dec
sbb
add
int3
xchg
scas
xlat
cli
mov
cmp
jecxz
push
mov
add
mov
fnstsw
andl
or
mov
push
ss
adc
or
js
fcompl
sbb
pop
repz
les
dec
sbb
cltd
mov
ror
sti
lea
stc
addr16
ret
aam
sbb
std
push
ljmp
pusha
pop
or
inc
lret
scas
sbb
out
sub
jb
xchg
push
or
dec
cmpsl
or
dec
mov
inc
pop
dec
pop
cmp
lahf
adc
push
js
lret
lcall
sub
cld
stc
pop
notb
stos
or
dec
cmp
scas
dec
bound
jns
rcll
mov
shll
in
cmp
inc
push
sub
lods
mov
imul
or
adc
push
push
jle,pt
in
pop
sarb
cwtl
cmpsl
add
stos
js
fiadds
dec
shl
push
ret
test
cmpsl
fdivr
popa
adc
cmp
inc
ret
inc
mov
jp
or
mov
sub
xchg
or
or
fdivrl
mov
sbb
mov
mov
leave
rcrl
or
negl
stc
mov
in
push
push
sbb
test
inc
test
cwtl
mov
adc
stos
lods
or
rcrb
insb
mov
xlat
inc
dec
ja
hlt
jnp
dec
dec
jge
cmp
mov
mov
imul
cmp
idivl
mov
adc
xchg
js
xor
pop
inc
lcall
pushf
notl
adcb
pop
mov
stos
out
cmpsb
mov
push
fnstcw
fcomi
shll
sub
push
adc
ret
daa
add
or
test
push
sub
jnp
mov
dec
pop
stos
or
mov
test
dec
mov
testb
and
sbbl
push
in
add
out
test
sub
shl
ja
in
push
lods
mov
les
sti
jl
stc
sarl
jns
fwait
test
roll
adc
sbb
subl
aad
popf
shlb
fisttpl
bound
loop
mov
lods
add
jge
in
cmp
pop
add
cli
mov
dec
xor
negl
jo
sbb
out
mov
lret
int3
jmp
jg
stos
push
xchg
or
in
add
test
andl
adc
push
or
or
fisttpll
aaa
xchg
sub
mov
scas
test
iret
add
enter
jmp
or
mov
mov
add
inc
adc
or
jmp
sti
jle
jle
out
dec
cmp
mov
mov
jns
in
or
push
mov
sarl
lock
fcoms
mov
mov
rcll
push
fistps
or
jle
inc
add
testb
jnp
cmp
push
xorb
loope
dec
in
stos
jmp
jecxz
xchg
cmp
mov
adc
sbb
into
mov
sub
xor
clc
stc
pop
cmc
in
fsubrp
pop
add
cmp
sub
lret
das
icebp
int3
scas
out
inc
repz
scas
fidivrs
push
filds
fs
fdivp
cmp
lods
test
movsb
enter
js
mov
loop
mov
lods
sub
div
icebp
jg
fisubs
lahf
ds
xchg
aam
scas
or
in
stos
mov
rcrl
test
mov
mov
push
pop
movsl
ret
leave
add
jns
int3
ljmp
icebp
cmp
divl
jl
hlt
lret
repnz
cmp
loope
fdiv
fcomip
jp
ror
out
clc
dec
stc
mov
addr16
decl
enter
or
cmp
or
icebp
mov
mov
inc
or
add
repnz
scas
inc
push
cmp
cmpl
dec
cmp
xor
repnz
xor
stos
dec
xor
lock
xor
mov
ficomps
hlt
in
cld
fimuls
xchg
xor
enter
filds
ljmp
outsb
mov
rolb
mov
or
mov
jo
mov
int3
mov
mov
jnp
imul
cmp
add
jl
push
addr16
dec
enter
dec
into
mov
sti
add
cmc
pushf
frstor
stc
testb
mov
add
stc
in
stc
pop
mov
in
lret
cld
repz
or
or
loop
fidivs
sti
std
movb
or
dec
int3
fstpt
add
or
lock
jae
mov
mov
enter
ret
mov
jmp
enter
lock
fwait
outsb
aaa
push
fsubr
sarl
js
or
mov
or
dec
je
orl
inc
jne
jae
cmp
add
stos
jb
push
pop
cmpsb
ss
cld
movl
and
testl
pop
jbe
or
cmc
mov
jp
aam
or
sbb
or
mov
in
sbb
movsb
add
sub
maskmovq
testl
cmp
pusha
outsl
add
test
push
stos
push
add
or
mov
into
clc
arpl
pop
xor
movsb
push
cmpb
mov
leave
gs
or
mov
jbe
sbb
or
bnd
shl
outsl
sbbb
mov
or
roll
hlt
loopne
or
lahf
mov
mov
repnz
lds
adc
sbb
push
into
movsl
mov
ret
in
push
insl
dec
inc
fs
aad
in
pop
add
or
mov
sarl
pop
or
aaa
jmp
xor
jns
in
mov
jmp
cmp
mov
std
dec
jge
or
std
add
or
leave
out
and
jg
hlt
ljmp
lret
jns
imul
xor
loope
stos
cmp
imul
out
add
stc
mov
out
stos
or
test
pop
xlat
jmp
ret
xchg
inc
call
out
or
stos
inc
dec
or
inc
xchg
push
mov
aaa
xchg
jp
inc
sbb
adcb
sub
mov
or
pop
xchg
jl
hlt
mov
push
sahf
inc
lret
orb
fwait
clc
and
test
jmp
jmp
lret
mov
aas
aaa
enter
lret
pop
add
shrl
out
sbb
xchg
daa
lock
lcall
jge
pop
roll
mov
int3
loopne
mov
add
sbb
push
sub
xor
cmp
lea
repz
shrl
cmp
lods
inc
add
adc
mov
or
adc
cmp
mov
push
mov
or
leave
clc
dec
xor
add
mov
sbb
outsb
push
lock
push
incb
jb
mov
lods
mov
shll
or
in
iret
or
movsl
mov
push
mov
or
or
jae
lea
adc
outsb
fstpt
pop
mov
dec
test
xchg
data16
aaa
leave
push
mov
push
lret
xlat
mov
jmp
sbb
add
or
sahf
fidivs
sti
enter
insb
fistps
mov
or
sahf
fstps
sti
imul
add
sahf
pushf
cmpsl
repnz
dec
mov
sbb
in
sbb
addb
out
ds
stos
cli
fisttpll
mov
cli
cld
or
and
inc
stc
xchg
mov
inc
pop
fsub
hlt
leave
rcr
roll
ja
pop
js
dec
lock
sti
cmp
in
in
cs
popl
fisttpll
or
sub
aas
aam
movsl
cmpl
or
leave
jmp
scas
xchg
or
in
cmp
jl
ret
aas
dec
adc
mov
or
cmp
sub
fisttps
adc
std
mov
jmp
loope
fmull
add
bound
iret
pusha
pop
mov
sti
ret
cvtps2pd
jmp
xchg
xchg
mov
je
in
adc
sub
ljmp
sbb
and
adcl
mov
dec
xor
test
in
mov
fmull
ret
stos
jp
push
xor
or
push
mov
sbb
jmp
lds
sar
or
cmp
mov
call
jns
sbb
mov
mov
adc
sub
dec
cs
call
add
cmc
repz
bound
dec
testb
test
and
add
sahf
lock
or
lret
xchg
dec
leave
sbb
and
mov
push
gs
or
lock
add
jmp
std
dec
enter
mov
or
inc
loope
jg
mov
xor
jmp
stos
push
or
xchg
pop
inc
ret
or
inc
sarl
mov
xchg
cmpsl
jl
les
jl
jp
dec
cmpsb
sarb
jnp
jp
hlt
add
cld
and
stos
mov
aaa
pop
les
mov
out
mov
stos
in
mov
out
pusha
mov
roll
dec
xor
fcoms
cmpsb
leave
add
sub
adcb
mov
insb
add
mov
pop
mov
mov
inc
hlt
mov
sub
lret
mov
mov
adc
hlt
les
mov
icebp
orl
sbb
movsb
ror
push
xor
dec
lods
outsl
stos
mov
jbe
addr16
jg
insl
jmp
les
lock
sarl
cld
sub
pop
ljmp
pop
or
dec
adc
loop
xchg
lock
lods
rorl
push
mov
into
ret
push
xlat
popf
push
push
and
lock
andl
push
hlt
dec
shlb
jmp
dec
dec
push
mov
out
xor
mov
lds
dec
rol
roll
test
dec
out
sti
add
std
and
sub
test
sub
or
je
dec
inc
xchg
pop
push
in
jg
pop
stos
or
scas
cld
mov
mov
mov
movsl
out
pop
add
xlat
out
stc
pop
cmc
imul
xchg
ja
outsb
stos
leave
jb
stos
mov
addb
jnp
dec
call
out
lods
cmp
rorl
in
daa
test
into
push
or
lahf
xlat
cmc
aad
mov
daa
pop
std
xchg
idiv
cmp
ret
add
dec
mov
jnp
cmp
and
sub
outsl
mov
or
jge
jl
mov
pop
pusha
dec
das
jbe
lret
jns
xchg
adc
addb
decb
in
ljmp
sarl
sbb
or
stc
roll
or
jmp
push
lahf
mov
in
jg
shl
testb
sbb
fisubl
lods
sub
and
xlat
repnz
mov
jns,pn
jg
repnz
fcmovnb
or
sti
int3
sub
mov
scas
cmpsl
movsb
out
cmp
sbb
mov
sub
andl
int3
add
mov
call
call
ret
cmpsl
adc
je
jae
xchg
cwtl
movnti
ret
orb
aas
sub
shr
and
sbb
mov
lret
cli
inc
mov
pusha
dec
pop
rcrl
arpl
mov
pusha
das
xchg
xlat
jne
test
pop
jl
in
xor
pop
stos
sbb
out
jb
lea
jmp
jns
cmpsb
fldenv
mov
cmp
sbb
jmp
pop
mov
push
mov
les
jecxz
push
cmpsl
jmp
std
fildl
inc
lea
xor
xchg
test
dec
roll
loope
ret
cvtdq2ps
jae
ljmp
aam
ret
inc
test
loopne
inc
pop
cs
push
loope
jl
into
ret
popf
mov
mov
ja
pushf
xchg
lret
aad
ret
in
stc
lods
fwait
lock
inc
pop
xor
inc
pop
dec
test
int3
movsl
pusha
aaa
loope
adc
sahf
sbb
sbb
dec
sbb
iret
mov
movups
cmp
call
test
aam
pop
cli
mov
addl
jl
mov
out
jl
popf
pop
out
mov
dec
out
cwtl
mov
jns
sbbl
or
je
ja
pop
pop
jl
sarb
shrb
sub
popa
jnp
loopne
scas
and
or
pusha
cmc
inc
call
jmp
pop
pop
mov
lcall
lret
cmp
or
iret
jae
add
or
jp
or
adc
xchg
nop
xor
lret
cmp
or
in
dec
mov
xchg
in
or
daa
xor
pop
cmp
imul
add
push
js
in
push
push
push
loope
mov
scas
or
loop
mov
inc
dec
jp
dec
ret
xchg
cmp
mov
loope
adc
cmp
xlat
or
inc
sbb
mov
jg
sbb
or
pop
push
xor
fimull
mov
cmc
jmp
and
insl
mov
sub
jo
shrl
xor
lods
jp
or
cmp
and
std
jne
inc
or
mov
or
or
add
or
addl
loop
jl
dec
push
shll
ret
add
add
and
xchg
or
push
cmpsb
jp
fildl
pop
lahf
mov
cmpsl
add
arpl
jbe
fsts
ret
push
dec
push
dec
mov
mov
stos
pop
mov
xchg
dec
les
xlat
into
mov
inc
dec
add
test
rcrb
mov
movsl
cmp
inc
decl
mov
pop
fldt
rorb
xlat
in
and
xchg
pop
shr
or
sahf
sbb
xchg
add
xor
es
push
or
pop
cmpsb
js
cmp
test
leave
push
add
sbb
lock
in
lret
jecxz
xchg
adc
pop
js
mov
ficoml
or
rol
mov
cmp
or
ret
mov
adc
lds
into
fsubl
ficompl
jmp
xchg
or
jmp
aad
cld
pop
pop
cmp
jno
mov
add
cmp
mov
xor
orl
repz
sbb
add
cmc
pop
sar
xor
sbb
testl
jp
stc
add
movsl
pop
sub
test
mov
orb
jmp
cmpb
push
adc
inc
or
add
or
test
cwtl
mov
and
ljmp
xor
push
mov
mov
dec
and
lock
das
push
jnp
xor
add
ds
push
orb
dec
mov
fidivrs
sbb
out
inc
stos
jno
aas
leave
pop
cmp
in
sti
sbb
stc
movsb
jb
in
mov
add
jge
jl
fistl
cmp
xchg
cld
test
enter
push
mov
ja
xlat
insb
or
adc
mov
ljmp
jo
repnz
addr16
sbb
rcr
push
inc
mov
and
jne
mov
ret
jns
cmpsl
popl
icebp
stos
xlat
mov
sets
or
push
xchg
xchg
sub
int
pop
lret
mov
cli
mov
mov
ficoms
push
mov
loope
or
sahf
pop
or
add
mov
jge
dec
or
addb
repnz
or
std
cmc
aaa
stos
icebp
int3
stc
adc
lods
rol
xchg
mov
loopne
xor
stos
dec
lret
cmpb
mov
jae
lret
jl
jmp
mov
and
repnz
call
add
iret
mov
jmp
cmp
cmp
push
rcr
mov
cld
mov
in
iret
add
mov
lret
insl
dec
leave
add
jp
rolb
jg
dec
into
enter
or
fcomps
or
add
mov
or
cmp
in
aam
pop
icebp
aad
xor
out
rorl
fcmovnb
rolb
mov
fnstsw
add
mov
mov
mov
test
and
mov
mov
fimull
mov
ja
clc
cmp
popf
xor
push
lret
sarl
nop
sti
ror
xchg
jg
inc
or
or
mov
add
add
clc
ffree
shl
xorb
fs
es
out
jmp
in
or
jmp
lret
aam
lahf
stos
xchg
addb
pop
mov
sub
je
or
and
xor
xchg
cmp
stos
outsb
gs
xor
outsb
xchg
inc
repnz
xor
fisttpl
stc
dec
mov
cmp
fs
adc
add
or
add
mov
fildll
fwait
push
mov
shll
dec
out
sarl
jle
fs
cli
stos
ret
inc
cwtl
mov
push
inc
cs
pusha
fwait
xchg
jns
stos
lret
add
cld
or
xlat
sarl
inc
mov
mov
ret
cmp
test
rcrl
push
int3
adc
cmp
fdivr
sub
scas
mov
push
adcb
inc
cld
cld
js
add
stos
mov
movsl
insl
sub
sti
or
test
pusha
aas
and
or
push
add
into
std
sub
dec
lods
mov
sti
icebp
mov
sarb
add
pop
inc
icebp
arpl
xchg
mov
or
int
std
mov
dec
jmp
jb
in
mov
adc
dec
cmp
scas
int3
pop
in
ds
mov
push
leave
aas
cmp
push
rol
adc
push
and
mov
or
sbb
push
jae
add
add
xchg
std
fisubs
inc
lods
pop
into
pop
mov
dec
jb
pushf
dec
or
dec
push
push
push
sub
shll
mov
or
rcrb
shl
mov
add
shrl
xchg
inc
or
add
icebp
ret
inc
outsl
leave
imul
nop
dec
mov
notb
loope
fldcw
sbb
add
jne
stc
lcall
mov
ljmp
xor
adc
addr16
adc
in
pop
dec
jns
and
pusha
bsr
inc
mov
cmp
aam
xchg
xchg
pop
test
inc
ret
add
dec
push
jae
add
mov
dec
cmp
xchg
addb
and
add
in
aad
cmpsb
movb
insl
sbb
lock
mov
mov
mov
shll
mov
lods
clc
out
add
sti
fucomi
jl
lods
or
aaa
in
jg
enter
lret
mov
dec
or
fistl
xchg
mov
lret
std
mov
dec
add
or
cmp
dec
out
out
push
arpl
popf
push
xor
nop
or
testl
push
sub
jl
pushf
push
lret
scas
mov
mov
jge
jbe
movsl
in
ja
inc
stos
int3
xchg
mov
add
fadds
jnp
stos
mov
bound
cmp
bound
push
cld
inc
mov
dec
xlat
push
ss
jl
ds
fistps
sbb
inc
cld
pop
jno
rol
pushf
xor
cli
bound
xchg
pop
cmpsl
xchg
daa
xchg
aad
icebp
ljmp
push
pop
push
inc
enter
sub
adc
fdivrs
mov
sbb
testl
das
jg
daa
outsl
cmp
dec
outsb
cmp
test
loopne
or
inc
adc
shll
push
pop
lahf
jp
sub
pop
cld
daa
mov
lret
repnz
cld
mov
add
cmp
js
dec
lret
movsb
sbb
mov
negb
or
add
cltd
jg
pusha
cmpsb
mov
sub
inc
push
test
xchg
sbb
and
sbb
sub
cmp
xor
xchg
in
iret
pop
push
icebp
movsb
jmp
clc
cmpsl
mov
mov
and
sub
push
movsl
mov
cmp
fidivs
stc
sub
mov
pop
sub
sahf
outsl
inc
pop
jns
mov
in
or
stc
or
pop
fsts
dec
or
lods
mov
adcb
test
lcall
inc
xor
or
sahf
pushf
stc
std
dec
in
leave
or
inc
mov
inc
out
jno
add
popa
add
test
add
and
lock
sbb
add
mov
js
push
mov
loopne
fnstcw
mov
jl
fisubs
inc
sahf
or
or
add
out
cld
je
rol
or
or
mov
je
in
or
or
jb
gs
add
push
adcl
or
or
addb
add
mov
inc
add
loop
jp
cmp
jbe
or
in
cld
pop
or
or
pop
enter
mov
pop
movb
push
hlt
movsb
ret
cli
lret
loopne
xlat
mov
scas
push
add
inc
add
mov
jo
incl
jne
jecxz
hlt
cmp
es
jbe
dec
hlt
enter
sar
or
hlt
ret
out
and
lcall
insb
faddp
jp
mov
clc
dec
lods
fldenv
jmp
cld
fs
mov
add
add
leave
cmp
hlt
cmc
add
je
in
leave
fs
subb
bound
push
jl
pop
data16
data16
cmp
jmp
mov
dec
shll
pop
or
repnz
in
inc
adc
cmp
xchg
sub
js
imul
lret
lcall
rorb
rorl
cmp
test
pop
aaa
sbb
loop
jge
adc
ret
pop
pop
in
add
sub
in
cld
int3
xor
sarl
movsb
rcl
jp
mov
aam
clc
in
test
lods
mov
shlb
iret
rcrb
test
jl
cltd
sub
push
mov
lcall
divb
andb
or
dec
loopne
mov
cwtl
add
test
imul
cmp
ret
cli
rorl
cld
add
push
add
stc
enter
add
jmp
mov
inc
or
pop
cli
stos
add
add
dec
or
jecxz
jmp
rol
in
inc
pop
out
into
orl
sti
ret
nop
rorb
mov
or
xchg
or
inc
xlat
mov
cmp
mov
lock
icebp
ja
jo
push
jno
clc
scas
les
push
or
fimuls
or
movsl
std
mov
std
gs
mov
in
js
in
sub
add
repnz
aas
add
xchg
cmp
or
int3
loop
js
or
mov
loop
fstpt
test
dec
pop
mov
jp
int
jno
cmc
adc
hlt
add
test
scas
lock
sti
mov
scas
outsl
push
or
jl
mov
icebp
pop
push
jnp
sti
xor
sti
out
mov
fisttpll
cld
mov
in
xlat
add
mov
or
dec
or
cmp
push
cmp
sti
jmp
mov
les
jmp
cmpsl
jbe
sbb
xor
inc
dec
mov
sti
mov
push
jbe
add
rcrl
ja
lds
push
int
push
sub
in
in
fdivl
sti
or
or
pop
mov
or
mov
xchg
or
or
sbb
pop
pop
jns
xchg
jge
insb
test
or
pop
sbb
or
stos
jl
cmp
ret
adc
push
or
xchg
adc
divb
testl
loop
or
movsl
lock
push
movsl
and
xchg
sub
or
stos
jnp
or
loopne
mov
xor
inc
das
std
fstps
lret
out
lcall
mov
fsubrp
cmp
inc
jmp
fdivrl
sub
jnp
and
or
stos
lret
les
dec
mov
or
lret
decb
clc
cmp
xlat
scas
dec
push
mov
lret
call
or
ljmp
enter
xchg
inc
pop
or
or
xchg
js
mov
fisubl
adc
ret
add
fnstenv
cmp
cmp
and
test
mov
or
or
mov
sub
das
fildl
loop
fwait
jecxz
sbb
dec
inc
sbb
sub
mov
xor
mov
jmp
push
or
jmp
or
jp
or
push
xchg
aam
insl
mov
fcomps
pop
test
rcll
movsl
adc
inc
xlat
cmpsb
inc
xchg
add
sbb
mov
roll
add
lock
lods
lret
in
shrb
dec
push
arpl
or
mov
cld
fdivrl
test
mov
out
arpl
push
add
rorl
jge
cmp
jbe
push
xor
mov
cmp
in
gs
sbb
jne
dec
mov
idivb
popf
sbb
cld
adc
movsb
cmpb
jge
xor
sbb
js
mov
lret
or
or
xor
das
push
out
sarb
jl
xchg
xchg
add
cmp
outsb
sti
fisttpl
enter
andb
dec
lods
or
mov
push
mov
or
sbb
jecxz
pushf
lds
pusha
or
inc
push
fidivrs
jp
cmpsb
sub
shll
rcll
in
sub
dec
or
sbb
jmp
dec
stos
lret
les
xchg
mov
inc
xchg
dec
and
incb
lock
cltd
insb
or
mov
xlat
in
cmp
jb
ret
test
aam
aad
cmp
lea
stos
das
add
outsb
dec
inc
les
add
dec
add
or
mov
add
sarb
add
fcom
mov
lds
pop
stos
rcll
adc
cltd
shrl
mov
in
dec
and
sbb
adc
push
into
lret
jl
xchg
faddl
std
cwtl
sub
sti
or
xor
add
jl
pop
outsl
aad
scas
js
fisubrl
push
push
popf
push
mov
pop
cmpsb
cld
scas
mov
mov
add
mov
jmp
ljmp
push
or
jge
loopne
sbb
jp
or
inc
mov
cmc
mov
mov
fildl
add
or
mov
sbb
cmp
or
aad
xor
loopne
stc
jl
loopne
adc
arpl
daa
push
add
daa
ja
dec
xchg
fucomip
lods
or
push
leave
dec
pop
xchg
sbb
mov
stc
movsl
dec
daa
push
mov
adc
sub
sti
sub
popa
xlat
fsubrs
adc
jo
mov
cltd
xchg
lea
dec
xchg
mov
pushf
dec
cwtl
cmp
cli
gs
push
jbe
aad
jmp
mov
sti
fcmovbe
inc
mull
or
cmpsb
aaa
xlat
sub
or
sbb
mov
loope
pop
cmpsl
addr16
fbstp
mov
pop
mov
das
ret
adc
shl
push
cld
push
add
add
mov
das
mov
ds
dec
dec
mov
aaa
pop
jmp
out
insb
es
hlt
xchg
jne
invd
push
jno
sub
or
call
fisttps
data16
ja
or
test
stos
scas
pop
stos
push
jb
xchg
add
mov
test
out
les
bnd
xchg
std
sub
or
add
into
out
cli
jnp
in
push
cmp
icebp
mov
cmp
mov
mov
xchg
xor
mov
jp
mov
dec
stc
jmp
cmp
rorl
js
dec
aaa
lret
fcmovu
movsl
sbb
les
mov
mov
loope
mov
cmp
add
cmpsb
rclb
inc
and
or
test
pop
aaa
stos
in
add
adc
inc
mov
call
pop
mov
mov
jl
insb
dec
sbb
pop
add
fldenv
leave
or
mov
pop
sub
xchg
cmpsb
nop
cmp
out
mov
xchg
inc
dec
or
pop
inc
sbb
fcmove
dec
mov
in
hlt
xlat
outsb
mov
mov
mov
add
mov
pop
outsl
jg
mov
mov
cmpsl
iret
ljmp
out
jge
push
and
pop
push
or
cmpsl
push
js
fmuls
xchg
mov
rorb
fwait
lahf
lods
cmpleps
insb
pop
in
cmpsl
rorb
or
clc
enter
add
add
ljmp
add
or
or
mov
leave
mov
popa
outsl
sub
aaa
loope
pusha
loope
or
sbb
mov
hlt
mov
push
popa
pop
dec
fsubr
cmpsl
stc
int3
dec
in
push
dec
mov
sbb
cld
enter
rorb
lods
xchg
imul
in
scas
lret
mov
mov
mov
pop
cld
rorb
or
loopne
call
push
filds
push
lret
xchg
add
addl
lcall
xor
add
into
ret
roll
fwait
hlt
ja
add
pop
or
in
jge
fstps
hlt
testl
rorb
js
and
sti
mov
or
divb
stc
mov
fldt
in
mov
loop
mov
aad
scas
jo
mov
jno
scas
ljmp
jne
cld
xor
inc
loop
cli
mov
lret
mov
aas
cmp
call
dec
repnz
cmp
inc
cli
xchg
loopne
push
push
xchg
or
mov
fsub
jg
icebp
icebp
stc
cmpsl
out
push
negl
inc
dec
out
int
jp
mov
cmp
xchg
or
mov
sub
les
sbb
or
fsub
jbe
decb
cmc
sbbl
ss
or
jmp
cld
popa
je
mov
pop
mov
adc
push
test
add
mov
mov
in
xor
decl
sar
dec
enter
les
or
push
shlb
fildl
outsl
inc
test
jmp
inc
lret
mov
fdivs
adc
jne
fsubr
mov
addl
cmpsl
iret
push
rol
cmp
es
mov
movsl
cmp
test
test
test
aaa
popf
iret
add
stc
fucomi
repnz
cmp
adc
fdivr
push
inc
ljmp
mov
sub
xor
aad
mov
lea
or
push
gs
or
mov
sbb
push
pop
fwait
lods
jmp
mov
mov
push
shr
out
scas
and
mov
mov
ret
pop
push
sbb
jmp
arpl
and
popa
jb
sbb
mov
push
sub
les
sbb
repz
adc
mov
inc
fstpt
mov
dec
shrl
in
xor
inc
lock
int3
in
push
addl
inc
jno
xor
dec
call
sbb
fmull
loope
loopne
in
rol
cmp
jmp
popa
loopne
cmc
pop
mov
jns
xchg
xchg
sub
test
das
lret
pop
ds
xor
lods
pavgb
idivb
mov
into
in
or
sub
loope
or
out
sbb
mov
icebp
jle
sbb
xchg
jb
push
cmpsb
ja
push
pop
std
cmp
cmp
ret
inc
inc
es
jbe
out
or
mov
mov
out
repz
test
mov
push
jmp
clc
sti
cmp
arpl
lods
bts
sub
pop
jb
roll
into
fidivrs
in
dec
add
cmp
xor
cmp
push
mov
or
mov
push
je
xchg
add
fucomip
les
jge
cmp
fsubrp
cmp
pusha
leave
gs
ret
hlt
int
add
sub
outsl
mov
js
add
add
out
test
jp
out
inc
mov
imul
cmpsl
cmpsl
out
mov
smsw
adc
add
out
sub
stos
ljmp
jne
or
out
push
inc
dec
psraw
jae
add
daa
insb
jmp
mov
jnp
xchg
add
cmp
cmp
insb
adc
inc
xor
mov
ja
jo
cwtl
popa
inc
in
ret
gs
pop
nop
sub
int3
cmp
fcmovu
adc
mov
jge
push
cmpl
jge
in
fcmovne
cmp
int3
lret
mov
jns
jg
por
subb
scas
lret
sub
pop
daa
jl
enter
loop
into
mov
cmp
shl
into
cld
add
in
lods
mov
cmp
mov
push
lods
enter
add
jmp
mov
or
push
lds
pop
push
iret
scas
add
addr16
testl
into
movsb
in
test
dec
rcr
popa
xchg
dec
adc
sub
or
jl
jp
fnstcw
out
cmp
xlat
sbb
out
je
mov
mov
sub
jbe
in
pushf
xlat
dec
sbb
mov
add
in
fldln2
pop
mov
xorb
aam
js
into
mov
fiaddl
mov
dec
int3
adc
inc
adcb
jge
andb
xchg
ds
or
rolb
mov
ret
fstps
jl
imul
in
roll
subb
inc
lea
xor
cmpb
mov
sbb
loop
test
xor
jmp
andps
andb
shll
mov
adc
jne,pt
arpl
or
jae
jbe
push
jo
adc
dec
sti
aaa
aaa
push
hlt
sbb
dec
push
std
mov
xor
ja
mov
ret
aam
dec
mov
pop
fstpt
mov
pop
push
mov
inc
dec
loopne
add
in
cmp
les
mov
adc
cld
dec
imul
jp
adc
stos
sbb
and
mov
insb
sbb
cmp
sbbl
mov
or
mov
cmp
mov
mov
lock
enter
mov
dec
cld
add
mov
adc
int3
cmp
jo
mov
in
sbb
clc
jle
scas
imul
imul
in
lock
adc
cmp
stc
repnz
pop
mov
dec
add
ret
add
adc
xlat
add
aam
dec
inc
loopne
out
clc
pop
xor
movsl
imul
jl
add
shrl
adc
jo
sub
rol
cmp
cli
enter
lods
aaa
sarl
test
lahf
cld
repnz
jnp
sti
push
adc
das
int
ds
incb
xchg
xchg
jl
push
mov
pop
jmp
push
cmp
cmp
sti
insl
dec
int3
or
incl
lock
jbe
adc
pop
inc
cmp
je
hlt
dec
out
fmul
xchg
fwait
aad
data16
cmp
adc
cmpb
mov
jno
outsl
popf
jo
daa
ljmp
inc
fldcw
jp
pushf
add
sbb
mov
sbb
sbb
and
ja
jl
add
insl
pop
mov
test
scas
out
lcall
mov
pop
sub
aas
pop
sbb
cltd
popa
je
sbb
shl
jno
xchg
cwtl
sub
pop
clc
daa
inc
cmp
push
inc
cmp
out
les
stos
add
enter
cld
dec
or
or
sysret
in
mov
fcom
test
xor
jnp
or
jns
pop
ss
adc
jecxz
push
les
shrb
cmpsl
mov
xor
out
stc
mov
sahf
stc
fisubrl
lret
sub
outsb
inc
icebp
push
in
xor
xchg
inc
push
add
testl
adc
aad
or
push
jmp
jae
aad
dec
add
add
xor
call
mov
xchg
lods
fucomp
test
inc
pop
sub
mov
mov
xor
scas
or
ret
adc
movsb
call
mov
sub
push
lret
or
pop
add
jle
out
out
ja
inc
cmp
icebp
daa
pop
in
push
lds
jnp
mov
popa
in
add
add
hlt
nop
les
loope
flds
mov
sbb
pop
je
addb
sbb
fidivs
enter
mov
add
or
popa
pop
jne
mov
stos
inc
outsl
aaa
mov
mov
rcrl
mov
pusha
bound
addr16
sarb
repz
dec
loop
imul
mov
push
sarl
or
adc
inc
arpl
subl
cmp
stos
xchg
in
and
add
arpl
ds
insl
mov
mov
or
cmpsb
lahf
rolb
sti
xchg
jns
add
sarl
mov
test
mov
mov
iret
mov
in
lods
movsb
or
pop
or
pop
stos
sbb
gs
int3
push
ret
out
in
cltd
aad
cmc
fimull
nop
adc
or
mov
ds
test
lds
mov
rcrl
arpl
mov
and
in
test
data16
mov
popa
add
jmp
or
adc
xchg
pop
fisttps
inc
jl
adc
mov
mov
test
aaa
sbb
push
addl
or
pop
jl
pusha
mov
sub
pop
sub
push
add
lods
les
mov
push
pop
les
or
inc
mov
loope
sahf
dec
inc
flds
daa
add
rolb
mov
mov
xchg
mov
mov
test
daa
push
testb
stos
rorl
sub
mov
pop
pop
xchg
cmpsb
ljmp
inc
mov
out
clc
xchg
or
leave
adc
mov
add
scas
sti
xchg
jge
inc
pop
js
in
xchg
hlt
enter
repnz
dec
in
dec
test
push
xor
test
pop
xlat
inc
cmp
or
cli
pop
out
fs
shll
jo
out
and
mov
stc
int3
pop
sub
mov
inc
adc
fadds
xchg
mov
repz
test
sbb
insl
js
jl
stc
aaa
mov
ljmp
cmpsl
fadds
aaa
fnstenv
mov
xchg
fcmovu
mov
int3
inc
sti
dec
mov
dec
inc
and
es
aas
cld
fldt
ffree
orps
loope
or
enter
dec
pop
mov
call
xchg
aam
ret
push
add
int3
mov
dec
or
ret
stos
push
iret
int3
add
dec
aaa
loopne
loop
in
xor
ret
push
xor
push
or
rcl
push
in
ss
mov
pusha
cli
neg
negb
test
sahf
push
pop
add
add
mov
jmp
outsb
dec
add
add
lahf
push
aaa
out
cwtl
adc
mov
sbb
subl
loopne
dec
les
fcompl
dec
fsubrl
xchg
or
add
inc
dec
mov
call
lcall
aad
add
clc
pop
add
inc
cmpb
les
rcr
iret
in
ret
inc
mov
test
decl
sbb
xor
lret
in
lods
shll
sub
mov
mov
nop
ret
rol
xorl
xor
sbb
pop
xchg
data16
jmp
xor
cmpsb
add
or
movsl
mov
push
dec
sub
fsubrs
push
into
pop
pop
clc
shrb
push
addr16
andl
add
xchg
rorb
enter
sub
repnz
les
cmp
cld
fldl
fnstsw
pop
cmp
inc
jecxz
fcmovnu
lods
inc
cmp
outsb
in
or
test
rcrl
enter
push
les
or
inc
loopne
shrl
pop
fiadds
loopne
xacquire
sti
add
mov
mov
test
loop
adc
cmp
mov
push
mov
dec
lods
sub
jecxz
mov
sbb
ret
loopw
mov
add
mov
mov
jbe
leave
rolb
cld
les
mulb
xchg
xlat
mov
jmp
mov
xor
test
add
ret
push
mov
cmc
pop
fdivrp
in
int
jle
adc
mov
mov
lcall
add
repz
mov
insl
mov
fmull
xlat
jo
cmp
lds
inc
nop
int3
adc
jnp
jg
pop
mov
sub
scas
or
cmc
pop
add
lods
push
add
frstor
lock
stc
xor
or
cmpl
test
mov
iret
out
jle
pop
or
out
sti
sbb
insl
mov
aas
ja
fmuls
push
xchg
xor
fnstsw
imul
sub
jnp
scas
lcall
shll
cmp
stc
push
cmc
aaa
sahf
and
mov
dec
lock
ja
pop
add
mov
lret
mov
lea
mov
adc
leave
cmp
push
add
pop
out
jb
sub
push
dec
or
jns
ffreep
jmp
or
add
adc
xor
std
test
out
sti
movsb
data16
fldenv
or
xchg
mov
add
lcall
test
inc
jne
lods
fists
js
shll
movb
push
notl
movl
pop
pop
clc
jle
loopne
fdivl
inc
add
lods
nop
or
xor
les
xlat
jae
sub
dec
int3
mov
cli
and
inc
mov
testb
loope
mov
push
or
dec
cwtl
xor
dec
dec
jmp
inc
mov
les
hlt
stc
xor
mov
jne
sub
mov
addr16
add
addr16
cmp
xchg
pop
mov
lcall
popf
roll
adc
rolb
cs
dec
jae
inc
push
test
jge
stc
pop
mov
jp,pn
fstpt
cmc
sahf
inc
or
mov
jnp
shll
mov
jg
ret
xchg
insb
rol
stos
dec
mov
pop
mov
sarl
call
addl
xchg
inc
clc
or
cmpsl
out
mov
enter
dec
sub
mov
or
mov
push
dec
lret
jnp
andl
xchg
mov
shll
lcall
imul
test
stc
and
dec
mov
lods
into
stos
into
push
xchg
hlt
mov
adc
jmp
rcr
fnstsw
fistpll
jo
sbb
mov
ja
inc
loopne
movsl
mov
pop
inc
lcall
mov
sub
inc
ret
sarl
nop
fldlg2
mov
leave
insb
or
pushf
push
aas
sub
mov
jp
int3
mov
pop
or
mov
pop
clc
sbb
mov
xor
dec
adc
in
fdiv
and
pop
addr16
jl
test
gs
dec
push
ds
cmp
fcomps
xchg
test
add
sub
pusha
ss
mov
xchg
movsl
mov
pop
enter
add
sbb
bound
fmull
push
mov
test
ret
dec
add
push
stos
jl
mov
lahf
cmpsl
cmc
mov
ds
out
hlt
loopne
ficoml
and
dec
lret
insl
fs
or
pop
lret
add
pusha
inc
mov
xchg
mov
or
mov
rolb
lret
jbe
aam
inc
sub
add
arpl
mov
pop
mov
sub
mov
mov
inc
aam
inc
iret
insb
jle
lock
out
shl
stos
or
outsl
push
pmulhuw
xor
stos
push
push
cmpsb
push
sbb
cs
add
mov
out
add
jbe
sub
std
inc
dec
sub
xchg
ja
mov
jns
jnp
inc
xlat
adc
mov
mov
xchg
test
ret
ret
jne
dec
mov
fucomi
aaa
inc
cwtl
xchg
in
fimull
rcrl
add
inc
ljmp
ret
cmp
out
cmpsb
add
daa
cmp
lods
ret
out
daa
aam
ret
push
enter
fadds
out
xchg
ja
push
xor
sti
mov
loope
pop
test
pushf
icebp
and
cmp
lods
pmullw
movsl
jb
inc
fdivrl
test
xchg
mov
sbb
jl
inc
mov
lcall
scas
mov
jbe
dec
dec
lret
pand
push
dec
clc
aas
iret
mov
test
jbe
pop
sub
and
mov
lds
lock
incb
jmp
mov
mov
mov
call
inc
mov
imul
inc
jl
les
or
dec
jae
aam
out
push
lahf
push
iret
enter
cld
sub
jo
pop
inc
pop
into
ret
out
nop
lret
enter
jns
xlat
lods
mov
popf
in
sub
rorl
xor
and
fmul
dec
mov
out
shll
cmp
mov
fwait
das
test
ret
shll
adc
xor
inc
testl
and
insl
rcr
push
outsl
inc
pusha
cli
fcomp
dec
xchg
inc
lock
mov
fiadds
or
sub
mov
in
into
std
jp
jp
fs
sbb
jnp
jl
mov
push
fs
aam
test
or
es
mov
jecxz
lock
incb
in
pop
scas
dec
pop
aad
movsl
pushf
jmp
jle
xchg
test
jl
insb
shl
insb
inc
lcall
cmp
inc
xchg
shl
fcomip
movsl
lcall
and
cld
dec
std
jne
jmp
push
std
inc
int3
test
or
arpl
push
rolb
scas
popf
cmpl
sbb
jne
lock
in
out
mov
test
cmp
and
or
push
jo
jae
cld
std
xor
jle
xchg
jle
mov
mov
sbb
pop
sbb
add
adc
dec
and
jae
push
aam
cltd
lcall
mov
int
and
xlat
jg
fidivrl
fildl
sbb
pop
repnz
adc
and
jns
sub
xchg
rol
shrb
dec
leave
xlat
mov
dec
sbb
outsl
cmp
loope
out
leave
dec
insl
jmp
cld
sbb
or
rcrl
dec
adc
or
imul
pop
push
mov
jne
dec
enter
in
adc
sbb
jns
aam
sub
mov
aaa
sbb
and
dec
std
mov
insl
and
inc
pop
in
cmp
jp
insb
bound
cld
jge
adc
jbe
cld
add
ret
mov
dec
dec
push
in
mov
imul
mov
imul
push
stc
pop
sub
mov
rcrl
jl
inc
dec
andb
jl
negb
xor
pop
leave
stos
lret
dec
std
mov
lods
dec
aad
mov
inc
call
inc
mov
jne
inc
or
add
jl
outsb
mov
setb
and
add
outsl
das
add
pop
push
stos
mov
testl
cmovs
add
jnp
fnstsw
pushf
xchg
or
dec
lcall
das
stc
ficompl
jbe
ficomps
mov
push
dec
or
pop
lret
jbe
call
push
jns
pop
insb
dec
stos
in
ljmp
icebp
stos
popa
mov
inc
sbbb
popf
cwtl
sub
fidivs
xchg
nop
mov
sahf
push
rcrl
test
mov
ret
dec
ret
mov
jl
ja
jle
lcall
push
ljmp
repz
dec
mov
xlat
subb
or
xor
test
push
cmova
adc
sarb
jmp
neg
jns
stos
test
xchg
jb
int3
dec
cmp
sbb
incb
cwtl
or
inc
mov
sbb
or
movsl
int
fldcw
cwtl
iret
rcrl
std
pop
dec
sti
cltd
fimuls
into
sub
push
cmc
mov
sti
pop
mov
or
sbb
jae
lcall
stos
mov
ds
xchg
jecxz
cwtl
inc
pop
int
icebp
jl
jnp
das
add
scas
movb
mov
xor
and
leave
sub
std
sbb
pop
lods
cmp
jle
jmp
cmpb
adc
cmpsb
sub
sub
or
or
cmpsl
xor
add
adc
std
inc
fsubrs
es
cwtl
push
xchg
xchg
push
add
mov
test
xchg
mov
mov
jns
dec
in
cmp
sub
jmp
inc
je
dec
lods
push
fcmovu
dec
jp
pop
dec
jl
xchg
push
cld
cmp
ret
decl
ret
mov
sti
mov
mov
inc
push
jae
pop
or
and
shll
orb
js
mov
jp
adc
xchg
jb
sub
mov
sub
leave
cli
xchg
mov
scas
or
sub
add
sbb
or
jge
repnz
mov
mov
adc
ret
jne
sbb
pushf
xchg
enter
mov
pop
outsl
cli
enter
push
xchg
adc
cmpsb
mov
leave
jmp
add
or
xchg
push
out
mov
data16
xor
adcb
mov
popf
add
or
or
sub
add
int3
inc
sbb
or
jmp
aam
ffreep
enter
push
out
test
inc
mov
sti
jle
add
mov
lods
lret
arpl
in
ficoms
mov
mov
aas
loop
fcmovu
orb
add
insl
scas
into
inc
mov
sub
icebp
jmp
jmp
adc
add
dec
fdivl
lock
ja
ds
jl
scas
in
repnz
scas
mov
mov
cld
fs
or
push
shlb
sub
repnz
ret
rorl
jo
push
or
sbb
movsl
dec
push
cli
adc
test
or
inc
lea
icebp
nop
adcl
popa
dec
loope
lcall
mov
in
xchg
dec
push
xor
call
jmp
jnp
cmp
xchg
test
clc
inc
std
cmp
add
in
push
repz
in
or
cmpsl
shll
mov
mov
jnp
jno
fadd
icebp
scas
loopne
fcoms
xor
dec
sbb
mov
jecxz
add
push
mov
scas
les
xor
aam
push
punpckhbw
add
xchg
les
jmp
lock
cmp
int3
push
shl
mov
mov
push
mov
sub
dec
mov
pop
out
test
mov
dec
or
into
inc
mov
push
xchg
repz
mov
test
xor
cmp
or
cmc
pusha
mov
das
scas
ds
iret
lods
mov
xlat
dec
sbb
in
adc
arpl
outsb
fsts
inc
ljmp
stc
lock
dec
adc
mov
jne
adc
les
into
mov
sbb
es
jp
sub
orl
js
push
imul
in
imul
loope
ror
rcrl
in
out
pop
sahf
jb
les
hlt
sbb
sbb
cmpsb
jg
add
xor
jp
add
or
push
sub
in
inc
mov
add
lods
dec
test
push
xchg
sarb
pop
scas
cmc
dec
cwtl
rcrl
push
fwait
add
fists
je
jp
fldl
jl
push
es
daa
mov
gs
ja
cli
shr
mov
xchg
xchg
pop
push
in
insl
sub
in
push
ja
dec
test
and
shrl
pop
jnp
stos
dec
cmp
mov
rcl
dec
or
stos
dec
in
push
inc
sub
xchg
jl
shll
dec
pop
pop
fucomip
fs
lret
rcr
mov
push
cmp
loop
or
push
call
xor
das
mov
or
outsl
xor
arpl
jae
jmp
lods
sbb
xchg
test
xor
dec
fcomip
test
gs
sarb
loopne
fmuls
fistpl
cmp
add
lret
push
imul
pop
fs
mov
add
add
sbb
pop
stos
xchg
les
cmp
fwait
xor
cld
and
jae
mov
jmp
mov
roll
pop
or
insl
and
movsb
aam
test
sbb
cli
cli
lds
xchg
mov
stc
push
gs
jns
add
mov
add
decb
ja
lret
pop
lock
loopne
fndisi(8087
int
cmc
inc
adc
add
cld
adc
pushf
arpl
call
jo
mov
and
pop
pop
fstps
jle
push
or
xor
push
cli
mov
dec
pop
sbb
aam
in
mov
push
xchg
in
mov
sub
push
insl
ficomps
jo
out
in
mov
dec
push
popa
enter
dec
inc
scas
jno
daa
or
cmp
orl
push
add
stos
add
mov
mov
or
movsl
or
js
adcb
push
or
inc
xlat
loop
mov
inc
hlt
cmp
cltd
add
lods
adc
mov
dec
cmp
sbb
mov
xchg
sarl
mov
mov
mulb
jo
call
shl
cwtl
push
pop
jmp
decb
stc
push
cmpsl
jecxz
mov
mov
or
jbe
sbb
out
push
mov
sbb
or
es
cld
push
repnz
jmp
xchg
xchg
imul
enter
ret
pop
push
stos
aas
lock
out
inc
mov
adc
out
or
testb
or
nop
and
sarl
push
pop
enter
jnp
lds
enter
in
mulb
and
cmp
addr16
xchg
jmp
jl
fmuls
inc
ret
push
sti
mov
push
cmc
loop
sub
add
jnp
sbbl
xor
shr
aaa
or
repz
rol
out
jle
sarl
int3
and
rolb
xor
or
out
cwtl
dec
in
inc
inc
lret
xor
pop
ficomps
movsl
xchg
in
leave
sbb
in
out
lock
lret
pop
mov
mov
mov
das
jge
std
or
insb
pop
jmp
jle
jnp
lock
addr16
out
add
dec
sub
dec
mov
jnp
shll
clc
or
inc
scas
or
sbb
inc
mov
sbbb
dec
jge
push
ret
call
fucom
mov
mov
adc
lret
ret
inc
pop
repnz
cmpsb
std
cmpsl
sbb
or
std
ja
inc
stos
lret
out
mov
jmp
mov
stos
enter
fs
ss
icebp
cmp
mov
rcll
mov
cmp
std
das
inc
pop
es
scas
push
or
pop
outsl
xchg
int3
daa
movb
dec
adc
dec
xchg
scas
cmp
outsb
mov
cli
sub
sbb
pop
pop
or
dec
les
xchg
lret
dec
xlat
ljmp
rcrb
push
lods
inc
in
stc
mov
pop
fidivs
rcr
jl
adc
jbe
ljmp
rcrb
inc
loop
dec
std
dec
adc
ljmp
cltd
and
add
sbb
add
pop
inc
into
or
loope
mov
cmp
mov
inc
sbb
jnp
fs
stos
mov
push
ja
insl
xor
mov
int3
in
leave
mov
pop
lret
ja
jl
sbb
mov
scas
cmp
repz
int3
fwait
aas
dec
add
stc
rcrb
jge
dec
or
lret
sub
dec
rcr
pop
jb
and
ds
jecxz
ret
leave
out
enter
jne
sbb
out
adc
hlt
or
fadds
xchg
test
call
imul
rorb
rol
sub
shlb
cmp
jle
adc
insb
push
shll
push
jl
inc
shlb
js
inc
jbe
loopne
stos
rclb
sub
popa
jmp
or
sahf
sbbb
aam
mov
push
pop
xchg
xchg
xor
mov
or
adc
mov
xlat
vaddsd
dec
and
xchg
outsl
pop
movsb
xchg
dec
incb
outsb
cmp
or
cmp
shl
mov
or
imul
or
and
jle
push
mov
enter
pop
pushf
cmp
repz
or
ljmp
sbb
iret
adc
mov
ror
jp
mov
add
mov
repz
lods
iret
mov
fistpll
pop
pop
test
dec
pop
pop
inc
mov
mov
mov
inc
out
cltd
and
and
mov
xchg
mov
enter
mov
lock
fadd
rcll
stc
jle
cmp
pop
loop
sti
enter
sti
cmp
jg
not
jo
notb
pop
rcrl
inc
movl
dec
pandn
add
in
dec
jmp
cmp
scas
cltd
sub
inc
inc
clc
lret
adc
iret
push
fs
in
push
pop
lret
jo
dec
outsl
dec
mov
mov
fisttpll
jle
mov
iret
inc
lods
sub
xor
punpcklbw
jnp
in
mov
nop
fmuls
in
lret
pop
lcall
stos
loope
push
movsl
xchg
add
mov
cld
in
dec
mov
faddl
adc
insb
aaa
mov
dec
movzwl
sti
add
and
enter
cmp
dec
push
mov
xor
das
pop
xor
inc
into
mov
dec
scas
ds
ljmp
into
fsubs
add
repnz
test
lret
inc
jnp
xor
lock
jle
scas
cmp
stos
jl
cld
das
stc
mov
cmp
or
mov
mov
mov
hlt
jl
scas
add
roll
or
dec
dec
out
mov
fidivs
xchg
jl
out
repz
mov
add
cmp
icebp
inc
repz
or
jnp
lock
std
or
cmp
xchg
jl
lods
hlt
jl
xor
dec
cmpsl
js
fadds
aaa
xor
shl
or
xor
add
or
out
in
cmp
push
jnp
push
aaa
mov
hlt
mov
clc
jb
cld
cs
decb
cld
clc
sub
out
jmp
idiv
js
jo
test
ds
xchg
std
jo
cmp
scas
arpl
or
or
lcall
jle
cld
or
loopne
pop
mov
icebp
pop
xor
sub
jl
scas
push
idivl
stos
ja
push
mov
leave
ret
lret
inc
or
fst
xchg
or
mov
shll
or
xchg
or
pop
or
xor
fisttpl
cwtl
mov
dec
fisubrl
dec
fcmovne
jmp
lock
jae
les
stos
inc
or
aam
int
in
jb
sti
daa
test
sarl
test
inc
rorb
sbb
fwait
movsb
ret
jb
cld
jmp
cmp
cmpsl
xor
or
sub
pop
jne
ja
xchg
push
jl
jge
mov
fldl
sub
ret
outsl
divl
inc
loop
lock
inc
clc
cld
cmc
or
jl
xor
inc
dec
push
mov
push
mov
cltd
icebp
add
ret
or
jo
push
enter
pop
gs
push
icebp
leave
jmp
jge
push
test
popf
call
add
push
or
fistpll
adc
sub
roll
idivb
cmc
enter
mov
jl
test
in
shrl
mov
push
mov
push
nop
lret
mov
lods
leave
push
iret
aaa
mov
pushl
add
sti
sti
mov
jl
inc
jo
cmpsb
jo
fwait
or
add
repz
inc
mov
movsl
jb
jge
rcr
push
in
icebp
mov
inc
std
or
dec
mov
dec
inc
repnz
aam
pop
iret
mov
repnz
out
fiadds
rolb
or
enter
shl
cld
in
or
aad
std
pop
fsubrp
fldenv
mov
add
mov
pop
mov
inc
sbb
in
or
out
add
jmp
call
or
xor
icebp
add
add
sahf
rorb
mov
push
jmp
out
mov
or
enter
fcmovu
je
add
rol
out
test
test
or
inc
or
adc
or
add
fcomp
mov
mov
and
arpl
ror
sbb
add
rorl
out
je
pop
out
into
dec
fisttpll
fcmove
or
lock
lret
pop
icebp
mov
pop
jo
rcr
fmull
sti
loop
jecxz
add
out
loope
or
xor
add
in
or
xchg
pop
std
pop
or
lret
add
rcrl
into
subl
or
mov
jmp
call
stc
xchg
call
pop
outsl
or
cmp
adc
mov
cmpl
mov
cmp
jl
mov
loope
clc
icebp
dec
or
lock
in
dec
xchg
js
mov
shr
jl
cli
hlt
in
inc
out
incb
in
mov
xor
das
insb
jae
test
mov
push
mov
lods
cli
insl
mov
inc
cmp
cmp
or
or
cld
fidivl
mov
push
int3
stc
push
jl
stc
dec
push
or
push
cmp
push
mov
jge
stc
gs
repz
addr16
xchg
pop
repnz
pop
xchg
loopne
fidivrs
adc
push
repnz
sti
add
xchg
iret
ret
lret
shrl
add
pop
rorb
test
cld
mov
mov
mov
test
cmpsl
nop
aam
enter
lret
sar
ljmp
into
sub
or
in
loope
and
cmpsl
ret
mov
sti
inc
in
cld
popa
jg
outsb
sbb
icebp
jg
roll
mov
xchg
sbb
xchg
cs
insb
repz
aaa
out
add
into
test
lahf
addr16
and
jl
out
mov
ja
sub
incb
inc
fsubrl
mov
xchg
push
jl
repz
jne
fsubl
inc
or
and
mov
out
or
shr
mov
out
fcoml
test
jbe
roll
ret
insl
retw
stc
je
mov
insl
push
test
daa
sbb
fwait
jl
mov
out
in
hlt
test
imul
mov
les
stos
enter
stc
cli
pop
and
stos
incb
mov
add
cld
inc
les
icebp
inc
enter
xchg
pop
in
pop
sar
popa
es
stc
jae
stos
call
pop
or
ja
test
add
mov
inc
insl
ljmp
xlat
mov
add
movsl
insb
push
iret
in
xorb
nop
mov
cmc
insb
xor
ja
sti
adc
pushf
mov
in
hlt
flds
rcll
lret
or
sbb
into
test
dec
mov
in
dec
shrl
or
rclb
or
sub
icebp
lods
xor
add
dec
mov
scas
pop
xchg
pushl
cs
decb
imul
fs
mov
push
mov
mov
mov
repnz
lock
stos
dec
std
mov
lods
stc
adcb
mov
xchg
shl
mov
push
insb
mov
popa
rorl
add
jmp
dec
cmp
jnp
jge
mov
pushf
cmpb
pop
add
idiv
dec
mov
mov
je
es
fldl
popf
call
jge
ja
push
lahf
mov
jl
js
add
push
test
push
test
mov
fcompl
xor
jmp
mov
ffreep
mov
add
loop
mov
jbe
scas
dec
out
call
stos
aam
or
sbb
out
cli
jecxz
and
pop
into
cwtl
pop
cltd
or
adc
or
arpl
incl
fildl
subb
les
mov
or
dec
and
pop
sbb
mov
data16
dec
mov
xchg
sub
xlat
lahf
out
lods
pop
in
sbbb
add
stc
cmpsl
repnz
jl
movl
scas
rcrl
sbbb
jae
mov
aam
ret
popa
dec
push
daa
outsl
call
ljmp
add
lock
test
or
or
in
mov
add
test
lods
cld
incl
rcr
jbe
and
mov
incl
sarb
cld
bound
pop
or
mov
cwtl
push
cmp
add
adc
xchg
scas
cmpsb
sti
pop
adc
addb
fnstenv
popa
pop
fwait
and
aad
fwait
and
addb
mov
decl
add
xlat
jge
sub
add
movsb
sub
pop
lret
fs
mov
jo
shl
imul
pop
sbb
mov
mov
cmp
imul
js
fadd
jne
les
inc
or
fs
loope
mov
jl
cld
fwait
popf
cmpsb
dec
inc
add
je
out
mov
cld
mov
sub
jne
sbb
lock
or
mov
jge
sti
pusha
inc
pop
movl
sbb
pop
sbbl
lret
ret
mov
add
adcb
sbbb
or
sub
xchg
loopne
orl
dec
or
lret
dec
loopne
enter
mov
ret
xor
in
pop
in
je
cmc
lcall
fmul
cltd
dec
ljmp
stos
pushf
or
insl
push
sbb
and
dec
inc
pop
xchg
jecxz
test
push
aad
test
frstor
mov
rolb
push
add
insl
or
test
fbld
enter
push
cmpsb
orb
push
test
sahf
es
pusha
jmp
mov
and
xorb
cmpsb
rorb
pop
sub
and
ja
shr
ret
mov
insb
mov
add
ret
xlat
mov
push
insl
lret
jmp
mov
clc
popa
push
lret
test
add
xchg
and
in
shlb
or
push
or
addb
jge
call
xchg
notb
mov
add
and
cmp
testl
jne
movsb
jmp
lret
int
jle
fidivl
insb
cmc
push
push
cmpsb
add
insb
jae
pushf
hlt
jns
aad
add
pushf
add
test
pop
cmpsb
int
sbb
push
xchg
mov
out
faddp
fdivrs
in
or
mov
lret
repnz
jbe
and
mov
pop
or
add
jmp
cs
add
pop
dec
fildll
mov
mov
add
mov
sti
or
fcompl
jo
scas
movsb
mov
ret
sub
popf
loop
xorb
mov
lret
jl
mov
fwait
movsl
cmp
push
test
inc
dec
idivb
sbb
stos
test
mov
sub
jecxz
es
dec
into
das
cld
pop
and
push
subb
pop
cld
sbb
jl
mov
mov
push
dec
fidivl
jbe
js
in
or
enter
jg
pop
adc
test
ret
loop
fs
jmp
add
inc
jecxz
lock
test
or
rol
or
sub
out
icebp
mov
sarb
or
xchg
xorb
out
or
push
fcmovnu
out
sub
inc
mov
addb
add
add
in
stc
push
add
cmpsb
out
add
pop
mov
pop
movsb
mov
add
ret
adcl
cmp
cmpsl
das
scas
jl
or
sbb
lods
popa
lret
mov
popa
mov
push
sbb
les
jmp
fsub
mov
fistl
dec
mov
into
adc
jno
aas
aam
aad
arpl
lods
dec
jmp
add
out
cli
je
fwait
adc
fisubl
hlt
xchg
mov
xchg
push
jl
inc
mov
push
jmp
movsb
mov
add
in
push
fsubr
push
cld
lods
push
mov
cmpsb
shr
js
enter
jns
les
test
or
jl
or
ljmp
fs
push
test
imul
cmpsl
loopne
mov
jmp
cmp
pop
xchg
ret
jbe
jmp
rcll
cmp
std
adc
mov
repz
out
mov
fwait
mov
addr16
negb
jne
test
sub
aaa
test
sub
sub
push
lahf
imul
sub
rcll
int3
push
cmc
int
bt
repnz
movb
mov
pusha
pushl
lea
jne
adc
cmp
cmp
mov
inc
rcr
sar
sub
cmp
pushf
sub
pusha
lea
sub
stc
jmp
jmp
xor
aaa
into
sub
es
mov
xchg
aam
pop
sbb
sbb
xor
xor
sub
ss
pop
sbb
cli
dec
out
dec
aad
ja
sbb
cmp
push
in
mov
cmp
call
stos
lret
dec
sub
push
mov
pop
add
sbb
in
repz
sbb
adc
lods
into
sbb
outsl
pop
sbb
cmpb
das
mov
das
shlb
xlat
sub
loop
les
inc
lods
sub
adc
and
lea
or
jl
aam
jno
xor
sbb
ret
inc
sub
sbb
pop
les
loope
test
and
pop
cmc
cmp
inc
cmp
xchg
scas
popf
ud0
jg
push
and
stc
mov
xchg
sub
pop
call
cmp
aad
dec
mov
in
shrl
dec
shll
xchg
adc
pop
mov
insb
sarb
xchg
mov
mov
mov
add
lods
stos
mov
inc
js
inc
sbb
jo
frstors
add
popa
push
mov
adc
add
repz
dec
mov
add
addr16
cmp
fldl
ds
push
or
mov
data16
jecxz
cmpsl
popa
xchg
aas
jae
pop
and
out
mov
rolb
dec
loop
jmp
repnz
call
or
cmpsl
dec
scas
subb
inc
int
in
in
out
adc
sbb
or
or
adc
sub
stos
xchg
cwtl
sub
daa
subl
in
pop
loopne
addr16
mov
push
xchg
orb
lds
sbb
out
clc
lcall
movsb
bound
dec
jns
xchg
int3
push
ret
adc
sub
lods
or
bound
ja
arpl
je
push
jne
cwtl
mov
mov
xorb
fcmovu
and
int3
outsl
movsl
hlt
iret
jl
es
ss
xchg
lods
cmp
xor
xchg
bound
dec
notl
push
in
jmp
dec
dec
xorb
lcall
xchg
rolb
add
xor
add
pusha
call
mov
out
pop
cmp
xor
xor
cmp
xor
push
inc
jno
mov
xlat
dec
ljmp
testl
cwtl
ljmp
sub
pop
pop
rol
ficoml
or
xor
adc
sbb
push
ss
stos
std
lahf
mov
js
sub
sbb
jl
in
jb
movsl
xchg
iret
je
out
js
lods
pop
shlb
int3
insb
fldt
pusha
lahf
sbb
imulb
add
lahf
cmp
pop
stc
andb
test
insb
xchg
imul
xchg
fdivr
or
cmpb
jo
and
lcall
push
sbbl
xchg
imul
push
lahf
test
mov
jo
sub
shlb
xorl
icebp
inc
clc
dec
ljmp
dec
imul
sub
fucompp
xchg
add
cmpsb
adc
pop
and
cmp
sub
xor
cmp
cmp
cmp
jns
jo
test
ds
adcb
or
mov
test
sbb
mov
repnz
mov
mov
cld
dec
pop
inc
sub
out
xor
add
sub
mov
mov
sub
lea
jge
xor
mov
pusha
add
jmp
cmp
shlb
push
mov
lods
push
scas
dec
mov
dec
insb
mov
test
xlat
xchg
xchg
popa
ret
mov
jno
push
insb
sbb
mov
jp
ljmp
cli
or
jo
hlt
lea
push
pop
and
xchg
mov
pop
jg
fisubrs
int
mov
xchg
mov
push
cltd
jne
mov
mov
adc
push
imul
pop
stc
xchg
dec
repz
xchg
test
int
das
sbb
or
inc
nop
push
cld
sub
inc
data16
inc
not
pushf
pushf
inc
setno
shl
xchg
aas
mov
cmc
sub
mov
pusha
pushf
sub
jle
test
push
bsf
mov
push
call
repz
push
cwtl
outsb
test
mov
mov
rorb
sbb
inc
xorl
dec
test
icebp
int3
push
jge
or
adc
test
dec
dec
xor
sub
xchg
xor
mov
mov
pop
push
pushf
out
stos
je
test
dec
mov
out
xor
shr
sarb
push
cmp
lds
push
push
mov
aas
lds
cmp
dec
aad
dec
jg
pusha
fisubs
push
js
jae
or
gs
jmp
inc
idivb
mov
sarl
xchg
pushf
incb
and
lahf
mov
xor
scas
cmp
adc
aaa
insl
test
insl
cltd
data16
insb
fbld
add
mov
addr16
xor
xchg
addb
rcr
movsb
sarb
mov
ret
pop
shll
dec
shl
cmpsb
sbb
das
jecxz
popf
dec
sub
lea
rcr
cmpsb
or
imul
mov
mov
dec
ja
push
sbb
mov
std
jmp
inc
inc
push
cmp
adc
sbb
outsb
or
jnp
mov
xor
cs
xor
sub
aad
in
push
jno
shr
sbb
add
out
adc
sbb
or
sbb
adc
sbb
push
std
fsub
pusha
repnz
mov
jae
sbb
mov
jns
movsl
movsb
imul
out
call
hlt
xlat
cltd
xlat
stos
cmp
stc
ror
add
sub
sub
lods
mov
push
adc
out
mov
push
sub
xor
dec
inc
jnp
adc
or
sub
scas
mov
cmpb
and
cmp
lock
jl
jmp
loop
lret
ds
int3
cmp
sub
xor
daa
repz
dec
jb
xchg
adc
add
jmp
dec
test
test
dec
jno
xchg
and
xor
cwtl
insl
mov
aad
cwtl
sub
push
popf
pop
dec
dec
or
dec
imul
jecxz
cmp
das
or
scas
sbb
cmc
fcoms
int
cmc
clc
adc
popaw
or
xor
inc
negb
cli
inc
dec
inc
cmp
and
shll
mov
out
mov
popf
sub
add
sbb
icebp
pushf
lea
jne
push
pushf
push
jmp
pushl
lea
je
cmc
xadd
shld
sub
shld
bt
aaa
mov
das
mov
inc
shl
sar
shr
rcl
mov
jmp
push
mov
movl
clc
clc
ror
pusha
not
pushf
call
shll
sbb
out
sarl
and
daa
fnsave
into
shll
les
sbb
ds
dec
stos
bnd
mov
inc
cwtl
jmp
je
fldl
lea
mov
leave
add
loopne
jno
mov
dec
das
test
pop
in
cmp
mov
jne
lock
dec
ret
rolb
add
sub
xchg
jecxz
repnz
jecxz
out
stc
inc
lock
pop
es
add
sbb
out
inc
mov
dec
mov
mov
stos
push
stos
add
xor
xor
push
sbb
or
mov
and
das
dec
mov
lds
lods
cmpb
mov
scas
fucom
mov
sarl
inc
or
cli
lret
mov
sbb
jne
or
xchg
mov
push
movsl
clc
sub
inc
sahf
xchg
std
push
stc
sarl
shrb
fidivrl
push
mov
mov
leave
mov
sub
test
cli
lcall
push
test
ds
jb
imul
mov
aaa
push
push
push
add
pop
lds
and
mov
lods
movsb
roll
test
fsts
push
push
loopne
test
xchg
mov
push
movsl
jmp
negl
in
in
insl
popf
xor
data16
out
out
aam
push
pop
or
dec
fstl
mov
fists
xchg
sbb
jb
in
hlt
inc
in
push
cmc
dec
notl
xor
pop
rorb
and
adc
out
test
jo
popa
xchg
xor
push
rorb
inc
outsl
loop
push
jmp
adc
and
mov
push
scas
push
jo
xor
or
pop
mov
or
inc
es
adc
das
aam
xor
jecxz
iret
insl
push
pop
and
cmpl
test
push
arpl
ret
mov
mov
inc
cmp
inc
mov
cmc
cli
fwait
rorl
adcl
jb
ret
out
and
pop
out
fisubrl
aam
outsb
int3
popa
fimuls
jg
jl
hlt
mov
inc
mov
inc
mov
pop
mov
rorl
jno
add
cmp
xchg
stc
mov
push
mov
test
jl
popa
out
lds
pop
xor
shlb
sub
xor
dec
cmp
cmp
push
test
shll
sub
ret
iret
mov
or
rorl
mov
ret
sub
mov
and
mov
inc
sbb
outsl
mov
test
pop
les
cmp
adc
xorl
dec
push
call
inc
add
sub
lock
fs
jne
push
mov
cwtl
mov
movl
movb
lea
jmp
xor
cmp
sub
into
cmp
xor
and
repz
adc
push
jae
in
fildl
jg
aad
adc
mov
scas
dec
jbe
pop
repz
dec
mov
and
push
mov
int
pushf
fwait
sub
jnp
js
and
mov
adc
imul
in
push
cmp
std
push
lds
dec
inc
inc
jbe
cmp
out
loopne
cld
mov
or
sbb
fwait
in
add
shll
aam
aam
fisubrs
lock
cltd
cmc
std
andb
mov
jmp
out
cltd
loopne
enter
sarl
es
and
or
xlat
inc
mov
push
add
jae
lods
push
mov
pop
in
negb
pop
jg
adc
outsb
int3
es
jne
xchg
lahf
jp
xchg
dec
dec
xchg
adc
add
jge
std
repnz
xor
mulb
cld
cmp
das
sbb
adc
imul
outsb
cmpsb
jecxz
lret
xor
sub
cmp
cmp
int
orb
xor
jae
pusha
call
data16
add
mov
jbe
fs
adc
mov
shlb
pop
cmpsl
xor
repnz
push
lock
dec
mov
loopne
xchg
inc
or
cmpl
xor
add
fs
imul
add
out
jns
cmc
adc
pmaddwd
out
adc
adc
adc
loopne
test
cs
iret
call
xchg
int
cmp
adc
push
sbb
stos
dec
fcmovnu
pop
movsb
stc
sbb
pop
sbb
cwtl
mov
pop
xchg
mov
es
clts
pushl
adc
test
xchg
icebp
clc
popf
es
jl
gs
rcr
imul
or
arpl
push
icebp
pop
in
out
lock
in
xor
inc
gs
inc
jnp
bound
cmpsb
into
xor
cmp
and
aas
fsubl
xor
mov
cld
mov
sarb
cmp
xlat
sub
insl
adcb
mov
inc
scas
adc
mov
insb
scas
push
nop
sbbb
int
push
jno
push
out
int3
loope
jecxz
out
out
fwait
pop
cmp
mov
mov
xor
sbb
dec
fsubs
imul
addr16
cmpxchg
or
insl
dec
out
jp
inc
int
or
outsb
xchg
jo
arpl
imul
shl
rorl
cld
mov
imul
or
es
lods
and
mov
rcrl
xor
es
dec
inc
jl
je
fwait
pushf
ja
sbb
sub
int
mov
dec
pop
cmp
std
frstor
cld
lcall
mov
add
pop
pop
repz
xchg
in
bound
clc
sarl
arpl
jae
jns
insl
enter
xchg
adc
xchg
mov
pop
push
or
gs
fs
imul
mov
mov
mov
mov
in
push
fisubrs
or
fs
in
jmp
or
adc
sbb
es
xor
out
in
sbb
xchg
jb
stc
pop
cld
dec
ljmp
sbb
push
inc
and
and
push
and
pushl
lea
jmp
enter
mov
les
lret
and
xor
cmc
dec
jo
mov
cs
dec
mov
push
cmp
xor
mov
outsl
mov
mov
mov
adcl
fcompl
push
mov
hlt
lret
push
psubsw
es
mov
fdivl
or
aad
mov
fnstcw
mov
xchg
out
pop
std
pop
notb
push
icebp
push
cli
int
xchg
jp,pt
enter
cmp
push
cmc
add
scas
or
push
mov
pop
cmp
dec
movsl
fldl
in
adc
jp
pushf
mov
jns
bound
iret
inc
adc
cmp
ja
pop
jns
arpl
sbb
push
ret
data16
pusha
pop
cmp
scas
push
push
jge
sbb
enter
lcall
sahf
scas
nop
stos
rorb
mov
xchg
pop
xor
out
aaa
sub
adc
push
xor
sub
push
iret
cld
cmp
xor
inc
push
dec
inc
dec
xor
cs
dec
dec
add
or
fcmovb
xchg
and
add
jne
dec
adc
out
adc
push
out
notl
pop
in
rcrb
movsb
orl
push
mov
vmovlps
clc
xor
adc
mov
lods
gs
or
inc
push
and
sub
sbb
sbb
inc
xchg
das
add
stos
enter
adc
adc
popa
std
mov
xor
out
jns
in
add
ljmp
loop
cwtl
nop
out
inc
jmp
shll
fidivs
pop
aam
out
cli
test
cld
mov
lods
lret
dec
lds
nop
negb
out
out
cwtl
dec
lret
cmpsb
ss
inc
lret
out
or
jno
into
mov
pushf
xor
mov
fabs
notb
icebp
pushf
aaa
push
push
rorb
sbb
inc
lock
out
inc
in
sti
dec
decb
sbb
pusha
pop
adc
sti
cltd
gs
push
ja
jns
mov
mov
or
pop
adcl
int
xor
add
pop
fbld
cmp
xorb
out
div
or
mov
cmp
dec
je
sbb
jg
mov
stos
int3
and
mov
outsl
lret
pusha
fstpt
ja
popa
shrl
cltd
aam
fsubs
fsubrp
inc
inc
fwait
xlat
xchg
or
out
push
xor
sub
cmp
jle
add
xor
test
sbb
xchg
jae
jne
jnp
jl
test
pop
adc
adc
mov
mov
rorb
in
aad
mov
nop
int
sub
loopne
imul
adc
jge
roll
and
inc
pop
and
outsb
xchg
popa
push
sub
mov
stos
jge
xchg
push
sbb
cli
out
sub
sub
push
out
dec
testl
sub
lock
jg
lea
call
pusha
mov
push
pushf
mov
movb
lea
jmp
jmp
movl
mov
pushf
pusha
lea
jmp
mov
psubusw
dec
sub
sub
sub
sub
sub
sub
das
push
and
lahf
mov
xchg
xchg
cmp
mov
pop
lds
divl
push
mov
leave
dec
dec
sbb
rcll
mov
cs
xchg
scas
jbe,pn
rol
jmp
inc
sbb
dec
testb
decl
dec
clc
inc
out
xor
xor
scas
xor
jl
psubusw
frstor
fdivrs
lds
dec
sub
adc
dec
lock
push
fidivrs
lods
dec
js
lea
jno
and
add
mov
adc
sbbb
mov
cmp
in
sarb
std
lahf
lea
dec
sub
cmp
push
xor
or
add
cmpsl
jmp
movb
movzbw
movsbw
movzbw
mov
pushf
mov
movsbw
lea
pushf
call
pusha
pushf
pushl
inc
pushf
push
lea
call
push
pushl
call
jecxz
inc
push
and
adc
push
sub
or
dec
and
mov
lods
rcrl
shrl
sarl
sub
sub
mov
test
pop
mov
pop
add
fisubl
test
enter
push
scas
pop
mov
inc
mov
cmp
cmp
mov
sti
sbb
push
sbb
mov
mov
jo
vcvtsi2ssl
das
inc
sbb
imul
sbb
sbb
ret
inc
movsl
pop
adc
rorl
push
icebp
lock
sub
daa
adc
outsb
lds
inc
jecxz
sti
push
or
pusha
pop
cmpsl
and
adc
sbb
insb
jno
into
aaa
or
and
adc
and
adc
ds
mov
movl
pushl
push
lea
jmp
test
sub
jmp
jmp
jmp
call
clc
pop
or
out
sbb
push
jecxz
jmp
or
or
jae
test
mov
or
andl
icebp
push
lds
pop
cmp
or
adc
xor
in
int3
rorl
cmp
adc
sarb
inc
inc
xchg
inc
arpl
test
clc
jne
popf
mov
insb
sbb
in
pushf
call
out
pop
mov
dec
jecxz
jo
incb
push
notl
inc
lock
push
xchg
gs
dec
out
mov
incl
call
dec
nop
stc
or
out
cmp
push
mov
push
test
cld
mov
stos
aaa
mov
sahf
repz
cli
int3
xchg
sub
xor
inc
push
inc
mov
ss
sbb
test
fst
mov
xor
in
iret
lods
test
pop
push
xor
mov
fs
dec
fsubl
or
daa
ret
in
pop
stc
pop
lock
jmp
sbb
repz
inc
arpl
leave
jmp
ret
cmp
aam
shll
xor
ss
adc
jl
dec
xorb
cli
adc
dec
mov
je
out
test
or
jns
mov
adc
mov
mov
xor
out
in
lods
das
les
dec
mov
ljmp
inc
je
aam
cmpsb
lret
add
dec
adc
push
fs
mov
adc
scas
test
jg
jecxz
and
movl
jmp
test
mov
dec
sub
shlb
and
push
int
mov
outsb
sbb
xchg
cmpsl
mov
cs
sbb
inc
sub
or
or
aaa
in
fisubs
subb
add
pop
int3
push
or
movsl
xchg
push
bound
repz
mov
xorb
mov
push
ljmp
mov
mov
leave
rdpmc
push
or
sti
push
inc
xorb
pushf
and
das
xchg
push
mov
nop
and
dec
jno
push
ds
sbb
fdivrs
push
mov
cmpsb
inc
lods
dec
mov
cmp
dec
mov
nop
daa
push
mov
jl
cmc
or
and
cmp
dec
filds
gs
fbld
jp
pushf
xor
pop
daa
push
mov
add
and
out
inc
sbb
fmul
mov
daa
popa
push
aad
icebp
sar
loopne
cltd
aad
xor
repz
fisubs
and
sub
dec
rcrl
scas
push
test
cs
mov
jne
jg
out
mov
jl
fstp
mov
adc
jmp
outsl
lcall
sti
clc
dec
sbb
es
int3
push
jo
add
xor
data16
push
xor
sub
mov
fs
dec
sub
sahf
cmc
in
repz
dec
test
xor
and
xchg
cmpsl
ljmp
mov
add
mov
push
pusha
pushf
lea
jmp
sbb
or
out
fdivrl
pop
mov
pop
mov
add
out
or
push
ficoml
sbb
and
mov
mov
lds
mov
push
out
pop
jae
cs
add
sti
push
adc
xchg
pop
int
jbe
es
es
mov
es
mov
aam
push
cmp
cmp
imul
rcr
ret
xor
xchg
jo
inc
dec
shrb
int3
imul
jbe
or
js
cmc
jge
pop
roll
xorb
xchg
jae
jo
outsl
xchg
lea
sbb
shlb
inc
xor
outsl
or
int3
or
es
jge
or
mov
int3
inc
or
shrl
ror
sub
push
pop
imul
scas
xchg
or
jg
int3
scas
cwtl
xchg
in
pop
hlt
leave
and
and
pop
add
sbbb
push
test
or
push
nop
punpckhwd
or
mov
and
sub
fdivrl
shlb
fisttpl
in
push
mov
pop
and
adc
add
dec
mov
add
or
rol
mov
xchg
pusha
xchg
pop
test
sbbl
dec
data16
sbb
sub
call
mov
ja
arpl
orl
jg
jg
sbb
jl
mov
mov
mov
sbb
adc
mov
clc
clc
test
call
ret
add
out
out
adc
pop
jmp
adc
dec
repnz
lcall
adc
clc
or
loope
repnz
pop
sbb
push
sahf
or
fdiv
xor
push
cmp
push
daa
xchg
cmp
sbb
jl
gs
clc
mov
inc
ds
push
cmpsl
mov
ret
adc
enter
sbb
mov
mov
mov
leave
pop
xor
dec
push
cmp
out
int
cli
push
loop
jge
jle
jns
fsubl
jns
or
movsl
pushf
cmp
movl
call
lods
push
xchg
pop
mov
dec
mov
mov
movsb
pop
mov
mov
xchg
inc
mov
sub
jnp
out
push
push
fwait
sbb
lea
xchg
das
popa
out
ret
lea
lock
pop
lds
sti
lcall
daa
mov
mov
imull
xlat
pop
dec
mov
enter
rcrl
or
in
lcall
and
je
loope
mov
adc
adc
mov
add
add
loop
inc
add
adc
and
sbbl
add
push
movb
pusha
movw
lea
jmp
clc
mov
btr
push
and
and
bsr
mov
movsbw
clc
push
or
shrd
bts
push
btr
dec
movzbw
or
push
dec
bswap
sbb
test
push
setle
push
setae
clc
rol
mov
inc
shl
inc
shld
mov
setno
sbb
bt
pusha
mov
cmc
or
pusha
call
cld
push
fiadds
sbb
cwtl
js
jb
jp
je
arpl
sbb
in
in
mov
or
stc
out
push
fsubl
fs
out
pop
cmp
sub
or
out
push
xchg
dec
push
mov
mov
bound
sbb
mov
je
sbb
ss
cmp
xor
jl
lret
mov
mov
jne
popl
bswap
bswap
pusha
bswap
mov
not
movl
call
inc
push
dec
push
arpl
gs
jp
outsl
sahf
imul
pop
push
or
mov
cltd
in
mov
out
push
push
xchg
in
jp
adc
sarb
les
aad
ja
push
outsl
inc
subl
jne
mov
cmp
dec
movsl
cmpl
xor
in
dec
inc
cwtl
fwait
loopne
jp
push
push
mov
lea
jmp
lea
jae
call
and
mov
dec
mov
test
mov
pop
and
or
ja
popf
sbb
pop
mov
cmp
mov
push
cltd
dec
push
mov
dec
sbb
mov
sub
jo
dec
mov
sub
and
sbb
adc
jecxz
xor
cmp
inc
mov
pop
or
lock
imul
jp
lods
adc
je
jbe
je
in
jmp
lret
ja
icebp
adc
push
out
jmp
adc
out
jmp
mov
push
xor
and
das
test
sub
subl
and
aam
in
or
mov
cli
add
xor
leave
and
mov
fs
pop
outsl
xor
in
jle
dec
loop
ljmp
outsb
clc
scas
js
sub
pop
jno
sbb
bnd
fs
imul
ret
jae
arpl
stos
adc
or
jle
mov
pushf
pushf
jmp
sbb
out
out
andb
xchg
push
xchg
mov
cmp
stc
fsub
lods
or
sbb
loop
ss
jmp
packuswb
jmp
shrb
fsubs
stos
lods
das
or
roll
xor
add
lret
stos
and
in
sti
sub
cmp
cwtl
cs
inc
hlt
std
repnz
ss
fcomps
pop
cmp
adc
sarl
in
push
fisubl
jo
cmc
xchg
ljmp
add
out
push
sub
and
das
lret
aaa
shrb
inc
loopne
jmp
je
inc
aaa
aas
pop
pop
in
lock
xchg
xchg
push
pop
push
cmp
adc
cmp
rcrl
xlat
je
addr16
pop
arpl
push
xchg
dec
insl
rorb
dec
or
jl
mov
stos
mov
sbb
mov
cld
imul
jg
std
into
mov
push
int
mov
andb
sbb
add
popf
clc
outsl
add
lret
int3
jp
in
dec
jl
jmp
sahf
movsl
or
inc
add
rcl
rcl
xor
xchg
adc
movzbw
or
sbb
mov
or
push
mov
lea
jmp
dec
clc
jno
pop
mov
adc
insl
sar
dec
push
cld
mov
movsl
fisttpll
fldcw
add
incb
stc
adc
adc
aas
mov
xchg
mov
sub
inc
stc
sahf
pop
add
sub
mov
pushf
lea
call
push
jmp
pop
rolb
adc
sahf
data16
jae
outsl
xchg
je
push
test
lea
cmp
sub
xchg
adc
mov
cmp
sti
mov
shlb
pop
add
ret
test
sbb
call
iret
dec
mov
mov
and
sub
fnsave
ljmp
es
and
sub
lret
pop
or
jmp
int3
pop
mov
clc
cmc
ror
jmp
dec
or
add
out
icebp
push
loop
repnz
or
sbb
imul
mov
int
and
mov
add
imul
shr
and
xorb
sub
xchg
popf
lret
sub
lods
mov
xchg
jns
mov
fmul
xor
movsb
dec
jnp
insb
fsubrl
leave
ja
sbb
jno
ljmp
bt
add
jmp
clc
pushl
call
xchg
not
call
sub
mov
mov
lods
pop
cmpsl
pop
lods
dec
mov
mov
lods
jmp
add
push
mov
dec
sbb
inc
push
pop
cmp
sbb
inc
rcrb
mov
sahf
call
sub
in
mul
jg
inc
sbb
push
subps
rol
gs
out
out
popa
or
jo
lock
addr16
mov
movsb
sbb
ffree
mov
aam
jbe
rorb
pushl
ret
inc
push
inc
push
pusha
movb
lea
jmp
pushf
movl
jmp
ljmp
inc
mov
mov
inc
mov
roll
mov
lret
lahf
mov
mov
cmp
sbb
push
xchg
clc
xchg
das
repz
lret
xchg
xchg
pop
jb
stos
loop
enter
das
es
jb
or
sarb
aaa
xchg
fsave
int
pop
loop
out
dec
cmc
push
sti
pop
loop
mov
cmp
fmulp
mov
push
adc
shlb
cmp
lds
lret
mov
jae
mov
imul
or
in
inc
daa
aad
lahf
js
xlat
cmc
repnz
es
push
dec
push
mov
dec
fisubs
in
inc
push
pop
repnz
loopne
ss
inc
les
loopne
movsb
scas
leave
test
xchg
loop
xor
mov
mov
je
mov
mov
add
jno
rcrb
lods
cmc
jmp
negb
and
pop
mov
mov
adc
mov
shlb
movsb
mov
in
in
sti
sbb
xchg
movsl
jg
mov
int3
test
sub
arpl
int3
je
cmp
push
pop
push
sub
xchg
mov
add
push
negl
add
inc
dec
pop
cmp
std
lcall
popa
or
xchg
add
xor
out
outsl
adc
sub
jno
lahf
popa
inc
loopne
in
inc
sti
dec
clc
dec
in
mov
cmp
lcall
push
jl
lds
aas
scas
shrl
leave
ds
sub
xor
cs
repnz
jno
or
add
jae
inc
shrb
dec
daa
adc
cld
add
aam
fsubs
imul
cmpsb
ret
inc
cmp
roll
add
jge
movsl
mov
mov
sub
ds
xchg
stos
cwtl
mov
pop
movsb
push
mov
mov
mov
mov
aad
add
push
cmp
add
pop
arpl
pusha
xchg
jbe
push
in
and
daa
dec
in
xchg
jl
data16
sbb
fisttpll
aas
test
xor
mov
or
jge
or
out
sbb
xorb
cltd
cmp
pop
hlt
faddp
lods
push
dec
dec
movsl
fstl
shll
mov
pop
cmp
cmp
xor
cmp
push
das
sahf
mov
pop
or
imul
out
shr
xchg
mov
inc
jo
adc
dec
mov
xchg
inc
mov
mov
movsl
inc
mov
mov
pop
and
jle
stc
push
sub
xor
jl
cld
out
repz
dec
pop
and
and
movsl
ret
jb
xchg
push
es
and
xor
movsl
call
mov
push
fistpll
sbb
jge
subl
pop
or
and
daa
pushf
mov
and
outsl
cmp
call
out
add
movq
aas
aaa
dec
inc
out
sbb
jecxz
mov
adc
xchg
inc
in
xor
inc
mov
nop
and
clc
je
push
stos
jl
add
adc
bound
loope
and
xor
enter
mov
xchg
sub
es
mov
bt
push
mov
call
mov
pushf
movb
call
add
push
push
dec
outsl
je
data16
arpl
inc
add
out
jns
in
sbb
adc
sbb
add
add
pop
and
cmpsb
std
test
pop
push
mov
pop
push
push
fbstp
pop
fldl
mov
cli
pop
and
and
or
cltd
push
js
in
sub
rcll
mov
inc
outsl
dec
ret
push
ja
hlt
aad
mov
mov
shlb
sub
pop
jg
pushf
scas
adc
sbb
insl
imul
or
cmp
out
iret
scas
push
mov
pop
mov
mov
adc
jo
clc
cmpsl
adc
stc
icebp
xchg
imul
adc
aaa
sbb
std
mov
cli
lea
adc
mov
fimull
lahf
push
and
in
xchg
or
test
aad
and
xor
xchg
aas
int
or
scas
jo
mov
adc
ss
cmp
and
add
out
jb
out
jmp
inc
ljmp
jnp
insb
dec
cli
in
mov
xchg
cmp
out
push
aaa
ret
aaa
lret
xor
sarl
add
andl
out
inc
sub
xor
clc
ljmp
lods
ja
mov
shl
adc
xchg
mov
xchg
imul
mov
ss
jecxz
lahf
mov
jmp
int
sub
dec
sub
add
bound
sbb
or
daa
fucomp
pop
out
pop
out
in
stc
inc
jecxz
sub
pop
loopne
pop
and
mov
cmp
out
lahf
in
loop
clc
adc
add
pop
in
add
int
sub
pop
mov
sbb
jnp
cs
test
push
mov
xor
adc
sub
ret
xchg
inc
mov
mov
push
dec
mov
sarl
sti
push
lret
in
lods
ds
in
rcr
mov
fwait
rcrb
and
scas
int
sub
push
cmc
push
in
dec
clc
dec
cli
mov
xchg
mov
mov
popl
cmc
cmp
pushl
lea
ja
cmc
sub
bsr
call
movl
pushl
movb
movl
pusha
pushf
push
lea
jmp
or
out
xchg
insl
mov
jge
arpl
cmp
mov
pop
hlt
and
dec
mov
sahf
fs
bound
and
push
add
push
inc
push
jbe
jbe
push
shrl
shll
repnz
ret
xlat
mov
je
inc
sub
ficompl
cmp
ret
in
dec
out
push
repnz
testb
xchg
inc
sub
adc
imul
stc
pusha
pushl
lea
movzbw
pushl
mov
pushf
lea
call
push
mov
call
jmp
out
out
adc
sbb
push
inc
jg
or
repz
cmc
xchg
adc
call
or
sbb
xlat
lock
jl
lds
pop
push
cmp
dec
call
xor
dec
aam
push
cmp
inc
mov
adc
cwtl
mov
nop
stc
and
jp
mov
insb
ja
cmp
lret
xor
dec
scas
mov
ret
jecxz
sub
mov
mov
fildl
sbb
jp
fisubl
push
movsl
xchg
repnz
lock
jle
inc
add
out
insb
xchg
arpl
cltd
jge
js
and
xor
push
lods
xchg
pop
imul
cmp
sbb
inc
pop
out
cmp
aad
cmpl
imul
adc
out
sbb
ret
sbb
jge
xchg
push
adc
jno
cltd
outsb
inc
sti
pop
in
jmp
loop
loope
jmp
inc
jns
sub
and
jne
pushf
mov
pusha
mov
jmp
xlat
xchg
shlb
out
push
je
jle
jle
jnp
push
dec
testl
hlt
enter
cs
sarl
insb
mov
pop
cmp
dec
movsl
dec
stos
jbe
insl
ljmp
sbb
push
xchg
dec
inc
je
cld
add
dec
ret
hlt
cmp
cli
mov
jnp
cmc
jne
std
inc
loop
stc
pop
ljmp
pop
adc
jno
pushl
sub
mov
call
call
pushf
pusha
add
push
pushf
lea
jmp
lods
cmc
mov
cwtl
push
xchg
fs
addr16
ja
outsl
inc
das
mov
mov
int3
dec
adc
or
sar
xlat
mov
pop
test
fdivl
out
out
xlat
add
mov
insb
or
pop
mov
pop
pop
jge
jno
mov
pop
inc
mov
fsubl
add
movl
scas
movsl
ret
cmpsb
movsb
cmpb
jbe
cmp
push
sub
push
icebp
dec
cmc
push
lock
lock
push
fistl
pop
pop
adc
mov
push
ljmp
add
sbb
sbb
movsb
mov
sub
mov
pop
cmc
mov
fwait
into
je
jg
ja
pusha
in
xchg
add
testl
pop
ds
dec
ljmp
jae
push
shll
adcl
dec
pop
cmp
ss
ja
inc
and
pop
lahf
jp
notl
sbb
leave
imul
inc
and
push
cld
pop
clc
pop
out
inc
and
in
mov
loope
leave
das
ret
daa
sarl
lret
and
xor
jl
ja
and
test
adc
aas
sbb
ds
mov
test
jge
dec
adc
ja
and
push
mov
xor
fwait
mov
jl
push
or
add
out
stos
pushf
sub
out
notb
cmp
cmp
sbb
stos
lret
push
xor
push
negl
dec
lock
stc
inc
outsb
sbb
xlat
out
dec
push
movl
call
rol
cmp
cmp
lea
lea
cwtl
lea
pop
setl
movzbl
cwtl
mov
pushf
call
pusha
pusha
lea
jne
pushf
mov
movb
lea
jmp
andl
imul
push
in
cli
sbb
add
add
bsf
fldt
rorl
mov
cmp
mov
push
outsb
adc
lds
push
or
stc
fcmovnbe
in
push
dec
xor
enter
out
xchg
jns
dec
and
push
inc
and
jb
xor
fisubrs
mov
mov
popf
cmp
xor
cmp
aas
fnstcw
int
leave
loop
jl
clc
or
pop
pop
shrb
jne
fdivrl
xchg
mov
stos
repnz
push
lcall
jmp
mull
std
fdivp
jg
movsb
sahf
cmpsb
sarl
inc
imul
lods
cmp
andb
xchg
xor
das
out
lods
jl
je
mov
xorb
out
inc
daa
xlat
es
xor
and
and
sbb
into
jno
cwtl
pop
jmp
inc
mov
inc
mov
stos
mov
out
ret
push
test
sub
dec
xchg
cld
movsl
aad
pop
cmp
or
iret
mov
addl
mov
xor
mov
imul
or
xor
out
shlb
lahf
xchg
repz
cmp
xchg
es
jle
icebp
xchg
jp
popa
nop
ja
insb
nop
jl
dec
test
cmp
sub
movsl
inc
add
push
mov
dec
loope
gs
and
jle
cli
push
cs
push
mov
inc
pop
and
lret
xchg
icebp
sub
mov
add
push
test
cmp
pop
jae
rorb
je
add
aas
test
xchg
scas
dec
stos
pop
mov
mov
inc
movsl
popf
cmp
jmp
js
outsb
andb
icebp
mov
scas
lret
adc
mov
sub
or
mov
jb
lock
push
xor
lahf
insb
jp
adc
movsl
fistpll
in
pushl
aas
fsubrp
fidivl
jecxz
xchg
pop
or
and
xchg
mov
test
out
leave
mov
inc
mov
xchg
sub
push
ljmp
test
lahf
add
mov
fs
jg
mov
jge
mov
les
cltd
data16
insl
sbb
dec
hlt
cmc
mov
popf
and
fdivs
rep
xor
test
in
ja
pop
int
iret
int
push
ret
les
bound
push
add
pop
push
sub
mov
pop
mov
jb
adc
sti
xchg
cli
add
lea
loopne
call
dec
in
push
out
adc
push
sub
movsb
testb
in
in
sbb
adc
adc
pop
out
sti
add
inc
loope
push
dec
adc
add
cmp
fsubrs
test
shrb
lea
fisubs
sbb
iret
cmp
push
ljmp
daa
mov
les
and
out
in
cli
pop
loopne
pop
ljmp
es
inc
sbb
mov
add
add
or
call
dec
lret
inc
movsl
fnsave
push
fs
lock
adc
jl
pop
movsl
pop
mov
stos
dec
stos
pop
jae
fidivrs
jae
mov
stos
sbb
cmpsb
sarl
and
cli
dec
ljmp
subl
fbstp
cmpsl
xchg
push
data16
sti
out
push
or
sub
or
jbe
sti
dec
ja
sbb
fldcw
outsb
fisubrs
pop
sub
test
dec
xchg
hlt
insb
add
imul
or
pop
insl
int3
pop
and
repnz
xchg
and
push
mov
cmc
fisubrs
jp
shl
push
ja
mov
popf
xchg
test
and
fdivrs
fistpll
jp
insb
shl
xchg
nop
sti
xor
add
push
and
mov
pusha
call
lea
jne
pushf
inc
movb
jmp
movb
pushf
lea
ja
stc
jmp
jae
pop
sub
adc
add
or
or
add
push
repz
sbb
pop
pop
pop
sub
jecxz
adc
mov
jno
test
out
lock
adc
shrb
push
std
stos
outsl
mov
push
in
xchg
pop
insl
scas
ror
mov
int3
mov
dec
cmp
test
sbb
mov
jne
add
aas
and
cmp
dec
enter
movsl
fxam
ljmp
lock
mov
divl
add
cmp
sub
movsb
add
or
or
push
jge
sub
xor
scas
lods
les
add
push
cli
or
or
add
push
loopne
cmp
sbb
in
dec
das
fcoms
jns
hlt
aad
outsb
fwait
mov
xchg
fimuls
call
rorb
test
dec
test
test
iret
pop
pop
inc
mov
sbb
inc
jmp
mov
add
loop
enter
mov
int
push
rcrl
into
out
pop
pop
mov
sub
out
and
fldcw
and
sbb
lcall
fsubl
sub
pop
push
pushf
lret
pusha
inc
ret
pushf
into
insl
dec
shll
outsl
jle
stos
sub
subb
in
cmc
pop
shrb
ds
jnp
imul
sahf
cmc
lock
roll
or
xorl
push
and
fdivr
jecxz
xchg
mov
add
fisttpll
and
add
jb
mov
push
icebp
repnz
cwtl
adc
cmp
and
lds
ret
sub
subb
add
repz
lods
nop
jbe
sar
pop
idivl
lahf
push
and
cmc
mov
inc
cmp
xor
or
sbb
adc
mov
cmp
mov
leave
insb
fnstsw
insl
xlat
fs
xor
jecxz
dec
sub
mov
push
icebp
adc
sbb
sbb
sbb
adc
add
sbb
bound
cmp
aas
xchg
push
pop
data16
xchg
adc
dec
ja
into
mov
les
in
in
xchg
je
inc
jbe
arpl
sub
or
mov
insl
push
cld
loop
dec
or
sahf
iret
add
cmc
lret
ljmp
loop
out
push
arpl
hlt
popl
lcall
sbb
or
pop
stos
adc
sbb
mov
testl
out
and
xor
sub
fbld
shlb
mov
add
jne
and
push
push
into
js
and
nop
jl
adc
push
bound
subb
and
xchg
mov
ss
adc
pop
adc
popf
in
or
inc
outsl
imul
stc
adc
mov
cmp
xor
jg,pt
sub
mov
mov
mov
push
in
in
push
dec
sub
adc
decl
popa
push
pop
cmp
rcl
adc
gs
andl
js
mov
cmp
data16
lods
and
scas
dec
adc
std
add
pop
adc
insb
arpl
cmpsl
out
and
lods
push
dec
arpl
test
dec
hlt
ljmp
sbb
into
jnp
jge
jb
imul
mov
leave
mov
sub
sub
inc
inc
and
stos
lea
je
push
sub
jmp
adc
mov
pop
notl
negb
clc
pop
repz
std
add
or
dec
ret
cmp
movsb
cwtl
xor
mov
fisttpll
sub
and
jecxz
and
cmp
jl
cmp
mov
popf
adcb
ret
int3
dec
dec
xchg
jge
fdivrp
fistpll
rcll
faddp
imul
insl
mov
or
out
shl
adc
xchg
gs
xchg
testb
xchg
nop
xor
jb
sbb
sbb
repnz
out
ss
lods
pop
test
push
test
lahf
repz
push
adc
imul
popl
push
loopne
test
jge
lret
xchg
in
pop
sarl
pop
add
mov
lahf
push
bound
rclb
lret
lods
insl
mov
cmp
jle
iret
cmpsl
test
nop
mov
xor
pop
hlt
pop
inc
sbb
mov
add
dec
xor
pop
out
xchg
int
jl
daa
sub
out
xchg
cli
inc
in
dec
in
testb
repz
popf
add
addr16
ss
xchg
pop
clc
jno
pop
mov
pop
mov
inc
movsl
mov
push
lock
or
sbb
subl
push
push
add
int3
scas
sub
pop
fiadds
and
mov
mov
enter
mov
insl
mov
sub
into
leave
fwait
cmp
mov
fisttpl
push
mov
ficoml
sub
jbe
pushf
aas
push
xor
mov
rclb
mov
xorb
sub
sub
xchg
fwait
cs
adc
aam
dec
test
inc
pop
push
xor
fstl
xor
adc
mov
sarl
fidivl
frstpm(287
cmp
inc
xchg
pushf
cmp
adc
jns
outsb
ret
rclb
xchg
das
pop
mov
mov
fsubs
jle
jo
dec
imul
adc
xchg
inc
push
sbb
sub
and
gs
rcll
xchg
mov
out
jge
dec
mov
sarl
jp
je
add
ljmp
hlt
xchg
js
cli
add
or
in
sbb
pop
xor
or
ss
add
sbb
inc
jle
out
or
mov
sub
int
add
xor
imul
ja
push
xchg
lods
dec
jbe
leave
xchg
pusha
mov
pusha
mov
dec
stc
cmc
shl
push
push
push
jmp
add
sub
out
cmp
and
sub
xor
aas
into
and
cmp
clc
iret
cmp
mov
fwait
stc
mov
or
sub
push
mov
mov
mov
aas
pushf
mov
dec
aas
push
scas
test
cmp
adc
roll
mov
fsubrp
aaa
iret
xor
and
lret
jl
pop
addr16
std
cltd
fnstcw
sbb
or
xchg
loope
imul
popa
fidivl
xchg
jg,pn
xchg
pop
push
xor
or
jmp
repz
sub
cmp
and
xor
sarl
les
sbb
movsb
test
push
cwtl
fiaddl
adc
and
dec
cwtl
lods
dec
xor
mov
stc
sbb
or
daa
push
bound
cs
popf
lcall
imul
sbb
jo
pop
or
or
push
out
or
push
mov
lcall
pop
loope
in
negb
inc
stc
inc
sahf
and
lea
dec
push
in
and
sub
aas
int3
es
and
sub
jo
sub
adc
es
push
arpl
out
roll
addr16
lock
in
mov
xor
mov
adc
pushf
neg
rolb
xchg
and
push
sbb
roll
sti
jae
bound
aaa
push
adc
leave
dec
cmp
ljmp
dec
das
add
imul
aas
imul
inc
cld
dec
decb
push
lea
mov
sldt
add
iret
sbb
add
add
cmp
add
cmp
add
movsb
mov
sbb
xchg
mov
add
test
add
adc
add
and
add
and
or
cmp
or
pop
std
or
js
or
mov
decb
add
or
mov
add
add
add
add
or
lods
add
add
or
mov
or
and
or
pushf
or
add
or
or
or
pop
or
add
or
xchg
add
or
inc
adc
add
add
add
or
fcoml
or
or
or
xor
or
je
or
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
or
je
or
mov
and
add
jg
add
jg
add
jg
add
or
jo
or
in
nop
or
add
or
shrb
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
or
or
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
sub
add
add
add
add
add
add
mov
sbb
sub
add
sbb
jp
sbb
cwtl
mov
sbb
mov
sbb
mov
sbb
cmc
mov
sbb
and
sbb
pop
mov
sbb
test
sbb
mov
sbb
sarb
sbb
mov
sbb
dec
mov
sbb
stos
mov
sbb
clc
mov
sbb
push
mov
sbb
movsl
mov
sbb
in
sbb
pop
rcrb
daa
rcrb
dec
rcrb
rcrb
mov
sbb
mov
rcrb
adc
sbb
xor
sbb
pusha
rcrl
xchg
rcrl
mov
add
rcrl
sbb
ret
pop
ret
lcall
add
sbb
daa
ret
sbb
inc
ret
sbb
ja
sbb
xchg
ret
sbb
cwtl
ret
sbb
test
sbb
inc
and
jo
xor
jo
addr16
push
dec
push
inc
inc
inc
popa
je
add
js
and
xor
inc
push
dec
push
inc
inc
dec
insl
popa
add
js
and
xor
inc
push
dec
push
inc
inc
push
arpl
add
js
and
xor
gs
push
dec
push
inc
inc
push
gs
outsl
jb
popa
outsb
arpl
inc
and
jo
xor
dec
jo
addr16
push
dec
push
inc
inc
push
imul
insl
popa
je
inc
and
jo
xor
dec
jo
addr16
push
dec
push
inc
inc
push
jne
insb
imul
add
push
fs
inc
imul
add
push
fs
dec
outsb
imul
add
push
outsb
imul
insb
imul
outsb
imul
imul
inc
dec
arpl
jae
jae
inc
imul
je
outsl
outsb
and
jno
jbe
inc
dec
arpl
jae
jae
pop
jae
push
dec
push
inc
push
imul
outsl
outsb
jae
jae
pop
jae
push
inc
inc
inc
jb
outsl
jb
inc
dec
arpl
jae
jae
pop
jae
push
inc
inc
dec
insl
popa
addr16
imul
outsb
jae
jae
imul
imul
and
jno
jbe
inc
dec
jo
addr16
inc
imul
je
outsl
outsb
and
jno
jbe
inc
dec
jo
addr16
dec
push
inc
inc
inc
gs
jne
je
add
jo
addr16
push
dec
push
inc
inc
inc
popa
je
inc
add
jo
addr16
push
dec
push
inc
inc
inc
popa
je
inc
and
fs
and
jno
jbe
inc
dec
jo
addr16
push
dec
push
inc
inc
inc
popa
je
inc
inc
jb
gs
popa
outsb
fs
gs
jno
jbe
inc
dec
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
add
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
and
arpl
jno
jb
add
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
and
fs
and
jno
jbe
inc
dec
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
inc
jae
imul
jo
cmp
popa
jae
gs
push
push
gs
imul
inc
dec
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
inc
jae
imul
jno
jo
cmp
popa
jae
gs
push
push
gs
imul
inc
dec
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
inc
popa
insb
arpl
je
jne
inc
imul
outsb
jae
jno
jb
add
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
inc
push
fs
jno
jo
xor
jns
je
insl
inc
push
dec
bound
arpl
dec
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
inc
outsl
insl
jo
gs
and
jno
jbe
inc
dec
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
inc
dec
inc
dec
gs
jno
jbe
inc
dec
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
inc
jb
ja
jno
jb
xor
inc
jb
jo
imul
outsb
jbe
jae
js
xor
gs
push
push
arpl
dec
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
inc
jno
popa
insb
jae
jno
jb
xor
inc
jb
jo
imul
popa
jo
imul
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
inc
jb
gs
imul
jb
add
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
inc
gs
imul
jb
add
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
inc
gs
insl
jo
jns
jno
jb
add
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
inc
gs
jb
jns
arpl
gs
jno
jbe
inc
dec
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
inc
gs
imul
jb
add
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
inc
gs
popa
insb
gs
gs
jno
jbe
inc
dec
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
inc
gs
imul
jbe
inc
dec
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
dec
push
inc
inc
dec
gs
jno
jbe
inc
dec
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
dec
outsl
popa
fs
jb
insl
inc
insb
imul
inc
outsl
jb
popa
je
jno
jb
jae
imul
gs
push
dec
push
inc
inc
dec
insl
popa
addr16
dec
outsl
popa
fs
jb
insl
push
je
gs
insl
and
jno
jo
xor
jae
jae
push
push
je
gs
insl
add
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
dec
gs
imul
jb
add
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
dec
gs
insl
popa
addr16
jno
jbe
inc
dec
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
push
gs
fs
popa
je
and
jno
jo
xor
jae
jae
push
push
je
gs
insl
add
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
push
gs
fs
je
gs
insl
and
jno
imul
jae
gs
push
push
je
gs
insl
add
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
push
popa
jbe
push
outsl
inc
insb
imul
inc
outsl
jb
popa
je
jno
jb
jne
jb
imul
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
push
popa
jbe
push
outsl
push
je
gs
insl
and
jno
jo
xor
jae
jae
push
push
je
gs
insl
add
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
push
gs
jb
jns
arpl
gs
jno
outsl
add
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
push
gs
imul
jb
add
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
push
gs
popa
insb
gs
gs
jno
jne
add
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
push
gs
gs
outsl
jb
popa
outsb
arpl
jno
jb
xor
gs
push
dec
push
inc
inc
push
gs
outsl
jb
popa
outsb
arpl
inc
dec
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
push
gs
imul
insl
popa
je
jno
jb
xor
gs
push
dec
push
inc
inc
push
imul
insl
popa
je
inc
dec
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
push
gs
arpl
gs
jno
xor
inc
push
dec
push
inc
inc
push
arpl
add
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
push
gs
insl
outsl
outsl
je
imul
outsl
add
jo
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
push
gs
imul
imul
addr16
push
dec
push
inc
inc
dec
insl
popa
addr16
push
jb
je
inc
popa
je
and
jno
jo
xor
jae
jae
push
push
je
gs
insl
add
jo
addr16
imul
imul
and
jno
jbe
pop
inc
outsl
jb
xor
pop
pop
pop
inc
push
push
fs
dec
outsl
outsl
imul
xor
adc
scas
cmpsb
pushf
lods
ljmp
adc
leave
add
shrl
loopne
imul
les
mov
mov
stos
into
or
mov
or
or
fdivs
xor
pop
loope
frstor
cltd
push
cld
jmp
inc
fadd
lods
and
imul
sbb
out
in
cmpsb
loope
imul
cmp
xor
sti
test
sub
ds
sbb
pop
rcr
sar
stos
out
fisttpll
pop
in
fistpl
push
aaa
adc
sbb
ja
call
test
add
insw
scas
cmp
dec
fldl
or
dec
sbb
js
add
arpl
int
inc
vsubsd
int3
sub
scas
popf
bound
and
std
add
imul
xchg
lret
jp
sub
mov
sub
mov
stos
in
sbb
pop
inc
out
jne
fwait
push
adc
fsubs
leave
or
jbe
mov
jp
shlb
shr
cmp
orl
mov
aas
mov
paddd
int3
xchg
imul
jg
sub
inc
jno
xchg
sbb
push
push
sbbl
stc
dec
pop
jmp
imul
push
add
aas
in
push
dec
push
lods
mov
cmp
out
push
test
fisttpl
xor
push
mul
mov
jecxz
lret
lahf
xchg
sti
sub
js
in
das
pop
test
sbb
push
rolb
mov
popa
fld
imul
shrl
xchg
xchg
adc
pusha
test
push
dec
and
lds
and
stos
ffree
test
add
mov
xchg
fstpt
and
divl
inc
addr16
loop
adc
sub
aas
adc
lods
xchg
inc
xchg
mov
mov
in
data16
cmp
cld
pushf
les
mov
xor
fistl
cmp
xor
movsb
sti
or
xor
push
fwait
je
xchg
mov
test
cltd
mov
adc
mov
ret
insb
cltd
scas
out
lods
fcompl
push
inc
xchg
push
and
push
mov
push
dec
pop
dec
cs
dec
mov
xchg
idiv
push
jge
xorl
clc
lahf
call
mov
in
notl
mov
and
xor
mov
js
pushf
jl
icebp
popf
addl
les
sub
repz
sub
sub
jae
aam
cli
outsl
push
mov
imull
hlt
push
cmp
cmp
and
stos
out
imul
mov
and
mov
test
stc
dec
pop
push
push
and
roll
sarb
push
push
xchg
push
lock
pop
jl
xor
outsb
je
insl
aad
adc
adc
sub
dec
xor
mov
pop
adc
insl
mov
imul
cmpsb
jecxz
insl
iret
fsubrs
jp
mov
fbstp
pop
test
pop
repz
xchg
and
rclb
mov
xor
jno
out
mov
push
push
inc
in
sti
pop
sbb
mov
mov
repnz
mov
sub
fldenv
rorl
es
dec
mov
ljmp
jge
mov
call
pop
lret
jns
add
pop
jl
les
cmpsb
into
mov
je
lock
stc
jle
int3
jno
mov
adc
fcomip
push
mov
out
insl
xor
mov
int3
jo
shlb
pop
mov
andl
shrb
insb
fildl
pop
ret
fimull
pop
icebp
and
or
ret
push
dec
jbe
xchg
cmp
cmp
jmp
sbb
nop
sbb
add
inc
test
stc
pop
inc
dec
outsb
loopne
xchg
jecxz
adc
sbb
inc
dec
ljmp
fsubl
rorb
movl
xor
insb
mov
stc
add
mov
sahf
mov
addr16
pusha
nop
rorb
loopne,pt
mov
push
mov
mov
std
into
call
mov
stos
mov
rclb
pop
loop,pn
loop
and
cmp
dec
pop
mov
loope
mov
push
bsf
mov
and
push
mov
mov
das
aaa
push
stos
add
stos
out
push
stos
ret
mov
and
lock
push
pop
sub
jbe
mov
sbb
cmc
mov
and
repnz
adc
inc
xchg
dec
pop
sub
or
mov
outsl
mov
push
or
sbb
outsl
rcrb
xchg
mov
popf
call
popf
loopne
or
push
inc
sub
sbb
pushf
movsl
je
stos
arpl
xor
pop
in
iret
mov
mov
arpl
repz
adc
xlat
leave
js
cld
loop
push
aas
mov
dec
push
fmuls
sahf
sahf
sub
mov
push
jae
jecxz
notl
push
ja
bound
stos
mov
jo
sbb
lods
pop
jne
xchg
insb
lods
add
decl
add
outsl
pshufw
push
adc
mov
aam
inc
js
adc
mov
add
lret
movsl
push
sbb
jmp
push
xor
or
test
cmp
stc
ljmp
clc
cltd
adc
adc
jmp
inc
fwait
out
sub
cmp
push
shlb
jp
cmpsl
bound
or
loopne
mov
pusha
mov
mov
xor
sbb
jge
cmp
sub
dec
fcompl
fwait
ror
arpl
inc
in
jge
aad
mov
test
aam
je
imul
inc
pop
test
test
xchg
nop
dec
imul
push
or
mov
test
dec
int3
lahf
lret
insl
je
stos
jae
or
icebp
ljmp
movsb
insl
xchg
jo
adc
sub
xchg
lcall
inc
jne
aas
and
clc
dec
mov
ret
and
stc
imul
test
sbb
mov
cmpb
rcrl
cmpsb
movsl
sbb
imulb
addr16
lods
add
jl
sahf
rorb
pop
aaa
xchg
jns
imul
push
mov
jne
repnz
xor
jno
loope
fistl
std
stos
mov
repnz
mov
mov
xchg
pop
lock
or
enter
subb
mov
les
mov
push
mov
cmp
xchg
mov
rorb
movsl
sarb
mov
or
je
pop
pushf
sbb
pop
mov
sbb
lret
add
push
aam
add
jmp
popf
adc
sbb
dec
dec
outsb
mov
mov
movsb
stos
dec
cltd
leave
xlat
aas
decb
xor
adc
or
adc
in
jno
mov
clc
mov
insl
in
aad
cmc
dec
pop
ret
sbb
imul
mov
push
add
push
ja
jns
pop
shr
pop
aad
pop
xor
lcall
les
shrl
orl
push
mov
movl
dec
xchg
fistpl
adc
mov
push
xchg
out
aas
and
xor
mov
sti
push
mov
mov
popa
jmp
jle
fcompl
out
int
dec
inc
in
es
imul
gs
cmp
dec
mov
mov
in
out
notb
repz
fbstp
cmp
or
in
adc
dec
and
or
xchg
xor
int
out
loop
call
lods
vmulpd
and
cmp
push
sti
in
push
pop
in
push
insb
test
lea
cmp
fstpl
xchg
mov
sub
mov
jne
xchg
adc
mov
out
insb
adc
ljmp
movsl
cmp
push
mov
icebp
das
mov
scas
jns
xor
scas
nop
or
jne
cmpsb
mov
je
adc
clc
xchg
test
mov
dec
xor
arpl
imul
out
das
outsl
bound
pop
xor
popf
imul
lea
std
stc
cltd
jle
shld
or
popf
imul
int3
xorb
or
dec
je
mov
cmp
daa
stc
out
rcll
scas
dec
out
sahf
mov
cld
insl
pop
lcall
xchg
xchg
mov
dec
subb
ret
dec
mov
in
cmpsl
cld
push
dec
repz
cmp
jge
xchg
repnz
mov
jns
pusha
scas
out
or
dec
mov
aaa
fstl
adc
mov
lods
or
and
andl
dec
std
stc
into
xor
add
sbb
stc
cmp
mov
cmpsl
cmp
movsl
xor
into
mov
cmp
sti
jno
dec
add
jno
insl
xor
xor
jb
xchg
aas
push
pop
out
pop
adc
and
sbb
adc
cmp
shrb
cmc
xchg
push
xor
and
pop
mov
lcall
jns
or
cmpl
mov
mov
adc
adc
es
sub
test
std
add
mov
inc
ja
sbb
jge
pop
mov
cmpsb
dec
pop
push
cld
test
iret
xchg
add
and
in
es
ja
xor
dec
les
fwait
push
jbe
push
pop
mov
push
roll
pop
jne
out
sub
hlt
dec
sahf
aaa
insb
push
movsb
push
pop
cmp
or
in
shlb
mov
dec
push
sub
xchg
dec
fsubl
jl
out
repz
cmp
pop
stos
nop
daa
daa
add
push
mov
cmp
adc
inc
add
push
imul
sti
jb
add
or
test
stos
loop
push
dec
stos
ja
ret
subb
outsl
clc
and
or
jno
lea
push
or
aad
push
jns
inc
mov
cmpsb
in
inc
ljmp
inc
inc
cmpsb
xor
or
ret
cmc
int
mov
imul
outsl
rcrb
cmp
fiaddl
ljmp
cmp
fldt
lcall
mov
sbb
and
in
es
jae
inc
ds
call
int3
xchg
add
adc
dec
and
and
sbb
push
inc
mov
sbb
or
pop
fnstcw
jno
jne
xchg
sub
movsl
inc
jno
cmp
dec
lods
in
aaa
clc
or
incl
ffreep
rcrb
lock
xor
stc
mov
dec
dec
enter
push
shr
loop
test
push
sbb
out
repnz
jecxz
pop
jmp
outsb
out
adc
or
testb
popa
arpl
cs
insb
add
adc
out
add
mov
jo
int
bt
cmp
pushl
popl
test
pusha
jmp
push
movb
call
lea
jns
push
pusha
lea
jmp
dec
dec
inc
xor
cs
dec
dec
add
out
mov
jo
jge
jle
xor
decl
add
xchg
inc
lcall
popf
stos
push
adc
and
ret
popa
icebp
jg
fs
adc
test
into
std
out
sahf
push
and
insb
lret
jns
fisubl
jne
xor
loopne
inc
dec
sub
aas
aas
xchg
sbb
cmpsl
pop
mov
inc
mov
cmpsl
pop
mov
push
cltd
ds
ret
lcall
ficoms
ret
ret
jbe
inc
jmp
sahf
or
jg
outsl
fwait
cmp
pop
imul
pop
lret
repnz
pop
cmp
mov
jne
in
push
jle
push
and
lds
inc
xor
inc
jmp
je
adc
clc
mov
jmp
adcb
bound
inc
les
cltd
sti
shl
jle
aaa
add
pusha
xlat
jns
popa
lods
mov
add
push
ja
xor
ljmp
inc
in
jecxz
jne
push
push
movsl
xchg
aaa
mov
add
call
testl
das
lret
sub
ret
das
push
and
pop
adc
rcrl
inc
jne
push
adc
cmpsl
mov
mov
gs
dec
inc
repnz
xchg
divl
dec
xor
sbb
jo
mov
pop
mov
mov
jge
sub
ja
push
push
mov
ret
loop
mov
dec
add
mov
sbb
nop
aas
cltd
sub
xor
adc
cmp
mov
jo
rorb
push
insb
lea
xorb
subb
out
cmp
aam
xor
pushf
shrb
aam
mov
mov
ret
call
mov
xlat
nop
cmp
out
insb
int3
xchg
lahf
loopne
fldl
sbb
arpl
xchg
mov
adc
adc
push
setle
mov
adc
jle
js
jge
pusha
shrb
lcall
pop
jnp
dec
repz
rorl
out
adc
insb
push
jge
jnp
pop
scas
test
ljmp
arpl
cli
psubsw
repz
add
sbb
mov
or
push
pop
push
aaa
lret
lret
adc
jp
dec
jg
mov
pop
lahf
or
jne
pushf
imul
shrb
adc
sti
fdivrl
and
test
je
scas
dec
idiv
in
push
add
mov
xlat
fwait
out
dec
push
sub
xchg
inc
loop
loop
incl
push
jb
mov
pushl
outsl
pop
cld
mov
incl
add
addr16
insb
outsl
jae
dec
gs
stos
jno
dec
int3
movsl
push
mov
mov
mov
push
mov
mov
xchg
mov
add
test
xchg
xchg
push
test
xchg
mov
add
pop
popa
add
jecxz
xchg
cwtl
mov
xor
js
xchg
imul
icebp
push
loopne
jmp
and
pop
jnp
inc
imul
stc
jmp
daa
orb
int
pop
mov
push
mov
andl
lea
push
mov
mov
fnstsw
loopne
xor
jmp
push
xchg
inc
push
pop
and
xor
sub
cld
adcb
inc
mov
lret
lods
jo
push
out
clc
and
int
lret
out
mov
js
pop
and
movsl
scas
int
les
fildl
cmc
xchg
or
cmpsl
adc
test
inc
in
xchg
xchg
and
jge
mov
out
cmp
ds
cmp
movsl
jle
repz
xlat
dec
xor
adc
sub
mov
mov
inc
mov
hlt
clc
xchg
cmp
jne
das
int3
out
push
mov
mov
or
xchg
push
dec
jne
mov
out
pop
jo
das
adc
dec
in
pop
jmp
ljmp
fidivrl
shlb
es
lret
and
cmp
aad
clc
mov
inc
repnz
jp
lcall
mov
fisttpll
xchg
fsts
xchg
push
and
xor
push
push
in
adc
sbb
push
or
sub
addr16
mov
sub
stc
lods
sahf
mov
dec
lock
mov
dec
cwtl
dec
xor
rol
sbb
sub
test
inc
sbb
rcr
pusha
pop
inc
jle
jl
jbe
jae
pusha
fsubs
and
sbb
ljmp
push
fldenv
lret
cmp
and
xor
cmp
mov
mov
sbb
jecxz
jae
popf
movsl
mov
add
mov
jmp
pop
inc
ds
stos
xchg
cmp
ret
jnp
pop
add
or
int3
sub
and
jbe
mov
cmp
sub
dec
ss
dec
loope
clc
dec
hlt
pop
cli
inc
repnz
push
mov
or
adc
out
cmp
cmp
cmp
xor
and
xor
and
dec
sub
pop
shl
push
scas
dec
mov
dec
dec
adc
push
xchg
cmc
sub
mov
lods
shlb
push
nop
add
xor
pop
push
jl
imul
daa
sbb
cmp
adc
adc
pop
or
sub
mov
and
subl
add
jmp
mov
mov
adc
add
add
pop
out
push
in
adc
or
cs
and
push
mov
jb
adc
nop
fistpll
or
pop
nop
fildll
or
in
and
lret
lds
insb
and
and
cmpb
and
dec
adc
cmc
popl
andb
mov
stos
sbb
lds
out
fdivl
movzbw
movsbw
mov
bswap
setg
movsbw
push
mov
pop
call
adc
sbb
push
jmp
jmp
jmp
sbb
fisttpl
add
mov
or
rcrl
nop
mov
sub
and
pop
or
jg
mov
adc
push
adc
cld
stos
rorb
dec
rcrb
gs
popa
outsb
add
mov
out
adc
das
in
adc
out
jbe
jmp
icebp
pop
jecxz
stc
push
testl
testb
enter
jge
add
pushf
mov
pushf
mov
movb
pushl
ret
sti
dec
rorl
add
jne
insl
sahf
outsl
pushf
ja
jns
sub
loope
shll
xchg
test
sbb
dec
fidivs
jne
and
sahf
bound
xor
popf
push
pop
inc
in
aas
aaa
dec
fidivs
jge
add
jo
mov
mov
fiadds
mov
add
call
sbb
js
jno
ljmp
and
adc
imul
test
adc
pop
hlt
ficoms
dec
adc
jp
and
sub
push
sub
mov
pop
sbb
inc
push
or
push
mov
add
repz
inc
mov
dec
pop
cmp
das
lahf
xlat
lahf
ss
repz
jb
bound
movsb
and
shrl
pop
xor
push
test
push
fbld
rcrb
fs
or
sbb
lret
push
addr16
or
push
xor
dec
pop
push
mov
or
or
cltd
ljmp
call
add
dec
xchg
sbb
cmc
or
lret
out
repnz
lds
sbb
call
push
jl
pop
inc
and
add
dec
xchg
sbb
imul
icebp
mov
pop
mov
add
jno
bound
and
mov
add
in
bound
pop
sti
dec
cli
dec
in
dec
std
dec
cmc
fisubrs
push
daa
pushf
lahf
mov
lea
jmp
jmp
push
lea
jne
cwtl
movb
call
lods
stc
not
pushf
ror
mov
lea
jno
dec
push
not
call
lods
push
xchg
inc
push
sub
das
leave
cmp
ds
cmp
xor
aaa
xor
fwait
jl
push
in
adc
movsl
popf
pop
sbb
sbb
leave
xor
leave
gs
dec
pop
adc
jecxz
adc
mov
jno
cmp
stc
lods
pop
push
testb
fdivrl
jns
nop
pop
daa
ret
xor
inc
mov
or
mov
fwait
jmp
scas
mov
jl
idivl
cmp
insb
out
sub
xchg
iret
pop
push
fwait
shll
or
xor
xchg
negl
cmp
xor
and
pop
and
inc
xchg
out
or
ud1
and
mov
mov
lods
std
mov
in
arpl
sti
or
psubsw
hlt
sbb
add
and
daa
mov
fwait
clc
call
add
mov
shll
adc
cmp
push
pop
add
movsb
inc
pusha
add
inc
mov
mov
mov
mov
mov
cmp
mov
push
stos
dec
test
stos
xchg
sub
outsb
push
inc
jae
ljmp
lahf
repnz
cld
arpl
cmp
leave
mov
in
mov
pop
lods
or
add
add
orl
movsb
inc
mov
pop
mov
mov
ret
repnz
cld
stos
lret
in
or
xor
xchg
movsb
dec
icebp
cwtl
movsb
adc
outsb
ret
and
dec
imul
testl
xor
mov
or
push
mov
or
mov
es
test
pop
mull
jmp
mov
movsl
sub
ds
in
loopne
das
insl
fwait
push
les
sarb
push
orl
or
inc
sbb
cmpb
inc
in
repnz
jmp
add
pushl
push
sti
clc
push
movb
lea
jb
push
pushf
pushl
ret
add
inc
js
je
jb
arpl
jae
je
pushf
mov
call
sub
inc
or
or
adc
add
or
sbb
or
fidivrs
roll
lods
movsl
lds
incb
in
jmp
inc
sbb
fsubp
std
xchg
pop
sbb
incl
sub
xchg
pop
jge
xor
dec
or
jle
push
int
int
hlt
sub
mov
test
adc
popf
stos
xchg
dec
in
lahf
rcrl
shll
sub
mov
leave
pusha
imul
cmp
xchg
jbe
loopne
mov
out
fwait
js
xchg
jl
push
push
addr16
jno
stc
or
out
out
adc
sbb
cmpsb
and
jle
cmpsb
scas
das
pop
push
dec
pop
out
cmc
xchg
es
nop
lods
xchg
mov
mov
loopne
jno
jle
daa
xorl
in
fisubs
test
jbe
mov
adc
xchg
mov
shr
mov
outsl
ja
aad
jg
xorb
cli
dec
cmc
pop
in
cld
dec
loop
orl
aad
inc
push
pmulhuw
cmc
add
ss
cmp
fistl
inc
sub
pop
mov
mov
cmp
rorl
mov
outsl
mov
rorb
imul
xchg
pop
mov
enter
testl
shll
sti
mov
addr16
les
out
push
sub
sub
cmp
sarb
and
das
test
mov
sbb
inc
mov
ret
incl
and
les
push
nop
pop
nop
jmp
popf
adc
iret
push
out
push
icebp
jbe
and
xor
sub
loopne
push
outsb
lods
loop
sahf
inc
in
add
add
repz
lock
enter
int
xlat
jnp
outsl
leave
jl
add
lods
jecxz
mov
xchg
sbb
out
fidivs
dec
icebp
clc
xchg
cmp
fnstenv
cli
pushf
rorb
in
addb
popf
addr16
jle
jb
add
lea
pusha
cmpsl
mov
arpl
dec
push
sub
pushf
mov
bound
jne
pop
sbb
lock
std
inc
cld
inc
loop
sti
pop
loopne
xchg
sub
arpl
pop
mov
mov
scas
inc
xchg
popa
xorl
push
ja
loop
inc
stos
and
and
mov
add
insb
mov
imul
popa
stc
lahf
and
xor
mov
clc
insb
test
and
lcall
mov
dec
xor
xchg
call
les
push
ljmp
out
mov
imul
cmp
inc
loope
jns
sar
test
xor
out
pop
inc
es
sbb
or
add
inc
and
jb
pop
cmp
xor
das
into
cmp
cmp
and
ss
sub
sub
cmp
arpl
dec
inc
xor
xor
dec
dec
jb
nop
imul
push
cmp
sbb
ljmp
cwtl
data16
arpl
sub
cmp
and
out
pop
mov
fmull
repnz
pusha
into
xchg
std
jae
cli
push
gs
movsl
rorb
mov
mov
cmpsl
push
xor
in
dec
out
dec
stc
push
hlt
pop
jecxz
call
ss
adc
mov
inc
stos
add
call
jecxz
roll
add
jge
insb
cmpl
fwait
jno
addr16
pop
inc
aas
je
fcomps
or
adc
inc
sbb
imul
sti
loope
inc
xchg
insb
mov
cld
daa
icebp
cmp
inc
pop
insb
out
cmp
sti
mov
in
popa
lahf
lock
lea
mov
test
popf
insl
les
sbb
in
les
insl
jns
jo
push
test
aas
fdiv
dec
xlat
jg
pop
inc
jne
js
jg
push
insb
lea
xchg
out
mov
cmp
cmp
inc
and
and
sub
testb
divl
dec
dec
fdivrp
jb
jno
je
push
lods
adc
inc
xor
out
jbe
lock
pop
and
lcall
jmp
in
inc
leave
std
cmc
adc
jns
iret
sarb
cli
hlt
sbb
sub
add
sbb
push
jl
scas
into
testb
sarl
add
imul
xchg
adc
andb
sub
inc
mov
scas
push
or
stc
push
out
pop
cmc
push
in
stc
pop
stos
sub
pop
add
pop
jge
jno
jge
out
and
sub
cmp
cs
fldt
sar
repnz
mov
cld
call
mov
push
mov
dec
mov
add
and
je
or
xor
in
pop
inc
and
mov
test
lret
mov
xchg
je
pop
in
sbb
imulb
mov
xchg
out
out
sbb
shrb
cmp
jbe
adc
pushf
mov
sbb
cmp
sub
pop
push
xor
cmp
mov
and
inc
call
sti
mov
cmp
mov
pop
mov
or
fcmovbe
enter
leave
push
cld
and
icebp
mov
jb
lahf
std
pop
hlt
pop
sub
lahf
jl
out
call
inc
std
push
xor
mov
and
andl
das
shlb
sub
add
cmp
add
xchg
jl
out
push
das
shrl
int3
jg
xor
jnp
or
int3
cld
cmp
andl
jge
xchg
cmc
add
or
sbb
or
pop
cmp
xchg
in
dec
push
pop
cmp
loop
fstps
in
push
xlat
dec
data16
add
push
jge
inc
sub
mov
cmp
mov
adc
jnp
test
subb
and
icebp
test
cwtl
jg
scas
leave
inc
enter
sbb
imul
shr
test
pop
and
cli
dec
loope
lock
repz
sti
inc
pop
imul
aad
push
leave
lock
sarb
out
push
imul
je
jnp
mov
sti
aam
mov
in
test
cmp
mov
pop
fidivrs
xchg
push
repnz
ret
mov
add
sbb
xchg
insl
js
repnz
add
pop
push
pop
cmp
mov
pop
roll
fldenv
sub
dec
sbb
sbb
mov
xchg
sub
xor
cmpsl
xor
sbb
lcall
push
in
add
bound
add
inc
sbb
cmp
add
inc
sbb
inc
bound
add
inc
sbb
dec
bound
add
das
adc
fadds
add
sbb
add
add
inc
sbb
pop
bound
add
call
sbb
popa
bound
add
rcrb
add
inc
sbb
imul
add
add
add
sbb
clc
inc
sbb
jno
sbb
in
adc
add
jns
sbb
mov
inc
sbb
add
pusha
pushf
call
stc
or
pushf
pusha
pushf
jmp
jae
jbe
mov
das
shll
aad
cmp
das
fisubs
xor
mov
jp
cmp
mov
push
cld
xchg
aam
out
adc
aam
inc
stc
inc
ret
sub
or
dec
lcall
and
xchg
xchg
dec
lret
and
in
lods
das
mov
or
ret
ja
test
iret
xor
inc
mov
fidivrl
sti
add
aas
inc
in
mov
mov
add
addr16
mov
jnp
mov
and
fisubrs
movsb
add
pop
test
fildll
dec
fists
inc
inc
push
push
xor
cs
dec
dec
add
lea
sub
xor
cmp
lds
fsin
aad
js
int3
jb
jae
lret
jns
lret
or
xor
sti
in
andl
shrl
xor
lods
jnp
imul
mov
aad
push
mov
test
add
push
cli
dec
arpl
sub
sti
cld
aas
pushf
push
mov
stc
test
mov
or
insb
addr16
movsl
or
inc
enter
jno
repnz
push
jb
insb
xlat
push
shll
adc
fcmovnu
pop
lea
cwtl
lahf
mov
push
lea
ja
pushf
mov
push
lea
jb
push
jmp
inc
inc
push
inc
push
dec
xor
cs
dec
dec
add
pushf
movzbw
mov
movb
pushl
pusha
pushf
lea
jmp
das
cmc
pushf
js
out
mov
mov
icebp
mov
cs
sbb
push
movsl
fstpl
addr16
xchg
adc
cmp
xchg
js
popa
xchg
jg
sub
sarb
push
adc
loopne
pusha
imul
mov
adc
fldl
dec
and
push
in
mov
inc
dec
ss
push
cld
adc
push
leave
aas
pop
and
jns
jno
add
jno
cwtl
jb
out
pop
out
inc
cld
pop
hlt
pop
out
je
aam
ljmp
jo
repz
pushl
popl
pushf
pushl
ret
pushf
call
pusha
pushf
ror
push
movb
dec
movb
pushf
not
jmp
pushf
mov
call
cld
dec
ret
out
ljmp
sbb
sbb
add
or
insl
xchg
int
shrd
pop
call
fs
cmp
jbe
in
adc
frstor
jl
xchg
sub
sub
mov
sub
je
nop
insl
out
jmp
nop
repnz
arpl
and
fadd
movsb
add
or
pushf
mov
sub
popf
sub
aam
inc
mov
and
xor
lea
ja
shl
jmp
pop
in
gs
out
mov
int3
xor
cmp
ss
cmp
add
sbb
push
mov
or
and
mov
jl
ror
jmp
cli
pop
adc
cwtl
push
ja
fisubrl
jp
pop
mov
cmpsb
inc
jns
dec
psadbw
cld
mov
sub
mov
sbb
pop
mov
inc
filds
shll
jmp
and
imul
cmc
xchg
adc
negb
jb
mov
inc
es
ror
mov
mov
xor
sti
push
es
dec
decb
inc
in
dec
cmc
inc
clc
push
adc
js
in
push
or
test
test
mov
push
lea
je
call
stc
sub
jmp
js
inc
jp
out
outsb
xchg
jno
ja
gs
lcallw
mov
push
popf
jecxz
cwtl
adc
jns
jo
push
and
cmp
sbb
lret
xor
pop
jge
cmpl
roll
lods
scas
inc
bound
cmp
dec
hlt
cs
mov
popf
loop
lcall
es
and
inc
xor
lea
pop
jo
dec
testl
sbb
adc
or
adc
sbb
add
adc
mov
test
cmp
inc
mov
repz
mov
ss
fstpl
xchg
je
clc
arpl
int
jmp
nop
mov
out
gs
lea
mov
and
lcall
cmp
inc
cmp
aam
adc
mov
pop
fbld
inc
cmp
push
imul
pusha
movl
lea
jnp
push
pusha
pusha
lea
jmp
mov
movb
pushf
pusha
movw
pushl
ret
pop
test
jne
out
cmp
inc
mov
add
testl
les
dec
scas
push
mov
mov
aas
mov
mov
mov
lods
sbb
sbb
je
out
xchg
insl
test
push
insl
popf
jle
mov
loopne
xchg
pop
dec
xor
nop
popa
and
pop
xor
cmpsb
xor
loop
or
fistps
jge
in
shrl
jle
js
cli
notl
dec
sbb
fisubs
jne
jp
jae
imul
pop
push
or
and
lea
jne
xor
not
pusha
btr
mov
clc
mov
call
call
jp
arpl
dec
mov
cmpsb
inc
popl
jl
dec
das
arpl
adc
push
out
mov
adc
dec
aam
dec
mov
mov
mov
add
addb
mov
inc
inc
xchg
je
bound
out
mov
sbb
imul
sub
divb
mov
cmp
mov
mov
or
xlat
sub
or
rorb
dec
jmp
ja
int
sbb
push
out
dec
and
sub
mov
xor
push
aad
dec
inc
sbb
int3
rcll
cmpsl
in
mov
or
dec
cmc
sbb
xchg
push
add
repz
dec
or
add
hlt
fnsave
pop
mov
inc
dec
add
dec
pop
nop
shll
in
sub
ja
hlt
add
clc
mov
std
or
out
sbb
in
shll
cmp
mov
cli
fsincos
add
dec
imul
inc
pop
or
out
cmp
stos
clc
mov
in
cmc
incl
std
inc
add
mov
sahf
dec
js
push
mov
mov
dec
ljmp
int3
xlat
pop
sbb
stos
sbb
fsubrl
loop
hlt
out
cld
or
xor
push
xchg
int
push
fstl
iret
int3
in
scas
or
mov
roll
test
dec
pop
sub
mov
add
mov
fwait
mov
push
pusha
jmp
int
push
rcr
push
fstp
mov
sub
dec
aam
or
inc
fwait
sti
iret
jns
mov
jae
js
cmp
push
ljmp
or
jmp
jno
mov
testb
xchg
add
fnsave
push
push
mov
fisttpl
pop
leave
mov
out
cmc
dec
push
inc
insb
mov
in
pop
mov
or
rcll
add
outsl
loopne
cmp
int
in
rcrl
jge
out
orb
xor
flds
rorb
sbb
call
xchg
dec
insb
adc
jg
in
inc
jmp
jmp
inc
xchg
in
popl
in
fwait
mov
xchg
dec
in
popf
mov
mov
mov
jmp
dec
sahf
dec
or
adc
das
xchg
lea
inc
loope
add
insb
ret
mov
sbb
xorb
mov
pop
fldcw
cmp
mov
push
repnz
mov
mov
fmuls
add
mov
push
xor
fwait
ss
xor
xor
repz
fwait
pop
xchg
je
movsl
and
arpl
lods
pop
xchg
lcall
push
pushf
inc
fnsave
or
in
cli
out
xor
mov
lock
fs
stos
shrb
out
shrl
adc
jae
mov
mov
pop
xchg
int3
jmp
loope
mov
push
mov
pusha
jne
fcomi
jmp
repnz
sbb
lret
add
xchg
mov
ret
and
mov
dec
ret
pop
lcall
roll
push
add
or
adc
movsl
and
adc
sbb
lods
pushf
leave
dec
jl
sarl
mov
jmp
fs
jno
enter
cmp
sub
shrl
js
movl
insb
adc
cld
inc
or
xchg
cwtl
sub
cmc
mov
leave
sbb
nop
fcompl
pusha
out
inc
dec
pushf
push
jae
aad
mov
out
mov
jmp
lret
mov
cmpsb
jp
cmpsl
cmc
mov
push
mov
test
repz
mov
insb
cmp
sub
imul
clc
pop
test
ret
inc
and
sbb
push
in
or
push
jae
insl
push
pop
rcrb
sarb
or
mov
jle
dec
sbb
shl
fisubs
andl
int3
pop
in
out
std
in
mov
push
xchg
int3
push
jno
lock
cmc
xor
or
or
cltd
or
cmpl
je
xchg
fldcw
jl
in
mov
sub
mov
cld
cmp
js
lret
stos
test
pop
mov
jecxz
push
je
lock
ljmp
push
pop
jb
push
xchg
cmpl
push
xchg
mov
mov
addb
mov
or
xchg
jecxz
adc
subb
or
adc
mov
lret
psubb
push
mov
test
mov
sub
loopne
push
xchg
into
sarb
stos
pop
jno
into
sub
jmp
aas
dec
pop
xor
xchg
and
js
sub
push
cltd
bound
dec
loopne
mov
mov
pushf
xchg
test
xchg
sub
hlt
dec
imul
jecxz
test
out
data16
sub
push
jl
roll
repnz
decb
xchg
push
iret
dec
cmc
mov
repz
mov
xchg
push
jne
repnz
call
jnp
stos
push
inc
inc
nop
mov
hlt
mov
jb
dec
mov
bound
sub
jbe
adc
lock
cmp
sbb
repz
add
inc
jns
ljmp
in
cmp
popf
lods
repz
jecxz
ret
out
inc
nop
test
add
push
int
pusha
sbb
jmp
mov
pop
jecxz
jp
mov
cmp
or
outsl
push
roll
int
xchg
addr16
sti
stc
dec
push
loope
orb
pushf
int3
inc
push
repz
xchg
cli
sbb
ds
mov
push
or
push
xchg
jle
out
ljmp
add
roll
and
xchg
jmp
add
rol
fiaddl
push
add
mov
xchg
in
sub
js
xchg
or
clc
mov
adc
movsb
ljmp
jno
or
mov
jmp
vunpckhpd
pop
insb
adc
into
mov
in
repz
mov
mov
rcl
imul
out
cld
push
fmull
mov
stos
xchg
add
pop
sbb
leave
xchg
stc
les
mov
or
daa
rcll
jns
ja
movsl
add
js
jecxz
pop
testb
stc
jo
test
jae
stc
or
or
pop
sub
stos
aam
cmc
mov
test
xor
or
mov
sub
xchg
sti
call
sub
jns
sub
fisttps
dec
repz
xchg
pop
dec
sbb
jp
mov
test
stos
or
repz
in
sarl
and
mov
enter
or
pop
sub
lods
adc
fcmovnbe
mov
dec
pop
cmc
ja
rorl
fcmovbe
push
call
rorb
test
add
or
popl
or
scas
push
jmp
or
jnp
in
inc
pop
fmull
jle
fucom
xor
sub
inc
xchg
xchg
push
sbb
pop
cmp
xchg
xor
sub
dec
xchg
fisubrs
in
setb
dec
and
mov
fisttpll
add
clc
test
pop
xchg
dec
jmp
xchg
xchg
add
inc
int3
ret
or
sub
js
andb
imul
cmc
rcrb
rep
dec
inc
pop
daa
in
je
stc
aas
clc
pop
push
aaa
dec
jg
mov
inc
xchg
inc
add
xchg
jecxz
push
xchg
mov
mov
fdivr
dec
sarl
repz
xor
lea
int3
cli
arpl
and
insb
shrl
mov
pop
dec
fidivl
sbb
sbb
mov
int
stos
xchg
pushf
push
mov
or
add
test
clc
xor
je
or
push
pop
cmpb
stos
push
jmp
lcall
pop
out
jne
lret
add
pusha
popf
divl
rcll
or
iret
cmp
mov
or
and
stos
cmc
xchg
add
add
xchg
xor
sub
ds
add
cmp
pop
inc
les
out
xchg
add
cmp
pop
sarb
xchg
orb
test
sarl
sub
push
sti
ror
xor
mov
stos
push
mov
mov
push
pop
xchg
roll
and
insb
mov
add
jl
hlt
dec
in
mov
aaa
lea
adc
insb
jmp
jg
adc
test
mov
iret
stos
xor
out
test
mov
jp
dec
pop
or
pop
inc
lahf
jno
jno
outsl
push
jge
mov
pop
int3
push
in
idiv
lds
jecxz
clc
ret
pusha
lods
add
mov
out
sub
mov
sbb
stc
js
roll
mov
dec
call
push
or
jno,pt
ss
mov
jg
std
fwait
outsl
xchg
imul
cmc
pop
lret
push
push
loope
cmc
cltd
repz
mov
aam
les
jbe
xlat
imul
lea
and
subb
cmc
fwait
std
mov
int3
ja
repz
movsb
iret
lea
or
jmp
sub
or
mov
sub
jp
pop
mov
pop
mov
or
mov
call
sarb
mov
mov
xor
dec
xchg
subb
mov
cmc
fwait
jnp
daa
inc
in
stc
dec
mov
imul
sbb
or
out
push
push
push
lcall
test
in
lret
xchg
lods
das
jmp
add
mov
pop
add
rorb
pop
pop
sub
aam
adc
adc
cld
or
jo
lcall
inc
mov
pop
pop
popf
pushf
mov
sbb
pop
jnp
cwtl
mov
pop
cmpsl
stc
aad
add
dec
out
push
js
repnz
imul
addl
in
in
mov
std
adc
or
pushf
iret
shlb
je
push
add
addr16
cli
xchg
push
test
decb
mov
shrl
js
mov
sbbb
iret
in
aam
stos
into
mov
or
push
loopne
aad
repz
pushf
fisttpll
sbb
rorl
js
dec
rcrb
movsl
xchg
add
push
les
pop
lcall
aas
lock
mov
cwtl
push
jecxz
repz
mov
xchg
inc
in
sbb
fisttpll
fmull
pop
add
jns
jae
dec
add
jecxz
repz
ljmp
arpl
mov
cmpb
fwait
sub
jmp
call
pop
add
or
outsl
std
pop
repz
jns
in
mov
clc
xchg
add
xorl
mov
mov
movsl
aam
inc
add
cld
stos
xchg
fucomp
cmp
add
pop
or
rcrl
rol
ret
dec
mov
lods
mov
popa
mov
pop
out
push
std
mov
pop
stos
rolb
sbb
or
fcmovnbe
push
fstl
lret
sbb
xlat
dec
bound
mov
clc
mov
xchg
jns
jnp
mov
fstp
jecxz
mov
and
cmp
aas
rcr
cli
sbb
or
das
inc
fldl
add
xchg
inc
cmp
cmc
pop
fstpl
lret
aaa
ljmp
push
mov
jo
ror
fiaddl
sbb
shll
mov
dec
jl
xchg
pop
mov
push
pop
enter
out
sarl
xor
add
sti
cmp
mov
xchg
jbe
pop
sbbl
inc
sbb
sbb
mov
loop
pop
jle
xchg
mov
sbb
movsb
pop
fld
fsubr
push
pushf
cltd
lret
mov
cpuid
cmp
adc
mov
cmp
xchg
push
out
sub
icebp
jg
cmpsb
jnp
movsl
int
cwtl
test
mov
cmc
mov
add
rcl
repz
pop
pop
mov
in
js
dec
cmp
dec
mov
mov
push
iret
inc
add
test
cmp
mov
mov
movsb
xlat
jge
mov
in
mov
lcall
pushf
testl
add
jo
add
test
frstor
mov
in
addr16
test
xchg
xchg
pop
rorb
lret
test
mov
shrl
push
out
mov
cmp
and
orl
in
hlt
in
dec
sbb
out
add
fwait
jae
mov
repz
gs
test
out
js
lcall
pop
sti
sub
inc
push
push
mov
jl
or
or
sub
fcomps
aaa
cmc
inc
pop
push
pop
lret
mov
loop
loope
rcrl
enter
xchg
ljmp
int3
stos
fwait
cmp
or
cmpsb
xchg
stos
and
je
sti
cmp
or
insb
add
js
ret
shll
js
mov
xchg
js
fidivrl
out
xor
jns
cmpsb
inc
jmp
stos
or
repnz
dec
cltd
jle
pushf
lret
and
scas
repz
arpl
mulb
adc
test
jnp
sti
movsl
call
fcoms
jmp
cmpl
adc
popf
jno
sbb
mov
mov
fldl
sahf
sahf
out
cmp
sub
pop
dec
in
or
xchg
getsec
pop
fwait
sub
out
inc
cld
add
loop
mov
jg
out
xchg
gs
lock
mov
add
adc
or
int
mov
cmp
test
sub
pop
ja
fidivl
int
movsl
mov
repz
mov
flds
rcl
push
push
jne
sbb
gs
sarb
mov
or
xor
push
jb
shrl
cmc
jl
lods
arpl
lahf
cmc
dec
fucom
jnp
adc
mov
popl
cld
mov
leave
loop
jae
cmp
sub
cld
sar
mov
jbe
daa
adc
int3
mov
sub
push
stc
je
lock
adc
enter
cld
dec
fisttpl
cmp
pop
xchg
in
or
loop
sti
pop
sub
rcrl
pop
sbb
lahf
or
notl
inc
dec
hlt
or
repz
push
mov
loope
loope
add
xchg
subb
push
incl
jnp
dec
flds
mov
add
and
mov
inc
scas
xrelease
into
movsl
repz
call
push
sub
sbb
cmp
cmp
call
in
into
lret
movsl
stc
out
int3
jae
sub
adc
sbb
aad
test
jb
cmp
xchg
xor
stos
pop
sbb
add
out
fdivl
inc
cmc
clc
mov
sub
rcrl
mov
std
stos
push
or
dec
push
lret
sbb
and
bound
lock
push
int3
or
leave
test
imul
inc
push
cmc
lret
push
fldl
fildl
pop
pop
in
or
pop
or
push
xchg
mov
or
dec
sub
xor
pop
adc
ja
sbb
xchg
jne
cmc
inc
movsl
cmp
mov
in
cmp
pop
stc
pop
or
out
cli
rcrb
outsl
lea
pop
adc
cmp
xchg
pop
or
xchg
mov
pusha
pop
add
lcall
sti
add
mov
or
dec
std
xlat
xor
add
xchg
or
pop
cmpxchg
fwait
or
stc
adc
jmp
dec
cmp
mov
stc
repz
cld
jmp
sbb
cwtl
std
pop
movsb
icebp
sti
add
or
in
jmp
popa
stos
js
or
cmc
xchg
or
pushf
in
mov
cli
out
jmp
xchg
fcomp
iret
jl
repz
fcmovnbe
movsb
in
loopne
add
fsts
pop
mov
test
mov
or
add
std
mov
cli
flds
insb
or
rcr
fiaddl
divl
fucomi
out
jecxz
jmp
cmc
fdivs
out
sarb
cld
cmp
lods
or
repz
or
add
inc
loope
lods
mov
cli
add
or
or
js
repz
mov
push
lock
out
jp
inc
fildl
mov
add
clc
cltd
stc
pop
fldpi
push
push
cli
or
iret
incl
mov
mov
loop
sub
jnp
xlat
repz
sti
add
lds
clc
mov
aad
call
loop
add
sbb
out
jl
ret
mov
clc
out
inc
jnp
mov
xchg
sub
in
loop
or
mov
lock
or
add
add
in
cli
cmpsb
hlt
cld
jecxz
int
into
clc
cli
or
loop
fs
aad
jecxz
pop
cli
sti
add
mov
or
ljmp
out
aas
loope
mov
clc
xchg
ss
xchg
lret
push
jbe
jne
pop
daa
add
shrl
xchg
push
lock
dec
das
out
mov
cli
test
or
inc
ljmp
int3
jbe
ds
xchg
pop
xchg
nop
mov
push
testb
sub
or
or
stos
push
lods
call
dec
lcall
call
xchg
xchg
pop
std
out
aas
cmp
lret
cmp
fldl
jmp
mov
std
insl
scas
or
ret
dec
lods
scas
aas
test
adc
int
and
into
shll
pop
in
xlat
xchg
ret
bound
in
rorl
mov
mov
xchg
push
xchg
in
ror
fwait
dec
repz
test
cld
pop
lret
les
fmulp
mov
add
ret
jmp
push
daa
add
pushf
leave
fistl
add
xor
xchg
jmp
iret
movsb
psubusw
fwait
roll
cmpsl
and
std
cwtl
push
sahf
dec
movsb
shl
sbb
nop
mov
loop
or
add
adc
xchg
jecxz
and
dec
adc
fstpl
imull
mov
addr16
pop
adc
shr
ret
xchg
add
rcrl
and
cmp
sbb
cmp
rorl
iret
in
pmaxub
lcall
fs
or
shll
ja
dec
pop
push
andl
rcrl
pop
push
mov
dec
mov
aam
mov
dec
outsb
mov
push
xchg
sti
pop
add
mov
xor
cmpsb
jne
adc
mov
lods
or
cld
mov
push
add
mov
mov
sbb
adcl
sub
xchg
out
pop
loopne
test
pop
or
imul
push
int3
add
push
sub
or
sub
xchg
sub
pushf
xorb
pop
in
mov
cli
data16
scas
sbb
push
in
dec
adcb
or
int3
push
sbb
add
push
mov
pop
fisubs
ret
and
pop
push
jecxz
andnps
cmp
xlat
cld
nop
or
fadds
testb
inc
in
xchg
xchg
lcall
jmp
lods
call
cmpsb
push
adc
pop
add
xlat
in
lea
jo
loopne
cld
stc
cld
stos
or
or
dec
xchg
adc
dec
or
fdivl
xor
leave
rcrl
add
xchg
pop
gs
cmp
or
mov
add
inc
gs
pop
or
xlat
fisubrl
in
test
rcll
add
mov
xor
clc
dec
add
pop
repz
jno
stos
add
adcb
dec
fs
push
stos
gs
adc
push
dec
jns,pt
ret
pop
les
pop
lret
movsl
sub
out
mov
lret
cltd
mov
add
dec
mov
dec
xchg
adc
pop
mov
std
dec
push
cmp
shll
jp
xlat
lret
mov
pusha
fs
or
mov
ss
rolb
mov
dec
jb
push
fnstcw
rcll
mov
arpl
jl
jae
xor
leave
xchg
and
in
inc
xchg
icebp
out
incb
cld
cmc
roll
mov
into
leave
push
fsubr
outsl
in
jecxz
dec
in
into
lods
pushf
push
in
xchg
lret
inc
test
xlat
jmp
sub
adc
ss
ds
int3
mov
add
pop
or
sbb
adc
pop
fnstsw
rorl
stc
rcll
add
xor
or
sub
subl
add
dec
pop
loope
fxch
hlt
cmc
jb
repz
mov
xchg
loopne
xchg
mov
mov
xor
or
scas
inc
fst
mov
xor
jmp
insb
repz
add
iret
jp
sub
pop
mov
je
js,pt
sti
shrl
js
pushf
add
push
test
dec
nop
sub
pop
push
jo
int
loope
cmc
mov
jne
jmp
movsl
ficoms
xchg
mov
jl
jb
sti
loop
cmpsl
mov
lcall
xchg
sarl
mov
repz
out
adc
stc
mov
xchg
dec
jmp
aas
dec
flds
ret
fldcw
in
rclb
adc
js
add
loopne
aad
mov
int
insb
loope
dec
imul
fldt
xor
mov
push
aaa
jp
int3
sti
pop
mov
mov
inc
mov
cmp
clc
inc
jp
cmpsl
ja
lret
xchg
mov
pop
inc
call
sub
mov
mov
xor
shlb
xlat
cltd
or
es
or
dec
add
adc
ror
fcomi
mov
xchg
sub
arpl
jmp
shrl
cltd
shlb
xchg
pusha
aad
insb
or
and
xor
pop
cmp
jmp
cmp
mov
push
mov
mov
adc
testl
in
dec
dec
lods
or
and
and
jno
test
std
pop
stos
pop
shrl
stos
add
mov
xlat
xchg
cmp
in
mov
out
pop
inc
std
add
xchg
movsb
data16
repz
loope
jo
fsubr
adc
mov
and
popa
in
roll
test
aad
lods
fiaddl
jae
mov
pushf
jae
stos
lods
call
es
cltd
pop
into
repz
jp
lock
xchg
roll
and
add
pop
xchg
clc
popf
shll
fcoms
sub
mov
pop
sub
pop
jge
mov
mov
pop
dec
push
decl
sbb
shrl
add
inc
repz
scas
js
orb
out
jb
cmc
sbb
pop
idivb
in
pop
sub
fsubl
push
sub
js
inc
push
cmp
imul
dec
test
arpl
movsl
jmp
cmp
icebp
call
sub
mov
fldt
std
roll
insb
pop
rcll
ja
xchg
pusha
jae
add
bound
aam
xorb
imul
aaa
stos
cmp
xchg
lock
inc
rorb
jmp
sti
add
mov
loope
mov
test
pop
jmp
pusha
in
push
jno
or
dec
or
inc
or
orb
lret
sub
push
pop
scas
jnp
enter
outsb
xchg
mov
popa
pop
sarb
enter
and
mov
mov
add
or
add
ljmp
pop
shlb
push
fsubrp
inc
pop
pop
std
jl
jmp
in
cmc
out
in
lahf
jnp
enter
and
das
or
push
fimull
push
pop
or
imul
or
mov
ficomps
pusha
loopne
std
adc
mov
add
jmp
pop
pop
in
push
mov
dec
or
mov
lock
sti
icebp
fildl
mov
repnz
or
or
stos
pop
movsl
mov
fsubl
stos
aad
push
les
add
loop
fs
mov
icebp
xor
test
mov
in
dec
clc
sti
loopne
incl
or
jmp
add
or
rorl
sub
hlt
rorb
in
stc
jmp
repz
sti
fadds
out
out
and
jmp
mov
rolb
pop
in
hlt
jmp
fildl
push
aad
or
mov
push
out
pop
out
cmc
jge
jne
fcmovnbe
inc
in
aad
clc
add
call
stc
cltd
in
std
movsb
icebp
clc
vcmpsd
nop
call
pop
stc
inc
in
fmul
pop
adc
add
pop
jmp
aam
fldl
or
adc
add
in
or
out
jl
cld
repz
lock
shl
std
stc
sti
fiadds
xchg
add
testb
icebp
cwtl
call
call
jmp
mov
aad
add
loop
fucomp
dec
test
add
call
pop
xchg
xlat
mov
or
ror
out
stos
pop
shrl
mov
sahf
in
dec
add
aad
inc
pop
add
in
add
int3
cmc
mov
in
dec
inc
or
mov
pop
js
cmp
mov
fisubrl
out
mov
xlat
xchg
cmp
loopne
cmp
loopne
out
pop
lret
imul
adc
cmc
roll
sti
lds
push
mov
mov
imul
in
repz
xchg
mov
or
gs
jne
call
scas
and
sbb
test
mov
adc
iret
pushf
iret
lret
sub
loopne
adc
aaa
ret
add
cld
or
xor
mov
js
int3
inc
push
sbb
add
mov
xor
fdivr
sub
add
imul
ret
mov
rcr
push
and
fistpl
push
mov
cltd
out
in
movsl
sub
fcompp
mov
dec
paddusb
aaa
pop
or
fwait
mov
xchg
push
push
test
ret
cmp
mov
pop
add
ja
mov
pusha
daa
pop
inc
repz
jecxz
push
cltd
push
jne
sub
cli
dec
sub
or
push
gs
mov
push
popf
jns,pn
loope
ss
je
sbbb
iret
inc
incb
dec
insl
add
in
mov
mov
rcrb
add
gs
repz
mov
shlb
sahf
push
add
pop
lret
cmp
gs
sbb
iret
sbb
ror
mov
fistpl
or
ja
cmp
js
scas
add
int3
dec
jmp
lret
jne
in
adc
and
rol
pop
cmc
inc
lcall
arpl
sbb
sbbl
test
cmp
test
dec
test
loopne
xor
clc
ret
cli
sbb
jp
pusha
and
cmp
lret
jp
add
push
jecxz
in
fidivl
or
test
int
dec
call
and
stos
jge
test
sbb
rcrb
inc
jne
or
sub
push
lds
lcall
cmp
in
mov
sahf
iret
nop
cmp
xlat
shrl
int3
imul
mov
pushf
sbb
push
mov
pop
cwtl
dec
mov
and
stos
jns
jns
or
clc
xor
movsl
fwait
cmc
mov
test
rorb
lea
lcall
add
test
jp
iret
sub
dec
aad
fisubs
fcom
mov
cmc
pushf
ja
jmp
sub
pushf
pusha
jns
sub
std
pop
imul
sti
and
movsl
bnd
in
out
mov
fs
popa
and
dec
cmp
popa
shll
insb
push
insb
clc
repz
xchg
leave
dec
data16
add
dec
lahf
add
dec
shr
mov
stos
pop
adc
push
push
inc
or
pop
in
push
out
sub
or
clc
or
sbb
divl
and
insb
std
shl
cmp
loope
sarl
stos
pusha
adcl
iret
rorl
push
jge
in
pushf
les
xchg
or
ret
jmp
cld
aas
insb
fmul
inc
jl
orb
or
fidivs
cmp
inc
mov
rep
fs
divl
rcll
mov
cld
xor
cmp
xchg
rclb
fs
inc
xchg
stos
fisubs
inc
xchg
add
test
xor
out
dec
jnp
pop
ss
lcall
lret
xchg
cmc
or
stos
test
orl
dec
sti
adc
push
mov
lock
arpl
sbb
sbb
xchg
push
jbe
or
std
mov
jge
xor
push
sbb
inc
mov
fs
sbb
jle
cmp
out
push
mov
xchg
or
cmp
push
or
roll
jne
stos
sbb
repz
lds
push
jl
adc
dec
xlat
jl
scas
rcl
xor
dec
pop
mov
sbb
addr16
out
cltd
mov
rcll
shlb
dec
mov
dec
lcall
push
push
dec
adc
addr16
cmp
lods
ja
cmc
shr
mov
jle
int3
cld
aaa
or
scas
stc
clc
je
das
add
pop
adc
leave
lods
push
call
orl
int
push
lret
cmp
pop
xor
and
push
push
push
mov
mov
sub
dec
dec
popf
mov
dec
cs
in
in
ljmp
or
lcall
lcall
sbb
or
add
movsb
out
mov
sbb
negl
or
sti
int
int3
xlat
fsts
addl
cmp
push
cld
subl
xchg
pop
mov
subl
and
mov
add
adc
cld
inc
jecxz
sub
shll
insl
inc
dec
xchg
pushf
pop
xor
fimull
xor
sbb
test
outsb
lret
pushf
jle
cmp
mov
popf
sbb
pop
fisttps
js
insb
int3
inc
jnp
push
push
stos
rcrl
rorb
js
mov
inc
jne
cmp
ror
xchg
shll
scas
cmp
loope
cmp
or
int3
adc
sbb
mov
push
jmp
aad
sbb
mov
filds
mov
cmpsb
into
test
inc
jmp
jmp
ds
inc
pop
sahf
outsb
xor
cmp
xor
scas
orl
popa
hlt
lea
js
jp
add
mov
addr16
sbb
sbb
into
jmp
xor
lcall
lret
stos
ja
pop
cmp
ret
mov
lods
inc
pushf
push
dec
js
jmp
imul
repz
xor
int3
xor
into
repz
sbb
lret
xchg
in
addl
sti
cmp
in
scas
test
or
add
test
jecxz
test
or
dec
xlat
loop
add
popf
dec
mov
push
or
or
jmp
pop
mov
dec
mov
dec
dec
or
dec
xchg
or
jge
cmp
xor
mov
or
mov
ficoml
movsl
test
push
add
push
xchg
inc
icebp
dec
stos
jo
mov
aam
or
mov
lds
std
xchg
gs
xchg
add
les
mov
js,pt
daa
pop
and
mov
out
fstps
xchg
sbbl
test
pop
imull
pop
push
add
jmp
and
adc
dec
icebp
std
mov
pop
push
mov
dec
mov
add
add
sbb
jns
in
jecxz
stos
scas
jbe
ret
xchg
repnz
inc
int
xchg
mov
sub
sbb
les
push
and
idiv
fistl
inc
lret
cmc
adc
mov
pop
in
sbb
lea
repz
push
push
xchg
sub
and
dec
lock
mov
pusha
mov
test
cltd
insb
adc
add
add
adc
push
dec
and
xchg
stos
pop
shrl
cmp
subb
inc
or
sahf
fsubl
idivl
out
pop
jae
or
or
stos
mov
lret
dec
xchg
or
sub
sbbb
into
loope
test
sub
or
out
push
std
lahf
insb
mov
cmp
push
or
lds
push
cwtl
loopne
decb
inc
iret
outsb
sbb
cmpsb
addb
sub
sub
mov
inc
int3
or
repz
insl
xor
jae
mov
sti
cwtl
addb
mov
fcoms
add
int3
push
jp
jl
xchg
jb
pop
cmpsb
js
fdivrl
shll
mov
test
test
xchg
fstl
cmp
inc
cmc
fs
inc
shll
ss
std
mov
outsb
mov
lods
jmp
fdivrs
adc
roll
frstor
jle
mov
cmc
icebp
mov
pushf
add
filds
in
aaa
mov
xorb
add
mov
stc
clc
fnsave
out
dec
dec
xchg
int3
fstpl
dec
push
in
fcmovnb
push
mov
and
mov
mov
daa
mov
dec
dec
cmc
es
fidivrl
iret
shl
lret
popf
repnz
fsubs
or
inc
cwtl
test
test
and
pop
inc
arpl
xchg
in
mov
jb
les
pop
cmp
push
mov
js
cld
mov
nop
push
dec
mov
pop
inc
sbb
jl
out
movsb
cmpsb
negb
lods
mov
adc
fcmove
or
cmc
pop
imul
hlt
or
sbb
sub
mov
jge
mov
imul
js
push
mov
cltd
test
mov
jb
mov
push
rcll
mov
hlt
in
cmp
push
xor
lret
mov
pushf
push
mov
rcrl
sbb
enter
icebp
mov
cmc
imul
pop
daa
aam
mov
inc
ja
stc
jae
pop
push
dec
js
jmp
mov
ret
xor
sub
or
fidivrl
rorl
mov
jge
dec
mov
cld
lcall
dec
repz
leave
dec
lods
rol
push
add
mov
inc
out
xor
jns
shll
orb
jl
test
subl
rcll
inc
orb
gs
cmp
aam
movsl
dec
loop
cmp
repz
pop
nop
cmp
add
jnp
ret
pusha
daa
add
or
cwtl
cli
leave
mov
inc
add
ret
fwait
notl
mov
sub
pop
fistps
dec
xchg
lahf
hlt
out
pop
inc
clc
jno
xchg
jne
stos
xchg
jbe
ror
fwait
sarl
or
outsb
pop
or
mov
and
cmc
xlat
in
rol
in
mov
push
cltd
std
jo
inc
rcl
dec
filds
clc
fsubrp
lds
mov
jmp
push
std
dec
inc
fstpt
call
nop
rcrl
scas
enter
pop
je
repz
cwtl
push
adc
xor
loope
repz
jle
jg
or
push
jecxz
notl
or
cmpsb
inc
mov
mov
lds
dec
rorl
lret
push
mov
sbb
jbe
cltd
int3
repz
dec
fdivs
subl
arpl
add
lcall
push
push
jns
js
cmp
les
adc
pop
dec
aaa
sub
xchg
mov
sbbb
fst
dec
leave
lcall
ds
dec
pop
jg
and
pop
mov
push
repz
push
push
aad
fnsave
pusha
and
push
lret
out
pop
cli
cmc
rcl
gs
ret
mov
mov
hlt
inc
dec
cmp
xchg
inc
fisttps
fwait
or
cwtl
xchg
mov
in
xchg
add
xlat
mov
jge
iret
shrl
fsubrp
mov
ret
pusha
lods
lahf
dec
fcoml
daa
fstl
cmp
jnp
mov
mov
or
test
jne
jbe
stc
xchg
ds
mov
in
push
loope
std
cltd
int
fcmovne
jecxz
dec
pop
stos
rcll
sub
mov
push
sub
pop
and
xchg
xchg
in
xchg
scas
bound
jae
jecxz
add
sbb
or
or
jmp
cmc
or
cmp
mov
testl
cmp
add
nop
pop
sahf
loope
lds
cmp
dec
mov
adc
dec
adc
or
push
rorl
out
adc
xchg
loope
xchg
dec
jno
scas
fcompl
push
add
dec
aam
mov
lret
clc
aam
mov
stos
stos
rclb
repz
fildl
rcll
sbb
mov
jmp
push
push
xor
add
aam
mov
ficomps
adc
push
into
fs
int3
pop
iret
mov
mov
jns
test
push
xor
add
jge
pop
fldt
push
dec
dec
xlat
movsl
push
aaa
cmpsb
rcrl
fld
sarl
imul
mov
push
xchg
andl
pop
ss
ret
test
xor
dec
lock
sub
inc
sets
js
xchg
shl
int
xor
cltd
xor
inc
test
out
pop
mov
setb
scas
cmp
sbb
add
cmpsl
cmp
dec
or
jp
lcall
mov
or
xchg
ja
mov
pop
mov
or
jns
mov
jns
insb
mov
xchg
push
xchg
testl
mov
test
mov
pop
leave
iret
lods
push
mov
add
push
mov
xchg
test
ficompl
pop
dec
fistpl
dec
jge
in
push
mov
rcrb
test
xor
dec
pop
dec
push
movsl
dec
push
scas
inc
insb
and
pop
jns
jb
test
sti
int3
divl
adc
shrl
sub
jecxz
loopne
ret
ror
dec
popf
adc
jp
and
mov
lahf
hlt
and
or
stc
gs
mov
andl
lret
jb,pn
jl
cmp
movsl
xchg
leave
addr16
rep
daa
jle
sub
ffreep
in
in
pop
and
stos
cmp
insl
mov
insb
mov
in
std
je
pop
lret
stos
dec
pop
dec
pop
stos
fisttpl
mov
xchg
scas
jp
repnz
mov
insl
mov
mulb
repz
or
das
test
mov
rcll
cwtl
ret
frstor
mov
cld
leave
sarb
inc
int3
lahf
rolb
addl
scas
or
push
in
out
pop
shll
clc
push
xchg
mov
shl
or
lahf
hlt
jg
add
jmp
jb
test
and
fsubp
js
push
sub
push
mov
fdiv
mov
inc
lret
push
in
je
enter
pushf
cmc
mov
imul
roll
aaa
ret
inc
loopne
mov
call
clc
roll
dec
repz
jmp
ja
pop
dec
inc
int3
shll
subl
repnz
pop
or
rep
sbb
enter
inc
adc
shll
push
mov
punpckhbw
icebp
imul
mov
xchg
lahf
pop
cmc
out
jno
aas
pop
push
in
add
mov
pop
shl
or
ret
mov
jmp
insl
xchg
or
in
mov
mov
repz
in
xchg
dec
pop
lcall
shll
mov
pop
push
imul
out
cmc
push
push
push
mov
imul
push
pop
xor
dec
mov
or
pop
inc
mov
jl
shll
cwtl
stc
inc
testl
lods
fwait
dec
sbb
lods
pop
push
cmc
ljmp
push
in
push
add
leave
sbb
in
into
push
dec
ret
movsl
pushf
aad
repz
iret
xchg
clc
sbb
roll
pop
pop
arpl
or
xchg
lret
or
mov
push
in
pop
fadds
jmp
repz
jecxz
fmuls
stc
mov
adc
shll
enter
lret
daa
xchg
inc
sub
aad
xor
fildl
nop
push
out
ret
fcoml
mov
int
into
cmc
pushf
adc
shll
add
mov
adc
or
and
pop
mov
adc
loope
pop
sbb
dec
fstpl
mov
or
adc
cmp
mov
stos
pusha
lcall
in
xchg
fcompl
hlt
sub
bound
adc
clc
sbb
fmuls
dec
stc
xchg
add
out
jo
or
xchg
loop
in
imul
or
js
ret
push
ds
pop
adc
imul
dec
jl
loopne
mov
or
aaa
std
sub
std
icebp
pop
hlt
push
enter
rolb
int3
aas
addr16
mov
int3
stc
sbb
xorb
or
xor
outsb
or
mov
cli
or
cwtl
jb
loopne
adc
sti
or
fiadds
mov
ret
out
or
out
fdiv
jp
std
repz
xor
in
frstor
or
sbb
ret
out
jnp
mov
jmp
aad
hlt
orb
ljmp
fs
dec
pop
cli
or
or
add
or
dec
lahf
or
pop
adc
jbe
mov
in
js
or
push
call
xor
mov
xor
and
enter
add
ljmp
and
stc
or
push
pop
out
push
mov
in
mov
in
ljmp
sbb
in
lods
repnz
ret
stc
add
and
fisubl
sti
out
or
pop
pop
add
push
in
fs
push
jmp
mov
sub
mov
mov
mov
add
in
inc
in
out
clc
cwtl
jmp
fsubr
fidivs
repz
cli
mov
sub
add
inc
fiadds
call
add
cli
add
sub
add
in
std
testb
or
jmp
loope
in
jl
jmp
pop
lock
aad
repnz
add
pop
or
hlt
jmp
jecxz
in
pop
add
cld
out
in
fdivr
cmpsb
or
push
jmp
divl
call
or
fdivrl
fistpll
jl
in
icebp
pop
jp
inc
ljmp
mov
rorl
or
mov
sar
andb
stos
lret
dec
pop
mov
data16
clc
or
push
adc
and
fsubrl
lret
repz
popa
cmp
add
mov
cwtl
sub
hlt
mov
add
int
dec
pop
popf
cmpsb
mov
jo
cmpl
out
cmc
sbb
adc
lock
xor
daa
or
cmc
rol
pop
ds
cld
inc
sbb
add
xchg
adc
rcl
sti
cmc
call
dec
add
mov
inc
out
gs
cmpsb
sbb
xchg
mov
jg
andb
repnz
jno
dec
mov
shll
or
jg
ds
cmp
mov
jbe
lods
jae
out
iret
pushl
mov
repnz
stc
repnz
mov
into
and
push
ja
pop
xchg
lahf
pop
inc
shrl
ret
jmp
mov
out
or
rcll
int3
sub
std
dec
sub
popa
xchg
insb
or
aaa
or
in
insb
in
fmuls
ja
sbb
leave
scas
mov
sbb
sbb
in
inc
mov
jmp
or
pushf
xor
js
lods
repz
test
or
insb
aas
cmp
fwait
jo
roll
fdivp
pop
cld
pop
popf
fnstsw
mov
inc
in
lds
xor
das
out
pop
das
and
sti
aad
push
ss
mov
pop
insb
mov
cmpsl
mov
or
testb
mov
addl
sahf
pop
and
incl
bound
in
mov
fadds
inc
sbb
push
push
dec
cmp
es
shlb
push
dec
lahf
mov
cmpsl
lcall
push
sbb
mov
test
xor
rcl
cmp
repz
rol
lret
or
lods
dec
mov
or
rorb
mov
dec
cmp
roll
iret
xchg
fldl
xchg
mov
int3
sbb
cwtl
cmp
and
ret
dec
fimull
flds
mov
pop
clc
sbb
pushf
lods
mov
or
xchg
orl
xor
jge
movl
repz
inc
test
mov
jecxz
inc
mov
sub
ds
bound
inc
add
push
ret
xchg
and
or
repz
fisubrl
js
mov
fdivs
xchg
daa
test
int3
ret
mov
dec
mov
mov
sub
pushf
aad
add
bnd
adc
shll
add
add
ret
xchg
aad
adc
fnstsw
hlt
pop
adc
arpl
ljmp
jns
and
popf
dec
repz
jns
movsb
jp
out
add
neg
xor
stos
insb
aad
xor
add
loope
mov
ljmp
cmp
mov
ljmp
insb
pushf
test
xchg
xor
out
hlt
mov
sahf
inc
pop
xchg
aaa
pusha
add
pop
add
mov
push
js
dec
pop
push
mov
or
adc
cli
stos
cld
fnstcw
mov
adc
outsb
sbbb
hlt
xor
ds
movb
or
dec
in
inc
xchg
sub
icebp
push
dec
popf
inc
and
sbb
outsl
inc
inc
test
out
cmp
jns
pop
dec
repz
ss
rcrb
or
add
fdivl
out
sub
test
dec
fldl
das
movsb
pop
jle
push
icebp
mov
xchg
hlt
mov
repz
xor
mov
iret
xchg
je
stc
ljmp
mov
sahf
inc
pop
xchg
int3
fwait
in
lea
scas
pop
sbb
scas
arpl
int3
repz
xor
xchg
mov
adc
subl
in
xchg
cmc
cmpsl
and
mov
in
mov
iret
jp
mov
lods
xchg
adcb
pop
jae
mov
inc
mov
jbe
fldt
add
sub
testb
lcall
shll
jnp
test
or
cwtl
sbb
std
fbstp
lds
int3
stc
and
xor
xchg
hlt
daa
mov
lds
fdivrp
lret
repz
stc
mov
push
test
cld
std
fisttpll
scas
scas
jns
sar
popf
or
les
sub
jno
push
stos
shll
out
push
dec
pop
add
in
cmpsl
ffree
push
in
addl
les
or
add
sub
int3
hlt
faddl
xor
sub
pop
js
ret
or
ja
je
cmp
pop
fldt
lcall
dec
sahf
xchg
lea
roll
and
inc
inc
cwtl
cld
rorb
and
jne
daa
push
fadds
or
inc
std
dec
add
sbb
xor
cmp
lcall
daa
cmpsb
inc
push
lods
and
mov
pop
xor
lret
aaa
fbstp
mov
pusha
adc
jno
rorb
xchg
loopne
mov
dec
jmp
out
or
rep
mov
and
rclb
iret
sarl
push
fmul
in
push
sub
in
and
add
dec
std
repz
or
jns
xlat
pop
add
ljmp
dec
cld
cld
cltd
std
inc
jnp
cmp
cmp
sub
cs
or
fsts
movsl
enter
sub
mov
cmp
mov
ds
das
into
xchg
push
push
jecxz
int
inc
xor
add
xchg
xchg
mov
inc
or
sub
cwtl
jmp
add
sub
es
inc
into
aaa
dec
mov
sub
and
int3
sub
stos
pop
sahf
mov
sbb
out
cwtl
ret
sbb
cmp
push
push
jp
int
adc
lret
fcoml
lcall
mov
jmp
mov
dec
jmp
jmp
xlat
daa
xor
push
add
mov
cli
std
je
add
pop
rolb
and
or
mov
lret
xchg
xchg
test
lods
cmp
cmp
clc
add
and
fiadds
andb
jg
jmp
and
std
lret
cmpsl
lock
rcr
rorl
dec
cs
stos
lcall
push
gs
mov
stos
dec
push
mov
pop
push
add
mov
xor
pop
jns
cwtl
or
lret
mov
pop
pushf
fnstenv
sbb
shrl
mov
mov
into
cmc
hlt
ret
and
out
fadd
mov
lock
enter
dec
and
cmp
popf
xchg
aad
cmp
xchg
jl
sbb
push
cli
or
cli
pop
dec
cld
sbb
mov
cmc
aaa
mov
add
in
pop
push
lret
pop
enter
pop
sahf
cmp
pop
mov
call
jne
sbb
mov
iret
mov
push
cmc
add
sub
ds
pop
pop
mov
out
ljmp
or
cmpsb
int3
rcrl
inc
mov
fstpl
idivb
add
adc
lret
subl
lahf
jnp
jns
les
xchg
into
call
fdivl
dec
popf
lea
aad
test
push
jp
jecxz
dec
mov
fistpl
sti
js
in
cmp
xchg
xorl
out
shlb
and
jb
sub
scas
aaa
dec
push
adc
iret
loope
dec
flds
fldt
pop
cmp
dec
xchg
lret
xchg
cwtl
sub
jmp
or
cs
popf
rol
sbb
push
sub
nop
clc
sti
in
cltd
xchg
je
fdivr
xchg
mov
sub
jo
pop
in
dec
mov
js
pop
pop
pop
add
pop
repz
lret
aad
outsb
xchg
out
rcrl
mov
dec
test
iret
mov
and
xchg
and
adc
mov
js
popf
cmp
pop
dec
jnp
or
fmull
dec
lret
int3
push
cld
imul
sbb
inc
in
push
cwtl
mov
aaa
or
jnp
cmpb
jmp
sbb
fisttps
call
mov
out
or
sub
mov
sbb
roll
or
int3
repz
clc
inc
sbb
lods
or
mov
push
inc
pop
jb
cld
lods
inc
cmp
ljmp
dec
test
cld
mov
out
mov
mov
jne
lret
mov
test
cmpb
nop
dec
add
loop
lret
clc
xchg
cmp
push
sbb
fadds
mov
mov
clc
loopne
xchg
lods
lret
daa
mov
ret
sub
mov
daa
xchg
bound
push
and
in
repz
mov
out
and
or
jecxz
test
sarl
mov
cmp
lcall
jecxz
push
not
outsl
call
pop
cmp
out
mov
sbb
sti
clc
iret
mov
jbe
neg
ret
sbb
mov
or
adc
fstpl
xchg
out
aad
mov
xlat
iret
lret
inc
ret
xchg
cmp
xchg
sub
rorb
jmp
mov
fmull
pop
mov
xchg
leave
in
repz
gs
int3
sti
lret
mov
mov
in
int
jp
inc
mov
fbstp
mov
mov
rcr
add
lods
negl
stos
mov
jge
dec
test
cmp
push
cmpsl
stc
das
pop
mov
dec
loop
or
push
pushf
dec
inc
dec
cmc
ret
imul
mov
rcl
xlat
cmpb
adc
xchg
stc
les
clc
push
fsubrl
jg
in
leave
xchg
into
mov
pop
add
pushf
mov
xor
mov
push
push
out
adc
jne
cli
push
dec
mov
popf
fldl
iret
xchg
repnz
ljmp
mov
add
inc
cmp
dec
cmc
and
test
add
clc
adc
push
enter
in
mov
es
cld
mov
or
popf
push
push
in
xor
pop
inc
rorb
aas
test
lret
pusha
lret
in
lods
pop
inc
push
dec
lret
push
adc
mov
psubq
call
movl
imul
or
dec
jne
fldz
cmp
add
arpl
mov
nop
inc
hlt
cmc
in
xchg
mov
fistpll
clc
js
fldenv
pop
repz
fmull
jo
aaa
mov
dec
xlat
dec
pop
imul
lock
mov
in
pop
arpl
dec
xor
xchg
cmp
jmp
repz
xlat
lds
xchg
mov
cmc
add
mov
in
aam
pop
sub
lcall
add
popa
movsl
repz
out
xchg
test
std
cld
add
jmp
or
xchg
or
push
andb
push
sbb
inc
push
out
jns
filds
dec
sub
cwtl
in
push
stos
push
sbb
inc
xchg
xchg
pushf
cmpsb
inc
ret
adc
jb
js
sbb
dec
pop
add
mov
mov
adc
push
loope
cld
loopne
mov
repz
sti
out
insb
jo
jmp
lahf
mov
movb
adc
mov
or
or
mov
jp
xchg
cmp
rorl
pop
dec
inc
or
pop
shll
nop
in
leave
sub
ret
cmpsl
lret
add
bound
setl
enter
xchg
lods
fisubs
pop
or
into
stos
dec
pop
add
js
rorl
dec
push
or
inc
jno
mov
mov
mov
iret
jg
xchg
jnp
cmpsb
dec
mov
leave
adc
rorb
sbb
push
fsts
sub
test
sbb
sub
cmp
mov
pop
or
addl
add
rclb
fcmovbe
xor
sti
fsub
out
xchg
and
dec
mov
mov
cmp
xchg
add
inc
test
push
fs
lock
dec
pop
dec
daa
cmp
adc
loopne
cmp
lcall
lds
mov
fisubl
xor
cld
scas
push
push
cmp
mov
push
jns
lods
dec
outsb
dec
xchg
arpl
inc
int3
cmpsb
aaa
inc
les
repz
idiv
jp
sbb
repz
movsb
call
cwtl
rcll
repz
add
popl
push
divl
cmp
lods
lahf
xchg
cmp
xchg
test
aaa
inc
mov
test
pop
jl
add
pop
fnsave
adc
xchg
dec
jecxz
add
inc
pop
ret
mov
cwtl
loope
in
pop
push
lds
xchg
dec
icebp
lret
xchg
faddp
pushf
pushf
and
adc
mov
cmc
mov
je
mov
ret
aaa
out
call
add
fadd
pop
test
adcl
push
cltd
or
rcl
mov
dec
inc
loopne
pop
rclb
lret
fninit
out
xor
cltd
adc
sub
loopne
lret
xchg
orl
incb
loopne
adc
push
inc
fdivrp
sbbb
cmp
mov
jge
ljmp
clc
repz
mov
xchg
cmp
adc
repz
add
push
mov
pop
mov
sub
push
lret
add
jne
sub
iret
mov
stos
xchg
das
cmc
cs
dec
ljmp
pop
test
jns
mov
addr16
shr
roll
shll
lret
ljmp
lretw
dec
into
mov
gs
stos
test
xchg
hlt
push
fcompl
jg
lds
subb
pop
push
pop
shll
leave
pop
pop
loope
inc
mov
jle
les
jnp
aaa
call
lret
cmc
sub
inc
pusha
and
rclb
push
inc
ret
iret
iret
mov
rcrb
jle
sbb
neg
cli
aad
std
sbb
roll
and
cld
daa
push
xor
test
pop
push
xchg
into
imul
lret
lret
orb
sbb
fmulp
lods
push
dec
dec
stos
sbbb
cmp
gs
in
imul
subb
mov
fwait
mull
ret
sub
test
add
mov
add
pop
jl
xchg
xor
mov
int
adc
test
sar
loop
cltd
nop
cmpsl
js
daa
icebp
cmp
mov
push
xor
lods
pusha
dec
pop
xchg
add
xchg
mov
fcomps
jnp
adc
fs
or
mov
enter
roll
sbb
sub
pop
or
repz
lods
dec
xorl
push
cmc
imul
jno
test
sub
jl
mov
jbe
fiaddl
mov
xor
push
inc
aaa
dec
lret
dec
jp
ljmp
or
fldcw
repz
punpckhbw
roll
push
cmp
xorl
addr16
test
out
inc
cli
mov
pop
mov
xchg
pop
or
or
fcoml
and
ret
js
push
inc
lcall
cmp
test
xlat
fsubrs
pushf
stos
int
je
or
mov
cs
lock
int3
cmc
stc
sbb
test
shll
sbb
mov
and
pop
cmp
loopne
iret
rcll
setge
out
push
adc
paddsw
out
iret
mov
xchg
jo
adc
unpcklps
dec
jg
push
rcrb
ftst
shll
shll
fnstsw
push
pop
add
iret
fcmovnbe
push
dec
mov
rcl
or
push
pop
pop
add
lahf
dec
mov
ficoms
pop
xchg
pop
sbb
xchg
mov
push
iret
cwtl
xchg
cmpl
out
mov
sbb
enter
fsubrs
lret
dec
in
rol
push
arpl
scas
ret
xchg
insb
lret
in
dec
wbinvd
pop
fxch
shlb
dec
je
push
add
lret
fld
pop
sub
inc
aad
sbb
cltd
enter
repnz
mov
mov
jle
aaa
insl
and
push
lret
clc
dec
sbb
shll
mov
pop
push
mov
daa
adc
jne
dec
lock
xchg
mov
repz
jl
mov
push
out
lahf
sbb
std
shl
add
sbb
aad
in
sti
adc
mov
push
scas
lds
pop
or
or
mov
sub
fwait
stos
popa
clc
data16
xchg
sti
mov
and
dec
and
mov
movsb
jmp
sbb
push
pop
xchg
cmp
ds
xchg
repz
cmp
add
add
insl
cld
pop
fwait
dec
into
jp
dec
in
cmc
test
ljmp
adc
and
push
lret
shrl
inc
test
cmp
sub
or
imul
mov
es
dec
mov
add
adc
jnp
outsb
xchg
fsubrs
or
test
leave
out
pusha
mov
sbb
addl
jg
pop
fisttpll
sbb
jns
out
push
js,pn
repz
aaa
sarb
shll
xchg
xchg
mov
ja
mov
and
mov
push
into
outsl
xchg
pop
xchg
shlb
cli
sbb
sti
jns
movsl
and
jno
ds
lea
jp
sub
nop
push
shrl
sbb
stc
sbb
out
xchg
mov
call
inc
dec
loope
inc
sahf
and
shlb
inc
cltd
cmp
repz
sbb
fistl
pop
bnd
lret
lock
iret
es
icebp
lcall
sbb
add
sbb
imul
xor
jge
cmpsb
add
fiaddl
add
ficomps
sbb
bound
cld
and
jmp
cmc
stos
inc
into
cmpsl
hlt
and
lret
ret
mov
cli
or
pop
aam
jle
scas
insb
insb
or
fsin
bound
push
lret
dec
mov
jns
mov
dec
data16
and
rorl
leave
push
cmc
fs
je
insl
addr16
shlb
cmp
and
cmp
add
mov
xor
and
mov
out
jns
cmpsb
xor
js
cmpsl
in
or
lcall
test
jbe
lret
push
and
mov
unpckhps
in
cli
add
and
lods
mov
call
jae
test
sub
push
mov
lahf
test
mov
push
jp
xchg
out
and
or
jb
lahf
and
cmp
mov
cmc
or
sbb
imulb
jl
xchg
fisttpll
cmp
imul
and
bnd
jo
jmp
mov
fsubrp
in
popa
imul
dec
push
movsl
int
dec
addr16
cmp
in
ljmp
add
repz
rcl
sbb
aad
loopne
sahf
in
cmpsl
xor
add
sub
and
jbe
add
dec
pushf
int
lea
lahf
js
in
and
dec
push
and
sbb
adc
push
in
pop
fidivrs
mov
xor
out
hlt
repz
mov
clc
rcl
mov
adc
push
mov
scas
jns
sbb
lret
lods
mov
jae
inc
sbb
jg
insb
cmp
aad
xchg
inc
xchg
imul
cwtl
mov
sbb
fs
sarl
stc
stos
ds
cmp
xchg
ret
mov
pop
or
and
push
cmp
and
inc
popl
and
popa
frstor
fdivl
push
sub
dec
and
outsl
push
fadds
lea
mov
lcall
sbb
push
hlt
push
push
dec
das
data16
push
mov
lea
push
repz
dec
mov
das
out
dec
sub
pop
jns
cld
fisubl
push
dec
out
dec
push
inc
outsb
push
and
int3
mov
inc
cli
jg
cmp
testb
mov
xchg
cli
dec
popf
fsubr
repz
inc
in
idivb
lret
sti
lods
imul
pop
xchg
jb
bswap
or
cmc
dec
in
xchg
cmc
stos
stos
jge
cmpsb
mov
xchg
or
sub
shrb
sbb
cwtl
in
pop
jg
std
and
mov
pop
cs
jmp
xlat
pop
stos
dec
cmp
pop
jae
inc
dec
add
rorl
repz
outsl
imul
jecxz
rclb
dec
push
push
cmpsb
rclb
dec
shrl
iret
sub
sti
and
pop
das
xor
std
jno
rcll
dec
cmpsl
dec
mov
and
mov
ret
jmp
add
adc
js
vhsubps
dec
scas
mov
sahf
pop
xor
popa
xor
mov
mov
int3
push
jle
mov
pop
push
dec
out
in
rorl
fcmovnu
cmp
sbbb
xchg
push
jecxz
movsb
xlat
gs
mov
fcom
lods
xlat
es
pop
or
pop
stos
test
adc
sbb
in
mov
ss
pop
pop
mov
int3
dec
dec
dec
outsb
repz
sub
pop
pop
or
or
lcall
popf
adc
out
sti
fisttpll
xlat
jb
lret
dec
arpl
xchg
dec
add
shll
int3
scas
xchg
sub
out
inc
popa
das
fistpll
je
lret
inc
sti
mov
mov
and
push
ds
mov
ds
pop
fldln2
inc
stos
xchg
add
dec
jp
pusha
pop
dec
leave
mov
in
pop
xchg
std
cmp
clc
inc
popa
sbb
sbb
jmp
push
jmp
add
add
ret
push
scas
cwtl
dec
dec
in
mov
sub
fstl
fidivl
cmc
iret
call
jle
pusha
mov
xor
and
sahf
fcompl
in
out
in
adc
cmpb
inc
mov
sub
push
ret
mov
mov
cmp
es
add
or
jmp
ss
push
add
push
pusha
mov
ja
mov
push
sahf
pop
jmp
xlat
cmc
jne
insb
sub
mov
add
into
dec
fwait
repz
push
cli
cwtl
mov
mov
out
sahf
iret
xchg
inc
popf
inc
roll
xchg
jp
aad
mov
jae
iret
pop
pop
mov
roll
jnp
in
into
shlb
sub
xchg
pushf
push
mov
outsb
cmp
pop
xchg
bound
xchg
test
cmp
cmc
xor
lods
inc
stos
xchg
stos
rorl
push
mov
sbb
cmp
insb
daa
movsb
dec
mov
mov
dec
outsl
mov
xor
jne
sbb
xchg
sbb
cmp
or
ret
aaa
jnp
iret
lcall
mov
jbe
and
dec
dec
push
orb
imul
lret
jns
jmp
out
ja
jnp
xor
imul
or
adc
fstpt
cmp
adcb
sahf
ret
sub
rcl
dec
repz
push
xchg
jl
pop
loopne
mov
mov
mov
sbb
inc
mov
add
push
jo
loopne
push
or
bound
lcall
rol
aad
fstl
jge
shll
add
xor
scas
testl
out
int
aam
int
sbb
fadd
mov
dec
sti
and
lods
jge
test
shrl
int
repz
cmp
mov
push
sbb
push
outsb
jge
inc
sub
das
fcmovu
pop
cmpsb
jl
jnp
loopne
pop
loope
sbb
ret
sub
xchg
mov
ljmp
frstor
test
or
or
aaa
add
inc
push
jae
sbb
fidivs
roll
inc
mov
call
add
xchg
dec
jno
fwait
je
pushf
in
out
and
ljmp
in
andl
add
std
mov
dec
fsts
jle
mov
mov
sahf
mov
mov
or
add
sbb
mov
xchg
popl
rol
call
inc
push
sub
pop
dec
jl
fldt
pop
xor
jno
ret
in
in
adc
xchg
pop
fisubl
pop
and
sbb
mov
push
push
in
cmc
or
jle
push
fstpl
push
pusha
pop
stos
sub
adc
push
inc
pop
mov
push
mov
and
jg
fldln2
push
icebp
adc
fisttps
mov
fdivrs
test
lret
pop
shl
or
fdivrl
pop
pushf
or
rcll
and
jno
int3
sub
cmpsl
aam
mov
pop
xchg
and
loope
mov
add
mov
out
sbb
and
mov
bound
adc
aaa
cmc
inc
arpl
js
cltd
pusha
mov
mov
fst
arpl
inc
ret
pop
mov
ret
sbb
pop
and
stc
cmpsl
mov
movsb
pop
pop
xchg
call
pushf
sub
sub
cmc
lret
dec
sub
mov
fwait
lods
xchg
xchg
xchg
mov
xlat
in
lret
add
fs
cltd
sti
inc
mov
lret
push
push
dec
or
int
or
mov
add
cmp
xor
in
in
mov
shl
cmc
sub
mov
loope
mov
gs
inc
dec
jle
inc
cmp
pop
popa
or
rcrb
cmp
xor
xchg
xlat
jnp
dec
fdivl
sub
fadds
lahf
inc
rclb
mov
or
add
xchg
jmp
mov
pop
dec
xchg
in
pushf
xchg
les
push
cmc
fsub
push
pop
ds
into
aad
add
lds
dec
cld
dec
sub
lcall
in
inc
add
std
mov
mov
iret
lret
dec
ja
add
jmp
movsl
repnz
add
cmp
jb
or
mov
jmp
mov
push
mov
jmp
xchg
fisttps
sub
cmp
dec
std
push
push
fwait
or
lret
lahf
mov
daa
in
dec
mov
sbb
sbbb
dec
lcall
xchg
cmp
adc
roll
pushf
pop
pop
fnstcw
test
inc
push
push
hlt
mov
rcl
scas
add
pop
or
dec
inc
sbb
lret
stc
insl
push
push
or
inc
shlb
daa
shl
cmc
xlat
and
sub
xchg
addb
addl
stos
pushf
cmc
cs
test
add
add
aad
jmp
mov
adc
lret
fmull
pushf
rol
xchg
xor
adc
imul
cmp
cmp
adc
mov
adc
push
in
xchg
pop
pusha
ss
mov
in
ficoml
icebp
rcll
jne
sub
sbb
dec
das
xor
adc
sbb
xchg
mov
cmp
pop
dec
int3
sub
cmp
out
loope
adc
std
mov
and
andl
int3
sub
add
mov
insb
frstor
lock
mov
stc
dec
ljmp
hlt
rcr
xchg
popa
lcall
and
and
sbb
and
mov
fldt
popf
fs
mov
xor
push
xchg
outsb
repz
or
jge
insb
vmovups
pop
aam
rcr
ljmp
add
jne
mov
filds
xorl
movsl
dec
and
int
out
rolb
xchg
mov
fisttpll
mov
bound
pop
lds
ds
sbb
xchg
frstor
ret
movsb
sbb
and
lea
bsf
cltd
movsl
sub
pop
movsb
sarl
mov
ja
test
mull
repz
mov
enter
pop
add
aas
aas
fmull
shll
pushf
lahf
mov
mov
repz
push
xor
aaa
insb
or
pusha
mov
ja
lcall
push
inc
in
or
rcl
cli
pusha
mov
sub
mov
leave
ljmp
dec
push
cld
xlat
and
or
mov
and
fsubr
xlat
fisttpll
out
cmp
cmc
out
aas
in
pop
ja
mov
dec
push
cwtl
pop
insl
call
sti
fistl
push
je
pop
fidivl
sub
mov
sbb
pop
cmp
loope
sbb
xchg
jp
out
cld
or
dec
mov
push
mov
xor
mov
shl
movsl
push
dec
mov
gs
xchg
jb
or
leave
adcl
xchg
daa
jns
shll
push
outsb
mov
adc
pop
jbe
ret
sub
outsb
add
repz
inc
sti
movsl
push
into
inc
mov
jecxz
xchg
sti
push
or
les
push
pop
ret
pop
out
push
xchg
jns
xchg
mov
sbb
cltd
jne
push
dec
cld
ja
cmp
dec
call
dec
arpl
add
fdivl
fucomi
sbbb
ret
ds
dec
inc
ljmp
cmp
aad
test
pop
fsubrl
adc
fs
ja
in
pop
xor
rclb
scas
test
inc
add
pop
mov
mov
cwtl
lds
shll
enterw
xlat
add
push
mov
imul
dec
mov
cmp
cmc
push
aad
mov
iret
in
pop
mov
test
ficompl
js
stos
stos
lock
popf
mov
mov
dec
dec
pop
cwtl
sbb
aam
sub
xor
push
outsb
int
cmc
repz
test
stos
icebp
orl
cmp
inc
mov
stos
mov
cmp
repz
adc
aad
into
add
pop
in
ds
adc
bound
xchg
sbb
or
inc
inc
jno
ficoml
out
dec
mov
popf
xchg
pusha
hlt
cmp
lock
les
push
sahf
cmpsb
cmp
cltd
mov
dec
stos
lret
repnz
les
ljmp
sbb
ret
add
cli
xor
sbb
xchg
xor
sbb
jle
fstps
into
or
push
add
mov
adc
ja
je
mov
mov
pop
mov
aad
push
out
clc
sbb
ja
and
cmp
jle
pop
nop
subl
sbb
ja
mov
iret
pop
inc
cmc
rcrl
bound
jb
stos
dec
push
dec
fcmovnu
dec
sbb
or
int3
sub
in
and
nop
lret
push
int3
mov
pop
sbb
out
hlt
cwtl
loopne
les
mov
cmp
mov
jno
cmc
xor
add
pop
or
int
lods
jmp
push
int
inc
lods
mov
out
mov
movsb
mov
insl
xchg
cwtl
lcall
xor
enter
pop
inc
lock
cmc
xor
add
movsl
data16
cmc
inc
imul
cmp
dec
push
movsb
aad
enter
clc
in
stc
pop
out
or
xchg
popf
mov
and
ss
imul
jp
inc
mov
stos
push
dec
fldenv
or
mov
andl
insl
hlt
mov
int
stos
shrb
or
int3
nop
imul
negl
dec
or
movsb
gs
mov
loopne
ffree
pushw
mov
mov
rcll
push
jl
sbb
and
test
dec
ja
repz
cmp
icebp
outsb
popa
sbb
push
mov
mov
in
add
rolb
pop
fcomps
mov
mov
clc
xlat
in
lea
shl
push
lock
out
mov
fldcw
into
fcoms
mov
ss
add
das
dec
xor
cltd
pusha
outsb
adc
sti
cmpsl
ror
xchg
pop
call
sub
add
cmp
sbb
iret
pop
les
int3
mov
ja
add
sub
ja
mov
cs
mov
es
clc
data16
and
and
push
movsl
fisubs
lods
std
jecxz
mov
rorl
push
ret
adc
inc
pop
fnstcw
int
repz
lcall
push
mov
cmp
pop
add
rcrb
jl
mov
or
sbb
or
cmpsb
jg
je
xchg
enter
mov
addr16
and
popf
outsb
pop
insb
pop
sarb
decb
xchg
mov
and
pop
fs
cld
lods
or
rcrl
add
iret
roll
es
into
lcall
lcall
xchg
mov
sti
pop
cmp
rclb
mov
sbb
mov
orl
xchg
repz
loop
pop
ja
or
fsubrl
jns
xchg
rclb
sub
push
dec
test
rcll
aam
lcall
clc
leave
pop
dec
ret
imul
ja
filds
mov
jmp
arpl
outsl
rcrl
cmpsl
adcb
jp
jae
and
jle
push
in
lahf
mov
rorb
ss
dec
xor
dec
inc
push
or
shl
leave
push
jb
adc
push
jp
fidivl
dec
call
push
je
testb
int3
cmc
adc
pop
inc
cmc
ret
add
pop
out
into
in
jnp
mov
cmp
mov
mov
jecxz
fbld
sub
aas
inc
sbbl
fistpll
ljmp
roll
or
bound
pusha
rorb
mov
push
cmp
shrb
in
or
sti
inc
push
movsl
inc
imull
add
or
or
add
fwait
mov
adc
je
js
xlat
ds
xchg
mov
ds
aaa
jne
jmp
xor
pop
push
push
std
mov
fwait
push
test
mov
adc
divl
cs
cld
popa
xchg
cmp
inc
jle
into
lahf
adc
xor
xchg
cmp
dec
fsubp
loopew
dec
mov
inc
add
lods
inc
pop
scas
jge
add
adc
icebp
addr16
lods
jbe
pushf
ficomps
loopne
and
sub
cli
inc
test
sub
dec
in
xchg
stos
repnz
dec
stos
fwait
shl
xchg
mov
scas
jae
ljmp
push
iret
test
shll
daa
push
aaa
pop
cwtl
pop
sub
add
pop
stc
in
gs
aaa
iret
pop
dec
pop
test
les
rorb
test
mov
pop
stos
push
lcall
adc
loope
test
pop
or
push
clc
or
jp
ret
push
or
pop
push
fdivl
mov
add
cmpsl
xchg
sbb
dec
mov
jmp
shll
mov
sub
jae
xor
push
shll
sub
sbb
sahf
push
outsl
pushf
pop
into
push
sti
xchg
jle
mov
xor
cmc
push
call
lods
xor
sbb
sbb
lods
cmpsl
xchg
stc
mov
or
popf
pop
cmpsb
inc
out
pop
push
imul
lahf
dec
jnp
int3
and
push
fidivrl
xor
clc
stos
mov
pushf
sub
cmp
xchg
mov
fcom
xor
nop
movl
add
and
inc
daa
or
mov
or
pop
int3
pop
adc
pop
sbb
push
lcall
xchg
arpl
loope
mov
xlat
daa
and
adc
shrb
stos
ja
sub
xor
mov
xchg
mov
sub
inc
push
pop
mov
rorb
cmp
pop
out
repz
inc
cltd
sbb
pop
addr16
and
std
dec
jp
pushf
dec
stos
push
jmp
mov
cmpsb
add
fldt
jnp
gs
fbld
xchg
inc
ljmp
cmp
mov
dec
xchg
dec
lcall
mov
out
shll
fs
test
clc
stos
jecxz
out
pop
push
test
sub
out
mov
mov
sti
push
inc
sbb
jmp
into
subl
jae
pop
cmp
or
jno
push
cmp
mov
mov
cli
mov
cmc
xchg
rol
icebp
js,pt
aad
mov
into
pushf
sbb
ret
popa
dec
pop
pop
out
faddl
popa
shl
cmp
and
fnstcw
pop
pop
fsts
stos
lock
push
fsubrl
popf
cmpsl
fsub
dec
in
push
or
sbb
add
jne
sahf
fs
ret
ja
jle
call
jle
cmp
test
jae
dec
rolb
inc
dec
fst
xchg
int3
pushf
pop
or
pop
rol
add
test
icebp
in
lock
js
and
pusha
out
data16
fisttpll
int
fprem1
xchg
das
adc
jg
adc
sbb
inc
and
addb
rcl
cmpsb
add
adc
adc
fnstenv
ret
shrl
add
dec
inc
or
mov
xchg
repz
mov
pop
xchg
call
mov
xchg
insl
adc
sahf
call
je
mov
loop
push
cmp
addr16
adc
adcl
nop
mov
jge
movsb
lret
bound
pop
push
push
int3
sbb
lcall
mov
fimull
pop
fistl
movsb
xchg
nop
sbb
xor
aaa
rcrb
lret
pop
jns
lret
ja
lcall
repz
push
fnstsw
sub
out
imul
shl
cli
lds
leave
or
addr16
push
jecxz
testl
iret
mov
push
or
ja
ss
or
pop
adc
mul
leave
xchg
xor
mov
repz
xchg
scas
adc
ret
into
xor
or
pusha
dec
in
sbb
cmpsl
popa
add
ss
rorb
stc
sbb
cmp
scas
xchg
mov
out
xchg
jo
push
fadd
insb
pushf
loopne
xchg
cmp
and
and
mov
dec
ret
fldt
outsl
push
insb
iret
xchg
ficoml
and
repz
push
xchg
sub
sahf
or
je
int
push
nop
stos
push
shll
mov
stos
hlt
pop
and
fcomp
loop
pop
nop
cmpsl
or
cmc
iret
pusha
mov
dec
dec
in
aam
cwtl
sbb
cltd
add
rcll
pop
sti
sbb
scas
adc
xchg
call
xchg
jbe
test
test
ret
ljmp
rorl
mov
push
add
dec
mov
in
ss
ret
jnp
into
ds
push
xchg
sbb
xor
cmp
xor
mov
gs
inc
mov
loopne
sbb
popf
push
sbb
lahf
xchg
xchg
and
adcb
mov
add
dec
pop
jp
insb
mov
into
sbb
jnp
inc
iret
mov
jg
and
sbb
dec
sub
push
mov
mov
add
cmp
cmpsb
mov
push
nop
mov
mov
stos
add
cmpsb
test
pop
stos
mov
jns
and
sbb
sub
fnstsw
pop
and
lret
movsl
rorl
lret
pusha
fwait
outsb
int3
xchg
xor
jne
sub
test
decb
mov
fdivrl
data16
mov
xchg
cld
jno
xchg
divl
mov
adc
icebp
jge
test
sub
mov
mov
jae
iret
mov
mov
dec
mov
outsl
sub
pop
inc
adc
gs
jnp
ds
cmp
shrl
loope
push
add
cmp
cmp
int
repz
or
mov
xor
adc
push
int3
test
pop
xchg
jno
jg
pop
add
dec
fstpl
jp
cmpb
add
pop
push
pushf
iret
add
rcll
cmpsl
cmpsl
nop
outsb
hlt
or
outsb
mov
and
rorb
rcrl
in
sub
movsb
insb
add
mov
out
js
or
out
js
scas
and
inc
sub
shrb
nop
mov
ja
out
push
mov
xchg
es
or
jo
cmpsl
fwait
test
popa
and
add
mov
push
or
pop
aad
jno
push
cmc
mov
roll
cmc
test
outsb
es
rclb
ss
pop
call
cmpsb
das
and
les
ror
js,pt
pop
lret
dec
imul
cmp
lret
mov
aam
test
dec
lock
dec
sti
xchg
test
loope
repz
repnz
mov
mov
aad
jo
shll
fldcw
cmc
push
xlat
dec
jecxz
mov
pop
aas
dec
fld
fs
push
imul
fsubrl
ret
sbb
adc
push
cli
jae
jno
mov
push
pop
push
in
pop
xor
jge
jmp
and
inc
ret
cld
clc
scas
or
and
iret
dec
pop
xchg
mov
mov
cmpl
sbb
cmp
adc
mov
and
push
push
mov
dec
imull
shll
push
push
lret
add
push
push
int3
repz
mov
out
ljmp
js
mov
xchg
insl
inc
out
sar
mov
and
fwait
pop
icebp
cwtl
push
add
push
pop
std
pop
push
pusha
push
inc
fisttpll
std
pop
in
lea
xlat
rorb
fyl2xp1
std
ror
pop
stos
cmpsb
cmp
push
fsubrs
mov
incl
jl
xlat
sub
push
inc
mov
pop
pop
lret
pop
ror
jmp
lods
xchg
dec
or
cwtl
shrb
pop
test
mov
mov
in
cmp
jae
mov
icebp
jecxz
sbb
jl
dec
in
push
push
mov
shl
testl
ffree
iret
dec
aam
and
les
jnp
jne
pusha
dec
xor
mov
mov
sbb
sbb
mov
shll
xchg
add
mov
pusha
push
js
addr16
cmpsl
in
daa
pop
mov
dec
push
xchg
aam
mov
fs
sub
jmp
decb
ret
scas
ja
sub
loope
dec
leave
pop
sar
add
lret
and
jns
cmp
lret
push
test
adc
push
dec
test
mov
or
mov
pop
outsl
xor
dec
add
fdivrl
sbb
pop
xchg
add
mov
xchg
rolb
daa
js
add
cmp
sbb
insb
add
xchg
lods
lods
in
cmp
inc
xlat
or
jbe
cmp
xlat
ja
movsb
fimuls
xor
fsts
fidivl
lret
iret
cmc
in
orl
rclb
lea
or
cmc
jne
mov
in
sarl
mov
xchg
sbb
jl
call
pop
in
mov
shrl
ret
jnp
jmp
jmp
inc
mov
cmp
xchg
ficoms
lds
mov
push
dec
xchg
cmpl
lods
test
push
push
jle
or
iret
or
jns
xor
cmp
dec
les
add
jb
add
pop
push
inc
or
ret
stos
insl
in
dec
in
lods
imul
and
test
and
adc
je
dec
sbb
push
add
shr
mov
pop
sarl
cmp
cmp
fstpt
sbb
repz
pop
fidivrl
ret
push
imul
mov
stos
xchg
cmp
into
fxch
pushf
sbb
push
rol
jl
adc
in
enter
sub
decb
popa
pop
inc
add
fwait
sbb
clc
ss
inc
mov
aaa
pop
or
stc
xor
push
fwait
cmc
pop
rcll
mov
out
jmp
dec
dec
xchg
addr16
loope
mov
and
dec
popf
shrl
dec
adc
pushf
dec
xchg
ret
push
rcll
scas
pop
mov
or
add
mov
mov
and
cmovg
and
push
inc
pop
xlat
repz
push
clc
std
movsb
mov
int3
cwtl
sub
ja
or
pop
sbb
add
movl
xor
dec
fwait
xchg
mov
aaa
fcomi
dec
pop
xchg
mov
fldl
es
adc
sbb
js
sub
or
mov
paddusw
dec
dec
ficoms
push
movsl
pushf
xchg
xchg
jo
lods
cli
cltd
or
pop
in
insl
movb
insb
sbbl
cltd
or
dec
imul
ja
lods
pushf
xchg
leave
rcl
insl
and
add
sar
xchg
rcrl
push
inc
inc
push
dec
adc
aaa
sahf
sarb
sar
sub
adc
or
or
jle
sbb
dec
pop
fidivrl
lahf
push
imul
gs
stc
pushf
pusha
into
and
fdivrp
insb
aas
in
cwtl
pop
and
xchg
repz
cmc
lods
lret
or
pusha
sub
sbb
pop
lods
xor
sbb
jo
popl
in
add
cs
lret
dec
and
enter
mov
stos
call
or
add
sahf
aad
pop
inc
mov
nop
dec
add
cwtl
push
jmp
pop
or
mov
push
cmpsl
jge
rorl
dec
cs
cmp
push
xchg
rcrl
lock
ljmp
adc
testb
fadd
jle
js
and
sub
out
mov
inc
repz
cmpb
mov
stos
das
filds
lcall
addl
fisttps
xchg
repz
sarb
sbb
xor
mov
lea
cmc
and
repz
popf
sbb
stos
into
jge
scas
mov
loop
pop
push
stc
mov
dec
push
jb
js
call
lock
in
repz
stc
lods
add
lahf
sbb
push
adc
cmp
clc
dec
xchg
rcll
flds
cmpsb
dec
pop
aad
ffree
scas
push
in
jmp
cmpsl
pop
stc
outsb
cmp
inc
and
adcl
lret
in
dec
adc
adc
push
int
repz
in
test
lcall
in
repz
jno
scas
inc
enter
cmp
xchg
pushf
clc
or
outsb
sbb
push
mov
std
xchg
mov
dec
fs
add
inc
ret
dec
ja
je
fstpt
mov
pop
clc
cmpsl
test
addr16
lret
add
rcll
add
ret
mov
insb
js
cs
leave
push
or
in
push
negl
dec
dec
scas
add
pop
pop
or
sar
nop
mov
xchg
movsl
dec
lret
cld
fisubl
daa
xchg
cmpsb
push
push
daa
aam
iret
jae
jg
out
loope
xchg
dec
imull
fldl
dec
jmp
push
insb
jo
ss
cmpb
out
cmp
int
stos
pop
rclb
insb
mov
aad
loope
inc
push
jmp
or
jne
push
add
fs
imull
test
inc
xchg
or
mov
inc
mov
jp
jge
aas
icebp
rclb
test
sub
std
repnz
lods
xor
int3
add
rcr
jecxz
les
mov
out
orl
stos
aas
or
adc
or
fucomp
inc
aas
imul
mov
stos
fstpt
sahf
push
test
rcll
rolb
jg
sbb
mov
std
loope
icebp
in
in
adc
push
std
lock
mov
push
popa
call
mov
mov
mov
or
push
decb
loopne
je
ljmp
sti
cmp
out
in
cld
mov
lods
pop
add
jecxz
jmp
loopne
jae
stos
imul
rorb
add
ljmp
inc
jae
pushf
aad
shr
enter
loop
push
stos
in
push
add
add
std
jne
lret
inc
cmc
cmp
add
std
nop
mov
loop
insb
roll
pop
cmp
es
repz
loope
push
ret
or
mull
imul
add
add
sti
out
inc
popa
ret
in
lock
jmp
mov
lret
ljmp
scas
push
clc
xlat
neg
or
add
push
aas
lods
push
loopne
push
fnstenv
in
add
mov
in
aas
add
cwtl
or
sbb
xchg
or
mov
or
mov
or
mov
or
cmp
ret
jmp
sbb
call
addb
fiadds
xlat
shr
in
mov
push
and
add
stc
stc
insb
in
out
push
stos
in
jge
shl
mov
push
clc
shll
jl
xor
mov
jmp
push
orb
incb
push
ret
or
outsb
add
or
sub
push
add
lock
push
jmp
add
cmc
inc
add
cld
push
idivb
xchg
shl
fldl
iret
dec
jae
sbb
cld
imul
rclb
std
fsubr
lret
mov
add
push
mov
mov
imul
rep
mov
xor
jo
js
repnz
repz
xor
cmpsb
jne
sbb
rorl
int3
jnp
lea
stos
sub
add
push
in
cmp
adc
rcrb
xor
std
sbb
shll
push
and
stos
push
pop
std
jns
add
xchg
jne
mov
dec
fldt
mov
popf
sub
xchg
jp
fwait
repz
xchg
add
cltd
jmp
pop
jecxz
frstor
push
cmp
pop
jmp
nop
inc
cmc
loop
sbb
xlat
pusha
repz
leave
rcll
lcall
rolb
adc
dec
fwait
outsb
xchg
cmp
popa
jo
aas
xor
lcall
ja
daa
out
add
rorl
cmp
jnp
push
scas
push
clc
or
pusha
cmp
outsb
mov
lret
xchg
movsl
adc
xlat
pushf
push
stc
dec
jmp
push
lret
sub
add
out
push
or
lahf
mov
stos
shll
mov
xor
leave
sbb
in
adc
xlat
cmc
push
outsl
stc
xor
sub
mov
push
and
iret
lods
inc
loope
rolb
sbb
sbb
in
jns
in
push
push
pop
outsl
sbb
loopnew
std
push
xchg
inc
icebp
and
mov
cmp
in
jp
adc
leave
mov
add
jp
mov
sahf
dec
mov
mov
stos
xor
movsl
sbbl
cld
dec
lods
jns
mov
fiaddl
add
fcoms
cmpsb
or
xorb
divb
xchg
push
pop
mov
stos
popa
push
ljmp
cmp
mov
mov
sbbl
js
pop
insl
push
insl
or
mov
movsb
sub
and
push
inc
adc
mov
xor
push
insl
pusha
push
xchg
mov
sub
std
fadd
lahf
and
xorb
and
std
fadds
sbb
out
rorl
lods
cli
xor
mov
mov
mov
sub
push
popf
cmp
mov
lods
mov
push
push
leave
xchg
lret
sbb
dec
cmp
test
ja
lea
ret
xchg
xchg
clc
lcall
shl
lods
jecxz
lcall
or
mov
mov
icebp
xchg
imul
clc
jno
push
nop
cmpsl
jge
ss
imull
cmp
addl
xlat
and
adc
aaa
lcall
stc
and
daa
jnp
rcll
test
jnp
push
pop
sub
mov
xor
pop
push
xchg
xor
jp
cmpsl
cwtl
adc
loop
ret
mov
js
xchg
ret
pop
xor
ja
lea
jo
test
cmp
cltd
aas
clc
mov
lods
out
testl
movsb
test
test
push
pop
out
add
push
inc
xor
int
repz
or
mov
mov
xchg
notl
stos
shll
and
or
dec
pop
test
or
adc
je
xor
cwtl
test
adc
sbbb
fdivl
mov
and
test
in
stos
pop
cmpsl
or
sbb
pop
cltd
or
lods
cmpb
jae
loope
sar
lods
cmp
addl
dec
cltd
stos
dec
pop
popf
pop
cmp
mov
jmp
pop
xor
push
inc
in
lcall
adc
orb
lret
cmp
push
scas
pop
pop
insl
xchg
mov
push
jo
xchg
into
add
mov
pop
std
xor
sub
pop
std
pop
lret
lcall
rolb
je
mov
and
mov
dec
imul
jecxz
and
sub
imulb
and
nop
in
faddp
and
jae
cmp
aas
or
int3
push
cmp
mov
ret
mov
jmp
aaa
subb
add
insb
adc
and
ret
push
rcll
cli
nop
jb
and
inc
test
js
in
out
mov
js
cmp
ss
sbb
stos
mov
push
cs
stos
iret
sbb
lock
enter
mov
pop
sarl
sub
or
cmp
xchg
mov
lcall
push
int
cmpsl
ret
sub
xor
add
mov
pop
push
mov
addr16
inc
imul
mov
jne
mov
outsl
cmpsb
cmp
dec
roll
aaa
sbb
fcos
xchg
sub
mov
into
lods
jnp
aaa
adc
fldt
shlb
leave
sbb
int3
adc
adc
aad
adc
cmpsb
sbb
push
mov
pop
mov
or
bnd
jo
lock
mov
cmpsb
pop
dec
add
leave
push
ret
lahf
lock
xlat
orb
sub
lahf
pop
fsts
dec
push
or
push
cmp
pop
sub
inc
add
in
repnz
pop
mov
popl
sbb
push
pop
out
push
or
or
cmc
lods
pop
int
lahf
lret
jg
mov
mov
xchg
cmp
lret
or
dec
movsl
stos
xor
aam
repz
jl
cmp
fnstsw
mov
lret
pop
mov
cwtl
out
xchg
jno
scas
stos
in
iret
jb
mov
inc
test
pop
or
out
and
pop
mov
add
fmull
imul
addr16
orb
pop
sub
mov
into
inc
repz
ret
roll
mov
adc
in
mov
cld
add
fldcw
xchg
jns,pt
and
loope
or
inc
mov
lret
ret
xchg
push
adc
ret
add
jae
and
repz
inc
movsb
or
rorl
out
pop
in
es
mov
mov
pop
test
loop
les
pop
cli
lret
shr
cmc
cmp
sub
repz
pop
enter
adc
cs
nop
pop
ds
push
lret
pop
xchg
inc
dec
xchg
insl
push
mov
jecxz
mov
pop
add
or
aam
mov
add
xlat
fisttpll
mov
add
jp
testl
repz
push
cmp
in
lock
ljmp
jb
jge
imul
xor
fmull
shlb
repz
iret
and
lret
lret
jle
mov
mov
xor
pop
pop
xchg
mov
pop
incb
pop
les
push
dec
out
inc
out
jns
xchg
push
sbb
and
out
xchg
rol
push
cmpsl
mov
add
xchg
jns
adc
xchg
xchg
push
je
jne
ficoms
jp
fadd
stc
popf
jmp
mov
or
and
push
dec
or
cli
test
fidivs
mov
pop
lcall
cmp
cwtl
cmc
lods
fiaddl
gs
fnstcw
push
xchg
enter
add
mov
sbb
shrb
dec
es
icebp
rorl
mov
data16
adc
js
sub
mov
sub
push
mov
xchg
int3
clc
shl
std
test
cld
popf
out
pop
pusha
and
jmp
sub
xchg
repz
mov
fisubl
incl
fnstcw
roll
dec
lods
or
push
xor
sub
stc
mov
inc
dec
rcl
ss
or
or
xchg
push
jo
pop
mov
sub
iret
or
push
dec
sub
or
mov
jne,pt
aad
js
rol
insl
dec
sub
out
xlat
notb
popa
dec
dec
xlat
rcrl
cmpsb
call
sbb
push
in
nop
xor
mov
nop
mov
scas
sti
push
sti
lret
aad
inc
adc
test
adc
xchg
pop
xchg
pop
aas
ret
nop
roll
cmpl
negb
fsub
pop
decl
xor
icebp
cmp
pop
pushf
dec
test
imul
mov
mov
xchg
mov
out
mov
int3
lret
std
sub
in
nop
jbe
fwait
add
xchg
xchg
xchg
sbb
sbb
ret
stos
jbe
xchg
decl
rcll
dec
cmp
ss
popa
pop
xchg
repz
sbb
rclb
jg
fistpl
int3
jecxz
shr
push
cwtl
scas
stos
mov
mov
adc
mov
fisubrs
mov
aad
and
popa
repz
pop
cmc
jae
xchg
mov
pusha
mov
dec
sarb
test
mov
push
dec
fsubrs
clc
and
lods
jmp
insb
sti
dec
sahf
fucom
sub
int3
jmp
add
pop
sar
out
cs
jno
lcall
push
lea
sub
pop
or
sub
jne
cmp
loopne
stos
sbb
xor
call
sub
loopne
mov
js
add
sti
stc
xchg
mov
mov
pop
shrb
xor
mov
jne
fnstsw
push
sar
shll
test
js
push
clc
add
into
std
and
lahf
cli
mov
imul
mov
mov
out
test
stc
stos
add
sbb
mov
in
std
int3
mov
ret
xchg
mov
in
sbb
sbb
cmpsb
cmc
inc
flds
mov
sub
dec
dec
pop
pusha
adc
and
rcrl
mov
add
push
in
push
lods
mov
cmp
notl
push
in
outsb
ja
sbb
push
mov
faddl
mov
jnp
inc
lock
std
iret
mov
cmp
shll
sbb
jmp
lret
jns
rclb
loope
ficoms
push
jg
pop
adc
leave
in
sbb
lods
test
jo
mov
repz
dec
negb
adc
orl
enter
pop
xor
mov
loopne
lods
repz
cmp
and
loop
sub
mov
loop
andb
xchg
aaa
hlt
mov
xchg
adc
clc
pop
imull
popa
jecxz
int3
add
add
sahf
cmc
dec
stc
jne
stos
repnz
test
sbb
test
sbb
arpl
add
mov
add
adc
push
sarl
sbb
mov
daa
cmpsl
cs
mov
in
test
addl
je
lock
nop
cmc
test
loopw
pop
add
ss
jmp
clc
shll
xchg
rclb
rcll
inc
cmp
fnstenv
ds
fwait
sub
in
repz
sbb
xchg
lods
cmc
pop
test
stos
popf
bnd
lahf
das
rcr
je
les
in
repnz
test
shl
in
sub
lcall
dec
jmp
sbb
in
repz
jo
add
fwait
negb
jl
pop
sbb
dec
or
mov
cmc
dec
add
inc
roll
xchg
lock
insl
jbe
hlt
inc
nop
in
pop
pusha
cmp
adc
rcl
int
cmp
mov
sub
xchg
ret
add
push
subb
dec
cmp
lret
or
mov
mov
ja
clc
bound
stos
xor
xor
bound
std
out
in
inc
test
ds
movsb
subl
loopne
dec
call
push
sarx
test
daa
pop
xchg
push
outsb
stc
dec
imul
sbb
cmc
outsl
jae
mov
cld
jg
mov
ja
mov
dec
cmp
push
in
leave
addb
lock
sarb
test
pop
cmp
sar
lret
mov
fimuls
pop
xor
mov
fcmovu
cli
aad
mov
add
and
cld
jo
sahf
pop
leave
int3
repz
xchg
jg
sub
adc
add
aaa
xor
fucomip
scas
pop
and
sbb
je
stc
loop
in
lds
mov
xchg
sahf
test
scas
xchg
pushf
lret
loope
in
xor
sub
pop
xchg
xchg
aam
hlt
std
and
fistps
mov
in
push
sub
enter
fisttpll
shlb
leave
mov
mov
jno
negb
add
adc
pop
sub
mov
pop
icebp
std
lret
cmovg
and
pop
add
push
lods
test
add
cld
inc
insb
repnz
dec
mov
xchg
ljmp
mov
or
jno
cmc
scas
or
jg
xchg
mov
push
stos
test
push
out
repnz
pop
jge
sub
aam
pop
mov
pop
lcall
insl
loope
mov
xor
lock
cmp
pop
stc
fstpt
fxam
xlat
fisttps
sub
test
or
or
vfmaddsub213pd
mov
addb
sti
repnz
inc
adc
test
mov
subl
add
cwtl
sahf
or
push
or
jl
in
jne
push
fcomp
inc
push
jp
cmpsl
les
push
repz
add
lret
or
test
push
cmp
xchg
imul
mov
push
xor
mov
pop
adc
in
xchg
outsb
insl
push
pop
cld
ret
or
in
int
aad
insl
cs
xor
mov
or
repz
in
sar
inc
out
movsl
push
sub
mov
jnp
lcall
dec
outsb
mov
in
aad
xchg
xor
imul
adc
pop
mov
sti
pop
mov
mov
mov
lea
mov
and
repnz
pop
in
loopne
cld
popf
test
jl
inc
xchg
xchg
push
xchg
mov
dec
jmp
and
mov
mov
adcl
mov
adc
in
pop
mov
jp
pop
cmp
insb
sub
mov
lea
fnstcw
add
sti
out
test
gs
clc
mov
mov
popf
inc
repz
pop
xchg
imul
and
xor
xchg
or
xchg
ror
aaa
data16
orl
dec
ss
xor
lret
loope
rcl
xor
jmp
jmp
js
mov
ffreep
sahf
cwtl
mov
sub
jne
cmovnp
pop
cmp
mov
fwait
icebp
sarl
loopne
adc
rcrb
cltd
push
dec
push
stos
test
cli
push
faddl
mov
sub
int3
cmp
pop
sti
int3
xchg
cmp
jge
mov
jl
pop
aad
sbb
fmul
push
cwtl
push
fidivrl
stos
lret
arpl
jg
add
dec
js
or
jle
int3
pop
sub
fildll
cmp
mov
leave
jg
roll
xor
push
xchg
mov
dec
push
cld
jmp
mov
pop
sub
inc
ss
xchg
mov
aaa
jnp
gs
lret
sti
ljmp
jns
lods
cmp
ret
add
dec
and
push
cmpsl
fsubrl
jbe
jecxz
sti
lcall
in
lret
inc
in
test
and
out
cmc
mov
jl
shlb
xlat
mov
mov
arpl
or
xchg
nop
daa
xchg
dec
mov
or
stos
jmp
testb
or
mov
and
sub
push
push
stc
jns
jp
or
mov
and
int
pop
dec
pop
dec
jo
xchg
inc
push
shll
or
rolb
add
or
imul
js
jbe
rcrb
add
fstp
push
add
jp
repz
xchg
add
xchg
mov
sub
cmp
mov
clc
cmc
mov
mov
aam
das
mov
add
je
inc
pop
leave
roll
cmc
pop
std
or
call
xor
push
push
sbb
dec
push
cmc
or
into
pop
mov
mov
fdivrp
repz
je
cmpsl
fsubs
inc
or
ret
insl
mov
xchg
dec
insb
sub
icebp
mov
pop
cmpsb
mov
dec
stc
pop
inc
dec
xchg
shlb
cmp
movsl
movsb
sbb
xchg
aaa
pusha
sub
addr16
push
decl
sarl
cld
dec
ljmp
push
jge
sbb
cmp
adc
dec
jp
add
icebp
cmp
nop
in
loopne
lods
rorl
mov
aaa
aad
adc
push
add
push
fwait
sub
adc
in
std
ljmp
xor
cmp
cli
stos
sub
push
call
popf
add
add
lods
pop
pop
add
xchg
add
je
dec
mov
or
jb
lea
xor
jns
add
call
in
fnstenv
fwait
cmpsl
jecxz
scas
or
testl
addb
stc
into
mov
pop
xchg
push
mov
scas
mov
mov
mov
out
std
repz
cmp
lret
mov
or
and
mov
or
lret
jp
stc
imul
stos
ljmp
std
fcomps
mov
inc
add
mov
add
add
mov
scas
xchg
in
add
js
pop
push
jae
jnp
add
stc
in
cmp
movsl
in
jb
lahf
std
sbb
add
sbb
shrb
jns
lock
in
xchg
loopne
jle
fisttps
dec
loope
xlat
pop
push
test
add
cld
or
aaa
int3
popa
xlat
int
cmc
mov
fsubr
dec
sub
iret
sub
leave
sub
int3
cwtl
jnp
test
dec
mov
scas
xor
inc
cmp
and
test
jnp
pop
pushl
mov
pop
jae
lahf
decl
ffreep
movsl
in
dec
sub
mov
xchg
lcall
sbb
adc
or
sub
add
popa
insb
inc
insb
insb
outsl
arpl
cmovg
stc
fsubr
and
xor
aad
shlb
lods
or
hlt
loopne
add
lahf
sbb
add
inc
or
mov
push
xor
pop
lock
aaa
pop
mov
xor
xor
xor
leave
aaa
into
lods
je
test
pop
test
scas
xlat
mov
push
push
mov
in
add
mov
mov
adc
imul
js
inc
mov
scas
clc
fsubr
push
in
adc
or
adc
add
or
sbb
sub
out
xor
cmp
cmc
push
sbb
sti
rcr
mov
lock
and
mov
mov
dec
aaa
iret
add
iret
icebp
jmp
xchg
sub
jo
fdiv
fst
mov
jo,pt
in
pop
aaa
iret
aaa
push
fs
js
or
cmp
cli
add
adc
or
incl
aaa
mov
subb
aaa
xorl
or
add
stc
pop
xor
clc
fsubr
pop
hlt
or
or
pop
in
notb
in
or
fsubr
pop
jmp
mov
mov
mov
out
or
mov
or
jmp
inc
add
fisttps
iret
pop
dec
aam
adc
sbb
fs
mov
lret
or
out
pop
loopne
mov
pop
mov
movsl
test
repnz
sbb
and
dec
sub
test
addl
jne
cltd
jbe
jmp
in
in
out
pop
in
jns
loope
scas
jp
or
addb
out
mov
adc
or
sbb
sbb
add
pop
out
loope
sub
xchg
das
mov
jbe
mov
cltd
arpl
xchg
jo
rcl
stos
pushf
pop
push
dec
aaa
lret
js
jns
fucomi
stc
popf
mov
sbb
idivb
in
sub
or
cmp
je
gs
pushf
adc
cmpsl
scas
in
cltd
stc
pop
pop
mov
sbb
sub
cmp
popf
dec
sub
dec
push
jno
fsubr
pop
mov
push
stos
dec
lods
push
scas
push
cmpsb
xchg
test
mov
inc
mov
xchg
fdivl
jae
push
nop
xchg
mov
lret
mov
daa
pop
xor
lcall
lea
mov
jp
add
loope
sub
xchg
and
jne
inc
popa
jp
xchg
sbb
fwait
sub
sub
push
pop
or
in
mov
cmp
cmc
add
movb
clc
pushf
test
pushf
jmp
cmp
cmc
test
or
pusha
call
rorl
movsl
inc
mov
pop
cmpsl
pop
lods
inc
mov
das
int3
xchg
jne
adc
mov
xorl
pop
mov
jecxz
loopne
rol
mov
xchg
lods
jno
cmp
scas
insb
mov
lods
les
aaa
add
sarl
pop
mov
cs
cmp
icebp
outsb
adc
jno
jae
jp
push
dec
sub
insl
outsb
dec
and
fsubr
sahf
incb
jmp
or
or
or
fidivs
mov
and
fwait
jg
jg
xor
mov
test
out
pop
and
popf
ret
sti
dec
mov
and
loopne
mov
mov
mov
dec
out
mov
mov
and
and
pop
sub
mov
push
leave
fs
dec
add
sbb
out
cmpl
icebp
push
negb
inc
in
inc
imul
xor
push
bnd
cmp
test
pushf
add
pushf
call
pusha
lea
jne
test
shl
clc
or
mov
test
add
cmp
bt
jmp
sbb
lock
jl
imul
mov
or
mov
mov
int
popf
mov
subb
test
adc
into
jecxz
xchg
push
dec
mov
jb
add
adc
pop
sbb
aam
mov
fstpt
pop
jge
sbb
aam
xlat
imul
shll
jns
cmc
xchg
adc
mov
aad
aaa
push
btc
bsr
sub
pushf
not
pusha
lea
pushf
mov
mov
mov
mov
mov
setno
mov
movzbw
lea
jmp
pushf
movzbw
lea
lea
not
pushf
movzwl
jmp
sub
test
adc
sbb
pop
in
testl
out
xchg
lods
or
sub
in
push
in
popl
sbb
mov
mov
icebp
adc
adc
push
imul
mov
jecxz
mov
xchg
sti
and
adc
js
in
loop
push
fwait
lcall
adc
cmpsb
dec
jne
sarl
cmp
call
pop
push
mov
add
cwtl
sub
and
adc
enter
mov
xchg
add
push
pushf
inc
pusha
call
not
inc
pusha
mov
pushf
stos
pushf
jmp
in
inc
into
neg
out
out
cli
add
lock
sbb
pop
mov
xchg
sbb
pop
inc
and
ja
jge
test
out
ss
aad
icebp
sbb
jne
jnp
arpl
jl
ja
addr16
cltd
mov
loope
aas
or
neg
out
lds
push
cmpsb
inc
cmpsb
dec
test
fldcw
dec
push
cmp
repz
mov
movsl
cmp
bound
aam
xor
and
call
mov
addb
js
or
push
iret
stos
clc
or
loope
push
jp
int
jmp
outsl
mov
cmp
pushf
loop
xor
adc
nop
push
sub
xor
andb
andl
lea
ja
pusha
mov
pop
mov
pushf
mov
mov
call
xchg
cmp
neg
out
popf
jg
imul
andb
and
andl
push
divl
xor
sahf
add
xchg
ss
out
xchg
add
jb
inc
mov
aas
mov
in
das
cmp
jmp
imul
lds
call
in
aas
mov
pusha
add
and
lods
mov
xchg
mov
adc
xadd
xchg
adc
mov
mov
cmpsl
add
sub
movsb
pop
cwtl
std
int3
push
neg
out
push
test
push
mov
cmpsl
inc
cmpsl
dec
lods
popa
pop
pop
mov
inc
xchg
outsl
or
adc
push
jbe
shrb
shr
sub
and
push
ret
nop
push
cmp
or
pop
outsb
shl
sub
pop
popa
cld
add
outsb
cwtl
mov
add
inc
outsb
pushf
decb
fisttpll
enter
scas
in
loop
insb
push
and
dec
repz
and
frstor
ret
addr16
les
and
shll
test
icebp
fsubr
add
mov
js
je
arpl
ficoms
bound
cmp
push
daa
adc
adc
adc
fldenv
sub
pushf
cmp
or
jge
in
pop
pop
mov
push
es
pop
and
call
add
insl
dec
icebp
fsubr
mov
adc
add
adc
fisubrs
add
push
push
sub
push
daa
adc
cld
adc
or
sbb
les
les
sub
dec
mov
pop
mov
xchg
shl
lret
jg
les
xlat
sbb
leave
shlb
ret
int
inc
cmp
inc
sub
jno
mov
cmc
mov
arpl
subl
sbb
lcall
inc
mov
lock
gs
xchg
subb
xor
cmp
fsubrs
jmp
dec
insl
in
fsubr
int3
aaa
fldenv
fdivrl
into
sub
cmp
xor
cmp
mov
stc
pop
jmp
mov
mov
sbb
add
aas
mov
adc
xchg
sbb
out
xchg
xchg
jmp
js
loope
mov
in
push
imul
mov
orb
lahf
stos
sbb
push
mov
mov
shrb
fsts
pop
jno
pop
lock
ja
jo
outsb
xchg
jl
mov
jg
mov
fisubs
dec
mov
daa
adc
lret
inc
mov
dec
mov
es
test
push
sub
jge
add
push
xchg
sbb
fwait
lock
into
sbb
inc
jbe
mov
jnp
out
dec
xor
cmp
xor
lret
scas
cmp
xchg
daa
cmpl
cwtl
aaa
lcall
dec
fnstenv
push
xchg
call
call
out
sbb
push
cli
or
pop
loope
repz
add
in
ret
fisubs
fnsave
les
xor
lods
pushf
pop
jo
cmp
pop
jecxz
push
pop
jl
push
xor
pop
aaa
je
mov
push
push
add
clc
pop
lahf
pop
ja
cmp
or
movsb
and
js
pop
shll
mov
pop
sahf
outsb
cmp
int3
push
lret
scas
jle
ja
push
mov
test
cmp
push
mov
test
mov
push
add
aam
sub
ret
rcrb
jnp
fsubr
mov
enter
aas
sarl
in
ss
dec
repnz
sbb
xchg
or
xchg
cmpsb
pop
call
adc
adc
popf
push
repz
bound
popa
inc
lret
test
mov
jnp
test
xchg
ja
shl
mov
mov
mov
negl
stos
jnp
call
je
gs
mov
fwait
je
test
sbb
aas
dec
repnz
cmc
push
hlt
dec
testl
cmp
push
push
cmp
aam
dec
cmpsl
pop
mov
dec
cmpsl
dec
mov
mov
insl
xor
pop
add
xor
adc
icebp
sbb
outsb
mov
sbb
sbb
ja
sti
mov
mov
xor
xor
daa
sbb
sbb
int
dec
push
jle
repz
xchg
adc
testl
addl
cli
push
in
push
lcall
dec
decl
movsl
outsb
call
inc
hlt
out
icebp
mov
fsubr
pushf
popa
xchg
jle
jbe
push
insl
xchg
fs
jns
insb
fsubrp
xchg
insl
xchg
enter
cs
aaa
pop
inc
nop
sti
test
and
mov
lock
lret
push
rcl
mov
mov
fldenv
popa
cltd
test
jne
and
add
cmp
dec
push
je
or
aas
fildl
pop
jp
sahf
in
and
sub
xor
aas
ljmp
and
cmp
fsubr
adc
adc
repnz
sbb
push
out
loope
nop
xor
divl
jmp
leave
sub
stos
mov
xor
mov
add
fadd
push
pop
pop
mov
push
sbb
repnz
mov
out
mov
ret
data16
pop
fcomip
xchg
mov
xor
aaa
test
jg
push
mov
pop
je
jmp
hlt
in
lock
call
push
dec
enter
cmc
cld
ds
les
fadds
shlb
pop
call
pop
hlt
dec
jns
dec
test
in
lcall
sbb
sbb
in
sbb
pop
and
in
sahf
pop
lods
or
sub
adc
sbb
movsl
hlt
or
or
jp
push
loope
jl
jecxz
push
mov
mov
xchg
in
jo
cmpsb
inc
adc
repnz
push
mov
daa
rcr
lds
je
shl
shl
push
inc
cmp
and
sahf
sub
sbb
gs
inc
test
lcall
lods
fdivrp
push
push
mov
sar
pop
imul
in
fsubr
xchg
repz
or
pop
cli
sbb
jmp
sti
mov
roll
imul
mov
daa
jnp
ret
daa
testl
idivl
inc
sub
adc
lret
sbb
aas
cmp
jno
pop
call
in
les
xlat
loopne
cmp
stos
icebp
jmp
sbb
cmpsb
mov
mov
int
or
loopne
or
xchg
push
mov
sub
and
add
les
cwtl
push
sbb
pusha
fsubs
iret
jl
jge
addr16
xchg
push
pusha
stos
lret
movsl
lea
xor
add
popa
addr16
imul
inc
jb
add
pushf
adc
lods
dec
mov
pop
mov
mov
cld
es
xlat
je
cmc
loope
jbe
xor
mov
pop
hlt
rcr
pop
data16
add
cmpsl
mov
lds
dec
mov
pop
fidivrs
jb
sub
mov
mov
mov
aam
cmp
clc
negl
cwtl
jno
mov
cltd
and
sbb
ret
ja
imul
repnz
pusha
movb
lea
jne
shl
test
xor
adc
mov
mov
push
sub
cmc
pusha
lea
pusha
movl
bt
jmp
ljmp
stc
adc
add
add
or
add
add
push
cli
mov
decl
mull
cld
pushf
mov
dec
pop
xchg
ret
inc
mov
scas
push
cld
xchg
ret
enter
in
push
xor
xor
ss
lods
xor
outsb
jmp
pop
cmp
js
jne
xchg
mov
xlat
fdivrl
ss
and
dec
repnz
pushf
test
popa
fbld
push
insb
ret
gs
inc
xor
loop
inc
mov
pop
adc
fsubr
xchg
out
or
add
add
pop
std
add
add
int3
addr16
mov
jnp
jmp
adc
mov
dec
pop
ljmp
sub
inc
loopne
jno
icebp
xchg
insb
mov
push
mov
mov
imul
mov
jle
mov
scas
adc
push
mov
push
adc
push
sub
fsubr
and
inc
mov
push
mov
mov
test
daa
fadds
nop
jae
ss
push
pop
pop
pop
out
aad
xor
xlat
inc
lods
sti
out
xor
mov
enter
push
cmp
mov
jnp
jecxz
lock
sbb
popa
out
xlat
or
push
mov
push
ja
popa
dec
inc
es
push
in
clc
popf
mov
fimuls
icebp
add
push
mov
or
push
sub
loope
sub
rcl
bt
test
call
dec
sti
jb
fsubr
pop
cmpsb
push
cmpsl
pop
mov
push
mov
cmpsl
mov
sbb
xorl
stos
pop
sti
mov
mov
data16
pop
scas
lcall
sub
or
dec
push
xor
push
mov
in
test
mov
js
mov
gs
mov
push
inc
mov
imul
andb
aaa
lcall
sub
or
or
push
jo
iret
fmuls
jbe
fsubr
mov
shrb
fidivl
leave
sub
popf
or
mov
fbstp
stc
or
imul
fimuls
mov
addb
push
inc
rcrl
dec
aaa
or
sbb
fucomp
sbb
jns
inc
ret
cmp
dec
dec
or
icebp
jns
in
sub
add
or
lcall
daa
dec
or
out
lea
jnp
mov
or
dec
enter
cmpsl
mov
pusha
jmp
lods
icebp
mov
fsubr
pushf
fs
outsl
mov
outsb
xchg
addr16
xchg
pusha
dec
out
sub
cwtl
cmpsl
push
fistps
mov
mov
push
xlat
ret
loopne
adc
outsl
mov
pop
add
in
fdivrs
mov
push
push
cmp
popa
xlat
fisubrl
jo
pop
mov
pushf
ljmp
les
adc
rolb
ljmp
fnstcw
jp
mov
dec
xor
call
inc
out
loop
jmp
push
inc
aas
add
mov
dec
or
fsubr
and
cmp
lret
sub
xor
add
push
test
mov
shlb
or
and
push
mov
xchg
mov
shll
test
mov
add
test
sbb
mov
xor
adc
cmc
adc
arpl
data16
push
mov
jmp
or
lods
test
mov
lahf
cmp
andb
bound
jmp
mov
fsubr
cwtl
jle
push
xchg
jg
gs
push
dec
das
mov
fcmovu
mov
repz
sbb
mov
pop
aam
cmpsb
iret
lgs
push
arpl
fs
movsb
mov
sub
push
out
xchg
sub
mov
out
cmpsl
roll
sahf
inc
jmp
cmpsl
sarl
repnz
adc
rol
push
loopne
leave
test
call
popf
pop
lods
mov
pop
mov
lea
sub
rclb
push
xchg
test
popa
ljmp
sub
xor
cmp
sub
cmp
cmc
into
cmp
pop
imul
mov
xor
movsb
dec
mov
fcomps
loop
adc
lock
xor
cmp
into
cmp
inc
popf
insb
jp
xlat
add
xor
mov
cmp
loopne
xor
pushf
stos
mov
lcall
xchg
js
and
pop
dec
jne
or
insl
js
mov
dec
mov
nop
mov
mov
adc
es
lret
aam
lock
inc
out
in
out
sub
inc
mov
stos
inc
mov
pop
popa
ret
xorl
mov
lahf
xchg
mov
mov
dec
fsubrs
mov
fsubrs
mov
mov
sbb
and
lds
push
and
and
and
inc
cmp
push
loope
in
jmp
lock
jno
mov
out
inc
leave
lea
push
push
movl
pushf
mov
pusha
pushl
ret
lods
in
test
fsubr
andb
xchg
outsl
xchg
jg
insl
jns
jle
xorb
mov
sahf
sbb
arpl
mov
fstpl
lret
call
inc
and
in
push
lret
mov
sbb
imul
jno
imul
addr16
push
sub
shlb
or
pop
in
loopne
in
pop
repnz
out
dec
call
inc
pushf
pusha
push
cmc
repnz
fsubr
or
add
sbb
add
lret
adc
xchg
in
pop
push
sbb
adc
inc
les
pop
mov
into
and
push
jge
add
jge
mov
hlt
mov
pop
movsl
call
hlt
mov
popl
inc
cmp
shlb
pop
mov
icebp
push
and
ljmp
jnp
cmc
jecxz
mov
xor
jp
or
pop
lcall
test
adc
sub
inc
and
sbb
btr
pushl
dec
je
rorl
out
test
jno
push
fwait
jnp
jge
hlt
jae
mov
testb
xchg
sbb
lea
inc
lret
in
movl
xor
dec
sbb
push
andb
jno
or
stc
xor
bound
mov
rorl
pop
jo
pop
cmp
popf
ret
mov
cs
or
pushf
test
sub
aas
jecxz
adc
pushf
cli
jle
push
frstor
xchg
jae
jbe
jge
popa
mov
insb
inc
stc
xor
mov
enter
sbb
arpl
add
jl
test
mov
int
negl
mov
xchg
daa
jnp
cli
rolb
cld
mov
add
mov
adc
test
enter
lret
jmp
inc
cld
inc
decb
cmp
lock
addr16
cli
and
out
inc
cmp
sub
les
daa
leave
sub
and
aad
xor
daa
pop
arpl
jge
pop
lods
popf
jns
pop
inc
add
aas
sub
mov
sbb
out
ljmp
pop
lods
mov
std
aam
outsl
nopl
sub
mov
pushf
mov
jne
lahf
or
subl
push
cmp
push
loopne
mov
jecxz
or
int
jns
push
jg
jno
xor
les
cmp
fsubr
adc
pmaddwd
loopne
ljmp
shr
pop
cmp
pop
movsl
add
ja
ss
adc
loop
dec
add
jnp
pop
dec
movsb
into
ljmp
mov
inc
jno
or
inc
and
movsb
push
sti
lahf
cli
pop
stos
cmpsb
into
lret
hlt
test
jg
pop
cmp
daa
pusha
add
push
mov
enter
shll
fs
add
inc
and
mov
int3
popf
push
movl
pusha
pushl
movl
push
push
mov
lea
jmp
lret
loope
out
mov
into
and
xor
cmp
and
repz
enter
and
lret
inc
fdivrl
mov
sarl
sub
mov
daa
je
daa
inc
mov
mov
pop
in
in
test
mov
fstps
mov
xor
int
inc
cmp
mov
nop
inc
out
scas
sub
or
stos
scas
clc
push
mov
mov
xchg
rorl
push
push
sub
int3
inc
jecxz
xchg
ljmp
jae
jae
popa
ret
js
sub
cmp
add
pop
jmp
jmp
inc
and
pushf
adc
call
lcall
push
mov
inc
stos
push
mov
pop
out
or
cmpsl
in
lods
mov
sub
lea
data16
orb
sub
xchg
out
sub
js
lea
jle
pop
dec
aaa
sbbb
jb
into
subb
jecxz
pop
jno
mov
lret
jne
jl
jns
push
repz
mov
push
mov
pop
fdivr
decl
push
loopne
out
lret
mov
inc
mov
mov
and
daa
xchg
jg
xchg
push
cmp
jmp
movsb
dec
testl
sub
push
sbb
push
add
jne
or
jae
ret
sub
fs
fwait
jp
loope
xor
inc
rcl
sub
push
mov
pushf
inc
inc
add
outsl
or
and
inc
cmpsb
cmc
dec
and
sti
ja
or
mov
mov
cmpb
sub
sub
imul
jnp
repz
ret
jmp
repz
leave
jecxz
out
loope
in
adc
adc
incl
add
mov
sti
dec
sub
lcall
and
pop
dec
add
mov
mov
dec
adc
mov
fldenv
ljmp
sbb
negb
std
add
pop
movsl
sub
jecxz
inc
push
and
pop
pop
cmp
in
call
fdivrl
insb
aam
mov
mul
adc
into
outsb
jno
and
movsb
shlb
ss
daa
fdivr
push
jl
cmpsb
add
xor
ficoml
xchg
mov
outsl
add
push
insl
addr16
mov
pusha
out
lcall
mov
loopnew
in
or
dec
in
jb
in
xchg
push
loopne
in
test
sub
pop
popa
push
mov
into
mov
push
shll
mov
into
imul
shlb
push
xorl
loop
out
fnstsw
fisubrs
leave
sub
xor
into
sub
stos
pushf
jno
fisubs
mov
sbb
stos
add
out
xchg
fnstcw
ja
xor
or
sbb
xor
and
jns
mov
jge
repnz
jg
cwtl
pusha
inc
in
ljmp
pop
ljmp
inc
jbe
push
push
out
scas
lret
cs
xor
mov
rolb
mov
loop
fs
jns
mov
jle
bound
fisubl
mov
sahf
pop
daa
cwtl
and
dec
mov
add
stos
add
xor
jl
or
cmp
daa
adc
sub
mov
mov
jne
sbbb
mov
out
xchg
cmp
push
cld
pop
jecxz
jecxz
out
ljmp
rorb
mov
sub
popf
jle
test
mov
es
dec
mov
sahf
sbbl
popl
xchg
jne
xchg
js
imul
sti
fnstenv
mov
adc
fldcw
sub
jp
test
push
in
xchg
cmp
lods
pop
sbb
inc
stos
fcmovne
cld
inc
inc
cmp
cmpb
aam
push
out
dec
mov
adc
or
outsl
jl
mov
inc
es
xor
inc
inc
movsl
add
or
out
test
std
int
fdivrs
ja
je
jns
popf
push
lods
ljmp
xor
sbb
out
xchg
jbe
arpl
popa
xorb
int
ror
lods
and
mov
lret
repz
iret
xchg
mov
xchg
jae
lahf
pusha
and
pop
sbb
mov
push
adc
stos
sub
cltd
or
inc
jb
xlat
lret
stos
pusha
add
fdivrl
push
inc
js
push
inc
cmc
inc
jb
fidivl
mov
aad
mov
mov
shlb
jl
jnp
push
or
sbb
push
dec
or
out
into
lods
pop
mov
movsl
pop
mov
pop
stos
pushf
aaa
out
pop
decb
mov
adc
push
loop
sbb
jmp
outsl
andl
ljmp
fsubl
push
loop
outsl
in
sahf
outsb
push
jns
leave
xor
dec
dec
inc
mov
pop
outsl
lock
mov
shlb
rcll
lock
out
inc
in
stc
pop
call
or
mov
test
pusha
xchg
cmp
sar
clc
mov
cmc
call
xchg
cmp
js
insl
xchg
imul
mov
cltd
push
pop
icebp
mov
movsb
lahf
mov
jno
movsl
sub
jmp
sbb
fnstsw
and
test
or
mov
daa
test
xor
mov
add
jg
xchg
enter
add
xlat
mov
fldln2
mov
push
ficoms
jnp
enter
ljmp
or
lret
je
aaa
push
or
jns
subl
loop
jmp
fisubrl
or
fwait
pushf
outsb
xor
fsubr
mov
and
xor
sub
and
shlb
fsub
sub
fdivl
cld
loope
jne
ret
push
js
pushf
jl
popa
pop
in
jo,pn
sbb
jmp
ss
mov
iret
jo
movsb
je
imul
pop
jl
les
jno
push
sub
sbb
xlat
sbb
scas
add
loope
pushf
adc
mov
or
sbb
lock
mov
mov
andb
cmp
testl
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
push
cs
fsubr
ljmp
popf
jg
jns
pusha
test
and
push
mov
pop
mov
sbb
mov
adc
or
mov
fs
adc
es
push
sub
outsl
incl
dec
lds
fwait
sub
pop
or
stos
outsl
mov
adc
cmp
nop
xor
in
inc
and
mov
add
add
cmp
jmp
or
dec
in
lcall
adcb
add
push
pushf
pushl
ret
icebp
test
les
iret
and
and
xor
and
cmp
cmp
sub
fidivrs
xchg
sub
sarb
xchg
mov
lret
push
push
js
ds
jb
add
push
imul
out
das
arpl
cmpsb
mov
push
push
lea
sub
adc
out
rcrb
iret
mov
dec
mov
lahf
xor
xor
pusha
lods
fdivl
fsubp
inc
push
jg
push
sbb
out
jge
jle
je
jo
arpl
stos
add
insl
add
imul
pusha
lcall
into
dec
pop
cltd
loopne
insl
dec
shlb
stos
pop
xchg
xor
fstl
jp
divb
mov
jb
xor
push
adc
adc
imul
or
mov
lahf
cmp
icebp
dec
insb
fcmove
cmp
cwtl
ret
pusha
mov
bswap
mov
jmp
stc
xor
pusha
jmp
rol
cmp
das
mov
test
shl
jmp
jg
in
push
jmp
mov
jg
mov
adc
ljmp
add
call
decb
std
addr16
or
push
out
add
cmpsl
cs
out
ljmp
xorl
mov
jg
sub
fimull
jp
fwait
out
xor
adc
mov
or
add
mov
lahf
loope
lods
loope
jb
lahf
adc
imul
negl
push
sbb
in
inc
sub
imul
xchg
nop
into
sub
clc
jne
xchg
in
inc
enter
jmp
dec
push
xor
hlt
stos
sbb
xor
adc
mov
icebp
push
jecxz
notb
pop
jmp
repz
xor
negb
out
fstpl
fsubr
cmc
or
add
adc
adc
maskmovq
testl
pushf
cwtl
sub
dec
insl
dec
leave
in
adc
sub
stos
push
or
cwtl
bound
call
inc
loop
push
call
aas
xchg
sbb
shrl
leave
cmp
lds
int
test
mov
inc
jl
xchg
adc
mov
inc
mov
lock
xchg
in
inc
sbb
movsb
mov
jp
adc
push
jge
std
mov
mov
adc
mov
sub
fsubrs
lcall
jmp
imul
icebp
dec
and
enter
shr
push
cs
sub
pop
stos
pop
mov
sbb
dec
dec
lods
ds
popa
fadd
lcall
adc
push
out
push
jg
and
std
lahf
and
test
and
in
adc
loop
cmp
lret
clc
add
jge
jnp
into
cs
lcall
jno
lds
jne
outsl
sarb
insl
inc
dec
dec
inc
push
dec
xor
cs
dec
dec
add
xchg
pushf
pushl
lea
je
pushf
test
cmp
movw
lea
je
pushf
pushf
mov
mov
lea
jmp
movw
bswap
mov
movw
movb
pushl
pushl
ret
pusha
push
mov
pusha
pushf
pushf
lea
jmp
scas
or
dec
lods
pop
test
test
adc
mov
orl
daa
adc
fildll
xlat
cs
aaa
shll
adc
jle
loop
cmpsb
lret
dec
std
jmp
test
dec
fsub
ljmp
arpl
cmc
mov
sbb
daa
frstor
loope
das
push
outsl
xor
xorb
aas
sbb
adc
cltd
mov
or
js
lock
ljmp
les
cltd
mov
fidivrl
mov
hlt
aaa
add
fsubs
and
jl
lret
movaps
mov
jo
jb
add
movsl
sbb
jecxz
leave
in
push
sub
or
mov
jecxz
add
and
pop
ret
mov
movsb
sbb
lods
scas
xchg
fdivs
mov
lcall
mov
movsl
push
cs
or
lahf
lret
dec
inc
aad
mov
imul
adc
stc
out
push
notl
mov
out
movsl
mov
xor
lret
nop
outsb
cmp
push
out
bound
aam
sahf
into
loop
ljmp
sbb
add
xbegin
fists
sub
pop
pop
mov
mov
sbb
sub
pop
iret
nop
adc
sarl
add
pusha
fwait
add
xor
test
imul
push
jne
out
jmp
or
es
out
loop
data16
jg
bound
mov
outsl
jle
in
fmull
adcb
sarl
bound
xchg
clc
iret
ret
rorb
ds
mov
stc
stc
and
mov
pop
sbb
lret
mov
jp
addr16
inc
test
fiaddl
orl
jp
inc
cmp
mov
mov
jp
jnp
mov
cmp
push
mov
pop
mov
fiadds
sbb
jns
and
xchg
inc
cmp
fsubr
cld
sahf
jne
push
xchg
mov
mov
xor
aas
inc
loope
jmp
xchg
push
and
mov
jecxz
insb
adc
sti
fistpll
jns
inc
adc
dec
jl
aad
push
mov
out
addr16
lods
lock
stos
pop
xchg
mov
shll
xlat
push
fnstenv
xor
scas
adc
cmpsb
das
pop
fsubr
pop
in
out
add
pop
stc
psubb
adc
fcmovnu
or
push
daa
adc
mov
mov
mov
mov
arpl
mov
and
ret
fisttpll
xchg
fbld
xchg
pop
pop
or
push
mov
aas
mov
push
ja
mov
iret
icebp
shrb
ret
lods
xor
pop
aas
or
pop
cmp
fld
mov
sbb
sbb
sbb
push
stos
adc
data16
fdivrs
push
lods
add
ss
lods
daa
pop
add
call
ret
inc
idivl
fidivrs
fucomip
pop
ja
out
dec
inc
adc
das
sbb
sub
mov
out
in
jne
loope
or
sbb
hlt
dec
mov
pop
mov
and
inc
call
mov
cs
adcl
sbbb
pushf
int3
or
test
aaa
popa
in
hlt
adc
sub
outsb
mov
pop
push
inc
and
fs
inc
cmp
std
ret
push
dec
sbb
mov
xchg
lods
mov
or
pop
mov
ffree
in
sbb
ljmp
xchg
dec
sbb
fcomp
xchg
repz
into
movsb
sahf
and
push
in
fwait
loop
ret
je
stos
movsl
adc
sbb
jle
jns
outsb
iret
pusha
sarb
push
and
fildl
cld
xchg
lcall
pop
mov
icebp
xlat
lahf
pop
movsb
fstpl
daa
adc
jmp
stc
or
or
pop
sub
xchg
fldt
xchg
out
fidivs
negl
scas
into
cmp
mov
xchg
notb
jnp
movsb
clc
testl
xchg
cmp
outsb
sbb
or
mov
imul
sarb
lods
cmpxchg
vcmppd
xchg
and
sub
mov
pop
adc
dec
adc
out
bound
ja
jle
jbe
insb
test
mov
sbb
sti
je
mov
dec
sub
pop
dec
shlb
repnz
arpl
dec
lock
out
push
loope
hlt
pop
jae
sub
imul
mov
out
jp
sti
sbb
push
std
sbb
sbb
xor
pop
sbb
out
inc
jecxz
inc
mov
mov
inc
xchg
rorl
call
stc
or
test
xchg
mov
and
xor
adc
test
dec
dec
push
xor
add
rcr
mov
mov
cmpl
and
gs
cmc
movsl
fdivrp
dec
add
arpl
adc
out
loop
outsl
mov
ja
push
popa
fwait
js
movsl
jo
lret
data16
or
sbb
movsl
pop
mov
mov
jge
das
jno
sub
sbb
repz
xor
sarb
test
orb
out
xor
push
das
sub
out
inc
pop
mov
push
sbb
into
lds
test
mov
mov
lcall
mov
in
xor
xchg
out
insl
adc
adc
or
sbb
lock
idivl
sahf
mov
push
xchg
mov
das
imul
xor
aad
add
leave
xchg
sub
std
movsb
inc
jo
je
lcall
sbbl
pop
dec
ljmp
mov
dec
clc
in
ret
shll
push
mov
stos
add
adc
repz
cltd
sub
fnstsw
and
and
xor
shl
lea
add
addr16
cmpsl
dec
adc
dec
jg
filds
into
aam
dec
fidivrs
jmp
lret
sbb
add
push
in
mov
hlt
pushf
imul
sar
xor
sarl
imul
xlat
popa
lret
adc
inc
repnz
lea
jmp
dec
ja
fsubr
mov
aas
fildll
shll
lds
int3
xor
cmc
and
popf
lods
or
imul
ss
inc
in
in
mov
subb
insb
int3
and
and
roll
jmp
fisubl
or
shll
push
lods
jg
nop
cmc
das
xchg
mov
lock
and
cmpb
repz
andl
orl
fsubr
into
mov
movsl
push
stos
push
mov
movsb
inc
mov
cld
sub
push
jnp
mov
adc
lods
pop
sbb
push
dec
mov
xor
push
or
inc
icebp
cmpsb
dec
push
pushf
mov
scas
imul
outsb
add
leave
hlt
fnstenv
push
cmp
xchg
sti
dec
lahf
mov
notl
ljmp
sub
cld
or
fstpt
pushf
mov
movl
push
push
lea
jmp
mov
out
mov
mov
mov
mov
fdivrl
inc
ljmp
repnz
adc
std
jbe
repz
or
test
pop
and
imul
cmpsl
or
mov
call
and
mov
in
and
cltd
xchg
pusha
lods
int
pop
nop
cld
inc
jns
rol
lea
cmpsl
mov
jne
dec
cli
xchg
sbb
fs
test
adc
out
push
dec
and
call
cltd
aas
cltd
cs
sub
loopne
cmpsl
dec
xor
lods
xor
mov
sbb
pop
repz
out
or
pop
stc
sbb
push
cwtl
ret
sti
fcompl
fdivrs
fnstcw
clc
sti
add
fwait
and
sbb
aam
inc
les
xchg
mov
jg
daa
jo
lcall
push
lea
fsubrl
es
inc
pop
jb
sbb
mov
ss
lods
xlat
outsl
or
shrb
leave
jnp
jnp
js
xchg
lods
mov
data16
movl
rolb
and
xadd
pusha
lea
sbb
sub
daa
ror
call
in
mov
or
out
xor
push
mov
inc
cmpsb
pop
mov
out
and
aas
mov
dec
mov
imul
push
pop
inc
ret
scas
shr
dec
shl
jmp
inc
pop
hlt
mov
sbb
loop
hlt
jbe
pop
pop
inc
je
enter
test
mov
jb
and
add
push
mov
push
mov
int3
ret
or
inc
in
jg
push
or
out
xchg
out
adc
adc
push
notl
sub
test
jns
repnz
adc
orb
imul
ds
lock
hlt
jmp
add
xchg
add
mov
jmp
or
mov
push
jne
sub
and
testl
cltd
sub
mov
test
fldenv
and
repz
outsl
or
pop
sub
imul
insl
out
mov
cmp
stos
sbbl
faddl
sar
inc
out
loope
loopne
in
incl
sub
movsb
call
sub
int
push
cmpsl
dec
lods
inc
stos
push
movsb
dec
mov
mov
cmp
adc
sarl
xchg
negl
lods
enter
test
loopne
adc
pop
mov
stos
cmc
mov
pop
in
mov
cmc
into
repz
mov
sbbl
call
shlb
stos
jbe
xchg
mov
xchg
mov
xlat
jns
enter
lds
adc
scas
push
test
test
sub
mov
stc
ljmp
out
fnstcw
inc
idiv
cwtl
stos
cmp
cltd
cmp
jl
icebp
daa
adc
clc
popf
or
outsl
test
bound
icebp
mov
mov
xchg
xchg
sub
xor
dec
cltd
ficompl
out
adc
xchg
cmp
das
nop
mov
mov
outsl
leave
fiaddl
shll
ret
setno
xchg
das
mov
adc
mov
ror
rcr
mov
jmp
xor
fsubr
adc
ljmp
or
and
icebp
daa
adc
enter
mov
mov
mov
aad
outsb
out
fsubr
insb
int
int3
repz
cmpl
aaa
xchg
mov
daa
adc
ja
loope
mov
pop
mov
add
sbb
inc
push
pop
push
fsubr
jae
jle
popa
mov
jne
mov
pop
je
and
icebp
daa
adc
push
mov
mov
imul
mov
scas
cmp
xor
cmp
inc
cli
out
movsb
cmpl
cmp
push
pop
push
sub
les
mov
imul
xchg
popa
adc
adc
testl
leave
xchg
incl
shll
mov
push
sbb
aam
add
out
lret
add
jg
jns
popa
fisubs
test
add
call
push
jb
into
xor
xchg
or
out
push
sub
and
cmp
cmp
leave
cmp
cmp
popf
adc
mov
mov
pop
and
shrb
mov
sbb
inc
mov
dec
xor
pop
fwait
mov
dec
sti
imul
ficompl
mov
and
test
xor
mov
mov
add
aas
mov
jp
in
jg
outsb
fldl
cli
lcall
add
lods
sbb
jo
mov
or
decl
decl
xchg
les
out
movzbl
push
btc
mov
neg
shr
xor
sub
cmc
push
lahf
lea
push
pushf
lea
das
bsr
mov
das
cmp
push
add
mov
test
jmp
and
test
fsubr
inc
es
into
sub
sub
sub
cmp
cmp
pop
adc
ret
push
lods
rcrl
push
add
adc
loope
pushf
push
mov
or
push
pop
push
fbld
nop
out
gs
aas
fisttpll
push
xchg
lret
stos
mov
stos
jmp
push
inc
lods
stos
dec
scas
bts
add
subb
stos
push
test
in
out
push
sub
cltd
cmp
and
xor
scas
fisttpll
xor
popf
xchg
and
push
add
leave
cli
add
movsb
fstpl
add
nop
hlt
daa
adc
mov
sub
cmp
aaa
int
ret
mov
or
and
in
stos
outsb
adc
in
test
mov
jns
ss
out
dec
aas
in
rorb
mov
push
push
and
mov
shlb
mov
push
mov
aam
outsl
add
add
xchg
imul
fstpl
sti
cmpl
pop
out
pop
hlt
pop
incb
out
sbb
cmpsb
lahf
and
out
inc
mov
push
mov
mov
mov
mov
inc
mov
cmpb
pop
jl
sahf
sbb
cmc
out
outsl
dec
insl
lock
add
xor
jo
mov
push
ljmp
mov
imul
dec
mov
aam
std
mov
jno
mov
lock
dec
jae
mov
mov
cmp
add
dec
out
dec
hlt
dec
incl
pop
stc
inc
adc
sub
fs
std
out
lea
jmp
out
pop
rorl
fsubr
adc
inc
jno
push
movsl
inc
aad
in
loop
not
cmc
daa
adc
pop
jb
cwtl
push
cltd
jno
jns
stos
adc
js
fs
loope
jb
jge
mov
std
lret
and
xor
lods
sbb
jno
sbb
lds
sub
add
lds
add
or
pushf
out
dec
dec
fldcw
dec
filds
fsubr
jno
xchg
outsb
xchg
subl
shlb
andl
rcl
in
mov
mov
out
mov
and
push
mov
jl
mov
add
mov
fstpt
mov
pop
mov
loope
or
mull
popa
add
call
xchg
or
push
outsb
icebp
insb
pop
jecxz
jecxz
loopne
repnz
out
push
cld
and
icebp
jbe
pop
and
roll
jge
bound
jp
fs
clc
sub
icebp
cli
outsb
mov
and
loope
in
test
mov
rcrb
into
out
push
out
sahf
cltd
lret
or
into
push
lret
inc
inc
lret
movsl
mov
jns
mov
les
push
mov
sbb
adc
lds
and
dec
ss
pop
ljmp
dec
loope
xchg
das
push
stc
sti
jecxz
mov
inc
add
sbb
add
push
in
add
sbb
sbb
adc
pop
push
bound
sub
lea
jp
outsl
adc
aam
push
sub
ja
push
fwait
mov
fstpt
shll
and
push
mov
lret
nop
mov
mov
xchg
std
ljmp
pushf
mov
xchg
jb
inc
mov
sarb
es
insb
and
cmp
adc
fildll
iret
xchg
nop
xchg
fidivs
int3
mov
push
imul
leave
push
fcomi
xor
into
inc
cmp
mov
bound
add
out
jecxz
jo
mov
mov
lcall
leave
jbe
daa
adc
pop
or
pop
cli
pop
clc
psllq
fistps
sbb
jns
sub
and
adc
adc
lods
mov
loopne
sbb
dec
push
sar
frstor
repnz
dec
jle
jne
sbb
mov
inc
mov
jno
and
jge
and
std
ficoml
sbb
inc
icebp
dec
jmp
loope
incl
pop
mov
xchg
movsb
lcall
push
inc
mov
xor
fsubr
sbb
add
add
sbb
adc
pop
std
adc
vcvtss2sd
sub
xorl
xor
mov
pop
outsb
push
or
test
or
insb
sti
cld
scas
inc
push
fs
sbb
std
xor
adc
out
sub
pop
inc
mov
fldenv
loopne
call
mul
mov
out
mov
shlb
inc
test
insb
inc
lcall
and
test
subl
xchg
sub
dec
fdivl
mov
fisubl
pushf
pushf
movb
movl
movb
call
push
pushf
lea
ja
pushf
mov
push
push
pushf
push
lea
jmp
dec
call
dec
lods
dec
movsb
inc
mov
push
mov
mov
push
mov
adc
sbb
fs
sbb
std
sbb
pop
sbb
mov
outsb
cmp
mov
pop
mov
popw
mov
xchg
push
cwtl
movsb
repz
adc
fwait
or
dec
mov
jmp
hlt
arpl
aas
movsb
addr16
jnp
cmp
dec
sti
push
cmp
pop
movsl
shr
test
call
or
xchg
subb
test
daa
aas
inc
rorb
add
fsubr
mov
shlb
aad
shlb
and
or
inc
in
imul
xchg
cmc
jl
sub
mov
out
cmc
fwait
pusha
xchg
mov
mov
xchg
add
jnp
clc
inc
and
into
push
dec
repnz
or
into
xchg
movsb
nop
iret
stc
fnstenv
pop
mov
pop
xor
sub
push
add
popa
add
push
and
mov
test
dec
in
movsl
iret
xor
xor
and
push
mov
mov
mov
jno
jno
insb
loop
aaa
mov
lea
jo
jae
pusha
pushf
pusha
lea
jmp
fwait
cmp
add
out
jno
negl
stc
sbb
call
nop
and
fxch
scas
hlt
jmp
dec
loop
push
aas
sub
mov
fdivr
repnz
push
cli
mov
bound
ret
loopne
insb
mov
shlb
aas
mov
jecxz
les
sbb
mov
aam
icebp
xchg
xor
and
out
sub
insl
or
aad
ret
jp
addr16
js
xchg
push
and
gs
add
lock
std
std
xorl
ret
jge
mov
std
and
or
adc
mov
xor
imul
lea
test
dec
insl
and
aam
pop
leave
add
jecxz
and
test
pop
popf
nop
mov
outsb
je
enter
es
in
xchg
push
data16
mov
xchg
xchg
movaps
mov
push
fmull
pushf
movl
pushf
push
lea
jmp
popf
ds
fsubr
jae
out
in
sbb
sarb
incl
movsb
fisttpll
daa
adc
jmp
push
and
sbb
push
jge
sub
pop
jns
outsb
lret
js
ja
jb
aad
sti
add
out
shll
aas
fidivrl
ret
cmp
sub
das
shlb
sbb
out
leave
sub
adc
hlt
sti
test
sahf
mov
imul
inc
clc
repz
xchg
les
pop
mov
flds
jo
mov
sub
fidivrs
jg
xchg
lahf
sti
insb
or
int3
jnp
push
insl
ja
jo
xor
rol
mov
hlt
jge
fsubr
mov
aas
fdivs
xlat
xor
daa
xchg
mov
jmp
and
push
stos
loop
int3
rorl
adc
repnz
jae
out
les
mov
clc
ljmp
in
popf
out
jbe
and
sbb
lahf
jl
inc
mov
xchg
sbb
scas
nop
das
and
aas
popa
in
ss
into
in
fiaddl
and
lret
xor
mov
mov
mov
mov
mov
nop
add
and
inc
lea
seta
inc
call
call
and
out
fbld
inc
scas
dec
mov
lea
xchg
inc
call
lcall
les
lock
inc
cmpsb
sbb
aam
idivb
out
mov
jns
push
sbb
mov
add
in
cmc
xor
xor
filds
xor
dec
push
subl
filds
push
cmp
jp
xchg
cmpsl
test
out
out
and
pop
stc
movsb
stc
ret
xchg
ret
cs
mov
mov
xchg
mov
orb
mov
jle
cltd
cmp
jl
jns
js
insl
cwtl
gs
cmpl
dec
jns
jbe
dec
jge
jnp
ss
int3
mov
jbe
inc
ds
gs
sbb
ds
mov
xchg
imul
std
mov
lret
xchg
inc
divl
rol
xchg
addr16
mov
or
rsm
adc
bound
push
lea
je
shr
mov
shld
and
add
shl
movzbw
mov
cmc
test
push
movl
pushf
movb
lea
je
setbe
test
add
shrd
pushf
mov
stc
add
clc
pushl
clc
clc
mov
shl
mov
push
cmp
mov
jmp
movsb
pop
mov
mov
mov
push
scas
push
mov
outsb
pop
int3
aam
enter
ja
dec
mov
sbb
xchg
push
inc
cli
pop
test
push
cmp
adc
loop
stos
out
and
or
sbb
clc
xchg
push
fcomip
es
lods
mov
in
xchg
sbb
xor
xchg
push
scas
add
add
testb
xor
popf
push
repnz
xchg
push
jbe
cmpsb
or
adc
inc
xor
push
sub
popa
jbe
adc
add
je
add
push
icebp
call
pop
sbb
inc
mov
pop
movsl
pop
mov
mov
sbb
pop
in
pop
sbb
test
dec
pop
js
cmpsb
scas
int3
dec
cmpsl
call
mov
dec
andb
jp
popa
out
test
fsubs
xor
into
xchg
das
enter
ljmp
push
repz
int
push
pop
mov
xchg
das
cmpb
xor
js
movsl
int
pop
xlat
ljmp
adc
in
loop
repz
push
cmp
hlt
jno
inc
scas
push
cmpsl
jmp
imul
lods
dec
sbb
hlt
cmp
xchg
pop
fldl
icebp
clc
sbb
cmp
jne
mov
pop
xor
push
jo
and
push
xchg
out
test
ds
lret
ljmp
sub
cmp
adc
out
lea
mov
push
rcl
adc
jne
jb
aas
pop
ret
jno
popa
jl
vpcmpgtd
pop
xchg
cmpsl
pop
insb
fiadds
out
addr16
out
dec
mov
negb
sbb
jge
push
add
cwtl
shrb
adc
jb
test
mov
push
lods
inc
mov
lret
je
js
int
jge
cmpsb
mov
fwait
inc
adc
dec
lods
sbb
xchg
mov
and
push
pop
cmp
incb
mov
xor
xor
or
mov
inc
cmpsb
pop
aam
add
cs
scas
add
mov
sbb
fs
add
sbb
aad
cli
add
cwtl
mov
lods
push
dec
fmuls
sahf
pop
lahf
fwait
ret
sub
ds
sub
mov
dec
stc
mov
pop
mov
sub
addl
add
test
pusha
test
cmp
movb
jmp
pusha
movb
inc
call
jns
push
aas
fsubr
jg
je
imul
orl
xor
mov
jge
xchg
outsb
xchg
jne
sbb
imul
jae
cmp
mov
push
sub
push
mov
xor
fwait
imul
hlt
push
loop
jecxz
out
inc
popf
and
repnz
xchg
xor
sbb
sbb
pop
in
std
add
or
adc
les
out
stos
into
ss
xorl
sub
sbb
arpl
sbb
loop
xchg
fwait
push
mov
popf
rolb
in
nop
cs
shlb
or
xlat
jmp
sbb
cld
pop
mov
setne
cmp
cmpsb
jmp
jl
fwait
pop
xchg
lods
int
mov
adc
jge
imul
cmpsl
in
lea
jg
mov
add
out
insb
xchg
mov
mov
in
ds
test
sub
cmp
xor
out
or
mov
testl
je
push
pusha
pushf
mov
fwait
xor
aas
fdivrl
and
mov
push
fistpll
xchg
movsb
and
ss
pop
fwait
ljmp
mov
enter
int3
cmp
and
arpl
and
mov
xor
fldt
jae
sub
sub
and
mov
pop
mov
jle
and
aad
jl
ljmp
das
fucomp
pop
push
cmpl
xor
loop
dec
sub
and
mov
inc
mov
lahf
movsb
push
cs
mov
add
adc
push
lods
xor
pop
imul
cmc
cmpl
and
shll
jp
test
sbb
xchg
pushf
sub
andl
push
in
mov
push
sub
fs
inc
and
xlat
lea
call
call
push
push
mov
pushf
call
mov
xchg
cmp
out
push
das
xlat
sub
cmp
shlb
lret
ljmp
cli
pushf
outsb
and
ret
push
fsubs
loop
roll
fnstsw
jp
inc
push
jg
pop
test
cmp
push
subl
shll
popa
mov
xchg
andl
jle
pop
sbb
cmp
pop
stos
or
lods
je
sbb
movntq
mov
call
or
cs
out
push
testl
jmp
or
dec
mov
icebp
jmp
xor
or
mov
dec
adc
cmpb
insb
fs
aas
inc
mov
movsl
inc
mov
sbb
fcompp
stos
xor
dec
inc
int3
out
out
add
jge
push
mov
sub
lcall
sub
pop
inc
and
fs
ret
push
xlat
movsl
std
aad
cs
mov
ss
xor
es
adc
jae
ljmp
cmp
call
jmp
out
fsubr
and
inc
test
dec
mov
scas
push
js
mov
sysenter
xor
cmp
sbb
xor
mov
sbb
clc
mov
fnsave
cmc
inc
sahf
sub
lods
out
adc
sbb
xor
push
xchg
mov
xor
pop
jae
es
stos
gs
in
fsubrs
sbb
dec
aad
mov
data16
jp
xchg
jae
repnz
jmp
jmp
push
jl
aaa
in
bound
jbe
push
cmp
out
nop
out
or
or
sbb
pop
loop
in
push
cld
leave
insl
sbb
addr16
aad
shll
rcrl
jae
jae
sti
imul
mov
mov
outsb
repnz
movsb
das
xor
pop
push
sbb
or
ljmp
jle
cmp
je
loope
dec
sub
dec
insb
pop
push
dec
add
cmpsl
cmpl
fimuls
jge
and
xor
mov
inc
jmp
push
fnstcw
fsubr
sbb
jae
addr16
ja
xor
pop
insl
jb
mov
jl
sub
lds
adc
outsb
cltd
sub
aas
add
push
pop
inc
cmp
and
lret
je
sub
xchg
sbb
mov
jmp
sub
jmp
push
mov
add
mov
push
adc
shll
fstpt
fdivrs
leave
out
les
xchg
fwait
bnd
fwait
or
adc
cmp
jo
lods
pop
lahf
rcr
cmpsb
sahf
aaa
jns
xchg
stos
cmc
xchg
js
sar
fstpt
mov
xchg
jmp
xlat
mull
xchg
shll
jns
enter
out
cmc
xchg
xor
adc
sub
jle
xchg
shr
dec
notb
inc
in
clc
pop
ljmp
scas
mov
movsb
call
lock
jmp
ds
xor
xor
ds
int
or
arpl
dec
jae
cmpsl
push
add
xchg
loopne
andl
and
mov
sahf
xchg
imul
mov
add
cwtl
adc
mov
pop
in
outsl
dec
stos
pop
sarl
hlt
data16
jmp
ljmp
xor
xor
mov
inc
lods
and
and
dec
add
mov
arpl
jno
fsubr
mov
xor
sub
daa
shlb
iret
sub
sub
in
sbb
pusha
sbb
fwait
clc
ja
adc
mov
xor
mov
rolb
mov
xchg
shr
mov
stc
cs
xchg
pop
mov
mov
xchg
in
pop
xchg
add
and
add
ds
cltd
or
or
or
xchg
das
mov
test
testl
cmp
movsb
mov
mov
xor
out
xor
scas
dec
mov
mov
pop
mov
rorb
inc
lret
lods
loope
pop
jle
test
and
add
nop
sub
xor
mov
xor
xor
test
aas
xchg
sbb
shlb
les
sarb
xor
lock
cmp
inc
mov
and
icebp
scas
dec
in
jns
aam
or
ja
cmpsl
or
or
jge
mov
cmpsb
pop
mov
xchg
pop
mulb
mov
or
aam
lods
jbe
mov
inc
lds
jnp
pop
rolb
xchg
das
and
loope
mov
mov
dec
inc
and
stos
pop
mov
sbb
imul
inc
call
xchg
movw
mov
pusha
call
mov
mov
fsubr
sahf
arpl
insl
xchg
outsl
mov
je
adc
fwait
stos
or
popa
pushf
fdivl
sub
loop
scas
push
fdiv
loope
cltd
jb
mov
in
sbb
dec
fildll
xchg
xor
popf
gs
sbb
pop
mov
add
idiv
fwait
cmp
in
push
add
sbbl
in
inc
stc
inc
hlt
inc
lock
outsb
sbb
aam
dec
aam
cmp
call
je
insl
aaa
fsubr
inc
mov
mov
push
mov
scas
dec
mov
mov
movsl
or
sub
test
imul
push
inc
pushf
insl
cmpsb
mov
add
xchg
sarb
jae
insl
xchg
xorl
aam
xchg
adc
adc
jge
sar
sub
stc
mov
sbb
addl
adc
mov
add
sahf
in
loope
push
lcall
pop
shll
fsubr
adc
cmpb
push
or
pusha
push
es
pop
leave
daa
adc
or
test
jg
jo
jnp
cmp
out
mov
mov
popa
das
adc
pop
test
leave
call
jb
cmp
push
jle
test
out
mov
and
inc
xor
cmp
mov
cwtl
and
and
cld
scas
incl
outsb
je
jp
fsubr
push
mov
mov
mov
mov
xlat
cltd
jecxz
aas
es
daa
adc
mov
push
jge
andb
dec
cs
dec
jg
jnp
cmp
cmpsb
sbb
or
movsb
push
sbb
inc
mov
scas
xchg
stos
orl
adc
pavgw
mov
sub
int3
and
aad
xor
add
push
std
pop
sbb
out
ficoml
and
lock
mov
out
mov
sbb
add
enter
fcoms
xchg
repnz
jp
sti
sahf
jnp
jb
iret
xor
out
cwtl
fadds
in
loopne
shrl
sti
adc
mov
movzbl
mov
lret
test
and
rcrb
sgdtl
adc
pushf
xor
out
pop
ds
cmp
shlb
aaa
add
pushf
add
loopne
insb
icebp
sti
int3
xchg
xchg
jns
hlt
enter
sub
push
rcl
push
inc
add
addr16
pop
adc
cmp
inc
pop
es
adc
scas
cmp
shl
incl
jge
xor
stc
ret
fwait
mov
pop
cmp
icebp
dec
hlt
dec
jecxz
jmp
xor
adc
fidivrl
dec
ret
out
push
js
popa
subb
adc
push
adc
cmp
add
daa
adc
mov
shrl
les
jl
dec
and
adc
fsubr
mov
xchg
cs
cmp
fldenv
mov
jle
iret
daa
adc
stos
push
and
sub
adc
pop
std
push
negb
loope
cmp
mov
cmp
popf
iret
daa
adc
pop
dec
int
push
cmpsl
pop
mov
mov
push
movsb
pop
mov
fs
lods
push
add
xlat
sub
push
jno
jp
lock
cmc
dec
jecxz
push
repz
dec
inc
mov
xor
out
fsubrs
shlb
ret
sub
sub
daa
ret
and
or
or
push
sbb
int3
xchg
adc
cmp
nop
inc
es
mov
xor
sbb
jb
mov
xchg
je
hlt
jmp
sub
push
mov
lods
dec
cmc
push
xlat
mov
pop
mov
cmp
xor
sub
repnz
xbegin
out
xor
inc
mov
pop
cmpsb
dec
scas
push
jo
gs
and
loope
pop
mov
xor
mov
ja
push
xor
add
cmpsb
cmp
mov
jp
lds
xchg
leave
lahf
pushf
movsb
pusha
add
pop
push
scas
push
imul
mov
pop
xlat
mov
dec
xchg
jne
aaa
cmp
lret
mov
lds
pusha
iret
jno
outsb
shrb
xor
scas
push
imul
call
rep
mov
mov
pop
pushf
mov
push
pushf
lea
jmp
cmpsl
shrb
adc
sbb
pop
sti
push
notb
call
add
add
sbb
hlt
mov
mov
dec
sbb
cmp
cmp
xlat
cmp
sbb
out
xchg
movsb
push
lret
mov
push
mov
mov
cs
xchg
cmp
nop
adc
xor
adc
clc
or
jo
jmp
push
outsl
jmp
pushf
jmp
shlb
popa
fidivrs
fnstcw
das
or
mov
push
sub
int3
scas
inc
movsb
push
movsb
dec
mov
test
mov
and
out
sbb
jnp
dec
stos
out
and
pop
or
je
movsb
xchg
sub
xchg
pop
dec
pop
xor
clc
add
pop
cmp
enter
mov
adc
pop
insl
scas
xchg
imul
mov
dec
dec
cmp
mov
push
sub
inc
fstpt
cmp
not
stc
mov
push
leave
shlb
dec
mov
and
adc
mov
and
sub
div
outsb
test
lods
adc
stc
jmp
ret
jmp
movw
call
cli
dec
les
xchg
imul
fwait
jae
bound
movsb
add
mov
push
repnz
js
add
aaa
fucomi
rclb
xchg
add
ret
rcrb
mov
leave
dec
mov
mov
dec
jbe
lcall
fnstsw
pop
sbb
adc
test
mov
addr16
in
add
mov
inc
pop
mov
imul
fisubrs
xchg
sub
cmp
inc
push
xor
mov
add
push
pushf
pushf
lea
ja
not
pusha
call
dec
clc
jno
fsubr
mov
xor
fldcw
fsubs
and
ds
ja
cmp
shlb
jns
loopne
aad
push
inc
daa
mov
pop
jg
and
mov
adc
fnstsw
sbb
scas
sbb
popa
popa
jg
jp
out
in
loopne
ret
out
push
outsl
nop
insl
mov
bound
pop
gs
ds
add
push
fcomps
sbb
adc
cmp
dec
mov
and
push
sarl
dec
data16
notb
pop
xor
mov
outsb
mov
fidivrl
adc
mov
lock
fldenv
add
lret
imulb
sub
stos
and
ds
into
xchg
sbb
jne
pop
je
push
push
mov
shl
push
mov
je
outsl
shrb
ja
popa
shlb
or
or
fwait
pushf
mov
movsbl
pushf
movzbw
bswap
mov
push
movb
push
push
pushl
ret
sub
bt
test
cmp
bt
pushl
popl
movb
cmp
cmp
call
xorb
sbb
out
daa
adc
xor
xor
out
mov
adc
popf
cmc
or
pop
testb
add
cmp
cwtl
or
popf
xor
test
ds
pop
xchg
mov
movsl
ds
sub
imul
sbb
xchg
in
lods
idivb
sbb
pop
outsb
iret
mov
pop
mov
scas
mov
ficompl
mov
aaa
cmp
adc
push
fnstsw
shlb
adc
sub
push
mov
jg
jge
add
add
test
pushf
aaa
in
jno
adcl
pop
add
push
fldenv
mov
pop
sbb
shlb
aam
stos
mov
push
aaa
pushf
push
pop
ror
xchg
jmp
imul
or
sti
sahf
addr16
hlt
push
ljmp
dec
ljmp
sbb
xchg
mov
out
cmpl
cwtl
jg
jp
data16
stc
jne
jl
inc
std
cmp
jo
fidivrs
add
outsl
out
inc
mov
cmp
jns
xor
xor
adc
ret
xchg
and
fists
les
sbb
push
or
into
and
xchg
push
cs
jns
imul
fucomip
les
cmp
push
stos
sbb
inc
mov
lods
mov
in
inc
pusha
lea
jae
bswap
stc
mov
bswap
movsbw
or
bts
mov
rcl
pushf
mov
sub
js
xor
test
test
bt
bt
repnz
call
mov
stos
sub
out
outsb
or
push
cld
adc
add
sbb
or
or
add
insb
xor
and
jae
mov
mov
lods
xchg
push
lods
out
inc
push
mov
andb
leave
xchg
jbe
adc
mov
mov
cmp
mov
ja
push
mov
ja
ret
push
dec
cmpsb
dec
ja
js
jge
arpl
jnp
popa
adc
outsl
movl
ss
inc
add
into
inc
mov
pusha
movb
pusha
lea
jmp
fisubl
int3
xchg
fistpll
xchg
dec
aad
hlt
push
or
inc
test
test
mov
xor
add
sti
and
xchg
por
lods
inc
mov
add
sti
aaa
test
test
and
xchg
test
inc
dec
aad
test
cld
mov
scas
add
sti
and
cld
xchg
adc
sti
inc
test
test
cld
xor
sub
sti
mov
cld
adc
std
push
enter
mov
test
test
mov
sti
nopl
stos
cmp
cmp
sti
scas
test
test
cld
mov
cwtl
add
sti
xchg
jmp
aam
lds
mov
test
test
cltd
mov
add
cld
dec
xchg
or
test
test
cld
mov
scas
ret
fidivl
int3
push
icebp
stos
lods
add
daa
fcmovne
mov
mov
add
cli
lret
push
inc
stos
mov
sti
lods
test
test
adc
dec
adc
test
test
cld
test
pop
pop
in
and
test
xchg
pushf
lret
xchg
stos
push
enter
inc
add
sti
mov
cld
sub
pop
mov
pop
sti
adc
test
inc
inc
stos
mov
sti
cs
test
cld
mov
adc
hlt
mov
inc
sti
shrb
sub
push
sti
fwait
test
test
cld
xchg
mov
push
adc
sti
ret
test
test
cld
cmp
stos
xor
cmpsl
test
test
xchg
mov
inc
sti
mov
and
mov
shlb
scas
add
cli
mov
mov
add
sti
push
jmp
xchg
enter
cld
inc
cmp
mov
xor
mov
sub
cmpsl
test
xchg
mov
push
or
test
test
mov
scas
add
sti
cmpsl
test
test
cld
fwait
xchg
stos
xchg
mov
inc
sti
inc
test
test
mov
scas
add
sti
cmpsb
test
test
push
inc
iret
test
or
roll
cmp
cmpsb
test
test
enter
dec
add
sti
mov
cld
mov
stos
sub
sti
and
adc
stos
enter
les
sti
cmp
sub
stos
and
and
sti
sbb
dec
adc
enter
mov
xor
mov
sti
push
test
or
rolb
mov
sti
xor
mov
xchg
add
jnp
scas
fcmovne
inc
test
test
mov
stos
xor
movsb
test
test
xchg
mov
stos
lret
shrb
cs
sub
sbb
add
inc
stos
cmp
sti
xor
fcmove
push
push
icebp
stos
cs
sub
pop
mov
inc
lret
stos
or
xchg
mov
stos
or
dec
test
jl
dec
cmp
fscale
dec
ret
xchg
cmp
mov
clc
xchg
xor
mov
aas
pusha
sbb
xchg
jg
xchg
pop
mov
sbb
add
mov
jno
cmp
or
addl
pop
fwait
ljmp
fwait
push
xchg
adcb
les
push
into
gs
imul
in
adc
jnp
mov
xchg
ss
lea
mov
pop
adc
or
stos
cs
push
cbtw
xchg
pop
xchg
jnp
call
adcb
push
cld
mov
inc
aad
js
push
icebp
mov
sub
testl
out
stc
or
add
mov
dec
loopnew,pt
loop
add
dec
mov
rcrb
jle
in
jle
cmp
sbb
adc
jnp
mov
xchg
jb
loopne
fsts
mov
jne
dec
jge
loopne
or
jb
cmp
stc
loopne
jp
icebp
cmpsb
pushl
stos
push
into
fdivrs
dec
xchg
xor
lea
test
inc
adc
ja
stos
inc
ficompl
mov
xchg
repnz
push
xchg
and
out
mov
push
test
mov
scas
dec
movsl
pop
add
xlat
push
test
lods
pop
push
xor
add
push
push
adc
daa
sbb
in
add
cwtl
hlt
mov
inc
and
dec
in
mov
addr16
pop
ss
pop
imul
and
mov
mov
dec
outsb
lds
push
imul
inc
xor
jg
pop
test
lea
jae
jmp
lea
jne
dec
mov
pushf
cmp
or
pushf
movb
lea
je
movsbw
jmp
bt
cmp
pusha
push
lea
ja
bswap
xchg
pop
lea
not
lea
pop
not
mov
mov
push
mov
pushf
movsbl
mov
jmp
dec
push
shl
mov
cmc
bt
stc
bt
and
pusha
pusha
movb
add
pushl
pushf
lea
jmp
mulb
pop
daa
fsubr
jo
jge
pusha
xchg
jbe
data16
add
adc
popa
sub
iret
and
movsb
call
imulb
loope
cwtl
lahf
jl
leave
in
adc
out
sub
xchg
std
mov
and
inc
fwait
imul
lcall
pop
jns
dec
outsl
fmull
cltd
jae
dec
add
nop
mov
nop
and
imul
dec
jmp
out
pop
pop
call
xor
inc
or
mov
adc
adc
pop
inc
es
nop
lahf
stc
pop
adc
movsl
fwait
push
and
daa
adc
scas
push
insl
mov
push
dec
cltd
xchg
dec
cmp
adc
add
insl
scas
or
xor
add
and
push
mov
fs
adc
cmp
shl
arpl
enter
pop
jno
and
fcoml
sbbl
inc
lods
push
jo
lretw
jo
lretw
pusha
out
jnp
mov
not
jmp
and
es
or
or
or
in
add
jae
mov
dec
jns
push
cs
sar
push
cwtl
js
sub
xlat
add
leave
arpl
dec
mov
rcrl
cmpl
loop
push
jne
push
lock
dec
leave
push
add
inc
call
jo
fdivrs
dec
outsl
or
inc
test
mov
shl
call
push
hlt
dec
idivl
push
dec
and
add
das
sbb
pusha
pusha
mov
lea
jmp
setbe
movl
not
cwtl
lea
pushf
call
pusha
mov
pushl
popl
pushf
pushl
ret
call
add
dec
inc
dec
popa
jo
je
imul
add
and
movl
pusha
push
mov
pushf
pushl
pushl
mov
pushl
ret
daa
clc
andl
fisubl
cmp
sarl
fdivs
leave
aaa
pushf
mov
xor
xchg
push
pop
popf
in
jo
adc
add
mov
pushf
fcomip
mov
and
out
or
jbe
fisubs
fcmove
in
cs
pushw
inc
jge
andl
push
mov
out
jecxz
cmp
sbb
or
lahf
test
in
cltd
stc
xchg
in
xchg
repnz
dec
inc
cmp
add
jo
push
iret
clc
mov
xchg
scas
add
and
out
insb
andl
jne
js
jo
add
adc
sbb
jno
add
lret
mov
loope
lods
or
inc
orl
addr16
mov
xor
jae
or
or
and
mov
dec
cwtl
cmp
icebp
shrl
mov
xchg
push
sbb
bound
xchg
and
push
cs
add
test
std
inc
stc
dec
clc
pop
sti
push
cmc
inc
mov
push
les
push
jl
rcrb
cmp
testb
push
hlt
or
in
jmp
pop
jns
adc
sarb
movsb
call
add
sbb
inc
or
inc
ja
insb
or
das
push
movsb
jns
icebp
mov
addr16
push
push
push
mov
stc
cmp
dec
mov
out
fsubl
cmp
rorb
les
out
lea
sbb
jbe
pop
mov
cltd
lock
frstor
loop
jbe
frstor
pop
mov
mov
add
ret
sub
jecxz
shll
out
add
mov
scas
inc
sub
adc
ret
scas
cmp
mov
inc
mov
and
adc
or
jle
ret
rclb
loope
aaa
sbb
mov
sti
out
dec
cmpl
ret
mov
out
mov
and
aad
lcall
xchg
mov
add
scas
or
ret
mov
inc
fstpt
sbb
cltd
xchg
std
jp
in
shrl
pop
les
inc
js
mov
dec
pushf
xor
inc
outsb
addr16
and
enter
adc
pop
lock
jo
shlb
mov
sbb
sub
xor
lcall
dec
push
call
je
push
and
dec
daa
mov
clc
xorl
shlb
sahf
sub
imul
clc
fildll
add
mov
jne
pop
dec
xchg
sarl
ror
cld
enter
mov
mov
lea
sti
inc
sbb
fistps
xor
shlb
mov
dec
jns
jnp
mov
daa
int
fcom
fidivrs
dec
lods
xor
shlb
test
mov
js
dec
gs
insl
mov
sub
mov
enter
or
fists
cmp
dec
mov
xchg
xchg
jp
loope
loopne
loop
icebp
dec
in
pop
jmp
cwtl
in
cmpsb
pop
cmp
test
and
out
mov
aaa
shll
and
sub
xor
sub
dec
mov
rclb
sub
in
sbb
jbe
faddp
fsubr
sbb
fsub
mov
cmp
inc
adc
repnz
mov
cmp
push
jmp
negl
pop
loop
cmc
sahf
out
fsubr
and
mov
mov
push
test
cmc
jns
in
loope
cmp
mov
push
sub
outsb
popf
add
add
sbb
xlat
je
push
push
cmp
pop
push
loop
outsb
inc
dec
cwtl
or
push
imul
sub
xchg
pop
aas
lret
sub
int
int3
call
addr16
sbb
push
add
addl
lret
mov
and
inc
push
mov
jb
inc
cmp
ljmp
hlt
jbe
test
lds
push
lret
jbe
imul
fsubrs
jb
jb
sbb
jo
in
inc
sbb
pop
fsubr
popf
loope
repz
in
in
add
adc
cmpsb
cmpb
dec
push
mov
test
lods
mov
jp
cwtl
scas
inc
cmpsl
lret
and
cwtl
test
pushf
les
in
lret
xor
dec
mov
dec
jp
mov
cmpb
fildl
or
daa
test
cli
jne
in
imul
fbstp
jno
jnp
imul
ljmp
daa
daa
jmp
rclb
adc
js
push
jne
outsl
xchg
ja
jo
repz
clc
cmpsl
adc
fbstp
push
mov
lret
push
jnp
or
gs
push
cltd
cld
jg
sti
xor
gs
test
push
lods
jmp
gs
test
xor
clc
jecxz
lcall
sub
loop
sbb
mov
sbb
or
cwtl
jmp
add
fwait
jnp
mov
jo
fsubr
mov
sub
sub
cmp
xor
sub
sub
jmp
push
lahf
scas
fistl
push
mov
scas
inc
push
xor
push
aaa
call
fdivrs
enter
add
lods
in
dec
adc
std
fisubrl
int3
sti
inc
rolb
pop
pop
insl
fadd
stos
add
add
inc
subb
cmp
int
inc
les
jge
ja
clc
mov
pop
lock
xor
or
fsubr
dec
lods
push
mov
mov
stos
inc
mov
popf
dec
insb
data16
out
dec
out
inc
insl
cltd
stc
jl
mov
sbb
pop
mov
cmpsb
ljmp
jb
sub
shrl
sub
aad
daa
pop
push
lcall
sub
lods
es
xchg
in
jno
jne
push
dec
mov
call
cli
jns
bswap
in
or
jns
pop
and
sbb
lcall
sbb
mov
ljmp
dec
jmp
das
pop
mov
mov
fsubr
xchg
push
test
xchg
outsl
subb
push
repnz
repz
sbb
dec
jle
or
mov
adc
addl
gs
stc
pop
in
push
jmp
icebp
push
clc
inc
lahf
and
push
imul
pop
fsubr
xlat
xor
fistpll
frstor
fidivs
enter
pushf
mov
out
xchg
xchg
push
pop
pushf
clc
and
std
lret
sar
mov
jmp
adc
xchg
cld
shrb
cmp
mov
lret
repnz
cwtl
sbb
sub
mov
sbb
mov
sbb
add
pop
jne
push
ds
rcr
aam
adc
and
pop
inc
test
xchg
call
je
arpl
jl
jae
fwait
sbb
shll
adc
test
adc
jmp
out
xchg
cmpb
gs
je
lret
das
leave
and
inc
and
out
sbb
or
adc
ret
in
adc
push
xor
xchg
mov
add
xchg
bound
mov
mov
lock
ss
mov
int3
pop
aas
aaa
lret
fldz
fadd
fisubs
mov
xchg
xor
data16
test
or
xchg
mov
push
add
pop
jo
gs
jns
aas
nop/reserved
xchg
push
clc
add
sub
sbb
leave
inc
and
pop
scas
adc
add
inc
mov
inc
leavew
lret
pop
pop
fsubr
aaa
lret
cmp
cmp
jmp
pop
cmp
xor
cmpsb
daa
adc
sbb
xchg
jbe
addr16
adc
adc
adc
adc
adc
sub
mov
fsubr
sahf
xor
adc
pop
cmp
and
stc
cmpsl
daa
adc
mov
push
mov
add
and
or
push
repz
in
mov
loop
loopne
cli
out
test
jp
daa
adc
push
jl
fiaddl
lret
movsl
nop
and
cmp
iret
fs
pop
fsubr
sub
pop
mov
dec
push
jb,pn
jp
push
and
lret
loop
daa
adc
outsb
cmp
das
into
ss
ret
and
mov
push
ljmp
nop
fnstsw
dec
dec
daa
adc
pop
inc
dec
xor
cld
cwtl
incb
mov
shrl
adc
cmp
and
cmp
mov
fsubr
lret
sub
cmc
push
in
jecxz
jmp
loop
out
leave
mov
es
pop
movb
pop
fsubr
arpl
pusha
fwait
push
jp
bound
test
in
jle
push
sbb
rcrl
cmp
sub
and
xchg
sbbl
push
jge
js
enter
cmp
push
adc
adcl
jae
in
pop
xchg
out
ja
movsl
push
xchg
in
inc
in
sub
push
jbe
cmp
sarl
inc
jecxz
aad
mov
dec
mov
mov
xchg
adc
cmc
mov
mov
mov
fsubr
hlt
pop
cmc
sbb
sbb
addr16
mov
inc
jg
pop
movsb
daa
adc
mov
shrb
into
lds
cmp
lcall
orb
push
insl
lock
mov
mov
inc
mov
daa
sarl
mov
cmpb
jle
mov
lods
mov
iret
stc
ret
fdivrl
fsubs
pop
jns
jne
fsubr
mov
push
sub
in
push
incl
inc
in
clc
inc
repz
bound
cmp
cmp
int
or
in
jno
or
add
inc
mov
or
xchg
add
adc
adc
adc
stc
adc
notb
je
repz
lock
in
adc
ljmp
adc
adc
loope
pop
adc
adc
adc
fcoms
push
adc
adc
rclb
push
adc
adc
or
mov
push
xchg
test
add
jnp
cli
mov
testl
outsl
mov
mov
mov
call
mov
loop
pusha
mov
mov
fmull
push
mov
mov
mov
rorb
mov
pop
xchg
test
mov
adc
adc
clc
adc
cmc
adc
repnz
out
adc
in
adc
jmp
adc
adc
loopne
pop
adc
adc
ficoml
pop
adc
adc
aam
push
adc
adc
into
xchg
mov
lcall
add
mov
mov
mov
stc
mov
testb
mov
mov
in
mov
ljmp
mov
mov
loope
pop
mov
mov
mov
fmuls
push
mov
mov
iret
mov
or
jo
lock
out
push
outsb
test
add
sbb
sbb
sbb
negl
jne
hlt
sbb
icebp
sbb
out
sbb
sbb
sbb
sbb
sbb
sbb
mov
and
adc
adc
lock
adc
mov
aam
sarl
cli
shll
into
jmp
into
pop
into
fwait
into
cwtl
into
push
into
xchg
into
int3
mov
ds
inc
mov
mov
into
cmc
into
jb
scas
dec
sub
jmp
into
sbb
into
push
into
cmp
cmpsl
mov
cmp
mov
imul
cmp
sub
in
rcrl
into
sbb
jle
sub
sbb
sbb
adc
adc
adc
adc
add
add
mov
incb
sub
mov
stos
xor
sub
and
sbb
adc
xchg
inc
jge
lcall
and
xchg
packssdw
jmp
movsl
jmp
sarb
scas
test
push
rep
push
jle
insl
jle
sti
cli
add
orl
aam
rorl
mov
ds
pop
int3
lods
mov
push
jmp
mov
fmuls
xor
jecxz
mov
insl
mov
jg
shrb
mov
cmp
aam
shl
pop
lahf
out
jns
stos
jecxz
insl
fbld
fstpl
rclb
add
jle
cld
ds
mov
out
jns
imul
mov
dec
mov
jle
jns
imul
xor
cs
sbb
in
loopne
fwait
sbb
outsb
sub
and
and
fisttpll
dec
aam
rcll
adc
adc
mov
ds
ds
mov
cs
sub
loope
pop
cmp
xchg
imul
cmp
and
sbb
enter
inc
cmp
ljmp
cmp
mov
adc
adc
adc
jecxz
and
sahf
adc
jmp
std
in
ror
in
lret
mov
pop
outsl
ret
mov
pop
jge
cmp
jbe
mov
and
lods
and
pop
cmpsb
sbb
sbb
sbb
lahf
inc
fstpl
pop
adc
sub
adc
adc
rorl
inc
out
test
out
add
cmp
ja
mov
and
scas
and
loopne
ret
popa
pop
call
push
adc
inc
pusha
out
ret
ds
mov
call
lcall
ljmp
addr16
cmp
ret
in
int3
push
ret
hlt
insl
aas
pusha
out
mov
outsb
add
dec
addr16
outsl
sub
jo
lcall
repnz
jb
adc
push
ret
hlt
les
je
ret
cmc
mov
divb
jmp
test
and
sbb
fldenv
adc
push
dec
jne
mov
lds
sbbb
adc
adc
sub
and
and
sbb
sbb
imul
and
push
adc
adc
adc
adc
dec
jle
sub
inc
and
sbb
sbb
adc
adc
adc
adc
adc
adc
push
adc
adc
ror
ds
roll
les
je
icebp
lcall
mov
add
jl
sti
imul
cmp
sub
sbb
sbb
push
sbb
xor
fs
mov
in
pop
nop
iret
lret
jge
dec
loope
mov
jge
cmp
adc
mov
jle
jbe
mov
sbb
stc
lods
iret
mov
lock
out
sub
lret
dec
aam
imul
inc
fs
sbb
cwtl
adc
adc
push
movsb
loop
xchg
aaa
xchg
hlt
nop
outsl
mov
mov
and
into
or
pop
lds
mov
sbb
sbb
sub
push
sti
push
in
sbb
push
sbb
add
xchg
roll
add
push
cmp
sti
into
mov
daa
jno
aad
sbb
sub
movsl
sbb
and
and
aam
sbb
mov
cmp
and
and
gs
adc
adc
adc
push
sbb
aas
jo
lock
mov
mov
xor
into
adc
adc
dec
into
mov
ds
jnp
cmp
and
out
gs
pop
and
int3
mov
push
stc
cmp
jo
outsb
sbb
sbb
inc
pop
pop
adc
adc
adc
xchg
lret
jle
les
hlt
fcmovu
iret
fcmovne
fcmove
fxch
fmul
xlat
into
into
aad
aam
shr
push
mov
ds
add
pop
and
push
and
push
and
push
and
dec
mov
test
test
jo
in
inc
in
and
jecxz
loop
loope
loopne
fbld
fsubl
add
cmovl
pop
add
add
add
jp
hlt
mov
mov
mov
mov
mov
out
and
jg
jo
push
sarb
push
add
add
cmp
pop
sarb
jl
aad
push
xorb
inc
test
stos
mov
arpl
mov
mov
popa
gs
jns
js
sub
mov
sub
aas
ljmp
pushl
popf
out
push
cmpb
push
and
loope
ds
pavgw
or
jo
lock
push
add
shl
iret
scas
mov
ror
cld
mov
dec
push
shrl
cwtl
xchg
notb
mov
mov
mov
mov
add
cmp
aad
and
flds
add
add
add
inc
add
push
and
out
and
jmp
out
in
in
fisttps
aam
rorl
into
iret
into
into
test
or
pop
cld
or
add
xchg
push
std
xchg
pusha
sti
add
stc
dec
clc
into
negl
insl
jmp
jmp
out
push
in
jecxz
loop
popa
frstor
enter
push
and
push
rorb
pop
data16
xchg
push
cli
mov
mov
gs
lock
sub
sbb
in
jecxz
call
dec
fisubs
rcl
adc
xchg
into
pop
push
or
xchg
ljmp
add
push
stc
shrl
mulb
inc
hlt
daa
repz
sbb
lcall
lock
into
fisubs
inc
fsubl
outsb
sbb
or
jo
pop
mov
sarb
in
repz
cmp
lcall
repnz
in
sub
fucom
dec
fcmovne
fcmove
fstps
insl
xlat
insl
cld
aad
mov
stos
ja
jno
nop
testl
cli
cmp
daa
in
cmp
lcall
mov
mov
mov
mov
mov
mov
mov
hlt
outsl
ror
shr
mov
and
add
add
add
inc
std
and
cli
insb
mov
icebp
mov
insl
jae
jb
out
insl
test
insl
cltd
insl
cwtl
insl
xchg
insl
iret
insl
into
push
or
or
add
add
add
std
and
jmp
out
adc
adc
adc
adc
rcl
or
or
or
or
pop
roll
rolb
jns
dec
jne
sbb
sbb
inc
fdivr
aam
aad
stc
into
clc
pusha
push
cmp
dec
in
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
lcall
adc
adc
adc
adc
adc
adc
adc
pop
adc
adc
adc
xchg
enter
add
sti
xchg
cli
nop
stc
mov
mov
mov
mov
mov
mov
lock
data16
insl
out
insl
in
insl
in
jns
lret
pop
pop
pushf
xchg
mov
mov
mov
add
into
loopne
fmulp
fsub
push
inc
fisubl
xlat
and
aam
shll
shlb
xchg
sub
and
and
sbb
sbb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
ljmp
dec
clc
fcompl
ficompl
fstps
mov
mov
repz
cmp
addr16
sub
dec
jle
sub
fs
push
jno
ret
sti
mov
sti
cmp
testb
repnz
lock
adc
adc
adc
in
fcoml
shl
jb
into
into
fnstsw
or
or
add
sar
iret
stc
into
clc
addr16
mulb
repz
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
fstps
aam
rorl
rcrl
push
lods
pop
lcall
cmp
push
mov
push
mov
dec
mov
mov
sti
dec
stc
cmp
sub
sbb
sbb
mov
icebp
xchg
popa
out
lock
pop
pusha
insl
jmp
ljmp
mov
adc
adc
aam
rcll
into
ror
rcrb
insl
shrb
dec
or
pop
aam
xchg
test
xchg
cld
nop
sti
mov
mov
mov
mov
lock
into
hlt
into
icebp
into
out
into
jmp
pop
jle
in
jecxz
loop
loope
loopne
filds
cmpsl
jp
push
daa
or
sti
out
jnp
into
cli
into
test
cli
scas
jecxz
loopne
pushf
repz
in
test
push
add
jns
lret
pushf
jge
nop
stos
mov
fpatan
mov
add
dec
pop
or
addb
add
add
add
add
inc
incb
insl
in
xor
sbb
mov
sbb
mov
mov
out
mov
ja
lock
pop
out
and
in
xchg
jmp
jecxz
into
call
add
add
sbb
aam
rcll
iret
fildll
insl
iret
ss
ret
fsubrl
cli
sub
sbb
sbb
xchg
fdivr
dec
notl
iret
fsubp
cli
xor
add
pop
mov
pause
repnz
out
shl
dec
jmp
loopne
into
fimuls
fcompl
iret
push
mov
mov
out
and
fxch
jle
lcall
aaa
jo
cmp
pop
ret
mov
cmp
loopne
rcr
into
pushf
lea
outsl
cmpsl
out
pop
outsb
xchg
out
iret
mov
jp,pt
xor
loope
loop
into
into
push
into
jge
mov
repnz
xor
jp
dec
popa
popa
sbb
je
in
lock
push
ret
xchg
aas
add
clc
iret
lock
scas
rolb
insb
mov
xor
xchg
inc
sub
cmp
imulb
mov
subb
add
adc
xchg
xor
imul
mov
jle
inc
outsl
ss
outsb
in
mov
clc
jle
inc
cwtl
stos
cld
rcrl
lcall
and
sarb
jo
lock
xor
imul
fs
fldl2e
dec
ret
cmp
fimull
in
jmp
filds
xchg
pop
jp
pop
in
cmpb
inc
outsl
jle
lods
sbb
je
popa
lds
sub
mov
pop
in
add
jg
or
aas
sub
loope
mov
arpl
mov
xor
cmp
ds
adc
aas
lock
imul
jnp
xor
test
das
fisttpl
fldt
mov
push
sti
add
sub
or
add
jg
aas
fidivrs
or
mov
xlat
out
adc
mov
out
sub
and
sbb
test
out
cltd
lea
dec
sarl
loopne
sbb
cmp
js
mov
add
mov
cmpsb
fcomps
dec
call
rorl
pop
stos
cmp
loope
les
push
xchg
mov
mov
lods
push
inc
mov
xchg
and
nop
xchg
push
or
dec
mov
shl
data16
out
shrb
xchg
inc
dec
xchg
pop
push
xor
inc
mov
lods
jmp
pop
outsb
push
jno
in
pushf
dec
gs
insb
jge
sbb
cmp
sub
or
test
mov
add
shl
in
pop
dec
xor
push
les
jnp
jmp
push
ds
cmpl
jl
insl
and
testb
add
cmp
jge
jl
jnp
insl
stc
pop
insl
insw
jecxz
fcompl
ret
fwait
int3
orb
repz
cmp
jge
lcall
jo
lock
sbb
xchg
into
aad
mov
std
pushf
add
shlb
inc
and
pop
mov
insl
sbb
jne
dec
in
lcall
stos
ss
and
push
lret
push
les
mov
add
push
sbb
fnstenv
rcll
and
ja
je
mov
jle
push
dec
sbb
sbb
pop
adc
adc
shrl
into
adc
bswap
push
into
or
push
dec
push
add
mov
ljmp
fst
xor
cmp
fldcw
jmp
shrl
cmp
push
inc
dec
xchg
push
fsts
dec
jns
in
xlat
mov
mov
rcr
ret
xchg
cmpb
sbbb
scas
insb
cmpsb
xchg
jo
xchg
dec
push
adc
movsb
lret
lcall
je
nop
insl
mov
movsb
mov
mov
mov
adc
jg
mov
out
and
lret
aas
ljmp
and
ror
movsl
xor
jo
stos
dec
jns
sub
cmpsl
addr16
mov
xchg
and
dec
in
mov
mov
mov
xchg
xor
push
cmp
filds
dec
addr16
adc
fisubrl
push
lret
cld
pop
xchg
ret
loope
lock
or
movsl
test
mov
cli
ds
mov
scas
cmp
lret
sbb
mov
je
stc
push
imul
inc
pop
cmp
jg
loopne
shr
xchg
popa
xchg
pop
add
mov
push
sub
lea
mul
movsl
aas
and
adc
adc
aam
cli
mov
pop
roll
icebp
ret
or
mov
xor
out
daa
or
daa
sbb
mov
push
fwait
jb
sarb
ret
test
icebp
mov
add
add
jmp
fcmovbe
out
fdiv
xlat
push
or
call
cmp
sub
std
push
cld
xlat
in
cli
mov
addr16
in
mov
pop
in
in
in
dec
sub
test
and
sbb
pop
mov
lds
adc
daa
or
imul
pop
jge
jl
pop
cmp
jne
mov
add
mov
jg
jmp
mov
xchg
test
adcl
xchg
jl
pop
jp
pop
push
js
loopne
jbe
mov
aad
das
dec
cld
push
inc
stos
ds
loope
push
movsb
aam
or
cmp
push
dec
add
add
cmp
mov
cmp
or
fs
dec
icebp
add
fisttpll
cld
jecxz
jle
ds
hlt
ret
repz
xchg
mov
scas
imul
mov
mov
cwtl
ret
shrb
rcr
mov
movsl
mov
sbb
or
xor
jl
xchg
push
gs
and
push
sbb
sbb
sbb
mov
or
sarl
out
gs
dec
negb
push
sub
pop
sbb
cmpl
xor
lods
test
addb
clc
lods
or
arpl
clc
jns
dec
fistl
dec
inc
dec
sub
cmp
loop
sbb
lcall
aam
rcl
jge
into
rcr
push
inc
into
arpl
push
or
or
sar
add
cld
ficoms
clc
push
fstl
shll
mov
insb
and
sbb
sbb
adc
adc
adc
adc
adc
adc
adc
adc
push
aad
add
idivb
lret
loopne
push
pop
inc
add
pusha
call
popa
sti
fisubs
idiv
std
jge
icebp
inc
out
or
jmp
cld
cmp
and
aad
lods
aas
or
dec
neg
divb
lret
mov
fisttpll
fimull
xlat
push
jne
xchg
sbb
jp
xchg
push
dec
jle
movsl
jnp
jne
ja
mov
jae
stc
outsl
adc
adc
idivb
int3
mov
or
push
jge
test
sub
js
std
dec
mov
mul
mov
hlt
loope
js
push
and
pop
int3
adc
mov
ds
notl
mov
mov
in
adc
add
scas
push
inc
lods
lret
xlat
psrld
mov
ljmp
jns
sbb
sub
stos
dec
sub
addl
and
sbb
xchg
adc
std
insl
mov
rolb
out
xchg
in
jmp
xchg
out
cmp
in
shrb
inc
ret
jns
xchg
std
jnp
mov
jp
out
mov
ljmp
ficoml
fsts
fcoms
jne
mov
in
ror
shlb
mov
aam
jmp
add
std
pop
pop
nop
jb
pop
inc
out
arpl
daa
rcrl
aam
rorl
rorb
rorl
lahf
dec
loopne
xchg
cli
shl
negl
nop
jmp
fdivrl
fildll
fistpl
mov
aam
rorl
rorb
lahf
or
push
shr
add
jmp
sbb
sub
inc
loopne
aam
xchg
mov
push
out
ds
daa
push
fsubr
sbb
add
add
jmp
repz
ljmp
sbb
ljmp
add
add
mov
loope
clc
into
lock
out
movsl
enter
dec
jge
lcall
jge
adc
aam
roll
jo
fnstcw
jns
imul
addr16
cmp
adc
in
mul
into
fcomps
clc
test
sbb
sub
stc
insb
xor
fisttpl
rcll
fnstsw
or
or
in
pop
sti
pop
clc
iret
lock
divb
cmc
dec
shl
lcall
icebp
jecxz
aam
loope
jo
sbb
sbb
sbb
sbb
lcall
mov
icebp
inc
or
out
or
fisttpll
stc
popa
jne
dec
or
add
fisubrs
insl
cmc
cmp
pop
icebp
insl
cmp
dec
add
pushf
xchg
mov
add
fmul
fistpl
mov
pop
lock
sub
sbb
pop
add
jle
jecxz
fs
pop
jo
mov
cmc
adc
aad
loopne
fcomps
divb
stos
cmc
loope,pn
in
pop
call
push
add
push
loop
daa
cli
in
insl
pop
sti
pop
adc
mov
arpl
mov
xor
js
scas
sub
jne
jb
lods
xor
fwait
mov
push
mov
pop
jp
insb
jecxz
icebp
jle
jmp
data16
fucomi
adc
pop
popf
or
inc
dec
mov
cmp
jns
popf
jle
pushf
sub
lcall
adc
adc
adc
inc
daa
mov
int3
ds
data16
addr16
lods
jge
inc
mov
sub
inc
lret
ss
push
icebp
test
hlt
xchg
test
shll
insb
les
cmp
sbb
stos
jmp
lret
jle
popa
pop
xchg
jb
dec
imul
cmp
addr16
pop
mov
pop
fbstp
mov
mov
scas
loopne
inc
lods
and
in
fucomi
ret
jno
fsts
leave
pushf
dec
mov
dec
pop
cmp
sub
stc
in
push
inc
inc
aaa
movsl
sub
aaa
lret
mov
stos
orb
cmp
jne
sbb
data16
jg
mov
mov
jno
mov
addr16
loope
inc
ret
jle
xchg
add
outsl
pop
jno
jmp
xchg
push
jge
fldl
lcall
pushf
push
cmp
imul
out
insb
js
iret
add
roll
stos
arpl
in
inc
data16
jnp
shlb
insb
dec
addb
clc
aad
push
cmp
outsl
lods
add
in
cmpb
jo
sub
mov
cmpl
in
repnz
mov
jns
insb
repz
add
sub
pop
adc
dec
insl
jb
push
add
cmp
ss
sahf
ficoms
adc
jbe,pt
push
stos
sbb
jns
mov
mov
sub
jge
jnp
mov
sub
insl
sbb
push
mov
xchg
mov
call
daa
sub
or
xchg
les
inc
fwait
sbb
cmp
jecxz
insl
jae
jo
das
push
cmp
jnp
repz
cld
in
out
add
jmp
push
jb
fists
shrl
std
sarl
xor
lret
add
loope
lods
rcrl
mov
aas
push
ret
xchg
push
ret
in
pop
and
nop
sarb
movl
test
into
sbb
push
cmpsl
int3
outsb
dec
jle
cs
sti
xchg
xchg
sti
scas
mov
and
dec
sub
xor
shll
lahf
dec
notl
lcall
mov
fdiv
rep
gs
sbb
pusha
int
fucomip
mov
sub
inc
push
jp
push
pop
xor
push
adc
lock
mov
mov
int
decb
adc
mov
pop
test
out
add
in
jo
sbb
sbb
sbb
sbb
icebp
arpl
cmp
jle
cmp
pop
or
cld
sub
jl
iret
jns
dec
std
sbb
add
xchg
cli
jp
call
lcall
loope
fistps
stc
and
shl
or
and
or
idivl
or
pop
iret
iret
jge
cmp
jge
addr16
xlat
dec
movsl
push
hlt
shlb
ret
stos
sti
hlt
jnp
cld
and
mov
jnp
jle
ds
pushf
or
nop
mov
jecxz
into
xor
push
pusha
out
inc
sbb
cwtl
aad
push
and
pop
inc
mov
inc
call
out
mov
sub
test
daa
mov
test
aad
or
dec
add
in
stc
shl
jns
test
icebp
add
out
test
mov
mov
incl
fstps
pop
faddl
push
or
loope
pop
addr16
add
stc
sbb
icebp
out
insl
rep
icebp
jns
lret
pushf
add
loope
jne
fst
jbe
pusha
xlat
jns
dec
add
cmc
or
pop
mov
add
jb
incl
cmp
insb
fcomip
xlat
pop
ss
lret
pushf
test
incl
filds
mov
nop
pusha
dec
aad
test
icebp
test
jge
dec
sbb
add
jle
gs
push
out
cmp
outsl
notl
sahf
mov
mov
add
out
push
repnz
mull
mov
jns
stos
lahf
sahf
fs
dec
xor
adc
testl
inc
xlat
loop
inc
insl
mov
cmp
jb
ss
fbstp
loopne
das
sbb
sub
aaa
lret
jae
iret
push
ret
jecxz
int
adc
lcall
xchg
into
push
pop
stos
aad
dec
aam
pop
loop
les
sarl
fnstcw
inc
cmp
test
outsl
sub
daa
cmpsl
ror
mov
sbb
push
mov
jg
lcall
icebp
xchg
sub
sbb
push
insb
mov
fldenv
push
or
cli
add
lea
jecxz
adc
push
loope
in
divb
mov
add
add
push
out
inc
jmp
insb
push
out
push
repnz
out
in
in
lahf
daa
hlt
lds
push
in
push
js
loop
loope
arpl
sbb
mov
loop
or
pop
sub
sbb
cmp
call
xlat
mov
mov
repz
mov
negb
hlt
fstps
in
dec
stos
in
mov
lcall
push
insl
clts
mov
movsl
mov
test
and
mov
mov
mov
repz
inc
sbb
and
sbb
pop
cmpsb
rclb
sbb
ror
dec
daa
stos
out
iret
xchg
jns
or
iret
out
les
movsb
sbb
iret
push
out
xchg
inc
cld
mov
mov
dec
push
cmpsb
sub
adc
push
mov
insl
popf
insl
pushf
cmp
dec
xchg
adc
cmp
movsl
fs
mov
mov
fsts
sbb
mov
cmpsl
mov
mov
mov
mov
mov
mov
pop
cmp
scas
pop
cmp
test
sahf
rcl
or
pop
stc
scas
sarb
cmp
adc
adc
fs
push
cmp
dec
jns
imul
cmp
inc
sbb
inc
sbb
aas
sbb
ret
jbe
sub
dec
fs
iret
xlat
outsb
inc
out
inc
mov
mov
shlb
insb
push
mull
cmp
cmp
xlat
add
out
stos
mov
movsl
xchg
movsb
xchg
mov
cmp
cld
jmp
add
shll
mov
adcl
mov
mov
xchg
jle,pn
ljmp
xchg
stos
divl
ja
mov
stc
mov
push
jne
lret
icebp
jge
push
outsb
sbb
cmp
pop
loope
aaa
sub
aam
pop
lret
lock
adc
loope
push
into
or
dec
shl
lock
pop
sub
adc
adc
pop
adc
dec
cmp
dec
fisttps
inc
cmp
inc
lcall
icebp
sti
rol
add
add
aad
mov
jmp
push
mov
addr16
xchg
gs
fs
inc
pusha
and
push
pop
jne
inc
pop
sub
in
push
push
div
add
dec
push
xchg
jae
mov
jne
mov
xor
xchg
in
iret
add
jecxz
loopne
push
push
test
add
mov
ja
add
mov
push
mov
mov
add
hlt
in
into
test
xchg
or
in
imul
mov
jns
js
ja
into
ret
jne
jge
jae
jb
jno
ljmp
dec
cmp
imul
mov
dec
insb
mov
jno
sub
pusha
jp
notb
arpl
lock
and
and
push
mov
mov
and
dec
push
cmp
push
push
sbb
sbb
iret
imul
popa
push
mov
or
rcll
pop
add
lds
adc
or
shll
push
xchg
clc
insl
mov
gs
push
xchg
sub
and
lds
dec
jnp
hlt
stos
loop
negl
jl
mov
arpl
jp
mull
push
mov
push
gs
test
dec
loop
imul
jle
ds
mov
cmp
or
daa
pushf
in
cmp
mov
mov
jecxz
rorl
xchg
aam
cwtl
repnz
divl
mov
arpl
incb
jecxz
shrl
and
cmpsl
clc
js
movsl
cmp
mov
sbb
popf
mov
cltd
mov
jmp
fnstsw
or
aad
or
in
add
add
add
rorl
sti
dec
ja
pop
and
ljmp
and
lods
loop
cmp
and
in
dec
or
ss
jmp
fldl
inc
sbb
loope
aas
push
xchg
data16
mov
xor
adc
push
insl
or
and
dec
and
inc
pop
inc
je
iret
sti
lock
xor
in
arpl
rcr
repz
xchg
push
testb
jp
add
insl
dec
es
clc
cwtl
lcall
add
cmpsl
pushf
fs
pop
jp
or
dec
adc
dec
repz
orb
cmp
lcall
ror
mov
addr16
and
pop
incl
mov
mov
push
or
fs
pushf
xchg
inc
sti
ret
out
loopne
mov
cld
jbe
jmp
shll
dec
jno
or
out
imul
cmpsl
ror
insl
sbb
insl
xchg
insl
adc
push
or
mov
xchg
outsb
cmp
cmp
pop
insl
xor
pop
mov
xor
lods
into
sub
push
cmc
mov
sub
in
bound
xchg
aad
repz
inc
aad
add
add
ret
add
ljmp
fistpl
mov
rorl
or
or
imulb
inc
mov
fs
rclb
mov
stc
add
lcall
insb
push
push
mul
xchg
sub
ja
hlt
imulb
gs
in
adc
or
inc
ret
jo
cmpl
lcall
inc
repnz
mov
test
pop
into
adc
sub
std
and
and
outsl
stc
push
insl
push
insl
pop
cmp
cmp
call
in
insl
lods
insl
test
nop
push
dec
stc
push
cmp
dec
push
pop
dec
push
jl
jle
dec
pop
push
movsb
ljmp
pushf
mov
add
adc
test
mov
jno
in
mov
push
mov
xor
mov
mov
sarb
jmp
out
inc
pushf
sub
pop
cmp
fidivrs
in
jg
inc
scas
addl
sub
shl
pop
rorl
sub
push
xchg
xor
in
stc
dec
xor
xor
mov
mov
lods
out
or
and
push
sbb
xchg
inc
and
pusha
aas
insl
jnp
cmp
jl
lea
or
ret
xchg
pushf
pop
lcall
mov
mov
add
andnps
add
cmpsb
pop
push
fdivrl
ret
fdivs
imul
cmc
mov
ja
or
add
jae
cs
xchg
lret
inc
pushf
jle
add
mov
aas
jo
pop
mov
out
lret
insl
clc
or
mov
inc
in
xchg
call
push
bound
pop
pop
rcrl
shrl
inc
mov
cmp
xchg
lret
icebp
mov
call
das
enter
popf
add
lret
and
orl
rcr
jl
or
sub
jbe
fscale
mov
pop
mov
fildl
aad
int3
mov
lret
out
push
jne
insb
jnp
lods
sub
push
bound
pop
xchg
pop
sar
mov
mov
insl
dec
jp
mov
sbb
sbb
jecxz
ljmp
adc
add
dec
mov
add
popaw
lcall
pop
and
icebp
insl
jne
sbb
mov
sti
cld
fcoml
mov
mov
inc
add
imul
rcrb
in
mov
outsl
mov
pushf
mov
inc
addr16
mov
sahf
fbstp
push
sub
movlps
xchg
int3
dec
mov
pop
push
mov
aad
jl
dec
dec
not
je
je
push
call
mov
ds
dec
cld
cmpl
adc
insb
mov
inc
mov
and
stos
sbb
pop
cmp
ret
xchg
jnp
stos
and
cmpsl
push
movsl
sbbl
pop
fdivrp
pop
mov
addr16
sbb
adc
push
jl
push
mov
pop
sub
ja
jbe
mov
pop
push
and
pop
push
push
negl
fcmovne
pop
xlat
mov
roll
xchg
add
mov
sti
jmp
cmc
daa
enter
test
jmp
fisttps
stos
fnsave
or
rcr
mov
or
int
cmpsl
sub
loop
stos
stc
mov
mov
pusha
iret
ret
in
hlt
dec
jp
fcmovnbe
loope
test
fucomi
test
rcrl
dec
or
or
cmpb
icebp
loop
bound
inc
lret
fs
and
dec
aad
adc
xchg
pushf
loope
icebp
iret
xchg
int
aas
xor
das
arpl
sub
gs
pop
into
mov
ss
dec
xor
fsubl
in
ret
fstl
negb
pop
push
nop
iret
mov
mov
loopne
out
pop
push
lret
mov
loop
push
jmp
dec
sti
ret
std
nop
jp
notl
ret
in
inc
or
push
lcall
in
cmp
push
sbbl
sarl
mov
out
mov
dec
sub
enter
add
outsl
dec
cmp
addr16
sbb
jns
sub
or
loop
jbe
js
or
jns
in
mov
inc
jg
stos
push
or
jno
add
movsb
or
clc
pop
pop
cs
negb
pop
outsl
lods
sub
xchg
loope
fwait
int3
clc
dec
jge
lcall
push
div
pop
sti
roll
fs
jmp
adc
cltd
xor
sarl
pop
fdivr
mov
mov
nop
cmpsl
dec
dec
imul
push
push
jns
imul
fsts
jne
lret
icebp
loop
rep
insl
cmp
es
and
fs
inc
aad
fnstsw
or
pop
faddl
adc
repnz
lret
insb
sub
shl
push
fists
loope
xchg
cmc
fdivp
add
insl
addr16
fistpll
out
cmp
and
loopne
push
fmull
push
lcall
roll
push
jns
ds
sbbb
sbb
jno
std
inc
call
fmulp
popf
push
push
movsl
ret
push
icebp
andl
mov
push
int3
imul
fsubrs
loopne
fimull
in
or
jge
roll
pop
clc
xchg
repz
cmp
push
inc
pop
in
add
mov
lahf
std
hlt
ret
jmp
add
and
mov
mov
std
dec
push
into
dec
mov
inc
inc
xchg
int
jo
in
loope
sbb
push
pop
and
ficoml
adc
je
push
into
js
dec
rorb
ret
jb
jae
fnstcw
notb
imull
cmp
sti
jmp
stos
icebp
mov
mov
in
loopne
enter
dec
push
mov
pop
dec
int3
jle
roll
sarb
mov
push
inc
stos
mov
cmc
bound
shrb
mov
movsl
xchg
pop
pop
jo
lock
mov
cmp
jmp
and
and
dec
pop
pop
xchg
pop
rorb
rcrb
jae
sub
push
insl
push
cld
add
pusha
and
ret
mov
in
push
outsb
xchg
sub
shl
movb
lcall
sbb
imul
add
add
insl
hlt
jne
sbb
icebp
push
lock
sbb
and
jle
jge
cmc
lcall
imul
fs
xchg
inc
incb
mov
adc
cmp
popa
leave
cmp
inc
cwtl
test
in
mov
addr16
sahf
pop
jb
repz
lret
outsl
jecxz
stc
cmpb
enter
in
add
adc
test
mov
movsb
mov
add
rclb
pop
inc
js
or
shr
xchg
into
lret
inc
jle
ds
or
inc
sbb
and
pusha
out
dec
mov
movl
sar
into
in
pop
sub
xchg
jmp
push
data16
dec
jecxz
dec
adc
push
push
push
outsl
mov
aad
pop
imul
aad
add
ret
lds
jge
rep
out
sbb
in
loope
loop
pusha
loopne
test
sub
sar
or
dec
pop
or
fisubrl
jp
fs
jecxz
loop
lahf
sub
out
and
sub
aad
fcmove
aam
hlt
or
mov
adc
loop,pn
sub
pushf
push
xchg
outsb
lret
icebp
loopne
ret
cmp
sbb
outsb
adc
push
lods
test
xlat
inc
insb
loopne
dec
mov
in
sub
neg
jbe
loope
iret
pusha
and
lcall
addl
pushf
push
push
ds
out
or
xchg
cmp
insb
or
dec
mov
test
loope
or
sbb
dec
xorb
into
mov
insb
in
pusha
in
fs
jbe
cs
cmpl
sbb
bound
xlat
dec
push
mov
addr16
call
out
in
pop
cmp
loop
aam
pusha
loope
fcmovnb
fisubrl
dec
ss
aad
insb
push
pop
jae
insl
aad
nop
xor
and
push
jns
std
push
pusha
clc
fdivp
dec
xor
xor
cmp
push
cmp
pop
add
fistpll
dec
bound
insl
pop
insl
pop
xor
push
or
jne
ja
mov
mov
aam
sarb
iret
roll
hlt
popf
enter
out
push
jmp
test
add
mov
aam
and
iret
push
sbb
mov
jmp
jne
dec
in
and
xchg
jbe
dec
pop
push
mov
xor
sub
iret
jmp
out
movsl
jns
rolb
or
lock
in
jne
in
stos
movsl
dec
xchg
in
or
fistps
iret
imul
daa
xchg
filds
cmpsl
xchg
pop
add
sbb
push
pusha
sahf
xor
rorb
mov
cwtl
add
iret
mulb
mov
cmc
stos
out
pop
inc
in
in
or
cmpsl
xchg
repnz
sbb
mov
js
add
xchg
jbe
imul
jge
mov
hlt
loop
into
fwait
into
lcall
jge
in
push
mov
lods
imulb
stos
addr16
or
cwtl
mov
aam
shll
or
repz
popf
cmp
dec
sub
cld
push
xor
cs
sub
into
pop
add
mov
push
push
dec
or
mov
scas
or
pop
mov
jmp
xchg
pop
add
mov
add
xchg
lret
jecxz
shl
daa
push
lahf
pop
fsub
jns
js
xchg
push
jbe
lret
mov
jp
out
addb
fsubs
into
push
jmp
add
fstpl
push
mov
cmp
aad
fisubs
shlb
lcall
inc
mov
dec
jmp
push
ror
inc
xchg
fwait
push
xchg
add
mov
push
mov
push
or
mov
jbe
mov
sbb
dec
jp
lock
movsb
stos
sbb
into
shl
pop
push
pusha
mov
divb
in
daa
adc
inc
fwait
daa
push
in
dec
fsubrp
xor
mov
sub
aam
ror
jle
inc
stos
xchg
push
xchg
add
inc
sbb
daa
jecxz
inc
fldcw
nop
into
scas
sub
loop
ret
in
test
jmp
dec
fnstenv
dec
mov
ds
std
hlt
add
cmp
add
add
rcll
nop
xor
shlb
push
cs
shl
jp
push
inc
push
push
cmp
mov
sbbl
push
pushf
outsb
repz
sbb
sbb
cmp
fcoms
stos
or
shlb
jecxz
jge
mov
cmp
xor
sub
lcall
into
lahf
jge
or
neg
inc
ja
jbe
jne
push
jae
pop
dec
jno
outsl
scas
in
insb
rcll
push
pop
in
inc
push
cltd
push
xchg
push
add
push
or
mov
pop
iret
pop
ss
aam
xor
push
push
aaa
or
rorb
mov
mov
out
decb
or
in
mov
jecxz
mov
add
clc
jns
pushaw
in
scas
enter
sub
loopne
pusha
cmp
xchg
xchg
jecxz
roll
add
add
popf
mov
mov
pop
leave
xchg
mov
sub
fistpll
or
hlt
mov
pop
mov
xchg
dec
pop
sub
ret
jmp
stos
push
jno
cli
cld
inc
and
xlat
ret
add
ret
xor
sub
cmpsl
shll
mov
push
or
arpl
outsl
mov
iret
cmc
jle
sarl
fdivl
jns
insb
stc
jbe
movsb
loop
mov
stc
testl
dec
loope
jp
in
jne
fadds
in
xor
mov
sbb
pusha
push
mov
pop
ficoml
pop
icebp
jl
incb
lock
jge
stc
push
xchg
lcall
or
add
inc
shlb
jb
stos
into
jle
inc
lret
lock
dec
out
dec
push
or
mov
stos
cmp
inc
jg
in
int3
loope
cmp
mov
mov
cmp
adc
or
loope
cmp
icebp
or
cmp
nop
hlt
dec
cmp
xor
out
mov
in
pop
mov
mov
pop
pop
push
or
ds
xchg
lcall
aad
xchg
jl
dec
cmp
in
and
push
stc
jp
rcll
inc
fisubrl
mov
in
sub
ficoms
sbb
mull
push
in
rcll
insl
inc
jecxz
push
rcl
or
jmp
incl
mov
inc
xor
hlt
icebp
push
push
iret
shl
pop
mov
negb
pop
popa
into
pusha
into
pop
lahf
mov
mov
lret
fadds
lea
mov
jle
mov
cmc
lcall
arpl
adc
enter
loopne
mov
xor
lods
push
popa
sub
fcoms
adc
adc
adc
jne
inc
push
frstor
mov
xchg
lret
dec
into
daa
loopne
arpl
rcll
in
in
sbb
push
popf
cltd
jmp
in
or
pop
faddl
sub
fimuls
stos
inc
scas
ljmp
sub
push
and
or
roll
in
jp
roll
imul
or
or
sub
pusha
cld
push
outsb
lock
test
xor
arpl
and
adcl
mov
sbb
out
fisttps
jno
popf
je
cltd
dec
mov
gs
cmpsb
mov
inc
pop
jnp
rorl
sub
pusha
jmp
les
mov
xor
hlt
cmp
push
clc
orb
jg
insl
adc
mulb
and
testb
push
pop
xchg
mov
iret
cmp
clc
mov
xor
outsb
addr16
in
imul
loope
jge
ret
cmp
jmp
in
add
dec
jne
push
lahf
and
loope
rorb
xchg
fxch
lret
or
sar
test
sahf
fnstcw
xchg
sub
add
lret
subb
mov
sub
jg
in
movsl
shll
in
sar
ret
add
repnz
stos
aad
mov
lret
inc
mov
mov
enter
add
test
mov
rorb
mov
insb
push
pop
jecxz
jg
rcrl
test
lea
decl
mov
xor
cli
sbbb
and
cmp
test
addr16
fimull
pop
stc
pop
popf
in
pop
inc
out
add
in
xchg
mov
aad
push
bound
push
out
jp
outsl
pop
out
xchg
jmp
pop
imul
rorb
push
pushw
lcall
rorl
mov
into
jl
arpl
inc
push
dec
pop
test
cmp
lock
jo
jb
cltd
push
test
test
cmp
or
pop
jp
dec
jbe
cmp
jb
ja
mov
loop
cli
push
ds
inc
mov
sbb
in
gs
call
incl
sub
scas
mov
andb
clc
jns
pop
pushf
fsts
mov
test
mov
inc
xchg
inc
add
addr16
ljmp
sub
out
andl
fsubl
aam
jbe
add
addr16
push
inc
fxch
mov
cmc
imul
iret
in
cmp
dec
mov
or
push
inc
movsb
dec
push
lcall
push
rorl
lock
sbb
xor
xor
arpl
popa
push
cli
cmp
adc
in
and
shll
out
xor
out
loop
or
insl
sarb
mov
inc
daa
xchg
fidivrs
jns
js
jb
or
jo
jg
mov
inc
jb
inc
rcr
rolb
leave
inc
enter
shll
mov
icebp
ss
fidivrs
sbb
cltd
push
push
lock
dec
into
addr16
ret
sti
loope
lods
pop
in
hlt
inc
jecxz
test
push
in
mov
inc
je
hlt
lock
insb
insb
push
icebp
ljmp
dec
and
add
test
jns
jmp
ljmp
jle
pop
inc
or
mov
cwtl
out
dec
push
fbstp
fildll
in
ja
sbb
jns
into
and
insb
in
lahf
insl
addr16
and
aad
movsl
aam
mov
clc
ret
cld
mov
out
insl
aad
adc
mov
ret
push
and
out
stos
in
pop
sub
movsl
mov
sbb
mov
adc
pusha
or
aam
push
addb
movsl
push
push
movsl
int
inc
shrb
sub
sub
ljmp
or
mov
imull
cmp
cmpsb
pop
pop
neg
jl
ret
xor
in
push
out
popf
mov
imul
xchg
dec
or
aas
sub
jae
sub
mov
push
lcall
mov
xor
lods
sub
cmp
fsub
iret
and
jae
in
sbb
lret
test
pop
aad
inc
cmp
adc
sti
dec
icebp
shl
test
mov
rcr
aam
xchg
mov
aad
ja
outsl
popf
int3
push
cmpsb
aas
push
jge
pop
cmp
mov
icebp
add
adc
push
add
frstor
xchg
mov
jae
stos
inc
mov
push
mov
rcll
push
add
pop
ret
aam
jns
in
add
jle
cli
outsb
repnz
inc
loop
in
repnz
cmp
push
fs
movb
add
cmpl
xor
loope
push
mov
icebp
fidivrs
add
addr16
jle
inc
subl
mov
mov
lahf
lcall
fcomip
pop
cmp
jnp
hlt
add
fstpt
js
or
cmp
xchg
lcall
ret
addr16
push
inc
fstpl
jg
aam
pop
lret
loop
push
mov
adc
push
pop
push
and
and
push
xchg
fld1
insl
adc
pop
fimuls
imul
je
out
roll
outsl
pop
lret
cmp
fists
ds
jns
sbb
lret
in
je
jecxz
scas
xchg
mov
insb
gs
das
in
push
mov
push
inc
insb
or
push
test
repnz
jp
in
jae
js
lods
dec
daa
loop
inc
mov
loop
dec
lds
inc
ret
shrl
call
leave
jae
mov
sub
sub
add
cmp
cld
cld
mov
and
and
stc
shl
stos
mov
dec
push
out
sub
in
aad
mov
sub
cld
mov
pop
jle
inc
dec
add
mov
jge
jae
or
rcrb
lds
popf
fbstp
hlt
inc
push
dec
fisttpll
cmc
stc
jmp
add
gs
sub
pop
jns
in
lock
mov
push
xchg
cld
jmp
sbb
pushl
adc
ficoms
cli
hlt
ret
xor
sti
adc
mov
xorb
lret
imul
jle
sbb
gs
mov
cld
mov
fnsave
add
pop
inc
jg
aas
lret
jne
das
mov
aam
insl
inc
test
add
push
shrb
ja
ja
cwtl
adc
inc
mov
jmp
out
xchg
into
xchg
sbb
mov
mov
into
popa
out
fldlg2
mov
jmp
jp
pop
pop
ss
lock
stc
add
ret
adc
lahf
addr16
imul
leave
cmp
clc
dec
mov
sub
jne
mov
fldcw
jmp
and
jno
sbb
xlat
je
enter
rolb
lock
adc
aam
shl
cmp
ljmp
loopne
inc
fildll
fnsave
jg
addr16
fdivs
fucomi
test
loope
in
out
loope
push
into
dec
lea
sarb
in
stos
in
into
xlat
xchg
jle
sarb
jecxz
inc
inc
in
out
xor
jbe
int
jle
aam
push
mov
ror
rclb
mov
push
repnz
cmp
jle
lcall
or
push
inc
bts
ds
push
fs
popa
stos
gs
push
cmp
rcr
fs
mov
or
inc
js
push
test
sbb
push
and
pushf
icebp
ds
cmp
pop
mov
aam
sbb
push
rol
cmp
mov
insl
das
jp
lret
iret
repz
insl
xchg
xor
in
fsubl
in
sbb
inc
idivl
jmp
pop
insl
fnstcw
popf
fmul
cmp
div
shrl
pop
push
adc
mov
shrl
stc
fldenv
addl
iret
and
add
cmp
pop
jne
dec
add
clc
cld
xor
into
addr16
insl
aam
lea
xchg
pusha
bound
jl
pushf
xchg
ja
insb
inc
arpl
dec
push
add
sub
add
sarl
sti
out
rcll
xchg
insl
xor
pop
push
push
inc
push
xchg
into
dec
dec
insl
pop
daa
nop
xlat
insl
cmp
pushf
out
nop
test
dec
mov
xchg
mov
aam
jnp
jp
or
fimuls
cmp
outsl
mov
insl
mov
mov
add
test
imul
pop
or
add
push
ret
cli
or
ss
fbstp
iret
fildl
mov
pop
mov
sub
or
push
cmp
imulb
into
daa
into
popa
call
fcom
push
cmp
or
fdivrl
cmp
filds
cmp
mov
repnz
adc
adc
aam
rcr
push
loopne
dec
mov
jmp
popf
test
stc
cs
fldt
bound
in
inc
shll
cld
shl
js
jbe
dec
gs
scas
bound
cmpsl
clc
cld
cld
pop
loop
cmp
incl
lret
roll
jnp
mov
xor
mov
pop
mov
ds
jge
add
push
rorb
sub
pusha
ljmp
adc
jbe
ret
sarl
sti
dec
mov
scas
xchg
andb
pop
sbb
inc
adc
lret
jg
push
cmp
and
repz
or
aas
jns
lcall
push
push
sub
push
or
aad
icebp
shrb
out
mov
dec
push
inc
add
sti
in
repnz
in
cwtl
into
xchg
into
jge
mov
xchg
sub
xchg
rorl
push
pushl
and
push
rcrl
scas
and
addr16
out
fprem
repz
idivb
dec
mov
and
xchg
cmp
rorl
repz
repnz
icebp
movsl
stos
or
and
in
lcall
andb
mov
fwait
cmp
adc
popa
dec
add
add
xchg
jecxz
push
jmp
pop
insl
pop
insl
push
insl
rcl
loope
aam
enter
xor
push
inc
out
mov
mov
mov
add
dec
mov
imul
fimuls
pop
loope
push
lahf
fnsave
inc
jbe
insb
or
sbb
repnz
fldenv
into
push
cmp
pop
xor
lods
pushf
push
into
pop
into
sbb
pop
call
sub
add
pop
bound
xlat
loopne
ljmp
imul
push
xlat
jmp
popf
xchg
in
dec
out
cmpsl
je
sub
icebp
add
bound
add
aad
fldcw
fwait
add
loope
sub
pushf
and
rclw
mov
jmp
push
mov
mov
inc
std
cmp
out
popa
push
ja
mov
outsb
cmpsl
dec
pop
mov
ja
xor
cmp
lods
ss
js
mov
out
fcmovnbe
jmp
lret
in
mov
inc
mov
stos
movsb
adc
mov
or
ja
pusha
jb
in
aad
add
je
jae
iret
outsb
jno
jo
outsl
sbb
test
shll
gs
mov
test
in
xlat
shrb
and
lcall
dec
lods
in
add
std
cli
push
jle
in
fisttpll
mov
and
icebp
inc
aad
hlt
in
pop
pop
xor
lds
xchg
fbstp
std
jmp
inc
jne
sar
pop
cmpsl
or
or
lret
push
repnz
xchg
sub
or
inc
into
push
pop
in
mov
sti
cli
gs
pop
lods
lds
inc
dec
insb
int3
jne
ret
mov
inc
popa
stos
dec
pop
and
das
jge
std
dec
filds
inc
insl
mov
insl
xchg
insl
push
dec
lret
rolb
mov
cmc
fst
push
inc
jbe
pop
fimuls
xchg
insl
cld
xchg
sbb
aam
push
test
jno
repz
mov
push
jnp
inc
pop
dec
orl
loope
ja
push
inc
sub
or
jne
inc
mov
push
ret
rcrb
outsl
dec
or
sbb
xor
mov
mov
scas
xchg
push
fs
out
push
into
push
jmp
jo
repnz
push
in
inc
inc
cmp
push
pusha
xor
jecxz
lret
enter
bound
movsl
or
stos
sbb
dec
loope
fs
stc
add
cmp
outsb
insb
pop
lahf
xlat
jmp
cmp
pop
add
jbe
sar
testl
push
xchg
mov
inc
mov
dec
dec
and
mov
pop
imul
xchg
sub
int
cld
int3
loope
xor
aad
cmp
fcmovnbe
icebp
movsl
stos
jbe
jge
add
dec
in
jne
dec
push
in
mov
jle
xchg
fs
add
std
sbb
out
pushf
lock
outsl
adc
lea
mov
mov
mov
rcl
daa
orl
test
loopne
daa
sbb
shl
stc
push
jne
insb
xchg
mov
dec
adc
cmp
or
daa
shll
mov
in
ljmp
dec
or
pushf
out
movsb
adcl
lds
icebp
adc
cmc
add
insl
push
or
push
inc
cmp
icebp
xchg
out
pop
insl
or
add
test
test
lret
fadds
test
test
or
xchg
lods
loopne
ret
aam
jge
sar
or
mov
dec
sbb
mov
dec
or
mov
aas
pushf
lret
jne
inc
sbb
xchg
sbb
pop
loopne
xchg
out
fisubrs
adc
add
pop
lret
pop
cmp
dec
into
xor
xchg
xor
xlat
jne
pop
push
shlb
stos
icebp
mov
mov
in
gs
loop
pop
jno
dec
or
idiv
in
dec
fadds
addl
insb
out
cmpb
push
jl
jnp
jp
jns
js
scas
insl
xchg
jo
aaa
stos
push
xlat
popa
dec
push
push
sarl
leave
sbb
dec
lcall
mov
xchg
jle
xlat
push
outsl
insb
mov
aad
add
sarl
shll
das
jne
xchg
xchg
imul
fchs
aas
cmpl
xchg
mov
pop
shrl
xchg
xchg
adc
fadds
add
popf
jns
mov
mov
test
cmp
js
add
faddl
dec
fwait
cmp
sbb
jge
cmp
dec
rcl
dec
cmp
cmpsb
sbb
push
fisttps
add
imull
pop
cmp
test
neg
idivl
ja
cmp
add
shll
mov
rorl
mov
cmpsl
dec
data16
and
bound
popa
decl
icebp
lock
jl
pusha
sub
lret
add
and
jecxz
sar
xchg
mov
jb
pop
insb
outsb
and
ret
mov
lret
les
mov
xlat
jne
jg
dec
insl
dec
jmp
sarl
roll
rcl
dec
push
mov
sbb
add
push
xchg
push
imul
mov
lock
cmpl
jnp
inc
pop
jecxz
iret
jnp
repnz
out
pop
sub
mov
sub
push
rorl
call
and
pop
jl
mov
pop
cmp
lret
mov
jmp
les
test
test
shll
test
testb
int3
fadds
jb
ss
xor
lods
mov
frstor
cmp
mov
stos
aam
push
jp
imul
push
dec
jecxz
mov
mov
addr16
out
into
inc
pop
push
jbe
pop
dec
cmc
testb
insb
cmp
lock
cmp
mov
testb
mov
pop
imul
lret
testl
shr
pop
faddl
jo
aam
pop
testb
fimuls
test
mov
rcll
mov
in
inc
xchg
sub
leave
roll
popf
or
mov
sbb
sbb
lahf
lcall
iret
push
or
addr16
sub
sub
sbb
cld
js
mov
cli
push
lock
cmp
mov
aaa
mov
shr
fcomps
push
ficoms
mov
testl
push
adc
cmp
jmp
lea
imul
movsl
or
fistps
gs
or
aam
sub
loop
adc
rcr
fdivs
fucomp
lret
pop
out
mov
outsb
addr16
and
sub
rcll
addr16
mov
mov
mov
sbb
mov
mov
cmp
jp
js
subb
xchg
xlat
jecxz
cmp
push
mov
push
js
and
or
mov
sbbb
test
call
into
push
and
push
and
jp
sub
fcmovnu
pop
cmp
mov
cmp
xchg
insb
test
aad
pop
out
xchg
aad
mov
cmpsl
filds
stos
pop
cld
push
jno
in
inc
call
or
mov
inc
in
pop
jb
dec
mov
jmp
jnp
jp
jns
xchg
arpl
sub
add
fistpl
cmp
dec
clc
and
pop
ss
push
sub
in
cmc
inc
mov
cmp
add
cmp
mov
sub
loopne
data16
shll
lret
out
rcl
mov
jmp
pusha
jle
nop
cmp
loope
adc
insl
insb
imul
inc
xor
idivl
pusha
mov
pop
cmpl
into
push
add
jno
pop
loop
ret
cli
mov
lds
sub
pop
add
mov
cmp
addb
mov
pop
ds
lret
xchg
mov
ret
jae
test
jg
fcmovnu
incl
inc
jns
loope
aaa
movsl
stos
jg
shl
cwtl
into
push
sbb
in
pop
and
xbegin
pop
push
dec
test
loop
stos
mov
add
jno
jecxz
jns
jno
movsb
bnd
jb
in
repz
add
push
dec
hlt
jecxz
sub
hlt
repnz
pop
neg
addr16
cmc
cmp
cld
fcoms
push
aam
adc
loopne
xchg
add
lret
dec
aam
cmp
dec
mov
out
jmp
daa
jle
shr
cmpsl
xchg
outsl
fdivrs
out
fs
cmp
iret
mov
jle
sub
lcall
insl
scas
cmp
mov
rcl
or
out
add
insl
or
in
hlt
cld
sub
mov
jmp
enter
xlat
sub
loop
sbb
fstpt
shlb
mov
cmpb
jbe
addr16
cmp
pusha
clc
pusha
inc
lods
movsl
test
ss
dec
add
sbb
shll
ficompl
addl
or
stos
xlat
imul
pop
rcrl
aam
lret
rcr
lds
xchg
jecxz
call
aam
fimuls
rcll
into
xor
scas
dec
test
sub
pop
lcall
add
pop
int
push
add
lahf
dec
in
ret
dec
sub
mov
sbb
sbb
insb
pop
pop
lock
adcb
mov
dec
mov
lret
xorb
pop
sbb
out
into
cmpsb
or
mov
push
scas
daa
in
cld
lods
mov
mov
xchg
imul
jl
jp
jnp
out
mov
mov
push
loop
jbe
in
fbstp
or
mov
testl
xlat
jmp
insl
cmpl
jge
jl
pop
mov
addr16
pushf
je
orl
mov
test
subb
cmp
andb
bound
popa
icebp
cmp
fstpl
pop
push
pop
iret
imulb
insl
pop
cmp
adcb
shlb
shll
lods
enter
out
shll
cli
inc
clc
jle
sbb
sub
dec
jns
shrb
insb
push
sub
jbe
iret
fs
aam
fnstcw
lret
mov
or
xor
sub
jb
sbb
mov
loopne
out
loop
outsl
imul
mov
out
popa
xor
or
xchg
push
inc
adc
jle
stos
push
jle
clc
adc
js
in
xor
fdivl
and
mov
mov
cmpsl
dec
add
jp
addr16
js
gs
sbb
insb
lock
sub
outsb
aam
pop
test
push
dec
pop
push
adc
adc
or
pop
addr16
rcrb
and
push
pop
or
push
loop
cmp
add
in
mov
mov
mov
mov
xchg
add
nop
test
orb
cmp
jl
jmp
js
lret
push
arpl
outsb
xchg
insl
shll
into
push
imul
cld
popa
jne
in
and
insl
jbe
pop
mov
in
std
pop
filds
cmp
push
testb
add
sar
loop
fmul
adc
mov
jg
gs
mov
jo
pop
xor
shl
sub
lcall
and
jbe
pop
lds
push
aad
dec
out
ret
ret
sbb
pop
not
jle
dec
xlat
stos
or
mov
cwtl
in
test
push
imul
mov
jb
push
ret
push
icebp
jo
cmp
lahf
adc
lret
or
mov
xchg
flds
cmpl
in
or
sbb
out
sub
jmp
clc
loop
sbb
jecxz
inc
jmp
pop
lock
sbb
fistl
ror
inc
pop
xor
dec
inc
in
pop
jno
sbb
sbb
xchg
sub
sti
imul
or
mov
jg
nop
push
cmc
shrl
out
movsl
aam
into
or
outsl
je
mov
mov
sub
cs
sub
push
adc
adcl
mov
dec
fsub
fs
and
mov
mov
sti
shlb
inc
mov
inc
scas
stos
jp
jp
bound
aad
out
call
fistpl
push
push
lock
cmp
movsl
or
lret
ret
mov
stos
in
fxch
test
add
cld
aaa
in
popa
xlat
mov
xchg
shlb
dec
and
add
xchg
push
lds
jp
aaa
xchg
scas
nop
imul
mov
pop
fsubp
fistpll
nop
dec
push
jp
ja
jne
andl
test
mov
inc
lds
inc
xor
in
jg
clc
stos
js
test
push
adcl
sub
adc
mov
mov
or
sahf
push
sub
fildl
je
in
lds
jae
outsb
out
jmp
test
into
adc
test
push
adc
enter
rcll
sbb
insb
lods
sarb
mov
enter
loope
sbbb
jnp
test
jo
lods
mov
sub
mov
push
pop
pop
in
loope
push
or
ja
or
push
mov
imul
insb
outsl
icebp
pop
jne
sarl
loop
pop
mov
adc
loope
and
insb
fidivrs
ret
push
mov
add
cmc
mov
or
xchg
jne
dec
push
shr
jmp
fisubl
sub
in
pusha
and
aad
aam
jg
push
arpl
je
add
sub
js
insb
lret
dec
pop
push
adc
pushf
into
cmp
push
hlt
add
shrb
or
pushf
cmc
or
negl
push
dec
mov
outsl
cmp
jp
sbb
out
adc
add
xor
int
es
cs
xchg
mov
faddp
sarl
mov
std
insb
sti
daa
sub
add
pop
fst
int3
ds
std
mov
or
cwtl
mov
pop
shll
sbbb
call
pop
sub
jae
das
xchg
negb
out
outsb
idivl
nop
add
jle
cmp
dec
shll
aam
shll
mov
push
addr16
pop
cmp
pop
lds
cmp
mov
test
dec
push
push
mov
mov
pop
cmc
repz
jns
stc
lods
cli
or
lock
stos
add
rorb
inc
call
out
xchg
stos
aam
iret
or
scas
loope
sbb
int3
mov
ret
insb
jbe
jb
js
mov
or
mov
neg
out
enter
fdiv
mov
out
xor
inc
fwait
inc
mov
fcoml
adc
push
xchg
ljmp
add
inc
mov
insb
or
out
jle
sub
fsubl
dec
out
jnp
hlt
jl
rorl
bound
rcl
cmp
lret
das
in
stc
inc
popa
dec
jmp
cmc
repz
jecxz
icebp
inc
icebp
mov
mov
jle
addl
rorl
mulb
flds
sub
xchg
pop
mov
shll
cmp
sub
cmp
mov
push
sub
sbb
push
gs
fadd
mov
aad
or
jge
sub
cld
xchg
adc
in
repnz
jge
addr16
mov
jne
dec
lret
pop
fxch
lock
insb
addb
lock
mov
push
sbb
or
xchg
loop
lret
jmp
add
shlb
scas
in
add
sub
rorb
in
cwtl
sub
addl
push
rcrl
punpckhwd
je
out
loop
fdivr
cmp
out
fs
shl
push
ret
dec
into
je
mov
decl
mov
push
cltd
loope
dec
ret
clc
xchg
mov
sbb
jp
aad
lods
jmp
mov
adc
ret
aad
decb
mov
test
jge
fstp
icebp
cmc
daa
dec
in
pop
arpl
mov
enter
stos
ret
ljmp
mov
loop
ss
popa
js
mov
ljmp
dec
popa
mov
mov
and
add
lret
lock
inc
cmc
pop
jmp
int3
push
and
mov
jne
jmp
mov
add
int3
pop
lret
incl
ds
inc
aas
mov
xchg
inc
pop
dec
add
mov
lods
stc
inc
es
or
test
pop
cs
call
fisttps
and
aad
adc
sub
js
sbb
lods
jle
lock
pop
rcrl
movsl
xlat
xor
into
sub
fcom
cld
sbb
addl
mov
popf
icebp
iret
stc
mov
aas
test
mov
xlat
pop
jbe
dec
pop
cmc
ds
iret
xchg
xlat
jmp
jo
or
insb
cmpl
or
mov
scas
xchg
stos
testl
inc
pusha
and
xlat
sbb
xlat
inc
or
aam
sar
lea
cmp
in
inc
rolb
pusha
fadds
sub
mov
cmpsl
push
lea
in
into
sub
push
bound
lret
pushf
pusha
mov
lret
out
rcr
subl
jecxz
mov
addr16
in
adc
icebp
inc
iret
sub
dec
xchg
sbb
dec
cmp
xor
cmp
loopne
aam
mov
aam
pop
je
ret
out
cmp
ss
jle
imul
aas
fcoml
sub
xlat
fidivrl
cmp
gs
icebp
adc
pop
mov
adc
push
jnp
ss
xor
sub
filds
cmp
and
sarb
stos
pop
shl
pop
or
enter
inc
xchg
aas
repnz
ja
out
xchg
and
or
or
sarl
ret
sub
or
push
inc
or
add
mov
mov
jp
jmp
and
mov
mov
scas
mov
sbb
pop
gs
jge
rclb
push
into
push
into
dec
into
dec
pop
cmp
push
dec
or
mov
mov
loop
jge
inc
jne
hlt
out
sbb
jno
fwait
addr16
inc
fs
sti
sub
in
popa
cmpsb
popa
cmc
fcompl
into
or
insl
jns
jnp
jmp
cmp
dec
cld
sbb
pusha
inc
mov
je
fiaddl
pop
pop
mov
loop
inc
cwtl
shr
inc
pop
mov
shl
push
push
sahf
out
and
pop
rcr
daa
enter
adc
out
or
push
scas
into
sub
insl
dec
cmp
in
cmp
mov
and
test
pop
into
push
mov
lret
idivl
cld
jp
in
stos
iret
test
xchg
xlat
fucomi
push
into
dec
daa
mov
xchg
jae
test
test
cltd
and
xchg
ret
sub
ljmp
dec
jns
and
pop
or
dec
jl
push
sub
in
fs
jne
xchg
loopne
and
aam
out
dec
mov
fistps
push
add
mov
xchg
cs
mov
add
inc
cmpsl
in
jmp
dec
lret
and
mov
pop
imul
js
lods
mov
pushl
dec
cmp
push
push
insl
pop
push
inc
jno
in
and
out
ret
push
icebp
add
sbb
push
repz
adcl
loope
gs
jecxz
dec
mov
cmc
sub
out
lahf
in
clc
or
jmp
dec
sub
jg
orb
cmc
pop
lds
jp
loope
cmp
jne
in
or
insb
shrb
pop
lret
test
push
cli
add
icebp
jecxz
int3
adc
add
cli
and
insb
flds
jns
aad
mov
mov
lea
cwtl
adc
add
or
decl
pusha
push
movsb
shlb
dec
outsl
outsb
lcall
roll
decb
push
push
mov
jg
add
sahf
jns
pop
or
xchg
inc
gs
test
daa
cmp
xchg
cld
hlt
jp
shrl
into
push
daa
lret
push
mov
or
inc
sarb
cmp
scas
mov
push
xchg
insl
push
call
in
inc
je
imull
cmp
call
or
or
add
insl
iret
imul
into
loop
lcall
xchg
ds
test
cmp
jne
pop
imul
rcrb
out
dec
insb
in
ret
mov
add
orl
or
js
je
testb
dec
mulb
cltd
mov
add
hlt
mov
pop
lahf
repnz
dec
fs
lret
pop
xchg
ds
ja
mov
stc
inc
movsl
push
pusha
inc
mov
bound
push
mov
insb
ss
or
lret
arpl
pusha
cmp
clc
je
or
repnz
in
subl
shrb
xorl
adc
xchg
cmp
push
or
outsb
pop
dec
mov
cmp
stos
stc
nop
jge
sti
sbb
imul
lgs
add
je
mov
add
mov
push
cld
lds
and
dec
mov
inc
or
mov
icebp
dec
clc
repz
bound
in
out
daa
or
loope
dec
dec
xchg
lret
outsb
dec
icebp
add
sbb
add
repz
dec
int
cld
sub
fdivl
inc
pop
pop
sub
out
out
test
lods
fndisi(8087
shrl
cmp
sbbb
repnz
add
or
ret
xchg
ja
hlt
mov
pop
cmp
js
sbbl
add
pop
cmp
xadd
mov
mov
sub
sub
lcall
sub
stc
and
xor
push
fisttpl
sbb
in
mov
dec
pop
dec
cmpb
or
popa
lock
out
lods
jp
insb
insl
mov
lret
divb
fists
push
inc
mov
add
dec
mov
cmp
sub
dec
outsb
ficoms
sar
sar
shll
insl
adc
add
dec
mov
jno
pop
sbb
pusha
inc
jmp
mov
fcoml
add
or
icebp
loop
push
leave
sbb
cli
push
push
push
cmp
jl
in
insb
js
mov
test
out
fucom
shll
add
aam
pop
mov
pop
insl
loopne
jnp
outsb
loop
ficomps
mov
mov
pop
cs
adc
repz
fildl
les
psraw
mov
data16
hlt
dec
push
mov
loope
fmuls
movb
aam
shll
pop
add
js
pushf
stc
bound
setnp
lret
ja
pop
out
fdivp
mov
mov
xchg
push
incl
xorb
neg
faddl
stos
pop
in
stc
sub
lahf
or
push
sub
sub
ret
dec
int
xor
sti
fmul
data16
popa
sti
push
sarl
or
out
cmp
fwait
into
push
pop
jb
push
jbe
or
leave
jle
mov
js
shll
cmpb
xor
sbb
out
mov
rol
cmp
mov
mov
shl
xchg
or
fadds
in
xchg
add
xchg
ds
rcl
jbe
xorl
gs
inc
adc
ljmp
mov
mov
or
cmc
rolb
insb
push
xor
pop
inc
daa
in
sbb
push
adc
push
dec
mov
je
mov
loope
popa
movsl
mov
dec
jle
xlat
dec
std
xor
popa
outsb
shll
xchg
dec
popa
xor
fcoms
xor
out
pop
dec
into
ficoms
test
in
and
daa
out
push
fisttpl
mov
ljmp
das
and
mov
lcall
jb
jmp
or
repz
into
mov
mov
jge
shlb
iret
cwtl
pop
pop
insl
iret
insl
lea
cmp
shl
shrb
or
dec
cmp
std
insl
mov
aad
aad
jmp
add
inc
pop
add
rcr
outsb
rorb
shll
rcrb
stos
bound
flds
sarl
iret
fiaddl
icebp
or
dec
pop
xor
das
adc
jl
xlat
pop
xor
test
xchg
jne
xchg
lcall
xlat
in
cmp
or
ffree
clc
in
cld
fsubs
add
or
cwtl
sub
pop
inc
adc
insb
push
fdivs
fisttps
call
in
or
mov
out
test
lods
aas
sub
idivl
sbb
push
ret
mov
je
jp
lret
lock
cmp
out
scas
xchg
xchg
aad
xlat
out
xchg
aad
and
lret
add
aad
in
jle
cmpsl
sub
xchg
and
mov
inc
insb
popa
add
flds
cmp
loopne
jne
nop
push
mov
jns
dec
inc
or
xor
out
push
jne
insb
out
es
pop
jbe
sub
cmp
pop
add
outsl
fldl
push
push
imul
push
enter
and
push
jl
and
loope
lcall
andl
xchg
test
insl
in
cmp
push
sub
jno
lods
lock
movsb
mov
inc
pop
sub
jae
push
std
stc
lret
add
lock
fs
hlt
clc
mov
outsb
jae
mov
jne
imul
ret
insb
cmpl
loope
xchg
rcll
dec
cmpsl
mov
insb
mov
push
dec
aad
movsl
in
pop
popa
rcr
inc
pop
lret
jae
js
insb
in
sub
mov
idiv
loope
jne
lret
push
cli
cld
cwtl
fwait
mov
mov
push
frstor
in
movsb
into
lcall
ret
mov
addl
stos
aaa
iret
xorb
pop
jne
in
jbe
loope
outsb
loopne
inc
stos
and
push
bound
push
cmp
fistpll
in
mov
imul
jnp
cmpsl
pushf
aad
mov
jg
jle
outsb
test
mov
ja
aad
mov
xor
repnz
jns
in
out
rcr
lock
mov
pusha
lcall
ret
frstor
pop
jnp
dec
test
add
in
inc
xchg
scas
ds
clc
adc
push
mov
inc
les
fidivs
dec
nop
fisttpl
mov
pop
cmc
aaa
dec
testl
push
pop
jge
in
setl
inc
lcall
mov
mov
arpl
movsl
fsubrp
sbbl
rclb
stc
dec
jne
sub
test
mov
dec
xchg
out
lcall
and
pop
adc
loope
mov
pop
std
jo
lock
lods
outsb
mov
std
or
cwtl
into
dec
cli
loope
scas
movsl
or
push
and
iret
ljmp
dec
push
push
icebp
shll
pop
pop
jno
in
into
lret
js
mov
push
mov
sub
jne
push
loopne
enter
push
and
jmp
jle
lret
push
rep
jno
push
sub
pop
adc
push
adc
out
inc
cmp
mov
lret
add
adc
mov
add
push
lea
pusha
add
push
daa
mov
sub
mov
icebp
iret
popf
xlat
pop
jne
pop
imul
jle
shll
lods
popf
or
cmp
sub
adc
or
ret
pop
pop
out
je
jno
add
adc
shl
inc
pop
and
or
out
or
test
lret
out
push
stos
daa
test
mov
sub
add
iret
jnp
int3
iret
jp
lret
or
xor
sub
cmpsl
jne
jle
ds
inc
push
pushf
insb
aaa
hlt
outsb
pop
rcll
out
inc
jmp
ret
mov
or
in
jnp
fwait
or
pop
push
shll
ret
ljmp
stos
sti
adc
jnp
add
shrl
jae
hlt
push
iret
add
and
pop
iret
fdivrl
aad
xchg
into
mov
leave
and
sti
jp
sbb
loopne
xchg
push
incb
in
popf
jecxz
xor
shrl
iret
mov
shrl
pop
aam
popf
add
xor
int
cmpsb
pop
push
int3
dec
jmp
imul
das
in
bound
cmc
adc
mov
fldenv
pop
in
push
mov
cmp
xor
into
add
sub
jg
lret
shrl
lahf
stos
or
addl
inc
lds
adc
cmp
bound
mov
add
jmp
je
int3
in
insb
test
xlat
add
aam
xchg
cmp
fldlg2
lock
jp
stos
adc
or
push
push
mov
insl
in
adc
pop
and
sarb
mov
cld
iret
jecxz
cmp
and
xchg
mov
jo
stos
imull
push
sbb
adc
sbb
mov
jb
repnz
test
cmpsb
dec
mull
lcall
xlat
pushf
inc
rclb
sbb
add
stos
movsl
lret
je
push
test
add
out
pop
jl
gs
or
out
rcrb
mov
mov
cmp
shll
sbb
test
into
cltd
into
into
lret
xor
xor
pop
or
adc
sti
mov
push
xchg
aad
int3
xorb
jbe
insl
mov
jne
pop
pop
jnp
xchg
aam
cmp
pop
pop
and
in
sbb
fsts
and
dec
xchg
in
outsb
dec
push
sbb
sar
aad
aam
xchg
fs
sbb
pop
mov
out
fldcw
cmpsl
add
jle
clc
test
mov
push
fwait
or
fadd
fincstp
jl
cmpsb
lahf
loope
enter
repz
mov
sbb
pop
dec
jge
lock
incb
pop
jne
hlt
add
fucom
stos
repz
fwait
popf
xchg
test
or
mov
gs
pop
dec
or
daa
es
push
stos
push
repnz
inc
add
pop
in
iret
mov
mov
pop
cmc
test
push
inc
adc
ret
sub
xor
loopne
push
inc
mov
lret
nop
mov
aam
data16
mov
in
popa
popa
into
fwait
pusha
add
clc
imul
cmp
aam
movsl
lods
push
in
stc
ds
mov
add
out
push
loop
neg
in
rorl
pop
repz
andl
sbb
ja
lds
lret
scas
ret
test
xchg
idivl
out
loopne
lcall
iret
dec
call
in
rorl
rcr
sub
inc
dec
add
stos
add
outsb
xor
into
aad
xor
ss
testb
or
icebp
push
dec
or
push
test
cld
rorl
fdivp
loope
fsubl
xchg
cmc
into
xchg
mov
ret
orb
cld
orb
mov
hlt
jbe
jmp
rolb
mov
lahf
push
jecxz
push
loop
jmp
lahf
ret
not
or
add
imul
loop
inc
mov
mov
xchg
outsb
add
jmp
mov
movsl
lahf
mov
jmp
sti
stos
out
mov
dec
cmc
cli
inc
mov
aad
jns
insl
dec
jo
roll
mov
fmull
in
inc
sub
in
lcall
mov
aaa
xchg
add
pop
add
sub
das
fs
div
lret
pop
cmp
add
addl
or
inc
cmpsb
mov
cmp
push
jle
std
std
pop
les
pop
rcrb
and
lret
stc
test
or
insl
lds
rcll
cmpsl
lock
cmpb
stos
mov
push
cmc
in
cli
push
lret
out
sarb
loope
mov
or
sbb
icebp
sti
add
test
daa
jns
aam
cmp
mov
ffree
ds
fcmovnb
stos
out
shr
push
fidivrl
cmp
mov
xchg
fdivrp
sub
xchg
call
or
lea
pop
stc
leave
mov
mov
idivl
ret
jecxz
bound
sub
dec
stos
aad
rcr
lea
pop
push
stos
push
sbb
adc
push
sbb
xchg
insb
pushw
notl
adc
mov
sub
fabs
cli
add
cmpsb
insb
cmc
and
je
sbb
testl
mov
rorl
out
test
shl
loope
lret
out
dec
add
clc
sub
roll
in
std
sbb
orb
ss
fcmovnbe
sbb
push
or
aas
pmulhw
ja
xor
cwtl
push
cld
jae
lret
push
pop
movsb
lcall
dec
add
neg
into
fwait
and
pop
jle
mov
test
lcall
jb
mov
mov
mov
cwtl
add
dec
push
cmp
insb
cmp
fisttps
cwtl
in
orl
inc
divl
in
mov
loope
jbe
fwait
mov
pop
mov
pushf
idivl
filds
fs
loop
iret
push
add
pop
mov
jg
in
jge
inc
sbb
xor
insl
push
dec
imul
pop
jmp
add
stos
dec
out
dec
lret
mov
popf
fcos
decb
jge
cmp
add
ja
mov
jns
cwtl
sub
ss
lret
mov
aad
lret
jmp
addr16
aad
sbb
dec
adc
cmc
lcall
xchg
out
std
pop
addl
cmp
sbb
pop
fsubrp
inc
push
stos
dec
add
mov
and
ds
ss
push
cmc
into
jo
in
rcrb
xchg
in
or
and
shl
lahf
stos
add
mov
popa
xchg
mov
cmp
lock
arpl
addr16
into
xchg
call
jo
cmp
dec
loopne
fstpl
push
sub
fisttpll
dec
popa
pop
jge
outsl
roll
aad
push
mov
std
int3
mull
inc
push
inc
add
push
test
das
gs
dec
push
aam
pop
aam
add
mov
in
pop
cmp
repz
sub
push
jge
push
xor
cmc
stos
outsl
scas
sahf
lock
jle
push
stc
hlt
push
sub
lds
jecxz
loope
je
cld
add
testl
outsb
addr16
insb
push
sti
xor
jnp
jne
xchg
mov
orb
or
lds
in
std
mov
jg
roll
decb
sti
mov
es
roll
jno
int3
iret
outsb
jg
out
push
inc
out
dec
out
push
mov
and
pusha
lods
icebp
clc
xor
stos
insb
aad
push
lret
xor
loope
mov
ror
test
mov
mov
stc
test
cmp
shl
jle
inc
xchg
jle
mov
xchg
dec
les
out
push
mul
out
mov
jle
outsl
outsl
in
or
lods
in
mov
enter
movsb
je
scas
lret
xchg
mov
sub
fbstp
inc
dec
mov
stc
lods
iret
subb
sub
cmc
push
mov
icebp
cmp
ljmp
mov
inc
mov
xchg
jb
xlat
mov
xchg
mov
xor
jne
or
cmp
pushf
in
or
lods
jl
mov
xlat
dec
ss
rcr
stos
mov
jp
sbb
xor
mov
int
sub
xchg
iret
fmull
dec
fisubl
xchg
push
loope
adc
mov
dec
push
movsl
xchg
push
add
out
fndisi(8087
lods
in
iret
sbb
iret
cmp
fwait
or
ljmp
into
xchg
fisubs
lret
add
subl
or
jg,pt
push
ret
sub
movsb
fnstcw
add
mov
fwait
cs
push
pop
pop
mulb
or
pop
in
push
iret
push
call
rorl
add
inc
inc
inc
pushf
insb
add
insl
cmp
cmp
icebp
insl
jo
jmp
jno
iret
std
push
rclb
xchg
mov
shl
pusha
loope
inc
pop
adc
loope
in
xchg
pop
out
test
std
out
pop
inc
icebp
hlt
jo
roll
or
fcmovnb
add
pop
mov
clc
out
mov
cmp
jnp
in
shrl
or
cld
push
add
jne
fadds
push
ret
jle
adc
repz
out
mov
call
lret
in
iret
stos
neg
jl
add
test
xor
loope
int
fabs
stc
ror
iret
lahf
push
add
call
in
and
lret
stc
cmc
cmp
nop
ljmp
push
cld
icebp
push
lret
fsubl
pushl
out
fucomi
push
notl
dec
aad
mov
in
jo
pop
out
mov
popa
xchg
sbb
jl
aaa
ds
xchg
xchg
jge
add
out
aad
clc
and
and
jecxz
out
push
test
call
shll
pusha
dec
jns
jecxz
addr16
int
push
shr
fdivrl
aaa
stos
repnz
mov
xchg
cmp
or
clc
clc
pop
xchg
hlt
cmp
jp
fs
mov
jne
insb
in
mov
mov
addl
cld
pop
testb
clc
lock
call
out
icebp
shl
cld
fdivrl
jnp
ja
mov
or
mov
or
std
sub
shll
cld
lcall
mov
ljmp
js
fisubrs
jmp
test
rorb
or
add
imul
out
testb
repnz
out
and
aam
push
loop
push
fldt
jbe
push
push
dec
or
pop
add
fbld
push
or
pop
dec
call
pusha
loopne
lret
in
fsubs
loopne
shlb
jle
or
jp
add
jmp
mov
scas
test
rorb
or
dec
test
decb
rcl
sub
enter
roll
rclb
loopne
jmp
ficompl
dec
ret
rorl
clc
or
sub
jecxz
sub
enter
pusha
cld
shl
sarl
in
cwtl
xlat
inc
fimuls
push
fdivr
push
jle
xchg
clc
inc
nop
js
mov
cmpb
add
outsb
mov
jge
lock
aaa
inc
or
jnp
dec
jmp
add
aam
and
mov
mov
hlt
ret
dec
out
test
incb
stos
jg
dec
test
roll
jns
lret
ja
cld
or
cmpsb
pop
test
sub
jcxz
addr16
aas
imul
add
push
and
mov
in
loopne
cli
stos
or
std
or
negl
lock
out
in
loop
frstor
inc
push
shll
push
xor
mov
or
mov
sbb
push
jns
insb
pop
shlb
add
cmp
push
lock
push
or
fcom
or
lods
jns
jl
pop
pop
ljmp
mov
test
divl
fs
cmp
loopne
pop
in
in
icebp
loope
in
add
fldcw
fnstenv
lea
or
cmp
repz
xchg
mov
shll
insb
mov
ret
jne
push
bound
jp
mov
bound
jp
js
movsb
jns
push
fs
test
fnstenv
call
ret
andl
mov
out
mov
lret
ret
stc
stos
jbe
and
add
hlt
jbe
fmulp
ja
mov
or
jge
je
repz
lcall
outsb
push
add
jecxz
cmp
std
negb
mov
loope
out
in
dec
cld
rcl
add
xchg
shl
imul
mov
dec
add
pop
enter
idiv
shl
pop
js
call
in
or
add
add
mov
loopne
jbe
ljmp
or
cmp
shlb
jmp
ljmp
push
jp
mov
add
clc
aam
xor
push
sar
fnstenv
filds
or
xor
fisubrs
mov
pop
mov
or
stos
out
push
sti
rcl
push
or
pop
addl
mov
cmp
iret
or
repz
repnz
jmp
rcl
pop
pop
and
popa
mov
idiv
sub
adc
pop
incb
push
stos
into
cmp
ss
pusha
xor
popa
add
fcom
push
add
mov
mov
fdivs
rolb
mov
pusha
out
cmp
je
fmul
int
mov
dec
pop
rorl
cmp
lret
xchg
iret
ret
lret
pop
cmpsl
mov
xor
test
mull
andl
jno
gs
and
cld
rcl
fucomi
mov
int3
ss
lahf
or
sbb
pop
mov
jae
loop
push
lcall
orb
shl
cld
push
push
dec
dec
rcr
addr16
push
sahf
ffree
xlat
dec
add
push
inc
call
orb
jecxz
mov
xchg
sti
add
and
addb
jg
ret
xlat
cmpsl
andb
in
push
or
ljmp
jle
incl
testl
loopne
addb
aam
orb
shlb
hlt
lret
jo
rcll
not
fs
aam
rcl
push
push
adcl
fdivr
pop
push
out
in
jne
sahf
addr16
pop
rcrb
or
dec
rorl
icebp
add
jmp
sti
into
rcrb
cmp
ret
incb
inc
out
jecxz
xchg
hlt
add
into
jns
idivb
add
loopne
movsb
push
out
fs
fwait
addr16
imul
ja
add
pop
aam
mov
pop
test
cld
rcrl
push
std
sar
daa
aam
cmpsb
pop
mov
insb
pop
in
or
fsubs
add
pop
mov
pushf
imul
push
cmp
push
adc
or
dec
mov
imul
push
es
shlb
orb
pop
int
jne
imul
lahf
push
idiv
rorl
cli
cmp
push
shrb
cmpsl
mov
mov
pop
repnz
in
xchg
add
lods
aam
lock
mov
lahf
imul
bound
jne
lds
in
lods
cld
mov
dec
lcall
add
pop
add
movsl
jne
out
out
cmpb
scas
mov
les
dec
or
daa
idivl
dec
mov
push
dec
add
je
pop
sbb
adc
lods
cld
daa
jge
je
mov
hlt
stos
add
xchg
out
jle
cmp
ja
pop
in
xorb
in
outsl
sti
add
gs
fisubrl
pop
dec
mov
mov
jge
adc
jno
in
adc
repz
mov
and
jmp
mov
inc
jne
xchg
pop
dec
call
cmp
xchg
mov
mov
push
ret
xlat
mov
inc
insb
sub
push
inc
dec
fldcw
add
push
or
add
lock
lret
mov
std
std
cmpsl
mov
lock
mov
in
ficompl
xchg
stos
repz
rorb
dec
ds
lods
enter
lret
lods
stos
push
inc
popf
jae
add
xor
insl
push
mov
insb
pusha
cmc
out
pop
int3
scas
cmpb
fs
not
in
cli
in
popa
fistpll
mov
pusha
sti
lock
outsl
push
mov
inc
gs
xchg
ds
call
icebp
std
cmp
mov
cmc
es
jecxz
mov
add
jecxz
mov
pop
lds
jge
mov
shll
ljmp
ret
aaa
out
outsb
jo
dec
jne
push
sbb
add
rep
and
popa
jno
or
push
daa
push
add
inc
xchg
aad
cli
lahf
dec
pop
xor
jg
aas
dec
add
imul
mov
mov
repz
add
fldl
dec
pop
xchg
cld
mov
mov
xor
cmp
testl
lret
push
test
cld
adc
bound
fimuls
push
push
pushf
std
es
out
outsl
pop
out
clc
cmpsb
in
and
aad
jo
lock
cmp
js
test
xchg
insl
js
mov
sub
pop
pushf
fisubs
push
add
jg
jmp
rorl
cmpsl
aad
decl
sub
iret
jmp
and
cmc
push
pop
pushf
jp
orb
jno
fiaddl
in
sti
fwait
jl
aam
insl
rorb
dec
movsl
stc
data16
addr16
jl
sarl
test
mov
and
movd
jge,pt
in
and
lods
fistpll
sub
inc
dec
push
dec
stc
add
mov
cltd
xchg
sub
push
in
inc
or
push
inc
mov
lods
jg
sbb
dec
rcrl
pusha
mov
stos
into
idivl
mov
xor
inc
dec
arpl
out
push
loop
jae
in
inc
mov
fistpll
mov
mov
scas
pop
inc
add
sub
cmp
lret
jne
mov
push
int3
iret
aad
or
jecxz
test
movsl
jbe
dec
pop
test
ret
das
sub
cmpsl
jnp
loope
loope
stos
lret
jge
dec
fsubrl
incb
lret
mov
jns
push
stos
jns
add
jp
dec
pop
in
insl
iret
inc
inc
std
push
mov
mov
jo
popf
test
scas
ret
repz
and
inc
inc
cmc
enter
popa
inc
movsl
mov
jle
mov
mov
enter
in
xchg
jo
lcall
and
shll
jp
in
or
jge
cmpsl
mov
in
test
add
aas
push
pop
xchg
push
iret
lret
push
sbb
test
mov
or
ja
add
mov
or
pushl
fiaddl
nop
rclb
lods
dec
jg
jle
ja
daa
mov
sub
ljmp
add
sbb
push
outsb
imul
idiv
repz
push
mov
dec
ja
ds
pop
out
dec
sbbl
shl
in
not
adc
fnstcw
pop
sub
fsts
sbb
fiadds
icebp
or
shl
inc
inc
icebp
fnstenv
inc
cmc
icebp
push
out
jne
lret
rclb
mov
jns
mov
add
dec
xor
pop
mov
pop
pop
sarl
aam
lahf
xchg
pop
dec
jg
fidivrs
push
xchg
shll
pusha
mov
cmp
neg
sub
xchg
adc
mov
adc
rcr
movsbl
btr
mov
ror
mov
pushf
rcl
shld
adc
mov
or
stc
sbb
mov
shr
call
push
call
stc
movb
jmp
pusha
pusha
push
movl
pushl
mov
movb
movb
pushf
pushl
pushl
ret
ret
out
push
push
fs
jp
jg
push
popa
nop
jle
jmp
push
or
sbb
pusha
mov
push
inc
mov
add
xchg
hlt
jb
fisttpl
movsl
jle
negl
shll
xchg
cmp
and
add
rclb
ja
imul
mov
test
gs
call
fiaddl
ret
jmp
out
loope
loope
out
inc
loop
or
dec
sub
mov
call
dec
scas
dec
mov
mov
dec
movsb
inc
test
and
call
sti
test
incl
pop
jge
and
mov
cs
scas
leave
lds
push
inc
sub
sti
gs
rorb
adc
scas
sub
out
mov
repz
negb
test
lcall
rorl
cwtl
cmp
mov
mov
xchg
mov
cmpsb
pop
mov
or
mov
pop
mov
add
imul
cmp
adc
cmp
mov
dec
test
mov
sarb
cmpsl
mov
cmp
xchg
and
sub
xor
and
jb
add
pop
mov
push
nop
adc
jmp
arpl
pop
movsl
fucomi
popf
cli
adc
or
cld
or
add
enter
add
mov
jmp
or
jae
xor
lock
out
das
cmp
jecxz
push
addr16
or
clc
jge
lods
sub
or
ret
cs
cmp
inc
mov
adc
lcall
in
gs
push
cs
sarl
leave
outsb
xor
jae
pop
dec
das
mov
cmp
stos
or
pop
cmpsb
sbb
jb
xor
ja
lret
into
imul
pop
mov
push
mov
mov
inc
jmp
pop
and
data16
jno
fmuls
and
sub
mov
cmpsl
test
push
mov
pop
std
pop
inc
notb
sbb
push
jle
sbb
push
jg
adc
sbb
cmpsl
push
or
jnp
dec
sbb
mov
cmpsb
scas
xor
je
aas
xor
js
aam
mov
cwtl
push
inc
inc
ds
and
pop
movsl
adc
fdivrs
out
sbb
mov
pusha
stc
or
pusha
pushf
movw
pushl
lea
je
stc
cmp
pushf
pushf
pushl
ret
popf
push
das
cmpsl
fucomi
jmp
jl
jg
fdivrs
loopne
xor
lods
push
push
adc
mov
test
jl
jnp
sbb
gs
cmpsl
fucomi
insb
arpl
jb
data16
mov
xchg
pushl
pop
adc
push
loop
pop
and
iret
shlb
add
pop
add
addr16
xor
and
test
add
jo
jne
pop
adc
and
push
mov
lds
shrl
sarb
ret
cmp
and
cmpsb
fdivs
cmpsb
sti
arpl
mov
sub
dec
push
stos
and
adc
sahf
std
mov
cmp
push
and
data16
fsubr
fisttpll
push
fdivrl
popf
stc
rol
in
clc
xor
jb
stos
fucomi
stos
rorl
vrsqrtss
push
loop
cmc
pop
loop
hlt
dec
xchg
sub
movsl
incl
xchg
lret
fucomi
cmpsl
pop
mov
cmpsb
pop
mov
pop
cmpsb
pop
imul
push
xchg
mov
fwait
in
xor
cmc
jecxz
in
xor
push
fcmovu
scas
cmpsb
push
jg
ret
stos
adc
xor
sbb
call
mov
push
jo
pop
lret
inc
fsub
mov
int3
clc
inc
jmp
inc
call
cmp
adc
into
insl
out
mov
pushl
xor
or
sbb
lcall
or
and
pop
and
fldl
hlt
outsl
or
call
sbb
aas
and
dec
xor
cmp
inc
fnstenv
jl
arpl
fbld
cmp
mov
sbb
aaa
imul
aas
sbb
shlb
lods
stc
outsl
xor
add
mov
xor
mov
sub
push
sbb
std
adc
stos
xor
pop
push
outsb
jle
repz
and
loopne
hlt
pop
mov
dec
sub
shrb
or
sbb
mov
xchg
popa
movsb
aad
sbb
mov
nop
insl
cmpb
mov
xchg
addr16
out
push
pusha
inc
mov
ret
pop
pop
mov
sub
jmp
movsb
roll
aam
call
lock
mov
imul
orb
push
adc
ficomps
notb
xchg
int
leave
ror
test
mov
daa
adc
imul
lret
out
dec
in
cmc
pop
jecxz
loope
outsb
sbb
into
in
aad
pushf
lea
jb
push
jmp
mov
out
inc
and
fsubs
fidivs
shll
pop
sub
call
in
cs
mov
dec
mov
scas
xchg
sbbl
xor
sbb
and
sbb
scas
add
test
mov
or
mov
push
shll
cmc
mov
in
inc
pop
testb
loope
call
inc
js
cmp
shll
lahf
jae
pusha
andb
xorl
push
scas
ret
pop
push
jo
xor
and
ja
popa
pusha
lea
xor
insl
ficoml
and
insb
mov
cs
sbb
jge
add
xor
out
jne
sahf
cltd
inc
push
loopne
test
popa
mov
xchg
rcr
mov
xchg
ja
xchg
iret
cmc
xchg
pop
lock
lahf
fistpll
pop
ljmp
mov
dec
scas
xchg
cmpb
and
sub
pop
shlb
shlb
mov
cmc
sbb
mov
sub
dec
stc
add
jmp
jmp
out
sub
dec
mov
mov
dec
mov
mov
or
jb
in
insl
fnstsw
adc
mov
mov
xor
jecxz
aas
adc
cmp
inc
rcl
pop
dec
xor
mov
xor
fcmove
mov
push
inc
add
or
repnz
pop
bound
inc
sbb
repz
inc
adc
jne
mov
in
dec
call
push
std
pop
icebp
sub
push
sub
aas
int
int3
or
dec
mov
popa
fwait
jo
imul
xchg
mov
mov
or
xor
mov
arpl
adc
push
xor
adc
mov
dec
and
lret
sti
lcall
lahf
lds
sbb
fwait
cwtl
cmc
pop
lock
cmp
inc
in
sub
mov
into
scas
xor
xchg
cwtl
and
ss
and
pop
dec
or
sbb
imul
pop
mov
inc
mov
mov
lods
les
adc
push
cld
sbb
sbb
xor
bound
subl
shrb
lods
cmc
xchg
lods
xchg
and
mov
inc
and
cmp
and
and
fucomi
xchg
add
loopne
cmp
pop
mov
adc
xlat
lods
daa
dec
lods
dec
mov
mov
push
imulb
sub
call
inc
pop
sahf
insb
xchg
shll
or
and
stc
sti
inc
mov
push
movsb
xchg
sbb
iret
int
jg
shrl
adc
cltd
fucomi
cmp
aad
inc
jnp
gs
fdivrl
jne
outsl
pop
das
sti
movsl
lcall
aaa
add
lret
fs
jne
ror
bsr
mov
push
jmp
jmp
lret
jl
fstp
out
frstor
fbstp
xor
and
sub
stos
addr16
test
mov
loope
mov
mov
out
mov
sub
rcl
cmp
add
cmc
add
push
add
xchg
cmp
fsubl
repnz
insl
cmp
movsb
imul
mov
cs
xor
mov
lret
or
ror
cmp
pop
adc
adc
ret
outsl
leave
ja
fs
into
stc
mov
jb
negl
adc
fucomi
jg
jb
jae
cmp
jl
fcmovb
lods
gs
cmpsl
push
loop
and
sub
inc
shrl
inc
mov
add
scas
aad
and
call
adc
and
pop
lret
jno
xchg
adc
jne
hlt
cltd
dec
pusha
adc
je
lods
pushf
hlt
mov
shrl
aad
mov
pusha
ret
lret
outsl
fcoms
mov
out
clc
repz
pusha
sarl
fldcw
imul
jg
cld
push
fucomi
pop
cmc
sbb
adc
sbb
hlt
sbb
push
xlat
adc
dec
cmc
push
ljmp
inc
sbb
jg
shrb
inc
popf
in
das
sub
pop
sbb
sti
pop
adc
push
jae
xor
and
mov
push
cltd
sahf
pop
pop
inc
out
xor
int3
int3
cmp
mov
xchg
mov
popa
or
xchg
jb
out
mov
iret
cmc
pop
mov
xor
test
cld
xor
push
fidivrs
shlb
jp
pusha
les
or
cmp
fucomi
xchg
imul
mov
jecxz
dec
mov
mov
mov
rcrb
out
lods
sti
insl
mov
test
fisttps
dec
dec
mov
rcrl
scas
sub
dec
jns
pop
movsb
or
je
cli
xchg
mov
push
sbb
test
shll
lret
jle
insl
pop
sub
inc
pop
mov
popf
cpuid
nop
call
sbb
sbb
or
push
test
js
push
jno
cmc
jb
push
jbe,pn
and
cmp
pop
leave
lods
dec
mov
inc
mov
inc
jl
fucomi
adc
sbb
sub
lahf
gs
and
adc
icebp
xchg
movsl
adc
inc
pop
add
sbb
out
inc
and
cs
jns
mov
lcall
and
fcmovbe
scas
pushf
mov
lcall
lds
sbb
shll
xchg
idivl
jg
lcall
stos
cltd
stc
insl
or
mov
inc
sbb
adc
mov
inc
cmp
aad
shl
xlat
test
xchg
outsl
nop
mov
lods
roll
jmp
mov
add
inc
dec
scas
ljmp
mov
xchg
cmpsb
pushl
call
stc
rcrb
add
add
add
sbb
add
add
imull
add
add
add
sbb
add
add
xor
adc
add
add
add
add
in
sbb
add
add
scas
lahf
sbb
add
add
adc
add
js
sbb
add
add
ja
sbb
mov
add
adc
jno
adc
arpl
sbb
add
add
add
add
push
stc
adc
icebp
adc
push
repz
insl
clc
pop
hlt
fisttps
ja
ret
and
cwtl
lret
les
testl
iret
push
rorl
xor
cmpsl
stos
int
xchg
fdivrl
jmp
mov
cmp
mov
jnp
adc
insl
and
jae
mov
sub
iret
addr16
orl
push
push
loop
inc
call
mov
push
or
and
or
js
jmp
or
dec
sub
or
mov
jno
fucomi
adc
dec
adc
movb
movw
jmp
dec
pop
inc
out
push
data16
imul
andb
fs
faddl
xchg
mov
fists
adc
mov
mov
pop
adc
cli
adcb
inc
mov
xor
push
mov
cltd
lods
dec
xor
inc
cwtl
jecxz
dec
pop
or
scas
cmpsl
les
ret
xchg
and
mov
fs
ljmp
push
inc
mov
and
pop
icebp
adc
loopne
je
addr16
push
jl
sub
popl
andb
push
and
fucomi
out
gs
pusha
js
or
cli
arpl
cwtl
fdiv
daa
and
mov
lret
sub
and
shll
fadd
out
ret
inc
mov
cli
call
testl
je
jg
cmp
dec
adc
pop
lods
adc
fucomi
jge
or
cmp
cmp
cmp
cmp
mov
fcmovnu
out
cmpl
jae
jb
imul
ja
cli
push
cmp
jo
jp
pop
lods
dec
jo
xchg
outsl
mov
mov
mov
out
adc
fdivl
push
jl
xchg
pop
and
sarb
push
jg
fdivrl
pusha
inc
cmc
cmp
dec
or
pop
xor
and
ret
imul
sahf
cld
add
sbb
sti
orb
bts
or
js
or
push
or
out
jb
jae
ja
push
js
jbe
mov
add
scas
xchg
mov
jb
push
add
adcb
pusha
addr16
bound
cmp
sbb
dec
js
adc
icebp
div
pop
inc
and
mov
inc
sbb
pop
in
mov
sbb
shlb
adc
pop
mov
xlat
jg
adc
std
loop
fs
je
jmp
mov
mov
fucomi
dec
sub
xlat
xor
cmp
xor
ss
nop
mov
jmp
lea
outsl
push
jmp
daa
ret
sti
cmp
or
cmp
add
movsl
mov
and
repnz
pop
movl
les
aaa
ljmp
sbb
int
leave
outsl
call
jmp
add
jp
adc
aas
dec
jp
sbb
das
and
pusha
mov
shlb
aas
sbb
sbb
dec
mov
push
imul
jg
data16
out
dec
mov
mov
dec
mov
repz
lock
jo
xchg
js
inc
mov
jbe
in
mov
mov
rolb
into
mov
test
sub
cmp
xor
and
insb
int3
xor
mov
push
inc
fsubs
ljmp
xor
dec
dec
adc
sbb
call
xor
dec
popl
shlb
push
mov
dec
cld
aam
stc
fwait
shl
decl
dec
lods
dec
popf
xchg
jg
not
imul
jle
jne
addb
rcrl
outsb
inc
sti
jae
pusha
jmp
and
xor
cmp
enter
add
or
cmp
daa
lret
pusha
adc
icebp
rorb
inc
ds
sub
subb
or
jne
popf
out
jae
shrl
repnz
divb
lcall
fidivrl
jnp
jae
ja
jo
or
mov
mov
cmp
aas
inc
adc
adc
sub
push
movzbw
mov
setno
mov
pusha
pushf
xchg
pushf
mov
lea
mov
jmp
mov
out
je
repz
sbb
push
bnd
or
imul
fwait
loope
or
add
sbb
or
add
pop
cmpsl
xchg
pop
mov
cmpb
daa
push
stos
adc
add
mov
inc
lds
int
call
stos
pop
es
cmp
aad
inc
dec
xor
sbb
mov
stos
and
sahf
sti
cld
xchg
testb
pop
mov
inc
pop
rol
inc
jmp
divb
in
je
faddp
stos
ror
inc
cli
dec
dec
aam
out
sub
sub
xor
lods
sbb
mov
jmp
dec
push
adc
push
insl
dec
pop
add
in
aam
out
inc
cmpsb
pop
cmpsl
add
scas
sbb
cmp
icebp
sub
sahf
cmp
ret
and
enter
test
fbld
xor
ja
cmp
dec
lods
xor
inc
into
fsubr
xor
jmp
sbb
lret
lds
sub
push
aam
out
xor
dec
jmp
xor
bound
adc
adc
ja
add
andb
mov
pop
lds
mov
or
sahf
sti
mov
jp
adc
es
aad
shr
add
test
xchg
mov
ja
daa
cmp
sbb
mov
sbb
adc
or
aaa
xchg
fwait
daa
xor
push
add
or
mov
fucomi
insb
mov
jl
movsb
sbb
xor
pop
and
sub
and
dec
outsb
adc
ljmp
sbb
inc
xlat
sbb
jge
cmp
dec
test
shlb
popf
pop
cmp
or
add
and
jecxz
mov
jecxz
jns
or
cmp
xor
mov
insl
iret
fnstcw
insb
adc
out
enter
movsb
cmc
mov
mov
mov
mov
xchg
xor
fnsave
aad
inc
pop
and
stc
lock
mov
addr16
lds
lods
shlb
popf
insl
ror
jge
xchg
lods
sub
inc
adc
mov
xlat
daa
pop
shrb
and
jmp
icebp
xlat
pop
push
pop
and
mov
or
pop
cmp
cmp
mov
mov
iret
mov
push
mov
dec
cwtl
mov
push
mov
mov
scas
aam
stos
adc
jns
gs
sub
jno
pusha
sub
insb
rcr
js
arpl
out
outsl
ja
loope
cmp
outsl
dec
mov
cs
lea
and
scas
lret
sub
push
mov
sarb
dec
xchg
mov
test
test
jg
jmp
enter
jbe
push
push
lods
rcrl
fstpl
hlt
rorl
cmp
sbb
lods
sbb
adc
cmp
shlb
adc
add
loope
aas
mov
aad
and
inc
pop
push
cmp
sti
stc
push
push
pop
dec
std
xchg
adc
inc
addr16
or
jg
pop
stc
out
xchg
popf
in
mov
sub
push
les
out
xlat
stos
in
movsl
cltd
stos
addr16
xor
stc
bound
les
gs
je
jns
sub
clc
push
jae
fucomi
pop
mov
inc
cmpsl
push
mov
mov
stos
mov
hlt
roll
ss
inc
push
stos
push
movsl
popf
cmp
sbb
insl
push
pop
pop
mov
jmp
dec
test
out
sti
xchg
xchg
icebp
pop
and
mov
nop
push
mov
cmp
pop
mov
stos
cmp
mov
jecxz
push
test
xor
add
dec
jp
xor
movsl
or
pop
aaa
cwtl
cmp
cmp
je
push
cli
pop
and
rcr
out
les
xchg
and
arpl
mov
cmpsl
inc
das
and
mov
sbb
adc
push
cld
add
pop
lret
call
cmp
or
fisttpll
in
adc
adc
mov
or
pop
pop
adc
jmp
inc
lods
adc
mov
pop
and
adc
out
es
shrb
insb
leave
jno
les
pop
jno
jmp
jle
imull
or
fs
ja
pusha
inc
inc
inc
dec
rcl
or
cmc
xchg
sar
mov
ror
mov
push
jmp
xchg
mov
sbb
pop
cmc
sysexit
nop
jmp
imul
xor
ret
mov
scas
inc
mov
sahf
das
push
jp
jmp
repnz
adc
pop
bound
sti
jp
pushf
out
xor
test
dec
pop
pushf
inc
aam
inc
xor
pusha
fnsave
addr16
frstor
call
push
push
pushf
pushf
movl
pushl
push
pushf
lea
jmp
or
push
in
notl
out
add
sbb
sbb
adc
xlat
outsb
mov
pop
js
out
lea
stc
loopne
fistpl
ja
fisubrl
fbld
outsb
xchg
addr16
sbb
adc
add
mov
inc
das
jo
mov
fwait
cmpsb
es
sub
in
in
sbb
cli
push
stos
xchg
sub
dec
sbb
test
aaa
add
inc
es
pop
loopne
jmp
pop
repz
nop
push
jnp
loope
call
jae
xchg
jmp
mov
pop
mov
mov
mov
mov
xor
mov
sbb
cmp
int3
sbb
push
out
sti
mov
pop
pop
sub
mov
or
out
in
adc
pop
mov
add
pop
push
mov
popf
pop
stos
mov
jbe
add
dec
adc
jmp
pop
repnz
pop
mov
shrl
adc
mov
inc
and
movsl
mov
fucomi
adc
push
jmp
out
add
orb
movsb
fidivs
adc
ljmp
jbe
je
insb
push
sub
jp
test
fisttps
int
out
jl
arpl
imul
out
mov
imul
xor
pop
fs
mov
pop
add
mov
fucomi
lcall
lret
mov
or
adc
xor
lcall
bound
jnp
cwtl
cmp
mov
adc
inc
gs
push
and
loop
std
shrl
rolb
shrb
and
shll
test
cmp
and
loop
and
test
ss
and
cmp
push
xchg
movsl
cmp
xor
ja
int
out
testb
insb
push
sub
imul
xor
aaa
push
fbld
pop
mov
xorb
mov
jmp
sub
and
sahf
cmp
add
push
test
pop
ret
or
push
je
icebp
jmp
xchg
push
xor
sti
cltd
sub
mov
or
cmp
int
mov
jae
push
pop
movsb
fsubrs
hlt
fucomi
out
nop
sbb
mov
adc
add
pop
xchg
movsl
lcall
popf
rdtsc
nop
jmp
repz
leave
int3
fucomi
loope
jecxz
jmp
sbb
daa
xchg
mov
and
jle
pop
clc
or
and
subl
cmpsb
mov
adc
pop
pop
out
cwtl
fdivs
cmc
mov
scas
and
mov
movaps
test
shll
jae
pop
jb
test
lock
mov
mov
adc
divb
inc
loopne
cmp
sub
pusha
int3
fucomi
dec
mov
lods
push
mov
test
push
mov
ljmp
pop
pusha
imul
sub
add
test
jmp
xchg
mul
lods
int
pop
mov
imul
hlt
xchg
xor
mov
call
adc
inc
shll
int
lret
insb
xlat
jnp
in
xor
mov
bts
add
add
movsbw
mov
xor
mov
cmp
cmc
bt
repnz
pusha
pusha
pushl
lea
jne
movzbl
call
ljmp
je
ja
jl
je
jp
jbe
insl
cmp
mov
daa
xchg
mov
das
sarl
push
pop
cmp
in
push
mov
insl
out
shrl
xor
js
push
fdivrs
mov
andl
ret
dec
and
mov
inc
pop
and
mov
pop
mov
cmp
add
jnp
and
fwait
jns
sub
rdtsc
or
es
aas
cltd
dec
fs
xchg
xlat
push
js
mov
jmp
push
cld
inc
in
jnp
in
addr16
je
out
icebp
jmp
mov
mov
fucomi
dec
ss
das
ret
es
fst
push
loop
and
and
clc
pushf
or
popf
xchg
jle
insl
sbb
and
jbe
arpl
jbe
jns
jp
pusha
mov
movsl
mov
ss
into
fucomi
ja
jne
jo
jp
insb
mov
pusha
xchg
mov
ret
aam
or
dec
lods
dec
faddl
cs
loopne
push
xchg
xchg
jae
fsub
cmp
push
pushl
sbb
test
mov
daa
pushl
mov
ret
mov
xorl
or
mov
push
leave
xchg
test
ljmp
pop
daa
stos
cmp
mov
pop
sbb
ror
call
js
mov
jae
push
sahf
ficompl
sarl
push
pop
or
fmuls
mov
scas
sub
jmp
repz
lret
xchg
push
popa
jno
test
std
les
lcall
popf
dec
int
out
ljmp
daa
xor
loop
stc
mov
mov
push
dec
add
pushf
xlat
xchg
or
std
lcall
xor
mov
adc
add
jbe
sar
lock
xor
pop
inc
mov
shl
jo
cmp
int
shrl
jg
loop
adc
add
shll
pushf
cmc
and
stc
pusha
add
pusha
push
lea
jmp
jmp
pushf
pushf
pushf
lea
jne
pushf
sets
mov
dec
rol
btr
cmc
sub
shrd
lea
pusha
call
push
dec
inc
dec
dec
xor
cs
dec
dec
add
repnz
cli
jp
gs
push
into
je
inc
add
push
inc
mov
into
mov
inc
cltd
jge
adc
jno
bound
stos
jae
xchg
mov
jecxz
add
outsb
aas
and
xchg
loop
aas
ljmp
sub
or
movsb
shlb
mov
pop
dec
mov
adc
icebp
inc
movsl
sarb
xchg
iret
dec
dec
aad
adc
inc
loopne
push
push
fimuls
stc
jmp
hlt
out
push
cwtl
mov
movsl
mov
xor
dec
pshufw
pop
das
push
fstl
inc
arpl
fstpt
nop
int3
stos
dec
jmp
imul
adc
cld
enter
fists
and
movsl
mov
movsb
out
sub
pop
lret
pushf
adc
xchg
lret
mov
inc
xchg
mov
in
dec
imull
pusha
sub
ret
jo
loope
sbb
inc
mov
mov
push
mov
mov
clc
imul
repnz
xchg
sti
pop
mov
xor
repnz
jge
nop
adc
sti
fcoms
ret
lods
out
mov
es
fs
ror
clc
jae
outsb
fiaddl
xor
dec
sub
hlt
push
cmpsl
and
dec
sbb
cmc
std
and
xchg
nop
sbb
inc
cmp
add
rcrb
test
outsl
test
add
adc
aad
jns
scas
shr
push
fimull
rorb
lret
add
dec
lret
fucomi
pusha
sahf
arpl
popa
ja
pusha
mov
mov
push
pusha
imul
mov
cmp
sub
js
add
inc
pop
jns
test
adc
mov
inc
push
pop
jecxz
mov
jg
faddl
aam
divl
imul
nop
inc
and
mov
sub
enter
fsubs
push
arpl
imul
shll
movsl
dec
dec
sbb
push
pushf
mov
call
lcall
lret
adc
jle
js
jl
xchg
mov
adc
pop
mov
adc
nop
imul
add
and
test
hlt
sub
inc
sub
js
adc
aaa
push
pop
not
addb
imul
xor
sbb
sub
cli
xlat
xchg
es
arpl
fwait
and
mov
and
sub
jg
xchg
xor
xor
push
pushl
ror
push
inc
cld
test
pushw
popfw
pushl
inc
call
push
pushf
pushf
movl
pusha
pushf
mov
push
lea
jmp
mov
xchg
push
xor
sub
cmp
cmp
aas
frstor
test
mov
stos
fwait
jge
sbb
leave
push
mov
or
fidivrl
push
int3
mov
lcall
sbb
loopne
dec
rcll
lock
dec
fistpll
pop
pushf
sub
leave
cmp
jecxz
pushf
pop
xchg
pop
pop
das
es
mov
mov
push
pop
mov
jp
xorb
dec
ljmp
inc
imul
mov
hlt
push
loop
not
call
cmpb
pusha
pusha
lea
jne
or
sub
clc
add
mov
stc
rcl
inc
rcl
add
shl
cmp
jmp
mov
pusha
bswap
mov
mov
mov
pushl
ret
mov
mov
fucomi
dec
sub
sub
sub
sub
cmp
xor
and
mov
mov
adc
sbb
movsb
mov
mov
or
pushf
cmpsl
cltd
std
repnz
lods
ljmp
xchg
mov
inc
adc
popf
pop
cmc
push
mov
loope
adc
sub
mov
dec
xchg
orb
push
cmp
movsb
mov
fucomp
jecxz
push
cli
cmpsl
ret
fcmovnbe
mov
push
mov
xchg
sub
loope
fldl
jb
mov
xor
fucomi
hlt
pushf
jp
push
cmp
mov
sub
mov
enter
cmpsl
mov
and
cmp
ss
ret
sti
les
sarb
xlat
pop
outsl
outsb
js
push
mov
and
cmp
or
pop
es
mov
popa
jne
test
push
inc
add
cmp
mov
inc
insl
jp
cmp
mov
or
pusha
mull
enter
data16
adc
and
push
ret
push
adc
les
dec
inc
lods
lock
adc
in
out
mov
rorl
lods
popa
and
mov
or
mov
mov
insl
adc
fsubl
cwtl
aam
adc
inc
adc
or
add
xorb
jnp
cmpb
jge
in
je
pop
add
test
out
cmp
and
xor
sar
sub
and
dec
mov
pushf
inc
pushf
push
pushf
not
mov
lea
push
pushf
lea
call
jmp
jne
dec
fucomi
mov
adc
out
or
sbb
or
shl
rolb
lahf
cmp
ficoms
jne
in
add
jp
add
push
xchg
jb
insb
jmp
lods
stos
frstor
shll
clc
xor
lret
pop
inc
or
or
push
xchg
inc
fisttps
adc
stos
cmp
clc
xchg
mov
or
shll
push
stos
mov
lock
out
testl
add
inc
xchg
push
out
repnz
or
xchg
sub
add
push
sub
add
pop
aam
fucomi
cld
add
add
cld
or
or
sbb
stc
pop
imul
mov
inc
mov
xchg
mov
add
and
jo
stos
mov
test
add
fnstsw
pop
mov
loope
in
cmp
or
pop
out
xchg
and
add
lcall
dec
cld
push
cmc
dec
out
dec
loop
icebp
dec
stc
shlb
outsb
push
repnz
inc
cld
pushf
pusha
movw
call
inc
out
fucomi
inc
movsb
dec
scas
push
mov
cmpsb
pop
mov
mov
mov
xor
push
lock
addr16
mov
jnp
mov
stos
push
inc
sub
ficoms
push
sub
mov
data16
dec
test
sbb
int3
mov
jmp
pusha
cmp
mov
mov
loop
loope
loopne
loopne
cli
inc
dec
mov
lret
stos
nop
and
test
test
pushf
lea
jne
call
les
rcr
ds
movsl
pop
mov
mov
lods
dec
stos
pop
scas
inc
out
pop
add
lds
adc
dec
mov
pop
push
into
jp
loop
jno
mov
cmp
and
dec
clc
xorl
sti
pop
mov
sarb
cld
in
aaa
dec
sar
or
jne
xor
mov
sbb
push
inc
add
adc
mov
pop
jnp
push
xor
push
mov
or
and
loop
cmp
leave
mov
lea
je
shl
add
xchg
shrd
shl
sub
call
lea
call
pushf
push
jmp
jmp
aad
rcr
mov
inc
mov
mov
mov
mov
enter
in
sub
enter
les
out
xchg
insb
mov
repnz
mov
push
test
gs
mov
insl
test
add
fisubs
xor
cmpl
push
int
pop
xor
inc
pushf
bound
add
outsb
fisubl
mov
js
push
sub
add
daa
inc
lretw
and
mov
adc
cltd
xor
test
pushf
sub
xchg
jg
pop
rcr
jne
pusha
subl
movsl
ljmp
movsb
aas
and
addr16
cwtl
std
push
cld
or
or
adc
or
fchs
int
mov
dec
jge
aad
std
pop
jmp
out
les
push
mov
js
imul
shlb
sarl
cmp
nop
inc
stc
cwtl
test
mov
add
sbb
movb
push
lea
jmp
cmpb
pushf
pushf
mov
mov
lea
jne
pushf
lea
jmp
rcrb
mov
popa
xorb
xchg
jae
pusha
inc
jge
ljmp
adc
popa
test
gs
push
jne
or
inc
mov
sub
dec
adc
add
test
jno
clc
loop
xor
mov
mov
ja
enter
cld
xchg
push
flds
test
jnp
nop
addl
mov
daa
inc
push
stc
sbb
int
std
jns
daa
fdivl
push
and
out
sti
dec
cli
dec
std
inc
stc
inc
cld
inc
outsb
sbb
shr
push
push
push
pusha
lea
call
test
pusha
cmp
jmp
shl
xor
lea
seto
mov
push
lods
jmp
bt
xor
pushf
lea
ja
push
inc
lea
pushf
call
loop
fadd
fucomi
sbb
test
jne
push
jnp
popa
lcall
sti
xchg
imul
aas
inc
push
sub
shl
inc
jecxz
lcall
push
adc
loopne
gs
xchg
pop
ljmp
sub
inc
aam
sbb
push
scas
xchg
mov
insl
ret
in
push
push
lods
lock
dec
ss
jmp
jecxz
ljmp
pop
xchg
sub
cld
shrl
pushf
mov
movl
pusha
movl
movb
lea
jmp
pop
test
ret
aam
ret
xor
cmp
and
daa
push
fcmovnu
shrl
aam
xchg
out
fstpt
sub
subl
push
repnz
xor
mov
aam
pop
push
or
fcomi
mov
lret
sbb
popa
inc
mov
dec
and
push
out
inc
out
pop
loopne
hlt
mov
dec
inc
sbb
std
fucomi
ss
sub
and
xor
xor
cmp
cmp
mov
push
jmp
hlt
jb
and
push
cmp
scas
inc
jo
jmp
push
jl
mov
mov
pop
das
nop
clc
cmp
cmp
in
mov
stos
sti
add
cmp
jle
add
shl
lods
imul
jne
add
es
addr16
add
sbb
cmp
dec
mov
cmp
cs
hlt
les
mov
mov
fucomi
mov
pop
test
cmpsl
inc
movsb
dec
lods
push
insl
outsl
fidivl
aad
shll
xor
sub
sbb
jae
push
dec
add
lahf
popa
out
mov
sahf
fwait
test
push
mov
ret
xchg
cltd
sbb
es
mov
xlat
mov
xor
movsb
xor
xorb
les
push
push
jg
pop
mov
push
sti
in
mov
enter
shll
cmp
out
pop
int3
pop
mov
push
xchg
jl
push
mov
mov
enter
inc
xchg
add
sti
jecxz
lcall
aam
out
push
dec
out
mulb
call
mov
in
jne
push
or
pop
movsl
lods
into
aam
jecxz
ret
mov
push
jne
jo
popa
iret
adc
lahf
mov
in
cli
xchg
mov
aad
arpl
cmp
pusha
out
cltd
int
iret
arpl
sti
imul
les
push
jns
jecxz
out
out
out
jl
stc
rcrb
add
add
add
sbb
add
add
imull
add
add
add
sbb
add
add
xor
adc
add
add
add
add
in
sbb
add
add
scas
lahf
sbb
add
add
adc
add
js
sbb
add
add
ja
sbb
mov
add
adc
jno
adc
arpl
sbb
add
add
xor
cmp
aas
shlb
frstor
and
xor
daa
sarb
lret
mov
pop
pop
mov
mov
cmpsl
adc
ret
xlat
test
push
sbb
shll
mov
sub
lods
sub
mov
jecxz
push
cmp
sub
es
mov
dec
xchg
insb
es
sub
jge
jle
rcr
imul
je
push
aad
push
xchg
sbb
xchg
mov
shrd
cmpxchg
and
jp
mov
mov
insb
xchg
je
jne
bound
jbe
jg
pop
stos
mov
mov
cltd
xlat
mov
and
cmp
fisttpll
sub
add
inc
mov
movsb
mov
pop
push
cmpl
leave
repnz
testb
mov
or
cmp
out
cmp
xor
shrl
out
ror
out
pop
shlb
dec
add
xor
lret
sub
sub
cmp
scas
or
pop
xor
in
rcrb
rcll
ret
xchg
push
nop
lods
pop
sbb
jmp
dec
mov
mov
push
popa
sub
add
cmp
mov
cli
rcr
ret
cmpsl
adc
bound
mov
mov
add
pop
mov
lcall
orl
xor
pop
adc
ljmp
cli
outsl
sbb
pop
shrb
jo
addr16
push
cs
dec
js
dec
sbb
mov
call
lahf
mov
pushf
movzbl
lea
push
call
fidivl
stc
fucomi
cmp
mov
dec
mov
pop
outsb
pop
int3
lods
clc
in
aam
int3
dec
and
sub
mov
push
jl
or
dec
mov
mov
cli
xchg
sbb
jo
loop
fs
xor
insl
imul
pusha
inc
jl
movsl
popf
inc
aam
or
pshufw
push
outsb
shrb
sarb
insl
enter
sbb
sbb
mov
movl
call
pushl
pushl
lea
je
push
pushf
test
add
cmc
cmc
cmp
jmp
mov
out
mov
test
inc
test
stos
dec
mov
into
shrb
enter
adc
stc
adc
bound
rcrb
mov
mov
popf
push
std
xchg
into
mov
cmp
jb
mov
iret
mov
mov
fwait
lds
cmp
jno
test
jne
fstpt
xor
xchg
cmp
push
or
mov
pop
jmp
aaa
nop
sbb
fucomi
xor
xor
aaa
fidivrl
lret
das
lret
das
aad
movb
ds
sub
push
daa
cmp
cmc
inc
push
mov
push
mov
mov
cmp
das
mov
push
sti
dec
stos
bound
fisttpl
test
ret
les
xor
jbe
fsincos
pop
inc
sub
mov
shlb
adc
cmc
sbb
je
jae
repz
fsubr
pop
push
sub
cmpsl
inc
inc
mov
lock
or
xchg
mov
ja
repnz
jo
arpl
jae
push
test
jb
loopne
cli
fdivs
mov
mov
fucomi
jbe
in
hlt
adc
sbb
or
sub
push
add
pop
xchg
insl
mov
push
xor
mov
sbbb
add
fdivrs
xor
dec
add
loop
add
add
rclb
inc
sti
bnd
mov
sub
testl
loop
loop
notb
pop
jmp
jns
cmpsb
push
adc
mov
sti
fucomi
cld
andb
xchg
js
jb
pusha
cmpl
dec
notb
pop
cmp
cs
adc
sub
mov
out
mov
aam
pop
es
push
in
push
cmpsl
mov
sbb
aas
sub
outsl
std
sub
loop
sbb
mulps
leave
jno
pusha
fdivl
jge
decl
sbb
push
movl
lea
jl
push
mov
pushf
movl
pushf
lea
jmp
leave
or
mov
add
sbb
sbb
sbb
out
pop
sub
xor
loop
and
dec
sahf
jp
xchg
das
adc
jo
jecxz
and
xchg
mov
mov
mov
jp
cmp
fwait
addr16
mov
mov
pop
addr16
push
out
imul
mov
icebp
sub
negl
lods
xchg
dec
pusha
aaa
push
outsl
inc
sbb
add
mov
pop
mov
xchg
xchg
xor
insb
jg
mov
dec
bt
bsr
shl
sar
mov
clc
cmpb
call
mov
mov
fucomi
cmpsb
pop
mov
movsl
dec
lods
push
mov
test
mov
add
js
insb
sar
pop
pop
jns
mov
pop
imul
movsb
pop
scas
out
mov
sbb
adc
stos
lods
daa
jle
dec
and
adc
or
dec
and
and
and
and
inc
nop
sbb
push
push
add
shlb
into
jg
jno
jno
imul
inc
xor
fstpt
pop
movsb
pop
mov
cmpl
movsb
sbb
ret
hlt
push
call
add
lret
xchg
shll
cwtl
push
mov
in
mov
js
cli
adc
lods
lods
dec
enter
imul
add
adc
dec
add
cmpsl
adc
test
cmpb
push
pushf
lea
jne
pushf
lea
jmp
or
lea
mov
call
mov
hlt
fucomi
out
jb
jle
jne
ja
jae
jl
mov
sbb
pop
push
sub
mov
adc
enter
mov
pop
daa
or
arpl
push
mov
add
das
xlat
pop
pop
sbbb
imul
mov
push
jg
imull
loop
dec
mov
fimuls
divl
cmp
adc
fistpll
shll
ja
jge
decl
in
enter
or
in
jmp
hlt
fucomi
inc
mov
dec
stos
dec
mov
mov
mov
fsubl
and
shll
and
andb
dec
in
lret
sub
dec
and
add
cmp
dec
imul
adc
call
std
leave
daa
inc
sub
pop
dec
lods
cwtl
mov
fstps
loope
les
cld
pop
xchg
pop
ljmp
push
jnp
shrb
sub
ss
sub
stc
jl
sub
je
insl
in
fucomi
int3
sub
cmp
ss
cli
dec
outsl
adc
out
andl
sbb
js
fdivl
fidivrl
fdivp
cmp
and
xor
insl
adc
incb
fdivrl
or
loopne
or
andl
out
jo
sarb
sub
mov
adc
test
imul
xchg
sbb
lcall
ss
lods
xchg
sub
mov
sub
push
popa
in
xchg
in
lret
jg
dec
sti
jb
fucomi
mov
aas
shrl
fdivs
and
mov
mov
cmp
es
pop
std
iret
mov
aaa
lock
cmp
mov
jmp
mov
repnz
cli
jmp
push
ljmp
cwtl
loopne
mov
adc
xor
adcl
adc
mov
add
push
and
mov
jle
mov
iret
neg
out
or
je
outsl
cwtl
jno
insb
andb
fstl
lock
nop
ds
pop
pop
xor
sarb
daa
or
jo
divb
add
loope
mov
out
je
daa
mov
addb
fidivrl
lea
dec
or
add
in
fidivs
js
enter
add
sub
jnp
adc
mov
popf
xchg
jge
loopne
push
ret
popa
into
ja
jle
cmp
fisubrs
movw
ror
lea
jbe
not
clc
ror
pusha
movw
call
mov
stos
icebp
fucomi
xorb
xchg
outsl
xchg
insb
xchg
jae
jae
jg
jae
inc
lret
popf
out
push
aas
adc
test
jg
mov
loope
xchg
stos
adc
or
add
lods
push
lock
std
std
test
adc
cli
shlb
mov
insl
arpl
mov
pop
lods
ss
lock
pushf
popf
jge
mov
inc
push
and
aam
push
iret
add
out
xlat
sub
test
loope
lods
add
mov
in
xchg
push
cmpsb
stos
mov
pop
sub
ja
int
xchg
push
push
push
enter
rolb
ficoms
fucomi
jg
jns
js
jo
jg
subb
inc
push
mov
das
push
xor
sahf
jecxz
lods
xchg
mov
imul
nop
ljmp
mov
outsb
or
into
jl
jg
fldenv
jno
jne
add
bound
mov
das
cmpsb
lock
mov
into
mov
jnp
push
lods
mov
adc
and
movsb
inc
scas
push
mov
lods
dec
mov
movsl
inc
pop
outsb
cli
xchg
jnp
stc
inc
sti
in
xchg
push
imul
add
pop
cmpsl
add
jb
xor
adc
andb
int3
test
mov
xor
mov
push
and
sbb
push
ret
adc
fdivrl
lock
icebp
cli
cltd
add
ror
pop
mov
mov
jle
mov
xlat
lcall
push
or
sbb
cmp
mov
xchg
or
pop
call
cltd
mov
mov
cmp
leave
add
jb
pop
xchg
push
loop
inc
pushf
adc
cmp
rol
adc
jmp
push
fnstcw
push
rcrb
mov
pop
push
out
mov
ret
imul
add
lds
addr16
jle
insb
shrb
out
popf
adc
pop
mov
jae
pop
call
fucomi
cmc
adc
adc
add
or
or
add
pop
xor
jl
cmc
add
xor
cltd
xlat
mov
clc
add
cli
or
in
lret
push
xlat
mov
shl
imul
pop
pop
xor
in
icebp
mulb
inc
shl
push
sub
mov
lods
cmpsb
jnp
push
sub
ljmp
popf
and
scas
fadd
add
xchg
xchg
jmp
pushf
adc
pusha
lea
jne
call
pushf
lea
jb
pushf
pushf
push
pushl
ret
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
out
movsl
pop
mov
imul
arpl
xlat
fwait
mov
and
icebp
xchg
or
outsl
nop
xchg
jle
xchg
and
cmp
dec
add
or
and
xchg
orb
mov
dec
sbb
sbb
mov
dec
mov
mov
pop
and
movsb
nop
mov
hlt
mov
gs
mov
adc
add
int3
add
xchg
andl
out
and
leave
and
and
sub
xor
loope
mov
mov
stos
dec
push
hlt
or
push
sub
test
imul
sbb
adc
fs
sub
xor
or
jo
movsl
stc
push
and
push
adc
mov
inc
out
mov
xchg
xchg
push
xchg
mov
test
bound
xchg
sahf
out
cli
int3
adc
rcrl
repnz
adc
int3
data16
jle
data16
imul
and
xor
out
sbb
sti
sbb
push
ljmp
aad
dec
in
adc
bound
inc
lds
int3
sbb
push
adc
es
das
mov
mov
cli
fldenv
push
push
jecxz
scas
int3
mov
loope
xchg
cmp
and
pop
or
mov
mov
mov
mov
xchg
mov
and
xchg
add
add
xchg
jo
lcall
inc
add
fucomi
sub
and
and
and
cmp
and
and
add
or
addr16
jns
iret
jl
dec
sub
cs
or
or
mov
and
jae
adc
and
mov
jbe
add
test
mov
movl
xor
ror
or
pop
icebp
mov
inc
es
outsl
and
and
cmpsl
sbb
adc
mulb
mov
movsl
dec
leave
btr
mov
pusha
rcl
lea
jns
not
mov
push
lea
jg
mov
call
lret
in
fucomi
outsl
xchg
push
sahf
jbe
jl
cmpb
mov
and
test
scas
xchg
mov
cmp
cs
cmp
push
xchg
rol
movsl
pop
sti
sahf
loop
inc
lret
jl
lods
mov
mull
test
rcll
mov
mov
test
pop
mov
sub
das
push
jecxz
outsb
scas
or
ljmp
pusha
sbb
push
stos
adc
add
xchg
in
pushf
scas
enter
test
or
out
fucomi
inc
cmp
xor
cmp
fdivs
or
stos
aam
xor
cmp
nop
shlb
leave
lods
testl
loope
mov
scas
inc
mov
cwtl
in
in
int
fldt
imul
xchg
outsl
shll
mov
popa
cmc
sub
xchg
push
push
push
xor
mov
mov
and
cmp
shll
and
addr16
scas
hlt
jge
push
cli
push
xchg
fsubp
sbb
movb
mov
outsl
xchg
xchg
xor
inc
mov
iret
mov
dec
dec
sub
sbb
imul
cmp
sub
mov
or
arpl
test
shlb
jae
fistpll
adc
daa
test
and
jb
call
push
sbb
fucomi
ja
insb
xchg
ja
popa
test
test
pop
loope
fiaddl
cs
mov
mov
popf
push
mov
sub
xchg
mov
push
push
pusha
push
lods
mov
push
xchg
hlt
les
jns
stc
dec
pop
mov
add
testb
cmp
sti
cwtl
add
push
mov
or
imul
cmp
jge
out
fucomi
xor
inc
mov
dec
movsb
pop
lods
pop
adc
clc
andl
imul
nop
push
aaa
daa
inc
mov
cmp
aaa
cmp
inc
push
fisttpll
pusha
mov
repz
or
sub
push
lds
cmp
mov
mov
lods
add
hlt
sarb
shll
out
push
loope
loop
notl
dec
test
fsubrs
ljmp
fucomi
test
inc
movsb
push
mov
cmpsb
dec
test
fs
xor
and
pop
and
jb
bound
mov
jns
jle
dec
jg
mov
sub
sub
sbb
sub
mov
das
push
loope
dec
pop
and
in
sub
subl
aaa
lahf
les
inc
addr16
push
movzwl
jmp
iret
jl
jmp
mov
pop
scas
dec
mov
mov
mov
push
ret
cmpsb
mov
xchg
dec
inc
sub
cmp
and
lock
sbb
adc
jge
mov
sbb
sub
push
ret
jmp
jns
jnp
dec
or
clc
enter
push
push
mov
xor
outsb
xchg
push
rol
pushf
ret
and
pop
and
xchg
mov
pop
cmp
inc
push
cs
push
mov
jp
insl
shrl
arpl
popa
fdivl
adc
adc
lea
fucomi
stc
lahf
imul
xchg
pusha
sahf
push
add
loop
shrl
or
adc
outsl
adc
pusha
daa
xchg
out
jns
in
fidivs
inc
popa
pop
mov
imul
sahf
lods
int
jne
iret
mov
lea
daa
mov
adc
push
add
mov
insb
fs
inc
lds
cs
mov
in
cmc
fdivs
leave
pop
ljmp
scas
push
ja
jle
jo
jnp
jb
jae
add
jae
lock
movl
push
movl
pusha
push
movl
lea
jmp
dec
jmp
call
pop
mov
inc
scas
inc
movsl
inc
mov
mov
jno
clc
cmp
mov
mov
jns
cmpb
and
pop
xchg
cwtl
mov
test
rclb
jnp
movl
je
not
enter
mov
or
mov
and
fldln2
push
in
notb
push
loope
hlt
dec
xchg
sub
popf
xor
cmpl
mov
pusha
dec
sbb
mov
pushl
bt
pushl
push
sub
pushf
rep
not
movzbw
bswap
call
xor
out
fistpll
dec
mov
mov
mov
ds
push
xor
loope
aam
cwtl
xchg
add
ja
in
mov
xor
daa
cmp
fisubs
fsubrl
mov
sti
scas
add
jbe
mov
xor
fildl
xchg
movntps
in
jae
jecxz
outsl
xchg
seta
movsl
mov
fcmovne
movaps
and
xchg
jae
mov
and
fdivs
sarb
shll
rcll
scas
sti
pop
push
fdivrs
testb
cmp
popa
test
jg
ja
jae
fs
les
pop
int
cmpsb
jp
test
nop
mov
nop
or
fwait
jp
outsl
jmp
mov
adc
mov
jg
add
ljmp
add
and
out
adc
add
push
jmp
sbb
sbb
decb
pushf
js
push
test
out
call
jp
subl
lea
dec
sub
add
xchg
jmp
dec
scas
push
dec
movsl
or
lods
xchg
jne
pop
out
sbbb
xchg
push
scas
call
pop
cmp
push
push
pop
fldt
pop
xchg
clc
push
daa
test
xchg
xchg
sub
stc
xor
cmp
into
lea
jbe
and
movzbw
mov
shl
add
bswap
mov
shld
btc
setne
add
ror
or
not
movl
inc
mov
test
cmc
cmp
pushf
call
ret
in
out
sarb
ss
les
enter
iret
aas
add
inc
pop
mov
ret
cs
loop
test
sbb
mov
pop
int3
mov
inc
lret
lock
jnp
movsb
add
inc
jl
insb
or
shlb
cmp
add
shl
scas
mov
mov
xchg
mov
jmp
push
lods
inc
push
fstl
stos
inc
jp
icebp
mov
sub
cmp
arpl
push
aaa
mov
mov
pop
frstor
lock
mull
xchg
lods
xor
mov
mov
mov
xlat
pop
pop
paddd
int3
lret
and
ja
popf
lcall
pop
push
inc
pop
clc
iret
dec
inc
repnz
scas
push
in
setbe
ret
aaa
shrd
idivb
shrb
hlt
hlt
jle
jb
lret
xlat
push
add
push
push
or
push
hlt
fs
fisubs
iret
mov
sbb
popf
push
mov
sbb
pusha
push
xor
cmp
sarl
xlat
call
fnop
out
xchg
sub
bound
push
xor
push
pop
cmp
adc
loopne
movsb
popf
fistl
or
pop
icebp
push
std
pop
loope
ljmp
jecxz
push
pop
cmp
mov
cmp
out
push
movsb
pop
mov
push
mov
test
mov
cmpsl
pop
in
jo
jl
push
push
mov
sahf
jns
pop
testb
or
xchg
dec
cmp
ficompl
fst
sbb
insb
xchg
jl
mov
push
mov
push
shl
mov
sub
sub
or
clc
lock
idivb
sub
mov
movsl
lds
xchg
lcall
cmp
inc
jge
fisubs
jns
fnstenv
stc
mov
je
inc
ret
out
out
addr16
jl
lea
sub
mov
dec
push
test
leave
pop
repz
stc
leave
ret
cld
iret
shrb
sarl
mov
inc
lcall
dec
call
fmuls
lret
push
adc
test
adc
cmp
sbb
inc
in
xchg
mov
inc
dec
jnp
ror
mov
adc
fbstp
outsb
pop
jg
mov
out
xchg
and
and
sbb
lcall
mov
jmp
cmp
xor
mov
mov
out
push
pop
loopne
cmc
sbb
and
cli
lea
cmpl
clc
add
shlb
loop
mov
sbb
std
xor
xor
and
insl
lret
pop
scas
mov
mov
iret
call
sub
sub
mov
push
add
and
xor
sbb
rcl
mov
dec
out
int
pop
ror
ds
mov
cs
cmp
xchg
rclb
in
xchg
test
xor
jo
out
out
icebp
xchg
pusha
bound
addr16
jne
movsb
sbb
push
push
inc
jo
js
int3
fdiv
loope
xchg
cmp
std
inc
je
addl
clc
mov
mov
inc
or
popf
outsl
fmull
cmpsl
stos
mov
pop
pop
sub
cld
jo
pop
fldl2e
repnz
cmp
fildl
cmp
popa
cli
mov
xlat
jmp
pusha
add
add
jns
dec
add
add
xchg
lock
subl
push
insl
xor
notb
sub
sbb
ss
jae
jo
je
pusha
mov
pusha
cwtl
jl
loop
push
loopne
mov
cmc
adc
mov
jecxz
add
call
xchg
stc
or
aam
aaa
add
divl
clc
mov
mov
mov
sbb
scas
int3
dec
dec
push
scas
repz
cmc
cmp
cmp
jle
pushf
mov
mov
aam
add
scas
mov
shrb
cmp
aad
pop
arpl
jne
imul
shrb
js
sub
rolb
add
es
pushf
pushf
mov
lea
ja
pusha
dec
add
lea
pusha
ror
jmp
inc
sbb
fucomi
lcall
stc
sbb
enter
dec
inc
xchg
adc
jnp
and
adc
outsb
stc
lcall
and
sub
insb
cmpsb
stos
repz
lret
inc
cmp
lret
dec
sub
jnp
std
and
out
std
add
fldl
mov
inc
int3
pusha
cmp
out
mov
dec
sub
les
sar
sar
pushf
stos
mov
jae
lods
pop
and
and
test
adc
cmp
and
ljmp
push
push
xor
fucomi
cmc
mov
cmpl
pusha
pushf
jnp
mov
mov
jae
xchg
xor
shrl
adc
out
sbb
xchg
mov
fimull
add
sbb
push
pop
dec
int
inc
inc
js
pop
sbb
scas
mov
mov
mov
push
push
sar
loop
jmp
push
frstor
sub
and
cmp
lret
inc
lods
lret
incb
cmp
call
mov
xchg
jecxz
out
push
sub
xor
xor
cmp
shll
mov
in
lds
jmp
out
and
mov
adc
aam
add
pop
jp
lods
test
xchg
inc
or
shlb
jns
xchg
mov
aas
fmuls
xor
and
and
and
aad
mov
imul
test
pop
and
jmp
cmc
inc
loopne
testl
or
add
jecxz
out
push
cmp
shll
int3
and
and
mov
outsb
push
ror
hlt
or
cli
test
jae
loopne
jb
dec
sub
jnp
out
dec
lcall
movsl
dec
cmpsl
mov
clc
inc
or
jae
ljmp
fadd
movsb
daa
inc
push
push
gs
add
mov
loop
jnp
inc
hlt
pop
push
aas
popa
add
mov
jnp
sbb
cmp
mov
lods
adc
imul
sbb
jae
repnz
mov
sbb
cli
add
call
icebp
test
les
ret
xor
cmp
ds
and
or
jnp
aad
pushf
mov
adc
int3
adc
out
sbb
dec
jbe
or
addr16
lret
movsb
mov
push
cltd
pop
clc
inc
pushf
sbb
push
in
add
lods
cld
jg
cmp
adc
sahf
movsl
scas
enter
std
inc
xchg
sub
fdivrs
xor
xor
sbb
out
sbb
push
clc
jmp
js
fucomi
mov
shrl
in
jg
push
sub
rcl
add
dec
stc
rcrb
ret
pop
cmp
and
xlat
repz
jp
dec
xchg
sbb
clc
push
cld
inc
repz
je
mov
push
shll
and
xor
iret
stos
lea
mov
add
pop
add
push
sbb
pop
cmpsb
inc
mov
jbe
fsubs
push
outsl
adc
and
mov
jmp
ljmp
lcall
or
insl
mov
adc
sub
cld
jle
sbb
enter
enter
mov
and
push
cmp
xchg
cmp
ret
fistpll
insb
leave
inc
iret
mov
adc
lods
cmpsb
add
les
lcall
dec
jns
mov
jb
pushf
add
mov
inc
sahf
jae
push
add
jo
sbb
andb
neg
sub
push
lahf
cs
mov
push
outsb
insl
mov
mov
xlat
out
loopne
inc
and
out
fisubl
mov
jb
gs
mov
adc
sbbl
mov
arpl
or
rcl
mull
add
xchg
fildll
mov
pop
scas
or
mov
call
das
sbb
fucomi
aas
pop
mov
mov
push
cmpsb
dec
scas
pop
outsl
or
push
and
pop
xor
mov
add
sti
roll
stos
iret
mov
shrl
shll
lret
cmp
lods
mov
leave
mov
dec
rolb
sti
sbb
dec
lcall
push
imul
mov
push
movsb
xor
lcall
add
adc
insl
shlb
add
icebp
inc
pop
dec
in
gs
out
dec
stos
push
mov
push
mov
mov
mov
in
sub
pop
jbe
andb
leave
mov
xchg
lcall
lods
data16
stc
test
pop
ss
aam
mov
cmp
faddl
jmp
pop
sbb
addl
or
adc
fs
je
sbb
sub
jns
add
cwtl
dec
pop
ds
push
lods
sbb
adc
inc
popa
mov
mov
clc
jmp
fs
jne
sub
bswap
sbb
lea
mov
jmp
das
ja
pop
fucomi
notb
xchg
jle
jnp
push
jnp
adc
lahf
nop
icebp
outsb
or
push
jmp
add
ja
adc
xchg
adc
test
aam
shr
insb
inc
das
push
cmp
lcall
sbb
adc
sbb
jmp
xchg
xor
pop
push
add
repz
fwait
cwtl
lods
or
push
mov
push
mov
mov
pop
push
leave
shrl
mov
mov
sbb
call
ret
cmp
xor
scas
xor
pop
and
lods
fstpl
movsb
pop
mov
hlt
test
inc
and
dec
push
and
pop
mov
repnz
add
fwait
lods
pop
test
add
push
xor
es
jb
and
fldcw
les
jno
inc
loopne
xchg
jmp
loope
loope
adc
mov
cmpsb
inc
mov
pop
bound
xchg
cmc
and
xchg
loope
adc
fisubrl
push
fucomi
sbb
pop
mov
xrelease
and
add
mov
and
mov
mov
mov
pop
add
sub
fucomi
mov
jl
sbb
add
xchg
adc
das
les
xor
and
and
ds
jno
not
add
jbe
cmp
pushf
xor
and
shl
les
decl
sbb
inc
dec
mov
jae
mov
jl
test
add
jbe
pusha
pushf
imul
dec
and
push
addb
jmp
cli
lcall
bnd
ror
rclb
test
jle
sti
enter
cli
cmp
add
mov
insb
fisubrl
add
dec
mov
cmp
xorb
xor
sbb
out
stc
fwait
je
fsubs
fbstp
jbe
data16
arpl
push
cwtl
out
adc
fsubl
lods
push
scas
dec
mov
mov
aas
fwait
push
insl
loop
jae
dec
cmp
and
adc
sti
shrl
hlt
mov
mov
cli
cmc
mov
pop
and
jns
jnp
fstp
out
pop
jge
inc
mov
sahf
and
mov
mov
inc
call
mov
call
mov
movw
pusha
pushl
push
pushl
ret
cmc
cmp
fucomi
shrl
xor
jne
push
cs
das
out
adc
mov
scas
push
mov
push
cmpsl
std
sub
sbb
lods
adc
xor
mov
or
adcb
leave
mov
lock
fisttpll
xlat
pop
jge
and
or
mov
bound
es
out
pop
pop
and
inc
add
push
xor
mov
fs
fnsave
jb
outsl
shll
mov
call
sub
scas
loope
pop
push
sbb
out
xchg
in
adc
or
adc
cli
or
roll
jo
lods
jb
sub
push
sub
or
or
push
mov
pop
fimuls
mov
push
mov
sti
rcrl
jle
adc
fbld
bound
aas
inc
frstor
jp
imul
int3
jl
add
jb
loopne
add
sub
bt
push
or
lea
jle
pushf
pusha
pushf
lea
je
test
push
cmp
call
xor
sbb
out
sbb
or
adc
add
sbb
sbb
popl
clc
lock
sub
inc
and
mov
scas
fisubrl
fucomi
sub
and
mov
test
sub
mov
cmp
insb
out
push
rorb
add
stos
cmpsb
fisttpl
rcrb
pop
mov
clc
mov
test
test
out
test
xor
repz
mov
in
or
imul
jnp
jge
jbe
push
cs
enter
es
sbb
out
xchg
pusha
subl
xchg
jb
insb
test
imul
lret
push
mov
adc
and
cmp
loopne
out
jl
pop
mov
jne
cmp
xor
inc
xchg
push
push
int
cmp
cltd
jnp
add
loop
xor
shr
mov
lods
jbe
and
imul
jecxz
scas
cwtl
vrsqrtps
aaa
or
sbb
pop
cmpsb
sub
sub
inc
jae
fstps
pop
sbb
xlat
sub
stc
iret
aam
cli
and
repz
aam
rcr
and
mov
int3
jecxz
push
icebp
push
sti
add
or
push
mov
inc
xor
jecxz
pop
and
add
mov
ret
mov
jo
xchg
or
dec
xchg
cmp
in
push
adc
jl
xor
ret
imul
js
jo
sbb
sub
mov
lds
fwait
in
cmp
sub
in
int3
imul
movb
pushf
lea
jmp
inc
call
shrd
mov
stc
cmc
sub
stc
repnz
call
lea
sub
sub
fisubrl
fnstenv
leave
icebp
push
adc
jg
jo
or
push
setg
mov
adcb
cli
pop
cmpsl
sub
aad
jl
pop
mov
jle
add
data16
scas
mov
pop
aas
sub
dec
pop
sbbl
iret
sub
mov
or
xchg
daa
xchg
and
mov
or
mov
adc
sbb
lea
fucomi
jl
pusha
sahf
jg
jp
jo
js
ja
mov
inc
mov
mov
in
dec
shrl
icebp
mov
loope
popa
xchg
call
lahf
add
movsb
fwait
gs
lods
cmpb
sub
sahf
and
push
std
rcr
cmpsb
lods
iret
push
ss
ljmp
dec
push
repnz
fbstp
pusha
pushf
lea
call
pusha
call
pushl
lea
jne
push
jmp
push
pusha
call
das
cwtl
adc
out
aad
push
mov
mov
inc
mov
mov
repz
mov
cmc
popf
lods
insl
pusha
cmpsl
xchg
add
packuswb
add
test
adc
pop
pop
jno
cmpsb
js
adc
mov
dec
inc
ds
mov
mov
rclb
dec
arpl
fs
sbb
mov
arpl
jmp
loope
push
ljmp
xlat
fidivs
in
dec
pushf
xor
xor
ljmp
mov
or
pop
mov
jge
mov
into
insb
out
stc
pushf
pushf
ror
mov
jmp
inc
stc
rol
cmc
cmc
stc
not
jmp
movb
adc
pop
jmp
cli
add
adc
adc
sbb
sbb
pop
dec
mov
ret
imul
adc
xor
movsb
xor
int3
incl
mov
js
push
push
aam
je
cmpsl
pop
fcmovnu
push
mov
cmp
jno
xor
mov
test
movsl
push
stos
sub
jge
xchg
lods
cmp
test
dec
mov
adc
xor
popa
push
icebp
jnp
jo
push
sbb
mov
hlt
out
loop
push
fucomi
imul
lea
mov
divl
dec
sub
inc
dec
and
sbb
or
test
dec
test
inc
pop
pop
int
adc
fnstcw
shrl
enter
add
push
lods
rclb
pop
es
mov
iret
notb
dec
cld
dec
out
push
cmc
pop
fldcw
aaa
shl
inc
push
fbld
icebp
or
sbb
icebp
add
add
or
or
es
fnstenv
mov
mov
pop
iret
or
lock
andb
and
pop
cli
out
lea
out
imul
les
and
cmp
push
jp
cmp
cmp
mov
mov
adc
dec
inc
jns
jae
mov
add
adc
cmp
ljmp
out
imul
add
push
xor
les
repnz
enter
fnstcw
pushf
push
sub
or
daa
ret
pop
mov
add
js
mov
xor
out
mulb
jle
mov
jnp
push
dec
aaa
mov
mov
icebp
repz
dec
arpl
sbb
adc
clc
sbb
xor
inc
lret
jg
int3
push
sarl
insb
jb
rol
movsl
sahf
xor
fucomi
sub
lahf
inc
jecxz
sub
push
and
out
and
mov
shrb
aam
sarl
and
dec
repnz
cld
pop
lock
out
dec
cmc
ret
pop
add
and
jmp
pop
jmp
pusha
lret
inc
adc
out
xchg
add
add
sbb
push
jmp
jle
mov
cwtl
loop
add
out
and
adc
xchg
inc
cli
dec
incl
pop
loopne
pop
pusha
push
pop
push
das
test
lock
and
sahf
dec
and
in
xchg
aaa
dec
and
mov
iret
jo
inc
and
insb
leave
jp
es
loop
dec
aas
pop
lret
daa
popf
ds
icebp
je
xchg
xor
jmp
into
icebp
pushf
mov
fsubs
leave
testb
pushl
dec
cmp
gs
fnsave
test
sub
sub
sub
imul
movzbl
mov
pushf
lea
jmp
mov
lea
jae
call
pusha
jmp
pushf
call
add
cmc
stc
movzwl
mov
shl
bsr
mov
cmp
pusha
call
mov
pushf
call
add
inc
imul
outsl
ja
add
jae
fucomi
pop
mov
push
mov
dec
stos
pushf
and
sbb
mov
lea
scas
cmc
or
push
outsl
xchg
mov
push
jg
push
ret
call
mov
fstl
sti
in
sub
mov
jl
cmp
and
add
icebp
jp
loopne
js
imul
jg
je
xor
xchg
adc
mov
int3
adc
out
or
xchg
addr16
jge
arpl
loopne
fisubrl
cmpsb
popf
ficomps
adc
aad
test
rcrl
aas
sbb
jo
dec
mov
mov
push
or
cmc
inc
popa
mov
or
int3
sub
add
or
mov
inc
pop
jne
jmp
jmp
mov
push
and
pop
mov
popw
in
aad
leave
outsl
leave
jle
fldenv
jne
sub
lock
imul
sbb
clc
cmp
cmp
jmp
mov
out
lds
inc
cmpsb
push
mov
push
adc
repz
or
or
pop
cmpsb
pop
ja
mov
cmpsb
push
movsb
pop
fistl
ss
mov
in
dec
popf
orb
dec
gs
adc
mov
in
je
adc
or
out
pop
out
clc
iret
insb
pop
mov
nop
add
dec
sbb
push
int3
out
sub
and
imul
dec
xchg
stos
sub
mov
pusha
shrb
vmovdqu8
loopne
in
js
push
das
or
std
decl
push
cmp
pusha
pushf
push
jmp
push
pushl
popl
movb
pushf
push
mov
pushl
ret
dec
clc
jno
fucomi
pop
mov
pop
cmpsl
push
movsl
pop
mov
sbb
icebp
mov
test
das
sbb
pop
test
sbbb
push
push
pop
jge
arpl
das
or
adc
inc
push
outsl
mov
insb
mov
pop
push
sbb
movl
loope
mov
data16
add
fdivrl
stos
lods
bound
jbe,pn
popf
xor
or
sarl
lretw
and
scas
movsl
fistl
shr
inc
incl
inc
loopne
std
dec
cld
pop
cmpl
jb
jmp
jle
xor
push
or
inc
mov
push
lods
dec
movsb
inc
mov
mov
push
loope
jnp
mov
mov
fcmovu
out
fcmovnu
sbb
xchg
adc
xor
ds
ja
pop
mov
mov
iret
xlat
test
xorb
jo
jmp
jecxz
nop
daa
mov
imul
push
mov
add
adc
adc
cs
push
xchg
lret
fucomi
cmpsl
pop
mov
pop
push
sub
mov
mov
jecxz
repz
outsb
push
adc
repz
or
push
out
adc
pop
sub
mov
scas
lcall
stc
daa
pop
pop
sub
push
xchg
pop
mov
ss
push
push
lea
call
es
sub
push
xor
and
je
pop
sbb
jb
xchg
bnd
add
int3
scas
out
insb
mov
lock
enter
mov
cmpsb
xchg
dec
xchg
ss
and
lock
sti
pop
ds
jo
adc
xchg
xchg
ds
jnp
cmpsb
push
lods
in
test
lret
nop
shlb
sub
decl
hlt
xor
fucomp
pop
and
fldenv
push
sub
xor
popa
out
push
cmpsl
inc
push
fsubp
pop
in
push
mov
and
pop
call
push
mov
sub
push
adc
pop
sbb
pop
cmc
or
or
test
add
or
jle
loopne
in
fistpl
lods
or
sub
inc
push
imul
and
fldl
jo
or
lret
push
scas
cwtl
sub
clc
js
bound
jb
or
out
xchg
push
push
xchg
cmc
cmp
and
popf
push
faddl
ds
or
mov
ret
movsl
sub
sub
mov
add
sub
dec
loopne
inc
push
pop
scas
cmp
lds
or
jns
jns
push
lds
inc
push
js
imul
fistpll
outsl
pop
sub
mov
adc
pand
xchg
pop
jecxz
in
or
add
or
push
jmp
pop
lcall
aad
push
outsb
cs
cld
mov
and
jmp
lret
cmpl
scas
in
cmove
leave
fnstsw
add
xchg
sti
push
lea
push
test
sub
push
sub
movsl
or
movsb
xchg
and
imul
mov
lcall
or
adc
pop
cmpsl
adc
inc
ret
ss
addr16
add
add
bt
rcl
ror
clc
mov
not
mov
ror
bt
ror
call
dec
mov
test
push
movb
cmpb
mov
call
add
cli
xchg
push
nop
jae
js
mov
pop
ds
nop
pushf
out
inc
pusha
incl
sbb
mov
hlt
ljmp
mov
inc
cmp
dec
gs
pusha
sub
mov
xor
sahf
lods
push
add
aam
mov
nop
add
cwtl
sub
adc
inc
jle
jl
js
insl
iret
jle
jp
or
push
xor
ficompl
xchg
addr16
sbb
bswap
bsf
mov
rcr
xor
mov
neg
cmc
pushf
push
add
bswap
shr
shl
cmc
inc
mov
btc
add
movzbw
pushf
mov
lea
push
pushf
mov
pusha
call
clc
add
pushf
movzwl
movsbw
ror
mov
call
sbb
push
or
out
sarb
and
and
cmp
sub
fidivs
test
scas
icebp
lcall
adc
cmp
aas
sbb
sub
pop
inc
out
in
adc
mov
imul
in
mov
adc
addl
orb
es
mov
mov
or
sbb
sbb
daa
adc
leave
repz
sbb
aas
ret
aam
wrmsr
cmp
dec
cmp
mov
cli
repz
fsubr
sahf
dec
movsb
sub
test
lea
mov
popf
inc
cltd
cmpsb
decl
pushf
call
int
jecxz
fucomi
lret
aaa
ret
cmp
cmp
push
aaa
add
arpl
mov
adc
imul
incl
out
adc
sbb
push
out
shl
xchg
sarl
xorw
jno
and
insl
adc
add
add
cmpl
addr16
jbe
push
jle
adc
cmpl
adc
inc
stos
lcall
and
mov
outsl
fs
cli
cltd
ja
in
or
hlt
lret
pop
jmp
cmp
sbb
int
kxorw
rcr
leave
imulb
cmpsl
fidivrl
or
push
cmp
in
not
fcmove
mov
jne
adc
ret
adc
aaa
shr
push
loope
inc
movsl
lcall
sub
jnp
test
fldenv
adc
pop
out
push
dec
and
int
adc
pop
sub
hlt
push
jnp
adc
and
and
call
insb
div
stc
inc
mov
movsl
jp
sarb
out
shl
sbb
pop
ljmp
adc
movsb
out
aaa
push
jp
flds
sbb
xlat
sahf
adc
mov
leave
ja
adc
ss
pop
push
push
jbe
test
add
insl
cmp
xor
mov
or
mov
in
sti
jmp
push
lea
jne
push
call
dec
in
or
out
inc
mov
pop
mov
pop
cmpsb
or
cmc
dec
cmc
movsl
adc
into
stos
in
movsl
in
xchg
cmpsl
hlt
mov
scas
mov
test
loope
dec
enter
cmp
pop
and
xlat
jmp
and
les
lods
mov
cmp
xchg
add
cmpsb
xchg
pop
repnz
sbb
cmc
call
fildl
aaa
xchg
dec
xchg
sbb
or
mov
dec
mov
pushf
and
cmp
insl
aad
xor
cmpsl
mov
and
test
aas
call
mov
mov
pusha
bswap
mov
not
movsbw
lea
pushf
pusha
movl
jmp
je
dec
or
out
bound
insb
mov
jb
imul
rcll
movsb
inc
ret
fnstsw
ja
arpl
xor
xchg
ds
imul
cmp
pushf
popa
test
push
pop
mov
push
lea
or
sub
int
addl
inc
maskmovq
testl
aam
cmp
ret
mov
push
imul
mov
popa
cmp
pop
cmp
loop
cli
dec
std
inc
sti
dec
jecxz
in
mov
xor
jecxz
icebp
add
mov
push
scas
inc
mov
rcll
push
call
dec
scas
push
loope
push
add
mov
aam
testl
and
je
push
arpl
repz
aam
fmuls
dec
clc
icebp
xchg
cmp
add
inc
ja
cwtl
out
je
jecxz
je
ja
jle
imul
dec
aas
adc
lret
lds
out
fs
imul
xchg
xchg
jp
jl
mov
push
dec
or
sbb
aas
xor
and
scas
rolb
mov
cmp
pop
fs
imul
add
dec
lret
rcr
out
sub
mov
movsl
out
mov
subl
cmp
dec
jmp
les
xlat
pop
jl
and
xor
adc
adc
dec
pop
add
or
xchg
pop
cmc
cmp
movb
lea
jae
movzbw
mov
mov
and
cmc
mov
btr
call
movl
push
lea
jmp
push
pushf
movl
pushf
call
cmp
add
out
push
jmp
sbb
adc
jne
lods
inc
pop
hlt
mov
jns
insl
mov
aam
and
dec
mov
int
aas
ret
jge
lcall
loope
sbb
pop
xor
das
lret
lock
pop
fucomi
arpl
fisubrl
inc
mov
push
sub
adc
and
shrl
je
gs
lahf
lcall
mov
out
mov
mov
dec
mov
push
xor
mov
icebp
xchg
enter
and
and
pusha
cmpb
dec
out
fucom
cmp
dec
jno
inc
mov
lcall
sti
mov
leave
shrb
or
lea
and
and
xorb
push
mov
mov
loop
adc
in
jecxz
fs
mov
lods
lret
clc
jo
add
les
ljmp
mov
pop
mov
ret
out
aam
push
test
lret
enter
mov
repz
fwait
fs
mov
cmp
xchg
ret
popf
push
out
pop
das
mov
sub
insl
pop
xor
fsubs
lds
roll
push
insb
gs
xor
lods
sahf
pushf
hlt
pusha
pop
hlt
mov
xchg
inc
clc
and
aam
and
lock
xchg
les
mov
mov
push
xchg
mov
jl
pop
fucomi
or
cltd
push
push
out
pop
std
inc
loopne
test
movsl
incl
sub
mov
pusha
jmp
loope
iret
push
fucomi
or
imul
xchg
outsl
inc
ljmp
add
cli
push
xor
mov
mov
or
jl
lock
or
lahf
lods
xor
loop
cmpsb
cmp
insb
cwtl
jg
out
insb
outsb
pop
jge
xor
jge
and
sahf
repz
jge
lret
into
jns
stc
aas
leave
outsb
shlb
mov
mov
mov
adc
or
adc
and
outsl
fcoms
fucomi
xchg
jmp
pop
sbb
push
std
into
cld
adc
stc
movsl
push
mov
cmpsl
and
and
dec
push
cmp
push
jecxz
jae
and
lret
push
inc
push
arpl
xor
enter
hlt
pop
mov
mov
jecxz
std
fstpl
pop
and
lahf
lea
aaa
add
xor
and
jge
out
cmp
push
xor
imul
lret
out
or
pushf
push
dec
out
pop
stc
inc
out
jne
andb
in
into
xchg
roll
fucomi
sti
add
push
rorl
adc
lods
lret
mov
and
ret
int3
mov
xchg
imul
lea
mov
ja
pushf
pop
add
call
inc
add
push
xor
add
jp
gs
jbe
imul
mov
mov
xchg
mov
fcmovb
mov
cmpsl
add
mov
cltd
lea
in
aaa
push
cld
jne
fucomi
pop
cmpsb
push
mov
jo
les
sar
stos
and
pop
cmp
and
ss
mov
ljmp
add
out
or
mov
fucom
std
loop
int
test
cmc
add
sbb
jmp
fnstsw
pop
add
fdivs
add
out
and
jge
fistpll
adc
mov
int
ret
cmp
aas
aas
xchg
movsb
jmp
adc
aas
incb
pop
in
negl
push
repnz
sub
xor
in
or
sbb
push
out
or
stc
aad
jg
jae
aaa
nop
cmp
adc
mov
fwait
xor
ret
mov
pusha
je
hlt
leave
cli
or
cwtl
dec
in
popa
inc
movsl
or
pop
es
xchg
ljmp
popa
pop
ja
insb
xchg
addr16
add
insb
into
fnstcw
jg
outsl
pop
das
push
call
outsl
insb
bswap
mov
pusha
mov
mov
mov
jmp
or
dec
btc
push
jmp
sahf
cmp
popa
test
xchg
jo
js
jae
insb
rcll
pop
mov
push
ror
test
cmp
or
jle
mov
or
in
pop
lret
addr16
jnp
test
push
clc
sub
std
repz
mov
and
adc
or
xor
cmp
or
mov
jns
addr16
or
xor
mov
cwtl
dec
jne
mov
fcoml
call
push
sub
cld
mov
fildll
push
leave
addr16
stos
aad
sub
pop
adc
dec
jle
jno
jl
jl
jae
push
and
je
shl
mov
rcrb
mov
cmp
add
push
mov
clc
test
call
mov
out
mov
jo
jle
bound
insb
inc
lock
sbb
xchg
mov
jne
inc
std
mov
dec
jle
movsl
out
jecxz
jge
or
gs
mov
aad
pop
xchg
adc
fucom
jb
mov
jne
lahf
fnsave
stos
xor
xor
fsubrs
jbe
fbld
les
pop
cmp
lret
mov
pop
sub
popf
loop
loop
aaa
xor
in
adc
xchg
mov
cmpl
ss
and
push
dec
xchg
xorb
adc
out
incl
add
dec
outsb
imul
add
mov
add
out
adc
adc
sbb
pmaxsw
enter
xchg
sub
fdivs
or
insw
or
xor
pop
hlt
es
addr16
mov
test
ficoml
outsb
out
sbb
outsl
dec
jle
sbb
cmp
stc
in
das
push
fnstenv
dec
jbe
mov
je
popa
push
xchg
negl
subl
xchg
sub
or
sub
pop
push
ljmp
lret
call
imul
shlb
arpl
shr
shlb
fcmove
arpl
loop
or
shlb
shl
xor
sub
fcmovb
and
xor
shlb
rclb
push
mov
call
rolb
stc
pushf
not
call
lea
call
test
cmp
jmp
pushl
call
xchg
xor
rcr
sar
mov
movb
cmp
sub
jmp
pushf
push
lea
je
call
mov
movl
jmp
ror
pushf
pushf
inc
cmp
shr
call
inc
sub
fucomi
xchg
call
pop
jecxz
in
negb
loop
or
or
pop
mov
xchg
xchg
jns
jns
xor
lret
dec
inc
xor
mov
inc
or
imul
xchg
sbb
dec
xorl
mov
and
loopne
sahf
pop
push
push
jecxz
daa
sub
jmp
jle
inc
xchg
ret
popa
mov
fbld
pop
mov
add
fsubp
fdivrs
add
dec
adc
pushf
cmp
call
pushl
movl
pushf
mov
pushf
pushl
ret
cmovg
cmp
out
into
mov
mov
mov
push
mov
out
dec
xlat
sub
shl
mov
stc
adc
and
clc
shrb
test
jo
or
adc
test
fldcw
rol
in
push
pop
or
or
div
jae
pop
push
ret
jne
sub
je
add
incl
mov
cmp
shrl
aam
imul
xor
adc
mov
fucomi
jo
in
ljmp
or
fldt
push
xchg
and
sti
mov
cmpb
adc
xor
gs
cmp
popa
ds
cmpsb
push
rcll
jge
cmc
ret
in
push
or
shrb
or
adc
cmp
add
sbb
addb
xchg
mov
mov
mov
mov
push
lret
cld
pushl
or
aas
fucomi
fdivrl
mov
out
xor
jne
mov
shlb
outsl
pop
cwtl
clc
or
or
sbb
cli
push
icebp
mov
mov
jmp
and
pop
push
xor
pop
mov
test
cmp
jbe
aas
pop
cmpsb
mov
or
push
xchg
in
xorl
test
sahf
adc
mov
jecxz
frstor
outsl
cmp
ss
xchg
and
mov
icebp
fsubl
and
xlat
into
inc
enter
pop
cmp
incl
push
icebp
inc
in
push
jmp
in
fldt
xor
loopne
pop
lds
adc
mov
ja
jge
insb
lea
jl
jae
pop
mov
sub
mov
xchg
jb,pn
loopne
andb
or
test
aad
icebp
mov
mov
out
add
mov
mov
lcall
mov
clc
test
mov
mov
in
fs
mov
es
dec
or
mov
or
mov
jo
jp
mov
mov
repnz
mov
mov
xor
lcall
xor
push
in
rclb
test
out
xchg
cwtd
jbe
jns
test
movsb
lock
fwait
loopne
loopne
and
fs
popf
clc
pop
in
std
or
push
out
dec
xchg
pop
mov
mov
es
repnz
shrl
mov
cmc
aaa
icebp
xchg
out
sbbb
jl
push
cmpb
cwtl
loopne
shll
ds
cld
std
jg
mov
sbb
fnsave
lds
pusha
arpl
bound
sbb
enter
loopne
cmp
out
pop
ds
cs
cmp
cmp
ss
cmp
fwait
add
outsb
test
jns
xor
clc
fcoms
or
hlt
or
mov
jmp
adc
hlt
ret
mov
jecxz
mov
jmp
call
push
jo
pusha
xchg
call
sarl
add
cld
add
popf
xchg
aas
mov
cli
sbb
mov
test
out
push
sub
das
xlat
xor
xor
cmp
sub
lock
cmpl
fwait
test
addr16
stos
clc
add
inc
and
adc
popa
nop
fcompl
and
mov
cld
push
pushf
add
cltd
sbb
xchg
pop
jecxz
and
mov
cltd
adc
push
js
push
mov
or
aaa
out
mov
stos
or
scas
test
inc
mov
adc
xchg
aaa
fwait
cmp
shlb
jecxz
push
mov
lea
jne
xor
not
ror
neg
mov
push
dec
sub
pusha
neg
lea
bt
cmp
jmp
cmc
cmp
pusha
lea
jae
pusha
pusha
pushl
add
pushf
pushf
pushf
mov
mov
movb
movw
lea
jmp
mov
lea
je
not
pushf
mov
not
bswap
movsbw
lea
mov
lahf
cwtl
pushf
pop
lea
call
cli
pop
aam
fucomi
adc
jbe
arpl
jle
jnp
addb
iret
pop
loopne
xchg
aad
loopne
cmpsb
xor
inc
cmp
cli
adc
in
inc
sub
dec
fimull
ret
stos
dec
test
dec
movsb
xor
fdivrl
std
sbb
jns
imul
pop
xchg
pop
mov
and
mov
mov
pop
and
xor
sbb
mov
ss
inc
in
push
int3
dec
jns
xchg
outsl
test
dec
xchg
cmp
pop
icebp
sub
and
loope
les
outsl
pop
and
test
rcrb
shr
dec
sti
inc
loopne
negb
repnz
icebp
stc
fwait
test
pop
movb
movl
pushl
movl
movb
pushf
push
pusha
lea
jmp
add
add
movw
pushf
lea
jne
push
mov
call
ljmp
jno
bound
push
cbtw
inc
loope
aaa
in
cs
push
adc
pop
aad
lods
jns
or
ret
dec
xor
or
sbb
std
sbb
push
sub
pop
mov
mov
mov
pop
cmp
jns
push
or
jbe
loop
cmc
addr16
hlt
movsb
shr
push
imul
call
in
adc
pop
and
in
adc
and
cmp
jae
dec
adc
outsb
inc
jmp
cmp
out
mov
sarl
or
dec
cmpsl
fucom
cmp
lds
aam
mov
lods
dec
mov
fisubs
mov
clc
shr
repz
jecxz
orb
adc
jne
loop
out
std
andl
jl
ljmp
xor
mov
cmp
and
pop
insb
mov
and
dec
insl
fsubs
insb
iret
jno
jp
jo
lahf
and
mov
sbb
jmp
sub
out
or
push
loopne
out
or
pop
in
push
hlt
or
dec
mov
in
sbb
jl
gs
lret
cmp
mov
imul
pop
sbb
imul
push
mov
push
mov
add
mov
frndint
in
inc
sbb
jns
loopne
repnz
test
jp
or
ja
repz
or
jl
dec
or
pop
repnz
pop
mov
mov
lods
cmc
adc
test
loopne
out
mov
mov
or
or
shrb
adc
icebp
gs
mov
out
dec
sub
aaa
shll
enter
lret
sub
sub
xchg
cld
rcll
xchg
repz
mov
adc
mov
and
out
pop
and
sub
cltd
fmull
inc
ss
enter
fdivs
pop
pusha
pop
cld
rcrb
cli
or
je
mov
mull
pop
je
cld
dec
loopne
sbb
je
into
test
xchg
test
arpl
in
mov
jmp
notb
pop
repnz
icebp
pop
call
mov
adc
cmp
jmp
outsl
xor
out
stos
aam
int3
fldenv
ret
and
jmp
sbb
cmpl
and
push
or
mov
jnp
test
divb
shlb
sub
inc
ficompl
mov
lahf
inc
push
jno
xor
loop
mov
adc
xor
daa
cmp
pop
xor
xor
xlat
fidivrs
enter
lret
mov
out
mov
fbld
lcall
and
push
aas
cmp
mov
aaa
fucomi
out
call
sbb
sbb
or
pop
cmp
in
fstpt
cmpl
mov
push
ss
cmp
pushf
into
fadd
and
and
cmc
adc
sub
shlb
in
out
call
stos
lods
stc
aam
out
sbb
test
pop
sahf
xchg
call
adc
push
adc
in
sbb
mov
add
cltd
ljmp
iret
je
push
cs
aaa
fucomi
jg
jbe
push
jge
jg
ja
push
cmpsb
and
dec
pop
xor
jno
insl
xchg
daa
add
mov
xlat
jmp
lret
sub
pop
sbb
lods
int3
jecxz
iret
jb
adc
jmp
mov
sbb
push
pop
lock
lds
adc
icebp
push
and
and
mov
imul
pushf
movl
push
movb
pushf
jmp
call
call
mov
pusha
cmc
cmp
pushf
test
jmp
pop
mov
in
xchg
jae
jp
scas
adc
insb
pop
rcll
add
ja
leave
and
insl
or
lcall
repnz
or
jmp
enter
dec
test
mov
std
fisttpll
dec
sub
sbb
into
out
fildll
mov
cmc
xchg
push
mov
loope
and
xchg
repnz
push
jge
shr
repz
in
outsl
fnsave
fisubs
fisubrs
aaa
xlat
lods
push
nop
mov
and
push
or
movl
jmp
rcll
shlb
xor
cmp
sub
dec
lods
push
or
cld
push
lods
adc
int3
xchg
adc
mov
scas
jl
inc
fdivrs
cmp
push
xor
cmp
xchg
push
popa
inc
insb
push
jmp
repz
push
xor
mov
adc
or
and
xchg
call
inc
decb
ljmp
pop
loope
fs
imul
xor
out
mov
ret
and
cmp
xor
xor
ja
shll
testb
sbb
adc
sbb
push
ficoml
mov
dec
test
sbb
inc
rcl
test
imull
scas
mov
add
add
cmp
mov
dec
sub
mov
push
or
mov
std
sbb
es
pop
out
dec
out
pop
lcall
push
clc
inc
cltd
es
gs
or
je
jmp
lea
call
push
push
lea
jae
push
clc
xor
pusha
pushl
mov
pushf
lea
call
push
mov
call
jmp
aas
cwtl
adc
fucomi
aad
dec
mov
pop
movsl
dec
scas
dec
cmpsb
or
add
mov
push
mov
adc
sarb
sbb
int3
jg
mov
add
cmp
jle
fisubs
push
adc
in
dec
lock
inc
scas
mov
sbb
mov
insb
push
dec
pop
lret
xor
dec
push
lret
add
scas
enter
sbb
dec
jge
sbb
into
cmc
dec
inc
aas
mov
inc
stos
mov
subl
or
mov
cmpb
and
and
push
pop
mov
mov
lea
movzbl
mov
jmp
push
jmp
pop
pushf
jmp
test
jmp
jmp
lret
xor
out
arpl
data16
arpl
dec
and
inc
aam
inc
enter
jecxz
dec
jo
andl
mov
ds
pop
and
fidivl
pop
rcl
add
sbb
enter
cltd
test
aas
sbb
imul
xchg
cmp
push
test
lods
pushf
sub
inc
jmp
mov
jecxz
mov
scas
push
vcvtdq2ps
ret
in
cli
push
icebp
pop
decl
push
cmc
cmp
adc
fisubs
movl
mov
movb
pusha
push
lea
jmp
bt
mov
stc
rol
push
push
mov
stc
jmp
stc
mov
clc
push
cmp
jmp
xchg
ss
push
addr16
mov
arpl
sahf
sbb
lret
pushf
sub
adc
call
gs
or
xlat
mov
jo
xchg
ret
cmp
sti
jecxz
or
pavgw
inc
sub
loopne
cwtl
pop
outsb
fcmovbe
scas
gs
inc
enter
stos
inc
pop
pop
addr16
push
jno
jns
jge
jle
ja
imul
and
push
das
or
stc
mov
movw
dec
movsbw
mov
cmc
cmp
test
cmc
sub
movw
movb
pushl
push
rep
not
push
bswap
pop
mov
pushf
pushl
lea
jmp
push
hlt
jge
fucomi
mov
fidivs
enter
fnstcw
fsubr
pop
lret
jle
inc
repz
je
push
push
pop
or
imul
pop
or
add
lds
pop
cli
int
sub
inc
aaa
and
repz
ja
pop
fdivl
ljmp
popa
out
mov
imul
inc
aad
into
clc
jecxz
and
and
mov
mov
ss
and
aas
xchg
and
adc
inc
call
jmp
test
call
cmovg
sub
dec
mov
mov
mov
push
lods
mov
fstps
imul
sahf
cli
or
das
jecxz
xor
push
fldenv
nop
insl
sub
js
pop
arpl
and
pop
sub
sahf
mov
sub
mov
cltd
and
jmp
jl
push
cli
lcall
test
xchg
cltd
xor
pop
mov
scas
sahf
and
mov
subl
xor
cs
das
aad
ret
es
xlat
loopne
add
xor
sub
imul
mov
and
icebp
out
rcr
or
cmc
sbb
ret
into
repnz
and
jmp
jg
out
add
sbb
sub
aam
cmpsb
shll
mov
jmp
jns
ja
lods
xabort
pop
and
push
insl
push
and
sbb
mov
jns
jo
insl
les
imul
inc
pop
add
das
test
fucomi
frstor
or
adc
and
fstp
mov
and
loop
sbb
jns
arpl
js
mov
jp
adc
jne
adc
pop
push
mov
pop
shll
movsl
call
in
clc
jbe
insb
arpl
ja
jle
popf
mov
mov
push
mov
push
fwait
sti
add
les
mov
xchg
fisubs
sub
subb
stos
or
xchg
lcall
push
clc
and
fucomi
jb
jae
imul
mov
scas
hlt
or
fsubs
into
adc
fsubl
ficoml
test
xor
out
lcall
push
lds
cmc
adc
enter
dec
push
ds
push
test
add
cli
mov
je
sahf
repz
xchg
xor
sahf
es
ds
add
pop
xor
or
inc
and
data16
aaa
lea
je
pushf
mov
pushf
movl
pusha
pushf
push
lea
jmp
push
sbb
fucomi
fwait
repz
adc
add
push
stc
or
adc
or
cld
gs
andb
cmp
ret
lea
or
sbb
xor
dec
adc
mov
push
or
add
and
push
or
daa
mov
lret
or
adc
or
mov
lcall
sub
xchg
pop
jecxz
cmc
and
dec
xor
out
inc
jecxz
cld
inc
stc
inc
out
push
in
cmp
test
pushf
jmp
cmc
jmp
sub
out
sarl
inc
mov
movsb
pop
mov
sub
movsl
push
fwait
dec
lcall
or
sahf
insl
sahf
mov
test
push
adc
push
outsl
in
gs
movsl
fsubp
aam
dec
sub
outsb
pop
les
ret
pop
ds
jnp
mov
mov
mov
dec
xor
jmp
inc
in
push
repnz
cmc
push
fwait
and
inc
repnz
pop
daa
decl
jge,pt
clc
or
mov
lea
je
pusha
lea
pusha
lea
not
pop
call
pushf
pusha
push
lea
jne
pushf
pusha
push
lea
jmp
shlb
sub
out
cs
mov
dec
mov
mov
scas
push
ja
cmp
mov
mov
out
ljmp
in
aas
pop
stos
popf
xor
xchg
fwait
mov
xlat
xor
jg
jg
std
ljmp
pop
jge
imul
mov
xchg
mov
mov
pop
pop
mov
sbb
mov
std
jae
sbb
loop
mov
sti
sahf
or
mov
push
scas
sbb
jl
inc
lcall
mov
pushf
pushf
lea
call
pusha
push
movw
lea
jne
pushf
mov
push
pusha
movw
lea
jmp
lcall
jae
insb
xchg
outsl
cmpl
lcall
mov
cltd
push
enter
clc
lret
in
pop
std
iret
pop
sub
sub
push
dec
lahf
pop
push
mov
pop
jecxz
insl
dec
test
cld
test
arpl
push
push
loop
leave
sub
int3
jge
out
inc
inc
mov
jbe
sbb
mov
lea
movsl
ret
cmpsb
rcll
pop
aas
insb
inc
push
fwait
stos
cwtl
mov
fstpl
cmp
adc
xchg
mov
cs
mov
sahf
and
xor
pusha
icebp
shl
test
pop
jle
fucomi
push
mov
stos
pop
mov
cli
add
adc
cmpsl
xlat
and
stos
aam
xor
and
and
out
jmp
inc
loop
in
lret
pop
add
shll
cwtl
sub
out
pop
cmp
fsub
pop
inc
aas
mov
pop
cmpsl
fnstsw
adc
sub
mov
scas
inc
movsl
pop
mov
adc
or
iret
xchg
push
jg
xchg
cmpsl
sar
fstpl
or
adc
int
clc
lret
ret
push
ss
sub
jbe
in
xchg
push
adc
pop
jge
and
fsubr
mov
shr
inc
in
pop
clc
pop
notb
daa
cwtl
xchg
cmpsb
push
ljmp
sub
fucomi
add
add
add
loop
loopne
frstor
cmp
mov
push
ffree
fildl
xor
repz
sbb
es
inc
jbe
push
or
push
fidivrl
cmc
ret
push
je
inc
pop
xchg
mov
push
test
shlb
mov
sub
scas
or
sbb
shll
mulb
enter
xor
sub
add
not
and
movsbw
or
mov
inc
mov
pushf
pushl
clc
repnz
pushf
mov
lea
jne
setae
movsbw
movb
jge
not
pusha
not
mov
pop
lahf
lea
pop
lea
pusha
movl
pushf
call
push
bt
ror
clc
movb
cmc
movb
not
jmp
movl
movw
movb
pusha
mov
lea
jmp
test
mov
pushf
lea
je
jmp
aad
sub
out
cwtl
cld
or
sbb
pop
lock
adc
psadbw
insl
inc
fildl
arpl
test
mov
mov
fwait
pop
lea
jbe
fwait
cwtl
outsb
movsl
lcall
mov
cmpsl
inc
jns
insl
or
int3
add
je
mov
outsb
sub
adc
popf
cli
leave
stos
add
ss
push
sub
jmp
sti
fs
fisubs
fnstsw
fstpt
jl
cmovle
and
or
jmp
mov
push
pushf
lea
jmp
cmp
cmp
pushf
lea
jae
cmp
jmp
cmp
xor
and
cmp
xor
aaa
leave
cmp
xor
lock
leave
andb
lahf
xchg
repz
xor
xchg
jae
jecxz
cmpsl
mov
sbb
mov
mov
in
adc
loopne
std
cmovs
cmc
iret
push
pop
in
loop
fcoml
jae
and
dec
mov
cmp
loopne
loop
cld
inc
loop
hlt
push
divl
jl
pusha
push
ljmp
xor
pusha
cmp
call
lea
call
jmp
movw
lea
je
push
mov
cmp
lea
jp
je
clc
cmp
call
into
xchg
and
out
jmp
in
pop
loop
loop
repnz
push
out
push
xor
dec
and
je
test
iret
cltd
rcll
jmp
inc
xchg
lea
jne
adc
xor
dec
jb
andb
adc
mov
cmpsl
loop
mov
push
jmp
jmp
sbb
push
addr16
arpl
jbe
push
mov
cltd
les
or
lea
cmc
dec
cli
dec
out
dec
loopne
loopne
cld
fldt
adc
adcl
cs
call
add
cmc
stc
test
cmc
cmp
call
mov
sahf
daa
fucomi
pop
aas
lret
xor
and
ret
ss
clc
inc
inc
push
xor
les
push
jae
xchg
shrb
inc
int
or
mov
dec
mov
xor
fnsetpm(287
test
cmc
jecxz
xor
insb
out
call
xor
int
stc
int3
jns
leave
outsb
rcl
jnp
jl
xchg
enter
in
mov
jbe
jb
jp
arpl
retw
stos
dec
fdivs
sub
and
pushl
popl
pushf
pushf
pushl
ret
add
rclb
rclb
rclb
mov
add
add
add
xor
add
add
add
or
pushl
call
pop
add
fucomi
insl
xchg
bound
jae
outsb
lcall
insl
dec
mov
or
out
add
push
insb
js
pop
inc
and
or
mov
sbb
adc
and
jmp
stos
ret
add
lret
rorb
lcall
mov
mov
mov
xchg
stc
push
cld
imul
aas
pop
outsb
dec
adc
jnp
and
mov
fwait
cmp
idivl
jno
es
shlb
shll
into
and
cmp
sub
fcmovnu
leave
mov
pop
mov
inc
mov
lea
dec
pop
or
mov
cmpsb
jl
andl
dec
mov
aaa
and
dec
dec
sbb
push
ljmp
loope
daa
mov
lea
sbbl
inc
int
int3
shll
cmp
sub
and
cmp
ljmp
ljmp
out
scas
pop
mov
inc
movsl
push
stos
dec
movsb
inc
out
pop
xor
std
pushf
or
popf
lret
add
enter
jl
mov
lcall
lcall
jge
sub
lahf
fistl
and
lods
push
push
mov
jne
dec
sub
in
bound
adcl
xchg
xchg
in
sub
jo
pop
aas
jb
test
subb
jl
mov
or
adc
adc
push
cli
or
xchg
jne
cmp
bts
shl
mov
test
jmp
pusha
movl
pushf
call
outsb
sbb
fucomi
dec
mov
mov
mov
mov
inc
scas
xchg
pushl
loopne
inc
pop
cmp
adc
xchg
fbld
mov
sti
fsubs
push
enter
call
fs
bound
cmpsb
or
insl
and
test
mov
pop
and
addr16
out
push
cmc
inc
out
cld
inc
testl
subl
popf
sahf
bound
ljmp
loop
push
ljmp
rolb
xor
call
imul
shlb
arpl
shr
shlb
fcmove
arpl
loop
or
shlb
shl
xor
sub
fcmovb
and
xor
shlb
rclb
push
mov
call
daa
and
out
jecxz
jb
push
xchg
test
dec
faddp
mov
mov
xlat
sub
jle
insl
dec
shlb
sub
xor
sub
xchg
mov
mov
insl
orl
fidivl
mov
outsl
jnp
popf
lcall
lock
pop
add
xor
push
pop
js
jnp
push
xor
es
jecxz
lods
out
add
dec
mov
sub
cmp
arpl
cmpsl
rol
push
cmc
pushf
cmp
jmp
pusha
pushf
movl
pushl
mov
pushf
lea
jmp
not
not
mov
lea
not
movsbw
not
mov
pusha
jmp
shll
fucomi
ret
and
ds
ss
cli
mov
movsb
xchg
out
int3
xchg
rcr
and
adc
xchg
jae
jo
ja
insl
xchg
xor
sub
pop
push
sub
test
sub
sarb
stos
imul
push
stos
pop
mov
pusha
mov
in
mov
jns
outsl
and
out
inc
mov
dec
mov
dec
mov
mov
bound
ret
stos
push
imul
daa
ret
lods
jns
mov
cwtl
fbld
mov
out
cwtl
pop
out
mov
push
lods
xchg
mov
jl
and
shll
test
cmp
adc
xor
mov
fidivrs
jo
test
or
adc
push
add
fsub
or
or
mov
xor
inc
repz
popf
or
or
cltd
stc
add
cmpb
inc
clc
jae
aas
inc
js
push
call
add
dec
gs
popa
addr16
outsl
js
add
out
in
je
jb
ja
js
jp
xchg
xor
insl
popf
add
imul
mov
add
xchg
jb
jl
mov
jecxz
mov
mov
jno
or
cmp
vmovaps
xor
fists
mov
dec
xor
mov
xorb
loop
insl
push
dec
adc
fs
jmp
xchg
cmp
sbb
or
shrb
aas
popf
sub
popf
and
outsl
sbbl
enter
out
dec
and
daa
ret
sub
and
daa
xlat
cmp
xor
push
cmp
xor
mov
notl
push
psraw
int3
insw
push
add
adc
test
push
data16
sub
pop
cli
ror
mov
and
mov
or
jecxz
mov
jecxz
cmp
xor
cld
mov
call
mov
adc
or
dec
adc
in
call
inc
add
out
cmpsl
pop
stos
inc
cmpsb
push
mov
push
stos
xchg
shl
dec
sub
js
sti
push
xchg
addr16
sbb
push
ja
jg
std
fidivl
adc
notl
cld
push
sbb
aam
jb
sub
js
pop
rcl
inc
mov
sbb
jae
inc
pop
add
fstps
cmp
push
std
sysret
add
mov
mov
and
pop
cmp
fistpll
dec
xchg
jge
jbe
ja
jge
fs
pushf
das
nop
pop
testb
ret
pusha
mov
movl
jmp
jmp
sti
cmp
fucomi
shrl
aad
fidivl
and
cmp
and
cmp
cmpsb
mov
fdivp
popf
jle
mov
xor
ficoml
vcvtsi2ssl
sbb
les
out
pop
mov
pushf
sbb
inc
out
ret
les
cwtl
popa
sahf
cmp
or
cmp
enter
cmp
pop
mov
sbb
loop
push
cwtl
into
xor
mov
adc
pushl
jg
fucomi
mov
fsubrs
lret
ds
inc
xchg
and
and
mov
leave
xor
mov
cmp
pop
jp
sbb
pop
and
mov
xor
test
mov
scas
les
std
loop
push
or
mov
stos
test
pop
push
cmp
xchg
lea
cmpl
das
testl
fisubl
jmp
jmp
push
in
lock
nop
lock
pop
sub
dec
cmp
movsb
dec
scas
push
mov
pushf
scas
mov
mov
push
pop
dec
jne
mov
lds
lret
mov
nop
in
pop
and
fwait
adc
imul
jle
cmp
mov
fwait
pushf
sarl
mov
sub
outsl
cmova
sub
clc
push
sub
lea
cltd
cmp
push
adc
xchg
xchg
jmp
sub
push
lea
push
mov
clc
mov
cmp
jmp
pushf
pushf
popl
call
jmp
not
shld
mov
sbb
mov
cmp
stc
sub
test
shr
pusha
mov
mov
pushf
push
jmp
pushl
push
mov
mov
mov
push
lea
jmp
pusha
jmp
popl
pusha
mov
lea
jmp
mov
mov
movb
mov
pushf
pushf
lea
jmp
jmp
movb
pushf
jmp
jmp
movzbw
aam
shld
rcr
mov
jmp
pushf
push
lea
push
pushf
pushf
mov
call
rep
bsf
mov
sub
add
bt
mov
pushf
cld
test
jmp
cwtl
not
shrd
rol
mov
movsbw
mov
and
mov
cmp
push
test
add
mov
movw
movb
pushf
mov
pushf
pushf
pushf
pushl
lea
jmp
push
mov
pushf
call
call
mov
pushf
pusha
mov
pushl
push
movl
pushl
lea
jmp
jmp
pusha
mov
pusha
cmc
pushl
mov
add
cmc
stc
sub
jle
add
bt
pusha
jmp
cmp
cmp
add
pushf
lea
jmp
movb
pushl
popl
movb
push
lea
jmp
push
jmp
push
call
cmc
push
and
call
pusha
push
mov
movb
pushf
popl
jmp
adc
mov
stc
push
pushl
stc
add
cmp
shrd
lea
jo
pusha
push
pushl
mov
pushf
push
pushf
push
pushf
popl
push
call
push
lea
jp
pushf
pusha
decl
push
pushf
call
push
call
bt
sub
pusha
call
bts
bsr
mov
cmp
pushf
add
pushl
pushf
pushf
push
lea
jmp
neg
mov
inc
mov
pushf
xor
cmc
clc
bt
mov
jmp
sub
test
pushl
bt
pushf
xchg
cmp
push
test
pusha
sub
cmp
cmp
clc
test
neg
stc
jmp
mov
movw
pushf
lea
jmp
pushf
mov
call
pusha
mov
pushf
popl
pushf
pushf
pushl
popl
pushf
movb
movb
mov
lea
jmp
jmp
pushf
jmp
push
setle
mov
call
bts
notl
call
jmp
pop
mov
test
mov
call
movw
test
and
mov
pusha
mov
pushl
call
movb
mov
mov
call
mov
jmp
pushf
popl
call
call
pushl
popl
movb
pushf
pushf
lea
jmp
push
pushl
popl
movb
pusha
push
lea
jmp
call
movb
mov
pushl
pushf
pushl
lea
jmp
mov
pusha
push
mov
mov
lea
jmp
movsbw
push
mov
movsbl
bswap
movzbw
mov
call
not
neg
cmc
mov
shld
mov
clc
push
pushf
bt
add
mov
mov
pusha
movw
movl
movb
lea
jmp
jmp
stc
sub
jo
and
jmp
and
jmp
mov
lea
jne
jmp
pusha
jmp
jmp
pusha
pushl
mov
pushl
mov
call
mov
call
btr
clc
mov
cmp
mov
pusha
call
ror
and
or
movsbl
and
add
bsr
pusha
pusha
add
movsbw
movzbl
pushf
clc
stc
mov
cmp
pushf
cmc
or
pushl
pushf
mov
lea
je
stc
cmp
pusha
sub
pushf
movb
xchg
cmc
clc
cmc
jmp
jmp
btc
setbe
btr
movzbl
not
shld
sub
add
mov
sbb
mov
dec
add
btr
not
sbb
jmp
pushl
sub
call
test
pushf
sub
lea
jl
mov
pushf
lea
jmp
jmp
clc
stc
add
mov
call
push
jmp
lea
mov
cmc
pushf
add
pusha
pushf
pushf
push
lea
jmp
push
mov
mov
pushf
cmc
cmc
add
jmp
aas
cbtw
shl
mov
rol
or
mov
stc
clc
jge
clc
not
stc
cmc
not
bt
je
cmp
sub
pushf
and
pusha
jmp
call
mov
pusha
call
lea
cpuid
bt
pushf
sub
stc
jmp
stc
test
cmp
mov
pushf
pushf
call
mov
pusha
lea
jmp
push
mov
pusha
pushf
call
mov
push
mov
pusha
lea
jmp
mov
pushf
pushf
push
mov
lea
jmp
ror
test
clc
add
bt
test
add
clc
movw
clc
cmp
sub
jmp
pushf
mov
pushf
popl
movb
call
aaa
add
mov
sub
mov
bt
add
call
stc
mov
test
mov
pushl
cmc
sub
call
jmp
mov
add
pusha
mov
pushf
push
pushf
pushf
lea
jmp
shld
or
btr
movzbl
rol
shl
xor
pusha
dec
movzbw
neg
pushf
pushf
inc
add
setg
xor
shr
cmp
bts
mov
movl
sub
jo
bt
pushf
add
pusha
pushl
inc
pushf
pushf
pushf
mov
pushf
mov
lea
jmp
push
movb
call
pushf
mov
pushf
movw
pushf
pushf
lea
jmp
pushf
movb
pusha
mov
jmp
push
call
cmc
pusha
add
pushf
inc
pushf
pushf
pushf
pushf
mov
pushf
lea
jmp
mov
movb
push
lea
jmp
jmp
jmp
pushf
mov
push
mov
pushf
pusha
mov
lea
jmp
call
inc
movsbw
pushf
setl
push
ror
shrd
btc
lea
shl
test
or
sub
shl
mov
bt
setns
bt
pusha
mov
bswap
or
inc
movb
add
sub
movzbl
sar
shld
sar
mov
sub
xor
shr
shrd
rol
dec
sub
bt
shl
bts
mov
neg
not
not
mov
btr
sub
add
rol
cmc
xor
shr
movzbl
rcr
mov
pusha
add
cmp
clc
bt
cmp
add
jmp
push
pushf
lea
push
pushf
jmp
jmp
pushf
mov
pushf
pushf
pusha
lea
jmp
jmp
call
mov
mov
lea
jmp
call
sub
bt
test
push
mov
cwtl
test
bt
sub
call
sub
call
mov
pushf
push
lea
jmp
pushf
popl
pushf
call
push
pushf
push
lea
jmp
pushl
popl
pushf
mov
pushf
lea
jmp
lea
push
jmp
pusha
pushf
call
pushf
popl
jmp
pushl
popl
pushf
pushf
lea
jmp
pushf
mov
call
pushf
mov
pushf
pushf
mov
jmp
pushl
popl
pushl
mov
push
lea
jmp
jae
pushf
lea
jne
adc
bswap
xorb
lea
pop
pushf
mov
pushl
pusha
lea
jmp
jmp
pushf
mov
jmp
adc
xadd
mov
std
pop
bswap
dec
pusha
test
mov
aad
mov
inc
pushl
popf
bswap
pushf
rdtsc
cltd
mov
not
lea
jb
lea
bswap
pop
setle
jmp
jmp
pushf
lea
jne
jmp
mov
pushf
movb
pushf
lea
jmp
mov
pusha
pushf
pushf
pushf
popl
push
pushl
popl
pushl
mov
push
lea
jmp
test
add
push
pushl
pusha
push
not
mov
call
mov
movb
pushf
lea
jmp
pushf
mov
push
lea
jmp
pop
mov
bswap
movw
not
movzbw
mov
mov
mov
pushf
pushl
ret
jmp
add
pusha
call
pusha
jmp
lea
mov
stc
stc
and
stc
cmp
clc
cmc
cmp
jmp
call
pushf
pushf
mov
pushf
lea
push
push
pushf
mov
pusha
pushf
push
call
shl
mov
pusha
bt
push
mov
cmc
push
sub
cmp
clc
shr
movb
mov
jmp
push
pushf
pushl
mov
push
lea
push
pusha
mov
pusha
jmp
lea
jo
push
push
call
lahf
mov
pushf
push
mov
lea
jl
pushf
pushf
mov
lea
cpuid
test
jmp
neg
movzbl
stc
jmp
sbb
mov
shl
movzbw
mov
cmp
stc
not
call
mov
jmp
call
shl
mov
pusha
sub
mov
call
jmp
lea
jne
jmp
mov
movb
lea
jmp
call
jmp
mov
mov
pusha
movb
lea
jmp
sub
test
add
pushf
pushf
popl
jmp
movb
ror
test
cmc
add
cmp
add
stc
bt
sub
movb
mov
pushf
pushf
movw
lea
jmp
call
pusha
pushf
mov
pusha
mov
movb
pushl
pushf
lea
push
pushf
mov
push
movw
movb
mov
pusha
mov
pusha
push
lea
jmp
pushf
pushf
mov
pushf
pushf
jmp
mov
pushl
lea
jmp
push
lea
jl
mov
call
push
push
jmp
push
mov
movl
call
jmp
jmp
clc
bt
bt
sub
jmp
mov
pushf
pushf
lea
jmp
pushl
popl
movw
pushf
push
push
lea
jmp
xchg
call
dec
pusha
shl
movzbl
jmp
movsbw
pusha
mov
xchg
not
movzbw
setns
mov
setbe
push
mov
jmp
and
mov
test
and
stc
add
bts
adc
test
bts
lea
sar
lea
sub
jmp
pushf
pushf
popl
movl
jmp
pushf
call
push
sub
movb
jmp
test
jmp
pushf
push
mov
movb
push
lea
jmp
pusha
mov
movzbl
setnp
movzbl
mov
mov
pusha
push
movw
divl
movb
movb
mov
pushf
call
pusha
lea
ja
xchg
lea
mov
aam
bsf
daa
shr
lea
rcl
das
sub
bsr
das
lea
bts
clc
bswap
bt
and
and
inc
call
movw
mov
mov
pusha
pushf
mov
call
sar
push
bsf
mov
call
pusha
add
pusha
call
call
mov
mov
pusha
movw
mov
pushf
lea
jmp
push
shl
mov
push
jmp
lea
jne
rcr
xorb
call
pushf
mov
add
mov
clc
pusha
sub
push
shl
jmp
pusha
pushl
pushl
popl
pushf
pushl
mov
lea
jmp
jp
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
push
lret
add
mov
mov
mov
bt
clc
cmp
call
push
pusha
pushf
call
lea
jne
pusha
mov
movl
mov
pusha
movb
lea
jmp
call
bts
test
mov
jmp
pushf
popl
pushf
pushl
call
jmp
call
mov
push
pushl
pushf
pushl
lea
jmp
push
inc
call
pusha
pushf
decl
call
push
jmp
not
neg
btc
mov
cmp
call
bsr
test
shrd
and
mov
or
add
jmp
call
mov
pushf
pushf
lea
jmp
add
push
pushl
lea
jmp
lea
jo
decl
jmp
add
push
mov
pushf
pusha
push
lea
jmp
push
pushl
popl
pushl
lea
jmp
call
shld
mov
dec
mov
test
sub
clc
bt
cmc
shr
push
mov
call
mov
pushf
lea
jmp
pushf
popl
pushf
jmp
cmc
jmp
pushf
pusha
pushl
popl
mov
push
lea
jmp
cmc
stc
add
pushf
test
sub
cmc
push
stc
ror
pushl
push
bt
add
bt
add
cmp
sub
pushf
cbtw
test
clc
stc
pusha
cwtl
pushf
pushf
jmp
cmc
test
pusha
pushf
add
stc
stc
pushf
pushf
neg
bt
bt
test
movb
sub
push
jmp
pusha
jmp
push
pushl
popl
cmc
add
pushf
pushf
clc
pusha
pushl
popf
mov
push
pushl
pushf
lea
jmp
test
sub
pushf
movw
push
inc
pushf
movw
add
clc
mov
pushl
test
jmp
jmp
movb
mov
call
mov
mov
mov
push
lea
push
pusha
pushf
mov
pusha
mov
pushl
lea
jmp
sub
pusha
pusha
pushf
call
movw
mov
pusha
pushf
movb
lea
jmp
xchg
not
mov
std
cld
jmp
call
mov
pusha
push
pushf
lea
jmp
sub
call
pusha
mov
pushf
call
pushf
popl
lea
js
popl
pushf
push
mov
lea
jmp
pushf
mov
pushf
popl
lea
jp
pushf
push
pushl
popl
pusha
lea
jmp
pushf
or
pushl
xor
call
push
pushl
mov
jmp
setge
mov
pop
movzbl
pop
movzbw
pusha
pusha
mov
xchg
sete
xchg
mov
lea
pop
movsbl
movzbw
mov
not
pushl
movzbw
push
mov
mov
pushl
ret
push
neg
jmp
jmp
sub
cmp
push
cmp
cmc
shl
pushf
lea
jns
pusha
mov
mov
call
push
push
mov
jmp
cwtl
mov
call
pusha
push
mov
pushf
pushf
push
push
pushl
ret
movb
pushf
mov
pushf
pushf
pushf
lea
jmp
mov
pusha
push
movw
lea
jmp
lea
push
push
push
call
jmp
pushl
pushf
lea
jne
neg
mov
pusha
pushf
cmc
pushl
and
pushl
bt
clc
cmp
cmp
movw
lea
jne
movsbw
shl
xorb
movsbl
sets
pop
pusha
lea
jmp
pusha
mov
mov
push
pushf
push
mov
call
rol
ror
mov
mov
movl
cmp
add
pushf
mov
pushf
pushl
mov
lea
jmp
bsr
mov
test
cmp
cmc
stc
xor
clc
jmp
push
push
pusha
jmp
add
lea
jb
pusha
pusha
inc
test
movb
sub
call
pusha
rol
btc
ror
stc
not
not
pusha
rol
and
and
test
mov
jmp
inc
cmp
clc
test
sub
stc
jmp
pusha
pushl
popl
pushf
lea
jmp
mov
movb
pushl
pushf
lea
jmp
add
add
pushf
movb
pusha
mov
pushf
pushf
popl
pushf
call
pusha
call
pushl
pushl
mov
pushf
mov
movl
lea
jmp
mov
mov
lea
push
jmp
pusha
mov
mov
pusha
lea
jmp
push
mov
pushf
lea
push
push
mov
call
call
jmp
mov
movb
pushf
lea
jmp
sub
call
call
push
pusha
movb
mov
pushf
push
mov
call
call
pushf
pushf
mov
jmp
lea
push
movw
pusha
mov
pushl
movw
push
lea
jmp
mov
call
mov
pushl
popl
pusha
push
push
lea
jmp
push
push
rcl
rdtsc
stc
sub
call
pushl
popf
pushf
pushl
pushf
pushf
lea
jmp
ror
mov
movsbw
ror
mov
pushf
test
call
bt
dec
mov
cmc
bt
mov
xor
shl
and
test
mov
cmc
add
pushf
shld
pushf
movb
mov
jmp
xchg
btc
shl
movsbl
mov
and
bswap
rol
adc
add
push
rcr
test
xor
add
dec
mov
clc
call
movb
pushf
mov
pushf
pushf
pushf
mov
lea
jmp
mov
pusha
mov
push
push
pushf
lea
jmp
pushf
pushf
mov
pushf
mov
lea
jmp
clc
mov
jmp
setbe
push
add
rol
mov
rcl
xor
sbb
shr
mov
stc
cmp
sub
pushl
cmp
shl
call
dec
stc
push
cmc
neg
stc
xor
cmp
jmp
pusha
movzbl
pusha
mov
pushl
jmp
call
rcr
rol
cmc
ror
not
pusha
clc
mov
rol
bt
btr
and
movzbl
and
rol
mov
bt
cmp
add
jmp
mov
jmp
pushl
push
mov
movl
mov
pushf
lea
jmp
cmc
call
bt
shl
neg
mov
add
xchg
mov
dec
adc
jmp
mov
pushf
movb
pusha
lea
jmp
call
pushf
pushf
mov
push
lea
jne
pushf
bt
mov
stc
call
movw
push
lea
js
mov
pushf
mov
movw
pusha
lea
jmp
pusha
mov
mov
mov
jmp
call
pusha
push
pushf
mov
pushf
mov
pushf
mov
pushf
movb
lea
jmp
mov
call
pushf
xchg
pusha
lea
push
lea
pusha
lea
mov
pusha
lea
push
mov
lea
movzbw
movsbw
bswap
pushf
xchg
not
push
push
lea
seto
bswap
mov
xchg
repz
ror
push
clc
pushl
lea
jmp
lea
jne
pusha
not
xorb
bswap
mov
push
lea
jmp
pushl
popl
pushf
lea
jmp
mov
cmc
clc
stc
bt
sub
jmp
lea
push
pusha
mov
pusha
pushl
mov
call
setg
rol
movzww
bt
cmp
clc
bt
lea
call
cmpl
movb
call
mov
pushf
jmp
aaa
mov
bts
mov
jmp
sub
stc
sub
jmp
sub
call
jmp
ror
mov
pusha
pusha
add
push
lea
jo
pusha
mov
call
pusha
mov
pushf
pushl
lea
jmp
pushf
popl
movb
push
pushl
popl
movb
pushf
lea
jmp
cwtl
mov
pushf
jmp
call
call
pushl
popl
pusha
push
pushf
movb
lea
jmp
mov
push
pushf
pushf
lea
jmp
movw
mov
push
pushf
mov
pushf
jmp
dec
push
mov
bt
add
pushf
mov
lea
jmp
call
push
movb
mov
pusha
pushf
popl
pusha
pushl
popl
pushl
pushl
pushf
mov
lea
jmp
lea
setbe
lea
mov
mov
pusha
push
movw
mov
jmp
pushl
not
pushf
mov
push
movzbw
pushf
pushl
pushf
popl
call
pushf
sub
movb
call
add
push
jmp
call
inc
stc
call
jmp
not
test
test
clc
test
and
call
inc
rcr
mov
bt
and
add
push
jmp
pusha
jmp
mov
mov
lea
jmp
pusha
mov
call
pop
lea
pusha
call
bt
not
bt
pusha
cmc
clc
not
stc
sub
jmp
pusha
mov
mov
pushf
pushf
push
lea
jmp
jbe
pushf
pushf
pushf
lea
cpuid
push
sub
mov
stc
cmpl
jmp
add
ja
stc
bt
sub
call
movl
pushf
mov
pusha
pushf
movb
pushl
ret
clc
push
test
sub
cmc
cmc
mov
mov
add
push
call
clc
bt
xchg
test
pushf
call
push
call
push
pushf
mov
mov
mov
lea
push
call
neg
neg
inc
sub
bsr
test
sub
dec
add
movsbw
adc
mov
cmp
pusha
add
add
jo
bt
clc
push
add
lea
jnp
pushf
mov
pushf
lea
jmp
call
movzbw
add
rcl
mov
clc
pushf
lea
push
clc
cmp
call
inc
movb
mov
jmp
mov
movw
lea
jne
not
mov
pushf
mov
and
pushl
cmc
clc
cmp
mov
lea
jne
setns
stc
lea
shrd
xorb
bswap
mov
pop
pusha
lea
jmp
lea
push
jmp
cmpl
pushf
call
pushf
call
bt
shl
cmc
pusha
pushl
test
shr
bt
jmp
mov
pusha
pushf
sub
pushf
stc
pushf
and
pushl
call
mov
pusha
pushf
lea
push
pusha
mov
call
lea
jbe
push
mov
mov
pusha
call
call
not
aad
mov
dec
neg
cmc
mov
pushf
add
jmp
pushf
sub
jmp
pushl
popl
mov
lea
jmp
neg
cmp
call
jmp
call
call
mov
lea
pushf
bt
rol
pop
bswap
pushf
jmp
clc
bsr
jmp
clc
xor
movb
dec
stc
jmp
jmp
mov
pushl
movl
push
pushf
popl
jmp
call
call
lea
jne
push
lea
jae
mov
pusha
pushf
pushf
push
lea
jmp
mov
push
pusha
lea
jmp
mov
jmp
pushf
pushf
popl
jmp
call
call
cmc
daa
mov
call
