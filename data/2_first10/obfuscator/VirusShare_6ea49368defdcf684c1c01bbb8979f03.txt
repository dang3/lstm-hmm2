shlb
inc
jecxz
scas
mov
push
cmp
pop
cli
jg
fcomps
or
xchg
cs
shrl
mov
or
loope
jl
or
xchg
jg
icebp
jnp
loop
popf
ljmp
icebp
mov
int3
sbb
xor
and
jg
fnstsw
and
jnp
xchg
mov
ss
dec
cmp
fwait
mov
pop
sbb
fiaddl
loopne
mov
aad
mov
or
ljmp
inc
inc
sub
jmp
inc
loopne
or
rcrb
xor
xchg
and
add
sub
push
mov
sahf
popf
xchg
mov
sbb
pushf
shl
test
pop
lret
movsl
adc
fidivl
add
pusha
and
xchg
jp
insl
ja
addr16
pop
pop
iret
cmp
lcall
scas
pop
fidivs
adc
fldenv
das
into
jmp
not
lea
pusha
pusha
pushf
movl
jmp
data16
dec
adc
insl
insb
push
ds
mov
sarb
jmp
and
jp
sub
out
scas
sbbl
inc
fcoml
mov
add
pusha
in
mov
ja
add
in
mov
sti
jno
or
cwtl
addl
ret
mov
icebp
xchg
mov
in
test
sahf
test
sbb
mov
packssdw
leave
es
or
test
add
push
sahf
and
sarl
add
add
sbb
in
icebp
pop
cmp
mov
add
and
test
jae
ss
les
popf
xor
sbb
out
adc
std
lret
xor
push
pop
push
enter
add
jl
xchg
ss
repnz
rcl
in
adc
ss
push
cmp
and
test
movsb
outsb
xor
mov
sub
pushl
sub
lea
outsl
lcall
mov
test
pushf
cmp
jmp
outsl
insb
xor
cs
insb
add
rorb
add
add
mov
ret
sub
pusha
lea
jmp
lea
add
movsbw
mov
stc
shr
mov
pusha
pushl
clc
stc
repnz
movb
lea
jne
lahf
bswap
call
imul
mov
aad
enter
icebp
aas
inc
xchg
mov
inc
imul
pop
ss
add
xor
call
push
mov
in
aaa
imul
mov
ret
jno
cmp
xor
mov
and
adc
and
dec
in
sahf
nop
dec
shll
mov
test
jle
adc
xlat
jb
insb
inc
dec
fdivrl
cmp
dec
and
pop
dec
shlb
popa
mov
push
inc
test
loop
mov
bound
push
das
sub
xchg
mov
and
dec
mov
push
jl
leave
mov
into
gs
dec
mov
lds
data16
out
jo
cmpsl
clc
and
sub
aas
shll
iret
jnp
dec
sbb
stc
rorl
int
mov
xor
and
aas
call
pop
rcll
xchg
shlb
lret
call
mov
cvtps2pd
jle
add
xor
dec
cmpsl
subb
inc
sbb
mov
aad
jmp
jae,pt
in
cmp
jno
jmp
push
inc
jo
iret
imul
movsb
out
and
sbb
xchg
xor
sbb
dec
int
jns
xor
sub
push
sub
and
pop
and
std
inc
lret
or
loope
jmp
mov
in
cmp
dec
rol
inc
push
enter
stos
cli
cmp
enter
dec
adc
xchg
mov
dec
test
push
xor
fs
insb
add
inc
and
pushf
movsl
mov
and
mov
movb
lea
jmp
mov
lret
aad
cmc
pop
push
rol
or
call
fdivl
dec
scas
xor
ret
xchg
mov
pusha
aad
pop
or
push
in
adc
jp
pop
rorl
sbbb
cmp
pop
inc
imul
ret
xchg
sti
lods
fiaddl
mov
testb
jne
shll
mov
jp
fidivrl
sbbb
sti
mov
sub
xchg
pop
outsl
or
filds
and
lds
sbb
jp
cmp
xor
inc
mov
ret
cmp
pop
add
jg
jp
mov
std
sub
jne
mov
push
mov
insl
sub
push
enter
or
es
negl
xchg
aam
add
xor
cli
cmp
mov
dec
test
add
adc
sbb
in
enter
mov
out
inc
push
or
mov
stc
add
fistps
and
je
or
int
mov
mov
pushf
pushl
ret
clc
stc
cmp
call
pushf
movb
mov
lea
call
rcrl
sbb
stos
inc
stc
pusha
xor
fcmovb
xorb
aam
movsl
xchg
xlat
add
mov
dec
xchg
cmp
daa
arpl
jmp
fnstsw
jecxz
push
hlt
rcrb
sub
fnstcw
rcll
cmp
push
neg
pop
cmp
mov
xor
test
push
out
gs
add
dec
adc
jno
jecxz
lods
xor
lods
decb
fisubrl
and
pop
mov
pop
out
outsb
enter
in
xor
xchg
dec
aam
sub
bound
aam
xchg
dec
iret
outsl
mov
dec
leave
dec
out
push
mov
adc
mov
dec
imull
lret
push
aaa
and
inc
ss
and
dec
add
xchg
aas
arpl
fwait
jbe
xor
adcb
pop
dec
iret
iret
sbb
cltd
sbb
frstor
xrelease
imul
scas
adc
xor
xchg
lcall
and
xchg
mov
push
push
mov
int3
mov
ret
push
add
jno
int3
mov
in
mov
shr
mov
fiaddl
jg
adc
mov
pop
stos
insl
pop
add
scas
or
gs
loope
or
or
mov
adc
mov
dec
dec
scas
push
test
jae
jmp
dec
pop
jecxz
mov
adc
sahf
les
inc
clc
aas
imul
mov
mov
mov
jbe
xchg
xchg
fists
nop
dec
inc
jg
popf
in
orl
sbb
aaa
or
iret
jge
xchg
out
lea
adc
sbb
pushf
cmp
xor
and
cmp
fsubrs
lods
rcr
inc
xor
inc
xor
or
flds
aaa
mov
leave
and
and
dec
int
xor
xor
rclb
jb
in
cmp
xchg
sbb
lods
adc
xchg
lahf
add
imul
incl
loop
push
mov
stc
in
sti
out
add
push
xchg
push
in
sub
fsub
sbb
das
jae
mov
mov
sbb
mov
jbe
loopne
jge
lock
or
lcall
test
lahf
loope
jno
pop
scas
cmpsb
push
pushf
push
lea
push
fimuls
fdivs
pop
aaa
or
mov
push
xor
mov
call
scas
jb
mov
mov
sbb
js
inc
pop
pushf
ljmp
gs
cld
scas
subb
loop
nop
add
push
sbb
test
push
add
call
mov
mov
inc
inc
mov
xor
cmc
in
ljmp
xchg
adc
jmp
pop
sub
xchg
nop
jnp
dec
push
icebp
or
cli
and
lahf
iret
dec
scas
jge
xchg
mov
jae
push
out
adc
dec
pop
add
les
ja
adc
fistpll
adc
dec
adc
mov
or
addb
jmp
push
xchg
int3
stc
pusha
movsb
mov
dec
add
in
leave
out
jmp
setle
mov
cmp
je
or
jl
repz
jl
hlt
scas
arpl
xor
jne
inc
jnp
insl
cmpsl
xchg
mov
or
cs
push
sti
shll
loopne
push
addr16
adc
cmp
testl
subl
sbb
mov
mov
xlat
jmp
mov
jmp
pop
cmp
call
pushf
addr16
cltd
xor
dec
popa
jb
mov
ror
lret
aam
icebp
into
cwtl
ret
inc
jmp
das
jmp
ret
pushf
dec
sub
jb
pop
out
fistpll
cmp
jbe
inc
mov
inc
inc
lret
fildll
and
or
pop
mov
imul
or
cmpsb
or
je
rorb
sti
les
mov
insb
test
or
jmp
in
xchg
pushf
push
mov
mov
lea
jne
pusha
jmp
mov
jns
push
pop
pop
cmp
rcrl
fwait
cld
mov
test
addr16
je
lods
testb
inc
stc
push
icebp
xchg
or
lods
mov
mov
into
dec
mov
push
leave
push
pop
and
aam
or
sub
jnp
popf
jo
in
pop
inc
and
push
insb
push
cmp
mov
mov
inc
xor
xchg
dec
jl
dec
sub
lock
mov
iret
push
stos
mov
jl
clc
pushl
test
cmp
cmp
jmp
add
adc
add
inc
outsl
adc
outsb
jo
roll
add
popa
insb
add
add
jb
stos
lea
sbb
and
popa
call
lcall
or
push
insl
fcoml
imul
cltd
add
pop
or
arpl
gs
jb
mov
shlb
add
jns
inc
push
test
add
push
outsl
jb
add
push
cwtl
pop
inc
int
fs
xchg
mov
nop
mov
xor
push
push
je
cs
push
sub
adc
or
repnz
je
mov
adc
add
pop
cmp
sbb
insb
mov
and
cmp
pop
push
dec
bound
arpl
repnz
adc
adcb
add
daa
dec
stc
inc
jb
popa
arpl
and
add
rolb
cs
add
add
addl
jmp
and
daa
push
inc
xor
data16
xchg
inc
xchg
add
js
pushf
enter
adc
sub
test
jp
and
and
adc
jo
pop
andb
adc
push
fs
push
mov
or
jne
sbb
inc
jb
popa
jns
cmp
stos
push
push
push
call
pusha
out
popa
cmp
xor
adc
mov
xchg
inc
jo
inc
dec
push
repnz
and
mov
int3
xor
adc
data16
xor
sbb
cmp
shl
xor
shll
push
inc
xlat
ss
push
dec
adc
push
and
mov
pop
andl
cmp
inc
lds
and
mov
cwtl
mov
std
popf
enter
dec
rdpmc
cs
adc
mov
xor
inc
in
mov
xor
lea
push
and
push
leave
or
jp
sbb
xchg
mov
std
xchg
and
or
bound
sbb
pop
test
out
add
pop
into
and
test
inc
test
push
add
std
or
and
jnp
inc
xor
sub
or
pusha
inc
cmp
push
js
mov
cltd
sahf
lret
mov
pop
addb
jl
push
sbb
divb
add
je
movzwl
sbb
mov
cmp
pop
scas
imul
add
or
and
stc
sub
loop
and
enter
xchg
inc
and
dec
inc
sub
sub
leave
push
mov
xchg
cmp
add
push
add
test
fisttpl
add
lret
mov
add
or
xor
add
rorb
mov
enter
cmp
jne
xor
lahf
adc
sbb
pop
call
dec
iret
xchg
test
push
or
push
addr16
or
adc
push
add
mov
sbb
push
mov
push
push
push
adc
or
ret
nop
push
cld
push
aas
mov
popf
adc
pop
call
add
push
pop
out
nop
lods
cmp
push
cmp
add
xor
call
mov
sub
or
inc
add
jmp
add
cmp
xchg
jmp
jne
in
imul
orl
pop
pop
pop
mov
jo
pop
clc
inc
mov
cltd
lock
mov
insb
call
ja
and
sbb
mov
or
iret
xorl
jmp
pop
fdivrs
add
das
inc
cli
sub
ds
out
test
mov
and
stc
idivb
mov
mov
inc
or
mov
incb
or
cmp
out
sbb
pop
xchg
sub
or
cmp
pop
mov
dec
pop
dec
xchg
out
cmp
xor
sbb
sar
mov
je
out
sarl
insb
mov
dec
adcb
xor
dec
mov
aad
fs
mov
xchg
mov
call
sbb
inc
or
fldenv
scas
jns
inc
fs
sbbb
cmp
dec
ja
cmc
std
lods
bound
jg
dec
dec
adc
cwtl
jecxz
or
pop
pop
push
push
or
repnz
push
add
repz
ficompl
dec
repz
xchg
out
cmp
inc
xchg
movb
jnp
xor
push
xchg
jbe
mov
addr16
cld
xor
les
mov
sbb
sti
sbbl
pusha
popa
add
adc
push
sbb
rolb
adc
sbb
adc
sub
scas
mov
ljmp
ficomps
pop
ret
dec
and
pop
loop
mov
sub
inc
aad
xor
cmp
pop
add
jle
add
rcll
jg
mov
add
push
xchg
pop
adc
cmp
adc
mov
mov
xchg
mov
cmpsb
je
sub
add
repz
xor
sahf
jmp
sbb
cmp
sub
inc
test
sbb
and
jge
or
std
sub
addl
and
and
sub
dec
cmp
xchg
mov
aas
xchg
out
shl
adc
xor
add
and
enter
lcall
sub
dec
outsb
shlb
and
cli
leave
enter
sub
cld
das
pop
and
or
cmpl
movsl
and
push
call
popa
aaa
dec
adc
xchg
dec
js
or
xchg
jbe
add
je
cwtl
push
sub
add
sub
fiaddl
sub
push
call
mov
xorb
aaa
or
push
aas
add
pop
and
xor
mov
mov
std
lea
lods
jmp
mov
enter
or
jne
js
cld
test
sbbl
xlat
sub
insb
or
cmp
inc
xor
push
or
adc
lcall
lret
adcb
stc
lds
lea
inc
ss
mul
mov
jae
or
sub
mov
mov
stos
icebp
pop
andb
mov
ret
mov
and
mov
inc
lcall
adc
repnz
and
movsb
jnp
stos
mov
roll
movsb
sbb
scas
pushl
cmp
sub
cmp
or
push
xchg
jle
adc
mov
or
push
js
push
int3
fadd
push
mov
cmp
mov
adc
rolb
hlt
inc
cmp
in
xor
or
mov
adc
adc
push
add
mov
push
xchg
scas
mov
dec
dec
adc
mov
sbb
out
xchg
test
aad
shlb
inc
sbb
inc
fldenv
daa
push
push
call
sbb
jne
sbb
ds
mov
xchg
add
mov
push
jg
adc
jne
fs
pop
add
jle
imull
fisubl
sbb
lcall
add
popa
and
loopne
cmp
or
adc
dec
or
jg
loopne
pop
add
rcrl
call
jmp
pop
dec
fisubl
sbb
sub
hlt
mov
out
sbb
lret
popf
and
jmp
mov
shr
jb
ja
addr16
push
loope
cmp
jbe
and
pushf
mov
jmp
in
cli
add
jl
movl
mov
call
mov
or
or
or
pushl
add
xorl
add
loop
lods
jg
pop
add
clc
mov
jl
test
bnd
test
decl
dec
nop
or
add
andl
insb
xor
test
cmpsb
sub
add
ficoml
push
xor
scas
enter
test
lods
inc
testb
ljmp
or
cmp
bound
push
and
mov
popa
add
pop
push
sub
xor
push
or
pop
cmc
clc
std
fadds
adc
mov
push
pop
andl
and
or
jo
dec
xchg
inc
fadds
sub
dec
sub
mov
rorl
jg
push
clc
jae
jmp
out
movsl
jge
xchg
fiadds
ljmp
and
sub
adc
push
call
daa
bound
in
jecxz
rcl
enter
lods
xor
add
or
call
daa
add
notb
xchg
jnp
je
les
cmp
repnz
pop
jae
add
lds
sbb
mov
dec
inc
ret
fs
or
inc
or
pop
add
sti
inc
xchg
adc
ret
stos
pop
mov
cmp
dec
or
adc
xor
mov
jle
dec
or
sub
fwait
pop
adc
sub
cwtl
shll
adc
pop
inc
xor
std
push
lea
and
cld
cld
call
or
xlat
xor
inc
or
mov
clc
pop
and
fdivs
and
sbb
inc
add
add
and
dec
movb
pop
sub
and
mov
sub
xor
sbb
adc
mov
addr16
icebp
psubsb
dec
and
jge
pop
push
sub
jmp
add
pop
pop
and
fwait
adc
lea
xor
pop
inc
pusha
dec
lcall
clc
add
push
aaa
je
push
addb
jne
or
ljmp
mov
sbb
stc
or
or
test
pop
and
push
xlat
lods
xor
cmp
pop
mov
sub
je
mov
push
dec
or
popa
aad
dec
xchg
sbb
lcall
cmp
mov
sub
orl
dec
insb
adc
mov
xchg
mov
add
icebp
xchg
addr16
out
popf
xor
ds
cmc
add
mov
mov
add
add
xchg
call
pusha
std
repnz
and
pop
cltd
lods
lods
sbb
aas
dec
and
push
lcall
call
je
out
or
push
or
scas
enter
push
nop
xor
and
and
add
data16
sbb
mov
and
xchg
mov
dec
mov
test
jns
test
add
and
jne
sbb
enter
imul
es
cmp
or
dec
lods
or
mov
movsb
push
mov
sbb
test
dec
sbb
sub
or
push
lcall
test
mov
inc
sub
pop
inc
and
adc
push
mov
pop
mov
nop
and
cli
loopne
xchg
mov
idivl
push
clc
mov
mov
jmp
and
out
fstpl
push
test
add
inc
mov
mov
cmc
or
dec
or
les
mov
dec
push
add
je
mov
icebp
push
push
or
ljmp
aas
inc
or
mov
dec
sub
cmp
sbb
sahf
xchg
add
adcb
loop
jle
cmp
inc
jno
push
sbb
sub
jle
call
jo
pop
push
xchg
xchg
test
mov
test
je
pushf
and
cli
add
cld
adc
xorl
sub
or
or
push
mov
or
jns
push
ret
call
ret
daa
cli
or
mov
out
inc
in
sbb
pop
pop
sub
gs
xor
out
adc
in
nop
fs
js
inc
icebp
or
add
add
cmp
jl
sub
hlt
clc
lds
loope
inc
lea
adc
data16
jge
push
or
sub
xor
or
testb
jp
mov
sahf
aas
call
add
pop
addl
into
ds
jmp
js
test
cmp
and
loop
push
push
add
add
sub
sbb
or
lock
fucomip
mov
jmp
dec
dec
js
push
push
cmp
adc
mov
icebp
fimull
and
sub
sub
or
push
xchg
inc
cwtl
mov
jns
sub
clc
xor
dec
loop
dec
jl
jb,pn
and
xchg
sub
shlb
stc
mov
adc
or
sbb
cmpsb
je
repnz
adc
testl
xchg
cwtl
inc
dec
inc
daa
icebp
and
add
iret
add
add
pop
cld
jmp
shrb
roll
pop
sti
test
jge
cmp
cmp
lret
xchg
call
or
sti
or
push
daa
pop
in
test
pop
sbb
dec
test
sbb
adc
dec
and
fucomip
inc
iret
pop
dec
add
je
sbb
inc
je
xor
in
add
test
je
xchg
mov
sbb
enter
xor
sbb
add
mov
adc
sub
xchg
inc
sbb
jne
sub
out
pop
adc
rolb
xor
out
nop
call
cmpl
cwtl
popa
sbb
inc
sub
ret
loope
in
dec
dec
and
inc
in
and
sub
sbb
pop
test
pop
pop
or
inc
stos
ror
in
adc
pop
std
cmp
sbb
and
outsb
and
or
sahf
dec
cmpsl
and
or
dec
cwtl
inc
cmpsl
jmp
cmp
dec
ja
sbb
ret
lea
pop
es
rclb
loopne
inc
mov
test
push
push
call
add
inc
inc
pop
jne
lock
sub
fcomps
call
pop
mov
xor
shll
cmp
or
or
push
je
add
jle
cmp
jg
sbb
rolb
jnp
adc
rcr
add
mov
add
movsb
jmp
mov
xor
imul
aas
mov
mov
mov
push
call
ljmp
pop
adc
icebp
ficoms
ret
xor
sbb
xchg
xlat
add
je
das
add
xchg
fmuls
cld
cmp
sbb
push
std
sbb
pushw
movl
cmp
jmp
xlat
iret
mov
and
adc
dec
jnp
or
add
xor
mov
xor
push
xor
testb
out
adc
into
add
sub
add
mov
js
sub
cmp
fdivrs
add
call
fbstp
outsl
push
jno
push
jle
xor
ret
jbe
or
inc
inc
lds
ja
jb
loope
pop
add
cs
push
cltd
shrl
cwtl
sar
push
loope
xor
push
and
arpl
bnd
push
cld
or
in
rcll
xchg
sbbl
int3
add
jmp
mov
lea
cwtl
ret
lock
es
imul
cmp
or
divb
push
jmp
push
incb
enter
lock
jmp
mov
das
roll
push
add
dec
jmp
mov
lahf
sbb
cld
es
or
movzwl
lock
add
repnz
rdtsc
shlb
mov
add
jnp
pop
call
add
in
les
mov
sub
test
sub
filds
mov
sbb
pop
cmp
subl
insb
sbb
and
repnz
pop
movsb
and
cmp
adc
adc
sbb
fiadds
sarb
or
in
jbe
pop
mov
adc
adc
add
mov
mov
dec
dec
or
mov
pop
movl
enter
out
subl
ffreep
mov
stc
lahf
bound
leave
call
adc
lea
mov
adc
fstps
push
repnz
adc
insl
push
orb
adc
in
dec
repnz
and
or
das
adc
es
lea
push
pop
push
dec
pop
popa
jnp
fs
push
or
push
jl
add
in
dec
sete
imul
fsubs
call
mov
jno
jb
hlt
ret
jmp
adc
pop
adc
or
and
adc
jmp
loope
lock
mov
sbb
dec
push
adc
daa
sbb
pop
add
sub
mov
and
xchg
and
out
mov
add
push
adc
lea
mov
or
inc
mov
cwtl
andl
test
dec
loope
dec
repz
sbb
call
inc
out
sub
add
push
push
enter
lret
mov
mov
popa
lea
inc
cmpsb
inc
pop
dec
movsb
inc
test
outsb
cmp
jae
cmpb
push
inc
jmp
push
data16
orl
inc
jg
add
jmp
lea
or
sub
adc
test
cs
push
push
mov
sbb
addr16
cmc
lds
shll
iret
mov
dec
pop
mov
sahf
fsts
xor
xor
sub
xor
push
es
mov
ljmp
push
fstp
xor
shlb
mov
or
mov
adc
and
inc
fsubl
push
shll
stos
xchg
jo
call
push
adc
sbb
pop
sub
sti
aaa
and
xor
add
dec
jp
hlt
and
test
sub
clc
xor
mov
shll
cmp
fildl
adc
sbb
and
shll
fwait
stc
or
dec
jecxz
sbb
mov
js
sbb
loop
cmp
mov
and
xlat
inc
adc
and
rcrb
push
mov
xor
inc
nop
repz
push
or
icebp
adc
pop
jecxz
clc
call
inc
imul
or
push
or
add
cmp
std
push
xchg
push
or
jl
rclb
movsb
test
adc
mov
fmuls
push
lret
add
call
cmp
ret
cwtl
aad
idivb
mov
sub
and
mov
adc
sbb
lock
mov
or
and
sbb
pusha
fucomi
adc
inc
lahf
sbb
mov
ret
inc
decb
shr
push
jo
add
jb
cmp
ja
std
shl
pop
mov
pop
inc
add
les
hlt
enter
jbe
ret
call
cmp
xchg
xor
test
lret
jp
adc
mov
inc
inc
and
fwait
mov
mov
imul
scas
push
cwtl
es
inc
faddl
ja
add
push
shll
je
mov
inc
pop
cmp
jne
jnp
jnp
mov
cld
pop
out
sbb
add
fwait
fwait
dec
enter
enter
mov
je
mov
cmp
jne
das
push
adc
lahf
mov
push
inc
or
sbbl
adc
adc
std
inc
or
jmp
sbb
add
into
shr
jno
in
inc
inc
dec
dec
dec
adc
cmp
dec
aaa
mov
inc
out
add
xor
dec
add
jno
sbb
sbb
leave
mov
xor
call
lret
xor
inc
or
stos
rcll
xchg
pop
stos
pop
and
xor
fldt
shlb
loop
test
mov
mul
test
lods
inc
out
sub
fdivr
add
jmp
dec
iret
push
jbe
data16
rolb
add
xchg
push
sti
and
add
adc
es
mov
add
xorb
inc
clc
adc
push
xchg
pop
scas
sbb
sub
or
sub
inc
or
inc
imul
or
and
inc
inc
inc
xchg
fbstp
je
mov
add
xor
mov
pushf
pop
nop
inc
and
fidivrs
popa
in
call
dec
out
push
jmp
call
inc
push
movsb
iret
insb
rolb
mov
mov
inc
addb
sbb
bound
sub
pop
add
js
pop
add
push
add
jne
push
sub
dec
pop
inc
test
sbb
jmp
aas
or
and
ja
cmp
shlb
lea
cwtl
inc
in
fcoms
jne
or
int
or
jge
dec
jmp
cwtl
neg
jle
js
pop
sub
sbb
lds
ret
mov
sub
test
add
or
adc
add
or
mov
add
aad
xor
testb
xor
mov
enter
add
jnp
gs
insb
pop
jge
xchg
test
lret
rorl
inc
js
je
mov
push
insb
arpl
xor
cmp
jae
in
cmp
jg
add
sub
cwtl
jmp
sbb
mov
jmp
call
rcl
add
mov
cltd
nop
inc
mov
stc
call
jmp
jne
xchg
mov
int3
aaa
icebp
enter
iret
call
in
test
leave
jg
mov
test
push
adcl
push
pusha
pop
inc
xchg
imul
inc
mov
dec
jne
pop
mov
inc
sub
inc
adc
push
sub
cmp
shlb
or
inc
or
mov
mov
or
cmpsb
lret
rolb
rorb
mov
idivb
xchg
mov
je
adc
or
ret
pop
jmp
xchg
fldt
fisubs
iret
call
push
cmp
test
aaa
roll
xor
out
jmp
bound
and
inc
mov
xor
or
xchg
stos
adc
adc
out
iret
jo
add
enter
add
enter
cli
or
pushf
or
push
ret
inc
invd
and
adc
adcb
mov
imul
mov
or
mov
inc
mov
aam
xchg
sub
test
and
mov
sub
pop
jecxz
or
mov
and
cs
jge
jbe
imul
dec
sub
add
mov
add
add
xlat
fadds
lods
outsb
xor
and
or
push
push
in
add
into
sbb
rorl
mov
cmp
cmp
sbb
push
sarb
mov
hlt
daa
lret
into
pop
rolb
cmp
sbbl
xlat
pop
mov
addr16
add
leave
repnz
bound
and
cmp
mov
sub
imul
mov
mov
stos
add
mov
addb
inc
mov
pop
out
add
mov
imul
cmp
call
jecxz
xchg
push
mov
jmp
add
jmp
stos
push
inc
mov
add
sbb
sarb
int3
repnz
mov
daa
movsb
lahf
in
call
scas
adc
call
jmp
fs
aam
add
jmp
dec
jp
iret
call
add
fdivrs
mov
add
cmpsb
scas
mov
pop
or
jne
xchg
jbe
dec
dec
in
add
mov
push
push
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
std
repnz
and
repz
mov
fldl
mov
add
les
aad
bound
xor
push
xchg
pop
jo
dec
cmp
adc
orl
pop
jne
popl
mov
sbb
lods
or
and
jne
mov
or
jns
scas
inc
jg
mov
add
inc
clc
movsl
or
cmp
or
xor
call
dec
xchg
mov
sbb
inc
hlt
xchg
js
out
push
into
or
xchg
xchg
pop
push
sub
shlb
adc
insb
and
jmp
jmp
mov
push
ljmp
sub
aas
pop
or
leave
mov
add
inc
push
push
inc
push
add
inc
outsl
jb
popa
outsb
js
cmp
jo
imul
inc
push
push
pop
dec
popa
jae
push
inc
insb
jne
adc
fninit
adc
fldcw
mov
jmp
mov
std
lret
inc
xlat
shlb
leave
adc
pop
push
adc
or
shlb
cmc
inc
pop
or
dec
sbb
push
cmp
xor
and
jno
pusha
xor
inc
mov
pop
sbb
fsubrl
call
frstor
adc
mov
mov
jns
rcr
cmp
call
sbb
mov
adc
mov
xor
adc
adc
jecxz
mov
fwait
or
push
dec
cld
sarl
movswl
rclb
pop
add
adc
pop
mov
fs
mov
push
or
rorl
cld
sbb
push
in
cmp
pop
sbb
ret
sbb
pop
adc
adc
cmpb
xor
lret
aam
cmp
cmpsl
sub
movb
jbe
add
add
jmp
cmp
push
or
jb
pop
paddsb
add
sbb
addl
adc
xor
movsb
xchg
repz
jl
mov
pop
adc
and
dec
cmp
dec
movsb
add
ret
inc
mov
cli
inc
mov
clc
mov
cs
inc
push
jae
fucomp
add
pop
fidivrs
call
pop
inc
xlat
shrb
xchg
xor
dec
setne
gs
lcall
shlb
add
push
push
push
loope
outsb
cmp
in
inc
mov
out
ds
xor
xor
jns
out
jo
loope
nop
adc
jae
add
sbb
test
inc
and
dec
jno
push
scas
daa
enter
push
lea
daa
mov
fwait
rolb
push
mov
mov
cmp
lock
in
dec
rolb
daa
jmp
push
adc
jle
cld
fldcw
add
repnz
clc
or
ja
mulb
pop
pop
add
aas
sub
or
cmp
pop
jmp
mov
jbe
out
jmp
ror
xor
jne
mov
add
rol
pusha
lea
js
leave
mov
test
cmp
cmpsb
or
push
pop
das
rcrl
lods
pop
mov
add
fnsave
ja
popa
lock
mov
mov
cmp
push
jbe
decb
dec
jne
movsb
jns
fucomi
sbb
mov
pusha
pop
xor
xor
inc
and
inc
out
test
add
les
or
adc
rorb
push
xor
fisubs
nop
dec
fisttpll
ss
bound
push
push
aas
enter
popl
mov
add
test
jmp
mov
xor
in
test
pop
sub
rclb
push
push
push
add
jl
shrl
ficoms
call
cmp
movl
gs
ret
pusha
push
dec
add
mov
add
adcl
xlat
sub
inc
add
add
clc
lret
or
lret
add
pop
inc
pop
cmpb
jbe
push
inc
das
add
cli
in
push
call
sbb
clts
pop
fldenv
das
inc
sbb
in
push
rcrl
inc
push
loopne
mov
sbb
pop
or
jae
call
sub
push
push
jmp
nop
das
sbb
cmp
or
or
jne
pop
movsbl
clc
clc
mov
rclb
xor
sbb
push
inc
loope
pop
jecxz
enter
and
out
bound
adc
ja
outsb
inc
shl
inc
cmp
jne
cmp
lds
push
sbbb
call
adc
je
pop
mov
adc
xchg
mov
cmpl
push
je
call
sbbl
adc
jo
ja
roll
dec
call
loopne
enter
mov
jnp
lret
xor
stos
push
pop
cmp
or
cmp
rorb
xchg
xor
inc
or
sbb
dec
sbb
push
add
int3
aas
inc
call
lods
pop
or
push
scas
lods
xchg
test
outsl
or
push
movl
ret
add
add
jmp
pop
pop
mov
mov
jmp
aas
or
je
cld
xchg
xchg
test
or
push
add
jne
jp
dec
pop
pop
scas
sbb
adc
imul
lea
sub
lds
and
sahf
inc
push
out
dec
xchg
movsb
cmp
test
add
cmp
jne
sahf
fs
push
mov
sub
or
mov
cwtl
shlb
fisubrs
jne
jo
jbe
pop
rcl
jmp
adc
mov
mov
jmp
inc
xchg
sub
xchg
loop
rcll
lahf
mov
daa
fwait
mov
jge
sub
nop
xchg
push
daa
mov
inc
sub
xchg
mov
xchg
call
arpl
movsb
sub
jns
loope
jne
adc
inc
or
inc
hlt
pop
outsl
lds
xchg
inc
call
inc
and
cmp
xchg
jl
fsubs
add
push
push
push
mov
pop
lahf
loop
xchg
cmp
es
shll
mov
call
ret
mov
inc
or
andl
cmp
or
xlat
imul
scas
mov
ja
mov
bound
mov
xchg
jnp
and
sub
daa
pop
xchg
fs
shlb
sub
push
pop
adc
and
pop
cmp
push
add
ret
mov
push
scas
dec
xor
aaa
cmp
sub
pop
repnz
sub
mov
mov
cmp
pusha
xor
and
jle
jle
adc
cmp
cmp
xor
push
and
cmp
std
mov
cmp
mov
inc
sub
pop
pop
int
and
iret
sbb
and
icebp
xlat
icebp
push
icebp
into
icebp
adc
hlt
sbb
fidivrl
or
fnstcw
push
and
xor
call
xchg
sub
sbb
and
les
call
je
mov
cmc
mov
inc
test
cmp
fs
rclb
and
enter
mov
daa
inc
or
sbb
or
add
mov
push
adc
aad
jmp
jno
and
inc
mov
outsl
dec
in
jmp
push
loop
adc
mov
sbb
dec
cmp
xchg
or
andl
cli
cmp
add
and
inc
insb
mov
inc
or
mov
jo
push
test
jb
inc
test
jle
ja
ret
xor
inc
dec
lcall
xor
adc
jge
pop
aas
daa
and
xchg
and
xchg
ss
pushf
pusha
inc
mov
stc
xor
inc
js
mov
jle
sbb
sub
sub
jg
pusha
fs
or
mov
add
sbb
mov
add
adc
push
repz
cmp
movb
fs
ret
adc
loope
int
outsl
push
cmp
insl
and
dec
jne
pop
pop
pop
repz
sub
add
and
inc
in
inc
jmp
sub
mov
jmp
or
mov
mov
or
mov
inc
inc
mov
mov
pop
aad
mov
ret
fldenv
dec
inc
ljmp
xchg
sbb
inc
es
pop
pop
sbb
jg
pushl
lahf
push
and
aaa
mov
movsl
pop
leave
int3
pusha
dec
push
mov
dec
fs
xchg
and
adc
cmpsb
sub
mov
jle
outsl
addr16
jb
push
or
int3
aas
idiv
mov
inc
mov
and
sbb
pop
ret
lcall
dec
push
dec
pop
int3
and
mov
fstl
out
xor
mov
ret
dec
mov
jnp
jbe
push
cmpl
daa
adc
pop
rolb
pop
aad
jne
out
cmpsb
add
mov
adc
stos
and
xchg
int
adc
insl
add
sub
enter
sub
jbe
js
les
sarb
sbb
jae
push
xor
push
jg
inc
dec
cmp
sbb
push
inc
mov
lret
mov
jne
jle
and
scas
int
divl
xchg
pop
mov
mov
and
push
sti
pushf
bound
jmp
fisubl
push
and
popl
push
enter
jne
mov
cwtl
mov
loope
push
ror
mov
sbb
mov
xor
push
cmp
push
sub
push
call
xchg
pop
adc
dec
add
mov
mov
stc
call
add
cld
push
dec
adc
dec
and
dec
mov
mov
or
or
lock
lret
push
pop
int3
push
lret
ret
adc
movsl
pop
inc
test
sub
sbb
call
clc
dec
jl
lock
push
pop
pop
push
lea
call
sub
popa
adc
movl
or
jnp
push
push
pop
dec
xchg
pushf
cwtl
push
and
inc
jg
sbb
orl
sub
loopne
or
outsb
xchg
dec
ret
ret
inc
inc
or
adc
and
jle
push
xorl
xlat
arpl
pop
pcmpgtd
inc
add
mov
inc
clc
pop
mov
xor
data16
int
iret
mov
mov
mov
add
test
call
fdivr
dec
dec
xchg
cmp
jb
xchg
stos
xchg
call
sbb
and
cmp
in
leave
popa
leave
push
add
cmpl
mov
jg
pop
jb
mov
add
adc
push
aad
shl
mov
cmp
enter
lret
xor
dec
daa
jmp
das
andl
pop
shll
mov
sbb
sbb
sub
xor
adc
sti
adc
fidivs
push
mov
mov
add
nop
nop
bound
dec
and
or
pop
mov
lea
addl
mov
call
rcrl
xor
aam
es
inc
xor
bound
mov
pop
pop
dec
or
push
xorl
add
xchg
cmp
sub
cmp
mov
inc
jmp
test
scas
jne
not
pop
cmp
rorl
pusha
dec
add
les
push
lods
daa
aam
pop
cld
jo
or
mov
mov
add
fimuls
adc
int3
add
inc
cld
call
or
test
mov
jbe
xor
cli
cmp
mov
mov
fmull
and
dec
sbb
aas
das
xor
inc
call
hlt
inc
sub
inc
inc
cmp
pop
push
or
push
subl
jle
ret
inc
arpl
mov
xor
bound
stc
frstor
push
push
inc
ljmp
leave
dec
clc
cld
out
cld
movsb
jno
mov
jmp
dec
ss
nop
cmp
test
add
cli
insb
or
or
sbb
push
rclb
or
inc
cld
cmp
es
inc
dec
lods
in
cltd
adc
mov
xchg
jbe
ret
xorps
arpl
or
stos
mov
cmp
cwtl
arpl
add
add
adcl
jmp
or
xchg
add
call
mov
lea
xchg
loopne
insb
xchg
movsb
fnstsw
push
sar
mov
push
loop
push
out
cs
and
dec
sub
sub
cmp
pop
jnp
aam
push
adc
and
mov
shll
popa
jbe
xlat
xlat
push
mov
movsb
xor
push
clc
inc
mov
inc
shlb
mov
jae
mov
xchg
push
mov
xchg
imul
xchg
rol
dec
fcoms
push
mov
sbb
int3
aaa
out
or
popa
fiaddl
dec
rolb
jmp
test
ret
sub
es
jl
add
fidivrl
sub
pop
test
sbb
jg
test
mov
xor
rcl
in
lcall
pop
xchg
ljmp
call
addr16
or
dec
jl
orb
and
icebp
fdivrs
dec
jmp
add
add
lea
mov
xchg
dec
push
inc
or
mov
outsb
xchg
push
push
dec
or
adc
add
inc
dec
jge
adc
xlat
mov
cwtl
jne
add
call
cmp
xor
mov
inc
push
lea
push
stc
les
insb
pop
mov
push
call
push
xchg
scas
lret
inc
lahf
dec
xor
ret
mov
lds
sbb
adc
movsl
sbb
mov
cmp
mov
out
in
pop
adc
loop
xchg
adc
dec
dec
je
scas
and
jne
xchg
call
cltd
push
loopne
adc
xchg
xchg
jo
lock
and
sub
call
push
xor
stc
push
mov
icebp
gs
call
subb
pop
mov
enter
xor
or
mov
pop
les
lret
fistl
cwtl
sub
add
mov
sbb
adc
jne
inc
mov
xchg
enter
mov
ror
add
call
mov
push
cmp
push
cs
mov
clc
arpl
mov
push
call
add
stc
mov
pop
mov
fsts
mov
push
push
mov
ret
jae
jno
add
sub
xchg
pop
inc
cmp
jle
push
cmp
pop
pop
aas
and
push
stc
loop
add
cwtl
push
jmp
scas
movsl
and
jnp
push
xor
out
xchg
or
mov
inc
push
jmp
cmp
fmuls
mov
mov
add
call
mov
and
lock
xchg
and
stc
roll
xor
xor
adc
xlat
dec
and
fmul
shll
or
ja
pop
mov
adc
pop
mov
popa
clc
je
je
push
mov
inc
shll
cltd
pop
or
sbb
pop
fldt
inc
and
xchg
sbb
pop
test
or
fisubl
les
push
stos
push
call
add
push
cmp
stos
add
imul
jecxz
clc
push
and
ja
dec
or
lret
sub
sub
push
or
adc
lods
or
cmpsl
dec
lock
in
xchg
es
or
push
or
xchg
lds
sub
add
insl
call
mov
push
roll
mov
repz
cmp
dec
mov
jg
out
xchg
dec
xor
mov
nop
cmp
push
and
or
push
lock
and
or
clc
dec
clc
psubw
jecxz
loope
mov
inc
mov
sbb
lret
inc
mov
clc
jmp
fists
dec
mov
or
or
inc
adc
cs
testb
mov
jo
add
mov
mov
call
mov
cmp
adc
test
lods
inc
shl
movlhps
lcall
and
push
push
movsb
dec
aam
xchg
and
pop
jbe
jno
mov
adc
push
stc
add
sahf
jg
call
and
mov
ljmp
ja
mov
or
sub
clc
outsl
mov
and
std
mov
mov
loop
sub
adc
adc
or
icebp
ja
pushf
mull
aam
imul
or
mov
lea
das
aaa
outsl
cld
sbb
clc
push
orb
sub
jle
mov
orl
adcb
adc
or
push
push
or
sbb
xchg
jo
dec
btr
adc
or
mov
xor
adc
les
sub
jge
or
cli
push
insb
lea
mov
bound
leave
mov
or
xchg
int
xchg
and
test
pop
jmp
pop
and
add
les
je
jmp
pop
inc
testl
or
add
les
or
test
lret
jmp
call
dec
leave
insb
test
cvttps2pi
inc
test
and
jge
xchg
push
pushf
push
adc
rorl
xchg
and
cmp
sbb
jmp
sar
push
and
jp
inc
call
adc
data16
xchg
cltd
sub
add
dec
ja
sub
cmp
pop
xor
inc
ljmp
call
mov
inc
add
cmp
call
in
push
sub
lcall
push
mov
or
push
in
dec
scas
cmp
add
test
das
pop
jmp
cld
xchg
xchg
add
adc
std
jg
and
sbb
xchg
xchg
pop
mov
pop
leave
mov
adc
push
idiv
addr16
dec
cld
mov
aam
push
movw
mov
adc
mov
add
inc
into
push
push
cmpsb
aad
fdivr
push
lahf
fs
ds
les
rcrb
mov
mov
jmp
ret
jg
std
push
xor
or
mov
xchg
add
hlt
and
sbb
cmp
jne
repz
sbb
mov
or
mov
adc
lock
xor
adc
enter
jb
cmp
mov
inc
xchg
and
adc
mov
push
loopne
adc
out
cmp
and
lods
or
mov
sbb
xchg
ljmp
sbb
in
push
aam
notl
xor
add
dec
cmp
clc
mov
dec
ror
fs
or
add
ljmp
ret
pop
push
xchg
xor
loopne
sbb
push
leave
mov
xchg
out
push
fisttpl
neg
scas
xchg
cmp
iret
insb
add
rorb
pop
or
int
cmovge
not
jb
je
jbe
adc
cmp
adc
mov
inc
loop
pop
negl
xchg
adc
rorb
repz
jb
mov
stc
jp
das
dec
sub
pop
fimuls
enter
pop
adc
mov
cli
leave
lods
xchg
leave
sti
repnz
enter
das
test
or
repnz
adc
inc
push
add
mov
shl
sbb
shld
loopne
cld
enter
shlb
lods
fs
lock
inc
jne
loope
adc
test
or
orl
inc
cmpb
add
xlat
das
pop
mov
push
sub
inc
jmp
add
mov
and
and
sbb
add
jne
add
call
pop
and
lret
jno
mov
ret
ljmp
push
lock
and
jp
or
sub
push
sbb
sbb
push
call
add
add
andl
jmp
jg
adc
lods
scas
or
movsb
mov
addr16
fnstenv
sbb
shr
mov
dec
push
or
inc
xor
jmp
and
je
or
or
pushf
sarb
stos
fisubrl
or
rcll
scas
hlt
insb
xchg
dec
mov
cmp
or
mov
cmp
dec
or
jl
cmpsb
subb
xchg
bound
xchg
mov
addl
xchg
shr
aad
aad
test
je
dec
mov
or
test
inc
das
and
je
imul
leave
dec
ja
aas
or
aad
mov
push
or
xchg
adc
scas
pushf
ret
xor
loopne
push
scas
or
movsb
cltd
pop
push
sbb
inc
jecxz
test
jg
rorb
pop
mov
call
mov
cmp
les
outsb
test
ljmp
add
popa
adc
mov
lret
add
mov
das
or
mov
xor
divl
insl
call
mov
imul
or
or
add
mov
fdivrl
in
mov
mov
mov
xor
scas
xchg
add
hlt
dec
lock
iret
addl
push
in
pop
lret
pusha
jmp
fisttpll
mov
data16
int3
outsb
in
mov
roll
dec
xor
loope
cmp
mov
inc
into
andb
or
adc
push
inc
rcll
push
aad
mov
dec
and
nop
adc
inc
ret
mov
fiaddl
ret
mov
jge
add
mov
and
nop
cmp
jl
inc
test
jo
jl
mov
mov
and
push
clc
ret
mov
lret
mov
xchg
mov
push
dec
adc
adc
adc
dec
fcomps
sbb
insl
jns
push
testb
mov
inc
push
and
pop
mov
xor
mov
lock
mov
mov
cmp
clc
imul
adc
or
or
jle
mov
inc
shrl
test
or
pop
push
pop
mov
loope
int3
hlt
dec
cmp
xchg
dec
enter
loop
sub
sbb
lock
push
xchg
sub
lret
push
lret
and
or
adc
mov
push
je
or
dec
jl
shlb
std
push
or
mov
insb
jp
xchg
xor
or
jne
fcompl
cltd
imul
icebp
stos
xchg
inc
pop
adcl
pushf
inc
movsl
jp
imul
push
lods
and
cltd
adc
dec
cmpl
push
mov
loop
fsubs
test
jl
mov
in
sbb
push
mov
mov
mov
xor
ret
jb
mov
or
inc
sbb
call
push
fbstp
dec
sub
arpl
sbb
add
adc
pop
lods
mov
cmc
mov
pop
pop
sub
sub
mov
or
sbb
imul
stc
jecxz
jmp
add
jo
add
add
out
xor
gs
mov
imul
leave
push
lea
lock
call
ret
dec
adc
lods
iret
dec
mov
push
frstor
movsb
rorl
xchg
sbb
test
sbb
and
sbb
pop
or
xchg
jne
push
add
call
cmpb
mov
dec
lea
adc
add
xchg
pop
fisubrs
add
inc
add
sub
cmp
adc
sub
roll
cli
nop
cmpsl
jg
push
push
dec
xor
sbbl
mov
jle
in
push
add
es
jmp
or
aam
or
add
inc
push
cmp
movb
push
sub
dec
xchg
dec
fwait
mov
inc
and
not
adc
test
mov
mov
jb
shrl
xlat
mov
pop
inc
inc
je
outsl
outsb
addr16
ja
cmp
ds
test
adc
mov
mov
lea
outsl
cmp
or
mov
movb
iret
push
cmp
or
xor
fcmovne
xor
push
inc
add
pushl
pop
cmp
stos
push
push
lcall
adc
mov
test
nop
or
mov
adc
mov
lock
mov
addr16
rcl
push
and
or
ret
les
sbb
mov
xchg
fimuls
out
and
lds
popa
call
add
hlt
imulb
or
and
repz
inc
xor
jnp
and
sbb
push
bound
jmp
dec
subb
push
and
cmp
or
insb
popf
mov
inc
je
jo
sub
jp
in
xchg
ret
push
jbe
outsb
rolb
fs
sbb
inc
repz
nop
mov
ret
adc
repnz
xchg
insb
push
rclb
data16
adc
gs
and
in
jae
or
in
cmp
and
and
stos
mov
daa
adc
jb
push
mov
mov
and
leave
pop
mov
adc
sub
xor
jmp
sub
pop
or
aam
add
sub
or
mov
and
adc
cmp
les
mov
test
scas
sub
adc
test
push
or
aaa
xchg
cmp
jne
jge
or
fsts
cmpsl
rdtsc
hlt
push
movsl
iret
jb
and
gs
lods
iret
loopne
call
mov
cmp
repnz
and
ja
std
mov
cmp
cld
jne
leave
dec
adc
sbb
sub
fisttpl
imul
sub
cmpsb
and
add
nop
or
pusha
int
mov
mov
test
add
xor
mov
pop
and
arpl
sbb
adc
cmp
adc
push
add
or
loope
sub
dec
mov
mov
pop
movsl
xchg
fmuls
mov
adc
pop
in
ds
add
sbbb
push
mov
adc
lods
sub
jp
mov
lret
dec
lods
jecxz
or
lret
and
popf
jecxz
cli
aam
push
push
shrb
repnz
adcl
jg
cld
leave
mov
xchg
addr16
xchg
mov
adc
inc
add
mov
xor
cmp
pop
jbe
lea
pop
add
pop
cld
ja
stos
fcmovb
jmp
add
xor
aas
jne
cld
pop
cld
add
loop
adc
push
push
xchg
add
or
movsb
es
shlb
add
dec
pop
or
mov
add
dec
xchg
xor
sbb
test
jbe
test
cmp
lea
loope
int
or
and
adc
lea
fstpl
lock
leave
adc
lcall
test
out
adc
incb
mov
inc
test
add
aas
add
xor
sbb
mov
or
in
rcr
dec
jne
mov
filds
shl
or
sub
insb
and
cld
popa
mov
jl
xor
or
inc
popf
jae
pop
in
mov
pop
or
dec
inc
pop
rolb
xchg
push
mov
dec
pop
test
cmpsl
cmp
ljmp
adc
inc
std
aaa
inc
and
arpl
xor
ljmp
push
cmp
adc
nop
xchg
add
jbe
mov
cwtl
test
push
jns
stc
adc
lock
fildl
je
pop
mov
adc
cli
cmp
sbb
sbb
inc
mov
xor
popa
jecxz
pop
pop
xchg
jp
loop
add
pop
cmp
or
or
sub
mov
mov
xor
sub
xlat
lock
adc
mov
fsts
push
push
pusha
cmp
sub
xor
loopne
rolb
movsb
loopne
cmp
loop
test
fs
mov
in
cmp
movups
test
in
dec
aaa
adc
mov
out
cmp
push
inc
scas
and
dec
in
cld
sub
gs
inc
imul
in
cmp
cmc
xor
push
test
int3
shll
sub
sarb
add
adc
push
add
mov
xchg
add
and
les
dec
jecxz
cmp
push
inc
fldenv
mov
mov
pop
jge
scas
dec
and
mov
inc
add
pop
add
gs
ss
cmc
ljmp
call
jns
outsl
loope
lds
arpl
xlat
adc
and
adc
or
cmp
dec
sub
mov
loope
inc
cmp
iret
adc
mov
push
fnsave
dec
cs
and
or
stc
dec
cmc
cltd
push
inc
adc
outsb
in
loopne
popa
adc
adc
nop
test
repnz
pop
shlb
cmp
out
dec
inc
loop
cmp
xor
jge
ret
push
or
and
jmp
push
mov
faddl
mov
add
xlat
fstl
add
jp
mov
sub
push
dec
je
ret
xor
dec
pop
movsb
adc
daa
mov
mov
inc
mov
sub
sbb
cmpsb
mov
lret
pop
inc
mov
push
mov
cld
in
outsb
push
movsb
in
adc
or
mov
mov
cltd
sub
mov
inc
push
dec
jmp
xlat
add
push
add
hlt
sahf
push
fists
fiadds
or
mov
scas
mov
outsl
enter
jl
pushf
xor
out
sub
and
sbb
cmp
mov
and
sahf
addb
inc
sarl
lea
fadd
rcl
cmp
adc
mov
or
outsl
and
or
push
loope
xor
cwtl
fs
inc
ret
enter
in
xchg
test
les
mov
jle
and
xchg
cmp
adc
pusha
adcl
dec
int3
sub
in
cltd
cmp
sbb
pop
or
jns
and
sbbb
mov
and
xchg
sbb
mov
adc
sti
and
js
inc
faddl
inc
pop
aad
cmpsb
test
adc
inc
fstps
inc
test
adc
pop
mov
test
popa
nop
pop
in
cmp
addr16
xor
lock
and
es
sub
and
les
add
adc
adc
dec
xor
xor
clc
in
mov
cmp
repz
jae
pop
xor
pop
adc
or
loop
xor
in
add
pop
mov
repz
xor
in
push
leave
movsb
in
js
sub
adc
adc
jno
and
mov
cmp
movsb
sub
push
sub
je
ret
xchg
and
mov
divpd
adc
xor
jle
inc
pusha
sub
push
mov
push
sub
cltd
aas
loop
push
or
dec
mov
fmuls
inc
lret
sbb
loope
icebp
inc
js
adc
adc
inc
mov
inc
mov
push
push
push
jle
cmp
pusha
or
lret
mov
xor
mov
leave
frstor
mov
mov
and
adc
mov
sub
adcb
adc
mov
push
sbbb
movsl
jo
mov
or
xchg
mov
test
out
adc
repz
andb
test
dec
sbb
lea
pop
sbb
sti
adc
popa
dec
loopne
enter
rorl
popa
and
les
mov
push
stos
inc
add
xor
scas
xor
dec
adc
xchg
and
pusha
jp
sub
or
ds
mov
and
and
sbb
ret
dec
cmp
clc
or
mov
add
xchg
push
mov
adc
jecxz
mov
imul
xor
adc
roll
and
push
movsl
adc
aaa
js
lds
adc
sub
fmuls
cmpsb
xchg
dec
jecxz
xchg
or
std
and
and
aad
shrb
inc
fsubs
sbb
das
nop
push
daa
mov
inc
lea
inc
pop
scas
mov
repnz
mov
fs
rol
shlb
cwtl
fdivrs
lahf
icebp
push
adc
sahf
es
adc
jp
and
cmp
sbb
dec
mov
sbb
insb
movsb
adcb
dec
popf
adc
mov
push
fmul
push
or
sub
movsb
jo
cld
push
xor
dec
mov
add
and
add
inc
mov
aaa
insl
les
fwait
leave
adc
cs
xor
push
nop
add
push
in
mov
cmpsb
mov
push
adc
dec
orl
mov
js
push
xchg
mov
dec
test
sbb
aam
adc
xlat
push
sub
test
and
cmpxchg
mov
fimull
rol
pushf
adc
xor
lret
add
js
jge
mov
push
push
nop
sbb
inc
jns
mov
shlb
lock
dec
sbb
xchg
mov
mov
mov
push
lret
push
or
sbb
nop
es
cwtl
ret
cmpsb
sbb
icebp
push
shll
cmc
pop
enter
rcrb
cli
push
cltd
mov
cmp
mov
xchg
push
mov
xlat
adc
dec
push
mov
jo
sti
mov
xchg
xchg
test
mov
adc
scas
mov
test
test
lods
fdivs
imul
mov
push
es
adc
popa
adc
jne
or
shll
push
adc
mov
xor
and
push
jg
arpl
mov
pop
in
cs
adc
int3
cs
adc
fs
and
dec
enter
adc
xchg
push
jmp
out
xchg
dec
mov
jecxz
loopne
scas
mov
data16
hlt
cltd
pop
sbb
jne
push
inc
adc
dec
loopne
inc
pop
test
dec
push
xor
cltd
push
lea
adc
push
popa
cmp
mov
pop
xchg
aas
adc
adc
lret
sbb
mov
aas
adc
fstpt
jbe
popa
add
push
sub
add
or
adc
push
or
jnp
inc
pop
push
and
xor
test
rolb
mov
cwtl
dec
mov
pusha
bound
cmp
inc
or
fildll
mov
adc
xchg
jl
mov
and
xchg
push
mov
arpl
sbb
and
add
sbb
and
cwtl
push
adc
pushf
lret
fldl
in
call
arpl
or
pop
sbb
test
mov
jo
arpl
adc
dec
bound
pop
mov
xor
pop
bound
mov
or
xchg
sub
cmp
pop
xlat
adc
inc
sub
adc
pop
xchg
sub
mov
and
mov
sub
push
ds
jo
js
add
mov
sti
mov
xor
xchg
push
out
nop
or
sbb
dec
ret
and
subb
sahf
and
and
push
dec
push
stos
push
or
mov
inc
sbb
mov
cmp
aaa
mov
mov
cli
inc
or
add
push
xorb
movsb
dec
jle
iret
dec
nop
nop
or
out
and
push
jne
mov
sub
aaa
shlb
shll
enter
jp
std
adc
pop
out
mov
cs
nop
mov
fstps
ret
adc
and
ror
mov
lret
adc
and
mov
push
xchg
push
arpl
sub
inc
adc
xchg
frstor
or
or
int3
cwtl
ret
adc
outsl
or
inc
std
fadd
mov
jmp
mov
mov
movl
scas
sbb
pop
push
xchg
inc
and
or
mov
nop
and
dec
rcrl
das
adc
mov
push
mov
cltd
pop
movsb
push
adc
lret
mov
dec
pusha
pop
mov
int
mov
fdivrs
xchg
xchg
lods
aaa
rolb
adc
xchg
xor
cwtl
jns
xor
xchg
int
mov
ret
and
stos
in
mov
inc
movzwl
pop
rol
loop
or
ret
in
mov
int3
add
adc
mov
fsubp
sbb
cmp
sbb
fmull
xchg
push
in
stos
inc
sbb
or
and
dec
adcl
mov
or
jmp
out
negb
cwtl
rorb
xchg
push
inc
std
mov
sub
jge
fsubrl
jo
cmp
or
adc
sbb
sbb
and
xchg
xchg
pop
add
dec
cli
pop
test
adc
mov
inc
mov
loopne
hlt
aam
lcall
mov
or
std
mov
mov
or
pop
inc
nop
icebp
push
icebp
and
or
adc
outsl
xchg
xchg
sbb
sbb
mov
andb
inc
in
push
aas
and
pop
nop
or
nop
or
jo
xchg
in
inc
dec
pop
xchg
pop
add
insb
lods
cmpl
inc
pop
dec
or
outsl
jne
gs
mov
push
dec
dec
mov
cld
stos
adc
push
inc
push
dec
push
jge
shrl
xor
dec
inc
es
pop
dec
dec
inc
stos
sbb
mov
popa
jnp
adc
cmpsl
adc
and
push
and
cmp
mov
sub
xchg
jmp
or
and
xchg
repz
jb
cmp
sbb
mov
and
xchg
sti
enter
jb
cmp
jb
cmp
sbb
mov
and
xchg
in
out
out
call
mov
and
xchg
in
enter
jb
cmp
sbb
mov
and
xchg
aad
in
jb
cmp
sbb
mov
and
xchg
fsubp
fbstp
cmp
sbb
mov
and
xchg
vshufps
jb
cmp
sbb
mov
and
xchg
int
into
in
jb
cmp
mov
mov
mov
mov
mov
mov
mov
and
mov
sbb
mov
and
cmpsl
jb
cmp
stos
and
scas
jb
cmp
inc
jle
mov
ret
inc
xor
xor
or
das
insb
gs
jg
push
or
hlt
jb
cmp
je
pop
add
hlt
push
bound
jo
cmc
inc
pop
mov
mov
jg
fwait
pop
pop
test
jp
push
xor
inc
js
gs
add
jg
fidivs
mov
push
inc
inc
bound
or
adcb
adc
into
int3
xor
and
scas
adc
mov
push
inc
dec
jne
popa
dec
gs
inc
mov
jbe
adc
movsl
mov
or
outsb
mov
mov
cmp
cmpl
popa
test
sub
inc
cmpb
hlt
jnp
and
fimuls
adc
inc
mov
dec
sbbb
inc
cmpl
pop
inc
mov
pop
movsb
cmp
rolb
popa
outsb
addr16
pop
pop
enter
or
or
inc
scas
data16
outsl
dec
ja
adc
stc
test
or
test
mov
mov
pop
enter
mov
mov
jbe
add
ret
mov
ja
movsb
mov
sarb
pusha
pop
mov
sbb
push
inc
insb
mov
ja
or
nop
adc
mov
push
push
outsl
sahf
insb
test
sub
pop
inc
test
je
shll
pop
in
enter
inc
xor
outsl
mov
and
xchg
inc
xchg
int3
fmull
adc
arpl
rorl
mov
test
aam
adc
dec
jns
cmc
subb
fdivrl
add
inc
push
je
arpl
addl
lcall
je
imul
nop
mov
enter
les
sub
pop
fldlg2
push
cmc
push
enter
push
ret
popa
dec
outsl
fs
dec
mov
xor
cmp
push
adc
fnstenv
jae
ret
mov
pop
lods
sub
cmp
cld
rolb
enter
movsb
push
push
push
lea
pop
mov
sub
popa
gs
mov
addr16
adc
xor
dec
dec
or
mov
inc
insb
pop
add
xor
sbb
add
inc
arpl
int3
cmp
jmp
or
lahf
les
adc
adc
push
mov
in
loope
or
mov
adc
and
dec
fstl
mov
or
mov
xor
push
and
adc
enter
mulb
mov
dec
jne
add
push
gs
fs
jecxz
ficoml
or
outsb
hlt
push
jp
in
push
das
fadd
add
shr
div
das
sbb
push
adc
fcompl
add
mov
mov
call
cli
mov
sti
movsl
jbe
push
inc
adc
mov
inc
ficoml
enter
call
out
xor
jg
mov
icebp
push
mov
jmp
popa
orb
or
or
push
les
mov
mov
nop
lds
orl
jp
insb
push
push
mov
adc
fmulp
xor
sub
jle
call
jle
test
aam
mov
add
daa
js
sbb
dec
sub
movsl
shlb
adc
loop
cmp
inc
pop
addl
or
repnz
xor
sarl
shll
cmpsb
in
leave
add
cmpsb
je
movzbl
into
or
sub
ljmp
and
shr
add
sbb
push
sub
inc
and
adc
xlat
or
add
sti
xchg
fmull
ja
add
and
sti
je
xor
ret
push
xlat
sub
pop
push
mov
mov
mov
cmp
xor
jns
scas
fsubrl
and
loop
mov
mov
or
mov
or
cmp
dec
cs
rclb
xor
lret
mov
ficompl
repnz
xchg
mov
xchg
mov
adc
cs
xchg
hlt
push
loope
imul
xchg
pop
enter
enter
bound
adc
dec
repnz
mov
mov
clc
rcll
aaa
test
loopne
ljmp
mov
lock
add
repz
sbbb
hlt
push
jge
ret
adc
dec
enter
clc
insb
into
sub
inc
or
xchg
pop
xchg
pop
aad
hlt
fnsave
ss
mov
jge
mov
push
mov
repnz
and
outsl
mov
das
dec
out
cwtl
jo
xor
inc
and
sbb
ja
mov
or
je
push
mov
inc
lock
mov
aas
loop
sub
shrl
js
movsb
enter
sub
das
sarl
inc
sti
push
incl
bound
mov
inc
shrl
mov
lcall
cmpsb
sub
sub
xchg
mov
add
adc
xor
pop
mov
add
push
xor
out
mov
mov
mov
lcall
sub
filds
notl
out
testl
fbld
cmp
cmp
mov
lcall
inc
sbb
or
mov
jmp
mov
adc
inc
mov
adc
jne
add
pop
mov
mov
or
std
lret
jne
mov
dec
xchg
pop
enter
push
jmp
call
and
imul
xor
pushf
mov
outsl
daa
outsb
ret
fcmovbe
sbb
dec
cltd
dec
pop
pop
add
movsl
adcl
xchg
imul
sbb
and
sub
jp
icebp
movl
mov
or
cld
enter
jae
cmp
dec
cmpsb
jl
and
mov
ds
cmc
xor
adc
or
bound
sbb
and
inc
dec
or
mov
negb
fs
cli
adc
push
pop
sti
push
cmp
inc
pusha
ret
nop
ret
cli
call
in
cmp
jge
pop
cmp
lea
inc
jp
jg
sbb
or
das
cmp
push
mov
fs
adc
popa
inc
mov
call
adc
cmp
js
dec
jmp
sbb
push
fisttpll
test
mov
add
sbb
lea
jmp
imul
bound
inc
push
xor
aam
call
dec
add
iret
dec
repnz
fs
inc
mov
and
js
and
and
xchg
and
addr16
fsubrp
xchg
lret
sub
fistl
adc
jo
in
xchg
lret
in
les
sbb
mov
decl
inc
sbb
xchg
and
mov
push
and
adc
push
rolb
pop
adc
and
push
sbb
fs
dec
addl
pop
cmp
lods
xor
daa
jl
inc
stos
fnsave
adc
add
leave
scas
and
cmp
push
xchg
mov
xchg
stos
jne
popf
test
rcrb
sbb
adc
cmpsl
adc
insl
add
xchg
add
xchg
add
jmp
call
push
and
inc
leave
in
test
jp
pop
push
xor
jecxz
adc
and
or
xchg
and
add
ret
sbb
lock
xor
sub
mov
lret
sub
imul
dec
dec
inc
jb
xorl
and
adc
rcll
rcrb
mov
loop
ret
push
dec
sub
or
dec
out
add
add
pusha
mov
xor
lock
sarb
cli
push
inc
ja
mov
adc
outsl
mov
test
xchg
push
adc
les
jecxz
mov
adc
dec
dec
adc
pushf
sub
xlat
idivl
push
push
lea
cmpsb
or
push
cwtl
xor
nop
rcl
dec
xor
sub
out
setbe
mov
mov
xchg
out
ja
mov
push
push
ljmp
pop
inc
sbb
xlat
bound
les
mov
imul
cwtl
movsl
mov
lds
fisubrl
push
or
adc
call
sub
in
inc
lea
or
test
call
sub
sar
xor
xor
adc
pushw
sbb
mov
mov
clc
sbb
fisttpl
popa
or
in
pop
negb
xchg
push
sub
jmp
sbb
inc
call
negb
adc
aas
sub
and
mov
enter
push
adc
cmp
enter
pop
inc
cmp
leave
mov
or
cmp
mov
mov
jg
push
push
ret
push
inc
clc
not
sbbl
push
mov
imul
cmpsb
mov
clc
fadds
outsl
rcl
push
cmpsl
xlat
imul
iret
adc
dec
ss
pop
mov
imul
mov
pop
shr
je
iret
pop
xor
inc
ds
pop
and
inc
sbb
dec
stc
adc
outsl
sbb
repz
cmpsb
addb
dec
add
rcrb
xor
add
in
dec
xor
hlt
fyl2x
dec
mov
leave
sub
shll
out
push
in
adc
je
or
push
adc
sti
inc
mov
mov
lods
mov
adc
mov
scas
sbb
test
call
leave
xchg
cmp
sub
dec
jae
jg
jl
push
or
cli
lahf
sarl
call
es
mov
mov
outsb
lret
adc
and
xchg
mov
mov
enter
mov
add
cmpb
jne
and
jno
lahf
or
stos
adcl
dec
loop
dec
adc
cmp
xchg
in
mov
cs
mov
test
xorb
lcall
jg
test
cmp
jg
cmp
sbb
jne
push
inc
xchg
jb
lds
lods
push
scas
hlt
mov
lcall
push
sub
sub
cs
push
or
adc
and
jg
pop
lock
clc
xor
push
in
push
in
sbb
hlt
push
cmp
sub
mov
xor
lock
sbb
and
push
ret
mov
nop
mov
cmp
mov
enter
push
mov
call
or
repnz
repz
call
jo
mov
jo
pop
pop
ret
cmpsl
sub
jae
lds
dec
in
call
leave
xchg
pop
pcmpeqw
inc
sub
movsb
xor
or
movsb
xor
loopne
push
leave
or
mov
add
mov
mov
push
sub
adc
test
iret
iret
push
lea
int3
push
movsb
ljmp
clc
pop
shl
cmpsb
mov
jb
out
mov
mov
and
je
dec
push
xchg
pop
adc
cli
movsl
ret
adc
and
jp
fstpt
fsubl
or
adc
inc
movsl
inc
stc
pop
pop
test
cwtl
call
rclb
add
dec
insb
inc
push
lods
pop
and
mov
mov
cs
and
icebp
jbe
sbb
push
lods
dec
addr16
enter
pop
mov
rol
xchg
jmp
inc
cmpsb
cmp
cmp
in
sub
and
test
mov
mov
test
repz
push
add
fld
dec
xchg
std
mov
xchg
jle
ret
mov
inc
or
cmp
loopne
out
fs
fldln2
xor
pop
jbe
je
mov
push
shll
rcrb
adc
jne
rol
lret
call
mov
add
jg
mov
adc
jne
push
push
push
jg
add
insb
rorl
and
out
les
mov
push
mov
push
push
sub
push
dec
int
test
xor
mov
das
pop
add
adc
clc
or
hlt
push
lock
xchg
pop
or
lods
cmp
mov
jne
add
inc
cltd
jmp
das
repnz
fs
sbb
mov
mov
inc
out
sub
lods
cmc
jle
push
pop
or
or
hlt
shll
lods
jmp
xchg
adc
movsl
filds
cs
mov
sub
leave
jne
jg
popa
xchg
sbb
mov
sub
xor
cmpb
xchg
or
lret
add
xor
movsb
sub
and
stos
push
push
pop
xor
lock
push
mov
mov
sahf
jmp
cmp
jge
jbe
jb
loopne
ja
imul
rorb
rolb
lret
xchg
pop
in
jmp
hlt
cmp
adc
decb
sub
loope
sbb
je
test
lret
fisttps
dec
push
lret
cmp
pop
or
or
xor
int3
push
pushf
push
jg
or
pop
sahf
ja
enter
xchg
jl
movsb
sbb
or
cmpsb
xor
or
mov
mov
shll
out
sbb
sub
loop
in
jg
add
pop
pop
push
xor
adc
push
push
sub
pop
jne
mov
and
inc
enter
jns
aaa
sbb
repz
inc
dec
mov
ret
mov
sub
jbe
daa
push
inc
pop
pop
xchg
ds
xorb
cmp
loope
xchg
pop
push
and
mov
or
shlb
lea
ret
sahf
faddl
inc
push
test
or
mov
movsb
lds
pop
cli
jmp
and
xor
adc
neg
xchg
mov
div
or
jne
ljmp
sar
adc
sub
inc
les
cmpl
jbe
mov
lahf
nop
cld
push
mov
xor
and
mov
scas
add
jmp
mov
out
add
add
movsb
and
or
js
pop
jp
cld
jle
test
scas
add
ja
int
dec
sub
ja
repz
rcll
sbb
sub
dec
lret
sbb
push
add
and
inc
fsubrl
push
push
iret
jmp
add
jo
sbb
ret
push
dec
inc
je
push
push
inc
mov
inc
out
in
cmovle
cmc
dec
add
std
add
jae
cmpb
jbe
pop
test
push
sbb
adc
adc
mov
clc
ja
cmp
push
nop
push
inc
iret
adc
fucomip
fcmovb
call
inc
xor
add
sbb
mov
pop
adc
sti
popl
cmp
inc
in
cmp
and
imul
lret
ret
mov
mov
add
mov
jmp
push
inc
testl
inc
and
inc
mov
inc
push
ljmp
pop
pop
mul
dec
mov
ret
cmp
mov
jge
sbb
stos
ss
es
stc
test
insb
dec
cld
xlat
cli
adc
xor
adc
jmp
es
mov
cmp
jl
jmp
dec
add
mov
stc
mov
lods
fdiv
lods
lods
dec
mov
shl
ret
mov
pop
jge
xchg
in
or
adc
lea
xor
cmp
xor
stos
or
jne
shr
or
call
push
neg
mov
orl
mov
pop
mov
sub
dec
add
jmp
stos
cmp
add
pop
pop
test
push
add
mov
sti
loope
push
or
mov
hlt
mov
cmp
repnz
jbe
ret
adc
or
std
or
andl
cmp
jbe
nop
ss
daa
dec
jge
add
or
and
dec
sarb
mov
sbb
add
roll
andl
bound
in
pop
dec
dec
testl
or
sti
add
aas
ja
xor
jle
mov
sbb
popf
nop
adc
jnp
or
dec
rorl
cld
shrb
lcall
and
push
xchg
mov
push
add
out
testl
adc
stos
mov
mov
dec
aam
mov
or
sbb
jl
cs
sbb
andb
clc
mov
sbb
stc
jmp
jae
xor
je
clc
loop
mov
les
stos
xchg
inc
push
clc
sub
fistps
push
xor
sub
push
sub
mov
dec
mov
dec
mov
pop
dec
fwait
ja
adc
sub
faddl
pusha
add
mov
out
mov
jbe
inc
ret
decb
cli
adc
mov
mov
mov
inc
pop
je
mov
dec
faddl
div
mov
inc
call
add
hlt
or
in
lds
jmp
dec
mov
mov
add
dec
inc
or
jne
call
leave
test
sbb
or
add
cmp
add
xchg
push
mov
cmp
je
push
jbe
push
and
sub
sub
lea
or
or
dec
push
push
pop
inc
loop
push
loope
hlt
fs
mov
lea
inc
add
mov
hlt
and
pop
mov
sub
sub
add
dec
sub
sub
add
cs
fistl
and
add
inc
sub
jmp
xor
pop
es
dec
aad
dec
pop
push
loope
lods
inc
stos
call
jmp
ficomps
mov
and
cmp
testw
cmpsl
adc
cmpsb
daa
cmpl
push
cmp
inc
data16
int
pop
fldt
sub
rclb
mov
clc
xlat
clc
std
jne
clc
cmpsl
add
fabs
push
out
das
call
iret
adc
fldt
lock
imul
popf
mov
je
fidivl
pop
fbstp
lea
add
mov
mov
adc
and
add
xor
inc
mov
stos
mov
add
push
dec
jmp
or
push
or
xchg
decl
inc
jo
or
adc
adc
ja
or
pop
data16
mov
xor
sub
sahf
and
xor
or
scas
mov
shr
pop
mov
or
ret
movsb
dec
out
in
les
call
adc
mov
add
rorl
test
jns
gs
or
sti
aam
add
and
sbb
jg
addl
or
add
and
xor
fildll
or
mov
or
fidivl
adc
fwait
arpl
rcrl
and
jne,pn
rorl
and
lds
dec
rcrl
cmp
enter
lea
xor
sbb
ucomiss
add
enter
call
push
idivl
cmp
fmull
lret
das
push
sbb
loop
sti
xor
jmp
or
lret
and
fnstcw
sbb
test
lods
mov
or
js
ds
pop
xor
test
ret
dec
jl
sub
bound
inc
imulb
mov
je
es
cmp
inc
jne
inc
push
call
add
aas
imul
push
jne
mov
mov
repz
bound
mov
push
push
add
loopne
nop
mov
add
aas
jmp
fisttpl
test
mov
clc
add
fsubs
inc
xchg
aad
enter
cmp
fbstp
sub
cmp
jae
fimull
out
push
inc
jmp
sbb
mov
cld
adc
sub
popf
imul
nop
push
cmp
ljmp
lods
lcall
pop
jmp
mov
int3
stc
push
mov
push
popf
mov
loopnew
xor
call
mov
jl
jl
xchg
mov
decb
clc
mov
or
pop
sbb
dec
lret
mov
add
sub
lret
push
icebp
xor
test
mov
ljmp
and
mov
adc
out
std
or
fldcw
jmp
and
std
fs
pushf
xor
push
or
inc
or
jle
sti
jno
sub
mov
or
pop
xchg
pusha
mov
adc
pop
sub
clc
or
mov
sbb
or
cmp
inc
cmp
jecxz
mov
cmp
or
add
out
ss
cmp
shl
cmp
jo
add
push
roll
call
mov
pusha
fildl
fdivs
out
or
fstpl
fwait
cmpsl
add
lcall
mov
daa
data16
enter
mov
dec
xchg
lods
das
ret
pop
push
outsb
sbb
shl
lret
pushl
jne
push
or
adc
and
outsl
adc
add
ficompl
loope
cltd
and
mov
divl
iret
daa
cld
or
xchg
dec
stos
insb
pusha
enter
loopne
popf
push
shlb
push
fsts
hlt
stos
adc
ljmp
nop
add
rcr
fmul
insb
cli
or
std
test
daa
jl
dec
cmpsb
jg
lea
iret
xor
xlat
mov
incb
jb
outsl
push
inc
daa
ja
push
sub
js
or
lock
sbb
movl
dec
nop
adc
mov
data16
pop
dec
incb
jne
shrb
mov
imul
sarl
repnz
inc
sbb
int3
or
jne
test
rolb
movsl
fs
push
cmp
dec
adc
or
pop
pop
fstpt
mov
lret
sub
std
dec
push
in
test
jg
fisubs
push
inc
or
hlt
mov
add
jmp
pop
sbb
inc
or
rclb
call
jo
jge
lock
in
movsb
adc
jge
ret
cmp
and
lods
sbb
fisubs
cmpsl
mov
cmpl
ds
fsubrs
mov
pop
mulb
or
daa
pusha
pop
shl
add
xchg
inc
adc
popa
dec
test
jbe
xchg
mov
add
mov
inc
shlb
enter
fwait
or
xchg
arpl
adc
fs
jmp
push
in
sbb
or
push
hlt
sub
cmc
cmp
push
loope
cmp
sbb
aad
mov
pushf
mov
jne
fdivl
pop
enter
mov
xor
lret
cwtl
inc
xor
dec
loopne
sub
scas
movsb
call
or
aam
cmp
fnsave
inc
cli
add
pop
and
pop
cld
paddusb
pop
fstpl
and
test
lock
call
adc
inc
dec
mov
cltd
cld
stos
cmp
cmp
adc
xchg
add
jmp
lea
push
add
add
outsb
test
fcoms
popf
pushl
pop
and
lret
mov
sub
push
push
pop
mov
mov
in
push
sarl
sub
stos
dec
int3
adc
in
push
out
pushl
jl
dec
stos
xor
sub
andl
or
je
mov
mov
inc
hlt
lods
js
push
cmpb
jne
jle
lods
adc
loope
lea
inc
push
push
lock
dec
bnd
xchg
inc
in
add
inc
jecxz
mov
in
push
aas
out
call
push
sti
aas
and
xchg
sbb
call
xor
mov
cld
movsl
sbb
xchg
cltd
push
mov
push
and
lretw
enter
in
and
lock
addr16
repnz
xchg
stos
add
test
push
mov
mov
inc
in
dec
push
loope
shlb
dec
cmp
inc
sub
fwait
xchg
adc
pushl
frstor
shll
and
push
add
xchg
dec
xchg
imul
xor
xor
push
ret
xor
inc
ffreep
adc
test
aas
pop
call
jne
lcall
adc
jecxz
cmp
cmpsb
bound
and
jno
push
loop
xor
fisttpll
movups
jp
push
xchg
test
fwait
add
addr16
and
jb
push
mov
lret
xchg
or
clc
stos
sbb
in
and
ja
xor
sub
or
mov
jo
mov
or
jb
mov
and
push
and
cmpb
je
xchg
callw
and
push
adc
cmp
adc
pop
xchg
clc
inc
xchg
nop
and
jl
jecxz
mov
insl
sbb
frndint
aas
adc
mov
in
fdivrl
or
pop
les
pop
adc
mov
clc
rcrb
and
mov
shr
jo
mov
mov
jb
icebp
sub
stos
and
mov
sbb
fs
cmpsl
aam
adc
xor
or
adc
pop
push
sti
dec
mov
imull
cmp
ja
push
stc
in
decl
push
cmp
add
push
jo
xchg
es
arpl
add
or
add
push
or
or
or
jb
add
out
and
mov
addb
daa
mov
pop
xchg
mov
mov
mov
mov
adc
lods
es
push
daa
hlt
cwtl
pop
pop
and
jnp
add
mov
cwtl
stos
xor
mov
mov
sbb
and
adc
imul
jns,pt
sar
sub
cmp
enter
std
sbb
xchg
mov
sbb
mov
hlt
dec
incb
mov
jne
or
sub
push
sbb
pop
aam
mov
inc
mov
ds
out
gs
movsl
pop
lods
pop
inc
cmp
popa
dec
push
insl
jmp
xchg
xor
xchg
cmp
out
imul
scas
add
or
and
aam
stc
cltd
dec
sarb
mov
inc
aam
mov
push
inc
adc
inc
std
and
inc
and
sbb
dec
lods
icebp
dec
stc
adc
dec
cli
push
or
loope
jne
cld
jmp
xchg
or
xchg
jmp
loopne
push
cwtl
addl
lods
arpl
add
cld
push
jmp
pop
push
popa
movb
out
pusha
lock
andb
jne
mov
mov
leave
in
popa
sub
xor
adc
lahf
bound
enter
pop
adc
sbb
or
xor
adc
enter
les
fs
push
jg
lahf
inc
fwait
jmp
mov
add
call
pop
xor
push
push
call
inc
clc
xor
testl
leave
push
adc
xor
lods
mov
xor
and
adc
test
test
or
inc
add
xchg
xor
jne
xchg
jge
push
test
xchg
and
adcb
xor
mov
jbe
adc
test
mull
ja
xchg
or
dec
dec
insb
mov
inc
jne
sarb
cmp
test
push
adc
inc
adcl
das
stos
sub
cmp
and
nop
add
bnd
mov
xor
mov
out
dec
and
cmpb
ldmxcsr
push
mov
dec
add
test
lcall
xchg
sti
ret
sub
bound
ror
push
mov
mov
mov
add
sbb
sti
jno
xchg
sbb
sbb
add
ds
mov
shll
or
testb
inc
or
xchg
xor
mov
dec
leave
es
add
stc
test
xor
enter
inc
and
andb
dec
test
and
fs
jmp
xor
ret
leave
or
xchg
jmp
out
and
mov
and
push
bound
pop
ror
push
cs
dec
lods
mov
pop
push
and
adc
dec
pop
add
rorl
dec
mov
aad
jmp
sahf
mov
mov
popl
mov
inc
dec
das
push
sahf
aaa
icebp
mov
or
or
loopne
lahf
pop
mov
xchg
mov
test
arpl
adc
dec
stc
and
and
inc
jmp
fdivrs
xchg
aaa
push
pop
lea
out
xor
lds
pusha
adc
pop
xchg
lea
loope
and
ss
popa
aas
xchg
adc
js
popf
jo
push
fs
xchg
call
adc
dec
pop
loope
push
dec
dec
xchg
add
fldl
push
mov
mov
out
jb
hlt
sub
daa
jo
dec
imul
popf
out
test
jle
inc
pop
adc
sbb
imul
pop
mov
add
lea
lock
ljmp
inc
jne
push
nop
pop
adc
mov
shrb
or
repnz
adc
inc
fwait
cmp
jle
ffree
inc
dec
adc
lods
pop
decl
add
mov
xlat
outsb
data16
xchg
push
in
pop
fnsave
and
lock
xor
lods
mov
shlb
mov
xchg
call
clc
push
test
mov
mov
pop
pop
dec
sub
shlb
xor
pop
dec
push
inc
add
mov
sub
mov
mov
int3
push
test
xchg
lret
mov
adc
scas
mov
movsl
call
xchg
add
enter
jl
je
repz
hlt
cmp
and
idiv
sarb
pop
aad
hlt
lret
gs
inc
pop
notrack
sub
je
dec
call
fdiv
or
push
jmp
adc
push
movsb
push
aaa
js
push
inc
mov
push
clc
jle
fistps
repnz
mov
imul
stc
adc
dec
add
inc
ds
jl
cs
mov
jle
pop
push
mov
cld
rorl
loop
addl
and
or
jle
or
xchg
leave
or
adc
pop
sbb
addb
push
mov
or
outsl
ja
xor
mov
push
dec
in
cmp
jne
nop
sti
arpl
pop
call
enter
cltd
xor
ret
add
sarl
shl
fadds
add
push
adc
pop
or
push
decl
xor
fsubrs
icebp
sub
dec
in
pop
jno
dec
mov
dec
call
in
and
sbb
or
out
and
jle
dec
idiv
push
lahf
adc
or
xor
xor
cli
aaa
push
stos
mov
push
jle
inc
xor
aad
jge
rorl
dec
jns
pop
sbb
xchg
dec
sbb
inc
inc
fnstcw
stos
hlt
push
lahf
cmpsb
mov
pushf
pop
test
mov
scas
std
les
pop
pop
ljmp
adc
jmp
out
mov
enter
out
jb
push
dec
and
cmp
push
mov
lret
out
sbb
adc
hlt
push
adc
jmp
dec
sbb
repnz
hlt
enter
loop
inc
lock
push
push
ljmp
clc
jmp
cmpb
sub
mov
push
add
sub
or
sub
or
sbb
sbb
cmpl
aaa
jle
and
jmp
call
adcb
xchg
dec
adc
insb
cld
xchg
hlt
shlb
sti
add
popf
adc
inc
sahf
pop
das
fs
push
mov
mov
arpl
sub
cmp
mov
xor
push
xorb
mov
dec
sbb
fsubl
add
jns
push
mov
sub
sbb
or
fsubr
push
cwtl
ret
inc
sub
fcomps
cmp
dec
test
cli
pop
push
out
inc
popf
push
jmp
subb
pushf
pop
push
mov
and
mov
push
inc
sbbb
jg
add
and
imul
dec
lock
repnz
jl
pop
iret
in
or
dec
lcall
mov
adc
mov
sbb
adc
roll
add
or
sub
stc
dec
sbb
push
inc
adc
dec
test
rclb
and
lods
fs
movsb
pop
inc
or
or
inc
add
mov
lods
xor
cmp
or
cmp
xor
or
push
xchg
add
test
inc
push
mov
and
fcoms
test
stc
cmp
and
jne
jnp
push
or
mov
jne
out
cmp
std
add
clc
ljmp
add
cld
adc
lock
xor
in
jecxz
negb
dec
cli
sub
push
stc
adc
xchg
icebp
xchg
ret
les
dec
or
add
dec
fsubr
fs
lahf
cwtl
aad
fadd
scas
push
add
dec
jg,pt
ss
pop
adc
sbb
cmp
addr16
pop
fs
push
in
loop
std
push
and
xchg
jl
lods
sub
call
fwait
insl
daa
movsb
mov
or
mov
xchg
stos
sbb
push
enter
mov
pushf
repnz
inc
enter
daa
mov
fsubrs
jb
movq
lods
add
fwait
jmp
push
or
sbb
fxch
inc
nop
and
push
data16
mov
xchg
sbb
and
push
call
add
add
shr
and
repnz
lret
xchg
call
inc
inc
add
pop
sti
test
and
cmp
adc
or
xor
lods
test
jle
bound
bound
cltd
inc
ljmp
push
inc
fprem
and
mov
call
mov
in
daa
add
jbe
sub
ret
jo
mov
lret
call
add
xchg
popa
lret
sarl
out
je
es
push
push
add
lds
call
ljmp
mov
push
push
cli
mov
rorl
inc
inc
sbb
jns
pop
sub
les
adc
cmp
dec
lock
add
mov
cmp
jne
xchg
popa
mov
pop
add
adc
push
sub
nop
add
xor
or
in
jecxz
inc
subl
adc
ret
call
out
cmpl
jne
adc
and
lds
call
xchg
jl
mov
pop
in
test
xor
xor
pop
je
xchg
and
aad
mov
push
or
or
call
xor
jg
int3
and
pop
sub
sbb
call
jg
jle
mov
addb
pop
test
call
loop
adc
mov
in
ja
call
cmp
mov
or
push
repnz
std
push
imul
push
xchg
mov
std
ffreep
mov
push
ja
popa
or
push
loopne
push
mov
and
adcb
jne
push
les
test
adc
stos
jb
adc
js
imull
sbb
mov
ret
sub
cmp
sub
push
jne
jl
ficomps
fnstsw
or
movl
sbb
movhps
mov
repz
adc
int3
mov
sub
cmp
aas
and
push
jp
popa
push
push
call
into
mov
les
icebp
or
shr
add
ds
hlt
sbb
popa
cs
adc
push
adc
data16
daa
sub
mov
insl
sbbl
push
mov
xchg
sbb
invlpg
inc
addb
ljmp
mov
test
int3
ret
add
jmp
test
cmp
xor
ret
add
jne
and
test
fldenv
add
lahf
and
roll
mov
push
fisubs
push
enter
add
pop
jns
cmc
push
add
dec
imul
jo
mov
insb
push
add
roll
mull
add
xor
sub
cmp
fiaddl
shlb
mov
rcrb
das
push
jne
jmp
int3
out
std
adc
call
sub
sbb
call
dec
and
lret
mov
push
cltd
add
or
popf
mov
push
in
test
add
por
inc
and
aad
mov
add
mov
shrb
fs
pop
and
fwait
and
mov
cmpsl
xchg
int
or
push
mov
xchg
shr
xchg
dec
mov
inc
lods
lea
hlt
dec
loope
sbb
addr16
das
and
es
mov
mov
push
sbb
xor
movsb
or
mov
lea
mov
xchg
mov
out
xor
into
lock
add
test
test
push
jns
dec
and
mov
les
je
mov
jp
ljmp
or
push
loopne
sarb
nop
loope
cmpsb
xchg
jle
jo
lret
pop
sbb
mov
incb
cmp
push
mov
inc
lods
push
push
and
mov
leave
shrb
ret
ret
push
dec
jno
dec
push
mov
xchg
add
frstor
xchg
and
clc
out
lfs
lcall
in
sub
lret
je
stc
push
dec
or
das
aad
cli
cld
faddp
clc
sub
inc
js
lret
xchg
and
jl
adc
inc
xor
mov
inc
jnp
mov
sub
loope
dec
mov
sbb
pop
int3
sbb
clc
xchg
mov
cmc
pop
lret
clc
data16
leave
mov
jl
arpl
test
mov
in
inc
jnp
inc
jne
nop
enter
pop
sub
jo
rolb
jp
out
fidivs
sbb
arpl
movsb
icebp
gs
stc
faddl
push
or
xlat
xchg
clc
rorl
test
mov
in
pop
mov
loopne
push
jg
cmp
xor
sub
inc
jne
inc
push
adc
mov
cs
orb
sbb
hlt
sbb
in
leave
mov
add
mov
int
push
dec
pop
lcall
or
dec
mov
or
add
ljmp
xor
push
pop
sbb
adc
lea
out
fldenv
das
pop
gs
mov
nop
cmpps
je
pop
pop
mov
mov
stc
xlat
into
je
into
test
loope
or
jecxz
adc
test
adc
cmpsb
pushf
xor
je
sbb
push
lock
clc
and
in
xchg
rcll
pop
dec
adc
dec
mulb
in
enter
or
into
adc
call
push
sahf
mov
mov
sbb
int3
jnp
inc
insl
loopne
cld
jae
sti
js
call
sbbb
rorb
jle
xchg
cld
pop
rolb
es
fucomp
and
notb
and
push
bound
cmp
daa
jmp
pop
xor
aaa
stc
inc
or
xor
jmp
xor
sbb
add
flds
add
or
adc
and
inc
or
orl
fistps
inc
push
jno
mov
xchg
pusha
je
xchg
and
or
sbb
xor
roll
cld
adc
movlps
fwait
inc
movsb
adc
jae
push
clc
adc
inc
or
mull
lock
out
jne
ret
sub
in
inc
push
lahf
mov
addr16
mov
and
xchg
or
mov
jp
xchg
inc
mov
xor
and
shlb
ror
movsb
adc
daa
shlb
and
adc
add
cltd
xor
lea
push
lret
test
cmpsb
xchg
inc
xchg
and
and
les
cwtl
adc
cltd
test
enter
ljmp
cs
mov
mov
ja
cmpsl
push
loop
xchg
jo
aad
cltd
cmpsb
sub
jbe
mov
fcomi
outsb
and
std
call
cmpl
dec
or
adc
jae
lahf
mov
cmp
fldt
pop
pop
xor
fs
pop
or
lock
cltd
adc
inc
dec
orl
adc
in
fdivp
insl
subl
or
and
and
jbe
or
outsl
jno
scas
cmp
call
iret
inc
insl
jne
cwtl
pop
inc
cmp
mov
mov
and
mov
test
cli
pop
fs
and
mov
in
rcll
and
jmp
sub
mov
loopne
or
inc
mov
pusha
stos
mov
aad
inc
or
pusha
mov
or
test
or
xchg
cli
sbb
or
call
cmp
fcoms
or
adc
mov
loopne
pusha
dec
mov
insb
call
push
call
mov
mull
dec
mov
adc
aam
or
fcomps
or
fmull
loopne
adc
mov
ja
push
pushf
xchg
and
xor
cmp
or
adc
scas
popf
ret
in
mov
movsb
sub
fldl
mov
push
data16
pusha
sar
jne
dec
mov
cmp
dec
add
dec
mov
jne
out
into
push
loopne
adc
loope
inc
or
sbb
sub
add
cmpb
dec
or
inc
ljmp
arpl
mov
sahf
dec
inc
add
clc
or
je
pop
mov
js
cmp
dec
das
push
test
push
push
pop
call
pop
sar
inc
scas
inc
jbe
sbb
jle
pop
movsb
adc
pop
xchg
push
pushl
addb
cmp
data16
xor
js
sub
leave
or
rolb
cmp
inc
dec
jge
cmc
xbegin
call
sub
inc
in
fcomps
jp
rcll
dec
aas
imul
jge
and
aad
ljmp
or
inc
adc
hlt
popa
cmp
jle
shrb
mov
jg
jmp
jne
pop
mov
idivb
jle
lock
cs
popf
xchg
lret
roll
incl
dec
cmp
loopne
jg
or
sbb
jp
pop
mov
or
stos
and
loop
inc
fs
aad
fs
and
std
push
iret
push
push
push
add
sbb
sbb
je
mov
inc
cmp
int3
loopne
sub
aam
lahf
xlat
mov
sub
aas
fnsave
inc
mov
test
dec
ret
call
mov
inc
and
xchg
adc
ret
push
xchg
clc
and
and
je
jg
push
push
test
xor
sub
shlb
les
jle
mov
jae
clc
daa
jg
in
icebp
aas
xor
adc
mov
lods
xchg
les
push
movsb
stos
fnstsw
mov
dec
push
jae
fistl
stos
cmp
dec
mov
sti
adcb
scas
imul
adc
outsl
insl
outsl
mov
mov
mov
push
jecxz
cmpsl
cmp
jl
pop
pusha
sub
mov
xchg
xchg
inc
adc
test
addr16
cli
ret
jmp
inc
pop
mov
sbb
and
jge
out
cmpsb
fisttps
mov
movsb
ljmp
test
jge
je
jns
push
jge
jb
add
cltd
pop
stos
push
and
rcrb
ret
adc
adc
xchg
std
inc
and
xor
add
mov
push
sti
jno
adcb
sbb
rcll
jnp
inc
pop
repnz
cli
sub
sarb
cli
jbe
push
sub
push
inc
mov
fcoml
shr
sbb
add
push
inc
inc
hlt
inc
enter
sbb
repnz
pop
enter
push
push
add
clc
xchg
bound
mov
xor
cs
inc
fdivs
and
out
cmp
lock
xchg
icebp
stc
push
push
test
leave
jns
lahf
adc
jns
sub
inc
pop
xchg
cmp
adc
fimull
inc
pop
outsb
add
popa
jb
jns
inc
jge
add
fsubl
je
adc
xchg
xorb
xchg
push
pop
call
jb
inc
mov
in
dec
incb
aaa
push
xor
jne
das
test
loopne
or
jne
jne
je
outsb
mov
cs
push
jmp
jg
pusha
add
push
movl
pushf
and
cld
and
nop
sub
and
add
sub
xchg
add
mov
adc
xor
rol
or
xor
mov
mov
cmp
jne
jo
adc
movb
or
fs
test
push
mov
mov
sbb
pop
and
insb
mov
or
cmp
hlt
cmpb
lret
mov
push
cmp
lea
cmpsl
fwait
jg
fstpt
cmpsb
pop
mov
add
cmpw
cwtl
xchg
rorl
push
das
lock
jmp
dec
call
jae
mov
call
loop
test
jmp
rcrb
xchg
je
adc
jne
pop
push
inc
sbb
fisubrs
cs
jne
pushf
xchg
inc
add
les
mov
inc
sbb
leave
mov
adc
out
sbb
mov
insb
xor
adc
mov
dec
sub
adc
mov
mov
repnz
sbb
jg
mov
inc
mov
mov
mov
mov
adc
xchg
sbb
jae
cmp
das
mov
sub
test
adc
out
fcompl
imulb
push
ljmp
adc
aam
xor
and
rorl
aam
fdivs
push
adc
mov
imul
cmp
inc
mov
cmp
and
adc
dec
inc
xor
sbbl
or
mov
clc
ret
or
enter
bound
clc
jnp
push
cmp
inc
fiadds
pushl
jo
jae
and
in
les
lods
xor
add
inc
rcrb
bound
hlt
mov
clc
hlt
mov
and
bswap
mov
pushf
and
hlt
dec
mov
imul
pop
sbb
enter
inc
or
mov
push
add
cmp
pop
mov
adc
pop
adc
mov
xor
push
xchg
sub
mov
and
aam
jns
adc
dec
or
jo
dec
push
push
cld
or
xor
add
and
into
test
ret
test
rclb
fadds
roll
xor
or
je
push
aad
sbb
push
lods
jp
adc
fimuls
inc
outsl
mov
cmp
lock
pmullw
fwait
stc
movsb
subl
fcomps
adc
mov
test
lcall
in
imul
dec
mov
stc
outsb
shrb
test
int
xchg
pop
mov
cmpsl
add
inc
sub
jmp
mov
stos
sub
shrb
pop
jbe
or
popa
jb
pusha
lret
mov
sti
mov
sub
sub
mov
cltd
pop
xchg
sbb
or
enter
js
inc
mov
jae
das
cmpb
pop
sub
lea
adc
shrl
dec
sub
add
inc
dec
xor
sub
mov
or
or
ja
fldt
lret
inc
loopne
add
test
fbld
mov
push
mov
jmp
and
test
cli
lret
stc
mov
testl
out
imul
test
adc
or
shrb
cmp
jp
sahf
loope
fldenv
xchg
sub
test
subb
or
mov
lahf
adc
adc
sub
dec
jno
or
dec
pop
sbb
ret
pusha
cmp
ret
inc
loope
call
out
and
mov
add
ljmp
sbb
jmp
test
push
leave
inc
repz
lods
adc
and
decb
test
jo
stos
xor
jmp
movsb
adc
adc
out
pop
test
and
and
cmp
inc
lods
cwtl
inc
xor
sub
dec
stos
loop
mov
imul
xchg
popa
arpl
inc
js
ds
js
add
xadd
inc
scas
leave
cmp
cmpsl
or
ret
pop
push
insb
and
mov
repz
push
sbb
push
adc
loop
mov
push
jl
inc
push
jne
dec
fdivs
int3
mov
xchg
push
std
sbb
add
pop
mov
sub
dec
call
jne
repnz
cmp
gs
and
lret
push
add
jmp
mov
fstpt
decb
and
mulps
xchg
push
xchg
jl
mov
xlat
lcall
dec
cli
loope
mov
insb
or
es
jecxz
cmp
sbb
mov
sub
cmpsl
addr16
mov
inc
movl
inc
and
xor
inc
mov
bound
lahf
push
add
mov
rcr
push
or
adc
adc
inc
or
push
call
add
je
ret
adc
dec
push
cmp
xor
pop
fsubl
mov
push
add
inc
or
pop
test
lods
sbb
jg
adc
cmpsb
adc
imul
cwtl
loop
arpl
imul
pop
fmuls
inc
pop
fidivrl
jl
call
jp
cmp
jnp
movb
adc
in
orb
dec
in
mov
xchg
push
or
or
pop
push
sub
or
adc
push
adc
inc
inc
mov
cwtl
adc
xchg
cmp
ja
je
and
mov
sub
xor
pmulhuw
inc
jmp
xchg
ret
and
mov
mov
rcrl
mov
adc
sbb
jmp
faddl
push
and
aaa
inc
dec
nop
orl
in
mov
loopne
sub
mov
push
sete
aas
sbb
ret
pop
adc
jb
push
dec
sbb
jnp
mov
rcl
inc
dec
loope
ja
movsb
jne
lahf
or
push
cmc
stos
xchg
adc
cmp
lret
mov
sub
cmp
or
add
movsb
je
addb
mov
dec
sbb
inc
or
or
ja
lahf
test
xor
inc
adc
bnd
pop
lods
lods
test
test
dec
jo
jne
sbb
jmp
sti
add
shrl
cmp
sub
pop
sbb
push
mov
decb
pop
aaa
daa
mov
or
test
sub
and
cmp
mov
push
test
fcmovnu
imul
xchg
push
inc
cmp
sub
cwtl
xor
pop
adc
iret
aas
int3
out
xchg
mov
testb
arpl
mov
dec
mov
mov
cltd
pusha
bound
pop
jg
ficoml
xchg
mov
adcb
mov
sbb
sbb
incb
sbb
jp
addb
mov
add
imul
scas
sbb
sub
xchg
out
and
fldl
add
mov
or
adc
jo
aam
xchg
clc
mov
jp
inc
lock
inc
dec
call
loopne
xor
fmul
adc
push
rorb
xor
adc
and
dec
mov
fs
test
mov
mov
pop
and
nop
dec
add
mov
xor
push
js
and
push
dec
dec
jo
pop
push
hlt
adcb
adc
mov
and
cmp
xor
inc
jns
je
sbb
and
jl
sbb
mov
ljmp
mov
adc
and
and
or
and
push
sub
add
adc
jo
lock
and
inc
roll
gs
sbb
xor
hlt
jp
mov
mov
aas
pushf
and
push
dec
js
in
in
cltd
xor
adc
cmp
pop
lret
aam
adc
rorb
in
pop
and
xchg
les
cmp
xchg
shrb
mov
mov
mov
mov
inc
mov
cmpsb
dec
inc
lods
push
cmpsb
xor
inc
dec
and
push
xor
and
jnp
mov
cmpsb
cmp
jo
cmpsb
sbb
lcall
outsl
out
cmp
test
jne
push
pop
pop
call
int3
testb
inc
out
dec
fs
repnz
add
and
sub
pop
fmul
dec
flds
sarl
mov
lods
adc
les
cmp
mov
lods
fisttpl
ds
stos
jae
inc
cmp
jo
lcall
test
jo
mov
mov
or
inc
adc
xor
pop
jp
sbb
adc
push
adc
sahf
and
std
pop
nop
inc
mov
inc
inc
and
adc
filds
or
int3
test
bound
inc
rcrl
ret
or
push
xor
dec
nop
scas
addb
subl
push
mov
out
sti
mov
mov
jo
cmpsb
inc
xor
mov
or
out
inc
cmc
mov
movsl
jae
jmp
mov
loope
js
or
movzwl
and
or
mov
bound
pop
xor
mov
add
mov
cmp
push
and
push
call
ret
sub
xchg
or
adc
or
ss
in
push
and
or
mov
ret
sbb
mov
sbb
and
dec
xchg
push
aam
fldln2
adc
or
jle
leave
call
insb
mov
out
incb
test
out
out
mov
inc
stos
test
xchg
cli
mov
jnp
stc
push
and
out
clc
mov
shll
sbb
mov
dec
sbb
jp
out
insb
bound
std
pusha
imul
lock
and
pop
sahf
jnp
in
add
lea
cmpb
cmc
sbb
push
mov
add
add
call
or
xchg
push
loop
sbb
sahf
mov
xchg
repz
mov
stc
sbb
jne
xor
mov
jnp
lods
repnz
jno
rcll
mov
lea
mov
test
gs
pop
hlt
xchg
adc
sti
inc
dec
lea
inc
xchg
aas
mov
dec
je
repnz
xor
push
test
enter
push
repz
jb
sbb
sub
adc
insb
adc
ret
pusha
sbb
lods
and
push
xor
push
adc
jg
dec
sub
jbe
pop
insb
mov
call
rolb
mov
je
sub
pusha
mov
adc
cwtl
in
jg
mov
pop
call
mov
pop
fildl
stos
add
jns
push
mov
lret
popa
nop
lret
les
mov
lods
hlt
adc
add
aaa
pop
jno
mov
xorl
cmp
push
push
pushf
mov
popf
andl
adc
pop
adc
mov
adc
es
insb
adc
or
test
and
fs
adc
push
inc
fs
cmp
les
and
lods
or
decb
jl
adc
mov
test
stos
xor
test
and
jg
nop
sbb
mov
or
inc
xchg
and
cwtl
xor
out
adc
adc
test
and
nop
mov
sub
adc
movsb
sbb
std
adc
mov
lods
push
lds
dec
je
cld
pop
std
movb
gs
jns
in
std
inc
adc
stc
cli
scas
sbb
outsl
je
or
sbb
jne
or
or
les
adc
inc
outsb
movsb
or
loope
pop
jnp
xchg
inc
insl
jo
dec
xor
jecxz
loope
je
mov
and
movl
adc
in
adc
and
inc
jae
adc
fcoml
adc
dec
and
enter
pusha
xor
mov
mov
ret
pop
jmp
mov
or
subb
or
and
mov
test
and
mov
jle
pop
and
negl
idivb
das
je
fmul
pop
xchg
inc
pop
outsb
test
adc
xor
adc
mov
mov
jo
sbb
enter
add
and
and
push
and
jne
sub
inc
nop
mov
stc
pop
sbb
mov
adc
dec
push
and
pop
lods
add
clc
lods
int3
das
inc
xchg
push
mov
inc
pop
imul
pop
mov
fs
push
inc
aad
lods
movsl
or
jmp
adc
stc
clc
xor
mov
inc
aad
dec
xchg
testb
inc
out
fs
adc
clc
incb
mov
out
dec
js
les
adc
and
dec
xor
jle
imul
pushf
push
les
inc
jo
cmc
into
mov
sub
pop
sub
sbb
mov
insb
mov
or
pop
in
pmulhuw
clc
aas
nop
clc
out
and
inc
push
cmp
cld
pop
pusha
arpl
fwait
add
cld
ss
pop
mov
mov
and
mov
jl
dec
jne
in
jb
xchg
leave
call
std
movsb
incl
dec
inc
mov
lock
clc
in
inc
int
rolb
cmp
sub
dec
test
jge
adc
bound
out
cmc
nop
push
call
mov
std
imul
lock
or
jo
push
jns
ljmp
mov
and
fbld
xchg
and
inc
das
in
sti
push
mov
sub
mov
mov
and
inc
loop
xor
or
push
jbe
nop
in
je
xlat
pop
nop
test
sbb
inc
dec
and
ljmp
dec
jae
or
dec
and
imul
int3
pop
xchg
inc
cmp
stc
movaps
mov
pop
call
xor
test
test
inc
mov
jno
or
or
inc
test
push
push
push
in
or
push
cmp
jg
getsec
test
or
sub
sub
pop
mov
mov
add
jmp
or
aas
jae
jg
push
push
jns
sub
fimull
roll
dec
add
and
cmp
mov
cld
cmp
fcmovnb
dec
adc
stc
adc
lret
inc
dec
cmp
repz
xor
clc
mov
fbld
scas
inc
xor
hlt
mov
scas
es
lods
push
inc
mov
imul
es
lock
and
sub
adc
xchg
bound
and
mov
dec
adc
sbb
dec
loopne
cmp
pop
adc
dec
adc
imul
and
movsb
mov
push
mov
cs
mov
leave
nop
mov
loopne
int3
dec
and
aaa
fcoms
inc
mov
jle,pn
and
sbb
and
imul
call
and
fsubl
subl
sbb
xchg
inc
sub
cwtl
dec
inc
cld
iret
xchg
lods
jae
leave
sbb
and
pop
stos
inc
inc
iret
std
sti
mull
sub
sub
es
jl
sbb
mov
xchg
rorl
sti
adc
and
lahf
jns
dec
lds
pop
orb
push
adc
dec
je
nop
arpl
movsb
lahf
mov
and
mov
mov
jmp
ljmp
jne
add
out
loop
sarb
fs
aas
push
pop
sub
lcall
and
jne
mov
mov
test
movsb
and
aas
sbb
add
icebp
inc
add
cli
mov
shrl
sahf
push
faddl
jnp
xchg
pop
push
cmp
lahf
ret
lods
and
inc
or
jno
dec
pop
ss
addr16
cli
mov
outsb
ds
add
movsl
xchg
jg
mov
jmp
inc
xchg
ret
mov
adc
scas
sub
adc
pop
sarl
push
mov
mov
notb
inc
add
call
pop
das
cmp
push
sbb
je
psadbw
ror
xchg
mov
adc
enter
jmp
adc
adc
push
sbb
mov
lock
cmc
popf
pop
push
jmp
lret
jl
inc
xor
pop
mov
gs
cmp
push
sub
dec
incl
lea
movsl
daa
cmp
jns
ret
dec
lea
enter
push
cmp
adc
add
adc
mov
inc
mov
dec
scas
xor
add
mov
dec
repz
dec
es
mov
inc
cltd
sub
push
je
and
or
dec
repnz
xor
inc
xor
xchg
add
push
add
cmp
sarb
or
inc
dec
adc
jae
adc
xor
and
loope
jle
adc
cli
and
scas
add
call
enter
or
nop
gs
notl
xchg
sahf
icebp
fucomi
and
enter
subb
not
jle
cmp
xor
ljmp
xchg
push
pop
mov
outsb
je
test
mov
notl
or
cmp
jne
cmp
jmp
inc
or
call
adc
int3
outsl
ds
or
push
ljmp
imul
push
inc
je
in
or
cmp
push
je
adc
or
loope
sub
lods
bound
cmp
inc
lea
lock
sbb
jmp
sub
jg
push
pop
and
sub
jne
jmp
ss
xor
mull
lret
cmpsl
push
cmpsb
or
lds
xchg
push
montmul
cmpsb
add
pop
inc
cmp
lahf
jnp
imul
fidivl
movsb
testb
ret
or
add
mov
or
in
inc
or
rclb
sub
loopne
in
sbb
in
mov
jmp
sbb
out
in
stc
pop
cmp
xchg
push
subb
xchg
jmp
ret
inc
xor
ss
cld
les
mov
lods
or
dec
or
aad
and
dec
ds
shll
pop
xor
dec
pop
or
das
sbb
push
stc
xchg
push
js
stos
and
xchg
inc
nop
cltd
out
cli
std
rclb
inc
outsb
in
jmp
xor
jo
xchg
stc
sbb
push
add
jge
xor
ja
mov
filds
lods
mov
jns
shlb
push
pop
dec
repnz
push
and
cmp
pop
aas
and
nop
add
adc
dec
cmp
pop
inc
int3
and
adc
mov
mov
arpl
je
mulb
jl
adc
sub
shll
jmp
mull
mov
inc
xor
in
xor
dec
scas
jne
es
push
xor
ret
test
out
movsb
jle
out
sbb
fmull
addr16
lds
fsubrp
xchg
pop
or
push
mull
xchg
leave
loopne
daa
sbb
and
mov
add
arpl
mov
movsb
sahf
ficoml
lock
or
js
add
pop
es
test
and
popf
or
xchg
sbb
mov
and
inc
cld
xchg
cmpsb
and
adc
adc
fs
dec
push
xchg
popa
and
push
lcall
ja
arpl
jmp
jne
es
call
adc
and
repnz
mov
filds
test
and
aad
mov
mov
fcompl
and
adc
lds
call
push
movsbl
sub
jl
adc
or
inc
mov
and
dec
adc
mov
mov
dec
mov
rcll
xchg
in
adc
aaa
adc
rcrb
sub
push
jno
and
adc
mov
mov
or
and
or
xor
mov
jne
jb
scas
push
les
ljmp
add
mov
xor
stc
jb
das
add
in
jae
or
stc
pop
mov
mov
xchg
enter
inc
and
test
ret
rcll
or
enter
iret
push
push
pop
cmp
lods
mov
jg
inc
mov
mov
gs
cmp
loope
bound
mov
ss
lret
sbb
int
sub
orb
adc
hlt
sbb
and
or
and
xor
cmp
and
inc
dec
push
and
stos
and
inc
aam
cwtl
mov
push
aas
dec
stc
inc
xor
pushl
cli
adc
jb
aas
mov
aas
push
cmc
xor
jecxz
and
adc
xchg
das
and
sbb
and
mov
js
pop
pop
mov
movsb
mov
std
add
jnp
xchg
iret
popa
int3
mov
inc
or
jg
push
adc
jne
push
sbb
pop
es
pop
ljmp
aam
jae
jmp
inc
xchg
and
test
repnz
orl
cwtl
cli
stos
cli
mov
inc
pop
adc
shrb
loop
jle
shll
pop
xor
insb
adc
xchg
lret
inc
jle
adc
mov
and
dec
pop
xchg
insb
push
xor
mov
cmp
add
xor
imul
inc
outsb
inc
xchg
icebp
cmc
adc
or
xrelease
xor
movsl
xchg
lcall
jmp
add
adc
pop
inc
sbb
jle
pop
fldlg2
dec
fs
insl
sbb
cmp
lock
adc
sbb
fidivs
popf
pop
cmpsl
xor
sub
cmp
or
or
mov
mov
push
mov
xchg
cmp
jmp
and
movsb
mov
xchg
in
and
mov
or
cli
xchg
xchg
cltd
jnp
cmp
fiaddl
ljmp
fs
sbbl
fnstenvs
jns
in
sub
outsb
pop
std
mov
leave
push
xchg
xchg
mov
inc
adc
sbb
push
and
or
inc
cmp
call
nop
dec
cltd
cmp
adc
dec
daa
sub
sub
inc
cltd
xor
mov
pop
repnz
xchg
jno
rcll
or
pop
pop
mov
mov
lods
stos
xorl
lods
iret
mov
adc
std
add
xor
sbb
mov
push
cmp
xor
dec
ja,pn
adcb
mov
out
mov
call
std
loop
inc
and
call
loopne
cmp
das
pop
das
decb
sbb
fsubrs
mov
pop
loope
aas
sub
frstor
xor
adc
clc
cld
loop
adc
cwtl
pop
lcall
ficompl
jo
adc
mov
decl
test
cmp
xor
push
adc
cli
pop
cmp
ja
bound
adc
repnz
mov
inc
lock
fs
out
or
call
decb
mulb
jne
cmp
pop
in
mov
jg
jg
repz
adc
je
sub
sahf
xor
push
inc
push
imul
notl
push
adc
test
xchg
movsl
and
pop
adc
outsl
adc
and
dec
mov
addl
dec
xor
jmp
sbb
arpl
lds
add
inc
adc
xchg
add
or
add
testl
sti
pop
aas
mov
and
jecxz
rorl
xor
iret
cltd
sbb
xchg
movsl
sub
std
xchg
adc
cmpsb
cmovbe
mov
mov
pop
xor
lods
dec
dec
push
and
and
xor
jge
jnp
sbb
dec
push
scas
inc
fbstp
dec
test
jmp
mov
testl
adc
add
rolb
orb
clc
dec
mov
add
sbb
ds
popa
xchg
test
lods
inc
rcrb
and
mov
or
add
enter
adc
push
inc
xor
roll
or
in
push
adc
dec
flds
push
sar
cmp
pop
lahf
add
sti
and
fldl
mov
pushf
into
add
fcoml
mov
adc
mov
sti
xchg
adc
cwtl
movsl
adc
mov
or
push
jns
and
test
jns
into
and
push
rol
xchg
aaa
faddl
addr16
or
push
daa
xchg
and
xchg
sbb
push
out
in
or
push
jmp
mov
jmp
cmp
xor
popf
aam
ror
sbb
popf
repz
addl
adc
iret
or
jg,pn
sarb
enter
out
xor
mov
aas
push
mov
cmp
or
out
dec
pop
inc
jne
in
lcall
jmp
mov
lret
repnz
push
mov
daa
jno
jp
fdivrl
sub
mov
mov
cmp
cmp
mov
and
pop
enter
and
ss
cli
mov
inc
push
cmpsl
cld
cmp
mov
dec
ficoms
cmpps
incl
push
sbb
jne
push
sgdtl
add
sbb
xchg
or
lea
mov
xchg
dec
push
cmpsl
in
xchg
jp
xchg
adc
jno
or
xchg
mov
push
in
adc
sbb
loopne
xchg
popf
mov
inc
adc
stc
and
in
push
int3
push
les
lcall
jno
hlt
xor
sbb
adc
add
or
jnp
mov
out
jns
sbb
inc
pop
sub
push
lods
adc
inc
sbb
cmp
fistps
sub
out
jl
sub
rolb
adc
sbb
and
fsubr
push
data16
or
mov
jno
jp
shlb
add
popa
aad
or
mov
jl
shlb
in
mov
dec
push
in
mov
lods
sbb
and
sarl
call
adc
or
xchg
daa
xchg
add
call
sbb
cmp
lods
std
nop
pop
push
mov
sbb
cltd
scas
test
scas
lock
adc
mov
mov
jno
sbb
jne
adc
push
bound
rorl
adc
inc
out
sub
decb
out
add
aaa
in
jne
flds
hlt
insb
inc
les
push
daa
xchg
mov
dec
imul
cmc
mov
jbe
xlat
push
xchg
mov
arpl
and
sbb
cltd
push
cs
jmp
push
and
and
frstor
sbb
xor
add
inc
sbb
sbb
inc
push
sub
cld
ret
xchg
test
inc
inc
in
shrl
sub
pop
adc
xor
add
test
and
mov
jmp
gs
insl
stc
add
mov
into
and
cmp
inc
jno
lret
jp
add
push
inc
imul
mov
enter
rclb
bound
fstps
nop
call
adc
and
lret
mov
push
sbb
dec
out
cli
adc
and
inc
cmp
adc
pop
add
es
push
repnz
add
nop
and
lret
fimuls
jge
test
inc
adc
pop
filds
lret
aas
gs
sbb
sub
jbe
adc
sbb
or
add
fldl
mov
orb
and
andl
push
mov
std
adc
test
mov
rclb
xchg
adc
outsl
gs
mov
jg
adc
dec
mov
sbb
lret
adc
xor
cmpsb
and
mov
call
or
test
inc
es
scas
lds
cmp
shlb
enter
pop
add
and
in
clc
adc
xor
sub
inc
daa
pop
lret
jno
or
adc
and
jns
dec
inc
push
inc
insb
mov
bound
fnstcw
mov
jnp
sbb
sub
and
push
mov
addr16
mov
ret
inc
push
sbb
mov
jle
cltd
jp
shrl
mov
push
fstl
adc
dec
hlt
jbe
test
jmp
fwait
inc
iret
stc
adc
jmp
aad
and
inc
push
and
inc
daa
jmp
adc
xor
fidivs
call
hlt
aad
jl
xor
movsl
clc
sbb
sbb
lea
clc
test
cmp
iret
rolb
pop
xchg
adc
test
lea
jl
sub
jmp
leave
pop
inc
mov
mov
test
jle
fwait
xchg
pushf
dec
jno
test
lock
sub
mov
and
inc
or
inc
push
dec
imul
adc
sub
or
mov
call
sub
in
test
adcl
and
dec
jno
push
mov
sub
scas
hlt
repnz
xchg
push
xchg
pop
test
push
adc
pushf
fstpt
and
and
mov
xrelease
and
sbb
dec
sub
xchg
mov
add
xchg
dec
and
fs
cmp
or
movl
test
test
lods
jnp
loopne
outsl
xchg
push
int
sbb
flds
js
adc
xchg
adc
mov
stc
dec
dec
sub
inc
rcr
mov
pop
sub
sub
sub
push
test
repnz
out
adc
mov
push
sar
lret
data16
mov
push
mov
lods
cld
lds
subl
mov
xor
jns
inc
sbb
loopne
xor
add
dec
and
inc
jle
mov
rcrb
or
add
loope
in
xchg
or
xor
and
inc
or
add
cmp
insl
bound
out
xor
ret
aas
pop
fstl
aas
mov
and
mov
loope
mov
gs
andb
imul
test
inc
or
js
sbb
and
mov
call
and
pop
mov
sti
cld
dec
or
fldenv
jbe
imul
shlb
cmp
adc
or
mov
shrb
mov
cmp
out
adc
and
mov
je
fldt
fstpl
clc
fwait
jmp
add
fs
and
insb
ret
ficoms
and
jae
das
push
pop
and
lds
pushf
scas
pusha
mov
and
cmpsb
emms
adc
outsl
imul
movl
jbe
or
daa
lock
xchg
jne
aad
mov
shrb
push
imul
pop
hlt
xor
sub
xor
adcl
ljmp
and
xchg
int3
and
push
stos
adc
add
inc
inc
pop
jo
test
lahf
sub
adc
xchg
xor
in
adc
mov
sbb
fstpt
xor
sub
inc
mov
ss
sub
xorb
subl
and
popa
xor
mov
inc
or
dec
sub
mov
mov
and
adc
jnp
add
adc
repnz
add
and
cs
lds
pushf
lds
and
and
adcl
adc
sub
jno
sbb
lea
dec
scas
xchg
ret
sub
and
out
pop
or
add
sub
mov
adc
adc
mov
adc
sbb
and
inc
push
xchg
loop
sbb
jno
dec
sub
mov
adc
xor
jae
jns
xchg
pop
enter
jg
adc
push
and
mov
push
pop
lcall
movsb
push
call
and
test
push
and
push
lahf
sbb
leave
adc
cmp
dec
inc
cltd
inc
ja
fstpt
fldcw
mov
adc
es
shll
sub
xor
cmp
pop
dec
imul
dec
adc
sahf
xchg
mov
movl
add
int
xchg
add
mov
lret
fs
mov
aam
pand
add
hlt
push
mov
xchg
mov
jmp
outsl
sub
pusha
push
in
xchg
fildll
pop
and
or
sub
and
and
fldenv
into
inc
adc
push
sbb
sub
push
andb
les
js
inc
adc
ret
popa
cmp
sbb
out
out
xchg
int3
xor
lahf
loop
add
fbstp
mov
xchg
jecxz
pop
mov
daa
cld
xor
pop
sbb
inc
ror
pop
pop
xchg
mov
loopne
mov
mov
sbb
adc
jecxz
dec
rorb
mov
stos
mov
adc
shlb
sub
lahf
jo
mov
push
out
inc
push
cmpsb
and
xchg
ret
fs
mov
push
ret
fcom
loop
cld
adc
adc
or
or
adc
pushf
mov
subl
or
xor
dec
ss
inc
repnz
and
inc
push
xor
push
cltd
je
std
dec
adc
mov
and
adc
sub
xchg
enter
pop
or
cwtl
in
jecxz
adc
leave
jl
inc
inc
push
loope
sbb
xchg
and
fstps
push
mov
out
inc
mov
std
daa
shll
push
orl
rclb
mov
mov
and
inc
or
or
sbb
fistpll
mov
xor
fwait
dec
adc
sub
imul
std
ret
out
xor
stos
cld
sbb
pushf
sub
inc
lret
and
mov
jne
adc
jno
or
gs
dec
push
mov
cmp
push
and
jge
idivl
cld
js
inc
psraw
mov
xor
pop
cmp
clc
fstps
mov
push
add
hlt
cmp
cmc
sbb
rcrl
xchg
add
pop
ret
push
pop
rcrb
xchg
adc
mov
xchg
pop
fcomp
insl
xchg
mov
xchg
inc
inc
jl
pop
mov
sub
les
push
adc
aad
filds
les
or
inc
or
fstl
adc
and
jle
mov
enter
xchg
cwtl
inc
stos
and
movsb
xorl
pop
adc
and
dec
pop
xchg
jns
cmp
push
sbb
sub
add
pop
or
shl
or
push
inc
mov
and
dec
out
push
and
cld
cmp
pop
lcall
jg
test
sbb
arpl
test
xchg
dec
mov
add
xchg
loop
sub
xchg
push
cmp
std
inc
add
inc
and
in
mov
int
xor
adc
inc
jle
add
dec
add
int3
sbb
orl
lds
or
add
loop
pushl
or
and
push
mov
xor
out
inc
adc
and
adc
xchg
mov
inc
and
in
adc
mov
push
popa
dec
mov
leave
mov
pop
test
test
jmp
push
int
push
pop
mov
xlat
xor
outsb
mov
imul
jno
dec
sbb
sub
imul
inc
adcl
cld
pusha
push
push
out
and
sahf
cmp
lahf
push
mov
jg
cld
adc
or
xchg
mov
adc
lret
enter
push
stc
stos
pop
inc
or
gs
push
mov
cli
daa
and
clc
mov
adc
xor
jge
test
aad
ja
xchg
add
pusha
inc
inc
adc
hlt
in
repnz
test
adc
push
adc
dec
loope
cmp
jg
test
pop
sti
sub
pop
mov
pop
mov
or
mov
jno
pop
push
or
adc
sub
or
push
fwait
pushf
imul
push
movsb
lods
idivl
mov
dec
pop
pop
in
cmp
movb
inc
cmp
call
xor
ficompl
stc
ja
adc
or
pop
cld
nop
sar
jl
push
adcl
movsl
sub
mov
adcl
push
std
test
inc
mov
and
push
mov
sbb
inc
pop
jbe
add
loop
push
in
add
mov
jns
dec
xlat
nop
mov
in
hlt
lahf
fs
aad
or
call
and
leave
dec
subl
push
mov
leave
push
jbe
mov
inc
shll
add
enter
dec
and
lahf
mov
adc
and
inc
jecxz
or
xchg
sub
rorb
pusha
and
dec
xchg
xchg
mov
hlt
pop
or
dec
add
mov
mov
inc
lea
inc
sub
sub
aam
pusha
call
dec
sub
sbb
or
xchg
aam
sbb
repnz
and
mov
cmc
adc
imul
fs
fisubs
shll
scas
and
and
jae
imul
sti
xchg
jge
int3
or
inc
test
sbb
jbe
lret
dec
rolb
lcall
les
jg
xor
jmp
and
inc
test
fsubs
movsbl
addr16
ds
sbb
dec
aam
inc
les
sbb
inc
add
hlt
add
xor
or
movb
int3
call
enter
or
or
call
stos
test
cmp
dec
stos
std
mov
inc
jmp
mov
and
dec
jnp
sub
inc
pop
push
movsb
cmp
inc
jnp
daa
test
dec
mov
ds
in
push
ds
inc
add
test
loop
add
inc
inc
data16
enter
add
xchg
sub
into
dec
jmp
or
add
mov
jb
jle
xchg
mov
mov
js,pn
in
test
adc
push
mov
mov
push
and
imul
loopne
call
pop
inc
dec
addr16
ret
mov
lods
call
mov
xchg
sub
les
inc
or
rolb
stc
adc
mov
cs
adc
mov
push
iret
outsl
rcll
int3
or
mov
pushf
jno
movsb
aam
push
lahf
mov
daa
cwtl
sbb
hlt
dec
xchg
dec
insb
iret
shl
pusha
push
xchg
call
dec
jb
jmp
shll
push
rcrb
and
and
or
sti
sbb
movsl
pop
pushf
aaa
mov
xchg
xor
sub
aad
cs
xchg
stos
mov
adc
mov
outsl
push
and
xchg
ror
bound
and
fnstenv
movsb
cmc
add
roll
mov
or
mov
cwtl
cmc
mov
cmp
inc
mov
sarl
inc
fistps
pusha
push
sahf
xchg
outsb
leave
pusha
sub
and
mov
push
inc
fwait
dec
lds
xchg
inc
lock
mov
fsub
xor
mov
inc
fdivrs
inc
clc
cmp
daa
rolb
roll
jnp
xchg
or
inc
test
sub
leave
push
sbb
cmp
imul
pop
mov
xor
arpl
lods
in
lea
sub
cmpl
pop
dec
rcrl
test
xchg
les
and
xchg
filds
sahf
xchg
ret
sub
sub
inc
pushf
push
bound
adc
xchg
sub
dec
sbb
or
push
enter
jl
jp
jne
dec
dec
pop
xchg
xor
mov
xchg
mov
inc
adc
or
ss
inc
mov
fs
sbb
push
adc
enter
inc
lcall
or
out
into
or
les
sbb
out
dec
sub
mov
dec
push
sahf
inc
sbb
jno
push
arpl
les
push
pop
inc
and
hlt
adc
das
or
les
imul
outsl
aad
sbb
sahf
aam
cvttps2pi
xchg
ds
or
inc
fdivl
hlt
dec
out
daa
leave
push
push
dec
pushf
test
or
dec
dec
jb
xchg
adc
inc
shr
fimull
xchg
je
jae
ror
mov
push
or
les
or
adc
or
test
in
pop
or
add
adc
cs
dec
xchg
insl
and
xor
adc
xchg
sub
and
inc
push
jo
pop
notb
jae
nop
arpl
dec
add
jge
out
adc
mov
mov
mov
and
mov
mov
dec
popa
cmp
push
dec
bnd
rorb
cmp
lods
adc
and
dec
or
jbe
or
test
sub
jae
mov
movsb
les
js
mov
mov
test
pop
or
inc
pushf
adc
test
dec
or
push
dec
pushf
mov
dec
or
jge
dec
dec
jno
add
cmp
cmp
inc
into
pop
jb
adc
je
mov
movsb
pop
mov
adc
mov
dec
xchg
mov
test
xor
movsb
sbb
push
les
xor
loopne
daa
sbb
cmp
inc
bound
mov
movsb
sbb
pop
dec
idivb
das
clc
aas
cs
inc
call
cmp
fdiv
int
or
ja
push
fisttpll
cmp
lahf
add
adc
dec
fs
std
daa
fmull
sarb
bound
push
mov
lahf
sub
ss
xchg
aaa
fstps
xchg
js
jnp
jecxz
or
pop
mov
dec
outsb
mov
stos
lea
xor
cmp
sbb
das
jle
imul
aas
add
mov
adc
pop
call
mov
mov
shrl
adc
inc
xor
sub
inc
adc
adc
and
or
add
dec
xor
or
cmp
lods
adc
or
inc
dec
adc
cli
mov
sub
lods
popa
call
or
jmp
cwtl
int3
mov
xchg
shrl
stos
adc
adc
xchg
lock
add
add
lods
test
je
cmp
adc
sbb
adc
jno
rcrb
pushf
adc
mov
pop
inc
mov
icebp
cmpsl
or
and
nop
adc
pusha
clc
jo
inc
adc
dec
lea
push
adc
in
cmp
jbe
cmp
or
add
daa
fbld
dec
je
cmp
inc
mov
add
mov
push
inc
push
mov
movsl
sub
pop
mov
sti
call
mov
cli
inc
dec
push
pusha
or
ss
fnsave
fwait
std
data16
stos
adc
pop
in
je
fistpll
mov
jo
mov
adc
or
call
imul
dec
jl
and
cmp
daa
data16
mov
stc
adc
add
incb
hlt
imul
jl
jl
jl
roll
pushl
add
mov
lret
pop
or
filds
inc
cmp
sub
or
sbb
pop
out
push
lret
inc
js
scas
ljmp
hlt
clc
pop
dec
setne
mov
das
rcrb
dec
mov
sub
call
mov
in
push
addr16
popf
cmp
enter
sbb
and
incb
xchg
fwait
sbb
jae
test
dec
js
pop
mov
lods
mov
push
jae
push
add
repnz
add
call
and
cmp
in
inc
sub
stos
test
movzwl
shlb
jg
je
out
lock
mov
cmp
jmp
scas
pop
notl
dec
test
pushf
stos
cwtl
inc
mov
mov
testb
xorb
add
sub
and
stos
mov
ud2
addl
and
negb
or
xorb
jl
adc
xchg
dec
bound
jne
pop
push
fcoms
gs
shlb
xchg
mov
or
pop
les
or
out
mov
aaa
test
and
cmp
bound
and
mov
xor
cmp
das
mov
lods
icebp
out
sti
jo
sbb
loop
push
adc
andb
or
pop
dec
cs
clc
and
rcrl
outsl
cli
xor
mov
jmp
sub
hlt
pop
inc
add
adc
faddl
inc
repz
fistl
lock
nop
or
or
lock
fdivrp
cwtl
mov
push
cmp
into
sbb
sbbl
fildll
lods
dec
sub
or
stos
testb
repnz
mov
test
add
inc
out
int
das
mov
cmp
inc
je
dec
dec
fmul
adc
sub
push
dec
insl
bnd
inc
adc
das
jle
imul
inc
arpl
dec
loop
inc
push
bound
mov
out
test
mov
sub
addr16
jbe
xor
pop
push
sub
and
mov
loope
movsl
mov
aam
dec
dec
or
stc
adc
push
jnp
push
test
push
inc
in
pop
ret
inc
sbb
adcb
ret
in
mov
inc
xchg
clc
xor
je
adc
cmp
scas
sahf
inc
adc
pop
adc
mov
stos
incl
sub
or
movsl
mov
in
xchg
sbb
sbb
inc
jmp
popf
push
or
cmp
je
xor
push
cmp
clc
sbb
or
mov
or
xchg
addb
adc
inc
push
adc
mov
dec
fwait
int
pop
in
or
add
dec
xor
inc
stos
dec
lcall
lods
inc
scas
mov
or
and
mov
and
test
dec
push
lds
scas
lcall
mov
adc
xchg
ficompl
mov
insl
mov
je
bound
or
ljmp
leave
or
push
pushf
mov
cwtl
add
test
xor
inc
cwtl
and
adc
jbe
push
imul
sub
sbb
add
push
clc
and
push
cmp
mov
orl
and
sbb
shll
jne
pop
jb
push
rorb
lock
je
dec
int
test
es
jmp
add
mov
mov
test
and
adc
fcompl
mov
addb
push
fwait
aas
mov
mov
popf
pop
ljmp
and
fildll
movsl
ljmp
inc
into
inc
mov
les
imul
xchg
push
lret
and
push
inc
arpl
adc
xchg
mov
jp
jmp
seto
adc
sub
adc
dec
mov
in
repz
cltd
adc
clc
adc
cmp
push
es
adc
mov
and
adc
mov
adc
hlt
nop
cmpsl
or
dec
sbb
or
call
lret
mov
mov
in
sbb
and
dec
aad
dec
pop
clc
xchg
adc
and
inc
in
xchg
push
mov
bound
push
push
je
mov
and
inc
addps
sub
adc
push
push
xlat
fwait
sarb
push
sub
aas
stos
enter
rclb
and
sub
lock
popa
pop
pushl
sub
loopne
aaa
or
test
jmp
call
popf
cli
lret
push
fstl
mov
xchg
and
es
lods
das
es
icebp
fisubs
push
in
sub
push
mov
add
sub
insb
jno
sub
cmpsb
sbb
mov
rorb
inc
adc
and
adc
or
push
inc
sbb
xor
or
std
movsl
jnp
stc
and
pop
lahf
pop
hlt
and
xchg
repz
addl
repnz
and
dec
or
push
cs
rolb
scas
test
sahf
leave
pusha
mov
xchg
xor
setno
pop
inc
xor
fwait
and
inc
lods
cmpsb
and
push
jne
imul
adc
inc
inc
fs
add
add
std
dec
adc
pop
movsb
or
and
xor
adc
sub
sub
out
xor
sub
mov
dec
adc
mov
adc
or
pop
sahf
push
jnp
mov
and
stos
out
lret
dec
cmp
cwtl
cli
xchg
mov
orb
mov
repz
xor
test
rclb
sarl
repz
push
out
je
daa
movzbl
pusha
inc
or
outsb
adcl
and
inc
repnz
inc
pop
mov
ret
sbb
mov
jae
add
xchg
enter
push
scas
cmp
push
sub
mov
inc
adc
sub
jl
and
adc
sub
mov
xor
inc
sahf
push
jmp
test
fcomps
or
insl
adc
rcrl
mov
insl
adc
add
mov
test
and
mov
push
repz
or
cwtl
add
sub
push
dec
xchg
aaa
inc
inc
aas
leave
xchg
xor
sub
and
in
jb
adc
sti
mov
nop
mov
das
int3
pop
push
test
ja
sbb
stc
mov
test
push
leave
xor
pop
pop
mov
fwait
roll
test
mov
sub
sub
leave
dec
pusha
and
rolb
les
inc
lret
inc
sub
and
sub
mov
repz
iret
cli
xor
popa
inc
in
or
dec
sub
or
test
inc
sbb
fisttpll
pusha
or
popa
xor
pop
jmp
dec
and
push
or
and
pop
cli
cmpsl
sub
jne
or
mov
jnp
test
or
jno
xor
inc
push
adc
or
je
test
test
jmp
movsl
adc
cwtl
dec
imul
or
fisubrl
inc
ja
dec
sub
stc
mulb
cmp
mov
sub
roll
adc
insl
pop
xchg
jmp
ja
add
data16
sbb
mov
adc
ret
inc
xlat
ret
call
dec
sbb
cmc
adc
popa
cmp
cmp
adc
test
shlb
sbb
test
or
dec
mov
fiadds
or
sahf
in
cmpb
pop
or
mov
and
jo
in
sbb
sbb
xor
imul
repz
or
mov
push
pop
ret
fisubrl
loop
shll
push
adc
loope
mov
hlt
sub
sbb
cli
or
pushf
call
add
add
adc
mov
dec
roll
sub
je
dec
fwait
push
sahf
adc
add
orb
mov
ljmp
dec
adc
repnz
sbb
and
fcmovnbe
jo
jne
jbe
mov
adc
mov
inc
dec
xchg
or
push
js
xchg
sbb
fs
jnp
daa
push
jp
xor
adc
cmp
push
mov
push
leave
rol
cs
or
repnz
or
cmc
in
imul
jle
xor
cmovs
sub
test
fnsave
pushf
dec
iret
adc
hlt
or
jne
sti
cmp
jae
xor
and
jbe
cmpsb
cmp
dec
jle
pop
or
jp
mov
jbe
sub
js
push
or
fldcw
xchg
jae
mov
mov
and
shlb
jmp
lcall
or
fptan
movsl
pop
aas
inc
mov
sub
idiv
push
jns
loop
bound
ret
adc
fcoml
ja
loopne
cmp
es
mov
pop
call
int3
lock
leave
clc
lret
sbb
in
stc
inc
adc
cmp
cmp
test
xchg
addr16
and
cltd
inc
stos
mov
arpl
imul
pop
cwtl
fisubrl
call
jg
adc
stos
xlat
hlt
in
push
int
pop
mov
aas
lock
mov
and
icebp
push
decb
les
push
push
dec
push
cmp
dec
cmp
movsb
pop
repnz
dec
push
push
dec
mov
dec
inc
jmp
adc
int3
mov
mov
inc
rcll
fistpll
mov
push
loop
cltd
xor
stc
test
and
sbb
mov
pop
mov
cs
jno
push
icebp
xlat
aad
pop
popf
test
mov
pop
cmpsl
cld
sti
adc
adc
sti
popa
xchg
dec
jmp
cmp
arpl
jbe
add
aad
mov
mov
and
mov
shll
pop
dec
mov
cmp
imulb
ds
and
hlt
xor
cmpsb
faddl
adc
add
gs
and
push
dec
fcomp
addr16
je
popf
adc
inc
mov
popf
aam
jo
addr16
inc
push
pop
mov
fmull
insl
into
sbb
jmp
shld
cmp
xchg
test
movsb
daa
rcll
jge
cli
mov
mov
lahf
adc
das
and
mov
add
cli
es
jmp
sarb
cmp
ret
mov
and
push
xchg
cmp
adc
cmp
cwtl
mov
add
inc
in
and
adc
bound
xchg
xor
loop
test
pop
push
repnz
xchg
es
aad
dec
cmp
sbb
lock
daa
jle
in
fsubl
pop
add
mov
dec
ss
mov
xchg
roll
aaa
mov
test
mov
xor
rclb
adc
test
fisubl
fistl
mov
sbb
inc
xchg
loope
fidivl
adc
test
cmpsl
shlb
xchg
push
mov
popf
or
inc
fisubrl
xchg
xchg
adc
sti
sub
data16
ja
cmp
push
ret
push
dec
jbe
mov
sysret
call
jmp
sub
bound
je
lret
push
rorl
mov
mov
sub
data16
sti
jno
push
inc
sbb
mov
stc
mov
mov
sahf
nop
pop
jnp
cmp
mov
lods
pop
lret
fchs
adc
lds
mov
cld
push
mov
xor
cltd
mov
lret
push
jns
cmpsl
inc
stc
xor
call
mov
out
xchg
imul
mov
subl
add
movsl
fsubrl
test
adc
enter
divl
cli
test
stos
stc
in
xchg
xor
add
ret
mov
enter
repz
jns
push
fistpll
ja
sbb
jge
adc
mov
xchg
xor
jl
cmp
sbb
adc
xor
mov
ret
and
dec
fsts
bound
imul
sbb
adc
add
pop
sbb
sub
xor
fs
fdiv
mov
das
insb
jae
fwait
and
fnstsw
ret
adc
imul
push
shl
sub
and
push
sete
nop
mov
adc
sub
pop
rcrb
rcrb
cld
xchg
mov
lea
and
pusha
rcrl
and
std
or
fiaddl
dec
xchg
xor
pop
movsb
jecxz
aaa
jb
lds
adc
push
adc
or
push
and
dec
inc
xchg
pop
and
sbb
mov
or
add
int3
sub
adc
sub
les
sarb
in
xchg
add
add
push
cmp
adc
ljmp
adc
fnsave
js
rorb
mov
lods
test
mov
xchg
lods
dec
dec
jmp
movsb
mov
insb
xchg
imul
int
loop
inc
dec
fs
out
jns
stos
jl
lret
inc
adc
in
cwtl
lahf
fstps
sub
or
and
pop
es
lahf
gs
or
xchg
push
mov
cld
add
test
mov
loop
adc
and
dec
or
and
ficomps
iret
or
push
adc
adc
mov
mov
push
xor
lcall
mov
xchg
js
insb
mov
cmp
bound
and
sub
cmpsl
pop
mov
pop
mov
mov
dec
push
adc
cmpb
es
adc
imul
adc
adc
and
pop
and
dec
out
imull
pop
pop
jne
roll
test
xchg
lea
sub
and
imul
mov
pop
jns
or
outsb
add
or
xor
imul
xchg
jns
lret
inc
aam
mov
cwtl
mov
dec
lods
lods
aad
push
lcall
xor
bound
mov
test
enter
sbb
movsl
fisubl
outsl
inc
push
dec
push
add
insb
stos
pop
iret
imul
aas
and
jbe
mov
push
dec
test
sbb
dec
add
int3
sbb
lods
and
mov
add
shlb
sub
or
es
and
imul
call
fcmovnb
out
adc
sub
loop
dec
stc
aad
jge
sub
sub
pop
add
movsb
pushf
gs
pop
sbb
mov
out
cmp
dec
pop
add
addr16
mov
add
xchg
mov
or
adcb
ds
jae
into
cmp
xor
iret
push
xor
popa
xor
ficoml
or
decb
outsl
mov
add
mov
push
sbb
out
cwtl
or
insl
jo
jns
in
scas
jbe
mov
lahf
push
xor
adc
adc
mov
xor
inc
into
insb
gs
jne
or
inc
jb
xor
arpl
inc
xor
dec
incb
push
mov
mov
ljmp
sahf
xchg
adc
adc
outsl
ja
and
arpl
dec
mov
inc
cmpsl
call
ret
fcomps
jns
adc
push
inc
fs
sbb
dec
outsl
clc
and
add
xor
aas
mov
push
scas
test
les
jae
mov
ds
out
pop
lock
push
mov
xlat
repnz
dec
dec
add
arpl
adc
mov
xor
push
dec
cmp
jmp
mov
adc
cli
dec
xchg
push
out
xchg
hlt
jge
inc
ss
and
shrb
adc
sub
call
xchg
lea
cmc
xlat
fdivp
dec
mov
nop
adc
in
jno
pop
push
cmp
or
scas
adc
fcoms
test
mov
test
inc
mov
and
mov
std
fs
test
call
xchg
inc
into
in
popf
test
inc
push
lahf
pop
data16
inc
cli
jns
sub
adc
xor
xchg
movsb
or
sub
or
jmp
ret
fwait
push
or
negb
jb
cmpsl
pop
ret
pop
insb
movsl
add
adc
pop
sub
sub
outsl
push
inc
flds
or
and
jmp
clc
sbb
dec
adc
mov
scas
aad
ljmp
sbb
int3
arpl
call
idivl
hlt
cmpsw
imull
insb
ret
fstps
pusha
nop
loope
ja
jl
push
and
fs
and
pop
jnp
dec
xor
dec
addr16
cmpsl
and
xchg
je
or
dec
fsub
cli
daa
into
fstpl
cwtl
je
sub
int
mov
inc
loop
mov
xor
xor
incb
mov
pop
shlb
and
das
movsl
imul
jmp
loop
inc
adc
dec
sbb
xchg
into
or
jmp
cmp
fisubl
fucom
or
call
rorl
insb
and
daa
fdivrp
jno
leave
jne
pop
mov
mov
iret
inc
add
mov
mov
icebp
shll
adc
pushf
push
lret
xchg
cli
adc
sub
rcl
xchg
inc
insl
push
push
mov
jae
and
in
pop
out
inc
mov
in
push
or
setne
xchg
push
movsb
pop
xchg
push
or
or
pavgw
bound
jo
mov
cmp
sarb
adc
pop
leave
pushf
mov
leave
mov
lods
jmp
adc
and
xchg
or
mov
pushf
jo
sub
inc
dec
xor
jne
jbe
ja
push
arpl
jns
mov
dec
jp
ss
xor
data16
jo
mov
sbb
int3
jmp
xchg
dec
scas
or
fimuls
xor
or
adc
xor
cmpsb
data16
adc
push
sarb
loope
repnz
sub
push
mov
out
outsb
out
lods
add
int3
push
enter
push
or
mov
nop
sti
jmp
sub
mov
pop
pop
mov
les
jns
aam
dec
test
js
jl
inc
ficoms
in
lock
call
out
jmp
inc
push
nop
jns
or
out
rcrb
in
pop
sbb
dec
lahf
imul
ljmp
lea
mov
pop
mov
dec
push
cmpb
jne
out
xchg
mov
and
call
inc
jbe
jl
fidivl
xchg
sti
mov
mov
pop
dec
call
or
stc
std
es
dec
pop
cmp
adc
or
test
mov
aaa
cmp
cld
js
cmpb
es
or
and
cmpsb
mov
pusha
jmp
sbb
in
fldenv
imul
and
adc
out
and
nop
out
or
jns
js
mov
inc
cmpsl
enter
sub
add
pushl
pop
dec
jns
das
jl
sbb
fs
or
mov
jl
rorl
fcomps
hlt
cwtl
mov
sbb
stc
and
loopne
out
dec
or
pop
lcall
pop
subl
xchg
pop
das
mov
mov
and
hlt
loope
dec
or
or
inc
je
and
sbb
leave
ja
mov
movsl
jb
add
sub
adc
outsl
or
add
adc
xor
lds
daa
pop
adc
or
clc
cmp
or
push
in
inc
mov
or
cmp
test
dec
push
mov
dec
call
cltd
dec
xor
inc
push
outsb
add
fwait
decb
fmuls
repz
lds
fildl
sub
mov
add
push
jg
test
pushl
add
add
lret
jle
mov
pop
lahf
push
adc
adc
popf
dec
pop
enter
push
mov
in
arpl
pop
sbbl
ss
push
cmpb
stos
icebp
xchg
stc
pop
push
mov
mov
add
pop
ret
cwtl
push
dec
cmp
xchg
push
outsb
cmpb
shlb
or
orb
jle
pop
repnz
sbbl
push
test
pop
or
add
ljmp
ret
add
lcall
iret
xor
arpl
mov
popa
adc
loopw
dec
or
jl
sbb
bnd
and
dec
dec
push
push
add
ret
call
mov
lods
js
loopne
pop
shlb
repnz
in
pusha
or
dec
jne
or
cmp
mov
sub
sbb
jge
addr16
shlb
orl
dec
js
dec
jne
mov
stc
sub
and
and
mulb
or
shrb
sbb
fdivl
shlb
stos
dec
and
mov
add
mov
jl
mov
inc
sub
jne
insb
mov
lds
rorb
dec
lds
adc
jle
decb
xchg
xchg
popf
mulps
mov
cmp
int
and
push
das
mov
xchg
cmp
add
dec
jg
stos
clc
scas
mov
push
loop
or
mov
adc
jp
pop
gs
xchg
or
mov
aad
je
sti
fcoms
pop
movsl
fwait
mov
repz
sbb
add
dec
sub
lahf
adc
std
mov
insl
dec
test
loopne
loopne
jle
cmp
dec
rorb
shl
ljmp
enter
inc
fsts
adc
arpl
enter
cld
ss
fimull
repnz
pop
mov
clc
or
sbb
sbb
mov
xchg
mov
cli
jge
mov
or
adc
mov
adc
and
dec
repz
adc
enter
call
jno
xchg
jecxz
and
lahf
sub
out
inc
jmp
adc
mov
and
or
jmp
idiv
mov
and
lea
sub
data16
add
cmc
sub
bound
and
adc
adc
sub
push
cld
pushf
dec
mov
or
cmove
and
das
ds
xor
in
scas
lds
jmp
rorl
inc
mov
or
popa
sbb
mov
pop
ficoml
dec
fwait
or
add
pop
inc
inc
inc
movzwl
jg
inc
dec
sub
imul
xchg
jle,pt
and
out
mov
inc
pop
and
das
inc
mov
leave
imul
aad
lahf
and
jg
jg
sub
orb
add
out
mov
jg
pop
add
in
adc
push
shll
popf
push
imul
mov
xchg
fcmovnbe
jmp
add
scas
ret
jae
test
mov
testl
rcll
sbb
sti
aas
iret
jge
scas
shrl
pusha
jecxz
xor
dec
xor
and
rolb
fsubs
dec
jne
adc
mov
cs
xor
inc
cld
clc
mov
push
in
and
roll
dec
out
bound
in
inc
frstor
fsubrs
jg
cwtl
cmp
push
sbb
clc
mov
andb
xor
mov
lahf
aaa
fcom
jb
adc
js
inc
cmpl
sbb
mov
mov
adc
and
pop
push
subb
test
iret
mov
push
xlat
sbb
test
mov
in
or
inc
and
insb
andb
addb
push
pop
inc
and
add
xor
mov
in
inc
fistpll
or
xchg
test
xchg
dec
aaa
call
jb
mov
sub
push
outsl
or
pop
xchg
test
mov
inc
imul
dec
mov
mov
mov
gs
inc
sbb
movsl
aam
or
aas
test
js
hlt
pushf
fs
fcom
sub
movsb
pushf
repnz
xorb
jne
dec
rolb
or
sub
fstpl
add
add
xor
leave
aam
jo
mov
inc
xchg
cld
aas
push
jae
add
mov
and
mov
push
cmpl
aaa
das
movsb
xor
dec
cmp
jl
jp
add
cwtl
cmp
loopne
push
and
je
sub
test
dec
adc
cwtl
out
out
pop
mov
sub
call
mov
shrl
mov
mov
testl
jns
outsl
pop
xlat
insl
adc
icebp
mov
add
add
pop
mov
inc
add
adc
dec
inc
push
inc
inc
mov
and
call
cmpsb
mov
cli
push
adc
mov
stc
ss
aad
mov
mov
add
inc
pop
aad
pusha
dec
cmc
cmp
mov
sbb
push
or
adc
push
push
mov
xorb
repz
mov
roll
gs
cmp
fldenv
adcl
test
push
sahf
add
push
lds
xchg
or
out
cld
test
jl
inc
pusha
adc
mov
xor
cld
shlb
mov
add
sarb
imul
mov
or
push
jo
rcrb
mov
js
sub
jge
cmp
ds
call
pop
popa
hlt
or
fxch
dec
or
pop
push
in
inc
mov
movsb
cli
lods
add
cmpl
and
pop
popf
ud0
test
pop
fcomip
cmp
add
inc
inc
xchg
inc
inc
dec
sti
inc
popf
mul
pop
ds
test
and
mov
ljmp
adc
movsl
sub
dec
inc
xchg
sbb
clc
insb
mov
fsubrl
mov
icebp
xchg
dec
ret
adc
inc
rcrl
xchg
pop
lods
mov
or
or
lcall
sbb
insb
cld
or
xor
insb
sbbb
mov
adc
ret
dec
jmp
je
add
cli
mov
clc
fsubrs
push
mov
les
sub
pop
or
and
adcb
mov
jge
push
xor
jnp
test
inc
mov
shrb
xchg
jo
push
mov
sbbb
mov
lds
stos
xlat
shll
hlt
pusha
mov
pushf
xchg
imul
jg
shll
rcrb
push
out
xchg
clc
stc
or
mov
and
mov
sub
jl
repnz
in
test
push
add
inc
mov
outsl
std
fimuls
mov
mov
bound
arpl
pusha
or
or
cmp
adc
adc
pop
add
adc
adc
and
or
enter
stos
or
or
xor
and
push
inc
or
lock
cmp
adc
inc
xor
dec
and
pusha
dec
adc
or
dec
or
cmp
pop
iret
inc
add
dec
and
dec
invd
dec
or
mov
jo
or
or
pop
add
pusha
or
test
insb
or
adcb
je
dec
adc
mov
push
pop
xchg
subl
or
test
call
adc
mov
xchg
or
inc
jbe
cwtl
or
inc
pushf
and
or
movsb
test
test
xchg
mov
orps
or
mov
push
mov
inc
cmp
and
loope
decb
push
push
cmp
mov
or
and
in
jb
cmp
pushf
and
in
jb
cmp
test
test
mov
cmp
mov
lea
jo
jno
jb
jae
inc
je
jne
jbe
ja
stc
inc
inc
and
xor
pop
ret
inc
and
xor
lea
inc
push
je
jne
push
jb
jo
shlb
push
fcompl
sbb
ljmp
cmp
mov
push
data16
in
or
cmc
or
or
xor
inc
add
mov
lcall
and
or
ljmp
mov
sub
xlat
inc
scas
test
add
mov
mov
sub
mov
jb
sti
or
mov
pop
mov
leave
jne
test
cs
jmp
and
mov
cmpsl
sbb
adc
outsb
xchg
sahf
pop
scas
xor
cmp
adc
call
add
mov
adc
cmp
or
or
mov
jno
dec
and
test
cwtl
and
std
nop
push
lock
adc
mov
sbb
nop
xchg
mov
lods
dec
stos
sub
je
sbb
inc
fimuls
xlat
inc
jb
or
orb
mov
inc
fwait
loope
and
add
popl
sbb
xor
and
out
in
sbb
and
imul
add
nop
scas
mov
mov
jle
mov
push
fcomps
or
pop
xchg
enter
cmp
sub
or
shlb
pop
mov
push
sub
mov
les
mov
and
mov
adc
mov
jne
push
or
enter
pushf
add
insb
ret
and
test
pop
movaps
and
add
and
fs
and
test
stos
arpl
in
push
les
sbb
push
push
mov
imul
test
in
test
jnp
and
xor
mov
les
out
ss
sbb
rorb
jbe
ss
or
rorb
xchg
repz
pop
clc
call
icebp
or
inc
add
fdivrl
pop
inc
mov
in
scas
xchg
loopne
lods
aam
nop
or
cmp
jmp
cmp
loope
nop
aas
jecxz
sbb
mov
xor
jmp
ds
test
ja
sub
in
and
xchg
inc
mov
loopne
push
mov
test
push
mov
xor
mov
or
cmp
je
cmpl
jne
pop
leave
decl
xchg
xlat
lcall
ret
jg
sbb
and
stos
daa
icebp
add
sti
mov
inc
aas
pop
and
adc
push
je
mov
add
dec
fs
hlt
mov
ret
mov
sbb
addr16
or
int3
cmp
xor
push
out
add
cmp
push
orb
adc
jge
pop
pop
ret
push
jle
sbb
pushl
sbb
test
fistpll
add
push
xor
dec
xor
cmp
jle
fisttpll
add
out
or
sbbl
sub
xor
adc
add
sub
mov
arpl
and
push
mov
or
loopne
mov
rorl
mov
or
and
fcmovnbe
pop
add
mov
mov
push
or
sti
and
loop
pop
add
and
cmp
clc
mov
dec
ret
sbb
movb
mov
cwtl
or
scas
jbe
dec
loop
lock
adc
test
out
dec
into
inc
cs
call
je
mov
cmp
lcall
pop
popf
pusha
bt
es
incb
push
push
mov
dec
jne
xlat
inc
inc
xchg
dec
femms
or
stos
lret
mov
mov
test
sbb
pop
sbb
mov
cmpl
jo
fmuls
bndstx
cwtl
scas
cwtl
ss
xchg
jmp
mov
push
dec
or
test
cmpb
clc
push
adc
or
mov
sbb
out
in
add
or
mov
lea
aas
sbb
pop
je
ljmp
add
or
ja
jmp
jle
sbb
add
or
inc
cmp
push
add
adc
jae
mov
inc
pop
lods
push
dec
mov
aad
mov
sbb
rorb
aaa
inc
mov
inc
ds
cwtl
pop
enter
push
adc
jne
mov
cmpsl
ja
cmpl
pusha
or
push
push
adc
and
mov
mov
fsubrl
xchg
repnz
jne
jge
daa
xor
int
jl
icebp
loopne
adc
lods
sub
mov
pop
cli
sub
inc
fadds
mov
sbb
je
jecxz
test
mov
push
pusha
xor
mov
js
cltd
aas
notb
repnz
add
dec
mov
inc
xchg
cli
xchg
or
xchg
test
testb
aaa
mov
jnp
mov
and
call
xchg
cmp
pushl
mov
jmp
std
xchg
dec
mov
daa
cmp
clc
je
out
mov
lods
add
adc
stos
fimuls
movsl
cmc
imul
call
jo
xchg
adc
repnz
xor
mov
pop
inc
negb
dec
out
cmp
das
xor
and
mov
push
dec
cmpsb
das
shll
outsl
in
push
xchg
lea
loop
add
insb
adc
daa
mov
jge
mov
adc
cmpsl
inc
adc
sub
dec
xchg
adc
xor
imul
or
and
out
add
dec
add
add
and
mov
fldcw
dec
push
subl
in
mov
fstp
adc
hlt
xchg
sahf
mov
cld
sub
dec
call
and
mov
or
mov
mov
mov
mov
les
and
add
call
stos
addb
clc
dec
call
lock
mov
fs
adc
hlt
mov
je
js
xchg
mov
aad
or
stos
gs
mov
and
xlat
call
bound
jno
dec
pop
jge
and
test
daa
or
mov
je
add
inc
adc
sbb
and
adc
ret
mov
lods
sbb
sbb
or
adc
lods
movsb
pop
jge
test
mov
sbb
sbb
sub
or
jmp
fldcw
mov
xchg
jo
or
shrb
stos
and
mulb
dec
addl
adc
mov
inc
push
repz
and
sarb
outsl
or
jne
pop
jae
out
sbb
push
ud0
nop
or
ds
or
call
adc
rep
les
out
call
inc
sbb
jp
fldenv
cmp
ftst
add
mov
inc
push
or
enter
mov
mov
cmp
pop
and
adc
adc
xlat
int3
mov
iret
mov
fs
xor
call
mov
movsl
aad
jbe
imul
jno
and
jne
mov
add
jb
shl
pop
and
ja
mov
sbb
pop
adc
orb
flds
lret
adc
dec
or
pushf
dec
and
adc
dec
adc
ja
xor
mov
adc
xor
push
jo
mov
jmp
cwtl
aam
pop
jnp
rclb
stos
mov
jmp
add
xchg
inc
adc
xor
sub
dec
adc
and
jne
pop
add
or
movsl
sti
mov
stc
push
mov
pop
pop
lahf
or
dec
adc
dec
shll
and
push
sbb
xchg
cltd
mov
or
xchg
dec
test
fstps
repnz
fs
pop
fstl
add
xchg
inc
pop
pop
adc
js
push
push
pusha
and
fistpll
sub
psubusb
adc
sbb
pop
lret
cmp
rorl
pop
or
out
push
test
xchg
push
pushf
mov
or
or
or
mov
sub
xchg
xor
mov
xchg
enter
adc
xchg
push
mov
adc
cmp
popf
test
adcb
mov
fs
or
sub
xchg
js
dec
movsl
nop
inc
jmp
xchg
lea
sub
push
xchg
ficoms
les
fnstsw
mov
repnz
pop
sbb
or
sbb
adc
cwtl
inc
add
popa
sbb
and
lahf
sub
pop
loopne
adc
fadd
sbb
jno
lds
jb
xor
adc
ss
xchg
pop
pop
adc
mov
dec
stc
subb
jb
icebp
cmp
enter
mov
inc
or
push
or
xchg
mov
in
dec
adc
in
mov
dec
add
test
xlat
pop
push
test
mov
jmp
or
xchg
inc
cmp
and
inc
or
mov
and
mov
inc
maxps
cmp
mov
jge
sti
bound
push
xor
stc
cmp
sbb
inc
fnstenv
push
mov
outsl
lret
inc
mov
sbb
jmp
push
into
push
rorb
pop
je
jo
lahf
inc
inc
les
pop
add
mov
xchg
test
sahf
mov
fbstp
mov
in
mov
pusha
cmp
lret
int3
add
push
or
popa
addr16
pop
jae
add
dec
inc
dec
and
lds
add
or
or
out
rolb
push
add
nop
inc
or
mov
adc
sub
pop
cmp
sub
push
mov
cmp
popa
xor
or
imul
data16
test
lret
mov
dec
gs
dec
jne
in
fdivrl
int3
sbb
dec
push
inc
fsubl
jb
out
insb
dec
jae
stc
xchg
nop
mov
nop
xor
pop
dec
pop
call
fsubrs
add
push
inc
imul
dec
or
aam
jae
and
inc
sbb
adc
dec
test
hlt
scas
test
pop
mov
push
jns
inc
in
dec
popa
mov
fnstsw
insb
jo
push
outsl
mov
out
lret
jmp
nop
mov
mov
cwtl
xor
lods
dec
gs
rclb
pushf
push
xor
inc
jne
add
cwtl
or
xor
fadds
jbe
and
dec
or
push
and
sub
shlb
and
fiadds
mov
stos
adc
cmc
daa
insl
jne
test
enter
mov
inc
inc
ja
lods
push
adc
xchg
add
outsl
outsb
push
pop
xor
mov
test
pop
mov
inc
mov
in
scas
adc
inc
and
inc
push
nop
loopne
pop
and
fiadds
imul
adc
movsb
out
adc
inc
xor
xchg
mov
jne
jge
xchg
scas
pop
fs
je
je
adc
rorb
lock
testb
inc
push
je
dec
movsl
stc
mov
outsl
sub
adc
adc
data16
mov
adc
cmpsb
into
or
enter
loope
gs
pop
pop
pop
shlb
and
and
dec
jb
rol
stos
int
leave
jb
sub
pop
fnstcw
pop
jl
push
bound
inc
or
cmpsl
cld
sub
cmpsl
mov
or
iret
or
sbb
adc
add
inc
jl
or
and
push
mov
push
or
aam
in
aam
or
icebp
cwtl
xlat
dec
lods
and
mov
xor
sbb
add
push
mov
flds
pop
ficoml
sbb
pop
mov
and
fldt
and
xorb
inc
mov
or
jb
test
inc
inc
sub
ficoml
les
fsub
pusha
or
push
jmp
and
icebp
sub
inc
jns
xchg
xchg
push
jmp
filds
test
pop
in
iret
sbb
add
dec
test
mov
adc
lock
mov
sbb
sahf
popaw
popa
fisubl
inc
je
cmpsl
sbb
test
lods
or
adc
cmp
pop
mov
movsb
mov
je
push
fiadds
test
or
fdivrl
pushf
cmp
jno
sub
arpl
add
int3
dec
mov
insb
sub
call
fsubrs
sbb
sbb
jecxz
fcoml
inc
cwtl
add
add
inc
adc
mov
cld
push
sti
mov
inc
nop
or
movl
pop
stos
xchg
mov
mov
sbb
cmp
dec
xchg
dec
in
cwtl
or
outsb
mov
movsb
jb
nop
andb
sbb
cmpsb
in
stos
mov
sub
sub
popa
jo
orl
push
shr
sahf
cmpsb
loopne
or
leave
adc
adc
dec
lods
in
int3
cmp
in
dec
add
fisubs
adc
push
mov
jl
daa
or
fists
or
or
lock
or
clc
sbb
mulb
jns
or
sub
in
xor
sbb
bound
out
sbb
adc
adc
cwtl
mov
xor
enter
or
push
cmp
nop
dec
fadds
scas
jb
cmpsb
add
dec
cld
mov
sahf
outsl
mov
mov
and
and
adc
xor
xor
stc
or
dec
fcoms
push
sti
xor
xor
testl
cld
les
cmp
push
test
popa
xor
cli
push
xor
movsb
fwait
xor
fmuls
int3
jmp
or
dec
sub
cmpsl
adc
add
call
xchg
scas
outsl
shlb
pop
insb
jbe
fcoml
dec
or
pushf
incb
and
add
inc
lret
ljmp
mov
sbb
scas
sub
movb
pop
or
shrl
jo
sbb
inc
add
fs
jnp
jbe
add
mov
cmp
inc
cmp
imul
pop
mov
inc
in
std
dec
pop
adc
inc
fldt
les
lcall
or
inc
mov
movsb
scas
pop
and
icebp
mov
add
sbb
dec
test
mov
xor
add
inc
clc
test
push
je
and
loop
and
inc
or
or
xchg
adc
enter
sbb
xchg
sub
fdivrs
imulb
dec
adc
xchg
inc
mov
xor
dec
dec
xchg
pop
and
ja
mov
jecxz
or
pop
int3
lret
adc
jo
lret
mov
pushf
mov
mov
jmp
in
in
addr16
sbb
mov
hlt
and
add
and
call
enter
mov
in
jmp
clc
mov
adc
or
lds
push
int
xor
push
cmp
shll
sub
pushf
dec
pop
les
bound
push
mov
xchg
jo
repnz
test
movsb
xor
fmuls
in
adc
das
sub
sbb
sbb
jnp
fs
pop
push
mov
or
repnz
nop
sbb
dec
dec
nop
icebp
shlb
xor
es
or
aam
jl
sub
mov
mov
jo
dec
inc
mov
pop
inc
sub
dec
sbb
inc
xor
int3
and
xor
pop
les
test
or
xchg
adc
dec
dec
xchg
jbe
inc
sub
je
jno
adc
aad
int
cmp
addb
jno
cmpsb
cmp
mov
sbb
cmpsb
je
sbb
ret
dec
scas
stc
in
mov
and
scas
mov
aam
loop
sarl
and
gs
add
mov
adc
cmpsl
call
mov
xchg
pop
inc
int
imul
push
in
les
xor
test
mov
sub
push
xor
sbb
fs
and
xor
sub
jl
mov
add
inc
xor
in
or
nop
pop
xor
adc
bound
inc
xor
sbb
xor
dec
sbb
sub
in
int3
add
lock
hlt
clc
clc
idiv
idivb
repz
lock
cld
lock
mov
enter
adc
mov
or
inc
cld
test
sub
int3
and
or
or
loop
xchg
in
pop
dec
adc
push
aad
lcall
daa
and
fs
pop
push
mov
mov
inc
aad
pop
push
popa
addr16
je
mov
xor
inc
adc
je
adc
adcl
enter
test
aam
ds
push
mov
das
arpl
inc
dec
out
imul
lods
adc
nop
sbb
sbb
mov
clc
and
data16
sbb
ret
or
xor
or
sbb
adc
mov
lods
or
pop
cmpsl
adc
dec
and
int
or
aam
js
adc
pop
sbb
jns
icebp
outsb
xor
or
outsb
into
or
mov
mov
addb
jns
lcall
orb
push
xchg
js
in
add
movsb
js
pop
adc
mov
les
addl
mov
dec
insb
fs
cmp
imul
inc
dec
shlb
dec
outsb
xchg
sub
dec
pop
and
add
or
inc
mov
and
adc
push
mov
add
dec
popa
jo
lds
jns
idivl
mov
mov
jl
push
data16
sbb
xor
scas
call
in
shlb
test
pop
inc
sub
cmp
jne
sub
dec
je
mov
jae
cmpl
or
insb
jl
cmp
pop
mov
mov
lock
test
loopne
leave
push
or
xor
nop
and
jne
mov
pop
testb
js
rolb
mov
call
scas
sub
xchg
aad
loop
in
mov
or
add
adc
adc
call
fdivrs
cmpl
jno
in
adc
or
pusha
adc
jmp
loope
lret
fadd
pop
lahf
jns
imul
xor
pop
mov
jmp
movsb
lock
lock
out
cld
sbb
jae
xchg
pop
aas
mov
cld
jne
dec
mov
xor
jo
adc
or
call
adc
cmp
lret
push
cmc
add
push
adc
push
pop
jge
in
int3
cmpsb
inc
push
push
sbb
xor
push
mov
mov
or
and
jns
push
std
ret
cmc
xchg
rorl
add
stos
negl
lock
ficompl
out
pusha
cmp
xor
push
sbb
sbb
and
mov
and
push
or
call
and
jl
or
jne
inc
add
loop
adc
fsub
mov
adc
adc
loopne
lods
in
shl
xchg
scas
int3
push
mov
dec
arpl
inc
inc
test
push
call
nop
mov
pusha
or
inc
dec
aaa
in
or
mov
adc
xchg
into
repnz
fadds
mov
dec
test
mov
jg,pt
jp
mov
xor
movsb
jnp
xchg
sub
and
lahf
mov
testb
inc
movsb
adc
mov
inc
xorl
xchg
xlat
cmp
sub
xlat
mov
lock
or
fcoml
xor
and
movsb
adc
or
mov
movsb
adc
dec
adc
xor
in
push
mov
sub
xor
adc
fcoms
push
cmove
fnstenv
insb
in
inc
and
hlt
pop
xor
xchg
ss
jo
in
push
or
call
push
pop
jns
inc
std
mov
inc
adc
xor
cltd
sub
aad
fisubrl
sub
jp
jno
repnz
out
mov
aam
mov
or
fdivrs
lret
add
sldt
inc
adc
mov
jge
sub
mov
lock
arpl
jle
push
jl
inc
xor
and
das
mov
inc
dec
aaa
jne
daa
int
cltd
pop
inc
mov
push
inc
imul
movsb
aad
cmp
in
or
push
xor
jmp
pop
sti
mov
ljmp
rolb
fisubrl
push
out
enter
xchg
lods
mov
mov
xchg
cs
insl
sub
js
test
cwtl
and
clc
and
pop
js
sub
dec
pop
push
lds
dec
dec
xorb
add
and
or
jbe
fwait
inc
es
xchg
adc
adc
ffreep
cld
adc
lea
shl
lods
adc
lock
loopne
jne
jg
dec
inc
sti
push
shr
xor
pop
aam
pusha
lret
cmc
cmp
jl
pop
push
call
xor
stos
rcll
mov
je
std
inc
bound
lret
sub
adc
sbb
cmpsb
cmp
xchg
mov
es
and
xchg
inc
cmp
pop
sub
arpl
bound
mov
pushf
mov
or
xchg
push
add
add
das
mov
andb
fistps
loopne
push
pop
lret
lods
call
xchg
xor
pop
sub
out
movsb
movsb
call
pop
sub
inc
or
sbb
test
pop
int
mov
das
dec
inc
ret
cwtl
xchg
fs
add
cs
push
ret
out
push
js
or
jmp
lret
hlt
push
stos
pop
sub
test
leave
ror
cmp
sbb
mov
enter
inc
les
test
leave
aas
outsl
mov
or
sub
cmp
and
inc
hlt
mov
stc
fwait
leave
or
jne
pop
or
mov
rclb
cmpb
adc
dec
fldcw
push
and
or
sbb
lret
mov
enter
xor
popa
stos
cmc
aad
push
test
roll
subb
jge
mov
pop
cmp
scas
aad
icebp
jge
insl
adc
std
xchg
jns
mov
lds
or
push
je
inc
pop
clc
mov
pop
inc
call
adc
adc
push
repnz
test
cwtl
jl
aad
popa
test
enter
xchg
mov
push
dec
xor
lds
jb
pop
jmp
mov
nop
nop
pop
push
movsl
mov
repnz
adc
mov
pop
outsb
jl
sbb
dec
adc
mov
adc
test
scas
outsl
mov
cli
inc
jge
push
and
cld
test
mov
hlt
push
jns
or
xchg
shlb
sub
insl
adc
jmp
jne
sbb
cmp
pop
insb
sub
jae
outsb
xor
ljmp
nop
cld
adc
stos
fxtract
sbb
inc
sti
and
scas
out
rorl
fcoml
rorb
cmp
movl
idiv
adc
dec
mov
in
cmp
lods
push
and
cmpsb
xchg
or
shl
iret
cli
sbb
pop
scas
testl
xor
jns
fadd
or
mov
adc
push
jne
mov
mov
adc
and
daa
dec
add
mov
loopne
cmpsb
aaa
repz
pop
movsl
out
push
pop
in
int3
rorb
push
lcall
cmpb
pop
xchg
sub
stos
nop
in
enter
mov
fiadds
lds
stos
pop
ret
outsl
ret
sub
in
enter
adc
je
out
sarb
push
and
icebp
bound
and
adc
imul
std
arpl
jle
jne
or
push
mov
add
orb
jp
jae
adc
ret
arpl
loope
shlb
and
dec
push
cli
inc
push
push
inc
lahf
pop
push
cmp
push
scas
or
sti
jbe
lahf
push
sbb
jle
icebp
or
mov
mov
dec
clc
push
and
adc
and
outsl
push
mov
sub
mov
push
mov
lods
adc
add
xchg
cmp
cmp
test
and
pop
xchg
dec
lret
pop
sbb
pop
pop
sub
push
jge
inc
adc
cs
scas
inc
std
call
ds
in
sub
xchg
inc
inc
sub
or
leave
mov
test
dec
int3
push
dec
sbb
bound
ja
cmp
shrb
xchg
out
dec
dec
imul
mov
cmp
mov
popa
lea
lret
or
mov
push
mov
xor
aas
add
in
outsb
movsb
mov
xchg
pop
lds
test
and
mov
sbb
sbb
add
cli
mov
dec
xchg
aam
flds
and
fisubl
dec
call
or
xchg
faddl
mov
sub
mov
jns
xchg
call
testb
dec
mov
imul
push
sbb
dec
xor
test
cmp
cli
insl
pushf
mov
les
int
mov
repnz
cmp
push
ret
xor
dec
cmp
ret
daa
inc
pop
xchg
xchg
adc
and
insb
inc
add
sub
xchg
adc
lea
pop
stc
sbb
adc
jae
test
je
push
stos
in
pushf
in
mov
pushl
pop
adc
mov
inc
int
out
xor
mov
sub
adc
rcrb
cmpb
dec
xor
dec
xchg
push
push
xor
ss
mov
outsb
mov
popf
push
jg
cli
popa
sbb
outsb
adc
mov
and
xchg
les
xor
out
push
imull
aam
pop
loop
aad
cmp
es
mov
scas
cmp
mov
adc
bswap
pop
sbb
inc
in
jnp
jns
cmp
xchg
in
int
mov
mov
pop
mov
xor
popl
adc
mov
adc
dec
sbb
mov
in
lods
pop
ja
stos
add
test
mov
pusha
sbb
js
inc
hlt
adc
into
mov
or
hlt
cwtl
je
jns
fs
bound
mov
push
adcl
cs
adc
rolb
add
mov
sub
enter
jge
xor
call
movsl
fsubl
dec
sbb
cmc
addb
jb
stc
sbb
or
mov
lahf
or
mov
enter
outsb
bound
popa
cmpsl
xchg
outsb
or
jae
stc
lcall
adc
loop
fcoms
or
leave
je
or
icebp
sbb
adc
rorl
pop
loopne
mov
or
wrmsr
popf
sbb
or
jge
test
mov
decl
enter
jge
sub
xchg
enter
test
lea
push
push
inc
rolb
adc
cmp
mov
in
adc
call
mov
cmp
mov
pop
mov
and
sbb
jno
pop
imul
rcrb
or
pushl
aam
sarl
mov
loop
ror
mov
mov
xchg
subl
cmp
jo
adc
jno
mov
push
dec
mov
pushf
dec
add
or
cli
inc
aas
jle
mov
test
std
xchg
ds
stc
add
adc
mov
jne
fidivl
sub
mov
cmp
dec
or
dec
pop
add
adc
jne
jne
int3
jl
mov
dec
pop
jmp
mov
jg
lea
out
decb
ficoml
mov
inc
mov
pop
lcall
dec
call
pop
xlat
clc
and
cmp
je
dec
cld
mov
aaa
adcl
mov
imul
sarl
and
push
push
push
inc
pop
dec
lahf
jb
mov
clc
push
adc
test
inc
rclb
push
sbb
sub
mov
jns
ss
pop
out
sub
orl
inc
dec
xor
push
aam
in
in
add
shl
lea
or
sub
scas
or
bound
jae
testb
jle
dec
or
orb
pop
sarl
lcall
pop
jb
pop
clc
jae
lock
std
jg
dec
jno
das
and
leave
loopne
sbb
in
adc
cli
dec
test
clc
cli
pop
sti
and
pop
adc
js
add
ja
mov
pop
or
add
ja
jae
or
test
jg
inc
nop
mov
mov
inc
dec
push
fldt
js
std
adc
adc
sti
sub
cmp
sub
jl
pusha
sbb
inc
subb
cld
sub
xor
jne
dec
adc
fdivrl
out
sbb
cmpsl
cld
iret
cli
xor
sub
adc
jp
sarl
fistps
or
cmp
push
shll
xor
push
adc
sub
adc
cli
imul
and
movsl
ficoml
aaa
sub
jecxz
push
inc
pop
je
dec
pop
in
jns
std
test
or
lret
mov
push
outsb
cs
pop
cli
bound
adc
pushf
mov
lahf
jns
sahf
int3
imul
ret
push
and
and
inc
or
pushf
jb
cmp
or
or
stc
fs
shlb
test
rclb
test
in
icebp
shrb
insb
das
mov
mov
arpl
stc
or
in
push
mov
outsb
and
out
mov
push
jne
mov
mov
push
jb
push
xchg
shll
imul
pop
bnd
sahf
xchg
adc
andb
jmp
popf
shll
hlt
lods
push
jbe
sbb
cmp
jbe
pop
add
mov
pop
adc
sub
movsb
sub
add
jns
xor
push
mov
lret
and
stc
pop
js
xlat
lods
mov
or
lock
and
push
rcrb
lock
dec
adc
orl
sub
xchg
push
enter
mov
jle
iret
inc
inc
pop
dec
mov
les
xor
mov
cli
enter
movsb
inc
aaa
cs
mov
pop
enter
add
lret
push
test
test
ret
or
idivb
ret
sub
mov
and
sbb
mov
push
cld
test
sbb
into
call
out
je
dec
scas
enter
push
lcall
sbb
push
xchg
sub
imul
in
daa
je
pop
imul
js
jecxz
pop
lds
push
xchg
aad
adc
dec
data16
mov
out
nop
lcall
aam
leave
push
je
stos
ds
xor
fwait
sbb
mov
push
inc
call
pop
pop
jmp
fcmovb
pop
jae
pusha
adc
loopne
scas
testl
pop
jl
inc
stos
lea
idiv
and
dec
dec
flds
cmpsl
adc
je
femms
cmp
aam
addb
cli
pop
ja
pop
jecxz
or
add
js
ret
cmp
adc
adc
push
inc
cmp
jne
push
inc
decl
int3
mov
push
adc
mov
fs
out
adc
mov
lcall
loopne
push
pop
xchg
pop
rcrb
lods
pop
ficomps
enter
adc
mov
sbb
call
mov
or
les
loopne
test
test
lret
lock
int
cmp
add
movsb
cmp
test
addr16
popl
add
dec
xor
mov
addr16
dec
pop
fidivl
insl
or
ss
divb
iret
subl
adcb
js
dec
mov
cli
std
push
test
push
dec
pop
fldt
inc
mov
pusha
popa
out
pop
hlt
out
push
sbb
movsl
push
mov
push
stos
mov
inc
dec
aaa
mov
jo
les
bound
sbb
leave
aad
clc
shll
call
mov
pusha
or
mov
push
hlt
ret
mov
mov
adc
mull
dec
jne
push
push
add
or
in
adc
add
cmp
daa
aam
rcl
pop
xor
mov
dec
dec
sti
fimull
clc
arpl
mov
lea
and
or
inc
call
testb
in
cmp
addr16
pop
fsubl
out
add
enter
aaa
sub
jg
adc
filds
dec
clc
lock
and
cmpsb
push
pop
inc
sub
into
pop
out
cmc
mov
enter
inc
loop
cmp
inc
pop
add
inc
rcll
hlt
scas
adc
sbb
pusha
inc
jo
xor
mov
mov
sbb
iret
dec
mov
cmpl
inc
imul
mov
mov
lcall
and
pop
insb
pop
popf
jge
lods
inc
icebp
fistpl
jae
or
insb
ja
ds
xchg
fsub
arpl
mov
cmpl
cmp
aad
jns
xchg
jp
xor
les
dec
lock
ret
popf
ret
sbb
ret
adc
popa
gs
arpl
cmp
and
call
jb
test
mov
fs
leave
test
popf
call
je
sbb
pop
aam
sub
pop
in
xor
inc
fbstp
js
xchg
clc
sbb
sbb
jge
pop
or
ror
das
pop
inc
aas
mov
pop
xor
loop
pop
adc
sub
push
aam
shl
scas
clc
and
pop
stc
adc
or
sbb
xchg
in
stc
mov
mov
inc
nop
inc
fwait
stos
das
mov
mov
mov
mov
cmp
cs
adc
aam
ret
cmovge
cs
loop
leave
repnz
mov
pop
pop
dec
leave
push
dec
and
test
fcomip
inc
xchg
mov
mov
mov
add
and
in
xor
in
mov
inc
xchg
pop
and
mov
shrl
jge
cmc
mov
or
jg
jge
in
popf
dec
mov
xor
mov
mov
dec
mov
pop
jmp
test
icebp
rcll
push
dec
fs
pusha
jnp
jg
clc
add
xor
pop
dec
or
cmp
xor
sbb
push
pop
hlt
mov
icebp
out
cltd
les
ja
push
or
push
cltd
pop
shrb
pop
mov
mov
cmp
clc
cmp
xchg
stc
jb
xchg
push
cmp
nop
std
and
ds
adc
mov
adc
pop
enter
stc
gs
shlb
xchg
daa
stos
mov
es
cmp
repnz
dec
pop
inc
sbbl
xor
adc
imul
out
jns
sub
cmpsl
lret
push
pusha
sbb
and
insw
push
ljmp
sub
adc
shlb
mov
lret
leave
insb
and
test
scas
jle
out
xor
dec
test
call
adc
and
adc
cmp
imul
xor
ja
xor
push
and
adc
cmp
in
cmp
cld
add
and
int3
xchg
sbb
movsb
loop
mov
loopne
adc
sub
dec
sub
mov
push
mov
pop
in
hlt
in
clc
call
and
lea
das
bnd
repnz
mov
jle
inc
adc
leave
sub
and
test
cwtl
xor
dec
pop
cmpb
aad
mov
rcll
cmp
cld
popf
adc
pop
xor
mov
adc
sub
mov
mov
dec
sbb
in
or
insl
mov
inc
add
xor
out
mov
in
sbb
fstps
out
lock
adc
push
pop
mov
or
in
sti
in
fs
mov
add
xchg
clc
add
or
adc
xchg
xor
ret
cmp
lahf
adc
adc
xor
adc
mov
adc
xchg
inc
push
popf
pop
test
in
jl
sbb
push
call
adc
loopne
incl
sti
inc
mov
lock
movsl
cmpsb
in
pusha
dec
lahf
pop
enter
push
xor
imul
mov
dec
jmp
pop
imul
inc
js
add
push
sub
jp
jp
inc
sub
and
or
je
mov
pop
xchg
dec
pop
inc
sbb
add
lret
mov
push
in
mov
in
lods
addr16
sub
cmp
pop
lret
lea
pop
jo
lods
or
push
sub
dec
insb
fsubr
rep
enter
mov
adc
inc
mov
inc
push
jbe
add
mov
mul
lods
movsl
jo
test
mov
daa
jns
mov
push
cmp
jnp
adc
mov
mov
sbb
out
fmull
ja
jns
jo
test
jno
pop
push
or
mov
clc
call
mov
add
push
adc
push
push
adcb
ret
and
popf
mov
mov
push
push
or
mov
movsl
push
pop
loopne
shrb
jne
inc
scas
jle
scas
jnp
xor
dec
pop
movsl
and
clc
and
stos
lea
push
jno
scas
cmp
clc
mov
cmp
gs
pop
mov
push
leave
cmp
jmp
es
sub
hlt
pop
call
jne
rcrl
shll
add
js
rorl
pusha
test
xor
pop
inc
pop
mov
mov
jg
mov
pop
cli
jne
inc
sub
das
je
fmul
xorb
mov
sbb
pop
mov
call
and
pop
inc
std
pop
clc
gs
sub
inc
dec
das
jp
mov
mov
pop
sahf
push
dec
and
xchg
in
lahf
and
xchg
loop
fwait
inc
ljmp
and
inc
mov
and
cld
pop
mov
imul
pop
jns
bound
nop
call
jae
rolb
out
rorb
mov
pop
mov
mov
adc
enter
mov
mov
or
or
jmp
xor
mov
rorb
add
or
addb
fnsave
fidivrl
sbb
cwtl
mov
xchg
mov
stc
stc
jle
push
jmp
mov
clc
or
jne
xchg
scas
adc
stc
pusha
or
dec
mov
sub
aas
int3
add
xor
pop
mov
in
lods
inc
imul
cmp
lods
hlt
mov
pop
mov
jmp
adc
pop
pop
add
mov
and
lods
ja
lock
hlt
push
sahf
lods
cmp
call
rcr
or
mov
push
mov
jge
xchg
xlat
cltd
inc
pop
xchg
sti
and
mov
dec
dec
nop
testb
sub
outsl
xor
stos
xor
addl
shlb
mov
mov
sbb
mov
cmpb
je
arpl
push
mov
mov
pop
fcoms
add
orb
cwtl
movsb
adc
add
icebp
cmpsl
cmp
sbb
cmp
jne
pop
pop
sub
mov
push
sub
dec
bound
and
mov
or
aad
adc
push
mov
lds
daa
mov
sub
filds
or
jmp
popa
dec
fs
movsb
jle
sub
mov
iret
jo
jmp
rcll
scas
std
mov
pop
push
or
leave
mov
jnp
gs
jmp
jecxz
sub
xor
call
icebp
aaa
call
jne
pop
and
inc
call
push
lahf
movsb
inc
das
stos
cmp
adc
xchg
dec
xchg
sbb
sbb
mov
mov
cmp
mov
dec
pop
sub
in
and
add
inc
bound
mov
inc
in
mov
mov
in
inc
loopne
loop
pop
pop
repz
push
cmp
or
iret
dec
mov
fmuls
jg
in
aam
mov
cs
loop
daa
hlt
mov
or
adc
sbbl
add
adc
es
inc
js
in
sahf
adc
cmpsb
pop
adc
lahf
push
cmp
mov
test
sub
out
lea
dec
lea
and
pop
xor
mov
pop
fdivrl
push
out
test
and
xchg
xor
pushf
sti
testl
out
cmpsl
jmp
inc
jns
adc
mov
mov
xchg
xlat
xor
addl
xor
mov
sub
mov
je
lock
jp
mov
push
stc
adc
sbb
stc
xor
scas
je
lods
inc
ja
int3
push
xchg
jo
fldl
out
or
xchg
sub
jge
sbb
adc
daa
and
mov
push
push
adc
mov
xchg
and
inc
mov
insl
dec
adc
mov
xchg
out
xchg
mov
inc
pop
push
and
shll
clc
cmpb
or
lock
push
sbb
mov
add
fstl
inc
xchg
repz
stc
into
mov
inc
pop
push
rcrb
fs
sbb
adc
lea
and
jmp
mov
dec
jnp
test
stos
or
push
and
push
sub
cltd
ret
cmp
je
add
mov
push
xchg
aas
daa
pop
sub
mov
cli
nop
fs
mov
inc
push
enter
xor
mov
int3
or
lret
aaa
push
int
fildl
stos
xor
sahf
popa
adc
icebp
out
daa
adc
hlt
lods
in
cmpsl
icebp
ds
jmp
clc
push
subb
cmp
mov
fadds
faddp
lds
cmc
or
dec
addr16
mov
out
or
icebp
xor
repnz
adc
dec
and
xchg
push
xchg
or
test
sub
ja
inc
adc
fucomi
cmp
dec
cmp
ss
mov
movsb
push
or
mov
adc
mov
sbb
lds
or
sub
je
out
out
dec
mov
inc
xor
adc
call
sbb
lods
cmpsb
and
fs
into
insb
inc
mov
test
or
ficoms
adc
cli
push
and
cmp
les
in
repz
scas
iret
inc
repz
rolb
jmp
fisubrl
mov
ljmp
xchg
mov
xchg
and
ja
cmpsb
movsl
jo
sbbb
or
or
enter
test
incl
dec
fwait
pop
cmp
sub
rcll
decl
lods
out
movsl
add
into
dec
fs
call
xor
aad
adc
imul
push
ss
adc
and
add
push
jl
add
mov
lahf
fmull
and
scas
jecxz
pop
adc
movsl
js
in
jp
inc
pop
outsb
mov
mov
and
sahf
cltd
sub
cmc
dec
lds
aaa
nop
movsb
dec
mov
dec
out
lea
sub
jae
lcall
push
testb
dec
mov
push
jbe
cmp
push
adc
jle
addr16
add
and
in
jmp
test
cmp
sub
or
pushl
mov
lret
inc
lea
sbb
or
sub
jge
xchg
daa
cld
je
cmp
sbb
test
push
push
js
cmp
xor
or
add
mov
inc
orb
push
enter
add
test
jne
pop
imulb
jae
or
fdivrs
xchg
pop
or
je
fcmovbe
sti
add
inc
add
jne
notl
mov
add
adc
and
jmp
js
cmp
jne
mulb
jno
orb
mov
xchg
sub
push
xchg
jbe
cld
and
dec
xchg
out
adc
inc
shll
and
adc
daa
sub
mov
sub
jg
inc
gs
out
or
cli
pop
inc
sub
popa
fdivrs
or
dec
sti
mov
sbb
popf
popa
cmpb
pop
fs
mov
sbb
cs
adc
sbb
es
add
add
fisubl
stos
adc
sbb
imull
push
jb
icebp
lea
cmc
push
sbb
lret
push
and
push
inc
and
jnp
rcrl
sub
add
sbb
inc
adc
xor
pop
or
std
dec
adc
ljmp
inc
sub
xchg
scas
sub
adc
mov
xchg
lea
jb
cs
dec
lods
mov
lret
adc
or
int3
xor
inc
push
mov
loope
out
add
mov
xchg
filds
shrb
js
mov
pop
decl
ljmp
sbb
in
std
aas
pop
cli
addr16
push
dec
fwait
ror
adc
imul
and
dec
dec
mov
or
cmp
aas
stc
pop
orl
shr
push
sub
adc
fsubr
jne
loope
push
rcl
add
jmp
test
stos
mov
sub
inc
push
add
out
mov
pop
aas
jle
xchg
xor
pop
mov
in
int3
push
cli
stos
xchg
sahf
and
jmp
cmp
mov
jmp
sbb
call
sub
cs
cltd
sar
pushf
dec
mov
pushf
xor
pop
jge
fs
aam
push
mov
dec
rep
inc
inc
jmp
fstp
and
scas
iret
aam
movsb
lock
movb
and
add
push
je
stos
inc
dec
aaa
sub
stos
mov
inc
jle
add
adc
cltd
pop
dec
add
jle
leave
sbb
nop
jbe
sbb
xchg
test
repnz
or
dec
sub
inc
or
mov
loope
mov
cmp
mov
jle
dec
sarb
leave
loope
in
or
or
in
pop
sub
ret
adcb
insb
inc
mov
fldl
xchg
mov
dec
sti
sub
mov
add
fcom
call
or
je
xorb
dec
and
inc
jg
cmp
jl
test
jmp
push
pop
lock
mov
sahf
push
or
push
inc
arpl
jge
or
jle
fcomip
jecxz
adc
push
repnz
ds
hlt
rolb
data16
shl
lea
dec
or
ja
or
cmp
sbb
adc
jge
pop
jo
xchg
nop
int
mov
jp
mov
adc
icebp
movsb
sub
rorb
lret
push
cwtl
xchg
adc
pop
mov
dec
mov
push
mov
addb
andb
ret
mov
nop
or
inc
dec
push
dec
or
daa
nop
inc
sarb
push
mov
dec
dec
sti
or
gs
add
add
movsl
xlat
sbb
pop
sub
sub
mov
scas
rep
ds
cmp
push
adc
cmc
jne
add
mov
sti
sub
or
and
inc
jmp
jge
sub
outsb
inc
pop
adc
daa
and
shlb
pop
mov
mov
int
lea
mov
rclb
in
adc
js
iret
dec
jbe
push
cmp
or
aam
inc
or
dec
and
jbe
jns
xor
aas
lea
hlt
lods
mov
nop
push
imul
or
cmpl
mov
and
jne
pop
pop
hlt
inc
arpl
movsb
cmp
adc
lret
sbb
test
xorl
adc
mov
sub
or
mov
jmp
clc
das
adc
jbe
lret
cltd
lock
push
ja
and
pop
insb
pop
lret
mov
dec
pop
aas
fsub
mov
bound
and
cmp
or
les
inc
mov
stos
mov
into
push
shlb
enter
xchg
and
insb
cmovs
push
push
or
into
mov
fcompl
cmp
jbe
and
or
in
call
jb
sbb
inc
inc
sbb
cmp
mov
or
jmp
mov
jb
lret
out
push
lock
mov
cmpsl
jmp
aaa
cltd
sub
adc
cltd
stos
mov
addr16
mov
sub
jmp
outsb
mov
dec
js
in
push
push
imul
push
sub
inc
outsb
cmp
clc
sbb
xchg
and
aad
aam
dec
inc
sbb
sarl
adc
and
mov
iret
cmc
out
sub
std
icebp
dec
insl
and
or
add
sub
pop
pop
cmp
into
lcall
insb
mov
aas
je
pop
push
inc
jle
lods
cmp
scas
mov
xor
push
mov
xchg
shl
aas
mov
stos
dec
xchg
add
mov
sarl
adc
jge
dec
mov
sahf
mov
enter
mov
pop
cmp
xchg
loope
add
pusha
mov
subl
in
inc
xchg
inc
jl
out
les
aaa
push
xchg
call
sahf
les
cmp
mov
cs
ja
sub
cmpw
inc
jbe
xor
enter
mov
inc
jge
mov
hlt
rcrl
xchg
xor
xchg
xor
mov
sbb
xlat
sbbl
and
dec
sbb
pop
inc
stos
or
push
xchg
cltd
das
add
jbe
jl
call
jno
jl
test
push
cmp
movsb
loop
push
fsubs
in
pop
jnp
addl
mov
jae
sub
stos
testb
lcall
lds
jno
jb
jae
or
in
mov
adc
mov
push
and
jmp
sahf
or
or
cmp
sbb
adc
call
push
sbb
sbb
ret
jnp
sbb
cmp
inc
ret
cmp
inc
add
lock
adc
stc
lret
and
dec
adc
mov
push
add
clc
cmc
cli
xchg
dec
pusha
dec
push
cli
and
aam
pop
out
xlat
dec
mov
add
push
insb
mov
lock
add
cmp
aas
xlat
and
idivl
pop
data16
dec
adc
jbe
sub
cmp
push
stos
pop
or
sti
jl
ja
add
loope
loopne
hlt
out
adc
dec
mov
loopne
cmp
xor
loop
loopne
jo
loopne
inc
mov
inc
xchg
loope
jno
je
dec
jmp
sub
pop
inc
push
push
mov
jne
or
bound
and
and
scas
iret
aam
icebp
stos
ljmp
mov
and
dec
add
cmp
aad
sahf
or
xchg
or
out
lock
jl,pt
dec
push
int3
pop
ret
dec
iret
mov
repz
dec
rol
jl
xchg
testb
fistl
cmp
jg
xor
mov
addb
das
cmp
aaa
sub
lret
inc
dec
loope
das
cltd
or
push
inc
test
dec
push
call
adc
or
dec
movsb
cmp
aam
imul
or
xchg
push
inc
bound
lahf
mov
test
sbb
mov
test
mov
xor
adc
dec
loope
push
jle
adc
jmp
or
pop
mov
movsb
loopne
aad
jecxz
adc
jne
mov
push
xor
ss
je
test
sbb
and
and
adc
std
ljmp
inc
pop
jmp
or
jne
ss
faddl
xchg
xchg
dec
imul
mov
sbb
test
call
push
add
sbb
jecxz
and
pop
aas
daa
or
add
cltd
cli
into
aad
je
or
push
inc
imul
rcr
add
enter
push
test
push
bound
xor
adc
mov
and
cmp
fisubl
addr16
or
inc
xor
push
iret
jecxz
dec
sbb
fisubrs
mov
sub
pusha
and
adc
loopne
sub
in
dec
clc
inc
lret
sbb
in
xor
and
mov
sti
inc
mov
xchg
call
sub
or
call
jbe
push
cs
ret
or
call
adc
add
lcall
xor
sbb
loope
add
lock
test
xchg
clc
jno
into
inc
mov
and
mov
pushf
das
jle
out
hlt
lock
inc
test
xchg
cld
subb
sub
test
add
in
ljmp
adc
ds
add
xchg
push
push
test
xchg
or
sti
adc
stos
bound
movsb
rcrl
xor
sub
mov
mov
ss
xorl
mov
xchg
leave
push
dec
cwtl
mov
icebp
xchg
ficoms
into
in
inc
adc
inc
std
rorb
push
and
xor
and
les
test
cmp
mov
daa
je
mov
xlat
mov
inc
sub
lds
or
sti
sub
mov
outsb
and
mov
inc
mov
mov
lret
lahf
clc
test
xchg
sub
dec
jg
dec
mov
jecxz
test
and
daa
jo
bound
and
dec
imul
in
les
daa
xchg
mov
sahf
jp
leave
push
hlt
ja
sub
aaa
adc
test
adc
push
push
pop
stc
repz
dec
inc
xor
push
adc
pushl
mov
mov
jmp
sbb
int3
add
ja
jl
and
out
dec
sub
popf
stos
cs
and
sbb
and
push
movsb
pushf
imul
pop
sbb
dec
das
xor
push
addr16
lods
shrl
push
jle
lret
push
nop
sub
sbb
or
lret
or
mov
fsin
and
xor
pop
push
push
and
cmp
enter
mov
lods
fistl
pop
or
xchg
inc
sbb
or
and
addr16
cli
in
jg
dec
mov
jg
sub
data16
lds
sub
xchg
stos
lcall
cmpsl
test
das
fwait
leave
dec
mov
or
inc
ret
sbb
shll
adc
xlat
enter
leave
test
out
dec
lret
faddl
inc
mov
int
dec
dec
aas
popa
faddp
nop
xchg
je
aam
ss
mov
pop
push
or
sub
adc
movsl
mov
push
inc
adc
stc
mov
daa
pop
pop
inc
in
sub
sbb
cli
sbb
sbb
insb
in
sub
cmp
jbe
cmp
inc
mov
or
call
add
jo
push
leave
test
mov
rclb
push
dec
je
sub
mov
ds
pop
cmpsb
cwtl
jnp
inc
sbb
adc
je
or
dec
adc
or
inc
js
loope
sub
lret
sub
sub
cwtl
and
inc
cmpsl
add
mov
add
adc
dec
hlt
sbb
inc
push
pop
pop
inc
mov
sets
inc
sub
or
lds
cmp
mov
mov
call
xchg
clc
adc
jl
aad
lods
out
pop
xor
ljmp
sub
lods
decl
add
mov
cmp
das
xchg
int3
das
pop
mov
jl
cmp
push
mov
popf
inc
cmp
cmpsb
cmp
call
test
shlb
mov
inc
lods
push
add
inc
ds
sub
andl
push
popf
in
idivl
or
jle
push
call
inc
push
loop
addr16
fsts
es
cltd
flds
adc
xor
ror
sub
fistl
inc
hlt
jnp
scas
dec
add
mov
mov
sub
cs
push
jle
call
mov
xchg
cltd
cmpsb
inc
cs
dec
call
cmp
cmp
push
repz
ficoms
nop
idiv
enter
and
sbb
jl
andb
or
leave
aaa
dec
inc
shrb
xor
inc
cld
mov
icebp
push
or
lahf
lret
and
daa
loop
sbb
test
enter
dec
mov
scas
stc
or
inc
add
fwait
dec
in
xchg
daa
je
cmp
xchg
push
sub
arpl
add
daa
daa
push
sbb
pop
inc
cmpsl
je
push
stos
cmpl
call
mov
inc
testb
mov
add
xor
mov
sarl
insb
adc
xchg
pop
mov
pusha
loopne
outsl
ret
add
scas
xor
std
xchg
jge
dec
adc
sub
mov
mov
or
mov
mov
jmp
xchg
les
shlb
pop
int3
movsb
ljmp
sub
add
ret
or
mov
nop
scas
sub
movsb
sbb
sti
ljmp
xlat
xchg
lret
mov
mov
sbbl
pusha
push
cmp
jb
std
rclb
dec
lret
or
add
or
add
shr
cld
rep
hlt
rcrl
movsb
pop
or
jne
dec
pop
stos
popf
test
add
dec
jb
popf
xchg
sarb
leave
adc
push
dec
adc
mov
pop
adc
popf
pop
mov
notb
jmp
add
ljmp
jl
shrb
mov
push
dec
jle
cmpsl
and
pop
and
or
cmp
xor
mov
sub
outsb
lret
mov
mov
jl
inc
movsb
push
dec
fs
lret
sti
pop
push
sub
sub
pop
jae
pop
pop
or
ljmp
shlb
scas
mov
lret
mov
in
or
and
mov
pop
adc
outsl
cwtl
ds
sub
jmp
and
adc
cld
clc
sbb
adc
mov
mov
jg
call
pop
xchg
cmp
cmp
ljmp
mov
pushf
cmpsl
inc
sbb
in
or
add
les
rcpps
adc
mov
push
push
lea
in
aam
test
push
mov
dec
das
call
pop
sbb
push
lock
add
lock
mov
xor
insb
sbb
lret
sarl
sti
aas
sub
stos
call
pop
inc
loopne
dec
sbb
or
cmpl
notb
sub
push
inc
lock
jmp
test
mov
pop
sbb
and
jmp
xchg
cmpsb
jmp
pop
enter
pop
dec
pop
adc
inc
mov
pusha
mov
cbtw
and
stos
stc
push
jmp
testw
pop
or
call
pop
inc
add
mov
sub
add
inc
es
sbb
pop
cmp
enter
xchg
and
sbbl
repnz
and
fcoms
fistpl
xor
xor
sahf
mov
popa
std
adc
sub
jno
dec
pop
jnp
mov
shll
sbb
dec
in
imull
and
push
jbe
adc
adc
fiadds
inc
sub
loopne
or
imul
ds
negb
sbb
cmp
jmp
cmp
sbb
outsb
fadds
xchg
and
ss
push
push
sub
or
xor
jg
test
sbb
push
jo
push
push
sbb
daa
add
shrl
sbb
std
movsl
sub
cmp
test
outsl
inc
stc
push
or
xor
inc
call
rcll
test
add
push
mov
and
sti
cli
or
test
cli
sub
dec
sub
sbb
test
loopne
jo
mov
pop
daa
pop
mov
push
ret
incb
sub
mov
clc
loopne
scas
mov
fbld
xor
pushf
std
pop
dec
and
push
dec
inc
xor
adc
sbb
rolb
sub
imul
pop
mov
jb
je
or
dec
and
ljmp
and
cmpsl
sbb
sub
bound
in
and
sub
into
and
ret
scas
aas
aad
adc
jmp
inc
call
js
inc
je
repnz
fs
jmp
hlt
push
sub
or
jecxz
js
stc
insb
or
mov
jo
lock
cmp
gs
mov
sub
nop
fisttpl
stos
jno
adc
test
mov
test
xor
adc
add
and
sbb
jmp
jmp
rcrb
mov
inc
nop
enter
mull
bound
or
inc
fmuls
cmc
rol
xchg
or
mov
mov
dec
adc
mov
adc
jbe
mov
loop
add
mov
or
test
fcoml
ret
push
fldenv
notl
push
adc
stc
add
call
mov
adc
push
rclb
bound
testb
mov
jne
cmp
fs
sbb
and
mov
and
and
adc
in
fwait
jg
es
push
lds
movsl
xlat
aas
test
iret
or
int3
ret
jne
xor
or
ss
ret
xchg
rclb
cvtps2pi
cmpsl
xor
adc
mov
pushf
or
or
andb
jmp
mov
pop
pop
push
out
mov
cmc
mov
lods
adc
cltd
sub
mov
scas
cli
push
dec
push
or
lds
mov
cwtl
jns
mov
jb
xor
sbb
imulb
dec
cmp
mov
pop
pop
sub
mov
cmpsl
fmull
movsl
push
jle
js
sub
out
dec
int3
cltd
mov
sbb
pop
fildl
mov
mov
and
and
sbb
pop
mov
pop
mov
fmull
test
fs
sub
xor
adc
clc
scas
fidivl
push
in
scas
js
faddl
cmc
jo
lods
mov
xchg
jl
lods
push
mov
bound
jg
sbb
xchg
mov
repnz
xchg
xor
repz
jecxz
push
push
sub
sub
jb
or
int
and
push
sbb
cli
jo
pop
les
mov
or
or
fcomps
lcall
jne,pn
xor
fnstcw
aaa
ljmp
sub
jmp
jo
in
jb
mov
push
mov
or
mull
fadds
sub
fs
jae
lods
inc
aam
adc
cmpsl
adc
sbb
push
out
daa
inc
jmp
imul
xchg
push
lock
push
xor
add
fmuls
je
lcall
sbb
add
bound
mov
cs
adc
mov
inc
enter
ret
cltd
subb
mov
xor
repz
and
enter
and
inc
inc
test
and
xor
ss
stc
sub
dec
sub
cmc
and
dec
sbb
iret
ds
cmpsb
shr
xchg
bsr
dec
push
mov
cmp
outsb
mov
xor
push
push
push
ds
enter
and
push
ret
xor
ret
scas
call
ds
mov
and
dec
in
bound
push
call
cmc
out
pop
mov
adc
jnp
les
mov
dec
in
and
jg
sub
jbe
pop
and
inc
inc
cmp
jne
dec
psraw
mov
xchg
imul
sub
clc
inc
dec
fisttpll
xchg
mov
sub
aas
mov
into
push
dec
cmc
clc
cmp
inc
mov
test
lods
cmp
dec
dec
and
out
sub
pop
mov
scas
mov
sub
mov
hlt
lahf
mov
es
lds
stos
pusha
stos
imul
negb
nop
sbb
dec
mov
inc
filds
aas
dec
mov
js
test
add
mov
cmp
adc
and
sub
insb
dec
mov
or
es
mov
adc
in
or
lcall
movsb
dec
inc
enter
or
repnz
mov
jmp
pop
xchg
pop
adc
sbb
adc
inc
lock
and
stc
outsl
xchg
xchg
pop
divb
and
ret
inc
fldt
inc
shlb
icebp
inc
imulb
stc
jg
pop
test
dec
push
inc
nop
loopne
sub
push
jnp
cmpsb
push
and
fcoml
leave
fsubp
mov
jne
adc
adc
ja
or
loope
lret
sub
or
jmp
adcl
pop
inc
xor
or
das
test
push
dec
pop
cmpsl
add
outsb
dec
int3
sub
hlt
push
fnstsw
mov
sahf
dec
jmp
mulps
mov
les
call
dec
mov
in
dec
popa
push
sub
jmp
nop
mov
test
mulb
or
pop
out
pop
loopne
in
mov
imul
stc
jo
aaa
mov
ljmp
jo
push
inc
or
clc
or
and
pop
pop
or
and
pop
push
and
in
and
sbb
jmp
popf
pop
loop
test
and
push
sbb
cmc
push
add
in
pusha
sarb
adc
inc
pusha
adc
jno
cmp
mov
iret
dec
jnp
mov
inc
call
pop
cmpsb
dec
mov
xor
sarb
aam
push
rcr
fdivrl
lock
push
inc
ret
test
jns
mov
mov
rorb
and
sub
popf
adc
jb
and
rclb
dec
xor
cmp
and
lahf
cltd
shrl
scas
dec
adcl
scas
push
jmp
sbb
pop
sub
jo
mov
jmp
jae
cmp
sub
xor
cltd
add
rorb
sbb
hlt
mov
sub
ficoms
pop
mov
dec
lods
xchg
pop
push
pushf
outsl
cltd
mov
or
xchg
sbb
push
sahf
ds
into
pop
ret
sbb
adc
sahf
mov
sti
daa
cmp
jbe
inc
xor
or
adc
jecxz
cmp
jecxz
or
scas
and
push
adc
xchg
or
dec
dec
fstpt
inc
push
pop
jo
push
movsl
inc
loop
cmp
dec
stc
pop
ja
xor
fstpl
inc
or
shll
adc
xchg
cmc
div
pusha
lods
test
mov
pop
and
dec
dec
int3
mov
test
sub
daa
out
pushf
adc
or
pop
call
sub
mov
sub
jns
xchg
sub
subb
pop
icebp
outsb
xchg
or
mov
jo
mov
sub
and
fidivrs
xor
or
inc
int3
sbb
hlt
mov
adc
sbb
xchg
sub
idivl
gs
sub
or
out
xor
ret
xchg
std
out
enter
xor
out
and
in
out
mov
stos
add
jmp
fisttpl
cltd
bound
cmpsl
stos
xchg
fwait
hlt
loopne
dec
fists
cltd
sub
and
daa
loop
xlat
into
xchg
rclb
call
cltd
cmp
je
mov
cs
sahf
pop
ret
lods
adc
lret
aas
jmp
cmp
lea
jge
pop
cmpsb
insb
sarb
test
jecxz
xchg
add
je
rolb
jne
jg
push
aad
gs
les
mov
int3
xor
sub
push
je
or
jmp
pop
push
cld
nop
lea
cld
push
insl
out
sub
jecxz
xlat
sti
cmc
shll
popf
push
call
repz
mov
imul
jnp
repnz
mov
dec
mov
je
inc
hlt
push
pop
jmp
icebp
mov
mov
popf
add
test
test
add
cmpsl
fs
inc
jmp
sub
int3
mov
cli
daa
sbb
cmp
int
inc
inc
mov
mov
xchg
mov
loope
sahf
sub
mov
sub
ds
adc
and
dec
mov
inc
add
aam
mov
sub
add
jge
xchg
sbb
int
gs
sbb
scas
adc
mov
cld
jmp
pop
je
mov
jecxz
jnp
out
pop
inc
icebp
xchg
dec
push
insl
push
ffreep
push
push
es
imul
fcoms
shrl
pop
loop
and
sub
cmp
xchg
dec
push
ret
loope
and
int
xchg
mov
call
les
cmp
and
adc
dec
mov
sub
sub
or
bound
xchg
xchg
cwtl
mov
sbb
int3
into
adc
enter
cmc
xor
adc
or
lahf
push
pushf
xchg
mov
dec
pop
mov
sub
lret
adc
and
in
and
test
bound
and
hlt
mov
imul
cmovp
fs
xor
mov
enter
inc
push
or
and
adc
mov
xchg
sbb
aaa
popa
cmc
std
mov
cwtl
xchg
loop
sbb
pusha
adc
lea
test
mov
cmp
xchg
dec
cs
mov
loop
sahf
scas
xchg
into
cld
stc
test
das
push
pop
add
sub
movsl
cli
and
ds
cmp
loop
xor
adc
icebp
push
jbe
loopne
pop
insl
push
or
push
sbb
and
sahf
sahf
and
das
and
xor
pop
sub
lods
cld
movsb
mov
das
inc
push
cmc
pop
add
jnp
push
sbb
inc
push
or
xor
inc
xchg
shrl
push
lea
flds
push
call
sbb
dec
les
inc
adc
mov
test
das
popa
inc
sbb
mov
shlb
js
add
lret
adc
add
mov
cmp
aam
sbb
aas
inc
inc
pop
call
adc
scas
sub
jo
into
fcmovnbe
sbb
xor
rcrb
jne
mov
dec
sti
pop
test
cmc
or
and
inc
out
orb
xchg
out
inc
fs
mov
sbb
push
ficoms
call
push
and
xchg
mov
and
das
jge
in
cmp
push
or
or
popa
dec
mov
or
mov
pushf
pop
daa
jg
jl
push
push
hlt
mov
pop
cwtl
ret
pop
push
mov
adc
pusha
fucomp
divb
lods
cmovae
xor
std
dec
cwtl
sbb
lods
cltd
mov
int3
int
jle
dec
cli
hlt
fstps
out
aad
scas
jo
mov
jno
dec
pop
mov
fadds
cltd
push
and
mov
jmp
lds
popf
outsb
das
and
cmp
inc
das
scas
and
imul
mov
xor
mov
sahf
or
xchg
cwtl
cltd
and
ffreep
ljmp
xor
dec
or
mov
lods
inc
fcmovb
dec
pop
imul
push
stos
pop
mov
mov
repnz
inc
lahf
or
jl
adc
scas
mov
sub
add
sbb
xor
lret
add
lret
or
insl
and
inc
adc
test
adc
dec
xor
popa
cwtd
adc
pop
xor
sbb
adc
sbb
mov
adc
es
and
or
cmp
push
je
fildl
xchg
xor
rcrb
addb
push
movsb
scas
pushf
xchg
sub
shlb
in
and
test
sbb
div
push
stc
aam
sbb
out
mov
rclb
and
inc
mov
inc
cwtl
jb
xor
or
cmp
cltd
xor
adc
insl
cmp
jmp
xchg
mov
addr16
imull
xchg
pop
and
adc
mov
in
pop
icebp
xchg
mov
xchg
leave
jno
xor
mov
ds
cs
cs
or
fwait
adc
andb
add
sbb
sbb
or
loopne
lret
add
clc
sub
mov
sar
mov
inc
int3
inc
lcall
leave
je
popf
popa
or
ds
cmp
push
or
test
pop
mov
mov
les
lock
sbb
and
or
arpl
sub
jnp
insb
inc
sbb
movl
or
cld
jle
pop
addl
mov
roll
and
adc
push
adc
pop
cs
inc
dec
cmp
ret
imul
popa
sub
push
icebp
inc
pop
cmp
dec
and
in
cmp
mov
adc
or
xchg
sbb
pop
ss
sub
push
mov
into
push
cs
jmp
and
xorl
cltd
test
lret
and
loop
or
xchg
imul
leave
jle
enter
pushf
or
lahf
sahf
cmp
cs
insb
mov
pop
ss
push
les
pop
and
jle
adc
xchg
aaa
cmp
les
adc
test
push
xor
adc
jmp
mulb
iret
xchg
clc
mov
and
xchg
les
dec
out
ret
pop
sti
and
cmp
pop
add
and
test
pop
xor
sbb
sahf
imulb
sti
or
out
mov
dec
dec
rorb
bound
sub
ret
adc
xlat
clc
daa
cwtl
fldenv
xchg
or
mov
push
sub
xchg
inc
loopne
repz
lods
loopne
jne
jge
jg
lcall
xchg
add
dec
sbb
push
mov
je
shll
add
insb
decl
pop
jns
adc
dec
xor
dec
mov
fstl
and
cmpsl
aam
mov
das
arpl
mov
push
jne
xor
xchg
add
dec
lock
mov
add
arpl
and
int
cmp
fisttpll
xchg
clc
adc
jae
xchg
lea
fs
xor
sbb
or
mov
lea
inc
mov
fisttpl
inc
hlt
dec
lods
add
fadds
ret
add
sub
add
fsubrs
mov
repz
pushf
les
sarb
and
and
test
cmovne
push
orb
jmp
adc
daa
mov
pop
xor
fdivl
push
jb
cmp
inc
jge
and
imul
les
and
cmp
cmovs
mov
xchg
test
add
js
outsb
jb
xchg
dec
pop
xchg
jge
and
jo
push
or
test
adc
mov
sub
shrb
adc
pop
int3
adc
fsubrp
adc
aas
xor
inc
adc
mov
sbb
jmp
das
inc
in
push
loop
adc
bt
fdivl
sbb
lret
push
addr16
xor
lahf
jnp
out
daa
lock
xchg
je
and
add
inc
inc
fs
stos
fnstenv
push
mov
aaa
dec
or
xor
repnz
or
push
in
das
sub
add
or
cmp
pop
pop
or
or
push
shr
adc
test
inc
aad
aaa
sbb
and
pop
rorl
xor
or
mov
pop
sub
jnp
aas
std
nop
jnp
push
push
jmp
mov
lods
xchg
gs
or
repnz
mov
pop
sub
les
cmp
xchg
ds
dec
rorl
xchg
add
cmpsb
and
push
in
cld
lahf
xchg
sbb
aas
adc
insb
xchg
in
push
dec
mov
push
inc
sbb
and
add
jae
sbb
clc
inc
mov
add
jne
test
lock
pop
das
cmp
clc
mov
clc
pop
sub
mov
xchg
and
or
sub
jg
xor
dec
sub
jb
jae
push
bnd
push
testb
xchg
popf
cli
hlt
sbb
mov
xchg
or
push
enter
dec
inc
nop
xor
and
jb
xor
cli
push
inc
adc
mov
sbb
std
or
adc
std
pop
xor
sbb
inc
ror
push
dec
ss
leave
imul
test
mov
dec
lods
sub
mov
sbb
inc
rclb
dec
mov
and
fdivrl
sbb
jnp
push
mov
pop
jns
sub
lods
jnp
mov
aam
cmpb
loop
xor
enter
ds
pop
rolb
daa
jl
ja
outsb
jg
arpl
mov
adc
and
adc
push
jmp
mov
pop
sti
movsl
xor
fs
pop
mov
rorl
movsl
push
sahf
fldenv
ja
ljmp
push
push
daa
jmp
mov
pop
and
push
nop
fsubs
mov
mov
mov
call
push
filds
lret
add
je
lahf
add
hlt
add
pop
faddl
cli
aaa
repnz
xchg
ljmp
rorb
jo
cwtl
lea
xor
leave
mov
xchg
inc
sbb
cmp
mov
add
mov
mov
fstpl
lock
and
pop
push
shrw
push
and
lret
cmpsb
sbb
sbb
push
inc
dec
in
xor
and
mov
pop
cld
xchg
arpl
pusha
dec
in
adc
lcall
jp
jne
jns
xor
sub
testl
jno
push
scas
int
add
nop
ds
scas
lret
enter
dec
movsb
mov
sbb
push
fucom
jne
sub
sub
pop
pop
test
test
mov
adc
in
mov
cmp
pop
jmp
adc
scas
fldt
mov
sti
mov
sub
pop
mov
or
and
adc
sbb
xchg
popa
inc
inc
adc
push
mov
pop
sti
out
shr
data16
inc
mov
in
mov
mov
xor
and
jmp
xor
bound
adc
enter
inc
std
stos
cmp
cmp
test
inc
dec
sub
pop
mov
cmp
int3
add
inc
fwait
add
add
add
push
hlt
jl
push
pop
sbb
cltd
test
jp
xorb
mov
cmp
and
xchg
mov
or
je
daa
adc
clc
fwait
or
or
call
iret
les
xchg
aam
bound
add
jmp
jb
sti
dec
push
jp
stos
xchg
mov
mov
dec
pop
imul
cmpb
jno
andb
sub
sub
je
or
and
sub
outsl
or
push
cld
enter
add
aaa
mov
pushf
es
lds
sub
clc
and
rcrl
adc
mov
xor
mov
xor
movsb
inc
lahf
sbb
xchg
cmpsl
out
cmpsl
xor
adc
push
popa
and
push
push
xor
push
sbb
nop
jb
sbb
in
cmp
jge
fwait
cli
dec
xchg
enter
or
aad
dec
mov
rolb
jmp
leave
iret
adc
pop
pop
movsb
les
mov
jnp
loopne
push
clc
movsb
xchg
adc
jmp
mov
enter
xchg
pushf
mov
pop
cs
fs
sahf
in
xor
movsb
out
pop
mov
je
push
pop
cmp
incb
in
outsl
xor
test
lods
loope
push
jbe
mov
loop
add
add
test
fs
fdiv
loop
or
ret
pop
cmp
cmp
inc
inc
dec
in
sbb
adc
inc
fisubl
sbb
cmp
or
repnz
inc
sti
pop
add
mov
out
xchg
leave
cmp
sub
sbb
push
jne
xchg
inc
test
test
sahf
imull
clc
mov
add
inc
or
call
push
sub
arpl
hlt
adc
call
sbb
shll
xlat
out
addr16
outsl
mov
push
sbb
aas
jbe
pop
jbe
sub
xchg
es
adc
jnp
arpl
xchg
gs
repz
cmp
jo
or
enter
pop
and
sahf
sub
xchg
mov
rol
out
dec
adc
add
xchg
int3
mov
cmp
sbb
or
sbb
and
adc
inc
and
adc
inc
jle
mov
mov
xor
xabort
cmp
ret
and
sbb
push
push
sub
pop
xor
cmp
dec
push
or
xchg
icebp
or
pushf
mov
pop
dec
jmp
pop
inc
dec
pop
lea
pop
push
jp
mov
or
add
movsb
add
sarl
std
daa
sysexit
mov
loop
sub
xor
dec
and
and
fs
sub
mov
call
hlt
add
add
push
jmp
and
and
mov
push
dec
leave
add
sub
les
loop
les
in
push
xchg
popa
inc
lods
add
test
aas
notl
es
xor
mov
inc
imulb
mov
pop
xchg
gs
add
call
dec
clc
adc
inc
sub
cmp
push
jge
ret
xor
xchg
mov
xchg
call
xchg
pop
push
mov
clc
icebp
nop
loop
dec
adc
pop
out
xchg
adc
lret
imull
fcoms
andb
sub
adc
push
sbb
and
ds
xor
cld
nop
xor
cmp
xchg
sbb
or
imul
pop
xchg
popa
or
mov
call
mov
adc
dec
sbb
pop
jnp
or
idiv
mov
jno
movsl
fists
dec
xchg
pop
jle
mov
push
lds
lods
push
and
mov
fistps
movsb
push
cmc
mov
mov
dec
popf
mov
nop
in
sub
inc
cmp
and
add
sub
cmpsb
push
or
lds
mov
adc
je
jecxz
div
insb
push
repz
icebp
jo
into
dec
and
push
call
cmp
std
outsb
and
sub
jo
aam
and
fdiv
pop
cmp
or
mov
hlt
mov
ret
and
out
in
ss
aas
jo
std
sbb
lea
frstpm(287
sub
sbb
fisttps
xchg
lock
mov
aad
movsb
xchg
push
inc
inc
push
dec
inc
test
cmp
push
jl
cmpsl
nop
push
shl
and
cld
push
movq
mov
mov
scas
or
mov
daa
pop
fsts
std
cmp
test
dec
cwtl
inc
pop
sti
mov
xor
mov
pop
mov
xchg
dec
jnp
loop
repnz
lea
dec
lock
mov
outsl
fdiv
pop
inc
daa
and
jmp
or
mov
mov
enter
cmp
mov
icebp
jo
or
test
aam
cmp
inc
mov
and
xchg
cmp
into
dec
adc
dec
jne
adc
ja
mov
sub
je
lahf
fs
inc
repz
jne
bound
mov
cmp
dec
push
and
mov
pop
stos
and
sti
in
ds
mov
mov
or
inc
mov
xchg
testb
mov
dec
and
divb
sbb
lcall
test
and
repz
cmp
xor
jo
test
mov
and
adc
adc
jl
and
and
push
enter
pop
repnz
enter
mov
in
adc
push
icebp
inc
sub
xchg
stos
js
xor
jl
xchg
sbb
inc
shlb
add
mov
nop
add
pop
jg
out
cwtl
mov
xorl
or
push
push
inc
push
and
sbbb
std
fsubs
xchg
test
and
or
jb
jmp
or
sbb
inc
cld
sbb
pop
rolb
fistps
mov
hlt
icebp
es
test
cli
ss
and
rolb
jp
inc
and
jge
lods
in
outsb
popa
repz
in
cmp
sub
adc
dec
mov
in
enter
out
push
aad
push
dec
aaa
test
and
mov
xchg
and
xor
and
xchg
push
mov
sbb
mov
inc
jge
psrld
inc
gs
mov
fsub
sbb
int
and
fldcw
hlt
push
inc
mov
call
jnp
in
cmpsl
adc
outsb
or
int3
and
dec
push
sub
mov
pop
in
xchg
enter
cmp
nop
and
test
jmp
sub
in
mov
pop
sqrtps
pop
jp
cwtl
and
popf
jnp
xchg
jle
movsl
pop
sahf
inc
lock
push
es
xchg
fdivrl
jae
test
cmp
dec
adcl
pop
loopne
pop
pop
int3
and
pop
xlat
ficoml
adc
inc
ljmp
out
mov
dec
jb
mov
and
pop
add
and
push
hlt
push
lret
push
inc
mov
cmpsb
es
jns
pop
test
pop
and
inc
in
fiadds
js
pop
push
xchg
xchg
pushf
ret
cmc
std
cmp
clc
adc
cmpsl
adc
test
dec
push
loopne
xor
lcall
sub
rep
fsubr
scas
hlt
mov
std
xchg
aam
gs
std
pop
jne
int3
mov
hlt
std
daa
xor
dec
adc
sub
sub
push
das
jl
xor
mov
xchg
cmp
or
loop
loope
push
adc
mov
int
lods
daa
pushl
dec
push
push
mov
ficompl
call
or
push
mov
add
push
xlat
dec
and
mov
ret
and
mov
inc
jbe
or
pop
adc
sbb
pop
jp
and
mov
push
inc
test
in
push
cmp
pop
mov
je
std
mov
in
sarb
add
data16
mov
pop
fwait
sub
mov
cmp
adc
jnp
and
jle
fwait
cmc
cwtl
pop
dec
clc
test
mov
mov
adc
push
arpl
test
pop
mov
xor
lcall
sbb
insl
push
cmp
movsl
cmpsl
lcall
daa
leave
mov
popf
out
shll
pop
scas
xor
icebp
aam
nop
das
das
leave
loopne
sbb
sbb
fwait
rol
push
and
jecxz
xorl
add
cmp
jne
jnp
clc
pop
clc
iret
xchg
or
inc
mov
enter
rolb
ret
cwtl
or
and
insb
or
int3
bound
and
mov
dec
cmpb
mov
sub
pop
or
inc
in
sub
and
and
inc
cmpl
xchg
adc
and
std
adcl
js
lods
and
jg
jns
sub
jmp
out
and
nop
sbb
sub
and
outsb
sub
inc
out
xor
rcrl
mov
mov
adc
add
je
mov
pop
jmp
cmp
push
jo
xchg
js
and
je
xlat
popl
ss
test
pop
divl
out
je
push
mov
jg
test
adc
add
xor
aad
movhps
test
xchg
sub
push
sub
pop
je
call
enter
jecxz
ljmp
jl
push
push
xchg
stos
add
jmp
sbb
sub
sbb
sbb
and
or
push
or
xor
into
xchg
add
mov
jmp
pop
iret
fstps
ljmp
mov
cmovno
jo
orb
inc
adc
loope
sub
xchg
sub
out
pop
inc
push
sub
ja
cld
mov
cld
mov
in
fstps
or
pop
push
jge
outsb
sbb
mov
push
push
or
push
xchg
jbe
or
mov
fdivrs
sbb
push
mov
imul
fidivrl
mov
int
popf
mov
jnp
xor
out
std
cmp
inc
daa
aam
lds
movsl
ljmp
call
lahf
decb
jo
sub
mov
xchg
sbb
jo
popa
fcompl
pop
sub
cmpb
jge
add
loopne
inc
and
fists
push
enter
add
in
sub
or
addl
pushl
scas
hlt
mov
cmpsl
inc
sarl
cmp
and
push
mov
add
lds
mov
or
loop
in
call
pop
out
cmp
jle
xchg
sar
add
fs
mov
test
and
xchg
sbb
sbb
adc
sbb
insb
mov
bound
lahf
call
loope
or
int3
jg
das
adc
jns
mov
jmp
scas
pop
test
add
and
xchg
pop
jae
les
pop
hlt
xchg
mov
or
push
imul
and
pop
add
cmp
adc
xchg
fiaddl
adc
lahf
arpl
bound
jb
push
adc
adc
incb
xchg
and
dec
pop
in
sub
inc
adc
push
push
sub
cmp
out
repz
test
dec
cmp
or
aas
mov
inc
push
add
mov
push
scas
jmp
fcomps
xchg
inc
pop
and
dec
jne
ja
insb
jo
int3
or
fcoml
pop
mov
and
frstor
adc
subl
jle
decb
icebp
data16
pop
call
adc
jnp
mov
setne
idivb
lcall
adc
out
in
aad
mov
adc
cli
mov
call
push
aas
mov
std
cmp
jno
and
lods
imul
ficoml
loopne
std
mov
sbb
aam
fisttpl
in
lods
dec
jle
mov
jmp
push
or
xor
clc
mov
cmp
pop
mov
adc
lds
and
jg
lea
nop
fadds
xchg
jno
outsb
jg
add
xor
push
sbb
xchg
ss
imul
push
mov
lods
mov
push
rcr
aam
mov
mov
lock
jge
arpl
ss
xorb
push
loop
faddl
mov
sahf
sbb
mov
push
adc
cmp
cmp
orw
mov
lret
mov
push
sbb
mov
inc
sbb
clc
inc
or
xchg
call
jl
sbb
inc
ss
in
push
mov
test
jne
testl
fmull
pop
sub
lahf
rclb
loop
aas
or
fs
leave
adc
cwtl
sti
es
pop
mov
and
pop
inc
and
or
sbbb
add
inc
sbb
jno
inc
orb
mov
call
push
dec
or
cld
or
adc
add
sbb
dec
lods
mov
das
mov
adc
inc
cltd
xchg
sbb
mov
push
and
sbb
out
mov
cmp
mov
xchg
ja
ss
sub
movsb
sub
or
movsl
mov
push
pop
add
nop
lods
fdivrl
in
fimuls
movsb
ficompl
ljmp
pop
push
iret
xchg
xchg
cli
push
test
and
inc
adc
sbb
xchg
xchg
xchg
push
sbb
arpl
xchg
call
stos
call
aaa
add
adc
or
mov
rorb
sub
sub
inc
mov
jnp,pn
sbb
ja
and
mov
mov
dec
aam
aas
mov
daa
call
jl
out
and
jge
outsb
rep
pop
cli
cmp
inc
and
rcll
fsubl
movsb
or
sub
xorl
movsb
pusha
stos
and
push
and
sbb
addb
and
adc
mov
cs
outsl
jo
cmp
push
xchg
test
or
lock
std
and
sbb
pop
mov
sti
out
dec
loopne
mov
nop
sub
dec
mov
and
push
xor
jne
and
inc
xchg
jns
mov
jno
add
cmp
stos
xor
xchg
push
stos
sbb
sbb
and
mov
mov
movsl
test
adc
stc
lret
push
mov
mov
and
xor
stc
shll
pop
fisubrl
mov
mov
jg
or
sub
andb
xor
orb
call
sbb
pop
dec
mov
mov
push
inc
dec
shl
ds
ljmp
mov
call
je
pop
out
test
and
stos
fstl
inc
cwtl
dec
pushf
aam
sahf
imul
sbb
push
mov
adc
adc
and
push
rdtsc
xchg
or
adc
add
lds
pop
pop
cli
mov
fs
mov
lods
sub
pop
lcall
xchg
mov
push
stc
cmp
push
dec
inc
dec
or
xlat
bound
popa
sbb
sub
and
cltd
jp
push
and
negb
mov
jg
pop
ja
dec
movb
insb
xchg
jbe
dec
addr16
test
ja
adc
subb
inc
dec
and
jmp
add
xchg
icebp
je
and
jae
jbe
dec
mov
xchg
mov
adcb
dec
jne
ja
adc
in
addb
in
les
int3
lods
add
cmpl
pusha
or
add
cmp
xchg
pop
sub
dec
daa
push
adc
jp
stos
xor
push
or
sub
in
sub
cmp
jbe
inc
or
sub
adc
fdivr
scas
mov
jge
and
jnp
clc
jnp
pop
pop
sbb
jb
pusha
test
inc
adc
or
pop
inc
and
jmp
imul
addl
mov
dec
and
or
cmp
cmp
push
stc
aas
cli
aam
sbb
adc
pop
das
je
push
call
mov
sub
xchg
hlt
sub
popa
lret
aam
or
fcomps
sub
pop
or
adc
and
movl
sbb
mov
sub
push
or
mov
sbb
loope
add
xor
insl
sub
mov
xlat
or
add
movsb
cmpsl
dec
xlat
sub
lret
mov
dec
std
mov
mov
outsb
shll
fst
sub
ret
mov
insb
adc
mov
mov
xor
xchg
xorl
cmp
arpl
pop
or
imul
cmp
fsts
ja
mov
cmp
inc
test
outsl
cmp
xor
cmp
cwtl
lcall
adc
inc
cmp
xorb
xor
shr
lret
push
pop
imul
inc
inc
cli
sbb
gs
jmp
rorb
sbb
mov
cmp
push
cmpsb
insl
or
sbb
push
push
cmp
sbb
sub
mov
lcall
inc
jle
xchg
pop
jbe
icebp
pop
cmp
fdivrs
cmp
mov
inc
bound
popf
jl
push
xor
fisttpl
int
fdivs
pushf
dec
mov
imul
fstpl
cmp
ret
fistpl
jmp
stos
orb
mov
fcoml
not
lods
push
call
imul
xchg
jno
fisttpll
out
rcrl
aad
scas
cmp
pop
sti
or
leave
repnz
xor
and
or
add
mov
leave
adc
subl
add
jmp
popf
xchg
fidivl
arpl
lods
xchg
xchg
push
adc
add
pop
push
dec
adc
enter
imul
popa
sti
add
loopne
inc
inc
xchg
sub
pop
cmp
hlt
mov
push
dec
pmulhuw
adc
sbb
aad
adc
sbbl
add
ja
mov
cmpb
test
inc
call
add
repz
add
push
adc
test
test
add
out
sub
dec
call
or
cmp
call
insb
leave
fwait
push
mov
jae
dec
call
in
pop
adc
mov
dec
fsubrl
xchg
data16
dec
arpl
cmp
jo
or
cmp
std
aad
lret
cmp
jmp
fbld
adc
mov
bnd
rorb
mov
hlt
jle
mov
cmp
stos
mov
lea
or
dec
imul
jno
xchg
xchg
test
sub
push
in
mov
fdivrs
sbb
mov
mov
adc
lods
fcompl
add
pop
adc
push
pushf
and
push
adc
adc
enter
lea
sub
int
test
sbb
fs
stos
or
iret
dec
jnp
decl
xchg
test
add
mov
cwtl
imul
cld
push
mov
sub
shl
inc
in
ds
inc
in
push
loopne
mov
or
adc
dec
test
test
shrb
inc
cli
push
jo
fcmovbe
pop
jecxz
scas
loop
pop
cld
cwtl
mov
add
cmp
inc
fistpll
or
jge
xchg
divb
sub
xor
cmp
inc
add
mov
pop
dec
test
mov
sbb
sbb
and
mov
cmp
jg
add
cmp
idivl
fildl
xchg
jo
mov
jb
xchg
scas
enter
push
and
cmc
insb
imul
arpl
mov
mov
inc
data16
popa
test
inc
sub
aam
out
xchg
adc
cmpsl
pop
jle
iret
imul
mov
or
inc
sarb
xor
sub
adc
icebp
sahf
mov
ja
adc
das
lret
adc
jmp
inc
cmp
call
or
push
and
insl
test
adc
ffreep
jne
negl
mov
scas
fs
push
test
jne
scas
mov
imul
adc
outsb
adc
sbb
shrl
push
fmull
push
leave
xor
push
push
mov
sar
dec
sub
test
stc
fsts
in
ja
cmc
inc
iret
std
push
pop
lea
outsb
jne
push
imul
xor
daa
pop
iret
pushf
andl
out
popf
pusha
jo
adc
and
dec
add
shrb
int3
xchg
and
iret
push
not
mov
and
adcb
call
jmp
mov
cmpb
pop
mov
call
jns
dec
jns
adc
inc
mov
cmpsl
stc
xor
outsl
out
xchg
aaa
repnz
lods
or
adc
loop
xorb
outsl
pop
push
pop
jbe
and
shlb
dec
mov
notl
inc
dec
mov
dec
xor
lret
dec
push
pop
jmp
mov
mov
xor
stc
andl
add
sbb
test
dec
pop
and
push
shll
inc
in
loopne
call
inc
mov
out
mov
and
xor
inc
iret
test
cmp
cmp
cmp
imul
pop
mov
out
std
cmovb
divps
scas
xor
sbb
add
notb
push
jns
sub
dec
and
xchg
jno
aad
and
push
enter
xchg
and
in
sub
inc
and
hlt
in
sub
sbb
jb
ljmp
push
dec
gs
movsl
or
nop
adc
shrb
push
popa
insb
dec
data16
gs
push
lock
imul
xchg
fs
add
jns
xchg
ror
mov
mov
fdivrp
ds
sub
ret
and
lcall
lods
xor
adc
adc
lods
mov
dec
clc
jne
mov
lret
mov
push
pop
adc
mov
imul
mov
icebp
cld
mov
push
call
adc
add
repz
xchg
sbb
sub
cmp
inc
cmp
mov
xor
xchg
test
roll
pop
xchg
mov
inc
aaa
mov
sub
dec
and
mov
add
mov
pop
mov
xchg
adc
pop
push
fwait
or
and
cwtl
cmp
cmpl
lea
mull
add
lods
xchg
or
mov
push
stc
add
jecxz
or
lret
mov
lea
shrl
inc
pop
or
add
push
push
gs
iret
or
or
cmp
jl
mov
pop
rcll
cmp
cmc
jmp
repnz
mov
adc
dec
xchg
mov
add
push
hlt
push
cwtl
adc
insb
add
scas
sub
fcoms
push
mov
pushf
adc
mov
lea
outsb
xor
or
cmp
rcrl
sub
push
call
push
add
sbb
add
jne
addb
inc
xor
test
call
dec
lods
ja
gs
in
jbe
push
ds
stos
pop
cmc
scas
cmp
cld
ljmp
adc
adc
cmp
ja
and
and
xchg
jne
dec
and
add
xchg
popa
push
push
mov
aas
xchg
jp
push
cld
xchg
bound
sbb
or
xchg
and
mov
ljmp
insl
inc
add
pop
lea
outsl
aaa
jmp
stc
sub
or
jnp
sub
icebp
sub
push
jmp
add
xchg
add
movsb
xor
in
cli
mov
out
xor
push
add
outsb
adc
and
mov
incl
jmp
fadds
bnd
icebp
adc
jns
enter
jb
cmp
jle
inc
jg
pusha
xchg
popa
enter
jb
cmp
data16
and
imul
insb
cmp
outsb
mov
and
push
enter
jb
cmp
push
mov
sbb
mov
and
pop
enter
jb
cmp
inc
mov
and
inc
enter
jb
cmp
dec
mov
and
dec
fisubs
in
jb
cmp
sbb
mov
and
xor
jb
cmp
sbb
mov
and
cmp
jb
cmp
sbb
mov
and
and
jb
cmp
sbb
mov
and
sub
jb
cmp
sbb
mov
and
adc
ja
in
jb
cmp
sbb
mov
and
xchg
pop
fsubl
xchg
add
lret
jne
inc
pop
test
or
test
enter
xchg
xor
push
jne
movsb
xchg
jb
hlt
lods
imull
shlb
fistpl
mov
int3
xor
jbe
cmp
mov
jp
hlt
and
faddl
out
fstl
add
or
je
jae
jg
mov
add
xor
or
inc
gs
popa
jne
je
or
gs
xlat
push
scas
sbb
dec
popa
jae
lods
mov
or
sbbl
and
or
inc
push
push
inc
call
push
inc
jns
mov
push
data16
nop
fdivs
arpl
adc
cli
lods
aaa
push
outsb
mov
imul
ja
scas
jnp
movsb
sub
outsl
or
jae
mov
push
add
inc
push
dec
cmp
pop
insl
jo
into
inc
clts
push
adc
push
or
popw
pop
inc
jle
lds
mov
jecxz
cld
sub
jmp
movsb
test
popa
xor
adc
pop
je
rol
dec
outsl
repnz
push
test
sbb
jns
stos
or
dec
jmp
and
adc
or
inc
and
inc
or
or
or
movsb
and
pop
mov
adc
fs
add
push
jb
mov
es
adc
adc
push
adc
xor
int
sbb
int3
or
inc
jns
lock
or
inc
dec
cmp
jb
jne
sub
inc
or
cmp
sub
loopne
movsl
adc
or
adc
adc
ret
cwtl
mov
andps
outsl
in
js
pusha
sub
adc
mov
cltd
push
sbb
jl
pextrw
dec
xor
outsb
xchg
jbe
imul
add
mov
cmpsl
inc
dec
xchg
enter
pusha
adc
or
sub
adc
and
fdivrl
in
sbb
xchg
inc
outsl
pop
sub
js
and
out
inc
xor
push
orl
shlb
push
mov
enter
add
mov
outsb
adc
cmpsb
sbb
mov
popf
cmp
sub
repz
test
dec
cmp
lods
and
bound
nop
std
cwtl
mov
jbe
pusha
sbb
cmp
or
push
xor
pop
and
xor
fs
sbb
fwait
push
lds
sbb
jl
xor
lcall
rclb
or
mov
push
movsb
inc
xor
test
loope
test
popa
inc
inc
pushf
mov
leave
mov
cmp
xor
pusha
movsl
push
movsb
and
cmp
add
mov
and
cmpb
and
adc
sbb
and
pop
push
pop
mov
fcmovu
mov
add
jnp
and
xchg
les
js
inc
mov
les
cmp
lds
adc
jb
mov
arpl
cmpsl
xor
lods
or
cmpsb
add
push
inc
dec
popa
or
or
scas
rcll
mov
mov
add
and
fdivrl
pop
or
movsb
xlat
daa
sub
movsl
incl
mov
or
pop
push
lret
adc
addb
out
jno
mov
sub
cs
test
sub
mov
arpl
inc
shrb
sub
push
mov
ficomps
jae
pop
out
mov
adc
add
cmp
mov
add
and
mov
cli
add
faddl
xchg
and
or
pop
jg
je
jnp
jmp
xchg
or
adc
mov
inc
stos
jns
xchg
fbld
add
aam
sbb
xchg
dec
pusha
mov
fnsave
or
sbbl
dec
xor
mov
dec
or
pushf
data16
or
sbb
and
mov
sbb
sub
sbb
sbb
shll
mov
or
adc
mov
lods
pop
scas
imul
push
inc
rcrb
pop
pop
adc
rclb
test
push
pusha
mov
inc
mov
call
fstl
les
outsl
push
out
in
test
adc
cltd
repz
and
dec
jo
inc
sub
mov
sbb
pushf
adc
repnz
push
sbb
sub
push
lock
lret
cld
push
push
sub
cld
inc
pop
enter
or
adc
icebp
je
bound
pop
adc
xchg
push
sbb
in
cmp
inc
or
and
nop
mov
adc
pop
icebp
dec
insl
and
pusha
xchg
pushf
and
in
test
adc
jne
cmpsb
or
dec
add
imul
clc
mov
sub
inc
pop
dec
xor
insb
xor
mov
jl
pop
int3
nop
int3
in
adc
les
pop
int
shl
adc
into
add
rclb
and
adc
add
adc
jo
adc
popa
rolb
or
enter
xlat
push
or
rclb
sub
lret
mov
jmp
xchg
je
inc
pop
and
mov
imul
xchg
mov
adc
xchg
inc
pop
and
into
lahf
and
pop
call
mov
or
sbb
in
or
or
cli
sbb
jo
dec
push
pop
or
in
add
or
or
mov
fmuls
cmp
int3
inc
mov
lods
or
aam
adc
mov
xor
sbb
js
add
or
outsl
outsb
fwait
test
mov
inc
loopne
xchg
inc
pop
call
clc
sbb
test
pop
add
cbtw
adc
or
pop
js
xchg
adc
push
sbb
adcb
xor
mov
mov
push
pop
or
shl
adc
and
cmp
shl
nop
push
lods
inc
jg
in
out
push
pop
adc
jo
dec
popa
outsb
xchg
dec
repz
mov
pop
ret
shlw
xor
inc
adc
idiv
mov
fidivl
dec
and
nop
mov
pop
aad
push
mov
out
mov
mov
sub
or
in
lret
mov
sti
mov
popa
or
out
outsl
cmp
dec
push
std
mov
jge
std
xlat
int
sub
fmull
inc
add
pop
clc
jmp
ljmp
and
sbb
jne
push
dec
dec
push
roll
ficoml
call
xchg
sub
daa
sub
push
sub
sbb
daa
jne
jmp
test
cmc
adc
xchg
fs
in
inc
xchg
lods
sahf
pop
popf
push
in
jmp
in
adc
mov
pop
ret
jmp
adc
dec
pop
mov
xor
and
out
xchg
cld
dec
imul
je
dec
mov
sub
lock
dec
leave
xlat
cld
std
xchg
leave
idivl
jo
sub
and
and
lods
jne
fstps
add
decb
jecxz
jl
xchg
lahf
jp
or
dec
dec
sbb
in
leave
les
loope
mov
scas
lcall
test
cmp
mov
mov
pop
or
aaa
cmp
leave
je
push
popa
std
add
mov
xlat
pop
push
insl
push
js
or
lods
xchg
and
std
push
sahf
mov
decl
pop
in
sub
inc
pop
lret
je
adc
lods
jle
test
shrb
adc
lea
jle
pushf
or
pop
test
filds
scas
call
scas
mov
jle
add
inc
cs
in
out
nop
jge
sbb
loopne
outsl
out
push
xchg
les
in
repz
inc
and
aas
fisttpll
mov
inc
imul
xlat
data16
sbb
xor
stos
loopne
jg
xlat
mov
jp
fmull
sub
nop
lea
pop
cld
mov
test
pop
cli
enter
test
add
mov
dec
ljmp
loopne
in
loopne
and
inc
jb
mov
adc
enter
dec
adc
dec
or
gs
sbb
and
popa
jo
movsl
inc
xchg
push
push
mov
mov
push
gs
cmpsl
adc
test
sahf
xor
push
imul
sbb
sub
out
cmp
dec
adc
insl
gs
pop
idivl
test
imul
or
call
shlb
cmpsl
and
inc
jno
popa
mov
popf
adc
and
or
dec
clc
jno
jns
jo
dec
add
pop
sub
inc
lds
insl
sub
dec
mov
adc
loope
je
push
inc
outsl
cli
test
sbb
push
adc
jo
lret
cmp
push
pop
imul
fwait
inc
ficompl
sbbb
scas
cwtl
add
outsb
inc
inc
push
je
sub
push
xlat
and
sbb
inc
movsl
push
lahf
js
inc
enter
call
jle
enter
mov
adc
test
and
iret
lds
test
jns
lods
xchg
sub
adc
sub
outsl
repnz
push
mov
fisubrl
loope
jp
sbb
adc
mov
adc
in
xor
outsw
inc
jo
lods
shlb
jno
outsb
jne
insl
sbb
and
les
adc
loop
mov
dec
cwtl
push
and
jnp
movsl
push
and
xor
loope
mov
inc
enter
or
sub
cmp
movsb
and
sarb
or
hlt
add
call
push
xor
aaa
push
add
and
repz
les
icebp
mov
sti
shlb
and
jno
imul
sbb
dec
push
dec
pop
inc
dec
mov
ret
lahf
inc
roll
dec
push
pop
sbb
cld
lahf
add
inc
dec
dec
dec
xor
orb
sahf
sub
adc
dec
dec
inc
into
dec
popf
jmp
dec
inc
inc
ret
and
inc
xchg
xor
xor
cmp
adc
and
dec
dec
inc
and
fadds
scas
dec
lahf
inc
mov
jl
adc
push
dec
xchg
sub
pop
decb
rorb
dec
inc
dec
sbb
sbb
pusha
out
stc
or
and
or
mov
sub
cld
inc
and
push
or
push
dec
push
cltd
pop
pop
pop
dec
push
dec
mov
adc
mov
push
mov
sti
mov
add
movsl
pop
popf
loopne
test
cmp
call
jg
cs
in
adc
xchg
inc
orb
sarl
sbb
test
or
mov
adc
xor
mov
push
pop
mov
lea
je
jnp
sub
call
sbb
mov
repnz
sbb
dec
std
enter
pop
movb
jmp
or
orl
hlt
js
test
std
or
shlb
mov
inc
cmc
mov
adc
sbb
andb
out
adc
test
mov
sahf
aam
inc
mov
mov
cld
pop
xor
repz
nop
jbe
das
or
push
push
popf
stc
ljmp
call
adc
loope
xor
bound
xchg
push
and
in
sbbb
xchg
test
lea
push
negb
jl
inc
sarb
mov
ja
add
and
movsl
push
push
jo
xchg
lahf
xchg
pusha
xor
pop
std
clc
lods
repnz
mov
inc
adc
inc
adc
mov
add
xchg
push
int
or
sti
lds
mov
sahf
add
adc
rcl
lods
push
cmp
sbb
or
popf
push
movsl
inc
fs
push
mov
inc
mov
push
mov
cwtl
adc
loop
in
bound
fdiv
scas
ljmp
add
sub
sbb
shrb
les
xor
inc
sbb
add
sbb
mov
adc
clc
stc
test
dec
add
movsb
or
adc
enter
pop
sbb
xlat
clc
mov
ret
or
dec
scas
mov
movsb
sub
in
mov
cmp
shll
stos
push
scas
jmp
adc
mov
sub
sbb
or
mov
loope
ret
and
fdivs
xchg
repnz
les
or
jmp
sbb
or
or
rorb
call
mov
and
adc
adc
mov
mov
cmp
push
xchg
or
test
push
pop
cmpsl
cmp
jp
and
aam
mov
dec
sub
fidivl
jmp
xor
lods
mov
movsb
jb
nop
sub
and
and
dec
push
test
mov
inc
or
push
push
adc
mov
adc
sub
pop
or
leave
mov
cwtl
mov
sub
jnp
add
mov
and
and
insl
test
std
bound
dec
dec
fdivl
les
dec
lcall
mov
neg
mov
cwtl
insl
ss
and
neg
xchg
push
sub
xchg
loopne
mov
jne
insb
mov
pop
dec
scas
mov
inc
cld
mov
in
mov
mov
xor
mov
dec
sbb
movsl
xchg
jle
inc
xchg
or
xchg
mov
dec
and
mov
and
xchg
sub
jp
add
repz
mov
sbb
or
movsl
mov
jnp
xchg
sbb
jno
mov
test
and
lcall
cltd
add
or
orl
in
in
dec
testl
fwait
mov
test
mov
mov
pop
jno
in
loope
scas
fcomip
adc
testb
sahf
daa
inc
push
arpl
dec
jbe
inc
mulb
xor
lock
cmp
xchg
mov
push
cmp
jne
jo
and
pushf
ja
jne
adc
movzbl
xchg
ljmp
call
shlb
and
data16
in
roll
inc
or
movsb
lods
mov
cwtl
gs
fsubl
cwtl
test
lods
negb
sbb
std
es
add
outsb
xor
or
jns
xor
int3
loope
mov
fcoml
sub
shlb
in
je
aaa
fsubrs
cmp
test
inc
popa
sahf
and
fistl
shl
popa
xorb
fs
cmp
les
mov
popf
insb
mov
or
fadd
popf
mov
out
dec
mov
sbb
cltd
mov
and
call
dec
sahf
mov
in
unpcklps
jns
and
push
outsl
test
push
mov
imul
in
lock
xchg
adcb
add
push
sbb
in
pop
lock
jne
loop
jmp
sub
lahf
push
xchg
lock
jnp
fisubrs
sub
sub
in
push
insb
sbb
popf
pop
jl
adc
xchg
loope
movsb
cmpsl
mov
xchg
add
adc
jmp
push
cmp
mov
ja
sub
pop
stc
inc
cmp
fstpt
popf
repnz
add
pop
adc
lods
insb
inc
lahf
or
cwtl
dec
ljmp
jp
shlb
cmp
or
nop
sbb
or
jg
faddl
sub
dec
cmp
mov
negl
stos
lret
adc
sbb
ret
dec
shlb
fcomip
aas
and
or
jle
movl
jge
hlt
adc
inc
and
adc
xchg
cld
les
in
push
sti
fldenv
sub
lea
mov
xlat
popf
cwtl
iret
dec
xlat
pusha
mov
scas
mov
add
popa
popf
mov
cmp
lods
mov
sbb
push
xlat
inc
mov
inc
arpl
ret
or
adc
into
int3
mov
cmp
clc
inc
pushf
and
sub
test
or
sub
pop
adc
xor
push
and
push
cmp
mov
invd
mov
lods
push
inc
int
push
ss
cs
xchg
push
in
mov
sbb
inc
inc
dec
mov
or
mov
pop
add
mov
aas
call
xor
divb
aaa
push
xor
mov
sbb
dec
popf
adc
fstpl
sahf
adc
add
lock
out
rcrl
or
ret
aad
adc
dec
adc
add
dec
cvttps2pi
enter
mov
sbb
push
dec
in
stos
cwtl
aaa
adc
scas
and
mov
test
outsb
inc
push
push
inc
jae
shrl
movsl
cmp
jl
fiaddl
xor
adc
repnz
fwait
adc
aaa
test
xchg
gs
jo
test
fs
outsb
int3
cmp
ror
add
int3
add
cmpsb
cmp
jmp
push
pop
cmp
push
add
rcpps
sub
enter
mov
aam
adcb
std
iret
imul
jb
pop
cli
and
es
adc
and
negl
pop
mov
lock
testb
xorb
scas
hlt
shlb
sbb
mov
mov
pop
imul
loopne
xchg
cmpsb
and
movsb
xchg
insb
lea
test
add
cmp
sbb
clc
push
mov
js
bound
xchg
test
and
dec
sahf
push
fbld
into
sub
add
rolb
xlat
mov
adc
sub
sub
hlt
dec
cli
rorb
push
or
inc
add
dec
shll
or
arpl
dec
in
sub
repnz
push
mov
sbb
mov
les
cld
nop
mov
gs
mov
leave
cld
and
push
roll
cmp
test
jno
push
push
test
dec
add
and
mov
fmull
cmp
and
xchg
jnp
dec
dec
lods
les
mov
movsl
pushf
loop
nop
or
imul
orb
int3
stc
insl
and
push
int3
mov
movsl
negl
adc
or
clc
sub
adc
sbb
imul
fsubs
ret
lock
pushf
mov
push
je
adc
add
andb
imul
jae
testb
faddl
add
and
mov
cmp
je
mov
or
fwait
mov
add
mov
ret
sbb
ret
movsb
and
jb
inc
aas
xor
xchg
mov
movsb
popf
jbe
fs
sbb
shl
arpl
or
xchg
js
js
jg
mov
call
pop
cmp
pop
lock
or
shll
sbb
mov
cmp
je
dec
testb
adc
jle
add
call
and
aas
and
sbb
imull
dec
cmpsb
enter
outsb
xor
sbb
mov
mov
movsb
xor
add
push
xchg
jmp
fcmovbe
mov
int
mov
adc
in
mov
sub
jmp
ja
adc
xor
adc
sbb
and
in
cli
lods
sub
dec
test
sbb
and
or
mov
mov
or
roll
or
xchg
lret
fs
idiv
add
je
dec
fwait
std
push
push
les
in
rorb
xchg
sti
mov
jecxz
negl
and
lods
std
adc
jns
xchg
and
mov
sbb
xchg
mov
xor
mov
mov
cwtl
sub
test
dec
adc
std
popf
xlat
sbb
adc
and
mov
imul
sub
pop
jne
dec
and
sahf
test
adc
push
stos
push
call
pop
and
pop
dec
lret
lea
jns
and
adc
imul
scas
inc
lret
adc
cs
jae
push
lea
int
push
mov
ds
lcall
push
popf
cmpsb
and
in
scas
xor
mov
mov
mov
ficomps
lea
je
fnstcw
dec
in
fbld
adc
test
int3
push
push
pop
into
add
and
scas
dec
shlb
inc
sbb
add
fmulp
hlt
adc
bound
sarb
leave
not
cmp
xor
ljmp
pop
mov
xchg
lcall
push
int3
fsts
jp
nop
sub
push
lret
cli
loop
adc
and
mov
push
cmp
and
ss
addl
adc
pop
jle
mov
test
outsb
xchg
push
sbb
repnz
cmp
shll
mov
xchg
loop
mov
cs
mov
cld
icebp
pop
or
adc
add
or
adc
stos
xchg
mov
dec
dec
negl
and
cmp
pop
sti
jo
push
sbb
scas
and
stos
pop
pop
aam
xchg
cmpl
jne
pop
sub
adc
lahf
stos
adcl
dec
pusha
lds
xchg
paddd
adc
sub
ret
lahf
shll
mov
sub
stos
or
popa
sub
mov
and
sub
xor
mov
push
adc
scas
mov
xor
xor
fisttps
fsubl
push
movsb
sahf
je
test
mov
subb
in
fbld
fwait
xchg
xchg
mov
jge
fs
test
push
push
pop
adc
adc
push
adc
jmp
mov
or
mov
addb
or
bound
and
add
sbb
enter
or
pop
pop
mov
push
leave
lds
loopne
movb
xchg
data16
and
je
adc
xor
and
push
mov
cmp
push
sbb
test
xor
punpckhdq
push
push
push
sub
and
ret
xchg
pushf
lock
pop
mov
xchg
out
pusha
push
push
push
mov
cmp
sbb
cmp
inc
add
mov
inc
int3
mov
jmp
inc
inc
cmp
dec
aas
mov
sti
xor
mov
pushf
pushf
mov
adc
push
push
push
xchg
fwait
aaa
pushf
push
rolb
jne
sahf
add
cmpl
lret
or
adc
fcompl
ljmp
leave
pusha
jl
subl
cs
sub
fs
daa
ret
sar
imul
and
mov
enter
mov
adc
bnd
sbb
mov
in
into
sub
jge
or
pop
jmp
mov
pop
aas
or
movl
push
nop
xchg
cld
adc
add
es
jns
dec
out
lds
cmp
push
adc
leave
ret
addb
lds
test
or
cmpl
dec
filds
inc
pop
push
xor
inc
andps
push
loopne
pop
cmp
inc
test
insb
sbb
xor
xchg
inc
jmp
sub
xchg
into
xor
sub
mov
leave
test
cltd
sbb
or
imul
scas
leave
mov
dec
arpl
ja
jmp
cs
test
mov
dec
add
add
add
das
loope
add
lret
call
inc
add
sbb
sbb
mov
roll
bound
adc
or
inc
adc
xchg
out
out
lods
cmp
adc
pop
mov
stos
adc
mov
jmp
enter
push
push
movsb
sbb
aad
cltd
fwait
cmp
sub
add
mov
or
sbb
adc
dec
add
shl
call
cmpl
sub
adc
call
push
push
les
pop
and
lret
jne
dec
push
xchg
add
and
push
scas
fsubs
sbbl
out
sub
or
and
cmp
xchg
inc
push
and
push
xchg
test
inc
push
cli
push
dec
or
mov
mov
push
daa
push
push
jno
scas
out
dec
jp
insb
cs
push
pop
mov
mov
call
sub
dec
ret
cmp
mov
cmc
mov
xor
jmp
cmc
jb
xor
ret
retw
and
cwtl
sub
outsb
adc
fmull
inc
mov
lock
sbb
sub
outsl
or
add
fisubs
sbb
aas
ja
fmull
test
add
mov
or
adc
clc
or
movl
adc
cmp
mov
sub
aam
mov
cld
push
push
cmc
or
inc
mov
rcl
mov
test
mov
push
add
mov
and
nop
test
les
das
sarb
test
pop
in
inc
leave
sub
into
pop
sub
out
out
addr16
sbb
mov
ret
cltd
outsl
xor
bound
inc
jge
adc
out
xchg
lock
test
es
icebp
jl
loop
adc
gs
or
xchg
pop
jne
mov
dec
adc
mov
nop
jge
mov
pop
ret
in
dec
add
stos
call
movsb
and
xchg
mov
sti
inc
xchg
mov
shll
or
jne
sbb
call
cmpsb
cmp
push
mov
inc
scas
jnp
pop
and
sub
mov
lods
push
cld
xchg
sub
xchg
nop
test
hlt
mov
test
fadds
jbe
fiadds
imul
or
xor
in
push
jmp
push
dec
xchg
adc
ret
mov
les
ret
rcll
loopne
mov
mov
add
fisubs
inc
ret
inc
addb
orb
jl
push
cwtl
push
lea
ret
pop
inc
dec
pusha
cmp
das
daa
push
rorl
inc
dec
aam
pop
mov
inc
mov
push
mov
stos
pop
lret
stos
sbb
sbb
or
out
adc
lods
enter
mov
cmp
cli
in
add
adc
or
mov
int3
lahf
std
inc
sbb
push
pop
outsb
mov
dec
sbbb
sbb
enter
jne
call
mov
push
mov
int3
addl
je
cwtl
in
dec
mov
imull
sbb
ljmp
ret
inc
mov
lcall
rol
lahf
xor
repz
push
test
cltd
mov
push
pop
out
push
or
pop
mov
push
mov
stc
cltd
icebp
add
pop
scas
mov
and
out
jno
ja
pop
xchg
adc
mov
mov
test
push
mov
inc
icebp
jp
or
or
aam
or
xor
ljmp
lock
ljmp
incl
leave
mov
jo
adc
jmp
xchg
or
pop
xor
testb
into
lock
lods
out
dec
fwait
rcl
xorb
push
mov
mov
pop
cmp
aas
rorb
cmp
sub
jl
or
or
ror
jmp
sub
mov
mov
cmp
push
movl
xor
or
mov
lock
dec
or
sbb
adc
movl
or
and
sbb
and
mov
cmpsl
imull
lods
test
xor
mov
and
add
jmp
mov
and
rorb
inc
adc
xor
push
or
adc
adc
ficoml
mov
pop
lea
dec
or
enter
push
adc
mov
loop
mov
adc
add
jnp
add
jo
ret
xchg
mov
jecxz
push
in
mov
dec
out
push
dec
pop
ret
pop
cmp
and
sarl
mov
rclb
inc
mov
add
das
xor
orb
movsl
out
push
inc
pop
xor
jl
cltd
inc
mov
mov
xchg
fldt
and
push
or
cli
xchg
aad
dec
cmp
pop
std
lea
call
fcoms
lods
or
dec
je
dec
test
xchg
hlt
push
adc
ja
jl
lods
pop
adc
mov
dec
mov
pop
cmc
mov
arpl
into
in
sub
add
enter
adc
adc
and
inc
hlt
int3
jbe
xchg
and
rolb
sub
inc
inc
cmpsl
xlat
in
xchg
mov
inc
lcall
in
xlat
push
orl
jbe
dec
sub
dec
movsb
rolb
pusha
sub
inc
fs
cld
cwtl
lea
test
push
add
lock
mov
mov
addb
or
mov
add
mov
mov
enter
lods
stos
xlat
mov
lods
scas
scas
sbb
jl
push
jno
subb
pop
fldcw
fcompl
lods
push
sti
inc
mov
in
lock
scas
mov
call
cltd
fsubr
lods
dec
or
xchg
fsub
push
or
pop
in
push
adc
test
int3
inc
nop
aad
and
nop
mov
xchg
inc
daa
aad
jne
xor
pop
and
xorl
jbe
push
into
addl
aas
sub
adcl
icebp
cmc
les
fs
jecxz
or
addb
jg
and
test
sarl
xor
decb
xchg
sub
sbb
adc
jmp
or
or
mov
or
bound
pop
outsb
jbe
mov
pop
out
sub
jge
mov
cmp
das
lea
outsb
in
aad
jns
inc
cli
imul
cmp
in
aam
pop
pop
cmp
xchg
mov
and
mov
push
jmp
jns
gs
fdivrl
clc
or
mov
sub
push
inc
daa
and
hlt
test
mov
xchg
cli
mov
aas
pop
adc
jl
loope
sub
fildl
or
std
jle
hlt
mov
std
and
and
and
outsl
push
or
inc
and
inc
jmp
lds
mov
ret
inc
sbb
or
mov
std
adc
or
lret
xchg
or
iret
test
scas
fstps
icebp
push
mov
pop
out
inc
mov
mul
pop
push
inc
and
mov
adc
push
and
shrb
icebp
inc
js
pop
xor
mov
xchg
dec
subb
popa
push
aas
mov
or
xchg
das
pushf
mov
mov
cmpsb
push
pusha
mulb
hlt
rclb
or
pop
rorb
in
and
popf
mov
daa
inc
repnz
test
rorb
stos
xchg
mov
xlat
mov
push
clc
in
dec
mov
mov
adc
mov
hlt
sub
inc
gs
xlat
mov
in
xchg
lock
or
cli
mov
push
sub
movsb
cwtl
inc
lock
loop
or
shlb
lods
mov
jge
pop
pop
lods
pop
sbb
insl
push
data16
gs
arpl
or
jo
jns
add
jl
and
aas
outsl
push
pop
loopne
sbb
inc
les
push
add
and
inc
sub
add
jne
in
jg
ret
imul
jle
ljmp
dec
dec
mov
and
popl
addl
pop
add
xchg
push
ficoml
xchg
cwtl
outsl
imul
bound
adc
int3
stos
lahf
loopne
mov
add
faddp
pop
ret
pop
outsb
xor
fs
mov
test
jbe
or
inc
push
dec
push
jge
out
mov
jne
adc
jmp
fs
sti
lret
mov
push
aad
out
test
adc
fisubl
mov
jns
ljmp
repz
cmp
inc
or
imul
mov
shrl
push
cwtl
xchg
je
add
notb
inc
icebp
adc
cmp
out
repnz
push
clc
dec
xchg
jle
imul
fcoml
push
inc
insb
add
bound
jb
addr16
cwtl
les
jp
fdivl
inc
jbe
add
adc
imulb
add
and
adc
and
in
xchg
dec
adc
push
jp
adc
std
jns
stos
shl
jl
add
vmovaps
leave
jns
outsb
mov
adc
or
sub
dec
inc
les
testb
stc
push
in
push
out
rorb
and
mov
rep
or
leave
mov
mov
decl
adc
roll
cld
ret
adc
and
js
aam
addr16
mov
out
fimuls
nop
adc
jmp
adc
lret
dec
adc
inc
lods
inc
loope
je
push
ficompl
hlt
imul
push
in
and
push
mov
addr16
and
jne
enter
push
stos
adc
aaa
inc
push
dec
stos
mov
adc
aam
rcll
sbb
cld
addl
xchg
and
pushf
mov
into
aam
test
sub
inc
je
mov
sub
and
orb
fdiv
adc
xchg
and
cmp
mov
push
adc
inc
sbb
sub
mov
test
sub
or
sub
mov
pop
adc
ja
call
fs
int
ljmp
push
idiv
or
mov
dec
jnp
sbb
fcomip
lods
xchg
mov
xchg
and
imul
jge
jg
cmp
jp
mov
call
std
ffreep
and
jp
push
dec
sti
lret
out
and
push
mov
push
jno
xchg
dec
jecxz
xchg
ja
xor
lods
push
jb
fisubrs
pop
lcall
bound
and
shrl
jp
outsb
adc
sub
sbb
mov
jns
inc
call
lea
and
push
sub
mov
push
fldcw
cli
adc
inc
fscale
push
mov
test
call
mov
ljmp
mov
sub
and
adc
mov
or
inc
fs
daa
into
clc
and
movsb
add
xchg
and
and
inc
int3
adc
or
xchg
mov
arpl
dec
mov
xlat
mov
sub
and
ret
or
push
aam
push
inc
sub
add
push
cltd
push
outsl
mov
rol
dec
jne
test
jo
leave
js
sbb
ror
dec
jo
movsl
stos
mov
inc
ret
pop
or
and
loop
leave
adc
mov
out
xchg
in
shlb
mov
jg,pn
adc
call
or
mov
mov
add
les
ljmp
sbb
fidivrs
lcall
pop
cmc
fcomi
inc
push
sub
jno
dec
adc
fdivrp
jno
or
mov
jo
insl
sbb
push
inc
cmp
add
decb
jg
setne
sti
jp
sbb
movsb
enter
mov
and
cmp
mov
dec
mov
cli
or
rcrl
xchg
inc
sbb
and
and
leave
jb
push
mov
and
mov
sbb
mov
outsb
std
adc
xorl
bound
jb
mov
fadds
add
and
in
cmp
sub
stos
cmp
ret
frstor
test
xlat
idivl
arpl
inc
add
outsl
std
or
xor
aas
js
lds
xchg
dec
adc
push
sub
sub
jae
and
dec
add
iret
insl
or
pop
int
add
adc
jns
adc
or
insb
mov
fsubs
xchg
sbb
adc
mov
cmpsl
std
push
adc
dec
ja
mov
or
inc
push
xchg
in
xchg
pop
push
jb
cmp
fld
flds
pop
int3
cmpsb
sub
mov
cmpsl
jge
mov
or
xchg
or
loop
inc
mov
fs
push
mov
test
adc
lods
ret
orb
inc
cmpsl
push
xchg
and
xchg
cmc
daa
rcrb
enterw
sub
lahf
sub
push
and
jmp
push
push
test
sahf
movsl
outsl
imul
push
jl
aas
out
adc
and
push
les
push
inc
test
or
fmuls
mov
lock
les
mov
in
sbb
dec
cmp
push
pop
out
and
and
adc
test
clc
dec
fisttpll
mov
stc
loop
or
push
movsb
mov
sbb
sar
fcomi
inc
lock
and
dec
inc
or
inc
mov
adc
repz
and
xor
and
out
shr
sub
lcall
cs
es
pop
pop
jle
mov
int3
add
cltd
test
xchg
test
imul
sub
push
add
pop
mov
or
jmp
jae
cwtl
add
in
and
fadd
mov
adc
ret
push
pop
jmp
xor
cwtl
movsl
nop
push
pop
incl
mov
adc
shlb
dec
inc
pop
je
test
or
mov
lcall
lock
sub
cmp
call
push
enter
sub
lock
pop
aas
push
push
loop
and
in
clc
mov
scas
fimuls
int
mov
or
sbb
inc
cmp
imul
mov
fs
push
stos
mov
push
enter
sub
ljmp
jl
push
adc
cmp
loop
in
and
add
xlat
int
lcall
push
lret
out
inc
subl
cmp
xchg
hlt
les
cmp
pop
pop
sti
and
and
das
rcr
xchg
in
pop
push
xchg
hlt
cli
push
cltd
mov
push
repnz
sub
ret
sub
sbb
and
sbb
in
lret
add
test
mov
cld
mov
fcomps
lea
fs
mov
pusha
mov
and
inc
sbb
push
and
jo
mov
inc
clc
pop
adc
push
push
and
jo
pop
clc
shlb
out
popa
mov
cs
mov
es
sbb
pop
add
pop
jp
mul
mov
sub
imulb
fsubr
push
mov
jge
cmc
sub
xchg
pop
inc
jbe
mov
lcall
and
and
sahf
flds
xor
daa
pop
add
inc
fs
and
cld
aad
xchg
inc
js
xor
jo
jmp
adc
addr16
mov
and
push
call
int3
push
and
rclb
lods
push
scas
sahf
jl
jno
in
sti
movsl
std
mov
je
push
sub
add
aaa
out
sti
mov
test
mov
sbb
or
in
loope
ds
ret
sbb
lahf
xor
push
or
popf
and
addr16
jne
mov
lock
or
fidivl
std
pop
sub
adc
addb
fbstp
push
and
pushf
into
dec
mov
fimull
xor
or
dec
data16
ret
xchg
nop
jmp
push
loope
or
jmp
iret
add
jle
push
pop
mov
gs
inc
inc
xchg
pop
sub
popf
jns
mov
mov
or
pushf
dec
data16
ret
sub
mov
push
or
push
jno
call
out
adc
lcall
sub
outsb
in
test
xchg
xorb
adc
cmpb
fsubs
inc
cwtl
fs
adc
pop
and
fs
addr16
sub
dec
mov
cld
fstpl
ret
pop
in
fstpt
je
adc
push
test
sub
shlb
aaa
push
push
push
inc
jo
std
sbb
mov
lahf
pop
mov
jb
aam
jmp
repz
lret
aad
add
or
xor
out
into
mov
andb
test
test
push
jg
bound
sbb
sub
jb
pop
cld
push
xchg
shlb
nop
jge
adc
xchg
adc
lcall
out
ljmp
or
mov
ficoms
cmpsl
shrb
inc
xchg
jmp
sub
pcmpgtw
fs
add
dec
shll
push
sub
sub
negb
and
adc
imul
dec
aad
mov
mov
fs
mov
xchg
loopne
push
call
cli
shlb
mov
mov
rcl
jmp
es
testl
inc
fcomps
movsl
out
mov
test
inc
dec
fstpt
rclb
or
punpckhbw
dec
sbb
mov
repnz
xor
jp
push
push
mov
pop
sub
pusha
cmpb
fucom
les
int3
xlat
sti
test
insb
adc
mov
cmpb
lods
mov
fnstcw
mov
mov
fiaddl
or
push
mov
pop
adc
cmpl
dec
adc
dec
stos
jno
mov
in
decl
fildl
adc
xor
cmp
and
sahf
int3
ljmp
xchg
mov
cltd
fdivs
sub
push
pop
xlat
adc
hlt
dec
xchg
pop
mov
ret
es
mov
mov
dec
stc
dec
mov
jg
push
xchg
cli
cmp
test
movsl
scas
jecxz
and
test
test
push
adc
sub
or
les
add
dec
fisubrl
inc
push
xor
fistps
shll
mov
fs
push
int3
js
mov
pop
jg
inc
decl
notl
cld
loope
sbb
and
mov
xlat
xor
pop
pop
ficoml
hlt
rcrb
das
punpckhdq
pop
leave
pop
inc
decl
xchg
push
adc
cwtl
jecxz
inc
repz
test
inc
mov
lret
scas
inc
arpl
lods
dec
mov
lret
mov
in
push
dec
pop
enter
sub
out
or
rcll
pop
xor
push
inc
sub
sub
sbb
mov
or
sbb
and
sub
push
mov
inc
pop
jmp
push
jno
mov
xchg
pop
out
push
lods
sub
sbb
das
xchg
pusha
stos
xor
jae
sti
push
and
fstpt
lret
data16
dec
popf
jo
mov
loopne
je
mov
adc
scas
mov
or
push
insb
jge
or
shlb
adc
in
xlat
sbb
fcoms
cld
stos
xor
bound
xchg
pop
xlat
insb
addl
pop
mov
bound
mov
test
push
push
cmp
adc
or
cld
inc
mov
jns
mov
out
adc
xor
adc
fwait
push
sub
lock
dec
les
mov
cmpw
or
xchg
mov
shlb
mov
and
jne
cltd
jbe
shlb
pop
sbb
sub
xchg
test
mov
adc
lea
sbb
xchg
cmp
out
mov
cwtl
xor
ljmp
test
fwait
inc
lock
mov
add
je
outsb
jle
jne
mov
psubd
inc
pop
std
and
ret
or
inc
loopne
inc
dec
pop
test
jmp
cmp
and
pushf
adc
pushf
cmp
dec
bnd
lret
cli
jne
mov
divl
or
fisubl
and
cltd
inc
jne
add
add
and
and
add
pop
sbb
nop
jae
and
push
pop
js
xor
push
cmp
ljmp
loope
mov
sbb
in
aaa
xor
inc
inc
fs
and
pop
jecxz
addb
pop
adc
cmpsb
inc
push
push
adc
inc
adc
add
mov
icebp
cmpl
clc
fstl
lock
and
xor
cmp
mov
call
fcomp
fs
loopne
or
dec
cmpb
dec
lds
and
push
or
and
shlb
fidivs
pop
es
push
fmull
jmp
mov
lret
and
and
or
pushf
lods
pop
xchg
push
xor
or
push
push
imul
add
xor
add
sti
inc
js
shlb
jbe
cltd
sbb
loopne
call
mov
push
dec
mov
fsubs
xchg
fbstp
and
movsb
pop
lahf
out
mov
push
and
sub
mov
fs
fcomps
push
mov
leave
and
clc
adc
adc
daa
movsb
sub
cs
ss
fcmovne
lock
cmpb
fisubl
call
lret
xor
or
push
ret
leave
pop
push
add
test
sub
movsl
aas
jbe
orb
mov
mov
inc
popa
dec
bound
adc
cmp
imul
fsubr
sbb
and
popa
adc
repz
pop
repnz
pop
xlat
leave
xchg
push
int
or
jg
ret
std
addr16
xor
adc
int3
or
cwtl
inc
fadds
mov
or
jl
mov
in
js
adc
dec
push
sbb
add
and
dec
fsin
push
call
inc
push
aas
lcall
adc
cmpsl
xchg
jbe
inc
sbb
xchg
pop
sbb
xchg
mov
sbbb
add
mov
aam
jp
sub
outsb
inc
pusha
sbb
fcmove
xchg
scas
push
cmp
xchg
and
repnz
pop
nop
enter
or
loopne
popf
xchg
outsl
push
fisttps
imull
mov
fmuls
sub
lahf
add
scas
push
test
pop
sbb
fists
aad
cmpsl
inc
and
icebp
inc
vfrczps
loope
push
cmp
cli
or
out
or
xchg
outsl
add
pop
aad
fisubs
xchg
pop
cmpsl
or
add
int3
popa
mov
adc
or
add
pop
xchg
push
and
sbb
sub
sbb
fldcw
cmp
lahf
and
xor
jns
xchg
fcoms
stos
call
jnp
lods
dec
adc
movsl
and
imul
int3
pop
negb
pop
repnz
and
cs
sub
clc
cmc
mov
add
push
out
mov
pop
mov
mov
in
or
loopne
nop
call
movsb
sub
stc
jl
push
test
mov
mov
ftst
movsl
or
and
and
pushf
call
and
lock
and
pop
nop
xchg
xor
fs
xchg
sbb
inc
sbb
adc
mov
xor
aam
push
mov
xchg
jmp
lret
push
and
push
xchg
cmp
movsb
lahf
inc
test
mov
test
fldcw
push
les
clc
and
jmp
cmp
or
adc
cld
test
cltd
mov
sbb
sub
std
test
aaa
add
dec
adc
pop
jns
hlt
rcll
dec
jnp
jl
jne
ret
push
dec
adc
daa
sub
cmpb
push
add
in
iret
dec
push
mov
jmp
and
or
xor
jmp
xchg
xor
and
or
xchg
adc
test
pop
dec
fdivr
inc
ljmp
pop
sub
loopne
ret
push
stos
and
inc
or
push
jno
adc
sbb
cmp
or
in
insb
fmul
cwtl
inc
push
mov
push
or
ljmp
xor
js
and
popa
repnz
pop
inc
push
fstp
xchg
nop
test
fs
adc
cwtl
fsubr
decb
cld
sub
mov
and
test
inc
jbe
adc
mov
outsb
and
sub
push
popa
stos
jns
loop
jle
mov
adc
push
adc
cmp
lds
imul
dec
jnp
sub
xlat
sub
or
inc
inc
out
xchg
and
addr16
mov
xchg
push
pop
mov
add
or
mov
movsl
jbe
adc
adc
mov
mov
lods
ljmp
call
pop
mov
clc
mov
xchg
pop
sti
bound
sub
fistps
jnp
xor
pop
cld
mov
and
sbb
in
push
pop
test
dec
mov
and
mov
sub
xor
xchg
fstpl
xchg
notb
mov
shrb
scas
arpl
mov
sti
pop
loop
shr
pushf
pop
insb
pop
push
mov
dec
push
add
adc
adc
stos
push
fadds
mov
sbb
or
xchg
add
sbb
rcll
push
xchg
lods
mov
inc
fdivrl
pop
xchg
mov
outsb
cld
int
jae
adc
iret
daa
aas
mov
addr16
clc
push
fiaddl
jecxz
test
neg
inc
mov
push
or
or
ret
push
push
js
scas
stos
push
dec
mov
sbb
sub
and
cmp
jl
mov
out
fs
add
icebp
pop
push
inc
rol
push
repz
xor
xor
sbb
mov
push
xchg
jne
push
movl
popf
int3
xlat
and
lcall
add
jno
add
and
inc
ljmp
adc
into
xchg
xor
int3
test
or
pop
push
in
scas
xor
pop
and
or
push
movsl
xchg
in
aaa
inc
sbb
inc
and
adc
dec
call
call
sbb
stc
xor
mov
dec
jmp
stc
push
and
pop
dec
mov
repnz
sbb
mov
outsb
adc
dec
mov
dec
sbb
jmp
mov
and
and
imul
pusha
leave
and
add
jle
shrb
orb
and
push
sub
in
or
cmp
cld
mov
mov
xor
orps
filds
xor
test
lods
cmp
sub
fwait
mov
stc
ret
pop
daa
cmp
or
insb
xchg
xlat
mov
nop
push
subb
mov
or
cwtl
adc
ja
push
cld
cmp
pop
clc
pop
add
xor
xor
cmp
sbb
dec
add
adc
pop
sbb
adc
jp
int3
insb
pop
or
filds
je
cmp
jne
dec
mov
xorl
adc
add
repz
sub
adc
sbb
xor
add
js
add
into
movhlps
xlat
movsb
bound
lret
adc
fsubrs
or
xor
cmp
push
addr16
lea
adc
dec
inc
stc
adc
adc
jg
push
jmp
add
push
aaa
jmp
push
decl
clc
cmp
test
xor
add
sub
scas
addl
jb
fbld
mov
rcrb
orl
cmc
add
sub
popf
iret
sbb
push
xor
push
pop
adc
sti
rol
jg
jne
jle
imul
adc
mov
pop
cwtl
daa
test
fs
pop
jle
sub
dec
movsl
clc
rolb
ja
cmpl
inc
adc
in
daa
pop
pop
inc
enter
inc
and
jne
sar
push
xor
std
cs
add
and
pop
mov
pop
adc
pop
loope
scas
cmp
sbb
mov
sbb
movsb
pop
aad
mov
gs
call
xor
ret
fisubl
test
push
or
pop
dec
out
ljmp
mov
adc
sbb
es
lods
cmp
jae
adc
data16
call
adc
cs
mov
pop
ja
push
aad
cmp
dec
inc
xchg
aam
ret
and
imul
push
pusha
lods
push
lock
nop
call
mov
push
dec
cmp
adc
out
sar
xchg
cmp
sbb
pop
pusha
ret
mov
pusha
lahf
fwait
inc
adc
fdivs
int3
or
xor
xchg
sbb
cmpsl
inc
xor
mov
stc
adc
orl
movsb
loope
and
adc
notb
mov
xchg
sahf
push
xor
or
dec
sahf
cmp
inc
pop
sub
jne
adc
test
imul
or
mov
insb
mov
cld
pop
mov
call
movsl
pop
mov
or
adc
add
push
jecxz
fiaddl
out
pop
dec
sub
pop
push
sub
ljmp
aad
push
mov
cmpl
cwtl
adc
and
dec
cmc
push
add
add
xchg
int3
inc
lods
fstp
cmpsl
les
add
inc
mov
mov
das
push
xor
xor
jle
adc
repnz
adc
adcb
dec
add
das
pop
inc
mov
or
mov
dec
and
pop
into
inc
and
inc
pop
mov
nop
stc
sti
or
inc
idivb
xchg
data16
pop
fisttpll
pop
cmc
inc
push
pop
aam
xorb
pop
adc
icebp
sub
and
mov
adc
dec
add
int3
dec
dec
inc
hlt
lcall
clc
scas
lea
lods
stos
mov
fwait
icebp
notb
rorl
inc
push
jo
add
adc
mov
mov
push
sbb
dec
and
repnz
xor
dec
sub
mov
in
les
out
cmp
inc
dec
add
call
push
dec
stos
or
les
adc
repz
call
scas
insl
fwait
sbb
sub
pop
add
mov
loop
jle
test
mov
aam
jmp
xchg
jbe
jbe
fstl
ret
xchg
or
add
sub
sub
shlb
ret
xchg
inc
or
pop
inc
adc
loopne
push
push
adc
jae
out
cld
das
fucomp
xchg
or
or
enter
iret
push
push
inc
loope
pop
imull
add
sub
mov
mov
mov
or
les
sbb
adc
mov
je
enter
ret
sub
ljmp
or
call
jne
xchg
push
rolb
loopne
test
xor
inc
mov
enter
mov
sbb
push
or
data16
test
inc
dec
test
add
jge
push
push
push
int3
mov
enter
jb
adc
xchg
mov
xchg
fistl
neg
lods
out
xor
mov
push
in
dec
ljmp
mov
loopne
inc
inc
mov
xchg
jne
xchg
popa
dec
push
aas
and
jle
inc
sbb
pop
ret
mov
call
jbe
and
xor
and
fmull
movzbl
test
add
cmp
mov
ja
inc
cmp
mov
sub
icebp
hlt
jno
notb
das
mull
dec
sbb
imul
adc
adc
pop
hlt
mov
and
lret
test
or
movsb
cmp
mov
dec
xchg
jae
repz
cmp
jne
xchg
mov
or
pop
mov
loope
dec
and
sub
movsl
data16
leave
lock
jbe
add
jb
pop
add
call
ror
jae
xchg
xor
stc
scas
adc
cmc
movsb
mov
push
rolb
xor
xchg
jns
addr16
dec
enter
mov
mov
push
int3
fprem
int3
add
aam
adc
cwtl
call
sarb
dec
test
jl
aaa
in
add
xchg
inc
loope
dec
enter
leave
or
jnp
pop
arpl
repnz
fucomi
jl
les
sub
or
sub
sbb
jns
dec
xor
scas
shrb
fdivl
jmp
into
pop
loope
scas
notb
addl
inc
inc
push
or
notl
inc
mov
push
adc
out
jmp
mov
mov
movsl
add
stos
aam
mov
cmc
push
xor
pop
xchg
movsb
or
cwtl
and
pushf
fs
mov
inc
dec
xorb
movsl
mov
pop
xchg
xchg
sbb
call
mov
test
je
mov
cmp
dec
ja
mov
out
inc
xchg
stos
adc
jno
imul
divb
daa
es
push
dec
fists
cmc
cmp
jno
insb
push
xor
xchg
aam
arpl
sbb
mov
cs
mov
mov
sub
pop
into
pop
das
push
frstor
jl
and
in
mov
or
mov
sti
das
cmp
jge
icebp
clc
sub
or
aaa
or
subl
sub
fcoms
jmp
xlat
sbb
mov
xor
ljmp
and
xchg
sbb
ljmp
or
lods
and
or
fimuls
cmpb
ret
sub
adc
cmp
lds
push
add
jle
cmpl
and
dec
sbb
fs
dec
adc
scas
sarb
push
sbb
nop
fcomps
or
imulb
xchg
dec
repnz
lods
cmp
sub
or
negb
aas
push
mov
in
les
notl
out
shlb
lea
cwtl
or
dec
adc
pop
sub
inc
in
jmp
ja
push
sub
add
sub
test
xlat
leave
or
or
pop
inc
push
push
sbb
lods
ja
insb
in
push
or
movsb
call
push
push
jb
adcl
loopne
jmp
adc
adc
les
mov
push
stc
ret
cmp
sub
movsb
xchg
add
mov
leave
or
xchg
jnp
lret
lret
sub
push
in
mov
mov
inc
xor
xchg
or
or
push
xchg
mov
sahf
dec
dec
mov
push
icebp
xor
ret
outsb
pop
or
add
adc
andb
loopne
xlat
adc
rolb
js
xorl
xchg
prefetch
or
es
jnp
lock
xchg
xchg
sub
xchg
imul
add
call
adc
mov
jns
fnstcw
mov
je
inc
cld
add
jbe
jp
dec
leave
or
mov
push
stc
or
call
adc
add
loope
xor
sbb
adc
lock
in
adc
sub
jb
push
add
je
jmp
mov
fcoml
xor
es
mov
sub
std
pop
outsl
and
mov
xor
jo
in
mov
aad
mov
xchg
mov
cmpsl
sbb
sarb
dec
jae
in
data16
aad
mov
clc
adc
je
dec
mov
dec
jae
clc
repnz
push
aam
inc
jns
adc
test
add
cmp
sbb
push
jecxz
clc
add
loopne
and
pop
push
les
std
mov
mov
ret
cwtl
callw
ljmp
mov
stc
lds
mov
jmp
add
mov
mov
cmp
xor
inc
cmp
movb
ret
ja
or
aad
in
pop
sbb
and
icebp
ljmp
sbb
adc
mov
jmp
inc
sbb
lret
lock
add
sbb
adc
add
cmpsb
cmp
pop
cld
push
and
fs
lock
adc
dec
and
dec
nop
sbb
test
in
je
add
xchg
std
push
repnz
pop
push
je
rorl
outsb
xor
pop
insb
lcall
add
mov
daa
jmp
xchg
out
les
sub
xor
inc
adc
sbb
sbb
push
push
push
lea
mov
call
insl
inc
jo
lret
testl
push
ds
mov
int3
cmp
rclb
pushf
mov
call
push
inc
or
xor
test
out
or
mov
stos
pop
mov
xchg
test
mov
mov
push
cmp
xchg
rorl
enter
sti
inc
leave
or
into
cmp
and
or
subl
ss
and
xor
sub
and
sbb
push
push
add
jge
or
scas
out
pop
bound
mov
cmp
aam
pop
sbb
bound
inc
data16
and
xor
and
jae
daa
dec
xchg
fldl
or
pop
inc
pop
mov
inc
sub
call
out
js
xor
and
pop
lds
mov
or
and
cmc
xor
sub
lret
or
push
mov
jmp
cmp
test
aas
push
xor
inc
in
add
je
lret
cmp
mov
bound
add
sub
pusha
mov
xorl
and
push
nop
movsl
xchg
dec
inc
pop
pop
lahf
cmp
xchg
test
mull
add
shlb
pop
push
cwtl
sub
push
imul
addr16
bound
push
push
xor
inc
jecxz
mov
in
adc
add
jecxz
or
jns
push
adc
stos
sub
jmp
sbb
scas
cmp
adc
cmpsb
in
inc
or
das
push
sbb
lods
cmp
inc
fst
cmp
stc
or
inc
ljmp
xchg
jae
sbb
je
fdiv
cmp
movb
jg
push
adc
loop
lds
sbb
movsb
test
fadds
rcrb
mov
xlat
incb
xor
jbe
dec
jg
xor
xor
nop
cmp
xor
sub
sar
dec
inc
mov
test
lahf
adc
push
push
jmp
mov
gs
xchg
aad
mov
dec
negb
mov
add
cmp
clc
mov
push
aad
repz
movsb
push
inc
lea
into
inc
adc
gs
jb
popf
jne
hlt
mov
xor
ret
mov
rclb
mov
imul
call
jo
fld
xchg
mov
mov
inc
call
xor
leave
jne
test
pop
pop
cmp
sub
shr
and
push
lea
push
sub
mov
lea
adc
in
mov
and
icebp
movsl
movsl
push
idivb
lret
je
jp
jl
rorl
test
pusha
shrl
dec
add
mov
inc
adc
in
hlt
mov
mov
test
ret
pop
dec
ret
and
sub
iret
outsb
call
jbe
pushf
lahf
movsl
rorb
adc
sar
cmp
enter
sarl
dec
call
test
stc
xchg
cmc
xchg
cmp
loop
sub
pop
stos
push
call
enter
xchg
inc
push
mov
movsl
add
clc
push
leave
add
or
icebp
mov
mov
dec
sbb
inc
xor
jmp
clc
mov
mov
xor
mov
inc
bnd
adc
adc
mov
cmp
testl
sbb
xchg
or
repnz
push
xor
adc
cmp
movsl
aam
call
lahf
jb
sbb
sub
xlat
pop
pop
xor
mov
cltd
mov
sub
mov
pop
repnz
pop
lods
adcb
negl
cli
das
cli
sub
mov
inc
sub
jns
dec
adc
das
cmp
mov
ds
jp
mov
lea
pop
sbb
mov
mov
test
test
enter
dec
xchg
outsl
jnp
movsl
daa
mov
ja
insl
cmp
andps
lds
add
pop
and
negb
lds
ret
jbe
mov
outsb
int
loopne
call
neg
mov
mov
sbb
aaa
mov
add
jne
mov
jno
int
movsl
add
or
call
mov
arpl
aam
xorl
scas
fmuls
push
andl
mov
push
cmp
mov
outsb
push
inc
mov
fmull
mov
jg
push
and
fiaddl
push
shr
nop
cmp
insl
addr16
ds
call
xchg
imul
mov
push
xchg
lret
shl
out
adc
inc
mov
lret
adc
ljmp
inc
push
adc
sub
call
pop
scas
mov
aaa
cmp
out
and
stos
aad
fnstenv
dec
cmpsl
mov
add
ret
jmp
lock
ds
jne
loopne
or
mov
pop
xchg
push
adc
or
mov
xchg
inc
or
add
mov
xchg
adc
lret
xchg
mov
adc
mov
in
push
cltd
dec
and
sti
call
mov
jns,pn
insl
dec
cld
push
mov
cltd
and
or
and
jns
dec
or
enter
adcl
lret
cmp
jge
xor
push
cmp
sbb
decb
dec
mov
dec
fildll
mov
xor
call
or
cltd
cmp
cmp
dec
in
pop
aam
imul
xor
sbb
inc
test
cmp
or
dec
or
int3
push
inc
popf
and
jge
sbb
jne,pn
dec
out
jmp
and
in
mov
xchg
dec
out
adc
shlb
pusha
lcall
sbb
or
enter
test
mov
das
dec
mov
adc
movsb
mov
inc
push
inc
mov
sub
or
test
and
add
xlat
call
out
adc
sbb
and
jle
adc
in
and
imul
or
ss
pusha
adc
call
imul
adc
inc
test
adc
or
cwtl
pop
or
pushf
push
mov
inc
mov
push
mov
or
mov
add
inc
adc
sub
push
test
xchg
and
dec
lock
xchg
aam
pop
xor
xchg
stos
and
adc
push
push
cmp
mov
arpl
mov
sub
xchg
adc
add
cmp
jg
mov
add
jl
mov
adc
out
into
pushf
or
or
mov
popa
xor
mov
and
push
add
iret
inc
xor
mov
iret
fsubrs
mov
push
inc
xchg
adc
or
ljmp
pop
pop
daa
push
xor
dec
or
or
stos
cmp
push
push
je
arpl
and
jo
sub
adc
add
ds
lods
dec
mov
aaa
push
iret
pop
push
sbb
cmpb
sbb
jne
push
dec
mov
je
out
mov
cs
add
or
mov
fdivrp
add
das
sahf
pushf
and
sub
and
das
decb
jbe
xlat
popa
lret
or
mov
les
sub
dec
pop
shrb
jne
mov
fistl
cmp
cmpsb
xor
lea
inc
mov
movsl
cmp
leave
jl
lahf
cwtl
jmp
leave
push
sbb
in
test
push
and
xor
and
sub
fisttpll
add
and
sub
insb
cmc
pusha
std
orb
sbb
adc
mul
mov
push
clc
mov
shlb
insl
cltd
add
cs
push
std
inc
mov
or
jp
or
js
sub
test
pop
rclb
push
push
adc
mov
mov
std
jl
and
and
lock
pop
adc
sub
mov
pop
adc
and
ds
or
push
push
fistps
loopne
push
in
out
subb
test
xor
pop
jae
adc
out
adc
adc
dec
xor
sub
stos
push
mov
jb
incb
andl
or
outsb
inc
lret
sub
in
and
xchg
cs
addb
aas
or
rcr
shlb
out
je
lock
add
push
pushf
mov
inc
push
jl
jnp
adc
sbb
into
xchg
movsb
and
sub
stos
mov
or
xchg
dec
inc
add
les
xor
jo
ja
sub
sbb
lcall
inc
cmpsl
push
gs
xchg
or
push
outsb
or
push
and
push
addr16
jmp
adc
mov
adc
pop
ljmp
adc
jnp
hlt
sub
push
adc
inc
dec
and
enter
stos
push
xor
cmp
enter
movsw
loopne
pop
xor
push
and
mov
rcrl
dec
mov
fcomps
bound
data16
inc
sbb
and
sbb
cmp
adc
push
xor
gs
mov
gs
xchg
shlb
dec
fsubrs
sbb
sub
mov
test
sub
jo
dec
mov
sub
xor
imul
add
jae
xchg
dec
in
inc
bound
xor
sub
lret
sub
pcmpgtw
xchg
fisttpll
fs
fs
shll
fmuls
xchg
mov
and
loope
inc
shll
mov
mov
pop
xchg
dec
sub
insb
xchg
mov
xchg
loopne
xchg
in
mov
ss
mov
xchg
orb
mov
xor
fidivl
mov
fnstenv
or
dec
fs
mov
sbb
test
or
inc
fs
sbb
cmp
cli
arpl
push
xchg
clc
adc
lret
xor
mov
arpl
and
mov
inc
jae
je
add
xchg
pop
test
mov
outsb
loop
pop
subb
mov
push
adc
or
adc
sbb
sub
pop
cs
in
pop
push
or
loop
mov
fs
sub
dec
aad
push
in
push
into
or
add
ret
inc
mov
add
das
ljmp
lcall
or
or
mov
jo
popf
test
xchg
xor
or
xchg
or
or
inc
add
sbb
or
inc
push
and
push
push
mov
and
xchg
mov
sbb
mov
or
pop
popa
jo
sbb
dec
and
xchg
sub
cwtl
jl
inc
pop
mov
rcr
pop
adc
xchg
lock
mov
jge
xor
sbb
mov
cmpb
jbe
cmp
dec
sub
js
xor
push
push
sub
ljmp
and
and
xor
push
mov
pop
pop
sub
in
int
loopne
add
div
or
scas
je
movb
adcb
sub
push
rcl
dec
and
adc
sub
int3
xchg
jl
push
inc
mov
je
jb
or
push
mov
shll
mov
scas
cld
xchg
and
call
or
push
push
adc
push
aaa
or
sub
ret
ljmp
dec
outsb
adc
testb
or
fildl
test
pop
mov
cmc
pop
add
fwait
sub
push
jns
popf
mov
adc
jp
mov
or
lea
or
adc
sbb
imul
pop
xor
loopne
out
clc
mov
and
pop
lahf
mov
push
mov
cmp
adc
add
or
add
add
dec
adc
pop
cld
mov
adc
das
lods
in
pop
aam
aam
pop
xchg
and
and
outsb
adc
adc
or
int
adc
cmp
test
add
fwait
mov
test
xchg
cli
pop
pop
sbb
adc
or
push
push
or
sti
push
inc
xchg
and
xchg
adc
xchg
sub
xchg
daa
fwait
popa
mov
or
add
inc
inc
std
add
ja
jb
push
sbb
push
ss
xchg
xchg
sub
jmp
jae
xchg
and
outsl
clc
imul
jno
cli
add
xor
sbb
daa
test
push
out
mov
fstps
dec
mov
add
dec
ret
es
sbb
js
cld
mov
push
rol
bound
imul
fs
mov
sub
push
clc
in
fiadds
xor
das
pop
inc
aas
pop
dec
lods
dec
nop
add
push
or
add
jle
int3
jne
lahf
mov
and
addb
dec
jb
push
inc
sub
loopne
add
pop
push
jae
cmpsb
adc
cmp
inc
adcb
inc
pop
xchg
aam
sub
sbb
adc
add
stc
sbb
pop
decl
push
pop
cmpsb
call
sub
sbb
push
cwtl
nop
inc
cli
mov
pop
bound
sub
pop
aam
aas
jne
sub
cs
sbb
pop
call
and
adc
mov
sbb
fsubr
ret
fisttps
in
test
vpaddsb
jnp
and
or
sub
or
add
ja
cld
mull
leave
clc
or
adc
pop
push
jno
stos
sub
sub
push
push
nop
inc
lret
jne
les
add
xor
add
and
dec
xor
adc
add
push
adc
and
inc
outsb
jne
inc
imul
ja
into
add
xchg
nop
sbb
scas
push
leave
lcall
sbb
inc
adc
sbb
inc
add
test
sbb
mov
or
mov
inc
adc
inc
sbb
sbb
add
add
push
push
inc
push
mov
popf
aam
loope
push
inc
or
sbb
lock
push
inc
mov
and
fdivrl
fisubl
push
cli
pop
sbb
dec
inc
adc
mov
sbb
xor
or
xor
shrb
rcrl
mov
pop
jnp
cmp
jns
cmp
inc
and
les
dec
add
or
inc
movsb
mov
fsubrl
push
push
mov
call
jne
pusha
outsl
insl
sbb
push
imul
les
outsb
jae
in
xor
enter
and
roll
lods
inc
inc
ds
cld
push
add
inc
or
in
outsl
and
aaa
mov
daa
shlb
subb
test
mov
imul
out
frstor
sub
fs
sbb
adc
and
mov
lods
andps
adc
xchg
rolb
test
mov
or
mov
inc
popa
inc
or
inc
fs
and
aam
cltd
pop
mov
or
or
or
cltd
adc
cmp
outsb
icebp
cmp
stos
popa
xlat
imul
dec
dec
xchg
push
and
scas
mov
and
dec
xchg
xchg
and
push
mov
pushl
lds
nop
xchg
and
or
movsb
sbb
inc
xor
dec
adc
fs
jo
jecxz
in
adc
inc
xchg
std
xchg
jl
sbb
cmpsb
les
xor
nop
jg
mov
sub
or
jg
mov
leave
lods
inc
mov
daa
call
dec
jmp
imul
cmpl
dec
and
das
movsb
test
mov
fsubl
or
mov
jns
shrl
adc
call
dec
test
test
push
mov
movsb
xchg
out
xor
movsb
call
sbb
mov
test
outsb
push
adc
bound
clc
mov
insb
jl
clc
pop
push
popf
test
icebp
adc
mov
or
test
push
cmp
xor
lea
mov
mov
and
sbb
sbb
lea
push
pop
outsb
repz
push
sbb
and
or
fscale
sub
lret
mov
xchg
out
data16
jnp
sub
pop
sbb
xchg
xor
hlt
push
aam
mov
jo
popa
loop
or
jbe
fcomps
incb
scas
and
adc
dec
test
cmpl
push
and
shlb
mov
adc
and
sarl
lock
enter
pop
jle
or
jno
nop
lock
and
in
es
fcmovbe
and
test
and
cmc
jecxz
inc
and
lods
psrad
pop
test
rcrl
loopne
int3
dec
loope
mov
les
jmp
pop
cwtl
and
jae
out
push
jg
push
inc
dec
jne
ljmp
or
sbb
lock
movsb
inc
sub
mulb
sub
sub
pop
ds
inc
pop
mov
dec
sub
movd
add
call
mov
sbb
jle
stos
nop
xor
xchg
fstpl
pop
test
out
xor
adc
daa
fidivrl
aaa
fs
and
mov
adc
call
icebp
inc
jno
je
adc
leave
pop
pop
into
mov
jo
cmp
pusha
jp
jle
movsb
or
xchg
nop
dec
rcrl
dec
xlat
icebp
das
mov
mov
jmp
ret
and
rcrl
daa
fwait
sub
jo
adc
xchg
or
je
popa
adc
mov
mov
lds
sbb
or
and
cltd
sar
pusha
mov
test
jne
stos
adc
sub
pop
imul
mov
inc
and
out
mov
std
and
jg
jne
stos
fistl
call
dec
stos
movsb
fdivrl
cltd
lea
shl
jb
nop
lret
sub
xor
dec
mov
adc
aas
test
in
push
adc
mov
sbb
sbb
les
xor
cmp
iret
ljmp
xchg
in
xor
sub
and
push
data16
icebp
add
mov
mov
sub
mov
mov
mov
adc
sbb
mov
pop
jle
ret
les
xor
in
mov
scas
sub
mov
inc
xchg
sub
sub
jnp
xchg
fadds
aad
add
mov
sub
xorl
test
pop
ret
test
out
or
cmpsb
das
fwait
mov
jle
mov
lahf
pushf
jmp
iret
push
adc
adc
sbb
das
dec
push
in
ror
call
sbb
sub
inc
hlt
fsubl
mov
out
dec
cli
dec
gs
scas
xlat
cltd
push
fsubs
in
mov
sbb
enter
jp
sbb
out
mov
and
pop
es
clc
pop
ret
or
sub
inc
shr
or
cmp
sub
jb
divb
inc
adc
pop
jmp
pop
test
sub
sub
mov
pop
or
dec
or
int3
and
les
mov
insl
popa
and
daa
inc
push
inc
popa
push
or
dec
push
cmp
mov
and
pop
jae
pop
test
mov
inc
inc
ja
test
cmp
dec
push
jg
jno
movsl
testl
mov
daa
or
add
fstpl
dec
sub
leave
fsts
adc
movsb
and
and
dec
sbb
mov
push
cld
lahf
mov
inc
jne
dec
adc
gs
sub
pushf
mov
mov
cltd
js
and
sbb
cmp
mov
xor
add
fldcw
sub
adc
test
daa
add
out
int
cmp
cli
cmp
xchg
stc
xchg
std
adc
mov
adc
jae
testl
cmp
cmpsl
adc
push
jns
inc
or
imul
popa
pop
or
jge
daa
jns
mov
nop
sbb
enter
add
add
pop
xor
pop
es
std
std
xor
test
adc
clc
and
dec
dec
inc
adc
xorl
inc
adc
test
sbb
dec
adc
cwtl
pop
and
adc
or
clc
sbb
dec
pop
data16
and
mov
push
jae
inc
dec
stc
jecxz
les
cmp
cmp
mov
mov
cmpsb
sub
lds
loop
popf
cwtl
negb
jle
mov
ss
sbb
fmuls
xor
adc
enter
add
gs
jg
je
lahf
das
inc
or
xor
das
adc
pushl
mov
cmpsb
das
and
sbb
pop
and
aad
cmp
jno
or
dec
adc
shrb
cmp
ret
sbb
inc
jp
nop
shlb
or
xor
repnz
adc
scas
insb
or
lahf
cmp
adc
pop
lods
mov
xor
sub
mov
in
xor
popf
aad
xchg
dec
mov
push
call
cmp
adc
adc
or
and
xor
inc
and
and
adc
fdiv
sub
hlt
mov
push
mov
and
inc
and
add
das
rorb
dec
adc
mov
or
inc
jl
call
cmp
test
inc
and
xchg
outsb
enter
js
hlt
and
sbb
pop
test
movsb
lahf
mov
in
sub
inc
and
stc
cmp
std
adc
inc
adc
push
push
mov
ja
mov
jo
pop
sbb
loop
outsb
jg
lret
popf
pop
add
xor
push
ja
shlb
push
lahf
aam
and
pop
pop
push
movsl
mov
adc
lea
xlat
jo
jae
xor
cmp
fs
popa
insb
ds
or
adc
xor
mov
or
imul
pop
adc
xor
inc
push
sbb
sub
xor
or
mov
adc
push
addl
and
xchg
jecxz
mov
sbb
rcrb
in
cmp
or
int3
and
sbb
ljmp
or
movsl
add
fs
adc
enter
imul
lock
sbb
xor
loop
or
sbb
filds
sub
add
xchg
or
xor
cmpsb
lods
xor
and
xor
or
pushf
jae
dec
mov
in
call
sbb
enter
enter
repz
and
cmpl
inc
adc
push
xor
push
fsubrl
mov
je
into
fs
out
hlt
in
jnp
lea
sub
xor
jnp
in
push
and
xor
das
mov
pushf
mov
sub
outsb
or
nop
lock
fistps
mov
sub
xor
inc
rcl
mov
and
shll
or
mov
xor
testl
dec
inc
in
lahf
jle
or
push
mov
or
push
mov
repz
cmp
test
cmp
cli
mov
aam
xchg
lret
pop
cmpsl
je
adc
sub
popa
cld
inc
ja
aas
or
movsl
lcall
pop
push
inc
mov
pop
cmc
sub
test
stc
in
lds
add
push
mov
adc
outsb
pop
hlt
jp
or
inc
xchg
lret
cwtl
icebp
inc
mov
inc
add
dec
adc
fs
inc
inc
pop
pusha
cmp
push
and
or
push
shrb
and
push
cs
popa
sub
mov
mov
push
sbbb
dec
pop
ljmp
insb
movsl
mov
push
push
popa
jb
inc
movsl
andb
inc
pop
fimull
sbb
dec
sbb
inc
sub
inc
es
push
inc
sbb
cltd
test
push
and
and
and
and
dec
dec
add
mov
xchg
xor
jl
xor
daa
fmuls
outsl
jo
mov
lods
popf
fs
cltd
dec
int3
xchg
xchg
cmp
push
loopne
lods
inc
dec
mov
sub
btc
incl
fs
inc
push
test
and
or
fimuls
add
cwtl
adc
fsubl
xor
pushf
movsl
add
and
imul
inc
mov
mov
mov
lds
cli
test
sti
or
pop
sub
sbb
mov
push
sbb
into
lcall
sub
inc
push
push
mov
cmpsl
or
and
or
cwtl
cld
dec
mov
lea
dec
fs
xlat
add
push
pop
or
push
mov
inc
and
shlb
and
cs
cmc
orl
dec
mov
and
pop
dec
stc
sub
push
add
and
sub
jae
and
pop
dec
stc
sub
push
adc
lods
push
mov
or
shrb
nop
push
fcoml
loope
es
shlb
jae
mov
xchg
dec
fdivs
das
mov
mov
pop
and
xor
jo
jo
stos
cwtl
test
xor
dec
adc
add
and
mov
push
movsb
daa
enter
cs
repnz
and
push
mov
inc
mov
pusha
cmp
pop
or
test
pop
mov
xor
or
and
adc
mov
pop
mov
cmp
cmp
cmp
cmp
bound
mov
mov
push
push
addb
jecxz
sbb
lea
pop
or
fmull
xor
in
rorl
mov
cmp
rorb
mov
or
inc
cmp
mov
mov
or
push
adc
adc
adc
inc
xchg
fsubl
adc
in
lods
pop
daa
pop
or
jnp
dec
bound
lea
or
pop
adc
imul
xor
push
add
lds
push
xor
nop
xchg
fadds
pop
or
or
or
cmp
stos
daa
pusha
das
or
adc
mov
lret
or
inc
and
jne
or
xchg
lea
sub
mov
add
cwtl
in
sub
cld
adc
jno
inc
inc
add
adcb
arpl
call
jl
sbb
adc
ljmp
mov
pop
inc
dec
leave
push
mov
push
inc
arpl
push
loope
test
sbb
and
and
sub
xchg
sahf
pop
adc
push
adc
imul
es
pop
cs
movl
test
and
push
inc
cmp
jo
mov
and
adc
movsb
out
cli
dec
aas
out
and
jbe
sub
sub
xorb
adc
rorl
pop
sub
daa
pushf
dec
lcall
or
inc
sbbb
push
inc
fs
cltd
lret
ror
mov
xor
cmp
stc
arpl
mov
adc
enter
leave
sbb
or
xchg
xlat
or
rorb
push
cltd
sbb
shlb
rcrb
int3
inc
jno
hlt
and
nop
cld
adc
into
inc
pop
fcoml
sbb
xchg
xor
adc
enter
xor
xchg
or
cmpl
fs
mov
sarb
adc
jnp
mov
fcoms
lret
les
jl
movsb
popa
iret
xchg
or
adc
xchg
scas
xchg
js
pop
adc
and
jno
add
in
call
aad
sub
mov
mov
mov
stos
in
add
sbb
or
and
inc
mov
ss
mov
mov
pushf
xor
adc
pushf
mov
popf
les
and
loop
leave
push
bound
and
rorl
inc
gs
mov
mov
pushf
dec
xor
out
adc
rcrl
sub
in
dec
movsb
jp
add
and
popa
call
dec
dec
lea
adc
mov
mov
xchg
int
xchg
adc
pushf
cli
leave
jmp
xchg
xor
lds
push
cld
pop
popf
xchg
sbb
repz
sbb
mov
push
adc
imull
add
or
imul
int3
bound
mov
pop
add
gs
mov
mov
mov
dec
popaw
or
or
cmpsl
sbb
js
outsb
addr16
movsb
nop
inc
adc
mov
dec
and
inc
dec
xchg
test
and
in
lods
mov
es
push
and
leave
sub
lcall
xchg
sub
push
adc
inc
insl
push
add
dec
outsb
insb
jns
js
sub
sub
enter
and
stc
add
int
xchg
add
push
imul
cmpsl
or
flds
outsb
test
xchg
xchg
enter
xor
and
je
xor
xor
shll
out
push
adc
stos
and
inc
inc
dec
mov
cmp
mov
push
cmp
sub
test
loopne
jo,pt
inc
or
and
call
inc
pop
pop
push
jo
inc
enter
cmp
xor
or
mov
dec
add
push
push
mov
sub
or
fcomp
or
mov
or
imull
lahf
rorb
mov
in
imul
cltd
sub
notb
push
mov
shll
adc
or
jne
push
arpl
or
mov
sub
jo
push
lods
adc
dec
and
lods
out
fisubs
and
in
or
xchg
jmp
xor
fsubr
mov
hlt
lock
les
mov
add
repz
pushf
push
in
mulb
jns
or
mov
jno
or
call
loopne
or
mov
or
cltd
adc
pop
mov
xor
mov
inc
std
int
jne
jg
in
jae
movsb
aam
pop
sbb
scas
fcoml
jecxz
aad
adc
push
in
xchg
adc
inc
and
xorb
dec
popa
xor
inc
sbb
mov
popf
pop
cmp
sub
loopne
xor
inc
sub
jl
test
stos
and
cwtl
or
arpl
or
in
insb
pop
mov
xor
mov
inc
sub
or
sbb
sub
add
adc
lcall
xchg
mov
mov
mov
and
test
or
adc
jo
test
insb
test
call
xlat
xchg
mov
adc
jb
xor
jl
push
add
and
pop
fists
sbb
cmp
or
xchg
stos
mov
ret
push
push
imul
xchg
mov
xor
adc
leave
push
enter
jo
push
stos
in
movsl
sub
bound
add
hlt
stos
iret
push
loope
stos
or
faddl
mov
mov
or
lods
xchg
push
pop
and
inc
leave
mov
sbb
push
inc
cmp
mov
jo
pop
or
add
mov
mov
jae
pushf
test
pusha
imul
or
mov
scas
icebp
sbb
aam
mov
adc
push
std
sub
sbb
sbb
loope
push
push
adc
popa
in
push
or
mov
push
mov
jo
pusha
pop
dec
adc
aas
movsb
push
xchg
jno
das
and
add
stos
leave
or
jmp
das
adc
imul
cli
push
push
adc
inc
or
repnz
mov
push
mov
dec
add
lcall
mov
and
and
inc
adc
pop
jg
sbb
mov
cmpsb
dec
and
pop
jns
adc
inc
out
inc
mov
push
jne
sub
pop
movsb
lods
xor
push
test
sbb
clc
adcl
or
add
enter
cli
mov
sub
jp
and
movsl
insl
jns
addr16
jmp
mov
roll
xor
push
fsts
fs
pop
sub
pop
call
inc
inc
into
xor
or
addr16
in
cmp
mov
test
sub
sub
and
xchg
add
and
and
sub
cmp
cmp
cmp
cmp
and
and
sub
dec
inc
enter
fs
leave
imul
cld
inc
test
inc
sbb
mov
sahf
negb
dec
and
mov
push
lock
pop
inc
cmp
popa
inc
fcoms
and
mov
loopne
pop
pushf
les
mov
pusha
sbb
fisttps
sbb
inc
insb
addr16
dec
nop
or
mov
mov
xchg
sbb
xor
xor
aaa
pop
sub
push
sbb
push
pop
or
sub
sbb
fcoml
inc
jne
ds
je
repnz
rorb
adc
pop
sbb
or
sbb
xor
inc
pop
xor
mov
push
outsb
or
inc
mov
inc
jo
fcomps
repz
fldenv
xor
cmp
cltd
sub
pop
pop
push
dec
jp
out
pop
or
lock
jno
lcall
and
dec
fs
js
mov
inc
addr16
xor
pop
ret
push
loopne
adc
jmp
test
hlt
iret
sub
call
cmp
sub
and
sub
outsl
daa
inc
lret
pop
inc
js
dec
xor
and
aad
push
out
aam
es
std
leave
cld
sbb
jae
mov
int3
inc
popa
mov
in
sub
cmp
pop
nop
add
pop
sti
xor
adc
inc
adc
mov
add
inc
adc
lods
adc
add
dec
aaa
scas
inc
testb
popa
insb
push
gs
sar
and
xchg
aad
sbb
sbb
sbb
aad
adc
stos
and
push
inc
and
inc
and
inc
and
daa
or
mov
push
movsl
fnstcw
nop
cs
popf
dec
addr16
xor
gs
rorb
mov
add
or
push
outsb
movsl
adc
or
or
inc
movsb
or
inc
int
jns
jb
cltd
cltd
loopne
cmp
in
push
push
leave
or
lock
and
ja
les
cmp
gs
or
dec
mov
sub
add
mov
dec
xor
or
add
push
sub
mov
mov
inc
mov
pop
repnz
cld
xchg
addr16
repz
imul
push
nop
mov
or
xchg
sbb
dec
adc
and
xchg
sahf
push
inc
or
lods
mov
dec
mov
cmp
dec
lods
or
dec
outsb
aaa
es
mov
cvtpi2ps
adc
aaa
push
nop
adc
shl
fdivrl
push
pop
je
in
cmpsl
cld
adc
adc
pop
test
cmp
stos
and
push
dec
sbb
push
mov
sbb
mov
push
call
or
and
sub
mov
jns
stc
and
mov
hlt
repz
and
fs
daa
repz
lods
icebp
jg
daa
lahf
sbb
je
das
lods
xor
xor
xor
mov
daa
lods
jo
sbb
movsb
jno
inc
js
je
sahf
int3
ja
adc
aaa
jo
ret
mov
test
push
cwtl
js
xchg
or
lret
mov
adc
adc
xor
push
push
or
imul
xor
sahf
adc
xor
sub
movsl
mov
sub
and
push
mov
or
iret
and
adc
inc
adc
adc
loop
adc
imul
sbb
adc
dec
pop
lret
and
adc
enter
and
and
push
nop
daa
mov
sub
mov
mov
push
nop
das
mov
xor
push
mov
lods
xchg
stc
rorl
or
bound
ficoml
push
pop
cmp
and
or
jne
aad
or
and
add
pop
fmuls
lock
inc
push
mov
les
xor
or
jb
data16
movsl
aaa
das
cmc
xor
or
pop
and
sub
pop
mov
sub
mov
daa
xor
je
sub
je
movsl
adc
and
cld
jb
movsb
popa
cwtl
lret
inc
cmpxchg
xlat
mov
adc
adc
iret
push
mov
and
push
loopne
or
adc
pop
mov
faddl
or
fdivr
sbb
adc
pcmpeqb
adcb
ja
push
mov
scas
loop
rolb
dec
roll
clc
flds
sub
cltd
popf
xchg
vrcpps
les
adc
test
add
fisubs
adc
or
xchg
push
test
les
insl
pop
dec
call
daa
mov
movsb
fcomps
adc
dec
adc
and
and
push
mov
cmp
xchg
bound
lcall
xchg
or
push
mov
mov
inc
imul
jne
push
mov
pop
jne
push
nop
adc
adc
adc
and
in
rol
adc
sar
insb
and
inc
iret
lret
inc
lcall
jecxz
repnz
sbb
sbb
mov
or
cmp
dec
inc
xchg
push
scas
je
scas
xor
pop
jne
ss
and
sub
mov
fsubl
inc
and
mov
pop
cmp
dec
out
sub
mov
call
sub
pop
and
cmp
aam
lock
cli
pop
test
dec
cld
xor
imul
in
jmp
pop
enter
sub
sub
adc
loope
adc
lret
rorb
push
sbb
xchg
stc
sub
cmp
sbb
les
sub
out
adc
int
shl
xor
fdivrs
or
sub
pop
or
push
add
scas
pushf
daa
js
icebp
clc
push
jne
pop
roll
fcoms
pushf
adc
lea
jl
cld
aaa
test
cmp
mov
inc
push
sarb
inc
cmp
iret
push
cmp
cmp
and
aas
test
or
inc
pop
sarb
inc
inc
xlat
iret
xchg
enter
inc
mov
inc
in
inc
lea
inc
or
jne
jne
jno
cmpsl
repz
ret
jl
insl
sbb
adc
adc
cld
test
dec
inc
jmp
cmp
test
rcrb
js
lea
shrb
pop
sbb
testb
movsb
push
in
repnz
adc
test
les
or
enter
or
and
sbb
mov
movsb
fs
or
cmp
movl
inc
repnz
int3
sub
adc
lods
jb
fld1
shll
cld
imul
popa
ss
xchg
push
mov
mov
lds
pop
adc
or
mov
or
jg
adc
xor
aas
push
push
xchg
sbb
inc
mov
add
push
add
hlt
and
shll
je
dec
adc
mov
stos
cwtl
or
lret
stos
adc
cli
push
add
cld
cli
cltd
adc
add
pushf
push
enter
rolb
or
pop
sbb
out
nop
popa
call
inc
mov
cli
push
dec
mov
mov
cli
jns
cmp
dec
dec
xchg
jecxz
xor
fwait
cmp
push
lock
xor
lods
daa
rcll
mov
inc
jge
sbb
mov
scas
aas
jmp
test
xor
jbe
push
test
sub
pop
imulb
enter
and
sahf
sub
mov
push
xchg
jmp
aas
sbb
or
out
xchg
jg
movsb
pop
loop
sbb
push
inc
pop
hlt
pop
sub
adc
adc
xchg
pusha
imul
fsub
jge
in
movsl
add
and
inc
jae
add
or
xchg
mov
jp
push
daa
int3
adc
sbb
mov
rcl
mov
inc
inc
push
jo
fadd
pushf
or
inc
enter
mov
and
inc
mov
inc
xchg
and
cmc
push
lods
xchg
mov
dec
mov
mov
sbb
adc
jmp
jmp
pop
mov
dec
jp
sbb
push
into
sub
xor
mov
in
int3
repnz
mov
mov
jp
push
add
je
mov
cmpb
dec
sbb
mov
fidivl
and
ja
pushf
mov
sbb
and
movsb
popl
and
mov
imul
add
lret
or
push
jo
cmp
in
popa
xor
imul
add
inc
inc
adc
adc
adc
inc
sbb
mov
jo
fwait
stos
mov
loope
sbb
cs
pop
pushf
insb
dec
icebp
inc
mov
jl
xor
xor
push
je
stos
and
or
lcall
push
or
in
and
mov
adc
xchg
pop
jne
or
es
ljmp
adc
test
add
call
and
loop
data16
mov
dec
outsb
push
fldenv
js
push
push
mov
test
aaa
sbb
xchg
pop
orb
jno
cmc
sbb
xchg
adc
and
adc
into
sbb
mov
adc
and
mov
dec
mov
and
jne
pop
shlb
mov
xchg
mov
das
mov
adc
add
test
add
xchg
add
mov
cmc
clc
mov
sub
loope
dec
push
add
mov
aam
dec
fists
mov
inc
adc
insb
mov
adc
adc
mov
nop
outsb
inc
je
jecxz
mov
rcll
sbb
iret
or
adc
and
add
add
sub
push
push
inc
cli
in
das
push
ljmp
clc
pop
cmp
or
sub
dec
xchg
dec
inc
repnz
scas
fs
bnd
add
icebp
inc
xor
cmp
mov
cmc
pusha
fcompl
cwtl
add
mov
xchg
shrb
lcall
call
xchg
shll
rcrb
in
in
cwtl
add
inc
fsubs
shrb
inc
add
cmc
dec
cmp
lds
inc
pop
xor
es
xchg
and
insb
and
enter
scas
xchg
pushf
cmpl
inc
dec
stos
icebp
mov
push
or
dec
imull
scas
xor
xchg
test
adc
jmp
lock
mov
stos
mov
pop
pop
je
push
cmp
mov
les
lods
pop
cmp
inc
jb
mov
add
mov
or
call
mov
jo
daa
push
sbb
add
enter
or
and
inc
inc
inc
jmp
pop
rsm
or
dec
mov
xchg
pop
outsb
sbb
or
cmp
mov
mov
lods
addl
imul
mov
push
and
sti
cmp
and
mov
xchg
pusha
cmp
push
push
sub
int
xor
mov
add
scas
enter
nop
test
cmpl
push
mov
inc
sub
les
push
cmp
inc
mov
sub
sahf
stos
sbb
push
inc
xchg
iret
push
adc
push
xor
les
push
inc
mov
jno
add
add
cmpl
and
test
and
xchg
jmp
divb
xor
inc
jl
js
adc
and
loop
cmp
mov
xor
xchg
mov
push
jmp
xchg
cwtl
or
add
ja
lret
xor
adc
inc
inc
jmp
push
inc
cmp
xor
xchg
pop
adc
adc
dec
stc
and
jns
popf
push
mov
leave
push
imul
add
inc
adc
or
or
add
push
xchg
jle
sub
or
outsl
loopne
inc
pop
icebp
push
jl
cld
enter
adc
adc
adc
cmp
mov
jge
mov
or
hlt
shll
int3
sub
adc
inc
shl
sahf
adc
scas
cmp
mov
jp
test
lahf
ret
ja
orb
jnp
xor
or
ret
push
pop
push
aaa
sbbb
push
popa
adc
dec
xchg
inc
aam
and
push
and
adcl
push
test
aad
inc
adc
cmpsb
inc
mov
and
pushf
ret
and
fdivs
data16
rclb
push
js
sub
push
jl
sbb
xchg
jns
mov
or
shl
gs
mov
xchg
jno
and
decl
mov
push
and
jb
mov
or
adc
cmp
sub
sub
out
mov
test
das
xor
jne
pop
push
and
and
inc
jecxz
and
ror
stos
fdivs
sbb
xor
adc
push
mov
andl
mov
gs
lea
dec
scas
lock
or
enter
mov
adc
push
outsb
aad
cs
inc
loope
push
mov
in
pusha
add
jge
jg
add
mov
daa
add
sti
int3
cmp
or
cmp
and
lods
adc
bound
dec
xor
cltd
adc
cmp
into
clc
xor
out
pop
cld
sti
stos
adc
pop
sahf
inc
into
cmp
dec
xor
xor
ret
test
sbb
aad
insb
fs
push
leave
stos
dec
xor
adc
sub
xor
mov
inc
xchg
mov
xchg
rcr
mov
mov
ret
jg
inc
faddl
and
xor
dec
movlps
clc
enter
lret
into
in
adc
cmpsl
clc
xor
jne
push
andl
out
or
xor
inc
inc
cmp
pop
xor
add
fcom
xchg
sub
sti
addr16
mov
jbe
push
aaa
loopne
xor
xorl
shll
dec
loope
push
ret
icebp
cs
add
loope
jmp
and
rol
mov
cmp
push
mov
adc
pushf
movsb
xchg
and
inc
std
inc
xbegin
sub
jl
lahf
pop
or
daa
imul
sbb
pop
mov
js
mov
mov
mov
cmp
jne
movsl
loopne
push
push
and
cli
ret
adcl
xor
push
cmp
test
xchg
or
scas
pop
push
mov
into
pop
adc
jo
mov
imul
fisttpll
test
push
push
iret
ficoml
cmp
push
xor
popa
fistl
clc
jmp
aam
push
lcall
aad
movsl
in
and
test
mov
add
aam
aas
fimuls
std
mov
and
sahf
xchg
cmp
jle
sub
xor
mov
loopne
test
push
in
ret
jle
sti
mov
mov
jo
sahf
sbbl
xor
add
cmp
inc
dec
cmp
mov
cli
in
push
rcl
adc
mov
mov
imul
add
lret
mov
push
daa
call
mov
add
push
inc
dec
add
je
enter
stos
pop
sub
loop
mov
movsl
mov
mulb
or
dec
in
mov
adc
imul
aam
mov
or
mov
pushf
orw
add
nop
aaa
inc
adc
or
mov
xchg
mov
push
es
push
int3
adcb
mov
adc
fdivrl
cli
inc
test
and
clc
in
rorb
jbe
sahf
sub
stc
mov
jb
test
cmp
les
inc
je
mov
inc
push
mov
les
inc
jl
call
xchg
inc
cmp
xor
push
repnz
cltd
xor
lahf
addl
and
call
sbb
add
les
stos
pop
fstpl
lods
adc
cmpsb
test
aam
jno
dec
data16
inc
ds
movsb
or
add
dec
pop
cs
jl
pop
dec
jno
jno
adc
add
call
mov
adcb
out
mov
or
lcall
and
sbb
aam
push
mov
fwait
ret
adc
movsl
sahf
addr16
inc
push
enter
dec
mov
mov
push
push
push
pop
xchg
inc
xchg
popf
loopne
lock
sbb
outsl
hlt
cli
push
jo
sbb
xor
cmp
seta
ret
pop
jns
gs
outsl
ljmp
mov
or
adc
pusha
dec
mov
into
mov
flds
add
cld
xchg
mov
sti
ret
adc
movsb
test
jp
jno
push
pusha
call
sbb
jb
cltd
xchg
or
stos
inc
int
loopne
inc
ret
movsb
cmp
inc
popf
adc
stos
mov
aad
lods
xchg
push
mov
mov
movsl
mull
ret
inc
cs
push
inc
sub
jo,pn
xor
inc
mov
mov
mov
sbb
mov
adc
mov
jno
lahf
push
adc
push
mov
loop
pop
adc
mov
call
mov
add
dec
jae
push
pop
pop
adc
or
adc
pop
aas
mov
pusha
cmp
scas
mov
mov
lahf
cld
dec
outsb
int3
xchg
inc
int
mov
cs
xchg
ljmp
pop
rorl
xchg
lods
movl
in
push
dec
test
and
add
mov
and
and
lahf
outsb
mov
cmp
mov
mov
cmp
jmp
mov
inc
cmpsl
in
test
outsb
inc
cmp
add
inc
jae
les
and
popf
cwtl
adc
add
cmpsb
hlt
dec
xchg
lret
inc
or
sub
ja
fldt
pop
xchg
int3
mov
inc
add
fsubrl
fsubr
xchg
lahf
out
inc
idivl
cltd
cmp
cld
push
gs
push
leave
adc
gs
dec
jl
sub
inc
sub
ja
or
das
adc
push
inc
cmp
je
mov
adc
cmp
push
cmp
das
xor
mov
or
xor
mov
adc
ss
stc
test
or
mov
xchg
pop
dec
ret
sub
xorl
fs
adc
add
insb
or
fs
xlat
sub
pop
jnp
and
mov
pop
push
mov
and
add
dec
je
lods
xchg
pop
cmp
rorb
inc
or
mov
sub
repnz
loopne
or
bound
mov
jne
xchg
mov
jae
sub
negl
movsb
lock
push
cmpl
push
sub
movsl
push
jo
das
jb
jbe
rdtsc
ja
stos
mov
add
push
ljmp
in
dec
push
shrb
sub
adc
ficoms
or
lock
addb
outsb
rcll
pcmpeqw
jnp
jnp
push
leave
and
pop
ja
dec
scas
int3
in
and
in
xchg
dec
add
xor
mov
cmp
sub
add
push
or
cmp
les
add
pop
mov
daa
adc
inc
dec
dec
xchg
dec
jne
inc
mov
inc
jbe
dec
ret
pop
aam
je
loop
lods
inc
mov
nop
fs
out
in
out
ret
inc
adc
add
dec
je
xchg
lods
and
lock
lds
dec
ja
andl
xor
and
mov
and
test
jmp
mov
inc
sub
or
and
push
cs
shll
inc
mov
subl
insb
divl
xchg
cs
dec
push
xchg
or
mov
loop
vpsrlq
xor
inc
push
and
cmp
mov
inc
dec
cmp
pop
flds
jo
je
jae
inc
mov
inc
je
mov
mov
add
cmp
je
or
mov
inc
dec
hlt
loope
rolb
xor
jne
adc
push
adc
mov
ljmp
pop
pop
test
ret
xchg
pop
cwtl
pop
bound
xor
or
clc
push
cmp
in
push
sarl
inc
mov
adc
xchg
or
shll
cmpsb
pop
bound
sub
inc
int3
and
dec
shl
insl
and
adc
insb
push
test
jg
xlat
loopne
aam
xchg
cmc
nop
xchg
jae
iret
mov
add
jne
test
push
xorb
or
mov
call
mov
lcall
test
repz
sbb
jne
rcrb
cmp
or
and
das
mov
inc
mov
cmpb
sub
out
inc
mov
cmc
adc
sbb
cmpsb
inc
or
inc
push
nop
sbb
or
jmp
out
adc
inc
mov
mov
rcl
adc
mov
subb
pop
adc
jmp
sub
subb
mov
subb
inc
cld
jp
mov
clc
jne
push
pop
sbb
ror
mov
and
cmp
adc
subb
push
or
sbb
aaa
add
cltd
leave
or
mov
sbb
outsb
xlat
push
mov
sub
xchg
incl
cmpsl
sub
cs
push
clc
or
xchg
js
and
test
cmp
or
xor
push
or
sub
lcall
and
inc
mov
test
adc
pop
add
enter
pop
enter
in
enter
add
lods
push
push
pop
ret
push
pop
xchg
adc
enter
test
inc
xor
in
rolb
repnz
mov
and
and
xor
push
call
jmp
lock
cltd
push
mov
in
jmp
test
sub
stos
outsb
sub
mov
jecxz
mov
adc
jmp
pop
pushf
and
mov
aaa
jo
cmpsl
mov
bound
xchg
pop
cmp
repnz
loope
outsb
loopne
scas
sub
jg
jl
call
cld
or
test
ljmp
lock
mov
and
test
cmp
test
stc
in
cmpsb
adc
push
rcl
adcl
ret
sub
sub
mov
mov
ss
sti
les
in
call
dec
cltd
cmp
and
adc
xor
inc
aad
push
test
aad
xchg
sbb
int
adc
pop
jl
lock
jmp
pop
push
mov
cmp
adc
jecxz
pop
mov
stc
xor
xchg
fwait
test
inc
and
and
loopne
int3
pushf
push
pop
out
xor
clc
xor
orl
sahf
dec
ret
adc
gs
xchg
divb
push
rcrb
loope
xor
test
xor
rcrb
xchg
sbb
movb
stos
sub
jne
mov
js
nop
mov
add
pop
inc
dec
mov
jge
add
ljmp
pop
xchg
mov
adc
mov
mov
push
f2xm1
sub
icebp
or
das
outsb
jb
movsl
cwtl
add
lret
test
push
mov
or
aaa
mov
cs
mov
sub
pop
sahf
cmpsb
xchg
shl
and
fisubrs
int3
pop
xchg
pop
in
mov
loop
popf
push
adc
or
cltd
add
nop
and
movsl
icebp
push
cmp
or
and
in
cmp
xchg
les
mov
xchg
push
xor
xchg
cmp
xchg
lea
movsb
icebp
fucomp
adc
cmp
mov
inc
testb
sub
cmc
insb
leave
dec
arpl
out
mov
pop
movsb
in
imul
test
aas
test
idivb
or
lea
adc
std
cmp
jne
adc
shll
mov
or
cmp
jne
mov
pop
sbb
loopne
aaa
add
nop
test
ret
ljmp
ret
adc
push
or
fisttpl
xor
int3
addr16
mov
jl
mov
add
jne
sub
mov
int
adc
inc
dec
dec
jae
lret
add
pop
je
fisubl
cld
jl
inc
std
pop
or
mov
pop
mov
xor
xchg
push
js
call
push
or
or
mov
jge
movsl
adc
js
ds
dec
lahf
rcrb
lods
lret
sbb
sub
movd
push
xor
or
cltd
or
xchg
xor
out
mov
push
or
mov
and
push
sub
ss
outsl
fisubl
mov
inc
mov
and
dec
mov
loop
test
adcl
push
lret
and
aas
in
test
das
jle
inc
lahf
and
movsl
pop
xor
mov
push
xchg
xor
xchg
push
and
daa
inc
xor
xchg
imul
out
sahf
inc
xor
mov
out
inc
out
push
xchg
cmc
sub
cmp
inc
or
hlt
test
mov
cmp
inc
jge
jo
call
and
add
cmp
seta
mov
cli
in
mov
fsubrs
dec
dec
xor
testl
and
pop
or
enter
sub
fiaddl
hlt
call
je
repz
xchg
enter
mov
push
adc
pop
sbb
adc
mov
xor
pusha
xchg
sbbb
fildll
cwtl
nop
imul
test
or
adc
jne
aad
repnz
pushf
mov
js
test
dec
in
insb
addb
das
add
xchg
xorb
jne
mov
xor
or
sub
lock
and
and
or
xchg
inc
sbb
and
sub
je
dec
mov
test
pop
jmp
and
scas
loope
call
pop
sahf
add
cld
data16
and
push
mov
pop
and
xor
or
mov
add
jmp
and
lea
or
sbb
adc
cltd
lods
jns
mov
dec
sbb
inc
and
jmp
add
cmpsl
add
mov
mov
cmp
pushf
popf
insb
xor
dec
fwait
lret
mov
and
pop
xchg
inc
out
or
rolb
aam
jg
leave
mov
rcrb
scas
mov
xor
subb
imul
jl
push
sahf
or
mov
jnp
xchg
push
bound
jno
and
push
or
lods
pop
push
mov
cmc
adc
and
cwtl
mov
fsubl
sub
push
cwtl
inc
mov
xchg
xchg
jns
or
mov
adc
je
mov
movsl
jne
or
inc
push
lds
mov
sbb
sbb
dec
movsl
mov
cmp
mov
cld
insb
addr16
sbb
jl
dec
test
push
push
mov
xor
aas
and
movsb
inc
inc
add
mulb
add
mov
dec
test
je
hlt
out
ljmp
arpl
jmp
push
add
mov
call
ficomps
lods
std
xchg
mov
cmp
je
push
dec
ret
adc
cltd
push
adc
adc
sub
add
cmp
test
inc
jp
fcoml
das
rcrb
push
or
in
xor
mov
mov
nop
repz
add
and
repnz
pop
das
mov
movsl
lds
xchg
in
in
and
nop
sub
mov
adc
adc
adc
rcrl
adc
addr16
les
mov
imul
xor
and
pop
push
mulb
mov
sub
out
fs
jb
rcrb
adc
lock
fadd
mov
xchg
adc
lahf
push
repnz
rol
aam
daa
scas
scas
fs
out
arpl
and
sbb
dec
lds
xchg
jo
jmp
out
push
stc
adc
and
xor
and
xchg
or
imull
dec
loope
mov
mov
add
sbb
and
jecxz
and
sub
xchg
lret
mov
fcoms
popf
add
jnp
lret
imul
je
into
or
sub
sti
and
and
icebp
mov
out
mov
mov
adc
adc
loopne
jl
sub
je
sbb
inc
adc
or
mov
call
rorl
or
or
testb
aad
adc
enter
adc
push
sbb
sbb
dec
and
inc
sbb
imul
adc
mov
test
cmp
inc
or
push
dec
adc
mov
dec
xchg
je
cmpsl
les
add
jecxz
cmpsb
jl
adc
shlb
add
rorb
mov
jle
sbb
dec
dec
pushf
int
push
testb
test
pop
push
out
icebp
mov
cwtl
sbb
cmp
dec
rcll
or
test
fdivp
xchg
add
push
pop
jae
daa
lret
sbb
pushf
push
mov
rolb
lods
outsl
xor
in
push
dec
inc
pushf
aam
std
loop
push
add
sti
je
ljmp
lahf
inc
push
xchg
loop
fidivs
cs
loope
dec
mov
sub
shr
gs
mov
into
imul
mov
les
adc
frstor
mov
test
xor
and
arpl
je
add
fs
test
jne
insb
pop
inc
bound
test
adc
add
jecxz
lds
and
sbb
adc
sbb
cwtl
je
sub
jne
or
add
mov
fisubrl
clc
imul
in
push
inc
or
call
sbb
push
out
jp
jo
pop
dec
mov
int3
lret
push
movsl
mov
imul
add
xor
and
xor
test
in
mov
loopne
pop
push
dec
test
orl
in
call
add
dec
jecxz
xor
cmp
mov
sbb
and
mov
andb
in
out
out
ret
add
cli
dec
adc
xor
jmp
sub
mov
aas
mov
les
hlt
pop
inc
or
pop
cmp
je
arpl
push
stc
call
and
inc
inc
out
or
movb
adc
mov
mov
cs
sub
mov
jno
mov
int
sbb
push
mov
mull
mov
jne
movb
pop
cmp
shr
fdiv
push
pop
sbb
adc
sub
mov
orl
and
jne
mov
and
mov
add
jae
ljmp
pop
in
test
rorl
js
cli
dec
pop
pop
sub
push
and
or
mov
sbb
dec
xchg
dec
xchg
jne
xchg
and
mov
or
push
pop
jae
sub
dec
sub
jmp
sub
std
lds
test
dec
stos
sahf
mov
inc
mov
fdivrs
ret
xchg
loop
sub
stc
ret
push
mov
cmp
dec
loopne
and
xor
nop
dec
stc
or
sub
and
push
sbb
leave
or
xchg
mov
lret
imul
ljmp
lcall
mov
cmp
sub
or
push
push
shll
mov
add
imul
mov
lea
and
mov
mov
adc
mov
and
mov
adc
adc
xor
or
xor
inc
push
push
cwtl
jae
dec
in
mov
mov
and
in
xlat
dec
mov
inc
xorb
lods
xchg
hlt
add
add
adc
adc
call
je
mov
daa
call
adc
rcl
jne
and
adc
jle
adc
inc
jg
xchg
mov
xchg
mov
pop
mov
mov
fstl
imul
loop
adc
mov
mov
mov
leave
pop
and
shll
or
test
mov
cmp
cmp
xchg
leave
xor
mov
pop
cmp
mov
cld
int3
in
and
test
jg
leave
inc
sti
mov
rcr
in
push
rol
push
add
cmpsl
sti
xor
loop
jg
mov
insb
loopne
les
int3
push
jne
xor
mov
insb
arpl
xchg
xchg
ljmp
dec
andl
ljmp
int3
jo
adc
pop
adc
mov
or
dec
test
jecxz
lods
xchg
cld
ss
adcl
adc
adc
xchg
dec
push
ljmp
or
cmp
xchg
pop
push
and
sbb
xor
xor
test
lcall
or
pop
jl
loopne
xor
mov
sub
sbb
mov
push
dec
jle
mov
mov
lds
sbb
fwait
push
mov
or
mov
addr16
mov
add
test
std
imul
push
xor
test
jnp
and
add
mulb
hlt
pop
xor
cmp
xchg
mov
xchg
xor
xchg
sbb
aas
mov
sbb
les
std
repz
inc
xchg
lods
xor
and
lods
inc
mov
and
jl
add
sbb
inc
faddl
shll
outsl
jl
movsb
mov
jns
lock
test
hlt
lahf
pusha
adc
and
pop
scas
sub
incb
je
or
sbb
mov
rdmsr
mov
lods
pop
and
cmp
cld
je
push
dec
or
jo
call
dec
sti
mov
jle
cmp
stos
xor
imul
push
cmpsb
or
and
stc
shll
dec
jne
mov
test
jle
outsb
pop
mov
dec
xlat
sbb
dec
mov
mov
jnp
xchg
les
dec
mov
inc
push
dec
cltd
mov
jae
sub
daa
push
daa
loope
add
sbb
cmp
add
rcr
jp
inc
or
sbb
mov
inc
xor
imul
lahf
dec
test
mov
mov
bound
loop
int3
push
sbb
sbb
inc
js
adc
pop
push
outsb
mov
cmp
and
cmc
shrb
inc
push
stos
hlt
sti
or
or
ds
cmpsb
lret
movsl
jmp
into
ja
mov
lock
js
les
out
mov
xor
xchg
fldenv
and
inc
mov
mov
roll
std
das
cli
dec
push
and
outsb
sti
dec
push
mov
test
sub
movsl
ds
adc
inc
orl
inc
xchg
cwtl
mov
dec
das
inc
push
push
pop
mov
lds
xor
add
pop
test
scas
cmp
and
shlb
xchg
inc
jg
mov
jmp
push
movsl
push
fimuls
nop
jbe
push
sbb
and
xchg
dec
and
out
cmpsl
xchg
adc
in
jnp
lret
loope
loopne
stos
xchg
std
out
mov
hlt
jecxz
call
in
imul
mov
or
dec
leave
popa
dec
mov
mov
xor
xor
loope
adc
dec
mov
adc
pop
dec
pop
testb
pushl
inc
test
subb
imul
jno
pop
scas
iret
fs
cmp
into
xchg
cmp
inc
xchg
inc
adcb
dec
inc
mov
ljmp
or
mov
add
xor
cmp
sub
adcl
mov
in
jb
inc
lahf
adc
insb
movsl
and
inc
or
mov
call
jle
add
adc
sbb
dec
scas
sbbb
into
movsb
xchg
popf
and
mov
outsb
sub
add
leave
scas
cmp
jb
adc
jge
in
loop,pn
pop
pop
dec
hlt
xchg
fnstsw
mov
dec
cmp
sub
sbb
xchg
and
xlat
outsb
xchg
jle
enter
adc
lods
xor
and
cmp
jne
adc
insb
mov
pop
clc
jne
nop
shll
enter
and
and
push
push
push
mov
mov
scas
or
jb
fsubr
sbb
and
inc
cmp
scas
arpl
test
pop
fdivl
xchg
pop
dec
sbb
push
push
andl
lea
scas
inc
and
mov
in
fwait
lret
mov
das
sbb
xchg
push
test
cmpb
inc
jle
cmp
sti
and
pop
neg
and
jno
adc
cs
mov
jno
sti
cwtl
xchg
dec
sub
pusha
inc
aad
mov
fcompl
xor
xchg
and
sub
mov
or
xchg
dec
mov
test
push
insb
adc
bound
inc
shl
add
pop
repz
inc
sbb
mov
adc
mov
test
inc
add
leave
sbb
fcmovnu
mov
and
pop
sub
mov
in
mov
push
cmp
xor
jb
icebp
fcoms
and
and
add
lea
daa
xchg
mov
or
pop
scas
or
jno
dec
sarb
or
add
int3
fidivrs
jns
mov
in
and
int3
lahf
inc
mov
add
push
and
sbb
loope
mov
dec
idivb
push
inc
jne
pop
xlat
call
or
inc
inc
adc
stos
mov
and
insb
jmp
fbld
sbb
pop
orb
mov
sub
test
sub
or
imul
je
adc
mov
leave
leave
cmp
enter
dec
jne
jmp
mov
jp
mov
mov
push
sub
mov
popa
shll
pop
sbb
dec
mov
xchg
inc
inc
xorl
outsl
add
imul
pusha
pop
movq
sti
and
and
fldcw
xlat
pop
sbb
shrb
jne
and
in
imul
nop
jle
pusha
in
in
in
test
das
sahf
xchg
inc
push
in
xchg
icebp
jp
or
xchg
aad
jns
cld
xor
cmp
fnop
dec
outsl
and
lret
mul
stos
inc
or
dec
add
or
outsb
dec
inc
les
mov
xchg
loopne
ret
shrb
or
movd
jnp
or
cmp
jne
dec
lock
pop
sbbl
stc
call
sar
nop
and
popa
jecxz
or
fdivrs
push
xchg
ss
xor
jns
add
ret
lods
adc
jmp
sbb
pop
test
enter
pop
insl
stos
adc
rcrb
sbb
js
mov
adc
add
nop
cmp
inc
inc
adc
shl
cli
pusha
push
and
nop
cmc
push
int3
mov
pop
push
xor
inc
sahf
popa
in
cmp
push
lds
adc
aad
mull
nop
cmp
cmp
or
add
nop
cmp
arpl
mov
mov
mov
mov
cmpb
and
mov
inc
jne
cmc
or
ja
and
je
das
or
cli
xchg
pop
mov
push
nop
cmp
les
stc
adc
and
dec
xor
or
filds
pop
and
mov
mov
jmp
test
jp
add
mov
and
push
dec
or
inc
mov
push
mov
inc
add
xorl
mov
jge
pop
ljmp
jecxz
mov
push
in
dec
enter
call
cmpsb
add
jp
pop
in
and
and
push
js
dec
cmp
mov
inc
dec
and
cmp
outsl
jne
out
mov
adc
mov
aam
mov
jmp
and
cmc
or
xor
cmp
nop
and
daa
inc
inc
aaa
jns
orl
cmp
mov
std
xchg
or
js
cmp
rcll
ds
sbb
jle
jae
imul
inc
add
cmp
fcoml
inc
jne
adc
out
andl
dec
pusha
mov
adc
jns
call
xor
lcall
push
loopne
jmp
adc
fidivl
mov
xchg
sub
inc
inc
shll
jmp
outsb
jno
dec
mov
fimuls
mov
aas
or
adc
test
mov
inc
mov
insl
pop
inc
call
daa
loope
jno
outsl
pop
xchg
imul
mov
cld
cmp
push
movsb
adc
xchg
cmp
ret
add
jbe
or
adc
std
cwtl
xchg
enter
pop
lea
or
stos
mov
rolb
int
das
out
adc
dec
mov
movsl
aaa
into
sbb
add
cs
mov
int3
dec
jo
or
enter
jne
inc
mov
and
add
andb
clc
and
pop
and
cwtl
adc
mov
je
int
sbb
xchg
scas
pop
and
adc
aaa
orl
or
mov
test
cmp
or
xchg
adc
movb
jne
sahf
cmp
xor
leave
test
cmp
int3
mov
fldenv
mov
dec
cwtl
leave
sbb
or
mov
shlb
inc
and
adc
dec
dec
push
push
jge
or
or
jae
test
push
inc
or
adc
cld
or
clc
jl
inc
stc
movsb
xchg
cmp
and
xchg
jmp
pop
cmp
add
fdivrs
mov
sbbl
mov
or
test
xchg
mov
mov
pop
adc
fildll
jg
and
inc
fs
and
std
mov
dec
cmp
push
dec
imulb
mov
sarl
jns
dec
sbb
mov
daa
jmp
jnp
mov
les
sbb
xor
sti
mov
sbb
cli
data16
cmp
orl
lods
leave
ret
adc
clc
ds
or
lds
cld
lret
mov
and
mov
mov
mov
mov
in
in
testw
adc
je
lret
jp
lahf
adc
inc
sbbl
movsb
sub
idivb
cwtl
lret
add
data16
dec
adc
lods
bound
pop
or
aad
pop
std
clc
scas
and
push
pop
sbb
dec
pop
cs
and
in
pop
pop
or
or
imul
xchg
decl
es
add
inc
and
lret
stc
lea
xchg
into
push
push
jp
jnp
pop
and
jge
add
enter
sub
pmullw
stos
pop
pop
xorb
in
sub
test
xor
mov
out
leave
es
add
push
inc
xor
sbb
nop
and
int3
fsubrl
cmp
inc
and
xchg
stc
sbb
scas
push
nop
aad
push
cltd
gs
push
dec
lods
mov
rcll
pushf
addl
jo
fsubrs
jge
adc
pop
movsb
jmp
setl
nop
and
pop
out
pop
ss
push
lea
dec
pop
mov
loopne
shll
jge
movsl
test
addr16
loop
sbb
jne
mov
and
inc
dec
movsb
das
movsl
dec
sar
js
add
or
jmp
sub
pmulhw
in
pushf
repnz
adc
mov
mov
nop
mov
adc
push
fimull
pop
fwait
repnz
arpl
and
out
xchg
mov
ljmp
sub
and
and
inc
add
adc
cld
xor
fisttpll
in
mov
cli
ret
adc
pop
adc
push
loop
fnsave
loope
or
adc
movsl
ret
dec
subl
inc
or
jle
clc
add
test
andl
bound
inc
xchg
dec
cld
popa
xor
pusha
jp
pushf
push
addl
insl
lock
test
inc
lock
lea
clc
and
outsl
add
push
mov
in
mov
jge
or
popa
xchg
fmul
add
shll
ret
jle
bound
adc
gs
dec
daa
push
js
pop
enter
push
les
mov
jmp
pop
push
push
adc
adc
pop
lds
xor
xor
adc
mov
adc
xor
sbb
mov
jmp
pop
clc
mov
enter
or
pop
and
fs
and
daa
push
lret
iret
mov
fnstenv
adc
cmp
xchg
and
bound
aam
or
adc
cld
push
std
adc
mov
adc
in
fdivl
push
jae
cld
jp
nop
sbb
stos
sub
fsubr
sub
sbb
outsl
jecxz
adc
sahf
das
in
rolb
notb
pusha
xchg
sbb
stos
iret
ljmp
pop
xchg
xrelease
push
pushf
dec
add
push
js
adc
jle
push
adc
in
sub
mov
jbe
cmp
jne
push
inc
std
mov
sbb
mov
cs
ret
jle
inc
rcr
push
mov
or
call
hlt
mov
adc
and
andb
sub
sbb
mov
subl
aam
push
xchg
cmp
je
mov
or
fs
jbe
sub
jecxz
dec
loop,pn
and
pop
adc
mov
popa
xor
fsubs
sub
inc
mov
xchg
sbb
jnp
xchg
insb
shl
cli
sbb
jle
rorb
icebp
outsl
push
pop
imul
stos
jge
lods
sbb
xor
add
fisubs
js
pop
push
rclb
imul
insl
xchg
add
std
and
leave
push
add
into
fisubs
and
arpl
jns
enter
popa
fcomip
enter
rcr
add
mov
mov
cmpsl
test
sub
and
mov
dec
xor
mov
mov
stos
and
and
or
ljmp
pop
pop
add
adc
test
cld
and
aas
and
jg
and
ljmp
xor
dec
das
xchg
or
mov
lds
xchg
addr16
push
pusha
in
dec
or
cli
stc
cmp
hlt
push
inc
inc
jb
push
dec
jo
jo
push
dec
dec
les
adc
es
or
stos
inc
jmp
aam
lret
fsubl
es
adc
xchg
popf
xor
aas
call
and
lahf
push
sbb
xchg
add
adc
push
inc
js
push
push
call
ja
xor
push
push
adc
lods
ja
mov
mov
leave
push
jg
inc
fnstsw
jo
dec
pusha
and
loop
cmpsb
pop
xchg
jl
into
sub
xor
cmp
and
subb
xchg
test
and
adc
mov
call
push
and
dec
push
push
aad
adc
daa
push
xchg
push
or
add
or
jecxz
sahf
pusha
mov
nop
adc
out
and
inc
push
inc
nop
sahf
loope
pop
repnz
sbb
in
adc
sbb
sbbb
adc
iret
adc
mov
ds
sti
mov
add
dec
jl
xchg
fdivr
andb
loope
leave
nop
push
lcall
aad
pusha
test
push
pop
rsqrtps
sbb
jle
daa
sub
mov
stos
pop
jmp
imul
mov
and
jns
jo
mov
adc
push
out
mov
cld
setge
mov
and
pop
inc
adc
inc
jp
aam
ja
and
adc
sbb
push
insl
fldenv
insb
out
xor
enter
enter
movsl
mov
sub
xor
lock
mov
inc
das
pop
je
icebp
jge
hlt
in
bound
mov
xchg
cs
mov
cld
inc
cld
sbb
pop
sub
nop
mov
xorl
jnp
fdivrl
dec
sbb
cmp
repnz
fs
pop
fsubp
pop
mov
pop
adc
mov
and
sub
enter
and
or
iret
stos
test
cltd
push
imul
sub
nop
loopne
call
fsts
pop
push
pop
push
add
bound
aam
ret
pop
or
push
hlt
aas
jnp
jb
rorl
or
jo
push
dec
sbb
or
pop
or
rcl
sbb
and
or
sbb
popa
orl
vmovsd
fstp
sarb
push
jb
adc
jmp
ljmp
cmpsb
test
daa
add
inc
jmp
add
or
xor
dec
aam
cmpsb
or
nop
adc
cwtl
push
jmp
fcoms
pop
push
mov
dec
mulb
push
mov
adc
test
xchg
scas
popa
inc
in
add
loopne
mov
test
in
jmp
or
xor
xchg
adc
sbb
cmpl
mov
xor
cli
in
int3
icebp
pop
inc
add
adc
pusha
dec
sbb
or
sbb
and
bound
movsb
mov
out
fwait
or
out
jb
jl
pop
or
mov
dec
add
daa
shrb
cmpsb
dec
sub
mov
mov
ss
dec
and
xor
inc
test
addl
shr
adc
or
cmp
int3
cmp
or
lahf
hlt
push
inc
or
js
xchg
sub
inc
mov
or
sbb
sub
daa
cmp
daa
push
movsb
lret
cmp
in
clc
test
shll
sti
fs
xor
jge
call
adc
pushf
jne
and
sahf
nop
xchg
out
js
dec
push
out
adc
mov
adc
mov
rdmsr
xor
or
or
adc
out
mov
pop
add
xchg
or
and
ds
and
push
ret
mov
jb
shll
je
jp
and
cli
pop
jno
in
out
ret
out
adc
dec
fsubr
or
and
out
jno
xchg
fistpl
sub
xchg
in
out
adc
sbb
adc
push
rclb
jg
adc
add
out
loop
incb
cmpsl
mov
sbb
arpl
stos
xor
jmp
les
mov
adc
mov
sbb
xchg
mov
add
inc
jne
les
dec
jo
pop
in
cmp
push
push
mov
or
ds
int3
je
jle
and
or
cmp
pop
sub
loop
adc
sub
js
rolb
pop
push
cwtl
cmp
and
xchg
dec
jp
cmp
pop
outsb
enter
mov
ret
into
dec
inc
inc
mov
loope
xchg
iret
enterw
hlt
jmp
xor
aam
divb
jl
cmp
cmp
cmp
repz
data16
inc
jmp
and
xchg
sub
cs
aas
inc
push
jns
push
dec
add
sbb
add
or
push
sbb
bound
popa
add
jg
cmp
sub
push
push
pop
push
push
ljmp
sub
dec
test
pop
decl
inc
pop
jo
pop
inc
pop
outsl
xchg
jg
jl
xchg
add
or
inc
and
xor
jb
pop
dec
add
push
test
fs
nop
pop
or
std
jno
cmpsl
adc
mov
dec
adc
lods
sbb
and
jo
psubw
mov
push
psubb
inc
adc
adc
or
aam
rcrl
sbb
mov
mov
dec
cld
adc
push
push
pop
jo
push
sbb
mov
and
pop
xchg
adc
xchg
cltd
jae
push
and
add
pop
ss
add
or
dec
outsb
popa
jo
testb
loop
jns
and
push
cld
jge
sti
sub
push
adc
push
gs
iret
stc
enter
xchg
xchg
test
mov
dec
xchg
xchg
inc
das
in
sub
xlat
nop
cmp
cs
pop
sahf
lea
mov
push
movsb
sti
mov
pop
or
pop
cld
mov
add
sbb
jbe
mov
pop
cmp
cs
mov
mov
xor
push
hlt
or
fsubrl
loopne
ss
mov
stc
mov
or
pop
or
pop
in
xor
cmpsl
insb
dec
dec
or
pop
pop
adc
movsb
fdivs
lcall
lock
or
push
mov
xlat
mov
mov
mov
mov
or
sbb
cs
push
test
mov
mov
jg
and
sub
or
cli
sub
adc
add
lods
scas
add
pop
cld
pop
adc
insb
add
test
mov
scas
xor
push
adc
inc
adc
inc
adc
mov
inc
out
dec
outsl
and
fwait
mov
mov
std
mov
mov
adc
inc
xchg
call
insb
loop
add
sahf
cmp
cmp
cmp
dec
mov
daa
cmp
nop
and
test
ljmp
movsb
ret
inc
sub
clc
popf
sub
xor
shlb
mov
sbb
adc
je
xor
jg
push
jl
decb
pusha
je
test
cmp
cmp
sub
adc
cmp
inc
adc
rcr
stc
aas
fstpl
fwait
cmp
jge
mov
jbe
inc
out
adc
inc
cmp
inc
insl
or
enter
lock
dec
adc
jle
dec
inc
jl
xor
pop
daa
adc
stc
jo
add
push
or
lcall
sub
jmp
push
adc
adc
jns,pn
aam
and
adc
mov
fs
or
add
call
jmp
fs
xchg
cmp
dec
repnz
mov
adc
mov
sti
enter
jl
inc
mov
fistps
add
out
push
xor
lahf
xchg
xorb
jnp
cmp
push
sti
mov
ret
jmp
and
mov
out
test
jo
jge,pn
sub
or
inc
jne
sbb
outsl
cmpb
and
mov
dec
stos
ret
add
scas
rorl
dec
cmpb
jge
add
add
add
aaa
cmpb
jbe
inc
lsl
cmp
mov
sbb
push
push
mov
mov
pop
push
pop
mov
aad
pop
test
cld
pop
or
test
and
adc
mov
mov
rorb
inc
cmpw
inc
push
adc
push
jmp
cmp
sub
xlat
sbb
je
das
xchg
jo
mov
adc
jl
xor
cmc
scas
mov
test
inc
jp
pop
xor
jne
divl
pop
loope
decb
sub
sub
push
dec
pushl
and
inc
dec
and
movsl
jo
clc
adc
lds
das
loopne
mov
sub
cmp
sub
cs
pop
or
hlt
cmpsb
out
fs
inc
je
xchg
in
jmp
mov
adc
push
insb
jnp
stc
test
incb
push
inc
adc
call
adc
ret
jns
inc
xor
cmp
mov
daa
jg
xor
push
js
adc
mov
sbb
test
jge
and
add
pop
pop
inc
push
les
sub
setno
mov
in
dec
push
or
lods
xor
inc
pop
inc
jg
cmp
insl
test
mov
mov
pusha
lcall
mov
mov
or
jge
gs
fnsave
sub
pop
out
shll
push
mov
mov
test
dec
fistpll
cld
data16
pop
xor
pop
bound
xchg
mov
jne
sbb
inc
mov
inc
mov
adc
add
aam
test
enter
pcmpgtb
pop
jecxz
mov
sbb
adc
add
cltd
adc
or
dec
dec
pop
push
xor
ljmp
movsb
hlt
add
sub
loope,pt
push
imul
inc
push
scas
popa
ja
cmp
rorb
and
inc
rcrb
imul
test
push
clc
jle
cmc
cmp
inc
aam
loopne
push
iret
fadds
test
sti
cmp
mov
inc
dec
push
push
add
inc
ret
mov
and
enter
inc
or
test
sbb
cli
and
jne
imul
add
xchg
hlt
inc
imul
jno
push
or
sub
jb
popf
ds
push
lcall
jmp
xchg
mov
lds
lock
pop
movsb
iret
out
and
jnp
xor
fnsave
sub
movsl
or
xchg
jmp
dec
call
jne
dec
mov
push
and
hlt
push
mov
into
fdivr
ret
jecxz
and
add
cmp
movsb
push
out
mov
push
cmpsl
sbb
or
mov
adc
cltd
xchg
xchg
or
mov
ret
lds
mov
pop
ret
movl
push
hlt
adc
jmp
and
xor
pop
jg
stos
adc
sub
addr16
mov
inc
mov
mov
push
andl
push
das
dec
ja
push
cmp
inc
pushf
fnsave
mov
xchg
push
mov
leave
inc
ficoml
mov
cmp
pop
scas
push
in
xor
mov
jmp
enter
or
push
ljmp
es
inc
xchg
call
pop
cmp
mov
hlt
call
aaa
sub
push
dec
push
insb
cmpsl
in
and
int
or
sbb
jmp
push
cmpsl
ficompl
pop
enter
ficompl
addr16
cmp
call
dec
rcl
dec
cmp
pop
mov
cltd
jl
or
enter
mov
unpcklps
push
out
jbe
inc
inc
add
mov
dec
cli
push
push
or
out
inc
and
sub
lods
dec
mov
enter
mov
push
cmpb
inc
scas
mov
sbb
and
cmp
aas
pushf
mov
mov
cwtl
int3
pop
xor
mov
xchg
jmp
data16
or
sbb
or
xor
inc
sub
les
mov
inc
xchg
fsubs
push
or
xchg
jae
rorb
inc
cmpb
cmp
cli
pushw
xor
push
and
mov
lea
mov
xchg
lcall
lahf
cmp
pop
or
inc
aas
push
dec
cmp
jns
nop
cmp
inc
xchg
out
mov
xor
and
stos
ja
pop
cltd
and
jne
xchg
call
adc
xchg
and
jg
test
cmp
mov
movsl
pop
mov
sub
insb
loope
xchg
ret
and
les
push
jb
add
dec
jno
sbb
push
cmp
sub
icebp
lahf
or
sahf
jnp
push
xchg
pop
loop
xor
xchg
jmp
fiaddl
sbb
shrl
mov
data16
or
movl
adcl
cld
scas
cmp
jo
xchg
rcll
or
or
fisubl
push
lahf
stc
adc
and
movl
gs
dec
push
push
loope
or
mov
je
inc
call
jge
rclb
mov
scas
and
mov
insb
adc
movlps
pop
adc
xor
dec
or
das
mov
inc
adc
lds
je
hlt
loop
mov
xor
aas
lock
cmpsl
jp
das
test
and
insb
or
adc
mov
ljmp
push
mov
pop
mov
repz
out
or
call
and
jb
je
adc
cld
adc
cmpb
or
mov
mov
sbb
inc
sub
xchg
mov
leave
in
and
es
movsl
loope
cmp
sar
pop
lret
cs
call
outsb
hlt
es
dec
pop
in
inc
xchg
out
cmp
out
push
push
sbb
cmpsb
sbb
adc
test
jb
dec
cmp
or
xchg
xchg
pop
xchg
incl
and
inc
fsubrs
mov
sub
push
mov
sub
ljmp
fdiv
cli
ret
testl
mov
iret
dec
inc
push
sub
pushw
in
and
lcall
push
les
pop
test
inc
or
inc
lods
cmp
sub
bound
mov
jne
dec
inc
adc
test
cmp
das
repnz
mov
push
adc
je
sbb
xor
cmp
loop
mov
orb
nop
arpl
movsl
shrl
inc
testl
push
push
lock
add
test
ret
int
push
push
outsb
cmp
jnp
push
lods
pop
inc
push
not
movsl
test
sub
stc
adc
out
or
cmp
inc
fistpll
adc
pop
hlt
mov
pusha
or
or
and
cwtl
push
dec
cmp
test
or
movsl
sub
sbb
jnp
jne
adc
xor
call
dec
inc
movsb
or
xchg
stos
int3
xchg
push
dec
xor
xor
sub
dec
sub
sbb
daa
adc
jno
xchg
push
dec
test
enter
inc
dec
mov
popa
gs
and
add
imulb
and
leave
cld
add
xchg
pop
dec
out
into
call
jmp
jne
insl
sahf
mov
jns
dec
popa
cmp
icebp
jle
bndstx
push
mov
jne
popa
push
mov
and
xor
adc
repnz
movl
add
inc
mov
je
jl
cld
call
sub
sub
ss
push
add
and
std
in
jbe
pop
data16
ljmp
repz
sub
xchg
sub
inc
add
mov
xor
or
mov
call
sarb
cmpl
pop
push
lret
mov
arpl
movsb
mov
lods
inc
cmp
scas
dec
push
xor
mov
mov
or
inc
call
xchg
cmp
pop
not
int
and
lods
sarl
mov
jmp
or
xchg
sbb
dec
adc
enter
cmpsb
sub
add
bound
pop
pop
negl
shrb
jns
push
test
push
xchg
testb
aas
ja
sbb
mov
imul
imul
in
jmp
adc
inc
adc
adc
and
or
mov
decl
mov
adc
dec
add
dec
jns
ljmp
mov
pop
clc
dec
stos
push
adc
in
xchg
aad
and
and
push
roll
inc
pop
jmp
mov
mov
or
jne
cmc
or
je
insb
push
rorl
jmp
mov
aas
adc
or
and
adc
mov
push
inc
dec
call
je,pt
jecxz
adc
mov
push
sbb
icebp
push
or
dec
cltd
dec
jb
nop
scas
inc
icebp
mov
xchg
or
or
xlat
jns
mov
fcoms
fsts
mov
call
mov
adc
and
call
je
icebp
xor
push
adc
xchg
ljmp
fs
push
sbb
or
mov
add
adc
daa
mov
jg
push
ret
pop
add
sbb
sbb
bound
aas
push
add
cmp
sub
sbb
in
dec
dec
jmp
pop
inc
fnstenv
rolb
push
and
inc
fs
adcb
aas
inc
add
mov
insl
lea
ja
inc
test
sbb
bound
ret
dec
and
xchg
rcrb
sub
aad
dec
sbb
xchg
in
and
or
jmp
je
or
push
movb
mov
rcrb
sub
bound
mov
mov
into
jp
jo
inc
test
inc
lea
test
cwtl
outsl
jmp
je
sbb
es
inc
cmpsb
mov
js
push
iret
scas
aam
or
je
fisubrl
negb
pop
jp
popa
mov
push
notl
adc
adc
sub
xchg
nop
sub
pop
js
add
mov
stos
mov
or
sub
test
jne
mov
mov
jmp
inc
aaa
inc
xchg
pop
nop
adc
lret
push
fs
sub
test
dec
xchg
loop
mov
fistl
mov
jmp
sbb
push
stos
push
pop
xor
push
and
dec
mov
xchg
inc
cwtl
jl
fmull
test
adc
addb
mov
pop
dec
sarl
shrb
lds
cmp
push
sbb
or
je
mov
and
test
sbb
test
das
jmp
cmp
bound
fucomp
out
loope
adc
into
add
rcll
adc
push
push
inc
sub
shr
dec
loope
xchg
dec
xchg
xchg
add
mov
sub
mov
dec
add
inc
cmp
mov
sub
adc
xchg
inc
mov
push
xchg
icebp
xchg
mov
movsw
pop
lcall
pop
iret
inc
inc
cmpl
mov
sbb
ja
sbb
cmp
jge
mov
xchg
mov
mov
jno
test
xchg
mov
cwtl
sbb
cmp
mov
jmp
fists
shr
cs
adc
sub
mov
push
cmp
test
pop
cmp
sub
jge
rorl
adc
and
mov
cmp
add
pop
je
xlat
aam
add
sub
shrb
ret
add
or
mov
push
lea
jmp
call
sti
sub
hlt
mov
icebp
in
adc
jge
push
into
in
push
and
cmp
je
cmp
lret
out
je
mov
mov
xchg
sbb
pop
lock
sub
and
popf
or
stc
mov
dec
xchg
outsl
dec
lock
loope
call
mov
mov
mov
cld
xchg
mov
adc
insb
lcall
sub
pop
xchg
inc
sbb
sbb
loop
mov
rcll
mov
adc
mov
and
and
or
test
mov
daa
or
pop
adc
push
negl
xchg
cmpl
xor
pushf
sbb
push
bound
mov
stos
mov
inc
push
and
adc
sub
test
sbb
call
pop
or
mov
and
outsb
inc
push
in
enter
or
inc
daa
mov
xor
mov
xor
movsb
or
lahf
pop
add
and
inc
and
mov
popa
faddl
and
enter
add
xorb
cltd
xor
or
cmp
adc
or
dec
ret
imul
lods
inc
pop
imul
adc
jae
aas
push
insb
int
sub
mov
cmp
mov
je
dec
xor
pop
or
les
arpl
jg
mov
lods
jae
and
movsb
jl
popf
dec
jns
scas
sbb
dec
dec
jo
std
daa
flds
or
or
jmp
clc
adc
push
test
imul
pop
push
lods
and
mov
and
or
leave
sub
jne
or
inc
stc
pop
jmp
jge
notl
movsl
jmp
fidivl
fbstp
lret
setns
push
pop
push
cmp
push
adc
pop
cmp
xor
inc
push
popa
xchg
mov
outsl
sti
sbb
inc
ja
or
imul
adc
jo
test
push
adc
lret
cmp
ja
dec
imul
mov
adc
cmp
adc
xchg
je
mov
inc
pop
mov
arpl
add
adc
aaa
dec
and
jne
push
inc
adc
jns
push
push
dec
mov
xlat
inc
and
inc
jno
push
push
cwtl
arpl
lock
out
fidivl
es
sbb
adcb
add
or
xchg
adc
and
lods
inc
or
sbb
cltd
cmp
in
js
adcl
inc
test
arpl
adc
push
push
push
out
xorl
fldcw
or
push
scas
mov
add
or
dec
inc
dec
scas
sbb
dec
and
sub
sbb
adcl
clc
sbb
iret
test
and
xor
test
add
and
or
movsb
loopne
lahf
mov
jo
inc
je
inc
jle
test
in
lcall
je
ljmp
test
or
inc
call
xchg
sub
xchg
inc
push
push
adc
sub
ficoms
lods
arpl
jb
test
or
jecxz
dec
in
inc
subb
mov
pop
and
mov
out
dec
and
or
lret
test
test
pop
push
xchg
dec
movsb
cs
stc
or
and
movsl
pop
add
daa
pop
sub
pop
mov
clc
jne
mov
lcall
or
and
in
dec
ljmp
or
inc
push
stos
gs
ljmp
mov
adc
add
inc
add
mov
addr16
add
ljmp
jmp
jbe
xor
icebp
xchg
inc
mov
pop
sub
adc
adc
push
cwtl
pop
dec
stc
adc
or
push
jns
rorb
daa
fs
repz
sahf
and
push
pop
call
pusha
push
inc
test
imulb
push
inc
dec
insb
setb
sub
sub
or
jmp
sub
call
cmpsb
sub
shlb
and
xorb
pop
pop
clc
and
rclb
and
push
xor
push
xor
cmovnp
add
dec
pop
fdivrs
jne
ja
test
incl
call
add
mov
cmp
or
mov
push
call
pop
sbb
adc
call
xchg
mov
mov
test
cmp
fdivs
add
push
jle
mov
inc
mov
in
addr16
inc
fstpl
cmp
sti
xchg
push
loope
jnp
leave
in
cmp
sahf
sbb
adc
adc
jne
cmpl
dec
cs
mov
mov
sub
clc
inc
sub
loope
cmp
pusha
cmpsl
sbb
mov
mov
push
pop
push
enter
push
lods
lret
xor
fistpl
ds
int
jns
cwtl
out
mov
repz
rcrl
xor
dec
inc
test
xchg
inc
xorl
out
cmp
jnp
gs
sbb
mov
add
sub
pop
pop
xchg
hlt
or
adc
inc
cmp
imul
adc
sti
daa
mov
hlt
mov
jmp
cmp
ljmp
inc
addb
jge
mov
in
push
sub
mov
fnclex
fldcw
sub
dec
or
jmp
fstpl
mov
adc
hlt
fsubrl
push
cld
out
loope
push
pushf
pop
inc
mov
cmc
gs
pusha
inc
dec
or
sub
inc
push
push
mov
adc
fs
mov
mov
cmp
fadd
jo
and
lock
xor
imul
cmp
dec
jne
cmpl
push
or
push
cmp
xchg
push
sub
or
sbb
ljmp
scas
pop
movsl
sbb
std
pop
or
mov
xchg
dec
inc
and
repz
jl
xor
mov
push
jno
ret
sbb
xlat
push
lahf
xor
shrl
mov
or
xor
adc
rorb
aad
mov
incb
jb
ljmp
call
ret
add
inc
dec
jl
and
adc
clc
fwait
or
cmp
testb
je
jns
sub
or
dec
add
pop
ja
or
jmp
int3
or
sbb
icebp
and
inc
or
jbe
test
mov
lds
inc
dec
cmp
call
roll
push
stc
adc
in
cmp
and
filds
inc
sbb
inc
push
or
sbb
adc
mov
jp
dec
push
aam
cld
mov
inc
jne
shrb
cmp
loope
rorl
dec
pop
vpcmov
daa
int3
movb
movsb
test
test
push
inc
aam
adc
mov
mov
xchg
sbb
pushf
xor
cltd
xchg
or
daa
push
push
or
add
nop
hlt
pop
inc
daa
push
cwtl
jecxz
and
mov
push
fnstsw
incb
xor
push
imul
pop
pop
inc
mov
push
in
mov
xor
or
stos
test
aaa
jo
jg
clc
inc
mov
mov
mov
enter
mov
es
jecxz
movsl
inc
or
fcoms
fs
pop
aam
jne
scas
mov
cmp
gs
int
int
xchg
push
lock
sub
leave
inc
mov
add
shl
call
mov
mov
mov
jae
xchg
sbb
adc
in
or
or
cmpb
jmp
adc
sbb
push
add
mov
pusha
call
dec
add
and
movsb
clc
repz
arpl
enter
ret
out
pushl
int3
clc
or
add
hlt
in
adc
inc
and
shll
sbb
scas
call
js
push
adc
rcrl
dec
mov
jo
inc
test
adc
cmpb
mov
jmp
or
loopne
movsb
cmp
jo
shlb
enter
and
leave
pop
dec
pop
mov
rolb
pop
clc
fiadds
bt
jae
mov
push
or
inc
stc
xchg
push
adc
bound
scas
cs
sub
test
pop
and
xchg
xchg
and
and
sbb
loopne
add
gs
cmpb
push
movsb
in
mov
sub
or
test
and
inc
into
dec
or
add
jns
imul
and
xor
in
push
and
and
insb
sbb
or
jp
jbe
fsubl
and
and
addl
dec
sbb
pop
loopne
pop
fistps
xor
pushf
clc
cwtl
pushf
bound
dec
xorb
clc
es
lods
mov
int
les
orl
arpl
int3
add
sbb
decb
icebp
jmp
mov
xchg
fnstcw
sbb
adc
cs
push
lahf
push
mov
adc
lods
inc
cld
fmuls
test
jne
mov
sbb
sub
dec
inc
outsb
dec
rolb
cmp
addl
mov
xchg
adc
sub
out
xor
push
adc
dec
adc
mov
daa
adc
in
stos
lods
cmp
cmp
ja
mov
dec
pop
je
mov
call
out
adc
jnp
cmp
jle
adc
jne
or
ds
lea
push
pop
nop
sub
bound
idiv
xchg
mov
sub
jbe
sbbb
adc
cmp
out
imul
inc
sub
movb
or
xchg
pop
or
mov
and
inc
sub
xchg
dec
jb
push
inc
mov
xor
mov
add
and
sub
int
lods
and
push
xchg
xor
xchg
sub
xor
loope
dec
adc
mov
fiaddl
shlb
push
push
call
push
les
dec
stos
mov
das
test
lea
ret
dec
mov
rol
rcl
outsl
std
cs
sub
xchg
xchg
insl
ds
or
decl
pop
push
movl
pmaxub
out
insl
mov
jmp
cmp
aaa
popf
xchg
test
sbb
fs
sbb
fdivrs
mov
leave
or
test
dec
ret
lods
sub
adc
dec
or
xor
pushf
cltd
xchg
mov
imul
loope
fdivrs
mov
lods
cmpsb
rcl
int3
mov
fmuls
lods
adc
clc
int3
mov
inc
shlb
dec
inc
or
or
jb
pop
jne
imul
xor
mov
js
push
cld
loopne
inc
add
mov
test
lahf
mov
sub
inc
hlt
add
clc
add
pop
cwtl
inc
fdivs
pop
adc
and
int
sub
in
pop
stc
loop
test
int3
adc
or
inc
ss
jo
jl
xchg
les
dec
xor
jge
xor
dec
cmp
inc
cmp
xchg
cld
xor
sbb
lock
xor
push
adc
movsb
push
mov
xchg
jns
inc
fcoml
sub
jl
xchg
movsb
jb
sub
sbb
or
arpl
int3
xor
dec
mov
fnstenv
or
nop
dec
jae
sub
or
dec
jnp
stc
sub
insl
mov
dec
pop
cmp
push
push
pop
mov
clc
movsb
jb
lods
push
mov
or
jno
loopne
push
test
push
xchg
xlat
movsl
cld
lea
pop
sbb
sub
es
jns
push
adc
insb
pop
out
adc
cltd
push
sub
mov
scas
xor
sbbb
xchg
call
in
jl
fs
mov
mov
cmp
jne
rcll
daa
cli
mov
cs
fsts
ret
jo
xor
movups
add
dec
xchg
les
stc
inc
cwtl
push
or
xor
and
sti
inc
ja
adc
pop
nop
cmp
sbb
inc
pop
loop
fdivrs
pop
popa
aas
sub
and
addr16
mov
shlb
and
xchg
xor
pop
loopne
clc
dec
sti
scas
pop
mov
sti
push
ss
adc
insl
mov
add
cmp
aam
pop
js
movsb
cmp
jle
aas
cmp
rolb
and
lret
inc
cmp
add
repz
cmp
sub
xor
fstl
dec
push
and
movq
mov
in
nop
push
testl
call
sub
adc
lea
mov
sub
das
xchg
mov
inc
or
xor
ficomps
sub
inc
std
stos
mov
das
jl
bound
sbb
loop
and
inc
push
mov
xchg
mov
mov
cmp
and
and
mov
add
add
jne
mov
rcll
sbb
stos
inc
push
in
mul
adc
jne
int3
xchg
hlt
cwtl
or
nop
aad
movsb
cs
out
dec
rcrl
mov
sbb
lods
and
lock
jbe
cs
inc
mov
or
adc
shlb
xor
add
and
and
call
jp
test
xor
sub
or
xor
adc
or
mov
mov
xor
leave
jno
call
jle
and
or
adc
and
xor
pop
pop
pop
gs
dec
jecxz
outsl
test
dec
dec
sbb
mov
jns
and
adc
mov
movsl
lods
out
jb
sub
inc
dec
outsb
xchg
inc
gs
mov
test
adc
pop
orb
or
add
fdivrl
nop
jmp
xchg
add
add
data16
fmuls
hlt
inc
cmp
or
or
and
inc
dec
in
or
insl
mov
mov
dec
scas
jb
sbb
add
add
arpl
adc
push
hlt
call
subb
xor
adc
popa
insb
rcll
inc
mov
mov
add
pop
cmpsl
push
addr16
sahf
cmp
cmp
adcl
lock
and
mov
or
push
sbb
inc
sbb
loop
sub
test
adc
mov
jl
and
cmovne
jae
cs
pop
mov
sahf
mov
adc
and
cli
and
cs
or
xor
add
clc
dec
or
cmp
adc
mov
mov
imulb
fs
add
mov
mov
jle
test
add
fiadds
das
rorl
sarl
sub
in
jne
in
and
call
xchg
sti
inc
push
call
jno
dec
lods
shr
inc
sub
cmpsl
pop
xchg
push
cmpsb
clc
push
call
ss
push
mov
jmp
xchg
xchg
pop
testl
and
sbb
inc
lods
gs
lock
adc
add
jg
in
int
sub
cmpsb
leave
fstpt
add
cli
pop
sahf
mov
add
push
enter
xor
out
pop
fmuls
scas
out
maskmovq
imull
add
mov
dec
aam
add
add
rorb
adcb
pop
and
int3
pushl
aam
fsubl
in
sbb
out
push
rorl
or
cmp
clc
cmc
in
inc
sub
data16
or
dec
fldcw
sub
push
cwtl
out
jl
test
call
cwtl
and
jmp
test
movsb
push
dec
hlt
sbb
add
mov
and
inc
es
repz
mov
test
rclb
les
lret
push
lahf
aas
xor
negl
scas
stc
in
and
pop
in
push
arpl
or
and
xchg
in
std
or
sbb
leave
mov
pop
inc
cmp
idiv
repz
mov
je
dec
or
lods
adc
sub
fmull
lcall
js
adc
sub
cltd
call
call
lret
dec
ficompl
sahf
int3
inc
dec
xchg
das
xchg
sub
pushf
mov
jmp
inc
test
cmpl
mov
add
adc
add
jl
and
inc
ret
sbb
daa
les
daa
outsl
xchg
popa
and
enter
dec
jns
mov
jle
sbb
xlat
test
push
andb
dec
xchg
pop
aaa
adc
and
jae
xor
jb
cwtl
xor
lret
sub
mov
xchg
cli
mov
adcb
and
adc
cmp
fwait
push
inc
ret
jle
adc
dec
xchg
inc
cli
lcall
mov
add
add
or
inc
sbb
and
sub
fcom
sub
sti
dec
cmp
nop
mov
sahf
push
mov
dec
stos
imul
mov
mov
lret
pop
cwtl
cs
adc
cmpsl
cmp
pop
jg
add
call
cmpsb
and
or
push
and
add
push
and
mov
sub
mov
call
cmp
or
inc
inc
inc
in
adc
or
gs
push
add
push
or
mov
lods
or
shll
repz
sbb
jge
fldl
jne
add
and
scas
clc
xchg
dec
adc
sbb
adc
sub
ret
sti
dec
pop
cwtl
push
popf
aam
imul
pop
push
shrl
ja
xor
push
rclb
cmpsb
xorb
mov
mov
or
pop
loopne
cmp
dec
dec
mov
xchg
mov
call
clc
adc
ds
mov
fldt
lock
dec
push
xor
fstl
jns
push
push
adc
push
mov
push
cs
clc
insb
xor
mov
stos
adc
mov
inc
fs
data16
mov
notl
fdivl
shll
and
iret
dec
je
movsb
and
je
cwtl
xchg
push
loope
test
xchg
push
rolb
jl
inc
fsubs
ret
or
inc
adc
insb
pop
fwait
adc
jge
or
add
and
pop
xchg
es
xor
int3
mov
push
orl
mov
push
jnp
nop
loopne
bswap
xchg
xor
cwtl
xor
mov
jmp
in
jmp
repnz
and
sub
enter
movl
jg
jns
sbb
es
xor
xlat
xchg
clc
or
fsubl
or
into
sub
int3
cmp
adc
rol
setle
xor
inc
dec
or
insb
decb
shlb
lahf
enter
rcll
mov
xchg
dec
fwait
add
les
ds
repz
or
mov
fdivs
or
int3
std
fstps
push
push
or
mov
repnz
int3
jo
hlt
jl
stos
xor
mov
cld
lods
xchg
pop
cmpsb
in
dec
rorb
push
sbb
xor
add
pop
pusha
test
pop
add
pop
inc
pop
and
loope
sub
xor
sbb
sbb
sbb
arpl
pop
pop
or
popa
dec
mov
mov
mov
faddl
insb
addr16
push
xchg
incl
pop
fistpl
push
push
pop
psadbw
cmp
add
bswap
pop
fmull
aaa
loopne
les
sbb
aam
push
xor
shlb
mov
int3
adc
and
adc
xor
shlb
clc
les
xchg
and
enter
dec
les
insb
fs
sub
or
pusha
cmp
and
ss
loop
and
orw
xchg
cld
jp
mov
xor
mov
xor
test
or
repz
insl
add
int3
push
nop
sub
adc
mov
add
jne
test
test
std
ljmp
hlt
rorb
jno
orb
test
sti
xchg
addr16
movsb
and
cmpsl
push
mov
daa
push
dec
aaa
and
aam
daa
push
xchg
outsb
test
dec
push
call
push
int3
sbb
jae
outsb
in
xchg
sbb
and
jecxz
les
and
cmp
xchg
test
call
mov
lahf
push
cwtl
sarb
inc
int3
or
fiaddl
test
cmp
sub
cwtl
sub
jb
addr16
dec
fs
lods
dec
orb
or
fsubrl
or
cmp
pushf
sub
adc
test
pusha
dec
dec
add
pop
enter
dec
add
push
and
insb
inc
and
dec
cmpb
push
mov
ds
mov
loope
and
stos
jae
jp
cmp
into
mov
inc
loop
xor
xchg
inc
add
sti
sub
xchg
mul
and
add
mov
mov
sub
adc
jae
jecxz
jg
add
jnp
sti
lret
sbb
or
adc
cmp
jne
cld
jmp
push
inc
popf
int3
sub
inc
test
sbb
and
rorl
fsts
loope
jmp
xor
inc
or
or
mov
dec
std
cli
lahf
cmp
xor
outsb
cmp
sbb
outsl
cmp
inc
lods
sub
sub
jne
test
rcll
mov
dec
xchg
bound
cmp
push
jmp
sub
insb
sbb
inc
stc
movl
adc
divl
movl
jne
adc
popf
hlt
inc
mov
cmp
jmp
inc
cmpl
inc
push
mov
dec
add
mov
mov
test
sub
cmpsl
sub
aad
addb
dec
jae
in
or
adc
adc
and
out
jle
mov
call
xchg
adc
lahf
sub
stos
int3
fldl
pop
call
les
lods
sub
adc
out
testl
loop
add
lock
test
shll
adc
test
jnp
nop
xor
sub
xchg
dec
adc
fcomip
cmpsb
xchg
fdivs
repnz
xor
jg
dec
loope
xchg
jne
aam
pushw
inc
orl
add
sti
mov
jl
leave
shll
and
jg
testb
clc
mov
mov
add
stos
mov
push
jnp
xchg
xor
inc
sar
jmp
cmp
add
push
or
and
decb
out
mov
inc
bound
mov
jl
les
cld
and
mov
rolb
sbb
jb
or
inc
std
inc
fsubl
sub
add
sub
imul
pop
data16
or
mov
int3
mov
push
xchg
cmp
int
xor
in
add
adc
movsb
cmp
pop
cld
add
add
int
stc
xor
mov
and
adc
call
pop
ja
adc
stc
mov
aas
cmp
mov
sbb
inc
dec
and
sub
sbb
sbb
cmp
or
xor
or
xor
int
lret
orb
inc
adc
nop
ja
push
fsubr
push
sbb
ret
mov
fcmove
cltd
and
nop
sbb
or
daa
jns
daa
stos
adc
dec
mov
sbb
or
sti
xor
xlat
or
mov
dec
xor
ficoml
outsb
push
ja
pushf
outsl
call
lea
push
ljmp
and
test
adc
sarl
mov
inc
and
mov
ja
test
sti
les
inc
add
int
mov
sub
add
jmp
mov
add
inc
xor
and
clc
call
and
xlat
add
inc
cmpsl
das
cmp
inc
dec
adc
xchg
sub
pop
push
popa
or
notl
jne
push
push
cmc
cmp
mov
xacquire
xchg
test
add
mulb
in
cmp
xchg
lods
xlat
std
xchg
xor
push
xchg
insb
mov
dec
inc
hlt
mov
fs
cli
jmp
inc
daa
mov
and
dec
push
cld
xor
sbb
out
insb
sbb
dec
xchg
leave
imulb
in
mov
test
and
ljmp
dec
mov
jmp
stc
xorw
xchg
and
add
out
out
out
adc
nop
xor
popf
lret
jne
jge
ljmp
inc
jge
call
adc
outsb
jmp
or
inc
rcll
adc
and
adc
cmp
das
jmp
movsl
pushf
mov
push
add
or
inc
mov
pop
repz
dec
pop
int
xor
test
mov
loop
aam
cmovle
add
and
xor
push
adcb
inc
shlb
cmpl
dec
cld
outsl
mov
add
add
xchg
or
mov
or
jmp
add
pop
push
dec
dec
dec
inc
pop
dec
mov
adc
mov
mov
add
outsb
or
xor
imul
push
nop
or
pop
or
add
stos
lds
ss
dec
aam
mov
movsb
fwait
sahf
fcoml
sti
repnz
dec
dec
cmp
push
sbb
mov
adc
movlps
add
sub
jb
nop
sbb
cmp
cmpsb
xchg
dec
push
adc
inc
sbb
add
out
pop
push
dec
fwait
cld
or
cli
inc
pop
hlt
jae
lods
icebp
sti
movsl
xlat
test
mov
and
cmpb
mov
mov
stos
xor
je
sub
test
addr16
repnz
call
daa
xchg
daa
aad
fs
test
push
or
dec
pop
movsb
push
mov
imul
ficompl
lahf
push
dec
mov
cs
mov
fdivs
int
sbb
xor
jbe
jmp
jge
idivb
jae
or
movsb
incb
test
adc
mov
or
stc
dec
test
dec
xlat
inc
jo
jne
sti
stos
mov
ret
sti
jge
xor
ss
adc
out
dec
inc
inc
enter
cmp
hlt
adc
cmpl
or
pushf
dec
bound
and
inc
pop
push
mov
or
and
inc
subl
add
int3
inc
inc
add
cmc
sub
mov
rcrb
hlt
mov
subb
call
sar
insb
les
dec
and
loope
add
jnp
popf
mov
jg
adc
nop
test
pop
push
stos
xor
add
pushf
xor
add
push
jmp
mov
sub
add
push
jl
insl
sub
fld
bound
xor
inc
je
outsb
push
or
pop
mov
push
outsb
add
fs
xor
jge
sbb
jl
inc
jne
push
mov
xor
clc
jnp
hlt
das
sbb
pop
xchg
or
or
or
dec
notl
enter
push
hlt
dec
and
enter
js
pop
sub
xor
xchg
inc
cmp
hlt
push
adc
mov
or
inc
popa
jae
mov
call
mov
inc
and
push
jl
xchg
or
nop
test
test
cmp
push
push
mov
pop
push
pop
test
adc
mov
pop
nop
and
stc
movsl
sbb
or
inc
inc
adc
jle
cwtl
sub
test
xor
pop
xor
or
stos
mov
popf
adcb
loop
cmp
jne
adc
loopne
sbb
loop
mov
inc
xor
mov
sbbb
outsl
xchg
or
inc
or
push
lods
or
xor
push
dec
lods
xchg
shll
xor
nop
mov
inc
mov
pop
andl
ljmp
cmp
sbb
cld
pusha
inc
cli
fisttps
rclb
inc
sub
stc
repnz
outsb
or
cmp
icebp
adc
pop
ljmp
add
jmp
adc
popa
dec
xor
fs
imul
jne
insb
imul
fbstp
arpl
test
push
mov
dec
cwtl
fs
cmp
mov
imul
xor
add
push
push
dec
xor
fmuls
xor
or
lock
jne
and
pop
add
in
popa
imul
push
imul
sub
dec
js
xor
pop
or
dec
jae
inc
cmp
popa
and
loop
sar
dec
mov
clc
sub
and
rorb
fsubl
flds
fcoms
lods
dec
test
or
test
fs
mov
push
test
imul
lahf
add
scas
js
les
or
je
int
or
mov
xchg
imul
ja
mov
push
inc
mov
nop
lods
xchg
fists
cmp
adc
add
test
dec
sub
and
imul
int3
pop
push
jp
push
pop
sub
int3
or
push
push
xchg
mov
pop
jns
or
add
cmp
ret
xchg
push
movsb
and
mov
push
sub
inc
add
dec
stos
sub
xchg
xor
outsb
arpl
and
push
iret
mov
mov
or
cmpsb
cli
add
dec
or
das
hlt
jo,pn
jge
jl
mov
les
or
mov
iret
aas
adc
mov
push
or
movsb
das
mov
mov
cmp
push
mov
cli
sbb
movsl
sub
call
adc
data16
mov
mov
sbb
and
dec
pop
rcll
mov
push
sub
push
aam
jb
fsubp
or
mov
test
gs
movsl
inc
adc
mov
push
jmp
dec
dec
add
jecxz
push
in
xchg
sub
or
add
scas
inc
jbe
inc
popa
pop
inc
pop
mov
and
stc
add
shlb
lea
push
push
and
lret
jl
fadd
push
jae
call
mov
jns
push
xor
push
push
pop
inc
dec
mov
adc
pop
sub
je
push
stos
mov
inc
data16
push
xchg
adc
mov
nop
dec
stos
adc
pop
mov
sbb
into
inc
xchg
pop
dec
add
in
mov
cwtl
mov
xchg
psubw
pushf
andb
ret
test
cmp
cmp
cmp
in
add
cld
pop
loopne
loopne
cmp
or
or
and
xor
sbb
cmp
cmp
cmp
sub
test
mov
call
repz
in
jecxz
loop
loope
loopne
fcomip
fdivp
fdiv
fcomi
fpatan
fdiv
xlat
repz
cmc
mov
sar
sar
iret
cld
clc
cld
into
cld
int
int3
cld
lret
cld
lret
cld
icebp
cld
leave
cld
enter
mov
mov
sbb
add
add
xor
shll
orl
add
dec
sbb
fmul
xorl
or
sbb
xchg
cwtl
dec
mov
pusha
cwtl
sub
lods
sbbb
cmp
dec
mov
scas
subb
mov
inc
int3
in
into
or
clc
jno
scas
push
nop
or
inc
mov
mov
adcb
shrl
xor
cmpsb
shlb
cltd
fwait
lcall
inc
fs
inc
int3
lods
add
xor
jo
add
pop
and
mov
fs
pop
cmovs
xchg
mov
rcrb
and
fiaddl
add
inc
cs
xchg
push
cmc
jno
sbb
cmp
sub
mov
adc
jmp
nop
repnz
push
pop
pop
mov
add
shll
mov
enter
pop
push
sbb
mov
add
or
popa
stos
aam
popf
fisubl
push
push
xchg
call
lods
movsl
rol
adc
into
fs
xchg
pop
adc
mov
mov
xchg
push
lret
inc
cmp
jl
and
mov
mov
push
and
aas
nop
lret
inc
lods
cwtl
inc
lret
loop
jno
leave
push
xorl
sub
mov
mov
or
clc
xchg
push
imul
push
movsl
adc
or
and
sbb
push
push
inc
xchg
arpl
fiadds
or
cmpsb
jb
rcpps
je
addl
xchg
inc
push
jns
push
jae
addr16
xor
xor
pusha
fldl
scas
xchg
insl
and
ds
or
mov
add
std
sbb
inc
cmp
sub
mov
dec
jbe
repz
call
pop
adc
mov
xchg
mov
rcrb
sub
jmp
mov
jmp
adc
jmp
sbb
movsl
inc
or
cmp
movsl
pop
and
xor
imul
insb
aas
push
insl
aam
das
scas
adc
adc
int3
push
add
sbb
dec
fistps
add
sbb
stos
dec
pusha
lock
cwtl
or
gs
aam
rcrb
sub
inc
ljmp
fcompl
push
cmpb
adc
cli
jecxz
out
dec
scas
fildl
mov
pop
notl
mov
adc
dec
popa
ds
sti
cmpsl
xchg
pop
sub
sbb
sbb
lock
add
add
xchg
das
sahf
ja
cs
addl
js
adc
sbb
sbb
lahf
sbb
add
pushf
jnp
aaa
mov
sub
jle
movsb
pop
or
setne
pop
iret
sbb
and
sbb
sbb
pop
and
insb
aas
and
aas
das
jo
mov
add
push
aas
sub
xor
xor
cmp
cmp
jp
je
in
jbe
js
jp
jl
jle
jle
jle
jle
jle
dec
mov
mov
leave
mov
stc
cmp
aas
mov
mov
mov
mov
dec
out
dec
shl
inc
or
and
add
dec
adcb
adc
pop
mov
subl
cld
xor
or
adc
and
pushf
mov
xchg
into
adc
sbb
mov
cltd
mov
mov
mov
or
and
pop
fcomps
call
in
and
inc
cld
push
inc
add
pop
or
sub
int3
mov
dec
mov
xchg
sbb
or
xchg
adc
sbb
fs
or
jl
xor
inc
and
cmp
sti
data16
in
and
pop
and
or
clc
lods
test
mov
pusha
inc
imull
pushf
cwtl
sbb
xchg
adc
rclb
push
pop
lods
and
jl
xchg
dec
xor
mov
adc
fmull
sbb
adc
fdivs
aam
in
or
push
pop
adc
shlb
jmp
clc
das
fsubrl
pop
les
insb
int
je
popa
jns
shl
stos
mov
mov
std
mov
sbb
shll
popa
lock
stc
test
push
pop
adc
and
cld
imul
les
int3
dec
or
sub
fnstenv
pusha
lock
pop
jmp
lahf
enter
sub
push
pop
pop
and
pop
pop
adc
leave
push
cmc
lock
pop
loope
insb
push
xor
sbb
or
push
popf
push
pop
test
xchg
pop
ja
adc
inc
cmp
mov
sub
adc
or
and
mov
sub
stos
xor
push
inc
pop
xor
shrb
jb
mov
and
pushf
adc
push
ja
adc
or
jl
mov
mov
or
orb
push
loopne
or
jno
sub
jl
and
in
call
hlt
nop
xchg
mov
pop
adc
jno
outsl
cmp
nop
mov
fdivl
mov
sub
push
rol
and
adc
dec
mov
pushf
dec
call
sbb
add
insl
fists
xor
and
jnp
adc
inc
imul
inc
dec
in
dec
repnz
or
lahf
and
inc
jns
nop
mov
add
mov
lret
sub
ja
and
push
out
cwtl
mov
sti
dec
daa
and
jno
pop
xchg
inc
pop
dec
xlat
cmp
inc
pop
or
mov
inc
or
push
rolb
popa
jae
mov
negb
or
mov
movsl
insl
push
add
adc
pushf
in
lods
inc
test
add
sub
pop
pop
or
daa
jne
insb
mov
cmp
inc
xchg
adc
push
ret
xor
mov
or
xchg
jmp
adc
sub
adc
sbb
and
and
ss
adc
push
mov
test
jo
sbb
or
or
adc
and
dec
out
hlt
xor
inc
push
and
sbb
dec
aas
insl
call
xchg
sub
es
loope
jno
aam
mov
loope
xor
and
and
push
add
and
inc
jg
andb
aas
xorb
js
jno
rolb
push
mov
push
int3
inc
nop
push
int3
push
push
sub
shr
out
adc
add
nop
push
pop
and
adc
push
sti
xchg
lock
pop
mov
addr16
addr16
js
pusha
je
adc
cmp
or
gs
mov
dec
sbb
push
push
push
sub
and
loop
fwait
mov
std
xor
movb
mov
test
lea
mov
out
rcr
nop
push
aad
push
hlt
mov
pop
scas
push
js
xchg
adc
add
mov
inc
or
add
test
push
push
hlt
adc
mov
rorb
adc
adc
out
add
push
pop
dec
mov
mov
popa
pop
adc
daa
push
adc
pop
mov
movl
incl
jae
xchg
push
stos
xchg
dec
mov
dec
or
daa
cmp
add
jne
pop
push
mov
sbb
mov
loopne
or
ja
pushf
add
test
je
mov
xor
data16
in
ret
jae
push
cmp
cmp
pop
stos
xor
xchg
mov
pop
sbb
push
fsubl
push
push
cmp
pop
int
test
or
scas
arpl
out
pop
mov
cltd
sub
inc
xchg
adc
inc
push
jae
sub
dec
or
popa
insl
or
inc
addr16
inc
addr16
or
in
xchg
ret
test
push
in
inc
test
inc
adc
xchg
sub
andb
adc
lret
dec
clc
cs
enter
fwait
sbb
lahf
sarb
popf
pop
sub
lods
add
mov
adc
popf
mov
mov
popa
push
pop
sbb
andb
inc
jo
leave
push
ret
xchg
rcl
mov
mov
mov
push
push
sbb
adcl
push
mov
sbb
xor
adc
enter
adc
mov
or
cwtl
adc
xchg
cmpsb
sarb
bound
inc
lret
dec
pop
outsb
inc
adc
sti
mov
adc
inc
xor
mov
lea
scas
mov
mov
or
aad
inc
xchg
rclb
sbb
dec
je
adc
or
cmp
jne
mov
mov
lods
aas
mov
fisubrl
fs
lret
xor
test
mov
push
shr
mov
jno
pop
adc
js
js
push
jns
or
test
cmpsb
inc
jnp
sbb
inc
mov
shll
les
and
pop
je
and
adc
mov
or
outsb
push
and
js
cvtpi2ps
add
rcll
in
mov
leave
push
jg
mov
mov
or
std
sub
scas
lock
pop
mov
push
mov
mov
xor
push
ljmp
daa
jnp
push
xchg
cmp
repnz
icebp
fbld
stc
xchg
popa
mov
jmp
mov
cmpsl
push
jg
pusha
outsb
push
jb
pop
fnsave
inc
sbb
push
inc
mov
inc
push
mov
dec
xor
sub
ds
xor
mov
dec
sub
sbb
cmp
jns
xchg
cld
adc
int3
mov
or
add
adc
jne
nop
push
or
jo
sbb
add
ja
nop
push
pop
gs
cmp
int
dec
push
mov
pushf
or
cmp
adc
pushf
or
cmp
and
shrb
pushf
or
rcr
add
push
jo
push
xchg
fdiv
xchg
nop
sub
mov
pop
popf
push
and
and
daa
cmpsb
iret
ficoml
cmp
dec
aam
mov
call
fsts
scas
jo
ret
test
add
sbb
inc
sub
stos
lock
inc
iret
or
inc
ds
mov
inc
pushl
clc
or
inc
xchg
push
and
in
stc
pop
movhps
inc
sub
push
mov
adc
add
repz
jne
mov
rorb
daa
sub
push
enter
pop
or
mov
mov
or
jecxz
or
dec
adc
sbb
sub
sub
adc
dec
dec
pop
aas
sub
or
sub
jno
sti
jmp
cld
lcall
or
mov
push
add
jbe
mov
movsb
push
dec
popa
dec
push
ds
mov
jl
and
movsl
ret
adc
sti
jae
lds
stos
and
out
adc
fadd
addb
xchg
pop
ud2
mov
cmc
insl
mov
cltd
test
or
push
inc
add
mov
push
inc
cmp
push
xchg
pop
jg
fstl
mov
mov
shrb
mov
xlat
out
sub
fsubs
cmpb
jne
jns
dec
filds
mov
rcrb
pop
mov
cmp
push
movsb
or
or
dec
lods
and
pop
dec
negl
inc
insb
xchg
or
stos
pop
out
fnstsw
testl
maxps
push
jle
pop
add
inc
aad
add
or
and
mov
ret
les
stc
adc
pmaddwd
fyl2xp1
repnz
xchg
mov
push
push
inc
inc
mov
push
push
cmp
jbe
out
sbb
push
mov
movsl
add
sbb
xchg
dec
inc
stc
jae
jle
imul
or
dec
jge
lods
mov
sbb
ret
push
ret
cmpsl
or
xchg
jge
insl
sub
xchg
mov
or
mov
push
dec
mov
mov
insb
xchg
cs
out
add
adc
and
daa
ret
adc
les
sub
sarb
pcmpeqd
cmp
inc
clc
or
sub
cmp
and
and
adc
inc
fimull
mov
dec
mov
ds
jne
lock
cmp
add
roll
mov
push
push
idivl
push
or
adc
pop
clc
pop
js
je
mov
sarl
cmp
jo
movb
adc
jmp
xlat
xor
or
pop
mov
lcall
insb
cmp
daa
fdivrs
add
adc
notl
dec
mov
pcmpeqw
push
rorb
or
dec
in
loope
cmc
and
push
or
stos
and
cmp
mov
negl
sub
mov
out
and
sub
mov
and
xor
lret
cmp
pop
jmp
aam
inc
jno
je
inc
aaa
sbb
xor
imul
sub
je
movsb
adc
sbb
iret
clc
push
push
movsb
jge
push
int3
sti
or
outsl
lea
push
dec
out
inc
out
hlt
adc
sbb
cmpsb
scas
fidivs
fldt
pop
mov
mov
adc
push
mov
out
movsl
dec
cmp
push
pop
xchg
movsb
adc
add
cmpl
adc
andb
movsb
out
xor
cmp
je
fwait
aam
stos
inc
faddl
and
cmc
mov
push
mov
insl
jmp
mov
std
pop
xchg
xchg
push
test
dec
mov
or
xor
push
dec
clc
jge
mov
mov
inc
call
xor
add
nop
mov
mov
adc
sbb
xorb
inc
pop
lcall
xor
inc
out
aam
inc
push
call
push
outsb
je
xor
jb
pusha
cmp
add
jp
aas
xor
call
and
hlt
add
push
rorb
rorb
les
jne
or
xor
scas
cs
sbb
jle
and
das
cmp
push
xchg
adc
xchg
fs
and
adc
xor
js
dec
add
or
sbb
outsb
test
dec
cmp
test
adc
jle
xchg
sbb
xchg
jb
sub
cld
xchg
and
imul
mov
pop
or
cmp
pop
cmp
int3
cmpsb
inc
push
test
leave
adc
and
mov
sub
adc
mov
es
push
cmp
ret
xchg
adc
push
decb
dec
ret
cmp
cmpsl
in
in
push
test
or
in
sbb
xor
hlt
or
add
cmpb
xchg
rorl
push
popf
push
and
push
push
pop
adc
dec
pushf
push
and
enter
fs
adc
and
inc
aas
xchg
push
pop
jmp
pop
pop
sub
imul
jo
cld
xor
xor
cmc
ret
fdivs
popa
cwtl
jne
xchg
je
pop
and
sarl
leave
stos
jmp
push
rclb
cld
or
add
inc
jmp
dec
ds
jle
inc
std
rclb
or
xchg
mov
stos
dec
pop
lret
jb
jnp
pop
push
imul
shll
push
stos
bound
mov
adc
xchg
jae
lret
or
outsl
cli
jb
dec
jbe
pop
out
mov
dec
sbb
jno
and
call
inc
cmp
je
cmp
rorl
jge
sbb
and
sbb
mov
mov
mov
or
ljmp
jne
scas
pop
je
movsb
lods
clc
xchg
lret
sbb
pop
xchg
xlat
arpl
sbb
add
adc
add
push
or
push
rcl
adc
lcall
cmp
hlt
out
andb
sbb
dec
ret
mov
test
push
movb
push
sub
adc
add
and
add
je
dec
or
int3
sbb
out
sub
nop
mov
push
adc
lret
or
adc
push
xor
or
js
push
cs
mov
arpl
xorl
dec
and
cmp
add
sub
sbb
and
data16
inc
or
mov
lar
inc
and
loopne
add
xchg
push
dec
push
add
testb
rolb
lods
jmp
jb
cmc
or
fwait
sub
inc
or
mov
and
xor
pop
nop
adc
mov
dec
or
mov
mov
into
sbb
outsb
orb
xor
lock
mov
test
push
imul
stos
mov
aam
out
inc
mov
ja
pop
dec
or
pop
and
or
adc
or
mov
mov
jmp
cltd
sub
rorb
fistpl
fisttpll
adc
mov
mov
into
adc
add
and
sub
cs
xor
xlat
js
adc
push
pop
imul
and
mov
xchg
mov
xor
call
and
movsb
jmp
sub
push
cmp
or
cli
and
insb
mov
xor
test
inc
ret
adc
jecxz
add
stc
test
jle
fnstcw
mov
mov
ret
fisttpl
sub
dec
xchg
cld
mov
stc
fstpl
and
movb
cmp
add
jle,pt
aas
into
push
jns
aam
rclb
push
aaa
les
and
push
sub
leave
push
adc
mov
sbb
adc
or
add
pop
cmpsb
push
movsl
xor
mov
cmp
test
inc
popf
das
in
js
jmp
sub
call
mov
and
das
out
sub
adc
jno
dec
dec
ret
sbb
cmpb
push
jb
or
pop
dec
inc
jne
mov
mov
adcl
mov
xchg
mov
xchg
dec
stos
adc
or
dec
and
inc
mov
adc
jne
test
xor
mov
repz
mov
jo
fcomi
div
adc
mov
sbb
sub
imul
pusha
xorb
cli
rolb
test
pop
lds
inc
int3
ljmp
pop
inc
or
add
sub
ja
das
ret
mov
push
mov
adcb
pop
push
push
inc
in
std
jne
push
push
test
pop
js
add
repz
inc
mov
pop
loop
push
dec
aaa
jge
xor
xchg
movsb
imul
mov
flds
push
cmc
inc
adc
call
mov
cwtl
mov
setne
inc
pop
or
mov
mov
dec
loop
push
lods
xor
add
loope
sub
cmp
xchg
cmpb
scas
or
add
mov
and
jge
hlt
pusha
hlt
push
mov
cwtl
fcmovnb
ljmp
add
std
cmpsl
movsb
push
dec
rorb
cli
outsb
push
pop
sbb
push
or
rcr
push
sbb
mov
int
push
adc
mov
xor
xchg
mov
mov
inc
sti
xchg
sub
in
das
jecxz
cmp
cmpsb
scas
pop
adc
push
testb
cli
jmp
cmpsb
adc
and
mov
and
sub
push
fwait
pop
movsl
sub
adc
inc
push
push
fiaddl
push
aas
lret
xor
push
pop
cmp
push
xchg
add
xchg
push
sarl
or
jne
loopne
sub
push
add
dec
jmp
cwtl
push
call
jmp
stc
push
or
out
mov
sub
add
pop
mov
inc
cs
pop
mov
sub
and
push
or
dec
lret
push
adc
fs
testb
cli
xchg
adc
addb
adc
xchg
cmc
into
mov
int3
in
call
mov
push
cmpsb
sub
dec
adc
testb
sbb
adc
inc
in
adc
xlat
mov
inc
rclb
lods
mov
jo
and
lods
xchg
adc
xor
out
adc
or
idivl
cmpsl
scas
int3
in
inc
mov
mov
movsl
cmp
jbe
mov
xchg
loope
push
test
div
add
lahf
movsb
cld
out
lret
xchg
mov
push
jae
cmpsl
cmc
xchg
pusha
fucomp
cmpsl
imulb
adc
in
je
test
pop
in
or
call
lret
sbb
adcb
sub
xor
cmpl
push
pop
jno
pop
stos
add
mov
aas
dec
std
popf
pop
xor
add
call
jns
sbb
pop
arpl
xchg
sub
push
mov
jecxz
shll
add
sub
push
movsl
pop
loopne
adc
sub
mov
dec
xor
outsb
std
and
dec
inc
mov
insb
fildll
sub
push
xor
lret
adc
and
test
jno
xchg
xor
shr
cmp
shll
adc
jmp
sub
js
dec
and
xor
orl
ljmp
dec
or
hlt
movsb
sbb
inc
inc
xchg
into
sbb
jl
adc
aas
and
push
ja
lock
xor
sub
add
addr16
mov
test
dec
cld
cmpl
jne
pop
es
mov
lea
stos
popa
inc
mov
mov
sbb
imull
xchg
paddd
dec
inc
lods
pop
clc
xor
or
pop
sbb
dec
jmp
sub
jnp
dec
lods
inc
les
xchg
sub
outsl
add
jl
les
push
pusha
aam
or
addl
cmp
push
xchg
mov
mov
push
pop
addl
push
push
test
scas
jbe
aam
mov
xchg
outsb
scas
inc
and
nop
inc
cli
inc
and
rcll
or
es
sahf
insl
push
ds
xchg
mov
movsl
shrl
lea
mov
xchg
or
loop,pn
pop
mov
xor
icebp
adc
stos
push
mov
xor
and
cmpsl
leave
xor
fimuls
pop
test
stos
insl
jl
pop
cli
jne
mov
add
and
jmp
arpl
or
out
adc
cs
or
jns
jl
mov
mov
mov
push
test
arpl
add
pop
jmp
cmp
hlt
jno
or
adc
add
mov
movsb
aas
outsb
ret
and
adc
aaa
or
inc
jp
aas
jbe
test
pop
testl
xor
inc
imul
push
stos
or
pop
ds
adc
inc
sbb
dec
jg
add
test
fs
mov
push
loop
cmpsl
inc
es
jbe
xor
out
add
roll
cmp
fmull
aas
lret
or
mov
loop
inc
das
sub
and
addb
test
mov
inc
or
xor
mov
addr16
cmp
sub
test
lods
pop
leave
icebp
sbb
mov
and
or
test
mov
stos
cmp
inc
shlb
sub
inc
sbb
push
stc
jo
cmpsb
addb
pop
repnz
out
dec
call
or
adc
push
mov
and
pop
scas
jge
pop
call
sbb
pop
outsb
xchg
add
mov
xor
sub
xchg
sub
xchg
jl
pop
orb
call
cmp
adc
cld
movsl
add
adcb
inc
push
mov
adc
xor
iret
and
call
pop
pusha
push
adc
inc
inc
cmpsl
pop
sub
push
and
dec
pop
mov
xchg
or
inc
and
inc
sub
inc
sbb
push
pop
arpl
nop
inc
mov
cltd
add
call
cld
mov
ret
setp
mov
adc
sbb
clc
pop
pop
cltd
cld
push
stos
add
stc
movsb
add
je
pop
sbb
xchg
dec
jne
push
push
fisttpl
push
jle
aaa
xchg
sub
push
mov
jo
and
sub
xor
jo
or
cmovb
shlb
sub
out
sub
mov
sti
cmp
dec
lds
inc
cmpsb
call
cwtl
inc
mov
jge
or
popa
push
jae
bound
loopne
sub
cmp
push
inc
push
mov
mov
dec
mov
test
adc
sbb
mov
inc
dec
jo
sub
and
pop
inc
pop
pop
addl
shll
jp
jmp
call
inc
mov
cld
pop
pop
xchg
movsl
inc
sti
out
stos
mov
call
mov
ja,pn
or
xchg
cltd
aas
add
inc
sbb
jne
jmp
and
mov
sub
rcll
je
jl
int3
das
or
das
test
adc
leave
popa
adc
or
add
call
adc
add
cmp
sbb
push
sbbb
test
std
jno
mov
leave
movsb
jp
lods
jg
adc
inc
pop
aad
or
adc
xchg
mov
jp
je
gs
or
inc
je
cmpsl
jge
push
mov
dec
dec
lods
pop
dec
lds
pop
mov
sbb
lahf
push
lock
lret
cld
loopne
push
push
push
inc
rcr
inc
and
sub
imul
push
cmp
sub
xchg
aam
ret
rcr
dec
push
in
out
fs
xchg
inc
xorb
incl
adc
inc
adc
addl
dec
cmp
sbb
mov
push
in
pushf
sub
cld
add
movups
andl
jns
jns
lahf
push
cmc
in
dec
adc
out
sub
push
inc
push
adc
xchg
push
mov
adc
clc
pop
inc
notb
inc
sbb
or
xor
out
shr
and
imul
nop
push
fwait
jp
sbb
mov
mov
push
js
call
jecxz
sar
mov
mov
repnz
sbb
or
jl
dec
dec
push
or
pushf
adc
mov
sahf
or
movb
xchg
imul
lods
jne
cmp
push
adc
and
sbb
push
cmp
pop
mov
mov
cld
fcmovb
je
insb
stos
in
mov
jl
std
inc
addr16
shl
cmp
cmpb
jne
test
inc
inc
xchg
ljmp
fmuls
test
mov
cmp
dec
nop
cmp
and
push
aaa
cmpl
pop
fsub
fistl
cmp
xchg
or
inc
clc
dec
sub
setb
pop
ljmp
stos
xor
sbb
and
rclb
add
inc
dec
push
and
dec
cmp
inc
mov
or
fsts
les
shlb
fstl
pop
jmp
das
adc
xchg
fdivrl
jg
fs
pop
jb
es
cmp
xchg
jnp
out
andl
push
mov
test
add
mov
adc
push
aaa
mov
mov
rcrl
nop
xor
test
xchg
sbb
xlat
sti
cs
shlb
test
iret
or
pop
nop
dec
aad
push
cmpb
ret
mov
mov
inc
xlat
xchg
cmpsb
testl
sub
ret
adc
out
mul
xchg
scas
adc
sub
sbb
popf
or
jno
inc
dec
xchg
xor
inc
sbb
sbb
push
jmp
or
and
adc
lcall
inc
adc
clc
imul
ret
test
xchg
int3
sbb
xchg
push
inc
sti
jp
jb
leave
and
inc
xor
or
insb
adc
cmpsb
sub
push
inc
push
dec
sbb
dec
movsb
sbb
imul
stos
jmp
and
ljmp
add
movsb
inc
and
lret
push
inc
mov
xchg
test
push
push
dec
push
cmp
push
add
mov
je
or
cwtl
dec
dec
leave
icebp
pop
push
dec
lods
pushl
adc
cwtl
arpl
pop
mov
cs
adc
push
or
xor
push
sbb
inc
mov
push
xor
orw
je
mov
push
add
cmpsb
shll
add
pushf
adc
cmp
std
push
clc
and
nop
insb
aad
mov
lds
lret
dec
sub
mov
and
pop
std
out
and
mov
fld
xor
mov
pusha
push
sti
ret
jmp
out
sti
dec
fs
notb
into
test
fwait
and
bound
test
or
xchg
mov
rclb
and
sti
xor
jno
jns
je
cmpl
lret
cmp
cwtl
adc
movb
in
or
push
jns
dec
xor
sbb
js
and
cmp
or
inc
mov
add
repz
fs
adc
rcll
jge
push
cmp
pop
jbe
add
push
sub
adc
mov
pop
cwtl
pusha
leave
ficoml
movsb
sahf
xchg
inc
inc
dec
scas
dec
stos
cmp
pop
mov
adcb
rorb
stos
dec
jge
push
inc
sub
sub
stos
std
in
roll
adc
int3
test
or
andb
mov
pop
push
xor
dec
inc
outsb
leave
sti
jne
loop
fildll
and
or
fadds
push
or
es
add
pop
mov
mov
js
ja
aam
in
and
dec
mov
pop
add
aas
aas
pop
outsl
mov
icebp
mov
inc
divb
sub
inc
sub
and
xchg
ret
push
adc
or
movsl
loopne
fwait
cld
xchg
inc
jne
fistps
inc
lock
mov
insb
addr16
inc
cwtl
pop
jne
aaa
mov
xchg
and
dec
mov
test
and
mov
and
out
mov
push
xor
daa
mov
or
jmp
sub
daa
jmp
stos
cmpsl
aas
gs
lock
rcr
cmp
test
into
je
mov
rcrb
mov
mov
push
push
push
inc
mov
xor
aas
jbe
jmp
mov
adc
fs
or
sahf
mov
pop
or
cmpsb
push
mov
push
xor
test
add
call
ret
jmp
fwait
sbb
sub
lahf
loop
pop
leave
loop
jbe
mov
add
test
xor
inc
push
shlb
or
dec
das
ss
cs
das
xchg
clc
jno
jmp
adc
push
lock
rclb
out
inc
xchg
es
inc
push
push
cmp
xchg
mov
int3
dec
or
cmpb
rorl
adc
or
pop
dec
push
sbb
dec
mov
mov
pop
mov
cwtl
mov
dec
rcr
pop
pop
xchg
or
or
push
pop
je
mov
or
scas
xchg
add
jp
clc
test
inc
inc
push
testb
je
repnz
xor
loope
mov
sarb
xorl
ja
popf
lcall
add
adc
fucomi
ss
and
adc
push
mov
icebp
loopne
mov
mov
dec
jmp
sub
dec
sub
fsubrs
lea
dec
adc
dec
mov
dec
dec
mov
icebp
in
dec
pop
push
lahf
mov
sbb
add
aam
and
sbb
inc
mov
mov
shll
sbb
mov
adc
mov
sbbb
pop
pop
or
pop
jb
sub
inc
int
test
movsl
sbb
add
dec
arpl
insb
add
mov
inc
or
push
call
adc
push
inc
inc
xchg
push
or
mov
sbb
ret
inc
dec
repnz
adc
test
loop
pop
fldlg2
inc
mov
push
mov
inc
add
or
js
push
aam
int
clc
pop
pop
adc
adc
lods
and
mov
jle
xchg
callw
cmpb
cmp
or
lea
sbb
cmp
mov
sbb
add
xchg
lods
inc
pop
scas
dec
lret
inc
pop
jp
push
cmp
repnz
lret
insl
aad
adc
or
mov
lcall
je
pop
push
mov
bound
stos
mov
rclb
lock
in
adc
andl
fs
mov
nop
mov
insb
xchg
repnz
adc
xor
push
loope
js
subl
je
bound
mov
dec
mov
mov
and
inc
cwtl
pop
and
sub
adc
imul
mov
call
leave
cltd
dec
lea
push
mov
rorb
call
lcall
dec
and
push
jo
fimull
mov
sub
insb
sbbl
or
punpckldq
mov
lods
cmp
leave
fidivrl
dec
fcmovnu
mov
sbb
inc
mov
or
clc
push
popf
sbb
and
mov
int3
pop
nop
dec
jmp
daa
in
xchg
js
adc
mov
pop
mov
sbb
lea
test
daa
fcoms
sarb
xor
mov
push
rorl
jg
fs
sbb
xlat
xchg
call
xor
fs
sarl
ja,pt
fidivl
lods
jbe
mov
mov
add
or
xchg
mov
test
leave
je
mov
test
push
or
or
dec
or
pop
adc
jnp
imul
lcall
and
mov
test
sub
movsb
daa
or
jge
mov
lret
mov
xor
mov
out
popf
inc
insl
xchg
adc
adc
daa
push
fstpt
das
ja
nop
leave
mov
xchg
dec
lea
xor
bound
jle
ss
and
negb
xor
enter
lea
jae
shr
push
out
incl
push
nop
xchg
or
lcall
nop
cmp
jmp
dec
inc
push
jne
lahf
push
add
push
add
pusha
adc
nop
push
xchg
jle
bound
gs
addr16
dec
sti
mov
jo
addl
pop
and
pop
lahf
add
push
call
jl
jmp
sbb
add
popa
jb
and
lret
sahf
int3
enter
push
mov
push
call
dec
je
in
outsl
jo
popf
in
sbb
sete
sbbb
add
add
push
pop
stc
shll
adc
addr16
hlt
adc
cmp
movsl
ret
das
dec
sarl
enter
dec
inc
pop
jne
cmp
and
add
xchg
test
mov
dec
xor
jne
ss
sub
cmpsb
fs
and
jge
leave
jnp
mov
and
and
jbe
fstps
js
mov
xor
cli
enter
jmp
nop
cli
and
stos
pop
mov
push
clc
call
jecxz
push
dec
push
push
jbe
insl
jo
xor
notb
jl
lods
xor
mov
jp
pop
push
sub
mov
add
pop
or
daa
pop
inc
xor
cmp
clc
pop
mov
rclb
mov
add
fs
jmp
test
popf
xchg
cwtl
dec
push
inc
mov
shlb
push
and
nop
div
push
sub
or
jne
stos
pusha
sahf
testb
jp
sub
jmp
fs
hlt
jge
jg
or
int3
sti
pop
push
sub
jno
scas
inc
test
mov
xor
clc
lahf
sub
fnsetpm(287
cld
lock
loopne
mov
jae
cmpsb
dec
push
movb
loopne
xacquire
sbb
push
test
fstl
sbb
cmp
or
dec
cmp
imul
pop
gs
pop
sub
xchg
pop
add
sub
inc
add
div
les
adc
and
and
inc
dec
mov
nop
sbb
xor
jge
ds
popa
cmpb
cs
cltd
inc
idivl
leave
fs
jl
ror
pop
fmull
jo
or
loope
fstpl
fwait
mov
sub
mov
lea
mov
imul
push
cmc
and
or
jp
ljmp
ret
push
inc
fldenv
xchg
inc
leave
inc
inc
nop
sbb
inc
xchg
inc
pop
mov
jl
sbb
outsl
test
dec
pop
aas
push
cmp
dec
nop
les
adc
mov
rorb
ja
sub
or
add
add
js
xchg
or
hlt
push
call
mov
testb
cmp
inc
pop
dec
imul
dec
test
inc
cmp
jno
mov
adc
push
test
leave
setl
and
mov
js
inc
pop
test
push
stc
inc
fisttpl
neg
nop
adc
xlat
lock
sbbl
inc
loopne
or
call
add
mov
mov
dec
jecxz
daa
hlt
bound
shll
fs
inc
mov
sub
or
and
fs
dec
mov
jle
mov
dec
into
lock
gs
mov
repnz
loope
cmp
mov
add
inc
jno
movsl
ret
add
or
sbb
les
scas
mov
je
sub
adc
arpl
xchg
in
std
es
inc
and
rcll
scas
xchg
push
roll
loopne
es
cmp
jge
push
clc
add
xchg
es
and
sub
aas
push
fisubl
fs
sub
inc
sub
push
movsl
pop
and
inc
int
inc
inc
push
xchg
sbb
push
adc
inc
and
inc
push
adc
sub
les
inc
jp
lock
pop
lock
dec
out
call
pushf
les
mov
jb
cmp
sub
nop
imull
lock
ds
adc
mov
aad
test
or
jo
mov
aas
movsb
leave
fsubr
pop
outsb
mov
sub
jb
daa
je
ja
mov
push
cli
push
aaa
or
inc
lea
dec
or
jb
std
jmp
aad
xchg
sbb
xchg
jmp
movsl
and
pop
nop
inc
fisubs
into
mov
cltd
jns
push
or
xor
dec
mov
enter
mov
sbb
arpl
or
mov
int3
push
dec
test
bound
mov
sbb
in
add
cmp
pop
sub
in
in
incl
adc
add
scas
loop
xor
call
and
push
fdivl
int
xor
daa
xlat
and
in
repz
dec
test
lea
inc
sub
rol
jbe
in
jmp
dec
hlt
add
icebp
pop
sbb
int3
fs
push
dec
push
xor
lea
cwtl
testl
push
jmp
xor
clc
outsb
xor
pop
add
test
adc
mov
fisubs
cmpsl
jno
sbb
sub
insl
pop
push
pop
ja
mov
xor
cli
enter
and
daa
push
mov
mov
or
dec
pop
pop
outsl
leave
mov
mov
or
dec
ret
hlt
mov
lods
or
push
push
dec
adc
adc
js
cwtl
jne
ret
push
add
push
fidivrs
jo
jg
stc
sahf
nop
hlt
push
fsts
iret
xchg
pop
inc
mov
call
dec
mov
bound
loopne
mov
mov
lods
push
pop
mov
push
mov
or
or
and
push
repnz
cltd
xor
and
or
adc
sbb
adc
test
inc
adc
lahf
jmp
pmaddwd
mov
mov
mov
test
push
xchg
movsl
and
mov
mov
lret
jae
les
and
mov
adc
hlt
ja
pop
add
fisttps
repnz
call
lea
repnz
xor
push
pop
cmpsb
xchg
and
or
adc
mov
pusha
jnp
sbb
ljmp
jg
dec
or
xchg
push
and
imul
or
sbb
or
adc
dec
xchg
outsl
xlat
mov
lret
ljmp
xchg
or
and
scas
push
mov
loop
lock
call
int3
repnz
pop
dec
clc
dec
push
add
jbe
inc
mov
xor
js
jle
inc
sbb
add
mov
inc
and
push
push
pop
inc
ret
rcrb
inc
lock
xchg
jo
adc
shlb
add
repz
push
sti
push
jmp
sub
jb
cmp
aaa
call
popa
movsb
mov
jmp
outsl
aad
or
sarl
jnp
icebp
out
or
adc
mov
fdivrl
xchg
loope
push
inc
or
pop
repz
adc
push
jns
jge
pop
outsl
xchg
push
xchg
mov
loop
jp
std
mov
cwtl
push
lcall
pop
sub
mov
and
jnp
xchg
push
xor
dec
mov
in
mov
adc
test
scas
mov
push
inc
adcb
add
ja
in
or
mov
and
mov
hlt
repnz
or
loop
push
lea
fistps
adc
lret
lds
sub
xorl
mov
jg
clc
dec
add
shll
fmulp
loope
mov
mov
sbb
orb
cmp
push
sub
xchg
mov
jb
out
imul
and
cmpl
xchg
inc
or
sbb
or
xchg
adc
xchg
push
xorb
bound
and
imul
fs
fwait
sbb
pop
jmp
mov
call
jmp
dec
mov
add
add
mov
push
add
jle
push
divl
pop
ja
inc
cmpb
sahf
insb
or
mov
lock
lea
sub
stos
daa
push
bound
addr16
rorb
add
xchg
sub
repz
dec
or
loopne
inc
andl
dec
test
mov
dec
add
and
mov
pushl
push
in
ffreep
loopne
aad
rcll
je
aad
add
incb
movsl
sub
clc
pusha
cmp
dec
and
loop
mov
xchg
inc
arpl
and
bound
outsl
jle
imulb
dec
xor
inc
or
and
push
dec
loopne
xor
adc
push
dec
adc
stos
test
mov
lods
dec
shrb
decl
in
add
add
call
mov
dec
cwtl
mulb
dec
test
push
mov
psubb
inc
ss
and
pop
and
stos
jecxz
pusha
push
push
push
test
stc
mov
pop
mov
mov
hlt
data16
xchg
out
in
mov
aad
cld
cmp
xchg
ret
sbb
movzbl
jle
sbb
inc
cmp
push
and
and
add
repnz
mov
mov
rorb
dec
shll
stos
dec
xchg
push
xor
rcll
aam
cmp
das
popf
fsubrs
dec
rorb
inc
push
icebp
dec
jb
xlat
cwtl
mov
test
lret
adc
mov
push
mov
jg
ficoml
dec
inc
jle
fisubs
fs
mov
je
data16
ret
add
xchg
in
subb
xor
and
lret
daa
inc
fwait
sub
or
xchg
call
int
scas
les
pusha
je
sub
das
ja
xlat
jge
andl
or
mov
xchg
cmp
push
pop
pop
push
mov
movsl
imul
sbbb
mov
or
dec
movsl
mov
jl
cmp
cmpsl
mov
in
inc
pushf
test
pop
mov
and
gs
ss
cmpsb
in
adc
sbb
stos
mov
and
adc
inc
fdivrs
pop
jne
leave
adc
add
inc
data16
jne
test
bound
xchg
aas
dec
hlt
cmp
adc
ljmp
cmp
mov
pop
adc
in
sub
les
and
xchg
add
mov
inc
notl
mov
rorb
shll
mov
aaa
mov
out
or
pop
inc
es
test
jnp
out
sub
enter
testl
shlb
adc
cmp
lds
dec
or
and
les
pusha
in
outsb
and
nop
loopne
ficomps
and
clc
sbbb
push
cmp
repz
jnp
sub
leave
push
cmpsb
and
shlb
test
cmp
dec
std
fucom
pop
xor
mov
ret
ret
adc
add
test
movsb
aad
out
call
stc
push
pop
dec
call
mov
add
xchg
mov
adc
rol
push
call
xchg
lods
or
add
leave
and
jp
cmpl
or
arpl
xor
test
mov
testb
rcll
out
cltd
in
sub
inc
negb
ret
daa
pop
jp
pop
or
sbb
pop
inc
push
and
xor
xchg
je
push
sar
jle
adc
jge
add
mov
mov
adc
or
adc
decl
adc
je
je
dec
pop
dec
pop
mov
push
add
sbb
sbb
fcoms
xorl
adc
xchg
lcall
push
call
and
push
xor
jmp
or
leave
sub
xchg
add
and
lds
in
pop
adc
cmpl
sbb
int
in
jmp
mov
mov
and
nop
lahf
dec
mov
jmp
adc
mov
cwtl
sub
lahf
push
std
push
pop
xchg
ss
in
or
push
cwtl
rolb
push
mov
mov
loop
sub
xchg
out
xchg
pop
ds
sbb
push
out
pop
int
jle
mov
sub
sub
mov
shlb
fisttpll
jle
lods
mov
adc
and
dec
lds
sub
pop
clc
adc
jecxz
push
pop
or
push
adc
scas
fsub
nop
push
test
and
hlt
ret
lret
jno
popf
shrd
ret
stc
adc
dec
test
pop
xchg
push
in
inc
xor
jns
xchg
pop
dec
pop
pop
or
dec
repz
push
dec
adc
out
ja
rcll
ljmp
int
ds
sub
or
push
and
daa
adc
emms
mov
stc
fld
lea
mov
or
call
sub
clc
push
mov
out
shlb
fstpl
fmuls
stos
xor
xor
xchg
cli
inc
jmp
or
or
push
dec
scas
pop
out
js
push
push
inc
out
cmp
push
cld
jmp
xor
movsl
push
loopne
mov
pop
pop
pop
fstpt
popf
jp
xchg
lret
adc
and
rorb
push
lea
stos
fcomps
push
fists
mov
push
and
cs
jl
mov
das
jecxz
xchg
sti
or
push
inc
movsl
aad
test
mov
pop
clc
jp
push
loopne
popa
adcl
mov
and
sub
push
add
xchg
ret
xchg
push
das
inc
in
imul
movsb
push
jg
mov
mov
arpl
cmpl
push
xchg
xchg
insb
jl
lods
cmp
xor
cmpb
push
or
lahf
call
xor
data16
or
inc
ja
jmp
sbb
adc
call
sub
lret
mov
scas
imul
xchg
lahf
in
push
jle
popf
fs
mov
dec
mov
enter
pop
enter
xor
inc
aas
nop
or
fcoms
or
shlb
je
push
push
jnp
stc
das
ljmp
sub
xchg
scas
out
or
jae
inc
push
and
inc
add
mov
iret
fcomps
dec
movsb
adcb
test
xchg
pop
xchg
ret
lcall
adc
mov
ret
sub
push
jge
push
adc
sbb
inc
sbb
or
dec
cmp
push
stos
dec
sub
pop
stos
inc
sub
mov
add
or
add
fcompl
fnstsw
xor
test
dec
jne
scas
cld
je
movsb
cwtl
enter
xorl
js
mov
sub
add
mov
jmp
jnp
add
jmp
jns
xchg
sbb
sbb
lock
cmp
adc
andb
sub
insl
lods
jbe
lock
fbstp
sbb
xor
add
cs
jle
push
mov
jp
in
jp
int
dec
int
mov
push
jmp
hlt
cmpsl
in
out
int
add
imul
add
rclb
or
repz
cmpb
sub
sbb
push
or
outsl
jnp
gs
sub
xchg
pop
or
inc
inc
je
jmp
loopne
mov
add
std
jmp
test
add
pushf
add
jne
aam
sub
mov
add
jno
sub
adc
pop
sbb
pusha
and
mov
js
xchg
pop
scas
mov
das
pop
aam
arpl
sahf
or
push
cmp
or
mov
in
cli
xchg
sbb
or
push
xchg
je
imul
mov
cmp
mov
pusha
xlat
or
or
add
add
dec
jo
outsl
lods
mov
pop
xchg
outsb
xor
jl
xchg
sub
out
imul
or
cmpb
insb
sbb
orl
cmpb
dec
pop
loop
xor
scas
mov
mov
outsl
and
and
adc
aad
inc
dec
inc
push
aam
dec
and
aad
test
sub
adc
sub
add
xor
and
mov
dec
xor
or
mov
cmpsl
addb
mov
fwait
clc
push
call
mov
cmp
or
xchg
lcall
cmp
mov
jno
mov
ret
int3
test
jno
push
jl
std
lahf
sbb
sar
aas
std
and
sbb
pusha
shlb
aaa
subl
in
int3
enter
add
adc
jne
sti
xchg
test
and
cmp
mov
dec
add
pop
les
jl
js
pop
add
bound
enter
add
fs
pushw
mov
add
int3
jno
mov
jne
jl
push
and
test
or
paddb
call
insl
mov
roll
mov
mov
push
inc
mov
sub
cwtl
pop
in
js
or
insl
add
jne
dec
dec
or
lds
mov
jge
aam
xor
lods
mov
in
dec
sbb
int3
pushw
mov
js
pop
sarb
mov
ret
lods
insb
insb
adc
cmpsb
std
outsl
lret
ror
loope
cmp
add
popa
sbb
and
sub
nop
leave
adc
call
subb
pop
mov
stos
imul
sbb
call
nop
mov
pusha
cmp
xor
cmp
test
enter
add
mov
fs
xchg
popa
gs
les
xor
dec
out
shrb
into
inc
add
mov
rcrl
aam
icebp
cwtl
jmp
cld
or
inc
add
push
es
popf
cmpsl
adc
insl
pop
les
adc
inc
jnp
sahf
xchg
adc
outsl
jmp
push
loope
js
mov
inc
mov
in
psubq
ja
cmpsl
and
pushf
shrl
or
dec
es
cmp
add
push
push
call
ret
shr
aaa
aas
mov
movsb
fdivr
push
cmp
setle
xor
sbb
adc
jnp
dec
pop
call
cld
cmpsl
orl
jmp
movsb
xchg
fnstcw
pushl
lock
repnz
pop
jle
imul
notb
push
nop
adc
mov
stos
xor
cmp
out
lock
in
sbb
call
idiv
lcall
cli
xor
inc
loopne
leave
or
pop
xchg
mov
push
inc
hlt
inc
dec
call
push
xor
popa
add
push
inc
or
test
sub
leave
rorb
push
sbb
hlt
jmp
cmpsb
inc
and
imul
push
mov
call
movsl
mov
cwtl
push
sub
lods
fxch
imul
les
jb
adc
mov
in
call
lods
jg
add
xchg
adc
mov
cmp
mov
inc
mov
imul
icebp
adc
mov
rorl
cmp
jg
in
pop
sub
push
and
sbb
or
les
add
jne
and
inc
add
mov
jl
lret
xor
xor
pop
pop
sti
lret
adc
lock
rolb
ja
and
rcl
xchg
xor
adc
adc
cmp
add
jle
push
jle
push
or
fsubrs
pop
in
add
push
push
or
out
call
cmp
push
jmp
sub
pop
rorb
push
dec
mov
pop
jp
sbb
loope
rorb
adc
cmp
jne
pusha
push
push
adc
rcll
xchg
xchg
sub
adcb
inc
xchg
xchg
daa
rcrl
cmpsb
or
adc
addr16
jbe
xchg
xchg
jb
adc
mov
push
insb
adc
rep
push
mov
adc
xor
jmp
adc
adc
pop
call
das
hlt
xchg
mov
pop
cmpl
sub
pop
sbb
clc
adc
or
repnz
or
jo
decl
cmp
jbe
enter
and
jnp
xchg
jle
ljmp
jl
ljmp
test
push
js
jg
push
push
mov
and
mov
je
mov
inc
dec
or
icebp
dec
xchg
cmp
mov
add
hlt
cmp
jge
lret
shl
call
dec
xchg
imul
shll
pop
cld
or
aas
clc
test
scas
sbb
sbb
hlt
jg
in
adc
pop
lock
rclb
data16
cmp
ja
stos
sbb
daa
ficoms
jno
sub
call
jg
pop
js
sub
dec
or
and
pop
add
test
cmp
jne
into
push
inc
xlat
xor
ja
lea
lock
mov
or
ds
cmpsb
mov
mov
jecxz
mov
ds
dec
lahf
dec
mov
and
adc
cmp
loope
fs
lret
push
cmpsl
leave
ja
in
std
addr16
add
xor
and
or
add
sub
inc
or
lahf
jb
shll
cld
jae
xor
arpl
ja
notb
add
movsb
outsb
jae
adc
xchg
cmp
cwtl
jbe
test
jne
xor
pusha
mov
enter
push
add
cmp
notrack
xor
push
inc
mov
adc
test
inc
push
mov
stc
aas
int3
cmp
andb
inc
jg
jne
xchg
imul
cltd
pusha
aas
ret
xor
push
les
adc
cmp
push
push
push
outsl
insl
sub
jg
outsl
mov
pop
les
faddl
pop
cmp
add
cltd
sub
inc
sub
pop
mov
dec
jg
repnz
sub
sub
push
inc
sbb
inc
cmp
xor
cmp
int3
mov
fwait
push
inc
test
mov
mov
loopne
sub
fstl
add
scas
test
and
cmp
aam
adc
add
dec
add
test
rorb
fadds
shlb
sbb
mov
in
xor
stos
testb
sub
jae
iret
pusha
xor
rorl
sub
testl
lahf
inc
je
imul
adc
les
dec
and
inc
sbb
inc
adc
popa
sti
mov
out
mov
imulb
xchg
mov
adc
add
dec
jge
test
mov
adc
pop
mov
mov
int3
mov
inc
movsl
ljmp
sarb
xor
clc
pop
jecxz
popf
rolb
and
or
cltd
sub
cmpsl
sbb
in
and
mov
sub
xchg
mov
or
or
mov
je
popa
dec
mov
xor
xchg
jb
xchg
mov
inc
mov
dec
dec
pop
fnstcw
mov
and
arpl
xchg
push
sti
repz
into
mov
adc
fdivrp
scas
xor
leave
or
xchg
into
jne
mov
xor
pop
pop
jecxz
sbb
mov
jns
mov
bound
icebp
loop
inc
mov
xor
adc
pop
xor
fs
xchg
stos
add
imul
sti
in
and
jne
lea
dec
adc
iret
jmp
cli
imul
outsl
or
bound
pop
out
xor
jo
nop
push
xchg
iret
xchg
out
repnz
push
scas
and
mov
shrb
push
call
insl
test
mov
jne
lods
cmp
jle
xchg
stc
cmp
cmc
cld
ljmp
mov
cld
movsb
cmp
ss
cmp
push
or
pushf
movaps
pop
cmp
ljmp
pop
push
test
jle
mov
sbb
push
popf
shrb
or
pop
inc
adc
add
movzwl
roll
and
lods
loopne
call
adc
cltd
mov
cmc
call
jnp
lea
push
push
mov
sub
rorb
cltd
mov
or
ret
xchg
adc
xor
sub
sbb
inc
push
dec
cli
dec
pop
or
sbb
add
xchg
push
pop
mov
sub
jmp
nop
xorl
dec
adc
or
and
pop
or
mov
sbb
mov
rcrl
andl
les
jns
xor
movsl
bound
ficoms
dec
ret
orl
jmp
add
inc
mov
inc
and
pop
push
add
push
sub
push
or
clc
dec
mov
xchg
daa
push
adc
or
adc
gs
movsb
inc
in
ret
inc
or
or
adc
dec
jl
pop
jle
dec
jmp
jae
push
sub
xchg
andl
je
sbb
sub
jg
jp
cld
daa
push
cmc
cmp
lds
fwait
mov
xor
stc
push
les
or
inc
insb
sub
dec
idivb
and
pop
inc
push
test
sbb
call
sub
mov
push
sub
je
xchg
movsl
or
nop
xor
sbb
test
inc
aas
mov
out
and
dec
stos
sbb
pop
movsl
je
mov
nop
jmp
cld
mov
xor
dec
adc
pop
in
adc
test
sub
in
sti
add
arpl
pushf
mov
jb
enter
ja
xchg
call
xchg
xchg
push
and
out
cmp
xchg
push
inc
cli
xor
call
movl
mov
sub
leave
andl
mov
shrb
mov
mov
lret
mov
pop
pop
mov
out
dec
lods
xor
stos
add
push
cmp
mov
mov
add
and
and
in
xchg
adc
psubsb
and
dec
cwtl
mov
push
mov
rcrb
adc
adc
das
lea
adc
leave
adc
test
jne
sub
sets
mov
xchg
pushf
outsb
jne
and
mov
sub
push
xchg
sub
dec
and
cmp
mov
xor
pop
xchg
mov
push
vminss
or
jb
xchg
inc
scas
lods
mov
cmp
jne
movsl
sub
test
pop
xor
pop
and
dec
sbb
sub
incb
ret
cmc
lcall
divb
and
push
and
dec
mov
in
loopne
or
mov
inc
add
lods
sub
inc
repnz
xor
push
mov
dec
aam
pop
je
das
sub
or
jne
mov
fisttpl
adc
incb
xchg
mov
imul
shl
or
and
nop
mov
mov
mov
nop
daa
fs
pop
lea
lods
sbb
js
cmc
repnz
sbb
lret
cmc
fninit
pushf
shrl
cmp
fldl
fisttpll
cmp
sub
mov
pop
in
or
jns
loop
cmp
gs
jmp
sub
les
and
and
pop
and
adc
clc
mov
adc
out
push
mov
inc
adc
mov
fdivrp
xchg
xchg
mov
sub
loope
xchg
push
in
inc
dec
sub
mov
mov
push
mov
test
mov
xchg
adcl
enter
mov
and
shl
push
incl
daa
test
cmpb
clc
inc
outsb
in
mov
jne
frstor
nop
divl
bound
dec
out
in
jo
test
ficomps
movsl
add
mov
adc
ret
mov
popf
js
lock
or
mov
scas
lret
jne
sub
fists
mov
scas
nop
cmpl
out
dec
pop
aam
mov
stos
mov
sub
xor
sbb
lods
shrl
or
inc
loop
inc
xchg
mov
shrl
mov
out
fwait
hlt
in
inc
or
xlat
fistl
lcall
mov
imul
pusha
pop
mov
mov
and
sub
push
je
mov
cmp
repnz
negl
and
xchg
mov
cltd
or
imul
sarl
mov
loope
adc
dec
sub
loop
mov
mov
and
cmpsb
cltd
mov
xchg
inc
adc
mov
push
push
add
nop
sbb
jb
and
ja
push
push
int3
cltd
rorb
and
stc
cmp
cmp
test
call
repnz
repnz
jns
and
add
pop
xchg
in
sbb
out
dec
mov
cld
xchg
rclb
push
dec
inc
addr16
movd
or
aam
add
mov
jg
filds
in
std
xchg
ficomps
xchg
ljmp
and
mov
jne
inc
das
andl
cli
popf
and
lds
repz
push
adc
jbe
jns
xchg
or
mov
repz
stos
fcoml
pop
in
push
stc
lods
leave
js
pop
mov
stos
and
push
stos
outsb
hlt
mov
mov
xchg
sbb
andl
push
shlw
dec
das
add
push
push
mov
ss
push
pop
sub
pop
aaa
and
jns
in
push
mov
stc
hlt
jb
shll
mov
jo
sbb
adc
cmp
jne
mov
or
arpl
ret
pop
inc
or
pop
xchg
rcrb
push
or
pop
mov
cmp
rclb
dec
lock
lock
leave
push
push
and
rolb
mov
das
in
dec
lret
pop
pop
pusha
jb
lea
ffreep
ret
and
pop
mov
dec
sbb
pop
rdmsr
test
sub
jg
test
mov
andb
jb
push
inc
or
add
xlat
push
sbb
jne
sbb
jmp
sub
or
test
mov
fisttps
data16
inc
les
repz
xchg
pop
leave
mov
mov
cld
inc
push
decb
jb
bound
adc
pop
lea
bound
fs
push
mov
scas
mov
fsubrs
pop
int3
pusha
xor
dec
pop
sbb
inc
ss
cmc
cmp
iret
in
mov
mov
adc
popw
out
adc
and
jmp
sub
repz
cmp
in
jge
sbb
cmp
jnp
and
push
inc
jecxz
cmp
inc
mov
addl
add
imul
sub
add
cmp
inc
or
sbb
pop
mov
push
mov
mov
test
call
lods
imul
popa
sub
and
mov
adc
mov
mov
aas
sub
cmp
jge
gs
pop
jmp
aaa
cmp
fisubl
std
sbb
push
mov
ret
push
imul
mov
mov
repnz
dec
in
cmp
mov
rorl
int
mov
stc
clc
gs
bnd
pop
rcll
adc
dec
mov
jle
mov
push
les
fsubrs
mov
xchg
xchg
sarl
les
push
call
adc
leave
hlt
add
inc
cwtl
imul
adc
adc
call
jmp
mov
pop
scas
adc
enter
jmp
loop
cld
in
push
clc
into
fisttpl
testb
mov
les
xchg
hlt
mov
jo
adc
sub
xor
test
mov
mov
insb
add
hlt
and
ret
jmp
fstl
into
and
mov
rorb
and
mov
mov
std
jae
adc
lods
gs
sub
pop
pop
lods
aad
push
adc
sub
cmp
sub
rorb
fists
in
add
sub
lea
or
outsl
push
mov
sbb
xlat
call
xchg
sti
inc
adc
pop
imul
out
orb
add
dec
jmp
test
inc
push
lcall
fdivs
adc
out
out
xchg
inc
push
aas
cmpb
cmc
loop
jg
or
sub
mov
movsl
addr16
mov
cltd
inc
gs
adc
mov
mov
jno
aad
pusha
and
mov
dec
inc
mov
mov
pop
sub
pop
lea
xchg
xor
repnz
cmpsb
and
sub
movsl
loop
mov
fnsave
inc
lcall
std
and
test
into
push
push
enter
and
dec
int3
or
adc
xchg
das
jp
mov
push
ss
xchg
test
inc
cmp
xchg
push
xchg
mov
cltd
push
inc
outsl
inc
mov
data16
and
std
sub
mov
cli
inc
inc
test
fmuls
jnp
dec
xchg
dec
mov
lock
xor
leave
cmp
in
imul
orb
filds
xacquire
mov
and
push
inc
mov
pusha
adc
and
nop
mov
popa
leave
fmulp
mov
add
mov
clc
push
push
out
xor
sti
push
xchg
add
call
mov
int
sbb
pop
mov
into
mov
leave
jmp
push
lods
xchg
inc
pop
cmp
lock
mov
mov
in
push
or
cs
inc
xor
je
lock
pusha
inc
xchg
aas
dec
test
mov
daa
xchg
jae
and
adc
xchg
push
rolb
mov
jo
adc
in
out
test
mov
add
fdivr
pop
out
sbb
and
movsb
jae
lods
das
mov
xchg
push
dec
pushf
cld
push
adc
and
push
mov
cmp
out
or
stos
cmpl
sahf
lock
push
mov
sub
push
sbb
inc
sub
cmp
dec
and
lahf
and
fs
sbb
add
int3
ljmp
andb
pop
orl
adc
push
sub
movsl
dec
lock
sub
test
mov
test
mov
ret
jmp
jmp
pop
xchg
mov
pop
shll
fisttpl
cmc
mov
and
add
dec
repnz
lods
ja
and
cmp
push
das
jo
popa
push
or
and
sub
call
test
xchg
fsubr
enter
jge
lret
and
nop
and
subl
cmp
cmp
shlb
add
mov
and
lods
popf
pop
xchg
jns
inc
and
les
enter
adc
or
adc
leave
paddq
ret
push
jle
stos
sub
push
insb
in
lds
adc
jmp
add
sahf
mov
mov
push
outsl
or
xor
mov
add
mov
jge
in
sbb
sub
mov
push
xor
and
pop
jl
js
mov
mov
aad
xchg
push
test
adc
xchg
push
adc
or
lret
dec
or
mov
push
ja
out
jo
jecxz
ds
lds
push
fucomi
sahf
mov
xor
jno
in
insb
call
pop
jle
jne
lret
sub
mov
and
mov
js,pt
dec
hlt
adc
dec
push
call
pop
test
inc
mov
bound
data16
mov
jnp
sub
mov
out
pmaddwd
xor
es
dec
add
shr
cmpw
insb
pushf
xchg
in
pop
sub
sub
pop
xchg
and
clc
mov
jae
cmpsb
sbb
jne
in
outsb
test
mov
adc
xchg
sbb
sub
or
xchg
stc
test
push
inc
jecxz
adc
std
cmp
test
inc
cmpl
and
adc
mov
sbb
arpl
mov
mov
adc
jo
xor
adc
and
jl
sbb
sbb
sbb
lock
nop
insb
pop
pop
lds
xchg
push
dec
lret
jg
addr16
ljmp
inc
rorb
mov
and
jp
ljmp
push
xor
lret
nop
push
adc
cmp
ret
mov
fcomip
cmc
and
out
int3
push
popa
xchg
les
or
xchg
adc
bound
jne
mov
ret
test
pop
and
lret
xor
std
pushf
mov
fistpll
cmpsl
ret
jg
xor
cli
les
shl
jl
pop
xchg
mov
popf
xlat
adc
mov
cmp
push
scas
jb
pop
pop
inc
sbb
pop
jne
jg
lock
ficomps
push
mov
and
and
jge
inc
or
std
xchg
xchg
fdivrl
loopne
jns
lods
lods
sbb
sbb
ret
cwtl
jp
mov
add
test
dec
in
std
bound
adc
loope
popa
pop
rorb
xchg
inc
pop
lret
dec
cmp
cld
mov
mov
scas
clc
decb
jg
push
pop
test
enter
adc
mov
sbb
je
or
sub
and
ret
pop
cld
je
fidivl
pop
jge
movsl
jge
loope
push
nop
adc
jle
push
movsb
add
adc
aad
xchg
cmp
sub
fcoms
lea
test
lods
js
jle
hlt
fucomip
mov
outsl
and
cli
dec
popf
adc
mov
cmp
negb
xor
daa
adc
jno
adc
add
and
rclb
std
add
shrl
or
cmp
les
fs
out
ds
sub
pop
xor
sti
out
leave
fcmovu
cwtl
icebp
add
test
cmp
mov
std
and
jne
lods
mov
ljmp
jb
aad
repnz
mov
cmpl
dec
xchg
and
inc
test
lahf
sarl
pop
xor
jecxz
cmp
adc
xor
imul
and
jb
xchg
fisubrl
mov
add
into
adc
jge
and
cli
mov
push
cmp
movsb
int3
cld
scas
enter
inc
pop
jl
jno
movaps
xchg
push
pop
hlt
mov
dec
push
or
or
rolb
add
sub
or
inc
loope,pn
and
push
js
pop
lods
mov
pop
inc
idiv
dec
repnz
cld
cmp
lret
add
push
or
xor
shrl
mov
sbb
fimuls
push
mov
mov
dec
in
xchg
in
or
outsb
lea
call
or
mov
or
call
adc
ljmp
sub
pop
and
popf
add
sbb
add
fsubrl
push
push
std
adc
sub
and
push
mov
or
sbb
sbb
testb
pop
sbb
dec
mov
jg
movl
pop
call
mov
dec
sub
imul
in
sbb
push
test
das
mov
jl
mov
int3
loop
fwait
andb
xchg
loopne
enter
or
das
mov
insl
add
aam
adc
cmc
xchg
dec
xrelease
xor
lea
xchg
repz
jmp
cmpsb
cmp
fisubl
popa
xchg
fnstsw
ret
and
cmp
jbe
gs
out
repnz
popf
psadbw
add
and
cli
ja
pop
dec
adcb
mov
fdivrl
scas
sub
sub
and
inc
insb
jl
lds
inc
lea
jmp
test
mov
xchg
cmp
fs
sti
and
pushl
std
pop
push
and
and
addr16
iret
push
xlat
enter
sahf
push
jbe
das
mov
sarl
inc
push
mov
daa
lcall
jl
enter
hlt
mov
test
sub
insl
mov
dec
pop
xchg
push
subb
xchg
pop
jne
sub
test
push
or
xor
call
mov
pop
mov
and
mov
inc
adc
ds
pop
xor
test
sbb
inc
mov
leave
pop
or
imul
sub
pop
enter
inc
call
adc
xor
jge
xor
and
sbb
add
sbb
jne
cltd
iret
mov
ljmp
fdivrs
insl
jl
insb
sarb
test
sub
outsl
or
cli
jl
js
shlb
stos
cmp
popfw
bound
int3
test
push
pop
insb
mov
iret
fsubl
jle
xor
loop
push
cmp
push
pushf
pusha
push
fsubrs
stos
mov
leave
adc
or
and
or
sub
jmp
es
cmp
pop
out
in
pop
xor
lret
inc
ret
cmp
mov
enter
jbe
insb
int3
in
ds
xor
jmp
mov
out
fnstcw
or
call
cmp
rorl
xchg
lret
mov
mov
push
out
and
and
push
sbb
or
fs
mov
adc
aam
and
push
mov
repnz
jo
and
pop
loop
or
test
or
push
lahf
pop
dec
es
pop
daa
dec
ret
mov
jnp
pop
jo
xor
test
popf
pop
sbb
sub
sub
xchg
lahf
fmuls
fs
cmp
mov
mov
dec
mov
jns
sarb
out
cmp
adc
xchg
or
mov
adcl
pop
xchg
adc
jl
es
sbb
mov
adc
jne
decl
mov
je
inc
daa
and
inc
or
scas
jae
mov
jp
inc
or
rclb
dec
fmuls
xor
cmpl
mov
dec
stos
lock
dec
out
sub
mov
xor
and
or
mov
dec
or
clc
clc
mov
loope
or
dec
jb
sub
jmp
and
xor
xchg
xor
jmp
mov
or
fisttpl
pop
loop
push
pop
jne
mov
pop
xchg
lods
leave
sbb
in
mov
xlat
mov
adc
gs
mov
mov
cmp
mov
mov
cmpb
mov
jno
pop
mov
xchg
lret
jge
dec
xor
sarw
call
in
inc
nop
es
add
sbb
nop
ljmp
xchg
mov
pop
mov
or
les
xor
mov
push
jle
les
test
cwtl
dec
add
cs
add
dec
xor
inc
add
cmp
jg
je
das
in
sub
pop
pop
pop
jmp
ret
rcr
adc
std
adc
adc
or
insl
stc
add
jo
inc
push
pop
inc
push
and
jne
stc
lods
push
xchg
add
clc
xchg
nop
adc
ja
mov
pop
in
daa
xor
push
in
or
cmc
outsl
mov
jle
pop
push
movsb
and
adc
mov
por
sbb
mov
movsb
mov
mov
xchg
fisubl
push
cmp
inc
mov
sub
adc
push
or
push
ja
fdivrp
es
pusha
xor
outsl
lret
inc
and
pop
add
xchg
push
cmp
cld
inc
test
and
and
jp
cmpsb
cmp
lret
dec
sbb
xor
pop
inc
inc
stc
scas
int3
add
jne
cld
add
je
cmc
mov
sub
or
push
mov
movsb
pop
or
push
jl
pop
push
sub
jmp
pop
clc
xor
pop
movsb
dec
add
movl
inc
ss
outsb
or
push
les
pop
cwtl
mov
inc
and
enter
xchg
xchg
outsb
idiv
pusha
pusha
cli
xor
xchg
ficomps
push
gs
pop
loop
call
jg
popa
and
nop
es
xchg
cld
dec
xlat
scas
xchg
ss
mov
pusha
jecxz
and
stos
icebp
fstl
sub
push
push
stos
mov
hlt
scas
rolb
repz
mov
dec
or
cmpb
pop
dec
lret
bound
push
or
sbb
stc
addr16
test
jle
pop
or
inc
mov
jmp
cmc
adc
mov
inc
hlt
xchg
push
jno
orb
call
loopne
cmpb
sbb
push
and
add
lods
pop
jl
xchg
rcrb
nop
adc
jmp
hlt
pop
mov
or
cmpsb
repz
jne
pop
popf
dec
inc
inc
fwait
jecxz
push
sub
xor
jne
pop
mov
stos
push
lahf
test
leave
add
or
adc
xchg
xchg
sub
dec
jne
jge
inc
int
int3
or
xchg
vpsllq
xchg
mov
lock
or
adc
sti
roll
jb
cmp
mov
jl
push
roll
sub
dec
lock
mov
inc
and
cmp
mov
jno
je
test
pop
mov
es
and
dec
and
lock
data16
nop
add
adc
out
jne
xor
push
adc
sub
and
xchg
ficoml
pop
push
add
rclb
insl
dec
clc
jo
pop
cmc
dec
insb
sub
xchg
test
dec
or
mov
mov
notb
mov
shr
cmc
ljmp
js
test
and
hlt
cmc
fadds
push
adc
cs
adc
sub
xlat
leave
dec
subl
es
inc
mov
mov
adc
and
add
sar
pop
shrl
xchg
jno
fcoml
das
dec
jo
xor
mov
mov
add
call
leave
clc
mov
and
lret
inc
sbb
xchg
inc
mov
jnp
pop
pop
inc
loop
je
and
es
mov
lds
dec
rcrb
mov
das
mov
xor
or
jmp
fcoms
jnp
add
gs
lds
push
leave
mov
sbb
and
dec
push
xchg
jne
call
or
mov
push
push
push
stc
xor
dec
push
dec
xor
push
xor
cmp
or
fisubs
pop
shl
mov
idivl
std
inc
out
mov
sub
add
je
out
push
mov
inc
call
push
pop
test
add
cld
jmp
inc
test
into
adc
insl
loop
sbb
dec
adc
mov
add
inc
cli
push
subl
jns
or
or
iret
sub
mov
call
mov
push
mov
inc
xchg
mov
cld
pop
sub
cli
jg
sub
movsb
dec
shlb
xor
aaa
adc
int3
adc
and
jmp
mov
sub
inc
inc
cmp
adc
adc
dec
sub
push
movsl
and
push
mov
daa
subb
roll
xor
adc
pop
mov
adc
mov
nop
xor
ret
xchg
daa
or
add
addr16
stc
push
movswl
loopne
ds
xlat
push
stos
xor
or
int3
xor
sub
dec
adc
mov
mov
pop
cld
sti
and
test
inc
cs
call
cmp
jge
or
adc
les
push
movsb
lret
mov
push
nop
mov
and
sub
jae
mov
sbb
mov
push
sbb
sbb
sub
xor
push
mov
inc
fmuls
adc
inc
loope
xchg
cmpsl
inc
jno
mov
push
das
test
push
sti
mov
push
and
adc
orl
inc
or
inc
push
adc
mov
pop
cmpsb
enter
sbb
data16
lcall
adc
in
ja
cmp
cld
hlt
jae
sub
inc
ljmp
jns
mov
inc
xor
movlps
mov
sub
outsl
and
adcl
lock
or
test
dec
dec
or
adc
repnz
cmp
xor
xchg
test
jecxz
adc
inc
sbb
cmp
mov
and
jp
cld
jb
outsl
rcr
xchg
mov
and
arpl
rcrb
push
mov
dec
sti
dec
mov
gs
mov
pop
shr
and
stos
mov
adc
sub
mov
mov
pop
call
lock
pop
and
das
je
mov
mov
pop
cmc
push
sbb
pop
or
or
and
clc
xchg
xchg
lods
ret
in
mov
mov
jge
into
jb
lret
mov
and
xor
mov
cmp
jmp
in
lret
sub
adcb
cltd
or
dec
pop
ret
and
push
jmp
xor
mov
xor
xchg
rorb
shll
pushf
jne
sub
push
sti
das
and
test
imul
xchg
xchg
enter
ds
sub
enter
mov
adc
ss
dec
fcmovb
jg
or
push
jmp
push
cwtl
mov
fs
xor
pop
cwtl
and
sub
xor
sbb
cmp
inc
je
push
xchg
jbe
daa
push
cld
in
test
pop
mov
adc
stc
adc
or
mov
bswap
push
push
push
int3
push
sbb
push
xor
sub
mov
xor
adc
cmp
testb
cmp
inc
mov
xor
xor
leave
xchg
int3
test
cmpsl
icebp
insl
lcall
popf
int3
or
xchg
pop
mov
dec
fildl
mov
arpl
inc
sub
push
xchg
push
stos
sub
mov
sub
imul
cmpsl
xchg
shrl
or
dec
mov
repz
adc
js
in
or
cmp
or
and
pop
mov
and
loopne
add
int3
or
test
and
adc
iret
leave
ja
mov
or
inc
in
aaa
aam
cmp
or
adc
cli
cmpsl
lock
dec
mov
fildll
sub
jb
call
or
sbb
push
movb
aaa
push
or
popa
adc
jns
adc
jne
pop
dec
xor
adc
bswap
push
and
or
cmp
mov
fcmovnbe
xor
xor
in
flds
dec
push
clc
fstp
dec
je
mov
cltd
int3
inc
or
xchg
sbb
fs
mov
pushf
push
push
dec
or
mov
push
sub
out
mov
push
in
faddp
ret
sub
pop
pop
cmc
pop
xor
cwtl
or
or
cmpsl
or
adc
inc
mov
mov
sbb
dec
xor
xor
fdivrl
stos
sbb
push
xchg
inc
mov
rolb
sub
push
pop
push
push
hlt
rorb
cltd
adc
ss
xchg
int
mov
sbb
shlb
or
push
or
aam
rcrb
dec
add
jmp
adc
mov
jge
jle
xorl
add
or
cmp
dec
and
lods
fdivrl
xor
aas
push
es
or
inc
mov
enter
or
inc
inc
or
les
call
jb
test
and
in
jl
mov
ret
jmp
jmp
inc
pop
sub
fs
add
les
cli
decl
mov
mov
jmp
xchg
and
or
mov
subl
pop
adc
cmpsl
lds
xchg
ret
mov
ds
movsb
cmp
push
lret
xchg
pop
pop
pop
lds
enter
cs
add
sahf
pop
notl
addl
popa
lods
xchg
cs
push
xlat
ret
mov
test
cmpsb
jno
mov
sbb
lret
or
or
xchg
sbb
push
scas
ret
loop
inc
loope
in
sbb
test
pop
push
into
test
stos
loop
pop
jmp
push
xor
imul
mov
fdivr
int3
int3
mov
xor
jmp
add
sub
inc
cs
jbe
in
loop
sub
scas
mov
adc
sub
bnd
push
xchg
aaa
push
inc
fadds
or
pop
subl
or
ror
shrl
cli
lods
daa
adc
and
daa
adc
clc
mov
inc
dec
adc
add
in
fmul
dec
adc
and
adc
mov
jo
and
xchg
int3
xor
ljmp
mov
dec
jb
cli
adc
std
inc
jmp
sub
test
loop
inc
into
and
jne
push
cmp
mov
mov
sub
cltd
mov
and
gs
dec
mov
orb
fdiv
nop
push
mov
popf
sbb
into
inc
roll
xchg
jg
mov
push
call
mov
and
orl
xlat
insb
repz
dec
push
scas
jle
out
mov
aam
popf
loopne
sbb
sub
mov
movsb
jae
mov
inc
xchg
ss
cmp
pop
lcall
adc
mov
push
and
int3
pop
dec
fmull
inc
cli
pop
add
mov
sub
incl
loope
cld
fidivl
pop
outsl
cmpsl
sarb
in
fisubrs
fidivrs
bound
jne
jne
imul
adc
test
inc
aam
lret
dec
cli
and
xor
push
adc
or
sbb
cwtl
push
lods
adc
jbe
inc
pushl
fildll
adc
push
sub
seto
mov
pop
add
outsl
jecxz
test
call
mov
add
cmp
inc
adc
adc
mov
es
in
adc
mov
add
xchg
sub
dec
adc
cli
std
imul
test
pop
sub
in
and
jne
inc
jbe
and
loopne
mov
sbb
xchg
pop
cmp
jbe
es
test
mov
std
std
dec
push
and
sbb
adc
jbe
inc
ja
inc
leave
and
mov
aam
push
jge
inc
fildll
jmp
mov
push
lahf
js
pop
orl
ljmp
jnp
dec
movl
push
lods
sub
ljmp
cld
js
popf
fnsave
std
sbb
add
or
popa
es
sti
or
xor
leave
cmp
push
pop
jae
push
dec
jmp
sbb
ret
jns
test
push
xor
frstor
push
mov
mov
cmp
and
push
add
mov
xchg
mov
mov
pop
or
jno
inc
lcall
sahf
push
and
sub
pop
xor
adc
sbb
sbb
add
dec
inc
mov
loop
mov
xchg
mov
dec
inc
mov
std
mov
cwtl
ret
sbb
test
inc
mov
orb
leave
cmp
aaa
pop
cs
mov
sysexit
push
cli
sub
dec
xchg
cs
dec
and
and
or
movsb
sti
test
inc
stc
add
call
push
enter
and
into
mov
dec
push
pop
je
inc
adc
and
jae
pop
orl
sbb
fiaddl
call
add
popf
test
or
das
lock
fs
sub
jno
lock
sub
fcoml
popl
adc
shlb
cmpsl
mov
lock
xor
pop
sbb
mov
cmp
xchg
inc
fs
adc
and
sarb
mov
adc
adc
add
sti
xor
or
or
or
cmp
ret
rcll
jbe
dec
pop
cwtl
cltd
pop
and
popa
cmpb
dec
pushl
popa
jp
aas
mov
dec
sub
ret
xor
and
adc
scas
and
enter
jne
add
and
or
dec
pop
or
scas
lahf
stc
hlt
in
scas
std
mov
fsts
sub
das
and
pop
enter
andl
push
push
leave
jmp
xchg
popa
push
dec
add
test
sbb
jge
sub
sbb
adc
pop
and
sub
mov
and
dec
cmp
outsl
or
icebp
inc
push
and
hlt
enter
push
scas
cld
stos
shr
imull
dec
xor
test
and
adc
dec
les
sub
inc
std
cmp
loope
or
cmp
jge
push
cmp
jno
loope
mov
lods
ds
inc
outsl
stc
sbb
sbb
or
stos
mov
inc
in
test
inc
push
jo
xchg
xchg
adc
stos
ret
int3
add
xor
lcall
adc
daa
or
leave
bound
and
call
xor
cld
mov
je
sti
and
popf
pop
mov
pop
out
sti
push
fucomip
pop
cmc
inc
cld
das
jne
or
mov
dec
dec
push
push
movsl
and
and
cwtl
push
xor
ja
mov
incb
push
or
test
xlat
cltd
fsubrs
int3
data16
dec
push
pop
jbe
push
fisubrs
dec
sti
sub
arpl
pop
push
fildll
stc
jle
in
ficomps
adc
mov
jmp
cwtl
mov
or
add
sub
sbb
sbb
adc
push
daa
test
sub
dec
lcall
mov
dec
in
jnp
push
andb
mov
add
mov
js
mov
movswl
jae
mov
aaa
fiaddl
sbb
push
adc
adc
push
filds
jnp
imul
ja
dec
sub
add
imul
cmp
xor
dec
sub
sbb
mov
mov
call
popa
mov
int3
jnp
xchg
movsl
sti
movsl
or
lock
sbb
push
inc
push
xor
push
sbb
mov
js
xchg
fimuls
sub
pop
pop
inc
dec
arpl
cmpb
push
push
mov
insb
mov
fs
sti
dec
mov
cmpb
adc
adc
sub
xor
aaa
inc
pop
les
lods
xorb
scas
dec
push
pop
mov
xchg
fists
ret
mov
lock
inc
xor
call
cmp
lods
xor
loop
inc
fimuls
shrb
mov
mov
dec
insb
push
cmp
in
fstpt
sbb
call
adc
icebp
xchg
adc
sbb
arpl
scas
cmc
stos
sub
hlt
mov
inc
lds
and
loop
popa
inc
call
or
rolb
push
pop
pop
stos
cmp
cmp
mov
cmpsl
pcmpgtb
out
mov
and
das
inc
push
in
sub
and
pop
pop
dec
cmpsl
out
push
movb
in
fdivs
sub
subl
mov
out
cli
adc
notb
adc
sub
sbb
adc
add
stos
imul
adc
xor
lret
add
mov
cmp
jle
sti
add
int3
bound
das
call
aam
and
jg
icebp
push
adcb
jns
idivl
adc
nop
push
test
jmp
mov
sub
es
adc
lea
jnp
and
pop
xchg
pop
sub
xlat
add
or
fistl
in
je
out
push
push
sarb
jp
adc
lahf
inc
sbb
inc
fs
sbb
js
mulb
ljmp
pusha
inc
adc
sbb
lods
and
test
dec
aaa
push
out
adc
and
dec
sub
jge
pop
push
mov
repz
xor
test
popa
dec
push
add
cmc
add
and
mov
call
adc
pushl
jbe
mov
je
frstor
sbb
adc
add
stc
mov
push
sbb
ret
test
add
repz
or
adc
pop
leave
cli
pusha
sbb
mov
sbb
outsl
dec
and
inc
lahf
mov
das
movsb
mov
sub
sbb
mov
cmp
jne
cmpl
cmc
fwait
sub
lcall
fisubrs
push
jno
fsubrl
adc
adc
dec
dec
lea
jmp
cmp
cwtl
cmc
push
adc
lcall
sti
jo
mov
adc
inc
mov
and
mov
add
ja
adc
push
dec
or
sbb
jmp
cld
sub
das
inc
sub
or
and
adc
ror
adc
ret
adc
jle
in
jge
clc
iret
orps
repnz
adc
call
popf
outsb
add
jns
lcall
pop
jns
xor
repz
pop
shr
adc
push
or
adc
and
in
pushf
pop
adc
les
jmp
adc
xor
cmpsl
mov
test
cltd
idiv
mov
arpl
sti
and
add
adc
dec
out
aad
bound
and
push
add
push
stos
js
outsb
jne
cld
cmp
repnz
cs
stos
adc
sub
test
sbbb
sub
and
dec
pop
push
lock
or
stc
sub
div
andb
movsl
fucomp
pop
push
or
xchg
mov
sbb
mov
mov
cmp
sub
inc
ja
iret
or
movsb
dec
jbe
bound
shl
adc
std
ret
inc
lods
mov
or
adc
and
add
jg
cmc
xor
jbe
sub
cld
pushf
push
into
and
add
inc
push
add
js
daa
dec
test
mov
insb
les
test
sub
das
int3
adc
push
lahf
imul
insb
inc
fdiv
add
sqrtps
lock
lock
lcall
pop
or
or
addr16
xor
mov
jp
xor
mov
inc
mov
nop
jae
inc
adc
xor
push
je
or
imul
mov
and
sub
jge
shll
inc
movsl
push
lahf
cli
addb
sub
incb
js
jge
shrl
out
adc
pop
rolb
or
call
divl
in
jo
ljmp
cli
int3
loopne
enter
je
es
mov
es
and
in
xchg
adc
mov
incl
jne
stos
push
or
cmpsb
and
mov
push
sbb
ljmp
loopne
dec
mov
nop
lret
dec
sub
push
insb
adc
jl
adc
adc
sub
arpl
sub
shlb
xorb
scas
pop
adc
pop
pusha
xchg
mov
xchg
pop
stc
cltd
pop
hlt
pop
sbb
adc
call
out
movsl
cmp
or
dec
hlt
mov
mov
pop
or
mov
daa
mov
jle
adc
jo
add
adc
or
sbb
loop
inc
out
mov
and
or
mov
xor
stc
sub
cld
adc
imul
ret
jge
sbb
and
mov
sbb
xor
fs
cmpb
fs
sub
or
mov
lods
dec
cmc
mov
push
push
xchg
in
or
rol
ja
es
shll
adc
mov
outsl
cmp
dec
cmp
cmp
xor
mov
add
cmc
cmp
or
sub
jmp
adc
sbb
cld
imul
adc
mov
in
push
int
dec
or
xor
hlt
loop
sbb
jo
jmp
outsb
inc
mov
and
repnz
nop
mov
push
mov
add
mov
incl
or
jecxz
mov
stos
call
xchg
test
sbb
cmp
xchg
mov
ret
je
icebp
jo
inc
cmpsl
push
mov
pop
sub
bound
movsb
dec
mov
mov
jge
pop
movsb
insl
inc
test
inc
clc
pop
push
mov
inc
add
push
rcl
xchg
fwait
out
aam
test
pop
sub
test
or
fs
ret
mov
xchg
or
sub
jnp
jle
mov
cs
cmp
fcoms
jge
std
sub
and
xchg
pop
mov
imul
cmp
daa
hlt
jg
cmp
push
add
pop
jle
jnp
enter
pusha
in
scas
inc
dec
je
cmp
adcb
cli
adc
fsts
test
inc
adc
and
push
push
jge
int
mov
test
push
sbb
add
add
sub
pop
and
jno
es
scas
pop
rcl
bound
out
loopne
dec
adc
push
lea
sarb
mov
push
adc
pop
scas
xor
imul
inc
cmc
push
inc
or
bound
mov
cmp
sub
push
fidivs
pop
sti
leave
push
je
pop
adc
and
adc
ss
imul
jmp
lock
jne
outsl
jnp
xor
mov
adc
jmp
ficoms
daa
cwtl
out
neg
jmp
adc
test
adc
sbb
sub
adc
sub
and
sub
xchg
hlt
and
cmp
ds
jmp
lods
call
mov
aaa
cmp
test
scas
aam
add
xchg
sub
lock
loope
sbb
xor
push
push
mov
xchg
cmc
cmpsb
sub
cmp
scas
xor
into
xchg
mov
cmp
add
mov
pop
push
punpckhdq
cmp
xchg
xchg
adc
roll
enter
fdivl
loopne
jle
inc
xor
fmul
or
pop
mov
or
inc
mov
inc
cmp
lcall
test
cld
push
jmp
aaa
lea
adc
enter
xchg
or
std
cltd
lahf
fmuls
dec
test
jne
mov
cmpsl
arpl
push
xchg
mov
or
and
jecxz
scas
or
in
mov
std
leave
or
mov
jg
mulb
cmp
sbb
lods
jae
pop
popf
xor
push
jecxz
mov
cmova
js
jmp
pop
fldl
sbb
push
push
push
mov
out
pushf
cs
fnstcw
scas
mov
bound
xchg
jne
pop
push
sbb
pop
sahf
pop
stos
cwtl
lret
js
aaa
jmp
sub
cmp
pop
imul
inc
push
sbb
jbe
divb
adc
testl
les
notl
push
push
aad
bound
and
dec
or
sbb
pop
clc
and
or
negl
inc
andb
jmp
dec
add
inc
sbb
and
dec
mov
xchg
dec
xchg
cmp
xlat
adc
xchg
xor
push
clc
push
cmp
adc
xchg
pop
dec
imul
and
aaa
push
cli
js
add
cmp
fisubrs
ror
ret
lahf
dec
add
sbb
mov
js
sub
dec
and
sub
mov
xchg
and
dec
sub
mov
adc
jg
lods
mov
dec
sub
push
mov
lock
sbb
jl
jle
enter
inc
subl
dec
jle
jmp
jnp
scas
fsubr
jne
sbb
imul
daa
pop
adc
push
lea
popf
scas
xchg
test
adc
fimull
lret
call
orb
ret
int3
call
add
sub
dec
popf
lds
or
fs
pushf
adc
daa
mov
pop
inc
pop
out
vlddqu
call
cmpsb
fdivrs
ret
adc
in
daa
inc
cwtl
jne
in
daa
lock
lds
and
les
inc
leave
mov
mov
dec
adc
popf
test
cli
loop
es
aas
and
and
sbbl
xchg
mov
push
adc
dec
pop
dec
cld
sbb
lock
shlb
pop
js
lods
lods
pop
mov
cli
in
hlt
nop
jle
sbb
and
push
adc
andl
cmp
add
push
leave
aam
lds
cmp
loop
adc
xchg
dec
imul
inc
movl
pop
mov
and
sbb
jge
pop
inc
popf
insb
add
lea
sub
inc
iret
je
sti
test
sub
mov
test
xchg
call
mov
cwtl
and
ja
jg
dec
jne
mov
lea
dec
jo
xchg
dec
adc
xchg
xchg
les
mov
leave
xchg
adc
pushf
lahf
cltd
inc
in
add
lcall
mov
and
scas
addb
sub
pop
std
add
mov
mov
inc
fs
and
pop
or
jae
leave
inc
push
push
and
out
and
push
jge
adc
leave
testb
adc
pop
sbb
divl
lock
popa
cld
pop
or
jmp
and
sub
ret
jmp
mov
inc
mov
rol
cld
add
out
fstpt
fnsave
outsb
pop
jg
add
js
loopne
add
jg
ret
adc
addr16
test
or
scas
jl
and
and
aas
xchg
lods
push
loope
pop
das
insb
sbb
pop
xchg
bound
out
daa
adc
pop
or
imul
ljmp
push
sbb
and
outsb
adcl
jae
inc
test
lret
dec
dec
adc
sub
decl
in
inc
int
cmp
loope
call
insb
pop
rcrb
shrb
inc
and
push
sbb
enter
outsl
shlb
inc
or
and
or
lahf
jne
jne
sbb
or
lcall
cmpsl
add
dec
dec
sbb
and
mov
int3
es
or
push
les
mov
in
stc
xchg
lods
dec
test
lcall
aas
mov
jns
mov
pop
pop
mov
sti
fisubl
addr16
sbb
dec
mov
xchg
xor
insb
out
mov
clc
mov
mov
fwait
sub
xor
xor
sub
cmc
test
push
sahf
dec
mov
repnz
adc
push
call
loope
lahf
xchg
in
mov
xor
dec
dec
out
leave
pop
or
ljmp
ret
jg
pop
adc
clc
in
jo
cvttps2pi
push
mov
mov
mov
pop
add
cmp
push
cmc
jge
mov
test
cli
nop
and
cmp
adcb
ja
mov
cs
xor
incl
jge
call
mov
sbb
adc
sti
es
xchg
xchg
ret
sahf
dec
cmp
rcll
out
adc
xor
push
aam
outsl
sbbb
dec
xlat
inc
movsl
jmp
add
test
les
inc
cli
jmp
add
jnp
gs
inc
xchg
adcl
loop
sub
cmpsb
cmpsl
fisubl
or
inc
xor
es
jns
push
orl
xor
inc
pop
push
or
add
jge
lea
jecxz
cltd
or
iret
mov
js
stc
sub
pop
xor
and
mov
sub
fsubs
movsl
insb
mov
ljmp
idivl
xchg
cmp
sub
and
sbb
scas
jmp
les
pop
push
lret
dec
sbb
sbbl
ja
xchg
mov
pop
inc
dec
std
mov
add
cmp
jg
push
aam
dec
dec
mov
adc
add
xchg
jo
xor
push
roll
je
enter
inc
xchg
ret
pop
call
call
dec
cmp
clc
adc
test
cmp
pop
lds
xchg
jo
mov
mov
je
lock
mov
hlt
mov
movsb
mov
pop
xchg
mov
or
cmp
pop
jmp
pusha
fadds
inc
lods
outsl
pop
jnp
ret
pop
fs
dec
pop
xchg
mov
popf
jo
bound
jno
js
stos
mov
call
or
pop
movsl
push
adc
xlat
cmp
imul
pop
adc
scas
or
add
adc
int
nop
add
test
jmp
andl
xchg
or
add
cmc
cli
movd
inc
jb
scas
or
sarb
mov
lret
loopne
in
xchg
lock
mov
inc
inc
scas
or
or
adc
out
lcall
cmp
movsb
ss
es
xchg
mov
out
aaa
call
sbb
jmp
xchg
cs
test
out
sub
call
mov
hlt
into
mov
mov
ljmp
sbb
adc
jmp
fwait
sbb
icebp
in
mov
cli
pushf
repnz
inc
inc
and
lock
or
xchg
frstor
push
sbbl
mov
ja
ja
js
adc
or
dec
movsl
decl
cmc
cmp
xchg
das
loopne
adc
lea
les
inc
sti
pop
ja
leave
add
add
sbb
mov
and
lret
or
jmp
xchg
je
call
or
push
xor
mov
das
fdivs
fucomip
sbb
push
mov
add
jns
pop
int3
mov
jmp
or
call
sub
insl
pop
adcl
jo
daa
ud1
fdivrl
dec
inc
or
cli
jno
lcall
inc
nop
test
dec
push
jmp
test
loop
bound
mov
pusha
jmp
inc
push
jle
or
into
push
decl
or
xchg
inc
adc
jl
xchg
xchg
adc
cli
and
xchg
clc
popf
in
out
loop
sti
inc
cmp
or
lcall
es
pop
fstps
push
flds
xor
push
dec
scas
test
jl
adc
call
mov
jle
or
mov
cmp
ja
xor
rorl
lea
mov
mov
lods
inc
mov
in
fsubs
pop
mov
int3
sub
call
jl
inc
adc
pop
dec
xchg
mov
lahf
sub
inc
or
xchg
jmp
ja
or
push
adc
das
push
dec
and
sub
enter
push
mov
loop
dec
jb
or
call
stc
mov
mov
push
xchg
and
dec
xchg
mov
fmuls
add
sar
and
jle
jb
daa
inc
jbe
scas
ds
enter
xor
sub
inc
xor
jae
cmp
jne
adc
dec
mov
add
adc
inc
and
cmp
inc
dec
adc
push
push
inc
out
mov
into
add
aad
and
cmpsb
dec
dec
add
pop
lods
mov
aam
xchg
pop
xor
mov
or
jmp
jmp
sub
and
cmp
adc
and
sbb
dec
icebp
mov
pusha
ret
es
mov
aam
bound
or
adc
jg
ja
push
call
repz
call
push
mov
aam
adc
sub
sub
mov
push
ds
sahf
fwait
mov
cmpsb
pop
insl
sub
or
jp
cmpb
mov
movsb
jmp
cmp
fs
in
je
jecxz
and
adc
cmc
out
ljmp
mov
xchg
sbb
lret
lret
push
xor
repnz
imul
jle
leave
push
sbb
jae
mov
mov
ror
inc
cmp
and
mov
into
mov
bnd
nop
scas
cmp
pop
mov
decb
inc
add
push
fstl
or
inc
xor
push
adc
sub
in
mov
push
push
and
dec
and
and
and
hlt
push
push
mov
jmp
sub
out
fcomps
adc
in
push
push
or
mov
and
jnp
push
dec
or
das
fsubrl
jmp
pop
xor
fwait
mov
inc
xchg
sub
push
jecxz
imul
inc
sbb
adc
sub
mov
ffree
jbe
cs
sbb
adc
or
mov
in
sahf
cmp
mov
pop
clc
cmp
mov
inc
loop
out
aas
daa
outsb
rcrl
jns
mov
fdivp
das
or
jg
call
and
jge
push
add
pusha
ja
jge
cmp
call
in
fwait
cmp
leave
in
push
xchg
ret
adc
jge
bound
and
sbb
cmp
cmp
jmp
in
stos
sbb
mov
hlt
jg
jb
popf
sahf
mov
fdivrl
inc
ffree
fstl
xchg
stc
push
and
and
stos
mov
jnp
pop
sub
jne
loope
or
mov
inc
movhps
mov
out
cld
push
xor
push
mov
pop
popf
gs
daa
adc
ret
and
push
jnp
fs
fldcw
dec
imul
insb
adc
sbb
das
pop
and
push
add
xchg
fsub
and
sbb
or
rorb
scas
test
arpl
xchg
int3
mov
cltd
adc
pop
inc
in
and
cmp
sarl
dec
sbb
add
push
adc
push
lock
fldenv
mov
adc
inc
shl
mov
jmp
sbb
aaa
push
pushf
sbb
scas
inc
inc
aaa
pop
xor
inc
loopne
jno
push
popf
popa
lods
or
jo
fnsave
in
push
andl
add
or
jecxz
mov
fwait
push
jecxz
xor
xchg
or
mov
xchg
sbb
xor
jl
daa
push
inc
fs
imulb
jmp
add
sub
or
cmp
enter
sbb
pop
cmp
pop
or
sub
sub
add
cmp
jl
mov
mov
push
push
subl
test
je
xchg
mov
push
addr16
jns
jg
jg
sub
dec
mov
dec
adc
push
add
and
test
inc
lods
call
and
dec
dec
sbb
imul
popa
push
je
push
scas
std
or
test
cs
loope
lods
aaa
sbb
jg
push
aaa
cmovs
mov
inc
insb
jmp
cmpl
jno
and
adc
mov
sub
mov
sbb
push
jecxz
or
and
cmpsb
inc
cwtl
sbb
loope
sbb
std
sub
mov
jmp
mov
mov
or
sub
stos
adc
inc
push
cs
pop
inc
add
outsb
bound
and
lahf
pop
or
outsl
inc
push
adc
cmp
ss
jg
clc
ja
jb
dec
sub
lret
loopne
add
popf
mov
dec
mov
les
imul
cli
test
and
pop
sti
and
rorb
push
mov
call
testl
pop
mov
mov
add
adc
scas
pushf
int3
xchg
jle
in
fstps
mov
mov
and
jle
pusha
negl
jno
mov
clc
and
sbb
fbld
dec
shrl
std
xchg
es
test
or
mov
mov
sub
adc
mov
inc
mov
out
out
add
mov
cmc
mov
int
jg
xchg
jge
rorb
lea
pop
fucomip
ret
enter
call
pop
xchg
push
and
push
mov
sbb
mov
sbb
cmp
and
rclb
sub
jg
mov
int3
rorl
ret
mov
push
cli
es
inc
fisubs
fs
inc
daa
mov
inc
call
outsl
pop
and
mov
push
mov
shl
inc
mov
jne
bound
xor
daa
xor
xor
stc
jns
sbb
pushf
nop
in
hlt
out
mov
cli
xchg
fldenv
add
call
pop
hlt
leave
ret
jne
rol
dec
or
jge
adc
popf
adc
sbb
push
and
dec
cmp
jge
sbb
inc
or
xchg
fnsave
sbb
loop
in
in
push
xor
in
cli
xchg
jmp
sbb
fs
repz
mov
xor
pop
jo
lock
cmpsl
sbb
pop
and
imul
inc
adc
test
je
pop
dec
and
push
lcall
dec
adc
mov
adc
call
prefetcht1
in
clc
or
mov
pop
pop
pop
inc
pushf
or
mov
das
mov
cmc
mov
xlat
lcall
cwtl
pop
or
das
and
cmpsb
pop
dec
arpl
cmpb
xor
test
jmp
adc
mov
xor
or
sub
xor
dec
sahf
inc
jmp
fcoml
das
aam
fs
loope
inc
lds
lods
pop
mov
pop
add
cmpsl
jo
mov
mov
cmpl
push
loop
inc
dec
movsl
icebp
inc
test
push
gs
mov
popa
push
je
out
loope
fwait
push
sub
jns
cmp
sbb
dec
inc
sbb
mov
cmpsl
ds
push
xchg
inc
push
and
adc
mov
inc
push
and
enter
fs
xchg
sub
adc
inc
insb
jp
pop
lcall
dec
jo
and
ljmp
xor
out
sti
mov
inc
cli
pop
cld
je
push
add
xor
xchg
push
dec
dec
pop
dec
leave
jg
mov
or
cs
dec
mov
insl
loop
das
gs
sbb
pop
dec
popa
jae
adc
and
jbe
jb
imul
loope
jo
mov
jo
mov
fs
sbb
out
push
inc
je
sbb
xchg
jb
fs
dec
outsb
push
leave
mov
popf
xchg
xchg
cmp
add
sbb
push
fisttps
mov
test
mov
adc
int3
fisttpl
mov
xchg
mov
jmp
lahf
and
cmpsl
sub
push
inc
mov
lods
push
scas
shrl
jl
dec
xchg
add
adc
das
cwtl
xor
pusha
das
outsl
cmp
or
xor
adc
mov
clc
mov
jb
dec
ret
scas
sub
ja
adcb
movsb
jno
je
push
icebp
jo
xlat
into
cmpsl
es
loopne
and
xchg
mov
jl
sbb
gs
outsb
mov
aas
xchg
iret
and
push
pop
clc
inc
push
mov
inc
out
and
rorl
mov
mov
out
cmp
scas
and
fsubr
cmp
pop
xchg
movsl
loop
xorb
clc
cmp
mov
pushf
inc
test
nop
pusha
mov
mov
data16
cmc
sub
xchg
lret
pop
shlb
test
inc
push
pop
dec
loopne
in
loopne
aam
inc
or
gs
sbb
push
mov
adc
mov
mov
and
jnp
xchg
and
sub
xlat
jno
addb
sbb
lods
mov
add
enter
add
out
inc
push
or
xchg
call
mov
mov
dec
sbb
js
mov
in
xlat
lcall
push
call
loope
arpl
lea
push
or
icebp
in
dec
cli
stos
dec
ds
inc
out
jno
das
fiadds
and
adc
adc
mov
scas
cld
dec
movsl
mov
add
into
scas
loope
clc
sbb
mov
stos
dec
jg
ret
push
and
pop
inc
inc
fdivrl
inc
cmp
mov
mov
cmc
and
mov
or
dec
push
inc
testl
and
out
stos
pop
fcmovnb
adc
mov
sbb
lcall
or
or
sbb
cmp
setae
jl
ljmp
cwtl
or
imul
jo
add
adc
adc
mov
nop
lock
xor
cmp
inc
dec
dec
fs
pusha
or
mov
cmc
int
loop
popa
add
sub
das
insb
cmp
jl
arpl
gs
sub
jle
sti
or
adc
clc
out
push
push
repnz
or
cmp
inc
pop
jmp
ret
sub
scas
inc
int3
xor
pop
mov
test
lcall
mov
lret
xchg
sbb
mov
dec
inc
lcall
addl
inc
xor
mov
dec
lcall
or
aas
and
push
popa
jae
gs
jle
test
call
inc
cmp
mov
or
xchg
movsb
lea
or
or
addr16
adc
scas
lcall
mov
sbb
add
xorl
and
pop
pop
lods
mov
testb
jl
enter
mov
fadds
loope
add
add
repz
mov
es
adc
in
or
adc
clc
test
or
inc
out
loopne
or
les
inc
out
or
icebp
and
jns
int3
or
dec
sub
jmp
or
leave
je
adc
jnp
mov
rclb
inc
dec
sbb
les
or
in
sub
inc
or
shrl
repnz
rclb
inc
pusha
mov
xchg
sbb
xchg
adc
mov
test
mov
pop
cmpsb
pop
les
jb
cltd
or
jl
inc
pop
out
fs
in
leave
or
or
and
adc
repz
ror
pop
xor
sbb
inc
sbb
jl
xchg
push
push
adc
je
jmp
sbb
repz
xor
addr16
lcall
xchg
or
sub
enter
rcr
pop
push
or
adc
adc
xchg
sbb
fcoms
and
or
push
stos
mov
add
cli
aaa
inc
inc
pop
pop
icebp
cmpsl
mov
add
popa
xor
pop
mov
cmpsl
push
push
lcall
outsb
daa
cld
jl
sub
add
jmp
xlat
inc
clc
or
push
push
mov
movhps
int3
and
rolb
jae
mov
pop
pop
mov
lds
cmp
mov
push
jle
daa
jp
std
adc
loopne
cld
sub
inc
sbbb
pop
push
mov
jl
decl
lea
inc
movsb
in
mov
test
mov
js
in
sbb
or
ficompl
push
aad
adc
sbb
fcomps
mov
cmpsb
insb
jnp
hlt
adc
or
pop
cmp
push
into
or
and
or
mov
call
mov
repnz
sub
fstl
push
xor
aas
adc
adc
jle
cli
jns
jno
cli
ja
scas
adc
aad
sbb
pop
mov
test
dec
sbb
cld
push
and
call
adc
call
popf
clc
cmova
lods
mov
mov
out
mov
push
ja
cmpl
or
jg
ds
mov
and
fcoml
jno
clc
test
sub
push
xchg
movsl
nop
push
xchg
pop
sbb
lahf
arpl
xchg
mov
inc
in
loopne
fidivrl
clc
hlt
cmpsb
lock
imul
adcl
mov
movsl
mov
test
dec
sub
push
or
push
cmp
sti
pop
dec
xchg
mov
adc
outsb
or
fiadds
and
cmp
cmp
jne
xchg
sbb
mov
cmp
xlat
call
scas
sahf
sub
aad
pop
sub
and
imul
call
dec
icebp
cs
dec
mov
inc
mov
pushl
push
inc
push
mov
jmp
es
sub
mov
jnp
sbb
mov
enter
cwtl
adcb
jge
adc
adc
xor
dec
mov
cmpsb
mov
mov
dec
out
xchg
fiaddl
sbb
rolb
jle
lret
jge
push
and
ret
popf
pop
fs
aam
subl
stos
mov
push
test
cwtl
mov
mov
inc
adc
cli
popa
pop
jmp
push
mov
pop
stos
fnsave
jne
stc
int3
and
fs
in
insb
shll
enter
add
mov
jbe
movsl
adc
adc
pop
nop
aaa
mov
das
adc
sarl
das
and
int3
push
add
mov
inc
aad
scas
sbbb
push
xchg
scas
enter
cld
popa
leave
or
jl
pop
dec
jge
jle
mov
pop
xchg
pop
push
cmp
pop
call
mov
stc
out
adc
scas
mov
in
jmp
rcl
sub
rcr
or
xlat
dec
aaa
out
sbb
imul
je
mov
adc
sub
dec
add
add
sbb
les
or
jae
daa
push
inc
pop
sbb
jo
imul
add
sbb
inc
cmp
jne
outsb
mov
jge
int3
inc
adc
cltd
out
pushf
adc
xchg
loop
les
push
add
daa
es
jle
adc
adc
outsl
insl
jno
stos
dec
push
inc
fs
call
popa
lock
jecxz
mov
mov
push
jae
ds
shrb
sub
imul
dec
push
or
inc
xor
adc
pusha
xor
dec
and
jne
dec
imul
or
je
lock
or
cli
cmc
xor
pop
cmp
fdivrs
pop
lret
je
push
jecxz
or
xchg
adc
adc
out
xlat
or
es
cltd
jne
mov
or
xlat
enter
cld
add
cli
or
pop
xlat
gs
xlat
xchg
adc
push
pop
int3
sbb
pop
rol
or
dec
sbb
push
dec
sbb
cmp
inc
shlb
mov
push
nop
inc
xchg
jle
lcall
stos
add
mov
xchg
fimuls
mov
xor
shll
adc
cltd
pop
adc
test
hlt
sbb
adc
call
fmull
mov
dec
ret
cmp
mov
mov
mov
inc
pop
fs
adc
mov
test
mov
dec
push
or
pop
subl
inc
jp
and
lds
adcl
push
pop
insl
inc
ljmp
mov
into
bound
cwtd
pusha
jo
dec
cmc
add
adc
icebp
inc
adc
inc
xor
xor
pop
and
or
nop
rorl
inc
inc
xchg
xlat
lret
mul
call
mov
and
or
add
jns
dec
les
sub
ret
js
push
cmc
pop
sub
push
mov
scas
jecxz
shrl
and
dec
std
outsb
int3
mov
pop
jle
fs
or
cmc
les
imul
mov
xchg
inc
ds
test
xchg
inc
ret
sbb
sbb
hlt
fscale
in
mov
test
inc
or
cli
adc
mov
fsub
sub
cld
pushf
cmpsl
cmc
mov
adc
cli
decb
push
mov
sub
fisttps
pop
inc
mov
xchg
inc
fwait
jle,pn
mov
icebp
xlat
jle
xlat
mov
mov
inc
incb
push
sarl
xor
sbb
fstpt
test
sbb
jne
mov
adc
add
or
jmp
lock
mov
ljmp
test
subb
mov
jae
lahf
push
adc
xor
pop
dec
jo
mov
or
cmp
push
mov
add
or
stos
leave
cli
sub
addl
inc
lcall
cmp
fs
sbb
or
cmp
pusha
or
dec
outsl
jb
jle
or
jo
outsb
jnp
std
das
add
das
xor
insb
adcb
je
jmp
push
sbb
adc
xor
sbb
pop
aaa
in
mov
mov
pop
inc
cltd
sbb
push
stos
mov
clc
aam
jno
orb
adc
jnp
and
add
xchg
push
pop
sbb
mov
call
call
mov
je
dec
mov
and
mov
add
add
and
sub
and
mov
ljmp
push
nop
push
xor
cwtl
or
lret
pop
xchg
mov
push
mov
leave
test
sbb
mov
mov
es
das
jg
lods
pop
push
cld
inc
lcall
push
cld
lods
mov
add
mov
and
mov
les
add
dec
fisubrl
aad
insb
pop
sbb
cmpsl
adc
mov
les
sub
inc
lret
sub
andl
loop
out
aaa
pushf
xor
stos
add
jl
cmp
push
jnp,pt
xchg
jge
mov
cltd
idiv
scas
bound
insb
xorb
fcompl
mov
cmp
inc
add
push
mov
inc
xchg
xor
dec
adc
outsl
in
xchg
jg
std
xlat
fs
push
xor
mov
mov
movsb
aam
and
into
xor
mull
xlat
imul
pushf
cmp
inc
rcr
or
popf
icebp
inc
inc
inc
je
out
xchg
pop
mov
xor
clc
and
pop
cmpsb
mov
sub
mov
mov
inc
adc
sub
imul
cwtl
mov
popf
je
dec
or
sub
cmp
flds
sub
dec
je
inc
mov
add
int
in
stos
jns
inc
or
pop
jp
and
mov
ret
xchg
add
push
mov
mov
inc
iret
jge
pop
xor
xchg
call
nop
cmp
movsb
or
mov
fsubrl
inc
pop
out
xor
cmp
sub
inc
cmp
testb
gs
inc
ja
jecxz
xor
and
mov
daa
pop
nop
lcall
xchg
lock
xchg
mov
and
jp
aam
cmp
sbb
mov
sub
fs
bound
push
inc
cmp
movsb
adc
ljmp
xlat
adc
xchg
andb
gs
sub
insb
int
repz
xchg
pop
pop
cmp
test
mov
xorb
jne
and
sub
lcall
and
sub
jbe
add
es
mov
dec
stos
subb
ljmp
mov
mov
jb
arpl
adc
xchg
push
adc
negb
in
mov
push
adc
lea
xor
mov
push
and
outsl
xchg
aam
inc
dec
ja
fisubs
lock
mov
dec
mov
lock
int
hlt
out
xor
rorl
cwtl
rolb
xor
call
jne
sahf
leave
push
push
sbb
nop
pop
ficoml
repz
sub
cmp
int3
test
sub
push
js
iret
xorb
orl
xor
inc
loop
sub
push
repnz
subl
pop
mov
mov
fstpl
sti
pop
insl
mov
and
or
roll
adc
mov
sbb
cmc
inc
insb
outsb
xchg
cmp
xchg
sbb
xchg
ret
inc
push
mov
iret
or
call
pop
out
je
adc
cmp
js
int3
fmul
xor
dec
push
mov
pop
outsl
pop
enter
nop
cld
movsb
mov
outsb
mov
insl
call
lcall
sub
pop
inc
movsl
push
or
jge
sbb
lods
test
mov
push
push
inc
cmp
or
aas
leave
into
outsb
test
mov
aam
cltd
stos
push
popa
insb
xchg
cld
bound
cmp
push
ror
inc
cmp
sub
lock
daa
xchg
daa
and
inc
fbld
xchg
or
mov
mov
imul
and
or
xchg
es
adc
mov
shrl
or
mov
gs
hlt
and
push
test
or
insb
and
adc
lock
popa
inc
jl
and
push
pushf
test
sahf
jp
ret
adc
mov
bound
sbb
cld
das
jno
xchg
popa
cli
and
and
idiv
sbb
inc
out
jge
cmp
xor
inc
mov
icebp
sub
daa
call
int
adc
rcrb
call
push
or
mov
xchg
or
test
xor
clc
xor
aam
xchg
sbb
in
cmpsl
sub
xchg
in
xor
fbstp
and
mov
lret
incb
cmp
lcall
add
jne
int3
mov
lret
mov
inc
xor
sub
sahf
push
adc
inc
cltd
lea
orl
leave
fdivs
jbe
xor
lods
mov
inc
sarl
sub
jns
ja
sub
mov
das
adc
or
call
sub
and
inc
inc
jmp
jnp
shlb
out
inc
cmp
stc
in
adc
xchg
xor
and
xor
add
push
call
ss
and
add
xor
fistl
cmp
xor
daa
pop
bound
jg
mov
cmp
mov
xchg
cmpsl
or
add
inc
dec
jnp
shlb
lock
mov
and
or
call
add
and
adc
sub
mov
inc
push
rcrl
cli
mov
adc
and
pop
loop
lcall
inc
or
mov
hlt
and
adc
lods
adc
cmc
lret
inc
lds
repz
repz
xchg
adc
aaa
mov
sub
xchg
pop
or
les
in
cld
xchg
int
ret
in
or
adc
and
jb
mov
dec
adc
pop
xor
sub
int
dec
ds
leave
dec
xor
mov
cmp
clc
jg
and
jg
popf
push
data16
jg
adc
stc
insb
push
adcb
insb
aas
dec
insl
aad
xchg
xchg
bound
clc
std
push
push
xchg
mov
and
bound
sub
ss
push
gs
ss
mov
mov
adc
lret
daa
fisttpll
pop
pop
pop
xchg
sub
lds
xor
push
mov
cmp
adc
stos
sarl
sbb
repnz
and
jmp
shrb
insb
lea
or
in
cmc
or
jo
push
mov
ds
inc
into
inc
jnp
movsb
sbb
mov
inc
sbb
vpmuludq
insb
repz
add
repnz
fistps
pop
xchg
test
out
mov
inc
add
sti
inc
cs
mov
xchg
cltd
xor
pop
cld
in
stos
fcmovbe
jnp
mov
movsl
mov
jecxz
test
xchg
pusha
add
sub
sub
add
repz
and
adc
dec
cli
loope
jg
sbb
adc
adc
movsl
dec
mov
bound
fdivrs
or
add
mov
and
dec
and
and
orb
movb
push
fsubp
adc
add
push
mov
popa
push
ljmp
lret
popf
fists
xchg
mov
add
in
dec
jmp
outsl
repz
sbb
call
mov
mov
jmp
bound
add
fdivl
cli
and
jb,pn
fsubrl
int
lds
in
insl
daa
adc
push
add
cmp
shr
fmull
sbb
jle
lock
shll
stos
jp
pop
push
hlt
mov
lret
adc
fmul
push
jne
shl
mov
out
sbb
cmp
add
sti
adc
jl
jb
fdivl
jp
daa
xchg
daa
mov
lahf
out
je
popf
je
pop
jmp
and
add
aas
orb
pop
add
lret
or
mov
add
mov
mov
scas
adc
sbb
xchg
daa
inc
cmp
hlt
or
xorl
mov
mov
clc
nop
adc
cmp
dec
jecxz
out
xorl
cs
mov
test
adc
lahf
bound
sub
mov
repz
inc
pop
bound
sbb
notb
and
and
adc
jle
mov
jae
xchg
jg
or
je
js
sbb
fsubrl
sub
inc
mov
sub
pop
les
pushf
hlt
inc
push
inc
pop
imul
mov
mov
mov
cmpsl
fistpll
and
pusha
std
and
enter
dec
nop
lock
loop
js
call
mov
dec
push
js
mov
jb
lea
fs
mov
rcrb
dec
mov
xchg
ret
imul
cli
pop
mov
rorb
add
push
pushf
lcall
daa
dec
xor
pop
and
popa
loopne
das
mov
in
mov
inc
loop
sub
xor
push
cmc
xor
sub
adc
push
lret
addl
mov
sbb
pop
xchg
inc
and
xor
and
sbbl
dec
pop
push
xor
adc
inc
test
xor
lock
in
inc
fs
and
repz
inc
pop
test
dec
in
xor
shr
jmp
in
dec
rdpmc
test
inc
xor
loopne
push
pop
rorb
pop
btr
lods
or
add
mov
cmp
out
sub
mov
inc
jo
int
mov
sbb
aad
mov
das
out
cmp
inc
push
and
into
inc
mov
pop
sub
inc
shrl
mov
jo
dec
mov
mov
dec
sub
mov
jns
inc
testb
xorb
adcl
or
push
out
pop
int3
movsb
sarb
jne
cmpb
add
dec
cmp
out
ds
es
cmp
push
out
dec
and
jmp
sete
ret
push
fs
mov
sbb
filds
and
inc
popa
call
and
or
mov
mov
lds
dec
sbb
xchg
push
in
dec
or
push
mov
add
sarb
test
in
js
push
and
das
cld
mov
sahf
mov
xor
and
jecxz
decb
shr
mov
xor
cltd
test
push
xor
sti
dec
jne
adc
inc
dec
jns
inc
push
adc
std
lcall
lret
and
pop
cwtl
imul
lret
add
cld
out
pop
and
xor
hlt
cmpb
adc
xchg
xchg
mov
mov
and
mov
cli
incl
movsb
jmp
cmp
or
in
dec
in
and
jg
adc
inc
or
sub
mov
aad
mov
dec
add
mov
sbb
pushl
cmpsl
repnz
cli
adc
inc
mov
cmc
add
or
or
dec
cmp
dec
js
mov
mov
fiadds
mov
and
jmp
or
or
icebp
jl
add
inc
dec
outsb
ret
stc
jb
outsl
cltd
nop
xor
jno
enter
out
movsl
popa
imul
mov
cwtl
xor
push
insl
dec
bound
push
sbb
fstl
mov
xor
shlb
or
inc
pop
int
cs
cmp
dec
jmp
and
test
insl
loopne
jle
jp
and
sub
rorb
lods
add
mov
inc
das
out
es
and
cli
repnz
lcall
dec
or
mov
fs
cmc
sbb
and
cvtps2pd
inc
push
test
adc
push
mov
fisubrl
and
cwtl
in
add
xchg
inc
imul
popa
addr16
mov
loopne
or
das
out
sub
test
adc
les
mov
or
movl
fwait
js
sbb
pop
add
lahf
inc
xor
mov
inc
or
or
mov
addr16
adc
imul
lock
adc
push
push
repnz
insb
sbb
mov
clc
pop
cmpsl
test
sbb
mov
adc
mov
test
or
xor
fisubl
sbb
push
inc
mov
mov
stc
inc
les
lds
xor
jb
mov
mov
outsb
mov
ret
mov
rcrb
enter
sub
or
jg
test
mov
sbb
test
sub
push
subb
xor
imul
repnz
lds
xor
inc
dec
shrl
mov
mov
imul
jae
cmp
aam
sbb
adc
xchg
xchg
sub
push
push
fs
jbe
mov
sbb
sub
int
bound
dec
and
mov
cld
inc
shlb
inc
popa
or
jo
fldenv
cmp
sarl
inc
xor
push
mov
bound
lret
mov
or
push
pop
pop
xor
mov
ret
mov
data16
cmp
fcompp
ror
nop
sub
fs
inc
inc
aas
cmp
inc
mov
outsl
jne
jo
sub
lods
push
dec
add
lret
and
lods
fistpl
add
xor
popf
adc
cli
loop
and
outsl
in
aad
pop
xlat
xchg
ja
dec
aam
xchg
shlb
enter
and
push
and
fs
inc
cwtl
mov
xchg
nop
cmpsl
mov
rolb
ds
cmp
adc
test
mov
shlb
dec
outsb
cs
insb
mov
mov
repz
ja
sbb
je
and
dec
out
repnz
movsb
jl
nop
outsb
xlat
pop
cmp
xchg
adc
aam
sbb
adc
pop
pop
sub
mov
frstor
mov
popa
fmuls
orb
mov
sub
adc
inc
sub
and
ficompl
jmp
or
lock
jbe
pop
or
sub
rcrl
repz
rorb
xchg
fcoms
mov
and
dec
dec
mov
inc
jecxz
jmp
dec
or
aam
adc
fmul
or
loop
mov
andl
add
sub
mov
sub
add
pusha
sub
jnp
mov
sub
jmp
sbb
mov
or
inc
xor
inc
push
mov
adc
in
aam
in
and
dec
loop
and
lods
push
jecxz
inc
outsb
adc
and
or
jmp
or
add
push
xchg
imull
mov
cli
lea
add
sbb
cmp
mov
push
dec
jl
adc
inc
mov
sub
or
rcrl
and
loop
mov
or
test
insl
or
xchg
or
lods
adcb
insl
movsb
lcall
inc
insl
xor
sbb
xchg
push
adc
rolb
cli
repnz
sbb
sub
test
nop
or
lret
push
inc
in
xchg
js
lods
adc
push
mov
ljmp
arpl
jmp
or
nop
and
dec
in
inc
adc
out
pop
pop
xchg
sub
dec
mov
adc
and
xchg
ja
xchg
adc
and
leave
dec
lds
divl
lret
pop
dec
aaa
test
test
or
imul
popf
repnz
inc
or
enter
loopne
push
or
test
xchg
jo
lods
and
dec
sti
or
cltd
iret
js
sub
adc
scas
cmp
insb
lahf
and
xchg
jge
dec
cmpb
mov
and
fdivs
int3
inc
cwtl
or
fs
sti
gs
mov
adc
xchg
xor
xor
cmp
inc
inc
inc
inc
inc
add
dec
dec
dec
dec
dec
dec
add
push
push
push
push
push
push
add
pop
pop
js
adc
call
push
data16
adc
pop
mov
sub
xor
add
repz
pop
pop
mov
pop
pusha
lock
cld
rclb
cltd
xor
loope
shlb
mov
mov
xor
ljmp
sbb
cmpsl
std
clc
mov
xor
and
adc
add
cld
pop
cmpsl
xchg
ficoml
cmp
cmc
cmpsl
jle
xor
xor
shl
lahf
jb
dec
push
xor
xor
push
pop
test
push
mov
les
mov
push
mov
push
push
push
mov
and
jge
xlat
iret
imul
add
or
stos
ss
sub
sti
or
imul
sbb
pop
mov
sbb
shll
dec
dec
adc
sbbl
or
test
add
push
out
xchg
cli
sbbb
push
push
xchg
pop
sub
pop
jmp
jmp
adc
adc
or
inc
cld
int3
dec
sbb
or
mov
imul
call
push
enter
call
pusha
or
push
inc
sub
sub
and
mov
adc
incb
aaa
out
std
out
dec
dec
lods
les
fbld
push
or
adc
inc
adc
rclb
push
sbb
test
or
cli
daa
cmpsb
stos
outsl
sbb
mov
or
inc
movsl
fildll
in
inc
add
call
push
xchg
adc
push
pop
cmp
jl
sbb
adc
hlt
scas
or
in
adc
ror
shl
repz
sbb
cmpl
push
sbb
loop
leave
rcrb
push
sbb
jmp
dec
fldenv
idivb
inc
add
imul
mov
and
out
xor
push
xchg
sbb
inc
jmp
push
and
cmp
in
aaa
clc
inc
and
fdivrp
and
sub
mov
outsl
jg
mov
ljmp
pushw
or
jmp
inc
fs
push
jg
dec
fcoms
repnz
jg
nop
sbbb
and
dec
stos
xor
adc
xor
push
movzwl
sub
mov
cmp
hlt
add
lds
add
pop
inc
dec
cmc
fisubrl
sub
mov
mov
pushl
fistpl
sbb
pop
add
and
or
arpl
jg
sbb
mov
out
adc
addr16
cli
scas
popf
icebp
add
insb
fbld
mov
stos
cmp
adc
rclb
and
pop
les
jmp
cmp
jle
adc
mov
xchg
cld
add
jne
jle
sbb
push
cmp
data16
or
ja
cmp
dec
sbb
ljmp
and
idiv
sbb
lea
pop
xor
cmp
in
inc
insb
adc
ds
sbb
ljmp
fcmovne
dec
and
inc
xchg
push
sbb
mov
mov
and
jl
popa
pop
xor
enter
cmp
dec
shl
test
xor
xchg
xor
aam
mov
arpl
mov
dec
cmp
and
cmp
or
imul
nop
in
jl
insb
xchg
and
pop
or
enter
inc
imul
add
push
xchg
or
push
jl
enter
lret
xor
cmpb
and
jnp
mov
nop
sbb
iret
lcall
mov
aas
cmp
scas
jo
cmpsb
xor
pushf
adc
jge
aaa
xor
sub
movsl
imul
insb
pusha
mov
push
in
enter
add
cld
cmp
pop
dec
je
js
push
push
stos
dec
mov
push
and
or
call
testb
call
adc
adc
and
or
and
out
mov
cmp
inc
and
and
cmpsl
mov
test
mov
adc
push
xor
dec
lcall
inc
add
or
and
add
call
lods
icebp
ds
movsl
inc
sub
inc
jl
mov
adc
lret
dec
lods
inc
mov
or
hlt
das
lcall
xchg
mov
dec
push
mov
xchg
xor
mov
jmp
mov
xchg
ret
mov
rorb
cmpl
enter
enter
lods
push
add
sarb
pop
addr16
push
lea
sti
adc
xor
data16
rorl
mov
xor
sub
les
dec
inc
cmp
pop
cli
mov
sbb
sbbb
imul
clc
xlat
mov
cmpsb
inc
jo
jnp
xchg
pusha
cmp
push
rorl
push
push
mov
jle
pop
ljmp
dec
in
sub
mov
dec
lods
inc
inc
iret
ficoms
popf
fldenv
add
xchg
and
ds
sbb
push
testb
cmc
or
sti
and
mov
mov
fidivrs
stc
push
movl
lret
aas
mov
sti
pusha
pushf
adc
and
sub
xchg
cmp
dec
add
mov
les
xor
xlat
roll
test
addl
jbe
push
cmp
or
into
cmpsl
dec
or
call
xor
sub
es
notl
iret
mov
jp
adc
sub
cmp
cmc
xor
adc
cld
int
and
mov
xlat
jb
push
fildl
movsb
aad
stos
xchg
push
jmp
lcall
add
push
addl
psrlw
clc
aam
mov
xor
sarl
mov
aam
cmp
movsb
lret
dec
lock
stos
in
gs
and
jl
imul
jne
stc
out
or
or
inc
pop
dec
push
ret
sbb
jnp
mov
cld
call
mov
jle
adc
jmp
pop
mov
jmp
or
sub
iret
mov
aas
mov
adc
mov
sub
pop
mov
loopne
jo
pop
fcomi
jbe
inc
xchg
je
xchg
pop
test
gs
xchg
test
dec
push
and
and
sbb
xorb
std
shrl
push
insb
dec
bound
imul
push
adc
xchg
out
mov
cwtl
aaa
and
xchg
mov
mov
cmpsl
adc
test
cltd
sub
mov
or
and
ds
lods
and
dec
insb
mov
fldenv
sbb
lock
movsl
mov
lods
shrl
or
sbb
je
pop
outsl
sub
lds
xor
inc
add
jge
testb
test
das
xlat
cmc
inc
add
stos
or
insb
inc
js
aad
vpshaw
lds
ror
cli
mov
or
push
dec
push
inc
fcomps
mov
push
adc
sbb
bound
jg
push
xchg
dec
cmc
jge
add
cs
jo
push
xchg
or
popa
xchg
xor
lods
xor
out
jp
cmp
ret
cmpsb
xchg
aad
jge
pop
xchg
fstps
in
nop
es
jns
nop
inc
add
cmp
jge
das
stc
shll
cmp
jae
daa
mov
into
subb
xchg
sbb
jbe
or
push
mov
popf
cld
mov
push
and
xor
cmp
mov
xchg
sub
or
xchg
fstps
pushf
and
adc
or
mov
adc
jmp
repz
ret
inc
mov
and
and
fdivr
dec
pop
mov
pop
push
sub
or
out
daa
push
jbe
imul
hlt
mov
or
and
ss
popf
sarl
fsubrs
and
shlb
out
pop
add
adc
jo
outsb
addl
cli
in
arpl
je
loop
and
add
push
push
or
mov
dec
mov
mov
mov
test
movsb
cmpsb
inc
lret
lret
push
jl
push
call
push
jne
lock
cmp
movsl
jge
fldt
jle
jge
cmp
js
or
jae
out
hlt
push
pop
inc
jo
inc
cmp
enter
out
add
mov
frstor
adc
sbb
lahf
out
data16
mov
popf
mov
or
inc
leave
jne
adc
sub
je
mov
out
std
lock
xchg
sbb
sbb
or
bound
pop
xor
add
or
sub
mov
sub
xlat
inc
stos
bound
pushf
in
and
inc
and
pop
mov
andb
sbb
mov
mov
or
vmovlps
aas
xchg
mov
jns
or
and
popa
adc
lea
mov
call
inc
aas
js
xchg
pop
hlt
lods
fdiv
adc
mov
adc
adc
mov
inc
shll
or
into
sub
or
int3
int3
push
xor
mov
dec
mov
jg
sbb
add
movl
pop
inc
mov
stc
push
mov
popf
adc
dec
into
pop
lahf
jle
aam
dec
adc
xchg
jl
and
sbb
pop
sbb
dec
dec
adc
daa
mov
jne
or
ret
xchg
adc
leave
pusha
fcomi
add
xchg
ret
xor
or
xchg
add
les
lock
into
add
add
xlat
dec
jno
fadd
push
cld
jmp
movsb
sub
add
es
paddb
and
nop
or
gs
outsb
test
decl
mov
add
xchg
sbb
mov
call
and
and
insb
mov
inc
repz
and
sub
mov
or
push
mov
dec
rcrb
inc
rcrb
push
test
lret
jge
mov
push
xchg
sbb
pop
cmp
mov
xor
repz
add
or
test
ss
in
mov
mov
pusha
mov
push
jns
enter
inc
mov
je
or
xchg
sbb
dec
adc
test
out
popa
mov
cmp
sbb
sub
scas
fdivrp
pop
or
icebp
inc
push
dec
sub
sub
clc
sbbl
push
inc
imul
jnp
mov
or
mov
or
mov
and
ds
xchg
mov
rorl
push
add
dec
pop
jnp
sub
cmc
test
xchg
aam
inc
cwtl
dec
addb
or
lock
mov
sbb
mov
push
xor
shl
mov
dec
push
sub
sbb
cli
inc
test
xchg
in
imul
clc
test
lret
xor
stos
cli
sub
sub
and
xor
lock
shll
cmp
enter
pusha
sub
ja
mov
inc
mov
adc
cmp
mov
imul
ds
adc
or
gs
push
cmpsl
inc
lods
adc
pop
adc
loop
adc
in
mov
adc
je
aas
mov
lds
sbb
test
mov
repz
pop
and
sbb
add
adc
jne
mov
call
mov
in
sub
ficoml
test
push
pop
daa
rcl
xchg
sub
and
addl
dec
sub
adc
dec
add
xchg
orl
sbb
adc
je
bound
adc
or
or
outsb
in
or
jp
xchg
inc
dec
xor
cmpl
mov
ss
int
push
and
mov
push
cli
les
incb
mov
and
jp
adc
pop
inc
sub
inc
ret
inc
xchg
mov
mov
shl
fsubp
daa
push
pop
pusha
xchg
ret
gs
adc
push
pop
lret
sbb
mov
mov
sbb
mov
outsb
ja
je
fwait
mov
out
mov
sar
fstl
js
ss
sub
cltd
xchg
lods
dec
sub
dec
mov
xor
movsl
in
sbb
test
add
mov
jnp
nop
xchg
mov
enter
lods
mov
lock
dec
fdivs
adc
xchg
sahf
jge
dec
lock
lret
xor
jecxz
test
push
loope
out
adc
jmp
push
es
ljmp
dec
clc
sbb
inc
jbe
and
cmp
inc
cs
mov
inc
mov
cmp
inc
loope
fimuls
adc
or
inc
mov
sti
ret
gs
xor
fwait
pop
pushf
xor
jp
scas
icebp
sbb
cmpsl
inc
aaa
adc
popa
mov
dec
push
jae
fsubs
out
xchg
arpl
loop
movsb
daa
scas
push
mov
inc
int3
rcrl
mov
fildl
daa
test
filds
inc
imul
bound
in
adc
jns
inc
fcomp
movsb
and
dec
mov
cmpb
aam
inc
imul
lret
pop
loop
mov
mov
test
xchg
popf
pop
adc
fmul
inc
mov
push
call
inc
aam
in
inc
pop
testb
dec
fistpll
pop
cmp
jg
inc
cmpsl
mov
jle
mov
lea
adc
nop
adc
inc
push
enter
pop
fstpl
adc
shl
inc
aas
mov
mov
inc
xor
sub
je
push
das
cwtl
sarb
adc
enter
jmp
test
insb
and
aas
out
mov
testb
mov
jmp
xor
rolb
repz
jmp
push
call
arpl
pop
dec
lcall
lods
push
mov
push
add
insl
fldcw
call
seta
popf
leave
xchg
jg
test
dec
xor
mov
addr16
lock
pop
xchg
cltd
lret
sbb
xor
adc
jnp
pusha
or
call
into
mov
scas
mov
mov
clc
or
xor
lret
stc
in
dec
xorb
int
mov
sub
jbe
aas
jg
enter
or
push
mov
xor
jp
enter
xchg
mov
pop
push
xorl
pushf
je
push
sbb
ffree
dec
mov
and
sbb
push
movsl
pusha
cltd
inc
push
daa
add
dec
or
addl
mov
jno
xorb
mov
inc
or
out
adc
pop
pusha
dec
in
clc
ja
popa
push
dec
sbb
call
test
xor
or
je
mov
xchg
push
mov
cmp
addr16
or
mov
ret
mov
push
push
cli
mov
jno
lods
popf
xlat
test
xchg
add
add
jne
sub
scas
mov
xchg
push
inc
out
cwtl
inc
fsubr
arpl
pop
adc
xchg
fstps
lret
and
ret
cmp
rorb
cmp
push
sbb
push
insb
pusha
xchg
lock
call
adc
lahf
dec
ret
test
cld
test
or
test
ds
cli
inc
add
call
fmuls
or
jp
push
lret
out
rorl
or
clc
dec
push
fstps
faddl
jnp
pop
cmp
mov
stos
test
cld
sub
add
aad
mov
or
sbb
inc
push
sub
stos
mov
inc
xor
jle
mov
negl
push
addr16
pop
xchg
adc
stc
js
push
or
fistpll
test
orl
xchg
and
pushf
xor
aas
je
movsb
dec
dec
adc
dec
push
movsb
loop
idiv
mov
xchg
push
aas
mov
sbbb
scas
das
mull
inc
mov
decl
les
jne
adc
inc
or
pop
jnp
mov
and
sub
inc
jp
daa
rorb
cmp
mov
or
lcall
push
ss
inc
and
sbb
mov
rcll
add
sub
inc
in
xor
ljmp
movsl
add
decl
fimuls
pop
inc
mov
xchg
add
test
push
jmp
inc
daa
divl
xchg
sbb
fcoml
mov
out
lahf
pop
mov
mov
sbb
lret
sbb
sahf
jl
pop
adc
sbb
lret
test
dec
jmp
or
sub
adc
lods
adc
inc
dec
mov
xchg
xchg
das
std
cmp
dec
push
clc
mov
cmpl
addb
aad
cltd
nop
cmpsl
push
cmp
mov
dec
test
jl
cs
sti
aad
adc
movsb
jle
pushf
inc
lret
adc
les
in
dec
adc
dec
daa
insb
in
mov
inc
je
pop
pop
in
and
icebp
pop
xchg
cwtl
cld
jecxz
lds
clc
xchg
lds
clc
and
subl
shll
movsl
mov
test
lea
aad
nop
or
xchg
clc
or
ficomps
sahf
mov
sub
xchg
or
mov
fs
push
adc
jne
ss
das
cmpb
test
sbb
adc
sbb
pop
adc
sub
sbb
mov
andb
mov
fdivrp
addr16
adc
ret
cmp
lods
mov
cli
cmp
dec
push
lods
xor
mov
push
or
sub
dec
xchg
enter
jbe
call
mov
pop
mov
dec
cld
ficoms
mov
js
inc
mov
sub
xchg
scas
push
or
inc
xchg
xor
or
stos
add
fpatan
jp
and
call
in
pop
cmp
inc
mov
and
push
mov
insb
cwtl
mov
loope
lahf
sbb
push
movsb
adc
push
jmp
scas
fs
mov
adc
je
and
inc
push
ljmp
dec
mov
inc
push
and
or
ficoml
pop
sub
add
jb
leave
dec
mov
dec
sbb
pop
sbb
cli
jno
or
cmp
pusha
lods
leave
inc
test
je
sbb
pop
xchg
lods
or
adc
mov
ficoml
ja
or
je
jmp
clc
fmuls
inc
adc
dec
cmc
and
jp
jb
push
dec
je
add
mov
and
call
movsb
adc
xchg
mov
lret
and
mov
aas
loope
sub
stc
cmp
stc
inc
xchg
lds
leave
adc
ret
jne
xor
je
or
or
pop
sub
popf
mov
clc
sub
movsb
mov
in
pop
xchg
jb
addr16
push
adc
or
xchg
cli
sbb
test
inc
clc
and
mov
push
imul
push
shll
push
fmuls
out
adc
or
jl
push
jg
and
aas
aas
test
mov
pushf
xchg
dec
subb
pop
pop
data16
pop
push
jge
cli
xor
xchg
mov
stos
jecxz
test
sub
int3
jb
loope
xor
mov
jge
idivl
xchg
stos
in
xlat
sbb
cmpsb
dec
movsb
out
jmp
push
and
repnz
xchg
cmp
xor
inc
sti
fdivrl
or
dec
and
pushf
jo
je
pop
mov
pop
adc
int3
lahf
mov
cld
push
mov
or
pop
inc
lock
inc
inc
mov
sahf
int3
push
sub
mov
pop
ficoml
push
jbe
sar
push
mov
lock
pop
mov
and
sbb
hlt
notb
and
push
mov
sbb
jne
or
fstpt
inc
pop
jl
test
js
mov
jmp
or
and
inc
roll
call
cmp
ret
sub
lea
rorb
int3
dec
inc
pop
dec
inc
push
roll
ret
jb
dec
ret
mov
mov
fsubrs
call
je
adc
lods
fldl
pop
push
mov
imul
sub
call
dec
inc
xchg
pop
cmpsb
or
sub
jb
mov
or
fstp
xor
aaa
inc
inc
fs
mov
clc
cmp
loop
out
jb
adc
shlb
mov
adc
sub
out
mov
pop
push
loope
cmp
mov
or
pop
popf
movsb
xchg
or
arpl
das
cmp
clc
aaa
in
cmp
inc
into
cmpsb
loope
push
call
adc
and
lret
push
mov
or
and
and
iret
addl
jmp
ljmp
pop
jo
sub
addr16
sbb
jg
sbb
pop
into
and
pop
inc
adc
sub
and
add
jecxz
ss
push
ds
push
or
cld
aam
and
cmp
sbb
movsl
daa
dec
inc
add
adc
push
sti
jmp
call
loope
into
or
mov
push
and
jp
popa
jae
inc
add
inc
add
cmp
or
js
push
mov
add
or
adc
and
or
mov
faddl
rcll
dec
out
mov
call
test
in
dec
dec
xor
pop
imul
push
pop
or
hlt
mov
pop
imul
dec
jmp
inc
push
hlt
lods
cmovae
xor
adc
lcall
scas
xor
pushf
xchg
dec
xor
mov
loopne
or
xchg
and
rcll
xchg
jl
cmp
mov
movsl
xlat
fs
push
mov
adc
lea
data16
push
sub
lret
push
aam
mov
inc
xchg
mov
and
xchg
dec
les
out
dec
kmovw
fs
push
xchg
hlt
scas
adc
jg
je
push
test
lret
xchg
dec
or
xor
xorb
and
and
cli
shr
xchg
gs
enter
inc
and
enter
push
call
jnp
inc
xor
pop
xchg
data16
adcl
mov
sub
jecxz
cltd
loopne
test
xor
bound
push
aaa
dec
ja
dec
mov
xchg
mov
xor
inc
es
and
int3
jo
add
inc
jmp
pop
mov
decl
call
mov
sbbb
je
call
imul
dec
stc
cmp
ficomps
mov
inc
test
inc
lods
and
add
and
jmp
adc
and
add
fmuls
mov
or
les
cmp
adc
cwtl
jle
jle
sub
mov
push
leave
inc
dec
dec
clc
pop
and
xor
sbb
fneni(8087
or
aas
and
push
push
add
push
inc
xchg
add
iret
mov
std
shll
cli
sbb
sbb
pop
lahf
inc
push
xchg
jno
ret
sub
clc
aam
loop
stos
call
nop
aas
jne
popf
xlat
and
mov
jp
push
clc
movsb
jl
inc
rcrb
jp
push
mov
iret
movsb
xchg
mov
js
pop
and
sub
std
loope
dec
jl
jmp
mov
cmp
push
and
out
test
clc
call
aad
cmp
and
pop
sahf
jb
outsb
fsubrs
rolb
add
inc
shlb
lret
mov
and
test
into
mov
rcll
sarb
push
dec
cmp
insb
pop
push
fstl
mov
js
mov
pushf
test
pop
push
jne
stos
pusha
int3
inc
test
and
sbb
sbb
adc
pop
cmc
dec
add
push
daa
pop
cmc
and
inc
sub
jl
dec
inc
and
out
jbe
adc
leave
jmp
movsb
sti
flds
add
mov
int
inc
adc
jmp
mov
hlt
inc
cwtl
sub
push
and
cs
ss
inc
pop
ljmp
mov
inc
and
arpl
adc
push
addb
jne,pn
add
add
sbb
movsb
xchg
push
sbb
jl
or
jg
dec
sbb
and
jle
adc
rorb
dec
adc
cmp
lods
cmp
aas
inc
cmp
jnp
mov
adc
mov
fimull
mov
or
pop
sub
cmp
sub
adc
cmp
mov
fstl
sub
jnp
xor
mov
cmp
repnz
fistl
mov
les
ficoms
mov
add
mull
cmp
and
or
mov
push
mov
jb
mov
xor
xchg
addr16
add
push
cli
mov
dec
mov
gs
xchg
add
sub
push
push
pop
inc
inc
stc
flds
cmp
test
aaa
enter
test
push
mov
push
pop
push
dec
xor
cmp
pop
jb
mov
push
mov
dec
adc
adc
pop
addb
or
ja
out
pop
movsb
adc
mov
pop
sub
repnz
mov
movsb
cltd
loopne
xor
mov
stos
cwtl
jmp
mov
sub
mov
push
cmpb
popf
xchg
cmp
sub
dec
dec
ljmp
jl
rorl
pop
clc
in
mov
and
ljmp
loopne
fcompl
xor
push
test
test
test
adc
add
jmp
mov
aad
pop
cmpl
xchg
push
cmpl
or
jns
aaa
adc
mov
add
shlb
leave
mov
or
push
das
fwait
xor
sbb
data16
call
ror
inc
jne
sarb
mov
sti
daa
or
lods
std
sbb
mov
inc
sarl
popf
cmc
cwtl
push
fadds
add
pop
adc
es
mov
xchg
mov
call
adc
and
pop
pop
loope
adc
adc
or
mov
in
sarl
dec
ja
ret
adc
test
jle
mov
pop
hlt
sti
sub
out
xor
int
jg
inc
push
lea
add
in
cmp
push
add
add
add
push
leave
ss
fcoms
xor
repnz
push
xchg
lods
mov
cli
icebp
add
mov
call
push
sub
nop
fiaddl
jmp
xchg
xor
push
in
add
pushf
mov
mov
les
enter
ljmp
jmp
pop
xor
inc
call
mov
enter
and
pop
cs
pop
push
pop
jmp
jmp
inc
aad
ret
into
pop
out
and
mov
imul
ficoml
sub
rolw
rolb
movsl
dec
lret
cmc
subl
js
sub
jge
cwtl
addl
call
testb
and
sbb
mov
in
aad
or
sbb
push
inc
push
fistl
xchg
lcall
call
push
lods
jmp
std
dec
jle
mov
adc
fisubl
arpl
cmc
std
sbb
repz
mov
adc
xor
dec
jmp
jne
mov
repz
fldt
lret
xchg
push
aad
stos
xor
into
iret
cltd
jmp
xor
mov
std
xchg
sbb
icebp
aam
mov
leave
mov
pop
mov
adc
ret
out
and
sub
push
push
mov
mov
sub
pop
outsb
loop
add
and
cli
add
rolb
ret
inc
aaa
or
inc
mov
int3
or
and
push
lods
or
movsl
xchg
bound
xor
mull
pusha
jp
cltd
addl
xchg
insb
cmp
sar
scas
mov
icebp
cmpsl
sub
mov
xchg
and
imul
pusha
push
ficomps
adc
std
mov
mov
add
hlt
cld
fsubrs
lock
test
add
movb
inc
mov
or
sbb
or
test
push
cmp
sbb
jge
popa
pop
clc
jb
repz
lods
inc
addr16
sub
js
movsb
cwtl
rcr
cvtdq2ps
inc
jb
push
and
jecxz
inc
push
sub
sbb
add
lret
xchg
mov
and
sbb
sbb
cs
call
xchg
mov
sub
or
scas
call
repnz
arpl
mov
das
xor
arpl
push
inc
int3
lds
or
push
or
add
dec
call
or
xor
in
jecxz
or
push
sti
sbb
stos
ss
xchg
fs
pop
pop
stc
or
mov
and
loopne
cmp
cmp
aad
push
mov
data16
push
dec
mov
mov
sub
aam
dec
cld
in
push
cmpl
icebp
into
sub
imul
or
insb
out
jnp
testl
nop
cs
mov
imul
cmp
in
dec
push
push
clc
out
lret
mov
inc
dec
mov
add
call
xor
and
roll
or
and
int3
dec
pop
inc
mov
cmp
push
in
or
stc
xchg
cli
imul
enter
rclb
adc
orb
or
aad
add
cmc
lock
xchg
xor
xor
push
inc
or
inc
push
push
push
bswap
xchg
mov
imul
pop
dec
sub
push
lds
icebp
and
rolb
dec
loopne
mov
icebp
push
inc
cmp
lods
testl
inc
lcall
pusha
pusha
cmp
jge
xchg
adc
negb
adc
hlt
clc
pusha
push
or
xor
hlt
adc
lahf
addb
adc
pop
leave
stos
lods
jp
hlt
adc
jns
adc
aad
and
mov
mov
loopne
mov
loope
mov
out
xchg
scas
adc
sbb
repnz
in
and
mov
repz
imul
jl
call
and
fbld
add
scas
and
call
jle
imulw
pop
push
mov
and
mov
sbb
cmpsl
lock
imul
pop
xorb
in
jl
and
call
inc
movsl
push
fiaddl
dec
inc
jns
in
sub
dec
jno
sbb
mov
dec
adc
xor
push
or
sub
jmp
and
jne
xchg
push
mov
es
xor
icebp
push
inc
push
mov
cmp
push
add
xor
cmp
call
mov
push
aad
ret
and
xlat
test
loop
dec
frstor
and
push
adc
xor
cmc
cmp
and
adc
cmp
dec
xchg
pop
and
and
and
mov
jmp
cmp
mov
jnp
xchg
int3
cmp
out
mov
or
inc
in
sti
adc
clc
mov
sub
xor
fldcw
push
xor
sbb
add
daa
xchg
movsb
jge
adc
ds
mov
inc
sub
ljmp
push
xchg
je
lods
dec
leave
xor
cmp
cmp
mov
jg
xchg
insb
sbb
ret
and
cmp
mov
movsb
adc
adc
or
mov
adc
mov
add
icebp
mov
cmp
mov
xchg
adc
inc
sbbl
imul
mov
imul
push
or
jg
mov
add
xor
ficomps
nop
cmp
push
push
or
and
and
loop
test
ret
push
pop
outsl
and
cwtl
lods
sbb
pop
xchg
je
roll
add
test
outsb
mov
adc
in
inc
cli
xchg
les
add
pop
cli
jne
adc
rorb
cmc
repnz
push
std
jmp
hlt
movsb
jg
je
cmpl
es
adc
add
or
cmp
lahf
repnz
sub
popf
sub
pop
ja
pop
mov
jmp
pop
xor
incl
jmp
inc
xchg
push
add
adc
cmp
jmp
pop
mov
lock
loop
ss
imul
inc
push
pop
inc
sub
inc
jl
jg
sbb
pop
adc
adc
imul
sbb
adc
or
cmc
cwtl
std
xor
and
mov
dec
repz
cmp
xor
add
and
add
or
jns
les
add
movl
adc
pop
inc
xchg
lods
std
inc
pop
push
addl
inc
pop
add
loopne
inc
or
xchg
and
lret
gs
hlt
addr16
adc
mov
or
and
jne
xchg
dec
and
xchg
sub
mov
adc
mov
adc
jns
aas
push
sbb
aaa
push
fldcw
loopne
insb
arpl
mov
xchg
lds
mov
dec
lock
sub
add
sub
enter
flds
shll
into
mov
inc
adc
adc
add
xchg
jmp
mov
lcall
out
mov
or
mov
and
dec
sbb
cmp
sbb
push
sbb
inc
int
mov
jo
loope
sub
pop
mov
adc
adc
fbld
mov
lahf
sahf
ljmp
push
pop
je
mov
xor
fisubrs
sub
inc
and
int
sbb
or
adc
je
xchg
inc
out
cmp
xchg
push
adc
fimuls
int
jns
lret
mov
push
jge
xchg
in
fiaddl
mov
in
test
ss
xchg
and
rorb
xor
and
fcomi
and
pop
adc
mov
sub
add
lcall
push
lret
and
inc
adc
fists
ds
sahf
inc
out
leave
or
mov
daa
popa
notb
add
mov
push
xor
testb
scas
cmp
jb
stc
add
xchg
pop
pop
sbb
mov
xchg
rcr
loope
jnp
cmp
loop
push
and
jl
inc
adc
mov
push
mov
sub
incb
and
xchg
push
pop
out
push
pop
gs
pop
pop
daa
cltd
je
aaa
jmp
or
pop
sbb
std
stc
outsl
dec
mov
cmp
push
out
add
mov
lds
invd
mov
call
bound
pop
adc
test
in
sub
push
xchg
xchg
jl
add
fimuls
push
push
mov
adc
rcrl
aaa
repnz
xor
scas
xchg
adcl
adc
adc
pop
sub
add
insb
ss
xchg
sub
scas
xor
es
jp
and
add
pop
xor
cmp
mov
jmp
or
mov
jae
pop
arpl
inc
add
mov
xor
xor
pop
daa
les
add
iret
mov
test
push
lods
mov
pop
dec
into
dec
pusha
inc
das
sub
inc
popl
das
or
inc
pop
sub
adc
shl
or
push
lea
insl
popa
push
push
push
push
inc
push
test
arpl
and
jne
or
ljmp
frstor
add
orb
call
cmp
cwtl
jo
push
inc
cmpsb
movsb
in
test
loopne
push
sahf
shlb
dec
aam
out
or
movsl
adc
pop
mov
flds
add
leave
test
out
xor
je
push
int3
adc
mov
aad
ficoms
xchg
nop
lret
push
pop
mov
jmp
mov
sub
add
xchg
and
out
or
jnp
or
add
leave
sbb
push
push
and
inc
push
sbb
push
xchg
stos
xchg
aad
xchg
aad
dec
or
add
inc
shl
and
insl
andb
pop
adc
sbb
test
sbb
inc
adc
enter
xchg
sbb
jmp
dec
scas
push
fsubr
jg
in
je
lret
sbb
das
les
das
lds
stc
lahf
nop
or
jne
cld
addr16
orl
jle
fs
sub
jl
push
rcrl
incb
add
xchg
adc
gs
lret
movb
xlat
mul
sbb
popf
and
cmp
jle
push
jbe
push
ljmp
pop
cwtl
jp
dec
pop
xchg
add
sti
jl
mov
jg
xchg
out
lods
push
adc
gs
or
inc
pcmpeqb
mov
loop
sahf
jp
es
pop
push
pop
repnz
sti
or
lods
cmp
rcl
iret
pop
sub
pop
sub
lods
dec
out
mov
or
dec
push
frstor
cmp
cs
xor
adc
dec
add
dec
pop
xchg
mov
xchg
inc
mov
inc
dec
lods
mov
incl
movsb
es
loopne
inc
pushf
cltd
fcoml
cwtl
adc
xchg
inc
mov
mov
dec
adc
cs
push
adcb
and
jl
call
lods
out
loop
and
jle
bound
ds
inc
or
inc
mov
call
enter
adc
mov
mov
testl
sub
jnp
dec
mov
dec
sbb
push
cli
out
mov
sub
sti
or
sbb
sub
adc
adc
stc
mov
dec
xchg
mov
enter
test
andb
adc
adc
mov
and
or
cmp
out
push
dec
outsb
xchg
add
pop
jg
or
ljmp
add
pop
sbb
or
push
gs
cltd
cmp
adc
cmpsb
push
xor
sti
les
mov
add
in
dec
lock
pop
adc
clc
inc
dec
and
cmpsl
jge
fsubs
fstps
cld
sbb
sbb
inc
and
xchg
push
sahf
cwtl
and
pop
pop
dec
sbb
outsb
mov
mov
stos
and
in
and
dec
daa
xor
or
aad
aad
orb
inc
pop
int
or
cltd
xchg
inc
scas
or
xchg
pop
and
sbb
and
jb
gs
cwtl
xor
sti
sub
addr16
je
gs
jg
lea
adc
xchg
hlt
ljmp
cmp
faddl
lock
dec
push
xchg
test
imul
pop
add
insl
outsl
xorl
movsb
or
add
push
xchg
out
xor
aas
xchg
repz
pop
lret
push
pop
mov
lods
pop
and
or
jne
insl
bound
xchg
repz
xor
movaps
inc
sbb
dec
and
loop
xlat
inc
inc
and
mov
repnz
xchg
and
inc
xchg
and
int3
or
lods
mull
popa
js
xchg
pop
and
or
cwtl
hlt
adc
sbb
or
stos
sub
or
jmp
mov
pop
and
lahf
cli
sbb
dec
adc
or
or
fnstsw
adc
imul
cwtl
adc
or
orl
sbb
adc
dec
mov
add
inc
fs
adc
enter
imul
lock
sbb
rcrb
or
loop
fld
fists
inc
fdivrl
jecxz
int3
or
fsubrl
pushf
jmp
in
inc
or
sub
or
sub
adc
adc
inc
leave
and
and
mov
pop
cs
adc
ljmp
nop
and
xchg
sbb
inc
sub
leave
mov
test
call
sub
cmp
dec
dec
inc
pop
jp
mov
sub
inc
in
or
push
gs
push
and
pop
jle
or
mov
add
bound
outsb
gs
push
pop
popf
cmp
inc
or
adc
inc
cld
clc
adc
or
push
imul
jl
cmc
test
fs
call
in
fnstcw
mov
and
fs
repnz
das
repnz
testl
mov
cmp
push
dec
es
pop
xchg
inc
jb
shrl
sub
inc
pop
add
push
xor
inc
rolb
lcall
mov
outsb
arpl
mov
add
sub
mov
mov
sbb
dec
adc
and
and
cmp
loop
inc
mov
add
jbe
insb
inc
pop
fs
dec
pushf
dec
xor
mov
adc
mov
bound
cltd
and
sub
fisttps
adc
or
jo
dec
push
or
ja
leave
rcrb
scas
in
fcmovnu
push
push
scas
sub
js
ja
and
adc
das
jecxz
orb
sti
xchg
aam
imul
pusha
lret
mov
mov
sub
cli
adc
xchg
jne
outsl
xchg
test
adc
mov
rcr
outsl
arpl
dec
add
orb
pop
dec
and
leave
mov
or
mov
mov
fwait
pop
and
nop
and
inc
pop
adc
mov
sbb
nop
ficoml
jmp
or
sbb
xchg
add
sbb
or
movsb
mov
daa
push
mov
add
push
lret
xchg
inc
or
and
add
inc
sub
iret
adc
inc
mov
add
inc
mov
mov
sub
and
pop
mov
and
dec
es
xchg
adc
mov
xchg
or
pop
cltd
test
cmpsl
mov
popa
es
lcall
push
and
mov
outsl
mov
or
inc
fldenv
xor
dec
and
push
out
add
dec
scas
mov
dec
mov
and
push
mov
dec
push
addr16
movsb
mov
mov
imul
push
adc
pushf
movsl
adc
cmp
sub
int
rolb
cmp
and
and
int3
push
gs
jp
fldcw
add
pushf
mov
sub
movsb
mov
enter
dec
sub
sub
push
nop
mov
inc
or
mov
or
lods
jl
test
sub
mov
pop
das
call
jl
inc
pop
mov
inc
sub
inc
xchg
cwtl
and
pop
push
mov
dec
and
mov
xchg
call
mov
imul
movsl
insb
and
inc
mov
fst
sub
xor
push
dec
cwtl
dec
push
fs
and
cs
repnz
mov
mov
jp
dec
cli
inc
and
mov
js
inc
push
cmp
or
jb
cmp
xchg
nop
push
push
loope
or
cmp
or
jne
gs
ja
hlt
dec
fcoms
dec
stc
cmp
push
add
dec
inc
loopne
jo,pt
inc
or
push
jo
movsl
xor
pop
xchg
sub
xor
push
xor
inc
mov
daa
and
jo,pt
inc
push
mov
push
clc
push
fwait
dec
lahf
stc
aas
rorl
cwtl
mov
cs
inc
xchg
call
xchg
ret
adc
adc
pop
sub
dec
lds
mov
adc
jle
mov
prefetchw
sti
addr16
cmc
cmp
fcoms
mov
movsl
sbb
sub
dec
mov
std
das
mov
jno
fwait
or
xorl
add
add
loope
add
ficoml
mov
cmpsb
shlb
push
in
pop
cmp
sbb
add
add
sbb
or
and
or
push
push
or
iret
jns
scas
ja
gs
adc
push
sub
arpl
outsb
scas
push
inc
push
push
jns
clc
gs
in
imul
into
ja
pop
pushf
jbe
leave
push
dec
add
xor
adc
add
nop
aam
adc
push
cmpsl
xlat
inc
popw
mov
adc
jo
xchg
xor
scas
orb
outsb
push
adc
push
jns
adc
xchg
pushf
or
push
daa
bswap
jg
fucomi
fxch
cmova
adc
cltd
test
test
and
sub
sbb
adc
in
mov
or
cmp
pop
mov
push
or
pop
or
push
scas
dec
push
push
les
inc
pop
pop
rcl
movsl
and
shlb
push
roll
pusha
xchg
adc
or
push
xor
inc
sbb
nop
inc
insb
fildll
aam
les
sub
add
or
and
popa
push
jne
pop
jns
clc
or
stc
fs
push
xlat
dec
in
cmp
adc
dec
jae
push
push
push
in
dec
jns
add
dec
push
fs
mov
mov
xor
cwtl
adc
das
xor
add
pop
inc
outsl
insl
adc
push
pop
or
jge
cld
adc
sub
inc
add
sub
bound
sbb
add
adc
mov
jl
loope
xor
enter
push
test
iret
adc
test
adc
or
ss
pop
ds
jns
dec
xor
cmp
mov
cmp
xchg
cld
scas
xor
pop
test
xchg
lods
mov
sbb
push
add
pop
arpl
push
in
sarb
cmp
jb
les
int3
xor
movsb
les
dec
jbe
xor
test
dec
jae
sub
xorb
inc
cmp
es
add
adc
inc
fs
sbb
sbb
sbb
adc
pop
xchg
and
mov
sbb
and
sub
push
or
sbb
lret
mov
ret
add
add
repz
repz
repz
adc
sub
cmp
lock
mov
in
call
call
scas
jecxz
repz
rep
rep
repz
sbb
repz
int
int3
rep
repz
icebp
sub
mov
adc
popa
orl
inc
cld
mov
insb
fs
or
gs
or
data16
add
jbe
fcomps
adc
jo
mov
popa
lock
add
dec
fwait
sub
and
cwtl
and
int3
outsl
inc
in
hlt
mov
leave
loopne
dec
adc
and
pop
ss
cmp
call
push
sub
inc
sarb
insb
jp
xor
push
or
sbb
jns
xchg
or
xor
inc
add
cmpsl
adc
aaa
push
sbb
inc
adc
pop
rolb
lods
adc
xor
add
push
and
push
push
or
xchg
ja
dec
bound
mov
fwait
lock
mov
out
dec
aam
test
sbb
stc
jno
sub
shl
hlt
dec
iret
test
por
loopne
xchg
and
cmp
xchg
and
js
lret
jb
loope
xor
mulb
adc
std
mov
enter
mov
inc
enter
adc
lods
aas
cld
adc
adc
adc
inc
cmp
or
popf
xor
dec
inc
cmp
in
gs
dec
arpl
xor
dec
push
push
add
sbb
sub
aam
imul
or
or
outsl
mov
jl
and
enter
dec
pop
xchg
sti
xor
or
adcb
daa
inc
outsl
sub
and
sbb
loop
sub
stc
sbb
mov
push
dec
in
inc
dec
into
push
or
pop
jne
pop
lods
sub
aas
repz
and
cmpsl
inc
mov
jns
sub
xchg
push
arpl
dec
clc
push
test
lahf
or
movsb
pop
pop
and
pop
out
and
mov
jno
or
es
xchg
xchg
out
mov
out
dec
cmpsl
enter
xor
push
hlt
cmp
push
push
xchg
test
loop
xchg
and
adc
sub
add
dec
arpl
cmpsl
dec
in
push
nop
sub
fldl
mov
jmp
or
inc
push
cld
inc
dec
adc
dec
pop
dec
enter
lea
or
add
dec
and
xchg
cmp
lods
mov
insb
xor
jb
mov
mov
das
push
inc
ss
push
cld
jmp
or
mov
ret
rorb
sub
mov
sbb
dec
xor
xor
or
fnstenv
imul
mov
add
push
lret
xchg
inc
mov
inc
xchg
and
andl
and
lret
pop
mov
imul
test
ds
push
xchg
and
out
add
dec
add
aad
inc
dec
xlat
mov
xor
push
cmp
or
dec
inc
jg
scas
and
xchg
dec
into
mov
or
fs
xchg
cmpsb
push
nop
and
aam
adc
push
mov
loope
nop
mov
cmp
inc
xchg
inc
cwtl
je
pushf
adc
mov
cmp
lahf
and
testb
shlb
jle
sub
xchg
mov
inc
jbe
jp
and
dec
daa
inc
dec
das
inc
gs
outsl
jns
and
pop
dec
cli
js
andl
or
inc
test
or
sub
cmpsb
jle
dec
aam
popf
and
pop
daa
dec
push
bound
cs
adc
sub
pop
push
inc
mov
and
stc
dec
dec
mov
cmp
dec
loopne
movsb
jl
loopne
xchg
dec
call
roll
push
dec
jo
push
inc
and
sbb
dec
push
lcall
push
push
adc
and
push
mov
ds
jo
inc
pop
push
sahf
ja
addr16
and
push
clc
jne
jl
mov
pop
rorl
mov
enter
fstps
push
push
and
inc
pop
shll
and
mov
adc
push
test
push
fmuls
jge
ret
xor
enter
mov
popf
cmp
mov
mov
or
and
test
jl
mov
movzbl
push
orb
je
pop
adc
lcall
and
or
inc
lea
enter
adc
adc
push
insl
fists
pop
cwtl
lock
adc
and
loopne
addl
pop
stc
sbb
pop
addb
sbb
cmp
daa
pop
push
out
sub
cmovb
mov
inc
push
or
xchg
insb
rcrb
mov
sub
sbb
adc
fsubr
and
push
add
mov
cmp
xchg
mov
jp
sar
pop
push
pop
inc
add
or
mov
or
inc
jo
loope
sub
adc
adc
adc
or
icebp
pusha
adc
or
mov
je
push
call
pop
or
les
sbb
or
sbb
and
add
dec
bound
mov
dec
adc
and
repz
push
call
push
mov
or
dec
cld
decl
rcrb
sbb
ss
call
mov
sbb
mov
mov
addr16
adc
pop
test
mov
dec
pop
pop
sbb
enter
inc
xchg
hlt
sti
arpl
cld
and
cmp
clc
cmp
xor
aas
dec
jmp
mov
sub
test
enter
sub
lret
mov
fistps
sub
pop
movsl
mulb
push
sarl
ret
lods
dec
inc
outsb
xchg
adc
jge
ret
jmp
out
mov
dec
xchg
ficoms
pop
cwtl
clc
or
push
jns
pop
xor
orb
cmp
jne
cli
gs
pop
mov
inc
or
xor
sahf
pop
mov
xchg
dec
sub
or
jne
cmpl
mov
or
fs
xor
or
sub
xor
or
jge
add
sbb
pop
or
je
mov
insb
outsb
pusha
out
push
pop
xor
push
pop
mov
cmp
sbb
inc
or
push
iret
jnp
sub
cmp
addb
add
ret
jg
aam
nop
dec
mov
inc
push
push
push
and
pop
pop
repz
in
imul
mov
inc
sbb
dec
or
push
adc
sbb
cmp
inc
fisubl
and
outsb
pop
cmp
xchg
inc
fdivl
push
adc
cmc
pop
notl
lock
test
je
or
add
ror
or
inc
dec
insb
adc
adc
mov
imul
mov
and
and
clc
pop
pop
fcoms
cmp
push
xorb
adc
and
adc
add
and
stc
or
addl
dec
add
push
call
in
mov
das
mov
inc
push
ljmp
ja
cmp
cli
adc
jae
out
add
sbb
pop
inc
sub
cli
repz
and
mov
test
dec
push
sub
or
cmp
inc
call
fcoms
xor
pop
or
daa
mov
and
ficoms
popa
insb
cmpsb
inc
add
es
loop
pushf
mov
push
sub
and
adc
sbbl
ja
ret
cmpsl
nop
pop
hlt
adc
dec
push
fsts
ja
mov
sbb
push
ret
cmpsl
loop
or
daa
shr
mov
icebp
and
or
jle
sbb
bound
inc
add
cmp
xchg
sub
addb
cmp
inc
dec
cli
xor
mov
push
ret
pop
push
inc
add
lock
sbb
cld
decb
out
stc
jmp
enter
pop
push
callw
mov
ja
sbb
stc
mov
sub
sbb
test
hlt
test
mov
pusha
nop
cmpsl
mov
or
dec
push
push
dec
adc
mov
push
push
faddl
or
stos
hlt
sbb
jmp
cs
add
adc
jge
or
mov
shlb
scas
pusha
dec
push
or
ja
lret
setb
cli
push
push
ljmp
ret
push
hlt
xchg
ret
add
inc
insb
and
add
xor
and
sub
in
sub
dec
cmpsl
shr
mov
mov
pop
addl
test
xchg
les
xor
xor
push
insb
enter
mov
pop
or
cmp
push
sub
push
pop
sub
call
mov
push
adc
sbb
test
sub
mov
push
and
jp
imul
stos
ffree
xchg
sbb
ficompl
xchg
imul
pop
and
and
adc
lock
mov
sub
test
mov
mov
aaa
jno
inc
push
mov
dec
cmp
inc
fsubrs
or
scas
notl
sti
add
or
loopne
sub
push
xchg
mov
sbb
cmpsl
lock
mov
hlt
neg
sub
xor
popa
je
push
fists
ret
out
lret
mov
xchg
mov
lods
sbb
test
test
fisttpll
xchg
jp
push
mov
out
or
ds
xor
dec
addl
inc
and
jg
js
sub
sbb
loop
xorb
push
sbb
jb
cmp
adc
pushf
push
xchg
stos
mov
sbb
int3
jne
stos
push
ret
rorb
jne
xchg
jo
sarb
mov
push
sbb
adc
xchg
out
and
daa
xor
ja
mov
pop
push
test
js
mov
sbb
xchg
call
cmp
test
and
push
addr16
sbb
ret
das
in
inc
and
push
std
inc
or
xor
xor
fwait
dec
cmp
int
sbb
dec
or
int3
xlat
xchg
mov
adc
mov
add
inc
sub
pop
push
pop
and
icebp
and
lret
xchg
jb
sbb
je
pop
pop
call
sub
dec
insb
dec
fwait
adc
push
jne
call
xchg
adc
sbb
push
and
enter
insb
dec
mov
lret
les
test
gs
scas
xor
or
xchg
je
and
jmp
push
bound
adc
mov
jmp
out
pusha
pop
sub
rcll
dec
test
test
push
out
cmpsb
in
pop
sbb
and
ljmp
or
inc
adc
xchg
xchg
lock
test
xchg
stos
dec
add
push
sbb
add
lds
or
les
cmp
and
mov
dec
call
movsb
pop
push
cmpl
adc
and
jp
mov
cmp
fs
inc
rclb
or
xlat
inc
push
int3
mov
inc
ljmp
nop
sahf
mov
jne
mov
rcll
call
mov
cmp
cmp
add
xchg
jge
add
je
jo
and
mov
inc
movb
jb
adc
mov
pusha
subl
adc
or
inc
sub
or
mov
add
push
sub
adc
or
or
pop
pop
clc
jl
scas
xor
dec
lahf
xchg
testb
mov
sbb
pop
divb
jle
loopne
push
test
jge
rorl
add
adc
xor
add
or
je
pop
mov
adc
push
push
outsl
and
fucom
xchg
sub
sbb
and
mov
adc
mov
subb
inc
sti
xchg
enter
sbb
sbb
dec
fstl
push
fstpl
sbb
mov
pop
movsb
cmp
sub
jl
xor
adc
loop
sbb
pop
pop
adc
and
push
data16
mov
mov
inc
xor
add
mov
test
jge
xchg
cmp
int
add
nop
jecxz
rol
cmpl
add
cmp
jo
lret
sub
ror
std
add
mov
sti
add
xchg
pop
test
xor
mov
sbb
test
xlat
dec
out
add
or
mov
adc
sub
sbb
jno
or
mov
fisubs
xchg
and
outsl
push
mov
sbb
inc
and
sub
out
imul
cs
cmp
xchg
sub
movsl
mov
mov
pop
daa
adc
in
adc
jns
push
sbb
push
into
or
or
jno
jp
xorl
rcll
cmp
movl
pop
pop
enter
adc
or
jmp
add
xchg
inc
sub
out
and
repnz
pushf
ds
sti
or
push
jmp
and
loope
mov
lods
ret
int3
loop
out
mov
cs
mov
xchg
movsb
inc
cld
arpl
mov
xchg
test
icebp
push
mov
xchg
int3
pop
add
pop
xchg
sub
push
lret
xor
inc
or
fdivl
push
inc
jl
pop
movsb
decb
mov
hlt
rorb
add
push
cmp
mov
fisubl
add
cmp
dec
push
rorl
and
pop
pop
cmp
into
pop
pop
movsl
inc
pushf
adc
shlb
mov
xor
mov
or
jge
ss
jne
and
mov
stos
in
ds
decb
fcoml
in
push
ja
cmc
lcall
cmp
loopne
pop
add
out
in
mov
dec
lods
mov
loop
sarl
adc
testl
repz
out
call
clc
cltd
rcrl
dec
add
xor
mov
ret
testl
sbb
imul
aaa
inc
ja
mov
or
or
jbe
mov
cmpsb
sti
popf
fstpl
dec
xor
or
fmuls
mov
lea
pop
loope
add
mov
dec
sub
test
mov
ds
subb
sub
mov
sub
sbb
cmpsb
insb
xchg
incb
and
push
dec
add
and
push
xchg
mov
sub
sub
jg
push
ljmp
cmp
sbb
mov
dec
push
cmp
pushl
inc
or
scas
mov
xchg
mov
sbb
or
test
movb
lret
xor
sub
sbbb
push
mov
and
push
and
js
call
and
mov
cmp
or
addl
dec
or
dec
test
adc
stos
jbe
or
push
xchg
out
jecxz
dec
lods
and
ret
rorb
fmull
dec
aad
cmp
ljmp
inc
inc
xlat
scas
mov
rorb
inc
std
or
pmaddwd
sbb
push
sbb
mov
mov
popf
or
sub
or
adc
cmpsb
mov
push
aaa
xchg
adc
inc
call
inc
les
je
outsl
or
lds
xor
out
sbb
mov
pop
mov
sub
push
movsl
int
lock
mov
ja
dec
pop
or
nop
test
or
and
dec
les
pushf
sbb
jmp
cmp
add
ja
shr
sbb
jge
and
mov
mov
pop
push
xchg
lds
sahf
stos
mov
test
add
push
push
shlb
sbb
pop
lds
and
enter
and
inc
mov
mull
adc
cmpsb
add
gs
xchg
xor
or
ja
dec
stos
lahf
mov
dec
std
clc
or
pop
sbb
inc
pop
add
push
in
push
scas
dec
imul
inc
push
gs
push
mov
es
sub
mov
scas
adc
insb
xor
mov
sub
dec
pop
mov
mov
mov
mov
or
cli
mov
mov
test
or
movsb
push
add
jbe
and
or
and
fcmovne
sbb
rcll
in
xchg
xor
pop
push
adc
jecxz
fs
or
or
mov
cmp
dec
enter
fidivl
in
inc
mov
je
insb
movsl
add
xchg
and
mov
leave
push
hlt
pop
cltd
cmpsl
jg
fdivr
add
cmp
mov
and
lcall
sar
and
and
xor
scas
push
add
dec
mov
xchg
mov
pop
pop
mov
adc
and
pop
int
out
test
push
cmp
lcall
cwtl
push
mov
shrl
sub
adc
cmp
or
stos
push
sub
xor
adc
xorl
or
mov
mov
subl
adc
andl
dec
or
add
add
nop
sbb
je
mov
test
aad
xchg
les
jns
pop
sti
sub
sbb
adc
shrb
aaa
rcrl
add
add
or
push
or
test
push
mov
cwtl
mov
icebp
arpl
jl
push
scas
dec
push
lock
dec
fsubl
test
add
test
adc
pop
rorb
stos
or
bound
test
sub
aas
rorb
stos
inc
fisttpl
xchg
lock
xchg
inc
insb
hlt
pop
lds
sbbb
push
std
mov
mov
mov
dec
mov
dec
movsb
and
cltd
or
pop
xor
andb
dec
adc
xor
popa
xchg
scas
mov
sub
call
xchg
test
pop
jo
or
scas
and
add
add
jne
andb
pmullw
movsl
push
movups
or
in
pushf
mov
lods
jp
clc
sub
jns
testb
xchg
mov
and
adc
fildll
or
js
xor
inc
push
push
adc
or
and
mov
or
lock
and
ljmp
push
push
or
dec
outsl
adc
push
adc
addl
mov
inc
mov
pusha
mov
inc
sub
notb
push
and
negb
fisubl
subl
sub
aaa
sub
and
test
xchg
clc
test
inc
mov
pop
push
pop
sahf
xchg
mov
fistps
scas
adc
out
push
or
or
jne
clc
pushfw
add
mov
and
and
sbb
loope
or
mov
ds
mov
cwtl
sahf
call
mov
adc
ret
inc
mov
sahf
sti
insb
xchg
fsts
adc
scas
xor
lods
dec
in
lds
je
xchg
mov
ds
stc
aam
fdivl
clc
sbb
in
or
ja
fucompp
imul
cmp
mov
inc
inc
and
push
inc
aam
enter
sub
sbb
je
sub
or
and
movsb
andb
mov
xchg
push
jbe
inc
or
idivl
pop
jo
repnz
mov
pop
mov
icebp
or
adc
jle
int
add
movsl
jg
jo
push
hlt
lahf
push
adc
movsb
aad
or
stc
jno
adc
rcrl
lea
jmp
jmp
push
enter
push
fs
loope
xor
daa
sub
je
jbe
arpl
xchg
xchg
enter
sub
fcoml
data16
cmp
xlat
les
xchg
push
mov
movsb
out
in
int3
adcb
les
push
ret
imul
ja
ja
movsb
and
ror
mov
mov
push
mov
ret
sub
cmpsb
ja
bnd
je
loop
add
mov
pusha
ret
cli
sub
or
cwtl
adcb
adc
jne
dec
sarl
add
mov
mov
fs
or
scas
mov
sbb
jl
mov
dec
mov
cmp
mov
lock
and
cwtl
or
xchg
arpl
push
test
xchg
pop
jl
jnp
repnz
test
and
cmp
mov
jno
or
jo
daa
ja
and
adc
sbb
pop
adc
test
add
mov
lret
je
lea
add
adc
and
mov
adc
push
mov
jo
loopne
lret
cmp
cmp
push
ret
mov
mov
mov
cmpl
and
test
adc
mov
mov
pushf
addb
mov
or
and
cltd
mov
das
inc
or
and
cmpsl
clc
shlb
je
inc
mov
test
jg
and
sub
or
mov
addr16
and
sbb
mov
add
and
jo
xchg
jge
cmc
dec
repz
iret
dec
stos
lret
sahf
bound
adc
cs
adc
sub
popf
pop
xchg
adc
out
popf
mov
call
inc
dec
add
push
push
add
xor
mov
lock
push
fs
sub
inc
dec
push
and
inc
or
int3
jmp
jnp
test
pop
jmp
in
or
cmpsl
or
inc
or
gs
xor
aas
dec
add
scas
push
popf
mov
insb
pusha
movsb
sbbb
sti
mov
xchg
mov
jg
inc
adc
push
mov
cltd
cli
add
xor
cmp
adc
adc
adc
xor
pop
jne
call
push
dec
lcall
pusha
int
push
cs
arpl
pop
repnz
push
push
sbb
pop
inc
xor
xor
cmp
test
addr16
outsl
imul
adc
pop
js
sbb
push
and
std
and
in
aam
out
aas
orb
pop
add
sub
addb
push
adc
cmp
pop
les
mov
stos
dec
add
push
lods
insl
dec
xor
cmpb
nop
or
push
imul
ja
stos
xchg
nop
cmp
sbb
cmp
xchg
out
mov
out
adc
orl
cmp
xchg
cmpsl
push
dec
pushf
jg
loope
stos
sbb
daa
push
mov
and
movsb
push
inc
mov
mov
push
in
insb
xchg
adc
enter
in
sub
shr
or
cmp
sub
das
inc
cmp
in
nop
inc
cmpsb
fsubl
and
jmp
scas
lock
xor
push
jb
mov
inc
or
fildll
jge
dec
adc
hlt
push
repz
push
fisttpll
mov
dec
or
repz
lods
aam
enter
aad
cmp
lods
inc
pop
in
and
jl
pop
pop
dec
clc
ljmp
out
mov
and
adc
stc
gs
decb
or
jne
aad
mov
fcmove
push
mov
sbb
jbe
out
addr16
nop
sti
notb
pop
cld
iret
in
in
mov
push
lcall
jmp
mov
add
lret
or
adc
sub
sub
aaa
cli
cwtl
jge
push
inc
arpl
hlt
out
mov
inc
add
call
jmp
je
adc
sti
testb
mov
je
mov
pop
push
stos
xchg
jno
adc
mov
jp
cmc
cwtl
inc
testb
or
xchg
push
jo
mov
or
xchg
out
dec
bound
ja
xchg
xor
or
or
ja
inc
testb
addb
shrl
jmp
sub
arpl
or
ret
push
stos
pop
push
mov
fldenv
jno
cmp
xchg
and
or
das
mov
sbbl
sbb
sub
push
aad
push
lret
jno
lods
xchg
add
add
inc
pop
loopne
xor
and
stos
aam
add
dec
movsb
mov
popf
dec
add
rcr
movsl
adc
testl
pop
mov
sbb
xchg
test
test
lods
add
jg
je
ret
cmp
sub
and
and
or
push
dec
lds
sub
nop
mov
jg
pusha
sub
dec
adc
cmp
cmp
mov
stos
sbb
int3
jne
rcrl
or
fs
sub
mov
outsb
jmp
loop
and
test
push
sbb
cmpsl
jmp
lods
or
cmp
jmp
mov
inc
adc
and
xor
mov
arpl
adc
data16
fadds
loope
push
inc
and
sub
shlb
mov
mov
adc
aaa
add
orl
jno
sub
sub
jg
insb
mov
sub
jmp
icebp
daa
test
test
pop
jmp
add
jnp
adc
and
or
push
call
jg
dec
add
lcall
ret
inc
push
sarl
inc
repnz
hlt
nop
lcall
hlt
sti
fnstenv
shlb
cltd
cwtl
loop
hlt
js
adc
cltd
cmc
rolb
icebp
cld
and
push
pop
jno
mov
lahf
sar
aas
mov
leave
into
or
mov
orb
jae
or
jmp
push
push
clc
les
sub
xchg
aam
xor
sub
dec
inc
inc
xchg
pop
mov
inc
inc
mov
outsb
fdivp
and
or
push
pop
adc
call
mov
bound
lea
or
or
inc
xchg
or
arpl
leave
jb
ljmp
and
pop
loop
notb
jnp
test
add
aam
adc
push
dec
inc
push
add
inc
xchg
jne
mov
aas
shll
out
lret
ja
and
sub
or
sahf
sub
mov
mov
jg
imul
mov
mov
or
or
push
mov
call
in
ror
mov
and
call
jns
imul
cmp
mov
test
fs
jle
call
or
add
ljmp
daa
push
in
jecxz
or
add
sarb
push
or
pop
frstor
pop
shll
movsb
pushl
jg
pushw
add
jno
jmp
in
sbb
loope
jne
std
pop
int3
cmovbe
popf
insb
sbb
xchg
sub
es
or
jbe
jne
jge
sub
out
call
leave
cs
inc
add
mov
aam
inc
repnz
push
push
adc
xchg
das
xor
inc
cld
fbld
inc
fsubrp
out
pop
jmp
sub
insl
mov
sbb
add
jnp
sub
push
aam
xchg
cmp
cmp
push
push
push
push
xchg
and
xor
test
mov
lret
inc
cmp
movl
or
aam
and
pushf
dec
adc
lea
add
sbb
xchg
jbe
fs
dec
stos
and
cmc
stc
test
cmp
stc
int
pop
scas
lret
mov
test
orb
lods
adc
js
loope
xor
pop
popa
in
jne
adc
daa
add
jmp
sbb
sub
mov
inc
fwait
pop
pop
sarb
cli
stc
mov
jg
cs
les
je
pop
mov
push
jp
xchg
mov
mov
and
mov
sub
inc
cmp
mul
push
stc
cwtl
xor
xor
mov
hlt
in
int3
mov
inc
xchg
dec
adc
clc
pop
mov
pushf
mov
push
sbb
xor
jmp
push
dec
push
push
jne
push
mov
in
das
jmp
fwait
sub
and
push
lret
ja
xor
outsb
fdivrl
andl
push
ret
push
movsl
push
sub
xor
cmp
lcall
mov
sbb
jns
mov
dec
stos
out
sarl
dec
cli
dec
les
sub
mov
enter
add
pop
imul
and
push
inc
add
lock
jg
jle
add
push
fimuls
xor
sti
in
add
adc
decb
movsb
xchg
mov
pushf
mul
adc
je
add
rcrb
sub
es
lea
movups
xchg
test
adc
mov
push
mov
xchg
andl
push
push
enter
push
mov
mov
xchg
xchg
fwait
push
pop
and
cmp
addr16
mov
mov
sahf
in
test
rorb
pop
frstor
jmp
fcomps
add
fst
sub
xlat
bound
addr16
incb
pop
hlt
call
je
cld
mov
xor
mov
aas
or
stc
and
cltd
sub
xor
mov
add
fsubs
test
lcall
repz
cmpb
arpl
pop
dec
or
pop
pop
xor
xchg
fs
jo
push
xorb
ret
and
sub
push
push
push
push
jecxz
sub
push
testb
fsubrs
dec
mov
sbb
adc
inc
cmp
lods
cld
movsl
daa
insl
jbe
in
or
xchg
jbe
inc
adc
rol
pop
ret
adc
push
cmp
mulb
imul
stc
inc
fsubrl
xor
jo
jmp
push
aaa
and
cld
fstl
cmp
bound
adc
je
out
inc
hlt
clc
mov
dec
mov
or
jg
rolb
cld
jne
xchg
dec
addl
aam
jnp
jne
adc
mov
adc
inc
ds
adc
insl
in
cmp
je
int3
es
mov
push
pop
adc
or
scas
xchg
push
add
je
scas
pop
pop
mov
pop
mov
rorb
je
movsl
push
cltd
push
cmp
dec
sub
orl
dec
nop
or
sub
popa
imulb
jo
lret
xor
sbb
sbb
sbb
xchg
and
jle
lcall
test
push
mov
dec
incb
jl
cli
stc
and
mov
cmp
aas
and
shlb
or
mov
xchg
fisttps
cmp
jl
jp
iret
cmp
jno
push
pop
cmp
mov
adc
or
adc
sbbl
addr16
cmc
cmp
hlt
mov
cmp
clc
sbb
dec
ret
jmp
xchg
in
pop
mov
dec
cmp
or
jo
push
push
cld
fwait
shlb
mov
rcrb
inc
mov
test
into
aad
inc
jo
daa
sub
rcrl
subl
faddp
and
out
mov
xor
ss
fmul
inc
test
xlat
adcb
call
sbb
jge
leave
imul
mov
sub
cs
pop
adc
and
scas
jecxz
jbe
into
push
out
mov
jo
xchg
xchg
mov
les
jl
add
adc
jp
ret
xlat
and
adc
je
adc
inc
call
and
and
add
and
lock
outsb
add
mov
sub
lcall
and
pop
shrb
movsl
loop
adc
inc
adc
add
sub
adc
cmp
orb
xchg
xchg
jno
push
cmp
lods
jge
mov
mov
inc
pop
add
ficoms
and
xor
sub
adc
lahf
mov
lock
mov
push
jo
mov
loop
xor
nop
or
jl
addr16
pop
mov
les
insl
daa
mov
cmpsb
sub
cmp
cli
cmp
sub
xchg
test
push
push
jle
and
push
sbb
adc
and
out
inc
cs
adc
sub
les
add
and
mov
sub
xchg
jne
adc
cmp
cmp
pop
inc
push
insb
pushf
inc
test
daa
xchg
add
push
das
adc
inc
sub
inc
or
sbb
inc
push
pop
sub
mov
das
lods
xchg
out
xor
xchg
nop
dec
mov
sub
hlt
xor
xchg
push
mov
or
loop
inc
movsl
sub
xor
inc
xor
call
rorb
pop
lahf
push
push
in
mov
test
or
sub
cmpl
sbb
mov
adc
jb
mov
mov
adc
cltd
cmpsb
scas
hlt
mov
test
dec
lods
dec
and
mov
xchg
or
push
orb
adc
sub
mov
ret
mov
sub
ja
rcr
mov
add
mov
notl
ljmp
pop
movsl
or
jg
adc
aad
xor
cmp
jns
xadd
adc
les
mov
push
pop
xchg
adc
sahf
inc
sbb
jmp
sti
or
or
imul
add
sbb
mov
loop
sub
cmp
les
sub
jnp
fcomps
sub
ret
cld
add
sbb
inc
mov
inc
repnz
jae
push
push
add
sbb
or
lds
sbb
cmp
push
mov
or
and
adc
jmp
add
addr16
int
sbb
adc
sbb
push
mov
add
mov
mov
cwtl
repz
cmc
jno
sub
or
sub
cmpsl
inc
and
and
or
mov
fsub
test
adc
bound
das
mov
dec
das
mov
daa
dec
out
xor
mov
ljmp
lret
pop
sahf
mov
or
leave
rcr
fcmovbe
dec
push
and
adc
and
adc
add
xor
sets
or
aas
mov
sbb
cli
jl
or
push
push
call
inc
js
repz
jno
inc
and
sbb
push
dec
dec
aad
and
push
jb
sub
adc
xor
cli
xchg
push
dec
cwtl
inc
dec
push
popf
sbb
add
xor
lea
int
dec
int3
lock
adc
sub
mov
shlb
xchg
mov
dec
add
adc
loop
adc
jmp
lea
xlat
mov
or
xor
in
inc
or
or
and
inc
in
adc
lock
add
or
clc
and
xor
cmp
add
pop
shl
rorl
sub
lds
repnz
and
leave
pop
push
add
cld
xchg
adc
mov
mov
and
mov
sub
ljmp
lea
icebp
movsb
xchg
inc
ljmp
push
push
adc
mov
push
mov
in
je
popf
sub
pushf
das
sbb
in
add
or
mov
add
push
jmp
cs
mov
and
mov
xchg
push
out
push
adc
mov
je
test
mov
jne
aaa
dec
leave
xor
inc
in
jp
mov
jl
inc
fsts
insb
push
jg
xor
lret
push
mov
in
divl
rolb
out
nop
cwtl
mov
cli
jecxz
ficoms
mov
mov
lock
push
pop
leave
je
imul
call
test
in
add
xor
and
loopne
xchg
in
dec
pop
mov
test
icebp
sahf
cs
and
test
jne
stc
push
pushf
mov
xorl
loope
sub
jmp
or
cmp
jle
dec
loopne
push
push
aam
xor
notl
aaa
mov
push
fs
or
push
xchg
xlat
add
pushl
iret
clc
jmp
js
and
and
test
cmp
insb
mov
jg
and
ja
jmp
adc
dec
or
leave
add
mov
xor
and
in
sarb
sbb
nop
dec
lret
js
in
test
jmp
pop
lock
loopne
mov
mov
adc
mov
out
or
sbbl
imul
les
and
push
mov
mov
xchg
fisubrs
das
sub
xor
jbe
or
lret
jnp
js
push
adc
test
mov
mov
push
cmp
jg
fidivs
inc
scas
in
xchg
and
cmp
mov
loop
mov
movsl
sbb
sub
pop
cmp
mov
and
orl
hlt
loopne
or
mov
jbe
jne
popf
lcall
roll
inc
or
push
cwtl
pop
jl
push
adc
popf
jg
aas
sub
dec
pop
pop
mov
pop
nop
sub
not
in
push
push
push
adc
push
out
loope
es
adc
ss
jo
and
pushf
xchg
xchg
or
add
fiaddl
in
push
mov
sub
and
mov
iret
add
movsb
lret
mov
or
mov
mov
mov
insl
aaa
cmpl
testl
adc
out
pop
cmc
je
and
pop
jg
push
cld
mov
sti
push
sbb
push
mov
add
addl
and
push
sbb
fisttpll
xchg
pop
dec
xorb
mov
or
or
or
or
dec
push
cmp
imul
mov
dec
xor
push
out
inc
and
addr16
cli
or
mov
or
mov
push
lret
dec
stc
daa
rcrb
jmp
adc
stc
and
call
mov
ds
xchg
fiadds
xor
inc
push
cmp
mov
data16
scas
mov
add
mov
jl
mov
mov
lahf
sti
mov
sahf
clc
inc
dec
negb
enter
bound
mov
push
xchg
mov
clc
xchg
mov
fidivs
arpl
dec
mov
fidivrs
iret
inc
in
cli
and
jle
cmovb
cli
call
pop
lea
rcll
cmpsl
fisttpll
pushf
hlt
sbb
jmp
or
mov
call
daa
or
inc
aad
pop
lret
test
jge
mov
popf
cmc
push
js
add
xor
xchg
call
ljmp
cmpsl
imul
add
mov
jbe
mov
mov
xor
sub
test
jne
enter
test
repz
sub
inc
inc
or
fisttpl
into
movsl
xor
pop
push
adc
mov
jno
dec
xor
sbb
es
push
dec
mov
sub
test
sbb
push
cmp
out
not
loop
adc
jmp
out
xchg
xor
adc
mov
lcall
or
adc
loop
cwtl
dec
add
das
sti
sub
cmp
inc
mov
xor
sbb
mov
test
xlat
xchg
test
xor
bound
push
pop
notb
jge
pusha
push
add
or
fiadds
adc
pop
xchg
or
jp
sahf
cld
adc
fsub
nop
mov
inc
push
popa
scas
sub
int3
sub
loope
push
adc
xor
cltd
add
int3
or
fldenv
mov
call
js
scas
inc
rorb
jne
adc
xor
xchg
out
adc
rcll
fnstenv
daa
and
adc
or
or
bound
movsb
dec
cwtl
inc
jmp
imul
ljmp
inc
into
inc
pop
pop
in
int3
mov
and
cli
pusha
sahf
or
jmp
cs
push
aad
dec
mov
jle
ficomps
pop
fwait
or
data16
sub
movsl
xchg
push
adc
ljmp
pop
inc
pop
imul
cmp
mov
adc
in
and
add
cs
ljmp
lock
sub
or
inc
push
das
fadd
je
and
xchg
in
and
mov
xchg
xor
dec
and
and
mov
sbb
les
stos
mov
dec
jne
lret
icebp
adc
mov
lds
push
shr
sbb
clc
pop
pushf
mov
xchg
imul
cld
in
or
cld
add
add
arpl
arpl
je
xor
data16
stos
adc
in
sub
pop
test
adc
insb
loop
push
shlb
inc
lret
mov
and
inc
sbb
hlt
mov
add
stos
sub
sub
not
aas
jae
cmp
sahf
pop
arpl
imul
xchg
testl
setne
and
add
xor
or
mov
push
je
popf
cmc
sbb
repnz
int3
lock
stos
notb
loopne
xor
call
cmc
push
iret
xchg
lock
insb
xchg
ja
xor
daa
push
cmp
adc
cs
cmpb
sbb
jbe
xor
mov
getsec
dec
jb
fnstsw
dec
adc
rcrl
inc
sti
test
into
and
xchg
fdivrs
lock
add
adc
adc
jo
out
pop
sub
cltd
and
faddp
call
inc
adc
test
xlat
adc
jne
in
dec
jmp
ja
out
cmpsl
fs
adc
mov
sub
out
and
adc
jmp
or
sahf
sub
es
adc
push
pop
andb
js
and
cmp
hlt
sti
test
mov
mov
std
cltd
cmp
jnp
inc
or
add
and
mov
pushl
adc
sub
popa
and
or
repnz
push
cmpsb
xchg
push
xchg
inc
ret
movsl
mov
jmp
dec
ret
cmp
sbb
negl
xor
call
insb
cmc
call
sbb
fisttpl
inc
jne,pn
fs
push
cwtl
mov
pop
xlat
jo
inc
cmpsb
nop
and
imul
scas
sub
xlat
push
add
or
mov
das
mov
sub
xor
test
mov
mov
add
xor
cmp
mov
movsl
sbb
dec
xchg
inc
xor
lock
push
dec
fsubrl
hlt
shl
push
and
jne
pop
je
pcmpeqb
loopne
adc
cmpl
pusha
pop
adc
dec
push
sahf
and
sbb
inc
ljmp
inc
lock
clc
jo
notl
sbb
pop
and
push
xor
in
xor
cmp
push
inc
mov
loopne
jmp
jge
sub
add
cmpsb
decb
pop
jne
aad
fldl
xchg
xor
bound
sbb
cli
mov
adc
xchg
lea
mov
jne
xchg
dec
in
mov
call
add
aam
jmp
stos
sub
clc
and
pop
subl
inc
mov
lock
dec
fsts
in
jmp
lock
imul
je
mov
mov
ds
sbb
pop
enter
add
add
pop
fs
and
or
or
or
and
and
dec
sbb
push
outsb
sarb
mov
test
jo
bnd
xor
push
or
pop
sbb
sub
ljmp
xchg
imul
push
or
mov
inc
imul
fstps
cmp
imul
dec
out
pop
xor
or
dec
xlat
or
or
rcrb
test
and
mov
xlat
lods
test
lods
repnz
or
jl
outsb
jmp
or
adc
jb
jmp
addr16
xchg
pop
mov
adc
or
int
and
dec
inc
test
dec
inc
sub
jo
pushf
nop
mov
cli
daa
icebp
or
and
inc
mov
or
xchg
call
insl
xchg
xchg
mov
test
out
das
mov
cmp
push
add
lret
insb
inc
dec
mov
ret
mov
inc
aaa
xlat
adc
xor
mov
inc
nop
das
add
mov
mov
das
mov
and
add
andl
jl
mov
pop
and
clc
jo
cmp
cmp
cmpsl
sub
or
push
into
mov
mov
adc
cmp
aaa
pop
sbb
sub
sar
jnp
mov
adc
push
xor
jo
mov
xor
je
push
and
ret
xor
sub
xchg
sbb
out
pushf
stos
pop
inc
dec
enter
int3
inc
inc
test
enter
dec
cwtl
xchg
push
adcl
in
cmp
push
sahf
ljmp
mov
or
jne
jge
repnz
xor
pop
iret
sbb
inc
adc
sub
insl
adc
pop
inc
mov
dec
mov
or
in
add
test
adc
bound
adc
add
popf
push
je
mov
jae
bswap
dec
mov
xor
adc
pop
sbb
push
lds
iret
and
js
or
cmp
arpl
or
and
push
add
mov
sub
ja
fdivs
push
fcmovne
dec
cwtl
rol
adc
dec
ret
add
and
lock
pop
mov
jle
call
or
jmp
shlb
movsl
jmp
ret
ss
scas
jb
int
inc
sarb
inc
cmp
cmp
movsl
xlat
cltd
fs
loope
dec
jecxz
or
loop
jge
aam
jae
or
mov
add
pushf
dec
lret
cltd
gs
test
clc
mov
and
pop
xchg
adc
movsb
sbb
and
xor
ds
sbb
or
xchg
sub
test
sub
adc
stc
cli
jecxz
lds
das
test
adc
xchg
push
sarl
fcoml
call
xchg
xor
shrl
cmp
inc
and
push
ss
dec
cmp
cmpl
adc
inc
int3
daa
pop
adcb
leave
popf
test
dec
cmpsl
dec
jl
mov
insb
pop
inc
xor
in
inc
push
jmp
push
aam
mov
inc
pop
dec
and
fsubrl
dec
push
push
inc
cld
inc
in
lds
imul
mov
jl
ficompl
xlat
xchg
test
stos
add
or
jle
into
pushf
mov
xor
lret
dec
inc
adc
and
testl
sub
add
jmp
outsl
or
aas
xchg
or
inc
mov
inc
lret
ljmp
sahf
test
mov
sbb
pop
add
or
dec
sahf
mov
fldcw
lahf
xor
jo
mov
les
and
xlat
daa
movsb
and
mov
lahf
js
push
out
dec
adcb
adc
pushf
sbb
pop
pop
ljmp
pop
jb
add
fisttpll
pop
xor
daa
add
out
adc
leave
xor
xor
inc
pusha
por
pop
fisttpl
mov
push
sbb
push
jmp
jmp
and
mov
loop
sbbb
dec
dec
call
rclb
in
sbb
push
cmp
test
data16
adc
jae
and
daa
jle
inc
or
lods
dec
xlat
mov
adc
stc
xor
or
jmp
stc
pop
aas
inc
dec
mov
and
ret
adc
enter
into
and
out
int3
add
mov
lods
jmp
inc
add
push
daa
loopne
sbb
dec
push
mov
int3
jne
sbb
js
bound
adc
push
lret
je
into
mov
pop
scas
hlt
inc
mov
adc
sbb
sub
push
cs
int
sub
imul
imul
or
push
or
pushf
shlb
scas
dec
adc
dec
mov
xchg
jnp
stos
ja
push
pop
sti
push
and
sub
pop
out
sti
mov
jle
pop
adc
dec
dec
lcall
loopne
out
mov
mov
pop
fidivs
aaa
cmp
pop
lods
ret
fstl
sub
cli
fwait
sbb
call
add
xchg
push
mov
mov
jg
xchg
push
mov
dec
insb
test
mov
add
stc
aaa
test
nop
mov
daa
js
mov
sub
mov
seta
popa
jp
decl
jecxz
mov
and
inc
cmp
xchg
adc
push
out
cwtl
adc
dec
adc
movsl
std
and
mov
jb
cmpl
jo
mov
hlt
xchg
jle
call
mov
in
pop
inc
test
and
and
mov
mov
xor
loopne
stc
rorb
xlat
inc
lret
pop
loope
cs
push
hlt
xchg
lcall
lock
gs
mov
sub
js
add
mov
mov
lcall
adc
repz
popf
mov
jg
rclb
rcr
cmpsb
mov
push
dec
inc
dec
cmpsl
xor
xchg
xor
call
test
mov
jl
xor
and
add
loope
and
das
mov
add
jle
cs
bound
mov
in
sub
add
das
jne
loope
and
xor
test
mov
hlt
pop
push
sahf
lock
repz
dec
stc
into
testb
mov
adc
test
inc
les
fs
sub
decl
pop
and
sub
fidivl
mov
mov
xchg
push
xchg
nop
jl
test
das
xor
das
pop
and
and
or
clc
inc
sub
test
add
lock
les
and
repz
call
dec
ljmp
push
movsl
test
or
sti
aam
int
ds
xor
stos
dec
jmp
sbb
pop
shr
jecxz
cmp
inc
jnp
enter
lea
mov
sti
pop
mov
dec
mov
and
xchg
xchg
push
xor
push
lods
cwtl
sbb
cmpsl
push
push
inc
lret
daa
fstl
sub
xchg
nop
lods
lock
pop
mov
cld
cmp
fs
jge
dec
pop
dec
xlat
or
push
ret
push
std
fwait
dec
jl
adc
push
call
ja
jp
or
test
mov
inc
cmpb
inc
sub
adc
jmp
xlat
xor
imul
xor
push
test
pop
cmpl
jns
mov
stos
push
clc
cmp
mov
stc
xor
add
sbb
cwtl
mov
loopne
push
sub
xor
jne
mov
loopne
push
and
sar
xchg
mov
aas
lds
in
jge
xor
xchg
add
sub
out
test
push
inc
sbb
mov
add
jp
dec
push
mov
sub
cmp
stc
sub
xor
ja
inc
add
cmp
in
mov
call
loop
mov
adc
cli
and
and
je
ret
cld
repz
adc
dec
or
xchg
out
sub
cmpsb
and
fsub
ret
call
mov
adc
lret
add
bound
adc
ja
cmp
roll
mov
loopne
or
mov
xchg
movsb
dec
mov
sub
add
sahf
jmp
jl
scas
and
push
pop
mov
push
mov
adc
cmpl
push
hlt
mov
orb
je
or
xchg
lret
dec
xchg
call
add
enter
and
or
lahf
xchg
test
fdivrl
shrb
mov
adc
loop
or
bswap
les
fsubrl
xchg
mov
pop
idivb
movsl
pop
pop
jl
mov
sub
aam
dec
aas
jp
fs
xor
rcrl
sahf
int3
or
jne
das
pop
mov
xchg
jno
imul
scas
jp
jne
pop
sete
push
mov
xchg
mov
jge
or
imul
sbb
add
sub
and
jge
je
xor
push
adc
or
and
mov
sti
sub
sub
cli
pop
out
lret
mov
stc
das
into
sub
int
xchg
jle
sub
sbb
das
in
dec
jecxz
mov
mov
sbb
xchg
sti
sub
movsl
rclb
addr16
mov
jo
sbb
mov
mov
sbb
popf
and
int3
pop
adc
mov
mov
push
int3
adc
pop
fdivr
in
ret
mov
sub
jge
mov
push
push
fldt
jp
es
daa
test
lret
shlb
test
int
ficoml
test
es
lret
fldt
dec
sub
cmp
add
dec
enter
mov
jecxz
mov
test
xor
sbb
pop
out
adc
or
les
jg
out
and
es
daa
mov
lock
and
push
js
mov
aam
pop
nop
mov
and
inc
mov
test
nop
inc
xchg
jmp
jns
dec
sbb
sbb
or
ljmp
sub
cmp
mov
sti
cmp
mov
mov
push
pop
inc
fadd
jbe
jns
lock
cld
pop
sbbl
sub
or
test
inc
jns
sub
jo
inc
cmp
fildl
adc
sbb
and
sbb
adc
mov
dec
hlt
pop
jbe
pop
push
inc
mov
unpcklps
sub
testl
inc
adc
mov
popa
nop
mov
jno
push
mov
aam
rorl
xor
and
xchg
pop
lea
xchg
and
stos
xor
cmc
cwtl
test
imul
test
cmp
and
mov
inc
enter
and
loope
push
or
fsubl
cmpsl
or
xor
ret
xor
pushf
adc
jl
xor
pop
lock
lahf
roll
adc
inc
adc
push
lock
ja
fbld
sbb
sbb
mov
sub
adc
or
mov
fidivl
push
insb
push
push
imul
out
aas
jl
dec
or
dec
out
adc
dec
push
inc
dec
xchg
sub
mov
sti
stos
int
repnz
pop
test
jne
push
sub
ret
dec
add
xchg
mov
inc
repnz
push
aam
dec
cmp
push
ja
enter
dec
push
mov
ljmp
inc
inc
fs
jmp
xchg
sbb
aas
push
pop
pop
push
fmull
pop
mov
cltd
dec
add
and
mov
adc
outsb
ljmp
dec
add
push
adc
adc
mov
popf
dec
test
flds
xor
lret
ja
fadd
sbb
gs
xor
jg
test
dec
repz
mov
hlt
lahf
enter
aaa
jl
or
and
mov
push
pop
push
popf
xor
xchg
out
xor
add
add
pushl
outsl
clc
je
in
mov
pop
pop
or
xor
xor
dec
mov
or
jmp
push
jnp
cmp
lahf
sbb
lock
mov
shll
jne
xchg
xchg
xor
cmp
ret
push
test
sti
adc
mov
add
push
pop
rorl
adc
xchg
jb
sub
andl
fs
xchg
adc
popf
movl
or
jg
imul
out
mov
nop
orl
adc
call
int
pusha
xor
mov
mov
inc
movsb
sbb
mov
mov
mov
push
add
test
outsb
or
mov
lods
pop
or
jo
cli
lret
xor
push
movsb
scas
push
mov
xchg
inc
mov
scas
mov
mov
pop
pop
or
call
adc
dec
cmp
imul
pusha
mov
push
or
test
jne
pop
clc
push
cmp
dec
mov
and
dec
mov
addb
lock
not
jae
mov
out
xchg
push
lahf
fmuls
push
sti
adc
xor
and
roll
adc
jae
scas
fstp
sub
jb
test
xchg
out
leave
stos
out
rcrb
dec
and
clc
jne
jae
pop
and
insb
push
xchg
and
in
cmp
jge
push
lret
shr
mov
insb
push
and
sub
jne
cmpl
sbb
pop
sbb
and
movsl
inc
push
shll
shlb
in
ds
or
leave
orl
xlat
addb
pop
jge
nop
or
push
add
outsb
cmc
adc
test
orb
xor
aam
mov
lahf
loope
pop
mov
mov
inc
add
mov
and
mulb
mov
or
cmpsb
mov
cmp
aas
jmp
pop
pushf
pushf
test
rolb
mov
cli
ret
outsb
mov
mov
cs
jmp
movswl
cmp
inc
jns
pop
inc
dec
pop
cmpsl
je
pop
inc
xor
fmuls
push
mov
mov
fs
and
dec
and
andb
xor
ret
mov
sub
add
jl
adc
xchg
jb
mov
lods
paddb
xchg
adc
or
push
and
mov
xchg
cmp
sub
rcll
and
mov
or
mov
inc
and
and
es
nop
adc
pop
insb
adc
les
and
pop
mov
or
mov
xchg
iret
outsl
std
and
push
cmpsb
test
mov
dec
ficoml
sub
lahf
or
mov
and
mov
xorl
adc
add
and
mov
push
in
xchg
popa
leave
mov
dec
nop
jl
or
jmp
mov
cmp
push
setg
fisubrs
fimuls
add
dec
mov
outsb
jge
cmp
setl
es
inc
push
jo
adc
xchg
cld
das
push
jl
ja
jl
push
mov
jl
jo
test
mov
xor
push
or
std
pop
xchg
nop
test
dec
xchg
into
popf
xlat
cwtl
stc
sub
add
mov
lcall
sub
imul
dec
and
cmpsb
jae
sbb
xor
push
lahf
jns
popa
lock
dec
push
push
mov
hlt
lahf
loopne
push
enter
or
inc
and
lock
add
cmp
aas
sub
or
insb
ja
push
pop
push
push
add
xchg
adc
push
iret
stc
rcll
loop
adc
mov
pop
scas
push
mov
cmp
add
test
push
xchg
das
je
jne
int3
or
ja
bound
rorl
insb
jge
mov
lcall
add
jmp
cmpsl
adc
add
jmp
stc
lock
cwtl
add
inc
movsb
aad
sub
mov
lcall
inc
imul
adc
push
cmp
inc
out
lret
popa
sub
or
and
and
stc
pop
cmp
imul
mov
inc
push
sti
cmp
fcmovnb
inc
pushl
je
or
test
lock
and
jne
adc
and
push
enter
int3
mov
inc
ret
cmp
ret
jecxz
cmc
popa
movsb
clc
cmp
jge
pop
iret
sbb
in
in
rorb
cld
mov
and
cltd
sbb
inc
cmp
cld
dec
jne
dec
adc
cmp
xchg
xchg
stos
fwait
mov
push
dec
aaa
fildll
dec
inc
inc
mov
mov
fistpll
or
sub
and
inc
adc
cmova
xor
mov
pop
out
sub
gs
call
addr16
les
push
cli
xor
out
or
add
pushf
cmp
add
or
add
stc
std
jne
pop
jno
cwtl
orl
mov
mov
in
jae
sbb
and
mov
adc
pop
lahf
call
inc
insl
mov
mov
in
pop
push
dec
call
dec
in
mov
sahf
xchg
push
mov
and
add
ss
in
or
rorb
mov
cmpl
pop
pop
push
daa
adc
xchg
mov
mov
stc
imul
add
lcall
lock
sbb
icebp
sub
ret
int3
push
sub
adc
mov
and
mov
scas
mov
or
xor
push
daa
clc
loopne
mov
sbb
mov
cmpl
and
add
cs
popf
sbb
test
adc
mov
std
data16
mov
mov
ljmp
je
cmp
mov
or
mov
in
fmull
fstpt
dec
daa
fistl
jbe
or
and
push
mulb
bound
test
sbb
call
mov
in
mov
sub
fs
sub
call
movsb
nop
lods
les
push
scas
or
call
inc
and
push
pop
or
bound
scas
fsubrs
inc
mov
movsl
inc
loopne
adc
cmp
aas
push
mov
xchg
sub
fiadds
or
or
movsb
jle
jb
out
repz
mov
dec
loop
imul
xchg
add
push
cmp
adc
call
cmp
cmp
dec
xlat
jae
jne
scas
pop
icebp
xlat
pushf
clc
push
xchg
sti
xchg
cmp
int3
sbb
lock
and
lcall
dec
push
outsb
mov
dec
mov
adc
adc
add
jno
or
test
adc
dec
sbb
stos
add
inc
xor
lret
aas
test
scas
test
jb
sub
mov
movsl
or
xchg
jnp
dec
pop
stos
xor
push
popf
xchg
inc
orb
cmpsb
cltd
setge
add
and
inc
outsl
aaa
cwtl
sub
sbb
movsb
sahf
mov
push
das
in
pop
push
lea
shrl
adc
mov
mov
sbb
pop
call
pop
mov
dec
clc
inc
push
roll
push
add
cli
pop
rolb
inc
sbb
lods
pop
bound
jno
sub
ret
mov
pop
es
lret
mov
mov
inc
lods
jg
sbb
gs
sbb
pop
add
or
push
push
pop
and
push
movsb
or
stc
ds
dec
dec
in
je
adc
jl
test
push
pop
mov
out
daa
xchg
or
int
mov
cs
sbb
sbb
sbb
push
sub
clc
stos
xchg
icebp
mov
pop
fisttps
ret
xchg
dec
hlt
push
ljmp
popf
pop
xor
jmp
adc
push
sbb
pushf
dec
dec
leave
push
add
adc
inc
andl
adc
xchg
add
sbb
jno
imul
cmp
push
in
push
mov
aam
or
ljmp
or
sbb
add
sub
mull
or
or
test
outsl
out
push
mov
mov
dec
jmp
mov
push
inc
xchg
push
jne
and
lods
insb
sbb
mov
xor
dec
call
mov
lea
inc
fadds
insb
iret
rol
xchg
pop
xchg
test
out
loopne
lods
mov
jl
popa
dec
or
inc
jecxz
xor
mov
add
mov
aad
das
mov
adc
ss
push
add
sub
movsb
in
sub
pop
repz
push
mov
das
stos
shlb
lret
xchg
mov
sub
hlt
mov
cmpsl
mov
dec
add
xor
pop
jb
push
in
xor
sub
aad
xchg
jns
enter
loop
nop
xor
aad
movsb
push
and
loope
fdiv
mov
or
sti
jle
pop
fisubs
adc
mov
add
or
xorl
stos
and
inc
jne
add
pop
push
dec
or
mov
push
push
fs
aas
aas
idivb
rorb
push
dec
pop
insb
mov
out
jbe
jp
rorb
add
jecxz
mov
or
test
mov
adcb
cmp
jne
push
cmp
pop
daa
or
mov
xor
or
sbbb
add
call
dec
mov
push
cmp
xor
in
outsl
cmp
mov
xlat
arpl
andl
jnp
dec
mov
xchg
inc
adcb
in
mov
je
test
pop
xor
ds
scas
setle
sub
sub
imul
sub
add
jp
push
mov
ja
sahf
pop
call
jmp
loope
in
jge
lahf
adc
push
in
dec
nop
cmpl
testl
lds
mov
enter
mov
inc
sub
adc
cmp
add
push
fdivs
pop
pop
add
jg
sub
xor
sbb
cmp
inc
pop
mov
out
dec
je
mov
fstps
loop
cmp
xor
inc
cli
xlat
and
pop
xchg
inc
nop
or
out
sbb
notb
std
jnp
ror
inc
sbb
add
and
js
add
mov
stos
mov
mov
hlt
inc
and
add
and
jne
rcrb
scas
nop
out
fisubrl
lea
clc
pop
mov
fisttpl
call
lea
cmpsl
daa
or
fisubrl
std
push
cs
push
xlat
scas
jg
sub
add
jg
inc
xchg
std
push
adc
lahf
cmpsb
pop
clc
inc
mov
iret
inc
test
and
rcll
call
pop
pop
mov
inc
add
pop
push
sub
add
jmp
add
shr
fstps
jl
cltd
pop
push
sbb
mov
scas
andl
xchg
scas
sbb
push
jg
adc
cmc
add
sub
lcall
fwait
xchg
or
dec
pushf
and
adc
imul
jg
fisubs
or
sbb
xor
add
push
gs
aaa
xorl
jns
cwtl
jmp
and
add
adc
sub
sbb
cmp
sbb
sub
mov
xor
push
pop
xor
dec
sbb
icebp
or
andb
mov
inc
sbb
sbb
and
repnz
movsb
andb
cld
in
test
mov
jns
test
sbb
lret
jmp
mov
inc
xchg
push
idivb
das
mov
xchg
jle
loope
call
jmp
sub
or
xchg
test
xchg
clc
cmp
push
adc
outsb
sub
push
mov
jmp
push
sbb
push
stos
hlt
std
out
sbb
mov
rolb
dec
push
punpckhbw
das
rcrb
adcl
mov
dec
dec
mov
test
mov
dec
inc
mov
shll
and
mov
inc
sbb
pushf
stos
lods
sahf
fisubs
call
out
sub
pop
xchg
dec
xchg
lods
out
cmp
or
lea
subb
cmpl
outsb
das
or
fdivrl
mov
push
call
sub
stos
or
lahf
add
jg
xchg
out
or
or
jne
mov
mov
jne
mov
adc
pop
push
das
dec
stc
lcall
mov
push
out
enter
and
repz
bound
xlat
or
mov
out
xor
sarb
inc
jmp
pop
cmc
sub
insb
dec
or
enter
sbb
adc
mov
mov
mov
ljmp
pop
dec
or
adcl
cli
outsb
and
adc
enter
inc
movb
mov
adc
and
xchg
adc
xor
lret
add
adc
movl
adc
add
and
rcll
add
cmp
sub
enter
cmp
xchg
cmp
int3
cmpsl
loope
fdivrs
cmp
das
movsl
call
and
jl
adc
inc
aam
int
xor
mov
imul
adc
xchg
pop
test
loope
sbb
jl
out
mov
xchg
push
sbb
xchg
sub
jb
loop
adc
inc
mov
mov
dec
pop
adc
pop
jmp
xor
jmp
mov
call
xlat
popf
mov
pop
loopne
push
stc
adc
and
add
mov
mov
repz
cmp
push
jmp
adc
cmpsb
mov
push
mov
ljmp
je
jae
xor
fs
cmp
adcl
imul
and
mov
bound
cwtl
loop
xlat
or
fdivl
jo
cwtl
lea
rolb
imul
scas
pop
jg
xorl
cmp
adc
xchg
push
mov
je
cmp
inc
mov
inc
dec
push
or
and
sbb
or
dec
cmovb
push
outsb
fsubr
xor
data16
roll
jmp
mov
leave
adc
pop
adc
add
jbe
dec
pop
mov
fidivs
sub
inc
pop
sbb
xchg
jnp
and
out
adcb
pop
add
test
mov
inc
rcl
insb
fcmovnb
push
lahf
mov
insb
push
adc
lods
inc
mov
ret
rclb
pop
push
nop
dec
cld
pop
gs
lock
or
out
add
or
gs
sub
jecxz
sarl
jae
aam
push
mov
xor
adc
xor
add
mov
leave
aad
mov
and
lods
mov
neg
mov
adc
and
movsl
push
subb
mov
je
ljmp
iret
dec
pop
pop
test
rcrb
jbe
aad
xor
cmp
insl
cmp
xor
mov
pop
sub
jmp
mov
notb
mov
and
popf
aad
pusha
push
cmp
fbstp
pop
sub
push
jae
jne
jle
in
or
inc
xchg
aad
gs
dec
in
clc
shrb
dec
cmp
std
lds
or
xchg
dec
loopne
sahf
imul
inc
or
cmp
call
sub
sbb
es
shl
imul
add
inc
pop
mov
add
pop
dec
dec
aam
leave
xor
pop
sub
les
add
sbb
mov
add
mov
mov
dec
pop
std
adc
aas
scas
dec
out
sub
fldcw
xchg
fsubr
test
mov
in
unpcklps
push
push
loopne
jnp
movsl
sbb
push
rolb
out
mov
aas
iret
test
mov
cmp
shrl
out
cmp
rolb
jne
jae
xchg
mov
rolb
shrb
in
xchg
leave
inc
xchg
adc
push
xchg
das
or
sar
xor
bound
iret
add
pop
jge
mov
ret
in
cmp
sbb
repnz
xor
push
or
inc
stos
imul
sbb
inc
rclb
push
mov
or
push
jecxz
daa
mov
sbb
js
sti
fnstenv
icebp
daa
jbe
mull
or
shrb
and
sub
xor
add
pop
or
mov
pop
cmp
jecxz
inc
dec
jl
jecxz
adc
data16
and
adc
sbb
mov
imul
dec
cwtl
leave
push
adc
out
decl
cmpsl
sbb
call
pop
out
mov
and
movsb
jo
ret
shrl
sbb
sbb
cmpsb
or
mov
mov
push
dec
sub
out
push
jmp
filds
ljmp
fs
ret
out
adc
sti
mov
mov
je
jb
push
hlt
pop
xor
jnp
or
cmpsl
push
mov
adc
push
dec
sub
mov
adc
adc
xchg
je
push
inc
or
pop
jle
xchg
push
loop
inc
cmpsl
negl
and
xchg
jae
or
pop
call
std
in
xchg
mov
mov
std
sbb
int
xor
mov
cltd
dec
mov
lea
leave
dec
mov
out
lods
out
or
inc
sub
mov
nop
popa
jg
mov
insb
lahf
push
inc
or
rolb
adc
pop
xchg
dec
addr16
xchg
fwait
dec
adc
inc
inc
xor
fs
cmpsb
mov
call
or
push
lock
popw
aas
movsb
sbb
enter
dec
or
cli
sub
loop
xchg
inc
pop
or
mov
hlt
div
mov
fldenv
or
nop
adc
in
cmp
pusha
jnp
xor
push
daa
out
sub
insl
mov
push
xchg
stc
cli
dec
loopne
push
les
sub
sar
ret
xchg
scas
push
sahf
pop
push
push
add
inc
sar
repnz
xchg
popa
and
insl
sbb
lock
shrl
in
cmp
mov
push
or
shlb
inc
xor
adc
sbbb
stc
pop
je
js
stos
inc
inc
or
cmp
mov
mov
lods
jl
icebp
mov
insl
and
and
pop
xchg
in
mov
xchg
xor
ret
aam
or
or
test
movsb
mov
jns
add
movsb
in
in
mov
insl
jmp
or
fsubrs
xor
and
mov
and
aas
push
test
bound
jne
mov
xor
ret
pop
movsb
dec
negl
push
sub
popf
leave
push
pop
rclb
into
adc
xchg
sub
add
pop
dec
pop
fcoml
cmp
sbbb
mov
js
push
lods
mov
imul
aas
xchg
das
call
xor
es
mov
pop
sbb
fsubl
cmp
jl
test
call
je
mov
fs
xor
into
cmp
xor
les
daa
filds
xchg
add
cmpsb
adc
mov
inc
hlt
inc
dec
popf
dec
mov
xchg
negl
ret
push
jo
outsb
imul
and
sbb
mov
iret
dec
adc
repnz
and
jne
jle
inc
movzwl
outsl
and
lret
stc
pop
mov
or
outsb
les
lahf
mov
lods
adc
mov
fnsave
xor
cs
mov
ds
je
ja
mov
inc
fwait
adc
xchg
lcall
xchg
fsub
leave
add
adc
or
adc
inc
fbld
dec
mov
xchg
fsubr
sti
lcall
xor
jge
scas
fsubrl
fcoml
je
iret
ret
push
int3
shlb
xchg
push
mov
and
test
dec
inc
test
cli
xchg
jmp
pop
mov
rorl
jne
repz
out
jge
jle
pop
cltd
aad
repnz
lock
bound
bound
xchg
pop
jp
and
leave
cltd
sbb
test
mov
dec
mov
mov
pop
scas
mov
add
push
call
fdivl
std
sbb
adc
aad
adc
pop
daa
clc
cmp
loope
cmpl
filds
xchg
sbb
push
cmp
adc
inc
ret
call
mov
daa
and
xchg
adc
pop
pop
pop
repnz
mov
push
out
cwtl
jns
dec
scas
cmp
push
cmc
dec
out
cmpsl
adc
sub
cli
aad
or
or
mov
std
push
inc
pop
sbb
jo
leave
stos
mov
adc
pop
in
add
scas
cmovp
clc
ljmp
test
cli
pop
push
jmp
out
pushf
adc
xchg
mov
sub
cmp
mov
inc
sti
xor
repz
call
xor
scas
pop
scas
xor
cltd
stc
mov
in
push
dec
iret
aad
popf
xchg
sarl
push
mov
lea
xor
mov
or
in
xchg
jo
sub
hlt
inc
rorb
lock
sbb
popa
cltd
xor
push
cwtl
cmp
mov
mov
mov
sbb
shl
push
push
adc
sbb
or
cwtl
lods
sub
pop
sub
or
or
bound
inc
testl
cmpsb
jge
inc
loope
mov
mov
mov
lods
cmp
mov
outsb
jl
inc
stc
sub
sahf
mov
sti
imul
mov
pushf
sub
das
add
xor
sbb
out
mov
pop
cmp
inc
lods
sbb
call
cmc
mov
movsl
fnstcw
mov
mov
jo
xchg
add
sub
dec
jl
inc
aaa
orl
xchg
inc
sub
pop
mov
js
push
adcl
and
fldl
adc
stc
test
xor
stos
aas
mov
data16
in
hlt
in
xchg
dec
jp
mov
test
jno
xchg
inc
lea
pushf
or
call
xchg
rcll
in
or
iret
or
xchg
rorb
pop
out
push
fucompp
mov
dec
loop
mov
and
xor
mov
jg
lds
stos
pop
push
mov
loopne
jmp
sub
push
adc
mov
dec
scas
insb
xor
std
push
inc
pop
push
push
jne
xchg
fucomi
das
pop
mov
cltd
jge
mov
add
sti
sti
rolb
pop
pusha
sub
dec
adc
and
hlt
stos
adc
add
add
inc
push
pop
mov
add
andb
jne
scas
sarl
scas
adc
ja
ljmp
mov
add
adcl
mov
int
mov
adc
ret
test
sub
sub
int
fwait
stos
or
imul
sub
stos
int3
mov
arpl
hlt
and
divb
daa
dec
sbb
sub
push
jl
mov
mov
pop
cmp
push
xor
lods
ret
pop
mov
sub
sub
loop
push
je
adc
pop
enter
push
add
in
xchg
mov
test
xchg
mov
pop
dec
sahf
fsubrl
mov
xchg
mov
rcrl
repz
lret
enter
fcompl
xchg
inc
lahf
stc
mov
fdivs
mov
ret
mov
add
mov
lea
das
mov
testb
adc
testl
xor
sub
mov
add
clc
xchg
add
jl
add
jecxz
sbb
xchg
pusha
push
add
bound
insb
dec
repz
ret
loop
test
mov
call
adc
xor
add
pop
addr16
fnstsw
inc
jne
daa
pusha
cwtl
cmp
xor
sub
and
xlat
sub
or
es
adc
loopne
cmp
push
movsb
cld
pop
dec
mov
cmpsb
jb
pop
adc
mov
ljmp
call
mov
adc
pop
popf
and
jne
dec
dec
push
push
and
jo
dec
sbb
mov
jecxz
push
adc
sbb
movsl
jo
mov
sub
and
pusha
and
les
mov
mov
pop
in
jl
daa
arpl
sub
mulb
or
rolb
inc
and
and
jg
out
mov
lret
sub
orb
call
jb
pop
inc
xchg
out
movsb
or
sti
jge
dec
test
jne
enter
pop
adc
mov
sub
mov
add
mov
sub
xchg
sarl
movsl
pop
jge
cmp
ljmp
inc
xchg
mov
adc
hlt
leave
add
jmp
pop
sbb
and
ss
into
sbb
popf
fdivs
mov
cmp
mov
xor
jnp
mov
inc
nop
or
and
pop
lods
call
adc
sub
mov
adc
inc
jmp
mov
mov
xchg
add
push
adc
or
in
cld
xchg
jmp
xor
cli
push
insb
test
sbb
adc
sub
test
and
dec
jnp
or
in
in
mov
insb
rorb
xchg
js
xor
hlt
pop
xchg
loope
pop
mov
fs
int3
lea
sti
jnp
mov
sub
mov
adc
or
clc
pop
xchg
daa
imul
dec
adc
push
stos
inc
js
inc
xor
jo
mov
sbb
cmpb
xchg
daa
test
sbb
ret
sub
push
mov
test
call
or
adcl
lret
js
and
pop
rorl
cmpsl
fcoms
pop
cli
call
jp
cmc
jno
outsb
xchg
cmp
dec
push
nop
xchg
adc
pop
mov
mov
mov
mov
test
cmp
adc
daa
xchg
mov
and
adc
or
shlb
orl
cwtl
sub
mov
mov
xchg
pop
arpl
and
jl
push
stos
insb
insb
test
popf
mov
mov
xor
out
dec
adc
nop
mov
xor
call
jg
andb
aam
call
add
sbb
and
mov
adc
dec
cli
into
rclb
mov
sbb
mov
enter
mov
lea
pop
push
xchg
cltd
inc
sysret
and
stos
lea
jmp
pop
push
inc
push
lahf
mov
js
loopne
clc
pop
jns
and
js
shl
push
stos
movsl
jg
or
dec
jl
movd
lds
lds
call
xchg
mov
pop
scas
loope
cmp
cmpsl
or
cmp
mov
cmp
pop
rcr
pusha
cmp
push
jp
subb
or
sub
enter
in
mov
dec
stos
int3
ret
lock
mov
nop
stos
add
xor
into
clc
sub
sbb
test
inc
aas
cmp
bound
lock
lods
and
mov
js
clc
les
add
stos
ret
imul
cltd
xchg
or
or
adc
aam
inc
mov
xchg
leave
or
popf
mov
call
iret
out
jle
or
adc
sub
sbb
test
sub
xchg
clc
addb
orb
sub
cltd
lock
jmp
inc
loope
fmull
cmovb
or
mov
push
pushf
popa
jae
je
dec
jb
and
adc
cmp
pop
pop
adc
adcl
ds
arpl
jo
les
cwtl
pusha
lret
push
xor
mov
lds
jae
sub
push
add
ret
add
es
sbb
add
bound
lds
sub
add
dec
in
fwait
push
dec
inc
addl
add
push
popf
jg
mov
pusha
mov
jno
dec
mov
movb
or
enter
enter
leave
adcb
push
or
jmp
sbb
cmp
or
mov
mov
sub
call
lock
arpl
call
xlat
mov
xorl
sbbl
xchg
mov
mov
dec
jecxz
test
jne
mov
sahf
jg
mov
call
shll
sarb
jne
aaa
or
clc
xor
ds
mov
mov
mov
lods
pop
dec
lahf
fxch
gs
sub
adc
mov
adc
shrl
lds
jno
pop
mov
insb
nop
xchg
mov
jg
mov
sbb
mov
cmp
push
sti
cmp
shrb
mov
sub
push
dec
and
mov
cmpb
stos
and
in
scas
mov
adc
cmp
pusha
enter
lock
in
add
and
test
mov
adc
jo
xor
mov
loope
nop
xor
loope
mov
and
dec
ljmp
test
inc
mov
pop
and
xor
mov
push
jns
mov
jl
or
xorb
sarl
rcl
out
stc
mov
inc
rorl
dec
adc
mov
xor
xchg
ret
lea
cmp
stc
xor
or
movups
ret
bound
stc
jnp
mov
mov
into
pop
imulb
addb
stos
test
mov
pusha
push
fisttpl
enter
loop
dec
mov
jle
or
ret
push
or
addb
cmp
push
fwait
inc
mov
in
mov
inc
test
fs
inc
lahf
rol
loope
cmc
sbb
xor
xchg
fisubs
jb
or
sub
push
orl
popf
dec
js
stc
ficoml
pop
cmp
dec
push
outsl
and
inc
hlt
imul
stc
jmp
dec
jno
ja
ljmp
pushl
stc
test
add
call
decb
test
add
shrb
pop
jge
or
fldl
adc
call
sbb
dec
lds
xor
cmp
push
or
pop
sbb
and
les
add
sbb
add
es
mov
mov
inc
and
test
add
push
add
cmp
and
ret
jle
push
inc
lds
xchg
idivl
jg
jl
jne
hlt
sbb
inc
inc
orb
arpl
xchg
je
jle
jb
jno
sub
pop
mov
inc
jno
lret
nop
adc
xlat
aaa
push
sub
sbb
xchg
icebp
dec
and
ret
test
mov
dec
xchg
mov
in
ret
adc
or
dec
push
orl
adc
daa
xchg
xchg
lods
add
in
mov
addr16
pop
inc
orl
or
adc
rclb
or
aaa
dec
test
sub
adc
test
lahf
adc
jb
in
adc
test
jnp
lret
cld
xorl
mov
push
subl
fmull
cwtl
pusha
call
popf
lods
jl
imul
push
jae
xchg
mov
xlat
jbe
jmp
test
clc
push
sub
xchg
popa
sub
lea
or
mov
pop
or
test
mov
xchg
adc
daa
sub
lret
xchg
pop
movsb
scas
mov
imul
pop
out
nop
test
lea
push
cmp
inc
lock
inc
jns
mov
xchg
in
jp
popf
mov
insb
mov
adc
xor
int3
fldenv
mov
inc
mov
mov
sub
pop
enter
or
sti
xchg
push
and
cmc
inc
imul
mov
xchg
fildll
cmpsl
jle
inc
sub
xchg
pop
stos
mov
jp
pop
lock
jge
stos
mov
add
fidivrl
fadd
jg
mov
sti
and
jns
int
adc
call
push
sbb
or
js
lret
dec
sar
in
fcoml
mov
inc
pop
les
sbb
mov
andl
mov
and
mov
orb
cltd
iret
das
adc
and
js
adc
and
test
call
shlb
sub
pop
jecxz
jae
call
mov
and
lret
cmp
loop
xchg
mov
mov
sbb
dec
inc
inc
dec
jecxz
cwtl
and
inc
lret
int
jg
js
push
and
and
mov
xorb
mov
push
ss
aaa
int3
fsubr
sbb
int3
push
in
in
mov
dec
sti
int3
inc
hlt
xchg
inc
dec
jne
sbb
mov
xchg
cmp
mov
sbb
and
mov
and
lret
cmp
loop
adc
jge
and
fdivrs
mov
mov
dec
or
imul
push
jo
mov
sub
pop
push
dec
daa
pop
push
test
dec
inc
pop
rep
call
xor
movsl
xorb
jo
lret
inc
inc
enter
adc
mov
sub
xchg
notb
mov
stc
dec
inc
and
mov
fistpll
jl
bound
or
icebp
push
pop
imul
or
jno
xor
cmpsl
jmp
incl
dec
insb
or
jo
mov
lods
push
ss
mov
lahf
pop
jmp
fs
cmp
nop
enter
std
adc
add
jo
scas
push
cmp
jmp
inc
or
adc
das
and
xchg
sub
lods
dec
mov
mov
xchg
movl
stc
jge
xchg
and
cld
sbb
pop
mov
mov
jg
or
rorb
mov
xlat
adcb
lock
cmpsb
mov
test
dec
test
adc
push
mov
test
repz
fs
adc
and
into
inc
fdivs
xor
push
repz
pminub
push
subb
subl
into
sub
sub
jl
or
mov
inc
test
fsubs
insl
mov
les
aad
mov
jmp
bswap
das
rclb
jmp
cmpsl
jns
add
or
pop
nop
dec
mov
sub
ss
jge
je
bound
sub
jl
sub
mov
inc
aad
in
xor
sub
jge
jecxz
cmp
jge
cmp
cmp
and
out
push
add
es
fcoml
call
push
pusha
pop
cmpb
xchg
and
xchg
iret
push
and
sbb
popf
fbstp
xchg
adc
rorb
dec
mov
movsl
mov
xchg
xor
and
or
xor
test
sbb
inc
add
and
test
add
and
jno
stos
pop
mov
inc
cmpb
xchg
mov
ret
andb
dec
insl
mov
push
and
inc
test
cmpsl
mov
das
jnp
andb
push
pushf
repz
pushf
subb
daa
or
mov
jg
jns
push
insb
pop
rcrb
push
push
push
lea
int
popf
push
ja
mov
loop
shll
cmpsl
jo
cmpsl
ljmp
add
aaa
rorb
mov
mov
js
mov
mov
push
dec
call
outsl
add
adc
sub
push
leave
or
jge
mov
jae
rolb
pushf
adc
jbe
inc
or
repnz
ss
jns
testl
jbe
mov
jnp
jbe
vmwrite
xor
bound
imul
xchg
and
les
repz
adc
fidivrl
mov
out
inc
pop
adc
cmp
insb
outsl
mov
mov
add
iret
repz
bswap
dec
gs
mov
jbe
push
popa
inc
dec
outsb
outsl
insb
das
cmp
dec
or
jo
sub
std
fsts
fdivrs
sub
dec
jmp
cwtl
shl
rcll
xor
stos
push
scas
leave
mov
shll
or
inc
jmp
adc
xor
popa
push
xor
hlt
push
and
mov
sbb
cmp
jne
das
xor
call
dec
and
cmpsb
jb
out
mov
dec
lea
xor
jmp
and
jge
daa
dec
call
xchg
cld
stc
hlt
xchg
insb
ljmp
icebp
mov
fst
push
jp
or
jecxz
push
xchg
mov
in
ds
ss
aam
cld
cmpl
mov
xchg
and
sub
jl
popa
hlt
push
call
bound
adc
mov
ret
push
jno
pop
and
hlt
xor
sbb
push
jge
fwait
in
lret
mov
sub
shrl
cltd
movsl
and
sub
aam
dec
in
xor
dec
insb
movsl
mov
movsb
hlt
cmpsl
in
fists
ja
adcl
adc
jbe
sete
lret
cmp
xchg
insb
jp
in
sbb
mov
mov
bound
and
aad
imul
cmp
fiaddl
add
mov
inc
sbb
jns
add
pusha
mov
sub
ret
adc
push
jb
mov
pop
mov
adcb
dec
lock
adc
imul
and
pop
pop
in
and
dec
adc
xchg
add
add
add
cmpsb
inc
pop
clc
add
mov
adc
mov
shr
adc
adc
jns
inc
or
das
mov
push
push
mov
data16
imul
fwait
movl
out
je
out
out
or
push
mov
mov
in
jo
mov
push
bound
and
scas
or
push
mov
sarl
push
jmp
adc
das
xchg
inc
add
int
cmc
cmp
dec
mov
jbe
popf
xor
add
pop
mov
mov
leave
jns
repz
mov
pop
add
xchg
mov
ds
dec
add
cmpsl
out
cli
cmp
je
cmc
inc
add
xchg
aam
mov
je
stos
adc
js
mov
xor
cmp
adc
pop
fs
sbb
adc
xor
rcll
and
in
das
jne
adc
dec
loop
push
cmp
and
outsl
jmp
aad
and
test
jmp
out
mov
lahf
push
adc
sub
jae
adc
enter
rolb
mov
mov
pushl
dec
js
mov
int
cmpsb
push
bound
cmp
test
call
enter
icebp
push
lods
testl
out
aaa
mov
ficoms
mov
cmc
jnp
sahf
in
daa
jno
adc
outsl
or
shll
add
repz
and
in
cmpsb
ret
es
out
jnp
andl
in
les
mov
or
dec
rcrb
aas
cld
jle
fmull
jp
sub
lock
enter
dec
daa
inc
int3
pop
scas
movsl
cmp
xchg
dec
call
push
mov
and
dec
xchg
les
mov
adc
pop
add
xor
mov
mov
fbld
aas
inc
pop
addr16
aam
mov
arpl
push
mull
lahf
mov
in
mov
dec
test
push
iret
fs
mov
into
push
popf
pop
int3
ret
shll
lods
mov
outsb
imul
leave
sub
push
adc
pop
xchg
aas
xchg
ljmp
mov
push
push
je
push
push
int3
inc
mov
or
pop
sbb
and
mov
add
mov
or
ds
call
xor
rorl
cmp
jbe
xchg
pop
js
xor
inc
mov
adc
adc
std
bound
dec
stos
cmp
or
jo
rcl
inc
test
jg
mov
or
jo
sahf
aam
inc
dec
jecxz
icebp
insb
and
push
bound
fcoml
adc
imul
insb
push
adc
outsl
gs
pop
mov
lea
lds
mov
inc
xor
daa
mov
lea
arpl
nop
sub
xchg
mov
jl
or
fnstenv
jmp
repnz
add
add
notl
ret
add
inc
es
push
movsl
add
in
insl
or
sbb
pop
fnstenv
xchg
daa
enter
out
pop
jecxz
lret
stc
cmc
leave
daa
aad
push
push
movsb
cmp
dec
ret
dec
insl
jecxz
push
std
cltd
fadds
cmc
xchg
dec
inc
add
or
fwait
mov
xchg
pop
cmp
jns
sub
stc
inc
idivb
mov
icebp
das
leave
adc
jle
loopne
mov
incb
add
push
push
pop
lahf
insb
mov
sub
push
sub
push
sbb
jbe
xchg
add
jge
ljmp
jg
lds
mov
stos
movsb
cli
repz
cld
adc
pop
dec
pop
call
and
cld
or
pop
or
inc
je
mov
jbe
pop
mov
stos
inc
in
xchg
pop
arpl
mov
dec
loop
les
icebp
inc
inc
or
pop
in
sub
mov
jno
or
inc
call
jno
or
mov
mov
int3
call
adc
cmp
xchg
jge
pop
fistps
clc
mov
fcomi
sub
mov
js
outsb
mov
cwtl
pop
pushf
insl
xchg
cmp
cmp
sarl
gs
call
lret
push
fs
jmp
dec
stos
cwtl
sti
sbb
fistps
cld
or
xor
push
ret
dec
sub
or
rorl
or
sbb
xlat
inc
popa
out
imul
jb
je
loopne
push
fs
push
jae
aaa
loopne
jae
xchg
imul
jo
cmp
sbb
mov
push
fsub
cmpsl
leave
inc
pop
adc
or
in
jb
cmp
sbb
mov
and
xchg
pinsrw
cmp
adc
cwtl
cmp
push
and
inc
inc
loope
push
xchg
int3
push
xor
das
or
jg
jg
pop
fsubrp
clc
cmp
bound
insb
inc
or
push
or
dec
mov
or
cmpsb
or
dec
dec
jae
enter
add
insl
dec
pop
jae
pop
pop
push
cmpsb
mov
adc
sahf
aam
mov
mov
dec
inc
out
fbstp
clc
inc
sbb
xchg
inc
inc
push
mov
and
hlt
ret
adc
xor
and
and
clc
arpl
xor
aaa
dec
sub
test
cmp
sbb
pop
adc
sub
dec
and
arpl
xchg
add
push
push
push
jo
mov
ja
jnp
nop
lock
loopne
hlt
jecxz
push
sbbb
adc
push
and
add
mov
or
inc
les
mov
mov
or
or
adc
cltd
adc
adc
jae
test
adc
xchg
or
inc
pushf
mov
adc
adc
push
add
sbb
push
rorl
fsts
loope
jmp
out
pushl
je
jbe
js
dec
shll
sbb
inc
mov
or
xchg
or
or
fmuls
sub
xor
mov
and
or
push
and
cmp
pop
cmp
push
imul
mov
jmp
sbb
fidivl
outsl
ja
push
jo
push
dec
jl
or
mov
jb
fldenv
push
inc
push
adc
cld
adc
daa
mov
pushf
in
inc
mov
inc
inc
inc
mov
sti
ret
pushf
lea
cli
popl
pop
sti
xor
adc
push
push
mov
adc
inc
sub
sub
adc
jns
popf
push
mov
add
fs
test
xchg
mov
sub
adc
jmp
cli
sbb
divb
xor
js
stos
push
mov
in
sbb
mov
push
mov
mov
out
jecxz
loop
adc
add
and
cmp
movsb
nop
cmc
das
popa
arpl
cltd
and
nop
inc
fdiv
push
or
or
aad
sub
and
lret
ljmp
icebp
and
pop
cli
ds
and
inc
and
mov
inc
call
insb
adc
adc
fstp
test
mov
sub
nop
mov
je
or
les
out
lahf
test
enter
sub
or
mov
ss
dec
ret
xchg
test
dec
adc
sub
sbbb
add
clc
call
lahf
lds
shr
lret
imul
add
pop
nop
and
xor
and
insb
decl
daa
dec
adc
pop
push
das
dec
adc
xchg
mov
pushf
jns
imul
dec
sbb
xor
push
in
push
and
dec
lods
js
cmp
xchg
mov
and
mov
fidivl
or
jl
mov
mov
xor
test
in
xor
cmpsw
outsl
dec
pushf
and
popf
and
mov
in
inc
les
test
bound
frstor
mov
sti
sbb
or
or
fisubs
push
stc
ret
cmp
cld
iret
xor
and
sub
call
loopne
or
sbb
jl
stc
or
sarb
sub
push
mov
jb
clc
or
cmp
push
rorb
cmp
jmp
loope
mov
test
hlt
out
inc
pop
popf
xchg
mov
jecxz
mov
pop
aad
sub
cmpl
mov
sub
dec
dec
xchg
xchg
nop
dec
and
cmp
xlat
jnp
addr16
stc
cmp
rcrl
cmpsl
jns
and
mov
xor
movl
mov
andb
jnp
xchg
pop
jp
pop
rclb
inc
cmp
jne
out
cmpl
sub
lods
sub
sub
repnz
rcr
out
mov
mov
cmp
dec
inc
inc
sbb
pop
push
mov
mov
mov
mov
arpl
push
dec
stc
test
dec
push
jmp
sti
push
and
inc
inc
mov
sub
mov
in
mov
adc
mov
add
or
ja
dec
dec
mov
push
cmp
xor
mov
daa
mov
jae
sub
cmc
fimull
push
sub
in
sub
call
int
push
call
xlat
icebp
sbb
xchg
sbbl
inc
adcb
pop
xchg
test
cltd
idiv
mov
sbb
mov
push
jg
cmp
push
test
cmp
je
orl
cmpsb
enter
ret
negl
adc
mov
jg
scas
sub
lret
mov
jae
leave
lcall
adc
loopne
sysexit
test
nop
xchg
push
or
movntps
push
mov
sub
sub
adc
pop
pop
cld
test
xchg
xlat
bound
add
inc
or
pushf
adc
inc
inc
repz
xlat
jl
movl
push
jle
mov
lret
jecxz
and
std
outsb
test
ret
cmp
hlt
and
dec
aas
cmp
mov
cmp
pop
and
pop
lret
cltd
enter
lret
inc
imul
sbb
xor
out
mov
jne
lods
cld
mov
or
lock
pop
orl
sub
push
push
call
cltd
mov
cmpsl
adc
pop
xchg
enter
insb
add
add
adc
test
lret
cmc
add
jmp
mov
mov
sub
xchg
push
cmp
inc
or
jne
lea
cmp
cmpsb
lds
movsl
adc
int3
add
jbe
jle
sti
mov
cmpl
js
idivl
pop
aaa
sub
ljmp
push
jo
cld
movsb
mov
mov
push
jnp
test
inc
scas
or
pop
push
and
hlt
jb,pn
test
rclb
fs
fdivr
xchg
pop
jg
add
dec
push
xor
push
inc
pop
loop
jno
call
out
stos
inc
loopne
inc
sub
push
adc
mov
loope
cli
sbb
repz
xchg
adc
or
cld
xorb
cli
arpl
inc
push
sbb
mov
xchg
pop
repnz
push
nop
js
jno
adc
test
test
fdivs
xchg
fsubrs
std
in
test
stc
lcall
es
cmp
xor
sub
sub
test
andb
xor
mov
push
lods
lret
dec
pop
nop
push
push
test
jp
xor
lds
lods
xor
xchg
hlt
inc
daa
pushl
das
mov
jg
addl
and
adc
jecxz
sbb
add
push
aad
daa
jg
mov
aam
stos
dec
pop
mov
pop
and
aam
mov
ja
cmp
jge
iret
jle
lret
loope
repz
sub
inc
stc
xchg
add
jmp
andl
and
flds
fiadds
xchg
jmp
popa
push
cmpb
sbb
xchg
xlat
adc
out
jge
xchg
lcall
lods
cmpsb
sub
je
cli
push
or
ljmp
cwtl
sbb
or
add
xor
pop
add
call
mov
hlt
int3
inc
jp
adc
adc
sbb
iret
jmp
inc
mov
and
sbb
popf
inc
ss
inc
push
enter
push
mov
xor
jne
jmp
xor
lods
lods
sahf
out
dec
mov
call
lods
xchg
pop
test
in
dec
jnp
jg
pop
xchg
decl
dec
and
das
jle
add
sbb
repnz
push
mov
inc
inc
pop
adc
iret
mov
scas
adc
xor
add
adc
mov
push
push
aas
and
xchg
or
nop
xor
and
push
adc
push
mov
or
out
dec
in
clc
movsb
dec
loopne
fcoml
and
mov
daa
pop
inc
in
push
push
ficomps
jle
movb
jmp
sbb
loop
sub
push
das
or
inc
fmuls
dec
shl
les
cli
call
inc
add
je
pushf
pop
jno
cmp
xchg
push
imul
or
fs
lock
pop
xchg
lret
dec
les
push
and
jne
and
adc
mov
adc
mov
hlt
push
or
cwtl
add
mov
pop
sbb
cmp
inc
addl
mov
sub
inc
inc
lcall
fcompl
add
rorb
sub
inc
jg
jno
push
jle
push
inc
faddl
insb
xchg
sti
dec
push
and
pushw
inc
inc
fcoms
push
int
loopne
scas
dec
xchg
adc
sbb
mov
cli
xor
out
sar
sahf
sbb
xchg
loopne
or
test
jg
adc
add
ljmp
xchg
es
mov
cmp
jmp
iret
aad
sahf
push
cmp
adc
dec
cltd
xchg
dec
mov
jl
mov
loopne
jge
pop
outsb
ror
loop
bound
sub
aas
mov
movsb
inc
aam
and
adc
sub
jb
and
repz
cmp
dec
and
rcrb
cltd
cwtl
sbb
or
or
es
test
add
in
adc
fcoml
mov
movsb
cmp
add
stos
or
or
lock
fldenv
aas
stc
popf
pop
and
adc
sbb
aam
pop
push
call
pop
and
imulb
fptan
add
pop
es
sub
mov
iret
or
mov
xor
jecxz
push
call
xor
or
adc
daa
or
cmp
push
xor
jg
jno
sub
mov
fwait
std
jle
movups
mov
and
mov
xchg
outsb
xchg
fmuls
das
mov
sub
cmp
xchg
inc
sarl
in
and
cmp
dec
jp
sub
and
loopne
inc
stc
mov
xchg
in
mov
in
xor
jo
popf
cmc
xchg
xchg
adc
inc
cmp
pop
jo
rorl
add
icebp
push
daa
test
add
inc
pop
pop
repnz
repz
movl
scas
leave
imul
mov
add
leave
push
sub
jb
xchg
push
dec
test
mov
lods
cmp
popa
jle
scas
sbbb
xorl
insb
adc
mov
inc
jp
outsb
jae
sbb
js
scas
in
int3
test
icebp
ret
fsubl
inc
inc
jne
or
jnp
jl
xchg
inc
fimull
jno
imul
sbb
and
cmp
nop
addb
sub
and
dec
jo
adc
dec
sub
sub
pop
or
jnp
push
or
xor
dec
out
and
fmull
mov
mov
push
add
inc
cmpsb
push
or
push
push
xor
inc
push
dec
stos
inc
sub
jns
jmp
jb
lret
test
lahf
push
jge
ret
rorb
or
iret
ds
aaa
push
loop
ja
pcmpgtd
aaa
push
push
imul
mov
sub
pop
sbb
pushl
mov
mov
xor
pop
cmpsb
xchg
adc
adc
inc
lret
xchg
roll
aas
push
in
sub
mov
or
call
movsl
xor
sub
push
cld
test
and
cld
mov
pop
inc
inc
stos
gs
add
lea
jl
pop
je
adc
and
js
inc
mov
dec
stc
fsubrs
in
aad
mov
cld
scas
xor
dec
add
jmp
inc
mov
fimuls
lock
fnstsw
out
std
inc
push
out
js
jae
or
add
lock
repz
mov
and
ljmp
les
ljmp
mov
sbb
popf
jo
xchg
cltd
imul
leave
push
shrb
cltd
aad
int
gs
pop
shll
jne
sub
jo
jne
movb
sbb
adc
pop
je
inc
sbb
sbb
into
inc
mov
cwtl
jno
je
into
push
pushf
mov
add
dec
scas
mov
push
and
in
clc
jg
mov
xor
xchg
add
xor
mov
xor
jl
and
cmp
sub
sub
sbb
xchg
mov
and
jo
test
or
sbb
les
dec
or
out
sar
addr16
cmp
fsubrl
xchg
lahf
std
or
mov
test
and
jg
inc
and
push
es
sub
sbb
sub
inc
scas
in
jmp
fidivrl
fprem
iret
out
mov
adc
pop
daa
and
loopne
mov
cmp
and
adcb
in
les
mov
mov
test
jae
mov
mov
and
cmp
or
cmp
or
jnp
and
test
testb
mov
jg
jle
lret
mov
lock
or
xor
adc
repnz
sub
sarb
mov
daa
cmp
cltd
pop
das
jns
jb
sub
mov
lcall
add
jp
lcall
mov
dec
call
mov
mov
or
lret
orl
in
push
ret
xor
icebp
push
arpl
cmp
cli
cwtl
cmp
nop
test
ss
pop
cmp
mov
and
or
and
adc
add
push
bound
pmullw
aad
cmp
or
test
clc
dec
or
and
aaa
jmp
jo
sahf
add
mov
iret
dec
in
push
cs
adc
add
repz
popf
push
cmp
add
adcl
jb
mov
je
pop
pusha
inc
cltd
mov
cmp
insb
adc
andb
cmp
mov
pop
test
xchg
add
addr16
fmul
jl
mov
push
popf
sti
fsubs
add
out
cmp
imul
pop
int3
clc
insl
jnp
mov
subl
sub
jnp
lahf
pop
xor
lock
cltd
ds
mov
out
mov
jmp
fstpt
adc
aas
mov
inc
rclb
sbb
lea
xlat
jmp
orb
fs
mov
xor
sub
pop
add
ficomps
cmp
shl
xchg
dec
inc
mov
and
xchg
sub
lret
movsb
cmp
push
sbb
cli
ljmp
sti
enter
xor
ret
lea
mov
call
jo
ficompl
and
sbb
and
cmc
addr16
pop
bound
je
xchg
push
mov
ljmp
idivl
mov
xchg
mov
sbb
and
jae
test
pop
lods
xchg
sub
cmpsb
insb
inc
sub
popf
mov
sti
dec
stos
mov
inc
nop
cli
inc
pop
cmp
mov
mov
sbb
and
jl
jg
jb
add
cmp
xchg
je
addl
sub
nop
or
xor
flds
repnz
shll
mov
adc
mov
add
lret
jne
mov
inc
or
les
pop
loopne
les
fmull
mov
daa
cmp
mov
jo
mov
lods
pop
cmp
push
dec
adc
mov
cmp
inc
or
enter
call
inc
inc
nop
ret
daa
addr16
or
enter
mov
call
xchg
fbstp
arpl
call
rclb
xchg
pusha
mov
pop
sahf
pop
push
pushf
pop
push
mov
scas
mov
add
scas
or
bound
push
sbb
cld
add
call
or
push
xchg
arpl
aaa
in
repnz
push
jo
push
mov
adc
test
repnz
xchg
pop
loopne
mov
js
adc
ret
ret
insb
adc
add
dec
mov
insl
mov
sbb
and
sbb
adc
rorb
fldl
adc
or
push
ficomps
test
or
sub
pop
or
xlat
adc
pop
fs
pop
ds
jmp
nop
dec
mov
mov
or
movsb
add
arpl
das
fildll
inc
push
jmp
adc
pop
adc
jbe
mov
sbb
cmp
add
insl
popa
addr16
jmp
insl
in
push
cmp
jb
and
insb
sbb
cltd
cmp
movsl
xorps
fnstenv
andps
cmp
xor
pop
shrb
ret
push
aam
bound
add
adc
sub
jge
or
mov
sbb
adc
test
orb
mov
lods
mov
adc
daa
enter
cmp
fsub
or
or
mov
adc
mov
adc
sbb
incl
push
mov
push
je
dec
pop
xor
or
jb
dec
imul
dec
and
dec
inc
sbb
and
add
dec
jmp
dec
cmpb
xchg
mov
fildll
sub
xchg
ja
push
dec
adc
jl
movsb
rolb
add
nop
movsb
dec
inc
push
inc
data16
fimuls
fs
cld
or
or
push
push
or
sub
xor
jge
sbb
and
div
mov
int3
or
repz
movsb
out
jo
data16
cmp
sub
hlt
inc
inc
xchg
inc
inc
adc
dec
cld
pop
xor
lods
adc
shrb
pop
mov
outsb
sbb
cmp
mov
cld
sbb
shlb
shrb
adc
pusha
inc
insl
call
les
or
jl
dec
imul
aaa
or
add
mov
jne
pop
out
jb
cmp
mov
mov
inc
in
sbb
pushf
or
adc
cld
inc
inc
fsubr
js
xchg
push
sbb
add
dec
mov
movsl
sbb
inc
test
push
adc
xchg
push
xor
and
jne
dec
dec
add
sub
je
mov
inc
ret
add
push
mov
loopne
inc
cmpsl
inc
xchg
add
mov
dec
dec
insl
outsl
mov
mov
inc
jl
inc
insb
mov
mov
pop
mov
movsb
movsb
stos
pop
sbb
jecxz
push
mov
dec
loop
xor
inc
mov
or
and
push
imulb
cwtl
mov
lods
cmp
or
or
xor
fs
pop
xchg
push
push
mov
jne
inc
stos
fs
jns
sub
enter
cmp
shrl
cli
cmp
push
sbb
add
dec
outsb
mov
sbb
mov
lcall
sarl
rol
mov
sub
adc
stos
cmp
or
inc
add
fs
xor
and
lods
adc
or
sub
xor
sub
sbb
nopl
mov
mov
enter
mov
pop
mov
sar
jae
xchg
test
adc
inc
loopne
pop
or
sbb
and
enter
sbb
adc
jmp
adc
dec
sti
mov
jns
pop
stos
push
sbb
popa
mov
pop
inc
dec
sti
dec
and
jae
sbb
mov
bound
push
cmp
dec
movsl
lret
loop
mov
or
nop
cwtl
adc
adc
xlat
xchg
mov
lret
inc
or
mov
clc
pop
inc
repnz
insb
adc
mov
push
mov
cwtl
lret
imul
int
loope
pop
gs
xchg
adc
and
les
enter
sbb
jo
push
shrl
xor
call
adc
popf
push
cmp
and
dec
out
mov
mov
mov
fdivl
and
inc
sbb
sub
and
dec
insb
idivb
sbb
rolb
inc
sub
adc
push
push
xchg
aaa
sbb
in
mov
xchg
sub
dec
jo
enter
jecxz
movsb
mov
sub
test
cld
and
adc
mov
push
or
dec
xor
jge
add
cmp
shll
sub
sub
aaa
jno
adc
fs
mov
sbb
and
icebp
pop
data16
pop
pop
xchg
inc
add
in
fimull
jns
sub
clc
or
lret
sub
jo
cmpb
push
call
xor
adc
xchg
pop
out
ja
enter
mov
adc
inc
and
xchg
idivl
or
and
push
stc
inc
inc
mov
cwtl
xchg
call
or
push
inc
pop
mov
stos
and
outsl
fsubrl
shll
mov
xchg
mov
lds
push
adc
sub
lock
mov
test
adc
lds
nop
ss
pop
mov
jge
sbb
mov
jne
je
call
inc
repz
mov
and
call
mov
jl
and
jg
cmp
repz
adc
dec
inc
pop
cmp
jne
mov
or
add
push
xor
dec
jge
sbbb
adc
je
and
repz
hlt
rolb
pushf
mov
jno
les
cmp
je
mov
push
subl
or
mov
daa
lock
push
incb
popa
jl
pusha
ret
mov
push
cs
or
inc
daa
or
push
dec
stos
bound
and
or
adc
les
movsb
mov
pusha
call
mov
fsubr
inc
enter
inc
or
out
inc
rcrl
mov
scas
into
push
inc
mov
in
inc
cmp
je
scas
addr16
jle
mov
push
cs
dec
pop
and
xchg
mov
mov
pushf
xor
and
inc
pop
cmp
lahf
icebp
in
xchg
jmp
mov
loopne
out
sub
adc
push
push
adc
mov
pop
out
rcr
pop
jl
sub
sub
jecxz
call
dec
pop
decb
lock
mov
dec
ror
daa
pop
xor
cmp
mov
add
jge
cltd
leave
ficomps
cmc
inc
jnp
cld
es
nop
inc
dec
jmp
mov
add
xchg
sti
orl
mov
pop
repnz
loope
out
loope
sbb
dec
mov
mov
and
xchg
nop
mov
push
sbb
push
sarl
orb
mov
adc
imul
jne
push
dec
jo
xor
adcb
pop
dec
imul
mov
mov
inc
xlat
fidivrl
and
jmp
cmp
movsb
ret
inc
mov
ret
mov
jne
ret
and
and
loop
xor
sbb
test
scas
and
ja
loopne
add
mov
push
mov
int3
and
inc
mov
mov
lcall
fdivrl
mov
cmp
test
cmpsb
dec
mov
push
mov
mul
xor
sti
les
sub
test
pop
cmpsb
fwait
cld
push
pop
jmp
sub
jg
in
push
push
inc
mov
pop
in
push
add
pop
lret
inc
loope
int3
outsl
test
dec
dec
adc
mulb
fld
daa
scas
jl
psubsb
adc
push
sub
adc
jl
jmp
dec
and
pop
push
xchg
inc
or
fcoml
mov
shr
sbb
mov
mov
out
adc
lock
inc
cs
dec
lods
push
cmp
jmp
add
sub
bound
out
and
mov
cmc
pop
sbb
mov
leave
pop
or
popa
dec
jmp
dec
mov
sbb
dec
in
xchg
das
jne
loop
ja
sub
push
push
ja
dec
and
out
pop
inc
cmpsb
enter
lock
loope
movsl
lret
nop
mov
test
push
scas
xchg
or
or
mov
movsl
pop
inc
aam
int3
mov
add
call
inc
movsl
leave
adc
inc
adc
push
inc
mov
sub
shrb
xor
push
push
adc
mov
sub
dec
loop
adc
aam
cltd
cmp
hlt
or
sbb
sbb
xchg
mov
pop
dec
fwait
ljmp
aam
inc
push
lods
lds
and
xchg
pop
push
pusha
push
stos
and
nop
push
push
xchg
mov
adc
and
inc
data16
stos
jl
call
lea
leave
mov
iret
fisubrs
xchg
popf
lret
pop
mov
mov
sbb
ljmp
int
xor
xor
pop
mov
into
jbe
fdivrl
dec
sti
shlb
jp
push
call
dec
add
push
into
ljmp
shl
push
push
pop
add
xor
mov
hlt
movsb
cmp
sub
sahf
adc
xor
out
in
mov
adc
push
divb
pop
cld
sbb
fdivrs
sub
xchg
stos
ficoml
mov
dec
and
lret
xchg
xor
inc
and
cwtl
jbe
into
insl
jae
pushl
push
jg
add
icebp
outsb
xchg
dec
div
inc
dec
aad
orl
and
and
sub
inc
mov
cmp
jl
loope
and
inc
inc
and
jb
inc
sbb
or
cmp
xor
insl
into
xchg
push
bound
mov
clc
jns
or
les
test
and
xchg
andb
mov
iret
shld
je
sub
sbb
jp
aaa
imul
bound
or
jae
push
push
ret
cmp
inc
int
and
xchg
mov
jge
push
cld
insb
addl
xlat
insb
call
push
xchg
addr16
mov
and
mov
inc
lock
sar
jecxz
xlat
mov
test
and
sbb
out
mov
push
out
pop
std
mov
loope
stos
loop
mov
adc
int3
scas
mov
sub
or
push
test
or
mov
and
push
and
ficoms
push
mov
inc
not
outsb
imul
or
mov
scas
sub
test
addl
xlat
cmc
jmp
add
cmp
or
sbb
movsl
adc
pop
push
push
les
lea
lds
call
inc
or
fimull
outsb
jae
lea
push
jnp
outsl
or
inc
push
inc
inc
adc
loop
cmp
popa
xor
add
sub
jbe
aaa
xchg
ficompl
jbe
rclb
add
push
jmp
push
push
push
cmp
in
xchg
dec
and
mov
jns,pt
dec
sub
pop
movsl
lods
mov
and
xchg
mov
push
cld
cltd
cmp
push
ret
inc
xor
mov
mov
jp
pop
fcoms
aad
xor
loop
and
fisttps
and
adc
cmpsl
inc
repnz
cmpsb
enter
sbb
jb
rorb
js
je
lock
jl
mov
cmp
xchg
or
inc
mov
inc
test
in
inc
test
inc
shl
mov
mov
fimuls
movsl
clc
lret
pop
sub
push
stc
or
and
movsb
or
scas
or
and
ljmp
fadds
inc
sti
es
sub
fdivrp
or
sbb
and
push
sbb
or
and
pop
sub
inc
inc
bound
sbb
and
or
or
push
cld
dec
jl
or
pop
sti
jle
cmovp
mov
jo
pushf
pusha
xchg
cmp
add
add
dec
mov
loop
or
inc
insb
and
int3
push
jns
or
mov
hlt
sbb
mov
jo
xchg
cmp
adc
mov
inc
in
andb
dec
in
mov
inc
push
mov
int3
mov
mov
dec
dec
dec
es
outsb
sub
push
jge
sub
adc
cs
inc
xchg
mov
aaa
mov
push
xchg
jg
adc
mov
cld
inc
pop
inc
sbb
pop
or
sbb
mov
leave
push
lahf
lock
and
and
out
mov
loop
sbb
and
add
sub
fs
mov
lea
mov
sub
cltd
sbb
or
mov
and
into
leave
iret
insb
bound
adc
inc
ficoms
lea
push
loopne
cmp
enter
jb
sbb
inc
popf
les
mov
xchg
inc
or
in
mov
or
xchg
adc
js
cwtl
std
xchg
sbb
xor
or
xchg
orl
pop
pusha
adc
adc
ds
or
sbb
pop
outsl
loope
or
scas
iret
jp
or
push
and
pop
loopnew
xchg
pop
lahf
adc
cld
test
test
adc
loop
adc
test
xchg
fists
and
and
imul
das
leave
mov
xchg
inc
mov
mov
inc
and
and
jg
sbb
nop
les
sbb
cld
enter
ljmp
stc
sbb
mov
into
and
je
sbb
sbb
cmp
ret
inc
add
sbb
lods
es
dec
jo
test
sbb
or
and
pushl
cmpsl
cmp
cs
inc
ror
inc
fwait
mov
ja
cli
dec
push
inc
mov
subl
mov
inc
and
rcr
es
mov
push
or
jge
fdivs
jle
imul
sub
and
push
sub
imul
xchg
sub
and
sub
fs
and
sub
or
test
lahf
fwait
adc
and
jno
or
or
loop
xor
or
pop
mov
lret
xor
xor
nop
push
scas
pusha
cs
repz
and
adc
rcll
ss
mov
pop
nop
cmp
les
mov
cmp
cmp
cmp
jl
jns
data16
je
sahf
hlt
fcomps
adc
cmpsl
inc
in
insb
and
inc
adc
std
test
or
loopne
jb
loop
xchg
jge
push
jl
push
inc
xchg
test
push
jg
adc
pop
jmp
adc
mov
push
or
jae
push
sub
adc
or
shll
mov
test
jle
inc
mov
into
xchg
call
jae
dec
pushf
adc
insl
jae
push
push
call
enter
icebp
pop
push
addr16
dec
out
test
sbb
lret
push
imul
xor
repnz
aam
inc
stos
cmp
test
inc
mov
pop
nop
inc
ja
adc
jnp
nop
cmpb
and
mov
inc
add
push
std
xchg
jecxz
movsl
dec
xor
push
adc
mov
inc
dec
adcb
test
sbb
xor
push
dec
inc
push
inc
orl
out
push
popa
gs
ss
add
fs
mov
push
fs
icebp
jns
and
lret
adc
aaa
inc
and
popa
jo
dec
push
mov
sbb
cmp
call
mov
movsb
mov
cmpsb
cmp
add
xor
xchg
sti
imul
fisubrs
mov
hlt
push
jbe
dec
dec
lahf
ds
dec
setge
add
or
push
xchg
mov
xor
test
std
gs
pop
push
add
or
push
sub
jae
sub
inc
xor
arpl
adc
inc
jne
test
sbb
cmp
push
push
shl
loop
adc
ffree
add
xchg
jae
movsb
cmp
pop
cld
loop
insl
jp
test
jae
mov
mov
sub
cmpsb
rorl
pop
mov
pop
cmp
sbb
cmp
adc
cld
mov
xor
push
mov
insb
mov
insb
ret
hlt
shl
les
jo
cs
jle
rolb
cmpsl
push
in
push
sbb
mov
mov
inc
adc
pusha
or
aam
test
or
xlat
add
fs
faddl
add
loopne
push
flds
in
int3
enter
add
and
das
xorl
dec
push
leave
in
jmp
into
mov
aas
fdivrl
stos
aas
stos
aas
aad
ret
sbb
nop
pop
xchg
or
iret
adc
adc
xor
adc
call
roll
adc
inc
lock
jno
or
inc
movsb
xor
sbb
and
push
movsb
in
push
pop
adc
mov
mov
test
insb
sbb
orb
inc
sub
or
imul
sub
dec
arpl
or
jo
popf
pop
xchg
xchg
or
or
cmc
sahf
mov
mov
std
fs
push
xchg
icebp
push
or
mov
push
nop
adc
inc
xor
inc
ss
adc
mov
repnz
add
pop
daa
dec
enter
test
sarb
mov
loop
je
dec
xlat
push
or
sbb
sbb
sbb
dec
iret
and
sbb
jne
cld
push
jmp
push
and
loopne
repnz
bound
test
mov
outsl
lods
xchg
and
sub
xor
and
lds
scas
cmp
sub
push
je
lods
and
and
pop
lea
mov
adc
add
pop
sti
adc
jecxz
pop
jle
cmp
aas
push
daa
and
add
es
lcall
call
pop
adc
cmp
leave
cmp
sub
push
gs
add
inc
pop
or
sbb
jbe
dec
std
xchg
add
dec
mov
in
adc
jl
cs
or
addr16
das
stc
add
pop
and
adc
and
dec
lahf
cltd
pusha
pop
adc
inc
xchg
and
inc
hlt
scas
mov
xor
sub
pop
sub
mov
push
dec
xor
mov
daa
xor
push
mov
ss
xor
imul
in
sub
mov
dec
or
mov
fs
enter
inc
xchg
cmc
mov
adc
dec
xchg
xor
mov
enter
insb
fs
int3
mov
xchg
fistpll
mov
jno
jl
sbbb
leave
jnp
imul
movsb
nop
cmp
mov
bnd
scas
mov
ss
test
aas
adc
fucomip
movsl
lcall
inc
cld
push
in
add
inc
test
aaa
sub
pop
dec
xchg
jecxz
adcl
push
js
fcom
repnz
mov
inc
sub
inc
mov
and
loopne
movsb
jge
ds
dec
or
pop
mov
cmp
inc
test
jle,pn
jle
inc
call
cmp
add
sarb
dec
inc
or
xor
sub
mov
pop
xchg
cmp
or
and
cmpsl
out
in
sub
dec
push
nop
dec
stos
and
scas
xchg
adc
je
rcrb
add
or
inc
sub
addr16
add
sub
or
push
push
lock
add
and
out
add
xor
sub
sub
add
and
push
repz
cmp
add
pusha
mov
pop
mov
fs
insb
xor
mov
loop
divl
dec
mulb
add
mov
clc
cmp
or
or
push
lret
pop
je
cwtl
int3
orl
mull
ret
fwait
das
decb
push
add
push
fnstcw
dec
add
clc
and
je
je
scas
mov
xchg
xor
fistps
and
test
dec
or
pushf
pop
xor
and
nop
xchg
or
insb
jne
jle
and
adc
xchg
push
or
mov
jmp
add
inc
or
arpl
or
xchg
stos
loop
xchg
add
in
dec
mov
int
lds
jmp
pop
sahf
push
dec
lock
xor
call
dec
and
js
push
clc
in
push
pop
in
push
aaa
sub
dec
iret
les
push
clc
ja
aam
sbb
inc
xchg
or
pop
lea
push
test
dec
out
jns
or
xor
dec
inc
or
xchg
js
mov
jmp
pop
push
inc
hlt
ljmp
dec
and
or
sub
int3
movsb
repnz
mov
sub
call
and
or
sub
fs
xchg
cmovne
outsb
sub
adc
rclb
adc
cwtl
les
cmp
or
fsts
adc
call
xchg
jl
adc
mov
dec
adc
dec
lods
cmp
dec
xlat
insb
test
mov
sbb
movsb
mov
mov
inc
cmp
inc
js
movsl
mov
adc
shrl
pushf
pushf
in
insb
adc
mov
mov
in
inc
test
jo
pop
adc
dec
mov
xor
adc
scas
xchg
push
jecxz
push
pop
xor
test
add
in
push
or
xchg
adc
dec
pop
aam
mov
push
lcall
or
pop
dec
jne
shll
movsb
hlt
and
add
out
fwait
lods
std
movsb
cmp
dec
dec
js
or
or
add
dec
stc
or
or
and
cmp
push
lret
inc
jo
test
push
sub
daa
dec
movsb
ja
sbb
xor
xor
jbe
and
insl
popa
insb
sbb
daa
mov
or
push
push
gs
jb
dec
mov
mov
arpl
cmp
in
and
sub
test
fstpl
push
push
adc
test
pop
inc
loopne
inc
adc
cmc
add
push
enter
mov
mov
pop
xor
nop
cmp
jnp
xor
xchg
mov
mov
test
dec
mov
inc
pop
xor
cs
aam
inc
das
adc
push
push
inc
or
mov
inc
push
aam
dec
mov
dec
mov
je
inc
adc
push
loop
push
js
push
xchg
and
or
nop
mov
inc
adc
cli
xchg
inc
inc
add
adc
lds
push
push
pop
hlt
adc
jne
in
nop
std
or
xor
xor
in
nop
clc
insb
dec
push
test
dec
orl
movsb
adc
adc
insl
mov
into
enter
lock
cmp
idivb
lret
rclb
add
cmp
fisubrl
data16
dec
mov
nop
push
jecxz
mov
sub
xchg
loop
lods
test
push
and
mov
and
push
dec
bound
inc
and
pop
movsl
jno
inc
jp
mov
movsb
and
sub
add
cmpsl
pop
imul
testb
dec
flds
xchg
in
nop
push
lods
xchg
and
fisubrl
xchg
cwtl
pop
pop
test
push
push
and
push
sbb
sbb
test
xchg
adc
or
jo
add
or
or
and
or
or
daa
jae
lods
repz
les
dec
or
outsl
fidivrl
arpl
inc
imul
push
sub
repnz
add
pop
les
jo
les
jp
or
pop
inc
adc
nop
test
push
sbb
lcall
pop
cwtl
and
insb
call
mov
sub
push
shlb
insb
jl
cmp
and
inc
outsl
dec
aam
pop
xchg
add
xchg
pop
mov
jne
jno
mov
adc
pop
xor
sti
ret
pop
fistl
xor
lock
cld
jb
mov
aam
push
cmp
dec
cmpsb
mov
cmp
scas
mov
mov
sbb
icebp
sbb
or
mov
mov
test
or
sbb
aas
adcl
lock
adcb
mov
inc
hlt
fs
cmp
fmul
adc
and
dec
les
xchg
aaa
add
adc
inc
das
inc
push
ja
mov
adc
sub
out
ljmp
mov
in
xchg
int3
out
xchg
imul
fldcw
xor
rorb
push
nop
xchg
xchg
int3
test
xor
xor
sub
inc
sarl
adc
sbb
in
lods
fmul
lea
mov
push
mov
and
aam
int3
or
popa
push
scas
pop
cli
inc
sbb
adc
aam
sub
adc
loope
pop
push
adc
pop
loop
jne
jecxz
xchg
dec
subb
adc
adc
imul
pop
xlat
mov
inc
jl
jge
iret
pop
pop
pop
nop
shlb
jns
out
in
sub
and
call
or
adc
inc
adc
and
adc
test
dec
fsts
inc
xchg
inc
push
bound
fs
aas
cmp
mov
cmp
mov
sub
cmp
push
mov
jns
sub
mov
sbb
gs
sbb
xor
scas
xor
scas
aas
bound
inc
push
mov
or
pop
and
dec
fs
lret
cli
out
clc
push
movsb
xor
jbe
push
xchg
and
xchg
inc
and
mov
cmp
and
adc
adc
test
mov
dec
sbb
js
enter
es
leave
fdivrl
outsl
jns
adc
daa
mov
into
mov
or
xor
push
imul
adc
adc
or
sarl
jl
push
sub
jne
xorb
loope
inc
jmp
sub
and
inc
es
dec
lock
cmpsb
insb
xchg
mov
jno
ret
add
adc
xor
cs
dec
je
js
xchg
in
mov
mov
push
mov
in
cmp
stos
in
mov
and
outsl
jp
ss
inc
pop
push
mov
adc
in
xchg
and
cmp
dec
aaa
cmpsb
inc
sub
sub
iret
enterw
adc
inc
xchg
sahf
adc
cmp
xchg
jmp
sub
roll
and
dec
fnstcw
mov
cmp
les
adc
mov
jl
push
push
lahf
inc
nop
aas
mov
push
add
cld
pop
mov
les
cmp
and
test
xchg
out
imul
sbb
mov
or
push
pop
in
jbe
inc
mov
scas
cmp
and
inc
inc
les
mov
and
xchg
mov
movaps
fs
pop
mov
adc
dec
loop
fcoml
push
mov
inc
mov
or
in
dec
xchg
dec
pop
mov
dec
mov
sub
leave
leave
dec
movsl
mov
push
push
push
sbb
cs
mov
inc
jle
mov
dec
loop
pop
push
popf
and
cmp
in
mov
xchg
call
or
push
jbe
jbe
push
mov
leave
in
es
xor
or
inc
test
mov
jmp
sar
data16
inc
inc
sarb
dec
push
mov
jns
or
pop
adc
test
stc
pop
mov
push
mov
adc
jno
leave
jbe
jle
pop
call
in
pop
pop
dec
stc
pop
and
dec
cltd
jo
loopne
mov
dec
jae
mov
stc
popa
or
bound
inc
arpl
enter
gs
pop
inc
mov
push
leave
cmp
mov
imul
fisubrs
insb
out
xor
out
test
sti
into
mov
adc
int3
xor
mov
mov
mov
pusha
mov
inc
dec
sub
popf
sub
mov
dec
inc
sbb
and
fcoms
xchg
adc
or
sub
inc
test
push
or
pop
inc
daa
in
rolb
mov
dec
add
pop
mov
or
in
pushl
dec
andl
mov
lret
adc
cmpsl
aad
bound
xchg
dec
lods
push
xor
out
adc
movsb
je
dec
movsb
dec
push
jmp
jl
sub
cmp
dec
mov
int3
shrl
aas
adc
sub
adc
insl
jmp
cmpsl
outsl
js
adc
sbb
mov
loopne
dec
arpl
or
xor
and
fsubs
sub
pop
or
mov
sbb
repz
fcompl
and
divb
enter
xor
in
sbb
xchg
adc
or
test
mov
out
sbb
adc
fsts
adc
fdiv
xor
mov
and
inc
push
js
dec
int3
ret
jae
nop
fsubrs
pop
sbb
add
inc
repnz
sbb
or
and
sbb
cwtl
jo
orl
mov
mov
int
bound
sbbb
inc
icebp
mov
ja
xchg
mov
dec
icebp
mov
xor
inc
cwtl
and
sbb
or
in
imul
dec
dec
stos
clc
sbb
adc
xor
sub
aam
add
sub
mov
xchg
xor
test
dec
nop
sub
xor
add
dec
mov
fcoms
sub
sbb
scas
push
push
pop
inc
fwait
data16
jno
mov
xlat
cmp
xchg
adc
mov
cmc
lret
mov
popa
add
retw
fucomp
loope
jp
shll
cld
call
scas
rcrl
mov
pop
stos
or
pop
cmc
adc
pop
lret
inc
pop
in
les
mov
or
stc
add
into
clc
push
pop
mov
std
sbb
jae
inc
push
cmpl
loope
xchg
jecxz
cmp
mov
aad
jo
and
loope
fnstcw
arpl
adc
in
sahf
xor
push
mov
push
sti
notb
hlt
push
jne
fldcw
cs
ret
dec
and
in
push
call
lahf
push
in
test
mov
sub
dec
or
jmp
lret
and
adc
cmpsl
call
shll
out
pop
mov
jb
je
aas
jmp
cmpsl
or
sbb
scas
push
cmp
push
dec
cli
push
les
add
stos
stc
out
bound
idivl
xlat
and
push
push
and
cwtl
or
jno
dec
je
loope
jne
adc
adc
daa
lods
push
adc
in
jb
mov
jmp
or
sbb
js
cld
or
in
mov
enter
pop
loope
xchg
mov
mov
adc
or
ds
leave
or
sbb
in
test
push
pop
adc
cmpsl
dec
xchg
scas
xor
sti
xchg
add
mov
mov
jne
hlt
cmp
push
andb
inc
dec
and
adc
js
or
cmc
clc
sub
dec
mov
jo
xchg
lock
xor
test
jecxz
das
jge
mov
aam
sbb
push
clc
cmp
or
push
cld
or
inc
sbb
clc
mov
daa
fistl
dec
outsl
jns
push
filds
stc
xor
xchg
leave
cmp
rol
dec
jg
mov
mov
add
lock
mov
mov
or
push
out
lret
push
ja
cmp
das
testb
sarb
popa
in
into
je
pop
test
lret
adc
mov
push
add
adc
int
pop
add
or
xchg
gs
fdivrl
push
mov
inc
fcoms
xchg
adc
aam
dec
lcall
imul
shll
ja
dec
mov
inc
push
lret
mov
enter
xchg
adc
ret
outsb
cmp
test
or
push
add
in
test
sub
inc
xchg
loopne
fsubl
loop
ds
fcoms
js
mov
inc
loopne
push
std
and
xchg
mov
pop
mov
leave
cs
mov
mov
xor
movsl
cmpsl
mov
js
xchg
add
jno
xchg
adc
adc
popf
dec
xchg
and
rorl
inc
mov
clc
and
adc
cmp
inc
adc
add
fsqrt
pop
shlb
daa
ffree
jns
insb
xchg
and
loop
inc
iret
adc
xor
orb
inc
fstl
mov
xorb
xchg
mov
sub
pop
dec
icebp
cmpl
repz
inc
into
and
cmpsb
xor
mov
or
rolb
xor
rcrb
enter
xor
decb
jge
add
lock
or
into
enter
or
and
loop
int
xor
in
sbbb
xor
inc
mov
xor
test
push
mov
lahf
jmp
xor
cmc
int3
add
inc
pop
push
lods
outsb
arpl
call
xor
dec
movsb
or
push
lds
scas
loope
and
dec
scas
inc
xor
xchg
add
call
xchg
mov
mov
xchg
mov
mulb
pop
xchg
or
pop
inc
push
mov
push
fwait
xor
adc
sub
dec
inc
mov
ret
daa
add
ds
add
pop
std
inc
cmp
fidivrl
movsb
or
and
sbb
or
adc
push
std
mov
pop
aam
push
stos
in
adc
or
push
je
sub
les
leave
dec
dec
jne
insb
les
adc
fldt
negb
jmp
mov
pusha
mov
mov
push
mov
pop
xor
mov
inc
add
lea
lds
movsl
push
loope
es
fwait
nop
fwait
push
mov
adc
ret
and
cmp
xchg
sbb
mov
mov
cmpb
dec
pop
jbe
and
movsb
inc
adc
adc
or
push
sbb
sub
and
or
aam
or
adc
or
mov
cld
xor
or
int3
enter
jns
fidivs
push
push
adc
and
jb
dec
in
adc
sbb
xor
clc
push
pusha
out
mov
mov
das
mov
dec
aas
sub
sub
int3
jle
xchg
jnp
test
fiaddl
loope
mov
and
jmp
fstpl
xchg
or
pop
mov
pop
jmp
leave
rcr
pop
mov
out
mov
pop
lods
fcom
outsb
aas
inc
dec
or
pop
arpl
cmp
sub
inc
iret
into
loope
inc
mov
mov
adc
fs
xchg
shll
or
leave
mov
adc
dec
and
adc
fiaddl
inc
cmp
sbb
inc
push
gs
add
insb
jmp
cmpsl
icebp
lods
sbb
sub
pusha
sti
adc
daa
mov
pop
incl
xchg
jle
enter
and
mov
xor
xchg
lods
lahf
lea
pop
divb
mov
sub
sarb
sbb
xlat
lds
adc
cmp
popf
pop
je
clc
jg
inc
adc
sahf
and
setne
jae
das
cmp
pop
and
cmp
mov
inc
add
mov
test
add
add
pop
and
sarb
adc
xchg
pop
fcmovb
adc
mov
and
call
nop
ljmp
sbb
arpl
and
mov
test
shl
decl
cmp
inc
adc
push
and
xor
xchg
jne
mov
mov
inc
mov
and
sub
pop
mov
dec
and
ljmp
adc
testb
lret
das
push
mov
inc
adc
rclb
hlt
jne
je
jbe
adc
int3
and
addl
test
pop
ljmp
mov
lahf
fidivs
add
inc
addl
jmp
xchg
sbb
add
mov
inc
std
jecxz
xchg
adc
sub
test
inc
inc
in
mov
dec
inc
rolb
mov
add
idiv
mov
rclb
or
push
xchg
inc
mov
mov
lret
and
xlat
insl
sub
jne
adc
xor
pop
stc
push
push
or
and
popa
popa
js
orb
fstl
cwtl
push
adc
xor
adc
xor
inc
mov
fisttpll
mov
jp
push
es
gs
jle
dec
lds
movl
xor
bound
jno
lea
add
movzwl
xchg
or
repz
cwtl
cmp
xchg
xchg
or
cmc
xor
andps
mov
sub
mov
hlt
sub
sti
mov
jno
mov
loopne
inc
fcmovne
push
std
fmuls
cmp
sub
loopne
add
rclb
loop
cmp
xor
hlt
fisubl
push
xor
ret
scas
jne
arpl
dec
ds
pop
dec
clc
mov
es
out
scas
enter
mov
bound
sarb
adc
cmp
cmovae
dec
jne
dec
sar
cmp
inc
and
push
les
out
inc
ret
and
xchg
push
pop
jecxz
pop
insb
mov
dec
push
cli
mov
push
repnz
out
call
inc
mov
jmp
jge
sub
push
sbb
inc
inc
and
mov
push
push
mov
mov
aam
lock
adc
setne
push
test
lea
dec
push
or
call
xor
test
fldenv
lods
push
js
dec
hlt
push
movsl
mov
inc
jns
and
xchg
mov
adc
cld
lahf
je
les
idivb
pop
and
inc
ror
clc
and
test
push
sub
lock
int3
mov
orb
push
sub
fisubrl
test
jbe
fldenv
sub
repnz
dec
inc
and
xchg
inc
hlt
inc
or
in
xor
inc
mov
lds
std
int3
jl
outsb
insl
sub
out
mov
and
jecxz
sbb
sub
in
mov
mov
xor
mov
adc
mov
dec
mov
pop
imul
mov
movsl
xor
sub
dec
and
jl
jle
arpl
sub
xor
push
sub
xor
sahf
enter
fnstenv
or
pop
inc
jl
leave
push
clc
add
sbb
and
mov
call
fs
sub
jns
les
ds
scas
xor
mov
subl
aad
dec
shlb
pushf
lret
inc
es
cmp
movsl
add
cwtl
enter
adc
fdivl
int3
into
cld
cmp
int
or
adc
mov
and
testb
dec
adc
daa
jge
or
test
mov
add
inc
cmp
test
mov
adc
cs
daa
ja
je
add
or
mov
mov
push
insb
adc
mov
loope
inc
sub
add
faddl
jl
push
test
mov
adc
adc
sbb
xchg
push
adc
or
cmp
add
and
or
faddp
sbb
jne
stos
sub
mov
or
inc
push
daa
push
shll
iret
clc
and
sbb
and
and
popa
orb
xchg
push
mov
or
jne
and
add
in
cmpb
dec
jmp
cmc
leave
pop
sti
bound
setne
cs
mov
mov
mov
stos
lret
inc
dec
xorl
adc
repz
mov
inc
inc
pop
jle
shlb
jp
daa
mov
ja
add
cmp
mov
nop
in
adc
inc
push
or
inc
mov
dec
enter
xchg
and
jb
pop
cmp
push
ja
mov
mov
xchg
js
fnstcw
stos
cmp
jge
mov
in
ret
lds
or
or
push
add
add
aas
jae
movsb
inc
dec
mov
dec
adc
xchg
xchg
jl
sub
into
call
cmp
and
push
enter
lahf
aad
dec
sbb
adc
inc
popf
push
movb
sub
loope
xor
sbb
dec
mov
cmpsb
add
adc
loope
sub
dec
or
lods
leave
aad
jmp
ja
in
or
pop
or
or
call
pop
or
imul
mov
outsl
mov
outsl
pusha
jmp
jmp
mov
lcall
stos
cwtl
enter
les
cmp
mov
lea
jmp
icebp
adc
dec
scas
shrl
push
imul
and
xor
lds
faddl
sub
sahf
ret
in
les
mov
cmp
out
js
mov
scas
pusha
int3
lods
clc
addl
sub
call
adc
jl
sbb
dec
and
cmpsb
inc
or
inc
sub
cmpsb
cltd
pusha
inc
dec
jne
movsb
sbb
cs
mov
out
adc
lret
mov
ja
xchg
gs
pop
aam
scas
lods
clc
ror
test
test
cmpsb
test
push
push
adc
xor
inc
or
fstpl
fxch
ret
icebp
push
adc
in
addl
nop
push
pop
jns
inc
ret
dec
adc
out
adcl
aaa
arpl
cmc
int3
test
jmp
xorb
aas
dec
out
sub
sbb
xor
out
jno
lcall
dec
cmpl
xchg
and
addl
dec
jno
pop
xor
xchg
cmovp
pushf
jl
arpl
or
je
adc
stos
mov
jmp
lods
movsb
loopne
cmpsb
sbb
pop
pop
fs
sub
and
jne
inc
xchg
cmp
stos
lods
sbb
ret
aad
inc
adc
dec
or
cs
inc
jmp
dec
scas
mov
lret
lret
and
mov
fstl
sub
xchg
add
rcrb
dec
rclb
jns
lret
add
jl
xchg
maskmovq
dec
das
and
repnz
rorl
scas
fxam
lods
push
sti
imul
leave
stc
nop
and
jge
push
or
jle
out
dec
lock
pusha
popf
adc
mov
xlat
pushf
add
jl
push
nop
xor
xlat
mov
sub
stos
adc
inc
je
fs
sbb
mov
mov
dec
std
enter
es
inc
outsb
lahf
clc
push
in
jge
dec
xchg
in
test
fists
sub
inc
pop
or
pop
fcoml
cwtl
lock
sub
sub
into
inc
ss
inc
pushf
lret
mov
xchg
hlt
sbb
mov
sbb
cmp
jbe
cmpl
and
dec
mov
xor
clc
jle
xor
lahf
add
bound
mov
sar
push
in
jmp
push
xor
sub
dec
xchg
out
bound
mov
fwait
cwtl
decl
add
rcrl
inc
dec
jne
xchg
add
inc
pop
insb
in
pop
pop
cli
popl
dec
inc
dec
decl
xchg
xor
sub
pop
cmp
jne
push
popf
mov
push
adc
or
mov
lds
aas
lcall
pop
or
sub
and
or
push
xchg
pop
frstor
push
mov
data16
test
insl
cmp
sub
lahf
stc
fildll
xchg
inc
in
mov
adc
inc
dec
inc
fmull
jecxz
and
pop
pop
dec
push
fs
scas
jl
inc
ljmp
xor
in
mov
push
scas
dec
sub
rorb
mov
or
pop
mov
sbb
push
jo
fs
repnz
mov
xor
push
mov
cwtl
cmp
shl
add
divl
cwtl
mov
push
mov
movb
mov
push
jmp
push
nop
cltd
clc
addr16
jmp
xchg
vpmacssdql
call
sub
cmp
popa
movsb
sub
aad
pop
insb
movsb
imul
out
mov
or
mov
or
dec
xor
in
popf
jno
mov
push
or
lret
aas
out
add
sbb
pop
sahf
mov
adc
xor
xor
lods
in
ret
mov
je
add
and
add
adc
or
testl
xchg
mov
ficoms
int
and
push
addr16
mov
adc
xchg
movsl
fs
lds
dec
dec
ljmp
inc
fbld
xchg
pop
lods
in
imul
in
xchg
mov
pop
clc
pop
push
inc
or
mov
in
xor
push
adc
xchg
pop
sbb
and
jecxz
xor
jl
adc
jmp
frstors
mov
adc
cmpsl
inc
sub
loope
je
insb
jns
mov
pop
sti
pop
xor
sbb
sub
push
and
es
mov
or
setge
xor
std
sbbb
int3
and
imul
mov
hlt
lahf
push
repnz
xor
sub
movsb
xchg
js
or
xor
rep
mov
jo
int3
add
movsl
sub
or
mov
add
mov
cmpsb
fdivs
and
adc
mov
and
cmp
adc
inc
orb
inc
push
sbb
js
sbb
nop
dec
test
pop
movsb
fstpl
dec
lods
or
push
mov
push
out
out
push
test
inc
aad
call
xchg
adc
add
call
cltd
and
push
inc
iret
cli
test
in
xor
int3
push
movsb
stos
stc
inc
mov
ja
hlt
mov
mov
inc
xchg
orb
push
jne
sub
xor
jmp
fnstcw
push
add
repz
mov
lcall
mov
loop
mov
sub
adc
cmp
loope
dec
jne
inc
sub
fimull
add
push
add
and
mov
xchg
adc
jle
aam
mov
sub
cltd
add
adc
ja
mov
stos
push
add
into
xor
push
les
dec
bnd
leave
insl
or
cmpb
pop
adc
decb
or
sbb
gs
or
nop
ljmp
dec
add
inc
push
sub
lock
jne
cmp
sub
out
xchg
inc
std
push
and
mov
sbb
xchg
mov
aaa
call
test
test
and
sub
and
or
es
hlt
int3
lret
adc
add
or
push
iret
sub
std
mov
test
sbb
sti
or
mov
pop
bound
jbe
mov
dec
sbb
dec
insl
and
clc
ret
lock
or
in
dec
jle
mov
inc
jge
cmpsl
popa
int
insb
dec
js
cs
jbe
insb
leave
rcrb
jns
push
aad
das
lods
dec
pop
jge
loop
push
rcrb
ficomps
call
inc
mov
xchg
lahf
lret
dec
xchg
dec
jnp
lds
adc
enter
out
fmuls
mov
les
adc
xor
adc
test
mov
movsb
clc
jmp
mov
push
push
and
mov
add
xor
movsb
clc
test
mov
call
xor
add
sub
inc
or
cld
ficoml
enter
call
and
cmp
aam
knotw
and
nop
sbb
and
xor
hlt
test
or
inc
je
mov
mov
xchg
sub
mov
stos
mov
outsb
adc
dec
inc
leave
lret
jo
mov
daa
xlat
enter
mov
adc
out
sub
adcl
dec
bound
rol
test
int
outsl
and
jb
adc
jge
shrl
dec
stc
jmp
dec
jmp
and
js
adc
mov
pop
imul
adc
fadds
cmpb
jl
push
push
or
jo
jp
leave
pop
scas
out
or
sbb
inc
sub
lahf
mov
lea
pop
ja
sub
lret
rorl
lods
cmp
das
cmpsb
and
xor
push
in
xchg
ficoml
cmp
and
and
sub
dec
mov
cmp
rcl
mov
jmp
inc
sub
incb
xor
jne
jp
outsl
sbb
inc
or
and
std
jns
sub
xchg
js
adc
or
mov
fisubrl
js
popa
mov
cltd
movsb
adc
repz
je
ja
ja
test
fwait
push
fiaddl
pushf
or
mov
adc
idivb
or
xchg
ret
jmp
inc
or
adc
add
or
adc
orb
xchg
sub
ret
pushw
jle
inc
cmpsb
mov
les
or
adc
or
add
adc
pop
mov
and
inc
or
push
jl
xchg
and
adc
sahf
cmp
adc
aas
adcl
adc
push
ss
push
jbe
nop
popf
adc
int
mov
mov
stos
daa
sbb
test
clc
lea
sbb
and
inc
sbb
mov
loopne
jns
dec
pop
and
dec
sbb
dec
push
mov
push
test
mov
in
inc
call
cld
xchg
orb
lds
push
xor
cmp
outsb
cmp
dec
dec
push
and
bound
jb
push
inc
sub
cmp
insb
les
push
add
mov
adc
inc
sarl
jl
fs
mov
sub
mov
mov
nop
dec
xor
xchg
cmp
and
incl
popf
incb
jmp
sub
inc
imul
clc
and
dec
push
xor
inc
jbe
cmp
push
sbb
jbe
scas
sbbl
mov
cmpb
rcr
pop
xor
mov
xor
mov
mov
add
insb
ret
scas
push
adc
cmpsb
mov
cmpsl
shr
jmp
cwtl
adc
movb
add
lahf
or
negb
and
aaa
cs
cwtl
leave
jmp
xchg
xlat
xchg
mov
and
mov
hlt
je
inc
or
cli
add
jle
adc
decb
xor
add
int3
mov
lret
call
sbb
push
sti
test
mov
hlt
movsl
stos
mov
and
or
fdivs
xchg
or
sub
movsb
mov
xchg
xchg
arpl
xor
mov
pop
stc
xor
jnp
jle
inc
sbb
rorb
xor
inc
mov
push
mov
mov
repnz
dec
pop
mov
xchg
sbb
cmp
and
sub
inc
mov
sbb
loopne
add
jle
daa
sahf
and
std
jle
loopne
lods
lret
add
hlt
stos
aas
inc
inc
call
call
lret
fistl
xor
leave
nop
and
daa
lods
rolb
sub
xchg
adc
repnz
sbb
and
and
clc
lahf
xlat
pusha
sahf
nop
fmul
ljmp
ja
inc
mov
mov
mov
je
scas
or
cmpl
setg
push
sub
adc
mov
mov
and
stc
sub
jae
gs
test
jmp
insb
mov
je
insb
xchg
andb
jnp
call
popf
pop
sti
or
rolb
out
bound
mov
pop
pop
cmp
add
sbb
test
es
movl
jb
ljmp
data16
cs
cmp
loopne
inc
mov
push
inc
scas
clc
or
adc
pop
xchg
cwtl
out
inc
ds
rep
cs
scas
dec
nop
adc
call
xstore-rng
cmpsl
test
inc
jne
lret
pop
pop
xchg
sbb
fs
and
xchg
and
fidivrs
jae
enter
sub
and
pop
sbb
pop
dec
daa
dec
adc
and
add
decb
add
jle
lahf
insb
popa
sbb
dec
pop
popf
adc
sbb
cmp
xchg
pop
cmp
cmp
pop
or
add
loopne
sbb
cld
adc
inc
rorb
call
aad
lcall
lret
push
mov
movsl
sub
lcall
adc
xchg
mov
test
mov
dec
adc
lds
subb
xchg
fstpl
pop
movsl
mov
test
mov
add
xchg
in
or
lcall
inc
in
and
std
and
xchg
or
and
adc
pop
es
sbb
fisttps
int3
and
lock
lahf
int3
fdiv
cmc
icebp
ds
cli
or
inc
loopne
push
test
or
add
jne
mov
fsubp
aaa
cmpb
in
and
adc
inc
cli
jne
mov
jecxz
enter
jne
lds
mov
or
lahf
or
mov
movl
bound
notb
sub
push
cmp
dec
add
dec
test
sbb
int
xor
push
mov
xor
sub
bound
push
les
lahf
mov
cmpsb
xchg
or
icebp
loopne
loopne
mov
push
push
les
jns
fistpll
aaa
cwtl
xchg
in
cmpsb
repz
int
cli
insl
adc
int3
outsb
mov
stc
add
mov
stc
xchg
shl
out
adc
cmp
lcall
mov
xchg
iret
add
add
mov
lret
aaa
and
mov
sub
mov
pusha
inc
mov
in
adc
pop
adc
jae
dec
repnz
inc
mov
sbb
sbb
test
dec
ret
push
cltd
push
fisubrl
lcall
adc
pop
sti
shll
push
and
repz
pusha
mov
xchg
adc
xlat
xchg
or
mov
adc
jmp
and
mov
xor
add
fstpl
push
push
push
push
repnz
inc
lods
push
mov
mov
movsb
mov
mull
les
repz
sbb
mov
cmpsl
sti
adc
cld
lret
dec
push
add
cltd
and
dec
dec
mov
mov
and
fnsave
mov
mov
adc
jp
cmp
mov
jne
push
pop
jae
add
aaa
pop
push
loope
loop
test
adc
dec
dec
sbb
adc
imul
dec
pusha
xchg
and
xabort
and
adc
jg
jecxz
in
popf
add
sbb
push
xchg
imul
push
adc
push
popf
adc
jns
pop
nop
mov
xchg
ljmp
ljmp
or
and
jmp
jmp
lods
mov
ljmp
rol
and
cwtl
repz
xchg
xor
mov
negl
icebp
or
xor
pop
or
clc
xchg
and
fmull
cld
and
add
mov
ljmp
mov
pop
xchg
lret
adc
or
lahf
sbb
popa
dec
clc
jmp
enter
repnz
sbb
and
and
adc
push
inc
idivl
arpl
pop
int
adc
xor
inc
inc
and
aam
loop
sbb
push
or
jne
rorl
inc
into
jge
leave
pop
addr16
js
jge
stc
cli
jno
int3
stos
sub
xchg
or
dec
mov
imul
or
lcall
fs
sahf
pop
xchg
out
xor
adc
notb
and
adc
sbb
dec
inc
repnz
and
hlt
es
daa
push
add
or
addr16
push
rol
add
pop
pusha
dec
hlt
jne
mov
stos
in
aas
lock
xchg
push
mov
inc
icebp
push
and
ljmp
jle
mov
jmp
xor
inc
cmp
pop
mov
push
xchg
push
or
sbb
or
and
or
adc
sbb
mov
lock
xchg
test
cltd
das
add
push
cli
adc
dec
sbbl
and
adc
mov
push
psubb
push
xchg
xchg
pop
filds
inc
dec
jne
pop
pop
jnp
and
jno
fstl
dec
lret
pop
adc
xchg
mov
das
insl
xor
test
cli
sub
lods
out
lret
pop
and
lea
inc
add
cmp
dec
pushf
mov
inc
dec
or
imul
xchg
clc
ljmp
and
insb
inc
outsl
add
and
sbb
jae
lahf
or
out
dec
setnp
ret
dec
ss
int3
ret
or
imul
ljmp
cmp
das
jp
icebp
adc
cmp
repz
aaa
loop
insb
scas
movsb
sti
or
jmp
xchg
stc
or
mov
scas
and
popf
hlt
dec
dec
jno
adcb
xchg
ljmp
pop
and
pop
cli
sbb
or
xorl
cmp
push
orl
adc
add
adc
sub
out
and
or
data16
sbb
add
rclb
or
add
in
mov
loope
cli
pop
loope
cli
adc
inc
add
pop
hlt
add
push
add
les
fdivrl
adc
hlt
xchg
int3
adc
adc
rcrb
mov
inc
popf
add
pop
push
bound
mov
push
add
jns
test
pop
mov
mov
es
xor
nop
lret
hlt
push
push
xchg
and
adc
call
test
xchg
and
cld
outsl
mov
inc
lock
mov
jle
push
add
jmp
icebp
and
or
sbb
dec
pop
int3
mov
push
mov
push
pop
call
push
loop
push
cmp
arpl
les
lahf
hlt
mov
mov
in
xchg
decb
push
and
inc
push
sub
push
sbb
sbb
jp
cld
pop
out
jne
xchg
popa
and
int3
incb
push
xchg
shll
adc
ss
xchg
or
pop
loop
cmpb
aam
push
ds
xor
cld
loopne
lock
cld
pop
mov
xchg
rcrl
sti
stos
sub
xorb
popa
gs
sti
xor
stos
mov
test
xchg
je
loop
mov
xchg
dec
aas
pop
mov
adc
mov
mov
adc
imulb
pusha
insb
cltd
xor
in
pop
jg
lea
push
add
sub
jmp
adc
insb
outsb
call
sub
and
gs
test
sarl
or
jne
mov
hlt
xor
test
pop
or
cmp
test
xchg
clc
adc
nop
jge
movsb
clc
pusha
movsb
stc
inc
dec
lret
out
inc
sti
aam
cltd
dec
fs
sub
pop
jno
ret
call
stos
xor
push
pop
arpl
inc
out
pop
cmc
mov
xchg
or
dec
int
jb
or
add
ret
outsb
fsts
fmull
mov
mull
cmc
sub
jnp
out
inc
int3
adc
int3
popa
xor
mov
das
jg
jp
xchg
ljmp
dec
inc
sarb
hlt
add
pushf
adc
push
jp
fstpl
inc
sub
jns
lea
sub
xor
out
shlb
mov
xlat
dec
add
and
loopne
or
mov
sarb
inc
jmp
mov
adc
sbb
push
jge
popf
jg
dec
inc
xor
dec
adc
xchg
out
xor
add
jne
sbbl
dec
xor
jne
inc
mov
sub
or
inc
clc
scas
push
sub
iret
aaa
mov
dec
and
daa
hlt
sarb
rolb
inc
mov
and
inc
pop
sbbl
pop
out
cmc
arpl
cld
popf
sbb
repz
fildll
sbbl
cmp
xchg
jns
repz
pop
divb
mov
add
mov
mov
inc
hlt
not
inc
fwait
cltd
inc
dec
jge
hlt
dec
xchg
xor
leave
repz
fldt
mov
cmp
xchg
dec
jne
push
lods
and
jmp
mov
adc
scas
cmp
insl
inc
inc
enter
fsubrs
xor
cmpsl
mov
jg
and
stos
pop
in
gs
or
aam
leave
sub
inc
sti
das
sbb
flds
and
xchg
shll
xor
pop
add
push
cmp
jnp
jg
mov
mov
xchg
pop
sub
addps
jmp
or
dec
lods
outsb
les
dec
adc
sub
daa
jmp
xchg
xlat
add
mov
imul
jp
sub
daa
or
xor
jge
or
pop
dec
pop
cmpsb
test
inc
xchg
push
movsl
push
in
shl
push
dec
push
xor
rclb
popf
mov
insl
xor
xor
mov
push
mov
mov
or
jl
mov
xchg
add
jecxz
inc
mov
adc
mov
sub
ja
popa
or
pop
push
xor
dec
pop
mov
repnz
jo
xchg
jmp
test
fsubl
mov
or
bound
pop
sbb
sbb
and
mov
mov
dec
scas
les
adc
sarl
pop
je
add
mov
dec
adc
push
cld
cltd
bound
add
enter
leave
and
sbb
loopne
mov
insb
lahf
and
push
add
pop
mov
scas
fcmovnb
mov
add
sub
inc
rcrl
push
mov
inc
xlat
in
in
addl
pusha
daa
xlat
or
call
enter
xchg
test
mov
inc
addr16
js
or
imul
sbb
push
xchg
and
sub
xor
xor
or
sbb
jle
pop
add
adc
sub
mov
js
xchg
in
lods
and
and
mov
push
jmp
or
adcl
and
or
adc
mov
pop
bound
pop
sbb
inc
inc
and
sub
or
pop
sbb
push
or
mov
test
inc
bound
mov
and
imul
push
lahf
pop
cmpsl
fistpll
in
or
pop
cld
aad
pop
sbb
jne
sbb
daa
jnp
inc
movb
shll
es
cmp
cli
pop
pop
iret
or
push
sub
jnp
pop
sti
sbb
push
pop
sbb
or
je
insb
adc
outsl
and
push
nop
mov
mov
push
cli
leave
add
push
stc
and
push
bound
mov
call
nop
xchg
push
fmull
inc
push
sbb
dec
dec
test
imul
test
andb
inc
xchg
andb
jle
popf
std
sbb
xchg
cmc
mov
xchg
cmpsl
mov
xchg
jmp
mov
not
mov
xor
mov
xor
jnp
add
mov
xor
add
aaa
mov
xor
sbb
mov
mov
and
add
imul
imul
mov
xorb
mov
pop
sahf
pusha
loope
jle
cs
gs
loop
xchg
das
and
clc
sti
jbe
imul
loop
cmp
pop
fists
nop
lods
mov
inc
pop
lcall
sbb
sub
test
shl
push
mov
mov
jno
imulb
les
dec
and
ljmp
sub
adc
notl
sbb
inc
inc
jl
xchg
lret
push
pop
jl
or
push
mov
cmp
inc
out
dec
bound
lock
jo
mov
hlt
adc
invd
lret
inc
xchg
dec
test
scas
xchg
shrl
push
mov
mov
cmp
push
je
pop
sub
dec
cmpsb
push
push
or
sub
adcl
and
mov
mov
and
pop
lds
sarl
xor
xchg
mov
loopne
call
ss
push
jbe
sub
xor
push
mov
pop
ret
mov
push
inc
lock
or
or
sub
ficomps
dec
je
jo
orb
test
jl
fsubrp
cli
jp
inc
loopne
xchg
rcrl
ret
pop
daa
ja
mov
fcoml
les
outsb
and
inc
inc
mov
nop
jno
cmp
inc
inc
hlt
cld
push
ror
cwtl
fstpt
push
xchg
sub
pop
sbb
lahf
mov
push
dec
cltd
adc
in
in
cmp
hlt
gs
mov
clc
and
stc
outsl
adc
cwtl
mov
fsubs
mov
fsub
sub
ss
es
inc
push
sub
push
fnstcw
and
jle
push
cmp
sahf
and
mov
loop
inc
and
inc
and
inc
sub
push
or
sbb
and
pushf
fs
pop
and
or
sbb
add
je
or
or
scas
out
dec
or
ret
ljmp
xchg
push
cmp
or
cmp
or
loopne
pop
pop
je
adc
adc
pop
jns
sbb
cld
or
and
inc
mov
adc
sbb
and
inc
and
inc
js
inc
add
ds
inc
in
fisubs
or
pop
mov
jp
or
xor
mov
and
and
daa
jl
dec
xor
mov
adc
dec
std
in
jge
push
cmp
outsb
cwtl
adcb
xchg
lcall
stc
into
js
movsl
xor
or
fs
pop
and
test
fs
rcrl
adc
mov
fistps
loopne
mov
jne
sbb
in
mov
ret
xchg
sub
pop
jns
mov
lret
or
mov
inc
add
push
or
and
sbb
nop
mov
and
cli
xchg
repz
xor
pop
lock
cld
push
dec
mov
push
icebp
into
xor
out
aam
push
mov
xchg
push
cltd
aas
ljmp
push
and
and
fists
add
and
into
inc
pop
mov
rcrb
sub
jg
outsl
adc
mov
cmp
cmpsl
in
mov
mov
fdivs
and
scas
or
mov
inc
pop
je
pop
addr16
gs
jmp
pop
mov
insb
in
inc
pushf
lret
inc
xor
incb
adcl
push
cmp
iret
fidivs
ret
mov
inc
inc
int3
nop
xchg
test
cmpb
mov
gs
enter
xchg
sbb
jle
or
inc
in
dec
test
mov
mov
push
push
std
or
push
cmp
dec
and
sbb
and
and
mov
ds
into
mov
push
cmp
xchg
inc
or
mov
push
add
push
scas
adc
adc
pop
cwtl
lods
repnz
dec
aad
stos
jp
push
sbbb
clc
cld
sub
pop
lods
inc
push
jo
call
and
fs
or
inc
out
pop
imul
push
je
mov
add
push
mov
orl
call
push
jmp
addr16
les
and
sub
and
cmp
int3
and
inc
sub
movsb
dec
sub
pop
popa
xor
inc
hlt
arpl
jg
les
orl
sbb
lock
push
pop
adc
sbbl
cs
mov
sub
push
ficompl
or
sbb
add
push
pop
adc
jmp
jne
mov
and
bound
xchg
mov
call
push
or
xchg
js
xchg
push
mov
xchg
jae
adc
cmp
mull
push
mov
fsubp
pusha
ret
jmp
mov
cmpb
jne
stos
int3
jecxz
mov
imul
dec
mov
push
or
adc
mov
shlb
dec
or
mov
popf
sbb
cli
mov
add
push
inc
jmp
add
insb
and
psrlq
jl
and
pop
gs
lea
push
popf
and
sbb
lea
inc
mov
xor
push
and
and
leave
mov
push
mov
mov
dec
xor
js
icebp
sub
cmc
and
xchg
xchg
mov
neg
dec
call
loope
test
inc
test
xchg
xchg
mov
adc
out
stos
outsb
cltd
testl
stos
lods
movsl
test
mov
ret
adc
aaa
outsb
mov
pop
and
das
int
sub
je
mov
mov
outsl
into
inc
pushw
ret
or
push
push
stc
cmp
mov
movl
mov
imul
sub
inc
adc
out
adc
push
mov
dec
sub
mov
or
andl
outsl
push
pusha
sbb
jmp
cmc
mov
xchg
and
mov
cmp
cltd
lea
notl
loope
jg
cmp
mov
push
aad
push
movl
je
push
and
cmp
shr
jle
int
xchg
mov
inc
lcall
jl
mov
cmp
push
xor
and
push
and
stos
mov
lret
xor
test
ja
gs
mov
je
push
sahf
pop
fs
inc
jmp
test
push
lock
push
xchg
pop
inc
into
xchg
movsl
dec
adc
and
xor
lea
in
and
popf
inc
and
pop
mov
imul
repnz
fs
adc
sub
cmp
mov
cmpl
sbb
dec
inc
sub
cmp
and
push
push
call
in
lods
push
enter
push
mov
lods
leave
int3
das
pop
mov
subb
inc
imul
dec
jnp
xchg
test
daa
and
sahf
mov
orl
loop
adc
jo
enter
rcr
jge
push
xor
adc
mov
in
add
das
mov
xchg
mov
imul
sbbl
mov
addr16
roll
mov
dec
inc
icebp
hlt
mull
fs
outsl
mov
daa
js
xchg
push
cmp
jbe
imul
cmp
mov
push
push
dec
movsl
mov
adc
orl
movsl
imul
and
mov
adc
les
fsubl
mov
je
xchg
pushl
xchg
pop
std
and
loopne
jmp
in
sbb
dec
loopne
add
mov
out
test
mov
call
xchg
lods
push
scas
in
adc
sahf
inc
and
testb
push
jle
or
dec
and
inc
adc
je
xchg
xchg
push
dec
inc
aam
push
adc
adc
jle
fs
fcomps
sbb
sub
mov
sub
mov
stc
adc
sbb
inc
xchg
gs
ficoml
stos
mov
adc
aam
jbe
adc
je
or
mov
icebp
inc
push
xor
addr16
dec
sbb
add
push
es
or
orl
ljmp
sub
stc
ds
adc
push
push
in
add
sbb
mov
jns
mov
jne
in
xchg
stc
fs
jb
jmp
int
push
fld
dec
cld
and
jne
sbb
or
adc
mov
aam
xchg
fbstp
pop
add
fwait
sti
lret
xor
pop
xchg
outsb
sbb
cmp
mov
in
or
or
jo
in
jmp
sub
mov
popa
jo
jmp
fidivrs
lods
popf
fnsave
push
dec
cmpsl
icebp
pop
mov
cmp
push
jne
push
clc
mov
mov
shrb
or
push
fsubs
push
stos
icebp
popf
int3
dec
bound
sbb
inc
inc
pop
push
pop
pop
adc
out
movsl
lahf
ss
mov
and
pop
lret
push
stc
ret
and
sarb
int3
scas
pop
mov
dec
xor
pop
add
mov
or
and
pop
cs
pop
loope
into
shrl
push
adc
jl
adc
stos
int3
cmp
jmp
xor
dec
rorl
sbb
and
mov
xchg
pop
sbb
and
out
dec
xchg
cmc
aas
test
rorb
ffree
test
mov
xchg
cmp
and
mov
pop
test
repnz
jle
out
push
and
mov
lods
mov
add
fmull
leave
or
and
and
and
mov
outsl
rcll
mov
adc
movb
sbb
decl
add
and
inc
shl
jne
mov
lock
leave
adc
lret
mov
mov
dec
mov
mov
push
add
push
hlt
daa
lock
dec
mov
in
xor
sbb
or
mov
or
add
inc
fcoml
dec
dec
sti
mov
add
test
shrl
cli
stc
cld
or
lea
repz
cld
sub
rcl
and
mov
pop
or
inc
and
call
sbb
push
add
xor
inc
sti
movsl
cmp
add
jmp
clc
pop
lret
and
data16
sbb
add
adc
std
or
sbb
pop
bound
jne
outsb
mov
scas
daa
mov
int
sub
lock
inc
sub
jp
mov
dec
cmp
repnz
aas
sub
jns
push
fsts
sub
gs
mov
push
xchg
inc
cmp
xlat
scas
xchg
mov
ja
in
ss
inc
inc
hlt
mov
fsts
or
pop
mov
mov
or
xlat
and
pusha
pop
push
push
push
je
scas
test
scas
call
push
nop
and
xor
push
pop
and
and
sbb
js
xor
cmp
inc
xor
popw
shll
adc
jmp
out
clc
std
fildll
push
jne
sub
loopne
pusha
mov
adc
lods
movsb
push
and
pop
shll
cld
push
jp
hlt
mov
mov
imul
lock
cld
loop
rorb
in
or
push
fcmovbe
jnp
mov
pop
iret
sub
and
mov
jnp
adc
cwtl
clc
jmp
jmp
pushf
sahf
sbb
movsb
xor
dec
addl
push
or
xlat
stc
in
inc
movsb
clc
and
outsl
mov
test
lods
call
aam
loop
rorb
inc
loop
push
aas
out
and
pop
or
popf
push
xor
enter
sbb
jne
les
mov
ljmp
lret
sarb
pop
lock
or
call
sti
sub
loope
jmp
mov
or
add
mov
std
or
in
xchg
xchg
leave
adc
or
jmp
mov
gs
adc
fisubl
loop
shr
les
pop
aam
sbb
js
out
std
mov
int
add
push
call
jnp
inc
lret
sbb
dec
movsl
or
inc
inc
and
sarl
cmpl
adc
dec
in
testb
mov
call
mov
sbb
jae
andl
mov
fwait
arpl
cli
jmp
cmpl
dec
jns
mov
call
ss
sub
dec
and
and
sbb
inc
mov
adc
pop
mov
sub
leave
xchg
adc
push
adc
and
adc
lret
stos
lcall
mov
pop
mov
js
lahf
mul
jmp
inc
test
jne
push
sbb
scas
loop
mov
enter
push
and
test
sbb
sub
adc
xor
cmp
adc
or
sbb
rclb
lret
aas
call
fsubs
fsts
pop
shrl
push
arpl
out
adc
fmuls
push
lcall
andb
xor
test
in
insb
andl
add
pop
or
inc
dec
stc
ret
fmuls
mov
and
xchg
sbb
cli
push
lea
scas
xor
xchg
push
push
loopne
jno
or
test
sub
movsb
xor
std
mov
ret
dec
aam
xchg
jno
cmp
jl
push
enter
and
push
repnz
iret
dec
jmp
xchg
call
dec
dec
push
mov
push
testl
andl
testl
or
jecxz
icebp
mov
sti
leave
push
sub
pop
sbb
xor
lock
mov
mov
leave
sub
cwtl
aam
sbb
std
cld
or
dec
aaa
call
aas
repnz
test
bound
sti
or
fwait
xchg
fcmovu
push
mov
and
imul
pushf
lock
test
mov
inc
dec
jle
insb
inc
xchg
dec
hlt
or
mov
inc
inc
orb
addr16
mov
dec
pop
add
cwtl
lods
orb
leave
lahf
jge
jp
lret
adc
pop
scas
jae
and
scas
sbb
lcall
or
jne
movsl
push
sub
bswap
test
pusha
cmp
jle
enter
jl
insb
and
jl
bound
push
lods
adc
pop
insl
test
std
jecxz
inc
pop
mov
and
inc
sub
movsl
pusha
add
hlt
dec
stc
adc
testb
add
scas
push
or
mov
popa
fcmove
add
repnz
dec
fwait
xchg
xchg
mov
dec
out
cld
cmp
aaa
popa
xchg
or
cld
in
jne
stos
xchg
push
mov
inc
jns
and
pop
andb
xor
inc
mov
fwait
jge
lock
into
int3
cltd
aas
or
and
xchg
jo
or
xchg
jmp
cmpb
dec
xor
ljmp
mov
and
xor
pop
adc
imul
loope
fistpll
lret
mov
sbb
into
ljmp
push
std
jp
pop
push
loop
aas
sbb
fdiv
dec
stc
xor
xchg
pushf
jmp
in
push
adc
or
push
add
or
or
rolb
pop
xlat
xchg
xchg
add
cmpsb
sbb
push
popa
push
sbb
fwait
jnp
in
cmp
cmp
push
and
in
addr16
sbb
add
and
std
sbb
lcall
and
and
cs
lcall
pushf
xchg
sahf
daa
pusha
inc
and
pmulhw
arpl
sbb
sbb
movsl
push
mov
int
lea
adc
add
subb
sub
jge
mov
outsl
jp
push
and
xchg
sbb
pop
sahf
pop
xchg
hlt
js
inc
add
adc
mov
cld
je
or
popa
xchg
into
hlt
inc
xor
repz
pop
pop
push
add
cli
fldt
sub
jno
cmp
pop
inc
lds
sbb
ret
enter
sub
dec
or
inc
xor
cld
add
lea
and
mov
jmp
lods
adc
cmp
in
pop
in
sub
dec
icebp
stc
mov
pop
lcall
xchg
std
fmulp
ret
xlat
push
sub
out
push
js
aam
fs
xor
add
mov
data16
popf
push
pop
push
out
dec
lock
sbb
pop
jbe
ret
or
loopne
inc
jmp
inc
mov
cmpb
cmc
sbb
dec
adc
mov
cmpsl
int
adc
stc
mov
das
push
adc
sub
fnstcw
loopne
cmpb
and
mov
or
xor
lock
das
rolb
bound
jne
sti
xor
mov
mov
and
js
loopne
sbb
pusha
test
sub
popf
shlb
lea
je
mov
mov
ds
dec
jb
xor
in
subl
pop
sub
rolb
or
push
adc
and
adc
aas
out
int
gs
cmp
mov
ss
rcrb
cld
jb
and
loope
addb
mov
mov
mov
jecxz
add
jne
mov
push
push
jecxz
jbe
pop
jle
pop
and
stos
in
mov
and
loope
bound
and
push
xchg
mov
push
dec
mov
gs
or
pop
pop
jbe
and
mov
and
in
cld
sub
xor
ret
xlat
adc
adc
loopne
xchg
das
push
mov
dec
pop
loope
lock
pop
sub
adc
adc
in
dec
pushw
cmpsl
cwtl
js
or
inc
ljmp
rclb
or
jge
jge
jmp
xor
sub
add
cmpl
xor
jno
sub
pop
jecxz
push
mov
adc
mov
inc
jne
in
and
test
mov
sbb
and
sub
jecxz
sahf
mov
movsb
pop
movsb
lock
sarl
cmp
shlb
ja
pop
push
inc
sub
jl
sbbl
pop
sarl
out
xchg
sbb
stos
push
fstl
and
mov
pop
fadds
push
cmp
push
jp
xor
and
lods
repz
lods
mov
bound
ja
or
or
fstpl
mov
mov
jne
idiv
push
enter
ret
int
xor
jp
in
mov
sbb
es
sub
shl
xchg
mov
jg
fbstp
or
clc
das
fdivrl
ret
adc
push
std
sub
jge
mov
xor
dec
and
adc
out
or
std
enter
movl
dec
push
dec
sbb
or
jg
fidivrs
xchg
sub
rcrb
addl
adc
pop
clc
and
sti
mov
bound
and
fsubrp
shr
adc
std
pop
mov
out
and
or
popa
dec
xchg
dec
or
movsl
cld
jne
add
ss
mov
aad
mov
stc
dec
inc
and
test
pop
xor
jg
push
or
adc
setle
mov
cmp
bound
das
call
xchg
jne
nop
push
mov
ss
cmp
imul
shr
pop
mov
movsl
push
push
xor
and
sbb
sub
notl
dec
sub
add
and
data16
and
add
cld
adc
ror
cmp
roll
cwtl
adc
in
dec
push
call
jno
mov
jmp
jb
daa
call
push
mov
pop
cld
mov
add
cli
lds
nop
out
popa
cmpsl
push
add
xchg
dec
cli
pushf
inc
movsl
out
iret
push
sub
out
cli
and
pop
and
stc
js
mov
je
cld
add
add
lahf
int3
inc
mov
das
adc
mov
sub
sub
enter
setne
test
icebp
and
mov
jl
jno
xor
rclb
or
cmp
add
push
lods
jne
dec
pushf
sbb
scas
xor
repnz
xchg
lret
inc
inc
inc
into
inc
popa
cmp
adc
dec
jne
loopne
test
inc
pop
aas
pop
negb
pop
jg
sub
and
mov
cmpb
sbb
or
dec
and
xlat
and
cld
leave
sbb
jg
xor
fnstsw
pop
jbe
inc
int
and
out
pop
mov
sub
xor
adc
pop
aam
clc
jo
jmp
dec
and
push
sub
mov
add
repnz
adc
sub
enter
pop
mov
xor
lods
je
dec
js
add
jge
test
jl
ficoms
mov
std
adc
leave
jle
push
cmp
jge
push
imul
in
cld
mov
je
xchg
sub
fdivp
lahf
add
mov
and
stos
repz
fwait
pop
jno
fdivrs
aad
lcall
push
jne
adc
mov
cmp
cld
push
push
int
loopne
lret
pop
sbb
mov
test
iret
std
xchg
and
or
mov
rol
and
test
adc
adc
mov
or
test
dec
mov
fdivrl
sub
fdiv
les
adc
sarb
lret
iret
xchg
push
mov
and
aad
jo
out
pop
stc
lcall
inc
jmp
in
repnz
push
push
mov
push
push
mov
movsl
aam
inc
lock
mov
insb
sbb
push
je
jbe
shlb
lcall
or
lods
prefetch
or
out
in
push
rorl
adc
jg
ret
fdivrl
insl
rcr
and
daa
shlb
xchg
mov
cmc
nop
paddsb
arpl
mov
add
xchg
and
shr
es
sahf
mov
out
xchg
sbb
dec
stos
xlat
pop
fadds
pop
push
fs
in
and
and
and
test
and
and
incb
inc
dec
jne
or
add
push
cmpsl
insl
pushf
inc
and
in
lods
negl
push
xchg
jno
imul
cmc
mov
push
sbb
pop
xchg
add
and
push
orb
clc
fistpll
push
jo
push
call
clc
sti
iret
cmp
sbb
lock
push
sahf
cmpsl
movsb
sahf
bound
cmp
adc
xchg
dec
adc
jmp
sahf
and
dec
imull
dec
rcll
nop
les
cmp
mov
imul
add
mov
jo
cltd
cmp
push
iret
push
dec
fmulp
inc
adcb
outsb
xlat
pop
out
xchg
and
daa
repz
fcomi
dec
movsl
pop
mov
mov
push
arpl
xor
lds
pop
icebp
xor
loopne
stos
fcmovnbe
sub
adc
cmp
push
test
out
inc
insb
mov
dec
fcoms
cmp
lock
lods
sti
add
bound
out
xor
rcll
xor
mov
test
jg
push
adc
cli
jecxz
pop
xor
notl
or
dec
sub
jmp
or
push
scas
int
push
int3
and
pop
xchg
adc
data16
or
sbb
push
dec
push
xor
pushf
push
cmova
adc
jl
call
xchg
ret
xlat
and
xlat
inc
sub
or
adc
xchg
push
inc
adc
filds
cmp
nop
lret
jno
or
ljmp
inc
mov
movsl
mov
jecxz
adc
ret
lcall
gs
xor
inc
dec
cmp
mov
cmpl
adc
dec
aas
in
and
jmp
adc
push
mov
or
ljmp
mul
inc
mov
add
sub
jl
inc
cmp
pop
lret
mov
inc
pop
repz
push
or
adc
mov
dec
push
cmp
lods
into
sub
or
mov
fdivs
or
fdivr
adc
inc
push
loope
js
mov
dec
add
push
xchg
push
lea
cmc
fwait
cwtl
aam
pushf
lcall
call
movb
cmp
add
adc
mov
out
sub
adc
inc
pop
dec
out
push
les
es
xchg
mov
inc
push
xor
jle
es
jo
out
stc
test
xor
lret
mov
clc
outsb
xor
mov
out
cwtl
sbb
adc
lret
dec
jne
arpl
nop
mov
mov
xchg
dec
das
pop
push
mov
adc
jmp
arpl
inc
gs
pop
inc
and
mov
sub
inc
test
scas
out
mov
sub
mov
movsb
push
bound
push
xchg
add
ljmp
scas
and
into
pushf
sub
xchg
dec
mov
xchg
and
and
nop
lea
sbb
call
mov
pop
xor
pop
in
mov
mov
leave
enter
pop
ret
data16
mov
test
movsl
inc
aas
mov
xor
cmp
jmp
jg
mov
ds
pop
jg
sbb
stc
add
insb
adc
cmp
pop
lret
sub
cmpsl
lret
adc
cld
jno
scas
daa
in
xor
imul
sarl
das
andb
stos
adc
notrack
xchg
js
or
mov
xchg
mov
dec
mov
out
or
or
cld
add
mov
into
and
add
or
outsl
pop
shll
mov
cmc
xchg
cld
adc
hlt
xor
or
and
iret
rcrl
testb
call
rcll
je
iret
adc
xchg
mov
jne
fiaddl
je
dec
dec
in
and
cmp
enter
mov
mov
cwtl
pop
cmpsl
cmc
test
test
sti
int
add
cli
frstor
adc
es
and
mov
and
jmp
mov
sbb
jmp
je
test
push
incl
call
es
add
pop
pop
mov
dec
ret
je
mov
cmpsl
clc
dec
xchg
sbb
xor
mov
push
sbb
xchg
push
dec
pop
sub
inc
pop
sub
push
or
sti
mov
jg
sub
out
je
sti
xchg
sahf
pop
mov
and
adc
mov
push
adc
repz
in
xor
out
lods
add
or
insl
nop
test
movsl
pop
inc
daa
loopne
adc
mov
insl
adc
jb
out
or
pop
loope
adc
repz
inc
orl
adc
std
and
push
movsb
inc
dec
jmp
pop
inc
fucomp
dec
jns
mov
xchg
imul
push
mov
aas
mov
mov
pop
push
dec
dec
xor
mov
iret
xchg
call
adc
mov
mov
test
enter
or
mov
jp
cwtl
das
pop
cmp
mov
adc
and
push
mov
sub
pop
fs
mov
inc
dec
je
les
cli
xor
sbb
add
test
dec
inc
push
in
hlt
repz
cmp
sbb
push
or
stc
push
jecxz
xchg
dec
loopne
outsl
subl
hlt
pop
out
sar
idivb
push
scas
adcb
push
jne
inc
dec
sub
int
adc
lock
xchg
and
pop
int3
push
and
pop
ret
and
pop
inc
cmp
dec
push
jecxz
loop
fnstsw
sbbl
xor
gs
aaa
pop
pop
and
sub
rolb
bound
mov
sahf
sub
clc
aad
xor
or
mov
and
adc
daa
mov
aas
lods
cmp
lods
nop
movsb
nop
xor
push
sbb
sbb
imul
push
or
sub
sbb
and
nop
pop
outsb
jbe
in
mov
insl
jmp
test
out
mov
sbb
inc
sbb
icebp
lcall
jge
push
movups
out
dec
xchg
lods
adc
into
in
mov
and
or
jne
jo
and
inc
jle
pop
dec
ljmp
sbb
clc
lcall
mov
jl
adc
repnz
call
adc
xor
or
les
dec
push
cwtl
das
mov
lcall
movb
and
cli
or
mov
std
test
sub
mov
cli
cs
and
mov
push
icebp
out
add
add
mov
push
jge
add
ja
sub
sub
xor
push
push
adc
and
aaa
fs
adc
pop
cld
fsubrl
lock
jmp
pop
xor
in
lods
das
in
and
xlat
out
orb
push
xor
xchg
jno
js
cld
lea
outsl
mov
and
jno
out
jle
test
popa
cli
adc
stc
nop
icebp
les
in
cs
cmp
fcoms
je
jns
into
pop
out
sub
lods
test
mov
pusha
inc
pop
and
dec
and
jl
cmp
ss
aaa
rorb
fsts
push
fmull
add
adc
popa
lret
push
push
aas
loopne
push
addb
add
call
or
loopne
pop
cmc
lods
test
cmc
icebp
and
psubb
sbb
pop
sub
fldenv
in
or
add
shlb
adc
mov
adc
mov
sub
jo
hlt
aam
leave
sub
dec
jbe
adc
movsl
mov
cmp
adc
mov
andb
inc
adc
into
adc
mov
cmp
cmpl
and
loop
adc
stc
dec
and
movl
xchg
aaa
imul
push
into
mov
and
mov
in
mov
pop
add
popf
jl
shrl
arpl
decb
call
add
addl
call
sub
push
repz
sarb
jns
leave
adc
or
notb
xor
inc
dec
inc
enter
test
je
loopne
jnp
fadd
push
mov
cmp
sub
xchg
xchg
xchg
adc
jmp
or
out
ja
cmpl
lods
sub
push
add
int3
adc
inc
test
jne
push
into
call
in
and
sidtl
cltd
xor
mov
loope
xor
mov
in
inc
add
sub
sub
cmp
sbb
leave
sarb
enter
adc
sbb
cmp
mov
jmp
xor
or
mov
or
dec
or
fs
or
adc
or
push
sbb
ljmp
aam
loop
and
test
sub
fmull
mov
adc
push
xchg
call
pop
adc
sub
cmp
stc
dec
mov
add
rorb
jne
loop
push
push
mov
call
mov
test
jb
rorl
test
enter
mov
mov
call
es
inc
mov
cmp
inc
dec
enter
inc
or
jp
add
and
lock
mov
ret
pop
mov
loop
jle
inc
daa
sbb
dec
and
adc
sahf
cld
loop
cmp
and
xchg
inc
xchg
pop
cld
or
and
and
inc
add
clc
add
pop
call
pop
daa
pop
lods
loopne
or
mov
inc
push
cwtl
xor
inc
cmp
call
icebp
mov
loopne
cld
sub
cltd
sub
or
adc
or
or
ret
lods
ficoms
pop
loop
xchg
out
push
mov
sub
or
enter
mov
and
inc
adc
orb
fisttps
and
cmp
or
dec
push
jl
fdivl
cli
xor
mov
xchg
mov
sbb
jnp
and
and
nop
or
aas
push
movsl
push
or
std
or
adc
in
xor
int3
adc
inc
pushf
and
inc
push
popl
movl
int3
dec
inc
add
out
aam
in
mov
mov
sub
inc
hlt
and
xor
adc
std
sahf
loop
mov
pop
sbb
stc
xchg
nop
cmp
xor
or
pop
xchg
dec
jbe
xchg
mov
cmp
push
push
and
cli
push
xchg
adc
arpl
fnstenv
in
or
push
mov
popf
sbb
lea
cmp
sbb
jg
sbb
cmp
dec
dec
or
jp
outsl
lods
inc
dec
xchg
inc
call
ljmp
push
fs
dec
sbb
cmp
xor
dec
and
nop
or
xchg
or
outsb
cli
aad
sub
xor
xor
xor
add
jae
xchg
ret
das
xlat
xor
push
addb
or
mov
pop
mov
push
push
shlb
inc
daa
mov
insl
cmp
cld
add
push
dec
arpl
mov
push
adc
ljmp
fwait
pop
sbb
dec
or
inc
push
jle
cmovbe
and
xchg
cmp
and
lock
test
sub
jb
sub
dec
cvtpi2ps
daa
mov
xchg
pcmpeqb
orl
inc
push
jb
xchg
stc
push
adc
xchg
inc
sbb
jae
cmpsb
in
cld
insb
movsl
mov
pop
jbe
dec
or
test
clc
jg
adc
and
bound
popf
insb
or
or
xor
dec
pop
pop
push
pushf
and
xchg
xchg
fstpt
scas
cmp
mov
xor
ret
jmp
xchg
adc
bound
sti
dec
adc
mov
dec
call
call
adc
push
jo
push
mov
sbb
push
orl
les
and
inc
inc
and
xchg
cld
mov
icebp
call
pop
mov
cmp
inc
fcoms
push
inc
ja
dec
idiv
movsl
adc
push
std
sbb
push
pop
lea
mov
lock
push
aad
push
in
push
xchg
ljmp
or
call
cltd
inc
pop
mov
cmpsl
mov
cmp
jg
xchg
cwtl
sbb
fldcw
nop
sbb
sbb
xchg
cmpsl
push
sbb
imul
xor
sbb
and
xor
jecxz
mov
sub
inc
sub
adc
xorl
mov
mov
push
sub
sub
out
enter
inc
call
in
push
rorb
mov
clc
sbb
and
or
pop
mov
dec
push
jp
push
adc
sub
es
mov
push
dec
inc
imul
test
adc
insb
and
imul
fcoms
cmp
inc
and
sbb
gs
out
lea
push
mov
dec
xchg
push
mov
add
lret
push
es
inc
mov
adc
add
sub
lcall
sub
sub
sub
call
mov
xchg
pop
out
int3
data16
cwtl
push
adc
jl
push
push
adc
push
xchg
in
add
sbb
adc
push
push
mov
fsubrl
ljmp
xchg
fdivrs
out
in
mov
and
ret
xor
xor
or
xchg
inc
sub
ljmp
jmp
sub
stos
dec
mov
mov
out
inc
xchg
adc
scas
in
pop
das
jmp
fists
adc
ljmp
xchg
dec
ljmp
dec
lods
lea
xchg
sub
lcall
jne
aam
push
xor
sbb
and
inc
repnz
outsb
aam
inc
jno
movsb
das
inc
sbb
inc
out
dec
lods
aam
dec
sbb
les
sub
xchg
push
mov
pop
xchg
add
data16
insb
xor
push
int
add
cmp
add
rcrb
in
add
in
fisubl
mov
and
fmuls
lods
mov
add
inc
ja
mov
js
inc
or
adc
and
ja
cwtl
add
jbe
inc
adc
cmpl
add
sbb
and
mov
rorb
sub
cmp
sub
movsb
movups
inc
call
repz
data16
push
arpl
stos
mov
xchg
mov
push
jmp
pop
psadbw
cwtl
add
hlt
aam
dec
add
call
adc
and
pop
mov
in
adc
pop
cmp
inc
inc
sub
push
adc
pop
dec
stos
or
stos
push
dec
in
sub
mov
xchg
mov
pop
sub
or
or
pop
mov
sbbb
sahf
inc
pop
and
popa
loope
mov
dec
mov
or
jbe
aad
xor
call
stos
mov
xchg
stos
dec
push
je
outsl
push
and
xchg
cmpsb
push
or
fbld
and
push
repnz
addr16
jbe
cld
xor
mov
sbb
mov
xchg
sbb
orl
mov
les
popa
repz
mov
mov
cmp
cli
fnsave
enter
sbb
lods
fnsave
mov
sbb
lods
adc
xor
mov
or
jp
fisubs
and
inc
jne
test
and
inc
and
adc
push
mov
out
adc
test
jge
mov
jae
and
jl
mov
imul
add
cmp
and
loope
nop
enter
adc
sub
adc
fistpl
out
je
push
adc
mov
std
xchg
cmpsb
sbb
adcl
aas
loope
dec
dec
jl
cmp
mov
mov
cltd
std
cld
mov
mov
mov
add
fs
sub
inc
out
xchg
push
jae
jo
jl
sti
dec
push
pop
je
hlt
push
or
mov
mov
fcoml
clc
and
adc
sbb
pop
add
clc
mov
inc
mov
cmp
mov
ret
mov
sbbl
adc
sub
cmp
jmp
js
cmp
imul
xor
sub
cmp
jl
mov
or
bndldx
and
mov
lret
add
aad
jmp
out
aas
adc
inc
sub
jge
inc
adc
call
fs
stos
arpl
outsl
decb
mov
adc
jae
push
jl
ficomps
adc
push
inc
addps
test
lea
jmp
ss
mov
adc
in
mov
movsl
cmc
xor
jne
loopne
fcompl
and
clc
lret
pop
jl,pn
das
jle
fs
es
fnstsw
fs
xchg
dec
fcoms
or
fistps
push
inc
or
adc
sub
xor
dec
shr
cmp
mov
inc
aaa
iret
sbb
ja
cs
adc
jmp
int
jge
std
adc
mov
arpl
rcll
jae
insl
je
push
and
daa
fldl
add
adc
pop
fadds
sahf
fisttps
jb
je
or
sub
cmpb
dec
test
lret
lods
lcall
int3
test
mov
or
roll
lret
in
ficoms
adc
ljmp
mov
cmp
adc
les
pop
into
loopne
cli
and
push
in
lahf
leave
jae
adc
or
dec
push
cmp
mov
cmp
pushf
adc
sbb
and
popl
adc
and
push
and
push
adc
bound
xchg
sbb
and
mov
and
enter
add
push
dec
jmp
lret
lcall
cmpl
ja
xor
push
sub
or
subb
call
mov
xchg
repz
push
lcall
pop
cld
gs
jmp
popa
stos
xchg
loope
test
aaa
lahf
pop
push
push
mov
xchg
sub
or
push
pop
and
dec
in
adc
inc
cld
stos
jecxz
sub
xor
sub
dec
sbb
inc
adc
clc
mov
or
or
popa
inc
cld
repnz
inc
xor
dec
jl
xchg
adc
test
mov
mov
xchg
call
xchg
scas
pusha
xchg
push
nop
pop
push
add
mov
popa
aas
mov
pop
and
adc
jo
sub
cli
inc
fadd
sbb
mov
add
mov
sbb
shrl
add
mov
add
les
or
adc
adc
sbb
pop
repnz
divb
sbb
xor
push
pop
cmpb
adc
lcall
pop
xor
jmp
ljmp
test
dec
mov
mov
icebp
hlt
xchg
or
out
bound
jge
sbb
cltd
fs
pop
jge
outsb
adcb
hlt
inc
push
subl
and
bound
je
xchg
push
fisubrs
adc
into
sbb
clc
adc
test
lods
push
call
adc
cmc
xor
fdivs
negb
dec
mov
out
cs
push
insb
sub
loop
repz
movsb
cltd
cli
mov
sub
push
cld
test
add
lahf
adc
add
cmpsl
xchg
test
add
test
inc
and
jle
add
or
add
les
test
dec
lock
mov
push
mov
clc
dec
jbe
dec
xor
and
gs
mov
in
or
sub
out
jnp
and
adc
or
add
and
and
pop
adc
sbb
and
inc
add
inc
pop
dec
lds
orb
daa
dec
int3
dec
repz
pushf
jg
sub
mov
inc
cwtl
pop
movsb
sub
pop
adc
enter
lds
ljmp
test
pop
adc
movsl
lods
icebp
jns
fiadds
adc
push
add
cli
jne
test
pusha
adc
inc
sbb
or
jl
adc
push
cltd
adc
inc
into
cmp
pop
cmp
pop
jg
xor
cmp
or
test
pop
dec
jo
cmc
mov
xchg
or
or
and
push
xchg
repz
dec
loopne
test
add
pop
and
adc
jmp
xor
dec
adc
xchg
inc
out
and
add
cmp
pop
jbe
jle
lea
jl
cli
and
cwtl
push
mov
xor
inc
rol
movsb
add
mov
cmc
add
idivl
inc
add
iret
and
lods
and
or
movsb
cmp
adc
test
mov
leave
add
mov
repz
cmc
mov
mov
inc
xchg
adc
mov
cmp
daa
addb
shlb
sub
sbb
lea
push
mov
push
inc
cmp
push
hlt
and
adc
clc
adc
add
js
decl
in
sub
jmp
movsb
jle
loop
adc
insb
je
test
xor
pushf
fbld
bound
jb
push
enter
das
adc
jle
inc
and
dec
ds
or
dec
inc
xchg
dec
test
lock
dec
lea
adc
xchg
sub
cld
sbb
push
movsb
xor
sti
sub
cmp
dec
cmp
add
and
mov
out
mov
xchg
dec
push
or
insb
cmc
xor
or
enter
jo
loope
mov
mov
adc
loop
cmp
jg
xorb
push
ja
pop
push
xchg
push
mov
xor
jae
ja
mov
cwtl
sahf
fs
xlat
push
cmpsb
sbb
pushf
lods
dec
mov
clc
lret
pop
cmp
in
xchg
sub
xor
jns
jp
adcb
push
mov
push
mov
inc
test
scas
cmp
adc
int3
jecxz
fwait
or
jne
or
xchg
add
jmp
sub
xchg
or
ret
adc
pop
sub
jmp
scas
and
pop
jmp
sub
mov
loop
divb
pushf
push
pop
movsl
enter
js
mov
add
adc
sub
push
nop
adcl
test
cli
pushf
in
inc
sbb
adc
pop
mov
push
ret
outsl
jge
xchg
xor
sbb
push
mov
pop
inc
lea
adc
in
cmc
xchg
push
or
inc
lea
mulb
add
lock
adc
push
mov
xchg
ja
movsb
ds
dec
mov
lea
or
push
jg
jge
push
adc
cmp
or
int
call
xor
cmp
xor
xlat
cmpb
mov
inc
dec
stc
inc
and
push
and
inc
call
xchg
out
ret
mov
jmp
cmp
insb
inc
vhsubps
dec
jns
add
aam
shll
inc
or
pop
dec
pop
push
and
mov
dec
pop
cmc
cmp
pop
and
lds
adc
test
loop
jmp
mov
call
jae
xor
mov
jnp
add
leave
inc
cs
inc
mov
movb
mov
das
sub
aam
inc
or
push
push
mov
jnp
aas
or
cmc
sub
cltd
adc
decl
jp
xor
jne
and
cmp
and
push
adc
adc
push
test
dec
xor
add
call
ja
fildll
negb
inc
mov
mov
ret
push
rorb
inc
or
sub
enter
jno
pop
arpl
sub
push
dec
cmc
push
test
sbb
cs
adc
fcomi
leave
xlat
idivl
rcrl
lods
lret
movsb
add
cli
adc
pop
adc
push
push
push
mov
mov
push
mov
and
test
adc
dec
lea
mov
aaa
mov
push
jg
adc
adc
mov
push
test
pop
sub
sub
popa
rol
push
nop
lods
sbb
push
dec
aaa
sbb
ljmp
dec
sbb
fcompl
in
or
stc
adc
mov
fidivrl
add
or
loope
and
loope
pusha
add
or
or
sbb
nopl
adc
in
mov
subl
push
and
sbb
je
push
push
jmp
xchg
jne
imul
xchg
insb
aam
pop
push
inc
repz
xor
lods
xchg
or
cld
pop
dec
sarb
call
cmpsb
adc
je
test
cld
add
and
add
xor
rolb
jmp
repnz
scas
les
adc
aad
cld
and
clc
or
incl
dec
jp
rclb
dec
mov
adc
loopne
push
jg
push
sbb
sbb
mov
ret
mov
dec
cmp
and
mov
mov
cmpl
hlt
addb
mov
cmpsl
jle
push
aam
out
jge
pusha
dec
icebp
scas
push
jecxz
je
out
mov
and
xchg
loopne
sub
add
add
aas
fs
or
icebp
fstp
dec
xchg
aas
lds
mov
leave
inc
daa
shl
mov
push
push
lret
iret
leave
lret
ja
shlb
and
ficompl
jge
nop
cmpsl
jle
inc
dec
je
addl
sub
pop
adc
sub
leave
dec
or
jge
fisttps
sbb
cs
mov
outsl
in
inc
mov
fld
or
dec
push
lods
dec
in
push
xchg
icebp
cmp
fs
pop
sub
xchg
and
sub
test
and
ret
adc
cmp
jle
jo
sub
mov
push
add
xor
in
mov
nop
dec
stos
mov
inc
push
jge
scas
push
cmp
cmp
jle
cmpsl
adc
cmp
xor
sub
clc
push
test
insl
sub
hlt
jecxz
test
dec
pop
daa
push
jle
in
dec
dec
jbe
or
lahf
sar
in
sub
aaa
and
nop
sub
shlb
mov
ret
lahf
std
pop
out
push
and
push
cmp
cld
and
mov
js
sub
pop
adc
mov
fucomi
nop
fmul
jp
outsb
jo
push
mov
and
inc
ja
mov
or
dec
and
xchg
mov
and
xchg
lock
cmp
mov
roll
xchg
mov
cmp
xchg
loop
xlat
or
stos
shl
cli
lahf
push
arpl
loop
dec
or
adc
and
push
push
cmp
int
js
jne
cld
push
stc
cld
dec
std
mov
and
cmp
loop
mov
jne
and
inc
cmp
mov
pop
clc
jo
fildl
mov
jmp
inc
jno
xor
test
dec
add
add
mov
inc
and
mov
je
rorl
ret
jno
sti
dec
leave
and
inc
pop
push
sbb
mov
mov
fcomps
cld
sub
adc
lret
test
inc
clc
dec
pop
sub
jl
pop
inc
mov
mov
test
scas
mov
adc
lret
in
push
adc
sbb
and
jmp
je
mov
ror
dec
or
rolb
bound
add
cmp
jg
jmp
or
frstor
add
ret
lcall
clc
xor
jno
das
in
jp
out
xchg
cltd
les
rorb
cmpb
pop
inc
aam
ds
pop
jmp
push
addr16
lock
dec
cli
mov
mov
je
push
mov
outsb
lds
ljmp
pop
in
cmp
mov
adc
cwtl
or
inc
lods
mov
or
movhps
sub
and
sbbl
les
clc
jl
and
push
adc
mov
pop
bound
push
daa
rcr
outsl
cmpsb
mov
mov
inc
hlt
pusha
push
fcmovnb
add
or
pop
jle
mov
hlt
dec
push
xchg
pushf
sub
mov
xor
dec
pop
xchg
test
xchg
inc
shl
or
adc
sub
daa
jmp
loop
stc
in
cmp
lret
movsb
in
adc
and
push
popf
fidivs
dec
jl
js
loopne
sub
jae
inc
sub
inc
mov
adc
or
mov
ficoml
pop
xor
sub
adc
jg
pop
xchg
mov
adc
loope
in
mov
sub
mov
push
das
popa
push
push
popa
lea
aas
push
mov
fs
push
mov
loopne
jne
out
jle
ret
stc
sub
cmp
xchg
loopne
cmpsl
sub
aas
test
mov
lret
xor
es
inc
mov
push
xor
sub
stos
fcomps
adc
shr
imul
call
js
test
sub
inc
push
cmp
and
pop
xor
dec
sub
mov
push
add
or
mov
popf
pop
and
mov
js
or
inc
or
je
fwait
add
movsb
daa
clc
mov
adc
add
lea
xlat
or
mov
aas
rol
lret
pop
ds
sub
loopne
xor
and
jnp
jne
inc
sub
jg
sbbb
jmp
sbb
sbb
ss
fsts
lods
call
loop
sbb
jae
xchg
and
in
jmp
lods
out
fimuls
aad
out
add
test
sbb
dec
fstpt
movsb
aam
push
loopne
in
je
popa
lods
sbb
pop
cmp
imul
call
shlb
sub
and
clc
scas
pop
pop
xchg
adc
jae
or
lock
fmull
push
or
inc
adc
mov
mov
adc
sbb
adc
call
sbb
stos
movsb
mov
dec
stos
mov
inc
in
and
or
sub
pop
out
nop
leave
imul
and
sbb
sub
dec
or
les
fwait
in
rcr
xchg
and
xor
or
and
inc
sub
les
xchg
mov
add
cli
add
sbb
dec
enter
inc
adc
xor
and
hlt
dec
test
xor
sbb
roll
and
shll
aaa
xchg
mov
pop
and
in
mov
pop
notb
imul
mov
mov
xor
xchg
adc
cmpsb
mov
cmp
mov
neg
aas
pop
ret
loop
stos
aas
inc
es
nop/reserved
or
arpl
xchg
and
das
jo
daa
mov
push
inc
arpl
das
cmpsb
jmp
add
call
adc
inc
loop
shrd
adc
mov
xchg
cmp
inc
mov
and
popa
or
call
rcrl
cmp
jmp
movsl
daa
nop
cmp
lods
dec
shl
mov
inc
mov
dec
xlat
outsl
push
mov
xor
in
sub
mov
test
xchg
mov
cld
test
pop
in
mov
sbb
fiaddl
sbb
cmc
out
push
inc
cmp
out
mov
and
sub
xchg
ja
call
sub
xorb
mov
sub
clc
ja
into
xor
mov
sahf
jae
fsubp
rcll
std
sti
xor
or
idivl
sub
or
jge
loop
dec
shrl
sub
push
add
jge
cwtl
adc
mov
cmp
negb
sub
test
push
enter
inc
dec
adc
dec
dec
enter
mov
jb
les
test
in
test
or
scas
and
bound
hlt
or
cmpsl
es
push
sbb
sub
leave
fcoml
out
cwtl
push
inc
xchg
mov
add
aam
enter
push
dec
mov
adc
xchg
out
mov
dec
adc
out
cwtl
insl
out
and
clc
rcrl
or
and
and
imul
sub
bound
pop
bound
or
mov
push
sbb
pop
cmc
inc
push
sub
xchg
xchg
lods
daa
dec
shll
je
daa
insb
cvtps2pd
lods
push
jl
out
lds
jecxz
insl
hlt
sti
mov
les
cmp
or
push
pop
lea
mov
cli
mov
xchg
and
push
adc
ja
cmpsb
pop
clc
xor
fcoml
mov
fst
push
daa
aad
scas
fldl
mov
sbb
jbe
mov
cltd
mov
sub
nop
and
enter
pop
mov
movsb
movsl
push
or
sub
mov
or
and
mov
dec
es
push
inc
scas
push
and
fs
xor
xor
test
enter
xor
cli
setge
clc
mov
and
mov
jo
add
outsl
testl
lahf
or
out
inc
add
adc
pop
mov
sub
jg
mov
lock
xlat
push
scas
sub
sub
pop
movsl
xor
sub
cwtl
pop
xor
inc
xor
pop
les
xor
inc
inc
and
and
ret
push
hlt
sbb
lods
imul
jg
ja
push
gs
js
sub
and
lods
mov
fmul
je
pop
shlb
xor
daa
push
fadds
and
cmp
mov
jl
mov
mov
xchg
notb
jg
aas
testl
out
push
je
adc
pusha
fs
add
or
aam
mov
repnz
inc
hlt
negl
lods
inc
adc
pop
nop
loopne
clc
inc
in
push
stos
xor
jge
sbb
test
cmp
xor
arpl
mov
push
fwait
sti
divb
push
mov
aaa
xchg
xchg
jae
movsb
push
dec
mov
pusha
movsl
and
out
mov
pop
xchg
sbb
nop
jp
fcmovnb
les
ret
pop
inc
sub
xchg
push
cmp
cmc
adc
cmp
jne
pop
or
mov
cmovle
dec
mov
repnz
xchg
pop
aad
mov
test
aas
jl
pushf
leave
loopne
dec
clc
cmp
hlt
and
push
in
leave
fiadds
dec
sub
sbb
popf
stos
hlt
xchg
push
cld
in
cmp
cmp
das
pop
lahf
xchg
dec
push
fidivrs
mov
mov
sub
stc
jge
loopne
jmp
mov
lods
dec
jecxz
jge
sub
sbb
test
ret
sub
jp
clc
or
jne
and
add
sar
call
push
cs
add
or
sbb
jp
xor
mov
sub
loope
sub
mov
test
lds
or
push
add
xor
inc
push
jle
pop
pop
add
je
mov
inc
cld
cmp
mov
ljmp
imul
lcall
std
notl
je
inc
inc
or
pop
inc
inc
xor
imul
xchg
mov
jg
pop
daa
or
xor
fmuls
sti
fadds
jns
stc
aas
mov
mov
cmp
je
push
jmp
in
movsb
xchg
aaa
clc
out
mov
mov
jl
test
test
dec
sub
pop
leave
lea
cmp
sbb
cld
cli
sub
mov
test
push
mov
sub
imul
mov
mov
push
mov
and
lret
mov
push
aas
mov
mov
and
pop
adc
inc
mov
add
pop
imul
adc
xor
lods
xchg
mov
mov
jge
stos
jno
jl
sub
xchg
mov
cmpsl
push
adc
lret
clc
cmp
lret
cli
das
inc
jno
loop
mov
add
sub
std
mov
fs
mov
push
add
push
mov
fs
xchg
out
mov
mov
mov
loope
fsubs
test
mov
cs
test
jmp
hlt
mov
cli
mov
cmp
fucomi
or
cmpl
xchg
dec
movsb
int3
nop
fldl
xchg
xor
mov
sahf
jns
stos
push
pop
pop
push
jb
mov
insb
and
sar
in
inc
out
or
jae
and
cmp
sbb
jp
dec
push
mov
repz
pop
pop
ret
mov
fsubr
loop
xchg
mov
cmp
sbb
push
lock
xor
clc
ret
aam
dec
cmp
mov
push
inc
inc
ret
stc
adc
pop
push
ret
cmp
push
jb
xor
shrb
push
int
push
data16
inc
and
push
lcall
sbb
xor
dec
sbb
mov
neg
testb
mov
orb
sub
adc
xor
adc
adcb
adc
scas
push
pop
jo
and
ret
in
mov
nop
dec
shl
out
jl
test
dec
mov
jb
push
dec
je
jmp
std
repz
scas
xor
out
mov
jb
inc
daa
adc
add
lods
add
push
inc
push
rorl
mov
and
xchg
lret
cltd
loopne
push
outsb
cmp
movsl
fwait
xor
ja
jo
fdivl
std
jnp
scas
and
sti
in
xor
mov
les
in
lahf
and
xor
loope
xchg
int3
neg
and
dec
pop
cmp
sti
or
and
orl
das
mov
sbb
sbb
adc
sbb
adc
and
out
and
or
and
loope
test
push
push
insb
or
add
sbb
lcall
fistpll
clc
not
into
jno
mov
cs
pop
loopne
push
push
sub
test
pop
cltd
pusha
sub
xor
pop
or
inc
xor
enter
test
pop
lods
adc
hlt
notl
add
addl
mov
inc
add
call
testl
mov
clc
jb
adc
and
jae
and
push
mov
pushf
pop
sti
sub
rclb
mov
xor
nop
sbb
mov
xor
jg
in
xchg
arpl
xor
xchg
fs
xor
in
lock
gs
sub
add
push
xchg
or
imul
or
leave
push
inc
lock
xchg
je
pop
outsl
dec
int
mov
pop
mov
and
xlat
xor
cld
lret
lods
fstl
hlt
pop
cmp
inc
aam
inc
adc
cmp
sub
fsubl
fsts
adc
mov
cmpsb
push
adc
pop
leave
pop
cld
dec
cltd
push
lods
xor
and
cs
pop
scas
push
mov
pop
dec
loope
jnp
fmul
and
sub
inc
push
and
inc
adc
add
aas
sbbl
and
inc
js
xchg
mov
xor
inc
dec
or
test
pop
sti
cld
stos
mov
fnstenv
mov
into
decb
test
shlb
nop
adc
cmpsl
push
mov
adc
mov
enter
mov
pop
rcll
and
push
push
push
or
add
or
or
pop
lock
adc
cmp
sub
repnz
pusha
inc
mov
push
dec
sub
frstor
sbb
fisubrs
in
mov
adc
or
pusha
or
sar
sub
add
cwtl
and
movsl
xor
in
push
fisubs
call
push
inc
or
les
movhlps
sub
test
in
mov
inc
push
add
dec
cmp
fisttpll
push
aas
mov
cltd
das
iret
push
mov
andl
gs
or
sub
imul
je
adc
sub
fs
inc
jb
adc
pop
mov
or
mov
push
loope
dec
rolb
mov
mov
dec
mov
mov
cs
fs
lret
inc
dec
test
addl
roll
cs
inc
jl
ret
pop
cmc
push
add
mov
adc
dec
mov
xchg
scas
xchg
loopne
push
call
xchg
shrl
loop
dec
mov
sbb
pushf
clc
jl
pop
icebp
int3
pop
sub
insl
rcl
loop
loop
push
xchg
push
jmp
mov
js
icebp
and
jne
es
scas
and
and
adc
adc
aas
sub
adc
sub
xchg
pop
or
inc
pop
das
xor
fsts
addb
scas
mov
mov
sar
ja
addl
push
and
or
inc
clc
movb
add
xchg
push
popa
pop
xchg
rorl
mov
jecxz
repnz
fnstenv
inc
js
popf
cli
cmp
subb
mov
inc
and
xor
or
mov
les
push
mov
xor
mov
or
jno
std
adc
cmp
jne
mov
or
stos
inc
add
xchg
stc
mov
mov
mov
lds
lcall
aad
cmp
cmpsl
cmp
adc
out
daa
lret
adc
inc
inc
and
push
movsl
sbbb
jmp
in
sub
jno
jbe
inc
scas
push
insl
sub
dec
movsl
ds
xlat
sub
inc
xlat
popa
lret
mov
leavew
adc
adc
es
not
sub
adc
into
ret
mov
inc
movq
icebp
orl
jg
hlt
testl
divl
lret
test
sub
sub
or
mov
das
out
or
lock
mov
mov
jmp
dec
and
sbb
test
dec
test
popa
fisttpl
jge
pop
dec
dec
push
xlat
sarl
jl
or
xlat
xchg
dec
sub
adc
push
movsb
and
xchg
imul
inc
xchg
pop
mov
jg
xor
jl
and
adc
adc
sub
loop
clc
dec
adc
and
movsl
xor
inc
das
sbb
and
jno
sbb
or
test
loope
enter
push
dec
sub
mov
dec
cmp
sub
and
idivl
dec
repnz
cld
inc
mov
pop
je
jae
adcl
cmp
xchg
inc
or
mov
js
mov
mov
dec
cli
int
in
inc
mov
adc
lods
jmp
stos
xor
fcmovbe
adc
lods
fwait
addb
add
jb
fists
mov
push
or
sub
cmp
mov
xlat
sbb
pop
movsl
mov
imul
mov
dec
or
repnz
mov
je
and
cmpsb
mov
stos
cmp
mov
popf
push
mov
pop
cwtl
jl
loope
mov
in
inc
repz
testl
jb
sbb
repnz
pop
inc
mov
push
mov
cli
sub
pop
sub
and
testl
and
inc
xor
sbb
sbb
ljmp
and
cli
mov
mov
clc
in
hlt
lret
jmp
push
mov
inc
add
ljmp
fsubl
cmp
and
mov
stc
dec
or
jmp
test
rclb
es
pop
cwtl
sub
lock
pop
push
xor
out
push
fisubrl
ljmp
push
sbb
push
dec
adc
cmp
test
cltd
dec
insb
mov
mov
ljmp
icebp
cmpl
or
and
sub
out
adc
pushf
mov
adc
sbb
in
push
and
mov
lock
out
clc
mov
sub
int
jg
sub
call
adc
sbb
mov
push
stc
mov
cmp
add
mov
sub
sbb
adc
or
in
rorb
adc
mov
xor
push
xor
rcr
scas
and
ljmp
ficoms
pop
lods
decl
cld
adc
or
pushf
rorl
xor
call
sub
jnp
cmp
xchg
xor
fucomip
aad
inc
jl
jl
sti
or
mov
lahf
sbb
mov
in
jecxz
in
in
mov
add
pushf
mov
mov
dec
aad
lods
sti
mov
mov
std
movsb
cmp
mov
inc
push
inc
aad
icebp
lcall
sub
jne
mov
add
in
push
mov
loop
adc
adc
imul
dec
pop
jmp
and
sbb
or
pushf
or
cwtl
push
int3
inc
inc
mov
stos
loope
push
dec
or
lea
jl
cmp
cwtl
aaa
push
inc
or
xchg
add
cmp
mov
pusha
lods
jle
jmp
xchg
rcrb
mov
mov
lret
daa
mov
out
or
and
imul
les
mov
dec
pop
adc
mov
dec
and
sub
hlt
lea
out
inc
loopne
and
sub
or
jns
or
and
mov
xchg
or
and
and
nop
mov
addb
enter
push
mov
or
cmp
icebp
sti
adc
das
fisubrs
pop
push
jb
inc
mov
dec
popa
ja
ljmp
imul
and
pop
add
inc
push
inc
push
push
adc
and
pop
dec
xchg
jg
ret
mov
cmp
push
xor
jae
sub
xor
popa
dec
insb
imul
pop
cwtl
out
inc
sub
adc
pop
inc
mov
dec
push
imul
dec
jne
movsl
cmp
imul
imul
jg
mov
or
out
arpl
sub
dec
mov
pop
mov
mov
repz
sub
dec
lea
push
add
scas
push
addl
ds
insb
pop
push
mov
jge
xchg
cmc
push
ljmp
mov
inc
in
mov
adc
inc
push
mov
rcrb
sub
hlt
lods
or
or
test
or
mov
mov
and
scas
mov
xchg
mov
cmp
ficoms
loop
out
adc
or
push
test
bound
imul
int
and
mov
mov
xor
inc
adc
xchg
dec
sti
loopne
stos
pop
cwtl
sahf
lea
push
int3
sti
inc
xor
adc
xchg
adc
test
pushf
test
dec
gs
out
js
lock
aad
loop
gs
push
insb
dec
arpl
fsubs
test
pop
lret
aad
in
mov
aam
clc
and
fmuls
cmp
jmp
fadds
mov
and
mov
lds
hlt
mov
jne
mov
pop
lea
dec
mov
xchg
dec
pop
stc
push
xchg
lcall
ss
call
add
or
mov
jae
adc
push
or
xchg
int
xchg
jb
fiaddl
dec
pop
shl
mov
xchg
insl
xor
ja
dec
jge
rclb
inc
dec
xor
jns
mov
lods
push
inc
add
stos
inc
add
loopne
adc
cmpl
fcom
sub
cmp
sub
cli
aam
rcrl
mov
jo
adc
sub
les
roll
testb
idivl
mov
fs
push
sti
leave
lock
in
jmp
inc
lods
xchg
xor
xor
pop
sub
xor
scas
in
push
inc
inc
popa
movsb
and
mov
movsb
rclb
jge
and
sub
stc
dec
xor
das
pop
data16
xlat
sti
mov
adc
pop
jbe
mov
inc
adc
mov
mov
sub
lods
int3
cmp
sti
orl
cli
xor
dec
in
lea
lds
mov
jmp
ror
pop
lods
mov
lahf
roll
in
cmp
mov
jno
notb
nop
in
into
cs
enter
scas
cmp
loop
out
loope
aam
outsl
pop
insb
sti
xor
and
mov
adc
inc
push
je
mov
dec
mov
lock
inc
pop
xchg
mov
cmp
test
pop
xchg
aam
adc
stc
clc
or
sub
mov
cmp
cltd
mov
pop
sub
jle
les
pop
shl
mov
push
lahf
call
push
pushf
js
out
mov
popf
pop
push
shl
pushf
bound
mov
sbb
sub
xor
or
in
sub
movsl
mov
push
sbb
xchg
mov
pop
dec
movsl
loope
xor
push
fstl
mov
lea
or
lock
idivb
cmp
xlat
imul
enter
jg
xchg
bound
test
jne
das
bound
ja
mov
push
fldenv
xchg
and
bound
dec
pusha
imul
outsl
xchg
cld
mov
adc
call
imul
fistl
hlt
lret
pmaxub
mov
inc
or
loope
or
test
pop
pop
jnp
inc
or
std
pop
inc
movsb
call
push
cmc
pushf
xor
in
mov
push
inc
pop
fs
out
hlt
jnp
and
divl
aam
lcall
cmp
scas
lahf
sub
adc
aam
stc
mov
in
imul
cmpsb
inc
arpl
pop
sar
popa
and
in
bound
popa
push
xor
push
and
lahf
dec
mov
inc
inc
mov
mov
sub
clc
adc
adc
in
cmp
lods
mov
outsl
jno
movsb
mov
pop
loop
inc
add
repz
inc
roll
lahf
adc
int3
mov
adc
jge
setb
daa
jg
mov
cmp
or
jnp
mov
testl
cmp
shr
je
inc
inc
andl
nop
es
or
jo
dec
xchg
dec
sub
lret
cmpsb
mov
inc
mov
push
fsubs
sub
xchg
aaa
push
mov
jmp
subl
and
mov
xor
xlat
ficoml
push
push
xchg
sbb
sub
sub
push
cmpsl
popf
aam
aas
xchg
or
jle
sub
push
jg
mov
or
and
je
adc
cld
enter
sti
test
pop
and
push
and
mov
pop
lock
inc
push
dec
pop
cmp
jne
outsb
popf
in
push
outsb
push
fildll
fbld
mov
incl
lret
mov
nop
call
mov
out
lods
jo
lahf
pop
inc
dec
mov
inc
adc
ret
sbb
mov
adc
pop
les
jge
test
cmpsb
xchg
sub
add
push
push
les
and
sar
mov
inc
adc
inc
dec
push
fsts
rorb
inc
arpl
pop
inc
jae
xchg
or
cmp
dec
xlat
testl
adc
inc
cmp
adc
in
adc
push
int
mov
das
xor
mov
inc
imul
inc
mov
and
fcmovu
inc
mov
push
xchg
in
cmp
jl
movsb
lods
sbb
pusha
repz
enter
push
int3
enter
jle
leave
loop
cltd
xchg
sbb
sub
lock
inc
cli
mov
inc
dec
insb
gs
jg
rorb
pop
inc
and
mov
or
mov
adc
mov
mov
and
sbb
pop
lods
push
stos
xor
push
hlt
xor
or
adc
or
xchg
mov
test
or
clc
hlt
xchg
nop
loope
jb
adc
adc
insb
and
rorb
add
je
popa
insb
stos
mov
dec
loopne
pop
xchg
in
and
nop
aam
jmp
lret
pop
mov
mov
mov
sbb
jp
mov
add
mov
sub
and
add
je
cmp
fcoms
hlt
sub
sti
xlat
dec
stc
jecxz
sub
pop
dec
sbb
call
mov
xor
adc
adc
inc
push
mov
inc
add
sbb
int
popa
dec
xchg
xlat
cmp
mov
lahf
cmpsl
xchg
arpl
jae
xchg
imul
add
loop
inc
pushf
fldt
pop
out
ret
cmp
push
inc
jno
jp
mov
xor
notl
ret
mov
adc
cmpsb
incl
inc
ljmp
cmp
cmp
loope
pop
adc
or
in
mov
cld
call
and
push
lock
adc
lods
cs
inc
inc
xor
mov
push
or
cltd
sub
enter
aam
mov
pushl
rolb
sbb
mov
or
pusha
push
in
mov
nop
test
test
and
adc
daa
pop
inc
shlb
movsb
adc
or
mov
mov
mov
outsb
jae
jle
arpl
imul
jp
arpl
mov
push
clc
jb
rolb
icebp
dec
pushf
dec
jae
cmp
sub
sbb
sbb
push
dec
pop
push
sub
pop
inc
xor
xchg
jo
adc
mov
xchg
xchg
je
add
dec
pushf
lock
lea
mov
add
jns
addb
out
sub
xchg
xchg
or
adc
loop
cli
popa
push
ficoml
mov
adc
push
stos
or
call
mov
fucomi
and
jnp
push
in
daa
loopne
sbb
out
dec
fistps
mov
sub
dec
fnstenv
mov
fldenv
outsb
fists
or
push
sar
and
fcoms
std
fistpl
push
fs
sub
mov
adc
jmp
lcall
adc
movzbl
add
scas
adc
dec
shlb
push
fstl
add
push
adcl
mov
fildl
inc
push
add
shrb
jg
out
test
sti
sub
hlt
or
dec
adc
icebp
bound
inc
or
mov
outsb
cltd
cmp
sub
or
xchg
jmp
insl
rcll
loop
out
sub
imul
or
push
gs
sub
sub
nop
rolb
inc
sub
loope
sub
lret
outsl
pop
std
or
push
and
js
push
push
push
mov
push
adcl
addl
inc
mov
mov
adc
inc
ds
or
lret
imul
popf
popa
push
loopne
adc
pop
xor
xor
adc
loop
push
or
repnz
or
jbe
orl
mov
rorl
pop
xor
dec
add
sbb
sti
pop
jne
xor
rolb
aam
jge
xor
icebp
and
leave
sbb
loop
std
loope
lea
and
inc
or
mov
push
add
lret
aam
mov
ds
fidivrs
inc
fs
add
loopne
mov
dec
pop
stc
pushf
cmp
pop
jne
mov
push
mov
cli
add
lea
call
pop
stc
movsl
adc
dec
or
pop
sub
add
push
push
sub
pop
insb
test
adc
dec
cld
cmp
stc
es
and
xchg
aad
fildll
enter
jno
push
or
pop
jbe
ficoml
mov
sbb
adc
dec
or
inc
arpl
jns
std
fnstcw
xor
cmc
in
nop
imul
gs
hlt
inc
rorl
add
les
sarl
call
test
push
call
inc
jg
pop
add
nop
xchg
mov
add
call
mov
mov
xchg
sub
int3
push
test
mov
inc
lret
out
or
add
push
push
fiadds
pusha
add
xchg
mov
xchg
aaa
aas
imul
iret
shlb
xchg
xchg
cwtl
cmp
jne
lret
leave
pop
cmp
add
mov
sti
adc
jno
add
out
and
and
xchg
adcl
jnp
inc
jbe
mov
sbb
aas
mov
push
int3
cmp
or
inc
cld
jmp
popa
das
mov
push
lea
jmp
adc
mov
mov
inc
rolb
push
add
dec
je
xor
cli
daa
test
sbb
lea
xchg
je
inc
cli
sbb
fistpll
sub
pop
icebp
roll
test
jge
add
mov
fcoml
in
hlt
cld
loope
xor
inc
adc
push
ret
adc
xchg
adc
cli
pop
jb
js
dec
ret
push
les
jno
loop
testb
and
cmp
jmp
lds
repz
loope
outsb
or
mov
js
cmpsl
das
rcrb
mov
push
call
imul
ret
loopne
shrb
mov
or
sbbb
mov
dec
add
add
leave
je
add
cmp
outsb
sbb
lret
add
cmp
je
rolb
pop
ja
jbe
mov
push
add
or
pop
inc
sbb
inc
jo
and
jg
lret
dec
add
dec
jne
movsb
mov
sbb
nop
in
and
leave
mov
mov
dec
in
stc
sub
repz
loope
push
outsb
mov
movsb
add
add
je
cs
cwtl
insb
hlt
push
xchg
add
mov
mov
mov
insl
and
rol
xor
xchg
cmp
in
nop
push
or
mov
mov
and
mov
mov
sbb
or
imul
mov
dec
xchg
adc
adc
inc
fs
stc
inc
pop
sahf
add
inc
enter
adc
dec
fiaddl
mov
push
and
dec
popa
or
jnp
pop
dec
adc
or
inc
and
pop
pop
fldl
adc
add
dec
stc
pop
shll
xor
and
or
call
lods
leave
jle
sub
fcomps
sbb
int
push
adc
push
lea
jo
mov
adc
push
and
lods
lds
inc
mov
inc
add
call
cmp
mov
inc
push
sub
add
adc
dec
lcall
sub
aad
outsb
push
lock
cmp
fnsave
inc
stos
jno
or
sub
jne
aas
imul
adc
mov
mov
or
dec
sub
dec
or
test
addb
mov
std
jg
test
adc
sahf
adc
aad
fyl2xp1
iret
push
sbb
subl
or
cmp
pushl
xor
dec
insl
add
push
es
push
push
and
jp
jns
aam
je
mov
pop
mov
mov
cwtl
jne
or
jne
hlt
mov
add
adc
push
or
lock
call
sti
cmpsb
out
dec
sub
add
sti
imul
fwait
or
mov
mov
mov
mov
negb
inc
push
lds
jg
and
or
pop
push
out
mov
adc
je
pop
xor
je
push
push
imul
xor
cmpsl
aam
fdivs
xorb
jecxz
xor
push
push
dec
adc
xor
or
inc
lock
fld
adc
aad
test
inc
sbb
enter
dec
fistl
mov
shlb
rdmsr
dec
mov
lret
pop
sub
fwait
lds
jmp
jae
dec
in
xor
pop
shll
test
call
out
and
pop
xchg
jmp
pop
and
sbb
sbb
fistpl
sub
push
adc
fnsave
lock
out
pop
sub
and
int
mov
cmp
cmpl
test
mov
ljmp
mov
adc
loop
pop
mov
cli
int
adc
cwtl
sarb
and
xchg
enter
lea
adc
int3
loop
sbb
mov
add
fstp
pushf
xchg
pop
xor
pusha
int3
xor
fs
dec
gs
inc
andb
or
adc
icebp
sbb
fbld
das
push
pop
imull
icebp
testb
repnz
adc
int3
cmp
adc
mov
push
mov
xchg
push
add
daa
js
jne
nop
lcall
mov
fs
faddl
add
mov
shrb
loope
mov
enter
cmp
int3
rolb
mov
push
je
sbb
call
popf
rcrl
test
or
adc
in
xchg
adc
or
add
gs
jg
dec
sbb
or
test
mov
and
rcll
shlb
sbb
test
or
push
stc
push
lcall
lahf
pop
cltd
jnp
mov
or
cmp
sarb
push
push
jb
std
adc
push
lods
aaa
test
dec
daa
ret
xchg
fs
stc
and
inc
add
add
adc
push
scas
mov
mov
or
and
cwtl
and
add
mov
adc
les
sub
dec
pop
jns
icebp
push
or
iret
fmuls
push
inc
sbb
sbb
out
iret
je
sbb
adcb
js
cmp
mov
cmp
les
xor
add
imul
fwait
repnz
repz
pop
mov
sbb
rclb
sbb
nop
outsb
lock
js
jp
jl
jle
mov
pop
aam
es
sbb
or
mov
xchg
and
adc
add
call
adc
adc
cwtl
sub
stc
movsl
std
bound
ja
fsubrl
pop
sbb
ja
or
scas
xlat
xchg
xlat
mov
or
dec
test
lcall
test
cmpsb
inc
aam
adc
sahf
cltd
dec
cli
fsubp
inc
or
xchg
idivl
in
cmc
xchg
mov
adc
aad
adc
dec
cli
sahf
fnstenv
sti
movsl
jge
fsts
push
in
sbb
mov
sbb
sbb
add
in
jl
or
push
pop
fdivrl
push
pop
jle
push
dec
or
mov
stc
shrb
test
push
adc
cld
xor
inc
and
adc
adc
test
ficomps
pop
mov
test
cmp
mov
or
xor
cmc
dec
into
les
fmull
rcll
data16
dec
sub
lods
pop
test
pushf
cs
insl
and
call
push
je
cs
dec
push
cli
mov
and
js
pop
cs
pop
outsb
jo
xchg
lret
insb
dec
mov
xchg
xchg
inc
je
cmpsl
out
sub
add
push
sub
adc
adc
adc
adc
inc
adc
cwtl
adc
movsb
cli
ss
pop
fsubl
pusha
sbb
lods
sbb
sbb
fs
aad
sbb
stc
dec
rcr
sarb
or
or
or
js
mov
adc
push
cmp
push
jo
out
ud1
xchg
or
lret
add
push
pop
es
sti
int
cld
jl
cmp
sbb
adc
xchg
pop
or
xor
mov
int3
push
enter
adc
sub
mov
pushf
pop
lahf
fcmovne
mov
sub
enter
testb
in
xchg
lret
jmp
inc
inc
scas
sub
xor
lahf
or
test
nop
leave
loopne
jle
mov
xchg
lods
aam
jmp
and
test
das
dec
and
jmp
mov
xchg
lret
das
jno
repnz
fcomps
or
int3
and
pop
scas
dec
mov
in
and
sbb
in
leave
insl
inc
les
js
inc
push
xchg
adc
inc
loopne
push
js
call
add
sbb
add
pop
mov
adc
adc
sub
lock
jmp
mov
push
adc
and
lods
loopne
adc
pop
mov
mov
scas
sbb
cmp
xchg
hlt
push
loope
jg
jecxz
jl
lock
ss
shr
mov
pop
loopne
push
cli
fbstp
inc
sub
xchg
sub
dec
mov
fldenv
jg
pop
adc
ret
xchg
addr16
mov
xchg
inc
and
push
sub
push
call
or
sbb
lcall
and
les
idivl
jne
or
lea
pop
dec
in
add
mov
adc
xor
mov
call
out
or
stos
push
jl
faddl
adc
push
movsb
sti
inc
and
jo
sbb
stos
push
mov
cld
test
dec
cmpsl
nop
pop
test
xor
dec
inc
sbb
sbb
xchg
push
lods
push
test
gs
test
negb
cltd
je
jge
add
test
out
xchg
mov
push
movsl
push
adc
test
mov
or
cmc
dec
mov
fs
stos
xor
cmp
sub
xchg
lock
test
pusha
sub
xchg
adc
ret
jmp
mov
lods
pop
mov
inc
and
in
in
fistpl
and
add
imul
data16
jo
inc
lock
mov
jp
mov
inc
cmp
push
dec
hlt
xor
stos
bound
sbb
xchg
popf
inc
or
aam
fcoms
ret
repnz
cmpb
pop
mov
pop
xchg
mov
lret
je
aaa
and
lea
push
scas
mov
push
cli
pop
test
lea
inc
jl
mov
ret
cmp
adc
push
or
inc
aam
and
adc
adc
ja
adc
mov
andl
nop
ds
jns
add
add
add
imul
fs
mov
xchg
sub
not
imul
dec
leave
jecxz
mov
push
or
push
mov
popa
cmp
xor
adc
es
arpl
fs
shll
sbb
xor
inc
or
and
mov
nop
pop
and
sbb
sub
clc
mov
fistpl
mov
rsm
std
inc
jnp
cmp
inc
jp
mov
negl
ds
or
data16
call
mov
sub
jmp
jbe
pop
and
mov
mov
mov
in
push
roll
jno
mov
test
xchg
pop
or
out
inc
adc
mov
xchg
stc
xchg
add
sub
bound
lcall
dec
push
dec
push
stos
fs
adcb
call
adc
sub
inc
or
cmp
and
fsubrs
and
ds
add
leave
lea
jg
push
cld
fisubrs
sbb
add
adc
sub
mov
mov
inc
or
loope
loopne
jmp
outsb
jne
mov
iret
adc
pushf
cmp
or
mov
rorb
bound
push
inc
push
shll
sbb
dec
fdivl
pop
cmc
pop
and
pop
and
mov
push
mov
inc
jb
xor
ljmp
and
xor
push
sbb
nop
sbb
and
xchg
xchg
movsb
and
das
and
and
std
push
pushl
pusha
cli
data16
fs
bound
mov
push
leave
push
push
fisttpll
dec
pop
pop
lretw
aas
mov
jge
call
or
je
push
xchg
fwait
cs
test
insb
mov
inc
adc
adc
jmp
push
mov
ds
and
mov
push
into
sub
pop
addr16
ljmp
mov
testl
xchg
sub
adc
loope
adc
mov
add
cmp
in
mov
jecxz
pop
push
cwtl
cmp
sub
cwtl
sbb
jmp
mov
daa
imul
aaa
and
dec
mov
xchg
mov
pop
sbb
or
out
xor
test
add
add
sbb
out
dec
call
or
mov
in
into
adc
cld
or
rolb
repnz
scas
xor
cmp
lods
ja
adc
mov
xchg
and
and
sub
out
cmpsl
lock
pop
sbb
jae
mov
jge
pop
xchg
cmp
jg
and
dec
lods
push
je
iret
push
push
jne
fidivrs
add
and
cwtl
imul
sbb
mov
or
mov
andb
cltd
inc
sbb
adc
fs
andl
clc
adc
scas
or
or
mov
push
test
push
test
push
movb
adc
nop
mov
pop
jge
lcall
sbb
test
pop
into
out
pusha
inc
out
sti
cmp
sub
push
call
cwtl
xchg
xor
andl
sti
popa
fs
inc
jne
add
mov
aam
or
pop
nop
sahf
mov
push
lea
mov
enter
movsb
sub
xor
xor
push
lods
sub
mov
xor
push
pusha
sub
cld
or
test
jl
or
push
movsb
xchg
inc
sub
sbb
or
xchg
jl
sbbl
loopne
sbb
movsb
sub
xor
sbb
xor
push
push
shlb
fcompl
aam
repnz
push
sbb
add
movsb
fwait
call
and
mov
jge
push
and
mov
dec
stos
jne
out
loop
and
mov
adc
mov
or
mov
pop
and
in
sahf
icebp
mov
adc
mov
adc
sub
mov
sbb
mov
and
or
sbb
or
jmp
stos
and
setae
hlt
cmp
movsb
aas
mov
hlt
cmp
sbb
inc
mov
or
add
xchg
adc
mov
nop
mov
or
push
sbb
mov
xorb
xchg
rol
clc
out
decl
jl
xchg
sti
cmp
jbe
ret
sub
lods
xchg
mov
mov
call
pop
xor
int3
rclb
outsl
mov
ds
insl
mov
movb
adc
or
cli
popf
jnp
test
je
nop
inc
jne
xchg
insb
or
cwtl
xor
and
dec
psllw
nop
mov
mov
jge
nop
mov
pushf
jp
cmp
aas
pop
and
mov
xchg
sub
in
adc
loope
out
push
inc
lcall
nop
cli
fbld
cmp
inc
inc
sub
jne
ljmp
mov
pop
xchg
adc
mov
insb
xlat
int3
sti
subl
int
call
mov
xchg
adc
scas
sbb
or
ljmp
nop
fildl
arpl
adc
and
or
jns
dec
sub
dec
jb
xchg
inc
cmp
sub
or
jge
adc
mov
xchg
cmp
xor
adc
lahf
popa
adc
enter
sub
and
aas
inc
sub
dec
adc
push
mov
pop
cmp
push
and
jmp
outsb
rcrl
or
adc
js
mov
jns
dec
jbe
scas
orb
in
lret
pop
mov
out
xchg
fbstp
popa
adc
rol
inc
sub
call
push
or
fstl
add
call
ret
xchg
cltd
or
and
or
or
lret
or
xlat
out
shlb
lock
mov
and
repz
test
in
xchg
dec
call
les
mov
lret
xchg
push
fwait
sbb
dec
dec
or
sub
sub
dec
cwtl
xchg
addr16
js
clc
movsb
aas
out
push
notl
cwtl
mov
test
js
test
in
int3
dec
cld
xor
addr16
in
call
push
xchg
xor
or
stos
pushf
mov
cwtl
bound
popf
or
add
jne
jne
pop
or
xor
adc
add
hlt
rcll
call
dec
ffreep
sbb
inc
and
and
jbe
scas
and
and
mov
xchg
pusha
cltd
adc
imulb
sbb
push
push
inc
inc
mov
or
push
or
push
or
push
or
or
pusha
add
adc
sahf
imul
xchg
enter
sbb
xchg
clc
call
xor
adcb
fstl
dec
fwait
ret
lock
dec
xchg
mov
push
inc
adc
cmp
adc
jno
push
or
jmp
or
pop
fstps
cwtl
arpl
mov
cmpsb
and
lea
mov
pop
movsb
inc
ss
out
out
or
fcmovnb
xchg
pop
cmp
push
push
cmc
nop
sub
fdivrl
inc
and
mov
sbb
jp
jmp
dec
jle
sbb
inc
lock
adc
xor
mov
mov
xchg
xor
dec
sub
sbbb
jne
push
or
ds
or
inc
jmp
mov
ret
fcoms
add
call
test
lret
xlat
nop
pop
adc
cmp
pop
cwtl
jmp
pop
and
cwtl
imul
roll
lret
scas
push
je
sbb
inc
mov
and
enter
or
into
sar
push
in
jmp
dec
or
addr16
or
cwtl
jbe
bound
adc
test
pop
loop
flds
inc
call
cmc
cli
mov
jne
sub
jl
test
adc
and
pop
addl
add
pop
sbb
nop
and
or
lock
mov
imul
mov
mov
scas
and
xchg
pop
scas
mov
stos
mov
nop
outsl
mov
xor
pop
aas
int3
cmp
xchg
divl
test
or
xchg
idivl
mov
jge
test
pop
dec
out
dec
pushf
xchg
cs
xchg
inc
or
mov
das
sbb
dec
hlt
or
adc
cmp
clc
movsb
aas
inc
dec
jge
nop
outsb
mov
adc
stos
lcall
adc
fistps
jl
lods
test
and
loope
and
and
pop
jns
enter
push
cli
sub
dec
icebp
pusha
dec
sub
test
cmp
inc
sub
fadds
xchg
pop
bound
sbb
daa
and
xchg
sbb
dec
out
mov
inc
jmp
add
mov
cmpsb
mov
sbb
movsb
test
pushf
cmp
test
inc
int3
or
adc
scas
mov
divb
imull
lret
jno
or
lea
sbb
movsl
aam
push
pop
pop
ljmp
loop
mov
sbb
jg
push
add
cmp
lea
stos
test
or
lea
fsubrl
scas
das
inc
cmp
jo
das
sbb
test
inc
daa
shlb
or
sub
pop
cmp
xor
imul
es
or
jae
push
push
cld
and
xchg
adc
jmp
push
jp
sub
xor
push
mov
mov
call
or
imul
sub
inc
jno
sub
mov
rcll
gs
adc
test
cmp
adc
sub
cld
jbe
push
sahf
dec
scas
adc
test
aaa
pop
stos
xor
push
test
in
aad
xchg
scas
cmp
inc
lahf
xchg
scas
cmp
stos
mov
jbe
rolb
movsb
je
clc
stos
jno
lret
adc
test
or
out
sbb
mov
mov
pop
or
pop
jle
icebp
dec
cli
and
pop
pushf
repnz
inc
mov
sahf
lock
in
test
push
popf
sbb
jo
xchg
pushf
ret
fwait
scas
dec
or
loope
mov
mov
jecxz
cmp
or
and
bound
pop
sub
loop
daa
mov
xor
andl
sbb
daa
dec
insb
cmpsl
hlt
xchg
clc
pop
and
xchg
adc
stos
and
test
cmp
enter
add
xor
adc
add
loopne
inc
and
and
shll
cmp
mov
shl
push
adc
or
ret
push
add
jp
pop
jl
adc
mov
dec
xchg
add
sub
cmpsl
mov
or
push
addr16
mov
mov
cwtl
dec
jb
cmp
jo
inc
je
cli
fwait
inc
aam
xor
inc
ret
sbb
stc
add
dec
lock
std
dec
stc
mov
adc
adc
inc
and
rorl
rcrb
push
lds
inc
movsl
push
inc
ficoms
xchg
dec
fstpl
inc
test
sbb
out
and
adc
scas
and
in
jne
push
and
add
jae
and
jb
adc
adc
jg
mov
sbb
push
mov
loope
gs
inc
xchg
sbb
mov
stc
lock
or
jb
cltd
hlt
mov
push
sub
sbb
cmpb
or
sbb
pop
std
dec
sti
clc
mulps
fstps
mov
cmp
rcrl
pop
mov
jl
xor
hlt
xor
out
notl
lret
bound
movsb
mov
xchg
das
adc
sbb
es
test
jle
inc
enter
sbb
mov
leave
sbb
push
lcall
shrb
inc
mov
xor
ds
clc
adc
adc
xchg
ljmp
les
push
test
mov
sub
mov
mov
jae
xchg
cmc
adc
mov
fldenv
xor
bound
aad
add
lret
push
lcall
dec
loop
inc
mov
icebp
movsb
jno
imul
adc
movsb
test
out
mov
movsl
jno
sbb
xor
push
or
dec
movsl
negb
test
jnp
aam
hlt
loopne
lahf
out
fdivrs
pusha
xlat
inc
stos
or
aam
arpl
les
and
divl
iret
or
or
shl
inc
lret
or
adc
pop
adc
lock
call
pushf
fiaddl
fildl
or
cmp
push
inc
sub
adc
gs
pop
jl
dec
or
sub
ret
idivl
cwtl
inc
fldenv
sti
notb
mov
add
jg
pusha
add
xchg
imull
dec
roll
repz
xchg
pop
push
mull
mov
clc
cmp
test
mov
dec
cmp
inc
adc
subl
arpl
sbb
and
pop
fwait
cmpsl
popf
jno
ret
adc
lcall
ret
cmp
std
inc
sbb
dec
push
dec
mov
cmpsb
pop
mov
std
cmpsl
cmp
add
inc
cmpsb
cltd
sbb
push
test
cmp
jne
das
mov
icebp
lahf
bound
mov
pop
jmp
dec
enter
mov
inc
pop
or
lea
inc
je
inc
xor
fldz
push
push
and
inc
pop
out
repz
mov
mov
ret
push
mov
xor
daa
andb
mov
or
je
fnstcw
mov
lret
aas
mov
jns
or
xchg
cmp
jae
dec
arpl
sub
pushl
mov
fmuls
lock
sahf
xor
xor
and
stos
pop
sub
hlt
mov
and
pop
idivb
paddq
mov
psubb
inc
xor
fucom
inc
mov
mov
dec
imulb
mov
imul
in
mov
rorb
mov
cwtl
insl
and
test
stc
andb
jne
add
inc
jmp
mov
inc
xor
fdivrs
adc
cmp
cwtl
dec
sarl
jmp
call
add
jg
sbb
jmp
leave
test
cmc
mov
mov
mov
xor
mov
lea
loopne
out
loopne
mov
push
aaa
enter
xor
adc
mov
mov
lret
ret
lock
push
jge
sti
pop
and
inc
negb
sub
and
sub
adc
sahf
aad
loope
cmpsl
lahf
inc
orl
outsl
sbb
ja
subb
jbe
mov
popf
sahf
lret
and
push
and
pushf
cs
mov
popf
mov
and
and
aam
jnp
andl
and
push
xor
cmc
stos
lds
adc
stos
test
and
testb
mov
mov
rolb
add
outsl
jb
dec
mov
cli
push
inc
mov
hlt
or
mov
mov
jb
cmpb
inc
sbb
inc
lods
xchg
inc
dec
jecxz
adc
pop
and
out
inc
push
cld
mov
cmpsl
mov
dec
or
shr
outsl
xchg
inc
mov
iret
and
cmp
jne
aam
push
nop
testl
dec
popa
dec
xchg
nop
or
mov
adc
mov
loope
shrl
xchg
mov
adc
dec
nop
lods
in
adc
into
sub
and
cmp
xor
ljmp
hlt
out
mov
and
clc
inc
mov
sub
xchg
in
and
sbb
ss
mov
and
nop
sahf
orb
add
in
out
lods
mov
scas
cld
xchg
jns
inc
adc
xor
fwait
out
ja
or
movsb
mov
enter
call
add
in
pop
and
test
jne
fstpl
test
xchg
dec
filds
lret
push
xor
sbb
mov
rclb
hlt
jno
fwait
popf
pop
in
inc
mov
mov
fdivrs
or
add
into
mov
sub
xchg
test
push
notb
cmc
mov
push
fdivs
cwtl
std
adcb
fstpl
fwait
inc
add
mov
clc
dec
add
or
mov
insb
mov
stos
mov
inc
mov
ljmp
jg
pop
andl
adc
push
dec
xor
movb
pop
mov
lcall
mov
sub
ret
mov
mov
xchg
mov
pushf
dec
imul
xchg
xchg
push
fstpt
jmp
std
out
into
and
or
movsb
js
fsubrs
add
cwtl
mov
dec
enter
cwtl
test
adc
xor
nop
mov
orb
hlt
shlb
bound
push
mov
lock
jne
jmp
je
mov
dec
sti
or
and
movb
nop
push
and
inc
push
imul
add
mov
pusha
in
sub
cmp
into
push
in
xor
or
dec
mov
leave
stos
sbb
or
test
adc
ljmp
iret
cmpsb
sti
or
test
fucomi
test
mov
add
mov
or
jae
jp
jg
fcompl
icebp
ffree
pop
sub
sub
cmpsl
sub
adc
sub
inc
lcall
mov
cmpl
or
sub
sarb
stos
dec
cli
out
loopne
lock
out
push
clc
lcall
adc
mov
aam
sub
in
mov
jge
inc
ja
push
scas
push
jbe
or
mov
insl
popa
clc
cmc
mov
mov
arpl
mov
adc
or
mov
jmp
adc
and
loopne
mov
dec
mov
out
dec
imul
mov
mov
aaa
pop
in
sub
insb
bound
mov
cmp
mov
cwtl
rolb
cmp
adc
lret
rclb
or
pop
push
mov
sub
cli
and
pushf
xchg
addr16
and
jns
pop
call
popa
cmp
dec
in
jl
and
xor
pusha
and
mov
xor
pushf
mov
or
in
nop
pusha
mov
and
or
and
dec
test
mulb
dec
cwtl
push
inc
es
jp
test
xor
or
arpl
int3
fcoml
cmp
aad
jecxz
test
and
mov
loop
xchg
popf
and
repz
rcll
cmpb
icebp
xchg
decl
in
or
inc
jne
cld
pop
dec
xlat
push
cmp
add
jns
dec
sub
insl
outsb
cmp
pusha
xchg
mov
movb
xchg
sbb
pushf
fs
mov
push
adc
loopne
dec
push
inc
cld
jnp
and
add
data16
sbb
dec
push
into
or
mov
push
jb
xor
out
mov
push
push
adc
pop
push
dec
nop
dec
sub
mov
xchg
mov
loopne
mov
hlt
or
or
cmp
lahf
inc
insb
jne
iret
imul
dec
out
push
jmp
mov
mov
add
mov
push
ds
push
or
mov
sbb
pop
cmp
and
jecxz
loop
xchg
test
cli
pop
xchg
int3
dec
xchg
pop
inc
push
pop
jle
push
mov
xchg
xor
add
lock
adc
out
xchg
mov
js
xchg
cmc
add
call
test
loope
mov
and
xchg
idivl
mov
xor
push
push
out
mov
or
fstpl
movsl
pop
push
xchg
imul
and
cmp
jne
lcall
in
call
fs
outsl
movb
nop
notb
lahf
mov
push
mov
nop
adc
mov
movsl
xor
sub
add
mov
fstpl
push
icebp
xchg
daa
pop
adc
sub
adc
mov
sub
and
imul
shlb
movsb
int3
pop
insb
iret
pusha
adc
dec
push
loop
sbb
and
idiv
cwtl
or
cmpsb
or
and
xchg
sti
enter
ja
in
jae
lds
in
push
mov
jo
cmp
jge
in
cmpsl
inc
jle
jne
or
add
je
int3
stc
xchg
scas
pop
fs
cmp
or
sub
lock
adc
enter
data16
dec
pop
addb
ret
push
in
les
or
adc
adc
ret
rcll
shl
fs
add
xchg
adc
rolb
sbb
adc
xor
mov
jo
in
sahf
sbb
lods
push
loope
sub
or
je
pop
dec
inc
pop
lock
fs
loop
jl
test
sub
dec
nop
incb
mov
mov
and
je
movsb
js
dec
adc
js
jb
pop
inc
ss
dec
xchg
mov
mov
shll
or
cmp
jmp
mov
pop
jl
push
in
mov
hlt
mov
sbb
and
and
ds
cli
ret
dec
push
call
in
out
adc
orb
jne
lahf
sub
pop
mov
scas
es
jle
je
mov
cld
jge
dec
setbe
push
mov
test
dec
pop
stos
je
ljmp
aad
mov
xchg
lock
add
int3
jbe
fildll
flds
sarl
es
inc
sbb
adc
and
rcll
mov
or
gs
mov
mov
mov
fdivrl
push
mov
mov
andl
lods
or
mov
push
jmp
loope
mov
push
mov
or
push
add
popf
cmp
mov
sub
xchg
jl
inc
sahf
ucomiss
sub
push
dec
fists
enter
mov
getsec
inc
imul
jmp
fnsave
cmpsl
push
cli
das
std
xchg
cmp
add
ja
cmp
inc
orb
sahf
jge
sbb
jne
push
stos
mov
inc
call
daa
ds
jbe
enter
or
fs
mov
int3
jne
decb
sub
push
nop
stc
dec
mov
jmp
std
or
loopne
jno
and
lahf
or
dec
adc
sub
loopne
mov
mov
fisubrs
cmp
mov
xor
stos
mov
mov
push
add
inc
mov
or
sub
push
in
test
xchg
sahf
jg
jmp
mov
test
cltd
push
push
add
lret
cmp
test
popf
mov
jle
and
call
jg
or
sub
cmp
xchg
ret
adc
sahf
push
jns
adcb
push
inc
dec
xlat
mov
gs
adc
add
cmp
sub
adc
js
inc
cli
jp
or
insb
rcrl
jns
sbb
enter
int3
inc
leave
je
cmc
sub
lods
adc
pop
mov
orb
xchg
movsb
and
xchg
clc
sbb
or
shr
push
adc
xor
sub
cmp
xor
and
lahf
adc
xchg
adc
xchg
or
add
and
inc
cmp
fisubrl
dec
jp
xorb
adc
push
loop
int
jg
inc
adc
xchg
sbb
add
and
lds
addr16
and
pop
add
xorb
in
lods
outsb
jne
out
iret
hlt
push
xchg
lret
pop
hlt
test
mov
ds
sub
test
imul
adc
or
adc
test
fs
jnp
dec
push
adc
mov
loope
xchg
xorb
push
sbb
arpl
gs
fistpll
and
inc
jmp
jl
cmp
iret
jne
xor
test
int
pop
adc
mov
pop
sub
lea
inc
pushf
or
call
fimull
popa
lret
repz
and
jle
mov
adc
dec
arpl
add
mov
jg
mov
ret
xchg
push
pop
call
cld
pop
jp
xor
pusha
jbe
sbb
push
mov
call
out
add
nop
std
testb
nop
dec
xor
pop
pop
cmovg
add
jne
rclb
mov
xchg
inc
mov
mov
add
inc
push
add
mov
in
clc
sub
rorb
mov
xchg
clc
movsb
rep
inc
andl
mov
add
push
imull
or
popf
inc
shll
sar
lock
das
mov
fisttpll
sub
xchg
imul
jge
popa
repz
add
dec
aam
test
inc
fmul
cmp
cmpb
jne
pop
add
inc
jmp
testb
or
jmp
fadd
loopne
add
mov
dec
scas
sub
sub
call
adc
rorb
repnz
cld
daa
push
adc
int3
andb
pop
fstl
mov
sbb
cmp
rolb
out
pop
lret
divb
mov
inc
mov
sarl
add
adc
mov
adc
add
cld
adc
adc
push
add
les
fmuls
push
add
jne
dec
pop
and
fnstcw
xlat
mov
call
jl
dec
inc
and
ljmp
adc
add
push
leave
or
mov
movsb
xorb
insb
insl
js
xor
xor
xor
fdivs
cmp
add
inc
inc
inc
inc
pop
and
and
arpl
push
sub
cmp
sub
sub
and
or
or
dec
adc
adc
test
push
jmp
icebp
pop
inc
inc
enter
adc
cmp
and
in
nop
mov
call
mov
mov
clc
imul
add
test
sub
aas
inc
xchg
sbb
ret
pop
aad
ret
lock
push
inc
fwait
mov
xor
ljmp
and
jns
dec
aas
or
inc
inc
jp
dec
push
push
mov
jne
test
mov
inc
xchg
hlt
jmp
add
mov
mov
fsubr
adc
shl
xor
inc
lock
pop
and
lret
dec
inc
and
add
decl
add
sbb
out
or
sarl
lea
cli
cmp
inc
add
adc
insl
and
insb
jg
mov
mov
dec
out
sub
and
adc
rep
adc
addb
cwtl
mov
or
cld
xor
sub
push
pop
sub
out
or
push
call
cwtl
test
jl
add
rolb
dec
test
in
and
icebp
jg
mov
das
shl
and
or
rcll
push
or
stc
mov
js
daa
push
inc
adc
lret
aas
stos
jge
and
xor
xchg
loopne
jne
lahf
shrb
aas
mov
std
cmp
lret
sbb
js
dec
jne
mov
inc
leave
es
inc
add
dec
dec
dec
dec
dec
lahf
shlb
add
pop
pop
insb
fadds
addr16
insl
outsb
add
jno
jae
jne
or
jns
pushf
cld
add
das
cmp
dec
out
dec
in
xlat
stos
mov
lods
jns
or
fs
icebp
rorb
mov
or
fs
or
mov
dec
and
sub
pushf
xor
out
in
xor
mov
cld
mov
mov
mov
call
inc
sbb
sub
fldl
mov
in
push
call
xchg
enter
mov
lock
jb
cmpl
inc
jle
fs
loopne
xchg
push
fs
out
or
jnp
dec
inc
data16
jge
jbe
or
inc
out
sub
xchg
or
mov
or
insl
nopl
loop
subl
and
add
mov
jbe
loope
mov
xor
loope
adc
lcall
test
fnstenv
sub
add
ret
adc
addb
xor
inc
xor
sarb
stc
jp
add
push
stos
mov
push
test
jle
mov
out
shll
pop
ja
inc
rorl
inc
add
ret
sbbl
popa
data16
mov
movb
in
bound
pop
leave
jg
inc
xor
sahf
nop
jl
xorb
cmc
lds
dec
insl
inc
sahf
mov
fisttpll
leave
test
gs
mov
stos
mov
jne
fs
mov
or
int3
int3
mov
idivb
mov
mov
nop
add
cld
inc
gs
inc
lock
mov
and
fsubrs
or
xor
jge
jecxz
adc
sbb
ficoml
jmp
ljmp
and
and
es
add
sub
jo
cmp
inc
fwait
mov
pop
pop
dec
and
enter
jne
popf
mov
test
inc
sub
or
and
mov
ss
bound
and
xlat
int3
ds
popa
push
push
mov
sub
or
or
int
and
dec
adc
leave
adc
loope
jo
aad
sti
int
inc
inc
mov
cmp
mov
push
call
xchg
rol
fimuls
sbb
xor
sbb
push
sub
xlat
int3
mov
mov
ljmp
lock
adc
cmc
fdivrl
and
je
mov
cwtl
mov
rcll
jne
add
mov
mov
cmp
lock
mov
xor
shlb
cmp
sub
sbb
rclb
ficoml
inc
adc
add
pop
das
mov
push
push
in
in
pop
mov
or
inc
aaa
mov
shrb
jae
call
cmp
cmpsb
mov
inc
pusha
repz
in
f2xm1
lds
mov
lock
adc
mov
mov
cmp
inc
scas
pop
js
mov
lods
jecxz
test
jno
xchg
or
daa
call
pop
push
push
lret
cmc
adc
in
inc
ret
imul
adc
lock
fcoml
lds
ss
loopne
fnsave
jmp
mov
cmp
call
xchg
sbb
sub
test
jb
test
cld
vpsubq
ret
jmp
sub
shlb
icebp
imul
mov
adc
les
pop
and
punpckhbw
xchg
sbb
loopne
stos
inc
cltd
les
cli
inc
ret
adc
mov
stc
adc
rol
loopne
and
jo
dec
sub
shlb
jne
das
std
in
xchg
push
mov
inc
mov
scas
xchg
pop
loopne
or
inc
dec
ss
or
call
inc
sbb
rcr
xchg
es
clc
orl
stc
iret
aam
lret
inc
push
std
clc
jle
inc
mov
mov
bound
and
sbb
in
dec
push
xchg
call
dec
rcr
xor
jnp
sarb
add
xchg
call
lods
push
xchg
mov
and
sub
sbb
add
push
xor
imul
and
ret
shr
sbb
in
mov
movsl
xchg
inc
or
mov
xchg
imul
data16
insb
repnz
hlt
add
jo
movsb
and
sub
inc
inc
mov
pop
insb
xor
in
lods
test
into
and
fldt
lea
sbb
fsubs
inc
cli
dec
xchg
aad
lock
mov
mov
int3
inc
add
out
mov
inc
ret
mov
or
inc
add
int3
rorb
or
ror
into
cmp
cmp
cmp
cmp
add
add
rorb
or
enter
sbb
cmp
add
rcr
fiaddl
loopne
lock
fcomip
pop
add
ffree
sbb
loopne
add
aam
aad
adc
pop
adcb
ret
rol
adc
adc
roll
adc
shlb
xorb
icebp
add
shl
repnz
cmp
cmp
cmp
add
add
shlb
add
cld
cmp
inc
aas
cmpb
lock
lock
cmp
sti
loopne
add
stc
cmp
rorl
jmp
shrb
subb
ljmp
push
out
add
add
add
shlb
cmp
add
shl
out
es
lock
jecxz
and
add
shlb
and
lock
icebp
xor
arpl
shll
push
ret
cmpsb
ret
cmpsl
shlb
add
andb
insb
shrl
scas
shrb
outsb
inc
scas
rsm
punpckhdq
imul
jae
shrl
cmp
cmp
cmp
add
mov
cmp
mov
cmp
cmp
cmpl
inc
mov
ja
mov
xorl
add
mov
jno
xorb
add
nop
adcl
push
cmp
xchg
cmp
cmp
cmp
cmp
adcl
inc
popf
cwtl
cmp
rcrl
pop
ret
lcall
add
pop
sbbb
ret
mov
dec
ret
dec
ret
mov
orl
add
rorb
dec
inc
mov
inc
roll
xchg
inc
addb
xchg
cmp
cmp
cmp
stc
jno
cltd
sub
pop
and
mov
mov
es
adc
cs
pop
ja
add
out
mov
les
hlt
push
xor
mov
mov
add
movsb
mov
aad
in
add
mov
pop
sub
mov
mov
repnz
mov
test
aam
sbb
in
insl
push
jns
add
movl
test
fs
bound
std
in
leave
mov
add
adc
insb
push
arpl
cmp
or
outsb
cmp
adc
in
pusha
aad
addr16
add
aam
add
test
sbb
xor
add
mov
lods
jecxz
fadds
xor
filds
or
cmp
fnstcw
cmp
ficoms
inc
xlat
enter
add
and
mov
push
cltd
xchg
mov
cmp
or
and
or
das
adc
popa
add
cmp
pusha
int
push
add
add
adc
out
mov
mov
push
movsl
in
lahf
xor
mov
pop
js
stc
pusha
sub
sbb
or
insl
or
add
hlt
cmp
lahf
bound
sbb
xor
dec
loope
repnz
ds
push
mov
add
cmp
or
cmc
fnstenv
mov
ljmp
mov
bound
sub
rorl
pop
popa
mov
into
inc
sub
add
inc
movsl
fisttps
xlat
xchg
fadd
les
shll
jmp
fldcw
inc
mov
lods
sarb
add
in
add
pop
dec
add
stos
leave
jl
fnstsw
cmp
push
xchg
daa
adc
or
leave
and
test
add
aam
mov
add
stc
ficomps
leave
fldcw
jne
add
mov
test
pop
cmp
or
mov
mov
in
add
loop
add
cmp
ljmp
add
add
push
fdivl
or
arpl
test
fs
ds
insl
or
loopne
push
in
decl
or
mov
pop
jge
inc
add
lock
add
push
inc
push
imul
add
ss
sbb
add
jbe
aam
loopne
add
mov
ficoml
int3
dec
add
outsl
fistpll
mov
sbb
mov
call
xchg
add
mov
push
repnz
fisttps
addr16
cmpsb
fldl
add
dec
fisubrl
add
scas
testb
add
add
ret
out
mov
push
enter
mov
outsb
xor
imul
sbb
add
ss
push
xchg
ja
or
add
mov
and
es
mov
mov
pop
mov
add
mov
cmpsl
call
ret
iret
shlb
pop
sbb
loopne
fwait
repnz
pushf
mov
pop
insl
add
ss
jmp
test
jb
push
addb
adc
mov
mov
cmp
mov
fwait
mov
rclb
mov
add
jl
or
cld
roll
icebp
clc
mov
push
pop
int
mov
mov
outsl
cwtl
inc
mov
es
jle
jo
ud0
cmp
push
pop
or
adc
sahf
popl
imul
insb
push
add
or
add
dec
ret
cmp
popa
cmpsl
notl
pusha
rolb
dec
inc
imul
dec
push
scas
fcompl
flds
or
inc
lock
aaa
jle
add
jg
add
xor
jno
jp
xchg
mov
cmpsb
mov
ss
pusha
push
xlat
int
push
add
push
mov
jp
data16
dec
popa
les
sbb
push
sub
mov
mov
clc
filds
add
shl
jae
loopne
jo
idivl
mov
sub
sub
xor
add
popa
and
outsb
cld
push
call
jecxz
mov
mov
flds
inc
movsb
add
jmp
sbb
pop
lret
sbb
pusha
add
mov
xorl
mov
and
pushf
jnp
xor
xor
popf
mov
xor
push
scas
or
and
add
daa
push
push
adc
sbb
loopne
mov
add
pop
mov
rolb
pop
pop
xchg
aaa
fsubrl
data16
add
cmc
mov
jmp
std
add
daa
xor
sbb
leave
sub
push
fimull
jne
add
sbb
push
mov
sbb
pop
mov
cmp
xchg
mov
jbe
insl
ret
jmp
test
aaa
cld
xor
lgs
add
cmc
fiadds
add
add
movl
lock
push
mov
adc
inc
sub
mov
mov
in
test
or
hlt
mov
clc
add
mov
inc
add
inc
dec
add
sub
mov
call
push
daa
rclb
inc
pop
mov
pop
mov
out
je
ret
push
mov
je
arpl
out
adc
xor
mov
rcrb
adc
add
push
cmpsl
mov
sub
inc
mov
sub
sbb
fistl
clc
lock
movsl
push
add
mov
push
dec
inc
inc
nop
mov
adc
enter
xor
aas
adc
jl
test
stc
or
xchg
int3
adc
or
mov
xor
adc
pop
dec
inc
xor
sbb
fstl
inc
inc
fdivr
mov
cli
mov
inc
lods
repnz
clc
mov
inc
dec
mov
sub
seto
push
imul
cmp
fsubp
js
or
and
cmp
sub
xchg
push
xor
icebp
or
or
out
mov
xchg
rcrl
call
xor
loop
adc
sub
ja
cld
dec
popl
mov
adc
and
loope
mov
inc
mov
or
loopne
loopne
adc
fistpll
pop
mov
js
and
or
add
nop
sbb
jle
push
inc
enter
push
mov
cwtl
add
push
push
push
mov
jbe
insb
roll
lods
pop
nop
enter
cwtl
decl
jo
pop
out
sarb
loop
adc
inc
loop
and
cmp
nop
int3
loopne
test
repnz
sub
add
nop
and
rcrl
in
jg
and
es
push
out
stc
push
or
add
or
pop
add
jne
add
pop
mov
dec
test
adc
lods
mov
lock
mov
and
xor
xchg
jbe
imul
nop
sbb
xchg
add
pop
push
aam
in
lods
or
xor
fcompl
adc
notb
imul
mov
jno
in
loope
scas
or
inc
movb
push
das
and
xor
enter
subb
movsb
jnp
xor
pop
out
or
das
and
jb
and
lock
and
scas
mov
pop
inc
lock
xor
test
pop
mov
adc
mov
and
add
inc
cmp
andb
xchg
sbb
inc
pusha
sbb
adc
fsubrl
ja
mov
pop
nop
enter
stos
shlb
inc
add
arpl
jne
je
ljmp
pop
jmp
push
xchg
or
or
mov
aas
sarb
hlt
pop
xchg
les
fadds
adc
and
pusha
xor
dec
jmp
ret
xor
icebp
sbb
adc
clc
inc
push
in
fdivrs
mov
ret
aas
les
pop
xchg
insb
push
movsb
mov
mov
movsb
or
dec
decl
mov
mov
popl
xchg
push
jl
sub
fs
cmp
cmp
mov
mov
in
dec
xor
shl
mov
mov
out
dec
mov
jne
into
or
or
pop
jp
xor
adc
push
ffree
call
push
or
in
lahf
fisubrs
mov
jle
dec
xchg
lret
and
and
fadds
adc
xor
pop
sbb
popf
push
aaa
inc
pop
add
jge
stos
call
shrb
call
push
roll
loop
test
jb
pop
ret
jmp
out
das
insl
andb
adc
mov
mov
mov
mov
mov
jmp
or
dec
sbb
mov
out
pop
push
cli
sub
pop
call
arpl
fsubrl
xchg
outsl
test
in
loop
mov
and
test
adc
or
xchg
lods
adc
into
dec
jnp
or
sub
sub
push
push
lods
xchg
pop
pop
mov
into
jle
bound
sar
push
call
xchg
pop
loopne
push
enter
sbb
cmp
aam
imulb
repz
mov
aad
je
lds
cwtl
sub
pop
mov
jp
xlat
or
or
stos
or
add
cmp
pop
pop
out
lods
add
cmpsl
pop
and
enter
pop
add
loopne
sub
loop
sub
lret
mov
adc
je
add
and
testl
js
push
add
stc
push
dec
daa
sbb
ja
cmp
ja
and
bt
jmp
xchg
dec
test
mov
outsb
xchg
int3
lock
add
mov
dec
les
sbb
aad
mov
in
jle
adc
arpl
test
dec
dec
pop
sub
test
out
andl
cmp
std
mov
jmp
or
jle
ja
repz
mov
movsl
insl
in
insl
dec
outsl
mov
mov
dec
loop
xchg
cld
js
imul
xlat
jno
ret
adc
pop
loop
sub
mov
push
ljmp
repnz
pop
adc
cmp
shl
sbb
call
jns
cltd
dec
aas
dec
and
or
scas
xor
or
mov
lock
call
push
sbb
sub
xchg
es
andl
mov
mov
icebp
test
bound
loopne
cltd
imul
mov
bswap
sbb
hlt
pop
lret
stos
and
call
test
push
inc
inc
dec
pop
repz
jle
push
adc
loopne
mov
xor
adc
jb
sub
lea
push
lret
adc
rcr
push
push
xchg
aad
js
mov
and
mov
outsl
fldcw
jg
jl
test
pop
dec
pop
push
cmp
inc
inc
fs
and
cli
jmp
not
add
or
add
xchg
iret
loopne
shl
int3
jmp
dec
aaa
sti
and
cmp
mov
out
mov
roll
push
and
and
jmp
xlat
cmp
cltd
out
adc
clc
outsl
and
cmp
or
xchg
cmp
int3
jmp
mov
jp
outsb
je
adc
sbb
mov
inc
and
call
jp
xor
cmp
mov
push
call
clc
sub
add
add
xchg
jg
out
inc
push
adc
call
sbb
dec
ret
mov
and
mov
pop
gs
sub
sub
adc
push
cmpsl
movsb
push
adc
mov
cmp
ljmp
or
push
sbb
mov
aas
pop
cmp
outsb
cmp
xor
call
ss
cmp
push
out
pop
adc
fnstcw
call
or
pop
insb
cmp
movups
inc
sub
sbb
cmp
mov
inc
and
adc
adc
or
les
and
push
and
ret
clc
xor
enter
xlat
lahf
rol
loop
jl
mov
adc
and
dec
pop
push
or
inc
jb
adc
mov
clc
out
and
sti
rcrb
lock
inc
adc
add
inc
addr16
add
mov
fdivrl
adc
add
loope
ret
pop
insb
mov
jo
mov
out
int
inc
mov
addr16
and
add
sub
adc
fisubl
mov
fucom
or
sub
loopne
movb
addb
cmp
push
ja
sbb
aaa
pushl
mov
xchg
test
aaa
sbb
in
aas
test
xchg
insb
adc
cmp
fwait
ret
mov
pop
jno
or
inc
jb
xor
xchg
mov
inc
add
push
mov
jmp
push
js
cmp
push
in
add
pop
in
dec
aaa
mov
fistpll
adc
stos
lret
xor
add
jmp
iretw
adc
push
add
sbb
sub
add
rolb
ljmp
xlat
pop
fists
sub
adc
add
cmp
scas
or
ds
xor
shlb
dec
leave
add
ret
inc
mov
movsb
push
and
pop
and
cld
sti
stc
cli
or
call
or
adc
out
iret
xor
xchg
mov
sahf
js
adc
xor
out
fwait
xlat
call
cltd
adc
cmp
push
orl
xlat
xor
scas
push
cmc
mov
xchg
inc
sbb
adc
test
mov
add
and
cwtl
subb
and
scas
testl
jmp
push
mov
mov
hlt
inc
xor
adc
nop
imul
adcb
cmp
mov
inc
cmpsb
mov
mov
popl
bound
call
add
adc
sbb
mov
shrb
mov
call
push
pop
pop
es
or
adc
mov
jmp
inc
adc
test
inc
pop
adc
das
call
and
cs
inc
out
fdivs
enter
scas
mov
out
loope
push
mov
add
pop
aaa
ret
cmp
or
and
in
adc
inc
hlt
inc
xor
adc
jecxz
call
and
cld
rcrl
flds
outsl
inc
addr16
mov
xchg
movsb
clc
inc
cmp
inc
add
movsl
mov
shl
mulb
inc
or
popa
popf
insl
xchg
rcr
adc
cmp
mov
mov
add
iret
mov
inc
ljmp
ja
and
dec
jno
add
mov
add
mov
add
jle
sub
rolb
cli
daa
mov
or
test
out
aam
adc
add
sbb
and
cmp
aam
movsb
iret
or
cltd
test
inc
cmp
jl
inc
pop
loop
add
lods
les
and
hlt
push
sbb
or
pushf
lcall
add
ljmp
inc
test
cmp
leave
shll
dec
call
adc
adc
cmp
mov
les
or
pop
pop
gs
inc
or
jne
inc
mov
out
decl
pop
test
dec
jle
outsl
cmp
out
jp
sbb
adc
add
cli
or
mov
push
testl
mov
add
xchg
push
add
jmp
mov
clc
mov
call
fisttps
and
dec
sbb
mov
xchg
js
add
out
int
rdmsr
jl
daa
aaa
mulb
push
inc
aad
pop
rorl
ret
push
sbb
xor
orb
or
leave
cmp
cmp
adcl
mov
mov
cs
inc
adc
pop
inc
push
iret
test
mov
or
sbb
in
bound
add
push
pop
lea
mov
or
mov
mov
pop
xchg
xor
or
repnz
pop
mov
pop
imul
or
call
sub
jecxz
xchg
mull
adc
push
sbb
gs
and
orb
sbb
insb
lods
add
and
sub
push
inc
mov
dec
mov
cmp
push
les
movsl
cmp
jb
sbb
jmp
mov
xchg
cmp
dec
sbb
lea
mov
shlb
jbe
sub
mov
lea
inc
jb
and
xchg
mov
adc
xchg
sub
aas
es
inc
pop
inc
andb
inc
sbb
rclb
movsl
out
inc
jl
pop
inc
sbb
adc
cmp
cmp
sbb
and
enter
imul
or
inc
sbb
cmp
jl
scas
jnp
sbb
sbbl
sbb
mov
sub
cmp
or
jl
sbb
add
gs
lods
mov
inc
or
mov
nop
sahf
leave
or
sahf
in
and
nop
sahf
lret
or
push
fisttpl
imul
sahf
lret
or
push
sti
mov
mov
cmp
mov
and
adc
xchg
sub
sbb
xor
mov
and
inc
mov
push
and
push
pop
lea
sbb
and
xchg
rorl
or
push
or
and
and
adc
insb
andl
or
jno
mov
add
inc
stos
cwtl
gs
push
in
add
adc
inc
or
sbb
pop
leave
or
adc
rclb
mov
imul
xor
xor
mov
sbb
and
adc
dec
or
or
rclb
and
sbb
dec
mov
jl
adc
fidivs
movsl
aam
add
xor
pop
mov
mov
mov
hlt
inc
cmp
or
sbb
mov
aaa
test
add
and
adc
call
bound
cmp
xor
mov
push
inc
push
and
fs
lahf
lcall
rorl
cmpsl
into
adc
mov
pop
or
test
or
cmp
ror
enter
sub
stos
das
aam
or
mov
push
adc
ljmp
jb
pop
xor
push
lret
push
inc
or
adc
xor
mov
les
and
gs
push
xchg
sub
ja
cmp
pop
ss
adc
mov
cmp
mov
into
jp
mov
sbb
call
ss
les
ds
js
mov
and
cmp
repz
insl
cmc
mov
sub
sahf
xchg
mov
sub
pop
imul
xchg
or
repnz
hlt
inc
sbb
lahf
and
sbb
popl
dec
loop
or
enter
mov
xor
mov
sub
out
aam
cmp
fnstsw
sbb
mov
xchg
out
pop
xor
adc
xor
push
sub
sub
bound
sbb
xor
inc
mov
mov
lcall
out
cmp
sub
xchg
mov
in
nop
pushf
mov
outsl
or
jno
sub
mov
mov
mov
pop
aam
loop
sbb
or
pop
shl
sahf
insb
nop
pushf
loop
inc
shl
sub
movsb
cmp
lods
mov
xlat
mov
jl
add
jb
add
or
inc
pusha
mov
mov
fs
dec
iret
adc
dec
pusha
adc
jns
pop
and
adc
bound
loop
sbb
sbb
add
push
xor
addb
mov
xor
mov
idivb
roll
adc
jb
or
push
push
jmp
jae
and
cli
dec
sbb
nop
out
pop
adc
sub
jb
xlat
aam
push
push
imul
push
aam
pop
loop
xchg
sub
push
ljmp
mov
jmp
sub
push
into
mov
cli
mov
mov
adc
pop
mov
lahf
xchg
enter
jmp
pop
adc
mov
repnz
out
mov
and
inc
sbb
test
xlat
adc
in
xor
xlat
je
daa
inc
adc
sub
les
or
aam
xor
loop
cmp
lcall
in
mov
sub
and
scas
pop
xchg
clc
loop
shll
rol
insl
mov
xchg
and
or
adc
clc
cli
and
popf
cmc
or
xor
in
movsl
cmpsl
out
test
fs
std
daa
lahf
jmp
cmp
cmpsb
add
lahf
xchg
addl
adc
pop
test
cmp
dec
lea
adc
or
mov
ss
adc
aas
xor
and
or
adc
cmp
aas
or
mov
cmp
in
cli
xchg
adc
aam
lods
cmp
or
adc
adc
aam
out
out
orl
adc
stos
dec
pop
or
cld
rcl
aas
sub
xor
xor
data16
neg
lods
cmp
shrl
popf
adc
push
xor
call
cmp
stc
ja
movsb
imul
loope
jle
push
in
adc
sbb
call
or
sbb
aas
dec
xchg
mov
sbb
sub
les
dec
outsl
fildll
sub
repnz
adc
adc
in
lcall
add
fistps
and
mov
repnz
jbe
aam
mov
lods
pop
sub
or
xor
sahf
or
pushf
push
jnp
pop
out
out
test
xor
push
add
mov
repnz
xor
xchg
adc
in
adc
adc
push
lret
inc
xor
iret
inc
xchg
adc
pop
lea
adc
cmp
mov
xchg
cmp
or
pop
adc
in
cmp
hlt
cwtl
mov
test
insl
scas
sub
xor
xor
syscall
adc
cmp
xor
push
fs
cmp
pop
outsb
mov
lds
jns
dec
xor
and
xor
pop
int
sub
test
cmp
xchg
fwait
ss
jl
add
pop
add
call
mov
jge
mov
out
dec
dec
jl
add
jg
and
jmp
cmp
psubsw
xchg
dec
pop
or
mov
das
orb
test
mov
pop
jno
jg
mov
push
lret
push
cli
out
leave
adc
mov
mov
push
aas
xor
shlb
mov
repnz
push
sub
in
cmpb
adc
stc
sub
sub
push
icebp
imul
xchg
sub
push
inc
and
fisubrs
pushf
jmp
repnz
pushf
cmc
mov
rcrb
cs
call
arpl
pop
aam
jecxz
cld
sub
aaa
mov
ficoms
aaa
dec
ds
mov
jmp
dec
cmp
pop
outsl
jns
das
pop
push
adc
lods
adc
sub
jle
adc
insb
cmpl
mov
dec
adc
and
pop
push
repnz
adc
stc
dec
adc
adc
jno
repnz
xchg
jp
adc
pop
pushf
jns
gs
dec
adc
or
iret
cmp
sti
add
dec
xor
jns
jbe
idivl
xor
mov
dec
sahf
mov
sbb
imul
push
jle
ficoms
jmp
cmpsb
testl
xchg
mov
and
rclb
ficoms
jmp
or
mov
cmp
or
jl
cmp
push
sub
in
cmp
aas
lahf
sub
stc
outsl
lahf
sub
negb
jl
jbe
jp
mov
pop
cmpsb
ficomps
aaa
mov
jmp
or
mov
cmp
dec
adc
sub
inc
adc
cmp
mov
in
sarb
test
mov
cmp
lahf
mov
adc
push
pop
mov
in
adc
dec
adc
xor
push
nop
jl
adc
in
jecxz
and
adc
push
cltd
jl
adc
jle
cmpsb
push
adc
or
insb
pop
mov
cltd
scas
outsl
add
pop
push
and
fldt
mov
jg
mov
in
mov
inc
adc
and
jns
fprem1
std
mov
xlat
mov
pop
mov
xchg
xor
pop
mov
cmp
pop
aas
sub
mov
addr16
sub
das
pop
sub
sarl
movsb
jg
add
pusha
lahf
adc
xlat
adc
push
movsl
jecxz
mov
dec
pusha
adc
ret
mov
scas
push
fimull
lock
jno
xchg
ja
cmp
mov
cmp
nop
mov
lods
test
lcall
out
cmp
cld
add
sbb
fistpl
ficomps
mov
hlt
xor
add
insb
dec
or
or
je
cld
cmp
test
in
cwtl
dec
inc
pop
test
stc
imul
out
in
repz
inc
or
jle
mov
decb
je
push
aas
stos
sub
ljmp
mov
inc
dec
push
pop
out
sbbb
jne
push
push
push
insb
and
jo
adc
mov
movsb
cmpsl
jl
fmuls
inc
imulb
insb
adc
je
fistps
inc
mov
loopne
mov
push
add
icebp
inc
pop
add
fisttps
test
add
outsl
and
mov
adc
lds
lahf
loopne
push
adc
pop
fs
push
xor
and
or
insb
inc
adc
jo
adc
je
xor
jbe
push
sub
lods
mov
mov
push
cmp
movsb
cltd
dec
iret
loop
in
loopne
ljmp
or
or
push
call
nopl
jae
das
xor
push
repnz
or
pop
nop
aaa
sub
cmp
daa
aaa
js
int3
bound
sub
stc
sbb
xchg
lret
push
or
sbb
xchg
or
and
or
leave
push
lret
or
lret
and
addr16
or
push
xchg
mov
aad
test
test
push
cmp
or
inc
cmp
clc
test
cmp
jg
adc
adc
jmp
outsl
adc
pop
cwtl
mov
imul
inc
xchg
jg
inc
adc
sbb
sub
pop
inc
lret
into
lock
cltd
hlt
data16
adc
xlat
mov
or
push
xchg
push
mov
inc
adc
sbb
out
fptan
add
or
pop
sbbl
sbb
fstl
adc
or
adc
or
aad
mov
bound
adc
mov
push
dec
movsb
test
push
dec
idivl
inc
pop
and
sarl
cltd
stos
and
icebp
or
adc
dec
testb
and
stc
or
mov
shr
xor
dec
jbe
mov
int3
enter
fstl
movsl
sbb
mov
push
mov
aad
gs
aam
jp
fs
gs
jo
cli
mov
mov
movsl
dec
sbb
dec
lret
out
dec
mov
inc
push
ja
or
xchg
jmp
imul
std
jle
push
aam
scas
je
leave
ficoms
dec
nop
adc
cmp
stc
dec
dec
fbld
in
push
xchg
dec
nop
cmp
dec
dec
repnz
das
xchg
test
in
arpl
test
sbb
dec
aaa
jp
lods
push
xchg
sahf
aaa
mov
in
lcall
stc
popa
jmp
mov
test
dec
cmp
mov
sbb
outsl
insb
and
xchg
les
adc
loop
xchg
addr16
xor
or
jns
push
cmpsl
sub
mov
adc
mov
aam
out
and
jno
sbb
imul
push
addr16
cmp
in
cmpsl
addr16
hlt
and
adc
out
jae
lret
push
sub
or
xlat
js
inc
mov
lret
mov
out
in
ss
ja
inc
or
pop
jmp
enter
int
shrl
int
adc
movsl
scas
gs
in
fwait
dec
dec
lcall
pop
sti
pop
scas
xor
pushf
outsb
pop
jecxz
xchg
xor
adc
xor
lods
aas
xchg
xor
or
sbb
cmpsb
push
aaa
daa
inc
dec
jns
xor
mov
cmpsb
pop
test
xchg
xor
fdivp
pop
mov
sub
push
mov
xchg
sbb
inc
xchg
sbb
sbb
inc
loop
push
adc
ss
jbe
jb
mov
enter
lods
loop
sbb
ret
movsl
dec
cltd
dec
jmp
cld
xchg
in
test
mov
push
dec
mov
aaa
and
lds
dec
xchg
push
mov
hlt
inc
sub
repnz
test
dec
repnz
xor
or
dec
in
das
mov
popf
adc
dec
xchg
lret
mov
enter
sub
adc
jmp
lods
out
sub
cmpsl
fdivs
mov
in
add
ljmp
jl
ret
fdivrl
jecxz
loop
inc
es
fsincos
jp
loope
movsl
dec
and
decl
inc
lods
dec
dec
mov
into
dec
aam
scas
and
pop
jns
cmp
test
stc
pop
dec
mov
sub
jp
dec
jne
cmp
and
push
push
jb
dec
push
sbb
xchg
lahf
push
xchg
dec
mov
test
jge
xchg
push
inc
mov
push
lret
in
ds
repnz
adc
lods
adc
mov
popf
push
add
adc
cltd
mov
lahf
push
sbb
mov
xchg
dec
imul
addr16
sbb
inc
cmp
push
xor
xcrypt-ecb
cmpsl
or
push
test
loop
xor
sbb
xor
ficoms
addr16
push
dec
mov
push
addr16
xor
les
bound
pop
dec
sarb
addr16
bound
aaa
lds
cmp
addr16
cmp
mov
lods
idivb
mov
xor
sbb
or
je
aam
jp
enter
test
faddl
xchg
rorl
das
ds
sar
cmp
jg
sbb
xor
sub
mov
movsb
mov
cmc
lods
pop
stos
dec
call
inc
sti
fistpl
scas
ja
xor
xchg
imul
lcall
xor
and
sarl
lods
xor
addr16
pop
inc
int3
sub
jp
push
xchg
xor
pop
sub
mov
jbe
subl
pop
sub
in
jnp
cmpsl
mov
insl
js
pop
push
out
jne
dec
lcall
sub
and
mov
dec
sub
and
sbbl
and
lods
loop
dec
and
and
pop
xor
dec
sarl
and
mov
sbb
push
jne
or
fldcw
and
or
adc
mov
dec
cmp
add
dec
pop
jl
or
pop
les
push
pusha
cli
sub
mov
bound
je
push
mov
and
sbb
stos
fsubl
dec
sub
inc
fcompl
jge
xchg
add
cld
dec
or
int3
adc
out
pop
mov
lods
cmp
xor
js
xchg
or
add
jnp
daa
jne
jg
lret
pop
cmp
je
mov
loopne
push
enter
push
and
dec
jne
les
sbb
and
mov
enter
jp
mov
mov
mov
mov
mov
and
push
adc
scas
xor
out
and
pop
loop
add
cli
fs
out
and
push
lock
ret
push
dec
and
mov
pop
xlat
sub
or
push
add
nop
lahf
jae
push
loop
or
xor
loop
xor
stc
xor
shll
and
xor
lods
or
loopne
ja
sbb
or
sti
cs
mov
push
into
push
push
mov
push
sbbb
icebp
or
mov
or
adc
mov
push
sub
repnz
xchg
mov
xor
sbb
loope
movsl
into
imul
sbb
inc
and
out
in
push
sub
xchg
xor
cmp
cmp
pop
inc
lss
dec
aas
enter
push
stos
and
clc
cmp
pop
add
lods
adc
jb
pop
xchg
xor
clc
mov
pusha
cs
scas
inc
lock
sub
hlt
icebp
stc
daa
mov
lock
insb
lods
jo
fistl
inc
lods
mov
and
pop
repz
sub
inc
mov
mov
or
cmpsb
bound
nop
mov
cwtl
test
push
mov
dec
das
fsubrs
or
aam
dec
xor
ljmp
jmp
pop
or
jae
in
cmp
in
popa
out
adc
ret
xchg
cmp
xchg
pop
imul
out
jmp
mov
inc
mov
les
test
icebp
int3
sbb
jp
fcoms
fsubrl
loopne
adc
out
jp
push
in
or
or
adc
lret
cld
jne
lret
and
add
iret
xorl
dec
xor
call
adc
cld
adc
push
sbb
mov
outsb
pushf
arpl
test
lea
psrad
inc
cmp
cmp
adc
and
and
pop
mov
dec
pusha
inc
push
pop
lcall
sbb
pop
movsb
in
mov
and
inc
divb
mov
mov
mov
sbb
or
xchg
pop
sbb
mov
dec
insb
sti
addl
inc
pop
xor
mov
jmp
das
std
fs
bound
add
arpl
fdiv
mov
push
imul
repnz
or
bound
sub
adc
xchg
sbb
mov
jae
or
or
lods
repz
loop
hlt
mov
aad
jg
sub
mov
xchg
test
pop
pop
cli
push
jmp
adc
add
ret
jp
mov
cmpsb
adc
xor
push
es
daa
mov
jp
xor
mov
adc
sub
cld
xchg
jmp
adc
fdivr
xor
adc
inc
sbb
dec
xor
and
rorb
roll
adc
or
add
push
movsb
xor
and
mov
or
mov
push
orb
ror
and
lcall
rcrl
mov
or
sub
arpl
add
sub
jle
addr16
adc
jp
cmp
adc
mov
mov
inc
repz
pop
daa
ljmp
and
andl
jne
loopne
push
stos
inc
lret
not
and
sub
je
push
cmpsl
and
repnz
out
lcall
movzbl
shll
sbb
fwait
mov
xchg
add
mov
test
add
fwait
xchg
mov
or
lock
pop
xchg
cld
jae
jle
mov
cmp
pushf
addr16
xchg
int3
adc
das
mov
or
es
mov
or
inc
sbb
test
sarb
and
pushf
addr16
cwtl
sub
test
xchg
ds
cmp
add
lock
cltd
xchg
aam
push
sub
ljmp
imul
jecxz
fistpl
out
or
fwait
xchg
mov
or
inc
nop
push
test
aaa
nop
cltd
dec
cmpsb
sti
pop
adc
cmpsl
dec
mov
repz
mov
xchg
lret
stc
jae
dec
enter
loope
daa
sbb
or
adc
dec
movsl
mov
dec
pop
movsb
imul
sbb
mov
aas
dec
inc
xchg
sbb
push
inc
adc
mov
inc
lods
les
cmp
push
les
or
int3
es
pop
or
int3
lret
sub
lock
pop
or
lods
jle
into
pop
jge
cli
imul
imul
shll
mov
jbe
and
enter
add
xchg
cmp
cmpsb
push
movsb
add
sahf
inc
and
or
xchg
or
inc
mov
mov
repz
orb
inc
ja
aam
cmp
adc
loop
ljmp
push
sub
mov
insl
xchg
jge
adc
lods
outsb
mov
adc
pushf
loop
mov
and
adc
cs
ljmp
popf
add
xor
xlat
jb
xchg
push
dec
or
orl
adc
adc
mov
mov
adc
movsb
and
add
or
lods
mov
xor
lahf
sub
adc
or
mov
mov
jne
lahf
out
test
dec
enter
adc
out
outsb
test
into
roll
xor
outsl
inc
jbe
and
lea
popf
rcrb
pop
xchg
push
push
popl
and
loop
push
mov
or
and
mov
orl
add
and
das
adc
je
mov
sub
xchg
scas
js
cmp
mov
sub
and
fs
adc
jmp
or
xchg
repnz
loop
xor
ret
cmp
push
test
fsts
mov
cmp
add
sbb
push
sbb
loopne
xchg
inc
inc
and
mov
jb
push
mov
aaa
adc
sbb
sub
cltd
xor
jmp
icebp
lds
and
inc
clc
add
jmp
adc
or
and
cld
fistl
push
mov
push
and
bswap
inc
mov
xchg
push
cmp
push
push
enter
xchg
clc
add
ds
or
test
jmp
adc
adc
sbb
ljmp
dec
js
cld
loope
push
jl
pop
loope
sub
and
xchg
push
and
cmp
lods
mov
jnp
and
and
rclb
inc
push
and
shll
or
and
dec
sbb
lret
and
lods
mov
and
lcall
dec
nop
or
mov
fdivl
xchg
popa
cmp
orb
outsb
nop
testb
pop
and
out
xchg
adc
cltd
inc
addb
and
xlat
cmp
adcl
push
inc
and
ljmp
cmp
movsl
cwtl
fisttpl
cltd
xorb
fdivl
pop
push
mov
jno
and
add
cmp
movsl
int3
loope
nop
mov
mov
aas
rorl
mov
cmpsb
add
mov
enter
fnstsw
add
insl
mulb
add
loop
rclb
nop
add
dec
scas
sub
out
mov
int
jp
enter
add
adc
jns
dec
femms
fadds
nop
add
addr16
mov
adc
sbb
mov
inc
fcomip
jp
push
ret
pop
lea
sbb
jno
jbe
push
push
dec
pop
mov
pop
jmp
xchg
enter
sbb
add
jecxz
and
mov
lea
push
ret
and
pop
ret
dec
test
outsl
cmpb
and
das
xchg
ds
mov
outsl
test
cld
adc
add
shr
and
add
rcll
or
aad
mov
cmp
xor
lea
xor
xchg
jbe
mov
pop
mov
clc
adc
xchg
scas
rcrb
sub
aad
lret
adc
popa
addr16
push
in
mov
jne
shll
add
nop
and
lods
sbb
dec
mov
mov
loop
xor
xor
jne
in
pop
dec
sub
aam
dec
call
lret
adc
xchg
sahf
mov
dec
nopl
or
jns
ret
je
mov
rclb
push
push
cmpsl
pop
lds
pushf
aam
sbb
xorl
div
test
pop
push
sub
mov
fistpll
repz
inc
aam
add
aas
lahf
cmpsb
push
cmp
sub
out
aam
pop
mov
inc
add
jbe
ret
and
in
xlat
orb
mov
add
ror
movsl
pop
movsb
add
xor
ja
add
mov
dec
xchg
dec
rorb
cwtl
mov
lea
mov
jge
and
leave
add
xchg
mov
fistpl
cwtl
cltd
rcrb
nop
out
pop
adc
push
lahf
push
add
push
call
jp
or
subl
cwtl
cli
jl
dec
and
jl
mov
cwtl
movsb
add
sub
out
or
sbb
in
adc
inc
rcrb
push
les
enter
mov
pushf
sgdtl
imull
ret
int3
jae
cmp
fs
fmuls
fcoml
loopne
in
pop
enter
add
or
lods
push
pop
sar
add
or
adc
sub
jne
and
outsl
pop
nop
jl
rolb
sahf
pop
cmpl
sbb
fbld
stc
mov
fmuls
fcompl
add
sub
sbb
mov
jl
and
stc
pop
enter
in
shlb
xor
cmp
xchg
nop
pop
clc
and
sbb
xor
or
aad
and
xchg
adc
adc
push
add
shr
and
and
fsubs
adc
inc
and
inc
mov
cmp
mov
push
clc
lret
sub
cmpsl
adc
in
push
inc
mov
fiaddl
dec
dec
xor
xchg
test
test
xchg
lods
pop
scas
mov
and
cmpsb
mov
xchg
lret
pop
xchg
sub
lods
add
mov
rolb
pop
cmp
test
lods
jmp
and
lock
sub
cmpsb
je
xorl
stos
inc
inc
xchg
les
inc
push
inc
push
mov
icebp
push
push
mov
inc
push
repnz
lods
adc
sub
inc
mov
call
cmp
pushf
inc
mov
and
mov
cmp
call
lods
repz
push
push
push
pop
adcl
nop
movsb
xchg
push
rclb
aam
shl
push
pushf
repz
xchg
popf
mov
push
lods
jle
pushf
mov
movsb
or
fwait
pop
push
pop
shlb
dec
mov
mov
xchg
lds
mov
stc
pop
enter
mov
nop
mov
mov
and
cmp
iret
inc
fcoml
leave
pop
adc
push
and
rol
sar
movsl
popf
dec
adc
mov
cmp
call
push
lcall
push
sbb
lcall
adc
arpl
scas
mov
fs
imul
lock
scas
call
mov
mov
fistps
pop
movsb
movsb
stos
mov
dec
mov
mov
idiv
movsb
xor
jne
lret
mov
push
push
xor
mov
scas
cmp
push
rorl
sub
mov
aaa
fidivl
or
inc
adc
adc
add
xchg
adc
lods
or
or
dec
pop
scas
mov
mov
sub
and
push
cltd
fs
sbb
pop
adcb
mov
subb
xchg
lock
lcall
cmp
pop
test
ficoms
cmp
mov
std
test
sahf
adc
mov
in
in
movsl
je
jp
jo
add
sbb
movsb
add
cltd
fnsave
movlps
xchg
xchg
push
xchg
add
xchg
and
insl
out
test
mov
and
add
out
cli
iret
pushf
mov
sbb
in
jle
pop
xchg
mov
arpl
xchg
incb
leave
dec
push
in
rclb
fnsetpm(287
pop
sbb
and
sbb
sbb
adc
adc
inc
pop
sbb
add
jmp
pop
mov
sbb
rcpps
pop
add
loope
aas
dec
dec
insl
sub
jnp
cmp
ret
popf
rorl
popf
lea
jp
rorb
andl
insb
inc
sub
cli
sub
inc
movb
add
sbb
sbb
xor
mov
inc
cmp
arpl
and
jmp
mov
push
mov
mov
scas
pop
sub
mov
movsb
dec
cmp
jne
jp
pusha
adc
xor
orb
add
add
or
sti
sbb
adc
mov
add
sbb
mov
xchg
sbb
je
shll
int3
fcomps
inc
jp
push
dec
test
or
xor
xor
jo
popa
lea
mov
dec
xchg
movaps
push
repnz
and
sbb
adc
sbbb
or
pop
inc
inc
loopne
jne
inc
jb
aas
adc
daa
inc
int3
mov
adc
inc
negb
add
lret
adc
sti
fisubs
sub
pushf
xorb
jmp
pop
mov
or
aaa
inc
push
sbb
js
push
xor
add
sub
mov
loopne
add
mov
movsl
cmovbe
adc
sbb
aam
push
push
cli
frstors
xor
lds
xor
lret
cmp
add
jmp
stos
movsb
push
paddb
rcrl
into
adc
mov
add
push
jle
dec
mov
add
jbe
xor
fdivrs
or
sti
pop
pop
adc
fiaddl
sub
sbb
mov
jne
add
jp
inc
cmp
and
push
sub
mov
imul
mov
push
adc
cmp
bound
mov
pop
adc
push
mov
orb
ja
aaa
into
push
cwtl
mov
jnp
mov
movsl
jno
xchg
lea
sub
cmp
sub
inc
ds
fs
xchg
mov
jle
sub
mov
dec
mov
xor
mov
pop
pop
shl
sbb
pop
adc
add
ret
dec
in
js
push
add
jne
sbb
ret
sub
je
or
shr
icebp
inc
addl
adc
and
lods
dec
push
das
add
adc
mov
mov
test
sbb
cwtl
inc
push
popa
mov
jle
sub
jne
sti
push
mov
jl
push
or
test
mov
jmp
sarb
inc
dec
or
sub
push
sbb
mov
mov
inc
sbb
and
mov
sub
mov
popa
lods
out
lock
inc
out
xchg
inc
ja
cmp
push
push
sub
shr
pop
dec
push
and
adc
enter
adc
adc
ljmp
sahf
jmp
inc
jp
jmp
popf
push
cmp
xor
mov
and
or
or
xchg
ljmp
and
repz
outsl
sub
enter
repnz
mov
mov
shr
pop
mov
sub
bound
push
std
rclb
inc
sbb
adc
js
enter
and
arpl
addl
xchg
push
loop,pn
nop
and
mov
inc
xchg
addr16
js
pop
shrb
jg
hlt
inc
sub
adc
sub
sub
xor
xor
mov
cmp
adc
stc
mov
mov
popf
sti
repz
cs
push
and
push
pushf
inc
je
push
fistpll
ret
fdivp
les
unpcklps
lock
lea
lock
mov
xor
sarl
jle
out
out
sub
push
les
jmp
divb
jns
xchg
js
add
cmpsb
push
jbe
push
cmp
jle
adc
data16
sub
rolb
jne
pop
out
mov
call
push
mov
lods
mov
add
inc
add
xchg
enter
push
xchg
rcll
je
xor
or
pop
pop
add
stos
hlt
pop
dec
push
adc
mov
pop
out
pop
xor
pop
xchg
loop
inc
push
sub
mov
not
mov
call
push
cmp
mov
dec
adc
out
cwtl
enter
je
push
mov
cmpsb
int3
mov
pop
adc
mov
jp
mov
test
adc
arpl
test
inc
movsl
push
pusha
out
pusha
jp
add
mov
lods
add
into
loope
icebp
xor
adc
add
push
and
add
bound
xchg
sbb
mov
incl
fsubp
bound
xchg
and
add
fs
je
inc
test
push
push
dec
mov
mov
in
cmc
lods
add
add
adc
xor
xlat
jbe
add
push
mov
pop
mov
add
fcomip
incb
out
xlat
mov
add
push
popa
add
add
and
int3
leave
in
add
mov
scas
stc
dec
mov
cltd
or
aam
dec
xchg
push
sbb
add
cmp
sub
fcmovnu
lret
add
fwait
pop
mov
cmp
xchg
dec
lds
add
pusha
or
sbb
in
std
cmp
int
lods
or
popf
xchg
jle
outsb
aad
add
dec
adc
xor
push
push
add
lahf
mov
cld
iret
sbb
js
add
mov
mov
rorl
loope
adcb
adc
xor
roll
push
and
pusha
add
mov
ret
sbb
jg
pop
repz
mov
nop
adc
and
add
push
jb
mov
movsl
add
cmc
dec
in
sub
or
and
mov
je
fs
add
cmpsl
cli
mov
xchg
jle
sbb
shll
repnz
push
mov
sbb
data16
adc
flds
insl
leave
push
stc
das
jmp
add
pop
gs
add
js
push
add
lret
pop
fildl
stc
and
mov
jne
push
pop
aaa
push
jp
icebp
or
sbb
cs
paddsw
int
stos
mov
leave
lea
jl
pop
add
dec
mov
loopne
rorl
incl
pop
iret
jl
fwait
scas
mov
clc
lahf
pop
outsb
ss
push
dec
je
xchg
cs
or
push
lock
sbb
leave
dec
add
jne
or
cmp
sbb
sbb
data16
aad
add
shl
ret
adc
add
dec
jmp
aad
adc
sbb
adc
into
adc
mov
sbb
nop
dec
or
mulb
jge
movl
mov
mov
testb
subl
pop
add
push
and
jg
movl
dec
or
mov
pusha
fldcw
mov
or
add
inc
call
or
push
and
mov
test
dec
lds
or
fnsave
hlt
inc
popf
sub
test
mov
inc
mov
les
or
in
adc
test
dec
dec
pop
or
mov
loope
cmp
sub
adc
pusha
and
loopne
adc
sti
or
inc
call
pusha
inc
movsb
out
jmp
adc
aad
nop
and
rcll
test
call
shlb
adc
shl
test
mov
adc
adc
call
and
cmp
and
sub
adc
call
popa
or
and
mov
and
mov
xor
or
jmp
in
ret
stos
in
or
in
dec
fimull
jno
cmp
lea
inc
imul
pop
sbb
xor
arpl
inc
inc
insb
outsl
loope
je
insl
dec
and
lea
xor
imul
xor
and
or
ss
sub
xor
or
or
insb
sub
lock
stc
xor
xor
test
ja
mov
and
push
sbb
xor
mov
ss
cmp
jbe
or
or
and
fs
out
mov
fistpll
mov
inc
or
inc
lcall
push
rolb
lcall
ljmp
and
sub
xor
inc
inc
push
inc
sbb
pop
and
dec
and
push
adc
adc
jl
adc
mov
xor
das
mov
jle
hlt
into
es
clc
mov
call
addr16
jg
js
inc
dec
jne
lock
mov
or
push
cmp
mov
popa
push
jmp
sbb
loop
fists
mov
sti
mov
mov
in
sub
add
jmp
out
addl
into
call
pop
dec
mov
inc
xchg
pop
mov
cmp
call
sub
push
adc
mov
shr
pop
xor
mov
cmp
movsl
or
xor
insl
into
lock
rolb
faddl
jne
pop
int
cs
sub
dec
loope
dec
cld
jg
sarb
push
xlat
jmp
mul
and
lea
stc
xchg
inc
ja
and
cli
call
popa
pop
inc
jl,pt
xchg
pushl
cwtl
inc
inc
xorl
jl
in
fs
push
mov
mov
gs
jne
cli
loopne
jne
or
adc
push
jge
sub
cld
int3
ljmp
out
lock
fadds
sbb
push
jbe
push
pop
imul
ret
adc
cwtl
lea
mov
les
dec
lcall
test
rcll
pop
addb
jge
test
push
es
push
sub
mov
mov
icebp
adc
ret
mov
mov
subl
xor
lock
sub
sbb
adc
sbb
lods
orb
js
mov
push
cmc
dec
xchg
mov
outsl
data16
jmp
jge
cld
pop
js
jno
xor
insb
movsl
sbb
rcrb
push
fs
mov
ds
add
outsl
test
lds
fadd
xor
std
and
out
xchg
xchg
rclb
inc
cmc
les
mov
popf
into
in
or
icebp
add
cmpb
rolb
xchg
jne,pn
lods
sub
add
push
add
xor
push
cmp
jmp
bswap
and
pop
add
pusha
dec
sub
and
jecxz
out
mov
cmp
je
aas
adc
cmp
std
ja
cmp
inc
sub
jno
lret
mov
stc
das
adc
test
adc
pop
jmp
cld
les
scas
int
xchg
in
lret
push
insl
out
adc
inc
hlt
push
ret
mov
mov
iret
and
test
xchg
mov
cmp
add
divb
pop
dec
xchg
sbb
sub
inc
nop
jg
iret
lock
std
or
bound
enter
inc
cmp
adc
xchg
or
jle
fs
and
adc
and
xchg
in
xchg
sbb
adc
and
mov
in
jle
cld
xchg
pop
xchg
enter
mov
inc
and
int3
imul
sub
jbe
jo
fcoml
adc
or
ret
or
dec
cli
shlb
rolb
pop
bound
add
and
inc
xchg
iret
lret
pop
rolb
push
dec
imulb
fstpt
inc
test
stos
lods
dec
in
rdmsr
xchg
ret
and
mov
push
call
pop
cs
ds
aam
pop
add
jns
adc
insl
or
push
or
jbe
nop
nopl
pop
or
cmp
mov
pop
call
jno
xor
sahf
cmpb
push
ja
push
push
jb
jbe
insb
out
addr16
mov
xor
xchg
adc
push
mov
scas
dec
je
stos
sub
adcl
clc
xor
jnp
jns,pt
movsl
les
inc
add
jl
inc
cmp
mov
cmp
std
dec
sub
pop
out
xchg
dec
jmp
pop
clc
fists
and
icebp
test
stc
loope
sub
sub
punpckhwd
shld
call
sub
test
rcrb
addr16
icebp
in
loope
sub
dec
test
testb
push
jge
mov
mov
or
mov
adc
es
enter
jne
aam
cltd
dec
or
nop
xchg
cmp
test
fnstenv
shl
mov
mov
enter
and
and
dec
ds
push
mov
in
xchg
mov
lock
orl
adc
jns
push
je
loope
sub
divb
enter
in
add
dec
add
or
clc
add
or
rclb
push
jne
test
inc
inc
push
outsl
lods
sbb
add
testl
jne
in
xor
mov
push
ds
out
xchg
sub
mov
adc
test
push
sub
in
inc
cltd
stc
enter
clc
inc
test
dec
inc
ror
push
stc
test
mov
mov
js
and
or
ljmp
inc
cmp
ja
sbbl
into
pop
loope
adc
lds
pop
add
sbb
sbb
cmpsb
sub
pop
sbb
daa
sti
ret
loopne
jne
mov
movd
dec
or
test
xor
and
sub
jp
pop
out
push
jno
jmp
push
pop
or
pop
cld
les
stos
mov
fidivl
add
lret
movsb
or
inc
xor
dec
ret
sub
inc
and
mov
les
movsb
outsl
cmc
ret
fiadds
je
mov
dec
hlt
jmp
test
mov
add
jle
dec
icebp
test
call
add
xchg
or
lds
mov
adc
add
and
mov
push
jae
jp
and
pop
aam
push
icebp
push
sbb
inc
lret
xchg
sub
inc
outsl
and
or
lret
and
mov
sbb
icebp
or
repnz
int
push
push
repnz
addb
xor
sbb
das
dec
and
stc
xchg
adc
loope
lret
int
cmc
and
scas
inc
jbe
sbb
and
jge
xchg
dec
jbe
mov
stos
int
or
jns
adcl
mov
jl
scas
stc
or
or
call
inc
jbe
adc
or
scas
cmp
inc
sti
xchg
aam
fcoms
std
xchg
push
fwait
dec
fisttpll
sub
jmp
push
push
shlb
lret
mov
test
or
sbb
xchg
and
jbe
xchg
or
es
or
and
inc
test
mov
movsl
outsl
imul
xorb
ja
or
sbb
inc
pop
inc
ret
xor
inc
inc
and
adc
jne
mov
adc
das
int
nop
add
inc
sub
inc
jb
or
mov
jp
mov
cmp
ret
xor
popf
ds
push
movsl
daa
call
xchg
cmpsb
outsl
and
and
jmp
jge
sub
push
jnp
add
je
ss
mov
cwtl
sbb
movzbl
sar
add
pop
pop
vmread
mul
popa
lea
push
xchg
test
mov
int
push
fidivrl
outsl
add
or
call
jae
cmp
xchg
push
enter
sub
call
xchg
popf
mov
push
test
adc
cmp
and
jne
or
or
cmpb
out
fwait
jae
push
add
sub
or
push
call
lods
mov
mov
sbb
jns
mov
stos
and
sbb
test
es
adc
lret
enter
and
and
dec
or
inc
cwtl
js
andb
shlb
loope
mov
push
adc
pop
or
iret
sub
and
add
roll
or
in
inc
or
pop
dec
icebp
push
movsb
inc
adc
inc
call
mov
sahf
jp
adc
or
dec
jmp
mov
dec
out
add
lods
sbb
dec
xor
push
push
addb
and
inc
orl
and
mov
addr16
ljmp
sub
inc
sbb
js
ds
cmpsl
outsl
dec
adc
arpl
adc
jg
out
fs
and
adc
rcrb
shlb
and
out
cmpsb
rclb
sbb
adc
mov
or
imul
or
jmp
lods
inc
and
dec
ret
sub
movsb
call
sbb
jb
daa
or
rclb
shr
pop
add
jns
dec
fimull
fsub
inc
rorb
call
jo
push
fs
xchg
pop
leave
pop
jle
and
test
dec
adc
shl
cwtl
xor
xor
adc
cwtl
sbb
mov
sbb
js
or
adc
pop
or
testl
add
xor
xor
lock
imul
call
pop
pop
cmp
sbb
or
ss
push
jns
dec
xor
ljmp
add
dec
cmp
cmp
xchg
cld
les
adc
das
add
xor
cmp
mov
pushl
fcoml
ja
jo
rcrb
xor
sub
int3
xor
dec
les
dec
jbe
xor
test
dec
jae
sub
icebp
or
outsb
dec
push
lock
gs
xor
push
dec
popa
jnp
sbb
sbb
outsb
dec
dec
cld
xor
add
dec
insl
push
loope
adc
push
imul
cwtl
cmp
dec
inc
popa
out
lds
add
inc
xor
movsl
aaa
sbb
repnz
sub
or
frstor
jle
dec
push
jns
jb
inc
adc
cmpsb
jne
gs
xor
and
xchg
jo
push
xchg
clc
inc
fdivrl
sub
bswap
and
adc
mov
dec
loopne
ret
push
add
push
mov
pusha
dec
outsl
imul
enter
or
mov
pop
movsl
sub
push
nop
sub
mov
ficoml
dec
pop
scas
fnstsw
inc
aam
pop
jbe
or
pop
and
gs
mov
inc
icebp
js
push
push
mov
jne
xrelease
adc
arpl
push
mov
or
adc
or
out
mov
les
repz
jecxz
test
test
in
and
int
iret
repz
clc
mov
mov
lret
imul
add
push
push
pop
xor
repnz
inc
add
outsl
js
sbb
sub
insb
divb
dec
gs
outsb
xor
aas
jb
fmull
inc
sahf
adcl
mov
lods
adc
and
lcall
stos
mov
movsl
inc
sahf
or
ret
jp
cmc
pop
push
sub
push
dec
and
jo
and
icebp
sbb
dec
movsl
and
andl
xor
add
addb
cmpb
inc
cmp
adc
sbb
push
jae
dec
lock
stos
sub
fldpi
ljmp
or
adc
xchg
mov
test
ljmp
inc
fwait
add
jne
cmp
mov
lahf
sbb
mov
pushf
sub
or
cltd
bound
sbb
and
fidivrs
nop
lock
push
movb
add
fcomps
push
cli
xor
sub
dec
lods
outsb
adc
mov
inc
fistpl
add
int
insl
cmp
dec
jbe
or
in
pop
jmp
test
not
cmc
add
sbb
and
nop
nop
or
fwait
xor
insb
add
fnsave
lds
inc
loopne
mov
adc
in
fcmovnu
push
mov
into
cwtl
sub
adc
es
sahf
cmp
inc
pmaddwd
fsubs
fwait
mov
cmp
pushf
and
xor
andnps
scas
std
data16
sub
aaa
in
xchg
push
and
or
push
and
repnz
sub
fsubrs
jmp
mov
mov
lret
icebp
cwtl
or
xor
and
cld
shlb
sbb
inc
les
enter
test
inc
mov
not
push
pushf
cs
jmp
clc
add
inc
cmp
pushf
ffree
lock
jmp
rcr
mov
cmp
sub
sub
push
in
clc
push
pusha
stos
lea
pushf
movsb
pushf
xor
out
jecxz
call
xchg
mov
mov
mov
jae
cmpsl
xchg
pushf
inc
loop
lds
jecxz
popa
rcll
rcrb
mov
jge
stc
sub
xchg
fs
inc
mov
enter
into
lret
mov
divb
lods
dec
movsl
popf
mov
pop
mov
and
sarb
push
pop
jmp
movsb
ja
sub
push
test
jmp
add
add
fadds
in
push
pusha
mov
push
mov
orb
sbb
or
hlt
daa
mov
adc
cmp
pop
cmp
xchg
out
xor
push
bt
subl
mov
fmul
shl
mov
pop
dec
sub
xchg
xlat
mov
inc
jle
loope
sbb
xchg
ljmp
xchg
iret
call
pinsrw
fld
xor
shrb
jecxz
loop
int
enter
add
adc
mov
sbb
stc
inc
jmp
sub
add
call
or
sub
fisubrl
bound
loop
dec
lahf
outsl
notl
shr
aaa
mov
stc
sbbl
dec
pushf
cmp
xor
test
and
das
jmp
lods
pop
mov
xor
in
push
add
pop
ror
mov
sbb
mov
out
negl
clc
or
ret
and
out
cmp
cltd
add
push
ds
int
jne
pushf
loopne
inc
adc
push
les
lea
mov
lea
sarl
inc
fiaddl
xchg
sub
or
jbe
xor
fdivl
std
insl
inc
or
ret
push
push
dec
fs
cmp
addr16
mov
and
loop
xchg
out
xor
adc
jno
push
in
xor
lods
mov
test
or
push
jne
pusha
jmp
imul
insl
pop
and
push
dec
repz
mov
add
std
enter
adc
add
cmp
xchg
push
sub
rcl
into
repz
fdivrs
lret
sbb
inc
cmp
test
mov
mov
cli
mov
lret
ret
negl
ror
sbb
sbb
mov
mov
into
icebp
xor
jo
call
fs
jo
mov
mov
mov
xor
mov
mov
inc
cmp
xor
sub
out
sub
xor
inc
pop
dec
and
adc
and
sub
xor
dec
inc
push
pop
arpl
xor
sub
movsb
cmpb
jne
and
dec
jbe
adc
cli
adc
or
jo
jne
stos
push
daa
into
and
lret
fsubrl
xchg
stos
out
mov
mov
jns
popa
call
jb
pop
xor
pop
push
fmul
add
negl
mov
cmp
mov
lea
xchg
mov
fxtract
cmpsl
int3
inc
fsubr
jmp
mov
aaa
xor
xor
cmp
loope
fcompl
jae
imul
mov
jnp
daa
cmp
fdivl
clc
movsb
cmp
xchg
xor
inc
sbb
lcall
add
sahf
shl
sbb
inc
pop
cmp
mov
stc
sti
sbbb
push
mov
scas
rcl
jb
add
mov
clc
dec
mov
cmp
push
sar
dec
ret
jnp
pusha
add
into
sbb
xor
fdivl
pop
aam
dec
fsubrs
stc
scas
movsl
daa
pop
pusha
sbb
jecxz
cmp
xor
nop
mov
shlb
je
dec
notb
xor
rep
sub
test
into
call
aam
prefetcht2
stos
loopne
cwtl
fisttps
inc
inc
test
xchg
stc
clc
xor
mov
call
mov
leave
outsb
fld
in
dec
pop
add
fadds
jmp
xlat
or
mov
dec
cld
inc
push
pushf
mov
push
rep
xadd
iret
lock
xchg
fmul
jns
or
out
call
sbb
jmp
call
or
mov
fiaddl
pusha
mov
out
daa
mov
mov
scas
je
in
push
pusha
lds
dec
jne
mov
adc
dec
scas
adc
jne
or
adc
push
mov
mov
rorb
lock
testb
push
mov
xchg
jae
les
pusha
pop
xchg
dec
push
sub
pop
jecxz
nop
imul
bound
mov
daa
push
lahf
ds
arpl
add
jecxz
jb
fiaddl
outsl
aad
scas
or
enter
xchg
add
movl
rorb
mov
movsl
adc
leave
call
outsb
push
push
scas
push
fld
sub
pop
or
in
les
out
cld
mov
push
or
pop
dec
cmp
sbbb
test
ja
das
and
jae
lock
pop
mov
imulb
jne
mov
mov
imul
mov
dec
or
xchg
dec
inc
cs
sbb
inc
nop
adc
adc
test
push
inc
or
push
cld
mov
cli
inc
in
mov
and
nop
in
and
adc
enter
jo
ljmp
and
xor
mov
and
xchg
in
xchg
sub
ds
mov
and
pop
loop
scas
addr16
jmp
jle
in
cmp
cwtl
lahf
push
test
fmul
add
lret
into
int3
in
insb
and
and
add
or
xchg
cmp
and
jno
sub
adc
xchg
add
dec
adc
xor
add
mov
test
and
andb
hlt
adc
mov
sub
push
fcmove
sbb
mov
fwait
inc
pushf
ret
or
cmp
dec
or
push
mov
repnz
cmp
cmp
mov
and
pop
das
mov
mov
popa
inc
loop
or
mov
out
out
icebp
gs
dec
dec
enter
jnp
adc
shl
nop
jecxz
sbb
and
mov
adc
ja
sbb
add
hlt
dec
or
ss
or
aaa
cld
mov
xor
pop
icebp
jae
add
or
das
inc
push
or
or
inc
adc
mov
push
sbb
adc
pusha
mov
les
adc
push
movsb
or
and
pop
in
xor
enter
bound
fs
jecxz
mov
push
push
adc
inc
sbb
dec
das
xor
adc
dec
imul
roll
cwtl
sbb
imul
insb
adc
inc
mov
loop
dec
xchg
mov
or
push
push
xor
or
push
pop
nop
popa
daa
jo
dec
mov
push
pop
sub
or
push
aas
dec
pusha
sub
call
cwtl
shll
out
sub
call
adc
out
ja
sbb
out
or
shlb
or
add
imul
arpl
aam
sub
es
inc
dec
adc
or
or
cmp
jb
or
push
into
sbb
xor
dec
add
outsl
test
or
cmp
les
inc
insl
inc
gs
sub
mov
mov
xchg
inc
shll
fs
add
pop
das
jne
cmc
sub
sub
dec
dec
stos
xor
and
dec
sub
push
xchg
decb
mov
in
ret
adc
pop
popf
inc
cmp
mov
aam
les
cs
mov
call
fdivl
dec
xchg
loopne
filds
mov
jo
push
push
stos
addr16
add
mov
cld
test
and
lahf
scas
ljmp
jmp
dec
ret
cld
ja
xor
les
mov
inc
notb
hlt
add
jnp
adc
lea
adc
jb
out
cmc
test
adc
out
adc
lock
js
inc
in
adc
dec
and
in
sub
inc
add
and
jb
inc
xor
dec
aaa
adc
movsb
jge
mov
iret
add
hlt
sub
nop
int
adc
add
cmc
out
add
pop
icebp
sbb
test
in
pop
inc
and
cmp
pusha
cmp
nop
and
inc
movsb
and
sub
adc
rorb
and
push
cwtl
mov
ror
inc
es
imul
or
mov
and
jg
jns
push
push
adc
sbb
ljmp
ret
mov
add
out
lods
out
push
negb
and
adc
and
insl
repz
mov
sub
jb
sub
or
pop
sub
or
pop
sub
jecxz
filds
push
lret
loope
pop
call
lods
stos
sub
push
adc
insb
push
loope
ljmp
and
jmp
pop
mov
sub
je
jnp
pop
jmp
gs
add
rcrb
mov
pushw
jns
in
sbb
test
fs
inc
jne
xor
je
push
out
lock
aad
idivl
xor
inc
je
out
movsl
out
add
push
gs
shll
push
outsl
sbb
daa
sarl
int
sub
adc
sub
mov
jne
sbb
and
push
inc
mov
inc
inc
jbe
and
jno
push
jns
and
dec
imul
popa
hlt
jae
sbb
pop
int3
out
jns
ret
mov
push
jae
inc
in
rclb
push
mov
cmp
push
scas
jae
dec
dec
cld
lret
pop
inc
sbb
dec
outsl
arpl
mov
shrl
insb
sbbl
stos
out
out
dec
push
fs
sub
mov
lds
lods
fsubrl
dec
sahf
adc
add
dec
mov
outsb
mov
and
js
insb
sbb
pop
push
inc
testl
inc
insb
jb
inc
dec
push
jo
inc
sbb
cmp
fbld
outsb
scas
push
mov
enter
jl
fwait
inc
imul
dec
sbb
dec
jle
aam
xchg
cmc
pop
cmp
jl
cmp
dec
or
dec
scas
mov
dec
stos
pushf
pushf
xchg
pop
pop
mov
out
repz
pop
sbb
ljmp
xchg
ss
or
arpl
out
cli
cltd
mov
sbb
hlt
jmp
inc
shr
or
push
jmp
sti
push
es
dec
hlt
in
in
jo,pn
faddl
mov
outsl
fsubrl
jle
xchg
inc
dec
inc
fisubrs
cwtl
repz
hlt
mov
aaa
jmp
and
and
adc
sub
or
xchg
inc
enter
and
imul
xor
rclb
xchg
xor
sbb
fcoml
add
cld
jno
out
sbb
in
xor
adc
sbb
mov
cmc
mov
mov
mov
dec
mov
js
jl
and
xor
sub
inc
lock
inc
xchg
and
adc
daa
sub
out
inc
mov
sti
in
rcll
test
in
jb
sbb
pushf
jge,pn
xchg
aaa
sub
xor
push
mov
push
mov
jb
dec
xor
sub
fs
or
adc
pop
dec
inc
or
add
xor
sub
sub
sub
jmp
push
das
rcr
imul
mov
dec
xchg
jo
xchg
jbe
in
test
inc
sbb
popa
or
mov
std
in
hlt
dec
in
sub
sbb
ja
sti
xchg
test
and
adc
xchg
adc
adc
add
mov
cmpsb
inc
movsl
fchs
loopne
and
out
daa
loopne
clc
cltd
cmp
cmp
lods
mov
adcl
shr
cwtl
mov
test
out
addr16
cli
pop
dec
lock
pop
dec
adc
sbb
incl
stos
pop
inc
or
mov
fs
push
in
jne
push
push
icebp
hlt
xor
movsb
or
gs
adc
mov
push
push
sete
lret
rcll
pop
fnsave
cmp
in
scas
mov
and
movsb
dec
aas
inc
add
jne
mov
ret
jno
pop
decl
add
push
push
push
and
stos
std
mov
jo
jo
xchg
sub
lods
mov
repnz
fldenv
pushf
or
clc
adc
scas
xor
add
push
push
adcl
repnz
push
cmpsb
push
jo
mov
mov
dec
aas
fmuls
add
cmp
cmc
mov
or
mov
mov
dec
js
test
ret
call
lret
xlat
iret
loopne
cli
adc
or
shrl
leave
mov
shl
loope
idivl
inc
movsl
testl
push
daa
test
test
fnstsw
mov
xor
in
in
xor
cli
add
add
movsb
arpl
sub
ja
pop
add
sbb
cmpsl
in
push
popf
inc
mov
or
dec
push
cld
xchg
cwtl
dec
sub
insb
stos
mov
xor
cmp
jbe
cwtl
push
daa
or
pop
cmc
fs
js
adc
adc
dec
gs
sbb
push
out
pop
cmpsl
push
movsb
daa
enter
std
lret
loope
add
and
inc
add
dec
dec
mov
cltd
or
pop
sub
test
stc
push
enter
das
inc
jecxz
and
arpl
popf
mov
push
es
shlb
test
cmp
mov
int3
jge
jecxz
lock
or
jnp
inc
adc
or
or
push
pop
xor
gs
add
or
pop
or
pop
inc
dec
scas
or
inc
adc
push
mov
jne
imul
adc
ret
adc
sub
mov
push
adc
mov
and
mov
adc
movsl
mov
dec
int
xlat
and
inc
jmp
mov
adc
xor
or
xchg
cmp
inc
inc
dec
das
inc
sub
mov
mov
dec
mov
ljmp
clc
inc
xor
fldl
add
inc
popf
pop
adc
or
push
inc
push
orl
stos
gs
mov
rcrb
loopne
or
or
jecxz
push
or
adc
cld
loop
lock
rorl
pop
xchg
fistpll
push
fadds
pop
xorl
out
in
movsb
xchg
shlb
adc
lock
imul
or
shl
jb
adc
add
gs
in
push
mov
stos
pop
es
flds
inc
jle
xchg
or
or
hlt
adc
push
and
push
jmp
scas
sbb
mov
or
xor
inc
pop
jle
shl
or
ret
push
mov
negl
std
mov
clc
aaa
mov
jg
jne
mov
mov
mov
push
mov
jp
mov
sub
cmp
test
cmp
das
pushl
pop
mov
lcall
inc
xor
in
outsb
adcb
mov
mov
add
dec
test
pop
dec
in
out
xchg
sbb
mov
lods
and
adc
mov
fsubrl
inc
jnp
adc
mov
test
jns
push
sub
fstl
mov
ret
fwait
inc
or
aas
daa
sysenter
call
xchg
mov
mov
test
and
mov
outsl
notb
cmp
or
mov
loope
nop
mov
ds
sub
xorb
pop
adc
inc
cmp
fiadds
movsb
stos
dec
xchg
dec
jne
mov
sbb
mov
push
mov
jmp
push
pushf
adc
nop
push
loopne
add
mov
lcall
outsb
test
mov
or
movsl
les
jge
xchg
clc
pushf
lds
jecxz
orb
popa
movb
inc
inc
cmp
shl
xchg
popf
lea
aas
dec
aam
out
dec
mov
mov
mov
mov
mov
insl
adc
add
rolb
call
jg
test
xchg
out
nop
sbb
sub
syscall
lret
cmpsb
insb
pushl
xor
in
cmp
dec
cmp
or
ja
push
adc
or
ljmp
sahf
insl
outsl
add
mov
repz
cmp
push
mov
in
adc
sti
cmpsl
jno
mov
dec
push
adc
in
mov
leave
pop
pushf
adc
dec
add
push
push
and
pop
movzbl
xchg
cld
aam
lea
add
rcr
ret
inc
adc
imul
mov
ds
jne
push
jle
jno
xchg
pop
push
and
aas
fs
mov
inc
add
sbb
inc
enter
add
adc
add
sbb
lret
pop
mov
mov
adc
popf
daa
push
xor
pop
adc
xchg
pop
dec
add
inc
nop
call
jmp
adc
push
ret
add
bound
add
adc
push
divb
negl
nop
aaa
jp
mov
arpl
push
xor
inc
fs
test
or
popa
cld
lret
cmp
outsb
dec
jge
sti
adc
call
mov
inc
add
ja
inc
and
xor
stos
add
test
je
clc
insl
jnp
test
rcll
or
cmpl
jge
call
adc
dec
or
mov
sbb
jmp
movsl
push
lea
mov
out
pcmpeqw
xchg
sbb
or
add
sbb
mov
psubusb
orl
ret
cmp
cmpsb
push
or
mov
and
sbb
aam
sub
fs
jns
adc
mov
sarl
xchg
lods
sarl
and
and
dec
popa
arpl
pushf
jecxz
and
inc
xchg
dec
test
push
cs
ret
cmp
add
push
daa
call
mov
jbe
shll
dec
xchg
sub
fmuls
call
sbb
or
lcall
rorb
or
mov
push
stc
lds
adc
fcoml
pop
icebp
loope
bound
lahf
mov
jge
sbb
push
inc
orb
es
divb
rcrb
adc
pushf
cmp
das
pushl
roll
sarb
add
jno
sub
dec
jae
or
add
loopne
in
stc
inc
hlt
xchg
stos
loop
adc
inc
jb
push
lock
shlb
push
dec
and
scas
ja
imul
sub
loopne
cwtl
popa
cmp
je
in
mov
xchg
adc
icebp
enter
xlat
add
fadd
jnp
mov
push
or
dec
clc
and
pop
out
in
inc
test
mov
cltd
lahf
imul
adc
jb
push
mov
xchg
rcl
mov
adc
repnz
or
insb
in
mov
ljmp
cmp
call
out
jne
in
ror
mov
push
pop
outsb
daa
nop
pop
push
pushf
add
inc
mov
fmuls
sar
xchg
adc
mov
js
xor
shlb
roll
or
and
cmp
imul
into
adc
or
push
and
and
add
iret
mov
or
sbb
pop
in
or
mov
sub
dec
jnp
fbld
clc
iret
faddl
inc
jecxz
test
dec
pop
lock
fstl
lock
adc
outsl
into
add
add
jp
nop
fs
sub
outsl
push
adc
jecxz
lock
test
int
lahf
shlb
and
rorb
or
ss
dec
push
ljmp
enter
push
aad
scas
arpl
scas
in
cmc
inc
dec
test
xchg
movsb
popf
or
or
inc
popa
lret
adc
adc
add
sarl
insl
mov
add
popf
mov
pop
enter
add
push
lods
aad
dec
cmpsl
mov
add
les
enter
push
xchg
and
loopne
orl
sbb
adc
sub
jmp
in
jmp
sub
cmp
adc
into
add
mov
popa
or
dec
fstl
dec
cmp
les
or
push
shlb
es
in
enter
pop
ds
xor
loopne
cmpsl
dec
mov
movsl
jae
scas
call
jecxz
ds
jmp
sub
xchg
push
das
jne
les
add
movl
xor
and
and
or
call
mov
add
imul
mov
mov
lock
lock
push
add
daa
fcoml
movsl
sub
fcmovne
xor
cmc
sub
jl
adc
xor
pop
push
fsubr
xchg
adc
add
adc
bound
cmp
mov
add
adc
shlb
dec
sbb
rcrb
pop
in
sbb
or
out
xchg
inc
or
and
sub
sbb
mov
fisttpll
dec
inc
lods
mov
cmp
repnz
mov
add
inc
jb
dec
insb
push
or
cmp
xor
cmp
rorb
cmp
cmp
data16
dec
jg
addr16
push
cmp
sbb
inc
fistl
or
jl
mov
push
pop
sub
and
loopne
inc
jb
ret
or
push
shr
xlat
rol
or
loop
add
push
sti
jmp
nop
sbb
jb
cmp
ja
cmc
dec
sbb
cmp
jl
mov
mov
mov
cmp
jmp
sbb
push
sub
mov
pop
push
repnz
add
lea
push
mov
mov
sub
mov
pop
loop
and
lods
push
dec
mov
or
pusha
mov
mov
in
pop
mov
test
arpl
imul
push
aam
mov
or
out
push
inc
fcoms
faddl
fisubs
test
movsb
adc
xchg
cli
test
inc
and
rolb
xchg
push
mov
pop
fstpl
and
push
fwait
out
lods
cmp
or
test
sarb
loopne
cs
push
bound
push
leave
mov
and
xchg
int3
xchg
push
xchg
sub
jp
roll
xchg
push
add
jg
and
decb
push
leave
mov
mov
stos
xor
call
icebp
adc
mov
mov
shrl
sbb
add
js
push
test
in
jle
mov
test
je
inc
mov
add
or
cmpsl
cmp
fbld
xchg
aam
fidivl
scas
or
pop
jns
rcrb
test
call
push
lods
xchg
movsb
sub
adc
mov
jge
jno
gs
mov
adc
hlt
or
adc
sbb
insb
lock
inc
adc
lock
mov
and
adc
xor
push
lds
sub
inc
jecxz
clc
and
and
pop
lret
repnz
fwait
outsb
sub
adc
or
mov
enter
adc
std
cmp
push
pop
push
adc
push
dec
pop
pushf
dec
roll
inc
inc
mov
sbb
shll
outsl
jp
jb
push
sbb
sub
and
adc
mov
lods
adc
dec
mov
test
jecxz
jo
jb
andl
mov
pop
inc
add
or
add
andl
push
lahf
adc
add
push
mov
xchg
xor
das
frstor
or
jnp
sub
adc
lock
add
js
add
or
mov
push
dec
xchg
divl
or
inc
jbe
sub
adc
pop
adc
sbb
and
subb
fstpl
adc
pop
jo
fmulp
adc
or
inc
sub
lea
push
arpl
add
or
pop
mov
mov
push
incl
lods
mov
add
divl
aas
cmp
xor
sbb
inc
push
push
scas
in
xchg
adc
or
stc
rcr
xor
jecxz
fsubl
or
inc
xchg
cwtl
mov
add
dec
add
pushf
fists
xchg
push
sub
mov
mov
sub
add
or
xor
int3
mov
mov
pop
inc
xchg
xor
and
sbb
ljmp
test
paddsb
push
nop
and
xchg
jns
push
inc
dec
xchg
sbbb
pop
jae
bound
add
or
or
inc
out
insb
imull
int
sbb
mov
enter
xchg
jbe
pusha
adc
test
and
outsb
ja
int3
adc
insl
xor
insb
adc
adc
popa
mov
xchg
clc
mov
add
inc
xchg
je
negl
mov
push
add
test
outsl
xchg
dec
popa
outsb
pushf
mov
rclb
mov
popa
nop
add
push
orl
pushf
push
cmp
inc
jb
sbb
lock
sub
enter
nop
inc
xchg
sub
add
or
fcmovnbe
lock
and
pop
push
or
cmp
push
push
pop
sbb
pushf
movsb
xor
call
push
pop
xor
test
or
jo
aaa
outsb
cmp
aaa
mov
mov
mov
and
mov
mov
sbb
mov
xor
jno
inc
hlt
or
xor
pop
or
add
jns
sub
xor
dec
sbb
in
or
les
cwtl
sub
fmull
and
fmul
addr16
push
or
or
je
jl
subb
pop
nop
dec
int3
pop
scas
je
lcall
enter
movsb
cmp
or
xchg
xor
pop
mov
or
gs
xchg
cmpsl
pop
sbb
adc
lods
or
pop
popa
mov
into
nop
mov
pusha
jl
or
insb
popa
pop
jns
xchg
and
push
xchg
or
xor
or
movsl
dec
push
and
popa
pop
fcoms
stc
pop
je
or
jb
push
inc
adc
inc
or
dec
mov
in
pop
and
or
nop
mov
mov
pop
jb
ret
or
mov
add
xchg
and
nop
jmp
mov
dec
inc
xlat
and
jmp
sub
mov
sbb
in
add
adc
mov
adc
data16
dec
jecxz
inc
sub
pushf
or
xchg
dec
sub
mov
movsb
jl
mov
mov
sub
pop
dec
stc
adc
jb
sub
inc
inc
es
pop
and
leave
or
xchg
push
orl
les
mov
js
mov
mov
insb
dec
sbb
cmpsl
or
mov
daa
dec
out
dec
inc
loopne
ds
sbb
fwait
ror
inc
call
sbb
adc
pop
test
sbb
push
push
adc
cmp
pop
pop
pop
cmp
pop
inc
mov
sub
pusha
pop
icebp
sbb
pop
sbb
xor
or
sbb
ss
sub
cmp
adc
sbb
movsl
insb
rorl
mov
and
rorl
sbb
call
les
pop
adc
dec
inc
xor
mov
dec
cmp
adc
push
sub
ljmp
lea
xor
and
out
stc
cmp
sub
arpl
pop
jge
rclb
and
mov
rclb
and
sbb
sub
incb
lds
push
dec
imul
daa
mov
cmpl
jne
cli
rcrl
dec
and
adc
lea
or
or
inc
pop
or
adc
test
cmp
pop
xchg
mov
mov
dec
or
xor
jg
call
sub
mov
add
pop
mov
jb
adc
push
mov
mov
inc
sbb
xchg
push
ds
outsl
sub
inc
sbb
pop
push
outsb
or
xor
cmp
sub
mov
push
pop
inc
dec
mov
add
add
or
push
insb
ret
adc
inc
dec
addb
test
sub
xor
dec
stos
and
xor
sub
fcoml
in
icebp
sub
nop
adc
sub
adc
pop
sti
mov
andl
call
lret
lds
dec
add
push
inc
sub
mov
push
lret
addb
xor
and
or
push
inc
or
sub
jae
out
pop
push
mov
int3
ds
mov
ret
push
mov
push
jo
sbb
or
pop
dec
fbstp
int
or
test
fidivs
mov
or
pop
icebp
adc
test
cmp
sahf
mov
gs
or
jno
mov
mov
loop
lahf
imul
and
jle
mov
inc
aas
ret
and
mov
sti
les
es
js
in
inc
arpl
aad
or
mov
shl
popf
mov
mov
loopne
inc
or
jne
je
mov
xor
mov
jmp
cs
adc
test
mov
sbb
mov
bound
jge
xchg
in
add
mov
mov
xchg
pop
loop
adc
movb
ljmp
ja
push
jmp
or
xor
mov
mov
add
sub
xor
sub
dec
and
dec
or
jle
dec
xchg
rorl
xchg
jl
dec
arpl
mov
call
or
repnz
fsub
xchg
and
add
filds
movl
pop
inc
mov
mov
in
inc
ds
test
push
dec
add
insb
add
test
add
aaa
nop
inc
mov
inc
lods
jge
test
loope
mov
test
jp
and
mov
push
enter
iret
and
push
xlat
out
test
call
jge
popf
or
xchg
xchg
adc
push
adc
lea
jo
sbb
dec
shlb
add
movb
or
aas
cmp
inc
adc
into
and
inc
dec
loopne
decl
add
add
push
ds
frstor
sbb
mov
adc
adc
test
clc
shrl
sbb
loope
push
or
adc
add
dec
clc
sub
sbb
pusha
cmp
call
sbb
push
and
jl
adc
sub
lock
inc
mov
repz
mov
pusha
jnp
call
inc
test
mov
mov
inc
jl
mov
cli
and
call
push
inc
mov
sbbl
gs
mov
dec
call
pop
shlb
add
cmpl
scas
pop
mov
adc
xchg
adc
adc
inc
adc
adc
dec
and
push
aam
mov
push
cld
xor
xchg
jge
rclb
clc
and
xorb
clc
inc
mov
jle
fs
inc
and
inc
sub
xchg
outsb
and
out
add
adc
cmpb
push
add
xchg
cmp
in
mov
aad
push
daa
out
xor
cs
cmp
popa
adc
sub
xchg
adc
mov
lds
adc
andl
scas
inc
jb
or
call
sahf
adc
or
jnp
ret
or
sub
mov
pop
sbbb
jle
xor
out
mov
jmp
divl
lock
and
or
jae
push
mov
xchg
les
mov
sbb
movzbl
jmp
push
mov
rolb
sbb
or
dec
scas
das
pushf
adc
dec
adc
jnp
or
mov
and
adc
sub
mov
in
pushf
mov
and
sub
mul
js
sub
adc
mov
push
jmp
mov
mov
or
mov
jb
xchg
mov
nop
pop
inc
mov
pop
jne
dec
in
xor
or
inc
pop
xchg
and
cmp
pop
ja
add
jg
mov
cmc
jae
or
popf
jne
incl
jmp
push
mov
inc
cld
cltd
test
ficomps
cli
push
mov
and
add
sub
cmp
mov
enter
dec
push
jne
xchg
add
sub
inc
imulb
mov
rclb
outsb
sub
sbb
arpl
sbb
mov
sbb
sbbl
movsb
out
fldcw
insl
inc
pop
enter
sub
fimull
fstpt
popf
imul
in
test
or
nop
lahf
cmp
dec
jne
int3
jge
nop
push
imul
dec
hlt
push
mov
mov
mov
sub
rorl
std
cwtl
adc
sbbl
pop
inc
inc
cmp
lret
sub
hlt
pop
scas
in
enter
pop
push
sbb
scas
int3
mov
fs
or
aas
dec
popa
icebp
xchg
or
hlt
movsl
shlb
xor
sub
mov
pop
cmc
adc
xchg
mov
inc
xor
jmp
mov
adc
mov
mov
sahf
jnp
sbb
push
and
jo
daa
adc
loop
and
cwtl
aas
lahf
pusha
cmc
add
xor
add
and
dec
loopne
jae
and
jne
jle
popf
into
sub
subl
dec
sub
sarl
clc
xchg
push
mov
push
das
sub
add
stc
lret
and
mov
inc
adc
in
xchg
mov
adc
andl
mov
xchg
inc
dec
inc
les
push
adcl
and
xchg
scas
das
inc
nop
ja
clc
xchg
cmp
sub
dec
test
mov
dec
adc
cld
stos
mov
fcoms
mov
lret
sub
sbb
mov
mov
test
hlt
inc
jns
movsb
gs
dec
push
test
dec
ljmp
inc
cwtl
nop
push
fs
or
dec
repnz
dec
mov
shr
push
js
push
adc
push
fimuls
sub
adc
cs
jno
lret
inc
push
sbb
arpl
mov
sub
les
adc
shrb
cmp
mov
dec
fwait
xor
push
cmc
mov
xor
xchg
push
inc
xor
dec
les
sub
cs
les
and
adc
cmp
mov
jo
pop
xchg
sbb
or
nop
xchg
sub
or
mov
inc
cmp
lret
addl
mov
lea
push
lcall
xor
xor
mov
hlt
push
jl
pop
inc
push
sahf
enter
adc
prefetch
xchg
mov
adc
inc
or
jp
out
sbb
mov
push
push
daa
jmp
adc
adc
xor
add
cmpsl
mov
adc
cs
add
cmp
movsb
test
mov
mov
dec
or
call
cwtl
fs
enter
cwtl
ret
sbb
inc
dec
inc
push
fs
call
loopne
lock
iret
fnstenv
sub
xchg
sbb
out
sti
adc
mov
movsb
xchg
xchg
sbb
jle
add
add
jmp
fisttpll
mov
sbb
jl
pop
or
in
inc
fistl
mov
adc
adc
orl
adc
or
testl
add
loope
xchg
fs
cmc
jp
shrb
movsb
inc
lahf
pusha
lahf
or
sbb
test
mov
mov
rol
xor
add
jl
mov
stos
push
and
or
lahf
cmovne
cmpsb
inc
jecxz
insl
adc
xor
mov
mov
lret
in
adc
mov
jo
jo
notb
lret
mov
push
xlat
in
les
jne
xchg
imul
mov
push
and
lahf
jne
negb
pop
scas
xor
xor
mov
movsb
inc
loop
and
xor
fwait
ja
dec
pop
mov
and
mov
mov
fs
mov
into
push
icebp
nop
push
int3
and
inc
shr
adc
into
mov
mov
rorl
inc
sub
loop
mov
lods
push
inc
mov
jg
xchg
or
push
lea
or
nop
call
jmp
pop
inc
nop
aaa
add
jne
mov
imul
xor
mov
pop
and
push
loop
mov
cmpsb
adc
sbb
xor
mov
lds
push
psubusb
adc
addb
subps
add
repnz
push
lods
std
mov
jb
xchg
and
repnz
les
aaa
aam
fmuls
movsb
inc
loopne
faddl
cmp
insl
loop
data16
insl
and
jne
push
mov
cld
int
ret
fwait
mov
dec
mov
cmp
int3
and
push
or
mov
jg
lahf
inc
imul
in
adc
cli
sub
and
enter
nop
pop
fbld
icebp
dec
btr
inc
loopne
and
mov
aam
enter
lahf
sarl
jl
inc
mov
repnz
and
cmp
aad
outsl
xchg
mov
subl
and
lods
adc
sub
jnp
add
fimuls
and
call
xor
cwtl
sub
call
lea
insb
push
pop
push
inc
xor
inc
movsb
cwtl
ljmp
and
adc
addb
stos
xchg
pop
add
mov
adc
xchg
inc
fs
enter
mov
stos
inc
iret
cmpsl
into
scas
or
mov
mov
xor
leave
push
or
sbb
les
dec
jno
in
push
xchg
out
inc
push
adc
hlt
stos
xor
push
mov
lock
shll
inc
xor
test
jg
in
or
sub
and
lods
loopne
xor
and
xchg
push
out
adc
or
ljmp
and
call
adc
adc
mov
popa
std
inc
movsl
andl
pushf
das
leave
std
adc
push
add
mov
mov
or
xlat
add
ret
mov
mov
test
mov
cmp
hlt
push
sub
stc
inc
push
jmp
fwait
pop
xchg
in
or
lea
fstps
sti
mov
jmp
insb
test
jae
sub
xchg
adc
mov
call
lods
xchg
jo
sub
hlt
cwtl
push
or
or
xlat
lds
lret
sub
lds
mov
sbb
mov
lds
inc
push
sub
mov
addb
add
shl
mov
adc
mov
ja
in
cwtl
stos
and
dec
mov
sbb
test
inc
pop
jo
aad
add
dec
hlt
mov
shl
fcoml
dec
mov
jle
daa
std
pushl
mov
cmp
or
inc
inc
aam
fsts
sub
mov
sbb
cmp
aam
mov
push
jl
xchg
test
andl
ljmp
clc
out
mov
inc
and
add
cltd
or
cmp
test
sbb
xchg
loope
or
sub
cmp
cmp
dec
push
push
inc
jno
mov
roll
push
cmp
and
pop
and
and
hlt
pop
mov
dec
sub
add
adc
jo
in
les
int3
adc
jge
les
fs
or
and
xchg
int3
pusha
and
jne
call
daa
or
or
lea
add
xchg
or
lret
jl
test
jae
mov
xchg
xchg
lea
sub
les
dec
je
xchg
les
cmp
adc
and
inc
leave
cmp
lea
rol
fiaddl
cmp
lea
cmp
shrb
inc
cmp
mov
xchg
push
and
dec
fnsave
test
cmp
xchg
or
or
push
cmpsl
or
or
fldcw
std
sub
adc
pop
xlat
cli
js
out
pop
adc
push
push
xor
push
les
add
in
cmp
or
pop
push
lods
xor
cmp
sbb
shlb
test
xchg
fsubrs
push
daa
mov
xchg
and
outsl
dec
adc
hlt
adc
or
push
mov
dec
fbld
hlt
je
mov
mov
cmp
pop
mov
xor
inc
lock
xchg
or
mov
pushf
mov
cmc
js
mov
mov
sub
lret
pop
and
or
or
cmpsl
jmp
fists
inc
mov
sbb
sbb
mov
addb
pop
xor
or
mov
in
push
shrl
je
xchg
pop
fcompl
cmp
fdivrl
cmp
les
adc
push
dec
sbb
cmp
pusha
mov
pop
test
rorb
cmc
or
hlt
mov
jle
mov
cli
cmp
or
mov
jle
mov
int3
in
push
jmp
and
adc
test
push
xor
cmp
inc
mov
add
push
shrb
aas
dec
adc
je
stos
adc
fstl
lahf
pop
loope
sbb
pop
aas
les
xor
cmp
adc
movsl
dec
mov
loop
adc
test
les
or
sbb
std
lods
stos
dec
sti
jp
add
mov
pop
inc
in
js
rorl
dec
or
adc
xor
sti
xor
repnz
adc
mov
scas
sub
int3
pop
jnp
pop
and
cmp
adc
adc
inc
jge
mov
dec
dec
test
push
xchg
adc
and
inc
pop
and
leave
dec
cmpsl
sbb
inc
jnp
push
push
xor
inc
and
push
dec
inc
push
push
inc
push
inc
xchg
jns
push
xchg
jno
inc
push
push
inc
iret
shrl
js
outsl
jno
leave
push
and
test
int3
loope
dec
dec
les
push
dec
xchg
cvttps2pi
sub
push
push
scas
inc
outsl
inc
or
fcompl
aas
xchg
fsubrl
loope
or
inc
add
icebp
cmp
and
sub
pop
lea
or
outsb
movsb
inc
or
popa
shrb
loop
icebp
popf
xchg
std
lcall
sbb
arpl
loop
out
xchg
cmc
and
xor
ljmp
repnz
pop
cmp
or
mov
xchg
ret
test
stos
icebp
xchg
addl
in
xlat
out
adc
repnz
inc
call
inc
inc
cmp
inc
mov
imul
add
test
inc
sbb
add
push
mov
jo
or
sbb
aaa
add
test
fstl
lret
dec
or
mov
mov
std
fwait
inc
or
xor
push
popf
loop
sbb
enter
call
cwtl
xchg
in
pcmpgtb
test
push
lock
jne
je
outsl
lret
mov
call
lock
mov
add
sbb
hlt
push
pop
pop
jmp
add
pop
es
inc
daa
dec
jne
insl
popa
mov
dec
mov
push
pop
pusha
mov
push
je
push
mov
jb
test
xchg
dec
add
sbb
mov
push
cld
and
sbb
xchg
sbb
and
and
xchg
pop
mov
les
xor
and
adc
shlb
in
sbb
mov
adc
enter
xor
sbb
cmpsl
xor
fcoml
sub
and
sub
les
sbb
push
movsb
and
std
es
adc
fs
bound
and
das
pop
test
and
je
xlat
sbb
push
and
lcall
mov
nop/reserved
push
add
repnz
pop
sub
adc
pop
mov
movsb
sbb
mov
and
adc
mov
in
das
xor
dec
xchg
and
addb
inc
and
das
mov
xchg
and
mov
xorl
xor
adc
mov
xor
push
cwtl
imul
adcb
lcall
cmc
cmc
xchg
or
mov
daa
pop
push
push
mull
push
enter
mov
cmpsl
push
fisubrs
lcall
cmpsl
sti
xchg
and
aas
jmp
clc
dec
sub
js
mov
rorl
cmpsb
mov
inc
icebp
fdivs
leave
adc
jl
icebp
push
sbb
pushl
mov
cmp
ja
js
inc
push
test
or
inc
and
adc
fs
dec
out
adc
mov
ja
or
xor
in
pop
popa
insb
dec
addr16
inc
cmp
fldt
mov
fucom
adc
pop
loopne,pn
inc
inc
adc
push
jg
rcrl
mov
jecxz
mov
mov
dec
pop
cmp
dec
pop
into
adc
mov
mov
pop
or
xor
cmp
jne
lahf
jae
bswap
dec
adc
lret
xor
loop
filds
mov
mov
clc
lods
mov
adc
mov
pop
popa
push
mov
cltd
dec
add
dec
cli
cmp
repz
xchg
pop
adc
adc
ja
sbb
or
and
dec
sub
cmc
mov
testb
das
mov
mov
push
dec
xchg
ret
push
mov
insl
add
repz
push
and
test
and
mov
cmp
jmp
dec
scas
sbb
scas
call
jmp
sbb
data16
out
ds
xchg
or
or
lock
mov
sub
imul
pop
sbb
dec
lret
dec
xchg
fsub
or
jns
lahf
jnp
dec
out
fsubrl
xor
jo
xchg
mov
or
mov
call
push
je
lea
push
mov
dec
push
cmpsb
jl
pop
outsb
xor
push
and
scas
cmp
and
test
sti
cmc
inc
lahf
hlt
imul
push
push
xchg
pop
into
pop
or
xor
incb
psrlq
mov
and
outsb
ja
fistpl
or
pop
xchg
clc
das
sti
pop
sub
dec
test
push
std
adc
sbb
sbb
insb
movsb
hlt
mov
add
lret
cmp
and
pop
aas
xchg
xor
xorb
jne
cli
mov
fsubr
or
xchg
or
adc
dec
hlt
mov
sbb
jmp
mov
push
inc
ljmp
dec
jecxz
sub
cs
imulb
pop
pusha
and
loop
xor
dec
lea
mov
inc
pop
adc
push
adc
xchg
push
sub
add
hlt
push
cli
adc
mov
out
dec
mov
adc
inc
or
mov
add
in
sub
push
sub
dec
fucomp
inc
or
xchg
mov
lea
imul
push
popf
sbb
shl
add
subl
sub
xchg
dec
xchg
enter
mov
jmp
pushf
mov
fildl
adc
or
and
mov
inc
cmp
loop
mov
add
hlt
sbb
pop
sbb
adc
push
test
loope
clc
inc
pop
ja
lea
dec
jge
push
ret
mov
out
mov
int3
mov
pop
imul
push
cmc
mov
jecxz
data16
jae
ljmp
ja
js
push
sbb
cs
iret
or
rcrb
add
jle
dec
int
or
jne
push
inc
jmp
mov
or
mov
xor
mov
testl
add
sub
inc
sbb
mov
gs
call
add
test
mov
movsb
dec
cmp
mov
and
dec
loop
sbb
and
pop
fs
push
nop
cmp
lea
xlat
test
mov
das
pop
inc
cmp
adc
or
push
push
int3
xchg
mov
psubw
sahf
ja
cmc
repnz
and
shlb
test
ss
and
xchg
in
mov
mov
mov
pop
adc
ja
aas
sbb
xor
sub
push
adc
and
sbbb
mov
and
sub
bound
fdivrs
push
test
repnz
jmp
test
xchg
fs
aaa
inc
xchg
xor
lea
imul
mov
xor
push
inc
adc
test
outsl
dec
push
mov
popa
and
out
pop
ljmp
mov
std
aam
inc
es
or
stos
and
sbb
mov
xor
cmpsb
adc
adc
and
mov
xchg
add
and
and
cmp
lret
dec
cmpl
int3
iret
pop
and
out
shl
sbb
adc
inc
mov
hlt
or
out
xor
les
test
inc
test
mov
testb
lock
sbb
and
fadd
and
xchg
adc
stc
push
cmp
rcll
mov
pop
imulb
cmp
js
and
negl
fcoms
loop
sub
mov
lock
pop
out
fs
int3
les
inc
int3
loope
or
and
sbb
or
repz
xchg
inc
imul
sbb
mov
les
or
mov
shl
test
mov
jp
mov
mov
add
sbb
cmp
and
test
xchg
inc
lds
lods
mov
lods
lock
mov
or
xchg
or
and
call
or
jae
ljmp
cld
std
dec
test
jl
xor
pop
adc
movsb
sbb
mov
add
test
mov
lahf
or
push
xor
int
mov
mov
pop
xchg
dec
in
icebp
jmp
mov
int3
loope
lret
sub
mulb
push
xor
xor
fcom
leave
xchg
jg
cmp
fisubl
fs
imul
ror
test
iret
fisubrs
ret
mov
mov
mov
jl
mov
sub
icebp
aad
shrb
call
inc
in
cmp
mov
mov
mov
fsts
push
xor
into
push
test
adc
adc
dec
push
lahf
adc
test
dec
cmp
popa
inc
insb
mov
inc
call
push
cli
dec
xchg
sbb
push
add
push
movsb
call
or
insb
lahf
inc
jb
push
call
and
test
mov
pop
adc
xchg
ss
inc
dec
xchg
mov
je
sbb
xchg
xor
stos
je
sti
sbb
pop
pushf
sbb
stos
repnz
jp
fdiv
lcall
pop
pushl
cmp
cmp
mov
call
jno
add
inc
xor
xor
sub
cmp
js
in
sti
inc
mull
inc
dec
or
adc
adc
inc
jge
cmp
dec
xchg
leave
aad
cmp
pop
xchg
repz
cltd
and
shl
fs
and
icebp
cmp
or
sub
gs
mov
arpl
arpl
outsb
jne
dec
mov
sbb
das
sbb
inc
or
or
or
pop
xchg
mov
inc
lret
push
jle
mov
icebp
jecxz
aaa
cs
dec
jae
shrl
fs
pop
inc
mov
push
mov
jo
mov
pop
call
mov
leave
mov
shufps
scas
mov
aam
int
xor
sbb
mov
cld
nop
mov
call
repnz
adc
adc
sub
add
in
loop
adc
sub
mov
sbb
sub
mov
cmp
js
push
mov
cmp
and
pop
cmpsb
sbb
aas
inc
push
push
inc
push
or
jne
lea
cmpsl
push
je
adc
mov
mov
dec
dec
dec
push
in
jl
or
add
fcoms
push
inc
sti
lods
mov
cmpl
or
in
cld
mov
cmp
sbb
cmp
or
out
sbb
or
test
inc
out
sbbl
or
or
int3
jns
or
int3
dec
sub
call
pop
add
push
dec
dec
and
adc
shld
mov
inc
mov
xor
mov
sbb
movsb
pop
sbb
or
aad
and
jne
js
stos
add
pop
pop
and
out
test
mov
push
bound
aad
mov
insl
pop
imul
push
or
xchg
mov
mov
add
xor
or
sbb
adc
adc
mov
mov
inc
xchg
push
adc
or
cmp
inc
out
loop
xchg
push
inc
outsl
je
dec
cmpl
push
and
inc
lods
push
dec
push
push
push
mov
adc
xor
jne
pop
hlt
sbb
popa
cltd
or
push
cmp
xor
daa
add
sarb
or
adc
xor
push
xor
or
mov
sbb
sbb
push
mov
xor
xchg
imul
sbb
add
mov
shlb
pop
test
push
call
inc
pusha
or
hlt
and
pop
test
fimull
mov
and
popa
idivl
jo
or
inc
dec
mov
aaa
mov
push
lds
inc
imul
dec
mov
nop
or
xor
imull
xor
inc
inc
lds
sub
mov
xor
nop
or
pop
sbb
push
jo
mov
aaa
push
call
mov
lcall
push
mov
or
sbb
adc
and
or
jmp
fsubrs
adc
lods
sbb
pop
and
or
xor
push
push
dec
xor
nop
dec
mov
pop
jmp
dec
push
push
shlb
mov
adc
dec
inc
adc
enter
mov
adc
push
aam
sub
adc
inc
js
dec
lret
fcoms
shlb
loopne
jl
xor
jns
aaa
call
in
loope
aaa
lock
cmp
repz
clc
xor
cld
lea
xor
lret
int
and
inc
mov
outsl
cld
pushw
jo
or
dec
sub
xor
rorl
push
and
xor
dec
and
add
dec
sbb
sbb
cmp
cmp
mov
dec
lahf
inc
jo
xor
adc
inc
gs
ss
dec
pusha
js
dec
or
cmp
xor
mov
xor
add
dec
or
xor
aaa
push
adc
xor
pop
mov
ficompl
and
pusha
mov
addr16
jg
adc
dec
inc
mov
lret
dec
sbb
mov
add
stc
sub
js
sbb
xchg
mov
bound
adc
mov
lcall
xchg
sub
xchg
push
pop
bound
mov
arpl
inc
xor
pop
push
dec
scas
mov
xchg
fdivr
cmpsb
and
ficompl
pushf
dec
imul
movups
test
cmp
push
loope
mov
or
mov
in
into
loop
xor
or
pop
add
les
loope
enter
int3
mov
xor
test
fsubs
lea
sub
sub
out
sub
fcoml
push
or
push
sbb
cmpsb
cwtl
dec
or
add
mov
and
call
jbe
scas
xchg
leave
in
push
add
xor
lret
cmp
xor
xchg
mov
clc
add
fsubrl
xor
add
test
pop
xchg
and
cmp
xchg
loop
out
xchg
and
xor
ljmp
add
adc
imul
adc
push
sbb
push
lea
push
adc
mov
in
dec
push
adc
xor
xor
adc
rclb
test
outsl
sub
xor
lcall
sbb
push
inc
inc
dec
cmp
dec
movsl
mov
push
ret
mov
push
mov
sub
mov
pop
cwtl
adc
je
mov
xorb
add
fs
pushw
xor
dec
adc
fsubs
or
or
adcl
stos
cmc
cs
or
xchg
dec
cmpsb
les
jb
js
sbb
adc
ss
xchg
xchg
in
dec
test
xor
std
cmp
dec
pop
push
mov
insb
sub
lret
or
mov
cmpsb
out
mov
xchg
stc
mov
dec
adc
push
loopne
movsb
test
add
xor
xor
adc
mov
loope
mov
adc
inc
jle
shrb
imul
jns
and
adc
jbe
ljmp
jae
mov
enter
adc
jae
dec
cwtl
cli
shrb
inc
mov
inc
pop
inc
clc
insb
sub
push
inc
or
pushf
icebp
fsubrl
xor
mov
xor
push
xor
hlt
test
clc
dec
adc
ss
cld
into
movsl
jne
xchg
ja
mov
add
or
inc
cmpsl
pop
dec
or
adc
or
rorl
push
sub
cmp
ds
push
and
jno
push
jns
push
sbb
icebp
jb
push
in
out
dec
outsl
push
dec
jne
and
bound
cmp
jno
sub
cmp
xor
push
push
ljmp
dec
xor
adc
or
int3
or
cmp
sub
adc
xchg
leave
or
lock
mov
aaa
dec
leave
pop
lret
xor
jb
push
outsb
add
dec
dec
or
push
xor
imul
xor
addr16
mov
xor
imul
fsubs
push
push
push
push
dec
outsb
or
push
xchg
push
leave
repnz
nop
scas
xor
jae
dec
xor
sahf
dec
out
add
mov
ret
mov
sub
test
popa
xor
mov
repz
push
movsl
dec
imul
adc
push
ss
xchg
ret
cwtl
xor
aaa
pushf
cmp
or
in
pop
incb
cwtl
movsb
xchg
int
pop
jmp
test
mov
xchg
dec
lods
scas
movsb
fidivs
push
jbe
xorl
sbb
cmp
mov
xor
enter
sbb
outsb
rorb
and
sub
cli
inc
inc
push
fsubl
aas
nop
push
dec
loopne
sbb
push
in
test
call
out
andb
in
inc
xor
cmp
daa
jge
or
push
into
mov
adcb
adc
aaa
wrmsr
out
cmp
sbb
jnp
jns
or
adc
bound
adc
jmp
inc
inc
daa
outsb
push
and
dec
pop
prefetcht0
dec
jne
insb
andb
mov
dec
lods
sub
sbb
movsb
sub
inc
xor
xor
add
xor
cmpsb
aas
xor
xor
add
imul
mov
xchg
jae
sbb
mov
xchg
sub
or
adc
lret
and
push
jecxz
cld
sti
pop
or
inc
dec
test
dec
dec
sbb
outsl
xchg
xor
inc
xor
fxch
inc
pushf
add
addb
lods
loope
mov
mov
out
fsubl
addr16
pop
xchg
cmc
dec
adc
pop
xor
dec
into
lods
or
push
push
inc
js
adc
sub
sbb
lods
xchg
mov
inc
pop
rcrb
adcb
cld
and
das
cmp
sub
mov
add
orb
call
xchg
and
scas
adc
pop
lret
or
jl
or
mov
gs
or
or
aaa
and
fs
ss
xchg
adc
adc
sbb
adc
push
dec
mov
movsb
je
add
pop
mov
mov
mov
push
lea
pop
das
sub
xchg
dec
sbb
push
ret
jnp
mov
xchg
pushf
adc
dec
dec
lret
push
inc
lret
pop
das
comiss
pop
adc
xchg
sub
repz
rcrb
fsubl
inc
xor
sub
adc
adc
push
stc
xor
pushf
sbb
pop
das
adc
adc
jno
xchg
push
push
mov
les
testb
or
adc
jg
sub
dec
push
iret
inc
push
jb
dec
xchg
or
and
inc
dec
cltd
or
push
dec
push
push
mov
mov
push
in
and
push
cmpsl
inc
adc
sub
in
push
xlat
xchg
add
push
mov
sub
scas
sbb
push
or
insb
push
cld
cmp
sub
jno
js
pop
adc
fwait
cmpsb
test
inc
adc
hlt
push
mov
loop
push
sub
and
nop
lcall
movsl
mov
push
pop
scas
pushf
mov
dec
outsb
adc
push
inc
jno
movsl
jae
in
fs
inc
xor
movsl
mov
and
scas
push
out
and
adc
add
dec
mov
jns
inc
addr16
mov
pushf
pop
xchg
jge
xor
sbb
dec
sbb
les
movsl
mov
jge
je
pushf
out
inc
jle
lods
hlt
dec
sbb
add
mov
jmp
jns
sbb
jmp
cmp
hlt
mov
inc
notb
mov
xor
inc
fwait
cs
adc
imul
fnsave
orb
gs
daa
push
mov
push
inc
bound
loop
mov
push
mov
push
test
adc
mov
push
push
xchg
mov
dec
cmp
push
push
xchg
or
fs
andl
imul
loop
add
xor
mov
cmp
dec
les
enter
mov
test
sub
or
lods
jbe
test
scas
daa
dec
push
sub
daa
and
test
push
and
inc
lods
cmp
mov
sub
js
dec
sub
sbb
mov
daa
adc
les
mov
xchg
jmp
sbb
cmp
adcb
mov
scas
xchg
and
and
and
xor
jmp
mov
xchg
mov
cmp
add
add
in
and
stos
cltd
sbb
xchg
pop
inc
popf
xor
mov
inc
inc
and
pop
repz
cmp
leave
push
into
es
movsb
loop
or
sbb
enter
cmp
pop
and
ja
nop
xor
sub
mov
in
pop
and
xchg
bound
push
pop
dec
scas
insl
sbb
aad
cld
lock
mov
jne
ljmp
insl
adc
push
ljmp
xchg
hlt
repz
test
popf
rolb
clc
adc
es
addr16
int3
mov
mov
in
jae
cwtl
sub
push
or
push
add
je
push
sub
cmpsb
sbb
je
dec
or
jmp
rolb
jmp
push
cld
repz
js
dec
mov
xor
mov
cmp
dec
mov
call
stos
push
test
ss
adc
mov
mov
mov
inc
movb
push
push
pusha
in
jmp
int3
jp
test
and
or
test
lret
cs
scas
orl
iret
sbb
xor
pop
cli
mov
cwtl
mov
roll
or
dec
jmp
ror
or
sbb
or
jmp
or
pop
test
jns
call
push
nop
sub
mov
ficoms
pushf
call
imul
xchg
mov
mov
jl
cmp
shl
outsl
in
inc
dec
xor
or
and
mov
inc
inc
push
pop
adc
add
repnz
sbb
pop
push
test
inc
push
and
cmpsl
dec
mov
aaa
aam
sub
or
mov
jae
jp
xchg
mov
xstore-rng
cmpsl
inc
pop
pusha
sub
adc
pusha
test
movsb
sbb
push
push
bound
scas
inc
adc
dec
popf
repnz
das
adc
divb
mov
jl
call
inc
push
clc
pop
cli
xchg
dec
iret
daa
adc
add
sub
enter
mov
and
les
imul
ljmp
out
add
xor
push
insb
push
jl
movsb
rorl
lods
call
or
cmp
mov
inc
daa
xchg
adc
enter
sub
out
mov
push
xchg
ret
fstpl
std
mulb
cmpsl
rol
and
cmc
push
fnstcw
mov
mov
xchg
and
jge
push
int
pop
test
popa
aad
push
or
add
lret
jg
mov
daa
scas
push
xchg
pop
daa
or
stc
test
test
push
enter
adc
andb
and
and
hlt
jae
cmp
movsl
push
xor
inc
adc
hlt
shlb
in
or
je
jo
jle
and
mov
out
mov
dec
das
std
in
inc
cmovo
loopne
lock
adc
shrb
cmp
mov
arpl
pop
xchg
ljmp
loopne
lods
je
jge
mov
imul
dec
jge
add
repnz
lcall
inc
mov
dec
add
inc
sbb
cmpsl
inc
mull
fs
pop
psubd
sbb
xchg
out
and
jg
push
out
enter
jbe
xchg
stc
push
iret
or
pushf
sub
mov
ljmp
sub
xchg
push
pop
and
xchg
mov
adc
mov
cli
mov
add
lcall
inc
aaa
mov
mov
and
dec
push
outsb
lock
xchg
mov
popf
ds
sub
adc
sbb
and
gs
xchg
bound
sbb
hlt
sub
pop
mov
sbb
sub
or
mov
inc
pop
mov
push
in
dec
push
data16
sbb
and
adc
fisubs
icebp
sbb
jmp
inc
cmp
jne
jb
lock
inc
std
sub
setno
pop
out
jo
addb
js
stos
xlat
mov
mov
adc
mov
fcompl
xor
and
xchg
test
sub
outsl
push
inc
pushf
daa
movsb
sbb
dec
insb
push
inc
subb
rolb
sbb
sub
jo
pop
stos
xchg
jl
and
orl
push
ljmp
and
js
bound
pop
or
cli
adc
test
clc
push
and
mov
xor
int3
cmpsb
and
mov
xor
dec
dec
lods
fisubrs
dec
scas
adc
inc
lahf
xor
mov
movsb
xor
das
and
shlb
sbb
and
daa
sbb
sub
lods
mov
pop
movsb
clc
add
lret
dec
aam
imul
andb
les
addr16
lds
mov
mov
repnz
pushf
xor
shrl
and
aam
add
mov
and
xor
enter
dec
out
mov
xor
loop
jo
jp
dec
shll
jp
xlat
push
jae
lock
cli
iret
shlb
fidivl
shlb
enter
jne
ja
mov
add
xchg
shl
mov
cmpsl
jbe
inc
in
pop
nop
or
enter
xor
sbb
or
mov
stos
test
xchg
sarb
cmp
and
jb
sub
inc
push
out
mov
xchg
dec
pop
stc
in
push
pavgb
jl
inc
jl
lahf
jo
sahf
popa
inc
cld
and
ja
mov
lods
or
fisttps
add
xchg
xor
pushf
in
and
jg
orb
push
enter
adc
movsb
push
clc
inc
call
and
fs
pop
lock
test
push
mov
vdivsd
mov
int3
dec
addb
inc
pusha
mov
sub
in
nop
push
enter
or
test
mulb
push
cmp
popa
les
pop
mov
int3
hlt
or
outsb
aad
aas
cmc
adc
lahf
push
mov
call
fcmovnbe
mov
xchg
adc
jbe
out
sub
pop
or
jb
cmp
jb
mov
mov
in
sbb
insl
xlat
xor
dec
inc
dec
insb
and
fsts
sub
push
push
sbbb
popf
pop
mov
in
out
mov
sub
rol
inc
sub
rolb
push
dec
xchg
dec
call
sbb
or
inc
or
mov
xchg
in
adc
inc
xor
mov
pop
dec
sbb
push
mov
cmc
adc
mov
and
jno
in
std
decl
or
adc
or
cmc
xchg
test
aas
in
add
lcall
and
fsub
shll
imul
xchg
jle
in
add
hlt
lods
out
dec
or
and
dec
xlat
nop
push
sbb
mov
insb
and
xchg
loopne
inc
add
loopne
dec
fsubl
push
unpcklps
fcoml
jae
fsubrs
jle
loop
adc
subl
sub
sbb
int3
dec
dec
inc
lock
pop
insl
xchg
mov
pushf
das
pop
sbb
aam
rorb
popf
int3
push
adc
dec
inc
mov
push
mov
mov
sub
leave
push
call
into
mov
test
in
popf
stc
popf
in
or
dec
cmc
adc
enter
inc
stos
lea
inc
and
pop
adc
jmp
and
call
imul
or
cli
add
je
dec
fwait
sub
dec
mov
add
jmp
mov
es
adc
test
in
clc
sub
jge
sbb
es
pop
pop
adc
pusha
sbb
sbb
pop
sub
std
inc
cld
imul
xor
and
mov
test
aad
mov
out
adc
fildl
test
inc
sbb
xchg
mov
lods
mov
movsl
sbb
in
pop
es
das
jle
and
pop
mov
leave
cmp
nop
push
call
xor
xlat
push
sub
sub
enter
lds
in
rorl
xor
mov
in
mov
outsl
mov
inc
aaa
mov
inc
mov
lea
or
dec
decb
aad
out
cwtl
leave
or
enter
test
je
push
enter
ja
je
cmp
repz
popa
bound
cli
arpl
mov
les
dec
add
mov
insb
push
pop
and
jne
sbb
dec
loopne
js
nop
or
mov
mov
out
mov
mov
les
jb
loop
sbb
ss
shlb
or
shlb
sub
aaa
into
movsb
inc
push
mov
sub
sbb
mov
and
dec
add
dec
call
fcomi
mov
outsb
cmp
mov
mov
jae
je
test
test
jo
rcl
movzwl
mov
or
or
add
in
jb
xor
sbb
inc
add
mov
in
bound
or
bound
sbb
inc
dec
cwtl
jb
add
mov
add
cltd
adc
and
shr
push
sbb
scas
and
fs
xor
sbb
xchg
pop
dec
push
movsl
mov
pop
loope
iret
xor
adc
mov
std
call
adc
leave
lock
lock
inc
adc
fs
push
test
adc
stc
lock
mov
repz
inc
xchg
jae
call
insl
cltd
stos
adc
xor
mov
movsl
and
imul
adc
sbb
push
and
and
js
cmp
shlb
xchg
push
push
adc
rolb
sbbl
and
xchg
inc
mov
fdivrs
push
or
adc
add
push
push
mov
orb
sbb
xor
sbb
mov
and
mov
rcll
stos
adc
pushf
jg
out
inc
xor
das
xchg
and
int3
lret
scas
xor
loope
xchg
or
mov
sbb
cwtl
push
jmp
popa
jo
scas
mov
ds
dec
hlt
and
dec
jne
daa
push
add
inc
stc
xchg
cmpb
xchg
stos
roll
pop
call
les
xor
fdivs
jl
push
call
iret
and
aaa
jle
test
sub
inc
mov
mov
cli
mov
xchg
mov
fsub
lret
pop
stc
rcl
adc
out
shrb
mov
fistpll
cmpsl
mov
pop
shr
mov
xor
dec
mov
loop
xor
dec
adc
out
pusha
sti
pusha
aam
mov
mov
lods
mov
sarb
shl
ror
iret
pop
enter
mov
xchg
ret
loope
push
ret
mov
xlat
aam
mov
mov
cmpsl
push
cmp
and
dec
shll
mov
dec
pop
leave
fld
push
push
xor
inc
cmp
adc
mov
mov
xor
inc
mov
out
cs
shrb
cli
sub
loop
stos
xchg
hlt
xor
mov
sarb
rcrl
inc
mov
mov
push
into
mov
mov
rolb
lods
push
ret
mov
aaa
sbb
xchg
hlt
push
jb
xchg
les
ljmp
pop
push
and
xchg
outsl
inc
and
adc
mov
mov
or
mov
rcl
fcomps
mov
dec
xor
lock
cmp
push
and
mov
jmp
enter
push
sbb
in
leave
jg
mov
enter
push
adc
xorb
mov
or
loopne
adc
test
lret
sub
xor
addr16
shl
push
int
xlat
cmp
adc
cmpsb
jo
mov
jnp
cmp
mov
out
xorb
cs
sub
xor
cmpsb
shrb
lret
shrb
insb
outsb
test
pop
daa
arpl
frstor
adc
mov
rol
mov
stc
jo
ljmp
lea
addb
call
sub
clc
dec
sbb
jmp
xlat
sbb
pop
or
push
imul
push
mov
add
imul
scas
stc
arpl
cwtl
push
inc
call
pushf
sub
and
hlt
test
jnp
push
fst
sub
movsb
scas
adc
add
pop
sti
sbb
mov
xchg
clc
add
sbb
adc
lea
jne
scas
loope
sub
ss
inc
mov
mov
jg
fcompl
jbe
mov
por
xor
out
pop
dec
repnz
jmp
call
inc
loope
call
sub
cli
fimuls
mov
and
pop
test
testb
jg
mov
out
adc
and
fistpll
out
adcl
xchg
sbb
cwtl
stos
push
cmp
mov
arpl
aam
pop
cmpb
subb
movsb
sti
cltd
mov
lret
out
jmp
add
mov
adc
ret
out
jmp
mov
sbb
clc
inc
movsb
or
push
std
aas
or
adc
addl
mov
pop
aad
mov
jne
or
pop
movsl
mov
jmp
cmp
adc
test
shrb
mov
jno
and
adc
test
loope
sbb
pop
adc
adc
xor
inc
popf
cmp
stc
sbb
sbb
mov
adc
pop
bound
fs
insb
mov
ds
and
mov
inc
inc
fs
sub
push
in
popa
std
inc
sbb
inc
inc
inc
mov
cmp
fwait
xchg
nop
adc
jl
les
sub
cmp
sbb
adc
adc
inc
and
cmp
and
cmp
inc
inc
test
cmp
das
cmp
add
mov
push
inc
dec
inc
adc
lods
dec
adc
push
inc
and
test
and
test
imul
mov
inc
nop
adc
sub
xor
and
les
sub
inc
inc
nop
dec
lods
dec
adc
adc
es
sti
push
mov
and
sub
pop
into
je
mov
push
popa
push
lods
add
jl
mov
sbb
lahf
mov
cmp
adc
mov
and
or
inc
mov
and
in
add
scas
ror
test
adc
pop
xor
sub
int
jbe
dec
divb
loopne
pop
cmpsb
or
sub
rolb
push
push
xlat
loop
rcll
std
add
cmp
add
mov
xchg
and
ljmp
cli
xor
ljmp
out
sahf
js
out
iret
mov
cmp
test
out
adc
cmp
dec
adc
les
mov
popa
aaa
sahf
or
cmp
ja
and
les
sub
adc
popf
push
inc
or
mov
dec
ficoml
or
cmp
cmp
sub
jmp
aam
pop
dec
cld
and
fsubl
lds
jae
xor
gs
push
dec
xor
sbb
pusha
mov
push
scas
dec
sub
idivb
xchg
lcall
xor
enter
mov
jb
adc
in
cmp
mov
xor
and
and
xor
dec
enter
mov
in
ret
xor
or
arpl
or
js
fwait
jo
fwait
pusha
push
jge
movsb
lahf
roll
xlat
jmp
out
test
jle
popa
movb
and
incl
sbb
sub
inc
sbb
pop
nop
and
adc
sub
add
pop
sbb
and
xor
dec
push
fmull
or
or
test
mov
cmp
lsl
inc
jae
pop
mov
mov
fnsave
stos
cmp
mov
insb
loope
push
push
sub
jb
stos
add
daa
int3
mov
shl
jnp
loope
jbe
iret
rep
test
adc
pushf
adc
call
call
in
les
pop
pop
call
mov
sub
nop
bound
pop
sub
shll
adcb
cli
int3
cmp
cmp
pop
jmp
mov
negb
inc
cmc
or
mov
xlat
xor
xchg
push
cmp
xchg
jne
daa
cmp
stos
repz
je
fisubrs
adc
stos
adc
repz
cmp
lret
sbb
cmpsw
xor
jb
repnz
adc
ret
mov
inc
movsl
cmp
inc
adc
ds
inc
mov
ljmp
cmpsb
rolb
test
or
movsb
cmp
int
ret
fsubrl
mov
adc
jbe
adcl
or
push
pop
cmc
and
movsb
push
cmp
ret
loop
js
dec
test
or
mov
cmpsl
xor
ret
jg
hlt
mov
add
fists
push
xor
les
or
push
inc
movsb
and
push
lods
clc
js
test
popf
test
pusha
mov
push
imul
sahf
xchg
fs
call
repz
mov
pusha
mov
and
or
jecxz
fwait
and
aam
enter
jmp
mov
mov
mov
cli
mov
pop
outsb
decl
xlat
test
sarb
add
push
jmp
out
rorb
inc
push
ret
push
adcb
mov
stc
in
dec
mov
or
in
mov
and
push
nop
pop
adc
leave
fs
push
das
mov
push
lahf
sbb
mov
cli
cmpsb
xor
xchg
cmpsb
mov
stos
and
addr16
movsb
cmp
mov
lods
rcl
mov
lods
movsl
jns
shlb
or
arpl
cmpsb
mov
xorb
mov
loop
fsts
adc
mov
jge
sub
mov
into
jg
push
cld
sti
sub
xchg
and
std
repnz
pop
addr16
psubsw
inc
in
clc
movsb
push
sbb
mov
pop
incb
jmp
dec
jne
push
testb
call
addl
push
push
or
fwait
scas
sub
and
mov
cmp
or
jae
rorl
in
sub
hlt
ljmp
and
cmpb
push
mov
jbe
xchg
outsl
mov
ja
movsb
mov
xor
inc
rcrl
out
dec
clc
jno
outsb
movsl
cmc
xchg
stos
cmpsl
dec
push
add
hlt
mov
stos
cmpb
arpl
dec
jmp
ret
jge
ljmp
daa
shr
popf
jno
shlb
mov
mov
adc
enter
movsb
loopne
pop
jle
repnz
leave
ds
lods
pop
sub
mov
mov
pop
stos
inc
mov
adcb
test
mov
pop
sub
and
orb
inc
sub
stc
jae
cmp
mov
fmull
shl
or
adc
lock
inc
std
jp
rorb
stos
and
and
aaa
scas
or
and
and
mov
xchg
in
jbe
je
inc
lods
and
mov
scas
or
mov
or
test
loopne
dec
mov
inc
lods
inc
jmp
repnz
fsubl
sbb
popf
lea
jecxz
xor
sub
repz
push
cmpl
jne
std
dec
sti
dec
sub
mov
mov
sub
test
jo
gs
or
pop
jmp
and
call
aad
lahf
icebp
adc
cli
shlb
xchg
mov
and
addb
mov
mov
sbb
push
mov
bound
add
jne
cmp
popf
xchg
pop
addr16
dec
xchg
sub
and
push
pop
movsb
movsl
dec
shlb
lret
mov
lret
rcr
shll
std
bound
cmp
mov
mov
pop
adc
enter
push
into
fimuls
ficoms
push
scas
inc
fdivs
pop
jecxz
cli
in
test
push
cmp
or
dec
cmp
mov
cmpb
xchg
cmove
xor
leave
cs
ror
iret
mov
rol
mov
nop
jge
xchg
cli
fidivrl
dec
mov
dec
jg
scas
mov
push
inc
xchg
inc
mov
add
mov
and
dec
push
movsl
loop
jmp
in
mov
fs
cmp
mov
fildll
push
shll
subb
bound
les
push
loop
mov
mov
lret
rorl
xor
mov
pushf
arpl
mov
and
and
xchg
add
jg
cmp
sub
or
clc
push
adc
sub
push
in
loop
mov
in
mov
daa
jno
aaa
xor
lea
adc
stc
enter
sbb
and
adc
mov
out
sub
and
cs
adc
test
pusha
les
or
mov
sbb
rcll
mov
aas
sub
les
mov
adc
and
shr
jmp
sub
add
cwtl
add
dec
cs
xor
add
nop
fldenv
nop
enter
aaa
clc
adc
adc
sbb
or
xchg
mov
push
lret
jmp
push
sahf
xchg
mov
je
scas
movsb
and
inc
pop
and
or
cmpsl
mov
scas
testl
adc
push
into
mov
loope
test
aas
fisubrs
sbb
mov
testl
aam
mov
daa
xor
pop
and
inc
inc
adc
popf
call
cmp
test
nop
movsb
fisubs
and
inc
movsb
add
pushf
sub
dec
decb
push
popf
popa
pushf
mov
and
cmp
loop
pop
adc
add
adc
xchg
test
cwtl
ret
adc
sbb
ficoms
mov
adc
lahf
jmp
mov
inc
jmp
je
cmp
fbld
mov
xchg
mov
and
and
and
aas
clc
and
cmp
out
mov
adc
adc
add
add
das
adc
add
xchg
jo
sbb
and
xchg
xor
or
repnz
cmpsb
test
lods
adc
sub
push
lea
xor
mov
adc
inc
adc
and
sbb
mov
daa
mov
cmpsl
or
fisttpl
xor
cmc
icebp
nop
fidivl
out
inc
push
cmp
xor
sub
push
adc
hlt
adc
cltd
daa
inc
adc
and
push
mov
pusha
or
out
push
cmp
pop
das
test
inc
mov
test
jno
inc
test
pop
inc
mov
and
xor
movsb
sbb
test
mov
inc
mov
lcall
push
enter
jb
sub
mov
dec
and
adc
aam
sub
dec
mov
adc
inc
pop
pop
and
pop
or
adc
adc
adc
aam
je
js
test
or
adc
dec
and
and
lock
movsb
les
mov
jecxz
mov
call
call
lahf
rcrb
pop
dec
mov
test
dec
jl
mov
add
or
fs
orl
or
mov
cmp
std
or
test
je
insb
outsb
out
das
sub
adc
and
mov
adc
lcall
sub
mov
or
test
imul
rcrb
xlat
rcl
or
and
call
test
add
enter
mov
adc
lock
sub
xchg
mov
jg
xor
push
add
mov
and
es
push
adc
and
adc
test
and
jnp
adc
inc
sub
jo
cli
xchg
inc
je
inc
push
adc
movsb
sub
jge
mov
and
push
or
movsb
xchg
sub
push
or
or
xchg
sub
int3
movsb
sbb
pop
mov
sbb
in
mov
stos
adc
dec
mov
dec
cmpsb
mov
enter
rol
imul
lahf
outsl
jae
ret
pop
jl
push
dec
jb
dec
cwtl
and
inc
push
jecxz
and
mov
pop
sbb
mov
scas
pop
sub
pop
pop
cmp
cld
sbb
lods
cwtl
movsb
mov
bound
jno
pop
push
dec
cld
lret
cmpsl
pusha
add
mov
or
ss
sbb
mov
sub
bound
je
imul
cld
test
cld
stos
js
into
in
jle
repz
push
adc
shr
daa
dec
or
mov
or
sub
or
push
popa
insb
jne
gs
mov
cs
lock
xor
xchg
cwtl
dec
std
int
gs
jo
or
xor
bound
call
in
push
imul
add
inc
cmp
push
cmp
orl
or
add
pop
sbb
aas
clc
mov
or
pop
int3
inc
xchg
pop
out
loop
jbe
inc
sbb
cld
push
jge
std
jp
pop
call
adc
mov
cmp
and
jecxz
cli
push
push
in
aas
mov
adcl
lret
pop
mov
aaa
nop
cmpb
xchg
lea
cli
icebp
dec
loopne
je
add
push
call
inc
out
mov
dec
lea
out
adc
cmp
mov
mov
xchg
xchg
repnz
nop
clc
cmp
mov
jmp
jmp
mov
and
call
jecxz
and
negb
lahf
add
call
lret
pop
push
lods
mov
scas
in
push
shll
pop
sub
pusha
sarb
push
mov
and
call
adc
in
and
pop
leave
sub
adc
test
mov
and
jne
popa
out
lods
inc
inc
xor
jmp
adc
enter
or
mov
addr16
push
xor
arpl
add
stc
xor
mov
and
notb
fiaddl
fiadds
stos
int3
mov
lods
inc
add
pop
inc
int3
nop
add
aas
les
icebp
pusha
dec
and
rclb
mov
dec
adc
rcrb
or
divb
cmp
and
mov
and
test
mov
in
or
xor
loopne
jb
aaa
test
daa
lock
jp
bound
ljmp
adc
inc
inc
xchg
mov
pushf
cmp
adc
xchg
lock
cmp
mov
arpl
cmp
mov
movsb
movsl
inc
nop
cltd
xchg
rcrl
fldt
aas
jne
jge
leave
and
cli
pop
and
loop
in
inc
sub
pusha
jo
clc
adc
mov
pop
xor
lock
filds
pop
add
gs
sbb
jl
lret
mov
add
mov
cmp
ss
sahf
xlat
xchg
in
arpl
mov
xchg
clc
push
sub
xchg
adc
sbb
xor
push
cmpsb
pop
mov
mov
fidivrl
sbb
pop
sbb
sub
loopne
je
and
xchg
rolb
sub
fcoml
test
imul
push
add
enter
push
adc
pop
xlat
leave
push
std
pop
call
mov
into
inc
inc
mov
aam
adc
cld
mov
test
mov
jae
test
mov
adc
xchg
mov
fcmovb
or
xor
jnp
and
stc
adc
mov
fnsave
or
lcall
sahf
xchg
jmp
aas
jge
cld
push
mov
sub
xchg
sub
pop
out
insb
jo
jp
pusha
xbegin
filds
xor
mov
lds
ljmp
mov
test
xor
ret
ret
jmp
dec
mov
lcall
test
sbb
mov
movsl
sbb
notb
add
js
mov
hlt
fs
mov
push
mov
mov
std
cmp
push
roll
xchg
push
cmp
push
arpl
mov
dec
stos
sub
sub
push
or
dec
sbb
xor
jo
push
testl
xor
mov
and
add
dec
sub
fildll
or
sbb
or
push
loopne
mov
push
in
outsl
scas
jb
dec
dec
sub
lea
inc
adc
cmc
sub
sbb
sbb
fisubs
add
clc
mov
push
push
pop
sti
or
ret
leave
jge
sahf
ljmp
stc
repnz
dec
ret
mov
xor
mov
cld
add
cmpl
jne
sub
dec
jle
cli
and
inc
and
and
mov
test
mov
insb
jg
sub
fsubr
sub
or
push
les
cmpsl
les
shlb
call
cli
xchg
addr16
or
pop
jo
adc
enter
xchg
xchg
cmc
sbb
in
xor
mov
inc
add
sbb
or
adc
enter
xlat
mov
lods
jp
dec
adc
repz
loopne
mov
sub
icebp
xchg
inc
aas
and
pop
gs
cs
xor
and
jo
or
sub
xor
jae
mov
jo
jl
test
sub
out
std
mov
ret
or
dec
inc
dec
sub
inc
shr
xchg
test
pop
jo
fs
xor
adc
imul
push
cmp
and
mov
inc
jno
push
inc
inc
and
negl
addl
int3
sub
pop
mov
hlt
cld
jl
in
test
pop
adc
test
shll
mov
pop
aas
inc
inc
pop
jmp
push
mov
jge
push
push
pop
imul
je
mull
and
inc
inc
push
in
ret
cmp
jl
adcb
idivb
jle
mov
andps
stc
xor
frstor
mov
jne
sbb
xor
push
jg
jnp
add
iret
pop
dec
jg
mov
sbbb
cmp
cmc
shl
loopne
or
movnti
add
pusha
shr
pushf
or
js
push
clc
xor
push
inc
test
dec
add
pop
xor
ljmp
sbbl
fstps
jmp
cmp
or
call
dec
jbe
mov
clc
neg
stc
sbb
mov
pushf
outsb
or
jmp
jo
xchg
popf
cmp
in
ret
hlt
mov
push
lds
xchg
insl
enter
pop
or
and
loop
lea
das
test
repz
pop
mov
mov
adc
int3
mov
ret
rcrb
pop
add
imul
push
xchg
fs
inc
shr
cmp
pushf
xor
cwtl
jge
dec
sbb
jo
inc
jb
inc
sbb
inc
subl
roll
sub
shrb
arpl
mov
ds
adc
or
inc
test
fdivrs
xor
xor
mov
sub
mov
mov
and
and
mov
mov
jnp
orb
mov
enter
and
and
gs
enter
push
lahf
stos
adc
movsl
add
or
dec
inc
in
mov
enter
shlb
adc
pusha
jns
sbb
leave
or
in
test
sub
and
lcall
outsl
xor
cmp
pop
xor
inc
dec
cmp
mov
add
loopne
sti
cmp
pop
in
cmp
dec
jns
out
mov
dec
push
mov
and
loop
xor
and
inc
cmp
mov
hlt
mov
xor
and
pop
xchg
je
mov
fmuls
in
pop
jo
lock
lret
mov
push
mov
mov
mov
adc
inc
jle
push
cmp
inc
dec
leave
in
dec
mov
mov
add
adc
jae
sti
sub
sub
in
fwait
and
shl
movsb
cli
cwtl
movsb
rol
daa
call
dec
sbb
dec
aaa
roll
pop
loopne
fwait
adc
pop
test
sub
sub
mov
movl
sbb
je
push
cmp
hlt
cltd
push
orl
or
outsb
sub
sub
imulb
or
sub
push
aam
xchg
out
fisttpl
xor
xor
shrb
into
stos
and
sub
and
test
or
test
in
clc
add
or
sub
and
gs
pop
or
push
and
xchg
dec
out
fs
int
enter
outsb
sub
dec
into
jo
mov
sarb
and
push
mov
or
test
js
ret
dec
ljmp
adc
lods
mov
mov
adc
push
ljmp
int3
movsb
pop
sub
outsb
nop
shl
notb
cmpsb
jne
leave
aam
pop
hlt
mov
movq
enter
movsb
add
icebp
sti
add
push
call
mov
xchg
call
imul
ficompl
std
xchg
push
fisttpll
sti
imul
fcomip
xchg
or
push
push
and
pop
fnstsw
jbe
xor
movsl
pop
lods
and
fidivs
push
xchg
das
movsl
xor
and
mov
pop
adc
rclb
mov
dec
sub
sbb
jmp
mov
mov
adc
cmpsl
out
add
sbbb
int3
xchg
and
and
mov
lret
add
je
jmp
adc
mov
adc
sub
int
loop
cmp
pop
jge
push
aaa
je
add
out
nop
sub
adc
cmpsl
push
dec
lds
jecxz
push
inc
and
mov
mov
xor
lods
xchg
xor
test
in
jb
xor
cmp
aad
mov
imul
and
xchg
dec
xor
movsb
adc
jg
xor
hlt
sbb
movsl
xchg
and
adc
xchg
loope
add
test
sysenter
xor
out
pop
xor
inc
push
enter
bound
mov
pop
mov
cmc
insb
push
enter
call
and
test
and
jg
and
cmp
mov
xor
dec
dec
xor
push
inc
dec
jb
xor
push
or
xor
loope
xchg
mov
sar
push
daa
cwtl
add
sbb
or
adc
filds
pop
sti
xchg
inc
cwtl
and
and
cmpsl
mov
adc
mov
jo
xor
jmp
sub
insb
cmp
adc
cmp
fadds
sub
xor
adc
xor
and
adc
inc
push
inc
imul
or
lahf
sbb
jmp
loop
cltd
sbb
icebp
pop
mov
mov
les
fs
subl
or
call
push
rcrb
mov
adc
xchg
loop
mov
aam
pop
or
sbb
xor
cmpsb
push
adc
adc
pusha
inc
and
daa
fidivs
loop
test
xor
mov
inc
data16
mov
or
dec
inc
mov
add
scas
aam
mov
or
mov
into
pop
nop
add
mov
adc
xor
je
loope
pop
mov
cltd
mov
push
sbb
mov
inc
aam
clc
cltd
dec
and
aaa
sub
adc
jecxz
outsl
xchg
pop
xchg
and
mov
lods
rcr
ror
jnp
xchg
in
push
fs
xor
cmpsb
dec
jp
cli
adc
aaa
dec
xchg
inc
sub
lods
cmp
daa
cmpsb
add
or
rcll
je
sub
in
sub
mov
out
mov
adc
jae
or
push
insl
or
inc
lret
push
xor
fisttpl
scas
pop
aam
jo
je
and
or
out
mov
lods
xor
enter
mov
xor
pop
test
adc
hlt
cmp
rorb
and
push
jo
xchg
je
adc
cltd
xchg
jmp
aam
mov
jbe
dec
mov
rorl
and
or
mov
jne
jo
adc
sub
sub
int3
daa
and
rorl
xchg
jbe
push
inc
push
and
fs
jge
or
xchg
pusha
mov
sbb
pop
scas
insl
inc
aaa
inc
adc
mov
add
push
jb
out
loope
pop
pop
push
push
xchg
les
sub
cmp
sub
inc
je
xor
mov
adc
test
je
and
jno
fs
push
les
and
sub
or
or
and
fbld
addl
icebp
push
iret
dec
sub
call
cmpl
mov
inc
sub
cmp
jnp
es
inc
or
movsb
bound
adc
incb
jl
loope
dec
sub
test
push
mov
adc
dec
mov
andb
sbb
inc
test
jnp
nop
cmp
lret
inc
test
cmp
sub
cwtl
inc
loop
cmp
cld
mov
dec
es
push
add
xchg
adc
push
push
fmull
iret
adc
mov
insb
push
data16
push
push
xchg
inc
adc
or
push
ret
pop
dec
add
lret
xor
mov
dec
xor
xchg
push
jmp
cmp
dec
jne
mov
stc
dec
ret
push
adc
scas
or
jmp
dec
mov
sahf
add
sti
xor
mov
les
paddusb
lock
or
jb
mov
add
fwait
outsb
sub
xchg
cmp
push
jnp
jecxz
add
push
enter
sub
inc
pop
xchg
adc
enter
mov
sub
add
xchg
adc
xor
mov
mov
inc
movsb
push
push
inc
dec
and
and
pop
mov
mov
sub
mov
daa
inc
int3
add
push
mov
pop
jg
cmp
or
clc
adc
mov
sbb
mov
mov
cmp
add
test
cwtl
xor
outsl
fdivl
pushf
adc
lods
push
add
ret
xchg
cmpsb
and
and
test
je
and
loop
add
in
jb
xor
nop
rcrb
pop
mov
xchg
sbb
mov
out
xor
test
nop
imul
pop
bound
fnstsw
jge
inc
sti
mov
stc
adc
sbb
movups
enter
push
lds
xor
mov
lahf
adc
clc
or
nop
inc
fbld
add
and
lds
mov
ffree
cmc
pop
adc
xchg
je
adc
gs
ret
dec
mov
cli
sti
lea
outsb
flds
jecxz
adc
lea
cld
add
or
repnz
sahf
hlt
push
subb
loope
lret
mov
jo
inc
add
popf
outsl
jl
aam
popf
inc
pushf
jmp
pop
jo
xor
or
jb
jo
bound
in
popf
into
nop
push
xor
xor
xchg
cmp
or
adc
orb
insb
sub
ficoml
xor
loopne
jle
push
mov
imul
cld
ror
imul
dec
inc
pop
jmp
insb
push
or
sbb
call
mov
jns
push
int3
xlat
cli
cmp
outsb
lret
in
pop
nop
fdivl
call
cmp
xlat
mov
pop
cmp
bound
scas
jbe
sub
mov
bound
jl
jae
sub
mov
dec
inc
adc
pop
push
mov
adc
test
jns
pop
mov
jmp
dec
or
ficomps
mov
mov
xor
push
imul
mov
push
lea
or
inc
push
xchg
notl
insl
fs
cmpsb
pop
inc
adc
mov
jb
in
sub
push
stc
push
data16
cmpsl
sub
adc
adc
cmpsl
pusha
movsl
push
sbb
cmp
fsubrl
repnz
pop
imul
movsb
dec
cs
jmp
cmp
repz
je
fmul
jae
lcall
cmpsl
lahf
insl
test
testb
dec
jmp
jo
fs
mov
insb
xlat
out
daa
adc
les
jnp
rcrb
sub
jmp
xchg
mov
jb
mov
jae
sub
std
sub
imul
rcrb
push
sub
and
dec
or
jg
cld
add
jae
cmp
mov
dec
mov
xor
sbb
or
xchg
and
or
or
ret
clc
jb
xchg
inc
iret
adc
add
and
out
adc
adcb
inc
out
and
xchg
shr
divb
jl
ret
pop
cwtl
out
mov
inc
inc
push
sub
ss
mov
lea
and
fldt
jmp
in
ljmp
adc
mov
lock
jne
lds
iret
loope
cmp
ds
loopne
cwtl
adc
dec
sbb
mov
shl
cmpsl
xor
nop
mov
rolb
inc
add
push
fdivrs
adc
stos
cmc
loop
icebp
jmp
nop
push
mov
sbb
lods
shll
int
or
out
ficoms
insb
pop
lea
pop
mov
ja
in
popa
data16
mov
mov
test
pop
dec
jno
data16
xor
shlb
loope
or
dec
outsb
jl
int3
dec
adc
xor
sbb
sar
xor
jg
mov
push
push
jge
xchg
mov
cld
mov
jecxz
ds
and
scas
or
or
scas
sub
lret
daa
rsqrtps
inc
xor
jmp
or
xor
lea
jle
xchg
call
scas
adc
sbb
push
xor
outsl
iret
leave
adc
adc
test
push
daa
pop
lea
cmp
push
xchg
inc
fsubl
mov
sahf
gs
and
shlb
sbb
dec
inc
das
dec
pop
sti
inc
int3
sbb
stos
mov
lods
sbb
je
push
les
inc
push
adc
pop
mov
jmp
pop
movb
ficoml
lods
gs
push
or
call
mov
test
nop
in
and
mov
dec
aam
out
fadds
or
mov
pop
sub
jae
and
mov
jl
bound
ljmp
sti
stos
mov
les
test
test
ljmp
lds
mov
push
or
jns
sbb
mov
bound
es
mov
stc
mov
fldenv
pop
adc
movsl
repnz
or
mov
das
sub
push
sbb
pop
xor
idivb
mov
pop
dec
inc
mov
xchg
test
mov
mov
mov
or
xlat
sub
push
neg
cmc
stos
dec
mov
mov
xlat
outsb
fsubrl
push
adc
xchg
jp
pop
and
gs
iret
repnz
sub
sbb
daa
push
mov
in
mov
in
stos
popa
std
notb
daa
pop
and
push
jae
mov
shrl
pusha
cmc
mov
pop
test
mov
adc
lahf
jo
mov
mov
add
mov
jmp
test
mov
lds
add
inc
adc
les
mov
add
xchg
in
ja
pop
and
mov
adc
push
pop
mov
mov
inc
xchg
into
test
mov
icebp
and
jmp
cmp
inc
and
mov
shlb
sti
adc
mov
sbb
push
out
push
int
mov
push
pop
add
push
dec
loop
lret
xchg
in
enter
std
lods
dec
pop
and
sub
jmp
mov
jns
dec
ljmp
mov
xchg
pop
jb
and
orb
mov
clc
jno
sub
xchg
mov
sub
out
sub
frstor
and
dec
loop
les
adc
ja
mov
push
xchg
mov
icebp
mov
pop
popa
fs
add
dec
push
and
push
xchg
das
and
in
push
adc
sub
or
fldenv
and
lods
popa
push
shlb
inc
out
push
inc
test
push
insb
push
mov
inc
push
mov
dec
cmpl
outsb
enter
sub
dec
and
jo
nop
mov
push
push
and
mov
adc
jmp
pop
addr16
inc
aam
sub
repnz
mov
daa
aam
push
xchg
gs
add
stos
or
mov
lods
jp
sub
mov
and
sbb
mov
cmp
or
je
in
cwtl
movsl
push
push
sbb
push
mov
dec
mov
mov
inc
lods
push
and
xor
add
aaa
and
sbb
int3
sub
push
mov
mov
in
inc
enter
mov
xchg
sbb
mov
mov
push
sub
mov
clc
iret
push
push
pop
sub
jl
xchg
cmp
fs
scas
mov
rclb
or
mov
rclb
mov
mov
mov
cwtl
or
mov
and
mov
sbb
mov
in
sub
in
nop
shlb
sbb
sbb
adc
insb
pop
fs
pusha
sub
adc
or
push
lahf
inc
rcll
cs
shrl
call
hlt
inc
add
test
jne
jle
adc
and
stos
mov
push
inc
add
inc
sbb
xchg
mov
and
clc
mov
and
add
fldt
jp
and
and
rol
fnstcw
and
xchg
inc
add
mov
mov
cli
test
lea
jmp
mov
sahf
lret
dec
ret
xor
mov
nop
dec
inc
xchg
ljmp
imul
cmp
shll
mov
aaa
ja
pusha
in
call
dec
mov
or
fdivrl
mov
jne
pop
int3
inc
mov
push
decl
out
test
and
sbb
mov
pop
jnp
les
xchg
popf
out
xlat
sbb
inc
mov
sbb
jp
or
shll
sti
dec
mov
mov
loope
mov
xchg
lea
cmp
and
or
or
jns
mov
repnz
pop
les
fdivl
negl
aas
shlb
jne
push
movsb
sahf
mov
pop
push
ds
rclb
inc
mov
jg
xchg
and
mov
aam
cwtl
xor
or
in
sub
scas
in
jl
test
mov
jecxz
and
lret
outsb
mov
test
inc
test
imulb
icebp
fucom
or
mov
push
ds
and
mov
pop
add
ja
adc
mov
lea
xchg
jg
popf
adc
adc
and
flds
jmp
and
mov
xor
jo
sbbl
jns
and
adc
add
inc
cmp
les
fcoms
movsl
and
push
push
mov
mov
inc
push
adc
movsb
rcll
mov
mov
pop
cmp
mov
adc
or
mov
les
and
nop
das
movsb
bound
push
mov
cmp
enter
mov
adc
push
inc
cmp
and
or
out
mov
repnz
test
inc
adc
jae
adc
cmp
adc
test
scas
lds
cmp
sbb
add
ficoms
lds
or
int
pop
sub
dec
cmp
and
xchg
adc
xor
inc
push
enter
jecxz
mov
mov
sbb
test
rclb
enter
sub
adc
mov
loop
js
cmp
mov
daa
nop
js
test
adcb
mov
pushf
cwtl
mov
and
daa
adc
and
xchg
xchg
sub
jne
jo
mov
lea
or
xor
insb
rorb
inc
insb
push
enter
dec
inc
sub
pop
insb
dec
sbbb
pushaw
in
call
int
inc
clc
jno
loope
mov
jge
push
fistl
or
and
call
adc
push
jbe
push
xchg
mov
dec
pop
insb
dec
das
fmull
push
std
sbb
loopne
inc
lock
jb
je
dec
ja
jb
jmp
or
out
jne
cmpsl
shll
jb
jl
jg
test
test
stc
jmp
mov
ds
adc
lret
dec
pusha
out
adc
test
fcmovne
cltd
rep
loop
lcall
fs
mov
cmp
or
add
and
dec
sbb
js
mov
add
and
in
and
mov
jmp
xor
pop
and
pop
dec
cld
and
add
pop
lahf
sub
test
push
adc
sbb
test
inc
les
jb
je
push
sbb
test
je
bound
jns
inc
std
dec
push
adc
adc
movsb
xor
dec
inc
mull
mov
lds
xchg
sbb
jae,pt
jecxz
mov
mov
or
insb
sets
mov
nop
mov
lods
push
jecxz
inc
push
and
ret
mov
xchg
mov
sbb
cmpl
adc
sub
push
lcall
shr
push
or
push
or
mov
xchg
imul
jo
add
test
or
inc
sbb
loope
push
or
faddp
gs
or
add
jle
dec
cmp
call
pop
mov
inc
dec
leave
pop
pushf
pop
xchg
movl
pop
pop
cli
push
pop
inc
movsl
push
fs
pop
dec
ficoms
in
jmp
cmp
cli
push
pop
inc
stc
or
popf
aam
test
mov
and
iret
js
adc
dec
cwtl
je
mov
xchg
mov
push
lcall
sub
movsl
push
or
jl
xor
int3
mov
lods
aad
add
inc
stos
dec
jo
repz
inc
push
dec
sbb
push
movsl
movsl
shrl
popa
xchg
leavew
pusha
fs
enter
jae
xchg
xor
and
bnd
or
fmull
jp
ficoml
and
das
loop
shll
punpckhwd
sbb
sub
test
loope
stc
cld
shrl
push
dec
jne
pushf
mov
sbb
adc
dec
mov
sub
sub
jg
pusha
dec
idivb
dec
mov
aam
cmp
mov
and
fiadds
and
cmp
xor
out
push
lahf
push
add
dec
adc
faddl
sbb
push
inc
lods
cmp
inc
pop
inc
movsb
sbb
or
gs
pop
adc
jnp
rorb
subb
arpl
and
lret
push
jecxz
sub
clc
sahf
pop
jle
mov
dec
mov
jg
insl
call
mov
mov
mov
pushf
dec
daa
repz
pop
daa
push
in
test
sti
dec
hlt
insb
int
call
and
or
xor
fistps
dec
sbb
or
hlt
inc
adc
add
rdtsc
test
jge
add
aas
sub
sub
pop
cmpsl
ret
test
in
xor
cmpsl
and
inc
test
mov
fldt
movsl
inc
and
imul
add
push
inc
inc
cltd
xor
movzbl
cmp
mov
xchg
jbe
mov
sub
fstps
dec
clc
dec
test
enter
push
adc
lods
sub
cmp
mov
bound
cmp
cmpsl
outsb
inc
out
pop
cmpsl
inc
jp
call
inc
dec
adc
sahf
pop
or
cld
cmp
addr16
mov
aas
jg
mov
xchg
loopne
jp
repz
pop
pop
aam
test
or
push
inc
fiadds
sbb
enter
inc
xchg
aas
pop
cltd
pop
loopw
in
xchg
fisubs
jge
inc
jne
pop
xor
sahf
mov
push
push
xlat
in
outsb
loop
leave
push
mov
into
or
mov
test
call
adc
push
and
push
cld
nop
adc
inc
pop
and
cwtl
push
and
pushf
sarb
sbb
in
mov
and
dec
lock
das
rclb
insl
jo
pushfw
addr16
add
sub
bound
jbe
dec
push
sbb
mov
cld
test
or
xchg
inc
jmp
je
add
jmp
std
add
mov
loope
or
pusha
test
adc
push
and
and
dec
fadd
cmp
push
shll
sbb
sbb
lret
test
out
and
xor
mov
jns
xor
xor
xchg
push
xor
sub
sti
movsb
mov
rclb
cmpsb
xor
dec
cs
mov
mov
or
adc
cmp
dec
mov
mov
cmp
jmp
lret
rcrl
mov
and
rcll
inc
push
adc
mov
cmp
xor
jnp
mov
out
cmp
cmp
mov
jp
add
xor
in
ss
dec
inc
mov
sub
fadds
aam
inc
in
and
xchg
je
lret
daa
mov
pop
and
dec
push
push
loopne
pop
imul
push
lock
jp
int
and
pusha
test
jl
rcrl
jne
cld
inc
imul
jmp
inc
dec
jne
mov
lret
mov
scas
mov
sahf
dec
cmp
mov
xor
dec
mov
call
mov
mov
das
testb
call
test
xor
into
pop
add
js
xor
push
jecxz
nop
mov
cmp
fdivrs
adc
push
sbb
rcll
push
test
sbb
mov
jno
inc
ja
in
and
adc
and
sub
arpl
je
and
mov
cmp
dec
adcl
adc
jmp
ret
sub
ret
hlt
inc
arpl
cs
sub
iret
push
ret
adc
xchg
out
adc
loop
mov
or
mov
sbb
cmpsb
daa
movhps
and
push
dec
int3
enter
or
and
stc
xlat
dec
push
and
jl
outsl
iret
movb
inc
fidivrl
dec
inc
pop
aam
cs
cmovs
adc
cmp
or
dec
clc
lock
lods
data16
into
out
push
pop
xor
sbb
popa
popf
out
jecxz
mov
inc
and
jecxz
pusha
pop
loope
or
inc
shll
push
jnp
mov
xor
adc
push
inc
or
iret
in
pop
es
adc
jg
mov
dec
adc
insb
int3
jnp
iret
aam
flds
sub
dec
adc
js
rorb
add
sub
jae
lods
sbb
loope
ds
pop
cmp
or
jae
and
ret
filds
lods
ja
mov
push
js
stos
pop
pop
mov
movsb
fs
fisubrl
out
and
das
scas
sub
jo
xchg
mov
aas
inc
xchg
jecxz
dec
xor
rorl
test
jne
and
xor
sbb
jns
add
xchg
xor
sbb
adc
mov
test
cmp
sarb
rcrb
xor
addr16
cmp
jl
int
dec
add
and
pop
loope
xchg
stc
test
mov
lods
or
and
mov
aas
inc
ja
push
test
in
aam
loope
insl
fsubp
hlt
add
and
mov
in
and
and
sbb
add
adc
xor
jne
test
dec
and
adc
aam
mov
in
inc
and
add
push
and
xor
dec
add
andb
inc
add
xchg
add
and
int3
subl
and
rcrb
or
xchg
inc
les
inc
insl
and
and
inc
lret
or
mov
das
mov
rclb
mov
push
ljmp
mov
adc
lcall
sbb
pop
cmp
js
and
fdivrl
daa
enter
mov
dec
inc
sub
mov
push
inc
mov
movsb
pushf
push
bsf
mov
js
adc
test
inc
out
xchg
and
and
lods
and
mov
push
xchg
mov
in
inc
adc
and
xor
and
or
daa
push
dec
and
xchg
pushf
test
jnp
cld
inc
daa
inc
and
inc
and
cwtl
mov
rorl
andl
inc
mov
xchg
inc
lods
and
test
adc
or
decl
mov
sub
mov
add
adc
push
xor
sbb
adc
leave
test
cld
push
ss
pop
xchg
sbb
orb
cld
cmp
sbb
test
adc
out
bound
test
and
and
hlt
jl
cmpl
inc
js
je
inc
test
jbe
js
rclb
pop
mov
mov
mov
xchg
je
enter
nop
mov
push
mov
pop
and
int3
mov
insb
and
adc
mov
cmp
inc
insb
and
adc
inc
sbb
and
and
sbb
fs
add
xchg
or
pop
and
inc
or
push
xchg
xor
inc
jb
adc
les
and
inc
and
cli
mov
and
pop
or
jmp
push
sahf
lea
sub
test
xchg
push
xchg
mov
call
push
or
test
add
push
xchg
es
xchg
adc
mov
push
adc
insb
xchg
adc
add
nop
dec
test
dec
pusha
inc
inc
xor
or
mov
jo
nop
adc
enter
and
loop
push
aam
adc
mov
jbe
inc
and
cmp
adc
xor
sub
or
cld
inc
shll
adc
mov
rolb
adc
addl
lock
lock
pop
xor
sbb
push
and
mov
iret
and
gs
mov
inc
xor
inc
add
lea
push
and
or
sub
xor
hlt
inc
pop
xor
orb
test
fdivrl
adc
clc
inc
aaa
xor
adc
and
nop
cld
mov
cmpsl
inc
adc
pop
push
test
cmp
test
adc
adc
test
add
int3
dec
push
and
sub
jmp
cmp
inc
adc
xchg
push
pushf
adc
xor
cmp
push
test
subl
sub
jo
and
cmp
sbb
xor
adc
orb
test
or
xchg
js
adc
mov
int3
test
and
mov
and
fmull
or
cmp
leave
xchg
adc
xchg
and
mov
mov
xor
inc
or
loope
insb
test
adc
aaa
pushf
and
cld
and
and
sub
and
clc
adc
xor
sbb
and
cmp
cs
mov
hlt
mov
in
inc
lock
adc
fs
xchg
and
inc
pop
and
sbb
or
test
ja
inc
push
fucom
nop
pop
mov
in
mov
and
ss
les
dec
dec
fs
test
dec
xor
adc
mov
or
test
fadds
sbb
add
enter
nop
or
bound
fisttpl
and
aam
and
mov
shlb
xor
rolb
es
int3
adc
das
cmp
les
xchg
adc
imul
inc
or
inc
les
enter
xor
adc
jb
adc
add
mov
mov
mov
or
scas
cwtl
adc
and
xchg
mov
loop
sbb
es
push
nop
jb
test
and
pop
and
fidivs
lods
xchg
cmp
inc
cmp
test
int3
dec
and
cmp
xchg
pushf
add
adc
movsb
adc
test
dec
xchg
movsb
xor
testl
test
and
aaa
mov
sub
push
pushf
adc
mov
movsb
push
insb
adc
adc
cwtl
xchg
inc
insb
dec
es
inc
mov
xor
pop
fs
and
adc
xor
sbb
mov
and
mov
movsb
sbb
sub
sub
jns
mov
mov
call
test
mov
test
rclb
jne
jo
mov
inc
sub
adcb
jl
in
or
xchg
adc
add
xor
aam
js
sub
xor
je
dec
es
push
fildll
mov
daa
inc
jo
js
mov
xchg
or
test
cwtl
adc
and
sub
mov
mov
fs
enter
loopne
hlt
or
inc
fs
adc
pusha
cmp
and
xor
pusha
fsubl
adc
or
popf
sbb
enter
or
sub
cmp
mov
inc
add
test
push
test
and
jl
push
cld
add
adc
mov
and
inc
mov
dec
adc
dec
sbb
negb
dec
or
test
and
nop
dec
hlt
add
sahf
cli
and
daa
enter
mov
xor
js
adc
inc
xor
test
and
clc
add
cmp
dec
adc
cld
and
cmp
jb
cmp
inc
add
test
mov
enter
popf
adc
or
es
ror
sub
loopne
add
pop
and
stos
xor
adc
xor
inc
das
and
nop
and
test
mov
inc
inc
and
inc
pop
and
adc
pusha
inc
mov
and
xor
cmp
and
adc
push
push
adc
pop
mov
jmp
jmp
pop
popf
pop
aaa
push
rolb
xor
mov
insb
mov
or
movsl
pop
cmpb
adc
cmc
fnstcw
jmp
test
and
cmp
loope
loop
in
sbb
fcom
fisubrl
mov
fcomip
xor
mov
pusha
sub
movsb
test
jl
and
xor
mov
mov
cs
push
sub
das
test
xor
cli
xchg
xchg
jle
cmp
test
sub
inc
inc
aaa
mov
xrelease
mov
push
adc
mov
cmp
sub
inc
inc
ror
mov
mov
les
loop
out
fdiv
mov
lret
inc
cmp
inc
ror
lret
adc
mov
imul
shlb
in
and
mov
mov
jecxz
xor
adc
stos
add
sub
cmp
repnz
jns
or
sbb
mov
mov
mov
mov
ss
inc
cld
xchg
scas
rclb
imull
and
aaa
push
shr
imul
dec
das
neg
ljmp
jg
adc
xchg
adc
lret
inc
rorl
push
leave
xor
adc
pop
gs
adc
and
xor
das
dec
adc
cmp
cmpsl
inc
add
inc
push
sub
jno
or
push
mov
dec
sbb
xor
push
adc
stos
loop
jno
out
sahf
les
sbb
and
inc
push
inc
sar
mov
mov
add
out
lret
and
sub
cmp
inc
fs
sub
and
add
xorb
hlt
insl
mov
and
insl
and
adcb
mov
xor
call
push
into
inc
xor
insb
xor
mov
mov
fnstcw
mov
jns
pop
xchg
and
inc
add
aam
add
int3
fcom
imull
int
adc
stc
sub
idivl
inc
xor
sub
and
push
shll
jg
or
shll
mov
mov
mov
cmp
mov
leave
cmp
test
test
or
xor
xor
test
push
add
fcmovbe
loop
out
ret
dec
out
and
mov
stc
mov
jno
rcl
enter
in
mov
int
xor
adc
cli
aam
pushf
or
pop
sub
out
xchg
jl
daa
jb
nop
pop
lds
mov
insb
shlb
repz
and
mov
rorb
shlb
std
ret
shll
leave
mov
lods
mov
imul
lock
jo
loopne
ror
and
iret
pusha
push
sti
inc
fadds
cmpb
fucom
inc
subb
adc
mov
jmp
mov
inc
push
aam
in
xor
xor
xor
and
test
hlt
loope
xor
xchg
jno
mov
push
push
xor
xlat
out
lock
mov
xor
sub
aad
or
xor
sbb
dec
sub
enter
adc
pop
and
mov
fs
shlb
stc
cmp
and
ss
cmp
fimuls
outsl
push
aad
inc
push
sub
clc
in
and
lods
out
push
cmp
movsb
test
dec
scas
in
les
cmp
cmp
adc
fisubl
xor
ss
pop
pop
xchg
ret
push
mov
xor
int
lret
mov
adc
xor
ss
xor
lret
xor
popf
jg
mov
and
xchg
cli
aam
push
dec
jmp
mulb
and
sub
insl
mov
stos
cmpsb
addl
adc
cs
mov
dec
push
mov
lret
push
enter
or
cltd
hlt
cmp
aaa
mov
or
mov
and
xor
dec
cmp
aaa
xor
fs
mov
mov
xchg
mov
test
adc
stos
fstps
cmove
xor
and
push
add
lret
ljmp
cli
lods
mov
xor
addb
pop
test
dec
mov
sub
movsb
push
fmull
es
ja
leave
nop
movsl
in
jne
xor
and
inc
sub
push
nop
dec
hlt
out
xchg
scas
cmp
inc
xor
and
mov
insb
ret
mov
pop
xor
cmpsb
js
mov
push
pop
lods
in
stos
movl
cmpsl
xor
fdivp
shrl
roll
add
cli
int
aam
insl
mov
jb
xor
inc
cmp
movsb
cmp
clc
bound
pusha
hlt
mov
pop
or
movb
lea
mov
sbb
xchg
rclb
addr16
pop
pop
cmp
cmp
dec
scas
cmp
and
mov
sahf
shrb
cmp
xchg
xor
in
bound
xor
in
inc
mov
sub
pop
dec
mov
adc
sub
xor
push
and
sub
cmpsl
push
daa
ja
out
push
jbe
cmp
mov
and
sti
ss
cmp
mov
xchg
cs
mov
mov
addr16
lods
testb
pop
mov
cmp
lret
cmp
sub
push
lret
sub
mov
gs
test
xor
mov
pusha
xor
push
dec
jecxz
sar
inc
repnz
and
xor
lret
ret
mov
les
mov
and
or
dec
mov
add
jge
cmc
and
call
cmc
ds
sbb
jno
dec
and
pop
leave
sub
inc
sbb
outsb
cltd
testb
cmp
jne
lahf
jle
gs
repz
dec
mov
xchg
add
data16
test
push
test
pop
inc
sahf
leave
clc
clc
fistps
add
xchg
pop
fisubrl
jne
sub
fildl
fdivs
cmc
pop
hlt
mov
or
push
add
clc
pop
cmp
pop
je
cld
and
loop
inc
add
lret
notl
cld
nop
je
mov
imul
inc
dec
or
sbb
aad
jns
jl
and
sub
enter
roll
xchg
stos
dec
and
sbb
cltd
and
enter
xor
xorb
push
aam
xor
shr
mov
xchg
add
shll
and
leave
jge
cmpsb
jp
mov
jne
sub
ret
xor
popa
ja
stos
push
jle
or
sub
inc
inc
cmpb
stos
sub
mov
push
mov
push
dec
dec
repnz
adc
sub
jle
call
add
push
cmp
sbb
inc
les
rorb
ret
mov
dec
adc
add
icebp
dec
into
outsb
loopne
divb
cmp
mov
lods
xor
sub
jno
stc
jecxz
adc
push
les
mov
push
invd
mov
pushf
inc
mov
cwtl
data16
push
adc
movsl
sbb
stos
push
adc
mov
sub
int3
cmp
or
adc
and
sbb
test
pop
xchg
push
int3
or
adc
movsb
mov
and
push
mov
sahf
mov
rolb
and
xor
push
or
bound
xor
sub
sub
adc
jl
inc
jno
xor
cmp
mov
or
sbb
lock
nop
sbb
xlat
addr16
test
push
mov
pop
or
inc
insb
and
pop
test
xor
lock
xchg
sbb
mov
push
adc
nop
xor
in
cmp
pop
mov
xchg
cld
pop
push
lds
lcall
sbb
pop
out
push
sub
repnz
sub
xchg
loope
add
adc
mov
xchg
in
cmc
das
aad
loopne
fmul
dec
adc
je
cmp
jne
xbegin
add
mov
lods
repz
mov
call
jo
sub
push
test
hlt
stc
in
adc
mov
adc
and
aaa
xlat
cmc
cltd
sbb
push
pop
jo
adc
nop
pop
sbb
push
pop
loope
mov
test
or
imul
push
push
fimuls
int
fnsave
lret
mov
fidivrs
mov
fcoml
rorl
test
lcall
fwait
sti
inc
in
dec
or
sbb
mov
loope
add
je
mov
add
add
mov
test
and
jno
lsl
mov
je
pusha
fldl
xchg
or
jle
mov
jae
inc
adc
test
faddp
test
push
sbb
dec
mov
fsincos
inc
stos
inc
cmpb
sbb
out
data16
in
pop
ret
loope
add
cmp
lods
insl
adc
hlt
mov
ret
adc
les
jl
test
add
out
xchg
cld
adc
aad
dec
jmp
push
cli
leave
jne
je
faddl
push
icebp
xor
lret
mov
loopne
clc
je
jmp
adc
mov
mov
dec
adc
jge
push
stos
call
popa
flds
sbb
nop
hlt
enter
xor
in
and
inc
or
push
mov
movsb
adc
inc
icebp
cwtl
sbb
mov
in
cwtl
cmp
sub
push
and
or
not
bnd
cmp
or
mov
add
movsl
popf
dec
mov
inc
dec
idiv
xchg
sbb
lcall
jnp
test
dec
sbb
xor
aas
stc
sbb
test
or
in
mov
jne
das
ret
out
mov
lock
adc
lahf
test
hlt
inc
call
clc
or
or
jne
jp
push
dec
daa
jmp
fnsave
psubusb
fdivrs
movsl
sub
sub
ret
and
popf
or
inc
je
cld
sar
cltd
xchg
loop
inc
sub
dec
scas
add
pop
enter
add
insl
mov
or
movsl
hlt
je
push
inc
push
dec
inc
mov
xor
xchg
loop
sbb
dec
lahf
pop
testb
je
pop
ret
call
xor
xor
icebp
pop
push
xchg
out
mov
test
mov
jl
mov
or
in
scas
sarl
mov
sbb
test
inc
mov
and
add
sti
pusha
mov
orb
inc
arpl
and
inc
ret
imul
in
push
test
scas
pop
inc
out
loop
out
mov
xor
push
rclw
inc
xchg
pop
inc
into
cmp
test
add
inc
ljmp
push
in
and
sbb
sbb
test
dec
mov
loope
in
push
adc
mov
ljmp
and
ds
or
inc
or
pop
sbb
inc
mul
loope
pop
movsb
in
xor
adc
or
or
sub
sbb
cmp
cmc
sub
aad
dec
mov
call
dec
and
cmpsb
and
jne
paddw
adc
cs
int3
mov
and
inc
fstl
and
fs
mov
pop
add
loopne
cmc
pop
push
and
inc
lret
jl
hlt
mov
inc
or
loop
adc
add
dec
adc
jns
xchg
or
loopne
cld
inc
or
pop
cmp
push
push
dec
dec
and
push
pop
xchg
stos
fimuls
push
push
sbb
sbb
loope
ror
cmpsb
dec
xor
nop
inc
or
mov
dec
dec
call
push
inc
jle
mov
xchg
repnz
push
and
enter
push
sbb
add
push
ljmp
add
jge
add
push
aam
and
clc
movsb
and
sti
sub
mov
jne
data16
and
inc
repz
sub
icebp
mov
pusha
enter
imul
push
lods
pop
dec
mov
ret
inc
notl
push
jmp
inc
sub
dec
inc
clc
adc
sub
sub
std
sub
les
aas
adc
dec
add
dec
or
test
push
push
cmp
xchg
inc
or
mov
movsb
inc
mov
adc
mov
cmp
adc
ss
movsb
cmp
inc
push
dec
arpl
lock
test
call
lods
pop
int
arpl
call
and
mov
jns
sbb
test
cmpsl
sbb
xchg
gs
or
sbbb
cmp
jge
and
jo
mov
scas
je
scas
mov
and
mov
mov
sub
adc
test
lods
pop
enter
test
dec
or
mov
push
daa
lods
ret
xlat
outsl
xor
mov
lds
ret
fstpl
or
mov
lret
test
cmp
icebp
bound
fs
xchg
pop
xchg
or
and
clc
dec
fidivrs
sar
js
and
or
les
dec
sub
mov
push
negb
xor
or
imul
sbb
jne
imul
lahf
xchg
adc
dec
xchg
decl
adc
mov
jo
rclb
lods
adc
cmp
cmpsb
or
repz
fcmovb
fsubr
pop
xor
add
mov
inc
sub
sub
movsb
jg
push
decb
jne
testb
cmp
in
pop
les
test
jecxz
adc
sub
int3
mov
and
xlat
jb
mov
inc
and
loop
jl
ret
sbb
cmp
cmp
sub
add
imul
or
clc
dec
test
std
or
insl
stc
cmp
mov
js
push
sahf
add
and
jo
test
pop
jnp
push
ror
test
xor
scas
mov
push
stos
lock
xchg
mov
mov
sarb
das
add
jge
mov
mov
xchg
sti
and
add
cmpsl
inc
cli
xlat
sbb
lcall
sub
outsb
xor
cmpsl
ret
popf
inc
aas
test
jne
jp
in
aam
iret
xor
outsl
dec
dec
movsb
xor
lods
in
inc
cmp
and
sub
les
scas
mov
das
and
fdivrp
mov
xchg
cli
pop
das
stos
push
nop
ja
inc
fmuls
and
sub
cld
xchg
daa
ja
test
inc
or
mov
hlt
nop
daa
add
jmp
and
jo
cwtl
mov
adc
repz
sub
push
adc
mov
les
dec
sub
leave
out
mov
jnp
add
inc
clc
je
jns
stos
and
aaa
sbb
or
inc
adc
clc
dec
cmp
jnp
dec
or
call
pop
nop
and
repz
and
lret
shlb
inc
push
nop
scas
dec
cld
mov
daa
decl
cli
stos
push
jne
insb
cmp
dec
pop
rorl
push
add
fistps
test
sbb
mov
sub
iret
mov
movsb
and
cli
mov
lea
aas
nop
xchg
mov
fnstenv
ficoms
mov
mov
jo
cld
ljmp
and
pop
leave
ljmp
cwtl
pop
mov
mov
and
jae
test
call
hlt
nop
lock
adc
sub
in
mov
xor
adc
xchg
or
pop
add
adc
and
xchg
addr16
fsubr
push
in
sub
call
int3
loop
cli
outsb
mov
lods
mov
mov
call
fimuls
pop
inc
outsb
pop
or
cmc
stos
notb
or
push
add
add
cmp
out
mov
test
mov
insl
stos
pop
in
xchg
push
adc
adc
nop
rorl
sub
mov
pop
push
std
xor
lds
inc
or
daa
inc
inc
fdivrl
sarb
xlat
jmp
mov
popa
and
mov
ss
jbe
jns
out
adc
pop
repnz
or
nop
test
mov
inc
jb
inc
push
cs
mov
adc
or
mov
push
jmp
scas
addb
sbb
xchg
lea
and
mulb
imul
mov
dec
jne
les
adcb
iret
mov
mov
mov
hlt
sbb
out
pop
and
xor
inc
int3
or
or
repnz
popf
adc
pop
adc
aam
movsb
addb
sub
dec
int3
sub
dec
inc
sti
adc
lds
scas
mov
or
stc
sbb
adc
lock
push
aam
lods
and
mov
fs
enter
push
inc
and
jmp
sbb
jmp
add
test
xchg
mov
mov
cmp
jno
in
push
mov
fs
nop
adc
push
pop
dec
mov
or
jmp
cld
shll
push
xor
pop
stos
lods
inc
pop
mov
push
adc
imul
mov
pusha
ret
call
mov
clc
ret
nop
xor
or
out
insl
outsl
or
push
dec
xchg
xor
sbb
int3
inc
inc
test
cli
pop
out
jp
daa
or
addr16
and
loop
jne
xor
inc
mov
fmuls
les
sub
mov
mov
push
or
xor
cld
cmp
inc
jmp
inc
pushf
push
daa
lods
pop
bound
mov
xchg
push
xor
and
push
sbb
inc
repz
cli
enter
xor
popf
cmp
jo
push
and
push
cmp
testb
sbbl
adc
out
xchg
scas
testl
jmp
in
mov
xchg
mov
jp
and
in
cmp
ja
mov
mov
or
in
jge
or
mull
lret
out
or
sbb
popf
sub
push
iret
mov
cmp
out
or
sub
insb
cmp
lcall
dec
sbb
or
nop
push
cs
je
lock
popl
push
or
rcrb
shr
lret
sbb
pop
dec
or
in
ret
rcrl
cmp
push
sbb
das
mov
das
lods
xor
adc
pop
in
xor
cli
stc
js
adc
cld
cmp
adc
cmpl
andl
adc
mov
fildll
sti
fwait
inc
lock
movsb
mov
mov
out
call
fs
je
adc
and
or
jae
fwait
mov
and
mov
stos
dec
add
xor
shll
fisubs
outsb
push
mov
lock
call
test
stos
int
test
adc
inc
pop
xchg
stc
xchg
cmp
mov
mov
or
mov
jns
inc
nop
outsb
sbb
lahf
adc
push
nop
mov
frstor
shrl
or
pop
repnz
ljmp
test
sub
js
lock
cli
ljmp
xor
ljmp
cmp
fadds
ljmp
sbb
push
xor
or
adc
push
sbb
sti
add
dec
jne
pop
fstl
pushf
mov
inc
jmp
pop
ds
pushf
loopne
inc
xchg
pop
lods
lahf
push
lock
hlt
out
push
andb
jno
lock
push
mov
in
das
clc
xchg
pop
xchg
fwait
add
adc
adc
test
out
repnz
adc
or
sub
sub
cmovb
je
push
fcoms
mov
adc
test
sub
hlt
push
inc
push
mov
fsts
loopne
enter
test
adc
lock
pop
mov
rol
or
pop
insl
and
cmp
push
xchg
fbld
and
arpl
cld
decb
movsl
gs
add
popf
sarb
mov
aad
mov
adc
popa
sub
cld
xchg
cmp
pop
lods
xor
dec
icebp
adc
sub
cmp
ret
call
lea
dec
pop
lods
jmp
dec
in
inc
jo
pop
fiadds
inc
cmpb
jne
out
cwtl
ja
sbb
jge
and
test
push
rcrl
in
adc
das
faddl
sub
or
lea
jo
mov
mov
mov
movsb
adc
data16
icebp
lret
dec
nop
cli
xor
in
nop
lcall
pop
push
dec
scas
pushf
jmp
mov
dec
ret
lds
jae
jmp
mov
test
lea
mov
popf
inc
jae
imul
hlt
inc
lret
push
std
xor
add
cmpsb
dec
stos
aas
jp
hlt
adc
call
repnz
inc
push
and
bound
jns
adc
adc
std
aaa
push
lds
pop
sti
lea
insb
add
lock
jb
loopne
push
xchg
ret
or
sub
imul
out
je
push
popa
cwtl
mov
or
dec
nop
add
ret
jmp
jmp
jne
adc
imul
pop
mov
aaa
xor
lcall
out
xchg
roll
cmp
sub
test
popf
mov
adc
xchg
int
aam
fnclex
mov
adc
stc
fstl
mov
or
cld
test
inc
xchg
sub
movsb
pop
and
pop
inc
adc
ret
repnz
adc
jl
clc
lret
sarb
jmp
mov
inc
mov
aas
mov
inc
mov
cmp
or
loope
pop
inc
ljmp
jl
movsb
dec
loope
sub
or
mov
out
fisubs
or
test
sub
pop
inc
add
dec
incl
and
push
or
mov
adc
daa
lahf
add
lcall
inc
mov
jno
lods
sbb
xchg
stos
ret
push
rcll
push
cmp
inc
xor
cmp
xor
and
add
dec
add
pop
xchg
push
repnz
ds
inc
les
mov
mov
popa
outsb
fwait
inc
pop
mov
mov
inc
push
mov
jbe
hlt
mov
imul
cmp
and
xor
enter
dec
xchg
mov
xor
lret
loope
xor
and
jne
cmp
adc
lods
xchg
nop
arpl
and
movsl
pop
test
dec
cld
outsb
loopne
xlat
hlt
test
sbb
vpsubsb
cvtpi2ps
jns
popl
icebp
sbb
add
pop
xlat
adc
jns
imul
adcl
jnp
and
xor
jmp
add
or
daa
sar
cmp
adc
fcompl
pop
inc
out
mov
sbb
add
xor
inc
test
and
and
add
inc
idivl
nop
mov
test
std
and
cmp
fdiv
ss
and
mov
mov
rorl
jecxz
fmuls
dec
cmpsb
fistpll
adc
hlt
jg
cld
xchg
add
push
loop
mov
bound
mov
xchg
inc
daa
cld
incb
cmpsl
jl
daa
cld
add
inc
push
and
dec
mov
push
pop
and
push
cld
jne
sahf
out
adc
mov
sub
ret
mov
mov
cld
addl
lds
sub
jb
movsb
rcrl
mov
vmovhps
jle
jno
adc
xchg
popaw
or
cmp
and
cmp
xchg
inc
dec
enter
mov
cmpsl
hlt
rcrb
pop
cli
fildll
rcl
mov
or
das
fisubrl
mov
pushf
outsl
movsb
iret
sti
adc
push
mov
dec
insl
insb
xchg
xor
xchg
xor
insb
mov
mov
aas
ret
dec
fnstcw
ficoml
outsl
stc
xor
adc
enter
add
adc
add
sub
cmp
xor
xor
cmp
and
inc
jl
xchg
dec
icebp
mov
push
and
push
enter
divps
adc
lea
loope
or
inc
jo
sub
sub
dec
inc
cmp
xchg
inc
ss
sbb
stc
jmp
push
or
jb
les
xor
push
sub
cmpsl
xor
pop
loope
xor
xor
repnz
mov
mov
jmp
push
push
aad
lahf
ljmp
movsl
cmp
mov
cmp
fucomi
roll
mov
pop
cmpl
jne
inc
jmp
js
xchg
movsb
popf
daa
lods
loope
adcl
pop
adc
hlt
mov
adc
nop
xor
sahf
sub
inc
mov
add
xor
mov
sub
dec
into
mov
and
push
push
add
push
in
call
jo
inc
xor
cwtl
cld
cmp
jbe
add
mov
filds
inc
mov
push
nop
int3
mov
dec
mov
faddl
cs
or
test
add
pop
mov
ljmp
xor
xchg
xor
mov
sub
mov
enter
ret
adc
hlt
dec
cmp
add
jnp
push
int
and
int3
rorl
jmp
cmp
push
fadds
mov
loope
sub
pop
jno
lods
dec
sahf
arpl
push
movsb
dec
mov
test
mov
jmp
mov
push
jg
sahf
cmp
sub
add
jmp
movsl
pop
lods
adc
push
fs
mov
sub
mov
adc
jmp
lahf
lea
call
mov
lcall
adc
mov
and
xchg
pushf
ds
add
mov
sbb
fstps
movsl
fcos
movsl
out
inc
ja
call
daa
mov
and
xor
pop
in
jne
mov
out
inc
js
pop
aam
in
shll
xchg
adc
mov
adc
sbb
andl
jg
cmp
dec
insb
les
iret
cmp
sub
dec
dec
push
jne
ds
test
hlt
testl
pop
or
dec
cmp
and
mov
mov
mov
xor
ja
call
push
pop
inc
jo
inc
push
mov
sbb
leave
pop
cmp
or
cmpsl
or
xlat
enter
mov
outsb
iret
test
push
in
fidivrl
and
cmp
xor
lods
sbb
outsl
bound
clc
jae
gs
movsl
jne
aaa
movsl
jle
push
fucomp
into
loope
loop
andb
adc
cmp
adc
imul
jne
sti
int3
dec
xlat
or
sbb
xor
loopne
jp
cld
in
add
jle
mov
je
and
or
fs
mov
xlat
fnstenv
xlat
call
clc
out
aam
sub
mov
enter
dec
adc
divb
pop
scas
cmp
call
fsubrs
test
pop
je
and
into
cmc
push
lea
dec
test
fstps
cwtl
les
sarb
inc
dec
outsl
movsb
fld
cld
xor
mov
nop
mov
mov
fmuls
loopne
mov
mov
repz
jb
push
push
and
xchg
sbb
jge
xchg
idivb
cmp
mov
cmpb
sub
pop
fs
mov
mov
lock
lods
mov
jge
pop
test
les
outsb
popl
and
adc
sub
test
xchg
mov
das
dec
test
mov
in
imul
or
test
adc
mov
mov
jg
mov
pop
push
les
and
and
adc
or
xchg
sbb
movsl
dec
push
sbb
sbb
lock
hlt
push
mov
into
fbld
je
or
jmp
mov
push
clc
je
or
adc
cltd
repnz
loop
std
xor
insl
push
or
or
mov
pusha
mov
lea
adc
xor
rorl
daa
dec
hlt
repnz
pushf
mov
sub
lret
into
or
jp
mov
mov
adc
jl
jb
hlt
and
mov
mov
inc
mov
cmp
je
and
or
push
dec
pop
and
mov
scas
dec
adc
pop
mov
cmp
push
or
sbbb
loop
addl
xchg
push
call
ret
hlt
dec
sbb
pop
pop
nop
enter
add
push
repz
push
ja
adc
or
push
mov
lea
push
cmp
or
inc
hlt
popf
jbe
and
pop
sub
hlt
cmp
add
sub
std
or
dec
lahf
insb
xor
hlt
jne
mov
adc
cs
movsb
dec
sti
and
dec
sub
cmpsb
movd
or
out
into
repnz
repz
movb
adc
pop
hlt
cli
sub
aaa
or
inc
divb
inc
sbb
lret
cwtl
in
mov
repz
out
cld
mov
xor
or
ljmp
and
xchg
pop
cmp
pop
mov
xorl
or
cwtl
dec
mov
sub
std
jo
popa
imul
dec
add
fyl2xp1
call
add
pop
out
cmp
sahf
leave
aas
inc
or
call
push
adcl
test
sbb
je
adc
pop
sub
insb
ds
outsl
jmp
test
orl
jne
dec
cld
aaa
push
pop
cmp
leave
shlb
adc
mov
cmp
aam
adc
push
inc
pop
and
popf
ds
dec
test
cmpsb
jns
mov
and
or
into
ds
push
xchg
enter
call
shlb
dec
jl
das
insb
jl
rcl
in
jo
aaa
stc
push
imul
dec
lods
jl
dec
add
and
mov
push
leave
shl
and
push
cld
xchg
testb
sub
xchg
or
sub
or
loop
sub
scas
pusha
in
es
cli
fcoml
call
pop
enter
jno
lahf
fisubs
mov
xor
pop
push
bound
jmp
pop
cld
fdivrs
inc
aam
es
sbb
dec
sti
lods
notb
sub
xchg
mov
out
mov
lret
and
and
jge
out
pop
xchg
mov
xor
sarb
fmuls
or
call
imul
test
sub
scas
cltd
mov
sub
fcmovne
pop
pop
lods
sbb
shr
insb
and
pop
sub
jae
or
lea
push
adc
iret
cs
loope
pop
mov
les
rcll
les
and
data16
sub
outsl
mov
jp
add
int3
inc
xor
mov
push
loopne
dec
xchg
mov
add
scas
leave
and
cmpsb
mov
jl
inc
rorl
add
dec
adc
xchg
loop
lds
sbbl
push
sub
adc
lods
dec
lcall
nop
jne
inc
fcmovbe
xchg
sub
sbb
repz
jnp
shlb
xchg
gs
mov
sbb
stc
dec
test
mov
or
push
mov
and
pop
inc
sbb
ss
adc
outsb
cmp
pushf
and
mov
orb
jae
fisubrl
or
push
inc
inc
jno
xchg
jno
lret
std
adc
jle
andl
or
jo
sub
push
xchg
add
aas
mov
mov
mov
xor
std
ret
inc
push
inc
lods
sbb
mov
fs
or
mov
aad
xlat
push
xchg
scas
jl
jo
push
xchg
iret
and
out
test
leave
mov
push
sbb
mull
pop
mov
rorb
jne
andl
out
xchg
clc
pop
fidivl
ret
and
pop
push
xor
add
and
test
idiv
dec
int
adc
sbb
mov
rorl
dec
aam
nop
inc
hlt
mov
dec
loope
sbb
lcall
push
jle
xlat
fs
cld
test
daa
dec
in
fs
icebp
test
push
add
int3
add
movsl
aam
mov
imul
inc
mov
push
add
push
stos
out
and
xor
lahf
xor
or
add
test
jmp
test
fmuls
mov
adc
xor
mov
cmp
and
or
xchg
sub
out
push
test
sub
fs
or
mov
mov
pop
mov
test
sub
js
pop
dec
and
inc
fsubl
adc
sbb
mov
sub
inc
xchg
insb
cs
rcll
loopne
or
nop
fmull
mov
push
or
test
and
adc
dec
mov
ret
cmovl
and
or
out
mov
cmp
lods
push
xor
nop
and
imulb
xor
addr16
push
mov
pushf
frstor
or
dec
or
dec
xchg
shl
sbb
or
push
and
adc
enter
xor
or
adc
dec
mov
inc
mov
enter
leave
xor
cmpsl
inc
dec
xchg
mov
test
inc
adc
addl
test
adc
push
push
mov
adc
pop
mov
sbb
adc
push
push
lods
jno
push
sub
jno
push
lods
push
and
inc
int3
and
test
adc
push
pushf
lock
xor
or
adc
inc
mov
stos
mov
or
or
mov
push
push
adc
push
lods
inc
xchg
lahf
dec
adc
mov
mov
cmpsb
pop
inc
push
inc
nop
call
adc
test
and
inc
enter
xor
cmp
loop
xor
negb
orb
inc
adc
inc
dec
and
mov
add
xorl
addr16
into
push
test
inc
push
pop
adc
jmp
mov
or
sbb
and
and
and
dec
ret
repz
ret
mov
les
push
stos
mov
dec
mov
pop
out
xchg
mov
mov
xor
cs
mov
mov
ljmp
add
fdivrl
mov
out
add
divl
xchg
xor
xor
gs
lahf
inc
sbb
jne
gs
or
sbb
sahf
clc
xchg
aam
jbe
jl
rclb
out
out
mov
enter
sub
clc
test
lods
movsb
loope
jns
inc
out
popa
in
and
xchg
push
jecxz
cli
add
in
mov
mov
xor
push
xor
in
sub
xchg
out
inc
cmp
aaa
cmpsl
loopne
cmp
loopne
aas
mov
nop
loopne
jnp
push
movsb
sti
lret
cmp
cmc
outsl
and
aad
push
mov
pushf
sbb
push
push
dec
inc
pop
and
adc
pop
and
and
outsl
arpl
add
jne
push
int3
mov
insl
jmp
push
arpl
insb
sbb
dec
or
cmp
inc
das
sub
jl
sub
adc
adc
dec
xor
fstps
mov
dec
test
cs
dec
fwait
adc
inc
jne
insb
imul
push
xor
ljmp
mov
jmp
cmp
mov
das
mov
add
stc
aam
mov
sub
mov
adc
mov
xchg
shlb
lock
leave
iret
mov
stos
cmpl
call
js
sub
or
jo
jmp
addl
add
loopne
mov
inc
add
xor
orl
test
push
loope
and
jns
je
push
inc
mov
sbb
clc
mov
xor
push
inc
pop
xchg
scas
xlat
je
xor
sbb
mov
outsb
dec
xor
call
sub
xor
out
sub
mov
pusha
pushf
mov
or
and
add
pusha
sbb
out
sub
stc
data16
jp
add
movb
push
andl
and
call
mov
push
aaa
jns
sub
or
push
xchg
push
pusha
inc
cltd
cmp
add
fists
add
pushf
scas
cmpsl
sbb
add
push
test
push
pop
andb
std
lock
dec
jmp
loopne
test
sbbl
jg
pusha
mov
hlt
and
or
mov
int3
dec
xor
cmc
sbb
shlb
loopne
inc
incl
mov
hlt
inc
mov
xor
push
fcmovnb
pop
push
mov
dec
or
repnz
mov
or
pop
pusha
and
push
rep
movsb
mov
jp
inc
rol
aam
adc
xchg
and
iret
adc
adc
push
test
in
xor
add
shlb
xor
xchg
adc
mov
sbb
inc
outsb
add
jno
int
push
das
test
adc
push
cwtl
nop
into
filds
adc
inc
int
cmp
inc
add
xor
and
ja
fstpl
and
add
fmuls
add
push
add
mov
jnp
out
xor
cmp
call
mov
pushf
dec
imul
sti
neg
setge
mov
rolw
dec
leave
adc
jae
lret
es
not
mov
sbb
cwtl
push
inc
hlt
adc
mov
xor
shlb
enter
push
mov
inc
mov
aam
xchg
or
jmp
push
fisttps
or
cmp
xor
or
or
aam
adc
bound
call
rcl
and
xchg
test
or
data16
or
stc
pushf
sbb
xchg
xchg
xchg
pop
lods
stc
xchg
xor
adc
mov
not
dec
lcall
cld
nop
sarl
aas
dec
int
sub
aaa
and
hlt
out
aad
data16
jns
mov
loopne
ret
sbb
enter
out
or
out
sti
iret
or
clc
es
std
mov
push
into
mov
dec
inc
outsb
sbbb
sbb
setne
jae
xor
mov
loop
lea
aam
in
pushf
fisubs
out
xlat
nop
shl
in
enter
rcrb
push
cltd
jmp
add
adc
lret
insb
cli
pusha
cmp
shrb
rol
lcall
xor
xor
and
inc
int
xchg
ret
inc
inc
cltd
rolb
and
mov
add
pusha
push
cmc
sub
fdiv
rcrb
add
sub
xchg
bound
repnz
mov
loopne
ret
out
pusha
add
sub
jmp
and
pop
nop
push
scas
loop
or
lea
pushf
mov
sub
sbb
push
mov
mov
push
sbb
enter
pushf
mov
jne
fdivrp
xchg
repz
sbb
pop
fistpll
pusha
popl
adc
xchg
dec
jg
pop
jmp
les
xchg
or
adc
add
cld
pop
movsl
and
push
add
cmp
inc
mov
rclb
jge
push
cmpsb
jmp
mov
std
popa
dec
xor
rol
xor
xchg
rcl
fsts
pop
ret
dec
loopne
add
shll
outsb
xor
leave
mov
or
xor
dec
inc
nop
or
push
mov
clc
push
clc
mov
add
pusha
pop
sbb
add
lret
adc
push
add
sahf
lea
aas
daa
and
inc
call
pop
and
roll
and
adc
call
push
jmp
scas
push
es
arpl
int3
fstps
repz
sub
push
xchg
or
and
inc
sbb
xchg
call
cmp
in
icebp
outsl
xor
lds
sub
stos
imul
push
fdivrs
shl
jle
add
rolb
out
inc
lea
test
sar
and
jmp
lahf
push
mov
dec
mov
mov
cmp
or
xchg
adc
insl
inc
push
xor
nop
mov
mov
push
hlt
sbb
mov
mov
scas
sub
mov
jno
or
fistps
or
mov
pop
sub
or
lods
mov
xchg
add
push
mov
repnz
cmp
add
aaa
xchg
repz
repz
and
xor
loop
mov
xor
in
sti
jg
inc
insb
icebp
xor
test
mov
ds
sbb
sub
xor
dec
decb
push
enter
sahf
sub
stc
xchg
enter
pop
shrb
sahf
push
pop
dec
xor
fildll
and
cli
mov
sar
ret
xchg
sub
icebp
js
test
mov
xor
test
push
enter
xor
imul
call
dec
cmp
mov
mov
dec
xor
add
call
jbe
mov
push
sbb
call
pop
xor
adc
push
mov
adc
pushl
adc
push
and
jle
pusha
adc
and
push
test
je
push
and
call
lods
add
adc
mov
xchg
aam
pop
ret
adc
sub
loopne
push
insb
popa
jae
adc
jge
mov
pop
xchg
cmpsl
mov
pop
or
adc
pusha
pushf
mov
jmp
cmp
add
cmc
sub
or
sub
icebp
cmp
aam
inc
shl
mov
rcrb
out
xchg
jmp
sbb
addr16
push
inc
pusha
test
leave
fldenv
or
subb
pusha
adc
mov
pusha
push
mov
hlt
jmp
pusha
push
push
inc
cmp
xor
adc
mov
enter
das
jmp
sub
stos
loope
or
cmp
add
sub
cld
mull
add
inc
push
movsl
sbb
jne
push
movsb
or
push
push
sub
sub
mov
cmp
pushf
mov
xchg
pop
add
add
stc
or
sub
mov
add
into
or
dec
push
cmp
xchg
add
pop
fstl
pop
mov
or
notb
pop
add
push
cli
lret
sbb
pop
stc
ss
xchg
arpl
xor
push
pusha
dec
adc
ja
adc
enter
das
ljmp
jb
xor
imul
leave
dec
push
int3
sbb
cmc
fwait
jb
jmp
rclb
mov
ret
shr
orl
or
xchg
lock
push
xchg
pop
or
call
adc
imul
sti
stc
push
pushf
cwtl
mov
mov
inc
jge
jno
cmc
adc
pop
ljmp
adc
into
xchg
mov
outsl
orl
notl
sub
push
jle
nop
scas
xor
mulb
or
test
pop
xchg
cmp
ficomps
ss
dec
adc
xchg
xchg
enter
push
fisubrs
and
or
das
xor
lea
ret
or
fwait
push
or
push
and
popl
push
dec
cwtl
or
jmp
mov
dec
aas
adc
lds
leave
outsb
jmp
call
loope
xchg
push
loopne
stc
jo
popa
fmuls
or
mov
or
mov
dec
clc
and
lret
dec
data16
push
pop
push
and
jl
push
push
inc
repz
inc
mov
fs
jno
into
mov
pop
popa
mov
frstor
nop
and
mov
xchg
or
and
inc
mov
rorb
rorb
insl
cmc
cmp
xchg
and
jmp
repz
cltd
call
mov
cmp
cld
xlat
mov
pop
stos
sbb
lret
data16
inc
cmp
push
mov
mov
sub
xor
imul
call
xor
ljmp
stos
adc
ret
nop
pop
xor
fs
xor
or
ja
lahf
stc
pop
pop
popf
push
cmp
dec
or
adc
mov
dec
mov
sbb
popa
bound
outsl
jne
fimull
pop
mov
push
xor
cli
and
adc
jne
fimuls
adc
mov
mov
or
ss
jle
sti
test
adc
push
aad
cli
repz
mov
rolb
adc
jns
scas
and
sub
adc
dec
or
test
in
xor
or
sbb
gs
xor
cld
adc
aam
jge
add
es
xchg
lcall
fists
push
push
mov
cli
push
pop
add
mov
test
or
testb
outsb
mov
mov
adc
mov
jle
not
or
pop
mov
cmp
dec
inc
lcall
test
dec
lock
jno
movsl
fdivrl
or
jmp
xchg
adc
repnz
sbb
inc
js
lahf
mov
and
ja
xchg
cld
cmp
movsl
fistps
in
bound
dec
aad
test
xchg
adc
fdiv
in
inc
lahf
iret
cld
jno
sbb
or
add
pop
pushf
call
mov
rcl
sahf
nop
orb
push
pusha
cmc
call
push
push
push
push
jno
push
push
lret
or
or
add
test
jmp
pusha
push
mov
sub
into
jo
xchg
das
rcrl
push
jmp
xor
xchg
dec
inc
inc
test
pop
clc
mov
pop
daa
add
incb
and
hlt
inc
xchg
jl
or
icebp
movsl
and
out
daa
scas
adc
andl
adc
push
adc
sub
daa
mov
adc
mov
int
loop
push
adc
jmp
cmp
hlt
mov
shl
call
jmp
xor
adc
das
and
into
cwtl
mov
sbb
aas
xchg
mov
mov
insl
jb
sti
enter
dec
pusha
xchg
jl
mov
inc
mov
mov
sub
push
pop
in
adc
and
call
or
mov
out
xor
or
cmp
sbb
test
mov
lods
mov
and
adc
jmp
push
xchg
bswap
aas
dec
xchg
pop
insb
adc
mov
adc
inc
push
shr
mov
xchg
ljmp
icebp
ljmp
xchg
dec
pop
xor
lds
es
inc
add
out
inc
outsb
lods
int
sbb
xchg
mov
inc
outsb
or
mov
mov
daa
pushf
jns
or
shl
callw
and
mov
and
shl
stc
fwait
test
dec
cmc
ret
pop
push
mov
sti
sub
or
sbb
outsl
rolb
xlat
test
jnp
push
int3
or
jmp
mov
sub
add
or
mov
loop
mov
shll
outsl
cmp
adc
outsb
in
xor
push
mov
and
test
xor
clc
lods
xchg
sub
add
jle
mov
jmp
call
mov
mov
rorb
mov
neg
fsts
cld
test
sbb
les
dec
cwtl
cmc
jmp
mov
les
push
xchg
jmp
call
add
jno
or
inc
or
test
mov
ljmp
jmp
adc
mov
push
stc
sti
rorb
push
mov
das
push
mov
cmp
add
jmp
mov
es
cld
inc
popa
addb
jmp
dec
je
inc
or
es
add
cmp
pop
xor
daa
test
jo
xor
xchg
in
rcrb
jmp
xchg
imul
sahf
lahf
fs
into
out
xchg
inc
or
sbb
cmc
push
pop
inc
fs
or
ret
sbb
mov
or
mov
jmp
sbb
repz
sub
cwtl
fbstp
ds
mov
dec
mov
pop
stc
adc
and
dec
sti
imul
in
xchg
push
out
lret
mov
sbb
xor
decl
adc
inc
call
dec
test
push
adc
cmpsl
mov
add
imul
mov
jl
ret
mov
xor
mov
lock
cmpsb
ret
popf
jne
cmpb
mov
adc
fimuls
mov
mov
hlt
bound
jo
cmp
cmp
sbb
xor
jmp
adc
mov
cmp
rcl
push
jp
cld
add
xchg
mov
adc
sub
adc
sub
mov
or
push
jl
push
xor
les
js
call
in
sti
clc
ljmp
xchg
je
push
push
or
lock
mov
adc
pop
dec
inc
add
ret
lea
adc
pop
mov
clc
push
leave
sbb
shrl
add
adc
mov
adc
xchg
cmpsb
mov
aam
xchg
fidivs
push
jb
mov
push
clc
shll
aas
xchg
out
or
in
xchg
dec
hlt
test
les
stos
ljmp
push
push
add
out
ds
loope
mov
movsl
and
sbb
push
fadds
test
je
mov
cmpsl
xor
test
int3
xor
adc
inc
add
sarl
loop
cwtl
pop
leave
movsb
test
adc
xor
bound
jo
mov
jne
nop
je
out
ss
and
rclb
movsb
xchg
rcrl
cli
frstor
nop
fadds
pop
adc
setnp
xchg
mov
clc
jl
sub
sbb
mov
cmpsb
inc
cmpsl
jne
movsl
cmpsb
xlat
adc
mov
scas
push
fstpt
push
jo
leave
sbb
pop
jae
test
cmpsb
hlt
stos
test
loopne
and
mov
dec
jne
test
mov
pop
loope
push
add
fmull
adc
mov
xor
and
sub
ja
jo
inc
push
sbb
adc
in
inc
push
mov
mov
xchg
xor
lods
loop
xchg
or
xor
roll
inc
loopne
mov
push
mov
cwtl
cmpsb
xchg
xor
enter
adc
stc
clc
iret
mov
inc
call
fadd
lret
mov
adc
xchg
push
and
and
mov
test
xchg
dec
shll
cmc
scas
sbb
push
mov
sub
mull
and
out
and
enter
cmpsb
cwtl
cmp
mov
or
mov
and
ja
pop
jmp
test
xor
lahf
sub
push
mov
cltd
lods
sub
or
je
push
movsl
xchg
mov
incb
icebp
pushl
dec
sbb
mov
mov
add
mov
mov
sahf
repnz
loopne
into
push
adc
loopne
dec
sbb
fdivr
xorb
inc
in
sub
scas
sbb
add
adcl
mov
sbb
outsb
and
dec
in
or
cmp
faddl
pop
das
jne
xor
inc
aad
sub
aas
dec
test
addr16
addb
rcll
mov
mov
stos
dec
cld
sti
jno
sub
daa
mov
loopne
sub
add
cs
cmpsb
jg
or
push
inc
xor
icebp
xlat
pop
call
jmp
sub
jg
or
fwait
mov
push
and
mov
test
or
cs
push
dec
xchg
dec
pushf
xchg
cwtl
jl
cld
popa
dec
jne
ds
dec
shr
cltd
scas
or
inc
pop
push
inc
test
sahf
sbb
icebp
or
mov
lods
inc
sub
sarb
fcomp
jmp
cmc
dec
sub
mov
fdivrl
lds
out
and
dec
inc
jae
ds
push
ljmp
pop
lret
ret
rdpmc
insb
imul
jbe
js
stos
xchg
sarb
jg
xor
outsb
daa
movsb
aad
pusha
xor
and
ss
sbb
cmc
xchg
jp
xor
mov
stos
adc
je
scas
out
test
es
dec
mov
test
in
movsl
dec
stos
xor
xchg
out
mov
mov
into
incb
ja
mov
pop
xchg
ljmp
pop
arpl
mov
inc
stos
and
stos
test
in
js
add
add
arpl
jae
nop
in
in
sbb
ret
xor
dec
cmp
adc
stos
movsb
mov
sbb
clc
enter
in
push
jmp
adc
and
xchg
xchg
xor
push
pop
fs
dec
cmp
jmp
push
xchg
shrl
xchg
sbb
jno
push
or
xchg
mov
pop
lods
sbb
inc
fwait
adc
xchg
out
negb
xchg
in
push
outsl
scas
mov
lret
inc
and
leave
push
pop
iret
or
lret
pop
jmp
lds
and
xchg
inc
and
dec
xor
mov
sti
aaa
mov
lods
mov
jp
fwait
push
fucomi
cmp
and
mov
cltd
sub
pop
pop
cmp
cmp
jbe
jmp
jg
cli
jno
pop
clc
ds
add
cmc
dec
fadd
in
xor
add
push
faddl
jno
dec
jbe
inc
popf
jge
push
xchg
pop
mov
or
rcrl
cmp
inc
mov
out
adcb
push
sub
lock
jl
cmp
adc
rorl
and
insb
and
clc
sub
call
lods
sub
aas
xor
out
test
pop
push
mov
sub
cli
lcall
cmpsl
out
fcoml
jp
xchg
mov
adc
outsb
adc
test
out
mov
or
ja
mov
out
inc
aad
testl
adc
mov
cltd
aas
or
push
mov
and
sbb
xchg
add
mov
clc
sbb
dec
inc
mov
lahf
imul
inc
and
in
dec
clc
or
add
and
cmc
push
fiadds
jmp
jg
insb
jne
sub
jl
popa
cli
inc
cld
and
jge
mov
aaa
cmc
and
xchg
and
sub
and
xchg
cwtl
rcl
pop
xchg
fbstp
sub
jmp
or
test
xchg
scas
and
enter
xchg
mov
sahf
inc
addl
inc
inc
outsl
nop
push
lock
testb
xchg
push
sub
xchg
jge
inc
stos
sbb
and
popf
jbe
clc
fwait
mov
push
inc
dec
adc
xchg
lea
or
adc
xor
xor
push
clc
mov
fisttpl
push
add
xchg
pop
add
mov
call
in
cmpsb
movsl
or
xchg
sub
and
jle
and
in
jne
dec
push
mov
mov
mov
fwait
mov
loopne
out
adc
or
ds
mov
jle
pop
mov
or
add
jo
fwait
sub
jb
push
je
dec
or
test
jmp
xor
hlt
add
adc
or
mov
adc
test
push
dec
pop
fsubr
push
push
aam
and
inc
fstpl
push
mov
sahf
push
xchg
ror
pop
outsl
rorb
adc
cmc
pop
or
add
int3
inc
enter
inc
xor
popa
jmp
xchg
cmp
enter
push
and
test
inc
movsb
and
mov
jle
inc
jnp
cs
cmp
test
inc
sti
into
punpckhwd
xchg
in
hlt
test
call
sub
dec
das
jne
std
mov
mov
xor
mov
iret
xchg
adc
notb
out
or
inc
out
les
or
or
fcoms
mov
or
hlt
or
push
xchg
mov
lods
scas
xchg
out
mov
fmull
jmp
cmpb
dec
cmp
push
aad
lret
pop
pop
cmp
das
je
cmp
xor
mov
jg
insb
call
test
sarb
jle
jl
lock
fisttps
or
repnz
and
in
jbe
and
inc
in
jl
xchg
jge
xor
mov
pop
adc
jmp
inc
test
or
lahf
inc
and
and
and
adc
addl
inc
sbb
push
hlt
jg
pop
and
and
sub
adc
xchg
lcall
push
iret
push
adc
xchg
int3
rorl
dec
test
mov
or
mov
or
mov
mov
rcl
and
loopne
jmp
stos
mov
or
jg
push
cmpsb
and
les
pop
nop
and
sbb
insb
or
orl
or
cmp
movsb
dec
je
pop
mov
in
jle
addr16
cld
ljmp
enter
mov
sub
or
mov
rcrb
inc
add
je
sbb
inc
xor
or
push
add
inc
rcrb
or
and
cmpb
or
loopne
sbb
inc
mov
adc
sbb
push
mov
or
add
pop
inc
clc
dec
inc
mov
or
dec
adc
adc
mov
loope
jecxz
xchg
sbb
and
push
call
js
push
inc
and
xor
sbb
inc
insb
inc
jecxz
in
add
inc
pop
or
or
cmp
mov
or
adc
lret
add
inc
cmp
add
filds
pop
and
and
or
inc
inc
dec
add
or
mov
cmpl
dec
popa
or
les
mov
insb
les
mov
or
push
je
and
mov
mov
and
test
fsubs
or
xchg
or
shrb
or
mov
inc
mov
mov
test
insb
mov
lock
pop
and
movl
rolb
inc
xor
or
dec
loop
adc
mov
and
je
addl
or
cmp
int3
cmp
xor
xor
pushf
and
dec
aam
movsb
adc
xor
adc
or
sub
clc
adc
aas
push
xchg
or
mov
inc
xorl
pop
inc
or
pusha
jl
xchg
fnstsw
enter
in
mov
pop
mov
or
xor
les
mov
and
pop
aam
xor
cltd
ds
pusha
adc
inc
mov
pushf
push
jecxz
jae
frstor
dec
in
jl
sub
js
inc
movsb
and
push
out
mov
dec
aad
lock
push
sub
ljmp
cli
lcall
test
cwtl
mov
cmpsb
cwtl
imul
shll
mov
mov
jmp
add
fwait
je
push
call
mov
mov
mov
je
and
sub
mov
into
lret
int3
dec
or
push
dec
sbbl
adc
jmp
inc
sub
adc
add
xchg
pop
pop
std
je
cwtl
rorb
jae
mov
pop
xchg
xor
jbe
jne
push
inc
or
pop
sbb
sub
dec
outsl
scas
sbb
inc
and
pop
xor
aaa
push
xor
pop
or
les
clc
inc
loop
std
fnstsw
inc
cmp
xor
dec
push
inc
xor
mov
add
nop
rorb
mov
jecxz
insb
je
sbb
setnp
mov
pusha
sbb
shr
mov
cmp
bt
sub
cmc
jmp
jle
mov
sub
push
cwtl
pop
arpl
fsubrl
mov
jle
dec
cmc
lods
and
jae
push
xchg
icebp
mov
dec
mov
fwait
testl
loopne
inc
int3
xor
push
std
push
stc
stos
dec
movnti
jecxz,pn
rcrb
mov
sub
repnz
adc
iret
gs
ljmp
je
in
mov
arpl
xor
retw
push
jp
pop
mul
xchg
andl
or
push
or
mov
pop
xor
mov
dec
inc
cmp
test
xchg
mov
adc
mov
xchg
ljmp
mov
daa
pop
jg
iret
sbb
sub
test
mov
outsb
push
xor
fidivl
data16
jne
push
push
loope
and
jp
inc
lea
push
adc
bndldx
mov
pop
cwtl
mov
loope
mov
push
sti
add
dec
jns
mov
mov
inc
pop
adc
addr16
adc
pop
sub
nop
cmp
sub
xchg
inc
outsl
mov
push
pop
push
stos
jno
lds
loopne
push
lods
clc
cmp
fs
fcomps
xor
mov
addr16
xchg
lock
inc
cmp
repz
push
stos
jle
push
movsl
pop
adc
cmp
popa
jl
lahf
idivl
sbb
jbe
xchg
shll
ds
insb
mov
xchg
or
mov
and
mov
sub
or
add
lea
lahf
sub
clc
jmp
fstpt
mov
or
push
enter
cmp
outsb
inc
in
loope
mov
imul
fdivrl
sbb
stc
adc
movsl
cld
lcall
out
fstpl
push
sbb
xchg
shlb
ljmp
pop
fsubrs
or
adc
add
sbb
scas
push
dec
xor
and
dec
or
mov
cmp
add
inc
lret
lcall
rcrl
ds
mov
arpl
pop
inc
jne
imulb
repz
push
add
xchg
pop
outsl
xchg
test
jns
xchg
pop
movsl
test
loopne
hlt
jbe
faddl
fbld
pop
sbb
add
ss
add
jp
rorl
scas
cmp
repz
cmp
add
sub
repnz
std
js
push
pop
js
movsl
push
sub
lods
lock
mov
inc
and
pop
mov
xchg
push
or
xor
xchg
mov
adc
push
adc
jp
ljmp
or
dec
fadds
or
lock
mov
loop
dec
and
insl
fwait
sub
hlt
clc
mov
dec
ss
sti
jmp
mov
jno
dec
mov
add
mov
ror
push
mov
cwtl
call
mov
and
sbb
outsl
sub
nop
xor
iret
scas
mov
xor
pop
pop
inc
sarl
xor
out
mov
outsb
adc
movsb
mov
cltd
and
nop
sahf
rolb
push
push
xchg
iret
jb
fcomi
jno
mov
dec
and
dec
sbb
ds
sti
fmul
inc
jbe
insl
mov
cmp
xchg
fidivl
mov
adc
clc
lcall
push
sub
cli
push
push
pop
or
popf
mov
pop
dec
cltd
in
sub
inc
xchg
repnz
enter
testb
add
pop
cld
cmp
stos
into
xor
sti
and
or
ljmp
pop
mov
sub
cmpsb
sbb
inc
inc
sti
sub
popf
ret
cld
jo
jne
mov
mov
out
pusha
push
mov
lea
mov
pop
pusha
pushl
pusha
pushl
ret
push
cmp
add
pushf
pushl
movb
clc
test
jmp
adc
int3
push
xor
in
inc
xor
pusha
cs
int3
xchg
add
push
or
or
popf
outsl
rcrb
mov
stc
xor
lret
pop
shrl
adc
push
adcb
loopne
fimull
xorl
mov
push
dec
lods
dec
js
ss
lock
inc
and
btr
adc
mov
hlt
icebp
sbb
hlt
add
leave
dec
lods
mov
int
jg
mov
push
call
test
sub
in
js
test
push
sub
cltd
cmp
out
push
rorb
or
pop
jg
ljmp
mov
es
pushf
or
xor
mov
into
dec
mov
xchg
idivl
bound
pop
orb
cmp
enter
pop
xchg
int
inc
mov
cmp
in
in
mov
adc
push
mov
sub
dec
jge
into
pop
cmp
inc
cmc
push
push
incb
jl
pusha
ret
gs
and
outsl
aaa
cli
pop
sub
adc
dec
add
mulb
adc
inc
and
aam
jle
pushf
pusha
lea
jmp
cmp
fsub
aam
and
cmp
and
mov
lret
das
clc
cwtl
mov
sbb
insl
daa
nop
mov
sbb
popa
paddusb
ds
lea
push
dec
lds
sbb
mov
into
cmp
ret
test
mov
or
test
inc
out
sbb
out
sbb
mov
lret
popa
pusha
push
jno
aam
add
in
ja
jno
sbb
add
pminub
gs
test
imul
nop
push
pop
jle
jne
imulb
push
push
test
cmpsl
or
push
push
inc
cs
add
cmp
ror
sub
int
aam
lret
cmp
cmpsb
cmpsl
mov
cmpsb
xor
xor
mov
sbb
movsl
mov
inc
testl
or
mov
pop
jb
push
sbb
out
or
mull
mov
xor
fst
decl
xchg
dec
xlat
inc
fisubl
sub
les
push
add
aam
in
enter
fs
jecxz
push
in
jns
nop
lahf
dec
push
cmp
inc
lock
mov
sbb
adc
inc
shrl
sbb
call
dec
aad
fsubr
and
or
jmp
xor
sub
mov
ljmp
push
outsb
out
inc
inc
mov
nop
push
lock
scas
insl
lcall
xchg
lret
rolb
xchg
or
jb
dec
nop
mov
inc
cmp
adc
int3
inc
jne
mov
js
test
jge
pop
in
push
stos
pop
jge
jne
xor
xchg
fsubl
or
push
jecxz
mov
and
leave
xchg
push
sbbl
lret
sub
sbb
imul
scas
fcmovnbe
xchg
insb
adc
dec
mov
aad
adc
push
cmpsb
lahf
inc
add
loope
cmp
xchg
pushl
sti
xor
data16
jbe
and
daa
je
sbbl
js
sub
dec
xor
pop
lcall
int
mov
ds
add
lods
mov
mov
push
scas
movsl
jo
pop
mov
jnp
addr16
push
mov
push
popa
subl
sub
or
add
not
push
pop
cmc
jg
xchg
fildl
insl
and
ljmp
sti
sti
addr16
pusha
stc
aam
divb
test
loopne
ret
push
dec
dec
adcb
add
pop
test
cmp
push
or
rolb
stos
sbb
lock
movsb
mov
inc
arpl
mov
scas
sbb
cmpsb
xor
aam
mov
nop
push
jmp
repz
cmp
in
leave
subb
add
push
outsl
pusha
push
pop
ret
push
jmp
jl
fwait
shrl
jg
jmp
inc
fistpll
mov
sbb
in
mov
das
imul
mov
pop
pop
xchg
push
lret
push
dec
dec
mov
adc
mov
and
mov
in
sbbl
push
test
dec
mov
int
inc
xchg
lahf
fadd
ja
xor
pop
adc
dec
dec
das
jge
push
jl
mov
or
loope
xlat
addb
mov
mov
mov
jp
std
jge
ljmp
outsb
into
xchg
call
negb
test
pop
cmp
pop
dec
daa
into
icebp
mov
inc
mov
rcr
dec
int3
mov
aam
mov
mov
iret
cmc
mov
sti
adc
into
hlt
jb
repz
pop
jae
push
jbe
push
and
mov
decl
jmp
jbe
xor
aas
add
and
shl
out
enter
jnp
les
ds
rcrb
jge
nop
sti
data16
lods
hlt
nop
sub
inc
xor
mov
addr16
xchg
xchg
adc
popl
arpl
data16
repnz
js
sbb
fmull
stos
push
and
xchg
ficompl
out
mov
mov
xor
add
xchg
int
add
pusha
cmpsb
fadds
and
movb
push
xchg
and
int
xlat
test
arpl
lods
leave
jl
mov
mov
repz
jg
mov
dec
pusha
inc
lods
fildll
or
dec
jp
arpl
mov
sbb
xchg
cmp
and
push
std
jns
cs
sti
rorl
sub
ds
cltd
xchg
adc
sub
jle
cmp
push
lret
mov
jp
fwait
sbb
add
mov
ret
adc
pop
in
pop
add
leave
push
sbb
jp
outsl
dec
in
dec
push
add
mov
shlb
xchg
jp
jmp
mov
xchg
orb
sub
fmul
cmp
ret
into
and
int
lret
into
dec
aad
mov
fsubrl
test
mov
xor
pop
adc
mov
into
inc
lret
mov
decb
pop
adc
cmp
filds
imul
cmpsl
mov
xlat
push
out
xchg
aaa
inc
xchg
and
sub
imulb
orb
xchg
std
in
ds
sub
scas
outsl
adc
mov
je
leave
and
add
int
neg
dec
rorl
ret
dec
cmp
mov
out
bound
cmp
push
cmp
aaa
or
push
xchg
add
insb
jnp
test
add
icebp
add
pop
jle
outsb
cwtl
lret
sahf
xor
inc
push
and
pop
in
imul
mul
mov
gs
or
sahf
sarl
add
stos
push
mov
or
rcll
and
ja
pop
aas
sub
andb
mov
mov
add
jg
repz
mov
adc
xchg
fnstenv
xor
out
fisubl
cmp
lcall
pop
ljmp
push
adc
in
ror
sub
insl
scas
mov
xchg
pop
adc
mov
jb
into
je
dec
xchg
push
dec
mov
arpl
pop
jecxz
in
ret
not
pop
test
adc
mov
int
add
pushf
movb
pusha
lea
jmp
cmp
mov
vblendmpd
adc
sub
jae
scas
or
xchg
hlt
test
js
xchg
push
lock
loopne
adc
inc
fnstenv
out
jge
fcoml
push
push
jno
clc
push
out
xchg
xchg
inc
aam
into
divl
ret
add
xchg
es
sbb
out
jge
sub
xor
adc
filds
sub
or
shrb
sbb
pop
sbb
xorl
fwait
popa
stc
xor
cltd
mov
int
or
in
in
mull
rcll
or
jmp
pusha
and
mov
pushl
test
push
aad
nop
cmpb
popf
adc
scas
cpuid
adc
lcall
pop
cmc
jns
add
add
xlat
pop
adc
in
ss
loop
shrb
lcall
jmp
cmpsl
mov
das
stos
mov
aam
and
pop
loopne
pop
loope
test
push
xchg
stc
cmp
jl
mov
add
ds
fcmovbe
movsl
dec
mov
mov
in
inc
dec
mov
inc
movsb
sub
and
imul
cs
inc
pop
adc
pop
pop
pushf
aam
jno
lcall
cld
lods
push
xchg
dec
inc
icebp
mov
mov
inc
sbb
mov
mov
ds
jl
test
dec
mov
push
mulb
shlb
mov
xor
repnz
dec
push
pusha
push
push
mov
movsl
ror
mov
jns
movsl
pandn
movsb
dec
or
icebp
jne
in
jae
adc
push
bound
inc
sti
inc
or
mov
jmp
add
xchg
jbe
insl
xchg
jbe
mov
mov
dec
test
xor
sbb
lea
xchg
pop
xchg
in
push
test
fiadds
outsl
cmovge
add
xor
adc
scas
loopne
sub
fwait
lods
outsb
adc
add
lret
sub
mov
and
stc
push
adc
pop
aaa
std
daa
cmc
add
xor
adc
shrb
xor
cwtl
xor
loope
inc
dec
or
or
int
imul
ret
mov
push
js
movsl
mov
negb
imul
dec
das
sbb
leave
mov
bound
mov
loope
inc
jl
sbb
call
call
xchg
push
dec
and
jne
fstps
push
icebp
inc
lods
lods
arpl
sbb
jnp
sbbb
mov
adc
clc
cmpsl
lods
cmp
jle
inc
xchg
add
push
mulb
lret
cli
adc
test
cs
dec
inc
sbb
jo
lahf
inc
insl
inc
xlat
pushf
mov
loop
dec
js
xor
mov
daa
mov
insb
xchg
cs
imul
inc
mov
mov
std
jns
in
test
fcompl
iret
enter
movsb
jae
dec
pop
sub
push
mov
mov
ret
test
in
es
cmp
pop
mov
push
aas
mov
in
outsl
add
cmp
cmpsb
cwtl
rep
aad
test
xchg
pop
pop
mov
xchg
sbb
cwtl
lcall
fwait
and
movb
divl
in
std
push
out
push
and
stos
in
push
mov
xchg
jb
or
mov
cli
fistpl
dec
out
clc
insb
mov
xchg
jo
or
fdiv
daa
cmpsl
adc
inc
int
push
pop
dec
cs
adcl
cmp
in
xchg
jg
push
or
mov
movl
inc
mov
push
clc
rol
jmp
inc
setb
pushf
jmp
cmpsl
xchg
out
aaa
sub
push
mov
lods
jg
mov
sbb
les
scas
hlt
and
mov
inc
scas
push
add
pushf
push
mov
repz
inc
mov
adc
jp
mov
sub
cmp
fwait
adc
popa
mov
xor
inc
ret
sub
arpl
cmpsl
add
xchg
adc
out
jl
inc
call
sub
cli
outsb
fistl
add
adc
stos
lcall
ljmp
xor
add
cmp
and
mov
sub
jnp
dec
and
out
mov
pop
movb
and
bswap
pushf
push
add
pop
call
add
aas
decl
je
inc
jo
les
and
dec
jmp
xor
and
dec
add
pusha
jne
inc
xor
or
push
call
rorb
mov
cltd
xor
test
jno
xor
adc
insl
sbb
ja
add
push
jne
pushf
call
mov
mov
pop
mov
inc
call
call
ds
outsl
adc
dec
adc
and
add
push
pusha
test
jmp
add
sub
mov
xchg
mov
std
sbb
mov
or
notl
push
lea
mov
xchg
imul
adc
sbbl
lds
pop
push
xor
dec
faddp
lret
bsf
mov
or
inc
shl
loopne
xor
ljmp
push
jmp
cmp
loopne
testl
or
pop
test
leave
dec
fdivs
or
pop
je
mov
or
add
sbb
or
and
pop
dec
push
les
cmp
jmp
inc
adc
inc
add
rclb
and
sub
sub
add
jnp
push
test
hlt
push
sbb
pop
and
push
mov
sub
mov
xchg
xlat
or
ficoml
xchg
sub
sub
dec
push
jns
mov
mov
mov
cld
call
mov
iret
addb
idivl
push
into
push
jmp
int
push
xchg
test
mov
mov
into
daa
or
scas
fstps
push
out
adc
adc
sbb
jge
aad
mov
movsl
mov
mov
jge
daa
cltd
xor
push
ljmp
and
pop
or
out
add
jbe
or
inc
inc
xor
or
js
xchg
sub
push
inc
jmp
in
and
rorl
pop
mov
jns
lds
mov
pushf
mov
cmp
or
aaa
xchg
fcmovu
adc
movsb
lret
push
popa
adc
cmp
push
gs
cltd
xor
push
sub
adc
jno
and
sub
xor
imul
jnp
adc
cmp
fsubs
or
mov
inc
in
sbb
loope
cld
pop
cli
and
pushf
inc
das
or
jmp
adc
and
xorl
dec
inc
andl
pop
mov
xor
jne
aaa
outsb
orps
mov
sub
jge
nop
fdivrs
sub
sub
in
clc
mov
mov
xchg
jmp
mov
mov
aas
push
data16
inc
fldcw
sbb
pusha
xchg
dec
dec
push
fs
insl
pushf
hlt
dec
sbb
xlat
leave
out
lds
pushf
inc
cmp
out
mov
adc
adc
mov
cmc
xor
lock
lods
xchg
inc
nop
in
push
in
clc
stc
call
sbbl
movsb
inc
mov
cmp
pop
bt
stc
adc
call
ret
mov
mov
loopne
inc
or
iret
repz
testb
repnz
inc
mov
in
push
push
xor
pop
aaa
sbb
push
popa
mov
sbbb
cs
pop
es
movsl
test
movsb
ljmp
dec
divl
xchg
add
jmp
push
pop
lret
sub
pop
pop
mov
pop
push
arpl
xchg
ret
add
insb
addr16
outsl
clc
or
ret
sbb
add
adc
shrb
mov
lret
sbb
xor
fs
je
aaa
movsb
or
mov
mov
sbb
jno
adc
adc
push
popf
inc
sbb
inc
or
dec
ds
pop
dec
pop
hlt
sub
jb
and
sub
mov
sub
inc
xor
and
cwtl
bound
pop
inc
dec
jnp
cmpl
inc
sbb
push
pop
inc
addb
divb
or
imul
and
ss
addl
rolb
dec
ljmp
enter
ljmp
inc
fcoml
jg
and
test
or
pushf
fidivrl
xor
andb
or
pop
rorb
xorb
and
push
mov
stos
sub
add
dec
lods
adc
hlt
je
test
xor
arpl
dec
lcall
lcall
mov
mov
lret
adc
cwtl
lods
mov
adc
movsb
add
and
push
insb
adcb
cltd
mov
and
and
adc
test
push
les
add
movsb
nop
or
sub
sub
fdivs
enter
lcall
insb
mov
add
or
pop
jl
mov
stos
mov
and
and
enter
cmp
fs
inc
in
cltd
andb
sbb
dec
or
sub
adc
in
mov
nop
or
inc
adcb
shrb
mov
xchg
xor
and
dec
jl
mov
xor
adc
jnp
addb
je
lods
cwtl
inc
das
inc
fs
mov
dec
xor
xorb
add
and
fimull
jnp
xor
and
rcrb
popw
mov
push
pop
inc
add
call
mov
mov
adc
cs
cs
push
jle
add
jmp
call
shlb
pop
add
push
bound
xchg
movsl
or
xor
adc
lret
mov
jle
lock
pop
and
sbb
fsubs
mov
jae
mul
or
call
mov
ficomps
xchg
ret
fs
mov
and
inc
dec
pushf
xor
repz
mov
cmp
roll
mov
pop
sub
xor
push
sub
dec
sbb
mov
xor
lcall
adc
dec
sbb
adc
fistps
jmp
cmp
or
push
out
mov
xor
cmp
push
test
mov
pop
push
sbb
push
loop
jle
into
cmpl
sqrtps
push
in
add
push
mov
pusha
jmp
rorb
rol
xchg
loope
add
dec
sti
stc
enter
iret
testb
xor
shrl
push
imul
pop
push
push
pusha
shr
imul
insl
or
add
xor
adc
dec
stc
movsl
pop
ret
inc
fcmovnb
mov
les
je
cmpl
push
mov
lds
sahf
roll
cmp
leave
mov
dec
lcall
push
je
and
xor
adc
adc
test
dec
sub
lret
pusha
jl
xlat
and
mov
popa
push
xchg
shl
mov
addl
jne
insl
mov
dec
cmp
loopne
xchg
vmread
rolb
xchg
inc
into
cmpb
push
test
mov
lret
mov
pop
dec
dec
cmp
sbb
jecxz
jno
call
ret
pop
dec
inc
add
mov
xchg
lahf
mov
lods
mov
dec
or
mov
stc
xchg
push
repz
iret
push
adc
push
hlt
inc
sub
and
mov
xor
push
dec
and
push
mov
das
jmp
sub
push
mov
sub
ljmp
push
xor
ja
or
xor
cs
adc
mov
repz
add
inc
adcl
js
push
sbb
pusha
mov
inc
test
push
in
call
and
push
cltd
xchg
adc
movsl
ljmp
mov
adc
sarb
or
jmp
mov
dec
mov
clc
mov
pop
movsl
pusha
dec
xchg
loop
sub
mov
in
push
dec
bound
push
stc
ficomps
nop
dec
push
stc
add
clc
mov
push
pop
cmp
jge
addr16
int
into
add
jbe
cmpsl
xlat
ret
outsb
shr
cmp
mov
mov
clc
or
test
repnz
xor
popf
mov
inc
pushf
call
or
cld
stos
jne
or
sbb
out
call
and
adc
jbe
adc
rcrl
test
mov
jbe
or
mov
xchg
xchg
outsb
sbb
adc
mov
pushf
push
inc
fdivl
lods
adc
daa
iret
xchg
shrl
ds
les
push
call
fadds
mov
fmull
and
aam
add
sub
cwtl
xchg
les
lea
imulb
hlt
decl
andb
enter
mov
xchg
ret
es
sub
dec
pop
inc
add
test
mov
pop
or
fisubl
stos
and
data16
mov
adc
popa
xor
call
std
mov
test
mov
inc
stc
or
mov
shrb
sar
das
jmp
loope
cmp
xor
xchg
out
notb
out
cmp
sbb
ljmp
cmp
rcr
insb
je
mull
mov
es
popf
xchg
inc
dec
call
pop
xor
in
inc
int3
pusha
mov
aaa
test
jp
gs
push
icebp
add
jmp
lahf
dec
add
inc
cld
push
js
or
leave
mov
push
push
mov
sbb
xchg
or
enter
out
outsb
icebp
mov
inc
pop
and
ret
fstl
push
ret
mov
repnz
add
cmc
jb
pop
push
ja
dec
hlt
mov
lds
push
mov
jecxz
or
daa
dec
pushf
sahf
inc
rcr
nop
ss
sbb
sub
sar
push
cmpsb
push
cmpl
in
xchg
adc
movsb
sahf
push
sub
inc
jp
xor
sbb
lock
push
clc
adc
lea
sub
push
pop
and
pusha
jne
rclb
mov
pop
and
dec
cmp
lret
sub
or
pop
push
bound
sub
adc
push
xchg
mov
pop
movsb
xchg
push
leave
inc
jo
test
cmovs
imul
aas
cmp
jnp
scas
xor
pushf
fs
or
enter
imul
sub
push
or
sub
mov
pop
inc
adc
jmp
adc
push
jl
call
adc
das
add
pop
cmp
call
xor
xchg
or
mov
mov
cmp
pop
xchg
add
xchg
out
add
faddp
mov
push
push
es
pusha
push
mov
and
repnz
push
call
btr
shr
cmc
add
aam
shlb
mov
dec
stc
addb
rcrb
mov
push
pusha
mov
cltd
ret
or
cltd
sbbb
orb
pusha
sub
callw
mov
jae
jns
jmp
pop
and
test
jne
add
lds
call
xor
push
cmc
or
and
add
sti
inc
lret
repz
scas
cltd
ljmp
push
call
jb
clc
sub
sti
xor
push
andb
ret
cwtl
ffree
ljmp
test
cli
or
or
jmp
or
pop
in
cmp
mov
adc
and
inc
mov
mov
icebp
xor
loop
and
and
cwtl
out
inc
or
into
mov
push
xchg
adc
mov
pop
aas
test
mov
dec
and
mov
jmp
test
and
lea
adc
xchg
sub
fnstsw
and
inc
add
jb
cwtl
rcr
cmp
mov
jmp
stos
and
inc
mov
adc
push
lcall
or
and
gs
mov
push
das
fldl
ja
dec
jne
push
push
scas
test
clc
cmp
std
dec
mov
test
lods
lret
push
jne
mov
dec
dec
pop
sub
mov
jo
xor
out
mov
mov
jno
roll
pop
loope
arpl
fsubr
aaa
aad
push
ret
fsubrp
dec
or
pop
out
insb
into
pop
call
inc
imul
sbb
repz
lea
sbb
out
cmp
xchg
int3
sarl
in
sub
mov
adc
inc
and
rcll
adc
add
ret
call
xor
aad
sub
sarb
and
inc
add
push
dec
adc
in
pop
dec
icebp
test
sbb
pop
fistl
dec
add
inc
orl
lods
pop
push
jg
jg
fs
cmc
mov
jmp
orb
test
pusha
lret
xor
add
mov
clc
test
cs
mov
jecxz
dec
or
fldl
xorb
inc
imul
adc
shr
xchg
inc
push
mov
pop
movb
lahf
push
dec
nop
jmp
push
jno
mov
das
and
pop
call
mov
int
bnd
or
idivb
push
ficomps
mov
mov
orb
push
pusha
mov
pop
js
add
daa
sub
enter
jle
mov
cmp
imul
rcrb
and
orl
ret
jle
adc
ret
add
flds
pushf
cmp
inc
dec
imul
push
xchg
dec
adc
sbb
in
faddl
in
jae
inc
inc
dec
sub
enter
push
lea
outsb
push
call
lock
sarl
addr16
push
push
adc
adc
mov
test
push
vpsrld
fiaddl
sub
in
setbe
or
cs
ret
mov
cmpsl
adc
rclb
xorl
push
stc
cli
jmp
sub
inc
adc
test
jne
xor
fdivrs
xchg
jo
xchg
pop
aas
adc
push
scas
sbb
testb
outsl
orb
mov
stc
rolb
rcrb
and
sbbb
and
nop
adc
dec
lahf
sbb
push
pop
xchg
gs
jne
loop
cmpsl
mov
pushf
jae
nop
mov
or
lahf
mov
add
push
xor
inc
aam
int3
jae
data16
cwtl
push
cli
std
iret
fst
cmpl
cmpsb
andb
notl
or
add
lahf
bswap
lea
push
int3
add
subb
jmp
and
lock
add
cmp
daa
lea
cwtl
sti
popa
dec
ds
hlt
inc
and
aam
pop
mov
cld
jmp
adc
adcl
and
xor
cmc
xor
leave
lea
mov
xchg
sbb
and
cmpsl
mov
fiadds
mov
call
push
arpl
notb
pop
add
outsb
mov
cmp
or
adc
cmp
out
xor
cs
push
xor
adc
pushf
shl
xor
cmc
cli
lret
dec
sub
mov
xchg
lds
repnz
xchg
in
mov
sarb
aad
and
xchg
push
adc
ret
test
pop
mov
fsubl
pop
fisttpl
xor
push
dec
adc
inc
test
inc
subb
dec
mov
inc
mov
jo
pop
lcall
mov
fisttpl
add
stc
bt
sbb
xchg
mov
jmp
movsb
int3
sbb
mov
inc
mov
cmc
mov
cltd
dec
add
popa
cmp
not
pusha
xchg
mov
sub
outsb
and
cmp
and
das
sbbl
sub
adc
pushf
aas
mov
xchg
mov
or
or
arpl
jmp
addps
fists
add
test
repnz
rorb
inc
inc
xchg
clc
enter
loope
adc
fistl
xor
sbb
das
pop
mov
rclb
pushf
adc
cmp
inc
imul
lret
push
imul
mov
int
adc
push
ret
xor
enter
pusha
enter
jmp
sahf
cmpl
mov
int
hlt
and
and
add
imul
cmp
add
xchg
cmp
pextrw
push
mov
jnp
bnd
sbb
mov
fists
mov
cmp
jl
data16
stos
mov
sub
jmp
rorb
call
inc
scas
mov
jmp
jo
sub
icebp
test
jle
add
mov
lahf
lea
cwtl
mov
and
dec
clc
or
mov
dec
add
scas
mov
imul
orl
arpl
adc
mov
popa
mov
cmp
mov
rorb
lods
xor
push
or
dec
add
dec
xchg
dec
decl
scas
mov
iret
xor
out
in
mov
or
insl
mov
add
jmp
sbb
cmpsb
jae
pop
or
icebp
or
lock
leave
dec
adc
cwtl
xchg
xor
or
les
pop
add
cmc
out
adc
cmp
enter
dec
or
sbb
inc
mov
push
aad
adc
mov
and
inc
sub
xchg
sub
shrl
test
lock
call
loop
push
xchg
test
push
sub
push
and
enter
ret
mov
push
enter
and
ret
scas
test
es
cwtl
loop
mov
add
cmp
mov
loopne
add
and
cmp
loopne
push
sahf
test
call
pop
jne
push
add
testl
imul
sub
push
movsl
sahf
or
movsb
mov
pushf
mov
imul
pop
or
push
jle
mov
push
rorl
pop
sbb
add
cmp
sbb
mov
stos
stc
add
cld
lods
fwait
test
xorl
dec
mov
or
jl
push
pusha
adc
jle
and
lods
fisttpll
mov
xor
mov
or
xor
idiv
jo
pusha
xchg
jp
out
shlb
ss
adc
cmpsb
adc
or
or
mov
outsl
ret
adc
xlat
and
dec
sub
push
jno
xchg
xchg
sbb
pop
pop
xchg
cli
fisttpll
or
call
mov
cltd
inc
push
sub
rcll
push
int3
inc
sub
jmp
test
jns
call
jno
sbb
adc
xchg
mov
shl
movb
cld
dec
test
fidivrs
sub
ret
aas
dec
or
push
or
test
cmp
sbb
rorb
xchg
mov
mov
outsb
or
add
call
setbe
mov
pusha
and
and
nop
sbb
jmp
add
xchg
je
das
add
leave
ret
mov
call
lea
mov
push
imul
or
imul
jmp
xchg
push
adc
mov
rorb
insb
and
and
xor
mov
add
cwtl
dec
pop
mov
shrl
jecxz
aam
mov
inc
lret
pushf
ds
pop
mov
xchg
and
cmp
cmc
push
push
or
xchg
mov
arpl
dec
insl
push
add
pop
adc
aas
mov
sbb
call
inc
mov
push
or
pusha
push
les
mov
lds
or
mov
dec
pop
addr16
outsl
pop
inc
gs
pop
pusha
adc
enter
add
popa
mov
sahf
xchg
shll
xorl
jmp
adcl
leave
les
lcall
adc
push
jmp
mov
test
movsb
ds
xor
aas
pop
imul
arpl
mov
lahf
mov
test
out
mov
dec
loopne
add
clc
push
pop
iret
dec
and
inc
iret
ljmp
addb
ds
aam
rcrl
call
pop
jmp
cmpl
add
sub
cmp
rcr
aam
call
xor
cmc
daa
popf
sbb
sub
sub
adc
and
xchg
xor
cmpsl
pop
sub
inc
ret
xor
sub
lods
inc
sahf
out
les
mov
int3
push
fld
mov
pop
xor
push
inc
outsb
sub
aad
cwtl
outsb
sub
cltd
mov
notl
mov
push
repz
fstl
push
loopne
and
dec
push
mov
dec
xor
roll
pop
jnp
jne
das
adc
jmp
inc
cmp
fimuls
pushf
clc
aaa
fisttpl
std
mov
mov
add
jbe
inc
pushf
adc
ret
pop
or
or
fldl2t
je
cs
fisttps
adc
and
xor
adc
rcrl
pop
and
sbb
mov
mov
add
mov
lahf
imul
or
push
and
dec
int3
or
cmp
fldcw
imul
mov
shlb
fwait
jp
mov
push
xchg
ret
inc
and
xchg
xor
push
les
xchg
sarl
dec
sbb
in
push
lret
dec
inc
mov
inc
stos
jb
scas
cli
inc
pusha
sub
lds
ss
inc
fcoms
xchg
and
mov
xchg
jo
in
pop
dec
or
rolb
push
mov
sbb
xchg
fwait
pop
or
inc
add
mov
xlat
xchg
dec
pop
adc
ret
pop
mov
adc
push
enter
addr16
enter
sar
adc
shr
mov
stc
adc
nop
cmp
pop
mov
hlt
les
adc
dec
insb
pushf
jmp
mov
lock
mov
mov
inc
fbstp
dec
push
push
push
cmp
mov
push
popa
ss
dec
mov
jae
cmp
jbe
mov
sub
inc
push
ficoms
pop
mov
scas
cs
or
or
cmc
cmp
sub
stos
into
push
inc
mov
inc
jns
mov
lret
sbb
cwtl
out
adc
adc
sbb
xchg
jecxz
loope
or
pop
sbb
call
pop
nop
and
jmp
sub
rcr
and
inc
or
jb
xorb
adc
xor
repnz
mov
daa
dec
mov
fsub
or
aad
inc
add
call
sti
mov
call
bound
je
inc
pop
sbb
test
sub
pushf
sub
push
lock
sahf
test
addl
cltd
mov
fwait
pusha
rolb
pop
repnz
xor
mov
gs
add
push
movb
lahf
int
sub
sub
jle
mov
or
jecxz
inc
sbb
add
addb
cmp
js
xchg
mov
aad
mov
mov
sub
xlat
pop
test
test
cmp
cmp
movsl
sti
les
ficomps
lret
movsl
jns
repz
pop
sub
mov
nop
pusha
ret
xchg
jge
testb
jmp
loopne
mov
mov
or
popa
xor
push
sarb
in
mov
pusha
int3
icebp
bound
or
or
jmp
loopne
push
pusha
jnp
call
mov
xchg
jnp
add
sub
adc
sub
call
repnz
pop
bound
call
aaa
cwtl
shrl
dec
add
sub
adcl
push
inc
es
roll
insb
pop
or
dec
pop
and
mov
icebp
jmp
sbb
cwtl
mov
xchg
test
test
insb
imul
mov
sar
xchg
call
jmp
pop
mov
mov
or
in
lock
adc
call
mov
cmpsl
daa
dec
inc
cmpsb
pop
push
jo
jne
aam
mov
and
mov
or
inc
test
push
mov
test
orb
iret
push
mov
jmp
mov
mov
imul
int
push
xor
call
inc
repnz
sbb
lods
lahf
mov
cmp
popa
hlt
add
das
push
push
xchg
sbb
or
pop
mov
add
mov
adc
faddl
mov
mov
movsl
jne
out
push
pop
fidivrl
loopne
dec
push
in
lea
out
mov
addl
jmp
dec
or
dec
mov
gs
lret
leave
inc
mov
mov
dec
or
or
lcall
enter
call
outsl
roll
into
clc
cmc
test
flds
pop
push
mov
add
neg
clc
or
lock
pop
aas
xor
leave
mov
pop
popa
push
xor
out
cmp
pop
movsb
outsl
or
push
or
dec
add
push
orl
fists
pop
not
mov
push
data16
js
add
push
fdivp
setae
cmp
mov
repz
loop
lods
mov
orb
and
push
sar
sub
and
test
and
and
data16
mov
addb
dec
pusha
push
dec
dec
pop
inc
lret
nop
hlt
push
loope
bound
mov
sarb
pop
adc
add
jp
call
cmp
sub
mov
pop
push
popf
mov
push
les
pop
lret
ss
mov
clc
andl
xorb
pusha
push
loop
push
shr
xchg
cli
ret
cmpsl
les
in
loope
add
call
inc
sub
pop
xchg
push
into
add
mov
mov
mov
jmp
and
push
mov
lds
jbe
cwtl
mov
mov
dec
mov
push
leave
repnz
test
sbb
xchg
and
xchg
aam
mov
cmp
inc
leave
leave
sbb
xor
add
push
cmp
in
push
and
and
imul
je
jmp
notb
xor
lahf
incb
addb
or
mov
movsb
mov
mov
mov
or
lret
adc
push
jg
mov
ds
push
test
cmp
add
sub
jmp
mov
cwtl
mov
add
shlb
inc
push
ja
push
shr
mov
add
loop
add
lahf
mov
jp
mulb
sub
aaa
ret
sahf
xlat
inc
sub
or
ljmp
lret
mov
cltd
xchg
jp
or
addl
movsl
sbbl
cmp
test
add
cwtl
cli
mov
xchg
xchg
movsl
jecxz
cmc
sbb
pusha
cld
push
cmp
rorl
jp
gs
xor
nop
or
jge
lods
mov
mov
ja
inc
jb
push
test
xlat
push
testl
loope
stc
mov
push
pusha
jecxz
push
out
nop
adc
notb
xchg
js
out
cmp
mov
call
jne
das
add
lcall
mov
in
and
into
and
mov
frstor
mov
push
push
call
adc
sub
insb
sbb
in
bound
inc
add
fidivrl
call
pusha
je
fildl
jmp
cmp
bound
xor
mov
jno
subb
bound
cmp
add
cwtl
jmp
adc
xor
and
jo
pushf
push
lret
js
sub
pop
push
add
cmp
test
js
ss
xchg
xchg
sub
or
pop
out
arpl
pop
repz
cltd
fsubs
cmp
popa
add
test
or
dec
xlat
xor
cmp
lret
push
push
add
push
shll
mov
dec
enter
xchg
inc
add
inc
pusha
out
dec
ret
gs
in
pop
and
push
push
aas
mov
test
int
dec
push
leave
add
nop
mov
call
add
mov
arpl
adc
lea
mov
ja
adc
inc
and
xor
jg
dec
xchg
iret
pusha
inc
mov
pusha
or
mov
or
push
nop
call
int
daa
push
ret
sti
loopne
dec
sbb
sahf
add
fiaddl
bound
cmp
call
mov
rol
adc
lds
stos
outsb
mov
in
cmpsl
lods
push
push
dec
push
adc
adc
ret
not
popa
rolw
fsubrl
sarl
fcoml
cltd
push
xchg
cmp
and
sbb
in
xor
pop
sbb
pushf
push
xchg
pop
enter
xor
pop
out
es
in
dec
shrl
test
xchg
jle
test
mov
pop
pop
and
and
mov
pop
pushf
leave
dec
shlb
mov
or
mov
clc
and
push
cmp
add
ret
add
loopne
sub
inc
andl
adc
not
push
inc
adc
outsl
adc
push
pop
jae
in
popa
daa
xlat
std
fmul
jmp
test
sub
addb
inc
adc
cltd
movsb
lds
push
icebp
cmpb
nop
jmp
or
adc
xor
xchg
or
loop
daa
pusha
cmp
push
cmp
inc
ret
pop
xorl
mov
cmpb
int3
or
imul
xor
in
push
sahf
int3
push
popa
fs
out
adc
push
inc
sub
pop
popf
mov
or
dec
int3
decl
and
outsb
aam
pop
inc
mov
call
and
cmc
cmp
ljmp
cmp
mov
in
aam
xchg
outsl
push
mov
mov
and
loop
pop
int3
or
rolb
lds
pop
leave
stos
cli
dec
lock
jnp
pushf
dec
mov
cld
pop
mov
xor
cmp
test
jne
xchg
cwtl
push
rolb
mov
cmovne
push
or
mov
inc
jns
jno
adc
sub
lahf
pushf
fimull
popa
push
xor
xchg
into
xlat
pop
jae
dec
test
sub
cmp
movsb
add
in
push
pop
lret
mov
subl
pop
pop
lods
mov
loopne
call
inc
cs
xchg
test
std
adc
fisubrl
or
inc
fsubrp
mov
xchg
adc
jne
push
add
inc
out
sub
aaa
mov
mov
sar
or
dec
mov
sbb
push
pop
add
mov
add
icebp
call
or
and
icebp
mov
lahf
pusha
xchg
pusha
mov
cli
mov
call
pop
cli
mov
outsb
int3
in
sub
daa
push
test
xchg
fwait
jno
pop
aaa
jmp
adc
jne
xor
aam
pop
adc
addl
push
mov
fs
xor
push
jmp
btr
mov
and
daa
popa
adc
xor
push
jnp
sbb
add
mov
adc
fsts
sbb
xor
push
or
xchg
inc
add
icebp
sti
xor
test
lret
cmp
mov
fdivrs
push
stos
dec
push
jp
jmp
pop
fwait
cmc
scas
sbb
call
xchg
adc
fwait
or
jmp
add
call
jp
dec
sarb
rcrb
cmp
add
sbb
pushf
adc
cmp
sub
add
jl
jmp
xchg
push
les
dec
jle
xor
lcall
aam
xchg
sbb
imul
or
dec
test
mov
dec
mov
sub
cmp
mov
xchg
sbb
add
pop
lcall
inc
push
stos
push
stc
and
loopne
sub
out
adc
rcrl
loopne
popf
xchg
sbb
jle
cmpb
lods
pop
lods
adc
repnz
rcrb
jg
push
out
in
inc
ljmp
rol
xchg
cmp
sti
leave
nop
mov
cltd
push
cmp
jmp
test
xor
cld
add
add
jns
dec
push
mov
and
adc
adc
outsb
shr
pushl
cmp
push
pop
cmp
xchg
in
cwtl
repnz
mov
pushf
aad
mov
inc
fwait
add
mov
sbb
mov
les
cmc
mov
adc
mov
jp
flds
nop
pop
or
mov
les
lods
dec
add
fs
xchg
and
inc
mov
je
add
mov
popa
out
sub
sub
daa
push
cli
xchg
xchg
inc
mov
pop
nop
xor
mov
jmp
movsl
or
jge
addr16
iret
cmp
sub
imul
push
arpl
sbb
mov
incl
cli
dec
push
jmp
daa
mov
idivb
sub
lods
repnz
pop
add
in
mov
fdivrl
rorl
call
fsubrs
xorl
int3
cli
leave
add
jmp
lea
push
inc
sbb
mov
cld
mov
and
mov
pop
mov
mov
pop
mov
repnz
jbe
lahf
xor
jmp
mov
dec
push
jb
add
add
unpckhps
shl
nop
mov
sar
mov
fwait
lret
add
call
scas
dec
ficomps
mov
adcb
cmpsb
cmpsb
mov
pop
cli
ljmp
xor
add
mov
jae
stc
test
jmp
push
in
or
push
xchg
imul
mov
jmp
cmpsl
pop
mov
add
mov
pop
pop
adc
sbb
mov
push
fs
push
inc
cmpsl
inc
inc
fsubr
inc
mov
xor
sbb
mov
adc
pop
push
nop
mov
push
call
jp
push
mov
pop
pusha
add
xchg
pushf
mov
xor
das
xchg
lock
add
loopne
sbbl
sbb
push
or
jmp
pop
ljmp
dec
jns
sub
les
call
add
push
enter
arpl
icebp
cmp
imul
mov
xchg
clc
loope
cmp
bound
xchg
scas
dec
icebp
enter
pop
movsl
pusha
loope
fldenv
mov
lcall
push
and
mov
mov
ret
rcll
adcb
push
fistps
pusha
sub
cmp
cmc
inc
shlb
nop
pusha
rcrb
cs
adc
jae
push
xchg
outsb
add
jmp
cld
lock
sub
popa
inc
mov
adc
call
dec
pop
xchg
call
scas
jmp
xor
cmp
shl
insl
or
sub
or
cmpb
pop
aaa
push
lcall
mov
dec
pop
ss
out
jl
lods
adc
dec
and
rcrl
insl
cmp
mov
mov
add
push
jne
and
dec
pop
push
mov
bound
movsb
sub
mov
sub
cmp
push
adc
adc
lds
pop
enter
scas
mov
mov
mov
xchg
les
filds
pop
adc
sbb
inc
push
clc
int
pushf
sbb
sub
wrmsr
fdivrl
push
cli
and
sub
repz
fsubrs
in
jo
daa
jl
pop
lret
push
sti
jmp
lret
outsl
and
mov
cmp
rorb
mov
jns
xor
je
insb
adc
or
cs
lea
subl
sub
stc
cwtl
xor
pusha
xor
filds
or
cwtl
shlb
add
sbb
movsb
mov
cwtl
sbb
fidivl
cmpsb
loop
pop
les
dec
inc
aad
test
sub
inc
mov
out
in
outsb
rclb
fwait
imul
add
ds
daa
xchg
pop
inc
aaa
pop
inc
sarl
or
cmc
mov
test
call
or
aam
jmp
arpl
cmp
inc
xchg
test
sahf
je
dec
ss
pop
adc
mull
repz
outsb
dec
xchg
and
rorl
fxch
and
pop
sbbb
jo
mov
lods
and
xor
or
xchg
lea
daa
aad
fptan
orb
xlat
cmp
mov
mov
jmp
mov
mov
pop
cmp
mov
or
xlat
daa
notb
lds
out
jmp
cmp
dec
push
outsb
das
loopne
xor
sub
loope
rolb
dec
stc
sbb
mov
data16
add
push
dec
xchg
roll
pop
lahf
fsubrs
mov
sub
outsb
fsubs
mov
movsb
cvtps2pd
add
add
adc
insl
push
pusha
leave
add
mull
dec
int3
add
push
cltd
movsb
xchg
sbb
loopne
cs
addr16
push
out
and
cwtl
movsb
cwtl
jo
pop
or
or
sbb
ret
adc
loope
imul
pop
mov
push
push
mov
imul
into
pushf
push
xchg
jl
iret
cmp
lods
cmpl
mov
push
xchg
nop
in
mov
je
pop
hlt
sbb
sbbb
pushf
mov
xor
mov
sbb
out
daa
push
dec
test
call
js
pop
inc
dec
inc
push
mov
nop
call
clc
add
push
andb
orl
dec
mov
cmc
sub
call
push
xchg
call
testb
dec
hlt
out
and
sbb
push
push
shlb
int
push
orb
mov
leave
sahf
add
mov
fbld
clc
outsl
aam
mov
test
add
leave
loope
outsb
daa
push
sub
outsl
daa
mov
mov
or
pop
sbb
fbstp
dec
push
enter
orl
mov
mov
or
out
aas
test
xor
jle
rorb
es
data16
cs
jl
leave
into
shlb
int
sti
mov
mov
decb
lods
push
iret
les
dec
arpl
mov
movsb
adc
cmp
fdivrl
ja
std
sub
aad
das
outsb
pusha
pop
vpunpcklqdq
xchg
mov
out
iret
ds
fsubrs
pop
mov
inc
mov
sub
rorl
test
mov
xchg
mov
adc
xor
sub
push
leave
imul
dec
clc
sub
push
or
mov
das
repnz
mov
test
mov
xchg
jbe
out
cmp
dec
lods
add
sub
ret
out
sbb
or
rol
xor
psraw
enter
fs
mov
cwtl
mov
mov
cld
xorl
mov
std
jne
add
push
push
pusha
mov
iret
or
cmp
dec
and
stc
decl
cltd
inc
test
shrb
sbb
xchg
cmpsl
xor
outsb
loop
call
mov
popf
dec
add
sahf
cli
inc
push
pop
cmc
mov
arpl
es
jno
outsb
outsl
mov
pusha
imulb
test
cld
dec
pop
mov
xchg
jg
mov
adc
ret
cmp
popf
enter
push
mov
into
xor
xchg
push
dec
out
data16
call
pop
repz
fisubs
push
lds
mov
cmp
shr
rcrl
xchg
scas
or
mov
pop
lahf
les
lcall
adc
inc
es
bound
rcr
call
inc
in
mov
cmc
test
mov
add
in
adc
test
mov
push
adc
mov
enter
popf
mov
add
xor
cmp
cli
dec
push
nop
or
cmp
ljmp
sbb
scas
and
inc
push
push
dec
insb
daa
mov
sub
adc
repnz
push
push
push
call
push
push
pop
xor
outsl
cli
push
and
xchg
jo
push
push
jb
out
push
call
xlat
test
pop
xchg
cwtl
inc
or
nop
insb
pop
mov
jnp
add
jge
inc
inc
movsb
mov
sbb
cmp
stc
cld
daa
mov
sbb
ret
pop
jmp
cwtl
and
popw
push
cwtl
test
dec
repnz
and
jmp
movsl
push
push
or
dec
lock
push
jle
mov
or
mov
add
sbb
push
es
iret
stos
dec
jno
or
mov
repz
popa
push
cli
lret
imul
data16
adcb
repnz
xor
aam
mov
add
cmpsb
pop
repnz
xchg
arpl
xchg
shrb
outsl
push
les
jmp
loop
add
adc
add
addr16
fisubs
shlb
clc
mov
cmc
pushf
popf
mov
sbb
cltd
mov
pop
xchg
push
mov
push
orl
aas
adc
gs
jne
pop
ficomps
jg
aas
notb
es
loopne
mov
cmp
cmp
dec
pop
xchg
adc
daa
adc
sbb
ljmp
cwtl
xchg
or
cmp
jb
add
push
jp
leave
sbb
int
or
lods
add
mov
ljmp
loope
lea
jo
jp
jne
call
lods
cmp
stos
mov
aam
push
jecxz
push
lret
or
xchg
push
and
cwtl
adcl
test
mov
push
mov
fidivl
lods
cmp
xor
mov
add
pushf
mov
adc
jo
dec
out
and
aas
xlat
out
shlb
push
adc
orl
and
inc
pushf
shlb
dec
xorl
xor
sbb
add
mov
pop
pop
movsl
push
lret
fwait
outsl
divl
push
adc
test
xchg
ds
fnstenv
aad
cmc
mov
test
pushf
subb
pop
inc
enter
pusha
cwtl
xchg
icebp
dec
lock
dec
pop
cmp
mov
push
bound
fsubrp
stos
ds
adc
pop
lock
add
xchg
fneni(8087
movsb
in
push
popf
sbb
push
call
jmp
mov
lcall
cmp
gs
dec
andb
testl
pusha
mov
pushf
mov
lods
das
stos
call
mov
jnp
gs
mov
ficoml
push
mov
fadds
mov
addr16
jmp
sub
pop
pushf
cwtl
mov
adc
cmp
mov
mov
lds
fmul
repnz
das
mov
push
lods
xorb
leave
and
jmp
jl
cli
jbe
mov
push
jmp
ret
add
xor
mov
out
fdivl
or
pop
repnz
adc
inc
ljmp
sub
pop
jp
add
push
xchg
mov
movsb
aam
test
icebp
mov
lods
xchg
dec
xchg
mov
nop
sbb
cmp
pusha
std
movsl
js
xchg
mov
stc
jge
lods
or
jmp
lahf
outsb
cmp
xor
cli
stc
or
adc
pop
and
lods
add
mov
fstl
inc
lcall
mull
inc
cmpsb
addb
add
ljmp
push
dec
mov
pop
dec
xchg
push
jp
test
arpl
in
xor
cmpl
push
stc
jg
lcall
add
test
aaa
inc
sbb
pop
mov
xor
pop
arpl
mov
inc
xchg
mov
arpl
cwtl
incl
loopne
lods
sbb
or
popa
jp
add
dec
mov
pusha
cwtl
mov
push
test
cmp
iret
lock
push
movsl
or
pop
sub
nop
jno
or
cwtl
sbb
xor
cmp
jecxz
lods
cmp
jp
repnz
dec
or
add
sbb
mov
add
push
call
insb
pop
test
push
mov
hlt
mov
push
inc
mov
adc
xor
and
repz
dec
fwait
imul
andb
and
jne
add
pusha
stc
push
stos
add
push
insl
js
adc
fwait
ret
push
loope
sbb
pop
xchg
adc
ds
lret
nop
cwtl
xchg
loopne
mov
push
mov
aas
fisttpl
ret
call
aas
fnsave
mov
int
jmp
mov
out
test
cmpsb
jb
fstl
push
xchg
test
xchg
mov
call
rol
stc
add
insl
xor
pop
dec
xchg
sbb
nop
mov
pop
pusha
jmp
sbb
inc
pop
insl
and
lds
enter
and
jecxz
jne
mov
dec
jl
cmpb
adc
sahf
dec
push
mov
daa
add
cmpb
push
inc
sub
repnz
pop
push
add
push
fdivrs
mov
pop
dec
lock
dec
data16
aam
pop
mov
pusha
or
fsubrs
sub
xor
stos
push
jbe
rol
test
dec
sbb
mov
mov
jmp
cli
stc
stc
jbe
test
sub
push
xchg
fnstcw
daa
jne
jnp
or
pop
mov
xor
xchg
in
filds
aaa
btc
sub
imul
cmp
in
cs
or
push
or
mov
pop
fidivs
mov
cmp
nop
test
roll
lea
and
dec
jmp
jg
push
pushf
fmull
push
cwtl
iret
call
mov
ret
sub
sub
sbb
mov
push
dec
push
adcb
lds
enter
jg
mov
sub
jmp
ret
pop
xchg
cmp
inc
iret
frstor
ss
sbb
pop
mov
scas
push
or
punpckhbw
add
push
call
fadds
dec
xchg
lods
or
into
xchg
xchg
movsl
xchg
pop
daa
mov
xchg
add
push
xor
loopne
xchg
push
adc
mov
pop
pushf
sub
mov
inc
fwait
addb
sub
movsb
xlat
push
cmc
add
or
aad
loopne
call
outsb
ds
clc
shl
add
scas
push
or
lahf
and
mov
data16
jmp
pushf
mov
imul
jbe
mov
adc
repz
push
xor
repz
jbe
lret
or
cld
add
xor
mov
lret
jle
cli
and
into
push
add
js
push
mov
enter
fs
addl
xchg
mov
adc
imul
cmp
and
fistl
mov
clc
sti
gs
cltd
stos
push
out
cmpb
pop
dec
pop
pop
pop
clc
inc
mov
or
sub
pop
scas
mov
aaa
ret
xchg
cs
jmp
sbb
adc
gs
adc
and
xor
xchg
jmp
popf
bound
shlb
add
jne
jg
dec
inc
xchg
test
inc
int
xchg
pop
jecxz
pop
push
mov
daa
std
orb
xor
inc
or
jne
insl
adc
call
cmpsl
and
cmp
xchg
inc
gs
lock
pop
les
js
inc
cmp
jg
int3
pop
sub
test
jae
cld
pop
mov
xchg
mov
adc
out
fdivrs
arpl
mov
popf
les
inc
jl
cmp
pop
pop
lock
fmull
imul
xchg
mov
fldt
lods
sub
out
jecxz
pushf
mov
in
push
iret
push
and
subl
adc
cmpsb
lahf
xor
mov
sahf
add
nop
test
enter
les
lret
pushf
sub
sahf
add
cmp
or
pop
xchg
add
in
cltd
or
dec
data16
inc
adc
in
pusha
mov
adc
lods
pop
pop
fldenv
mov
push
dec
cmp
addr16
call
add
add
arpl
dec
ss
and
dec
mov
lods
jne
adc
call
inc
or
adc
push
push
xchg
xor
and
xor
std
dec
xchg
data16
mov
fwait
out
pushf
sar
jnp
pop
mov
int
adc
scas
shlb
jae
daa
subl
xor
mov
fstps
or
sti
cs
pop
mov
test
adcl
shlb
pusha
add
pusha
mov
sub
and
adc
jmp
add
mov
stc
scas
sub
fwait
out
mov
dec
ljmp
lods
xor
adc
enter
mov
push
cmc
xchg
ds
test
outsb
xor
lcall
sti
inc
or
pop
inc
and
rolb
and
pop
lods
adc
int3
sbb
aaa
jl
loop
scas
or
jmp
add
shrb
inc
push
repz
mov
cmp
adc
push
jmp
pop
mov
lea
fidivs
stc
out
cwtl
and
push
sbb
shlb
jl
mov
xor
and
and
nop
jge
loop
movsb
into
and
jae
es
and
or
push
mov
and
push
in
lods
or
cmpsl
cmp
mov
inc
pop
outsl
fists
insl
add
movsl
mov
add
pop
xchg
nop
out
jmp
push
add
in
aad
test
inc
mov
jl
mov
fistl
sub
cmp
addl
cmp
mov
mov
push
shlb
dec
xor
jmp
psubusb
sub
sub
fisubrl
mov
or
adc
leave
or
pop
jb
lcall
dec
dec
inc
je
add
mov
in
sbb
pop
adc
test
mov
xchg
pop
loope
dec
or
iret
push
or
je
aad
adc
mov
shrb
dec
inc
shl
rolb
lret
cmc
nop
mov
mov
cmp
mov
mov
add
call
pop
inc
add
adc
adc
xor
push
mov
push
mov
push
pusha
push
aad
xor
xor
nop
pushf
pop
sub
ret
xchg
mov
or
aam
rol
adc
sahf
test
push
mov
js
mov
inc
dec
push
add
xchg
les
push
fsubr
adc
shlb
jb
pop
xor
push
push
fs
mov
pop
mov
push
pusha
mov
mov
es
or
mov
pusha
add
jmp
subl
lret
push
aad
cmp
push
sbb
cld
lret
sub
rorb
xchg
inc
ret
cwtl
mov
cltd
addb
pop
sub
adc
push
xor
int3
mov
ljmp
out
dec
inc
fmuls
pop
mov
repz
lock
push
fldenv
imul
jns
and
sub
adc
clc
and
push
enter
cmp
fildl
push
lea
push
pushf
fwait
xor
sub
adc
push
mov
repnz
push
jl
mov
dec
ja
dec
pop
add
ja
ret
lret
push
sbb
lcall
pusha
sbb
loopne
and
adc
xlat
sahf
inc
mov
test
fists
push
sub
dec
jnp
mov
xchg
mov
je
add
in
jp
es
fcomps
daa
fcomps
test
fidivrl
and
dec
and
add
jmp
push
rcr
dec
pusha
imul
bnd
or
lods
or
sbb
xchg
aaa
es
xchg
clc
xchg
js
jae
mov
push
push
push
cltd
or
call
xchg
push
and
push
cmp
fs
lea
mov
jmp
mov
fisubs
test
jae
mov
repnz
dec
std
stos
jg
pushf
inc
cmpsl
icebp
cmc
mov
sub
or
dec
fs
jnp
add
pop
vrsqrtss
inc
push
mov
and
adc
aaa
repz
ljmp
clc
test
mov
jp
addr16
in
push
mov
sub
stc
mov
in
xchg
in
sub
pop
push
push
stos
push
mov
jge
mov
or
fnstsw
mov
and
and
pop
add
jl
pop
out
out
adc
inc
dec
sbb
push
in
and
mov
ljmp
dec
scas
jmp
inc
in
inc
dec
pop
cmp
test
addb
inc
mov
mov
mov
cwtl
push
cmp
or
sbb
data16
and
inc
lret
jp
xchg
xchg
adc
shl
add
rorb
lret
mov
add
cmc
movl
or
adc
test
ret
js
or
mov
mov
sarb
xchg
inc
adc
xor
xor
pop
jmp
cmp
cwtl
xor
xchg
lret
cwtl
add
mov
jmp
out
lret
loop
or
inc
add
cmc
hlt
adc
add
or
or
call
or
jb
int
pop
loop
pop
push
adc
mov
push
aas
cld
in
daa
fnstcw
lret
ret
push
xor
adc
dec
imul
pusha
cwtl
pop
rcrl
jmp
and
inc
daa
adc
lods
in
test
push
fstpl
inc
mov
leave
or
rep
jge
xlat
jge
addb
lods
xchg
test
xor
xor
mov
or
loope
jmp
ljmp
mov
mov
ds
cmp
push
call
adc
dec
xor
mov
cmp
cli
call
cmpsl
xchg
jg
xchg
sbb
adc
pop
cmp
aaa
mov
pop
mov
mov
scas
lds
cmp
sbb
call
aam
jmp
jl
push
test
aam
out
mov
repnz
std
adc
cmc
mov
cwtl
fs
ret
push
or
sahf
xor
cmc
cmp
lods
adc
data16
and
or
cwtl
stc
pushf
xchg
adc
cmpsb
push
mov
out
push
in
jbe
add
lds
push
mov
clc
or
out
pop
jmp
pop
add
out
add
cwtl
cmpb
aad
mov
mov
sub
cmc
das
sbb
nop
jbe
cmp
adc
adcb
cmp
psubsw
cmpsl
test
imul
ret
xorl
add
subb
pop
jb
xchg
ficoml
push
xchg
sbb
or
in
pushf
mov
pop
jmp
loope
addr16
add
or
pusha
popf
or
mov
cmp
adc
arpl
xchg
and
and
cmp
fisubrl
xchg
mov
and
movsl
movsl
jl
mov
xlat
sahf
add
pop
fisttpl
sbb
cmp
cmp
push
mov
xor
cmpb
faddl
pop
jbe
mov
loopne
call
frstor
repz
fistps
jl
xchg
xrelease
inc
jnp
lock
fwait
and
out
jp
mov
sahf
mov
mov
adc
jb
lock
dec
push
cmp
andb
test
cmp
jle
nop
pusha
hlt
pop
fwait
sub
jmp
loope
jbe
add
push
fcmovbe
cwtl
add
add
sbbb
call
xor
or
mov
push
adc
in
sahf
fisttpll
ds
bnd
mov
lods
or
cmpsb
lret
and
mov
jp
cmp
repz
add
seto
push
pop
pop
mov
cld
xchg
jp
leave
inc
out
mov
mov
xor
int3
adcb
scas
pushf
lods
enter
jl
out
scas
sub
fsubr
pop
sahf
add
jmp
call
into
adcl
add
add
xor
testb
test
addr16
push
lcall
nop
pop
xor
gs
mov
sub
mov
xor
sbb
push
in
push
dec
cmp
add
sub
cmpsl
fldenv
pop
int3
cmp
sbb
xchg
sbb
aad
ficoml
push
xchg
rcll
ret
repnz
div
pop
add
pop
in
shll
dec
fmull
pop
nop
cmpl
hlt
xchg
mov
or
or
mov
outsl
int
xchg
pop
cmp
in
xor
pop
jae
leave
or
arpl
hlt
or
cli
and
or
popa
push
pop
jbe
sbb
mov
pop
mov
ljmp
jge
push
add
lret
lea
pop
add
xchg
nop
pop
push
mov
mov
xchg
adc
mov
sbbl
inc
cltd
out
repnz
sub
pop
cld
mov
daa
subl
dec
in
xchg
pop
pusha
cwtl
jno
cmp
dec
lea
mov
pop
adc
hlt
cmp
dec
int3
int3
push
add
adc
insb
clc
cmc
xchg
mov
les
xor
sbb
fs
jb
mov
push
dec
cld
xchg
ss
dec
pushf
pop
jl
pop
sbb
leave
mov
jns
mov
mov
mov
mov
adc
mov
sti
push
call
mov
aad
in
jmp
sahf
push
xchg
add
or
lret
call
cmp
xchg
jecxz
sbb
xor
aas
push
mov
add
xchg
xchg
xor
lock
fadd
outsl
mov
lret
mov
sbb
mov
and
ret
leave
scas
sub
inc
sbb
adc
pushf
leave
sub
stos
lahf
loop
enter
cs
adc
push
inc
mov
xor
and
or
mov
and
add
pop
jle
jmp
dec
inc
das
inc
stos
sti
push
add
shrb
or
sbb
adc
jmp
ret
sbb
orl
loope
and
mov
enter
mov
mov
or
lret
pop
iret
add
jno
gs
pop
outsb
cmc
test
sbb
add
es
mov
in
push
subl
sahf
fwait
mov
adc
mov
loop
cmp
dec
mov
add
add
pop
lret
in
xchg
ret
cli
jle
adc
cmp
orl
jge
mov
push
enter
mov
push
sbb
sub
mov
xchg
fs
mov
ss
aam
loope
cmpsl
jne
ljmp
jmp
rolb
mov
lods
ret
scas
shlb
bound
or
pop
inc
dec
mov
dec
and
jle
add
inc
addr16
xchg
mov
push
jge
cwtl
nop
lds
xchg
cmp
stos
in
jg
or
inc
and
xchg
jnp
popf
sbb
mov
adc
jo
adc
xchg
xchg
pop
cmp
mov
mov
aam
inc
sbb
and
aad
call
add
outsb
pop
out
incl
sahf
push
jg
bound
mov
clc
or
push
ja
cli
pop
mov
inc
fdivrl
adc
test
cld
shll
xchg
sub
mov
mov
jecxz
mov
jno
xor
jle
daa
pusha
xchg
inc
sbb
les
sub
pop
sbb
dec
mov
pop
fwait
dec
or
push
out
sbb
icebp
lods
das
fstps
fwait
xor
push
adc
pop
inc
xchg
inc
mov
shll
repz
rorb
ret
pusha
xchg
push
clc
add
iret
fcoml
daa
adc
mov
daa
adc
xchg
pop
div
sbb
xchg
or
cmp
jp
into
mov
cmp
daa
pop
add
xchg
dec
push
outsl
call
dec
mov
mov
xor
or
jmp
and
andb
pop
cmc
add
add
stc
sub
notl
sub
xchg
or
push
or
subl
rcrb
imul
jmp
inc
sbb
mov
rcl
push
mov
pop
mov
dec
xchg
jmp
mov
mov
outsl
sub
cmp
push
jno
inc
or
sbb
lea
test
xchg
adc
push
xchg
insb
and
xor
jle
jle
add
nop
ret
addr16
in
fcom
xor
pop
mov
or
sar
sti
add
xchg
int3
stc
test
mov
ret
mov
inc
jnp
jl
jo
test
mov
jmp
lds
movsb
add
call
inc
sahf
adc
or
notl
inc
and
jle
sbb
fistps
adcb
movsl
jle
test
sub
adc
or
push
mov
ret
mov
push
push
adc
and
lret
outsb
lock
lds
leave
shlb
jae
mov
push
inc
call
dec
jae
jo
adc
sub
mov
mov
xchg
or
or
cmp
inc
test
push
in
mov
les
adcb
mov
daa
add
sarl
mov
push
dec
in
loope
outsl
shlb
leave
jecxz
inc
in
inc
jge
cld
je
inc
das
aas
in
sub
in
add
cmpsb
dec
pop
sub
fimuls
pop
adc
push
xchg
daa
cmpps
icebp
push
and
call
popf
inc
int
fcompl
xor
jecxz
das
adc
cld
lock
push
xor
dec
je
and
mov
cmp
scas
ret
cs
dec
leave
add
jno
dec
mov
pop
andb
pop
xor
xchg
outsb
dec
inc
sub
pop
fs
shr
aaa
jge
push
cmp
dec
xchg
stos
mov
dec
dec
scas
or
sbb
sub
repz
pusha
mov
test
das
fwait
jecxz
loopne
insl
dec
mov
test
stos
sarl
repz
test
pop
dec
sbb
mov
imul
push
mov
xchg
sbb
pop
lahf
xchg
dec
adcb
pop
stos
fldcw
sbb
pop
sbbb
mov
test
call
add
aad
push
xor
lcall
or
jb
xchg
fptan
test
jo
mov
cld
add
int
lret
ja
and
pop
pusha
lods
icebp
or
mov
loop
roll
mov
push
jle
mov
jnp
push
pusha
not
jl
cvtdq2ps
xlat
je
add
rolb
xor
aad
pop
ljmp
sbbb
add
xchg
inc
addr16
push
rol
das
mov
adc
nop
adc
gs
mov
mov
cld
sbb
fdivs
inc
push
xchg
add
arpl
xor
sbb
test
inc
fisubl
push
test
clc
jmp
cmpb
mov
leave
xor
jmp
movsb
inc
cmp
jp
hlt
mov
add
push
mov
jmp
dec
push
scas
or
clc
and
shrb
aam
mov
fs
stc
ljmp
lret
mov
addl
or
lret
jle
pushf
das
into
pusha
jle
mov
insb
ljmp
imul
jmp
pop
mov
subb
cmp
fdivrs
fisubs
dec
mov
std
aad
mov
mov
inc
adc
pop
adc
lods
jg
nop
movsl
outsl
int
pop
push
outsl
mov
add
xchg
mov
or
mov
or
push
icebp
and
negl
mov
int
jmp
insl
add
mov
arpl
aad
xor
push
jns
add
sub
pop
fs
jns
lcall
jmp
outsb
pop
push
and
dec
pop
add
push
jmp
insl
mov
add
repz
sub
shll
mov
test
xorb
jno
mov
jmp
push
repz
das
adc
ret
loope
mov
jmp
mov
nop
mov
dec
in
cmp
inc
hlt
pop
ds
lahf
mov
ljmp
sbb
es
sub
ret
mov
or
push
ljmp
in
push
mov
mov
int
and
test
movsb
adc
popa
add
mov
and
fidivs
bound
or
cli
lret
dec
or
out
ljmp
icebp
addl
fbstp
jp
call
pushf
decb
mov
pop
jl
or
adc
cmp
pusha
insb
push
rcrb
mov
out
nop
repnz
mov
mov
mov
das
dec
cmpsl
cwtl
addb
lock
sub
or
aad
mov
lahf
or
cltd
jmp
out
pop
or
pop
cmp
je
cmp
xchg
ret
jmp
loopne
sti
dec
stc
ss
or
cmp
jg
push
sub
sbb
mov
sbb
pop
cld
and
xor
in
xchg
aam
xchg
bound
test
or
out
movsb
mov
pop
ret
shrl
sbb
adcb
add
jp
daa
xchg
jae
jne
xor
fbstp
xchg
cmpsb
push
in
jecxz
pop
inc
call
insb
add
pusha
call
imul
stos
jae,pt
add
lcall
call
andb
dec
lods
out
mov
push
add
int3
in
test
xchg
call
add
pop
jne
sbb
je
push
inc
push
cwtl
mov
icebp
aas
int3
nop
les
inc
out
dec
jecxz
inc
div
sarl
adc
scas
dec
pop
test
lea
std
add
fidivrl
add
sbb
out
sbb
std
mov
rolb
std
cmpsl
xchg
psubb
call
cltd
dec
dec
enter
add
hlt
lock
inc
adc
push
test
les
inc
cs
mov
scas
out
dec
lods
xor
pusha
pop
mov
rclb
add
jmp
movsl
clc
jg
adc
divl
xor
cli
adc
jmp
dec
ror
icebp
lock
mov
xor
sub
xchg
mov
adc
add
out
jmp
mov
jno
adc
test
push
inc
push
ret
nop
cmpsl
test
xor
pop
jmp
lea
push
daa
int3
stos
decl
and
push
push
mov
in
dec
int
mov
xorb
stos
or
stc
nop
push
inc
sub
or
pop
mov
adc
add
shl
adc
hlt
roll
xor
stos
loop
sub
in
lret
pop
mov
lcall
and
and
sbb
popa
jmp
movsb
jl
add
pop
shll
add
pusha
mov
shrl
mov
xor
push
inc
and
adc
pushf
sub
push
jle
loopne
mov
popa
jg
push
push
icebp
rol
push
adc
enter
xor
add
mov
xor
dec
das
mov
and
lahf
xchg
mov
sub
mov
adc
fdivs
mov
je
sub
js
xor
mov
and
and
nop
mov
in
pop
or
pop
mov
inc
popf
mov
mov
xchg
jnp
jae
dec
nop
lock
push
dec
roll
and
or
mov
pop
lea
test
fwait
xchg
lds
pop
jo
jo
rorb
ljmp
bound
in
xchg
xchg
push
rcrl
pop
inc
ret
das
lods
shll
adc
adc
test
mov
cmp
mov
shll
fcoms
mov
push
and
mov
arpl
movb
out
sar
cltd
dec
mov
or
aas
in
dec
test
nop
cmpsb
adc
mov
fdivl
ret
add
fxch
jmp
jno
sub
roll
and
sub
mov
cmp
addl
cmp
pop
xor
pop
push
sub
decl
cltd
cld
push
out
rcrb
add
sub
mov
lret
cmpsl
xchg
popf
adc
jmp
repnz
leave
mov
add
mov
push
lea
sbb
or
daa
xor
aas
pusha
lahf
in
xchg
add
pop
inc
adc
enter
mov
push
cs
nop
dec
push
lret
push
or
xchg
in
loopne
lea
or
push
xchg
sub
sbb
pop
and
scas
cmc
hlt
adc
out
pop
popa
push
mov
out
and
dec
pushf
mov
dec
cwtl
inc
call
inc
mov
lret
es
lods
sbb
mov
pop
lahf
xchg
jg
push
adc
divl
or
imul
sti
ret
icebp
incl
enter
dec
adc
sub
or
jno
jnp
or
add
data16
xchg
cmpsl
add
fimull
add
scas
push
aas
jmp
jecxz
popa
adc
popa
ret
add
jmp
loop
jg
mov
or
out
add
or
repnz
xor
jl
fdivrl
idivl
es
push
inc
or
lcall
daa
inc
pop
les
push
jg
pushf
push
lret
and
push
mov
push
push
icebp
icebp
aam
mov
loope
js
push
aam
cwtl
add
pusha
call
push
mov
mov
sub
add
rolb
and
adcb
mov
sbb
outsl
xchg
cli
fimuls
xchg
push
inc
sbb
or
cmpb
daa
or
jno
adc
shrb
aas
add
das
enter
jmp
push
xchg
xchg
repz
adc
icebp
xchg
out
sbb
pop
xor
lods
push
cmpl
movsl
push
push
roll
imull
and
testl
dec
push
mov
sub
add
sbb
mov
out
push
stos
out
xchg
ret
cmpb
adcb
scas
and
jmp
dec
inc
es
ret
and
dec
push
daa
ror
adc
jmp
cmpsl
jp
cmp
mov
inc
repz
adc
std
or
and
pop
test
adc
imul
nop
push
xchg
cmp
es
push
in
jae
mov
jp
dec
xor
das
mov
mov
push
xor
inc
inc
sub
dec
int
jg
js
push
pop
clc
cmpl
push
mov
adc
pop
inc
and
stos
aam
lods
fnsave
aas
or
mov
movsb
leave
or
or
pop
dec
cmp
pop
nop
push
mov
and
nop
inc
and
cwtl
call
inc
negb
jo
mov
sarb
add
call
and
mov
mov
add
xchg
pop
es
adc
mov
nop
repnz
xchg
out
iret
mov
ljmp
daa
std
pop
sbb
pop
inc
outsb
xor
sbb
ljmp
enter
fsts
push
scas
xor
call
jbe
mov
jecxz
scas
fs
mov
jns
adc
xor
je
inc
outsb
or
jo
adc
mov
cmp
out
push
and
xor
rcl
outsl
fs
adc
ret
repnz
in
and
call
mov
orl
movsb
inc
push
jmp
leave
or
jp
repz
insb
movsb
clc
add
jbe
add
or
mov
notl
adc
sub
rcrl
mov
mov
cli
or
adc
push
test
push
lea
lahf
sub
ret
in
sbb
pusha
pushf
push
cltd
and
std
rolb
mov
adc
imul
int3
jno
sub
adc
scas
test
sbbb
add
hlt
add
ljmp
ret
lods
sbb
mov
cli
ss
sub
or
sarb
add
mov
test
adcb
push
daa
mov
jmp
pop
pop
movsl
xchg
ljmp
mov
sub
and
sub
test
mov
popf
mov
push
or
test
and
push
cltd
xor
inc
inc
mov
push
or
jge
dec
lret
push
stc
xor
pop
test
sar
adc
mov
pop
popf
call
mov
inc
mov
or
xchg
xor
xchg
das
mov
add
in
jmp
jno
sahf
incl
fsts
and
jmp
lock
insb
push
add
call
ret
aas
pushf
adc
inc
sbb
in
ds
stc
push
sbb
mov
push
nop
mov
rorb
or
adc
xor
clc
add
push
adc
imul
mov
test
sub
shl
dec
jmp
cli
out
inc
sub
icebp
pop
jl
sub
std
mov
test
cmp
fst
inc
push
cmp
mov
cltd
lahf
shlb
adc
sbb
mov
test
push
cld
jo
push
filds
test
and
cltd
lea
cmc
add
leave
jae
andl
sub
inc
je
loopne
add
xchg
mov
in
dec
int3
sbb
addl
lcall
push
or
mov
hlt
sbb
push
fst
push
scas
and
inc
jg
pop
sti
mov
push
cmp
out
cmp
inc
ret
loope
jmp
push
and
js
popa
add
xchg
mov
imul
xor
xor
out
jecxz
pop
inc
dec
xor
dec
daa
imul
push
loopne
sahf
mov
add
mov
xchg
xor
and
ds
add
cwtl
cs
cmp
xchg
push
add
call
lock
mov
in
shl
xchg
jg
xchg
out
movsl
sarl
pop
pop
fnstcw
test
jmp
adc
push
xchg
adc
adc
sahf
and
and
sbb
sub
sbbb
and
call
lret
xchg
push
jmp
adc
or
das
clc
push
nop
shr
push
inc
push
mov
fldenv
add
mov
mov
sub
ret
or
cwtl
pop
add
enter
mov
je
xlat
sub
mov
andb
sti
push
inc
iret
inc
mov
pop
xchg
shll
cmc
inc
dec
jae
sub
mov
pop
shrb
ja
fs
jnp
adc
inc
dec
inc
setnp
cltd
jg
or
cmp
xchg
ret
push
repz
push
mov
sub
xchg
xchg
add
push
aaa
push
aam
or
insb
popa
add
push
pushf
xchg
mov
repnz
mov
pop
and
xchg
inc
xchg
cwtl
jno
call
mov
aaa
outsb
xchg
inc
sbb
xchg
push
outsl
mov
mov
test
push
loopne
scas
sbb
fwait
daa
rcrb
negb
xchg
dec
mov
inc
es
frstor
mov
mov
dec
push
or
test
lahf
xchg
pop
cltd
mov
dec
jle
dec
cmpl
inc
push
clc
int
addr16
inc
xchg
das
mov
andl
push
dec
mov
out
loope
push
sub
aam
addr16
andb
sbb
or
sbb
in
fsubrs
cmp
idiv
push
mov
lods
leave
adc
sub
shr
push
push
and
rcll
pusha
nop
test
cltd
int3
and
jl
sbb
outsb
gs
pop
sub
add
loopne
das
test
mov
lcall
mov
pusha
sbb
cmc
hlt
loopne
xlat
pop
xor
shrb
inc
sub
fcomps
push
push
int
int
mov
addb
call
pushf
pop
fstp
push
add
sub
adc
mov
notl
dec
aad
movsb
daa
popf
mov
and
movsb
ljmp
dec
fnstcw
sahf
in
pop
pop
pop
xor
out
movsb
xchg
repnz
mov
cmp
les
das
push
and
test
fidivrl
dec
es
shlb
jns
call
ja
xchg
hlt
adc
call
je
mov
pop
call
lcall
out
stos
mov
outsb
pop
data16
insb
jp
in
rcrb
mov
sub
ret
rcrb
pushf
push
or
xchg
jmp
push
fistpll
push
inc
xchg
xchg
mov
shlb
loopne
push
push
mov
subl
cmp
jp
mov
xchg
add
shll
hlt
cwtl
out
inc
mov
je
or
jp
lcall
xor
fdivrl
xchg
imulb
movsl
push
jmp
pusha
call
mov
ret
in
and
add
movsl
jne
dec
xor
lock
xor
lahf
or
push
adc
mov
push
data16
push
pop
inc
outsl
pop
lods
sub
or
call
gs
mov
cmpsl
les
jnp
popa
mov
push
push
sub
fldenv
jb
mov
adc
or
out
iret
adc
jne
int3
cmp
test
popa
sub
not
cwtl
dec
xorl
mov
call
mov
pop
insl
loopne
push
lahf
cmpsl
xor
add
mov
stos
xor
and
add
xlat
clc
popa
fwait
mov
inc
rclb
xchg
xchg
fucomp
leave
shrb
pusha
mov
outsl
sarl
shr
cld
nop
fwait
cmpsl
clc
sbb
in
sbb
mov
add
xor
push
mov
add
test
idivl
xchg
fmul
inc
lock
dec
mov
and
or
orl
jmp
sarb
mov
push
incb
jo
inc
mov
push
clc
jno
into
pushf
cltd
daa
sbb
fs
shrb
mov
nop
call
mov
or
and
les
scas
ret
stos
or
xchg
mov
xor
fisubl
adc
test
les
shlb
dec
stc
or
ficoms
icebp
and
dec
jnp
lods
outsl
imul
inc
pop
push
xor
hlt
lret
jle
dec
sbb
in
xchg
scas
dec
pop
pop
mov
stos
subl
dec
xchg
test
mov
sbb
es
add
call
scas
mov
cmpsb
mov
add
or
ljmp
cli
xor
test
or
not
cmp
mov
pushf
mov
jmp
mov
sbb
jl
arpl
jmp
and
jecxz
push
pusha
das
push
adc
pop
dec
shr
popf
or
faddl
nop
xchg
mov
push
sbb
les
fwait
ja
adcl
lea
sbb
pop
or
cld
fwait
ret
push
int3
cmc
movsl
les
adc
nop
pop
jecxz
mov
aad
jmp
mov
les
cmp
inc
inc
lret
mov
adc
pushf
push
in
pusha
rorl
in
adc
jp
lret
jmp
xchg
rcll
push
call
ret
mov
xchg
lahf
cs
lahf
lds
pop
stos
aaa
lock
push
fbld
jmp
push
add
lea
xor
stc
pop
repnz
ficompl
jae
push
push
outsb
add
call
hlt
sbb
popf
shll
lods
pushf
testb
jmp
test
push
mov
adc
sbb
fildl
decb
jmp
nop
je
sti
push
mov
test
pushf
je
nop
xor
sub
ljmp
mov
cltd
jo
adc
test
xchg
les
cmp
inc
out
call
es
cltd
ljmp
jae
or
and
dec
xor
enter
stc
inc
testb
mov
mov
xchg
out
or
xchg
mov
or
pusha
cmp
cwtl
mov
mov
ret
or
repnz
mov
dec
inc
scas
cmp
sub
imul
sbb
pop
mov
push
in
mov
pop
or
in
popf
fadds
sbb
pop
hlt
inc
push
mov
movsb
cmpsb
cmc
rolb
sbb
cwtl
out
mov
inc
sbb
sub
pop
dec
mov
repz
xor
add
lea
cmp
jmp
push
hlt
push
pop
mov
sub
pop
sbb
add
mov
sub
mov
xor
xchg
int3
adc
pusha
mov
push
mov
enter
or
sti
and
mov
pop
xchg
das
jge
add
mov
rcrb
xchg
add
inc
shll
in
outsb
push
add
add
mov
int3
imul
lret
lds
xor
add
sub
mov
sar
aas
cmpb
inc
xchg
loope
sarl
daa
mov
mov
mov
outsl
xchg
jle
pusha
icebp
xor
dec
sbb
mov
add
std
enter
jb
jns
xchg
adc
push
ds
lret
push
push
add
add
out
pusha
push
push
xchg
or
push
test
pop
sbb
add
mov
sub
loopne
or
jb
pusha
lock
cmc
jo
mov
lods
leave
or
xchg
add
int
or
add
pushf
mov
aaa
mov
loop
testl
pop
mov
test
xor
and
fcoml
pop
movsb
sahf
push
scas
jno
call
jecxz
and
scas
push
out
xor
mov
mov
add
xchg
daa
sbb
data16
pop
push
nop
add
pop
push
loope
sub
cwtl
and
and
add
ljmp
gs
adc
ds
fldenv
loope
mov
cmp
mov
dec
or
call
xor
inc
movsl
loopne
ljmp
out
inc
call
xchg
jne
insl
mov
test
inc
ret
rol
imul
or
adc
mov
das
dec
mov
pop
pop
movsb
clc
or
cltd
jbe
sub
stos
pusha
aam
loope
pop
dec
sub
push
dec
rolb
cmp
sbbb
ret
xor
std
xchg
mov
jb
sbb
xor
push
iret
push
push
xchg
maxps
imul
xchg
push
mov
jp
inc
adc
dec
adc
jl
andl
jnp,pt
sub
push
mov
test
test
fs
mov
repnz
jp
movsl
out
inc
notl
sub
ret
add
xchg
dec
or
add
nop
imul
outsl
mov
adc
mov
sub
adc
test
cli
aam
and
addr16
adc
repz
pop
test
add
cmpsb
adc
or
aas
out
jne
xor
stos
clc
pop
pop
inc
jmp
mov
cs
mov
call
shrb
push
andl
sbb
bound
inc
rcrl
cwtl
mov
xchg
mov
or
test
push
cmpb
adc
pushf
leave
or
add
push
mov
loope
xor
pop
aam
sbb
mov
sub
leave
push
cmpsl
ret
shrb
ror
mov
stos
and
push
je
push
out
les
mov
in
or
icebp
mov
movsl
pushf
bnd
jo
adcb
shlb
sbb
push
adc
ss
cmp
mov
mov
jo
mov
or
call
ja
inc
and
add
push
sbb
push
std
fisubs
and
mov
pushf
mov
test
push
add
fmull
dec
lret
xchg
pusha
mov
xchg
xchg
mov
cwtl
add
dec
mov
stc
decb
enter
push
push
test
pop
call
fs
pop
push
lods
or
jmp
jl
inc
push
jge
fucomip
adc
addr16
sub
fdivs
pop
mov
cmp
inc
pop
out
mov
or
or
and
add
test
lcall
pop
jg
cmpsl
loop
and
rorb
adc
and
and
jo
push
inc
iret
out
std
ljmp
mov
dec
icebp
pushf
jp
orb
fwait
sub
roll
dec
jmp
and
jg
pop
pusha
push
mov
mov
xchg
sbb
push
mov
cli
test
mov
add
rorb
push
mov
popf
lret
mov
inc
jmp
jp
outsb
inc
mov
push
jae
pusha
jmp
sbb
out
lret
xchg
push
jl
add
lock
mov
xor
sbb
loope
add
or
push
loope
sub
outsl
and
mov
sbb
arpl
lods
enter
pop
rclb
pop
push
sbb
xchg
add
jmp
jge
daa
xchg
adc
test
fs
or
test
gs
push
mov
sbb
adc
xor
xchg
ss
in
mov
pusha
dec
es
push
inc
jnp
out
push
mov
sub
sahf
inc
xlat
inc
add
cwtl
inc
call
int3
add
repz
adc
rorb
and
pop
in
add
xor
mov
mov
cmp
mov
sbb
repz
xchg
enter
mov
jo
dec
pop
push
add
mov
or
pop
jne
fisttps
dec
fstpl
pop
div
imul
or
dec
push
sarb
and
push
sbb
out
shlb
jbe
or
aad
jno
ret
mov
push
lcall
jecxz
out
pop
push
add
test
jmp
mov
nopl
xchg
xchg
pop
loopne
scas
les
sbb
lcall
cmp
add
sbb
dec
pop
movsb
daa
mov
addb
adc
inc
sbb
xor
loope
jle
arpl
pop
add
dec
aam
ret
adc
rcrb
call
jmp
add
call
in
pop
pop
push
cli
insb
mov
add
nop
pop
scas
int3
and
mov
popf
inc
clc
or
dec
icebp
adc
push
dec
sub
mov
popa
xor
call
jl
bound
repnz
pushf
mov
dec
in
sub
fdivs
or
or
push
sbbl
ss
xchg
mov
inc
ret
aam
out
andl
daa
fs
subb
cmp
pop
xor
sub
in
mov
fs
push
int3
cs
push
push
cld
sub
call
rcll
mov
cwtl
addb
std
sub
pop
int3
lret
jbe
mul
inc
sti
sar
inc
add
scas
adc
punpcklwd
adc
rorl
test
test
cmp
loop
out
inc
fs
xchg
jns
xchg
fcmovnu
jge
cwtl
cmp
sbb
jne
test
dec
sti
ret
xchg
enter
hlt
mov
or
rcl
pop
sti
cmpsl
jge
test
fimuls
sbb
rcl
movsb
iret
cmp
cmp
xlat
xor
push
test
cmp
xchg
lcall
adc
inc
mov
mov
lahf
mov
jmp
daa
jl
jae
decb
lret
call
fs
mov
dec
lds
jno
add
pop
push
incl
add
ja
repz
jno
cwtl
lods
xor
iret
icebp
cli
cli
xor
push
cwtl
xchg
fstpt
sub
mov
out
dec
jo
mov
pop
cli
inc
jb
call
add
or
int
pop
orb
loop
dec
notl
lods
adc
dec
in
mov
pushf
imul
and
mov
test
clc
jnp
dec
frstor
cmp
cmp
xchg
dec
mov
shll
cmpsb
pushf
mov
sbb
xchg
push
stos
sub
call
lret
cmp
jmp
insb
mov
mov
mov
mov
and
leave
fs
jno
adc
inc
insb
adc
dec
clc
add
mov
mov
xlat
xor
and
or
mov
pop
xchg
bound
clc
or
push
mov
repz
cs
xchg
adc
sbb
out
xchg
jge
fs
roll
dec
sbb
icebp
dec
mov
call
mov
mov
mov
call
rolb
iret
push
push
push
not
mov
pusha
inc
lock
mov
cmpl
xor
or
nop
clc
fiadds
pusha
outsb
mov
das
out
or
lcall
push
test
roll
cmpl
fidivrl
repz
jmp
add
scas
cs
ljmp
adc
sub
and
xchg
mov
icebp
stos
inc
fsts
test
add
adc
mov
mov
or
divl
dec
mov
push
int3
xor
pop
pusha
in
subb
aaa
jge
push
push
enter
mov
lock
stc
in
sub
enter
cmp
scas
push
jg
push
or
gs
pushf
sub
es
in
jg
ja,pn
daa
lods
cmp
sbbb
cld
nop
jmp
scas
dec
lahf
call
inc
sub
xor
test
or
cmp
cmp
jl
and
sti
sub
test
frstor
jp
jp
or
jb
mov
jno
rcrb
lret
or
xchg
ret
bound
outsl
pusha
sbb
ljmp
pushf
daa
dec
and
mov
popf
push
push
in
jmp
pushw
daa
stc
adc
fldcw
pop
lea
push
std
outsl
ja
lds
sub
pop
and
push
aam
pushf
enter
sbb
mov
jno
rolb
sub
sti
dec
leave
cwtl
inc
push
inc
mov
and
xlat
push
push
call
sbb
out
adc
stos
push
flds
push
ja
icebp
addr16
or
call
rol
mov
adc
popa
cmpsb
adc
add
add
mov
mov
cmpsl
cli
clc
gs
dec
mov
test
orl
dec
leave
aad
sub
in
xchg
xchg
mov
jmp
mov
aas
xor
xor
sub
jmp
lret
call
stos
mov
aas
lds
mov
xor
mov
lret
pop
in
ss
mov
out
add
jmp
ror
pop
push
lcall
sbb
mov
and
sub
add
shlb
cmpsl
mov
jge
jnp
xchg
cmp
dec
insb
and
stos
pusha
jnp
pop
and
dec
pushw
sub
lds
mov
and
pop
pop
or
mov
enter
xchg
xor
push
xor
movsb
fadd
and
xchg
out
jl
sub
jp
das
mov
pusha
pop
sub
notb
repnz
ja
adc
xchg
das
push
pop
jbe
ret
test
in
xor
mov
leave
clc
mov
test
jl
sub
cmp
rolb
ds
call
sbb
aam
aas
pop
adc
repz
std
test
and
mov
cmp
cs
jle
lock
pushf
dec
xchg
lods
ljmp
inc
clc
push
xor
je
xchg
add
mov
add
sub
fidivl
add
lea
mov
orl
xor
pusha
shll
jbe
adcl
mov
push
mov
lahf
into
pop
and
call
xchg
ss
insb
leave
mov
ja
out
je
inc
fdiv
pusha
stos
pop
stos
add
lea
adc
pop
sbb
mov
jecxz
add
popa
in
loope
mov
in
nop
mov
es
or
icebp
lahf
mov
mov
out
push
pusha
fcmovu
mov
movl
rolb
sub
mov
cmp
mov
leave
cwtl
pusha
leave
mov
pop
push
push
jmp
or
mov
sarb
or
stos
lret
add
jb
jno
xchg
fildl
adc
dec
bnd
pop
adc
test
ret
icebp
fildl
jb
inc
push
popw
cwtl
cld
jns
iret
mov
mov
cmpsl
aam
lods
adc
push
pop
mov
les
sub
xor
adc
sbb
dec
sub
lea
dec
push
lods
int3
popf
pop
jl
call
inc
das
jp
test
mov
push
inc
or
or
push
ror
sarl
pop
sbb
or
inc
xor
jne
aas
mov
jne
sub
loopne
mov
jl
push
punpckhdq
repnz
repz
mov
push
mov
into
call
mov
add
mov
mov
ret
jl
xor
sbb
mov
push
mov
pop
nop
and
test
push
add
xor
nop
lea
cmp
add
pop
or
adc
call
hlt
inc
cli
or
mov
outsl
iret
cli
int3
dec
jb
and
das
jno
lar
or
shrb
movaps
movsl
imull
mov
std
pop
incl
lods
mov
in
test
and
cmp
jne
add
cld
bnd
fs
sbb
cmp
das
test
add
xchg
subb
popa
xchg
jne
jne
leave
es
rcrb
int3
push
movsb
push
mov
mov
in
leave
test
mov
adc
sbb
jmp
bound
lcall
jmp
push
hlt
push
arpl
sahf
push
repz
jno
out
enter
xchg
or
and
cmpl
jmp
repnz
mov
push
daa
dec
ljmp
popf
lret
gs
movsl
xchg
dec
mov
cltd
ficompl
mov
pusha
test
lods
cmp
not
dec
imul
mov
sub
in
sub
push
mov
dec
inc
je
stos
mov
sbbl
dec
pop
mov
push
movsl
or
push
pop
testl
mov
sub
pushf
leave
or
in
cmp
pusha
push
jae
ds
fsubl
pop
mov
pusha
clc
or
jo
out
and
jp
push
cmpsb
scas
and
roll
push
sbb
idivb
ror
insb
in
xchg
cltd
adc
testl
aas
pusha
and
sub
push
daa
js
add
mov
jno
stos
dec
sbb
sub
cmp
mov
push
dec
or
inc
popf
cli
fisubrs
mov
cmp
rorb
mov
je
sti
add
roll
stos
inc
int
scas
in
mov
adc
out
jae
add
pop
dec
stc
subl
ret
mov
xor
adcb
pop
aas
push
fimuls
cmp
imul
add
and
rcrb
push
dec
push
or
dec
or
mov
mov
clc
fadds
pop
rcll
decb
adc
add
pushf
sbb
das
sub
sub
stos
push
or
test
pop
mov
jns
push
mov
mov
loop
cmp
jne
pop
jmp
or
push
rolb
sub
xor
and
pusha
adc
mov
and
test
adcb
in
lods
and
inc
xchg
and
push
nop
mov
dec
add
call
test
and
testl
repnz
mov
cmp
lods
mov
wrmsr
ror
push
push
cwtl
and
push
jp
mov
cmp
pop
pop
nop
std
jmp
xchg
sub
cmp
dec
push
adc
mov
inc
sbb
bound
sub
push
or
loope
es
js
daa
ss
mov
rcll
push
or
pop
pushf
adc
xchg
jne
scas
mov
arpl
mov
cli
add
or
push
in
mov
sbb
in
jne
sub
repz
mov
xor
push
adc
sub
inc
jns
cmpsb
lahf
mov
call
and
dec
inc
jmp
popf
in
hlt
mov
mov
idivb
flds
popa
push
mov
push
call
jp
and
sbb
adc
add
in
cmp
repnz
ja
test
or
and
push
cmp
shrl
push
push
popf
and
in
or
es
inc
adc
in
dec
call
jmp
dec
enter
leave
push
and
adc
push
inc
and
pop
adc
sub
jno
clc
daa
hlt
sbb
shlb
push
js
xchg
cmpsb
jl
sub
inc
dec
dec
push
jg
cli
sbb
add
hlt
fiadds
outsl
and
hlt
in
mov
cmp
pop
mov
adc
mov
popf
inc
or
or
dec
push
mov
clc
xor
or
push
push
jae
pushf
cld
cmp
xchg
push
sbb
mov
outsl
shrb
and
adc
cld
popa
cwtl
sbbb
push
sti
ret
sub
add
push
cmp
loope
notb
out
jl
mov
cs
mov
pop
add
lcall
xor
mov
cmp
dec
test
fisttps
repnz
push
mov
xor
lods
fldt
mov
add
push
rcrl
adc
pop
add
adc
inc
jne
jmp
jne
sahf
out
inc
sbb
cmp
or
mov
xor
xor
and
mov
mov
dec
or
mov
fsubr
pop
roll
cmpl
and
cmp
xor
fs
sub
cld
push
out
mov
add
call
sub
cmp
push
bound
cmp
xchg
sar
pop
aaa
inc
call
jmp
push
dec
add
cmpb
pop
clc
push
mov
shl
rorl
adc
lods
push
xor
insb
js
popf
dec
dec
or
add
mov
fdivl
pushf
push
popa
mov
sbb
add
repnz
add
push
subb
jae
fisubs
je
imul
and
mov
ljmp
cmp
scas
aam
cwtl
inc
enter
jns
cwtl
mov
call
mov
sub
or
insb
cltd
add
inc
outsb
fstl
orl
mov
sub
mov
mov
and
and
sbb
and
ljmp
jno
clc
lods
test
or
push
stos
ficoms
std
subb
mov
stc
jp
mul
xchg
and
xor
outsl
outsb
sarb
repz
data16
pop
hlt
jp
adc
push
sub
loop
mov
fs
testl
pop
xchg
jecxz
dec
les
mov
adc
xor
sub
pop
push
cwtl
mov
sti
mov
fisubs
or
popf
or
adc
mov
xchg
imul
cmp
hlt
jae
xchg
and
mov
dec
mov
cmp
inc
mov
or
inc
jbe
inc
pop
movlps
add
jmp
popa
bound
adc
jecxz
and
int3
adc
imul
icebp
pop
push
fiaddl
sarb
mov
dec
pusha
nop
call
or
sub
cltd
dec
lea
stos
dec
jb
ds
in
ljmp
aad
mov
cs
int3
pop
mull
rcrb
add
adc
jg
mov
sub
cmpl
adc
jge
stos
inc
call
push
call
fsubs
or
call
push
mov
les
xchg
test
arpl
ljmp
ja
mov
mov
jl
inc
xchg
xlat
cs
mov
push
dec
push
pop
mov
lods
fs
ja
pop
ret
inc
mov
nop
push
push
pop
add
xor
jl
popf
mov
fsts
adc
xchg
or
sbb
stc
cld
add
jns
or
mov
adc
xchg
cmp
pushfw
orl
dec
adc
sub
adcl
fsts
sbb
sub
test
ja
pop
jp
dec
xchg
and
push
pop
mov
add
jae
mov
and
scas
push
xchg
push
sbb
mov
or
insb
pop
adc
push
sub
cmp
add
test
mov
push
daa
hlt
out
cwtl
and
xchg
jne
mov
movsb
mov
rdtsc
xchg
mov
xchg
pop
pop
icebp
xchg
inc
sub
call
mov
adc
mov
sbb
inc
lods
pusha
push
mov
push
pop
data16
repnz
push
sbbb
inc
cmp
jae
cmp
add
nop
xchg
inc
sbb
push
enter
jo
xchg
icebp
ret
pop
mov
or
or
jp
xchg
pusha
imul
mov
repz
jns
adc
push
pop
outsl
push
xchg
sbb
pop
call
in
xchg
dec
lods
or
and
or
add
icebp
inc
adc
cmp
push
jp
dec
or
sub
das
scas
pusha
mov
sub
push
sahf
gs
lock
sub
addr16
movl
mov
push
js
in
jno
inc
cmc
lds
push
sub
and
test
cli
popa
subb
and
cld
cmp
dec
call
gs
lret
jmp
adc
clc
inc
repnz
fcoms
sbb
and
call
in
xchg
out
add
mov
push
popf
clc
xchg
ljmp
mov
sbb
adc
in
leave
push
in
clc
sub
shlb
push
ljmp
lods
dec
pop
shrb
enter
sub
arpl
xchg
xor
xorl
xor
or
or
push
imulb
jne
movsl
push
cmpsl
mov
scas
add
sbb
jl
clc
jg
dec
adc
movsb
mov
pop
filds
inc
or
push
dec
addr16
sahf
mov
cmovp
shrl
cmp
mov
jle
push
mov
mov
enter
jle
call
mov
mov
pop
push
movsb
mov
dec
add
shll
popa
dec
push
out
push
push
pop
add
cmpb
rcrb
icebp
rcrb
mov
dec
jmp
and
imul
shrb
out
adc
inc
mov
adc
fnsave
cwtl
fdivs
sbb
cmpsl
std
stos
xor
xchg
sub
dec
mov
or
in
dec
pop
fsubr
enter
adc
call
cmp
pop
adc
mov
mov
in
jmp
mov
jmp
add
add
jmp
nop
pop
push
sbb
mov
mov
xchg
inc
mov
mov
adc
repnz
adc
call
insb
mov
or
pop
mov
and
or
mov
cmp
jmp
mov
aad
mov
inc
repz
xchg
push
notb
jne
lahf
mov
xchg
add
call
push
cld
add
pusha
mov
int3
movsb
cmc
add
sbb
movsb
out
mov
cmp
test
test
sbb
les
cwtl
jo
jo
andb
es
sbb
xchg
push
pop
inc
cltd
shlb
jb
loop
xor
push
xor
xlat
sub
or
sub
cwtl
sahf
push
adc
sarb
pop
aam
pop
std
dec
je
pop
mov
fisubrs
scas
fldenv
push
jmp
or
add
mov
inc
lret
stos
cli
mov
jns
cltd
mov
mov
lcall
lods
popf
inc
mov
mov
mov
adc
push
ds
lcall
fwait
dec
mov
jb
faddl
stc
call
mov
sub
jmp
xchg
and
ljmp
sub
mov
pushf
mov
adc
lds
test
sar
loopne
lret
int
scas
xorb
xor
add
mov
push
cld
in
pop
ret
sbb
jae
inc
imul
push
jb
pop
adc
add
lock
movsb
iret
xor
inc
pop
dec
push
xor
daa
cwtl
push
or
mov
rcl
in
call
jecxz
pop
movsb
dec
pusha
jecxz
neg
add
adc
xchg
pop
cli
jae
andl
xchg
fwait
cs
lea
inc
subl
jne
mov
ret
movb
les
jno
mov
jmp
push
inc
lahf
or
or
popa
inc
andl
imul
pop
in
es
push
inc
xor
popa
dec
arpl
xor
add
add
xor
mov
stos
mov
ret
push
stos
mov
push
pop
add
push
std
mov
lds
push
jb
jg
test
push
inc
or
call
or
nop
std
stos
dec
xlat
lcall
cli
popa
pop
loopne
jnp
mov
daa
call
testl
pushf
lahf
icebp
rol
push
and
xchg
nop
std
xchg
jae
test
pop
fiaddl
jmp
or
imul
jno
add
sti
repnz
stc
xchg
mov
pop
push
pop
mov
lods
repnz
scas
mov
cmp
mov
add
call
inc
mov
lock
in
xchg
and
and
ljmp
aad
mov
xor
call
xor
or
cmp
xor
out
popf
subl
lock
mov
mov
ljmp
adc
dec
add
ror
xor
shr
or
sub
adc
sub
xchg
push
lock
nop
jmp
call
and
push
cwtl
sub
mov
mov
rorl
inc
call
xchg
repnz
lods
dec
mov
movsb
int
adc
ffreep
daa
jmp
jg
add
xchg
pop
or
std
inc
rol
dec
call
adc
hlt
aam
test
sahf
push
sbbb
ret
stos
and
popf
cli
xor
sub
imulb
rclb
lock
push
adcl
and
loope
sbb
sub
jp
dec
popa
inc
cmp
cmp
mov
xor
and
dec
pushf
inc
push
cmpsb
repz
or
pop
mov
fs
clc
imul
mov
pop
mov
xor
inc
or
add
push
mov
inc
das
int3
xor
aas
mov
sub
gs
das
mov
inc
ja
push
mov
rcl
cmpsb
pop
mov
lret
cwtl
aam
inc
jmp
scas
mov
out
pop
movsl
jmp
inc
pop
sbb
div
add
and
adc
add
jne
call
aas
clc
xchg
mov
mov
inc
jno
xchg
inc
xlat
jle
lea
cmp
sti
mull
aas
and
into
mov
ja
call
cmp
dec
add
and
rcr
outsb
add
aas
repz
test
or
inc
cmpsb
fs
lea
xchg
test
xor
and
in
clc
lahf
jmp
aaa
or
pop
sbb
dec
push
out
or
in
adc
add
shr
out
xchg
out
cwtl
decb
pop
push
mov
popf
cmp
mov
cwtl
clc
clc
insb
push
cmpb
cli
arpl
hlt
pop
push
negl
inc
cmc
push
or
iret
xor
mov
stc
ss
inc
xchg
pop
cmp
sahf
adc
sar
popa
or
and
add
or
and
adc
daa
call
cmp
adc
mov
scas
push
jae
mov
inc
sub
xchg
call
popf
daa
mov
cmp
jns
xor
popf
push
pop
adc
mov
mov
jmp
insb
add
mov
sti
xlat
mov
add
scas
sbb
dec
mov
arpl
in
aad
xchg
adc
cli
inc
inc
jle
add
mov
adc
loope
out
xchg
stos
ret
push
fbld
pusha
dec
or
mov
push
icebp
pop
fldt
add
aad
pusha
ret
or
jno
adc
mov
mov
stc
subl
out
or
and
cmc
mov
and
ret
push
ds
in
dec
push
enter
and
lahf
lea
jg
pop
mov
push
pop
stos
xor
dec
jb
push
loope
or
call
push
js
dec
in
addr16
add
repz
sbb
xor
push
jle
imul
dec
sti
sbb
cwtl
or
in
call
sub
leave
dec
outsb
loopne
test
push
adc
mov
pop
xchg
repz
or
jbe
cli
std
leave
cmp
notl
rolb
xor
addb
add
add
imul
jmp
inc
mov
pop
nop
adc
or
das
push
pop
inc
add
push
inc
test
pop
or
push
push
cmp
mov
rcrl
xchg
les
loopne
subb
mov
fwait
pop
pop
add
in
mov
jp
idivl
push
xchg
sub
pop
mov
xchg
adc
fwait
mov
adc
mov
es
je
movsl
add
fsts
les
or
in
enter
push
icebp
in
jmp
out
pusha
push
sub
ret
popf
xchg
imul
sub
fmull
and
and
mov
hlt
dec
push
xor
in
cs
pushf
fcompl
jns
and
add
icebp
xor
cmp
push
mov
inc
clc
out
stc
nop
cli
dec
sub
add
mov
sarb
nop
sub
push
dec
imul
inc
shl
divb
and
adc
dec
nop
icebp
xchg
jns
imulb
call
outsb
out
pop
dec
loop
xor
dec
and
in
cmpsl
pushf
pusha
test
or
cmp
jl
lods
jle
cmc
push
clc
lock
testl
pop
outsl
push
test
cltd
cwtl
jbe
cmovge
or
mov
adc
ljmp
stos
cwtl
mov
outsb
in
xlat
std
inc
jl
mov
mov
lods
or
lahf
jmp
adc
xchg
inc
xlat
sub
and
mov
mov
sbbb
call
pop
add
push
and
lcall
insb
fisttps
out
dec
call
nop
inc
jmp
cmp
adc
mov
jge
dec
cmpsl
lea
mov
xor
mov
sbb
psubb
test
jns
jmp
xchg
sub
loope
std
pop
ljmp
inc
nop
dec
inc
aaa
push
pop
mov
cwtl
lods
dec
sti
sahf
sub
adc
mov
dec
jmp
and
pushf
inc
inc
mov
jmp
mul
les
and
push
push
add
in
or
xchg
add
mov
pop
xchg
rorl
lea
inc
bound
or
sub
sub
dec
cmc
ret
or
jae
dec
test
gs
inc
or
fcomp
cmp
inc
add
and
and
lods
xor
jmp
rorl
or
or
stos
test
nop
jecxz
dec
xor
add
pop
outsb
inc
pop
and
jl
cmp
cli
clc
insb
addb
xor
mov
lcall
fs
or
mov
mov
mov
cmovg
xchg
xor
jecxz
daa
or
in
push
push
jae
and
orb
je
add
or
negl
daa
cmp
mov
inc
fwait
jle
jecxz
cld
sbb
adcb
nop
loope
push
sbb
jmp
fs
push
jb
shrb
mov
cwtl
fs
sbb
les
push
lret
cmp
xchg
scas
jmp
push
imul
or
xchg
rcl
mov
xchg
push
nop
dec
pushf
mov
movsb
ja
add
clc
pop
leave
subl
mov
cli
clc
dec
or
mov
ret
pop
shr
movsb
and
lahf
pusha
lahf
sbb
jne
or
sbb
push
pop
call
repz
add
or
divl
clc
lcall
clc
dec
push
dec
mov
push
aaa
push
inc
mov
decl
add
repz
pusha
movl
xor
fmull
mov
push
mov
push
jl
inc
inc
push
mov
cmp
cwtl
xchg
mov
orb
ret
test
dec
pop
sub
dec
add
shrb
mov
sub
cmpsl
push
mov
dec
ja
insb
es
xchg
cmp
mov
mov
jns
daa
stc
and
mov
call
cs
or
lret
scas
dec
adc
stos
cmp
leave
mov
test
nop
jmp
mov
mov
inc
adc
cmp
add
push
sbb
mov
and
or
cmpsb
dec
or
imul
mov
or
pop
repz
xor
out
sub
dec
add
pushf
sub
xchg
aad
fldt
sbb
mov
inc
stos
mov
cltd
out
add
mov
push
ja
or
mov
push
pushf
popa
call
push
push
lods
jns
xchg
mov
dec
or
mov
mov
loopne
add
jmp
sub
mov
aas
xorb
scas
in
sub
addr16
bound
fstl
or
bound
pop
hlt
je
fs
out
fsubl
cli
addb
mov
out
popf
push
imul
stos
cwtl
and
jl
push
stos
and
jp
hlt
lock
test
imul
pop
xor
xor
iret
xor
lret
jne
pop
ss
rol
push
lahf
push
imul
and
call
lahf
dec
mov
pop
mov
std
ja
rolb
push
bnd
or
lret
ficoml
pop
sbb
adc
xor
mov
out
mov
popf
je
jecxz
and
cmp
test
test
test
mov
push
dec
incl
sub
push
push
rclb
addb
std
jl
dec
lea
pop
test
jne
leave
sub
pop
in
sbb
mov
aad
adc
dec
repnz
clc
dec
call
int
lods
outsb
cld
push
movsl
sbb
cmc
pop
clc
mov
jle
cmp
jbe
add
mov
mov
and
sahf
enter
sbb
fcmovu
insl
jmp
cmp
cmp
add
xchg
fisttps
std
inc
addb
mov
out
repnz
pop
repz
xlat
test
mov
jecxz
pop
cli
lret
lea
push
aaa
inc
test
xlat
ret
sbb
shll
outsb
inc
push
xchg
rcl
stc
jnp
dec
xor
in
clc
insl
and
fwait
mov
inc
clc
ja
js
sub
xrelease
rorb
stos
adc
mov
or
mov
ficomps
inc
jns
test
negl
lods
nop
jp
jno
pop
dec
adc
cmpb
mov
cmp
insb
adc
add
sbb
mov
popa
mov
adc
xchg
gs
and
xor
repz
mov
adc
add
push
jo
aaa
and
fs
mov
jnp
sub
sbbb
data16
xchg
and
call
lahf
imul
pop
call
iret
xchg
adc
clc
push
lds
xor
sub
repz
idivb
call
jnp
sub
test
scas
and
int
ss
lods
mov
sub
in
addr16
xchg
cmp
add
sbb
and
inc
dec
aaa
mov
mov
roll
shl
inc
sbb
lahf
pushf
mov
lods
mov
daa
lcall
xchg
add
mov
cwtd
lcall
inc
cwtl
or
mov
cli
and
cmp
add
mov
pop
mov
dec
adc
inc
inc
jo
cmpsl
adc
pusha
push
pusha
sbb
xchg
mov
mov
call
sti
das
pushf
fidivrs
movd
adc
fcomip
add
int
bt
push
mov
add
testl
xchg
test
push
mov
imul
mov
cwtl
and
pop
insl
scas
xor
cs
mov
fdivs
scas
mov
mov
push
dec
mov
pop
lahf
shlb
pop
gs
jle
cmp
jmp
xor
sbb
int3
shrl
rcl
or
cmp
fisubrl
into
jecxz
aad
das
or
pop
inc
and
pop
or
mov
movsl
pop
pusha
mov
sbbl
add
xor
adc
arpl
jg
fnstenv
pop
push
sub
pushf
repz
outsb
dec
sub
jmp
push
ljmp
jecxz
sub
sbb
icebp
rcll
mov
lods
mov
add
xor
push
mov
xchg
lcall
inc
pop
lret
leave
cwtl
sub
sub
test
xor
mov
jmp
movsl
or
inc
adc
icebp
add
int3
jl
and
pop
hlt
ja
or
sbbb
push
daa
and
call
and
inc
jl
out
fwait
jmp
inc
icebp
fidivl
xchg
mov
or
jbe
dec
jmp
test
xchg
mov
outsl
in
in
test
mov
or
mov
mov
cmp
xchg
mov
jmp
test
or
lea
lahf
mov
dec
mov
decl
inc
dec
push
int3
mov
lret
add
fs
aad
cmp
jp
cltd
nop
jmp
pushf
out
fucom
mov
fs
daa
dec
popf
pop
nop
mov
call
pop
in
dec
les
imul
inc
lret
scas
and
cmpb
inc
adc
inc
movsl
and
or
leave
shl
adc
add
sub
xorl
std
rcl
clc
dec
add
rol
rcrb
iret
clc
or
inc
dec
loop
add
push
add
jne
lods
adc
jnp
mov
inc
or
sbb
jmp
lock
mov
pop
dec
and
sub
mov
ja
jns
add
push
mov
cmp
popa
test
sub
scas
and
adc
push
das
stc
enter
mov
xor
cmp
inc
lahf
mov
shr
mov
add
jne
sub
dec
jae
ds
dec
scas
rolb
mov
xchg
push
adc
stc
ljmp
dec
fdivrp
sbb
inc
mov
xorl
test
iret
cwtl
xchg
pop
jmp
test
sahf
and
nop
push
incl
cwtl
mov
xor
pop
sti
and
ds
pushf
xchg
sbb
and
pop
pop
dec
xchg
dec
jae
dec
cltd
lock
push
xchg
inc
faddl
pushf
push
xchg
pop
adc
pop
fwait
cmpl
jbe
dec
inc
xor
cmc
or
int3
mov
loop
in
or
mov
sbb
test
mov
lret
pop
add
push
ret
ljmp
std
rolb
add
mov
cmp
ret
add
loope
imul
hlt
add
imul
pop
mov
ds
sbb
dec
mov
inc
add
push
dec
sbb
push
call
out
cmp
xlat
add
scas
mov
pop
xchg
push
stos
mov
adc
xchg
inc
push
nop
sbb
mov
or
loop
es
jp
aam
push
or
ret
sbb
ds
es
xchg
sub
lahf
push
mov
xchg
aad
jne
xchg
mov
pop
xchg
bound
jbe
add
push
imul
inc
or
and
jge
adcb
pusha
mov
sub
inc
adc
jne
aam
xchg
mov
sub
int3
pop
or
sub
mov
aas
push
adc
mov
enter
roll
nop
outsb
cli
mov
pop
call
add
jmp
rcr
xchg
lahf
or
mov
mov
push
mov
ret
mov
sti
adcb
jmp
xchg
sahf
into
or
add
lea
lahf
push
mov
or
and
mov
mov
rcrb
mov
les
arpl
mov
xchg
jae
shl
iret
daa
je
dec
dec
add
outsb
and
ljmp
xchg
pusha
mov
inc
into
mov
sbb
sub
mov
test
xchg
xor
dec
push
sub
inc
fcomps
clc
push
pop
lea
gs
push
xchg
cmp
mov
lock
shr
mov
dec
xchg
mov
cmp
nop
cwtl
pop
call
aas
inc
xor
and
cmpl
jns
je
mov
lret
push
stc
pop
stos
addl
lret
push
mov
jmp
jae
push
dec
jno
scas
sub
add
ret
pusha
ja
mov
fnsetpm(287
mov
push
push
fdivr
iret
pop
add
aam
lret
and
mov
pop
adc
mov
fcom
xchg
in
add
xchg
pop
fimull
push
jecxz
mov
cs
hlt
xlat
test
or
ret
push
fnstenv
dec
je
add
out
dec
out
mov
sbb
nop
xor
outsl
cltd
sbb
dec
in
pusha
movsl
push
call
inc
lret
test
xchg
stos
xchg
imul
push
mov
aas
dec
scas
and
inc
adc
mov
out
in
mov
xor
mov
pop
cmp
test
add
mov
pop
clc
dec
pop
sub
test
xor
mov
xchg
stos
fs
and
xor
mov
js
call
xchg
fldenv
test
and
push
lods
dec
test
mov
sub
pop
mov
xchg
fmuls
and
arpl
mov
cmp
mov
mov
arpl
das
pushf
pop
lods
or
push
pop
aad
inc
insb
rorb
fidivrs
inc
scas
lds
jnp
mov
fnstsw
leave
or
xor
pushf
notb
jl
xor
mov
mov
inc
je
jmp
pop
or
aam
test
sahf
or
dec
cmp
decl
ss
sbb
scas
sub
mov
inc
lahf
mov
jmp
mov
and
adc
mov
mov
add
mov
mov
shrl
mov
push
call
jnp
jo
loop
adc
xor
mov
adc
movb
cmp
mov
orl
fsubr
jne
dec
pushf
mov
cli
js
xor
ret
mov
adc
mov
jmp
lods
shll
les
push
push
fs
dec
shrb
and
adc
sbb
adc
cmc
bound
add
aam
mov
push
inc
xor
ds
ret
or
adcl
or
sub
dec
mov
in
dec
clc
into
jmp
rcrl
ret
inc
sub
jg
pop
in
cmpxchg
fsubrl
adc
and
xchg
cmp
mov
stc
insb
in
mov
xor
lock
cmp
jecxz
aaa
add
cmp
cmp
popa
testb
cmp
dec
or
test
rorl
das
addb
pop
incb
test
sti
or
clc
xchg
testb
sbb
sub
xor
push
adcb
pop
movsb
adc
pop
add
in
daa
sub
add
pop
jmp
imul
loope
pop
sti
insl
push
pusha
out
adc
in
lret
push
add
inc
xchg
push
insb
jle
jecxz
adc
xchg
iret
ret
jecxz
int
xchg
mov
ffreep
dec
out
imul
push
icebp
call
cs
dec
mov
daa
inc
adc
mov
sub
cwtl
imul
not
sub
fisubrl
mov
add
outsl
cld
jmp
pusha
inc
lds
dec
jmp
loop
arpl
jmp
or
mov
lods
adc
dec
aam
mov
and
cmc
addb
push
test
jg
shl
fcomip
lods
xchg
subb
push
bound
jns
lods
imul
fs
mov
shlb
sarb
mov
push
mov
fisubrl
sub
cmp
ja
sbb
push
mov
mov
and
dec
adc
test
xor
cmpsl
insl
mov
test
popf
and
push
xchg
mov
cmc
pop
dec
jmp
addr16
sahf
popa
mov
inc
mov
fnsave
push
xor
mov
xor
in
pop
xchg
adc
mov
call
dec
jl
mov
in
lock
das
fstps
neg
daa
sub
inc
rcrb
and
test
or
mov
mov
scas
mov
mov
fs
pop
out
mov
push
cmpsb
and
dec
add
push
cmp
in
lahf
xchg
data16
add
pop
in
adc
xchg
subb
not
nop
xchg
mov
cltd
mov
xor
pop
out
ss
incl
sti
loope
push
adc
dec
pusha
jns
nop
sub
fcmovnu
lods
cmpsl
js
int3
push
mov
and
jmp
add
call
push
jecxz
mov
cld
xlat
daa
lret
movsl
jne
pushl
mov
dec
or
mov
inc
push
mov
aas
incb
call
fsub
mov
xchg
nop
rorb
loopne
cmpsb
testl
mov
cld
push
push
cmc
test
loop
sub
mov
mov
xchg
jp
adc
xchg
add
xchg
out
dec
stos
jno
mov
adc
mov
mov
or
stos
pusha
push
xor
adc
cmp
sub
les
cli
or
push
jle
cmp
pop
jae
or
pop
push
data16
push
lahf
xor
rorl
cwtl
cli
mov
nop
push
dec
pusha
cld
fiaddl
add
cmc
add
sub
jnp
or
add
push
push
jmp
fisttpll
sub
inc
add
pushf
and
adc
dec
mov
xchg
mov
fld1
sub
mov
add
lret
mov
dec
call
outsb
sub
rolb
pop
mov
outsl
jle
push
sub
and
bound
nopl
jo
push
loopne
or
es
rcll
mov
jb
inc
daa
push
out
push
mov
or
das
enter
lods
outsl
cmp
dec
dec
imull
jb
mov
movsb
dec
add
dec
fstl
push
pushf
hlt
neg
fwait
push
lret
mov
insl
jb
hlt
sub
mov
scas
mulb
adc
push
in
daa
push
add
mov
out
idiv
pop
inc
push
lods
call
scas
ja
jle
int
pop
push
js
ljmp
loop
cmpsb
flds
les
sub
aad
pop
fiaddl
push
xor
sub
aaa
push
div
scas
je
jb
lret
sub
jnp
mov
add
cmpsl
sahf
pop
sub
ret
sub
inc
pop
aad
jae
test
dec
rclb
mov
std
mov
ret
int
mov
cmp
orb
add
or
add
cli
cmc
cmp
push
cmp
jmp
push
lea
ja
stc
shr
sub
sub
sar
add
pusha
pushf
add
add
sub
and
bsr
mov
shl
setbe
mov
setne
mov
test
repnz
call
pop
pusha
and
int
imul
rcrb
popf
sbb
lret
mov
jo
jns
aam
fisubrs
cli
outsl
pand
ja
adc
sub
mov
adc
aad
and
ficomps
xchg
add
mov
fs
scas
xchg
jge
fwait
gs
jge
mov
xchg
pop
aaa
xchg
out
das
xlat
push
adc
ret
call
movsl
enter
mov
inc
mov
xchg
push
inc
and
jg
adc
push
push
inc
add
inc
inc
xchg
aam
mov
lea
jae
test
pop
mov
sbb
or
push
inc
ss
sbb
jnp
mov
push
push
or
rol
subl
mov
popa
mov
adc
pop
in
jno
ss
sbbl
pop
mov
sbb
add
cmp
enter
ljmp
out
mov
xor
es
imul
hlt
int
adc
das
sti
dec
or
xchg
loopne,pt
call
jno
cltd
mov
add
bound
outsl
jle
lods
jbe
add
loope
imul
mov
push
popa
xchg
pop
inc
mov
jns
cmp
inc
fdivs
mov
shl
lock
popf
xlat
pop
push
dec
mov
xor
imulb
hlt
mov
lcall
fisubs
nop
out
mov
mov
push
pop
mov
inc
mov
iret
jb
dec
rorl
and
add
mov
push
inc
movsl
and
dec
add
xor
xchg
push
mov
enter
leave
enter
iret
mov
mov
testl
sbb
or
xor
add
fdivp
mov
jl
and
mov
adc
mov
fldl
jnp
pop
stos
jae
js
xchg
mov
hlt
int3
or
fisubrs
scas
xchg
adc
mov
push
jge
es
cmc
mov
jnp
xchg
inc
mov
push
sub
stc
adc
adc
xor
int
out
mov
sub
sub
mov
xchg
cli
mov
and
repz
xor
dec
xor
fimull
jp
movsb
mov
adc
adc
stos
sub
jg
inc
inc
jbe
imul
sbb
fxch
dec
mov
pop
ret
mov
ljmp
int3
cmpsl
ficomps
sarb
mov
dec
xchg
mov
push
sub
add
faddl
and
mov
mov
jge
out
test
sti
xchg
mov
adc
mov
mov
dec
popf
sbb
ss
mov
int
add
mov
or
flds
push
scas
add
xor
out
pushf
jl
scas
clc
test
movsb
jge
fwait
ljmp
sub
pushf
push
jne
xchg
ja
fs
push
stos
mov
mov
lods
adc
mov
rcrb
scas
xchg
outsb
movsl
xor
lods
jno
push
adc
sti
mov
iret
stos
jb
push
scas
lods
add
adc
xchg
stos
pusha
sub
mov
push
movl
push
fcmovnb
out
mov
icebp
jns
or
ljmp
ljmp
inc
push
ss
insl
jecxz
sbbl
lahf
imulb
xchg
jnp
push
xor
fldt
daa
loop
daa
push
xchg
pop
mulb
ficompl
cmpsb
std
push
stc
bound
mov
lret
mov
in
mov
in
outsb
pop
mov
cmp
dec
mov
push
into
dec
test
arpl
xchg
shlb
mov
xchg
inc
cltd
mov
jmp
dec
mov
sbbl
insb
xchg
push
ljmp
jmp
pushl
call
xchg
adc
mov
mov
les
mov
xchg
imul
cmp
lds
sti
mov
addr16
incb
dec
ss
fsubrs
ja
pop
rcrl
push
shrb
repz
pop
pop
cmp
gs
xchg
cmc
dec
bound
mov
xchg
lcall
iret
jns
sti
loope
add
sub
lock
or
fldz
mov
fisubrs
mov
mov
int3
pop
psrlw
ret
push
pop
outsb
pop
push
int
mov
stos
mov
cld
adc
cmovp
sub
xchg
call
cmp
add
xchg
fildl
or
scas
insb
lods
aad
push
pushf
mov
fdivl
pop
xor
xor
les
push
jg
bound
arpl
mov
jnp
add
fwait
or
mov
inc
xchg
push
mov
mov
dec
xchg
stc
sti
ret
mov
mov
xlat
dec
adc
loope
popf
mov
adc
int3
inc
push
fsubl
int
fcoml
js
mov
addr16
repnz
mov
out
fidivrs
cmpl
fwait
inc
mov
cmc
mov
daa
imul
or
push
icebp
mov
cs
add
sub
inc
in
lahf
js
xor
daa
cmp
adc
add
bound
jbe
push
cld
popa
imul
mov
repz
movb
loope
mov
mov
fimuls
loope
add
clc
bt
pushf
test
call
cmc
daa
push
mov
sbb
loopne
push
call
push
in
jg
sbb
lock
out
xor
sbb
mov
inc
enter
insb
pushf
out
mov
shrb
xchg
dec
lret
mov
orl
push
ljmp
adc
mov
mov
addr16
jae
or
pop
add
pop
sbb
push
add
sahf
dec
out
imul
mov
pmullw
dec
and
mov
rcr
je
in
jg
inc
dec
push
inc
stos
je
dec
incl
rcll
xor
outsl
xor
cmpsb
sub
fnstsw
icebp
iret
loop
jmp
test
rorl
mov
and
lods
pop
mov
stos
in
pop
add
and
pushf
bound
or
stos
inc
push
lahf
frstor
nop
mov
xchg
jo
cmp
lret
call
lcall
sti
adc
aas
jmp
aas
xor
pop
test
sbb
movsl
jl
or
loopne
and
inc
leave
pushf
repz
xchg
jno
test
sarb
ret
sbb
inc
sub
xchg
jnp
inc
jl
imul
rorb
test
int3
push
xor
lods
hlt
dec
sub
xor
loopne
mov
add
push
xor
cmp
xchg
lahf
dec
mov
nop
cmpsl
adc
or
dec
or
out
pop
ret
adc
adc
loopne
jae
or
nop
mov
add
sbb
xchg
or
pusha
clc
imul
test
cmp
test
add
pushf
mov
pusha
pushf
lea
jmp
sbb
mov
lea
push
pushf
cmp
jmp
movb
lea
je
pusha
test
pushf
push
cmp
call
sbb
shl
shr
sub
push
mov
pushf
mov
mov
pusha
jmp
lea
call
ftst
cli
addb
xor
and
insb
notb
add
ljmp
jle
mov
gs
outsb
sahf
dec
sbb
shrb
inc
xlat
xchg
repz
and
and
loop
cmpsl
enter
jae
in
xor
stc
sti
or
xchg
rcr
orl
mov
cmc
jmp
add
sub
mov
add
xor
movzbl
sbb
mov
xor
push
call
hlt
fs
pop
or
inc
cmc
add
dec
and
aad
cwtl
add
pop
push
ret
sarb
je
lcall
xchg
inc
jg
xchg
push
js
pop
dec
fcomps
iret
mov
dec
and
fdiv
jmp
inc
cld
daa
popf
rol
jae
hlt
or
call
push
sub
aad
add
jno
subl
ret
push
add
pushf
xchg
sub
adc
sbb
cltd
sbb
push
bswap
sbb
sbb
xchg
pop
mov
pop
lcall
add
repnz
add
or
xor
xchg
pushf
pop
xor
or
call
adc
fcoml
arpl
mov
mov
xor
push
mov
bswap
mov
xchg
cmp
call
xchg
testl
dec
enter
pop
add
cmpsb
fcomip
pop
sbb
pusha
rclb
mov
xchg
leave
jo
pop
dec
dec
or
call
push
mov
pop
pusha
jbe
int
xor
inc
arpl
inc
xchg
add
lods
ss
xchg
call
in
push
xchg
shll
inc
nop
hlt
sub
or
notb
sbb
out
nop
mov
push
mov
mov
not
pusha
pop
mov
mov
adc
inc
out
cvtdq2ps
sub
xchg
mov
xor
jno
sar
into
add
rclb
sbb
add
add
negb
jmp
cmc
pushf
nop
call
cwtl
mov
cmp
jno
push
push
or
adc
inc
hlt
cwtl
jge
andb
jb
call
xor
pusha
pushf
pop
sbb
leave
adc
pushf
and
faddl
outsb
pop
cmpsb
sub
and
dec
push
rol
aad
cmpsb
repnz
movsl
or
call
add
nop
jge
xchg
or
cmp
mov
negl
dec
sarl
scas
out
push
mov
sub
arpl
fwait
or
push
push
mov
jmp
push
call
push
ret
jae
mov
jecxz
or
add
add
adc
out
cs
mov
sbb
push
mov
cmp
xchg
movsb
cmp
sub
mov
add
leave
mov
jecxz
cs
cmp
movsl
pmullw
or
adc
dec
xor
pushf
mov
sub
test
aaa
mov
shll
pushf
xchg
inc
add
jns
enter
nop
adc
xor
sub
and
out
nop
mov
mov
mov
arpl
cmp
xchg
lock
lock
push
inc
xchg
popa
call
popf
and
inc
add
cmpsb
daa
jg
call
inc
addl
pop
xchg
bound
sahf
fildl
mov
aad
add
inc
data16
hlt
int
mov
xchg
adc
lcall
push
xor
cmp
push
mov
sar
or
bound
lahf
mov
iret
nop
and
aaa
cmp
inc
dec
mov
or
cmp
call
es
ret
lret
inc
mov
push
xor
jmp
nop
and
pop
mov
or
aaa
jno
fisubrs
cwtl
inc
lea
lods
pop
mov
lock
out
lods
pop
add
mov
mov
xchg
scas
or
call
je
xchg
add
lds
mov
push
int
rclb
ds
mov
add
scas
or
add
dec
loopne
jb
push
int
jle
xchg
jmp
cmpl
xchg
pusha
xchg
popa
or
loopne
test
xchg
hlt
addb
xchg
bound
enter
and
movsb
stc
sub
xchg
adc
mov
mov
or
into
es
cmp
sub
sub
mov
sub
push
rcll
or
push
cmp
push
mov
inc
sbb
and
lahf
clc
sub
push
sahf
shrb
loopne
inc
nop
xchg
cwtl
ret
add
adc
cld
xchg
cld
test
stc
push
or
mov
dec
pop
je
andl
cltd
sub
call
dec
les
shr
fidivrl
popa
dec
ret
hlt
xchg
adc
aaa
add
fwait
shlb
lods
sub
or
mov
xor
shr
not
add
fucom
in
pop
inc
in
cmp
mov
mov
les
sbb
lock
dec
xor
rcrl
add
lds
leave
adc
pushf
sahf
or
cmpsl
ret
cmp
lea
jnp
dec
aam
or
jo
cmp
in
dec
mov
cmpsl
pusha
jmp
out
pop
pop
jno
lock
into
adc
push
push
pop
xor
lods
add
push
push
jmp
cmp
movsb
sbb
jo
ljmp
cmpsl
mov
xchg
add
push
icebp
arpl
inc
mov
jecxz
js
pusha
sub
lds
cmp
or
dec
ljmp
mov
push
hlt
inc
sub
and
aaa
sub
mov
add
out
in
jno
in
xchg
rcrl
in
pop
push
loopne
xor
inc
stos
dec
sub
add
mov
jmp
sbb
and
xchg
lods
fistps
sahf
mov
sbb
and
arpl
fwait
mov
mov
fimuls
mov
mov
test
push
mov
cs
nop
adc
std
push
sbb
mov
dec
xor
mov
and
add
in
and
stc
and
cmpsb
icebp
roll
add
cltd
cmpsb
mov
jne
hlt
pusha
cltd
sbb
lcall
mov
mov
mov
xchg
jmp
loope
pushf
and
mov
inc
popa
lock
dec
dec
test
inc
nop
aam
stos
into
dec
jmp
add
jno
fcoms
xor
and
mov
push
xchg
jbe
xchg
sub
cmc
ret
outsb
sub
jge
push
pop
xor
pop
cmp
push
cmpb
jbe
mov
sbb
lea
sbbb
lahf
fucomi
sahf
push
test
out
dec
mov
popa
dec
cmp
into
jp
mov
andl
ja
xor
xchg
ret
in
test
add
add
or
jge
sub
pop
push
or
inc
pusha
sbb
xchg
jae
xchg
and
or
rcrl
mov
stc
cwtl
mov
movsb
pop
xchg
rcrb
adc
pop
dec
inc
lahf
pop
dec
cs
cmp
rcll
xor
add
push
cmp
adc
mov
cmp
and
push
push
sbb
mov
sahf
fs
insl
enter
clc
mov
and
fsubrs
and
pop
mov
fistpl
cmc
add
jne
or
orl
add
sub
pop
xor
jge
lods
adc
push
inc
jmp
push
cmp
and
sbb
push
rorl
nop
and
cmp
icebp
stc
dec
push
or
add
shll
leave
popf
xchg
aas
notb
shlb
or
dec
lcall
dec
insb
les
jl
and
inc
adc
stos
mov
and
loope
dec
adc
daa
dec
mov
enter
adc
push
push
mov
pusha
mov
adc
jno
xor
push
out
xchg
sub
in
add
imul
pop
cwtl
mov
lahf
cvttps2pi
or
pushf
loope
daa
fstpl
and
nop
dec
mov
nop
lock
push
mov
xor
cmpsb
fs
add
cmc
dec
or
mov
pusha
not
nop
testb
mov
inc
nop
jg
and
dec
int3
insb
andb
adc
lds
lret
enter
loop
xor
add
ficoml
jmp
test
or
pop
sub
pusha
out
and
push
mov
dec
test
adc
dec
dec
mov
push
test
outsl
inc
xchg
andb
sbb
pop
clc
fsubr
mov
dec
pop
dec
xor
sub
test
xor
push
pop
pop
mov
lahf
cmp
adc
xchg
sti
xchg
pop
gs
push
and
lea
ret
mov
add
cwtl
lea
fwait
xor
and
rorl
movsl
add
add
xchg
xchg
fwait
cmp
aas
dec
sbb
ds
sub
jns
pushf
xchg
dec
cmpsb
add
lea
aaa
bswap
sahf
cmp
in
jmp
add
jne
lds
jno
repz
inc
adc
iret
or
sub
hlt
add
les
rorl
pusha
clc
inc
inc
call
pop
orb
int3
test
fiaddl
sbb
jl
mov
jae
in
cli
sbb
mov
sub
xor
testb
adc
xchg
xor
and
cli
push
push
push
pushf
test
or
mov
push
cltd
push
inc
inc
bound
mov
adc
dec
lock
xor
dec
decb
dec
mov
fwait
xchg
insb
dec
mov
or
in
add
cmc
push
scas
mov
fwait
push
pmulhuw
and
shlb
or
popf
cltd
inc
fistl
sub
daa
cld
out
mov
push
sbb
pop
pusha
mov
dec
sub
sub
xor
ss
sbb
jmp
dec
ljmp
and
push
rcl
cmp
loop
sbb
pop
push
inc
addl
sub
insl
pop
dec
pop
les
and
inc
not
sub
xor
cvttps2pi
jb
push
xchg
cmp
or
and
mov
xor
sub
or
cwtl
orb
mov
dec
jns
add
dec
mov
mov
arpl
xchg
inc
xchg
sub
mov
xor
mov
movsl
add
aaa
lock
jno
sbb
sbb
sub
push
jmp
lds
inc
iret
push
inc
or
pop
jg
and
jno
jmp
in
movsl
mov
ret
aas
enter
call
jmp
push
bound
test
adc
push
dec
daa
push
adc
pop
xor
cmp
repnz
stc
cmp
xorl
iret
rcrb
mov
push
and
xchg
add
dec
xchg
addl
adc
push
test
push
cmp
mov
or
cs
loopne
cwtl
data16
sub
fsubl
aas
js
rcr
inc
jmp
jmp
sbb
add
cmp
loopne
rcll
cmp
sub
movsb
and
pusha
jmp
pop
xchg
add
sub
dec
out
pop
pushf
push
cmp
xor
nop
pop
jb
ret
fidivl
loopne
aas
outsl
mov
and
dec
xor
adc
inc
push
bound
out
add
jne
mov
sti
pop
xor
pusha
inc
sbb
mov
xchg
movsb
dec
rorb
stos
andl
xchg
lods
inc
adc
push
repnz
testl
ret
lods
xchg
inc
test
adcb
pusha
cld
test
and
sahf
xchg
lret
inc
inc
repnz
xor
sbb
dec
js
pop
lods
ret
and
or
push
faddl
dec
push
lret
add
add
shlb
subb
inc
mov
repnz
jecxz
cwtl
jp
pcmpeqb
push
inc
cmp
shrb
popa
add
push
rorb
push
leave
pusha
addr16
push
or
push
add
inc
adc
call
add
movsl
lcall
push
es
aam
jge
push
sub
push
addb
jno
fmull
sub
dec
ret
adc
imul
xor
repnz
add
loopne
dec
push
push
fldt
inc
movsb
push
pushf
push
and
push
pop
pop
lahf
push
push
fisubrs
add
adc
fdiv
push
dec
pusha
fs
stos
sub
das
sbb
mov
jmp
pop
push
insb
test
es
jl
ficoms
push
adc
adc
lods
aas
dec
hlt
pusha
jb
fs
add
pusha
mov
mov
mov
push
decb
mov
add
pop
cmpsb
idiv
adc
in
lds
pop
push
jecxz
aam
lret
and
mov
pushf
dec
lock
push
push
or
cmpl
jbe
out
nop
adc
sbb
call
mov
xor
push
pop
movsb
push
xor
push
clc
adc
nop
adc
iret
fs
test
sbbb
jmp
push
jp
mov
mov
mov
or
lock
mov
sbb
sub
xchg
add
xchg
andb
flds
xor
shr
mov
push
mov
mov
or
push
jmp
or
cwtl
nop
xor
jae
rolb
cmp
bound
das
sub
or
add
add
jae
push
cmp
add
test
mov
xchg
pop
les
fisttpll
xchg
push
bound
ljmp
push
xchg
pushf
xchg
mov
mov
das
adc
pushf
cmp
pop
jmp
and
hlt
adc
dec
push
int3
in
add
adc
jns
or
lods
jp
mov
mov
data16
adc
dec
push
stc
mov
or
cmp
mov
loope
and
jmp
sets
fs
nop
lods
sub
adc
and
lret
mov
jmp
sbb
or
mov
rorb
push
stc
mov
jg
push
sbbb
mov
or
xor
popl
ficoml
xchg
les
mov
add
pop
push
jg
add
jmp
or
adcl
mov
xchg
adc
pushf
mov
sbb
mov
fs
fld
insb
rorl
fists
ret
adc
aad
and
sub
add
xor
test
cmpsl
rcrb
jge
jl
jo
dec
add
andl
cmp
add
pop
mov
shl
not
adc
test
outsb
adc
mov
add
mov
pop
pop
stos
xchg
inc
mov
les
cltd
push
sbb
or
mov
cbtw
push
hlt
dec
pop
push
mov
mov
sub
test
mov
pop
jb
stos
aad
repz
cmp
movsb
fwait
or
jmp
push
cmc
orl
test
sbb
jl
sub
add
fnsave
arpl
out
cmp
into
sbb
dec
cmpsl
icebp
lods
sahf
dec
inc
mov
lret
and
lea
inc
pop
push
or
mov
andl
xchg
leave
fisubrl
dec
sbb
xor
and
pop
and
out
inc
or
es
pop
pusha
push
jmp
push
mov
mov
or
rol
jmp
repz
jecxz
jge
push
add
orb
negl
and
xchg
lds
or
mov
jg
loopne
adc
daa
and
push
jno
push
push
inc
and
out
or
mov
aas
adc
mov
push
aas
or
or
xor
lea
fstp
xchg
test
sbbl
mov
jo
mov
inc
aaa
dec
dec
jmp
xchg
div
sbb
and
lock
mov
inc
inc
ss
or
addl
mov
push
ss
push
inc
sbb
cmp
pop
push
or
ret
adc
test
std
xor
push
or
add
pusha
or
xchg
imul
out
xchg
pop
pop
adc
xchg
sbb
sub
lret
dec
pushf
movsl
fsubl
or
outsl
fiaddl
cmovne
mov
dec
mov
sbb
add
jmp
pop
dec
push
outsl
cltd
push
add
push
xchg
jmp
nop
sbb
iret
xchg
cmp
repz
mov
push
or
pop
popa
push
mov
xor
fstps
push
insl
cmpsl
fimuls
push
sbb
fistps
xor
mov
adc
pusha
pop
lahf
nop
not
aam
mov
inc
sahf
enter
popa
fsubr
divps
sbb
pushf
sub
cmp
cmc
not
sub
leave
mov
rorl
int
inc
imul
dec
movsb
jg
jmp
or
and
or
aas
push
pushf
jle
mov
mov
push
jae
rolb
or
call
daa
cmp
xor
xchg
rep
pop
add
xchg
mov
clc
xchg
push
and
subl
add
or
scas
data16
push
jno
jo
call
ss
mov
sbb
shlb
je
cld
fsubl
push
sub
jnp
sub
add
cmp
or
cmp
out
loopne
pusha
jb
xor
hlt
cmp
mov
xchg
mov
pop
repz
fidivrl
dec
or
inc
mov
or
pop
repnz
das
pop
lret
out
out
xor
xchg
xor
jne
jne
xchg
cmp
mov
ss
dec
mov
add
cmc
stc
cmp
xchg
mov
mov
pop
or
push
cwtl
std
out
mov
push
and
inc
ror
add
mov
pushf
int
shr
stc
sar
mov
push
sub
jb
push
call
or
es
cld
addl
mov
cmp
xor
sub
push
movl
add
xor
and
pop
inc
add
push
push
icebp
sbbb
mov
sbb
cwtl
xlat
nop
push
daa
or
leave
push
lret
bound
nop
sti
andl
cmp
mov
push
xor
setbe
push
xchg
pop
push
out
daa
cli
mov
push
call
add
jmp
or
sbb
sub
push
std
sub
add
popa
jmp
mov
lahf
adc
mov
xchg
sub
inc
dec
cmp
call
mov
jg
pushf
add
push
mov
mov
das
jb
adc
push
push
adcl
pop
stc
mov
pop
jno
or
ret
cmp
imul
rorb
mov
add
add
mov
dec
mov
adc
test
dec
push
popf
or
inc
pushf
mov
or
and
or
xlat
mov
int3
mov
adc
mov
cli
and
out
pop
pop
push
clc
cmc
adc
adc
into
push
jle
inc
lret
imul
and
call
sub
outsl
push
lods
out
cltd
lahf
addr16
dec
and
xchg
inc
mov
ret
push
push
push
sub
mov
sub
punpckhbw
fdivrs
fnstsw
xor
sbb
arpl
mov
pop
cmp
pushf
popa
outsl
jp
and
dec
pop
xlat
add
lea
sub
jp
push
cmpsb
pop
dec
scas
push
push
xchg
cld
sbb
nop
scas
gs
xchg
mov
call
cmp
pop
scas
mov
adc
movsl
xchg
add
push
cmp
repnz
int
mov
lea
xchg
mov
popa
fisubrs
mov
xchg
testb
pop
pop
rclb
xor
add
lea
loop
mov
xchg
push
sub
sar
sub
and
subb
add
imul
sub
push
lods
lds
fs
pop
scas
cmpsb
arpl
cmp
add
xchg
addb
xor
push
pop
stc
cltd
enter
xor
arpl
lods
lock
dec
inc
pusha
test
jne
rcll
movsl
add
mov
xchg
or
rcrb
inc
push
sbb
cmpsl
aaa
rolb
pop
xchg
pop
mov
fldenv
mov
adc
scas
mov
inc
pushf
movsb
xchg
sub
adc
test
loope
pusha
xchg
dec
cmp
ss
cltd
nop
push
pusha
movl
aas
mov
loope
mov
or
cwtl
je
ret
shrl
lock
scas
inc
pop
adc
aad
xchg
add
inc
movsb
mov
dec
scas
xchg
sbb
dec
dec
stos
mov
and
xchg
movups
adc
xchg
shrb
mov
sub
push
lods
jo
pop
or
aam
mov
aam
mov
pop
out
outsl
add
push
sbbb
sub
decb
push
call
jle
add
push
cmp
faddp
incb
or
mov
iret
add
into
fimuls
adc
pop
movsb
clc
leave
jns
hlt
lret
xchg
sbb
into
cmp
or
mov
adc
jle
mov
xor
push
push
mov
cs
jns
add
jg
or
xchg
xchg
ljmp
lahf
into
cmp
mov
lcall
cmp
cmp
stos
dec
pop
fwait
pusha
lea
fsubrs
shll
in
call
notb
xor
or
gs
pushf
jmp
xchg
xor
insb
xor
bswap
ret
cld
adc
fdiv
fs
js
xor
in
jmp
pusha
filds
enter
push
xchg
or
push
loopne
daa
dec
mov
test
push
nop
insl
or
mov
fcmovnb
js
pop
rcrb
std
xor
jge
clc
jle
fwait
xchg
cltd
xor
mov
inc
or
aas
fsubrl
add
pushf
xchg
mov
popf
xchg
pop
push
jb
mov
pusha
mov
gs
scas
mov
data16
add
daa
dec
mov
in
fistps
int3
aad
adc
fwait
mov
decl
add
pusha
mov
jns
pop
pop
test
test
dec
sub
mov
mov
mov
mov
adc
adc
pop
je
in
frstor
push
repnz
cli
mov
adc
scas
pop
sbb
lahf
xchg
shrl
enter
mov
push
mov
mov
in
xchg
mov
sarb
loop
sub
push
mov
or
push
xchg
mov
or
inc
imulb
add
jp
rolb
mov
inc
or
jnp
leave
jo
inc
mov
sub
xchg
push
sub
push
outsb
nop
add
jmp
loop
mov
and
jno
imul
jl
fsts
rolb
xlat
and
int
sahf
inc
push
loopne
test
push
call
push
test
mov
sub
iret
xchg
add
sub
lods
add
jge
sbb
lea
int3
dec
and
mov
or
inc
push
mov
sub
push
pusha
push
sbb
nop
jmp
xchg
scas
pusha
xlat
xchg
je
add
fdivp
rcrb
fs
jmp
xchg
out
pushf
daa
push
jl
push
loope
add
test
adc
mov
cs
adc
push
enter
adc
push
movsl
or
mov
into
and
or
shlb
fadd
or
mov
cmp
add
mov
jbe
push
add
and
sbb
out
sub
and
dec
sub
sbb
push
sarl
mov
out
xchg
pop
cmp
arpl
pop
mov
mov
aad
mov
xor
mov
int
and
daa
push
xor
subl
fnstenv
push
adcl
cmp
dec
cmp
pop
cmp
pusha
sbb
stc
ret
mov
push
stos
sub
cmp
daa
popa
xor
and
mov
jmp
push
mov
clc
ret
sub
or
dec
push
nop
sub
pusha
int
and
pop
mov
cwtl
mov
aaa
testb
push
jne
inc
arpl
pop
xchg
in
std
sbb
scas
xchg
xor
add
stos
test
lcall
cmp
xchg
inc
xor
mov
roll
cld
and
outsl
dec
cld
dec
call
sub
stos
xchg
cld
pop
xorb
ret
pop
ret
mov
sub
or
push
mov
sub
pop
js
sub
sub
xchg
mov
sahf
in
jo
adc
sub
adc
add
jge
pop
sub
mov
pushl
mov
aas
add
and
stc
xor
push
lcall
orl
pushf
inc
sub
cvtps2pi
jle
push
daa
into
or
mov
cmpsb
ljmp
xchg
loope
ljmp
aaa
xchg
popa
jmp
xchg
outsl
mov
lods
push
daa
or
inc
jns
adc
sahf
in
loop
sub
ljmp
call
dec
dec
adc
jmp
add
in
or
call
dec
sbb
test
clc
pushf
stc
or
in
push
mov
add
out
pushf
dec
adc
jl
xor
rcrl
jnp
jb
add
stos
pop
pop
push
in
fwait
adc
mov
mov
outsb
mov
out
and
push
pushf
dec
clc
bound
and
push
sub
inc
pop
cld
push
mov
inc
mov
mov
inc
in
mov
or
adc
aaa
push
repnz
and
not
sbb
nop
in
mov
lcall
pusha
mov
dec
imul
ljmp
pop
rcll
in
push
out
cmpsl
mov
cmp
cmp
fxam
sub
mov
mov
add
add
cmp
movb
fs
inc
jmp
add
test
mov
scas
cmp
and
imulb
inc
mov
inc
pop
add
pop
mov
inc
repz
test
push
jmp
inc
adc
sbb
sub
jmp
add
in
divb
mov
push
jmp
sub
push
xor
and
ret
int3
fsubs
loope
imull
clc
adc
inc
pop
cmp
inc
adc
xchg
or
fstpt
pusha
lahf
lea
or
insl
imul
cmp
sub
rorb
and
or
call
fs
sub
faddp
sbb
mov
push
mov
cmp
add
dec
add
jl
cmp
add
sub
mov
mov
adc
mov
lock
adc
jmp
adc
sub
test
sub
mov
mov
lock
or
mov
inc
and
adcl
or
xor
xchg
popf
imul
fadds
call
lock
xor
lea
pusha
imul
loop
pop
mov
mov
adc
in
xor
jp
mov
xor
jg
push
repnz
out
mov
dec
sub
cli
fadds
das
in
lret
daa
jmp
mov
mov
es
bound
dec
fcoms
ret
sbb
dec
adc
and
shl
mov
push
vorpd
add
stc
shr
movb
int
shl
add
rorb
mov
dec
mov
dec
and
or
jno
js
pop
pushf
push
pusha
cmpsb
bound
call
mov
mov
jne
mov
add
ds
push
or
leave
xchg
js
sbb
mov
out
loopne
ds
repz
loop
push
loop
dec
xchg
adc
adc
mov
loop
add
inc
jecxz
adc
pop
rclb
add
enter
xor
movsl
aad
mov
bound
adc
xchg
mov
shl
xchg
inc
jge
sbb
imul
cmc
shrb
mov
in
pop
and
cli
arpl
adc
data16
mov
and
lahf
jmp
lds
les
call
mov
sbb
mov
mov
test
subl
add
cmp
pop
sub
mov
pop
xchg
adc
cli
mov
pushf
lods
and
lret
outsb
lea
cld
mov
jmp
js
dec
test
mov
inc
sarl
daa
ljmp
mov
fists
push
xor
sbb
pop
test
push
pop
add
jmp
cmp
mov
popa
jmp
ret
adc
sub
lret
loop
test
sbb
xchg
push
xor
jmp
mov
sub
inc
mov
xchg
xor
fs
sbb
iret
pop
pop
call
jae
inc
pushf
rolb
push
adc
inc
cmp
xchg
outsl
or
adc
rcrl
inc
xor
lcall
rol
mov
call
jle
adcb
jge
xor
scas
mov
repz
or
popa
jp
dec
cmp
test
dec
popa
xorps
xchg
sbb
adc
pop
ljmp
movhps
das
sti
jno
mov
jmp
repnz
test
adc
mov
sbb
pop
out
test
ja
pop
xor
les
xor
ret
lods
loope
sub
add
in
or
dec
add
aaa
mov
add
push
sub
jmp
leave
sub
push
jmp
jle
stc
and
and
out
cmpsb
jns
or
in
rolb
xchg
add
sub
add
xlat
inc
and
hlt
into
iret
adc
mov
push
mov
xchg
mov
test
pop
xlat
seto
leave
pushf
fs
shll
mov
adcl
jmp
dec
jnp
push
push
pop
lods
rol
into
jne
shr
mov
fistpl
loop
nop
inc
sar
in
adc
jmp
sbb
ss
push
and
pop
xchg
dec
jp
loope
out
mov
notb
xor
mov
mov
and
cwtl
test
cmp
mov
sbb
and
xor
add
or
int3
xchg
xchg
cmp
mov
adc
dec
dec
inc
dec
mov
ds
ss
out
rcrb
mov
dec
mov
pop
pushf
in
jecxz
cmp
add
jmp
lds
jno
dec
aas
mov
adc
es
lret
int
pop
pop
mov
nop
push
dec
jmp
imul
out
dec
ret
shrb
in
sub
out
les
cmpsb
ret
push
mov
sub
dec
repz
fisttpl
push
das
pop
mov
data16
movsb
push
dec
rclb
repnz
jbe
dec
test
xor
das
xchg
mov
and
jnp
push
lods
add
nop
call
jg
adc
mov
mov
call
cwtl
mov
xchg
insb
mov
and
stc
lds
inc
and
mov
dec
push
cmp
mov
push
xchg
sbb
push
jne
rdtsc
push
insl
inc
pusha
stos
and
or
add
dec
add
sahf
mov
xor
adc
mov
lret
fdivl
inc
mov
mov
std
dec
es
adc
movsb
scas
or
add
cmp
push
mov
pop
push
jecxz
inc
cmp
cltd
sbb
imul
ljmp
add
pusha
mov
imul
insb
mov
push
inc
xor
add
and
and
and
daa
xorb
decb
or
cwtl
push
call
stc
cmp
ds
inc
mov
loop
repz
jmp
arpl
ror
gs
out
fldt
movsl
aaa
cmp
pop
or
in
inc
and
mov
dec
inc
fucomi
pop
ficoml
popa
mov
add
push
in
mov
push
push
sbb
pop
cmp
push
mov
repnz
mov
das
and
mov
stos
xchg
jmp
leave
mov
rcrl
adc
xchg
outsl
fcoms
mov
push
aas
and
shlb
sbb
inc
mov
pushfw
push
sbb
movsb
lcall
fidivs
jae
xchg
outsb
sub
cs
mov
sbb
jno
in
pop
gs
inc
push
enter
sbb
jne
mov
call
or
jo
add
rol
xchg
mov
test
xchg
imul
fbld
inc
add
call
push
jns
dec
aaa
decl
sti
adc
pusha
xchg
or
add
add
sbb
jmp
mov
mov
push
jmp
pop
sarl
sub
push
push
bound
mov
xchg
and
mov
shlb
leave
mov
inc
cmp
cwtl
xchg
mov
xlat
outsl
loopne
inc
test
subl
mov
iret
ljmp
and
jg
mov
test
add
call
add
lods
dec
pop
xor
cwtl
shr
mul
stc
xor
push
mov
pop
mov
cltd
shlb
add
cmp
adcb
daa
mov
sti
sub
mov
mov
daa
jb
add
or
out
pop
push
fcoms
mov
enter
mov
stc
pop
xchg
andl
ret
arpl
or
or
nop
clc
xchg
mov
dec
mov
adc
push
ror
jmp
sbb
xchg
lea
xchg
xchg
lcall
xlat
mov
mov
scas
aad
out
dec
lods
loop
dec
enter
test
push
call
sub
add
daa
not
clc
in
sub
push
sub
mov
jge
popf
push
jle
es
bound
and
lock
icebp
lods
push
sbb
xchg
test
mov
nop
jb
adc
mov
adc
cmp
in
mov
or
jle
mov
add
call
add
loopne
lds
xor
roll
pushl
leave
stc
mov
jmp
and
and
out
bound
sub
insb
and
enter
or
nop
mov
popa
les
mov
js
call
push
popf
pop
and
or
and
js
pop
jmp
or
lcall
das
xor
sarl
xor
sub
sbb
lret
sbb
push
and
cmp
mov
pop
rolb
pop
scas
cmpsb
pop
or
and
mov
arpl
pusha
pop
mov
test
dec
gs
add
jne
in
jg
rcll
and
js
popf
inc
outsb
repnz
xor
movsl
out
dec
xchg
nop
cmp
or
jnp
fisubrl
scas
and
or
push
clc
movsl
or
or
ret
or
in
nop
dec
mov
mov
call
jecxz
adc
and
ret
movsb
fisttps
pushf
jbe
ret
pop
sbb
and
cmpb
call
or
adc
push
or
add
xchg
push
mov
mov
call
sub
das
stc
jmp
cli
pop
add
and
xchg
stos
or
imul
fs
jmp
sbb
not
nop
push
iret
lods
mov
movsb
and
push
es
jmp
push
cmp
addl
ret
jge
enter
rolb
sub
mov
sub
ss
cmp
ljmp
pop
pop
lods
imul
xorb
mov
mov
pop
jne
es
cmp
xchg
xchg
out
mov
mov
mov
cs
loop
or
sbb
out
or
popa
fs
and
sbb
cmp
dec
xor
das
lea
aas
sahf
pop
adcl
cwtl
dec
sub
daa
orl
xchg
sub
out
pop
dec
xor
adc
or
jne
dec
pop
loop
fcoms
add
push
mov
inc
insl
adc
sar
push
imul
in
add
out
push
call
repz
pmullw
call
cmp
imul
or
ret
repz
lods
or
outsb
imul
outsb
dec
cmp
fdivrs
out
jmp
sbb
out
pop
add
mov
outsb
hlt
and
lahf
mov
mov
test
sub
sub
mov
cwtl
andl
xchg
push
inc
movsl
cmp
push
pusha
jmp
mov
dec
push
or
into
cmp
and
push
adc
and
cmp
cmc
push
pushf
cs
insb
cli
mov
mov
pusha
pop
ljmp
repnz
xor
incl
aad
call
sbb
xchg
adc
daa
add
inc
fisubl
out
push
insb
sti
jmp
iret
int
adc
add
lret
mov
adc
bound
jbe
add
sbb
or
adcl
call
andb
sti
ja
out
xor
pop
cmpsl
mov
inc
sbb
inc
int
xchg
cmp
jmp
xor
or
mov
lret
not
mov
in
adc
add
xlat
adc
lahf
xchg
dec
adc
pop
out
or
jmp
inc
repnz
mov
std
xor
icebp
jno
sbbb
mov
jb
jmp
les
jo
xor
inc
pop
mov
sahf
mov
and
xor
leave
out
cmp
jns
jp
mov
outsb
jg
and
mov
ja
insl
fwait
sbbb
leave
pop
dec
movsl
mov
ljmp
loope
fucom
rclb
das
mov
nop
imul
les
mov
or
mov
pop
xorb
pushf
mov
mov
mov
mov
lahf
in
mov
mov
add
repnz
cwtl
or
jecxz
and
sub
loopne
cmp
aas
test
cmpsb
outsb
mov
jmp
mov
imul
add
push
add
mov
jb
ss
or
or
mov
adc
roll
pop
mov
jmp
push
mov
mov
sbb
dec
mov
mov
push
lea
lret
add
cmpl
lret
lock
inc
add
call
inc
and
loopne
loop
lods
jmp
pop
cmpsb
xchg
jg
mulb
adc
add
cmpsb
push
data16
mov
lret
daa
add
fs
sub
std
sub
call
jge
mov
sbb
stos
and
jmp
or
loope
ficoml
nop
in
pop
lret
fdivrs
mov
lods
adc
cld
push
insb
dec
xor
xchg
rolb
cmpb
adc
jmp
psrld
test
cmc
inc
nop
push
imul
mov
pop
push
enter
mov
or
sub
jne
hlt
add
mov
movsb
js
jecxz
movsl
mov
add
inc
pop
pusha
push
in
jbe
and
sub
jnp
andb
cmp
mov
rolb
fidivrl
jmp
cmpl
mov
fidivs
nop
inc
push
imul
xor
mov
mov
adc
incl
out
ss
push
push
das
mov
push
loopne
lods
in
fs
or
push
pushf
jmp
add
or
push
mov
fisubrl
scas
dec
or
cmpsl
adc
pop
push
mov
fs
les
mov
jl
mov
test
xor
sarl
arpl
sub
pop
lahf
scas
mov
jmp
test
xor
inc
sub
mov
mov
mov
dec
pop
jb
fnstsw
rorl
call
pop
adc
ss
in
stos
mov
mov
lahf
cli
popa
das
cmp
jae
push
pushf
mov
or
notl
pop
xor
std
push
in
xorl
addb
call
clc
popf
stos
sub
and
pop
xor
dec
gs
test
or
pop
stc
sbb
fdivl
fwait
test
mov
ret
nop
or
test
mov
jmp
stc
add
inc
cmc
and
cwtl
push
in
inc
out
adc
jns
test
test
or
add
adc
jmp
xchg
enter
or
movsl
xchg
mov
clc
push
inc
inc
mov
inc
and
pushf
lahf
loope
fmuls
mov
out
xor
repnz
popf
leave
cmp
cmc
clc
sbb
pushf
lds
dec
mov
xchg
adc
mov
pop
stc
xchg
adc
sub
jle
inc
leave
push
ss
ret
dec
roll
adc
rcll
loope
addb
adc
push
cwtl
inc
jp
push
addr16
inc
push
int
fsubr
and
repz
jb
push
leave
cmp
sub
sub
mov
das
jp
mov
ret
fadds
nop
mov
mov
push
push
dec
sub
xchg
cmp
lcall
push
bnd
setns
xchg
imul
cmp
push
cmpsl
dec
and
add
imul
out
dec
cmpsb
fisubrs
inc
mov
and
pop
inc
jns
notl
loop
push
test
inc
pushf
cmp
data16
cmpsl
in
js
sbb
aam
imul
pop
lods
xor
add
push
push
mov
ljmp
sahf
adc
cmp
and
test
jns
xor
push
jmp
adcl
jno
loopne
xchg
mov
bound
mov
aad
sbb
pop
inc
jb
fwait
js
or
and
mov
xchg
push
and
and
push
es
pop
pop
lods
or
test
sub
aad
pop
stc
in
test
lahf
es
roll
pop
repz
and
int
je
inc
push
mov
rolb
dec
dec
push
nop
xchg
call
sub
sbb
add
lock
dec
or
pop
xor
xchg
mov
add
mov
push
call
lcall
test
shr
xor
leave
jo
sbb
in
or
enter
push
push
stc
out
jmp
inc
xchg
ljmp
mov
ja
out
lret
out
add
je
outsl
mov
icebp
popa
jg
ljmp
mov
inc
and
mov
push
push
add
lcall
loope
mov
adc
mov
lret
cmp
adc
loopne
sarl
cmp
call
push
adc
insl
mov
not
stos
insb
jmp
lods
stc
inc
dec
repnz
dec
int3
fsts
pushf
jo
dec
pop
icebp
push
cmp
dec
inc
orb
testb
sub
stc
xor
rol
mov
lods
push
subb
cmpsb
ret
jo
lcall
rcrb
push
addb
shlb
adc
cmp
add
mov
add
pop
testb
push
adc
ss
or
xchg
loope
loopne
fsubs
and
push
movsl
sub
test
bound
push
pop
aam
mov
adc
andb
cli
inc
or
or
xor
jne
push
cmp
cwtl
orl
cmp
jmp
cmp
aad
aas
shlb
mov
iret
cmp
notb
pop
push
outsb
nop
scas
adc
inc
stos
add
cmc
andl
add
inc
push
in
jae
fbld
lods
mov
movsb
cmc
sbb
jns
add
mov
add
and
nop
push
in
pop
inc
dec
jb
pop
mov
pop
aaa
lcall
inc
outsl
cli
dec
mov
xor
daa
and
push
jg
cli
cmp
adc
xlat
sarb
inc
or
add
fisttps
add
add
mov
or
adc
ljmp
in
or
adc
mov
or
je
inc
push
stos
sub
call
jp
add
dec
dec
dec
pusha
ret
cmpl
sub
mov
push
cmpsl
popa
mov
fstpl
dec
daa
add
adc
pmulhw
pop
lock
xlat
lods
ja
fwait
orl
mov
pusha
push
shr
ret
call
jmp
mov
mov
pop
pusha
movsb
ja
cmp
dec
mull
shlb
push
inc
xchg
lock
push
and
mov
clc
fwait
adc
sbb
inc
push
ljmp
sub
jecxz
cld
loope
pop
cmp
push
push
imull
cmp
int3
in
jb
jmp
daa
pushf
outsb
jnp
call
repnz
pop
shl
mov
xor
testl
or
in
lret
mov
dec
jmp
aaa
jmp
inc
xchg
xlat
mov
out
pop
iret
mov
sub
sub
and
push
mov
insb
nop
not
xor
mov
mov
sub
xor
mov
or
call
idivb
add
jbe
pusha
add
mov
or
fbstp
les
push
test
mov
scas
jno
sarl
add
bound
test
lahf
loop
subl
fsubrs
add
lahf
sahf
add
xchg
add
in
mov
xorb
mov
adc
sbb
shlb
adc
sahf
cld
cwtl
gs
or
jp
sub
icebp
cmp
mov
mov
xchg
nop
or
pop
test
cwtl
pusha
call
xlat
into
xchg
aam
and
jnp
mov
push
add
jmp
fmuls
mov
or
sti
cld
ljmp
dec
jecxz
ret
fcomp
pop
fdivrl
mov
pop
rcll
sbb
xlat
pop
sahf
imul
push
push
mov
imul
enter
ja
aas
scas
pushf
popf
push
scas
pusha
lods
stos
mov
sbb
shl
push
pop
not
aam
sub
jecxz
or
faddl
fxrstor
mov
cmp
loope
stc
clc
cmc
sub
seta
push
lods
sbb
mov
les
add
mov
push
jl
jbe
jnp
das
jns
daa
cmpb
xchg
call
dec
daa
stos
int
andb
push
lcall
mov
sub
cmc
jp
cmpsb
dec
push
sub
lea
jbe
aaa
daa
xlat
test
xor
mov
add
mov
loopne
mov
rol
pop
mov
dec
ss
movsl
mov
not
pop
sbb
sub
mov
ss
mov
ret
bound
or
popa
sarb
les
sub
sar
xchg
lds
jl
xchg
mov
test
ret
cli
icebp
orl
mov
call
int3
pop
xchg
pop
inc
lds
add
mov
mov
cltd
mov
in
pop
lea
lret
fdecstp
call
pusha
mov
daa
sti
in
out
mov
enter
lahf
add
test
xor
xlat
push
jmp
jmp
xchg
adc
sub
adc
subb
add
sbb
addr16
inc
dec
nop
test
lret
je
je
sti
xor
vaddpd
fidivrl
stc
pop
stos
mov
jmp
xor
arpl
push
inc
out
or
cmpsl
sub
and
int
add
testb
icebp
push
in
pop
mov
shrl
jnp
mov
and
pop
jecxz
ficoml
xchg
xchg
and
repz
push
jmp
push
movsb
test
mov
dec
xor
jge
inc
jb
mov
mov
xchg
fcmovb
add
push
adc
dec
mov
dec
mov
in
adc
mov
xchg
nop
cli
dec
sti
scas
jns
pop
test
jle
mov
enter
neg
dec
jb
iret
dec
loope
add
daa
add
call
not
lods
je
sub
xlat
add
bnd
xchg
shr
cmp
jae
dec
xchg
cs
and
pop
sti
xchg
add
iret
lret
repz
xchg
sarb
mov
icebp
pop
push
push
adc
iret
sub
cli
push
push
push
call
jns
dec
scas
aad
jmp
out
scas
fsts
in
sbb
icebp
mov
cwtl
je
add
pusha
jmp
dec
mov
pop
imul
mov
and
ja
push
fstps
sub
jno
cli
add
mov
and
cmc
mov
pop
testl
sbb
call
jg
fldcw
clc
push
mov
mov
adc
lods
popf
and
mov
je
inc
pop
jmp
sbb
inc
mov
loop
pop
nop
mov
mov
cmp
xchg
pusha
ret
push
roll
lar
stc
imul
push
inc
xchg
adc
jmp
lods
ror
mov
test
out
in
push
push
std
int3
xchg
mov
xchg
push
jne
mov
loope
or
popa
push
sub
lahf
inc
lods
push
das
sbb
sub
mov
rorb
arpl
mov
into
int3
cmc
adc
scas
sbb
cmp
jmp
xchg
dec
rcrl
xchg
imul
ljmp
mov
movsb
push
xchg
fs
jnp
das
cmp
inc
movsl
int3
leave
mov
pop
jmp
popa
xchg
sbb
or
ficompl
and
xchg
jmp
fwait
cmp
push
jecxz
mov
cmp
into
jns
jae
pop
and
sbb
push
lcall
pop
adc
bound
cmp
lock
push
mov
xchg
lret
pop
jl
cmp
mov
movsb
shrl
push
fstpl
das
or
sbb
cmp
adc
adc
pushf
sub
mov
adc
outsb
hlt
hlt
xor
adc
iret
inc
pop
add
les
or
adcb
cmpsl
lea
inc
inc
jp
cmp
jmp
jo
sub
dec
add
lods
mov
push
jnp
mov
outsb
data16
ret
or
aas
popa
addl
gs
pop
push
mulb
push
xchg
add
add
sbb
push
dec
xor
cwtl
cmp
fcoms
testl
scas
inc
inc
pusha
call
push
mov
mov
adc
push
lods
imul
mov
dec
jp
sarl
pop
mov
loop
dec
icebp
outsl
adc
cmp
icebp
movsl
out
std
adc
test
cmpsb
fnsave
sub
imul
mov
mov
enter
lods
sbb
dec
jmp
xchg
subl
lcall
cmp
jns
push
iret
mov
jmp
icebp
test
add
xchg
aam
xchg
jmp
in
sub
adc
fdivrs
arpl
call
daa
cwtl
pop
xor
xchg
fwait
pop
in
adc
int3
lahf
mov
mov
pusha
pop
cmp
push
nop
pop
lahf
mov
mov
pop
pop
ss
mov
mov
cwtl
and
or
repz
jmp
mov
jg
addl
mov
mov
dec
sub
adc
aam
add
lea
dec
test
xchg
sub
rorl
std
or
inc
test
pop
push
cmpsb
lods
adc
cmpl
pop
cmpsl
sub
push
push
adc
or
push
lds
jmp
mov
adc
mov
mov
or
lahf
inc
sub
call
lea
fildl
out
push
icebp
inc
or
loope
xchg
xor
push
out
pusha
pushf
call
out
pop
cmp
mov
inc
push
pusha
imul
movsl
dec
ja
ja
sbb
push
popf
xchg
dec
subl
mov
xchg
in
inc
jmp
push
sbb
scas
mov
lea
jnp
jmp
out
sub
or
add
push
inc
ret
sub
ss
adc
sbb
add
cmp
adc
mov
into
pop
adcb
cltd
bound
repnz
ds
js
or
popaw
js
xchg
rorb
jmp
icebp
in
dec
imul
pop
mov
aaa
sbbb
jecxz
cmc
rcr
je
outsl
lret
sub
rorl
in
ds
adc
mov
daa
int3
stos
addl
and
or
out
and
and
sub
add
xchg
les
push
cwtl
mov
enter
xor
addb
mov
sahf
sub
into
push
loop
cmp
movsl
popa
enter
cwtl
mov
mov
orb
dec
leave
jbe
mov
lods
adc
xchg
call
push
xchg
adc
xchg
adc
pop
subl
jle
shll
int
sub
mov
lea
fstl
sbb
pop
call
pop
sub
inc
pusha
or
mov
pusha
roll
cld
or
mov
mov
jecxz
or
sub
add
orb
rorl
mov
push
pusha
imul
inc
dec
insl
pushf
sub
pop
dec
call
push
and
add
mov
or
jecxz
jb
dec
push
lret
dec
add
mov
mov
dec
test
out
xor
leave
sbb
fists
fs
sub
and
fdivr
mov
jmp
push
in
into
lahf
adc
inc
xor
xor
dec
pushf
cwtl
mov
adc
inc
out
or
les
push
mov
add
xchg
ror
cmpb
fcoml
mov
mov
outsl
add
loope
in
lahf
xor
pop
xlat
mov
inc
lock
rorb
mov
mov
or
and
or
jle
ret
fstl
sub
hlt
daa
rcl
test
insb
mov
sub
out
push
xchg
or
xlat
fdivs
jmp
jb
mov
pop
add
xlat
jl
lret
aam
imul
or
fistpl
movl
nop
mov
pusha
xor
call
jge
sub
rolb
sub
int3
mov
adc
push
sti
je
shl
add
nop
push
add
cmpl
xchg
icebp
loope
mov
inc
and
mov
sub
and
aaa
popaw
repnz
out
ret
mov
lcall
mov
jmp
pushf
push
mov
fisttpl
mov
xor
std
cwtl
das
mov
dec
arpl
sbb
mov
or
lock
icebp
lcall
out
or
call
mov
inc
xor
pop
pop
mov
pop
push
cmpsb
inc
and
rcrl
add
push
cs
dec
jnp
xchg
mov
mov
xor
or
cmp
mov
pop
in
data16
xchg
xchg
adc
adc
pop
clc
lar
mov
cmp
jae
mov
push
fwait
push
mov
jp
jl
or
jno
mov
cmc
adc
cltd
push
xor
xchg
das
sub
iret
xor
in
mov
cmp
jmp
ja
mov
or
push
mov
mov
add
sbb
adc
sbb
push
xchg
gs
aas
xor
outsl
cmp
pushf
dec
jae
sub
sub
push
dec
and
out
sahf
sub
call
and
push
imul
shl
out
or
out
xchg
xchg
mov
imul
cmp
jmp
or
in
add
xchg
lds
pop
test
sub
mov
mov
mov
xchg
push
movswl
cmc
or
jbe
dec
inc
inc
in
js
xchg
jo
out
sbb
aas
jbe
addl
or
outsb
mov
stos
inc
cmp
jmp
push
sarl
loopne
push
test
inc
mov
mov
add
mov
test
jecxz
shrl
out
popa
pop
push
gs
cs
popa
add
bound
leave
adc
sbb
fstl
nop
mov
ja
mov
fsubrl
out
add
xadd
test
dec
xchg
sub
hlt
loop
adc
cmp
sti
or
and
enter
push
sti
push
xchg
mov
inc
mov
xlat
jp
xchg
push
mov
inc
fs
je
dec
std
push
daa
or
orl
push
adcb
adc
xor
bound
jns
cmp
and
mov
add
lea
push
push
mov
mov
pop
dec
lock
lods
and
mov
xchg
and
pop
inc
hlt
mov
ljmp
xchg
and
push
fmull
dec
push
nop
leave
call
inc
inc
aaa
push
loop
ja
in
xchg
int
repz
mov
add
mov
imul
out
xor
pusha
push
push
cs
sub
and
jmp
inc
dec
cmp
sub
std
test
mov
push
mov
inc
jp
add
xchg
xchg
sarb
add
ja
movsb
inc
test
xor
shrb
rolb
sahf
cli
inc
jns
int3
sti
jp
daa
sub
mov
cmp
jo
popf
data16
adc
test
stos
mov
rcrl
outsl
dec
scas
lcall
pop
mov
and
push
pop
in
sahf
loop
cld
dec
xchg
test
dec
std
xor
jge
mov
sarb
xchg
or
pop
pushf
in
arpl
call
pop
movsb
push
hlt
dec
add
aas
and
bound
jp
mov
or
push
jmp
push
or
enter
dec
add
scas
and
cli
or
sbb
cltd
xchg
xchg
hlt
fisubs
push
push
mov
jge,pt
jmp
and
data16
cmp
leave
mov
ret
cmpb
in
mov
data16
js
jmp
pop
test
pop
pusha
adcb
pop
inc
fcoms
and
fwait
jnp
push
pusha
outsl
xchg
mov
dec
or
aad
adc
add
into
and
mov
inc
jmp
test
and
fsubr
andb
xchg
pushf
rolb
xlat
add
or
jb
orl
add
mov
pop
mov
push
adc
iret
test
inc
mov
test
mov
jp
jns
jb
sub
or
push
push
aad
lea
dec
push
call
push
mov
ficoml
push
mov
lret
pop
xchg
pop
jo
ljmp
rorb
push
and
lods
imul
adc
and
mov
mov
or
enter
mov
lret
insb
nop
lahf
push
jmp
pop
xchg
add
jb
cwtl
cwtl
mov
cmp
nop
push
test
push
mov
cld
cmp
rcl
lret
xlat
lock
pop
stc
ror
scas
iret
addb
imul
adc
out
xchg
popf
into
adc
pop
jb
pusha
adcl
cmp
fadds
jle,pt
cmpb
cmc
cmp
jmp
cltd
xchg
rdtsc
mov
sahf
loopne
lret
not
stos
leave
sub
xchg
mov
ljmp
pop
cmp
pause
iret
adc
push
push
test
dec
rorb
xchg
fdivs
add
xor
outsb
sub
sar
insb
cmp
xor
lds
xorps
mov
xchg
add
jecxz
es
push
pop
and
mov
outsl
jmp
push
aad
mov
les
inc
lods
ficompl
arpl
cmp
sub
push
add
das
int3
rorb
push
xchg
icebp
xchg
and
xchg
mov
std
or
ss
test
hlt
xchg
test
cmp
roll
mov
mov
aas
lea
outsb
aam
shrl
cmp
xchg
and
xor
lods
cmc
aaa
cmc
xor
popf
push
pushf
xor
dec
jl
mov
jp
mov
pop
rep
mov
inc
enter
sub
dec
mov
push
mov
mov
add
add
jo
push
push
sahf
mov
dec
adc
dec
andl
lret
xchg
int
fildl
test
adc
or
or
pop
rol
sbbl
imul
jmp
mov
dec
mov
inc
movsb
mov
mov
xor
mov
sub
sbb
sbbb
sti
adcl
push
add
movsl
xor
idivb
jb
cwtl
or
mov
dec
out
sarb
lds
and
lea
and
xor
adc
cmc
adc
pop
jecxz
xchg
test
mov
idiv
adc
push
sbb
or
lock
mov
js
nop
sbb
and
or
add
add
sarl
shrl
add
push
dec
loopne
dec
pushf
mov
pop
mov
call
not
fadd
push
std
mov
test
test
pop
cmpsl
arpl
dec
jno
push
push
nop
dec
stc
mov
out
mov
pusha
mov
push
jmp
mov
clc
pop
nop
jecxz
adc
call
out
ljmp
in
je
dec
xchg
lock
cmp
call
nop
add
fdivl
out
mov
push
call
jmp
loopne
incl
lret
xchg
or
or
xorb
add
in
jmp
add
mov
inc
jno
mov
add
fsts
dec
fdivr
ficomps
pop
pop
dec
sbb
mov
into
pop
nop
pop
cwtl
adc
xchg
mov
mov
mov
sarb
arpl
cld
lods
sbb
pop
shr
xchg
call
aad
in
rcrb
hlt
ret
adc
test
dec
test
mov
repz
aad
jae
mov
and
iret
and
jns
mov
dec
push
int
sarb
shll
jp
insb
or
test
std
ret
addl
xor
mov
nop
rolb
nop
push
mov
pop
pop
pusha
lds
lods
jmp
dec
or
or
adc
ljmpw
pusha
sub
jge
and
inc
push
dec
std
add
mov
in
fsubrs
test
daa
jge
or
sbbb
popa
sbb
orl
lods
les
call
gs
icebp
adc
or
xor
pop
popf
add
into
lea
push
sbb
out
setno
mov
xor
cmp
filds
xchg
mov
fdivl
mov
imul
popa
clc
adc
xchg
stos
pop
scas
mov
and
fidivrs
xor
flds
push
jmp
not
das
lds
loopne
movsl
adc
lods
test
inc
loopne
add
xlat
xchg
lahf
imul
mov
rcll
scas
ja
pop
xor
and
or
rolb
pushf
mov
and
add
test
pop
cld
jnp
add
and
adc
aas
adc
ds
stos
pop
push
dec
cld
stos
pushf
rcrl
mov
cmp
lret
add
dec
lahf
xchg
enter
or
xlat
or
push
inc
js
insl
sar
mov
daa
push
xlat
subb
or
rcrb
push
fmuls
testb
es
dec
adc
pusha
mov
fiaddl
or
outsb
push
imulb
adc
popf
pusha
or
call
ljmp
fidivs
arpl
cmp
call
push
push
ror
ja
lock
dec
mov
mov
dec
push
pop
ja
add
xor
dec
mov
push
into
mov
adc
orl
push
pop
push
ja
push
ds
cmp
popf
aas
test
fdivrs
loop
dec
xor
cmp
sbb
and
add
int
fildll
pusha
inc
out
not
lea
pop
into
call
sahf
inc
mov
cmpsl
mov
push
imul
fldcw
pusha
jg
inc
add
cld
popf
data16
loop
sub
popa
pop
sti
push
cmpsb
cmp
mov
outsl
xor
andb
xchg
or
sub
mov
fldcw
hlt
xlat
sub
cwtl
and
sti
call
add
dec
dec
sbb
push
stc
inc
js
and
push
pop
mov
rolb
adc
or
gs
cmpsb
lret
and
das
pop
dec
and
xor
mov
push
call
mov
or
pop
jmp
loope
stos
test
js
scas
shll
jae
rorb
cwtl
pop
nop
inc
add
fdivr
dec
and
das
pop
loope
xchg
cmpsb
jae
and
inc
dec
pusha
push
mov
popa
shrb
enter
stos
push
rclb
push
fdiv
mov
mov
mov
jae
adc
in
xor
fwait
dec
push
mov
mov
adc
mov
fnstcw
add
dec
push
test
add
push
sti
jno
add
jmp
call
dec
sbb
mov
fists
in
xchg
lcall
into
cmpsb
test
out
xchg
out
mov
jmp
fnstenv
rcl
or
lahf
icebp
leave
sbb
sbb
jg
repnz
add
push
mov
adc
inc
pusha
and
cmc
shr
in
sub
mov
icebp
sahf
jle
enter
cmp
mov
scas
int
jle
adc
popf
fisubrs
jmp
mov
cltd
or
jmp
inc
or
leave
push
mov
movsb
add
bound
sti
inc
imul
insl
xchg
arpl
bound
lahf
mov
pop
daa
add
jbe
pop
mov
hlt
or
add
scas
stos
inc
adc
jnp
xorl
ja
popf
mov
dec
pop
aam
add
daa
lods
loop
test
xlat
dec
pushf
in
cmp
mov
sbb
repnz
xor
cmc
icebp
adc
mov
mov
pop
inc
jmp
dec
mov
setge
ret
lea
scas
sub
mov
lds
mov
push
mov
xchg
xor
imul
addl
shlb
pop
and
clc
add
loopne
jns
mov
mov
and
mov
call
sbb
in
in
add
and
imull
popf
dec
pop
mov
cmp
fsubl
cmpb
js
stc
xchg
add
into
add
cltd
push
in
loop
adc
into
test
rcl
xchg
or
nopl
int3
out
jp
push
movsl
cmpsb
rorl
mov
push
adcl
sbb
sbbb
leave
aad
into
cmpb
push
sbb
enter
sub
push
mov
test
push
in
adc
test
mov
adc
xchg
loopne
pop
outsl
sub
mov
cltd
xor
int3
add
daa
jmp
xor
jae
imul
xchg
pop
pushf
push
jo
jge
aad
inc
push
jnp
mov
lcall
rcrb
mov
jb
pop
pop
subl
push
in
lahf
jl
data16
mov
adc
dec
js
xchg
sti
fidivrl
adc
in
das
int3
jp
out
sub
jno
mov
mov
jg
dec
jl
fcoml
mul
add
cmpsl
imul
cmpsl
stos
inc
in
dec
adc
or
mov
insl
mov
pop
inc
or
push
mov
jae
scas
dec
ret
push
out
push
sahf
das
les
jno
pop
jge
inc
popa
adc
pop
pop
and
push
rcrb
xchg
rol
or
call
rol
xchg
adc
test
add
mov
movsb
push
mov
pop
and
cmp
xor
mov
inc
inc
cltd
jo
in
jmp
imul
fcoms
movsl
mov
shrl
pop
jle
loop
jge
jl
push
movsl
adcb
cmc
sbb
xchg
popf
sbbb
cmp
pusha
rorl
js
sbb
dec
in
pop
vmovaps
into
or
adc
lods
and
int
and
scas
rcll
int
mov
sbb
inc
stos
dec
loopne
mov
pop
test
in
jb
sub
mov
xchg
dec
mov
pop
xor
mov
stos
jmp
dec
push
pop
in
lods
ficompl
pop
mov
pop
outsb
enter
pmaddwd
repnz
loop
xor
adc
and
mov
cwtl
push
xchg
and
jmp
not
out
mov
nop
jg
push
nop
jmp
xchg
rorl
add
lock
mov
out
fstpl
in
ret
push
subl
shlb
stos
pop
out
out
pop
ljmp
fildl
or
ja
aad
dec
lret
cmp
pop
ud0
push
add
cmp
stos
or
mov
iret
dec
jge
push
jecxz
popa
mov
xchg
pop
rcl
outsb
cmpb
stc
in
dec
xorb
xor
dec
orb
mov
jl
dec
leave
add
fidivl
mov
in
das
dec
fstl
xor
clc
stc
push
in
fldcw
dec
add
xor
pusha
stos
fnstsw
test
dec
or
mov
pushf
pop
xchg
xchg
sarb
xchg
int3
lods
adc
pushf
outsb
cmpsb
mov
dec
inc
push
sti
loopne
call
cld
test
pop
or
dec
cwtl
push
lock
or
inc
pop
push
adc
fadds
enter
mov
enter
push
aas
test
cmp
mov
loop
and
repz
sub
punpckhbw
inc
loopne
dec
mov
xor
sub
dec
pop
pop
loope
fsubr
rolb
repnz
adcb
les
adc
sub
jmp
sbb
or
inc
dec
or
inc
andl
cmp
aad
sbb
hlt
roll
xchg
push
popa
push
push
and
inc
mov
xor
ds
stc
add
mov
inc
mov
dec
imul
lret
and
sub
jne
add
xor
jmp
nop
inc
inc
dec
int3
xlat
rcrb
mov
sti
jno
nop
mov
sbb
jne
cwtl
adc
add
mov
or
and
xor
cmpsl
xchg
xor
test
std
test
jne
lds
mov
add
dec
adc
add
jbe
dec
dec
stos
add
xor
imul
pop
xchg
add
mov
js
nop
and
or
xchg
inc
cmpb
jbe
test
cmc
add
jl
nop
loopne
push
mov
jno
jle
loope
pop
arpl
pop
xorl
adc
pop
inc
aas
ret
dec
inc
mov
jp
cltd
mov
std
add
inc
adc
fidivrs
mov
add
shr
adcl
jne
addb
dec
sbb
jl
sub
adc
xor
add
in
jge
movsb
and
push
decl
inc
stos
cltd
pusha
pop
sbb
or
cmp
adc
add
arpl
push
stos
sbb
cmp
inc
cmp
dec
aas
mov
or
stc
imul
ss
lock
mov
es
mov
cmpl
adc
jnp
adc
lahf
pusha
xor
nop
xor
lock
xor
popa
lods
int
in
push
mov
ret
dec
pop
aas
push
les
stos
add
lods
push
call
dec
stos
sub
add
out
mov
gs
ds
testl
sahf
jge
sbb
loopne
lea
and
add
sahf
aad
ss
ja
pushf
adc
data16
add
orb
or
or
in
aam
jne
inc
repnz
nop
adc
les
dec
inc
jl
mov
cld
lock
adc
arpl
lock
cmpsb
in
cltd
inc
bound
mov
repnz
stc
adc
mov
xchg
inc
mov
aas
pop
cmp
dec
outsl
inc
or
mov
pusha
dec
jg
dec
stos
kmovw
outsb
repnz
dec
es
rolb
xor
cmc
mov
xchg
addb
fwait
adc
sub
cmc
call
pusha
shll
es
lret
fldcw
lret
popf
sbb
aaa
or
sbb
cmpl
xor
pushl
or
sbb
pusha
dec
imul
andb
sahf
mull
mov
inc
pop
pop
adc
test
imul
stos
lret
push
adc
xor
les
cmpsb
sub
pop
hlt
cmpsl
adc
add
arpl
and
pushf
or
cmp
fwait
inc
sbb
pusha
cmp
add
daa
pusha
cld
pushl
pop
in
mov
and
rolb
mov
loop
cwtl
push
jmp
or
push
mov
or
lahf
shll
pop
test
mov
add
ficoml
add
mov
sbb
push
notb
xor
xor
andb
sbb
push
sbb
jge
pusha
inc
negl
cltd
stos
ja
and
sbb
pusha
jl
add
imul
jg
lock
lods
les
xchg
inc
and
add
mov
lcall
ss
iret
sbb
insl
and
test
sbb
in
aaa
adc
sub
sbb
mov
add
lods
mov
sahf
ds
scas
aas
addr16
sbbl
jge
int3
sub
adc
sbb
shrb
sbb
add
shrb
xchg
xchg
sbb
lret
shrl
push
aas
push
add
test
xor
push
data16
adc
and
add
jne
or
movsb
je
xorb
inc
mulb
inc
xchg
fdivrs
mov
dec
rcrb
xor
xchg
push
lcall
imul
js
push
jecxz
and
je
pusha
pop
sub
and
pop
aam
into
xor
repz
mov
aam
clc
faddl
enter
sbb
clc
test
nop
subb
fildll
mov
stos
jno
aam
arpl
xchg
or
in
or
mov
pop
dec
cwtl
mov
add
stos
and
fdivl
xor
jmp
jbe
int3
pop
dec
les
dec
jmp
sbb
roll
jle
xor
cmpsb
cmp
dec
sub
out
and
rclb
push
push
mov
pusha
and
sahf
lods
ret
add
push
hlt
mov
out
call
in
dec
pop
jle
xor
lock
aas
arpl
dec
adc
mov
imul
sbb
rcrb
jnp
and
sub
rcrb
dec
dec
gs
mov
sbb
fcmovu
xlat
dec
dec
int3
jo
cld
dec
ljmp
mov
push
aam
add
mov
push
cli
cmp
dec
adc
xlat
adc
sbb
enter
adc
fs
or
push
pop
ret
jge
in
movb
sarl
arpl
add
inc
mov
sbb
dec
loop
lret
dec
subb
and
sub
dec
jl
add
push
adc
loopne
mov
sbb
sbb
stos
pop
clc
inc
add
fisttps
loopne
shrl
sub
jne
add
dec
mov
jae
push
cmp
xor
ret
push
xor
cmp
test
mov
pop
js
push
mov
je
mov
les
nop
xchg
imul
popa
add
mov
jo
sub
jbe
and
push
xorl
add
push
and
mov
xor
inc
mov
ret
jl
insb
int
inc
in
stc
dec
mov
inc
or
cwtl
cwtl
or
js
jp
enter
outsl
cmp
shrb
shlb
jl
jo
shll
xchg
subb
sub
andl
mov
or
daa
stc
arpl
cld
sbbb
dec
adc
add
sbb
add
xor
clc
aas
add
sbb
add
fcmovu
xlat
nop
inc
jle
push
arpl
in
mov
mov
inc
adc
loopne
jmp
sbb
mov
add
jae
addr16
fdivl
mov
and
icebp
lods
dec
xor
push
ljmp
loopne
ret
push
xchg
rolb
sahf
andl
lods
add
cmpb
pusha
xchg
cltd
xor
imul
push
js
or
sarb
mov
sbb
jecxz
rcrb
test
call
rcll
lods
adc
push
fists
sahf
add
lea
idivl
jae
jbe
xchg
mov
jge
ss
mov
jmp
loope
scas
pop
jne
and
jp
adcb
lods
pop
repnz
nop
lahf
repz
aaa
jecxz
xor
int3
mov
out
sbb
cwtl
inc
xorb
jecxz
int3
adc
add
jge
in
add
mov
int
dec
and
test
or
ljmp
xor
or
mov
sub
mov
and
jae
inc
sbb
lret
xchg
jbe
int3
add
lods
popa
adcl
cld
orl
lock
dec
pushf
mov
clc
jg
pop
je
js
dec
cltd
sbb
lahf
dec
cld
pop
sbb
popa
mov
loopne
cmc
rcll
call
sub
add
xchg
push
movsl
jge
cmp
add
std
or
add
cmp
push
mov
add
mov
popa
repnz
jp
scas
mov
xchg
mov
or
cwtl
sbbb
mov
add
dec
mov
add
mov
fnsave
or
mov
hlt
lret
adcb
enter
pop
out
sahf
js
stc
sbb
xchg
push
mov
mov
ret
and
aas
ret
and
pop
fs
and
roll
push
jmp
cmpb
add
xchg
jmp
adc
loopne
add
jae
mov
jmp
and
repz
aam
call
mov
dec
pushf
popa
add
jne
pop
pop
add
loope
xor
aam
mov
or
pop
cltd
sbb
jo
ret
mov
xchg
lock
ret
sbb
int3
imul
jg
call
mov
add
or
xlat
jge
adc
pusha
mov
ret
out
pop
lods
or
mov
lcall
icebp
fwait
loop
push
sbb
add
cld
adc
jl
mov
lock
call
push
xorb
andl
or
cli
jle
push
add
or
pushf
adc
dec
mov
inc
jmp
add
cmpsb
mov
add
dec
push
rorb
leave
jle
lcall
mov
adc
dec
cs
mov
ret
jmp
fwait
jl
loope
std
mov
xorl
popa
cwtl
sub
faddl
insl
enter
js
add
mov
imul
iret
fwait
cmpl
mov
lods
add
cmp
jl
add
push
in
addr16
push
or
xor
ss
sbb
adc
stos
add
fstps
and
int3
and
je
sub
xor
add
ljmp
andb
ds
xor
je
pop
add
mov
fs
les
sbb
fidivl
test
rorl
rolb
lods
lcall
dec
inc
cmp
jno
mov
jne
sub
loopne
push
or
and
inc
dec
jle
mov
js
outsb
test
outsl
xor
cltd
mov
or
je
pop
test
mov
out
xor
pusha
arpl
int
pop
test
dec
add
ret
cmp
mov
dec
add
push
pop
aas
pusha
test
lcall
push
cli
bound
add
push
mov
add
add
mov
in
push
addb
mov
push
jge
or
xchg
mov
pop
lock
or
rclb
xor
pop
add
mov
jge
enter
pop
out
test
mov
or
sbbb
lock
pop
ss
test
mov
lods
nop
push
jo
outsb
jbe
mov
inc
loopne
lret
repnz
pop
jge
rcrb
negb
xorb
rorl
adc
imul
pop
addl
push
stos
or
clc
faddl
adc
and
pop
lret
cmp
mov
push
add
das
scas
add
sub
cmp
mov
cwtl
pushf
add
test
xchg
testl
lods
out
rcr
mov
push
mov
subb
in
push
arpl
mov
call
jo
adc
out
or
dec
sub
addr16
hlt
push
cmp
or
out
inc
jecxz
stc
push
cmp
shrb
and
ss
bound
mov
or
pop
jp
mov
ljmp
pop
add
push
fwait
cltd
ficoml
lods
mov
lds
adc
icebp
cmp
sub
int3
into
jo
pop
lods
push
enter
add
jle
fsubs
fucomip
or
mov
jp
sub
inc
sbbl
sbb
clc
jbe
jmp
test
mov
test
or
or
int3
add
sub
iret
loopne
sbb
inc
setae
push
popa
adc
sub
subb
orl
je
stc
add
ret
sub
filds
jnp
dec
cmp
inc
in
dec
mov
sbb
jle
mov
sbb
test
int
mov
add
jbe
fmuls
push
xorl
cwtl
les
pop
adc
xor
pop
decl
add
add
jl
pop
jge
enter
les
subb
in
movb
clc
pusha
pop
repz
popa
insb
arpl
add
jo
pop
or
fadds
cmpsl
mov
pushf
sbb
fcompl
jb,pn
push
and
inc
popl
call
sahf
les
xor
aas
lea
and
aas
out
dec
or
cmpl
inc
stc
xchg
in
insb
adc
cwtl
test
dec
or
fisttps
je
pop
lret
inc
push
mov
jl
add
popa
inc
je
xor
pop
ret
dec
jo
sbb
jle
inc
sbb
mov
lock
adc
add
stc
jle
lods
add
push
int
call
loopne
cmp
das
and
add
hlt
jg
hlt
jnp
xor
push
mov
xchg
jecxz
loope
xor
je
pop
inc
and
lods
push
add
sbb
movsl
test
gs
fldcw
scas
test
lock
ja
rclb
xchg
movsb
nop
repz
or
fdivrl
xchg
or
test
jl
add
mov
testl
andb
sub
jl
scas
adc
hlt
sbbb
idivl
mov
rorb
jo
movsl
je
pusha
out
les
cmp
add
and
adc
adcb
mov
dec
outsl
sbbl
roll
push
cwtl
in
dec
stos
rclb
jecxz
xchg
rcrb
sbb
xor
add
and
orb
xor
dec
popf
aam
lea
jo
mov
add
xchg
jg
inc
mov
fiaddl
mov
imul
enter
loop
xchg
mov
mov
pusha
cmp
mov
imul
pusha
and
add
sub
dec
add
dec
jno
mov
sub
mov
iret
popa
mov
jl
inc
subb
loopne
loop
adc
cmp
test
lret
adc
mov
les
jecxz
add
rcll
loope
scas
sbb
dec
adc
in
subl
js
das
sub
pop
loope
jmp
sbb
or
mov
cmp
je
jo
pop
stos
pop
inc
repnz
lock
pop
jns
jmp
add
pop
xor
or
int3
xor
and
xchg
jl
addr16
rcrb
lock
outsl
mov
jne
xchg
subl
fcoml
jp
and
pusha
jo
jmp
jne
xor
mov
xor
scas
adc
xor
push
mov
add
and
pop
dec
mov
leave
je
inc
test
push
insb
jle
lahf
cwtl
fcompl
or
cmp
mov
mov
push
cmp
fistpl
add
into
push
or
nop
je
dec
ljmp
cmp
test
pop
mov
cmp
in
cmp
mov
cwtl
inc
repz
cmc
adc
int3
adc
stc
sbb
repz
add
fdivr
pop
insb
repnz
xor
xchg
xchg
nop
rcrl
adc
call
xchg
sub
xchg
lds
ja
call
jmp
call
in
repnz
pop
cmp
xchg
nop
cmp
mov
fsubrl
jg
or
sbb
add
jle
insb
jle
mov
push
mov
sti
fs
shlb
negb
int3
enter
push
fnstsw
adc
dec
jl
rolb
enter
add
push
lret
lahf
adcb
mov
je
insb
ds
inc
pusha
pop
loope
mov
jge
mov
ror
mov
jnp
add
lds
sbbb
fwait
shll
mov
cmc
adc
mov
ret
lret
dec
push
faddl
adc
add
cmp
enter
xchg
dec
dec
inc
inc
push
jae
jmp
push
into
pop
mov
mulb
and
pop
psubusb
jnp
jg
movsb
adc
and
push
scas
xchg
lock
jbe
and
fs
lahf
inc
mov
and
and
sbb
shlb
add
es
cmp
and
cmp
mov
mov
cmp
orl
cmpsb
jns
popa
adc
adcb
mov
and
arpl
dec
push
lret
inc
pop
shlb
inc
test
xor
xchg
or
movsb
add
mov
xchg
push
into
sub
or
clc
jne
pop
mov
dec
je
shlb
jnp
mov
inc
xchg
add
jge
push
fsts
cwtl
mov
add
push
orl
sbb
mov
and
sbb
pusha
mov
lcall
stos
lock
jne
xchg
jo
mov
lods
mov
orl
xorb
sahf
mov
pop
sub
les
mov
cmp
imul
push
lods
cld
in
add
lret
xor
xor
js
mov
ja
cmp
jmp
rorb
jne
rolb
dec
jl
mov
in
xchg
sub
enter
jnp
test
rolb
or
shl
xlat
jmp
adc
ljmp
and
adc
ja
sub
outsb
sbbb
clc
iret
add
or
jbe
roll
lret
push
cmp
inc
inc
push
je
add
push
jp
and
je
adc
xor
dec
push
es
jnp
xchg
lods
adc
ljmp
pusha
xor
mov
jge
pop
add
push
stos
ret
fwait
je
movsb
adc
test
push
scas
enter
lahf
popf
add
outsl
mov
push
test
movsb
mov
js
xlat
test
adc
push
ja
adc
daa
mov
cmp
xchg
shl
or
loopne
andb
pushf
push
and
jle
and
jp
cmpsl
add
add
and
cmpsb
sub
dec
jbe
lods
inc
inc
fistl
dec
mov
lock
mov
inc
add
pop
inc
bound
iret
loopne
das
jbe
ljmp
in
pop
orb
and
dec
jbe
fwait
mov
fiadds
les
push
fstpl
push
mov
mov
add
hlt
mov
jp
add
mov
pop
ret
int3
les
push
bound
jnp
mov
es
fadds
and
rolb
mov
mov
inc
adc
subb
fadds
gs
notb
clc
mov
mov
dec
cld
icebp
add
xchg
movsl
roll
or
mov
add
cli
fnstsw
jge
outsl
loopne
and
cmp
add
ljmp
mov
cwtl
xlat
adcb
ljmp
sbb
fsubl
jg
and
aam
mov
pop
pushf
cmpsl
movsb
cltd
cmpb
mov
cmp
sbb
lods
int
test
jle
mov
sub
shrb
cwtl
fldenv
sub
cld
lret
pop
or
pop
sub
push
xchg
sbb
enter
stc
dec
icebp
sub
and
bnd
cld
add
orb
ja
ret
loopne
inc
xchg
lock
push
and
add
hlt
int3
pop
repnz
jl
addb
jecxz
ja
je
mov
jge
pusha
in
fwait
pop
fcoms
dec
into
adc
das
push
int3
add
in
fxch
adc
sub
loop
cmc
jl
pushf
test
or
mov
sub
rolb
into
inc
jne
stc
test
cmp
xchg
xlat
int
adc
and
andl
stc
rolb
and
cwtl
int3
push
je
rcrb
call
sub
fdivrl
mov
repz
add
push
mov
mov
inc
cmpsb
shrl
hlt
fcompl
mov
push
mov
add
pop
or
adc
scas
push
lods
jg
sbb
popf
sbb
stos
cld
or
or
ret
adc
mov
cmp
repz
adc
pop
sbb
mov
loopne
inc
fistpl
icebp
jecxz
loopne
test
into
and
sub
das
add
add
je
sbb
shlb
imul
mov
mov
and
or
jo
lock
loopne
ror
in
rcrb
imul
ja
and
xchg
dec
subb
std
dec
sbb
cld
inc
int3
jmp
enter
push
sub
inc
mov
pop
add
push
pushf
push
stc
test
shrb
std
jmp
clc
push
mov
sbb
pop
leave
jb
out
jnp
add
jle
push
das
cmovge
add
pop
sbb
pop
orl
inc
cmp
pop
pushf
mov
mov
jp
cmpb
adc
push
push
or
out
insb
shll
shll
adc
mov
cmp
mov
sahf
pop
push
mov
sbbb
icebp
pop
int3
mov
mov
jnp
cmp
rorb
push
pop
movsl
lahf
cwtl
fs
insl
add
and
push
jl
scas
sbb
rcr
jge
or
mov
xorb
add
mov
clc
xor
lods
addr16
push
inc
add
clc
rol
pop
into
arpl
enter
nop
out
test
int3
mov
add
mov
push
add
push
xchg
fsubs
jae
clc
jno
mov
adc
cmp
cli
stc
cmp
xchg
jmp
mov
clc
jge
loop
adcl
push
scas
or
cmp
ret
pop
or
dec
xor
mov
das
lods
jle
pop
scas
add
push
icebp
test
rcrb
adc
jp
mov
lock
inc
and
pop
enter
mov
cmovnp
inc
mov
jbe
int3
pop
idivl
mov
xorl
cwtl
flds
mov
mov
imul
xor
adc
mov
pop
orb
bswap
xchg
inc
add
mov
cmpsb
jle
jge
mov
mulb
jno
popa
push
and
in
les
imul
pop
insb
inc
fbstp
inc
xorb
inc
add
jbe
add
or
fcompl
jg
inc
loope
jne
pop
pop
adc
orl
pop
icebp
and
js
mov
cmpsl
dec
divb
jge
cld
rcrb
dec
cmp
xchg
inc
inc
dec
or
inc
or
imulb
fwait
mov
add
shlb
or
jecxz
jle
xchg
pop
mov
data16
jl
aam
or
dec
addb
jg
xchg
push
add
test
and
sbb
xor
lods
insb
cwtl
rcl
mov
jge
adc
daa
ljmp
aaa
loopne
movb
xlat
xchg
xorl
mov
sbb
push
push
addl
pop
rol
rcrl
sub
je
add
lcall
ja
jb
insl
dec
lret
shrb
mov
xor
and
jb
or
or
cwtl
xor
clc
lcall
mov
mov
je
pusha
pop
xor
hlt
adc
lds
pusha
int3
shrl
adc
push
or
lods
data16
jae
mov
mov
int3
enter
push
loopne
mov
lock
inc
shrl
aad
sub
ret
or
orb
fs
es
insb
mov
push
sub
rcrl
adcb
dec
repz
dec
push
mov
movl
xchg
cwtl
ret
adc
jl
or
xor
add
jl
js
cmp
clc
and
mov
xchg
push
orb
push
push
add
in
rorl
fmull
loop
in
and
or
out
jl
test
test
js
repz
and
pop
xchg
je
add
dec
pop
and
or
cmpsb
pushf
ja
add
jnp
pop
and
xor
sbb
or
fadd
das
in
mov
stc
jbe
pop
mov
sahf
mov
or
andb
cli
or
pusha
cwtl
sub
xchg
inc
call
mov
loop
pop
pop
sbb
in
jl
sbb
add
push
sub
jle
add
lods
inc
int3
mov
rolb
inc
xor
nop
ficomps
adc
mov
add
add
inc
sbb
roll
jle
pusha
cs
push
dec
push
cmpsl
and
pop
push
hlt
fidivrs
push
dec
aas
inc
and
xchg
test
or
jo
loop
je
sub
jnp
cwtl
and
mov
and
mov
cmpsl
pop
adc
cli
sbb
push
insb
inc
xorl
mov
int3
andb
loope
inc
push
sarb
and
add
pop
mov
insb
jg
sbb
outsb
and
je
sub
or
lds
sub
add
repnz
test
filds
sub
loop
cld
cvtdq2ps
daa
dec
xor
ljmp
or
lcall
cmp
ja
jbe
testb
push
push
jge
je
mov
pop
jns
jne
wrmsr
mov
clc
daa
daa
xchg
pop
les
cmp
push
mov
insb
pop
ret
add
loop
popa
mov
adcb
sti
movsb
andl
fs
cmp
cmp
jmp
pop
jnp
pusha
test
pop
jp
bound
inc
jle
adc
jne
subb
jmp
idivl
dec
addr16
movsl
lock
mov
lcall
push
enter
xchg
repz
push
and
ret
movsb
mov
aam
mov
mov
xchg
fistl
popf
push
movsb
add
mov
xchg
movsb
adc
subb
mov
test
iret
xchg
sbbb
lods
lock
jg
leave
cmp
jge
mov
inc
mov
cmp
cld
int3
dec
pshufw
adc
cmp
adc
loopne
ret
add
jnp
add
mov
dec
clc
push
or
mov
int3
dec
fnstenv
ss
cwtl
cld
jne
cmp
xchg
xor
lock
push
or
jle
xor
lods
fnstsw
scas
jae
mov
aam
je
xor
xchg
inc
sbb
dec
add
rcll
out
in
lock
insl
dec
xor
jae
dec
push
xor
imul
pop
hlt
jge
sub
cwtl
dec
int
pop
lret
push
jge
dec
inc
outsl
sbb
gs
add
addb
push
add
and
aad
sub
adc
push
xchg
or
gs
mov
cli
imul
jg
aam
lret
xchg
cmpb
jle
js
das
fisttpl
hlt
out
cmp
sub
fadd
mov
xchg
cltd
add
insl
loope
push
leave
popa
mov
cmp
mov
dec
test
enter
mov
cmp
rcr
jl
pop
dec
rorl
mov
pop
cmpl
mov
cli
andl
add
movsb
mov
nop
jne
push
sbb
push
and
adc
add
add
inc
push
mov
test
jns
or
movsb
nopl
push
push
out
add
mov
pop
jge
int3
icebp
cwtl
fdivs
wbinvd
hlt
fiadds
xchg
or
jl
xchg
cwtl
hlt
imul
or
jne
or
push
fsubrl
jb
sub
xor
mov
aas
jl
cmp
or
inc
inc
inc
and
sub
push
inc
dec
rolb
pop
inc
je
out
out
in
rclb
fcmovnbe
sub
ss
push
inc
lods
mov
push
xor
xor
mov
inc
or
sub
fistl
push
jbe
pop
add
push
mov
lods
xchg
adc
or
and
add
mov
ret
sbb
int3
inc
sub
fstpl
popa
test
cltd
add
mov
pop
cmp
sarb
inc
mov
ret
andb
lock
jg
jne
pushf
dec
in
mov
mov
sbb
add
xchg
insl
std
dec
je
add
popf
in
mov
dec
shlb
lods
add
nop
ljmp
jmp
lds
clc
inc
and
cmpl
sbb
out
inc
pop
fistpl
jecxz
add
and
inc
jne
add
mov
mov
add
mov
sbb
push
movsb
and
cmpb
adc
addr16
les
fcomps
pop
rcrl
daa
mov
call
inc
and
in
xor
mov
jb
cltd
or
add
cs
repz
sahf
adc
inc
das
mov
add
mov
push
push
and
rclb
lock
sub
jge
add
mov
je,pn
lods
fmuls
lods
sbb
lcall
sbb
insl
int3
pop
mov
adc
movsl
push
jns
and
or
fsubr
andb
pop
in
decb
loop
mov
ss
mov
pusha
loopne
and
adc
dec
ja
mov
add
in
je
adc
lock
imul
mov
mov
pop
repz
cmp
push
add
dec
and
pop
push
hlt
cmpb
pushf
pop
dec
push
jg
out
push
jle
loopne
sub
xchg
aaa
add
adcb
icebp
xchg
je
aas
loopne
popf
fwait
or
push
mov
sbb
sbb
inc
jg
clc
ret
lret
pop
rcrl
mov
pusha
push
adc
pop
mov
sub
dec
int3
pop
repnz
adc
enter
lea
jmp
adc
arpl
mov
lods
push
test
es
sub
cmp
pusha
popf
sub
and
imul
les
push
mov
push
scas
popf
dec
or
jecxz
jb
fnstenv
mov
outsb
fstl
mov
or
lret
mov
sbb
out
pop
jl
add
loopne
das
in
arpl
adc
jno
sbb
aad
test
sbb
in
mov
fmull
add
testb
aas
pushf
and
or
out
arpl
pusha
cmp
pop
addr16
shlb
mov
pop
and
std
xchg
mov
cli
jle
jmp
aam
clc
add
jb
sbb
and
test
add
add
jle
pusha
dec
int
cmp
xor
fwait
jno
call
in
ret
imul
pop
ja
cld
orl
cmp
add
mov
pop
xorb
lret
sub
das
pop
int
lods
ror
lcall
in
sahf
cwtl
push
dec
mov
fadds
cmp
and
mov
mov
jl
mov
push
dec
test
adc
add
cmp
repnz
mov
dec
sbb
cmp
cmp
jl
dec
rorl
test
sbbl
ljmp
rorb
lret
cmp
fs
jb
jl
pop
jg
push
ja
push
iret
adc
lods
pop
push
xchg
insl
into
cmpxchg
sub
add
les
test
jl
out
xor
out
aam
mov
test
add
sbb
clc
xorl
push
lock
pop
jle
fstpl
fwait
sub
adc
jg
rcrb
mov
je
or
cmp
int3
xor
push
mov
or
ja
add
dec
push
mov
add
lret
in
mov
lods
add
inc
adc
mov
adc
nop
sbb
mov
jl
loope
inc
arpl
cmp
repnz
xchg
lock
jno
loope
sub
das
or
mov
or
add
push
jo
in
push
sbb
push
lock
pushf
add
mov
pop
andl
push
inc
push
scas
sbb
clc
pushf
jnp
push
pop
nop
cmp
rorb
mov
or
jne
stc
jl
xlat
orb
scas
cld
lock
data16
arpl
in
xor
xor
jl
add
scas
or
inc
jns
subl
sub
enter
les
scas
outsb
int3
adc
lods
or
rclb
add
addb
loopne
fidivrs
dec
int3
adc
scas
mov
fs
jg
dec
andb
movsb
or
xchg
dec
jnp
mov
add
shlb
xchg
cmp
cmp
add
xchg
into
enter
pusha
add
rclb
inc
push
xorb
sbb
out
add
xor
mov
scas
sub
jbe
push
inc
jmp
cmp
bound
pop
js
je
and
cmp
aam
insb
movsb
mov
mov
in
stc
addr16
add
cwtl
pushf
mov
jns
jnp
lods
pop
loopne
sbb
or
orb
xchg
daa
adc
icebp
mov
and
inc
jbe
stos
les
adc
jg
sbb
and
jmp
jecxz
xor
cmp
xor
fs
jge
mov
adc
sti
inc
add
mov
and
jecxz
loopne
mov
cmp
mov
lods
cmpsb
test
jmp
cmp
pop
push
add
cwtl
xlat
cs
iret
dec
push
mov
ja
cmpsl
jl
shll
pop
mov
add
dec
fsubrs
add
pop
sub
aas
pop
and
mov
repnz
icebp
pushaw
add
sbb
mov
sbb
xor
int3
scas
or
cs
mov
or
xchg
lods
int3
add
pop
mov
and
sbb
lret
int3
add
sub
movsb
fwait
dec
addl
sbb
add
xchg
data16
sar
popa
insb
add
and
mov
cmpl
fcomp
sbb
cmp
sub
add
mov
subb
cmp
sbbl
in
or
xchg
nop
dec
sbb
xchg
data16
add
jbe
pusha
mov
cmp
mov
cld
sarb
push
clc
add
mov
test
push
jae
mov
rcll
sub
aas
fisubrs
and
loopne
test
jg
rolb
ljmp
iret
lahf
test
mov
into
in
sub
add
push
aas
into
mov
add
je
xchg
aaa
popf
test
jp
lods
add
dec
xchg
lret
pop
push
repz
push
fs
pushf
andl
rorl
mov
sbb
push
cmp
push
jle
neg
fcoms
sub
mov
cmpl
dec
or
enter
test
pop
pop
adc
jo
dec
dec
xor
xchg
aad
adc
add
fcmovbe
push
xorb
das
xchg
add
dec
andb
mov
add
jbe
shlb
add
cltd
mov
xchg
mov
mov
icebp
loop
and
add
jo
pop
sub
aaa
jne
roll
jno
or
cwtl
pop
test
loopne
arpl
jnp
imul
pop
sub
cwtl
xor
or
aad
adcb
and
inc
cmc
cli
add
sbb
push
or
add
cmp
cwtl
pop
jl
aas
loopne
popf
xchg
test
imul
clc
cld
jg
test
nop
adc
shl
cwtl
adc
mov
jbe
js
fcompp
adc
rclb
scas
push
push
ja
adc
ror
lock
loope
shl
sbbb
or
add
in
fcompl
sbbb
rolb
ds
sub
adc
cmc
test
int3
or
xor
imul
mov
rcl
inc
xchg
mov
sub
incl
lcall
addb
sbb
test
hlt
pop
mov
sbb
faddl
adc
mov
subl
pop
andb
rclb
dec
cwtl
dec
jl
or
pop
aaa
xor
mov
inc
jns
push
add
das
xlat
ja
sarl
mov
xor
xlat
adc
cmp
dec
test
cmpsl
sub
adc
pop
pop
arpl
cmp
out
pop
imul
mov
mov
inc
in
push
fiaddl
in
cwtl
lahf
or
mov
xor
jno
ljmp
jo
nop
xor
jle
xor
pushf
mov
int3
jl
add
mov
sbb
sar
popf
in
or
daa
sbbb
jle
lret
pop
call
pushf
enter
push
hlt
jo
xchg
sti
aad
jns
jl
inc
and
dec
das
dec
fsubs
in
sahf
pop
pop
cli
and
enter
or
xlat
dec
in
hlt
repnz
jnp
cld
enter
jb
sub
andb
push
inc
enter
in
push
rolb
fwait
cltd
xchg
mov
adc
pop
jae
push
lock
pop
fsubs
mov
cmp
push
sub
repnz
aam
hlt
ja
jmp
lds
dec
shr
pushw
cli
jg
rcll
js
shlb
aam
insb
and
cmpb
mov
cmp
sbb
inc
jbe
mov
adc
sarb
andb
add
cmp
je
jecxz
dec
pop
mov
lret
popa
lods
nop
clc
add
js
mov
xchg
add
popa
dec
and
lea
aad
fs
jl
clc
add
xchg
out
jbe
pusha
mov
mov
mov
incb
pop
lret
jne
lock
and
pop
das
loop
xchg
rclb
lea
je
push
push
mov
inc
idivb
rclb
pop
push
and
cmpb
lret
mov
jbe
andl
pop
jo
test
push
mov
rolb
imul
femms
adc
pop
cmp
dec
and
add
inc
jge
adc
cmp
ss
add
dec
and
inc
sub
mov
fiaddl
add
icebp
jg
inc
ret
andl
fst
call
pop
insb
repnz
aam
jo
pop
dec
addl
in
sub
mov
and
jl
inc
add
loop
arpl
pop
pop
and
mov
dec
enter
fsubl
notb
push
mov
xor
pusha
call
mov
jno
jbe
lock
aam
mov
test
fistpl
in
orl
push
daa
fsts
lods
fadds
sti
das
enterw
pop
sub
mov
je
movsb
imul
pop
leave
sbb
sbb
jbe
xor
jne
lods
pusha
sbb
fistl
insl
cmp
or
pop
jle
push
iret
mov
mov
push
jae
hlt
pop
pop
cmp
stc
js
mov
mov
lock
arpl
adc
pusha
jne
fisttpll
dec
sub
push
jo
aas
arpl
xor
push
pop
mov
xchg
pop
push
dec
inc
repz
loop
dec
sbb
and
push
cmp
xor
push
leave
xchg
push
push
addb
mov
lret
fcoml
inc
cmpb
push
inc
adc
adc
lret
icebp
clc
es
adc
bound
cwtl
add
or
fs
out
je
ret
js
loope
je
pushf
push
rcll
les
cmp
sub
test
enter
cmp
add
js
nop
std
fcomps
and
es
pop
enter
xchg
and
xchg
xorl
int
push
adc
cwtl
int3
rorb
push
clc
test
pop
pop
test
adc
add
jl
in
js
inc
dec
adc
sbb
stc
push
push
out
jo
xchg
clc
pop
iret
xchg
rcll
sbb
pop
addr16
mul
mov
jno
out
sti
dec
repnz
fwait
rcrb
imul
fstpl
stc
sub
pop
xor
xchg
leave
mov
mov
dec
ja
sub
push
leave
lea
adc
shlb
ficoms
dec
out
xchg
dec
addr16
aaa
inc
adc
sbb
sub
roll
and
xchg
pop
push
mov
cld
and
lret
mov
jo
pop
xchg
push
ret
je
pop
mov
pop
in
lahf
sbb
push
add
ficoms
pop
pop
mov
lsl
rorl
int3
add
add
lods
mov
inc
xchg
xchg
sbb
jb
xchg
sbb
ret
sahf
or
fs
pushf
jl
inc
xchg
clc
mov
add
arpl
push
lods
jge
shlb
stos
test
add
mov
sub
mov
and
add
loope
dec
cmpsb
nop
js
xchg
sti
jae
mov
or
pop
xorb
fs
sbb
or
sub
repz
sub
or
aad
pushf
mov
jle
or
sbb
into
adc
jbe
lods
dec
fcomps
pop
jl
pop
jecxz
cmpsl
xor
cmc
sub
mov
xchg
cld
cwtl
adc
add
nop
dec
pop
push
cld
pop
into
add
jl
jo
lods
mov
xchg
or
test
add
mov
int3
push
jno
or
loop
xor
addl
mov
mov
pop
test
xchg
sbb
insl
or
sbb
pop
leave
iretw
fisubrs
pop
negb
mov
push
clc
roll
dec
and
add
fnstcw
fsubl
je
xchg
push
add
push
mov
cwtl
call
ljmp
add
and
rolb
test
xor
jnp
and
dec
scas
jmp
add
clc
and
push
cmp
sbb
inc
lds
jae
je
sbb
clc
test
mov
and
inc
add
cld
add
fidivrs
ror
mov
incb
lret
and
xor
inc
sbb
mov
sbbb
in
ficoms
les
dec
sar
in
rol
rolb
inc
xchg
mov
shlb
lret
gs
test
subb
sub
bound
xor
mov
mov
add
and
iret
inc
inc
je
sub
mov
jp
mov
adc
pushf
fidivs
or
jo
add
mov
test
sub
mov
jl
pop
or
int
fndisi(8087
outsl
add
aad
pushf
or
arpl
pop
insl
push
jp
in
add
sahf
jb
out
jmp
test
mov
inc
mov
add
and
xor
or
shll
or
xor
int3
add
sti
and
into
sbbl
cltd
xor
xor
cld
test
xchg
ss
ljmp
mov
pop
and
lcall
sbb
out
mulb
xlat
or
pop
dec
xor
xchg
inc
nop
adc
add
sbb
loopne
and
jo
adc
xchg
fisubrs
mov
loopne
vunpcklps
fadd
add
outsb
xor
daa
mov
xlat
lods
mov
or
insl
jl
pusha
xchg
sub
scas
movsb
sbbb
push
mov
cwtl
jo
mov
dec
ja
rcrl
mov
mov
rolb
ss
cmpl
in
jmp
xor
mov
add
add
jle
int3
push
popa
mov
jg
sbb
inc
dec
and
movsb
or
push
ja
or
insb
outsl
dec
cmp
add
mov
add
pop
outsb
fcomp
bound
adc
cmpb
movq
gs
mov
push
pop
cmpb
test
lahf
clc
movsl
add
jle
pop
das
push
loopne
dec
fsubrp
dec
sbb
xchg
dec
popa
je
jle
xchg
add
push
sbb
mov
decl
popa
hlt
xchg
scas
dec
sub
inc
js
jmp
pop
dec
jge
mov
fisttpl
in
adc
dec
mov
fcmovnb
sub
add
mov
lods
ja
push
add
mov
mov
dec
pop
and
sbb
push
inc
ljmp
add
lods
loop
mov
outsb
add
jg
rcrb
ret
cmp
nop
mov
ret
xchg
test
call
fs
je
mov
out
arpl
add
test
sbb
clc
mov
xchg
mov
daa
mov
cmpsl
xchg
pop
cmpsl
rclb
adc
test
pusha
aam
arpl
sbb
aaa
jno
jmp
je
stc
test
adc
mov
leave
pop
mov
add
cmp
xorl
jl
add
lcall
push
fidivs
or
bound
fldcw
push
les
mov
shll
leave
xorb
push
in
mov
in
lods
mov
inc
ret
dec
jne
dec
add
dec
xchg
imul
addb
xor
fnstsw
sub
sub
add
sti
sbb
sub
push
es
lods
test
addl
mov
and
mov
push
mov
push
jmp
int3
sub
loop
adc
inc
daa
fsts
mov
ljmp
mov
ret
insb
fs
pop
xor
popf
int3
pusha
push
inc
out
sub
xor
lods
dec
add
lret
xor
je
mov
jbe
xor
ljmp
add
scas
push
xor
daa
dec
ret
push
cmp
mov
and
dec
xor
jp
lods
mov
sbb
loopne
sbb
pop
lods
mov
push
xor
arpl
mov
pop
data16
xor
insb
nop
adc
add
cmc
inc
mov
mov
int
pop
nop
mov
sbb
sub
loope
rclb
jle
ds
xor
jnp
lahf
pop
add
jl
orl
cmpsb
add
arpl
xchg
es
fidivrl
pop
arpl
adc
ljmp
lods
inc
mov
loope
or
aas
pop
cwtl
fsubl
sub
and
xchg
add
or
iret
divl
addr16
xor
hlt
mov
bound
dec
pop
je
lret
ret
scas
and
add
mov
in
aad
and
shl
lods
push
insb
add
add
xchg
sarb
ret
out
add
dec
adc
scas
andl
lock
cmc
jl
js
idivl
and
seto
pop
push
test
adcb
cmp
stos
add
jne
xor
aas
or
jecxz
xor
jg
jl
cwtl
adcb
xchg
sbb
push
int
popa
adc
int3
cmp
xor
xor
add
jg
ljmp
fs
imul
mov
shrb
jns
ret
push
out
or
jae
scas
or
lods
clc
sub
dec
fmull
ret
setp
inc
add
ret
dec
imul
iret
rorl
test
and
and
mov
adc
arpl
push
loopne
loope
jbe
dec
pushf
mov
popa
add
push
jle
xor
aaa
mov
push
inc
sub
xor
push
jns
or
adc
fisubrl
dec
sbb
lahf
pusha
loope
mov
rcrl
rcrb
inc
je
pusha
or
testb
xchg
push
mov
mov
movsb
sti
mov
and
push
clc
out
mov
loopne
sbb
loope
add
nop
insb
clc
roll
cli
inc
xor
les
add
jge
sbb
pop
ret
jo
xor
idivb
jmp
scas
mov
and
add
fwait
insb
lahf
jne
int3
push
sub
inc
sbb
je
insb
dec
add
out
pop
or
outsl
mov
les
jecxz
out
pop
inc
addb
mov
inc
pop
xchg
sub
cmp
jecxz
add
rcr
jmp
repz
add
dec
pushf
cltd
clc
push
pushf
xchg
dec
push
sbbb
cmpsb
popf
sbb
jmp
dec
adc
in
orb
xchg
jnp
push
pusha
dec
sti
lret
push
or
hlt
mov
mov
xlat
dec
cld
and
jne
insl
lea
ljmp
shrb
inc
addr16
loopne
and
inc
rcll
arpl
icebp
mov
add
cmp
int
xchg
pop
sarb
icebp
adc
inc
lret
adc
bound
shrb
shlb
add
arpl
ja
sti
add
insl
jmp
jnp
cmp
or
ds
pop
popa
xchg
ror
imul
mov
fwait
lock
jg
and
xchg
push
aam
je
inc
lret
cld
lds
pop
sbb
aam
jp
xchg
cmp
mov
xor
pop
aas
sbb
hlt
mov
or
mov
cmp
or
movsl
fsubr
jecxz
insb
aam
push
bound
adc
inc
mov
add
sub
int3
sub
clc
sub
jecxz
loopne
aad
or
mov
push
movsb
and
pusha
mov
fildl
and
lcall
rol
mov
je
sbbl
popa
lock
les
loopne
jns
xor
rorl
arpl
in
lods
nop
mov
mov
addb
mov
mov
fwait
mov
js
lahf
enter
mov
cwtl
xchg
pop
mov
xchg
clc
mov
test
ss
xor
cmp
aaa
lods
call
jno
into
sub
add
cmpsl
inc
jne
test
sub
xchg
inc
sbb
add
xor
mov
adc
test
push
fistl
rolb
jmp
pushl
ds
xchg
xor
test
xor
lods
pop
or
loopne
ja
je
mov
push
pop
adc
and
add
pop
shll
add
cmp
sti
stos
adc
pop
adc
je
inc
xchg
lods
loopne
pop
xor
sbb
adc
sub
cmpl
and
ficoml
or
test
mov
aad
ret
jmp
mov
dec
mov
inc
nop
jl
cwtl
sbb
push
mov
xchg
clc
fldl
daa
scas
xor
iret
jno
adc
mov
int3
test
jp
or
cmp
xchg
pop
or
notb
or
pop
sbb
mov
and
xor
gs
out
add
popa
lcall
sub
or
adc
fdivrs
adc
jbe
add
outsl
xor
mov
nop
test
fadd
sub
insb
pop
pop
shlb
hlt
addb
in
inc
jecxz
add
mov
or
jnp
loop
and
loopne
and
dec
adcl
pop
in
cmp
pusha
dec
xchg
sbb
push
into
inc
xchg
push
pop
pop
jl
adc
call
lods
movsb
cmp
cmpsl
mov
add
sub
inc
lock
jg
or
insb
add
dec
push
inc
addr16
pop
cmp
enter
repnz
mov
enter
or
pusha
or
jg
sub
jecxz
cltd
mov
xchg
xor
or
push
jecxz
mov
push
movsb
pop
mov
jl
sbb
mov
daa
xchg
jno
mov
bound
sub
out
add
mov
mov
add
pop
fs
in
js
or
xor
enter
inc
jmp
add
cmp
lcall
jl
add
push
xorl
pop
xchg
mov
jl
pusha
aad
xorl
cmpsb
mov
dec
jg
in
ds
test
loopne
push
xor
inc
test
test
je
add
andb
cwtl
pop
cmp
sarl
jmp
mov
push
loope
adc
mov
mov
adc
jge
pop
mov
dec
sub
imul
mov
inc
rcr
ljmp
cmp
inc
sub
sub
dec
adc
inc
xor
cmp
push
ja
movsb
sub
push
mov
rcrl
inc
shl
mov
add
push
dec
aam
push
arpl
icebp
fnstcw
aas
pop
push
xchg
repnz
cwtl
cmp
ud2
test
cld
add
shl
fwait
add
inc
jge
sub
in
mov
pop
push
clc
mov
daa
icebp
enter
aam
pop
xorl
or
cmc
jge
mov
mov
insb
mov
xor
les
cmp
dec
pop
mov
mov
mov
add
test
adc
mov
dec
jg
fs
fs
je
pop
adc
mov
pop
loop
lock
mov
jge
adc
xchg
test
jns
inc
pop
jmp
cmp
mov
fstpl
js
and
pop
jg
negb
addb
movsb
pusha
add
divb
push
test
mov
clc
fs
ss
movsl
cli
inc
aaa
xchg
push
push
addb
dec
subb
add
movsb
jne
cwtl
repnz
pusha
pop
sbb
cli
xchg
in
xor
fisttpl
loopne
dec
add
dec
clc
in
xchg
add
push
inc
int3
jb
mov
sbb
imul
inc
int3
pop
dec
add
je
xchg
insb
adc
xorl
cwtl
mov
movsb
or
and
pop
jl
sti
sahf
xchg
jl
xchg
pop
pushf
adc
mov
dec
in
cli
int3
pusha
paddsb
adc
into
add
xchg
sti
cwtl
cmp
cmp
shl
mov
pushf
mov
add
mov
flds
add
aas
pop
std
mov
or
xlat
shrb
fistpl
enter
adc
cmp
add
cmp
jno
addb
xchg
mov
jl
test
cmp
neg
shlb
mov
jl
dec
jbe
sarb
dec
mov
add
xor
cmp
xchg
movsb
pop
sbb
dec
sub
clc
xor
mov
push
sbbb
push
adc
dec
mov
dec
mov
sub
dec
push
and
dec
add
lcall
inc
or
ds
xchg
aaa
ret
and
xchg
add
xchg
dec
sbb
sti
pop
adc
add
cmc
push
idivb
xchg
lret
ljmp
call
and
xchg
push
inc
mov
jl
lods
iret
add
mov
sbb
repnz
daa
out
sub
out
lea
or
movsb
fcoms
sub
addl
adc
dec
add
jmp
mov
inc
push
in
mov
in
int3
pop
andb
add
mov
mov
pop
imul
cld
cmpsb
rorb
mov
push
aam
mov
pop
lock
sbb
adc
sbbb
adc
scas
subb
lods
outsl
andb
mov
dec
pushf
hlt
addb
and
int
or
pop
ljmp
pop
cmp
add
adc
pop
jmp
mov
jae
xor
pop
clc
pusha
add
test
cmpsl
and
adc
call
or
popf
js
and
adc
frstpm(287
aas
jle
out
mov
push
inc
sub
lret
pop
mov
jne
in
xchg
mov
insb
jo
dec
mov
cmp
jns
inc
xor
pop
cmp
push
sti
ror
out
add
xor
mov
jb
sub
mulps
loope
push
idivl
xor
loopne
mov
lods
add
jp
sbb
imul
cmpl
popa
mov
jle
sbb
call
add
add
xchg
mov
jge
inc
pop
cli
mov
cwtl
mov
subb
and
movq
lret
adc
sti
dec
aas
mov
cmp
and
sub
mov
or
in
mov
icebp
das
call
int
xor
xchg
or
add
inc
pop
cmc
orb
cwtl
int3
gs
push
imul
sbbb
adc
xor
jge
mov
dec
xchg
mov
xchg
cmp
ja
je
sbb
adc
and
pop
stc
or
or
jmp
ss
add
jo
stos
jg
in
sar
add
inc
pop
pop
lods
inc
dec
mov
jl
pop
jno
cmp
sbb
lret
jns
add
push
data16
cld
add
or
and
xor
call
jle
inc
inc
mov
fs
hlt
subl
add
push
add
out
xor
dec
loopne
jnp
adc
aam
and
mov
mov
adc
add
xlat
push
pop
adc
mov
xorl
xchg
xor
mov
adc
jb
xchg
fs
push
stos
nop
cltd
mov
mov
out
adc
pop
xchg
stc
xchg
ret
hlt
pop
arpl
fisttpl
sbb
dec
or
or
xchg
scas
add
push
ret
aam
xchg
movsb
imul
sub
lods
dec
shl
addr16
cwtl
cmp
push
sub
cmp
jle
mov
xchg
add
mov
ds
insb
or
jle
mov
or
cmp
movsb
pop
lock
scas
pusha
cmp
add
addr16
roll
jns
mov
mov
andb
add
aas
push
add
dec
jbe
add
jnp
mov
inc
mov
loop
les
mov
inc
stc
clc
xorb
dec
cli
mov
frstor
add
stc
cmp
cmp
sarl
sub
test
add
ss
faddl
mov
in
fs
jbe
dec
into
in
orb
imull
pusha
xchg
loop
andl
rcrb
fildll
fcoms
addr16
or
adc
mov
call
xchg
pop
cltd
jne
add
pop
cmpsl
sub
in
push
sarl
pop
mov
jle
scas
cmp
into
lock
sarb
adc
nop
push
adcl
or
js
rcrb
xchg
nop
fwait
or
jle
inc
in
je
dec
pop
test
add
jb
jle
icebp
in
sub
aam
inc
xchg
popl
dec
jecxz
lahf
dec
sbb
out
lock
repnz
mov
cld
movsb
test
sbb
inc
and
ret
arpl
sub
mov
and
mov
add
in
push
adc
loopne
adc
addr16
adc
loopne
fimull
lret
in
push
bound
adc
adc
sarb
jmp
dec
gs
arpl
push
loopne
push
jle
repz
adc
mov
sti
lahf
adc
ja
cmp
or
or
mov
aam
je
mov
cmc
cwtl
js
mov
lret
add
pop
arpl
add
mov
arpl
add
filds
filds
sbb
int3
sbb
add
out
js
jnp
or
arpl
je
dec
add
sbb
xchg
cmpl
mov
gs
xchg
call
notl
sub
xchg
mov
jg
jae
xchg
nop
call
nop
push
out
xchg
pusha
jae
lods
pop
daa
inc
popf
pop
faddl
pop
test
int3
add
push
xor
mov
loopne
add
push
test
les
aad
pop
mov
shll
inc
loopne
sahf
inc
xchg
mov
dec
cld
mov
sbb
sahf
test
fstl
mov
mov
popl
sub
inc
or
das
fs
adc
jmp
je
mov
cmp
xchg
push
in
lods
test
fmuls
xor
filds
dec
push
push
pop
jbe
rclb
andl
add
arpl
test
fimull
pop
pop
adc
std
int
dec
call
mov
rorb
sub
lods
jl
sub
fwait
loope
imul
push
dec
dec
mov
and
fwait
push
mov
mov
or
push
sbb
out
push
pop
push
pusha
cli
xchg
push
insl
pop
mov
dec
cmp
pop
mov
and
rcrb
and
push
xchg
es
push
arpl
mov
lret
mov
scas
xchg
xchg
pop
adc
loop
push
lahf
add
outsb
test
mov
jne
pop
dec
push
in
push
sbbb
xchg
xor
mov
xlat
jl
dec
cs
adc
push
movsl
repz
add
cld
xchg
or
orb
adc
pop
add
insl
stos
cmp
in
jg
orb
loopne
mov
into
xchg
adc
pusha
mov
push
push
sub
ljmp
sbb
and
cwtl
clc
out
mov
or
arpl
sbbb
adc
rcrb
xor
cmc
xor
cmp
inc
je
jne
sub
mov
in
sbb
test
jl
pusha
mov
mov
lcall
sbb
and
lock
or
add
mov
adc
ficoml
js
imul
pushf
xchg
sbb
dec
xchg
xor
xor
dec
call
pushf
cld
das
pop
aad
imul
fxch
sbb
cld
sub
dec
ds
insb
pop
dec
aas
sub
loopne
int3
xor
inc
adc
ds
cld
rcrb
cmp
pop
adc
adc
cmp
mov
test
fisttps
fwait
xchg
jp
mov
cmpsb
and
sbb
jg
aam
push
xchg
cmp
sbb
and
les
xchg
outsb
mov
test
dec
adc
jo
cs
out
loop
ret
jle
test
and
fisubl
test
mov
mov
cwtl
pop
andl
cli
fwait
dec
jnp
loope
and
mov
ljmp
or
es
out
add
ss
popl
inc
pop
adc
mov
addb
xor
jl
jae
popf
xor
cltd
adc
mov
mov
nop
shrb
imul
xchg
inc
or
or
jle
sub
adc
les
insl
imul
push
scas
stos
dec
pop
mov
cmp
xchg
test
jo
dec
jnp
mov
push
jae
add
hlt
inc
cmpb
pop
cli
hlt
xchg
xor
rolb
push
iret
pushf
add
dec
and
jnp
adc
aaa
push
sbb
fyl2xp1
les
into
cmp
adc
mov
pop
xor
cmc
cwtl
dec
cmc
fiadds
not
lods
jne
or
push
lds
jo
pop
mov
icebp
sbb
scas
inc
pop
xor
bound
inc
addr16
subb
outsb
loope
in
movsb
aam
nop
inc
jmp
jns
sub
jp
in
mov
outsl
leave
jnp
movsb
in
dec
cmp
add
dec
fstps
push
addb
xchg
add
ds
sti
mov
or
out
sbb
filds
sub
jmp
les
pop
in
sub
xor
mov
jne
pop
xor
fxch
repz
push
adc
cld
hlt
rorb
pop
jnp
mov
and
test
rorb
stos
adc
jl
fmuls
daa
jbe
out
or
xor
mov
sbb
dec
fldcw
clc
ljmp
add
push
repz
insb
mov
push
jg
subl
int3
pop
xchg
push
mov
test
add
dec
mov
sbb
sbbb
call
pop
pushf
mov
xor
jnp
inc
inc
clc
or
push
sub
shrb
mov
sti
jge
lods
loopne
fistl
jae
aaa
jp
les
or
and
mov
jp
or
lods
dec
pop
mov
sahf
out
xor
in
daa
icebp
push
inc
lods
cmp
int3
xchg
popl
movsb
mov
loop
and
mov
add
out
dec
adc
in
rorl
pop
push
xchg
rclb
mov
mov
pop
test
call
ret
or
mov
daa
out
sbb
and
dec
fidivrl
int3
inc
je
or
push
pop
insl
mov
fprem
cmpb
adc
or
inc
cmp
pop
xorb
mov
cmp
sbb
fisubrs
call
and
jl
lock
xor
pop
mov
push
add
xchg
ret
test
js
add
jno
nop
jb
pop
jp
xor
repz
lret
add
js
loopne
ja
adc
add
test
fwait
jl
cmpl
xchg
and
sub
push
jae
or
push
inc
adc
jo
ror
sub
gs
push
xchg
cwtl
adc
add
je
insb
sbb
cmp
inc
daa
out
pusha
dec
movsb
jnp
rolb
jle
mov
popf
cmp
and
ds
lcall
adc
mov
push
repz
xor
dec
scas
and
cmp
clc
mov
je
mov
cwtl
cwtl
pop
inc
or
gs
push
push
pop
mov
adc
pusha
sub
insb
adc
mov
inc
call
xor
stc
add
xchg
outsb
ja
sti
lock
adc
jge
cmp
mov
push
pushl
mov
adc
aas
test
mov
orb
movsb
sbb
leave
cmc
jecxz
push
loop
lret
jnp
mov
sahf
fdivrs
andb
push
dec
mov
mov
in
dec
and
xor
or
das
and
pusha
push
popf
and
call
add
mov
cld
pop
cs
jno
mov
mov
lret
cwtl
pop
adc
add
jne
push
insl
rclb
enter
into
jns
sbbb
sbb
cld
pop
subb
mov
or
mov
mov
and
andl
dec
data16
add
or
je
jp
fcomps
std
rcll
in
ljmp
sbb
inc
sti
pusha
inc
mov
dec
pushf
ss
in
push
inc
mov
cmpsb
fnclex
pop
sub
cmpb
dec
jbe
ret
out
sar
sub
push
dec
es
aaa
mov
paddusb
bound
shrb
out
cmpsb
adc
sbb
mov
or
rcl
lret
push
mov
add
aad
add
rcrl
or
test
sbbl
jmp
xchg
lds
popa
inc
xor
sbb
xchg
or
jge
call
cld
repz
add
mov
sbb
lock
or
add
icebp
jg
pop
inc
faddl
lds
pop
xor
psubusw
sub
push
mov
push
push
jge
mov
addb
sbb
call
or
js
mov
lock
jmp
push
inc
sbb
les
sub
rclb
cmp
daa
sbb
add
and
jnp
pop
icebp
shr
xor
pop
lds
and
mov
inc
in
out
and
mov
jmp
psubd
dec
scas
push
or
insb
jecxz
xor
lahf
cld
add
je
test
jge
pop
mov
mov
adc
fwait
in
dec
lods
xchg
xor
loop
cli
push
or
push
cs
pop
jge
out
aam
add
adc
adc
aaa
andl
sbb
popf
loopne
pop
out
dec
jo
inc
stc
sub
imul
lods
adc
and
out
fsubrs
rcll
push
adc
jbe
cwtl
xor
push
adc
stos
cmp
into
and
and
xor
in
fistl
aas
outsb
mov
sub
pop
loope
dec
cmpb
jb
test
ret
repnz
sti
mov
xor
xor
icebp
jecxz
add
fisttpll
jnp
jl
inc
mov
ljmp
imul
adc
out
mov
bswap
jno
and
inc
pop
add
jmp
dec
cmc
mov
stc
jge
out
add
cmp
cmpsl
rcll
xor
mov
mov
fistl
mov
int3
add
or
jl
inc
fwait
outsl
out
enter
add
pop
push
lock
adc
inc
pop
jp
cltd
faddl
das
push
cmp
aas
cmpb
cs
push
inc
inc
push
mov
loope
xchg
insb
mov
pusha
ret
popa
fisubrl
pop
add
neg
mov
mov
xchg
and
addb
fwait
les
or
jbe
lock
ret
out
add
jle
es
xor
add
insb
pop
cmp
push
xchg
xor
inc
and
cmc
sbbb
and
sub
lds
xchg
xorb
push
push
ret
jp
jbe
pop
or
loop
lds
stc
aas
sub
ficoms
fdivrs
xchg
add
mov
sahf
dec
andb
pushf
mov
push
js
movsl
lret
ja
add
addl
test
adc
sub
push
js
ret
aam
adc
mov
and
dec
cmp
mov
push
sbb
push
mov
add
je
push
cmp
aaa
sbb
shll
jno
movsl
icebp
inc
sub
repnz
sub
push
fadds
lcall
lock
leave
xchg
push
cli
divl
add
lock
pop
inc
pop
sarl
mov
int3
mov
push
sbb
loopne
das
cmp
jle
outsl
lock
adc
push
sbb
adc
lock
je
sti
or
mov
mov
sub
pushf
mov
icebp
adc
arpl
daa
in
cld
or
pop
dec
or
xor
xchg
sub
faddl
add
add
xchg
and
orb
loop
adcb
dec
mov
push
test
loopne
xor
in
or
xchg
jg
loopne
clc
add
mov
push
jmp
dec
jb
scas
fsubrs
int3
mov
nop
jne
insb
inc
adc
adc
jmp
mov
lock
sahf
call
add
outsl
inc
xor
loopne
mov
pop
cld
cmp
call
lret
cmp
cwtl
aam
imul
lock
pusha
jns
jae
sub
xor
add
xchg
mov
adc
adcl
aad
loop
jbe
enter
clc
rorl
pop
pop
jg
jae
test
out
jns
in
adc
jns
sbb
sahf
js
jl
adc
push
les
sbb
scas
pop
js
or
pop
shl
push
in
mov
pusha
mov
fs
movl
push
imul
shlb
add
idivb
xor
xchg
int3
push
insl
dec
pop
mov
outsl
pop
inc
sarl
add
and
mov
add
pushf
or
adc
popf
cmpsl
jae
inc
push
rcrb
cwtl
enter
mov
adc
iret
out
add
mov
js
daa
repz
mov
shrb
adcb
andb
repz
mov
and
pandn
sarl
bound
lods
clc
mov
sub
and
mov
int3
mov
sub
dec
and
stc
jg
shlb
adc
decb
inc
push
adc
push
je
mov
pop
aam
jle
jg
orb
lea
mov
inc
and
lock
fdivr
mov
fiadds
sub
es
mov
jl
and
adc
shlb
lahf
sbb
push
popa
add
aam
push
mov
iret
lock
loope
sub
push
add
imul
imul
adc
mov
cmpb
mov
test
cs
clc
xor
sub
rclb
lock
loopne
aad
add
sbb
sarb
jbe
jmp
push
pop
stos
xor
shrb
pop
test
or
popl
adc
icebp
sub
loopne
pop
xor
fildl
mov
adc
loop
in
mov
xchg
iret
cltd
sbb
scas
adc
jl
mov
push
mov
mov
inc
add
jne
cmp
pop
dec
push
jb
xchg
xchg
clc
aam
push
sti
popa
fisubrs
pushl
mov
nop
xor
inc
and
std
xorb
and
ja
inc
add
xchg
aam
jle
repnz
ljmp
clc
into
xor
shrl
dec
add
dec
jp
jle
mov
sarb
or
adc
push
adc
daa
sti
pop
aam
pop
sub
inc
cwtl
sbb
loope
lds
and
test
push
cmc
aaa
mov
pop
fwait
test
xor
sub
xchg
mov
lods
cld
jb
movsb
pop
jecxz
and
dec
sub
jbe
mov
popa
rolb
mov
sbb
notl
fisubs
pop
lds
sub
mov
shlb
pop
jl
and
imull
inc
jae
push
dec
ja
pop
addb
arpl
xchg
jno
sub
add
cwtl
and
jecxz
subl
mov
clc
pop
xor
cmp
pop
inc
pop
pop
fstps
xorb
sub
push
je
pop
mov
xchg
inc
test
and
repz
xchg
jbe
shlb
and
fdiv
ja
xor
test
adc
push
xchg
sub
loopne
daa
lds
add
mov
fs
cwtl
add
rcr
enter
jp
and
jle
xor
or
cld
andb
sub
cmp
xor
insl
mov
imul
adc
pop
mov
pop
dec
es
pusha
loopne
gs
pop
dec
cmp
pop
cwtl
jl
xor
sbbb
jne
pusha
nop
cwtl
rorb
cmp
aam
push
cmp
aaa
push
push
outsb
icebp
inc
scas
pop
aam
subl
sub
cld
xor
clc
inc
mov
js
cmp
rolb
call
lret
push
dec
lods
or
pavgw
dec
lods
cwtl
dec
add
rcl
xchg
xchg
mov
addb
mov
js
adc
cmc
outsb
xchg
dec
repnz
dec
mov
pop
xor
call
mov
ja
loopne
rcrb
seta
fsubrl
notb
int3
xor
sbb
pop
movsl
lock
adc
add
repz
adc
cmpl
cmpsl
in
test
shll
ss
or
mov
mov
or
add
xchg
aas
clc
mov
sbb
mov
fwait
push
nop
push
mov
xor
pop
sub
sbb
ret
std
sbb
mov
and
test
faddl
xchg
push
and
and
or
jle,pn
das
pop
fadd
push
jge
int
sbb
imul
inc
pop
rcrb
movsl
push
shlb
add
mov
scas
out
stc
adc
push
in
add
xor
sub
mov
xchg
mov
js
dec
pop
mov
mov
mov
loop
stos
pusha
orl
mov
xchg
and
std
cmp
daa
notl
mov
int
add
mov
rolb
and
xor
outsb
lods
pop
and
rcr
cld
orl
xor
cmp
inc
add
push
mov
adc
fisttpl
cld
test
xor
and
pop
jnp
pushf
fcomps
int
loopne
dec
cwtl
xor
daa
push
sbb
pop
add
or
pop
cmp
jl
rcr
mov
decl
stc
sbb
je
jmp
or
clc
sbb
or
inc
jae
lret
lahf
sub
pop
mov
cltd
int3
mov
les
and
scas
je
push
lahf
xchg
fs
add
jp
cmp
aas
cmp
int3
sbb
dec
jbe
and
dec
or
nop
cmp
add
dec
mov
lret
add
inc
lret
xchg
sbb
and
out
dec
push
mov
xor
adcl
add
push
jo
mov
hlt
inc
or
xor
push
xor
dec
popf
repz
add
xor
push
ss
arpl
ret
das
pusha
rorb
xor
pop
mov
dec
movsb
dec
mov
ret
mov
pop
pushaw
add
sub
and
add
adc
push
mov
int3
pop
insb
testl
adc
mov
or
mov
push
lret
jo
mov
lods
mov
insb
pop
xchg
int3
add
mov
push
cmp
jno
and
dec
xorb
ljmp
call
lret
fstpt
test
aaa
or
ja
add
iret
fstp
adc
lods
cld
xchg
add
xchg
jne
into
push
addb
xchg
shll
stos
push
adc
leave
add
mov
inc
ja
in
adc
pushf
cmpsl
xchg
xor
lahf
xchg
movsl
dec
jbe
jo
pop
mov
xchg
or
xlat
jecxz
les
mov
add
push
std
xchg
rcl
mov
movsb
push
cmpsb
jge
mov
jg
xor
inc
std
adc
or
pop
inc
push
ljmp
pop
fwait
adc
insb
mov
add
sub
sbb
cmp
dec
cmpsl
sub
add
jmp
and
mov
xchg
rcll
xor
and
out
lcall
push
js
push
push
hlt
rorb
int3
adc
add
pop
cwtl
xor
inc
stc
repnz
loopne
jg
cmp
scas
push
mov
sub
and
add
cmp
add
mov
ret
pop
data16
sub
mov
xchg
jl
pusha
dec
mov
cmp
xchg
inc
or
mov
xlat
fisubs
pop
dec
fsubrl
or
subb
or
mov
and
popf
push
xor
lods
cs
ja
hlt
pop
std
mov
xorl
cmp
and
dec
xor
xor
xor
addb
lock
push
loop
icebp
and
sub
xchg
rolb
mov
push
mov
stos
sbb
add
jg
xlat
jge
fdivs
add
outsl
dec
stc
clc
popa
fisttps
or
add
sbb
cmc
pusha
je
int
adc
and
je
mov
test
cs
pushl
test
adc
out
test
sbb
sub
jg
jo
xor
and
pop
jmp
xchg
cwtl
fmull
mov
add
in
add
jl
int3
add
mov
aad
push
dec
pop
les
pushf
adcl
das
xor
push
dec
outsb
jecxz
add
inc
cmp
push
pop
inc
arpl
xchg
mov
out
adc
out
mov
cwtl
ja
sbb
mov
xchg
mov
dec
dec
adc
mov
cwtl
in
iret
add
loop
lret
push
call
scas
sahf
sub
pop
ret
lds
push
add
jl
icebp
cwtl
cld
add
punpckldq
jl
nop
mov
stc
dec
jne
inc
repz
adc
jbe
add
push
jg
add
ret
mov
push
testl
sub
icebp
mov
add
out
jb
xlat
cmp
or
pop
xor
movsl
dec
fadds
clc
inc
add
or
or
mov
popf
add
shr
cmp
hlt
jl
pop
push
or
les
mov
lock
and
cmp
pop
dec
inc
dec
out
cld
cwtl
add
loop
dec
or
or
rcll
ret
add
repnz
xor
cli
loopne
adc
orb
add
fnsave
jnp
movups
cmpsl
mul
add
scas
and
mov
rcl
mov
push
cmp
std
mov
imul
xor
stos
into
repz
or
insl
mov
cmp
fldt
jg
xor
and
icebp
push
sub
js
add
addl
std
lods
jno
and
dec
push
cmp
add
push
icebp
hlt
andl
in
and
pop
mov
push
xlat
clc
jne
cld
dec
push
jb
xchg
mov
xor
lods
movsb
pushf
pusha
push
adc
or
pushf
add
and
sbb
or
nop
mov
dec
push
loop
ret
jbe
cmp
test
xchg
xor
push
loopne
cmp
jge
imul
add
sbb
mov
notb
add
in
mov
loopne
pop
cmp
push
dec
xlat
cmc
popf
ljmp
pop
jp
cwtl
and
adc
add
xor
mov
mov
cmp
add
xor
mov
call
pop
je
or
outsb
movsl
jns
adcb
inc
xor
test
push
sbb
mov
in
mov
and
dec
cmp
fsubs
into
xchg
cmp
in
fisttpl
daa
pushf
int3
in
and
addb
jno
push
out
sub
clc
push
mov
or
ffreep
je
dec
in
push
inc
pop
xlat
enter
xor
sub
rolb
xor
cmpsl
cmpl
das
inc
cmp
add
or
xchg
dec
cmp
dec
add
inc
in
pop
mov
repnz
xor
xorb
or
shll
popa
sbb
cld
mov
jnp
and
in
out
cs
jbe
outsb
shrb
es
jae
add
iret
cmpl
dec
cmp
cwtl
popf
pop
or
xor
mov
ret
xor
inc
mov
movsb
cmp
lea
sub
imul
js
xorl
addb
mov
fsts
nop
dec
jle
sarl
cmpsl
loop
or
push
inc
dec
mov
lods
test
jo
arpl
mov
xor
int3
scas
clc
rorb
push
pop
mov
fsub
jmp
rclb
pop
dec
push
jl
add
and
xor
jle
pop
add
mov
sub
inc
je
pop
fwait
enter
dec
lds
mov
gs
addb
sub
add
add
xor
and
adc
cli
into
in
imul
adcb
add
mov
sbb
repz
push
cmp
add
adc
dec
mov
into
inc
xchg
jae
mov
sub
in
lea
mov
push
and
mov
fnstcw
mov
pop
cmp
mov
xor
adcl
sub
mov
dec
adc
popa
movsb
xchg
sbb
jnp
add
aam
inc
das
adcl
add
jne
push
sub
inc
ss
into
push
xchg
pushf
and
daa
fs
in
or
pop
cmpl
arpl
sarl
bnd
mov
pusha
sub
push
insb
push
insl
cld
cld
mov
cmp
inc
xchg
and
mov
in
jmp
jae
push
andl
imul
or
mov
cwtl
xchg
jle
or
mov
cmp
sti
popf
in
loopne
mov
stos
daa
sbb
mov
sbb
clc
adc
repnz
push
pop
fistpll
add
js
std
add
or
push
jne
sbb
icebp
push
lods
cld
adc
dec
popl
add
fdivs
rep
adc
mov
iret
lods
test
push
dec
pop
push
rcrb
lcall
and
int3
push
or
popa
push
or
pop
andl
inc
shll
adc
clc
xor
or
inc
add
sub
popa
pop
cmpsl
rorb
sbb
je
push
sub
add
lds
mov
divb
jb
mov
push
test
pop
cwtl
mov
arpl
mov
cmpsb
adc
ret
out
pop
add
daa
pop
shr
neg
and
jecxz
mov
xor
mov
mov
jbe
jg
sbb
push
add
lcall
add
sub
xchg
sbb
xchg
repnz
ret
jg
gs
push
jle
pusha
test
mov
pop
fisubs
cli
cmovl
fdivs
pop
adc
adc
cmp
inc
cmpsb
or
add
pop
jmp
fisubl
dec
mov
adc
decb
cmp
loope
adc
jae
fsqrt
and
movsl
fdiv
and
testb
fwait
dec
dec
mov
add
int
mov
mov
xor
loope
jb
mov
jp
mov
les
cmp
pop
lock
add
mov
mov
ret
jge
test
aas
push
mov
add
add
std
insl
scas
and
jne
pop
jns
xchg
jae
xchg
inc
xchg
jmp
je
push
scas
cwtl
push
sbb
push
sbb
lods
jne
adc
je
movsl
lock
add
idivb
xorl
mov
sbb
clc
inc
ds
mov
and
sbb
lea
stc
test
push
cld
enter
dec
xor
pop
push
cmp
add
cltd
repnz
jecxz
add
sahf
xor
shrl
jle
xchg
loop
jnp
pushf
inc
pop
dec
rolb
aad
sbbl
nop
adc
pop
mov
lret
mov
lock
inc
inc
sti
xor
popf
repnz
repnz
mov
jne
push
ss
lods
scas
subb
xor
ret
cltd
inc
pusha
and
pop
push
pusha
das
or
daa
mov
fstl
jle
rclb
push
out
sub
divb
mov
inc
inc
movsb
pop
cmc
push
mov
lahf
insl
add
mov
inc
pop
dec
loopne
mov
xor
mov
inc
mov
into
hlt
push
addr16
sarl
mov
movl
ds
jne
dec
rol
add
push
scas
clc
jg
or
insb
jns
daa
je
add
pop
mov
subb
pop
andl
adc
test
rolb
daa
jmp
inc
mov
jne
push
push
sub
adc
insb
add
xor
into
mov
pushf
inc
pop
jecxz
jne
cwtl
sub
sub
push
loope
int
mov
jnp
add
dec
inc
mov
dec
mov
sbb
sahf
divps
test
fstps
sbbb
nop
lods
jmp
pop
or
rol
mov
inc
pusha
and
xchg
fisubl
dec
test
sarb
xor
movsl
sub
in
in
aam
mov
pushf
insb
inc
jle
mov
cmp
fsubr
inc
cltd
shrb
mov
and
pushf
adc
pusha
xor
call
cmp
jg
mov
mov
fsubl
daa
cli
neg
mov
scas
cltd
mov
pop
xchg
aad
xor
into
pushf
push
sbbb
mov
adc
add
mov
pop
cmp
jne
or
lea
dec
xor
rolb
mov
ss
sarb
lock
add
test
cmp
cli
mov
adc
loopne
sbb
adc
shl
sub
stc
or
jmp
mov
add
cltd
push
insb
andb
jnp
add
mov
jp
jo
int3
daa
enter
jmp
xor
cmc
and
lods
xchg
mov
mov
dec
mov
pushf
daa
push
test
sbb
jecxz
test
shr
mov
push
xchg
xchg
sub
xor
or
lock
enter
les
xorl
add
pop
xchg
or
sub
dec
fiadds
push
lret
aam
setg
loopne
enter
dec
cmp
mov
push
popa
es
je
popa
insb
outsl
and
sbb
and
ja
enter
and
add
sub
cld
mov
lods
push
fsub
stc
call
insb
add
into
cmpsb
std
sbb
jnp
push
jae
aad
and
arpl
lret
jg
or
inc
inc
cmc
fidivs
cli
popf
pop
push
pop
nop
cmp
jg
jno
add
iret
test
cmp
xchg
adc
jno
jnp
stc
in
andb
loopne
cmp
pop
mov
ret
sub
cwtl
add
repnz
pushf
test
dec
subl
lret
xor
pop
push
pop
addr16
movsb
rclb
lods
test
loopne
and
or
or
inc
out
inc
testb
pop
pop
out
ret
sbb
cli
in
imul
pop
add
sub
leave
int3
sub
ret
ret
xchg
push
ljmp
outsb
sbb
jge
in
inc
jp
and
jne
mov
ja
add
dec
subb
push
mov
fistps
xor
dec
mov
test
jnp
jg
push
ds
les
jae
fnstcw
mov
imul
dec
lcall
cmp
nop
and
mov
stos
sbb
or
das
push
xchg
jns
imul
dec
scas
add
and
add
in
insb
sbb
xor
cmpsl
aas
jg
addb
push
lret
es
xor
call
cld
addl
xlat
subb
je
popf
mov
sub
xchg
daa
test
cmpsb
fisubs
clc
ja
cmp
je
adc
data16
nopl
insb
push
enter
fbld
add
in
adc
daa
mov
les
add
sub
pop
add
xchg
das
or
repz
add
push
lock
xchg
sbb
mov
adc
pop
pop
ret
jp
add
stc
js
adc
sub
fiadds
arpl
mov
iret
dec
add
lahf
gs
xor
pop
imul
pop
mov
ret
sub
jnp
push
or
xchg
pop
or
cmpsb
dec
arpl
jo
test
jo
subl
push
add
push
inc
aas
inc
lods
scas
pop
xor
jecxz
mov
in
test
mov
ret
inc
loope
subb
mov
xchg
mov
rolb
out
xchg
mov
adc
out
add
adc
push
or
push
jns
lods
or
add
dec
mov
add
enter
hlt
fwait
out
jb
xchg
jg
arpl
cmp
dec
xchg
mov
adc
sti
pusha
push
cs
push
lock
push
adc
iret
fs
bound
mov
add
push
mov
fdivl
lock
jl
mov
mov
leave
mov
sub
add
imul
add
and
add
jp
sub
sarb
into
dec
or
daa
fisubrl
cmp
adc
jecxz
jns
js
add
ja
sbb
ss
pop
adc
mov
add
cmpsl
sbb
and
jo
sub
stos
mov
and
xor
dec
pushf
jo
xchg
adc
gs
or
add
rcll
sub
push
cmp
or
xor
rorb
lock
inc
gs
fwait
int3
sub
add
repnz
cli
xor
inc
into
cmp
pop
inc
lods
pusha
dec
pop
cmp
and
ret
into
inc
sbb
mov
std
xor
mov
xor
push
ds
lds
jae
push
orl
pop
idivl
push
sub
sub
and
ja
lock
fcmovnu
and
decb
pushf
and
pop
sarl
or
inc
adc
mov
les
js
out
and
je
imul
jl
dec
push
aam
add
add
aaa
mov
xor
dec
pushf
push
add
ret
mov
mov
and
add
into
inc
lods
enter
test
pop
dec
add
fcomi
mov
in
or
sub
xchg
and
cmp
out
add
xlat
lcall
mov
push
addl
mov
mov
and
subb
int
sbb
push
movsl
inc
push
add
jle
pop
jbe
je
pusha
repnz
and
xor
movsl
add
cmp
divb
data16
mov
pop
fsub
add
roll
jnp
adc
jge
adc
pop
lahf
xchg
xchg
adc
lods
pop
mov
addb
pop
js
mov
daa
add
and
repnz
gs
adc
mov
mov
je
repnz
and
dec
addr16
add
adcl
jg
sub
adc
loope
adc
subb
cld
adc
addb
add
cmp
loope
mov
jl
adc
push
jg
outsl
push
mov
add
nop
lcall
jnp
fimuls
loopne
scas
les
fdivrs
xchg
shll
test
mov
cmp
mov
data16
cld
or
cmc
lock
cmp
or
xor
into
mov
push
test
add
and
and
outsl
iret
pop
xchg
sub
mov
jp
repnz
je
js
cmc
or
fwait
aas
dec
fsub
or
aad
jo
jle
in
add
in
cld
jno
cld
mov
cmp
xor
clc
enter
insb
aaa
addr16
mov
and
jl
add
cmpsl
jecxz
ja
clc
and
push
and
lds
xor
ja
add
outsl
mov
loopne
dec
nop
xchg
movsb
add
mov
gs
fwait
rcr
jg
lret
jecxz
cwtl
popa
and
and
jl
xor
lds
fwait
mov
xchg
rol
pop
stos
or
pusha
or
out
std
mov
sahf
add
js
aad
jle
xchg
dec
sub
cld
and
push
cli
gs
popl
das
jnp
jge
inc
popf
out
jae
or
movsl
mov
nop
mov
adc
insl
jne
imul
mov
jno
mov
testl
and
push
div
and
cmpl
out
in
mov
inc
mov
jle
mov
in
mov
push
or
mov
sub
test
dec
arpl
rorl
lea
mov
lds
stos
cwtl
pusha
pop
xorb
inc
jbe
js
jne
daa
aad
lds
ja
or
imul
fwait
insb
enter
es
adc
sbbb
pusha
push
adcb
pop
pop
fwait
dec
mov
xor
int3
and
add
mov
pop
push
in
mov
and
jl
pop
pop
cmp
int3
mov
cld
inc
pop
arpl
out
pop
in
inc
cmp
stos
adc
add
lcall
jno
cmc
sub
fcomps
mov
adc
mov
jge
negb
iret
dec
scas
xor
int
aas
imul
lret
lods
push
shll
in
es
add
adc
mov
testl
adc
cmpsb
push
xorb
or
mov
rol
xor
cltd
mov
lcall
pushf
bound
imul
movsl
bndstx
loope
add
jmp
dec
xor
pusha
sbb
push
jl
mov
fistpll
mov
and
xchg
xor
mov
out
add
adcl
xchg
jbe
xor
and
lods
inc
lock
sar
subb
mov
or
dec
shrb
fcoml
or
jl
in
add
enter
outsb
sub
sub
mov
test
es
adc
jle
pop
mov
test
sub
lods
pop
ja
cld
xchg
sub
add
ret
out
jge
add
test
mov
lods
lock
pop
mov
test
adc
inc
in
repz
cmc
hlt
jle
mov
pusha
add
sbb
fsubl
mov
sbb
push
js
jno
dec
ja
add
repnz
sub
and
mov
cli
ljmp
mov
adc
dec
xchg
push
sbb
jbe
add
rcll
lods
js
leave
dec
lock
jo
addl
mov
pop
repnz
inc
xchg
adc
lret
mov
mov
xchg
pop
mov
int3
inc
or
pop
and
hlt
enter
mov
and
in
xor
xor
and
lahf
push
mov
fldl
pop
push
pushf
enter
push
andb
fwait
stos
daa
fs
sbb
popa
sbb
aas
jp
or
pop
ss
jmp
mov
daa
and
pop
or
jns
or
fwait
inc
lods
mov
xor
or
add
or
push
andb
rorl
jmp
pop
or
inc
cld
add
or
popa
scas
cmp
or
fs
or
lahf
ljmp
inc
mov
jle
cmpsb
mov
or
testl
push
or
sbb
dec
mov
dec
shl
xor
push
add
bound
fdivrs
xor
adc
cld
mov
or
cmp
js
mov
sub
lock
lock
fsubrl
and
enter
loopne
repz
cmp
leave
or
lock
in
inc
repnz
xchg
int
rcrl
and
in
pop
lea
sub
cmp
bound
push
mov
ret
and
in
fs
je
jl
sub
jmp
es
rorl
fsubrl
cmpl
cmpsl
add
xchg
xchg
in
add
mov
dec
mov
fldenv
jnp
mov
sbb
test
subl
add
stc
enter
inc
lods
or
mov
xchg
subb
clc
addb
hlt
sbb
mov
xor
dec
in
mov
loopne
imul
pop
push
or
das
pop
adc
test
jle
add
mov
andb
mov
inc
add
add
dec
xchg
rolb
mov
jge
mov
xchg
or
xor
mov
pop
adcl
aas
ljmp
pop
adc
nop
mov
pop
addb
test
add
lret
std
daa
pop
add
add
jns
mov
dec
sub
xor
push
adc
decb
adc
fs
clc
sbb
adc
jb
pop
sbb
inc
and
dec
imul
pop
push
pop
test
jnp
push
xlat
scas
icebp
rcl
cld
or
push
ret
mov
jl
sub
pop
xchg
xor
pop
cwtl
sbb
and
xor
jp
loop
mov
add
push
pop
cmp
fdivl
scas
vfrczpd
and
in
inc
fstpl
jbe
into
add
adc
sub
shlb
fmull
into
push
jp
xor
pop
jle
cmpb
mov
mov
xchg
dec
xlat
or
out
jl
pusha
test
dec
jg
ror
es
dec
pop
mov
pop
sub
nop
or
call
cmp
test
lcall
mov
pop
jns
das
mov
shlb
and
inc
jge
and
ret
popa
or
push
js
jnp
jl
les
xor
in
bound
repz
adc
add
hlt
rcll
mov
arpl
jecxz
cmpb
or
das
cmp
lret
arpl
dec
sarb
lcall
js
popf
loop
ret
jp
scas
movsl
pop
adcl
add
imul
jp
ljmp
sbb
mov
rorb
lods
push
insb
int3
outsb
in
add
jbe
and
daa
in
jno
push
cmp
ljmp
sbb
pop
mov
arpl
into
mov
aam
rclb
jmp
dec
or
jae
insb
out
js
in
jno
xorb
jae
or
jge
faddp
push
popf
fldl
aad
mov
dec
pop
int3
push
mov
mov
cwtl
dec
mov
mov
inc
aas
loopne
mov
stc
mov
lahf
mov
test
out
jo
das
leave
xchg
inc
mov
pop
and
adc
xchg
jnp
aad
insb
dec
idiv
cmp
ja
push
test
xor
xor
add
dec
add
add
rclb
mov
cltd
inc
sbbb
fists
pop
dec
jnp
sarb
mov
faddl
cmpl
adc
add
mov
ss
lret
or
ror
inc
outsl
test
popf
pop
sub
push
ds
rorb
stc
imul
mov
push
stc
pop
push
sbb
int3
sub
or
lahf
stc
xchg
loope
fdivp
push
ss
add
push
fs
jns
sbb
add
lret
lods
arpl
cs
sbb
push
pop
mov
jbe
lcall
les
shll
mov
ficomps
cs
adc
movsb
subb
push
xor
mov
aas
mov
dec
dec
sbb
jbe
sbb
and
adc
inc
mov
outsl
jno
addl
pop
lret
sbbb
cli
les
arpl
sub
sub
mov
rclb
pop
jne
into
imul
sub
mov
mov
sub
pop
xchg
push
pop
mov
mov
and
dec
roll
dec
das
push
fs
lret
and
pop
mov
or
jbe
xchg
js
test
aam
dec
lcall
push
dec
insb
xchg
inc
fmuls
sbb
nop
xor
fists
dec
mov
test
jle
pushf
add
jne
sbb
mov
mov
lahf
iret
sub
mov
and
add
repnz
lock
sbb
and
jl
add
enter
mov
mov
xlat
pop
scas
jnp
or
cwtl
shlb
or
xchg
cmp
adc
push
pop
les
lcall
jne
cmp
jb
inc
scas
sub
movsb
es
stc
mov
cmc
push
xor
sbb
or
sub
push
rorl
in
pop
sahf
push
cwtl
pusha
cmp
push
and
mov
jmp
xlat
jmp
loop
les
repnz
mov
test
fdivrs
popf
adc
popf
or
outsl
aam
ret
test
out
and
mov
imul
pop
aad
js
add
frstor
xor
cmp
ds
test
mov
lods
repnz
cmpsl
pusha
rcl
mov
or
and
es
lahf
inc
sbb
pcmpgtd
iret
stos
mov
mov
inc
lock
push
pop
push
adc
ficomps
addr16
fwait
mov
or
gs
jge
enter
cmp
imul
xchg
push
cmp
divb
jae
sbb
pushf
pop
pop
cmp
mov
stc
sub
jl
jae
scas
fistpl
add
mov
rcll
or
addr16
sub
add
xor
push
testl
mov
shl
pop
jg
into
push
and
mov
cmp
jmp
fcom
xchg
jno
ret
jno
orb
pop
fisubrs
xchg
out
inc
test
in
sub
pop
fdivp
shrb
or
outsl
push
int3
fs
mov
aas
add
xor
into
daa
orb
sahf
sub
or
test
sub
add
adc
xorl
popa
adc
push
sarb
fcomps
push
xchg
dec
out
aaa
call
data16
and
add
test
subl
and
mov
jb
sahf
jns
enter
or
lods
frstor
fcmove
subb
scas
or
loopne
mov
clc
add
dec
clc
je
xor
jno
mov
pop
call
outsb
and
rcrl
mov
or
icebp
sbb
dec
sub
adc
aad
sbb
add
push
aas
xor
pop
je
pusha
inc
pop
jo
cmp
mov
loop
lods
mov
xor
mov
int3
and
inc
hlt
and
rclb
fwait
mov
mov
adc
jle
inc
adc
mov
sbb
repnz
mov
cmp
dec
jle
and
inc
mov
fistpl
mov
mov
cmp
mov
mov
dec
scas
out
outsb
inc
jne
stc
hlt
mov
sbb
xchg
lock
mov
stos
int
sub
cmp
fs
push
inc
cmpb
jg
jns
mov
or
adc
scas
xor
movsb
add
xlat
mov
mov
in
mov
push
add
cmp
mov
stc
enter
icebp
sub
or
out
dec
dec
push
sbb
adc
scas
cmp
imul
push
add
xchg
and
jmp
pop
loope
sbb
and
sbb
inc
test
xlat
addb
orb
jbe
scas
jae
pop
dec
xchg
push
addr16
in
sbb
mov
add
popf
fs
rcrb
sbb
call
jecxz
and
mov
rcrl
push
pop
inc
cmc
mov
repnz
adc
add
and
xor
rcrb
dec
xor
adc
loopne
or
and
pop
inc
in
adc
adc
add
xchg
or
ficompl
and
ret
pop
or
repnz
push
cmp
adc
das
xor
inc
cmp
scas
les
jae
aad
adc
andb
sub
pop
and
and
sarl
hlt
lahf
xor
lcall
fnstsw
push
cmpsl
scas
fld
ret
jl
pusha
movsl
sub
pop
push
or
fwait
add
cmp
xor
outsb
adcl
sbb
mov
arpl
sub
js
clc
repz
test
shr
sti
shll
paddq
mov
addr16
jl
add
xchg
sbb
je
pusha
mov
loopne
adc
arpl
leave
lods
add
clc
jl
pop
add
push
in
xchg
cwtl
and
push
xchg
aam
push
push
dec
add
add
addr16
cmp
cld
test
dec
mov
sbb
lods
std
sbb
add
ret
icebp
push
xchg
jge
push
push
stos
push
lock
or
into
inc
pop
movsb
and
sbb
pop
call
arpl
int3
jne
rcll
hlt
loopne
lret
dec
aad
je
addb
or
jbe
add
inc
js
pusha
xor
repz
test
xor
add
fs
ret
ret
sbbb
pop
lret
in
cli
insb
fwait
xor
add
stc
mov
popf
push
int3
cmp
fbld
push
imul
cli
stc
jge
sub
mov
lods
add
dec
mov
push
mov
xor
nop
loope
sub
jb
inc
cmpb
std
in
mov
or
out
lock
push
add
sbbl
cli
movnti
lods
sarl
or
dec
push
mov
shll
int3
xchg
or
iret
or
ds
add
inc
mov
test
or
lret
or
jae
adc
mov
sub
mov
iret
inc
fmul
add
cmc
cld
push
sti
cwtl
rcrb
adc
add
sub
jmp
cwtl
adc
incb
or
scas
andb
lcall
cmp
jns
and
and
pop
inc
jl
jge
das
loop
test
pop
adc
inc
out
xor
ret
clc
mov
mov
mov
xchg
inc
pusha
mov
fwait
gs
es
cmp
sbb
add
jge
mov
imull
cmp
adc
fs
pop
insb
sub
imul
imul
rol
cwtl
sbb
xor
sahf
inc
jle
pop
mov
xor
cs
shlb
inc
and
mov
cmpsl
sub
push
sahf
gs
jbe
or
adc
daa
xor
jne
jo
dec
sbb
push
add
sub
pushf
enter
lds
dec
mov
mov
js
inc
and
out
mov
pusha
add
pop
loop
push
add
dec
je
in
or
pop
jns
pop
lahf
subb
mov
sub
add
dec
in
es
xor
add
test
push
clc
sarb
cld
aam
pop
adc
mov
fbld
jp
add
imul
pusha
jl
hlt
lahf
pop
xor
in
xchg
lret
xchg
rolb
daa
jp
inc
mov
mov
es
xlat
rcr
xor
mul
and
fmull
jno
nop
jecxz
in
pusha
mov
jns
ret
stc
push
andb
mull
mov
inc
lods
add
mov
shll
hlt
iret
out
or
in
outsl
mov
cmpsl
push
jo
mov
mov
inc
add
fs
adc
jecxz
pop
bound
sub
subl
pusha
or
push
jp
dec
sub
call
fs
and
cld
or
scas
mov
stc
pop
sub
insl
and
mov
mov
imul
or
daa
cmp
adc
loopne
pop
pop
out
adc
ja
and
insb
scas
or
outsb
xchg
dec
jnp
pushf
dec
add
adc
pop
add
pop
pusha
shlb
mov
jns
nop
insb
add
dec
fidivrl
orb
mov
sbb
push
in
jge
aam
std
adc
mov
mov
push
cmp
pop
stos
mov
lds
add
popa
mov
ljmp
sub
or
out
lret
or
js
gs
push
repz
ds
jnp
arpl
cld
jnp
and
inc
jp
cmp
mov
roll
bound
and
pop
add
int3
fimull
jnp
lock
and
loop
push
ja
rorb
fmuls
andb
subb
int
xor
mov
test
push
test
or
out
cwtl
mov
iret
jmp
mov
aam
in
xchg
cmp
push
ljmp
lret
add
xor
jg
inc
jbe
xchg
pop
and
call
in
mov
test
mov
or
sbb
pop
add
or
and
aas
in
or
mov
add
pop
inc
mov
int3
cmp
popf
lock
aam
sbbl
add
mov
sbb
dec
add
push
mov
xchg
mov
add
cld
xor
pop
xor
push
xor
shl
arpl
mov
cmp
cld
add
jge
fs
mov
popa
stos
mov
pop
add
dec
ljmp
int3
add
jle,pt
mov
lret
dec
mov
aas
gs
jae
pop
subl
std
mov
sahf
mov
cmp
sub
xorl
icebp
adcb
push
das
push
push
call
and
insb
add
push
mov
sbb
fistpl
dec
loopne
fldcw
jnp
inc
mov
adc
loopne
jg
and
dec
adc
inc
out
mov
cmp
std
sbb
push
test
sbb
rolb
int
push
add
mov
mov
mov
fs
inc
lds
push
cld
fadds
subb
xchg
lods
xchg
orl
adc
adc
nop
dec
out
add
pop
cmc
popa
adc
jle
in
andl
aas
fmull
mov
sub
lret
push
mov
cmp
jg
ret
imul
daa
pop
nop
add
pop
cwtl
add
mov
mov
sti
xchg
add
xchg
mov
mov
pop
pusha
add
movsb
int3
scas
jb
je
push
lods
sbb
js
or
andl
jg
and
je
mov
scas
dec
flds
aaa
pop
cmp
lcall
mov
dec
adc
pop
mov
addb
inc
icebp
mov
and
sub
cmc
mov
fwait
mov
pop
xor
out
int3
fs
push
mov
mov
lods
jno
mov
mov
adc
jle
push
sub
xor
mov
outsl
jge
adc
ds
add
mov
insb
outsb
rol
stc
jle
add
std
sub
aam
jecxz
sbb
sub
sahf
jmp
sbb
adc
jbe
cmp
test
arpl
int3
mov
orb
cmp
cmpsl
repz
adcl
xor
es
mov
add
adc
add
or
or
addb
icebp
jg
sbb
cmpsl
lods
add
add
pop
jl
int3
call
or
das
inc
or
or
test
xor
jns
dec
stos
fs
dec
add
aad
bound
pop
fs
jne
test
insb
xor
push
lret
dec
addr16
adc
xchg
andb
mov
sbb
std
cltd
lods
mov
jmp
or
stos
pop
cli
push
pop
mov
xchg
sahf
xchg
pusha
out
jae
call
pusha
jne
inc
inc
sub
nop
mov
subb
sub
rcr
inc
dec
or
pop
jbe
test
xor
cld
mov
add
mov
shll
cmc
or
cmp
push
lock
test
lods
and
xchg
mov
inc
out
loopne
cmp
lret
cwtl
rolb
aad
fidivrs
lret
sti
nop
push
mov
out
mov
jb
pushf
shlb
andl
cmpsb
int3
add
mov
pop
mulb
or
aam
nop
pop
bound
add
into
shll
mov
sub
dec
call
cmpsb
insb
jl
add
pop
test
rcll
pusha
mov
ss
add
and
ficomps
out
cmp
and
push
out
mov
cmp
call
fbstp
jp
sub
pop
push
hlt
inc
cmp
enter
add
inc
xchg
in
in
pop
pop
movsb
ret
mov
xchg
xor
subl
adc
add
lret
jnp
cmp
mov
xchg
mov
data16
test
arpl
mov
cmp
push
fwait
inc
sbb
sarb
mov
lock
adcl
leave
adc
pusha
nop
es
adc
sti
test
fwait
adc
mov
sarb
dec
or
jge
inc
add
pop
test
lods
mov
movsl
jbe
int
cld
mov
and
repz
data16
jecxz
lods
popf
cmp
shlb
adc
fninit
lea
repnz
pop
in
jne
scas
sbbl
in
sbb
xchg
test
inc
mov
insb
dec
pop
xchg
stos
push
pushf
dec
repnz
adc
adc
cmp
jo
mov
push
movsl
adc
or
mov
pop
mov
aam
jg
push
mov
jl
xchg
mov
jle
pusha
negl
popa
and
fdivl
or
inc
addb
dec
fisttpll
jmp
cmp
or
sahf
inc
out
xor
inc
scas
repz
mov
out
mov
mov
add
sbb
bound
push
adc
popa
imul
in
mov
xchg
add
insl
in
adc
imul
push
enter
jle
sahf
pause
pusha
mov
xchg
inc
jp
loopne
add
hlt
decl
adc
stos
jo
pop
fmul
daa
aaa
cmpl
and
ja
mov
lods
xorb
inc
jecxz
dec
icebp
enter
cmp
mov
jmp
xor
test
xor
push
dec
xor
lret
add
sbb
push
pop
inc
jne
pop
add
imul
in
mov
mov
int3
cmpsl
cwtl
dec
mov
or
popa
int3
out
jp
repz
pusha
and
rcrb
int3
popa
lods
test
hlt
pop
adc
push
or
addr16
orb
xchg
enter
aad
pushf
jge
sub
jnp
fcoml
jge
sbb
sbb
addr16
adc
pop
call
push
cmc
imul
lahf
add
arpl
xor
cld
vmread
loopne
dec
lock
pop
mov
mov
call
int3
data16
add
adc
mov
mov
mov
and
mov
and
daa
clc
in
cmp
inc
insl
pop
mov
add
mov
add
and
das
pop
add
mov
cld
pusha
jecxz
cmpsb
leave
and
addl
adc
or
xor
jbe
pusha
in
arpl
sub
add
mov
pop
inc
pushf
jnp
sub
xchg
ljmp
out
jmp
sbb
int3
add
scas
or
movsb
lret
jp
inc
addl
jmp
sub
jge
fdivrs
out
iret
popf
stos
sub
enter
rorl
gs
daa
mov
push
subb
or
sahf
jp
test
ss
lahf
data16
sub
sbb
aas
cmp
jmp
cld
arpl
nop
in
int3
add
sti
xchg
mov
sbbb
cld
inc
lods
sahf
fs
data16
jns
into
in
add
sub
lock
fdivp
lret
mov
jp
jl
push
cs
imul
ucomiss
jp
rcrl
add
adc
mov
adcl
lcall
mov
popa
add
add
lods
je
lea
ret
add
xor
cmp
leave
mov
cmp
jg
test
mov
icebp
call
sbb
mov
xor
add
js
or
push
xor
xor
aad
or
jbe
pusha
movsl
pop
adc
inc
or
mov
xor
add
mov
dec
sbb
dec
jo
les
xor
add
mov
es
in
orb
aad
sub
fadds
add
stc
ror
mov
mov
fimull
loopne
jbe
pusha
mov
into
dec
arpl
sub
push
jle
cmpsb
nop
add
push
ja
leave
jne
enter
inc
cs
dec
ja
js
ljmp
lock
xchg
mov
fwait
add
hlt
jg
mov
cmp
cmp
sbb
xor
data16
incl
subl
adc
inc
pop
and
icebp
sbb
jp
xchg
cmc
jae
pop
lcall
addl
jne
mov
add
xor
std
push
jns
outsb
pusha
fsubrs
sbb
pop
inc
adc
and
or
outsb
fcomps
or
mov
add
or
cmpl
sbb
pop
clc
add
sbb
or
fisttpll
movb
add
inc
data16
add
pop
sub
leave
mov
pusha
andb
pop
fwait
jae
lahf
pop
hlt
inc
push
sbb
icebp
push
clc
pop
add
sbb
rcr
push
cltd
push
popa
pop
dec
repnz
ret
subl
add
jb
popf
outsl
xchg
jno
addl
pusha
or
orl
lock
dec
stc
hlt
aas
xor
xchg
mov
pop
cmc
adc
add
daa
arpl
xor
or
cld
adc
in
sbb
lahf
sbb
aad
das
sarb
test
inc
sub
or
cwtl
test
insl
sti
cmp
mov
add
js
mov
jne
pushf
or
sub
idivb
and
daa
data16
inc
push
xchg
notb
popa
add
out
aad
jbe
rcrb
or
hlt
cmp
into
or
popf
je
pop
mov
push
pop
jbe
nop
add
cs
das
packssdw
inc
rclb
adc
dec
mov
cs
push
push
scas
sti
xor
inc
enter
jmp
sub
lcall
lret
pusha
test
and
out
push
mov
xchg
pop
test
add
cmp
sub
mov
adcb
loopne
mov
mov
pop
nop
decb
imul
js
jl
mov
sbb
mov
jle
and
pusha
pushf
jmp
mov
jnp
inc
sub
test
idivb
sub
inc
dec
add
inc
push
jae
add
fwait
int3
pop
arpl
ficoms
enter
pop
xchg
and
mov
xor
mov
ret
push
jmp
arpl
fsubs
shll
dec
dec
mov
adc
fwait
push
sub
mov
inc
push
fsub
mov
mov
mov
test
insl
mov
add
leave
mov
add
sub
mov
pushf
dec
pop
stos
sub
sbb
add
mov
shll
ret
pop
adc
mov
add
mov
pop
xor
cld
push
jg
lods
or
les
js
mov
rclb
lret
add
repnz
aaa
pop
rorb
adcl
pop
shll
cwtl
loope
arpl
dec
fdivr
add
sbb
lods
or
popf
aaa
mov
add
and
adc
cli
ret
lods
cmp
or
enter
mov
stos
in
add
cmpsl
fs
sbb
pop
cmp
pop
mov
pop
inc
xor
leave
mov
push
or
cli
sbb
pop
xchg
out
add
mov
adc
fadds
stos
mov
jmp
stc
aam
jge
dec
divl
nop
pop
xchg
daa
iret
adc
push
mov
sar
movaps
data16
rclb
or
int
ss
or
dec
xchg
mov
push
dec
lahf
loopne
xchg
xchg
fsubs
pop
movsl
adc
add
loopne
rorb
clc
cmp
lods
cli
mov
adc
cmpsb
flds
in
sub
xor
xor
enter
pop
les
pop
shl
addl
nop
andl
jno
xchg
mov
je
aam
adc
jecxz
xchg
scas
and
mov
dec
sub
rorb
enter
or
adcl
movsb
lea
repnz
pusha
fsub
test
jbe
sbb
fdivrl
in
jp
jmp
out
ffree
pusha
adc
push
pop
cmp
nop
or
push
sub
leave
out
add
inc
rcl
mov
mov
dec
cmp
pop
sbb
sub
dec
jge
mov
pop
cli
shll
rorb
and
dec
js
add
jl
repz
xor
pop
fnstenv
push
mov
sub
mov
jnp
xor
and
int
push
jg
add
leave
dec
xchg
sbb
xor
adc
shlb
mov
shr
add
outsb
lret
movsb
test
int3
out
call
mov
push
jae
xchg
mov
repnz
fdivrs
and
mov
and
mov
or
jno
add
push
dec
dec
ja
xor
push
or
es
sbbl
imul
jle
and
add
mov
jle
inc
loopne
sub
jle
lahf
cld
loopne
pop
cli
add
ljmp
je
out
add
daa
arpl
aaa
aas
orl
int3
adc
jle
pop
rclb
push
je
jnp
sub
or
hlt
test
cmp
mov
jo
and
lods
mov
jnp
xlat
push
enter
adc
pusha
rolb
sbb
push
out
jb
pcmpeqb
inc
arpl
xor
jb
push
pop
push
fxch
popa
add
adcl
aas
lods
mov
imul
mov
xlat
or
jns
jle
jb
stos
push
js
sbb
bound
cld
xchg
pop
mov
push
pusha
jge
mov
add
jno
sbbb
sub
and
loopne
mov
or
cmp
add
arpl
call
popf
mov
cmp
clc
mov
cld
add
xlat
inc
cmp
insb
pop
push
mov
pusha
stc
sub
loopne
jne
add
notl
mov
fstl
test
ds
les
clc
jno
xchg
mov
test
lock
imul
xchg
dec
cmc
sub
adc
addb
pop
mov
dec
pop
andl
test
outsl
sbb
push
add
sbb
scas
cmp
cmpsb
inc
test
pop
in
daa
ja
inc
dec
mov
dec
pop
mov
sbb
stc
mov
aas
xchg
mov
cs
test
shrb
enter
mov
mov
jl
jne
cwtl
subb
cmp
lods
test
inc
or
js
movsb
pusha
and
push
outsb
ds
pop
insb
rclb
mov
pop
xorb
dec
jle
mov
or
popf
sti
pushf
push
or
popa
or
test
inc
fwait
rcl
dec
leave
push
sti
ret
cld
cld
hlt
adc
or
add
add
jg
std
orb
add
xchg
sbb
insl
dec
sub
rcl
ficompl
sbb
js
sahf
lret
cs
inc
subl
xor
es
pop
mov
fs
inc
xchg
nop
arpl
in
cwtl
add
cltd
pop
clc
pusha
mov
fnstcw
icebp
dec
jno
sub
sbb
fsts
fidivl
testb
call
cmpsb
mov
add
psubq
pop
adc
scas
repz
out
cmpsl
cmpsb
mov
loop
pushf
gs
in
inc
loope
dec
sbb
mov
pop
adc
or
sbbb
loope
mov
sbb
out
repz
pop
adc
inc
xor
js
repz
or
sbb
out
xor
inc
pop
dec
loopne
sub
pop
mov
add
jbe
cld
xchg
xor
pop
cmp
dec
jecxz
add
bnd
pusha
cld
shll
push
jae
int3
sbb
jns
call
outsb
lret
hlt
or
arpl
xchg
loopne
orb
enter
cmc
in
or
cmp
dec
adc
dec
pop
mov
xchg
push
lods
mov
imul
outsb
loop
adcb
pop
aam
popa
test
jp
sbb
loop
add
insl
mov
orb
shrl
loope
cmp
push
mov
xor
popf
push
pop
mov
fcmovu
dec
shrb
into
sti
pop
in
repnz
add
clc
jg
adc
ret
dec
adc
sbb
jge
or
push
xchg
sarb
inc
jg
xchg
push
stc
fwait
xchg
je
pop
mov
lods
icebp
jge
push
add
pop
jno
leave
clc
push
sbb
loop
pop
dec
out
xchg
xor
sahf
enter
lods
pop
js
or
xchg
enter
aas
add
inc
push
fistpll
cli
add
out
ds
pushf
jp
pop
test
or
and
mov
imulb
mov
filds
mov
xchg
in
adc
push
jle
loop
ret
in
cmp
enter
inc
inc
or
push
or
ret
push
xlat
gs
add
int3
lods
aam
clc
scas
xchg
aad
insb
cld
sbb
pop
pop
lods
orb
cmp
add
push
add
sarb
push
ss
push
ja
mov
mov
xchg
inc
mov
pop
in
xchg
dec
fsubs
push
sbb
xchg
adc
jbe
mov
clc
jno
stos
mov
push
in
or
data16
sbb
xchg
sub
pop
dec
mov
je
jno
inc
push
cs
rolb
lock
lds
dec
mov
pushf
cmp
adc
or
pop
mov
and
push
in
add
mov
repz
daa
jecxz
xor
je
dec
leave
or
sbb
mov
rcrb
or
xchg
je
lods
test
dec
sub
xchg
push
fsubl
or
sub
dec
aam
add
ss
sarl
enter
jl
arpl
xchg
sub
adc
cmp
add
jl
lock
add
leave
clc
add
inc
in
ja
sbb
add
fadds
adc
insb
lods
push
popf
xor
test
xor
inc
out
jecxz
cmp
cmpsl
cld
and
call
popf
fcompl
nop
insb
mov
inc
xchg
add
rolb
inc
pop
xchg
add
je
imul
pusha
adc
pop
icebp
adc
add
cmc
popa
addr16
js
rcrb
xor
clc
sbb
andl
das
shrb
adc
idivl
sub
fsubs
adc
lock
adc
addr16
cbtw
pop
dec
add
cld
aam
dec
shlb
push
sbb
push
lods
mov
push
sarb
mov
xor
pop
das
mov
pop
xlat
jb
outsl
imul
or
pop
in
xorb
arpl
movsb
cmpb
fadd
in
cmp
rclb
adc
xchg
rcll
loope
cs
test
xchg
dec
mov
dec
test
add
and
fsubl
pop
cwtl
mov
pushf
stos
mov
fcom
insl
ljmp
jmp
fadds
adc
xor
add
orb
sbbb
push
pop
movsl
daa
in
xor
lea
push
jl
sbb
adc
in
cmc
cli
mov
or
adcb
cmc
lahf
dec
lods
in
xchg
xchg
ds
mov
mov
jge
add
iret
das
cmp
jns
pushf
ljmp
inc
pop
test
jne
and
sbb
pop
add
loopne
leave
xor
pop
not
adc
lret
daa
push
jbe
sti
inc
cwtl
add
mov
hlt
cmp
jne
cmp
dec
and
dec
sub
adc
test
sbb
mov
add
sub
adc
jo
outsb
add
cmpl
addl
mov
sbb
mov
lock
das
xchg
cltd
insb
jnp
cmp
mov
push
enter
fdivr
cmp
daa
lods
ss
sbb
nop
or
adc
jns
sbbl
icebp
sub
loop
sub
inc
pop
mov
or
fldt
push
hlt
sbb
xchg
push
jg
shl
pop
lahf
lods
insb
shlb
push
mov
int3
pop
add
rcr
in
test
pop
and
add
imul
xor
es
outsl
wbinvd
movsl
dec
insb
pusha
mov
sub
and
and
cmp
jle
jno
jl
mov
shlb
lret
subl
mov
mov
sbb
inc
pop
in
xor
push
aam
les
mov
add
cmc
jbe
sub
cld
pop
jae
and
lret
add
je
std
add
jl
out
jnp
les
sbbb
shll
scas
in
pop
add
stos
jb
jnp
sbb
ja
int3
test
andb
mov
sub
lret
daa
add
in
jne
stc
std
andb
lcall
nop
add
shlb
lds
lahf
adcb
xor
pop
jne
fs
jl
ljmp
inc
test
jnp
aad
mov
pusha
mov
aaa
sub
add
ja
xor
ljmp
test
mov
xor
cmpsl
test
jl
lods
jmp
pop
scas
call
sub
fidivs
push
mov
mov
add
in
je
cmpb
fisubrs
sbb
xlat
js
cmp
xchg
loope
xchg
aaa
cmp
sbb
add
add
imul
pusha
sub
adc
xchg
fidivrs
dec
orl
pop
rol
int3
out
lret
mov
push
shlb
xor
add
lahf
jp
aaa
add
mov
mov
pop
pop
jae
faddl
rolb
stc
sub
enter
dec
dec
mov
cmp
mov
cmc
add
jp
jo
jnp
daa
hlt
and
subb
xchg
mov
xchg
adc
in
test
out
jo
movsb
bound
mov
test
and
fnsave
in
ja
loopne
fs
and
lret
cld
mov
xchg
xlat
xchg
hlt
sub
bound
mov
mov
enter
cmp
mov
mov
iret
mov
jl
or
lock
sub
mov
add
or
dec
mov
add
mov
xor
loopne
sti
sub
mov
add
cmc
add
jl
pusha
adc
cmp
add
mov
mov
nop
cli
mov
pushf
pop
decb
mov
bound
pop
mov
lods
mov
pop
pop
test
testb
enter
push
mov
hlt
pop
ret
jno
div
inc
xor
pop
into
pop
lods
daa
jmp
jns
aas
jb
xchg
cmp
lds
repnz
shr
fdivr
push
es
xor
out
add
mov
repz
es
push
or
pushf
jne
mov
and
cs
and
andb
and
enter
shr
es
dec
inc
call
mov
lcall
cmpsb
call
adc
cld
push
add
pushf
popf
xor
ss
mov
hlt
adc
xor
pop
sub
bound
adc
shl
mov
aas
dec
sub
push
popf
ficomps
je
add
mov
xlat
stos
fcoms
or
mov
negl
and
out
mov
loope
or
loopne
or
je
sahf
js
inc
loopne
pop
jne
pop
ja
sub
mov
sub
pop
or
inc
sar
inc
in
and
faddl
lods
pop
mov
hlt
or
adc
add
sbbb
jnp
out
frstor
or
lahf
inc
mov
cmp
mov
int3
hlt
cs
imul
or
lahf
fldenv
dec
clc
xor
sbbl
iret
jl
mov
mov
lods
int3
hlt
lea
pop
push
inc
jg
and
pushf
push
decb
scas
mov
push
pop
cmp
mov
bound
pop
xor
xor
xor
popf
scas
sub
pop
sub
ja
ljmp
mov
insl
aad
lock
mov
add
aas
je
and
in
out
cmp
daa
cmp
adc
push
fsubl
repz
add
adc
xor
lock
adcl
xlat
mov
gs
sub
or
lcall
imulb
ss
sbb
jno
sbb
nop
mov
imul
pop
stc
shrb
xchg
cmpb
xchg
shrb
ficoml
cmpsl
sub
aaa
mov
ljmp
addl
mov
inc
fs
pop
arpl
std
movsl
jno
ljmp
in
ja
mov
mov
or
aad
hlt
jge
lods
jo
dec
add
les
dec
add
push
shl
dec
cmp
xchg
outsl
jne
cs
push
add
or
andl
cmp
jl
in
lcall
cmc
js
shlb
jbe
pusha
rolb
jp
inc
mov
mov
cwtl
repz
rclb
std
xor
test
add
pop
pop
subl
sarb
sbbl
sbb
insb
filds
xchg
shlb
das
incb
fadds
sbb
or
add
imul
das
cmpb
int
sub
xor
mov
cmpl
cmovg
jbe
pusha
cmpb
jge
sarb
cmp
and
pop
jnp
jl
call
fstps
sub
jbe
andb
mov
adc
fsubl
sbb
mov
ds
mov
fcomip
pop
pop
jae
cwtl
hlt
subb
add
cmp
xor
rol
ret
jb
inc
jle
jl
push
int3
mov
lock
dec
jne
nop
lret
into
xor
xor
je
xor
push
mov
adc
fs
adcl
xorl
sti
cmp
inc
adc
in
gs
cmp
lea
add
adc
mov
jo
inc
dec
cmpsb
nop
add
shrl
fadds
mov
mov
lods
popa
push
sbb
jnp
sub
imulb
and
and
jno
pop
cmp
pusha
or
cli
daa
and
fs
das
dec
sbb
adc
add
xchg
add
sub
cmp
jecxz
jge
lods
bound
fcoml
movsb
loopne
mov
inc
subb
scas
xor
cwtl
lea
scas
sub
lds
jno
pop
pop
aam
popf
insb
sub
inc
add
sbb
xchg
jle
pop
add
mov
inc
enter
ss
mov
jecxz
jno
jmp
push
or
add
and
insb
mull
mov
add
jle
xor
in
inc
ja
cld
loopne
dec
jns
mov
and
sbb
sti
jle
test
add
jle
mov
fists
cmp
bound
addr16
lahf
ja
mov
repz
leave
dec
pop
jbe
mov
lds
hlt
add
loop
rolb
pop
mov
int
sub
xchg
cmc
jg
add
push
sub
jge
push
mov
mov
jnp
pushf
dec
and
ljmp
rorl
pop
int3
bound
jo
data16
or
mov
push
hlt
sbb
lock
js
sub
lock
in
mov
decb
lock
lcall
rclb
sub
jne
dec
xchg
mov
fstpl
inc
jle
mov
xchg
push
out
insb
es
inc
or
lret
jle
cmp
xlat
adc
and
mov
cmp
je
push
aam
push
ficoml
fdivrp
lret
sub
loop
sbbb
jmp
or
in
cld
mov
popa
adc
mov
ret
cmp
dec
scas
jl
adc
shrl
in
movsl
mov
rclb
mov
fsubl
jecxz
daa
dec
push
mov
inc
jne
adc
mov
push
sub
test
popf
xchg
je
push
in
sbb
fwait
lahf
jae
add
into
jl
add
mov
lahf
cmp
iret
std
dec
cmpb
xlat
xor
cmp
xchg
cli
loop
add
lea
out
cmp
adc
fwait
cli
jp
or
daa
add
cmp
les
and
jnp
pushf
push
pop
or
mov
nop
add
js
out
pop
sbbl
xor
clc
pop
or
mov
ret
rol
popa
rorl
outsb
mov
push
popf
fisubrl
pop
mov
pusha
or
sub
sarb
out
lret
int3
sub
cmp
push
popf
jo
add
ja
cmp
add
sub
cmpsl
test
stos
and
cwtl
sub
adc
lret
dec
aam
push
add
pop
faddl
ret
xchg
dec
mov
sbb
push
icebp
js
fnsave
pop
lea
sahf
inc
pusha
push
jge
add
mov
xlat
xorl
je
lret
mov
int3
or
jno
adc
mov
loopne
sbb
adc
aam
sbb
js
jne
add
cmp
inc
pop
sbb
cli
and
and
sbb
push
and
imul
in
cwtl
add
int3
test
or
rorl
or
hlt
xor
aam
or
fdiv
call
mov
mov
insb
inc
mov
adc
and
mov
popa
sbbb
mov
aad
mov
addb
inc
or
das
mov
jle
nop
outsb
pusha
inc
hlt
push
lahf
xchg
lock
cmp
adc
jp
enter
mov
cld
test
adc
mov
nop
sub
bound
xorl
mov
dec
insb
jnp
aam
mov
subb
inc
pop
cli
fistl
mov
push
add
jg
test
cmpsl
rcll
or
mov
xor
add
mov
call
push
nop
sbb
xlat
add
pop
pop
jle
aam
and
daa
cmp
data16
std
aas
and
idivl
cld
test
add
lds
cmc
push
fsubrl
pop
movsb
test
lret
add
std
gs
insb
pusha
push
arpl
shrl
lock
mov
pusha
addb
cmp
cmpsl
test
out
mov
xchg
in
inc
adc
aas
mov
cwtl
fidivs
call
rcrb
mov
imul
inc
idivb
enter
data16
add
xor
lock
cltd
cs
mov
idivl
outsl
or
sbb
add
jne
and
cmc
adc
xlat
add
imul
int3
add
in
lds
lods
test
inc
push
mov
lret
out
and
mov
xor
push
cs
rorb
jp
pusha
mov
xor
arpl
sbb
cld
jl
jp
iret
sbb
orl
icebp
jnp
lods
xor
pusha
inc
cwtl
insb
jns
mov
add
sbb
jle
in
ja
mov
fwait
push
jne
push
jecxz
add
push
daa
and
imul
mov
xorl
shlb
adc
jl
ror
add
or
inc
scas
jns
lock
inc
icebp
pop
xchg
jge
loope
sub
test
faddp
mov
mov
sub
mov
insb
mov
xor
aam
add
inc
cmp
mov
das
repz
jg
je
shll
xchg
hlt
lret
cld
pushf
mov
pop
adc
in
das
imul
aam
ss
mov
cwtl
imul
rol
loop
hlt
movsb
pusha
aad
enter
xchg
sub
das
xor
ljmp
cmp
outsl
mov
fcoms
xchg
call
adcb
pop
out
dec
popf
in
inc
popf
test
ds
cwtl
loopne
or
mov
clc
lods
clc
mov
clc
data16
imul
mov
cwtl
mov
mov
or
imulb
dec
inc
cmp
dec
sbb
xor
in
sbb
xor
fcoms
cmp
out
pop
fisubrs
hlt
and
or
add
jge
push
xor
lods
pop
adc
sahf
imul
sbb
xchg
test
mov
xchg
or
scas
mov
fisubs
lods
lea
notb
aaa
mov
push
mov
jnp
shrb
mov
adc
and
jp
cwtl
movsl
and
mov
pusha
cmp
stc
sbb
std
xchg
xor
test
add
mov
fldlg2
shrb
xchg
daa
fisubl
adc
ja
and
iret
das
call
push
je
lods
add
in
push
incb
lock
mov
insb
les
in
cmp
icebp
pop
jle
sbb
cmp
sbb
pop
add
inc
dec
push
pop
add
addb
cmp
jmp
aas
xor
mov
out
or
jle
cmp
adcb
das
push
push
ja
cmp
les
push
ljmp
lods
sub
fwait
cmpsb
xchg
cltd
addr16
add
cmc
lds
pop
vmwrite
xchg
outsb
xchg
pop
mov
aaa
pop
repz
cltd
icebp
pop
and
sub
adc
sahf
clc
or
sub
add
and
mov
inc
pusha
inc
mov
dec
cmp
lods
pop
sbb
fnstcw
sub
add
adc
lods
add
pop
push
add
decb
leave
dec
mov
jge
hlt
xchg
and
xor
cmp
jno
pop
aad
xorb
enter
fsubl
xchg
stos
loop
les
scas
xor
xchg
int3
lock
dec
push
cmp
mov
test
scas
lret
add
jb
xor
add
imul
dec
ja
xchg
add
pushf
daa
dec
dec
cmp
iret
ja
jo
sub
or
mov
sbb
push
test
sbb
dec
into
push
push
ds
dec
mov
notl
xchg
and
cmpsl
movsb
ror
or
push
mov
nop
xchg
pop
fcoml
xlat
subl
pop
sbb
cmpb
add
add
cmp
sarl
dec
inc
mov
idivl
lcall
mov
adc
jg
mov
inc
lock
add
xor
and
inc
or
loopne
test
cmpsl
mov
add
scas
int3
cmp
and
xchg
mov
cmpsl
test
ds
orb
fnsave
mov
pop
imul
add
lock
mov
je
pop
out
shlb
hlt
add
xchg
inc
jle
mov
add
adcl
sub
das
xchg
add
jle
les
dec
pop
mov
sub
jl
add
cmp
in
mov
or
das
jo
and
andb
outsb
and
pop
sbb
stc
mov
test
jmp
dec
pop
mov
sbb
adc
and
add
mov
jge
push
sbbb
in
shll
mov
add
notb
pop
jbe
inc
sbb
idivl
dec
sub
mov
lods
das
loope
mov
cs
leave
loop
out
cmp
cmp
icebp
aam
xor
or
mov
out
inc
sbb
push
rclb
ret
clc
mov
lock
icebp
nop
jecxz
pushf
and
and
mov
and
sbb
cs
leave
les
sbbl
nop
jnp
stos
lret
lock
cltd
sub
mov
adc
mov
jnp
adc
push
sub
les
pop
pushl
sub
lock
testb
pusha
mov
sbb
int3
mov
fwait
push
rcrb
jmp
mov
imul
xor
mov
xchg
mov
popa
imul
and
clc
addb
sub
jg
pop
movsb
jmp
push
jb
inc
cmp
shlb
scas
xor
push
dec
ss
xchg
mov
sub
push
sub
test
xchg
dec
rorb
fstps
xchg
jns
addb
jg
lret
jl
rcl
sub
add
pushl
jp
ffreep
shrb
shl
mov
add
cmpsb
mov
sbb
adc
sub
mov
or
mov
mov
jl
ds
enter
sub
test
outsl
sbb
cli
in
pusha
fdivs
inc
or
cltd
jno
xchg
out
aas
mov
or
xchg
pushl
pop
push
and
cwtl
pusha
mov
or
fldenv
testb
xlat
xor
mov
mov
cmpsl
stc
adc
mov
lret
ja
push
xchg
je
or
popf
mov
or
dec
add
pop
and
fs
lret
pushf
adc
gs
push
push
jge
insb
pop
jmp
hlt
pop
adc
das
and
idivl
js
and
sbbl
loop
fdivs
loopne
xchg
fidivs
test
wbinvd
movsb
pop
xorl
sub
add
fsubrl
push
ljmp
mov
lahf
jno
adc
rcl
jge
fs
in
or
dec
or
push
repnz
lock
jbe
and
mov
das
and
add
fs
inc
mov
sbb
push
loopne
mov
jl
mov
shl
ljmp
push
xor
in
pop
rcr
or
push
ret
fbld
adc
and
dec
dec
xor
mov
lods
or
popa
dec
bound
jecxz
adcb
cmp
and
jne
in
adc
mov
mov
jp
dec
xor
push
add
fnstsw
ret
cmpsb
dec
adc
xchg
and
inc
pop
pushf
call
call
or
adc
jne
pushf
sub
leave
cmp
push
pop
aam
sub
aam
test
xlat
ljmp
rolb
mov
js
add
or
aas
ljmp
xor
add
dec
in
pop
or
sbb
push
inc
xor
fucomi
jne
sub
or
fwait
in
mov
mov
push
cmp
pusha
mov
mull
add
fistl
sarb
andb
push
pop
add
mov
arpl
clc
jp
adc
ljmp
cmp
outsl
push
jmp
mov
jg
push
js
call
es
cmp
movl
icebp
adc
add
cmc
inc
es
pop
cmp
xchg
mov
adc
add
xchg
iret
sti
mov
and
mov
or
out
xchg
jo
arpl
xchg
cld
fs
sbb
push
movsl
test
jle
repz
es
enter
hlt
add
mov
jge
sbb
mov
or
rcrl
inc
push
repz
shll
cmpsl
add
or
xor
cmp
jge
push
xchg
add
ss
hlt
and
aam
mov
jnp
jl
js
push
jge
pop
push
inc
cmp
les
mov
or
jnp
int3
sahf
add
mov
movsl
xchg
je
pusha
mov
mov
push
repnz
sub
jge
orb
add
cmp
or
mov
aas
mov
ljmp
test
sarb
mov
sbb
scas
hlt
idivb
scas
repz
mov
pop
test
rclb
movsl
scas
dec
out
jmp
int3
scas
das
lods
jnp
dec
sub
mov
add
sarb
xchg
dec
mov
cmp
sahf
mov
fldl
test
mov
dec
jg
leave
lods
add
dec
scas
imull
dec
dec
jbe
in
add
clc
mov
cwtl
add
stc
pusha
cmpb
andb
dec
push
mov
lahf
inc
jmp
sub
push
mov
gs
add
pop
xor
sbb
int3
cmp
cwtl
mov
notl
cmp
mov
in
outsl
mov
fcomps
pushf
mov
push
add
dec
inc
gs
dec
mov
add
test
or
adc
xor
dec
scas
mov
xor
fsubrs
jns
sub
loopne
test
add
jl
fwait
hlt
add
sub
pop
insb
add
js
cli
shll
and
jl
pusha
cmp
loop
mov
mov
loope
clc
je
bound
push
mov
lahf
push
sub
pusha
add
in
push
rclb
in
sbb
or
lods
test
out
cld
dec
and
jle
or
hlt
icebp
push
scas
mov
maxps
cltd
lods
and
mov
andl
jg
sub
mov
divb
jmp
xor
push
fldl
mov
imul
negb
cmpsl
xchg
sub
das
add
and
cmp
sbb
data16
and
sub
xor
pusha
test
xor
dec
jmp
sbb
xor
mov
or
sub
inc
push
fsubrs
loopne
dec
cmpl
adcb
jle
clc
sub
cli
lods
cwtl
rolb
mov
or
sarb
sbb
cld
sub
fadd
cmpsl
or
orl
pop
push
pop
push
push
jnp
enter
sbb
dec
dec
das
idivb
stc
and
jne
lret
shll
mov
test
xchg
push
fs
cmpsl
mov
push
mov
lcall
push
cmp
pop
out
fcmovnbe
mov
xor
scas
in
and
movl
mov
or
jp
pop
and
add
dec
fadd
mov
loopne
xchg
xchg
mov
orb
dec
mov
xchg
sub
jmp
aas
lahf
jbe
pop
rcl
push
adc
ljmp
daa
sub
inc
imul
pop
mov
dec
sbb
popf
addr16
or
add
jl
mov
xchg
cld
add
cmp
mov
ja
incl
adc
stos
push
roll
out
mov
mov
js
rclb
lea
jp
pop
adc
push
lods
sbb
push
jbe
fs
dec
sarl
pop
or
cld
jp
jo
sbb
aas
fstpt
scas
add
iret
fldcw
sbb
adc
cwtl
dec
adc
into
dec
mov
cmp
sbb
add
mov
sub
stc
add
mov
inc
andb
pop
cmp
fidivrs
ret
cmp
les
dec
test
lods
rorb
stos
rcrl
sub
bound
sbb
push
aad
sbb
lret
je
and
jmp
mov
and
das
clc
shlb
xor
mov
lds
mov
data16
imul
enter
gs
pushf
pop
push
xchg
cwtl
jl
sbb
invd
es
loopne
in
jnp
sub
jle
add
int
jp
addl
mov
mov
push
lahf
or
out
clc
ljmp
xor
cmp
cwtl
in
notl
fcmovnu
dec
repz
in
jbe
insl
shl
lret
add
or
inc
popf
dec
dec
xor
xchg
adc
mov
cmp
lcall
jmp
imulb
enter
jbe
add
loopne
imul
sub
loop
push
int3
das
in
imul
cld
xchg
orb
js
leave
out
jae
iret
xchg
and
add
push
popa
ja
leave
leave
fwait
loope
add
pop
jmp
aaa
or
sub
xchg
sub
pop
xor
enter
inc
lea
lods
and
jecxz
xchg
adcl
pop
lock
pop
jbe
cld
lock
jle
fimuls
add
lods
adc
stos
lret
loopne
cmpsb
push
in
lock
xchg
ja
ret
aaa
cwtl
inc
inc
fbld
sbb
in
subb
orb
inc
in
jecxz
out
jl
push
xchg
fildll
lods
pop
stc
mov
pop
and
mov
pusha
mov
movl
dec
pop
js
daa
dec
jb,pt
pop
xchg
xor
loop
add
or
xor
shlb
sbb
inc
xlat
ds
mov
pop
mov
sub
push
jl
or
pushf
bound
addr16
mov
sahf
pop
ljmp
xor
in
rorb
popl
adc
stos
mov
ljmp
dec
mov
xorl
mov
icebp
sbb
movsb
test
cltd
add
outsl
rcl
jge
xor
stos
arpl
in
movsb
cmc
adc
cld
pop
pop
out
and
jecxz
dec
pop
leave
scas
mov
daa
movsb
xlat
mov
pop
add
imul
push
fcoms
add
popf
inc
and
js
sarb
sbb
in
dec
js
adc
clc
popa
xchg
pop
adc
ret
jl
mov
in
inc
test
inc
xlat
pop
and
fiadds
push
dec
bound
cmp
ret
inc
sbb
cmc
add
push
loope
pcmpeqw
inc
jae
dec
and
insb
in
push
and
les
or
lcall
or
sub
add
pop
jp
subl
cmc
cld
sub
add
rcr
stc
xor
and
push
icebp
adc
push
movsb
repz
mov
lods
out
mov
push
jb
test
mov
imul
fwait
mov
xchg
sbb
in
test
addr16
hlt
sub
dec
push
enter
into
dec
sbb
xor
mov
xor
addl
lods
jnp
add
mov
cmpl
jl
add
push
cli
int
xchg
in
js
add
sahf
fistps
mov
and
push
out
repz
or
mov
in
sbb
cmp
rorb
stos
out
sub
mov
int3
aam
add
loopne
and
ja
dec
clc
adc
pop
aas
mov
lret
cmp
jae
adc
outsl
xor
pop
mov
outsl
add
cmp
orb
xchg
cmp
push
dec
xor
xchg
fmull
or
or
push
nop
lahf
movsl
add
mov
ja
cli
dec
insl
in
test
sbb
mov
or
mov
add
aam
scas
stc
xor
or
inc
imul
cmp
xchg
push
sbb
lock
mov
fisttps
outsl
xchg
mov
xchg
pop
cmp
jl
add
lret
jne
pushf
add
nop
xchg
lcall
mov
adc
dec
jae
repnz
cmp
stc
orl
xor
jno
cmp
dec
pop
je
jp
push
movl
lock
push
adc
push
and
mov
xchg
cmp
hlt
shrb
pop
leave
mov
pusha
xor
sub
jmp
dec
sbb
sub
mov
xchg
es
cwtl
movsb
int3
test
add
jge
adc
add
insb
fmul
inc
adcl
or
and
mov
add
call
mov
push
stc
lods
xchg
jne
add
mov
dec
pop
mov
add
pop
stc
sbb
test
repnz
sbb
pusha
insb
inc
add
or
mov
outsb
sub
xchg
fs
jnp
loop
pop
and
rorb
push
dec
xor
pop
sub
pop
jbe
into
cmp
aas
das
cli
adcb
sub
pop
roll
pop
subb
fs
mov
xor
in
mov
jno
xchg
je
mov
jnp
push
sbb
xchg
mov
fidivl
out
add
jbe
data16
out
lcall
hlt
xchg
jns
mov
push
mov
jp
push
and
xchg
mov
call
int3
hlt
popa
mov
fdivs
jne
popf
flds
imul
push
mov
mov
cwtl
add
xchg
sbb
inc
ja
hlt
add
mov
cwtl
rorb
fcomps
popa
mov
inc
insb
and
lock
clc
ja
ret
pushf
movsl
xor
and
jl
add
les
push
into
adc
add
sti
mov
in
mov
in
stc
mov
pop
stc
mov
lret
dec
popf
rcrb
flds
sbb
mov
add
add
outsl
or
arpl
ret
pop
stc
ficomps
mov
shll
fstps
push
or
jne
sub
pop
movsl
adc
shlb
cmc
inc
sti
add
stos
xor
loopne
sub
dec
je
shrb
ficomps
in
clc
mov
pop
mov
or
jbe
hlt
shl
cwtl
dec
ds
jecxz
stc
cltd
cltd
movsl
push
jbe
adc
pop
add
and
out
sbb
or
mov
inc
fildll
or
jno
mov
in
test
or
xchg
dec
roll
push
cmp
test
pushf
jno
insb
mov
or
mov
add
or
push
inc
pop
cmpsb
pop
addl
jle
pushf
aam
pop
bswap
dec
or
dec
int3
xor
adc
mov
inc
add
adc
iret
xor
mov
fdivl
mov
jle
lahf
sbb
inc
and
push
out
add
adcb
sbb
ja
movsl
in
inc
mov
stc
aam
lahf
or
daa
inc
ja
cld
inc
add
popf
sub
xor
jle
push
and
js
sbb
push
stc
jne
push
shrl
mov
scas
push
les
or
push
or
divb
aam
orb
pop
pop
or
clc
loopne
jp
dec
push
scas
jl
insb
xorb
js
mov
cld
jg
test
or
rcll
mov
push
cmp
or
add
rcll
ror
mov
test
out
jo
popa
dec
ds
rcrl
ret
clc
test
cmpb
insb
mov
aaa
cli
sbb
xchg
jp
xor
push
roll
jg
cwtl
movsl
xchg
loope
and
popa
inc
jae
push
push
or
pop
les
orb
cmpsb
cld
add
jbe
loopne
cmp
cld
push
inc
out
in
dec
cwtl
inc
xor
loop
fcoms
add
popf
jl
pusha
in
daa
inc
ljmp
lods
movsb
push
jl
icebp
cmp
mov
push
sub
and
arpl
fadds
das
mov
insb
add
mov
testl
jge
enter
mov
cmpxchg
xlat
adc
addl
mov
js
mov
inc
ljmp
lret
and
cmp
fcompl
fs
jbe
clc
pusha
pop
jo
dec
lret
mov
pop
rcll
test
or
sbb
jnp
ljmp
sub
pop
push
mov
icebp
popf
loopne
adc
adc
push
jmp
pusha
xchg
inc
outsl
or
icebp
cmpb
loopne
mov
sbb
sbb
ja
mov
push
inc
xchg
clc
dec
mov
in
leave
xchg
int
xor
sahf
and
or
rorb
mov
lock
push
dec
add
cmp
jo
adc
addb
and
adc
mov
add
shrl
int3
or
movsb
dec
pop
outsl
ret
jge
je
bound
jl
sub
repnz
lods
addb
pop
pop
jge
shl
arpl
mov
cmp
push
xchg
add
sbb
insl
and
cld
adc
cmp
mov
cld
dec
xchg
call
sahf
mov
shll
and
lods
cmpsl
sar
fwait
popf
dec
inc
fcomps
or
scas
jae
mov
dec
pop
xor
das
dec
sub
xor
iret
data16
ret
or
inc
or
xor
dec
or
and
push
fldcw
xor
enter
jge
call
cmp
dec
add
dec
jle
jecxz
mov
xchg
pushf
and
sbb
pop
nop
je
mov
icebp
pop
mov
cld
jl
push
pop
jecxz
pop
and
cld
mov
call
imulb
test
jns
ret
jl
gs
adc
push
lods
pop
xchg
aam
xor
mov
cmpb
roll
add
lahf
sub
mov
sbb
adc
jecxz
in
inc
jb
jnp
cmp
adc
repz
addl
pop
insb
outsl
xor
fcmove
ror
cmp
push
out
add
push
cmove
mov
add
ss
das
orb
out
sbb
lret
mov
and
push
test
mov
sub
imul
jo
lea
nop
mov
push
cwtl
cmpl
add
cli
arpl
jbe
push
mov
imul
dec
test
enter
hlt
sub
pusha
xorl
rcrl
or
mov
mov
sti
in
push
adc
xchg
cmp
pushf
push
arpl
nop
or
add
lea
sarb
mov
push
mov
pop
xchg
pop
sbb
adc
cmp
push
push
or
mov
add
inc
mov
add
push
jmp
mov
and
negb
sti
js
cld
jne
mov
dec
mov
inc
xor
bnd
sbb
push
mov
cmpsl
dec
jl
mov
sbb
mov
movsl
and
arpl
push
add
outsb
divl
call
call
and
jl
pop
add
rcrl
jp
add
daa
xacquire
sbb
movsb
push
into
int3
aaa
pop
jnp
and
jle
adc
sarb
movsb
sub
lock
dec
inc
or
inc
mov
push
adc
push
mov
and
jl
add
and
jge
clc
sbbb
test
mov
sub
lea
pushf
testb
add
inc
mov
pop
in
daa
fnstenv
sbb
cmc
add
movsb
es
sahf
cmpsb
fldenv
xchg
jnp
or
add
push
in
cmpsl
aad
cmp
jmp
dec
and
int3
pop
test
lahf
mov
xlat
movsb
test
add
mov
out
popa
pop
sbb
sub
orb
cwtl
idivb
in
stos
cmp
dec
jmp
and
inc
lods
or
mov
pop
xor
ror
jge
xor
add
jae
sbb
push
push
jg
mov
and
cmp
aaa
adc
dec
add
mov
popa
js
mov
enter
adc
dec
mov
sbb
xchg
insb
add
cmp
push
loope
cmp
maskmovq
mov
xchg
fcmovne
xchg
scas
xor
mov
loop
scas
mov
mov
xchg
fmull
outsl
rorb
into
lds
je
popf
rcll
les
inc
xchg
stc
dec
int3
nop
sub
daa
pushf
and
rorb
scas
sbb
and
mov
adc
dec
test
xchg
mov
adc
cs
testl
dec
inc
fimuls
cs
adcb
fnstsw
notl
jbe
or
cs
cmp
pop
aad
imul
xor
cmpb
ret
or
jecxz
and
ss
pop
les
popf
xorb
lds
fmul
lock
out
pop
aad
andb
loopne
insb
push
fstps
xor
push
orl
inc
lret
push
scas
dec
pop
push
test
je
adcb
mov
fimuls
xor
lcall
mov
cs
jns
mov
push
jns
push
enter
fdivs
jmp
adcb
lods
pushf
mov
dec
add
fimuls
sahf
adc
iret
aaa
cs
cmp
mov
pop
dec
cmp
sub
lods
dec
orb
imul
pop
orl
cmpsl
mov
sbb
lods
popf
cmc
aam
mov
mov
mov
push
sub
test
aas
inc
pushf
addr16
inc
add
cmpsb
ret
xchg
clc
scas
dec
pop
loopne
add
adc
popa
jle
xor
mov
fmul
sarl
cwtl
xor
and
xchg
loopne
sbb
adc
push
int3
orb
mov
je
add
or
mov
adcl
jb
rol
enter
and
pop
aam
je
lcall
lods
adc
jge
int
mov
cmp
push
sbb
mov
and
test
cmc
cwtl
je
hlt
push
sbb
xchg
les
xchg
mov
push
ja
pop
ret
jp
pop
test
mov
negb
pop
ljmp
lock
push
lods
cld
pushf
push
and
cmp
mov
push
scas
xchg
cwtl
add
mov
cld
xchg
jl
inc
sub
cmp
ret
sub
mov
pop
xchg
add
aaa
rolb
push
repnz
mov
lret
xor
and
into
or
sub
add
imul
sbb
add
fnstenv
fisttpll
mov
add
mov
loopne
inc
jl
hlt
inc
dec
push
jb
sub
fs
insl
lods
nop
and
dec
pop
cmp
mov
xor
loop
ret
xor
push
stc
leave
je
add
mov
push
xor
inc
pop
adc
mov
xchg
in
pop
cwtl
sbb
daa
jne
sub
add
cmp
cwtl
add
or
mov
push
add
aas
mov
jbe
mov
push
xor
imul
pusha
adc
in
mov
add
pop
add
scas
xchg
sbb
sub
lea
cmp
std
addl
inc
or
adc
adc
inc
or
aad
in
mov
sub
data16
cld
nop
sarb
call
pop
adc
xlat
mov
enter
int3
sub
js
lods
add
cmpsb
sub
enter
cwtl
rcr
add
ret
sbb
mov
or
sarb
jl
mov
pop
jg
aam
sbb
ljmp
pause
paddsw
ja
jns
jae
aaa
inc
sbb
sub
cli
dec
adc
andl
loop
xor
fistl
sarl
icebp
or
jle
lahf
sub
insb
ja
das
xor
push
cmp
pop
push
jge
and
xchg
daa
mov
push
jmp
sbb
fwait
cwtl
push
adc
xor
lods
enter
cmp
imul
and
pusha
mov
or
xor
xchg
jnp
pop
pop
lahf
mov
int3
vprotd
js
or
xlat
lds
mov
out
mov
in
das
add
imul
in
pop
push
jb
mov
adc
mov
mov
xchg
fstps
ds
xchg
aas
mov
fsub
les
shrb
pop
add
xchg
ja
sbb
mov
adc
ror
imul
jnp
add
dec
fistpl
jge
hlt
mov
in
sub
push
out
push
inc
out
int3
inc
in
bound
xchg
push
rcrl
adc
popa
lods
inc
adc
arpl
and
jp
jo
xchg
push
mov
xchg
addb
jbe
int3
pop
jl
shrl
push
sub
dec
add
mov
mov
add
jb
xchg
js
out
push
insb
pusha
xchg
push
cmp
dec
lcall
mov
mov
out
repnz
add
add
call
mov
lock
outsb
inc
stos
mov
lock
rorb
call
cmpsl
ljmp
cmp
lods
mov
mov
in
dec
mov
aad
sub
sbb
jno,pn
ljmp
or
mov
roll
add
adc
jnp
shl
pop
test
add
push
jp
adc
xchg
inc
cmp
add
outsl
adc
cld
inc
jae
lods
push
aas
mov
jb
xchg
test
cmp
loop
push
insb
pusha
add
aam
loope
mov
insb
mov
ja
or
mov
sbb
add
daa
mov
pop
scas
cmpsb
sbbl
pop
nop
ds
add
out
mov
add
ficoml
and
pop
popa
mov
add
rorb
adc
ljmp
incb
rcll
fisubrl
lods
sbb
mov
mov
mov
sbb
jp
dec
lret
fcomi
sbb
dec
mov
movsb
add
and
arpl
add
push
cmpsl
mov
pusha
mov
dec
and
add
and
les
dec
rol
lods
lcall
sub
test
mov
iret
dec
xor
adcb
push
xor
mov
or
pusha
fnstenv
mov
lret
xor
jp
xor
sbb
pop
adc
mov
les
adc
jecxz
add
lea
or
xchg
lods
popl
stos
xchg
adc
fidivrs
loop
and
das
jl
jg
je
push
or
addl
sbb
xorb
test
jmp
je
pop
adc
inc
subl
add
dec
dec
cld
insb
pusha
inc
dec
out
test
int
lods
jmp
popf
fidivs
js
movsb
pushf
jl
sbb
mov
dec
cmp
sub
pushf
mov
cmp
orl
or
enter
outsl
dec
sub
daa
push
cmpsl
pushfw
add
adc
pop
cmpsl
hlt
inc
addb
gs
outsb
popa
dec
xchg
cmp
lcall
scas
imul
lods
mov
rorb
or
mov
add
nop
pushf
stc
pop
shll
mov
cmp
push
iret
xchg
clc
mov
adc
pop
sahf
mov
sbb
aam
popa
dec
push
in
or
mov
aam
shlb
mov
es
add
cmp
add
dec
insb
nop
jle
pusha
or
fucomip
aam
jne
add
ret
jge
mov
xchg
daa
dec
pop
mov
sbb
mov
cmp
push
mov
sahf
jg
or
push
mov
out
jnp
popa
add
jl
add
movsb
inc
xor
das
and
sahf
das
dec
frndint
pusha
shll
jo
xor
mov
fmul
and
jo
xor
aam
pop
push
cmpsb
push
adcl
xchg
add
andl
sbb
lahf
lret
adc
pop
out
addr16
shr
mov
xor
and
mov
xlat
insl
and
je
jne
mov
and
sar
jmp
stc
stc
sub
lahf
sub
cmpl
hlt
imul
test
sbbb
lods
pop
add
or
mov
imul
cld
int3
push
sub
andb
xor
lret
dec
inc
out
xor
or
pop
test
mov
iret
fdivrs
dec
dec
mov
mov
push
ds
andb
hlt
addr16
sbbb
mov
popf
jno
addb
jge
insb
dec
and
mov
mov
mov
push
icebp
pop
out
jl
add
mov
nop
xchg
sbb
addb
xor
ds
jge
add
add
pop
mov
sub
adcb
pop
jns
cmc
or
inc
add
push
xorl
jo
or
pop
adcb
call
enter
pop
add
shlb
mov
fidivrs
rcr
aad
int
int3
mov
xor
enter
sbb
scas
lret
loopne
ja
adc
sbb
xchg
test
loop
outsb
in
imul
xchg
iret
jne
mov
sar
ret
sti
cmc
outsb
lock
clc
push
mov
or
es
cmp
jp
scas
xchg
push
mov
jo
or
and
call
testb
xchg
and
jne
call
cmp
cs
mov
xchg
les
fsubrp
add
movsl
fidivrl
cmpsl
dec
dec
add
cmpb
jnp
cmp
mov
mov
mov
jge
shlb
test
fsubs
hlt
pop
mov
push
stc
in
dec
test
add
aaa
fisubs
jecxz
add
push
into
pushf
push
cltd
imul
insb
in
and
xor
fbstp
push
js
psrad
and
nopl
mov
hlt
addr16
clc
ds
pop
adc
pop
jge
mov
mov
xor
fdivrs
cwtl
mov
xor
or
sbb
xor
mov
inc
mov
sbb
test
or
mov
rcrb
sbb
lds
orl
jno
xchg
cmp
adc
ljmp
rorb
sub
lea
iret
cpuid
in
ss
cwtl
add
adc
sbb
pop
test
add
mov
mov
movb
dec
cmp
nop
pop
stos
mov
push
int3
or
xchg
lock
jge
mov
icebp
mov
xlat
fnstenv
lock
push
mov
nop
shlb
out
mov
add
in
push
mov
mov
call
and
or
mov
push
imul
loopne
add
and
dec
test
add
dec
jb
sbb
jl
push
jl
jo
xor
jle
shlb
jbe
add
cli
jg
xor
pop
outsl
push
into
xor
mov
addr16
stos
mov
jo
icebp
jne
test
or
xor
mov
ret
xchg
inc
lock
pop
and
mov
adcb
fnstcw
shr
mov
mov
pop
and
dec
add
adc
dec
xor
dec
testb
mov
loope
je
addr16
cmpsl
mov
pushf
push
cmp
cs
mov
pop
repz
adc
fists
fdivl
test
fwait
into
mov
lcall
rcrb
dec
and
push
ja
test
mov
mov
cmp
pusha
lods
nop
adc
jne
xchg
rorl
inc
sub
call
pop
ffreep
xchg
scas
xchg
rorb
je
xor
lds
jp
lods
test
leave
ja
push
jns
in
pop
add
aad
sbb
sbb
push
mov
sub
push
inc
fdivl
mov
test
and
push
push
mov
shrl
testl
mov
daa
pusha
rolb
mov
pop
xor
shr
lock
int
xlat
xchg
jle
lea
call
test
dec
pushf
and
imul
mov
mov
outsb
ds
add
mov
mov
lock
or
xor
pusha
xor
dec
es
xchg
dec
mov
and
dec
orb
iret
jnp
aaa
mov
shl
cmp
subl
xchg
mov
call
add
pop
xchg
in
jecxz
sub
sub
and
sqrtps
pop
orb
in
adc
mov
jo
mov
stos
cmp
sub
rcrb
out
and
js
popl
ja
push
or
sub
cwtl
and
push
fsts
xor
and
enter
pop
push
cmpsb
les
mov
sbbb
push
gs
popf
dec
call
xor
add
cmpsl
test
add
add
ret
orb
or
shr
jne
addb
outsb
pop
ret
push
sbb
andb
call
jecxz
inc
fimull
adc
test
inc
dec
jne
lret
mov
fucomip
data16
sbb
test
das
push
jbe
cmp
add
test
nop
cmp
sahf
mov
les
push
adc
daa
pop
mov
adc
mov
jae
xor
sarb
sub
fadds
dec
mov
andb
or
out
dec
test
dec
pop
iret
fcompl
adc
test
or
xor
xorb
lods
loop
xchg
push
and
pop
cs
and
sub
je
xchg
xor
in
icebp
lds
filds
mov
int3
mov
adcb
cmc
xor
stc
cmp
scas
stos
push
lods
pop
sub
mov
and
push
je
xchg
add
dec
cwtl
in
add
sbb
jg
pop
ret
les
mov
jl
popl
adc
lds
scas
fdivr
mov
push
mov
addr16
xchg
fistps
in
sub
popa
add
call
faddl
pop
sub
push
es
les
adc
mov
xchg
imul
xor
pop
nop
mov
push
cmp
mov
dec
in
mov
dec
or
ud0
cwtl
add
add
jne
nop
ljmp
stos
mov
cmpsl
popa
sarb
push
nop
adc
jbe
mov
push
pushf
sbb
push
mov
int3
mov
adc
fldcw
ret
in
aam
jae
mov
js
add
mov
je
pusha
mov
ret
int3
or
adc
sbbl
push
and
mov
adc
aad
jmp
mov
xchg
shl
jg
cmpsb
int3
add
mov
fs
adc
inc
int3
push
add
mov
pushf
and
lods
and
mov
lea
arpl
pop
call
jp
adcb
mov
xchg
roll
xor
pop
ret
jecxz
add
ljmp
xor
out
ja
mov
fdivrl
fs
push
sbb
jmp
aam
sub
ja
repz
rcrl
xor
lock
pop
imul
out
or
vmovss
adc
or
adc
pop
imul
inc
daa
lods
and
jmp
pop
fadds
adc
xchg
lock
sbb
loopne
lods
pop
cwtl
mov
mov
xchg
adc
push
and
sets
iret
mov
xchg
or
jg
movsb
add
mov
jecxz
movsl
pop
andl
or
daa
dec
icebp
pop
sahf
pop
cld
lret
xor
mov
nop
repz
pusha
dec
inc
inc
scas
xchg
into
lods
push
cmpsl
jo
jl
add
shrl
int3
push
je
add
ja
nop
xchg
add
pop
jnp
pop
daa
daa
rolb
mov
sub
adc
inc
and
adc
divl
xor
fldcw
adc
add
add
inc
movsb
jbe
in
call
add
outsl
and
or
pop
scas
test
ds
jb
das
jg
xor
icebp
push
cld
and
adc
rolb
inc
or
loopne
pushf
imul
test
xorl
or
mov
xor
xor
xor
or
cs
add
pushf
test
jmp
dec
and
pusha
xor
rcrb
insb
lods
pop
sub
out
mov
lock
sub
in
mov
pop
xchg
add
sub
pusha
adc
ret
mov
movsb
push
add
sbb
shll
or
cmc
sbbb
sti
or
xchg
and
jge
outsl
add
xor
add
inc
scas
subb
push
mov
pop
arpl
jl
cmp
push
jns
pusha
mov
addr16
roll
ds
jle
lret
insb
call
lea
adcb
loope
fnop
add
fs
lods
andb
mov
ljmp
or
and
jle
and
adc
sbb
add
sbb
jbe
lret
cmpsl
daa
sbbl
jbe
loope
add
push
cli
or
int
movsb
les
xor
punpckldq
add
mov
pop
jg
aam
lcall
sbbb
int3
jmp
sahf
mov
and
cmp
scas
jns
jl
add
jno
and
adc
mov
std
add
or
repz
cmp
sbb
xchg
jmp
push
adc
pop
pop
jmp
sbb
pop
mov
xchg
pop
fsubrs
adc
and
mov
push
or
ret
jno
ret
and
insb
xor
xchg
adc
pop
jge
clc
js
and
sbb
loop
mov
push
cs
aas
push
mov
jp
sbb
push
and
push
faddl
jg
lock
lods
cmp
in
sbb
and
test
push
rorl
cld
mov
addr16
or
or
and
adc
jne
xorb
fisubl
pop
fs
jo
dec
adc
jecxz
or
imul
pusha
cmp
inc
clc
push
pop
or
pusha
pushf
mov
mov
insb
fmull
cmp
or
insb
pushf
add
sti
mov
cmp
shlb
jnp
negl
aam
mov
sub
out
scas
pusha
loopne
in
nop
push
addr16
scas
pushf
pusha
aaa
sub
pusha
push
ficomps
xor
xchg
lea
xchg
pusha
pand
fs
sbbl
cld
inc
mov
daa
orl
into
orl
mov
xchg
xchg
cld
xchg
push
xchg
cs
xor
lods
add
xor
and
add
or
push
subl
rcrb
xor
or
je
and
hlt
faddl
jnp
mov
daa
jl
cmp
dec
push
test
dec
adc
xorps
ret
xor
pushf
ds
cmp
mov
nop
loopne
xchg
loop
lahf
fildl
imul
addb
cmp
sti
mov
mov
xchg
movsb
add
cld
shrb
dec
dec
cmpl
lahf
jle
pusha
dec
inc
cmp
es
mov
pop
and
push
xor
sarl
addb
push
xchg
inc
jle
inc
shlb
add
adc
jecxz
dec
std
addb
xor
imul
fdivl
or
or
add
pushf
mov
les
cmp
xchg
cmp
cmp
lcall
xchg
cmp
pop
mov
mov
adc
push
mov
sbb
or
addr16
cli
or
push
lret
lock
dec
xchg
in
cmp
sub
stos
dec
jl
add
test
push
clc
pop
shr
and
mov
popf
adc
bound
inc
test
add
mov
icebp
xchg
push
test
movsl
push
idivb
lret
sub
subb
iret
mov
add
cmp
jae
adc
adc
jno
mov
xchg
pop
sbb
inc
cltd
inc
cmc
negb
mov
sbb
mov
jnp
int3
jne
xor
inc
sbb
jge
ljmp
mov
pop
dec
xchg
lods
adc
mov
mov
outsb
ret
inc
fdivrl
jne
add
sub
cltd
fs
dec
add
sub
lods
ljmp
xchg
stos
pop
push
nop
xchg
mov
mov
ja
lods
adc
inc
cmpl
sub
mov
repnz
jbe
sbb
leave
push
cltd
adc
sub
mov
out
inc
add
iret
xchg
xor
out
cmp
dec
jl
punpcklbw
insb
and
jle
pop
movsb
and
fcomps
jecxz
outsb
into
hlt
and
and
sbb
pop
push
push
mov
inc
fwait
pushf
cli
adc
das
popa
add
push
mov
pop
xlat
and
dec
les
leave
stos
mov
jno
popa
sbb
jnp
and
mov
std
inc
cmp
loopne
ret
rorl
outsb
push
mov
sbb
add
scas
jbe
jg
sbb
cmp
and
adc
mov
cmpsb
idivb
leave
test
stos
lods
inc
mov
ret
test
mov
jle
movsb
add
mov
pop
js
mov
loopne
rcll
or
jne
sub
ja
mov
subb
pop
bound
adc
leave
fwait
je
jo
popl
clc
xchg
add
fisttpl
mov
add
je
or
add
lret
ret
ljmp
sub
dec
mov
pop
lds
push
sbb
dec
add
inc
mov
sbb
scas
xor
push
dec
jnp
add
push
popa
scas
adc
jge
loopne
in
movsb
sbb
mov
cmp
sbb
daa
dec
shlb
dec
mov
in
mov
loope
in
aam
daa
ja
test
ret
stc
sbb
fs
fmuls
push
imul
mov
fs
xchg
adc
and
mov
dec
jl
mov
and
ds
and
mov
cltd
adc
mov
push
lds
add
jns
insb
mov
mov
push
mov
int3
aas
xor
mov
les
mov
push
enter
or
insb
dec
ret
stos
int3
xorb
mov
enter
stc
dec
inc
mov
in
daa
lahf
shl
inc
mov
xchg
sbb
ret
aam
push
and
lods
and
inc
notb
or
mov
pop
add
xor
dec
mov
arpl
or
jp
cmpsb
nop
add
add
and
rorl
lret
ds
jge
jp
dec
pusha
fs
addl
push
rolb
cmpsb
xchg
fsubl
int3
pushf
cmpsb
js
inc
sub
lahf
cwtl
mov
in
pop
sub
jb,pn
sub
push
add
mov
lock
dec
or
jmp
enter
adc
adc
dec
cwtl
dec
out
xor
seta
or
inc
lods
adc
and
mov
pop
pop
pop
adcb
add
inc
fistps
add
je
repz
pop
scas
js
mov
xor
popa
cmpsb
or
add
cld
je
clc
andb
dec
notl
loopne
call
scas
lods
pop
insb
andl
jp
pop
mov
pushf
xorb
loope
xchg
sbb
jnp
xchg
xor
xchg
movsl
add
sub
add
push
dec
jle
mov
stc
mov
lods
icebp
cld
add
xor
movsl
sub
repz
pushl
mov
xchg
pop
push
xorl
or
push
push
inc
into
adc
adc
jg
inc
clc
int
and
sub
outsl
and
and
mov
dec
dec
add
daa
clc
dec
mov
add
fnstcw
jge
cwtl
mov
mov
xor
repz
fcoml
mov
cli
add
jg
and
pushf
test
pop
scas
inc
sti
cmp
cmpl
out
lods
pop
clc
jecxz
sbb
andb
sarl
jg
jecxz
cmp
ljmp
cmp
addl
loopne
sbb
xchg
xor
sar
push
mov
loopne
mov
fs
mov
jno
daa
icebp
dec
sbb
daa
or
dec
jp
inc
xchg
mov
push
fnstcw
inc
cs
lock
cmp
test
adc
ret
mov
insb
dec
js
mov
push
shlb
cmp
jo
testb
js
inc
xor
mov
je
push
enter
pop
mov
loopne
sbb
dec
int3
mov
inc
adcl
popa
pop
xchg
sub
push
cwtl
add
mov
mov
js
xor
jns
cmpsb
dec
adc
out
hlt
or
mov
out
pusha
xchg
xor
int3
sbb
inc
jbe
pop
shl
add
fnsave
pushf
xchg
movl
cmp
repnz
fstps
daa
mov
xchg
cwtl
adc
or
mov
notl
inc
cltd
jbe
or
sarl
cli
nop
data16
cmp
mov
sbb
sbb
mov
fldcw
sbb
xchg
sahf
mov
lods
icebp
pusha
rclb
leave
push
data16
jg
test
sahf
ss
jl
push
mov
lods
adc
rorl
cwtl
addr16
lock
jbe
lock
or
rolb
int3
cmpsw
pushl
add
mov
test
mov
pop
pop
js
test
das
and
ret
arpl
cmp
adc
movswl
and
add
mov
mov
dec
imul
fisttps
jb
push
and
adcb
scas
mov
cmp
jle
sbb
rcrl
push
dec
mov
mov
cli
inc
push
jl
cmp
sub
loopne
mov
movsl
push
dec
pop
inc
lods
add
nop
in
fstpt
mov
ljmp
rol
or
cmpsb
jl
mov
fistps
and
dec
jl
dec
add
subl
cli
rcrb
mov
jne
aam
mov
call
addb
aaa
jle
sub
jne
cmpb
inc
mov
add
mov
pushf
or
jg
test
pop
mov
pop
mov
sbb
mov
add
and
xchg
out
add
shll
stc
test
cltd
xchg
sub
jge
cmp
shlb
dec
ja
loopne
add
mov
imul
cmp
cld
lods
ja
hlt
push
sub
xchg
shrb
xor
pop
lret
inc
pusha
rclb
outsb
sub
xor
outsl
xchg
sub
adcl
adc
lcall
std
les
jnp
mov
outsb
mov
in
xorb
mov
lcall
gs
insb
inc
add
cmp
cwtl
add
out
cmp
fcompl
icebp
lods
aaa
shlb
dec
sub
mov
or
cwtl
bound
fistps
mov
popa
mov
imull
cmpsb
sbb
mov
lcall
jae
mov
and
insl
andb
jmp
rorl
in
in
inc
clc
adc
jbe
and
mov
jb
push
inc
sbb
or
cmpb
insl
int
cltd
test
les
mov
adc
cmp
test
push
inc
cmp
cmp
and
pop
sarb
mov
mov
outsl
seto
out
push
cld
ret
test
pop
jg
je
inc
filds
mov
call
xor
dec
aam
das
cli
popf
fists
inc
jbe
scas
dec
jp
add
sub
jl
add
fstpt
xor
jecxz
adc
jnp
lock
out
cmp
dec
nop
test
mov
bnd
cmp
shl
sub
mov
insb
mov
test
mov
fwait
dec
les
push
je
sbb
cmp
adc
clc
mov
jle
nop
rcrb
sbb
sub
ja
test
daa
jg
or
adc
push
inc
or
push
xchg
subb
cmpl
sbb
mov
jl
push
pusha
decl
pusha
hlt
adc
ds
cli
stos
push
addr16
stos
repnz
das
ret
mov
pop
sbb
xor
cmp
lock
jns
xor
push
push
pop
aas
mov
fcompl
push
sarb
js
add
push
aam
subb
jl
andb
shll
jnp
cmp
jns
je
pop
or
in
aam
in
mov
iret
cmpl
aas
out
add
adc
jp
push
test
jl
or
test
dec
mov
pop
mov
cmp
or
inc
mov
daa
and
or
xlat
cmp
sub
lcall
and
test
add
pop
outsl
shl
push
dec
push
test
aam
pushf
bound
loopne
xchg
push
lods
mov
push
jae
ret
mov
jge
shrb
xchg
sub
mov
sarl
cmc
add
js
and
jne
rolb
mov
xchg
inc
pusha
add
dec
mov
andb
inc
mov
aaa
test
fadds
dec
cmp
lret
mov
xor
lahf
shr
movsb
mov
add
cmp
cli
icebp
andl
cli
pop
mov
mov
in
mov
or
lock
jne
adc
push
lods
jnp
in
push
mov
daa
mov
xor
inc
in
cmp
mov
je
mov
scas
mov
cmovl
hlt
xor
nop
popa
stos
add
cld
test
mov
in
sbb
sub
pop
add
xchg
mov
push
xor
jle
sarb
adc
cwtl
mov
scas
dec
jg
jl
mov
push
pop
ja
pusha
cld
inc
test
pop
imul
sbb
jl
adc
movsl
rcll
mov
push
int3
dec
add
push
jp
and
cld
insb
pop
sbb
test
pop
push
shrb
test
xor
jne
adc
or
mov
das
lods
pushf
daa
in
repnz
lods
jne
fdivrs
sub
ja
les
fcomip
call
sbb
sbb
xor
mov
pop
decl
loope
mov
xchg
jge
call
xor
xlat
fidivrs
xchg
push
push
jge
push
pop
xchg
jge
dec
mov
or
jge
jg
and
adcb
repnz
push
fwait
cld
push
adc
adc
pushf
mov
ja
hlt
enter
aam
nop
push
push
pusha
sub
dec
inc
je
add
jg
mov
or
in
stos
das
sbb
pop
push
rclb
inc
jp
xorb
ud2
pop
cld
int3
clc
jb
jg
rcrb
cwtl
insb
gs
imul
adc
sbb
lds
aad
push
daa
xor
ljmp
add
lods
mov
pop
inc
mov
in
rcll
dec
xor
loope
jle
inc
dec
popf
mov
jo
rolb
imul
adc
cmc
out
dec
ljmp
inc
add
dec
hlt
pop
mov
cmp
push
xor
push
out
lods
dec
xchg
sbb
cmp
andl
push
sbb
push
movsl
jl
in
shrb
pop
inc
int3
cmpsb
ret
sub
ja
add
or
stc
jne
inc
add
pushf
mov
sub
lods
shrb
in
pop
loopne
jl
fbld
push
add
jl
aas
test
mov
mov
js
push
push
lea
cltd
loope
mov
fdivrp
add
lock
mov
lcall
fnstcw
mov
xlat
adc
cmp
or
xchg
hlt
je
rorl
or
adc
xchg
adcb
pop
pop
popf
jmp
int3
lock
dec
jl
or
mov
int3
faddl
pushf
inc
mov
mov
add
fimull
jns
jo
adc
add
jae
cmp
mov
jmp
jmp
pop
icebp
lods
jo
adc
sahf
xlat
mov
dec
pop
ds
cs
mov
jg
add
sub
add
pop
jo
notl
add
stos
cli
inc
mov
adc
sbbb
xchg
xchg
popf
sbb
test
or
dec
and
test
rclb
sub
xchg
inc
or
stc
adc
nop
and
lods
lea
mov
mov
pop
lea
push
cmp
cmpsl
sub
sub
cmp
aad
fisttpl
daa
out
sub
and
mov
lods
scas
cwtl
aam
push
int3
fidivl
jae
mov
into
hlt
or
mov
fcompl
mov
testl
dec
std
orb
push
or
out
push
inc
mov
je
and
xchg
jecxz
xchg
lock
ret
fldt
jb
sbb
push
popf
jns
outsl
dec
js
mov
lods
aaa
cld
cmpsl
and
out
lods
push
sbbb
xchg
inc
push
inc
push
test
dec
stos
mov
ds
leave
mov
cld
pop
xor
xchg
xabort
or
push
mov
jmp
repnz
pop
add
shlb
lea
add
icebp
lods
subb
test
dec
add
xchg
add
sub
fldt
xchg
add
jecxz
or
stc
popa
jno
mov
xchg
jecxz
add
imul
movsb
lds
push
push
sub
scas
xor
shlb
and
pop
loope
je
inc
popa
dec
enter
mov
dec
push
xchg
in
xor
pop
jmp
sti
mov
sub
mov
in
inc
jp
cmc
dec
push
dec
adc
mov
lock
in
jl
mov
and
mov
inc
stc
xlat
imul
or
sub
cmp
jne
push
jp
subb
loope
push
mov
js
jbe
xchg
dec
call
ljmp
mov
aaa
jmp
dec
or
jno
ret
push
sbb
or
add
add
pop
jno
push
mov
xchg
nop
and
sub
out
add
outsl
push
sub
movb
pop
lds
pop
cmpsb
int3
je
js
sbb
shrb
daa
mov
rcll
sbb
pushf
hlt
rclb
pop
push
popf
fildl
adc
add
xchg
aaa
mov
and
xor
jp
mov
scas
popa
pop
enter
adc
add
insb
pushf
cmpsl
adc
jbe
xor
movsb
mov
lods
nop
mov
ret
fs
xor
test
adc
lock
xor
or
inc
pop
pop
lods
lret
cmp
inc
jle
mov
cltd
cs
push
shl
mov
aaa
push
in
or
add
sub
xorb
xchg
sarb
sub
pop
jecxz
sub
add
sarb
sbb
add
data16
arpl
flds
pop
adc
cld
arpl
mov
out
jl
jno
arpl
add
pop
jl
sar
loopne
ret
jl
jne
in
add
inc
xchg
cwtl
mov
lds
loopne
hlt
add
adc
xorl
andb
cli
andl
shlb
fs
cld
test
in
lods
rorb
push
and
and
nop
sub
fcomp
xchg
or
jns
dec
jl
add
mov
inc
inc
dec
andb
aam
jb
addl
shl
out
ret
inc
fistpl
ds
jg
shlb
mov
in
push
sbb
jns
jmp
cmc
fnstcw
pop
sbb
cs
push
mov
popf
mov
add
fisttps
push
scas
fsubrs
je
push
fistpl
mov
es
call
mov
pop
clc
jg
cmp
xchg
dec
fwait
push
lds
fsubl
dec
rcrl
mov
mov
push
aam
std
and
add
aas
cmp
lock
jbe
sub
lcall
cwtl
sbb
sub
pop
mov
mov
lds
sub
aam
jg
mov
adc
ljmp
jo
mov
jg
fs
adcb
xor
outsb
jg
dec
in
mov
gs
mov
ds
jns
inc
jbe
jg
xchg
add
dec
daa
or
mov
or
je
mov
mov
adc
cs
xchg
icebp
fnsave
addb
mov
mov
shll
movsb
cltd
adc
push
aas
push
cli
mov
adc
leave
lcall
mov
inc
add
adc
xor
jle
pop
inc
popl
rcrl
repnz
cld
idivb
cmp
or
addr16
nop
xor
and
cwtl
loope
sbb
mov
fsubs
cmpsl
icebp
xor
sbb
mov
push
xchg
daa
stos
cmp
ret
imul
inc
fs
adc
mov
adc
adc
pusha
inc
shll
xchg
adc
cmp
fsubs
rcrl
cmc
mov
sub
cs
add
js
ljmp
loopne
aas
or
mov
pop
lahf
and
movb
lea
test
dec
xchg
sbb
sti
orl
adc
pop
out
sub
push
xor
jne
mov
je
ljmp
mov
out
negb
push
xchg
fcmovb
popa
sarb
enter
lock
or
jb
inc
cmp
stc
insb
ror
pop
xor
andb
icebp
and
inc
and
and
xchg
mov
loopne
pop
mov
and
arpl
nop
ret
dec
jl
mov
faddl
imul
lcall
jp
int3
int
jg
inc
or
roll
or
shl
pop
das
xchg
jp
pusha
push
mov
or
pusha
cmp
insb
dec
or
stc
add
fidivrs
pop
loope
aas
cmp
enter
adc
add
jecxz
dec
mov
add
gs
shlb
xchg
xor
pop
es
or
jge
sub
movsb
lock
imul
add
clc
and
push
je
xor
push
sub
push
lret
lret
aaa
jbe
sbb
add
xor
dec
dec
xorb
mov
mov
add
stc
cmp
xchg
push
in
dec
repnz
add
inc
pop
ja
in
and
pop
lods
pop
mov
out
test
push
daa
cs
flds
popa
stos
ret
jg
rolb
addb
outsb
fwait
sahf
and
xor
mov
adc
jbe
in
cmpb
rcll
mov
adcb
pop
xchg
in
jl
sbb
lahf
pop
add
sub
sarb
aad
gs
lds
int3
adc
sbbl
add
sbb
adc
push
js
dec
lods
or
movsb
mov
pop
pop
pop
lods
push
pop
imul
mov
fs
adc
sarb
inc
add
lahf
xor
loop
add
leave
dec
xor
movsl
mov
add
hlt
cmp
sub
jb
push
sbb
fdivrl
fidivrs
xlat
shl
dec
fsubs
xchg
lds
push
dec
add
andl
mov
sti
and
lods
mov
insl
addr16
in
dec
adc
out
ret
inc
pop
jno
push
aam
mov
icebp
loope
sub
and
in
xor
inc
dec
ret
jg
fs
sub
cmpsl
push
hlt
orb
bound
jg
popf
add
addr16
in
sbb
mov
pop
int
lods
test
cmpsb
xlat
pushf
xor
push
jne
inc
xorb
and
imul
daa
dec
sbb
cld
adc
or
int
mov
aad
leave
aaa
and
loopne
mov
mov
pop
cmp
push
push
xchg
orb
inc
jmp
jno
clc
mov
xor
mov
push
cltd
sub
sbb
cmp
and
andb
jns
jnp
sub
mov
xorl
sub
add
int
stc
inc
or
add
inc
clc
xchg
scas
cmp
lahf
jae
add
push
mov
push
mov
add
xor
ficoml
or
mov
fisubrs
cmp
mov
xor
fists
hlt
add
push
sbb
sbb
test
jo
dec
add
adc
sbb
mov
addr16
insb
jb
int3
inc
mov
shl
stos
shlb
jne
clc
mov
sarl
dec
cmp
pop
and
sbb
xor
add
xor
bound
jecxz
add
inc
cltd
lret
pop
push
addb
movsb
test
mov
push
inc
or
dec
add
inc
fcmovne
ljmp
add
inc
sub
push
mov
clc
or
fistpl
in
lret
mov
roll
sti
mov
add
aad
jbe
mov
adc
lods
inc
clc
xchg
adcl
nop
sbb
pop
and
and
jl
add
adc
arpl
rorl
jns
das
jl
jecxz
mov
and
add
and
inc
or
xchg
insb
add
mov
ret
aas
lret
cld
mov
adc
mov
sbb
jnp
fs
and
dec
pop
imul
dec
jmp
mov
or
pop
shlb
into
sbbb
lock
push
out
mov
mov
or
jg
lds
cmc
or
aam
inc
adc
fldcw
int
inc
mov
xchg
and
sbb
pop
in
dec
mov
arpl
dec
das
add
and
jle
push
add
xor
sub
jne
addb
iret
jmp
pop
cmpb
ja
jb
fadd
pop
pop
cmc
cmp
push
out
dec
loopne
cmpb
rcl
dec
out
sub
shll
cmp
andl
aam
ja
or
stos
sub
mulb
in
add
and
testl
je
push
sbbl
jecxz
add
ljmp
dec
test
mov
or
lods
push
xchg
dec
mov
int
movsl
jne
sahf
arpl
jl
pusha
mov
fwait
scas
int3
js
push
std
and
shll
nop
fnsave
arpl
repnz
andb
mov
jl
in
add
dec
mov
test
push
lcall
cmp
fmulp
dec
popf
mov
jg
clc
popa
add
jmp
ret
cli
push
ljmp
push
or
mov
xor
jg
rol
push
sbb
jne
enter
xor
daa
fiadds
ja
or
les
cwtl
dec
cltd
or
jg
fsts
subl
repz
insb
push
outsl
xor
add
jge
or
call
mov
jg
push
push
jg
add
add
mov
adc
dec
add
sub
insb
jno
dec
inc
jle,pt
flds
insb
push
hlt
sbb
xor
add
push
inc
mov
xor
lock
cltd
push
add
ljmp
in
mov
and
mov
mov
outsl
or
inc
xlat
adc
xadd
sbb
cmp
fld
xchg
mov
test
xchg
lods
xchg
loopne
movsb
pop
pop
cmc
cltd
fbld
inc
lmsw
inc
inc
pop
fsubl
adc
add
fnstcw
shr
lahf
and
pushf
clc
nop
and
add
push
shrl
testl
cmp
int3
cmpsl
das
or
pushf
js
cld
or
xchg
aad
lods
add
fwait
es
or
hlt
mov
push
sub
sub
cmp
xor
lahf
cmp
jbe
je
dec
mov
fs
daa
cld
nop
inc
jle
ret
cmp
ja
adc
lods
mov
xor
clc
cld
pop
jno
adc
mov
fstpl
adc
sbb
in
fwait
pop
icebp
addr16
insl
stos
test
pushf
ret
xchg
into
or
mov
cmp
adc
lret
das
sbb
cwtl
jo
test
ss
add
inc
test
int3
fs
add
cmc
cwtl
or
or
xchg
fnstcw
inc
jge
clc
sub
fwait
inc
or
stc
sub
movsb
repz
les
jbe
xor
mov
jecxz
pop
xchg
push
pop
inc
sbb
inc
pusha
jo,pt
push
sub
adcl
jnp
mov
or
loopne
ds
cltd
or
jmp
sbb
dec
or
mov
mov
mov
out
push
xor
arpl
lods
jnp
mov
imul
inc
test
sbb
jecxz
jl
xor
cmp
xchg
inc
or
sahf
mov
ret
jp
and
inc
les
dec
push
mov
mov
xor
mov
scas
mov
out
xor
rorb
pop
inc
mov
jo
lds
inc
jge
loopne
jmp
jno
cmp
out
test
cmp
pop
jecxz
dec
and
add
loop
and
xchg
out
jle
data16
fidivrs
jo
or
mov
out
adc
sbb
pop
adc
repnz
clc
sub
sub
pop
jmp
add
mov
mov
nop
sub
cwtl
add
jg
loope
gs
mov
aam
rorl
push
adc
add
jp
and
fdivs
sbb
dec
pop
xor
xor
stos
insb
cmpsl
and
fldl
mov
or
jle
inc
lds
push
cli
mov
das
fisttps
jae
enter
pusha
cltd
aam
mull
pop
mov
jae
int3
jg
cltd
out
int3
add
pop
pop
lret
lods
rol
lret
ret
orl
gs
pusha
or
test
mov
xorb
pop
push
sub
mov
dec
pop
add
mov
ss
jb
pop
adc
nop
bound
mov
add
jg
jnp
xchg
mov
mov
push
rorb
repnz
mov
sahf
into
test
out
sub
jbe
inc
mov
mov
add
movsb
pusha
lods
inc
ss
mov
sub
cwtl
inc
add
das
stos
sub
in
pop
cltd
and
xchg
subb
add
or
inc
fs
xor
repnz
iret
jle
cmpl
or
or
jno
andb
scas
rcrb
shrb
pop
inc
fnstenv
jo
and
push
fbld
mov
cwtl
xor
or
mov
leave
sbb
out
add
test
daa
sbb
in
mov
aas
iret
adcl
xor
stos
subl
mov
test
rcl
dec
ja
dec
jnp
sub
add
lret
clc
orb
jp
clc
inc
dec
mov
mov
lds
les
cmp
sub
sub
test
gs
fs
aad
enter
and
pusha
js
adc
push
adc
addl
add
cmp
cmp
rorl
mov
nop
add
les
push
fidivrs
pop
scas
sbb
xor
into
leave
lret
inc
jae
mov
shlb
xor
sub
cltd
loop
mov
popf
pop
sbb
hlt
shrb
in
and
ss
mov
icebp
pop
pop
mov
xchg
das
jl
inc
push
rolb
das
lret
pushf
pusha
and
lds
aam
jne
jns
popf
aas
mov
rol
fdivrl
orl
jmp
out
subb
cwtl
jno
cwtl
repz
dec
adc
xlat
adc
add
clc
ret
push
inc
call
adc
cmp
add
xchg
jmp
mov
xchg
int3
daa
push
xor
jge
fists
sub
cltd
hlt
repz
add
sahf
push
es
in
mov
jge
loopne
inc
ja
daa
jbe
push
xor
lret
or
adc
jge
push
mov
xorl
and
fs
jo
push
dec
or
aaa
dec
fwait
adc
xchg
mov
daa
test
sub
mov
jp
fisttps
sub
call
ficomps
add
imul
add
mov
frstor
adc
js
push
jnp
dec
mov
or
add
int
call
or
inc
mov
sub
sbb
jb
and
jl
jns
jbe
sarl
movsb
popf
jl
pusha
jnp
shll
int3
aam
add
popa
adc
lods
jmp
xchg
or
jo
xchg
pop
ja
test
lods
dec
push
cld
sahf
out
mov
or
rorb
jne
leave
xor
ret
cmp
mov
aaa
adc
je
sub
data16
sbb
nop
pop
nop
jl
pusha
test
cltd
or
cmpsb
jg
push
add
xor
rolb
mov
stos
pop
js
cmc
or
mov
das
mov
add
sbb
jae
nop
lret
std
adc
push
ficomps
bound
lret
adc
xchg
add
std
loope
adc
repz
lcall
aam
pop
sti
aam
std
ret
dec
sar
insb
jo
movsl
repz
rorl
mov
scas
bound
dec
pushf
mov
pop
jmp
arpl
jmp
pushf
mov
popa
jle
in
mov
cli
lcall
test
push
cmpsl
or
pop
scas
sbb
and
or
mov
and
aaa
int3
cwtl
pushf
ja
xor
repz
add
shlb
inc
addr16
in
add
das
aam
xchg
faddp
pusha
inc
mov
dec
sbb
ljmp
add
in
cmp
ret
mov
into
shl
ja
dec
push
sub
fisttps
mov
dec
jl
in
mov
adc
pushf
sub
cmpsl
xor
les
fwait
ret
adc
inc
adcl
imul
mov
jns
mov
push
lods
jl
jle
or
aad
inc
rolb
test
cmp
adc
enter
repnz
jg
enter
mov
and
les
inc
mov
sbb
sub
or
or
mov
das
sbb
sahf
popf
pop
insb
push
push
outsl
ja
test
shrb
cmp
enter
bound
in
cmp
clc
in
or
adc
jg
js
pop
dec
je
or
xor
jg
sbb
cmp
sub
lahf
jbe
pop
mov
bound
dec
push
jp
add
mov
inc
adc
xchg
pop
jg
sub
xchg
mov
pop
add
jns
icebp
lods
mov
lds
mov
sbbb
mov
movsb
daa
pop
fwait
jns
bound
rolb
das
dec
mov
xor
stos
jle
orb
test
mov
sub
incb
inc
enter
adc
shll
or
jl
loope
fwait
or
mov
jge
and
push
mov
push
add
mov
dec
push
cmpb
cwtl
jno
nop
pop
loopne
mov
mov
pop
or
adc
ds
add
test
add
dec
ljmp
movsb
push
cmp
mov
clc
hlt
xor
repnz
dec
sub
xor
pushf
or
dec
cmp
data16
xor
int3
dec
add
xchg
std
arpl
xchg
or
mov
or
fs
pop
ljmp
cmp
lea
cwtl
pusha
rclb
test
xchg
lods
add
repnz
iret
sbb
mov
xlat
fistps
mov
andb
sub
fisubs
ja
push
xor
cmp
xchg
mov
sbb
jge
aaa
mov
cmp
fwait
adc
ss
and
jecxz
xchg
mov
mov
loopne
enter
mov
andl
aas
decb
mov
jge
pusha
loopne
pop
sbb
clc
dec
and
add
in
mov
or
pop
ret
sbbb
push
icebp
sub
testb
cmp
sub
dec
stc
jo
dec
ftst
pop
shl
fadds
push
pop
loopne
stc
mov
mov
bound
fmull
gs
push
push
andl
shl
inc
push
pop
pop
xchg
cld
inc
mov
xor
add
cmpsl
decl
cmp
pop
popf
data16
push
shrl
shrb
pop
jl
or
je
test
or
mov
fidivl
jl
call
scas
pop
loop
add
sbb
and
add
mov
loop,pt
test
call
cs
les
imul
mov
add
push
outsl
sti
scas
stc
dec
pop
jne
test
lret
mov
fcoms
xorps
lds
sti
lret
ret
cli
cli
xor
push
enter
add
test
je
jae
push
pop
adc
daa
sbb
xor
sub
xor
or
imul
pushf
or
add
lock
mulb
dec
inc
orb
outsl
pop
and
mov
sbbb
cmp
push
in
mov
mov
sub
cmp
daa
jle
cmp
and
repnz
insb
and
push
and
or
jne
adc
jo
mov
mov
daa
sub
enter
adc
mov
inc
jno
dec
lahf
scas
mov
adc
outsl
out
fsubr
xor
dec
inc
adc
sti
add
pop
nop
cmp
mov
sub
cmpl
cmp
mov
jl
add
mov
icebp
mov
and
psraw
mov
icebp
in
stos
cltd
das
popf
flds
push
xor
jle
cmp
movsb
dec
add
adc
add
ljmp
add
inc
cmpl
add
sbb
sbb
add
mov
popf
push
les
out
ljmp
xlat
pop
and
xor
mov
mov
subl
enter
repnz
popa
into
ret
mov
cmp
mov
lcall
pop
dec
sub
add
jne
dec
mov
leave
repnz
jbe
fs
mov
add
add
adc
lfs
adc
shl
inc
subb
push
orl
pop
jge
mov
add
aad
mov
adc
fcomps
pushf
jmp
stos
mov
dec
repz
push
add
test
sub
dec
cmp
mov
mov
add
or
enter
mov
push
mov
fdivs
mov
lock
jle
negb
jne
push
xchg
and
dec
dec
inc
bound
add
push
mov
fldcw
sar
ss
int3
js
add
fiadds
add
push
xor
cld
jge
xor
and
mov
add
in
daa
lret
ljmp
in
and
rclb
inc
xor
mov
jo
out
pushf
cmp
cmp
sub
inc
push
jo
cmp
adc
and
iret
sub
bound
add
pop
fsubl
addb
and
dec
mov
pop
addr16
and
xchg
cmp
out
loop
leave
and
jnp
andb
pusha
add
stc
faddl
ss
mov
push
pop
ret
mov
xor
mov
xchg
js
mov
mov
sub
mov
lds
outsb
cwtl
mov
leave
xor
je
in
jmp
push
in
shr
fimuls
and
es
or
jno
das
bound
and
dec
jp
sub
pop
int3
add
or
push
push
adcl
dec
xchg
sbb
rclb
enter
icebp
push
insb
xchg
hlt
aam
pushl
inc
stos
into
stc
mov
xchg
cmp
push
subl
stc
fcoms
inc
pop
cmp
jb
or
or
mov
adc
push
clc
add
or
test
clc
or
adc
ja
mov
sub
sub
sahf
xorl
fistps
jne
enter
mov
pop
pop
sub
test
push
cmp
or
mov
cmp
pop
or
adc
test
outsl
adc
sbb
ror
cld
aam
ds
ret
pop
add
ret
sbb
iret
mov
xorb
aam
sbb
icebp
pop
popa
test
adcl
loope
push
mov
add
mov
into
dec
mov
mov
cwtl
inc
push
add
les
outsl
sub
sbb
push
loop
sub
inc
fwait
pop
xor
pop
pop
add
sbb
std
repz
sub
inc
rolb
cs
insb
sub
add
movb
adc
and
jmp
dec
push
add
jo
and
cld
in
mov
xor
push
dec
pop
or
xor
andl
add
xorl
adc
insb
mov
adc
add
push
lds
mov
jne
nop
push
pop
pop
popa
je
das
nop
stc
add
xorl
ja
sbb
imul
pop
xchg
xchg
inc
popa
pop
nop
pop
and
je
movsl
test
adc
add
cmpb
je
jo
add
fmull
js
fadd
mov
dec
popf
mov
test
mov
mov
jo
push
leave
sbb
pop
adc
xor
out
sbb
js
and
les
or
or
jl
mov
test
mov
jnp
in
pop
jb
pop
sub
mov
jl
repnz
test
xlat
inc
jmp
call
mov
int
shlb
xor
sub
repnz
aaa
cld
sbb
xchg
adcl
lock
xchg
inc
sub
cld
add
cli
addr16
sahf
jno
addr16
repnz
pop
loop
mov
pop
insb
sbb
xor
xchg
push
inc
cmp
scas
or
xchg
and
jp
shlb
je
addr16
pop
in
add
repz
jns
bound
call
int3
dec
mov
xchg
or
aaa
arpl
outsl
pusha
into
push
inc
fistl
mov
or
js
cs
pusha
pop
xchg
add
addl
pushf
pop
push
imul
addb
mov
adc
imul
xchg
push
add
or
orb
mov
xchg
out
sub
aam
push
in
data16
jbe
pop
dec
xorb
test
lods
pop
sbbb
shrb
insb
sbb
faddl
arpl
popf
jmp
and
push
sub
cmc
or
inc
dec
imul
adc
nop
xor
fcom
or
mov
loopne
ret
daa
cmpsb
subl
mov
repz
pop
mov
jb
outsl
pushf
or
add
les
ret
add
pop
xchg
ret
jo
push
pop
sub
cs
cmp
cmp
jmp
insb
ffreep
mov
adc
jbe
dec
cltd
cld
ret
ret
out
test
pop
jno
xchg
inc
jns
cmpl
and
adc
sbb
adc
addr16
sahf
iret
insl
test
lcall
cmpb
in
enter
xor
shlb
fidivl
xor
orb
jmp
adc
pop
or
cld
sub
nop
add
sub
inc
subb
xor
popfw
notb
pusha
or
adc
inc
add
or
or
jle
push
mov
push
inc
cmp
nop
movsb
add
cmp
ja
sbb
and
int3
cmpsb
pop
cs
and
mov
mov
daa
sub
mov
stos
shl
sbb
push
mov
js
iret
mov
loopne
mov
in
adc
rcrb
add
cli
xchg
jns
mov
mov
xor
cwtl
add
lock
inc
jo
or
fs
pop
test
rorl
adcb
and
cmp
mov
push
jns,pt
sbb
xor
dec
adc
push
and
xor
ljmp
inc
adc
and
leave
popf
sbb
or
lods
int
cmpsl
inc
and
test
add
pop
repnz
faddl
fs
add
ret
jbe
pop
mov
add
add
xor
gs
or
push
nop
fcompl
jnp
shlb
push
xor
lock
popa
gs
adc
and
sbb
cmp
mov
add
sbb
push
shl
inc
jl
nop
int3
fdivrs
sbb
jo
loopne
rolb
test
enter
gs
mov
xchg
jne
pop
add
jg
and
xor
das
dec
mov
or
loope
cmpsb
sarb
sahf
sub
xor
je
pop
push
inc
sbb
push
mov
jl
xor
sbb
adc
push
adcb
in
cmp
shrb
es
shlb
int3
add
push
xor
imull
cs
sub
mov
rol
jne
cld
or
push
mov
push
inc
jo
sub
jnp
adc
pop
stos
mov
add
test
inc
inc
fstpt
std
call
int
sub
jle
cmpb
push
andl
jp
cmp
enter
jecxz
jo
adc
inc
negl
js
add
icebp
sbb
mov
in
xor
insb
jae
inc
jne
xor
or
in
xor
fcompl
mov
mov
sbb
sub
icebp
lock
add
cmpsl
or
sub
push
jge
add
fbstp
inc
icebp
mov
sbb
cmp
ljmp
add
mov
in
bound
in
mov
cs
and
pushf
int3
arpl
nop
xor
sub
int3
les
stc
jno
loop
in
mov
mov
cmp
pushf
int3
add
stc
jnp
out
sub
fstpt
or
ja
sub
add
xchg
adc
and
jbe
dec
loopne
dec
aad
lock
push
andl
sti
sub
into
xchg
int3
loopne
ficoms
pop
scas
sbb
adc
push
jp
cld
pop
rolb
shr
incl
icebp
mov
lods
cmp
test
scas
cmpsl
dec
setp
mov
cmp
nop
pusha
cmp
dec
mov
bnd
addr16
cwtl
in
std
or
daa
outsl
jp
scas
dec
jge
add
mov
fwait
cltd
int
cmp
test
cmp
dec
arpl
xor
sbb
mov
cwtl
add
js
sti
popf
or
xchg
pop
cmp
mov
aam
popa
mov
sub
inc
xchg
cld
inc
shlb
mov
jg
and
idiv
jo
icebp
repnz
cmp
mov
cmp
daa
jg
adcl
push
pusha
mov
pop
sbb
inc
jle
fsubrs
daa
addl
cmp
popa
fcmove
mov
test
mov
and
mov
pusha
mov
inc
xor
das
pop
mov
insl
cltd
in
inc
lock
dec
cli
repnz
jl
shr
and
dec
dec
addr16
adc
cmc
outsb
movsl
dec
lcall
jns
xor
xchg
inc
xor
push
aaa
hlt
pusha
dec
popf
xchg
mov
cwtl
hlt
sbb
jb
or
sbbb
inc
dec
jle
rol
rcrb
mov
arpl
icebp
xor
ss
cmpsl
pop
outsl
call
int3
push
push
dec
xchg
daa
or
mov
pop
dec
subl
ret
or
mov
add
xor
sub
pop
pop
lock
and
xchg
nop
lods
lahf
shlb
cmpsl
mov
das
jle
dec
lahf
inc
fucomi
xor
enter
ret
pop
mov
les
ret
cmpsl
xchg
jl
adc
je
pusha
shlb
inc
pop
push
sub
mov
mov
sbb
je
test
mov
stos
ljmp
or
cwtl
add
sbb
lahf
cmp
clc
in
adc
sub
cmp
pushf
outsb
shlb
cmp
xor
jge
mov
int
sbb
and
dec
cmc
jle
insb
push
mov
hlt
add
incl
pop
dec
mov
daa
ficoml
test
cmc
pushf
push
push
dec
sub
sub
and
shlb
mov
pop
push
fs
jle
orl
rolb
jle
push
xchg
enter
pop
dec
jp
pop
sbb
sub
pop
cli
sub
into
dec
and
push
push
sub
fiadds
push
pop
pusha
pop
js
or
mov
sbb
or
pop
xchg
mov
xor
pop
movsb
adc
and
push
add
popl
orl
push
es
inc
test
xor
dec
sub
pop
lcall
cmp
add
stos
push
orb
push
lret
xorl
inc
movsl
popa
jo
movsb
mov
ds
sbb
leave
pop
ja
adc
in
lock
mov
dec
ss
pop
or
adc
dec
mov
insb
pop
adc
pop
mov
dec
add
mov
fisttps
adc
add
imul
ret
ret
je
xchg
push
fwait
pop
popa
pop
loop
subl
add
and
xor
bound
adc
pop
fbld
push
cmp
fldcw
call
das
add
sbb
cwtl
cmp
rol
or
test
push
sbb
cmp
cmp
jl
sub
add
mov
mov
pop
push
jle
jno
xchg
or
mov
jmp
dec
cmc
in
mov
inc
call
push
sbb
and
sbb
pop
pop
jl
inc
and
jbe
cmp
add
loope
out
clc
mov
add
sbb
subb
mov
mov
in
mov
jge
in
push
jle
inc
decl
sub
test
subb
jp
rcrb
mov
call
lret
orl
lds
repnz
pop
push
lock
loopne
sbb
in
gs
decb
sbb
pop
dec
mov
push
cwtl
or
jno
scas
jo
ja
andl
popf
fsubs
jmp
pop
mov
sub
xor
pop
cmp
or
or
ja
fsubrl
jg
cmp
xchg
pop
out
int3
loopne
add
xor
or
add
into
scas
jecxz
add
clc
pop
inc
xchg
jg
lods
xchg
lock
loope
add
dec
sti
jo
ret
jo
mov
xor
xchg
jae
jbe
sub
inc
xchg
mov
daa
cmc
or
movsb
jp
fnsave
lods
and
fcomp
push
adc
mov
jp
mov
dec
test
ret
in
jo
popa
mov
pop
mov
dec
jp
ror
mov
stos
sub
mov
xchg
loopne
mov
dec
and
lods
xor
pop
mov
push
imul
mov
xchg
std
insl
pop
shrl
dec
push
push
arpl
push
fcoml
mov
int3
pop
bound
mov
shrb
nop
and
sub
insl
lock
frstor
add
push
mov
aas
test
dec
cld
mov
add
add
add
sub
mov
xorb
decl
int3
loop
jae
add
mov
dec
jecxz
jl
add
pop
test
xor
xchg
dec
and
or
ljmp
pusha
fnstcw
mov
jmp
dec
aad
pop
arpl
dec
jns
sub
or
test
inc
mov
pushf
std
inc
jle
clc
inc
add
mov
push
inc
dec
mov
pop
loopne
jb
imul
fcompl
jmp
mov
aaa
and
fs
push
rol
inc
pop
adc
les
push
loopne
leave
scas
sti
mov
cmp
adc
call
nop
mov
iret
or
inc
stc
shll
pop
jge
adcb
pop
jl
inc
cmpl
lahf
cli
push
adc
cmpsl
cltd
int3
in
or
jl
idivl
in
in
test
sbb
test
insb
dec
push
adc
add
lret
push
jecxz
sti
lret
mov
inc
pop
add
jle
ficoms
xorb
sbb
jnp
push
xorl
nop
int3
mov
cmp
jl
xor
fldcw
dec
and
cltd
xchg
ret
insb
inc
mov
add
addr16
fdivl
cmp
mov
sbb
cld
adc
push
clc
das
imul
sub
es
mov
push
xchg
pop
and
and
cmp
out
jge
pop
adc
cmc
shll
test
sti
shrb
jns
jl
xor
sbb
or
dec
adcb
xor
out
mov
andb
and
icebp
mov
adc
and
movhlps
push
mov
jne
insb
mov
sbb
or
jo
mov
jns
mov
sub
loopne
sbb
stc
xchg
stc
inc
popa
add
and
add
cli
xor
pop
sub
dec
mov
pop
dec
test
pop
or
shl
pop
dec
or
movsl
js
add
out
popa
lods
popf
add
sub
fmul
add
lods
mov
icebp
dec
cmp
dec
and
cld
rorb
jmp
xor
into
repnz
fcoml
test
mov
js
push
dec
pop
fildll
rclb
xlat
sti
xchg
test
add
ret
aas
mov
jle
mov
inc
lock
scas
xchg
icebp
lods
jl
add
mov
mov
or
add
out
int3
test
sbb
mov
dec
clc
mov
mov
lods
inc
adcb
push
mov
pusha
add
test
pop
int
inc
adc
call
test
sbb
push
ss
push
ja
enter
dec
stc
inc
lods
nop
movsb
add
ljmp
arpl
xchg
pop
xchg
or
js
jg
fs
icebp
xor
fdivr
or
movsb
stc
xor
or
pop
push
pop
lret
cwtl
adc
mov
pop
daa
mov
cmp
mov
push
xchg
sahf
lods
pusha
iret
add
mov
and
xchg
dec
cmp
lods
xchg
insb
pop
dec
ret
movsb
cli
stc
or
in
or
in
xchg
add
shl
lret
clc
cltd
add
xchg
mov
pop
cmpsb
lock
adc
outsl
ds
mov
rorb
into
jo
icebp
insb
cmpsl
divb
sub
dec
cmp
pop
push
push
cli
enter
pop
add
and
xchg
fdiv
subl
push
mov
cmp
push
mov
xor
jb
adc
pop
test
shr
mov
fxch
jnp
jo
add
scas
ror
lods
hlt
rcll
or
sbb
enter
push
cmp
sub
int
cmp
sub
or
imul
sbb
sub
pop
cs
rorb
sti
xor
mov
or
and
and
shll
pop
aad
cmp
adcl
jo
pop
jo
xchg
mov
pusha
mov
es
cwtl
pop
jae
add
outsb
dec
or
jno
ret
fincstp
or
ljmp
push
lods
pop
rorl
ss
test
mov
push
bt
setl
call
test
loopne
mov
mov
cmpsb
mov
mov
les
fnstcw
mov
add
mov
xor
jg
adc
ret
iret
jnp
cld
pop
adc
out
mov
pusha
dec
mov
add
cmp
mov
push
mov
mov
pop
pushf
xor
sub
mov
push
xor
ljmp
dec
add
sbb
mov
daa
lret
out
add
ss
in
jo
and
sub
insb
push
andb
pop
and
outsb
cli
lret
addb
and
mov
and
hlt
lods
lret
int3
add
das
mov
mov
roll
fwait
loopne
test
and
mov
imul
cmp
sub
negb
sbb
mov
mov
movsl
lea
out
scas
out
sub
je
push
sbb
add
lcall
roll
sti
mov
dec
jg
and
orb
or
rolb
sub
das
pop
test
pop
loope
pop
pop
mov
rorl
rcrb
mov
sub
popf
push
pop
les
mov
jecxz
add
test
jle
js
movsl
out
adc
pop
pop
pusha
adc
stc
xchg
jae
es
mov
mov
sub
pop
or
mov
cmp
sarb
imul
hlt
push
jb
pop
push
push
call
sub
jl
pusha
xor
clc
jge
add
inc
in
fdivrs
mov
jnp
adcl
lock
call
dec
das
inc
push
sub
mov
mov
add
dec
adc
lret
test
pop
xchg
jle
inc
add
icebp
cmc
adc
push
pop
adc
xchg
cmp
int3
cmp
or
fwait
out
push
pushf
and
fistps
xchg
add
fimull
sub
arpl
mov
nop
or
rorb
inc
adc
in
negl
mov
cmpb
fisubrs
test
out
scas
sub
into
and
sahf
xchg
mov
cwtl
mov
pop
rcrl
cmpsl
out
lret
push
das
pop
cmc
sbb
push
add
jnp
xchg
add
imul
arpl
or
dec
aad
mov
xchg
in
push
pop
lock
add
addr16
pop
aam
pusha
xor
call
jl
mov
mov
adc
and
and
add
les
je
sbbb
clc
xlat
mov
testl
mov
sarb
cltd
adc
adc
std
fprem1
adc
push
ja
mov
ret
mov
mov
out
push
pop
cld
sub
and
in
jmp
xchg
int3
pop
and
test
sub
sub
out
das
push
test
mov
int
mov
xchg
mov
ds
cwtl
ljmp
cwtl
enter
xchg
mov
imul
pushf
loopne
sahf
mov
shrb
cltd
lods
mov
xor
imul
rcr
wbinvd
lahf
push
xlat
pop
mov
dec
pop
cwtl
pusha
rorl
shlb
mov
push
gs
jbe
mov
pop
push
mov
in
jmp
insl
mov
or
loopne
loope
mov
adc
inc
fdivp
daa
lock
idivl
adc
scas
cmp
arpl
shlb
js
xchg
imul
jmp
dec
outsl
leave
icebp
fnstenv
scas
pop
and
maskmovq
pop
xchg
xor
sub
sbbl
sub
jp
nop
mov
adc
cld
or
pop
or
out
jp
or
add
loopne
int
test
je
pusha
or
push
push
add
cli
dec
cltd
sub
dec
popf
and
inc
push
test
iret
cmpsl
add
jo
pop
sbb
pop
test
jnp
mov
cmpsb
pushf
rclb
packsswb
mov
jo
mov
mov
lock
pop
and
jae
shlb
sti
cmp
pushf
and
cmp
or
jns
sbb
repnz
out
ja
mov
dec
or
xchg
fldenv
lds
jecxz
add
outsb
cmc
cs
hlt
scas
imul
mov
sahf
cs
mov
lcall
mov
xchg
or
pusha
or
outsl
test
inc
lret
or
sti
jg
in
cmp
jne
jno
bnd
pop
and
sbb
cmpsb
pop
popf
dec
push
mov
aas
jg
hlt
cli
or
data16
jne
clc
daa
lods
cs
dec
add
mov
mov
push
in
pusha
or
cwtl
testb
outsl
push
js
adc
add
mov
cmp
dec
add
ret
ss
cltd
jle
pop
imul
in
mov
pushf
aas
mov
or
decb
ffreep
int3
add
inc
loop
jle
adc
adc
pop
leave
or
mov
test
icebp
shlb
pop
inc
insl
pop
pop
cli
adcb
fsubrs
sti
jle
inc
inc
inc
xchg
push
pusha
je
sbb
ds
sub
adcl
jnp
in
add
pop
ljmp
loope
cltd
test
mov
dec
arpl
jl
loop
data16
cmpb
pusha
into
push
push
aas
daa
lahf
mov
adc
xor
xor
or
xchg
push
adc
lret
and
les
into
inc
or
jbe
cmp
mov
sti
imul
int3
iret
pusha
mov
mov
fsubl
adc
sub
lock
add
dec
popa
mov
fcmovne
data16
mov
aaa
popf
cli
push
mov
testl
jns
mov
ljmp
aad
xor
pushf
and
xchg
or
inc
jb
sub
sarb
daa
jo
inc
int3
and
mov
mov
stos
mov
pop
aas
and
xchg
xchg
jg
lock
stc
jne
cmp
push
mov
cmp
jg
jge
cmp
inc
je
in
loopne
push
mov
jne
add
or
aas
ret
fs
call
dec
jne
or
xchg
cli
rorl
xchg
shll
or
nop
call
adc
push
dec
fidivrs
cli
xor
cmp
les
and
jl
cmp
pushw
cmpl
movsb
sbb
mov
cwtl
insb
das
or
pop
je
data16
ja
dec
jo
jo
pop
ljmp
arpl
cmp
mov
push
push
pushf
cwtl
pusha
cmpsl
addr16
or
mov
cmp
imul
aad
pushf
mov
idivb
sbb
jnp
pop
inc
jo
or
ss
into
int3
add
inc
cmp
sbb
ficomps
test
stos
sarb
lods
cld
or
cmp
sub
jmp
movsb
ss
jecxz
mov
cmpb
add
jecxz
jmp
add
outsb
add
mov
test
or
and
add
int
sbb
push
adc
inc
pop
lock
sbb
mov
and
jmp
mov
or
out
xor
mov
sub
jne
mov
call
jl
cmp
dec
fsubrp
push
negl
mov
sub
rcrl
std
lods
mov
popf
icebp
and
push
gs
adc
mov
pop
jbe
movsb
sbb
lea
data16
int3
xor
popa
pop
mov
and
clc
and
das
jno
cwtl
lock
or
leavew
test
lods
jle
jo
dec
lds
dec
add
int3
cmp
lock
fnop
sub
add
aaa
cmpb
lods
xor
pop
movb
setg
jns
bound
xchg
lock
shrb
add
pop
mov
xchg
add
rorb
rcrb
sbb
mov
outsb
xchg
push
test
sub
xor
scas
mov
adc
push
outsb
je
rol
jl
cmc
arpl
add
sub
push
fucom
cmpl
out
xor
push
fldt
jle
cmc
add
aam
cmp
mov
add
cmpsl
jge
idivb
pusha
aam
dec
inc
je
in
adc
filds
adc
aam
or
lcall
test
addl
nop
das
iret
sbb
mov
out
adc
xor
add
ds
xchg
jge
or
int3
mov
adc
mov
and
cmp
das
push
or
sahf
jecxz
push
in
loope
lods
pop
dec
adcb
out
and
pushf
add
imul
addl
sub
aaa
daa
in
push
cmc
mov
push
ja
xorb
int
cmp
mov
jns
loop
add
shll
sub
test
mov
mov
cmpsl
add
ret
inc
rorb
sbb
ja
in
dec
imul
sbb
fcompl
mov
add
push
lock
pop
jmp
in
aam
jg
ret
fldl
std
fnstcw
cmp
push
jne
icebp
or
or
repz
ljmp
xchg
fs
int
ret
fists
jg
or
mov
add
test
pushw
arpl
testb
xchg
cmp
mov
mov
dec
shrb
pop
adc
pop
cmp
dec
xor
jbe
pop
repz
xor
popa
sbb
test
mov
fsubp
cmp
xchg
popf
lea
mov
pusha
orb
push
push
test
insl
jns
or
inc
sar
call
inc
dec
inc
in
push
hlt
jg
sub
pushf
mov
add
jg
pushf
sahf
test
mov
inc
lock
jl
add
repz
addr16
push
add
and
jbe
and
pop
jnp
loop
jmp
adc
xchg
push
push
mov
int3
subb
pop
lock
das
in
int
xchg
pop
add
cmpsl
pop
push
and
sub
mov
daa
dec
shlb
negl
cli
sub
pop
lods
dec
and
cmp
xchg
sar
stos
dec
lods
jge
cmp
testl
inc
and
cmp
dec
inc
enter
test
mov
out
pusha
jne
clc
inc
add
or
add
lret
cmp
js
in
jbe
dec
xchg
fsub
mov
inc
mov
dec
and
cmpsl
sahf
dec
into
xchg
pop
add
xor
mov
jecxz
sarl
push
pop
mov
mov
jmp
into
xchg
fcoml
or
pop
je
aam
out
int3
mov
add
jle
fsubl
or
cmp
jg
jp
cltd
addb
inc
jmp
inc
je
clc
movsb
or
xor
cs
push
inc
mov
addl
push
int3
push
cmp
scas
mov
mov
test
pop
stos
cmp
lcall
sub
or
lock
jle
cmp
jle
sub
inc
pushf
add
cmpb
mov
clc
sub
ret
jns
push
or
fwait
inc
mov
call
or
mov
sub
orl
push
mov
repz
add
push
andb
push
andl
stos
mov
add
sbb
fsubrs
jae,pt
and
jbe
pop
ret
dec
xchg
add
pop
cltd
pusha
clc
jae
or
and
xchg
cltd
ss
insb
push
push
inc
adc
insl
cmp
icebp
pushf
outsb
xchg
scas
bound
jl
dec
in
mov
js
add
sub
add
in
lret
aam
adc
jne
add
js
test
mov
cwtl
push
cmpsb
sahf
mov
rclb
dec
leave
dec
inc
cmpsb
xor
push
in
lcall
sbb
mov
loope
sub
mov
hlt
mov
mov
je
cmpl
cmc
mov
add
jne
je
sbb
test
jle
loopne
or
out
inc
stc
nop
dec
gs
pop
adc
fistpl
jecxz
jo
pop
mov
mov
stc
mov
adc
cmc
push
mov
das
scas
jg
fs
push
xor
cmp
pop
inc
add
or
stc
cld
add
or
ret
mov
or
stc
les
xchg
loop
cmp
cltd
mov
call
in
inc
or
xadd
push
and
aam
pusha
loop
or
add
das
rcrb
jp
test
nopl
lahf
lods
mov
dec
clc
call
cwtl
hlt
jnp
add
je
and
sbbb
jo
jnp
lret
popa
pop
push
add
mov
push
dec
outsb
out
cmp
mov
in
popa
bound
push
out
es
rcr
in
lahf
mov
jb
out
pop
clc
jecxz
add
mov
test
adc
xor
jmp
js
in
es
test
cltd
or
int3
add
sbb
iret
or
addr16
adc
repnz
mov
push
or
jae
out
adc
and
xorl
les
mov
cwtl
cmp
add
cmp
insb
jp
test
xchg
cs
cmc
aas
loop,pt
test
add
xchg
or
sub
ja
orb
ljmp
lock
bound
test
or
pop
test
mov
cmp
push
lret
mov
jne
or
js
dec
push
add
fidivl
pop
pop
int3
mov
xor
mov
mov
js
repz
or
data16
jl
fldl
cvtdq2ps
cmp
xlat
shrb
imul
or
sub
out
add
sbb
jae
lea
pushf
inc
xor
in
xchg
jmp
push
push
aam
loopne
dec
and
push
push
xchg
mov
je
pop
mov
adcb
xor
clc
scas
or
shll
mov
dec
addr16
lahf
add
shlb
cmc
jl
je
sub
mov
lcall
pop
push
xor
xchg
xchg
mov
dec
xor
clc
shrb
sbb
add
mov
jne
fnstsw
jge
jl
jp
iret
fsts
imulb
jmp
sbb
cmp
int3
int3
inc
add
jge
in
loopne
dec
push
adc
ficoms
push
pusha
pusha
pop
mov
fmul
jle
in
paddw
adc
or
nop
inc
movsb
push
movsl
add
out
xor
fldt
std
sub
push
imul
test
je
fldl
pop
decb
xchg
mov
add
lahf
neg
lods
ret
outsb
xor
in
mov
gs
mov
adc
push
xchg
add
fs
movsl
push
cmp
insb
mov
es
cmp
sbbb
sub
popa
in
inc
mov
xor
ss
lahf
dec
or
addl
pop
lock
pop
xor
arpl
loopne
xor
adc
roll
inc
mov
add
lea
jae
jno
bound
cwtl
cmpb
sahf
sbb
pusha
cwtl
push
aam
rorl
fidivl
jno
adc
aaa
pop
cmp
rolb
pop
stos
int3
xlat
out
sub
hlt
out
pop
cld
orl
inc
addr16
mov
movsb
dec
xchg
mov
mov
xchg
jge
int3
or
push
repnz
icebp
push
hlt
addr16
pop
xchg
out
sbb
or
jns
jl
insb
sahf
adc
and
loopne
insb
jmp
cli
sbb
mov
mov
inc
in
pop
popf
loopne
leave
dec
dec
mov
mov
aaa
enter
xchg
push
dec
mov
add
mov
jecxz
je
movsb
ret
and
out
push
push
ljmp
adc
aam
subl
int3
cwtl
add
scas
inc
jle
mov
sub
jne
into
cld
push
mov
pop
icebp
shlb
cmc
pop
jns
pop
add
je
push
aas
cmpsb
mov
xor
imul
push
addr16
ja
mov
and
jg
jns
jno
inc
push
icebp
fsts
push
sbb
inc
jge
cmp
mov
hlt
adc
sbb
sbbb
les
stc
ds
push
and
lds
dec
imul
sub
out
mov
shrb
xchg
adc
or
jle
mov
dec
xor
in
inc
and
test
int
das
stos
jnp
hlt
popf
scas
pop
dec
lret
mov
cmpsl
xchg
mov
addr16
ret
jbe
xchg
or
pop
lods
orb
cs
inc
repz
add
mov
lret
cmpl
sahf
std
add
cmc
lahf
pop
mov
jnp
mov
rorb
dec
push
je
adc
xorl
inc
aad
dec
pop
push
mov
pop
add
dec
in
sarb
jo
adc
pop
pop
std
mov
outsl
cmp
mov
mov
rclb
pushf
fsubl
push
jns
ljmp
push
jne
js
sbb
cmc
shlb
js
lods
pusha
sbb
insb
shrl
enter
xorb
mov
enter
rcr
arpl
dec
jp
mov
sub
ret
pop
movsb
lock
xorb
pop
shlb
push
or
and
pop
push
js
sbb
dec
addr16
jo
jge
xchg
push
pop
adcb
mov
cmp
mov
jns
sbbl
pop
mov
cmp
jmp
xlat
xchg
test
pusha
movsl
push
test
dec
repnz
add
and
stos
popa
mov
mov
repnz
sbb
sub
mov
icebp
adc
addr16
mov
pop
push
imulb
enter
add
loopne
mov
test
out
orb
imul
fs
std
sbbb
jge
outsb
cltd
mov
mov
mov
mov
ds
xchg
je
mov
jle
dec
jecxz
add
push
sub
shr
mov
addl
in
xlat
rorl
mov
repz
mov
cltd
pushf
jl
xchg
inc
jge
add
addl
lcall
nop
pop
outsl
dec
cmp
and
lret
xlat
scas
cli
mov
daa
lret
jo
cs
add
mov
outsl
mov
and
ljmp
sbb
scas
jge
fmull
pop
push
lret
aam
nop
mov
adc
in
adc
jg
andl
and
sbb
cmp
subl
and
cmp
inc
jp
insb
pop
add
xchg
in
fadd
pop
fisttps
mov
mulb
nop
and
std
cli
int3
mov
add
sub
jg
hlt
inc
fwait
jno
jle
mov
iret
inc
inc
mov
xor
popf
jae
add
xor
xchg
ds
mov
and
insl
std
dec
jge
mov
lret
push
sahf
mov
sub
cld
jnp
call
hlt
jns
fnsave
outsl
arpl
stc
mov
scas
les
lods
inc
mov
inc
jg
nop
jno
test
sbb
fists
push
mov
orb
sti
fiadds
xchg
leave
jg
rolb
jnp
sub
or
lock
push
dec
cmp
rcl
fsts
push
pop
adc
rolb
mov
int3
cld
add
call
xor
lcall
stc
arpl
xor
bnd
das
xchg
push
mov
pop
sbbb
adc
add
fstpt
int3
jge
rclb
mov
cmc
pop
nop
jp
mov
leave
in
repnz
pop
mov
es
push
out
sbb
inc
aam
mov
dec
or
mov
pusha
pop
xchg
fwait
xchg
adc
jl
dec
jg
jns
cwtl
das
ja
pusha
aam
add
jle
and
or
movsl
mov
rorb
je
ret
xor
sub
nop
lahf
ss
cmp
cld
mov
push
daa
lcall
fsub
xchg
lods
sbb
dec
ret
dec
shll
cmpsl
inc
cmp
cs
jo
sbb
mov
fwait
add
sub
sti
clc
adc
adc
mov
les
test
mov
jmp
ds
add
addb
add
loopne
cmc
enter
jge
ret
dec
insb
faddl
cmc
mov
aad
mov
jo
dec
push
int3
sbb
bound
or
ja
mov
repz
and
cli
repnz
add
pusha
pop
jbe
and
mov
std
mov
in
or
test
fsubl
sub
pop
orb
ja
xor
adcb
adc
xchg
call
and
repnz
sbb
jno
adc
inc
jp
loopne
int
daa
mov
or
pop
dec
enter
jl
arpl
loop
push
lret
aaa
mov
rcll
outsb
movsb
add
or
jl
pop
pusha
rorb
or
add
jecxz
jns
pop
jl
pop
fisubrs
jnp
pop
data16
sbb
jae
in
faddl
cli
pop
jb
jecxz
add
sub
jg
push
lock
popf
cmp
arpl
dec
pop
daa
dec
daa
sti
fcoml
jo
imul
pop
push
rol
pop
sub
jmp
clc
loopne
push
jg
aas
fmuls
cli
mov
or
mov
shlb
repnz
mov
adc
mov
insl
jp
test
testl
xor
mov
dec
adc
sub
jae
or
sti
fnstsw
xorb
je
outsb
or
es
stos
xor
imul
mov
outsb
mov
addb
xor
mov
shr
int3
fwait
das
jg
data16
jle
add
pop
hlt
ja
lods
outsb
and
mov
ror
sarb
pop
jb
es
hlt
iret
add
daa
outsl
inc
pushf
clc
pusha
stc
movsb
add
dec
dec
lods
mov
fucomp
mov
insb
pop
loopne
into
cmc
out
xchg
cld
jo
mov
shrb
sbb
inc
cmp
add
or
xchg
es
add
mov
cmp
rolb
hlt
xor
call
stos
add
andb
shlb
dec
and
pusha
push
cs
and
mov
lods
dec
mov
xor
mov
xor
daa
gs
ja
sbbb
int
mov
mov
fwait
lcall
xor
dec
xor
movsl
mov
fiadds
xor
ss
lods
pop
sbb
inc
out
orb
test
jae
pushf
pop
lea
push
fidivrl
int3
xchg
insb
pusha
daa
jmp
stos
lret
mov
push
sbb
insl
cmp
xor
lods
fcoml
testl
inc
or
or
sbbb
daa
mov
mov
sarb
std
sbb
cli
mov
gs
mov
push
lds
paddq
test
jle
push
push
jae
es
add
cmp
sub
inc
pop
or
or
sbbb
ret
in
call
std
arpl
shll
pop
fildl
popf
and
divl
sub
jg
pusha
insb
adc
daa
add
or
int3
and
pop
add
xor
js
sahf
lods
inc
xchg
dec
iret
pop
sbb
loop
pop
xor
imul
adc
sub
imul
lds
dec
test
fidivs
fiadds
fxch
adc
int3
add
sbbb
cmpl
loope
fmuls
ss
pop
adc
pop
xor
fwait
mov
and
incb
adc
sbb
mov
ret
jl
mov
nop
into
fdivrs
or
jo
inc
mulb
push
int3
push
cmp
push
ds
popf
ja
pop
ja
xchg
jno
repz
mov
clc
and
icebp
adc
addr16
lahf
mov
mov
or
cmpsl
jne
pop
mov
movsl
test
pop
mov
hlt
and
stc
xor
mov
pop
test
cli
or
pop
mov
nop
add
pop
fmul
fisttpl
add
syscall
lea
adc
or
das
lret
and
cwtl
cld
out
xor
and
add
ficompl
dec
cmpl
jecxz
pop
mov
outsl
dec
sbbb
adc
leave
fbld
int3
fdiv
rclb
pop
xchg
sub
fldl
daa
sbb
xor
lret
aad
jae
push
mov
mov
sub
sbb
stc
xlat
lds
xor
sub
xorb
mov
clc
aas
pop
and
lret
flds
and
shlb
pop
pushf
cmpb
fwait
adc
sub
or
xor
ljmp
popf
xor
mov
xorl
push
sbb
xor
ja
jge
bound
xchg
fmul
lock
bswap
lods
jl
push
xor
sbbb
or
or
in
mov
pushf
scas
shlb
ret
sbb
cwtl
cwtl
xor
or
cwtl
pusha
lret
rcr
xchg
adc
enter
dec
aas
mov
leave
add
aad
movsb
dec
xchg
xor
in
in
xor
sbb
push
mov
loop
or
dec
sub
dec
xorb
cmpsb
aaa
addr16
add
and
push
aam
jno
adc
adc
dec
push
lods
adc
clc
mov
fwait
cmp
mov
out
add
push
dec
in
xchg
mov
mov
negl
loopne
lods
or
pop
jns
sbb
mov
popa
or
insb
test
dec
sub
xor
or
mov
push
cld
clc
ret
inc
vpmacsdd
mov
cmc
out
pop
int
push
cmpsb
mov
movb
push
cmp
add
inc
mov
mov
lock
mov
and
or
or
cmp
in
mov
out
add
adc
add
jl
add
push
push
and
lock
and
or
xor
push
cmp
repnz
jae
subl
xchg
push
bound
inc
mov
add
xorb
fdivs
loopne
inc
mov
xor
mov
sbb
lahf
ret
add
test
push
ljmp
js
inc
test
hlt
cld
mov
ja
sahf
xchg
dec
loopne
pop
jns
adc
inc
iret
or
pop
fmul
xor
cli
pop
jmp
lods
mov
xlat
xchg
jo
lock
fnsave
out
lahf
sbb
pushl
outsl
andl
ljmp
sub
insb
aam
and
mov
sub
jbe
jo
or
add
jp
les
inc
jg
sub
cltd
mov
lods
xor
das
loopne
xlat
ret
xchg
pop
xor
push
sti
inc
cmpsb
xor
subl
add
scas
sarb
and
xor
in
pop
sbb
pop
jae
push
or
in
call
ja
pusha
insb
add
adc
into
sub
subl
loope
push
jp
enter
cs
add
sub
je
sub
xchg
ljmp
call
shll
jb
xor
in
sbb
dec
adc
jno
inc
pop
int3
aam
dec
popl
dec
dec
sub
test
test
sub
dec
and
jge
or
sarl
test
inc
push
adc
call
testb
adc
lcall
fs
lret
or
xorb
popa
cmp
dec
jnp
lock
xor
out
mov
lahf
rcl
dec
pop
push
mov
push
mov
fildll
mov
lock
pop
movsb
xorl
xchg
mov
push
and
nop
lcall
pusha
inc
out
iret
pop
xchg
je
scas
js
xor
add
shr
and
pop
jb
mov
mov
xchg
sub
xchg
push
cmp
xorl
sbb
adc
dec
push
pop
pushf
cmpsl
lret
or
cmp
js
and
scas
aad
mov
roll
rclb
dec
aam
pop
cmp
push
adc
loopne
pusha
pop
rcr
mov
or
lahf
mov
cmp
jnp
jl
imul
imul
mov
or
int
push
jle
pop
dec
insl
je
pop
sti
mov
popa
push
jl
andl
adc
fadds
aas
and
movsl
es
adcl
fadds
pushf
push
js
in
push
mov
add
lahf
mov
add
cld
ds
add
jne
dec
inc
loopne
lods
sub
jns
cmp
or
xchg
dec
push
addb
pop
aaa
mov
lahf
inc
cmp
inc
or
push
aas
xor
jg
cwtl
lret
pop
mov
add
or
jns
mov
and
push
sub
adc
scas
sub
movsl
dec
movsb
lahf
orb
xchg
fucom
ljmp
punpckhwd
je
push
mov
add
or
lods
rcl
xor
sub
iret
fadds
cmc
mov
mov
or
lret
adc
lods
add
stc
int3
xchg
cmp
dec
push
xlat
out
add
lcall
lock
arpl
push
je
mov
jge
fcompl
adc
ljmp
mov
lods
xchg
frstor
fwait
js
int
mov
sarl
mov
lods
popa
jp
addb
jle
add
ss
add
fcoml
mov
neg
xchg
std
jno
add
inc
dec
jle
mov
cmc
jno
test
mov
clc
pusha
xchg
add
cwtl
dec
mov
pop
dec
loop
xor
lret
shll
add
int
iret
fdivr
dec
test
ljmp
xor
adc
push
pusha
dec
loopne
fcomps
decb
punpckhdq
xor
into
out
or
lea
aam
cmpb
mov
push
xor
adc
adc
aam
cwtl
inc
scas
mov
mov
pop
lret
sub
push
addl
ret
cmc
mov
mov
push
sbb
flds
cld
cmp
jbe
adc
xor
mov
mov
jge
sub
mov
add
or
dec
add
adc
and
cltd
or
sub
in
jbe
and
leave
aam
or
adc
movsl
leave
xor
das
repnz
sub
out
add
mov
pop
icebp
gs
cmp
cld
jp
sbb
xchg
add
push
jae
andb
scas
testb
dec
xchg
scas
jne
push
push
or
fwait
clc
mov
popa
insl
je
mov
sub
aam
and
push
cwtl
xor
stos
lock
and
push
das
mov
daa
or
cld
cmp
add
ljmp
fsubrs
sub
iret
and
xor
fcoms
fsubrs
adc
push
call
std
sti
mov
ss
jp
mov
jge
shr
orb
fcompl
orl
add
int
add
and
lahf
outsl
add
push
inc
inc
test
adc
or
mov
jnp
fisubl
pop
mov
cmp
mov
mov
nop
inc
scas
mov
and
shlb
xor
pop
mov
fcoms
xor
push
inc
sbb
mov
push
cmp
inc
inc
nop
jbe
enter
cmpsl
xor
shrb
mov
xchg
add
int3
mov
negl
xor
sub
stos
jo
add
std
jnp
jge
xor
jg
out
pusha
test
add
orl
les
xor
fldenv
into
xchg
addb
sbb
cmpsb
jl
lods
xchg
add
cltd
push
mov
or
lock
mov
in
sub
jbe
push
outsb
std
adc
pop
ds
add
das
ja
sbbb
rolw
arpl
pop
xchg
subb
out
mov
mov
mov
pop
sbb
je
xchg
pop
cmp
pusha
call
aam
xchg
roll
and
inc
dec
aas
mov
sbb
inc
push
mov
rcr
imul
add
ss
and
das
sbb
jg
dec
mov
mov
mov
mov
inc
push
sbb
or
pop
inc
add
cmpsb
jg
movsb
movsb
test
jb
push
mov
inc
xlat
out
jl
dec
loope
add
pop
jp
nop
add
decl
pushf
fs
inc
or
pop
loopne
mov
dec
pushf
call
jl
mov
and
jl
aam
xchg
std
push
add
rcrb
pusha
rcrb
repz
sub
mov
xchg
mov
cmp
pop
scas
or
mov
cmpb
add
fsubrp
push
push
call
xor
incb
ljmp
push
pop
add
hlt
loopne
test
orb
sbb
in
jnp
pop
lods
xor
clc
xor
xchg
add
mov
jb
stos
xor
stc
or
adc
push
cli
adc
dec
add
xchg
and
add
adc
loope
cwtl
mov
scas
sub
test
aam
dec
fistl
mov
lahf
sbb
add
and
cld
pop
add
jmp
int3
addb
mov
out
divl
add
test
dec
or
sbb
lock
adc
or
loope
adc
mov
add
lods
scas
push
popf
add
test
xor
cmp
and
lea
out
lods
mov
xor
add
js
incl
addb
jns
sub
rclb
jmp
push
jecxz
sub
aad
mov
cli
mov
rcl
pop
bound
ljmp
fsts
push
push
dec
mov
ret
es
mov
sahf
test
mov
mov
notb
fs
ss
rcrl
andl
addr16
add
xchg
mov
pop
mov
movsb
xchg
loopne
sub
sub
dec
push
push
mov
and
out
cwtl
test
xchg
scas
mov
xor
stc
loopne
shrl
js
int
int3
jge
pop
popf
stc
xor
orl
pusha
xchg
mov
ds
sub
adc
negl
pusha
dec
mov
cmp
imul
sbb
cmovs
sub
cmc
js
push
mov
pop
xor
add
in
imul
ja
popl
xchg
jnp
cld
mov
sahf
mov
mov
sbbl
and
mov
cmp
call
fdivrs
dec
push
mov
push
jnp
in
sub
dec
lods
sub
pushf
mov
lret
mov
sbb
jno
scas
enter
mov
pusha
xchg
pop
in
ds
dec
push
lret
into
testl
pop
mov
clc
add
cmpsb
scas
in
jg
adc
mov
or
pop
push
add
jnp
push
mov
clc
lcall
addr16
enter
notl
out
cmovne
pop
xchg
mov
add
mov
or
out
add
or
or
out
push
pop
or
ss
or
nop
add
jno
mov
xor
dec
mov
add
sbb
mov
jg
cmp
ret
daa
push
dec
sbb
ja
mov
or
fdivrs
add
and
or
mov
lods
xlat
sbb
fstl
dec
nop
out
and
pop
pop
mov
sbbb
jge
sbb
mov
test
xor
sti
dec
loopne
decl
lahf
outsb
mov
in
mov
out
push
repz
cmp
sbb
inc
add
insl
jl
jbe
cmp
push
xchg
sub
sub
add
add
sub
cld
lahf
add
test
fs
aad
test
adc
xorb
sti
jns
jp
fmul
add
lock
pop
add
negl
out
pop
mov
outsb
sbb
adc
je
negb
mov
mov
mov
dec
or
cmp
sbb
dec
mov
int3
jl
add
xchg
pop
lahf
inc
in
in
out
popa
mov
xchg
push
adc
add
fadds
sti
shlb
fsubrl
pushf
inc
add
mov
pop
cmp
repnz
jl
call
test
mov
jp
pop
mov
out
xorps
or
add
in
cmpsl
fprem
fmuls
sbb
mov
sub
call
xchg
dec
push
inc
addb
push
insb
jle
mov
scas
add
cmpsb
aaa
leave
jge
xor
aad
or
testb
jns
fdivrl
aam
inc
and
ja
and
pop
or
xchg
mov
push
mov
mov
sbb
cmp
xchg
loopne
addr16
mov
mov
dec
inc
jl
lock
stc
movsb
in
pop
add
fstpt
xlat
pop
push
adcb
xchg
das
das
test
pusha
cmpb
push
es
out
add
push
aad
or
jl
jne
loopne
in
aas
adc
cmpsl
sbbl
sub
into
icebp
and
xchg
movsb
pusha
mov
rolb
jns
cltd
adc
dec
aam
dec
pushf
and
xchg
cmpsb
in
test
add
mov
pop
push
daa
leave
mov
inc
in
cmp
je
add
cmc
hlt
xorb
cmp
je
movsb
fs
xchg
jnp
insb
andl
shlb
push
xchg
adc
hlt
add
push
out
out
mov
rorl
lods
xchg
push
sub
sub
dec
gs
mov
je
pop
int3
fadds
fnstenv
add
daa
loopne
cwtl
shl
mov
jo
inc
jle
rorb
xchg
pop
mov
adc
iret
xor
pop
pop
sub
mov
or
cld
outsl
mov
sbb
in
mov
add
push
inc
xor
mov
repz
nop
mov
mov
xchg
sub
push
std
gs
in
jns
xor
xchg
filds
pushf
in
inc
mov
push
add
sbb
daa
push
icebp
inc
xchg
dec
sti
add
jecxz
add
jmp
fdivl
dec
in
xor
call
test
xor
jge
adc
mov
ds
add
xor
cmc
cmpsl
sbbl
jp
mov
cmp
push
cmpsb
adc
and
in
xor
ret
cmp
clc
clc
lock
or
jg
adcb
sbb
push
xchg
pop
sbb
cli
fwait
stos
mov
sbb
pop
shlb
inc
out
add
pop
pop
in
mov
sbb
pop
mov
out
mov
ds
and
ficoml
sbb
dec
insb
int3
adc
inc
mov
mov
xchg
in
and
das
mov
dec
push
dec
mov
in
andl
xor
js
push
call
lods
dec
adc
adc
fstpl
cli
sbbb
jl
dec
nop
movsb
inc
push
jl
adc
and
fimull
cmp
test
sub
mov
les
jl
cmp
xor
nop
pop
push
cmpsl
dec
orb
test
adc
cmp
push
sahf
or
cmpsb
cmp
stc
sarb
std
and
dec
ret
adc
arpl
sbb
xchg
push
jge
dec
ror
aaa
in
push
lods
add
adc
leave
fstpl
xor
sub
jnp
aas
jne
lock
jp
adc
fbstp
push
insb
mov
add
sub
jns
rcll
dec
push
cltd
xchg
shlb
mov
xor
jne
pop
cwtl
jo
call
sbbb
inc
and
std
sbb
out
popa
call
sub
jne
dec
add
lods
adcb
je
add
inc
or
inc
addl
jp
adc
fimuls
int
jecxz
sub
cltd
push
cld
dec
rcl
lcall
scas
mov
hlt
dec
xchg
inc
jg
clc
aam
mov
je
xchg
and
leave
inc
data16
mov
jae
push
pop
aam
stc
push
sbbb
mov
inc
xchg
cmp
push
inc
xchg
test
mov
rcl
imul
sub
loop
adc
mov
cmp
cmp
and
sbb
jmp
lahf
inc
das
fstl
cmpsl
js
sarb
xchg
je
push
stc
ror
xor
bound
adc
mov
pushf
pop
out
mov
pushw
sub
xor
cmpsb
push
and
add
rcl
sub
mov
sarb
mov
in
cmpsb
xchg
inc
pusha
outsl
adc
and
mov
icebp
push
add
cwtl
popa
out
mov
jg
sbb
in
xor
mov
shr
das
jbe
jae
pushf
mov
mov
cmp
add
das
mov
mov
xchg
jo
rolb
or
pusha
ljmp
out
je
aas
pop
push
xchg
jl
add
lahf
and
imulb
mov
dec
fmull
dec
xor
out
add
lods
dec
pop
arpl
mov
pop
call
xchg
xor
cmpsl
jge
jae
mov
mov
sbb
mov
mov
xchg
aad
mov
das
push
aaa
flds
test
push
fsubrl
dec
cld
mov
sar
sub
and
cs
inc
sub
lock
xor
repnz
adc
shl
bound
dec
xchg
mov
icebp
je
add
sub
dec
jmp
push
mov
mov
nop
cmp
or
mov
add
je
aad
repnz
push
fdivrl
mov
mov
mov
mov
sub
add
pushf
lock
sbb
popa
pusha
xchg
outsl
or
jecxz
cmp
imul
fdivrl
pushf
add
daa
nop
cs
dec
mov
add
add
jnp
je
pcmpgtd
and
shr
test
mov
inc
cld
scas
cmc
or
int3
mov
sbb
cmp
frstor
shl
addr16
xadd
jb
mov
mov
cmp
dec
es
shlb
ss
dec
push
sbb
add
cmp
jecxz
mov
add
das
dec
cmpsl
filds
add
andl
stc
mov
or
push
jns
negl
add
je
add
nop
mov
cwtl
fs
or
sbb
inc
cmp
jle
movsb
mov
push
fyl2x
clc
add
add
xchg
divb
mov
and
ficompl
cmpb
fidivl
cmp
pop
mov
mov
in
or
push
mov
lock
imul
sbb
xor
jo
cmp
loopne
mov
int
int3
lret
pop
or
cmp
sbb
jbe
push
jmp
adcb
mov
nop
push
cmpsb
dec
iret
nop
or
or
or
adc
test
test
mov
add
inc
push
add
popf
hlt
rcrl
sub
jl
pusha
inc
sahf
mov
cwtl
jo
pushf
or
aad
pop
xor
jecxz
test
adc
push
xor
in
mov
xchg
push
mov
cmp
mov
js
xlat
outsl
mov
stc
mov
jbe
or
mov
add
xchg
ret
jle
pusha
adc
push
pop
cmp
in
push
inc
movsb
pop
cltd
les
test
lret
dec
or
push
js
jl
adc
jmp
push
in
xchg
sbb
xor
repnz
cmpsb
inc
stc
pusha
decl
mov
add
fmulp
inc
inc
push
add
bound
or
push
and
mov
orl
xchg
bound
push
lock
fstl
xorb
add
adc
addr16
inc
or
popf
xchg
add
add
mov
mov
and
push
ficompl
data16
add
clc
out
inc
mov
daa
mov
push
imul
sbb
je
test
js
or
cmpsl
xor
mov
aas
mov
repnz
sbb
cmpsb
test
or
js
xor
lods
adc
adc
decl
js
push
pop
cmp
sbb
xor
mov
mov
pop
inc
add
sbbb
dec
test
sub
call
pop
jge
xchg
inc
nop
xlat
jg
pushf
inc
add
les
pop
loope
jbe
pop
pop
sbb
and
push
rclb
pop
jnp
js
add
cmpsb
mov
das
inc
mov
sbb
sub
mov
nop
aam
nop
or
xchg
jmp
cli
or
js
add
sub
out
pusha
xor
fisttps
scas
sub
push
pop
push
xchg
js
cmp
xchg
inc
pop
xor
adc
lcall
ficoml
mov
adc
test
mov
inc
pushf
cwtl
cmp
pop
inc
push
dec
out
xchg
addr16
cmp
mov
jb
fwait
add
push
lock
insb
adc
sbb
ljmp
adc
jmp
test
arpl
xchg
push
lods
fnstsw
pop
add
in
inc
mov
mov
std
orl
xor
cwtl
test
or
xor
jl
push
lret
outsl
lods
hlt
rorb
sbbb
adc
cmpl
pop
fisubrl
sub
stc
or
add
xchg
subl
sub
adcb
inc
jl
xchg
shlb
sub
dec
pop
pop
imul
jae
add
je
out
popa
in
test
les
cwtl
leave
xchg
jbe
jo
popf
sub
sub
mov
xchg
out
scas
and
push
hlt
stc
and
test
xorb
das
cwtl
int3
rcrl
cmpb
and
jb
pop
and
cmp
push
sub
and
aad
fdivl
es
xchg
pop
sub
and
shrb
clc
hlt
andb
mov
repnz
dec
sub
mov
sub
test
lret
cmp
mov
movsb
push
sbb
xchg
xchg
push
xchg
pop
sbb
jb
push
and
mov
add
jg
xchg
xor
or
nop
and
stos
roll
je
cld
fdivl
pop
dec
ljmp
loop
or
add
jnp
jnp
sub
jl
adc
fwait
imul
pop
jae
shl
mov
pusha
out
jmp
hlt
ret
jle
pusha
loope
pushf
pop
and
sub
add
dec
es
loopne
jp
adc
add
aad
enter
enter
mov
sahf
ljmp
addr16
test
jae
pop
call
sarb
loopne
lret
and
xchg
movsl
mov
jmp
filds
add
jbe
icebp
xor
lret
push
sbb
xor
push
daa
xchg
mov
fs
das
sbb
xchg
adc
add
fiaddl
lahf
push
stos
push
sub
mov
jne
arpl
sbb
in
sub
push
jg
and
aam
xor
jecxz
orb
mov
iret
daa
push
push
inc
dec
or
sbb
mov
add
sbb
lds
add
sub
mov
mov
jo
or
mov
in
mov
insb
shrl
push
shll
shl
cmp
adc
test
or
out
jge
xorl
cmp
jl
mov
adc
test
ss
jg
add
xchg
and
clc
jne
cmp
out
das
int3
dec
arpl
adc
aad
xor
pop
testl
sbb
sar
jmp
and
jp
nop
add
and
je
add
jae
pushf
je
mov
sub
or
jns
dec
jl
adc
sbb
fbstp
inc
imull
jnp
xor
daa
addr16
xchg
lahf
inc
jne
xchg
jg
cld
mov
push
inc
xchg
fdiv
pushf
or
mov
pop
gs
dec
sbb
popa
xchg
jmp
lret
imul
jmp
inc
push
arpl
mov
push
pusha
fsub
inc
sbb
adc
jnp
add
mov
add
test
and
jge
popa
cs
mov
adc
push
bound
push
jge
int3
mov
js
pop
es
les
fucomi
xor
sti
jle
js
out
and
inc
jge
clc
cmp
lods
out
jbe
or
stos
enter
jle
dec
leave
mov
mov
sbb
sub
jecxz
mul
lds
jae,pn
sub
xor
add
test
jns
mov
and
add
mov
daa
jae
insb
jmp
mov
lret
cli
imul
or
ss
inc
xor
mov
sub
cltd
push
js
mov
jp
mov
mov
mov
sub
nop
pop
xor
ljmp
js
sub
mov
loopne
dec
jecxz
and
pop
cltd
dec
jo,pn
jo
add
jne
sbb
out
jb
and
cmp
pushf
rorb
mov
data16
dec
jge
loopne
test
cmc
push
inc
test
mov
ljmp
int
ffreep
lahf
int3
lret
inc
jnp
dec
pop
add
and
xor
scas
inc
adc
mov
pop
lds
add
shlb
push
jp
adc
ret
movsb
and
stos
mov
nop
mov
pop
and
cmp
fbld
adc
jbe
inc
loopne
std
lods
and
inc
adc
arpl
inc
ds
movsb
adcb
add
jbe
fdivrs
lock
mov
insb
jge
js
je
adc
scas
idivb
xchg
mov
ret
rol
mov
int3
icebp
aas
cwtl
sub
sbbb
addb
jg
lea
js
xor
cmp
pop
jo
xor
in
nop
or
enter
add
lea
add
add
ds
cwtl
test
fbstp
scas
int3
imul
ljmp
pop
fadd
das
hlt
rorb
and
and
add
imul
dec
jne
enter
fsubrs
cmp
rorb
shll
scas
pop
fmul
ret
xchg
dec
sbb
je
xchg
imul
sti
enter
xchg
jo
loope
pushf
jnp
jg
xor
sbbl
adcb
outsb
dec
and
notl
testl
adc
call
nop
mov
xchg
addr16
cltd
js
mov
nop
idivb
mov
xchg
cwtl
pop
sahf
xorl
loopne
das
inc
das
jg
inc
mov
pop
hlt
ds
sti
lret
mov
cwtl
xor
adc
pop
cmp
xchg
hlt
ja
adc
adc
adcl
sbbb
aaa
andb
mov
cmp
push
sub
push
push
repnz
mov
sahf
push
inc
idivl
or
shrl
xchg
ja
je
push
or
mov
jl
mov
and
ret
cmp
push
imul
repnz
ljmp
xchg
jnp
fadd
push
ljmp
mov
rcrb
ds
sub
das
and
mov
mov
add
jl
mov
inc
add
jge
shlb
cmp
fcomip
insb
sbb
sub
jl
cmp
cmpsl
push
push
sahf
pop
jg
cwtl
add
push
leave
cs
loop
add
fwait
ret
out
inc
or
add
push
insb
jo
sbb
andb
jecxz
adc
jge
sarb
mov
inc
popa
push
addr16
les
sbb
or
cmp
enter
sbb
mov
mov
or
gs
loopne
call
pop
imul
fnstcw
test
arpl
test
push
mov
negl
orb
sahf
sub
xchg
mov
pop
int
jg
sbb
push
clc
or
in
jne
xor
add
sub
ficoml
pop
adc
jbe
dec
mov
and
add
aas
sti
mov
jbe
mov
xchg
lods
add
repnz
mov
inc
scas
xchg
xchg
jo
pop
xchg
adc
inc
add
and
xorb
std
and
add
scas
int3
fnsave
and
cmp
jo
pop
push
mov
shll
jno
stc
pop
addr16
imul
pop
pop
fnstenv
sbb
push
cmp
sub
enter
inc
pop
inc
fisubs
ss
imul
push
inc
scas
dec
jmp
cmp
add
popa
dec
shrb
mov
mov
les
sbb
dec
loop
fs
push
push
cwtl
sbbl
cmpb
test
add
and
sub
aaa
push
loope
adc
sarl
mov
pop
dec
mov
aad
movsb
dec
xchg
pop
fmulp
cltd
sub
push
mov
push
repz
in
stos
roll
sub
mov
test
daa
xchg
adcl
adc
rcrb
int3
les
push
cltd
ja,pn
lret
in
cmp
cs
mov
cmc
inc
int3
test
arpl
shlb
iret
dec
adc
push
into
loop
inc
sbbl
dec
test
xor
clc
fwait
adc
or
adc
stos
mov
add
lcall
scas
mov
scas
adc
dec
push
scas
sub
in
cmp
aam
add
xor
movsb
cs
xchg
enter
in
mov
ja
dec
jl
add
and
pusha
adc
jns
pop
or
les
fs
ret
mov
int3
mov
jecxz
add
sbb
cmp
rorl
pop
fidivrl
fcoms
enter
enter
icebp
outsl
cld
push
mov
sar
xchg
mov
les
push
adc
scas
int
lock
add
ljmp
push
es
jle
pusha
bound
test
lds
test
mov
dec
jl
xor
mov
sub
je
cmp
mov
inc
mov
outsl
sub
sbb
out
mov
mov
and
movsb
imul
inc
fcmovne
mov
jnp
loop
sbb
stos
movl
adc
inc
mov
pusha
sbb
sbb
sub
call
cli
pusha
cmp
les
push
scas
jns
popa
xor
adcl
in
ret
or
add
inc
xlat
dec
fdivrp
pushf
pop
mov
sbb
test
adc
push
dec
jge
xchg
lock
add
in
in
jg
or
in
mov
data16
idiv
jg
xlat
sbb
aaa
push
leave
ss
int3
pushf
or
jns
and
add
push
cld
inc
mov
xchg
imul
mov
push
adc
push
sbb
dec
add
sbb
sbb
into
or
call
mov
cmp
sarb
and
ljmp
adc
jl
imul
lods
das
mov
repz
cwtl
test
lock
in
daa
test
or
push
ja
lock
outsb
mov
js
data16
ret
pusha
jle
push
mov
add
pop
add
pop
jae
arpl
xor
xlat
jnp
sbb
aaa
arpl
lock
or
cli
and
mov
lea
mov
data16
push
xor
dec
push
and
int
jl
and
stos
fnstcw
es
inc
shr
cmp
daa
xchg
adc
rclb
imulb
jp
push
cmp
lcall
ficomps
in
add
mov
or
xchg
es
lock
jp
mov
rcrb
lds
loop
mov
push
push
jl
add
jbe
dec
or
xor
dec
imul
jns
xchg
cwtl
aam
in
pop
dec
mov
inc
push
mov
sbb
movl
cwtl
aas
lock
rcrl
push
enter
add
mov
add
cmp
adc
aam
call
shrb
stc
nop
das
loope
int3
leave
mov
xor
js
jle
test
jae
ja
and
andb
cltd
les
mov
and
sbb
adc
stc
add
or
adc
push
icebp
movsb
addb
imul
add
jne
xor
jle
jge
xchg
jmp
and
imul
dec
dec
movsb
push
xor
popf
filds
iret
gs
and
add
xchg
in
push
inc
inc
shlb
mov
mov
jl
add
sub
cmp
repnz
lret
hlt
rep
dec
add
adc
arpl
and
cld
or
aam
jbe
mov
popf
push
sub
mov
sub
das
nop
push
mov
and
mov
icebp
push
pop
movsb
js
sahf
adc
mov
and
or
cli
decl
dec
pusha
loopne
or
and
rcr
int
sub
cmp
fcoml
mov
test
das
mov
loopne
sub
sbb
rorl
shll
add
mov
test
std
ss
adc
dec
pop
cmp
and
fdivs
imul
int3
cwtl
orb
loopne
hlt
jg
push
dec
in
adc
lods
jge
push
jae
dec
cld
les
addr16
ret
negl
fsubs
mov
push
sbb
or
adc
sub
scas
lret
or
outsb
das
int3
and
push
aad
adc
cld
test
sub
pusha
inc
sbb
das
repnz
flds
in
or
adc
imulb
xchg
rcl
push
pop
dec
mov
jl
fnstcw
xchg
enter
add
jl
push
add
pop
cmp
enter
ret
dec
mov
sbb
fwait
mov
in
inc
mov
xor
mov
add
popa
mov
add
outsb
xchg
lods
lock
daa
jp
lcall
int3
loop
scas
rorl
sub
ret
icebp
xchg
push
add
aam
mov
mov
mov
ret
cmc
or
icebp
in
inc
or
mulb
push
jg
xor
xchg
lcall
addb
gs
mov
push
test
rol
add
ret
dec
sub
mov
cmp
aam
push
jno
xor
and
fisttpll
inc
pop
das
mov
ja
jbe
inc
xor
cmp
mov
pop
jg
subb
clc
push
pop
adc
or
int3
int3
mov
sbb
mov
sub
cli
jb
mov
or
mov
clc
and
add
sub
mov
sub
adc
fcmovbe
test
lods
scas
adcb
loope
pushf
addr16
pusha
dec
xchg
pop
push
mov
jns
inc
div
shrl
shlb
fdivrl
int
cltd
cmp
mov
push
loope
or
hlt
adc
add
push
dec
mov
or
dec
adcl
sbb
lcall
sub
jo
jp
fsubs
sbb
jl
jae
xorb
test
adc
cmpsb
scas
sub
rcrb
mov
pop
or
mov
les
xor
mov
lret
insb
test
aam
mov
and
int3
subb
inc
adc
leave
adc
daa
adc
jo
inc
iret
ret
mov
out
or
jae
sub
pusha
and
mulb
sbb
fldt
mov
add
test
sub
xor
ljmp
cmp
sub
push
cmp
out
add
xlat
adc
pop
adcb
pop
imul
arpl
mov
pcmpeqd
fdivrl
aam
xchg
jg
shlb
es
rcrb
cmp
sti
cli
jg
clc
inc
arpl
aas
lret
or
add
lock
fcompl
cltd
pop
pop
jo
mov
sbb
push
inc
outsb
mov
xor
and
mov
jle
pop
subl
sbb
mov
cmpsl
leave
mov
ret
insb
insb
add
lcall
imul
sbb
insb
xor
aaa
cmp
ret
xchg
inc
mov
cmp
push
mov
pop
or
push
data16
sarl
mov
inc
mov
jns
fcomps
and
je
rol
into
xorl
out
shlb
pusha
shr
cmpsl
sub
and
mul
sub
adc
cmp
xchg
rolb
cwtl
add
neg
mov
ja
or
xchg
insb
pop
das
clc
movsb
add
push
jle
scas
pop
nop
js
jnp
dec
into
and
pop
inc
in
pop
xor
mov
xchg
xorl
push
in
nop
add
mov
xchg
arpl
push
daa
mov
sarb
jmp
dec
fnsaves
sub
icebp
lods
imul
push
dec
test
pop
inc
mov
pop
sbb
dec
ret
popf
lcall
cld
jl
and
inc
out
imul
lea
pop
das
outsb
clc
mov
sbb
ljmp
and
addb
jge
test
or
es
sti
lret
in
test
rolb
mov
xorb
lods
push
out
cmc
xchg
fldenv
adc
test
push
mov
int3
cmp
adc
andb
arpl
mov
xor
lahf
call
ljmp
dec
xchg
roll
xorl
mov
add
and
mov
sbb
sbb
dec
mov
es
pop
jo
push
push
jg
mov
repnz
jno
add
xchg
jne
leave
cmp
rorb
mov
and
dec
jbe
jns
mov
or
out
aaa
arpl
add
std
test
pop
add
cmp
push
xor
mov
lret
pop
fcoms
das
ja
sub
cmp
inc
lock
mov
cmpsl
jnp
clc
pusha
movsb
inc
add
dec
je
mov
push
cmp
mov
popl
std
pop
xor
pop
orb
cmp
insb
mov
movsb
jmp
in
adc
scas
pop
add
and
fiaddl
movsb
and
loopne
and
jl
push
leave
jecxz
dec
imul
movsl
mov
xchg
jne
mov
sti
cmp
sub
outsb
sbb
pop
dec
add
mov
in
je
or
xor
pop
dec
push
mov
mov
mov
xchg
cmpsb
xor
cld
xchg
out
shrb
iret
addb
sub
sbb
clc
sbb
xlat
mov
outsl
loop
and
hlt
adc
or
dec
jp
insb
imul
cmp
bound
cwtl
in
mov
mov
jns
mov
roll
clc
test
insl
pop
adc
inc
jp
filds
outsb
pop
mov
inc
imul
popf
cmc
fmull
push
cmc
data16
lret
xchg
into
icebp
les
jnp
jg
push
inc
fdivr
xchg
xor
aam
push
enter
sbb
cmpl
insb
add
aas
xchg
inc
xor
jg
cmp
xchg
aaa
subl
mov
jge
sub
idivl
cld
add
push
mov
dec
shl
adc
cmp
mov
pop
pop
mov
xchg
add
addr16
test
fistpll
pop
pop
orb
insl
je
pusha
jae
icebp
loope
les
pop
cld
and
or
pop
push
jge
xchg
pop
aad
inc
cmp
ja
mov
dec
mov
enter
mov
aaa
adc
dec
xchg
cmp
jl
xchg
push
xorl
mov
jecxz
aam
cwtl
inc
ja
icebp
xor
fidivs
popa
inc
out
fxch
addb
fucom
insb
aad
push
mov
mov
aam
jle
adc
pushf
or
sbb
mov
jnp
into
add
and
xor
daa
aaa
rclb
add
mov
out
and
lods
and
inc
je
pop
mov
mov
ja
lds
jns
inc
push
dec
jge
sbb
add
mov
fldenv
daa
push
sbb
subb
add
inc
or
in
mov
or
call
sbbl
cwtl
pop
fmuls
jg
add
rorl
and
xchg
notb
cmp
test
sbb
ja
xchg
jge
dec
stc
jne
pop
lret
pop
rep
andb
and
sti
les
push
push
clc
xchg
xorl
jg
sub
test
clc
mov
cwtl
dec
jbe
rclb
add
sbbb
inc
mov
mov
fisubl
testl
loopne
lcall
sbb
hlt
push
addb
dec
daa
jle
pusha
dec
jmp
add
dec
add
cli
outsb
popf
dec
dec
movsb
add
cmpsl
mov
ds
rolb
sub
fcoml
dec
xor
incl
push
test
mov
pop
push
int
aam
out
gs
jle
mov
ret
scas
jns
and
pop
fldl
mov
and
sbb
sbb
dec
lock
cmpl
les
mov
pop
jo
mov
loopne
sbb
push
xchg
sub
adc
fstpl
cmp
outsb
orb
xchg
inc
pop
insb
push
test
jl
insl
outsb
ljmp
push
inc
xchg
test
icebp
push
subb
sub
mov
or
mov
cmpb
dec
pop
mov
sbb
arpl
iret
cld
add
dec
push
mov
fsubs
and
mov
stc
or
fisubrs
rclb
lds
xor
ss
pop
loopne
xchg
pop
pop
xor
les
dec
add
xchg
jne
sub
data16
cmp
out
push
fsts
mov
add
jbe
mov
pusha
or
pop
leave
or
scas
pusha
sub
jo
push
scas
xor
insb
add
xor
rcrl
jecxz
pop
jp
lods
add
shr
jno
inc
subl
cmp
lcall
dec
jmp
jge
dec
add
jge
cwtl
mov
clc
clc
dec
and
fstpt
scas
shll
cmp
jmp
int3
adc
mov
jle
xor
push
inc
imul
lock
push
xlat
fadd
mov
daa
dec
push
call
push
cwtl
add
aam
mov
inc
je
or
cs
or
imul
js
mov
add
push
fmuls
cwtl
loopne
add
shl
ret
rcr
add
punpcklbw
insb
xchg
shll
jbe
cmp
or
xchg
sub
add
mov
adc
imulb
dec
jnp
pop
add
mov
movsb
pusha
add
pop
out
jne
fidivrl
cmp
test
sahf
mov
xchg
mov
lcall
decb
lahf
xor
mov
adc
int3
jnp
mov
cmp
dec
test
stos
mov
imul
xchg
inc
mov
adc
dec
mov
arpl
in
call
pop
ret
repnz
mov
pop
mov
add
mov
sbb
cmp
sub
cmpb
add
dec
fcomp
pinsrw
add
jg
scas
dec
lock
cwtl
loopne
push
cmpsb
fwait
xor
orb
add
lock
ja
jg
sbb
mov
pop
mov
dec
test
cmp
xchg
ret
addr16
jns
mov
sarl
xor
push
mov
fcoms
mov
jno
and
scas
shll
push
pushfw
mov
push
cmp
add
jecxz
lods
dec
je
andb
mov
int3
pop
adc
fsubr
rorb
mov
pop
out
lods
ret
mov
push
jo
and
call
fldenv
iret
adc
dec
pop
and
mulb
xlat
in
add
mov
jo
pop
jge
and
inc
adc
cmpb
or
xchg
mov
in
lock
xor
mov
scas
nop
adc
sarl
outsb
sbb
or
jge
adc
sub
adcl
pop
cmp
pop
push
aad
movl
mov
fstl
in
ds
add
jg
mov
add
add
xorb
lahf
mov
cs
adcb
pop
out
test
mov
pop
imul
int3
push
sub
shlb
insl
frstor
add
insb
dec
push
cli
inc
or
jge
or
and
xchg
push
addb
adc
cmp
jbe
and
lods
inc
push
notb
clc
add
jl
dec
fistpll
push
subl
ss
outsl
dec
test
rol
scas
mov
out
test
cld
and
out
pop
mov
inc
sbb
test
nop
push
add
stos
mov
fwait
jge
add
dec
mov
mov
mov
stos
jecxz
add
push
into
push
dec
inc
inc
ret
aam
inc
repnz
adcl
mov
adc
dec
pop
lock
je
xchg
pop
fsubl
and
mov
mov
jne
sbb
dec
shrb
pop
xchg
mov
pop
in
jmp
fcmovb
call
mov
fimull
xchg
fildl
inc
sbb
std
pushf
adc
addb
push
xchg
pusha
test
or
pop
pop
cli
mov
sbb
add
xor
mov
popa
sbb
xor
push
xor
xchg
pop
mov
sbb
lock
jo
adc
inc
xor
dec
sub
das
cmpb
int3
add
inc
aam
pusha
jne
fnstcw
in
rorb
lds
test
mov
repz
scas
sub
mov
repnz
lods
xor
xor
sub
cld
scas
andb
xchg
fists
or
pusha
add
insl
pop
lods
pusha
jle
loopne
adc
js
sub
cld
or
fcmovnbe
inc
int3
adc
jg
dec
inc
aad
aad
adc
add
jnp
lods
filds
pop
xchg
pop
xchg
cmp
add
int3
add
push
mov
cmp
pop
inc
je
mov
lret
or
mov
je
push
ljmp
leave
xchg
popa
in
out
cld
cmpsl
test
jne
cmp
and
mov
jns
xchg
or
test
inc
lea
xor
pop
ss
aad
dec
call
hlt
xchg
and
enter
daa
out
jo
adc
add
jo
adc
call
testb
xchg
adc
adc
pop
movsl
jmp
push
pusha
js
addr16
sbb
add
jne
shl
jo
inc
bound
jnp
scas
cmpsl
dec
inc
mov
adcl
ret
clc
repz
mov
add
or
jle
and
mov
inc
nop
push
adc
inc
negl
cmp
fcoml
shlb
test
ret
addb
outsb
pop
ja,pn
scas
cmpsb
sbb
fsubl
xorb
loope
sub
or
orb
and
dec
dec
push
inc
fdivrs
je
out
lahf
ss
sti
pop
sub
iret
subb
test
dec
daa
fs
cmp
imul
dec
arpl
lret
jns
add
mov
xor
sbb
movntq
push
adc
cmc
repz
dec
les
inc
cmp
add
les
cmp
iret
shlb
les
and
mov
clc
scas
adc
add
insl
flds
inc
popa
or
pusha
or
xor
add
fcoml
mov
add
xchg
mov
jge
lods
pop
cltd
xchg
cld
repz
cli
dec
scas
cmp
lods
and
fadds
das
mov
pop
or
pushf
cmp
add
pop
popf
sub
cmp
andb
repz
mov
mov
lahf
xchg
call
les
sub
pop
jg
pop
sbbb
sahf
imul
dec
dec
outsl
mov
je
add
fwait
cmp
aas
inc
clc
nop
add
loop
ret
incl
add
pushf
mov
dec
lea
push
in
aad
push
ds
add
xchg
daa
out
arpl
sub
mov
mov
adc
or
fnstcw
shlb
sub
jge
add
adc
in
xchg
push
pop
inc
mov
stos
or
add
dec
jg
mov
imul
xor
pop
add
sub
mov
aam
sbb
mov
sbbb
mov
jne
test
sbb
mov
aam
pusha
add
push
out
hlt
jns
xchg
lock
add
xor
jg
push
prefetchnta
push
xchg
lods
push
mov
ss
daa
je
jbe
outsl
pusha
push
fwait
mov
cwtl
icebp
dec
pushf
or
jp
aam
adc
dec
adc
mov
cmpb
xorl
mov
and
or
jbe
mov
aas
ret
call
cs
pop
cld
pop
mov
and
or
inc
and
ficompl
sub
into
scas
and
loopne
lods
outsl
mov
call
mov
iret
stc
add
sub
andb
rcr
nop
sbb
aam
jmp
lock
enter
inc
cmpb
jl
das
fs
push
pushf
loopne
vmovdqa
fs
out
enter
inc
fmuls
xchg
fldcw
or
inc
imulb
out
daa
sbb
nop
pop
mov
fmull
xor
xor
mov
inc
rorb
mov
push
sub
js
and
add
call
mov
push
push
outsl
mov
sbb
js
aas
jg
sarb
and
gs
and
fsubrl
int3
clc
sbb
bnd
lcall
in
pop
xor
push
add
cwtl
arpl
in
or
mov
imul
rcr
sub
scas
cld
cmpb
add
addb
pop
repnz
xchg
rorb
out
add
jecxz
xchg
sub
add
or
sub
mov
je
cmc
push
insb
out
lock
lcall
subl
pop
stos
pusha
in
cmp
inc
aaa
jg
add
dec
xor
xchg
xor
push
cmpsl
repnz
xchg
push
and
in
loopne
in
xor
dec
cmpb
pusha
test
adc
pop
adc
mov
loopne
mov
cmp
mov
clc
pop
out
jbe
mov
stc
es
arpl
loopne
or
jg
bound
hlt
cmp
pop
mov
pop
loopne
loop
inc
ss
jne
mov
push
add
xor
and
inc
orb
in
stos
outsb
cld
mov
mov
adcb
in
fistps
sbbl
shrb
sbb
jno
pop
xor
mov
cmc
dec
xor
or
dec
xchg
addr16
jne
lods
xchg
mov
addb
add
add
or
and
jle
addl
push
icebp
fldenv
cmpb
pop
sahf
xchg
push
sub
call
pop
xor
cmpsl
jge
test
jl
movswl
lods
xchg
mov
mov
add
jg
xchg
lock
je
cmp
std
out
sub
rorb
stos
and
mov
lcall
jbe
adc
in
test
les
les
xorb
jno
xor
push
pop
or
push
pop
xor
jg
mov
js
test
pop
movsl
arpl
test
sahf
mov
xor
fadd
lret
in
popf
fsts
dec
fidivrl
jge
jl
je
jp
mov
xorl
movsl
pop
cwtl
in
das
push
dec
push
and
inc
lahf
jae
dec
aas
lods
xor
testl
call
push
and
lret
add
sub
les
mov
js
and
iret
flds
cmp
mov
sub
and
mov
dec
in
sbb
cli
ret
idivb
sbb
jl
cld
sub
cmc
seta
rolb
push
adc
pushf
pop
pop
roll
arpl
add
movsl
daa
cmpsl
orl
xor
push
dec
sub
into
sub
jecxz
or
push
pop
pop
jbe
pusha
loopne
or
sbbl
incb
sub
sarb
cwtl
and
add
mov
mov
js
shrl
sbb
add
add
nop
mov
pop
test
mov
negb
add
insb
or
xchg
wrmsr
test
loopne
js
mov
cmp
xchg
in
dec
push
bnd
popf
in
add
cmp
pop
ss
mov
fidivrl
mov
push
sub
scas
xchg
mov
outsl
nop
jle
and
inc
dec
aaa
imul
dec
xchg
add
repz
int3
add
mov
push
adc
subb
jne
xchg
aam
into
sti
loopne
das
rorl
lods
add
hlt
jecxz
filds
add
or
mov
xor
mov
aas
cmc
pusha
les
popa
mov
shll
lods
push
mov
mov
mov
js
rorb
imul
push
addl
nop
addl
in
lcall
movsb
jg
fcompl
mov
dec
adc
insl
orl
les
pop
sbb
cs
mov
add
pop
sub
call
out
pusha
mov
push
jbe
test
lock
hlt
xchg
test
daa
fdivs
add
jnp
lret
testl
sti
enter
sbb
les
xchg
js
sub
pop
fcomi
mov
add
int3
mov
xchg
inc
in
pop
f2xm1
setne
sbb
jbe
push
mov
jbe
add
scas
jecxz
das
repz
and
testb
mov
int3
imul
or
popf
adc
push
repz
pop
jg
ror
jmp
and
clc
adc
cmp
int3
xor
xchg
cmpl
in
les
push
jmp
adc
cmpsb
and
jo
xchg
push
jle
aam
cltd
rolb
and
mov
jne
mov
je
ljmp
add
fwait
xchg
push
cmc
inc
mov
and
fmull
adc
cmp
enter
int
or
pusha
mov
jnp
pop
pusha
xor
test
mov
mov
mov
xchg
dec
adc
push
pop
js
adc
add
stc
movsb
add
sub
fwait
jnp
movsl
pusha
nop
adc
or
clc
aam
jne
adc
je
hlt
ja
add
clc
mov
dec
shl
mov
dec
je
mov
xor
mov
xchg
push
cmp
inc
inc
add
test
push
jbe
clc
add
and
ds
leave
add
fs
inc
pop
cmp
xor
pop
insl
mov
movsb
mov
sub
or
shrb
mov
nop
sbbb
pop
jge
pop
sub
push
push
and
incl
mov
cmp
pusha
in
cmpsl
and
cmovg
lods
int3
pushf
daa
pop
xlat
xchg
mov
dec
arpl
add
cwtl
out
mov
inc
andb
loopne
sti
arpl
test
mov
and
subb
test
push
push
loopw
and
cmc
sbb
mov
fildl
adcb
cmpsb
jb
pop
jg
in
adc
testb
jecxz
jge
sbb
adc
mov
add
jge
inc
mov
sarl
xor
jmp
ret
or
cli
add
gs
push
loopne,pt
xor
mov
movsl
jge
jl
mov
or
xor
add
cld
repnz
lods
fs
jnp
fs
mov
mov
das
mov
and
jb
add
add
adcb
and
mov
roll
sub
stos
pusha
mov
lock
push
jo
and
filds
test
cmc
xchg
fsubs
subb
adc
clc
add
adc
in
sbb
int3
adc
hlt
fisubs
cmp
sbb
jno,pt
inc
dec
clc
dec
push
push
mov
lods
call
and
and
repnz
pop
xor
add
mov
add
push
adc
add
testl
adc
jne
mov
or
repz
fsub
or
mov
cwtl
mov
test
pop
jecxz
add
jbe
pop
sub
sbb
jl
adc
clc
popa
lods
mov
test
rol
and
jecxz
xor
fadds
mov
lret
sub
cmc
scas
jl
pop
cmp
xchg
cwtl
add
push
adc
mov
fs
cmp
cmp
dec
xchg
pushl
pop
fistps
lods
cwtl
add
test
pop
or
sub
aam
aam
pusha
push
scas
in
daa
adc
jns
subl
cmp
jl
lahf
dec
xor
leave
adc
push
sub
repz
daa
int3
jno
adcl
cli
or
ds
ljmp
xorb
pop
shlb
sbb
cmp
push
dec
mov
mov
cld
mov
fadds
out
in
test
rcr
dec
shll
xchg
pop
xor
or
pusha
movsl
push
loope
adc
xorl
sub
int3
movsb
call
lods
test
mov
lock
sub
dec
mov
or
in
xchg
rorb
sti
rolb
xor
xchg
mov
or
stc
outsb
xchg
add
adc
js
or
pop
xchg
popa
inc
aam
sub
pop
ja
outsl
mov
popf
add
pop
sar
stos
imul
lds
loopne
cltd
add
sbb
divb
pusha
pop
sbb
int3
sub
int3
dec
shll
add
or
pop
xchg
dec
and
cmpb
fwait
inc
in
xor
into
mov
sbb
je
ds
iret
dec
mov
add
ret
add
ljmp
adc
mov
and
sub
andb
or
sub
insl
jbe
lcall
mov
sub
test
mov
and
cmp
lock
hlt
jmp
stos
cwtl
pop
stos
subb
mov
lcall
jmp
pop
jo
sbb
fdivr
push
inc
jmp
stos
xor
mov
pop
dec
andl
mov
cmc
rcrl
mov
ret
out
incl
bswap
add
rep
pusha
les
pop
sub
cli
mov
nopl
addr16
aam
xorb
lods
xor
cld
scas
sbb
xlat
xor
mov
mov
jne
je
pushf
add
repnz
sti
ljmp
and
les
dec
fadds
push
fcmovne
sub
shlb
inc
ds
movb
clc
or
dec
imul
js
out
jl
ret
lock
nop
aaa
xchg
hlt
pusha
fs
mov
insb
inc
sbb
adc
mov
jp
cmpsb
test
popa
gs
lcall
mov
pop
and
xor
out
test
pop
out
sbb
fs
sbb
dec
xchg
or
ret
jl
outsl
shr
mov
pop
std
js
adc
adc
test
pop
rcl
les
xchg
aad
test
cli
imul
or
push
jg
add
into
pop
jne
shrb
out
cmp
cmp
clc
sbbl
test
mov
out
cmp
pop
add
jle
sub
xchg
dec
iret
ljmp
int3
or
push
movsl
jg
jl
xchg
push
popa
outsl
insb
je
insl
loopne
aas
inc
aas
xchg
mov
cld
jns
push
mov
cmpsb
xor
sub
insb
xchg
testl
rol
incl
mov
jnp
add
mov
cmp
loopne
pushf
icebp
cmp
test
sub
jle
fsubl
in
or
xor
dec
inc
xchg
add
in
idiv
je
push
dec
mov
sub
jmp
jge
sarl
sub
pop
pop
add
push
mov
push
jge
lds
push
mov
lret
inc
cld
fadd
xchg
cli
faddl
and
gs
mov
or
gs
inc
adc
jbe
ljmp
int
pop
sbb
add
pop
dec
xchg
je
leave
xor
sub
das
xchg
dec
adc
int3
sahf
adc
fldl
popf
xchg
dec
out
dec
lcall
dec
pop
clc
shlb
inc
les
das
jg
lahf
shr
test
mov
ret
data16
pop
and
mov
lmsw
shlb
mov
add
and
dec
lods
add
rol
mov
pop
xchg
cmp
or
loopne
rep
test
jl
ja
cmp
push
aad
jle
pop
and
mov
lods
or
clc
sub
or
mov
iret
dec
lret
mull
jge
fadds
mov
mov
int3
nop
add
mov
dec
jg
add
out
add
mov
ljmp
add
cmpsl
jno
outsb
out
cmp
popf
dec
or
dec
xchg
lahf
loope
push
jp
sub
add
cmp
mov
sbb
push
xchg
sub
or
popa
jno
or
dec
mov
into
cmpsb
stos
or
adc
jne
push
add
mov
jmp
inc
mov
fwait
cmpb
mov
fbstp
sub
ja
push
adc
loopne
test
daa
xor
scas
test
clc
je
fcoms
call
add
lcall
fdivrl
das
jns
andb
mov
nop
xchg
movsl
pop
cmc
jae
add
sbb
sub
sub
push
mov
mov
fstl
push
shlb
add
jae
xlat
outsb
sbb
ja
sbbb
dec
cmp
mov
pop
pop
cwtl
add
mov
inc
movsb
sti
int
rcl
nop
shll
ljmp
adcb
inc
into
or
add
or
mov
shlb
popf
lock
cmp
xor
mov
mov
xorl
xor
pop
inc
in
dec
xor
je
pusha
mov
fcomps
rcr
aam
pop
dec
scas
int3
lock
add
and
add
and
test
xchg
cmp
pop
movsb
jns
adc
mov
jnp
cmp
jmp
push
test
scas
xchg
mov
jg
and
pushf
mov
pop
sbb
add
xor
dec
fstps
mov
mov
mov
hlt
inc
subl
cmp
mov
mov
andb
cmp
jne
rcrb
or
pop
push
push
xor
and
cld
xor
add
dec
cmp
mov
cmp
shl
dec
call
loopne
dec
mov
aam
data16
fimull
sbb
scas
mov
dec
arpl
and
es
jg
sbb
sbb
test
out
fisubrl
inc
test
enter
or
jg
mov
inc
lret
and
pop
fsts
xchg
pop
insb
add
std
mov
cltd
in
sub
jl
cmpsb
fadds
mov
test
in
enter
push
or
sarl
cld
inc
cmpsl
mov
mov
adc
stc
cmp
test
adc
fs
mov
mov
ror
sub
pop
adc
fwait
pushf
add
sbb
xor
sarl
cmpb
mov
in
fisttpll
pop
je
push
lahf
rcll
sub
add
movsb
mov
xor
jecxz
cmpsb
rolb
rclb
adc
xor
add
mov
pop
mov
loopne
mov
jp
dec
cmp
lret
mov
cmp
push
push
addl
xor
mov
push
hlt
xchg
iret
mov
jle
shlb
add
sarl
mov
add
sub
mov
pop
sbbl
push
push
sbb
aas
pop
sub
dec
sbb
push
mov
mov
loopne
int3
mov
dec
xchg
in
leave
pop
jge
sarb
insb
and
mov
add
daa
lods
jmp
outsb
and
mov
sbb
and
add
arpl
ror
cmp
std
test
or
enter
je
rolb
cmp
sub
popf
or
jg
or
iret
es
rolb
jno
icebp
jo
add
cli
jbe
fdivl
pusha
data16
jo
sbb
and
xchg
mov
xor
push
mov
outsl
adc
in
pop
lods
adcb
jb
adc
sbb
or
mov
jge
jl
mov
idiv
lock
mov
pusha
ss
xchg
jnp
clc
inc
es
mov
sub
cmp
mov
sarl
cmp
aam
loop
sbb
outsl
and
gs
sub
mov
push
out
and
je
loopne
leave
dec
in
fdivr
mov
cmp
add
sahf
cli
dec
pushf
insl
add
inc
xchg
icebp
addb
sarl
dec
xor
mov
lret
xchg
pop
or
add
add
addr16
lods
mov
lret
ljmp
shlb
jmp
shll
xchg
mov
rolb
jp
mov
sub
and
scas
sbb
aaa
xor
pop
outsl
scas
mov
mov
rolb
mov
jnp
add
dec
adc
ret
sbbb
mov
add
aam
mov
dec
push
jp
jle
cmp
aad
mov
leave
jmp
jp
loop
add
push
mov
lds
lods
rclb
cld
pop
cmp
push
pop
outsl
sti
int3
pushf
insl
loop
sub
adc
dec
adc
cwtl
pop
lea
xlat
adc
mov
jne
push
or
stc
clc
inc
enter
ret
lods
sub
xchg
mov
add
out
mov
outsl
incl
push
inc
dec
xor
or
mov
adc
xor
decl
adc
xor
adc
add
fsubl
daa
and
inc
in
pop
iret
icebp
jge
and
cmp
mov
je
loopne
sbb
mov
andb
pop
jmp
je
jne
je
pop
data16
push
lock
cltd
hlt
jg
nop
sub
sbb
fcmovne
mov
push
add
cmp
clc
inc
inc
lock
js
cs
jnp
popa
cmp
cmpsb
inc
lods
sti
push
push
dec
popa
inc
or
shl
sbb
bound
cwtl
lcall
dec
cs
orl
dec
sub
test
cmc
stos
mov
shll
mov
add
int3
lods
push
inc
test
fsubrs
dec
fs
dec
aaa
mov
mov
in
mov
ljmp
das
hlt
repnz
or
pop
in
xchg
lret
xchg
pop
add
jle
and
mov
pop
gs
shlb
inc
pushf
popa
scas
pusha
xchg
out
pop
fdiv
sbbl
rcl
mov
and
sarb
push
test
xor
into
xor
jns
sbbl
adc
pop
in
push
xchg
sahf
cmp
jno
nop
pop
or
test
fadds
xorl
xchg
loope
cmp
je
inc
or
icebp
shll
mov
sarb
mov
cwtl
add
mov
int3
jmp
daa
mov
and
mov
ja
mov
jnp
jg
enter
fiaddl
or
enter
sbb
mov
xchg
lods
mov
inc
nop
add
popl
or
mov
and
and
adc
jbe
and
add
lods
mov
shlb
add
data16
pop
mov
mov
ds
test
hlt
les
outsb
stos
mov
fs
cmpsb
xchg
jns
popa
jp
jbe
subb
movsb
push
mov
roll
loope
push
sub
mov
push
test
jne
in
orb
xchg
jge
inc
pop
push
test
xchg
add
add
pop
sbb
xchg
lods
mov
divb
or
mov
xchg
icebp
rolb
loop
rcrb
lock
inc
mov
aad
adc
cmc
jle
sub
mov
inc
xchg
hlt
sub
mov
or
jp
les
pop
filds
cmp
mov
inc
mov
std
sbb
out
shll
cmp
mov
shl
int
outsb
fdivrs
cmp
pop
xor
dec
mov
mov
adc
lret
jl
sub
pop
test
sub
rol
mov
pop
pop
mov
jg
lock
mov
popa
xor
xchg
add
cmp
sbb
and
sub
in
adc
pop
lods
mov
mov
xor
mov
mov
push
insb
les
shrl
mov
cwtl
pushf
repz
int
fstpl
int3
faddl
jbe
xor
push
arpl
add
fwait
mov
lods
dec
cld
pusha
add
andl
addb
adc
push
jne
add
xor
int3
push
mov
or
add
adc
enter
xor
mov
sarl
push
cmp
adc
or
out
or
add
cmpl
inc
jl
stc
aam
rorb
push
mov
sbbb
pop
inc
out
mov
in
and
dec
add
fidivl
add
push
scas
mov
dec
or
arpl
ret
insl
lahf
outsb
xor
or
mov
cmp
cmpsb
je
sub
add
ret
push
jne
clc
add
xchg
jbe
sub
les
out
fcomps
pop
cmc
sbbb
shufps
gs
test
icebp
jbe
pusha
sub
shl
das
inc
push
xlat
add
test
inc
sub
adc
and
cmp
adc
add
adc
jne
pop
arpl
dec
shlb
dec
dec
adcb
ret
dec
inc
sub
test
icebp
push
hlt
inc
scas
sub
popa
lahf
mov
in
jge
pop
fnsave
test
jne
cld
cs
imul
cwtl
pop
je
sub
xorl
imul
fdivrs
mov
bound
add
and
inc
rorl
imul
or
ja
movsb
jae
repz
lds
shrl
loop
inc
push
incl
bswap
mov
dec
sarl
push
add
push
adc
fninit
mov
push
mov
movsb
xchg
fsub
inc
pop
das
sub
dec
jle
lds
add
sbb
inc
repnz
add
or
lock
push
push
adc
or
ljmp
dec
testb
inc
pop
mov
jg
test
sbb
adc
mov
pop
fsubs
ss
insb
cmp
cwtl
fsubr
fs
pop
push
dec
mov
rolb
push
lds
test
mov
cwtl
dec
aaa
out
call
nop
cmp
or
mov
pusha
outsl
inc
fdivl
and
popa
inc
insb
or
jo
int3
pop
adc
add
std
fisubrl
mov
in
push
stc
hlt
cmp
shr
sub
mov
xor
mov
outsb
inc
arpl
pop
and
insb
push
xor
je
negb
sbb
jg
int3
or
jle
mov
xchg
jg
nop
fsubs
mov
sbbb
sub
je
or
xchg
cmc
stc
in
mov
movhps
pop
jmp
sbb
daa
push
out
data16
sahf
cmovb
lods
cmp
fists
decb
mov
adc
mov
loopne
xor
add
bound
rclb
fwait
xor
test
nop
and
push
sbb
xchg
mov
and
loopne
xchg
mov
dec
mov
sbb
inc
push
clc
stc
add
adcb
cmp
adc
test
inc
das
mov
add
in
in
shlb
mov
iret
ljmp
je
add
aas
scas
mov
add
adc
and
pop
dec
fidivrl
pop
pop
mov
add
lods
insb
mov
jbe
dec
test
add
std
adc
pushl
je
pop
jne
sub
wrmsr
jo
push
imul
subl
jl
rclb
sarl
test
xlat
lock
sub
js
push
xor
or
or
xor
aas
test
push
in
bound
dec
pop
nop
or
xchg
jnp
push
push
and
jl
pusha
jmp
and
add
outsl
testl
dec
adc
push
call
inc
cmpb
add
xor
fiadds
ja
mov
nop
adcl
inc
ljmp
adc
dec
ffreep
hlt
add
push
jle
push
add
pusha
hlt
mov
data16
loope
loopne
test
mov
call
cs
add
mov
or
test
testb
fs
sbb
mov
add
ja
push
imul
sahf
jle
loopne
cmp
xabort
xchg
lods
adc
pop
jle
xchg
inc
mov
dec
outsb
loopne
inc
add
mov
adc
sub
hlt
pop
mov
and
mov
movsl
jmp
mov
mov
mov
ds
inc
pop
pusha
mov
mov
call
dec
out
jbe
int3
pop
cmp
testl
out
pop
ds
add
lahf
int
es
test
jne
pushf
add
xor
ret
in
test
mov
loop
sub
add
ret
cwtl
in
ljmp
and
fidivrl
mov
sub
andb
dec
andl
cmp
mov
dec
jg
add
ds
int
lock
jle
pop
or
push
jge,pt
push
arpl
xorb
lock
lods
add
call
shlb
outsb
rcl
ss
cwtl
mov
cld
inc
repz
scas
add
shll
dec
adc
aam
mov
clc
cld
add
imul
adc
aas
ja
rol
adc
in
lahf
push
pushf
pusha
add
push
adc
add
lea
pop
xchg
sub
lods
jge
shrb
xchg
jnp
pop
sub
add
cmpb
sahf
xlat
out
cmp
cmp
pusha
and
pop
movl
jl
pusha
pop
xchg
sub
scas
pop
add
in
ret
inc
and
scas
fadd
cs
dec
movsb
mov
clc
std
add
and
add
shr
outsl
stc
popa
popf
add
mov
mov
test
leave
nop
fmull
lcall
mov
or
mov
ret
aas
cmp
pushf
mov
pop
dec
jle
fiadds
add
movsb
or
xor
test
add
into
ja
or
lock
cwtl
nop
pop
adc
mov
dec
clc
test
add
daa
mov
in
jmp
jg
rclb
add
inc
jl
clc
jle
sbb
xchg
adc
ja
xor
cltd
addr16
fstl
negb
les
jle
fwait
jo
jmp
cmp
fists
xor
daa
push
ja
loop
fisubrs
add
jecxz
pop
xchg
les
sarl
mov
push
push
popf
int3
add
fisubrl
dec
bound
inc
enter
das
or
add
mov
push
mov
mov
data16
xlat
push
adc
movsb
sub
imul
outsl
inc
in
xchg
add
mov
subl
test
adc
mov
gs
inc
mov
sbb
cli
cmp
xor
xor
xchg
add
je
inc
lock
jae
add
lods
add
idivl
mov
jne
sarb
jnp
and
xchg
jbe
test
sbb
or
orb
sbb
pushf
adcl
and
sbb
int3
xor
mov
jge
cmc
xchg
xor
xchg
aad
mov
sbb
insl
lock
sar
inc
inc
lods
andb
jmp
testb
xchg
inc
addr16
xor
adc
jl
lods
and
call
and
sbb
ret
adc
adc
mov
rcl
jb
dec
jp
mov
cmpsb
adc
xorb
cmp
add
sbbl
int3
xor
mov
ficomps
add
lahf
leave
out
sbbb
adc
inc
jp
rclb
pop
jmp
lock
add
fidivrl
cmp
lods
rclb
and
imul
pusha
mov
mov
ja
jg
jmp
push
push
sarb
xchg
xor
aas
pushf
in
ljmp
push
and
pop
orb
mov
push
push
orl
push
sub
mov
shl
orb
pop
bound
addr16
sub
inc
jae
pop
push
push
insb
stos
add
dec
or
xor
dec
jo
adc
jg
pusha
push
add
fistps
pop
dec
stos
mov
mov
call
lds
mov
cmp
inc
pusha
push
sub
je
imul
xchg
rol
mov
xorl
and
mov
decl
mov
sbb
and
int3
inc
add
dec
xor
push
pushf
add
stos
insl
cmc
xor
mov
or
and
cmpb
repz
andl
je
lock
sbb
gs
xor
inc
mov
notl
stc
je
push
jmp
xchg
ds
mov
push
lods
int3
dec
or
sahf
lret
add
fdivl
sbb
daa
mov
mov
pop
lahf
rcrb
cltd
pop
into
rclb
imul
movsb
jno
sbb
xor
jnp
push
adc
into
push
aaa
ja
mov
pushw
int
push
lods
pusha
outsl
or
jecxz
push
ljmp
xchg
sub
xchg
in
nop
xor
sub
rorb
xor
int3
push
subb
pusha
add
push
and
jmp
adc
in
shll
fcompl
data16
xorl
inc
jg
add
push
fwait
mov
mov
fdivs
hlt
lret
fcomp
in
push
fwait
leave
pop
in
jmp
xorb
mov
faddl
cmp
inc
out
cmpsb
ja
sub
lock
sub
cli
iret
jnp
clc
mov
fidivs
pusha
cmp
test
cs
adcl
add
mov
test
push
dec
das
or
cmp
dec
popa
scas
icebp
adc
cld
add
sti
lock
xchg
pop
icebp
push
lods
lock
in
jg
jge
nop
add
int
push
test
scas
pop
cmp
or
iret
xchg
stc
or
sti
dec
insb
pop
cmp
pop
lock
jnp
and
dec
add
or
popf
aam
add
aad
sub
pop
test
xchg
mov
jnp
pop
les
add
jmp
jge
sbbl
sub
jge
adc
in
xchg
dec
clc
add
adc
push
popf
jns
popa
cmp
cmpb
jle
pusha
xor
push
nop
dec
lahf
lods
dec
mov
hlt
cmpsl
xchg
ja
xor
repz
in
or
inc
ds
mov
subl
imul
xchg
inc
insl
push
orb
fildll
mov
pusha
mov
ficomps
testl
mov
add
sub
inc
push
je
pusha
fdivrl
push
fadds
cmp
rolb
out
add
sbb
insb
jl
movsb
adc
xor
daa
mov
les
dec
sub
add
enter
xchg
dec
pushf
mov
push
fidivs
pop
fcoms
and
xor
fcompl
xor
sarb
sub
add
aad
or
movsl
cwtl
pop
add
mov
add
cmpsb
test
ss
les
rcr
mov
jecxz
pop
inc
test
mov
clc
je
xor
cwtl
ja
je
pop
repz
mov
push
ret
nop
or
mov
mov
push
xchg
mov
jno
add
push
sbb
pop
addb
out
fwait
in
cltd
mov
cmp
pop
cmpl
push
or
add
mov
jae
pop
daa
loop
decb
lock
add
ret
ja
in
pusha
flds
roll
popf
mov
mov
bound
xor
mov
add
or
insb
add
add
fmull
adc
inc
lahf
hlt
shll
fdivr
cli
jp
mov
data16
add
jnp
ss
push
movsb
pusha
dec
push
mov
jecxz
call
dec
das
jns
cmpsl
add
movsb
jecxz
add
mov
xor
test
dec
arpl
mov
push
and
sbb
mov
and
jns
cmp
rcr
dec
pop
jo
xchg
sbb
mov
andl
cmp
mov
jno
hlt
cwtl
inc
dec
imul
pop
jo
push
lahf
and
sbb
test
dec
jl
lods
mov
shll
jae
mov
adcl
push
je
jo
xchg
xchg
notl
adc
push
dec
xchg
jnp
enter
sub
add
xor
push
add
mov
sub
sbb
ljmp
mov
pop
fwait
loop
mov
cmp
rorb
add
loopne
adc
vcvtpd2dqy
dec
adc
nop
or
mov
aad
clc
mov
nop
test
sub
adcl
adcb
or
aam
adc
xchg
lret
add
icebp
mov
mov
aad
push
xlat
and
sbb
or
adc
mov
arpl
addl
pop
xchg
fadds
popa
nop
cmp
daa
jae
cltd
add
loopne
cmp
movb
test
lret
add
xor
sbb
jns
or
test
jmp
mov
sbb
fadds
iret
and
sub
push
insb
pop
ret
xchg
push
fsubs
movsl
std
cmpsl
mov
mov
mov
pusha
les
orl
scas
xor
ja
pop
rcrb
call
das
sub
add
add
idivl
jle
pusha
cmp
cmp
dec
mov
jl
and
fisubs
dec
in
xrelease
into
xlat
or
jecxz
mov
mov
in
pop
subl
pop
pop
rorl
add
jl
adc
mov
test
add
mov
sub
pop
add
inc
sbb
cli
mov
push
and
mov
mov
lock
dec
dec
nop
rclb
jge
pop
xchg
sub
xchg
test
add
xchg
add
pop
adc
insb
cmp
loopne
adc
push
out
pusha
dec
insl
insb
das
pop
push
in
inc
add
cmpsl
adc
lods
mov
pop
push
sahf
xchg
sbb
cmp
idivl
or
leave
jge
lods
sbb
dec
add
in
adc
sbb
lret
xchg
push
sub
nop
cmpsb
roll
xchg
insb
adc
outsb
xor
lods
add
add
mov
sbbl
cli
out
sub
inc
lock
pop
mov
rcrl
or
pop
jo
cld
inc
add
hlt
mov
into
xor
xlat
dec
aad
dec
sub
pop
mov
and
in
int3
push
xor
lock
sbbb
mov
ret
jbe
je
enter
mov
adc
or
pop
mov
movsb
insl
add
dec
mov
push
mov
mov
sbb
cwtl
push
pop
pop
mul
cmp
mov
loopne
std
adc
js
adc
imul
inc
or
pusha
cmp
jbe
pop
jl
cmp
cmp
dec
jecxz
mov
or
loopne
lock
pusha
repnz
or
cmc
pop
arpl
cli
sub
add
cld
rcrb
scas
sub
addb
lods
int3
pop
pop
cld
enter
mov
in
push
sbbb
pushw
pop
push
push
gs
push
addb
imul
inc
dec
or
addr16
add
test
aad
adc
in
inc
adc
shlb
pop
jnp
mov
sarb
adcl
mov
fs
lock
hlt
lods
or
dec
cmp
rorb
enter
fwait
sar
add
dec
pop
or
js
push
xor
add
xchg
mov
inc
jae
out
mov
or
fcmovne
sbb
pop
idivl
int
insb
lret
jg
jnp
push
or
cmpsl
sub
and
pusha
xchg
push
add
mov
gs
shll
sbb
push
popf
xchg
sbb
dec
pop
xor
rorb
and
shrb
pop
lock
cmp
xchg
jge
aam
ret
std
aad
push
xchg
or
push
call
inc
bound
jnp
int3
add
cmpsb
ljmp
jb
mov
mov
jae
sti
cld
xchg
sbb
out
cwtl
hlt
or
sbb
in
or
jg
cwtl
je
pop
std
sahf
or
out
std
mov
lds
sti
sub
jnp
or
fs
movsb
pop
dec
lds
sub
test
clc
lahf
adc
pop
call
out
pop
push
or
and
and
in
pop
and
lahf
push
in
andl
cmp
push
movsb
mov
shlb
cld
aam
inc
mov
cmc
inc
ffreep
in
das
cwtl
sbb
adc
xchg
adc
in
loopne
push
orb
push
out
cmp
and
aas
add
fs
lods
jl
add
add
idivl
pop
sbb
mov
lret
cltd
ret
add
scas
push
add
popf
fwait
mov
and
stos
adc
add
inc
adc
lods
fidivrl
or
lods
and
push
sbb
or
sub
jns
call
call
xchg
jbe
xor
or
add
mov
add
add
fmul
xchg
out
and
pop
or
xchg
xor
outsl
ret
dec
mov
add
mov
arpl
call
das
sub
das
leave
jge
xor
mov
inc
ljmp
xor
clc
sbb
jnp
and
in
jae
inc
jle
pusha
lods
add
int
dec
scas
rolb
mov
cwtl
loopne
mov
cmp
je
add
into
repnz
lds
jnp
pushf
push
loopne
sahf
les
xchg
fcmovb
sbbb
mov
add
jle
enter
and
inc
andl
inc
or
btr
pop
pop
popa
cs
out
sub
jbe
loope
sub
jo
test
lods
sarb
inc
mov
sbb
ljmp
sti
mov
hlt
jmp
mov
inc
add
sub
call
out
inc
jp
clc
call
fscale
out
divps
adc
loopne
jl
mov
lods
mov
leave
mov
xor
or
jnp
jne
sbb
pop
mov
and
pop
cltd
pop
push
les
jo
add
cmc
aam
sub
mov
shr
arpl
xchg
fmuls
inc
in
mov
mov
cmp
and
sub
pusha
add
aad
push
or
data16
and
enter
or
push
mov
cmpb
xchg
xorl
push
and
test
add
mov
xor
xor
enter
sbb
mov
add
insl
push
cmp
cmp
xor
mov
jbe
dec
jle
pusha
add
mov
je
and
dec
pop
shrl
jge
jo
rorl
add
dec
test
cld
xor
or
in
mov
cli
or
xchg
aaa
push
mov
jne
cmp
sbb
mov
cmp
dec
push
pop
add
lea
cmpsl
loopne
pop
and
repnz
adc
andl
sub
test
add
jl
sbb
addb
pop
adcl
test
pop
les
mov
mov
lock
pop
or
out
push
repz
mov
pop
dec
scas
mov
popf
dec
loop
mov
add
push
mov
mov
mov
add
sahf
add
jl
cwtl
pusha
es
jl
mov
cmp
scas
hlt
push
lret
mov
js
mov
das
add
and
fldenv
call
cs
push
add
add
dec
outsl
dec
loopne
outsl
fdivrl
xor
add
jg
cld
dec
aam
pop
imul
mov
jge
clc
cmp
and
div
mov
test
sbb
icebp
xor
push
jle
sar
imul
dec
scas
pushl
popa
push
inc
jo
mov
fwait
xor
jg
cmpsl
daa
das
aas
inc
jo
or
lahf
cld
gs
fadds
cmp
ds
add
sahf
idiv
ds
int
jo
jne
add
sbb
mov
xor
cmp
xchg
enter
inc
add
mov
mov
lods
insb
push
ss
insb
lret
dec
push
in
enter
cmpsl
nop
mov
leave
jno
xchg
and
pop
daa
pop
add
lods
outsw
std
mov
int3
ret
push
clc
arpl
xlat
mov
ja
rclb
pop
sti
test
mov
xor
or
jecxz
push
push
call
mov
pop
pop
and
testb
decl
cmp
jnp
pop
sub
fsubrs
mov
adc
in
pop
sub
mov
adc
shrb
jne
add
inc
addl
push
xlat
sbbb
pop
lret
int3
hlt
daa
ds
sbb
sar
stos
xor
test
pushl
imul
and
sti
sub
sbb
rorb
or
ja
je
adcb
jmp
inc
pop
jge
add
jne
jbe
sbb
in
ret
orb
sahf
das
lds
dec
adc
scas
dec
mov
in
inc
or
xchg
in
add
mov
jb
jecxz
loopne
data16
test
inc
xchg
repz
pop
push
cwtl
inc
push
outsb
fdivs
add
xchg
sbb
dec
std
je
cmp
cwtl
or
scas
outsl
rcrb
add
orl
sbb
and
fcomps
sub
test
push
jmp
adcb
cld
jbe
dec
add
iret
dec
in
jne
js
int3
or
lds
cmp
or
cmp
adc
loopne
enter
xchg
fwait
mov
ljmp
les
and
inc
sbb
pusha
insb
fwait
jmp
cwtl
mov
sbb
sti
push
nop
sub
or
cltd
xchg
psubusw
popa
dec
cmp
ror
addr16
mov
rorb
sub
xchg
fadds
xchg
cmp
xchg
out
jne
hlt
dec
push
sti
fcomps
test
pop
push
add
test
int
into
iret
pushl
dec
lods
dec
shlb
sbb
mov
sub
ficoms
lock
cmp
lret
out
xchg
fists
lods
xor
movsb
add
div
cwtl
pop
sub
insb
icebp
outsl
nop
or
nop
je
ljmp
xor
sbb
jle
shlb
movsl
decl
leave
inc
mov
lock
jb
inc
mov
dec
loopne
shrb
pushf
pop
cmpsl
dec
jmp
push
xor
insb
fisubrs
push
popf
lods
push
pop
mov
shll
andl
repz
imul
rcr
add
pop
inc
test
pop
div
mov
dec
mov
loopne
mov
pop
ffree
sbb
dec
ss
lods
fnstcw
pusha
jns
in
pop
pushf
mov
lcall
mov
add
cwtl
mov
xchg
int3
xor
xor
aaa
xor
push
cmp
xchg
lds
adcl
mov
dec
add
aas
mov
inc
fsubr
sub
mov
or
jbe
jne
cwtl
clc
mov
andl
leave
test
adc
iret
mov
cmpb
xor
pop
pusha
mov
fmull
jecxz
jl
sub
push
mov
in
inc
dec
xor
or
lock
arpl
cltd
add
mov
sub
jl
gs
push
pop
inc
test
mov
fwait
adc
dec
mov
mov
jne
xor
mov
push
inc
aaa
stos
fadds
and
mov
or
aad
cmp
pop
xlat
cwtl
test
orl
lds
ds
add
jecxz
jb
out
test
arpl
pop
insb
pop
orb
bnd
sgdtl
sub
aam
mov
scas
cmpb
mov
lds
std
mov
outsb
lods
int3
movlps
mov
or
xor
imul
fsubrl
pushf
jb
lret
add
jl
ljmp
pusha
jecxz
hlt
mov
xor
and
or
mov
rorb
or
lods
scas
cltd
mov
dec
xchg
push
sbb
cmc
cmp
inc
jno
shrl
scas
pop
mov
aad
jnp
test
pop
and
loop
std
pop
aas
mov
repz
push
ja
cmc
lgdtl
sub
push
subl
and
cmpsb
nop
add
stos
cmc
call
addr16
lea
sub
sti
xchg
jnp
enter
loope
lea
mov
arpl
movl
pop
jp
inc
int3
add
mov
sahf
inc
cmpl
loopne
sarb
in
loop
lds
or
fadds
push
sbb
rol
sub
dec
mov
mov
lods
insb
or
push
daa
fimull
jl
mov
pop
loopne
lods
aad
in
dec
push
or
adc
fwait
mov
ljmp
xor
sbb
loopne
jl
add
xchg
mov
aas
shrl
sub
xorb
fiaddl
out
adc
cmpsl
mov
testl
sub
inc
movsb
or
ffreep
int3
add
or
push
js
lahf
imul
dec
movsb
jmp
mov
inc
adc
xor
pop
push
ret
inc
es
loopne
fimuls
inc
jecxz
pop
loope
data16
test
adcb
jo
nop
add
repnz
adc
fsubrl
popa
sti
ret
cli
jo
daa
xchg
repz
add
and
outsl
jno
sub
jl
add
aaa
jg
sub
orl
push
and
inc
mov
fnop
add
loop
cmp
jle
inc
dec
add
pop
std
sbb
inc
fwait
into
and
add
jg
int3
enter
loopne
xchg
rsqrtps
or
sbb
jbe
add
fwait
jl
in
ljmp
xor
sub
lret
adc
and
mov
dec
cmpl
push
add
xor
add
jno
xchg
xchg
add
sarl
test
lods
insb
test
andb
mov
dec
subl
xchg
inc
xor
mov
add
filds
adc
and
int3
les
sub
lods
xchg
out
pusha
pop
push
mov
add
sbb
cmpsl
int
adcb
add
pushf
or
rclb
sbb
sbb
loopne
repz
lahf
fsub
push
xchg
sub
adc
in
and
mov
xlat
sbb
mov
dec
pop
mov
lret
add
imul
jnp
and
pop
lods
mov
push
add
and
sub
repnz
in
mov
xchg
cmp
out
mov
add
xor
push
scas
jnp
xchg
add
fisttps
sbb
sub
rclb
test
inc
cmp
mov
mulps
roll
adc
loopne
mov
mov
cmp
inc
push
fsubl
roll
int
jg
pop
jg
call
and
fadd
in
dec
inc
fwait
ror
inc
pop
and
imul
test
push
adc
nop
jbe
mov
add
mov
call
outsb
dec
mov
pop
lods
and
sbbl
sub
jae
pop
sbb
roll
mov
push
sub
push
nop
xor
xchg
and
cmp
pop
loope
jle
mov
sahf
movnti
fadds
lods
fisubl
xor
mov
push
adc
sbb
stc
xor
add
shlb
mov
aas
cmp
inc
cmp
xor
idivl
lret
in
cmp
or
jp,pt
pushf
add
imul
dec
jnp
fisttpll
adc
and
jl
sarb
xchg
ljmp
inc
adc
dec
daa
mov
xor
ret
add
mov
orb
adc
aas
cs
xor
add
stos
xor
nop
cli
mov
mov
xor
pop
jae
add
out
arpl
adcl
popf
add
int3
or
rorb
mov
mov
enter
dec
imul
pusha
pusha
lea
adc
dec
scas
sub
inc
xor
jbe
jl
fwait
adc
test
jmp
hlt
jmp
jo
mov
loopne
pop
sub
pushf
and
inc
test
pop
mov
daa
push
push
lds
mov
js
push
pop
mov
insb
push
and
inc
xchg
and
cmpsb
mov
enter
push
push
pop
inc
je
and
rcll
push
loopne
xor
cwtl
dec
mov
cmpb
adc
and
aas
dec
xchg
and
je
out
sti
xchg
and
jle
add
push
xchg
popa
dec
popf
mulb
pusha
cmp
push
pop
add
mov
rcl
into
add
mov
sub
pop
fbstp
cmp
push
xchg
js
mov
arpl
cmp
repnz
lock
aas
or
mov
int
pop
jne
add
or
fdivr
mov
adc
imul
cmp
les
cmpsb
cmp
xchg
jo
jge
pop
cmp
psubsb
out
pop
sbb
hlt
or
int3
mov
add
dec
lods
jnp
inc
in
hlt
das
and
dec
loopne
fcoml
test
jmp
jbe
xorb
sbb
inc
scas
nop
mov
dec
insl
mov
cld
add
enter
xchg
lcall
pop
movsl
fisttpll
sbb
outsl
aam
arpl
mov
inc
movsb
add
imul
sub
add
xchg
jmp
add
subb
hlt
pop
data16
sti
and
sub
mov
sub
push
cmp
es
add
pop
cwtl
jne
testb
sub
adc
sub
xor
or
or
xchg
cs
cmp
sub
pop
or
sub
test
cmp
mov
dec
xor
cmovs
lahf
xorb
adc
pop
add
mov
xchg
adc
or
cld
cld
loopne
ds
mov
pop
lcall
mov
rcrb
mov
shlb
test
icebp
push
arpl
aad
or
mov
mov
push
push
and
mov
outsb
sub
call
dec
pop
push
pop
arpl
push
mov
enter
cmpl
in
push
mov
in
push
or
sub
add
jns
pop
dec
inc
jns
xchg
mov
clc
pusha
add
pop
sub
data16
or
sub
outsl
dec
or
lods
lret
push
jne
sub
or
fstps
push
and
add
aad
mov
dec
andb
bound
mov
fcompl
loope
sub
jg
in
sbbb
xchg
pop
enter
das
jp
scas
and
lods
fxch
jle
in
ret
shlb
mov
mov
mov
call
mov
jo
ds
and
jo
data16
push
xor
jns
outsl
xor
jmp
lock
icebp
xor
jo
jne
cld
mov
fdivrs
xchg
test
les
popf
adc
sub
adc
shll
test
fwait
add
dec
mov
jb
or
std
ja
inc
add
stc
mov
adc
cwtl
push
add
aam
nop
pop
cwtl
mov
shl
push
ja
dec
cs
out
int3
xchg
jns
lods
xor
xchg
mov
ds
in
rclb
push
adc
lock
fcoml
jbe
jmp
cmpl
shll
insb
cmp
sahf
movsb
out
jge
scas
and
aas
stos
mov
add
gs
pop
pop
xor
jnp
lock
out
cwtl
call
loopne
aam
mov
pop
cs
xchg
sub
mov
hlt
mov
fwait
adc
jg
and
lret
sub
add
and
and
cs
push
sub
ret
pushf
fwait
data16
add
shl
loop
adc
aaa
jge
mov
add
adc
popf
sarb
add
jl
xor
scas
lret
das
mov
pusha
mov
xor
push
and
sbb
adc
testb
jge
mov
les
sbb
push
inc
or
outsb
aad
cld
subl
xlat
mov
test
scas
hlt
gs
das
in
push
dec
dec
jecxz
push
iret
popf
inc
or
mov
std
fsubl
clc
add
iret
scas
jb
mov
fadd
adcl
in
cs
stos
lahf
shl
cmpsb
push
or
rcrb
aam
sti
add
insl
push
add
xchg
or
mov
ljmp
popa
mull
inc
dec
and
orl
push
sub
out
and
lock
je
push
pop
mov
test
or
test
popf
xlat
xchg
cld
sub
xor
add
rorl
xadd
clc
add
xchg
push
lods
ror
movsb
nop
jl
add
fadd
and
xor
lock
lock
ja
loop
lock
mov
scas
stc
sub
push
xor
in
dec
jmp
mov
or
mov
cmpb
test
jle
loope
add
jns
ret
jns
bound
cmp
and
dec
in
lds
and
addl
clc
mov
push
sub
pop
test
addr16
call
fmuls
jle
push
daa
xor
sub
mov
xor
call
hlt
mov
nop
add
mov
ljmp
daa
test
push
adc
pop
inc
push
mov
test
loope
call
pop
mov
mov
pushf
enter
or
jae
sbb
mov
mov
sbbb
les
pop
in
xchg
ds
jbe
std
cld
mov
push
lock
xchg
enter
cli
mov
xchg
leave
les
lods
and
ret
adcb
cmpsb
xchg
pop
outsl
cs
cmp
pop
mov
push
je
or
push
jbe
popf
add
xchg
mov
test
inc
jno
xor
add
add
inc
loopne
adcb
sbb
pushf
pop
loope
add
das
nop
adcl
xchg
cld
rolb
pop
int
call
out
aad
mov
and
pusha
and
fsubl
sub
aam
lahf
daa
xchg
pusha
inc
jecxz
loop
in
mov
in
fsubrs
jl
dec
push
mov
xchg
pop
arpl
pop
pop
andl
les
xchg
clc
xlat
push
lods
nop
rcl
dec
pop
scas
movsb
dec
or
mov
rcr
lahf
xchg
fcompl
jecxz
add
addr16
pushf
call
dec
out
stc
sub
or
jl
push
mov
inc
pop
stc
roll
mov
dec
jbe
test
jne
icebp
test
mov
jns
test
bound
loopne
sbbl
cli
ja
nop
inc
lea
jg
aam
push
push
int3
jo
jl
je
xchg
out
and
adc
das
daa
cmp
and
mov
add
pop
out
fwait
pop
out
fcoml
cmp
jo
add
xchg
rcrl
push
sbbl
clc
xor
jae
or
pop
pop
in
cmc
and
jbe
push
test
xchg
pop
cmp
int
shr
jecxz
iret
int3
jl
pop
push
adc
or
cs
cmpl
jecxz
dec
test
stc
mov
cmp
rclb
adc
push
mov
ljmp
stc
pop
push
dec
add
into
cmp
jae
dec
jp
pusha
add
cltd
mov
adc
jp
aam
out
scas
stos
inc
rolb
xlat
inc
push
inc
or
jae
jl
pusha
icebp
push
push
shlb
out
lods
std
adc
pop
add
jno
or
dec
sbbb
push
sub
jmp
mov
andb
insl
cmpsb
ret
cmp
pop
enter
test
mov
dec
in
add
shll
ljmp
int3
addr16
adc
and
les
xlat
roll
cmp
pop
pop
xor
mov
lret
pusha
mov
lcall
cmp
sbb
lahf
xchg
adc
lock
cmp
push
jns
inc
test
cmpsl
add
jae
test
jno
add
sub
in
inc
ja
loopne
dec
pop
sub
sahf
cmpsb
jl
dec
mov
pop
shll
jge
cmp
ljmp
push
scas
repz
cmp
test
clc
or
out
divl
xor
sbb
jge
lock
sub
push
fisttps
aad
sub
testl
jnp,pn
pop
adc
pushf
out
nop
xchg
aam
shlb
dec
push
jl
pop
mov
dec
loop
leave
sbb
enter
push
mov
jg
sbb
xchg
push
aaa
arpl
cld
hlt
popf
incb
inc
das
lods
cmp
lret
and
aaa
pushf
pushf
mov
push
mov
and
nop
or
jae
adc
in
int3
loopne
add
mov
sahf
andl
and
pop
pop
test
adc
repz
add
enter
push
subb
popf
inc
mov
lods
lret
mov
or
pop
sbb
rolb
dec
sub
int3
push
jbe
mov
mov
shlb
jle
or
in
cmpsb
pop
sbb
loopne
aaa
pop
fcmovbe
mov
pop
lods
ds
mov
add
insl
cli
push
add
ljmp
sub
sbbl
pop
add
add
adc
jecxz
add
jo
int
or
cld
push
andb
in
sub
pop
lret
inc
and
addl
pop
into
idivb
dec
jl
mov
lods
scas
shr
cwtl
dec
add
pextrw
cmp
mov
or
aad
mov
cmp
and
adc
push
lahf
cmp
push
sbb
dec
int
mov
stc
mov
lcall
nop
add
mov
test
jns
sub
inc
jl
loop
jecxz
adc
pop
add
add
in
les
sbb
dec
pusha
or
add
pop
das
mov
xor
xchg
shr
add
sbb
sub
jp
cwtl
fdiv
and
aaa
sbb
push
or
loopne
cmp
lods
mov
add
mov
arpl
mov
ss
int3
mov
sub
test
add
fisttpl
mov
pusha
mov
push
ret
inc
add
sbb
adc
and
cli
pusha
mov
icebp
and
pop
xlat
data16
jbe
jnp
in
pop
dec
sub
repz
ficompl
enter
test
jmp
or
jg
fs
lcall
xor
sub
or
sarl
mov
and
pop
les
nop
cs
mov
ret
imul
clc
dec
push
xchg
je
push
ret
jl
cmp
lods
xchg
mov
movsl
mov
jne
dec
mov
xor
mov
inc
rcrl
xchg
dec
in
sbb
xor
icebp
xor
xchg
in
mov
jle
mov
and
xor
cmp
inc
out
jne
push
add
mov
test
mov
xor
inc
insb
dec
mov
push
out
nop
or
jb
js
mov
jno
pop
jl
shr
push
std
aam
aas
mov
call
addr16
aam
cmp
fdivl
adc
push
les
cmp
mov
inc
test
jo
mov
fidivl
mov
cmc
xor
clc
and
addr16
imull
adcb
out
fiaddl
push
and
jbe
adc
cld
mov
imul
jmp
xor
sbb
xchg
jo
aas
ret
fwait
mov
jmp
enter
popa
scas
inc
push
add
or
push
scas
int3
cmp
or
leave
movsb
jg
insb
add
addb
mov
ds
int
sub
das
inc
pop
fs
push
and
inc
dec
add
into
pop
nop
fs
into
aam
xchg
pop
je
jl
arpl
sbb
jmp
inc
mov
lock
add
or
mov
rol
dec
cwtl
repz
mov
adc
jecxz
pusha
and
icebp
movsl
xor
sbb
into
test
fadds
fadds
test
dec
jecxz
pop
mov
push
inc
shrl
mov
je
out
js
rorb
mov
and
insb
cmp
rol
jl
pop
jg
call
pop
loope
and
ja
mov
cmp
mov
xchg
rol
jmp
mov
push
lds
pusha
hlt
xchg
daa
pop
push
add
adc
imul
pop
add
insb
addl
fadds
xchg
dec
inc
inc
das
push
cld
aam
add
xor
in
mov
fists
sbb
mov
cmp
lcall
jp
cwtl
daa
dec
lret
test
mov
test
aaa
and
mov
sbb
fdivrp
add
stos
pop
dec
mov
in
mov
dec
pop
jg
mov
gs
mov
data16
cmp
add
xchg
stos
gs
aam
inc
cmp
ljmp
inc
xchg
mov
sbb
cmc
daa
push
out
push
mov
adc
scas
mov
add
add
sahf
je
into
xchg
mov
mov
add
cmpsb
mov
cld
pop
lret
wrmsr
and
xor
xchg
insb
or
or
inc
push
cmpsl
loopne
aas
ja
fucomip
sub
xchg
iret
rcll
mov
aaa
aam
pushf
cmp
std
jl
fwait
or
jno
mov
pop
test
sub
daa
adc
clc
mov
dec
lea
sbb
jne
jg
pushf
xchg
adc
and
add
mov
push
push
shll
lock
xor
mov
sti
int3
inc
mov
push
jge
add
push
mov
cs
leave
add
jle
xor
popa
clc
fbld
out
jl
loopne
add
dec
adc
and
pcmpgtd
inc
shlb
pop
test
jecxz
add
and
mov
or
push
outsb
dec
es
mov
adc
clc
and
arpl
jnp
xor
mov
mov
lret
ljmp
enter
xchg
xchg
stos
mov
mov
pop
xorb
lock
add
dec
loopne
add
cmpl
xor
dec
lock
je
and
cmp
ret
je
fadds
cli
xor
popa
adc
inc
cld
pusha
fsub
push
cmc
in
cmp
in
pop
andb
and
pop
mov
mov
rolb
and
pusha
sahf
aaa
loope
cmp
lret
lret
jmp
sub
pushf
jae
xor
pop
pusha
or
jg
stc
mov
cmc
pop
inc
jl
cmp
add
cmp
or
call
jnp
dec
in
packssdw
ljmp
fcomi
sub
nop
pop
xor
cmpsb
inc
sarl
pusha
ret
into
js
cltd
sbb
popa
cmp
aam
les
loopne
jb
adc
loope
or
pop
das
mov
adcb
stos
iret
adc
mov
add
jle
subb
je
outsl
or
out
das
ja
pop
popa
lret
ret
dec
scas
popa
xchg
add
xchg
in
aad
cmp
lahf
ret
loope
je
shl
push
insl
adc
mov
jb
lds
scas
xor
or
or
fiaddl
insb
cmpb
fsubs
sub
aad
xor
or
adcb
and
jo
jl
addb
movsb
jge
jno
mulb
jl
add
jnp
cmp
jne
push
pop
inc
call
mov
xlat
adc
testl
mov
orb
das
push
les
ljmp
add
sbb
cmpsb
fadds
sub
jl
test
adc
fcoml
inc
das
sub
lahf
sbb
cltd
or
loop
dec
clc
lret
jae
mov
add
mov
inc
cwtl
xor
loop
out
cmp
jns
lods
or
push
dec
lods
and
arpl
mov
xor
or
mov
pop
dec
clc
je
andb
rcll
fsubrs
ds
jge
stos
popa
mov
aas
mov
and
mov
lods
jns
outsl
test
shlb
mov
sbb
jp
pusha
jmp
xlat
mov
ficompl
jl
add
inc
je
xor
pop
das
mov
ds
in
mov
mov
mov
adc
sub
jl
cmp
clc
inc
jl
rolb
cmpsb
pop
rorb
ds
imul
test
ljmp
mov
adc
pop
cli
outsb
xor
orl
or
jecxz
jecxz
mov
inc
sub
idivb
clc
scas
or
sub
lock
mov
push
pusha
imul
push
jmp
jle
in
cmp
or
mov
pop
jo
sbb
shrl
xchg
inc
xor
shrl
arpl
shll
mov
push
jl
adc
cmp
ret
cmp
sub
adc
or
test
push
lock
pop
fldl
sbb
fisttpll
xor
notl
pop
pop
out
pusha
loopne
pop
lret
adc
cmpb
xchg
pop
xor
addr16
add
mov
push
mov
add
int3
and
or
hlt
mov
sbb
and
aam
add
out
pop
in
dec
jo
jne
aam
loopne
enter
das
insl
adcl
nop
add
repnz
xchg
int3
pushf
add
pop
loope
pop
xchg
mov
roll
jg
push
loopne
jl
daa
jns
cld
cmp
push
insb
adc
pusha
stos
addr16
int3
loop
dec
or
scas
jl
leave
cmp
push
leave
inc
dec
arpl
in
cmpsb
subb
jb
imul
loopne
mov
jg
mov
jb
popa
pusha
lods
sbb
adc
dec
add
adc
cltd
add
add
mov
nop
cld
jle
sub
iret
sti
jge
test
popa
test
and
nop
roll
movsl
leave
loopne
xorl
and
add
hlt
je
cwtl
je
pop
pop
fwait
adc
add
dec
popf
out
add
daa
cmp
adc
cli
xchg
push
in
loopne
adc
imull
jecxz
pop
lock
mov
adc
movsb
shlb
push
push
pop
dec
xchg
mov
mov
and
lea
lea
stos
mov
and
in
and
insl
mov
add
iret
clc
outsb
ja
test
mov
iret
cs
xor
lods
nop
sub
sbb
lea
fldenv
adc
hlt
dec
out
sub
mov
test
cmp
leave
xlat
insl
push
cmc
xor
mov
xchg
mov
fdivrs
mov
pop
xor
mov
shr
das
dec
scas
icebp
xchg
popa
lcall
pop
or
or
inc
pop
xchg
ja
adc
lods
lds
mov
mov
or
cmpsb
adc
lds
sbb
fs
std
xchg
ljmp
sub
loopne
leave
jmp
lods
jnp
mov
or
lahf
jbe
pop
push
or
scas
mov
mov
xor
popa
adc
or
notb
das
ds
out
std
jo
inc
je
clc
dec
ja,pn
in
cmp
jne
pop
pop
pop
adc
jg
lods
lock
jle
push
lock
lods
call
push
dec
lods
or
mov
jnp
xchg
and
xchg
in
add
mov
pushf
loopne
scas
mov
jle
lock
fucomp
adc
pop
mov
add
xlat
je
pushf
fistpl
lock
or
mov
jnp
and
dec
roll
dec
sub
cmc
add
sub
jno
jmp
push
stc
dec
inc
not
cmpl
subb
jg
fsubrs
and
ficoms
lea
insl
mulb
pop
decl
test
xorl
imul
mov
aad
pop
cmp
test
rcrb
sbb
pop
push
push
test
adc
add
or
rcl
andl
clc
popa
outsl
adc
mov
push
popa
das
xlat
fsub
scas
and
clc
clc
loopne
jae
mov
mov
pushf
xchg
sbb
pusha
push
adcl
loopne
mov
and
jge
pusha
lahf
xchg
sbb
adc
leave
push
cwtl
pop
adc
enter
adc
dec
test
pop
pop
sti
lret
inc
pusha
dec
ljmp
stos
xor
stc
adc
aad
mov
add
insb
in
fdiv
add
shll
int3
xor
mov
jbe
jl
lods
test
shr
and
add
inc
push
cld
clc
mov
jmp
xchg
pop
lods
dec
add
sbbl
adc
mov
add
push
es
xchg
pop
insb
in
js
inc
in
clc
cmp
lods
and
dec
rcrb
arpl
add
dec
push
add
std
jp
lret
jbe
les
push
sbb
add
add
dec
andb
in
imul
insb
cmpsb
hlt
sub
rorb
inc
pop
les
xchg
jge
cmp
dec
dec
xor
cmp
test
and
psrad
jmp
fs
icebp
ds
add
call
add
jmp
inc
xchg
fisttpll
or
loopne
sbbb
clc
ss
cltd
mov
or
lock
data16
push
pop
adc
adc
out
add
ljmp
mov
cmp
and
shrl
cld
adc
jmp
dec
jo
lds
mov
inc
mov
outsl
jmp
dec
ljmp
jnp
dec
test
xchg
or
jg
add
outsl
mov
cmp
add
lods
push
xchg
stos
mov
pop
or
sbb
shl
xchg
repnz
jl
mov
mov
dec
sbb
aam
pusha
jae
sub
cmp
mov
pushf
mov
cmc
add
aaa
jg
mov
mov
test
mull
les
adc
sub
lahf
push
movsb
popa
lret
add
or
mov
fs
fsubrl
cld
lcall
push
xchg
fbstp
xchg
push
in
or
push
stos
add
jmp
xor
add
cmp
jg
js
aas
cmp
test
mov
pusha
mov
mov
scas
subl
aam
and
orb
dec
mov
fucomi
cmp
cmp
cs
fwait
xchg
sbb
daa
repz
jl
les
fsubl
fdivrl
jmp
push
rolb
jl
and
sbbl
cmpxchg
pop
dec
and
jl
add
jbe
les
int
stc
cmp
cmpsl
movsb
sub
rolb
mov
mov
mov
test
addl
push
mov
mov
cmp
xor
mov
jg
mov
dec
adc
lock
jno
popa
mov
cwtl
dec
and
filds
fcompl
mov
jne
add
jecxz
or
orb
cmc
lea
insb
or
cmp
push
aad
mov
daa
pop
je
pusha
dec
mov
adc
add
mov
mov
outsb
loopne
sbb
imul
outsb
mov
add
jmp
adc
movsb
stc
repnz
vpunpcklqdq
or
daa
int3
jnp
movsb
xor
jnp
hlt
mov
ja
jle
fcoml
pop
ljmp
xor
sarl
fimull
or
lock
adc
mov
jp
mov
scas
cmpsb
loop
shll
mov
ss
mov
popa
push
test
in
movsb
or
push
jg
cmp
jne
cs
ss
cwtl
fdivr
mov
mov
mov
dec
in
icebp
or
aaa
pop
js
std
or
shrl
pmaddwd
fnstcw
lcall
mov
fcom
inc
jne
dec
cmp
mov
jle
add
icebp
jp
mov
dec
leave
dec
or
movsb
or
mov
test
arpl
jns
jbe
data16
andb
jp
pop
push
inc
adc
and
int3
call
push
dec
stos
add
cmp
jns
sbb
adc
sbb
lea
int3
orb
or
lcall
pop
push
ljmp
add
hlt
jmp
pop
call
lock
arpl
add
xorl
xlat
pop
pop
pop
in
adc
arpl
mov
pop
sbbb
shll
mov
push
sub
pushf
sub
aam
push
sbb
or
das
daa
fsubl
sarb
pusha
roll
inc
push
push
repz
mov
dec
and
int
mov
dec
aas
xor
adcl
int3
jo
dec
inc
sbbl
mov
loope
pop
cmp
mov
out
add
jle
push
pop
jno
lods
mov
pushf
fwait
dec
pop
adc
pop
and
jl
add
sbb
pop
int3
int3
pslld
outsl
xchg
jmp
mov
dec
stc
nop
sbbb
xchg
xchg
outsl
loopne
test
sub
inc
pop
nop
loop
push
inc
lret
sarl
and
push
ja
cld
shl
push
and
pop
lahf
add
dec
imul
cld
pop
lds
aas
jp
and
pop
aam
clc
inc
sub
cwtl
outsb
jmp
cmpsl
inc
jle
mov
xchg
or
jne
push
mov
add
jl
int3
mov
sahf
mov
push
sub
pushf
cmp
add
lcall
fldcw
lods
fcompl
jae
dec
sahf
mov
rolb
mov
cmc
pop
lock
add
or
mov
inc
xchg
cmp
dec
jl
mov
ds
aam
andb
into
adc
add
xchg
xchg
push
cmc
xor
mov
pop
clc
pop
in
test
lcall
les
mov
in
lock
roll
lock
movswl
cwtl
push
or
mov
adcb
lret
inc
mov
daa
xlat
jns
lds
add
sub
aaa
clc
clc
loopne
inc
rolb
fimull
inc
adc
jne
adc
sub
dec
ds
jnp
add
adc
sub
outsb
jecxz
test
bound
mov
fwait
push
cmp
push
addr16
stos
mov
test
clc
cwtl
rol
mov
push
and
push
jno
lahf
inc
sbb
mov
data16
add
xchg
andb
mov
in
rclb
xor
fsubl
fistl
dec
mov
cld
push
repnz
call
xor
loopne
leave
push
ret
imul
hlt
cwtl
add
jne
mov
stos
cwtl
add
or
cmp
icebp
xor
inc
test
ds
pop
or
nop
insb
inc
shl
shl
pop
adc
lods
scas
jb
movb
jl
imulb
sti
mov
pop
push
mov
mov
jno
addb
dec
ss
pop
jns
subb
ret
sub
es
leave
mov
invlpg
test
add
rolb
mov
aaa
out
mov
add
sbb
dec
add
xorl
loopne
push
or
jg
int3
ds
sub
and
xchg
push
add
or
into
adc
xchg
jne
hlt
flds
sub
arpl
add
jmp
mov
add
and
push
ficomps
daa
cld
mov
in
enter
push
inc
lea
shrb
fisubl
or
scas
push
or
and
movsb
xor
mov
push
pusha
and
mov
and
orb
inc
jg
loopne
or
aam
stc
cmc
pushf
mov
addr16
xor
pop
stos
lcall
das
mov
inc
cmpsl
popa
hlt
test
pop
cmp
adc
mov
sub
clc
ss
ds
sub
repz
les
or
loopne
lcall
mov
shr
mov
imul
sub
jns
pop
mov
fsubrl
mov
mov
adcl
sub
cmpsl
xor
daa
popf
data16
lds
loopne
xchg
jp
jl
add
push
sbb
js
pop
test
push
xchg
out
xor
pop
mov
orl
scas
fldenv
shlb
mov
or
lods
loopne
sbb
cmp
add
ret
inc
inc
pop
das
mov
movlps
stos
cwtl
dec
adc
cmp
xchg
arpl
add
and
adc
cwtl
nop
mov
rolb
push
xchg
cli
mov
scas
imul
nop
jmp
jne
scas
xor
addr16
add
cld
out
pop
or
cmc
lahf
sbb
mov
inc
sarb
adc
stos
mov
aas
mov
pop
test
adc
ret
mov
add
add
loopne
pushf
lods
or
in
andl
xor
dec
stc
nop
add
pop
rclb
cmpsb
ds
rclb
popa
stos
xor
imul
or
pop
add
pop
xchg
xor
clc
inc
add
push
dec
ret
aas
pop
mov
xchg
lahf
pop
pop
and
aaa
daa
dec
popf
fldcw
movsb
mov
test
call
addr16
int3
and
push
and
xchg
jno
popa
push
xlat
jbe
out
cmp
jmp
fnstenv
pop
mov
push
adc
jl
xor
add
inc
pop
mov
ss
jecxz
ja
jge
rclb
mov
je
push
pcmpeqd
scas
int3
or
sahf
push
cwtl
add
mov
and
pop
add
imul
sub
out
jecxz
cmp
mull
cmp
inc
add
fnstcw
pop
xlat
icebp
loope
faddl
adc
lock
fdivrs
sbb
pop
aas
jmp
sub
imul
inc
pop
push
ja
xor
int
cmpsl
inc
imul
mov
arpl
push
jb
lret
test
jge
call
jne
xor
scas
inc
push
dec
rcll
jo
xor
sub
sub
mov
cmpsb
fisttpl
inc
jmp
mov
popa
push
js
lcall
imul
xor
sub
inc
xor
mov
and
testb
and
pop
jecxz
mov
gs
imul
push
mov
test
mov
lahf
dec
jbe
xor
cmp
adc
cmp
imul
add
sub
inc
test
ud0
pop
pop
pushf
or
cli
jg
mov
cwtl
and
add
push
mov
mov
call
cld
inc
arpl
or
cmp
and
jle
ret
mov
cwtl
jbe
leave
inc
clc
mov
and
or
mov
mov
test
pop
mov
in
mov
faddl
jno
nop
loopne
jg
xor
addl
mov
inc
and
and
scas
adcb
fbstp
cld
push
jb
xchg
jle
push
idiv
add
roll
cmp
pop
mov
mov
cmp
andb
mov
xchg
int3
inc
in
div
inc
insb
ja
cmp
pop
bound
shrl
push
sub
adc
les
movsb
push
leave
mov
add
and
shlb
pop
inc
xchg
outsb
add
sbb
push
aam
cmp
sub
jne
mov
das
or
addl
mov
aas
xor
in
out
and
outsb
notl
inc
test
in
test
stc
clc
push
enter
sub
xor
xlat
inc
in
repz
hlt
btr
fidivrs
add
jns
or
mov
pop
add
cmp
das
inc
stos
jge
xchg
popa
rep
stc
fcomps
mov
lock
inc
mov
pop
inc
mov
imul
add
rorl
xor
cmpsb
gs
inc
mov
xor
jo
cld
sub
jbe
dec
mov
xchg
lods
sar
cmp
sub
sub
xor
insb
jno
enter
sarl
pop
fnstenv
mov
push
dec
mov
and
add
jns
into
idivb
sbb
mov
pop
xchg
and
loopne
repnz
xchg
shlb
push
sub
shl
outsl
add
push
je
jle
mov
sub
fsubrs
push
xchg
test
scas
add
jp
mov
popl
xor
sbb
mov
ljmp
xor
mov
pop
nop
stos
xorb
in
push
clc
arpl
lock
test
inc
andb
jns
or
cs
cmp
or
adc
or
in
fdivs
xor
cmp
rorb
sub
pop
sub
add
daa
inc
ja
rcrb
xchg
mov
mov
mov
cmpsl
sbb
cmp
sarl
xchg
seto
lret
adc
and
cwtl
test
ret
add
faddp
xchg
mov
sub
test
xor
je
pop
addr16
push
jnp
add
ds
test
in
jae
int3
pop
push
fstl
fdivr
fimuls
shlb
adcb
test
and
pusha
movsl
xor
out
bound
sahf
push
dec
fstpt
sub
stos
or
mov
outsb
je
cs
mov
or
mov
call
inc
loopne
sbb
or
popa
jl
add
sub
adc
test
movsb
add
cmp
xchg
mov
sub
sti
inc
cs
mov
ret
ss
jbe
gs
pop
cmp
ds
lods
sub
xorb
andl
repnz
in
das
notb
xchg
insb
xchg
stos
scas
or
and
xor
cmp
adc
cmpsb
nop
add
push
adc
inc
int3
testb
ljmp
add
negb
or
iret
mov
aad
cld
pop
ret
gs
pop
xchg
dec
add
aad
mov
push
rcrb
in
movsl
sub
xchg
inc
out
jbe
outsl
xorb
pop
mov
pop
out
add
or
lock
mov
cmp
enter
bound
and
mov
test
das
pop
and
xlat
and
jge
rorl
jle
or
lods
and
xor
ljmp
addb
mov
mov
and
mov
jno
cmp
js
rolb
sub
iret
xchg
js
and
jl
add
or
mov
ss
jl
shl
sbb
test
fiadds
push
pushf
lock
mov
sbb
xchg
mov
hlt
ret
jns
shl
shrl
fstl
sub
add
sub
subb
scas
out
pop
cmp
incl
sbb
sub
addb
loopne
cmp
dec
loope
shr
pop
mov
outsl
call
push
lcall
nop
imul
popf
clc
mov
xor
in
inc
and
mov
sbb
shll
push
ljmp
int3
lret
dec
dec
loopne
xchg
sub
sti
push
test
mov
mov
out
xor
or
lods
cmp
cld
pop
dec
mov
mull
jmp
cld
sbb
ss
dec
xchg
das
clc
mov
cld
cmp
sub
mov
fs
test
ret
mov
test
std
je
push
shr
sbb
or
test
clc
scas
mov
out
mov
sub
jae
pop
lods
push
add
ficoms
and
mov
adc
adc
pushf
iret
adc
int3
sub
add
dec
mov
adc
out
add
push
jle
xchg
inc
jo
and
adc
add
and
add
push
jne
pop
in
popf
dec
cs
je
mov
cld
std
imul
cmp
stos
pusha
sub
xor
xor
xchg
lods
mov
pop
and
jne
int3
addb
ret
mulb
dec
lods
inc
rcrb
mov
push
insb
cmp
add
daa
std
mov
pusha
jle
mov
test
sub
mov
pop
push
pushf
add
push
sbb
jae
lods
dec
ret
clc
adc
mov
movsb
ljmp
aaa
sub
pop
jnp
imul
push
mov
imul
pop
sbb
rolb
jb
fs
mov
add
xchg
mov
lret
cmpsb
je
or
xchg
rorb
fstl
jp
pop
mov
inc
test
mov
hlt
sbb
fiaddl
inc
fwait
lahf
xor
jl
shl
sbb
sub
test
lret
xlat
adc
xorl
or
lods
and
dec
add
sub
pop
cwtl
imul
mov
stc
xor
mov
insb
add
sub
imul
jb
ja
cmp
lods
pushf
cmpsl
rcrl
daa
push
lahf
stc
jl
nop
xchg
ret
mov
loopne
fbstp
out
call
add
xlat
leave
lock
xchg
sub
sub
mov
cwtl
fwait
xor
call
out
sub
add
xor
pop
push
clc
xchg
sub
and
in
cli
jne,pn
push
addr16
shrb
or
adc
mov
fstpl
shrb
push
rcl
inc
loopne
pop
into
push
aam
jo
jbe
loope
call
mov
push
xorb
subb
scas
lret
mov
mov
adc
or
arpl
orl
loope
cmp
data16
jle
hlt
pop
push
cmpl
or
jne
mov
add
clc
jae
mov
aad
pop
xchg
fildl
sub
add
in
cltd
rcrl
addr16
lods
leave
clc
test
addl
fdivr
addr16
inc
jle
sub
cmp
repnz
gs
mov
adc
nop
dec
ds
jl
insb
popa
mov
mov
inc
adc
fstl
mov
imul
pop
inc
pop
cmp
jo
daa
and
sub
dec
pop
jno
cmc
push
dec
out
add
mov
sub
pop
das
lahf
in
or
enter
pusha
in
out
xchg
daa
lret
inc
addb
pop
mov
fbstp
or
inc
mov
sbb
sbb
fsubs
xor
clc
jb
imul
add
xchg
cmp
shr
add
push
int
out
sub
and
adc
sbb
test
dec
lret
daa
inc
adcb
loopne
push
inc
sti
xchg
add
insb
jl
nop
add
push
adc
aam
imulb
and
jmp
cmp
lods
mov
sub
orl
rorb
mov
fstps
out
add
ljmp
test
inc
xor
rcr
jae
mov
int3
enter
xor
and
fs
inc
mov
push
inc
cmp
xchg
outsb
adc
pusha
cwtl
cmp
push
xchg
mov
mov
push
sarb
int3
cld
sbb
out
out
add
sub
jbe
les
insb
lret
enter
xchg
cmp
and
das
mov
and
ja
pop
vmwrite
incb
lods
int3
leave
cmp
je,pn
add
mov
les
negb
mov
inc
sbb
and
notl
jl
xor
jne
inc
daa
mov
mov
mov
or
cwtl
adc
add
xor
pop
jl
jo
add
addr16
sti
jge
dec
test
cmc
adcb
sti
jmp
cltd
jl
adc
cmp
mov
mov
incb
cmp
xor
loop
adc
and
cli
xchg
lret
mov
pusha
ret
mov
test
sbb
into
inc
jge
xchg
les
insl
or
dec
sbb
xchg
jg
sbb
cmp
fsubrl
icebp
imul
lahf
cwtl
inc
jp
or
push
sbb
jge
jmp
addr16
sub
mov
add
cli
incb
sbb
xlat
dec
cwtl
add
dec
scas
mov
push
addr16
or
lea
call
ljmp
adc
nop
movsb
call
mov
nop
pop
dec
enter
dec
ret
adc
add
jbe
scas
rorb
scas
xor
test
aas
mov
sbb
xor
pop
push
bound
icebp
mov
mov
in
and
outsl
and
jge
pusha
jo
js
dec
and
in
sbb
in
push
dec
lods
cmpb
mov
pop
popf
in
add
dec
xchg
orl
jge
xor
pop
add
pop
test
sbb
lret
inc
fs
mov
adc
cmp
push
adc
pop
xchg
push
clc
pop
push
cmp
mov
stos
sub
int
decl
icebp
xor
pushf
and
hlt
nop
mov
call
or
jne
xor
sub
enter
adc
pop
ret
scas
repnz
imul
sbb
sub
mov
sbb
or
mov
test
call
dec
push
cmpl
cld
fucomp
xor
fisubl
stos
and
inc
and
adc
in
and
call
push
das
popf
jge
pusha
dec
and
jl
add
clc
rorb
and
popa
int3
pop
mov
cmp
add
lret
loopne
dec
dec
dec
sti
sub
and
mov
std
fninit
mov
push
adc
pop
lahf
push
ret
fistpll
xchg
xchg
mov
cmp
sub
jg
pusha
jae
repz
pop
sub
pop
je
xchg
lds
or
jle
mov
cmp
or
outsl
clc
mov
push
sbb
and
cmpb
cmp
pop
pop
jl
pushf
std
or
push
mov
stc
and
ja
in
pop
sbb
push
mov
lret
pop
jae
mov
and
es
fsubrl
dec
lcall
sahf
sbb
loopne
sarb
mov
andb
mov
lock
add
pop
jb
xorl
jl
jns
or
rep
jns
fdivl
add
xor
mov
pop
pop
test
and
clc
adc
js
adc
jle
mov
add
enter
or
pop
sbb
outsb
fnstenv
cmp
jbe
movsb
or
test
leave
cmp
xchg
fcoml
rol
xchg
je
fmul
lock
pusha
inc
loop
add
ds
test
mov
adc
dec
lahf
out
sub
adcl
in
mov
adc
test
decl
movsb
orb
mov
test
mov
aad
inc
shrb
sbb
or
fidivrl
data16
in
imul
jecxz
in
xlat
lods
pop
push
xor
pop
xor
andl
xor
sub
gs
or
scas
cld
add
and
jo
mov
add
int3
pushf
int3
adc
xchg
pop
xor
lcall
sub
faddl
add
pop
jle
inc
and
stos
jne
sbb
and
sub
push
mov
std
or
or
daa
dec
cmp
xor
popf
scas
or
movsb
and
or
loope
jle
pop
mov
dec
iret
xchg
push
jnp
jle
pop
adc
repz
negl
ljmp
sub
mov
out
add
fdivrs
lds
jecxz
xchg
pop
mov
sbb
add
mov
jg
add
in
xor
sahf
sbb
sbb
pop
idiv
xchg
adc
andb
or
mov
shll
push
rcr
push
icebp
dec
repz
lcall
test
sub
jo
jbe
pushl
xchg
pop
and
adc
in
add
jnp
les
js
xor
xor
pusha
mov
dec
ja
rcll
push
aam
rorb
in
and
mov
add
mov
pusha
xchg
ret
imul
lcall
mov
bound
xlat
or
push
mov
stos
or
mov
ret
push
pop
pop
add
jg
mov
jns
shl
pop
and
cltd
mov
leave
inc
jle
jo
hlt
cmc
or
add
sbb
jg
adc
lods
mov
aad
scas
insb
les
outsb
ret
jns
lret
dec
loope
mov
ja
test
push
sub
sbb
lods
leave
nop
cmpsb
insb
push
adc
gs
xchg
add
in
xor
xor
pop
testl
lock
mov
sbb
push
shrl
jnp
xorb
daa
adc
jmp
xchg
add
filds
jns
daa
jecxz
inc
rolb
jae
ljmp
int3
rol
sub
pop
ret
push
xor
push
dec
cwtl
sbb
pop
jl
int
sub
and
xchg
test
hlt
inc
xor
mov
mov
daa
jns
roll
lahf
sbb
and
leave
inc
das
data16
dec
push
xorb
inc
loope
out
pusha
out
cmc
dec
repz
add
mov
adcb
andb
inc
fxtract
stos
bnd
jbe
out
add
inc
and
fsubs
out
or
cmpsb
jl
pop
add
je
pop
sub
std
push
dec
inc
fcomip
adc
add
push
mov
divl
les
xor
fldl
mov
movsb
clc
enter
adc
cmpsl
mov
mov
pop
stc
jp
in
aas
mov
pusha
pop
inc
shll
or
add
jb
xor
xchg
andb
es
shlb
in
push
daa
imul
fcoms
push
mov
or
in
add
repz
push
mov
add
insl
pusha
shlb
aam
insb
outsb
inc
push
and
lods
fbld
xchg
sbb
outsb
push
jo
ret
pusha
shlb
xor
fs
stos
dec
call
jl
daa
ljmp
or
dec
enter
gs
fldcw
cmp
sbb
mov
pusha
cmp
in
sub
sarb
das
lock
pusha
sbb
push
jo
cs
adc
pushf
cmpsb
sbb
jg
add
popf
xchg
xchg
mov
inc
dec
scas
add
lds
mov
push
cmp
or
mov
add
inc
movsb
lds
push
sub
sub
cmp
cs
sbb
fwait
inc
cmp
xor
shrb
jl
rcll
xor
sub
dec
pop
loopne
ds
fs
xor
or
lock
jle
pop
negb
mov
mov
mov
lret
shll
pop
pop
inc
je
mov
scas
fstpl
loop
xorb
in
iret
or
test
lahf
dec
add
pmaxsw
xchg
les
adc
clc
pop
mov
shrb
rorl
or
scas
pop
int3
lock
fs
inc
dec
sti
adc
mov
sarb
or
jg
jecxz
sbb
xchg
mov
or
pushf
or
mov
pushf
data16
add
test
xor
out
cwtl
in
cmp
js
ds
mov
jo
add
or
xor
add
les
into
add
inc
cmc
lret
popa
lods
xchg
push
xchg
in
scas
push
in
rcrb
arpl
push
mov
sbb
sbb
call
loopne
inc
ss
jl
push
push
arpl
les
xchg
push
mov
xchg
push
jns
xchg
pop
add
int
in
movsb
add
mov
sarb
js
xchg
lods
pop
idiv
and
rorb
cs
loop
push
sbb
popa
mov
sahf
jmp
mov
cmp
dec
pop
pop
mov
fsts
sub
pop
mov
hlt
andl
jle
jo
ret
ja
inc
mulb
arpl
cmp
adc
loope
sbb
cmp
inc
jo
shll
sbb
and
jge
xor
inc
scas
sbb
or
mov
dec
push
les
add
rorb
lock
fcompl
fldcw
loopne
pop
sbbl
lods
add
add
ficoms
imul
into
clc
adc
negl
mov
mov
jae
cmp
add
jge
xchg
faddl
mov
fst
dec
dec
xchg
in
mov
loopne
add
lods
pop
pop
sub
movsl
fbld
iret
add
add
lret
aad
iret
dec
jns
nop
movsl
sbb
jns
popa
loopne
mov
sub
jno
out
repnz
je
sub
mov
std
xchg
lock
mov
adc
jle
xchg
mov
rcrb
inc
xchg
rcrb
add
and
gs
lods
outsb
xchg
nop
pop
adc
sbb
sub
jnp
std
lods
outsl
outsb
pusha
rol
icebp
sbb
int3
cmp
add
cmpsb
and
adc
xchg
xchg
pop
loopne
out
add
sub
and
addr16
imul
inc
movsb
mov
pop
and
or
dec
and
iret
jae
lods
push
jmp
pusha
mov
ss
jbe
push
jns
xchg
add
or
jl
add
nop
fldenv
orb
inc
pop
les
push
xchg
adc
mov
loope
lds
and
div
pop
inc
cwtl
bound
stc
xlat
inc
jo
mov
sarb
orl
push
xlat
mov
testb
test
mov
clc
pop
std
sbb
ljmp
mov
jp
xor
and
xchg
sub
sti
dec
aaa
aaa
cwtl
push
leave
rol
nop
push
or
lods
lods
pushf
les
and
cmp
pop
repnz
jp
inc
inc
push
and
mov
xchg
in
add
push
mov
ret
int
pop
cmp
or
int3
add
mov
sahf
or
clc
aas
pop
ss
push
ror
cltd
pop
repz
lock
nop
add
mov
xor
inc
clc
cmp
in
andb
daa
xor
jo
xchg
into
pop
mov
dec
cli
lret
sub
popa
adc
mov
imul
xchg
sub
push
fs
xlat
cs
pause
cmp
sub
mov
lcall
addb
mov
add
int3
fidivrs
aam
and
roll
dec
mov
lea
out
xor
jno
adc
loop
in
clc
mov
inc
cmp
shr
mov
leave
mov
test
xchg
rcr
cs
adc
jl
sub
sbb
ja
xchg
aad
or
xor
imull
addb
aas
dec
out
xchg
loop
pop
jg
push
sbb
xchg
cmp
shll
inc
and
pop
xorl
arpl
mov
fstl
scas
pusha
and
xor
adc
scas
mov
hlt
fadds
cmc
inc
mov
lahf
cmp
mov
jmp
cwtl
pop
mov
test
insb
popl
arpl
pop
pop
es
icebp
push
and
adc
push
rclb
fwait
jae
pop
mov
mov
pusha
mov
int3
fsubrs
mov
cld
add
or
negl
loope
xlat
nop
adc
push
imul
jmp
les
jns
stos
std
jo
cmp
and
in
loopne
lods
test
pop
cmp
cwtl
xor
sbbb
and
aas
inc
pop
push
outsl
loope
lods
fcoms
and
and
incb
push
cmpsl
pop
mov
sub
adc
jbe
imul
fsubl
scas
jne
and
push
adc
and
xor
mov
sbbb
popa
add
pushf
loopne
push
or
dec
mov
push
rolb
mov
and
jo
jne
mov
mov
add
nop
stos
mov
mov
add
arpl
cmpsb
push
sub
fwait
in
add
mov
jecxz
push
jnp
test
cmp
pusha
mov
test
jne
cmp
push
popa
sub
mov
data16
mov
pusha
cmp
ret
movsb
sbb
xorl
loop
insb
pop
je
lock
jle
sub
and
fwait
xchg
push
aas
ret
jl
add
jge
enter
into
cmpsb
adc
pusha
mov
sub
cmp
jge
in
mov
inc
out
lahf
pop
adc
sub
pop
cmp
pop
or
mov
jnp
add
movsl
inc
dec
je
cmp
bound
les
mov
push
jno
push
jbe
add
or
clc
enter
xchg
fldcw
lcall
xchg
or
sub
mov
leave
xorb
data16
pop
and
cmp
ss
jp
dec
lds
push
pop
xchg
mov
mov
sbb
mov
push
dec
mov
enter
pop
inc
adc
stos
jecxz
add
inc
jbe
pop
imulb
mov
add
xor
mov
mov
or
cltd
les
repz
mov
jp
xor
lret
inc
push
adc
pop
cli
add
clc
testl
movhlps
mov
repz
mov
dec
insl
cmpl
scas
popa
lods
adc
add
addb
xchg
insb
pop
popa
jnp
call
pop
sub
or
cmp
in
jmp
dec
cmpb
jne
adc
sbb
dec
add
xchg
fsubrl
ficoms
test
sub
mov
xchg
cltd
and
faddl
rorl
add
rclb
mulb
scas
cmpsb
sub
in
cli
push
inc
in
jne
push
cmc
subl
mov
pushf
movsl
ss
ja
nop
push
pop
popf
push
icebp
shl
mov
pop
mov
inc
cli
std
rolb
in
push
adc
mov
inc
pusha
pop
loopne
mov
pop
xor
xor
adc
iret
bound
adc
mov
pop
ds
jae
ljmp
gs
mov
icebp
sub
push
xchg
xchg
and
cmpsl
mov
popf
push
hlt
push
xchg
jmp
call
mov
insl
and
lahf
pop
jb
arpl
or
shl
sbbl
dec
lods
push
add
mov
mov
int3
add
aaa
movsl
cltd
push
pop
iret
xor
js
shll
add
cld
xchg
shlb
mov
add
mov
ret
lret
xchg
sbb
mov
nop
add
pop
addr16
ja
and
sbb
int3
jnp
mov
aad
lds
push
in
sbb
rep
cmc
unpckhps
fcompl
loop
pop
jg
fs
test
int3
mov
inc
add
repz
in
add
dec
loop
sub
xchg
jmp
mov
mov
mov
push
adc
nop
or
mov
insb
in
test
js
rolb
movl
ror
dec
imul
arpl
mov
lahf
hlt
dec
push
pop
test
jo
mov
xchg
in
roll
mov
mov
and
jne
lods
lret
mov
lret
fadd
mov
xor
arpl
jnp
adcb
sub
push
sbbb
inc
repnz
ja
cmp
hlt
loopne
cli
adc
in
add
outsb
out
or
mov
outsl
mov
jg
nop
orb
into
mov
or
test
mov
mov
push
adc
jnp
in
cmp
lods
rcll
ret
aam
xor
sbb
pusha
sub
or
pop
adc
fistpll
add
add
sub
sub
push
cld
cmpb
inc
and
call
or
jns
out
call
dec
dec
daa
jmp
fs
sbbb
push
ret
jno
push
jbe
or
ret
in
pop
lods
and
or
ja
je
adc
jne
stos
xor
sti
hlt
pop
mov
std
dec
jae
pop
jle
imul
sub
adc
loopne
lret
xchg
jge
xor
int
notl
clc
pusha
mov
fadd
fsubs
pop
jno
dec
and
lahf
add
mov
push
lds
sub
testl
rcl
xor
push
jae
cmp
push
fidivrl
inc
add
push
daa
mov
aaa
rorb
bound
add
fstps
stos
inc
in
je
mov
push
sbb
shrl
dec
sub
ss
push
push
int3
aam
sbb
xor
scas
xchg
and
ja
sbb
or
mov
and
push
lret
push
push
aam
mov
push
aam
sub
xorl
arpl
mov
mov
push
fisttps
dec
cmpsl
stc
xchg
xlat
cwtl
fs
add
cli
lret
sbb
mov
dec
sbb
cwtl
cmp
push
push
push
add
jae
shlb
cmpsl
repz
sub
sbb
or
push
pop
shrd
push
push
cmp
add
out
int3
and
mov
and
adcb
pusha
xchg
mov
cmp
lret
xor
out
mov
inc
andl
mov
pop
fcomps
bound
popf
jecxz
shl
push
nop
mov
mov
sti
addr16
xchg
lods
jno
call
xorb
loopne
lods
insb
clc
cmp
and
and
add
jg
sub
or
mov
in
lock
push
mov
in
sbb
aam
pop
sbb
je
outsb
pop
ret
ds
aam
sbb
clc
mov
out
and
fs
rolb
enter
mov
sub
icebp
inc
add
lods
dec
lret
lods
or
push
cbtw
dec
push
cmpb
js
inc
scas
sub
sarb
rcrb
das
into
nop
push
and
jecxz
add
cltd
cwtl
sbb
jge
pop
clc
add
ja
insb
adc
and
movl
or
sub
les
cwtl
flds
sub
data16
pop
inc
aam
push
add
int3
add
mov
movsl
adcb
dec
jbe
mov
sbb
ret
add
jg
or
rorl
int
cmp
test
loopne
sub
pop
push
jnp
pushf
or
ret
push
out
xchg
sub
mov
cmp
jmp
xchg
mov
or
cmp
xchg
aam
shr
jae
push
pop
cltd
add
sbb
outsb
cwtl
adc
or
loope
sub
mov
adc
int3
dec
adc
jnp
or
sarl
mov
mov
jl
je
jge
xor
adc
cld
cmpsl
pop
dec
cmp
mov
in
push
dec
sub
enter
or
andl
mov
jl
or
js
out
push
pop
xor
or
jmp
mov
inc
ret
and
mov
lods
adc
xchg
jle
sarb
cmpl
dec
das
ja
add
aaa
ss
subb
fwait
insb
or
mov
jp
mov
cs
imul
popf
cwtl
sbb
dec
test
sti
adcb
jl
add
shlb
push
imul
cmp
fs
cs
cld
xor
clc
dec
test
dec
xlat
daa
pushf
push
xor
in
insl
lret
or
lahf
dec
jle
les
or
rorl
jmp
pop
pop
rorl
dec
mov
add
int
mov
mov
cmp
sbb
xchg
cmpsb
pop
pop
xor
xchg
sub
mov
push
xor
loope
lahf
in
jecxz
dec
faddl
dec
dec
sahf
mov
inc
push
mov
shlb
cwtl
adc
insl
mov
jb
pop
es
jge
and
fsubrs
dec
sti
adcb
dec
inc
repnz
jp
in
sbb
cmp
dec
mov
and
sti
js
fiadds
nop
jecxz
mov
inc
sbb
test
inc
adc
jle
inc
lock
subb
shrd
mov
rclb
ret
push
adc
hlt
pop
pop
hlt
mov
andb
mov
std
adc
lock
in
sub
pusha
pop
jg
or
cmp
test
add
inc
ffreep
push
xchg
adc
add
and
pop
ljmp
push
in
add
or
jmp
and
hlt
mov
arpl
test
fmuls
xchg
cmpsb
xor
and
or
xlat
mov
xchg
in
mov
and
inc
dec
add
cld
pop
jmp
insb
add
daa
jb
mov
push
inc
aam
leave
xchg
pop
dec
mov
xchg
mov
aaa
add
inc
jp
sbbb
out
jge
pop
pop
stos
mov
testl
rcll
lods
shll
add
imul
add
testb
jne
fs
lock
cmc
mov
test
cwtl
push
out
sbbb
out
rcl
mov
data16
xor
test
sbb
shll
data16
push
movsb
loopne
ljmp
daa
out
and
adc
jae
mov
jbe
cmp
xor
clc
sub
sub
push
adc
add
xlat
lds
sub
sub
setge
push
ja
mov
or
test
outsl
fsubr
or
pusha
or
bnd
inc
mov
and
out
int3
sar
sbb
out
mov
mov
fdivrs
pop
add
lret
test
pusha
sarl
dec
jae
mov
mov
daa
sbb
ljmp
pop
or
sbb
insb
sahf
xor
push
std
out
add
les
cmp
mov
push
call
ret
jg
inc
jl
clc
ja
clc
mov
test
add
aas
insb
add
push
pop
jl
mov
test
clc
xor
pop
cld
shlb
add
mov
nop
or
subb
ja
inc
xor
jp
test
loopne
jne
dec
jge
movsb
mov
xchg
cwtl
in
sbb
scas
xor
aas
rclb
outsl
mov
mov
bnd
jnp
dec
nop
mov
arpl
mov
enter
jbe
pop
add
arpl
push
mov
aaa
cwtl
shrl
outsl
and
lahf
les
sti
out
cmpsl
aam
add
cwtl
push
push
cmp
fsubl
repnz
pop
xor
inc
add
xchg
dec
pop
notb
cld
sub
pusha
test
adc
add
push
sub
rcr
sbb
push
xchg
xlat
mov
push
jl
add
mov
daa
push
stos
dec
les
cmp
xor
inc
aam
sub
ja
push
int3
test
jmp
add
add
jb
ds
lods
jns
cmc
jle
ljmp
xchg
inc
inc
cltd
fstp
mov
lret
hlt
cmc
sub
xchg
jl
jne
sbb
aas
inc
inc
nop
sub
mov
iret
daa
mov
dec
leave
push
mov
cld
mov
ljmp
add
sbb
add
call
sarl
lret
inc
or
push
push
call
cmp
dec
fwait
mov
flds
or
fs
into
cmp
sbb
add
sbb
sti
add
pushf
push
cmc
push
imul
or
jp
cmp
add
loope
test
outsl
out
movsl
mov
test
ret
adcl
add
test
adc
pop
fsubrl
add
adc
push
jge
jb
jl
loopne
addr16
gs
cli
push
add
add
push
sti
xchg
std
fsubr
fcoms
movsl
inc
mov
mov
sar
adc
xor
sbb
hlt
and
xchg
cmp
sbb
or
in
fnstenv
cmc
adc
dec
push
not
push
nop
out
aad
inc
jno
adc
xchg
hlt
les
jmp
daa
out
pop
mov
jo
ret
add
rep
fnstcw
xor
lea
aaa
movb
in
inc
jecxz
les
dec
fwait
mov
add
ds
cltd
inc
jns
add
pop
adc
push
nop
dec
push
mov
testb
arpl
cwtl
rclb
add
idiv
mov
add
and
jbe
mov
add
xor
lock
inc
lods
mov
test
dec
lret
push
inc
add
ret
dec
mov
cmpb
loopne
dec
add
jb
insl
fisttpll
add
ret
add
aad
mov
shrl
cmp
xchg
pop
pop
sbb
xlat
and
in
ret
add
mov
xchg
stos
add
ljmp
ret
fwait
clc
jno
sbb
add
pusha
and
add
fidivrs
add
jmp
add
ret
and
mov
add
push
xchg
xchg
arpl
mov
sub
jbe
add
add
pop
hlt
inc
sbb
cmpsb
cld
xchg
add
pop
test
push
mov
clc
cmp
xchg
test
notb
cltd
arpl
add
and
sahf
in
loopne
cmp
dec
lahf
sbb
mov
decb
aad
inc
sarl
mov
mov
push
pop
popa
aas
dec
mov
in
test
add
push
je
jns
sub
bound
out
add
and
jne
or
dec
fsubp
sbb
and
xchg
cmpl
inc
push
shrl
or
hlt
popa
lods
pusha
mov
cmpsl
push
test
cmp
sub
add
pusha
mov
pop
in
aas
sub
jle
lods
push
cmp
pop
and
mov
imul
or
popf
xchg
loope
push
push
inc
lret
clc
jb
inc
loop
add
dec
ret
and
iret
add
add
xor
inc
inc
mov
packssdw
fs
xchg
xor
push
ficoml
cs
cltd
int
push
or
in
mov
mov
out
inc
ret
leave
pop
stos
repnz
add
push
rolb
sub
bound
pop
or
ljmp
or
dec
imull
aaa
inc
push
mov
jge
add
push
mov
sti
xor
cmp
or
and
mov
scas
sbb
xchg
jo
add
mov
ja
loopne
dec
jp
les
jno,pt
andl
enter
inc
in
sar
cltd
cmpsb
int3
pop
adc
sbb
lock
cwtl
mov
add
lods
into
mov
lahf
sub
push
loopne
movsl
xchg
add
mov
cmp
push
outsl
pop
sub
push
shl
insl
js
xor
stos
mov
enter
add
mov
out
lock
xor
mov
add
mov
stc
incb
cmp
cwtl
pop
add
jnp
js
sub
jl
fsubr
stc
gs
pop
adc
lcall
sub
int
mov
push
test
outsl
push
mov
mov
push
mov
add
out
jg
scas
sbb
sbbb
int
imul
cmp
push
jae
mov
cld
out
add
or
or
inc
or
notl
call
jnp
push
add
cmp
sub
aam
sbb
stc
clc
out
psrad
jbe
xor
add
cmc
pop
sbb
dec
add
cmp
add
ja
pusha
add
out
sbb
xor
xorb
or
pop
xor
jmp
shrl
add
adc
pop
or
add
push
add
gs
mov
mov
inc
cltd
lret
xchg
jg
xchg
inc
sub
add
popf
xlat
adc
mov
sbb
jg
incl
and
les
cmp
push
sub
pop
inc
or
mov
popf
nop
lret
adc
mov
pop
sbb
shlb
cmp
sbb
pop
jbe
add
fcmovne
lea
push
add
gs
mov
cwtl
ror
add
jno
adc
test
mov
fnstsw
jmp
loop
pop
jmp
mov
inc
into
fildl
cmp
fisttps
mov
xor
add
cmpsl
repnz
idivb
dec
data16
fwait
xor
and
in
mov
mov
xor
test
das
or
xor
in
sbb
add
push
movb
icebp
int
pop
ljmp
jne
add
mov
and
mov
imul
sub
out
adc
cmp
ss
and
call
iret
cs
out
add
cmp
ljmp
stos
dec
clc
lods
imul
push
push
sahf
sti
add
hlt
pop
adc
jb
add
nop
cmp
add
aad
stos
pop
jb
lods
push
sbb
add
pop
mov
add
xor
mov
push
das
mov
test
push
xchg
mov
mov
adc
xor
adc
jmp
adc
push
cmp
add
adc
or
xchg
add
movsb
xlat
fcomps
push
sbb
jno
fs
dec
shrl
sbb
fnstsw
es
divl
sbb
shlb
jne
add
cli
mov
add
pushl
lds
fsubs
add
push
or
jbe
add
dec
push
cld
andl
mov
push
add
and
push
mov
in
in
dec
jle
add
push
insb
stc
or
out
push
loop
add
cmpsl
popf
scas
pop
rcrb
inc
addr16
inc
pop
fs
mov
ret
test
add
cmp
push
fsubrl
add
js
loopne
sbb
addb
es
jne
or
or
inc
sbb
mov
or
clc
testl
add
xor
dec
pop
push
pop
repnz
dec
mov
in
push
sub
lds
and
add
sbb
gs
out
stc
in
sbb
pop
imul
add
inc
sbb
fildll
andl
push
inc
mov
cmpsb
pop
cmp
ds
and
add
and
add
in
dec
fiaddl
pop
dec
ret
add
jle
lret
jl
sbb
jno
les
jo
dec
enter
dec
in
mov
aad
dec
cltd
add
dec
pop
push
arpl
add
jg
movq
jmp
xchg
mov
push
sahf
jno
xor
and
cmp
push
or
pop
bound
aas
js
add
mov
push
add
ficomps
les
pushf
add
rorb
aaa
adc
outsb
fidivrs
lods
sub
push
mov
lcall
mov
sub
hlt
aas
int
add
and
mov
in
xchg
mov
add
push
mov
add
adc
add
faddl
sahf
push
js
sbb
ss
add
rol
xor
add
not
add
stc
add
cmp
rolb
repz
cli
test
arpl
stc
inc
pop
std
loop
and
add
inc
pop
xor
roll
cmc
fiadds
into
xor
dec
add
mov
adc
aaa
rclb
adc
sub
cs
jge
add
mov
jbe
imul
pop
or
shlb
icebp
add
decb
inc
xor
repnz
jl
scas
add
inc
mov
aam
xor
xlat
push
push
inc
cmp
cmp
add
ret
repz
sub
fldenv
in
mov
inc
sbb
ret
int3
into
add
pushl
sbb
jmp
ljmp
adc
xchg
les
add
hlt
call
movq
push
cmpsl
and
je
andps
dec
mov
add
arpl
andb
inc
cmpsb
jmp
popf
in
sti
subl
xlat
leave
mov
add
dec
xchg
add
ljmp
repnz
or
mov
call
add
mov
mov
xchg
lret
xor
jns
pop
icebp
movsb
mov
adc
into
add
stos
popf
inc
adc
jmp
xor
dec
fmul
sub
subl
jnp
cmp
and
xor
mov
jle
adc
jmp
mov
ljmp
loopne
clc
out
in
jmp
pop
jno
adc
mov
add
test
xor
xchg
pop
out
add
orb
daa
jbe
push
cmp
adc
rcl
imul
xchg
pop
jecxz
mov
xor
xchg
sbb
test
and
dec
adc
add
mov
xor
cmp
xchg
in
xor
addr16
incl
sub
push
add
xor
loopne
dec
fwait
pop
push
mov
aas
add
inc
out
xchg
mov
cmc
ja
add
xlat
inc
movl
mov
push
cltd
pop
xchg
sahf
incb
jns
adc
cmp
out
mov
add
ss
mov
dec
movsb
or
mov
ds
jge
jp
adc
addr16
mov
fs
add
add
xorl
inc
scas
jmp
jge
adc
aas
mov
pusha
mov
sar
jle
add
pop
insb
fs
cwtl
and
add
pop
add
pop
push
icebp
and
mov
popf
aad
push
mov
jae
jge
inc
and
xchg
cld
ret
scas
add
ret
add
andnps
btr
addr16
cmpl
pop
mov
loop
push
or
ljmp
test
or
push
add
decl
outsl
add
jp
jle
jmp
test
ss
dec
les
add
cwtl
popl
cmc
mov
or
add
sarl
cmpsb
lret
add
movsb
mov
xor
jo
sbb
test
popl
add
jo
xor
push
cmp
shrb
rorb
cmp
push
iret
daa
outsl
int3
pop
enter
jle
sahf
jo
cmpsb
add
xchg
out
cmp
xchg
push
add
ja
test
loop
add
lahf
addr16
xchg
and
mov
sub
xchg
sahf
sub
loopne
loope
testl
popa
xor
test
inc
add
xor
pop
adc
sub
dec
sar
sti
pop
push
rolb
sub
adcl
inc
lock
sub
push
fdivrl
cld
out
push
aas
xor
lcall
cmpsb
sub
rorl
popa
int
filds
add
mov
mov
das
jne
pop
cmp
push
cmp
xchg
jns
and
les
sahf
mov
sub
push
mov
aas
inc
lret
out
notl
popf
add
cmp
loopne
aas
adc
loope,pn
pusha
lods
push
stc
sti
jo
or
shl
and
xor
push
sbb
incl
std
mov
pop
add
movb
out
xchg
mov
mov
rolb
js
cmp
adc
cmp
jge
mov
adc
sub
imul
aad
pop
iret
call
jns
les
loopne
insl
add
push
in
sbb
cmc
roll
adc
push
add
nop
pop
mov
add
test
sub
repz
jns
daa
cmpsl
add
pop
popl
adc
jae
pop
jp
add
adc
inc
test
clc
mov
fidivs
pushf
or
xor
pop
adc
push
add
ret
cmp
add
mov
pop
je
cmc
mov
add
scas
jb
add
inc
mov
leave
testl
mov
add
fisttps
dec
iret
xlat
incl
add
loopne
add
add
add
cmc
cmp
sarl
push
lods
inc
and
shlb
dec
mov
cmc
and
xchg
adc
lock
sarl
and
movsb
ds
pusha
push
xchg
add
jnp
adc
add
leave
mov
mov
cwtl
jo
add
sahf
sub
cwtl
mov
sarb
pop
aas
pop
mov
es
mov
mov
aam
flds
pop
push
enter
add
and
lcall
jne
jb
add
sub
enter
add
loope
sub
push
fistl
jb
xchg
pop
adc
add
jo
and
xchg
add
or
ja
mov
ret
mov
xor
sbb
mov
aam
jmp
dec
mov
outsl
xchg
dec
syscall
scas
xor
loopne
jbe
fwait
mov
in
or
push
cmp
int3
dec
cmpsl
ficompl
lock
sbb
xchg
sbb
je
out
add
repz
leave
cmp
add
bound
mov
xorb
add
and
pusha
cld
mov
mov
xor
pop
addr16
jecxz
or
and
add
push
pop
lcall
xchg
es
lock
sti
add
pop
mov
pop
push
ret
loope
xorb
jg
xchg
add
aaa
es
iret
fwait
inc
add
inc
addr16
test
mov
mov
popf
cld
lcall
xor
push
inc
sub
mov
add
mov
lcall
add
add
adc
lcall
shll
add
outsb
lock
add
pop
or
inc
in
out
arpl
js
ja
add
repnz
pop
pop
idivl
xchg
xchg
inc
add
jo
mov
add
ja
and
rorb
or
iret
sbb
cmpb
popa
dec
add
push
test
dec
insl
jae
loope
stos
movsb
mov
dec
cmp
jl
mov
add
jo
idivb
xor
and
add
stc
inc
jl
aad
add
lret
int
sbb
test
in
test
push
or
add
add
or
xchg
cmp
and
loop
movsl
test
call
dec
add
sti
pop
loope
mov
add
in
pop
loopne
xchg
js
add
lock
jmp
aaa
add
add
add
dec
sbb
sbbb
add
in
rolb
lock
movsb
cltd
jns
sub
xor
ljmp
xlat
lcall
xchg
jle
dec
jg
int
add
popl
mov
lods
and
mov
std
mov
fldl
xor
in
cmp
xchg
sahf
push
loopne
sbb
cmp
pop
dec
out
add
lret
stos
testl
ret
adc
push
ss
sbb
out
adc
dec
or
stc
mov
cmpsb
loop
repz
out
xor
jo
add
insb
icebp
lods
into
clc
xchg
cmpl
cld
out
xor
cmp
divl
pop
mov
pop
push
xchg
pop
add
add
mov
dec
ss
imul
cmp
add
gs
xor
repnz
nop
push
ja
push
add
push
in
test
cmp
xlat
iret
cs
sbb
xchg
dec
mov
les
mov
in
xchg
jae
inc
out
rorb
add
aad
mov
jb
jmp
mov
inc
adcl
enter
add
in
pop
call
cmp
and
scas
jecxz
mov
je
insl
jmp
xlat
jb
jl
lcall
and
adc
pop
popf
ret
cmp
fildl
out
or
int3
addl
pop
outsb
add
cwtl
mov
pop
paddq
or
test
cld
inc
mov
jmp
add
das
cmpsb
imul
mov
jae
mov
inc
add
adc
iret
cld
xchg
or
test
push
loop
mov
cmpsl
stc
add
les
nop
ret
cmp
lret
sbb
aam
lds
xlat
sub
imul
mov
add
rcrl
mov
mov
aas
xchg
cld
popa
add
cs
ja
clc
pop
loop
fldl
cmp
movsb
mov
push
pop
ret
xlat
or
add
and
mov
and
dec
clc
add
xchg
jg
pop
out
aad
add
pop
rcl
gs
pop
mov
xchg
mov
fwait
dec
ficomps
cmp
imul
cmc
add
mov
rorb
inc
add
es
sub
or
and
jb
add
inc
ficompl
dec
mov
data16
stc
out
add
xchg
cmp
xor
jle
pop
lods
jns
rcrb
out
out
adc
adc
jne
fwait
jno
jns
add
mov
push
jo
cmp
test
ljmp
int
sbbb
jo
sub
out
push
testl
jmp
xchg
and
add
or
in
into
dec
imul
jnp
test
jae
cmp
and
pop
icebp
mov
push
outsl
leave
push
in
mov
and
outsb
push
add
push
xchg
inc
pop
cmp
sub
mov
popf
iret
add
or
jns
scas
into
addb
add
imul
sub
fisubl
repnz
xchg
pop
pop
push
or
jmp
add
arpl
add
leave
mov
pop
xchg
jne
mov
mov
cwtl
jns
lds
testl
mov
scas
push
aam
add
stos
scas
or
aas
add
pop
fidivrl
and
divl
xchg
cmpsl
push
xor
jp
add
and
filds
pop
jo
and
xor
push
add
aam
lret
mov
repnz
orl
pop
insl
xchg
out
shll
insb
jbe
push
cmpsb
fsubr
push
inc
nop
test
push
push
les
push
clc
in
ds
movsl
and
and
jge
add
imul
ret
pop
jne
adc
jge
sbb
pop
add
pop
pop
jecxz
js
aaa
add
dec
mov
xchg
leave
xor
mov
add
push
clc
sbb
mov
jge
mov
fbld
adc
outsb
pop
aaa
jae
popa
pusha
add
xchg
pop
mov
add
push
dec
mov
add
xchg
adc
add
and
dec
mov
xchg
out
xor
mov
cwtl
add
adcb
add
test
mov
sbb
cmpsl
sbb
add
lock
insl
testl
sub
cmp
ss
pop
mov
push
add
stc
imul
mov
sbb
cmc
xor
cmp
fcmovnbe
add
mov
add
xor
push
cli
es
movsl
es
lea
add
mov
push
incb
add
xchg
fisubrs
inc
jae
adc
inc
add
loopne
jg,pt
sarb
popa
jp
mov
pop
in
add
dec
outsl
mov
cmp
mov
xor
sbb
xchg
or
sub
les
cmp
adc
inc
add
dec
xor
dec
nop
mov
subl
or
popf
jmp
into
cld
pushf
pusha
roll
rclb
xlat
fsin
pop
jnp
add
call
add
cmpl
hlt
fninit
adc
test
pop
test
dec
out
mov
fidivrs
inc
pop
jmp
add
inc
cmp
pop
enter
add
rolb
mov
jg
push
xor
mov
mov
rcl
xlat
cmp
and
xchg
stos
mov
add
push
das
test
add
ja
add
hlt
decb
orb
icebp
sub
clc
cmpsl
add
dec
mov
pusha
cmpsb
xor
lcall
sbb
test
aad
shlb
and
add
test
xor
add
pushf
or
mov
sbb
sbb
inc
mov
push
roll
xchg
outsl
stos
scas
iret
xor
push
cmp
mov
out
test
cmpsl
add
add
jge
add
pop
xchg
push
int
rclb
cmp
or
pop
imul
roll
or
and
mov
or
test
mov
mov
jno
in
mov
xor
adcb
jae
es
dec
jmp
jo,pn
dec
movsl
cwtl
add
leave
pop
add
or
lret
xor
push
mov
sbb
mov
outsb
sub
js
or
add
xchg
mov
add
jns
aaa
loopne
or
mov
out
fisubl
add
pop
mov
iret
add
push
jg
dec
jp
repz
stos
or
mov
mov
jns
jl
xor
inc
add
xchg
mulb
fistps
cmpsl
stc
in
mov
sub
out
insb
movsl
add
xor
outsl
lahf
push
stos
mov
jp
subb
test
popf
dec
mov
jae
push
add
mov
fcomps
out
loopne
daa
add
movsb
insl
push
push
clc
inc
out
scas
xor
jge
sbb
call
add
aam
addl
test
jge
popl
addr16
arpl
hlt
pop
jge
dec
leave
addl
inc
mov
ror
xlat
lds
int3
sbb
xchg
cmp
aad
push
enter
add
mov
int
add
decb
arpl
xlat
push
enter
roll
jbe
sub
push
jg
pop
or
int3
insb
mov
adc
pop
and
inc
scas
je
adc
addr16
xor
out
cld
pop
dec
cmp
jl
loop
jno
pusha
cmpsl
divb
add
daa
insb
mov
sbb
pop
inc
clc
nop
out
test
inc
andb
and
lahf
les
mov
mov
dec
std
ds
cmp
add
sub
adc
xchg
pop
pop
int3
push
popa
pop
pop
sbb
add
shr
pop
je
mov
mov
test
into
sbb
lret
int3
jno
add
jns
sbb
dec
sarb
push
jb
ror
push
add
push
inc
insb
faddl
mov
push
cmp
lcall
sbbb
js
sbb
push
xchg
xor
and
adc
fimuls
mov
xchg
xorb
in
pop
test
inc
sahf
lcall
jb
jne
and
sar
movsl
lret
push
sti
fsub
mov
fdivl
ficoms
inc
fs
jge
add
and
or
outsl
int3
cltd
dec
xor
cli
cs
or
jecxz
cmp
scas
add
jmp
insb
outsb
cli
pop
idivb
out
add
add
pushfw
push
pop
int
push
add
inc
add
imul
ja
push
pop
sub
loopne,pn
aas
flds
lods
cmp
test
sti
scas
pop
or
in
pop
mov
mov
sub
jmp
dec
pop
adc
in
movsb
sbb
into
add
mov
pusha
mov
cmp
adc
test
movsl
mov
and
push
shrb
jecxz
clc
jmp
add
adc
hlt
in
je
add
das
rcrl
mov
jb
iret
pop
stc
jo
adc
cs
dec
gs
jb
fidivl
mov
add
jg
pop
jecxz
sbbl
nop
push
addl
fldl
jg
cwtl
xor
cmp
js
add
mov
sub
cmp
js
mov
adc
filds
das
and
add
xlat
stos
xor
lret
icebp
clc
cmp
jmp
inc
mov
cmpsl
imul
cmp
cld
jno
int
sbb
cmpsl
mov
pop
sub
rol
xor
ds
subb
mov
dec
cmp
add
cmp
jl
popa
mov
test
fcomp
clc
add
push
out
xchg
lahf
add
sub
add
cltd
insl
nop
imul
cmovs
add
xchg
or
dec
add
stos
inc
pop
rcrl
add
arpl
sbbb
xchg
xchg
icebp
add
pop
orl
jle
add
shr
xor
xor
jae
sub
pop
push
sar
mov
mov
mov
push
insb
or
fwait
fiadds
jmp
xchg
inc
dec
repz
stc
ja
xchg
hlt
pop
ret
and
fidivl
xchg
je
lret
in
pop
add
cld
mov
bound
mov
xchg
mov
jmp
add
cmp
xor
xchg
add
dec
mov
push
dec
mov
inc
sbb
cmpsb
and
lret
mov
sbb
and
add
xorl
xchg
add
imul
dec
sbb
add
xchg
ljmp
sub
fwait
in
sub
mov
insb
add
sbb
rep
je
add
mov
popf
xchg
mov
mov
mov
xchg
inc
dec
cld
pop
sbb
loop
ret
test
mov
push
loope
int3
scas
xchg
add
mov
and
xchg
xchg
cmp
jo
add
or
testb
mov
imul
cmp
repnz
stos
loope
pusha
dec
mov
shl
or
add
xor
mov
add
scas
int3
test
pop
pop
add
add
add
mov
inc
in
jge
add
jbe
cmp
push
into
add
fisubs
dec
sub
and
mov
pop
jo
mov
push
push
leave
pop
jge
dec
sbbb
add
pusha
pop
cmp
adc
daa
imul
in
rorb
cmpsb
fiadds
nopl
push
repnz
pop
add
test
sahf
add
sbb
repnz
ds
add
cmp
add
sub
add
loope
repz
jecxz
jb
pop
popf
fsts
jno
inc
pop
and
in
add
orb
nop
inc
add
adcb
add
xlat
add
int
jl
sub
ljmp
popl
and
lcall
inc
test
mov
jno
push
xchg
add
mov
mov
add
xchg
mov
test
rcrb
cmp
xorl
ds
pop
ss
sahf
cmp
pop
xor
add
rcll
sarl
add
popa
fsubs
add
aas
shl
adc
add
and
xlat
xor
add
pop
xor
stos
jns
in
sbb
inc
jnp
shl
into
mov
in
mov
add
ret
cli
xchg
add
add
adc
movl
sub
add
imul
add
cs
add
stc
jecxz
sti
pop
loopne
in
lds
add
loopne
and
xlat
mov
and
sbb
xchg
insb
inc
add
mov
nop
les
adc
fnstenv
and
inc
jp
xor
ljmp
add
mov
lcall
push
test
mov
push
push
mov
cmpb
flds
ja
lock
repnz
add
dec
mov
lret
jne
xor
xchg
cwtl
testl
inc
dec
pop
lock
xchg
add
fwait
addr16
jnp
rolb
sbb
iret
mov
add
cwtl
out
pop
push
std
xchg
add
ss
sub
stc
and
mov
std
add
inc
add
push
lock
mov
push
cli
mov
pusha
sub
cld
adc
cmp
icebp
xlat
scas
adc
call
cmpsl
push
push
stc
dec
mov
cmp
and
xchg
ret
cmp
jmp
pop
sub
xchg
add
repz
mov
inc
add
mov
lods
subb
add
sbb
xchg
xchg
mov
push
popl
push
loop
lock
push
inc
add
loopne
add
cmpsl
push
pusha
push
xorl
xchg
push
sbb
stos
ss
pop
rcll
sarl
mulb
add
cld
cmpb
adc
xchg
xchg
call
aaa
in
or
pop
repnz
push
mov
loopne
add
out
ltr
mov
add
movsb
roll
repnz
add
repz
mov
mov
fisttpll
pop
bound
jns
test
xor
sbb
pop
mov
add
pop
jne
and
adc
mov
mov
enter
mov
mov
leave
pusha
jp
or
or
fcom
and
pusha
fldl
add
out
push
jmp
add
jno
shufps
in
add
or
divb
insb
mov
addr16
stos
add
push
repnz
rcrb
jae
pop
sbb
pusha
push
mov
add
adc
iret
sahf
addr16
adc
imul
imul
push
sbb
add
mov
mov
das
ret
add
sbb
or
sbb
arpl
add
repz
loopne
repnz
ror
mov
rolb
push
es
sub
pop
xor
daa
js
jo
or
call
nop
fwait
xorb
cmpsl
adc
dec
mov
sahf
add
xor
push
add
inc
add
nop
shrb
jo
daa
addr16
push
lods
sbb
mov
jno
test
popf
cmp
pushf
add
enter
in
and
push
stc
inc
add
mov
ret
test
jno
add
add
add
lds
add
sub
js
fabs
ret
push
or
inc
pop
fcompl
mov
pop
pusha
addl
inc
mov
pop
jge
add
sbb
add
test
dec
or
sub
adc
outsb
xor
jmp
cs
add
xchg
fdivs
pop
lcall
mov
scas
in
rcrb
and
sahf
jl
mov
sbb
mov
adc
lods
jg
scas
mov
rolb
loopne
add
sbb
mov
sarl
stos
add
in
inc
mul
jo
fdivrs
scas
mov
ss
adc
in
push
stc
mov
loopw
add
pop
xor
cmc
mov
add
into
test
jmp
jecxz
xor
out
aam
mov
adc
push
lods
sti
pusha
push
add
jp
jo
movsl
add
imul
adc
push
sbb
xchg
jl
gs
mov
sbb
inc
sti
add
sbb
xor
jns
cmp
rolb
xlat
lret
lahf
add
sbb
cmp
cmp
repz
pop
insb
xchg
fldcw
loopne
add
stos
push
nop
add
xor
aad
jbe
cs
mov
add
pop
xchg
add
jbe
rcrl
call
lea
ss
jp
push
nop
jecxz
xchg
xorb
dec
add
std
jb
insb
fidivrs
add
adc
mulps
inc
xor
mov
push
fcmovne
pop
orb
xorl
pop
add
std
mov
xlat
pusha
notb
xchg
rol
or
and
push
and
mov
aaa
push
ret
and
shrl
push
inc
mov
cwtl
adc
lret
iret
xorb
sbb
icebp
scas
in
mov
imul
sbb
insl
adc
and
fld
lret
inc
xchg
pop
aam
mov
sub
psrld
add
pop
adc
xor
dec
add
jne
insl
add
jns
jmp
scas
popa
add
popl
iret
xchg
sti
insb
and
add
jne
aad
mov
sub
inc
str
cmp
add
or
lcall
ja
cwtl
out
popa
aas
xor
pop
sbb
adcb
lds
mov
add
ja
pusha
dec
add
pop
xchg
movsl
add
test
out
mov
sbb
shl
mov
or
mov
sbbb
shll
dec
data16
mov
pop
add
bswap
mov
add
mov
clc
jmp
push
push
bound
cld
pop
out
stc
adc
add
outsb
dec
dec
push
test
mov
jmp
mov
add
scas
jp
sub
addr16
add
or
arpl
gs
mov
and
insl
xchg
cmp
jno
jmp
outsl
hlt
and
add
in
mov
popa
js
in
ljmp
jnp
fs
fsubrl
loopne
mov
add
or
les
inc
add
popf
mov
ss
push
jae
xchg
add
inc
fs
jl
inc
mov
pop
std
in
pop
adc
incb
pusha
scas
pop
mov
add
mov
fists
jo
cmp
inc
test
mov
inc
add
cmp
inc
in
test
adc
repnz
jno
xchg
sbb
add
fidivrs
add
bound
popf
int3
stos
mov
pusha
ret
dec
pop
add
adcl
aaa
cmp
add
or
jge
inc
arpl
add
jns
insl
add
in
and
add
sbb
fsubs
pusha
gs
cmpsl
jle
dec
xchg
jno
lcall
sub
imul
mov
or
xor
in
mov
test
js
fdivs
sti
add
cmp
enter
jo
movsl
int3
jmp
inc
inc
cmp
push
pop
sub
push
push
loope
xchg
iret
leave
xor
js
add
adc
jmp
add
xor
sbb
add
lock
mov
add
in
dec
outsl
add
outsb
xchg
xor
sub
inc
lcall
push
cmp
jp
or
nop
inc
sub
lods
rorb
js
add
fdivs
push
pop
pop
mov
lret
push
cmp
test
add
mov
lret
rol
xchg
lret
xchg
or
jo
fcoms
add
cmp
cmpsl
add
sub
mov
inc
bound
stc
inc
insl
pop
loop
pop
outsl
imul
cmp
dec
jns
push
into
addr16
rorb
insl
cmpl
jo
mov
clc
or
mov
dec
add
add
and
xlat
fnsave
adc
push
das
pop
imul
out
test
jns
pop
loopne
mov
mov
add
mov
out
jl
pop
jl
sub
dec
pusha
xlat
or
pop
sbb
xchg
jne
sbb
pop
jp
repz
add
imul
push
inc
mov
add
mov
aad
je
sbb
or
inc
jmp
mov
pushf
loopne
pop
add
xor
inc
pop
inc
sub
test
call
lea
mov
roll
lcall
jb
add
aas
aad
shll
inc
sub
add
push
dec
cmp
add
mov
popl
jl
xchg
mov
add
cwtl
fbstp
notb
jecxz
adc
push
jle
mov
add
fwait
add
lds
add
ds
cld
mov
icebp
test
mov
cmpsl
push
mov
sub
ret
add
add
aad
pushf
clc
add
add
pop
xor
add
push
adc
jmp
mov
lods
push
xchg
stc
popa
in
ljmp
adc
add
cs
add
lds
dec
sub
add
adc
pop
pcmpgtw
sub
add
les
fildl
pop
pop
in
shrl
aam
sbb
xchg
add
enter
into
xor
pop
ds
cli
adc
mov
aam
adc
add
push
push
loop
fwait
movsl
add
or
stos
xchg
inc
adc
je
dec
push
repnz
ja
repnz
popa
pop
sbb
adc
in
push
stos
push
shlb
bound
std
inc
out
fdivr
lods
mov
jo
jne,pn
add
dec
fxch
mov
add
insb
pop
hlt
adc
clc
dec
addr16
mov
pop
out
adc
imul
xchg
test
jecxz
add
mov
addr16
cld
ds
in
pop
fs
push
jecxz
jnp
outsb
jae
insb
add
jg
lret
mov
mov
push
add
ds
out
dec
in
push
add
jae
test
inc
outsl
fdivrl
rcl
ret
cltd
pop
iret
pop
js
adc
mov
push
adc
pop
lock
negb
pop
outsb
xchg
fiadds
mov
cmpsl
inc
adc
push
push
pop
add
inc
call
popf
arpl
mov
leave
add
inc
and
mov
shlb
jbe
lcall
inc
pop
xchg
pinsrw
add
mov
or
cmp
cli
push
test
xor
lods
mov
xlat
loopne
sbb
and
add
mov
jo
cmp
push
jb
sub
dec
negb
mov
cmp
es
push
cmp
aaa
lahf
daa
push
test
loop
out
lcall
inc
and
gs
test
xchg
add
inc
mov
ret
sti
add
ds
pop
movsb
xchg
das
sbb
lock
add
push
push
scas
pop
pop
sub
fwait
js
add
pop
adc
jbe
xor
sbb
add
sar
sbb
into
mov
xchg
sbb
adc
outsb
notb
ja
fsubr
stc
mov
rcrl
rclb
pop
aaa
int
push
push
push
mov
jbe
mov
cmp
or
add
mov
lods
xchg
test
add
mov
pop
cwtl
rcrl
lret
add
leave
pop
stc
fcom
ret
cmp
ljmp
adc
sti
xlat
lahf
stc
cld
incl
jg
fadds
outsl
dec
xor
pop
xor
rolb
cmc
push
pop
add
dec
dec
daa
or
jns
pop
cmp
mov
inc
insb
add
cli
sub
out
jne
mov
pop
sahf
xchg
lods
leave
inc
fsubs
test
pop
add
push
add
imul
int3
mov
or
leave
xor
movsb
bound
sti
push
add
in
push
stos
cwtl
mov
sub
inc
adc
add
test
sbb
add
outsb
repz
les
je
data16
or
jno
dec
or
or
aad
sub
push
bnd
rclb
stc
in
adc
mov
pop
cli
cmp
iret
das
pop
call
lea
adc
adcb
jecxz
add
dec
inc
add
data16
iret
lea
hlt
cwtl
lds
inc
inc
jmp
pusha
ficoms
pop
outsl
jno
sbb
dec
cmp
jp
loope
out
mov
xor
cwtl
and
and
negb
bound
mov
ds
dec
pop
mov
das
loopne
or
add
arpl
sbb
lret
lods
push
je
pop
pop
icebp
pop
mov
cmp
cmpsl
addr16
dec
mov
test
xchg
ret
jmp
cmp
adcb
adc
pop
push
aas
sub
mov
push
push
xchg
add
roll
popa
cld
lea
outsl
clc
xor
add
repz
push
sub
icebp
mov
push
js
add
fsubs
rolb
pinsrw
push
adc
mov
xchg
sub
out
daa
add
add
ret
sarl
pop
adcl
insl
pop
gs
dec
into
mov
mov
ret
aas
movsl
xor
les
jo
and
arpl
jp
cmp
mov
add
clc
je
rcl
xor
cmp
xchg
add
inc
cmpsl
xchg
ljmp
sub
pop
scas
add
mov
mov
movsb
sub
shlb
jns
add
bound
shrl
mov
call
xor
das
repz
mov
push
popl
mov
hlt
sub
add
adc
loope
add
outsb
out
mov
xchg
es
jae
out
fcoms
pop
test
andb
mov
mov
jnp
dec
jmp
mov
stos
repnz
adc
push
add
sbb
or
mov
mov
movsl
cmp
outsb
ja
cmp
test
iret
rolb
adc
js
add
sbb
scas
and
add
mov
sbb
and
rcr
push
shrb
push
or
add
add
bound
hlt
aam
cmpl
repnz
or
inc
nopl
rclb
lds
mov
in
jge
add
push
add
imul
icebp
arpl
jle
and
add
push
or
mov
movsb
addl
cli
and
pusha
scas
iret
add
into
ficomps
dec
es
mov
dec
gs
jl
decl
add
int3
add
xor
inc
add
addr16
push
add
out
cmpsb
ljmp
add
add
ljmp
add
fwait
jns
fiaddl
out
add
into
mov
sub
push
enter
sbb
add
pop
orl
add
int3
xor
sbb
sbb
scas
lds
repz
sub
pop
cmp
and
fcoml
and
daa
pop
dec
pop
add
stos
xlat
nop
int
mov
add
lret
inc
cmp
cli
mov
cmp
mov
cmpb
cmp
add
cmp
repnz
jne
lds
sbb
mov
xorl
jo
adc
pop
cmp
sbb
stc
mov
inc
loop
scas
out
add
and
add
fstpl
jbe
mov
sbb
push
mov
push
out
adc
inc
lods
mov
push
mov
adc
stos
jno
adc
in
rclb
jmp
pop
movl
outsb
fldenv
add
pop
incb
add
add
jno
repz
sub
pop
or
or
stc
sbb
xchg
popf
push
movsl
repz
scas
clc
les
leave
push
fsts
stc
jge
push
gs
dec
imul
pop
out
aad
push
xchg
shrb
inc
inc
pushf
lock
adc
add
addr16
lods
mov
pop
jmp
test
rolb
sbbl
add
in
je
ljmp
jb
into
lock
adc
add
shrb
lds
icebp
fistl
add
std
cmpl
ja
mov
mov
pusha
fcomi
or
sub
fst
ljmp
add
sub
das
mov
jns
mov
or
mov
pop
cltd
lret
sbb
das
cld
mov
xor
mov
cmpsl
data16
push
dec
mov
add
mov
mov
cs
movsl
add
sub
les
rclb
jp
pop
outsl
xor
mov
and
outsb
jno
add
sub
js
popa
adc
ljmp
push
dec
clc
cli
aaa
cwtl
add
dec
dec
jbe
out
repz
mov
pusha
inc
test
int
cltd
orb
mov
xor
push
out
cwtl
mov
jo
ljmp
repnz
add
rcll
dec
xlat
add
mov
xchg
bound
test
scas
inc
dec
scas
test
and
mov
xor
xchg
call
je
add
roll
out
es
fwait
sti
mov
dec
or
adc
inc
ds
rcl
dec
aas
inc
and
insl
cmp
pop
push
fnstsw
into
fsub
xchg
mov
add
adc
iret
shll
mov
push
out
xchg
fiaddl
mov
fbstp
shll
mov
sbb
xchg
mov
cwtl
mov
mov
addr16
jae
or
adc
sub
insb
repz
cmpl
xchg
ds
add
or
push
xchg
call
push
aas
repnz
xor
add
in
sub
stc
add
jnp
cmc
sub
and
cmpsl
add
int
push
sub
add
mov
xor
add
jae
xor
ret
lods
pop
arpl
add
std
iret
sbb
push
mov
mov
adcl
sbb
xor
xchg
add
jecxz
fadd
xor
sbbb
sbb
inc
add
mov
leave
repz
ljmp
ffreep
insl
in
jg
jg
punpckldq
arpl
cltd
int3
rclb
inc
adc
inc
aaa
js
stos
sbb
add
pop
jge
mov
jbe
jo
add
movsb
push
out
int3
cmp
pop
xchg
and
add
jo
cltd
icebp
xor
push
or
into
mov
pop
add
inc
daa
data16
and
mov
insl
fidivrl
inc
add
jbe
push
bound
add
loopne
lahf
jle
jne
and
dec
ljmp
mov
dec
cmp
ss
push
pop
or
push
jo
rcr
fistpll
add
xor
dec
add
sub
imul
add
mov
add
sbb
dec
xor
adc
push
ds
rcr
dec
pop
mov
add
inc
outsb
mov
aas
test
cli
pop
imul
cmpb
xchg
and
scas
sub
jmp
add
loop
clc
push
cmpsb
and
and
add
pop
mov
out
mov
pusha
mov
adc
out
test
in
sahf
push
insb
lcall
not
add
lret
jnp
cmp
roll
dec
insl
pusha
ss
xchg
cmp
std
stc
push
fsub
decb
subb
fidivl
loopne
add
cmc
movsb
inc
out
adc
fcompl
cmp
ret
or
xchg
shrl
inc
add
lods
xchg
add
or
test
mov
loope
or
cmp
out
ds
add
test
add
sti
enter
fcompl
pop
out
pop
add
push
lock
pop
notb
repz
mov
push
inc
ljmp
xor
xor
lds
add
scas
jg
jle
add
adc
push
rcrl
ret
sbb
and
inc
fdivrl
aam
jecxz
fstl
dec
das
inc
pop
jb
adc
inc
aas
mov
lods
inc
add
jle
in
cwtl
dec
pop
push
mov
fildl
xchg
enter
push
mov
shlb
repnz
std
aam
outsl
sbb
and
add
pop
mov
orl
pop
lock
cmp
rorb
mov
jnp
icebp
or
add
add
jmp
insl
mov
out
es
outsb
rol
add
lock
lock
pop
shlb
add
mov
mov
and
xchg
lods
enter
sbb
sbbb
ljmp
jo
xor
jno
in
mov
sub
jo
insl
add
mov
cmp
orb
lret
push
xchg
mov
pop
out
in
jo
pop
stos
adc
mov
sbb
shrl
mov
sbb
mov
xchg
mov
add
imul
add
clc
cmp
fstps
push
je
jns
lret
add
add
in
add
fwait
xor
or
add
cmp
add
and
ja
add
lahf
pop
and
or
mov
add
xchg
mov
and
in
lcall
bound
fsubr
jne
sbb
mov
cmp
mov
cmp
mov
inc
mov
mov
jo
jp
popf
repnz
push
cmp
cmp
out
lcall
xchg
or
stc
jmp
xchg
mov
or
or
in
and
add
jb
jnp
pop
xor
insb
xchg
add
and
push
cmp
push
addr16
popf
pop
and
aad
sbb
repz
add
pop
ret
jns
and
xchg
adc
jmp
add
push
imul
rclb
fidivrl
add
imull
inc
xor
or
or
add
push
int3
hlt
push
divb
imul
pop
rorb
enter
mov
sub
add
das
hlt
pop
or
pop
aaa
adc
and
test
cmp
rcll
aas
shll
mov
and
add
xlat
add
dec
inc
addl
jl
mov
add
cmp
dec
add
in
movsb
sub
pop
jae
iret
sub
repnz
sbb
pop
test
push
nop
aam
lahf
popf
sub
and
xchg
push
xor
add
addr16
cmp
pusha
int3
int
cli
loope
xor
mov
pop
loop
add
js
cmp
test
or
adc
add
mov
adc
add
in
pop
inc
fmuls
shlb
cmc
add
sub
out
faddl
in
loope
push
cltd
imull
push
pop
dec
test
hlt
int
ds
dec
test
jmp
mov
repnz
repz
into
xor
leave
popa
or
sub
mov
add
adc
dec
add
mov
pop
sbb
lret
lock
add
pop
cmp
ss
adcl
pushf
lea
add
and
push
add
or
xor
push
arpl
cmc
imul
sbb
jg
xor
cmp
jecxz
xor
add
lcall
clc
lods
jle
mov
push
add
pop
adc
add
lds
mov
movsl
mov
jbe
loopne
fdivrl
or
cmpsb
dec
dec
cld
sti
ja
popf
kxorw
lods
mov
sub
daa
lret
add
add
add
xor
add
mov
jmp
out
add
cmp
or
xchg
add
fiadds
jo
add
pop
adc
add
dec
inc
outsb
call
lea
fcmovnb
mov
das
xchg
jecxz
mov
cmp
sbb
addr16
imul
add
shlb
std
mov
mov
mov
call
adc
jnp
lea
add
filds
push
xchg
mov
push
add
repnz
jge
mov
add
or
or
cli
test
cld
sarb
loope
adc
rorl
insl
cwtl
cmpsl
xor
mov
fildl
ret
xchg
jae
aam
cwtl
or
cmc
sar
popa
inc
call
mov
insb
enter
add
add
fmuls
add
xor
ljmp
mov
xchg
fstpl
je
add
js
xchg
cltd
out
repnz
cli
loope
bound
push
movsl
jp
xchg
sub
add
adc
shlb
rcrl
rol
inc
dec
sbb
sbb
xchg
xchg
add
or
xchg
lock
or
test
sbb
add
je
cmc
inc
bound
push
loope
aad
popa
test
add
lret
insb
ret
and
data16
jno
loopne
movb
inc
mov
jecxz
xchg
add
in
aad
ja
add
dec
fildl
cwtl
add
dec
rcl
dec
gs
mov
imul
jp
cmp
les
mov
nop
rcr
jb
movsl
add
aam
pop
add
cli
clc
cmp
nop
add
and
in
sbbl
jnp
mov
insb
std
pusha
fwait
and
and
stos
cmp
adcb
scas
mov
popf
call
mov
add
pop
pushf
adc
dec
ret
mov
arpl
jl
dec
push
xor
or
dec
sbb
xchg
xchg
cmp
movsl
pop
inc
or
add
pop
cltd
xlat
or
add
or
arpl
xor
hlt
add
jo
repnz
lock
ret
shlb
mov
fisubrs
dec
adc
add
jb
icebp
or
xchg
aaa
add
fists
jge
dec
js
jbe
inc
pop
push
add
jmp
fistpll
sbb
stos
and
out
out
insb
pop
aas
push
jo
dec
xchg
xor
add
mov
sarl
xor
cmp
lret
xor
daa
fs
icebp
enter
in
add
push
jg
add
imul
xchg
ds
arpl
push
lahf
jno
add
movsl
out
str
inc
adc
fildl
lea
dec
and
mov
or
pop
rcrb
js
push
je
pop
lods
and
jbe
or
xor
rolb
sbb
mov
sbbb
cmc
xchg
aas
push
adc
outsb
andb
add
cwtl
sub
push
lock
lcall
faddp
sub
into
pop
int
rorl
lods
add
mov
add
push
mov
sahf
mov
jne
jl
add
and
mov
jo
sbb
add
mov
pop
push
shll
xlat
xchg
test
mov
mov
push
cmp
sub
push
push
stc
fdivs
das
rep
les
dec
xor
cmc
scas
xorb
inc
into
rcrb
push
or
iret
jnp
add
add
testl
add
mov
pop
fldcw
data16
jns
mov
cmp
sub
js
je
inc
loopne
xor
add
out
xor
imul
mov
add
rorl
sbb
out
gs
dec
add
les
xchg
pop
jge
jns
loopne
sbb
and
inc
sbb
push
dec
or
sti
pop
add
jmp
sarb
adc
out
xor
movl
sbb
pop
stos
hlt
or
mov
and
pop
cltd
cmp
je
addb
sbb
add
xchg
lock
mov
add
pop
sti
push
clc
fistpl
dec
test
call
sbb
mov
shll
cwtl
or
xchg
std
and
pop
ljmp
add
and
sar
movsl
add
pop
cwtl
push
cmp
mov
xchg
add
mov
bound
mov
inc
mov
and
add
cmpsl
arpl
mov
add
fdiv
add
jl
aam
int3
add
psrld
mov
mov
cltd
and
add
add
lods
insl
inc
add
pop
pop
ss
push
jnp
stos
or
add
std
add
test
dec
cli
and
pop
xchg
cmovo
mov
adc
mov
bound
mov
mov
and
xchg
xchg
pop
cmp
test
add
xchg
jmp
xor
add
xor
mov
mov
cwtl
ret
adc
nopl
jo
inc
add
jmp
add
dec
sbb
out
repz
test
mov
pop
xchg
jecxz
xchg
push
mov
jns
mov
add
outsb
daa
shr
xor
add
mov
xor
push
arpl
or
xor
mov
jmp
mov
jp
adc
pop
or
jno
adc
mov
jmp
insb
ja
and
cmpps
pop
stos
fbstp
add
adc
jl
loopne
cmp
testb
insb
push
adc
subl
out
add
fidivl
add
jae
cmp
movb
inc
rol
mov
clc
iret
aaa
push
add
push
ja
insb
scas
lods
jo
imul
jne
sbb
iret
lea
add
scas
bound
mov
push
or
add
es
arpl
push
jecxz
cmp
leave
pop
sbb
jno
push
movsl
jmp
sarb
out
fimuls
gs
jl
xchg
int3
frstor
stc
cmp
xor
mov
sbb
push
add
jbe
repz
movsb
scas
sbb
cmpl
jae
jnp
add
mov
xor
push
loope
add
sbb
jno
ja
fs
mov
daa
arpl
ror
add
add
cmpsb
test
nop
inc
cmpl
xor
ss
lahf
fistl
xchg
and
loope
add
test
scas
loop
mov
nop
into
add
or
fdivrp
pop
add
inc
cld
pop
or
cmc
cs
add
ss
add
or
mov
add
outsl
nop
xor
adcl
sub
dec
add
push
inc
pop
mov
sbb
cmpb
add
dec
sub
scas
aaa
int3
and
pop
mov
mov
xchg
mov
or
jg
pop
lea
andb
jp
sahf
push
push
stc
sbb
test
decl
dec
je
lret
repz
js
cmp
ss
loop
jp
adc
stos
jg
jns
hlt
mov
add
outsl
mov
lock
stc
cltd
xor
mov
add
pop
cmp
inc
pop
xor
jp
push
cli
sub
add
mov
aas
fsubrs
data16
cltd
sbb
add
jne
add
or
lcall
add
add
ror
xchg
sbb
or
pushf
in
sbb
leave
js
sub
arpl
xlat
test
cmpl
jl
test
sbb
repz
in
les
out
or
push
add
mov
jae
aad
lret
push
hlt
addb
jmp
mov
dec
adc
idivl
call
adc
sbb
popl
lret
jecxz
pop
divl
adc
xchg
iret
les
or
stos
js
add
ss
inc
subl
pop
fistl
xor
rcr
jg
add
sbbb
cwtl
adc
add
imul
mov
shr
call
int
mov
mov
cmp
shlb
sbb
fdivrs
cld
imul
icebp
push
mov
cmpsl
add
lret
dec
out
insl
jp
add
es
enter
xchg
inc
out
lret
xor
cmp
lahf
sbb
pop
jmp
int
add
rcl
jp
cmpl
lods
fcomps
ja
add
ljmp
add
out
push
frstor
cli
xchg
shlb
mov
add
add
outsl
add
setg
pop
loope
mov
test
stos
add
sub
add
lods
sbb
mov
ja
aam
and
dec
jl
mov
faddp
jb
outsb
xor
fnstenv
dec
or
rolb
call
outsl
add
add
pop
push
daa
sahf
fistps
or
shrb
dec
add
loop
ja
xchg
and
push
jbe
mov
sbb
mov
inc
aam
sbb
pop
bound
pushl
xor
leave
dec
sub
and
mov
in
add
inc
xchg
pop
addr16
cltd
or
sub
cwtl
leave
ljmp
push
aas
jmp
xchg
xor
push
pop
pusha
add
addr16
jle
and
adc
add
pop
cwtl
and
lret
xor
sarl
popf
shlb
stos
sbb
inc
add
or
pop
iret
xchg
xchg
fcmovnb
leave
js
push
add
dec
imul
aam
sbb
fs
cmp
and
push
or
adc
mov
mov
mov
mov
jns
push
fiadds
out
sbb
pop
stos
sub
enter
add
repz
aaa
add
and
leave
loope
jbe
adc
adc
sbb
inc
mov
add
xchg
dec
sbb
cmp
les
adc
jecxz
add
xlat
add
mov
mov
daa
bound
in
pop
add
fisubs
jl
sub
push
jge
adc
inc
add
mov
or
xchg
and
fbld
mov
cmp
add
in
loope
add
pop
mov
mov
add
movsb
bound
dec
lods
sub
pop
mov
xor
add
outsb
addb
or
rorb
test
adc
loopne
sub
dec
fsubr
cmp
inc
and
add
lret
sub
add
int
stos
addb
es
and
add
adc
mov
icebp
jg
stos
add
addb
lods
test
andb
and
add
xlat
loop
mov
in
sub
test
mov
xor
arpl
ss
test
and
add
add
dec
fimuls
outsl
orb
xor
cmc
rcl
into
pushf
repnz
js
sub
dec
add
push
and
add
mov
add
mov
add
add
mov
rolb
imul
push
je
pop
bound
pop
js
imul
fdivr
xor
icebp
sti
test
cwtl
in
mov
loopne
and
jmp
mov
jne
xor
sbb
xchg
insb
out
fcomi
cli
add
les
sbb
ss
add
loope
icebp
add
rcll
sbb
mov
pop
ljmp
leave
add
adc
testl
dec
mov
in
je
hlt
in
or
clc
add
xlat
sarb
mov
pop
inc
or
adc
pop
jg
fildl
pusha
dec
mov
add
push
push
fcompl
std
jo
and
into
loopne
sarl
cmp
inc
sub
or
add
sahf
sub
inc
pop
mov
mov
adcb
push
fdiv
lret
inc
add
cld
xchg
sti
test
data16
cmpsl
popa
add
dec
mov
lea
add
cmp
jle
inc
ja
add
iret
add
ret
aas
shlb
dec
pop
or
dec
iret
and
sbb
adc
dec
add
sbb
daa
aad
add
and
sbb
fisttpll
pushf
aam
mov
push
repnz
xchg
enter
add
push
xor
inc
pop
xchg
sarl
add
sub
les
push
sbb
cmp
adc
or
lret
enter
mov
shlb
sbb
pop
or
xor
cmpsl
push
cmp
roll
push
lret
fwait
out
mov
xchg
daa
inc
xor
push
add
mov
add
aad
mov
mov
stos
es
lock
push
add
add
jns
pop
incl
bound
xor
add
jne
aam
dec
push
mov
add
or
lock
pop
add
jp
push
dec
rorl
mov
orb
cmpsl
shlb
push
addl
inc
xchg
hlt
pusha
add
fildll
cmpsb
xchg
loope
and
in
cmp
fisttpll
jle
loopne
jnp
lods
add
ds
cmpsb
and
movsb
mov
add
sti
popf
mull
ficoms
add
jae
xchg
loope
add
ret
in
iret
cmc
mov
and
mov
push
pop
add
pop
cmp
insl
add
nopl
fiaddl
xor
adc
or
inc
xchg
daa
hlt
xchg
ds
leave
sbbb
mov
xlat
shl
add
movb
ficoms
pop
add
mov
and
aaa
push
pop
orb
or
sbb
loopne
or
add
xchg
stos
clc
push
add
or
cmpsl
lock
add
and
bound
jno
add
xor
add
les
pop
jno
and
int
daa
popa
mov
enter
loop
inc
imul
addl
pop
adc
push
int3
test
fsubrl
mov
add
pop
movsl
add
add
ds
mov
push
sub
xchg
mov
add
sbb
lcall
pop
and
add
xor
lods
add
mov
insl
sbb
mov
adcb
insb
sub
inc
add
outsb
stos
out
add
sub
add
sqrtps
push
popa
lcall
add
mov
push
mov
add
and
xchg
add
dec
aam
sub
mov
test
repz
sbb
movb
mov
pop
add
lret
sub
add
fsubr
cmp
cmp
ss
imul
push
stc
std
repnz
fldl
add
cmpsl
and
into
jg
and
or
add
xor
sub
cs
inc
fisttpll
pop
sbb
test
add
add
adc
xchg
mov
mov
add
or
mov
outsb
lcall
lahf
add
xor
repz
test
xlat
add
enter
pop
mov
mov
das
sarb
les
rcrl
pop
lock
inc
add
bound
dec
movsl
add
add
aad
cli
dec
cs
add
lock
xchg
pushf
idivl
adc
fidivrl
dec
dec
push
call
clc
ja
movb
or
jecxz
mov
je
cmp
sbb
jb
mov
cmpb
push
add
pop
in
xor
add
xchg
dec
test
add
inc
mov
jne
movsl
mov
sbb
faddl
mov
and
or
cmpl
bound
loopne
popf
aas
add
mov
or
lret
mov
mov
ret
icebp
cmp
inc
mov
cmovs
in
cwtl
add
sub
subb
mov
mov
js
add
xor
mov
mov
scas
cmp
lods
jbe
lcall
clc
pop
or
sti
adcb
lods
mov
pop
imul
cltd
bswap
cli
out
subl
push
add
mov
cmp
xor
stos
mov
ret
movsb
mov
dec
shll
jmp
or
mov
ljmp
dec
sbb
push
mov
sub
loope
add
pop
or
test
lock
add
jo
push
insl
daa
add
sbb
sub
add
push
inc
dec
icebp
in
inc
ja
inc
lret
pop
int3
movl
sub
xchg
aas
xchg
jns
fnstenv
bound
dec
inc
out
jns
mov
aam
iret
jne
mov
dec
dec
mov
xchg
mov
mov
fwait
pop
jp
stos
shll
pop
bound
sub
jle
add
xchg
add
xchg
jmp
xchg
fiaddl
or
adc
or
inc
add
sub
add
mov
add
insb
test
rolb
stos
pop
jo
push
mov
mov
popf
push
mov
notb
adc
xor
in
js
rolb
stos
push
jnp
add
adc
add
enter
sbb
aad
inc
imul
sbb
add
xchg
xchg
imulb
cmp
xchg
add
ds
dec
mov
lret
pop
cmp
arpl
push
das
add
loope
pop
leave
mov
fdivr
je
pushf
jp
add
adc
fidivs
push
jmp
addb
mov
call
aaa
repnz
sub
fwait
sti
push
cmp
jmp
icebp
jbe
mov
push
xor
cmp
cmp
sub
adc
call
dec
fwait
sysexit
mov
mov
mov
mov
cmp
pusha
loop
enter
in
in
jno
cmpsb
jg
lds
rcl
push
adc
ret
cmp
add
jbe
lahf
cmp
lret
sub
add
rolb
sarb
mov
test
pop
push
mov
add
js
and
fistps
cmpsl
or
loope
add
xor
push
sbb
cmp
addb
sahf
mov
mov
add
sbb
adc
cmp
icebp
subb
sahf
lock
push
add
lcall
insb
push
sub
test
int
dec
adc
push
mov
xor
and
mov
cmp
mov
mov
xorb
test
lds
jb
mov
add
mov
lods
rcl
lretw
jge
mov
js
cmp
ss
push
adc
add
fs
dec
sbb
mov
jo
inc
outsl
inc
and
xor
add
cmc
dec
shrb
into
bound
fs
add
ljmp
loopne
ret
cld
clc
out
aas
aad
mov
pusha
out
data16
sub
sub
xor
sbb
dec
fcoml
les
pop
add
pop
into
add
push
sub
psrad
cmp
loopne
pusha
mov
jp
add
cmp
mov
mov
repnz
movsb
repz
add
flds
xchg
push
arpl
ret
add
inc
nop
push
xor
aad
outsl
cmpsl
int3
rcrb
test
pop
pop
pop
jb
cmp
rcl
call
lea
movb
inc
das
jecxz
inc
cmp
mov
pushf
jb
push
jp
add
call
xlat
inc
push
ret
xchg
xchg
cmp
adc
pop
aam
mov
sarl
mov
std
mov
mov
ja
fidivl
out
gs
cmp
fdivs
add
mov
push
mov
lret
pop
and
mov
in
mov
cmpsl
pop
and
dec
jle
cmp
add
inc
mov
ret
add
jmp
clc
call
and
sbb
ss
out
mov
jns
arpl
xor
mov
sbb
push
add
shrl
aam
fucom
pop
add
mov
add
dec
cltd
add
fcmovb
pop
mov
in
or
xchg
popa
mov
sub
call
lret
ja
cld
add
test
loope
mov
xchg
cmp
sbb
mov
imull
cli
xor
mov
xchg
pushl
fists
add
sbb
push
adc
fwait
dec
or
inc
or
xchg
repnz
pop
pusha
out
in
add
ja
pop
xchg
jp
mov
ret
mov
neg
xchg
mov
jns
add
out
jns
jl
bound
mov
out
mov
das
mov
mov
jecxz
mov
add
xchg
lahf
fdivl
jp
in
addr16
pop
test
jne
pop
out
add
andb
push
inc
jmp
lods
shrb
pusha
outsl
mov
add
jnp
in
pop
imul
adc
add
push
loope
fs
popf
inc
aam
push
cwtl
cli
addr16
shlb
sbb
dec
sbb
add
movsl
dec
iret
mov
les
add
addr16
xchg
and
scas
add
pop
or
sbb
gs
inc
stos
jmp
add
push
or
sbb
arpl
add
sub
leave
pop
xor
call
mov
add
xor
dec
fiadds
fmuls
pop
cmp
ds
add
cmp
sub
pop
mov
addr16
push
daa
sub
add
xchg
jbe
xor
push
addb
pop
movsb
fcomi
sub
and
jnp
add
loope
xor
push
insl
test
dec
jecxz
xorb
jno
arpl
cmp
mov
aam
enter
in
das
pusha
pusha
cmpsb
add
int3
add
mov
fisubs
adc
adcb
into
lahf
push
cwtl
inc
add
ss
ja
ds
scas
push
cmp
in
sub
add
mov
add
imul
xor
outsl
stos
add
mov
scas
sbb
in
ds
jmp
sbb
add
outsb
jno
shrb
jne
add
out
or
adc
pop
pop
inc
pop
sarl
sub
sbb
mov
inc
add
add
push
mov
sbb
add
adc
adcb
cld
ficomps
sbb
mov
add
imul
popa
inc
testl
fdivl
jle
inc
jno
movlps
aam
stc
imul
and
add
test
pop
add
mov
inc
add
or
push
ja
lods
add
fnstenv
in
cli
mulb
jns
push
add
daa
add
inc
inc
or
add
dec
adc
sub
add
les
adc
jae
sbb
cmp
inc
gs
or
popf
add
xchg
sti
xchg
ja
in
leave
add
mov
inc
add
js
in
adc
sbb
mov
in
ds
xor
xlat
aas
xor
or
movsb
inc
pop
push
dec
cmp
arpl
adc
aad
add
inc
jmp
add
pop
pushf
mov
ss
inc
push
mov
inc
pusha
dec
call
lea
inc
adc
cmpsb
adc
cltd
lods
dec
jo
jmp
jb
sbb
aas
or
scas
add
fistpl
pop
pop
mov
rorl
iret
xor
add
push
sub
mov
aaa
enter
je
std
gs
mov
stos
shrl
shrb
popf
mov
mov
add
mov
mov
shlb
pop
cld
or
lret
xchg
es
pop
fiaddl
icebp
jmp
pusha
mov
cmpsl
pop
mov
popf
cmp
movups
rorb
aam
jae
sub
in
shr
clc
pop
add
addr16
or
and
xchg
mov
daa
lods
test
inc
sub
addb
xchg
add
aas
clc
rorb
fldl
push
jb
mov
add
scas
test
mov
mov
dec
add
call
add
mov
or
jg
into
xchg
xor
push
add
sahf
xchg
lret
dec
out
sub
mov
xor
ss
or
dec
add
lret
call
or
je
add
xchg
mov
into
fwait
jnp
xlat
cmc
or
shll
test
ja
sti
out
add
imul
mov
lret
frstor
lods
jns
and
gs
out
mov
cs
mov
adc
dec
mov
jno
mov
push
mov
mov
movnti
adc
mov
mov
pop
sbbb
addb
add
push
mov
xchg
xorb
dec
and
cs
or
cmp
scas
jb
add
mov
insb
jg
in
add
mov
push
stos
std
lock
insl
mov
popf
insb
add
xchg
std
add
xchg
sbb
jb
add
sub
adc
jo
fisubl
pop
scas
fwait
inc
outsl
imul
ljmp
jo
aas
ficompl
fistl
push
or
sbb
cs
hlt
ja
jmp
adc
sbbb
add
dec
mov
inc
inc
call
std
fidivrs
adc
add
je
xor
cld
add
stos
or
jle
aaa
jo
test
sbb
out
jge
add
push
rcrl
jnp
movsb
dec
cld
adc
push
lahf
sbb
add
cmp
xor
sbb
dec
inc
xchg
jl
clc
add
jno
aaa
data16
mov
and
fwait
in
faddl
cld
cmpsb
test
mov
test
xor
add
cmpsl
lahf
jbe
out
and
sarl
sub
add
adc
cmp
rorb
sub
mov
lahf
fs
sti
add
pop
shlb
js
cmc
push
test
add
addr16
or
add
aam
add
out
popf
sbb
clc
lcall
dec
imul
adc
aam
std
sub
add
fcompl
push
fucomip
dec
pop
pop
add
lret
mov
int
sbb
add
mov
dec
lock
sub
inc
mov
mov
mov
loop
cmp
add
lods
test
lret
fistl
jns
add
loopne
roll
into
dec
lret
test
fcomps
scas
and
mov
mulb
mov
stc
and
sub
incb
xor
add
mov
sarl
stos
xchg
add
lods
ret
sub
test
cmp
iret
push
inc
loopne
vmread
add
insb
add
lods
inc
adc
jb
pop
imul
out
int3
pop
fiadds
negb
xlat
jnp
cmp
ret
sar
shlb
in
xorb
mov
sub
jb
pop
cmp
jmp
add
add
pop
flds
jbe
add
push
xchg
dec
ret
or
mov
add
jmp
popf
or
lock
mov
add
lea
jp
sahf
add
jecxz
sub
into
arpl
fmulp
jb
add
jle
stos
and
push
push
jbe
inc
and
or
cmp
adc
dec
push
mov
test
mov
fsubs
add
or
ret
idivb
push
lret
pop
sarl
lods
and
rcr
jo
xchg
add
xchg
fadds
scas
sbb
scas
or
inc
xor
or
add
fmulp
in
icebp
add
outsl
gs
pop
loop
mov
je
jl
jmp
inc
adc
ret
jg
add
sub
mov
cmp
mov
and
test
xlat
pop
sub
inc
gs
lret
daa
clc
or
test
dec
sub
mov
sub
add
aaa
push
cltd
outsl
pop
add
add
clc
add
mov
pop
jnp
jo
add
pop
xchg
pop
jo
add
sbb
add
test
dec
dec
dec
je
inc
xchg
data16
push
pop
sbb
in
clc
xor
mov
ss
cmp
add
cmpsb
sub
pop
add
jecxz
inc
add
xor
ja
lahf
add
pop
std
pop
sub
mov
adc
and
cs
es
jno
je
loopne
shr
insl
verr
jne
add
repz
mov
in
sbb
sbb
add
jp
inc
lret
addr16
push
adc
out
daa
inc
xor
push
sbb
mov
push
jns
fildll
andb
out
imul
add
mov
cwtl
cmp
insb
add
scas
add
enter
add
jns
pop
sub
int3
in
xchg
adc
push
add
jb
sahf
jno
inc
add
mov
pop
sbb
xor
adc
orb
push
es
xor
lods
imul
ficoml
push
inc
test
outsl
jno
mov
add
mov
arpl
ret
leave
and
xchg
mov
aad
cld
add
mov
lds
addr16
ficomps
enter
lret
dec
fstl
xchg
mov
or
das
insl
sub
int3
cmp
cmp
push
and
add
cmp
outsb
add
in
loope
test
stos
cmpsb
xor
add
mov
dec
mov
fcoms
adc
mov
pusha
jbe
daa
pop
add
arpl
cmpsb
dec
or
call
jmp
or
add
ret
das
lahf
xchg
xor
push
insb
and
movsl
mov
push
lea
loope
xor
fldt
mov
pop
xorps
addr16
cmp
pop
mov
sub
add
cli
add
push
incl
jle
ja
lahf
push
or
shlb
mov
lods
xchg
sub
jne
sbb
sbb
cmp
pop
loopne
ret
sub
jns
loop
sbb
add
mov
pop
add
mov
fisttpll
jge
shrl
out
lcall
daa
test
sbb
faddl
and
fsub
js
inc
push
pop
mov
loop
mov
cmpsb
inc
aaa
sub
cltd
ss
and
adc
fs
add
fsts
add
outsl
fstpl
xor
jns
insb
cmc
mov
jmp
add
cmp
cmp
add
pop
nop
insl
out
fwait
push
mov
shrb
leave
dec
xor
adc
adc
imul
std
adc
jb
jo
inc
mov
add
out
mov
in
add
test
sub
lret
xlat
decb
cmpl
sbb
cmp
jbe
add
push
push
flds
cmp
inc
test
xchg
and
add
inc
pop
add
cs
pusha
jmp
in
push
jge
adc
and
stos
sbb
movl
lea
jnp
xor
mov
les
movsl
loopne
xor
jb
push
aas
ss
add
outsb
and
inc
push
pop
jo
add
sub
mov
leave
jp
loopne
ds
add
insl
cwtl
sub
std
mov
sbb
jnp
add
add
and
add
mov
mov
jne
out
lock
mov
lret
jb
dec
cld
insl
xchg
or
icebp
cltd
jp
mov
cmpsl
pop
mov
dec
outsl
mov
add
xor
es
repnz
repz
pop
test
sub
xchg
and
movsl
imul
mov
clc
add
scas
push
mov
add
repnz
stc
imul
add
pop
fst
mov
cmp
test
adc
xchg
psubusw
add
ss
out
push
dec
enter
lds
add
sbb
lea
or
mov
jge
add
add
push
fwait
cmc
xlat
or
xor
hlt
sub
pop
rclb
add
push
stc
test
out
mov
pop
inc
and
pop
pop
dec
ficomps
ja
mov
fdivrs
adc
insb
iret
adcb
cmp
push
mov
inc
inc
jae
lods
out
dec
add
xchg
mov
cli
or
imul
imul
mov
out
adc
jp
xchg
rorb
insb
pop
sub
xor
or
incl
xchg
jmp
es
fisttps
cmpsb
shl
inc
jns
jle
cmc
cwtl
addr16
mov
adc
fbld
inc
dec
push
sahf
add
sbbl
push
xor
xchg
add
add
ret
int3
pusha
iret
shrb
adc
or
push
push
sti
adc
and
mov
rcll
fiaddl
pop
inc
rorb
sbb
and
inc
and
xor
add
lock
cltd
mov
dec
or
jnp
movsb
stc
xchg
faddp
push
xchg
ret
pop
inc
rorl
int3
dec
mov
cmpsl
mov
add
out
mov
sbb
add
sbb
pop
int3
clc
movsb
jl
nop
cmp
js
adc
add
sub
xor
push
push
movsl
popa
dec
sub
xor
add
or
arpl
fldl
daa
pop
outsb
add
insb
in
adc
in
ret
std
cmpsb
mov
add
push
cli
push
aas
lock
sti
mov
push
and
mov
movsl
daa
add
jmp
pop
mov
cmp
or
sub
or
add
fiadds
push
es
dec
shlb
js
adc
jo
in
add
xchg
xor
add
test
inc
iret
push
xorb
faddl
ss
adc
add
xchg
stos
fcompl
push
pop
mov
inc
out
pop
les
iret
or
hlt
jns
xorl
jnp
and
xor
mov
or
cmp
and
or
outsb
imull
lret
mov
mov
and
ss
nop
idivl
xchg
xor
cmp
push
add
dec
adc
add
stc
nop
fsubs
outsl
add
xor
add
push
call
shlb
cmp
mov
ljmp
cmp
cmpsb
pop
mov
popf
xchg
lods
xor
data16
add
add
sbb
xchg
add
lods
imul
sbb
jnp
or
dec
mov
pop
sti
sahf
add
jns
or
outsl
mov
sub
add
and
xchg
push
sbb
xchg
ljmp
sarb
bound
add
dec
pop
dec
add
nop
rcrl
push
shlb
jmp
add
cmpsl
pushf
mov
add
mov
ret
and
push
lea
loop
ffreep
movsb
cwtl
mov
add
sub
dec
add
sub
clc
aas
call
mov
inc
xor
pop
add
aad
fistpl
dec
add
gs
shrl
mov
dec
sbb
jl
adc
std
pop
add
idivb
push
int
add
pop
and
inc
push
add
das
push
pslld
xor
lahf
xchg
lret
loope
sar
cwtl
xorl
in
push
add
push
and
insl
mov
fwait
es
inc
push
add
popf
push
pushf
aam
or
add
mov
jb
fs
push
pop
les
stos
and
out
add
mov
lds
adc
ljmp
mov
cli
sbb
mov
pop
cmp
or
jne
fldt
incb
add
push
jb
xchg
add
mov
lret
mov
int
pop
push
rcl
in
add
sbb
jp
add
add
test
lcall
sbb
add
lds
mov
xor
bswap
or
and
inc
jbe
aas
scas
popf
jo
jo
dec
add
add
or
sbb
xorl
add
cmp
jae
pop
pusha
xor
cltd
mov
decl
in
push
add
divl
bound
xchg
add
out
sub
mov
mov
add
mov
pusha
rcrl
call
mov
dec
add
jp
jns
addr16
dec
in
jmp
adc
adc
popa
mov
sbb
jmp
add
and
stos
test
add
jo
in
pop
mov
prefetcht2
insb
rolb
int
add
rclb
frstor
mov
pop
sbbb
cmp
mov
mov
pop
ret
adc
repnz
add
add
mov
sub
in
cs
dec
add
mov
insb
inc
addl
inc
push
fiadds
push
arpl
pop
cmp
pop
add
mov
bnd
mov
mov
xchg
psllw
fisubs
ljmp
jmp
add
mov
dec
and
lods
addb
jge
hlt
add
cli
push
add
fimull
movsb
pop
or
and
loopne
scas
inc
add
ret
rolb
fsts
aad
cltd
lahf
cwtl
add
jo
pop
mov
cmp
mov
add
popa
in
stos
cli
inc
cmpsb
push
add
inc
gs
ja
or
out
dec
test
into
add
in
mov
rorb
add
add
sub
xchg
fiadds
loope
adc
add
int
js
test
pop
or
mov
filds
sbb
shll
add
ja
inc
outsl
xor
outsb
std
inc
fisubrs
das
add
fcompl
add
loope
inc
add
shrb
outsl
jmp
insb
add
pop
aam
jg
clc
add
in
into
lock
enter
mov
std
ljmp
sahf
rorb
add
xorl
idivl
jg
add
js
inc
ss
add
or
aas
xor
inc
mov
outsb
add
xchg
or
cmc
xor
push
pop
into
roll
ss
add
sbb
xor
out
mov
add
test
add
xor
xchg
add
adc
adc
in
insl
pop
shl
loopne
push
cmp
sar
ss
sti
dec
add
andb
adc
stc
xlat
jl
sbb
cmp
out
sbb
xchg
add
fld
add
out
cmpsb
mul
inc
stos
scas
cmp
dec
fisttps
nop
pushf
and
add
shl
dec
jbe,pn
xor
jmp
fnstenv
inc
xor
cmc
sbb
gs
inc
iret
call
lea
cmc
cmpsl
add
jecxz
or
bound
jb
sahf
sarl
adcb
mov
push
push
mov
add
jb
orl
pop
popf
cwtl
lahf
add
jmp
not
inc
xchg
shll
insb
and
or
mov
aam
enter
xor
lock
pop
lods
insb
mov
cli
test
add
fdivr
ret
lcall
mov
pop
cs
fstpl
out
subb
dec
rolb
or
ret
sub
sub
outsl
lock
sub
add
pop
jecxz
add
out
pop
adc
mov
clc
jns
lods
add
xchg
ljmp
std
inc
clc
mov
sbbb
xchg
int
aaa
add
sbb
out
push
cltd
adc
clc
es
inc
and
xchg
cmp
dec
push
push
add
xchg
fst
out
jl,pn
pop
stos
es
add
jno
dec
shrl
add
or
test
cmp
orl
sbb
enter
push
mov
sub
or
sbb
jmp
dec
xlat
sbb
mov
or
add
aas
mov
mov
mov
xchg
flds
faddp
dec
cld
rcrl
movsb
pop
xorb
mov
mov
lds
in
sub
add
or
ds
push
mov
dec
inc
xor
cli
or
and
mov
popf
add
jns
mov
inc
cmp
sub
out
mov
xor
jp
xchg
ret
jmp
xchg
int3
lds
lret
add
dec
xor
push
lahf
scas
add
fs
jno
insb
sub
loopne
and
bound
add
inc
sarb
popf
or
pop
jae
lock
inc
or
mov
add
mov
das
add
pop
scas
daa
adc
imul
out
mov
add
inc
fisubrl
mov
add
xchg
add
rorl
inc
sub
lds
hlt
mov
notl
add
into
sub
add
mov
insl
pop
cmp
pop
xchg
int3
and
jo
pop
jae
add
rorb
insb
shll
sbb
lods
sub
aad
inc
sbb
and
push
or
add
cmp
cmpsl
andl
sbb
add
insl
mov
add
sbb
fsubl
dec
or
repnz
jl
popa
pop
jno
add
ret
pusha
daa
pop
mov
mov
clc
cmpsb
rcrl
sub
push
aad
jnp
incb
push
push
mov
add
and
add
idivb
mov
push
lds
out
jae
xor
les
xchg
push
pop
jp
and
pop
add
xor
nop
jae
add
xor
sub
insb
jg
mov
mov
roll
add
pop
das
shlb
mov
add
outsb
pusha
std
in
sub
and
ret
mov
add
lcall
mov
int
movsl
test
call
mov
push
scas
xchg
mov
inc
add
jg
xchg
roll
test
call
add
dec
insb
repz
movl
and
sbb
push
testl
or
push
cmp
ss
xor
sar
dec
xchg
loop
mov
mov
add
jge
xor
or
inc
loopne
cmp
call
mov
and
push
mov
xor
pop
shlb
call
inc
adc
loop
imul
add
pavgb
or
push
sub
and
movsl
cmp
in
in
loopne
iret
inc
mov
cmp
add
mov
push
ret
cmp
xchg
test
push
mov
ss
inc
mov
adc
nop
add
pop
aad
jmp
fnstcw
cltd
ficompl
adc
inc
pop
les
sbb
mov
insb
mov
jecxz
stos
cld
shrb
dec
out
add
or
jb
add
aas
es
lock
mov
inc
sti
xor
add
mov
pop
outsl
add
mov
dec
in
loopne
pop
insl
fldl
std
test
push
testb
shll
add
into
mov
das
adc
lock
push
lods
mov
mov
pop
cld
out
pop
fmull
mov
pop
add
in
test
add
ret
mov
mov
push
add
or
pop
add
hlt
add
mov
xlat
dec
mov
lods
fwait
ret
push
popa
ds
ljmp
rorb
add
or
cmp
mov
fbstp
add
outsl
insl
cltd
dec
loopne
add
sub
mov
push
push
ljmp
out
xchg
adc
mov
insb
roll
push
add
xchg
int3
jecxz
daa
loopne
dec
add
fldenv
lret
add
stos
xor
lds
rorl
mov
mov
xor
aas
push
loop
insb
fwait
add
push
or
jae
pusha
mov
xchg
sbb
push
pop
add
jne
add
pop
daa
in
pop
add
bound
sub
call
mov
ljmp
dec
es
add
loope
cltd
incb
jge
add
jp
jl
addr16
mov
inc
jg
adc
cmp
addl
in
lea
jmp
xchg
lahf
pushf
ss
out
add
adc
in
dec
loop
add
mov
insb
add
inc
mov
ret
cmpsb
loopne
sub
mov
add
data16
adc
aam
stc
adc
movsb
iret
in
jae
adc
bound
adcl
xor
xchg
imul
scas
sbb
jl
xchg
sbb
sub
add
fs
inc
sub
add
arpl
pop
hlt
out
or
leave
add
or
repnz
imul
lds
addl
pop
pop
push
jl
fisttps
sbbb
add
test
sbb
mov
dec
bound
data16
mov
pop
ret
xor
sbb
test
andb
repnz
pop
scas
add
loopne
enter
pop
cs
mov
dec
jl
or
loope
add
pop
inc
daa
pop
shl
add
incl
cmpsb
adc
stos
inc
nop
add
ss
add
lahf
adc
mov
mov
ds
dec
pop
icebp
cmp
outsl
sub
inc
mov
push
stc
lods
popf
pop
or
cmp
jno
cmp
xor
out
es
add
xor
xchg
push
sub
add
and
sbb
pop
adc
ret
stos
add
fdiv
or
xor
iret
xchg
lcall
mov
pop
int
sbb
icebp
add
popf
test
mov
jno
aas
mov
mov
into
add
xorb
cmp
test
pop
scas
sbb
jle
rorl
lods
add
lret
mov
in
push
cmp
cmp
xlat
mov
adc
nop
xor
fs
lcall
jne
jp
pop
jecxz
xor
xor
fmull
fimull
mov
out
add
xor
cli
sub
mov
rcrb
add
adcl
imul
mov
add
gs
mov
or
stos
loope
mov
dec
mulb
scas
pop
cmp
sub
mov
cmp
add
xchg
inc
add
les
mov
fsts
xor
rclb
add
dec
popf
fdiv
nop
push
rcr
aad
pusha
push
add
cmp
aas
jmp
push
movsb
mov
mov
ja
and
inc
or
jmp
sbb
push
lods
pop
mov
je
mov
repnz
sbb
add
inc
fisubrl
loop
pop
cld
pop
es
fistl
and
add
mov
add
cwtl
adc
dec
mov
testb
sub
arpl
mov
nop
sbb
dec
das
sbb
in
lock
cwtl
mov
xchg
hlt
popf
mov
jge
cld
add
repz
cmc
or
cmpsb
mov
pop
jns
insl
add
es
repnz
add
stos
aam
cwtl
jge
add
out
rcr
fists
add
pop
mov
shlb
mov
aaa
lgs
push
data16
ljmp
or
clc
xor
add
push
cwtl
pop
add
test
iret
add
subb
inc
sbb
andnps
push
jmp
push
jle
out
hlt
mov
je
pop
or
dec
rcll
add
sbb
xchg
or
push
sub
adc
mov
or
fldl
pushf
xor
xor
mov
dec
add
fs
add
add
mov
test
lods
dec
add
mov
pop
jl
add
mov
js
add
xchg
mov
ftst
in
add
xchg
lea
xchg
add
out
enter
lods
mov
and
rclb
leave
in
mov
ljmp
mov
dec
lret
inc
loopne
addr16
cmp
adc
xchg
pop
mov
xchg
out
pop
pop
aaa
add
jb
jnp
add
icebp
in
pusha
lods
dec
xor
jle
xabort
adc
imul
stos
add
mov
mov
sub
ret
pop
int
pushf
pop
xor
scas
mov
add
adc
push
cmpsl
push
test
add
in
aam
imul
ja
add
add
xchg
dec
dec
stc
fimull
rolb
mov
or
inc
das
pop
pusha
arpl
mov
hlt
cmp
stos
leave
add
cwtl
bnd
ds
shl
pop
lds
or
fimuls
or
add
outsl
loopne
xchg
add
or
rclb
jae
sbb
rol
jbe
test
popf
push
movsb
add
push
shlb
pinsrw
jo
adc
xor
mov
loop
js
scas
in
jno
sub
push
cmp
fwait
push
daa
pop
fiaddl
mov
pop
dec
push
xchg
push
lock
adc
add
push
imul
test
push
inc
mov
lahf
xor
cmp
add
movsl
inc
adc
ds
bound
imul
sub
cmp
jo
pusha
xor
insb
in
notb
dec
fnsave
rolb
add
xchg
add
add
aas
pop
mov
jo
test
add
jl
add
and
outsb
es
fsubrs
cld
add
clc
lcall
dec
or
add
scas
in
int
dec
cwtl
push
add
push
fnstenv
repz
xor
jg
add
orb
test
add
sahf
push
mov
sbb
shll
adc
lret
ja
or
add
jno
mov
subl
imul
adc
sahf
jnp
add
dec
and
or
outsl
cmp
pop
inc
ret
in
cmc
jno
aas
mov
and
or
push
mov
jns
mov
cmp
out
xor
push
or
fsubrs
push
ss
adc
dec
adc
pop
cwtl
roll
xchg
loopne
mov
mov
jle
add
pop
mov
jbe
add
insl
dec
sub
xlat
add
mov
cmp
ljmp
repz
mov
les
pushf
flds
dec
mov
push
dec
add
movsb
test
add
loop
jmp
push
stc
and
addr16
imul
pop
sub
idiv
call
add
pop
mov
lods
jecxz
rsqrtps
je
jmp
dec
add
and
aas
add
inc
cmc
mov
add
pop
lahf
jae
fistpl
add
dec
in
mov
adcl
add
mov
sahf
outsl
cwtl
add
fcompl
std
mulb
pop
inc
rcll
je
out
or
mov
mov
shrb
mov
xchg
push
ds
add
frstor
icebp
jno
idivb
cmpsl
push
mov
dec
pop
push
sbb
insl
push
adc
es
adc
lcall
sub
sbb
mov
add
inc
popf
adc
and
jnp
mov
lods
jno
inc
push
insb
aas
add
xchg
imul
push
push
fstl
pop
ljmp
test
cmpb
pushf
jmp
add
xchg
push
lfs
dec
push
add
rorl
cltd
in
out
add
cmc
stos
xrelease
push
sbb
in
add
test
pop
testb
or
add
hlt
push
or
scas
iret
mov
call
sub
add
push
cmpb
fwait
add
mov
pop
mov
ja
pusha
cmc
pop
pop
push
cli
mov
mov
dec
and
in
lret
in
stos
mov
lss
push
add
cmpsl
out
add
push
mov
lret
pop
fdivrl
and
aas
add
repz
xor
lods
test
out
pop
popf
jb
aas
dec
xchg
and
lahf
jmp
inc
out
add
daa
neg
pusha
inc
arpl
add
push
es
and
mov
sbb
inc
popf
adc
stos
and
pop
enter
sarb
popf
jge
inc
push
in
pop
sarb
int3
add
and
ret
push
add
stos
or
adc
lret
sub
ret
imul
xor
sbb
pop
repz
movsl
add
roll
mov
cmpsl
or
inc
add
packsswb
test
leave
sbbb
repnz
cmpsb
call
fcmovnb
xchg
sbb
fdivp
add
pushf
pop
mov
out
int3
loope
out
sbb
sbb
add
xor
cs
add
fidivs
push
nop
movb
xchg
movsl
loop
and
push
scas
mov
jle
mov
mov
cld
fcompl
dec
push
add
jno
add
sarb
bound
aaa
mov
in
inc
add
pop
cmpsb
sbb
dec
inc
mov
ss
add
push
sbb
lahf
dec
add
movsw
dec
add
ds
add
mov
cmpsl
pushl
loope
push
cltd
xchg
and
add
add
fldl
mov
lock
cmp
adcb
insl
jno
jecxz
sbb
mov
sbb
outsb
mov
loope
sub
mov
push
or
lcall
dec
jl
add
int
jne
push
roll
push
imul
stos
and
push
movsb
mov
add
cmpsl
jg
loopne
subb
add
stc
add
xchg
mov
addr16
cmc
add
js
or
fdivrs
loope
adc
xor
adc
sub
fs
stc
and
ret
fwait
daa
push
pop
add
jbe
xor
jnp
push
into
pop
sbb
rclb
or
xor
mov
add
adc
mov
icebp
add
pop
arpl
add
cwtl
scas
add
cmpsl
repz
mov
popf
loopne
pop
xor
gs
test
add
or
xchg
cmp
faddl
pop
add
mov
shlb
repz
les
lcall
testb
sbb
nop
or
sahf
add
out
push
imul
out
jmp
loope
add
cmp
xchg
data16
call
in
sbb
mov
push
jecxz
inc
pop
or
pop
add
arpl
or
inc
aad
frstor
pop
inc
jge
fildl
mov
flds
mov
mov
repnz
jg
testb
rolb
or
add
and
add
scas
fldt
imul
jbe
jp
or
jecxz
cld
outsl
sbb
icebp
mov
xchg
add
push
inc
js
cmp
loopne
add
sti
pop
aam
lcall
sbbl
rcrl
and
mov
and
sahf
xchg
or
dec
lods
fcompl
cmp
ljmp
and
stos
pop
clc
fnstsw
add
mov
or
mov
add
adc
dec
maxps
mov
xchg
loopne
scas
lods
out
mov
add
pop
sbb
add
mov
xchg
scas
mov
pop
add
ljmp
pop
mov
or
sub
pop
sysret
jmp
jmp
sub
add
lret
loopne
fwait
repz
iret
or
xchg
dec
inc
scas
in
inc
add
sub
fmuls
pmulhuw
cs
out
mov
incl
jp
in
push
out
xchg
sbb
inc
mov
jne
xor
add
xor
mov
push
xor
sbb
pop
or
test
lds
mov
or
xchg
add
or
pushf
lret
add
sub
push
jl
jo
xchg
sbb
filds
sbb
loop
pop
in
xor
jle
add
cmpl
jne
add
imul
lods
add
jmp
mov
popf
movsb
andl
scas
arpl
fildl
adc
shll
add
jg
sub
or
ja
adc
das
push
adc
stc
xchg
imul
mov
cld
add
fidivl
sub
inc
cld
out
rclb
mov
xor
add
mov
iret
or
add
sbb
mov
rolb
dec
lds
jnp
ficoms
fisttps
pop
int3
les
sbb
mov
jge
mov
aaa
push
cli
pop
add
sbbl
cmp
sbbb
push
push
cmp
add
shrl
addr16
push
push
jecxz
or
cmpsl
add
add
xchg
daa
push
mov
inc
imul
sub
pop
xorb
add
add
in
jge
pop
lahf
outsb
insb
test
xlat
sub
push
or
fdivrl
insl
sbb
ret
loope
sub
add
xchg
sbb
pop
into
jg
pop
add
pop
mov
push
add
mov
adc
inc
pop
xchg
jo
add
mov
outsb
mov
ja
fdiv
add
lcall
xor
add
ret
push
xorl
and
adc
mov
ret
xchg
lods
sbb
addb
sahf
pushf
add
or
pusha
mov
stc
jp
lret
ds
fwait
cltd
fcom
mov
mov
add
jge
std
shll
stc
fcmovu
out
or
add
jb
xor
pop
hlt
es
inc
inc
ja
add
idivb
sbb
jnp
mov
jo
xor
lods
push
rclb
cmpsb
add
nop
sub
add
xchg
sub
flds
jb
add
xchg
loopne
add
and
or
fadds
jmp
inc
in
mov
add
dec
adc
xchg
mov
divl
sbb
xchg
nop
pusha
fdiv
scas
sub
les
mov
add
scas
sbb
dec
sub
cmp
fdivrl
shr
lea
pushf
dec
mov
pop
jb
nop
add
mov
add
dec
inc
add
mov
mul
sub
jne
push
dec
lahf
jp
es
xlat
inc
aas
mov
shlb
pop
in
xchg
add
es
ret
addl
test
pusha
dec
cwtl
inc
pushf
or
add
notb
test
lock
pop
mov
add
adc
add
int
in
pop
stos
push
leave
lret
jnp
loope
lcall
mov
push
mov
dec
dec
push
add
insl
and
add
ret
not
pop
aam
sbb
popa
sub
fwait
shlb
jle
xchg
mov
add
fs
rorl
mov
lods
inc
xor
popa
add
jle
xchg
add
cmc
clc
in
fisttpll
loope
mov
subb
inc
cli
movd
jmp
add
mov
add
sbb
sar
lret
jbe
dec
decb
mov
add
test
add
dec
xchg
mov
mov
add
mov
insb
xchg
ljmp
adc
cmp
ficomps
pop
dec
xchg
andb
sbb
inc
mov
dec
bound
ja
dec
add
pop
aad
lds
movsl
add
xchg
movsb
aam
in
mov
out
inc
js
adc
gs
add
jne
dec
jp
add
push
mov
repz
lea
push
addr16
jns
sub
sub
out
mov
add
mov
mov
xchg
add
jmp
fbld
sahf
pusha
pop
jge
xor
jle
movsb
add
adc
shrb
xchg
and
cmpl
push
sbbb
adc
jb
push
lret
mov
push
ret
jp
jae
lock
inc
out
in
add
rorb
iret
imul
pop
pop
scas
push
jp
imul
mov
xchg
push
clc
repz
jmp
mov
sbb
or
cmp
add
adc
hlt
sbb
out
add
fcmovb
pusha
repnz
in
cmp
cmp
lahf
popa
push
fsubrp
aad
sbb
push
insl
ror
push
cmp
or
xor
mov
movsb
test
jge
mov
add
add
cwtl
les
jl
test
and
fdivl
scas
add
stos
jo
in
mov
xor
dec
stc
pop
cwtl
xor
addl
xor
int3
jno
fcomps
xchg
daa
push
mov
push
add
adc
cmp
and
pusha
inc
loop
push
int3
testl
into
push
shlb
in
and
mov
ds
imul
sub
cs
loope
movsl
fldt
push
loop
pop
add
xchg
icebp
js
cmp
hlt
xor
push
pcmpeqw
sub
rolb
ret
ret
loop
xorb
fmuls
shlb
cmp
outsb
dec
call
add
fcompl
and
jbe
jnp
cmp
inc
stos
xor
pop
push
flds
dec
mov
cld
mov
fwait
pushf
mov
cmp
mov
lahf
adc
add
cmp
push
mov
mov
lret
xor
div
mov
clc
cmp
ss
fstl
int3
vmread
stc
xchg
fwait
mov
mov
xor
jecxz
add
fildl
into
and
add
outsl
lret
pop
xchg
inc
jne
add
test
out
cli
dec
pop
mov
mov
or
add
insl
jp
pop
iret
shrl
add
mov
jb
add
dec
fstl
jp
or
pusha
insb
addr16
and
mov
ret
push
add
dec
pop
cmp
jle
sbb
xchg
push
mov
repz
add
les
or
lock
add
dec
sbb
add
nop
mov
loope
push
cs
and
addr16
add
push
adc
mov
aas
leave
cmp
jg
add
orb
add
je
push
psubsw
jle
aas
inc
sub
ja
inc
outsb
pop
inc
jecxz
add
lods
imul
fiadds
mov
xorb
cwtl
ficompl
notb
mov
add
lcall
fcomip
xor
mov
insl
dec
xchg
lock
cmp
cmp
inc
pop
lret
ljmp
sbb
mov
cmpsl
push
xor
aad
test
insl
or
es
xor
add
mov
add
dec
hlt
int3
jne
jp
add
popf
test
orb
add
push
mov
repz
lods
mov
ljmp
mov
xchg
es
popf
add
and
iret
fisttpll
xchg
mov
push
movsb
push
mov
test
cwtl
xor
add
fisttps
rcrl
push
fcoml
out
and
stos
rcrb
pop
add
mov
push
or
cmc
test
mov
add
xlat
xchg
mov
mov
add
adc
xor
test
test
outsb
call
fwait
push
testl
clc
inc
fdivrl
sub
push
or
add
nop
inc
fistpll
mov
add
in
adc
mov
clc
loopne
pop
or
or
jne
int3
dec
dec
xchg
push
les
mov
rcrl
add
shrb
or
es
inc
bound
add
orl
xchg
test
dec
push
xchg
mov
and
pop
pusha
sbb
sub
jge
add
jle
push
mov
fisubrs
xor
xchg
enter
movsl
sbb
push
xchg
addb
sti
fstpl
push
xor
in
cmp
test
add
sbb
movsl
int3
ror
add
fists
sub
inc
push
add
out
cltd
imul
fidivrs
xchg
and
shlb
inc
cld
fistl
sbb
mov
rolb
pop
arpl
les
mov
leave
add
xor
shlb
fcoml
lds
push
fcompp
ret
pop
pop
fcoms
arpl
or
add
sbb
add
mov
jp
jns
out
or
cmp
and
pop
add
jo
cmovl
push
cs
dec
mov
pop
or
inc
add
daa
push
inc
cmp
push
adc
cmpsb
mov
dec
sbb
hlt
add
test
xchg
sbb
lahf
add
pop
movsl
add
call
cmp
lret
xchg
subl
mov
push
push
repnz
pop
inc
sub
add
mov
or
jp
xor
nop
pop
add
scas
mov
cli
push
loopne
dec
pop
xchg
loopne
pop
rcl
inc
scas
add
adc
or
add
sub
add
push
pusha
into
out
sub
inc
jle
mov
add
test
fdiv
inc
add
call
cs
add
xor
pop
dec
jne
mov
adc
sbb
push
mov
loope
daa
push
imul
add
mov
mov
or
insl
add
cmp
es
adc
hlt
fbld
mov
stc
dec
orb
push
out
xor
sub
mov
push
cmp
int
xchg
sub
out
cwtl
addl
mov
out
mov
data16
int3
add
ljmp
adc
inc
or
loopne
mov
inc
pop
push
inc
aad
sti
push
dec
cmp
bound
out
mov
xor
test
cmp
sbb
lret
jbe
cmp
dec
add
fldenv
add
rolb
sbb
dec
js
incb
nop
cltd
adcl
cs
out
adc
pushl
fwait
dec
adc
mov
imulb
xor
push
add
call
sbb
lods
cmpb
mov
dec
lea
mov
int3
aas
loopne
inc
inc
popa
sarl
add
push
sub
aam
popf
add
push
leave
subl
lds
xor
cmpb
add
mov
enter
stc
popf
mov
push
das
dec
add
cli
mov
add
adc
pop
add
inc
cld
lock
icebp
sub
xor
mov
push
add
enter
add
gs
xchg
ret
adc
jl
cmc
sub
add
cld
pusha
jle
mov
sub
add
mov
mov
sbb
or
ljmp
sub
clc
pop
add
dec
shl
push
or
loopne
cmp
xchg
lds
add
pop
wrmsr
jbe
push
inc
xchg
jge
mov
jae
out
jecxz
lret
stos
scas
add
push
mov
aam
add
nop
xchg
xor
cmp
push
sub
fldl
mov
call
adc
mov
xchg
xor
add
pop
jmp
in
add
mov
lds
or
and
jae
imul
pop
popa
loope
dec
mov
mov
mov
shll
inc
lret
fadds
in
in
mov
bound
and
dec
mov
out
add
scas
push
js
jp
mov
sub
sbb
inc
arpl
mov
hlt
or
cmp
stos
orb
out
fimuls
add
push
lahf
daa
xchg
xchg
rcll
aaa
les
add
inc
jle
add
mov
insb
sbb
ja
and
cld
sbb
push
aad
xor
popf
add
cmp
clc
add
jae
pop
mov
inc
push
inc
and
out
mov
dec
daa
outsb
adc
adc
loop,pn
out
pusha
lcall
or
imul
test
out
add
push
or
cmpsb
sbb
xor
add
leave
enter
repnz
mov
rolb
sub
fidivrs
pop
add
int3
lea
roll
pop
jns
pop
or
inc
aaa
movsl
js
mov
sbb
pushaw
inc
jbe
clc
mov
mov
movsb
pop
cmc
add
cmp
inc
xchg
mov
or
pop
jo
inc
fnsave
push
adc
mov
jl
xchg
jno
movsl
mov
repnz
push
adc
aas
shl
add
icebp
test
es
inc
add
add
push
bound
test
push
data16
lahf
lret
in
jbe
jp
sub
loopne
bound
setns
cmp
lods
in
loope
sar
push
stos
mov
pop
test
js
stc
lds
inc
dec
pop
push
enter
xorl
arpl
loopne
lea
pop
sbb
inc
sbb
test
dec
sub
cmpsl
inc
and
repz
push
movzwl
lods
lcall
test
inc
xor
add
and
neg
xorb
add
mov
shr
jg
es
adc
mov
scas
add
xor
cwtl
xchg
lea
jge
mov
divl
fadds
sub
cmpl
adc
lea
shll
stc
incl
loop
out
clc
outsl
xchg
es
mov
into
add
jb
or
lods
cmp
mov
loope
ljmp
mov
mov
mov
rcrl
adcl
jnp
dec
pop
add
movsb
das
loopne
mov
gs
mov
and
in
int
mov
sub
je
cmp
add
sbb
xchg
fldcw
clc
les
jnp
push
pop
loope
inc
and
repnz
xlat
fiadds
add
or
push
adc
mov
add
lods
lcall
xchg
add
call
fsubrs
and
je
mov
cs
add
pop
jb
imul
inc
jl
inc
inc
icebp
adcl
fildl
cmp
jnp
add
mov
pop
cld
ja
mov
pusha
rcrb
push
lret
sbb
rolb
movsl
inc
jne
dec
mov
add
sub
pop
add
xchg
test
mov
enter
add
lret
enter
sbb
icebp
jmp
mov
cmpsl
push
imul
insl
mov
es
movsb
mov
aam
lock
sub
je
ror
push
jae
pop
sbb
and
icebp
cmp
mov
mov
loopne
fistps
cmp
movsb
xchg
imul
push
divl
add
out
scas
pop
bound
int3
sub
add
and
jg
or
xchg
cld
mov
lods
out
je
add
mov
loop
arpl
sbb
adc
add
mov
loopne
pop
mov
xor
rorb
sub
xlat
incl
mov
arpl
cmp
push
push
test
fwait
scas
add
testl
cmp
pop
push
ret
add
fdivs
or
mov
sbb
daa
movzwl
add
sbb
gs
add
dec
mov
add
test
or
jp
stos
jg
add
push
lds
sbb
inc
xchg
push
sbb
pop
jmp
fs
sbb
push
sub
adc
sbb
mov
imul
add
jnp
scas
out
cmpl
and
test
add
aam
mov
inc
movsb
add
push
mov
cmpl
ficompl
cld
out
add
aam
iret
xchg
adc
loop
jo
cs
adc
add
mov
imul
sbb
mov
in
xchg
pop
out
push
fiaddl
call
fadd
push
or
jbe
lds
loop
pop
hlt
sti
cld
cmpsl
leave
aas
aas
addl
les
dec
loopne
rolb
sub
lds
cmp
ret
xor
pop
fwait
loopne
int3
js
aad
add
fldl
aaa
fs
sarl
jp
add
leave
test
pop
movsb
ljmp
and
pmaxsw
scas
sbb
mov
inc
nop
sbb
iret
add
hlt
repnz
adcb
fwait
jno
sub
mov
fcmovne
adc
mov
add
push
sub
lcall
in
rcrb
movsl
insl
test
ds
add
inc
sub
stos
jo
ljmp
add
les
call
out
hlt
fildll
shll
xchg
mov
mov
push
add
sti
mov
add
hlt
adc
js
sbb
sub
add
dec
push
push
std
lcall
push
pop
sub
or
loopne
out
add
loop
imul
scas
clc
out
mov
dec
add
ss
outsb
add
cmc
pop
add
xor
add
mov
xor
mov
fsub
jnp
add
lods
adc
fs
sbb
scas
es
xchg
jecxz
outsl
jb
jl
cld
xchg
fs
movq
or
and
xor
and
out
and
mov
lods
vmwrite
cmpsl
ljmp
mov
xor
loope
pop
push
inc
call
inc
gs
movnti
outsb
cmp
xor
xlat
mov
sbb
mov
pop
loopne
pop
sbb
xchg
pushf
pusha
adc
ljmp
inc
rolb
push
int
ss
int3
nop
aam
fidivl
add
xchg
shl
mov
imul
dec
movsb
pop
pop
jnp
add
mov
loope
aam
das
add
jecxz
test
je
add
mov
jb
push
lods
pop
aas
push
shl
xchg
roll
js
xor
jno
push
mov
cmp
outsb
xchg
push
addl
mov
mov
adc
cwtl
xor
add
cmp
pop
gs
sub
xchg
and
call
test
dec
inc
xor
or
add
repnz
fdivl
mov
lret
aaa
mov
mov
out
mov
cmpsl
push
andb
insl
mov
push
cmpb
xor
sub
add
ret
add
fisubl
dec
sbb
repnz
repz
add
dec
cs
js
clc
shll
push
fnstsw
sub
add
in
mov
push
popf
test
mov
into
add
movsl
add
out
cmp
push
out
pop
setne
push
outsb
test
sbb
add
mov
cmp
jl
xchg
ja
test
add
dec
and
xchg
add
addr16
mov
aam
pop
mov
jns
cmp
push
jmp
xchg
push
add
insl
add
push
add
fsubrp
or
or
push
sub
mov
cs
out
sbb
shll
stos
pop
cwtl
mov
aas
into
mov
mov
and
jns
in
add
arpl
loope
dec
inc
mov
test
jne
add
mov
repz
into
mov
add
push
addr16
and
sbb
out
fld
add
in
fsubr
dec
add
lret
xchg
aaa
mov
outsl
and
inc
cmpsb
jne
shlb
adc
jnp
push
pop
leave
and
and
stos
aam
inc
fs
push
pop
jo
shlb
popf
addr16
push
jle
hlt
push
nop
xor
inc
insb
lock
mov
add
fiadds
cmpsb
add
in
and
mov
jne
lds
imul
sbb
fldcw
jge
mov
daa
add
popf
mov
faddl
or
mov
and
hlt
nop
dec
mov
mov
in
repnz
in
xorb
lds
cmp
lret
int3
arpl
xor
or
xorb
add
jge
push
cli
jbe
jle
or
movsb
add
xchg
cmp
and
leave
push
pop
scas
stc
out
push
jo
mov
jmp
push
pmovmskb
sub
jl
ds
jno
ret
cmp
stc
mov
xor
mov
int3
cmpsb
sub
cs
add
mov
mov
cmp
or
xchg
and
dec
add
ds
in
fadds
jl
loope
orl
add
sahf
and
pop
popf
add
inc
xor
mov
repz
sbbl
sbb
rcrl
adc
sub
test
mov
dec
jp
jno
add
cmp
sub
push
and
and
stc
pop
inc
mov
jno
jg
loop
cmpb
add
test
rorl
mov
mov
inc
and
pop
in
clc
scas
lret
cmp
repnz
xor
mov
ss
out
xchg
mov
or
fs
fyl2xp1
insl
loopne
loop
or
mov
xor
cmp
cmc
add
into
scas
push
stos
or
sub
add
mov
shlb
out
xor
mov
add
insl
inc
xor
in
dec
push
ret
cmpsb
sub
add
jb
pop
jno
popf
enter
pop
gs
mov
sti
add
dec
xor
mov
addr16
xor
mov
dec
xor
push
jae
sbb
xchg
pop
jl
repz
shlb
loop
push
stos
push
adc
cwtl
scas
shrb
add
jmp
fs
add
jo
pop
and
cmp
push
adc
cmp
movb
lods
add
js
mov
push
sbb
jb
and
loopne
mov
mov
add
lea
add
iret
xorl
test
mov
sbbl
negb
jnp
jmp
frstor
mov
jmp
dec
shll
enter
cmpsb
sarb
xchg
lods
hlt
sbb
cmpsl
push
xchg
push
dec
xor
add
insl
movsb
jg
es
mov
and
aam
jle
lea
addb
pop
sbb
xchg
and
add
dec
mov
add
mov
or
lret
xchg
and
aaa
clc
cmp
mov
frstor
jmp
test
push
mov
inc
add
lea
cmovge
jnp
mov
dec
xchg
stos
jl
out
pop
pop
mov
rcll
add
clc
test
add
dec
mov
popa
xchg
add
mov
pop
add
mov
xor
cmp
decl
cltd
push
sub
popf
add
push
or
add
lds
or
dec
and
inc
jb
push
faddl
jl
xchg
cmp
push
in
nop
nop
shl
das
add
xor
jns
add
pop
out
rolb
xlat
mov
repnz
jne
add
mov
mov
add
stc
hlt
jp
push
fsubl
pop
daa
mov
sub
out
add
addl
hlt
cmp
inc
jl
inc
or
sti
fistpll
add
pusha
test
in
sbb
mov
insb
pop
add
and
sarl
aaa
sbb
pusha
cltd
mov
movb
mov
inc
shrb
loope
inc
ja
inc
sub
add
xor
adc
jne
scas
cmp
into
loopne
push
in
xchg
pop
push
pushf
mov
push
in
mov
or
cli
js
lea
push
cmp
xchg
in
mov
jae
add
mov
rolb
data16
es
pop
lret
add
int3
dec
xchg
jmp
push
ds
jl
pushf
add
sbb
dec
pop
or
cmc
push
jbe
shl
push
and
mov
sbb
cmp
pop
mov
and
scas
fdivrs
and
sti
pusha
dec
xor
add
inc
aas
jl
pop
add
jno
lahf
pop
cmp
int3
add
push
xchg
xchg
enter
or
xchg
mov
add
mov
push
ret
das
pop
sub
dec
ss
ffreep
adc
and
mov
dec
add
jmp
xchg
and
loope
ja
dec
push
cmp
adc
stos
push
add
xor
ficompl
sbb
jno
orb
outsb
repz
or
adc
xchg
cmpsl
sub
je
sbb
push
mov
cmc
push
mov
mov
fildl
pop
int
xchg
push
call
adcb
mov
adc
mov
stos
jne
mov
jg
aam
and
add
sahf
outsb
int3
nop
sbb
rsm
mov
add
and
lret
jbe
divl
lock
cmp
ss
mov
add
enter
adc
add
std
loop
xchg
inc
outsl
sbb
and
mov
mov
aam
xchg
mov
pop
cmp
clc
movsb
xor
add
cwtl
xchg
jl
add
sahf
mov
pop
add
ljmp
inc
mov
ss
loopne
push
or
gs
imul
mov
mov
cmp
push
adc
xchg
test
adc
adcb
repz
add
flds
pusha
ljmp
hlt
xchg
clc
nop
add
fistps
pop
sbb
nop
mov
mov
push
pop
ret
mov
add
call
mov
enter
xchg
je
aaa
push
cmc
dec
imul
iret
jne
pop
mov
inc
add
and
adc
fistl
inc
sub
addl
push
add
cwtl
test
or
cs
pop
mov
loop
mov
add
daa
pop
mov
mov
enter
lock
xchg
mov
lods
push
add
pushf
in
test
xchg
sbb
pusha
shlb
add
es
jns
ret
push
out
call
mov
rorb
and
sbbb
sbb
mov
lods
leave
add
popa
and
or
out
pop
mov
imul
push
jae
adc
test
sbbb
mov
adc
push
pushf
lcall
out
outsl
or
imul
subps
cmpsb
cmp
out
gs
pop
lds
fadds
scas
dec
lock
xchg
loope
add
or
xor
into
xor
addr16
data16
mov
sbb
pop
push
add
pop
add
fwait
sub
or
add
jno
iret
xchg
dec
adc
xchg
xchg
ja
mov
pop
sarl
lcall
in
outsb
pop
jo
lock
ljmp
add
mov
add
sub
inc
add
xchg
mov
loopne
jp
add
mov
loopne
filds
sub
xor
sbb
xchg
jnp
shr
arpl
cmpsb
fistps
mov
insb
ljmp
decl
test
sarb
and
add
push
roll
in
pop
mov
mov
xchg
es
add
psllq
pop
inc
sub
add
cld
ffree
add
and
iret
mov
inc
mov
push
add
jne
push
inc
hlt
ret
sbb
stc
arpl
xchg
pop
test
ficompl
sbb
ja
mov
push
push
cmpl
sldt
and
fsub
gs
movsb
add
or
pop
js
mov
rcr
das
vunpckhpd
pop
fimuls
cmpsl
add
sub
ror
cmp
mov
add
mov
push
lea
push
subl
jbe
movsl
pusha
bnd
shll
and
rcr
scas
mov
adc
jo
out
xor
push
popf
mov
dec
int
push
add
in
jno
nop
in
cli
add
dec
scas
ror
sub
jge
in
jle
sub
inc
sbb
push
mov
rolb
test
mov
sub
lahf
inc
push
and
add
inc
movsl
cmpb
pop
cmp
daa
jno
pushl
add
das
add
ja
add
and
push
add
cld
cs
aam
cmp
xor
sbb
into
mov
subb
mov
rorb
hlt
lods
add
fsubrl
in
lahf
push
cwtl
dec
push
adc
lcall
push
mov
add
and
fiadds
jmp
mov
add
pop
mov
nop
jg
lods
addl
inc
icebp
popf
test
test
rcrb
push
stos
str
hlt
mov
lret
inc
divl
ret
ds
sub
ss
pop
adc
mov
sbb
fildl
xchg
loop
in
outsl
cmovle
add
or
inc
rcrl
jne
rorb
imul
xor
adc
es
iret
out
xchg
mov
mov
data16
jg
add
add
and
je
adc
das
fcompl
sub
add
in
dec
inc
movsb
lods
js
dec
push
mov
adc
add
sub
xlat
jo
mov
xchg
add
movsl
sbb
fcompl
leave
add
push
fwait
sub
xchg
pop
add
cmp
insb
inc
mov
mov
rclb
aad
add
sbb
cmp
pushf
push
add
adc
cmp
pop
jne
pop
cmc
ss
scas
call
and
filds
lret
or
je
cmpb
dec
loopne
icebp
jb
pusha
pop
aas
add
fbld
call
and
xor
sbb
mov
das
xor
add
mov
decl
push
cwtl
arpl
std
clc
push
and
add
testl
mov
add
repnz
add
jb
mov
lret
loop
dec
in
add
cld
pop
ret
icebp
add
iret
mov
dec
faddl
sbb
es
scas
add
ret
loopne
cmp
jae
add
sub
and
subb
pop
add
push
mov
add
cmc
adc
mov
add
lods
xor
leave
popa
cmp
mov
mov
add
jae
push
add
outsb
pushl
add
scas
cltd
test
mov
cli
insb
add
push
ja
add
sbb
cli
out
shlb
mov
std
roll
sub
add
xchg
jbe
outsb
test
add
add
pop
xchg
mov
add
out
sysenter
mov
sbb
add
sub
xor
mov
ror
or
jns
mov
fimull
push
loop
sub
stos
dec
pop
cltd
bnd
pop
cmp
pop
add
mov
push
scas
push
xchg
int
dec
in
push
loope
jns
shrb
jge
cmp
aaa
loop
cmp
andb
stc
pop
lahf
dec
out
mov
inc
insb
repz
mov
in
push
jp
iret
ret
cs
and
cmp
adcb
mov
mov
inc
pusha
add
xor
mov
test
loop,pt
loopne
fs
cmpsl
push
mov
rorb
sub
jmp
daa
stos
fdivrs
xchg
push
and
std
push
add
add
cs
leave
cmp
mov
jmp
pop
push
cltd
jns
pop
pop
push
repz
add
ja
dec
std
jp
add
push
scas
lret
lods
aaa
imul
fiadds
rol
xchg
add
rcrb
add
out
dec
scas
or
inc
dec
dec
push
arpl
add
repnz
jns
add
adc
aad
pop
push
xchg
mov
pop
push
mov
pop
int3
and
xchg
add
mov
add
pop
aaa
pusha
aam
sbb
roll
jbe
mov
movsb
add
test
roll
mov
pop
jo
subl
push
addb
dec
cmp
add
jno
movsl
add
cmp
push
cmp
cmp
fisubs
cmpsb
add
xchg
inc
xor
cmp
dec
lahf
data16
and
pop
mov
test
jbe
sbb
sub
add
jp
inc
mov
mov
pop
rclb
sbb
xchg
in
and
rorl
mov
add
pop
mov
mov
cmp
outsb
mov
push
stos
adc
add
jbe
push
pop
filds
fmull
jo
push
sub
lcall
test
scas
add
jae
mov
or
out
add
cmp
inc
fidivrl
mov
jge
sbb
cltd
loop
cs
popa
jg
enter
add
mov
addl
fimuls
add
lret
stc
imull
add
js
iret
cltd
adc
add
mov
add
sbb
sti
stc
xchg
push
ret
mov
mov
fwait
cmpsb
cmc
dec
mov
into
pop
rolb
inc
or
or
mov
add
sbb
lock
pop
sub
add
data16
dec
dec
add
lds
adc
lods
scas
jmp
xor
aaa
in
pop
add
pop
into
fmuls
xchg
push
adc
mov
cmp
in
inc
int
lods
lret
out
or
scas
mov
cmp
add
loope
jo
push
xchg
test
popl
repz
jns
xchg
test
and
jb
dec
mov
sub
mov
insl
mov
sub
lods
jae
adc
jecxz
test
xchg
hlt
add
mov
mov
add
movb
leave
jecxz
test
je
add
push
aas
lcall
add
xchg
popf
add
std
mov
stos
add
xor
dec
sbb
jge
add
push
add
aas
push
add
std
jl
add
roll
mov
jns
loopne
jno
lock
addr16
add
push
jnp
mov
jno
xchg
lret
repz
mov
repnz
mov
dec
and
and
testb
pop
pop
fs
pusha
adc
insb
mov
sub
add
shr
scas
and
andb
jne
add
mov
hlt
imul
ljmp
pop
stc
clc
mov
push
or
add
jne
cwtl
cmc
cltd
mov
rcll
add
call
xchg
pop
loop
add
xor
jbe
add
test
xchg
hlt
testb
xor
sub
mov
xor
mov
add
aam
roll
mov
pop
sub
iret
add
xchg
jge
fwait
lcall
inc
std
add
mov
cli
push
ret
add
mov
lods
mov
pop
das
sbbb
xchg
sbb
push
cmp
fiadds
jo
adc
lea
mov
mov
jne
add
dec
lret
mov
popf
sub
rorb
jae
andl
test
outsl
sub
aaa
add
pop
xorl
add
adc
adc
jmp
hlt
xchg
pop
fistps
mov
in
lods
add
mov
add
and
je
data16
mov
xchg
sbb
mov
add
add
jae
outsb
xor
and
fcmove
ret
add
iret
popa
clc
xor
sub
xchg
push
adc
int
imul
mov
or
add
inc
jne
or
push
add
or
push
pop
sbb
xor
int3
dec
leave
xchg
in
add
repnz
les
rclb
fwait
vhaddps
xchg
fimuls
cs
xchg
add
int3
pshufw
add
push
xchg
pop
jge
xor
jnp
push
adc
repnz
cmp
stos
and
jne
fwait
add
dec
xor
push
arpl
dec
stos
int
and
jns
push
fiadds
cmp
cmc
daa
dec
jne
mov
in
dec
sarb
cmpsb
jnp
add
inc
aaa
push
dec
push
and
add
pop
mov
inc
scas
and
mov
inc
cmp
xchg
pop
mov
pop
test
pop
dec
pushf
js
pop
aas
je
sub
inc
or
test
jnp
out
add
lahf
jbe
cltd
ss
rolb
aas
mov
xlat
outsb
add
scas
sub
pop
faddl
cmc
jno
push
shl
lcall
cmp
in
int
mov
mov
movsl
add
mov
xor
xor
add
add
popf
mov
sbb
cmp
fwait
rorl
lret
add
fmuls
lcall
jbe
inc
ret
std
movsb
mov
stc
add
mov
outsl
jp
add
xor
dec
push
cmc
adc
mov
out
add
mov
push
xor
das
enter
sbbl
sub
sahf
mov
es
data16
jne
add
lds
imull
daa
rolb
adc
scas
pop
in
mov
push
loopne
xorb
pop
incb
adc
jl
fbld
add
mov
pop
icebp
add
xlat
out
mov
or
push
addb
xchg
repz
jl
popf
movsb
fcomp
test
push
call
dec
adc
nop
cld
mov
xor
add
pop
jmp
pushf
or
rol
xchg
adc
fldt
nop
adc
call
jmp
addr16
shl
in
mov
add
jnp
dec
into
stos
add
jb
or
inc
push
mov
inc
sbb
dec
dec
fistpl
add
repnz
mov
dec
mov
clc
add
add
xchg
jle
and
pop
testb
cmp
add
sti
inc
mov
add
pop
xchg
das
mov
add
mov
jno
mov
or
ficompl
sbb
or
mov
cmpsl
dec
sbb
insl
add
cmc
es
js
fdivr
nop
add
sub
rcrl
mov
and
push
cld
xchg
lods
or
push
popa
add
mov
xchg
jb
cmp
clc
cmpb
inc
mov
push
add
jbe
add
divl
add
leave
jae
push
sub
cmpsb
adc
and
lret
insb
cmp
roll
jecxz
sbb
pop
pop
xchg
mov
test
adc
dec
add
mov
mov
dec
push
or
add
cmp
shlb
out
add
icebp
push
sub
fwait
leave
add
in
pusha
enter
add
ret
dec
in
mov
arpl
mov
mov
xor
imul
in
sbb
jecxz
mov
add
out
cmp
add
lock
add
dec
shr
mov
push
fldt
mov
pop
jo
jno
cmpsb
sbb
or
lcall
addl
mov
push
jmp
xchg
push
add
sbb
in
imul
jnp
test
insb
loop
pusha
xor
add
stos
adc
imul
add
popf
sub
stos
jae
rorb
insl
inc
mov
mov
int
iret
shl
adc
add
dec
push
fsubr
dec
scas
add
pop
sbb
push
fsubp
shlb
fidivl
add
inc
hlt
das
lods
push
add
call
mov
hlt
mov
or
pop
add
sbb
sub
das
lds
add
fdivp
in
inc
pop
mov
add
add
sub
push
aaa
fisubs
sbb
mull
jbe
xchg
jne
add
sub
lret
add
mov
add
out
xor
inc
jae
mov
jl
daa
pop
push
jno
cmp
call
enter
in
xor
inc
inc
fsubl
out
stos
add
test
sub
aaa
orb
xchg
push
ds
mov
mov
inc
pop
push
add
incl
push
sarb
mov
xchg
pop
add
push
push
dec
sbb
jno
xchg
push
add
add
ret
add
mov
rcrb
and
pusha
jbe
add
lret
sub
loope
lods
fsubl
jmp
cmpsl
cmp
mov
add
pop
add
push
jmp
pusha
mov
add
pop
mov
int
ss
jl
addb
out
pop
test
add
sbb
inc
jne
aad
es
xchg
ds
movsb
testl
inc
lahf
loopne
inc
call
sbb
xor
pop
stc
add
loop
add
outsl
add
mov
fiaddl
ds
pop
cmp
ficoms
cli
mov
sub
btsl
inc
add
add
mov
adc
mov
ja
adc
ret
or
or
mov
ja
pop
ss
sti
mov
lods
in
mov
es
push
sub
out
cmp
rorb
jbe
cs
or
sbb
pop
out
mov
pop
dec
andl
cwtl
mov
cmp
inc
cmpsl
xor
dec
mov
jno
push
outsl
add
mov
in
mov
add
call
push
jle
jae
aam
push
je
arpl
sbb
add
jno
inc
pop
cmp
sbbl
dec
sarl
inc
and
gs
mov
mov
or
mov
lret
mul
mov
add
mov
and
xchg
insl
mov
mov
inc
std
add
adc
ss
pop
cmp
mov
mov
rol
sahf
cld
ja
add
sub
pop
jb
dec
test
insl
daa
push
add
jge
jns
sar
push
loop
add
cld
loope
rclb
adc
add
push
sahf
and
mov
rolb
popa
shlb
cmp
iret
xchg
pop
xchg
sbb
xor
add
push
jg
jns
sbb
out
movsb
mov
out
in
pop
enter
icebp
jne
or
data16
sti
clc
and
add
pop
jbe
jns
inc
maskmovq
idivl
xchg
mov
not
dec
mov
add
addr16
fwait
mov
cmp
ja
sahf
lcall
notb
add
int3
jbe
add
dec
ret
inc
sub
inc
dec
loopne
jo
ja
dec
jb
and
xor
fbld
add
in
xor
fdivrl
bound
pop
add
out
sbb
mov
add
jne
aad
dec
nop
add
repz
mov
call
cld
stos
add
or
or
clc
in
ret
cmp
jbe
sbb
jmp
sub
mov
fistps
pop
mov
das
jle
dec
mov
jnp
pop
insb
jo
sahf
add
data16
out
xchg
jb
add
mov
push
add
adc
add
inc
scas
fcmove
pop
sti
jno
add
push
xlat
mov
pop
icebp
xor
adc
pushf
push
sbbb
push
imul
pop
sbb
pop
daa
adc
out
push
sub
into
pop
push
mov
pop
out
arpl
add
pop
and
cwtl
mov
sub
inc
jae
mov
in
fstpl
pop
jne
lock
add
xor
or
mov
outsb
ss
stc
ret
sahf
jle
jbe
and
push
scas
filds
and
dec
cld
cmp
fidivrs
xor
adc
enter
adc
insl
add
cmpsb
popa
jl
imul
add
inc
daa
dec
jecxz
enter
imul
ds
push
inc
push
out
push
mov
ja
pop
push
incb
jecxz
lahf
ret
cs
and
enter
sahf
addb
jb
cmp
jle
add
enter
xchg
push
sbb
jge
sbb
js
pop
std
pop
jnp
dec
es
loopne
add
inc
cli
lret
push
sahf
mov
xor
pop
push
push
xor
rolb
pushf
lahf
adc
outsb
sub
or
add
dec
fwait
adc
push
mov
lcall
sbbb
fiadds
push
imull
pop
push
mov
mov
mov
push
add
mov
xor
add
out
add
jmp
adc
push
mov
incl
shll
lret
std
pop
imull
fmuls
add
cmp
orl
inc
gs
mov
pop
pusha
jg
shrb
dec
mov
cmp
das
cmc
mov
add
aad
mov
push
pop
add
mov
jmp
mov
mov
mov
lods
hlt
ret
jmp
insl
push
add
cltd
or
adc
inc
lods
add
rorb
adc
xor
pop
sub
and
pop
daa
push
gs
add
pop
mov
sti
cmp
and
or
sub
add
insb
lds
cmpb
enter
fdiv
xchg
cmp
cmp
adc
push
lret
xlat
inc
fiaddl
jne
iret
jno
nop
dec
pop
sahf
xchg
aad
sbb
cmpsb
test
jae
pushf
push
sbb
adc
int3
pop
inc
add
xor
adc
in
insb
addl
mov
xor
jecxz
add
je
pop
addr16
mov
aad
add
ja
stos
or
inc
sub
nop
or
out
push
fstpt
sub
pusha
cmp
mulb
mov
data16
cwtl
dec
unpcklps
jno
mov
xor
push
jge
push
and
rolb
or
and
pop
ljmp
push
test
cli
lret
inc
ja
jl
add
loope
pop
psubusw
dec
adc
push
cmp
mov
add
lahf
xor
sub
adc
shlb
inc
pop
rorl
xchg
push
and
mov
leave
in
lods
loopne
pop
frstor
adc
pushf
lock
add
outsb
and
mov
mov
push
inc
lea
mov
clc
cmp
add
add
clc
lock
jecxz
nop
xchg
xor
mov
pop
stos
push
add
pop
and
rcrl
dec
dec
mov
and
hlt
repz
xchg
sub
mov
xor
and
or
lret
ds
jmp
cmp
add
outsl
lods
popf
add
ss
or
inc
ret
dec
shll
mov
dec
add
and
inc
test
jg
daa
jns
fstpt
leave
and
out
cli
cmpsb
mov
add
cmp
dec
jae
add
mov
pop
add
push
pop
shll
jp
xor
stos
add
or
xchg
repnz
out
lea
and
jae
xchg
jb
test
adc
subb
mov
flds
ret
jno
cmc
jnp
in
fisubrl
xchg
iret
and
or
push
or
ss
cmpb
push
rcrl
jae
pop
sub
jno
call
arpl
loopne
mov
data16
scas
push
sbb
pop
imul
sbb
insb
inc
fists
pop
lcall
push
or
pop
pop
fsubs
pop
cli
leave
hlt
push
lahf
sti
aam
push
cld
repnz
pop
cmpl
popa
add
lds
fiadds
aaa
loope
pop
adc
mov
mov
lock
add
pop
incl
lods
dec
pop
pushf
jge
add
push
and
into
pusha
or
cmp
orb
bound
adc
jo
mov
xor
push
or
pop
dec
clc
cmp
add
lea
pusha
lock
mov
cld
loopne
adc
in
add
or
inc
in
lock
outsb
lret
rcll
add
in
stos
dec
jno
add
sub
mov
push
data16
mov
mov
sbb
mov
or
and
jo
add
mov
cmc
pop
add
sbb
xor
add
orb
movsl
es
mov
xor
add
nop
xor
add
push
repz
fdiv
insl
cld
push
movb
mov
pop
mov
icebp
bound
inc
les
es
push
pop
push
cli
jle
and
sahf
data16
inc
lret
add
jae
and
mov
add
outsb
mov
add
aas
loopne
mov
or
add
in
imull
call
hlt
imul
adc
popa
jge
inc
push
aam
stc
adcb
pop
outsl
push
fbstp
lock
cmc
push
in
stos
or
shll
pop
test
fiaddl
shr
inc
icebp
add
fcmovnu
push
add
or
add
lods
jmp
mov
or
scas
add
pop
dec
mov
loopne
add
lds
xlat
mov
arpl
in
subb
loopne
mov
cmp
out
xlat
stos
add
cmpb
and
xchg
mov
push
repz
cs
add
sub
or
jbe
nop
daa
mov
pmullw
mov
mov
shll
push
pop
hlt
aaa
pop
movl
cwtl
xchg
daa
lea
and
je
ficompl
push
loope
jmp
dec
xor
cmp
pop
idivb
push
out
inc
add
filds
push
or
mov
mov
add
jmp
cmp
jo
or
mov
divb
roll
movsb
aam
and
les
push
mov
add
add
lock
mov
pop
test
or
mov
fwait
cld
sahf
lahf
jo
sti
shlb
xchg
inc
cmpsl
dec
out
dec
cwtl
mov
dec
or
cwtl
ret
stos
xchg
mov
in
sub
jmp
push
push
pop
repnz
mov
sub
idivl
js
add
dec
in
popa
scas
loop
add
out
addr16
xchg
fistl
clc
add
pop
adcl
test
test
mov
xorl
mull
je
add
jnp
jb
shr
or
push
subb
mov
pop
sbb
repnz
xlat
add
dec
pop
lock
xchg
add
pop
xor
add
ret
push
xlat
xor
push
xchg
sub
lcall
ficompl
adc
int3
jl
pop
mov
and
pusha
dec
movb
push
ja
mov
pop
cltd
add
xor
gs
loopne
xchg
inc
mov
or
clc
add
adc
out
add
dec
fsubs
adc
dec
add
dec
mov
inc
mov
add
lahf
add
add
inc
in
add
cmp
pop
inc
jnp
out
jg
flds
lock
or
add
stos
jnp
pop
add
or
xchg
add
std
in
jae
push
dec
repz
mov
lahf
xchg
add
lea
pop
imul
rol
adcb
rolb
push
lods
daa
outsb
scas
mov
loope
xchg
sbb
aaa
add
xchg
addr16
fimull
add
inc
jno
cmp
inc
add
or
pop
add
hlt
sahf
lea
xor
outsb
bound
cmpl
fcomp
fcmove
add
inc
mov
add
pop
pusha
mov
jecxz
push
dec
aaa
sbb
sbb
sub
in
push
inc
jbe
cwtl
add
add
movsb
int
pusha
push
sbb
add
scas
icebp
mov
push
jo
mov
lea
out
ret
mov
addr16
mov
jo
jno
sub
add
dec
xor
in
call
inc
aad
inc
jae
mov
dec
test
add
add
rolb
mov
push
ds
xchg
cmp
jmp
sub
xlat
or
mov
sub
pop
sti
add
mov
pop
leave
cmovae
retw
insl
xor
nop
and
add
negb
push
push
sbb
adc
lret
pop
bnd
lock
mov
sbb
sbb
xchg
add
adc
cmp
sar
sarb
add
fmuls
add
adc
outsl
push
addb
mov
cltd
sahf
rorb
add
movsb
inc
dec
lret
cmpsb
testl
jbe
cwtl
cmp
ret
push
adc
sub
push
add
and
fadds
outsl
add
or
das
in
cmc
call
movl
add
xor
or
add
mov
sub
mov
insb
pop
mov
test
add
dec
cmp
imul
jno
loopne
mov
incb
lahf
ficoml
in
ljmp
jecxz
rorb
xlat
ljmp
loope
xor
xchg
add
loop
xor
les
leave
fmuls
test
inc
loopne
add
dec
lea
nop
add
add
aad
or
jae
pop
hlt
jp
sar
adc
adc
mov
xor
mov
test
add
ret
ret
mov
enter
add
jnp
dec
aas
mov
add
inc
mov
xchg
inc
aaa
hlt
in
pop
add
push
fcmovnu
push
clc
dec
mov
add
sub
cmp
xor
lds
pop
std
mov
ds
roll
repz
cmpsl
and
pop
xor
mov
loope
or
and
jno
mov
loopne
cmp
push
and
cld
add
cmc
push
icebp
fstpt
mov
cmpsl
dec
fstl
int3
or
add
insl
faddl
es
jnp
mov
cmp
xchg
aam
add
rorb
adc
add
and
mov
add
lods
mov
add
popa
ljmp
pushf
test
in
add
push
enter
mov
sub
test
dec
mov
and
inc
adcl
out
jae
pop
push
stos
hlt
add
pop
ja
mov
add
mov
xchg
jo
test
pop
call
xor
xchg
loopne
dec
xor
daa
and
test
add
jo
pop
jl
jo
add
addr16
add
sub
push
adc
push
mov
sub
push
stc
xchg
mov
mov
lods
push
xchg
add
je
jns
add
fcmovne
mov
pop
sub
add
mov
call
pushf
ja
or
jp
push
in
addr16
add
or
imul
adc
fiadds
jbe
cmp
jmp
mov
clc
xor
pop
push
push
insb
jle
fdivrl
repz
jl
pop
and
fistps
pop
push
mov
movsb
mov
popf
dec
mov
fisubrs
jae
mov
inc
iret
mov
inc
sbb
cmpb
adc
mov
push
hlt
add
sbb
shrb
sbb
cld
adcb
jg
add
mov
roll
cmp
inc
pop
cwtl
xchg
add
push
mov
add
in
push
repnz
rorb
rclb
aam
fidivrs
pop
jno
adc
popl
testb
mov
aaa
fiaddl
lods
jnp
and
sbb
push
fwait
push
bound
pop
inc
xor
iret
adc
ja
shlb
or
ret
xor
shll
push
rolb
scas
dec
test
xor
add
movl
add
iret
test
inc
add
lahf
ss
sbb
test
push
ja
jb
and
out
add
lret
in
pop
add
mov
cltd
and
add
add
js
mov
inc
sub
add
add
sbbb
subb
push
je
add
rolb
mov
add
add
in
adc
xor
pop
cmc
add
mov
lahf
sub
add
int
ret
cmpb
push
pushf
cwtl
xor
enter
sbb
jg
jb
addb
scas
sbb
sahf
xchg
add
mov
cmp
lret
add
test
lcall
ss
mov
jae
fs
test
xchg
and
cmp
arpl
xor
mov
add
stos
test
adc
push
cmp
jns
ja
add
cli
mov
cld
cmc
outsb
jnp
add
or
add
rclb
into
xchg
imul
add
sub
sub
pop
mov
aad
sar
ret
or
dec
mov
jne
ss
push
jp
cltd
rolb
sub
cmp
xor
xchg
push
cmp
hlt
repz
or
aam
rcr
mov
mov
dec
add
mov
fisttpll
fwait
aad
pop
push
stos
cs
push
pop
mov
subl
mov
inc
mov
insb
call
add
pop
xchg
loopne
inc
jecxz
pushl
je
push
addr16
push
and
mov
into
jns
aas
push
insb
inc
add
push
and
iret
insl
dec
fisttpl
or
addl
pop
mov
and
std
adc
sbb
cli
popa
lods
roll
add
sahf
inc
aad
sub
icebp
je
rcrb
add
ljmp
lret
lea
sub
hlt
pop
pusha
add
cmp
ljmp
nop
test
dec
push
in
xchg
insl
ret
and
lods
out
inc
xchg
aam
jl
sub
jp
sbb
loopne
push
xor
add
mov
aaa
test
in
cmpb
and
popa
fdiv
aad
in
add
pop
cmpsl
test
daa
fldl
pop
loopne
mov
shll
mov
pop
cltd
add
shlb
add
sbb
std
out
xchg
divl
pop
and
into
sbb
lcall
int
int3
dec
add
sti
insb
xchg
and
mov
add
test
or
pop
cli
xor
ret
les
lcall
aaa
cwtl
add
xchg
bound
pop
shrb
or
icebp
and
test
mov
fs
ja
es
pop
add
pusha
sbb
xor
add
in
xor
fdivrs
sbb
pop
shr
cmpb
fcmove
jecxz
sbb
mov
push
xchg
mov
xchg
das
test
inc
cmpsl
roll
add
out
add
repnz
cs
stos
das
xchg
jne
jae
fists
jns
pusha
testl
divb
jle
test
jnp
add
sbb
pop
and
add
push
leave
add
or
popf
in
add
adcl
push
fiaddl
mov
xlat
add
cld
ret
mov
mov
push
cmp
inc
fs
adcb
int3
subb
xchg
adc
add
mov
cmpsb
pop
push
or
bound
mov
in
hlt
xor
xor
leave
pop
cmc
stc
repnz
xor
lds
add
pusha
fisubs
je
pop
mov
xchg
jge
clc
lea
dec
add
leave
hlt
out
aaa
cltd
test
sbb
add
popf
jbe
add
jp
ljmp
stos
cmp
sbb
lock
inc
nop
out
cs
push
mov
jno
dec
inc
mov
jl
les
sarl
cs
shlb
add
roll
pop
inc
xchg
mov
add
test
dec
add
lahf
aas
xor
call
movsl
mov
repz
cmp
ss
pop
or
mov
add
fiadds
js
push
mov
inc
es
xor
and
add
adc
shlb
adc
outsb
mov
dec
mov
testl
or
pop
pop
das
dec
fsubrs
mov
sub
add
add
add
clc
mov
push
jg
jp
sbbb
rolb
test
dec
lods
sahf
sub
fwait
int3
add
roll
testl
in
dec
xchg
cmp
ss
clc
test
ds
arpl
fs
mov
mov
outsl
pop
pop
dec
fstpt
mov
stc
add
cmp
cmp
shlb
add
out
adc
mov
xor
xlat
mov
add
adc
movsb
leave
imul
pop
inc
mov
loopne
inc
add
in
in
sti
add
jg
in
roll
mov
sub
or
add
mov
insb
iret
jle
add
scas
mov
add
fildll
fptan
lahf
add
dec
dec
fwait
add
aad
xchg
mov
xor
cmc
jmp
sbbb
pushf
ret
adc
ds
add
outsb
mov
add
xchg
lea
test
cmp
cwtl
repz
cmpsl
es
adc
mov
stc
fstpt
repz
inc
push
shl
inc
and
sbb
mov
loope
aaa
xchg
sbbl
ret
js
leave
and
or
cmp
add
dec
mov
mov
lahf
add
inc
lock
scas
mov
ds
mov
lret
cld
loopne
out
add
adc
adc
aam
sub
lret
inc
push
cmpsb
dec
add
arpl
es
mov
ret
pop
add
lret
out
imul
inc
and
mov
imul
pop
jl
mov
ds
cwtl
pop
add
mov
mov
sub
fildl
xchg
cwtl
ss
pop
jg
add
sub
inc
add
ret
add
dec
vunpcklps
add
inc
xchg
push
jae
out
ljmp
bound
mov
call
sbb
xchg
xor
add
or
add
cmpsb
inc
xor
jle
or
push
add
mov
mov
cltd
add
sti
push
or
loopne
inc
cli
inc
add
dec
lahf
or
enter
pop
lret
mov
mov
mov
sbb
cmpb
cmc
bound
adc
push
std
mov
adc
dec
ljmp
xchg
lret
cltd
mov
pop
pop
jp
int
add
add
loop
int3
mov
clc
xchg
add
push
jbe
hlt
es
sbb
jle
mov
ret
xchg
fldcw
pop
out
push
or
test
popf
adc
jno
fildll
add
jae
scas
or
add
pop
push
xchg
jge
fcoms
and
adc
mov
movsl
scas
jecxz
push
imul
clc
sbb
sbb
xchg
insb
mov
add
push
or
gs
push
arpl
push
add
shll
repnz
mov
sbb
int
daa
lds
mov
sbbb
or
enter
pop
loop
mov
xchg
sbb
inc
add
jbe
mov
push
add
arpl
jo
rcrb
add
jge
scas
mov
cmp
mov
xor
add
sub
jl
mov
mov
pop
push
cmp
add
inc
call
add
popf
jne
cmpsb
int
add
push
mov
add
push
sbb
pop
fbld
pop
push
lret
imul
cmp
xchg
add
cmpsl
loope
cmp
rclb
mov
sbb
pop
ds
mov
xor
mov
add
adc
cld
pop
fwait
jnp
push
fnop
xor
ja
sarb
lock
sbb
mov
xchg
fsubl
in
add
scas
pop
mov
mov
push
les
add
mov
dec
xchg
add
mov
or
aas
test
out
add
sti
add
lea
add
mov
sbb
xlat
add
cmpsl
pop
cmp
ss
jecxz
insl
xchg
mov
fs
or
dec
test
add
pop
ret
out
loopne
inc
add
cmc
test
popa
xchg
or
mov
cmp
jns
add
aad
and
icebp
aaa
dec
add
and
push
movsb
add
push
or
add
shlb
add
ret
or
enter
adc
jb
jne
add
pop
gs
mov
pop
sti
mov
sub
popa
fs
in
add
dec
xlat
cmpsl
fdivr
cmp
xchg
scas
sbb
ror
arpl
sahf
add
repnz
or
xchg
dec
stos
loopne
nop
add
pop
dec
cs
add
adc
and
or
ljmp
push
jno
add
incb
push
out
js
pop
sbb
adc
dec
lss
jb
lods
ja
rolb
inc
xlat
inc
int3
dec
dec
pop
adc
data16
cs
jb
dec
cmpl
mov
divb
cwtl
add
movsl
std
mov
adc
not
loopne
in
loopne
dec
mov
mov
jno
add
lock
mov
or
xchg
imul
cld
dec
lock
ljmp
mov
dec
cld
inc
xchg
rclb
lret
ret
jo
add
aam
movsl
and
jl
xchg
jp
outsb
in
mov
sbb
inc
test
mov
mov
testl
fucomi
mov
lock
add
out
push
add
cmpsb
das
mov
out
test
int
test
add
movsl
punpckldq
sbb
xchg
xchg
loope
out
add
shrb
jl
ds
add
mov
xchg
pop
jecxz
cmp
jnp
add
xchg
lahf
xchg
pop
xchg
mov
xor
rcrb
push
adc
lcall
jo
add
dec
daa
add
add
mov
or
int
mov
loopne
cmp
jne
xchg
mov
jno
leave
adc
add
bound
push
int3
inc
mov
or
fidivs
andb
daa
jge
mov
inc
push
stos
sbb
stos
arpl
pop
cmp
sub
dec
add
xchg
imul
lcall
pop
adc
add
test
jle
nop
xchg
cwtl
pop
add
push
and
aam
add
push
scas
xorb
pop
add
cmp
test
sbb
inc
lock
cs
mov
xor
das
push
scas
iret
and
adc
add
add
push
leave
in
stos
scas
inc
and
outsb
imul
cmp
ficompl
fiadds
insl
or
push
pshufw
arpl
lret
leave
dec
sbb
pop
mov
call
mov
out
inc
pop
scas
add
int3
addr16
add
or
aaa
pop
das
sbb
push
test
jge
mov
cmp
push
add
movsb
stc
pop
sarb
add
cmpsl
out
and
insl
jp
jo
jb
mov
add
sbb
xchg
mov
add
push
dec
cmp
clc
stos
push
daa
inc
sub
lret
test
mov
add
addl
mov
add
test
add
mov
lahf
jge
mov
add
dec
bound
add
mov
in
loope
push
lahf
push
cmp
sbb
testl
pop
add
insb
jb
into
out
inc
and
add
push
push
sbb
cmpsb
daa
andb
loope
xchg
adcl
adc
pop
cmc
sub
mov
div
push
add
mov
pop
add
ret
add
stos
popl
or
and
leave
in
jge
sti
mov
enter
adc
jg
test
push
or
add
out
sub
cmp
dec
sub
mov
add
out
in
bound
pop
out
add
imul
dec
lods
int3
mov
cld
fidivrs
add
pop
xchg
outsl
lds
xor
fwait
mov
push
into
add
push
or
dec
cmp
dec
add
xor
cmp
out
fistl
push
lods
add
ds
ljmp
adc
dec
pusha
jnp
jmp
clc
pop
add
cltd
js
cli
inc
fwait
gs
fsin
sub
push
sti
push
jno
add
cmpsl
fidivrs
mov
repnz
cmp
add
mov
iret
xchg
rep
rorb
dec
testb
pusha
bound
lods
ss
or
add
in
xchg
fildl
cs
mov
popl
pushf
sbb
push
add
lcall
in
or
jmp
pand
jo
fs
xchg
jb
add
adc
add
inc
inc
push
add
pop
mov
xchg
lret
pop
push
sbb
addl
nop
iret
add
mov
orb
pop
pop
adc
sub
das
add
and
clc
jp
dec
add
popa
clc
pop
mull
lock
cmp
sbb
jne
add
fisubrl
fs
shrl
cmpsl
inc
add
mov
xchg
adc
add
jbe
push
adc
popa
mov
dec
rcrb
push
push
pop
lea
lods
and
mov
jecxz
push
mov
bound
stc
popa
and
das
ljmp
loope
clc
rolb
lret
mov
push
aam
sarl
mov
pop
mov
add
jno
loope
xadd
mov
fsubp
mov
out
mov
and
and
inc
or
movsb
outsb
inc
sbb
insb
jno
test
insl
movl
xchg
sub
mov
push
and
or
add
inc
loopne
cmp
xchg
rol
inc
stc
mov
mov
xor
insb
mov
pop
inc
add
mov
mov
add
shll
jns
and
bound
clc
mov
xor
inc
xorb
add
sub
data16
mov
and
mov
pop
add
push
jp
arpl
movsb
add
nop
or
add
sub
out
pushw
stc
fldl
xchg
xor
int3
jmp
xchg
out
daa
mov
je
and
pusha
enter
in
popa
mov
dec
jnp
sbbb
and
and
cmp
push
xchg
push
mov
popf
bound
push
gs
js
jae
outsb
xor
insl
pop
pop
jl
mov
ror
iret
mov
fdivl
mov
pop
out
test
mov
pop
mov
fcmove
fwait
jbe
inc
in
and
mov
add
arpl
and
add
loopne
rcrb
lds
or
xchg
int3
push
mov
add
add
inc
jp
jb
add
jge
or
scas
push
push
xlat
jae
pop
movsb
test
andb
inc
ret
dec
cmc
push
jo
aas
aad
xor
add
bound
mov
jns
jno
xor
sub
inc
idivb
add
xor
in
imul
cmp
push
add
adc
add
ss
pushf
pusha
shlb
movsl
pusha
iret
add
in
cmpsb
add
xor
sbb
inc
push
push
mov
cmpb
mov
pop
mov
jnp
jmp
pop
lock
push
push
pop
cmpb
mov
fnop
repnz
sbb
adc
loop
lahf
sub
clc
rorl
add
cmp
lods
pop
dec
add
jl
daa
int
shlb
and
mov
inc
lock
jae
mov
cwtl
cmc
add
test
mov
test
popa
sbb
sbbb
lcall
lret
xor
out
cmp
sbb
push
jnp
add
xor
add
dec
xchg
loop
test
push
xor
mulb
mov
adc
ret
ss
loop
rorb
in
cli
push
jbe
out
and
mov
and
inc
sub
inc
xchg
add
dec
sbb
scas
xchg
adc
dec
push
pop
outsb
push
loopne
addr16
gs
push
add
decb
stc
sti
push
arpl
in
adc
andb
xor
add
dec
xlat
and
sbb
dec
pop
xchg
inc
cld
repz
cmp
push
les
mov
mov
inc
nop
dec
mov
inc
fisubrl
pop
push
jmp
add
add
rcll
add
stos
xchg
adc
jp
lods
lea
in
inc
mov
cmp
orb
mov
rolb
aas
shlb
fiaddl
sbb
pop
pop
dec
lret
pop
xchg
mov
dec
aas
jo
sbb
add
sub
insb
cmp
add
int3
dec
testb
stos
push
sarl
add
lret
mov
or
add
cmp
and
in
int
add
dec
aas
ja
lret
dec
mov
popa
psllw
and
cmpsl
inc
insb
xchg
add
aas
sbb
jne
jp
add
mov
aam
add
les
mov
not
loopne
and
lods
add
mov
push
add
ret
movb
xchg
add
je
and
mov
xchg
jo
add
ds
or
ret
pop
fstpl
xchg
mov
add
ficompl
nop
inc
leave
mov
insb
push
loopne
push
xchg
and
adc
pop
pop
into
jbe
sar
add
xor
fildll
les
shlb
insb
loopne
sti
sarb
testb
dec
mov
jb
xchg
push
or
clc
push
pushf
push
add
in
pop
fwait
jo
jecxz
or
popa
aam
fsubl
sub
test
movsb
pop
sti
ret
mov
test
shlb
dec
add
xchg
sbb
add
fld
out
adc
mov
addr16
sti
sub
xor
add
rcrb
jp
ss
or
imul
fwait
inc
incb
out
add
or
aaa
xchg
mov
cs
shll
xchg
push
mov
insb
in
mov
movsl
sbb
das
mov
push
sbb
sub
kmovw
popf
mov
nop
das
jae
xor
inc
push
in
adc
mov
xchg
add
ja
iret
pop
je
cli
mov
or
scas
or
jge
imul
sbb
add
xchg
jno
jecxz
and
add
andb
cmp
je
or
outsb
es
arpl
add
pop
hlt
pusha
pop
iret
leave
clc
lret
mov
repnz
nop
mov
rcrb
lds
lods
cmp
add
cmp
or
pop
or
sbbl
jge
inc
mov
les
loop
movsb
str
sub
bound
mov
cmp
lcall
dec
push
inc
ja
cmc
clc
stos
scas
add
xorl
pop
idivl
enter
loopne
cmpsb
push
aas
xchg
std
or
pop
push
adc
je
test
xchg
and
lahf
mov
sub
jge
leave
mov
add
push
sbb
in
push
loope
jg
sbb
push
pop
jne
jno
js
dec
inc
pop
mov
jae
clc
adcb
imul
filds
lea
cld
dec
add
adc
outsb
inc
mov
sub
mov
dec
dec
test
inc
inc
pop
sub
test
push
psubusb
add
out
sahf
mov
fmull
mov
xchg
jg
add
roll
mov
sahf
mov
or
mov
add
cmpsl
cmp
lret
fs
dec
fadd
aad
add
cltd
imul
inc
stc
outsl
or
dec
loopne
inc
movsl
xor
pushf
sub
fnstenv
into
sbb
and
or
cmpsl
popl
xor
push
cli
mov
mov
mov
xchg
add
xchg
or
add
adc
adc
inc
clc
imul
stos
mov
pop
and
inc
push
loopne
pushf
in
clc
add
jno
js
mov
ss
in
jge
mov
test
fdivs
inc
fnstsw
pop
and
sbb
xchg
add
pushf
repz
add
add
into
mov
inc
jb
dec
movl
pop
add
jp
mov
cs
fwait
add
mov
lods
mov
call
icebp
jae
out
inc
and
in
je
pop
ss
add
xlat
aas
outsl
add
imul
dec
inc
popa
jb
jg
add
fcomi
push
pop
dec
xor
cmp
mov
je
jmp
loope
test
fisubs
ror
lods
cltd
outsb
add
mov
mov
sbb
in
add
leave
mov
daa
adc
lret
mov
pop
andb
lock
cmpsl
inc
jnp
fisttpll
push
aaa
insl
inc
les
push
sbb
out
aam
neg
cmp
stos
mov
rolb
call
sbb
lret
in
mov
and
jmp
inc
lcall
dec
mov
add
inc
xchg
xchg
fwait
adc
or
imul
jb
lahf
add
adc
cltd
cmp
int
add
or
inc
add
jbe
add
pop
jns
cmpsl
roll
push
stc
mov
out
xor
push
push
or
fmul
mov
xchg
and
movsb
mov
cmp
mov
sbb
scas
xor
mov
out
stos
rclb
cmp
add
xchg
add
mov
adc
mov
cmp
mov
add
pop
mov
cmp
jae
ja
add
cli
scas
xchg
and
push
in
jns
mov
bound
int
add
inc
fwait
mov
and
jne
addb
dec
mov
lahf
xor
mov
lds
jp
movsb
mov
cmpsl
or
int3
xlat
sub
add
stc
inc
sbbl
xchg
add
jne
jmp
repnz
add
fbstp
popf
in
in
sti
inc
out
jle
jp
jnp
or
cmpsb
jbe
dec
sub
pop
stos
xchg
dec
and
add
add
popf
mov
push
push
add
rolb
mov
add
out
ret
or
add
add
sahf
pop
mov
imulb
loope
sbb
add
xchg
enter
fidivl
arpl
ljmp
out
or
jno
pop
add
mov
in
leave
scas
lcall
lret
add
cmp
mov
add
dec
into
pop
pop
mov
test
int3
sub
in
mov
push
data16
push
adc
mov
or
jbe
andb
xchg
addb
lcall
pop
and
shrb
mulb
add
and
ret
jge
add
popa
adc
xchg
cmp
add
enter
in
cmp
hlt
shlb
add
push
fst
cs
push
imul
adc
stc
movsl
pusha
add
sbb
leave
add
pop
fiadds
push
inc
mov
sub
sub
pop
fiaddl
jno
mov
add
add
and
out
andb
pop
mov
adc
outsb
add
sub
rcll
add
mov
lcall
lea
int
add
add
negb
out
mov
lea
inc
flds
mov
or
jg
faddl
mov
sahf
pop
jns
sbb
add
rol
mov
lret
dec
mull
push
aam
fcoms
sbb
fsubl
inc
adc
popf
or
stc
es
add
stos
push
repnz
enter
lods
sub
cld
pop
mov
or
jg
cmp
xchg
fnstenv
les
inc
add
mov
gs
add
adc
imul
inc
cmpsb
add
clc
pop
add
and
adc
inc
add
loopne
add
decl
lahf
adc
xchg
add
sti
fs
int3
in
call
shlb
dec
add
xlat
mov
rol
inc
mov
cwtl
dec
add
les
les
flds
add
js
dec
add
sub
nop
decl
in
aad
rcrl
jmp
loope
dec
pushf
sbb
xchg
sbbb
inc
js
add
jo
add
repnz
jmp
add
out
dec
jmp
pushl
rolb
inc
cmp
xchg
jg
ljmp
out
dec
push
add
and
mov
add
cwtl
loop
ret
std
push
add
cmp
mov
pop
xor
mov
femms
mov
cli
jns
lock
sbb
mov
stc
or
daa
jb
pop
cld
testb
test
cmpsl
inc
push
xchg
popa
dec
add
xchg
adc
and
call
mov
rolb
cmp
and
and
jge
js
mov
mov
jnp
cld
xchg
inc
ficoml
adcl
lcall
mov
inc
mov
aad
add
fidivs
loope
xchg
mov
out
adc
and
shlb
dec
xchg
iret
cwtl
test
add
xor
mov
test
pop
xor
aad
adc
adc
in
push
sub
fwait
into
pop
and
inc
aas
mov
movl
pop
jno
sub
mov
jge
add
bound
dec
fdiv
mov
lret
pop
mov
mov
insl
cmp
and
imul
lcall
jp
clc
adc
iret
add
movl
icebp
mov
xchg
add
dec
mov
mov
shll
adc
add
jle
inc
mov
mov
sahf
ret
add
stos
add
out
push
add
pop
mov
add
test
push
scas
imul
out
sbb
mov
loope
ret
and
aad
repnz
insl
outsl
cmc
push
in
das
scas
pop
shrb
xor
xchg
add
sbb
inc
add
leave
push
aad
stos
inc
add
arpl
in
hlt
ds
leave
es
mov
jmp
fwait
rcrb
xchg
repnz
jo
mov
adc
into
add
gs
or
std
aaa
xchg
sbb
jle
jge
pop
dec
jbe
xchg
cwtl
add
mov
movsb
and
shlb
and
das
in
pop
scas
jmp
je
xor
push
pop
mov
dec
filds
rcrb
jno
pop
xor
les
inc
daa
inc
imul
xlat
in
and
add
jmp
jne
push
test
icebp
test
push
cmp
rcrb
and
push
movsl
in
imul
cmp
shlb
pusha
loope
pusha
xor
roll
push
pop
repz
dec
jle
test
add
out
int
sbb
aaa
xorb
nop
add
andl
add
faddl
jne
mov
stc
add
fstl
aas
insl
lcall
pop
mov
mov
add
loop
mov
test
sbb
mov
pop
mov
jg
cld
or
test
sti
mov
daa
mov
out
mov
mov
add
mov
sti
fadds
dec
xchg
and
add
pop
and
clc
xchg
fisubl
imul
add
push
sahf
xor
pop
iret
add
addr16
cltd
into
pop
fbstp
cmp
push
add
cli
lock
in
and
ds
lods
sbb
popfw
clc
roll
das
cmp
adc
mov
imul
pop
lahf
pop
popa
add
add
das
gs
pop
in
add
sub
mov
mov
iret
add
into
cmc
sbb
xchg
nop
mov
and
sbb
xchg
mov
push
dec
test
nop
fcmovbe
call
shrb
sub
add
pushf
les
jno
aas
xchg
sub
sub
xchg
jmp
and
mov
dec
pop
jecxz
jae
or
jno
jb
jmp
adc
inc
aas
lods
mov
add
inc
outsl
js
sbb
jne
dec
push
addl
pop
loop
js
sub
mov
aad
fwait
cwtl
popf
add
xor
or
xchg
imul
and
pop
mov
mov
add
add
mov
jmp
mov
pop
add
xchg
ja
cld
and
out
nop
loopne
ljmp
and
add
es
aas
bnd
add
dec
in
sub
cltd
inc
test
pop
and
and
and
mov
lahf
out
into
lods
jnp
add
jge
arpl
cli
mov
insl
xchg
adc
clc
mov
adc
push
push
jg
insb
mov
ret
xchg
test
add
pop
cltd
stos
roll
mov
pop
or
jno
sub
add
xchg
stos
insb
mov
or
roll
adc
sbb
mov
push
sti
add
stc
cs
xchg
out
push
mov
iret
popa
add
or
mov
inc
pushl
add
cli
add
push
int
mov
jecxz
fs
pop
inc
test
add
ja
js
ds
sub
push
mov
cmp
pop
mov
in
cwtl
loopne
mov
xchg
mov
add
xor
jne,pt
mov
inc
mov
and
int3
add
loope
jae
mov
or
call
xor
ret
xor
outsb
lahf
mov
fiadds
pop
mov
pusha
add
xor
mov
pushf
xchg
cmp
fwait
and
lock
clc
xor
imul
jle
xchg
jnp
loope
jl
add
push
stos
ja
incb
mov
popf
ret
mov
jno
pusha
jae
nopl
daa
out
les
and
scas
dec
iret
xor
pop
adc
aas
cmp
lock
mov
add
cli
lahf
xchg
jbe
into
cmp
cwtl
add
call
add
push
or
ja
mov
mov
inc
add
push
repnz
push
rol
outsl
fwait
jge
lds
roll
cmp
in
add
scas
inc
ret
das
inc
add
rolb
sbbl
xor
jge
aas
xchg
jbe
sbb
add
lds
movsb
mov
pop
cmp
xchg
mov
scas
enter
add
shr
push
ljmp
sarb
add
lea
imull
out
add
inc
inc
stc
enter
add
pop
dec
sub
inc
jp
mov
add
pmaxub
and
fisttpl
cmp
cmpl
movb
add
loope
or
nop
test
imul
pop
sub
and
inc
cmp
mov
mov
int
add
jl
insb
mov
add
pop
imul
adc
outsb
add
sub
fsubl
icebp
jno
and
test
cmp
push
add
inc
push
sbb
and
mov
daa
adc
mov
xchg
jnp
les
pop
cmp
mov
push
dec
sahf
inc
testb
adc
fldenv
mov
les
jnp
add
in
adc
bound
test
inc
pop
xchg
add
pusha
stc
xchg
cmp
add
ror
jns
and
daa
add
bound
fldl
into
ret
or
loop
sbb
fbld
arpl
out
push
ret
aas
pop
out
lods
loope
add
jg
mov
add
adc
add
out
loopne
jmp
enter
cmp
fiaddl
clc
sti
ret
in
mov
out
pop
jle
xor
pop
movsb
cmp
idivb
sbb
push
std
popf
add
js
add
sub
lods
fnstenv
jle
inc
stos
add
dec
in
jge
nop
mov
out
out
shrb
fsubrs
pop
add
jo
add
nop
ret
mov
cmc
orb
loopne
add
ja
daa
je
subb
jl
aas
dec
and
inc
jge
jle
inc
notb
or
je
fildl
add
hlt
sbb
add
xorb
subb
movb
notb
int3
dec
sarl
sbbb
loop
mov
das
mov
pop
inc
or
add
lret
add
inc
icebp
pop
hlt
loopne
mov
aas
rolb
dec
pop
insl
sti
or
lock
cwtl
sub
add
test
nop
cmpl
lock
and
ret
fiadds
push
mov
fdivrs
leave
out
insl
subb
add
fdivr
imull
icebp
push
push
mov
or
mov
aad
cltd
loope
rolb
sarb
push
dec
sub
push
xchg
inc
stos
clc
out
lahf
fnstenv
add
sub
adc
push
xlat
inc
sbb
or
xchg
out
nop
test
rorb
add
xchg
xchg
clc
mov
and
or
mov
inc
mov
adc
lock
add
jo
sbb
mov
inc
aas
addl
out
ja
xchg
add
pop
out
pushf
mov
add
xor
outsb
jg
add
js
std
jns
push
jg
bound
adc
mov
sub
add
outsl
fimuls
pusha
loope
mov
push
sbb
test
jle
jp
lock
addr16
add
or
add
sub
xchg
sub
jmp
xchg
or
pop
cmp
pusha
iret
push
push
in
fcom
jle
pop
mov
jnp
arpl
insb
je
scas
add
jp
adc
push
rcl
mov
scas
add
push
xor
imul
xor
jecxz
xor
lea
jno
add
scas
cwtl
cmpsb
push
shrl
inc
inc
sbb
xor
xchg
cmp
dec
push
xor
lcall
or
add
popa
arpl
add
hlt
add
shl
add
cmc
sub
lds
push
fimuls
cmp
pop
pusha
xchg
sub
jmp
inc
dec
aas
pusha
aaa
cmpb
sbb
jb
adc
sbb
push
pop
bound
movsb
cmp
jg
ds
add
and
jge
scas
cmpsl
xchg
cld
jo
push
in
sbb
add
les
jl
loop
jno
enter
loopne
add
aas
lahf
push
enter
add
out
cmp
cmpsb
into
repz
push
jnp
jge,pt
cmp
loop
cmp
aaa
cld
add
xchg
fwait
into
movsl
bnd
sti
ds
mov
cmp
jb
sub
scas
shr
loope
shrl
xchg
pop
jno
addr16
xchg
dec
ljmp
imul
mov
sbb
flds
clc
rolb
cmp
adc
add
sarb
xchg
daa
faddl
dec
and
lcall
dec
icebp
sub
shrb
add
dec
std
and
movsb
add
aas
jae
mov
add
or
inc
push
or
icebp
subb
cmp
and
sbb
mov
les
rorl
filds
mull
lods
fadds
les
movsb
add
insl
mov
es
dec
mov
in
add
dec
xor
ja
mov
or
cmpl
cmpsb
cli
push
pusha
fildl
out
xchg
test
lods
enter
mov
dec
add
xchg
and
imul
lahf
into
and
pushf
add
cwtl
movsl
ret
sti
add
push
in
sub
mov
sub
push
cld
sbb
pop
adc
loopne
les
roll
add
stos
or
inc
mov
inc
scas
xchg
nop
mov
jge
dec
push
sub
decb
cmp
and
inc
jns
mov
cmp
push
pop
xchg
call
mov
sub
jecxz
xlat
add
xchg
dec
push
sbb
jb
inc
add
aas
jmp
and
incb
sub
sbb
mov
fldt
arpl
dec
adcl
push
inc
mov
jo
fcomps
inc
incl
imul
or
cmp
add
mov
das
xchg
and
lock
add
mov
ja
add
ja
sbb
int
std
mov
cmpsl
add
fldl2e
xor
loop
and
and
mov
mov
dec
arpl
pop
inc
jno
mov
and
out
pusha
jge
add
in
dec
popa
stos
cwtl
lods
add
loopne
inc
xchg
nop
inc
push
add
xor
pop
es
data16
mov
nop
or
sbb
add
jecxz
out
sti
mov
fwait
cmp
add
dec
fs
dec
push
ljmp
add
rcr
test
and
cmp
movl
aad
sub
xor
gs
jp
dec
mov
xor
scas
add
jg
cmp
add
adc
mov
repnz
add
rorb
js
ja
shlb
pop
mov
and
jb
push
add
add
aas
and
add
cltd
mov
ljmp
dec
pop
hlt
in
mov
xor
lock
and
add
loop
addr16
inc
add
sub
out
mov
xchg
push
jecxz
idiv
add
xchg
loopne
push
xor
cs
cmp
and
les
addr16
push
adc
test
mov
adc
jmp
stos
push
pop
jg
push
push
cmpb
xchg
pop
popf
add
push
notl
or
fwait
pop
add
mov
inc
stos
push
js
sbb
adc
add
popf
jecxz
jo
or
push
inc
out
jns
mov
cwtl
xchg
add
outsb
inc
jge
xor
push
sti
xor
add
cmpsb
sub
add
test
add
movsb
enter
add
int3
aam
int
fdivrl
or
push
fisttpll
sbb
in
pop
sbb
sub
add
cmovle
cmc
outsl
loopne
mov
test
jo
xor
push
mov
push
dec
add
jle
or
mov
or
pop
test
daa
testb
push
sub
push
cwtl
pushf
out
push
add
mov
test
add
daa
pop
and
xor
movsl
stc
mov
add
loop
aad
mov
dec
loope
ret
lock
lea
mov
mov
insl
pop
jbe
lret
mov
lods
xor
outsb
loope
mov
mov
insl
sub
add
rclb
jbe
add
sbb
cmp
sub
inc
scas
xchg
cmp
and
mov
loope
push
cmpsb
cmp
sub
pop
push
cmp
cli
hlt
sahf
fcomps
mov
mov
xor
mov
adc
lret
in
mov
insb
orb
test
daa
xchg
sahf
in
aas
test
mov
and
scas
testl
sahf
pop
cmp
call
add
mov
stc
add
mov
loop
push
cmpsb
outsl
fiadds
incl
sbb
jnp
mov
mov
fimull
push
add
cmp
out
push
outsb
mov
scas
mov
lds
daa
adc
in
mov
imul
add
add
mov
sti
rcl
in
in
xchg
add
lret
insb
cli
sub
push
lock
xlat
lahf
loopne
cmp
and
sbb
fadds
push
add
push
je
les
inc
push
fabs
cmp
dec
mov
imul
add
lods
test
popf
pop
mov
scas
adc
ret
mov
mov
les
call
hlt
or
mov
pop
outsl
fnstenv
adc
dec
cmpsb
cmp
or
in
mov
push
inc
mov
sbb
inc
add
fs
sub
ficoms
dec
lret
add
dec
cltd
jno
inc
cmpsb
add
std
in
sbb
notb
loopne
add
outsl
insl
mov
mov
jbe
mov
lock
cld
aas
ret
mov
aaa
cwtl
mov
jecxz
mov
inc
mov
testb
add
aam
xchg
add
stos
cmpsl
shlb
dec
out
jp
add
jle
or
push
in
fdivrl
pop
data16
and
jge
add
mov
dec
aad
popa
ret
aas
ljmp
jae
clc
insl
or
mov
aad
stos
hlt
push
add
pop
pop
add
divb
sarb
add
pop
xchg
iret
arpl
out
gs
lods
cmp
cmp
or
roll
sbbb
test
aaa
xlat
dec
mov
jbe
mov
xor
rorl
dec
xchg
add
add
push
sub
inc
cmp
addr16
add
into
sub
add
push
jo
ja
push
jmp
push
pop
das
jb
std
pop
xor
jle
lret
in
mov
jns
dec
add
bound
cmpsl
out
dec
or
pop
inc
call
popf
dec
cli
outsl
add
mov
aas
add
mov
cmp
jp
in
mov
ret
add
mov
repz
out
push
push
addl
xor
fwait
sub
xchg
mov
cmp
fisttps
js
add
push
pop
xlat
jle
lock
jle
add
push
and
ror
mov
aas
add
mov
jae
cltd
sub
mov
inc
dec
in
inc
pop
std
or
mov
repnz
add
in
push
add
cli
scas
pop
je
add
mov
sbb
inc
xchg
fidivl
aas
and
push
test
nopl
pop
add
xor
push
ror
inc
pop
repnz
adc
pop
mov
adc
lds
cmc
out
fidivrs
xchg
pop
jbe
push
cli
int3
mov
push
add
inc
inc
icebp
aaa
cmovne
sbb
repnz
jbe
sbb
sbb
movsb
push
pop
jp
cmp
icebp
ja
mov
in
mov
ds
dec
push
fwait
push
cmp
hlt
jno
mov
cmc
cmp
in
imul
inc
js
fadd
mov
outsl
inc
daa
pop
pusha
push
aam
or
loop
mov
lahf
pop
jne
clc
and
inc
sbb
cmp
add
je
test
xchg
loope
int
push
movsb
pop
add
ds
js
inc
pop
pop
add
sbb
xor
xchg
fldl
add
pop
pop
cmp
mov
aad
out
insb
add
or
jns
fsubl
add
js
ds
test
add
int
enter
cmc
push
add
xchg
and
sub
cmpb
movq
jae
test
cmpsb
mov
std
mov
cltd
out
mov
cwtl
push
add
jns
cmp
repz
cmp
adc
add
xor
xlat
fs
add
lock
mov
add
outsl
mov
add
cmc
andl
out
xlat
lods
inc
cmp
add
aas
cmpb
sbb
add
xchg
cmp
test
add
into
add
or
add
popf
push
pop
jnp
and
inc
add
inc
fsubr
sti
iret
inc
xor
in
jmp
mov
sub
adc
sbb
xchg
fwait
xor
in
test
dec
add
sub
sbb
inc
in
fsubl
add
add
inc
add
adc
ffreep
jmp
sub
pushf
in
jecxz
add
daa
push
pop
or
xchg
add
and
xor
xlat
ds
add
add
pop
es
clc
add
and
out
jb
jnp
add
sub
inc
into
dec
add
inc
mov
divps
add
pop
fldt
fwait
dec
mov
dec
cmpl
inc
fcomp
mov
call
adc
add
fcmovne
shll
xchg
hlt
or
mov
push
dec
xchg
pop
lock
add
lret
push
xorl
icebp
jns
adc
push
cmpsl
cmp
test
pusha
insl
mov
lods
add
sub
jne
out
stc
imul
push
push
xchg
sub
pusha
cltd
pop
test
iret
cltd
mov
test
mov
ja
pop
add
sbb
jge
add
cmpsb
cmp
clc
test
add
mov
pusha
add
xchg
movsb
mov
outsb
popl
test
mov
cltd
xchg
pusha
add
or
mov
fnstsw
add
enter
sub
into
pop
pop
jnp
pop
rcll
fwait
sbb
add
xchg
test
leave
iret
add
in
xchg
jecxz
add
sti
add
cmp
mov
push
clc
or
push
fildl
xor
pop
or
cmpsl
or
call
dec
dec
sbb
inc
add
repnz
mov
xchg
or
loopne
lcall
roll
insl
add
fistpll
dec
frstor
mov
cwtl
les
iret
int
jp
jne
cmp
pushf
pushf
scas
or
pop
out
add
cwtl
xchg
mov
cmp
iret
aas
pop
rolb
test
mov
or
jle
add
daa
addb
insb
mov
push
and
inc
sarb
push
jle
and
popf
lcall
push
jae
or
popl
pop
xor
add
insl
into
out
add
mov
mov
aas
push
dec
or
imul
int
rorb
pop
fisubl
inc
pusha
xlat
ljmp
add
or
sbbl
arpl
das
and
jns
add
mov
shlb
push
rol
into
cld
add
and
pop
movsl
xlat
mov
icebp
add
cmp
aaa
into
or
pop
pop
jge
mov
jbe
std
enter
sahf
add
call
add
scas
rolb
pop
add
adc
jbe
inc
pop
dec
or
testl
cmp
test
add
cmp
bswap
int3
dec
pop
in
mov
mov
gs
lahf
pop
dec
test
push
pop
lds
xchg
mov
and
jno
movsl
pop
shl
ds
xor
push
sub
cmc
mov
loope
or
push
push
or
jb
inc
popf
arpl
pop
xor
mov
nop
xchg
add
inc
clc
sbb
clc
push
addb
xchg
fimuls
lret
mov
mov
ljmp
fcoml
jno
pop
mov
out
add
stos
add
int
jnp
cmpsl
push
and
iret
and
add
mov
clc
icebp
mov
std
adc
cltd
addb
jno
test
mov
sahf
add
popa
and
rcl
sbb
cli
jmp
aam
lret
movmskps
popf
les
cmc
or
cmp
outsb
and
add
aaa
test
jo
cmp
sbb
pushf
xor
xor
sub
inc
cmc
dec
mov
jo
fcompl
inc
push
or
sub
in
add
pop
out
gs
add
popf
jae
jge
lock
addb
dec
sub
imull
out
adc
jo
ja
cld
sahf
and
dec
insl
lea
gs
push
data16
cmpsb
sti
jle
mov
or
std
hlt
push
jae
sbb
jp
fsubrl
mov
fcomps
mov
adc
cmp
dec
addl
mov
add
push
nop
and
scas
aad
imul
jmp
mov
add
jle
or
pop
mov
cmc
or
add
inc
ret
movb
pop
xchg
jecxz
imul
add
cld
jmp
jb
flds
aad
enter
lock
dec
pop
jae
cmc
stc
cmp
mov
add
xor
add
mov
jecxz
cwtl
inc
lds
sub
cmp
jo
push
popa
cmp
add
into
or
mov
xor
sbb
lock
insl
mov
add
shrl
ljmp
and
andb
pusha
lea
faddl
loop
lods
rcll
jge
in
add
sahf
rolb
les
movsb
sarb
mov
and
dec
xorb
sub
dec
lods
addb
lock
jo
xchg
dec
data16
jecxz
js
add
cmp
inc
mov
shrb
mov
jns
punpcklbw
imul
lods
aas
out
pop
sub
stos
pop
and
es
add
shll
movl
cmp
add
or
xchg
push
mov
or
mov
sub
cmpsl
rcl
push
sti
rcl
add
add
cld
inc
add
or
shl
repnz
orb
mov
pop
cmp
dec
cmpl
add
mov
into
jnp
inc
out
pop
or
inc
sti
idivb
cmc
dec
rorb
jge
add
or
in
jp
and
fwait
pop
das
or
test
dec
push
cmpsl
addl
xchg
push
aam
jmpw
jecxz
pop
cmp
cli
add
add
cltd
in
mov
add
adc
insb
and
cmp
and
stos
mov
jl
mov
adc
jmp
shrl
nop
lods
ljmp
pop
or
xlat
ret
mov
add
divl
jp
push
call
and
jns
repz
sbb
jno
lds
add
ret
push
inc
arpl
push
or
xchg
and
hlt
mov
lock
fisttpl
mov
shl
inc
push
insb
sbb
faddp
iret
pop
pop
outsl
and
add
mov
sub
aaa
add
push
std
jge
push
or
jbe
xchg
into
push
add
mov
add
and
inc
scas
and
add
xor
push
pop
add
dec
jns
out
jl
mov
jno
jmp
sbb
daa
cmp
enter
in
add
dec
inc
inc
pop
inc
mov
push
push
lods
test
push
cs
pushf
lahf
iret
rolb
add
movsl
add
or
loope,pt
test
push
in
xchg
sub
call
mov
addr16
notl
insl
mov
js
orl
sub
xor
xchg
add
push
mov
mov
and
loop
add
movsl
lret
add
faddl
outsb
pop
xor
seta
enter
add
adc
movsb
dec
mov
cmp
iret
sbb
cmp
daa
aas
xchg
sbbb
mov
call
mov
lahf
add
or
xchg
test
sahf
int
imul
jo
or
mov
movsb
negl
fdivs
pop
push
fnstenv
mov
data16
rolb
inc
fs
dec
stc
daa
add
popa
loop
fwait
outsl
jnp
rcr
xor
inc
test
adc
int3
add
xor
imul
mov
adc
dec
cld
sbb
mov
mov
lahf
subl
add
mov
outsl
cmp
inc
cwtl
pop
add
xchg
loopne
adc
push
xchg
add
mov
pop
in
aad
add
jo
test
cmp
jl
dec
sbb
and
mov
cmpl
xchg
flds
or
dec
add
nop
cld
add
jo
mov
or
add
jmp
pop
xor
rcll
aad
jg
jno
sbb
call
lea
pop
inc
pop
push
movsb
add
ret
je
lods
lcall
add
addr16
mov
jecxz
add
test
pop
push
xorl
dec
mov
out
add
es
mov
mov
or
std
loope
mulb
push
pop
and
sti
and
mov
adc
pusha
mov
movsl
and
dec
add
lret
xor
mov
std
mov
cmpsl
cmp
push
cmpsb
insl
jle
dec
xor
sbb
ret
or
jb
dec
add
jmp
xchg
add
add
ret
cmp
shl
pop
xchg
sub
pop
mov
nop
add
shll
add
add
push
cli
xchg
add
mov
jo
pop
add
inc
movsl
loop
hlt
add
repz
or
cli
xchg
movsb
data16
out
mov
roll
push
hlt
cmp
test
or
lret
clc
icebp
xchg
mov
cltd
dec
arpl
push
jbe
data16
stos
xor
add
pusha
xor
add
sub
add
mov
int3
or
push
adc
add
dec
add
pop
mov
push
mov
mov
insb
adc
in
mov
fstpt
add
out
ljmp
jne
add
jb
mov
mov
sub
mov
popa
stc
jp
add
addr16
sub
out
gs
rolb
insb
fists
es
outsb
jmp
stos
je
mov
bound
in
xorb
jnp
adc
mov
jmp
stos
sub
lahf
push
cld
add
popa
popf
call
add
shll
add
inc
imul
xchg
int3
iret
outsb
cmp
adc
push
add
add
scas
xchg
loop
in
rcrl
popa
xchg
andb
fcmove
add
cltd
push
or
mov
sbb
hlt
add
in
leave
addr16
repnz
stos
dec
add
aam
faddl
mov
ret
pop
add
xor
add
rorb
test
sub
add
jbe
push
ljmp
repnz
or
inc
and
dec
mov
jo
clc
jbe
inc
add
push
cmp
sub
add
jl
cmpsb
jno
pop
into
jns
sub
xor
ret
in
jno
sbb
inc
aam
lea
int
test
add
pop
add
popf
test
add
add
push
add
xchg
imul
fsubl
loope
cmp
push
dec
xchg
pop
lods
add
test
push
cmp
roll
mov
add
loopne
add
nop
pop
testb
add
inc
rolb
jno
pop
outsb
jg
lret
sub
sar
cmpsb
add
inc
push
ss
aam
pop
mov
add
push
sub
bndldx
outsb
das
fdivl
adc
cli
add
dec
inc
add
fidivrs
add
das
xchg
scas
add
mov
loop
ljmp
fsubrs
pop
cmp
hlt
imul
test
fiadds
loopne
loop
sub
ja
xor
add
add
adc
or
ret
in
mov
jmp
add
cmp
sbb
xor
inc
data16
subl
add
imul
add
xchg
mul
mov
aaa
push
in
add
add
mov
jecxz
leave
xchg
fwait
imul
xor
sbb
xchg
in
jo
push
add
loope
outsb
sahf
jae
mov
sbb
add
dec
nop
xlat
insl
jl
stc
add
push
cmp
xor
jno
inc
adc
xor
push
mov
dec
mov
fadd
or
mov
jl
test
mov
add
iret
aas
push
rorl
pop
add
inc
and
dec
fistpl
add
addl
add
push
mov
test
pop
std
mov
divb
fiadds
rcll
incl
mov
mov
xor
jp
add
sub
lahf
push
mov
mov
mov
add
or
or
pop
es
and
cmp
sbb
lock
jns
cmp
sbbb
cli
mov
ljmp
sub
fwait
push
mov
lods
sti
mov
insl
ljmp
push
frstor
pusha
mov
out
dec
test
push
xor
sbb
pand
outsb
add
test
icebp
rcrl
cmc
add
jl
int
inc
pop
xchg
sbb
xor
mov
loope
in
test
cmc
cmp
dec
add
push
xchg
loop
mov
xor
cs
or
mov
in
js
sbb
or
ror
fnstenv
and
fwait
inc
mov
pusha
sbb
leave
out
dec
notb
ja
add
cmp
mov
mov
add
xchg
dec
add
in
jle
je
add
inc
bound
mov
jne
add
dec
xchg
ret
cmp
and
push
popa
push
add
and
addr16
call
arpl
jae
std
sahf
sbbl
xchg
in
add
das
jmp
incl
mov
repnz
aad
add
cmp
xor
jnp
add
add
add
subb
cmp
mov
popf
cmp
les
mov
add
pop
fnstcw
ret
dec
out
add
inc
adc
add
mov
cld
imul
inc
add
icebp
push
xchg
xlat
dec
push
fidivrl
jnp
popa
mov
or
or
mov
ds
pop
lds
dec
add
cmp
fidivrs
ror
mov
sub
inc
add
arpl
fimuls
jecxz
add
int3
rolb
iret
aas
imul
aaa
or
or
jge
bound
movb
leave
push
cmp
jno
hlt
mov
add
scas
loope
out
add
aaa
mov
out
add
dec
push
push
xchg
jl
add
xorl
pop
cmp
movsl
test
daa
cmp
add
mov
jge
cmp
je
call
push
cmovae
push
aam
mov
lahf
icebp
cmp
add
daa
dec
sub
fsubrl
mov
add
sub
adc
jmp
cmp
pop
cmp
xchg
repz
into
inc
cltd
add
ss
sbb
orl
adc
and
mov
fcoml
aad
lea
lcall
aas
sub
add
inc
push
sub
jge
stos
mov
add
lds
divb
pop
jg
add
xchg
jecxz
test
mov
adc
repnz
adc
mov
add
outsl
pop
inc
neg
cltd
pusha
add
es
inc
add
aaa
cmp
adc
pop
aas
addb
stc
xchg
add
mov
xor
add
ror
idivl
arpl
adcb
hlt
add
shrb
push
out
loopne
pop
lock
xor
data16
adc
cmpsl
out
repz
leave
adc
insl
push
fs
pop
xchg
movsl
sbb
negb
dec
lods
mov
inc
in
stos
add
and
push
ret
xlat
ficoml
scas
add
cmpsl
jle
dec
repz
sub
jg
xor
bound
and
seto
mov
fwait
push
jmp
adc
loopne
pop
bound
cmpl
das
add
ds
add
ret
mov
sbb
or
arpl
pop
je
or
loopne
push
jb
add
aas
movsl
push
roll
int
inc
cmpsl
adc
pop
pop
je
push
fcmovne
mov
dec
popa
jge
sbbl
ljmp
insl
std
das
pop
sbb
mul
shlb
pop
and
push
push
mov
pop
add
das
rcr
cltd
lock
popf
add
adc
xchg
lret
push
add
cld
jns
je
aad
test
mov
cmp
push
dec
mov
aad
es
jno
sub
aam
add
cmp
push
and
lods
pop
add
jne
add
sub
pop
in
add
dec
aad
rolb
movsl
xchg
or
test
xchg
add
dec
pop
adcb
in
js
add
cltd
bound
add
sysexit
aaa
loopne
add
mov
out
add
in
add
jbe
push
push
xorb
pusha
ret
add
add
sbb
fiaddl
mov
mov
xor
pushf
loopne
sbb
enter
lcall
lret
and
push
add
push
in
sub
jne
lret
or
mov
subb
ja
movb
add
scas
mov
mov
adc
ds
lret
inc
xchg
jno
push
bound
leave
add
out
test
mov
jne
inc
inc
dec
imul
lahf
popa
mov
sub
add
cwtl
pop
add
lcall
addr16
mov
add
mov
repz
rolb
fucomip
je
push
pusha
or
scas
in
ss
jle
loope
sarb
popf
insb
add
cld
and
les
push
inc
jp
sbb
ret
add
rolb
jae
cmp
inc
jg,pt
sbbb
das
ret
pop
pop
iret
sub
and
add
scas
dec
mov
lods
ret
sbb
testl
fidivl
js
inc
loopne
push
mov
or
jg
push
stos
hlt
cltd
inc
or
icebp
pop
mov
aam
call
rolb
mov
inc
fiadds
lods
jbe
popa
cwtl
or
add
mov
data16
xchg
or
push
movl
sbb
rolb
jge
gs
jbe
mov
lcall
cmp
into
aaa
and
out
scas
nop
add
scas
jo
mov
pop
push
add
cmp
rcl
jno
add
jg
lcall
in
sbb
add
inc
repnz
add
push
lret
shrb
push
push
cmpsl
in
pop
lahf
adc
movsb
and
or
ds
out
cmp
les
mov
adc
push
push
sbb
mov
xor
dec
pop
pusha
aad
aaa
pop
lret
rdpmc
popf
add
mov
loop
push
stos
add
sbbb
popl
fs
and
ss
rclb
xchg
stos
int3
cld
flds
pop
push
in
lods
lcall
mov
add
int
cmp
push
xor
test
jp
sbb
dec
xlat
cltd
jg
int3
add
subb
add
sahf
mov
xchg
sbb
jno
cmp
stos
sub
out
negl
add
pop
pop
add
ficoml
mov
or
jb
add
pop
outsl
sbb
shlb
adc
sbb
data16
into
fisubl
loopne
add
dec
cmp
fs
xchg
in
cli
mov
pop
mov
mov
pusha
push
xchg
or
pushf
add
push
adc
mov
clc
imul
add
xchg
shl
push
add
repnz
sti
cmp
scas
in
push
jle
and
leave
outsb
dec
push
mov
loope
sub
cld
sub
lahf
xchg
push
fs
outsb
mov
add
rolb
inc
push
jns
fdivl
nop
push
lea
aad
or
cs
out
add
leave
dec
fmull
lds
mov
jecxz
lahf
xchg
pop
call
pop
es
inc
jecxz
xchg
inc
sub
dec
xchg
ljmp
add
inc
push
pusha
adc
enter
mov
mov
xorl
lcall
add
std
jnp
push
shll
out
mov
enter
fwait
mov
das
mov
insb
lock
add
mov
xor
pop
lret
jge
test
movsb
bound
jae
lods
out
mov
jne
add
mov
jl
xor
in
push
mov
in
add
mov
add
sub
sbb
adc
mov
mov
cmpsl
dec
xor
mov
add
add
inc
ljmp
jnp
clc
iret
sbb
xchg
fnsave
lock
mov
test
mov
addr16
xchg
cltd
loop
add
add
or
xchg
add
sbb
add
mov
xor
movl
add
xchg
mov
jo
dec
add
dec
cwtl
xchg
mov
xor
loop
cmp
pop
dec
or
repz
jo
jo
add
add
mov
add
fwait
movsb
dec
adc
xor
pop
inc
idivl
dec
faddl
add
pop
mov
mov
cwtl
mov
xchg
jae
out
add
jns
mov
loop
mov
cmp
xchg
xchg
mov
addr16
jne
adc
jg
mov
aam
mov
add
pushf
add
hlt
push
xchg
mov
add
xchg
rcl
sub
out
mov
xchg
add
jg
movsl
loopne
add
pop
sti
xchg
pusha
cmpsl
testb
jle
mov
jnp
add
int3
push
and
add
xor
mov
push
cld
popf
pop
pop
mov
xor
xor
jmp
inc
mov
pop
iret
mov
in
adc
adc
mov
jge
imul
repz
jecxz
add
pop
add
test
inc
xchg
out
arpl
and
xchg
int3
jmp
mov
sub
jno
enter
add
ficoms
es
nop
repnz
sbb
cmp
cwtl
or
arpl
sbb
dec
cmovno
push
pop
cmpsb
pop
add
movsb
xchg
adc
sahf
and
fucomip
jo
out
add
push
in
cmp
dec
orb
jno
cwtl
push
aad
ret
daa
aaa
pop
cpuid
enter
in
es
pop
cmpsb
jp
add
inc
addl
int
push
jp
add
lahf
das
lds
outsb
push
fstpt
sub
sub
in
loope
push
cmp
push
mov
imul
or
pop
xchg
sbb
stos
xor
loope
in
sahf
sbb
jno
jmp
rolb
adc
adc
cld
int
sahf
sub
fimull
fsubl
cmp
add
pop
pop
inc
jmp
lock
clc
int
lret
loop
push
xor
out
add
popf
loopne
dec
cmc
sbb
add
pop
adc
or
push
xchg
test
inc
sahf
pop
fmuls
sbb
mov
in
roll
lcall
add
jnp
pushf
mul
cmp
ss
loopne
add
fldcw
cmp
sbb
outsl
idivl
xor
sub
xlat
dec
or
jno
and
gs
test
outsb
add
out
adc
cmpsb
mov
outsl
or
data16
shll
lds
push
repz
push
pop
add
sub
gs
and
addr16
jmp
or
add
xlat
pop
push
cmp
sbb
pop
sbb
cmp
xchg
cmp
fldenv
lret
inc
push
or
test
jne
push
mov
add
jmp
pop
mov
xor
add
jbe
call
lds
pop
adc
jecxz
pop
ss
mov
out
jb
push
mov
inc
add
mov
flds
daa
imul
or
add
adc
cs
push
jmp
stc
inc
jge
mov
movsb
roll
cld
adc
jo
add
mov
aaa
cld
lock
les
mov
bound
lret
in
pop
cwtl
cld
add
mov
jp
add
jg
ss
cs
jne
sbb
es
ds
aam
xor
sub
aas
orl
rorb
ds
lds
mov
add
fisubrl
arpl
and
xchg
add
mov
lahf
popf
push
jle
pusha
inc
push
add
jb
or
shlb
add
jnp
mov
repz
push
add
add
xchg
shlb
out
add
adc
stos
ret
pop
add
dec
shll
cli
cld
dec
ret
add
test
push
add
dec
ljmp
xchg
pop
mov
or
push
jne
xor
add
sbb
pop
fldl
push
in
out
aaa
orb
push
sub
rcrb
xchg
mov
pusha
jg
dec
iret
out
sbb
rcr
jp
add
pop
test
loopne
xor
push
idivb
filds
cld
bound
repz
xchg
clc
mov
ret
jne
dec
imul
test
into
mov
fnstcw
ja
add
in
call
fcoml
je
lahf
out
jnp
push
orl
xchg
dec
lret
add
pop
and
add
fbld
test
inc
movsl
lock
dec
jl
jle
ror
inc
data16
insb
aaa
mov
add
push
clc
xor
lea
test
cld
stos
jae
insb
add
xchg
adc
pop
jle
loopne
add
xchg
push
iret
ljmp
pop
push
repnz
or
sbb
jle
add
xchg
pop
add
inc
fidivrs
xchg
push
pop
jns
repnz
xchg
mov
cld
hlt
nop
add
inc
dec
iret
bnd
add
mov
jge
add
mov
dec
pop
mov
filds
pop
add
nop
pop
arpl
sbb
pop
jge
add
pop
jbe
fs
sub
test
movsb
push
cmp
add
dec
pop
scas
jle
add
jo
push
xor
enter
dec
movsb
jno
jl
dec
inc
in
outsl
push
leave
dec
cmp
and
sbb
add
scas
movsl
pop
in
sarb
cmpsb
std
add
cld
inc
adc
loopne
popa
add
pop
mov
add
sbb
pusha
mov
cmp
nop
divl
add
lcall
push
mov
pop
test
std
js
fiadds
pop
scas
ljmp
xor
add
add
sar
sbb
mov
and
cld
in
setb
adc
dec
xlat
sarl
fcoml
pusha
push
xchg
lcall
sahf
add
sub
jb
int
mov
sarl
and
fdivl
add
cli
pop
or
and
test
add
fistps
sbb
ss
pop
sub
loop
lret
in
notl
adc
psubusb
lcall
imul
pop
add
cmpsl
and
sub
mov
mov
outsl
add
sub
lock
sub
hlt
add
mov
jecxz
cmp
cmp
xor
imul
adc
or
loopne
jno,pt
push
push
inc
adc
or
dec
adc
mov
std
loopne
xor
add
cmp
adc
jle
inc
out
mull
sub
sbb
add
push
lcall
xchg
lock
mov
mov
cld
ret
fstps
icebp
inc
dec
rcll
ja
push
sarl
cs
inc
pop
jmp
dec
pusha
pushf
sbb
mov
inc
pop
lock
repz
popf
call
push
add
push
shlb
je
or
dec
jg
jmp
fidivrs
addb
in
inc
mov
and
pop
jne
add
fistl
cli
dec
and
cmp
sbbl
inc
cmp
cwtl
cmpsb
add
sar
and
divb
rclb
out
or
stos
cmp
das
outsb
in
iret
lock
out
jmp
add
pop
add
mov
icebp
pop
add
je
mov
sub
ds
insl
add
shr
inc
and
ret
xlat
sub
xor
mov
rolb
mov
or
pop
aad
push
add
es
and
aam
mov
cmpsl
pusha
jecxz
popa
jp
in
ljmp
stos
clc
inc
mov
cwtl
notl
loop
mov
aam
add
xor
add
mov
dec
push
fiaddl
sub
xchg
pop
out
out
jge
pop
es
mov
inc
pop
testl
sbb
ja
xchg
mov
push
test
repz
lods
add
mov
clc
mov
fcoml
jge
repnz
cltd
mov
decl
mov
jb
add
push
into
push
add
call
mov
cmpsb
dec
ret
ja
add
jne
mov
sbb
test
push
movsb
jns
add
xor
inc
dec
lock
sbb
out
push
adc
insl
mov
pop
hlt
cmpb
add
cmp
add
mov
push
and
jg
inc
sbbl
pop
shr
push
mov
xchg
ds
sbb
filds
cwtl
pusha
frstor
pop
in
xor
add
jnp
scas
add
pusha
xchg
and
push
push
aaa
daa
dec
mov
popf
stos
cmp
push
rclb
jmp
negb
mov
add
sbb
or
aam
js
in
add
add
push
mov
xchg
xor
add
dec
xorl
repnz
inc
cwtl
pop
fwait
cmp
or
jp
fsubrl
repnz
idivl
rcrb
loop
ficoms
repnz
int3
pop
xchg
add
pusha
lahf
or
push
mov
push
sbb
and
add
adc
jmp
into
in
movsb
test
and
jbe
pop
or
jo
clc
pop
or
subb
stos
adc
sbb
jno
bound
cmp
into
das
add
enter
in
hlt
add
cmpsb
adcb
inc
lahf
add
stc
push
sub
aad
mov
sbb
push
and
and
mov
cmp
fwait
or
mov
sub
cld
mov
ds
add
rcll
in
out
js
add
inc
inc
pop
aad
enter
or
jno
push
and
mov
xchg
stc
sbb
sbb
mov
bound
outsb
scas
aam
sub
std
add
push
jmp
adc
xor
sub
fcoms
cmp
es
mov
add
mov
push
mov
add
mov
add
lahf
dec
aas
add
sbb
aaa
mov
dec
std
xadd
mov
scas
lahf
not
jne
add
adc
add
inc
or
pop
cmc
rolb
mov
loop
adc
or
cmc
mov
sbbl
or
xor
sti
shll
pop
pop
cli
push
add
mov
adc
in
or
lods
into
xor
shlw
lea
enter
add
test
xor
add
andl
xchg
or
pop
sarl
add
mov
add
and
hlt
xchg
jnp
add
mov
aam
pop
add
xor
rolb
mov
inc
jl
pop
dec
stc
js
add
pop
dec
adc
sub
add
cmp
enter
adc
lods
xchg
pop
mov
sbb
cs
lea
data16
jecxz
add
dec
testb
fidivl
test
mov
jl
add
xchg
addb
loopne
pop
call
sub
mov
divb
sub
out
sahf
popf
cwtl
popa
loopne
std
lret
xor
inc
rcrl
sti
fsubl
add
in
mov
cmpsb
add
inc
lock
xchg
mov
add
pushf
mov
push
add
and
add
sarl
pop
dec
inc
pushf
pop
insl
call
inc
inc
inc
ret
data16
push
add
adc
push
es
jge
roll
mov
mov
inc
les
loopne
xor
xchg
test
ljmp
jne
clc
xorb
fucomp
add
add
sub
add
int3
xor
add
lock
add
xchg
dec
clc
scas
out
loopne
push
cwtl
stos
add
fimuls
add
sbb
or
test
and
dec
int
cli
add
shrb
xor
cltd
rorl
aam
jo
dec
push
call
js
add
jno
sahf
and
fstl
push
mov
jae
add
int
pop
lock
int3
add
in
dec
push
xchg
rcll
hlt
jns
dec
cmc
cmp
add
out
and
cli
mov
add
push
cmc
add
xchg
cli
mov
mov
jl
jp
add
pop
addr16
lahf
sub
jo
add
jb
xchg
in
add
jmp
push
jne
fbld
repnz
js
sub
pop
add
jle
ss
jnp
pop
jge
add
and
add
jbe
out
add
rcl
jmp
ret
stos
outsb
inc
int3
lret
pop
in
insb
movsb
mov
test
jecxz
adc
bound
scas
fnstcw
insb
add
push
adc
xchg
adc
sub
pop
push
nop
and
inc
fwait
add
pop
arpl
in
leave
xor
sbb
and
adc
mov
mov
inc
add
push
fninit
fidivrs
cmc
enter
cltd
and
in
cld
add
shlb
aaa
jecxz
add
mov
push
int3
jbe,pt
add
push
cmp
movsb
xor
sbb
sbb
ret
add
jp
cmp
popa
mov
xor
mov
test
pop
jl
sbb
sbb
add
daa
xor
add
paddsw
xor
add
dec
inc
add
or
test
push
repz
xorl
sbb
xchg
push
ds
xlat
mov
test
add
pushf
aad
push
and
pop
es
test
aas
jecxz
pop
cld
mov
dec
add
fnstenv
ljmp
stos
cld
cmp
loopne
repnz
mov
cmpsb
das
add
movb
xlat
jg
fsubrl
cmp
jns
pushf
push
sub
imul
cmp
or
and
add
mov
xchg
fdivrs
sub
or
lods
mov
sbb
and
roll
add
lret
or
xchg
mov
inc
fistpll
xchg
loopne
sti
popf
fwait
add
clc
stc
sub
fisubrl
xor
orb
data16
and
or
subb
xor
and
xchg
inc
aad
add
cmpsl
add
inc
cmp
divb
xchg
gs
fidivrl
imul
ss
hlt
add
loopne,pn
adc
gs
pop
data16
jle
fwait
add
sub
ret
push
mov
xchg
pop
loopne
adc
int
loopne
data16
rcll
repz
les
pop
dec
addr16
pop
add
dec
pop
lret
stc
cld
add
cs
bnd
repz
leave
pushf
jae
adc
ss
ret
gs
out
sub
lea
cli
pop
popf
sbb
jb
add
cld
push
je
scas
rorb
insl
js
inc
dec
add
aas
rclb
loope
shll
cmc
jns
cmp
xor
orl
movsl
leave
jo
add
sbb
jb
dec
mul
dec
add
shrl
cld
and
push
fidivrl
cmp
add
lock
xor
mov
jbe
cmp
cmp
push
sub
or
xor
hlt
mov
add
dec
mov
inc
add
lds
es
add
sub
mov
add
pop
pushf
mov
xor
and
add
mov
lods
or
popa
outsb
jmp
shl
sti
xchg
add
out
mov
getsec
jb
xor
call
test
or
add
mov
xor
adc
push
push
nop
mov
xchg
and
out
inc
cli
in
sub
bound
jle
jg
imul
pushf
sbb
xchg
xchg
in
jbe
imul
pop
mov
push
iret
jle
in
sahf
stos
wrmsr
or
loopne
aas
push
sar
xchg
jo
test
std
add
add
aaa
fwait
pusha
xchg
push
or
push
mov
int3
dec
test
add
cmc
sbb
pop
stos
into
add
mov
daa
sbb
scas
xchg
and
add
add
mov
mov
xchg
add
ret
push
orb
fsubr
loop
cmc
stos
sarb
pop
push
out
jp
mov
dec
pop
or
cmpl
add
mov
and
cmovno
rcr
cmp
add
sub
in
shr
jle
push
add
dec
das
mov
js
add
mov
add
dec
negb
push
pop
sbb
hlt
xchg
mov
fildl
push
pop
and
addl
pop
jp
adc
addr16
inc
scas
cmp
loope
loop
dec
lock
jg
xchg
inc
sbb
scas
pusha
pop
aas
inc
pop
push
adc
inc
sahf
cmpsb
xchg
arpl
mov
div
adc
leave
nop
imul
bnd
stos
mov
ror
test
call
aam
rorb
int3
add
dec
xor
pop
xchg
or
add
filds
test
sbb
jp
push
jge
into
std
jbe
pop
add
push
out
movsb
mov
sarb
xchg
and
pop
fwait
scas
add
subb
add
das
mov
push
jl
push
mov
dec
xor
lcall
enter
in
sub
into
mov
inc
mov
add
jnp
sbb
stos
or
fisubrl
jmp
loopne,pt
mov
mov
loope
push
add
or
gs
cmp
lret
in
imul
sub
insb
xor
pop
pop
int3
adc
pop
sbb
aas
ror
sarb
jge
mov
jne
fisubrs
add
jmp
push
add
dec
addr16
add
movsb
pushf
sub
jo
inc
push
aas
xor
xlat
andb
mov
xor
rcr
idivb
xlat
add
test
in
add
js
add
mov
cld
cwtl
shr
or
scas
add
push
xor
mov
ss
lods
mov
push
fs
stc
sbb
loop
inc
fsubs
outsl
jae
xor
add
stos
cmc
dec
fbstp
scas
or
ficoml
cli
add
mov
mov
pushf
add
inc
mov
adc
cmp
fidivrs
pop
adc
cmp
addb
incb
mov
xchg
cmpsl
in
push
sub
popf
push
sub
pop
add
cmp
clc
dec
sbb
xchg
cmp
bnd
cli
les
mov
mov
inc
push
mov
sub
aad
ljmp
jmp
loop
aas
pushf
push
rcll
lea
cmpsl
cmp
idivb
pop
popa
mov
add
cmp
xchg
dec
in
xchg
jb
popf
add
aas
pop
test
popl
mov
xchg
pop
mov
cmp
andl
stc
mov
fs
add
sbb
cmpsb
add
jns
pop
sarl
add
out
mov
das
or
push
lock
jnp
mov
and
mov
cmpsl
pop
lret
test
mov
icebp
filds
cmp
mov
xor
mov
mov
sarb
ret
test
add
sub
repz
shrb
push
adc
pop
add
mov
sub
mov
adc
mov
add
out
test
mov
fnsave
fadd
add
mov
test
lods
lock
add
subb
movq
push
imul
or
cmpsb
fstps
stos
jle
stos
pop
sub
mov
sbb
into
faddl
test
inc
loopne
fwait
add
mov
fiadds
shrl
or
ss
xor
test
loopne
cmp
cmc
adcb
push
mov
orb
orl
add
pop
in
mov
ja
call
pop
mov
mov
ficoms
jno
and
js
mov
xchg
dec
es
loop
aad
mov
pop
les
shufps
mov
sub
add
push
lea
jp
rcrb
xchg
jnp
or
push
sub
out
mov
push
xchg
jp
mov
cmp
lods
xchg
les
cmc
fbld
add
popa
in
mov
insb
fdivrs
movsb
fidivl
and
xchg
mov
push
hlt
sbb
mov
popf
and
dec
jae
add
inc
rcl
pop
pop
pop
jecxz
ret
push
iret
data16
add
inc
shll
add
pop
dec
adc
sbb
jge
xchg
cmp
cmc
pop
fisubl
and
sub
arpl
cltd
movsb
or
mov
ret
hlt
pop
xchg
pop
mov
repnz
cs
push
mov
jmp
pop
cmp
fidivrs
addr16
jnp
filds
int3
fdivs
add
outsl
push
or
inc
inc
sbb
in
sub
jbe
rdtsc
in
gs
mov
add
mov
and
cli
lods
add
sbb
jg
pusha
insb
push
push
sub
jl
add
mov
cmp
add
ret
cld
movb
test
popf
scas
cmp
add
push
ret
mov
add
mov
xchg
add
jne
and
dec
pusha
mov
sbb
mov
cmp
xor
sub
add
xchg
push
add
pop
movsb
push
js,pt
loopne
pop
dec
push
add
jmp
and
ja
xor
and
loope
sbb
es
rcrb
mov
sbbb
adc
outsb
fadds
fdivr
jne
add
cmpsb
lcall
lds
and
lea
and
sbb
and
mov
cmp
adc
add
push
fidivs
jne
cmpsl
nop
adc
stos
lret
add
fadds
shlb
jae
or
mov
fs
add
stc
xchg
inc
push
loop
add
xor
xor
pop
cmc
adc
xchg
into
sub
cmpsl
orl
mov
add
mov
aaa
jbe,pn
add
or
dec
mov
jl
adc
stc
sbb
mov
adc
xor
clc
jnp
loope
outsl
xor
and
imul
add
jnp
not
xchg
or
aas
jecxz
pusha
lods
lock
cld
add
aad
lret
popa
aaa
es
fnstenv
addr16
dec
push
out
add
xor
call
sbb
leave
add
fcoms
in
test
add
cltd
ficompl
add
and
add
dec
dec
mov
out
pop
add
adc
incb
inc
inc
inc
divl
mov
fsubs
rcr
xchg
in
add
cmpl
bound
cwtl
xchg
adcb
idivb
adc
and
pop
and
pop
add
cld
das
ljmp
jo
loop
aas
mov
movsl
add
pop
xchg
cld
cmpsb
inc
xchg
add
mov
in
mov
cmpsl
xor
dec
cwtl
mov
add
inc
mov
pop
ret
adc
jns
jb
xchg
sub
nop
movsl
rolb
add
pop
fidivl
mov
and
lods
dec
repz
loopne
mov
lods
push
push
jle
mov
ljmp
adc
xor
loopne
push
dec
push
test
test
popa
push
cltd
jecxz
push
add
xchg
bswap
sub
mov
and
sbb
out
or
orb
sbb
sbb
push
inc
add
pop
xor
pop
dec
add
andl
inc
leave
imul
xor
mov
and
fiadds
mov
add
pop
add
cmpsb
fwait
mov
add
mov
andl
cmp
pop
and
js
mov
lods
add
mov
sarb
or
jb
jecxz
and
push
imul
rorl
mov
lock
cmp
pop
mov
jno
mov
mov
jo
jp
add
xchg
das
in
or
daa
out
sub
mov
or
adc
pop
xchg
inc
add
cmp
das
pop
add
ffreep
jae
pusha
dec
in
loopne
jle
jne
add
fidivrs
dec
sub
fiaddl
xor
and
mov
inc
jmp
pusha
mov
xor
add
test
add
iret
lds
inc
cmpsb
adc
jg
fiadds
push
add
sbb
dec
add
jle
ficoml
pop
insl
xchg
imul
xchg
add
inc
movsb
mov
movsl
pop
hlt
cmpsb
push
mov
lods
repnz
mov
rolb
mov
insl
fisubs
jo
pop
stos
and
bound
xchg
or
stos
aad
aaa
add
notb
fiadds
cvttps2pi
inc
loop
and
pop
add
scas
and
xor
aaa
sbb
iret
pop
addb
cmp
stos
jno
sub
add
daa
xor
scas
enter
xor
jbe
cmpsb
mov
xor
subl
lahf
jmp
loopne
movsl
push
pop
lret
adc
aas
into
inc
cmp
mov
imul
icebp
push
inc
add
jecxz
mov
iret
movsl
cmp
pop
jno
loop
scas
popa
mov
addb
sti
sbb
cli
incb
std
add
adc
outsb
cmp
sub
lods
add
test
xor
pop
pop
pop
sbb
sub
and
push
inc
cli
cwtl
and
mov
add
add
hlt
mov
sti
leave
jg
push
mov
imul
cwtl
test
add
push
mov
andb
pop
push
add
rcl
data16
add
addr16
add
add
call
pop
clc
add
dec
adc
pmulhuw
cwtl
filds
xor
xor
jle
sbb
rorb
inc
fidivrl
or
add
js
push
out
add
es
jle
lods
push
fld
data16
ret
add
add
add
aaa
pop
push
mov
add
push
stos
pop
gs
insl
adc
out
add
add
call
lods
sub
aad
add
rclb
cmp
push
or
add
mov
cltd
fsubl
les
jmp
xor
enter
dec
jne
xchg
nop
mov
add
cs
jno
add
mov
sbb
negb
in
or
sub
das
lret
add
and
push
pop
push
je
fwait
sbb
rcrb
jb
inc
dec
fidivrl
popf
out
inc
sub
add
pop
je
or
out
dec
mov
fwait
dec
mov
mov
popa
cltd
cwtl
dec
nop
enter
pushf
and
incl
push
add
iret
fistpll
mov
leave
mov
cmp
lods
or
mov
mov
inc
cld
sarl
icebp
lea
mov
xor
loopne
insl
test
out
ret
mov
add
lahf
sub
add
rcl
lock
pop
stc
push
leave
mov
and
rorb
or
cli
inc
punpcklwd
add
nop
ljmp
cli
xor
insb
inc
fldl
jns
mov
lock
pusha
mov
mov
in
add
shlb
add
notl
pop
sbb
out
insb
je
stos
pop
cmp
js
jg
cmc
shll
dec
add
jl
testb
fidivl
mov
xor
add
or
outsl
fidivl
cmp
pop
mov
add
sbb
add
push
std
in
pop
adc
and
jge
dec
pop
addl
mov
je
xor
mov
ret
xchg
shld
popf
inc
lods
jns
cli
or
fldenv
fstpl
in
out
cli
dec
addl
mov
jecxz
mov
jp
xchg
in
rorb
jb
and
add
mov
andl
xchg
add
jle,pn
sbb
push
jnp
loopne
das
pusha
jb
add
in
scas
inc
jle
jb
dec
jnp
fmull
sub
rol
dec
stos
cmpsl
pusha
xchg
push
push
jb
mov
adc
cld
popf
outsb
adc
push
add
pop
cmp
es
enter
add
xchg
iret
and
in
add
fsubl
shll
add
pop
imul
icebp
sbb
lret
xchg
out
xor
enter
inc
fdivs
jne
add
jge
inc
cmpsl
clc
mov
loopne
add
icebp
jbe
leave
or
insb
sbb
imul
pop
int
lds
imul
pop
flds
ror
scas
xor
add
push
xchg
orl
ret
sbb
stos
dec
xor
jbe
and
push
add
add
and
and
xor
pop
in
add
int3
dec
orb
cld
sbb
add
ret
movsb
nop
jno
add
cmp
xchg
xor
clc
iret
sbb
in
ja
pop
cmpsb
add
insb
out
push
and
add
test
aas
sti
jecxz
lahf
or
stos
xor
push
addr16
hlt
add
jne
add
xchg
push
add
pop
and
fidivrl
add
and
fiadds
push
xor
add
xor
mov
sbb
pop
mov
adc
sahf
adc
sub
faddl
push
push
pushf
es
push
add
or
cwtl
xchg
sbb
lret
stc
sbb
pusha
adc
xchg
mov
add
flds
mov
sbb
sarb
addb
lahf
int
into
add
sbb
es
mov
arpl
je
notl
add
adc
xchg
add
arpl
jnp
mov
outsl
adc
pushf
icebp
cmc
sahf
nop
dec
into
repnz
or
sub
add
xor
mov
push
add
mov
lods
push
sbb
push
add
pop
add
cmp
add
lcall
pop
jo
insl
loopne
pop
incl
gs
or
fs
add
popa
and
and
mov
or
sub
repz
xor
jecxz
enter
movsl
adc
arpl
add
mov
pop
xor
scas
data16
pushf
pop
cmpb
xchg
test
pop
and
xor
xchg
imul
lea
loope
dec
jecxz
add
xchg
out
dec
lds
outsb
xchg
add
aas
cmp
lea
add
jo
dec
popa
pop
jo
sub
add
addl
xchg
push
sub
cld
pushf
add
or
inc
std
push
xor
and
add
jge
cmpsb
cwtl
add
push
into
push
mov
das
test
push
or
add
mov
imul
push
cld
addb
mov
cmpsl
das
nop
push
dec
add
xlat
lock
or
aam
or
mov
shrb
sbb
jne
clc
xchg
add
and
repz
mov
sub
fisubs
jnp
ljmp
movsl
clc
cmpsl
mov
cmp
push
roll
jle
cld
hlt
test
push
jne
add
mov
adc
mov
xchg
pop
mov
cmp
iret
inc
imull
pop
sub
sub
inc
sbb
jp
test
push
enter
pop
iret
xchg
add
lret
jl
inc
add
xor
add
add
push
add
push
mov
and
pushf
or
dec
in
inc
scas
jp
cmp
ja
outsl
add
xchg
jno
mov
add
jecxz
xchg
pop
shl
in
addb
jns
mov
add
out
jg
ret
mov
filds
cwtl
jne
mov
mov
mov
mov
insl
pop
es
and
sub
xchg
aam
lods
xor
ret
mov
addb
add
pusha
jg
in
in
mov
mov
popa
jne
insb
and
pop
add
ljmp
cmp
arpl
add
popf
xchg
sbb
pop
jae
jo
inc
loop
dec
pop
jmp
ret
arpl
iret
sbbl
adc
xorb
add
scas
enter
daa
add
mov
add
fidivrl
add
push
or
stos
cmpsb
cmp
scas
hlt
cmp
adc
repnz
jg
add
cmp
pop
add
push
push
inc
add
cltd
rcl
add
xchg
fwait
pop
aaa
subl
cmp
jge
nop
sub
add
push
movsb
jmp
jl
cmp
add
movsl
rcl
repnz
xchg
std
sarb
dec
dec
add
xchg
sbb
jno
ds
sbbb
daa
das
push
add
mov
pop
sub
xchg
ss
add
jmp
add
out
lahf
daa
mov
insl
movsl
bound
rorl
test
add
push
mov
or
xlat
jns
add
popa
int3
xchg
js
into
adc
pop
mov
lds
lcall
out
loop
orb
mov
shr
mov
push
fcoms
add
leave
cmp
add
ljmp
imul
sub
pop
inc
dec
jmp
add
outsb
push
dec
pushf
scas
and
add
xchg
mov
decl
mov
insb
mov
push
loope
add
stos
xchg
sbb
sahf
jno
inc
sbb
fnstcw
jnp
add
cli
es
in
push
jo
notl
jmp
add
aad
inc
ja
sbbb
test
add
out
add
mov
add
aad
nop
or
rcrb
push
es
lcall
ljmp
loope
sub
add
pop
pop
sub
inc
xchg
adc
mov
pop
add
and
add
sti
add
inc
in
test
add
lods
sub
and
sarl
mov
sbb
xchg
inc
jb
repz
aad
out
les
mov
mov
out
stc
add
dec
xor
pop
nop
pusha
ljmp
jp,pn
or
push
sahf
popf
pushf
mov
jmp
pop
aaa
cmp
jp
call
std
imul
sub
jecxz
cmp
mov
loop
mov
mov
fistl
inc
dec
adc
pop
mov
add
dec
xchg
mov
and
pusha
adc
cwtl
add
addr16
test
pop
adc
stc
inc
push
clc
mov
add
sbb
das
xchg
lock
cmp
add
cmp
fs
pop
cld
add
bound
jno
mov
cmpsl
cs
pop
dec
add
testb
push
push
rclb
pop
insb
aam
pop
add
sarb
push
xor
xchg
sbb
and
push
imul
ja
xchg
xor
fwait
popa
sbb
xor
adc
push
cmpsb
clc
loop
add
push
mov
ret
mov
lret
cmp
sbbb
adc
dec
por
add
xlat
push
add
stos
cmp
add
pop
aad
jbe
push
push
add
xchg
add
test
jno
dec
aaa
lock
xchg
dec
insl
ret
mov
adc
mov
icebp
ljmp
das
sbb
add
fwait
dec
mov
lock
dec
xlat
inc
inc
pushf
add
dec
addr16
push
ja
dec
push
pop
add
sti
mov
pusha
jbe
xchg
lods
inc
jns
in
jb
mov
insb
ds
pop
mov
fwait
jne
adc
push
mov
mov
mov
cmpsl
dec
xchg
cmc
shlb
adc
push
or
add
cmpsb
cltd
gs
pop
lea
xchg
adc
inc
fistps
data16
pusha
sbb
aaa
in
xor
add
dec
into
jnp
and
add
fsubs
add
add
lock
ret
add
mov
pop
sub
add
adc
fcompl
add
sbb
loop
lea
scas
cmp
push
pusha
pop
xor
sub
add
pop
xchg
mov
and
fisubl
lods
inc
add
push
mov
add
lods
enter
add
hlt
xchg
push
push
repnz
pusha
mov
rclb
lds
loope
fidivs
adc
aaa
add
flds
dec
push
inc
sub
jl
adc
and
mov
cmp
cmpsl
add
sbb
movsb
in
dec
add
gs
mov
jl
add
jo
or
adc
loopne
fmuls
add
lods
jno
add
inc
mov
in
jge
push
inc
cmp
cmpsb
add
movsl
mov
add
jb
ficoml
push
pop
sub
loope
cmp
ds
inc
cmp
lds
sub
aad
loope
es
push
inc
dec
pop
add
inc
mov
lret
and
xor
mov
call
sbb
popa
int
add
or
les
ret
je
outsb
fs
inc
sub
jge
fsubrl
dec
jne
lcall
jae
sub
ficoms
push
push
dec
sbb
mov
cmpsl
pop
mov
or
xchg
push
jne
dec
imul
sahf
adc
add
pop
cmp
in
rcll
testl
jno
cmp
shrb
mov
stc
jb
add
outsl
into
pop
add
xor
arpl
sub
jnp
add
or
cmp
call
mov
les
out
xchg
lock
push
add
push
cmp
testl
and
pop
pop
scas
pushf
jp
out
add
push
push
add
in
inc
rolb
lcall
xlat
jb
add
and
sbb
xchg
or
repz
push
add
fldz
dec
add
add
add
nop
sbb
dec
mov
out
add
xchg
pushf
add
adc
lret
pop
sbb
dec
adcl
fmull
cs
adc
sub
aaa
add
aas
add
inc
inc
arpl
test
dec
sub
pop
pop
fwait
add
into
jp
dec
int3
out
jge
adcl
add
mov
sahf
clc
cwtl
jle
mov
pop
push
mov
sarl
mov
icebp
add
mov
and
outsb
lock
fs
movsb
lret
sarl
cld
add
psllw
sbb
add
int
cmpsl
sub
in
movsb
insl
cmp
cli
lock
ljmp
aam
jmp
sbb
mov
in
push
mov
mov
pushf
fdivrs
lods
jmp
popa
xor
loop
ljmp
daa
add
sbb
cmpsl
mov
pop
cmpb
bswap
or
cltd
mov
pop
movsb
pop
cmovp
mov
pop
xchg
aas
push
mov
pop
addb
sbb
aad
scas
test
out
pop
dec
sahf
mov
xchg
mov
xor
mul
or
xor
pop
incl
add
dec
add
icebp
push
out
jns
fwait
jp
es
adc
ss
sti
add
ja
outsl
mov
pop
or
es
push
xchg
pop
cld
clc
xchg
ds
cmpb
xor
bound
jo
loope
cmp
sbb
int
add
rorl
std
push
cmp
jp
inc
adc
daa
add
or
or
out
outsl
pop
adcl
add
jmp
xchg
jecxz
cmp
mov
mov
jo
and
lret
jnp
insl
mov
inc
and
mov
push
das
pop
add
mov
jecxz
add
push
ljmp
in
clc
andb
inc
fs
jns
iret
loopne
mov
pop
push
jno
loope
mov
sbb
imul
mov
ds
fdivrp
inc
push
cmpsl
add
push
sbb
add
arpl
idivb
hlt
add
aad
leave
jb
cmp
add
aaa
mov
add
popa
lds
push
psubsw
xchg
add
outsl
lea
or
getsec
pushl
int
jge
dec
add
ljmp
das
movsb
add
cmp
add
scas
push
dec
add
jo
cmp
xor
push
sbbb
fistl
jl
call
cmp
cmp
filds
inc
daa
sub
xor
mov
sub
lock
cwtl
mov
pop
inc
pop
test
push
test
mov
imul
cmp
and
movsl
out
pop
mov
lret
outsb
out
pusha
je
pop
sub
xor
daa
hlt
push
mov
mov
js
mov
aam
aam
clc
add
sub
add
push
cmp
push
lret
dec
shrb
out
jns
add
lahf
sbb
outsb
ud1
and
sub
mov
outsb
fldt
adc
mov
mov
pusha
cmp
pop
mov
xor
push
test
popf
mov
lock
jg
mov
mov
test
add
sbb
dec
clc
pop
shrl
ljmp
into
push
xchg
hlt
sub
lcall
outsl
add
adc
add
stc
sub
unpckhps
xor
cmc
add
popa
into
fwait
dec
jno
add
inc
add
xor
aam
lcall
or
mov
lods
add
cmp
data16
mov
sbb
xlat
xchg
add
xor
adc
pop
pop
call
and
gs
incl
es
jae
dec
sti
mov
scas
push
iret
sub
into
xchg
jnp
push
add
ja
aad
lret
fucomip
repz
adc
rol
std
inc
adc
mov
lea
ds
icebp
rolb
nop
divb
add
cs
and
add
adc
cmp
mov
call
lret
pushf
sahf
movb
jne
jecxz
sub
je
js
pusha
dec
scas
lcall
aas
sbb
fcmovb
inc
sti
mov
mov
ficoms
addl
jo
mov
clc
fs
imul
inc
ja
frstor
pop
rcll
in
es
mov
inc
pop
cld
add
sbb
call
adc
mov
mov
cld
jge
sbb
icebp
jmp
lahf
das
add
jg
xlat
sbb
es
mov
fiadds
bound
aam
jmp
sub
cmp
adc
pop
jne
dec
pop
mov
and
scas
mov
mov
push
ja
popa
dec
add
negb
sbb
clc
pop
roll
and
push
sbb
push
iret
mov
fwait
in
test
add
scas
cltd
idivb
lods
popw
fbstp
push
lea
jmp
xchg
push
add
sub
cltd
cmp
sbb
addb
movb
xor
cmp
mov
add
lods
xchg
fiaddl
xor
dec
loopne
add
add
mov
dec
out
test
add
mov
dec
dec
add
ja
fwait
loop
enter
add
lret
cld
sti
test
xchg
dec
repnz
leave
push
movsb
add
in
bound
loope
out
int3
arpl
add
xlat
jmp
add
fs
cmp
sub
es
pop
inc
cltd
mov
or
push
sub
sbb
or
xchg
cmp
mov
add
pop
mov
fxam
xchg
dec
addl
jnp
nop
jmp
add
and
movsl
ss
jae
xchg
push
outsb
icebp
in
mov
popf
or
inc
xchg
jae
mov
ret
push
pop
movsb
cmpsb
insl
ret
iret
jb
mov
in
push
add
lods
test
dec
jnp
push
sbb
rorl
fidivl
add
xlat
andb
or
inc
mov
cmpsl
arpl
adc
add
adc
mov
call
cmp
fadd
ds
dec
ficoms
add
pop
xchg
pop
mov
add
jp
jecxz
push
sbb
cld
mov
jne
jge
cld
out
jbe
sub
sbb
add
shlb
pusha
add
xor
sub
jge
mov
sub
adc
dec
dec
cli
and
pop
jae
aad
add
repz
sub
push
pop
enter
in
adc
push
cmpsb
ds
cmp
out
adcl
test
push
mov
sub
neg
add
movsl
ja
add
ds
js
ret
mov
mov
mov
push
sahf
push
addl
js
mul
pop
pop
xor
mov
xor
loope
add
mov
xchg
fld
sbbb
fcomps
sarb
add
adc
mov
adc
faddl
xor
clc
push
add
and
jmp
jl
add
and
cmp
add
and
nop
add
shlb
mov
jno
pop
sub
adc
repnz
hlt
inc
add
mov
mov
lods
push
testl
and
and
pusha
icebp
jge
add
loopne
jle
dec
ja
pop
outsl
mov
data16
loopne
js
nop
in
or
aas
adc
rorb
stos
add
cli
pop
ret
pop
out
add
shrl
pop
xor
add
add
outsb
adc
cmp
hlt
adc
loopne
add
sbb
out
or
xchg
icebp
cmp
outsb
mov
in
sbb
mov
add
or
add
sbb
mov
les
mov
adc
push
rolb
dec
dec
push
add
pop
aad
mov
cmp
jmp
push
push
pushf
lret
popf
and
adc
stc
dec
pop
inc
xor
xchg
add
ret
mov
xor
xor
mov
ret
pusha
dec
dec
and
loop
popf
aas
mov
cmp
add
ret
add
fldt
push
dec
push
and
mov
mov
add
xor
call
dec
xor
inc
add
push
mov
mov
rcr
pop
lock
mov
add
ret
fs
mov
xchg
cmp
hlt
rolb
shl
add
sub
add
ja
insl
pop
stos
pop
pop
fstpl
aam
xor
cwtl
add
fsub
sub
hlt
cmp
add
xchg
idiv
mov
and
jg
mov
mov
aad
inc
add
xor
imul
movsl
roll
fldl
loopne
fisttps
mov
test
dec
cmpsl
add
dec
ljmp
push
push
jl
add
pop
movsl
dec
stos
pop
sbb
cmp
into
pop
and
test
test
out
dec
insb
mov
je
mov
testb
sub
xor
add
cmp
jg
sti
addb
sub
push
sub
sub
or
aas
cmovno
pop
sbb
pop
shlb
cs
in
mov
lcall
push
jns
cmp
pop
xchg
pop
pop
add
sti
inc
jmp
stos
lods
cld
jne
cmp
xor
xor
add
and
jp
repz
cmp
add
pop
dec
into
sub
popf
pop
fiaddl
xchg
pop
test
jmp
xchg
mov
pop
fistpll
jl
pusha
rorb
shl
mov
sub
aaa
roll
mov
and
fsubrl
push
lods
or
cmpsb
popf
xor
enter
cmp
addb
fisttpl
scas
or
mov
xchg
iret
cld
mov
push
addb
scas
push
add
imul
add
add
inc
push
out
add
out
sarb
fistpl
fidivrs
arpl
cmpb
push
call
orb
shlb
mov
hlt
add
aad
in
int3
inc
add
mov
add
jge
sub
push
mov
out
jle
xchg
shll
mov
cmp
cmp
add
scas
sbb
adc
push
mov
mov
jl
xor
add
push
in
cmp
cwtl
inc
daa
sub
adc
enter
in
cli
lds
filds
jns
add
pop
test
push
pop
sahf
das
lahf
mov
add
pop
movsl
jle
inc
adc
ja
cmp
das
xchg
inc
xchg
push
add
imul
push
iret
mov
pop
pop
test
add
pop
and
cmp
xor
adc
cli
jno
lahf
sub
leave
mov
movsb
aaa
pop
adc
ljmp
es
push
fsubrl
stc
and
pop
adc
push
add
lahf
dec
pop
push
push
push
es
and
add
sbb
and
cmpb
mov
or
push
mov
es
inc
add
add
adc
mov
pop
cs
cmp
loope
dec
mov
ret
sbb
popa
psrad
adc
add
icebp
lds
fstps
cmp
popa
sahf
hlt
or
imul
mov
out
jns
add
aam
or
data16
ret
mov
sub
push
fcoml
jae
jne
pop
or
jo
mov
mov
sub
sti
sbb
test
mov
sub
scas
cmp
dec
add
cmp
popa
jmp
rclb
jae
dec
add
adc
fs
jno
add
push
test
mov
cltd
pop
aad
addl
cs
ss
pop
mov
add
sub
fldenv
add
daa
call
pusha
in
add
aaa
jno
jecxz
xor
je
push
and
mov
add
pop
movsb
aas
push
decb
inc
mov
pop
inc
or
lock
mov
repz
cmp
push
add
push
mov
mov
add
cwtl
scas
push
es
push
add
xchg
jl
shll
pop
sub
in
movsl
mov
das
add
sbb
push
rcrb
jp
xchg
lret
and
mov
add
xchg
in
mov
cmpsl
sub
xor
insl
out
pop
cmpsb
es
and
jge
dec
push
add
rcll
negb
mov
add
push
cs
test
inc
or
mov
fsubl
jl
cmp
clc
into
sbb
adc
mov
pop
or
test
cltd
add
add
sub
cmp
add
cld
imul
stos
mulb
add
sarl
adc
hlt
xchg
test
mov
shr
inc
xchg
les
xor
loopne
lcall
mov
push
add
adc
inc
mov
rcl
pop
lea
je
add
inc
mov
outsl
add
ja
imul
pop
jg,pt
lock
adcb
xchg
jmp
test
cmp
bound
push
add
out
fisubl
xor
push
adc
dec
shrl
mov
in
ds
jp
pop
ret
add
or
sub
out
cwtl
add
gs
xchg
shlb
jmp
xchg
pop
sub
out
xchg
lahf
or
mov
gs
add
xchg
insb
cmp
sub
pop
add
stos
pop
cmp
push
in
add
xchg
xor
cmc
jecxz
fcmovnu
xor
iret
pop
adc
pop
scas
ret
enter
pop
sbb
sbb
add
pop
ljmp
shrb
cmp
add
roll
loope
cmp
add
inc
mov
and
sahf
pop
add
sbb
xlat
cmp
add
mov
roll
repz
ficoms
xor
adc
or
add
aaa
cmp
test
or
and
mov
lret
stos
pop
cmp
inc
pop
pop
and
xor
jmp
dec
cmp
outsb
loope
insb
push
out
dec
fadd
pop
jl
leave
add
cmp
cmp
xchg
add
sub
jb
lea
in
loope
andb
les
push
in
sahf
add
xor
int
and
mov
mov
add
xor
fsub
addb
dec
push
rcll
or
stc
js
add
pop
or
add
add
xor
mov
jl
and
add
jle
push
xchg
pusha
sbbb
add
int
outsb
lock
test
sub
nop
mov
add
ret
xchg
xchg
add
xchg
popa
cmp
cli
jae
push
int
mov
pop
lahf
loopne
pop
add
xchg
mov
insb
cs
mov
adc
jg
and
add
dec
inc
inc
add
pop
movsl
rorb
in
adc
lods
pop
cld
out
add
fcomps
int3
pop
add
and
popa
add
adc
mov
mov
add
jb
leave
outsl
dec
aad
add
xor
adc
dec
scas
lock
inc
add
jbe
xchg
add
xor
cli
test
xchg
shl
or
and
lods
mov
add
iret
add
fdivrp
adc
add
cltd
adc
repnz
jne
loopne
add
je
cmpsl
clc
and
faddl
pop
push
sti
int3
mov
in
lock
cwtl
mov
adc
mov
xlat
mov
dec
jb
in
ds
adc
mov
inc
add
fld
push
scas
mov
rorb
push
add
imul
add
dec
adc
adc
jp
pop
push
outsb
or
xchg
add
call
rclb
cmp
push
je
add
push
jb
cli
fldl
aas
idivb
incb
inc
nop
add
pop
jmp
mov
adc
xorl
pusha
mov
add
sbb
clc
mulb
in
test
pushf
jb
jmp
and
cvtpi2ps
das
loop
lods
mov
sbb
int3
mov
lcall
sbb
sbb
add
jo
mov
add
jecxz
daa
ret
mov
add
aam
mov
cmp
lcall
cltd
mov
or
std
dec
mov
lods
incb
rorl
push
xchg
mov
add
stos
fstl
add
jae
movsl
xchg
test
add
insb
add
inc
add
jecxz
push
push
adc
xchg
pop
mov
out
and
out
popa
pop
sub
sub
je
jp
jo
jns
add
ss
insl
push
dec
inc
cld
movb
lds
lret
or
in
xor
xchg
cmpsl
mov
add
std
cmp
jb
imul
inc
cmp
pusha
lds
ja
nop
imul
pop
stc
cmp
pop
nop
fiadds
sub
xchg
cmp
in
add
sbb
sub
bound
or
mov
add
mov
nop
xlat
hlt
dec
add
pop
mov
pop
jle
jp
jne
mov
sbb
sub
mov
ja
add
cwtl
push
xchg
das
add
lods
fistpll
push
lahf
sub
add
jmp
out
push
pop
push
jnp
cmp
insb
cmpsb
fcompl
add
sub
cmp
mov
jg
mov
push
idiv
into
jae
xchg
inc
and
rcrb
lds
ret
aad
mov
cmc
jnp
push
lea
add
shr
pop
sbb
add
inc
mov
fisubrl
push
and
or
inc
mov
xchg
hlt
incb
xchg
fwait
leave
dec
adc
dec
mov
fdivrl
pushf
testl
pop
mov
icebp
fwait
add
jae
or
inc
int
aaa
sti
jmp
sbb
enter
int3
insb
mov
add
addb
sub
mull
clc
pop
adc
cmp
insl
subb
mov
add
push
dec
loopne
dec
pop
inc
popf
pop
jl
loopne
jno
test
sarb
mov
mov
sub
jbe
into
xor
pusha
jmp
cmpsb
movsb
movsl
add
push
mov
push
fsts
mov
lahf
add
dec
inc
and
mull
ds
dec
mov
cmp
inc
push
int3
cltd
fildl
mov
mov
pop
mov
daa
add
iret
add
mov
aaa
cmp
shlb
and
rolb
or
in
adc
add
sub
mov
sub
scas
xchg
lcall
xorb
lret
pop
imul
stos
hlt
push
pop
bound
js
mov
add
ljmp
mov
and
jle
lock
push
add
roll
xchg
testl
push
mov
loopne
pusha
repnz
stc
add
add
lods
outsl
sub
xor
add
sub
into
daa
ret
add
loope
xor
xor
out
cli
mov
or
mov
sahf
jmp
sbb
add
xchg
inc
adc
inc
add
hlt
add
mov
out
loopne
out
add
scas
adc
jle
fdivr
jnp
ret
or
xchg
mov
xchg
mov
cmp
push
les
sbb
call
mov
jp
fldenv
inc
add
insl
orb
sarl
cmc
aad
jno
cs
movsl
add
cmp
xor
lock
pop
pop
lcall
call
scas
jno
jno
aas
shl
or
add
dec
dec
mov
jb
add
xchg
jnp
inc
add
pop
xchg
inc
pop
lods
xor
mov
inc
jbe
in
dec
push
adc
sbbl
xorb
and
lahf
xor
notb
addr16
loop
add
and
dec
ret
mov
add
xchg
lock
add
loope
dec
mov
add
lret
jno
cld
sub
add
mov
pop
sub
adc
pop
subb
arpl
leave
ret
sbb
pop
add
adc
insl
push
add
mov
and
call
into
add
lods
push
in
or
movsl
mov
pop
xchg
add
ret
push
clc
inc
lret
mov
sub
sub
test
push
cltd
rclb
add
add
in
sub
push
mov
dec
dec
in
lcall
stos
aam
js
xlat
or
roll
sub
sbb
flds
test
mov
fidivl
inc
dec
pop
sbb
je
xor
add
hlt
or
add
dec
lcall
adc
push
add
push
adc
add
sub
insb
movsl
jmp
movsb
dec
sbb
pop
ja
add
pop
mov
pop
rcr
loopne
mov
jne
xchg
xchg
add
cmc
add
idivb
bound
cwtl
xacquire
jne
dec
dec
nop
cltd
ret
sbbl
mov
divps
rolb
add
sub
pusha
xor
xchg
out
popa
mov
xchg
punpckhbw
xchg
add
mov
pusha
stc
gs
mov
add
rcrl
xor
int
mov
xor
add
test
sbb
popf
cmpsb
push
enter
jnp
jno
add
das
lahf
push
rol
jns
iret
sbb
test
shrb
loopne
add
stos
mov
imul
jmp
sbb
repnz
fisubl
incl
or
pop
push
rcl
inc
add
push
fcomip
add
mov
repnz
mov
cmp
in
sub
fnsave
add
add
mov
lea
testb
add
pop
sbb
scas
in
add
ljmp
mov
mov
popa
and
shlb
xor
xor
xor
push
add
jne
jno
xor
stos
cmp
aam
sub
insb
enter
in
scas
push
sub
loop
int
jnp
imul
xlat
or
loopne
add
and
xchg
add
jp
popa
cmp
iret
add
sub
or
mov
add
push
mov
pop
sbb
cmp
cwtl
pop
shl
or
je
cmp
call
add
outsb
jp
orb
jae
shl
pop
rclb
outsb
mov
inc
sub
mov
faddl
lods
and
push
push
sarl
in
rclb
pop
nop
jo
sub
lock
int
scas
mov
add
inc
and
in
movb
mov
xorb
xchg
sbbb
test
add
inc
mov
fmull
jo
xchg
je
testl
mov
stos
xchg
add
iret
stc
mov
add
or
test
es
cmc
fsubs
or
ret
repnz
cmp
push
sbb
xor
bound
js
add
mov
pushf
jecxz
clc
cmp
add
xchg
out
add
jmp
inc
mov
ficoml
add
in
xchg
push
mov
nop
add
and
sbb
in
mov
and
sarb
fyl2xp1
aad
and
adc
add
lret
mov
dec
repz
add
cltd
cmp
add
divb
int3
push
push
nop
cmp
idiv
fldcw
das
jne
in
push
call
aam
dec
mov
lods
dec
shr
add
lock
inc
sarl
in
je
sbb
dec
add
mov
cmpsl
aas
sbb
inc
testl
pop
das
in
fucomi
dec
add
andl
cltd
add
fwait
cwtl
loopne
in
std
inc
out
testb
or
shll
and
mov
ud1
add
das
add
pop
xor
mov
inc
pop
lret
insl
out
jmp
cmp
movsl
add
sbb
xchg
mov
cmpsl
daa
clc
mov
ret
clc
call
es
fcmovb
and
pusha
add
mov
inc
leave
mov
mov
and
or
clc
lods
addl
push
ror
xor
cmp
clc
jg
mov
jmp
je
and
sbb
cwtl
pop
out
divps
adcb
xchg
jmp
out
cmp
pop
addb
add
sub
pop
ja
add
or
loop
popa
add
ds
or
movsl
bound
and
int
sti
hlt
and
add
mov
cld
push
sbb
push
outsl
inc
inc
addr16
dec
in
imul
pop
fucom
pop
incb
cli
mov
dec
add
jle
addb
insl
jns
hlt
mov
out
ja
jb
pop
sbb
cmp
popa
fs
jl
fldl
mov
inc
arpl
jb
mov
add
xchg
aas
add
test
insl
jbe
xchg
xor
jecxz
jmp
inc
lea
testl
inc
cmc
in
ljmp
adc
pop
insb
jl
push
and
add
push
test
add
popf
int
lods
push
int3
sbb
jae
scas
jo
cmp
add
cmp
ret
xor
iret
jnp
sub
stos
out
in
add
imul
loopne
dec
in
lahf
or
dec
xchg
movsb
cld
fiaddl
adc
mov
add
push
inc
pop
ret
arpl
fwait
hlt
xchg
outsl
add
leave
cmp
iret
repnz
fisttpll
repz
add
pop
add
fiadds
mov
int3
pop
icebp
lcall
sub
add
aaa
jns
mov
jge
sbb
enter
adc
movsb
add
cli
cmp
jb
add
jp
scas
lods
cmp
sub
add
xchg
ljmp
or
cmp
daa
addb
enter
in
add
push
inc
jno
sbb
push
inc
add
xor
lods
push
add
push
and
movsb
movsl
lcall
xchg
cmp
mov
add
outsl
gs
pop
movb
js
nop
sahf
pop
test
jae
xor
xchg
in
add
mov
mov
mov
adc
outsb
sbb
pop
sub
mov
repz
add
mov
pop
add
subb
ss
int
cmp
push
and
inc
repnz
mov
int3
dec
pusha
jg
scas
jno
add
mov
les
lods
cmp
int3
ret
add
shll
add
testl
repnz
ss
addb
push
decb
stc
jae
xchg
adc
cwtl
mov
add
or
popf
push
push
into
add
mov
or
int
add
sti
add
jle
push
adc
mov
mov
add
data16
pusha
add
mov
cwtl
adc
popf
jno
aas
shrl
mov
inc
add
loopne
adc
mov
sti
fnstenv
push
jno
sub
add
xlat
dec
outsb
push
cmp
lock
add
pop
or
or
aas
or
add
rolb
inc
xchg
int
dec
sub
cmp
sbb
add
lock
cs
mov
jmp
mov
test
adc
or
jle
shrb
lea
inc
jecxz
add
je
pop
popa
dec
js
and
out
and
dec
inc
and
shrb
mov
in
pop
test
sub
mov
loope
cwtl
fwait
in
cld
in
add
negb
xchg
lock
jb
add
mov
addl
lock
pop
add
push
adc
add
fsubrl
cwtl
cld
jg
imul
mov
cmpsl
es
dec
popa
addb
insb
les
mov
rol
aam
sbbb
adcb
cmp
das
cld
add
and
mov
gs
add
lods
in
pop
je
rcll
push
mov
test
add
add
adc
push
add
adc
test
and
leave
cltd
inc
fwait
testl
pavgw
jge
add
cld
out
les
add
stos
mov
sub
fcom
pop
sahf
dec
sbb
mov
dec
idivb
push
test
lea
inc
outsl
add
fs
test
insl
add
jbe
outsl
xor
lcall
add
push
pop
and
fwait
loopne
lock
inc
or
imul
jg
test
insb
pop
or
repnz
mov
mov
sbb
in
xlat
or
jns
jge
add
xor
push
rorb
jae
jb
inc
sbb
add
mov
mov
push
lods
jp
incl
mov
xchg
int3
or
add
out
push
add
xchg
add
int3
hlt
insl
xchg
test
cmp
filds
inc
movsl
pusha
repnz
in
mov
ret
xor
add
out
sbb
mov
and
push
push
sbb
hlt
mov
fidivl
sub
inc
inc
test
lahf
pop
out
jns
ret
std
iret
fiaddl
mov
adc
mov
adc
inc
sub
ja
cmp
sbb
stc
rcll
movb
pusha
inc
into
data16
lahf
jbe
jmp
push
sub
arpl
fldenv
add
stos
divb
add
sub
and
add
and
cvtdq2ps
fsubrl
jge
or
ret
cwtl
mov
aam
shl
jbe
rolb
push
sbb
in
test
out
pop
and
add
scas
outsb
lahf
rorl
rcll
add
clc
inc
mov
xchg
mov
jb
jno
ss
and
rolb
add
in
jge
cmpsb
sub
add
ss
adc
add
jge
rcrb
mov
cmp
lea
cmp
adc
loope
jae
add
int3
push
pop
cwtl
nop
movsb
js
add
lahf
jae
xor
and
test
icebp
add
fsubl
mov
rcrb
pop
outsb
jl
sub
stos
in
faddl
xchg
cmpsb
push
call
push
push
loop
mov
dec
push
int
dec
push
out
add
and
jno
and
pop
jne
jmp
adcb
lcall
fisttpl
xor
xchg
lret
mov
inc
fsubr
addr16
cmp
shr
adc
jecxz
add
lahf
mov
mov
shufps
fs
add
or
inc
mov
aam
add
and
add
push
pop
pop
lods
push
add
add
inc
add
adc
inc
imulb
enter
xchg
in
sbb
pop
cmpsb
lea
loopne
inc
push
gs
mov
mov
hlt
in
add
jno
add
lret
xchg
cmp
mov
jae
and
mov
push
mov
or
out
inc
cltd
mov
dec
mov
aaa
nop
repz
xchg
cs
or
add
pushf
int
cmp
clc
sub
pop
pop
and
lea
pop
loopne
in
sbb
aad
movb
push
xlat
jecxz
pusha
fwait
je
test
sbb
and
push
aam
jns
mov
adc
addb
rcrb
movntq
out
add
mov
and
mov
pop
inc
gs
push
dec
xchg
std
in
add
loopne
rol
pop
add
and
test
mov
mov
add
lock
aam
mov
add
popa
lret
dec
rdpmc
js
stos
add
add
and
pop
or
popl
es
mov
add
idivb
sub
shl
dec
push
pop
dec
or
pop
mov
inc
imul
add
ja
pop
shl
and
sbb
cmc
and
fnsave
dec
jo
add
jbe
adc
inc
test
sub
roll
add
and
push
add
ljmp
stos
mov
fdivs
sbb
arpl
pop
xchg
or
and
dec
add
or
mov
xor
adc
in
out
insb
add
leave
pop
sub
cmp
push
loopne
add
jl
incb
sahf
add
sub
xchg
xor
rcrb
jno
in
insb
mov
mov
adc
xchg
je
aas
in
add
jns
stos
jae
or
icebp
add
xor
cmp
add
mov
dec
inc
lea
pop
mov
imul
and
out
jp
ljmp
or
aas
out
sub
out
sti
jmp
mov
sbb
jmp
jnp
ret
fbstp
lea
cmpsb
in
in
add
cmp
loopne
add
insb
push
push
xchg
and
push
addr16
stos
cwtl
sbb
shlb
sbb
dec
popf
sbb
push
add
lahf
xchg
jae
and
add
pop
jno
and
xor
iret
cmp
adc
adc
jnp
cmpsb
insb
lea
add
adcb
jns
mov
dec
pop
popa
orb
mov
add
push
sti
hlt
sub
mov
std
inc
add
inc
add
stos
rorb
test
lock
aam
push
or
xchg
xor
or
or
ja
add
mull
sbb
iret
jne
add
jb
jecxz
andl
sahf
pushf
and
dec
xchg
out
inc
jle
add
lahf
data16
jns,pn
jno
mov
pop
icebp
or
daa
and
stos
lods
add
fs
cmpsb
mov
bound
inc
popl
movsb
test
jo
adc
lahf
pop
jno
and
add
jecxz
jb
cmp
push
ljmp
cmc
iret
imull
call
in
jecxz
xchg
dec
or
shlb
xor
or
sahf
add
add
sbb
sub
mov
fidivs
stos
shlb
subb
rep
add
dec
hlt
sub
or
test
lcall
gs
jo
pop
sbb
lret
xchg
add
inc
add
test
mov
dec
jg
leave
nop
subb
aas
call
sbb
stc
push
mov
jle
adc
imul
adc
fadd
mov
divb
add
test
pushf
aaa
popf
add
stc
loope
clc
loop
or
fisubrl
test
loopne
fs
add
push
xchg
into
mov
xor
cmp
popl
nop
mov
jecxz
out
mov
mov
push
mov
icebp
pop
add
add
ja
adc
inc
add
imul
loopne
sbb
add
addr16
decb
or
in
pop
xchg
mov
push
sbb
inc
mov
sbb
jecxz
and
repz
lahf
push
les
movb
inc
or
pop
dec
jmp
xor
mov
pop
dec
in
jmp
add
pushf
js
cmp
dec
add
xor
push
out
or
addr16
call
add
ret
ljmp
popf
adc
ficomps
daa
mov
cmpsb
push
inc
shlb
inc
xor
or
out
pop
add
fiaddl
mov
scas
xchg
cwtl
adc
std
cmp
mulb
lods
or
push
iret
add
jmp
pop
push
mov
cmp
add
mov
add
xor
mov
add
sbb
push
sbbb
and
add
dec
push
sub
insl
pop
daa
dec
add
jb
stc
ret
push
pop
cltd
add
rcll
popf
xor
sarb
sbb
mov
and
je
int
mov
ret
add
notl
ljmp
or
clc
xor
rcr
punpckhbw
mov
mov
add
scas
push
add
roll
pop
cmp
add
mov
xchg
mov
adc
and
pop
adcl
add
loopne
cld
xchg
add
cmp
push
stc
mov
xor
push
testb
xchg
leave
add
sbb
addr16
fdivs
or
add
mov
and
or
lds
inc
sub
jg
in
cmpsl
add
imul
mov
mov
add
ret
dec
fsubp
and
add
jp
bound
add
ja
sub
xchg
jmp
and
jbe
cmp
neg
sub
add
dec
or
add
stos
sub
xor
pop
sti
sbbl
lods
xchg
les
add
mov
ret
fists
pusha
sub
add
int
jge
popf
test
or
js
subb
pusha
cmp
sti
sub
or
in
push
sbb
lds
jmp
out
inc
pop
add
pop
ret
rolb
cwtl
loope
adc
mov
push
lock
or
fwait
test
add
sub
fs
push
mov
or
inc
lret
or
pusha
fstpt
hlt
jne
pop
leave
mov
push
lds
mov
shlb
inc
jbe
mov
imul
sbb
int3
mov
push
add
sub
or
mov
rcrb
outsl
sbbl
jbe
pop
xchg
push
mov
std
int3
movsb
in
cmp
mov
xchg
outsl
add
pusha
out
xor
push
mov
dec
push
cmp
imul
cmp
and
adc
push
add
frstor
inc
push
mov
loopne
cmp
sbb
add
jno
lahf
jl
repz
out
pop
hlt
movsl
scas
adc
add
push
sbb
fwait
mov
add
clc
addr16
loope
mov
mov
pop
push
inc
mov
add
int3
enter
add
jecxz
mov
add
sbb
pusha
sbbl
push
add
inc
jl
push
sub
jecxz
push
mov
inc
lcall
mov
sub
int
lods
mov
insb
add
faddp
add
enter
add
push
mov
pop
scas
jg
mov
mov
test
enter
and
cmp
cmp
ja
sub
pop
push
aam
testl
pop
or
mov
decl
adc
jb
or
xchg
stc
cwtl
pavgb
outsl
test
dec
or
bnd
loop
cmp
movsl
xchg
jae
xor
mov
stos
out
add
mov
insl
data16
jge
bound
jo
cli
add
nop
adc
pop
and
loopne
mov
jbe
scas
jp
add
out
inc
in
jb
dec
je
clc
mov
sub
ja
add
jge
xchg
sbb
xchg
cmpsb
cmp
add
pusha
pop
stos
fnstenv
cmpsl
add
xchg
dec
dec
mov
add
adc
add
mov
dec
push
or
pop
in
xchg
cld
dec
dec
add
push
lea
push
jmp
dec
test
sbb
pop
dec
movl
mov
mov
lods
inc
dec
inc
mov
mov
fdivs
cmp
sti
in
pop
cmp
aas
fisubrs
loop
cmp
popw
sbb
rcrl
cltd
and
mov
adc
mov
das
sbb
sbb
dec
cltd
add
scas
sbb
lret
sub
vpsubsb
jb
cmp
xchg
filds
insl
aas
adc
cmc
jg
add
in
mov
pop
sub
add
mov
jo
dec
sbb
mov
sub
sbb
add
xchg
xor
mov
fnstsw
imul
pop
test
inc
cltd
in
das
mov
xadd
jle
rolb
add
jae
int3
stos
jg
add
fcmovnbe
mov
add
mov
loop
dec
push
in
xchg
insl
int3
pop
mov
xor
pop
mov
add
outsl
js
pushl
lret
add
dec
jb
cmp
ss
inc
jo
pop
fwait
push
dec
lds
inc
add
push
mov
ja
in
mov
pop
fidivrl
stc
mov
mov
stos
mov
jns
out
sbb
addl
jne
xchg
loopne
jmp
in
mov
icebp
add
addr16
sub
or
xor
ljmp
mov
add
test
filds
jg
mov
push
xchg
and
mov
mov
stc
jle
or
imul
pop
inc
stos
jle
mov
pop
movsl
jg
mov
imul
cs
add
or
add
dec
iret
idivl
adc
pop
lea
push
lods
scas
add
imul
sbb
jns
bound
cmp
fwait
xchg
inc
dec
add
push
add
or
inc
into
es
arpl
mov
adc
leave
nop/reserved
repnz
add
mov
jle
mov
and
cmpl
call
push
aas
or
dec
jae
add
negl
sub
jge
mov
jbe,pt
les
push
movsb
outsl
jg
cmp
ss
xor
add
cli
push
jecxz
rorb
cmp
mov
jl
and
shll
sub
sbb
daa
and
enter
in
cmp
mov
cmp
pop
add
push
jb
aam
unpckhps
mov
int3
or
mov
dec
mov
fidivrs
sub
add
sub
push
and
mov
pop
jns
add
pop
xchg
aas
add
pop
sub
add
fistps
sbb
in
inc
jbe
das
call
add
outsb
movsl
mov
in
insl
faddl
jbe
mov
pop
xor
lcall
pushf
adc
push
cld
je
or
es
add
cmp
roll
call
mov
add
hlt
pop
addb
movsl
inc
test
fwait
adc
sbb
iret
mov
js
sbb
lret
add
fdivrs
sub
cli
loope
stc
icebp
inc
adc
cmp
cltd
fs
pop
in
dec
cmpsl
add
ja
xchg
cmpb
mov
inc
cmc
mov
jns
xor
sbb
or
push
cli
ljmp
decl
cmp
andb
adc
icebp
sub
add
cmp
imul
mov
test
jmp
push
sti
daa
xchg
in
mov
aam
mov
sub
add
inc
dec
lods
mov
sbb
imul
sub
les
or
jg
rol
or
test
add
pop
popf
mov
add
rolb
cmp
adc
stos
out
cmp
or
call
roll
sti
dec
andl
subb
lods
js
int
test
dec
push
add
mov
inc
inc
hlt
das
pop
loop
paddd
shl
mov
cmpl
out
or
mov
test
cwtl
xchg
std
mov
cwtl
imulb
lods
jl
and
mov
int
popf
add
mov
das
sti
push
outsb
lock
cltd
add
mov
dec
mov
cwtl
fsubrs
aas
icebp
cmp
mov
decl
es
insl
cltd
loope
fdivrs
add
ret
je
cmp
push
jae
loopne
mov
mov
pop
stos
dec
add
xlat
cmpsl
ss
mov
and
scas
lods
cwtl
jne
rcrb
ljmp
ret
stc
clc
cmpsb
scas
cmp
push
mov
inc
cmp
jle
sbb
xchg
add
xor
stc
jns
push
sbb
insb
xchg
dec
or
outsl
add
pop
pop
shll
and
dec
sbb
cmp
add
mov
add
cmp
cltd
add
sbb
xor
push
pop
jmp
push
testb
sbb
push
out
repz
jg
add
inc
pop
daa
add
lret
pop
or
ja
push
movsl
jbe
push
xchg
mov
lcall
in
aaa
imul
pop
shll
rclb
mov
cmp
add
ljmp
mov
add
in
add
or
pop
clc
andb
xor
xchg
add
scas
popf
jmp
push
hlt
xchg
std
fbld
mov
and
fldt
and
in
jnp
in
pop
cli
insb
xchg
rep
and
adc
jb
aad
setge
nop
stos
and
dec
fistpl
pop
inc
jno
in
lret
ljmp
and
in
repnz
pop
push
jle
ds
imul
sbb
and
mov
test
jp
add
push
push
push
or
sarl
mov
sbb
leave
popl
or
add
xchg
dec
fiadds
scas
andb
xor
int3
add
cmp
or
call
insl
push
mov
insl
lret
nop
mov
push
push
add
cmp
ja
jg
movb
scas
ljmp
xorb
js
inc
outsl
push
ljmp
cmp
and
icebp
cmp
and
pusha
dec
push
in
sbb
add
cmp
push
or
cwtl
orb
push
leave
or
mov
dec
arpl
movsl
mov
dec
lcall
into
push
mul
cmp
add
jb
pop
xchg
test
add
mov
pop
mov
jnp
add
addr16
jmp
sbb
mov
lock
rorb
cmp
adc
loopne
rolb
sub
dec
fsubrl
add
jnp
mov
std
jecxz
add
int
test
das
push
jb
mov
or
mov
mov
mov
add
mov
push
dec
jg
nop
cmp
addb
mov
xchg
add
sbb
xlat
pop
roll
cmp
cmc
testl
repz
mov
cmpsl
int
jecxz
cmp
rclb
mov
fs
fnstenv
stc
push
adc
add
ret
stos
outsl
inc
test
pop
or
cmc
addb
add
mov
add
adc
add
pop
out
in
mov
repz
in
add
ss
jp
in
adc
fisubrs
and
and
dec
loopne
sub
dec
gs
sarl
in
add
in
dec
xchg
mov
sub
adcl
pop
cmc
pop
sbb
sub
idivb
jbe
cli
shr
xchg
inc
jmp
push
cmc
adcb
addb
subl
out
adc
pop
add
jnp
mov
callw
negl
cmp
sub
int
add
jmp
add
lret
into
xchg
jb
sub
cmp
out
das
jne
cmpsl
enter
xor
negb
push
lods
dec
add
mov
sub
xchg
mov
loope
dec
mov
not
cwtl
or
sti
std
por
imul
popa
push
roll
cld
sarb
and
adc
add
mov
add
push
or
mov
push
jb
mov
push
lret
add
in
mov
icebp
add
loop
mov
push
and
push
insl
or
sti
inc
mov
add
add
aam
add
sub
xor
add
mov
inc
add
pop
clc
lods
add
cmp
add
mov
xchg
mov
mov
js
int
xchg
push
pop
jge
jg
dec
sbb
test
cli
cltd
js
add
movsbl
adc
xchg
mov
shrb
add
cmc
sbb
add
test
test
xchg
add
fstpl
std
rorl
dec
jge
xor
jg
add
icebp
add
fwait
scas
xchg
popa
or
mov
inc
clc
sbb
dec
add
cwtl
xor
roll
add
cli
int3
and
add
lahf
cmpb
les
bound
out
add
es
add
dec
into
pushf
mov
pop
mov
adc
add
lahf
scas
orl
sub
mov
add
xchg
cmc
rclb
inc
lret
mov
jne
pusha
stc
add
or
test
subl
sub
gs
fisubl
push
and
test
mov
mov
sub
daa
jae
add
rcrl
add
ret
dec
mov
enter
sub
push
lds
xor
scas
xor
popf
imul
adc
fcoms
fiaddl
arpl
aad
add
xor
in
mov
add
mov
loopne
push
pop
fldcw
leave
push
mov
popa
sbb
aas
outsl
add
mov
clc
lds
test
add
push
mov
pop
lcall
add
divl
or
add
adc
repz
mov
add
mov
or
xchg
rcrl
cmp
xorb
scas
leave
cltd
adc
jg
xor
or
mov
data16
jno
fcmovnbe
cmp
push
add
and
enter
jo
add
inc
cmpsb
mov
add
push
or
test
push
pushf
and
xchg
aad
rol
and
outsl
rcrb
cmp
cmp
add
push
pop
loop
roll
imul
loope
rcrl
fidivrs
aam
add
mov
sbb
add
sub
shl
cld
mov
lret
outsb
imul
sub
movl
push
mov
or
lcall
or
dec
push
iret
add
movsl
jne
push
add
in
fdivs
test
pushl
add
sbb
call
xchg
sahf
pop
xchg
int3
push
adc
dec
mov
mov
xor
aaa
mov
push
fsubrs
test
ss
pop
adc
pusha
test
adc
push
add
addr16
cmc
inc
repnz
into
aas
jno
mov
pop
add
cli
sti
subl
movsb
add
in
data16
add
add
out
pop
adc
test
imul
add
inc
pop
inc
mul
adc
gs
pop
push
pop
call
mov
mov
or
xor
push
std
sbb
xlat
ret
cmp
outsb
mov
lods
xchg
out
and
mov
mov
push
add
out
dec
gs
loopne
nop
cmp
xor
add
in
add
mov
xor
pop
bound
stos
mov
pop
lahf
inc
jae
and
dec
pop
aam
lea
xchg
xchg
push
mov
jecxz
adc
dec
inc
xchg
divb
jae
movsl
aas
lea
mov
add
daa
addl
movsb
jmp
xor
add
add
aam
enter
sbb
add
push
imulb
xor
rorl
imul
mov
add
out
pop
mov
mov
pop
mov
mov
add
pop
hlt
clc
mov
and
dec
inc
jo
add
add
pop
es
add
add
in
sub
jns
pop
rolb
jmp
xlat
and
mov
jg
add
lods
outsb
cwtl
jnp
pop
jae
loopne
pop
ja
xchg
repnz
stc
clc
sbb
gs
les
sub
pop
pop
mov
adc
sbbb
add
enter
shll
fisubrl
out
cld
mov
imul
shl
ds
daa
cli
test
push
dec
add
xchg
enter
add
or
add
call
cmp
cli
maskmovq
testl
cmp
int3
orl
add
mov
xor
nop
push
add
imulb
mov
add
pop
xchg
lcall
in
add
lret
jns
and
scas
nop
rol
mov
add
jne
aad
dec
mov
inc
adc
sub
pushf
notb
adc
addb
mov
and
fdivrl
ds
jmp
push
mov
push
add
rclb
ds
xchg
add
in
sahf
cmp
sub
aam
dec
adc
xchg
out
inc
addr16
add
mov
popf
ficoms
mov
dec
inc
xchg
hlt
add
pop
dec
ret
or
insl
adc
or
sub
imul
lahf
sbb
out
adcl
inc
enter
push
push
fs
push
inc
xlat
cmp
xor
mov
jge
adc
shrb
mov
ror
ret
lds
cmc
test
pop
leave
add
pop
sbbl
mov
fidivrl
aaa
mov
pop
ljmp
add
jbe
test
push
repz
movsb
adc
out
and
mov
scas
test
ret
jo
add
sub
dec
mov
add
fwait
stos
jl
inc
sub
jno
addr16
push
mulb
push
add
add
xchg
pusha
cmc
hlt
shll
test
push
outsl
sbb
lahf
add
js
and
movsl
add
rorl
add
pusha
sub
add
sub
push
std
pop
pop
add
roll
pop
add
icebp
int3
mov
testl
push
es
pop
addb
sub
add
add
outsb
add
leave
nop
sub
fdiv
lret
push
or
add
mov
pop
mov
sub
loop
int
jmp
insl
add
lods
and
inc
sahf
mov
push
add
sti
jmp
mov
mov
add
ss
fwait
test
dec
rcrb
mov
fbld
lret
je
testl
cmc
and
ss
mov
hlt
cmp
fs
stc
je
int3
loop
xor
outsl
pop
cwtl
inc
jo
mov
cmc
push
push
and
pusha
adc
rolb
cmp
rolb
ljmp
aam
rcrl
data16
add
es
imul
pusha
stos
mov
popa
add
lcall
mov
add
mov
xchg
add
and
adc
xchg
mov
addr16
pop
lods
les
lds
inc
or
rclb
aad
jns
cs
mov
iret
mov
adc
outsb
pop
xor
push
and
movb
xor
fcompl
add
push
lds
pop
dec
mov
into
add
sub
and
lcall
pop
inc
pop
add
sti
dec
push
clc
add
sbbl
add
cwtl
mov
jle
mov
je
rcrl
push
shll
mov
mov
cwtl
imul
lock
inc
outsb
mov
cmp
aam
in
ja
shrd
icebp
inc
sti
xchg
mov
cmpsl
pop
pusha
jb
jae,pt
or
movsl
aad
add
add
ret
and
jns
mov
jo
daa
loopne
cmpsl
rcrb
add
lods
std
mov
add
arpl
cs
jne
add
out
popa
je
or
add
lock
xchg
xor
repnz
add
test
sbb
enter
xchg
outsl
xchg
add
rcrl
ja
jl
loopne
lods
inc
add
out
incl
or
xchg
or
andb
out
fs
push
push
push
test
add
inc
repz
xchg
jns
test
add
sahf
or
mov
fldl
les
xchg
or
add
jae
add
je
dec
add
insl
pop
add
push
mov
add
fists
fmuls
movntq
sub
bound
xor
push
outsl
fbld
jne
pop
cmp
dec
sbb
mov
push
ljmp
add
add
iret
sub
shrl
in
xchg
xchg
mov
add
jmp
insl
aam
fucomip
cmp
jb
jns
mov
jnp
cli
fsubs
inc
lea
add
dec
stos
dec
repz
push
add
in
sbbl
xchg
sub
jae
in
add
inc
xchg
cmp
outsl
sti
mov
ror
jae
rclb
sbb
outsb
push
push
jne
scas
clc
repnz
pop
jno
sbb
test
pop
sub
stos
lret
inc
subb
test
or
inc
fisubl
mov
filds
in
clc
dec
repnz
push
stos
mov
jne
add
sbb
int
cwtl
jne
lea
push
and
xor
pop
popa
push
shll
aaa
jno
add
sbb
xchg
cmpsl
jge
sbb
and
add
inc
dec
add
cmp
adc
iret
out
xchg
clc
cmp
push
sub
sbb
jne
inc
sti
enter
add
mov
daa
pop
jg
faddl
cmp
adc
into
sbb
cmpsb
add
sahf
ljmp
add
test
inc
inc
pop
sbbb
into
pop
movsl
add
sti
push
ds
call
imul
dec
loope
jg
loop
pop
push
xchg
pop
out
push
inc
js
add
pop
das
hlt
ret
and
xor
mov
cmp
sbb
cmpb
sub
add
mov
jl
outsb
add
sub
mov
push
fsubrl
loopne
lcall
cmp
sub
or
hlt
add
aad
addl
xor
mov
xor
addb
ss
sbb
stc
sahf
sbb
and
in
xorb
shrl
fs
xchg
mul
mov
in
pushf
mov
add
jbe
mulb
sub
add
loop
dec
nop
cmp
sub
add
xchg
into
add
scas
cwtl
cmp
mov
fidivl
cli
mov
lock
xchg
dec
mov
test
inc
add
loopne
sub
icebp
sbb
imul
jg
cli
loopne
cld
or
hlt
popf
sbb
pop
pop
addb
push
jecxz
in
mov
jbe
sub
enter
inc
jo
cmp
pop
mov
repz
jb
les
mov
cmp
and
and
pop
jbe
popf
cs
adc
jmp
lea
in
jns
lcall
add
in
push
sub
inc
add
lea
or
pop
add
jecxz
cltd
lods
je
add
dec
xor
inc
jb
add
aas
lret
add
mov
pop
ljmp
stc
dec
aas
sar
xor
sub
add
jae
gs
and
sub
cmp
and
cs
sbb
ja
jl
lock
sbb
mov
call
add
cld
xlat
in
icebp
stos
mov
repnz
push
call
add
or
insl
ret
add
test
aad
mov
ljmp
loopw
push
stos
add
dec
pop
daa
aad
mov
and
inc
mov
mov
lods
inc
or
popa
in
or
add
inc
push
sbb
clc
xchg
fadds
add
bound
mov
pop
out
clc
dec
mov
add
notb
xor
xchg
push
jne
add
test
jo
mov
jmp
mov
test
test
out
dec
xchg
mov
xor
loope
or
add
dec
xor
into
pop
call
fistpll
add
jae
fwait
cmp
int3
popl
and
dec
add
imul
add
cwtl
pop
mov
cmpsb
pop
add
arpl
add
or
dec
icebp
adc
hlt
sahf
rcrb
push
add
cmpb
xchg
jp
or
addr16
sub
add
lock
inc
aas
inc
pop
cmp
xchg
push
ss
jmp
xchg
add
mov
aas
in
movsb
dec
jle
jae
pop
jnp
sahf
nop
insb
loopne
into
and
out
jg
mov
add
mov
sub
or
push
push
mov
inc
sarb
clc
add
cmpsl
fdivrs
rcl
xchg
adc
icebp
push
lcall
add
push
sbb
sbb
ss
add
popa
ficompl
inc
inc
add
jp
push
and
push
inc
fisttpll
sbb
cs
imul
add
mov
add
inc
pop
fimuls
inc
loop
add
xor
mov
fwait
or
add
sbb
push
ljmp
xlat
repnz
popl
dec
movsb
es
pushf
cmp
out
jb
adc
data16
jo
push
arpl
push
adc
mov
pop
add
mov
cmp
mov
loopne
enter
xchg
inc
dec
inc
inc
vmread
push
adc
lret
add
and
mov
jae,pt
add
sub
dec
cmp
test
pop
rcll
xor
xchg
js
add
pop
push
fistpl
lods
daa
ret
and
mov
repnz
xchg
in
rolb
loop
pusha
dec
je
add
adc
xchg
test
xchg
sub
dec
stc
fcompl
add
lcall
stos
in
sub
jb
jle
stc
and
adc
mov
test
add
es
insb
mov
hlt
mov
inc
cwtl
movsb
sbb
xlat
clc
cvtdq2ps
roll
xor
lret
xor
in
fistps
sub
movl
lds
fs
sub
loop
pushf
xor
mov
lahf
xor
pusha
cmc
lock
fxch
or
sub
or
adc
cmp
jbe
xorl
jmp
std
aam
mov
popl
shlb
mov
add
mov
gs
imul
movsb
pmaxsw
jle
loopne
and
add
add
incb
or
in
add
cwtl
aas
mov
ja
push
or
jg
sarb
aaa
pop
sbb
xchg
and
cmp
imulb
add
fnstenv
mov
scas
cmp
lret
sbb
mov
cs
rolb
int
rclb
mov
cli
pop
mov
test
mov
aam
xor
pop
rcl
jecxz
mov
sub
sbb
mov
inc
sbb
push
add
inc
adc
add
lea
clc
fstpt
sub
testb
pminsw
cs
das
sub
fidivrs
test
cmp
lret
insb
loopne
mov
xchg
dec
das
add
sub
mov
mov
in
sbb
ret
loopne
cld
add
xlat
mov
mov
sbb
xor
fisubrl
add
es
xor
aam
test
pop
sarb
push
pop
add
xchg
jle
add
xchg
mov
mov
cmpl
add
mov
mov
cmp
int
aam
adcb
jmp
mov
mov
test
jp
add
push
xchg
cs
mov
push
bound
jmp
lds
pop
shrb
xor
in
inc
shl
je
sbb
xor
sub
dec
in
add
jg
fsubs
xor
sub
or
movsl
fiaddl
lcall
push
fildl
cli
pop
imul
fwait
push
jecxz
add
pop
test
add
pavgb
mov
lret
pop
mov
mov
insl
xchg
out
xor
jns
mov
movsl
dec
out
push
sub
push
fidivl
cltd
jge
add
pop
mov
inc
jecxz
fs
sub
fdivs
push
add
or
ds
jnp
ss
cmp
and
dec
mov
filds
sub
inc
push
in
mov
push
sub
sub
insb
add
mov
pop
ret
push
pop
mov
pop
popf
add
jbe
sbb
and
mov
fnsave
mov
xor
xlat
push
add
pop
sub
imul
mov
xchg
add
iret
ficoml
lcall
push
mov
add
inc
loopne
cs
mov
hlt
add
repnz
pop
mov
je
pop
lds
out
ficoms
xor
push
add
es
pop
pushf
pop
add
mov
loope
out
sbb
sbb
push
cmp
add
adc
jb
cmp
roll
scas
inc
fstpl
sbb
movsb
sbb
shl
rorb
ljmp
jl
fbld
add
out
cmp
add
sbb
xor
mov
pushf
sahf
and
add
inc
pop
icebp
add
xchg
stos
test
call
push
jp
and
mov
ds
jo
fs
push
inc
push
adc
pop
iret
cmp
dec
in
jge
std
add
ljmp
add
pop
arpl
lret
mov
sbbb
cli
rorb
enter
cltd
stos
outsb
testl
xchg
pop
push
loopne
es
lcall
shrl
cmp
xchg
int
mov
push
sbb
sbb
xor
pusha
or
loop
jg
sub
test
mov
sahf
out
mov
addb
and
sbb
add
orb
mov
lcall
add
mov
lock
xchg
test
stc
cltd
ret
dec
loop
add
in
outsl
popf
rcll
ja
add
lret
test
or
ret
pop
mov
inc
pop
mov
adc
cmpb
lods
jbe
ret
or
movsb
into
adc
lds
adc
cwtl
jo
pop
mov
dec
decb
gs
insb
mov
scas
add
xchg
in
pop
outsl
jno
adc
or
ljmp
add
sbb
adc
xchg
sti
mov
repz
add
mov
inc
push
inc
lahf
or
xchg
nop
cmpsb
scas
jge
add
jo
xchg
insb
imul
flds
pop
jne
pop
clc
jle
adc
insb
push
shlb
loopne
add
test
jmp
fidivs
mov
mov
insb
mov
pop
mov
in
inc
push
dec
adc
push
outsl
xchg
mov
into
lock
std
jae
jne
cmp
pop
roll
mul
xchg
mov
mov
xor
leave
aas
jbe
shl
mov
in
inc
xor
and
sub
pop
mov
mov
cmpsl
sbb
mov
add
xchg
mov
loopne
nop
and
mov
stos
rolb
push
adc
or
add
mov
jle
lods
nop
jg
inc
das
add
es
add
clc
or
hlt
fstl
mov
mulps
lea
mov
fisubrs
and
jbe
jl
add
stos
or
scas
sarl
sbb
dec
xchg
pop
test
cmp
dec
jne
xchg
mov
sub
push
sub
add
sub
sbb
mov
dec
inc
cmp
add
mov
cltd
mov
jo
jmp
in
int
jge
fidivrl
pop
js
mov
mov
sub
pusha
lret
cmpsl
test
jns
pushf
add
xor
and
add
dec
clc
inc
clc
movl
mov
incl
mov
scas
mov
insl
add
or
mov
add
dec
inc
dec
add
in
jno
psubsw
or
call
or
pusha
add
add
add
mov
add
pop
jbe
insb
adc
lahf
cmpsb
pushf
stos
mov
rclb
add
fisttpll
xchg
pop
cld
sbb
ret
dec
iret
nop
icebp
mov
xor
push
scas
and
jno
es
sbb
fcmovb
rolb
daa
xor
push
out
std
dec
jbe
pop
test
arpl
loop
add
call
or
cmp
popa
lds
cmp
addb
or
roll
ljmp
add
scas
lods
sbb
std
je
ljmp
push
das
loopne
movsb
cmp
push
jl
cmp
push
add
ja
mov
cltd
add
push
fnstsw
cmp
pushf
ret
jo
cmp
add
daa
sbb
sub
leave
in
xorl
cwtl
inc
xchg
ja
push
incl
lock
test
mov
je
test
movl
mov
cmp
add
les
xchg
push
subl
js
and
add
push
and
lods
pop
out
xor
jne
push
adc
faddl
shrb
in
out
add
pop
push
fs
add
dec
fdivl
sbb
or
test
mov
add
test
je
lock
mov
out
loopne
jbe
mov
add
mov
and
jg
mov
mov
mov
adc
sbb
in
rol
das
add
idivl
cmp
fcoms
int3
cmp
ss
sub
adc
lcall
push
push
data16
sbb
out
cmc
xor
push
lods
ljmp
sbb
add
xchg
cmp
insb
sbb
loopne
cli
dec
idiv
out
add
dec
mov
out
mov
data16
add
jnp
add
cmc
xchg
imul
sbb
fsubl
rcll
or
lock
add
mov
in
lret
cmc
mov
pop
ret
push
add
std
xor
add
mov
xchg
jno
les
das
stos
test
iret
stos
add
and
nop
sbbl
push
sarl
sub
les
add
mov
mov
lea
sbb
xchg
lods
rolb
jae
add
or
adc
test
scas
filds
das
adc
mov
mov
nop
dec
ret
xorl
lea
dec
cwtl
icebp
add
std
sbb
inc
idivb
or
pop
add
aas
inc
or
add
fwait
das
adc
pop
add
and
mov
mov
shlb
mov
aaa
and
icebp
xor
jmp
add
sub
pop
insl
ja
shlb
fs
pop
add
outsb
aam
cmp
dec
pop
loopne
rolb
dec
push
pop
test
add
imul
xchg
mov
lods
test
popa
sarb
negb
sub
add
addr16
str
sub
cs
cltd
popf
inc
jae
jl
pop
rorb
clc
pusha
aas
push
sbb
mov
out
mov
lret
pop
stos
testl
int3
sbb
ds
lock
jb
icebp
fstpl
push
xchg
aaa
enter
mov
sti
or
pop
or
push
ljmp
mov
xor
add
push
pop
aad
fwait
leave
mov
incl
inc
jnp
fs
jo
imul
pop
xor
mov
mov
nop
test
sbb
lret
inc
jns
movsl
push
add
clc
icebp
out
jmp
dec
cmp
jne
mov
int3
rorl
add
das
xchg
mov
shrb
addr16
and
or
imul
roll
pop
out
jb
jle
adc
inc
jmp
mov
imul
pusha
fwait
add
stc
jle
add
jnp
xchg
pop
sahf
push
js
mov
push
popf
icebp
mov
cmc
mov
xchg
add
mov
dec
arpl
ret
lcall
shlb
fisubl
aam
mov
sbb
xlat
cmp
adc
ja
or
jp
jo
out
nop
push
push
fildl
out
or
sbb
mov
add
adc
leave
shl
and
add
jne
mov
add
mov
xor
and
ds
mov
cwtl
int3
cmc
and
jecxz
or
insl
xor
add
sbb
cmp
push
stc
add
imul
cli
xor
int
lret
fnstenv
add
jne
js
jno
add
jns
mov
mov
adc
inc
mov
dec
daa
sbb
sti
enter
in
push
add
inc
and
lret
test
push
mov
negb
and
push
movsl
inc
mov
stc
idivl
ret
sub
mov
or
iret
pop
dec
popf
push
js
xchg
gs
add
call
rdpmc
add
mov
ljmp
test
popl
daa
jae
rolb
inc
add
outsb
mov
mov
faddl
pop
cmp
mov
pusha
add
add
mov
in
lar
xchg
cli
add
mov
dec
mov
mov
inc
jg
mov
push
bound
sahf
sub
js
mov
ror
iret
rol
mov
jmp
cmp
push
fcoms
add
push
cmp
adc
xlat
fs
mov
pop
in
pusha
loop
mov
mov
mov
aam
add
add
into
xchg
jl
or
xchg
adc
and
add
sub
addb
ljmp
and
movhpd
add
pop
loop
sbb
into
adc
mov
loopne
in
pop
add
xchg
jmp
sbb
mov
mov
sub
rcll
cmp
add
sbb
orl
mov
mov
inc
addb
add
lahf
jecxz
nop
pop
pop
add
xchg
mov
cs
add
jmp
push
add
lods
push
adc
adc
in
scas
push
imul
shlb
lea
movsb
xchg
pop
addr16
push
add
or
dec
or
inc
jb
repz
jbe
add
faddl
add
rcrl
in
dec
js
pop
dec
jmp
xchg
xchg
nop
fnstenv
pop
addb
rcrl
je
add
loope
clc
in
add
jmp
das
repz
lock
in
mov
add
cmp
adc
in
nop
cld
andl
mov
cmpsl
sbb
cs
insl
pop
push
sub
add
scas
sbb
inc
rcr
in
cmp
pushf
mov
inc
cltd
and
mov
adc
pop
lods
lock
popa
out
add
ljmp
add
fstp
xchg
pop
push
rolb
add
test
test
insb
add
adc
repz
push
leave
je
test
mov
mov
push
cmpsb
pop
xor
psrlw
clc
sbbl
fimuls
xchg
lret
test
pop
sub
dec
or
sbb
add
mov
mov
cmp
add
decl
mov
ja
add
cli
lret
add
or
lret
cmpsb
fisttps
cmovle
ja
sub
pop
lret
mov
movsb
xchg
flds
in
in
dec
jns
add
test
jo
out
lret
je
mov
push
jne
add
push
dec
add
jnp
int3
add
mov
mov
add
jp
insl
cltd
addr16
aas
add
add
mov
add
push
push
sbb
xchg
cmp
jmp
xchg
mov
ret
fisttps
jbe
add
adc
jle
push
in
jnp
ljmp
and
out
cmp
rclb
sarl
lods
add
popf
enter
arpl
shrl
xchg
mov
leave
jns
sbb
adcb
repz
test
adc
std
ret
push
mov
lods
mov
ret
add
mov
xchg
pusha
jb
adc
sub
lods
push
or
jmp
sub
hlt
push
insl
pusha
leave
inc
push
add
repnz
xchg
mov
shlb
lds
mov
faddp
outsl
roll
jecxz
mov
add
sbb
adc
getsec
sub
in
jbe
pop
arpl
fdivs
jbe
aas
adcb
push
add
xchg
nop
add
pop
push
pop
scas
loop
jle
sub
daa
mov
lcall
add
psllw
sarb
add
daa
sbb
lret
in
push
xchg
int
rcrb
push
fistl
cmpsl
test
push
popa
sub
and
cmp
cmc
test
sub
sub
es
repnz
mov
js
sbb
add
sbb
enter
pop
and
addb
sbb
stos
fs
addb
inc
xchg
pusha
rolb
loopne
mov
sub
jns
ficomps
faddl
push
into
sbb
js
lcall
cltd
insl
sub
stos
dec
fwait
int
jg
push
add
push
xchg
mov
push
add
lds
mov
add
cmp
std
ret
lods
pop
loopnew
repnz
jnp
mov
push
cmp
idiv
fwait
rcr
lret
add
fidivl
push
add
adc
pusha
cld
fs
add
pop
stc
mov
add
les
in
mov
add
je
inc
add
add
out
cmp
mov
add
leave
xchg
int3
cli
mov
sbb
stc
add
mov
add
push
xchg
jae
add
je
add
aam
imul
jl
sbb
loopne
dec
jo
pop
add
out
rolb
push
daa
add
mov
mul
add
inc
cwtl
rcl
jnp
adc
cmp
pop
jg
xor
xchg
inc
aas
push
pop
add
lds
into
mov
test
inc
jge
dec
add
cmpsl
pop
nop
aaa
jmp
mov
out
jmp
icebp
sbbb
rorb
mov
addl
or
lea
lcall
mov
insl
je
add
dec
sub
jb
add
mov
jg
icebp
stos
inc
add
pop
sbb
xlat
dec
iret
testl
mov
sbb
es
add
testb
shll
out
cwtl
out
nop
mov
mov
rolb
push
add
lea
adc
cld
add
dec
add
sbb
loopne
and
add
cmp
add
jnp
std
aam
dec
repz
cmp
ror
push
testl
mov
and
xchg
pop
xor
dec
pop
mov
popa
jbe
add
jg
insl
xchg
stos
adc
clc
mov
addb
sub
and
mov
cmp
add
add
push
into
and
lret
add
outsl
stos
aad
ficoms
pop
fsub
roll
or
sbb
add
add
dec
stos
add
pop
xchg
pop
jbe
pop
cmp
rorb
lods
mov
lods
sbb
cld
jmp
add
push
mov
add
jno
xor
inc
test
push
xchg
cli
ja
pop
jae
add
and
add
sub
rolb
in
and
jns
mov
sbb
out
test
ror
pushf
add
out
add
cmp
add
sbb
add
enter
mov
xchg
lock
out
add
cmpl
outsb
xchg
dec
add
in
push
outsl
cmp
fildll
push
aas
add
inc
js
adc
fadds
insb
push
inc
daa
and
dec
cwtl
add
sbb
je
mov
out
dec
jg
push
es
jae
test
idivb
push
lret
roll
mov
adc
std
in
scas
dec
or
fsubrl
pop
sbb
daa
outsb
xchg
mov
jns
add
test
inc
inc
mov
or
add
cmp
add
mov
mov
les
mov
fisubrs
cvtps2pi
mov
lret
in
add
scas
jl
or
imul
sbb
dec
jge
cmp
inc
jbe
jne
push
ds
andb
adc
and
add
jo
mov
xor
add
mov
aaa
and
jl
inc
cwtl
pop
jno
xor
jnp
repnz
add
addl
cmp
fsubs
shlb
jbe
mov
stos
push
xor
add
lahf
rcrl
and
cld
sub
cmp
dec
pop
sub
sti
in
or
inc
push
pop
lret
and
js
sub
rcrb
mov
add
xor
cmp
xcrypt-ctr
cmpsl
lahf
push
and
std
in
cltd
rolb
mov
out
outsb
adcl
sub
into
and
fdivrl
push
insl
movsl
xchg
pop
add
jecxz
int
loopne
push
add
in
mov
cmp
std
mov
jecxz
inc
jg
mov
mov
push
sahf
jae
push
sbb
ds
adc
add
adc
testl
xchg
cli
cmp
add
xchg
fs
jne
mov
xor
sbb
xor
add
into
push
and
or
jae
mov
xor
mov
stc
sti
out
clc
fiaddl
lods
adc
add
adc
add
mov
dec
imul
push
pop
cmp
add
gs
in
aad
das
push
lock
imul
add
adc
outsl
jecxz
sub
mov
call
mov
push
sbb
sbb
pop
clc
cmp
add
aad
fxch
divl
aam
and
nop
xchg
cmpsl
dec
pop
jo
fcoml
iret
add
and
dec
cs
pop
add
jmp
push
xor
mov
arpl
pop
aaa
cmc
clc
loopne
imul
add
mov
xlat
je
movb
jecxz
and
add
cli
iret
pushl
inc
pop
aas
add
lock
xchg
mov
jp
popf
rcr
cmp
insb
cli
cld
mov
lret
cwtl
aad
int3
std
add
pop
test
inc
sti
jge
add
mov
mov
mov
mov
cmp
sub
mov
out
mov
add
lret
out
sbb
cld
fldenv
push
icebp
add
mov
cmpsl
decb
mov
push
xchg
es
adc
or
icebp
aam
inc
lret
dec
sub
mov
sbb
pop
loope
pop
mov
pop
xor
mov
inc
jno
inc
test
sub
jbe
repnz
les
hlt
insl
aas
lods
fldl
dec
out
jb
add
test
cwtl
add
mov
in
unpckhps
mov
out
jge
add
stos
les
leave
pop
xchg
dec
sub
inc
int3
jnp
add
or
dec
nop
iret
xchg
mov
xor
test
pop
or
cli
test
sbbb
sbb
ds
add
add
inc
xchg
dec
fwait
push
xchg
cmpsb
or
movsb
adc
adc
aas
dec
dec
xchg
cmp
incb
xor
fs
mov
mov
xchg
ja
xchg
in
dec
add
push
cmp
jg
or
out
mov
add
pop
mov
add
test
jo
add
and
addr16
or
sub
out
mov
movsl
sbb
xchg
and
clc
cs
insb
outsl
jns
in
pop
jle,pt
push
arpl
jnp
push
jecxz
push
jae
sti
jecxz
stos
outsl
jo
push
pop
push
lcall
push
aad
cltd
jmp
add
push
pop
lock
clc
cld
sbb
xor
iret
or
xor
orb
inc
push
inc
mov
out
add
sub
sbb
in
xor
outsb
add
inc
shlb
or
inc
out
pop
cmc
arpl
ljmp
xor
xor
popa
mov
add
std
inc
fiadds
or
sahf
xor
sbb
lods
pop
or
sahf
aaa
shlb
add
stc
popa
jbe
push
iret
pop
push
popa
add
cmp
add
and
mov
add
adc
xor
push
hlt
add
incb
jl
cwtl
mov
jno
fisubs
in
cli
popf
jg
add
xor
inc
sarb
call
jle
test
pop
daa
lret
add
in
xor
and
cmp
push
ficompl
cld
add
and
push
dec
sbb
js
add
pop
inc
cli
add
fidivl
jge
mov
inc
loop
cmp
fiadds
push
popl
inc
rclb
mov
out
and
jp
add
pop
outsl
nop
push
div
add
subb
in
add
mov
inc
es
sub
lret
fnstenv
pop
decl
jg
subb
push
add
in
sahf
push
dec
pusha
stos
add
mov
jg
add
or
jae
idivl
or
inc
adc
sub
jl
add
lahf
repnz
add
sub
jmp
stc
clc
add
nop
cmc
inc
or
push
cmp
jmp
mov
cli
sbb
arpl
mov
sbb
add
cwtl
mov
adc
fdivrs
lahf
adc
pop
stc
loopne
pop
mov
add
sti
sbb
or
mulb
sub
cmp
ret
pop
cmp
push
sbb
xchg
lret
repz
dec
and
mov
jb
ds
movsb
cmpb
xchg
loopne
pop
add
xchg
jmp
jne
pushf
add
lcall
pop
dec
ljmp
call
add
xchg
jo
mov
iret
add
scas
je
jle
dec
jno
pop
add
jns
aas
and
mov
mov
add
inc
push
nop
jg
pop
pop
sub
fmuls
bnd
lods
add
adcl
pop
cmp
push
es
nop
pop
add
mov
lods
testb
mov
stos
add
dec
or
bound
inc
sbb
and
push
push
dec
lret
pop
add
repz
add
adc
and
enter
pop
hlt
insl
adc
std
sbb
mov
cwtl
aam
mov
subb
shlb
mov
xchg
xchg
out
mov
xor
xor
sub
mov
add
xchg
sub
lret
add
and
push
out
mov
add
mov
sbb
test
add
cmc
cltd
jns
lods
add
add
pcmpeqb
cld
push
test
or
out
pop
mov
add
xor
ds
cwtl
inc
xchg
mov
cmp
dec
add
xacquire
jae
mov
outsl
in
mov
jl
pop
idiv
jmp
sti
add
lret
call
test
push
inc
add
jo
dec
cmp
or
fnstcw
inc
mov
mov
aam
addb
in
xor
mov
or
bound
adc
out
ficoms
in
outsl
add
jne
scas
mov
jbe
sbb
repnz
mov
pop
lock
fwait
add
ja
mov
cmc
adc
inc
sub
fnstcw
das
mov
jecxz
add
jmp
add
out
pop
pusha
pop
mov
jne
sub
add
jb
and
add
and
imul
fdivrl
cmp
lods
icebp
jbe
cmp
or
pop
adc
lock
test
cmp
adc
add
push
mov
scas
int3
scas
add
jge
inc
add
inc
call
pop
sub
pop
mov
xchg
arpl
cmpsl
add
inc
je
leave
lods
jnp
shlb
in
mov
rol
add
outsb
fidivs
js
pop
int3
mov
movsl
add
aaa
imul
pusha
add
lods
cmp
push
mov
repz
and
and
scas
jg
add
ds
shlb
push
inc
call
lock
lcall
imul
daa
pop
divl
fucomi
jge
inc
cmpsb
fcmovbe
push
inc
add
pop
push
imulb
mov
jo
add
jmp
loopne
dec
or
idivb
jle
loopne
add
inc
loope
fbld
and
js
int
add
sbb
add
add
mov
add
shll
cwtl
dec
shlb
iret
lock
dec
and
rcrb
stos
clc
cld
add
pop
jle
push
sbb
lcall
popf
sub
into
and
int
dec
add
xchg
xchg
xor
jnp
out
jb
testl
jmp
jg
cs
xchg
add
pop
sti
test
sub
sahf
mov
or
inc
add
and
imul
std
push
add
cmp
sti
fdivr
dec
xor
cmp
sbb
out
mov
mov
pop
loop
or
push
mov
xor
pusha
daa
push
or
sbb
mov
shlb
cli
call
notb
add
add
sub
inc
mov
jecxz
dec
lcall
adc
int
pop
ja
adc
add
pop
gs
ljmp
leave
nop
call
bound
pushf
sbb
jb
xor
mov
add
shl
add
fdivrl
int3
mov
add
sbb
add
and
cs
test
push
pop
pop
mov
xchg
rcll
dec
mov
add
test
fcomps
cmp
aad
jae
add
jecxz
leave
and
pushf
call
mov
mov
inc
shrb
push
es
xchg
sbbb
jo
add
das
dec
xchg
fmuls
xchg
pmaxsw
mov
in
rcrb
std
pop
sub
testb
xor
sub
add
jmp
mov
add
xchg
das
outsl
xchg
pop
lock
mov
je
fistpll
test
push
int3
push
pop
inc
das
cmpsb
shl
arpl
add
mov
push
xchg
jl
adc
pop
add
loop
js
add
add
rolb
ja
lock
add
mov
mov
sbb
mov
lods
pushf
testb
fcomp
mov
clc
jp
add
fnstsw
push
fsubp
pop
inc
mov
sar
rorb
fistpl
add
inc
add
pop
popf
cmp
out
jp
pop
stos
mov
fst
cmp
inc
xor
lds
stos
sbb
dec
test
rclb
sub
dec
xchg
add
mov
sbb
out
adc
cmpsb
addb
decl
scas
mov
push
push
mov
or
or
xchg
fildl
aam
dec
mov
cwtl
stc
sbbb
lds
mov
dec
into
fsts
mov
sub
bound
movsl
push
cmpsl
out
inc
adc
and
dec
add
sub
mov
mov
repz
push
adc
or
lock
add
pop
sub
outsl
sub
sub
cmp
pop
xchg
add
push
or
pusha
add
pop
and
add
pop
subb
clc
shrb
push
stos
push
xor
icebp
push
fdivrs
mov
cmp
push
outsl
xchg
jle
pop
out
xor
jne
pop
insl
repnz
lret
adc
in
xlat
push
shl
lahf
scas
jae
add
jle
dec
sbb
je
out
xchg
mov
adc
mov
xlat
es
or
cmc
call
cmp
sub
leave
or
popa
repnz
aam
add
gs
pop
fcomps
lret
pop
lahf
push
mov
mov
add
add
or
xor
sub
stos
shrb
xor
movsl
push
add
xor
jle
inc
cmp
lea
add
add
xor
add
xchg
gs
test
xchg
jl
lds
sub
movsb
mov
mulb
push
js
enter
or
lock
inc
lock
push
add
add
test
add
mov
and
imul
jnp
cmp
rolb
jno
adc
add
js
add
pop
mov
xor
sbb
mov
pop
push
cmp
nop
and
rorb
subb
inc
dec
jbe
add
sub
mov
jb
shr
sbbl
data16
adc
push
cmp
andl
inc
call
sub
mov
jp
jg
ficoml
or
inc
or
add
lret
aam
mov
addr16
sarl
cmp
mull
mov
fdivs
jnp
sbb
pusha
jae
aad
adcb
stc
add
in
dec
outsl
add
daa
es
push
aam
or
or
mov
add
das
xorb
mov
cli
pop
addl
add
data16
jno
inc
add
es
test
adc
ret
pop
xchg
outsl
ja
out
add
cwtl
xor
fs
js
lret
in
dec
jl
inc
mov
lss
jbe
ja
repnz
clc
ret
push
adc
add
add
cli
jecxz
fnstcw
add
cmp
ret
loope
nop
mov
cmc
mov
shr
mov
lret
pop
mov
lahf
jo
mov
jmp
jne
lea
jbe
mov
in
add
pop
je
shll
scas
jb
sub
aas
bound
gs
sbb
push
stos
pop
movsl
arpl
das
fisttps
adc
or
add
nop
and
add
cmp
adc
fiadds
les
add
jae
sbbl
inc
mov
mov
ror
cmp
lcall
cmp
in
out
mov
adc
or
dec
insl
loope
and
es
xlat
push
ret
mov
rolb
cmpsb
dec
imul
sub
je
and
add
mov
xchg
out
sbb
add
add
lods
pop
mov
popa
pop
xor
test
add
std
int3
push
call
add
pop
cltd
push
out
cld
shr
dec
rdmsr
xchg
add
push
cmp
out
jmp
lods
stos
xchg
mov
add
rcrl
dec
add
xchg
loop
mov
fstps
mov
xchg
add
push
pop
mov
sbb
jae
jo
add
das
pop
add
add
jmp
or
fnstsw
in
add
mov
out
pop
sbb
into
mov
mov
add
in
bnd
jbe
lods
bound
sar
out
jge
add
jge
push
js
jb
test
aas
mov
nop
add
lcall
xchg
or
fisubs
cmp
roll
jnp
push
jae
jns
mov
xor
rcll
fbld
cmp
xchg
jmp
jle
insl
cmc
jnp
add
jge
and
int
enter
push
sub
mov
popf
mov
xorb
jecxz
inc
push
cmpsl
pop
and
mov
add
sub
adc
mov
clc
scas
adc
imul
sbb
jne
xchg
adc
adc
inc
cmp
push
sub
rolb
xchg
inc
clc
pop
sbb
pop
pop
jno
ficompl
leave
lcall
inc
mov
clc
add
or
pop
and
fdivp
add
sub
ja
mov
fimull
aas
add
xor
add
sarl
mov
cmp
pop
sbbb
lds
inc
add
imul
shlb
add
add
xor
push
or
ret
dec
repz
add
inc
cmp
adc
lcall
cmpsb
loopne
addb
jg
push
push
mov
pop
loope
loopne
out
lahf
dec
cmp
ret
movsl
sbb
add
adc
cmp
push
roll
sub
or
loope
and
add
aas
mov
add
dec
fs
mov
sub
add
nop
xor
std
das
add
pop
into
sbb
negl
rorb
add
xchg
xadd
mov
call
inc
push
leave
ret
pop
ss
pop
std
out
nop
adc
add
add
mov
cltd
pop
and
rolb
lea
jge
sbb
mov
or
jecxz
sbbb
stos
test
arpl
sbb
outsl
jle
push
push
add
rcll
lret
add
divl
adcb
mov
int3
and
fs
sbb
ret
loop
add
xchg
and
insl
xor
repnz
into
daa
jecxz
shrb
add
popa
lea
cld
fcoms
inc
out
pop
xchg
add
scas
mov
add
adc
add
rorl
js
loop
add
and
lcall
loopne
pop
test
cmp
jecxz
mov
add
bnd
add
rclb
cmp
mov
cmp
scas
mov
repz
add
pop
add
inc
fmul
ss
enter
add
aas
aad
mov
fmuls
in
pushf
adc
mov
hlt
add
cs
jae
notb
jecxz
jge
je
sti
cltd
add
int
jb
shr
pop
aas
add
inc
inc
push
mov
inc
mov
dec
push
fisttpl
lods
jo
add
cmp
lock
ror
jle
add
dec
sar
add
dec
loop
mov
mov
sub
mov
and
mov
mov
icebp
adc
pop
int
and
adc
xchg
es
pop
mov
mov
andb
and
aam
push
add
repnz
shr
pop
shrl
add
inc
mov
and
movsb
or
mov
xor
lods
jb
pop
popa
jno
cmp
ljmp
and
loopne
mov
pop
pusha
push
fs
push
aaa
test
sbb
add
add
push
setno
adcb
lods
xchg
add
pop
stos
xorb
or
hlt
scas
into
sbb
adc
jbe
cmp
or
add
in
lods
mov
jnp
add
xor
add
pushf
bound
dec
mov
lcall
insb
sbb
in
ret
jecxz
and
push
xchg
cmp
enter
pushf
popa
orb
mov
ja
add
or
mov
inc
xchg
fmuls
xchg
mov
test
roll
jns
add
jmp
add
cmp
fmuls
sbb
popa
shlb
add
aaa
int3
push
jp
sbb
loopne
fcomip
or
add
mov
bound
orl
fs
inc
subb
add
aaa
fcomip
sub
and
xor
clc
int
or
jnp
jae
insb
insl
frstor
cmp
out
push
add
scas
mov
mov
aad
push
cmc
xor
rolb
lods
mov
int3
push
mov
and
mov
push
cli
push
pusha
aad
scas
cmp
add
fisubrl
setno
mov
inc
arpl
ror
mov
icebp
mov
shll
enter
hlt
and
xchg
repnz
mov
adc
add
out
xchg
ficomps
std
sahf
scas
int3
bound
jno
or
rcll
aaa
cmpsb
add
sub
pop
lahf
cmpl
jne
xchg
add
jmp
xchg
mov
cmp
hlt
or
and
std
xor
sbb
addl
xor
push
out
les
dec
bound
jmp
add
stc
mov
daa
adc
add
nop
idivb
mov
arpl
roll
cmp
push
push
cmpsl
nop
test
add
es
insb
push
mov
test
movsb
movsl
aas
pop
xchg
cmpb
pop
and
mov
pop
cmp
push
dec
cmpsl
pop
cmp
cli
cmpb
push
pop
movzwl
xor
outsb
mov
sbb
lahf
mov
jle
add
mov
jb
xor
js
sbb
or
add
movsb
add
pop
jl
mov
mov
push
push
pushf
or
out
push
mov
andb
mov
loop
jg
and
ljmp
cmp
dec
sbbl
inc
sbb
add
shl
push
lret
shll
divl
fstp
sub
leave
in
ss
sub
fs
add
mov
or
loop
add
outsl
je
pushl
push
sbb
aam
shlb
add
sahf
cmpl
cli
repz
cwtl
repz
or
mov
pop
sub
adc
push
imul
aam
add
loopne
fs
gs
xchg
cmp
fimuls
es
and
add
cmc
negb
cmp
sub
imul
les
adc
add
inc
out
lahf
nop
dec
sbb
pop
js
aad
adc
cs
cld
loope
shrl
adc
push
and
add
fwait
cmpsb
jnp
add
ficoml
sbb
jecxz
ds
je
ja
dec
dec
out
sti
jb
scas
jmp
mov
sbb
inc
sub
cmp
xchg
jnp
dec
add
pop
subl
push
jle
test
cwtl
add
std
push
or
notb
dec
push
jp
fcmovu
mov
out
push
mov
or
add
lock
addr16
out
add
mov
mov
sbb
mov
call
stos
jge
add
fadd
dec
add
push
sahf
es
enter
inc
jno
add
adc
mov
mov
daa
outsb
and
add
insb
mov
bound
mov
ret
jp
xchg
cmp
js
clc
sbb
out
add
pop
mov
add
test
push
icebp
cltd
push
rclb
adc
mov
cmp
int
xchg
jne
fucomp
add
inc
out
pop
add
ss
rorl
cmc
sbb
roll
imul
add
rolb
mov
adc
xor
addr16
or
add
jae
pop
inc
lds
or
sbb
add
dec
or
cmpsb
ja
rorb
verr
xor
add
lahf
call
cmp
sbbb
out
jecxz
sbb
cmp
loope
dec
in
imul
mov
cwtl
or
pop
js
sbb
add
or
push
loope
shrb
out
adc
xchg
movsb
jmp
xchg
inc
push
fbld
or
add
jle
lock
loopne
fcoms
add
and
into
sbbl
add
mov
fxch
mov
inc
jae
stos
call
pop
add
mov
and
add
test
adc
movsb
inc
xcrypt-cfb
cmpsl
add
imul
out
sub
inc
xchg
shl
fimull
xlat
adc
push
add
cmpsb
out
arpl
xchg
xchg
add
jo
mov
mov
cli
repnz
dec
mov
cs
add
insl
fsts
cmp
add
sub
sub
add
cmp
xchg
aaa
add
js
fidivrl
jecxz
jbe
cmp
push
add
lock
pop
pop
nop
cmp
arpl
or
stos
pop
or
push
nop
jne
mov
jl
add
add
out
loopne
daa
adc
add
add
jg
in
mov
out
push
inc
popf
es
and
add
test
fsubrs
out
lahf
cmp
loop
movsl
loopne
and
in
jle
dec
sub
add
loope
repz
push
imul
pop
inc
and
js
aam
lea
xchg
or
mov
out
add
pusha
mov
add
jo
sbbb
incb
rcr
mov
add
outsb
aad
inc
sub
sbb
fdivl
test
gs
pop
sti
xchg
adc
ljmp
outsl
push
lahf
enter
mov
je
test
add
cli
ds
mov
in
jg
mov
xor
outsl
and
js
js
into
sbb
insb
mov
mov
repz
lret
pop
jp
xor
inc
fsubr
and
shlb
adc
pop
es
pusha
stc
mov
lret
cmp
test
popa
popf
in
xorb
into
add
mov
aas
xchg
xor
sbb
push
repnz
hlt
pop
push
incb
data16
loopne
add
in
add
es
fidivrs
sar
repz
loopne
pop
jae
dec
add
push
incb
test
sti
test
inc
jle
lea
mov
testb
leave
xlat
xor
fstpt
clc
lahf
xchg
push
sbb
cltd
pop
clc
repz
test
fstp
push
das
scas
add
movsb
jns
xchg
jbe
nop
xor
jmp
cs
add
jmp
movsb
rcrb
insl
mov
pop
imul
addr16
add
inc
inc
sub
jg
mov
fnstenv
dec
dec
dec
les
gs
jp
jbe
cmp
loope
mov
in
pop
mov
fcmovnb
add
ss
inc
les
addl
sbb
mov
push
nop
jl
aaa
add
add
fstps
lods
rcrl
sub
mov
das
jmp
nop
lock
aas
sbb
orl
mov
arpl
pop
add
mov
les
cmpsl
adc
cmp
insl
xchg
out
inc
es
mov
sub
sub
add
rorb
add
outsl
mov
stos
add
mov
adc
fisttpl
lods
dec
dec
mov
lahf
aas
pop
jle
movsb
pop
dec
xchg
xlat
xor
clc
push
shr
fstl
shll
ljmp
stc
test
add
cltd
mov
in
cmovg
addl
out
push
mov
fcompl
div
mov
jbe
dec
xchg
je
test
add
jl
mov
mov
add
jecxz
ret
call
incl
sbb
add
sub
xor
fldl
fwait
outsl
add
inc
or
dec
pop
inc
lret
sub
cmp
and
mov
mov
cmpsb
cmp
push
add
mov
add
je
ret
push
mov
add
jne
jb
add
imul
xchg
mov
aaa
jp
maskmovq
testl
or
out
push
sub
push
add
xchg
add
mov
filds
push
cmp
in
add
mov
fnsave
add
cli
and
add
insl
push
aam
movsb
mov
popf
adc
add
stos
and
lret
mov
inc
iret
inc
add
adc
add
scas
decl
imul
inc
xchg
prefetchnta
cmpsb
inc
mov
test
int
cmc
push
insb
inc
add
mov
cmp
setno
jmp
mov
mov
rcrb
cwtl
pop
cmp
xorb
int3
cmp
inc
add
rolb
loopne
sbb
stc
and
adc
xchg
push
xor
mov
lock
add
lods
movsb
stos
dec
pop
cmp
imul
loopne
jo
cmpsl
int
add
push
mov
out
dec
add
cmp
jno
hlt
int3
stos
filds
call
daa
adc
inc
in
mov
addl
pushf
add
test
stc
les
add
and
xadd
jl
and
jmp
jle
lret
adc
push
mov
mov
test
add
pop
sub
mov
dec
xchg
push
inc
xor
out
test
out
sub
add
xor
jle
add
sarb
and
outsl
outsb
cmp
popf
sub
add
push
into
rorb
add
pop
jp
fsubrs
pop
xorb
int
nop
inc
push
mov
cltd
mov
jge
lods
mov
sbb
mov
push
push
xorb
outsb
lea
add
shl
roll
xchg
or
je
add
mov
sarb
ss
mov
adc
jns
dec
lods
inc
push
stc
add
test
cmp
jbe
cld
xor
mov
pusha
add
mov
add
jl
xchg
cmp
in
add
adcl
add
out
and
mov
rol
clc
test
add
pop
adc
sbb
repz
push
xchg
loope
pop
add
iret
loopne
popa
lret
gs
pop
push
add
and
inc
sti
xor
faddl
in
clc
dec
out
mov
sub
xor
jae
sbb
mov
xchg
repnz
stos
mov
les
mov
mov
adc
add
nop
cmovs
sub
mov
jp
shlb
setl
add
loopne
cmc
pop
sbb
xchg
push
call
lea
add
hlt
je
add
cmp
xlat
jb
add
xchg
aas
ficomps
lods
inc
push
add
stos
inc
cmp
loop
fcomi
xlat
xor
add
adc
inc
xor
std
mov
sbb
add
add
lret
icebp
fs
mov
mov
dec
clc
mov
push
add
movsl
jg
add
notl
cld
push
leave
push
pop
icebp
xchg
outsl
jns
adc
decb
clc
push
cmp
loop
outsl
sub
add
repz
call
outsb
shlb
push
pop
mov
mov
dec
jle
or
arpl
jo
mov
fucomip
pop
popf
add
mov
mov
lret
lods
leave
add
mov
or
test
ret
mov
ldmxcsr
test
xchg
add
pop
mov
pop
xor
push
sar
hlt
sbb
sbb
inc
inc
xchg
mov
mov
fisubrl
int
aas
xor
xor
outsb
or
adc
jmp
ds
mov
push
call
sahf
or
push
popa
xchg
dec
dec
add
and
nop
pop
orl
pop
test
push
mov
rorb
mov
bound
test
push
mov
pop
sub
jne
add
pop
dec
mov
mov
jae
in
stos
jecxz
addr16
jno
and
push
xlat
data16
add
imul
movsl
scas
inc
jmp
xchg
not
sbb
mov
add
pushf
in
bound
ss
add
push
pop
insb
scas
negb
adc
xchg
popa
lret
push
call
dec
popf
daa
jo
add
mov
jae
sub
inc
sub
mov
ret
mov
cmp
jge
fs
xor
bound
sub
les
xchg
outsl
dec
mov
xchg
xchg
nop
push
pop
add
inc
add
andl
push
orb
jbe
test
bnd
sub
lods
dec
pop
add
fs
dec
lds
data16
andb
and
xchg
add
push
or
add
sbb
scas
jle
je
mov
icebp
push
xchg
sbb
cmp
fld
and
mov
add
xchg
in
sub
dec
scas
addr16
jl
leave
inc
lahf
orb
mov
adc
mov
in
jo
loop
cmpsb
in
andl
push
mov
mov
std
in
lahf
leave
out
cmp
jo
inc
movsl
xor
xchg
ds
rclb
cmp
push
stc
add
rcll
push
mov
add
ret
fnstsw
lods
mov
mov
xor
loope
cmp
sbb
insb
addb
pushf
sbb
in
xchg
stos
jbe
adc
fwait
ds
add
inc
repz
cmp
add
and
add
stc
pop
imull
std
outsb
lds
int
cld
inc
push
movsl
lcall
mov
scas
inc
or
xor
add
dec
sbb
or
dec
inc
jge
ljmp
mov
decb
lods
pop
movsl
lret
addl
fdivs
add
sub
adc
arpl
stc
cld
sub
inc
loop
popa
push
outsl
adc
add
cmc
mov
ds
or
or
sub
xor
pop
enter
repz
out
sbb
xchg
lods
dec
clc
sub
and
incl
adc
add
nop
imul
es
loopne
jle
gs
int3
add
sti
jecxz
xor
aas
arpl
mov
dec
and
push
xlat
mov
adc
faddp
pop
cli
sbb
addl
repz
imul
add
nop
ljmp
loope
adc
or
add
mov
cmp
iret
mov
lock
sti
cmp
add
pop
mov
jecxz
cmp
xor
dec
add
js
aas
cmp
inc
and
add
lods
add
xorl
add
push
mov
jns
cwtl
add
icebp
insb
testb
lds
and
jnp
imul
pop
mov
add
cld
mov
orb
insb
jle
add
jg
icebp
insl
sub
mov
cmpsl
adc
or
pop
repz
shlb
scas
xlat
add
aam
mov
sub
jmp
adc
mov
rclb
lcall
outsl
mov
lods
cmp
out
andb
push
ljmp
and
int3
aas
add
push
jo
add
mov
dec
ret
test
loopne
cltd
cli
packssdw
dec
pop
or
mov
push
mov
xchg
dec
subb
stos
cmp
sbb
ret
add
fsub
nop
xchg
add
and
pop
dec
xor
add
fsubrl
xor
mov
cmp
xor
fildl
pop
paddusb
pop
add
je
adc
mov
ja
dec
dec
add
ret
adc
mov
out
push
js
in
jb
jns
push
sub
bound
dec
ret
add
jp
fwait
loope
dec
int3
inc
add
fdivrl
outsb
lret
mov
cmpsl
mov
sub
out
sub
xchg
jo
adc
push
mov
or
rcrb
sbb
pop
cwtl
je
or
jnp
rclb
add
cmpsl
jne
mov
test
add
push
in
push
push
lock
popf
dec
push
pushf
enter
icebp
jae
aam
inc
aaa
or
mov
shlb
ret
mov
cli
adc
lock
jl
add
imul
adc
sub
mov
xor
fisubrl
in
push
xchg
test
or
inc
pop
jns
arpl
push
sbb
hlt
push
add
repnz
xchg
mov
add
add
jl
and
mov
shl
add
and
cmpb
sbb
xchg
mov
cmpl
cmp
xlat
mov
clc
loop
cwtl
jb
xchg
mov
in
test
jp
jl
sbb
jmp
mov
jne
add
daa
adc
enter
jnp
pop
add
outsl
mov
inc
dec
jle
push
push
and
test
push
lahf
xor
xlat
and
or
sbb
ret
faddl
add
sub
cld
or
push
les
js
ja
fistpl
add
rcll
push
xor
cmc
inc
and
bound
addb
mov
cmp
into
rolb
outsb
mov
jns
lahf
sub
ret
fdivl
xchg
pop
xorb
pop
je
add
and
jl
in
test
mov
and
cwtl
orb
inc
and
jg
add
xor
sahf
add
add
roll
cmp
pop
jae
add
jno
rcr
sbb
sti
xor
repnz
pop
adc
fldl
ret
xlat
cmp
in
push
scas
loop
jnp
outsl
lock
xor
jns
jle
dec
add
push
scas
mov
pop
xchg
int3
cmp
add
je
das
sahf
inc
cli
mov
addb
xchg
stos
mov
dec
fsub
lods
xor
push
mov
adc
loop
add
jns
adc
or
loopne
scas
add
gs
stos
mov
push
sti
xchg
lcall
mov
shl
pop
xlat
icebp
movsl
lods
cmp
push
sbb
dec
orb
dec
push
stos
pusha
ret
cmp
aas
inc
cmp
outsl
dec
mov
add
nop
lds
aad
insl
or
ja,pn
cmpl
rcrb
jb
sbbl
ja
cwtl
call
call
mov
add
dec
sub
and
aas
sbb
add
inc
inc
cld
add
ja
cmpsl
fistl
add
dec
add
push
or
mull
cwtl
add
std
out
add
dec
clc
rorl
push
or
xor
add
mov
lock
push
adc
imul
pop
aad
popa
cld
pop
icebp
xor
shlb
mov
cmpsl
wrmsr
adc
out
inc
loopne
pusha
je
xor
xchg
xchg
push
loopne
xchg
rorb
gs
mov
inc
ret
cwtl
mov
mov
adc
fisttpll
std
daa
adc
and
mov
orb
add
mov
into
jecxz
pop
ja
mov
add
push
verw
push
pop
rcrl
xchg
add
fdiv
stos
pop
sub
mov
shll
dec
push
xchg
mov
cmpsb
dec
mov
lock
jmp
das
xor
mov
xchg
jg
loopne
fdivrp
sbb
inc
fiaddl
je
fadds
push
aas
dec
mov
pop
int
inc
add
adc
pop
pop
testl
sub
xor
mov
add
jns
xchg
mov
out
add
test
cli
push
add
les
mov
and
push
pop
jp
int
outsl
jecxz
or
and
pushf
sub
icebp
add
addl
or
cmp
mov
test
loopne
outsl
pusha
ljmp
sarb
test
mov
test
cmp
lret
push
stos
jp
add
jb
ss
popf
jne
add
push
les
add
pop
add
jmp
iret
arpl
add
push
ret
mov
test
imul
dec
gs
sbb
add
push
mov
or
inc
or
cmovs
pushf
mul
leave
fs
repnz
dec
mov
rcrb
imul
fmulp
scas
pop
cmp
add
stc
lock
xchg
ljmp
aaa
popa
add
std
sbb
inc
js
ret
jbe
les
push
xor
movsb
add
jae
mov
mov
int3
ja
add
jo
ljmp
pop
out
sbb
lea
in
jl
repnz
inc
in
add
outsl
call
xchg
ds
xor
inc
fnstcw
push
add
sbb
add
outsb
lahf
pop
mov
and
cmpsb
push
scas
shlb
push
inc
add
jne
loope
inc
mov
push
sub
pop
inc
mov
add
aad
pop
lahf
inc
mov
add
ljmp
sbb
and
subb
fwait
mov
call
pop
outsb
popa
jle
add
and
fcompl
lock
push
shll
add
push
add
cld
sub
cltd
test
jecxz
stos
lea
stos
cmp
and
xchg
or
mov
jno
mov
testl
jg
adc
clc
inc
test
add
sbb
mov
cmp
rcr
pop
cmp
dec
popf
push
fcom
mov
mov
pop
adc
str
xchg
stc
fwait
mov
add
repz
lds
cmc
inc
call
addl
sbb
push
cwtl
ss
out
mov
ds
dec
add
sbb
mov
pusha
clc
add
sbb
ror
imul
xchg
rcrb
push
push
lods
mov
adc
sti
inc
add
mov
add
dec
xlat
xor
jns
add
or
ret
xchg
movsl
lret
cmp
sldt
inc
inc
neg
cli
xor
add
jne
adc
out
nop
add
mov
jo
jmp
sub
pushf
add
mov
adc
push
cmpsl
pop
add
mov
add
xor
xor
jl
add
je
roll
imul
add
add
xor
inc
cmp
lret
xchg
pop
sbb
pop
fstpt
jecxz
jno
adc
ljmp
dec
cwtl
and
std
add
aas
icebp
roll
mov
jmp
js
pop
das
stos
add
mov
mov
xchg
fmul
inc
jmp
addr16
mov
inc
push
cmovns
sbb
out
xor
pusha
es
or
add
repz
dec
xlat
mov
rcr
ljmp
call
pop
jbe
mov
int
xchg
lods
hlt
loope
popa
sti
psubd
ljmp
aam
clc
inc
cld
or
mov
xor
push
negb
mov
xchg
push
add
mov
add
jae
mov
add
add
xchg
fsubs
loope
imul
shrb
xor
jle
fadds
lret
notb
xor
lahf
dec
pop
lds
sti
mov
pop
jne
xchg
inc
sahf
inc
les
xor
add
subb
aam
daa
add
push
mov
xchg
push
or
dec
dec
sbb
es
fadd
adc
xchg
mov
pop
cmpsl
call
aas
adc
in
add
jns
add
bound
add
xlat
mov
filds
jne
add
add
call
adc
xor
mov
bound
jp
sbb
outsb
add
ja
mov
sbb
andl
push
add
push
jmp
jo
je
add
jp
pop
in
xor
jle
sub
and
cwtl
and
outsl
in
stos
in
push
inc
push
rorb
add
xchg
sti
push
jae
inc
or
scas
and
sbb
cmp
sbbb
adc
je
push
add
or
loope
add
fsts
sbb
mov
xchg
add
fimull
mov
adc
or
inc
mov
jge
hlt
add
inc
cld
leave
fildl
inc
ss
add
jns
fiadds
imul
pop
pop
cwtl
inc
int3
add
jecxz
add
dec
aaa
and
cmpb
lock
cmpsl
bound
aam
movsb
jne
cmp
jb
add
sub
pop
jno
xor
inc
cmp
cmp
mov
pop
push
pop
pop
nop
loopne
sub
adc
in
and
jne
inc
inc
push
sbb
test
inc
inc
add
lahf
es
sahf
and
fwait
sarb
cmp
fnstsw
sub
test
xor
testl
js
push
adc
insl
push
mov
rorb
xchg
aad
pop
add
mov
sbb
js
jl
cmc
in
cli
push
xor
and
and
test
faddp
sub
add
rcr
or
push
sub
loopne
lcall
shrl
add
mov
scas
push
cmp
and
shrb
xorb
loopne
hlt
sbb
mov
test
sbb
add
mov
lea
pop
lret
add
out
sub
fmuls
mov
daa
ss
xor
mov
int3
stc
push
lock
xchg
add
sbb
sub
jo
cmc
or
fcmove
sbb
add
cmp
dec
xor
add
sbb
in
add
mov
xchg
add
sub
incl
cmp
imul
pop
adc
loopne
dec
add
imul
sar
lock
pop
in
movsb
pop
add
sub
movb
cmp
sbb
sti
xchg
push
or
mov
fnstenv
jae
movsb
inc
popa
cmp
jb
dec
nop
add
pmullw
cmp
clc
mov
mov
pop
call
jne
dec
shrb
inc
lahf
pusha
pop
xchg
in
jecxz
pop
push
ss
inc
fisttpl
hlt
cmp
jb
push
add
pop
mov
or
push
shll
mov
scas
rcl
fcmove
into
cmp
fldl
xor
lret
std
cmp
leave
pop
imulb
stos
aam
inc
das
push
inc
mov
or
sti
add
inc
push
and
lods
push
mov
add
in
xor
test
mov
dec
mov
icebp
repnz
in
xchg
out
or
in
mov
and
aaa
jnp
ret
das
adc
aam
add
imul
addr16
shrb
ss
sbb
xor
cltd
add
mov
jl
aaa
loopne
sbb
add
cmp
ljmp
outsl
data16
jge
dec
add
push
push
mov
jl
cmp
dec
xchg
add
sub
cmpsb
push
adc
sub
add
out
cmc
or
pop
loopne
push
rcll
dec
dec
sbb
inc
aas
mov
stos
add
xchg
or
and
sarb
push
scas
adc
push
out
and
sbb
add
inc
add
xchg
fwait
pop
addr16
add
jmp
mov
dec
imul
mov
sbb
aaa
xchg
faddl
loop
in
lret
jge,pn
push
sar
out
and
add
outsl
dec
mov
jbe
add
sub
jp
out
addr16
mov
imulb
testl
sub
sarl
pop
jmp
inc
mov
sbb
pusha
adc
mov
jle
and
jge
add
sti
insb
pop
mov
add
clc
jns
stos
pusha
arpl
cmp
mov
ret
cli
lock
push
dec
mov
jae
bound
pop
dec
test
ret
sti
lret
iret
and
dec
nop
jmp
push
hlt
fsubrl
in
xchg
add
push
adc
fiaddl
lock
xor
sub
aaa
inc
adc
arpl
ja
and
leave
push
dec
add
repnz
mov
rcl
ja
xchg
pop
pop
fiadds
push
dec
jae
inc
sbb
or
stos
mov
add
ret
push
add
mov
sbb
divl
dec
dec
push
add
lcall
ds
xlat
andb
adc
pop
shll
inc
xchg
jo
push
pop
push
mov
add
jmp
pop
jno
ficoms
push
cld
xor
adc
in
or
adc
testl
shlb
push
sbb
jmp
and
mov
cmpb
jae
add
push
test
sub
pusha
dec
loope
sbb
imul
mov
dec
mov
pop
in
add
xor
add
add
push
or
orb
sarb
jne
add
daa
cld
xchg
add
add
pop
add
mov
push
add
cmc
sbb
cmp
mov
ret
push
add
imul
lods
mov
add
mov
sbb
mov
out
pop
and
jb
or
or
aas
lret
or
sub
dec
andl
push
adc
pop
cld
fs
sub
push
loop
add
outsl
lea
xor
shrl
into
sti
add
pusha
or
add
cld
cli
dec
add
out
sbb
mov
out
cmp
fsubrs
add
cmp
adcb
sbb
imul
jb
jb
add
inc
loopne
mov
push
add
rorl
sti
lahf
shr
add
pcmpeqd
sub
add
mov
lret
xchg
sbb
sub
aad
repz
xor
fldcw
push
ret
add
dec
rorl
add
aad
aad
mov
pop
mov
add
repz
ja
jecxz,pn
es
movl
jne
mov
xchg
mov
jcxz
out
imul
or
mov
jb
pop
jl
add
in
inc
fdivrp
cmc
rclb
stos
pop
sbb
frstor
add
pop
test
xchg
fwait
inc
testb
mov
shll
xchg
and
cmpsl
ficomps
mov
mov
das
and
add
mov
arpl
adc
cmc
lret
add
jbe
cld
fstpl
jge
add
pop
add
dec
filds
sub
mov
mov
test
sub
lds
rolb
gs
mov
and
mov
sub
add
ljmp
out
clc
mov
pop
push
or
jl
xorb
inc
imul
ljmp
sbb
movsl
ds
add
mov
stos
add
mov
pop
mov
xchg
roll
lods
cmp
test
inc
dec
xor
ja
add
lock
dec
in
movl
xor
or
or
cs
filds
rorb
add
push
jmp
cld
add
inc
push
mov
cmp
scas
pop
sub
mov
adc
sbb
push
in
jns
cmp
bound
lods
out
push
cld
fdivrp
mov
add
mov
add
insl
pusha
aas
jmp
mov
pop
pop
out
jp
adc
scas
add
mov
and
int
jp
stc
addl
mov
sub
movsl
fistpll
add
mov
inc
in
sub
xchg
shr
jnp
jo
insb
add
movzbl
dec
cmp
xor
ljmp
divl
les
outsb
inc
arpl
sub
std
ror
iret
orb
ds
pop
daa
push
cwtl
aas
dec
int
jp,pn
add
stc
push
sbb
enter
and
pushf
mov
das
inc
mov
adc
inc
mulps
adc
xchg
cld
mov
hlt
jge
pop
leave
loop
adc
repnz
ss
add
pushf
rol
push
test
fiadds
push
ret
pop
jne
ret
int3
mov
pop
push
mov
lret
ljmp
lods
add
jge
xchg
test
add
pop
movsl
xchg
movsb
in
shlb
and
fs
add
dec
jo
or
xor
pop
push
lods
movsl
inc
xchg
jl
mov
out
mov
or
push
rolb
test
or
or
in
repz
cmpsb
jnp
sbb
inc
xchg
mov
pop
inc
test
push
jmp
jmp
imul
push
xorb
std
xchg
cmp
add
sub
ficompl
loope
rcrl
pop
push
iret
js
push
push
xchg
fucomp
nop
xor
ja
dec
add
sbb
cwtl
andb
or
or
adc
cmp
jmp
lock
fsubl
mov
out
lcall
rolb
sbb
push
mov
xor
and
clc
or
add
pop
mov
jge
add
in
adcb
add
mov
mov
rcrl
in
imull
clc
add
add
push
out
ss
sub
inc
add
cmp
push
aam
lods
add
mov
insb
int
xor
ljmp
into
cmp
or
add
cmp
pop
xorb
add
cli
jg
cmpsb
out
add
lods
int
xchg
mov
add
cmp
pop
add
fistl
rolb
add
les
loopne
cmp
add
notb
shll
jp
test
lcall
push
xlat
in
testb
add
xchg
add
test
outsl
add
push
cmp
jo
dec
xor
movsb
nop
xor
xchg
repz
or
add
rclb
dec
fdiv
pushf
sub
add
test
pop
dec
imul
fmuls
xchg
stc
icebp
jecxz
into
hlt
je
add
or
jb
mov
add
cwtl
sbb
inc
bound
xchg
or
add
fistps
dec
mov
rolb
add
hlt
mov
inc
jle
push
pop
clc
add
inc
inc
xor
fstpl
add
movb
xor
add
xor
jle
lgs
aam
int3
shrb
testl
bound
or
jp
icebp
mov
sub
cmpsl
or
les
ficoml
add
cld
es
jb
or
xchg
dec
cs
and
mov
add
je
xchg
mov
sbb
xchg
mov
xor
sub
das
ljmp
add
clc
rep
aas
frstor
mov
rclb
or
test
add
cltd
or
int3
jp
push
call
adc
xchg
add
inc
stos
out
pop
lods
lahf
jo
add
sbb
adc
dec
aas
aad
sbb
iret
popl
daa
stc
sahf
add
push
outsb
lock
push
cmpsl
cmp
pop
cmp
loopne
out
in
lock
mov
bound
or
mov
fmull
add
ja
mov
imul
lahf
add
xchg
jp
xchg
in
add
jns
adc
mov
mov
pop
sbb
dec
push
or
mov
ss
mov
pop
add
cltd
mov
imul
fisttps
mov
add
out
or
or
sbb
in
insl
pop
xorb
or
dec
in
adc
or
ret
xor
cli
subb
pop
aad
mov
adc
jp
jae
imul
pop
mov
fdivrl
outsl
iret
mov
cmpsl
push
shr
scas
cs
add
ret
das
rcrb
add
xchg
jns
int3
fisubl
xor
orb
out
lods
arpl
cmp
enter
leave
inc
mov
add
rolb
push
test
ficoms
pop
shld
xorl
cmc
xor
pop
push
sub
sbb
test
jbe
pop
bnd
movsb
ja
pushf
add
push
inc
and
adc
scas
sbb
fildll
shlb
in
add
jmp
ret
jl
idivb
xchg
xor
daa
or
push
add
fisubl
js
inc
adc
add
push
mov
xorl
adc
add
pop
dec
into
jno,pt
add
sub
mov
add
push
jle
pop
push
cmp
push
pop
pop
cmp
mov
or
adc
sbb
nop
lcall
test
mov
mov
cmp
adc
add
adc
filds
fcompl
or
mov
das
in
lcall
punpcklbw
ffreep
icebp
int
jg
imul
add
dec
xor
mov
inc
jmp
cmp
add
pushf
cltd
sbb
cmpb
lret
shl
sub
add
shrb
ss
hlt
cmpsb
add
mov
or
stc
ja
xchg
add
aas
pop
pop
outsl
dec
sub
dec
add
popa
outsb
cmp
fisttpll
test
mov
out
cli
mov
xor
mov
lods
mov
test
aaa
add
mov
clc
imul
pop
iret
dec
pop
jmp
push
loopne
into
roll
gs
sbb
je
in
in
lret
mov
sub
jnp
xlat
sub
and
cmp
lds
xchg
mov
inc
repz
mov
les
sbb
cli
lcall
adcl
add
sbb
retw
jmp
hlt
adc
add
mov
repnz
or
lea
mov
mov
add
sub
jb
add
sbb
adc
sbb
cmpsb
and
imul
mov
xchg
add
mov
icebp
xchg
mov
add
xchg
xor
leave
in
div
movsb
fst
adc
add
mov
mov
jecxz
arpl
aam
rolb
mov
fwait
orb
pop
adc
cld
cmp
sub
cmpsl
or
cmp
add
shlb
ret
fcompl
pop
aam
data16
sub
daa
or
push
jg
mov
loop
adc
mov
mov
mov
popa
push
xlat
push
cmp
cmp
ja
pop
inc
jg
cs
add
dec
cli
push
push
add
pop
mov
bound
nop
pop
xchg
cltd
inc
je
mov
inc
dec
xchg
push
mov
add
cmpsb
stos
loopne
add
adc
pop
test
add
push
cli
adc
test
add
dec
mov
aad
mov
ss
gs
add
cmpsb
or
xchg
xor
js
cmp
sbb
add
das
imul
or
mov
add
std
cmp
sub
cs
pop
sahf
sarl
jmp
add
dec
xchg
leave
sbb
in
add
mov
iret
mov
sahf
mov
jne
add
dec
xor
xor
test
int3
add
push
or
mov
lock
stc
andl
lcall
xchg
mov
dec
mov
dec
in
shrl
sarl
pop
add
aam
cmp
mov
cmc
out
add
cmp
lea
mov
int3
and
xchg
ret
loop
add
js
jp
fwait
push
add
mov
mov
sub
sub
loope
rolb
xchg
test
pop
adc
inc
mov
or
push
sub
sbb
arpl
call
hlt
adc
mov
xorb
pop
add
and
mov
lds
inc
fdivp
dec
add
cmp
int3
nop
leave
xchg
add
jo
mov
sbb
xlat
sbb
cmpb
mov
sti
push
add
fdiv
inc
aaa
inc
shll
mov
pop
adc
rolb
cmp
xor
int3
in
inc
dec
mov
std
add
cmp
add
add
rol
cmpsb
addl
call
add
xchg
enter
pop
add
movsl
or
xchg
popa
or
add
inc
in
bound
std
add
xchg
aaa
pop
jl
xor
js
pop
and
stos
add
arpl
iret
sub
add
inc
gs
call
jmp
ja
nop
cli
hlt
add
push
loopne
sub
jle
fdivl
sub
mov
pop
jb
and
pop
out
add
out
fiadds
mov
add
aam
xchg
loope
xor
xor
sarb
xlat
mov
add
add
sbb
lret
imul
ror
fadds
sti
scas
imul
cmp
mov
cmp
ss
and
icebp
mov
add
fdivrp
loopne,pn
loop
add
outsl
sub
aaa
sub
addb
into
movsb
repnz
pop
or
das
sub
and
xchg
idiv
in
sbb
jmp
inc
xor
lods
fwait
xlat
fcmovb
lahf
jmp
add
call
adc
add
push
adc
add
icebp
loopne
jbe
xchg
sbb
cmp
or
inc
add
lahf
mov
sub
xchg
imul
jp
add
and
je
xchg
popf
xlat
add
les
inc
add
or
in
cmp
out
subb
cmpsb
inc
aad
add
cmp
leave
mov
rol
pushf
orl
add
mov
jno
daa
add
pop
xor
lcall
je
add
dec
repz
jb
imul
inc
das
inc
insl
add
mov
pop
dec
lahf
stos
push
fistl
mov
adcl
mov
aad
lret
ljmp
loopne
add
fs
roll
mov
push
cmp
jp
lock
fidivl
mov
xchg
push
cld
pop
stos
dec
icebp
dec
add
mov
or
add
dec
sar
test
mov
add
test
imul
aam
sub
stos
mov
sar
xchg
push
pop
mov
cmp
mov
jmp
ret
mov
or
adc
outsb
test
ljmp
add
imul
add
lds
mov
jg
loope
push
rcrb
shl
mov
cmpsb
add
and
jle
jp
cmp
xchg
out
addl
pop
mov
shll
rcrl
roll
mul
outsl
xchg
inc
daa
push
xor
add
and
icebp
jae
xor
add
mov
adcb
roll
repnz
push
rolb
and
or
sub
inc
sbb
add
mov
ja
and
add
push
hlt
mov
mov
jno
xchg
sbb
in
add
jns
cmpsb
hlt
bound
jne
out
cltd
add
mov
cmp
cmp
push
cmp
mov
movsb
ud1
imul
ss
add
add
subl
cmp
xchg
std
popf
mov
pop
xchg
fisubrs
pusha
xorl
idivb
jae
push
jnp
mov
insb
push
stos
andl
cmp
flds
sub
inc
push
or
fwait
jnp
pop
xchg
xor
push
push
adc
jae
addl
pop
sub
mov
popf
adc
mov
insl
jns
scas
jp
outsl
shrl
out
sbb
add
cmp
or
xor
inc
push
add
cmp
arpl
or
add
rolb
adc
out
mov
add
lds
lcall
int3
jnp
adc
add
xchg
or
fcmovnb
aas
sbb
pushf
aad
jge
cmpl
add
movl
dec
scas
mov
out
add
enter
mov
cltd
dec
daa
stos
cmp
hlt
add
or
fbld
cwtl
in
push
xor
and
add
int
ss
test
cmpsb
add
jbe
inc
xor
adc
flds
test
fs
cmc
setg
jo
and
inc
movsl
out
loopne
ds
push
lods
cmp
pop
aas
sub
or
stos
add
xchg
inc
add
das
sbb
lea
xor
add
sbb
arpl
or
imul
pop
adc
mov
fwait
sub
sub
fsubr
aas
ja
cmp
arpl
icebp
push
mov
push
int
pop
incl
mov
test
mov
pop
cltd
orl
sub
adc
mov
mov
pop
sahf
xor
sbb
jle
add
stos
fmul
incl
pop
push
imull
pop
sub
cmp
mov
inc
add
fs
aaa
mov
jl
fisubrs
outsl
or
les
xor
cmp
add
jp
arpl
pop
cmp
pop
inc
les
adc
cli
sbb
add
out
pop
mov
cwtl
lods
adc
inc
std
or
add
call
clc
adc
sbb
sub
loopne
xor
mov
sub
push
in
mov
les
mov
out
adc
sbb
imul
out
inc
ja
adc
sbb
jmp
inc
sar
xchg
dec
dec
push
push
nop
ret
adc
sbb
cs
enter
cmp
pushf
pop
push
adc
jb
pop
shrb
mov
call
inc
cmp
lret
popf
jge
jecxz
push
add
je
ja
dec
push
bswap
jb
andl
jne
jae
add
in
neg
add
in
push
in
fistpl
mov
addl
pushf
subb
or
mov
divb
add
and
cmp
mov
mov
mov
in
xchg
mov
bound
dec
mov
mov
add
mov
cmpsl
or
add
insl
pushf
xorb
fwait
add
ret
cli
outsb
in
aam
xchg
add
sub
push
cmp
je
add
mov
rsqrtps
mov
mov
add
mov
popf
jl
jb
push
loop
pusha
clc
movsb
adc
fldl
pushf
xor
push
mov
push
mov
test
inc
test
cltd
add
cmp
add
fxch
xchg
adc
out
in
add
stos
mov
ficomps
add
rorl
pop
inc
sbb
daa
xchg
mov
test
decb
ret
dec
sbb
das
mov
xor
cli
push
or
push
add
lcall
js
add
int
add
push
jne
iret
fwait
inc
stc
add
or
mov
std
dec
add
adc
lcall
mov
add
hlt
xchg
addr16
xchg
push
jns
xchg
bound
scas
xchg
test
mov
sbb
add
addr16
dec
add
mov
cltd
mov
es
lods
jp
imul
or
mov
out
xchg
pusha
cmpl
cmc
stos
jmp
bound
add
fistpll
jns
cld
in
pop
dec
jle
nop
add
jnp
dec
stos
insb
sar
and
imul
stos
lahf
aaa
push
push
cs
ret
shl
pop
popf
xchg
sbb
in
add
jae
repz
ja
add
rol
dec
xor
adc
xor
push
mov
pop
scas
add
push
ret
imul
out
xchg
jle
dec
fidivrl
arpl
pop
push
push
add
mov
cld
arpl
cmp
hlt
test
movsl
mov
repnz
xchg
add
lds
mov
cmp
and
int3
data16
aas
and
orb
xchg
push
out
aaa
mov
jecxz
in
jge
inc
dec
ret
into
jnp
xchg
jbe
add
movsb
sbb
iret
cmp
mov
mov
jo
xchg
ficompl
xor
add
lds
loopne
adc
ret
cmp
mov
mov
movb
in
mov
cmpsb
xchg
sbb
inc
ret
push
fistpl
out
cld
cmp
rclb
inc
dec
lahf
loopne
add
and
adc
pusha
ds
lods
xor
mov
lods
testl
inc
cli
pusha
ja
inc
cltd
add
pop
mov
arpl
jmp
insl
ljmp
sbb
out
fwait
adc
xor
add
inc
ss
adc
outsb
push
fildl
faddl
or
call
lcall
loopne
sub
push
and
mov
cmp
push
sarb
mov
lret
fldenvs
loopne
mov
iret
cmpb
aam
sahf
inc
mov
sbb
pop
adc
mov
add
mov
lret
xchg
imull
out
fadds
icebp
dec
xchg
cmp
push
or
jns
sbb
stc
pushf
les
outsl
jle
push
lahf
xor
cmc
mov
ror
push
add
sbbb
dec
enter
out
inc
cli
pop
or
movsl
mov
pushf
add
enter
push
sbb
xchg
adc
rcrl
mov
dec
lret
mov
add
gs
mov
incb
cmpb
in
add
push
push
mov
add
jae
jmp
icebp
cli
lret
adc
outsl
repz
cltd
fnstcw
add
cmp
or
and
nop
popf
push
add
popl
ds
jnp
aas
adc
push
ss
sbb
filds
dec
inc
cvtdq2ps
mov
mov
pusha
in
dec
loope
add
jb
into
jmp
adc
add
gs
inc
jle
adc
fildl
hlt
sbb
add
jne
or
mov
add
add
movsl
cmpb
das
ds
xchg
mov
addb
out
lock
sub
dec
mov
mov
sub
mov
cmpsl
pop
cwtl
repz
movb
mov
es
push
add
mov
inc
aam
scas
cmp
sub
inc
push
push
pop
lock
xor
xor
dec
and
mov
xchg
dec
push
add
leave
ret
popa
pushf
mov
add
xchg
inc
call
filds
lds
ret
and
push
dec
cld
insl
add
ja
and
cltd
jmp
enter
fs
push
xor
das
add
inc
pop
add
loop
negl
sbb
add
xchg
lea
in
dec
call
shl
mov
xor
jnp
or
mov
xor
jns
dec
gs
jo
add
push
fwait
je
bound
or
in
pop
add
mov
add
xchg
pop
iret
mov
add
stos
jge
jne
in
hlt
add
loopne
push
jns
lret
adc
bound
fucomi
push
fdivrl
add
lcall
add
or
inc
mov
mov
movsl
dec
jp
sbb
repnz
push
lods
or
add
out
push
roll
xchg
pop
push
jmp
xor
xlat
add
mov
or
in
mov
mov
stos
insb
shlb
out
cmc
repnz
jle
push
mov
mov
dec
add
imul
sub
test
mov
add
jnp
pop
add
lds
or
xchg
pusha
scas
inc
sub
imul
negb
jle
add
jae
scas
inc
das
inc
and
movsl
or
and
adcl
js
add
sbb
xor
add
jb
ret
shl
fsubp
fcompl
cmp
andb
jne
dec
jb
add
mov
incl
sbb
ljmp
push
stos
aam
sbb
mov
mov
and
int
scas
outsl
enter
orb
push
jne
dec
dec
add
dec
dec
ret
fsubr
add
push
mov
jg
enter
in
jbe
xchg
add
push
fldl
jns
add
test
or
push
jns
jp
and
xor
test
std
sti
dec
add
outsb
js
sub
adc
pop
push
adc
js
xchg
aas
pop
xlat
add
lods
sub
mov
sbb
add
mov
jecxz
and
xchg
adc
outsb
jns
stos
sub
mov
xor
mov
sub
out
sub
gs
int
push
add
ret
in
add
imul
mov
fwait
loop
mov
jg
fldcw
add
jmp
mov
jecxz
sub
jl
xchg
add
aad
in
mov
sub
add
lods
stc
xor
ss
jae
add
fidivs
vrcpss
jnp
loop
test
outsl
movl
jge
cmc
int3
sub
mov
inc
shrb
cmp
add
add
cli
jle
int3
out
rclb
add
gs
add
xchg
xchg
stc
cmp
pop
adc
sti
xchg
add
loopne
add
gs
push
lcall
mov
xchg
pusha
sub
bswap
out
inc
jbe
cmp
sbb
sbb
add
lods
or
add
lods
inc
dec
add
xor
nop
js
pusha
aad
push
pop
mov
jmp
idiv
mov
adc
adcl
out
lea
sbb
sbb
mov
into
sub
je
in
in
jle
enter
and
mov
jecxz
add
pop
in
cmp
mov
and
lea
mov
cmp
push
sti
fcompl
sub
cmpsl
dec
jno
push
mov
and
arpl
mov
cmc
mov
das
pop
sarl
dec
mov
aas
sub
add
in
ffreep
or
shll
add
jmp
scas
cmpsl
push
xchg
add
shll
mulb
int3
aam
ret
sbb
in
popl
rolb
jae
fistpl
punpcklbw
mov
and
adc
fmuls
dec
int
popa
mov
loopne
or
cmc
xchg
pop
xchg
clc
sbb
ds
fisttpll
addl
cltd
and
add
mov
pop
movnti
push
test
pop
xchg
add
test
out
stos
sbb
pop
pushl
leave
add
fcmovb
sub
cs
test
std
xchg
dec
dec
mov
filds
jb
dec
xor
int
and
push
or
adc
in
pop
jg
sbb
add
push
mov
push
fimull
mov
sub
addr16
adc
mov
mov
out
xor
xchg
add
imul
das
aam
bound
dec
cli
mov
pop
bnd
popa
icebp
push
cmpb
add
mov
sub
idivb
cwtl
and
cmp
add
adc
add
pop
mov
xchg
adcb
lret
add
in
int
jle
mov
jnp
xlat
js
add
lods
and
test
add
enter
dec
daa
add
push
lahf
pusha
add
inc
lock
popa
ret
adc
mov
out
mov
inc
aaa
add
imul
push
sbb
out
and
fisubl
xor
scas
mov
push
or
or
mov
inc
lock
xchg
and
add
popa
and
rolb
pop
lds
cltd
cmp
sbb
int3
cmp
mov
add
cmp
sbb
sbb
push
pop
mov
jne
jbe
sbbl
xchg
cmp
std
mov
shrb
jo
inc
jecxz
mov
add
push
pop
loope
dec
je
add
jno
adc
push
cmp
test
enter
in
pop
das
xor
cmpsb
lret
rolb
cmp
push
push
fisttpll
add
and
imul
sbb
sub
jl
add
sti
mov
push
add
mov
add
daa
xor
mov
adc
sbb
test
add
repnz
mov
adc
fdivrl
mov
frstor
nop
push
loop
cs
std
sub
mov
add
cmpl
jp
add
aam
and
lret
xor
iret
test
dec
gs
sahf
mov
outsl
jmp
shrl
add
fdivrs
ja
pop
mov
jmp
in
ss
clc
or
and
stc
add
stos
loop
cmpsl
loopne
push
cmpsb
dec
sahf
xor
mov
xor
repnz
mov
mov
loopne
mov
xchg
mov
cli
mov
enter
mov
add
into
jmp
ss
js
test
mov
repnz
cmp
loopne
loope
add
stc
sti
add
cwtl
in
cld
inc
movsb
mov
sub
cltd
xchg
xlat
push
addr16
dec
sbb
xchg
cmpb
pop
jns
repnz
cld
mov
add
push
xchg
inc
push
nop
add
inc
aad
cs
sbb
jecxz
in
and
sub
fdivs
add
call
lea
cmpsb
adc
mov
add
jb
add
dec
aas
push
test
pop
js
mov
jmp
fildl
es
testl
in
mov
cld
fildl
popa
cwtl
mov
sar
je
add
testb
shll
cmc
add
mov
das
ds
negb
cld
ret
mov
xor
cmp
icebp
stos
jns
arpl
add
mov
mov
pop
lcall
push
jg
xchg
negl
pop
cs
push
mov
add
cli
add
mov
mov
add
ljmp
jns
jp
add
adc
and
mov
or
test
sbb
pop
add
jg
mov
add
push
ljmp
xor
sbbb
pop
pop
roll
cmp
and
sbbl
dec
mov
or
mov
sbb
xchg
or
test
sub
adc
cltd
add
push
pop
xor
fwait
add
sub
cld
mov
jne
mov
ja
sbb
repnz
inc
sbb
xor
push
sbb
into
std
jns
and
pusha
push
roll
sub
dec
incl
dec
mov
pop
int3
mov
mov
sbb
jp
nop
mov
add
insl
sub
out
sub
subl
adc
add
adcb
add
lods
pusha
in
jmp
cmpsb
pop
inc
cld
jle
lahf
ret
mov
arpl
mov
push
stos
clc
es
add
push
push
mov
popf
sti
add
push
bound
loopne
inc
mov
jns
pop
add
pop
mov
sbb
add
shrl
mov
fiaddl
scas
push
mov
test
sbb
xor
xchg
sub
pop
fcmovu
mov
inc
repnz
or
inc
sub
outsb
arpl
sub
add
or
mov
or
add
iret
lcall
pop
mov
mov
add
jnp
je
outsl
xchg
jmp
push
jge
in
jbe
jp
loopne
jl
movsb
mov
xchg
flds
and
loop
sub
movsb
mov
xor
cmp
shl
jecxz
daa
jl
add
gs
push
cmp
mov
mov
inc
xorb
adc
or
arpl
test
push
mov
lahf
pop
cmp
nop
mov
mov
ds
je
push
int3
jmp
mov
loopne
mov
add
mov
outsb
js
dec
add
and
lahf
jne
add
or
pusha
or
lods
or
rcl
int3
dec
adc
outsb
aas
aaa
ret
sub
add
fmull
mov
mov
pop
in
push
add
shll
int
test
clc
push
leave
xchg
and
mov
pop
out
cmp
and
rcrb
jg
std
jp
js
add
rol
inc
sahf
das
or
add
ljmp
rorl
add
lret
in
ja
cmpsb
or
daa
fdivrs
add
rcrl
add
jl
call
add
rcl
loop
cld
out
add
shlb
cmc
or
or
adc
or
pop
mov
mov
xor
cli
in
sbb
add
push
mov
add
lret
addb
sub
add
ds
imul
movsl
and
in
stos
or
add
jmp
mov
pop
mov
stc
inc
mov
sub
fmulp
cmp
adc
add
cmc
add
sub
jmp
mov
mov
add
xor
dec
leave
pop
mov
nop
cs
aad
addr16
out
mov
rclb
add
das
cmp
loop
in
jbe
call
jecxz
push
jae
jp
in
pop
push
je
and
jb
add
xchg
aas
icebp
stc
cmpsb
inc
mov
lods
cld
adc
arpl
fistl
push
popa
dec
sbb
es
mov
or
lret
cwtl
jno
aam
pop
sbb
stc
shr
jmp
fidivrl
mov
mov
sbb
push
clc
xor
mov
test
loopne
mov
enter
mov
cmpsl
cmp
pop
inc
add
insl
cmp
add
ffree
ret
ss
jmp
sub
lahf
cld
sbb
fcompl
dec
jle
mov
and
aam
jne
jo
add
and
popa
loope
jge
add
xchg
xchg
xor
clc
add
dec
outsl
push
add
aas
test
cwtl
mov
addb
xor
push
push
pop
lds
sahf
push
insl
out
jo
cmp
pop
in
pop
shll
sbb
push
movsb
xchg
mov
decb
dec
add
jmp
mov
xor
testl
xor
lcall
cmpsb
imul
dec
add
je
ss
or
ret
aam
imul
inc
jmp
xor
pop
mov
je
test
mov
mov
popa
sti
sbb
jg
mov
xchg
jns
add
xchg
pop
insl
mov
adc
mov
xlat
add
add
or
xor
add
pop
cmp
mov
jl
scas
add
xor
js
mov
pop
dec
in
and
jle
jp
add
outsb
inc
insb
sbb
sub
imul
push
inc
mov
mov
add
pop
sub
jae
xchg
bound
push
cmp
ret
sarb
iret
js
xchg
add
pop
push
shrb
cmpsb
add
sbb
cs
decl
xchg
fimull
inc
add
stos
clc
xchg
xlat
punpckhdq
mov
je
push
hlt
add
xor
repnz
mov
pusha
fiaddl
xor
add
fmulp
add
in
and
movb
mov
scas
aaa
xchg
add
add
jge
add
outsl
jbe
jg
push
xchg
add
int
imul
and
loopnew
or
xchg
add
xor
push
ja
add
xlat
dec
jl
add
loopne
jmp
mov
daa
add
mov
in
sub
cmp
sub
push
les
pop
pusha
or
add
stos
mov
add
dec
or
movsl
adc
add
data16
ret
enter
into
dec
add
in
mov
add
imulb
in
pop
dec
add
cmc
push
test
test
push
repz
sub
bound
mov
je
shlb
aam
add
call
adc
fdivrl
ftst
cmp
insb
cmp
cmp
fsubrl
push
int3
sbb
add
mov
xchg
test
mov
push
push
subb
mov
test
setle
add
sbb
outsb
mov
add
rcll
lret
rcl
mull
sbb
fnstsw
cmp
push
xor
xor
rolb
stc
js
xor
inc
xchg
jge
xchg
xor
iret
push
into
testb
js
call
pushf
repz
pop
sub
jecxz
daa
add
add
add
aaa
add
fcoml
add
movsb
imul
cmc
int3
loopne
add
frstor
xchg
insb
fcompl
into
pop
jbe
and
push
mov
pop
jb
in
dec
add
cs
xchg
push
adc
add
sarb
push
pop
inc
repz
inc
roll
sub
or
add
and
add
ret
sbb
mov
xchg
add
ss
pop
call
xor
xor
lods
add
jecxz
pop
dec
je
add
jno
mov
add
xor
nop
dec
addr16
roll
jmp
nop
pop
sbb
push
push
dec
loopne
push
sbb
pop
and
jne
loopne
cwtl
sub
sar
ret
test
push
add
ds
and
adc
jl
sbb
addr16
pop
das
cld
sub
push
lock
fs
movsb
stos
arpl
lret
or
cld
pusha
add
jp
pop
jae
mov
cmpsl
subl
shlb
push
adc
ret
lds
jno
aam
adcb
je
mov
rolb
adc
mov
and
testl
push
lods
iret
into
pop
popa
clc
and
push
mov
xchg
adc
lret
pop
ja
pop
into
pop
add
sub
rcrb
test
jbe
add
inc
add
xor
push
mov
sti
xor
out
sar
mov
add
and
mov
repz
stos
insb
push
aas
test
andps
rol
int
decl
arpl
mov
or
iret
ret
push
cmp
add
lods
aad
push
movsb
add
fwait
xor
pop
xchg
inc
mov
cmp
xlat
add
icebp
aaa
mov
mov
loop
xchg
repnz
or
jns,pn
add
fisubs
ds
roll
mov
cmpsb
jne
add
movsl
mov
push
push
mov
scas
sub
push
jp
addl
arpl
push
or
jns
push
out
mov
mov
cmpb
testb
subl
push
pop
in
fs
jle
outsb
adc
loopne
add
out
and
lcall
push
test
mov
popf
dec
xchg
adcb
add
sub
inc
mov
mov
add
ret
sub
xlat
add
mov
add
cmp
add
das
lds
fidivrl
adc
sub
shrb
cli
popa
add
cs
dec
add
fcoms
and
jae
leave
clc
sub
add
add
rolb
int3
vpsrlw
out
insb
add
fs
test
push
sub
jge
mov
push
push
adcb
add
cmc
pop
movsb
iret
xor
cmp
sub
sti
scas
jmp
stos
rorl
push
mov
add
add
add
je
inc
mov
cmp
test
daa
mov
out
in
adc
lcall
clc
mov
push
shlb
push
push
add
and
ljmp
sarb
mov
hlt
ret
add
in
push
add
imul
fcomps
add
in
mov
add
sub
dec
sbb
mov
orb
lldt
rorb
add
outsb
add
add
lret
fsubl
jmp
jbe
int3
jo
pop
jmp
nop
sbb
int
xchg
pop
push
iret
sbb
and
shl
dec
mov
int
mov
add
or
test
lods
inc
sahf
jne
shll
mov
add
cs
insb
pop
mull
addr16
test
mov
pop
jp
adc
sbb
rcrb
mov
ljmp
adc
stos
add
leave
add
or
mov
cmp
jb
nop
xor
inc
popf
cli
dec
jo
cltd
out
mov
mov
mov
jl
push
ljmp
adc
and
aad
pop
adc
test
jecxz
add
loopne
inc
jne
mov
xor
dec
sti
shlb
loop
mov
cwtl
dec
add
xlat
and
lea
sbb
sbb
xchg
leave
mov
loop
pop
roll
mov
addl
xchg
or
cmp
and
jle
jge
lss
pushf
and
stos
adc
mov
fwait
pop
cltd
sbb
mov
xor
add
mov
jns
add
sub
push
push
aas
comiss
cmp
sub
repnz
gs
daa
push
mov
push
mov
out
jl
imul
das
lods
rorl
adc
cmp
in
pop
out
cmp
lock
in
mov
add
sbb
js
es
mov
icebp
das
lock
mov
add
inc
inc
insl
push
incb
fdivs
add
push
ds
aam
or
pop
sub
or
iret
mov
sbb
aas
test
mov
clc
add
or
jb
aam
mov
xchg
push
jmp
stc
push
idiv
fldl
sbb
pop
add
sahf
cltd
cld
cli
jmp
add
ss
in
add
jle
xchg
sub
out
out
pusha
stos
dec
fcomps
rcll
dec
insl
pop
sbb
mov
test
ljmp
xchg
lahf
mov
xor
in
decb
xor
int
andb
push
push
aad
loopne
add
movsb
add
inc
xor
or
lret
cmp
lcall
test
pop
jbe
add
cli
add
das
in
repnz
jns
pop
jb
and
cmp
hlt
add
mov
dec
dec
out
add
mov
inc
jp
or
add
fcomi
or
fstl
out
pop
cmc
add
mov
les
jmp
push
cs
outsb
pusha
mov
jae
sub
inc
push
add
adc
inc
and
cmc
xor
stos
push
add
push
les
movsb
test
jo
insb
push
stos
cmp
add
xor
shll
nop
add
mov
inc
sbb
ss
add
push
sub
push
pop
cmp
mov
imul
in
scas
xchg
mov
dec
jbe
shlb
add
xor
pop
add
mov
sbb
and
push
into
xchg
add
stc
mov
add
add
cmp
call
mov
or
push
jne
adc
sbb
push
cmp
mov
sub
movsb
push
push
xor
push
out
mov
scas
lret
jo,pt
in
sub
iret
ljmp
dec
xor
jp
add
aam
push
push
cmp
add
or
stos
sbb
in
stc
fimull
cltd
xchg
enter
pop
sub
push
test
subb
push
lahf
lcall
add
lods
add
mov
sub
or
jb
sbb
and
xchg
js
cmp
sbb
lcall
xor
and
mov
shrb
shrb
pop
pushf
adc
add
pop
sub
fistps
fmull
incb
lcall
insl
push
sub
jge
jo
rolb
sub
shl
mov
add
cmp
inc
add
pusha
scas
sub
sahf
sbb
sbbl
mov
lock
roll
mov
clc
add
push
sbb
cwtl
pop
add
ficoms
imul
add
out
aaa
loop
xor
inc
add
insb
cmpb
into
mov
bound
icebp
adc
jge
push
pop
out
imul
data16
daa
add
pusha
pushf
lods
adc
pop
scas
add
test
adcl
lock
push
stos
push
loopne
and
mov
push
dec
xchg
sti
and
pop
add
test
mov
sub
repz
fsts
call
enter
add
lcall
add
lds
cmp
dec
out
notb
aad
imul
mov
aas
loop
fstps
jo
xor
test
pop
dec
mov
imul
inc
push
lea
in
jg
in
add
jecxz
sub
je
push
repnz
cmp
and
aas
into
add
inc
pop
insb
cmc
add
loope
pop
popa
pop
xchg
add
loop
jnp
fidivrs
movl
mov
mov
add
adc
or
add
xor
xor
leave
add
mov
bound
mov
jmp
add
out
fs
mov
cmc
icebp
push
std
jne
ljmp
cmp
test
mov
jecxz
pop
sbb
dec
mov
add
bound
in
stos
push
dec
lret
sub
and
add
mov
out
arpl
popa
es
add
xchg
xchg
push
cmp
pop
add
idivb
mov
add
mov
push
push
add
adc
cltd
sub
cmp
add
cmc
pop
in
into
shrl
lret
pop
adc
xchg
outsl
cwtl
cmp
add
addl
jnp
add
outsb
or
jne
mov
andb
push
ljmp
lds
and
dec
push
inc
push
negl
sbb
mov
mov
adcl
add
jmp
jns
add
repz
xchg
push
ret
inc
lahf
pusha
add
sbb
mov
dec
in
add
jp
inc
sbb
dec
hlt
or
add
sbb
andl
mov
jg
xchg
xchg
daa
in
fists
pop
xchg
cwtl
rol
adc
add
or
jnp
pop
insb
pop
pop
loope
mov
out
les
call
inc
mov
popf
xchg
mov
push
outsb
pop
lcall
fsubl
add
scas
xchg
into
insb
lods
sub
xchg
pusha
add
sub
jg
push
scas
xchg
inc
xchg
add
xchg
and
pop
movsl
inc
gs
sub
push
add
add
inc
xor
lret
arpl
mov
loop
leave
ja
push
addr16
push
mov
adc
add
fidivs
jp
mov
rcll
mov
stc
aaa
jae
cmp
jl
push
jge
xchg
dec
push
test
add
cmp
aam
dec
scas
test
mov
push
push
mov
out
into
jl
sub
jno
repnz
andb
add
inc
enter
in
loopne
add
sbb
push
inc
stos
adc
sub
pop
cld
fimull
lahf
mov
xchg
jle
add
add
add
or
cmpsl
scas
push
or
pop
add
mov
pop
add
jbe
notb
adc
aas
mov
out
add
inc
int
loopne
inc
pop
lock
outsb
lret
mov
sub
xor
inc
imul
xor
fs
jmp
lods
xchg
test
mov
add
push
and
and
adcl
mov
bound
arpl
add
in
and
push
sbb
scas
sbb
shll
cmp
xchg
pop
mov
mov
push
inc
sahf
add
fildll
add
mov
or
pop
loop
pop
dec
add
enter
and
cli
or
lahf
sub
ret
ja
jo
enter
cli
mov
mov
add
mov
add
jl
out
lahf
cmpsl
adc
pop
jge
imul
cmp
loopne
call
pushf
add
ja
pop
sti
cmpb
add
lret
mov
jle
dec
test
add
push
cmp
sub
out
repz
in
inc
pop
test
jmp
addr16
add
cs
inc
or
hlt
incl
add
mov
std
repnz
call
mov
push
rol
mov
ss
push
testl
dec
and
xlat
aas
insl
mov
dec
out
das
sub
add
lcall
leave
pusha
xor
andl
mov
stos
cwtl
pop
add
std
in
imul
shrl
mov
and
mov
add
mov
cltd
mov
and
mov
and
sub
push
adc
add
loope
pop
icebp
lea
mov
add
dec
mov
aam
adc
ficomps
ds
jb
and
pop
inc
movsb
sbb
gs
add
leave
ljmp
and
pusha
add
and
into
add
popa
cmp
jae
add
add
pop
fst
add
pop
mov
add
test
ret
mov
push
dec
mov
jge
cmpsl
paddw
xor
push
xor
popa
xchg
mov
jns
adc
jl
sbb
sbb
push
add
mov
cmpsl
or
xor
paddq
and
pusha
xor
jae
jge
cmp
inc
add
lea
fs
push
and
inc
mov
dec
add
and
ja
call
lea
mov
out
adc
xchg
ffreep
add
lods
mov
popf
bound
inc
loope
out
jo
shll
jne
out
loopne
add
aas
mov
mov
adc
jp
lret
addr16
inc
inc
or
sbbb
sbbb
sahf
mov
pop
jmp
cli
iret
ret
fildl
ja
hlt
jge
in
jg
pop
jle
inc
sbb
insb
clc
dec
pop
fldenv
and
or
push
add
sarb
sbb
xor
push
cmp
out
sbb
ret
add
adc
mov
push
push
in
ds
scas
cmc
mov
clc
or
dec
sbb
in
xchg
xlat
ja
add
insb
inc
test
or
imul
adc
cs
mov
insl
hlt
add
add
pop
subl
mov
das
bound
add
ljmp
lock
add
insl
aas
or
xchg
sarb
mov
imul
push
movsb
jo
mov
xlat
and
scas
pop
mov
shrb
xor
push
stos
pushfw
dec
test
jl
enter
leave
inc
pusha
cmp
add
ror
pop
or
add
or
lahf
mov
inc
add
pop
imul
stos
mov
iret
and
andb
inc
shld
rolb
ds
add
aaa
jmp
sub
repz
dec
dec
or
hlt
sub
repnz
add
pusha
js
mov
adc
mov
stos
add
mov
adc
xchg
out
push
lods
cmpsb
adc
outsb
cs
sub
and
aam
fs
lcall
in
rolb
push
xchg
add
push
fadd
dec
out
push
fs
and
mov
cmp
ja
jno
fnstcw
xchg
les
je
add
aad
add
shll
jb
mull
add
cmp
add
adc
pop
mov
add
xlat
stc
push
push
loop
nop
mov
outsl
loopne
imul
and
fcomi
out
jp
into
add
outsb
lock
mov
cmp
lahf
sbb
cli
jecxz
sub
out
add
mov
pop
or
data16
xchg
add
jle
cltd
adc
lahf
outsb
imul
in
or
jnp
bswap
loopne
pop
inc
gs
push
incb
lcall
in
jle
add
scas
movsl
fisubrs
icebp
push
add
imul
jbe
adc
add
in
add
pusha
pusha
lock
add
insl
dec
movsb
adc
movsl
add
punpckldq
push
pushf
das
out
ficoms
loop
repz
mov
add
call
out
xor
lock
add
pushf
dec
cltd
insb
add
jb
jns
aas
or
or
cmp
aam
pop
xcrypt-cbc
cmpsl
push
push
aad
or
daa
je
popa
mov
add
sbb
std
pop
jo
testb
sbb
sarl
push
and
mov
adc
adc
js
repz
add
mov
mov
lahf
lret
add
das
paddb
jl
mov
push
dec
mov
call
xor
dec
insl
in
add
popa
bound
add
sbb
sub
mov
sahf
pop
call
or
xor
add
in
and
push
mov
aas
xchg
adc
pop
clc
repnz
aad
sbb
pop
push
arpl
push
mov
cmp
ds
push
jl
mov
nop
sub
lock
add
xchg
add
xor
stos
sbb
loopne
cmp
cmp
rcll
sub
mov
mov
dec
and
xlat
xchg
mov
std
xorb
loopne
xchg
pop
fcomps
xor
insb
xchg
call
mov
cmp
add
xor
dec
add
seto
incl
data16
mov
ja
add
rcrl
xchg
sarb
mov
iret
pop
xchg
add
and
add
adc
out
dec
sbb
add
dec
hlt
pop
pop
inc
mov
setl
mov
or
std
xlat
mov
int
jge
mov
add
and
cli
add
xor
cmp
pusha
js
in
rclb
jle
jp
jnp
fimull
insb
xor
mov
adc
push
andl
xchg
popf
in
and
add
jae
out
inc
repnz
push
ret
add
iret
push
sub
movsb
push
add
sahf
xor
jg
add
sbb
push
sub
scas
fimull
inc
mov
jae
in
mov
lcall
arpl
mov
sti
loopne
aam
pop
push
repnz
inc
push
lock
rolb
stos
ror
test
pushf
xor
jo
jne
add
and
xor
add
jbe
fidivrs
xor
out
hlt
add
and
push
mov
sti
add
pop
cmp
or
and
loopne
iret
or
jo
add
push
add
daa
or
rcl
mov
ljmp
enter
mov
popf
add
and
inc
add
inc
adc
shrb
mov
inc
rolb
jl
ds
mov
lods
clc
loope
sbb
bound
xor
pop
add
setns
fsts
mov
ja
adcb
sbb
cltd
dec
adc
sar
adc
pop
outsb
xchg
add
xchg
fmull
add
push
inc
pushf
add
cwtl
cwtl
rolb
pop
out
pop
sub
add
push
fisttpl
mov
lds
enter
hlt
jg
daa
add
mov
sbb
sahf
add
pushf
nop
add
inc
mov
test
xchg
dec
jae
call
mull
xorl
cmp
sub
or
push
shll
and
stc
pop
add
loop
inc
lea
mov
test
cmc
add
popa
jmp
insl
cmp
push
mov
cli
push
push
sub
and
lods
jmp
push
packsswb
and
adc
add
pop
mov
xor
nop
add
mov
cltd
add
in
jmp
cmp
popa
sub
xlat
and
scas
cmp
sbb
aad
mov
ja
add
notl
add
inc
jle
out
add
rclb
repz
or
gs
lret
add
fimull
out
pop
cld
mov
pop
out
pop
call
lea
inc
mov
inc
pop
arpl
addps
cli
loopne
jns
movsl
aas
bts
ds
movl
pop
jne
add
fldt
xchg
dec
lahf
push
add
adc
dec
add
cwtl
rcrl
movsl
std
add
push
jnp
add
scas
mov
and
add
cmp
add
push
lock
pop
mov
xchg
ja
add
adc
aaa
ljmp
mov
add
push
add
insl
or
lock
nop
sbb
mov
jecxz
lret
sub
add
pop
pop
cmp
push
mov
ss
add
mov
mov
mov
in
jl
mov
push
nop
mov
repnz
mov
and
iret
mov
inc
add
test
aas
mov
fcoms
add
loop
btc
shll
dec
aam
out
add
mov
push
pop
add
xchg
loopne
outsb
adc
jno
enter
xor
dec
enter
add
cmp
pop
xor
and
iret
fidivs
add
jb
test
cld
xor
push
sarl
mov
inc
xchg
dec
add
dec
div
xor
mov
das
fdivrl
mov
and
xchg
jge
out
in
ret
int3
out
addb
insl
cld
sbb
sahf
mov
aad
jne
cltd
mov
dec
xlat
cbtw
mov
jle
sarl
lcall
pop
ret
xchg
cmp
mov
push
out
lock
adcl
mov
add
jmp
mov
out
stos
adc
mov
xlat
test
jle
pop
add
insb
lahf
stos
pop
and
outsb
pusha
sbb
shlb
popf
or
add
push
mov
dec
jae
add
insb
inc
std
push
cmc
pop
xchg
ret
cmpb
pop
movsl
adc
mov
out
or
gs
push
sbb
add
xchg
in
jmp
xchg
lret
pop
add
sbb
cmp
into
incb
hlt
xchg
add
mov
jp
add
pusha
add
or
sti
int3
xchg
mov
add
pushf
sahf
ljmp
adc
mov
jge
ficompl
push
jno
std
add
pop
incl
and
enter
and
jo
ficoms
xor
push
adc
xchg
pop
cmp
add
sbb
aas
aas
pop
add
cmp
mov
or
rorl
fidivrs
push
add
icebp
aad
movsl
mov
cmp
sbb
xchg
adc
add
cmp
loope
or
js
pop
xchg
add
js
mov
pop
add
xchg
arpl
addl
xchg
add
jae
sbb
ret
subb
rcl
add
sbb
hlt
add
sub
ljmp
push
lcall
pop
out
inc
fldenv
add
mov
lret
adc
and
scas
lcall
add
shll
ret
jecxz
int3
aaa
test
movsb
in
outsl
sbb
jns
jbe
add
inc
lret
cli
sub
fildll
cmp
ss
xchg
adc
add
lods
pusha
or
sbb
dec
xor
xchg
inc
into
dec
imul
out
add
dec
mov
cli
dec
fisubs
add
fstl
cmc
push
push
jbe
pop
xchg
data16
rolb
inc
and
adc
fisttps
cmp
mov
mov
pop
mov
rolb
in
push
pop
es
sub
mov
pop
ja
cmp
aas
sub
mov
add
aam
add
std
or
mov
add
fimuls
jp
nop
sub
xchg
jbe
popf
call
das
jmp
add
sti
pushf
test
inc
adc
sbb
pop
gs
call
mov
and
jp
push
add
xchg
out
dec
fsubrs
pop
add
jmp
aas
dec
sahf
xor
inc
jae
jecxz
les
pop
pop
in
sbb
and
cmp
testl
lea
add
sbbb
out
call
ss
data16
lret
ja
add
add
inc
push
jmp
inc
or
call
pushf
cmp
jge
inc
rdtsc
mov
push
cld
pop
lret
pushf
dec
push
call
mov
jbe
adc
jo
decb
sarb
sti
negb
std
call
jmp
sub
mov
dec
hlt
inc
js
cmp
mov
adc
xor
xchg
xor
dec
cltd
movl
gs
fs
push
mov
imul
dec
cwtl
sub
iret
aam
pop
push
ret
push
test
pop
add
clc
test
xchg
loop
adc
cwtl
pusha
mov
push
in
add
dec
sbbb
push
ret
fldcw
into
sub
loope
mov
push
leave
xchg
lahf
pop
inc
subl
cmp
roll
fbstp
and
ffreep
mov
add
push
call
pushf
xchg
jmp
adc
ds
loopne
mov
cltd
mov
and
je
xchg
inc
add
mov
add
ret
cld
push
jp
xor
lret
fbld
push
call
or
cmpb
lds
enter
mov
in
mov
or
cmp
xchg
hlt
pusha
jecxz
pop
inc
sub
dec
mov
sarb
lahf
jl
call
int3
aas
dec
or
and
add
call
nop
mov
in
push
pusha
dec
pop
xorb
sarl
popa
inc
cwtl
cmpsl
dec
imul
add
iret
mov
ja
and
sub
adc
cld
jb
fs
adc
test
pusha
rolb
jmp
dec
inc
sbb
jle
insb
dec
push
mov
push
push
sbb
mov
xor
mov
subb
xchg
cmp
xor
fcoml
jge
dec
adc
mov
mov
mov
jg
shll
push
sub
adc
testb
inc
pop
fists
arpl
xor
dec
test
or
rolb
xor
lock
ret
sbb
pop
xchg
repnz
aam
mov
push
ljmp
xchg
xchg
push
ficoms
add
xadd
adc
dec
mov
shl
mov
cmp
xchg
lds
mov
pusha
push
push
xchg
add
add
orl
push
inc
pop
dec
syscall
std
adc
dec
ret
mov
sub
outsl
lods
sbb
mov
mov
subl
dec
sbb
push
ret
pop
cmp
inc
and
mov
add
and
out
mov
pop
add
mov
je
lret
cmp
adcb
cmpsb
sub
push
sbb
jmp
adc
pop
and
shlb
outsb
int3
orb
or
add
adc
push
xchg
jmp
test
aas
and
gs
pop
push
and
add
loop
in
shll
data16
jecxz
dec
mov
and
mov
pop
xor
lock
lret
add
adc
cmp
adc
rcl
pop
sti
xor
add
inc
push
mov
push
mov
sub
inc
add
mov
lret
popf
lret
adc
add
lods
or
movsb
scas
pop
or
adc
mov
xor
or
jbe
std
test
xchg
sub
sbb
hlt
mov
dec
call
inc
pop
data16
shrl
in
sbb
stos
push
aad
push
push
push
xchg
sub
mov
orl
clc
mov
and
add
dec
dec
pop
shl
jno
fmull
cs
sbb
cltd
shrb
pusha
pop
xlat
cmp
inc
and
sub
gs
in
add
jecxz
cltd
lock
fnstenv
push
loopne
push
lret
lcall
cmp
add
push
dec
pop
lahf
cwtl
outsl
add
ret
call
pop
mov
xlat
imul
ret
pop
dec
ljmp
daa
mov
jp
mov
daa
mov
xchg
cmp
mov
inc
arpl
pop
lds
or
push
or
sbb
insb
test
lret
jns
andb
dec
sbb
test
inc
pop
or
push
xor
stos
or
es
ret
sub
mov
sbb
push
mov
or
or
mov
pushf
inc
mov
imul
cmc
xor
cmpsl
pusha
nop
inc
out
or
ret
mov
inc
or
cmp
mov
pop
add
or
cmpsb
lret
add
sub
sub
or
or
in
pop
sbb
pusha
jmp
inc
test
add
je
in
cltd
mov
lea
cmp
or
sbb
stc
jmp
ret
loope
push
or
lahf
and
imul
mov
andl
nop
lds
pushf
cltd
call
mov
or
mov
push
mov
test
mov
xor
call
jae
jmp
cwtl
cmp
orb
xorb
and
xchg
bound
add
add
stos
aam
jmp
xor
mov
inc
xchg
pop
pop
mov
cltd
adc
imul
push
rcrb
test
cmpsb
into
mov
inc
lcall
insb
jb
movb
dec
dec
or
into
add
call
mov
cli
add
adcl
dec
mov
dec
dec
sbb
adcb
cmp
rcll
pusha
and
push
xchg
cmpsb
mov
addr16
call
lcall
push
repz
or
sub
xor
or
nop
jmp
xchg
ret
xor
sub
add
or
clc
nop
addr16
sub
pop
hlt
mov
shlb
adc
gs
sarb
push
or
xor
mov
clc
lock
lock
pop
xchg
aas
sbb
inc
sbb
je
mov
not
pusha
stos
and
enter
clc
dec
push
pusha
pop
sub
aaa
jb
pushf
pop
out
in
or
jmp
mov
stos
xlat
les
mov
dec
pop
enter
pop
xchg
cltd
adc
std
repz
nop
rcrl
cmp
adc
adcl
add
int
pop
test
pop
xchg
inc
dec
inc
push
ret
add
lea
fnstcw
lret
mov
mov
push
test
hlt
fimull
mov
mov
mov
fsubs
ret
andb
loopne
sub
fisttps
cmpsl
mov
int
mov
pusha
add
mov
or
subl
adc
call
dec
dec
add
dec
fnstenv
iret
dec
push
cmp
lret
xlat
mov
call
fwait
sbb
pop
pop
or
mov
sti
sbb
popa
das
push
iret
int3
mov
imul
cli
out
nop
pop
inc
mov
sbb
cld
and
call
jecxz
sbb
popa
in
pushf
int3
push
ss
push
insb
ds
into
pop
push
outsb
or
fsubp
xor
dec
int3
add
rcrl
pop
pushf
pusha
and
js
push
test
pop
fidivl
xorl
sub
nop
xor
pusha
jp
stos
add
xchg
stc
rcrl
adc
mov
aas
mov
add
xchg
inc
and
sub
adc
pop
daa
mov
nop
cmp
stos
cmpsb
xchg
pop
xchg
cld
mov
add
mov
push
or
push
loop
jge
enter
xchg
inc
push
xchg
lock
push
mov
dec
and
dec
push
pop
mov
mov
popf
and
dec
inc
fucom
cmp
and
adc
dec
sbb
xchg
inc
divb
popw
and
insb
out
cmpb
inc
pushl
cmp
pop
xlat
lods
xchg
iret
jae
outsb
arpl
push
or
lret
ds
adc
sbb
add
jns
mov
loope
lcall
call
push
aaa
push
push
pop
rorl
aad
dec
xlat
mov
lcall
daa
int
mov
flds
out
or
mov
stc
push
movsl
fs
clc
or
push
inc
cltd
mov
adc
add
xor
movsb
xchg
add
gs
cwtl
add
cld
out
mov
sbb
fsubrp
dec
xor
mov
add
mov
mov
lahf
and
adc
push
xchg
sahf
xor
mov
data16
cmp
sub
push
gs
hlt
xchg
stos
ret
mov
sub
aam
lret
xchg
ret
nop
call
leave
mov
enter
push
loopne
mov
and
adc
cmp
stos
mov
mov
push
imul
add
ret
push
xchg
cli
or
lret
dec
orl
xchg
mov
and
pop
or
sub
fmulp
sbb
sub
sbb
xor
and
inc
mov
and
push
imul
sbb
mov
mov
mov
pusha
push
movsl
mov
or
lods
adc
adc
sbb
mov
lret
xchg
arpl
sub
or
inc
pusha
shl
mov
les
sbb
in
call
lea
xchg
mov
add
sub
push
inc
rol
fisubs
xor
test
push
cmp
popf
addr16
in
incl
sub
lock
cmp
or
loopne
jmp
movl
sbb
and
ret
mov
ret
inc
dec
addl
push
sti
add
or
lahf
and
xchg
inc
and
push
lret
roll
push
sub
mov
out
xor
arpl
or
or
pop
or
xchg
push
mov
or
jmp
test
movsl
fcmovbe
jge
js
cs
pop
stos
sbb
pop
sbb
aam
sub
out
sbb
insb
sbb
sub
sub
stos
xchg
xor
mov
or
mov
roll
jb
out
mov
cmpsb
inc
push
sub
xor
lds
inc
cmp
add
xchg
rorb
push
ja
push
and
cmovno
sub
test
pop
cmpl
dec
push
nop
sarl
push
and
or
cwtl
add
inc
dec
das
add
and
roll
sbb
mov
cs
push
push
add
test
mov
xor
not
jmp
or
test
test
mov
and
push
pop
jp
data16
fiadds
mov
les
pop
nop
pop
xchg
xchg
shl
pop
jmp
daa
loopne
adc
dec
sbb
sub
push
add
and
cmp
and
inc
jmp
push
jne
push
push
lea
mov
dec
xchg
movsl
mov
pop
fchs
pop
jbe
test
hlt
fcompl
dec
lea
adc
cltd
rcr
mov
lcall
adc
adc
sbb
inc
and
jge
add
bswap
mov
loope
clc
add
add
int
ret
subb
call
je
rcl
sbb
test
xchg
add
jne
add
dec
sti
mov
mov
add
inc
pop
outsb
or
mov
jbe
into
xchg
mov
add
push
ja
push
mov
movsb
jne
ret
dec
add
mov
dec
jae
pop
add
add
in
les
mov
scas
pop
mov
movb
js
cmp
xor
or
lahf
jg
jmp
xor
adc
imul
pusha
adc
xorl
incl
adc
dec
jno
lock
pop
fcoms
push
lret
mov
or
stos
sbb
pop
daa
fdivrs
cltd
jp
inc
adc
pop
adc
push
inc
fidivl
lods
dec
cmp
fs
inc
movsb
cmp
ljmp
nop
xchg
or
call
repnz
adc
cmp
or
push
mov
call
mov
mov
popf
mov
and
insl
inc
xchg
orb
pop
mov
xchg
lcall
dec
test
repz
ss
mov
pop
loope
xchg
cmp
push
inc
test
and
push
outsl
call
pop
inc
divb
adc
mov
inc
mov
pop
movsb
sbb
inc
or
out
lahf
mov
push
push
adcl
outsb
or
test
cwtl
push
push
ds
sbb
call
inc
lret
or
sub
mov
add
jmp
call
sub
out
xchg
and
xchg
xchg
mov
add
into
icebp
xchg
sub
adc
xor
push
push
ret
or
xchg
add
out
enter
ret
push
push
cmc
dec
or
xchg
xchg
test
cmp
movsb
jle
sarb
insl
clc
imul
jmp
push
jp
jl
mov
and
popf
test
les
lss
pusha
xchg
repnz
pusha
mov
adc
stos
imul
adc
addl
xor
dec
cmp
subb
inc
mov
mov
adc
or
divb
stos
popa
mov
push
fidivrs
cmp
pushf
cwtl
scas
fcomps
fwait
ret
push
jne
adc
mov
sub
xor
notb
jno
dec
test
mov
cmp
popf
sub
adc
ds
and
mov
xchg
mov
xor
inc
cmp
test
cmp
jmp
cld
andb
push
push
add
or
sub
mov
and
sub
sbb
enter
mov
fldenv
repz
dec
nop
stc
jge
and
sahf
inc
adc
jmp
sbb
xchg
dec
adcl
ror
mov
mov
push
mov
inc
jmp
or
mov
std
pusha
insl
mov
mov
inc
and
not
imulb
into
xchg
cmp
xor
push
movsl
jmp
pushf
pop
sub
xchg
repz
enter
repz
nop
dec
mov
xchg
or
or
xchg
out
test
roll
sbb
jg
shrb
lahf
subb
ret
sub
mov
pop
fists
mov
rorb
jmp
dec
and
lea
pop
xchg
test
sub
jle
push
dec
xchg
enter
loop
lahf
mov
leave
inc
pusha
jp
lcall
or
aaa
cmp
adc
mov
inc
dec
scas
sbb
lcall
push
push
add
xchg
lcall
movsb
dec
cmp
mov
testl
xchg
push
push
nop
test
in
roll
pop
dec
popa
pushf
mov
jae
loopne
mov
out
mov
add
in
pop
test
shrb
add
cmp
out
push
fadds
aad
or
mov
lcall
sub
in
mov
cmp
pop
mov
ret
push
jp
mov
jo
cs
adc
cmp
or
push
sbb
adc
mov
andb
clc
mov
into
loope
sub
dec
les
rcrl
adc
lcall
cmc
test
and
das
add
add
sub
lods
bound
cmpsb
mov
das
ljmp
pop
mov
cwtl
add
pusha
adc
cmpsl
lods
call
mov
xchg
mov
jo
adc
mov
pop
xchg
add
sarb
int3
clc
pusha
dec
cmc
add
clc
test
out
add
push
js
orb
xchg
fs
not
mov
pop
mov
pushf
and
call
loop
mov
test
gs
daa
dec
sbb
fcoms
insl
push
movsl
xor
aam
into
add
pushf
xchg
xchg
cmp
rorl
or
xor
lret
mov
pop
xchg
enter
mov
push
outsb
imul
pop
aam
dec
int3
adc
dec
sub
leave
cmp
iret
icebp
testb
test
adc
fbld
pushf
jmp
add
movsl
push
push
xchg
add
jae
cltd
and
adc
push
aas
das
push
add
ljmp
mov
xor
fsubrs
mov
pop
mov
push
es
inc
test
or
xor
subb
into
dec
push
jbe
aad
mov
lods
adc
dec
pushf
xor
adc
fldl
test
repz
push
sub
sub
cmp
add
jmp
pop
push
dec
in
xor
lret
push
rorb
dec
inc
pushf
les
xorl
or
push
rorb
test
cwtl
popf
adc
mov
data16
and
sub
jno
xor
jge
stos
cmpb
mov
call
or
lret
mov
test
mov
mov
movl
or
int
cmp
jmp
inc
xor
dec
mov
or
add
icebp
jmp
and
or
insl
sub
add
mov
cld
orl
and
or
xchg
movsl
dec
or
lret
mov
roll
mov
addl
inc
fistps
pop
or
inc
lock
pop
es
movsl
mov
add
cmpsl
pushf
dec
push
push
adc
bt
push
cwtl
int
pusha
notb
jmp
inc
sub
cmp
loop,pn
fldl
fs
dec
jl
pop
js
out
push
or
repz
sbb
in
and
xor
mov
inc
and
sbb
sahf
mov
addr16
cs
cmp
push
mov
fdivrl
mov
sbb
xor
jmp
mov
fisttpll
ret
jl
dec
testl
adc
add
push
out
xchg
call
inc
push
mov
mov
xchg
call
push
push
xor
sbb
sbb
cmp
stc
add
sbb
inc
jnp
aaa
dec
jmp
decl
loopne
adc
mov
das
addr16
int
or
add
call
jae
les
das
in
popf
mov
in
add
insb
push
mov
mov
cmp
mov
arpl
push
jnp
hlt
shr
xchg
jle
cmp
jmp
xor
mov
push
repz
js
cmp
testb
adc
loopne
mov
add
inc
push
inc
push
mov
rcll
add
add
cmp
sub
mov
mov
mov
cs
icebp
mov
cmc
jo
jmp
out
dec
fs
xchg
sbb
sbb
sbb
negb
cmp
dec
int
cmp
sbb
mov
std
cmpsb
cwtl
in
xchg
fimull
mov
ljmp
sub
out
subl
test
xchg
stos
adc
dec
je
cmp
mov
shrl
rcll
push
mov
dec
inc
mov
test
add
xchg
sbb
and
add
loopne
ror
push
mov
inc
fwait
out
push
ja
jecxz
sub
int
add
mov
mov
addr16
pop
fdivrl
in
rcrb
enter
mov
add
pop
pusha
jae
es
or
push
dec
pop
imul
cmc
dec
pop
dec
int3
das
icebp
call
fisttpll
mov
mov
pop
lock
stos
adc
push
cmpsl
add
scas
xor
mov
jg
adcl
je
pop
jmp
or
fwait
lea
pusha
bnd
ret
idivb
call
daa
pushf
test
clc
scas
add
push
jmp
and
daa
loopne
call
or
enter
fcmovnbe
insb
add
pop
cmc
subl
nop
jmp
rorb
repz
daa
js
dec
sub
cmp
ret
and
adc
xchg
sbb
xchg
cwtl
mov
pop
stc
int
enter
dec
das
dec
jp
mov
ret
stos
push
andb
sti
lods
sar
gs
or
push
adc
je
inc
pop
aas
pushf
jmp
mov
xchg
rorb
nop
shll
jle
mov
or
mov
outsl
aaa
add
scas
dec
dec
dec
shlb
mov
loope
xchg
dec
dec
mov
push
sbbl
inc
dec
je
adc
bound
push
ror
mov
or
mov
into
dec
out
mov
push
add
xor
sub
and
in
inc
and
hlt
les
pop
lea
jecxz
push
and
or
dec
inc
push
mov
push
sub
adc
and
out
xor
pop
adc
jo
sbb
cs
adc
jp
je
dec
sub
inc
cmp
out
js
jl
les
jae
jmp
adc
shl
in
out
adc
mov
jne
add
hlt
div
or
ds
add
and
outsl
or
jns
push
xlat
sub
dec
push
rcrb
sahf
or
aam
mov
add
imul
inc
sbb
xor
stc
test
es
mov
cmp
adc
decb
and
nop
jo
push
pop
or
xor
cwtl
into
lahf
inc
mov
sbb
les
lahf
sub
out
pop
dec
int3
das
call
add
sub
aaa
xor
pusha
xchg
fcom
dec
add
push
pop
daa
outsb
mov
jnp
popf
nop
jge
sbb
lds
or
rorl
or
mov
dec
sbb
lret
and
call
or
into
test
adc
repnz
sbb
or
dec
sbb
orb
dec
jo
cmovb
jb
sbb
bnd
adc
test
jnp
cltd
xor
xor
and
or
test
inc
xor
lods
fdiv
call
rolb
cmpsb
xchg
xchg
aas
pop
gs
or
lret
dec
call
push
mov
and
mov
ret
fadd
jge
inc
dec
movsl
adc
leave
cmp
push
mov
or
xchg
bnd
xchg
add
adc
jmp
test
in
mov
stc
jne
inc
stos
mov
loopne
mov
or
test
sub
nop
jmp
pop
arpl
pop
or
cmp
inc
add
subl
nop
movsl
inc
out
outsb
faddl
pop
enter
pushf
pop
mov
pop
out
xchg
es
leave
movsl
out
cmp
jnp
xorb
mov
out
pop
cmp
xchg
imul
dec
mov
lods
int3
fs
lods
call
sbb
dec
loop
lcall
not
inc
jecxz
mov
pushf
dec
inc
inc
call
pusha
shll
pop
inc
in
call
rolb
rcl
std
mov
roll
push
cmp
dec
jecxz
lret
or
addr16
sub
pusha
test
adc
in
sub
cltd
sub
lods
fcomps
xchg
sbb
test
arpl
mov
shll
inc
jle
ljmp
pushf
cmc
cltd
clc
and
repnz
lods
sub
push
pushf
xchg
mov
aad
enter
lds
lds
std
mov
dec
daa
push
mov
into
clc
push
mov
sub
mov
mov
es
mov
gs
sbb
pop
pusha
bound
ljmp
and
xor
orb
ss
jno
aad
sub
sbb
dec
ljmp
aam
addb
enter
popf
mov
into
shl
jl
std
xor
push
sti
dec
addl
jne
dec
ljmp
mov
inc
outsl
cmpsb
mov
adc
push
nop
push
or
sub
push
mov
add
dec
in
jo
call
inc
les
xchg
xchg
or
movsb
cltd
mov
bound
xor
sbb
scas
adc
repz
sbb
jae
xchg
addr16
jns
inc
lods
scas
mov
stc
leave
adc
loopne
xchg
sbb
mov
push
pop
sub
in
in
fiadds
rcl
push
mov
cmp
pushf
stc
xchg
add
call
hlt
and
pushf
out
sub
jnp
jecxz
enter
inc
mov
in
inc
add
add
cmpsb
je
pusha
push
jae
sub
add
inc
rcrl
cmpsb
rcll
sub
or
inc
pusha
nop
push
pop
push
xlat
fmuls
push
xchg
aad
daa
mov
out
inc
cmpsl
cwtl
push
mov
cmp
sub
sub
aam
sub
or
jne
scas
insb
roll
inc
lock
pop
add
sarl
xchg
test
cmpsb
cmpsl
or
jns
aaa
mov
fs
add
push
call
ret
lods
jns
and
xchg
mov
stos
add
cmp
cmp
shl
push
add
mov
mov
dec
add
adc
daa
pusha
in
ret
and
call
add
aas
aas
add
mov
inc
xchg
push
bound
inc
jle
mov
into
shrb
scas
mov
shll
push
or
add
or
inc
lea
mov
pop
in
push
in
xchg
dec
add
mov
ljmp
mov
les
pop
pop
push
lock
mov
pop
or
imul
movsl
in
xchg
lds
xchg
cwtl
sbb
movsb
lcall
push
test
mov
jnp
or
push
xchg
push
nop
add
out
mov
fdivl
lods
rorb
dec
pop
ret
sbb
mov
loope
push
and
loopne
cmpsl
cmp
ret
pop
mov
lret
xor
adc
jno
mov
and
shlb
xchg
mov
jge
dec
dec
repz
not
lea
cmp
mov
or
cs
sbb
shll
cld
imul
in
cmpsl
ret
repnz
imul
mov
xorb
movsl
or
cmp
sbb
data16
xchg
and
or
add
movb
test
and
pop
push
shrl
sub
bound
push
rcrb
movsl
push
pop
lret
hlt
mov
in
xchg
fisttpll
sub
fldt
lret
data16
pop
pusha
add
lea
ljmp
sub
cs
test
rcr
test
cmp
lahf
jb
xchg
test
lret
nop
into
call
add
pop
push
push
data16
pusha
and
xchg
push
mov
outsb
cs
xchg
push
pusha
or
cs
sbb
push
jle
push
rorb
lret
pop
sarl
std
mov
jo
out
and
mov
repnz
and
std
mov
cmpsb
push
xor
sub
pushf
mov
mov
lahf
cmp
cltd
lds
or
not
mov
xor
jne
scas
dec
mov
jmp
rol
call
jno
sub
jb
adc
aaa
ror
push
add
push
jnp
sahf
outsb
and
fmulp
das
ret
orl
pop
push
cltd
popa
sti
enter
adc
in
loop
push
jae
enter
jle
imul
in
add
in
rorl
scas
cli
push
xchg
sub
dec
fiaddl
call
xchg
movsb
lock
cmp
cltd
and
pop
inc
out
mull
jns
popf
jg
enter
or
and
andl
inc
adc
mov
notb
in
push
mov
mov
mov
dec
shl
sub
leave
mov
sbb
pop
push
arpl
adc
cmp
ficoms
mov
add
dec
movsl
andl
adc
pushf
aam
adc
out
cmpsb
mov
fucomi
stos
dec
sahf
xchg
mov
add
inc
dec
pop
es
scas
add
sub
adc
mov
lea
test
sbb
inc
movsl
inc
xor
or
cmpsl
call
mov
lods
nop
push
pop
cmc
cltd
inc
xor
loopne
mov
nop
add
jmp
adc
add
lahf
mov
inc
mov
loopne
push
enter
jne
push
dec
aaa
xchg
push
inc
test
mov
ja
push
pop
enter
out
mov
and
xchg
cmc
orb
popf
mov
arpl
pop
psubsb
stos
or
in
pop
mov
lods
mov
lea
int3
jns
inc
lahf
pusha
pop
cmc
cmpl
adc
dec
enter
mov
shr
inc
rclb
js
nop
addr16
inc
jae
fnstsw
mov
out
mov
lret
mov
pop
call
and
sub
xor
call
dec
dec
loopne
xor
inc
leave
movsb
sbb
jp
and
inc
xor
mov
push
xchg
xor
or
xchg
or
xchg
add
push
test
xor
dec
out
adc
dec
add
js
xchg
mov
add
jge
add
nop
push
jmp
or
outsb
pop
pop
in
and
loop
and
inc
pop
fmuls
inc
mov
jns
xchg
xchg
inc
add
pop
nop
hlt
inc
call
jmp
xchg
std
sbb
push
xchg
dec
je
lods
push
jge
or
mov
pop
rcll
pop
cmp
or
dec
pop
pop
pusha
inc
not
mov
xchg
cmp
and
clc
lods
loope
jno
imul
adc
pop
mov
imul
xchg
jp
sbbb
add
mov
jns
test
dec
adc
mov
dec
pushf
nop
not
and
adcl
aam
push
jbe
popa
jmp
movsb
test
mov
mov
mov
sub
xor
pop
mov
mov
mov
sub
jo
out
add
jns
aam
or
or
sub
call
xchg
or
push
inc
xchg
rcrb
xchg
loope
rclb
mov
or
adc
pop
popf
push
sub
dec
cmpl
or
es
inc
nop
push
in
ret
das
sti
pop
pop
mov
loopne
fbstp
push
sub
push
pop
call
not
lahf
inc
clc
add
jle
jl
test
mov
jb
or
je
ffreep
or
enter
push
inc
fcompl
mov
shrb
aas
rorl
push
in
mov
in
add
into
xchg
sub
inc
mov
jmp
dec
mov
das
out
aad
lea
mov
loopne
daa
mov
lahf
test
push
pop
mov
sub
jl
xchg
jmp
adc
inc
mov
dec
jecxz
xor
sbb
fldln2
pop
jo
jmp
sub
xchg
inc
cltd
in
xor
mov
or
pop
xchg
decl
adc
add
mov
pop
sub
adc
and
pop
insb
pop
orl
sahf
or
sub
cmp
push
pop
xor
inc
add
adc
sub
mov
mov
push
sahf
sbb
or
sahf
lcall
pop
shr
or
inc
sub
pop
cmpsb
xor
cwtl
push
nop
lea
pop
add
xchg
lea
ret
xchg
aas
sgdtl
scas
stos
mov
xor
es
dec
adc
sbb
lahf
sar
arpl
outsl
sbb
shll
sub
lds
pop
lds
pushf
inc
pop
sub
dec
push
inc
xor
xchg
in
wbinvd
mov
push
mov
inc
out
cwtl
xchg
xor
dec
sbb
lahf
or
fwait
add
clc
repz
ret
leave
cmp
cmp
or
in
or
or
cmpsl
and
xorb
test
mov
push
das
fidivl
sub
aas
sbbl
mov
das
in
inc
icebp
lods
pop
out
test
daa
mov
cmpb
sub
mov
xchg
add
and
lea
xchg
bswap
inc
jmp
jg
scas
inc
xor
sub
cmp
or
adc
cmp
inc
stos
dec
pop
adc
adc
adc
xchg
bound
sbb
jp
sbb
adc
xchg
mov
pop
push
in
jmp
clc
mov
cmp
aaa
bound
enter
addl
bswap
ror
fsubs
jmp
push
sarb
lods
or
repz
mov
pushf
or
add
lahf
cmpsl
sti
rcrb
std
cmpsl
fs
insb
sbb
adc
test
sbb
sti
cld
and
shlb
cmc
call
xchg
ds
dec
dec
loopne
data16
xchg
rcr
mov
movl
leave
add
mov
mov
pop
aad
clc
inc
enter
in
aaa
push
dec
jl
dec
dec
mov
mov
cmpsl
int
scas
frstor
xchg
inc
inc
sbb
dec
xchg
xchg
lock
cwtl
stc
pop
cmp
loop
dec
sub
outsb
pusha
lret
jmp
and
pushf
cmp
dec
add
mov
or
adc
aad
dec
dec
lock
aaa
xchg
mov
xor
fistl
testb
repnz
lahf
dec
push
xor
pushf
or
pop
lahf
insb
cmpsb
or
imul
out
mov
and
ret
add
inc
stc
sbb
inc
test
popf
aad
and
je
faddl
mov
aad
jp
dec
xchg
cld
pop
dec
jno
jge
sbbb
fsub
lea
sbbl
stc
jbe
movsl
xchg
call
sahf
push
dec
fucomp
je
push
or
push
jmp
mov
mov
pushf
adc
lock
clc
lea
cmc
rcl
popf
xchg
call
aam
mov
mov
les
inc
adc
addb
mov
jmp
outsl
arpl
add
xchg
ret
adc
std
sub
or
ret
lcall
fs
icebp
add
inc
push
shrl
mov
mov
add
out
sub
insb
xchg
add
mov
mov
cmp
mov
mov
roll
aaa
inc
repz
shrl
sub
xor
js
mov
pop
pop
lods
call
add
inc
push
xchg
ss
mov
mov
pop
xor
mov
pop
imul
cmpsb
adcb
push
or
and
mov
int
cmp
not
pop
mov
adc
mov
xor
jo
push
outsb
repnz
push
mov
dec
ss
aaa
jne
bound
mov
mov
and
nop
jl
adc
mov
js
jg
push
inc
dec
jl
inc
sub
mov
xor
xchg
shl
adc
mov
test
cmp
push
pextrw
aaa
cld
and
jmp
add
rclb
mov
enter
imul
inc
jmp
mov
xor
xchg
ljmp
std
scas
je
inc
push
test
ret
push
into
jecxz
xchg
xchg
dec
inc
test
outsl
lcall
roll
mov
push
daa
pop
ret
rclb
jmp
pop
add
mov
xor
movsl
xchg
or
cld
repnz
dec
sub
push
lahf
dec
out
mov
sub
test
nop
xchg
xchg
call
pusha
jecxz
inc
push
movsl
xchg
xor
cld
dec
pushf
inc
adc
stc
xchg
jmp
push
or
lret
arpl
fsts
adc
insb
test
ret
xor
data16
and
sub
mov
je
outsl
in
in
mov
jle
xchg
ret
loopne
push
sti
jnp
mov
out
mov
loopne
stc
pushf
xchg
in
xchg
mov
cmp
jnp
rcr
add
pop
pop
call
jno
push
mov
dec
loopne
xchg
lret
cmp
pop
ds
icebp
scas
xchg
scas
mov
inc
add
lret
sub
fdivrs
adc
call
xorb
scas
imul
bound
jmp
xor
lahf
sub
test
nop
cwtl
shrl
jne
or
movsb
movsl
sub
mov
push
out
or
push
xchg
test
sub
push
jl
jp
inc
cmp
jge
xor
xchg
stc
push
cli
repz
cmp
xor
add
mov
orl
xor
push
leave
fisttpll
ret
dec
mov
adc
cwtl
mov
sbb
fucomp
outsb
xchg
xchg
mov
repnz
dec
mov
and
test
sub
mov
jge
sbb
faddl
clc
inc
lahf
call
int3
cmp
sbb
stc
and
test
jmp
mov
mov
fidivrl
cmpsb
sub
lods
cmc
and
addb
push
in
push
jmp
test
dec
cmpsb
sbb
inc
jg
xchg
out
test
pop
sahf
rcrb
aas
sbb
stos
loopne
daa
in
icebp
xchg
mov
popa
aas
jmp
call
pushf
outsl
lret
mov
adc
adc
jecxz
cmp
pop
or
push
pusha
xchg
int3
test
or
andl
call
fadd
xchg
test
fsubp
gs
push
push
adcb
xchg
pop
mov
fmull
push
inc
mov
mov
cmp
pop
gs
push
sub
aam
dec
mov
leave
xchg
jl
jnp
xchg
ret
lahf
jmp
pushf
cmpsb
xchg
js
cmpsl
mov
mov
dec
test
mov
push
nop
repz
cmpsl
add
inc
xor
pop
out
pop
or
insb
cmpsl
jnp
mov
inc
mov
subl
sub
cwtl
adcl
daa
adc
inc
cs
inc
hlt
test
or
sub
test
jp
push
jne
sub
cmp
mov
sub
out
sub
es
sub
pop
addb
lods
pop
sarb
add
sub
mov
inc
stc
test
dec
jo
aas
sub
pusha
mov
loope
mov
mov
or
adc
xor
or
jp
jecxz
lea
std
pusha
aam
cwtl
pop
mov
subl
jo
jno
adc
js
xchg
cmc
jb
call
sub
jmp
or
fs
sar
dec
add
xchg
xchg
dec
push
xchg
push
jle
jle
add
pusha
movsl
push
call
push
add
nop
pusha
pop
mov
nop
and
gs
pusha
scas
and
mov
jmp
lret
faddl
push
dec
sub
lods
outsb
add
adc
xchg
inc
test
cwtl
add
cmpsb
ja
hlt
sti
outsb
mov
mov
in
and
sbb
cmpsb
das
pop
jns
jg
hlt
jb
jnp
inc
add
pop
adc
enter
mov
mov
adc
out
and
mov
bound
out
frstor
js
xchg
andb
mov
sahf
jb
push
mov
xor
rcrb
es
nop
clc
mov
inc
les
lahf
cmpsb
das
inc
jg
xor
xchg
subb
stos
pop
push
movlps
sub
fmuls
mov
stc
mov
rcl
ret
filds
dec
push
mov
movsl
std
mov
and
dec
lds
jne
fnstsw
inc
mov
cmp
bound
testb
pop
mov
outsb
cmp
jne
sbb
push
lea
mov
add
add
mov
mov
xor
imul
scas
pusha
sbb
call
cmpsb
orb
lock
clc
and
test
inc
shlb
xor
daa
scas
sbb
popa
and
aad
lahf
or
push
cmp
pop
ret
sbb
in
pop
or
clc
loope
mov
leave
movl
shrl
pextrw
pop
movsb
aaa
jge
insb
lahf
inc
jae
sub
xchg
jecxz
adc
cmp
push
pop
sub
xor
outsb
mov
sub
ret
into
cli
and
int3
mov
jge
ja
or
xor
or
insl
sbb
xchg
cmp
xor
and
sub
cltd
pushf
call
mov
pop
test
roll
outsl
inc
call
cvtps2pd
daa
mov
pushw
mov
imul
outsl
xor
ljmp
and
js
push
mov
add
shr
imul
mov
sub
fiadds
shlb
fmuls
sbb
cmpsb
sbb
adc
push
xor
sub
add
das
out
mov
cltd
pusha
add
push
mov
xchg
dec
fstps
inc
xor
cmp
sarb
add
jl
imul
sbbb
xchg
insl
xchg
and
jmp
push
add
out
cli
call
and
pop
pushf
mov
sub
cli
cmpsl
sti
xchg
pop
aad
push
sbb
lods
mov
je
roll
sub
adc
cmpb
mov
jns
sbbl
or
decl
rcrl
jmp
test
pop
mov
and
mov
mov
or
shrb
sub
jmp
or
push
gs
add
shlb
daa
stc
xorb
xor
repnz
out
sbb
insb
adc
lock
mov
adc
pusha
push
in
add
inc
dec
lret
mov
sbb
mov
pop
mov
shrl
push
jbe
adc
aas
push
jl
outsl
lret
mov
leave
fdivrp
cmpb
xor
pop
call
pop
jmp
jge
xchg
pop
ficoml
dec
lods
or
push
leave
push
xor
mov
add
out
loop
lahf
xchg
leave
orb
mov
clc
xchg
lcall
pop
mov
les
repnz
data16
pop
inc
pop
or
daa
lret
loope
pop
mov
cs
loope
jnp
nop
xorl
jge
xor
mov
add
call
in
daa
sub
pop
pop
sahf
xchg
rolb
into
fucomip
mov
or
inc
bound
push
mov
mov
pop
and
xchg
call
jmp
add
cmp
jg
pop
push
add
xor
cmp
rcl
popf
das
leave
loope
stos
or
or
arpl
cmp
movsb
fs
xchg
aaa
mull
inc
or
call
push
addl
sub
pop
add
loopne
jne
jle
fsubr
shr
test
lahf
mov
and
push
mov
mov
mov
sbb
sub
cmc
push
rclb
mov
inc
pushf
push
lcall
orb
rcrb
dec
int3
inc
push
or
xchg
aaa
addl
adc
xchg
movsb
stos
icebp
incb
inc
call
inc
in
pusha
shl
or
std
sbb
add
int3
mov
xchg
les
jmp
mov
push
mov
loopne
xchg
shlb
dec
imul
add
mov
rolb
leave
xor
mov
mov
mov
shr
shr
fsubr
dec
sub
addb
add
outsl
push
addb
pop
dec
push
xor
jmp
rorb
mov
or
or
and
push
xlat
add
rcrb
jmp
lods
test
imul
fbld
inc
daa
in
push
sbb
and
and
and
sbb
xchg
addr16
mov
xchg
mov
nop
pushf
xchg
jmp
sub
xchg
in
mov
negb
mov
sbb
lds
ss
mov
inc
push
js
jge
jmp
cmp
xchg
sub
rclb
loop
inc
or
inc
into
mov
jns
pop
stos
test
inc
cmp
jmp
addr16
push
adc
imul
adc
pop
add
cmp
je
adc
lods
aas
int3
pop
xor
jbe
cmpsb
aas
and
and
subb
cmp
int3
or
inc
jmp
inc
shrl
out
xor
imul
pop
cwtl
mov
add
test
aad
or
xor
push
test
adc
sbb
sarb
cmovbe
inc
mov
mov
fildl
cs
ss
or
or
pusha
push
insb
mov
sti
in
dec
pusha
int3
inc
push
inc
push
aam
stc
and
adc
mov
add
outsb
int
pop
subb
add
das
mov
mov
test
stos
dec
pop
nop
jg
imul
popa
xchg
out
pop
jle
push
in
clc
or
sub
pusha
xchg
push
sbb
xor
ds
push
push
not
inc
lock
aam
sub
mov
ret
popf
jecxz
jmp
out
ljmp
cmp
inc
pop
sti
pop
mov
push
jl
dec
or
divb
fildl
mov
ret
ret
xchg
rcrb
xor
xor
enter
scas
and
into
pusha
jne
sti
cmp
scas
jl
inc
mov
orb
push
incb
or
in
jo
sbb
xor
out
outsl
mov
lret
cmpsb
jo
dec
xchg
mov
cs
inc
hlt
fwait
mov
xchg
outsb
mov
inc
dec
xchg
xchg
pusha
xchg
pusha
sub
movsb
jp
or
pusha
add
inc
push
add
sbb
sarl
inc
fnstsw
out
sub
addb
js
shlb
cmpsb
xor
push
mov
xorb
push
cltd
sbb
or
jle
lahf
mov
mov
mov
daa
lock
fwait
pop
fstpl
sbb
cmp
subb
inc
test
mov
ss
lret
xorb
xchg
data16
push
leave
push
data16
das
or
aaa
repnz
fcom
add
push
in
enter
insb
pop
push
pop
sahf
pop
ret
cmc
cmpb
neg
mov
stos
daa
adcb
inc
sub
sbb
add
fildll
push
adc
push
dec
and
pop
push
or
add
lret
inc
sar
negb
lods
adc
rol
lret
imul
aad
jnp
sub
call
jns
lds
lods
cwtl
or
push
and
lods
sahf
rolb
mov
enter
jmp
scas
shll
sbb
sbb
outsb
js
popa
dec
fstp
pop
adc
cli
and
adc
daa
mov
inc
dec
jecxz
push
sbb
jae
inc
ds
jmp
std
inc
adc
adc
cs
adc
or
xor
xchg
lea
ljmp
pop
rcrl
call
xchg
sub
dec
xchg
and
lds
dec
jns
xor
xor
lock
lahf
jnp
pop
imul
outsb
inc
aad
loope
popf
aad
fdivrs
ja
xorl
ljmp
fists
fs
adc
in
and
add
cmp
sub
roll
into
mov
sbb
cmp
into
imulb
dec
mov
mov
inc
stc
sub
inc
push
xchg
adc
jmp
mov
jnp
orl
fimuls
push
movsl
adc
mov
push
dec
lret
inc
inc
lods
dec
pop
shlb
cs
cmp
fstl
cld
mov
xchg
dec
sub
loopne
in
movsl
add
and
fldl
push
setp
ja
dec
ret
mov
push
enter
adc
fucom
clc
pop
ret
sub
push
lcall
lret
cmpsb
or
adc
mov
or
or
and
and
xchg
adc
ret
inc
fsubs
enter
push
jb
pop
dec
add
mov
data16
int3
mov
push
push
dec
dec
in
gs
adc
mov
inc
push
arpl
setb
addb
lahf
mov
jmp
sbb
pop
or
pop
add
push
jmp
dec
mov
lock
mov
ja
inc
mov
in
xchg
fwait
ret
cmp
fcoml
sarb
or
cmp
and
jl
stc
ds
xor
addb
sahf
pop
sbb
jmp
int
dec
out
or
xor
pop
imul
jmp
lock
pop
mov
mov
sub
dec
inc
sbb
xlat
and
push
add
les
or
out
push
cmc
dec
xor
and
mov
xor
add
out
xor
mov
xchg
sbb
bound
je
pop
add
sub
mov
mov
mov
xlat
das
imul
cli
fiadds
add
jnp
adc
mov
clc
inc
and
test
mov
fnsetpm(287
ret
push
aaa
call
dec
jno
lahf
and
mov
das
ret
not
and
add
add
shl
jae
add
sahf
ret
xchg
pop
movsb
enter
or
roll
lahf
shl
in
dec
jmp
test
in
shl
iret
pop
xlat
xor
inc
dec
shl
jnp
mov
and
pusha
movsb
jecxz
inc
ds
and
fcmovnbe
mov
call
mov
sahf
pop
ret
int
out
test
lock
fnstenv
jo
es
int
in
call
jmp
pop
adc
or
mov
or
jns
outsb
aaa
sti
movsl
or
enter
test
push
jmp
or
inc
xor
data16
jmp
leave
notl
sahf
lret
sub
sbb
inc
test
in
fidivs
jmp
inc
call
inc
rcr
mov
stc
rcrb
jb
dec
test
js
shr
pop
pop
sub
and
pushf
push
rcll
xor
push
jns
mov
sbb
movsl
nop
idivb
lret
add
mov
sahf
daa
insl
inc
lods
add
or
mov
fs
roll
xchg
popf
push
xchg
dec
lds
lea
shl
mov
cmp
cli
pop
xor
pop
and
mov
out
not
mov
dec
out
cmp
push
pusha
outsl
int
xchg
and
sub
rolb
and
cmp
sub
je
mov
insl
cmp
pop
pushf
mov
mov
mov
inc
stos
xchg
or
jmp
orl
dec
subb
lahf
push
sbb
shrb
std
add
aad
popw
les
ljmp
popa
nop
push
rcrb
mov
movsb
dec
icebp
inc
sub
sub
dec
ljmp
nop
push
call
push
popf
dec
or
in
xor
or
mov
sbb
cmpsl
sub
adc
outsl
loope
add
mov
jns
mov
std
pmaxub
cld
cs
gs
cmp
ss
ljmp
pusha
pop
jmp
mov
and
lock
push
xchg
jno
inc
xchg
pusha
xor
movsb
cmp
mov
stc
sub
or
sbbb
das
rcrb
fldcw
cmp
push
jnp
mov
mov
jo
in
pop
cmp
in
xchg
mov
cmovns
push
add
push
ja
jae
dec
push
movsb
jno
pop
jmp
and
sub
cwtl
mov
in
ret
pop
push
mov
mov
mov
pop
mov
add
dec
inc
mov
jmp
fyl2xp1
movzwl
repz
or
test
hlt
sbb
pushf
pop
pop
pop
xchg
fs
xor
dec
sarb
jecxz
aam
sub
adc
adc
daa
out
pop
jns
daa
or
push
or
lods
cmp
rclb
mov
and
inc
mov
dec
sbb
paddb
mov
imul
mov
jle
push
sahf
mov
push
push
sbb
xchg
xlat
inc
rorl
lret
push
sub
cmpsl
addb
aad
and
mov
jmp
adc
xor
or
popf
add
jg
arpl
push
or
shll
les
aaa
pop
rorb
push
cmpsl
adc
mulb
lret
loop
std
lcall
loop
pop
pop
jmp
dec
mov
in
add
mov
lods
cmp
mov
inc
mov
das
push
lds
lcall
inc
adc
pop
and
fsubrl
jge
js
push
movsb
nop
add
ss
cs
dec
repnz
mov
xchg
sti
mov
jge
nop
cld
sub
mov
leave
cmp
in
or
mov
jmp
dec
mov
push
pop
pop
jmp
movsb
cmc
inc
mov
pushf
stc
dec
enter
inc
or
test
call
sub
push
mov
and
push
xchg
and
sarb
or
rcrl
xlat
sahf
inc
mov
mov
and
mov
lods
and
test
and
test
roll
sub
sbb
cmp
pop
push
dec
and
repnz
rclb
sti
cmpxchg
mov
shrl
dec
subb
pop
sbb
enter
lret
push
xchg
loope
outsb
int3
lock
jp
xchg
andb
dec
shrl
or
aam
pop
cwtl
inc
or
pushf
out
dec
aad
sti
and
insl
push
aas
test
setae
or
mov
or
fsubr
push
mulb
push
push
pop
xchg
jl
je
push
imul
sub
inc
pop
xadd
aam
aaa
pop
mov
adc
cmp
xchg
pushf
xor
andb
sub
iret
call
dec
mov
or
sbb
loopne
pop
dec
hlt
jle,pt
push
push
stos
and
cwtl
jl
cmp
popf
rclb
popl
imul
or
repz
addr16
push
mov
mov
sub
sbb
dec
adc
imul
dec
enter
inc
jnp
andl
pop
pop
jo
mov
pop
or
sahf
es
repz
hlt
data16
pop
popf
ror
fisttpl
dec
sbb
mov
pop
iret
sbb
or
sub
xchg
notb
mov
and
xchg
fcmovnu
repnz
jb
jmp
sbb
in
pop
in
xchg
cmp
dec
mov
lods
sbb
in
sbbb
dec
pop
pop
push
cmp
sbb
push
add
sbb
xchg
rolb
mov
mov
mov
jnp
xchg
push
nop
cvtps2pi
lock
cmp
sar
jmp
scas
xor
nop
pop
push
negb
sbb
cwtl
add
push
sub
jmp
cmp
push
in
loope
in
inc
dec
ss
xor
or
sbbl
jb
cltd
xchg
ffreep
jecxz
jne
mov
int3
lds
add
lds
mov
jae
cmp
cwtl
inc
pop
mov
pushf
aam
decb
shrb
lahf
icebp
shll
and
fimuls
xor
sub
cmp
or
or
add
mov
xor
pop
pusha
mov
mov
jns
sub
adc
cmc
cld
mov
test
mov
jg
jnp
movlps
mov
nop
or
inc
cmp
xor
out
mov
push
sti
out
mov
loop
sbb
lods
jne
or
mov
pop
xor
mov
in
nop
cltd
sub
or
add
fsubrl
jne
in
icebp
mov
pop
rclb
cmp
jmp
cmpsl
cmp
sarb
pop
dec
lock
test
adc
push
in
inc
adc
jb
movsb
psrlw
hlt
and
pop
lds
adc
aam
stos
mov
pop
pop
add
mov
daa
pop
fists
test
repnz
xlat
in
fstps
push
rorl
mov
mov
mov
xor
div
push
gs
stos
inc
mov
mov
fldt
mov
mov
mov
popf
and
push
pop
jmp
or
out
sti
xchg
cmp
add
mov
outsl
push
jno
xchg
loopne
xor
dec
add
xor
sub
mov
add
push
ss
cmp
or
mov
lea
bound
jbe
sub
cmp
lea
ja
lds
subb
clc
or
sbb
in
cwtl
dec
cwtl
call
dec
testb
and
int3
and
aad
mov
test
loop
leave
sub
mov
insb
cmp
pop
inc
icebp
pop
mov
mov
add
push
fsubrl
daa
xor
push
mov
sub
gs
stc
dec
cli
push
pusha
lret
mov
cmp
dec
mov
sbb
mov
xchg
movsb
mov
subl
int
mov
dec
pop
scas
js
call
lods
dec
add
xor
mov
enter
js
mov
or
jmp
incb
popa
xchg
inc
sub
mov
cwtl
add
sbb
push
dec
mov
loope
shrl
cmc
jnp
add
adc
mov
mov
mov
inc
add
cmp
xorb
and
adc
movsl
push
xor
pop
mov
ret
call
pop
ljmp
add
stos
sub
xchg
test
pushf
ljmp
push
jne
add
jne
xchg
jns
mov
sahf
pop
outsl
xor
mov
mov
mov
lcall
jno
clc
add
jnp
push
sub
fisubs
and
fildl
mov
push
push
movsl
loopne
cwtl
dec
inc
imul
pop
xor
push
adc
sub
mov
mov
test
call
push
shlb
inc
add
test
adc
cmp
cli
test
imul
les
fcoml
xchg
mov
testb
fisubrs
dec
adc
decb
ljmp
mov
xchg
pop
jl
pusha
mov
jae
push
mov
mov
sarb
or
enter
lret
rcll
scas
push
scas
xor
mov
pop
scas
add
call
mov
inc
lret
sbb
rcrl
xchg
or
mov
mov
push
in
lods
rcrb
fidivrs
and
push
outsb
and
sub
sbb
ror
call
push
pop
or
xchg
or
je
xor
push
mov
and
inc
dec
mov
int3
lea
pop
pusha
call
orb
mov
lahf
or
cwtl
loop
mov
out
iret
stos
pusha
fiadds
test
inc
mov
sub
add
jbe
dec
mov
call
lea
xchg
add
in
mov
cwtl
mov
subb
mull
shr
lret
mov
add
int3
scas
inc
mov
jo
jne,pn
xor
call
mov
xor
loope
adc
icebp
cs
loopne
out
dec
cltd
shlb
xchg
rcrb
out
jmp
popf
jmp
shll
push
push
xor
cmp
call
jmp
into
ficomps
and
sub
sub
adc
xor
pop
in
shll
fsts
and
sar
shl
dec
mov
mov
es
pop
in
cmp
cmp
enter
cwtl
lods
insb
mov
inc
mov
pushf
dec
mov
mov
pushl
cs
pop
inc
divb
or
fldenv
add
push
stc
test
mov
mov
or
call
pop
xor
aam
inc
add
enter
stc
in
pushf
and
call
push
mov
jmp
fadds
ljmp
test
add
scas
movsb
orl
insb
cmp
jmp
int
lock
pusha
inc
xchg
dec
adc
pop
mov
xchg
sbb
js
pop
lock
pusha
orl
inc
dec
fisttpll
not
dec
pop
repz
cltd
mov
movsb
insb
jns
or
xor
push
nop
xor
or
mov
leave
pop
sub
fbld
in
ret
mov
lcall
push
out
add
mov
cmp
pusha
cmp
repnz
addb
mov
inc
lahf
add
aam
mov
loopne
fildll
aaa
sub
cmp
mov
cwtl
mov
cli
inc
or
sti
jl
sbb
sub
and
add
inc
pop
dec
and
sahf
scas
js
sbb
rcll
sub
loope
jl
push
xor
inc
xlat
imul
test
jmp
cmpsl
mov
inc
insb
xor
jmp
and
sub
shl
das
leave
fs
push
mov
and
sub
rcrl
ret
outsb
and
gs
xchg
sub
jecxz
out
call
dec
mov
push
cwtl
inc
jns
xchg
and
insl
addr16
mov
sub
add
inc
test
jge
iret
or
cmp
and
in
pushf
test
mov
jmp
repz
pop
xor
dec
cmp
js
xor
sub
push
or
mov
lods
or
jb
aam
icebp
das
lods
insl
jae
movsl
icebp
aas
adc
hlt
test
push
shlb
lcall
cwtl
mov
xchg
hlt
xlat
push
xchg
addb
dec
mov
lods
pop
lahf
lock
call
pop
sub
mov
cmp
test
push
mov
jecxz
cmp
push
sub
pop
pop
loopne
jmp
adc
imul
jb
xor
xchg
sub
mov
sar
push
xchg
aad
or
add
push
imul
jle
inc
adc
adc
jae
aas
adc
call
xorl
ss
and
roll
sbb
xchg
dec
pop
inc
inc
pop
fistpll
inc
mov
imul
add
aas
xor
push
pop
ret
les
mov
rclb
xchg
adc
call
fisubrl
jmp
xchg
popa
cld
lret
mov
lds
mov
sbbb
sbb
adc
inc
push
shll
sbb
push
mov
sbb
mov
pop
scas
adc
gs
repz
fildl
inc
outsl
xchg
cmp
add
stos
dec
aam
or
pop
out
sub
dec
xchg
cmp
repnz
inc
adc
push
or
mov
cli
xor
jg
xor
aad
mov
mov
shlb
pop
or
call
mov
sar
add
jbe
jg
sub
jmp
add
mov
push
mov
cmp
mov
out
push
and
out
shr
xchg
mov
and
add
cwtl
xchg
cmp
outsl
or
push
fisubs
mov
test
aas
clc
pop
lods
push
dec
loopne
adc
rclb
dec
mov
jne
clc
lea
lret
in
out
jp
lret
movsb
fsubl
cwtl
rorl
in
jno
xchg
jmp
sub
jnp
inc
mov
call
ret
cmc
nop
jns
icebp
mov
leave
xor
and
adc
aam
rolb
pop
adc
mov
loope
insb
bound
xor
mov
mov
mov
dec
mov
mov
daa
xchg
sbb
push
jp
mov
adc
mov
popf
rcrl
shrl
jp
push
aam
in
dec
add
and
cwtl
inc
push
dec
aas
lock
aas
decb
in
ljmp
adc
rorl
mov
mov
loope
xor
jp
and
pushf
inc
fsubs
outsl
fucomp
dec
or
fists
xchg
aam
mov
je
ficomps
out
add
mov
cli
cmp
or
inc
xor
data16
mov
call
jmp
jb
xor
fs
jmp
nop
push
jmp
cld
out
jecxz
inc
out
xchg
xor
pop
mov
jo
pop
dec
jge
xchg
cmc
mov
cmp
in
mov
ss
cmpb
pusha
sbbb
xchg
jb
and
sbb
cmp
nop
test
cwtl
sti
test
inc
and
inc
jle
pop
pushw
push
or
in
addb
pushf
jg
push
cmp
lret
or
mov
cltd
stos
mov
sahf
rolb
neg
lea
fs
ds
dec
add
cmc
popf
stc
andl
sbb
imul
add
rol
shlb
bnd
and
icebp
or
jmp
pop
stc
add
loop
sub
sub
es
xor
mov
clc
push
xor
pop
mov
in
adc
pop
mov
lods
sbb
push
sbb
or
push
cli
int
push
xor
jne
adc
int3
mov
and
xor
xorb
mov
adc
xchg
bound
mov
lret
nop
movsb
mov
xor
add
fisubrs
xlat
lea
call
pushf
nop
test
fs
sti
pop
cmp
cmpsl
mov
inc
dec
andb
or
bound
mov
and
adc
pushl
in
int3
sub
sbb
xor
or
adcb
cwtl
mov
bound
inc
xchg
push
push
scas
shrl
mov
stos
pop
jmp
cmp
jmp
pusha
jmp
or
pop
enter
movsb
repz
loopne
xor
cltd
adc
not
das
pop
cltd
pusha
sub
pop
or
dec
push
hlt
lahf
xor
call
dec
adc
repz
out
dec
inc
scas
call
mov
add
cmc
sbb
ljmp
push
mov
cwtl
clc
out
mov
inc
cs
xchg
or
rcrb
adc
pop
mov
int3
popa
cwtl
dec
sub
jl
fldl
aas
int3
add
data16
jmp
shlb
outsb
int3
cmpsl
repz
mov
mov
cmpsl
pop
adc
push
outsl
pop
push
lret
mov
mov
mov
in
pop
mov
push
stc
jmp
push
into
mov
cltd
std
inc
adc
jl
adc
pop
cmp
push
fcomps
pop
pusha
mov
mov
sahf
mov
jmp
punpckhdq
lea
loope
cmp
nop
push
xor
stc
xor
add
jecxz
pop
jecxz
bound
xchg
popa
add
lods
shll
xor
fwait
ds
daa
dec
mov
dec
adc
xor
jge
cmp
cmp
ret
pushf
cs
cmp
pop
lret
cld
push
fstpt
add
push
jmp
fstpl
xor
push
adc
jns
in
xchg
mov
aas
enter
aad
cmpsb
roll
movsb
mov
mov
es
dec
loopne
insb
stos
leave
jmp
xor
stos
and
mov
movsl
test
nop
jmp
sbb
add
mov
in
idiv
xchg
cmp
pop
push
pop
iret
test
sbb
xor
sahf
movb
pushf
pop
mov
xor
shlb
or
shl
fs
jo
or
mov
sub
xchg
jmp
arpl
push
pop
push
in
mov
call
mov
pop
mov
push
in
or
and
push
int
test
add
pusha
jmp
movb
sbb
and
add
or
and
cltd
jecxz
stos
imul
nop
push
out
mov
adc
inc
movsl
inc
add
sbb
pushf
mov
push
hlt
rcrb
inc
movsb
xchg
loope
adc
push
outsb
sub
cmp
mov
xor
or
fs
jl
das
inc
and
pop
cmp
sub
nop
setp
call
std
inc
popf
mov
dec
xor
pop
bound
pop
inc
jbe
inc
shl
fimuls
pop
inc
scas
enter
xorl
pop
fsub
loop
pop
nop
dec
inc
insb
dec
sbb
push
mov
mov
iret
stc
push
dec
adc
stos
gs
add
lock
shl
aam
dec
mov
cli
dec
jb
adc
xchg
lcall
push
fsubl
popf
inc
jp
cmp
int3
add
and
adc
call
rcl
mov
lds
sarb
mov
call
mov
movsl
adc
jmp
lods
mov
adc
xor
push
pusha
mov
stc
mov
dec
popa
mov
add
and
lods
lds
ds
cli
sbb
dec
xchg
push
aas
xor
stc
in
cwtl
sbb
push
lret
loopne
add
push
nop
insl
mov
sbb
push
pop
mov
pop
aaa
hlt
adc
sarb
mov
sarb
pop
mov
sub
aaa
jl
popa
lods
sub
push
js
or
or
mov
andb
mov
ror
pushf
stc
or
jl
cmp
rcll
stc
jno
and
or
push
aas
out
inc
mov
mov
enter
andb
popa
jmp
std
pusha
inc
adc
xchg
and
loop
jl
xchg
mov
inc
push
push
arpl
movsl
sarb
mov
loopne
sbb
test
loop
in
lcall
popa
push
cmp
sbb
inc
inc
loopne
add
xor
jno
mov
not
andb
xchg
sbb
mov
and
or
sub
sbb
loope
xchg
xchg
lahf
xchg
fsubs
xor
rolb
push
pusha
inc
call
mov
shll
mov
sub
or
xchg
jecxz
orb
dec
jmp
cwtl
fcoms
call
imul
and
rcrl
lea
jp
popa
test
scas
adc
sub
adc
push
fidivrl
and
clc
mov
les
test
or
sbb
add
cwtl
nop
pop
aam
arpl
jg
xor
xor
les
dec
jno
sbb
inc
jno
das
sub
fadds
pop
hlt
jmp
jmp
pop
or
push
mov
xchg
enter
pop
push
inc
xchg
xlat
mov
add
jle
push
jae
idivl
andl
sbb
ror
push
hlt
inc
cltd
mov
in
mov
popf
test
push
fdivr
out
cwtl
movswl
je
cmp
hlt
sbb
adc
and
mov
mov
mov
pusha
jne
in
cmp
scas
pop
mov
dec
mov
ret
adc
adc
inc
push
push
clc
insl
add
cltd
outsb
lods
pushf
mov
enter
sbb
cli
adc
lea
lods
push
cmp
into
mov
lds
xorl
pop
fs
movsb
adc
cmpl
imul
mov
loopne
test
adc
jl
mov
dec
daa
das
inc
aam
dec
out
cli
lock
daa
or
jae
movsl
ret
and
sbb
je
scas
pop
das
repnz
jmp
aam
in
mov
push
daa
dec
push
outsl
or
shll
cmp
push
mov
push
pusha
outsl
movb
test
rorb
fmuls
jg
jnp
rorb
jne
and
mov
dec
mov
jge
push
pop
loop
dec
cmc
cmp
hlt
push
imul
nop
push
scas
and
adc
pushf
xchg
cs
mov
push
jp
fwait
pop
orl
mov
dec
int3
sbbb
mov
inc
movsl
sbb
jmp
pusha
push
dec
xchg
jo
lcall
pushf
test
cmpsl
adc
push
call
nop
mov
or
sbb
dec
repz
call
ja
jne
stos
push
out
mov
ret
shll
jp
dec
jmp
add
pop
sarb
xchg
jbe
adc
pop
lods
ds
shl
mov
shlb
push
mov
scas
jp
lret
insl
fcmovbe
mov
push
movsb
mov
mov
jle
push
pusha
cmp
mov
xor
shll
not
push
nop
adc
aas
js
mov
sbb
jmp
mov
call
data16
sahf
enter
clc
sti
dec
incb
stc
rolb
mov
std
push
divl
sub
push
cli
mov
add
enter
lcall
repz
das
add
lods
ret
out
push
pop
sbb
jnp
clc
push
pop
loop
pop
push
cltd
popf
jnp,pn
push
cmpsb
push
adc
nop
in
pop
push
aam
push
int
or
xchg
cmp
add
push
cmp
sub
nop
xlat
add
scas
pushf
inc
jp
rcrl
xchg
cmp
lods
jns
call
sahf
lea
or
imul
jno
cmp
sub
ret
pop
imul
mov
xor
icebp
add
adc
jle
mov
xor
in
loopne
test
std
and
mov
or
shll
pushf
jg
fsts
test
and
or
repnz
add
push
aam
arpl
sahf
sbb
xor
dec
pop
xchg
adc
adc
pop
dec
push
jo
ret
cltd
mov
mov
pop
loope
rorb
mov
mov
movsl
hlt
xor
fwait
dec
les
call
and
mov
ficoms
out
insb
cmp
int3
mov
ds
cmp
xor
sub
mov
nop
sub
movsl
push
jl
call
push
subb
mov
cmpb
sub
andb
push
lret
add
loop
pop
mov
push
xchg
lret
pushf
fistl
lret
sti
xor
xchg
fs
mov
hlt
in
and
stc
and
and
dec
outsb
mov
jmp
push
pop
dec
cmp
inc
mov
out
jo
out
and
andl
outsb
fdivrp
subb
mulb
adc
mov
mov
dec
pop
call
divb
repnz
das
adc
loope
dec
inc
or
out
jmp
sbb
and
bound
jae
decl
les
imul
push
and
push
push
repz
jns
or
rcrl
and
push
dec
hlt
adc
rcll
fs
inc
cs
fs
xor
test
xchg
pop
pushf
mov
shll
jmp
push
lret
mov
dec
push
clc
xchg
jg
mov
jl
push
inc
leave
xchg
sub
addr16
xchg
daa
mov
int
in
xchg
xchg
fcomps
fnstcw
sbb
pop
or
pushf
inc
push
push
repnz
outsb
out
pop
and
xchg
adc
sub
fiaddl
es
int3
mov
stc
daa
inc
inc
inc
xor
je
add
dec
mov
jbe
add
jbe
arpl
mov
jne
dec
or
loop
jo
xchg
push
inc
andb
inc
xor
mov
nop
scas
adc
pop
push
rol
rolb
das
dec
sbb
out
xchg
cmc
subl
call
not
add
dec
int3
lret
mov
pop
insb
push
fstpt
test
jge
in
jle
mov
sub
sub
loop
nop
pusha
push
jmp
leave
push
push
stc
cmp
adc
fsts
rcr
and
add
cld
pop
sahf
mov
or
imul
push
idiv
inc
or
xor
ljmp
jmp
ja
test
popf
psubw
lods
xlat
ja
xor
jnp
sbb
popa
pop
rclb
cmpsl
sti
or
jno
test
aas
adc
adcb
mov
jno
sbb
loop
pop
pusha
push
add
mov
dec
xchg
jge
push
mov
jo
push
stc
call
dec
add
or
in
and
push
pop
push
shl
aas
es
lea
sbb
lock
js
xor
mov
lret
jmp
sbb
and
cmp
call
and
inc
push
iret
and
pushf
call
aad
inc
cmc
not
subb
push
jmp
mulb
clc
mov
test
cmc
dec
mov
out
dec
aad
dec
add
or
push
add
sbb
les
test
xor
nop
dec
or
test
xchg
or
cmp
nop
andl
mov
pop
cmp
cltd
jle
les
mov
sub
xor
jmp
cmp
outsb
or
stos
out
push
iret
mov
jb
sub
out
and
cmp
aad
push
call
ret
ds
fisubrs
cltd
mov
ficoms
sarb
jne
push
mov
xchg
scas
stos
xor
dec
push
in
in
xchg
leave
nop
jbe
sub
mov
or
pop
jecxz
cld
out
jmp
add
leave
loopne
mov
fs
or
push
sti
mov
xchg
cltd
xchg
inc
inc
add
mov
push
and
push
pop
push
sub
sub
das
aam
movsl
sbb
mov
rolb
xchg
into
add
fsubrs
push
call
mov
nop
mov
add
jmp
out
dec
fnstsw
jecxz
lock
addr16
nop
mov
rorb
xorl
mov
data16
and
fadd
mov
xchg
mov
xchg
pop
jg
xchg
xor
fs
adc
lret
xorb
inc
xchg
jmp
scas
in
adc
hlt
or
movsb
push
adc
dec
dec
scas
mov
jle
jmp
push
mov
or
lods
test
loopne
pop
add
inc
pop
xchg
addb
insl
mov
jge
pop
mov
jmp
xchg
xrelease
mov
cwtl
or
sub
arpl
inc
pop
cmp
push
idivb
cmpsl
and
and
or
stos
gs
adc
pusha
inc
enter
loope
cmp
loopne
xchg
mov
loop
inc
sub
xor
and
mov
mov
shrb
push
and
push
jb
call
push
pusha
subb
sbb
sub
mov
outsl
addr16
aam
jb
ja
ja
sub
pop
clc
mov
add
call
mov
inc
mov
adc
jmp
inc
loope
push
imul
dec
push
clc
mov
inc
call
pop
out
pop
jmp
push
pop
mov
stos
xor
jns
mov
jp
dec
fsts
jle
sti
mov
push
repnz
xor
cmovp
xor
push
scas
pop
mull
push
push
xor
gs
or
push
lcall
inc
clc
pop
stc
xchg
dec
aad
mov
rol
call
dec
jae
or
xor
mov
adc
int
andb
cwtl
xchg
add
fists
adc
cmpsl
mov
loopne
lcall
jp
mov
leave
pushf
outsb
pop
loop
addr16
dec
pop
hlt
bound
fcomp
cmp
or
sub
das
sub
xchg
and
cld
adc
arpl
adc
pop
push
roll
pop
es
mov
rorl
lret
inc
inc
stos
pusha
mov
mulb
add
pushl
mov
inc
fcmovne
ljmp
sub
movl
imul
jg
cwtl
mov
es
adc
mov
cltd
mov
ficoms
daa
cld
inc
call
movsl
sub
lock
repz
lea
fcomp
sub
adc
popa
xchg
pushf
sbb
fsub
push
push
sub
mov
ja
jnp
movsl
repnz
pusha
mov
in
in
push
jg
dec
xchg
inc
dec
test
cmp
and
add
xor
sub
add
xchg
mov
js
dec
add
adc
cmp
lret
xchg
aam
inc
out
mov
out
mov
dec
adc
ret
sub
mov
push
inc
push
jmp
dec
xchg
add
je
xchg
fsts
xor
pop
lods
lods
test
mov
movsb
je
mov
mov
sbb
mov
cltd
adc
jnp
stos
add
dec
sub
inc
imul
push
aad
mov
icebp
push
test
mov
cwtl
xchg
cli
fs
mov
cmp
and
push
push
mov
mov
and
test
in
xor
adc
jmp
mov
push
push
push
xchg
pop
test
in
sbb
dec
ljmp
adc
mov
or
pop
adc
mov
cmp
lods
jne
jmp
cmp
xorl
lods
fdivs
mov
arpl
cmp
inc
sub
or
push
fsubr
jle
or
add
mov
nop
push
sbb
das
idiv
inc
test
jbe
mov
jmp
xor
mov
shrb
xor
stos
lret
in
outsb
cmc
mov
mov
out
popf
in
push
ds
int3
pop
es
xchg
dec
sbb
pop
xchg
nop
jbe
add
cmp
or
sbb
test
push
lret
and
pop
push
mov
xor
mov
xchg
mov
push
lahf
mov
dec
out
rcrl
mov
mov
dec
sarb
in
inc
outsl
sbb
frstor
mov
mov
jo
mov
push
push
sbb
mov
mov
inc
and
aam
add
jbe
jmp
and
cmp
cli
fisttpl
hlt
jp
data16
mov
call
int
movsl
push
mov
lock
orb
push
xchg
out
addb
adc
jno
mov
dec
call
push
addr16
in
jmp
mov
repz
add
sti
add
out
xchg
dec
das
jecxz
pop
or
shl
lods
test
stos
inc
push
dec
nop
xchg
decl
push
sbb
pop
aam
push
cvttps2pi
loop
lds
lods
adc
or
push
enter
rolb
mov
mov
jnp
adc
xlat
enter
lret
mov
mov
cli
mov
sub
rol
adc
xchg
loopne
jmp
push
mov
jb
xor
cmpsb
push
adc
aaa
hlt
out
repnz
xchg
sub
aad
fadds
mov
sbb
shl
std
in
rorl
loope
shrb
pop
rol
push
cmp
ljmp
xor
push
jo
add
roll
push
andl
xchg
cmp
xchg
je
mov
dec
sbb
rcll
and
or
cwtl
js
or
xor
fcoml
xchg
fsts
mov
push
cld
push
rorl
dec
push
or
mov
enter
imul
pop
jnp
sti
out
mov
aad
loopne
and
daa
mov
movb
xchg
jecxz
xor
cld
sub
fcomps
push
inc
or
test
pop
xchg
subl
ss
push
sub
out
mov
xor
out
xchg
les
mov
pop
enter
mov
add
adc
aam
add
xchg
dec
test
lahf
movsl
xchg
mov
hlt
scas
sbb
push
cmc
xchg
ficompl
dec
in
push
ret
in
adc
cmp
sub
dec
pop
les
dec
push
insb
lds
add
addr16
adc
cmp
jmp
xchg
dec
in
aam
xchg
jmp
imul
dec
mov
repnz
pusha
jmp
iret
add
xchg
popl
clc
test
xor
jmp
test
ret
fdivp
mov
enter
jmp
jge
sbb
call
into
or
cmp
inc
xchg
es
je
ljmp
mov
mov
cmp
sbb
int
cmp
lock
mov
and
mov
mov
aaa
pop
pusha
and
mov
stos
mov
xchg
cmp
push
ret
insb
test
mulb
push
push
dec
mov
test
repz
pusha
aas
sahf
push
push
inc
or
cwtl
test
jmp
dec
mov
xor
and
pusha
sub
pop
or
kmovb
lea
lret
inc
clc
pop
add
sub
loop
cmp
loop
mov
push
loope
sti
movsb
iret
jb
jnp
call
pusha
push
add
and
mov
pop
mov
xlat
push
xor
js
stos
stc
pop
add
xchg
mov
fisubrl
mov
loop
or
test
or
xor
cmpl
popa
ljmp
inc
xchg
or
push
les
ss
add
leave
in
insb
pop
subb
adc
cmp
sbb
les
push
fadds
cli
xor
mov
mov
add
mov
mov
mov
call
cmp
mov
dec
hlt
cmp
mov
or
sbb
lock
mov
sbb
sub
scas
push
imul
pop
mov
jmp
test
jle
les
cs
xchg
rolb
mov
lcall
cli
inc
out
xor
scas
nop
cltd
call
push
mov
in
inc
xchg
mov
push
movsl
or
dec
pop
int
das
mov
dec
popf
add
iret
lods
jmp
jb
dec
imul
adc
pop
iret
mov
test
sbb
in
mov
fadds
leave
aam
imul
sbb
push
mov
and
pop
cwtl
out
int3
loop
cli
sub
scas
add
inc
lahf
nop
jb
push
ret
cmpsl
fucomi
mov
int
pop
pusha
push
add
mov
cs
xor
and
cmp
jnp
andb
dec
lods
ror
xor
inc
sub
xchg
out
das
popl
mov
pop
sub
loop
cmpsl
in
call
adc
pop
aam
dec
test
lcall
fistps
mov
and
incb
icebp
xchg
add
dec
cs
pop
repnz
cli
repnz
sbb
push
lahf
add
fmull
ljmp
mov
inc
orl
pushf
into
xchg
std
pushl
into
loop
xchg
sub
dec
scas
push
test
mov
adc
je
pop
jmp
xchg
jne
xor
arpl
mov
pushf
push
jmp
stos
stos
lods
stc
mov
add
and
dec
mov
mov
cltd
loopne
and
jo
in
lcall
bswap
sub
mov
xchg
jb
mov
sbb
pop
cmc
leave
mov
add
adc
pop
xlat
mov
xor
pop
xchg
or
adc
inc
adc
test
in
pop
pop
rcr
subb
das
call
sbb
lea
loopne
push
pop
xor
stos
nop
pushf
mov
and
lods
clc
aam
cmp
sarl
fldln2
mov
sti
call
in
out
inc
test
xchg
rcll
inc
jne,pn
mov
inc
testl
jl
fs
pushf
add
cs
nop
mov
movsl
push
pusha
xchg
jb
sbbb
cmpsb
dec
in
add
mov
cmp
bound
mov
call
sbb
mov
jmp
leave
movsl
jb
push
test
xchg
shl
add
hlt
mov
push
push
push
and
loopne
call
xor
pusha
nop
cmc
sub
dec
and
insl
stos
or
dec
ret
loope
test
inc
add
pop
sbb
push
mov
popa
cmp
sub
push
or
hlt
sarl
pop
pop
jnp
cli
push
cltd
test
rcrb
or
and
dec
mov
xlat
sub
adc
inc
gs
add
movsb
push
dec
jle
fcmovbe
fidivs
test
lods
mov
in
ja
push
add
adc
dec
nop
call
pop
mov
xchg
lretw
adc
loop
inc
mov
pop
or
mov
sti
pushf
jne
in
dec
pushf
push
push
push
sbb
fsubrs
in
xlat
xor
stos
mov
in
mov
push
xchg
and
in
mov
add
add
mov
call
jne
scas
fcomps
xchg
inc
pop
sub
leave
jmp
push
pop
rorl
cmp
loopne
mov
js
pop
addr16
in
test
push
scas
mov
push
mov
les
test
inc
add
subb
dec
cli
sbb
test
test
xchg
mov
int3
mov
sbb
repz
sub
jg
or
and
call
movsl
push
jo
fildl
inc
or
shl
enter
pop
cli
ljmp
inc
dec
add
rcrb
inc
daa
es
icebp
jp
dec
jmp
fcomip
or
pop
test
cli
mov
adc
dec
jg
pop
jecxz
loop
push
push
mov
stos
sbb
xlat
pusha
sbb
or
xor
pop
xor
cli
gs
fcmovnb
and
push
or
or
mov
lds
sub
mov
cld
je
add
push
jmp
test
add
rcl
ljmp
add
pushf
push
sbb
in
dec
sub
adc
xlat
mov
out
inc
adc
outsb
adc
pop
push
mov
int3
cmp
les
decb
addb
clc
mov
repz
loop
fs
sub
in
jns
sbb
mov
movsl
add
cwtl
jmp
pop
mov
mov
and
pop
imul
fsub
mov
mov
jg
scas
xchg
aad
push
mov
or
lock
mov
mov
scas
ljmp
fsubrp
js
add
shll
jmp
cltd
nop
xor
inc
add
repnz
ret
push
dec
stos
xor
fwait
test
shr
lds
ljmp
orb
sub
mov
mov
jnp
pop
xor
sahf
cmpsl
gs
fbstp
jg
sbb
xor
loope
cwtl
mov
cli
shr
add
mov
xor
imul
das
fnstcw
xchg
scas
popf
mov
sub
push
jmp
xchg
call
enter
sub
nop
push
add
call
test
push
pop
fld
lret
fwait
pop
clc
cmp
flds
jg
add
sub
jmp
leave
xor
push
dec
pusha
xchg
int
outsl
repnz
adc
leave
mov
sub
ljmp
lret
mov
or
mov
cmc
dec
adc
call
test
loop
cwtl
or
pop
mov
dec
daa
dec
add
jle
cltd
leave
mov
push
push
push
pusha
inc
das
xor
push
sub
arpl
push
lds
xchg
icebp
pop
ret
pusha
cmp
mov
call
pop
mov
jne
bound
aad
lahf
roll
mov
jae
xlat
sub
xchg
test
cld
fnstcw
insl
mov
fdivs
add
mov
add
adc
push
call
es
mov
dec
add
inc
pop
aaa
jne
sbb
xchg
sbb
xchg
lcall
dec
repnz
hlt
mov
dec
xor
lcall
sub
ret
or
push
cmpb
or
enter
test
fwait
inc
push
or
rcll
scas
pop
fidivrs
frstor
out
xchg
jno
push
cmpb
out
mov
mov
sbb
push
sbb
and
cmc
lret
in
pop
jecxz
movl
addl
pop
dec
leave
addb
test
les
test
leave
or
rorl
aaa
pop
pushf
addr16
stos
je
mov
pop
cwtl
pushf
and
dec
xchg
push
push
and
adc
add
loope
cmp
mov
inc
in
mov
pop
lahf
add
fcom
das
xadd
add
popa
shlb
cmp
das
enter
imul
push
jl
test
xor
outsb
aas
repz
das
cmp
pusha
push
movsl
std
or
rcrl
jle
loopne
call
xchg
push
push
int3
and
call
dec
inc
mov
test
lcall
mov
xchg
test
sub
decl
xor
js
jecxz
inc
inc
ret
call
sub
imul
testl
adc
adcb
push
xchg
js
cmp
pop
sub
add
fadd
lea
aad
sbb
push
sub
scas
lcall
mov
adc
mov
out
jcxz
pop
jle
sbb
mov
and
push
enter
loope
jno
cwtl
sahf
cltd
subb
sbb
popa
jmp
lcall
adc
or
cmp
dec
mov
inc
push
adc
sahf
inc
adc
or
loope
mov
aad
das
xchg
xchg
mov
icebp
in
push
jae
adc
test
leave
dec
xorb
jne
dec
jl
and
dec
mov
or
push
cmpl
fstpl
aas
mov
add
xor
test
mov
pushf
push
cmp
loopne
push
pop
test
mov
cmpsl
add
mov
jle
pop
dec
xchg
or
add
jno
aas
mov
ret
mov
push
setge
loopne
push
lcall
jle
xchg
in
cmpsl
mov
fdivr
lahf
mov
je
ss
test
lock
pop
jno
sub
xor
mov
xor
jmp
jnp
int
mov
or
js
inc
jns
mov
push
ja
push
cmp
int
pushl
inc
mov
push
je
bound
pop
push
and
in
jmp
xor
lret
sub
mov
fldl
insl
or
cmc
dec
xchg
mov
or
pop
enter
adcb
int3
xchg
xchg
out
add
lea
jmp
jle
in
out
mov
lret
fimuls
inc
les
fmull
mov
jns
pop
mov
push
test
mov
pop
fwait
pop
pop
ret
ja
pop
sbb
mov
iret
jmp
nop
je
mov
inc
mov
fdiv
jecxz
fmuls
cli
fwait
lods
mov
out
xor
enter
mov
icebp
dec
push
sahf
or
mov
test
inc
dec
xor
push
xchg
into
or
and
gs
mov
out
mov
lock
stc
ss
add
es
xor
mov
push
int
lods
movsb
xchg
ficompl
not
adc
push
fsubl
sbb
scas
loope
roll
lea
mov
pop
out
pop
push
stc
in
push
mov
fildl
mov
les
adc
xchg
push
and
xchg
pop
aam
and
mov
js
dec
test
xlat
enter
mov
in
and
mov
adc
add
or
stos
loopne,pn
adc
or
dec
jns
adc
mov
dec
pop
test
call
sub
jne
sub
ret
pop
and
dec
ficomps
rcrl
mov
xchg
popf
nop
loopne
inc
xchg
outsb
das
pop
dec
test
pop
jle
test
sbb
adc
or
mov
outsl
std
adc
pushf
rolb
pop
xor
xor
loope
cmp
mov
call
enter
mov
cli
jne
iret
pushf
xchg
pop
or
ficoml
push
mov
mov
aas
leave
push
add
shl
cli
and
fs
push
loope
loopne
in
sub
cmc
jle
lods
jae
xchg
mov
loopne
and
lret
xchg
daa
arpl
lea
shll
ror
scas
ja
int3
xchg
add
jge
mov
xchg
dec
xor
sti
ljmp
push
mov
cwtl
xchg
mov
xchg
pop
clc
pop
add
xchg
xchg
fcoms
pop
mov
incb
or
xchg
lock
cmc
sub
lcall
lret
into
pop
int3
jge
cs
cmp
sub
cmp
mov
jns
sbb
mov
mov
mov
xor
stos
pop
jno
gs
loope
xchg
aas
icebp
or
push
in
fnstcw
xorb
mov
and
and
pop
add
fists
or
enter
inc
xchg
mov
mov
mov
mov
or
mov
cmp
mov
sub
xchg
push
pop
push
mov
test
add
dec
xchg
lahf
or
and
cmp
or
rclb
not
imul
pop
lea
mov
js
and
xchg
leave
lret
int3
sahf
vdivps
lods
nop
add
mov
cltd
jecxz
dec
mov
push
add
out
dec
lret
mov
ficomps
rcrb
fnstenv
cmpsb
sbb
pusha
dec
dec
les
pop
mov
mov
mov
jbe
lahf
sub
shlb
loop
out
push
mov
nop
mov
out
mov
pop
lea
xchg
test
test
scas
loopne
fs
mov
dec
mov
mov
jl
push
fldl
xchg
jg
jo
jl
push
xchg
lcall
inc
cmpsl
push
lods
popf
jmp
mov
clc
mov
mov
mov
push
sti
mov
les
pusha
jle
cmpsl
es
xchg
sub
test
sbb
loop
daa
add
add
testl
pop
outsl
xor
cld
inc
xchg
nop
add
ret
in
add
loop
loop
mov
rcll
adc
int3
jmp
cmpb
push
or
push
icebp
sbbb
insb
sub
cld
dec
lock
dec
inc
and
lods
out
test
out
js
mov
ljmp
sub
mov
dec
lds
in
xlat
shrl
xor
std
mov
and
aaa
test
fucomip
push
shl
jp
sbb
add
push
outsb
mov
or
cmp
and
mov
mov
subb
cmp
sarb
inc
jl
add
ss
sahf
add
sub
jg
mov
gs
xor
mov
push
and
cs
dec
mov
and
sub
sub
scas
mov
fcoml
adc
leave
and
out
push
aam
ret
add
mov
push
jmp
pushf
call
adc
mov
push
bound
jne
mov
pop
shlb
pusha
mov
inc
out
mov
popa
jnp
and
sub
xchg
and
push
stos
xchg
rcr
mov
dec
movsb
test
decl
jecxz
xchg
pop
sub
xchg
scas
in
xor
int
data16
repz
je
outsb
dec
fsubrp
cmp
negl
add
pop
ljmp
fidivrs
scas
pop
mov
call
push
or
outsb
pusha
mov
inc
popf
test
out
pusha
jmp
rol
addr16
pop
dec
push
mov
sub
ficoml
rcl
fnstcw
xor
cltd
jg
sub
mov
adc
ficompl
out
jns
test
sbb
xor
test
add
rorl
pushf
push
dec
fisubrl
fadds
nop
lods
into
adc
hlt
or
mov
loope
sub
inc
imul
inc
mov
or
call
or
lea
push
ja
adc
popf
jne
dec
lret
sbb
daa
mov
faddl
pop
xchg
inc
xor
aaa
mov
xor
sbb
xchg
enter
jecxz
xor
shrb
or
pop
mov
inc
gs
addr16
testb
pop
add
movsb
lods
mov
add
sahf
jne
xor
mov
xchg
repz
mov
leave
xchg
mov
incb
push
es
movsb
inc
movsl
int
insb
sbbl
std
imul
daa
xchg
mov
cmc
mov
mov
or
popa
stos
cmp
push
jnp
cmp
jnp
js
data16
pop
adc
cmpsb
movsb
or
add
or
call
movsb
lea
scas
or
or
in
mov
pop
xor
jb
mov
push
mov
loop
mov
dec
fisubs
pop
mov
cmp
je
jmp
pop
out
pop
lds
aad
pushf
xchg
incl
scas
cmc
push
stos
dec
mov
jmp
push
sub
in
jge
jle
sarb
sahf
test
mov
push
and
frstor
test
imul
ja
mov
popa
out
iret
ds
push
cmpsl
pop
aam
daa
rolb
popf
stc
sub
mov
mov
jb
lods
pushf
in
xor
outsb
dec
clc
cmp
or
les
jns
add
xchg
sarb
cmc
dec
aaa
stos
and
out
cltd
call
push
mov
js
xchg
in
shrl
mov
or
lods
and
ret
sub
mov
mov
call
xor
mov
push
mov
fldcw
xlat
sub
adc
xorb
xchg
outsl
rolb
in
mov
add
push
sbb
pusha
gs
mov
push
jle
mov
jmp
pop
arpl
inc
subl
push
aaa
add
test
stos
out
pop
rorl
rorl
bnd
js
test
notb
xchg
add
or
fdivl
jmp
icebp
or
fs
lcall
fldcw
pop
int3
out
xchg
shlb
inc
push
jg
push
dec
inc
icebp
push
sub
xchg
xor
jnp
test
jno
push
scas
shrl
aam
push
test
mov
and
adc
xchg
test
ret
dec
pusha
loopne
fcoms
in
xchg
cwtl
stc
push
ds
lcall
xor
jge
push
cld
loopne
stos
mov
movsb
les
add
mov
outsb
pusha
cs
insl
jo
daa
lahf
push
push
xchg
mov
call
or
inc
ret
pop
popf
inc
hlt
push
and
mov
add
pushf
push
jecxz
addr16
xor
cmp
in
sub
std
adcl
loope
inc
xchg
push
rcl
clc
les
imul
add
push
xchg
add
ja
call
aas
in
adc
push
xor
mov
jle
loop
clc
adc
or
dec
jmp
jle
pop
lahf
cmp
dec
add
push
add
dec
out
xchg
mov
pusha
mov
mov
or
fucomi
shll
dec
fsubrl
scas
adc
or
cli
scas
pop
dec
jl
bound
ficompl
push
add
dec
mov
dec
repnz
mov
into
pop
cs
sub
jg
mov
mov
adc
int
push
inc
arpl
push
dec
lcall
push
aam
mov
pusha
call
loop
mov
adcl
xor
call
cmp
cmc
int3
call
neg
sub
push
das
lds
mov
and
lods
ja
sahf
jge
lret
mov
fwait
xor
inc
adcb
loope
sbb
stc
adcl
xchg
add
lret
or
xchg
lock
sbb
setl
push
add
mov
cmpsb
in
or
mov
xor
cli
adc
inc
in
arpl
jmp
inc
pop
inc
insl
shl
sbb
push
movl
loop
xor
jae
sti
mov
mov
pop
and
dec
shlb
inc
test
mov
in
shrl
mov
push
dec
loop
inc
mov
push
sbb
jmp
jo
cwtl
mov
cltd
dec
pop
adc
out
ljmp
add
in
sub
call
sub
js
cli
insb
xor
xchg
or
mov
sahf
bound
mov
ja
mov
push
adc
push
inc
lods
mov
pushf
lods
cmp
lcall
dec
movsb
lcall
in
and
test
ds
mov
and
mov
xchg
sub
push
pop
fsubp
cmp
in
push
pusha
mov
nop
cmpsb
ret
movsb
fwait
aam
mov
cmc
into
push
out
or
mov
lds
gs
jl
clc
pop
pop
push
mov
mov
push
push
push
pop
add
sub
fsts
pop
call
jl
cmp
jge
cmpb
clc
sbb
lret
or
adc
mov
bnd
sub
and
in
xchg
mov
mov
push
push
jnp
lock
pusha
inc
es
fnstcw
test
xor
subb
cmp
add
jmp
insb
rorb
aam
sbb
movsb
insl
push
addr16
lcall
cmc
out
xor
repnz
dec
scas
bound
inc
rol
and
orl
dec
sub
call
nop
cmc
xchg
leave
pop
mov
sbb
lods
ss
repnz
mov
out
jbe
js
sub
loope
add
dec
sbb
and
jmp
call
test
mov
sub
inc
stos
jmp
lahf
mov
mov
sub
nop
das
cmc
dec
sub
je
push
jmp
call
xchg
and
cmp
add
xchg
cwtl
das
loop
outsb
lahf
inc
hlt
idivb
ret
sbb
je
test
mov
jmp
jae
enter
sbb
inc
mov
jae
pop
sub
mov
and
adc
jno
lods
aam
push
jg
pop
out
insb
dec
in
xor
rcr
adc
or
call
mov
cmovns
mov
add
cltd
mov
test
call
xchg
rcl
sub
decb
or
dec
xchg
add
out
sbb
mov
push
ret
cmp
push
les
mov
mov
add
cli
mov
add
test
lods
jmp
jae
nop
adc
popl
mov
mov
ret
loope
das
xchg
pop
xchg
repnz
insb
adcl
stos
sahf
push
call
mov
mov
cmc
and
xor
push
in
sub
sbb
test
adc
add
lods
push
cmp
divb
mov
push
cmp
dec
cmp
jbe
ffree
adc
mov
mov
add
xchg
cwtl
mov
cld
mov
daa
rolb
jmp
das
je
outsl
imul
fnstcw
mov
lods
or
cmp
call
imulb
fwait
shlb
or
pop
cli
inc
out
clc
sbb
ret
inc
push
imul
or
push
push
add
out
add
jbe
mov
adc
sub
xor
mov
mov
call
lods
cmp
mov
pop
push
insb
mov
adc
scas
pop
xchg
add
shrl
mov
les
seta
rcll
jb
mov
or
add
mov
push
sbb
fsubs
dec
jae
xor
push
jmp
cltd
shll
push
inc
shrl
xchg
xlat
sbb
pop
pop
and
push
xchg
andb
lods
dec
call
pushf
mov
pop
cld
jmp
sahf
orb
rorb
mov
jmp
in
pop
cmp
test
mov
js
jne
in
cmp
hlt
sub
sbb
ret
out
adc
pop
jecxz
adc
push
or
push
pop
add
int3
call
movsb
cli
leave
sub
xchg
and
into
dec
movsl
mov
adc
or
je
bound
ret
orb
push
nop
je
dec
rorb
fstpl
dec
in
cs
insl
pop
push
xor
das
cmp
ret
gs
aam
popf
mov
mov
cld
push
inc
sbb
cmp
xchg
or
mov
jge
jecxz
loope
sbb
mov
xchg
jnp
adc
in
adc
mov
or
push
arpl
adc
cmp
in
cli
je
rclb
inc
mov
mov
std
enter
shrl
repnz
mov
shll
incb
pop
mov
adc
shl
inc
sub
call
sub
add
fcom
loop
jge
dec
jo
xor
cmpsb
pop
cltd
xchg
dec
lock
adc
ret
test
call
imul
cmpsb
dec
push
pop
popa
pop
imul
sbb
push
fsubl
bound
mov
jne
mov
push
leave
daa
or
push
xchg
rcl
shlb
and
sbb
pushf
xchg
and
out
lods
out
dec
dec
mov
jnp
daa
and
sub
push
out
push
mov
call
add
jmp
out
fcoms
les
aam
cmp
clc
cli
hlt
bound
mov
dec
sub
or
jle
mov
push
push
jmp
mov
clc
test
es
cmpsl
cmp
iret
mov
dec
sub
mov
cwtl
push
call
rcr
adc
aaa
arpl
in
jmp
pop
pusha
or
rorl
leave
adc
push
test
mov
flds
push
dec
xor
adc
push
xchg
adc
push
call
add
adc
push
pushf
mov
dec
push
mov
add
push
pop
call
and
data16
sahf
mov
push
dec
ret
jl
jmp
push
movsb
shlb
or
pop
loop
xchg
into
pop
mov
mov
mov
int
ja
add
call
push
adc
lahf
and
dec
mov
int
int
inc
inc
imul
sbb
bound
jmp
fsubrl
es
icebp
imul
hlt
cs
adc
es
loopne
jl
ja
es
mov
stos
adc
mull
sub
jmp
and
or
sti
imul
lods
ret
lret
jbe
inc
inc
mov
lea
xchg
mov
mov
push
xchg
add
data16
jnp
pusha
and
mov
sbb
cmp
ficompl
add
das
mov
push
cmp
sub
incl
lret
dec
enter
ret
fldenv
mov
mov
push
notb
mov
imul
fstpl
inc
testl
inc
mov
xorb
lods
outsb
sub
call
movsl
loopne
xor
cld
jne
dec
or
mov
lret
or
dec
dec
pop
mov
xchg
mov
pushf
mov
insb
lret
imulb
jmp
sub
pusha
add
and
clc
fisttpl
into
pop
popf
dec
jecxz
outsb
pushf
cli
andl
iret
lret
add
push
cmc
mov
movsl
mov
decl
jnp
mov
gs
add
sub
call
out
pusha
dec
cmp
movsl
mov
jg
ljmp
mov
iret
aam
inc
js
or
shrb
loop
sub
test
shrl
aad
fdivs
xchg
dec
push
sar
mov
jmp
call
ret
or
popf
jmp
pushf
insl
mov
sub
sti
pop
push
pop
mov
data16
in
fisubrl
mov
repz
iret
imul
dec
sbb
dec
push
adc
call
stc
decb
mov
mov
dec
mov
xchg
outsl
or
addr16
imul
out
out
jb
push
push
xor
sbb
call
push
mov
sub
add
clc
stc
cmc
pop
icebp
xchg
inc
test
jo
int3
shl
daa
xor
sub
xchg
mov
jg
sub
out
popf
push
adc
dec
xchg
xor
sbb
mov
loopne
and
cmp
out
adc
cli
mov
and
adc
push
shr
aad
pop
insl
and
pop
into
imul
dec
inc
mov
and
jge
cs
mov
sbb
bound
repnz
cli
aam
mov
sub
xlat
add
push
roll
lods
adc
rcr
dec
push
jbe
nop
xchg
jl
ljmp
rorl
jmp
lods
xchg
push
pop
nop
call
clc
or
mov
lods
sarb
xor
dec
insb
lds
shrb
data16
sub
lahf
not
hlt
inc
push
inc
mov
and
pusha
pop
ds
sar
add
cmc
push
mull
mov
push
lods
loopne
cmp
sbb
int
mov
mov
int
cwtl
push
mov
push
scas
or
nop
xchg
sbbb
cltd
ret
lcall
add
cs
aam
or
imul
add
jp
stos
out
push
adc
pop
test
pushf
js
cwtl
xor
bndldx
imul
dec
dec
jp
jo
push
iret
jmp
dec
rol
stc
insb
movsb
data16
sbb
insl
or
add
mov
popf
call
clc
test
int3
pop
adc
pushf
push
mov
pop
stc
js
push
jg
mov
adc
push
outsb
mov
mov
jne
mull
data16
xchg
mov
mov
pop
hlt
xchg
cli
dec
dec
jmp
and
sbb
xchg
pop
push
loopne
sbb
mov
dec
jo
pop
int3
mov
dec
les
xor
lods
sti
subb
ret
pop
sahf
aaa
inc
scas
loop
mov
dec
push
int3
jnp
out
fwait
add
push
lea
add
xchg
jmp
int3
cmp
xchg
pcmpgtd
jne
and
xor
lods
adc
aas
es
clc
mov
nop
add
add
or
out
sub
push
xlat
xor
jg
xchg
iret
das
cs
mov
or
int3
xor
jae
xchg
ret
icebp
jnp
outsb
repz
popa
lret
inc
or
push
int3
lahf
jo
daa
rcll
mov
xchg
mov
cwtl
mov
mov
adc
add
adc
mov
and
xchg
lea
mov
jge
pop
test
insb
fwait
or
mov
xchg
push
sbb
pop
shrl
mov
jmp
lahf
push
pusha
popa
cmp
and
jmp
outsb
icebp
and
sbb
dec
ret
jo
jns
rorl
mov
mov
pop
dec
icebp
std
push
das
cmp
cli
fdivs
sub
nop
or
xor
in
push
pop
push
pusha
sbb
xorb
ss
xchg
adc
sub
pop
pushf
lock
test
mov
or
mull
inc
sti
pop
push
call
push
jmp
pop
dec
test
scas
xor
or
fisubrl
lea
xchg
mov
jge
mov
mov
add
xchg
pop
inc
adc
lcall
adc
add
jno
data16
xchg
pushf
mov
push
rcrb
out
and
lock
jge
ficoml
lea
push
aaa
xchg
pop
mov
mov
cmpsb
xchg
inc
fmuls
test
into
cs
aas
pop
or
xor
arpl
mov
fwait
scas
xchg
xchg
inc
fnstcw
lret
push
cli
je
push
xor
add
cli
test
in
cmp
add
call
mov
dec
inc
add
ds
push
mov
and
loope
cld
sub
rorl
and
sbb
clc
adc
sbb
mov
mov
push
sub
xlat
inc
mov
in
push
lret
pop
jmp
mov
aaa
fmulp
cmc
cs
push
imul
and
rorb
mov
and
inc
push
repnz
add
pop
inc
inc
aad
jb,pn
test
add
sub
movsl
loop
pop
cmp
push
rcrl
shlb
js
adc
faddl
std
cwtl
mov
es
or
into
repz
adc
jb
adc
call
std
add
cmp
das
pop
push
scas
and
cmc
pop
push
xchg
ja
push
fsubrp
rcrb
enter
movsb
xchg
arpl
repz
mov
mov
mov
addr16
jb
enter
adc
jg
sti
enter
adc
jle
mov
xchg
jg
dec
pop
sbb
lret
jmp
aaa
repnz
es
pop
or
xchg
ss
out
in
jg
fs
leave
xchg
push
inc
adc
adc
jae
add
mov
or
xchg
fcomip
xchg
idivl
push
mov
inc
adc
xlat
jno
sahf
add
aam
or
cli
xchg
xchg
adc
fldl
jge
movsl
mov
pop
mov
mov
jp
arpl
xor
mov
push
inc
xor
dec
sbb
push
xchg
fimull
sarb
fnstenv
scas
mov
fdivl
mov
xor
ja
adc
leave
jp
sub
shll
aad
nop
stos
xor
pushf
es
xor
jmp
mov
and
inc
ja
push
mov
movsb
and
popf
add
out
int3
test
fisttpl
or
add
sbbl
shrb
les
inc
dec
cs
hlt
arpl
test
jmp
jmp
rclb
pop
arpl
mov
sarb
fcompl
jae
popa
inc
ss
sbb
dec
mov
movsl
push
aam
loop
lret
jmp
daa
add
cmp
std
cltd
pop
mov
inc
and
iret
adc
rcll
cmp
scas
jbe
mov
sarb
pusha
cmp
pusha
les
jge
lods
pop
pop
xor
lret
lret
xchg
repnz
mov
cli
fs
mov
xchg
jo
mov
roll
leave
fcom
pop
cwtl
dec
ljmp
sbb
orb
mov
les
adc
out
and
nop
or
dec
sbb
gs
pop
push
jmp
cmp
fstl
jo
or
popf
int3
mull
aam
sub
mov
jbe
push
sti
out
es
aas
cs
mov
and
push
cmp
rorb
out
add
or
mov
pop
xchg
mov
mov
jecxz
andb
sete
cmpsl
in
dec
stc
jmp
pop
lahf
dec
pusha
cmc
test
jg
inc
mov
adc
mov
cmp
sbb
cmp
pusha
and
aaa
insl
pop
fs
jg
divl
add
push
shlb
dec
xchg
mov
mov
xor
dec
add
lea
psrld
add
sub
mov
xchg
pop
inc
fsubr
rcll
dec
sub
enter
mov
add
out
int3
inc
sub
jo
or
int
cli
shll
mov
popa
jns
xchg
xchg
jle
sub
es
push
add
dec
mov
lret
mov
cwtl
ret
fcmovnu
mov
enter
test
nop
ljmp
or
cmpsl
jb
pop
mov
jl
mov
or
cmc
xor
adcl
lret
bound
ret
fwait
add
jnp
scas
xchg
mov
imul
add
pop
ds
pop
arpl
xchg
and
inc
cmp
pusha
call
dec
fs
popl
adc
int3
add
out
jmp
call
cmpsl
lock
dec
inc
stos
es
rorl
mov
and
mov
hlt
ja
fnsave
mov
jne
jmp
xor
and
cmc
lods
loope
xchg
fiadds
les
fwait
cmp
mov
jl
push
jge
lea
lahf
jmp
add
sti
mov
mov
popf
dec
cld
iret
mov
addb
sub
movsb
es
dec
xchg
in
mov
xlat
dec
lods
call
bound
xchg
mov
loop
pusha
mov
mov
mov
rcl
add
es
push
sti
lea
inc
inc
adc
ret
insb
mov
inc
dec
push
imull
or
push
dec
call
pop
dec
or
mov
clc
xchg
inc
sub
pop
sub
repnz
aaa
fmuls
lock
cwtl
inc
mov
filds
mov
pop
jne
outsb
sbb
jmp
mov
jmp
int
xor
cmpsl
push
push
ret
mov
std
or
add
in
scas
xchg
adc
fwait
mov
in
push
or
mov
out
mov
das
cmp
outsl
and
rcll
adc
sub
inc
push
add
lods
icebp
test
and
jo
mov
into
pop
dec
fsubl
jne
jne
pop
popa
pop
loope
in
sbb
mov
push
in
mov
lret
cmp
notb
pop
xchg
fmull
xor
pop
data16
mov
sbbb
push
inc
lods
jp
mov
adc
sub
test
bound
jle
and
clc
xchg
push
mov
lahf
cltd
and
dec
adc
pop
and
push
mov
rcrl
or
addr16
into
adc
int3
adc
add
xchg
xor
call
inc
jnp
sub
pop
push
lcall
shr
rcrb
push
jnp
out
adc
sbb
sub
mov
xchg
xchg
loopne
sub
sub
xor
cltd
push
bound
adc
pusha
jge
imul
cltd
xchg
xor
gs
cmpsl
sub
lret
pusha
pop
addl
adc
dec
movsb
sbb
adc
mov
imul
aam
mov
call
add
bound
sub
sub
shl
xor
in
mov
jmp
nop
pusha
insl
mov
cs
sarb
push
jne
ret
pop
or
dec
in
and
sbb
and
pop
xchg
and
and
hlt
add
sarl
scas
shlb
rorb
dec
shll
scas
lret
mov
push
js
jl
test
movb
mov
movsl
fimull
pop
xchg
enter
in
push
sub
mov
pop
mov
ficomps
icebp
cmp
mov
push
ds
xchg
push
and
stc
dec
mov
jp
mov
shlb
pusha
shl
fldcw
cli
and
mov
je
test
push
sbb
jmp
push
adc
or
pop
adc
clc
test
stc
jmp
lods
data16
jne
sub
cld
test
fwait
push
js
cwtl
jmp
xlat
sub
insl
mov
fmul
movsl
in
pop
adc
jecxz
daa
sbb
nop
pushf
mov
jmp
sbb
and
rorb
mov
daa
inc
jge
cs
xchg
mov
pop
subb
push
loop
mov
and
out
stc
pusha
lds
loopne
jmp
cli
sub
std
cmp
loop
add
fucomip
stos
lds
dec
xchg
int
and
mov
or
enter
xlat
mov
imul
sub
pop
ret
adc
int3
aaa
icebp
dec
pop
mov
or
jnp
cmovb
inc
mov
jg
xor
sbb
xchg
push
and
mov
rcrl
push
dec
jne
xchg
push
push
mov
mov
xchg
std
inc
fnsave
dec
push
clc
loope
dec
pop
or
push
movsl
popa
or
pop
sahf
add
xchg
ljmp
jne
cmp
inc
or
aam
mov
or
jmp
mov
or
or
sarb
icebp
add
call
movsl
stos
push
push
sub
and
clc
repz
push
lods
cmp
in
xchg
jb
mov
mov
shlb
out
aam
mov
shrl
push
pop
ja
stos
movsl
mov
xchg
addr16
sub
lret
jne
sbb
push
lea
addr16
stc
xor
xchg
fiaddl
add
in
pop
nop
pop
rorb
xchg
push
loope
xor
inc
test
dec
mov
fcmovnu
mov
jno
loopne
or
test
das
pusha
push
pop
outsl
push
mov
jno
or
in
jle
enter
pop
enter
call
sbbl
jge
pop
jmp
lret
ret
aam
mov
or
or
cwtl
pop
mov
bswap
lahf
lret
sub
push
testb
xor
cmpsb
jae
sbbl
and
or
lods
inc
mov
push
push
daa
mov
push
xchg
xor
mov
sub
aad
pop
insb
popf
push
push
pop
push
mov
add
lcall
mov
pushf
loop
xchg
sarb
push
pop
stc
add
or
or
push
push
insb
pusha
mov
push
lret
and
xchg
sbb
ret
call
inc
inc
aad
sub
les
mov
or
cmp
mov
xor
in
xchg
pop
scas
xor
call
mov
sub
das
pusha
mov
stc
fldl
pushf
push
sarb
mov
lret
pop
xor
add
mov
inc
inc
lock
xor
shll
push
adc
mov
xchg
addl
dec
mov
mov
xchg
je
mov
cmp
mov
insb
sbb
pop
nop
push
jmp
dec
pusha
inc
ret
add
jnp
cmp
cmp
lods
mov
mov
xlat
mov
pop
loopne
mov
and
lock
pop
sub
nop
call
rcll
dec
subl
xchg
test
sbb
xchg
outsb
dec
sahf
aam
lods
mov
add
push
xchg
pop
rcll
scas
jno
jbe
add
push
iret
mov
sbb
push
lea
mov
push
sbb
call
jge
inc
enter
movsb
rorb
shlb
jb
or
jg
and
mov
call
incl
fs
cmpsb
loopne
xor
js
dec
add
mov
test
dec
dec
adc
lods
push
ret
enter
shll
popf
in
mov
cmpl
and
fldl
jl
inc
shr
push
fdivr
mov
xor
movsl
rclb
xchg
jb
sbb
mov
mov
jo
leave
sbb
mov
cld
sbb
and
or
out
sub
or
inc
movsb
test
inc
roll
in
cmp
jmp
add
mov
cmc
call
loopne
pop
xchg
cld
inc
inc
pushf
mov
rorl
fwait
adc
sub
sub
lahf
pop
mov
sub
test
xor
xchg
pop
push
adc
call
xchg
xor
mulps
pop
ljmp
and
pop
mov
ss
lods
sbb
lea
stos
sti
pop
xchg
adc
mov
adc
pushf
xchg
nop
cli
mov
mov
or
inc
fwait
cltd
les
stc
xor
enter
in
add
call
das
out
cs
daa
fstl
and
cli
cs
les
inc
jmp
push
movsl
mov
cmp
dec
fimull
push
jmp
pop
fldcw
fs
out
dec
or
and
sbb
add
xlat
mov
mov
and
xor
jne
faddl
inc
mov
popa
in
aas
fsubrl
xchg
insb
xchg
cs
ljmp
dec
push
jp
xorb
jecxz
jl
call
adc
imul
fisubs
pop
fildl
push
dec
sub
push
cli
test
cmp
aaa
lret
add
stos
mov
in
push
pop
lea
push
leave
cltd
bound
fmull
call
push
xchg
aam
lret
sbb
xor
lret
movsb
adc
or
push
lret
dec
xchg
dec
ret
out
jge
into
les
mov
ror
fstps
xlat
lret
lock
fs
adc
test
mov
call
mov
mov
push
and
lahf
imull
adc
pop
mov
mov
push
pop
nop
in
nop
lret
add
shll
hlt
jecxz
aam
push
ds
hlt
cmp
jmp
add
lea
es
cs
add
or
xlat
mov
lcall
jp
jle
es
ret
insl
popa
sub
lods
hlt
in
lret
dec
add
sbb
rorb
enter
dec
pop
mov
mov
mov
or
push
das
lea
hlt
jp
xor
sbb
mov
insl
or
js
jo
stos
xchg
lods
xchg
fwait
add
insb
bound
jge
mov
mov
cwtl
negl
inc
jmp
sub
std
mov
cmpb
mov
dec
sbb
push
and
scas
xchg
mov
inc
pusha
dec
call
repnz
add
cmpl
cli
std
ljmp
les
cwtl
shll
mov
jb
mov
inc
pop
les
add
rcrb
dec
sbb
cmp
sbb
dec
hlt
outsb
mov
cmp
or
or
jae
cmp
fdiv
xchg
rcrb
mov
push
fisubs
rclb
mov
fcompl
std
jno
lret
lcall
mov
push
insb
xchg
or
lods
stos
mov
outsl
lods
pop
loope
scas
mov
jae
jns
leave
pop
std
add
sbb
mov
pusha
sub
push
xchg
cs
mov
cld
push
fnstcw
adc
xor
fs
data16
popf
sti
imul
mov
lret
sub
add
inc
test
xchg
mov
iret
popf
hlt
push
or
inc
push
cmp
jno
jmp
daa
int3
movsl
push
lret
xor
mov
test
mov
push
dec
sub
jmp
gs
dec
sarb
out
xchg
loop
out
adc
xchg
enter
nop
cs
lret
add
insb
neg
pop
pop
mov
push
mov
inc
ljmp
or
mov
and
dec
cmp
adc
lret
push
aad
movsl
adc
push
mov
stc
cmp
sub
imul
push
add
inc
ja
mov
sub
cmp
xchg
xchg
fdivl
xchg
stos
loop
inc
xlat
xchg
xor
fsts
mov
xchg
mov
and
cmp
sub
and
pop
pop
add
iret
pusha
mov
jmp
test
xchg
shrb
push
call
lahf
xor
or
mov
stc
repnz
bound
gs
shrb
or
aam
push
int3
ret
or
xchg
in
jb
and
rcr
in
and
mov
mov
fdivrs
lods
pusha
mov
lds
mov
sbb
pusha
int3
jl
and
loope
mov
add
push
imul
pop
loop
cwtl
pop
fimuls
enter
call
push
dec
insb
mov
pusha
fmulp
inc
fcomps
incb
int
adc
sar
call
das
inc
add
js
leave
inc
sub
adc
mov
xor
adc
fdivr
test
xor
decb
sbb
mov
sub
xchg
loop
xor
fs
sbb
notl
outsb
int
in
xor
xor
adc
sub
sahf
add
addl
mov
fistps
fcompl
inc
shr
push
test
jne
adc
inc
jecxz
push
mov
mov
mov
aam
shlb
scas
mov
jns
add
and
add
in
lret
repnz
repnz
or
mov
jp
or
rclb
call
sbb
testb
xchg
loope
mov
sbb
nop
adc
xchg
hlt
xchg
popl
xchg
sahf
lea
mov
aas
push
test
mov
xor
pop
mov
mov
jb
ljmp
mov
imul
sub
gs
jmp
roll
add
mov
lret
out
leave
add
and
adc
adc
dec
adc
lcall
icebp
test
or
es
xchg
shll
push
sub
xchg
lret
shll
mov
xorl
sti
test
setbe
or
jno
jno
sub
pop
scas
les
pop
xchg
mov
push
mov
les
roll
into
lea
pusha
or
dec
jmp
cmp
xor
ds
sbb
imul
mov
les
xchg
in
or
lock
add
jge
or
mov
je
push
lea
aad
fs
lock
push
mov
jmp
push
jle
inc
mov
push
insl
xorl
in
mull
inc
rclb
in
mov
dec
aam
loopne
out
pushf
adc
jecxz
pop
add
sub
mov
ficoml
push
pop
in
pop
xor
fmull
dec
cmc
add
adc
jp
daa
fstps
shl
divl
mov
dec
jmp
cs
dec
cld
cmp
pop
out
mov
test
mov
inc
push
fdivr
leave
sub
sbb
sbb
mov
stc
mov
fbld
xor
stos
loopne
nop
push
push
mov
cmp
insb
xor
cmp
push
pop
fdivrs
pop
psubsw
jns
pop
sti
cs
or
lret
call
mov
cmp
or
mov
mov
dec
jmp
pop
sbbl
and
xchg
jbe
icebp
add
inc
test
int3
adc
out
xor
ret
mov
shlb
mov
cmpsb
or
inc
loopne
sub
cmpsl
mov
fcmovnb
mov
sbb
les
enter
out
push
xchg
dec
andb
cld
out
sub
add
mov
pushf
jecxz
test
cltd
sbbl
inc
imul
enter
mov
mov
mov
hlt
xchg
push
decb
sub
cmp
add
sti
lods
fwait
sbb
addb
dec
nop
mov
lahf
or
xchg
add
push
and
mov
dec
aas
mov
mov
jp
jmp
jns
pushf
cs
imul
xchg
dec
dec
outsb
and
pop
push
stos
pop
in
inc
arpl
fcoms
fmulp
out
dec
mov
jmp
mov
loop
sahf
xor
mov
xlat
mov
out
jno
or
repnz
dec
ss
or
lret
or
aad
aad
jnp
iret
ja
movsl
push
cmp
testl
push
ret
cmc
shl
add
outsl
xchg
mov
aam
inc
mov
out
adc
sbbb
sbb
loope
xchg
dec
nop
loop
dec
dec
ficompl
ljmp
inc
call
pop
jo
fwait
push
mov
call
aaa
test
inc
setns
cmp
shrl
nop
sub
jmp
das
xor
xchg
pushf
clc
aam
pusha
dec
dec
jg
fadd
mov
test
mov
addl
add
cwtl
dec
popa
push
fisubrl
or
data16
clc
hlt
jb
push
rol
mov
fsubr
mov
pop
daa
dec
mov
jmp
xchg
add
ret
adc
ja
adc
test
call
lods
lcall
cli
call
inc
mov
fwait
imul
stos
into
cs
adc
mov
pop
adc
pop
sub
and
cld
std
popf
sbb
jecxz
mov
stc
cmp
add
negb
add
jne
inc
aaa
xchg
mov
add
es
dec
in
jmp
mov
pop
add
pusha
mov
sbb
sbb
into
jb
sti
insl
scas
pusha
shrl
and
sbb
cmpsb
cmp
sub
lret
nop
add
hlt
out
inc
enter
lea
sti
fstl
fldl
mov
xor
orl
stos
sub
pop
pushf
lods
dec
subl
push
pop
adc
stc
out
enter
or
xchg
jmp
ja
in
push
xchg
call
outsb
sub
popa
clc
pop
cmp
add
data16
std
out
jg
pop
cmp
cli
or
std
mov
add
adcl
dec
sbb
rol
enter
mov
jmp
push
scas
adc
mov
dec
outsb
jae
fs
xchg
nop
call
mov
push
es
stos
push
call
jae
push
adc
lds
mov
jb
incb
push
xor
outsl
push
and
shr
hlt
jns
add
call
lods
cmp
mov
aam
xchg
or
bound
jle
xchg
fistl
aam
add
vdivps
add
xor
jmp
ja
jae
cmpsb
shll
mov
xchg
orl
sub
popl
push
call
cmp
rcll
pop
test
mov
mov
push
or
fdivrl
das
jns
mov
push
sub
dec
call
jmp
in
test
dec
loope
mov
out
test
lahf
xchg
rclb
or
mov
add
cmp
xor
and
aam
test
fsubrs
sti
dec
arpl
nop
jle
add
push
jle
push
sub
push
daa
ret
shl
popa
std
cmp
dec
push
cld
add
push
fidivl
fstps
enter
mov
in
or
stc
sub
mov
jg
push
push
xor
loope
inc
cltd
jg
sub
adc
push
mov
sub
mov
jecxz
or
insb
cmc
cmp
les
out
mov
and
mov
inc
mov
test
sbbb
xchg
shrb
repz
inc
stos
inc
shl
xchg
mov
pop
mov
outsb
xchg
je
mov
scas
stos
push
push
loop
cli
pop
xor
cltd
pop
sub
inc
xor
ficomps
dec
pop
pop
xor
or
sbbb
xchg
pop
nop
add
dec
idiv
pop
xchg
outsb
xlat
mov
dec
jno
js
in
mov
or
imul
cli
gs
out
xchg
mov
jb
popf
and
fxch
aas
mov
cli
add
scas
mov
lahf
mov
jmp
adc
dec
push
icebp
sahf
jle
in
daa
add
adc
scas
and
not
push
add
push
add
insb
shll
mov
mov
cmp
or
jo
mov
push
rcrb
mov
mov
fs
dec
aam
push
shl
xchg
stos
jl
sbbb
and
movsb
imul
dec
cmp
pop
jno
stc
jmp
pop
inc
jo
imul
pop
jp
mov
cmc
pop
inc
fs
ret
lahf
data16
stc
leave
sbb
std
push
into
daa
pushf
nop
adc
cmp
xchg
ret
cmp
sarb
cld
adc
add
dec
insb
repz
sub
pop
mov
nop
push
add
xor
and
or
push
mov
sub
sub
jp
std
out
dec
imul
xlat
popf
fsubl
call
xchg
orb
test
js
out
mov
leave
or
dec
add
xchg
arpl
sbb
dec
fldcw
iret
xchg
stos
push
addb
mov
mov
jmp
cwtl
add
sub
add
into
pop
mov
mov
mov
mov
dec
or
dec
inc
xor
imul
and
inc
jmp
je
jmp
sarb
cmpsb
cli
cli
xor
test
adc
xorb
lcall
cmpsl
adc
push
es
mov
jecxz
pop
loop
add
ss
pop
scas
in
xor
dec
sub
test
in
or
pushf
std
adc
xchg
nop
xchg
nop
mov
cmp
jnp
cmp
inc
and
imul
test
mov
imul
das
jmp
test
test
repz
inc
sub
inc
push
jl
pop
inc
fadd
pop
movsb
shlb
push
sub
xor
dec
inc
jle
push
push
add
call
scas
push
jmp
cmpsb
push
or
pusha
xor
push
push
call
aad
fwait
dec
or
dec
in
cld
cmpsb
outsb
and
sbbl
cli
rcrb
fsubp
cmpsl
mov
xchg
mov
jp
pop
xor
adc
jp
pusha
xor
push
xchg
leave
adc
and
cmp
and
js
lds
cmp
ret
add
clc
rcl
or
jecxz
cmp
jmp
out
les
pusha
mov
movsb
mov
push
and
jp
fsubrl
xchg
ror
pop
aas
mov
mov
lock
adc
mov
test
or
repnz
push
leave
lcall
cwtl
xchg
mov
repnz
pop
popa
pop
add
mov
loope
xchg
rcll
lahf
push
jns
mov
mov
popa
push
pusha
cs
xlat
xchg
adc
rcr
push
into
push
jg
jne
subl
xchg
mov
rcll
jmp
jle
inc
cmp
cld
test
enter
fimuls
or
lret
jle
roll
mov
imul
jmp
jg
data16
inc
adc
ret
pop
jnp
daa
rcrl
insl
pop
sub
sub
dec
mov
dec
pushf
stos
xor
repz
stc
das
push
mov
pushf
lea
add
scas
fcoml
push
add
rcl
cwtl
call
imul
in
icebp
inc
and
pop
popa
inc
adc
push
movsl
fsubrs
test
test
pop
dec
repz
sub
xor
cmp
stos
mov
cmp
les
pop
lahf
nop
mov
test
cmp
addr16
test
push
enter
mov
mov
push
hlt
jo
mov
xlat
add
jo
sbb
popa
mov
dec
icebp
testl
add
or
adc
orl
shlb
pop
xor
std
in
insb
cs
fs
inc
ljmp
pop
push
pop
pop
out
and
test
das
cmpsb
sub
inc
mov
sti
jle
stc
jno
enter
call
int
sbb
mov
stc
lods
out
popa
jno
mov
push
push
jge
push
inc
jnp
dec
push
push
dec
fs
orl
lret
adc
sub
adc
call
mov
outsb
in
stc
push
mov
add
jmp
dec
ret
cmp
out
push
leave
mov
push
pop
movsb
sahf
insl
adcb
aad
test
fcomip
mov
add
and
mov
dec
in
mov
mov
lds
push
fwait
add
cmpl
fs
cld
in
push
xchg
fdivrs
inc
cmpl
setge
call
add
push
pushf
retw
lret
scas
cmp
stos
mov
push
imulb
and
movsl
push
mov
cmp
mov
mov
dec
inc
int
pusha
adc
pop
subl
pusha
jbe
imul
or
or
jo
call
and
add
fsts
mov
outsl
or
dec
xchg
dec
sub
cli
repz
or
xchg
not
std
cld
mov
and
pop
and
lret
xor
pop
inc
dec
dec
sbb
dec
sub
ds
dec
insb
ljmp
jl
fs
adc
sbb
or
inc
fists
cwtl
mov
imul
in
or
movsl
fs
xchg
push
ret
sub
push
or
in
out
bound
adc
sarb
inc
push
mov
stos
test
outsl
movsl
shrb
leave
fcoms
test
les
jge
adc
repnz
sarb
push
pop
mov
sub
add
cwtl
pop
jmp
loop
push
jae
movsl
mov
cltd
or
in
sub
xchg
mov
push
jl
imul
mov
xchg
popf
fmull
daa
sbb
xchg
out
mov
pop
xchg
sbb
leave
mov
inc
jl
subl
std
mov
sarb
or
pop
pop
movsl
jo
and
mov
lret
xchg
jb
int3
lods
push
xor
loop
and
push
push
stos
call
dec
xlat
xor
adc
cmpsl
mov
mov
and
dec
and
imul
nop
test
adc
pop
jmp
call
push
and
shlb
push
push
pushf
cmp
cmp
jmp
out
loope
aam
cmpsl
pop
mov
sub
push
leave
rolb
not
dec
stc
push
decb
addr16
jo
push
and
aaa
je
inc
adc
add
xor
clc
push
jne
xor
fidivrs
add
fnstsw
mulb
mov
enter
dec
outsb
enter
jl,pt
dec
mov
lods
push
or
push
mov
mov
aaa
dec
mov
icebp
addr16
aad
adc
sbb
adc
jb
shr
ds
dec
test
jmp
nop
cli
sub
sub
daa
and
xlat
mov
lods
cs
adc
test
nop
arpl
xchg
push
dec
mov
mov
xor
pop
ret
outsl
test
and
and
sub
push
call
popf
arpl
cmp
clc
lret
mov
sti
fbld
lods
xor
imul
dec
push
fisttps
lcall
iret
cs
mov
jns
mov
sbb
adc
dec
push
add
mov
out
int3
xchg
call
push
and
mov
xor
xchg
mov
add
call
xchg
push
xlat
movsl
cs
shr
jns
xchg
iret
add
rcll
fisttps
inc
jno
outsb
xchg
mov
push
test
sbb
or
cmp
pop
xor
push
xlat
nop
aaa
xchg
mul
loope
push
or
jo
add
mov
sti
mov
sbb
loope
mov
lods
dec
jne
adc
subl
fadds
mov
dec
sub
in
les
add
mov
or
mov
mov
ja
push
xchg
mov
cmc
pushf
aad
pop
jecxz
xchg
outsl
ret
jg
roll
sub
rorb
sub
mov
loopne
mov
test
pop
inc
and
and
cmp
loopne
push
cltd
xlat
mov
scas
daa
rorl
dec
aad
jne
or
in
and
jp
mov
add
pop
jnp
int
in
inc
cmp
pop
call
les
nop
xor
cs
inc
mov
or
ficoms
scas
cmpsb
shrl
inc
mov
lods
and
push
push
loopne
nop
out
xlat
dec
cmpb
dec
movsb
test
add
jmp
sub
or
sub
xchg
pusha
xchg
mov
cmp
jnp
loop
push
das
or
ret
xchg
mov
add
fidivs
out
data16
or
jmp
lods
push
pop
cmp
push
pop
daa
jbe
imul
js
cmp
mov
jle
int3
and
push
shlb
shlb
sbb
sub
push
cld
aam
push
sub
aaa
ror
xchg
fcompl
jmp
sbb
sbb
call
pop
push
add
fisttpl
xor
or
jl
and
xor
movsb
loopne
push
ljmp
add
inc
lahf
mov
rol
adcb
fmull
push
cltd
push
mov
es
data16
jmp
int3
sub
clc
xchg
add
or
inc
or
xchg
sub
cmp
not
nop
jmp
cmc
dec
and
pop
pushf
fwait
xchg
test
sbb
and
mov
sub
fldpi
sbb
andl
loop
and
into
fistps
sub
and
mov
cmp
leave
sub
xor
or
xchg
clc
aaa
xchg
sti
call
or
jge
pop
xchg
test
shll
lods
sti
pop
or
nop
mov
add
or
or
pop
push
andb
add
int3
call
test
fsubrl
push
mov
loopne
not
add
add
pop
xchg
mov
rcrb
xor
sub
xor
call
mov
mov
mov
rcrb
test
mov
pop
mov
out
incb
push
push
notb
adcb
and
mov
pop
ds
push
adc
adc
adcl
or
jg
jecxz
sti
lods
mov
loope
push
data16
xor
leave
in
jle
jnp
aad
jge
sbb
lret
adc
xorb
pop
jno
or
push
adc
lret
pop
popf
test
scas
cwtl
outsl
repnz
aaa
ss
mov
cli
clc
ret
mov
repnz
and
lds
and
push
jmp
push
and
adc
fsubrp
push
push
xchg
iret
and
mov
andb
xchg
pop
fildll
clc
and
add
jp
push
sub
push
dec
dec
shrb
pusha
cmc
les
test
test
daa
clc
jmp
int3
ret
push
aaa
mov
jae
pushf
push
xchg
adcl
push
mov
add
jmp
cmc
fadd
sbb
jecxz
rcl
stos
dec
mov
ficompl
adc
sti
lret
jbe
icebp
test
hlt
mov
xchg
popf
jo
sti
pushf
sbb
fdivrl
lods
or
nop
shll
push
xchg
in
mov
xor
lahf
mov
adc
xchg
jle
and
aaa
mov
adc
push
push
inc
pop
or
in
lds
push
fwait
pop
and
jmp
cmp
adc
ljmp
movsb
orl
imul
and
ja
mov
lcall
outsl
xchg
mov
sbb
jmp
xor
nop
xchg
call
xor
incb
lahf
cwtl
mov
movsl
inc
out
adc
dec
sbb
scas
mov
mov
pop
orb
push
xlat
ret
fdivl
xor
bsr
roll
andb
in
inc
adcl
sub
xor
addr16
int
pusha
fcmovu
xchg
lods
cs
push
arpl
cmp
test
nop
or
mov
cli
add
add
inc
mulb
jmp
mov
and
nop
lea
imulb
dec
jle
mov
or
xchg
add
movsb
xchg
lret
push
call
push
push
iret
mov
in
adc
loope
sub
mov
pop
lahf
adc
mov
aaa
cld
test
in
cmc
adc
lea
mov
jae
add
add
xchg
shll
je
mov
sbb
dec
cli
aad
xor
mov
or
jle
pop
cmpsl
int3
pop
lea
int3
sub
aad
pop
mov
sbb
hlt
hlt
or
gs
xor
lahf
push
pop
aas
inc
fidivrl
xchg
scas
or
test
lret
lret
aam
insb
mov
std
jg
push
movsl
decb
aas
repz
xor
xchg
add
sti
lea
lret
inc
pusha
jge
sbb
rcl
xchg
pop
xlat
movsb
or
movsb
cmp
dec
push
pop
jne
mov
adc
std
aas
in
mov
nop
cli
addl
stos
loop
and
mov
add
xor
mov
orl
pop
in
out
in
xor
ljmp
jo
cmpsl
jo
xchg
dec
xor
ds
jmp
das
rorl
subb
es
sub
mov
or
xchg
lcall
pop
lret
stos
nop
sahf
and
add
sbb
test
jg
loope
cmp
xchg
std
fiadds
ss
pop
into
inc
push
imul
xchg
cmpsb
sub
sub
mov
add
imul
sbb
jbe
or
inc
clc
dec
fs
and
out
loop
cld
adc
sub
push
mov
mov
testl
orb
mov
and
mov
cmp
in
mov
lock
push
jne
test
xor
xchg
and
arpl
xchg
mov
cmp
push
bound
jge
gs
push
fisttpll
push
push
call
sbb
sti
daa
sub
lahf
push
push
in
cmp
mov
jne
xor
push
xor
ja
mov
mov
in
shl
dec
dec
jae
push
add
mov
je
or
movsl
dec
push
add
sbb
clc
adcb
inc
sub
push
daa
dec
push
adc
push
testb
lret
pusha
or
addl
jecxz
adc
push
xor
loope
cmpb
mov
xchg
inc
or
xor
sarb
scas
mov
icebp
sub
push
mov
cmc
dec
out
bound
daa
xchg
cmpl
loope
idivb
lods
decl
fisttps
adc
ds
imul
enter
or
push
sub
inc
adc
jge
pop
mov
jecxz
push
mov
xchg
pop
and
leave
dec
dec
std
xrelease
loope,pn
mov
test
shrl
popa
out
mov
push
mov
jecxz
pop
inc
mov
fcoml
cmp
or
loope
mov
ffreep
mov
sarl
stc
mov
cmc
sarb
lea
jmp
push
movsb
inc
cmp
sbb
push
lret
movsl
iret
dec
xor
jmp
fdivrs
pop
shrb
or
and
enter
push
out
jle
fldl
push
cmc
add
mov
inc
dec
mov
loop
addb
cmpsb
call
push
xor
cmc
stc
jmp
push
inc
lea
mov
add
inc
jmp
add
call
mov
cmp
adc
rcll
adc
dec
add
mov
mov
lods
imul
xchg
jmp
popf
inc
fsts
std
adc
sbb
dec
in
push
dec
mov
adc
testb
xchg
fwait
adc
pushf
cmp
cmpb
mov
loope
faddl
jmp
loop
push
or
push
cmp
jle
and
aam
jl
push
ret
dec
pop
fsubl
sub
xchg
push
into
and
add
xchg
cmpsb
jae
call
adc
inc
mov
jne
adc
cmp
adc
mov
out
mov
jp
sub
jmp
orb
cmpsb
xchg
pop
push
stos
push
scas
mov
sahf
or
mov
pusha
fcoml
inc
push
push
jmp
xchg
sti
or
push
fs
notb
inc
les
xor
call
dec
rcrl
inc
mov
pushf
call
xchg
insb
adc
in
and
mov
push
mov
std
xor
sub
and
sbb
mull
test
andl
rcrl
and
adc
xchg
sub
cmp
sub
pushf
xchg
jbe
jmp
inc
sub
pop
test
lahf
nop
pop
mov
out
mov
negl
jns
push
xor
mov
fmuls
inc
adcb
push
inc
leave
pop
lcall
fists
add
bound
adc
daa
enter
push
xlat
inc
push
ljmp
int
pop
ljmp
mov
adc
hlt
xchg
mov
push
jp
mov
sub
data16
mov
icebp
fwait
lahf
nop
jb
jns
sub
and
jo
test
mov
xchg
in
ret
rolb
lds
jmp
jae
push
idiv
push
rcrb
xor
nop
pop
lods
push
fidivs
in
fwait
xchg
mov
stos
add
scas
fisubs
xchg
jno
xchg
add
outsl
aad
rorb
sbb
ficomps
inc
ret
sbb
shll
xor
mov
mov
out
pop
sti
fsubs
mov
xor
mov
pushf
jmp
cwtl
stos
call
adc
xchg
lcall
jmp
stos
add
pop
ljmp
call
jmp
jmp
mov
arpl
dec
xchg
call
xor
hlt
rcrb
jmp
add
push
int3
adc
inc
fidivrl
add
fs
xchg
cmp
xor
sbb
pop
sbb
cmp
ret
cmp
mov
in
aad
les
cld
repnz
cld
cmp
test
add
mov
in
dec
push
int3
xor
loop
das
leave
adc
jmp
or
add
sub
pop
repz
sti
and
lret
mov
cmp
rcll
jnp
mov
nop
xchg
jb
out
std
sub
js
jge
jmp
aam
aaa
lahf
pop
jg
sti
fisubrs
cmp
lds
sahf
mov
xchg
jecxz
push
push
push
decb
enter
xchg
ljmp
repnz
mov
icebp
dec
sbb
pop
pop
cmp
pop
xor
inc
aad
popf
bsr
jmp
es
and
insb
and
or
leave
nop
xchg
adc
pop
and
ljmp
aad
sbb
jae
popf
inc
fdiv
fmuls
cmc
hlt
mov
add
mov
call
jl
pop
out
jo
call
pop
enter
repz
aam
repz
jmp
pop
inc
xorl
enter
aam
pushf
js
xchg
call
xchg
aas
fimull
or
add
movsl
jmp
sub
mov
add
ret
jg
push
jmp
xchg
mov
mov
ret
popa
jmp
xor
mulb
out
leave
nop
addr16
repnz
xchg
dec
pop
pushf
xor
dec
stos
mov
jmp
stos
add
out
mov
push
std
inc
test
je
add
in
notb
fwait
pusha
push
shr
xchg
rorl
xor
xchg
lret
shll
lock
ja
dec
dec
mov
xchg
cli
jo
nop
gs
add
cli
lret
push
sbb
pop
std
inc
mov
xchg
push
ret
jle
add
or
in
add
add
ss
jo
mov
add
loope
dec
inc
cltd
and
aam
or
add
roll
daa
adc
test
jno
pusha
add
xchg
inc
in
add
add
pop
inc
leave
add
loopne
mov
adc
inc
inc
outsb
addr16
imul
adc
dec
dec
jp
add
mov
add
and
adc
xor
inc
aas
sbb
jge
jmp
push
xchg
aam
push
pusha
lret
fsub
aad
adc
xchg
test
scas
std
ljmp
arpl
inc
shll
and
rcrl
sbb
fimull
test
xchg
outsb
scas
mov
ret
add
dec
inc
rol
mov
or
pop
bound
loopne
outsl
add
std
jge
test
inc
or
aam
xor
fsubr
sub
push
mov
out
add
loope
xor
mov
jg
js
mov
test
jbe
add
or
ljmp
dec
ret
and
loopne
mov
add
xorl
ret
inc
mov
push
faddl
and
mov
faddl
mov
jbe
cmp
fucomp
shrb
cwtl
xchg
xchg
inc
add
inc
jle
lsl
add
push
outsb
inc
adc
out
adc
test
clc
push
repnz
pop
pushf
adc
cmpsl
xchg
popa
mov
es
inc
das
add
jg
sub
fmull
addr16
push
or
and
sbb
faddl
pop
in
mov
push
push
aam
sbb
add
xorl
xor
push
mov
or
inc
jbe
hlt
cmc
clc
and
mov
addb
add
dec
ret
loopne
inc
pop
pop
lret
int3
fucomip
and
mov
cmpsl
mov
scas
or
fdivl
in
xchg
inc
fcoml
add
shrb
push
adc
test
sub
push
lds
pusha
fwait
orl
test
and
push
rol
inc
pop
adc
rorl
xchg
pusha
jecxz
mov
ret
jns
mov
aas
or
add
xchg
pop
pop
inc
push
push
cmp
int3
or
mov
andl
xchg
aad
call
add
pop
cwtl
icebp
popa
jae,pn
add
and
jbe
inc
inc
ja
add
sub
cmp
dec
adc
test
ret
mov
dec
jp
loopne
pop
sbb
or
pop
dec
inc
mull
shrl
and
mov
inc
xchg
and
or
pop
faddl
sub
nop
fdivrl
add
faddl
ljmp
data16
je
xor
xchg
cwtl
cmp
bound
roll
lock
add
ja
xor
add
fsubs
add
xor
xorb
sub
femms
into
cmpsl
sbb
cmp
inc
cmp
popa
adc
push
jae
jge
adc
add
jno
hlt
mov
add
decl
and
cmpsb
popf
loopne
adc
push
in
mov
add
inc
or
jge
xchg
add
sub
or
fimull
add
mov
test
sub
push
dec
aad
inc
cmc
insl
inc
xor
inc
roll
ljmp
mov
add
cmpsb
add
pop
out
xor
add
lahf
xor
incb
andb
jbe
rorb
add
push
pop
cmp
pop
add
mov
add
fsubrs
xchg
nop
pop
add
and
dec
jg
mov
insb
or
enter
inc
push
jnp
push
add
lahf
arpl
push
mov
push
dec
add
and
jmp
lret
jg
repz
add
inc
scas
and
out
sbb
xchg
movsl
in
movsb
cmp
ror
sub
pushf
sbb
mov
test
into
scas
sbb
sub
inc
add
jge
push
xchg
push
push
push
add
or
jg
adc
es
loope
jl
nop
cmc
add
pop
repz
into
sub
or
inc
popf
mov
fildll
lds
sbb
hlt
inc
mov
jmp
inc
add
push
lret
pusha
insb
stc
call
andl
add
movsl
lea
add
aad
gs
popa
and
das
adc
mov
xlat
add
dec
imul
lock
jo
lods
xchg
ret
push
clc
loope
in
cmp
inc
int3
mov
call
enter
add
inc
dec
lahf
and
jge
scas
mov
ljmp
ret
jae
fwait
add
sbb
dec
dec
out
addr16
dec
sub
push
adc
iret
or
loop
jge
or
xchg
xor
jbe
xchg
add
inc
ds
fcoms
push
sub
add
and
xor
or
adc
lods
add
mov
dec
fs
arpl
dec
cld
je
pushf
add
mov
inc
aad
add
popa
add
fldln2
jl
in
adc
push
pop
push
lods
add
fiaddl
je
mov
shlb
adc
inc
cmpsb
cli
ljmp
dec
inc
and
sub
test
mov
dec
out
lea
adc
add
xchg
loop
xchg
mov
and
pushl
mov
adc
dec
bound
enter
jp
loop
add
mov
sub
dec
inc
jae
adc
inc
cwtl
xchg
sub
adc
iret
mov
xchg
cmpl
out
and
add
idiv
or
push
pop
imul
sub
add
add
push
arpl
add
in
adc
ljmp
and
inc
xor
and
sbb
pop
jmp
add
fisubl
mul
pop
fnstenv
add
into
lods
sbb
ljmp
dec
js
or
add
sbb
fmull
xchg
add
test
shrb
sub
cwtl
and
scas
adc
sbb
inc
clc
mov
dec
mov
and
inc
lods
push
cwtl
and
mov
push
ret
aad
push
xor
mov
addb
cmpsb
jecxz
repnz
mov
push
hlt
pop
push
adcl
rcll
xor
and
outsb
mov
loop
call
jecxz
push
cmp
sarb
dec
add
negb
sahf
test
adc
dec
mov
nopl
mov
arpl
test
adc
add
xor
inc
dec
fldl
push
es
adc
int
jno
in
sbb
xor
es
dec
repz
jp
jne
jmp
push
lret
or
inc
adc
inc
add
sbb
or
mov
out
repz
out
push
jb
cmp
jge,pn
push
mov
add
sbb
add
imul
mov
pop
mov
hlt
xchg
lcall
clc
xchg
mov
mov
sbb
sbb
dec
add
dec
mov
cmp
pushf
leave
dec
add
pop
xorb
xchg
fimuls
adc
call
aaa
out
add
xchg
out
movsl
add
and
rorl
push
mov
push
aam
out
cld
addb
clc
push
mov
pop
ror
inc
in
inc
xchg
ds
cs
dec
dec
add
or
inc
xor
add
pop
pop
xchg
xchg
xchg
and
push
dec
call
out
adc
movsb
add
mov
sbb
or
mov
dec
pop
out
and
jge
or
ffreep
add
sub
and
inc
fcmovnbe
xchg
add
or
push
loop
xor
enter
jb
add
popa
sahf
movsl
sbb
leave
femms
das
mov
xchg
add
insl
test
and
push
outsb
shll
push
mov
mov
jb,pn
dec
adc
cs
out
and
pop
pop
xor
mov
aam
add
mov
popf
add
xchg
xchg
or
shlb
mov
mov
mov
lcall
mov
bound
add
dec
scas
icebp
out
je
imul
aad
int3
cmc
add
andb
mov
outsl
aam
lea
cmp
push
enter
scas
or
ja
pop
add
fnstsw
inc
adc
add
ret
push
inc
inc
shl
xchg
int3
hlt
out
or
aas
adcl
dec
xor
push
inc
mov
std
fmul
mov
ja
sbb
sbbl
adc
ret
xlat
inc
add
pop
lds
inc
adc
sub
mov
adc
dec
add
push
and
das
and
mov
clc
out
add
push
movsl
incb
insb
jb
xchg
mov
test
jbe
das
fiadds
shl
push
add
xchg
mov
sub
dec
dec
rclb
loop
into
test
lods
adc
jae
or
fistps
mov
in
insb
or
mov
mov
inc
pusha
iret
mov
fisubrl
call
add
and
pop
imul
push
fldt
fdivrl
dec
mov
pop
lret
pop
insb
inc
pop
jo
testb
add
xor
int3
inc
add
aad
mov
adcb
cli
sub
test
add
pop
and
ja
adc
out
xor
add
push
fbstp
sbbb
call
in
pop
cmp
rcll
mov
call
mov
call
xor
add
jp
out
and
push
out
add
push
and
nop
das
and
or
jo
jge
mull
popa
sarb
inc
ret
jl
dec
loop
inc
mov
scas
jae
and
adc
and
jle
outsb
xor
outsl
dec
mov
dec
popf
es
xor
xor
movsl
jo
sub
int
xchg
not
add
in
jnp
aad
lret
scas
jb
sbb
andb
add
mov
movsl
rcrb
dec
cmpsb
xchg
cltd
sub
sub
and
dec
sbb
and
add
sub
incb
add
outsb
sahf
cs
dec
dec
or
leave
movsb
fiaddl
fimuls
stc
loop
jge
aad
je
push
out
pusha
out
movsl
bound
xchg
xlat
dec
call
into
and
inc
pusha
mov
add
add
roll
pop
nop
ss
jnp
add
icebp
dec
mov
daa
xor
add
push
insl
jno
add
inc
push
xor
xorps
pushf
add
fwait
or
xchg
inc
call
add
daa
pop
insb
and
shll
out
add
adc
inc
add
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
sbb
xor
popf
or
adc
sbb
and
dec
lahf
pushf
lahf
mov
lahf
enter
call
lahf
clc
lahf
cld
mov
or
sub
inc
daa
dec
inc
mov
mov
pushl
sbb
aaa
push
popf
xchg
sbb
dec
daa
pop
inc
je
pop
cmp
jb
je
jbe
js
jp
jl
jle
jle
sbb
cmp
popf
adc
push
cmp
push
lahf
data16
jb
sbbl
mov
mov
lahf
in
out
lahf
clc
xchg
and
xchg
cmpsl
dec
pop
out
out
out
out
out
loope
cmp
xchg
fnstenv
in
sbb
aas
and
pop
push
cmp
fs
jle
jle
jle
jle
test
fmuls
add
jb
push
cmpsl
divb
and
xor
cmp
mov
aas
fisttpl
push
xor
dec
push
mov
setne
mov
iret
mov
iret
fcmove
clc
iret
inc
push
xor
xchg
mov
insb
shll
repz
lock
xor
in
call
jo
mov
sahf
cld
movsb
cld
lods
cld
push
cmp
and
cmp
xchg
aas
mov
aas
mov
dec
cld
imul
movsl
popf
ret
sbb
xor
add
call
stos
hlt
clc
bound
cmp
test
movsb
push
fwait
cmp
inc
cmpb
dec
or
cmp
daa
cmp
pop
xchg
ds
daa
jbe
fadds
das
dec
fdivs
xorl
in
mov
je
jbe
js
sbb
xor
popf
repnz
xor
aam
in
loope
call
cmp
sahf
out
incb
add
repnz
ds
popf
and
cmp
dec
push
pop
lahf
xchg
pop
scas
lahf
mov
clc
sbb
jb
je
jbe
js
jp
jl
ljmpw
xchg
inc
xor
es
in
push
cmp
pop
cmp
push
cmp
cmp
cmovae
jg
xchg
hlt
sar
loope
xor
imul
mov
stc
clc
stc
cld
clc
add
jbe
js
jp
jl
jle
jle
jle
push
loop
adc
sbb
and
sub
aaa
hlt
push
clc
addr16
jno
xor
cld
lcall
cld
cmp
aaa
inc
cmp
jbe
sahf
cltd
lahf
lods
pop
clc
addb
fstpt
test
pusha
dec
shld
add
jb
je
jbe
js
jp
jl
jle
dec
pop
inc
jle
push
jb
jp
cmpb
xchg
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
sbb
cmp
popf
sbb
aaa
push
cwtl
pavgw
insl
xchg
jge
cmp
call
add
xor
shlb
sbb
jno
andl
clc
mov
mov
cmpsb
cmp
push
dec
cmp
lcall
mov
push
dec
bound
out
out
in
rcl
xchg
rep
repz
mov
repz
sub
in
call
nop
hlt
mov
jle
jle
jle
jle
jle
jle
sbb
cmp
mov
mov
and
inc
sub
in
iret
sarl
inc
cmp
pop
mov
xchg
xchg
leave
sub
lahf
int3
lahf
aam
fmull
in
iret
hlt
lret
cld
daa
xor
adc
sbb
and
sub
xor
add
iret
in
pop
iret
fs
insb
iret
je
jl
test
mov
xchg
iret
pushf
iret
movsb
iret
lods
iret
mov
mov
iret
aam
fmul
in
in
iret
hlt
iret
cld
ret
add
or
adc
sbb
and
sub
xor
dec
inc
iret
dec
iret
push
iret
pop
iret
fs
insb
iret
je
jl
test
mov
xchg
iret
pushf
iret
movsb
iret
lods
iret
mov
mov
aam
fcompl
hlt
lahf
cld
xchg
or
adc
sbb
push
sub
xor
pop
inc
stc
dec
stc
push
stc
pop
stc
fs
insb
stc
je
jl
test
mov
xchg
stc
pushf
stc
movsb
stc
lods
stc
mov
ret
stc
iret
stc
fdivr
out
stc
hlt
clc
add
jb
je
jbe
js
pop
dec
aas
push
aas
pop
aas
pop
sub
int3
lahf
push
jbe
mov
leave
les
out
out
out
push
or
sbbb
add
adc
leave
or
adc
adc
sbb
sbb
and
and
out
aas
pop
aas
fs
je
js
jl
cli
test
cwtl
lahf
rclb
ror
aam
add
shl
stc
lock
js
lret
add
sub
cmp
dec
stc
push
js
jl
cmp
cld
mov
mov
nop
cld
test
push
pop
rcrb
fcompl
and
lret
addb
sub
xor
xor
lahf
cmp
inc
lahf
inc
lahf
dec
lahf
pop
xchg
js
xchg
test
mov
mov
nop
iret
xchg
iret
cwtl
iret
pushf
iret
mov
fsub
fsub
loopne
in
call
in
shrb
xor
aaa
call
inc
hlt
inc
mov
push
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
pop
lock
clc
je
pop
xor
pop
mov
cmp
xchg
sub
jle
xchg
pop
push
lahf
push
fistps
pop
lahf
insb
lahf
mov
pushf
xchg
mov
movsb
pop
fdivs
in
out
in
lea
mov
inc
ds
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
aas
fs
mov
pushf
lahf
movsb
lahf
test
lods
dec
mov
out
in
xchg
sar
add
add
or
adc
sbb
sbb
and
cmp
pop
repz
repz
repz
js
jl
xor
repz
mov
repz
repz
shl
aam
fdiv
in
sbb
aaa
adc
sbb
and
sub
sub
xor
fs
insb
lahf
jo
je
js
jl
sbbb
lahf
mov
lahf
int3
lahf
rclb
repz
in
call
xchg
sub
xor
add
jle
jle
jle
jle
dec
jl
dec
mov
mov
nop
iret
xchg
iret
cwtl
iret
pushf
leave
mov
fdivr
loopne
in
call
stc
hlt
stc
clc
stc
cld
sti
cmpl
jmp
xchg
inc
dec
out
out
out
out
out
out
out
out
out
out
loope
cmp
leave
or
adc
adc
sbb
sbb
xor
inc
stc
inc
stc
pusha
stc
push
stc
je
js
jl
cmp
stc
mov
fdivr
clc
clc
cmp
je
jbe
pop
outsl
add
subl
add
shlb
cmpsl
xor
in
call
xor
sub
aas
lahf
dec
pop
push
lahf
cli
test
cmp
mov
push
into
pusha
lret
jo
dec
in
push
cmp
pop
dec
pop
mov
punpckhwd
jno
jne
jns
jge
or
iret
xchg
iret
xchg
iret
cltd
ret
add
or
adc
adcb
shr
f2xm1
loope
inc
xor
js
xor
push
xor
int
je
xchg
push
cmp
rorl
cmp
add
add
sar
lods
pushf
sbbb
cwtl
mov
andl
dec
in
dec
sar
out
mov
ret
xor
ds
dec
dec
dec
push
iret
pop
iret
pop
iret
iret
iretw
push
outsb
popa
adc
iret
shl
fmuls
xor
push
je
dec
js
mov
dec
sti
xchg
or
jne
loop
fnstcw
aaa
std
leave
outsb
rcrl
jmp
test
das
cmp
inc
push
dec
cmp
xchg
mov
cmp
in
call
jecxz
push
sub
cmp
dec
cs
push
sahf
jno
add
clc
ret
adc
cmp
mov
cmp
and
inc
mov
sub
dec
clc
popf
lods
sahf
mov
pop
xchg
xor
and
ror
push
xor
es
sub
js
pop
xchg
cmpsb
aas
lret
xor
sbb
inc
leave
addr16
mov
repnz
and
jb
dec
jbe
js
jp
jl
dec
dec
mov
cmpsb
in
mov
adc
inc
push
cmp
sub
loope
jmp
dec
pop
push
or
iret
mov
adc
leave
fcom
out
fcoms
cmp
jbe
js
jp
jl
dec
cmpxchg
xor
cmpsb
ret
lods
rorl
orb
add
test
xor
sarl
es
push
xor
xchg
mov
dec
decb
xor
es
jmp
xchg
jl
pusha
inc
repnz
dec
js
stc
pop
stc
pop
stc
fs
jno
ja
cmp
fwait
cld
movsb
mov
rol
push
or
adc
sbb
and
sub
inc
jmp
mov
aas
aam
out
push
or
fs
sbbl
aam
stc
xchg
ss
popa
dec
aaa
mov
mov
pop
xchg
mov
rcl
fsub
out
clc
repnz
and
das
loope
jmp
arpl
aas
jge
mov
sarl
out
jo
into
sbb
cltd
enter
jmp
cld
pop
cmp
cmp
cmp
mov
aas
int
loope
aas
or
cmp
rolb
les
inc
pop
icebp
movsb
int3
adc
or
cmp
shlb
mov
adc
cmpb
mov
mov
div
push
dec
add
inc
aaa
xchg
cmp
mov
stc
enter
ljmp
and
cmp
cmp
cs
stc
dec
stc
push
cli
popa
negb
and
cld
fs
push
mov
pop
js
xor
lahf
lods
lahf
mov
mov
cmp
iret
ror
iret
enter
ror
aam
dec
fmul
dec
into
add
or
cmpsl
sbb
and
sub
sub
xor
cmp
pop
bound
pop
cs
fs
push
jl
or
lret
mov
rep
repz
mov
repz
mov
out
in
xchg
jbe
cmp
xorb
xchg
xor
cmp
xchg
test
jle
pop
fs
push
mov
mov
leave
ds
lods
stc
mov
mov
stc
int3
stc
shlb
cld
in
call
cld
add
cmp
cmp
pop
scas
cmp
cmp
pop
aas
arpl
insl
aas
ja
jge
lahf
lea
pop
mov
sarl
jl
loope
aas
divb
cmp
xchg
fs
jns
push
inc
cld
push
mov
sbbl
enter
cmpb
mov
push
and
xor
mov
cld
icebp
or
stos
sub
cmp
movsb
cmp
inc
lock
add
sub
addr16
cltd
mov
dec
in
mov
xor
je
jbe
js
jp
jl
cwtl
mov
push
je
jbe
js
jp
jl
jle
dec
lahf
leave
movsl
cmpsl
mov
push
cld
sar
cld
loope
out
push
pop
negl
or
and
xchg
aas
loope
pusha
jl
mov
jle
pop
imul
jnp
or
xchg
rorl
stc
lods
stc
mov
mov
stc
sar
fyl2xp1
fdivrp
jmp
aas
decl
add
mov
rorl
jmp
push
xor
outsl
xchg
les
mov
ret
mov
popa
mov
sub
jmp
inc
xchg
mov
lahf
push
lahf
push
lahf
pop
lahf
pop
xchg
pusha
ret
pop
into
adc
mov
pop
in
xchg
lock
lock
leave
cld
popa
les
cmp
pushf
repz
gs
je
fsubl
xchg
and
push
js
leave
test
int3
lcall
cltd
push
lock
adc
inc
inc
fs
int
and
cwtl
lcall
cltd
cmp
jb
pop
or
jbe
adc
sbb
and
cmpl
repz
je
js
in
pop
test
lods
enter
mov
loopne
nop
call
add
imul
test
je
xchg
mov
test
ds
mov
sub
out
loope
cmp
xchg
xchg
loope
jmp
movsb
push
or
sub
mov
pop
jg
iret
icebp
ret
sbb
daa
xchg
mov
dec
add
jmp
sbb
xor
popf
xor
push
jle
iret
movsb
iret
mov
lret
iret
in
lret
cld
inc
ficompl
leave
inc
sub
daa
popw
push
inc
and
in
lock
push
xor
xor
and
adc
and
pop
jne
in
call
dec
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
pop
jns
aas
cmpl
lea
mov
push
dec
fcoms
loope
sti
mov
fnstsw
loope
in
jmp
cmc
icebp
stc
stc
std
clc
add
jb
mov
jbe
js
jp
mov
sub
scas
sub
sub
rclb
cmp
inc
cli
mov
mov
repnz
sti
cli
mov
or
pop
lahf
sbb
pop
add
repz
das
testb
aaa
jle
jle
jle
jle
pop
push
or
lds
dec
int
ror
aad
enter
in
ror
in
repz
repz
repnz
pop
fsubs
add
or
sbb
mov
xor
dec
adc
pop
add
jne
mov
daa
cmp
cmp
dec
popa
and
push
icebp
pop
stc
arpl
lcall
hlt
es
sub
cs
xor
stc
xchg
push
cmp
lock
fwait
jbe
adc
in
pop
lock
addr16
imul
cld
jae
pop
pushf
jnp
jg
fiadds
mov
dec
xchg
psubd
iret
cmpsl
iret
rol
ja,pt
mov
xchg
mov
mov
stc
xchg
stc
fwait
stc
lahf
lss
iret
mov
mov
mov
leave
ljmp
dec
ret
jge
jne
ja
jns
jnp
aas
xor
xchg
cmp
aam
dec
or
push
popa
fcomps
pop
stc
stc
data16
push
outsb
stc
jb
jbe
jp
cmp
cld
jecxz
and
or
unpcklps
mov
in
and
sub
sub
mov
xor
cmp
cmp
add
out
in
mov
mov
andl
pop
inc
fidivrs
adc
cmp
subl
and
shll
loop
outsl
pusha
addr16
fidivrl
fisubrs
push
and
leave
ljmp
cli
rolb
dec
push
push
js
iret
adc
push
dec
sbb
and
or
rorb
jle
dec
add
pop
pop
aas
and
mov
and
cld
fcoml
call
out
call
dec
cmp
push
imul
dec
jae
ja
pop
jg
xor
cmp
push
iret
xchg
iret
xchg
iret
fwait
leave
lahf
loope
cmpsl
stc
stos
cmp
mov
mov
lcall
fs
arpl
cmp
pop
xor
repz
popf
repnz
pusha
js
xor
aaa
add
adc
sbb
sub
sub
xadd
iret
dec
iret
dec
iret
push
leave
push
inc
cmp
cmp
dec
inc
sub
cmp
mov
ljmp
jmp
mov
clc
int
sar
aad
frndint
fstl
jmp
lahf
cmc
lahf
stc
lahf
std
xchg
add
popf
or
and
mov
push
in
mov
gs
pop
insl
cmovo
jns
jge
or
iret
xchg
iret
xchg
leave
cltd
popa
mov
addb
lods
je
jns
andl
cmp
dec
cmp
test
sbb
lock
push
cltd
mov
dec
xchg
pop
inc
adc
mov
leave
lock
sar
aad
frndint
loope
in
jmp
cld
cmc
mov
pop
std
xchg
ss
mov
mov
dec
lret
mov
stos
test
out
lds
push
or
or
popa
inc
mov
adc
repnz
mov
pop
daa
iret
inc
adc
outsl
leave
mov
loope
dec
leave
mov
bound
ss
mov
inc
sbb
call
lahf
xor
daa
aaa
sub
das
mov
cmp
cld
dec
cld
dec
cld
push
pop
cld
leave
cld
int
mov
push
out
mov
pop
or
inc
cmp
push
outsb
cmp
jp
jle
adcb
mov
jo
lcall
fcomp
inc
out
pusha
mov
push
xor
xor
dec
fldcw
jno
mov
mov
add
xor
xor
stos
jae
mov
cmpl
aas
mov
dec
xor
rcll
into
cwtl
push
ss
sbb
cmp
add
jl
shrb
pop
pushf
addr16
addr16
xchg
imul
adc
cld
xchg
cld
xchg
cld
cltd
cld
popf
xchg
add
movsl
test
and
les
and
rorl
push
loopne
adc
mov
inc
clc
in
mov
add
lahf
call
push
scas
cmp
add
mov
ret
adc
repz
and
paddusb
iret
inc
lret
inc
loope
dec
stc
push
cli
push
addr16
inc
cld
inc
cld
dec
xchg
movsb
sub
jle
jle
jle
jle
jle
jle
dec
insl
lods
mov
pop
or
xor
popa
push
fld
loope
das
add
add
adc
xchg
mov
lods
in
mov
inc
andl
push
cmp
push
xchg
dec
mov
clc
jb
dec
or
pop
push
pop
push
lahf
and
add
and
or
push
xor
fsts
loope
jmp
es
sub
cs
xor
and
push
je
dec
and
and
test
and
sub
and
jbe
fistl
out
sahf
sbb
jle
mov
mov
dec
add
mov
mov
aas
jge
xchg
push
sub
sbb
lcall
cmp
push
add
push
dec
or
sbb
lock
dec
xor
jo
pop
into
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
dec
add
dec
and
inc
pop
xchg
jle
jle
dec
jb
aas
mov
xchg
nop
lahf
mov
mov
in
sub
cld
jmp
sub
sub
inc
and
icebp
and
je
and
sbb
mov
sbb
sbb
mov
cwtl
pop
les
out
sahf
call
stc
mov
sar
cmp
daa
rclb
cmp
iret
inc
shll
xchg
movsl
fists
repz
repz
sti
repz
add
pop
in
call
pop
cmc
and
nop
andb
jb
dec
xchg
ret
mov
mov
leave
mov
pop
xor
xor
pop
mov
out
cmp
and
jge
aaa
pop
dec
mov
dec
rorl
sarl
xchg
pop
test
scas
shrb
clc
movl
mov
mov
mov
fwait
iret
in
leave
ja
jo
rcll
ret
loop
and
mov
add
xor
leave
dec
rcrl
pusha
loope
xor
lds
inc
xor
in
cli
pop
hlt
daa
mov
in
hlt
outsb
push
xchg
xchg
aas
pop
and
stc
insb
stc
jo
or
lods
dec
mov
cwtl
mov
xchg
js
push
insb
adc
sbb
and
sub
out
pop
jbe
push
push
pop
pop
js
jl
sub
aas
xchg
daa
mov
loopne
stc
stc
enter
shrb
or
in
adc
je
jbe
js
jp
jl
pop
sub
jle
add
push
js
pushf
sub
cmp
mov
rclb
int3
in
roll
repz
loopne
ljmp
js
lods
push
leave
je
loopne
add
mov
mov
nop
repz
repnz
jo
pop
mov
cmp
repz
in
and
mov
hlt
ret
jmp
loopne
iret
inc
cmove
popa
aam
stc
push
cmp
out
insb
iret
mov
xchg
iret
cwtl
iret
pushf
iret
mov
leave
lods
fsubr
dec
mov
in
repz
repz
repz
testl
mov
xor
xor
push
mull
xchg
movsb
out
mov
test
mov
mov
dec
dec
mov
lock
fsub
in
repnz
add
or
mov
iret
adc
sbb
xor
stc
and
fs
ret
js
jle
pop
gs
rep
repnz
mov
xchg
pushf
xor
outsl
lock
cld
pushf
xchg
test
inc
shrb
ds
repnz
xor
test
mov
push
test
in
notb
mov
jbe
push
movsb
dec
data16
sub
push
inc
mov
ds
mov
pop
pop
js
test
pushf
cld
mov
mov
je
fstp
cmp
adc
sub
loopne
mov
pusha
lods
out
and
jl
sub
imul
mov
pop
nop
or
mov
xchg
stc
idiv
cli
mov
cmp
inc
cmpb
clc
push
pusha
subb
cld
push
jo
js
add
and
mov
or
jo
pop
mov
push
mov
loopne
enter
sarb
sbb
das
or
call
sbbb
fsubl
cmp
add
or
and
lock
push
sub
outsb
or
mov
pop
nop
andb
fsubl
mov
add
aas
loopne
in
call
or
jo
loopne
jb
je
jbe
js
jp
pop
sbb
fdivl
jo
je
js
jl
divps
nop
cli
aas
movsb
sub
clc
jecxz
cs
push
int3
loop
sub
flds
adc
mov
dec
sub
mov
pushf
in
sub
in
push
outsb
or
clc
pop
jle
loopne
pop
int3
mov
xchg
out
sub
flds
loop
in
in
mov
int3
repnz
cmp
pop
or
xor
cmp
pop
in
clc
mov
js
mov
lds
in
mov
mov
in
mov
outsb
pop
cwtl
lcall
sub
stc
in
jl
clc
sub
xor
incb
pop
rorb
fsubs
mov
sub
push
int
push
pop
loop
jecxz
repnz
push
mov
inc
jle
jle
jle
dec
call
mov
jns
push
cmp
mov
movsb
push
lods
pop
pop
mov
dec
jle
pop
or
lret
and
dec
jb
out
push
dec
xchg
ret
cmpsb
mov
loopne
and
in
xor
xor
adc
bound
mov
in
shlb
dec
dec
loop
pop
jl
xor
push
jb
lock
mov
cwtl
insb
pop
sub
push
sub
rorb
pop
int3
hlt
or
xchg
mov
ss
jecxz
arpl
dec
and
push
scas
jmp
loop
sub
pushf
cmp
das
push
test
mov
cmpsb
cmovns
dec
popa
add
icebp
jg
jl
cld
stos
xchg
ficoml
lret
dec
js
leave
mull
insb
sbb
daa
lret
cld
call
sarb
and
and
loopne
cmp
mov
daa
mov
cmp
push
das
push
test
incb
sbb
sub
and
bound
and
lock
lds
cmp
dec
cs
popf
movsl
push
rol
xchg
repnz
loopne
cmp
push
pop
cmp
xchg
adc
pop
xchg
rorb
xor
je
jbe
js
push
and
mov
cmpsb
xchg
sahf
push
daa
sbb
and
shl
jg
sub
lcall
fcomps
inc
cmp
lret
add
cmp
push
mov
sub
dec
cmp
lods
jle
mov
xor
mov
xchg
int3
mov
sub
js
loopne
mov
gs
pop
mov
mov
xchg
scas
out
mov
cld
add
xor
movsb
test
clc
inc
cmp
pop
dec
nop
ror
fnstenv
adc
sarl
sub
shll
or
nop
inc
pusha
neg
adc
sbb
mull
dec
in
xchg
or
bound
jbe
push
les
movsl
call
loopne
mov
pop
dec
lcall
push
lock
dec
jo
inc
push
fcomp
mov
loope
inc
xchg
xor
dec
ss
stos
add
cmp
xchg
mov
cmp
xchg
cwtl
clc
es
popa
cmp
fsubrp
cmp
mov
mov
lock
xor
pop
in
mov
out
in
cmp
add
mov
outsl
push
add
pop
scas
or
aaa
ljmp
add
ss
imul
or
ds
rcrb
es
pop
les
pusha
mov
pop
push
push
ljmp
xor
ds
je
pop
xchg
ret
pop
push
push
fimull
aad
dec
lock
push
and
adc
fs
xor
or
sub
pop
inc
mov
loope
std
add
scas
and
call
mov
notb
cli
pusha
in
out
in
mov
and
loopne
cmp
pop
pop
or
xlat
jae
dec
pop
pop
inc
daa
push
inc
popa
rcll
leave
insb
out
or
jp,pt
xor
idiv
rdmsr
aas
stos
lock
dec
aaa
popa
pop
pop
shll
xchg
loop
xor
jp
or
mov
pop
rcr
aas
cld
jo
xor
test
and
or
push
dec
fldenv
and
es
jbe
js
jp
pop
or
or
lock
shr
cmpb
pushf
xchg
jmp
xor
rcrl
add
cmp
lgs
push
dec
pop
and
das
lahf
xor
stos
adc
scas
mov
jo
je
dec
rcrl
xor
and
push
xor
inc
xchg
mov
ficoml
hlt
jp
pop
mov
lret
lcall
mov
push
mov
ret
data16
pop
and
insl
mov
mov
lock
inc
gs
lds
rorb
sbb
pop
dec
scas
mov
pop
enter
dec
loopne
imul
cld
pop
sahf
rcrb
popf
lret
movsb
adc
mov
clc
inc
test
imul
dec
jne
sahf
loopne
ss
popf
pop
loopne,pn
nop
mov
and
loope
or
jp
mov
mov
rclb
into
aaa
push
adc
mov
pusha
in
xchg
or
add
add
call
sub
jl
push
call
pop
into
je
mov
mov
js
out
out
in
xchg
in
shl
aam
xchg
or
and
hlt
mov
cs
mov
or
stc
sub
and
aaa
mov
mov
or
fmul
adc
mov
jge
jnp
xor
mov
mov
test
add
adc
clc
push
pop
hlt
jle
dec
outsb
pmulhuw
leave
mov
data16
stc
sti
stc
or
insb
cs
cmp
push
dec
cmpsl
sahf
mov
shr
das
aam
sbbb
push
outsb
or
sbb
sbb
cs
sbb
movsb
lret
ds
aas
jecxz
push
cmp
dec
and
movsl
inc
mov
and
mov
into
mov
sbb
and
pop
pusha
pop
add
mov
mov
pop
xchg
inc
lock
dec
xor
mov
inc
and
pop
jg
xchg
add
notb
out
pusha
std
inc
ds
sbb
pop
ret
ret
pop
lcall
or
push
add
mov
jmp
push
pop
out
and
popf
add
add
mov
inc
push
icebp
jns
jbe
lcall
mov
movsb
xchg
fwait
ret
sbb
xchg
and
dec
lock
clc
pop
je
mov
in
loop
sti
lock
xor
xor
push
inc
outsb
push
and
data16
cmpsb
xchg
mov
fadd
popf
test
cld
aam
call
inc
sbb
inc
mov
cmp
mov
xchg
inc
ret
push
adc
test
lock
mov
mov
rcrb
dec
mov
loope
lock
jo
pusha
adc
ret
bound
ret
cwtl
jle
pop
dec
and
pusha
clc
enter
les
cwtl
stc
mov
pop
mov
sarb
inc
add
sub
and
xor
push
push
dec
pop
and
jo
push
dec
orb
nop
lret
cwtl
jns
adc
enter
loopne
insb
in
ret
je
pop
sbb
pop
dec
stc
push
imul
jo
cmpb
mov
dec
repnz
int3
cmp
adc
inc
in
mov
sbb
stc
in
movsl
cmp
mov
push
mov
clc
adc
in
movsl
clc
icebp
adc
or
adc
sbb
push
and
pminsw
iret
cmp
dec
pop
nop
dec
cli
pop
lea
hlt
pop
push
daa
adc
sub
or
stc
push
stc
push
jb
mov
mov
stos
xchg
fcompl
mov
lret
aas
shrb
cli
fisubrs
fs
bswap
dec
dec
push
aam
mov
xchg
in
mov
shll
dec
out
xchg
int3
andb
into
in
jb
dec
adc
repz
adc
bswap
ror
aad
mov
xor
add
cmp
cmp
mov
push
dec
dec
ficompl
leave
insl
pop
ret
xchg
sahf
mov
into
xorl
in
ret
xchg
popa
outsb
fildll
into
mov
rcll
sahf
lods
sub
and
mov
ret
mov
push
sbb
xchg
mov
mov
pop
pusha
add
insb
je
xchg
cmpsb
mov
fimull
aas
dec
and
cs
sub
xor
int3
cltd
cmpsb
jge,pn
cs
lret
and
ret
dec
xor
sbb
jnp
cmp
mov
sti
dec
pop
xchg
insl
push
cmpsb
push
xchg
dec
insb
pushf
stc
pop
outsb
adc
hlt
jnp
leave
jno
lahf
xor
clc
scas
xchg
js
push
rcl
das
lcall
ror
iret
leave
adc
adc
jbe
pop
cs
daa
xchg
inc
sarb
push
dec
cs
jg
addb
sar
sbb
xor
xor
sub
hlt
daa
mov
mov
das
or
js
push
mov
cmp
jns
test
rolb
cmp
call
subb
ret
mov
jp
cmp
push
and
leave
iret
loope
and
push
sbb
pop
rcrb
cmp
mov
fcoml
cmpsl
mov
jo
mov
mov
adc
mov
std
popf
test
add
and
adc
push
mov
sahf
cmp
sti
jnp
dec
xchg
fadd
js
pop
jmp
inc
pop
dec
mov
or
inc
cmp
jbe
mov
xor
or
les
mov
or
mov
cmp
xchg
mov
lret
jbe
cltd
sbb
aam
sbb
movsb
mov
aam
and
ss
ds
mov
xor
mov
and
xor
mov
pop
popf
add
loopne
leave
xor
rcr
outsb
or
test
data16
jbe
shrb
inc
or
insb
popa
or
sub
or
ds
jl
sbb
push
and
or
or
jo
adc
stc
pushf
jnp
cmp
repnz
jle
xchg
ror
or
xor
das
and
clc
popa
cld
push
fs
mov
inc
mov
mov
dec
xor
out
pop
fcoml
lret
lahf
and
xchg
xchg
pushf
nop
aas
stos
sub
ss
dec
das
or
cmpsl
rcll
stos
outsb
xor
loopne
sahf
in
cmp
fcom
cmp
cmp
cmp
mov
rcl
mov
add
pop
xor
add
adc
les
addb
xchg
loope
es
or
push
pop
imul
in
xchg
loope
stos
xor
cld
sub
dec
cld
dec
outsb
ret
xchg
push
nop
addr16
in
sbb
inc
ds
add
fs
push
mov
xor
push
out
sbb
add
push
ss
lock
xor
cmp
nop
out
out
pop
adc
les
jecxz
ds
adc
add
xchg
shll
pop
and
rcrb
cld
into
push
cmp
sub
pop
rol
mov
repz
sub
imul
cld
adc
dec
pop
idivb
jo,pt
jo
incb
lret
or
pusha
add
xor
addb
rcrb
cmp
xor
mov
xchg
sarb
pop
adc
or
jne
push
xchg
xchg
test
movsb
xor
lcall
and
lcall
cmp
dec
sub
xor
jg
mov
clc
stos
pop
imul
jg
call
xchg
test
rcl
stc
repz
std
push
add
aaa
inc
inc
pop
mov
jle
pop
jnp
outsb
mov
xchg
leave
popf
rcll
mov
lret
jo
jle
pop
repz
or
int3
je
dec
inc
fwait
mov
mov
lods
repz
inc
int3
in
xchg
fdivs
dec
loopne
test
pushf
mov
xor
mov
cmp
lahf
inc
xchg
dec
push
call
mov
loope
cmp
clc
aas
decb
push
aas
or
rorb
dec
adcb
cmp
divps
ret
push
lock
test
imul
icebp
sub
or
cmp
jbe
push
leave
arpl
in
jp
sbb
daa
mov
sahf
push
mov
sti
mov
adc
daa
fsubs
mov
cmp
xchg
rorl
jnp
jecxz
repnz
push
rorb
inc
cmp
movsb
dec
inc
pop
mov
mov
ret
pop
sbb
fwait
lock
pop
outsl
push
cmp
pop
enter
push
mov
addr16
pushf
ja
jnp
lcall
loope
sarb
out
repz
ds
sub
fwait
push
add
and
pop
cmp
daa
dec
add
xchg
loopne
mov
outsb
psrld
pop
mov
xchg
loopne
mov
notb
cld
xlat
mov
or
stc
jecxz
cmovbe
lret
out
and
mull
loopne
fs
sarl
xsha256
cmpsb
push
mov
lcall
leave
icebp
pushf
add
xor
mov
xchg
dec
or
repnz
jmp
stc
std
jno
adc
mov
xor
dec
test
pusha
mov
cwtl
aaa
fildll
and
popf
mov
aad
orb
and
inc
fucomip
pop
push
imul
add
bound
dec
outsl
aas
jnp
test
lea
inc
ret
aas
psubsb
iret
out
lret
sti
pop
sub
sbb
loopne
add
push
es
xor
dec
mov
lahf
out
out
in
xchg
xchg
lret
repz
fistps
mulb
aad
movhps
or
inc
add
iret
pop
iret
pop
iret
arpl
jno
ret
test
orb
les
cld
fidivrs
fnstsw
loop
adc
pop
inc
push
ds
daa
pop
xchg
aam
sarb
adcb
clc
fdivrs
adc
clc
out
mov
push
mov
pop
fmuls
mov
insb
lret
jo
xor
in
ljmp
push
sub
in
mov
mov
inc
xchg
popa
les
call
pop
mov
inc
leave
cld
shll
icebp
push
out
ja
and
mov
jle
dec
jmp
sub
jl
jle
jle
dec
cmpsl
movsbl
lret
xabort
dec
in
jb
cmp
loop
jge
ret
dec
cld
inc
aas
cltd
aas
mov
sub
xchg
mov
push
lock
lahf
add
pushf
call
inc
inc
inc
sbb
cmp
mov
das
cmp
test
rcrl
dec
ja
adc
sbb
inc
cmp
or
cmp
jne
xchg
repnz
or
mov
xchg
daa
xchg
movsl
inc
sarl
xchg
test
ret
pop
pop
dec
test
test
cmp
cmp
sbb
pop
pop
and
sbbl
daa
rcll
dec
cmc
sarb
xor
data16
outsb
in
mov
dec
push
int3
loopne
out
mov
sbb
xchg
popa
ret
sbb
ret
rclb
sbb
movsb
clc
mov
jmp
cld
aaa
mov
lret
fs
lds
enter
and
xlat
pop
xchg
push
push
jp
jle
add
movsl
inc
idivb
es
mov
popf
loop
pop
stos
adc
icebp
add
ret
adc
pop
jp
pop
xor
or
jnp
sahf
push
pop
pusha
ret
in
mov
aam
cltd
cmp
pop
inc
inc
popf
clc
hlt
das
test
jecxz
jmp
out
cmp
push
sub
or
gs
fisubrl
cwtl
rcr
stc
mov
xlat
stc
stc
cmp
and
dec
aas
mov
clc
jp
dec
xchg
and
xchg
and
xchg
das
jge
push
push
test
push
mov
leave
jecxz
inc
lret
je
cmpsb
xor
loopne,pt
insl
cld
sbbl
sbb
pop
arpl
movsb
out
les
lods
fisubs
in
sub
xor
mov
andb
test
out
outsb
xorb
add
pop
inc
shrd
je
test
mov
cmp
pop
lahf
xchg
repnz
in
push
and
stc
outsb
cmp
fstl
pop
xchg
xchg
cwtl
mov
lods
pop
sbb
mov
xchg
mov
pop
enter
lods
cs
shlb
loop
das
js
jb
in
dec
clc
mov
sub
leave
pop
pop
push
mov
pop
in
inc
dec
ficompl
repnz
leave
stos
mov
mov
mov
leave
push
cmp
les
mov
in
and
mov
les
fnstcw
dec
adc
adc
js
pop
jo
ror
xor
jb
sub
jo
xchg
and
mov
cwtl
adc
ret
fmuls
jp
pop
jnp
lahf
popa
or
stc
ret
aas
js
bound
stos
and
xor
and
push
sub
repnz
lock
jle
pop
and
pop
dec
dec
fmuls
xor
sbb
adcl
shl
loop
pop
xchg
test
mov
and
or
push
sub
push
sbb
jno
hlt
fwait
rclb
sub
js
fs
nop
or
fcompl
add
add
imul
inc
lahf
loope
gs
hlt
sub
stc
test
aam
pop
in
xchg
pop
dec
test
fsub
push
jle
xchg
xor
repnz
stos
sbb
popf
daa
adc
ret
ljmp
xchg
jle
pop
lahf
mov
xchg
mov
incb
dec
dec
jbe
push
std
xchg
push
loopne
addr16
or
stc
adc
mov
popf
adc
mov
mov
loope
jp
pop
dec
cmpsb
sbb
mov
xor
xor
aas
std
daa
add
adc
notb
out
push
js
xchg
fs
ret
adc
gs
test
jo
cmp
mov
pop
and
pop
lods
mov
mov
leave
pusha
repz
jbe
jo
dec
xor
pop
sub
xchg
xor
jbe
push
movb
insb
push
jle
subb
rolb
loopne
fnstsw
dec
sub
loope
jp
pop
nop
cld
cwtl
mov
shl
fistl
dec
and
negb
bound
xchg
shlb
pop
push
aas
aaa
cmp
dec
or
mov
adc
cld
adc
pusha
shr
test
mov
cwtl
sub
mov
mov
adc
pop
mov
shlb
test
mov
mov
mov
lcall
cld
xchg
cltd
rcrb
js
push
pop
imul
push
mov
mov
shr
adc
inc
loope
push
pop
mov
xchg
aas
lcall
aam
aam
imul
and
dec
dec
arpl
ret
pop
pop
notb
jge
mov
clc
adc
test
pop
mov
sahf
inc
fistps
test
scas
das
mov
jb
sub
loopne
xchg
xchg
lcall
repnz
imul
and
fdivrl
cs
nop
movsb
pushf
cwtl
rcrb
test
lods
loopne
mov
in
lret
pop
dec
fidivl
ficoms
sbb
and
int3
pop
in
mov
jnp
lods
pop
fwait
xchg
ret
loop
ljmp
sub
pop
dec
ret
mov
loop
pop
cmp
mov
xchg
loopne
pop
ret
je
pop
sub
movsb
push
incl
mov
in
mov
sar
cmc
mov
es
cld
dec
cmp
cmp
jle
jle
dec
out
dec
clc
subb
lock
push
pop
es
xchg
loopne
int3
and
jl
jmp
push
cmp
ljmp
into
jle
dec
ficompl
loope
pop
jp
ret
int
add
pop
lock
pusha
sahf
fcomps
cmpsb
push
xchg
jmp
sbb
xor
lret
xor
dec
push
sahf
inc
jne
adc
es
sub
dec
lock
mov
stos
and
pusha
cmc
test
loope
call
fs
mov
movsl
cmp
cmp
addr16
loopne,pn
pop
add
cmpsb
cld
push
sbb
fdivl
jo
push
and
xchg
or
das
pop
dec
adc
cmpsb
leave
movsb
popa
xor
shrl
mov
dec
mov
pushf
jl
leave
es
cmpsl
lock
popa
add
outsb
sbb
and
ret
jmp
and
xchg
jo
mov
xor
xchg
fchs
dec
xor
jb
or
xor
outsl
stos
add
pop
repz
jmp
lahf
call
fcomp
out
or
and
sub
push
mov
cltd
mov
or
xor
mov
ss
sbb
popf
push
mov
sar
cmp
pop
int3
das
xchg
mov
mov
sahf
add
and
bound
aad
dec
repz
int3
shrb
in
pop
adc
xor
adc
mov
jns
push
pop
sub
stos
flds
and
bound
daa
mov
and
pusha
aad
add
mov
out
loop
bound
cmp
ret
enter
inc
add
clc
shlb
test
dec
add
mov
lock
mov
cmp
das
or
or
cmpl
cmpsb
enter
sbb
push
fwait
cmp
adc
mov
cmp
pushf
nop
sbb
pop
dec
andb
push
mov
ret
jl
adc
lods
loopne
or
cmp
and
lock
test
or
cmp
xchg
loopne
mov
push
cmp
sub
shlb
das
push
cmc
lahf
cmp
js
insl
aas
jne
lea
xchg
aas
cltd
sub
stc
repz
inc
sbb
sbb
cmp
cmpsl
lock
fildl
ss
leave
push
inc
cmp
mov
dec
jno
jne
loop
scas
mov
fdivp
stc
add
inc
call
mov
push
js
je
jbe
pop
mov
and
loopne
cmp
xchg
lcall
mov
cld
push
mov
or
cld
jp
lret
call
pop
pop
sbb
iret
inc
minps
pop
test
push
pop
cs
jne
and
cld
push
sahf
cs
ja
loop
lcall
xchg
test
jle
adc
cmpsl
call
push
pushf
dec
lahf
popa
push
push
ficoms
jmp
adc
sub
cmp
mov
rcrb
sub
insb
testb
aas
cmp
in
in
mov
dec
push
sahf
inc
imul
cld
lods
popf
inc
and
sub
aas
repnz
cmp
add
pop
or
inc
fadds
insl
subb
lret
repnz
cli
aas
cs
xchg
cmp
int3
pop
sahf
ret
ret
push
movsb
repnz
enter
jb
call
push
fstps
or
jbe
lock
shrb
xchg
and
mov
loopne
xchg
or
test
out
or
repnz
mov
push
iret
jle
cmpsl
fsubrs
rclb
push
xor
pop
push
dec
lret
adc
outsb
pop
cld
jl
cmpsb
add
or
dec
pop
xchg
sbbb
push
mov
jg
stc
dec
imul
jle
imul
roll
popa
outsb
enter
inc
add
testb
cmp
jo
cmp
negl
xchg
scas
andb
addl
and
xchg
dec
clc
orl
hlt
jnp
cmpsb
inc
jo
dec
dec
loopne
push
lock
mov
jle
inc
in
or
xor
int3
fsubs
pop
push
push
push
cmp
mov
xchg
test
sub
in
scas
cmp
adc
test
rclb
and
and
ss
cmp
pop
sahf
mov
data16
sbbl
ror
mov
fs
or
sub
push
adc
lock
test
cmp
push
sub
subb
xor
dec
lods
cmpsb
push
dec
iret
add
adc
jg
cld
dec
testb
pop
xchg
outsb
ret
jne
lcall
mov
sub
fmulp
int3
and
push
mov
push
cmp
push
or
test
subb
cld
lods
adc
add
xor
cmp
daa
ss
test
sahf
mov
push
push
fmuls
jl
popf
cmp
inc
xor
inc
push
imul
incl
sub
aaa
sub
shlb
imul
cmp
fildl
shl
pop
dec
or
bound
js
ret
push
sbb
ja
repnz
push
and
mov
lods
mov
cmp
orb
dec
xchg
pop
iret
ljmp
aam
pop
jle
dec
test
stos
xchg
mov
cmpsl
push
lds
shll
leave
pop
adc
or
dec
adc
dec
jmp
push
das
xchg
mov
xor
sub
push
getsec
cmp
xchg
in
mov
and
or
shll
mov
xchg
loop
xchg
jle
es
sbb
xchg
jae
inc
mov
outsl
jg
jb
push
scas
sbb
xor
sahf
iret
mov
loop
jmp
mov
das
cltd
inc
adc
xor
mov
cs
loop
sti
sahf
and
cltd
sbb
dec
jmp
not
adc
pop
add
or
xor
inc
popa
xor
stc
pop
stc
jae
jg
ret
out
jle
jle
pop
int
or
xor
push
sahf
dec
xor
hlt
jle
jle
dec
stc
pop
lods
mov
lcall
ret
jns
daa
fsubrl
and
sub
out
inc
adc
mov
xchg
loop
ljmp
adc
jp
inc
inc
outsb
sub
mov
mov
clc
adc
inc
xchg
push
or
adc
test
or
ret
test
cmp
mov
ds
das
lahf
js
dec
mov
and
ljmp
call
sarb
push
dec
jl
cmp
push
lods
adc
and
inc
add
mov
jo
nop
loop
jmp
cmp
popl
je
enter
dec
sub
lret
outsl
mov
jbe
push
lahf
dec
fsub
xor
push
test
add
loop
shl
pop
jo
nop
mov
inc
outsb
mov
or
fiaddl
aam
sub
loope
inc
jl
cmp
and
aam
ljmp
loope
sub
inc
loop
and
loopne
mov
and
add
push
mov
es
sub
loopne
cmp
pop
sub
push
fcoml
in
lahf
xor
inc
daa
inc
jae
daa
lahf
or
mov
aas
push
ret
scas
jb
jbe
jp
jle
cmp
pop
mov
fcompl
in
out
test
cld
into
cld
sar
cld
ficoms
cwtl
xor
cld
push
mov
js
add
xor
dec
jecxz
cmp
fs
and
xchg
loope
ss
cmp
cvttps2pi
inc
cmpsl
pop
dec
in
mov
or
into
and
jbe
push
jle
cmpb
add
jo
scas
pop
cmpsb
jle
jle
dec
out
push
add
out
inc
in
cmp
jo
dec
jge
leave
jo
pop
rcl
jb
jo
and
mov
movsb
jo
jle
dec
mov
xor
pusha
xchg
movsb
mov
inc
sub
ret
es
inc
fs
mov
dec
xchg
dec
stos
jp
jecxz
repnz
lret
pop
scas
pop
sbbb
push
jmp
push
or
mov
pop
jp
jle
dec
test
rclb
xchg
xchg
jp
pop
adc
push
bound
addb
pop
popf
mov
pop
push
inc
in
clc
inc
aas
imul
mov
mov
sbb
and
fdiv
iret
std
ret
es
sub
push
retw
enter
repnz
pop
add
daa
cmp
push
pop
gs
scas
mov
leave
add
int3
push
xchg
push
clc
sbb
jp
jl
jle
dec
outsl
ja
jnp
mov
dec
mov
pop
js
jle
pop
dec
lret
bound
dec
jno
jg
cmp
cs
jecxz
repnz
jno
sbb
mov
cmp
pop
lahf
jg
and
mov
push
je
pop
and
in
lcall
loope
xchg
mov
mov
mov
imul
pop
ss
pop
ljmp
fs
jle
es
xchg
adc
jbe
push
test
lret
cmp
addb
add
xor
mov
jb
stos
fdivrp
xchg
sbb
ss
icebp
mov
add
push
jge
cld
add
sbb
sarl
or
jecxz
into
pop
aas
ret
xlat
xchg
test
sar
ljmp
ss
push
mov
ret
inc
roll
pop
pop
add
daa
nop
pop
imulb
je
cld
or
sub
cmp
add
and
in
stos
ret
ret
fbstp
outsl
shr
xor
repnz
mov
notb
ljmp
pushf
dec
outsb
orb
jge
loop
shlb
mov
pavgb
leave
out
ss
adc
sahf
jg
lea
rol
jns
xchg
ja
or
ret
loop
in
or
cmp
jo
dec
aas
repnz
ds
and
cmp
mov
mov
mov
stc
cli
or
push
ja
jg
mov
sub
into
lock
in
cld
notl
push
mov
jp
jl
jle
pop
pop
xchg
jne
mov
jle
dec
xchg
loopne
stos
mov
pop
mov
out
cld
jle
aas
lahf
cltd
clc
nop
and
jo
dec
mov
mov
call
ret
in
ds
loopne
cmp
xor
icebp
test
sub
xchg
mov
add
xor
mov
mov
sub
cmp
and
cs
jbe
js
jp
dec
sbb
pop
das
cmp
jbe
xor
scas
cmp
cmp
add
cwtd
aam
rolb
sahf
add
dec
ret
data16
adc
xor
fidivrl
imul
in
leave
popa
rcll
jl
cmp
cmp
sub
or
ljmp
mov
xchg
and
mov
notb
xor
sahf
xor
mov
movsl
into
leave
movsl
push
test
dec
lods
adc
sbb
ds
mov
cs
inc
int3
lods
inc
jo
ror
pusha
dec
out
xchg
loope
test
cmp
xchg
or
xor
jl
pop
cmp
add
cmp
mov
lahf
add
addr16
dec
mov
sti
xorl
test
mov
ret
pop
rclb
jo
xor
push
popf
or
push
mov
clc
push
cld
mov
in
or
push
xor
and
mov
sub
subb
ret
repnz
mov
xchg
mov
dec
inc
mov
mov
subb
sbb
lret
scas
mov
cmpsl
xor
loopne
cmp
sbb
leave
popf
cs
mov
mov
add
jl
jmp
nop
daa
mov
mov
xchg
imul
das
add
les
popf
cmp
js
or
xor
negb
outsb
xchg
adcb
cmp
outsl
jge
xchg
add
cld
call
mov
into
jl
dec
ret
movsl
into
bound
pop
sbb
fdivl
mov
and
hlt
xor
lahf
loope
inc
push
insb
dec
fiadds
cmp
test
cmp
mov
inc
pop
xor
insl
dec
sub
cs
pop
xchg
mov
js
jb
dec
inc
les
inc
ret
imul
inc
es
ficomps
push
loope
pop
sub
xor
nop
and
xor
xchg
sub
xor
leave
dec
lods
faddl
jns
add
cmp
add
xor
xor
imul
es
cmp
cmp
sbbb
in
clc
repnz
imul
xor
xor
in
sub
arpl
xchg
insb
push
notb
cmp
lret
cmp
cmp
cmp
jge
xor
loop
rclb
test
inc
mov
cmp
mov
dec
pop
fmuls
jo
sub
movsb
xor
aad
mov
test
ret
jle
je
rolb
pusha
jae
stos
sub
or
cmp
push
iret
shlb
mov
sbb
pop
and
leave
xor
rcll
dec
mov
aas
mov
jmp
mov
pop
stc
std
add
andb
or
pushf
pop
cmp
xor
dec
lods
subb
test
imul
jne
into
pop
test
stos
hlt
pusha
pop
mov
mov
pop
jle
jle
pop
jmp
adc
or
adc
data16
inc
clc
sub
pop
cltd
or
scas
das
std
inc
mov
leave
sub
xor
leave
add
rcrb
addr16
jae
test
mov
shlb
add
push
leave
pop
push
in
inc
and
mov
fs
in
jmp
lret
jmp
and
jle
popf
jb
pop
daa
mov
into
aad
shlb
ljmp
daa
shr
dec
std
add
pop
decl
pop
outsb
push
ficoml
jle
notb
dec
ret
lods
repnz
jle
inc
lret
js
mov
xchg
loope
stos
stc
scas
cmp
xchg
mov
cmp
xchg
rorl
mov
subb
je
pop
cwtl
jp
push
rcrb
filds
xchg
cbtw
je
xchg
xchg
jle
push
pop
in
movsl
pop
into
jle
jle
dec
scas
enter
out
xor
pushf
je
pop
lds
push
pop
push
dec
scas
orb
sbb
int3
adc
mov
es
cmp
dec
sti
dec
adc
loope
mov
outsb
das
fadds
js
das
xor
shrb
cmp
adc
add
out
jb
mov
in
and
mov
xchg
xchg
or
mov
adc
jo
and
xchg
sbb
push
clc
add
mov
and
inc
bnd
jbe
loopne
xor
cwtl
xchg
and
das
cmp
loope
dec
jg
push
sbb
pop
mov
ror
leave
jp
mov
lods
loope
sub
cmp
mov
ret
sub
cmp
sub
dec
testb
filds
cmp
cmp
or
pop
movsl
loopne
ret
pop
sti
adc
movb
inc
shlb
pop
rorl
xor
outsb
loope
lahf
shrl
stos
xchg
xchg
and
call
or
sub
pop
in
or
es
sbb
mov
and
js
je
dec
jmp
inc
adc
fsqrt
loopne
cmp
loop
jle
cli
push
in
xchg
inc
dec
lock
mov
loopne
push
sub
pop
cmp
jo
in
push
sub
enter
aaa
repnz
sti
mov
jnp
fs
cli
cld
shll
divb
es
xchg
mov
push
movsb
lock
adcb
xor
mov
push
jle
jle
jle
pop
xchg
cmovp
dec
fcmovb
xchg
or
fs
add
xor
mov
lret
iret
loopne
and
pop
dec
and
shrb
fdivp
out
push
inc
insb
loope
mov
push
movsl
pusha
out
test
cld
jecxz
out
push
push
stc
mov
pop
dec
and
mov
mov
aas
scas
sub
cld
adc
xor
pushf
dec
adc
dec
and
es
aas
fwait
repnz
loop
push
stos
ret
pop
jo
pop
les
mov
lds
ret
jo
adc
cmp
and
pop
ret
or
dec
call
aam
fmull
mov
sub
push
mov
mov
add
in
xchg
sub
inc
jno
mov
xchg
lcall
mov
xor
and
push
aad
ficompl
subb
add
push
sub
jno
jg
mov
adc
jo
mov
cs
jge
dec
dec
mov
ret
xchg
inc
mov
out
subb
pop
add
ret
cmp
subl
adc
sbb
add
xor
xor
dec
xor
mov
jnp
pop
cmp
add
fmuls
and
decb
shrb
push
inc
mov
or
pop
mov
pop
inc
xchg
stos
cld
out
aas
ret
je
pop
pusha
shrb
pushf
mov
hlt
mov
or
negb
push
or
popa
pushf
scas
fabs
loope
sub
cmp
sub
ljmp
shrb
dec
das
dec
and
je
pop
mov
mov
movsb
daa
dec
popa
pushf
test
inc
jp
dec
daa
ja
pushf
and
das
push
jl
push
popa
cmp
push
out
mov
andb
pusha
cmp
mov
adc
mov
and
xchg
rcr
out
cmp
cmp
das
out
add
and
xchg
push
sub
inc
adc
jne
shrb
jg
cwtl
dec
dec
jge
in
lret
cli
jle
adc
push
outsl
leave
fadds
dec
dec
or
ljmp
negb
mov
sahf
inc
adc
js
pop
cwtl
push
mov
outsb
cmp
xchg
xchg
hlt
negb
dec
jmp
loop
rcrl
push
das
mov
cs
xchg
loope
div
mov
cmp
inc
fsubrs
hlt
or
or
sbb
push
inc
pushf
inc
push
jp
mov
insl
out
add
and
loope
pop
js
das
jp
push
pop
mov
in
cld
or
dec
loope
outsl
enter
es
jle
pop
xlat
orb
fcoms
dec
in
aas
fiadds
stc
imul
dec
jp
les
enter
lock
pop
das
or
xchg
movsb
cmp
cld
cmpsb
xchg
stc
scas
mov
dec
mov
push
dec
cli
mov
call
inc
movsl
popa
sarl
repz
adc
repz
adc
cmp
lock
pop
lock
sbbb
add
popf
add
pop
xchg
arpl
mov
xchg
pop
mov
bound
jmp
loop
dec
das
mov
xlat
adc
icebp
test
mov
out
sahf
or
adc
scas
pop
pop
loopne
mov
cld
adc
cmp
test
lret
ds
or
cmp
imul
int
lcall
mov
enter
cwtl
push
push
lret
sahf
mov
mov
hlt
fs
aam
xchg
rol
or
insb
pop
jl
cmp
adc
call
test
xchg
cmpsl
subb
test
and
sub
push
ljmp
in
call
lods
aam
push
cld
cmpsb
pop
es
mov
stos
inc
inc
in
stos
orps
push
leave
push
clc
pop
pop
xchg
bound
cld
cmp
cld
mov
mov
sbb
stos
xor
mov
notl
mov
xlat
adc
ret
jbe
adc
into
cmp
mov
test
cld
out
out
cld
adc
mov
test
xchg
fcompl
ljmp
popf
pop
hlt
pop
pop
xchg
pop
stos
and
jg
add
sbb
test
out
mov
aas
repz
jmp
jne
add
hlt
mov
pop
call
inc
cmp
cmp
js
test
inc
aas
xchg
and
stc
aad
enter
adc
sahf
inc
adc
mov
or
add
je
test
jo
addr16
imul
rcl
scas
repnz
in
jle
jle
dec
icebp
cmpb
loope
sbb
call
inc
shr
push
jle
jle
jle
jle
dec
jmp
data16
imul
xchg
aad
cwtl
cld
lock
inc
in
mov
fidivs
dec
lods
adc
push
in
inc
das
inc
popa
xor
push
aam
mov
aad
loope
stc
clc
and
pop
dec
mov
je
ficoms
and
hlt
xor
pop
scas
pushf
push
jle
jle
jle
pop
repz
sti
movsb
xor
cmp
rclb
fnstenv
repz
dec
sbb
dec
data16
insb
fsubrp
das
shlb
ljmp
and
es
mov
pop
lods
xchg
cmpsl
cmpsl
mov
mov
lret
add
inc
je
dec
cmp
decb
jae
lret
scas
stc
mov
or
stc
aam
mov
mov
cld
xchg
cld
popf
xchg
les
clc
sub
adc
popf
mov
repz
bound
jno
into
aas
mov
inc
scas
add
mov
or
jmp
enter
in
dec
or
mov
nop
cmp
mov
leave
pop
notl
sub
push
popa
cmp
push
cmp
lock
cmp
dec
sarl
dec
or
and
orb
cld
dec
add
and
mov
cmp
aad
mov
and
push
testl
test
shlb
xchg
xchg
shlb
pop
lret
fimuls
popa
add
loopne
cmp
cmpb
push
xchg
repnz
or
cmp
rorl
jle
or
mov
fs
mov
pop
cltd
inc
mov
cli
adc
inc
out
cmpl
jle
movnti
mov
test
cli
push
mov
xor
fisttps
mov
xor
add
cmp
das
icebp
inc
sar
scas
orl
dec
cmp
inc
cmp
mov
loopne
dec
adc
in
xchg
movsl
cmc
loope
xor
leave
pop
pop
mov
mov
jle
pop
leave
ret
mov
xchg
daa
mov
movsb
inc
xor
call
mov
or
ret
cli
clc
ret
loope
loope
pop
cs
cmp
das
icebp
or
add
add
jnp
fs
rorb
hlt
push
xchg
test
push
lods
lcall
add
sub
imul
loopne
into
mov
in
push
pop
xor
loope
xor
mov
sahf
xchg
ficoms
xor
out
call
idiv
push
and
in
clc
and
mull
imul
stos
cmp
cmp
es
movlps
jns
xchg
sub
xchg
sbb
test
stc
test
inc
lods
xor
mov
xchg
xchg
sti
push
push
out
adc
xor
xchg
sub
adc
call
lods
add
out
outsb
loopne
push
call
in
bound
inc
daa
clc
push
das
push
or
popf
xchg
push
out
and
jle
pop
mov
pop
aaa
mov
cmp
adc
loopne
ljmp
jbe
ds
in
cwtl
mov
inc
xchg
jp
aad
sub
rol
in
adc
xor
mov
adc
cmp
jnp
xor
lahf
dec
stos
mov
add
push
call
insb
or
jle
dec
cld
dec
push
sbb
cs
cli
cmp
push
or
dec
cmp
dec
add
outsl
rorb
pop
mov
ds
sahf
push
sbb
inc
call
pop
mov
cmc
jno
and
into
sbb
add
mov
push
sbbb
test
jle
mov
bound
inc
ds
cmp
into
scas
lret
add
fidivrl
cmp
cmp
dec
daa
cmp
insl
xchg
mov
loopne
jge
mov
dec
lods
push
and
into
jle
dec
repnz
mov
fisubs
push
cmp
jmp
call
push
pop
pop
sarb
nop
hlt
cwtl
adc
nop
lock
dec
cmpsb
stc
mov
pusha
jbe
xor
sbb
xor
or
push
lea
jo
je
pop
mov
push
add
fnstsw
inc
jp
lahf
mov
je
incb
and
nop
mov
push
push
push
lcall
pop
loope
xchg
outsb
repnz
sbb
add
xor
cmp
lods
test
push
push
bound
or
and
out
stos
cmpl
and
mov
mov
lods
fdivp
and
fnsave
sub
dec
pop
addr16
jne
orb
mov
sar
fs
in
les
scas
insb
push
aaa
lods
leave
sti
adc
cli
mov
movsb
jge
lods
rcll
jae
pop
rcl
outsl
push
into
gs
xchg
push
xchg
ret
in
rolb
and
addb
mov
lock
pop
push
ret
es
sarb
repz
call
scas
jae
in
xchg
xchg
dec
popf
js
dec
insl
sarl
sub
mov
bound
ljmp
or
xchg
movlhps
or
shll
pop
inc
jp
pop
dec
mov
in
into
lock
lods
mulb
jle
dec
jo
inc
or
scas
inc
sarl
xchg
jnp
adc
ds
lock
pop
les
clc
push
sub
lods
fnstcw
jo
mov
jbe
sbb
das
mov
inc
push
aam
or
and
cld
test
fistl
icebp
dec
sbb
dec
lret
jge
cmpsl
mov
movsb
xlat
loopne
lock
adc
or
jo
in
cmpsb
cld
cmp
shlb
cmp
or
pop
add
push
cmp
add
pop
cmp
outsb
adc
pushfw
xchg
loopne
or
add
pop
clc
test
mov
mov
jbe
stos
xchg
test
out
and
push
pushf
adc
mov
hlt
xchg
les
or
daa
daa
loope
inc
cmp
int3
test
test
in
cmp
mov
insb
daa
lahf
push
mov
pop
dec
jle
pop
mov
dec
in
inc
aas
aas
lret
xchg
xchg
pop
lock
aaa
or
pop
push
adc
mov
daa
iret
int3
dec
pop
cwtl
adc
gs
push
in
stos
mov
mov
mov
xchg
xchg
adc
ret
ret
inc
dec
pop
popa
cmpb
xlat
xchg
sub
inc
sub
stc
sbb
ljmp
andb
or
mov
int3
pop
sbb
adc
and
lock
cmp
cmp
cmc
xchg
adc
sub
ret
pop
sarb
xchg
xor
rorb
xor
xor
adcb
mov
loope
dec
sub
or
inc
push
addl
pop
adc
mov
pushf
sub
cmc
xor
and
pushf
xchg
test
jl
in
stos
cltd
and
aad
push
push
and
aaa
pop
test
or
stc
mov
adc
leave
push
daa
dec
daa
inc
das
mov
popf
test
mov
mov
imul
push
xchg
add
jl
popf
clc
enter
sub
jle
pop
xlat
ret
in
lock
pop
pop
loopne
call
lds
jle
jle
pop
ret
or
push
rorl
adc
inc
test
mov
cmpl
loopne
rorl
shl
lret
or
xor
xchg
or
test
ret
loope
pusha
aam
mov
sub
ss
je
loop
push
inc
xor
sub
or
pop
adc
adc
imulb
test
bnd
mov
or
sti
scas
xchg
cwtl
sbbb
dec
je
mov
lcall
dec
lahf
jno
cmpsl
cmpsl
jl
movsb
bound
out
push
lock
stos
jg
adc
mov
mov
add
pop
push
imul
mov
test
adc
push
push
and
xchg
mov
fisubl
hlt
and
loopne
add
cmpsb
cmp
sub
adc
cs
inc
push
movsb
and
in
call
andl
adc
pop
aas
outsl
and
or
xchg
pop
sahf
xor
cmpsb
and
sub
sbb
ss
xchg
or
lcall
cltd
mov
mov
test
push
hlt
loopne
adc
pop
movsl
gs
mov
stos
mov
or
rcrb
leave
push
add
cmp
ja
aas
lds
ljmp
jb
cwtl
xchg
or
push
adc
fdivl
fimuls
xchg
jo
jg
pop
scas
fisttpl
stc
mov
xchg
cmp
sub
stc
cmpsb
insb
push
sub
mov
mov
mov
loop
repnz
imul
pop
adc
cmp
push
divb
lock
mov
fsubrp
pop
mov
dec
xor
bound
pop
jns
cmp
jle
pop
in
or
pcmpeqd
push
push
push
xchg
pop
std
cs
cltd
lret
mov
adc
call
adc
add
cld
inc
es
sub
outsb
daa
xchg
test
mov
push
jae
adc
pushf
sub
push
push
mov
lret
adc
xor
push
insl
in
sarl
lods
xlat
bound
aam
aam
xor
movsb
and
mov
in
into
inc
int3
out
or
push
movsb
and
stos
or
push
dec
adc
lock
movsb
adc
mov
jno
cmp
fdivr
dec
mov
pop
or
and
les
lret
jp
lock
mov
xchg
mov
repz
lock
ds
mov
lock
xchg
popa
loop
stc
fldt
subb
mov
inc
mov
and
sub
and
inc
js
push
pop
adc
or
hlt
clc
inc
jbe
jle
and
jle
jle
sbb
xor
popf
sub
add
xor
cli
enter
idiv
pop
popf
push
ficomps
mov
cld
sar
idivb
push
into
cmp
dec
jo
mov
lret
and
mov
int3
add
xchg
mov
jbe
mov
xchg
dec
dec
ret
jmp
das
ret
jmp
das
hlt
popa
cmp
pop
sarl
or
lret
and
enter
mov
lret
push
and
adc
enter
lock
jp
sub
js
jle
xchg
movsl
outsl
or
fimuls
ret
rorb
and
mov
dec
dec
dec
imul
mov
int3
repnz
xchg
pop
pop
jbe
inc
dec
pop
dec
outsb
inc
xchg
mov
sbb
loop
sub
push
cmp
dec
jl
inc
movsb
xchg
xchg
cmp
sub
push
in
dec
lock
in
ljmp
mov
dec
pop
push
mov
pop
mov
push
pushf
mov
jmp
xor
sub
wrmsr
pop
xchg
shll
and
mulb
adc
mov
jo
pop
cmp
mov
or
aam
push
adc
lcall
and
int3
popf
fcoms
call
popl
bound
pop
outsb
mov
push
xor
dec
sbb
ds
das
icebp
pop
lcall
mov
adc
adc
or
xor
cmp
repnz
shlb
lock
or
pop
adc
pop
pop
mov
aas
mov
shrl
jecxz
jmp
pop
and
adc
das
mov
out
jp
dec
je
idivb
pop
call
and
and
inc
addb
jo
jle
jle
jle
dec
mov
xor
xchg
sub
in
inc
outsl
scas
enter
shll
stc
in
decb
jae
jnp
and
shl
fisubrs
pop
in
xchg
xor
and
inc
fs
movsl
jl
adc
mov
sar
out
cld
idiv
adc
mov
inc
push
xchg
adc
popf
add
pop
lock
stos
mov
pop
sti
xchg
and
or
jbe
les
lds
mov
psubb
pop
adc
add
cmpsb
mov
sbb
lcall
imul
xor
scas
lcall
cmp
push
in
int3
lahf
stc
andb
sub
jle
jle
pop
adcl
xor
and
dec
mov
daa
mov
mov
push
push
pop
int3
mov
daa
in
pop
jp
jo
add
add
jnp
dec
lods
insb
scas
shrl
les
nop
pop
mov
ljmp
xor
hlt
es
lock
xchg
aas
mov
ret
das
inc
rorl
cmp
inc
xor
push
inc
or
ss
popa
adc
filds
fdivrl
dec
in
call
dec
mov
mov
iret
lock
and
js
repnz
pop
les
and
mov
push
andnps
xchg
test
or
pop
mov
mov
cld
jnp
xchg
test
xor
mov
sbb
rcrb
adc
ss
pop
je
cmp
cmp
sub
jbe
xchg
nop
enter
jmp
xor
addl
mov
dec
cmpl
rcrl
fidivl
or
cmp
push
xor
and
or
ret
pop
cwtl
daa
mov
add
popf
xor
dec
cld
lea
loope
shrl
mov
ret
iret
or
push
add
xor
cmp
std
popa
scas
out
insb
ds
es
jl
int3
pop
test
mov
dec
shlb
pop
popa
mov
xor
test
adc
push
cmp
jmp
push
fdiv
jbe
cmp
enter
shlb
jl
jle
pop
mov
mov
notl
loop
div
sbb
xchg
sti
adc
decl
call
fsubs
adc
and
inc
call
push
call
inc
cmp
lret
pop
push
sbb
sub
jb
je
add
cmp
cmp
cmp
xchg
adc
das
cs
out
insb
add
mov
mov
and
sub
sub
fcompl
das
pop
enter
xchg
adc
and
in
ret
lahf
add
mov
cmp
xchg
jl
imul
pop
xchg
dec
cmp
jle
jns
push
test
and
mov
lret
add
sub
and
xchg
cli
pop
icebp
movsb
push
adc
in
push
mov
in
push
or
stos
loope
xchg
xchg
mov
mov
or
dec
lcall
jb
je
dec
mov
push
in
mov
daa
clc
dec
sbb
push
push
xchg
mov
ljmp
pop
jb
vmovmskps
dec
aam
or
mov
out
fistps
and
xor
and
cmpsl
and
shlb
je
dec
call
push
jp
add
test
sarl
cmp
sub
hlt
je
mov
dec
ret
das
or
jo
jne
rcr
mov
xor
ss
fcoml
mov
mov
sti
add
out
cmp
push
cmp
xor
loop
sub
adc
mov
sub
xor
mov
lahf
loopne
inc
aaa
add
cmp
cmp
push
jle
mov
rclb
cmpsb
sar
push
rcrl
and
shl
jp
lods
dec
and
add
pshufw
popa
xchg
pop
or
subb
lods
push
test
aad
mov
enter
and
inc
test
mov
xchg
mov
scas
cld
mov
push
in
cld
dec
sub
inc
mov
add
inc
xchg
push
pop
shrb
es
jns
in
stos
xchg
jbe
pop
mov
orb
es
jp
sub
lods
nop
and
stc
mov
mov
int
fnsave
mov
xchg
dec
pop
stos
sbb
loop
in
call
mov
xchg
cmp
daa
daa
inc
les
pop
insb
fcoms
pop
mov
cli
shll
adc
adc
cmc
movsb
loope
push
scas
dec
jmp
rcrl
rol
das
ret
dec
cmpb
outsl
or
scas
cld
hlt
adc
call
or
outsl
popa
pushf
stos
fnstcw
pusha
or
nop
sbb
jb
dec
ret
add
push
xor
add
lcall
push
popa
xchg
cmp
jb
jle
jae
jg
pop
daa
sahf
popa
push
les
cs
aas
cld
pop
lods
inc
mov
js
les
mov
cmc
orb
jmp
aaa
pop
sbb
sub
cmp
sub
or
leave
pop
push
inc
dec
imul
js
jbe
js
pop
cmpsl
decb
sub
es
repnz
inc
ljmp
jg
mov
mov
or
test
adc
loop
jecxz
repz
pop
cmp
cs
shl
xor
cld
int
mov
icebp
js
das
add
inc
sbb
cmp
mov
adc
aas
ret
daa
leave
pop
or
out
in
xchg
ss
test
dec
es
mov
leave
aad
sbb
fidivl
cmpsl
push
fs
sbb
add
xchg
test
in
adc
or
adc
clc
lcall
lret
push
push
stc
jge
mov
js
dec
inc
mov
jae
mov
hlt
xchg
clc
xchg
mov
xchg
mov
mov
icebp
cld
std
cld
adc
test
and
stc
js
dec
test
aas
decb
add
push
dec
or
push
adc
push
lahf
sbb
push
stos
xchg
lcall
pop
repnz
pop
out
jle
pop
in
stc
insb
mov
mov
pop
outsb
movd
jle
pop
iret
stc
rorb
outsb
ret
jns,pt
lahf
aam
pop
lret
xchg
iret
ret
bound
rcrl
fdivl
fdivrl
adc
pop
xchg
lahf
cmp
pop
adc
test
js
xchg
rcrl
cmpsb
inc
xor
aas
pop
aas
arpl
jbe
fwait
pop
mov
repnz
adc
scas
and
mov
pushl
add
subb
add
or
ret
cmp
mov
sub
inc
je
jae
mov
xchg
xchg
mov
test
out
clc
mov
and
sbbb
scas
sahf
sbb
fdivrs
sub
sahf
dec
dec
mov
lcall
cmp
das
loopne
or
push
dec
mov
dec
test
cld
xchg
shrl
scas
shrl
sbb
in
push
ss
cmp
aad
adc
call
mov
mov
cmp
cmp
push
adc
or
lahf
push
orl
sub
clc
mov
and
ss
and
fsubrl
pop
lods
jle
xchg
movsl
ret
push
adc
dec
xor
mov
jmp
out
pop
adc
jecxz
or
sub
repnz
dec
mov
popf
ret
push
mov
scas
and
sub
ss
xchg
clc
aam
rolb
test
add
daa
dec
test
mov
dec
xchg
mov
int
fs
mov
clc
adc
xchg
or
adc
mov
shrl
sub
push
jno
lcall
aas
in
mov
push
pop
outsb
or
xor
pop
dec
mov
test
divb
loop
gs
and
mov
lods
xor
adc
mov
pop
call
lret
popf
test
cld
pop
xchg
jbe
je
movsb
dec
les
daa
cmp
inc
mov
test
clc
stc
sarb
mov
inc
pop
js
cwtl
mul
jecxz
repnz
sar
jg
dec
mov
rorb
pop
decb
and
mov
cld
enter
or
push
inc
cs
test
fbld
pop
das
xor
js
jp
pop
cmp
pop
adc
lock
outsb
call
adc
test
dec
daa
leave
inc
popa
inc
adc
or
mov
mov
in
in
sub
loope
imul
les
shlb
pop
sbb
rorb
xchg
and
popa
int3
adc
cmp
inc
sub
icebp
cltd
js
aas
iret
mov
in
test
daa
fsubs
pop
cmp
mov
fs
clc
cli
xchg
mov
scas
js
pop
mov
enter
push
fs
ffreep
sbb
repz
and
fcoms
repnz
iret
dec
jecxz
bnd
jg
pusha
xchg
orb
aas
loop
mov
test
lahf
xchg
sbb
cmp
pop
scas
pop
iret
test
mov
shl
pushf
jle
loopne
adc
call
lahf
push
shl
lock
lods
mov
addr16
shl
movsl
movsb
movl
mulb
inc
dec
shll
inc
mov
inc
ljmp
push
cld
je
add
call
jle
dec
pushf
test
cli
or
aaa
xor
push
inc
movsb
in
mov
pop
pop
test
cli
sub
pop
in
mov
call
icebp
je
xchg
outsb
ds
mov
sbb
mov
xchg
push
mov
jecxz
repz
cld
shlb
or
adc
xor
mov
xchg
and
or
jo
lret
or
shll
xor
cmp
mov
divb
sbbb
pop
out
sbb
mov
sub
inc
cmp
push
sarl
pop
or
or
loope
vpsubsw
or
lret
mov
xor
mov
aad
sbb
mov
cmc
cwtl
mov
xor
sbbb
pop
mov
and
clc
cli
pop
gs
in
lods
lock
test
pop
outsb
and
inc
cmpb
aad
cld
cwtl
in
pop
enter
cli
xchg
push
sbbb
jbe
adc
dec
cmpsl
add
cld
subl
push
insb
add
cld
hlt
and
sarl
xor
push
test
rorb
or
in
roll
bnd
sarl
push
daa
ljmp
or
pop
and
lret
xor
out
dec
xor
pop
cld
bound
jbe
addb
repnz
imul
xor
cld
ficompl
out
sub
jle
inc
adc
cmp
cmp
mov
xor
push
cmpsl
cs
in
shrl
jne
jp
xchg
pop
mov
add
repnz
pop
pop
ljmp
dec
scas
or
mov
jmp
test
sub
pop
sub
jle
jle
lahf
jmp
push
js
mov
mov
test
push
scas
xor
ss
jmp
loope
cs
or
jl
xor
aam
dec
add
add
jp
xchg
pop
push
pop
add
cmp
push
cmp
dec
push
cmp
daa
arpl
mov
pop
sub
jp
dec
ret
test
inc
rolb
add
pop
iret
ret
mov
xor
and
ss
cmp
in
mov
mov
jo
ss
inc
rcrl
iret
int
shlb
clc
loope
xor
cmp
xor
leave
jns
out
aam
lcall
cmpsb
sub
xchg
ss
es
ret
filds
inc
cmpsl
xchg
dec
xchg
lods
enter
inc
jl
dec
jmp
inc
xchg
or
mov
dec
das
or
push
cmpsl
inc
xchg
fmulp
dec
mov
js
push
push
mov
push
dec
push
jle
dec
sbb
rclb
jne
enter
xchg
out
in
mov
into
mov
inc
pop
add
or
jae
cli
lods
push
sub
push
dec
jno
push
mov
popa
or
cmpb
pop
or
jp
dec
mov
scas
sti
cld
adc
push
dec
push
or
cmp
inc
pop
cwtl
adc
mov
adc
mov
inc
test
ret
push
mov
out
divl
xchg
and
mov
shll
mov
shll
addb
jne
lcall
out
pop
xchg
imul
fdivrl
adc
sub
or
xor
movsb
cmp
xor
repnz
mov
mov
mov
fcoml
ljmp
scas
enter
push
clc
fs
cmpl
cltd
filds
movsl
jle
pop
lods
sbb
mov
mov
icebp
and
iret
mov
xchg
lret
cmpsb
add
push
cmp
in
sub
notb
add
xor
sbb
outsb
and
push
loop
mov
in
cltd
mov
mov
xor
and
daa
js
push
adc
and
mov
lock
pop
adc
int3
jne
call
dec
dec
sub
mov
adc
rcr
or
js
dec
xchg
test
add
jp
jle
call
leave
inc
add
mov
testb
jg
lret
scas
mov
mov
inc
jl
xor
pushf
cltd
les
mov
pop
dec
push
nop
cmpsl
mov
adc
scas
sarb
add
jge
mov
sahf
jo
push
dec
and
and
ljmp
mov
add
into
ret
pop
mov
dec
mov
push
ja
cli
xchg
sub
lock
xchg
aam
push
mov
push
xor
mov
ds
pop
mov
enter
jnp
cli
icebp
xchg
cld
xchg
jmp
sub
sub
mov
adc
hlt
gs
add
aas
pop
leave
mov
fsubl
push
sahf
adc
xor
cmp
pop
jb
mov
jle
adc
xor
jbe
xchg
das
loope
mov
leave
jae
into
jmp
leave
mov
or
pop
inc
mov
xor
lock
and
cmp
or
xchg
dec
std
jl
push
adc
mov
leave
push
pop
jmp
enter
pop
jp
dec
stos
cmpb
rcrb
fisttps
and
pop
inc
xor
add
test
xchg
xor
and
xchg
jo
dec
aaa
push
push
mov
fwait
or
inc
dec
mov
sbb
dec
cmpsb
fmull
pop
clc
and
add
mov
mov
mov
lea
xchg
jno
adc
shlb
xchg
jo
pop
ret
or
push
cmp
and
loopne
sbb
cmp
cmp
xchg
rcrb
in
sar
fbstp
mov
cmc
pop
stos
cmp
xor
fdivr
stos
mov
stos
jecxz
out
popf
add
insb
fisubl
inc
adc
and
or
sbb
jb
hlt
repz
cmp
mov
shld
xchg
and
or
add
jb
dec
fwait
mov
jp
test
lods
pushf
das
incb
xchg
mov
bound
mov
cld
or
sub
fisubs
pop
add
sub
jb
xchg
rclb
sbbb
orb
lods
mov
mov
cmc
repnz
cmp
push
and
test
aas
scas
and
notb
cld
or
dec
cld
xchg
movsl
jle
xchg
mov
in
adcb
add
bound
mov
mov
inc
sub
jbe
push
inc
mov
mov
aam
cmp
mov
dec
shll
or
shrb
push
mov
xchg
in
cmpb
add
xor
push
mov
mov
cld
jp
js
xchg
ret
jo
bnd
mov
sbb
sub
in
mov
pusha
cld
push
inc
lock
aam
push
pop
push
cltd
in
dec
fdivs
fcmovbe
cld
loope
rorb
or
shlb
inc
xor
xor
xchg
dec
jp
jg
stc
push
das
cld
sbb
ret
sti
roll
repnz
push
jo
sub
dec
sub
pusha
cld
gs
push
in
lods
pusha
aas
mov
dec
testb
xor
imulb
sahf
imul
pop
mov
fcmovne
lock
pop
adc
sbb
mov
ret
add
cltd
stos
add
sub
xchg
ds
fcoml
or
shll
das
cmpl
pop
jle
dec
inc
cwtl
bound
sar
std
pop
cs
inc
jmp
ds
cld
adc
imul
jle
pop
mov
pop
in
mov
pop
xchg
sub
scas
mov
and
cmp
lcall
jbe
mov
push
push
inc
cmp
jl
daa
movsl
lock
lock
lock
sub
pop
xor
data16
imul
mov
lock
inc
sete
andb
lret
out
clc
dec
pop
es
dec
in
pop
xchg
bound
pop
mov
lahf
jecxz
stc
test
aaa
and
xchg
jns
cli
and
into
dec
jecxz
notb
mov
sahf
mov
test
sub
iret
cmc
lret
stc
jg
add
fsts
loope
jmp
and
and
repz
xor
dec
inc
out
jb
pop
aad
imul
dec
cmp
push
scas
inc
pop
rorl
jns
out
iret
mov
int
rcl
jle
cmp
sub
nop
push
pop
orb
je
popf
xchg
sbb
loop
bound
and
jmp
fsubrs
xchg
test
je
test
test
push
rolb
sbb
orl
mov
mov
push
sbbl
lret
pop
dec
stos
mov
decb
mov
nop
iret
xor
xor
push
pop
jno
sahf
xchg
or
shlb
rorb
stos
push
test
xchg
and
insl
cmp
mov
inc
pop
pop
cmpb
cwtl
pop
sar
mov
lock
mov
movsb
cld
add
aaa
adc
inc
rclb
les
loope
adc
push
cmp
gs
out
and
orl
sarl
loopne
stos
popf
iret
adc
std
in
xchg
pop
xor
push
pop
das
ret
repnz
pop
mov
sub
fldl
and
daa
xchg
mov
pop
sub
pop
pop
dec
push
and
sub
jne
mov
movsb
mov
call
js
xchg
jl
dec
aam
lret
fisubs
out
enter
push
lock
lcall
je
push
cltd
mov
pop
cmp
dec
sbb
xchg
rcl
jle
dec
out
inc
adc
inc
and
nop
lock
sahf
dec
push
test
sbb
push
into
mov
cmp
movsb
sub
ret
paddd
out
and
or
aas
push
sar
jbe
dec
xchg
int
ret
dec
imul
push
pop
jb
je
jbe
dec
dec
subb
das
mov
mov
scas
fists
test
xor
pop
add
mov
or
push
fs
ljmp
movsb
mov
jo
pop
cmpsb
ret
jo
jl
adc
sub
sub
je
movq
mov
jb
pop
xchg
cs
push
cmp
imul
inc
movsb
fadds
xor
adc
add
insl
scas
or
mov
pop
out
or
lock
dec
fisttpl
enter
ret
fsubl
jbe
lcall
adc
mov
sub
cmp
outsb
cmp
cld
inc
mov
xchg
in
lock
lock
ret
cs
rcrl
cmp
xchg
dec
mov
call
je
inc
mov
orl
cmp
dec
mov
outsb
xchg
cmpsl
test
mov
sbb
insl
mov
add
loope
js
jmp
loope
jmp
daa
push
add
or
adc
or
jmp
orl
inc
js
ja
dec
mov
jns
sbb
jb
and
aad
out
dec
daa
sub
lock
sarl
and
adc
roll
sub
scas
lahf
cmpsb
xchg
movb
jl
sub
inc
pop
push
loopne
jnp
roll
jo
xchg
jbe
call
dec
xor
push
arpl
aas
movsl
sub
cmp
call
bound
rorb
jle
adc
mov
mov
out
js
je
dec
pop
jb
mov
mov
push
mov
dec
xor
ss
out
jp
jl
jle
dec
roll
xchg
xchg
pop
gs
subb
xchg
xchg
push
adc
clc
sbb
add
nop
dec
pop
je
push
jns
jl
xor
cld
sbb
mov
jle
push
cmp
movsb
push
mov
rcl
or
mov
sbb
xchg
and
inc
rcrb
mov
mov
add
lret
or
xor
push
or
xchg
pop
mov
loop
and
mov
lcall
or
push
frstor
add
into
push
add
lock
adc
or
xor
fdivr
push
pop
loopne
mov
lods
mov
sub
and
jp
mov
js
dec
mov
int
in
xchg
jb
mov
mov
push
or
je
ret
pop
inc
sub
lods
dec
mov
ljmp
cmpb
sub
les
inc
out
cld
pop
mov
or
or
lock
je
daa
leave
popa
push
pop
jle
sbb
pop
in
mov
mov
xchg
popa
push
sbb
cmp
leave
outsl
rcl
push
in
jo
pop
int
leave
cmc
push
xchg
pop
sbb
nop
xor
cmpsl
mov
dec
out
in
call
add
jp
xchg
adc
inc
into
xchg
ljmp
out
test
pop
popa
jl
bnd
sahf
rcl
jnp
xchg
add
movsb
push
fistpl
xor
jle
adc
cs
cld
pusha
push
cmpsl
xorb
mov
movsb
jo
dec
into
ret
push
es
adc
and
nop
fdivl
pop
loop
ds
pop
std
fisubs
gs
push
or
repnz
ljmp
stc
ljmp
inc
loope
aas
or
push
mov
stc
movsl
adc
repnz
ljmp
in
insb
sahf
xchg
xchg
aas
loope,pn
xchg
add
dec
das
and
js
jp
jl
dec
mov
mov
and
out
or
js
dec
cmp
in
jp
cli
sar
stc
bnd
sbb
inc
ds
icebp
je
clc
adc
out
or
jmp
cwtl
mov
or
icebp
sub
push
das
or
xchg
jo
dec
fnsave
repnz
mov
lock
jle
dec
cli
and
cmp
xchg
add
cmp
jp
je
leave
mov
fs
adc
cld
or
pop
loopne
into
rcl
loopne
stc
cld
sbb
cmp
dec
test
out
aas
xchg
aas
mov
mov
jp
out
in
mov
gs
into
xchg
cld
fwait
mov
adc
dec
int3
out
add
or
fsubr
dec
pop
aam
jg
movsl
out
out
out
out
in
mov
mov
xor
mov
ret
in
les
and
cli
mov
add
movsb
insb
xchg
pop
daa
mov
je
and
std
xchg
test
and
xor
pushf
xchg
outsl
mov
xchg
or
add
cmp
daa
sub
cmp
jns
or
adcb
pop
cli
daa
aaa
popa
jo
sub
call
or
sbb
cmp
adc
enter
pop
insb
outsl
inc
je
push
int3
ret
sub
repnz
pop
xchg
call
dec
cmp
cmp
push
mov
push
push
sub
mov
dec
jl
jle
jle
dec
mov
pushf
adcl
cld
outsb
mov
cmc
xchg
fs
fnstsw
dec
shlb
adc
xchg
cmp
daa
andb
pop
mov
sarb
push
jecxz
cli
xor
insb
mov
mov
pop
ja
sbb
dec
mov
mov
insb
and
and
cld
sub
rcr
mov
js
push
adc
mov
sbb
addl
rolb
shlb
push
or
pop
into
nop
xchg
stos
adc
inc
es
xchg
push
lods
into
cmp
push
rcl
out
loopne
popa
fisubl
jmp
pusha
das
jle
sub
test
icebp
xor
push
mov
arpl
xchg
add
js
stos
rcrb
cmp
cmp
xchg
adc
jns
dec
pop
sahf
adc
or
add
inc
cli
mov
mov
sar
cld
ret
cmp
and
jg
hlt
xchg
out
fwait
or
and
je
add
xchg
das
dec
loope
jbe
or
adcb
imul
lock
mov
add
fnstsw
js
mov
dec
aaa
adc
leave
pop
fsubrs
jg
ss
lods
cwtl
daa
sbb
pop
lea
sarb
jo
je
xchg
ret
loop
push
decl
cld
int
push
dec
and
scas
mov
sahf
mov
mov
out
sub
ljmp
sbbb
insl
pop
fs
xchg
mov
cmc
cmp
sub
dec
jl
js
mov
jo
inc
sub
mov
mov
push
hlt
lret
stc
rcrl
test
sub
push
or
mov
push
jbe
dec
inc
mov
push
fdivp
pop
jb
push
mov
decl
mov
call
es
je
in
adc
dec
hlt
mov
pusha
js
dec
sbb
cmp
and
xor
ljmp
mov
andb
cmc
inc
add
pop
mov
mov
jl
push
cmp
rorl
jns
sarb
cmpsl
mov
into
push
loope
out
push
mov
sub
sub
pop
mov
and
out
in
xchg
pop
testb
or
sarl
xchg
out
mov
fdivr
inc
les
mov
cmp
add
and
fistpl
sbb
cmp
popa
xor
das
xchg
adc
clc
cmp
xor
es
popf
enter
iret
cmp
cmp
shrl
jp
mov
cld
lods
leave
mov
inc
pop
mov
pop
movsb
je
enter
sahf
mov
outsb
hlt
adc
call
sbb
daa
test
ss
xchg
xchg
jmp
pushf
xor
inc
pop
pop
mov
push
aaa
or
push
dec
sbb
inc
cs
dec
and
push
enter
lret
or
adc
mov
jl
pop
lods
inc
mov
xchg
arpl
pushf
mov
sub
repz
out
repnz
mov
add
push
lock
aas
daa
xchg
inc
dec
imulb
pop
rcrb
xchg
fimull
out
push
movsl
in
sbb
sbb
pop
xor
xor
mov
pop
jecxz
and
mov
je
dec
pop
xchg
adcb
add
lcall
xlat
or
xchg
addr16
stos
out
std
imul
mov
mov
movsb
aad
inc
pop
leave
test
mov
clc
in
add
ss
dec
push
push
xchg
pusha
subl
xchg
lret
jecxz
xchg
xor
or
mov
jb
in
mov
jge
cmpsb
nop
daa
test
xchg
jp
mov
dec
pop
fsubl
adc
stos
aam
cli
cmp
lods
hlt
fisttps
mov
movsl
push
stos
scas
push
fimuls
mov
cmp
insb
call
dec
mov
les
xchg
fs
dec
shl
and
mov
ds
push
dec
xor
xor
add
dec
idivl
and
fdivl
jl
push
imul
cli
jl
ja
pop
pop
or
imul
sub
xchg
stc
cmp
or
lock
enter
aad
enter
subb
mov
aaa
cmp
sub
nop
mov
es
xchg
xor
lret
push
shlb
dec
jno
pop
not
inc
jmp
stos
or
or
std
add
test
sar
sub
cmpsb
ret
pop
add
xor
loop
push
add
lret
es
dec
and
xor
push
int3
mov
cwtl
push
mov
loopne
cmpsl
mov
ds
xor
fsubs
andb
rorb
push
jmp
je
leave
aad
dec
cmp
daa
sub
push
add
daa
ljmp
inc
aas
popa
xchg
outsb
mov
lock
pop
pushf
xchg
add
or
aam
mov
jo
pop
insb
mov
lods
mov
movsl
std
mov
js
cmp
inc
mov
shl
popa
dec
cmp
sub
les
leave
es
push
orb
adc
mov
sbb
scas
cmpb
loopne
call
dec
or
sub
shrb
test
mov
pop
mov
lret
cld
nop
push
cwtl
mov
xchg
xchg
test
push
mov
fcoms
jle
or
mov
js
je
dec
adc
mov
loop
sahf
dec
and
lock
xchg
add
mov
pop
add
cmp
xor
mov
or
rol
dec
mov
test
fcomip
out
inc
mov
je
repz
dec
or
cld
lret
mov
mov
loopne
mov
mov
pop
cmp
or
push
push
orb
js
mov
in
js
inc
daa
sub
bound
call
mov
dec
das
adc
mov
cmpl
push
cmp
in
pop
pop
loopne
and
int
adcb
mov
push
or
fsubs
mov
or
sub
sub
push
incb
rol
dec
sbb
inc
js
add
cmp
hlt
je
addr16
or
outsb
daa
mov
movsb
push
push
lock
xor
sub
pop
or
push
xchg
les
insl
sub
leave
ss
sarb
sbb
ljmp
dec
loopne
pop
cs
aam
xchg
or
jb
call
ds
and
lods
pop
or
xor
pop
cmp
shlb
xor
pop
or
gs
jecxz
mov
add
lret
aaa
dec
pop
cmp
dec
adc
lret
ds
in
pop
pop
cld
xor
push
es
pushf
and
dec
and
inc
dec
push
stos
cmp
push
push
push
inc
cmp
xchg
sbb
sub
xchg
test
cmp
or
push
call
jb
adc
mov
xor
xor
xor
loop
jne
out
pushf
xchg
rcrb
jae
les
shll
and
loopne
test
cld
jo
xchg
test
es
js
nop
push
mov
sahf
mov
lock
in
lock
pop
andb
mov
pop
push
cmp
sti
or
inc
mov
dec
sub
call
shrl
pop
mov
jb
pop
pop
xor
loope
push
sub
into
jmp
mov
std
xchg
push
daa
inc
add
cmp
cwtl
sbb
popa
cmpb
ljmp
xor
mov
mov
xor
pop
inc
push
inc
lods
jmp
nop
bound
rorl
cld
xor
sbb
add
cmpsl
out
iret
fimull
fimuls
mov
jo
pop
out
lods
pusha
dec
mov
cltd
flds
jp
outsl
cmp
ds
sub
inc
test
inc
add
and
push
xchg
lret
inc
jle
or
daa
jl
inc
pop
mov
cmp
dec
movnti
data16
lods
mov
aas
jb
dec
pop
or
mov
test
pop
and
mov
cmp
cs
xchg
add
and
push
and
bound
or
dec
jbe
js
pop
mov
or
mov
ret
xor
mov
fadds
dec
out
pop
ds
mov
enter
aam
and
loopne
jmp
data16
pop
xor
xor
mov
mov
jl
inc
shl
mov
mov
adc
dec
adc
js
je
pop
shrb
cmp
jmp
in
adc
xor
clc
fisubrs
push
mov
pushf
addr16
jge
test
ret
pop
mov
sbb
data16
test
and
test
out
out
or
testl
enter
and
rclb
testl
mov
xor
std
mov
xchg
inc
dec
xor
fmuls
je
pop
mov
gs
daa
inc
test
mov
dec
cli
push
jb
dec
rorb
pushf
sbb
xor
cmpsb
daa
xchg
ret
add
and
cmc
add
aam
mov
out
and
lods
es
daa
add
xchg
pop
cmp
leave
push
and
fcomip
dec
mov
sub
ds
nop
cwtl
adc
dec
dec
and
inc
jne
push
xor
loop
in
popa
sbb
cmp
cmp
mov
push
data16
sub
dec
cmp
or
and
mov
and
dec
enter
inc
stc
xor
xor
xor
pop
dec
add
xor
enter
out
jo
ja
test
into
add
cmpl
cmp
lock
dec
xchg
push
jp
inc
xchg
sbb
xor
pop
dec
adc
sub
popa
bnd
jle
sbbb
addr16
repz
retw
jp
mov
call
pusha
lock
or
scas
pop
nop
mov
clc
inc
and
nop
push
xchg
ss
fs
xchg
imul
jo
fmull
sbb
test
aaa
addr16
sbb
cmp
jl
das
jecxz
bnd
je
add
cmp
add
loopne
fsubrl
jl
xchg
jne
lret
or
faddl
cmp
fs
mov
loopne
sbb
pop
aaa
dec
cmp
test
and
push
or
inc
and
jmp
lock
jno
pop
cld
cmpsb
and
push
push
fadds
xor
jo
adc
cmp
lock
mov
sbb
sbb
xor
add
dec
insb
popa
mov
sub
add
sub
xchg
mov
xor
push
test
icebp
cmp
mov
xor
inc
add
daa
xchg
js
and
andb
xor
xor
mov
sarl
mov
cli
inc
dec
mov
or
push
popf
lock
xor
aas
test
insl
cmp
imul
clc
push
aas
pushf
mov
cwtl
nop
add
mov
xchg
or
pop
in
call
adcb
xor
ja
sbb
in
leave
popa
sub
xchg
popa
and
cmp
rclb
movsb
sub
sub
mov
mov
lcall
xor
cs
xchg
pop
movsb
and
mov
shll
dec
ret
movsb
sbb
add
ss
les
xor
scas
or
dec
jbe
sbb
xchg
in
sbb
xor
fildl
add
mov
add
sub
pushl
clc
movw
bt
pushl
popl
jmp
stos
rolb
push
sbb
lret
dec
push
into
jge
xchg
stc
or
dec
fnstsw
insl
or
pop
and
lock
in
ret
insl
and
cwtl
je
pushf
xchg
test
out
cmp
lcall
jae
daa
es
nop
sbb
xor
dec
sbb
aaa
in
repnz
add
sbb
out
add
cmpsb
sub
add
stc
mov
mov
outsb
std
adc
andl
outsb
pushf
jle
repz
xchg
fldcw
mov
inc
mov
pop
mov
inc
aaa
dec
outsl
adc
repnz
mov
inc
jge
mov
dec
cmc
adc
sub
enter
pop
or
xchg
mov
jg
cmpsb
adcb
add
int
push
add
push
cmp
mov
xor
dec
int
xor
ss
xchg
jge
sbb
mov
inc
movsb
scas
and
xchg
adc
and
outsb
add
fisubrl
imul
roll
add
add
mov
mov
mov
dec
push
xchg
sbb
icebp
int3
lahf
in
xchg
mov
or
cmc
jns
jge
in
ret
inc
adcb
pop
out
stos
hlt
test
and
cmp
bound
jmp
cs
fcmovnb
mov
iret
and
xchg
stos
std
push
cwtl
jge
mov
push
popa
andb
push
aaa
and
mov
mov
test
testl
add
shrb
sub
mov
and
lahf
sbb
mov
and
adc
adc
fcmove
das
arpl
ds
or
mov
outsl
lahf
dec
hlt
jb
adc
mov
sti
test
mov
push
movsb
cs
out
pop
cmp
mov
mov
sbbl
imul
xchg
push
into
dec
sbb
and
push
call
test
mov
and
dec
lcall
dec
push
arpl
mov
mov
cltd
test
cmp
call
add
and
xchg
lret
jo
mov
imul
mov
add
rcrl
mov
jno
lea
sub
lcall
lea
adc
call
int
imul
jae
enter
pop
test
jae
push
xor
inc
xor
enter
and
sti
cmc
cmpsl
filds
xor
ds
outsb
mov
dec
outsl
arpl
inc
insb
insb
outsl
arpl
lods
es
cmp
cmp
mov
arpl
mov
dec
addr16
jno
in
mov
cwtl
dec
jns
mov
inc
incl
jne
cmpsl
int
push
pop
xchg
loopne
scas
mov
cld
lahf
pop
push
leave
outsb
cltd
call
dec
outsl
lods
xchg
aad
add
and
xchg
test
pusha
iret
std
sbb
in
jb
jmp
push
cwtl
fldl
stc
int3
xchg
or
xor
mov
fwait
cmc
push
push
test
inc
pop
sahf
faddl
jno
movsb
addr16
mov
cmp
xchg
adc
cwtl
mov
jo
mov
jmp
lea
add
add
pushf
adc
neg
add
mov
xor
sar
not
mov
cmp
repnz
pusha
lea
jne
movzbw
pushf
movb
setae
mov
movsbw
seta
jmp
jmp
sbb
lcall
fcompl
rclb
lods
jg
push
imul
mov
sbb
pop
inc
jne
push
js
fwait
sahf
mov
adc
pushf
jae
cmc
or
lock
or
cmp
push
call
jp
xchg
mov
adcb
or
or
push
sub
xchg
mov
fs
cmc
dec
dec
pop
inc
rol
pop
jp
cmc
out
push
insb
lea
push
dec
cmpsb
subb
ja
pop
jecxz
push
rcrb
pop
fsubl
lds
inc
js
add
sub
xor
pop
rcl
sbbb
xchg
in
xchg
clc
mov
adc
hlt
push
mov
into
mov
sarl
pushf
pushf
ror
pushf
pusha
add
jmp
mov
pushf
mov
mov
pushf
lea
call
jmp
xchg
pusha
pusha
jmp
cltd
xchg
int
cmp
aaa
aaa
push
inc
loop
push
stos
push
hlt
cmpsl
cs
sub
in
jo
push
jns
xchg
sub
fildl
outsl
pop
iret
cmc
orl
pop
rorb
stos
loopne
int
and
enter
scas
pop
sbb
fiaddl
pop
mov
les
add
popf
inc
sbb
jo
ret
inc
sub
mov
scas
lods
and
adc
mov
mov
cltd
mov
lock
sbb
mov
lret
fldenv
jg
pop
je
leave
int3
mov
ja
repz
jnp
popf
sbb
nop
push
add
std
xchg
or
dec
xor
mov
sbb
cld
cmp
mov
out
iret
jnp
lea
push
lods
push
pop
pop
cld
cmp
pavgw
mov
push
lret
sarb
fwait
dec
jp
xor
sbb
js
aam
sbb
sub
loop
mov
fimuls
jo
dec
loop
pop
and
jl
in
mov
fldcw
leave
jmp
mov
xchg
jns
in
ret
sarb
push
cmp
fldenv
xchg
sbbl
ds
mov
ret
lods
nop
adc
imul
movsl
ja
push
xchg
xchg
mov
mov
fisttpl
mov
jne
lahf
scas
xchg
into
sbb
xor
or
loopne
xor
test
lock
je
rcl
add
cmp
into
out
loope
inc
pop
ss
bound
clc
push
sub
std
repz
pop
daa
cmc
mov
and
mov
cwtl
clc
popa
jge
xlat
xor
gs
cmp
add
arpl
adc
xchg
xor
xchg
add
popl
xchg
fst
jge
sub
sbb
xchg
lds
int
lcall
and
sub
lods
fldl
jne
mov
fucom
lock
lcall
cmp
and
cmp
popa
das
ja
add
shrl
xchg
xchg
out
cmp
addl
and
popf
loope
fidivs
or
popa
cli
pop
dec
cli
push
scas
int
mov
pop
jbe
mov
shrb
add
jge
inc
push
rorb
jb
inc
stos
test
and
loope
jns
sub
mov
push
cmp
not
adc
dec
int3
jmp
imul
mov
icebp
pop
push
or
imul
inc
xor
pop
out
xchg
sub
pop
filds
mov
mov
push
sbbl
repnz
push
push
cmpsl
test
mov
mov
dec
xor
and
movsl
cmp
xor
leave
jg
mov
push
and
cltd
push
mov
out
inc
pop
jne
pop
je
xchg
mov
cmpsl
mov
jge
std
xchg
mov
push
lcall
lods
sbb
andb
mov
adcb
fs
mov
les
clc
mov
add
push
xchg
jae
sti
fnstsw
movsl
push
jle
sub
mov
sub
out
adcl
jmp
and
sahf
psraw
stc
movsb
dec
aaa
push
sbb
fcomi
or
ret
adc
xchg
mov
sbb
xchg
mov
insb
jae
lea
push
cltd
mov
jns
dec
pushf
bt
jmp
push
lock
std
std
mov
adc
repz
or
mov
pop
lret
ss
inc
jg
lods
jge
test
inc
andb
pop
pop
lret
add
in
es
test
dec
xchg
mov
pop
pusha
add
out
in
xchg
push
xchg
mov
pop
add
pop
rolb
xchg
inc
pop
push
mov
sub
jne
iret
push
fsubr
out
sahf
adc
cmp
mov
je
mov
repz
cmp
test
imul
enter
les
repnz
cli
in
repz
not
or
pop
adc
jne
mov
mov
out
outsb
ljmp
mov
imul
clc
stc
and
dec
mov
inc
mov
sub
inc
hlt
sbb
xchg
add
sti
push
insl
inc
jp
push
mov
std
mov
arpl
xchg
imul
mov
int3
mov
mov
cmpsb
imul
out
pop
imul
mov
and
cmp
js
adc
jbe
xlat
inc
sbb
js
add
ret
add
adc
push
mov
stc
xchg
jae
clc
push
push
sub
mov
or
push
cltd
jle
nop
ds
sub
test
xor
mov
xor
fwait
push
push
movsl
int
shlb
int
jns
lock
or
cmp
xor
push
sbb
xchg
xchg
or
sbbb
in
jl
fistl
stos
dec
xor
test
adc
mov
push
push
and
int
dec
or
mov
loopne
je
mov
adc
les
adc
jbe
jle
cmc
add
jmp
call
pushl
push
lea
ja
shr
sub
bsr
bsr
pushf
sub
add
movsbl
sub
mov
sets
or
mov
mov
cmp
repnz
push
pushf
pushf
push
lea
jne
movsbw
lea
movb
movzbl
lea
call
xchg
jg
jno
int
mov
mov
pop
or
insb
dec
mov
mov
mov
fsubrl
xor
dec
jp
push
dec
shl
js
ficomps
push
and
stos
push
xor
dec
iret
mov
or
inc
xor
push
iret
xor
repnz
push
int
jbe
lods
mov
aaa
mov
sbb
mov
rol
inc
jno
push
fidivrs
ret
repz
in
cmp
mov
insl
dec
adc
jae
push
lcall
mov
in
shll
clc
sbb
add
nop
dec
add
nop
dec
add
push
dec
add
sub
add
add
leave
pop
mulb
leave
and
test
decl
sbb
dec
test
push
sbb
jmp
cmp
popa
jl
mov
in
cltd
sub
leave
fcoms
xchg
lret
fimuls
or
mov
push
pop
ss
lock
dec
ja
cmp
xor
bound
repz
jne
addl
lret
loope
fmul
in
das
xlat
mov
xlat
push
bound
aad
push
repz
pusha
arpl
push
or
xor
xor
and
lock
lcall
fiaddl
je
push
xor
int
imulb
int3
insl
test
insb
lock
ds
jnp
dec
mov
or
pop
add
xchg
jno
xchg
push
push
cwtl
enter
jbe
mov
cmp
stc
mov
push
std
inc
and
mov
cmpsb
and
sub
sbb
cs
mov
and
ja
jecxz
sub
into
jne
dec
add
push
xor
fsubrl
sbbl
stos
sub
jmp
inc
out
inc
mov
mov
push
std
pop
inc
add
inc
cs
xchg
fwait
rcrb
push
mov
jmp
fldl
loop
jne
test
xor
mov
jl
mov
iret
inc
add
ret
jns
das
push
or
add
mov
mov
je
imul
cmp
or
mov
movaps
or
mov
fisubrl
push
les
mov
ja
int
dec
add
orb
sub
mov
jl
andb
scas
push
leave
shlb
cli
xlat
pop
int
add
pop
push
repnz
mov
movw
jmp
sarb
out
mov
and
shrl
push
mov
fcompl
inc
pop
cmpsl
mov
adc
in
cltd
data16
test
jae
xchg
push
cwtl
xchg
adc
push
add
xor
hlt
out
and
push
mov
sub
jle
fidivrs
in
xchg
dec
pop
repnz
leave
ret
ret
sbb
ja
jae
adc
add
jns
or
xorl
push
xchg
mov
mov
adc
test
and
push
int
stc
pop
fidivs
mov
cmp
push
sbb
lea
sub
mov
xor
mov
push
out
mov
out
pop
xchg
cld
fistl
inc
xor
hlt
aam
mov
and
inc
jp
leave
mov
inc
sbb
out
push
out
mov
out
mov
lret
cmp
arpl
add
mov
dec
sub
jbe
pop
sti
and
mov
xchg
mov
loopne
inc
lahf
leave
mov
dec
faddl
inc
das
test
xor
sbb
xchg
hlt
into
add
push
xor
mov
cwtl
aas
sbb
into
sbb
jae
cmp
xchg
int
lods
pushf
aam
pop
lahf
add
fs
xor
mov
sarb
cli
pop
cmpsl
aad
shrb
jae
cmpsl
mov
jge
test
jb
cmpb
jmp
cmp
ret
lock
shrl
out
push
push
dec
pop
or
xor
mov
and
adc
lahf
xlat
mov
add
orl
jo
fldenv
sbb
ja
mov
shll
lea
mov
scas
jecxz
cmp
fadd
sbb
mov
xchg
push
shl
repnz
cmp
xchg
in
pushf
stos
movsb
add
adc
sbb
sub
or
cwtl
or
and
enter
stos
mov
mov
sarl
leave
mov
cwtl
test
aas
sbb
mov
dec
sbb
les
or
sub
dec
test
jnp
es
xor
mov
mov
push
aad
cwtl
or
inc
lahf
adc
ret
cmp
mov
iret
xchg
cmp
jle
movl
movsl
jae
loope
inc
xlat
inc
sarb
push
push
decl
push
fstpl
mov
push
push
out
dec
movsl
jnp
stos
push
aaa
sub
push
cmp
mov
push
and
jecxz
repnz
icebp
jmp
adc
cmp
xchg
test
and
sahf
xchg
daa
mov
or
push
push
jmp
pop
cmpsb
filds
cmp
add
cltd
mov
lock
lcall
sub
loop
shrb
enter
xor
sbb
mov
adc
xor
jmp
cmp
fs
ficompl
divl
insl
pop
push
jge
call
fwait
jne
push
mov
lret
fwait
icebp
movaps
xchg
sahf
sbb
inc
outsl
out
test
cmpsl
pop
lods
fisttpl
loopne
inc
shr
sbb
out
ror
xchg
jae,pt
sbb
inc
add
sub
fsts
mov
hlt
jo
sti
xchg
cli
js
loopne
jge
and
jp
mov
lods
mov
sbb
cmp
jmp
lods
leave
fwait
lret
stos
insl
pop
dec
adc
rorl
xor
sub
out
add
test
mov
sarl
dec
in
std
test
mov
mov
lahf
inc
rcr
les
loope
fists
sub
fists
aad
imul
repz
clc
pop
or
add
sti
sbbb
divl
cli
loopne
and
flds
push
imull
cmp
pop
add
jl
loope
cltd
idivl
movsb
cwtl
leave
pop
test
mov
push
cli
sahf
jne
jns
mov
mov
jg
inc
adc
clc
jbe,pn
cmp
stc
sti
cmpsl
sbb
xor
add
xor
inc
int
scas
mov
lock
jl
aam
lcall
sti
aad
pop
and
mov
cltd
pop
and
out
daa
test
cmpsl
cmp
sahf
inc
adc
or
xchg
lock
xchg
in
mov
dec
mov
push
mulb
xchg
lret
inc
loop
pop
lcall
push
fisubl
pop
add
mov
mov
lcall
pop
jnp
movsb
or
stc
jne
jnp
push
icebp
adc
xlat
mov
out
cmp
jno
xchg
cmp
fsubs
inc
pop
inc
mov
sub
fists
ret
lock
divl
icebp
sub
daa
xchg
cmpsb
popl
dec
and
pop
les
ja
shr
pop
sti
jb
mov
push
push
sbb
mov
add
mov
jge
mov
mov
jb
pop
out
push
and
mov
sub
or
negl
xchg
pop
adc
out
jle
mov
in
shl
aad
push
clc
sub
mov
xor
in
mov
jbe
cmp
add
pop
out
ss
dec
mov
lea
ret
sub
dec
int3
and
inc
out
les
mov
sbb
push
cmp
sbb
out
push
push
mov
mov
mov
icebp
out
rcr
cwtl
sub
shlb
mov
shr
mov
add
mov
sti
cmpsb
mov
inc
jecxz
addr16
out
mov
cmp
js
cmpsb
or
outsb
push
lods
popf
call
adc
or
pop
pushf
push
inc
or
pandn
pop
hlt
rolb
push
cmp
lock
sbb
jp
mov
call
mov
xor
push
stos
bound
inc
cmc
fwait
pop
adc
popa
sub
roll
jmp
xor
pop
aad
cwtl
sub
jns
pusha
arpl
aam
ss
push
sbb
dec
pop
xchg
cmp
jp
pop
and
mov
imul
push
jp
mov
adc
in
stos
mov
fwait
mov
lods
movsl
mov
sbb
jecxz
cmp
inc
movsb
inc
jp
stc
fs
adc
xchg
es
jb
leave
cmp
mov
jp
push
sbb
mov
dec
cmp
push
adc
sbb
push
push
mov
pop
mov
ljmp
or
lret
jl
imul
in
hlt
aam
orb
pop
dec
and
sub
xchg
sbb
lea
push
add
clc
xor
scas
bound
or
fisttps
out
dec
dec
bound
js
jo
adc
lods
jge
pop
je,pn
out
mov
xchg
test
sbb
add
in
cmp
int
jg
mov
leave
test
dec
jbe
and
push
adc
mov
and
cmp
or
adc
adc
popf
mov
cmp
xchg
mov
std
fistpl
cmp
cs
xchg
mov
push
sub
and
data16
add
fs
lahf
push
je
or
lret
fwait
sahf
fists
inc
ret
clc
push
into
cli
sbb
sbb
test
and
cmp
lods
sbb
sub
icebp
xor
mov
or
xor
and
call
mov
roll
sbb
lea
jne
pushf
jmp
cmc
sub
add
sbb
jnp
sub
jb
addr16
icebp
or
mov
jmp
daa
cmp
pop
and
shrl
in
popa
push
inc
jns
jl
fsubl
add
adc
fsubrl
arpl
lea
mov
lcall
bound
inc
push
push
push
sbb
loop
add
push
push
in
js
adcl
jmp
adc
sbbb
lea
call
push
sub
pusha
pushf
jmp
sbb
xchg
idivl
in
mov
sbb
jle
fdivrl
push
je
or
push
leave
adc
jge
sbb
cmp
xchg
and
pop
jns
pop
xchg
popa
sbb
ljmp
scas
addr16
mulb
dec
xor
lods
pop
xor
cli
inc
sub
es
dec
lea
inc
rcrl
mov
notb
fdivrl
mov
mov
jl
pusha
outsb
mov
aas
lods
add
jnp
jmp
ret
inc
hlt
mov
mov
int3
jb
inc
cmp
inc
subl
les
fiaddl
mov
lds
lock
adc
pushf
imul
pop
aaa
xchg
add
icebp
movsb
stos
mov
pop
or
imul
lds
add
movsl
push
stos
iret
cltd
icebp
lret
aas
mov
mov
cmp
rol
test
in
add
pushf
jp
mov
iret
std
jb
test
mov
scas
int
mov
mov
icebp
cmp
fwait
mov
jne
adc
mov
ss
in
lods
js
insb
mov
jb
or
shrb
stos
push
jl
cmpsb
sbb
jecxz
cld
xor
imull
pop
jne
hlt
inc
icebp
jl
leave
jb
ljmp
mov
mov
lret
insb
xchg
imul
xor
mov
sbb
ret
mov
push
inc
jp
sub
jb
aad
sbb
mov
incb
fisttps
cltd
mov
xor
push
ret
xchg
lock
sub
and
insl
pop
dec
adc
cs
out
pusha
sub
lret
mov
testb
dec
cmc
rclb
push
xchg
push
stos
fisubrl
lock
or
mov
push
pop
cmp
push
test
pop
add
pop
cwtl
cltd
pushf
subl
adc
out
in
ficomps
data16
rolb
xchg
mov
clc
sbb
inc
sub
loope
mov
insl
or
jp
inc
in
mov
int3
in
mov
test
ret
jns
hlt
scas
addr16
and
mov
jmp
cltd
mov
pop
push
cld
andb
call
add
adc
sarl
ja
xor
fwait
int3
mov
fnsave
roll
imul
out
outsl
ss
push
call
push
stos
orb
cmp
pop
push
mov
pusha
lea
sti
and
xor
sub
sub
add
mov
ficompl
daa
adc
inc
out
scas
pop
jl
outsb
fs
xchg
fisubl
inc
cmp
maskmovq
mull
jmp
pop
pop
test
pushf
ud0
cmp
es
rclb
out
mov
add
or
ret
roll
or
out
fwait
arpl
aam
fstpt
push
in
pop
pop
cmpsl
outsl
push
mov
xor
inc
ds
call
in
dec
dec
fidivrs
dec
aaa
mov
jp
in
inc
dec
jb
in
adc
or
add
sub
iret
dec
adc
and
call
jg
popf
sub
pop
inc
xorl
sbb
cwtl
in
enter
adc
lea
int3
add
rolb
out
rorb
xor
mov
xor
mov
pusha
mov
aaa
ja
cld
leave
in
xchg
aaa
mov
mov
and
roll
inc
push
sub
dec
push
adc
push
ds
jnp
xor
xor
es
sti
pushf
lea
call
jmp
pushl
popl
bt
test
stc
cmp
pushl
lea
ja
cmc
ror
pusha
sub
push
btr
call
cmp
pusha
push
lea
jae
shl
mov
shr
sbb
mov
shr
mov
push
xor
call
call
lret
adc
je
inc
cmp
leave
jo
push
cld
inc
cmpsb
fsubl
or
mov
mov
mov
sbb
push
inc
pop
sub
lods
stos
adc
lods
jge
or
mov
sub
push
insl
fcompl
shll
jno
in
aas
cmp
or
das
inc
in
roll
fs
jne
pushf
bts
xor
bts
lea
aam
mov
clc
call
call
jmp
lods
lock
add
adc
jp
gs
fadd
push
adc
and
imul
fisttpll
bound
inc
jg
ljmp
xchg
mov
sbb
adc
sub
ret
sub
pop
sti
or
mov
mov
dec
fwait
notl
adc
cli
dec
stos
inc
into
in
cltd
xor
int3
inc
dec
aad
bound
fldt
je
stc
in
cld
xor
call
xchg
mov
mov
outsl
subb
sub
adc
dec
insb
cmp
mov
fisttpll
pushf
movl
xorb
mov
and
repnz
jle
dec
fists
and
jecxz
mov
outsl
jbe
sub
push
lret
xchg
adc
ret
push
imul
xchg
test
mov
mov
insb
sub
and
lret
ficoms
sbb
movb
pushf
mov
pusha
pushf
call
ret
lret
out
pop
popf
inc
lods
or
mov
sub
mov
pop
jne
shll
int3
dec
aam
adc
or
rolb
or
iret
lock
push
adc
es
sbb
stos
pushf
xchg
mov
leave
mov
aad
cmp
mov
dec
sub
js
inc
test
inc
call
push
pop
xchg
pop
push
gs
nop
fisubrs
xor
fldenv
mov
cwtl
or
dec
scas
mov
andb
in
shlb
sbb
dec
xchg
push
mov
mov
pop
and
shrl
inc
jl
rorl
fs
jb
pusha
pushf
cmpb
pushf
lea
jne
bt
shr
xor
mov
jns
add
cmc
cmp
jmp
inc
xchg
cmp
in
arpl
in
shlb
sub
adc
loop
lea
int
popf
jnp
int
pop
adc
xor
mov
outsl
lods
in
arpl
xchg
sbb
jg
aas
adcb
pop
adc
sahf
cmp
push
arpl
or
add
pop
ret
mov
movsl
jnp
aaa
ljmp
iret
add
lods
cmp
push
cwtl
xor
jl
in
add
push
jno
loop
aaa
lcall
xor
sbb
inc
sbb
test
dec
loope
stc
test
data16
outsl
mov
scas
ficoml
sub
scas
pop
push
xor
lret
adc
jle
sbb
iret
fmuls
ja
scas
mov
cmp
mov
jne
mov
call
js
push
push
push
mov
or
and
shll
or
shlb
inc
jmp
lods
xchg
ret
jge
mov
repnz
not
lea
push
movl
call
leave
popa
adc
mov
outsb
jmp
mov
sbbl
fsubrp
sbb
xchg
or
hlt
mov
int3
mov
filds
mov
cwtl
push
les
popf
dec
pop
or
push
push
mov
sub
testl
lret
xchg
cs
jecxz
mov
mov
adc
enter
cwtl
add
scas
mov
mov
xor
ja
mov
pop
out
fcompl
popf
mov
movsl
pop
mov
jp
fildl
lds
sub
dec
test
cwtl
jo
mov
in
adc
xchg
rcrl
dec
sahf
call
int
mov
addb
or
push
inc
pop
cli
jp
fwait
push
cmp
xor
jmp
outsb
lahf
sbb
or
push
push
inc
outsl
fnstenv
je
rorl
leave
cmpsl
popa
mov
lret
out
nop
dec
sti
outsb
xor
jg
cli
out
mov
xchg
inc
fcoms
xchg
xchg
fwait
lret
and
daa
jnp
inc
adc
mov
clc
adc
fwait
cmpsl
push
fldenv
jecxz
sub
and
scas
aad
push
lahf
int3
movsb
es
mov
sub
xor
adc
pop
enter
cmp
cmp
bound
push
mov
fdivl
rclb
xor
lcall
in
dec
xchg
mov
lret
push
lods
flds
enter
push
jp
pop
inc
xor
lahf
mov
loopne
add
rol
adc
adc
xchg
hlt
scas
jp
mov
fsubs
jmp
inc
jne
mov
sbb
out
fnstsw
stos
orb
fldcw
cmp
mov
daa
out
int
lds
data16
imul
xchg
cmp
jmp
in
push
nop
add
pusha
inc
inc
xchg
shll
or
and
and
pop
sub
cld
mov
ss
sti
jbe
mov
push
pusha
cmp
call
mov
mov
push
pusha
mov
lea
jmp
cmp
push
movb
lea
jae
push
lea
jmp
pushf
setno
mov
lea
lea
bswap
push
mov
lea
not
push
seta
mov
pusha
push
mov
lea
jne
pusha
inc
cmc
bt
rol
clc
jmp
jge
pop
xorl
push
call
ds
adc
enter
loop
and
shlb
cmp
add
cmc
sub
loopne
pop
cmpsb
test
daa
push
jp
call
or
outsb
in
xchg
mov
mov
bnd
shll
sbb
jg
and
pop
repnz
lret
adc
add
ficoms
add
jl
cmp
sub
lcall
push
imul
ljmp
jae
lahf
push
add
test
dec
lahf
lods
push
push
cmp
test
pusha
out
xchg
out
and
ret
mov
xor
sbb
out
das
or
adc
cld
xor
pop
divl
or
jne
pop
cmpsb
andb
int3
push
push
shll
test
mov
push
push
or
pop
xorl
push
pushf
xchg
and
mov
lret
inc
nopl
mov
in
call
pusha
setnp
lods
pusha
clc
neg
pushf
pushf
mov
inc
bt
mov
cmc
cmc
neg
call
pusha
mov
or
jle
jp
shlb
test
test
sbb
test
mov
mov
imul
callw
mov
test
adc
sahf
jge
ljmp
xlat
fdivrs
jns
stos
xor
shrl
cmp
mov
test
push
subb
aam
cwtl
shrb
mov
dec
inc
ret
or
call
sbb
xchg
fwait
call
jmp
cmp
push
sahf
push
jbe
fildl
mov
inc
test
mov
push
mov
push
mov
out
xchg
inc
mov
scas
movl
lea
jae
stc
call
loop
push
pusha
add
cmc
loope
inc
adc
pop
xorl
and
fsubrp
jecxz
jg,pt
loop
fadds
fucomp
sbb
xchg
comiss
cld
pop
cli
test
outsl
jmp
inc
push
sbb
jne
inc
movsl
mul
dec
pminsw
ret
inc
cmp
or
ret
in
pusha
dec
xchg
insl
xlat
bound
cli
sbb
sub
scas
shlb
mov
or
dec
int
out
nop
adc
pop
test
nop
sbb
and
mov
xchg
out
enter
xchg
add
push
ljmp
movhlps
add
mov
aad
xchg
pop
mov
jecxz
push
mov
mov
cmp
repnz
mov
lea
xor
std
icebp
stc
and
xchg
sub
pusha
mov
push
jns
push
jnp
lahf
jp
sub
ret
or
push
inc
sbbb
adc
xor
gs
jp
dec
mov
xor
cmpsb
pushf
fstl
xor
ljmp
adc
shlb
sbb
cmp
bound
subb
add
icebp
jo
cmp
mov
lods
xor
xchg
out
push
in
fnstsw
jecxz
or
roll
cmp
sub
into
add
aas
push
rcr
sub
outsl
je
mov
arpl
xor
mov
imul
inc
lock
xchg
iret
pop
mov
mov
repz
test
sahf
mov
push
lea
jne
bts
shl
pushf
neg
mov
inc
sub
bts
shl
lea
pushl
call
int
bnd
aam
in
xchg
ret
ds
out
adcb
data16
test
rcrb
aad
adc
cmc
sarb
mov
jnp
aas
xor
sub
bound
jg
lods
outsb
cs
adc
stos
sub
mov
xlat
adc
or
dec
mov
push
out
inc
in
add
pop
sub
mov
fildll
jb
xlat
adc
cmc
adcb
mov
pop
adc
push
push
outsb
xor
pop
mov
aas
push
lea
jne
sub
dec
mov
rcr
inc
bswap
sub
sar
adc
rol
shld
mov
jmp
mov
cwtl
pushf
cwtl
lea
call
movsbw
cmp
push
lea
push
and
lea
bsr
sub
sub
cwtl
rcr
aad
setno
push
xor
aas
neg
push
and
shr
push
sub
push
das
lea
clc
mov
cmc
test
pushf
lea
je
not
mov
shl
add
stc
lea
adc
mov
pusha
test
call
shrb
lret
icebp
xchg
dec
or
cmpsb
pushf
mov
mov
xlat
cmp
les
scas
xchg
fcmovnu
stos
and
mov
in
mov
int
or
aam
repnz
clc
addb
fucom
lods
jp
sbbb
mov
adc
lret
cltd
and
pop
add
mov
push
xchg
insl
jp
cmp
andb
adc
jge
mov
loopne
jmp
sub
mov
mov
test
cmp
mov
jbe
mov
pop
sub
push
movsb
or
xor
int
sub
cmp
int
leave
iret
mov
pop
mov
push
in
sbb
leave
out
sub
or
enter
xchg
outsb
adc
stos
jns
and
shlb
rorb
mov
out
hlt
mov
leave
dec
pusha
pop
pusha
call
lahf
or
jp
jp
jl
mov
aad
out
jmp
dec
ss
cmp
jbe
inc
sbb
repnz
mov
rcll
fs
jne
pusha
pushf
jmp
aas
ss
xchg
cmp
inc
int3
popl
cmp
adc
fcoml
int3
xchg
jb
ss
test
mov
orl
insb
ss
jne
sub
lret
inc
std
ja
mov
jo
jnp
sub
outsl
jmp
mov
inc
pop
fnstenv
xorb
cmpsb
lcall
stos
sbb
push
push
push
adc
lods
into
aam
mov
cli
pop
lret
test
testl
inc
dec
lock
cwtl
mov
mov
or
incl
stc
push
jp
popf
scas
nop
je
sbb
and
imul
add
rcl
into
rcrb
push
fld
ret
in
mov
popf
outsl
sbb
xchg
mov
jl,pt
insl
in
cmp
and
push
leave
jl
pop
fwait
mov
adc
dec
and
sbb
data16
cmpl
lret
mov
adc
lods
std
insb
in
lock
mov
xlat
das
clc
hlt
pop
sub
or
dec
push
rcr
pop
repz
dec
cmp
inc
mov
mov
and
addw
dec
stc
push
and
movsb
mov
mov
jmp
sbb
inc
cmp
pslld
mov
pop
sbb
add
sbb
pop
fwait
shll
mov
jae
outsb
pop
fcomps
sub
or
pop
movsl
adc
push
and
out
outsl
lock
call
xchg
and
cs
sbb
outsb
adc
hlt
ds
mov
icebp
test
imul
rcll
arpl
jge
mov
in
mov
mov
dec
ds
es
xchg
sub
pop
and
sbb
repz
test
clc
mov
popf
xlat
dec
cmp
mov
xor
sub
je
xorb
jl
mov
in
xchg
repz
fldl
pop
popa
mov
popf
xchg
xor
sarl
arpl
add
cs
and
mov
test
dec
inc
popa
adc
adc
cmp
jb
mov
add
int3
mov
lcall
dec
pop
shlb
xchg
lea
cmp
dec
or
shlb
popf
scas
push
test
scas
stos
add
dec
add
cmpsl
mov
out
fucomp
shlb
insl
sti
push
addb
push
outsl
arpl
xrelease
mov
mov
shl
pop
loope
test
lcall
add
cmp
test
fiadds
push
jmp
mov
imull
dec
cmpsb
sbb
dec
jg
ss
sbb
add
ljmp
pop
xlat
pusha
inc
movsb
xor
sbb
sub
jge
adc
pushf
adc
mov
das
jne
mov
dec
daa
jnp
xchg
leave
sub
xor
cmp
and
leave
movsb
fnstenv
jl
jp
pop
xorl
add
ja
fnstsw
inc
sbb
push
adc
inc
ds
xchg
and
mov
xchg
cli
sbb
xor
adc
fwait
ret
ficoml
repnz
in
fisubrl
xor
bswap
shl
rcr
push
shl
push
btr
push
mov
bts
xor
not
push
pusha
inc
cmp
mov
bt
mov
bt
and
shl
mov
jmp
insb
dec
hlt
pusha
sbb
sub
gs
std
mov
cmp
iret
shrl
jmp
sub
mov
sar
mov
fcoms
mov
sub
into
mov
bound
pusha
out
xchg
sub
shll
je
in
stos
xor
orb
jne
sarl
lock
pop
pop
mov
cmp
mov
push
int
lock
bound
pusha
std
cmp
aam
inc
movsl
fadds
loopne
and
pusha
xchg
outsl
jnp
inc
push
sbbb
fwait
test
in
add
dec
fs
fistpll
mov
sbb
jb
inc
add
mov
icebp
das
adc
test
xchg
popf
mov
icebp
and
cmp
rcl
aaa
push
repz
jnp
cli
and
add
cmp
jg
stc
lret
push
xchg
jnp
or
mov
bnd
add
loopne
jbe
popa
inc
test
sbb
adc
shrl
adc
xchg
inc
fistpl
int3
xchg
mov
push
jg
addr16
push
mov
icebp
into
adc
adc
mov
push
xchg
les
hlt
fisubl
gs
xor
cs
insb
add
add
lret
xor
aam
notb
mov
mov
sub
daa
fisubrl
idivb
iret
xchg
rcl
inc
ljmp
xor
adc
orl
cmpsb
stos
add
push
aam
lods
or
ljmp
pushf
lds
fimuls
inc
push
or
hlt
push
xor
mov
xchg
sbb
loope
push
add
int3
gs
mov
xchg
icebp
repnz
shrb
leave
cmp
mov
mov
fs
call
pusha
call
inc
imul
add
cmp
ret
lcall
mov
stos
or
fsubs
jbe
or
clc
ret
xchg
insl
dec
pop
scas
icebp
adc
push
sub
ret
xchg
cmp
popf
sub
cltd
inc
sbb
xchg
xchg
in
add
mov
insl
stos
pop
lea
and
imul
dec
and
test
stos
sub
or
data16
pop
nop
adc
and
mov
fwait
repnz
add
pop
sbb
mov
dec
mov
les
fwait
mov
lods
inc
adc
push
hlt
loope
xor
inc
add
cmp
xchg
rcll
sub
mulb
adc
jg
pop
or
lock
cmpsl
jmp
xor
leave
fsub
jne
adc
scas
sbb
stc
lods
xchg
rcll
xorl
fwait
mov
fisubl
insl
fstps
adc
and
mov
xlat
stc
lods
dec
xchg
xchg
mov
cmc
push
into
xchg
das
mov
cmc
sbb
imul
pushf
pop
xchg
cld
popf
fnstcw
arpl
jns
mov
cwtl
pop
mov
fwait
test
sub
test
jmp
push
clc
stos
sbb
xchg
loopne
insl
push
adc
cltd
mov
or
lock
mov
popf
add
cmp
sub
fwait
inc
adc
lds
adc
adcb
mov
ja
mov
lahf
cld
xchg
daa
movsl
shrb
scas
mov
movsb
aad
add
push
fptan
data16
xchg
cmpsl
ret
lcall
mov
xor
pop
ljmp
aaa
lcall
sbb
inc
mull
push
push
outsl
mov
icebp
outsl
jne
xchg
out
dec
stos
popa
arpl
xchg
repz
cmp
loopne
mov
cmp
mov
das
dec
stos
popf
call
mov
andb
mov
lock
inc
ljmp
sbb
sub
mov
inc
xor
sahf
or
repnz
lea
mov
iret
aad
out
xor
cmp
ljmp
and
cmp
add
shrl
filds
pop
rcrb
dec
mov
inc
pop
sub
sbb
leave
mov
xchg
loopne
mov
sbb
xor
cli
inc
sub
mov
sarb
mov
stos
mov
mov
es
jmp
int3
ss
mov
sbb
jns
mov
xchg
push
es
dec
ss
xchg
add
xchg
aam
sub
dec
mov
mov
mov
mov
adc
mov
mov
fdivp
lock
xchg
test
in
xor
rolb
out
imul
or
mov
movsl
jns
mov
fistpl
add
outsb
sbb
mov
mov
push
push
sti
push
fwait
xchg
stc
inc
decb
fsts
pop
lods
xchg
mov
jno
inc
rcll
dec
out
inc
test
xchg
mov
adc
xchg
imul
test
cmc
bt
call
jmp
push
lods
repz
xor
movsl
lahf
adc
xchg
push
push
fistps
std
aaa
and
push
dec
mov
mov
cmc
rorb
fsubl
and
jge
gs
popf
cltd
movl
je
push
roll
mov
loop
shlb
fs
push
mov
std
xor
out
arpl
in
shrl
cmpb
push
notl
lahf
mov
sti
mov
xchg
scas
jnp
int3
ja
adc
lds
stos
ret
jp
mov
adc
std
mov
mov
sbb
mov
stos
sub
mov
inc
jg
fcomip
es
cmpsb
and
jo
pop
repnz
jb
push
pop
aad
adc
sbb
mov
push
cld
push
pop
push
dec
mov
inc
mov
call
xor
fbld
cmpsl
jnp
sbb
add
push
jp
adc
sbb
imul
mov
push
in
mov
les
cmp
in
add
lods
mov
clc
shlb
push
fists
insl
bound
out
jne
dec
shll
cld
adc
mov
or
and
jp
push
test
or
add
cmovb
adc
xchg
and
cmp
lret
ret
loopne
dec
mov
pop
xchg
pushf
addb
pusha
clc
lcall
mov
cwtl
arpl
lds
rcrl
shr
sbb
jmp
mov
or
lcall
scas
mov
stos
sub
call
vpunpckhwd
sub
pushf
jmp
xchg
fcompl
pop
aas
sbb
insl
scas
outsb
sub
adc
sti
push
or
mov
push
ljmp
roll
ljmp
or
push
mov
mov
mov
dec
das
mov
nop
push
or
rcrl
add
fs
imul
add
loope
ret
sub
in
stos
xchg
ja
test
daa
mov
std
cmp
push
inc
aas
arpl
in
jmp
stos
cwtl
cli
sub
iret
ljmp
icebp
xlat
mov
cmp
das
sbb
call
sbb
dec
out
inc
mov
in
jae
pop
xchg
sub
in
in
out
lods
push
shll
push
cmpsb
pop
push
popf
clc
lock
dec
inc
cmp
sbb
cmp
and
fldt
cmp
sub
ds
cld
xlat
sbb
xor
add
mov
jle
and
mov
cltd
movsb
and
dec
adc
mov
push
std
les
mov
int
push
xorl
push
dec
fidivl
cmp
cltd
loop
xchg
jp,pn
mul
xor
sbb
imul
sub
movsb
hlt
jns
add
cld
cmpsb
movsb
fimull
stos
daa
outsb
add
fdivrl
mov
ret
subl
outsb
xchg
add
inc
adc
mov
mov
lock
jo
adc
inc
lds
fnstenv
cmpsl
xor
lahf
stos
dec
cmp
jmp
ja
cmp
dec
xchg
mov
movsb
out
inc
std
rcrb
xchg
mov
shll
fidivs
pop
cltd
shlb
push
pusha
dec
xchg
pop
jo
cmpsb
fcmovu
xor
bound
cmc
scas
mov
lock
incb
xchg
pop
push
dec
pop
mov
mov
sbb
push
jmp
cmc
adc
lcall
into
lcall
insb
imul
outsl
mov
leave
sbb
pusha
sbb
stos
mov
out
xchg
test
int
jno
xchg
ret
or
fildl
repz
lahf
outsb
mov
mov
pop
sbb
mov
adcl
out
and
pop
xor
gs
pushf
arpl
leave
mov
bound
sahf
sub
pop
fs
sub
add
xor
xchg
cmp
test
scas
hlt
mov
adc
insb
stos
sub
sbb
cli
jno
clc
out
push
xchg
fidivrl
rclb
jno
pusha
or
sbb
in
inc
or
xor
out
insl
call
pop
sub
fs
cli
push
or
fsubl
mov
fs
xor
cs
insb
add
clc
mov
jmp
add
push
gs
outsl
jb
inc
inc
add
mov
mov
add
mov
lock
in
imul
push
push
push
pop
sub
inc
sbb
inc
data16
add
clc
and
negl
pop
lret
mov
and
pusha
enter
faddl
dec
bound
xchg
mov
ret
jbe
inc
cwtl
test
add
or
push
test
cmpsb
imul
mov
pop
add
jle
popf
leave
outsb
dec
jo
outsl
xchg
lock
xchg
cmp
mov
xchg
mov
cs
pushf
sbbl
sub
repz
mov
mov
inc
lret
jo
aas
sub
and
or
mov
xchg
lcall
popf
out
pop
repz
dec
xchg
shll
xorb
jmp
jmp
sub
or
rcll
out
dec
cmpsl
pop
sbb
mov
cli
enter
add
cmpb
adc
cli
mov
dec
add
outsl
dec
xchg
lods
xchg
push
scas
or
jl
pushf
clc
in
sbb
xchg
stc
and
jmp
call
dec
es
mov
pop
and
bnd
fs
add
mov
aam
shlb
popa
push
cmpsl
push
xor
dec
in
pop
std
add
ljmp
pop
jo
loope
add
jb
add
adc
in
and
add
mov
shlb
dec
cmp
movsl
xor
add
test
stc
jp
test
mov
daa
cwtl
scas
mov
cmc
cmp
pop
shll
mov
sbb
enter
fadds
scas
daa
xchg
push
push
sarb
xchg
in
add
cmp
fmull
enter
lea
sub
ret
push
fcomp
pop
outsl
loop
push
out
push
mov
cmp
push
mov
sbb
cmpsl
xor
test
loopne
push
and
test
and
sti
jo
pop
jne
lods
outsb
mov
push
push
gs
jne
lds
sbb
cmp
outsb
or
sbb
push
lcall
adc
mov
rcl
in
adc
push
jp
ja
ljmp
mov
shlb
and
add
lock
mov
mov
dec
push
hlt
mov
rclb
sub
sub
fisttps
push
dec
sbb
dec
pop
cld
xlat
jle
xchg
inc
enter
leave
push
xchg
insl
scas
call
sbb
test
mov
test
cmp
fistps
movsb
add
testl
cmc
xor
pop
pop
or
cmc
inc
inc
xchg
call
movl
ds
mov
mov
xlat
mov
scas
adc
sub
imul
cmpsl
mov
js
add
lods
ds
mov
fcom
shr
in
cwtl
or
add
sahf
add
inc
test
push
divb
and
or
test
cwtl
mov
jbe
mov
jae
jmp
js
out
dec
fmuls
push
icebp
mov
push
outsl
out
jp
mov
pushf
push
push
scas
out
cmp
push
mov
push
stos
dec
insl
scas
leave
rcrb
jmp
xchg
or
dec
jg
inc
das
cmp
jbe
aad
dec
test
pop
test
in
clc
mov
xchg
popa
pusha
out
int3
xchg
mov
mov
stc
jg
jmp
dec
leave
nop
fnsave
sarl
inc
push
mov
xchg
bnd
jge
cmp
sbb
lods
insb
fs
pop
das
mov
divl
loop
ja
pop
call
insb
push
mov
mov
sbb
imul
jo
ret
xchg
push
outsl
aaa
mov
mov
movsl
xchg
out
jno
in
out
mov
jecxz
ficoms
lahf
out
sub
test
shll
and
mov
cwtl
repnz
pop
fwait
pop
mov
ja
les
fisttpl
mov
js
xor
sbb
push
push
repz
lds
clc
mov
mov
daa
movsl
out
lds
ret
shll
cmpb
call
lea
jne
movsbw
ror
bt
xor
setge
ror
aam
aaa
mov
cmp
add
pushf
pushf
pushf
lea
jmp
dec
push
inc
aam
add
fiaddl
pop
sub
cmp
jle
mov
rcl
mov
enter
mov
sub
fs
stos
xchg
cmp
movsl
rclb
daa
xchg
clc
sbb
lcall
sbb
sbb
into
add
jp,pt
lds
loope
jbe
mov
roll
mov
dec
loopne
mov
in
inc
out
mov
scas
fsubrl
clc
push
sbb
fisttpl
or
or
or
data16
or
lds
sbb
je
inc
pop
je
or
lea
repnz
in
lds
popf
inc
cmp
sbb
and
xor
dec
jge
rolb
in
inc
ljmp
shrl
push
jecxz
push
aam
cmp
mov
inc
or
mov
scas
nop
xchg
mov
ss
add
rcrl
loope
inc
inc
jnp
mov
lods
push
rorb
aam
and
xlat
fidivrl
scas
cmp
mov
push
sub
mov
and
test
fadds
cld
sub
cmp
xchg
add
imulb
mov
test
repz
lahf
or
xchg
mov
inc
adc
xor
jl
cmp
mov
imul
aad
xchg
or
dec
inc
aas
mov
push
imul
mov
mov
and
pop
fucomp
lahf
insb
stos
loop,pn
mov
push
arpl
add
lea
push
aam
xchg
cmc
dec
or
push
push
cmc
div
popf
mov
daa
pop
cld
push
and
enter
sti
fwait
jno
lcall
mov
or
into
mov
push
sahf
add
xor
sti
fisubs
mov
clc
pop
cld
pop
mov
push
add
movsb
pop
mov
inc
icebp
fcompl
or
nop
add
mov
jmp
add
mov
mov
xchg
push
rcrl
and
dec
pop
in
fmull
push
clc
xchg
dec
xchg
mov
dec
mov
mov
test
addb
adc
mov
mov
test
jp
sub
push
inc
fidivl
sub
xor
call
xchg
sbb
adc
call
sub
pop
popa
mov
popf
ljmp
sub
or
add
aam
mov
std
imulb
mov
ljmp
in
insl
ss
cwtl
push
xchg
leave
aas
inc
dec
sbb
xchg
push
insb
mov
dec
in
loope
cmp
and
and
cs
add
adc
inc
push
andl
inc
cmp
xchg
mov
cmc
loop
das
imul
outsb
imul
data16
aam
jae
pop
cmp
ret
jecxz
or
std
xchg
jmp
mov
stos
pop
testl
stos
sub
in
lahf
leave
jmp
mov
std
xchg
call
lock
xchg
out
in
jbe
xor
loopne
shl
lret
jno
adc
insb
mov
xchg
xchg
xor
xor
test
pop
lahf
xchg
out
and
add
sarl
sub
adc
mov
jmp
push
mov
push
cltd
push
adc
fiadds
ss
outsb
idivl
in
jmp
push
aad
and
sub
jnp
jns
std
loop
push
addb
sub
sbb
lahf
mov
push
mov
jl
cmc
cmp
popf
cli
or
mov
dec
aam
inc
and
addl
lods
sbb
sti
stos
test
cmp
or
or
jnp
mov
cwtl
in
int
jl
popf
xlat
sbb
cltd
loop
vmovaps
stos
adc
xor
or
xor
orl
mov
jl
fcompl
xchg
mov
xchg
push
jno
push
mov
xor
sub
add
adc
adc
jmp
nop
call
adc
fs
xchg
mov
pop
sub
dec
or
adc
je
push
jle
dec
xchg
inc
loope
push
or
pop
pop
punpckhbw
les
add
push
adc
jae
adc
jne
inc
mov
test
out
or
xor
sub
clc
psubusw
sub
rcrb
sub
and
adc
mov
push
mov
rcll
insb
xchg
xchg
pop
fmuls
aas
sbb
stc
mov
xor
shl
sarl
pop
inc
adc
in
and
add
cmp
push
out
ljmp
mov
mov
dec
mov
mov
add
mov
fisttpl
jnp
punpcklbw
and
add
shlb
xchg
movsb
add
push
jmp
test
jae
movlps
aas
mov
les
aad
inc
jnp
mov
inc
pusha
lea
jne
pushf
shld
rcr
sub
shr
bts
mov
sub
add
push
mov
bt
add
sub
pusha
mov
test
bt
test
lea
jbe
pushf
pushf
movb
lea
je
pushf
bt
pushf
push
sub
movw
bt
call
pop
std
fs
rorl
adc
add
loope
data16
in
and
loope
out
sbb
aam
push
push
pusha
icebp
adc
pop
sbb
adc
aad
hlt
loope
mov
cmp
out
adcl
pushf
cmp
cmp
inc
jecxz
xor
daa
les
sbb
fiadds
mov
dec
les
xor
sbb
push
pusha
push
ret
inc
cmc
clc
fcoml
sahf
xchg
mov
cmp
inc
popf
das
sbb
mov
inc
pusha
mov
call
ficoms
push
dec
or
outsb
xor
jmp
cmpl
sub
mov
in
push
adcl
ljmp
sti
outsb
dec
jge
mov
cmp
int3
ret
pop
xor
adc
push
dec
into
mov
je
pop
push
test
lods
cmp
lcall
in
push
cmpsl
mov
scas
ljmp
je
leave
inc
sub
jmp
push
jl
cmp
shrl
enter
stc
loop
sub
pushf
ja
pop
cld
inc
xor
js
xor
repz
lea
add
jg
cmc
or
push
add
xchg
and
enter
add
mov
mov
push
jo
mov
add
push
jecxz
insb
ljmp
in
xchg
or
aas
inc
mov
or
add
or
inc
bound
or
into
sahf
addr16
cmp
outsl
adc
dec
adc
sti
enter
out
int3
enter
mov
clc
mulb
jno
movsb
xchg
or
pop
cmp
xchg
inc
mov
jle
mov
dec
fisubrl
mov
and
mov
out
test
adc
pop
insl
xor
mov
mov
ljmp
push
je
mov
mov
pop
dec
stc
hlt
lahf
movsl
xchg
jo
push
jg
and
push
lods
jbe
xor
fs
and
js
in
stos
fimuls
fstpl
inc
popa
add
out
ds
mov
sub
push
lsl
add
mov
push
cwtl
sub
sbb
flds
test
mov
mov
xor
out
movsl
jae
js
es
pop
adc
shll
dec
cs
push
test
sub
outsl
or
and
notb
pop
mov
cmc
out
sub
pusha
das
sbb
lret
add
out
mov
pusha
add
mov
imul
clc
push
and
or
nop
cmp
shll
in
xor
sub
xor
sbb
lcall
push
and
pop
scas
lds
mov
mov
push
mov
addr16
sbb
mov
rcrl
out
clc
dec
je
inc
repz
xchg
cli
mov
out
dec
sub
xchg
and
mov
mov
testl
sub
xorb
dec
mov
push
pop
and
inc
pop
sub
pop
dec
xlat
mov
jo
mov
sarl
pop
hlt
xchg
movsb
xchg
jl
pop
jmp
and
shll
add
push
outsb
imul
imul
ret
sbb
xchg
or
mov
pop
cwtl
pop
rcrb
push
aas
mov
mov
xchg
cmp
cmpsl
enter
jnp
xor
add
xchg
aaa
in
xchg
xlat
adc
mov
enter
push
out
xchg
ljmp
and
inc
mov
fwait
es
stos
std
fistpl
in
xchg
dec
imul
lahf
jno
push
rorl
adc
fucomip
das
stc
xbegin
lock
aam
xchg
fcompl
ficompl
pop
xor
push
and
lahf
pop
and
shll
fldt
adc
jmp
pop
xor
push
or
lea
in
lahf
shll
jecxz
push
add
pop
adc
repnz
es
test
out
jge
rcll
in
mov
adc
outsb
mov
push
pop
popf
xchg
mov
pop
mov
out
fiaddl
xchg
aaa
aas
push
jmp
mov
std
mov
jg
push
sbb
mov
lcall
in
or
inc
sub
push
adc
xchg
arpl
aas
cmp
push
mov
movsb
jmp
mov
adc
lods
outsl
dec
aad
in
and
sub
xor
adc
inc
sbb
ficomps
mov
pushf
movsb
pusha
sub
sub
ja
cmpsb
mov
or
icebp
cli
fidivrs
stos
inc
and
cwtl
icebp
jnp
call
or
ljmp
mov
cmp
jns
xchg
add
inc
jb
loopne
sbb
or
dec
pop
lods
iret
movsl
int
jmp
loopne
lret
xor
insl
in
push
push
mov
fmuls
mov
ret
add
jae
mov
cmp
popf
pushf
pop
dec
xor
fucomi
cmpsb
jecxz
std
push
into
inc
add
sbb
test
mov
stos
mov
decb
jo
shll
lea
call
jmp
pop
arpl
mov
and
pop
push
ret
lret
into
pop
pop
mov
mov
sub
dec
das
jl
pop
xchg
data16
fucomp
mov
out
adc
sbb
das
loope
sbb
adc
sub
dec
movsb
jno
test
inc
pop
int3
lret
cltd
fcoms
cmp
cmp
das
mov
jecxz
sub
addr16
shll
lea
ja
xchg
pop
jmp
mov
jbe
add
dec
adc
pop
push
and
xor
mov
call
fnstsw
sbb
mov
adc
dec
int3
cmpsl
sub
add
popa
mov
mov
in
mov
int
xchg
pop
outsb
dec
cmpsb
cmp
xor
add
or
pop
ja
out
les
adcb
or
insl
push
jmp
cwtl
cmp
imul
push
jne
add
inc
and
dec
movsl
movl
jmp
call
xor
pusha
test
dec
mov
stc
sub
imul
inc
repnz
adc
inc
fdivs
push
fwait
mov
lret
xrelease
jne
adc
or
enter
stos
and
push
xchg
mov
push
outsb
scas
test
out
add
add
leave
das
cmp
push
adc
and
popf
mov
call
xchg
push
call
sbb
mul
push
daa
cmp
test
xchg
sbb
cmc
mov
mov
stos
push
data16
cmp
adc
mov
mov
sbb
push
mov
mov
xchg
fimuls
cs
les
outsb
dec
cmp
stc
sysret
loopne
loopne
loope
add
or
in
add
cmp
jmp
xchg
add
or
andb
pushf
rclb
and
add
or
add
incl
add
cld
addr16
clc
xor
ljmp
sarb
adc
adc
aas
orl
fdivrl
fidivl
mov
xor
add
rorb
test
or
or
and
jo
add
sbb
sub
add
punpckhwd
clc
lods
inc
cmp
test
and
sbb
xor
sub
dec
cmp
rolb
add
inc
add
add
pop
add
aas
cmp
imul
push
xor
adc
lock
xor
std
add
cmp
mov
aaa
inc
jl
int3
jne
or
jle
jg
adc
sarl
jo
pusha
mov
pop
test
lock
xor
pop
mov
inc
aas
jg
adc
aas
pop
add
pop
adc
and
dec
aas
pushf
push
adc
push
cltd
or
int
loopne
adc
mov
aas
in
or
and
or
add
add
das
add
jg
loopne
out
rcrb
add
sub
adc
test
pusha
and
clc
lcall
push
xor
ret
add
int3
insb
mov
sbb
test
add
inc
mov
push
inc
test
test
push
bound
and
adc
les
sub
adc
or
sbb
or
add
adc
pop
cld
dec
add
cmp
push
fmul
test
add
lock
inc
jo
pushf
jmp
mov
inc
cmp
jmp
je
add
add
add
out
inc
push
addl
sbb
xor
sub
std
data16
lcall
mov
cmp
jecxz
ret
sarl
rolb
and
sbb
pop
push
pop
or
or
je
xchg
or
loope
aas
push
and
adc
loop
mov
dec
orb
push
pop
inc
add
adc
add
push
add
inc
pop
inc
add
dec
push
xor
mov
aas
ret
addl
mov
mov
sbb
xor
and
add
cmc
pop
push
and
orl
xor
sub
clc
sub
push
daa
inc
sub
daa
dec
sub
data16
push
adc
cmp
adc
push
adc
mov
adc
dec
pop
mov
test
enter
sbb
mov
cmp
sub
adc
pushf
push
sub
jno
cmp
pop
cli
push
sub
loope
inc
mov
push
xchg
shlb
mov
cmp
or
and
adc
inc
and
cs
sub
sub
aas
sub
sbb
and
fwait
cmp
inc
cmp
ss
dec
push
movsb
cs
repz
imull
int
lcall
stc
sbb
mulb
dec
push
stos
subl
adcb
inc
sub
or
pop
insb
mov
fs
sub
mov
or
stc
or
sub
mov
mov
sub
cmp
pop
adc
mov
fwait
mov
push
mov
push
or
add
idivl
clc
lds
cmpsb
aas
cmp
inc
lahf
inc
or
adc
out
popa
dec
push
pop
mov
mov
wbinvd
adc
mov
daa
push
aas
sub
adc
mov
push
out
inc
in
xchg
mov
cmc
adc
add
xchg
add
or
ss
mov
test
pop
sbb
pop
sub
adc
or
mov
push
mov
aas
repz
ss
mov
pop
inc
imul
lods
mov
mov
test
inc
adc
fs
scas
push
push
push
xor
sub
adc
xor
sub
dec
insw
in
xor
mov
jne
adc
dec
add
dec
mov
adc
xchg
out
inc
ja
mov
jecxz
sub
inc
add
mov
data16
mov
lods
pop
int3
sbb
push
add
xor
sub
mov
xor
xchg
cmp
arpl
and
xor
stos
lcall
jmp
inc
sub
xorb
and
xchg
or
repz
enter
test
mov
cmp
inc
push
icebp
cmp
cld
mov
mov
and
inc
cmpsb
mov
daa
adc
mov
mov
push
mov
adc
and
test
adc
sub
mov
mov
data16
test
into
mov
cltd
aas
adc
or
out
and
mov
adc
cltd
les
setno
xchg
jmp
cmp
pushf
sub
xchg
mov
subl
jg
or
jnp
insb
clc
or
sbb
sub
stos
sub
adc
dec
ficoml
dec
adc
daa
mov
dec
sarb
sub
daa
lret
daa
mov
movsb
lock
mov
dec
mov
lea
adc
and
xchg
movsb
jecxz
adc
mov
xchg
sub
cltd
add
jo
or
adc
mov
adc
addr16
in
push
inc
mov
cmp
dec
sub
out
test
sub
std
or
pop
sub
inc
mov
repz
bound
adc
shrb
mov
les
inc
xchg
xchg
sub
data16
sub
push
fists
and
test
and
mov
js
cmpsb
sbb
sub
sbb
mov
push
aas
dec
sbb
sub
dec
inc
xor
add
xchg
lcall
in
je
mov
adc
mov
sbb
lcall
pop
sub
shl
xchg
pop
mov
mov
in
imul
outsl
sub
mov
xchg
cmc
clc
adc
in
jno
je
fwait
sub
call
cwtl
add
stos
fstl
lahf
call
mov
inc
push
xchg
adc
adc
or
add
hlt
je
adc
enter
lcall
mov
rolb
lahf
adcl
mov
lods
add
or
fldcw
and
clc
mov
add
mov
xor
add
lock
call
mov
mov
arpl
scas
jo
mov
add
inc
hlt
sub
cltd
stos
or
pop
add
inc
lock
lret
add
jb
hlt
rcrl
out
inc
lock
lret
add
jb
lock
push
loopne
mov
inc
loop
add
add
lock
cli
sbb
and
out
or
lods
and
inc
out
xchg
icebp
dec
orl
add
fwait
cmpsl
cmpl
aam
aad
int3
popf
push
add
icebp
dec
lock
scas
sbbl
in
or
adc
inc
in
daa
jp
clc
xlat
adc
gs
pop
pop
mov
enter
aam
and
lea
mov
add
imul
jo
add
imul
mov
and
xchg
push
xchg
add
ret
push
adc
mov
cmc
pop
mov
sub
hlt
test
ret
xchg
loopne
scas
add
lock
or
sahf
ret
jmp
xlat
enter
hlt
mov
jp
jmp
or
cltd
xlat
push
leave
popf
sbb
int3
mov
cmc
jp
lock
adc
movsl
mov
enter
and
lods
lret
add
jp
lock
or
mov
add
adc
jnp
or
mov
fistpll
lock
mov
aad
add
movsb
push
lock
in
fimull
mov
out
dec
add
or
lock
or
iret
mov
pop
fnstsw
out
xchg
call
outsb
test
test
mov
int3
fdivrs
ds
adc
mov
mov
jle
add
gs
stos
popf
leave
mov
into
mov
shlb
or
dec
movsl
jns
add
add
ja
push
cltd
push
popf
outsl
mov
cltd
mov
mov
aad
cmpsb
fwait
jl
aam
push
pusha
xchg
popl
xchg
jb
xchg
jo
xor
insl
cmc
inc
outsl
add
sbbb
mov
pop
lahf
out
rcl
hlt
std
shr
pop
scas
sub
adc
jmp
lock
into
add
dec
sub
sbb
jecxz
and
or
mov
cmp
scas
add
ret
aam
lock
or
int
add
aam
mov
lret
loope
add
inc
lock
sbb
lret
fisttpll
cltd
aad
stc
mov
lock
call
adc
mov
dec
iret
and
notl
lock
hlt
sarl
pop
add
inc
lock
movsb
hlt
sub
push
add
dec
pop
dec
test
sub
push
fisttpll
cwtl
or
fists
add
hlt
or
xchg
add
push
es
adc
out
movsb
dec
lock
sti
ds
stos
in
xlat
enter
lret
movntq
out
test
stos
stos
add
jo
lds
xor
aam
add
test
cli
out
stc
out
add
pop
rol
pop
movsl
aam
push
add
stos
in
fldl
mov
loope
mul
mov
in
add
cld
push
cmc
int3
int
ret
cmpsl
mov
lahf
mov
pop
inc
pop
jmp
imul
enter
iret
aam
adc
iret
mov
cmp
stos
cmp
stos
add
stos
cmp
movsb
dec
mov
aam
push
roll
imul
cmp
mov
test
popa
pop
ljmp
hlt
xor
mov
jp
std
ds
in
adc
hlt
out
mov
sbb
jnp
pop
fsubl
add
dec
lock
add
sti
lock
scas
add
pusha
pop
add
pop
fcom
hlt
sub
ja
fisttpll
loope
iret
pop
add
inc
lock
ret
fsubrs
mov
clc
loope
roll
xchg
pusha
mov
add
mov
cli
call
xchg
lock
outsb
loopne
jmp
ljmp
mov
push
jecxz
mov
test
in
fsubrs
call
aam
fs
pmovmskb
pusha
out
loope
repz
aad
call
je
sti
in
fucomi
loop
or
mov
vmovups
cli
repnz
aas
pop
inc
mov
lret
aad
mov
xlat
inc
dec
sbb
and
nop
stos
lret
outsb
adc
or
xchg
adc
pop
jl
in
jg
inc
adc
xchg
js
inc
adc
xchg
adc
add
sbb
and
in
repnz
pop
lods
mov
add
movswl
shrb
pushf
sbb
dec
add
loopne
xchg
adc
fbstp
ud2
insl
jnp
adc
mov
add
cmp
rolb
mov
sbb
lock
add
add
rcrb
loopne
lock
adc
add
push
roll
add
sbb
lret
nop
add
and
nop
shll
fcmovu
and
add
mov
and
fstpt
xchg
mov
push
es
adc
popf
enter
lret
or
xlat
stos
add
jmp
add
fldenv
int
add
xor
test
or
xchg
and
dec
nop
cmp
pop
adc
or
ret
stos
add
sub
add
fs
or
or
mov
xchg
cmp
inc
shrl
ret
add
or
xor
iret
and
or
and
popf
fstps
and
rolb
adc
mov
or
mov
adc
xchg
test
insl
int
or
movsb
mov
xchg
jbe
leave
add
and
xor
sbb
movsb
test
sbb
mov
mov
shll
cli
inc
mov
sub
add
and
lcall
sub
xchg
add
sbb
lret
add
jbe
sub
sub
adc
add
xchg
cltd
addr16
inc
popf
fisubrl
push
push
scas
mov
dec
rorl
xor
add
cmp
mov
xchg
dec
mov
mov
aaa
or
adc
jb
mov
mov
pop
inc
test
roll
stos
in
fwait
xchg
push
mov
jbe
xor
xchg
sbb
jmp
xchg
icebp
test
push
add
imul
rorb
or
dec
sub
push
int
scas
test
inc
push
rcrb
sub
mov
adc
out
mov
xchg
insl
jae
sub
sub
sahf
jo
shrb
mov
pop
movsb
loop
popf
pop
dec
dec
mov
adc
pop
and
lcall
shrl
push
clc
pop
mov
and
hlt
enter
sbb
mov
push
mov
cmpsl
sbb
rcrb
pop
mov
and
add
push
push
jns
inc
mov
adc
mov
in
cmp
sub
data16
rcll
push
mov
push
cs
out
pop
loop
inc
icebp
mov
xchg
lcall
mov
cmp
dec
sub
inc
or
jmp
out
mov
ficoml
in
lcall
sbb
insb
inc
rorb
mov
lret
popa
dec
fldenv
fcoml
mov
adc
test
rorl
fnsave
insl
sbb
or
test
rclb
push
jo
lcall
cmp
cs
sub
movsb
sub
mov
mov
insl
aaa
insl
xor
sub
push
cmpsl
add
mov
ss
xchg
in
adc
rcll
rcrl
out
mov
mov
adc
cli
and
ljmp
rclb
mov
xor
dec
lcall
test
stos
jmp
loopne
or
int
jno
jl
movsb
mov
or
mov
or
jo
mov
imul
mov
add
mov
lret
dec
adc
mov
xor
or
int
lcall
dec
rcrb
sub
cli
add
cmp
in
sub
cli
dec
mov
dec
xchg
push
cmpsl
jae
dec
or
cmp
push
cmc
and
int
mov
jns
std
and
dec
fnstcw
int
cmpsb
adc
movsb
inc
int
lods
sub
xlat
dec
mov
xchg
gs
loop
dec
shrl
mov
loop
sub
mov
js
mov
xor
je
and
mov
icebp
movsl
adc
xchg
rcrb
dec
lret
xchg
and
lret
jno
mov
adc
imul
scas
adc
sub
jno
movsb
fldenv
adc
xchg
and
test
rcll
data16
adc
xchg
jecxz
push
insb
pop
shlb
int
mov
inc
add
jb
leave
mov
push
xor
jge
mov
lret
add
cwtl
xchg
jns
mov
dec
imul
lcall
or
adc
insb
rorl
sbbb
and
push
inc
dec
int
mov
es
lret
icebp
pop
mov
mov
inc
sbb
dec
int
test
ficompl
in
adc
mov
imul
scas
in
and
stos
add
jge
mov
imul
sub
in
add
inc
mov
adc
dec
mov
and
and
and
leave
inc
daa
mov
push
and
and
xor
and
adc
mov
sbb
or
push
nop
adc
inc
mov
or
mov
and
pop
push
pop
or
nop
add
stc
outsl
sub
and
or
ret
adc
xor
adc
mov
dec
adc
adc
fwait
mov
sbb
dec
rorb
xor
and
or
lret
icebp
lods
movsb
pop
enter
fstps
adc
adc
jae
aas
and
mov
xchg
xor
es
mov
rorb
mov
or
xor
jno
lods
out
mov
and
mov
adc
xor
in
and
fs
or
xchg
lods
repz
sahf
and
mov
xchg
xchg
and
int
sub
fiaddl
push
inc
push
adc
inc
or
out
test
mov
push
ss
xchg
inc
in
mov
sbb
mov
sahf
adc
jl
mov
adc
xchg
insl
inc
or
dec
shll
and
aad
push
jmp
cmp
loop
mov
imul
pop
dec
xor
call
xchg
int
push
or
dec
inc
dec
xor
mov
pop
xor
stos
xor
cltd
scas
scas
push
mov
cmp
arpl
and
mov
mov
aaa
test
or
ret
sub
push
xchg
fcmovnbe
adc
xchg
xor
insl
adc
nop
and
imul
and
or
add
inc
out
scas
mov
and
mov
xor
mov
cli
idivb
sub
xor
movsb
jae
or
imul
lea
dec
hlt
mov
mov
shlb
xchg
push
xchg
movb
test
or
dec
shll
les
mov
lcall
jl
add
xor
dec
rcll
movsb
sbb
sub
and
adc
pop
pop
popa
sub
cmp
mov
jge
xchg
shlb
pusha
xchg
xor
es
sub
loop
imul
ucomiss
ss
insl
xor
mov
xor
out
sub
and
rolb
int
or
or
les
inc
or
xchg
gs
jb
xchg
xor
cmpsb
xor
das
imul
mov
push
sbb
xor
dec
test
aas
imul
lcall
mov
sbb
mov
mov
jnp
or
mov
cltd
mov
push
sbb
cmp
rorl
sbb
call
push
mov
mov
mov
and
lret
xor
cmpsb
push
mov
es
mov
popa
or
push
jno
cmpsl
stc
dec
mov
cltd
andb
dec
int
or
cmp
pop
jmp
or
fprem
mov
je
push
out
mov
or
jae
inc
jb
mov
inc
addr16
imul
roll
jle
lea
adc
xchg
dec
cs
mov
or
ret
pop
mov
add
cltd
xor
mov
in
mov
dec
test
sbb
popa
and
roll
lret
int
or
sub
pop
jns
dec
pushf
xchg
imul
mov
pop
and
mov
sbb
rolb
call
mov
add
or
lcall
mov
lcall
nop
and
shll
mov
lea
xlat
jecxz
pop
sbb
mov
es
push
push
popf
sub
jb
mov
pop
rorl
add
enter
mov
add
loop
int
adc
xor
sbb
mov
pop
xchg
lcall
call
lret
rcl
add
rcrl
dec
xor
daa
stos
ss
popf
fwait
out
push
pop
fldt
dec
popa
sbb
int
or
movsb
pop
loop
adc
lea
xor
sub
cmp
ss
into
scas
add
lods
fwait
cmp
mov
out
stos
add
aad
inc
fwait
and
nop
aad
jecxz
test
add
push
mov
dec
mov
movsb
and
cli
and
insl
sub
sub
add
insl
dec
inc
mov
outsl
movsb
lret
pop
inc
aaa
test
push
rcll
popf
lcall
mov
xchg
lcall
rcrl
dec
les
xor
pop
stos
mov
and
xchg
or
lcall
pop
pop
xor
jle
imul
dec
adc
out
shr
adc
sbb
imul
add
sbb
shll
mov
mov
mov
rclb
pop
xor
int
les
dec
adc
sarb
test
pop
sub
mov
push
dec
and
test
cmp
or
mov
aaa
jecxz
inc
push
pop
and
pop
xchg
mov
dec
push
inc
xchg
sbb
jmp
xlat
aaa
sub
insl
movsl
lret
aam
es
cltd
sbb
dec
push
or
nop
dec
xchg
mov
popf
imul
pushf
inc
das
sbb
jno
stos
jecxz
sbb
adc
pop
mov
push
xchg
dec
add
rclb
jmp
mov
test
lret
adc
dec
add
or
movsl
add
fwait
mov
mov
rcrl
pop
jbe
scas
sub
iret
jbe
and
cld
push
notb
enter
mov
add
cmpsb
xchg
lea
sub
push
sbb
mov
xor
push
mov
insl
mov
mov
xchg
sub
arpl
pop
add
mov
lcall
xchg
mov
dec
inc
mov
and
xor
je
fwait
mov
adc
xchg
cli
mov
aaa
movsb
lcall
cmp
xlat
dec
inc
imul
pop
and
loope
sub
add
jno
mov
cltd
jbe
jecxz
dec
sub
inc
xchg
xor
push
cltd
popf
sbb
cmp
fsubl
sub
cmpsl
fisubl
adc
ja
cs
nop
dec
xchg
push
rorb
lcall
dec
jb
xchg
gs
int
sbb
dec
add
pushf
xchg
push
std
push
cli
dec
shlb
sub
add
jmp
dec
insl
sbb
les
psrlw
mov
fcmovnbe
push
std
adc
xchg
sub
scas
mov
adc
adc
cs
insl
std
and
mov
jns
rcrb
add
and
movsb
adc
add
lcall
xor
xchg
xchg
and
or
pop
xor
jne
test
fimull
adc
insb
sbb
xor
push
cmp
jae
imul
stos
add
push
xchg
test
jbe
adc
popa
mov
pop
cmp
push
gs
in
adc
repz
jae
or
adc
pop
out
mov
inc
fwait
xor
jae
dec
dec
xchg
sub
lret
rcrb
or
dec
sbb
inc
push
adcl
jne
pop
mov
adc
pop
inc
clc
xchg
popa
xor
je
cltd
pop
cmp
test
test
cltd
dec
shlb
shrb
or
jns
jmp
jne
fwait
or
xor
pop
mov
pop
test
mov
adc
mov
dec
sbb
out
test
setae
flds
push
rcll
fidivrl
xchg
test
mov
push
inc
and
pop
out
xchg
xor
insl
adc
lcall
sti
xlat
sub
or
xchg
xor
cltd
les
dec
lods
aam
hlt
shrl
mov
xlat
xor
cmp
inc
or
xchg
fs
jbe
sub
rclb
repz
fldcw
insl
imul
jae
fwait
xor
mov
cltd
add
dec
fistpl
xchg
lea
movsb
pop
inc
or
jbe
add
stos
dec
aaa
dec
stos
loopne
pop
int
and
add
sbb
inc
lods
movsb
leave
xor
lret
lret
jnp
xor
xor
daa
jae
fs
clc
xor
data16
xlat
addr16
jae
movsb
cltd
jg
push
dec
mov
or
loope
hlt
pop
push
sbb
xlat
aaa
sub
icebp
and
mov
lods
lcall
add
in
and
fs
mov
sub
lcall
cmp
pop
add
es
leave
mov
sbb
rcrl
arpl
dec
sbb
xchg
sbb
or
mov
inc
arpl
ficompl
in
and
inc
and
and
daa
std
push
cli
pop
sub
mov
sub
out
movsb
rcrb
test
mov
lcall
sbb
mov
inc
push
push
pop
int
movsb
or
xor
xchg
push
jmp
test
adc
test
and
leave
xor
xchg
adc
rclb
imul
inc
add
clc
incl
fcomip
lds
fwait
fs
mov
xchg
roll
sysenter
or
popa
nop
ret
jb
les
incb
adc
sub
jecxz
push
sbb
adc
fmull
push
adc
pop
xchg
imul
xor
and
inc
and
xchg
insl
sub
jnp
sbb
roll
aaa
ljmp
xchg
adc
sbb
jnp
push
jp
fxch
inc
aad
incl
mov
mov
in
rorl
nop
fwait
enter
stos
mov
adc
test
xchg
pop
sarb
mov
fbld
rcrb
jb
movsl
aaa
jge
cld
xchg
fmull
adc
jno
lret
cld
punpckhbw
jmp
pop
mov
imul
ffreep
mov
push
xchg
xor
scas
mov
lock
add
or
sbb
jmp
push
cltd
jecxz
testb
add
sbb
jnp
insl
int
aaa
sarb
stos
fwait
cmp
sbb
xchg
pop
movsl
jmp
fsubr
sub
dec
xchg
jl
pop
mov
mov
mov
insl
mov
dec
andl
rolb
xchg
data16
pop
xchg
les
adc
pop
inc
sub
hlt
scas
push
xlat
imul
push
jbe
loop
shlb
imul
add
aam
in
mov
stc
mov
pusha
jg
jmp
lcall
add
and
cltd
mov
fwait
and
nop
add
test
pop
add
repnz
in
and
rorl
mov
xchg
adc
dec
cs
mov
adc
lods
cmc
nop
jnp
aam
mov
adc
imul
call
xor
out
xchg
imul
xor
cmp
xlat
shll
incl
fmuls
jae
out
mov
call
int
in
in
in
lea
mov
iret
xchg
add
jmp
inc
add
stos
lret
add
imul
push
pushf
loope
jbe
or
test
lods
mov
call
xchg
je
jmp
add
push
dec
xchg
jmp
add
or
repnz
push
xchg
aam
loop
xchg
push
mov
mov
dec
xor
sub
aas
dec
call
test
dec
mov
ret
jb
add
in
xor
outsl
and
sbb
xchg
clc
cmpsl
dec
push
add
idiv
icebp
shll
repnz
add
mov
mov
scas
dec
test
push
add
xor
and
cmp
insb
cs
stos
je
or
cmpsb
shrb
mov
popf
dec
xor
or
jmp
stos
cmp
and
xchg
sbb
outsb
push
adc
inc
mov
popa
and
stos
loop
jl
mov
rclb
fisubrl
int
inc
rolb
push
add
adc
test
mov
int3
nop
or
add
and
mov
leave
enter
popa
mov
mov
cmpsl
push
inc
inc
rcrb
sub
push
xchg
xor
lods
inc
push
pop
adc
popf
pop
mov
mov
mov
push
pushf
movsl
push
sbb
xlat
adc
je
and
jmp
std
push
cli
xor
stos
out
dec
in
insl
shr
xor
and
xor
add
rcrl
sbb
mov
popf
int
add
mov
mov
add
dec
daa
pop
in
shlb
mov
push
ficompl
leave
push
inc
imulb
cld
es
lds
jge
pushf
cmp
int3
push
sub
cmp
pop
jg
in
xchg
lea
mov
popf
call
pushf
push
and
dec
jbe
sub
adc
xchg
adc
inc
and
movsl
mov
sub
imul
xlat
les
shr
pusha
adc
shlb
repz
call
and
xchg
xor
mov
xchg
push
push
push
mov
dec
shrb
add
repnz
or
xchg
cs
fiadds
mov
sahf
enter
jns
scas
and
sub
xchg
sub
es
stos
mov
movsb
out
mov
dec
lea
jl
cld
out
xchg
dec
shlb
out
lea
pop
cld
xor
pusha
xchg
mov
mov
cltd
push
loopne
add
mov
stos
sahf
dec
cmpl
imul
push
ret
insl
sbb
add
imul
add
xlat
inc
or
in
aaa
decl
out
mov
divl
mov
in
popa
sub
out
test
sti
mov
mov
dec
int
movsl
adc
jg
or
inc
dec
nop
push
xchg
pushl
insb
dec
and
jmp
and
or
xchg
lcall
enter
cld
mov
pushl
out
cmc
push
jns
fdivl
cmp
insl
or
arpl
cmc
sbb
std
outsl
scas
jbe
push
pop
add
jge
or
sub
mov
nop
or
and
sbb
inc
mov
test
movsl
dec
ret
push
fsts
lods
cld
subl
shlb
fistps
cli
adc
pop
mov
data16
mov
and
out
test
in
les
add
pushf
dec
sbb
pop
and
mul
jmp
mov
shll
rcrl
add
pushf
je
fs
cwtl
rcl
cmpsl
add
imul
sbb
or
add
ss
cs
inc
shrl
in
pop
sbb
arpl
mov
xchg
sbb
mov
imul
in
or
inc
and
xor
add
sub
inc
int
add
or
out
rcr
add
bound
mov
cmp
lahf
pop
ja
jge
mov
add
inc
push
push
aam
test
cmp
stos
je
aas
add
and
mov
mov
jns
or
dec
sub
push
fs
add
and
int
sbb
dec
push
inc
adc
adc
push
movsl
fidivl
adc
dec
dec
lcall
and
and
jae
jmp
ljmp
fidivrl
stos
lea
hlt
in
add
lret
scas
mov
dec
rclb
adc
lods
movsl
xor
shlb
add
test
mov
jmp
test
notb
test
dec
jne
xchg
daa
xor
cmp
and
xchg
cmp
popaw
jae
sbb
xor
mov
xor
sbb
adc
add
xor
xchg
movd
dec
adc
sbb
fs
fisttps
push
movsb
jns
mov
pusha
sub
add
call
rcrl
mov
cmpsb
dec
adc
mov
lcall
jge
dec
ror
shlb
mov
insl
sbb
shrb
jecxz
cmc
fiaddl
mov
or
sbb
and
out
insl
and
xchg
cs
add
dec
ss
cmp
dec
jno
test
or
and
dec
jmp
add
mov
mov
or
lods
inc
adc
xor
mov
in
dec
or
movl
add
out
fcmove
rcrb
jp
add
aas
enter
inc
push
lods
sbb
shrl
int
in
sub
gs
add
and
sbb
or
adc
cli
dec
addb
add
lcall
test
pop
mov
out
test
dec
dec
add
pop
movsb
sub
pop
es
adc
mov
test
sbb
sub
sbb
add
push
or
adc
icebp
sub
mov
jns
sub
lea
adc
enter
pusha
inc
jae
dec
rclb
mov
call
mov
rorb
sbb
mov
popf
fs
pop
loope
sbb
lods
add
shrb
lcallw
or
or
and
sbb
xorl
adc
adc
and
repnz
add
fcmovnbe
vshufps
add
push
lds
addr16
nop
add
inc
cmp
sub
xchg
stos
inc
or
mov
add
jb
or
add
or
adc
inc
or
xchg
cmp
repz
cmp
cmp
and
test
adc
inc
add
sub
add
pop
mov
stc
ja
addr16
adc
test
mov
push
and
insl
cmp
push
rorb
sub
add
jmp
imul
je
sub
inc
adc
mov
and
inc
and
mov
xor
cli
inc
add
in
adc
sbb
nop
sbb
xchg
rcll
and
mov
out
add
xor
adc
jp
push
sbb
dec
sub
xchg
xor
add
inc
adc
push
sbb
rol
test
adc
sub
dec
rorl
mov
mov
iret
xchg
stos
movsl
scas
repz
mov
std
xor
movq
jo
testl
out
gs
mov
or
pushf
sbb
adc
imul
ljmp
push
rorb
jl
shlb
adc
sar
in
fisttps
or
lock
or
adc
cld
adc
or
or
pop
loop
inc
pusha
ja
dec
and
iret
sub
or
or
inc
jo
in
mov
lods
mov
imul
cltd
stos
add
test
roll
out
lret
or
adc
ljmp
mov
mov
pop
pushl
cli
xor
dec
mov
roll
clc
daa
movsb
stos
mov
pop
stos
mov
fwait
mov
ret
sub
add
sbb
sbb
cli
fstl
call
jnp
lods
aad
cmpsl
push
mov
fstl
aam
in
jl
cli
sbb
mov
fwait
fs
repnz
jl
push
rorl
jae
pop
stos
cmp
pop
mov
pop
je
mov
inc
mov
inc
jg
sub
xchg
push
addr16
stos
mov
adc
mov
inc
hlt
xchg
je
jmp
mov
dec
cmp
sbb
test
sub
test
xchg
cmp
dec
cmp
pushf
les
jecxz
sub
jns
add
test
lods
aad
sbb
adc
sbb
push
sbb
lods
cli
fstl
push
push
stos
pop
xchg
ljmp
call
sbb
inc
mov
mov
scas
idiv
in
movsb
push
push
xlat
stc
clc
push
sbb
jns
into
cmp
jl
int
push
in
clc
xlat
dec
pop
adc
xchg
scas
pop
in
and
push
mov
aam
pushf
aad
inc
cmp
repnz
sbbb
cmp
ljmp
aam
std
mov
fisubs
int
pop
dec
data16
adc
pop
imul
clc
int
lret
les
push
mov
mov
jecxz
mov
pop
jmp
mov
fistpll
sub
add
push
fs
mov
mov
into
push
push
mov
cmp
sbb
jns
dec
mov
call
mov
pop
cmp
out
mov
div
cmp
enter
ja
dec
movsl
fisubrs
xlat
stc
mov
jb
out
mov
mov
and
stc
mov
lcall
cli
jl
cli
pop
imul
and
push
sub
pop
cmp
mov
push
lret
lcall
xchg
jl
jecxz
aaa
movsl
jl
push
mov
xchg
stos
lcall
push
push
mov
mov
jmp
in
push
jecxz
pop
or
dec
push
pop
ljmp
inc
pop
stos
and
mov
in
ffreep
cmp
out
ds
push
out
cmpsl
in
sub
popf
cli
sub
mov
pop
ljmp
inc
out
mov
or
dec
pop
out
mull
push
push
repz
imul
pop
out
push
rol
xchg
sub
jle
imul
pushf
int3
jns
out
and
cmp
cmp
pop
out
and
movsl
hlt
lods
imul
dec
aad
dec
stc
div
jge
and
or
cld
cld
ja
stos
mov
sti
xlat
repz
ror
xchg
push
sbb
jns
fsubrl
pop
int
imul
fsub
lret
xchg
fs
mov
cld
mov
into
lock
sbb
lods
scas
jecxz
nop
adc
lahf
decl
push
mov
jecxz
scas
jecxz
sbb
scas
testl
jns
jecxz
push
test
jecxz
push
sarb
in
cli
imul
mov
cld
sub
mov
lcall
mov
mov
je
shl
or
mov
add
repnz
mov
jns
out
pop
cmp
notl
sub
mov
cli
jne
aas
lcall
cmp
repnz
pushf
sarb
rcrb
xchg
lods
insl
or
mov
aad
mov
scas
cmp
fiaddl
ss
cld
nop
jne
stos
nop
jp
cwtl
xlat
icebp
nop
rcrb
push
lcall
mov
xchg
push
cld
nop
jl
pop
decl
imul
clc
lret
arpl
outsb
sahf
xchg
jmp
push
push
push
pop
or
jg
xchg
or
cmp
nop
dec
pop
in
jmp
out
ja
xor
lods
jg
insb
xchg
shll
mov
cmpsl
push
test
rep
push
jno
in
dec
mov
jg
xor
xlat
rep
mov
insb
stc
div
jge
cmp
cmpsl
adc
decl
dec
lods
movsb
cmp
mov
lods
mov
push
sub
xor
call
icebp
dec
icebp
fcmovb
xchg
push
xor
and
lods
lock
in
jecxz
nop
sub
clc
dec
mov
iret
scas
jo
out
mov
imul
lds
rcrb
push
mov
add
mov
gs
dec
pop
and
fistps
mov
pop
sub
lea
repnz
sub
xlat
xor
jg
insl
sub
sarl
and
cmp
fildll
mov
dec
fimull
lods
enter
imul
lcall
dec
lods
mov
add
jno
in
testb
sbb
jl
cmp
lea
stc
add
or
mov
test
fdivl
push
xlat
repz
or
pusha
jb
fcmovnb
xchg
dec
aad
mov
and
add
and
xchg
insl
mov
fcompl
shl
or
popf
imul
enter
in
sub
addr16
js
pop
scas
mov
jl
cli
xor
cld
sub
or
imul
lods
mov
and
movsb
and
add
pop
and
and
lret
pop
gs
fstpt
jp
stc
shlb
mov
sub
icebp
pop
outsl
mov
mov
idivb
or
cmp
push
push
notb
fstl
aaa
lods
jge
xchg
sub
ss
mov
pop
addr16
sub
lret
int
imul
nop
insb
nop
dec
xchg
jecxz
pop
sti
cmp
fsub
sbb
jecxz
pop
sti
das
xchg
dec
mov
inc
fcmovnbe
stos
mov
add
rclb
adc
mov
jo
hlt
xchg
jg
dec
mov
mov
mov
jo
pop
jb
add
cmpsl
dec
aad
add
xchg
jo
and
or
stc
ret
scas
loop
pop
cmp
std
adc
inc
mov
pop
adc
jge
cs
sti
jbe
or
pop
push
jmp
add
push
and
test
or
insl
inc
lods
jg
jge
xorb
dec
icebp
mov
inc
sahf
dec
mov
imul
mov
imul
out
sbb
push
cmpsl
out
xchg
jbe
adc
cmp
mov
xchg
push
push
test
mov
push
sbb
dec
push
ss
mov
lea
mov
sub
pop
scas
cmp
mov
je
dec
fwait
pop
sti
cmp
and
sti
jbe
inc
mov
mov
clc
lcall
push
loop
xlat
fldcw
fstps
push
nop
and
sub
jecxz
xor
int
frstor
enter
aaa
sti
jne
scas
mov
movsl
mov
fcoml
jle
adc
mov
sub
mov
in
push
movsl
mov
xchg
mov
in
mov
mov
push
lcall
jns
xchg
mov
hlt
mov
jne
scas
mov
out
mov
add
jno
in
mov
cmp
fistpl
sbb
mov
or
cmc
iret
cmp
mov
daa
rorl
mov
or
call
jecxz
xor
cmp
jb
jecxz
mov
dec
pop
dec
loopne
push
fcoml
pop
jno
in
mov
cmp
dec
outsb
mov
xchg
lret
lods
rcl
loopne
rcrb
mov
or
fisubrs
and
insl
lcall
mov
inc
mov
xlat
shll
mov
fsubrl
or
add
adc
stc
sub
aam
pop
dec
mov
cmp
repnz
xchg
sub
call
mov
mov
lret
pop
inc
mov
lods
jne
jecxz
or
sarl
or
push
adc
aas
cwtl
ljmp
mov
lods
pop
lret
jno
mov
scas
mov
lret
fistpl
push
test
dec
lcall
xchg
jge
lods
mov
insl
dec
mov
lcall
jge
je
sbb
jns
lods
aam
lret
loopne
sbb
pop
out
sub
aam
or
loope
mov
pop
inc
je
aam
xchg
cs
repnz
rolb
lods
jge
je
ucomiss
jg
aas
insl
adc
push
cli
test
jecxz
pop
sbb
jns
cmp
xacquire
mov
push
ficompl
jns
rcll
jno
in
out
pop
loope
test
popf
mov
in
cmpsb
push
into
aam
mov
ret
dec
sub
mov
sub
in
mov
sub
roll
mov
sub
lcall
dec
js
push
int
lods
jge
sub
aam
push
clc
aam
lret
cli
testl
je
push
or
inc
test
fidivl
xlat
rorl
idiv
ffree
xchg
cs
or
jecxz
aaa
mov
insl
or
cli
pop
cli
jp
push
dec
or
mov
hlt
or
scas
push
adc
inc
mov
pop
out
pop
ficomps
push
scas
push
sbb
insl
in
clc
imul
in
inc
fstpl
push
negl
xchg
cs
cmp
dec
xor
dec
mov
sbb
out
lea
inc
push
out
jmp
dec
mov
mov
scas
test
lretw
imul
push
push
repz
sub
out
rorl
data16
faddp
jg
add
xlat
jnp
mov
mov
inc
sub
lcall
in
xchg
cmp
in
sti
push
mov
nop
dec
xchg
outsl
dec
pop
xor
mov
mov
sub
dec
scas
out
stc
outsb
repz
scas
shrb
out
out
nop
add
out
and
cmc
rol
pop
clc
fs
mov
cmp
popf
pop
jecxz
or
stc
in
add
mov
inc
sbb
leave
repnz
cmp
or
jecxz
push
cmpsl
sub
lret
lea
cmp
mov
add
or
adc
and
test
xlat
add
shr
fisttpll
or
inc
lret
rcll
sub
pop
push
loopne
add
adc
and
incl
xchg
int3
xor
test
or
inc
sbbl
push
and
jmp
xor
in
sbb
shrb
cmp
mov
nop
dec
xchg
out
mov
rcrl
fwait
push
and
movsb
push
leave
push
lods
popf
jl
out
push
push
pop
dec
xchg
dec
popf
jl
jmp
imul
pop
ret
and
cmpsl
hlt
xor
data16
jl
dec
ret
aam
je
call
pop
cmpsl
pop
xchg
in
sar
lret
xlat
sub
xchg
xchg
push
dec
sub
cmp
das
test
cmp
inc
dec
mov
cmpsb
mov
loop
and
lret
mov
fisttpll
mov
add
icebp
cmp
stc
cld
shrl
mov
dec
pop
cld
bswap
lret
add
lock
mov
pushf
dec
pop
mov
out
dec
mov
fldl
daa
jne
cmpsl
jne
cs
jns
adc
inc
popf
aam
jb
push
xchg
add
jge
xchg
insl
dec
outsl
in
lock
mov
mov
test
push
xchg
or
dec
and
and
sbb
stos
xor
push
test
sbb
or
scas
cmp
arpl
inc
lods
xlat
imul
mov
mov
lret
push
jecxz
adc
adcb
push
scas
xchg
inc
jb
icebp
add
lcall
rcl
xlat
add
or
dec
sbb
sub
dec
imul
mov
sbb
orl
and
sub
lret
adc
jge
push
jae
pop
lods
jge
xchg
addr16
jg
enter
push
inc
adc
fidivl
in
sub
mov
addr16
pop
mov
and
mov
icebp
dec
and
pop
jne
in
xchg
movsb
addr16
inc
add
imul
dec
imul
dec
pop
sbb
mov
lcall
mov
and
ret
cmpsl
fistps
cld
sbb
mov
loope
cmp
xchg
popf
aam
jb
push
xor
inc
imul
and
daa
ja
ja
fs
fnstenv
popf
jo
hlt
inc
daa
pop
mov
shlb
lahf
dec
shll
sbb
xchg
jbe
nop
movsl
data16
in
in
cmp
pop
nop
sub
sbb
test
shlb
jge
xchg
xchg
imul
sub
cmpsb
sbb
mov
mov
imul
lcall
add
sbb
dec
xchg
lods
dec
or
fisttpll
sub
sub
in
and
mov
jge
cs
call
jne
int
jl
shr
mov
push
dec
xchg
xchg
cltd
xchg
mov
lcall
jge
xchg
mov
in
jmp
mov
daa
jne
or
mov
jae
aad
xchg
push
lods
jmp
lret
gs
or
cmp
imul
or
mov
sub
or
das
stos
jbe
sarl
mov
test
insb
dec
push
push
cmpsl
jge
jbe
jbe
or
and
sub
testl
xcrypt-ctr
cmpsl
sbb
pushf
call
mov
call
nop
or
jecxz
add
cmpsl
pop
adc
inc
mov
mov
jl
jmp
lcall
mov
imul
clc
and
push
mov
cmp
or
rorb
aad
ljmp
xchg
lods
notl
shl
int
cmpsl
xlat
adc
xchg
xchg
push
dec
sub
lahf
idiv
call
mov
sbbl
gs
and
int
sub
gs
mov
scas
xchg
push
dec
lods
and
imul
xchg
fcoml
dec
divl
nop
add
cmpsb
out
mov
lcall
aas
jns
sbb
xchg
mov
lret
pop
sti
je
mov
push
fimull
mov
lds
xor
jne
repnz
inc
mov
xchg
int
cmp
dec
xchg
out
popf
shrb
mov
push
jb
hlt
inc
dec
cltd
leave
decl
mov
aam
cld
cs
popl
out
ds
stos
dec
scas
sub
sti
jne
push
stos
sub
repz
lcall
enter
rcrl
cmpsl
push
xchg
add
dec
dec
adc
je
es
sbb
mov
pop
out
jne
mov
inc
imul
jecxz
pop
decl
dec
push
adc
jae
adc
pop
sub
push
shrl
into
xor
fnstsw
or
mov
jne
int
or
pop
call
lods
fisttpll
dec
cmp
sbb
push
out
lret
mov
inc
push
shr
fstp
jg
mov
adc
aas
pop
push
js
mov
and
and
call
mov
ds
mov
pop
orl
je
xchg
push
gs
out
lea
pushl
lahf
shrl
sub
stos
xchg
mov
add
and
mov
into
jne
jmp
insb
pop
xor
mov
dec
jno
dec
sbb
popf
aam
dec
xchg
mov
pop
enter
rolb
lods
pop
xor
mov
lcall
and
cmpl
inc
lahf
incb
fildll
test
dec
pop
into
lods
or
mov
push
or
jl
xor
dec
daa
mov
sub
dec
mov
mov
mov
dec
mov
push
mov
shll
pop
dec
jmp
sub
dec
addr16
jne
int3
add
cmp
dec
jmp
imul
cmp
rep
imul
push
imul
dec
sub
test
cld
clc
test
dec
stos
mov
aas
lods
push
mov
out
inc
or
ss
lea
sarb
mov
imul
mov
push
or
int
lods
lcall
jge
enter
mul
pop
test
pop
sbb
lea
ds
mov
popf
add
cmpsl
fnsave
mov
pop
ss
mov
pop
fsubr
mov
jmp
and
in
sti
mov
fs
ss
sbb
pop
add
dec
orb
repnz
mov
imul
and
xor
mov
sbb
shrb
pop
scas
and
cli
in
mov
lods
ljmp
or
cmp
icebp
enter
fs
mov
insl
adc
test
xor
xchg
add
push
add
orb
stos
xor
mov
movsl
iret
in
sbb
sbb
cld
shr
fldl
dec
popf
pushf
repnz
sbb
xchg
ret
jmp
scas
scas
fnstsw
cmpsl
fstl
mov
pop
add
cwtl
dec
inc
mov
or
dec
fs
ds
out
xlat
repz
dec
mov
sub
xlat
iret
sbb
es
popa
mov
cmp
fs
in
and
mov
testl
mov
stos
frstor
sub
mov
ficompl
outsb
mov
inc
sub
ds
ds
lds
lcall
xlat
out
stc
popf
data16
movsl
cmc
cmp
add
js
cmc
mov
je
xchg
sbb
rol
add
and
mov
je
dec
mov
dec
mov
fistl
push
fs
lcall
jns
add
xchg
lods
mov
clc
adc
stos
repz
xchg
gs
cmpsl
xchg
je
je
jmp
lods
dec
rcrl
mov
lods
push
mov
hlt
mov
push
subb
dec
sbb
push
mov
lahf
hlt
sbb
push
repz
mov
and
stos
mov
dec
mov
xchg
out
mov
jl
sar
adc
in
mov
mov
inc
push
lret
lret
adc
addr16
and
pop
jns
scas
mov
dec
out
mov
and
mov
jmp
mov
pop
mov
shll
mov
jo
push
cli
xchg
scas
mov
jmp
iret
xor
sub
out
mov
scas
mov
and
push
and
popf
cltd
or
and
mov
stos
in
jp
pop
mov
inc
xchg
xlat
mov
push
mov
jl
dec
jg
sub
movsb
rclb
stos
mov
and
pop
pop
sub
sub
cs
sbb
loope
mov
push
sbb
dec
lods
push
enter
stos
out
pop
mov
jne
stos
mov
nop
daa
in
lods
cs
leave
ficompl
sbb
xchg
fwait
ss
sub
mov
insl
lods
or
outsl
int
sbb
je
je
jmp
insl
dec
sti
and
cmp
and
push
sub
movsb
cmp
or
sbb
fs
aad
test
sub
xor
sbb
mov
lods
notl
sub
lret
push
arpl
pop
pushf
test
push
sub
scas
cmpsl
dec
pop
int
imul
jmp
push
sub
je
and
scas
stc
lgs
xchg
scas
popf
clc
mov
mov
scas
xchg
mov
mov
xchg
mov
xor
imul
loop
xchg
sub
xor
out
mov
movsb
inc
lods
jge
add
and
scas
xchg
add
mov
ss
mov
and
xchg
mov
cli
adc
xlat
jnp
movsb
adc
pop
addr16
and
inc
ficompl
filds
mov
inc
mov
jmp
mov
imul
mov
dec
mov
jmp
pop
leave
cmpsl
add
lret
pop
xchg
fldenv
lcall
dec
pop
cli
fwait
testl
cmp
push
cli
fwait
xchg
dec
jmp
fldenv
popa
inc
js
lea
lods
sbb
loope
push
sub
fidivrl
adc
dec
jge
lods
xchg
in
daa
out
pushf
insl
and
sbb
inc
cmp
lea
imul
push
jg
adc
push
pop
roll
movsb
lods
jge
stos
mov
sbb
lahf
jle
jb
push
push
dec
aaa
repnz
nop
or
mov
xchg
repz
scas
imulb
hlt
mov
sbb
lcall
ret
sbb
aas
mov
dec
mov
lcall
and
or
xchg
xchg
insl
in
jmp
ret
mov
lods
mov
mov
ficompl
xor
push
aam
div
jmp
fwait
psubsw
in
test
and
fidivl
cmp
pop
dec
cmp
xchg
push
insl
sub
add
xchg
mov
xchg
push
test
rcrl
adc
mov
push
lret
hlt
cltd
cmpsb
sub
das
mov
sub
seto
test
jmp
scas
mov
movsb
jb
shrl
push
push
xchg
mov
and
lods
insb
shrb
movsb
pop
lods
jg
lea
lahf
movsl
shll
lods
xchg
xlat
adc
dec
hlt
test
dec
pop
loope
sub
mov
adc
mov
push
xchg
cld
xlat
ficoml
inc
lods
fisttpll
test
jmp
xchg
pop
insl
popa
xchg
iret
add
and
rcl
popf
ljmp
adc
sbb
mov
add
lcall
cmp
je
scas
jmp
jl
mov
inc
or
flds
test
lods
cmc
fisubrl
mov
or
je
push
dec
icebp
jmp
pop
lods
jge
rcrb
inc
ljmp
inc
and
stos
je
and
jecxz
imul
dec
xchg
push
mov
mov
xchg
lods
int3
mov
test
mov
test
mov
movsw
xor
pop
dec
add
cmc
or
cmp
dec
dec
xchg
lods
and
or
sbb
push
push
sbb
or
mov
pop
rcrb
dec
sbb
shlb
daa
or
cmpsl
test
cmc
dec
sub
out
int
jecxz,pn
inc
adc
or
cmp
ljmp
lods
mov
pop
sti
cmp
cmp
cld
adc
add
sub
sub
cmp
push
inc
and
lods
in
movsb
lcall
cs
dec
nop
inc
xchg
out
popf
dec
outsb
mov
pop
pop
int
imul
ror
sti
ss
fcomi
pop
jecxz
dec
mov
cmp
jae
movsl
xchg
cmp
xor
stc
into
movsb
lods
jg
xchg
lcall
push
mov
rorl
fldcw
std
fisubrl
pop
xor
mov
cli
mov
xchg
int
cs
jne
mov
shrl
xchg
inc
jge
pop
and
scas
std
sbb
fwait
adc
sub
mov
cmpsb
sbb
jmp
les
sbb
rcll
insl
subb
and
jmp
dec
mov
jbe
fildl
adc
cmp
add
addr16
ljmp
dec
out
shll
insb
lcall
mov
fadds
ljmp
ljmp
inc
lods
xlat
imul
add
into
test
xor
mov
lods
jae
sub
jl
add
notl
movsb
push
mov
cli
rolb
sub
mov
cmp
lcall
and
jo
push
jmp
mov
dec
popa
jl
ss
mov
pop
jg
mov
mov
jg
in
mov
lods
mov
fsubp
xchg
mov
push
lcall
dec
and
xor
je
xchg
push
ss
mov
aaa
cmp
mov
shll
shll
pminub
fnstsw
imul
and
es
leave
xor
push
lahf
inc
out
fwait
mov
outsl
nop
movsl
jle
jns
dec
add
xchg
fs
add
mov
imul
push
in
mov
or
test
lahf
xchg
insb
rclb
out
popf
fldenv
out
popf
mov
jge
leave
and
insl
test
shlb
jmp
scas
imul
sub
pop
jb
xor
je
sub
xchg
lods
div
pop
lret
dec
lcall
out
push
push
movsl
call
mov
inc
jge
enter
push
fistpll
scas
pop
gs
and
sub
dec
in
shll
xchg
loop
xchg
or
out
popf
scas
or
or
repz
scas
mov
xor
xor
mov
sub
sub
inc
add
inc
dec
xchg
add
sub
pop
lods
ja
std
mov
mov
jne
mov
sbb
into
mov
cmp
inc
or
cmp
jg
inc
xchg
in
push
cmp
rcrl
pop
dec
sbb
into
je
xor
mov
inc
dec
repz
dec
out
into
push
xor
and
cld
daa
shll
imul
mov
repz
xchg
jmp
inc
sbb
add
sub
mov
mov
aad
mov
pop
cld
lods
idivl
movl
mov
lret
ss
add
test
xor
push
mov
adc
inc
or
mov
inc
cmpsb
sbb
dec
adc
out
and
lea
sub
jle
dec
pop
lods
ja
lcall
das
sahf
cmp
out
movsl
push
cmp
inc
scas
dec
push
cs
jecxz
xor
xlat
fimuls
inc
js
xor
and
and
cltd
int
and
ljmp
and
dec
jmp
sub
xchg
shlb
xor
and
or
inc
ret
fisubl
sub
jo
xchg
les
jg
mov
pushf
fidivl
sbb
mov
mov
shrb
je
insl
or
and
mov
aam
add
maskmovq
fs
jge
cmpsl
test
xchg
jbe
or
jge
sub
jae
cmpsl
sbb
dec
lods
mov
test
push
inc
jg
dec
cli
mov
cmp
push
loope
pop
out
cmc
jmp
gs
xor
xchg
mov
pop
scas
je
xchg
inc
lcall
rolb
aas
xchg
sub
cmp
sub
mov
dec
pop
cli
and
je
mov
sub
dec
xchg
shll
mov
jno
mov
je
or
mov
pop
cmp
or
xor
adc
in
call
in
xchg
xchg
sub
sbbl
dec
call
pusha
dec
push
repz
ret
fidivrl
push
fstpl
and
imul
cmpsb
pop
test
popf
sbb
mov
jo
or
xor
scas
add
push
xchg
mov
cmp
xor
jmp
push
mov
lcall
adc
push
testb
push
dec
adc
sbb
dec
shlb
shlb
nop
sbb
dec
jns
roll
stos
jne
jmp
push
xchg
sub
aas
test
mov
lcall
stc
or
test
ret
in
and
test
lods
idivl
ret
rcrl
mov
shll
xor
mov
outsb
movsl
mov
imul
pop
imull
push
repz
inc
mov
adc
lret
cmp
pop
mov
xlat
xchg
js
mov
xor
add
push
imul
inc
xlat
and
xor
es
xchg
lods
div
cmc
loop
push
sbb
stos
cwtl
cmc
fldcw
clc
xor
cmp
scas
xor
cs
sbb
sar
mov
sbb
pop
mov
push
xchg
mov
shll
jb
inc
xchg
pushf
cmp
lret
dec
jns
out
mov
imul
and
jb
stc
mov
es
mov
pop
mov
cmpb
sub
test
lods
xlat
xchg
imul
jecxz
pop
jne
out
adc
rclb
mov
dec
stos
fisttpll
inc
imul
movsb
sbb
jne
scas
mov
fstps
push
xlat
icebp
mov
pop
cmp
scas
scas
inc
in
add
or
push
imul
out
cmc
xchg
mov
mov
mov
pop
pop
lret
mov
js
xor
xchg
and
mov
fcomi
stos
out
lods
dec
data16
mov
inc
imul
or
jge
les
pusha
test
mov
inc
jb
icebp
lret
ja
ss
xchg
xor
and
dec
xor
out
pop
lret
movsl
aas
adc
xchg
jecxz
pop
mov
stos
dec
cmpsb
mov
mov
xlat
mov
insl
jo
repnz
nop
and
jmp
lcall
fcomps
stos
xchg
xchg
je
mov
pop
out
je
cltd
push
mov
out
test
jle
insl
sub
dec
rclb
fs
bound
in
sbb
add
lods
add
xchg
and
mov
xchg
cld
mov
and
scas
scas
insl
ja
je
add
ffree
sahf
das
ja
enter
sub
dec
sub
and
jecxz
pop
mov
lea
movsb
in
and
repnz
stc
mov
adc
sti
xor
in
and
scas
jge
dec
not
pop
scas
fcompl
xor
mov
jle
dec
rolb
pop
imul
fisttps
pushf
cmp
or
add
inc
xlat
dec
out
into
aas
inc
or
adc
jns
lret
sbb
hlt
add
push
ds
or
add
cmp
jns
and
into
imul
dec
xor
inc
test
dec
inc
inc
mov
cmp
je
out
test
mov
cmp
test
insl
ljmp
add
or
sbb
jmp
or
add
xchg
fsub
lahf
popf
push
mov
push
aad
jl
pop
pop
out
xchg
xchg
jne
sbb
sub
leave
pop
mov
adc
xchg
cmp
jb
test
jo
pop
imul
jge
jg
sbb
push
adcl
jmp
test
fsub
lock
fucomp
jle
jne
add
stc
lock
sti
clc
test
and
sbb
adc
in
add
xchg
clc
sub
das
jns
dec
scas
push
enter
int3
mov
push
xchg
mov
inc
aaa
dec
dec
push
lcall
stc
cld
rcll
test
xchg
mov
fnsave
mov
int
or
mov
cmpsl
inc
pop
mov
test
mov
js
popa
and
mov
popf
call
fdivrs
mov
int3
dec
lcall
adc
scas
dec
cld
leave
xlat
lret
filds
dec
jo
push
das
lds
inc
or
fs
cltd
xchg
cmp
sub
sbb
pop
pop
push
cmc
mov
inc
out
or
or
nop
imul
mov
into
nop
shr
mov
xchg
adc
or
sbb
sbb
xor
lret
add
sti
xchg
inc
incl
cltd
mov
out
cmpsb
dec
push
and
mov
mov
jecxz
fsubs
or
mov
shlb
loop
sbb
mov
or
adc
test
scas
jg
call
out
cld
fs
sub
scas
mov
cmp
es
shrb
push
jl
mov
inc
xchg
mov
mov
rclb
seta
dec
and
in
pop
add
cmp
out
cmp
jo
in
jno
xor
pop
cmpsl
dec
push
lods
or
cli
sti
xchg
scas
ret
test
xorb
jno
mov
scas
std
in
add
in
jecxz
and
pop
mov
ja
xchg
jg
mov
cmp
call
inc
mov
mov
mov
cmpsb
mov
shlb
in
pushf
adcb
int
jmp
rorb
sbb
idivl
fisubrl
test
mov
add
test
lcall
repnz
out
clc
imul
jmp
push
ja
cmp
out
inc
adc
xchg
fs
or
dec
adc
jmp
xchg
imul
sbb
dec
popf
xlat
sbb
shl
xchg
mov
test
inc
lock
sti
jo
iret
lret
jl
rcrl
shlb
rolb
adc
cwtl
add
mov
out
mov
inc
mov
in
out
jmp
sbb
popa
test
cmovs
dec
adc
sbb
ficoml
sbb
mov
jns
or
cmp
cmp
and
popf
xor
and
pusha
cmp
adc
add
pop
fidivrl
lock
pop
ret
mov
mov
cli
inc
sti
adc
out
test
cld
lcall
lock
fdivl
xlat
pop
xchg
xchg
test
xor
lcall
or
cmpsb
inc
xor
xor
adc
or
pop
jae
icebp
inc
add
or
mov
xchg
add
mov
sub
idivl
inc
fld
int
fcomp
push
or
lods
ja
insl
cli
ss
jg
cmc
jae
movsb
test
dec
or
sub
inc
xor
mov
mov
pushf
cmc
lret
or
xor
inc
dec
sub
aad
xor
xrelease
daa
aad
xor
pop
and
adc
lods
mov
loopne
push
popa
add
cmp
mov
add
out
adc
add
into
gs
lods
xchg
loope
xchg
ljmp
mov
jge
xacquire
int
sbb
aas
movsb
cltd
dec
or
adc
jecxz
lcall
push
in
and
push
jge
pop
dec
sub
dec
or
stc
mov
pop
adc
add
dec
cmpl
mov
scas
rcrl
adc
jmp
out
jne
nop
dec
lods
push
in
add
in
jno
mov
mov
pop
pop
stc
movsb
push
sbb
fisubl
mov
push
dec
ss
scas
mov
inc
or
repz
add
cmpsb
mov
daa
sarl
lea
push
sar
pop
lcall
mov
ficompl
push
or
rcr
adc
fcmovu
insb
lcall
in
add
mov
adc
and
cmp
mov
scas
aaa
push
inc
sbb
dec
sbb
xchg
inc
test
xchg
lods
lea
mov
jge
andb
jb
fwait
dec
dec
scas
sbb
push
or
add
and
pop
add
in
in
leave
loope
inc
lods
sub
add
shl
add
or
add
push
nop
daa
mov
xchg
jmp
rclb
sbb
stos
into
mov
stos
into
rolb
cmovae
xchg
aas
mov
lods
fsubp
outsl
xchg
xor
cli
std
cltd
mov
imul
sarb
mov
jnp
loopne
jo
es
dec
lcall
sbb
push
push
fcompp
fisttpl
cmp
lods
xchg
icebp
add
jmp
ss
add
add
jb
repz
add
xchg
and
xchg
mov
inc
cmovae
jmp
lea
xor
loop
es
scas
scas
pop
and
ret
fwait
add
sub
test
jno
cmpsl
outsl
adc
inc
lahf
out
repnz
shr
out
rorb
ljmp
xchg
jmp
rcl
sub
int
lcall
xlat
int
mov
dec
lcall
jge
inc
sbb
scas
pop
pop
dec
push
or
jbe
cmp
pop
adc
pop
mov
shl
cltd
mov
xchg
mov
or
mov
repz
cmc
sbb
lea
mov
insl
and
or
sub
add
add
clc
decl
inc
adc
inc
sbb
xor
aas
adc
pop
jae
shl
movsl
mov
test
dec
sbbb
stos
lods
movl
lret
int3
das
addl
arpl
add
add
cmp
and
mov
in
add
aaa
jmp
movsb
xorb
test
dec
xor
imul
add
inc
sub
sbb
mov
xchg
or
push
or
cmp
rorl
test
mov
and
in
inc
clc
mov
sbb
insl
daa
or
nop
adc
jle
mov
sub
inc
inc
daa
hlt
je
mov
cmpsb
xchg
lea
xchg
xchg
xchg
popf
xchg
mov
and
lahf
inc
iret
jmp
rclb
sbb
adc
hlt
cmp
or
aas
rclb
mov
sti
mov
test
mov
push
cmp
dec
mov
add
mov
adc
cld
mov
mov
sub
adc
pushf
add
adc
js
add
add
add
mov
dec
add
xchg
std
adc
add
loop
pop
or
adc
or
fwait
add
add
adc
or
cmp
ja
mov
mov
lock
adc
inc
xor
sub
inc
mov
adc
dec
push
sbb
add
sub
jp
loopne
adc
movsb
loopne,pt
fmull
xor
outsb
adc
push
ud1
xchg
lock
and
adc
js
xchg
adc
cmp
or
xchg
out
ret
and
ss
test
dec
adc
or
shlb
pop
aad
call
push
mov
add
add
scas
adc
push
add
adc
adc
adcl
mov
and
add
add
xchg
fwait
xor
mov
loopne
sbb
enter
jg
aas
mov
loope
incl
jmp
adc
loopne
decb
mov
mov
dec
jne
add
out
cld
ret
stos
add
push
nop
or
out
mov
scas
mov
mov
pop
jmp
dec
clc
ficomps
push
mov
mov
jbe
xchg
and
mov
out
mov
leave
xor
lods
add
jnp
ds
cmp
repnz
jno
in
movsl
aas
mov
xchg
imul
in
xor
jno
in
pop
mov
sti
xor
jno
in
mov
jle
rolb
xchg
or
std
int3
push
push
mov
aam
push
lods
mov
cli
mov
xlat
add
int3
xacquire
fsub
sbb
mov
mov
clc
lret
xor
scas
inc
pop
xor
mov
mov
pop
scas
jg
cmc
push
inc
nop
mov
mov
lock
add
jns
pop
add
out
sarb
insl
sub
mov
stos
insl
in
ljmp
cli
leave
inc
lods
test
scas
push
pushf
divb
in
lcall
push
negb
sub
sub
mov
push
mov
jae
adc
xchg
stos
lcall
fdivl
in
lret
xor
sbb
insl
cmc
push
ljmp
inc
hlt
fildll
pop
out
insl
jge
std
fdivrp
inc
jecxz
addb
std
fidivs
int3
push
push
mov
cmp
jae
in
into
jecxz
pop
push
jne
insl
sub
in
jno
xchg
sub
jecxz
push
mov
repz
mov
mov
shlb
int3
push
push
test
jecxz
adc
dec
fcomip
rcrb
dec
das
sarb
enter
fidivrs
mov
cmp
out
push
push
mov
pushf
sarb
in
mov
cmpsl
or
std
inc
xlat
push
dec
lds
test
jecxz
xor
mov
xlat
sub
fwait
out
xor
mov
pop
mov
rorl
fimull
mov
stos
push
cmp
int3
jne
in
adc
dec
mov
push
sbb
mov
in
or
jg
mov
mov
mov
scas
push
cmp
negl
into
int3
cmp
ja
imul
sub
or
lods
popa
idivl
or
jge
scas
pop
xchg
xchg
mov
scas
in
mov
cwtl
roll
mov
mov
jno
in
xchg
mov
outsl
mov
sbb
xor
movsb
mov
cmp
jp
lods
call
xlat
in
mov
mov
sbb
mov
mov
sbb
inc
sti
popf
mov
mov
mov
rcrb
cmc
sub
mov
aad
scas
mov
xchg
pop
dec
pop
jb
pop
xchg
pop
adc
fistps
pop
stc
div
cs
lea
push
pop
nop
mov
mov
xchg
pop
jno
in
cld
cs
ljmp
sub
mov
mov
pop
ljmp
push
dec
xchg
data16
lea
mov
int
lods
add
adc
mov
test
or
stos
cmp
outsl
test
repnz
pop
sub
in
cmp
daa
mov
push
xchg
fldl
jle
jge
adc
sub
cmp
jle
lret
jge
js
and
insl
and
fidivrs
dec
inc
mov
pop
or
sub
cmc
mov
inc
lods
adc
pushf
xor
xchg
push
imul
in
add
lea
lods
adc
pop
mov
jb
cs
jo
xor
popf
sbb
and
cmp
repnz
jb
out
shrl
xor
cs
mov
mov
or
ss
pop
jmp
incl
sub
fimuls
add
das
data16
repnz
fidivrs
fs
sti
rolb
push
roll
or
add
pop
xchg
pop
jno
mov
mov
sbb
popf
arpl
pop
pop
sbb
jg
mov
pop
mov
jecxz
jmp
pop
cmp
repnz
in
jecxz
sub
add
pop
aas
pop
mov
repnz
mov
jnp
add
mov
xchg
test
or
popf
ficoms
call
dec
cld
jno
in
inc
or
scas
dec
rcrb
mov
je
and
fxch
insl
cmp
decl
sbb
movsl
inc
fwait
clc
loope
mov
out
dec
xor
insl
or
fisttps
aad
mov
inc
lods
sbb
inc
cmpsb
int
push
movsb
aam
xchg
push
lods
xlat
pop
inc
and
lds
mov
pop
pop
scas
cmp
jecxz
xor
push
cmpsb
xor
out
push
mov
pop
mov
sbb
mov
or
xchg
jge
outsb
lods
adc
sub
sbb
rcrl
stos
jp
cmp
repnz
pushf
int3
jns
lcall
push
push
mov
mov
imul
jne
ss
push
pop
mov
pop
adc
mov
mov
ss
pop
mov
ss
jno
in
ja
xlat
mov
jge
jl
mov
adc
push
leave
mov
mov
sub
adc
test
mov
fstl
push
mov
adc
cmp
repnz
cmp
aas
xor
movsb
fstps
daa
push
addr16
test
in
push
aad
sub
dec
repnz
mov
in
dec
lods
sbb
pop
ljmp
push
pop
mov
sub
out
and
pop
sbb
mov
scas
or
imul
out
pop
jecxz
lret
cmp
repnz
lcall
clc
rcrb
push
mov
mov
inc
loope
or
mov
fstl
je
aam
call
sub
adc
lds
imul
std
lods
aaa
jg
adc
cmp
adc
xchg
call
cmp
out
int
sub
xchg
fidivl
icebp
adc
pop
insb
mov
addr16
repnz
sub
mov
xchg
bsr
enter
fildl
pop
mov
mov
push
mov
push
jae
push
mov
sbb
imul
jmp
fidivrs
xchg
cs
repnz
jns
push
mov
in
push
mov
imul
push
dec
mov
sub
or
push
add
mov
inc
imul
xchg
mov
jnp
pop
ljmp
cli
jno
xchg
push
push
dec
xor
mov
sbb
cli
std
pop
adc
dec
mov
stos
pop
out
cmp
push
sbb
inc
fimull
xlat
lods
ja
out
int
aaa
jo
mov
repnz
jmp
jle
lret
jno
in
cmp
repnz
jns
sbb
pop
out
sbb
jns
mov
inc
in
dec
or
sub
in
push
imul
gs
into
xchg
push
jbe
sub
popa
inc
adc
adc
loop
sub
mov
pop
ret
xor
jne
scas
mov
mov
cmp
icebp
into
xchg
pop
incl
movsb
mov
adc
stc
imul
push
test
mulb
xchg
xor
or
mov
dec
push
pop
mov
jne
shll
mov
push
mov
mov
scas
cmpsl
sub
add
add
or
add
lcall
mov
cmc
jge
sbb
or
ss
fcompl
push
adc
push
movsl
pop
cltd
cmp
jae
cmpsl
jge
or
stc
lret
adc
movsb
push
lea
inc
inc
xchg
mov
or
push
fwait
jle
das
test
stos
shlb
out
fwait
cmpsb
imul
iret
mov
sub
xchg
scas
mov
lret
je
jmp
push
mov
mov
mov
inc
test
jecxz
sbb
or
insl
adc
or
insl
mov
rolb
insl
cmp
test
insl
mov
sarb
xchg
mov
push
test
inc
inc
adc
jne
push
lret
xchg
sahf
stos
mov
push
fldt
lds
sbb
xchg
xchg
xchg
inc
sti
test
lcall
or
popa
mov
mov
xchg
mov
mov
insl
cmpsb
pop
lods
inc
imul
mov
and
sub
cmc
stos
mov
lret
jbe
push
push
pop
mov
ja
cmpsb
cmpsb
aad
xchg
fldenv
push
inc
cmpsb
ficoml
pop
pop
jae
push
or
into
jecxz
test
popf
int
adc
shl
out
jp
jg
jge
enter
into
fwait
xor
out
xchg
gs
negb
aam
jl
call
push
adc
pop
inc
repz
stos
ficomps
ss
sbb
addr16
fwait
loop
sub
int3
add
inc
int
dec
les
cmp
mov
lret
fdivl
adc
aad
mov
imul
popf
lret
push
int
addr16
push
push
mov
loop
cmp
sub
push
mov
int
lods
aaa
push
sbb
mov
imul
dec
jo
xor
push
jae
or
push
adc
fsubp
lret
div
inc
fldt
lods
xchg
repnz
sbb
jae
subb
push
pushf
xorb
or
mov
xor
fiaddl
idiv
cld
sub
jecxz
xor
cld
rorb
stos
sub
imul
mov
jl
xchg
mov
xor
mov
cmp
sub
xchg
jg
enter
mov
sbb
cmp
inc
lods
mov
push
inc
jbe
insb
jmp
dec
jbe
pop
dec
popf
push
aaa
push
clc
push
fidivrl
dec
aad
jbe
sarl
dec
inc
imul
dec
jbe
xlat
fs
lret
push
inc
jbe
cli
iret
or
scas
add
inc
rorl
insl
adc
jmp
loopne
add
fcom
cmpsl
inc
adc
jb
xchg
hlt
aad
decl
mov
push
shl
pop
jns
out
xor
cld
cmp
cmp
std
push
iret
mov
adc
out
aaa
pushf
iret
jns
mov
inc
scas
mov
sub
xchg
test
insl
sbb
aas
pop
pushf
iret
jns
mov
div
ds
sarl
jne
sarl
mov
aam
pop
mov
cmp
jns
imul
mov
or
test
jmp
push
in
test
mov
and
jae
loopne
shrl
shr
fnsave
cs
test
gs
inc
int
push
mov
pop
gs
scas
loop
dec
sti
insb
push
int
lret
or
or
xchg
imul
mov
pop
mov
leave
push
aas
in
push
xchg
mov
clc
in
dec
add
std
xor
add
jmp
adc
fidivrl
jge
test
jmp
mov
shlb
imul
adc
and
cli
cmp
rcl
int
push
xor
push
jmp
sti
lods
jge
adcl
rcll
ret
inc
lea
xchg
xor
out
add
mov
add
or
fs
das
sub
cmp
cmp
je
jbe
adc
enter
and
test
or
insb
aaa
lahf
fidivrs
fxch
xchg
cs
ljmp
cmp
jns
dec
sbb
sbb
mov
jmp
mov
out
dec
test
mov
jge
rorb
adc
mov
mov
cmp
dec
fisubrl
cs
lcall
enter
lds
pop
jno
in
mov
mov
cmpsl
add
xchg
mov
lahf
and
daa
jg
pushf
and
mov
rcrl
dec
fimull
and
adc
call
jle
movsb
mov
jbe
pop
stos
sbb
pusha
jg
and
cmc
outsb
pushf
stos
pop
ja
sbb
std
insl
and
lcall
pop
sub
and
ljmp
ss
inc
or
or
lret
bound
dec
mov
pop
ss
stos
sbb
sbb
and
mov
xor
je
xor
in
ljmp
pop
xchg
jg
sbb
and
cmpsb
push
shr
popf
test
nop
jl
rcrb
mov
sbb
test
fisttpl
dec
add
fwait
cmp
mov
pop
xchg
out
mov
movsl
add
push
jbe
scas
movsb
push
into
test
out
sub
or
insl
xchg
std
mov
imul
dec
jecxz
jmp
jle
fxch
xchg
fnstcw
js
aas
insb
jne
mov
stos
add
sub
fwait
cltd
push
xchg
test
cmp
sbb
loopne
or
scas
sti
pop
adc
hlt
sti
mov
stos
cmp
repnz
fcompl
push
test
jecxz
xor
cld
cs
adc
mull
inc
loop
push
sti
push
jmp
addr16
out
lret
shlb
cmpsb
dec
mov
jge
repnz
xor
sti
cmpsb
repnz
xlat
cmp
outsl
lahf
jg
cmp
repnz
aam
push
mov
mov
xchg
jl
jecxz
aas
inc
loop
push
test
jecxz
xor
sub
jmp
add
fnstenv
dec
ffreep
pop
and
sub
sarb
out
rol
xchg
sub
jecxz
jno,pt
in
xchg
dec
add
out
lahf
pop
out
jno
in
mov
sub
scas
cmp
out
rolb
out
inc
out
jmp
push
lcall
sarl
fdiv
test
popf
arpl
test
sub
shll
in
mov
aam
xchg
jge
mov
mov
leave
cmc
vandps
cmpsl
fwait
arpl
sti
push
push
into
xchg
sub
repz
cs
repnz
aam
push
mulb
imul
pop
sahf
xchg
ljmp
aam
aam
adc
sub
mov
cli
mov
mov
aad
jno
jmp
jecxz
or
mov
jge
ret
mov
xchg
ljmp
insl
add
adc
cmp
icebp
fadd
xchg
outsl
xchg
push
out
xchg
dec
out
dec
stos
das
ret
outsl
mov
pop
fucom
repnz
cmc
jecxz
jns
in
jmp
sub
ret
push
push
icebp
or
lods
sti
dec
jp
dec
ljmp
mov
xor
pushf
mov
cld
cs
sbb
sbb
int
push
adc
repnz
add
jns
loop
out
ss
xlat
in
popf
mov
test
popf
faddl
in
add
pop
push
cmp
mov
in
pop
pop
mov
lock
out
xorb
loope
aad
fiadds
icebp
fucom
cli
cli
bnd
ds
hlt
xchg
lock
ljmp
daa
push
add
cli
cmpsb
mov
sbb
stos
loopnew
push
sahf
jge
test
adc
sub
insl
movsb
jne
mov
stos
and
inc
xchg
shll
mov
std
jle
lock
loope
pop
jecxz
mov
add
cmp
stos
stc
mov
rcl
faddp
mov
in
repz
test
sbbl
into
mov
or
and
xor
icebp
adc
iret
jo
mov
jmp
xchg
inc
jg
stos
jg
je
jmp
call
mov
mov
xchg
loope
cld
lods
stos
xchg
xor
sahf
stc
pop
jo
ss
or
fs
jecxz
cltd
add
add
outsl
cmp
jno
or
push
or
lret
pushf
imul
sbb
popf
cld
sbb
shll
mov
push
mov
punpcklbw
and
dec
scas
arpl
dec
stos
pop
popf
negb
push
popf
nop
int
xchg
push
inc
aas
div
iret
mov
adc
stc
lock
lea
ja
mov
mov
sbb
jae
adc
or
cmp
rcll
testb
int
lret
popa
in
and
sbb
dec
lds
add
shll
stc
inc
jmp
and
nop
enter
sbb
xchg
dec
test
test
add
add
shlb
test
ja
xchg
shl
loope
mov
fcoml
cmp
xchg
std
shrb
fistl
into
nop
adc
repnz
movsb
out
repnz
movsb
out
testl
stos
cmp
repnz
xchg
arpl
or
enter
inc
add
rorb
cs
enter
jb
xor
add
filds
dec
inc
add
sub
sbb
out
test
movsb
or
fstp
sub
out
daa
add
in
xlat
fsubs
mov
test
loop
dec
push
enter
xor
xlat
lret
mov
pop
or
iret
jp
cld
push
out
loop
dec
xor
das
jmp
ror
inc
and
and
pop
adc
shrb
mov
icebp
add
mov
and
lret
mov
and
fildl
fildll
out
cmp
add
lret
sub
mov
add
nop
andl
cmp
pop
jl
adc
ret
or
or
pop
orb
jae
inc
adc
loopne
mov
dec
pop
dec
ret
mov
aam
lcall
xchg
adc
mov
mov
inc
mov
xor
cmp
push
mov
sbb
movsl
cmp
mov
mov
cmp
popf
or
stc
jg
cmpsl
jg
xchg
outsb
sbb
jb
out
add
call
and
xlat
outsb
jmp
or
add
push
jg
jl
or
mov
add
add
daa
pop
nop
loope
jo
sbb
and
jo
mov
and
data16
dec
adc
inc
adc
add
push
adc
call
jle
push
bound
jb
push
lods
jg
idivb
pushf
lea
mov
dec
fidivrl
or
adc
push
in
push
pop
sahf
dec
cmp
or
iret
cmpsl
pop
je
mov
popw
mov
push
and
leave
arpl
mov
lret
jg
rcrb
gs
repnz
push
loopne
lock
aas
es
daa
pop
xchg
push
mov
arpl
mov
lret
movsl
cmpsl
pop
aaa
dec
pop
mov
inc
mov
and
cld
mov
xchg
mov
mov
fs
add
and
inc
std
pop
jle
xchg
scas
mov
rep
out
jg
add
xchg
and
mov
sub
sub
shll
inc
fbld
fildll
xlat
addr16
jmp
push
arpl
mov
stos
push
mov
cmpsb
jns
cmp
mov
fcom
popf
jbe
push
xchg
mov
fs
inc
aad
inc
sub
dec
mov
sub
andb
cmpsb
jl
pop
pushf
orl
add
lods
xchg
jg
jmp
movsl
mov
dec
mov
add
iret
mov
jae
loopne
nop
inc
popf
je
outsb
jl
iret
jmp
movsl
add
jno
mov
iret
roll
repz
mov
popf
je
lock
lods
aas
mov
outsl
cmp
shll
push
fcmovnb
dec
or
cs
mov
mov
dec
adc
es
ficomps
jg
add
adc
mov
notl
mov
cmp
xchg
mov
add
lret
popf
je
fildll
int
push
xchg
xor
fdivrs
outsb
dec
into
inc
push
movsl
pop
or
out
cwtl
ljmp
mov
rolb
test
cmpsl
mov
out
mov
mov
imul
inc
add
pop
dec
das
popf
pop
xchg
pop
jno
popf
pop
sbb
push
push
ret
pop
sub
sbb
pop
inc
hlt
push
xlat
cmp
notl
mov
sub
push
xchg
cmp
pop
sub
cmpb
out
pop
add
ljmp
add
aad
inc
jne
push
mov
repnz
imul
mov
cwtl
data16
cmp
ret
lcall
add
add
jne
push
push
pop
jmp
je
aas
add
sub
sbb
or
ljmp
and
or
into
rol
scas
push
lods
pop
mov
int
lret
loopne
fisttpll
movsl
pop
dec
popa
mov
cltd
adc
das
adc
inc
and
pop
inc
gs
xlat
xchg
sti
dec
xchg
inc
pop
cmp
fstpl
mov
lods
nop
mov
stos
das
add
sbb
jne
add
dec
jg
idivb
adc
stc
ret
sti
jae
in
in
cli
mov
in
popf
notb
js
stos
fsubrs
fisttpl
sti
cmp
ljmp
mov
stos
sbb
push
pop
rcr
call
jge
lret
and
cli
inc
mov
cld
lahf
cmpl
lahf
aam
xchg
adc
orl
or
or
adc
sar
into
inc
roll
roll
cmp
dec
scas
lret
jo
jo
and
popa
or
gs
jb
imul
inc
xchg
neg
stos
insb
pop
add
rolb
add
outsl
or
test
cmp
xor
insb
gs
ja
mov
and
mov
nop
or
cs
push
sbb
int3
gs
cltd
adc
and
enter
and
insl
mov
lods
je
adc
sbb
hlt
and
mov
dec
das
push
movsb
outsb
pop
jb
adc
and
mov
addb
adc
pop
sub
xor
mov
cmpsb
push
outsl
xor
or
sub
push
adc
cmp
jle
aad
pop
xor
xor
add
xor
inc
push
and
lret
and
gs
xor
or
xor
cmc
outsl
dec
loop
cmpsb
pushf
jo
mov
inc
in
add
jns
loop
mov
xor
mov
in
cltd
cmp
sub
sbb
inc
add
outsl
scas
out
pusha
test
add
pop
or
jle
xchg
scas
push
adc
jo
and
xchg
pushf
mov
jb
into
push
push
xchg
jb
push
mov
dec
push
push
cmp
mov
and
xchg
xsha1
cmpsb
dec
sub
push
xor
sub
stc
dec
dec
rorb
movsb
sahf
test
movsb
push
loopne
cltd
xor
cmpsb
mov
sbb
sbb
fwait
fs
out
cmpsb
push
dec
sbb
xor
dec
mov
bound
enter
adc
add
ss
arpl
imul
stos
mov
pop
sub
jns
lcall
adc
or
int3
and
push
insb
insb
imul
xchg
xor
push
test
lcall
inc
xor
jb
xchg
jg
add
dec
xchg
dec
bnd
call
and
jne
repnz
dec
xchg
mov
sub
sub
ret
gs
push
leave
jbe
push
jne
cwtl
add
stos
test
and
bound
sub
nop
popa
xchg
or
mov
pop
xchg
mov
mov
or
sub
inc
rol
inc
fildll
inc
pop
and
arpl
js
sub
xchg
push
dec
sbb
dec
push
imul
and
and
xchg
je
sbb
mov
cmpsl
cmp
and
lods
cmp
insl
movsl
dec
out
add
and
fnstenv
push
lds
ds
sbb
inc
sub
test
adc
jp
ds
lret
jb
scas
insb
ja
inc
cmp
popf
push
ss
in
sahf
jbe
adc
inc
lods
ficompl
lret
mov
xchg
jle
and
push
jg
jae
cmp
inc
push
dec
push
xor
mov
jne
or
push
mov
outsl
xchg
subb
inc
dec
mov
jp
push
push
add
push
int
mov
inc
pushf
mov
sbb
sub
pushf
push
dec
imul
add
outsb
add
add
pop
or
outsb
push
adc
jo
mov
notb
xor
popa
push
cwtl
push
sub
pusha
dec
lcallw
aam
jp
insl
xor
sbb
sbb
adc
hlt
in
jge
xor
cmp
dec
fucomi
cmc
dec
sbb
or
ds
inc
dec
adc
xor
pop
xchg
call
mov
push
cmp
pusha
in
mov
jg
shrl
pop
or
imul
dec
dec
call
cli
pop
mov
and
cmpsl
and
jbe
mov
movsb
fsub
fs
js
push
lods
and
push
dec
sub
jp
aaa
jo
je
mov
mov
pop
sub
bnd
sbb
arpl
jbe
orl
add
ret
sbb
adc
cld
fistl
cli
cmp
sub
imul
xor
inc
cltd
test
rcll
or
sub
cmpsb
aam
insb
sbb
cmpsb
ror
adc
xchg
sbb
mov
or
jo
sbb
cmp
pop
jl
dec
xchg
push
mov
adc
sub
int3
pop
sbb
adc
xor
mov
push
fs
jns
jp
inc
xchg
push
jle
hlt
inc
outsb
daa
push
fimull
outsl
lds
mov
out
dec
je
scas
sub
out
xchg
arpl
xchg
add
jnp
sbb
sbb
bound
and
push
pushf
xor
jns
mov
movsl
mov
insb
call
mov
sbb
stos
push
pop
popf
orb
sbb
xchg
jo
dec
ljmp
adc
push
mov
loop
mov
and
arpl
push
lock
cmp
xor
inc
test
pop
adc
add
adc
stc
fs
jbe
test
or
je
or
adc
push
mov
es
add
inc
jae
pop
dec
jbe
adc
outsb
cmp
repnz
dec
pop
cmp
sub
lret
pop
insb
je
lds
inc
lret
add
adc
or
dec
sub
sub
clc
call
cs
outsb
xchg
sub
ja
lret
call
pop
sbb
stos
add
jb
dec
stos
pop
inc
repnz
cmp
stos
insb
pop
adc
pop
push
hlt
jecxz
shlb
clc
adc
push
and
int
push
dec
add
pop
int
and
sbb
dec
sub
imulb
jle
into
and
jb
in
addr16
pop
mov
lcall
arpl
dec
xlat
xor
addr16
sbb
inc
sbb
sbb
xor
fdivs
mov
inc
shl
sbb
sbb
adc
sbb
leave
sub
rcrb
lret
arpl
jl
xor
mov
scas
mov
sahf
hlt
iret
xchg
sbb
dec
cmp
popa
xchg
mov
cmp
sub
inc
pushf
jbe
scas
dec
and
fadds
mov
jae
mov
cmp
cltd
sub
push
xchg
inc
loop
and
add
mov
fdivr
and
xchg
and
enter
sahf
adc
dec
mov
sbb
dec
je
pop
dec
arpl
ljmp
int
scas
mov
popf
cltd
sbb
nop
cmp
leave
sbb
std
cmp
jmp
out
or
out
pushf
pop
adc
fcoml
nop
fmuls
nop
dec
mov
rcl
into
repnz
push
test
and
cmp
push
lods
and
adc
lea
shl
dec
xor
sub
loopne
mov
mov
push
lret
and
mov
les
inc
scas
jb
sub
and
int
xchg
sbb
dec
push
dec
fdivrs
pop
lret
cmpsb
xchg
fs
cmp
xchg
and
imul
cmp
call
inc
adc
inc
fs
pushf
in
aam
inc
pop
sbb
fs
sub
dec
xchg
sbb
mov
cmp
lods
stc
test
mov
inc
add
jo
in
mov
fdiv
push
mov
movsb
nop
shrb
lcall
daa
dec
xor
jp
mov
inc
xor
jae
dec
insb
fwait
xchg
mov
and
ss
bound
lcall
nop
sbb
push
pushf
hlt
push
pop
and
pop
adc
push
mov
jmp
pop
sbb
clc
into
mov
aam
push
mov
adc
and
adc
pop
xor
cmpb
stos
mov
jb
in
mov
gs
jns
imul
adc
pop
jmp
insl
dec
and
cmp
insb
mov
rorb
aam
adc
cmpsb
xor
insb
xchg
mov
sbb
push
outsb
sub
mov
or
and
dec
mov
inc
daa
cmp
push
pop
daa
mov
stos
jno
jb
neg
xchg
into
aam
mov
mov
adc
ss
sbb
lods
ljmp
cmp
jo
rcrl
sub
or
pop
enter
dec
cmp
cmpsb
xchg
sbb
ss
lods
ret
dec
shll
dec
movsb
fcmovbe
sub
mov
jb
cmp
sub
push
xchg
or
pop
sub
fchs
sub
jecxz
leave
sbb
test
lret
xor
dec
or
pop
mov
adc
cli
cs
sub
fcoml
hlt
sahf
xor
int3
pop
sbb
ret
test
dec
mov
xor
or
adc
das
hlt
inc
xor
jle
fs
push
lret
sbb
rcrb
adc
roll
movsl
mov
test
nop
pop
movsl
xchg
enter
inc
addb
dec
arpl
movsl
mov
inc
scas
or
arpl
leave
je
xor
sub
adc
pop
dec
xor
push
xchg
fs
lret
and
dec
pushf
inc
jb
stc
pop
roll
in
xor
popf
mov
pop
and
in
cmp
sub
xor
and
xchg
test
mov
stc
gs
push
int3
aam
sub
adc
test
mov
xchg
int3
jp
add
mov
and
bound
pop
movsl
dec
arpl
adc
jbe
mov
dec
inc
aam
adc
repnz
dec
test
loope
sub
adc
cmpsb
inc
adc
shrb
out
pop
jb
push
lcall
or
pop
cmpsb
inc
push
jae
sub
dec
xchg
outsb
adc
or
or
movsb
push
movsb
sub
dec
je
or
insb
xchg
inc
cmp
xchg
adc
dec
or
and
out
adc
dec
imul
xor
repnz
stos
sbb
sub
add
or
xor
and
mov
repnz
mov
pop
negl
jle
or
shlb
sub
leave
clc
sub
insb
fiaddl
inc
je
aam
adc
xchg
jae
es
sbb
push
test
mov
aaa
mov
sbb
adc
insw
sbb
gs
xchg
insl
dec
xchg
adc
js
adc
lock
mov
push
mov
xchg
sti
push
sarl
scas
cmp
push
and
push
movsl
pushf
loop
cmp
daa
mov
mov
jne
cli
mov
cs
xchg
bound
lcall
sub
sub
scas
in
push
jp
in
lea
movsb
jle
add
fisubs
cli
out
adc
mov
clc
loopne
je
jb
leave
insl
inc
ficoml
data16
dec
out
push
sbb
lods
shlb
aam
jae
xor
add
push
insb
sub
dec
push
sub
popf
aas
stos
add
xor
sub
xchg
xchg
inc
mov
pop
pop
inc
leave
jae
or
sti
pop
xchg
pop
cmp
sar
mov
push
mov
outsl
sub
sub
xor
xchg
shrb
lcall
mov
scas
je
dec
push
mov
mov
popf
or
test
data16
inc
dec
loop
aad
dec
rcrb
test
loopne
cmpsb
push
dec
sub
hlt
imul
mov
or
cli
cmp
dec
adc
xor
add
fcompl
int3
mov
push
and
adc
repnz
cli
and
sub
addr16
inc
ljmp
sbb
mov
fs
stc
divb
xor
scas
inc
push
xor
xor
mov
xchg
mov
mov
cmpsb
shrb
adc
stos
adc
dec
inc
cmpb
test
push
loop
adc
or
lods
and
je
sub
mov
adc
adc
jl
sub
inc
jl
xor
mov
push
leave
test
fs
mov
inc
orb
push
rorl
ds
ss
xchg
add
mov
in
jbe
push
jmp
das
inc
sarl
inc
push
mov
jne
dec
cltd
sbb
xor
fs
push
sahf
push
hlt
mov
push
push
dec
gs
je
enter
out
inc
test
jle
data16
das
inc
mov
ret
push
loopne
xchg
xor
push
mov
push
inc
cs
fcoml
xchg
or
or
sub
xchg
popf
jp
js
test
popa
insb
sub
test
mov
test
in
and
outsl
out
xchg
or
faddl
lret
or
lret
sub
jl
push
mov
std
daa
inc
sub
subb
xor
add
cmp
xorb
repz
add
pop
fwait
cmp
sbb
pusha
or
jp
jb
jb
call
xchg
adc
outsb
out
and
push
sbb
adc
mov
lock
jns
je
inc
test
adcl
pusha
or
jbe
lock
mov
jns
gs
adc
push
rolb
inc
inc
outsl
insl
dec
bound
jno
push
outsb
jae
ret
adcl
imul
mov
imul
inc
arpl
jbe
pop
stos
xor
mov
popa
or
adc
push
jns
adc
lods
je
fcoms
mov
push
adc
adc
popl
out
push
xor
mov
imul
and
mov
pop
es
popa
cmpsb
lds
push
fst
lcall
push
in
arpl
testb
jb
test
sbb
sti
xlat
pop
xchg
addr16
dec
sbb
push
and
in
mov
mov
xchg
out
push
inc
stc
insb
fadds
xchg
inc
sub
mov
xchg
insl
adc
divl
dec
mov
jns
insl
cmp
hlt
xor
mov
mov
std
push
test
push
jo
outsl
dec
sub
push
inc
jb
xchg
push
inc
mov
mov
xchg
sub
bound
mov
dec
pop
sub
jnp
xchg
jb
jbe
push
cltd
jne
xchg
lods
mov
insl
addr16
fs
cmp
pop
shlb
jle
ja
add
push
xchg
rcr
jo
dec
jne
aam
imul
fisubrs
cmp
xor
loope
and
and
push
or
mov
into
inc
cmpsl
cmp
adc
fisttpll
into
add
inc
insb
bound
jl
lods
push
adc
and
adc
push
jae
push
lock
insb
xchg
sbb
addr16
jne
inc
leave
les
sti
cs
rcl
push
rorb
sbb
dec
popa
fstpt
dec
sahf
cmp
outsl
xchg
cmp
or
fs
push
sbb
inc
xor
shll
shld
mov
and
ja
inc
xor
daa
inc
push
cs
or
out
dec
jp
push
arpl
dec
ficoms
and
xor
push
dec
dec
or
push
inc
dec
push
xor
inc
xchg
inc
imul
mov
arpl
and
sbb
xor
and
cwtl
mov
inc
inc
inc
adc
and
fwait
dec
mov
mov
popl
stc
js
jnp
imul
adc
pop
and
and
int
shrl
jns
xor
sub
cwtl
insl
dec
dec
mov
repz
imul
test
jno
pop
push
push
inc
xor
push
les
push
jg
movl
ss
ja
mov
dec
push
arpl
imul
push
adc
mov
jae
shlb
or
iret
cmp
nop
clc
std
cmc
push
adc
add
icebp
sub
add
outsb
pop
or
inc
add
or
nop
fs
push
clc
pop
push
inc
inc
sbb
xor
rcrb
inc
push
push
adc
push
or
mov
or
in
push
sbb
add
or
gs
xchg
sub
mov
dec
xchg
cmp
pushf
or
push
pushl
xchg
or
push
outsl
jae
xor
mov
iret
jle
inc
in
mov
add
or
mov
inc
int3
push
jmp
out
scas
or
push
sbbl
push
xor
xor
add
xor
push
lods
sub
mov
and
inc
les
inc
movsb
or
pop
xchg
testb
sbb
ret
inc
xor
add
jl
dec
enter
push
pop
push
pop
push
or
xchg
cmp
out
fimull
cmp
test
or
in
pop
add
or
outsb
mov
jnp
pop
push
pushf
cmp
or
cmpl
xchg
mov
shl
dec
dec
mov
jmp
push
mov
sti
push
push
data16
jp
fs
sbb
cmp
push
mov
mov
adc
xor
or
push
jecxz
mov
std
subb
cltd
push
jbe
sub
das
sub
addr16
arpl
jne
ljmp
xchg
addr16
repnz
pop
test
xor
xchg
cmp
imul
or
push
gs
rcrb
push
or
add
mov
xchg
fstl
or
daa
pop
iret
sahf
test
divb
and
adc
push
adc
xchg
and
add
jl
adc
jl
arpl
cltd
sti
or
add
dec
cmp
push
mov
cmp
sbb
jge
loop
js
lcall
sub
ficompl
push
cmc
add
push
add
lods
imul
or
push
add
adc
push
push
push
xchg
insb
popa
leave
adc
ljmp
cmp
fisttpll
out
orb
insb
imul
les
jle
out
dec
cmp
jg
add
jg
mov
inc
inc
inc
inc
push
dec
pop
push
jle
and
lret
dec
push
and
aas
lcall
out
stc
cmp
jbe
xor
cmp
movups
mov
jmp
add
orl
add
decl
push
jb
xchg
imul
in
xor
pop
leave
dec
xchg
mov
xchg
jmp
sub
or
or
add
pop
pop
movsb
mov
jae
addr16
cmp
ja
pop
adc
es
and
add
mov
push
fs
inc
sbb
pop
sbb
dec
jno
int
push
mov
adc
movsb
mov
int3
pop
adc
xchg
in
ret
push
imul
or
daa
mov
mov
mov
sbb
ficoml
sti
sbb
ficoml
dec
pop
or
in
sub
pop
add
jae
popf
pusha
jo
test
adc
or
inc
xchg
int
in
xchg
or
scas
pop
xchg
mov
pop
add
ffreep
inc
jne
arpl
or
andb
and
insl
dec
fwait
inc
imul
loopne
or
or
cs
shll
add
sub
jnp
mov
cs
xchg
leave
bound
or
pop
push
rcll
and
add
add
mov
push
in
imul
pop
push
or
and
je
add
test
jbe
orl
test
cmpsb
jno
or
gs
test
arpl
or
dec
xorb
rcrl
and
add
lcall
cmpsb
add
scas
cs
les
test
ja
push
int3
add
mov
in
and
pop
inc
sarl
push
inc
mov
frstor
cmp
or
cs
out
fimull
fcompl
and
adc
and
push
xchg
push
gs
inc
pop
sbb
fld
jecxz
mov
jg
mov
inc
lea
lea
push
inc
outsb
mov
push
in
xor
das
or
push
add
mov
pop
or
dec
test
lgs
imul
popa
push
imul
push
orl
or
ret
adc
fdivrl
mov
pop
cltd
sub
dec
or
loop
test
push
adc
std
je
jge
xor
pop
inc
add
dec
sub
sbbb
lcall
enter
xor
out
mov
sub
or
dec
or
das
mov
xchg
popa
push
adc
pop
jns
out
jg
add
and
pop
test
jecxz
xchg
pop
test
push
jnp
repnz
cmp
push
shl
jl
leave
push
mov
lock
leave
dec
jle
imul
inc
adc
push
add
jne
or
jns
jo
xlat
jg
ss
sub
sbb
mov
aam
fmul
sbb
add
adc
push
loopne
pop
adc
jg
mov
pop
mov
imul
subl
push
dec
into
jne
insl
dec
add
xor
out
or
sub
fidivrs
push
sbb
into
xchg
cs
add
int3
mov
sub
xchg
and
xor
sub
lcall
es
adcl
push
movsl
adc
add
add
adc
xor
mov
call
or
movsb
out
sbb
inc
or
adc
xor
xor
inc
pop
lea
sbb
cmp
sbb
or
push
sub
rcrb
xor
add
cmp
sbb
pusha
insl
push
pusha
add
out
mov
or
fistpl
adc
lods
xor
aam
sbb
std
adc
xchg
sbb
out
sbbl
arpl
inc
lock
mov
sbb
ret
mov
and
ror
nop
push
adc
subb
or
add
mov
push
fistl
add
sub
mov
xor
cmp
add
mov
dec
sbb
rolb
adc
mov
jbe
sbb
sbb
addr16
jl
aaa
jp
popa
adc
mov
adc
pop
add
in
fstp
inc
push
fwait
jae
sti
push
pop
es
sbb
cmp
push
scas
xchg
mov
push
fwait
jb
mov
arpl
jl
add
ss
cs
xor
shlb
cmpsl
xchg
dec
dec
fsubs
pusha
mov
aad
pop
arpl
test
inc
jl
cmp
xchg
loopne
cmp
or
sbb
outsl
xchg
sbbb
fldl
std
push
ds
test
add
and
pop
cmp
jecxz
push
push
aas
or
mov
push
inc
xor
fisttpl
pop
push
incb
cmp
mov
nop
jae
mov
lock
or
pop
push
push
lods
sbb
fdivrs
push
xchg
adc
push
pop
add
fidivrl
or
lock
adc
movsl
mov
xorb
es
dec
push
add
inc
push
dec
push
push
jnp
pinsrw
stc
ja
cmp
test
push
imul
adc
test
shll
bound
pop
and
fcomps
nop
pushf
sbb
push
xor
enter
imul
rolb
add
loope
pusha
movsl
mov
or
xchg
ss
dec
loopne
popf
nop
sbb
gs
xchg
mov
inc
cmp
mov
lret
jge
add
xor
js
and
mov
xor
xchg
pop
enter
add
xchg
add
xor
insb
je
loope
mov
sub
jb
dec
adc
mov
bound
inc
test
mov
or
pop
or
scas
ja
ss
dec
leave
imul
jg
push
xchg
loop
xor
mov
je
push
jge
fsubrl
mov
pushf
sub
call
mov
xchg
cmp
dec
sbb
push
cmp
out
jp
fimuls
xchg
lea
out
sub
les
lds
mov
adc
cltd
jae
inc
mov
inc
push
jbe
dec
xchg
add
push
bound
loope
inc
jecxz
shll
adc
test
mov
sub
sbb
cwtl
push
xor
repz
sbb
rcl
in
cmp
fisubrs
push
int
daa
pop
aad
mov
pop
jae
cli
xchg
or
jmp
and
outsl
sahf
mov
js
jecxz
xchg
xor
inc
push
dec
mov
mov
mov
sub
sbb
dec
mov
arpl
adcl
mov
rolb
or
adc
mov
addb
lahf
xchg
loopne
or
lea
shlb
xchg
add
addr16
jb
inc
inc
adc
and
icebp
insl
pop
mov
pop
or
adc
add
jns
sti
in
test
mov
sahf
sub
sub
cmpb
and
pop
outsl
or
into
xor
xor
and
push
dec
sub
andps
sbb
xor
int
popa
in
push
dec
test
addr16
movsb
push
pushf
sub
int3
jp
lret
loopne
push
fiaddl
add
lret
stos
inc
test
jno
mov
pop
push
mov
mov
cltd
pop
mov
push
out
imul
or
mov
push
dec
push
or
inc
xor
dec
jnp
sbb
enter
push
mov
mov
xor
adc
inc
inc
orl
jl
jns
sbb
test
dec
push
scas
mov
ljmp
xchg
outsl
inc
rcr
or
pushf
imul
push
mov
push
leave
or
mov
ss
sub
les
mov
scas
aam
dec
jmp
cmpsl
mov
daa
adc
add
ds
fmul
dec
fs
and
bound
rorb
mov
sub
inc
ret
stc
sti
das
inc
and
inc
pop
push
push
inc
push
dec
sub
mov
mov
dec
adc
and
rcrb
add
push
xor
dec
or
scas
mov
cmpsb
adc
xor
mov
or
cmp
cs
cmp
xlat
cmp
pop
sbbl
jb
xor
inc
arpl
push
and
bound
pop
add
pop
faddl
push
or
arpl
sbb
push
sahf
jnp
jmp
pop
or
pop
aaa
bound
popl
xchg
sti
jl
jle
push
idivb
gs
adc
push
bound
aaa
xlat
dec
stos
lret
pop
inc
lds
nop
xchg
add
test
bound
pop
add
push
test
xchg
repnz
or
sahf
arpl
hlt
movsl
loope
shr
adc
sub
repnz
jg
or
inc
and
cmpsb
test
lea
cli
and
or
push
mov
dec
nop
test
cmp
outsb
inc
push
jg
mov
out
or
dec
pop
jns
add
ss
enter
adc
jl
lahf
in
scas
cwtl
mov
xorl
mov
mov
push
cmp
jbe
jb
dec
adc
ficompl
mov
repnz
pop
nop
adc
pop
or
punpckhbw
adc
rolb
mov
dec
js
stc
ss
lret
push
mov
sti
push
imul
jns
out
jbe
imul
push
aad
imul
add
divl
loop
sub
or
ja
adc
pusha
loopne
dec
pop
add
jnp
push
dec
pop
sbb
test
pop
je
adc
dec
push
test
jns
jg
mov
jns
es
repnz
xor
cmp
pop
xchg
cltd
ljmp
push
pushf
dec
adcl
adc
push
xor
ds
insb
sbb
mov
icebp
imul
jl
jae
mov
cmp
into
outsl
pop
insb
lret
inc
dec
and
ds
push
jnp
ljmp
cmp
push
test
std
xchg
and
xor
inc
popf
xchg
jmp
xor
pusha
enter
or
push
fiadds
hlt
arpl
fnsave
cs
pusha
sbb
lcall
dec
push
movb
cltd
and
jl
adc
cs
add
jae
push
dec
movsl
jno
imul
andb
fimull
or
mov
popa
mov
jb
fdivrl
and
jmp
lret
repz
adc
lret
aam
push
dec
movsl
push
mov
popa
push
jno
push
lret
and
or
aad
jle
add
arpl
into
inc
into
add
jo
bound
dec
lcall
adc
mov
inc
aad
adc
and
sbb
push
mov
add
cmp
outsb
imul
push
and
xchg
inc
enter
add
and
adc
jle
xchg
push
nop
dec
or
cmp
adc
push
rol
push
pop
cmp
jne
cwtl
hlt
pop
or
cmp
jg
push
sbb
imul
mov
ja
push
xchg
jp
sub
cs
xor
or
pop
dec
mov
mov
jbe
pop
jno
out
dec
add
test
lret
or
or
add
dec
shlb
aaa
jmp
cmpsl
xlat
xchg
push
imul
stos
cmp
loopne
or
sub
call
mov
sbb
push
nop
loop
mov
inc
cmp
add
int3
outsb
xchg
test
pop
lods
or
inc
stos
and
sti
adc
xchg
mov
gs
jmp
cmp
or
pop
lock
sub
xchg
mov
sbb
sbb
nop
fs
jb
mov
xchg
or
dec
das
lcall
pop
mov
int3
ret
xchg
fs
or
cmp
dec
adc
lret
sbb
testb
fwait
push
fisubs
and
lahf
cmp
dec
jl
scas
dec
rorl
or
jnp
dec
je
mov
adc
es
shrl
pop
rorb
mov
cli
shlb
sbb
icebp
inc
or
jge
popf
xlat
or
jno
pop
jge
mov
pop
sub
pop
call
in
cmp
imul
stc
rcr
loop
jno
push
inc
or
repz
jns
xchg
jp
push
cmp
nop
xchg
adc
imul
jle
cmp
imul
adc
mov
std
mov
pop
jne
cmpsb
popa
enter
or
add
or
jns
add
lahf
pop
push
outsb
sub
sub
mov
and
adc
fsubrl
loopne
dec
add
sub
int
push
adc
push
dec
push
or
adc
push
push
jno
mov
mov
and
adc
and
mov
test
dec
inc
lea
lret
out
push
push
outsb
sbb
jp
cmp
push
jge
and
mov
jl
add
call
add
mov
pop
push
fmull
leave
push
add
cli
inc
xor
in
enter
nop
ljmp
xchg
das
push
add
cmp
sahf
jo
pop
dec
push
pop
test
cwtl
adc
add
lret
rcrl
mov
mov
and
fwait
sbb
ret
insb
xchg
xchg
inc
arpl
sbb
dec
and
and
outsb
test
dec
mov
adc
push
jge
jle
push
sbb
or
cmp
dec
jle
add
mov
fisttpll
adc
loop
jno
rorl
add
loopne
idiv
add
push
dec
jmp
outsb
adc
pop
sub
movsb
jle
js
daa
jl
push
mov
imul
push
in
adc
rcll
add
pop
stos
push
dec
adc
push
mov
fmull
inc
adc
mov
clc
push
dec
fmull
out
pusha
adc
adc
sub
push
jmp
leave
sub
mov
and
push
cmp
xor
aad
xchg
jle
sub
xchg
fmuls
out
leave
mov
test
push
push
movsl
push
repz
and
in
or
xor
or
adc
lahf
mov
jge
jne
adc
push
adc
push
inc
dec
or
mov
xlat
push
xchg
inc
or
clc
add
inc
sbb
mov
sub
mov
push
pop
es
bnd
adc
stos
mov
fsts
pop
rcrl
dec
cmp
fsubrs
mov
rcrb
test
iret
enter
dec
push
je
mov
jns
inc
aad
iret
cmc
insb
jmp
int
push
xchg
cld
sbb
in
ret
mov
adc
add
mov
or
insl
mov
bnd
push
push
js
add
mov
lret
push
imul
rorb
daa
decl
sbb
je
mov
pop
sub
dec
mov
mov
inc
mov
andl
and
shrb
adc
fs
or
inc
or
and
pop
clc
mov
or
repnz
xchg
jl
xor
decl
mov
pop
and
pop
enter
aad
enter
xlat
loope
add
xor
and
adc
std
in
or
andb
aas
outsb
or
and
addl
enter
das
xchg
push
inc
jle
or
mov
subb
inc
xor
xchg
jl
mov
sahf
or
mov
and
jg
cld
cwtl
mov
or
inc
incl
or
inc
repnz
xchg
jl
in
and
pop
in
call
mov
call
iret
jle
mov
adc
andb
pop
enter
inc
or
dec
jmp
mov
jle
in
arpl
xor
or
and
pop
enter
jns
adcb
sub
xchg
dec
imul
and
rcl
adc
sbb
adcb
mov
cmpb
adcb
mov
call
andb
pop
enter
inc
or
adc
sub
xchg
jl
in
and
adc
add
mov
sbb
push
add
mov
or
in
and
adc
dec
inc
fisttpll
loop
adc
andb
pop
call
xchg
jle
insb
jne
inc
or
add
or
jg
xchg
mov
je
addr16
addr16
mov
icebp
aaa
les
or
aas
mov
mov
or
and
cld
pop
jns
push
sarb
fdivrl
fildl
jo
loope
inc
and
adc
add
lcall
iret
xchg
fsubl
adc
push
xor
dec
and
and
cmp
jns
push
inc
stc
insb
int3
imul
xchg
in
push
dec
cs
hlt
push
add
jmp
test
mov
and
inc
push
sub
adc
cmpsb
sub
adc
cmp
push
in
adc
stos
cmp
xchg
rolb
cmpsb
or
ret
jg
push
lret
popa
and
or
dec
add
add
in
aas
mov
sub
xor
mov
inc
pop
mov
sub
or
pop
jns
xor
push
sti
dec
adc
jns
or
call
movsl
movsb
cmp
lahf
push
std
sbbb
dec
push
scas
dec
lcall
cld
sahf
sbb
sbb
pop
push
div
cmpsl
cmp
or
xor
sub
sbb
push
push
sbb
push
xchg
jnp
aas
inc
pop
mov
mov
push
jge
jmp
gs
jp
push
fnstcw
pcmpeqw
lahf
pop
push
inc
or
scas
sarb
lods
push
add
out
mov
and
sahf
pop
call
adc
scas
xchg
dec
xchg
push
xchg
fwait
xor
mov
notl
insl
or
cmc
lods
lods
pop
pop
or
or
xor
cmp
dec
mov
push
jne
adc
add
nop
jo
in
mov
mov
sbb
xchg
ljmp
in
add
cltd
xor
or
or
or
lods
push
jmp
cmc
imul
rorl
push
shll
sub
mov
xlat
dec
dec
cmc
lret
jae
mov
movsl
pop
sbb
inc
or
ja
repz
jbe
jl
xor
and
adc
jno
or
imul
jb
add
pop
gs
sub
mov
aad
and
mov
mov
dec
stos
and
rolb
nop
or
mov
dec
jae
mov
imul
add
insb
jle
inc
xor
adc
and
or
or
das
add
push
xchg
push
test
jbe
nop
jns
inc
push
stc
dec
pop
in
in
or
mov
or
incl
dec
xor
hlt
mov
sbb
push
jg
push
mov
in
dec
pop
mov
sbb
push
inc
std
fwait
insb
jo
scas
fwait
mov
gs
les
push
mov
ljmp
or
mov
add
test
out
cmp
add
adc
bound
cmpl
dec
jno
test
push
push
rorl
cli
jge
fwait
repnz
jl
sbb
sbb
leave
and
xchg
dec
scas
add
xchg
add
inc
jb
aas
leave
xor
out
mov
pop
inc
sub
movsl
inc
push
js
xor
inc
and
adc
push
cmp
out
xchg
in
lcall
add
push
and
inc
inc
cs
add
cmpsb
sub
lcall
mov
iret
or
add
sub
ss
xchg
inc
jl
jmp
sahf
inc
cmpsl
movsb
mov
aaa
clc
or
scas
jmp
add
gs
fsubrl
fdivrs
and
stos
or
mov
mov
imul
jae
cld
imul
stc
sub
jno
mov
add
pop
movsb
mov
push
xchg
jg
pop
stos
stos
imul
push
pusha
in
jle
pushf
add
mov
faddp
inc
bound
test
and
pushf
and
testb
mov
mov
inc
xor
adcl
adc
lahf
fwait
sub
inc
xor
push
enter
rorl
subb
add
push
pop
inc
cs
add
gs
test
cmp
les
push
or
mov
and
push
sti
dec
mov
ljmp
pop
pusha
and
in
push
add
mov
jne
imul
stos
or
cmp
xchg
jns
pop
xchg
cld
mov
daa
pusha
jge
and
mov
sub
or
or
adc
push
sub
fistps
rcl
push
mov
test
or
push
mulb
lcall
fidivrs
or
mov
enter
por
invlpg
adc
data16
pop
mov
push
cmpsl
push
pop
push
imul
rcrb
add
push
adc
jle
push
lea
popa
jb
ret
mov
fmuls
in
sub
mov
push
nop
lret
popf
icebp
adc
jge
in
mov
push
dec
and
dec
shr
movsl
or
add
xchg
icebp
rol
adc
and
push
push
stc
mov
adc
insl
push
mov
inc
insb
ds
ja
cmpsw
mov
inc
sti
adc
data16
mov
push
or
fistps
icebp
xor
sbb
mov
jle
push
mov
push
or
clc
inc
mov
insl
jnp
outsl
roll
dec
cmp
clc
inc
lock
ljmp
cmp
xlat
stos
imul
lret
or
lret
inc
xor
pop
outsb
xor
lahf
xchg
daa
ret
mov
rclb
push
lret
jno
push
cmpsl
popa
js
mov
dec
cld
adc
bound
addr16
scas
cmp
mov
push
jae
xchg
fcmovne
pop
and
and
dec
jnp
cli
mov
xchg
repz
in
scas
mov
pop
xor
inc
or
insl
xor
xchg
sub
adc
xchg
leave
jge
imul
mov
iret
push
outsb
jl
sub
xor
sbb
add
lret
add
inc
rsqrtps
xor
insb
pop
sbb
pop
inc
pop
adc
sub
outsb
lret
sbb
cmp
sarb
inc
in
adc
push
xchg
inc
in
xor
out
cvtsi2sd
pop
pop
inc
pop
mov
aam
mov
inc
mov
jle
icebp
jp
pop
pop
mov
mov
rcrb
pop
pop
mov
sbb
pop
mov
inc
or
xchg
test
std
loop
sbb
das
pusha
das
inc
fiadds
pop
push
jno
imul
out
and
xor
jnp
dec
shlb
and
jg
cmp
adc
jge
or
dec
test
faddl
pop
inc
cmp
and
aad
movsl
fwait
aam
dec
xlat
nop
or
mov
or
dec
sub
sbb
dec
repz
xlat
mov
sub
dec
push
decb
or
xor
in
pop
cmp
jo
pop
push
loope
stos
das
js
daa
dec
inc
aaa
add
or
pop
adc
and
je
stos
or
shrl
test
adc
pop
imul
add
test
in
arpl
dec
push
xor
or
inc
mov
mov
fwait
jl
add
cmpsl
or
rorl
dec
xor
fildl
fmuls
lcall
gs
pop
push
shrb
mov
adc
stos
fidivl
mov
fisttpll
push
ss
aaa
cwtl
cmp
es
cld
mov
cld
or
xor
fwait
int3
out
xor
add
inc
nop
fisubl
jo
jp
jbe
popf
in
dec
dec
ss
xor
sbb
les
add
add
push
push
inc
cmp
and
xor
or
cmp
add
adc
push
xor
sbb
xchg
cltd
loopne
jmp
or
push
pop
pand
sbb
sub
sti
add
sub
pop
and
adc
jb
jge
in
aaa
push
add
add
push
inc
repz
fsubs
add
add
inc
cmp
cmp
xor
pop
add
add
or
adc
sbb
xor
insl
insl
mov
dec
add
add
or
ss
and
pop
ja
aas
xchg
or
mov
xor
inc
add
sub
add
push
fistpl
cs
pop
nop
mov
sti
push
dec
xchg
inc
cmpsl
lods
jno
rcrb
lock
sbb
jle
test
scas
mov
mov
mov
ror
int3
mov
sarb
mov
and
into
outsb
add
rolb
orl
mov
mov
mov
push
dec
popf
push
inc
push
push
mov
js
inc
stc
xchg
push
add
and
fidivrl
mov
das
leave
popf
cmp
lret
imul
mov
pop
adc
js
inc
mov
rcr
xchg
pop
popf
push
lcall
add
test
out
push
in
into
lret
test
mov
cmc
mov
and
sbb
mov
xchg
adc
cmpsl
sbb
mov
adc
adc
lock
mov
mov
xor
scas
mov
push
lahf
repnz
and
push
in
xchg
xor
push
nop
inc
or
mov
xchg
pop
dec
js
movsl
pop
into
xor
sub
mov
orl
add
push
ljmp
clc
dec
call
sbb
lds
std
iret
cmp
add
popf
xchg
jae
pop
cmp
js
scas
insl
je
cmp
adc
push
mov
pop
xchg
add
decl
sbb
icebp
sbb
repnz
cmpsl
lret
xor
sub
pop
addr16
jp
aaa
sbb
xor
imul
add
and
adc
loope
insb
test
orb
pop
addr16
dec
jbe
icebp
push
das
cltd
sbb
cwtl
hlt
fdivl
shll
movsb
inc
xchg
add
mov
mov
pop
adc
dec
repz
roll
or
dec
fsubrp
ljmp
pop
add
hlt
or
sub
into
sub
ficompl
aam
call
addb
or
xor
lret
ss
xor
jae
mov
push
aam
add
mov
test
rcr
jecxz
jle
add
repz
mov
and
cmp
xchg
faddl
mov
repz
and
cli
inc
hlt
out
sub
adc
mov
icebp
add
add
sbb
fdivrl
dec
mov
add
add
add
or
inc
mov
icebp
add
adc
cmp
mov
mov
add
add
or
adc
and
inc
fcmovbe
cmpl
daa
fucomip
xchg
divb
xchg
arpl
lock
fadds
mov
roll
add
or
adc
dec
xor
xchg
xchg
fdivrl
push
in
push
add
std
add
cmp
add
inc
and
xchg
adc
add
add
mov
jno
add
mov
addr16
pop
pop
mov
mov
lret
add
or
adc
and
inc
in
std
or
xorl
in
pop
xchg
dec
pop
inc
sbb
xchg
enter
and
movsb
pop
mov
and
pop
iret
inc
mov
fdivrl
and
mov
faddl
or
inc
ljmp
inc
mov
sbb
sub
imul
pop
adc
and
dec
fsubrl
jne
das
and
pop
hlt
mov
sbb
stc
mov
test
icebp
xchg
int
mov
jbe
add
sub
xchg
mov
xchg
das
jno
cs
dec
repz
hlt
imul
imul
mov
movsb
fcompl
dec
rcr
lods
push
loopne
mov
jbe
scas
and
inc
xchg
fldenv
and
test
test
and
fsub
testb
fdivrl
cli
repnz
repnz
movsl
or
test
push
jl
in
and
dec
fsubrl
add
dec
and
stos
add
add
or
adc
and
inc
repz
adc
dec
les
arpl
push
out
cs
xchg
push
dec
sub
inc
sbb
das
dec
inc
sub
sub
dec
bswap
sub
and
enter
or
add
jg
test
rcll
popf
call
mov
fcos
icebp
repnz
stos
push
cltd
mov
fldl
and
cli
stc
add
rclb
mov
mov
test
xchg
data16
pop
xor
fisubrs
xchg
stos
rclb
into
dec
xchg
pop
adc
and
mov
rorl
lods
add
dec
loope
xor
ja
push
adc
out
xchg
cmp
dec
mov
in
cmp
pop
mov
push
mov
cli
dec
and
loop
loop
jne
loop
ret
mov
fldl
xchg
icebp
xor
shrb
push
and
and
int3
cmp
lcall
pop
and
xchg
fdivl
stos
enter
in
imul
xchg
mov
and
pop
add
cmpsl
mov
jmp
dec
sub
cmp
sbb
cmp
dec
mov
cmpsb
lret
in
fsub
cld
mov
xlat
and
std
repnz
stc
imul
popf
jge
pop
jo
xchg
jge
mov
daa
sbb
setno
dec
sbb
dec
fdivr
jg
int3
inc
add
sahf
imul
inc
jb
push
aam
in
and
mov
imul
mov
xchg
fdivl
test
lods
scas
add
movb
and
jmp
mov
and
or
add
xchg
cmp
cmp
imul
clc
pop
lcall
addr16
mov
daa
adc
pushf
xchg
ljmp
movsb
fcompl
mov
mov
xlat
add
or
adc
cli
dec
cmp
shrl
loope
clc
xchg
push
dec
xchg
mov
mov
mov
test
mov
jle
jo
imulb
scas
aam
imul
mov
mov
mov
add
and
pop
sub
fsubrl
mov
test
jmp
loopne
jb
sbb
nop
add
enter
in
or
fcompl
imul
loope
lcall
fcompl
int
push
fisubl
icebp
and
out
movsl
dec
and
add
add
or
and
movsb
fcompl
add
sahf
xchg
rcrb
pop
fsts
inc
ljmp
xor
jns
fbstp
jne
lahf
ficoml
enter
shlb
xchg
xchg
movl
movsb
xchg
fmull
dec
test
fimull
or
adc
mov
dec
push
cmp
push
xchg
push
enter
jo
inc
dec
jmp
fs
cld
subl
sub
and
lods
out
xchg
lods
xlat
dec
cmp
dec
int
lea
adc
mov
dec
cmp
xchg
xchg
xchg
fcoml
xchg
decb
scas
fnstenv
pop
push
fidivs
add
roll
lahf
xchg
scas
fxtract
lods
inc
xchg
xchg
std
adc
in
imul
cmc
cmp
pop
popf
in
aas
int
movsb
aaa
jmp
fsubl
lds
dec
int
sub
hlt
stos
pop
fmuls
mov
sub
mov
pop
jle
lret
xchg
cmp
stos
pop
out
lea
lods
cld
fiaddl
and
mov
cli
jecxz
aaa
movsb
cmpsb
cmpsb
adc
inc
cmpsb
loopne
or
popf
stos
and
push
mov
imul
stc
sbb
fcompl
pop
lahf
inc
xor
stos
imul
or
mov
fstpt
jg
cld
mov
mov
sub
mov
dec
addr16
adc
lods
xchg
mov
inc
fiaddl
call
pop
xor
add
test
mov
add
stc
lods
push
mov
and
leave
popf
push
xchg
fdivrl
popa
aam
mov
in
fdivl
shll
fildll
dec
and
jp
sub
mov
aam
push
sub
xchg
fcoml
test
into
xchg
fcompl
push
and
lret
xchg
mov
jns
dec
jae
xchg
cld
test
pop
xor
stos
xor
mov
mov
dec
fsubr
hlt
fstp
xchg
xchg
and
mov
testb
sub
test
call
fsubl
cltd
ret
cwtl
add
mov
inc
repnz
sub
mov
sub
adc
mov
dec
cmpsb
pop
inc
xor
jmp
xchg
cmp
mov
ss
pop
or
lret
rorb
mov
cmpsb
xor
insl
jmp
scas
mov
mov
xchg
xchg
sub
xchg
push
sub
pop
movsb
shll
es
xchg
loop
xchg
add
push
cli
inc
mov
cvtps2pi
jmp
jle
inc
and
stos
in
orb
add
dec
decl
push
jo
stos
enter
cmpsb
and
inc
jmp
sub
subb
cmp
and
lods
fldpi
stos
cmp
jmp
ss
es
fdivl
popa
mov
jno
mov
test
dec
mov
int3
jnp
push
lods
push
mov
popf
xor
scas
mov
jo
repnz
test
fimull
mov
insb
insl
jmp
scas
sub
mov
add
or
xchg
push
push
test
gs
sbb
xor
movb
or
mov
mov
jge
movsb
addr16
fcoms
adc
cmpsb
xchg
in
mov
icebp
movsl
push
lret
pusha
and
icebp
xorb
push
leave
sub
lods
fs
or
adc
and
inc
lock
or
dec
es
roll
shll
jae
mov
test
xchg
sbb
test
and
shlb
ret
jns
test
daa
pop
lret
ror
lret
inc
sbbb
roll
fxch
adcb
push
jno
scas
mov
inc
pop
lahf
scas
fmuls
xor
inc
mov
push
lret
mov
lcall
pop
xchg
and
es
add
xor
mov
les
lods
int
and
mov
push
dec
test
mov
roll
jne
and
lods
outsl
pop
sub
sub
bound
fisttps
mov
xchg
jecxz
movsb
icebp
or
out
adc
loopne
enter
cmp
repnz
jecxz
popf
inc
mov
mov
add
dec
insl
negb
mov
in
imul
lcall
negb
data16
hlt
mov
fisttpll
fdivr
in
data16
inc
cmpsb
sub
jne
xor
xchg
inc
ficoml
sub
xchg
icebp
adc
jl
sar
bnd
sbb
jmp
repnz
push
ret
iret
enter
movsl
and
inc
leave
fiadds
pop
repnz
xor
add
mov
inc
in
orl
insl
mov
inc
sub
ret
add
ja
data16
mov
movsb
das
xchg
test
out
jle
push
jle
fadd
mov
pop
sbb
push
and
add
and
and
je
pop
scas
sahf
xchg
jb
add
outsb
dec
cs
inc
sub
pop
adc
add
mov
mov
jge
pop
dec
mov
adc
das
scas
inc
andl
xchg
push
jle
les
add
jo
shl
lret
add
mov
dec
mov
pop
ds
add
or
outsb
pop
ror
push
ret
inc
es
fmuls
add
xchg
inc
pop
add
or
dec
xor
das
nop
jp
dec
xor
mov
movsb
xchg
xchg
xor
add
aas
mov
and
fwait
test
sbb
mov
popf
xchg
scas
sahf
cmc
roll
or
and
leave
stos
daa
xchg
scas
add
out
call
mov
shr
xchg
mov
push
sub
dec
xor
pop
inc
add
gs
cmp
lea
mov
dec
sub
fldenv
aad
xor
inc
enter
insb
into
outsl
daa
jo
adc
nop
mov
sbbb
and
pop
cltd
add
add
sub
dec
or
pop
push
add
sarb
mov
shlb
adc
fcmovnbe
adc
pop
out
dec
sbb
mov
mov
pop
and
call
leave
mov
cmp
cmp
add
and
cltd
xchg
xchg
movsb
lea
dec
lret
xchg
fisubrl
insl
or
sbb
insb
je
dec
dec
inc
fnstenv
mov
addb
push
inc
push
cmp
int3
inc
cmp
bound
push
sbb
pop
sub
dec
cmp
icebp
adc
jno
jb
inc
xchg
lods
pushf
xchg
pop
das
add
ror
lret
jno
sarb
push
xorl
loopne
cmpsl
xor
lret
outsl
imul
xchg
mov
or
mov
jmp
enter
mov
dec
sub
test
mov
mov
xchg
cmp
aas
mov
mov
and
iret
xchg
mov
les
pop
ret
add
out
out
dec
push
mov
push
int3
mov
xor
jns
test
adc
roll
popf
sub
lds
repz
iret
cmp
out
push
sti
cmp
dec
xchg
insl
lret
cli
mov
sub
mov
mov
roll
pop
out
sbbl
cmp
cmp
push
mov
mov
insl
sub
inc
dec
movsb
insl
inc
pushf
push
call
in
bound
sbb
dec
inc
mov
stos
daa
lods
mov
int
fs
push
call
mov
mov
out
fistpl
jl
lea
push
cltd
xchg
shlb
mov
fxch
stos
repnz
push
dec
xchg
sbb
lea
scas
lret
adc
sub
xor
xchg
call
inc
stc
out
push
push
pop
popf
or
add
dec
cmpsl
test
loop
or
mov
aas
add
sahf
enter
data16
popf
scas
aaa
mov
lcall
rol
jo
xchg
fcompl
mov
adc
pusha
in
fdiv
nop
jo
adc
dec
fdivrl
cmp
push
pop
push
insl
jae
mov
fcomi
push
sti
pop
sbb
xor
xor
jmp
cltd
xchg
jb
jge
mov
std
shrl
xor
fildll
mov
pusha
mov
dec
add
mov
adcb
mov
xlat
mov
lcall
popa
pop
add
xchg
repnz
adc
xchg
xor
fadd
dec
mov
addr16
lahf
daa
mov
clc
xor
lret
xchg
leave
sub
and
scas
pop
push
lret
mov
daa
push
and
lds
sbb
cmp
dec
mov
cmp
add
and
dec
loope
or
daa
or
fucomip
clc
test
xchg
mov
fisttps
add
mov
cmp
bound
les
cmp
xor
cmp
pop
pop
cmp
pop
xor
shlb
cmp
jne
fsubl
movb
add
mov
jb
popa
lahf
dec
fdivrl
jp
and
pop
adc
inc
mov
je
push
pop
out
clc
mov
mov
cmp
lods
xchg
jo
mov
pop
popf
lds
dec
test
dec
fimull
insb
and
pusha
mov
das
push
jae
je
cmpsb
test
fmull
add
jae
xchg
orl
roll
jae
gs
and
xchg
orl
inc
in
xchg
add
inc
xor
add
loopne
lret
pop
dec
or
ror
orb
mov
xor
add
lret
mov
and
sbb
dec
int3
cltd
aad
lret
inc
mov
jns
movsb
fdivr
push
lcall
mov
and
inc
xor
iret
mov
fnstcw
movsb
fbld
jmp
sahf
xchg
fcmovu
push
push
fs
test
mov
movsb
push
sub
inc
sbb
cmp
test
mov
nop
mov
or
mov
xchg
dec
pop
xor
xorb
jbe
mov
lods
stos
lret
xor
inc
dec
mov
inc
cld
stc
lods
add
mov
pop
inc
adc
sub
ljmp
mov
mov
pop
pop
sub
adc
push
int
insl
jo
add
into
lret
adc
add
in
aam
fmul
ret
cmpsl
jbe
cmp
out
jo
jb
dec
xor
push
imul
pop
sub
movsl
and
dec
mov
adc
inc
sub
insl
pop
push
mov
test
dec
mov
xchg
hlt
cwtl
subb
cmp
mov
mov
rcrb
aaa
pop
cs
pop
sbb
sub
sbbl
push
cmp
push
ret
push
push
andb
test
xchg
mov
xchg
repnz
shl
rclb
lds
jmp
mov
mov
and
mov
mov
and
and
pop
in
es
cmp
pushf
lods
push
lods
sub
pop
cmp
add
jo
xor
add
pusha
loope
push
add
mov
mov
cwtl
mov
add
pop
and
and
xor
hlt
test
clc
pop
mov
inc
aas
lea
sbb
jae
sbb
scas
test
mov
mov
and
xchg
push
andb
insl
push
dec
jno
cmp
ror
mov
ficoms
das
sub
and
imul
pusha
lret
jo
dec
xor
jecxz
test
movl
dec
cmp
in
enter
cmpsl
pop
cmp
addr16
cmp
adc
mov
dec
push
adc
fs
xchg
popa
loop
cltd
push
sub
cmp
sbb
dec
mov
lods
bound
dec
mov
pop
mov
das
ret
fnstenv
cmpsl
dec
lds
adc
cmp
enter
cmpsl
pushf
orb
xchg
lds
adc
nop
arpl
loope
push
sub
or
jns
mov
mov
add
jl
lods
xor
fs
sbb
pop
push
dec
push
stc
les
lahf
fsubrl
stos
push
pop
inc
mov
add
ficoms
popa
loop
in
dec
lods
xor
jo
fbld
push
inc
sub
xor
and
out
sub
aam
lods
add
outsl
pop
cmp
dec
test
mov
insl
daa
inc
sub
pop
and
or
ja
lds
inc
movl
xor
push
and
fst
add
pop
adc
sbb
push
inc
icebp
push
mov
sub
add
push
daa
pop
pop
inc
xor
in
add
inc
add
mov
cmpsb
mov
push
inc
xor
xlat
enter
cmp
xchg
fsubrl
fstpl
lods
lret
int
sub
ret
dec
mov
dec
fcomip
stos
sub
pushf
fcmovu
pusha
cmp
sbb
push
fwait
push
pushf
leave
push
leave
xchg
adc
scas
cltd
mov
cmp
jge
jle
mov
mov
inc
add
fcom
pop
sub
out
pop
inc
int3
imul
add
mov
hlt
push
mov
mov
div
sub
xorb
mov
scas
popl
cmc
inc
sahf
test
lea
dec
adc
jno
mov
sbb
in
sub
jp
adc
pop
stc
js
or
adc
mov
sarl
adc
or
mov
xchg
rorb
dec
pop
cs
adc
push
scas
adc
fnstenv
push
bound
outsb
add
mov
leave
cmp
xchg
xchg
rolb
cmp
mov
add
add
xchg
lret
sub
test
mov
into
mov
cmp
xchg
test
dec
pop
lcall
scas
and
push
add
dec
vshufps
mov
dec
mov
push
out
pushf
mov
outsb
inc
mov
add
inc
ds
push
dec
fdivrl
mov
add
fbstp
xchg
popf
mov
scas
loopne
add
into
sarl
jnp
call
lret
pop
xchg
adc
in
sbb
inc
push
out
mov
dec
mov
xchg
fwait
test
pop
xor
dec
xor
jg
inc
in
pop
jmp
imul
dec
sub
callw
add
cs
dec
inc
push
dec
fsubl
imul
faddl
mov
lock
in
test
mov
xchg
jge
pop
inc
push
sub
add
and
and
mov
flds
fcoml
es
sbb
and
flds
or
add
ss
xor
popa
pop
sub
dec
es
inc
xchg
movsl
retw
fiaddl
mov
xchg
jno
pop
daa
sbb
shll
push
fdivrl
shlb
jae
jnp
add
mov
xchg
push
sbb
lock
not
leave
ret
test
das
daa
stos
daa
lcall
add
nop
hlt
mov
or
add
sbb
imul
xchg
or
sub
movsb
fcompl
fldl
push
dec
enter
push
stos
loopne
adcl
add
jl
imul
mov
insb
push
xor
test
daa
mov
stos
lcall
add
lahf
xchg
mov
popl
popa
fs
jmp
add
mov
nop
add
setae
push
shl
dec
dec
adc
xor
fdivl
bound
dec
cmp
sub
fwait
add
cmp
inc
dec
aaa
sub
jns
mov
xchg
lcall
cs
in
and
divl
jecxz
push
pinsrw
dec
adc
add
mov
xchg
scas
xorb
test
mov
cltd
mov
or
scas
dec
fsubrl
mov
ret
jnp
loop
inc
fsub
insb
pop
push
gs
cmp
sub
ret
push
push
mov
sub
pop
jno
or
mov
imul
les
and
int3
xchg
lds
fcomp
mov
aam
dec
fcom
add
pop
xor
mov
aaa
icebp
inc
fdivl
and
push
fwait
dec
adc
cmpl
mov
sub
mov
fsub
bound
and
xor
testb
mov
insb
xchg
xor
fmull
cmp
cmpsw
data16
in
add
pop
sub
addr16
daa
aaa
fdivr
jmp
pop
insl
adc
add
aam
or
outsl
sbb
add
cmp
jle
lcall
xchg
in
in
data16
inc
mov
fdivrl
sub
jbe
xor
push
shll
fsubrs
fldcw
push
sub
pop
adc
inc
aam
imul
adc
sub
xor
mov
arpl
add
inc
dec
fdiv
mov
aam
xchg
scas
mov
in
mov
fisubrs
rorb
inc
ja
cmpsb
in
imul
fsub
int
add
pop
xor
ret
mov
add
pop
add
ror
push
and
mov
or
xor
or
rcl
jmp
add
xchg
out
add
push
jns
cmpsl
mov
int
dec
xor
fdiv
jmp
leave
push
xor
enter
movsl
push
and
mov
xlat
add
sub
in
xor
add
es
sub
jno
divl
jle
test
xchg
xchg
xchg
xchg
test
mov
out
mov
pushf
shrl
outsl
mov
dec
fdivrl
outsb
dec
cmp
jno
dec
mov
decb
cli
xlat
inc
rcrl
xor
loop
jno
dec
frstor
sub
inc
sub
mov
push
cmp
inc
cmp
jp
push
add
xor
and
mov
mov
add
sub
sub
lods
push
add
jb
jno
fdivr
mov
xchg
push
sahf
pop
mov
mov
push
mov
jmp
adc
add
sub
das
enter
repz
mov
cmp
inc
aaa
jae
push
cmp
test
pop
xchg
imul
lock
push
push
sub
add
xchg
pop
int
sub
int3
adc
aaa
push
push
dec
xor
xchg
cmpsb
inc
mov
inc
sbb
add
test
cmp
jae
add
lods
add
test
pop
fistpll
daa
fsubrs
jg
push
add
imul
sub
sub
into
add
das
xor
fsubr
pop
enter
and
xor
int
cs
or
cmp
cli
push
sub
pushf
mov
or
pusha
sbb
xor
insb
sbb
add
mov
add
mov
pop
sub
in
add
add
pop
pop
cmp
test
es
inc
add
adc
dec
shlb
xchg
jne
jne
mov
xchg
imul
ja
lahf
inc
fcompl
xor
mov
add
inc
mov
fsubl
pop
sub
loope
push
enter
cltd
mov
mov
lahf
or
pop
cmpsb
mov
pusha
imul
fdivr
lods
lcall
inc
xor
add
adc
mov
lcall
inc
movsb
fs
add
and
mov
jo
cmpsl
xchg
clc
add
or
pop
mov
cmpsb
push
sub
addr16
dec
cmp
out
xchg
inc
pop
mov
xchg
fsubr
ret
mov
cltd
jg
inc
jp
jo
pushf
add
jno
adc
push
or
and
dec
cmp
adcb
mov
mov
pop
lret
mov
fadd
lret
mov
int
mov
ret
sub
cmpsl
inc
or
inc
pushf
les
jns
lods
mov
fcomps
sbb
push
sub
in
lods
xchg
or
icebp
xor
or
mov
mov
adcb
xchg
pop
lods
push
push
xchg
or
dec
cli
push
dec
push
pop
mulb
lock
sub
imul
push
movsl
ret
lret
mov
xchg
clc
add
sub
and
cli
dec
fstps
and
jo
mov
mov
pushf
jg
orb
mov
sbb
jg
jbe
cmpsl
push
test
xor
cmp
into
test
sub
pop
mov
sub
xchg
andl
pop
adc
xor
add
xchg
dec
into
outsl
xchg
mov
push
in
movsb
add
jbe
lret
cmp
ljmp
adc
adc
fcom
clc
fwait
inc
cltd
cmp
jns
xor
movsb
outsl
adc
je
shll
push
cwtl
fcmovnbe
into
pop
lret
xchg
add
mov
das
and
hlt
adc
jb
inc
test
scas
leave
inc
dec
pop
mov
ds
push
cmpsl
mov
pop
les
call
add
shlb
in
and
pop
pop
movsb
or
adc
lds
adc
imull
mov
sbb
sbb
push
mov
ret
fldt
dec
les
call
mov
daa
fisttpl
mov
xlat
popa
mov
jb
call
dec
test
pop
jl
add
mov
cmc
stos
mov
clc
pop
sar
inc
movsb
lcall
sub
lret
rcrl
stos
and
jae
cs
lods
cmpsl
fstps
lcall
lods
push
ja
sar
xchg
fdivl
jecxz
or
push
and
inc
xor
sbb
jne
xor
xchg
clc
cmp
dec
xor
jp
mov
stos
push
push
xchg
bound
push
dec
adc
dec
fdivr
cmc
push
mov
dec
mov
imul
pop
inc
add
scas
or
jbe
js
pop
adcb
cmp
xchg
cmp
lock
add
in
mov
imul
dec
or
in
aam
xchg
or
add
adc
sub
push
lea
pop
jle
into
loope
das
cmp
test
rclb
dec
inc
dec
inc
test
pop
dec
jl
lea
andb
cmp
and
push
test
test
push
mov
movsb
shrb
mov
mov
pop
xchg
or
popf
or
clc
and
fs
dec
and
movsl
std
fcom
adc
dec
fdivr
hlt
mov
add
les
jmp
add
sub
mov
in
je
lock
mov
add
movsb
popf
cltd
shlb
lret
dec
mov
lret
or
jae
adc
push
or
in
cmp
xor
add
add
and
adc
stos
sub
and
in
rclb
mov
cmp
mov
lret
les
cmp
jns
push
xor
mov
and
lods
cmp
icebp
cmp
cmp
mov
imul
shl
mov
add
push
fisubrl
pop
mul
inc
cmp
lret
mov
ljmp
les
outsl
add
mov
push
xchg
imul
mov
gs
push
mov
push
or
daa
pop
adc
sbb
lods
loope
mov
stc
cmpsl
push
pop
jo
bound
popa
daa
or
jb
andb
dec
jp
add
int
das
int
cmp
adc
or
fnsave
lea
data16
adc
jecxz
xchg
xor
push
inc
fcompl
fwait
sub
mov
je
sub
pop
vshufps
ret
clc
movsl
lea
int3
in
sahf
sub
lods
mov
mov
movsl
jns
movsb
fdivrl
mov
cmp
or
mov
lea
cmc
xchg
add
movsl
add
jnp
jns
aam
fcoml
push
shl
cmp
cmc
xchg
aam
dec
test
inc
xchg
outsl
cmpsb
jle
inc
inc
jns
jmp
push
xor
les
jbe
enter
shll
repnz
mov
jbe
das
lea
pop
test
inc
les
scas
les
cli
sub
inc
lods
xchg
orl
pop
pop
nop
std
mov
pop
xchg
adc
dec
lods
push
push
pop
aas
sub
add
outsl
test
dec
xor
inc
sub
arpl
fsubrl
shl
cmpsl
inc
jb
cld
clc
mov
lods
stc
adc
mov
and
ficompl
popf
in
in
adc
mov
fdivrl
test
shlb
sub
mov
mov
stos
xchg
mov
fsubrl
sub
dec
mov
pop
movsb
mov
dec
js
xchg
std
xchg
ficoml
repnz
adc
stos
cmpsb
add
inc
stc
jg
inc
ror
mov
lods
movsb
fcompl
add
mov
mov
scas
decl
lods
bound
adc
mov
push
mov
xchg
loope
sbb
cmpsb
popl
or
jo
lds
pop
ds
test
data16
stos
mov
push
call
cmp
sub
mov
inc
dec
adc
xor
mov
jge
or
test
call
mov
movsb
fdivrl
ja
or
std
outsl
adc
sbb
test
add
outsl
dec
das
lahf
sar
xchg
dec
mov
insl
iret
and
adc
cmc
fs
add
cmp
push
aas
fs
test
jmp
xor
add
shlb
cmpsb
pushf
fldenv
cmpsl
fs
iret
sbb
ficompl
add
lea
or
jns
dec
test
sbb
sbb
push
pop
cmp
js
inc
cmp
icebp
inc
aas
adc
stc
imul
shr
sub
movsl
inc
movsb
jbe
aaa
push
or
pop
fstps
lock
xchg
jo
cmp
in
xor
addr16
stos
popf
xchg
mov
add
rorl
rorb
sbb
and
sub
jmp
fstpt
stos
add
xchg
jnp
push
mov
scas
ljmp
or
fdivrl
jge
fcmovb
loopne
enter
mov
int
cmpsl
lds
fisubrs
gs
add
jns
lds
inc
jb
xchg
test
sar
daa
roll
outsl
fcoml
and
outsl
pop
pop
inc
clc
or
fsubl
lcall
cmp
adc
mov
sub
cmp
cmc
cmp
xor
es
or
les
xchg
or
cmpsl
mov
pushf
cli
add
inc
adc
dec
xor
cmpb
pushf
test
stos
ss
pusha
xlat
ror
jb
dec
sub
lcall
ret
stos
lods
dec
add
pushf
aam
push
test
out
pop
push
lret
and
mov
gs
and
xlat
add
fcoml
lock
movsb
sbb
sbb
mov
dec
lock
sub
loop
jo
xchg
fsubrl
add
sub
xchg
push
in
stos
test
lea
sub
insb
call
shlb
xchg
fcoml
push
mov
add
sub
loope
and
pop
popf
xchg
sahf
jo
sarl
mov
pop
mov
fs
xor
dec
or
aaa
add
jno
xchg
add
inc
andb
fsubs
dec
imul
sub
aad
mov
fsubrl
xchg
test
inc
stos
roll
inc
xchg
insb
mov
and
ljmp
and
add
lea
dec
xchg
dec
add
jo
lcall
movsb
fdivl
dec
outsb
xor
add
scas
scas
sub
jg
je
popl
jb
or
cld
cmp
mov
movsl
repnz
add
xchg
test
and
push
push
push
xchg
popa
push
mov
jbe
es
out
push
lds
mov
dec
fcomi
test
movsb
mov
fmul
test
shl
mov
pusha
out
cmp
and
adc
sbb
adc
and
cmp
ss
and
rorl
pop
dec
popa
cmp
repnz
pop
aam
mov
mov
roll
mov
mov
pop
xor
aas
add
inc
dec
sub
in
jl
push
xor
test
pop
xor
jle
das
inc
push
loope
aaa
mov
lock
bound
xchg
cmp
leave
sub
lods
jg
inc
add
cmp
mov
xchg
and
pop
add
inc
sbbl
lret
mov
imulb
jp
mov
out
jno
inc
inc
pop
mov
dec
or
mov
pop
xchg
mov
push
inc
jle
xchg
mov
pop
cltd
scas
je
push
mov
jecxz
fcompl
mov
mov
jge
push
jno
pop
sar
pop
push
iret
adc
add
jne
jae
pop
outsb
popa
bound
push
push
addr16
cmp
dec
jae
outsb
aas
xor
addb
cmp
jns
jae
jae
mov
or
mov
lds
inc
adc
adc
inc
not
into
int
mov
cmp
or
or
sbb
leave
les
stos
mov
mov
mov
mov
xchg
dec
stos
fdivp
cmpsl
pushf
cmp
mov
add
or
and
mov
cmp
dec
sub
mov
fdivs
aad
jge
lret
adc
push
push
test
add
lds
mov
and
ret
pop
sbb
shrb
cmpsb
fnstenv
or
insl
dec
mov
daa
lret
mov
inc
cmc
fidivrs
daa
sbb
iret
das
imul
adc
pop
cmp
adc
ret
mov
push
lcall
lds
mov
jge
pop
inc
adc
or
rcl
push
or
mov
push
jmp
rclb
dec
push
subb
jns
pop
pop
add
xchg
and
jnp
and
insl
stos
xchg
sub
jns
add
stos
ss
dec
jnp
gs
fsubr
stos
xor
orl
add
adc
xor
inc
add
jae
mov
dec
imull
out
xor
ljmp
call
sub
arpl
daa
inc
push
pushf
mov
jns
cmp
or
lret
dec
push
addr16
bound
fisubl
lcall
jne
and
mov
inc
add
inc
testb
call
dec
lods
pop
mov
scas
add
repz
push
lahf
pushf
js
jp
popf
push
iret
jb
add
mov
add
movsl
jecxz
dec
test
int
and
adc
pop
inc
stc
sub
mov
xor
mov
dec
jmp
popf
inc
pop
nop
orl
dec
lret
in
adc
pop
mov
sti
inc
fldenv
lea
fs
shrl
sahf
mov
fisttps
mov
and
pop
push
dec
mov
das
mov
xchg
out
add
into
lret
test
stos
jmp
add
adc
dec
adc
imul
in
loope
push
enter
jle
mov
push
lods
popf
xchg
xchg
lods
sub
in
call
bound
cmp
sub
dec
xor
and
cmp
add
jl
push
cmp
fcomip
dec
out
and
mov
ret
mov
rorl
jns
loope
lods
lahf
xchg
std
jl
cmp
loope
aas
or
fwait
add
add
or
adc
and
xchg
push
xchg
lret
push
loopne
daa
iret
or
icebp
mov
add
adc
int3
lret
ja
aaa
xchg
dec
lods
inc
test
lock
jle
rclb
scas
xchg
cmc
push
sub
mov
mov
mov
jb
mov
push
pop
inc
push
xlat
ror
jo
xchg
inc
push
std
inc
sbbl
ss
int3
ret
outsl
mov
mov
add
sbb
xchg
cmp
cmc
stos
lea
mov
into
lret
loop
loop
cld
movsb
and
push
push
ret
inc
jl
pop
loopne
xchg
add
fwait
mov
pop
pop
mov
mov
jle
je
push
jp
imul
add
xlat
aad
leave
lds
test
xor
mov
push
daa
jno
fildll
sbb
dec
and
add
add
or
cmp
ss
jmp
add
add
push
mov
repz
sub
add
sbb
and
mov
jle
or
imul
stos
xchg
enter
and
xor
lods
scas
and
xchg
and
add
aas
fdivl
mov
movb
xchg
fsts
movsl
push
cmp
testl
int
lds
pushf
mov
popf
scas
bound
scas
je
jle
jg
rclb
push
jecxz
push
mov
fsub
adc
fcmovu
adc
mov
sbb
int3
leave
add
add
adc
clc
mov
movsl
scas
xor
test
dec
fdivr
dec
scas
and
and
xlat
inc
in
pop
ds
cltd
fsubrl
sub
add
dec
and
test
pop
stos
and
fdiv
mov
outsb
fidivrl
insb
add
and
or
daa
jns
movsb
xchg
stc
mov
or
cmc
sbb
pop
stc
push
cs
xor
mov
mov
adc
dec
sub
inc
cld
sub
inc
jl
jo
fcoml
inc
sbb
pusha
jmp
mov
fsubrl
in
xchg
jbe
dec
shlb
lods
out
xchg
shll
add
add
adc
lret
jo
jmp
les
jmp
add
test
sar
mov
fmull
mov
stos
ss
test
movsl
or
movsb
fcoml
sbb
add
add
adc
pop
xor
fdivrl
dec
fmul
add
fdivr
jno
insb
hlt
dec
pop
add
test
sub
adc
fsubl
ja
ret
fsubrl
xor
add
or
add
sub
imul
pop
adc
ljmp
pop
dec
and
jmp
sub
test
jae
fmul
ljmp
fcoml
jge
arpl
lcall
or
sbb
fmul
jecxz
aas
dec
fstl
xor
lds
sarl
faddl
rolb
sub
ljmp
mov
fsubr
sub
fdiv
loope
movsb
jg
mov
lahf
fsubl
arpl
add
sub
mov
xlat
adc
mov
mov
jne
loopne
or
ret
cmpsb
cld
sbb
inc
fdivr
jge
movsb
and
hlt
xchg
mov
cmpsl
ret
scas
xchg
iret
cmpsl
or
xchg
lcall
inc
fcompl
dec
sub
ret
jmp
outsb
inc
fdivl
add
inc
mov
mov
stc
ja
mov
cli
dec
test
ljmp
jg
xor
mov
xchg
loope
jle
into
sub
mov
and
lds
les
scas
push
leave
add
sub
cli
mov
fs
or
adc
fstpl
ljmp
aad
lods
xchg
out
lcall
push
pop
fsubrs
mov
imul
mov
loopne
mov
scas
mov
jp
pop
lea
mov
xor
add
add
or
das
pop
ss
ror
adc
test
insb
cmpsb
pop
mov
cs
out
mov
call
cmp
scas
das
dec
dec
aas
fsubr
push
in
int3
mov
iret
add
add
adc
add
lods
add
jmp
xorl
rcr
cmpsl
out
xor
sti
pop
xor
enter
fcoml
lcall
or
add
in
jmp
mov
jl
xchg
stos
decl
add
add
sbbb
inc
loop
jg
cmpsb
repnz
cmp
pop
add
add
jns
sub
scas
jo
xchg
daa
cmc
xchg
jle
nop
add
and
inc
hlt
clc
xor
lods
mov
filds
inc
into
xchg
fcoml
mov
and
movsb
and
mov
and
pop
and
xchg
mov
mov
sbb
dec
lret
mov
push
cs
or
rol
test
rcll
dec
xor
mov
scas
mov
out
int3
and
mov
mov
mov
mov
mov
mov
xlat
out
sub
rolb
out
pop
jecxz
inc
lea
lcall
dec
lods
add
test
clc
xor
inc
nop
adc
push
fsubrl
pop
jno
push
and
ljmp
dec
rolb
jae
jae
lahf
stc
xor
and
xlat
imul
mov
fisubs
jne
xchg
fdivl
sub
fists
imul
rcrl
movsl
loop
dec
fsubr
and
ret
pmuludq
xor
scas
in
outsb
in
outsb
xor
xchg
fdivl
xchg
push
mov
add
ficompl
loop
pop
pop
imul
sub
jge
dec
mov
xor
lcall
leave
sub
fists
adc
clc
push
sbb
fsubrl
mov
xchg
push
mov
test
xchg
and
ficompl
jne
stc
mov
mov
rorl
fsubr
decb
xchg
mov
mov
mov
mov
pop
pushl
or
add
jo
lahf
aam
dec
sbb
jl
int
jmp
jns
push
or
movsb
loop
cmc
fistpl
mov
clc
aam
mov
fdivl
std
sbb
lcall
xor
mov
mov
dec
mov
dec
mov
aam
mov
mov
popa
dec
rcrb
into
xchg
loop
pop
test
push
hlt
and
test
inc
adc
js
shlb
fisttpl
jmp
dec
mov
pop
mov
jno
jo
test
xchg
mov
push
pop
scas
sbb
cmpsl
pop
mov
pop
dec
sarb
mov
mov
jne
adc
shll
sub
cmpsb
stos
mov
ds
mov
mov
mov
cs
icebp
aaa
outsb
int3
push
out
add
cli
jns
aas
int3
outsl
mov
mov
fstl
and
movsb
int
mov
std
xchg
xchg
dec
in
addr16
movsl
out
xchg
out
lahf
or
jl
insl
adc
xor
mov
ljmp
call
mov
enter
rolb
roll
aaa
movsb
fdivl
daa
push
mov
xchg
push
les
inc
mov
mov
test
mov
fsubr
nop
add
adc
icebp
inc
cs
xchg
movsb
mov
movsb
mov
xor
test
in
popf
jg
jle,pt
scas
sub
push
sti
push
pop
jbe
and
mov
out
xchg
adc
addl
adc
cmp
mov
add
jae
aaa
arpl
jle
outsl
insl
mov
or
or
adc
cmp
xlat
xchg
or
loope
and
cmp
sub
sbb
out
insb
cmc
in
jae
jne
out
mov
inc
pop
or
and
aaa
adc
pop
and
cmpsl
push
inc
adc
sbb
imul
aaa
mov
mov
jne
pop
scas
nop
notb
outsl
sar
mov
loop
pop
aam
js
pop
add
jne
pop
ja
pop
pop
add
rorb
daa
push
pop
xlat
gs
js
and
add
mov
push
pop
mov
test
xor
es
scas
push
and
or
and
es
dec
mov
cmpl
jmp
movl
lock
cmp
pop
mov
jo
sbb
lcall
ror
push
pop
cmpsb
mov
push
mov
inc
sbb
mov
pusha
ret
mov
psrlq
js
call
jo
sbb
fstp
pop
out
in
jmp
aad
add
stos
fdivp
mov
lret
and
rcrb
mov
int
ret
test
mov
out
sub
or
in
cwtl
sbb
pop
popf
sbb
jmp
xchg
jo
xor
mov
mov
and
lods
pop
mov
add
ror
shl
std
xchg
lock
sbb
sarb
lret
mov
or
pop
pop
aam
ret
fnsave
push
into
mov
adc
inc
aam
arpl
cmp
jecxz
mov
jmp
sarb
push
mov
aad
cmp
fld
push
leave
mov
enter
stc
cmp
hlt
loopne
sub
fcmovnb
push
aam
out
push
in
pushf
outsl
jo
sbb
pop
ljmp
in
ret
mov
lea
sub
leave
push
rolb
mov
mov
xor
ljmp
cmp
cmpsb
or
fdivs
loopne
nop
sbb
icebp
out
div
or
jmp
cld
stc
cmc
sbb
lock
dec
adc
shlb
mov
push
divl
pop
cmc
repnz
pop
lods
cwtl
in
jmp
negb
jnp
dec
scas
rclb
dec
rclb
mov
push
leave
push
clc
in
sbbl
xor
repnz
rcrb
pop
xor
into
js
mov
adc
adc
loopne
test
mull
and
test
jbe
xor
call
jecxz
lock
mov
icebp
nop
mov
mov
movsb
adc
inc
sbb
mov
sbb
ljmp
sub
cmp
mov
subl
xchg
movl
jno
cli
rorb
mov
adc
testl
xor
clc
xchg
xchg
fwait
leave
shl
add
js
rorb
rol
popf
mov
mov
shl
rcl
andb
mov
xchg
movsb
jno
into
inc
jno
jb
mov
int3
fmull
cltd
das
push
jbe
movsb
push
cmc
add
repnz
or
and
inc
call
mov
mov
mov
inc
add
pop
add
adc
and
loopne
addl
push
add
adc
or
dec
xchg
or
incb
fs
aaa
add
sbb
mov
and
scas
dec
sub
add
pop
add
sbb
popf
jo
cltd
rcll
outsb
add
lea
and
orl
jnp
jne
subb
push
and
dec
or
lea
pop
add
or
dec
push
push
xor
xor
add
sbb
add
cmp
xor
mov
and
xchg
pop
cmp
lock
movb
mov
xchg
int
lret
jl
lret
fcomp
fcmovbe
cwtl
std
sub
or
insl
sbb
push
adc
enter
out
in
add
shll
pop
mov
movl
adc
sarl
or
mov
pusha
push
repnz
add
add
in
cmpsl
out
mov
iret
enter
add
roll
ret
mov
jle
stos
lods
mov
lock
hlt
loope
ficompl
popa
ror
idivl
xchg
xchg
inc
adc
out
jp
xchg
cwtl
jecxz
sbb
sub
mov
in
subb
shll
sahf
push
lock
std
mov
add
into
cmp
jnp
sbb
adcb
sbb
adc
mov
add
int
sbb
and
daa
cmpsl
addb
in
fcmovne
xchg
add
cmpsl
fdivrs
xor
sub
adc
mov
adc
out
shlb
fldt
dec
adc
add
cld
icebp
fxch
xchg
xchg
inc
cmp
js
adc
mov
cmp
or
or
shl
cmc
test
or
adc
pusha
xor
hlt
adc
int3
inc
mov
or
or
pop
jnp
test
jl
or
shll
loop
lods
and
popa
jb
shr
lret
and
out
push
xor
push
push
sub
pop
cmp
and
cmpsl
incl
into
pop
adc
orb
or
and
leave
and
in
mov
andl
clc
loope
xchg
xchg
add
and
test
mov
arpl
nop
movaps
xchg
inc
xchg
call
rcr
repnz
xor
add
out
aad
xor
xor
pop
mov
add
les
add
in
or
cmpsb
and
adc
dec
aas
adc
add
xor
js
add
cmp
and
insl
nop
es
js,pt
aam
call
dec
push
dec
xor
je
lea
ljmp
jne
cmp
sbb
imul
sti
cmp
orb
push
daa
adc
sbb
inc
ds
rorb
iret
cltd
jle
outsl
ret
addr16
adc
arpl
jle
outsb
movsl
les
iret
push
jb
sbb
popa
cmp
imul
jle
adc
inc
dec
add
inc
pop
aas
push
aaa
mov
xorb
dec
pop
adc
pop
add
decb
push
outsl
mov
sbb
pop
adcl
fmull
push
dec
les
aaa
inc
sbbl
ret
cmp
add
push
cmp
add
and
je
in
inc
add
pop
imul
push
dec
sub
push
inc
cmp
inc
jge
test
iret
fnstenv
lds
and
inc
pop
out
inc
pusha
jae
xchg
cli
ret
fwait
std
dec
add
jmp
add
nop
outsl
jbe
inc
pop
and
push
cmpsl
inc
add
cmpsb
cmc
ror
into
dec
lea
aaa
cmp
mov
sbb
addb
pusha
adc
inc
aas
loop
adc
add
xchg
fldz
div
test
jo
rorb
pop
pop
inc
xor
inc
jp
repz
or
fmull
movsl
mov
add
pop
inc
pop
xchg
leave
iret
add
jecxz
repnz
or
cwtl
addl
movsl
adc
in
fidivrs
push
nop
xchg
xchg
loopne
add
xchg
mov
or
repnz
xchg
int3
xchg
idiv
xor
cld
movsb
subb
jmp
fstpt
addb
aam
out
out
stos
movb
in
movsb
mov
xchg
add
cltd
fnclex
add
movsl
in
aad
leave
and
inc
mov
into
sbb
cltd
rorl
cmpsl
add
xchg
lret
sbb
mov
dec
cmp
scas
jl
dec
adc
mov
fdivrl
daa
cwtl
lahf
push
outsb
xchg
sub
in
out
in
ljmp
xchg
ret
inc
pop
jp
in
xchg
xor
rol
jo
sbb
jae
pop
mov
jns
rcl
jo
aaa
lret
jl
into
mov
int3
mov
into
orb
orl
cmp
pop
add
xchg
pop
sbb
or
out
cwtl
data16
jo
xor
outsl
xor
ret
or
jae
push
inc
or
dec
push
leave
mov
aad
push
adc
lea
rorb
push
xor
fs
cmp
add
popf
addb
jbe
in
mov
jno
in
lods
jge
out
jl
dec
cmpsb
jp
fsubl
arpl
lret
loopne
cmp
testb
sub
xchg
sub
test
je
mov
sarb
lret
andb
call
xchg
sbb
loopne
popa
js
xchg
jo
shlb
les
in
adcb
mov
or
adcl
cmp
test
xor
test
cwtl
enter
iret
xchg
xchg
ficoml
and
xchg
in
inc
fcom
xchg
mov
clc
lods
imul
lock
popa
enter
ret
mov
cmp
mov
test
lcall
int3
stos
or
jp
aad
mov
clc
ljmp
sbbb
pop
sbb
je
add
sahf
mov
jecxz
add
into
mov
rclb
cmpsl
pop
sbbb
pop
sbb
call
test
cmpsl
push
scas
mov
shlb
add
cwtl
xorl
in
fildl
mov
add
jmp
mov
mov
stc
sbb
xchg
xchg
push
lahf
fcompl
xchg
sbb
cwtl
sbb
sbb
push
jns
clc
bound
hlt
int3
mov
jecxz
inc
pop
lcall
ftst
cmpl
mov
shl
lods
or
shlb
mov
xchg
or
mov
gs
movsb
add
xor
orl
mov
icebp
or
dec
lds
les
fidivrs
mov
cwtl
xor
call
in
mov
inc
aam
inc
xor
and
out
adc
or
jecxz
bound
cwtl
cmp
hlt
mov
or
sarb
add
sti
in
andb
clc
and
ret
gs
mov
pop
loope
lea
cmc
les
adc
jle
mov
cmp
mov
not
xchg
add
lahf
add
jno
adc
or
int3
es
xor
std
rorb
sar
cltd
cwtl
or
inc
fldl
out
add
scas
test
xchg
lods
add
icebp
out
and
int3
pop
add
add
stc
ss
mov
mov
sbb
add
cmp
inc
add
imul
in
mov
das
call
add
xor
movb
and
stc
and
stos
sbb
cmp
add
lea
inc
add
add
fldl
fstp
loopne
add
fcmovnb
imul
fsubp
cmp
jmp
call
stc
pop
fwait
sub
add
out
icebp
cmc
clc
div
or
call
rorl
xchg
fdivr
jmp
sahf
dec
jnp
cli
das
bswap
jecxz
test
fldl
addb
fs
jge
jecxz
out
hlt
sti
faddl
gs
mov
test
clc
popf
add
add
and
mov
adc
dec
xchg
test
add
ljmp
mov
mov
div
jmp
filds
cmp
pop
add
add
cli
add
jl
popf
pop
addb
push
fiadds
adc
sbb
add
lahf
cmp
filds
in
cmc
std
jg
dec
dec
and
popa
inc
addr16
in
xchg
inc
add
pop
inc
or
xor
and
scas
cmp
add
jmp
and
shlb
loop
mov
dec
and
sub
or
xor
adc
ret
cmp
enter
pop
add
in
cli
jnp
sub
and
xchg
jle
in
jecxz
inc
flds
inc
sub
sub
sub
add
sbb
dec
mov
push
mov
pusha
add
call
and
cltd
sahf
sti
out
push
fildl
fiadds
sub
adc
dec
sbb
shl
testl
in
and
pop
or
adc
xor
lods
ret
movsb
sbb
inc
xchg
incl
inc
js
push
or
repz
mov
or
leave
xor
das
xchg
inc
stos
loopne
shll
mov
push
pop
inc
in
lock
and
jmp
push
or
adc
sub
sub
movl
adc
std
inc
and
ljmp
sub
and
insl
nop
mov
mov
mov
xchg
pop
or
xrelease
push
add
loope
mov
daa
rclb
aaa
outsb
push
aas
sbb
jno
inc
push
mov
jg
jmp
scas
and
fistpl
cmp
sbb
pushf
mov
sbb
mov
and
testl
inc
add
mov
aam
xlat
sarl
aas
xchg
leave
scas
or
sub
adc
add
push
pop
xchg
jns
or
dec
int3
test
and
sahf
imul
icebp
out
inc
aaa
add
cmpsb
lcall
sarl
push
jle
dec
and
cltd
xchg
popa
jle
es
fildl
jge
add
rcr
enter
pop
cli
xorl
sub
adc
fcom
add
jnp
fsub
add
out
loope
mov
lret
fmul
mov
xor
repnz
testb
dec
and
mov
fbstp
mov
test
arpl
jo
in
add
clc
std
add
orb
popa
sahf
mov
hlt
lock
dec
fldt
xchg
xchg
orl
out
add
stc
std
mov
jle
popa
cld
imul
call
xchg
dec
jne
test
jecxz
testb
psubw
icebp
in
push
test
inc
stc
jb
pop
out
in
out
cs
ds
inc
adc
or
mov
outsl
ds
xchg
imul
adc
add
insb
mov
mov
pop
jg
iret
xlat
adc
enter
pop
cmp
and
jns
das
insb
jae
aam
push
and
xchg
testl
add
xchg
jno
loopne
cmp
push
imul
adcb
mov
jno
cmp
ret
push
ficompl
push
add
jo
outsb
popa
xor
dec
das
and
rcrb
stos
xchg
pop
out
cmpsl
add
fcmovbe
shlb
jo
pop
jg
add
test
nop
nop
or
movsb
test
mov
fidivrs
mov
or
rol
jo
mov
mov
push
sbb
push
loopne
cmp
sbb
push
sub
jecxz
or
or
mov
lock
jo
xor
add
inc
sarl
sbb
ja
xor
sub
sbb
pop
or
mov
adcb
mov
pop
stos
mov
add
mov
mov
lret
popa
add
jl
inc
sbb
cmp
xor
jno
pop
sbb
jl
add
mov
nop
mov
jbe
and
mov
popa
sbb
test
int3
cmp
jo
cmpsb
xchg
jb
add
repz
add
adc
in
or
data16
or
jb
into
xor
fadds
pop
frstor
push
js
popf
insl
add
aad
or
jl
vphsubbw
xorb
mov
mov
inc
fsubrl
nop
aam
push
inc
fcoms
xchg
xor
or
lret
inc
in
jns
pushf
xchg
or
jp
je
out
or
in
xchg
xchg
subl
pop
sbb
pusha
loopne
jl
cmp
les
sub
popf
pop
loop
in
xchg
test
mov
xorb
shll
std
repnz
icebp
jmp
jmp
pop
movsl
cwtl
xor
and
fadds
stc
mov
cli
fisttps
cld
in
ret
das
and
or
sbb
loop
loopne
loop
mov
mov
fmul
and
cmpsl
test
clc
fimuls
push
int3
xchg
pop
pop
fwait
popf
pushf
add
ret
push
jb
flds
dec
sbb
rclb
jno
push
push
jne
stc
movsb
test
in
cmc
xor
icebp
mov
aam
mov
cmp
mov
xchg
cmp
mov
test
hlt
movsl
or
lock
add
mov
jp
pushf
mov
je
mov
mov
mov
adc
add
or
and
xor
rcrl
enter
and
jg
cltd
fwait
mov
pop
or
movsb
sbb
and
cmpsl
mov
or
jbe
inc
lcall
sbb
mov
xor
int3
test
inc
inc
les
inc
rclb
and
add
js
clc
lods
push
mov
push
das
push
jb
push
mov
jl
das
incb
xchg
sti
pop
add
icebp
add
pop
mov
jmp
pop
aad
xchg
ret
cltd
js
aad
js
xchg
repz
int
add
in
loope
mov
insb
imul
shrb
jns
das
les
inc
xchg
push
push
mov
jecxz
test
pop
fimull
push
loope
mov
test
add
add
in
jmp
dec
adc
stos
or
fneni(8087
rclb
loop
adc
inc
or
lret
pop
inc
je
in
cmc
mov
andl
loope
inc
adcb
or
ficompl
jmp
ret
xchg
popl
cmpsb
or
mov
ret
shl
lods
fisttpl
loop
testl
addl
sub
cmp
sbb
mov
andb
pop
ret
jmp
add
cmpb
and
or
mov
mov
and
pusha
mov
faddl
imul
imul
aaa
inc
adc
push
ficomps
push
dec
cmp
mov
stos
repnz
out
jnp
xor
inc
pop
add
insl
addr16
and
cmpsb
pop
inc
add
cmp
cld
mov
mov
sub
jns
outsl
cltd
lds
movsl
jl
dec
cmpsl
and
or
dec
movsb
les
jo
mov
inc
adc
lea
add
lods
add
in
add
rcr
sub
mov
insl
jb
dec
or
es
inc
shl
pop
push
dec
and
ret
push
xchg
inc
inc
out
inc
dec
lds
ja
push
nop
mov
scas
mov
jg
mov
les
inc
rolb
icebp
std
dec
lods
and
roll
clc
lock
add
push
scas
mov
xorl
test
sub
xchg
sub
pusha
lods
test
test
dec
xor
add
mov
pop
cmp
subb
es
fmuls
adcb
loopne
sub
orb
add
inc
dec
inc
add
add
inc
cwtl
push
inc
and
push
inc
add
jl
mov
xchg
cmp
xchg
push
popa
ja
int3
inc
iret
ret
adc
and
inc
outsb
xor
cmpb
and
and
mov
ret
push
ror
aad
inc
push
and
xchg
lea
aam
mov
filds
pop
and
fmuls
scas
mov
or
test
mov
repz
add
test
xor
cmp
lret
test
add
add
loopne
xor
adc
enter
xchg
sbb
dec
sbbb
mov
test
fisubrs
pop
cmp
mov
dec
adc
and
inc
rolb
stc
pop
cmp
mov
sti
pop
dec
jno
xorb
cmp
sub
dec
xorl
pop
inc
add
cmp
and
adc
add
clc
mov
jne
gs
inc
inc
cmp
ds
ljmp
push
inc
subb
add
mov
mov
push
fldenv
add
jno
inc
xor
sub
cmpsb
in
push
cmc
test
pusha
outsb
inc
pop
inc
xor
fildl
ror
rcrb
movsl
sahf
rorb
loopne
shlb
mov
add
div
out
fisubrl
out
or
add
sub
hlt
idiv
stos
jno
pop
test
adc
pop
mov
loop
out
ljmp
repz
push
hlt
pusha
fadds
fsubp
loope
cmpsl
add
jecxz
test
mov
jmp
aam
inc
add
add
push
bound
mov
lret
cmp
cmp
and
cmp
jb
addr16
popa
insl
fcom
cmp
enter
mov
jo
sbb
jo
pop
int
roll
mov
xchg
jo
sbb
dec
push
pop
sarl
shl
dec
iret
mov
sub
in
lea
cmp
push
mov
push
into
ret
mov
mov
lea
test
xchg
rolb
inc
sub
inc
mov
rol
test
pop
subl
mov
xchg
scas
enter
sbb
addr16
sbb
stos
jbe
xchg
jge
loopne
cmp
push
out
lods
add
ja
pop
xchg
test
in
cmpsl
dec
test
mov
cmp
pop
ror
push
jb
ja
dec
mov
jns
mov
stos
mov
fs
stos
loopne
notb
loopne
adc
shll
jno
or
push
in
push
sub
je
push
fimuls
ss
inc
xchg
add
lcall
ljmp
adc
cmp
add
mov
inc
mov
orb
dec
mov
xchg
sbb
mov
xorl
mov
xchg
jo
adc
mov
jnp
mov
test
ret
pusha
movsl
arpl
fsub
fcoms
pusha
popa
mov
rcrb
dec
fcom
jbe
loop
aam
into
push
es
add
push
stos
addl
into
sbb
inc
sbb
jge
xchg
dec
test
or
adc
or
mov
cld
xchg
cmp
xorb
fsubl
sbb
shrl
xchg
std
ret
cmp
cli
inc
int
sbb
jno
clc
mov
test
and
xor
fucomp
fadd
hlt
cli
fsubs
repnz
pop
ja
iret
inc
xchg
mov
in
jo
xor
jmp
dec
fcomps
cmpsb
lret
js
bnd
out
push
lret
push
push
cmp
jp
in
or
xchg
call
jmp
push
cmpsl
mov
or
pop
add
jbe
out
dec
jns
xchg
xchg
adc
ret
push
call
sub
xor
js
mov
add
loopne
dec
cwtl
mov
call
or
sbbl
rcrb
rolb
cwtl
js
xchg
aam
pop
loop
inc
pushf
push
sbbl
mov
push
mov
repz
xchg
sahf
mov
sub
jecxz
fisubs
test
scas
adc
aad
orb
cmc
stc
xor
rcr
mov
pusha
rol
nop
mov
in
sub
sub
sar
mov
fistl
mov
fcoml
clc
stc
inc
xchg
jecxz
sub
sbb
and
mov
stos
sbb
aas
imul
dec
fs
jae
aad
sbb
or
jo
ss
js
mov
inc
repnz
cmpsl
ficomps
test
jmp
fisttpll
mov
movsl
fst
add
movsl
xor
roll
js
lret
add
xchg
repz
shrl
test
xor
xor
cli
cmp
mov
add
push
ficompl
and
aaa
pop
add
loopne
jecxz
in
add
sti
jp
insl
xchg
aas
loope
jecxz
xor
push
out
add
call
xchg
inc
insb
jle
add
out
bnd
push
negl
jmp
lock
out
loopne
or
ret
ss
ficomps
fbstp
lock
or
jns
outsl
ds
loopne
lock
frstor
int
add
push
sbb
fnstcw
mov
add
adc
js
push
filds
fidivrs
push
sbb
add
mov
and
out
testl
push
stc
push
out
add
push
and
xor
sub
ja
and
sub
adc
lock
fldt
call
fimuls
and
les
roll
xor
xchg
xor
out
adc
add
mov
js
inc
inc
je
jbe
add
mov
mov
mov
fcom
shlb
test
sbb
lds
mov
cmc
jmp
test
stos
mov
push
add
dec
mov
or
add
imul
push
mov
loope
add
add
lds
pop
push
or
or
rol
pop
loopne
adc
cli
lods
and
mov
mov
pop
xchg
rcl
shl
dec
rolb
out
shrd
test
sbb
or
xchg
mov
jnp
add
lods
dec
and
mov
add
jle
pop
adc
out
mov
stos
movsl
and
inc
jo
jg
mov
push
popa
addr16
add
shlb
mov
insl
or
nop
inc
mov
test
loop
add
add
or
xlat
mov
jns
dec
and
or
mov
dec
pop
mov
add
fistl
enter
fnstenv
pop
addb
sub
xor
pop
sahf
sarb
cmp
pop
inc
jno
dec
dec
les
and
inc
xchg
jmp
add
jmp
cmpb
das
cmp
xchg
cmp
inc
es
mov
inc
inc
lods
and
xor
add
pop
mov
add
into
cmp
adc
add
js
mov
sub
and
dec
lds
jmp
retw
mov
sahf
cwtl
lcall
add
mov
aas
sbb
decb
scas
stos
movsb
mov
js
pop
loop
or
out
out
mov
xchg
add
jae
jge
jl
lahf
jns,pn
insb
xor
mov
adc
mulps
push
push
mov
add
mov
mov
fdivl
lahf
sub
fldl
rclb
or
mov
orps
or
fists
insb
add
mov
test
aam
mov
push
stc
std
jne
and
test
add
scas
sahf
push
cwtl
cltd
lcall
add
ret
and
cltd
lea
test
add
jb
cmp
jecxz
enter
movsb
xchg
repz
add
out
idivb
cld
mov
mulb
jmp
je
scas
mov
cmpsl
ss
cltd
fcomp
jecxz
jmp
mov
push
jle
addb
psubd
icebp
ljmp
orb
ljmp
cmp
div
jbe
loop
jg
or
call
clc
add
call
enter
in
outsl
ljmp
mov
std
sbb
out
mov
in
loop
add
mov
in
jge
out
sbb
aam
add
jle
iret
cmp
lret
adc
mov
sbb
push
cmp
jae,pt
popa
sub
sbb
xchg
and
xchg
fucomp
nop
sbb
sub
add
aas
mov
loope
repnz
loopne
cmp
loope
stos
lahf
add
fldlg2
pop
xchg
fdivrl
rcr
cmp
cmp
or
sahf
movsb
and
mov
sbb
out
pop
jmp
mov
fmul
leave
or
or
sbb
arpl
or
loopne
xor
pop
out
int3
iret
add
add
cmpsl
xchg
xchg
pop
adc
cmp
out
lock
xchg
xchg
shll
ljmp
mov
jge
jo
pushf
pusha
lret
fmull
cmp
sbb
ja
pop
fimull
js
cmp
push
or
data16
leave
mov
xorl
mov
adc
ret
fsubrs
mov
lods
xor
cmp
enter
fidivl
sbb
mov
in
cmpsb
movsl
popl
jno
lds
cmpsl
adc
push
loopne
shll
lock
loope
hlt
mov
ja
shlb
inc
jbe
shlb
or
out
aad
popf
inc
or
xchg
loopne
jne
loopne
dec
lret
sub
mov
movsl
xor
xchg
js
lret
mov
addl
jo
sub
leave
fdivl
call
sub
out
je
outsl
jo
iret
sub
dec
loopne
or
out
in
cmp
mov
out
stos
int3
mov
pusha
lret
cmp
test
into
andl
pop
out
ret
ffreep
jne
xor
mov
or
push
or
test
add
and
mov
mov
mul
in
push
out
inc
dec
test
push
sbb
test
mov
mov
mov
nop
adc
cmpsl
dec
test
adc
nop
mov
cmp
fcmove
xchg
and
jmp
or
frstor
dec
scas
ds
and
pop
mov
addb
mov
push
ljmp
dec
test
cmp
lods
mov
xchg
cmpsl
dec
aam
in
loopne
insb
std
mov
pop
jno
nop
sbb
mov
pusha
ljmp
pop
pop
mov
sbbl
push
cmpsl
jo
sbb
test
add
cmp
int3
loopne
sarb
mov
cmpb
xchg
int3
enter
adc
frstor
jg
mov
xchg
ret
clc
je
and
xchg
and
imul
cmp
in
pushf
pop
icebp
mov
fisubl
rcl
add
cmp
mov
and
lret
int
mov
fbld
mov
xor
int
fsubl
push
out
call
and
jne
mov
das
aad
xchg
sti
icebp
js
xchg
ret
mov
mov
push
cld
scas
add
lods
clc
xchg
repnz
hlt
add
movsl
mov
cmp
gs
mov
mov
xlat
add
popf
rcrb
ficompl
cmpsl
popa
xor
jp
jecxz
stc
enter
adcl
cmp
jbe
lcall
test
xchg
xlat
dec
aam
jns
adc
cmp
rcl
lods
aam
lods
jae
sarb
add
fcmovnu
iret
aam
aas
mov
inc
jmp
jno
lock
push
aam
orl
add
sti
cmp
clc
push
call
addb
sub
fsts
sub
loop
hlt
add
scas
add
shll
inc
mov
repnz
mov
push
jb
iret
hlt
push
inc
idivb
std
add
xor
xor
mov
aad
adc
out
inc
push
cli
and
js
pop
pusha
scas
inc
cmc
inc
adc
sahf
jle
rcrb
add
imul
cmp
xor
inc
sbbb
or
jmp
testl
bnd
aas
fcomi
push
pop
xchg
mov
sub
sub
xor
shll
xor
lods
sbb
aam
in
inc
repz
shl
les
cmp
and
jb
rolb
and
in
sti
and
inc
aam
mov
out
iret
movsl
addb
leave
cmp
mov
adc
adc
pusha
inc
fldl
or
lock
inc
adc
sub
cmp
add
sub
or
pop
fsubrl
unpckhps
out
cld
inc
sub
inc
push
sti
in
loop
movsl
rolb
mov
adc
orb
iret
imul
and
cld
lock
push
ficompl
add
dec
or
dec
sbb
sub
js
mov
mov
into
add
subl
adc
dec
push
pop
inc
mov
and
inc
cs
aaa
cld
out
jecxz
rolb
call
mov
jne
add
or
data16
stos
and
or
or
rcl
and
mov
lea
pop
or
inc
idivb
and
sub
add
inc
rcll
enter
negb
add
push
pop
add
push
dec
das
add
sub
and
push
inc
out
and
pop
mov
in
aad
inc
jp
jae
nop
pop
test
pop
lret
dec
dec
dec
or
sub
and
test
ljmp
push
ret
dec
mov
jg
outsb
dec
add
xor
aas
push
add
cld
jbe
and
lahf
sti
mov
iret
shrl
cltd
lcall
test
outsb
push
adc
cmc
adc
mov
hlt
fdivs
mov
cmp
xchg
xchg
js
call
and
jecxz
out
fcomps
sbb
push
adc
lret
xadd
mov
jo
imulb
lahf
in
and
lahf
inc
jge
aas
rcl
fwait
outsl
cmp
mov
add
inc
inc
test
icebp
iret
fisttps
jnp
std
loopne
in
mov
mov
insb
popaw
pop
push
dec
and
mov
and
mov
add
fldenv
xchg
fs
push
pop
cmp
inc
repnz
xlat
inc
inc
mov
and
repz
mov
cmp
andl
les
aad
in
icebp
cmp
sbb
bound
and
fldt
dec
inc
jnp
xlat
fdivrl
imul
push
and
ficompl
aad
loopne
fchs
add
lock
jno
cmp
stc
inc
rol
inc
and
xchg
aas
pop
add
inc
jmp
mov
idiv
add
scas
xchg
rolb
fisubrs
adc
fistpll
xchg
jp
cmc
push
shll
fcompp
test
add
scas
fcmovnu
fidivs
cmp
lock
cwtl
cmp
cmpb
sbb
jp
xlat
pushf
jle
fisubl
icebp
aam
add
js
jge
and
push
imul
gs
pop
pop
xchg
dec
push
mov
mov
test
fadds
dec
push
mov
xchg
jnp
adc
or
jl
inc
jne
outsl
push
jecxz
clc
or
fidivrs
jmp
out
and
sysret
push
inc
imul
lcall
mov
jl
xor
add
or
cli
loope
jge
xor
push
pop
and
push
pop
xor
push
pop
sbb
push
pop
adc
push
pop
pop
dec
push
or
xor
and
push
pop
sbb
push
pop
jne
push
pop
inc
aas
push
pop
pop
push
push
pop
push
dec
sbb
cmp
rolb
rcrb
shlb
pushf
cwtl
sub
and
jns
cmp
imul
jle
js
adc
jne
sbb
pop
js
push
adc
sbb
or
xchg
test
cmpl
or
xchg
in
jnp
arpl
enter
or
jno
loopne
repz
mov
sbb
jge
std
rol
cmpl
xchg
clc
lahf
sbb
mov
jo
shl
int
js
pop
loopne
test
andl
xchg
imul
rolb
dec
lods
mov
pop
mov
add
mov
loopne
jbe
fsubp
loopne
stos
adc
mov
push
in
jbe
xchg
loopne
pop
push
jecxz
cli
jno
clc
mov
adc
mov
sahf
loop
push
stc
add
out
mov
cmp
sbb
sarl
inc
xchg
iret
outsb
xchg
inc
mov
ret
sahf
scas
dec
mov
and
dec
stc
js
sbb
js,pn
mov
lock
std
rcrl
dec
movl
insl
mov
jae
pop
mov
jg
loopne
out
xchg
dec
loopne
into
mov
mov
ss
and
xchg
mov
add
in
xchg
xchg
xor
dec
je
sub
push
jp
jg
jo
sbb
lea
mov
mov
and
cmpb
jo
add
jle
jo
inc
pushf
lcall
out
cmp
adc
nop
cmp
cmpsb
movsb
call
mov
pop
pop
add
bound
insb
data16
add
inc
jmp
jge
flds
mov
inc
inc
fldenv
rorb
inc
adc
inc
sbb
fwait
dec
testl
lods
gs
in
jbe
jae
push
or
xor
dec
inc
inc
add
pop
pop
ror
and
sub
daa
xor
sbb
mulb
dec
and
int
cmpsb
xchg
icebp
push
js
xchg
xchg
lcall
in
xchg
call
mov
jns
aaa
aam
add
pop
mov
add
add
inc
dec
mov
lods
pop
add
les
jp
jg
sbb
add
in
mov
or
mov
stos
and
data16
inc
shll
pop
sbb
pop
jo
pop
rcll
cmp
push
mov
sbb
outsb
add
aas
cmp
cmp
cmpsb
add
loopne
addl
xor
add
add
sbb
adc
lcall
inc
add
add
loopne
lods
add
loope
popf
je
jno
lea
mov
mov
mov
sub
fldt
insb
mov
mov
xchg
mov
insb
mov
cmp
jp
lret
int3
mov
je
daa
fadds
jb
or
pop
int3
loope
add
enter
lret
aas
out
mov
add
xor
inc
inc
ret
filds
add
popa
cli
lret
lret
jns
mov
je
xorb
add
sub
daa
sbb
mov
mov
cmpl
dec
push
dec
arpl
dec
push
inc
jp
loop
add
mov
je
mov
pop
jno
inc
push
bound
xchg
xor
out
sbb
push
and
xchg
sub
add
cmp
push
dec
arpl
sbb
shrb
cmp
add
mov
jo
mov
pop
sub
aas
xchg
and
pop
xchg
out
xchg
jmp
ds
add
repnz
arpl
inc
and
adc
mov
add
pop
push
inc
dec
inc
xor
xor
ljmp
pop
add
xor
call
push
dec
xor
cmp
cmp
in
jbe
insl
in
fdivl
mov
cmp
inc
cmp
jmp
test
nop
loopne
addb
inc
dec
push
arpl
inc
push
and
ss
les
mov
insl
push
add
cmp
shr
xor
xchg
pop
loop
dec
iret
xor
inc
push
pop
or
sbb
dec
daa
and
xlat
and
imul
sahf
cmp
cmp
scas
cmp
cmovno
push
add
jae
and
inc
pop
inc
sub
enter
dec
or
test
sahf
and
leave
shll
imul
cmpb
rol
adc
xor
clc
cmp
cmp
in
and
es
sbbb
push
xchg
mov
adc
add
jns
mov
inc
je
push
mov
jp
loopne
xchg
mov
dec
push
sub
fs
das
aas
scas
mov
xor
nop
in
mov
sub
iret
inc
dec
push
xchg
shr
cwtl
cs
in
inc
sub
ljmp
enter
add
insl
mov
or
pop
ss
inc
mov
inc
xor
cmpsl
pop
push
out
push
je
andps
dec
outsl
jb
pop
cmp
sbb
cmc
push
add
jmp
xchg
xor
ret
gs
je
mov
ret
popf
adc
cmp
rclb
dec
add
imul
jnp
inc
pop
xchg
cmp
lahf
sbb
dec
add
inc
popa
shlb
arpl
and
pop
lret
ret
inc
scas
mov
sbbb
pop
add
cmpsb
cmove
xor
mov
inc
pop
pop
push
pusha
mov
add
stos
movsb
pushf
add
mov
add
push
imulb
cltd
add
add
pop
xchg
and
pusha
jmp
and
test
inc
push
sub
mov
ror
test
stos
and
sbb
movsb
cmp
cmp
lock
or
and
div
pop
mov
sbb
push
push
mov
je
push
push
mov
inc
mov
pop
enter
jl
pop
loopne
pushf
mov
imul
cmpsb
pushf
lahf
xchg
aaa
xor
xor
and
push
jb
add
push
ds
stos
cmc
sbb
add
rcrb
out
cltd
hlt
scas
cli
add
ljmp
inc
sbb
adc
dec
jp
outsl
mov
imul
or
dec
jb
mov
out
mov
dec
or
cs
inc
daa
xchg
push
push
mov
test
int3
xchg
xchg
or
mov
clc
cmp
test
add
inc
test
pop
and
adc
or
scas
sub
jl
pop
xor
or
jp
outsl
mov
lea
jae
add
mov
inc
and
and
sbb
stos
lcall
adcl
adc
add
or
scas
jno
or
mov
test
sbb
xchg
cmp
dec
cmp
mov
shr
mov
or
inc
cmp
mov
mov
les
pop
es
add
sbb
add
cltd
or
pop
sbbl
cmp
loop
movsl
add
lods
add
mov
and
jae
pop
pop
shlb
adc
mov
jne
or
xor
lock
add
mov
add
inc
xchg
mov
or
scas
cmp
or
cld
mov
push
insb
out
daa
cltd
jo
sub
adc
negl
ret
test
mov
inc
pop
les
ljmp
sub
inc
leave
mov
clc
xchg
push
pop
push
mov
cwtl
fwait
add
and
add
xchg
adc
inc
jb
adc
sub
filds
cmc
mov
dec
mov
or
ljmp
mov
xor
cmp
mov
pusha
jno
adc
andb
adc
jb
roll
stos
fwait
popf
mov
lahf
add
mov
addr16
mov
pop
fwait
push
or
mov
cmp
cmp
mov
cmp
sub
add
test
orl
gs
das
dec
leave
mov
push
and
rcll
sbb
out
inc
xchg
sub
pop
and
or
ljmp
mov
adc
pop
pop
push
test
jg
lds
xchg
or
addl
and
xchg
xchg
inc
sbb
adc
out
lock
cmpsb
push
ljmp
sub
out
jmp
out
or
ret
adc
sbb
orl
loop
cmp
sbbb
add
or
jle
lahf
mov
adc
movsl
lock
addl
test
cmc
push
sbb
pop
fs
bound
mov
call
popa
adc
push
dec
jae
in
mov
inc
popa
ret
cmp
xchg
mov
adcb
es
push
add
aas
sub
mov
test
and
xchg
mov
and
adc
push
and
inc
movsb
pushf
cmp
fadds
out
jb
mov
mov
pop
adc
adc
sbb
pusha
in
jmp
cmp
add
out
movsb
test
test
orb
push
ja
repnz
jle
jb
jg
pop
adc
movsl
not
add
adcb
jbe
push
popf
sbb
jg
cmpsb
push
push
and
push
ret
lods
je
mov
in
imul
cmp
dec
pop
mov
call
fs
jmp
adc
sbb
scas
movsl
mov
add
mov
and
or
mov
add
adcl
xchg
mov
sub
sbb
sbb
repz
loopne
aas
mov
pop
xchg
mov
pushw
aas
add
lods
into
fildl
ds
fsub
push
in
or
bound
notb
idivb
sbb
mov
add
pop
add
xchg
adcl
adc
mov
or
je
nop
sbbl
popf
xchg
in
clc
fsubrs
rcrb
adc
or
out
outsb
push
pop
dec
gs
and
fstps
sahf
sbb
and
xchg
push
xchg
cmpl
add
orl
and
and
xchg
pop
add
cmc
cmp
lahf
pop
loope
sbb
popf
cmp
mov
sub
fildll
jns
outsb
xor
add
xchg
adc
jne
into
and
mov
gs
ljmp
stos
mov
xchg
test
xor
adc
xchg
adc
repz
rcll
lods
stos
in
stos
sbb
xchg
addb
pusha
test
test
adc
and
fwait
inc
popa
add
sbb
pop
test
nop
js
callw
bound
movsb
movsl
or
and
add
fiadds
clc
lret
stos
divl
cmpsb
lahf
add
add
test
cmc
scas
idivl
jle
pusha
sbb
adc
loop
je
shlb
mov
call
push
jbe
xchg
call
mov
jnp
push
add
or
add
imulb
negl
lahf
adc
add
sbb
lods
aad
sub
test
adc
xchg
popf
xchg
mov
sbb
pop
mov
enter
aam
pop
rorb
mov
mov
mov
rolb
add
fucomi
data16
add
adc
mov
xchg
and
cli
dec
pusha
addl
adc
mov
loope
jo
xchg
add
or
mov
push
test
lods
clc
inc
imul
add
jns
ljmp
imul
dec
and
lcall
mov
faddl
in
in
mov
sub
push
or
movsb
or
add
xchg
xor
pushf
add
sub
and
jmp
mov
cwtl
ret
dec
add
testl
push
lods
and
sarb
jge
mov
mov
jae
call
fisttps
xor
inc
jmp
jnp
gs
js
scas
sub
test
or
xorb
daa
jno
add
xor
xchg
pop
lods
adc
pop
mov
mov
or
test
fcomi
hlt
in
push
jns
rcr
inc
push
adcl
jbe
mov
imul
sti
xor
jns
loopne
ret
pop
ffree
xlat
jmp
movsb
and
es
pusha
mov
ds
xor
adc
push
fwait
pop
mov
mov
cmc
cmpl
sbb
sbb
add
sbb
jb
add
jnp
enter
int3
or
je
sub
add
cmp
jae
add
push
jb
frstor
aam
jge
into
cmp
enter
fadds
mull
sub
mov
mov
jle
xchg
pushf
sub
adc
in
sbb
loopne
rcrl
data16
je
sarb
ljmp
mov
xchg
jno
inc
dec
xor
push
call
push
shr
filds
jae
in
jl
cmp
push
cmpsb
and
or
stos
xchg
sub
sbb
sbb
test
adc
stos
push
sbb
or
sbb
out
iret
ljmp
ret
lret
icebp
xor
pop
and
outsl
outsb
and
cmp
daa
xchg
or
faddl
rcr
shl
pop
out
jne
jne
push
jmp
mov
mov
cmp
adc
stos
lods
add
dec
pop
movsb
es
cmp
cmp
sbb
cmp
sub
pop
repz
jge
ret
fcomp
or
int
sbb
xchg
ds
cmpsb
inc
dec
and
add
int3
in
jmp
lock
call
fucomi
divl
outsb
mov
pop
cmp
inc
daa
inc
and
xor
outsl
pop
mov
and
in
loope
repnz
jl
sbb
lock
inc
out
icebp
loop
jbe
lds
fmulp
push
in
les
sub
pop
pop
inc
ss
in
rolb
sbb
out
mov
mov
lret
lret
out
loopne
jae
jb
add
sbb
jp
icebp
call
aad
shl
sub
mov
inc
ret
push
rcr
mov
push
loope
addr16
lret
jp
jae
daa
inc
jae
push
pop
jle
mov
and
lret
jne
into
jns
loope
jb
fdivr
mov
fnstcw
add
jmp
rolb
negb
push
out
js
js
add
sbb
out
scas
pusha
into
enter
call
loope
ja
jno
loopne
outsl
inc
fxch
jnp
mov
fbld
and
mov
dec
pusha
test
dec
mov
rcrb
add
out
pop
rcrl
jae
mov
push
add
out
jecxz
out
jl
into
cmp
aas
push
repz
lret
xchg
mov
repnz
out
mov
push
int
inc
adc
aam
jecxz
outsb
ds
loopne
js
jmp
jae
xchg
insl
aam
loop
xchg
add
sbb
push
cmpsb
test
jmp
mov
outsb
jl
xor
add
jmp
lret
ljmp
shl
push
and
fsubp
leave
ret
jb
repnz
or
jl
addr16
shlb
out
add
in
clc
xlat
loopne
sbb
pop
loope
in
int3
loopne
jb
add
fisubs
push
js
mov
pop
mov
sti
ret
dec
sub
loopne
cwtl
add
jbe
push
lock
nop
daa
je
in
ret
add
leave
sarl
jg
dec
ffree
push
push
mov
das
data16
add
repnz
call
scas
add
aam
ja
pusha
dec
fmulp
sub
mov
cmp
jbe
add
mov
in
pusha
xchg
mov
int
jl
enter
es
fcmovnu
ret
add
iret
mov
call
jl
aam
fldl
mov
and
push
sbb
jb
test
clc
cmc
testb
int
sub
mov
data16
out
fadd
jno
lds
imul
out
add
loopne
lods
or
ljmp
fnstcw
add
ljmp
and
loop
fadds
fstpl
jecxz
fldcw
mov
xor
jo
shlb
or
into
filds
repz
fldenv
jle
add
lock
cmp
mov
mov
lock
pop
jp
fstl
sbb
mov
rclb
cli
jne
nop
ret
fcmovne
push
enter
mov
in
inc
out
shr
inc
sbb
imul
call
out
clc
add
out
fsub
out
inc
pusha
andb
fldenv
pop
negl
sub
cmp
mov
push
jge
je
lds
sub
dec
loop
cmp
pop
lret
pusha
lds
pop
adc
push
mov
fnstcw
xlat
jmp
jge
hlt
je
ret
mov
int
in
or
mov
cs
pop
aam
ret
lret
jmp
loopne
in
aad
fdivrs
sub
or
mov
push
or
and
es
andl
shlb
mov
enter
out
jp
jmp
in
ret
cmpsb
clc
fcomi
pop
in
jnp
add
add
scas
lock
sub
fnstcw
shl
jno
xlat
jo
ret
scas
pop
test
adc
add
imul
aad
mov
ror
push
jne
add
mov
fdiv
addr16
in
sub
or
loope
or
sbbb
loopne
repz
add
mov
jl
jl
push
adc
lock
aad
addr16
jbe
cwtl
lea
mov
mov
in
pusha
cwtl
into
cmp
jecxz
leave
js
mov
add
jmp
lock
sub
jp
cmc
clc
in
xorl
rcr
loop
pop
mov
rolb
jecxz
xor
pop
jne
outsb
or
data16
or
inc
mov
je
mov
xlat
jns
push
loop
addr16
cld
flds
ror
out
in
jmp
clc
hlt
icebp
out
cmpb
int3
shll
pusha
mov
insl
and
out
loop
pusha
mov
push
fisubs
mov
mov
jb
int
psrld
int
js
cmp
pop
scas
je
mov
lds
ja
loop
mov
jbe
ljmp
cmp
into
push
shlb
and
es
popa
inc
aam
mov
jne
pusha
clc
enter
mov
shrl
jnp
fnstcw
enter
cs
ljmp
jae
je
jno
movl
jecxz
mov
jbe
mov
jae
js
aad
add
ja
iret
mov
add
cmc
and
mov
fwait
cmp
pxor
jbe
mov
jge
jne
jbe
sub
lret
mov
loop
es
jmp
shrl
jb
add
lds
aad
pop
shrl
add
gs
shlb
jno
fs
or
jnp
add
hlt
mov
push
out
loope
lret
popa
pop
mov
dec
push
xor
add
mov
repnz
out
insl
data16
aad
sub
jb
shll
push
bound
loopne
addr16
mov
add
jmp
lret
data16
imul
mov
outsl
rorb
out
jnp
mov
lds
jp
jno
pop
mov
pusha
js
shlb
in
pop
loopne
in
cmc
push
loop
mov
addr16
fldenv
xor
sub
aad
aad
mov
pop
lret
lock
loope
mov
xchg
iret
cld
pop
sub
daa
add
jecxz
nop
cmp
jnp
add
fidivrs
jmp
into
xor
out
jo
dec
jg
dec
call
or
je
int3
test
in
sbb
bound
int
scas
shl
pop
mov
fistps
dec
pop
in
pop
pop
jge
pusha
rcll
and
add
gs
loope
int
shl
out
sbb
scas
add
hlt
mov
in
sub
push
out
int
leave
call
mov
shr
sub
enter
mov
imul
add
mov
jp
shrl
mov
jno
bound
test
sub
and
int3
rcl
outsb
shr
jecxz
in
sub
jae
adc
gs
jbe
fdiv
shll
out
sbb
cld
mov
ljmp
pop
mov
adc
out
call
jo
jge
push
pusha
out
lock
jp
test
sub
sub
aad
sbb
adc
jns
add
lock
push
insb
outsb
jge
push
add
ror
jl
jge
add
and
repnz
in
test
add
lock
fucomip
aad
mov
sub
push
sub
rcr
ja
pushf
jp
inc
js
jge
je
and
loop
add
outsb
mov
push
cmp
aam
jl
outsl
cmp
mov
add
jnp
inc
or
btr
mov
mov
sub
int
jns
daa
push
push
mov
loop
and
pusha
sbb
hlt
sub
fsub
push
aad
stos
jl
loope
adc
je
mov
ror
push
jns
jp
cmp
mov
outsl
jb
loopne
mov
scas
outsl
insl
mov
jno
mov
mov
in
fld
mov
out
inc
popa
out
in
aam
add
out
mov
mov
std
call
jns
mov
lret
popa
fdivrs
scas
je
rcr
dec
jb
xchg
fidivs
mov
imul
je
add
out
imull
in
and
repnz
lds
jb
hlt
push
repz
mov
mov
rorl
vpcmpgtw
outsl
insb
jge
mov
movb
in
data16
and
xlat
mov
je
jp
dec
xlat
mov
loop
mov
in
aam
ss
mov
out
stos
add
jmp
clc
loope
repnz
shrb
roll
mov
loope
adc
cmc
jecxz
cmp
jnp
enter
mov
fs
add
out
hlt
repnz
jmp
jnp
jecxz
adc
leave
in
rol
or
frstor
out
repnz
scas
loopne
ret
in
mov
call
fdiv
div
clc
js
add
sub
push
sbb
fsubp
jno
shr
loopne
int
in
into
aas
shlb
outsb
addr16
mov
popa
adc
scas
shl
pop
xlat
insl
fsubs
shlb
add
ljmp
or
fsubl
mov
out
mov
scas
or
icebp
add
mov
add
ret
int3
in
enter
jnp
sub
call
sub
aam
fidivrl
loop
gs
pop
bound
mov
or
jecxz
lret
mov
loopne
fldcw
add
add
mov
loopne
sbb
pop
push
fistps
cmc
cs
push
lock
mov
flds
out
loopne
out
and
cmc
minps
lret
jecxz
aad
es
push
in
mov
sbb
jmp
bound
push
mov
iret
je
nop
mov
es
sbb
lret
aam
sbb
call
leave
mov
cmp
shlb
add
je
sub
cmc
cli
sarl
xchg
mov
lret
clc
in
cmp
rcl
jo
ljmp
add
mov
sarl
lret
mov
shlb
add
in
leave
into
cld
sub
add
sbb
es
sub
pop
rolb
les
mov
js
rcr
jmp
xor
mov
cmp
repz
int3
mov
fidivrs
into
lock
cmp
jbe
loop
aad
stc
push
ret
add
shrl
les
aam
xchg
jmp
jecxz
shr
hlt
adc
js
in
mov
out
jecxz
add
jo
fs
scas
or
out
add
fstpt
in
shlb
jnp
add
ret
fs
jb
loopne
add
mov
xchg
jl
in
jb
call
jo
aad
hlt
pop
in
aaa
lret
repnz
mov
ret
ret
leave
mov
pushf
push
push
je
roll
shlb
jb
mov
into
jl
jbe
cmp
fiaddl
sub
jns
rcl
jo
jne
movl
pop
bound
enter
fldenv
add
jbe
fdivrs
pop
pusha
pop
enter
jge
cs
jns
std
ret
and
insl
and
pusha
dec
or
fiadds
in
enter
add
ljmp
div
cwtl
cmp
icebp
out
cmc
adc
push
mov
insl
aam
add
jl
fists
xlat
fcmovnbe
adc
xor
imul
test
pusha
fcoml
les
filds
clc
mov
insb
add
mov
repz
jmp
cmp
aas
faddl
lret
test
jo
and
jnp
push
inc
out
rol
pop
bound
jl
loop
aam
loopne
mov
or
imul
cmpl
rol
cmp
inc
cmp
pop
in
jnp
mov
mov
fcmovne
jecxz
add
jb
jns
sub
ljmp
add
jno
not
ret
cmp
out
ret
in
xchg
leave
push
je
scas
cmpb
data16
pop
js
push
mov
mov
cmp
repnz
or
and
jns
leave
data16
fs
addr16
clc
fs
enter
aad
insb
jno
ja
je
pop
xlat
jae
add
icebp
add
sarb
iret
sub
fdivs
xlat
push
cld
insb
mov
jbe
mov
movsl
cmc
pusha
loope
jae
cli
jnp
insb
mov
shr
popa
mov
fadd
mov
mov
es
scas
xlat
mov
out
loope
mov
ljmp
mov
ud0
inc
out
shlb
jae
ret
mov
sub
aad
add
fmulp
jbe
jns
mov
jb
jl
es
aam
and
add
out
addr16
mov
cld
cmpsb
bswap
ja
ret
jge
lret
jl
dec
rol
call
call
adc
in
jmp
sub
nop
dec
fs
aam
add
int3
fnstsw
je
jno
add
rcr
lret
ljmp
call
jbe
jae
insb
cwtl
into
cli
ret
jp
push
pop
ds
cmp
inc
adc
xor
inc
push
hlt
add
pop
jns
gs
out
push
ljmp
cmpsl
sub
icebp
mov
mov
push
fstps
je
jno
iret
add
ljmp
call
out
rol
sub
insl
sbb
roll
fimuls
xor
xor
dec
dec
dec
cs
mov
add
js
mov
mov
jp
aam
icebp
jo
loop
js
loopne
into
insb
dec
arpl
push
in
add
cmc
in
loop
mov
sarb
xor
movb
jae
je
addl
cs
pop
push
add
aas
addr16
outsl
fldl
shrl
in
rep
add
fcmovnu
fidivrs
je
mov
es
mov
sbb
je
imul
enter
inc
icebp
sbb
jns
imull
fnstenv
xlat
inc
sub
inc
je
mov
sub
loope
je
add
fdiv
lret
lret
cmp
sub
je
jbe
int3
fadds
jecxz
mov
and
push
xor
xchg
dec
jmp
idivl
jno
cmp
rep
popa
add
push
jg
mov
push
push
dec
pop
mov
sti
xchg
ds
daa
adc
pusha
sbb
lret
int3
leave
dec
xlat
ret
sub
scas
add
enter
je
add
inc
inc
dec
dec
popa
add
push
dec
push
enter
insb
adc
ret
jbe
fcmovnu
fadd
fisttpll
out
jo
out
aad
sub
push
popa
stc
jp
dec
in
insb
sbb
push
rolb
add
and
or
add
aad
aam
test
cmp
pop
inc
and
push
adc
jmp
jo
jne
aaa
jb
inc
push
in
out
icebp
aaa
leave
mov
loope
jmp
lahf
rorb
add
rcrb
jae
add
xor
je
adc
test
ret
jb
in
into
loope
mov
sbb
add
shlb
inc
adc
push
dec
adc
pop
inc
in
out
fnstenv
inc
test
in
xorb
sbb
repnz
cmp
scas
add
cmp
lret
aad
roll
rcr
jmp
jb
push
dec
inc
pop
pop
xchg
comiss
add
loop
shll
loop
aad
mov
xchg
sbb
and
pop
push
pop
int3
fiaddl
rcrl
cmpsb
leave
js
jno
push
shl
mov
mov
sbb
jbe
out
add
pushf
out
mov
shl
in
imul
jns
push
jno
mov
xchg
cmp
loope
loopne
fimull
pop
je
insb
xlat
iret
add
inc
and
les
sbb
shlb
dec
jmp
iret
mov
jmp
mov
lods
mov
fildl
imul
mov
aad
int3
mov
add
ds
pop
daa
sbb
adc
sahf
add
mov
add
inc
insl
xlat
loopne
arpl
int3
rol
adc
mov
mov
add
jo
fldlg2
sub
icebp
dec
jns
subb
shlb
pop
jecxz
sbb
mov
and
nop
gs
pusha
adc
and
imul
mov
sbb
loop
out
js
jl
cmp
enter
cmc
and
js
jb
in
lds
pushf
outsl
shll
gs
shl
out
and
rorb
hlt
xchg
mov
ja
or
and
int
hlt
mov
sbb
dec
xchg
mov
jg
je
add
pop
addr16
mov
cltd
pop
faddl
push
jmp
cmp
jne
ret
aam
xchg
mov
sub
jmp
push
int3
jmp
loopne
fsubrl
dec
xchg
sarl
roll
mov
push
push
inc
xchg
and
jp
mov
in
add
xor
or
push
jecxz
out
push
sub
jecxz
jmp
or
ret
je
lret
dec
pop
cmp
xacquire
hlt
mov
enter
add
mov
pusha
ja
jnp
leave
pop
add
int
repnz
loope
sbb
ror
outsl
in
mov
ds
adc
cmp
out
sahf
mov
cmpsb
cmp
inc
jp
in
mov
lock
out
sub
les
mov
out
cmp
inc
repz
gs
xor
jo
ret
int
andl
cld
fidivrs
cli
cmpb
inc
inc
cmp
lods
mov
sahf
cmpsb
inc
xor
xchg
int
sub
jae
cltd
mov
leave
inc
repz
jmp
repnz
adc
test
lahf
es
xlat
add
outsb
dec
call
jmp
in
jne
scas
xor
mov
out
jae,pn
cli
push
fidivrs
push
pop
je
mov
push
or
lahf
xchg
pop
das
mov
out
iret
mov
mov
test
mov
push
jcxz
jp
add
sub
mov
cli
shlb
xchg
mov
out
js
rcr
pop
and
imul
loop
aad
cmp
adc
movsl
fdivrl
in
fadds
shll
dec
inc
pop
mov
push
xchg
sbb
inc
cmp
mov
cmc
out
pop
jmp
mov
jno
rorl
mov
out
enter
mov
ret
mov
adc
rolb
loop
insb
insl
clc
mov
les
mov
xlat
sub
ret
add
jb
movb
jno
mov
test
pop
jnp
add
mov
clc
gs
mov
mov
add
jmp
sub
imul
lock
xchg
mov
ret
in
dec
dec
push
sbb
rcr
in
mov
sahf
push
lret
loope
jo
cmp
out
aas
push
add
xor
mov
aam
add
and
out
cmp
push
ret
jae
dec
jge
sub
test
out
xchg
call
lds
fistps
xor
bound
nop
int
outsb
push
and
pusha
mov
clc
jmp
es
inc
fs
je
je
push
int
mov
out
xor
adc
push
inc
clc
jg
rcl
shrl
push
mov
cmp
or
idivl
xchg
sub
in
sbb
call
add
mov
lret
movl
xor
cmpsl
je
cmp
js
outsb
lret
jecxz
pop
leave
jae
addb
je
ret
pop
loope
ror
push
in
inc
pop
ljmp
outsl
add
cwtl
pusha
fmulp
jmp
je
xor
ljmp
pop
fucomi
adc
out
mov
mov
loopne
inc
jae
enter
cmpsl
je
xor
ja
roll
repnz
repz
and
mov
adc
sub
xchg
lret
leave
repnz
sub
or
leave
cmpl
dec
in
inc
out
aam
outsb
mov
jb
sahf
cmp
cwtl
add
cmp
pop
jns
add
iret
mov
les
subb
add
jp
sub
add
mov
add
in
sub
clc
dec
stc
cmp
or
loope
add
subl
jae
shlb
add
jnp
xor
leave
test
shl
mov
ds
call
shl
addr16
mov
mov
mov
insl
add
imul
jbe
leave
sbb
mov
or
enter
fs
sarl
mov
mov
aad
in
sahf
setg
inc
xor
loopne
mov
pop
add
jns,pt
in
es
imul
shl
cld
call
fmull
add
scas
clc
in
stos
xchg
out
jnp
push
bound
mov
adc
mov
add
cmpsb
adc
inc
ret
insb
iret
icebp
jae
cmp
dec
add
in
add
imul
xor
loope
ret
movb
scas
div
fnstcw
mov
fsubrp
sbb
data16
dec
rol
add
les
ret
scas
daa
insb
sbb
adc
enter
out
fs
aad
dec
sbb
or
daa
inc
js
ds
insb
outsl
ss
xchg
sbb
add
js
jmp
out
fisttpll
pop
scas
xor
fdiv
adc
inc
cmp
inc
in
in
jo
mov
call
push
enter
xchg
xchg
rolb
mov
xchg
sahf
or
cmp
mov
addb
push
adc
jo
add
fbld
repnz
add
mov
in
mov
jp
imulb
sub
or
bswap
es
scas
in
shll
jp
std
mov
inc
in
fdivrs
out
push
fs
sub
pop
xor
enter
pushf
rep
inc
dec
sub
adc
mov
rcr
mov
gs
scas
shl
mov
add
jp
jle
jmp
jae
add
scas
repz
jmp
shr
jo
enter
dec
cmp
mov
das
inc
push
xor
and
and
out
in
sub
add
push
inc
daa
addb
mov
mov
mov
hlt
sub
ljmp
jb
jmp
ret
lahf
xchg
xor
adc
cmc
repz
in
xchg
int3
sub
jns
inc
mov
dec
inc
pop
xor
sbb
push
enter
andl
inc
and
xorb
pop
aaa
jl
add
fists
add
hlt
in
fld
loopne
leave
cwtl
inc
xlat
push
add
hlt
andb
push
lret
jp
cmp
enter
cmp
imul
cwtl
push
hlt
add
outsl
subb
xchg
sbb
test
sub
jns
add
lret
cmc
out
in
in
jo
adc
call
mov
pop
lret
mov
inc
xor
sub
dec
dec
push
sqrtps
inc
xchg
es
std
popf
add
mov
je
lds
stos
aas
rolb
dec
jno
add
push
push
popa
jp
js
loopne
mov
or
vpinsrw
jg
add
lds
push
xor
cmp
jb
dec
push
pop
cmp
pop
xchg
fmull
ret
pop
mov
sti
pop
in
lret
fwait
mov
mov
jecxz
mov
push
push
mov
inc
inc
mov
ss
or
aad
push
movsb
scas
add
push
pop
test
jae
dec
mov
repz
rclb
mov
ja
mov
push
scas
adc
dec
dec
sub
jne
push
movsl
mov
add
pop
inc
lret
jno
pop
lahf
cmp
pop
dec
int
je
ds
push
inc
dec
jmp
ja
insl
imul
xor
lds
jmp
add
inc
orb
in
mov
fcoml
push
mov
push
outsl
lahf
xor
mov
shlb
mov
in
out
lods
push
icebp
pop
dec
push
lds
add
loopne
fisubrs
insl
mov
jg
push
call
sbb
mov
mov
dec
sbb
jno
push
dec
add
sub
adc
in
je
mov
push
das
xor
push
js
mov
mov
je
jbe
pop
push
pop
lds
popa
jmp
jmp
fidivrl
hlt
pop
xor
out
out
xor
cmp
pop
push
imul
or
dec
outsb
inc
jb
popa
addr16
push
stc
mov
adc
fdivs
xor
incl
xor
or
inc
mov
pop
cmp
push
inc
mov
les
dec
stos
push
and
pop
add
pop
fdivrl
mov
adc
adc
lock
mov
mov
xor
stos
fidivrs
mov
sbb
sub
cmp
add
dec
add
cmpsl
neg
or
pop
cmp
add
sub
add
orl
out
push
add
std
sub
loop
xor
xchg
jp
push
sbb
dec
push
pop
xchg
add
dec
jbe
and
shlb
mov
adc
cmp
in
jne
rcl
mov
dec
push
cmc
out
popf
or
or
jno
xchg
sbb
fwait
xor
shrl
xchg
dec
cmp
out
inc
aaa
dec
sbb
js
jae
push
add
push
insb
jbe
adc
js
loope
add
sbb
inc
cmpsb
jbe
xor
outsb
rorb
insl
dec
mov
push
jae
icebp
push
les
jecxz
push
orb
jbe
dec
aam
push
je
insl
in
adc
rorl
mov
inc
xchg
pusha
jae
imul
dec
jne
lods
mov
sub
lret
insb
mov
adc
or
inc
inc
lock
sbb
ud2
inc
xor
jl
nop
je
cmp
fsubrl
in
mov
pop
mov
sub
ds
sub
push
frstor
sub
or
or
adc
push
adc
mov
and
or
sbb
push
adc
dec
andl
sub
sub
cwtl
adc
or
cld
je
insl
xor
fists
jle
pop
movl
les
push
lret
sbb
test
add
imul
shrb
inc
mov
outsl
stc
inc
pop
andl
jno
mov
aas
outsl
dec
xor
outsl
xchg
push
mov
jg
outsl
and
insl
cmpsl
or
sub
jbe
sbbl
or
xor
or
push
sub
add
or
and
mov
or
jp
rcll
lcall
inc
jb
outsl
jne
pop
subl
cs
addr16
into
loop
mov
mov
fmull
loope
pop
push
push
lods
adc
mov
xchg
lret
imul
jecxz
insl
cmpsl
sub
add
test
lods
sbb
testb
pop
or
push
pop
push
inc
dec
or
arpl
cwtl
test
cmp
sub
pop
pop
lods
and
or
addr16
repnz
leave
push
fdivrs
xor
add
mov
xchg
test
push
lods
inc
dec
cltd
pop
mov
js
push
in
sbb
or
xor
dec
or
lods
fdivr
stos
mov
cmp
jne
sub
shll
mov
insb
dec
inc
call
xor
or
cmpsl
mov
sbb
jl
lea
adc
cmpb
jne
jb
pushf
fcoml
pop
sarl
outsb
and
mov
sbb
sbb
stos
push
sub
adcl
call
mov
xchg
and
dec
or
stos
enter
or
and
mov
fldz
xor
add
push
outsl
repz
dec
or
dec
jae
das
mov
dec
call
and
in
mov
scas
mov
sub
push
sub
pushf
jae
cmp
stos
scas
inc
mov
pushf
sub
mov
insb
pop
mov
push
fdivrs
pop
jns
mov
dec
or
inc
push
and
xchg
jns
gs
lods
mov
xchg
push
jbe
and
cmp
cli
dec
jae
testl
inc
xchg
popl
inc
xor
jnp
inc
in
inc
leave
xchg
jne
cmp
or
inc
aam
push
out
xchg
stos
push
inc
or
daa
pop
cs
imul
adc
dec
out
adc
test
jl
push
pop
jae
shlb
pop
mov
pop
push
add
jmp
fs
jno
add
and
push
dec
and
imul
xor
pop
xorb
fildl
mov
jbe
arpl
jae
in
xchg
mov
push
push
addl
pop
push
roll
test
add
push
jg
push
ss
push
xor
pop
adc
jns
outsb
xor
and
mov
jae
arpl
ss
or
pop
ss
orb
push
sub
jo
mov
bound
dec
insb
sub
sub
mov
cli
adc
xchg
popa
stc
mov
das
push
sub
or
pop
or
cld
jge
bound
pop
imul
or
mov
mov
dec
pop
gs
pop
inc
cmp
arpl
jae
or
popa
imul
add
or
mov
adc
jmp
push
sub
adc
cmp
jns
movsl
and
push
dec
jmp
into
dec
imul
sahf
loope
push
xchg
cmp
mov
push
sbb
fs
adc
jb
bound
das
roll
stc
push
cmp
lods
add
cwtl
push
int
push
stos
and
or
xor
dec
insb
mov
dec
arpl
add
xor
test
fldt
sub
nop
pop
mov
and
jae
adc
dec
pop
xchg
and
dec
or
xchg
mov
jl
pop
adc
cmpsb
int3
inc
sub
adc
rcll
idivl
les
sub
fbld
and
xchg
dec
jne
jno
cmp
jno
or
cmovnp
insl
pop
ret
sahf
ljmp
outsl
popa
adc
pop
fwait
xchg
inc
loop
popf
mov
push
popf
fildl
fiadds
sbb
rolb
xor
adc
sbb
add
ret
push
and
test
inc
repz
scas
and
jo
inc
push
adc
xor
xor
xor
inc
sbb
sbb
push
adc
add
pop
mov
sbb
pop
lds
in
in
data16
cmp
imul
mov
adc
enter
aas
das
ret
lcall
lods
lret
jne
ss
movb
xor
and
and
jl
sub
push
sbb
push
dec
mov
bound
adcb
push
sub
clc
adc
enter
ds
add
sarl
xor
xor
negb
pop
aaa
or
mov
test
xchg
push
mov
cltd
pop
imul
xor
outsl
or
loopne
xchg
push
pop
sbb
mov
xchg
xchg
xchg
stos
movsb
jbe
cmp
pop
sbb
into
cwtl
xchg
push
xchg
xchg
or
movsb
jo
sbb
test
stos
sub
xchg
xor
cld
loopne
cmp
ljmp
cltd
addl
mov
jnp
push
pop
je
push
pop
sbb
fwait
jecxz
test
js
mov
js
xchg
loopne
jmp
cmpl
movl
outsl
js
imul
sbb
pop
js
mov
pop
dec
scas
push
pop
cwtl
cltd
sbb
addl
or
out
push
sbbb
imulb
in
or
sbb
pop
mov
mov
iret
xchg
push
inc
loop
add
clc
xlat
sarb
pop
fidivs
loopne
push
fwait
int3
ret
xor
int3
js
out
shl
rcl
fcmovnb
adc
xchg
mov
dec
icebp
popf
loopne
aam
call
loopne
addr16
shl
std
add
jmp
adcb
adc
mov
andb
js
sbb
mull
lods
cmp
loopne
cmp
cli
or
repz
pop
pusha
fldcw
rcr
andb
nop
mov
mov
lret
rol
push
or
fiadds
rcr
clc
in
test
lods
mov
cmp
jmp
cmp
mov
mov
xchg
iret
sbb
mov
ret
or
mov
mov
mov
ja
jp
loopne
popl
mov
shlb
xchg
mov
jb
filds
sbb
fsubr
push
mov
cmc
adc
mov
push
icebp
lods
enter
subl
les
mov
fildl
mov
lds
mov
rolb
lret
roll
or
xlat
loopne
dec
xchg
mov
stos
nop
sbb
andb
nop
les
int3
or
mov
mov
int3
pop
fcoml
jae
mov
dec
pop
imul
jo
es
add
outsl
jne
pop
pop
pop
arpl
rcr
inc
adc
in
add
test
jbe
push
cmp
dec
add
jnp
jo
mov
adc
xchg
lcall
push
add
shll
add
dec
ret
cmc
xchg
repz
fwait
pushf
lcall
pop
xchg
nop
aam
push
pop
xor
fs
adcl
lea
fsubr
push
xor
inc
push
inc
js
inc
inc
ret
test
movsb
dec
lds
js
iret
pop
cmp
cmp
jp
jl
pop
shlb
xchg
jnp
lea
mov
nop
push
push
xor
cmp
jmp
inc
test
mov
mov
insl
mov
in
sbb
add
inc
mov
jno
in
mov
cmpsl
hlt
adcl
mov
sbb
imul
roll
add
add
cld
cmpsb
nop
mov
xchg
fisubrs
jo
fldl
rcl
mov
xlat
jle
jns
lahf
outsl
push
mov
fildl
jp
fcomp
int3
fsubp
jecxz
rep
mov
xchg
shrl
add
ljmp
add
jmp
shrl
or
les
mov
in
sbb
add
jecxz
out
sub
sti
enter
and
shl
bnd
out
fiaddl
aad
in
sbb
and
inc
mov
stos
mov
loop
and
inc
aam
clc
in
testl
and
shlb
xchg
bound
jmp
mov
mov
daa
fstpl
rcl
and
icebp
in
dec
addl
jo
xchg
jp
cld
mov
mov
scas
fdivl
test
fisttpll
fldcw
adc
popf
mov
mov
popf
xchg
jge
pop
mov
rclb
xor
stc
jge
cwtl
and
loopne
jmp
xor
in
loop
dec
inc
pop
lea
imul
std
sub
add
rcr
out
pop
orb
enter
popf
push
jg
mov
sbb
pop
and
cmc
and
rolb
in
mov
mov
loop
mov
popl
pushf
xchg
imul
add
das
and
into
pop
jnp
addb
insl
push
out
inc
insl
add
cld
xchg
jno
sbb
shrl
sbb
push
push
and
es
js
pushf
add
jl
dec
incb
pop
and
add
aas
in
scas
and
cmpsl
pop
pop
push
adc
add
mov
cmp
rorb
daa
lods
and
pop
push
pop
xor
scas
adc
mov
shl
lret
and
rcrb
inc
pop
dec
cs
add
dec
inc
or
lret
fidivrl
add
dec
cmpl
dec
ret
and
add
fsub
sub
mov
loopne
or
pop
dec
or
xor
add
sub
sub
xchg
inc
mov
jns
data16
add
sbb
hlt
lea
hlt
xchg
add
push
jle
xor
fidivrl
mov
iret
push
sub
mov
inc
fsubrs
pop
xchg
aaa
adc
or
lcall
lock
hlt
push
out
push
popa
adc
adc
xchg
lds
and
testb
sub
insl
mov
mov
add
dec
push
and
daa
and
imul
xor
cmp
inc
pop
neg
rorb
and
out
ret
inc
ds
dec
sub
or
mov
xchg
dec
cmp
cmc
xchg
inc
ljmp
loope
sahf
lsl
pushf
inc
adc
add
cmp
cmp
dec
loop
push
loope
rcl
out
lcall
fst
rcll
out
iret
add
add
in
cmc
out
or
loopne
gs
clc
rcl
add
fsubp
call
add
in
sub
pop
mov
jbe
and
scas
je
lods
jle
jge
test
fldl
fmuls
mov
jp
aam
sub
mov
dec
sub
pop
cmpsl
roll
and
lods
mov
xor
ljmp
dec
ja
inc
and
out
cmp
jmp
dec
xlat
test
push
jo
sbb
cmpsl
test
mov
stos
add
clc
cmp
mov
lock
push
xchg
movsl
lock
test
cs
inc
es
sarb
stos
popf
jae
mov
pop
ret
dec
bound
cmp
movsl
push
mov
mov
insl
aam
inc
mov
mov
push
repnz
push
adc
out
ss
out
sbb
mov
push
int3
ret
cmp
mov
movl
cmp
out
lock
testb
cmc
in
sbb
xor
xor
mov
fnsave
repz
mov
stc
jno
mov
jns
insb
xor
js
leave
shll
cli
hlt
jecxz
addb
inc
adc
mov
sti
neg
test
xchg
aam
or
popa
leave
adc
jne
mov
into
pusha
jle
stc
jecxz
aam
sub
xchg
orl
and
dec
orl
sbb
jl
sbb
outsl
insl
aam
inc
cld
loopne
fidivl
jl
inc
ret
clc
jno
loopne
xchg
sub
push
xchg
mov
push
or
movl
adc
mov
xchg
xchg
push
cwtl
xchg
loopne
faddl
popf
rorb
test
sbb
addl
subb
subl
xchg
add
mov
mov
mov
shl
lods
mov
or
mov
or
mov
pusha
stos
bound
mov
and
mov
popa
xlat
push
fcoml
ljmp
and
add
repz
sub
sahf
cwtl
popa
fnstenv
shr
pop
leave
and
je
inc
lock
pop
sbb
jo
loopne
jmp
fsub
sarb
lret
out
cmp
mov
mov
inc
cmc
pop
dec
jg
push
fnstsw
sbb
mov
mov
mov
dec
in
jl
mov
add
aad
sbb
shrl
rcr
add
mov
lods
cltd
mov
inc
pop
xlat
or
shl
ss
xor
mov
rorl
jmp
test
dec
add
movsb
and
xchg
mov
aad
mov
sub
in
mov
fisttpl
mov
jns
scas
pop
jnp
cmp
push
stos
push
fstpt
repnz
hlt
inc
jns
movsl
add
mov
scas
je
jns
xchg
mul
xchg
mov
mov
roll
out
lret
add
dec
repz
insl
mov
shlb
loop
fstpl
out
shlb
add
bound
flds
in
loop
cmp
inc
xchg
dec
fisubrs
arpl
pop
sbb
or
loop
sub
fiaddl
rolb
fbstp
out
int3
bound
ret
fnsave
into
pop
insb
add
fldt
add
pop
ljmp
in
hlt
pop
rorl
imul
out
adc
fcmovnbe
add
int3
out
stc
pop
pusha
fprem
gs
faddl
rol
inc
cld
into
add
push
shl
ret
pop
in
aas
inc
adc
cmc
imul
movsb
add
sarl
ljmp
imul
push
add
mov
mov
pop
popa
cmpsl
inc
sar
mov
inc
mov
sbb
mov
rcr
fs
imul
mov
imul
sub
fiaddl
bound
sarl
and
shrb
nop
add
mov
dec
sti
icebp
out
dec
ret
stos
addr16
pop
sub
jg
stos
inc
dec
add
stc
in
jecxz
addr16
mov
test
sub
jmp
std
stos
add
mov
cld
or
into
fistl
mov
push
out
lret
int3
ret
movsl
add
jmp
scas
add
cmp
in
in
cmp
gs
push
cmpsl
push
aam
inc
sub
add
fsubp
out
pop
cmpsb
sbb
fstp
scas
jae
mov
hlt
ljmp
and
inc
dec
rolb
test
addr16
ror
fs
jp
inc
lods
add
test
fildl
mov
aam
cmp
or
loop
mov
add
loope
out
and
or
jae
push
jnp
jl
jmp
daa
test
mov
add
mov
xchg
add
iret
in
inc
sysret
sbb
ja
push
or
in
or
pop
out
leave
add
pushf
sub
jbe
repnz
std
mov
call
xchg
jg
jb
jge
in
cmp
sbbb
sub
bound
mov
xchg
sbb
or
add
popf
add
lea
add
jecxz
mov
sbb
call
adc
adcl
aaa
adc
lds
add
xor
and
movsl
inc
or
in
mov
es
dec
push
cmp
cmp
inc
ficoms
sub
inc
add
xor
inc
shlb
adc
push
cmp
cmp
test
loope
gs
inc
add
das
mov
add
xchg
movsl
push
add
loop
into
lcall
sub
cmp
sbb
sbbl
add
xor
add
out
pop
and
sub
ja
adc
sub
inc
mov
iret
fnstcw
inc
add
and
dec
lret
addl
push
dec
inc
jno
fisttpll
inc
cmpsb
xor
fisubs
movsb
ljmp
loop
xor
leave
out
pushf
add
pusha
adc
fs
and
jmp
loopne
sbb
jmp
jb
data16
in
loopne
out
mov
fsubr
mov
add
add
loopne
in
call
icebp
jmp
dec
sti
inc
inc
fmull
add
mov
dec
fcmove
mov
cmp
jb
inc
ss
in
cmp
in
pop
repz
aad
jnp
fisubrs
imul
push
mov
mov
decl
mov
lods
add
lahf
jae
fcmovnu
stos
loopne
int
insl
cmp
push
mov
mov
xchg
xchg
xchg
cmpl
mov
aam
std
add
repnz
mov
out
testl
popf
out
js
scas
int3
or
sbb
shl
cld
andl
xchg
loop
loopnew
xchg
int3
or
in
fwait
out
or
orb
sbb
jecxz
xor
dec
jl
add
xchg
adc
pop
xchg
adc
fstpl
push
xchg
fbstp
jb
loopne
shlb
js
jo
js
jo
and
push
xchg
fimull
mov
les
outsb
lds
or
sbb
cmpb
adc
mov
movsb
pop
or
mov
ja
jo
sbb
mov
divb
enter
shlb
ret
jbe
sbb
or
lds
int3
push
jg
mov
cmp
sahf
or
mov
pop
call
mov
clc
mov
cmp
adc
mov
js
mov
pop
mov
cmp
pop
out
pop
xchg
jo
scas
or
sbb
pop
mov
je
lds
shr
mov
in
rolb
push
dec
lods
xor
push
mov
pop
mov
mov
mov
mov
test
mov
or
cmpsb
cmp
mov
dec
mov
clc
cmp
adc
aam
xchg
cmp
xchg
inc
or
jns
adc
jo
mov
xchg
mov
arpl
dec
lods
iret
or
addr16
add
lcall
jae
jbe
fimull
mov
pop
enter
mov
mov
cmp
lock
ret
sbb
loop
xor
cltd
fmuls
andb
rorb
out
or
ljmp
fwait
mov
enter
pusha
scas
lret
test
repnz
xor
js
jnp
pop
mov
and
jno
push
addl
cmp
inc
arpl
mov
sub
jno
je
ret
adc
js
pop
or
lods
pop
sahf
mov
add
lret
push
pop
cmp
add
push
xchg
addb
lret
int3
pop
jle
xchg
add
jl
adc
orl
das
and
nop
insb
pop
pop
mov
jp
test
pop
mov
fimuls
cmp
mov
rolb
sti
iret
outsb
dec
stos
cmp
jns
int
add
int3
add
mov
pop
xor
add
fmull
cmp
cmpsl
add
mov
sar
fsubs
hlt
add
ja
popl
orb
add
push
add
scas
add
push
popf
aam
fldl
jno
rol
sahf
mov
popf
ds
mov
lret
int3
push
int
jns
lret
ret
jle
add
rcl
adc
fcmovu
add
int
enter
mov
lds
repz
add
xor
jle
fucomp
dec
in
xchg
out
add
in
iret
enter
adc
test
lods
inc
mov
mov
add
mov
in
jo
mov
pushf
xchg
jge
hlt
cli
test
fmul
shlb
adc
cmpsb
and
add
pop
sub
mov
mov
sub
movl
add
aaa
sub
sbb
add
adc
push
test
sbb
mov
insb
and
loopne
adc
nop
jl
fs
cmp
das
daa
push
imul
rcrb
shl
stos
and
push
jmp
fmul
arpl
pop
or
pop
inc
inc
xor
and
push
or
dec
and
inc
jo
shrl
loop
and
pop
in
ficoml
inc
orb
xchg
ja
push
dec
cmp
and
insb
jecxz
mov
fsubrs
lea
cmp
sub
sbb
mov
bound
mov
add
jne
push
add
xor
sbb
xor
inc
add
fsub
stos
lods
and
add
add
cmp
and
arpl
inc
adc
pop
mov
and
ljmp
mov
and
inc
rol
into
sub
mov
leave
xchg
rolb
xor
jle
outsb
outsl
pop
aas
xor
pop
xor
xchg
inc
pusha
fisubrl
inc
cmpsl
and
add
jb
mov
shll
mov
addr16
push
aad
pop
js
fs
add
or
cmp
test
mov
lock
lock
mov
mov
jecxz
push
mov
jmp
add
add
sbb
mov
cli
mov
stc
add
cmc
add
or
add
jecxz
mov
mul
test
enter
lods
pop
add
test
mov
mul
mov
ja
rcl
mul
or
pop
out
loopne
jge
push
ret
mov
lock
mov
adc
shr
or
out
in
jns
or
in
add
out
hlt
in
ljmp
loop
enter
test
sbb
out
int
adc
loopne
lret
loop
inc
cld
or
adc
cli
clc
add
lret
cmpsb
fdivrp
loop
add
cmc
loop
loope
pop
mov
fdiv
inc
in
loopne
testl
ret
adc
ret
aad
lret
and
add
aam
repz
movsb
and
jmp
rclb
lret
aad
aam
push
sub
push
add
int3
aad
jmp
loop
fmull
mov
ret
inc
cld
add
fcomp
loop
add
loope
iret
mov
les
leave
into
rcl
adc
ror
push
ret
cwtl
add
enter
mov
cli
les
mov
sarb
scas
movsl
stos
push
add
add
or
mov
iret
std
and
incb
adc
jne
push
cmp
pop
out
popf
mov
xor
stc
mov
pop
push
mov
scas
pop
aaa
leave
add
aad
rol
andb
imul
shr
dec
movl
icebp
shlb
enter
mov
stc
out
arpl
nop
div
sbb
icebp
jmp
jo
in
fcomp
fchs
lret
mov
repnz
and
ljmp
add
leave
ret
jne
pop
pusha
in
ret
out
fcmovne
xor
fdivr
mov
mov
xchg
xchg
fcmovbe
pop
fcomip
int
in
sub
cld
loop
or
in
in
ljmp
cs
in
out
sbb
loopne
inc
ror
sbb
mov
fsubr
out
xor
filds
mov
shl
mov
out
cmp
out
jmp
xchg
insb
mov
hlt
cwtl
and
in
insb
out
mov
call
call
fcom
push
into
nop
mov
or
cmc
dec
ficomps
jg
popa
in
cwtl
loopne
leave
cwtl
pusha
out
imul
cmc
cwtl
cmp
and
xlat
ret
pop
loop
iret
xor
jmp
nop
mov
mov
aad
inc
mov
and
dec
mov
ljmp
hlt
jmp
sub
rcrb
in
into
jo
xchg
ljmp
in
sbb
jecxz
xlat
sub
xor
jmp
out
into
or
loope
sub
fiadds
clc
inc
pop
stc
mov
mov
call
jns
in
fsubrs
and
in
loope
orb
pusha
icebp
iret
loope
stc
sbb
inc
orl
js
incl
mov
repnz
push
in
jecxz
sarb
mov
cmpsl
adc
dec
and
mov
mov
sbb
inc
mov
cwtl
xor
leave
cld
outsb
clc
mov
add
aam
xchg
dec
icebp
adc
aam
cmp
mov
ret
sub
mov
push
rol
test
jb
iret
and
sarl
sbb
test
bound
popa
jp
rcll
fwait
add
lret
loopne
cmp
cmpsb
sbb
fs
dec
rcrb
jmp
or
test
dec
sbb
mov
or
lret
sbbl
mov
andb
aad
fidivrs
push
scas
add
jl
push
push
movsb
lds
or
cmpsl
movsb
xor
ja
adcb
adc
inc
int3
gs
insb
test
push
xor
add
jp
subb
fsub
push
pusha
lret
fmull
popf
mov
in
cmp
repnz
push
push
fiadds
sub
add
push
inc
mov
push
mov
dec
add
dec
jmp
jp
faddl
adc
stc
jmp
ja
xchg
add
outsb
outsl
dec
push
add
outsb
outsl
dec
push
add
imul
add
add
pusha
jo
pop
sub
add
sbbl
add
pop
xchg
pop
adc
outsb
aas
sarb
iret
scas
ja
stos
inc
aad
mov
into
es
jo
xor
mov
or
cli
rol
rcl
sbb
fisttps
sarl
pop
movl
aad
leave
in
jmp
rolb
mov
or
sti
std
mov
neg
sub
popf
add
lret
mov
rcll
ret
fsub
sbb
push
or
aad
mov
std
inc
pop
icebp
ljmp
call
ror
cld
xchg
mov
inc
orl
ffree
lock
pop
inc
ret
push
in
je
and
jns
jnp
add
cld
add
push
ret
mov
jp
cmp
in
out
mov
lods
cwtl
mov
hlt
cmp
call
add
ret
pusha
inc
pop
mov
cmp
sbb
cmp
addb
stos
add
mov
add
fmul
push
inc
adc
fwait
test
xor
xor
add
dec
pusha
dec
adc
shl
stc
xchg
and
xchg
neg
sarl
sahf
lret
test
ja
jae
jb
add
push
pop
pusha
dec
cmp
rol
out
xchg
pop
and
int3
lahf
lods
mul
rol
cmpsb
inc
add
add
cmp
jne
imul
dec
adc
adc
or
ljmp
lcall
test
rorb
xor
add
mov
adc
out
mulb
test
push
testb
out
scas
or
cmpb
xor
add
and
lahf
pushf
cmpsl
inc
lret
ret
clc
xchg
and
xchg
clc
jecxz
mov
mov
mov
subl
das
push
sub
addr16
fwait
popf
and
add
and
sti
in
lret
lret
test
jns
ja
jle
imul
dec
pop
add
cmp
sti
movsl
and
out
lods
inc
cmp
repnz
aaa
sub
outsl
add
push
insl
dec
push
push
movsl
or
rol
in
push
and
xchg
sarl
add
jg
jl
outsb
dec
dec
add
pop
dec
adc
push
out
and
repz
and
mov
add
fidivrs
cmc
subb
jbe
add
popa
jo
pop
push
and
stos
mov
inc
out
inc
adc
stc
mov
test
sub
fisubrl
movl
and
pop
add
mov
xor
sub
ret
jecxz
and
repz
inc
inc
call
push
jno
and
and
push
xor
inc
add
int3
pusha
inc
shl
cli
movsl
and
out
mov
out
adc
insb
mov
and
sbb
in
imul
loope
add
add
dec
and
ljmp
or
loope
loopne
mov
push
push
dec
inc
pop
jb
popl
loopne
add
lret
ret
add
in
clc
testb
and
hlt
mov
int
mov
rclb
gs
dec
mov
push
sbb
inc
into
xor
mov
inc
xor
cld
add
out
out
fmul
sub
add
xlat
fnstsw
add
xorl
inc
iret
add
add
mov
hlt
mov
inc
std
out
out
or
ror
rcll
in
out
addb
add
lock
mov
into
inc
push
ret
mov
mov
add
sbb
fmul
push
rcll
push
movb
leave
lret
inc
rolb
ror
jp
mov
scas
cmp
mov
mov
pop
cmp
sti
fimuls
mov
or
mov
cmp
xchg
push
int
pop
jmp
mov
cmp
loope
cmp
pusha
cmp
push
push
inc
xchg
add
jbe
loope
outsb
ficomps
push
mov
insl
cmp
push
mov
add
insl
movsb
add
xchg
cmp
push
mov
mov
inc
cmp
out
sbb
mov
mov
mov
scas
lods
sbb
jecxz
in
imul
int3
mov
lahf
cmp
add
jo
loopne
xor
sahf
push
push
dec
add
or
leave
insb
lock
push
push
jo
or
inc
stos
inc
jecxz
dec
inc
js
rolb
mov
dec
popl
jno
loopne
jno
loopne
jno
mov
mov
xchg
or
popa
pop
shrb
popa
into
pop
add
xor
cmp
roll
movsl
pusha
pop
jbe
jecxz
and
loop
shl
insb
xchg
lcall
mov
loop
int3
sbb
pop
mov
pop
jmp
ficoml
loop
add
and
mov
mov
negl
popf
loope
jmp
or
jo
pop
jp
pop
out
jle
lods
add
lods
stos
mov
mov
mov
jbe
in
outsb
ret
mov
jo
adc
addb
in
mov
jo
sbb
bound
push
aaa
mov
test
in
cmp
bound
test
fisttpll
rol
pop
inc
jle
add
imul
test
inc
test
mov
xchg
jno
loopne
movsl
mov
jnp
and
push
xor
or
jnp
loopne
cmp
xor
js
sub
xchg
push
mov
popf
mov
rol
jg
mov
inc
js
mov
jle
and
mov
mov
pushf
push
sahf
mov
mov
xor
inc
inc
lcall
or
xor
cwtl
jecxz
add
das
cld
add
cmp
addl
mov
xchg
xchg
push
mov
jo
cld
stos
xchg
pop
stos
fstpl
xor
mov
out
testb
movsl
outsl
shrl
mov
dec
mov
fstps
rcl
inc
cmp
out
insb
and
lods
rclb
mov
mov
inc
mov
roll
mov
nop
xor
inc
mov
or
jle
adc
and
and
push
cwtl
int3
xor
push
add
or
push
and
loope
mov
test
xchg
sarb
subb
inc
mov
adc
fstl
mov
push
aam
push
clc
pop
mov
jmp
popfw
aam
jb
cmp
mov
xor
add
sub
add
test
addl
inc
inc
add
lret
ja
iret
lahf
mov
jp
mov
add
adc
out
add
rcl
pop
xchg
xor
roll
lahf
push
mov
rcrb
rcrb
loopne
lahf
add
fsts
xchg
popf
loope
sbbl
lods
inc
sbb
arpl
rorb
fsub
mov
in
cs
ret
adc
mov
lods
adcl
sbb
jmp
mov
sahf
dec
sti
cld
ficompl
out
lock
stos
test
pop
push
repnz
push
es
test
jecxz
aad
rolb
shll
lods
int
push
xchg
xchg
inc
xchg
dec
xor
mov
movsl
sbb
xor
cld
pop
xchg
cmp
repz
inc
pop
dec
add
mov
xchg
cld
pusha
lret
add
xor
popf
cmpsl
addl
fcomps
andb
into
xchg
cmpsb
test
loopne
shrb
jle
adc
leave
outsb
add
push
sbb
cmp
pusha
pop
xor
mov
std
push
xchg
rcrb
add
add
mov
pusha
bound
xor
mov
int3
xchg
into
inc
stc
lea
mov
mov
popa
add
or
sbb
inc
adc
dec
and
pop
and
rolb
inc
je
mov
imul
xor
and
lock
mov
inc
dec
sar
loopne
inc
xlat
cmpb
lret
jno
adc
or
and
mov
adc
je
cmp
loopne
mov
faddl
pop
imul
mov
xor
sbb
pop
loop
xchg
into
xchg
and
dec
inc
jo
addb
jns
sbb
mov
mov
xor
add
xchg
nop
inc
out
inc
jae
sbb
mov
xor
pop
xor
dec
inc
or
push
jnp
data16
and
inc
aaa
fwait
inc
cmp
mov
push
mov
mov
vcvttpd2dqx
push
inc
and
lahf
add
outsb
pop
sub
adc
es
repnz
mov
adc
inc
or
or
mov
add
push
sub
mov
rcl
add
loopne
hlt
std
jne
inc
pop
ficompl
add
fs
dec
dec
lcall
das
cmp
push
add
ljmp
test
sarb
inc
ret
push
xor
mov
icebp
out
add
movsb
pop
bound
and
pop
es
stos
sti
jno
sub
out
insb
inc
add
lock
test
cli
lods
pop
adc
xchg
mov
sbb
inc
add
lods
dec
push
adc
hlt
add
sbb
fisttps
push
inc
aas
scas
loope
dec
ljmp
movsb
dec
dec
inc
xor
rcl
loop
out
into
and
test
pop
lods
sahf
pop
fldl
sti
jmp
mov
ljmp
scas
in
add
inc
inc
sub
test
xchg
cmc
mov
and
inc
inc
out
out
icebp
push
stos
push
out
jmp
cmp
pushf
and
sub
inc
add
and
pushw
test
sahf
icebp
out
push
pusha
dec
mov
lock
push
aas
and
pop
push
jnp
pop
loopne
repz
add
pop
into
cmpsb
in
cmpsl
xchg
repnz
outsl
and
pop
push
pop
cmc
push
in
addb
inc
fs
sarl
sbb
xchg
fsubs
jae
rcl
loop
pop
mov
cli
cld
jno
outsl
add
notb
cmpsl
add
call
lahf
or
call
pop
loop
jne
pop
stos
rep
pop
hlt
push
xchg
in
jmp
shll
adc
xlat
shll
in
add
sbb
jmp
popf
jnp
sarl
pop
cli
je
mov
xlat
fcoms
pop
in
lret
ds
add
rcl
andl
mov
rcll
dec
adc
pop
lods
hlt
mov
jo
pusha
and
pop
mov
repz
clc
rclb
scas
inc
test
pop
mov
int3
xorb
loopne
sarb
fs
lock
loopne
jge
loopne
cmp
stos
push
scas
movsb
mov
btr
push
out
fildl
int3
cmpsl
lods
adc
arpl
mov
mov
lods
scas
push
fnsave
jle
subb
roll
js
ret
pop
inc
test
ret
fs
push
lret
mov
loope
shrb
pop
sbb
pop
nop
pop
aam
adc
inc
jo
xlat
pop
in
pushf
push
or
ret
ret
xor
aad
in
pop
scas
or
lret
jo
pop
mov
sbb
ffreep
and
fdivrs
add
mov
sub
lods
icebp
popa
cmp
sarl
ret
and
stos
aad
mov
or
in
mov
shll
out
xchg
jnp
mov
enter
jns
lods
xchg
push
adc
int3
movsb
mov
repnz
mov
or
mov
or
cmpsb
test
les
inc
mov
add
imul
lock
aam
mov
mov
sub
enter
mov
or
mov
in
sub
lea
test
xorl
sbb
mov
push
mov
lret
leave
sub
aas
or
enter
pop
add
gs
jo
xor
aad
in
lret
and
orl
in
push
out
fcoms
cwtl
cmc
mov
push
mov
mov
or
inc
push
out
fmulp
adc
lods
sahf
sbb
arpl
lock
lret
adc
lock
scas
ret
clc
lea
loopne
ret
push
mov
cmpl
mov
pushf
push
add
lahf
lcall
xlat
or
mov
push
loopne
mov
xchg
lret
test
sar
mov
or
loopne
movsb
xchg
rorb
ret
clc
std
pop
mov
lods
icebp
loop
mov
sbb
lret
pusha
dec
popf
std
adc
adc
dec
call
fdivs
iret
mov
xchg
pop
test
cmpl
divl
cwtl
loopne
push
andb
mov
rol
clc
cli
add
bound
leave
rcrb
cmp
adc
shlb
call
adc
add
sbb
fimull
push
shl
mov
fmulp
jp
or
jg
and
add
cmp
push
jmp
int3
lods
divl
pop
xor
mov
add
add
enter
lahf
jbe
pushf
jb
pop
and
popa
jo
inc
pop
cmp
mov
fwait
jmp
jg
sarl
cld
cwtl
adc
rcl
jmp
test
sub
leave
jl
add
into
rcl
fneni(8087
or
jb
pop
in
add
popf
inc
ror
iret
aad
fsubrl
cmc
push
lods
icebp
ljmp
jl
lret
add
inc
inc
inc
dec
lods
jecxz
scas
sbb
leave
lret
iret
add
lods
repnz
inc
aas
sti
stc
add
push
jmp
scas
addl
xor
loop
inc
lret
or
aam
out
jmp
and
add
pop
ret
aaa
gs
pop
mov
sub
add
inc
add
push
xor
or
or
iret
lret
inc
jo
pop
jno
add
dec
daa
xor
loopne
fsubl
shl
call
into
int3
sbb
or
inc
mov
inc
add
sub
xor
cmpsb
mov
adc
mov
pusha
mov
or
test
cmp
inc
mov
lahf
jno
or
xor
stos
add
jmp
ret
lahf
testb
enter
leave
cmp
mov
das
xor
and
add
sti
push
fcmove
xchg
add
and
and
or
lods
in
or
or
mov
sbb
sub
lahf
sahf
rcrl
std
movsl
repnz
inc
addb
pop
and
or
div
in
loop
xchg
adc
push
sub
nop
xchg
dec
push
loopne
es
int3
add
fists
add
or
xorb
lea
xchg
sbb
push
pop
inc
fs
add
adc
and
repz
pop
dec
popa
sbb
cltd
mov
pop
imul
aas
sub
mov
adc
orb
jne
add
lds
mov
testb
shl
out
negl
loopne
idiv
sub
fiadds
jbe
ja
je
mov
mov
sub
aad
sub
and
icebp
adc
shll
les
mov
cmpb
out
test
fcoms
push
adc
sub
or
loope
aad
mov
jns
jl
jnp
mov
and
inc
jo
fisttpl
inc
and
fcomps
imul
jle
addl
mov
pop
testl
notb
loop
jmp
add
jnp
jge
push
imul
mov
mov
hlt
or
adc
or
repz
mov
into
sub
add
xchg
test
fmull
push
lret
in
add
lock
or
fcoml
add
push
add
je
mov
dec
add
add
and
push
pusha
or
aam
stos
add
or
pop
jae
addb
rcr
push
jecxz
cmp
and
push
xchg
ds
lock
aad
mov
clc
roll
pop
sbb
xor
sub
pushl
add
xchg
icebp
hlt
push
and
movsb
and
ror
mov
dec
sbb
cmp
gs
int3
rcl
mov
mulb
dec
push
arpl
es
loopne
fcom
xchg
add
int
aad
mov
or
push
out
out
icebp
or
test
ja
int
rcl
test
loopne
jecxz
fcompp
mull
int
dec
mov
dec
jno
shl
repz
out
mov
sbb
inc
shl
int
push
jge
shrb
adc
mov
pop
adc
fbld
xchg
push
add
mov
xlat
fiadds
push
mov
pop
ja
inc
mov
ds
fisttps
adc
or
in
cltd
nop
mov
pushf
jne
loopne
cmp
xchg
push
js
insb
add
push
loope
mov
mov
lods
icebp
cmpsl
shrb
mov
cmp
push
dec
inc
aas
add
xchg
cmp
sbb
jb
pop
jbe
arpl
jle
jno
scas
cmpsb
mov
mov
sbb
mov
pop
cld
scas
jl
lock
jbe
call
popf
inc
sbb
xchg
push
hlt
mov
add
lods
orb
je
mov
sbb
sub
xchg
cmp
adc
arpl
rcll
mov
mov
movsb
cmp
loope
inc
cltd
shl
mov
xchg
sbb
lcall
jns
int3
fdivrs
dec
hlt
mov
ret
enter
xor
pushf
js
sbb
scas
xor
movsb
jo
sub
test
ja
repz
sbb
mov
mov
xchg
mov
into
sahf
xor
cmp
push
arpl
ror
xor
jo
stos
xchg
mov
enter
sahf
add
mov
popf
mov
pusha
ret
mov
add
bound
sbb
loopne
cmp
or
push
icebp
mov
shll
stos
adcl
sub
shlb
roll
mov
inc
nop
lret
or
ljmp
mov
aad
loope
xlat
stos
cmp
lahf
call
call
test
iret
push
push
push
lock
fs
fcoml
loopne
xchg
sbb
js
xchg
pusha
mov
push
mov
ja
nop
push
loopne
xor
mov
out
mov
test
xchg
dec
cwtl
in
nop
stos
push
cmpsl
aam
inc
lods
mull
or
mov
lret
es
cmp
pushf
pop
loop
loopne
jb
loope
cwtl
and
pushw
or
daa
lods
movsb
jo
xchg
push
lock
cwtl
sbb
inc
inc
adc
xchg
stos
mov
cmp
or
jl
ret
leave
scas
outsb
push
jp
mov
ret
push
mov
and
xchg
lock
fisttpll
test
adc
shll
xchg
icebp
push
repz
cmp
test
mov
out
add
int
rcll
dec
fisubl
mov
cmpsb
mov
sbb
xchg
pop
or
sbb
xchg
ja
mov
mov
push
cmp
cmp
popa
push
bound
sarb
jg
imul
add
inc
push
dec
fmull
flds
push
mov
mov
insb
insl
jo
push
bound
push
bound
testl
int3
pusha
jno
pop
in
rolb
popf
mov
jl
bnd
in
popf
outsl
insl
cmpsl
pop
imul
je
hlt
in
enter
pop
sbb
lcall
cli
clc
push
mov
push
out
add
add
cmp
outsb
loop
push
mov
jecxz
cmc
fsubs
xlat
push
cmp
loopne
aam
out
add
inc
xchg
xor
fucom
aam
in
mov
add
out
in
add
in
fstp
fcoms
out
adc
cmp
aam
sbb
out
pusha
adc
cli
add
decb
repnz
out
icebp
inc
aas
cmpsl
mov
loop
lock
inc
jno
add
push
lret
cmpsb
add
inc
fnstcw
ljmp
adc
mov
xchg
shlb
mov
out
mov
cmp
inc
aas
js
imul
ret
ret
cmc
test
loope
stc
jp
dec
pop
add
pslld
loop
fsubrs
dec
inc
cmp
ds
insw
test
ret
les
xlat
movsb
inc
add
fucom
out
mov
mov
adc
lahf
lock
lods
xlat
dec
sbb
inc
cmp
cmp
ja
lods
es
cmpsl
jle
in
add
add
pop
pop
pop
or
adc
jg
add
push
or
ret
movsl
mov
das
mov
fldenv
pop
push
inc
pop
ret
lret
jno
xchg
mov
xorb
inc
lea
dec
call
xchg
fcos
or
cmovno
fcom
and
loop
rolb
fs
add
mov
ret
movsl
sbb
lea
adc
in
loop
out
dec
inc
xor
or
insb
andl
test
sti
jmp
subl
nop
cmc
mov
and
xorb
stc
lds
mov
andb
xor
or
add
inc
sbb
pop
roll
xor
sub
sub
adc
sbb
aam
add
insl
pop
pop
inc
add
sub
sub
bound
iret
mov
sbb
xchg
inc
loope
add
inc
mov
inc
enter
lret
movsb
sub
scas
pop
or
sbb
push
dec
inc
les
inc
outsl
or
int3
ret
movsl
inc
pusha
loope
clc
scas
pop
adc
pop
sbb
and
pop
jp
subb
movsl
ret
mov
mov
inc
hlt
sbb
daa
adc
adc
andl
lods
lcall
popl
or
xor
dec
dec
sub
xchg
add
cli
sub
ret
and
shlb
dec
mov
pop
add
movl
xchg
addb
pop
mov
and
push
sbb
pop
or
shll
int3
add
mov
loope
lods
mov
ficompl
pop
test
cmc
test
cmp
add
push
inc
inc
pop
push
jne
mov
cltd
mov
cmpsl
addb
fsubp
add
pop
pop
or
repz
xlat
add
imul
mov
scas
test
sbb
in
in
sbb
push
lahf
rep
dec
inc
ficoml
jo
and
jle
outsb
mov
mov
fndisi(8087
out
dec
pop
cmp
jo
jge
test
clc
ljmp
jecxz
call
fwait
add
div
lock
jmp
pop
dec
das
adc
out
loop
jmp
add
in
ljmp
shlb
mov
aam
in
jns
loop
fcmovu
xlat
jecxz
in
vminsd
movsl
sbb
jno
adc
jl
pop
jle
mov
repnz
dec
xchg
push
inc
jnp
xchg
out
shrb
std
mov
leave
daa
ret
sub
xor
adc
inc
adc
in
mov
in
mov
add
inc
push
rcr
jo
sbb
push
adc
lds
push
aad
mov
push
jecxz
dec
call
fs
push
aaa
push
cmp
ret
bound
in
adc
and
pop
loopne
xor
and
and
sbb
xor
js
outsb
sbb
enter
jae
mov
lds
sub
mov
jp
sbb
jns
icebp
jl
and
out
bound
jle
sbb
xorb
inc
loopne
cmp
insb
mov
lret
or
movb
addl
loopne
mov
hlt
les
push
xchg
sbb
cwtl
imulb
jo
cwtl
dec
test
xchg
dec
and
arpl
scas
jo
or
mov
xchg
sbbl
xor
cld
and
mov
cmp
aas
sar
fistpll
adcl
mov
mov
push
sahf
enter
ret
lcall
popf
cmp
sahf
cmp
mov
call
dec
or
pop
movsb
repz
popa
mov
out
pop
add
jbe
mov
jge
rolb
inc
mov
jo
adc
mov
movsl
rolb
jl
mov
xchg
andl
stos
adc
mov
add
fxch
add
in
subb
mov
rcrb
out
js
ficoml
test
mov
aam
shrb
inc
imul
jne
or
push
pop
adc
xchg
or
lret
xchg
dec
iret
popf
and
outsl
xchg
push
mov
je
inc
mov
into
nop
adc
leave
movsl
popa
fs
pop
mov
mov
shrl
cmpsl
push
jmp
fcoms
in
sub
fs
xlat
rorb
fdivrs
iret
sbb
mov
cld
cmc
in
loopne
cmp
rcrl
lret
sub
roll
cltd
scas
sbb
out
or
xlat
cwtl
and
lock
push
xchg
fistl
loope
or
mov
in
or
test
es
repnz
nop
insb
cmp
mov
lret
mov
enter
sbb
mov
fwait
out
adc
icebp
push
pushf
scas
and
mov
pop
jmp
fiaddl
inc
cmpsl
repz
mov
enter
mov
or
leave
mov
iret
shrd
xlat
mov
adc
and
dec
call
dec
std
ljmp
xacquire
inc
loop
icebp
add
inc
jmp
inc
xchg
stc
lahf
push
hlt
dec
daa
hlt
ficoms
dec
fisubrl
add
dec
scas
dec
inc
imul
imul
cmpsl
scas
add
jge
loop
fwait
add
clc
xlat
sub
outsb
add
cmp
jge
mov
fiaddl
push
in
loop
loopne
and
jl
add
mov
lock
cmpb
jmp
cmpsb
add
in
loope
inc
sarb
xchg
dec
mov
data16
out
cmpsl
jns
nop
push
mov
jle
in
push
ret
add
jne
clc
addr16
loope
out
ljmp
fdivrl
mov
mov
je
cmpsb
frstpm(287
loopne
fadds
jp
jae
outsb
imul
hlt
jno
jle
addb
in
sbb
jo
outsl
fmull
jg
outsl
js
lods
addl
and
in
jae
cmpsl
pop
ds
jmp
mov
mov
sub
loope
rolb
cltd
les
fisttpll
xor
rcl
jno
pop
cmpsl
jg
in
divl
movsl
and
orl
jb
cwtl
jge
rcl
add
push
adc
iret
mov
jg
ljmp
subb
addl
into
rorb
aam
or
mov
pusha
out
clc
js
pusha
and
inc
subl
xchg
mov
sbb
inc
dec
mov
add
jmp
and
rcrl
add
xchg
das
cmp
mov
addr16
mov
fsubp
add
movsb
or
and
test
add
loop
roll
pop
sub
stos
mov
lret
dec
adc
xor
or
lock
push
xchg
and
xchg
neg
in
inc
pop
adc
push
push
pop
inc
das
aas
and
jl
add
inc
sbbl
push
or
repnz
push
and
cli
lock
add
or
inc
push
pop
and
pop
xor
and
add
es
adcl
repz
and
std
icebp
out
out
lock
push
pop
cmp
xor
inc
mov
aaa
and
insl
inc
inc
sub
adc
cld
inc
mov
sub
pop
dec
inc
sbb
pop
pop
pop
pop
inc
dec
xor
lods
rclb
rorb
mov
pop
popa
add
pop
dec
clc
sub
adc
out
stc
push
cwtl
and
inc
sarb
push
loopne,pt
popa
pop
sub
dec
sbb
repnz
add
nop
rolb
add
adc
mov
mov
dec
arpl
es
cwtl
sti
repnz
inc
addb
mov
xor
cmp
sahf
add
mov
and
decb
shlb
cwtl
mov
lret
loopne
push
mov
das
sub
dec
mov
sarl
rolb
xlat
rol
mov
pop
movsl
js
in
jg
sti
nop
bound
imul
jmp
int
add
mov
addr16
push
ds
add
in
hlt
stc
shrb
xchg
and
test
clc
repz
mov
mov
sub
idiv
movsb
scas
mov
mov
add
jmp
add
and
out
repz
cli
pop
cld
hlt
or
aas
sarl
mov
in
in
fdivrl
lock
repz
fnsave
loop
push
pushf
mov
sub
mov
outsl
inc
nop
add
xchg
out
lahf
aad
sub
mov
mov
or
xor
lds
jnp
add
sub
popf
jecxz
cmpsl
or
pop
jle
and
xchg
sbb
daa
cmp
inc
add
mov
mov
or
out
fwait
lahf
rcrl
push
jg
pop
into
adc
imul
and
hlt
pop
aam
mov
lods
or
aas
cmpsb
pop
mov
and
lcall
pop
pop
shrl
adc
pop
sbb
aas
mov
pop
and
leave
std
push
pop
test
daa
hlt
pop
jbe
mov
or
pop
adc
mov
enter
pop
mov
pop
sbb
and
lcall
js
mov
sbb
test
inc
or
cmp
push
cmc
dec
aad
push
das
push
aam
test
inc
popf
push
jne
push
or
das
fildll
cltd
jge
cwtl
rcr
std
xchg
jg
aaa
mov
cmp
stos
mov
out
popf
jbe
pop
mov
bound
fbstp
scas
in
jno
inc
add
mov
add
ds
inc
scas
or
pop
aas
add
inc
pop
add
mov
mov
xor
sarb
jp
pop
mov
inc
add
jle
dec
sbb
fs
cmp
test
ret
int
push
loopne
cmp
add
xchg
push
loopne
cmp
cmp
imul
sbb
sahf
js
xchg
jb
in
movsl
andb
sahf
jg
xchg
ja
fldt
mov
or
push
add
dec
add
push
jo
shrb
sarl
test
jbe
add
mov
dec
jg
cwtl
test
dec
je
sarb
loopne
inc
arpl
test
mov
inc
jmp
sbb
dec
add
pop
ret
add
and
jo
xor
cmpsl
loopne
inc
add
push
imul
inc
shll
add
push
jne
cltd
fs
mov
test
shrl
pop
adc
popa
or
and
int3
adc
sarb
jb
adc
and
adcb
mov
pop
push
mov
addr16
push
add
ret
andw
into
or
inc
xchg
or
dec
and
mov
and
sub
xchg
adc
or
jno
ja
cmp
push
or
test
or
data16
mov
adc
fistpl
int3
leave
mov
xor
push
cwtl
movsb
xchg
call
jb
dec
add
jge
mov
js
inc
inc
aam
and
and
push
jo
xor
xchg
add
lcall
cwtl
data16
dec
pushf
dec
or
cmpsb
jae
movsb
dec
orl
loopne
cmp
mov
add
xlat
into
xor
loop
das
adc
pushf
and
jmp
inc
mov
sbb
outsl
or
cmp
dec
pushf
push
and
cmp
adc
mov
insl
ds
mov
push
mov
imul
push
test
bswap
mov
sbb
adc
xchg
and
les
shrb
adc
add
jle
fdivrs
xorl
pmulhuw
jg
sub
ds
loopne
inc
mov
fadds
rolb
xor
push
movb
mov
int
mov
loopne
imul
es
dec
cmp
je
jo
lods
jp
test
push
push
lahf
jne
fidivrs
mov
jnp
jle
adc
cwtl
adcl
adc
mov
test
adc
rclb
subb
rolb
stos
jno
inc
xor
rcrl
int3
mov
cmp
movsl
popa
fmul
fisubl
push
cmp
push
inc
and
cltd
cmp
sahf
orl
test
add
and
push
shlb
push
mov
xchg
mov
sbb
imul
mov
xchg
xor
mov
and
inc
inc
ret
sbb
cmpl
jle
xchg
add
mov
orb
hlt
cmp
repnz
adc
add
fsubl
pop
pop
mov
push
sub
push
pop
dec
ja
pop
add
or
imul
add
push
push
adc
fists
cli
addl
lea
mov
or
sub
or
test
mov
push
jae
or
push
lea
cwtl
xor
add
jo
notl
adc
daa
shll
js
adc
mov
cltd
repnz
cmp
pop
push
pop
add
mov
std
imul
xchg
push
pop
push
pop
jo
sub
pop
ja
add
out
sbb
add
pushf
leave
jno
jo
jne
dec
pop
pop
gs
icebp
push
mov
adc
ljmp
or
bound
jns
daa
insb
sub
pop
imul
jge
or
add
sti
mov
and
jne
or
repz
pop
push
bound
xchg
call
push
add
cmpsb
jg
mov
jg
imul
std
push
mov
mov
adc
push
pop
rcll
in
mov
fiadds
scas
jns
sub
sti
int3
dec
dec
mov
jbe
inc
add
add
jb
data16
push
cmpsb
pop
cs
jns
je
jns
daa
pushf
mov
add
jae
push
inc
and
mov
jo
sarl
jl
inc
or
push
push
xchg
push
cli
inc
lea
lds
add
ds
dec
ss
adc
or
in
and
sahf
jecxz
lds
jecxz
mov
movsl
in
lret
pushf
out
xchg
call
pushf
out
cld
scas
xchg
pop
subb
scas
mov
cmpsl
mov
inc
test
mov
mov
leave
mov
xchg
lods
sbb
test
mov
adc
je
mov
push
jne
push
add
mov
mov
subl
mov
mov
mov
jbe
mov
push
mov
inc
pop
shl
pushf
adc
test
mov
push
cs
in
pop
mov
sub
xchg
mov
sub
push
in
rclb
orl
xchg
ret
lret
ja
xor
add
sub
or
shrl
jo
mov
mov
lods
jo
push
push
pop
sahf
popa
mov
jbe
js
sbb
jg
cmpsb
adc
push
xchg
pop
test
adc
xor
scas
sarb
push
in
pop
out
and
dec
push
cltd
shl
cmp
mov
dec
push
dec
fwait
cs
jb
xchg
mov
inc
mov
cmp
mov
xor
rcr
pop
lds
mov
hlt
inc
mov
add
int3
fcmovb
lods
xor
rcrl
cli
int3
mov
faddl
pop
js
les
xor
add
jo
ja
js
inc
lods
imul
ud0
jg
subb
dec
iret
sbb
ds
lret
jmp
popf
xor
add
repz
add
dec
push
movsl
add
arpl
mov
mov
inc
pop
add
mov
sarl
xchg
xchg
mov
mov
sarb
ja
sub
fcmove
insb
pusha
ret
or
jmp
fnstcw
ja
mov
lret
repz
pop
jle
mov
mulb
in
cmp
ret
in
cmp
fs
xchg
mov
xor
pop
jnp
imul
xchg
mov
and
out
jecxz
fbstp
add
cli
add
pop
gs
pop
fsubrl
outsl
mov
ljmp
je
stos
and
xchg
cmp
iret
daa
push
inc
shlb
adc
pop
mov
cs
rcrb
mov
int3
jno,pt
nop
jecxz
or
adc
and
cmpxchg
adc
pusha
rol
das
sbb
cmp
orl
inc
cmp
fstps
or
mov
sub
mov
cmp
mov
int
loope
call
jo
lods
fsubrl
int3
ja
icebp
xchg
add
add
popf
ja
mov
inc
adc
cld
bound
lods
sahf
fmuls
sub
jnp
mov
ret
pop
jb
lret
mov
loop
push
adc
mov
dec
xchg
push
scas
add
out
insb
xchg
mov
mov
mov
int3
jge
and
push
adc
pop
jb
push
aas
ror
out
xor
mov
lods
xor
mov
fsubs
add
sub
xlat
jb
rcrl
js
das
jo
xchg
pop
fidivrl
or
sub
mov
adc
mov
xchg
sbb
sbb
cmp
xchg
dec
popf
adc
or
dec
loop
and
pop
pusha
xchg
lret
mov
sbb
cmp
cmp
mov
movsl
dec
mov
pop
repz
mov
add
and
mov
movsb
lret
mov
xchg
pop
jbe
dec
leave
shr
ss
testl
fldt
or
adc
adc
adc
cmp
or
fs
icebp
cs
jp
in
icebp
mov
dec
push
inc
call
ljmp
imul
push
daa
push
push
scas
and
jbe
in
sbb
les
pop
xchg
fs
or
mov
jno
int3
sub
or
leave
sub
cmp
adc
ds
cmp
mov
sbbl
test
inc
dec
movsb
xor
mov
pop
adc
sahf
xor
imul
imul
dec
adc
mov
push
cltd
leave
mov
xor
add
mov
fiadds
lcall
add
jno
or
pushl
addr16
jp
mov
lock
or
shrl
leave
inc
out
pop
pop
fnstenv
in
lret
jne
filds
pop
pop
addr16
cmp
mov
sbb
sub
in
jns
lret
shrb
xchg
lea
lret
jo
add
fidivrl
les
or
insb
add
lret
add
inc
imul
inc
add
pop
sub
xchg
sub
out
addr16
sub
adc
add
jp
cli
add
or
sbb
sbb
push
add
push
mov
leave
xor
pop
adc
dec
sub
adc
or
mov
sub
push
pop
mov
push
jo
dec
int
data16
or
lar
jg
cmpsb
lret
in
sub
push
adc
popf
les
mov
shlb
adc
sbbb
repz
cmp
test
jno
pusha
xchg
adc
aas
std
and
inc
repz
push
cmp
ds
mov
ds
pop
adc
imul
lret
into
addr16
mov
adc
mov
pop
repz
push
push
inc
add
fadds
lret
outsb
mov
mov
ss
cltd
xor
adc
inc
aaa
cwtl
or
xor
jo
mov
jne
xchg
sub
cmpsl
cmp
daa
or
mov
or
push
and
ja
sub
and
movsl
les
jmp
repnz
imul
mov
dec
push
inc
lods
jae
push
inc
mov
arpl
push
mov
and
add
lds
jmp
gs
xchg
cmp
xor
mov
pop
addl
xchg
adc
add
das
rorl
add
sub
test
add
testb
xchg
pop
inc
xor
add
decb
sbb
leave
fstps
icebp
mov
dec
cs
pop
add
dec
mov
lods
jo
imul
addr16
cmp
shrb
jl
push
or
cmp
or
mov
adc
pushf
dec
and
adc
in
push
ljmp
jb
jb
mov
cli
pop
pop
insb
push
push
lahf
loope
icebp
orb
sbb
sub
mov
dec
mov
lds
jne
aas
dec
dec
xor
and
xor
dec
or
mov
pop
mov
push
add
das
inc
add
in
add
sahf
sub
divl
add
int3
xchg
fcmovu
add
inc
sbb
ja
fisttpll
adc
add
or
es
outsl
fdivrs
xor
leave
das
xchg
xor
or
mov
jo
daa
cwtl
mov
dec
xlat
lcall
push
cmp
push
in
lods
inc
fdivrp
lcall
test
push
adc
arpl
data16
pop
imul
ljmp
inc
xchg
pop
pop
aaa
je
mov
dec
add
jbe
push
jo
jo
push
int3
insl
add
divb
mov
jne
rcl
mov
xchg
xchg
test
mov
sarb
int3
pushf
mov
lds
ret
imul
add
cmp
add
cmp
call
or
rcrb
cs
xor
test
xchg
pop
mul
add
mov
ret
ret
or
xor
pop
or
jbe
ds
mov
push
insl
movsb
mov
add
aas
leave
add
ret
xchg
jecxz
xchg
sbb
ja
sub
lods
das
fs
jne
cltd
ja
or
out
mov
inc
or
lcall
rcr
or
ficoml
dec
push
inc
int
inc
inc
pop
das
jbe
seta
pop
pop
jne
mov
sbb
push
push
dec
mov
mov
dec
mov
cmpsl
jae
push
adc
jge
xchg
int3
test
push
adc
bound
dec
and
les
leave
xor
scas
add
int3
lret
jo
test
sti
mov
fxch
es
mov
jbe
ret
ret
add
lret
or
aaa
jecxz,pn
fwait
sbb
inc
test
dec
pop
dec
xchg
mov
stc
dec
jle
xlat
adcb
push
out
pop
aas
xchg
and
xor
pop
pop
cltd
lds
add
in
sub
pop
ja
mov
push
enter
sti
rcll
or
inc
lcall
xlat
xchg
add
stos
icebp
jle
inc
insb
jmp
test
hlt
fbstp
cmp
shlb
mov
jno
mov
mov
fmuls
sub
jecxz
scas
dec
ds
xchg
test
insb
jecxz,pn
out
imul
add
xchg
cmp
outsl
mull
mov
lahf
jae
add
xchg
es
cld
lods
daa
mov
inc
mov
jb
sbb
aam
mov
push
cltd
sub
pop
mov
cltd
xchg
mov
stos
adc
sbb
sub
jmp
xor
or
out
xchg
xlat
push
lret
adc
xchg
shll
pop
popf
cld
fldenv
pop
cltd
sahf
dec
xlat
std
lret
inc
push
jp
mov
push
sbb
in
pop
jle
push
mov
jb
mov
outsb
ja
test
adc
xor
movsl
dec
cmpsl
insl
es
sbb
test
pop
pop
mov
mov
mov
xor
nop
add
xor
adcl
mov
fistps
mov
or
cmp
inc
add
inc
jae
mov
cs
cmp
daa
ss
xor
lret
mov
daa
dec
repnz
dec
mov
jl
mov
xchg
dec
mov
stc
and
imull
xor
movsl
or
mov
add
adc
xchg
push
fildll
dec
rcrl
add
xor
ljmp
test
sub
lret
cmpsl
icebp
jg
imul
aam
scas
dec
mov
dec
stos
push
aaa
mov
mov
lret
inc
pop
add
jmp
leave
imul
or
pop
sub
push
add
dec
inc
sbb
pushf
int3
aaa
xor
fdivs
jo
loope
mov
jo
add
add
lea
dec
int
daa
xor
js
mov
aad
popf
jge
add
fs
aas
out
rcrb
mov
repz
inc
sub
add
lods
in
lret
jl
jle
dec
pop
out
pop
mov
pop
sub
cmp
shrl
dec
push
int3
mov
mov
cmp
int3
out
insl
xchg
fs
pop
push
add
push
xchg
fxch
movsl
in
xchg
pop
xor
jae
push
leave
jns
mov
jge
ret
xchg
popa
xchg
xor
or
sub
jb
es
cmp
add
inc
subl
dec
xor
xchg
add
inc
andl
xchg
add
mov
test
dec
add
cmp
and
pushf
lret
and
das
adc
sbb
daa
xor
push
add
fsts
pop
mov
xchg
lea
jbe
push
xchg
roll
jo
fdivrl
outsb
aaa
push
cmp
loop
pop
sub
bnd
or
xor
pop
pop
add
or
mov
je
push
stos
cli
pop
icebp
in
jns
mov
leave
mov
push
into
mov
scas
sub
cs
xchg
sar
inc
test
test
jg
mov
fs
ret
outsb
sub
out
dec
ret
xchg
cmp
rolb
cs
mov
cwtl
cmp
jo
pop
leave
cld
dec
repz
jne
ds
xchg
cmp
enter
ja
mov
xchg
movsb
push
cmp
mov
fnsave
daa
outsl
and
pop
cmp
stos
aas
into
popf
cmp
and
movsl
lret
add
cs
pop
out
nop
cmpsl
sti
dec
xor
push
mov
out
and
mov
inc
stos
xor
jb
add
jmp
ja
mov
xor
dec
mov
mov
movsb
dec
add
adc
xchg
daa
cli
insl
mov
xlat
inc
popf
mov
mov
fimuls
in
sub
sub
pop
insb
jb
adc
add
loop
cmp
add
mov
dec
ret
or
shrl
xor
or
fsubs
pop
adc
repz
and
dec
add
add
mov
lock
arpl
and
cld
jmp
jecxz
dec
lods
shl
cli
push
pop
pop
test
pop
repnz
jne
daa
mov
test
inc
imul
push
pop
je
cmc
daa
push
add
jb
inc
pop
sbb
lcall
push
pop
lret
jle
jmp
mov
call
mov
test
mov
rolb
daa
jo
add
inc
es
mov
mov
push
dec
lds
sbb
outsb
pop
pop
rorb
andl
int
and
ds
lret
mulb
adc
cmp
mov
ss
mov
jp
cmc
xchg
outsl
adc
bound
sbb
bound
inc
add
push
or
pop
mov
lds
jb
pop
fsubrl
xor
mov
jno
int
sbb
inc
je
mov
lds
test
stc
sahf
addr16
outsb
jg
xchg
fldcw
push
jo
cmp
pop
jb
jg
insb
mov
int3
test
aaa
xchg
mov
cmp
rorb
pop
cs
jg
sbb
cwtl
mov
lock
mul
fidivrs
int3
and
push
xchg
mov
sbb
unpcklps
pop
call
add
add
lret
cwtl
popf
clc
ss
mov
or
bound
xchg
mov
cmp
dec
jmp
aas
stos
into
test
and
pop
jmp
or
cmpsl
sub
push
ds
add
jno
stos
dec
ja
mov
push
pop
lahf
fs
add
jb
je
mov
pop
sub
and
in
inc
fiaddl
jge
loopne
jno
fs
push
mov
mov
repz
xchg
mov
add
sbb
xor
leave
sbb
inc
sbb
xchg
mov
pusha
aaa
stc
loop
jo
js
int3
dec
enter
sbb
in
xchg
adc
icebp
and
movhps
dec
cltd
dec
and
inc
pop
adc
enter
sbb
cmpsl
mov
addr16
jnp
mov
dec
mov
or
push
in
lret
sub
jae
jmp
and
je
pop
jecxz
scas
test
mov
stos
mov
outsb
xlat
cmp
mov
pop
xchg
pop
dec
dec
jb
and
cmpsl
pop
enter
pop
push
out
fwait
add
pop
cmc
into
inc
lret
pop
adc
fistpl
xchg
pop
dec
and
cmp
ljmp
lds
sbb
push
movsl
pop
xor
ss
add
stc
test
pop
shlb
cli
test
push
pop
rcrb
imul
cmpsl
add
fistpll
lret
ja
sbb
xor
adc
loopne
clc
cli
cmc
xchg
adc
lret
inc
push
push
jmp
stc
ljmp
sub
bound
xchg
xchg
jno
add
jns
or
das
sbbl
xor
insl
push
push
mov
mov
push
adc
insb
inc
add
cmp
insb
or
jno
jb
push
pop
mov
jno
lods
jbe
ja
or
insl
push
push
cmc
int3
dec
sti
cmp
or
pop
push
daa
adc
add
lret
dec
add
xchg
ss
mov
fiadds
adc
adc
sbb
add
push
sbb
sbb
push
mov
test
jmp
pop
lods
add
push
popf
lcall
ret
inc
mov
cmpsb
sbb
sbb
movsl
roll
ljmp
mov
in
push
popf
pop
lret
in
lret
adc
push
jecxz
push
jno
leave
jbe
out
push
and
loope
gs
lea
pusha
pop
add
jo
xchg
add
pop
pop
pop
jmp
adc
or
push
aaa
adc
adc
repz
add
mov
pop
pop
pop
iret
pop
mov
ja
xchg
fstpt
jle
lret
mov
pop
test
xchg
rolb
mov
pop
add
mov
sub
xor
mov
mov
adc
adc
push
aaa
daa
imul
dec
xor
mov
loopne,pn
push
loope
xor
mov
lods
outsl
loopne
call
cld
es
add
xchg
adc
pusha
add
leave
add
idivb
scas
jno
addr16
add
cs
mov
xor
ds
mov
dec
push
xor
insb
call
xor
jbe
xchg
fptan
mov
cmp
pusha
add
mov
mov
mov
cmp
insb
das
mov
add
and
push
adc
or
mov
push
push
fsubs
dec
call
lret
movsl
scas
add
out
es
sbb
push
push
sub
inc
sarb
fidivl
aaa
adc
cmp
push
sbb
xchg
ss
fs
mov
mov
xchg
outsl
or
add
sbb
je
aaa
cmp
aas
fxch
outsl
xchg
cltd
xchg
dec
aaa
cmp
lods
and
test
xchg
lods
imul
jo
pop
xchg
mov
inc
dec
outsb
mov
leave
pop
pop
dec
jbe
pop
or
jg
mov
sub
or
pop
jl
pop
jo
repnz
xchg
inc
rcll
jae
mov
dec
cmp
mov
push
jo
inc
pop
mov
sbb
dec
push
arpl
or
jmp
pop
movsl
pop
xor
inc
stos
ljmp
rcr
xor
outsl
xor
xchg
dec
fwait
xor
rolb
or
pop
adc
movsb
outsb
sbb
fstpt
fdivl
xor
shl
imulb
sahf
adc
outsl
or
dec
aaa
or
int
pushf
push
aas
scas
pop
jmp
ja
adc
xor
insl
cwtl
outsl
xor
dec
mov
add
clc
cli
call
and
mov
push
enter
dec
jb
rolb
dec
sub
inc
push
pushw
inc
mov
pushf
fldenv
sbb
push
out
sub
mov
jg
pop
sbb
xchg
cmp
pop
inc
fwait
mov
js
out
pop
jae
loop
xchg
das
xlat
xor
aaa
add
ja
sbb
mov
xor
jg
in
xlat
orb
leave
add
test
leave
cmp
pop
or
ds
fimull
add
mov
out
jecxz
aaa
xor
shrb
dec
sahf
jo
test
sub
xchg
cmp
sub
cmp
sbb
sbb
aaa
movsb
aaa
xor
cmp
adc
mov
xchg
fsubrl
jo
jo
dec
xchg
test
push
jmp
fucomip
pop
fs
repz
mov
and
jecxz
loope
push
jae
nop
das
inc
aas
xchg
repz
xchg
cmp
gs
mov
idiv
xchg
mov
loope
repnz
xor
cld
repz
insl
mov
pop
inc
dec
pop
xchg
adc
in
test
mov
shlb
popf
xlat
outsl
jbe
add
pushf
pop
sbb
int3
ss
mov
imul
jo
test
fidivl
movsl
cmp
adc
out
fiadds
or
sub
mov
adc
aaa
push
xor
add
loope
fidivrl
loope
repnz
fwait
jo
mov
lea
fsubl
push
inc
je
in
outsl
sub
pop
ret
mov
push
data16
push
aaa
jge
cli
ss
inc
dec
jbe
movntq
mov
imull
fisubl
out
add
xchg
pop
push
pop
pop
cli
and
mov
inc
mov
dec
adc
dec
aaa
jae
adc
outsl
nop
ss
dec
aaa
aaa
dec
ss
shll
mov
dec
jecxz
fidivs
pushf
fimuls
or
test
rolb
cltd
cmp
shll
movsb
add
pushf
lret
jl
inc
adc
hlt
stc
notb
jne
mov
adc
rorb
inc
adc
sbb
sbbb
int3
dec
sub
dec
and
adc
sub
jo
rolb
cmp
mov
out
dec
out
lahf
lret
cmp
push
cmp
add
xor
or
cs
jp
movsb
call
int3
aaa
leave
xor
fcoml
setnp
dec
outsl
push
sbb
add
add
into
jp
adc
sti
sbb
ja
xchg
sti
mov
add
es
cmp
ret
mov
outsl
adc
mov
and
or
ret
imul
gs
cli
hlt
std
fbstp
mov
fs
pop
dec
push
cmp
bound
lcall
daa
or
out
lock
xor
add
in
outsb
inc
pop
inc
rorb
jns
cli
in
enter
pop
pusha
add
push
push
pop
pop
dec
or
jo
cmpsl
cmp
lods
sti
push
out
inc
movlhps
repz
daa
mov
divl
mov
in
outsb
mov
inc
lock
cmp
add
sbb
fnstsw
int
xchg
les
jae
mov
xor
fstpl
jmp
cmpsb
dec
mov
outsb
sbb
add
xor
pop
jb
xchg
cmpsb
mov
push
dec
cmp
ret
lret
inc
in
popf
pop
jo
xchg
mov
mov
xchg
pop
mov
out
pop
mov
pushf
ret
mov
sbb
ljmp
or
in
imul
add
in
stos
inc
into
mov
in
out
jae
mov
push
push
add
cmp
int3
or
xchg
mov
xchg
jmp
pop
ror
and
sbb
or
ja
jo
adc
outsb
fnsave
xor
enter
jmp
fildll
sub
jo
lock
mov
outsb
or
cmp
aam
xor
dec
cmp
pop
outsb
lahf
and
add
enter
add
mov
daa
mov
pop
imul
mov
outsb
loopne
imul
pusha
cs
dec
repz
neg
fidivl
iret
fisubrs
in
and
je
sbb
mov
test
adc
xchg
adc
imul
cli
mov
ret
aas
jmp
in
fiadds
and
sbb
adc
push
sub
aaa
cmpsb
mov
jp
jl
clc
cli
icebp
jo,pn
jl
enter
rcr
cmp
aas
adc
cmp
aaa
fdivrl
dec
cmp
xchg
outsb
insl
xchg
lods
or
inc
test
adc
xchg
mov
dec
sub
fisubs
sarl
add
sub
shr
outsl
push
int3
imul
es
sbb
loop
shrb
mov
cmp
lret
pop
in
sub
jmp
movsb
out
scas
adc
loopne
xor
scas
pushf
xchg
jo
cmp
fisubs
push
mov
mov
in
pop
or
nop
sub
dec
popf
jnp
pop
pop
adc
push
xor
jbe
popa
jge
fmulp
mov
outsb
nop
aaa
sbb
cmp
fcmovu
dec
lods
ret
test
cmp
xor
es
aaa
lods
ret
sub
cmp
mov
xor
mov
mov
mov
and
push
mov
loop
push
dec
push
mov
pop
pop
lcall
mov
mov
fs
mov
sar
nop
lret
adc
cs
out
cmp
push
add
sahf
fdivrl
ret
test
imul
dec
fs
jnp
lock
mov
or
push
dec
mov
jno
cwtl
ss
xchg
pop
test
flds
or
in
sub
int3
js
mov
fists
jo
loopne
int3
adc
or
push
xorl
sub
sub
or
jo
inc
or
leave
test
out
and
decb
push
fildll
adcb
fiadds
jmp
je
push
rorl
mov
pop
dec
sub
jae
pop
sub
insl
lods
mov
add
push
pop
jo
rolb
dec
pop
imul
loop
xchg
std
jg
aas
pop
add
aas
or
xchg
mov
das
sub
aas
aad
and
popf
inc
xor
jp
outsb
xchg
lock
fsubs
add
or
pop
outsl
dec
cmp
pop
test
fldcw
jl
jb
cmp
mov
sub
call
iret
sub
in
pop
out
into
das
pop
sbb
sub
in
leave
xchg
shrl
pusha
and
out
outsb
mov
mov
rcll
mov
out
and
sub
bound
int3
enter
cmp
jns
jl
xor
mov
adc
sub
sbb
jl
or
sbb
xchg
mov
fcomps
repnz
test
daa
mov
sub
cmpsl
sbb
dec
je
in
ja
push
adc
pushf
fistpll
cmp
cmc
adc
iret
xlat
rorb
jno
dec
loop
out
sbb
jmp
popf
into
jo
enter
int
fs
mov
int3
jb
lds
lret
jmp
popf
jo
aaa
pop
jo
lea
and
adc
cs
jo
aam
lret
movhps
xchg
imul
ret
fsts
jo
idivl
push
dec
mov
fsubl
daa
cmp
daa
paddsw
fsubp
in
and
lods
outsb
lret
shlb
mov
sub
xchg
daa
fidivrl
fbstp
lret
push
cmpsb
movsb
xor
cmp
das
inc
lahf
iret
jo
loopne
test
push
test
xor
sbb
ljmp
fcmovnu
ret
mov
jo
mov
pop
out
cmp
ljmp
fucom
jl
jo
xor
out
and
sub
push
mov
mov
mov
xorl
mov
std
movsb
daa
movsl
push
cmpsb
mov
lahf
sbb
rol
push
mov
jo
ret
cmpsb
enter
or
adc
test
lods
add
pop
mov
dec
cmp
jbe
clc
jb
stos
and
loopne
rcrl
push
mov
out
loopne
fildll
pusha
pop
jo
mov
les
call
cmpsl
xor
add
sub
aaa
addps
adc
push
cmp
mov
mov
jno
jmp
pop
mov
pop
mov
ds
xchg
or
adc
adc
idivb
int3
cmp
ret
xchg
mov
test
inc
jl
gs
mov
ljmp
loope
jmp
mov
out
in
jmp
rcrl
mov
mov
insl
lahf
clc
setb
out
or
adc
inc
sbb
pop
pop
imul
mov
out
cmpsl
movsb
xchg
cmp
lret
ret
shl
sbb
orb
mov
mov
lret
fldenv
add
push
inc
xchg
adc
xchg
mov
sbb
lret
fcmove
in
inc
in
xor
enter
mov
stc
jb
stos
adc
cs
adc
test
mov
gs
push
outsb
pop
mov
pop
gs
rcll
jmp
jge
ljmp
jp
add
and
cmpsl
and
add
ja
pop
sahf
loope
or
incl
mov
adc
jno
or
outsb
int3
sti
jae
ljmp
sahf
push
sbb
xor
jo
ficoms
enter
imul
sub
cmp
int
and
or
cmp
dec
aaa
jnp
sbb
clc
addr16
imul
out
jo
dec
mov
out
shlb
iret
jmp
pop
das
hlt
mov
popf
gs
or
jmp
loopne
out
lret
mov
pop
mov
mov
or
sbb
aas
xor
and
sti
xor
add
sub
add
icebp
and
or
lds
jbe
or
dec
mov
xor
dec
and
add
sbb
add
and
fmuls
cltd
clc
loopne
sti
outsb
dec
filds
lods
sub
adc
ja
cmc
movsl
flds
rclb
outsb
stos
lahf
lds
mov
lahf
mov
jmp
aas
daa
push
rcrl
xor
repnz
subb
inc
rorb
icebp
test
xor
scas
int
inc
and
das
lret
push
iret
pop
push
jp
dec
aas
xchg
fisubs
pop
mov
call
sub
xlat
in
pop
xchg
ds
sub
movsb
add
inc
fcoms
ja
js
test
cld
xor
cmp
or
and
mov
stc
idivb
pusha
ret
or
xchg
inc
in
and
call
in
fistpl
dec
sub
pop
int
push
mov
outsb
ljmp
add
dec
mov
dec
add
add
xor
lea
sub
xchg
mov
push
inc
dec
xchg
popf
ficoml
outsb
pop
fldt
scas
add
mov
mov
dec
ja
jno
pop
xchg
mov
xchg
cltd
popa
adc
inc
adc
icebp
cld
pop
aaa
movsl
mov
ds
xor
aas
add
adc
mov
xor
popa
cmp
in
loopne
xchg
mov
cmpsb
cld
cwtl
outsb
faddl
and
fucomi
out
mov
leave
jns
fs
jmp
repz
push
push
loopne
adc
jnp
mov
mov
outsb
ffreep
xchg
mov
movsb
add
shll
sbb
mov
xchg
mov
jo
sti
movsb
lea
dec
mov
iret
mov
xor
pushf
and
add
jmp
mov
je
fadds
lods
enter
mov
mov
mov
mov
lods
das
ret
sbb
mov
jb
outsl
push
and
notl
and
cmp
test
cs
mov
loop
in
lock
pop
xchg
mov
lds
das
dec
lahf
lock
jmp
mov
mov
in
lcall
jp
add
jo
jp
pop
imul
movsl
add
fldl
add
sahf
sub
cmp
fcoms
js
outsb
xchg
sbb
and
pop
adc
cmpsl
test
xor
stos
test
sahf
popa
cmp
jbe
out
icebp
lods
cld
enter
adc
cmp
push
xchg
mov
lret
jp
push
xchg
xor
add
loope
or
fdivl
shlb
or
xor
scas
adc
xchg
add
jo
mov
mov
loop
popa
dec
out
iret
mov
add
test
ljmp
lock
repnz
sahf
out
add
loop
loope
dec
popl
jg,pn
fucom
cwtl
mov
daa
xlat
mov
outsl
xchg
lea
test
lret
pushf
push
and
add
pop
pop
xor
pusha
adc
mov
mov
sub
pop
flds
ret
outsl
loop
jp
or
imul
cltd
cmp
lods
sbb
push
xor
jbe
call
inc
ret
jo
xchg
test
into
fbstp
jg
sub
and
out
ja
adc
cmc
out
sbb
fstl
jo
addr16
push
inc
add
sbb
jnp
mov
fwait
jo
lds
mov
jns
or
outsl
mov
mov
jae
enter
ja
mov
daa
adc
inc
adc
and
mov
outsl
mov
cli
xchg
jo
fimuls
ja
cmpsb
dec
test
sbb
dec
movsb
dec
cltd
cld
notl
and
aas
testl
int3
cltd
cli
add
clc
cli
jmp
mov
mov
addl
add
loop
out
fimuls
sub
or
lock
loope
sbb
mov
lods
mov
pop
cli
in
xor
gs
mov
add
mov
shlb
mov
add
lcall
adc
jo
stos
add
or
inc
adc
xchg
or
negb
jo
mov
shl
je
mov
cltd
ds
popa
cmp
inc
mov
xor
out
insb
sub
inc
pop
mov
loope
ret
xorb
jo
nop
sbb
lcall
iret
push
out
jae
jge
fidivs
jo
lret
loopne
outsb
lret
jbe
ja
in
pop
shlb
insb
cmp
dec
loopne
loopne
test
dec
mov
popf
xlat
add
cmpb
scas
scas
stos
jno
or
dec
cld
sub
xor
xchg
pop
inc
fchs
loop
xchg
dec
cmp
loopne
stos
popf
xchg
aaa
push
push
add
call
test
inc
rcll
jne
jmp
ret
outsb
fldlg2
test
cmp
jecxz
pushf
sub
test
mov
sub
mov
xchg
inc
push
jbe
mov
jecxz
sti
sbb
stc
push
into
jle
mov
lock
mov
push
xchg
jo
je
jae
xchg
jne
shl
stc
out
pop
and
fimuls
mov
or
test
popf
jbe
pop
fldt
mov
mov
dec
fisubrs
push
xchg
mov
subl
mov
shrb
xchg
inc
push
movb
sbb
jo
arpl
outsl
repz
loopne
mov
std
das
dec
mov
shlb
lret
out
or
daa
faddl
add
dec
or
and
imul
jp
mov
mov
or
inc
jne
cs
mov
shll
inc
insb
fwait
pop
pop
jae
xchg
or
je
xchg
fiadds
pushf
rcr
inc
loopne
loope
in
adc
loopne
fisttpl
jo
out
or
in
ljmp
jmp
add
mov
pop
mov
lahf
and
aaa
mov
lods
jb
imul
xchg
xchg
pop
fs
sub
cmp
pushf
sbb
arpl
mov
shl
jbe
jmp
ret
enter
pop
test
ret
pop
sub
int3
mov
sub
xor
mov
push
mov
pop
xchg
and
cmc
adc
or
stc
idivb
add
aas
add
jno
mov
or
xchg
leave
jne
pop
jnp
or
andb
nop
movsl
popf
sarb
loop
out
xchg
int
fs
arpl
lret
jo
jbe
sub
stc
outsl
mov
adcb
mov
cmp
add
or
lret
shr
adc
cmpsl
mov
adc
mov
jo
jp
es
pop
int
jo
add
cltd
fxch
lret
popf
shlb
ret
xchg
pop
push
outsl
loopne
call
addr16
sbb
lret
adc
mov
daa
sbb
and
pop
test
cmp
add
ficoml
pop
jecxz
jo
mov
cmc
aas
inc
add
outsb
xchg
add
into
or
lahf
outsb
je
cmp
dec
dec
jp
outsb
or
xchg
mov
add
frstor
pop
jno
mov
out
stc
ret
hlt
sub
mov
mov
and
jnp
mov
sahf
xchg
push
inc
add
cmp
rcr
lret
jo,pt
loopne
push
les
arpl
aad
mov
in
in
jo
jbe
mov
flds
push
and
cs
ds
jecxz
int3
daa
ja
mov
cmp
mov
inc
xlat
fimuls
jo,pn
push
adc
cmc
orb
cmc
xchg
jo
cmp
mov
xchg
mov
jno
movsb
add
jbe
pop
jae
pop
or
fwait
jne
xchg
jne
inc
xlat
mov
cmc
add
lea
aas
loope
gs
aaa
int
jb
pop
pop
jbe
xchg
movsb
mov
add
xchg
jb
lret
or
mov
or
lea
add
into
fdivl
fcompl
inc
push
test
xchg
arpl
adc
sbbb
int3
pop
mov
outsb
jo
add
cli
loopne
inc
popf
add
out
adc
stc
pop
pop
mov
cltd
or
fimull
xchg
pop
popa
jo
xlat
in
test
jmp
fldenv
cli
ret
cld
mov
imul
jo
jne
stos
imul
xchg
mov
pusha
jb
out
jmp
jns
mov
insb
jno
sahf
out
pop
rorl
jae
out
xchg
or
cmpsl
test
add
out
xchg
ror
je
dec
mov
vpmacswd
xchg
jle
mov
or
xchg
xchg
jno
test
fidivl
or
out
daa
adc
jmp
jns
loop
inc
mov
fidivl
repnz
loope
divl
jo
mov
mov
test
ret
bnd
lds
lods
xor
mov
pop
decb
out
cmp
pop
shl
add
cmp
stc
cmc
adc
xchg
int3
gs
jo
cwtl
sub
insb
lods
fsubrl
pop
je
rorl
out
jae
push
ja
cmp
fwait
jae
jmp
jne
xchg
in
mov
nop
cmpsl
pop
sbb
mov
call
into
dec
mov
jge
cli
lds
mov
add
inc
xchg
jle
hlt
in
adc
mov
cmp
xchg
das
fwait
inc
sub
jo
push
sub
push
lret
jp
add
adc
movb
add
popf
leave
jb
jmp
or
and
xor
cmp
lahf
out
je
test
out
sub
sbb
inc
idiv
jecxz
or
jo
cmc
push
js
in
nop
or
mov
jbe
in
call
push
xchg
pop
mov
inc
aam
into
pop
jo
mov
inc
pop
adc
mov
pop
xchg
add
nop
int
bound
xchg
inc
xchg
mov
jns
out
jmp
dec
xchg
mov
mov
jp
xchg
in
imulb
scas
call
adc
sbb
cld
cmp
sarl
sbb
mov
xchg
js
pop
xchg
sahf
push
sbb
sbbb
mov
jo
xor
mov
lret
int3
test
sbb
test
cmp
cmp
inc
fwait
aaa
cmp
bound
aam
mov
scas
imul
mov
into
cltd
cmpsb
add
int3
in
dec
jmp
fwait
cld
mov
or
ja
mov
pop
inc
test
inc
cwtl
loop
loope
scas
lret
adc
mov
movd
add
push
jne
pop
mov
movsl
dec
pop
pop
mov
and
mov
cmp
pop
jae
pop
leave
in
call
divb
jb
sbb
pop
or
fcmovnbe
sti
sahf
shrb
jbe
xchg
out
andb
aaa
jne
jb
xlat
stos
pop
xor
add
lea
xchg
cmpsl
mov
movb
or
shlb
mov
jno
scas
mov
xchg
pop
xchg
lods
addb
mov
cltd
lret
mov
iret
out
mov
clc
push
pop
inc
pop
fstl
popa
cmp
popa
inc
push
dec
out
call
aas
add
test
ret
lcall
cwtl
mov
leave
mov
into
ja
test
mov
jle
cltd
fs
add
xor
cli
fidivrl
cld
es
scas
add
xchg
je
test
jne
jb
mov
int3
shlb
iret
lods
je
pop
movsl
jmp
mov
data16
push
sub
je
arpl
stc
pop
inc
mov
mull
mov
popf
sub
and
stos
cmp
int3
shll
scas
es
push
dec
mov
pop
jno
cs
unpckhps
mov
add
inc
inc
and
out
loope
int
roll
mov
fs
idivl
xchg
roll
mov
inc
in
jo
dec
stos
in
add
outsl
test
cmp
int3
dec
icebp
or
and
mov
xor
lcall
push
xchg
sahf
int
lods
add
xchg
pop
repz
clc
mov
pop
inc
jl
cltd
mov
icebp
sti
leave
test
cli
mov
jo
jge
ret
jg
scas
push
add
mov
jae
fwait
je
sub
iret
ds
stos
jne
jb
push
mov
push
inc
mov
xor
fwait
jmp
out
daa
adc
call
nop
ror
adc
sub
fisubrs
in
pop
jl
xchg
jg
mov
popf
filds
mov
cmp
push
sbb
rcl
shll
inc
pop
inc
sub
dec
outsl
and
add
test
sub
je
push
xor
pop
push
dec
dec
xchg
push
lds
popf
xchg
cmp
xor
stos
scas
les
cld
rolb
mov
xor
cmp
movsl
lret
daa
and
bound
add
test
sub
xchg
into
bound
xor
add
aaa
add
or
sub
mov
loopne
adc
enter
cmp
ret
fstl
fs
loope
mov
add
scas
or
jo
mov
ret
je
repnz
fnstenv
sub
mov
mov
imul
daa
mov
jno
sub
popf
int3
adc
mov
xor
xchg
je
std
pusha
mov
mov
aas
xlat
and
mov
test
xor
arpl
in
insb
add
mov
xchg
sub
adc
scas
dec
add
or
lods
pop
sbb
pop
fnstcw
cmp
add
int3
cld
incb
jbe
out
mov
add
fsubs
lcall
sbb
data16
lret
add
inc
repz
outsl
popa
cltd
push
and
xor
and
outsl
fnstenv
add
adc
push
and
xor
xor
dec
or
fstpt
cmp
pushf
fidivrl
frstor
mov
ret
mov
jno
add
xlat
aaa
jae
dec
and
rol
jne
je
jb
out
jp
lahf
in
mov
inc
arpl
mov
pop
je
movsl
icebp
mov
xchg
xor
inc
mov
adc
push
mov
das
stc
push
sti
ret
xchg
sarl
mov
xlat
test
xor
pop
lods
push
push
mov
dec
pop
iret
popf
jmp
jle
add
enter
sahf
daa
mov
push
pop
ja
in
or
jg
dec
or
mov
jg
lock
leave
mov
jo
jbe
out
cmpsb
add
lods
or
scas
cmp
addr16
jl
mov
ds
and
add
cmp
push
inc
jno
or
insb
aaa
in
loope
lcall
mov
push
test
add
or
lods
cmp
add
stc
mov
test
fwait
jo
add
mov
add
je
dec
push
call
pop
xchg
mov
test
jecxz
mov
push
pop
jae,pn
js
cmc
jbe
jbe
int3
mov
pop
pop
adc
xchg
clc
push
nop
add
mov
pop
je
in
jl
jmp
arpl
mov
pop
xchg
xor
lds
jae
aaa
call
mov
inc
add
mov
sub
xor
xor
add
jb
pop
add
push
loope
jno
cmp
stos
cltd
dec
dec
mov
bound
arpl
xchg
xchg
pop
cmpsl
rolb
mov
jl
ljmp
mov
jge
jae
sub
pop
mov
mov
icebp
fadd
lds
mov
ds
jae
mov
or
add
pop
pop
test
add
xchg
add
or
loopne
add
loop
sub
loope
je
inc
lods
lock
fcomp
mov
fxch
jl
adc
cld
das
int3
fucomp
popa
movsl
add
test
mov
bound
cmp
mov
sahf
out
jbe
jbe
pushf
in
adc
jmp
int3
jne
je
mov
pop
pop
mov
out
das
sahf
shl
daa
jno
cmp
leave
outsb
fbld
dec
js
xchg
data16
and
cmp
mov
mov
pushf
pushl
orl
mov
test
and
and
pop
loop
dec
jae
aam
movsl
imul
push
cmp
pop
jae
test
mov
mov
jae
enter
mov
add
roll
jnp
mov
into
xchg
xchg
test
push
inc
xchg
stos
jp
shrl
loop
jo
dec
out
jecxz,pn
jae
je
adc
and
rorb
ds
mov
mov
inc
fldl
pop
loope
ret
mov
xchg
dec
add
add
jg
jae
andl
cmpsb
pop
dec
lret
addr16
iret
push
mov
loopne
idiv
mov
mov
xor
add
push
push
xor
dec
or
pop
cltd
jb
jb
dec
jno
aam
je
loop
ds
pop
int
lods
add
lds
jnp
mov
inc
enter
int
shll
mov
cmp
cwtl
mov
mov
xchg
pop
roll
dec
add
sub
dec
mov
jge
jnp
fisubrl
mov
cmp
aaa
add
add
jge
femms
mov
add
shll
clc
shll
add
pushf
jne
cmp
xor
fisubrl
mov
fbstp
add
pop
sbb
add
and
xor
adc
in
cmp
test
and
outsb
cmp
mov
std
jno
fldl
sahf
test
insl
rorb
ljmp
enter
ja
lock
ljmp
hlt
jp
xchg
movsl
xor
mov
mov
sub
jmp
cmpsl
dec
sarb
mov
stos
jbe
add
ljmp
add
jo
out
pop
lods
inc
call
jecxz
xchg
fisubrl
jp
mov
mov
xchg
mov
pop
fs
lret
adc
or
mov
adc
rolb
mov
and
xchg
sub
arpl
xor
add
ja
lods
movsb
mov
inc
add
add
mov
fcoml
push
orb
std
dec
add
dec
xor
pop
adc
sbb
cmp
and
dec
lret
add
cmp
inc
sbb
sbb
jp
cmp
add
mov
int3
ds
cld
mov
out
push
in
cs
test
dec
pop
or
je
jl
call
inc
dec
or
aad
fldenv
inc
and
stos
dec
lds
pop
cs
mov
sahf
mov
fwait
mov
pop
xchg
inc
test
mov
jbe
add
push
pop
xchg
ror
cmp
cmp
in
loope
imul
add
cmp
sub
xchg
test
sahf
aaa
adc
test
movsl
jne
pop
sub
xchg
sarl
outsb
mov
cmp
int3
xchg
imul
jo
hlt
pusha
add
fidivrl
mov
sbb
xor
outsl
jge
test
out
hlt
mov
loope
sbb
incl
ret
sub
xlat
sahf
cs
je
and
test
ret
mov
add
jecxz
dec
ds
mov
push
mulb
or
lods
jne
mov
lods
or
pop
cmp
pop
cmp
cmp
rclb
xchg
jae
movsb
mov
int3
mov
xchg
add
ret
sub
jae
jns
mov
stos
sub
pop
lds
mov
xor
push
cmp
les
loope
mov
jno
sbb
and
dec
inc
xor
lods
cmp
mov
inc
xchg
inc
mov
cmpsl
xchg
mov
cmc
mov
adc
aas
xor
hlt
xor
outsl
cmpsb
cmp
push
lret
dec
mov
mov
out
add
push
sbb
fcomi
dec
ss
outsl
les
sub
mov
add
add
jo
lret
pusha
xchg
jg
sbb
pop
test
ja
push
jns
mov
jae
mov
rcl
dec
jo
xchg
scas
or
leave
lret
out
pop
je
jecxz
jne
rolb
mov
ds
mov
push
cmp
cltd
add
mov
mov
sub
push
mov
std
js
jo
movsl
add
mov
sub
mov
lds
sub
popf
mov
add
xor
adcl
cs
add
loope
mov
loope
jns
inc
add
mov
repz
pop
add
mov
jb
dec
mov
das
pop
into
cmpsl
mov
adc
into
jnp
jecxz
jno
hlt
in
xchg
clc
lods
jae
lahf
call
sub
xchg
mov
jl
data16
fld1
leave
arpl
mov
stos
mov
lock
mov
sub
inc
sbb
mov
push
fnsave
stos
mov
flds
enter
pop
rorb
mov
sbb
lcall
mov
outsl
lahf
jo
add
mov
shll
add
fnstenv
out
sbb
outsb
jb
into
xchg
shlb
scas
in
fisubrs
js
popf
adc
gs
mov
pusha
inc
mov
dec
xor
jne
fldl
int3
pop
repz
lock
mov
std
jo
mov
test
addl
mov
lds
inc
xchg
es
or
unpcklps
mov
or
mov
fnstenv
add
lods
dec
aas
and
xchg
add
jno
into
xor
mov
cmpb
adc
sbb
add
lods
iret
jo
loopne
sbbb
add
repz
in
pushf
call
pop
lcall
mov
dec
jmp
shll
sub
fistpl
sub
cmp
push
dec
push
cmpsl
cmp
nop
xchg
push
jle
jge
mov
sbb
sbb
mov
aam
add
push
jno
push
daa
add
lock
jbe
mov
addl
mov
jl
xor
mov
pop
or
out
mov
ret
or
fnstenv
movsl
push
arpl
xor
and
aas
add
sub
and
lods
lret
push
cmpsb
insl
mov
inc
lds
sbb
test
inc
jo
mov
pop
jno
mov
aam
jb
out
in
mov
shll
jno
mov
rcrb
fs
jbe
or
stos
movsb
jae
mov
addr16
push
test
leave
pop
ja
aas
xchg
ror
mov
je
xchg
loop
pop
outsb
inc
mov
pop
cmp
mov
add
add
daa
test
cmp
lods
xlat
inc
xchg
cmp
or
xchg
les
mov
jge
orl
xor
cmpb
sub
lahf
pop
xor
add
sub
stc
adc
and
or
mov
inc
ret
xchg
outsl
shrl
mov
add
jl
adc
outsl
iret
jo
mov
xlat
mov
jns
sub
je
arpl
je
loop
add
mov
pop
sub
sub
je
jb
popf
inc
loop
shrl
inc
mov
inc
xchg
scas
iret
jno
mov
cs
je
cmpsl
movsb
inc
shll
icebp
sahf
or
out
mov
inc
das
jns
cmp
cmp
mov
jo
xchg
xchg
adc
mov
rolb
xor
mov
ljmp
pop
add
dec
push
scas
rorl
int3
or
shrl
mov
mov
ds
imul
mov
jne
xchg
add
cmpsl
sub
int3
adc
xchg
add
jmp
xchg
adc
out
inc
out
dec
adc
out
rol
jno
xlat
cmpb
dec
in
outsb
rorl
jg
inc
rolb
inc
add
mov
jl
mov
cmp
jb
lahf
in
mov
out
pop
leave
ret
jne
inc
mov
rclb
lret
mov
mov
iret
dec
out
add
inc
test
enter
xchg
mov
outsl
sti
rol
mov
cmp
imul
sarl
jnp
hlt
cs
and
leave
out
sub
mov
mov
xchg
sbb
ja
pop
inc
adc
sbb
push
addl
xchg
insl
in
jo
loopne
mov
sahf
mov
pop
pop
pop
jne
xor
jb
pop
or
dec
sub
adc
movb
sbb
jno
mov
cmp
or
jae
mov
push
add
jbe
jb
inc
add
out
jne
les
xor
cmp
in
lahf
mov
enter
sub
push
inc
dec
fsubp
mov
jmp
stos
mov
sahf
sub
mov
ja
adc
add
scas
lods
nop
je
cwtl
outsb
mov
xchg
add
mov
add
and
and
xchg
ss
mov
jbe
shlb
les
out
add
aaa
xor
xor
cmp
test
out
mov
dec
daa
outsl
jp
or
add
aaa
xchg
xchg
xchg
jno
cmp
shll
sbb
ds
lret
xor
lret
xor
lret
test
add
ja
daa
cwtl
mov
and
mov
pop
aad
mov
je
push
add
push
mov
leave
ja
aas
fldl
lods
sub
jbe
mov
sub
and
jno
add
inc
mov
mov
sub
xchg
arpl
loopne
jo
push
xchg
jo
jno
sub
add
inc
fldcw
mov
lock
js
pop
jg
sbb
das
dec
adc
shrb
xorb
sbb
mov
lods
cmp
ja
and
jne
cwtl
jae
sahf
call
inc
int3
ret
push
sbb
inc
sbb
xor
je
outsb
jle
adc
pop
jge
jns
std
xor
mov
je
push
sahf
jno
lods
add
fdivl
xchg
ja
movsb
sarl
inc
mov
jmp
leave
adc
test
out
test
cld
lods
jne
int3
ljmp
roll
jno
jo
stos
fsqrt
nop
add
mov
cmc
adc
push
xchg
sbbb
cmpsb
imulb
jbe
cmp
pop
gs
dec
int
mov
inc
inc
push
pop
xchg
outsl
xor
or
inc
mov
sub
cmp
fst
pop
test
cmp
xor
adcb
int
pop
movsl
jmp
or
sub
cmp
shll
xor
flds
aas
rol
test
js
pop
adc
sub
pop
jo
bound
mov
les
sarl
lds
push
mov
outsl
or
jmp
jl
dec
jne
mov
divb
and
jnp
push
add
add
jno
inc
je
cmpsb
lret
mov
xchg
xchg
int
pop
xchg
xchg
iret
mov
outsl
xchg
popfw
addl
test
mov
fwait
es
or
add
repnz
dec
call
sarb
mov
test
lret
loope
mov
jp
scas
inc
sbb
xor
mov
lret
cmc
lds
xchg
daa
jo
adc
push
cltd
dec
sbb
jnp
mov
inc
xor
hlt
dec
fstps
jo
int3
in
pop
sub
inc
sbb
xchg
cwtl
mov
mov
outsb
xor
mov
lods
dec
inc
jecxz
aam
jb
or
hlt
mov
out
mov
std
mov
inc
mov
scas
or
mov
inc
sarb
xor
daa
add
pop
daa
jmp
mov
lret
push
inc
popf
push
int3
or
or
jg
adc
fsubrp
adc
adc
movntq
out
or
imul
sub
xor
es
mov
rcrb
imul
jg
mov
shlb
add
sub
add
fstl
cmp
or
adc
pop
fbld
and
sub
lahf
cltd
rolb
pop
fstpt
pop
mov
stos
mov
mov
popf
out
jb
fsubrl
aam
loop
add
mov
mov
pop
sbb
in
push
mov
mov
fxch
das
mov
jp
pushf
out
movsl
movsb
dec
pop
mov
out
add
and
stos
mov
fsub
xchg
pop
lea
sub
loop
popf
pop
mov
pop
daa
ret
push
fmull
je
add
aaa
push
rcrl
adc
stc
sub
dec
jbe
adc
sub
add
daa
cmp
lret
or
add
or
add
ljmp
shl
divl
out
adc
sub
xor
sub
add
sub
cmpsb
mov
push
xchg
popa
mov
jb
addr16
jb
xchg
mov
cmp
jne
mov
shl
shrl
jns
daa
icebp
mov
jbe
lea
jmp
inc
outsb
xlat
xor
pusha
insl
pop
mov
mov
xchg
mov
jo
cwtl
mov
mov
incb
dec
dec
sub
sub
sbb
cli
testb
or
std
cmp
insb
das
or
insl
stc
sub
aam
sub
mov
add
jo
shlb
sub
loope
jno
add
and
mov
jg
add
push
adc
cmp
imul
dec
dec
jp
or
xor
sbb
movsl
cmc
xor
mov
mov
adc
out
mov
movsl
in
mov
leave
pop
cs
dec
jecxz
imul
pop
jge
mov
push
int
fldt
int
aaa
pop
cmp
pop
cmp
cwtl
cmp
dec
ljmp
repz
mov
lret
mov
aas
mov
out
and
loope
inc
mov
adc
cmp
cmc
sub
jo
sub
cmp
jo
xchg
lret
mov
outsb
cmp
jecxz
add
push
adc
fwait
cmp
ja
xchg
testb
js
aad
nop
loopne
sbb
jle
mov
leave
js
shrb
sbb
jmp
pop
jbe
sbb
mov
pop
out
dec
jnp
mov
jb
das
push
jo
js
mov
xchg
clc
push
movsl
mov
int3
sub
mov
mov
mov
rclb
pushf
adc
jae
add
adc
cltd
mov
cmpsl
push
or
cli
in
insb
cmp
scas
mov
mov
fldt
movsl
aad
xlat
jae
gs
pop
sti
fidivrl
jg
mov
out
push
jo
mov
call
mov
pop
dec
pop
decl
mov
mov
je
cwtl
jne
xchg
je
lds
jb
pop
inc
adc
mov
fbld
aad
je
loop
fs
push
dec
loop
xchg
jo
out
jl
inc
inc
mov
xchg
cmp
mov
idiv
xor
cmp
jo
xchg
push
stos
pop
jno
inc
rcrl
mov
int
into
jns
sbb
pop
sarb
mov
jl
aam
int3
clc
xor
mov
shr
lahf
pop
sub
sbb
fisttpll
mov
inc
je
mov
jo
xchg
mov
sahf
mov
push
push
mov
pop
lret
cmp
cmpsl
push
mov
mov
jo
outsl
popa
outsl
cmpsb
cmc
stc
push
add
push
cmp
dec
dec
adc
mov
jo
jo
xchg
js
dec
sbb
lea
cmpsl
push
cmp
clc
pop
push
jge
lods
add
fistps
das
gs
pop
cli
je
leave
push
sub
mov
ljmp
fnstenv
outsl
outsl
adc
sarb
aam
mov
fnstenv
mov
mov
ret
push
cmp
xchg
inc
adc
icebp
xor
adc
nop
cli
cmp
int
out
cmp
hlt
jnp
loop
fidivrl
notl
cltd
adcl
add
repnz
clc
mov
mov
bound
jne
ret
jecxz
mov
jo
fistl
add
mov
mov
dec
add
call
out
jge
in
mov
mov
add
fwait
aad
cmp
xchg
in
popf
dec
test
mov
enter
xchg
adc
jno
mov
pop
xchg
outsl
ljmp
mov
lret
mov
mov
sbb
movsb
mov
fwait
xchg
clc
jno
pop
cli
push
dec
mov
leave
ret
dec
mov
out
ret
lds
sub
aad
stos
mov
pop
clc
sbb
loope
cld
jb
mov
cmp
sahf
and
test
jg
mov
aad
jge
xchg
inc
aam
bound
pop
push
mov
push
add
push
pop
lods
sub
mov
mov
addr16
stos
test
scas
imul
mov
adc
xlat
inc
inc
jns
adc
adc
dec
jge
inc
inc
sbb
or
jno
loope,pn
cmp
push
mov
notl
mov
fcoms
outsl
lret
dec
test
leave
enter
inc
ret
pop
jae
test
fxch
mov
add
xlat
adc
shl
jns
lods
je
jle
lods
sub
pop
cmpsl
push
ljmp
aam
cmpsl
pop
or
jbe
push
in
jl
mov
push
mov
lret
mov
push
inc
lret
cwtl
pop
scas
jbe
mov
out
pop
inc
pushf
out
fwait
mov
xchg
outsb
and
xchg
nop
xchg
jo
adc
inc
aaa
jge
outsl
or
push
add
je
mov
insb
mov
data16
fadds
cwtl
mov
jo
lods
gs
call
inc
das
test
push
mov
leave
dec
ljmp
pop
je
aaa
jmp
mov
jmp
and
aad
out
sete
into
xchg
add
xor
aad
add
je
cld
xchg
mov
xchg
push
in
jbe
das
mov
mov
stos
daa
sub
mov
mov
jecxz
xor
outsb
mov
jge
loope
jno
inc
sarl
mov
jecxz
jb
movsl
push
in
je
and
sub
jno
je
out
ret
lret
addl
cli
and
sub
mov
and
pop
inc
adc
mov
gs
pop
lock
mov
jb
out
xlat
fcoml
mov
test
cmp
fnsave
stos
jne
inc
imul
je
gs
je
psrlq
pop
rcl
inc
mov
jp
jae
daa
icebp
xchg
mov
lea
jmp
mov
jae
pop
push
inc
je
nop
lret
jo
push
lods
cmp
imul
sbb
fcmovb
or
test
movsb
jge
mov
mov
movsl
add
xchg
mov
sub
mov
xchg
adc
inc
dec
pop
jae
sbb
call
fs
jp
dec
cltd
lahf
push
pcmpgtw
ret
jo
ret
cmpsl
add
mov
mov
stos
jge
lods
xchg
or
jmp
shrl
jae
cltd
add
mov
lahf
outsb
or
aam
test
and
jns
mov
ret
mov
test
mov
inc
fwait
add
je
xchg
into
daa
enter
mov
test
mov
fwait
jnp
inc
sbb
mov
int
sbb
repz
aaa
lret
xchg
orb
push
sbb
stos
inc
scas
and
test
in
pusha
jno
add
fisubl
add
inc
fnstcw
cmp
xchg
mov
je
call
cltd
xchg
mov
cwtl
and
fwait
lret
lods
cs
mov
or
dec
jg
out
xchg
je
int
dec
inc
imull
mov
movsb
adc
cld
outsb
cmpsb
outsb
pop
je
jl
and
fs
int3
adc
outsb
mov
js
cltd
lock
mov
shrl
fiaddl
mov
add
push
je
jne
je
mov
out
jno
rol
lahf
jo
xchg
rcrl
leave
sub
aad
mov
jmp
pop
jne
enter
ret
repz
mov
xor
jne
adc
mov
iret
or
mov
cmpsl
xchg
jmp
mov
bound
ljmp
sar
nop
add
lods
pop
mov
mov
aaa
inc
push
jle
dec
shr
jnp
jl
movsb
lea
and
push
cmp
dec
jnp
xchg
jne
push
mov
jp
jo
outsb
mov
xor
scas
mulb
les
xlat
jg
and
mov
dec
xor
sub
fadds
lret
lods
xchg
xor
mov
mov
jne
jge
adc
test
call
pop
fcomp
xchg
scas
jo
jb
mov
add
pop
jne
les
dec
mov
xchg
insl
xchg
dec
jge
pusha
scas
lret
outsl
into
jno
repnz
mov
pop
jae
pop
jl
jns
mov
gs
or
stos
pop
pop
jns
arpl
jns
push
mov
shr
adc
movsb
add
shrl
scas
popf
jno
pop
les
aaa
cs
xchg
cmpsl
adc
les
push
dec
jb
imul
jo
sar
cltd
mov
mov
sub
xchg
pop
cmp
mov
adcl
dec
ja
outsl
pop
ret
mov
dec
and
cld
imul
fwait
scas
cmp
or
mov
shr
and
icebp
cmp
sarl
out
mov
lods
sub
add
out
jae
jp
push
pop
test
sahf
mov
mov
lret
test
pop
cld
aaa
mov
xchg
arpl
mov
std
adc
xchg
mov
outsb
push
cmp
xchg
cli
push
popf
ret
xchg
adc
mov
or
xchg
jo
insb
add
int3
sahf
cmp
pop
gs
xorl
daa
mov
add
mov
mov
mov
and
fs
mov
je
add
mov
pop
hlt
pop
pop
push
out
jnp
das
inc
mov
pop
sub
mov
into
mov
jl
aam
jecxz
jp
scas
insb
arpl
insl
xor
aad
mov
lods
jo
and
shl
subb
jno
cmp
jne
lret
pushf
subb
cmp
out
xor
jbe
dec
add
xchg
inc
mov
lcall
stos
mov
mov
ja
pop
lods
lods
xchg
and
pop
inc
fidivl
flds
sub
inc
bound
mov
int
xchg
pusha
add
mov
xlat
mov
add
jp
jmp
gs
jbe
jg
mov
aaa
mov
repz
negl
mov
jo
je
adc
jp
sbb
mov
mov
jae
ret
mov
js
xchg
adc
mov
dec
mov
insb
jns
mov
jo
cmp
rcr
mov
xor
adc
add
add
fidivl
imul
lret
add
nop
mov
gs
outsb
inc
mov
stos
in
push
jnp
add
outsl
test
pop
scas
xchg
xchg
mov
fmuls
test
sbbl
popf
jo
ret
mov
jns
das
test
repz
xchg
sbb
sub
inc
out
rclb
xlat
out
ja
inc
jge
or
icebp
cmp
loopne
mov
xchg
xor
adc
scas
fwait
out
loope
jne
jae
jne
mov
adc
mov
xchg
lret
xchg
sbb
scas
loope
aad
xchg
loop
loopne
inc
jne
int
rcll
sub
jge
popa
stos
xor
mov
daa
pop
mov
jo
mov
mov
jo
in
addb
mov
ljmp
fdivr
xchg
mov
or
incb
xchg
or
jo
lds
shl
cmpsl
adc
loopne
movsb
mov
mov
aad
sub
pop
jl
outsl
add
repz
dec
mov
cs
dec
in
mov
jnp
je
loop
or
es
cmpsl
mov
leave
mov
rcll
mov
sub
jge
sub
aaa
es
je
mov
gs
mov
int3
mov
mov
popf
fs
mov
xchg
and
xchg
pop
mov
or
jmp
enter
incb
hlt
leave
adc
cmpsb
mov
loope
fdivrs
adc
pop
test
cmc
loop
or
mov
mov
sub
jne
jnp
in
sahf
out
fsubp
lret
sbb
mov
clc
adc
outsb
or
mov
mov
movsl
xchg
xchg
sbb
xchg
jne
andb
rorb
mov
stos
jbe
mov
xor
inc
cltd
jge
insb
jbe
lcall
iret
jnp
inc
mov
xorb
fidivrl
dec
ret
mov
add
jo
nop
add
mov
jmp
aad
and
loopne
jno
jns
jle
mov
mov
push
lahf
mov
add
in
mov
add
pop
add
scas
pop
xchg
arpl
aam
push
jg
push
mov
jle
jge
mov
jno
xchg
jl
dec
aad
mov
push
lods
jecxz
fiadds
aas
loop
in
aad
inc
and
xchg
mov
pop
adcb
jge
stos
mov
ret
lret
int3
enter
lret
ja
mov
andl
cltd
jae
jmp
add
imul
cwtl
jl
test
add
mov
bound
cltd
jne
pop
and
aas
rcll
mov
jbe
movsl
insb
xchg
fs
pusha
add
jne
scas
mov
das
fs
cmp
mov
imul
jae
daa
stos
test
cmp
stos
sbb
cmp
test
scas
lock
and
pop
xchg
sahf
xchg
cmpb
fnstenv
pop
mov
cmp
cld
lods
inc
cmp
adc
add
ret
mov
lcall
dec
fldl
ds
mov
test
xchg
mov
sbb
sbb
sarb
xor
jg
jo
cmp
mov
inc
mov
sub
pushf
sahf
addr16
xorl
scas
jg
sbb
jbe
mov
cmp
outsl
movsl
nop
lret
adc
xchg
adc
mov
adc
inc
xchg
and
mov
int3
xchg
ret
xchg
jb
inc
jns
ret
jne
add
outsb
test
pop
mov
mov
add
mov
and
mov
xlat
adcb
pop
dec
outsl
aas
aaa
xchg
or
mov
jb
mov
push
imul
adc
sub
test
lcall
cmp
adc
scas
gs
mov
xchg
push
scas
mov
pop
or
jo
pusha
dec
mov
xchg
push
or
dec
hlt
mov
pop
push
or
loopne
mov
mov
cwtl
mov
outsb
lea
push
inc
sarl
icebp
xchg
roll
mov
xchg
jp
mov
fs
sub
arpl
xchg
mov
jb
jae
sbb
lret
add
xchg
xchg
mov
scas
pop
or
pop
ret
or
sarb
adc
loope
mov
cld
test
pushl
cli
sub
aas
mov
xor
lds
push
or
das
cmc
adc
in
push
adc
pop
and
push
mov
cmc
add
sbb
les
sbb
adc
jno
sarl
jnp
jo
shrb
mov
mov
mov
push
testl
sbb
int3
mov
insb
mov
pop
add
movsl
mov
jl
js
cbtw
xlat
xchg
arpl
mov
cmpb
mov
pop
nop
push
mov
arpl
rclb
jnp
xor
or
rorl
mov
loope
mov
aam
lea
push
mov
into
shl
inc
jb
ljmp
xor
add
loope
incb
lea
jno
mov
dec
lea
in
jo
xor
ja
mov
loope
lods
stos
shll
mov
sbb
cmpsl
data16
xchg
ss
aaa
stos
jle
xor
loope
mov
in
movsl
je
mov
mov
cmp
in
fmuls
mov
nop
lock
sahf
mov
jnp
sti
jmp
mov
inc
mov
cwtl
jo
fwait
or
jo
mov
jle
or
mov
mov
scas
inc
xor
aad
insb
in
add
lcall
mov
jge
xchg
in
cmp
lods
jns
mov
scas
jo
mov
jnp
lcall
and
pmullw
mov
ja
lea
sahf
xchg
adc
and
out
add
scas
mov
bound
jo
roll
insb
pop
lock
movsl
sbb
jns
jecxz
xor
rol
je
and
lcall
in
lret
stos
and
jns
jb
jecxz
je
mov
dec
shlb
stos
mov
or
lea
stos
sbb
sarl
jge
int3
mov
adc
sahf
movsb
sbb
jbe
pushl
push
rcrb
dec
nop
ss
lock
pushf
cmp
jno
xlat
je
test
rorb
and
jo
scas
xchg
fcom
js
pop
fs
xchg
je
mov
imul
adc
mov
mov
test
pop
sahf
movsl
jg
cs
jnp
cs
sbb
mov
jge
add
xchg
nop
xchg
fildl
jns
sarl
dec
data16
orb
pop
mov
xlat
in
test
push
je
push
add
iret
xchg
lea
les
mov
xor
lock
mov
cs
jo
xlat
xchg
fwait
ljmp
mov
das
scas
mov
aas
jle
popf
adc
jnp
lcall
sbb
movsl
scas
dec
loop
jle
push
fwait
sbb
movsl
xor
les
pop
mov
movsb
or
out
jo
jns
adc
mov
mov
fs
mov
sbb
add
in
sub
jno
jnp
subl
jno
lds
or
jbe
mov
dec
in
mov
or
mov
or
ficompl
daa
xchg
and
sbb
je
add
mov
das
outsb
xchg
mov
xchg
xlat
sub
sub
add
push
pushf
jb
stos
mov
pushl
nop
mov
jns
add
inc
mov
dec
mov
nop
mov
out
lcall
push
ss
lcall
pop
ja
insb
jno
scas
test
mov
mov
out
jo
ficompl
addl
nop
fwait
movsb
stos
jbe
mov
mov
mov
arpl
test
je
push
xchg
data16
pop
movsl
add
mov
jge
xor
jbe
mov
sahf
mov
rcll
xchg
sbb
adcb
jle
outsb
cmc
scas
imul
mov
dec
push
loope
test
inc
adc
test
jnp
jns
jo
mov
pushw
mov
fwait
mov
mov
jl
adc
movsb
stos
adc
ret
rorl
je
fwait
jnp
lods
jae
adcb
add
mov
sti
lock
mov
nop
pop
iret
adc
sahf
or
lea
xchg
and
mov
fs
mov
sti
cs
mov
mov
push
pop
fwait
inc
sbb
neg
cs
loopne
mov
mov
out
std
cmp
aaa
pop
mov
sti
add
scas
mov
shrl
call
daa
xchg
jnp
icebp
and
push
hlt
movsl
es
mov
jle
sahf
test
or
push
add
xchg
sahf
jno
je
js
mov
jo
les
mov
nop
out
int
int3
aad
push
arpl
stos
aad
mov
cmp
jb
cmp
mov
jo
fsubl
mov
nop
xchg
xchg
jg
insb
mov
dec
pop
call
mov
arpl
push
jo,pn
testl
inc
fwait
aad
pop
int3
push
movsl
arpl
into
popa
lods
mov
and
xchg
jo
stos
fbstp
testl
mov
jno
ja
mov
lods
xchg
xchg
lds
out
daa
mov
aad
add
adc
mov
fs
mov
jne
cwtl
mov
mov
out
pop
test
movsl
test
repz
and
jle
sub
or
bound
sti
aam
jl
out
jl
xchg
shll
mov
imul
lcall
rcll
xchg
mov
jb
jo
mov
mov
push
clc
insb
dec
mov
xchg
fbstp
testb
nop
xchg
insl
xor
mov
pop
jo
stos
xchg
add
rorl
add
push
stos
pushf
and
jle
push
push
dec
popa
bound
pop
test
xor
jle
clc
add
add
fcoms
add
pop
push
gs
addr16
cs
or
inc
popa
jo
popa
outsl
outsb
adc
cwtl
add
gs
push
inc
es
inc
call
add
push
inc
inc
xor
xor
pop
add
inc
push
push
inc
push
or
jno
jbe
pop
push
push
adc
push
mov
or
orl
add
dec
daa
xor
pop
loope
push
mov
pop
or
jae
adc
mov
inc
ja
add
xchg
inc
lea
or
pushf
les
sub
roll
add
jg
movsl
ret
add
inc
jne
outsl
push
icebp
jp
int
mov
or
pop
enter
mov
mov
cmpsb
and
ljmp
sbb
sbb
test
add
pop
add
jnp
sarl
cmp
push
repnz
mov
inc
xor
out
xor
bound
arpl
fwait
cmp
adc
les
or
jmp
cmpsl
sub
sbb
sub
dec
or
dec
adc
popf
jne
insb
imul
rcll
push
xor
decb
jo
mov
pcmpeqb
fwait
test
dec
lods
mov
pop
dec
inc
cmpsl
mov
pop
push
fisttpl
cmc
sub
ja
sti
xor
test
or
loop
xlat
je
movsb
push
inc
push
jbe
adc
test
sub
mov
jo
push
sub
outsb
fs
imul
popa
je
xor
jae
jb
test
outsb
dec
imul
fs
dec
sub
push
sub
jnp
outsb
sub
scas
pop
outsl
popl
cld
and
insl
hlt
push
sbb
stc
out
dec
pop
mov
mov
adc
ss
mov
xor
shl
dec
out
adc
xor
int
sbb
insb
data16
add
and
push
pop
ds
hlt
fwait
data16
jo
in
stc
pusha
sbb
lret
pop
dec
or
inc
popf
inc
icebp
sub
pusha
push
jmp
jae
ja
cmpl
sub
ror
mov
popa
push
rorl
pop
push
rolb
mov
xor
push
push
shr
and
xchg
fwait
and
nop
hlt
xchg
fwait
cmc
add
lcall
cmpsl
fidivrs
adc
or
das
push
test
push
mulb
data16
add
nop
mov
lods
push
in
test
or
imul
or
shlb
sbb
inc
add
pusha
sbb
inc
pop
mov
cmp
data16
imul
xchg
popa
imulb
pop
jne
and
add
adc
inc
sub
jg
add
mov
test
sbb
lcall
or
adc
scas
push
insb
and
jl
push
mov
pop
or
push
pop
adc
push
dec
cmpsl
mov
dec
int3
imul
repnz
sub
pop
sti
jl
fistpll
repz
inc
mov
push
push
pushf
mov
outsb
pop
jne
int
pop
adc
test
sub
or
stos
test
popl
and
roll
jae
sbb
inc
imul
loopne
jb
push
jnp
sub
andl
sbb
xor
bound
out
sub
inc
in
je
jl
push
mov
pop
mov
push
fs
cmp
mov
push
sbb
adc
xchg
add
cmp
inc
or
sub
in
adc
jns
xor
lods
shrb
gs
push
test
add
mov
pop
inc
xor
add
mov
or
int3
shrb
inc
mov
inc
jge
push
and
movsb
or
pop
push
xlat
pop
je
sbb
or
dec
push
dec
mull
int
mov
push
jg
jne
div
lahf
popa
in
jae
lahf
iret
mov
jno
nop
or
imul
shll
repnz
inc
outsl
mov
mov
test
imul
or
int
sub
std
nop
out
push
aad
insl
adc
addb
sub
xchg
sub
ss
xchg
shlb
call
inc
xchg
and
inc
ret
xchg
adc
movsb
das
leave
and
jmp
inc
mov
push
push
mov
push
push
xchg
sub
sbb
xchg
insb
outsl
addr16
or
jbe
and
iret
fs
jmp
or
insb
push
je
js
pop
add
sbb
out
or
addr16
xchg
pop
sub
or
sbb
dec
outsb
movsb
js
icebp
inc
sti
out
call
enter
nop
jmp
and
mov
jb
jbe
je
mov
pushf
push
push
inc
fistl
xor
pusha
dec
dec
std
and
add
mov
inc
dec
ss
add
sub
dec
xor
or
xor
and
fiadds
or
and
mov
ficoms
fiadds
add
sti
rorb
jmp
or
jmp
cmp
add
inc
out
repnz
jle
add
pushl
add
aam
stos
sub
add
test
add
adc
add
xor
rclb
inc
and
xchg
iret
sar
rolb
mov
sub
push
inc
adc
mov
ljmp
fimuls
add
dec
pop
ret
pop
jns
outsl
adc
mov
sub
imul
add
scas
mov
fwait
add
loope
test
inc
in
and
mov
adc
imul
add
subl
mov
add
mov
jg
hlt
outsb
cld
out
dec
adc
mov
jbe
pop
incl
cli
movsl
hlt
cmp
hlt
mov
jmp
or
and
add
addr16
push
jnp
cli
xor
mov
fwait
mov
loope
add
sub
fwait
push
in
cs
xchg
jp
pop
das
lock
add
cmpsb
sbb
xor
sti
push
inc
cld
cli
stos
popa
add
xchg
cmp
dec
lds
movl
fiaddl
pop
inc
pop
dec
inc
aad
add
mov
sub
pop
fsubrl
notb
push
rolb
loop
ljmp
push
mov
or
je
push
adc
add
cmc
sub
movsl
add
icebp
lds
add
cld
test
push
pop
inc
ljmp
popf
add
lock
jge
dec
add
inc
push
dec
inc
push
dec
mov
out
and
out
lcall
das
test
sbb
out
mov
pop
mov
cmpsl
add
add
in
test
push
roll
ret
adc
ss
stos
sbb
xchg
pop
mov
push
and
dec
fstl
cmp
jno
add
push
mov
scas
std
aaa
or
add
mov
add
cwtl
sbb
je
add
mov
cwtl
pop
dec
xchg
shrl
mov
xor
xor
mov
push
iret
icebp
or
les
cmp
cmp
add
fcmovnb
xchg
cmova
or
push
cmp
pop
jp
and
add
insl
mov
sub
mov
jo
push
push
mov
jb
jb
fiaddl
outsb
addb
pop
sbb
add
ja
into
mov
fwait
insl
xchg
iret
jecxz
add
adc
sbb
jg
add
addb
cld
aas
cmp
jge
outsb
jge
xchg
sub
jg
dec
repnz
or
add
cmp
adc
or
lcall
sbb
mov
xor
sub
mov
int
icebp
xchg
mov
or
jnp
sbb
int3
push
inc
add
xchg
outsl
pop
js
cmp
and
jo
in
mov
xor
sub
insb
loope
add
or
cmp
popf
les
movsl
cmp
pushf
loopne
addl
sub
and
ror
out
and
or
pusha
scas
xor
add
add
js
inc
mov
xchg
push
faddl
adc
jo
sbb
adc
add
subl
and
mov
inc
push
sahf
inc
repnz
and
or
mov
sub
mov
cmp
loopne
sbbb
sub
pusha
jg
test
or
add
mov
ljmp
push
xor
or
test
decb
dec
fmulp
mov
into
popl
mov
sbb
push
pop
mov
mov
sbb
ds
loop
js
dec
dec
dec
inc
pusha
call
andb
lods
mov
subb
or
ficoms
negl
sub
nop
into
mov
mov
pusha
pop
stos
add
mov
sub
jle
lcall
ja
lcall
stc
mov
out
push
sarl
scas
cmc
sub
cmpsl
test
std
push
mov
dec
adc
mov
lods
adc
insl
add
out
sub
pop
lock
pusha
pop
ljmp
or
jnp
test
lods
add
lods
fnstcw
add
out
out
cmp
aam
or
sub
or
movsl
xchg
push
andb
push
push
adc
add
test
or
mov
pop
sub
mov
or
adc
movb
lods
pushf
lods
pusha
pop
test
aam
subb
into
add
fimuls
inc
fiadds
outsl
shrb
loopne
aad
mov
xchg
insl
inc
mov
shlb
mov
movsl
inc
test
testl
add
adc
lods
inc
int3
dec
mov
xor
xchg
or
in
pusha
mov
push
test
adc
pop
movsl
insb
jae
test
je
scas
mov
mov
rcr
sbb
inc
lods
xchg
jo
or
addr16
xor
dec
adcb
push
jl
cmc
push
or
pop
cmpb
enter
xor
mov
jae
xor
js
into
fwait
push
mov
and
int3
sbb
test
or
xchg
push
jae
inc
pusha
call
xchg
iret
mov
test
mov
add
mov
mov
jmp
cmp
jae
dec
push
pushf
inc
rolb
faddp
cltd
loopne
pusha
dec
andb
test
adc
mov
xchg
in
add
pushf
mov
out
imul
and
adc
jae
test
and
jl
orb
lds
test
push
pop
subb
pop
jnp
cmp
pushf
push
orb
mov
or
nop
les
sarb
pop
repnz
and
xorb
cmc
subb
arpl
js
rclb
int3
decb
je
or
lcall
xchg
push
ds
mov
or
jecxz
xchg
imul
or
movb
fldt
sub
les
test
inc
add
cmp
and
fisubl
pop
pusha
cld
test
icebp
and
inc
test
sbbb
or
outsl
xchg
rcrb
sub
adc
icebp
dec
add
mov
ret
adc
pusha
stc
dec
test
cmp
mov
insl
or
enter
mov
xchg
and
movsl
mov
or
dec
jp
pusha
cld
cmpsl
test
dec
rorl
jnp
test
movsb
cmp
or
mov
rcrb
inc
sarb
lret
or
cmp
inc
pop
movsl
stc
push
push
test
dec
andb
or
mov
mov
mov
ficoml
and
dec
in
lods
mov
xchg
jl
cmp
mov
into
nop
test
test
cmp
int3
mov
enter
movsb
ja
xchg
pushf
mov
jl
imul
jno
xchg
in
mov
and
out
roll
lcall
lods
mov
pushf
dec
mov
nop
pusha
jmp
push
inc
add
push
sub
stos
and
or
push
test
or
adc
insb
mov
icebp
out
add
and
xor
outsb
aam
cmp
ret
xchg
adc
and
scas
xchg
les
inc
nop
add
xchg
push
xchg
test
jl
testl
stc
xlat
jae
daa
push
fcmovb
xor
push
push
or
adc
cld
test
lock
adc
xchg
loop
cmp
xchg
jle
add
push
inc
movsl
imul
dec
push
cmp
pushl
and
jg
and
fadd
test
addl
mov
mov
aam
jp
cwtl
dec
shrb
adc
sbb
test
inc
jae
imul
add
add
push
or
shl
insb
push
adc
jmp
stos
test
pop
push
test
add
or
pop
push
pop
sub
mov
push
xchg
movsl
push
je
sub
push
subb
test
xchg
sub
notb
push
pop
sbb
cwtl
jne
xor
je
movsb
cmpsl
push
push
hlt
movsl
adcb
stos
jl
jbe
xchg
pop
test
mov
out
sbb
jl
add
cmpsb
cmpsl
lods
popa
pop
out
cmp
sbb
mov
movsl
loop
cmpsb
xchg
lods
xorb
sub
fmull
add
jae
test
addb
lea
insl
inc
or
dec
idivb
sbb
dec
jecxz
addl
and
fisubs
cmp
into
mov
add
pop
out
push
add
roll
lods
jecxz
jl
out
stos
inc
add
xchg
adcb
dec
adc
inc
popf
ret
mov
xchg
adcb
jle
lods
xchg
test
or
scas
sbb
sbb
xor
test
or
or
pushf
movb
pop
lea
inc
pushf
dec
pop
lock
pushf
and
mov
out
inc
jbe
xor
lcall
xchg
test
aas
leave
js
test
push
xorb
out
jle
or
andb
jmp
aad
jns
pop
orb
dec
js
jnp
rclb
dec
lock
sbb
in
jl
mov
xchg
cmpb
push
xchg
mov
and
call
lcall
xlat
test
ljmp
or
sahf
and
mov
jnp
mov
les
jl
adc
add
shrb
aas
add
inc
mov
jae
cmpsl
test
dec
and
outsb
leave
pushf
subb
fimull
test
dec
or
jnp
add
aam
movsl
jl
stos
test
ljmp
dec
test
adc
mov
xchg
or
sub
imul
adcb
test
pop
jne
sub
test
pushf
jecxz
sub
jecxz
and
movb
lret
cmpb
sub
adc
mov
inc
add
dec
test
hlt
cs
test
jl
mov
push
jno
lds
es
cmp
lcall
orb
and
lcall
cs
test
or
push
lcall
cmp
aad
js
test
jns
adc
addr16
xchg
and
jl
push
jl
pop
cmp
test
jbe
sbb
xor
xchg
lahf
sub
jo
jl
jp
test
push
jl
dec
mov
pop
xorb
bound
xor
or
mov
lea
adc
stc
add
cmp
xchg
xor
sbb
movsb
js
out
cmp
adc
repnz
jl
pop
mov
mov
aam
movsl
lahf
nop
mov
dec
and
sbbb
movsb
or
lods
cld
movsl
sub
dec
out
movsb
and
repnz
xchg
sbb
test
and
jo
call
push
dec
dec
adcb
xchg
or
jl
xchg
sub
test
pop
nop
out
pushf
fdivs
icebp
mov
aam
mov
and
aaa
add
test
pop
cmpsl
or
adc
popf
popa
into
popf
pusha
push
test
movsl
xchg
and
lods
sbb
push
sub
int
pop
inc
sarl
or
mov
add
mov
push
data16
and
nop
dec
dec
adc
inc
clc
jbe
inc
imul
xorb
and
int
pop
inc
aam
jmp
inc
insb
cli
mov
aam
cmpb
pushf
sub
lods
cmp
mov
xchg
fdivp
jl
push
in
mov
jns
js
inc
sarb
cli
xchg
adc
dec
cli
cmp
push
enter
and
xchg
test
movsb
stos
jge
push
mov
je
jno
in
lahf
test
mov
add
dec
mov
jo
xchg
or
clc
ljmp
in
dec
in
addb
jp
push
mov
sbb
cmpsl
cmp
popf
jo
xor
rclb
xchg
xor
or
clc
notb
add
loopne
cmovns
push
or
test
ret
or
xchg
add
sbb
xor
addl
or
add
sbb
or
outsl
xchg
pop
fisubrl
add
mov
test
cld
ret
inc
mov
mov
xchg
mov
add
add
lock
or
sbb
movsb
add
xchg
dec
cmovns
test
icebp
sbbl
cld
and
add
add
push
insl
repz
dec
jl
jecxz
add
ret
cld
pusha
loope
jno
or
xor
jo
or
sbb
adc
ljmp
pop
push
sbb
or
add
or
mov
adc
cli
lods
or
ret
jo
mov
lock
ret
pusha
ret
pushf
add
pop
inc
nop
leave
jg
or
cmp
fimull
sub
push
aad
inc
or
add
jl
stos
xor
xor
or
push
push
data16
test
clc
push
sbb
xchg
aas
cmp
inc
xchg
pop
inc
loopne
ds
or
mov
mov
xlat
pop
dec
imul
bound
adc
shll
cs
sub
scas
mov
add
pop
add
pushf
push
arpl
into
mov
lods
xchg
call
rorl
jae
xchg
push
fldl
and
sbbl
add
jbe
and
jmp
add
stos
arpl
mov
mov
add
xchg
lods
rorb
nop
clc
inc
xor
xchg
movsl
xor
fsubrp
rolb
test
pop
add
xor
stc
cmp
add
or
hlt
mov
jl
into
out
fidivrs
out
insl
imul
cmc
inc
adc
cmp
jnp
push
mov
inc
and
inc
fbld
cld
push
inc
mov
jle
add
sbb
add
xchg
pushf
pop
lock
test
popf
pop
pop
push
adc
lods
les
xchg
mov
and
add
or
cmp
push
in
cld
insl
or
in
pusha
add
hlt
ret
jae
inc
add
icebp
test
out
clc
es
add
pushf
adcl
pop
push
jnp
push
shrl
jmp
stos
cmp
loopne
jae
ljmp
add
mov
cmp
shl
add
test
fs
pop
sbb
popf
add
xchg
dec
incl
rcl
inc
clc
rorb
mov
or
and
movsb
in
dec
adc
pushf
in
in
pop
hlt
lock
mov
adc
mov
push
sti
imul
add
rclb
call
pushf
xor
adc
sbb
add
inc
jnp
sbb
ret
fcomp
mov
lock
mov
stc
pushf
movsl
ret
repz
movsb
cmp
ljmp
push
imul
test
add
pop
or
mov
imul
add
mov
push
mov
clc
repz
imul
fisttpl
jmp
mov
inc
mov
out
lock
add
out
xor
mov
xlat
and
or
adc
jnp
xor
jb
sti
dec
mov
movsl
adc
or
push
sahf
add
jl
xchg
adc
out
je
out
or
add
and
add
mov
add
test
std
sbb
xchg
jp
pop
cmp
and
cwtl
cmp
sarb
adc
jnp
clc
jae
xor
mov
test
jg
dec
outsl
add
jle
inc
int3
sbb
fsubs
call
adc
mov
fnsave
popf
sbb
call
popl
xchg
cmp
dec
sub
roll
mov
xlat
gs
cli
stc
sub
fldl
add
call
loopne
jne
add
pop
pop
enter
push
stc
or
into
sbb
test
add
xchg
adc
mov
mov
jmp
stos
mov
jmp
xor
movsb
or
or
das
and
jg
dec
or
add
addb
cmp
jg
jecxz
rol
cmp
repz
mov
sub
ret
sub
incl
sarb
pop
or
push
insb
adc
gs
leave
fs
arpl
std
inc
sbb
call
sti
fildll
ss
addr16
or
mov
cmpsb
adc
insl
dec
movsb
jo
lock
js
dec
and
push
popa
jge
lods
addr16
push
sbb
mov
push
add
gs
jne
xchg
imul
pop
xor
and
sub
and
pop
or
test
arpl
or
dec
mov
movsl
xchg
and
lods
sub
or
jae
in
daa
test
sub
inc
clc
orl
add
sub
adc
dec
adc
adc
mov
xor
push
lahf
push
mov
iret
and
add
inc
cmc
jno
mov
test
or
bound
enter
cmp
cmp
or
xchg
fsubl
or
add
scas
sbb
or
sub
jp
and
jbe
or
add
in
add
out
add
scas
mov
or
fs
ja
push
gs
xlat
pop
rorl
pushl
cmp
cmp
enter
imul
inc
gs
imul
ret
lahf
ss
sbb
popa
fs
or
pop
jae
push
subl
lock
or
mov
inc
xor
and
das
test
sbb
cli
insb
cmc
stc
push
push
or
dec
pop
cmp
add
dec
test
sbb
cwtl
add
pop
adc
daa
adc
xor
add
test
jmp
sbb
and
push
jg
sbb
into
lcall
and
add
push
push
push
insl
notb
dec
xor
sub
pop
or
daa
test
cmpsb
sub
adc
enter
xor
fmuls
inc
add
inc
push
dec
push
or
push
inc
les
fildl
and
rolb
dec
push
jb
repz
test
mov
roll
pusha
adc
fldl
mov
add
sub
sti
inc
roll
jns
imul
aaa
ljmp
sti
dec
mov
xchg
pusha
push
adc
cld
test
es
testb
das
and
loope
cmc
pop
lcall
mov
in
adc
mov
adc
pop
mov
and
push
aaa
sbb
js
das
add
lods
or
loopne
loopne
loope
subl
xorl
jle
push
dec
popf
test
xor
icebp
add
mov
jne
add
adc
xor
fs
xchg
ja
adc
push
or
push
pop
ret
sbb
nop
and
push
test
add
inc
xor
inc
mov
out
div
cmpsl
xchg
and
and
xor
insb
dec
mov
ljmp
jns
push
dec
clc
xchg
xor
rcl
dec
mov
push
in
jecxz
lret
xchg
mov
mov
add
add
pop
add
adc
cltd
jns
xlat
inc
mov
rorb
jae
pop
je
addr16
or
cmp
test
add
je
int3
ja
cmc
or
or
shld
repnz
inc
sbb
icebp
scas
sub
mov
or
sub
push
js
jbe
in
push
test
cmp
and
xchg
xor
pop
dec
inc
jnp
add
xchg
iret
test
or
dec
inc
push
jo
mov
mov
dec
mov
inc
dec
jb
mov
cmp
sbb
jns
jmp
mov
sbb
mov
cli
inc
in
loopne
push
mov
ss
pop
push
sar
sub
mov
cltd
add
rorl
sbb
sub
inc
mov
mov
mov
sahf
or
mov
les
cmp
inc
or
and
inc
repnz
pop
and
pop
lret
inc
or
mov
push
and
sub
das
cmc
lea
push
cmpb
and
and
addl
enter
das
xchg
inc
aad
inc
or
add
orb
mov
mov
and
addb
sub
vcvtsi2ssl
iret
fisttpl
mov
std
pop
enter
das
sarl
push
inc
lahf
mov
subb
ja
in
or
jl
in
and
and
fildl
cld
pop
loop
mov
inc
or
incl
repnz
xchg
jl
in
and
pop
enter
inc
or
sub
add
inc
cli
das
xchg
push
fnsave
or
enter
sub
movb
adc
sub
mov
mov
pop
mov
inc
fisttps
mov
inc
or
mov
mov
dec
sahf
or
mov
adcb
imul
xchg
and
call
clc
xchg
shlb
es
movb
sub
mov
pop
loop
and
and
adc
mov
inc
incl
or
inc
repnz
flds
or
decl
mov
pop
and
pop
enter
add
das
jbe
adc
jp
push
add
andb
pop
call
or
stc
pop
enter
dec
aaa
inc
or
inc
pop
or
inc
cli
das
xchg
jl
in
mov
or
and
and
inc
jle
clc
xchg
mov
jecxz
xor
aas
sti
aas
dec
mov
mov
mov
dec
sbb
or
and
loop
lret
add
push
and
adc
add
testb
and
inc
nop
and
add
out
mov
in
sub
cs
add
xchg
in
mov
and
test
cmp
lods
insl
xchg
mov
inc
enter
or
out
roll
jmp
in
ficompl
jmp
sti
in
dec
and
add
dec
and
adc
pop
cltd
and
adc
mov
mov
jecxz
adc
xchg
in
test
and
sbb
inc
inc
inc
fwait
or
or
fdivrl
out
lret
movl
inc
sbb
sbb
in
cmp
data16
mov
mov
jp
and
mov
insl
imul
add
xchg
ja
jne
pop
sbb
adc
or
xor
mov
es
inc
mov
or
je
fstpl
or
and
fs
aas
xchg
jns
mov
daa
in
scas
xor
inc
jo
fcoml
adc
add
and
out
in
insb
in
cmp
mov
push
fdiv
push
sbb
or
push
sbb
jns
repnz
jmp
inc
nop
daa
mov
and
adc
jae
mov
xorb
add
test
int
or
test
std
cmpb
pop
and
add
nop
push
add
jle
mov
xchg
and
inc
pop
mov
push
imul
sarl
incl
insl
push
shll
pushf
es
adc
mov
arpl
mov
add
sub
pop
adc
imul
fisttpl
popa
js
xchg
data16
xchg
into
idivb
mov
or
jnp
pop
mov
add
mov
mov
or
andb
inc
or
lret
adc
jae
and
or
ror
iret
mov
fdivr
inc
lret
testl
daa
clc
or
imul
leave
call
push
add
repnz
sub
add
repz
testb
push
mov
ret
mov
insl
aad
adcb
test
call
jmp
std
xlat
add
loopne
cli
or
sub
popf
adcb
int
div
mov
add
mov
xchg
adcb
or
enter
das
lret
pusha
in
imul
or
pop
or
sbb
jp
add
das
leave
mov
pop
shl
or
adc
jp
sub
ljmp
and
dec
jp
xchg
pop
sub
xlat
sub
cmc
and
outsl
dec
ja
sbbl
jae
out
testb
jb
gs
data16
pop
push
xchg
pop
fmul
or
inc
js
jecxz
jns
mov
hlt
xchg
push
mov
xlat
mov
push
add
imul
js
jno
mov
jno
or
xlat
rol
leave
iret
dec
inc
es
mov
mov
scas
lret
or
clc
add
mov
into
dec
dec
mov
test
shlb
in
and
out
std
mov
xor
outsb
sbb
imul
sbb
mov
lret
jecxz
adc
popa
mov
lods
jae
lcall
or
stc
add
add
or
aam
jns
jp
add
mov
jle
or
sub
mov
xor
or
dec
ljmp
adc
in
dec
repnz
fcmovu
and
push
ucomiss
pop
adc
adc
js
test
sbb
pusha
dec
outsl
shrl
inc
lock
inc
cmp
stos
das
sub
je
stos
insl
or
cmp
js
and
sbbl
popa
mov
jnp
inc
in
sbb
adc
adc
mov
or
lods
sub
mov
or
sub
inc
and
and
or
scas
sub
decl
mov
dec
mov
hlt
out
leave
pop
fisubs
push
cmp
xchg
push
push
jno
lods
lods
sbb
jmp
xor
jp
loopne
pop
push
lahf
push
mov
pop
or
xchg
mov
or
mov
sbb
adc
rorl
add
push
pop
jge
pop
add
roll
nop
xchg
inc
add
inc
add
mov
aas
and
or
sbb
jg
test
enter
add
mov
add
push
les
arpl
lret
add
stos
push
lods
cmp
add
add
ds
xor
inc
mov
rolb
mov
xor
add
add
mov
bound
mov
xchg
inc
or
pop
push
cltd
xchg
sbb
jl
jne
dec
les
adcl
add
mov
add
mov
rorb
scas
inc
scas
xchg
add
stos
test
add
movsb
lret
xchg
pop
adc
add
add
lahf
xor
push
mov
adc
fbld
mov
aaa
push
pushf
add
pop
fcoml
add
pop
bound
lds
push
bound
flds
scas
or
test
rorl
mov
out
mov
out
ja
push
ds
sub
lcall
fiaddl
loope
in
call
in
in
xor
mov
add
add
or
jae
out
inc
xchg
xchg
decb
push
mov
outsl
cmp
jno
imul
int
pushf
lods
outsb
insb
into
cmpsl
xor
cmp
outsl
jno
lods
cmp
adc
mov
add
adc
inc
dec
mov
mov
cmc
popf
bound
icebp
sbb
divl
stos
in
roll
mov
popf
mov
bnd
dec
mov
cmp
bound
mov
add
push
dec
ja
push
lods
add
aam
add
push
jecxz
push
sub
in
sub
int3
sbb
add
in
enter
movsb
mov
ffreep
outsb
jmp
daa
push
fcompl
daa
test
fstps
add
arpl
lods
adc
lea
jne
mov
sbb
jns
mov
cltd
ja
jno
dec
pop
push
push
jecxz
out
mov
leave
int
imul
das
test
sbb
mov
gs
bound
xchg
leave
pop
out
jnp
dec
push
imul
lea
add
xchg
clc
add
cltd
into
add
add
or
gs
add
lock
adc
loope
cmp
dec
lahf
inc
scas
or
popf
outsl
lods
or
aas
push
cmc
fwait
insl
cmp
pop
imul
mov
dec
sub
pop
imul
movsb
cmpsl
or
add
mov
insl
add
ljmp
lds
mov
cltd
outsb
cmpsl
cmp
pop
push
xchg
arpl
jne
repz
cmpsl
cmp
gs
inc
mov
push
push
testb
pop
rclb
add
push
repz
lcall
hlt
jb
mov
mov
mov
fimull
loopne
out
push
bound
test
add
adc
fldcw
sub
lahf
mov
filds
cmp
cmpsl
mov
scas
dec
iret
mov
jns
jecxz
test
test
or
xchg
shl
popa
dec
add
aas
test
pusha
push
inc
sub
imul
outsb
pushf
fsubrl
add
push
bound
add
cmpsl
sbb
lcall
lock
gs
bnd
push
mov
addr16
add
mov
mov
xchg
pushf
daa
or
lods
test
jmp
jno
xlat
dec
femms
rol
lea
movsl
popf
scas
imul
cmpsl
mov
out
in
imul
lods
lods
sbb
cmp
mov
xchg
push
cmp
inc
push
jle
dec
stos
sbbb
pushf
insl
add
xchg
leave
fldcw
push
movsl
out
xchg
jmp
das
jge
bound
imul
movsl
imull
gs
mov
lds
lds
push
out
add
les
repz
leave
lret
add
jb
test
rol
outsb
lods
xchg
int
sub
pop
test
movsl
mov
mov
insl
sahf
popf
popa
dec
pop
pusha
and
inc
into
cmp
jb
mov
mov
scas
xchg
inc
addb
cwtl
ret
imul
bound
xchg
and
movsb
and
mov
loopew
movsl
jg
mov
imul
lds
fidivl
aas
into
mov
popf
outsl
gs
jb
notb
lret
lahf
dec
jns
sub
sub
je
mov
add
ljmp
ficomps
pop
call
cmp
jns
lods
gs
popf
add
add
add
or
sub
pop
repz
add
lock
adc
out
mov
jmp
jb
xor
cmp
sub
dec
mov
xchg
jge
jecxz
int
gs
jge
sbb
sub
fnstenv
push
add
jg
mov
xchg
and
das
inc
popa
mov
mov
dec
xchg
outsl
jns
sub
inc
shrb
hlt
pop
jbe
sub
jno
imul
int
cmp
test
jns
jmp
pop
mov
mov
xchg
lea
lods
jns
movsl
ret
in
fildll
push
sub
push
dec
iret
lods
xor
add
add
adc
call
imul
adc
test
pop
addr16
cmpsb
mov
mov
push
popf
sub
addb
js
sahf
les
shl
fstps
mov
fsts
fidivrl
in
push
pop
sbb
adc
xchg
test
shlb
dec
fcomip
pop
fsubl
shrl
jno
jmp
push
add
sub
loop
jo
xchg
stos
xor
gs
in
jp
outsb
scas
xchg
inc
mov
sub
xor
movsb
and
mov
fldpi
in
cmp
lods
ficoml
mov
jae
adc
leave
mov
jg
pop
push
pop
pop
xchg
shlb
lahf
gs
movsl
in
inc
test
gs
arpl
notb
andl
daa
in
dec
jnp
lret
in
sbb
add
add
cmp
pop
mov
lahf
mov
mov
enter
gs
repnz
sub
leave
ret
mov
imul
loop
jns
int
cmp
mov
popf
gs
repz
inc
dec
subl
mov
pushf
pop
lods
pop
xchg
repz
int
add
push
push
test
lcall
scas
out
pop
gs
jecxz
fisubs
pushf
lret
jnp
dec
sti
dec
add
dec
out
lahf
mov
out
nop
movsb
fnstcw
mov
sub
push
mov
xor
pop
add
and
lcall
push
stc
repnz
in
and
inc
hlt
push
mov
inc
adc
sbb
jno
push
add
in
pop
icebp
arpl
arpl
dec
in
and
mov
sbb
jno
dec
jp
mov
in
xchg
lods
adc
cmc
test
scas
push
sub
mov
or
push
scas
mov
sub
in
add
fisubrs
dec
ficoml
repz
cmp
testl
jecxz
mov
pop
cmp
ljmp
cmpsl
out
mov
loope
jmp
gs
or
mov
mov
push
pushf
fsubrl
into
mov
adc
mov
lods
insb
outsl
xor
movsb
loop
pop
sahf
mov
cs
pop
xchg
lds
int
mul
aam
or
mov
jle
movsb
test
cmp
stos
sub
leave
mov
push
mov
sbb
pop
lahf
jcxz
stc
repz
push
mov
ljmp
and
sub
int
fs
stos
mov
lods
cmpsb
test
add
jl
movsl
xchg
imul
imul
filds
in
or
int3
cmpsl
fwait
jnp
imull
sub
inc
inc
mov
in
sub
ja
jns
jne
or
sub
mov
mov
imul
cs
out
mov
xchg
outsl
xor
cmpsb
adc
cmpsl
loop
testb
gs
sub
push
jp
pop
aas
imul
cmp
sbb
and
lcall
sbb
imul
int
add
add
pop
test
jecxz
std
push
add
push
adc
or
daa
push
scas
inc
testl
inc
daa
pop
into
lods
inc
sbb
shl
lods
cwtl
add
sahf
int
cmpsl
sbb
aam
not
sub
rcrb
mov
pop
icebp
push
xchg
addr16
add
stc
ficompl
push
int3
fs
stos
das
inc
pop
mov
cmc
lock
out
adc
push
pop
xchg
subl
xchg
jp
popa
out
imul
div
jecxz
mov
adc
out
mov
roll
or
bound
pop
mov
hlt
mov
js
icebp
lahf
sub
pop
gs
das
push
int
xor
js
popa
mov
fstl
mov
pop
xchg
jmp
test
gs
jge
cmpsl
inc
pop
sub
ds
jmp
fldt
xlat
cmpsb
push
xchg
das
iret
pop
scas
pop
call
inc
cmp
test
stos
xchg
push
jle
xchg
in
movsl
xchg
dec
inc
add
gs
jp
jp
jl
imul
push
and
add
inc
sub
pushf
fnstcw
inc
pop
mov
cmpsl
cmp
mov
jle
adc
sbb
aaa
aas
sahf
cs
pushf
push
sarl
jb
mov
out
fsubl
mov
daa
aas
lret
jmp
jae
sbb
pop
gs
addr16
out
fwait
pop
dec
add
bound
xor
cwtl
sbb
int3
adc
xchg
pop
push
pop
gs
add
pushf
sarl
cmpsb
imul
shlb
iret
jne
leave
rolb
ljmp
int
mov
jb
idivb
imul
jmp
xor
mov
shrl
jecxz
sar
movsb
mov
enter
idivl
bnd
imul
xchg
adc
shl
push
mov
push
dec
cmp
cmp
lret
enter
bound
test
dec
push
psubsb
test
xchg
popa
fldcw
xchg
imul
add
aaa
imul
add
loopne
les
in
mov
cld
adc
jge
push
pop
icebp
xchg
jp
addr16
mov
sub
ret
sti
cld
xchg
mov
cmc
mov
xlat
mov
mov
pop
je
push
fs
pusha
lods
bound
sti
cld
jb
in
sub
cmpsl
pop
lret
sub
cli
stc
sub
inc
imul
bound
add
push
xor
xor
pop
outsb
out
inc
push
imul
pop
add
aad
imul
and
mov
push
pop
pushf
int
xor
add
test
sti
sbb
and
push
pop
rorl
rcrb
dec
mov
stc
movsl
pop
in
out
jge
ret
adc
sub
std
andb
clc
stos
mov
gs
imul
sub
out
int3
add
add
jmp
subl
fs
rolb
pop
lods
jge
sub
in
lds
imul
and
lods
jmp
in
stos
gs
add
imul
jle
je
loop
lret
push
repz
dec
stc
xor
mov
imul
push
sti
pop
mov
pop
test
shl
cld
movsb
stos
cs
dec
mov
movsl
test
stc
movsl
lcall
jno
jmp
frstor
add
and
imul
inc
in
xor
mov
add
add
outsb
jp
xlat
sub
mov
call
fldl
xchg
sbbl
aaa
rcr
pop
imul
xchg
lods
lret
out
mov
mov
xlat
cmp
mov
imul
inc
adc
xchg
test
testb
and
lds
push
lahf
das
mov
xchg
daa
gs
xchg
mov
inc
lods
sbb
movsl
xchg
mov
pop
mov
push
lcall
jbe
iret
inc
daa
pop
js
push
out
xchg
mov
xchg
jbe
add
int
mov
mov
aas
adc
fbld
rolb
inc
loope
cmp
mov
je
cmp
rorl
adc
iret
sbb
mov
lods
imul
or
push
mov
popf
pop
push
mov
bnd
popf
iret
insb
sub
rcrb
pushf
les
dec
mov
scas
xchg
dec
fisubrs
push
frstor
sti
rcrl
cmpsl
imul
je
mov
and
pop
movsl
mov
repz
div
lcall
iretw
add
aaa
aad
rorb
lcall
jns
nop
add
pop
adc
mov
lods
jge
mov
nop
add
inc
xchg
or
push
push
int3
lret
imul
lods
mov
aam
push
adc
lds
lods
imul
xchg
sahf
rcrb
pop
bound
repz
shlb
xchg
push
repnz
jmp
lcall
leave
int
cmpsl
or
pop
gs
stc
imulb
push
lret
push
jmp
sub
nop
add
inc
add
rcr
test
xor
testl
xchg
test
push
loopne
mov
push
pop
mov
adc
rcll
das
cmp
dec
push
in
jp
mov
mov
cltd
push
cmp
in
sub
hlt
pop
idiv
and
xchg
sub
cmp
mov
movsl
stos
mov
pushf
jl
mov
ja
aaa
ljmp
xchg
inc
mov
push
xor
pop
push
pop
mov
mov
mov
gs
pushf
enter
imul
enter
add
lcall
mov
mov
loope
cmp
rcll
push
push
pop
add
cmc
fpatan
xor
adc
cli
jg
add
mov
dec
out
dec
pop
ficompl
mov
mov
movsl
jecxz
rcrl
jecxz
dec
loope
arpl
das
jns
jg
mov
push
push
mov
enter
sub
mov
xchg
aas
xor
sahf
lret
add
leave
jns
jmp
sub
add
sbb
std
data16
shlb
aam
leave
lret
add
stc
push
adcl
cwtl
mov
out
mov
inc
mov
push
add
frstor
mov
movsl
out
imul
sahf
cmpsb
mov
add
stc
xchg
imul
rorl
pop
jb
ss
xchg
xchg
mov
repnz
dec
mov
lcall
pop
mov
hlt
mov
pop
rcll
mov
xchg
into
sub
xchg
cmp
roll
push
imul
mov
aam
loope
js
pop
push
xchg
sarb
xor
add
add
xchg
add
ljmp
inc
push
out
cmp
mov
imul
repz
lret
sub
shl
jno
dec
loope
gs
cmpsl
pop
sub
lods
adc
aam
jnp
sub
add
test
scas
jmp
lahf
inc
lcall
das
mov
movsl
hlt
mov
call
popa
data16
sub
pop
gs
fisubs
cmp
dec
fwait
sub
xchg
sbb
iret
gs
icebp
inc
cmp
ror
rcl
add
add
sbb
add
jmp
jno
push
add
add
inc
in
add
or
jno
mov
inc
pop
popf
bound
jae
js
cmp
cli
pop
das
dec
jns
jp
pop
lods
sbb
jns
jmp
arpl
or
mov
pop
push
xor
lods
stc
std
jg
xchg
pop
lea
es
fidivs
pop
push
dec
mov
mov
add
gs
lret
jns
movsl
repnz
outsb
bound
add
int
mov
cltd
mov
jecxz
dec
lock
sub
clc
mov
js
outsb
pushf
outsb
push
mov
xor
shrb
imul
jmp
movsb
stos
jge
gs
jbe
imul
sub
pusha
repnz
cmp
leave
sub
push
adc
sbb
pop
jmp
mov
faddl
fiaddl
nop
add
ljmp
sarl
out
pop
push
cmp
cld
mov
insb
frstor
mov
fcmovu
cmp
mov
add
lret
xor
mov
cltd
mov
shrb
frstor
int3
jmp
addr16
pushl
jnp
imul
mov
pop
leave
shl
mov
jmp
push
idivb
pop
cmp
lods
jl
ss
add
int
call
mov
int3
lcall
sub
fiaddl
stc
cmp
sarb
fbld
mov
cmp
sbb
clc
sub
push
bound
jo
arpl
or
add
int
mov
mov
out
mov
xchg
fs
mov
adc
jecxz
dec
les
adc
lock
cli
roll
test
mull
pop
cld
mov
push
xchg
out
pop
mov
int3
mov
inc
dec
jecxz
mov
movsl
repz
les
dec
fwait
push
jecxz
cmpsl
cs
lcall
mov
hlt
rcr
xchg
cli
jno
scas
stc
xchg
dec
dec
pushf
lret
rclb
pushf
push
lds
jle
test
mov
scas
jno
stc
stc
dec
add
and
loop
mov
test
int
add
int
adc
push
mov
dec
mov
dec
xor
loope
jp
andb
cs
mov
test
push
test
lods
outsb
data16
inc
push
jno
divl
push
popl
dec
or
xlat
and
std
dec
add
pop
enter
andb
or
ficoms
shll
pop
notl
jne
jno
adc
sarb
fisubrs
push
std
sub
mov
frstor
stos
das
leave
pop
sahf
popa
jno
xchg
sub
fwait
xlat
add
add
lahf
cltd
push
add
pop
rol
aaa
or
jecxz
dec
adc
mov
cmp
in
scas
in
shrl
push
cmp
leave
mov
mov
test
int3
push
leave
push
out
mov
je
push
pop
test
rorl
jl
repnz
addr16
dec
jnp
dec
aas
shr
xlat
lds
add
andb
mov
es
call
out
or
icebp
lock
pop
call
loop
mov
lahf
mov
shlb
insl
xor
lods
outsl
repz
out
sub
hlt
negb
imul
daa
jmp
lret
outsl
fbstp
dec
iret
xchg
sub
add
enter
jno
jmp
inc
pushf
lret
cli
je
add
push
or
xlat
mov
ss
ja
faddp
dec
lret
shrb
pushf
push
jne
ret
test
add
in
mov
mov
sub
pop
imul
iret
mov
mov
bound
jno
lcall
iret
lahf
ret
insb
sbb
add
pop
cld
imul
and
in
jl
adc
cwtl
jno
insb
fisubrs
add
imul
or
xor
lahf
or
mov
mov
sarb
xor
dec
lahf
lcall
mov
cmp
imul
add
stc
sub
sub
add
outsl
lea
jl
dec
adc
push
jae
shll
inc
add
jmp
jmp
fldcw
clc
rcrl
test
push
mov
dec
js
iret
test
repz
jl
jb
sahf
xchg
insl
dec
sub
adc
nop
fcomps
add
in
sti
ja
push
dec
lret
cmp
and
jg
loop
push
clc
xor
sbb
movl
cmpsl
lea
scas
push
add
test
xchg
pop
pop
xchg
dec
mov
sub
push
sbb
xchg
pop
add
dec
cmpsb
ficoms
aas
mov
sub
icebp
or
inc
pop
fdiv
push
jb
mov
mov
lcall
popf
sub
incl
adc
imul
in
xchg
cmc
lcall
add
dec
xor
lahf
icebp
push
mov
out
sahf
in
decb
lret
dec
mov
xchg
add
mov
xchg
shrl
imul
fstl
call
mov
cmpsl
pop
jl
pop
xchg
shll
jb
outsb
jno
sbb
mov
jmp
push
lods
mov
repnz
inc
jno
std
cld
fldl
jnp
push
and
sahf
adc
insb
in
aaa
out
lcall
in
das
push
popa
push
pop
sub
push
pop
jg
ds
stos
mov
jno
push
sbb
pop
inc
dec
mov
cmpsb
dec
adc
loope
pop
jnp
out
jmp
cmpsl
imul
lret
cld
cwtl
hlt
jecxz
mov
jb
mov
movsl
fldcw
jb
int
fnstcw
ficoml
sub
mov
or
xor
add
jns
sub
add
add
push
lret
lea
in
loope
jge
push
and
insb
hlt
mov
call
push
nop
add
jecxz
fldenv
push
pop
fwait
jl
mov
rorl
mov
mov
and
pop
jle
dec
test
xchg
dec
xchg
push
push
mov
mov
sub
aaa
jp
cmp
ljmp
stos
sub
cmp
mov
jg
movsl
mov
cmpsb
dec
cmpsb
pushf
lods
add
int
jmp
sub
push
mov
add
sub
lods
inc
outsb
mov
mov
cmp
push
test
cs
mov
call
sti
daa
mov
sub
popw
lret
push
fiaddl
rcrl
repnz
cmp
lods
jne
push
push
popf
xchg
clc
add
je
jle
push
push
daa
jbe
jp
addr16
pop
ljmp
mov
loope
das
cmp
imul
jle
imul
cld
loop
mov
sti
or
cmp
xor
mov
pushf
lret
cltd
jns
mov
repnz
lcall
outsb
scas
bound
loop
pop
cmp
xchg
clc
shr
cmp
push
imul
fwait
xchg
mov
sarb
adc
inc
ja
test
rorb
insb
xor
mov
push
dec
sub
cmpsb
pusha
push
add
push
pushf
push
xor
jae
jno
loopne
loope
and
inc
dec
sti
push
mov
dec
lret
cmpsl
aam
sar
je
repz
jne
cmp
cmpsl
sbb
xor
cmpsl
mov
adc
mov
push
mov
lea
lcall
inc
pop
lods
icebp
lds
lret
int
or
js
mov
popf
cmp
dec
cmp
rorl
fwait
add
cmp
lods
push
cmp
leave
scas
or
cmp
pop
test
pop
test
lcall
push
cmpsl
or
sarl
notb
mov
enter
leave
jns
jmp
jl
lret
mov
cmpsb
fsubrl
sbbb
lret
notb
mov
jecxz
fiaddl
jg
ret
addr16
lds
das
inc
jbe
ja
mov
idiv
mov
lahf
xchg
push
add
mov
lock
int
sub
adc
push
lret
mov
fmulp
push
lret
mov
xor
push
lods
inc
adc
adc
cmpsl
jno
cmc
jl
pop
sahf
ficoml
and
pop
aad
cmc
inc
add
jl
jle
fsubp
jmp
jno
jmp
cmp
hlt
mov
mov
outsb
dec
scas
stc
mov
sbb
jmp
int
xor
call
mov
lret
cmp
pusha
stos
dec
xor
cmpsl
or
sub
jl
cld
dec
jbe
shrl
dec
jl
mov
sbb
das
imul
mov
outsb
dec
test
out
repnz
dec
mov
cmp
mov
out
xchg
mov
xor
cli
mov
dec
xor
dec
ljmp
dec
push
push
imul
and
stc
dec
and
xchg
inc
fwait
das
mov
dec
mov
lcall
jmp
test
fs
sti
lods
aas
mov
movsb
cli
mov
shl
popf
pushf
in
sti
aam
push
das
inc
push
icebp
add
pop
inc
push
cwtl
push
pop
lcall
test
lods
icebp
aam
test
shr
sbb
cmpsl
add
les
jno
lods
jle
imul
mov
imul
andl
pop
rcrl
int3
loope
push
or
jge
outsl
mov
dec
fisubl
pushf
rcrl
out
adc
das
cmp
scas
lea
cmp
mov
gs
mov
sar
in
xor
push
and
jo
add
dec
ret
lds
je
test
es
les
jne
into
pop
icebp
loopne
hlt
pop
loopne
mov
lcall
fdiv
dec
dec
sub
lret
cmpsl
mov
mov
cmpsl
sbb
lds
jne
inc
jmp
je
mov
adc
xlat
cmp
jle
ficomps
and
aas
inc
mov
mov
xchg
push
imul
lods
xor
add
jmp
fsts
insb
dec
addl
imul
push
xorl
sub
cld
aad
xchg
pop
in
dec
lods
cmp
in
or
movsl
jae
dec
mov
jge
jp
jbe
je
pop
pushf
mov
in
mov
fdivrl
mov
sub
das
mov
rcll
aad
xchg
bound
lahf
rcll
stos
sub
testb
sub
rcl
xchg
mov
jl
push
lret
jo
mov
push
aam
push
dec
jg
dec
stos
hlt
out
cli
mov
popf
mov
pop
pop
stos
aaa
pop
push
out
imul
mull
inc
mov
sub
pop
int
sub
int
jecxz
xor
pop
add
fwait
sbb
imul
int
int
push
push
out
addr16
cmpsb
shll
or
in
shll
call
ds
cs
xchg
pushf
mov
sbb
add
xchg
push
fwait
pop
pop
mov
ret
std
in
adc
imul
xlat
mov
lahf
cmp
sbb
ds
inc
ret
rcll
pop
js
lcall
test
lds
xchg
das
mov
adc
and
inc
lcall
imul
mov
adc
mov
xchg
pop
mov
imul
jp
rcr
je
sbb
ljmp
pop
mov
popf
cmp
mov
jns
jb
pushf
aaa
popf
pop
das
vrcpss
int
cmpsl
pop
int
aas
mov
dec
adc
xlat
mov
jae
inc
out
mov
mov
in
push
lods
pushf
xchg
mov
adc
scas
fldcw
cmp
mov
sub
sbb
xor
int3
stos
cmpsl
push
sarl
rcr
hlt
jl
aad
repnz
push
jp
sub
shrl
mov
stos
mov
sbb
mov
stc
push
mov
pop
pushf
call
inc
xchg
in
inc
in
insl
push
and
out
xchg
push
ja
inc
push
and
cwtl
inc
mov
pop
leave
jbe
push
lret
stc
jmp
ljmp
iret
scas
jg
sbb
lahf
and
xchg
in
dec
xor
add
sarb
in
lahf
jns
fldcw
mov
loop
jns
cld
xchg
jl
push
dec
add
pop
xchg
clc
aam
scas
loope
cmpsl
add
je
sbb
xchg
pop
xchg
imul
fistpl
jns
das
jge
das
cmp
in
popf
xchg
lret
test
ficoml
push
jb
xchg
jl
push
jne
jl
xchg
popf
pop
lret
lcall
inc
pushf
push
sub
xchg
addr16
lods
hlt
ds
pop
inc
sahf
stos
cwtl
dec
xchg
into
mov
sbb
xor
cmpsb
test
lahf
lds
movsl
fildl
stos
addr16
push
imul
andb
pop
iret
mov
xchg
loopne
popf
rcll
cld
movsb
call
xchg
push
push
push
shll
fdivl
jne
dec
pop
int
gs
xor
pushl
outsl
int
cmpsl
sahf
test
sbb
xchg
scas
cmpsl
jge
mov
cld
loop
in
sahf
rcr
xlat
push
push
dec
xor
rorb
je
mov
xchg
les
idiv
xlat
mov
int
xchg
popf
cmpsl
adc
pushf
int
xchg
out
test
xchg
xchg
popf
jno
in
dec
das
int
test
imul
mov
pushf
inc
xor
cmpsl
push
sbb
jmp
xor
icebp
pusha
adc
aam
loope
imul
icebp
push
scas
pop
dec
jl
faddl
mov
in
stos
add
add
into
movsl
flds
mov
sti
xor
mov
scas
mov
dec
mov
inc
cmc
mov
shrb
mulb
sub
sahf
pop
cmp
testl
xchg
mov
aad
push
lods
lret
lods
mov
pushf
jns
fisttpl
fisubs
ret
sahf
out
inc
cmpl
jns
mov
in
jp
xlat
or
js
test
pop
adc
jns
dec
xchg
std
or
stos
repnz
shr
sub
cmp
pop
not
rorl
mov
sarb
popf
dec
mov
sbb
in
arpl
fs
incb
cmpsb
sub
or
out
push
daa
push
jl
or
dec
mov
lcall
mov
dec
push
mov
in
jb
shll
fucomi
in
movsl
push
dec
stos
xor
jae
rol
adc
jl
jp
sbb
xchg
push
mov
xor
mov
adc
mov
in
sarb
xor
test
pop
cmp
movsb
push
mov
lock
sub
shrl
sahf
pop
mov
in
in
adc
push
cld
mov
ljmp
push
adc
lods
test
mov
lret
mov
xor
inc
rol
sub
dec
mov
shl
popf
rol
ja
cs
sub
das
js
jo
add
inc
jmp
ds
dec
lods
mulb
shl
or
pop
push
lds
adc
dec
lcall
mov
das
dec
imul
adc
mov
nop
dec
push
mov
cltd
test
mov
lret
out
mov
push
mov
dec
stos
fwait
enter
repnz
jns
cmc
hlt
xchg
xchg
popf
lahf
icebp
jbe
jno
movsl
in
fdivrl
pusha
mov
adc
addr16
add
les
cmp
stc
xchg
stc
and
ds
xlat
adc
sub
cmpsl
jg
rcl
leave
push
icebp
adcb
pushf
shlb
jp
cld
or
iret
shrb
inc
jbe
jno
pop
pop
popf
push
shr
repz
pop
jecxz
imul
int3
mov
idiv
jmp
rol
imul
testl
stc
pusha
leave
aad
ja
outsl
imul
and
aas
lea
jp
popf
repz
shll
movsl
mov
and
mov
push
cmp
mov
push
mov
rcr
mov
jmp
loope
aad
push
lods
pop
cld
imul
xchg
addr16
aad
push
lock
pushf
les
lcall
xchg
popf
imul
lret
xor
loope
jl
push
push
clc
and
out
dec
mov
xchg
clc
fucomp
stos
mov
or
leave
iret
shrb
dec
jae
fisubrs
outsl
ficompl
xlat
xchg
icebp
xchg
pushw
fs
pop
fisubrs
cmp
adc
fisubl
sub
xor
xlat
sti
sub
je
push
lret
dec
rcrb
insb
and
mov
data16
int3
ljmp
daa
sbb
mov
mov
push
mov
outsb
repnz
dec
loope
jne
push
in
add
jecxz
in
insb
jmp
cmp
mov
nop
loope
cmp
lds
jle
jno
in
xor
jne
imul
cmp
loope
adc
xlat
mov
pop
lcall
fdivrp
negl
xchg
test
out
mov
ds
fnsave
dec
sub
pop
mov
rclb
flds
xchg
rcrb
scas
cmp
lahf
insl
out
lcall
adc
out
cmp
stc
je
push
dec
add
rclb
mov
mov
xor
cmp
inc
pushl
dec
cmp
clc
scas
sar
and
ds
ffree
push
inc
inc
and
cwtl
mov
or
mov
jo
ljmp
popf
shrl
loopne
add
jo
je
out
cmp
notl
orl
dec
fucom
scas
jno
in
mov
fstpt
les
popf
xor
xlat
or
das
bound
jg
and
lahf
jno
jecxz
notl
pop
mov
dec
into
mov
ljmp
shl
mov
popf
pop
inc
jge
repnz
jp
ror
xor
ss
fisubrs
jge
or
shll
xchg
lcall
lret
lret
mov
cmp
cmpsl
add
ficoms
pop
aad
jno
jno
insb
xor
cmp
dec
stos
mov
outsb
add
jo
lahf
iret
adc
rorl
xlat
add
mov
inc
mov
sbb
mulb
stos
sub
in
pop
xchg
push
je
push
add
sti
dec
loop
xchg
mov
or
lret
loop
fsubl
inc
fbld
jno
xlat
pop
mov
addr16
jmp
imul
into
popf
popa
jb
iret
sbb
cld
adc
jno
mov
mov
test
daa
xchg
push
es
stos
lcall
xlat
xchg
repz
imul
fwait
sub
sbb
out
xchg
mov
dec
test
hlt
stos
lods
and
cmp
dec
push
push
mov
sub
cmp
adc
dec
ficompl
inc
repnz
sarl
mov
push
je
mov
mov
lahf
jo
repnz
scas
mov
push
pop
mov
jecxz
rcrl
lcall
xchg
xchg
aad
push
dec
mov
in
cmpsl
xlat
adc
int3
push
mov
gs
sarb
and
pop
inc
dec
xlat
pop
sbbb
pop
dec
push
push
gs
adc
jecxz
stos
std
push
mov
int
popa
aam
jl
push
out
in
out
xlat
mov
hlt
jno
jle
jp
in
dec
xor
mov
mov
sbb
inc
jp
shr
mov
mov
cltd
mov
xchg
cmpsl
push
lret
push
iret
cs
scas
cltd
int
lahf
lock
rolb
mov
push
xchg
insl
not
sbb
pop
push
data16
inc
push
cmp
push
mov
mov
shr
jns
jg
imul
sti
adc
mov
clc
scas
cmp
cmp
lahf
lret
jecxz
jmp
xor
scas
cmp
fidivl
call
mov
push
lret
mov
in
push
nop
add
mov
and
xchg
add
shrl
imul
test
mov
imul
movsl
aam
hlt
ljmp
aam
repnz
jae
rol
sbb
jge
cmpsb
mov
mov
test
pop
sbb
sub
xchg
gs
mov
cmpsl
lods
push
scas
jno
daa
notl
push
pop
out
popf
adc
xchg
inc
fstps
add
pop
jl
in
or
jmp
cmpsl
or
out
mov
pop
cmp
xchg
sub
dec
out
and
in
or
stos
dec
scas
cmp
in
cmpsl
sarl
iret
fmull
into
insb
jno
loop
jno
dec
add
repz
clc
jne
ljmp
xchg
mov
out
movsl
xchg
outsb
loope
and
mov
lea
js
dec
lods
nop
mov
add
in
subl
jg
cmp
pop
jno
in
mov
shrb
dec
xor
add
dec
and
enter
adc
dec
into
mov
imul
add
cld
rol
jecxz
cmpsl
jmp
popf
test
cmp
dec
cld
push
and
pop
inc
xchg
cmp
stos
iret
lods
xchg
mov
dec
cmp
push
ljmp
bound
inc
jle
out
xor
jecxz
pop
dec
jne
cli
cmpsb
inc
mov
mov
xchg
ret
in
movsl
and
ret
xchg
jl
je
add
shll
test
lahf
push
cmp
mov
out
iret
nop
stos
in
and
ss
js
pop
and
mov
or
loopne
and
aad
cli
pop
mov
mov
fwait
das
test
in
pop
fisubl
out
mov
xchg
popf
mov
sub
inc
ret
fcomip
cmp
out
leave
jne
xorl
cmpsl
fsubl
jge
xlat
ss
sarb
out
das
pop
adc
stos
scas
cs
loope
ds
mov
call
stos
or
lcall
sub
jl
cmpsl
adc
lods
mov
add
dec
aaa
shlb
out
int3
scas
pop
xchg
mov
or
stos
adc
adc
enter
pop
movsb
stos
stc
dec
mov
fsub
and
popf
and
push
inc
sahf
lods
xchg
call
outsb
scas
je
fisttpl
cltd
jo
iret
in
loop
mov
ds
das
or
movsb
roll
shrb
mov
lret
cs
test
mov
inc
daa
loop
fucom
ljmp
inc
pop
popf
pop
outsb
jbe
shrl
in
mov
pop
mov
nop
bnd
dec
rcrb
pop
decl
imul
dec
mov
sub
gs
jl
imul
notb
pushf
notb
pop
jns
xor
aam
mov
xor
xchg
dec
cmc
jae
fs
test
int
add
add
adc
adcl
stos
je
aaa
subl
rcrl
shll
sbb
stos
movsl
popf
jge
iret
mov
mov
sbb
addr16
mov
sub
fstl
sub
cmpsl
icebp
or
inc
outsb
in
pop
xchg
out
sub
inc
sarb
lret
or
xor
mov
test
imul
jecxz
stos
test
pop
out
and
or
jle
jns
ss
out
movsb
mov
dec
jecxz
xlat
cmpsb
jbe
add
aas
cmpl
popa
imul
jle
jl
pop
test
xor
jecxz
dec
sub
mov
loop
mov
xchg
cltd
add
cmp
pushf
iret
inc
in
add
mov
mov
sti
inc
out
dec
adc
enter
inc
enter
int
rol
xchg
push
orl
pop
xchg
jle
pop
daa
notl
xchg
popf
popf
imul
inc
push
push
dec
mov
push
pop
mov
insl
imul
pop
leave
loop
sub
fnstcw
mov
mov
mov
outsb
mov
sar
repnz
mov
dec
cld
push
fldcw
ja
jmp
jbe
std
dec
test
jne
jo
movsl
mov
xlat
testb
mov
insl
xchg
jp
insl
das
push
pop
out
iret
pop
xchg
mov
rcrb
and
and
fwait
xchg
push
xor
jno
shl
pop
insl
add
cs
dec
adc
notb
pushf
int
inc
pop
mov
jecxz
cmp
cmp
xchg
cmp
and
inc
cmp
cmp
sub
mov
lcall
addr16
sub
lret
jl
out
sbb
popf
sbb
xor
hlt
insl
rol
adc
mov
xor
aad
xchg
ja
repz
stos
xchg
mov
pop
xchg
test
outsb
sub
push
in
scas
imul
fisubrl
sbb
sar
jb
jbe
ja
mov
movsb
ljmp
dec
push
sarl
roll
pop
adc
pop
add
push
repnz
hlt
sahf
jne
dec
mov
loope
adc
add
mov
mov
int
das
cmp
lret
rorl
or
adc
lea
stos
sub
sarl
jle
dec
sar
shlb
call
xor
into
insl
movsb
in
imul
test
sub
pop
insl
jnp
sahf
aad
loopne
je
jge
shrb
inc
insl
jl
add
ficoml
incl
dec
xchg
add
xor
jg
mov
in
das
pop
test
mov
jmp
mov
xchg
mov
mov
hlt
mov
push
jbe
lret
out
mov
int
dec
push
out
sub
or
clc
jl
xchg
insl
mov
push
out
cmp
cld
int3
mov
scas
and
loope
cmpsb
rcrl
xchg
fisubl
push
cltd
rorl
dec
jg
sub
add
inc
daa
sbb
inc
xchg
mov
xchg
mov
dec
decl
outsb
push
movsl
fnstcw
ljmp
icebp
xlat
daa
fcoml
pop
mov
mov
mov
insl
andl
inc
jo
push
jo
mov
mov
add
mov
popf
jge
or
icebp
jmp
pushf
shll
ret
sarl
and
shll
pop
shl
jmp
negl
jmp
std
mov
daa
pop
dec
dec
and
push
das
dec
jbe
add
shl
mov
int
bound
fiaddl
mov
cmp
stc
cmp
scas
pop
jne
xchg
pop
push
inc
dec
adc
movsl
add
jnp
dec
or
xor
loop
mov
add
xchg
out
sub
xchg
mov
into
rorl
lcall
cmp
loop
mov
lods
adc
dec
mov
into
ds
jno
jns
push
pop
add
push
in
xor
mov
jge
into
notl
cmc
push
mov
cwtl
xlat
xor
add
mov
ficoml
inc
lods
icebp
daa
aas
shll
mov
sub
cli
out
shrb
test
iret
movsl
mov
xchg
les
mov
sub
shr
sub
dec
adc
out
lret
clc
pop
lcall
idiv
loop
dec
mov
sub
sub
xchg
cli
lcall
test
fcoms
in
add
daa
push
lret
lods
jl
test
add
adc
rorl
cmp
mov
adc
jo
mov
push
xlat
sti
cmp
shl
popf
popf
mov
dec
ja
sbb
adc
mov
add
movsl
call
xor
js
mov
in
pushf
sarl
gs
push
xchg
aam
dec
sarl
mov
leave
xchg
jmp
in
mov
lahf
iret
dec
jmp
jg
into
dec
xchg
clc
out
dec
mov
fists
fwait
cwtl
add
call
mov
or
and
xchg
popa
fsubr
cmpsl
mov
test
mov
cmp
repnz
pop
bnd
dec
inc
sub
add
jb
lcall
imul
scas
jno
shlb
lret
fsts
add
ds
mov
lahf
push
xchg
stos
pushf
int
scas
mov
push
xchg
scas
lahf
and
pop
scas
imul
jge
cmpsl
or
insb
shrl
jno
ja
cmpsl
push
hlt
insl
pop
lret
stos
imul
rcll
ja
out
lret
lret
mov
decb
push
mov
adc
jmp
adc
ja
arpl
or
cli
inc
cltd
add
lods
inc
pop
daa
push
sub
pop
repnz
xchg
stos
cmp
sti
jns,pt
negb
jecxz
dec
adc
lcall
out
xchg
repz
hlt
mov
popf
add
jns
and
mov
jo
pushf
shll
cmp
roll
repnz
call
outsb
repz
rcl
scas
testb
jns
push
fists
jg
icebp
and
pop
lret
pop
outsl
jmp
fnstsw
lret
mov
scas
stc
stos
dec
test
mov
jnp
scas
jbe
imul
imul
rcrl
xlat
dec
sar
jmp
out
movsl
xchg
ja
out
jg
int3
lods
sub
cmp
imul
mov
jg
xor
ja
jae
ja
mov
std
mov
add
clc
into
fnstenv
leave
jg
add
add
add
test
mov
mov
mov
pop
jmp
rcl
cmpsl
add
sarl
jae
into
stc
xchg
mov
dec
les
shrb
mov
ret
push
and
leavew
shll
pop
mov
jns
insl
or
mov
push
mov
icebp
aam
mov
gs
daa
sbb
cld
sbb
jmp
scas
icebp
loope
dec
jnp
enter
lods
push
in
jecxz
xlat
adc
test
loop
mov
jle
push
pop
jno
or
jbe
repnz
jbe
pop
ds
movsl
push
cmp
dec
lds
inc
pop
add
mov
ror
jg
pop
leave
cmc
repz
jb
cmpsb
jae
rclb
or
cld
cwtl
dec
popa
rorb
mov
loope
cld
loopne
adc
in
hlt
out
mov
cmpsl
mov
mov
das
sub
xchg
int
cmpsb
mov
mov
jno
rcll
pop
mov
cmpsl
jnp
add
scas
jge
cmp
cli
out
pop
jge
ljmp
stos
repnz
jbe
lret
loop
fstp
bound
repz
dec
loop
aad
fidivl
gs
stc
mov
shl
cmpsb
stos
sarl
mulb
loop
mov
out
popf
push
mov
mov
test
fildl
adc
scas
out
shr
sub
pop
mov
ss
add
fs
ret
fxtract
mov
dec
lods
fidivs
mov
pop
add
mov
outsb
mov
mov
dec
push
in
adc
add
cmpsl
sbb
sub
idivl
pushf
rcll
mov
test
inc
pop
jno
stos
repnz
stc
mov
leave
frstor
imul
cmp
cli
scas
dec
mov
dec
add
pop
ljmp
sarl
dec
test
sti
mov
pop
ljmp
stc
pop
out
dec
sub
test
jnp
mov
mov
xchg
fists
std
mov
mov
mov
pop
pop
dec
mov
out
test
out
int
jne
jg
stos
imul
mov
notl
add
idivl
repz
push
test
aad
icebp
fwait
sub
faddl
lret
mov
mov
xchg
stos
mov
mov
add
test
mov
sub
cmc
dec
xor
loope
push
add
add
jecxz
outsl
add
push
inc
sti
out
repz
xor
mov
decb
shrb
dec
lds
xchg
cwtl
in
pusha
movsb
mov
dec
dec
dec
mov
int
gs
aas
std
mov
test
shl
cli
mov
add
jne
jge
xor
test
notl
mov
nop
shr
dec
stc
aas
mov
in
add
or
dec
lods
xor
adc
fisttps
and
pop
jno
mov
scas
xchg
idivl
hlt
dec
jp
shrl
scas
imul
lahf
push
jne
adc
add
incl
mov
dec
adc
cmpsb
dec
adc
add
sub
roll
clc
add
sub
aas
dec
xchg
mov
out
in
xor
scas
loop
shr
inc
cmpsl
sub
or
das
pop
xchg
add
daa
aad
mov
mov
testl
dec
popf
test
rcl
mov
fwait
sarb
dec
std
xchg
jnp
mov
mull
add
mov
jo
xchg
fists
pop
daa
cmp
mov
ja
push
push
ss
add
sub
sbb
imul
and
mov
pop
pop
push
pop
fs
push
mov
sahf
mov
pop
daa
push
out
daa
sbb
icebp
pop
sbb
ja
lock
pop
dec
imul
xchg
rorl
lcall
bound
inc
cmp
daa
xlat
xor
xchg
xchg
lcall
pop
jp
pop
mov
mov
je
call
fnstcw
das
mov
fisttpll
pop
jp
mov
cmp
mov
and
jl
jo
cmc
inc
inc
rorl
shl
sti
sahf
lods
cmp
stos
mov
mov
test
in
cmp
pop
in
xorl
cmp
pop
mov
and
xor
mov
mov
fwait
orl
aam
mov
inc
dec
test
hlt
jecxz
cmpsl
out
mov
sbb
cmc
hlt
cmp
xchg
loopne
mov
add
mov
lahf
add
add
leave
fistps
dec
aad
jecxz
jnp
and
lds
add
shll
mov
sar
movsb
test
loop
xchg
xchg
pop
pushf
shrl
lcall
sub
or
ja
mov
add
pop
pushf
shlb
es
lods
out
cmpsb
or
fnstcw
lods
lds
sbb
mov
xchg
or
aad
mov
and
icebp
imull
inc
mov
pushf
rcr
jmp
jno
cmpsl
jge
lds
clc
mov
repnz
ja
stos
imul
mov
jae
jmp
clc
jb
pop
sti
movsl
in
xor
aam
mov
ret
inc
jns
fadd
bnd
xchg
in
or
sarb
call
mov
cmp
push
adc
sarl
mov
xlat
pushf
rcll
push
pop
lcall
jae
add
popf
hlt
push
mov
dec
adc
test
in
mov
mov
mul
rorl
mov
dec
stos
sub
pop
hlt
jns
stc
fwait
jb
fsubrs
iret
shrb
cmp
enter
bnd
dec
cld
or
inc
cli
gs
mov
scas
xchg
mov
mov
jecxz
mov
out
jmp
and
or
ja
shrl
cmp
cmp
mov
pop
movsl
call
inc
andb
lahf
mov
jbe
insl
shrl
adc
shlb
dec
fs
mov
jl
xor
add
inc
add
rorb
les
les
outsl
mov
cmc
jno
lret
std
inc
jle
mov
jmp
imul
stos
xchg
cmpsl
adc
pushf
lods
and
pushf
int
mov
sarl
mov
lret
xchg
int
shr
mov
add
dec
test
ljmp
xbegin
or
scas
inc
push
loop
loope
jne
add
mov
mov
loop
je
xor
loop
lods
xor
push
lret
clc
lahf
push
pop
mov
mov
mov
pushf
push
mov
in
jb
mov
insl
ja
scas
mov
jg
add
mov
mov
xor
fdivl
adc
test
pop
pop
xchg
les
push
cmp
rolb
jecxz
hlt
cmp
jg
add
xchg
jge
inc
pop
xchg
sbb
add
mov
call
in
jecxz
xchg
ja
or
inc
add
incl
in
add
or
insl
call
xchg
jecxz
movsb
cmp
cmp
lret
out
sbb
ret
stos
jg
jbe
ret
inc
leave
cld
add
shlb
pop
pop
lcall
movsl
push
ficoml
pop
dec
sahf
mov
gs
scas
sbb
scas
sub
sub
mov
sti
mov
lods
movsl
add
xor
rclb
call
sti
jg
jge
fsubp
fcoml
pop
fisubrs
dec
into
lods
dec
mov
lcall
xor
loope
cmp
dec
lock
fdivr
decl
jg
in
xlat
insb
mov
sti
push
fildl
loop
mov
adcb
jbe
pop
push
mov
lret
sarl
les
mov
sarl
lret
stos
scas
mov
sub
mov
add
mov
lret
xlat
dec
add
sub
int
jns
jmp
add
pop
ficomps
jp
dec
adc
add
int
lock
cmp
pop
lods
xor
push
push
dec
cli
and
ljmp
popf
ss
xchg
pushf
rcrb
daa
add
mov
nop
mov
mov
mov
cmpsl
test
jns
push
fucomp
in
and
dec
loop
dec
out
in
add
shll
fiadds
fwait
mov
and
js
cmc
lahf
hlt
or
sub
testl
fistpl
mov
ret
mov
out
repnz
pop
in
xor
repnz
xchg
mov
fiadds
shrl
enter
rorl
bnd
shlb
dec
add
jmp
stc
stos
enter
imul
stos
mov
xor
add
rcll
rcrl
outsb
test
xlat
mov
popa
pop
imul
idiv
int3
push
loope
mov
test
out
mov
data16
xchg
add
cltd
ret
xchg
mov
addl
mov
add
lret
jne
mov
xchg
dec
rcrb
adc
outsl
mov
pop
xorl
rcll
or
push
inc
mov
ljmp
sbb
shrl
movsl
aam
pushl
out
mov
xchg
jp
cs
lea
push
xchg
mov
add
mov
pop
loop
xchg
loope
adc
andb
popf
add
dec
push
xchg
les
cmp
enter
dec
mov
dec
fsubrl
inc
mov
dec
es
pushf
xchg
xchg
popf
pop
repnz
lret
lcall
pusha
in
stos
sub
test
mov
add
sti
sub
das
mov
pop
dec
iret
xchg
dec
xor
mov
ljmp
mov
dec
mov
push
shr
clc
leave
mov
pushf
shrl
int
iret
shll
sbb
js
pushf
rcrl
js
pushf
add
in
push
repnz
xchg
ret
xchg
inc
leave
mov
lret
add
out
xchg
rcll
movsl
shrl
dec
fucomip
fcoms
aam
pop
popf
imul
shll
lock
xlat
sbb
xchg
mov
subb
jbe
popf
push
gs
shrb
xchg
push
pop
adc
mov
mov
sub
dec
xchg
adc
andl
push
inc
mov
aad
inc
arpl
test
ds
xchg
bound
fcomip
repz
pop
enter
in
xchg
ret
ret
inc
pop
jno
xor
mov
mov
mov
aas
mov
jb
cmpsl
add
jg
push
ret
imul
div
das
lcall
jmp
ljmp
xchg
mul
imul
shlb
and
lods
cmp
dec
pop
xchg
mov
outsl
mov
push
cmp
clc
dec
fwait
loopne
cltd
ret
cmp
mov
in
fbld
fidivl
fs
add
push
das
lcall
push
in
mov
out
xchg
add
fbld
repnz
and
js
fxam
cmp
std
das
adc
in
call
lds
mov
jl
dec
or
loopne
inc
stc
mov
mov
adc
push
lock
cmp
imul
pop
outsb
ds
in
sahf
mov
dec
bnd
leave
jp
xchg
xchg
mov
hlt
inc
mov
jl
mov
out
mov
cld
ret
mov
rcl
enter
in
ljmp
outsb
clc
sbb
jecxz
int3
scas
add
cmpl
mov
xchg
mov
xchg
adc
fwait
pop
leave
lret
roll
pop
pushf
mov
add
sub
jb
sbb
cmpsb
mov
shl
rcl
adc
std
push
add
aam
add
fsts
insl
cmp
pop
in
test
shr
jmp
movsl
lret
xchg
inc
loop
ret
push
mov
xchg
xchg
pop
addr16
jae
pop
das
inc
adc
cld
or
cmp
in
aam
loope
mov
int
test
rclb
pop
xchg
lods
add
js
movsl
add
jl
add
iret
adc
rcr
pop
xchg
sbb
jae
pop
mov
push
sbb
inc
mov
mov
or
mov
push
xchg
push
xchg
pop
lcall
push
add
das
divb
ja
xchg
lcall
mov
das
dec
test
lret
shrl
add
lods
lods
lods
xchg
daa
xchg
dec
dec
movsl
daa
adc
lahf
sub
leave
repnz
les
aam
mov
dec
mov
out
xchg
sbb
sbb
lret
add
call
divb
sti
pop
fdivrp
shl
add
sub
loop
pop
test
cld
roll
idiv
movsl
xor
jl
and
mov
bound
testl
imul
add
pop
sub
ficoms
sbb
dec
mov
jge
cmp
movsl
ljmp
pop
push
icebp
mov
ja
test
push
or
das
inc
jg
sbb
popf
mov
jb
xchg
or
shrl
inc
or
hlt
mov
jne
mov
sarl
icebp
loopne
jbe
insb
popf
outsl
push
leave
mov
inc
push
sub
and
sar
lock
or
std
popa
mov
mov
push
or
jns
pop
enter
mov
jg
fwait
ret
push
mov
cmp
into
xor
clc
fcompl
jle
push
jne
rorl
imul
dec
jp
jae
lods
loop
ret
pop
leave
cmc
mov
xor
inc
out
add
lcall
loop
jnp
jae
cmp
sar
inc
mov
mov
repnz
add
movsl
mov
rorl
pushf
jp
push
cmp
jle
stos
sub
lods
sbb
icebp
xor
jbe
out
and
test
out
jmp
ret
rcll
shl
call
test
shr
in
das
sub
testb
jg
mov
lahf
or
ds
sub
mov
add
stos
outsl
sub
cli
pop
cs
rorb
loopne
add
fnstsw
test
jmp
rol
adc
pop
dec
daa
pop
sarb
add
fisubl
lea
push
and
jne
in
aaa
cmpsb
or
sub
lods
add
fidivrs
dec
sbb
rclb
inc
adc
imul
adc
les
mov
sub
jp
dec
imul
or
scas
cmp
mov
mov
shlb
out
scas
imulb
jb
flds
jl
imul
test
pop
daa
push
rcr
or
dec
push
pop
scas
jp
sbb
daa
jae
popf
sar
fldt
loop
jno
aad
test
daa
movsl
lret
fdivrl
cwtl
jne
icebp
out
jmp
popa
mov
xchg
inc
ficomps
shrl
inc
rcrl
add
xchg
sarb
or
fidivrl
ds
push
xor
fisubrs
add
loopne
sub
scas
add
movsl
loop
jno
pop
push
repz
push
xchg
lds
aas
adc
mov
push
push
sbb
xchg
xlat
cmp
test
push
mov
add
sbb
roll
add
push
mov
imul
mov
shl
push
icebp
pop
sbb
xchg
xchg
scas
mov
lahf
addr16
pop
in
jmp
sbb
mov
hlt
loop
test
test
mov
mov
fnsave
sbb
lcall
cmc
cmpsl
repz
dec
sbb
mov
les
sub
dec
xor
add
add
adc
lds
imul
out
mov
aas
pop
pop
repnz
xchg
cld
or
xchg
test
pop
mov
int3
testb
test
hlt
adc
push
out
pop
loopne
push
test
jl
push
xorb
lahf
mov
lds
dec
mov
fiaddl
hlt
push
je
cmp
hlt
ljmp
add
js
fadds
jae
movsl
push
in
ljmp
stos
sbb
lret
loope
cwtl
add
cmpsb
pop
das
jae
and
es
daa
pop
jg
daa
pop
pop
jmp
shr
jno
movsl
add
sbb
pop
cwtl
lcall
mov
sub
pop
jg
aaa
push
cmp
push
mov
or
push
lcall
sub
inc
fnstsw
sarb
out
xchg
daa
aaa
pop
daa
xchg
lahf
sbb
xor
fidivs
lods
xor
lods
fsubl
sahf
pusha
sbb
add
or
lahf
jecxz
pop
add
sub
shrb
or
lcall
dec
cmp
in
jge
cmp
out
addr16
cmpsl
adc
repnz
leave
cmpsl
out
scas
notb
pop
mov
jg
sbb
decl
sbb
jmp
lds
daa
mov
pop
ljmp
mov
xlat
mov
daa
fcompl
jp
dec
jno
pop
sub
negl
in
add
int3
mov
lods
jp
call
mov
in
dec
push
in
xor
mov
sub
mov
ljmp
mov
fnstcw
bound
dec
push
rorb
mov
dec
outsb
idiv
dec
int3
dec
ficoml
xorb
dec
jecxz
pop
imul
mov
mov
hlt
loope
lods
or
sbb
add
push
mull
mov
inc
je
sbb
add
mov
add
jae
add
scas
mov
lods
mov
or
in
add
out
insl
jl
cmc
jmp
mov
mov
ficoms
add
sbb
mov
imul
pop
popf
pop
push
shll
cmp
add
inc
pop
insl
das
add
dec
test
cmc
add
aas
imulb
data16
dec
sub
pushf
push
ret
movsl
pop
dec
mov
or
fcompl
jnp
mov
fwait
lret
pop
or
shld
pop
pop
out
pop
test
lock
popl
hlt
inc
push
push
cmpl
idiv
dec
mov
stc
cmp
shlb
lahf
cli
sub
div
dec
push
or
pop
jne
fildl
push
mov
add
sahf
adc
movsl
add
or
stos
add
pop
ja
inc
xor
add
sahf
enter
mov
into
sub
add
subb
popf
loop
pop
into
sub
leave
aad
and
repnz
out
in
scas
insb
dec
xchg
pushf
sarb
rcll
push
push
xlat
or
pop
pop
jp
in
daa
or
jne
sub
dec
jg
aam
push
sahf
sub
jmp
pop
add
dec
xchg
loope
popf
dec
les
xor
push
movsl
pusha
push
adc
mov
mulb
icebp
or
repz
cmc
or
jmp
push
mov
mov
jae
pop
add
stos
xchg
xor
outsb
or
fldt
aaa
mov
and
fiaddl
jl
cmp
stc
adc
mov
inc
iret
push
cld
test
jmp
in
mov
push
int3
js
movsb
pop
in
mov
add
jp
push
test
lahf
std
cmp
fld
test
and
je
es
mov
fldcw
das
inc
and
loope
and
das
lret
or
loop
cmp
call
andl
xchg
cs
and
sarb
xor
xorb
gs
loopne
push
mov
loope
xor
pop
sub
or
sbb
lds
or
cmp
insl
pop
jae
lsl
subl
mov
imull
enter
or
stos
mov
cmpsb
sub
clc
mov
pushl
xor
test
or
mov
out
sbbb
sub
push
les
add
gs
pop
jno
push
push
mov
pusha
call
dec
mov
in
jp
xchg
mov
xlat
cmpsb
xor
cmp
aam
adc
cltd
inc
popa
add
punpcklbw
aas
jne
cld
inc
sbb
aad
xchg
mov
mov
cmpl
fldcw
push
daa
mov
in
ret
in
leave
sbb
push
sub
stos
dec
add
mov
adc
dec
xor
roll
dec
imul
aad
ret
dec
xorb
sub
decb
sub
xor
insl
or
mov
cs
lods
pop
adc
jg
xchg
xor
push
lock
push
addr16
xor
aaa
xlat
mov
loope,pn
xchg
mov
mov
sbb
cmc
or
packsswb
sbb
cmp
jle
or
test
movsb
cld
and
aaa
fcomi
sahf
sub
lahf
jecxz
inc
clc
hlt
fptan
filds
lcall
in
push
and
scas
enter
in
enter
xchg
lahf
cmpsb
ss
mov
dec
push
xor
jg
fbstp
mov
lahf
lock
int3
add
inc
pop
add
xchg
mov
push
cmp
scas
xchg
mov
dec
lds
sbb
or
lahf
push
jo
fucomp
jl
dec
nop
mov
es
test
lahf
sahf
mov
sub
fistl
jecxz
shld
push
dec
lret
lahf
jo
or
mov
mov
clc
fs
sub
in
pop
pop
dec
into
arpl
dec
add
pushf
ret
cmp
push
bnd
in
je
add
mov
stos
shrb
inc
add
mov
sbb
jno
in
cmc
pushl
pop
or
xor
push
pop
sub
sbb
jns
pop
lret
xchg
pop
lahf
add
int
push
out
push
and
mov
jb
fcoms
sub
mov
ds
imul
int
add
rorl
lds
mov
repnz
push
insb
insb
mov
push
les
sub
lret
adc
inc
das
lret
icebp
insl
xor
incb
mov
enter
fcomps
popf
fs
jmp
push
cmp
cmp
mov
int
lcall
cmc
or
ja
and
adc
mov
enter
inc
es
shll
insb
mov
push
mov
je
movsl
mov
lods
jg
jnp
fsubrs
jb
test
in
popa
jge
adc
push
xor
int
bound
inc
add
dec
sub
enter
pop
movsl
lret
pop
push
daa
push
adc
pop
dec
and
popf
gs
lahf
icebp
mov
bound
or
push
loop
pop
ljmp
es
cmpsl
mov
dec
xchg
cwtl
je
pushf
push
pop
mov
mov
movsl
mov
xchg
imul
and
mov
push
fs
mov
jle
pop
mov
scas
mov
mov
out
movsb
jnp
in
adc
jg
scas
shl
jo
xchg
push
push
sahf
pop
xchg
js
shrl
imul
fidivrl
fwait
mov
lret
mov
sbb
lret
int3
mov
mul
push
add
popf
cmpl
lods
addr16
dec
in
rcl
jge
push
cmp
sub
pop
imul
pop
mov
xchg
in
int
xor
movsl
movsl
mov
aam
push
imul
mov
out
mov
imul
pop
inc
mov
lret
out
mov
lret
inc
loope
pop
lret
jb
push
ljmp
push
daa
xor
pushf
out
imul
inc
stos
adc
les
ret
sub
pop
or
push
add
xchg
add
stos
scas
pop
push
les
movsl
add
cmp
mov
sub
cld
sbb
mov
sbb
jns
loop
mov
push
xchg
repnz
dec
lds
push
leave
push
dec
adc
push
xchg
push
push
dec
out
out
xorb
mov
jbe
add
sarb
mov
jbe
jge
cmp
mov
stc
lcall
cld
sbb
jb
mov
mov
int
cmpsl
or
stos
mov
fwait
dec
mov
es
scas
stc
adc
adc
lret
push
sahf
xor
cmc
adc
mov
cmp
neg
dec
and
push
cs
mov
push
adc
cmp
insl
lret
pop
cli
ja
mov
mov
push
std
and
les
cs
adc
pop
out
mov
jle
test
mov
sub
push
pop
cli
and
stos
in
jecxz
ljmp
cmpsb
pop
mov
adc
lcall
mov
mov
stos
loop
inc
aad
dec
ds
out
xchg
sub
cmp
test
jg
pop
push
inc
jle
shrb
jge
lods
jnp
sub
ljmp
rolb
scas
jecxz
mov
xchg
or
jmp
stos
cmp
mov
mov
mov
push
dec
or
cld
adc
lods
push
mov
cwtl
mov
fcoml
ds
lahf
in
mov
ret
mov
cmpsl
push
sti
and
add
mov
lcall
cli
cmc
out
xor
mov
mov
pop
loop
stos
pop
sub
push
push
je
push
lods
sbb
pop
aam
xchg
mov
and
pop
aad
aam
add
iret
push
das
data16
or
and
testb
add
pop
movsl
ficomps
push
cs
push
push
mov
lret
sbb
dec
clc
adc
mov
das
dec
push
xchg
jg
mov
push
pop
subl
lock
pop
scas
lret
cmpsl
push
gs
pop
cld
es
fdivr
dec
mov
mov
pop
pop
jmp
mov
aad
xlat
test
jmp
adc
imul
hlt
pop
stc
cmp
popa
xor
outsl
cld
ds
ret
add
adc
aad
xchg
jnp
mov
and
or
lods
inc
cmpsb
add
jle
std
cmpsl
push
faddl
int
lret
sub
pop
ljmp
push
inc
mov
in
out
iret
push
sub
sub
push
mov
mov
shll
push
add
mov
adc
xchg
sub
mov
sub
push
in
leave
pop
add
pop
cmpb
and
pop
ds
outsb
movsl
movsb
les
test
inc
js
mov
fbstp
inc
stos
sbb
mov
insl
or
lahf
inc
mov
mov
push
mov
mov
inc
bound
push
add
fs
mov
shrl
push
jmp
gs
out
pop
scas
sub
mov
cli
inc
cmpsl
xlat
adc
mov
cltd
lret
jnp
push
pop
push
push
stos
add
imull
mov
addb
jge
movsl
ss
sub
ljmp
daa
or
data16
dec
mov
daa
cmp
pop
addr16
mov
stos
jge
aas
push
scas
imul
mov
ss
dec
xchg
inc
fistpl
dec
rolb
inc
sahf
or
add
push
int
gs
add
adc
mov
sub
rolb
adcb
cmpsb
sub
sub
mov
rcrb
daa
mov
dec
and
mov
add
imul
js
dec
gs
scas
add
stos
std
sub
std
push
pop
pop
mov
dec
lds
decb
dec
xchg
test
fwait
push
enter
insb
add
into
in
push
test
pop
mov
add
push
dec
fwait
ret
scas
cmp
add
sub
shrl
mov
jo
aam
xor
pop
test
push
mov
dec
fildl
xor
and
inc
test
dec
xor
call
imul
lahf
jo
xchg
in
fdivl
or
xchg
imul
pop
mov
and
popa
add
stc
outsb
add
xchg
push
add
xor
cmc
addb
xorl
jle
sub
loope
lock
fdivs
and
mov
pop
xchg
rorl
dec
xchg
xchg
pop
push
insl
lds
xchg
in
rcll
test
imull
sarb
mov
xlat
dec
jne
xchg
fsubrl
movsl
dec
jbe
mov
in
cmp
nop
faddl
enter
add
push
cmp
outsb
push
mov
cmp
stos
cmc
aas
mov
xchg
out
push
xor
jge
push
loope
cli
aas
mov
push
xchg
iret
insl
std
or
cli
or
pop
cmpsl
fistl
push
lcall
jl
inc
add
test
add
push
dec
sub
ss
loopne
scas
into
movsl
xor
pushw
es
ds
mov
scas
shlb
inc
pop
sub
mov
push
xchg
cmc
outsb
xor
mov
fstpt
jp
sub
mov
mov
push
mov
test
dec
inc
and
mov
push
mov
hlt
test
xchg
repnz
ss
lcall
dec
push
mov
sti
dec
wbinvd
stos
shl
push
mov
pop
adc
repz
mov
sbb
lea
faddl
popf
lret
jbe
icebp
sub
cli
cmc
data16
push
jecxz
pop
cmpsb
jne
ret
mov
xlat
loopne
adc
jae
movsb
aad
cli
add
lret
xor
leave
sub
add
sbb
cmp
ss
mov
test
inc
xchg
adc
mov
bound
lcall
stos
int
xchg
ljmp
leave
das
ja
mov
cs
push
movsl
push
std
daa
sbb
ja
add
ds
fldenv
push
add
jbe
cli
add
insl
sarl
mov
adc
inc
xor
adc
xchg
mov
mov
int3
sub
hlt
adc
jp
iret
mov
xor
or
sbb
mov
mov
stos
jg
pop
sub
mov
scas
sbb
cli
xchg
add
test
cmp
dec
xor
icebp
pop
add
enter
push
jl
push
iret
adc
push
cwtl
mov
adc
inc
pop
adc
dec
and
mov
pop
icebp
or
out
or
ret
xor
aad
dec
subb
stos
push
mov
arpl
mov
lret
js
pop
push
pop
push
xlat
mov
outsb
mov
subb
sti
movsl
add
shrl
add
mov
sbb
leave
icebp
popl
addb
xchg
xor
adc
jae
inc
mov
jp
or
rcrb
jecxz
xchg
sbb
push
inc
not
in
inc
add
xchg
pop
cmp
test
test
mov
movsl
fmul
sub
sub
push
pop
cmp
add
cmp
push
andl
scas
shll
mov
mov
shl
in
sti
pop
add
cmp
lcall
popl
addb
aas
cld
enter
repnz
adc
jmp
sbb
or
stos
xor
jge
cmp
sub
add
inc
dec
mov
lahf
test
sbb
addr16
gs
lea
imul
push
add
fidivrl
daa
or
cmp
jcxz
add
lods
mov
mov
push
call
cmp
push
push
inc
cmp
aas
ret
jg
sub
lret
in
flds
jmp
xor
sub
data16
les
aad
aas
dec
push
test
lret
jecxz
imul
cli
pop
push
add
xchg
xorl
add
push
pushw
mov
in
idiv
add
incb
mov
xchg
xchg
pushf
adc
inc
add
or
rcrb
push
je
movsl
repz
jns
xor
mov
fisubs
dec
mov
jbe
fidivs
pop
or
pop
data16
inc
cmp
push
inc
xchg
mov
aas
mov
jns
sbb
hlt
mov
cmp
dec
popf
jo
fs
add
pop
xor
jmp
add
pop
call
add
clc
push
std
add
cmp
push
ja
xor
pop
add
inc
add
arpl
iret
mov
and
int
cltd
xchg
xor
fldl
mov
xor
in
int
mov
push
popf
mov
jge
adc
add
jo
push
adc
fs
add
mov
cmpsl
add
mov
in
cli
std
mov
dec
xchg
pop
mov
icebp
popl
jl
aam
lock
cmp
xchg
rcl
sbb
mov
pushw
inc
push
movsb
aad
repnz
lock
js
fisttpll
jecxz
pop
inc
sbb
rol
push
push
subl
push
iret
push
testl
hlt
nop
cmp
add
shr
inc
cld
jp
scas
lret
dec
xor
mov
xchg
aam
pop
int
ret
push
movsb
push
aam
cwtl
rcl
cmpsl
sub
fst
test
add
jle
fsubrp
xchg
daa
test
les
inc
popa
pop
mov
jp
mov
fildll
push
sub
leave
js
imul
idivl
mov
stos
cmp
mov
xchg
or
push
cs
jmp
mov
daa
push
push
decb
dec
xchg
mov
cmp
push
in
inc
or
mov
jl
ljmp
lods
and
stc
sub
incb
cmc
lods
push
lret
cltd
mov
xchg
ljmp
inc
mov
std
push
sbb
push
and
aam
mov
cmp
into
stos
cmp
mov
pushl
push
add
mov
cli
scas
aas
lock
out
adc
hlt
pop
lea
stc
cltd
push
push
adc
scas
das
aam
jge
mov
loopne
mov
cmp
mov
push
add
mov
scas
add
or
sub
int
imul
cwtl
sbb
add
mov
lock
add
in
loop
pop
aas
cmpb
sbb
sub
fisubrs
push
scas
int
mov
sar
scas
mov
jb
push
cmc
shll
add
ret
pushf
mov
mov
xorb
jns
aad
pop
sahf
cmp
cli
mov
in
shrb
aas
mov
rcll
push
das
cmc
or
xchg
push
pusha
aam
mov
xlat
in
aas
xchg
dec
mov
and
mov
and
inc
inc
jle
subb
push
push
xchg
jle
dec
xlat
sbb
je
test
push
inc
xchg
inc
fdiv
lcall
mov
xchg
cmc
dec
jns
and
fnsave
div
or
dec
pusha
push
ja
std
and
pop
mov
adc
cmpsb
xor
adc
mull
jo
mov
call
fists
loopne
jmp
ds
lret
pop
push
aam
jne
std
push
cmp
jae
ss
mov
pop
add
push
cli
repz
dec
psubw
dec
jne
imul
jns
and
mov
ret
aam
dec
loop
push
or
pop
imul
testb
inc
inc
outsb
int3
jne
into
add
cmp
jae
pop
cmpsb
psubd
in
movsb
stos
add
imul
mov
mov
es
flds
inc
stos
das
out
jne
xchg
imul
add
out
imul
pop
sti
inc
add
push
inc
popf
mov
das
dec
push
fwait
movntq
loopne
push
jecxz
xor
add
jge
push
cltd
jmp
imul
in
leave
and
pop
inc
fwait
add
push
add
fstpl
cmpsb
add
add
add
jo
push
add
stos
jno
jge
xor
add
mov
in
stos
add
mov
fsts
sbb
je
sub
jmp
push
jg
sbb
jecxz
mov
fwait
xor
fiaddl
stos
jno
lcall
lds
jne
arpl
inc
pushf
fldcw
outsb
dec
jge
out
dec
test
inc
ffreep
push
pop
pop
xchg
jle
inc
rcrl
push
jmp
jno
mov
xchg
jp
mov
in
adc
imul
add
mov
imul
int
sub
pop
daa
jne
ss
add
mov
xchg
dec
loope
rolb
or
jno
lds
insl
pop
jnp
in
aaa
mov
call
mov
adc
and
inc
fabs
sub
fmull
add
xor
jp
jmp
pop
or
gs
std
and
int
adc
pop
dec
in
pop
out
xchg
das
push
sub
cmp
add
push
inc
add
pop
add
enter
fiaddl
loope
out
in
adc
push
mov
je
cld
inc
lcall
push
jmp
add
call
jno
in
sub
push
push
jge
nop
add
and
inc
push
cmpsl
or
loop
ja
aaa
jmp
lods
mov
mov
add
mov
popf
mov
pop
std
and
andb
scas
jg
pop
push
pop
xchg
xlat
stos
adc
jecxz
mov
pop
sub
mov
pop
mov
adc
and
inc
fisubl
pop
sti
and
in
xor
out
std
outsb
int
add
cmpsb
pop
mov
pop
mov
notb
push
jne
cmp
mov
sub
pusha
mov
es
movsl
fcomps
or
shlb
lods
inc
and
xchg
jp
jno
or
shl
nop
add
pop
je
call
imul
lret
add
xchg
sti
cmp
out
ds
cmc
mov
xchg
mov
icebp
dec
jl
dec
jns
cmp
pop
outsb
xor
add
popf
mov
dec
iret
add
xlat
sbb
sbb
lret
dec
and
pop
pop
push
pop
movsb
test
mov
push
push
xor
test
ljmp
gs
test
test
push
push
xchg
push
xor
icebp
or
hlt
pop
push
push
ret
add
sbbl
dec
mov
ffree
push
pop
out
mov
cmc
jmp
mov
fistpl
push
push
xchg
loope
cmp
dec
xor
xor
pop
mov
stos
add
push
push
fwait
mov
cmp
xor
mov
mov
jo
mov
push
stos
pop
push
mov
add
inc
and
sub
push
add
mov
push
push
scas
dec
jns
cmpsl
lea
xchg
das
cmp
mov
cs
jns
pop
aaa
inc
pop
aad
and
xor
xchg
sub
cmpsl
sbb
lret
loop
pop
mov
inc
dec
adc
pop
scas
push
cwtl
mov
fiaddl
push
aad
jg
popf
imul
jb
jnp
fisttpll
fildll
jno
lods
je
push
or
mov
ja
movsl
xor
jle
mov
mov
movsb
and
out
xor
ljmp
cmp
cs
vpsllw
gs
cmp
sbb
or
inc
xchg
imul
inc
add
xchg
loope
outsb
pop
movsl
int
push
jg
mov
mov
ja
add
mov
mov
pop
dec
pop
rclb
loope
outsb
lods
push
adc
jbe
jge
jmp
enter
inc
xchg
pop
add
pop
test
cmp
cs
add
not
out
outsl
and
mov
stos
int
jl
xor
push
dec
shll
pop
add
imul
ja
and
mov
push
subl
add
imul
jg
push
pop
add
out
mov
cmp
scas
rolb
out
jmp
jg
test
loopne
mov
pop
out
sub
movsl
aam
xlat
imul
push
add
adc
jle
fisttpll
inc
jns
fmuls
pop
xchg
inc
dec
aad
push
popl
xlat
jns
daa
sbb
out
nop
add
xchg
dec
xchg
incb
dec
out
hlt
mov
addr16
push
push
sti
out
pop
cld
pop
mov
cmp
clc
pop
movsl
scas
shrl
iret
push
mov
inc
add
lods
push
lds
add
mov
pop
cld
int
add
sub
lret
mov
scas
std
mov
movsl
add
out
lcall
sbb
pop
jno
xlat
sub
add
std
std
sub
push
push
ror
imul
stos
das
mov
call
push
lcall
and
adc
pop
jae
imul
sub
mov
mov
out
std
aas
push
mov
xchg
stos
adc
mov
dec
loop
jno
popf
jl
js
popf
or
jne
push
popl
cmc
jb
mov
sub
cltd
test
mov
mov
enter
stos
data16
add
cmc
sar
sub
jns
cmpsl
je
data16
inc
lods
jge
in
cmp
scas
jle
roll
mov
pop
dec
iret
ds
loope
xor
rcl
mov
dec
les
xor
sahf
or
push
call
pop
add
cmpsb
add
enter
loope
into
test
jp
jno
xchg
add
mov
or
jle
imul
xchg
movl
in
mov
popf
jg
mov
add
dec
testl
out
aam
add
out
jne,pt
dec
add
icebp
pop
cmp
lret
mov
mov
push
sarb
ljmp
mov
mov
fiaddl
cmp
jae
mov
jg
ljmp
pop
or
sbb
outsb
loope
addr16
or
std
outsb
ret
enter
jne
sbb
clc
inc
pushf
fincstp
lods
push
jae
add
aad
jo
push
add
push
out
and
popf
aam
pop
lahf
jbe
dec
iret
fnstcw
mov
pop
mov
sub
lods
adc
loop
lock
inc
iret
sbb
enter
aad
idiv
sbb
aas
add
imul
cmpsl
nop
add
inc
lret
xorb
loop
int
repz
aas
push
test
movsb
loope
bound
xlat
mov
scas
adc
xchg
enter
fnstsw
add
pop
call
out
xor
add
add
push
lret
inc
imul
rolb
loope
int
and
inc
mov
scas
jbe
push
rolb
xor
out
mov
push
sbb
mov
and
pushf
fsubrl
mov
lahf
cld
inc
dec
mull
and
mov
cli
mov
mov
pop
clc
inc
imul
sub
inc
hlt
mov
pop
jo
mov
fs
jno
mov
fwait
pop
insl
adc
xor
push
lcall
fldenv
data16
xchg
lds
mov
adc
mov
xchg
dec
stos
and
call
in
out
sub
inc
mov
xchg
lcall
nop
add
inc
lahf
js
pop
outsb
movsl
call
lods
fistpll
fs
add
aam
fnstsw
pop
mov
xchg
jp
addr16
sbb
push
add
push
ljmp
mov
sub
es
mov
mov
test
xchg
push
loope
das
push
les
xchg
and
or
mov
pop
icebp
push
and
push
lods
add
push
add
push
stos
add
push
into
pushf
in
jo
mov
fs
popf
nop
add
ljmp
outsl
les
mov
mov
adc
xor
add
adc
sub
xor
add
mov
fs
inc
or
jne
jno
ret
cmp
add
std
mov
bound
or
lcall
and
add
std
fs
pop
mov
nop
jns
jge
cld
sub
cmpsl
aad
sbb
mov
add
pushf
fbld
loop
clc
dec
push
inc
add
push
add
test
xchg
sarl
pop
sub
stos
in
dec
xor
push
std
sub
cmp
dec
push
fsin
mov
push
add
incb
or
inc
bound
imul
mov
or
ss
push
dec
insl
popa
addr16
test
xor
dec
sbb
je
add
push
outsl
jo
add
push
push
dec
gs
addr16
jnp
or
inc
jne
outsl
push
inc
jp
or
mov
sbb
push
or
add
pop
push
inc
imul
sbb
xor
or
sub
gs
sbb
inc
adc
mov
mov
mull
dec
lock
test
xchg
cld
popl
jle
pop
push
lea
push
pop
clc
jle
push
pop
jne
sahf
scas
mov
or
mov
movsb
iret
outsb
add
aad
mov
test
mov
test
mov
xchg
scas
int
scas
add
add
mov
mov
add
add
mov
push
lds
sub
imulb
add
mov
mov
aas
add
xor
push
cltd
xchg
dec
mov
jne
add
or
imul
add
mov
mov
mov
iret
push
cmp
scas
adc
add
test
add
and
je
and
stos
add
add
mov
cmpsb
mov
cwtl
adcl
pushf
movsb
add
loop
mov
dec
mov
inc
add
xchg
push
and
cmpsb
add
ss
enter
mov
pop
lcall
push
pop
jnp
push
mov
icebp
mov
call
jnp
bound
in
imul
jmp
add
add
adc
js
xchg
adc
push
movsl
xchg
in
xchg
or
jno
imul
sbb
xchg
jae
cmpsl
mov
imul
mov
fcmovnu
push
lods
pop
cmp
inc
lahf
cmp
pop
dec
repz
inc
add
jl
inc
insl
dec
pop
bound
mov
adc
inc
xchg
jge
int
jb
mov
add
out
lock
mov
jno
mov
arpl
stos
sub
xchg
shll
push
stos
add
lods
insl
sarb
in
sub
jo
add
loopne
add
jo
pushf
add
movsb
xchg
xchg
jns
cmp
pop
outsb
mov
loop
rcrl
inc
test
lahf
pop
push
add
int3
or
lods
and
lea
stos
inc
push
inc
or
dec
xor
jno
dec
pop
push
push
jecxz
out
mov
leave
int
imul
das
test
sbb
mov
gs
bound
xchg
leave
pop
out
jnp
dec
push
imul
lea
add
xchg
cmc
icebp
xchg
outsl
cltd
into
add
add
in
movsb
imul
sub
lock
sbb
xchg
ret
push
lcall
ds
test
jbe
or
inc
insb
insl
scas
icebp
jbe
xchg
das
xchg
dec
sub
arpl
xchg
movsb
pushf
xchg
sub
lret
aad
cmpxchg
add
ljmp
lds
mov
cltd
outsb
cmpsl
cmp
pop
push
xchg
arpl
jne
repz
cmpsl
cmp
gs
inc
mov
push
push
testb
pop
rclb
add
push
repz
lcall
hlt
jb
mov
mov
mov
fimull
loopne
out
push
bound
test
add
adc
xor
sub
and
filds
jge
mov
fwait
insl
daa
scas
mov
mov
push
movsl
push
stos
test
in
or
push
dec
aas
pop
pusha
and
insl
pop
cmp
fildl
dec
outsb
mov
fsubl
fwait
add
gs
bound
sbb
lret
xor
sahf
pop
mov
gs
and
out
xchg
mov
mov
int
adc
aad
icebp
sub
sub
les
lock
jno
xlat
orb
ret
adc
sbb
cmp
mov
add
lods
mov
xchg
mov
cmp
loopne
push
jle
gs
stos
adcb
int3
ljmp
imul
xor
jp
mov
push
out
mov
notl
xchg
fisubrs
dec
push
pop
jne
mov
lret
mov
bound
mov
ds
push
add
jl
dec
int
xor
jp
and
in
xchg
rcll
outsb
xchg
imul
test
mov
repz
out
inc
jno
or
sub
adc
push
mov
mov
pop
or
mov
int3
movsb
sbb
jno
addr16
les
lcall
pop
push
cmp
xchg
bound
fisubrl
stc
testb
jge
in
test
stc
xor
add
bound
iret
pop
mov
out
mov
fs
enter
fsubs
loope
out
lret
fiadds
xchg
imul
stos
or
jb
mov
jmp
stc
push
sbb
mov
push
jge
jecxz
xor
mov
bound
roll
lods
bound
push
outsb
sbb
and
jnp
jg
adcl
popa
jnp
add
xchg
pop
les
stc
outsl
ja
lds
imul
pop
imul
cmpsl
push
mov
lods
xchg
sahf
jl
mov
sub
jmp
jns
gs
inc
int3
fildll
push
sub
push
dec
iret
lods
xor
add
add
adc
call
imul
adc
test
pop
addr16
cmpsb
mov
mov
push
popf
sub
addb
js
sahf
les
shl
fstps
mov
fsts
fidivrl
in
push
pop
sbb
adc
xchg
test
shlb
dec
fcomip
pop
fsubl
shrl
jno
jmp
push
add
sub
pop
fs
xchg
stos
xor
mov
scas
pop
outsb
cmc
repnz
xchg
gs
aam
push
inc
stos
pop
outsb
lods
ficoms
stc
xchg
xchg
mov
cmp
mov
shrl
adc
jae
adc
stc
cmp
jmp
jg
push
xchg
dec
ficoml
cmc
mov
xchg
test
mov
arpl
notb
xchg
shr
adc
test
sbb
add
add
pop
jno
pop
push
gs
stc
cltd
mov
add
add
add
pop
gs
or
sarl
popa
inc
mov
outsb
push
mov
mov
add
fstps
repz
sub
push
stos
lds
fcomps
repz
pop
imul
cmp
adc
gs
pop
jnp
repz
dec
das
imul
dec
pop
roll
div
xchg
push
arpl
jl
iret
cmp
gs
mov
pop
pop
mov
dec
popa
and
fisttpll
pop
jmp
pop
mov
and
pop
add
in
sbb
add
mov
fs
add
in
pop
icebp
arpl
arpl
dec
in
and
mov
sbb
jno
dec
jp
mov
in
xchg
lods
adc
cmc
test
scas
push
sub
mov
or
push
scas
mov
sub
in
add
fisubrs
dec
ficoml
repz
cmp
testl
jecxz
mov
pop
cmp
ljmp
cmpsl
out
lahf
pop
cmp
xor
mov
sub
fsubrl
pop
into
lds
xchg
jne
lea
inc
push
mov
sbb
mov
movsl
fstps
clc
stos
mov
lock
imul
out
inc
imul
loop
gs
pushf
lahf
gs
cmp
repnz
les
mov
mov
sub
lret
rcl
jecxz
aas
cmp
push
jmp
and
add
xchg
stos
xor
idivb
js
lret
gs
add
push
fbld
add
xchg
or
int3
cmpsl
fwait
jnp
imull
sub
inc
inc
mov
in
sub
ja
jns
jne
or
sub
mov
mov
imul
cs
out
mov
xchg
outsl
xor
cmpsb
adc
cmpsl
loop
testb
gs
sub
push
jp
pop
aas
imul
cmp
sbb
and
lcall
sbb
push
jle
dec
push
dec
call
int
add
mov
pop
mov
or
daa
push
adc
notl
lahf
fnstenv
sbb
inc
cmp
into
push
sbb
xchg
pushf
lods
les
stos
jo
fcomps
cmpsl
add
sahf
ds
lds
jno
or
mov
sub
shl
xchg
xchg
fs
jp
pop
into
push
sub
lahf
stos
lock
test
pop
mov
ds
and
mov
popa
les
stos
out
pop
and
cmc
add
and
jno
pop
cmp
and
inc
adc
stos
sub
outsb
cmc
call
movsl
fstps
negl
push
jae
fcmove
gs
jle
pop
push
cmp
push
popa
lods
fstpl
scas
sti
pop
cmp
notl
test
gs
cmp
dec
imul
pop
jge
out
sub
bound
jle
in
pop
inc
add
fimull
cmp
hlt
popa
and
cltd
jmp
in
stos
xor
add
push
jge
jp
mov
stos
xor
pop
imul
mov
fldpi
in
jmp
push
gs
shll
stc
loopne,pn
pushf
push
mov
jns
je
push
scas
jge
pop
gs
jae
sti
lahf
dec
mov
shll
jle
jns
pop
mov
jecxz
sub
sub
and
xor
inc
cwtl
pushf
push
int
mov
jnp
xchg
jle
imul
cmpsb
popf
sub
daa
pop
leave
dec
push
cmpsb
mov
vpackssdw
imul
imul
pop
imul
jmp
mov
dec
push
shll
ljmp
enter
jae
daa
xchg
xchg
mov
imul
xchg
outsl
mov
mov
enter
push
bound
cvtpi2ps
jmp
in
dec
sti
and
jecxz
inc
add
or
aam
lea
push
les
outsb
dec
test
movsb
mov
adc
jns
mov
aad
pop
pop
xchg
mov
ficoml
sti
and
gs
cld
dec
loope
das
aas
mov
pop
mov
imul
shll
pusha
jp
bound
xchg
mov
lahf
mov
and
gs
divb
xchg
pop
sub
xchg
sub
dec
adc
rcrl
add
push
push
xor
sbb
or
push
cmc
fisubrs
push
push
mov
pop
pop
aad
dec
inc
aad
imul
jb
lods
fidivrs
jb
adc
push
pop
and
cmpsl
pop
test
sti
clc
cld
stc
ficomps
cmp
leave
cmp
in
xlat
stos
push
loope
push
xchg
pop
out
lods
cs
loope
cs
sub
ljmp
mov
pop
gs
gs
sub
test
cs
jns
int3
add
movsl
insl
mov
stc
test
xor
xlat
fnsave
pop
add
pop
jge
aam
imul
aam
das
mov
add
sub
rcrb
fcoml
and
lods
ret
lret
in
imul
mov
daa
out
dec
pop
jno
pop
movsl
push
repz
pop
lret
shll
push
mov
pusha
mov
jns
in
int
aas
cmp
dec
mov
sub
dec
pop
gs
daa
push
pushf
les
int3
flds
int
and
mov
ja
imul
mov
push
mov
loop
pop
push
mov
xchg
add
nop
mov
fdivl
xchg
imull
gs
ds
jns
bound
mov
and
push
dec
lds
lahf
pop
sbb
jge
dec
xchg
outsb
jo
lods
ss
jge
das
push
push
xor
mov
in
imul
push
iret
daa
pop
les
in
add
inc
into
imul
add
sub
movsl
add
jp
shlb
push
sub
cmpsl
or
pop
mov
sbb
imul
pushf
push
pop
mov
pop
aad
pop
push
sbb
insb
repnz
and
leave
mov
out
cli
inc
ljmp
push
fdivp
lds
rcrb
push
jge
sti
xor
sahf
int
xchg
sub
cli
cmp
cs
sub
pop
pop
lods
aas
cmp
cmpsl
add
in
sub
jbe
iret
add
adc
aam
cld
incl
ds
and
mov
stos
xlat
fistpl
imulb
je
inc
roll
mov
add
lahf
mov
push
and
push
mov
test
movsb
and
imul
ds
les
cmp
mov
lret
out
mov
inc
lahf
sbb
sub
movsl
in
iret
push
mov
shl
xchg
repz
xchg
fwait
lret
lret
cs
repnz
cmpsl
push
xchg
cmp
push
ret
bound
add
sbb
daa
or
gs
jge
in
lret
das
mov
sub
pop
lods
inc
or
shll
fcomps
lds
jo
test
hlt
jmp
ret
mov
xor
ror
sub
ds
and
idiv
inc
std
sub
stc
cmp
or
sub
adc
pop
ret
cmp
xchg
outsb
leave
out
push
lcall
lds
xor
rcll
or
outsl
mov
gs
sub
mov
sub
add
inc
add
mov
jns
mov
int
cld
lods
data16
pop
mov
dec
mov
mov
mov
inc
cli
jg
add
cmpsl
jno
lods
insb
outsb
xchg
into
lcall
in
imul
dec
imul
xchg
imul
repnz
iret
repz
lods
outsl
popf
enter
sub
jno
push
pop
xchg
sarb
imul
out
lret
add
out
repnz
sbb
repz
iret
sub
rolb
data16
shrb
push
int3
imul
mov
test
std
push
adc
push
out
rclb
shlb
iret
mov
mov
imul
jmp
push
dec
add
lds
lcall
movsl
in
ja
mov
dec
shrb
int
popf
xor
jp
fs
mov
jecxz
movsl
repz
popa
leave
iret
xor
loope
bound
pop
push
dec
jle
and
test
out
in
cmp
push
int3
cmp
out
in
rorb
dec
fadds
adc
js
add
xchg
adc
add
rolb
out
iret
scas
dec
fisubrs
xor
lcall
hlt
hlt
sbb
push
clc
sbb
ds
mull
adc
pop
mov
push
shrl
pop
mov
add
lahf
rcrl
inc
and
jge
mov
sub
push
cld
xchg
aas
gs
mov
mov
xchg
cmpsb
sub
and
mov
gs
add
dec
xor
pop
iret
rcl
cmpsl
add
int
sub
add
cmp
iret
jno
aam
imul
flds
mov
and
mov
xlat
or
fsubl
inc
subb
inc
cmpsl
pop
test
insl
repnz
jae
pop
jae
stc
cli
push
push
das
sahf
mov
sbb
sahf
add
xchg
lcall
mov
sub
xchg
lret
test
shr
aas
stc
pop
repz
xlat
mov
in
xor
mov
push
out
push
push
test
xchg
bound
int
mov
cltd
mov
jecxz
dec
lock
sub
clc
mov
js
outsb
pushf
outsb
push
mov
xor
shrb
imul
jmp
movsb
stos
jge
gs
jbe
imul
sub
pusha
repnz
cmp
leave
sub
push
adc
sbb
pop
jmp
mov
faddl
fiaddl
nop
add
mov
nop
xchg
push
out
pop
push
cmp
cld
mov
insb
frstor
mov
fcmovu
cmp
mov
add
lret
xor
mov
cltd
mov
shrb
frstor
int3
jmp
addr16
pushl
jnp
imul
mov
pop
leave
shl
mov
jmp
push
idivb
pop
cmp
lods
jl
ss
add
int
call
mov
lds
add
cmp
in
js
dec
in
pop
rcr
inc
test
loopne
mov
fsts
loop
cmpsl
icebp
sub
stos
bound
jo
push
mov
add
inc
sub
xor
sar
jns
nop
add
push
mov
jle
and
int
mov
mov
mov
mov
int3
mov
inc
sarb
sbb
add
popf
xor
jmp
shrb
mov
jne
cs
int
xchg
pop
or
mov
cmpsb
rcl
xchg
rorl
xchg
ljmp
shl
xchg
hlt
cld
repz
jecxz
inc
add
lds
or
add
scas
int
stc
add
xor
adc
push
push
inc
adc
add
imul
xchg
data16
sahf
movsl
imul
inc
pop
lret
sarl
pop
xchg
push
je
xchg
jp
or
push
push
cmpsl
pop
lret
xchg
sub
mov
jecxz
out
in
fs
adc
cmp
cmp
jg
mov
and
mov
xchg
stos
pushf
push
push
ficomps
inc
daa
imul
push
mov
and
int
mov
shr
movsb
mov
xchg
addr16
imul
xchg
ljmp
xchg
pop
pop
dec
jb
leave
mov
cmp
sub
add
add
shrb
xor
cmp
dec
aas
mov
jecxz
mov
mov
mov
in
movsl
inc
cmp
jbe
das
mov
sub
addb
cld
jns
shrb
inc
and
je
push
lods
jno
cli
testl
repz
shll
ja
jnp
imul
ljmp
xor
adc
dec
mov
cmp
inc
mov
lahf
aaa
call
out
push
push
aam
lock
pop
dec
clc
jbe
imul
pop
std
jmp
mov
xchg
lahf
sar
xlat
sti
insl
xor
xor
imul
mov
nop
inc
scas
scas
xchg
push
cmpsl
addr16
sub
hlt
daa
out
dec
rcll
mov
pop
lock
jp
xchg
jns
pop
add
popf
lods
add
jmp
inc
pushf
lret
cli
je
add
push
or
xlat
mov
ss
ja
faddp
dec
lret
shrb
pushf
push
jne
ret
test
add
in
mov
mov
sub
pop
imul
iret
mov
mov
bound
jno
lcall
iret
lahf
ret
insb
sbb
add
pop
cld
es
stos
popf
daa
or
outsl
data16
and
repz
imul
mov
movsb
cmp
add
fbld
jle
jbe
roll
dec
pop
xchg
xor
shlb
ja
pop
pushf
int
lods
jno
jmp
pop
push
hlt
popa
pop
jae
xchg
int
cmpsl
adc
xchg
cltd
xchg
fsts
fimull
jl
imul
pop
imul
loope
notl
mov
add
fldln2
outsl
lcall
not
dec
mov
iret
pushf
icebp
iret
or
sub
clc
in
cmp
pop
out
fsubl
and
fcomps
add
cld
in
imul
jp
shrb
cwtl
add
and
adc
decb
jg
mov
xor
sbb
faddl
aas
mov
xchg
xchg
std
add
and
pop
out
repz
pop
scas
leave
js
sub
pop
sbb
xchg
add
sub
xchg
pop
xor
cmc
icebp
movsb
or
pop
data16
inc
mov
fmul
inc
jb
mov
mov
lcall
popf
mov
xor
cmc
popf
call
mov
stc
pop
cmpsl
cmp
int
mov
lcall
add
or
push
inc
jg
push
mov
mov
stc
cmp
movsb
loope
ds
add
dec
cmp
stos
dec
cmp
out
mov
fcmovnbe
mov
stc
hlt
loop
popf
gs
dec
jb
inc
ss
aad
jno
sbb
fxch
outsb
cmpsl
cld
jae
popf
push
lods
fisubrl
stos
push
mov
sub
sub
shl
icebp
fstl
nop
pop
sahf
dec
insb
dec
mov
mov
lret
xchg
sbb
cs
aas
fcomps
ds
stos
mov
jno
push
sbb
pop
inc
dec
mov
cmpsb
dec
adc
loope
pop
jnp
out
jmp
cmpsl
imul
lret
cld
cwtl
hlt
jecxz
mov
jb
mov
movsl
fldcw
jb
int
fnstcw
ficoml
sub
mov
xlat
xor
mov
mov
repnz
push
add
add
sbb
in
loope
cli
loop
dec
out
mov
push
shll
mov
push
add
adc
push
fisttpl
repnz
push
push
jp
jl
fisttpl
sarl
mov
adcb
xchg
andl
push
loop
dec
pop
push
push
into
pop
fildl
sub
jp
call
popa
mov
movsb
out
fisubs
jbe
cmpsl
or
lcall
iret
mov
jns
pop
lods
sub
gs
lret
add
fstl
pop
push
je
pop
mov
cs
mov
pop
push
mov
gs
inc
outsl
mov
jae
inc
popf
loope
lret
jno
push
outsl
lods
cmp
mov
cmp
jne
push
jns
aas
mov
jne
push
ja
xchg
scas
inc
addr16
addr16
adc
repz
flds
fldl
mov
or
std
lcall
dec
jmp
leave
data16
lods
cld
inc
sti
in
cmp
in
sub
lods
sbb
push
pop
mov
sahf
inc
push
dec
adc
dec
lods
outsb
cmc
in
ss
and
cmp
fistps
pop
inc
cmpsl
cmpsl
adc
aam
repnz
mov
pop
sarb
dec
mov
imul
test
int3
shr
push
xor
lret
mov
test
push
roll
test
aad
call
idiv
dec
cmp
loopne
loope
and
stos
je
out
stc
xchg
stos
pop
lcall
xchg
ljmp
jo
mov
mov
lcall
cmpsl
push
int
or
inc
dec
and
xchg
mov
lea
enter
mov
mov
int
test
mov
push
pushf
popf
popf
pop
cmp
les
or
add
add
sub
pop
push
jno
jmp
fists
leave
pop
adc
cmp
pop
push
add
les
out
jp
dec
ret
jl
jge
xchg
sub
xor
pop
cmpsb
jp
jl
lret
outsl
iret
cmc
shl
cmpsb
mov
jne
sbbb
nop
ja
mov
testb
inc
fldenv
dec
shll
fucomp
mov
cmpsl
loope
push
nop
add
cmp
pushf
int
lret
jecxz
push
lods
add
xchg
mov
mov
mov
push
push
adc
sarb
sub
popf
dec
push
movsb
lret
push
ss
push
add
fistps
shll
insl
xor
sahf
xor
int3
imul
outsb
xchg
dec
fsubrs
cltd
movsl
ja
outsb
sub
mov
inc
dec
jp
dec
sub
cld
pop
call
mov
dec
mov
dec
mov
push
xor
scas
ret
imul
fidivrl
dec
cmpsl
or
sarl
cmp
mov
jecxz
pop
add
scas
sub
out
das
out
lret
cli
jne
cmp
movsb
jecxz
jae
mov
lcall
call
fwait
xor
ljmp
cmp
imul
adc
stc
dec
add
lea
lret
pop
sub
jns
leave
out
dec
decb
lret
jmp
pop
jne
idivl
mov
ficompl
popf
repz
mov
gs
call
add
test
in
jns
jg
cwtl
dec
lret
jecxz
insl
add
lahf
mov
aam
sbb
popf
sbb
add
hlt
sub
xor
imul
add
or
shr
mov
lock
jnp
jl
pop
in
cmp
in
cmp
dec
adc
and
clc
cmc
in
cmpsb
mov
jl
icebp
mov
stos
mov
shl
mov
scas
loop
rorl
sbb
bnd
out
pop
jecxz
xor
jo
stos
add
je
inc
aad
dec
daa
fmull
push
dec
test
bound
add
adc
into
mov
xchg
loopne
pop
pop
loopne
push
sub
test
rorb
imul
pop
lret
sub
rcr
hlt
mov
pop
inc
pop
lcall
sbb
popf
push
jno
popf
jae
jmp
mov
into
jmp
cmp
mov
scas
dec
cli
jne
cltd
or
das
cmp
mov
add
pop
fsts
xor
call
aas
add
push
mov
sub
dec
push
fimull
jnp
inc
add
jbe
insl
xchg
aas
lahf
pop
pop
mov
popf
push
mov
movsl
mov
inc
movsb
push
mov
out
das
popl
sub
mov
shl
jecxz
mov
bound
xor
aam
jmp
lahf
aam
ljmp
movsl
loop
lret
shlb
mov
jns
sahf
ds
es
pop
sarb
dec
stos
std
cmp
lods
das
sub
mov
push
stc
pminub
or
stc
test
mov
ja
push
jecxz
mov
jle
pop
jae
leave
js
int3
rcrl
pop
sbbl
pushf
int
jae
pop
pop
add
pop
into
imul
pop
fistpll
test
jmp
lcall
popa
ds
mov
out
mov
mov
fldenv
jnp
add
dec
test
lods
das
outsl
mov
ret
repnz
mov
jnp
imul
jns
sbb
pushf
aas
xchg
mov
sti
cmc
xchg
ds
loope
cmp
dec
test
xlat
les
dec
dec
movsl
dec
loop
mov
gs
das
adc
add
aas
das
je
and
test
aad
test
ficompl
aam
imul
mov
jge
push
fucom
stos
into
jae
fistpll
cli
imul
mov
sub
enter
popf
leave
jbe
jb
outsl
das
adc
int
popf
arpl
sub
cmp
dec
adc
out
leave
test
inc
sahf
int
cmc
mov
add
pushf
pop
test
mov
jl
dec
mov
mov
sub
std
push
inc
notb
push
stos
stos
cmp
jp
jl
cmc
jns
sub
xchg
out
cmp
shll
enter
mov
mov
lods
sub
std
push
inc
leave
jbe
bnd
push
xchg
push
xchg
lahf
mov
roll
add
das
cs
in
sub
gs
push
ljmp
iret
mov
imul
jbe
lcall
push
add
sahf
ficomps
cmp
dec
mov
xchg
je
pop
push
fstps
cmp
decb
sub
cmpsl
add
pop
lret
jl
jp
lock
xor
add
scas
leave
imul
mov
cmp
xchg
mov
jmp
or
daa
jbe
dec
in
daa
push
dec
insl
adc
mov
push
cmp
lods
lret
int
add
xor
mov
add
dec
cli
xor
loop
stc
or
mov
xchg
out
dec
cld
sbb
mov
lcall
mov
testl
inc
into
stos
xor
push
mov
mov
xchg
push
sub
pop
out
fstl
mov
loopne
popf
imul
pop
dec
sub
repz
rcr
jmp
pop
xor
xor
dec
or
ds
lcall
sub
sahf
aam
in
inc
dec
sbb
shrb
sarl
cmp
jb
lods
insl
shrb
push
cmpsl
sbb
shlb
ror
bound
jnp
imul
insb
int
int
lret
mov
dec
sub
dec
jmp
aam
sti
mov
dec
lret
repz
les
popf
fistpll
add
lret
rol
inc
pop
scas
loop
fiaddl
jno
into
xchg
pop
jecxz
repz
adc
dec
push
dec
push
les
pushf
dec
sbb
pop
hlt
jl
jge
inc
lret
ja
in
test
out
xchg
add
lods
gs
cmp
inc
jmp
dec
mov
add
les
pop
jmp
sbb
jns
sub
arpl
sub
sahf
repz
shlb
fbstp
movsb
xchg
or
xchg
popf
popf
push
int3
push
gs
es
xor
pop
mov
mov
sahf
sahf
hlt
push
andl
rcrl
in
or
dec
mov
adc
aas
fisttps
pop
mov
push
mov
movsl
mov
sar
pop
jmp
rorb
popf
gs
xor
in
in
ss
sub
imul
je
push
bnd
out
push
sub
jbe
imul
lods
pop
cmp
mov
dec
ja
in
sub
mov
cmp
jnp
sbb
ret
jno
dec
test
leave
jne
mov
sub
adc
cmp
ljmp
in
cmp
xchg
clc
pop
movsb
aad
xchg
cmp
movsb
or
cmp
lock
and
ljmp
movsl
out
outsb
in
shr
inc
cld
cmp
out
stos
jg
lahf
lea
dec
andb
stos
dec
lods
inc
test
xchg
push
cmpsl
push
rcll
or
int
cmp
adc
repnz
mov
negl
shr
push
inc
out
fs
lret
clc
dec
cmpsb
cmp
in
popa
pop
test
mov
pop
stos
das
idivl
lods
push
jmp
dec
testb
rcrl
adc
adc
add
and
icebp
cmp
ljmp
lret
out
mov
call
and
mov
das
mov
sahf
lahf
rcrb
jns
dec
lcall
jbe
sbb
pop
popf
pop
lret
shlb
sbb
xchg
add
les
push
mov
sahf
and
in
jno
sub
sub
jg
rcr
pop
xchg
jg
andb
iret
rorb
adc
lahf
lds
shl
popf
push
jbe
jl
push
cmpsl
adc
insl
jmp
xor
jns
cmp
int3
jnp
cmp
testl
push
ret
test
pop
scas
je
jp
shll
pop
ja
xchg
add
cmp
xchg
clc
and
mov
rclb
imul
or
repnz
dec
lods
add
mov
das
sub
dec
ja
rcrb
pushf
sarb
adc
pop
push
pop
aad
cld
nop
aas
lahf
lds
imul
scas
or
pop
sbb
hlt
pop
fsts
movsl
aam
push
jmp
add
fiadds
lret
orl
int
gs
aas
mov
stos
xlat
cmpsl
jo
hlt
sti
sbb
shrb
fisttpll
jg
or
pushf
shl
popf
push
jae
fucom
stos
fcoms
clc
mov
xchg
bound
add
aad
ficoms
int
std
ficompl
fnstenv
shll
xor
out
cmp
cmpsl
dec
push
adc
mov
push
jle
dec
sub
icebp
and
scas
idiv
bnd
rorl
stos
cmp
or
push
mov
scas
push
mov
out
sub
dec
cmp
push
cmpb
into
sbb
add
jecxz
dec
insb
mov
sarb
nop
pop
adc
mov
fcoml
push
jmp
push
jne
in
jne
mov
ss
rcll
push
loope
adc
cmpl
mov
jge
repz
jns
sub
dec
jmp
pop
jmp
and
mov
pop
in
dec
mov
and
nop
fnstcw
out
and
xchg
jns
jmp
pushl
aad
loope
adc
aam
pop
mov
push
jno
jmp
jbe
stc
mov
shrb
mov
mov
xor
lods
loop
sub
test
dec
ret
scas
lahf
int3
and
jo
jne
call
mov
cltd
inc
add
rorb
lahf
jp
jo
cmpsl
push
push
push
mov
jl
jnp
add
out
cmp
mov
push
dec
out
xor
aam
push
dec
test
loope
jo
add
inc
dec
mov
and
popl
mull
iret
loop
lret
mov
ljmp
pop
xchg
mov
int
das
adc
les
sub
xor
add
outsb
repnz
xchg
negb
pop
mov
mov
mov
lret
or
pop
cltd
rcrl
movsl
out
repnz
jno
xchg
jno
insb
xor
inc
jmp
sbb
jne
fptan
pop
xchg
mov
je
call
test
jge
scas
push
je
pop
pushf
rclb
scas
testb
adc
aam
jl
cmp
mov
sbb
mov
dec
sbb
pop
sbbb
xchg
out
sub
xor
add
pusha
sbb
and
imul
mov
fists
cmc
jecxz
testb
jae
cmc
mov
mov
movsb
mov
dec
sub
dec
adc
stc
adc
out
jle
dec
out
rorl
adc
jo
mov
mov
cmp
xchg
fwait
popf
pop
std
adc
sbb
jg
adc
movsl
push
outsl
sbbl
loop
js
mov
adc
jae
cmc
push
cmp
cmc
and
xchg
dec
rcrl
xor
jecxz
fidivrl
loope
scas
je
pop
je
mov
mov
hlt
jo
call
sti
adc
jo
jg
adc
roll
shrb
lods
push
xchg
dec
mov
in
ds
imul
mov
push
sub
rcr
sbb
inc
push
loop
aad
pop
repnz
push
sub
cmpsl
sbb
mov
out
roll
stos
loop
mov
ljmp
mov
hlt
rorl
sub
movsl
mov
adc
leave
push
cmp
pop
repnz
push
rorl
mov
in
cmp
call
int
pop
je
enter
mov
add
push
push
insl
xchg
mov
rcrl
and
push
or
sub
push
lahf
jae
lret
std
mov
mov
fistl
and
stos
clc
mov
repz
lahf
pop
pop
inc
pop
leave
test
scas
aad
inc
mov
cld
cmpsl
scas
xchg
gs
mov
sbb
mov
dec
in
push
add
mov
and
sub
lods
jns
leave
int
jp
sbb
lret
ds
jg
sarb
les
pop
mov
andb
mov
mov
sub
shlb
mov
dec
test
psrlw
out
cmp
das
inc
jo
mov
call
dec
gs
jnp
out
aas
mov
repnz
out
cmc
call
fsqrt
out
sar
out
sub
add
aad
int
xor
push
loope
mov
jo
cmp
smsw
js
stos
cmpb
lret
ja
cmpsl
popf
sbbb
jp
pop
insb
jae
test
stos
mov
imul
sbb
jne
push
push
test
pushf
shlb
sub
scas
or
lods
cld
or
add
pop
add
ret
gs
divb
pop
add
in
subl
jno
sub
cmp
lcall
or
mov
in
add
cli
jns
push
lock
add
cmp
sub
mov
and
jb
mov
test
mov
jb
fldl
mov
daa
sbb
test
imul
and
pop
sub
lods
jl
push
fs
stos
push
dec
pop
lret
jp
ljmp
xor
jle
out
xor
sbb
dec
fcomip
repnz
aad
inc
movsl
out
mov
mov
ret
add
jecxz
cmpsb
add
push
lea
clc
dec
lods
push
in
mov
xchg
das
lahf
jbe
jge
sub
cmpsb
ss
or
ret
icebp
es
lds
fcoml
loopne
leave
decl
test
or
lcall
xchg
push
fwait
dec
jge
or
pop
popa
mov
mov
mov
inc
dec
push
ret
decl
rorl
andl
and
ds
pop
dec
adc
sti
mov
jp
arpl
xlat
cmpsl
or
cmc
int
cmpsl
adc
imul
pop
mov
lcall
add
lret
cmp
das
cmp
add
sbb
mov
jp
mov
adc
push
jle
pop
lea
jl
xlat
cld
enter
int
and
dec
fsubl
push
sbb
or
mov
insl
sti
hlt
jo
iret
and
cmpsl
icebp
or
jne
sbbl
ja
mov
xor
jne
push
rol
push
test
into
xchg
stc
jno
aas
push
mov
inc
jnp
pop
sub
ljmp
mov
repz
nop
xchg
lcall
push
pop
mov
cmp
xchg
imul
rclb
xor
lahf
dec
mov
mov
push
jecxz
pop
mov
mov
mov
jl
adc
jmp
dec
cmpsb
fldln2
movsl
aad
xor
xchg
dec
stos
fwait
andl
mov
int
add
shrl
cmpsb
andl
mov
rorb
sar
loope
cmp
movsl
mov
mov
dec
test
std
push
movsl
jmp
iret
movsl
mov
sub
stos
jecxz
lods
mov
stc
stos
jecxz
jmp
cmpl
or
mov
sub
pop
mov
mov
cmpsb
stos
scas
inc
ss
mov
fsts
mov
imul
fistps
cmpsl
mov
push
imul
dec
add
into
dec
cmp
cs
sub
scas
pop
mov
mov
xor
and
sarb
sbb
cmpsl
add
or
lcall
mov
out
hlt
mov
pushf
sub
icebp
or
dec
les
cwtl
cmpsl
adc
into
add
xor
xchg
int
iret
sub
add
adc
sarl
sub
push
adc
dec
jmp
rolb
cs
ds
int
sarl
sahf
repz
jmp
sar
aas
mov
mov
cmp
scas
push
inc
push
sbb
cmp
insl
dec
stc
pop
call
rcl
decb
int3
pop
int
movsl
mov
rcl
sub
mov
jne
or
sbb
sar
xchg
repz
dec
out
into
lods
xor
cmpsl
pop
mov
ljmp
lea
xchg
xlat
mov
aad
mov
xchg
shrl
js
mov
pop
jl
hlt
mov
rcr
aad
mov
add
add
pop
imul
xchg
mov
jmp
int
pop
sub
sbb
movsb
xchg
push
push
sbb
mov
out
sub
imul
sub
mov
lcall
std
cmp
fstps
fidivrl
scas
iret
mov
std
stc
cmp
xchg
cmpsb
insl
sahf
and
test
add
lods
push
pushf
ret
push
mov
lcall
stos
sub
xor
loop
mov
sbb
add
das
sar
xchg
mov
mov
daa
sti
push
pop
jb
mov
lods
fdivrl
shlb
repz
pop
pop
cmp
cmp
lods
mov
push
pop
add
clc
fisubl
mov
mov
into
lock
lea
jge
sahf
mov
shrl
xchg
in
add
lret
push
pushf
int
and
loopne
fldcw
aam
insl
sub
rcl
sti
repnz
cli
xchg
lahf
roll
lods
xchg
stc
dec
stos
cwtl
popf
insl
jne
sub
pop
inc
mov
cmp
sarl
sahf
scas
loopne
movsl
xchg
jge
sarb
insl
out
mov
ficompl
cli
add
jns
scas
mov
daa
aas
shrl
test
pushf
rcrb
and
xchg
mov
cmc
xchg
andb
jbe
out
dec
mov
push
pop
scas
cmp
outsb
in
jge
imul
pushf
mov
mov
add
stos
mov
jno
rcl
jns
daa
or
adc
fisubl
mov
jns
pop
jae
stc
fists
ret
les
call
mov
pushf
rcll
cld
fimuls
cmp
iret
cmp
cmp
xlat
loop,pt
in
mov
push
pop
mov
jp
jo
xchg
test
cmc
mov
stos
jmp
or
mov
sarl
shr
and
sarl
sarb
movsb
scas
mov
das
jmp
in
insb
test
mov
sub
sub
jns
lods
add
xchg
andl
adcl
fcmove
mov
push
test
imul
repz
jo
pushf
movsl
mov
fimull
mov
lret
int
faddl
sbbb
mov
out
mov
sahf
shll
lcall
inc
cmp
adc
fs
lods
push
andb
into
mov
lret
add
outsl
push
and
popf
dec
ja
jge
ja
and
mov
add
ljmp
cmp
sti
xchg
mov
sar
in
cmpsl
add
ss
xchg
ja
pop
mov
das
cmc
mov
std
int
lods
icebp
in
push
lahf
jno
push
jo
xchg
jle
push
lahf
les
shrb
cmpsl
div
adc
stc
sbb
mov
pop
jns
pop
mov
cmp
lods
ljmp
leave
mov
stc
cmp
idivl
popf
arpl
fimull
fsts
aam
test
sarl
dec
mov
imul
cmp
aad
and
jo
push
add
push
mov
xlat
notb
xchg
aaa
mov
shr
scas
pop
mov
ficompl
jne
inc
das
inc
insl
je
jns
cmpsb
js
int
loopne
in
jecxz
hlt
mov
mov
jg
sar
rcrb
leave
je
pop
pop
and
insl
hlt
iret
cli
ja
jg
jbe
je
ret
fcompl
xchg
int
repnz
push
xchg
int3
xchg
cwtl
fiaddl
sar
popf
movsl
xlat
inc
mov
jb
jns
sbb
fsubr
mov
test
adc
xchg
cmpsl
pop
xchg
mov
jbe
loop
fcoms
test
roll
rcrl
mov
rorl
les
push
scas
mov
xchg
sahf
rcrl
adc
add
ds
shll
movsb
out
sub
mov
and
adc
aad
aam
adc
cmp
insb
pop
lea
jno
mov
mov
stos
dec
lods
inc
cli
rorl
out
sbb
jg
mov
scas
repnz
je
out
clc
add
pop
jo
stos
mov
lods
lcall
out
sbb
add
inc
push
daa
xchg
movsl
imul
jmp
jns
xchg
mov
idivl
daa
sbb
pop
pushf
lcall
cmpsl
cmp
xchg
lahf
xchg
movsl
out
cmpsl
sub
add
jmp
sbb
add
fadds
cmpsb
and
leave
lret
add
cmpsb
adc
out
rorl
sti
lret
clc
xlat
lods
mov
test
mov
imull
fstpl
jne
mov
lret
fimuls
dec
mov
sti
fisttpll
mov
imul
mov
cs
scas
cmp
movsb
stos
mov
gs
imul
jecxz
movsb
mov
xor
mov
vcvtss2si
add
sahf
fnstenv
pop
into
xor
cmpsl
or
loop
mov
leave
int
push
push
mov
mov
dec
adc
rcrl
cmp
fnstenv
ja
popf
fcoml
popf
pop
jbe
adc
xor
pop
push
sbb
pushw
rorl
aaa
out
pop
cmc
sti
adc
dec
add
popf
imul
aam
mov
mov
sub
sbb
cmp
lret
loop
out
dec
mov
lds
loope
dec
fisubs
arpl
int
in
daa
push
sarl
pop
shl
int
jg
jb
cli
mov
dec
mov
xchg
cmpsb
jbe
pop
cmc
repz
movsl
xchg
mov
jp
cmpsl
das
inc
jl
bound
add
adc
ror
xor
mov
scas
fwait
popf
xchg
push
cmpsb
sahf
fcoml
cwtl
dec
or
mov
xchg
add
loopne
fisttps
cmp
mov
stos
mov
repz
dec
inc
jg
cmp
repnz
xlat
dec
jno
sarl
out
lret
fnstsw
fisubrs
jmp
lret
push
sub
cmpsb
insb
lods
push
xchg
enter
mov
pop
push
out
out
leave
bound
repz
xor
stos
add
or
into
mov
xchg
xchg
cmpsb
pop
popf
aad
loopne
cmpsl
divl
cmpsl
adc
lahf
sbb
ljmp
mov
push
pop
incb
jo
xchg
ja
js
push
fwait
imul
mov
add
and
cli
fidivrl
adc
fldenv
repz
sti
and
dec
mov
add
jno
pop
jae
jb
jmp
add
lret
sub
nop
add
cmp
shl
dec
mov
out
lea
add
shrl
adc
rcll
out
mov
out
into
mov
dec
jmp
pop
pop
aaa
or
jp
icebp
and
jge
pop
push
rolb
in
cmp
jp
add
push
sbb
fdivrl
push
xlat
push
aad
jle
imul
push
dec
iret
sar
imul
mov
mov
mov
rcrb
jle
mov
sub
xor
mov
pop
jne
jecxz
pop
insl
imul
stos
push
pop
popa
mov
mov
idiv
lret
clc
out
shlb
jnp
mov
add
fdivrl
and
jmp
xchg
and
mov
mov
jge
inc
add
and
xchg
inc
loope
notb
jno
movsl
push
xchg
cmc
jno
cmpsl
or
jle
add
sbb
js
stos
or
or
das
jg
fcomps
in
js
movsl
add
popf
movsl
test
fstpl
xchg
ja
mov
mov
pusha
push
and
push
pop
cld
pop
mov
out
mov
dec
adc
daa
aad
adcb
add
sub
mov
outsb
in
mov
je
xchg
addr16
leave
cld
and
in
enter
mov
jbe
bnd
xor
push
xchg
clc
and
mov
push
lcall
xlat
add
jp
push
imul
pop
jl
sti
lods
xchg
adc
add
stos
std
lcall
jo
xchg
popf
xchg
and
out
or
in
out
add
in
jmp
pushf
shlb
das
stc
stos
movsl
ja
mov
out
mov
jp
add
lods
mov
into
mov
mov
les
je
out
mov
dec
adc
lds
rcr
out
push
push
stos
mov
mov
xchg
mov
xor
mov
dec
xchg
test
mov
clc
pop
test
ja
aas
repnz
jp
imul
jmp
out
jbe
xchg
sahf
and
xchg
repz
test
dec
mov
mov
mov
pop
cmp
out
cmp
sti
je
icebp
lock
dec
pop
outsb
imul
xor
outsb
sbb
roll
roll
jnp
arpl
xor
xor
ds
lods
cmp
mov
roll
je
push
call
lret
cmp
jl
dec
in
mov
repz
add
push
mov
cmp
add
jmp
jl
jo
stos
es
dec
pushf
rcl
daa
fdivrl
cmc
imul
shrl
je
push
pushf
cmpsl
pop
inc
and
insl
andl
jmp
push
lahf
les
icebp
sub
add
xchg
jl
dec
ret
inc
pop
cmpsl
sbb
enter
hlt
in
xchg
loopne
mov
push
add
pop
add
les
fiaddl
dec
fsts
sub
dec
add
push
push
mov
jmp
out
frstor
mov
cmpsl
adc
pushf
lret
jecxz
dec
pop
cli
leave
outsb
in
pop
mov
jge
add
sahf
pop
mov
shrb
out
xor
lods
aas
lea
lret
stos
nop
add
roll
cmp
jne
icebp
mov
jmp
icebp
mov
out
out
dec
sub
mov
jmp
mov
cmp
sti
lahf
inc
pop
jecxz
xchg
clc
sti
std
das
sub
loop
dec
xor
jns
out
xchg
test
push
jb
jno
lahf
in
or
xchg
in
dec
add
adc
and
in
push
out
and
loop
xchg
mov
rcrl
lcall
out
mov
jo
mov
mov
sbb
jo
stos
adc
lret
pop
sub
xlat
mov
xchg
scas
cmp
jne
sarb
cmpsb
inc
movsl
fnstcw
mov
loop
mov
or
jno
sbb
mov
fstl
lods
push
inc
daa
sbb
push
jg
lcall
sub
dec
mov
push
jns
dec
xlat
push
xor
jge
lcall
jg
add
adcb
add
cmp
pop
mov
adc
jmp
iret
and
pop
movsl
add
fisttps
pop
add
out
imul
daa
or
jnp
jnp
add
cmp
fiadds
cmp
pop
repz
push
xchg
ds
movsb
loope
adc
out
in
lret
imul
sub
jle
push
pushf
int
pop
shlb
jbe
push
push
lret
inc
jp
pushf
sub
mov
les
jp
push
pop
test
jne
pushf
sbbl
mov
loope
cmp
mov
cld
cmpsl
sbb
shl
outsl
icebp
movsb
ljmp
mov
push
mov
mov
movsb
loop
xchg
jns
jp
insl
mov
movsb
imul
and
jle
hlt
sahf
fdivrl
ja
lock
loopne
inc
push
lock
mov
mov
imul
jae
call
mov
lahf
xlat
mov
mov
sbb
das
inc
pop
cmpsl
pop
daa
negl
stos
ja
js
inc
add
call
in
and
jae
call
xchg
cmpsl
sbb
rcrl
call
push
stos
clc
jbe
push
ret
inc
dec
loop
stos
dec
cmp
stos
xchg
les
ljmp
and
stos
loop
cli
pop
cli
jne
ljmp
in
jno
jno
pop
adc
scas
and
push
insl
add
std
xor
mov
mov
outsb
mul
in
repz
repnz
sbb
pop
lods
jb
fsubl
rcrl
in
or
or
aam
imul
neg
idiv
and
in
arpl
mov
fcmovu
popl
adc
adc
jbe
push
hlt
inc
push
lret
sar
push
mov
dec
lret
out
mov
push
or
imul
loopne
test
xor
sarl
iret
mov
fwait
add
into
hlt
jecxz
mov
ficoml
push
fucom
mov
add
lock
jnp
xor
loop
pop
shrl
push
push
inc
popf
jnp
add
cmp
mov
mov
mov
mov
test
lret
out
imul
and
push
repnz
push
in
add
flds
cmpsl
popf
adc
jns
add
mov
and
pop
push
cmc
jmp
roll
insb
sbb
scas
fstpl
lret
dec
adc
mov
ja
pop
jmp
repnz
add
xchg
fnsave
cmp
shrl
add
popf
sbbb
xchg
ret
xchg
lcall
lods
outsl
cmpsl
dec
adc
js
mov
sbb
push
stos
xor
repnz
lret
add
lods
inc
push
add
popa
jmp
sub
scas
xchg
div
int3
loope
add
fld1
xchg
dec
dec
movsl
jg
aas
xorb
ret
cld
mov
stos
adcl
fnstcw
push
push
jne
shlb
dec
cmpsb
sbb
mov
jl
push
hlt
jo
rclb
nop
movb
push
and
in
fbld
xchg
sbb
scas
lea
cmpsl
xchg
stc
cmpsl
add
test
ja
imul
cmpsb
xchg
jmp
jb
adc
xchg
or
sub
adc
popf
add
insb
push
sahf
imul
dec
testb
cli
fs
dec
push
xchg
dec
loope
mov
pop
mov
pushf
movsb
mov
mov
adc
sarl
pusha
or
mov
sub
js
push
mov
add
imul
hlt
pop
repnz
xchg
jp
lret
addr16
mov
push
repnz
lcall
ljmp
es
dec
jnp
dec
jns
cmp
rol
adc
add
das
sub
in
add
roll
dec
in
dec
push
mov
mov
lea
mov
pop
lcall
mov
pop
popf
jne
cmp
std
rcl
in
cmp
lea
mov
pop
xor
popf
cmpb
rcrl
gs
aam
jge
jns
push
jl
pop
mov
pushf
rclb
xlat
push
dec
imul
hlt
mov
pushf
cltd
addl
add
jb
test
rcrl
insb
out
push
hlt
mov
push
hlt
lcall
int
mov
push
in
fsubs
movsl
pop
out
dec
int
jmp
out
xchg
daa
or
std
lds
pop
add
adc
clc
push
dec
pop
jns
dec
xor
idivb
mov
cmp
mov
push
xchg
ljmp
xchg
mov
dec
adc
push
popa
mov
mov
mov
sbb
mov
jg
push
outsl
mov
lret
fisttpll
lret
jecxz
inc
xor
std
add
mov
test
inc
push
jl
push
pop
push
subb
out
in
pop
adc
xchg
xor
loop
out
std
das
push
pop
outsl
adc
imul
sub
jl
js
cwtl
in
fidivrs
loop
pop
lods
pop
ret
repnz
xor
add
or
mov
cmp
mov
or
or
and
mov
sti
jo,pt
in
cmp
hlt
jecxz
xlat
cmpsl
dec
xchg
sahf
les
mov
sbb
loop
icebp
es
bound
mov
shll
shll
add
in
ljmp
ja
sbb
push
shll
aas
or
or
cli
jae
cld
pushf
shlb
xchg
mov
mov
lret
add
sbb
add
jge
sub
push
int
dec
shrb
insl
xor
xchg
sahf
shll
add
jmp
aam
mov
stos
mov
pop
int
cmp
mov
xchg
bound
shlb
jns
pop
movsl
lret
xchg
loop
ret
ret
decb
movsb
mov
mov
add
stc
jp
adc
jecxz
push
shl
lock
lods
cmpsl
or
js
cmp
dec
jle
mov
xchg
xchg
data16
pushf
mov
js
add
cmp
jbe
jp
sarl
shr
sbb
jecxz
popf
mov
pop
cmp
push
fucomi
cmp
lds
dec
pop
mov
xchg
xlat
cld
xchg
rorl
out
xchg
jmp
jbe
adc
mov
mov
adc
inc
dec
jl
cltd
ret
lahf
sahf
inc
push
mov
lods
dec
add
popa
xchg
cmp
mov
stos
pop
popl
data16
outsl
leave
xchg
add
es
lret
stc
std
sub
sbb
stos
adc
sbb
shr
std
nop
add
adc
call
imulb
fcomp
mov
stc
pop
sarl
add
or
dec
stos
or
cld
imul
xor
dec
mov
das
aas
dec
adc
lock
notl
movsl
lret
dec
sub
rcr
push
add
pop
pushw
jns
push
add
loop
je
jbe
imul
rcrl
jmp
rcll
mov
cwtl
and
push
inc
aas
jp
jg
sbb
mov
xor
xchg
lcall
in
add
mov
mov
in
outsl
mov
mov
jle
dec
int3
inc
inc
test
xlat
pop
rcll
clc
or
dec
jmp
mov
mov
nop
leave
dec
lret
inc
add
mov
jg
ret
jo
mov
out
jno
in
jno
cli
aam
and
mov
xchg
test
stos
pop
xor
add
into
shr
popf
mov
fistl
stos
ds
dec
lods
push
jecxz
outsl
inc
xor
add
mov
pop
mov
popf
gs
adc
fstpl
loop
or
or
jl
sbb
add
xchg
out
pushf
mov
xchg
pushf
mov
push
push
pushf
lds
push
imul
mov
dec
frstor
das
mov
ret
jns
sub
imul
pop
repz
shr
scas
add
iret
shrl
inc
ror
sbb
push
imul
outsb
xlat
mov
jecxz
lods
sbb
roll
out
lret
jmp
sub
lret
lcall
sub
add
loop
push
jno
lcall
lcall
out
ficomps
dec
popf
loope
cmp
mov
mov
fidivl
lea
mov
shrl
mov
rcl
sub
cs
data16
call
add
lahf
or
lods
push
daa
pop
movsl
pop
xlat
xchg
mov
or
dec
es
movsl
fsts
dec
rorl
dec
add
sub
imul
add
in
loop
in
aad
bound
jbe
sub
movsl
out
jg
sub
out
pop
jmp
cmp
testb
dec
das
shrb
cmpsb
sbb
jae
cmp
out
int
add
push
pop
adc
mov
test
out
movsl
lret
mov
push
sub
pop
test
sub
xor
sub
loope
jp
rcrl
jg
xchg
test
rclb
mov
fisubrs
pop
lret
mov
repz
mov
int
add
and
shr
repz
mov
or
jno
divb
mov
jbe
cmp
roll
mov
call
les
aas
mov
add
push
and
sbb
mov
mov
rcll
roll
mov
jmp
mov
sti
cmp
in
mov
clc
or
hlt
pop
pop
cmpsl
adc
arpl
xor
gs
jbe
outsl
mov
push
xlat
add
aas
sahf
sbb
dec
pop
bound
pop
dec
bound
pop
xchg
into
add
lods
test
imul
aaa
imul
push
sbb
xchg
pop
mov
or
data16
mov
pop
mov
cmpsb
sub
fisubs
out
sub
cmpb
push
sbb
pop
loopne
push
xor
pop
loop
test
fs
mov
cmp
ds
dec
sub
pop
xchg
adc
pop
mov
cmpsl
push
sbb
xchg
jbe
jae
add
js
fcoms
clc
sbb
sti
popf
and
mov
cmpsb
dec
das
rclb
lret
loope
cwtl
add
shr
test
jnp
cmp
cmp
xor
cmp
dec
mov
stc
cs
out
int
sub
sbb
les
push
and
ds
jecxz
pop
sahf
inc
mov
sub
aaa
jmp
add
xchg
pop
call
pop
mov
jae
sub
jnp
fisttpll
fcmovu
aaa
fidivl
cmp
cmp
cmp
cmp
loope
ss
mov
lods
daa
lods
jnp
pop
outsb
jecxz
pop
rep
hlt
lock
cld
enter
xlat
aaa
lahf
sbb
add
sub
rclb
add
dec
xor
sti
pop
pop
fildl
movsl
out
jns
fcmovne
jmp
adc
jnp
dec
cmp
lods
out
xchg
xchg
xchg
dec
cmpsl
jge
jg
adc
pop
mov
clc
sbb
lcall
push
cld
sbb
dec
jnp
shr
sub
cmp
dec
shrb
dec
js
mov
std
sbb
dec
xchg
mov
sbb
push
dec
mov
repnz
in
add
mov
call
popf
lock
mov
xchg
bound
jns
lods
cmpsl
add
pop
dec
vandnps
mov
shll
push
dec
push
rcrb
aam
jg
sub
mov
push
pop
jle
xchg
loop
or
xorb
jg
or
xchg
clc
dec
addb
scas
or
test
roll
ljmp
negl
pop
push
dec
adc
nop
loop
add
add
dec
add
scas
cmp
lods
mov
or
pop
imul
mov
mov
ficomps
sbb
or
dec
loop
xchg
lcall
pop
mov
sub
aad
pop
cld
bound
pop
insl
add
std
imul
idivl
mov
movsb
jp
orl
push
roll
adc
jno
dec
in
adc
stos
mov
fsubl
hlt
lret
aaa
or
minps
sbb
clc
out
pop
sub
push
lock
jg
mov
js
fnstcw
movsl
fistpll
leave
roll
dec
add
sub
jne
fisubrl
cmp
pop
add
addr16
adc
das
add
or
stos
add
pop
ja
shrl
cmc
aaa
jae
mov
andl
subb
das
adc
push
lret
and
repz
aaa
mov
xchg
jecxz
fcmovnb
pop
adc
push
mov
jge
pop
jmp
out
sub
cmp
dec
scas
leave
sub
sub
dec
std
mov
pop
pushf
testl
mov
adc
dec
ds
sbb
cmp
push
sub
mov
mov
icebp
or
push
cwtl
pop
cmc
or
jo
xor
inc
inc
cmp
pop
xchg
in
xchg
pop
xor
xchg
push
lret
add
sub
mov
inc
roll
loopne
sar
adc
mov
jg
in
daa
jmp
das
sbb
bound
cwtl
aad
fildl
movsl
add
in
dec
mov
push
aas
lahf
jmp
test
sbb
mov
or
out
dec
scas
leave
sub
and
pop
test
stos
loop
scas
push
das
push
jge
rcrb
cmc
fsubr
sarl
xor
dec
sbb
or
sbb
jbe
and
shlb
adc
lods
in
add
push
xor
gs
loopne
push
cmpsl
pop
or
rolb
cmpsl
fistps
push
lds
rclb
sbb
xor
push
xchg
imul
nop
mov
push
adc
and
in
jecxz
xor
fisttpll
mov
sti
mov
int3
dec
testb
pop
dec
stos
jp
adc
imul
mov
popf
mov
mov
imul
popf
push
push
lcall
clc
dec
mov
xor
mov
or
xor
fstpt
aam
scas
push
mov
cltd
popa
pop
add
pusha
jle
jne
push
pop
sbb
test
xor
in
or
mov
ss
fnstenv
jno
cmp
push
mov
imul
sbb
push
xlat
pop
pop
lds
iret
icebp
adc
pop
in
xchg
push
repz
dec
mov
je
lahf
imul
out
test
mov
mov
jle
pop
mov
addr16
jl
lahf
push
test
lock
push
push
fimuls
loop
rclb
push
xchg
cld
lods
xor
mov
dec
pop
or
punpcklbw
aas
jne
sub
push
insl
popf
aaa
xlat
cmc
xchg
or
sbb
push
out
sub
or
lret
pop
push
mov
cmp
inc
cmc
mov
jo
cwtl
test
les
fcomi
icebp
dec
lods
movsl
lock
lahf
pop
jecxz
aas
clc
cmpsl
fsts
pop
inc
xor
and
push
jbe
inc
jecxz
xchg
jle
lea
cmp
ss
lcall
leave
fcomip
xchg
push
mov
scas
add
out
pop
pop
pop
add
mov
sub
movsl
lock
pop
test
jo
loopne
pop
mov
lcall
dec
loop
insl
nop
in
aaa
xor
dec
xor
mov
aam
mov
insl
cvtpi2ps
cmp
add
jo
clc
xchg
pop
loopne
inc
add
aaa
mov
ret
fs
jl
dec
push
bound
pop
into
push
push
cwtl
add
ret
sbb
fs
mov
push
cmp
and
xchg
push
ljmp
test
add
and
aaa
sbb
das
stc
cmp
mov
cmp
out
stc
ret
pop
push
int
imul
jae
xor
adc
jg
push
xlat
adc
lret
add
int
xor
mov
push
daa
mov
stos
xchg
mov
imul
enter
push
imul
imul
in
jle
shrl
cmp
test
push
or
mov
sub
insb
movsl
pushf
push
in
lret
push
or
push
sub
push
outsb
adc
xchg
inc
lret
sub
imul
push
or
test
sbb
mov
lcall
jmp
push
ds
jle
adc
jbe
mov
push
add
or
ja
aaa
and
cmpsb
push
xchg
in
in
mov
enter
xorl
insb
mov
shll
ret
xchg
jnp
xchg
fsubrs
push
test
in
or
fisubrl
lret
xor
repnz
add
dec
sub
add
cmp
movsl
pop
push
cmc
cmp
adc
jmp
mov
decl
test
aad
icebp
or
pop
push
pop
out
push
imul
mov
cmp
mov
cmpsl
add
sbb
mov
movsl
cmpsb
xchg
xchg
dec
xor
pop
sub
dec
outsb
loop
fnstenv
add
insl
sbb
inc
out
push
ds
movsl
scas
mov
jmp
pop
popf
fnstenv
in
lods
jne
xchg
mov
jl
fcmovnu
and
scas
xchg
mov
mov
push
sahf
fcmovb
xchg
lock
movsl
push
pop
mov
push
mov
addr16
push
jp
int3
push
add
popf
or
popf
je
pop
imul
ja
sarl
cmp
push
push
mov
dec
fldcw
pop
pushf
pop
mov
je
and
int
ljmp
sub
jbe
pop
testb
jnp
dec
mov
pop
cmp
xor
pop
cli
mov
pop
xor
push
cmp
mov
lret
xchg
mov
stc
push
push
mov
push
cmp
xor
out
dec
movsl
test
xchg
gs
push
jne
sahf
mov
xchg
popf
or
push
pop
mov
je
xchg
divb
jp
add
mov
scas
cli
popf
les
jmp
cs
bound
movsl
repz
push
push
ljmp
mov
jecxz
ja
mov
cltd
push
lret
aaa
push
lahf
xchg
cmp
jbe
mov
leave
fwait
movsl
push
jo
lcall
push
in
pop
mov
adc
es
pop
mov
movsl
jmp
mov
pop
dec
add
stos
imul
xchg
stos
mov
dec
mov
ljmp
mov
stc
mov
mov
xchg
push
mov
mov
insl
lds
and
lds
movsl
test
adc
out
lret
push
divl
xlat
test
xchg
mov
popf
cmp
xchg
or
mov
push
imul
pop
dec
aas
push
adc
cmp
loope
mov
pop
sarl
aas
push
jmp
insl
leave
ret
pop
cs
rcl
cmp
sub
bound
fidivl
xlat
shll
lahf
push
pop
cli
iret
push
mov
rolb
icebp
mov
lods
xor
xchg
push
adc
cmp
repnz
mov
pop
imul
cli
clc
inc
mov
notb
push
fisubrs
lret
pop
push
push
push
add
iret
push
push
addr16
mov
inc
jmp
jns
stos
xchg
enter
fsubrs
adc
test
push
dec
test
mov
ret
iret
push
mov
cs
mov
xchg
jge
mov
iret
push
movsl
loope
popf
lods
add
and
lcall
cmp
sbbb
lods
cs
dec
movsl
lahf
push
push
xchg
test
xchg
mov
and
aam
cmp
lods
aam
lahf
add
jle
mov
xor
and
mov
xchg
std
das
mov
pop
push
subb
std
cs
test
jno
mov
jbe
std
dec
inc
xchg
ds
mov
pop
push
scas
ret
mov
add
dec
push
mov
cmp
cmc
sahf
push
jecxz
dec
test
cmp
scas
push
inc
std
cmp
es
fcomp
inc
mov
lret
shll
rolb
push
lods
xlat
hlt
das
daa
dec
mov
pop
test
fwait
push
lods
mov
mov
mov
jg
ds
inc
aad
mov
pop
pop
test
cmp
or
add
push
out
test
das
dec
repnz
push
push
mov
push
xchg
jle
dec
mov
bound
or
push
shrl
aad
addr16
push
orl
mov
push
dec
aaa
push
in
leave
incb
fcoms
xorb
and
cmpsb
pop
mov
lock
sbb
mov
test
dec
inc
ret
mov
std
mov
and
stos
outsb
mov
insl
xchg
push
int
testl
jmp
adc
lods
add
cmp
adc
imul
iret
push
dec
push
or
aaa
fnsave
pop
and
cli
add
xlat
imul
xor
lret
jnp
jle
mov
pop
mov
xchg
jp
add
lret
sub
sub
add
ss
sub
push
iret
scas
test
fsubrs
rcl
daa
test
pop
outsl
leave
lcall
push
cmp
inc
pop
addr16
rep
jmp
push
dec
mov
pop
test
mov
jp
ss
push
dec
stos
adc
in
dec
mov
sahf
leave
fistl
add
sub
pop
scas
imul
push
pop
test
jo
mov
add
mov
xor
sbb
or
mov
pop
test
out
aad
mov
mov
sub
adc
shrb
loop
add
dec
gs
add
stos
jmp
pop
aam
push
pop
popf
sub
repnz
xchg
dec
xchg
push
sub
frstor
mov
stc
add
stos
into
outsl
sub
pop
aaa
push
mov
outsb
add
dec
fwait
ret
mov
pop
fcmovb
add
cmpsb
sub
aam
xor
lret
push
or
ret
fistl
repz
shrl
and
stos
inc
sub
imul
rclb
imul
cs
mov
xchg
mov
mov
add
sar
cltd
mov
and
add
popa
movsl
enter
stc
add
push
add
or
add
xor
mov
dec
push
subl
sbb
sub
or
sahf
data16
xchg
int
lret
insl
das
push
rcll
lahf
std
ret
inc
mov
cmp
and
inc
loop,pt
mov
dec
mov
negl
cmp
ljmp
mov
add
es
push
int3
push
call
lods
fildl
mov
mov
xchg
xchg
scas
fldln2
xchg
ljmp
repz
lahf
ret
mov
add
jp
std
aas
repnz
mov
lret
mov
inc
xor
add
data16
enter
add
ss
cmp
jb
into
sub
imul
push
sub
lods
movsl
shll
cmpl
mov
xchg
ja
xor
mov
or
cmp
push
mov
jle
push
stos
int3
push
sbb
test
popa
inc
xor
shr
stc
lods
add
mov
push
push
movsl
mov
movsb
and
aas
cmp
push
sub
dec
xchg
stos
rorl
mov
mov
adc
or
in
fmuls
push
xor
popf
lret
jbe,pn
mov
test
stos
xor
pop
add
jecxz
jecxz
scas
dec
adc
mov
jae
aad
push
cli
add
pop
push
leave
sub
loope
mov
int
incb
hlt
push
subl
xor
xchg
sbb
pop
lods
aam
test
bound
aad
lock
int
out
push
xor
inc
leave
das
ja
ja
scas
mov
jno
xchg
jp
sub
mov
xlat
out
lret
mov
push
xor
imul
cli
lods
add
mov
push
insl
push
cmp
insl
push
xor
adc
xchg
mov
ret
test
and
out
dec
adc
push
xchg
cmc
sub
or
int
mov
mov
pop
cmp
stc
cmp
mov
int
jl
fdivp
cli
add
fbld
xor
icebp
add
push
inc
cmp
xor
adc
push
cwtl
mov
adc
pop
sbb
adc
adc
int
xchg
testb
icebp
or
js
mov
mov
mov
sub
mov
sbb
lret
sub
ret
push
lret
aam
pop
mov
pop
mov
lods
push
sub
dec
rorl
add
in
jo
stos
leave
icebp
jle
mov
subl
test
sub
call
movsb
jne
mov
mov
rol
sbb
fildl
xchg
mov
mov
fs
stos
jecxz
xchg
stos
and
and
test
movsl
outsb
cs
sub
nop
cmp
push
sub
fst
inc
divb
mov
fsub
mov
sub
stos
stos
push
jne
mov
inc
xchg
lods
rorb
loop
cmc
sti
add
cmp
xchg
and
mov
icebp
jle
mov
subl
loope
loop
das
xchg
addb
shrb
mov
sbb
popf
push
fcoml
rorl
sub
xlat
mov
repnz
inc
pop
dec
and
dec
or
inc
xchg
lods
gs
imul
fwait
pop
lcall
icebp
lahf
cmp
mov
jecxz
add
push
repz
push
sub
add
and
add
push
lret
add
inc
andl
adc
inc
sub
pop
insb
flds
jmp
in
mov
punpckhdq
cltd
shll
les
or
adc
sub
out
sub
pop
or
iret
push
inc
add
xchg
or
mov
movsb
add
mov
push
idiv
lods
add
lock
les
lods
lret
adc
push
add
mov
lahf
loopne
jns
xor
push
pop
inc
aas
fiadds
dec
fisttpl
mov
sub
cwtl
pop
imul
mov
sahf
push
and
inc
sbb
mov
aas
mov
sub
pop
push
dec
jmp
cmpsb
xchg
and
sbb
cmp
ja
icebp
or
pop
add
std
mov
pop
cmp
dec
shl
add
adc
push
shll
ja
iret
jmp
push
mov
xor
cmp
stos
or
insl
adc
sub
das
aas
popf
cmc
sahf
push
int3
jnp
cwtl
xorl
pop
and
cmpsl
test
incb
lret
mov
aam
repnz
std
jge
sub
add
call
icebp
jnp
loopne
out
popf
or
push
mov
sbb
mov
aaa
push
movsb
les
xlat
xchg
shl
testl
dec
jecxz
pop
inc
aas
sahf
mov
repz
jae
or
subl
push
adc
test
xlat
add
outsl
sbb
scas
add
xchg
addr16
loope
scas
lret
mov
mov
xchg
movsl
push
pop
outsb
push
movsb
push
cmp
popa
cmpsl
lret
fstl
add
jle
adc
fsubrp
daa
mov
inc
repz
mov
xchg
aad
add
bound
mov
addr16
pushw
mov
leave
pop
imul
pop
push
movsb
xchg
and
push
lret
cltd
ja
sbb
mov
xchg
ljmp
jg
cwtl
rorl
mov
cmp
mov
push
or
pop
or
mov
jl
jne
add
stc
std
pop
add
scas
lret
movsl
cltd
frstor
leave
push
aas
xchg
push
mov
push
in
pop
or
sar
test
cmp
dec
jmp
and
mov
mov
ja
jne
scas
ljmp
push
nop
add
cmpsb
jge
add
mov
lock
aas
xor
jge
hlt
rolb
mov
stc
cltd
mov
das
mov
jg
adc
ljmp
xor
out
fs
add
mov
scas
and
cmp
push
imul
push
std
les
add
cmpsb
push
adc
imul
mov
adc
add
xchg
loope
pushw
das
mov
xchg
push
pusha
ljmp
xor
loope
addr16
push
cmpb
mov
add
adc
test
lods
jmp
pop
iret
aad
sti
xlat
mov
push
xor
movsl
aas
loop
cmc
testl
push
lahf
das
test
pop
mov
scas
insl
inc
dec
push
pusha
mov
xlat
in
je
jne
leave
sub
sbb
add
add
adc
pop
test
mov
and
jmp
mov
je
aad
dec
test
ljmp
aam
aam
jnp
in
subl
xlat
push
add
mov
icebp
or
dec
jp
xchg
mov
cmc
nop
gs
xchg
xor
das
lock
xchg
mov
add
mov
inc
les
cld
lds
add
imul
mov
push
mov
stos
lcall
add
push
movsb
cmpsl
add
pop
outsl
bswap
ret
jne
imul
jl
mov
icebp
sub
out
adc
scas
mov
test
pop
imul
add
xor
jne
into
add
in
lcall
in
movsb
add
stos
pop
test
push
cld
xor
add
lods
imul
imul
neg
xor
add
popf
add
push
scas
sub
jp
push
fisttps
cmp
pop
rcll
push
cltd
add
push
jge
cmpsl
cltd
pop
imul
inc
lods
sub
cmc
scas
imul
fwait
add
pop
add
les
mov
out
mov
push
sub
jmp
xor
scas
add
in
add
push
push
mov
fsts
punpckhbw
pop
adc
xor
lods
ret
pop
test
dec
orb
aas
push
pop
lods
add
mov
imul
je
out
mov
jecxz
pop
outsb
stos
dec
call
inc
fildll
push
les
mov
pop
jno
lods
push
mov
daa
bound
imul
xchg
jne
je
xor
xchg
push
cli
imul
jae
pop
and
lcall
xchg
imul
dec
test
push
in
divb
lock
mov
flds
or
sub
leave
ret
add
imul
loope
jmp
add
pop
bound
jmp
mov
scas
adc
pop
jg
pop
jl
push
pop
bound
and
int3
jle
xchg
add
mov
clc
inc
fs
ficoml
loope
out
in
out
subb
jmp
in
inc
push
mov
cmpsb
daa
jge
mov
dec
rorl
ds
cwtl
vfrczsd
mov
in
add
andl
mov
outsb
cmp
pop
adc
mov
dec
out
mov
addr16
mov
add
xchg
movsb
in
orb
bound
jmp
loope
mov
mov
mov
cmp
mov
jl
pop
leave
sub
scas
cmp
into
adc
jno
fnstenv
in
sub
jg
outsb
insl
out
add
cmpsb
in
scas
pop
gs
aas
mov
xchg
test
pop
push
pop
gs
adc
in
es
lds
or
mov
mov
fsubl
push
and
xchg
jno
sub
loop
add
or
gs
sbb
ret
outsb
lret
and
xchg
mov
mov
jg
lahf
fsts
jmp
cmc
imull
mov
xchg
mov
dec
jnp
leave
ret
outsb
stos
nop
add
jno
test
xor
add
add
or
adc
and
sbb
mov
xchg
pop
pop
push
pop
lods
and
movsl
mov
cltd
pop
movsl
scas
add
lock
jmp
jno
test
test
test
push
cmpsl
sbb
push
movsl
ret
add
icebp
fstps
add
mov
xor
sti
aas
dec
cmc
mov
in
push
xchg
cmpsl
or
scas
mov
xor
xor
mov
enter
mov
mov
fwait
xchg
mov
sar
nop
add
push
mov
cmp
pop
xor
jmp
pop
out
add
inc
orl
push
add
mov
stos
mov
dec
int
cmp
imul
add
ja
xor
inc
mov
orl
xchg
bound
push
jno
loop
pop
loop
stos
stos
inc
pop
push
and
scas
mov
mov
fdivs
pop
push
fsubrs
movsb
pop
add
jmp
imul
add
jp
jae
inc
loop
je
mov
jl
pop
mov
movsl
add
gs
and
das
icebp
ss
jns
cmpsl
push
into
rclb
mov
jne
cmp
jle
das
mov
sub
push
nop
add
push
aam
sub
scas
lcall
xchg
pop
lahf
or
movsl
mov
jg
rcrl
jge
fmuls
mov
jbe
or
and
cli
dec
shrb
loope
outsb
push
jne
mov
mov
subb
add
aad
xlat
adc
hlt
jae
mov
sub
add
negl
divb
push
fstps
push
jg
loope
mov
add
pop
mov
dec
xor
mov
dec
pop
lret
cmp
test
shl
mov
pop
stos
rolb
mov
mov
dec
mov
cmp
mov
add
jle
add
sub
xchg
jg
les
push
sarl
out
cmp
imul
cmpl
mov
inc
inc
jle
xor
in
and
mov
cmp
aas
pop
hlt
scas
mov
dec
lods
push
movsb
jle
out
xchg
mov
int3
out
add
mov
push
pop
aas
movsl
mov
cwtl
repnz
fistpll
out
mov
push
xlat
stc
cmp
lahf
lds
sub
outsb
push
mov
sub
push
lds
push
add
movsl
loop
push
ret
out
imul
sub
inc
lret
mov
jl
pop
push
add
xor
scas
mov
aam
add
shr
mov
mov
xchg
add
repnz
out
jmp
push
push
scas
fwait
lret
dec
scas
cmp
in
jns
jl
dec
loope
addr16
push
xlat
add
inc
icebp
das
sub
xchg
jmp
or
adc
gs
push
aas
add
clc
mov
lea
or
adc
in
jl
xchg
les
call
push
jg
stos
xchg
mov
fs
test
add
xchg
ds
sti
scas
dec
mov
xor
int3
jg
scas
xchg
lds
int
cmp
lods
or
ds
pop
mov
lods
jae
div
lea
movsl
fmuls
jp,pt
or
cmpsb
cld
rolb
sbb
mov
sbb
add
imul
inc
sub
jo
imul
inc
shl
sbbb
jmp
insl
jno
popl
push
rcrl
mov
dec
les
into
xor
add
cmc
call
jmp
mov
add
ljmp
or
int
scas
ds
and
mov
fiaddl
push
or
xor
in
lret
adc
lods
push
dec
scas
mov
shlb
ds
mov
pop
push
mov
int3
add
or
das
mov
inc
sbb
mov
adc
mov
call
cltd
jg
jne
or
ja
shll
ja
mov
pop
cmp
dec
jmp
ret
add
cmp
scas
xchg
les
mov
add
lods
jo
add
push
out
add
add
mov
popa
dec
jnp
xlat
std
mov
jmp
add
pushl
push
adc
sub
mov
or
das
xchg
inc
repz
enter
push
xchg
shl
and
std
jl
bound
in
adc
cmpsl
add
add
add
adc
outsl
outsb
cltd
test
pop
push
fldl
daa
or
push
sbb
inc
scas
mov
es
add
ds
fs
jge
lods
add
imul
testl
mov
add
adc
mov
push
push
ret
inc
stos
dec
add
mov
add
add
push
imul
inc
mov
ss
in
mov
inc
add
xchg
or
pop
xor
push
movsb
enter
mov
mov
flds
fmull
mov
jmp
inc
dec
mov
cmpsl
sub
adc
lds
aam
push
in
pop
xchg
ret
inc
fimull
iret
pop
pop
pop
pop
pop
inc
mov
test
icebp
dec
ds
fs
jmp
cmpsl
fstpl
pop
xor
add
push
lcall
fldcw
sub
outsb
mov
clc
dec
xchg
lcall
jge
lock
add
add
add
or
insl
pop
mov
inc
xchg
cwtl
mov
mov
sbbl
int
das
inc
or
lods
ds
fiaddl
jne
fmul
add
ds
fs
les
lods
or
sub
add
push
push
testb
pop
mov
sbb
inc
push
es
mov
mov
icebp
sub
cmpsl
or
js
mov
pushf
les
or
push
dec
out
mov
add
outsb
int
add
and
mov
orb
stos
movsb
add
test
loope
imul
add
push
sbb
cwtl
lods
outsb
push
xlat
lret
jle
and
ret
movsl
push
mov
xor
and
mov
jg
push
xor
sub
ljmp
inc
inc
push
jne
lret
sbbb
add
std
in
push
and
js
add
arpl
add
loopne
push
enter
push
dec
jmp
aad
push
mov
popl
cld
mov
lods
sbb
add
in
fistpll
pop
faddp
dec
inc
movsb
add
push
adc
and
scas
lea
pop
add
das
inc
dec
lcall
ljmp
fnstenv
negl
or
outsb
inc
bound
imul
idiv
dec
lods
or
push
pop
push
dec
popa
bound
cmc
push
pop
xor
or
push
outsl
je
jo
syscall
push
imul
gs
jecxz
xor
inc
popa
jo
mov
outsb
adc
fdivl
testl
pop
pop
add
sbb
or
xor
inc
push
loopne
push
pop
inc
inc
xor
xor
pop
inc
dec
inc
add
or
sbb
pop
push
arpl
dec
or
jns
adc
push
mov
insl
gs
cmpb
xor
xor
or
call
sahf
push
sti
sub
adc
ret
enter
cwtl
test
in
adc
sbb
dec
inc
jne
and
dec
mov
imul
int3
lods
movb
push
int
adc
push
mov
divb
mov
mov
add
loopne
gs
subl
jmp
sub
adc
add
inc
mov
or
ja
mov
add
sub
push
aad
add
aam
das
inc
gs
xchg
jo
sysenter
jp
adc
xchg
pop
push
inc
jne
jecxz
mov
les
cmp
js
lcall
imul
lahf
sti
and
or
jmp
inc
ljmp
mov
dec
mov
push
mov
sarb
and
dec
pop
insl
sub
push
push
xor
inc
xor
xor
dec
and
and
add
add
and
push
push
mov
adc
fptan
add
and
inc
mov
add
jo
mov
adc
add
add
nop
add
add
cmp
push
add
and
ja
cmc
sub
cmp
call
je
inc
cmp
fdivrl
push
jno
add
inc
out
dec
iret
rcll
call
jp
sahf
add
mov
cmp
sub
add
xchg
in
or
adc
jbe
xlat
dec
enter
sbb
or
mov
cmp
nop
push
shlb
inc
sub
push
xchg
aaa
enter
pop
insl
loopne
sub
inc
mov
scas
scas
iret
jmp
mov
rcl
clc
push
inc
mov
int3
jnp
cmp
pop
loop
bound
jb
lods
loop
push
xor
cmc
dec
cwtl
add
mov
out
call
lret
jl
hlt
jb
and
ficompl
stc
jnp
ss
les
sub
ret
cmp
or
loope
inc
or
jge
xchg
push
mov
mov
imul
sbb
outsl
push
fs
imul
clc
sub
push
jge
or
vmwrite
sub
jl
push
push
test
mov
jge
jbe
cmc
mov
mov
test
scas
cmp
bound
pop
dec
arpl
popf
push
push
out
shrl
jo
aad
pop
cmp
roll
rcrb
and
lea
jne
or
not
mov
cmp
cmp
jmp
lods
sub
sub
pop
mov
lcall
lahf
dec
sbb
sbb
inc
test
mov
adc
subl
jae
cmp
popf
jle
imul
xchg
fidivs
jae
repz
mov
inc
push
sbb
sub
lods
mov
push
lea
mov
lods
and
in
subb
movsb
adc
cs
pop
sub
or
jb
jle
fldt
les
pop
sub
xlat
lds
mov
push
or
leave
outsl
rclb
sbb
mov
call
jb
xchg
insl
inc
jle
xor
insl
leave
in
out
xor
bnd
cmp
jb
mov
push
or
das
call
fcmovne
sbb
shll
ss
aam
jno
and
mov
push
mov
movsb
flds
xor
std
add
das
push
arpl
sub
pushf
mov
adc
cld
mov
je
dec
repz
test
test
leave
insl
jp
or
mov
pusha
lret
js
cmc
mov
scas
stos
inc
cmpsb
xchg
ja
or
cmpsl
mov
test
call
sub
pop
sbb
arpl
pop
call
sub
fxch
hlt
inc
je
push
cli
fisttpll
push
outsl
call
rcrl
movsl
sbb
xchg
mov
rclb
mov
or
lcall
sbb
and
and
jmp
mov
into
or
aam
divl
outsl
sahf
xor
call
xor
add
fwait
mov
dec
rorb
les
out
pop
in
xor
out
or
and
mov
adc
daa
dec
test
inc
sarl
std
inc
scas
or
push
push
call
fcomp
mov
cmp
dec
pop
mov
vhaddpd
inc
fsubl
shll
mov
gs
pop
push
push
out
notb
out
aas
dec
xchg
lcall
adc
jo
or
jo
mov
rcrb
stos
scas
das
cmc
rcll
xchg
adcl
cmc
repz
clc
push
add
xchg
in
pop
inc
mov
and
inc
sub
loope
sub
adc
in
mov
sub
test
test
aaa
pop
push
pop
pop
dec
ja
loopne
sbb
mull
sti
mov
movl
call
gs
es
popf
cs
test
je
inc
dec
cmc
ret
nop
pop
das
xor
sbb
jmp
hlt
in
cmpsl
fucomp
fwait
out
andb
cmp
fadds
push
adc
gs
adc
iret
sub
loopne
ljmp
ret
iret
cmp
mov
inc
mov
scas
pop
daa
test
das
mov
and
pushf
push
mov
mov
jg
mov
ss
ss
mov
mov
xchg
push
ss
shll
pop
call
lahf
les
sbb
mov
mov
nop
sbb
lret
jge
mov
sarb
dec
and
arpl
pop
sub
pop
adc
test
fs
fisubrs
fldenv
pop
mov
in
fisubrl
int3
and
add
ret
push
add
mov
stos
xor
nop
xchg
outsb
dec
outsb
ret
cmp
call
jmp
scas
mul
nop
dec
out
shll
xor
stc
mov
push
xor
gs
sub
cmpsb
xchg
fldenv
lahf
jns
mov
imul
repnz
jmp
inc
or
insl
rol
cli
mov
sub
mov
cmpsb
mov
or
cli
pop
int
xchg
ds
jecxz
inc
mov
cmp
aas
mov
pushf
fnsave
aam
in
repnz
outsl
cwtl
push
sub
ficoml
ret
dec
sti
test
sub
mov
sub
mov
adc
hlt
orl
push
inc
xchg
dec
aam
lds
xchg
lock
imul
and
scas
and
jbe
outsb
and
or
jb
out
mov
dec
pop
pop
in
lock
push
pushf
xorps
fdivrp
xor
inc
std
aaa
cmc
nop
add
add
sub
lods
addr16
jnp
jo
xor
adc
mov
dec
es
jg
xchg
sbb
sbb
in
pop
sub
std
mov
xor
push
mov
push
adc
mov
sub
shlb
jae
inc
lea
mov
xchg
xor
mov
jecxz
in
and
mov
fs
pop
mov
gs
insb
or
add
add
sbb
mov
nopl
fstl
divb
cwtl
mov
add
jg
sbbb
and
pop
negb
clc
shrl
popf
loopne
xor
jo
xchg
lret
out
jge
mov
sbb
jp
test
sub
xor
pop
test
lcall
popf
sub
xor
mov
inc
pop
mov
jnp
mov
jle
dec
hlt
or
lds
pop
jle
cmp
mov
jl
pop
sbb
loopne
and
xchg
or
fdivl
mov
mov
shrl
mov
test
cmp
xlat
jnp
arpl
jb
pop
leave
jg
lock
fistl
or
decb
xchg
pusha
bnd
or
outsb
and
fistpll
int3
fsubrl
je
lock
mov
aas
mov
cmp
push
pushf
pusha
xor
cmp
push
repnz
push
call
push
xor
arpl
mov
push
gs
mov
insb
inc
std
jl
test
xchg
ret
push
inc
xchg
xor
push
js
sbb
jno
fistpl
push
cmc
sub
inc
sbb
or
movsl
repnz
ss
loop
mov
lock
cmp
jle
mov
stos
cmpsl
push
stos
sub
insb
inc
jnp
mov
sti
push
stos
js
popa
rcll
jg
pop
scas
mov
lods
out
ficoml
fwait
jmp
ja
das
push
pop
mov
jne
jl
mov
imul
cmp
or
sbb
sub
dec
ds
adc
ja
clc
inc
pop
mov
adc
jle
push
dec
cmp
push
mov
pop
jp
push
hlt
daa
add
movsl
or
adc
and
clc
call
fwait
std
rcrl
loope
inc
mov
sub
imul
jne
insl
and
movsl
ja
cmp
inc
roll
push
divb
push
mov
out
icebp
sti
push
sbb
adc
mov
sbb
push
dec
dec
scas
lea
into
xlat
xchg
icebp
mov
cmp
adc
stc
fstps
into
mov
in
pop
or
dec
xor
lock
pop
pop
dec
inc
xorl
push
push
mov
je
mov
cmc
mov
mov
mov
fcomip
data16
popf
subl
sbb
xlat
js
inc
cs
xor
mov
dec
cmc
or
adc
fnstsw
sbb
push
add
lds
xor
push
pushf
pop
ficomps
dec
aas
lods
add
pop
shll
xlat
and
jbe
je
xchg
insl
and
xchg
and
mov
sbb
add
cmp
aas
enter
mov
lcall
loop
sbb
mov
pop
jp
mov
push
sub
hlt
add
xor
cs
push
pop
jg
std
es
sbb
sbb
and
inc
jae
lcall
imull
sub
mov
sti
mov
or
jl
pop
gs
bound
sbb
jle
xchg
adc
into
jae
or
lcall
jne
pop
push
adc
xor
inc
mov
xchg
and
dec
dec
add
sub
in
shlb
ja
imul
inc
lods
jnp
out
popf
push
mov
xor
lock
mov
repz
loop
adc
mov
in
roll
xchg
pop
and
bound
insb
in
decb
fs
loop
and
cmp
dec
leave
in
test
sarl
push
push
and
xorb
cmp
loopne
cmpsb
and
ljmp
add
lret
adc
leavew
push
inc
aad
push
jne
or
push
shrb
scas
je
sbb
pop
mov
jl
int
dec
adc
lods
bound
call
loope
movsb
out
sub
xchg
fildl
push
sbb
lods
and
cwtl
lcall
mov
ja
mov
sti
mov
mov
call
int3
jae
sub
nop
lds
adc
xchg
cmp
or
test
sbb
cwtl
sbb
push
scas
xlat
shrb
sbb
aas
dec
pop
or
push
pushf
addr16
mov
push
cmp
jne
fcomi
add
enter
push
int3
xchg
scas
mov
lahf
cmp
mov
stc
add
pushf
lea
jne
push
dec
mov
call
stos
pop
data16
xor
inc
jbe
jnp
es
ds
push
inc
sub
data16
outsb
jbe
pushw
push
inc
jnp
pop
data16
push
inc
jbe
push
outsb
jnp
push
inc
dec
jnp
push
jb
jbe
push
jnp
cs
cmp
rclb
push
sbb
inc
repz
push
pusha
and
and
int
es
xchg
xor
je
rol
sahf
out
mov
adc
js
cltd
enter
out
popf
daa
mov
mov
rcr
pushl
adc
pop
sub
mov
add
out
mov
pusha
jns
cmp
iret
out
inc
pop
cmp
test
xchg
add
jns
jno
jg
sub
iret
pop
pop
push
scas
stos
and
mov
insb
es
fmull
dec
jl
cmc
lods
ret
add
out
clc
mov
fldcw
inc
sub
jbe
iret
stos
addr16
jmp
mov
fcompl
sub
insl
inc
or
cmc
jo
outsl
sbb
cmp
xor
mov
cs
add
in
lea
ja
call
add
inc
gs
outsl
fs
gs
imul
add
add
inc
popa
clc
cmp
das
std
mov
loopne
mov
push
xorb
xlat
mov
fldenv
ljmp
cmp
adc
inc
or
jae
lcall
xchg
frstor
xlat
sub
pop
fsubrs
dec
aaa
icebp
insl
pop
xor
cli
dec
xor
sub
cmp
pop
inc
popa
hlt
xchg
je
mov
cmc
ficompl
insl
loopne
mov
sahf
lea
ja
pushf
inc
lea
not
push
inc
sub
add
and
add
xor
xchg
inc
movsbw
mov
rcr
mov
clc
push
cmc
bsf
xor
rol
mov
pusha
movw
stc
clc
sub
mov
rep
movzbl
mov
pushf
pushf
lea
jmp
add
cltd
data16
lcall
lock
and
sbb
xchg
movl
cmp
cmpsb
cmc
and
in
aad
sbb
mov
push
push
xor
repz
ss
aam
outsb
add
xchg
jp
cmp
outsb
hlt
add
shll
in
mov
je
add
js
cmp
push
pop
pop
inc
test
movsb
push
mov
or
lea
add
aad
mov
or
in
dec
add
test
mov
push
inc
stc
addr16
inc
mov
pop
xchg
icebp
sbb
data16
lods
or
add
sar
pop
sbb
std
dec
add
add
es
adc
pop
mov
stos
pop
dec
adcl
mov
pop
cs
mov
add
fxtract
xchg
fwait
inc
scas
add
pop
lock
mov
push
sbb
xchg
add
cmp
fs
aas
stos
dec
rorl
ja
add
xchg
mov
dec
in
int
clc
or
mov
cmp
add
std
inc
cmp
aaa
cmp
lahf
or
enter
int3
add
scas
ljmp
pop
leave
ffree
int
gs
xlat
mov
mov
xor
jae
pop
je
cmpsb
dec
pop
jo
cmp
inc
pusha
es
sub
add
dec
aam
stc
daa
fisttpll
add
fs
pop
test
pop
add
movl
add
ret
lret
pop
add
push
test
add
shrl
adc
pop
and
jb
add
pusha
lds
push
add
jbe
mov
push
xor
add
lds
or
loope
in
add
add
loopne
push
add
pop
sub
pop
scas
call
xor
les
insl
enter
or
push
or
mov
add
cmc
pop
and
aas
and
sbb
insb
jnp
push
jge
das
cli
aaa
rolb
add
andb
xchg
push
add
sarb
add
popf
inc
sub
je
add
mov
dec
dec
in
mov
mov
nop
sbb
push
clc
add
cli
pop
mov
call
pop
mov
out
sub
stc
ds
add
xchg
dec
out
cmp
add
hlt
jno
sbb
mov
adc
dec
add
cmp
mov
push
jbe
adc
and
sub
iret
mov
fimuls
in
test
fnstcw
or
xorb
sbb
sbb
cmc
cld
add
das
lea
icebp
xchg
loop
inc
faddl
jae
and
mov
incl
add
rcr
or
inc
dec
adc
and
mov
enter
mov
mov
outsl
pop
inc
cmp
add
jae
mov
lock
sbbl
push
pop
lds
add
xlat
hlt
dec
pop
cwtl
mov
sub
testl
add
add
fs
xchg
ljmp
cmpb
outsb
scas
push
lods
add
movsb
jl
test
out
push
cmp
and
jmp
cmpsl
mov
mov
das
lret
mov
insl
stos
imul
iret
ret
outsl
and
fucom
cli
push
add
mov
movsb
out
sti
out
add
sarl
sbb
inc
lahf
xchg
xor
xor
sub
push
pop
pop
outsb
push
inc
fidivrs
dec
fnstcw
mov
add
push
inc
insb
mov
push
add
out
ljmp
pop
das
jg
xchg
jmp
jge
in
orb
decl
mov
lahf
test
pop
pushf
sub
add
fwait
idivb
mov
add
pop
push
push
add
push
mov
xchg
fsubp
add
fwait
push
jne
in
mov
int3
test
ss
imul
mov
sub
ret
loope
addb
and
add
fwait
imul
mov
xor
lret
add
pop
mov
mov
fwait
add
or
add
sbb
cmp
jl
add
mov
popa
mov
push
pop
mov
dec
fildl
fidivs
add
push
mov
lds
xchg
jmp
fsubs
or
fldcw
icebp
lock
add
jne
mov
add
push
dec
dec
xchg
daa
xchg
subl
xor
dec
test
xchg
pop
mov
jo
lahf
and
aam
pusha
push
rclb
xchg
mov
xor
add
add
push
das
fcomps
daa
std
fcoml
test
push
fcompl
ret
pop
dec
xchg
loope
pusha
xlat
mov
and
or
xor
data16
mov
mov
add
lock
popf
push
movsl
rcrl
nop
test
addb
push
insl
jno
add
fists
fs
in
mov
inc
outsl
sub
pusha
push
cmpsl
pop
mov
dec
add
lret
xchg
and
mov
push
dec
dec
pop
int3
shll
add
add
clc
mov
adc
sbb
ret
std
and
xchg
lcall
lods
add
add
ljmp
lea
pusha
cmp
int3
mov
xchg
dec
dec
pop
imul
shrb
sub
jnp
jae
add
stos
fdivr
cli
add
incl
pop
les
xlat
movsl
outsb
lret
and
or
adc
xor
fcmove
ss
dec
test
add
mov
mov
sbb
rcl
ljmp
mov
popa
andb
push
movl
mov
jne
pop
call
mov
les
movsl
das
mov
add
push
add
mov
addr16
enter
ds
flds
and
adc
lds
push
pop
cmp
lret
sbb
and
add
sub
cmp
add
pop
cmp
outsb
mov
dec
popa
mov
jns
add
adc
fnstcw
icebp
sub
js
cmp
cltd
lret
add
or
mov
add
pop
dec
and
and
or
call
push
jne
or
in
negl
cmpsb
mov
repnz
in
add
fnstsw
out
mov
lods
psubusw
shr
pop
add
mov
mov
out
or
jmp
add
cs
jge
cmc
add
rclb
iret
add
jne
insl
loop
pop
scas
pop
push
mov
inc
stos
xor
pop
adc
ret
inc
loope
pop
add
sahf
jmp
add
lahf
es
add
add
jl
mov
bound
xchg
cvtps2pi
mov
rclb
push
ljmp
fmuls
inc
stos
fs
and
stc
jecxz
aaa
and
and
sti
fcomps
add
sbb
in
sbb
fidivrl
xor
xor
push
fldl
imul
sbb
push
cmc
pusha
jg
dec
jecxz
xorl
jl
pusha
jp
test
push
repnz
call
fldcw
dec
jns
add
xorb
sarb
add
jno
rcrb
push
leave
rcl
or
or
daa
jne
cmc
aas
imul
dec
movl
out
inc
add
push
imul
sbbb
lmsw
or
sbb
cmp
sub
div
mov
mov
ficoms
ja
xor
mov
iret
addr16
scas
call
aam
and
popa
inc
pop
add
push
inc
fs
add
sub
push
outsl
add
outsb
fisttps
fadds
mov
test
jl
xchg
mov
add
stos
cmp
in
or
popa
imulb
cli
xchg
push
jle
repz
xchg
jge
ja
add
xor
mov
xor
scas
jno
cli
and
out
push
xor
jmp
cmp
rcrl
mov
xchg
int
mov
clc
rclb
mov
inc
xchg
mov
add
lock
into
fadds
add
inc
lahf
dec
repz
add
enter
xchg
out
and
aaa
lds
xchg
lret
repz
mov
cld
out
adc
add
cmc
inc
les
cmp
xor
sub
add
shlb
mov
mov
fildll
iret
ds
xchg
xor
lods
test
push
sbb
and
inc
xor
popa
nop
add
jp
ss
jbe
or
int
popf
pop
out
add
mov
mov
push
repnz
jo
pop
jae
fsts
inc
sub
adc
out
fcmovu
addl
movsb
pusha
loope
rolb
mov
aam
add
inc
ss
add
sahf
aas
imul
jg
or
jo
repz
lock
sub
inc
add
dec
mov
cmp
or
pushf
and
add
popf
and
pop
lods
pop
std
or
pop
add
fisttps
scas
cmc
sbb
mov
push
xlat
push
add
dec
or
inc
mov
cmp
mov
sbbl
jno
lahf
mov
mov
push
and
jl
or
in
jg
sbb
mov
mov
pop
mov
aas
add
mov
loopne
fiadds
adc
push
xchg
xchg
add
add
cld
test
add
inc
mov
mov
add
outsl
popl
xchg
add
fsubl
mov
cmp
add
repnz
bound
jae
cmp
cmpsb
mov
xorb
leave
cmp
cmpsl
icebp
mov
adc
jg
cmpsb
mov
and
add
cltd
out
dec
loope
xchg
xor
in
lret
fsubl
push
push
mov
cmpsl
jbe
jno
mov
xor
dec
adc
adc
movsb
sub
inc
sub
cmpsb
mov
mov
in
negb
cwtl
dec
mov
aam
fwait
iret
cmp
push
add
sbb
add
popa
mov
mov
jne
mov
pop
cmpsl
ficompl
mov
lods
push
iret
pop
add
pop
movl
rolb
mov
ljmp
xchg
mov
das
inc
outsb
push
rorb
enter
push
adc
adc
nop
stc
int
jno
push
loop
arpl
push
sub
inc
sbb
cs
sahf
call
adc
or
xor
out
mov
jg
add
push
lahf
enter
outsl
pop
add
add
in
js
dec
lods
fdiv
pop
add
out
mov
add
sub
scas
roll
mov
adc
repz
mov
loopne
add
mov
imul
add
and
lock
insb
mov
in
add
push
leave
aaa
pop
lret
ljmp
xor
dec
sbb
fmul
jmp
xor
xchg
pop
add
jmp
push
ret
loop
push
xchg
pop
fisttpl
jg
cmp
jns
inc
pop
sub
jae
cmp
in
les
add
insb
lea
nop
fdiv
sbb
xor
cmp
mov
push
pop
in
test
and
dec
es
mov
inc
fcomip
sbb
pop
aad
fs
dec
add
mov
fcomps
add
loope
in
sahf
sar
int3
adc
add
test
dec
orb
idivb
pop
leave
mov
cmovs
and
push
rcrb
in
xor
or
pop
sbb
push
cmc
mov
mov
jmp
cmp
enter
adc
rcr
sub
pop
out
or
iret
pop
cmp
incb
testb
ds
xchg
sub
orl
mov
add
loop
cmp
push
pop
adc
add
js
add
xor
scas
dec
xor
lods
shr
mov
add
jmp
cmp
aad
shl
and
push
sbb
orb
test
jb
faddl
jbe
ss
sbb
pop
mov
cmp
arpl
sbb
mov
push
rcll
cld
add
xchg
pop
into
mov
sbb
inc
add
movsb
ljmp
push
fs
pmulhw
les
cmpsb
or
cld
push
ds
xor
dec
fmull
mov
mov
call
insl
shr
add
cmp
push
mov
popf
ret
mov
les
mov
pop
clc
nop
repnz
add
lret
and
xor
adc
add
add
outsb
pop
shrl
jns
add
imul
popf
jmp
sub
fwait
push
or
into
pop
add
xlat
int3
sbb
clc
mov
push
out
jbe
popa
lock
add
jecxz
cmp
and
popf
sahf
bound
sbb
fiadds
push
push
add
outsb
adc
and
xchg
adc
inc
pop
sub
mov
adc
add
and
sub
xchg
add
or
fwait
mov
xor
filds
popa
test
stos
pminub
mov
inc
and
or
push
xchg
jl
cs
outsl
or
mov
movsl
add
xchg
leave
cmc
xchg
pusha
les
add
mov
repnz
test
and
popf
js
movl
cmp
loope
mov
pop
pop
lock
add
fstpl
mov
push
pusha
pop
aas
xchg
cmp
imul
cmp
movsl
sti
push
cmp
dec
pop
mov
mov
push
add
pop
ja
jo
add
movsb
or
pop
test
loop
orb
cmpsb
mov
je
xchg
pop
daa
pop
push
add
add
jns
xchg
dec
or
add
fadds
dec
int3
out
adc
mov
call
add
pop
gs
adc
mov
movsl
mov
fisubs
lds
sub
out
add
das
add
in
add
mov
dec
add
add
xchg
inc
in
aam
jecxz
mov
sub
pop
add
cmp
mov
orl
jne
out
mov
rorb
dec
fcomps
bound
lcall
inc
add
mov
xor
lahf
jae
inc
mov
inc
xchg
cmp
sub
aas
lods
xor
push
rorb
ds
roll
pop
xor
popf
pop
mov
stos
les
inc
add
push
lret
test
faddl
or
out
add
mov
pop
xchg
add
ljmp
pop
popa
scas
xor
and
mov
sbb
add
mov
in
insl
arpl
mov
ret
lock
pop
add
add
mov
dec
shlb
add
mov
es
cs
cmp
popf
andl
lcall
adc
std
pop
inc
adcl
sbb
inc
jge
mov
cwtl
icebp
add
sub
pop
push
notl
xchg
call
add
testb
sahf
cmp
test
and
nop
dec
lahf
sbb
shlb
in
sbb
in
add
out
pop
xor
xchg
add
iret
add
test
mov
cs
jne
add
xchg
mov
loope
cmp
and
lock
and
addl
pop
cmp
js
in
add
jno
inc
pop
out
dec
mov
mov
pushf
insl
push
and
bound
push
mov
decb
adc
mov
dec
cmp
pop
push
and
jp
add
push
mov
ss
sbb
stos
dec
add
rcrb
or
loop
out
shl
push
push
arpl
or
xor
dec
cmc
cmp
dec
sub
mov
imul
mov
fs
mov
mov
orb
or
aad
ds
mov
inc
xchg
mov
jo
cmp
cli
push
sbb
jno
loopne
add
add
adc
push
jge,pt
mov
pusha
ret
add
mov
das
mov
decb
adcb
inc
and
test
add
rolb
int3
fcmovnb
mov
xchg
push
add
push
jp
and
mov
or
les
dec
cli
inc
inc
in
sub
cmp
add
push
mov
xchg
add
mov
add
cli
sub
cmp
jns
push
addl
push
add
push
pop
std
or
aaa
mov
xor
dec
int
push
push
insb
pusha
sub
and
add
sbb
jno
loopne
add
or
and
popa
pop
or
add
mov
or
cltd
add
jbe
mov
add
out
jb
dec
xorb
cmp
adc
sub
aas
cmc
rcrb
testb
fisttps
inc
testl
adc
lock
lods
cmp
fiadds
mov
xchg
dec
rolb
jl
sub
and
pusha
add
add
dec
add
cmc
push
pop
mov
fistpl
add
ljmp
add
testb
movsl
out
pop
fcomps
cwtl
fldcw
ret
std
jmp
sub
push
mov
dec
inc
sub
xor
data16
jle
popa
push
jp
xor
add
flds
push
add
sub
mov
add
jp
mov
sbb
jp
loopne
add
jno
or
sar
fiaddl
lcall
xchg
add
sub
adc
int3
adc
shrl
add
scas
and
lods
add
fisttps
sub
xchg
int3
imul
sbb
adc
out
cmp
roll
je
nop
push
imul
mov
xchg
lret
add
cmpl
scas
stos
loopne
je
add
cld
adc
cvtps2pd
in
aas
int
addl
and
add
xchg
fst
cwtl
pop
lcall
add
out
xor
add
mov
lret
jecxz
jp
dec
sahf
cmpsl
in
rorb
loop
inc
xchg
stos
add
pop
leave
std
sbbl
pusha
add
rolb
rcl
pop
enter
jae
xor
fldt
repz
jo
xchg
cmp
push
jg
add
scas
inc
sbb
pop
sbb
lods
lea
pop
icebp
xchg
and
add
jbe
outsb
xlat
nop
cltd
sbb
mov
in
and
xor
cmp
add
incl
pop
pop
mov
adc
dec
fdivp
add
movsl
mov
mov
test
stos
loopne
or
movsb
or
pop
enter
js
xor
xor
rcrb
add
inc
enter
jb
cmp
pop
rolb
sub
nop
in
loopne
jno
jmp
fsts
jo
add
add
testl
out
nop
mov
fldl
sti
pusha
push
sbb
test
imul
or
or
ret
fstpt
mov
testl
sti
pop
lods
in
mov
adc
mov
mov
idivl
pop
fisubrl
int
push
repz
rcr
jmp
add
push
out
insb
int3
sub
ljmp
addps
inc
rorb
pop
adc
xor
cmp
cli
rcrl
sub
loopne
cmp
push
out
ss
test
xor
or
xor
add
jg
fiadds
add
adc
subl
mov
inc
out
cli
pop
repnz
or
cs
in
xchg
sbb
mov
jecxz
orl
aam
int3
pop
inc
add
popf
gs
dec
add
mov
test
or
cltd
loope
fistps
shlb
mov
push
mov
jge
cmp
xchg
mov
cs
ffreep
add
shl
fcoml
sahf
add
and
lahf
add
cmovp
rcrb
ret
sub
scas
movsb
mov
and
lods
fadds
push
add
je
xchg
popf
das
add
repnz
xchg
and
pop
into
adc
rolb
sahf
sub
xor
popa
jge
pusha
gs
inc
mov
into
mov
insb
jbe
add
fcomps
lret
push
add
pushf
push
in
filds
inc
jne
nop
inc
mov
repz
pop
orb
int
popf
loopne
add
cmp
repz
mov
jo
xchg
repnz
jg
push
push
pop
mov
push
pop
adc
pushf
mov
mov
stos
mov
inc
jbe
add
mov
inc
inc
rclb
inc
dec
add
adc
cld
lock
sbb
call
add
sbb
mov
imul
mov
mov
or
stos
dec
pop
xorb
xor
aaa
add
xchg
push
int3
andl
leave
lods
pop
xor
jmp
insb
mov
test
or
aad
push
popf
or
jmp
dec
add
dec
xchg
sub
sub
test
hlt
insl
mov
jp
push
add
push
adc
pop
lahf
add
pop
pusha
sbb
into
push
arpl
fldt
pop
push
add
pop
cmpsl
das
add
mov
aad
and
add
mov
nop
push
sbb
pop
adc
add
mov
lret
add
and
xor
dec
xchg
mov
fbld
xchg
pop
cmp
movsb
push
int
cmp
mov
inc
adc
dec
fs
inc
jl
pop
cmp
or
shl
lcall
add
mov
stos
push
mov
decl
add
jecxz
and
add
dec
out
ret
mov
cmp
into
and
mov
jmp
cmp
test
pusha
xchg
rcrb
dec
cwtl
outsl
rolb
jle
data16
cmp
pop
call
inc
jle
jb
repnz
stos
jo
aam
jae
add
sbb
xchg
mov
dec
inc
mov
adc
xor
jg
loopne
add
mov
push
add
insl
sbb
test
add
xor
add
lret
cmp
add
inc
mov
pop
jne
dec
testb
jg
loopne
jno
pop
imul
adc
push
inc
push
aas
mov
cld
add
cmp
test
pop
push
ja
mov
adcl
stos
adc
cmpb
mov
cmp
lcall
add
push
sbb
jp
out
or
jo
mov
imul
repz
cmp
sub
ljmp
loopne
add
dec
xchg
mov
add
into
test
jo
cmp
push
add
cwtl
push
andb
cmp
pop
rolb
out
add
sbb
add
mov
je
mov
sbb
mov
mov
add
sub
lea
mov
lret
dec
mov
add
dec
push
cmp
add
sub
mov
hlt
into
aam
js
push
fnstcw
jl
pushf
sub
or
push
add
js
xchg
into
pop
rolb
xchg
add
in
sbb
aam
cmpsb
fidivs
mov
or
add
xchg
mov
pop
int
dec
pop
pop
or
aaa
in
push
sbb
mov
add
push
dec
daa
test
cmpsb
movsb
and
and
add
adc
and
push
mov
mov
aas
xchg
add
dec
leave
xor
mov
popf
outsl
adc
jp
sbb
push
sahf
push
mov
add
data16
cmp
xchg
cwtl
roll
loopne
daa
scas
sbb
fnsave
add
popa
jo
xor
sbb
dec
in
int
loopne
add
mov
inc
and
insl
sbb
out
in
sbbl
leave
es
pop
and
xlat
mov
nop
or
sbb
test
jae
push
sbb
and
jne
fiadds
jmp
call
testb
cmpl
popa
add
sub
sbb
mov
mov
jo
xchg
rcrl
xchg
adc
xchg
aad
repz
mov
add
cli
in
addb
loope
leave
push
push
repnz
jne
xchg
filds
addb
and
ds
xorb
dec
mov
pshufw
loopne
divl
dec
loope
loopne
pop
push
ss
loop
nop
inc
add
jecxz
popa
inc
shll
xchg
mov
arpl
xorb
pop
rcpps
outsb
mov
xor
jle
leave
insb
xchg
test
push
out
jecxz
xlat
add
push
push
pop
jge
int3
jno
stos
das
dec
lret
jmp
lahf
add
int
repz
pusha
insb
in
add
imul
shlb
mov
pop
into
fcmove
add
mov
mov
mov
pushf
sbb
outsl
ljmp
inc
mov
sub
sbb
fcompl
cmpsl
loope
test
add
lgs
dec
lds
add
xchg
add
in
mov
cli
xchg
mov
xchg
add
lret
aad
cld
add
add
xor
clc
mov
jne
pop
mov
and
adc
sbb
loope
adcl
sub
dec
ljmp
jl
es
add
hlt
lods
jle
int
jbe
add
cwtl
mov
mov
xchg
ljmp
dec
test
add
btrl
mov
mov
std
jb
addl
adc
push
and
sbb
daa
iret
add
sti
add
scas
rclb
nop
mov
xor
add
les
das
popl
sbb
fwait
pop
cmpsl
lret
shrl
lret
loopne
sub
jae
loopne
add
cltd
dec
test
dec
cmp
add
pop
jle
fstpl
add
pusha
call
add
and
imul
add
mov
xchg
or
sbb
mov
push
jnp
mov
add
pop
xchg
mov
and
insb
mov
jae
mov
push
pop
adc
push
andb
stc
rsqrtps
std
sbb
xor
movsb
add
adc
add
popa
cwtl
lahf
jmp
jne
insl
lret
mov
mov
adc
mov
popa
or
andb
mov
jo
jl
adc
cli
pop
inc
out
fstl
movb
sub
xchg
mov
add
and
cmp
pop
mov
jl
mov
push
repnz
add
rorw
and
push
fsubrs
pop
bound
add
cmp
xor
mov
mov
ds
adcl
sub
mov
add
inc
or
cwtl
jp
mov
mov
stc
mov
cmpsl
xchg
daa
lock
sub
mov
inc
lret
mov
xchg
lock
loopne
add
aaa
mov
add
or
cld
jo
add
mov
mov
add
icebp
and
movsb
jne
add
and
les
shrb
sub
sub
adc
je
add
adc
mov
sbb
lods
inc
and
sbb
or
xchg
or
int3
mov
pop
and
inc
cmp
fs
mov
cld
mov
pusha
dec
movb
sbb
ficomps
pushl
add
faddl
jo
add
or
inc
cmpsl
in
fildl
lret
rolb
test
add
mov
scas
rolb
out
push
mov
ret
pop
sub
sarb
movl
xchg
cmc
xchg
add
je
rorb
fimull
aas
popa
loop
add
and
adc
sub
or
xor
jb
sbb
sub
mov
pop
xchg
add
or
cwtl
ret
cmp
gs
out
jo
clc
aas
add
cmpsl
dec
jno
jp
movsb
add
je
or
add
inc
and
jl
pop
xor
lcall
cld
inc
mov
sbb
mov
in
xchg
in
cmp
add
idivb
ret
jnp
xchg
pop
roll
leave
add
sub
rorb
inc
fldl
xor
jbe
sub
lods
insb
mov
shr
cmp
lock
mov
xor
sbb
push
add
cmp
cld
lret
sahf
pusha
push
sub
orl
inc
mov
mov
test
sub
bound
loopne
inc
sbb
sahf
mov
hlt
std
shlb
add
addb
ljmp
arpl
mov
or
imul
jp
movsb
pusha
push
call
mov
mov
dec
call
gs
cmp
sub
cld
push
mov
addb
fstpt
jne
add
rcrl
cltd
xlat
mov
xchg
push
pusha
fsubl
add
jo
js
jmp
inc
enter
mov
sbb
add
sub
dec
addb
cmp
scas
jo
push
xor
flds
xchg
sub
addr16
jmp
adc
xor
adc
inc
xor
jb
fiadds
pop
aaa
subb
rolb
aas
inc
xchg
test
inc
or
jl
sbb
pop
pop
outsb
cmc
add
sbb
xchg
jp
cwtl
and
into
jg
add
jae
jns
lea
scas
aas
pop
cmp
or
add
and
dec
add
cltd
sbb
add
cld
cmpb
jle
stos
jns
jae
mov
cmovns
jno
mov
push
int3
jmp
pop
pop
movsl
add
mov
add
mov
int3
bound
add
sub
cmpsl
jno
jmp
cwtl
jno
add
mov
push
ss
or
loopne
add
testl
or
and
js
mov
and
pop
cmp
hlt
add
test
faddl
fbstp
xchg
push
imul
popa
dec
cmp
sub
push
sbbl
add
or
rcrb
pushf
and
test
mov
push
jmpw
adc
xor
lods
jno
sub
call
xchg
add
sub
adc
mov
add
das
mov
out
jnp
add
cwtl
shl
add
mov
add
int
popf
lock
data16
negb
adc
daa
xor
push
add
scas
sbb
enter
icebp
pop
negb
mov
xor
and
xchg
clc
bound
out
rcr
lea
cmc
push
pushf
pop
xor
test
cltd
mov
insl
iret
jecxz
dec
add
cld
jge
add
aad
repz
xor
pop
cli
sub
fiaddl
add
xchg
pop
inc
add
jge
adc
popl
idivl
mov
cmp
cmp
notb
mov
adc
out
cmp
mov
add
mov
xchg
popf
lea
sub
add
ja
mov
out
lods
repz
addb
add
lock
cmp
sbb
mov
jge
push
mov
dec
xchg
push
pop
addb
imul
cmpsb
and
or
jg
or
jmp
lret
cmc
loop
rolb
mov
xchg
cmc
popf
movsl
rcll
push
cli
arpl
insb
test
push
mov
jo
add
xor
lea
push
pusha
icebp
sbb
add
shll
pop
or
dec
sbb
mov
xor
xchg
dec
add
cmp
fwait
pop
add
scas
out
add
jns
push
sbb
adcb
pop
loopne
scas
ret
hlt
adc
mov
or
dec
mov
out
cltd
dec
add
push
lock
xor
pop
cmp
push
mov
push
xor
add
paddq
jo
aas
in
js
clc
loopne
ja
push
add
xchg
aam
popa
addr16
ds
add
lret
mov
jne
test
add
pop
andl
xchg
pushf
jo
in
xor
std
pop
enter
pop
mov
in
ret
sub
fiaddl
aaa
mov
pop
jae
cmp
xchg
mov
xchg
stos
add
lods
addb
in
adc
repz
cmp
jo
or
mov
and
popa
mov
xchg
movsl
hlt
mov
add
aaa
xor
or
jmp
clc
mov
aam
xlat
jge
sbb
out
xor
out
test
cmp
mov
jb
popa
inc
push
outsb
mov
add
push
scas
lods
mov
add
inc
lock
aaa
add
push
hlt
inc
inc
in
imul
arpl
in
cmp
testl
lahf
daa
mov
and
add
lods
fdivr
add
les
pop
inc
aas
mov
xchg
test
inc
push
ret
out
add
xor
mov
push
xor
add
aad
fnsave
xor
nop
add
aaa
pop
sbb
add
mov
cmc
or
xchg
mov
sub
or
pop
arpl
mov
jb
mov
xor
xchg
insb
std
and
and
out
add
nop
xor
mov
sbb
call
sbb
mov
add
jmp
sbb
adcl
shr
rcll
push
sti
jae
pop
pop
lahf
rol
cld
dec
fbstp
aaa
fs
xor
insb
mov
test
fadds
push
sub
sub
hlt
jo
mov
imulb
fwait
cmc
push
ror
fldcw
xchg
push
add
popf
pop
xor
and
and
pop
add
add
roll
mov
popf
mov
cmp
rolb
mov
pop
sub
inc
sbb
sbb
mov
aaa
add
ss
lahf
add
cmpsl
add
lret
jecxz
mov
mov
push
out
and
leave
stos
cld
pop
sbb
sbb
adc
mov
or
or
mov
iretw
mov
lret
add
cmc
jne
mov
je
add
add
lods
mov
mov
rclb
add
adc
into
ja
xor
add
push
lahf
orl
mov
sbb
mov
sbbl
test
icebp
and
or
pop
mov
mov
sbb
sbb
add
jne
xlat
lcall
pop
ficoms
add
filds
jp
add
push
cmp
mov
mov
je
les
ljmp
rcrb
jecxz
int3
js
test
add
sbb
ljmp
sti
lea
iret
fs
xchg
adc
pop
ss
cld
xor
add
or
ljmp
rcr
into
push
outsl
and
outsb
dec
stc
cmp
leave
aad
rorb
or
xchg
js
mov
sbb
and
jne
sbb
push
repz
es
fs
das
push
inc
test
adc
mov
jo
add
dec
and
icebp
adc
jbe
add
test
pop
sbbl
add
push
pop
in
push
ret
or
add
cwtl
mov
add
loope
in
add
inc
cli
sbb
iret
sbb
jns
pop
sbb
sarb
xor
fmuls
mov
add
call
adc
mov
push
mov
test
lods
xlat
push
clc
add
fsubs
fs
adc
add
adc
aad
and
in
inc
sbb
loopne
jo
push
add
and
movb
push
shrl
inc
pop
outsl
xchg
cld
jmp
cmp
cmp
sub
std
sahf
jge
mov
ljmp
imul
lods
add
mov
aaa
sbb
or
mov
pushf
xchg
dec
cmp
aaa
sbb
mov
add
add
add
pop
push
addl
lods
imulb
sbb
add
add
in
ret
xor
mov
sub
jns
pusha
int3
pop
push
add
call
xor
int3
inc
jge
std
pop
stos
test
inc
jno
mov
lock
mov
cmp
adc
inc
movl
fcom
jo
add
xchg
mov
lods
and
xlat
mov
add
jns
xor
addl
inc
addr16
arpl
mov
cwtl
pop
dec
divl
dec
mov
jg
stos
mov
sub
adc
adc
mov
lock
or
fistpll
stos
lods
add
adc
jb
add
mulb
stos
insb
add
add
shll
xchg
add
cvttps2pi
shl
and
adc
dec
lds
xchg
add
fisubrl
fisttps
and
push
add
and
sbb
mov
xchg
mov
ds
or
clc
mov
push
rorl
add
xchg
push
jbe
repz
mov
mov
rorb
xor
or
sub
mov
rcrb
inc
in
je
flds
fmull
test
aas
mov
and
add
cmp
mov
push
xchg
add
mov
xor
int
pusha
cmp
dec
add
sub
adc
cmp
jmp
pop
add
je
rclb
add
decl
sti
and
add
push
jl
push
add
lods
sbb
loopne
dec
fisubl
jbe
call
sbb
xor
cmp
in
cli
jne
cmp
fstpl
cld
cmpsb
cmpsl
add
data16
mov
adc
mov
sarb
out
xor
cs
cmp
push
cmp
fwait
and
dec
jnp
pop
cld
jg,pt
mov
add
scas
icebp
mov
dec
or
in
xchg
cwtl
nop
add
popf
int
dec
divl
adc
cltd
fwait
pusha
fdivrs
insb
ds
test
add
fdiv
sbbl
pop
js
xor
sti
push
cmp
mov
sub
stos
pop
add
mov
ret
adc
xchg
jge
mov
pop
scas
inc
setne
pop
jnp
shlb
loopne
rsqrtps
and
les
imul
or
pusha
aas
cmp
cmp
out
jl
inc
fcomps
xchg
adc
push
push
pextrw
inc
lock
rclb
jnp
cld
jb
push
mov
xor
pop
jne
cmp
mov
dec
or
sbb
xchg
mov
add
xchg
dec
fldpi
aam
xorb
out
jecxz
mov
arpl
lds
pop
lea
push
stos
fldl
jmp
jecxz
mov
stc
in
jge
jno
jnp
cmp
push
into
add
mov
enter
xrelease
inc
lds
add
cmp
lret
les
cli
gs
fcmovu
cmp
je
or
mov
add
xchg
lret
cmpsl
pop
add
add
xor
jmp
or
jmp
xchg
xchg
mov
add
or
mov
sub
aas
push
xor
xchg
or
pop
jno
loopne
sbb
mov
lea
jge
mov
mov
inc
add
pop
fsubl
arpl
jo
add
jp
dec
push
jecxz
test
xlat
cltd
nop
lock
shlb
cmp
xchg
clc
add
mov
push
enter
push
fs
mov
adcb
int
shl
out
ljmp
inc
add
fs
mov
loope
lahf
es
adc
or
push
jnp
jo
add
setle
pop
and
sbb
push
test
cmpsb
das
add
xchg
dec
and
mov
inc
js
sub
xor
push
bound
add
inc
in
xchg
divl
or
int3
frstor
cmp
mul
add
mov
mov
and
mov
pop
and
inc
je
add
jl
mul
jecxz
xchg
adc
lea
mov
cmp
rcrb
sub
xchg
int
adc
and
aas
add
mov
pop
and
jg
mov
sbb
adc
cmc
adc
inc
jne
dec
add
inc
xorb
mov
add
ss
jns
fnsave
and
mov
add
andb
add
cmpsb
scas
fisttpll
mov
xchg
or
in
adc
pop
pop
enter
shlb
sahf
add
das
les
mov
cmp
jecxz
pop
call
inc
xchg
push
add
jne
lock
cmpb
in
sub
ss
loopne
cmp
cmp
cmpsb
mov
pop
movsb
arpl
push
cmp
pop
fidivrs
insl
mov
dec
add
fists
mov
cltd
flds
mov
push
cmp
aas
add
mov
fisubl
out
add
mov
mov
pop
lret
icebp
bound
sub
dec
push
aad
test
add
gs
jecxz
jne
sbb
xchg
mov
in
ja
sbb
mov
stos
mov
add
lods
clc
pop
mov
add
and
ficomps
mov
or
push
inc
pop
dec
lea
mov
push
imul
dec
jb
sbb
inc
adc
sbb
xlat
lret
push
fs
insl
cld
push
xchg
pop
pop
push
and
cmpb
add
xor
xchg
inc
filds
bt
inc
xlat
hlt
push
ret
popa
adc
add
ret
aam
rolb
mov
mov
cli
add
rcrb
xor
rclb
sbb
cmp
bound
push
inc
je
call
push
add
loopne
call
sbb
xchg
sub
sub
add
cwtl
ret
xor
dec
enter
dec
mov
cmp
or
xchg
or
push
add
mulb
faddl
inc
xchg
sahf
sub
dec
in
out
push
add
mov
scas
sbb
pop
pusha
rorl
or
repnz
frstor
or
add
imul
loopne
add
pusha
lahf
iret
fldcw
dec
scas
add
int3
ret
loop
xchg
daa
add
out
test
dec
xor
xchg
cmp
std
pop
sbb
xchg
insl
add
jnp
pop
or
enter
orl
push
mov
iret
push
push
cmp
xchg
aam
imul
inc
cwtl
add
pop
pop
add
nop
xchg
outsl
jmp
les
aam
adc
mov
mov
push
and
push
out
test
add
add
icebp
xchg
add
sbb
iret
cmp
jle
pop
jge
and
stos
in
and
sub
cmp
pop
dec
and
lcall
icebp
adc
xchg
loopne
dec
mov
pop
inc
dec
scas
pusha
or
in
push
mov
fs
repnz
mov
movsl
clc
pop
cmp
pop
ret
flds
jg
lret
cmp
mov
outsl
sarb
loope
or
ret
inc
sub
fsubrp
push
inc
es
cmp
cmp
inc
sarl
xchg
dec
mov
pop
xor
mov
leave
stos
pop
data16
xor
outsb
pushw
xor
inc
sub
push
jnp
ds
inc
sub
outsb
jnp
ds
push
inc
sub
data16
outsb
jbe
pushw
push
inc
jnp
pop
data16
push
inc
jbe
push
outsb
jnp
push
inc
dec
jnp
push
jb
jbe
push
jnp
cs
jo
or
push
cmp
push
inc
out
inc
sbb
mov
jb
repnz
jge
pop
jno
scas
pop
jl
or
hlt
and
adc
pushf
mov
mov
or
push
subb
fiadds
jmp
mov
lock
mov
in
es
dec
mov
int
les
cld
rorl
xchg
adc
sbb
or
xchg
mov
push
adc
in
das
or
fstl
fimull
cmp
push
xchg
iret
stc
subl
cmp
push
test
jno
fildll
mov
lret
or
imul
sub
xchg
ss
scas
cltd
inc
stos
lahf
dec
lods
js
mov
add
data16
testl
scas
inc
shlb
mov
and
out
in
outsl
mov
adc
and
mov
cmp
sub
fsubrl
rdtsc
pushf
xor
mov
imul
js
jnp
mov
mov
jo
xchg
xor
push
lods
push
mov
pop
test
loop
outsb
lret
mov
negl
pop
add
ja
pop
xchg
leave
mov
pop
sbb
icebp
pop
adc
enter
push
ss
or
stc
inc
cmpsb
mov
xor
jno
in
shll
pop
and
aad
mov
enter
lods
bound
inc
sbb
call
xchg
dec
test
jg
jb
xor
pop
push
sub
dec
fmuls
jae
mov
es
mov
nop
mov
xor
pop
fcmovnb
cmc
jle
cld
mov
insb
push
fdivrl
jb
addr16
xchg
je
add
xor
mov
roll
repnz
sbb
or
in
mov
xor
mov
jecxz
xor
cltd
xchg
lcall
fdivs
ljmp
pop
mov
mov
xor
sub
mov
xor
sub
int3
mov
addr16
scas
or
cmp
popf
ret
ss
inc
adc
lcall
shrl
in
add
test
aad
ss
cmp
jb
call
faddl
ret
cmp
mov
fxch
push
mov
jmp
mov
fdivrl
push
add
movsl
pop
fstpl
fwait
mov
pop
div
insb
or
pop
sbb
lock
or
mov
mov
jns
pop
frstor
jmp
pop
ja
lods
js
cwtl
sbb
arpl
xchg
mov
push
sub
in
mov
in
stos
dec
scas
pop
data16
sub
pop
mov
pop
or
iret
push
pop
and
pop
shll
cmp
fbstp
mov
iret
mov
rolb
add
jbe
insb
add
subb
loopne
mov
daa
ret
mov
mov
lds
xchg
in
or
xor
shl
iret
fisttps
mov
jge
push
push
cmpsb
lods
bound
push
and
pop
imul
jo
sub
mov
inc
cltd
lods
stc
mov
and
mov
jno
pop
fwait
into
lods
call
xchg
ss
cld
pop
push
mov
sub
xchg
popf
fisubrl
movsb
cmp
inc
hlt
cwtl
int
xchg
repnz
das
sti
rcrb
ja
adc
mov
testl
push
mov
test
push
push
pop
jmp
ret
cs
outsb
stc
in
pop
inc
mov
out
lods
inc
sub
int3
inc
stos
jae
subl
pop
add
push
mov
mov
xchg
in
cmpsl
inc
sbb
lea
icebp
and
mov
loope
or
xchg
fwait
add
add
lock
ds
jg
adc
lahf
jl
xchg
and
movsb
insl
movsb
cld
scas
mov
cmp
xlat
sbb
jbe
pop
and
popf
enter
xchg
pop
push
jnp
hlt
lahf
movsl
pop
scas
push
loop
mov
adc
dec
mov
pop
push
xchg
pop
scas
jo
mov
popf
das
gs
jns
mov
push
out
dec
and
dec
iret
mov
push
movsl
add
add
stc
push
lock
leave
nop
push
jecxz
jnp
mov
jecxz
repz
hlt
imul
rcrl
pop
jge
jg
adc
pusha
mov
cmpsl
js
jle
cmp
sub
outsl
xchg
roll
addl
loope
hlt
imul
xchg
ret
fistl
loope
in
out
lds
aas
sahf
pop
push
inc
mov
jno
mov
std
and
cmp
pusha
jle
test
mov
push
mov
push
mov
pushf
lea
jmp
lahf
repnz
pop
sub
or
pop
jne
xor
dec
lods
test
pusha
gs
lods
adc
in
mov
mov
adc
sbb
jp
icebp
xchg
popa
ret
xchg
adcl
fisubrl
pop
mov
sti
fistps
xor
lahf
jbe
into
hlt
jno
dec
pop
mov
imul
fdivrl
std
mov
test
add
aas
mov
lods
stc
or
les
and
repnz
xlat
jp
mov
out
push
call
dec
sub
fcmove
mov
push
fstl
cltd
xor
ja
sbb
cmp
jp
fsubrs
or
into
faddp
push
cli
sub
lret
or
inc
ss
dec
cld
negl
jnp
mov
dec
cmp
orl
cmp
insl
pop
ret
push
pop
out
cmpb
repnz
ret
hlt
push
mov
ja
pop
or
jmp
add
jae
jb
gs
je
imul
and
movl
pushf
pushl
ret
jae
bt
pushf
call
in
imul
push
mov
nop
mov
div
or
add
or
sub
stc
add
adc
jle
jl
sub
push
sub
fidivrs
adc
out
adc
scas
insb
ss
dec
repz
stos
push
jnp
dec
ljmp
pop
mov
mov
mov
bound
testl
rol
inc
arpl
test
test
add
dec
sub
mov
addr16
dec
out
pop
jae
or
or
push
dec
daa
shlb
push
negl
adc
adc
imul
jmp
repnz
xchg
or
andl
mov
mov
das
jae
mov
std
imul
popf
in
sub
ret
mov
cmp
pop
leave
sbbb
pop
or
in
sub
sub
dec
dec
sbb
jne
inc
clc
sahf
or
mov
mov
cmpsl
push
mov
adc
rorb
bound
xchg
ficoml
sahf
add
cli
mov
lcall
and
mov
dec
mov
push
lods
outsl
mov
push
pop
out
fldt
and
sub
daa
dec
sbbb
add
gs
int3
add
ss
push
sub
add
jne
jb
loopne
mov
les
call
inc
push
test
les
dec
inc
mov
and
fwait
pop
cmp
inc
fwait
andb
out
js
and
xor
in
stos
jbe
rclb
adc
sti
or
int
xchg
nop
xchg
jecxz
jae
jno
xor
xchg
add
add
push
inc
and
stos
out
xor
or
sub
mull
mov
lret
aam
divb
lahf
mov
dec
pop
adc
je
xlat
test
xor
stos
pop
cs
aaa
xchg
out
arpl
push
jae
mov
lret
out
outsl
dec
xor
pop
mov
gs
bnd
fdivrl
sbb
rorb
inc
repz
call
add
scas
jns
mov
popf
rorl
rolb
mov
mov
add
nop
std
lahf
push
out
xchg
xchg
sbb
mov
aaa
rol
xchg
call
sub
test
nop
adc
cmc
in
movsb
jmp
sahf
rorl
mov
and
and
add
mov
lds
sahf
js
les
push
xor
lds
cmc
push
dec
popf
int
mov
outsb
cwtl
test
mov
sub
push
in
es
ss
cmpsl
and
and
lret
aam
add
gs
or
mov
bound
dec
and
mov
dec
repz
xchg
fs
push
adc
xchg
loope
test
jl
xchg
dec
hlt
cmpsb
inc
jp
mov
insl
int3
jmp
sarb
fwait
mov
push
mov
push
xchg
pushf
pusha
dec
stc
cmc
shl
not
call
pushf
mov
mov
pushf
mov
pushl
ret
sbbl
jno
jg
mulb
pop
pop
test
fwait
mov
hlt
inc
mov
in
lret
push
test
pop
inc
dec
fucom
xchg
movl
das
mov
dec
into
xchg
add
ljmp
cli
jnp
fisttpl
lock
fwait
ljmp
les
or
lahf
std
and
fidivrl
lcall
add
cmc
push
mov
jle
push
gs
jge
pop
dec
ficoms
push
cmp
js
negb
stc
dec
sbb
push
mov
xor
icebp
mov
add
iret
std
sub
xchg
or
mov
xor
in
dec
add
xor
mov
int3
fcompl
mov
and
jb
add
insl
xchg
adc
sti
xor
test
sbb
mov
cmpsb
xor
and
and
cmpsb
fmulp
outsb
xor
xchg
jae
loop
xor
pop
call
mov
push
out
push
mov
test
call
pushl
pushf
lea
jne
rcr
rcl
bt
pushf
mov
cmc
pushl
cmp
pushl
pushf
pushl
lea
ja
movsbw
movzbw
pop
movzbw
push
setns
pushf
mov
lea
mov
movsbw
movsbw
mov
mov
mov
not
pop
push
pushl
ret
subl
inc
fsubrp
dec
push
add
popf
cld
jecxz
int3
xchg
hlt
mov
jge
mov
or
rorl
dec
cmp
scas
pop
cmp
pop
rcrl
in
pop
out
sysenter
push
pop
inc
jp
cmpsb
adc
je
sub
dec
pop
seta
or
add
dec
add
xor
fs
cmpb
mov
or
pop
push
mov
stos
js
orb
inc
dec
test
mov
push
dec
mov
in
xor
pusha
dec
inc
loopne
inc
pop
fdivs
cmp
and
mov
testb
dec
inc
sbb
sti
int
adc
test
idivb
lea
jge
xchg
imul
mov
xchg
inc
mov
aas
fcompl
shrl
sahf
and
cmpsb
xorl
negb
ret
lahf
clc
mov
pusha
and
cltd
das
mov
sbb
xchg
mov
xchg
aam
push
inc
mov
mov
pop
push
aam
mov
mov
iret
or
sbb
repz
outsb
lods
clc
mov
or
shll
adc
movb
outsl
mov
dec
roll
sub
pusha
push
mov
mov
or
test
pop
decb
lret
mov
ja
test
mov
inc
ret
addr16
xchg
xchg
jno
mov
fchs
add
and
out
push
test
sbb
xchg
or
das
sub
fs
cmp
mov
cmpsl
xchg
lahf
adc
rcl
rclb
xchg
push
dec
mov
mov
dec
hlt
mov
mov
sbb
pushf
in
sub
lock
nop
insb
pop
jle
cs
jle
pop
out
fdivr
mov
mov
aam
stos
addr16
jg
dec
sub
ret
mov
inc
mov
lahf
je
mov
jb
xchg
rcll
inc
or
mov
int3
into
fs
pop
mov
mov
in
mov
roll
sub
sbb
rcll
push
rcrl
mov
gs
out
test
and
add
and
ret
adcb
xorb
jp
mov
xor
push
pushf
sti
es
xchg
add
pushf
or
cmpl
mov
insb
mov
mov
mov
aaa
mov
jecxz
fisttpl
adcb
std
sbb
cwtl
jne
cwtl
pop
mov
jmp
dec
mov
insb
lds
shll
inc
sub
nop
push
movsl
scas
insb
inc
ss
mov
mov
inc
jecxz
lcall
mov
mov
stos
lahf
jp
jle
xlat
jns
and
fcmovnu
push
add
aaa
mov
lahf
int3
cli
xchg
cmc
cmc
fistpll
shll
dec
ja
jnp
cwtl
jb
hlt
mov
lock
inc
jnp
inc
cltd
pop
xchg
popa
mov
hlt
fldt
dec
pop
bnd
sbb
mov
stos
outsl
test
mov
mov
scas
or
push
shl
ja
xor
rcl
test
dec
movsl
pop
xchg
push
jno
mov
mov
outsl
repz
inc
pop
mov
jl
pop
sbb
sbb
add
cmp
idiv
loope
clc
call
and
sbb
ret
cmp
add
addr16
icebp
sub
sbb
ds
test
sbb
sbb
decl
xor
sub
ret
outsl
fcomip
cwtl
ss
rolb
dec
fsubs
adc
std
js
gs
nop
iret
or
push
frstor
imul
sahf
adc
je
int3
mov
sbb
mov
fcmovne
pop
lds
and
cli
rorl
sub
lods
cmpsl
dec
jo
mov
out
loopne
call
test
xchg
fidivrl
lods
cmp
aaa
push
sub
add
cwtl
or
test
dec
add
idivl
jp
dec
cltd
mov
inc
inc
adc
and
push
cld
jno
adc
je
in
mov
mov
cmp
adc
iret
dec
repz
addr16
stc
cli
cmc
jno
and
lcall
or
lret
test
mov
test
xchg
rcl
sbb
rcl
add
dec
add
pop
aad
mov
mov
mov
pop
testb
nop
std
xor
in
bnd
jp
mov
push
push
les
xchg
fnsave
ud1
lahf
jo
lcall
xchg
int
rorb
ret
ja
hlt
les
pop
std
popa
movsb
in
addr16
adc
xchg
arpl
push
das
mov
or
xchg
mov
js
jnp
pop
mov
outsl
pop
cs
ljmp
fisubrl
stc
imul
push
or
mov
repz
in
decl
in
mov
mov
adc
push
pop
mov
and
sub
dec
inc
xchg
mov
ror
inc
add
shr
subl
cmc
pop
fisttps
jb
xlat
cli
std
mov
test
loope
inc
cld
arpl
adc
cmp
in
xor
arpl
ret
mov
inc
sbb
rcll
loope
mov
shlb
flds
cmp
and
jne
cmpsl
or
cmp
mov
cmp
cld
add
adc
or
adc
out
out
mov
mov
out
jne
jmp
cli
ja
push
or
mov
cmpsl
and
and
sub
inc
jg
xlat
sub
xlat
inc
test
aad
out
inc
ja
adc
lret
dec
ljmp
ljmp
ljmp
movb
sbb
mov
int
mov
leave
arpl
dec
mov
jg
sbb
mov
jl
ja
decl
dec
dec
insl
cmp
dec
aaa
lods
mov
or
mov
stos
push
out
or
nop
stos
jle
leave
pop
add
cmp
jne
sub
scas
jg
aam
and
mov
push
pop
movlhps
push
popf
addr16
out
lods
dec
int3
aaa
xchg
inc
push
push
sbb
dec
mov
xchg
imul
insb
add
test
jp
add
shrb
flds
pushf
popw
adc
test
mov
test
movl
test
clc
neg
jmp
addb
shlb
push
lea
movsb
sub
ret
cmpsb
mov
movsl
test
sbb
test
imul
mov
leave
pop
add
rcrb
mov
mov
andb
repnz
jbe
scas
inc
pop
cs
jbe
daa
popa
add
push
mov
push
scas
mov
xor
out
js
mov
mov
enter
push
cld
add
inc
mov
or
adc
xchg
out
mov
popf
fisubs
pop
cmpb
pusha
pushl
movb
pushf
lea
jne
ror
bt
sub
pusha
rcl
mov
add
rcr
bt
add
sub
mov
pushf
cmp
pushl
test
movb
mov
lea
je
clc
sub
cmp
cmp
jmp
push
inc
xchg
cmp
ds
in
jne
cmp
lock
fwait
push
out
popf
xchg
sub
xor
enter
stos
sbb
cmp
pop
xlat
lret
addb
mov
push
test
lock
sbb
lods
movsl
xchg
or
in
mov
ret
daa
inc
lea
cmp
or
aam
pop
mov
dec
dec
orl
rorl
xor
out
fcoms
nop
jge
inc
cmp
push
xor
pop
daa
jb
sub
test
repz
add
cld
inc
adc
popa
and
in
ror
add
je
push
xor
ret
mov
mov
ffreep
cmp
mov
adc
int
or
xchg
and
das
push
adc
fsubrl
xor
mov
xorb
cltd
sbbl
cmp
ja
or
push
mov
fcomi
subl
add
enter
sub
test
fistl
mov
shl
out
leave
pusha
pushf
jmp
scas
stos
jbe
jle
addr16
cmp
outsl
xor
sbb
sub
cwtl
scas
mov
mov
dec
lahf
test
cmc
insb
dec
loop
stc
imul
xchg
and
xchg
push
aad
es
push
or
xchg
cmp
xchg
bound
lds
inc
dec
or
lret
mov
iret
jb
push
sub
add
cmpsl
popl
or
jo
adc
jmp
jne
out
fcmovb
push
push
pop
daa
fwait
stc
sub
test
rdmsr
jae
jecxz
mov
int
idivl
orl
mov
jmp
loope
xor
lcall
xor
and
movsb
sub
test
pop
mov
sub
movsl
xchg
and
mov
mov
call
out
jne,pt
dec
adc
shl
dec
ret
or
xchg
cmc
lock
loope
call
fcomi
adc
cmp
xchg
fdivs
imul
sub
into
aaa
loop
push
test
fcompl
arpl
in
in
pop
es
clc
sbb
mov
mov
sti
aam
test
pop
xchg
insb
das
sbb
adc
cltd
push
aam
jne
jne
int
cs
aaa
and
loope
test
aam
aam
insb
mov
or
rorl
xchg
rcrb
xchg
adc
pop
mov
fdivrs
add
pushf
or
push
xor
fs
xchg
mov
push
xchg
cmp
js
gs
mov
shl
std
push
adc
les
cli
jns
cwtl
rorl
dec
and
add
out
inc
cmp
jg
xlat
push
outsb
leave
mov
jg
add
mov
mov
arpl
ss
inc
sbb
or
inc
gs
adc
dec
sarb
push
or
mov
inc
mov
pop
icebp
sub
mov
mov
dec
out
xchg
insb
imul
mov
xabort
dec
inc
lahf
dec
insl
jo
mov
insb
cmp
ljmp
add
xor
aaa
sub
sbb
stos
mov
lcall
adc
inc
inc
inc
das
xor
out
pop
and
jg
sbb
push
inc
dec
pop
cld
pop
xor
inc
add
ljmp
or
pusha
and
lea
sbb
scas
inc
and
cld
sbb
pop
mull
aaa
mov
pushf
mov
pushf
pushf
pushl
ret
push
iret
lods
addl
daa
cmp
sbb
xchg
pop
adc
inc
xchg
inc
push
imul
ss
loopne
mov
data16
nop
jne
out
xchg
dec
rclb
cltd
imul
push
inc
xor
dec
sub
mov
pop
fwait
dec
and
inc
add
cs
add
jne
faddl
mov
iret
push
and
xor
jge
mov
lods
adc
iret
stos
in
push
loope
cmp
or
loope
mov
clc
sti
and
sub
mov
das
push
mov
loope
or
jns
stos
add
pop
daa
hlt
xor
pop
in
and
inc
xchg
pop
xor
push
stc
roll
xchg
push
imul
fs
push
repz
fldcw
outsb
out
pusha
sbb
test
inc
cli
mov
mov
adc
mov
aaa
xchg
cmp
ja
clc
sub
sub
ror
dec
push
lea
add
add
shl
shrd
mov
rcr
add
not
shr
mov
jmp
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
in
pop
bound
std
pop
dec
jnp
pop
cmp
js
mov
sub
pop
and
jnp
mov
dec
jle
inc
mov
stos
repnz
out
mov
mov
push
pop
lea
sub
sbb
adc
push
xchg
out
pop
push
and
adc
pop
mull
mov
mov
mov
mov
fldcw
xchg
enter
ret
pop
out
mov
push
push
or
mov
and
popa
addr16
imul
popa
je
add
mov
cmp
imul
mov
xchg
jp
inc
mov
sbbl
not
sbb
icebp
xchg
mov
sbb
js
push
or
push
std
out
scas
outsb
lods
mov
daa
addr16
push
mov
rcrl
xchg
jg
xchg
mov
push
sub
jg
daa
lret
popf
mov
sbb
jp
xchg
mov
repz
idivl
ret
ficomps
jo
dec
cs
scas
and
std
lea
pushf
add
add
pop
push
fmuls
mov
mov
bound
repnz
inc
fdivs
pop
xlat
cmc
and
sub
adc
sub
adc
cmpsl
and
sub
dec
jge
sbb
stc
sbbl
dec
sbb
ds
roll
sbb
xlat
popa
adc
stos
ljmp
push
add
jl
cmp
scas
xor
into
pop
test
push
sbb
or
inc
mov
or
mov
aam
jns
sbb
bound
stos
scas
lret
cmpsb
jo
push
sti
adc
fwait
cmc
jle
sub
lock
pop
stos
or
mov
jmp
dec
rcrl
lret
xchg
test
mov
jecxz
xchg
scas
mov
ds
cli
dec
out
mov
rorb
div
xor
mov
mov
sti
adc
mov
jb
xchg
add
jge
push
mov
lret
repnz
out
decl
add
push
dec
xchg
or
lods
xlat
pusha
add
xor
sti
mov
enter
cmpb
pop
leave
arpl
push
pop
or
addr16
cld
mov
fbld
sti
or
cmp
faddl
xchg
mov
loope
imul
fsubl
out
mov
jns
add
or
lcall
cmovbe
mov
inc
mov
nop
or
xchg
cld
mov
sub
xor
data16
sub
loopne
call
sbb
add
add
adc
or
cmp
call
ret
pop
sub
sub
adc
mov
out
clc
shlb
mov
or
test
sbb
dec
jbe
and
cld
and
mov
adc
fdivl
push
shlb
mov
mov
jp
and
test
add
jmp
xchg
adc
dec
pop
test
mov
fcoms
dec
cmpsb
add
ficoml
or
push
mov
and
imul
ja
inc
pushf
mov
outsb
adc
gs
js
mov
rcll
mov
and
jb
ds
push
pop
and
aam
es
or
and
orb
mov
divl
and
movw
lea
call
pushf
call
pushf
mov
push
cmp
xchg
rol
not
adc
bsf
mov
pushl
sub
pushl
jmp
mov
setg
movsbw
mov
mov
mov
pushf
call
jp
add
dec
xor
hlt
orl
adc
int3
movsb
and
iret
pop
sar
fldcw
lret
cltd
popa
outsb
inc
stc
mov
xor
sub
mov
jbe
imul
in
ja
xchg
cltd
insb
mov
xchg
lret
push
negb
mov
pop
sub
stc
adc
repz
ret
sbb
sbb
cltd
cmp
and
mov
lock
push
ljmp
nop
sub
xor
pop
mov
in
mov
arpl
xchg
dec
sub
dec
nop
mov
fucomip
flds
outsb
mov
cmpsl
jle
lea
nop
inc
pop
sbb
and
lods
cmp
or
in
mov
and
adc
and
xor
mov
inc
lods
jecxz
test
sub
cltd
mov
or
pop
inc
mov
dec
out
sbb
pop
mov
movsb
jns
add
loope
aas
mov
adc
in
jnp
xor
cmc
lock
mov
sbbb
jnp
out
push
inc
or
jg
jp
faddl
scas
mov
mov
cmp
mov
or
push
dec
cmp
call
lock
cmc
push
gs
jb
and
push
jo
sub
inc
adc
cmc
sbb
aam
xor
xor
mov
mov
xorb
daa
xor
pop
fimuls
dec
add
sbb
pusha
adc
imulb
test
ds
fwait
imul
outsb
push
push
pop
sbb
movsl
cmp
int3
mov
mov
bswap
add
mov
pusha
stc
pushl
jmp
ss
dec
mov
jle
sbb
mov
and
ret
cltd
popa
pusha
or
push
imul
fucomp
out
iret
xchg
out
xchg
xchg
sbb
mov
rcrl
cltd
jl
fwait
pop
shl
xor
inc
push
popa
mov
out
scas
fwait
mov
not
movsb
pop
hlt
jle
lock
rorb
mov
aam
cmpb
vdivps
mov
mov
push
shrb
or
cmpsb
cmp
lret
pop
xlat
mov
stc
sub
fisttps
and
push
push
push
jmp
xorl
push
fdivrs
ds
and
xchg
or
int
scas
fucomi
mov
pushf
lea
call
pushf
jmp
shr
add
btr
or
jmp
pushl
lea
je
shl
sbb
add
bsf
cmc
xor
sub
push
movsbw
xor
mov
shr
pushf
test
and
movl
mov
shld
shr
add
shld
bts
add
sub
btc
dec
ror
bswap
mov
jmp
mov
call
mov
mov
outsb
cmp
jmp
mov
in
inc
arpl
cmp
jb
inc
enter
sub
dec
xchg
push
push
cmc
data16
testb
cli
adcb
adc
push
xor
shlb
imul
rcrl
roll
sub
aad
mov
sbb
jle
cmpsl
pop
cmc
popa
in
fisubrl
scas
and
cli
sbb
adc
jns
push
push
sbb
cli
out
mov
xchg
mov
out
ret
jg
add
enter
and
loopne
pop
pop
addr16
push
cmpsl
out
or
or
cmpsb
jo
loop
mov
and
cs
sahf
push
and
ficomps
xchg
sbb
lret
sub
clc
divb
mov
les
aad
cmc
rcrb
xchg
addb
cltd
mov
jno
mov
mov
add
add
add
sub
int
out
inc
push
push
push
scas
rcr
clc
aad
jno
push
jl
add
shlb
repz
adc
xor
fcmovu
fcoml
and
iret
test
rorl
cmp
shrl
std
pop
hlt
jno
or
mov
mov
in
cmp
sbb
ja
push
ljmp
push
or
pushf
sti
js
fs
jle
xchg
out
icebp
into
sbb
jge
push
or
movl
gs
es
jo
adc
mov
jmp
iret
movsb
hlt
or
or
pushf
mov
jle
js
lahf
int
jo
add
lock
mov
xchg
es
jno
mov
ja
sub
cmc
clc
fldt
fcom
mov
adc
xor
adc
jge
cli
inc
daa
cmp
iret
addl
sbb
ds
ret
mov
push
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
pusha
jmp
pop
jecxz
rcrl
xorb
gs
add
xor
lods
ret
push
iret
xchg
adc
xchg
mov
pushf
lcall
jle
sub
inc
add
dec
scas
hlt
inc
pop
and
enter
pop
dec
and
fmull
push
cwtl
mov
jb
sub
push
mov
push
xchg
mov
mov
add
sbb
fwait
call
cmp
cmpsl
into
aad
fcmovbe
daa
shrb
lds
test
add
mov
mov
jmp
shlb
jns
pusha
jno
jns
cmc
xchg
push
cmpl
dec
popa
aas
xchg
int
or
adc
xlat
lret
add
in
cltd
mov
dec
xchg
push
inc
jg
jbe
cmp
pusha
mov
ret
repz
out
add
adc
dec
mov
lods
xor
mov
addr16
in
cwtl
test
es
inc
pusha
add
std
sbb
xor
sub
daa
inc
in
imul
insb
xor
or
jae
lock
push
inc
stc
ret
and
lcall
sar
xchg
xchg
lret
push
in
ja
sbb
sub
repz
movsl
lcall
jl
push
add
repz
test
push
and
push
mov
les
sbb
mov
stos
aam
or
outsl
icebp
ja
ljmp
sbb
cmp
pop
jg
mov
mov
dec
out
mov
cs
roll
pop
mov
xchg
sti
mov
inc
scas
add
sarl
adc
movzwl
cmp
mov
jmp
push
pop
imul
imul
jmp
jb
or
push
jnp
pop
call
fs
aad
movsl
stc
xchg
add
in
dec
sub
push
rcrb
push
sahf
dec
lret
lret
cmpsb
add
dec
dec
add
fstps
jp
movsl
sub
fs
test
push
jb
push
push
sub
cmp
test
push
xor
push
pop
iret
gs
imul
addl
popa
je
dec
sbb
push
or
call
rclb
sbb
lea
jne
mov
or
sar
mov
shld
sub
sar
add
mov
clc
test
sub
pushf
cmc
pusha
cmc
pushl
popl
bt
pusha
cmp
push
call
jmp
in
out
mov
inc
data16
cld
pop
jmp
std
jecxz
or
sub
sbb
sbb
lds
mov
jecxz
aad
jb
pop
andb
xchg
pop
mov
mulb
js
push
aaa
sub
pop
push
xor
mov
repnz
sarb
mov
rolb
push
xchg
es
gs
fsubr
mov
jmp
in
ja
mov
js
mov
or
outsl
out
xchg
in
movsb
mov
sbb
sbb
mov
add
rolb
pop
mov
arpl
lahf
jp
lea
jb
push
dec
mov
push
and
and
adc
fbstp
cmp
int3
lds
jnp
cvttps2pi
inc
or
inc
pop
fnstcw
clc
mov
fiadds
subl
mov
lahf
les
fidivrs
sbb
and
cld
icebp
mov
adc
in
jb
mov
outsb
xchg
sbb
add
pop
jne
gs
sub
sbb
jae
imul
push
bound
fidivrs
mov
insl
dec
insb
or
add
in
jmp
fwait
scas
xchg
add
das
test
pop
or
divb
sbb
mov
popf
pushf
bt
pushw
popfw
pusha
call
mov
add
add
add
fdivs
add
add
add
xchg
add
add
add
push
add
ljmp
add
add
add
xor
add
add
xchg
jl
add
add
add
add
add
add
add
add
add
add
add
add
jmp
xor
xchg
and
add
ss
das
add
add
add
shr
clc
sub
mov
sub
mov
xlat
imul
inc
sbb
stc
test
add
scas
pop
lea
inc
pop
or
rcll
int3
mov
xchg
jl
mov
ret
sbb
mov
xchg
popf
enter
outsl
in
daa
shll
call
push
orl
sub
out
dec
loop
scas
sub
aas
das
xor
cli
insb
cld
out
mov
sahf
xorb
adc
push
filds
fsubrl
adc
fsubrl
popf
ss
mov
jae
mov
es
outsb
fadds
shlb
divl
movsl
xor
add
adc
mov
ds
or
sti
mov
movsl
sbb
fsub
sbb
pop
jp
jo
push
test
sub
or
imul
mov
mov
push
lret
in
aaa
push
pop
pop
cmpsl
mov
ret
pop
mov
fidivl
xchg
sar
inc
dec
add
mov
clc
push
and
imul
clc
push
ja
fstpt
mov
out
inc
in
ljmp
mov
push
sbb
int3
pop
sub
out
repnz
fwait
repz
popa
push
xchg
dec
fwait
leave
push
aas
scas
sub
call
loop
ljmp
lds
outsl
iret
cmp
outsl
mov
jae
sti
xchg
dec
push
pop
scas
xor
xor
repnz
and
jecxz
pop
pop
mov
aad
mov
xlat
ret
lock
nop
sbb
push
mov
incl
dec
push
sahf
popa
insb
shrb
adcb
push
cmp
mov
add
inc
gs
jo
outsb
inc
imul
add
scas
pop
inc
sub
sahf
shl
repz
xchg
add
sti
xchg
xor
inc
data16
mov
jmp
lcall
repnz
cwtl
and
jmp
inc
cmp
mov
dec
fstps
pop
sbb
mov
inc
shlb
mov
cmp
push
push
sbb
imul
dec
popa
push
dec
or
js
orl
mov
add
scas
jnp
lcall
cmp
lods
or
jo
idivb
gs
cwtl
cmpsl
pushf
lcall
xchg
pop
scas
jnp
jg
aam
jae
sub
xlat
jmp
push
std
fadds
lods
das
pop
or
push
rcrb
cs
movsb
js
lahf
fiadds
leave
jg
jb
adc
xor
mov
xor
ret
data16
pop
sbb
sub
add
xchg
jne
push
push
inc
cmovae
in
dec
sub
cmp
jl
sub
int3
pop
dec
jne
decl
lcall
js
rclb
and
push
dec
pop
ss
call
stc
daa
pop
ret
push
outsb
inc
shlb
arpl
jb
out
dec
js
leave
xchg
test
out
stos
test
mov
ret
inc
inc
xchg
mov
arpl
dec
icebp
push
stos
inc
lods
jo
pop
mov
dec
pop
mov
push
cld
nop
xchg
push
pop
mov
xchg
cmp
xorl
cs
mov
lret
sbbb
out
jno
sub
rcrb
scas
sub
push
stos
test
sub
fstpt
aad
data16
adc
cwtl
sub
sbb
pop
xor
into
sub
clc
mov
sarb
xchg
mov
pop
sahf
cwtl
sarb
shr
aad
adc
popa
outsl
mov
movb
rorb
lock
push
aad
ljmp
ds
out
xchg
mov
aas
out
mov
aas
adc
loope
fstp
cmp
xchg
add
mov
push
xor
frstor
inc
cli
add
loop
inc
lds
xchg
push
push
scas
adc
cmc
paddusb
stc
push
mov
adc
mov
or
cltd
movlps
cmpsb
fwait
pop
jb
icebp
inc
scas
push
jg
fmull
mov
pop
sub
adc
mov
arpl
mov
dec
push
sbb
adc
cmc
test
movsb
test
divl
jae
sbb
clc
outsl
mov
cmpsl
mov
fistps
push
ret
dec
jb
pusha
push
outsl
and
cmp
lcall
jae
scas
cmp
addr16
pusha
mov
cmp
and
popf
clc
stos
test
sarl
jle
sub
test
gs
outsl
inc
push
pop
cs
xor
push
mov
ljmp
inc
adc
stc
pop
icebp
nop
ror
movsl
cmp
or
out
jno
adc
mov
cs
mov
mov
lock
fmul
fs
adc
jle
xor
imul
add
sbbl
inc
addr16
adc
inc
call
mov
xchg
fldcw
mov
aad
imul
push
jp
repz
mov
js
leave
sbbl
sub
dec
sarb
sub
or
jg
push
or
pop
lods
jmp
in
pop
mov
pop
mov
frstor
ret
aas
sbb
pushf
ja
push
pop
enter
cmp
mov
mov
mov
stos
sub
insl
jge
test
add
xlat
shrl
mov
and
aad
es
mov
xchg
je
fidivl
sbb
pop
cmp
push
mov
or
cmc
lods
xlat
xchg
mov
pop
sbb
push
sarb
xlat
jmp
mov
push
lods
in
and
popa
cmpsb
frstor
pop
or
dec
xchg
add
test
data16
jle
cwtl
outsb
xor
pushl
cmp
jge
sub
inc
mov
mov
and
mov
mov
data16
test
scas
and
mov
out
sub
repnz
mov
push
add
or
sub
and
lret
ficomps
int
add
pop
sub
jne
mov
bound
jnp
nop
inc
movsb
mov
pop
add
scas
push
lock
enter
fxtract
xchg
roll
test
add
add
add
aam
lea
rcr
mov
leave
push
xchg
or
es
mov
xchg
pop
aad
fsts
mov
testl
scas
cmp
xchg
lret
push
rol
mov
insb
lahf
jno
pusha
rol
jp
mov
pop
mov
hlt
mov
shll
arpl
jae
out
aad
test
imul
sarl
cmpsl
insl
push
lock
push
pop
adc
les
sbb
push
jbe
cmp
dec
sti
cmp
pop
cs
in
call
mov
daa
add
jo
mov
jl
je
movsb
test
cmp
lods
mov
mov
push
std
mov
aaa
in
sbb
lfs
pop
rclb
and
ret
test
jmp
dec
adc
gs
mov
push
xorb
pop
push
mov
sub
jb
imul
add
xchg
pop
pusha
sbbl
arpl
pushf
push
adc
mov
ret
insl
jo
sbb
lcall
mull
dec
sbb
jmp
outsb
into
jnp
imul
adc
aaa
mov
push
enter
adc
pop
xor
outsl
jno
mov
mov
jmp
push
cmp
push
push
dec
stos
out
cltd
mov
bound
push
and
push
dec
iret
pusha
aam
mov
add
lahf
aas
inc
mov
lret
movb
push
sub
clc
cmc
clc
stc
pushl
popl
test
pushf
bt
pushf
cmp
pusha
movw
jmp
or
call
shll
mov
les
lods
xchg
fwait
ret
xor
scas
and
arpl
jmp
or
movsl
movsb
fstps
and
push
fisttpl
arpl
inc
insb
sbb
arpl
mov
jge
dec
jecxz
and
inc
xchg
cmp
and
jo
lods
sub
insb
in
or
mov
mov
into
add
and
mov
sub
lods
and
xor
pop
dec
pop
cmpsb
and
nop
leave
inc
xchg
cmp
pop
dec
setle
jl,pt
cmp
mov
outsl
sbb
fisubs
add
sbb
cmp
cmp
jns
xchg
sbb
shl
or
jne
mov
loopne
mov
xchg
lock
dec
xor
cmp
aaa
gs
sub
push
adc
jnp
inc
shll
mov
cmp
addb
adc
jge
mov
bound
push
lods
imul
or
sub
push
jecxz
ja
aad
dec
pop
out
insb
mov
push
pushf
stos
fiadds
fs
and
aaa
adc
data16
das
pop
fmuls
movsb
sar
stos
mov
push
adc
sahf
mov
pop
sbb
inc
subl
pop
scas
jne
jge
dec
lret
cmc
and
jbe
and
lock
xchg
repz
push
scas
mov
push
xchg
sub
lods
hlt
sbb
push
and
call
imul
cltd
mov
push
repnz
xor
or
jmp
mov
sub
ds
xor
xor
xor
out
xchg
dec
pop
ret
rorl
inc
mov
dec
lret
push
hlt
sbb
es
pop
mov
jno
lock
xor
test
pop
inc
adc
out
adc
adc
sbb
cvtpi2ps
daa
ds
into
cmp
inc
and
pop
mov
ret
sub
scas
sub
sahf
pop
dec
test
xlat
add
sbbl
imul
lock
cmpl
sub
or
pop
ret
mov
inc
add
push
inc
fcompl
mov
cmpb
icebp
cmp
mov
mov
jne
neg
shl
pusha
or
mov
pushf
mov
add
test
jmp
sub
lret
mov
mov
sbb
movsb
jle
ljmp
jnp
pusha
and
cmp
xchg
stc
and
jle
mov
xor
or
pop
cmp
out
sti
jl
lcall
movsl
scas
or
jo
js
push
mov
ret
push
add
pop
jbe
ret
into
aam
imul
push
mov
pop
xchg
mov
push
dec
les
mov
or
add
jne
insb
push
imul
mov
xor
mov
mov
movw
movb
jmp
repnz
call
mov
add
jb
mov
imul
sub
lahf
popa
lock
mov
lock
xchg
hlt
adc
jp
cmpl
iret
dec
daa
test
mov
mov
jecxz
lahf
inc
shll
gs
adc
dec
movsl
cmp
ficomps
sub
outsl
dec
jns
fs
push
fists
das
or
or
xchg
xchg
stc
and
mov
cli
dec
popf
nop
and
mov
sbb
adc
pminsw
enter
mov
loope
and
inc
cmp
pop
stc
clc
cmp
xchg
and
out
mov
push
sub
hlt
xor
and
lahf
push
mov
mov
mov
and
sbbb
stc
iret
dec
jns
mov
in
cmc
dec
ficompl
out
divl
jg
adc
pop
or
or
pop
push
lods
mov
movsb
das
mov
rcll
aam
push
and
dec
stos
fmuls
pusha
out
loope
cmp
mov
mov
mov
cmp
mov
stc
not
push
pusha
cmc
test
sub
jmp
cmc
cmp
pushf
lea
jnp
pushf
pusha
lea
ja
cmc
imul
cmp
test
add
push
pusha
lea
jmp
lea
ja
pushf
call
test
dec
jg
lds
dec
scas
rolb
or
lock
out
xor
fldt
cli
lret
sarb
pop
pop
mov
xchg
mov
adc
dec
cmpsl
frstor
aam
mov
push
mov
adc
sti
dec
test
cmc
aas
daa
insl
cmp
int3
jg
mov
out
shrl
pop
mov
pop
cmc
mov
movb
jmp
mov
cmp
push
sti
pop
xor
push
scas
mov
mov
mov
das
dec
adc
ffree
cmp
cltd
pusha
jl
mov
sbb
inc
push
fmul
jle
fwait
or
push
sub
mov
lea
js
fdivrs
popf
pop
jae
mov
sub
inc
jnp
fidivrs
into
pop
addb
stc
daa
fcompl
out
jg
stos
mov
dec
lock
jecxz
inc
pushl
cs
xchg
jo
xor
mov
mov
add
mov
dec
pop
or
jge
fdivl
xor
fstpt
sbb
setae
fsts
adc
inc
rcrb
loope
test
scas
dec
jne
stos
movsb
daa
movsb
cmp
lret
pop
mov
repnz
ret
fwait
jg
cwtl
cltd
arpl
out
and
imull
mov
in
and
jae
test
and
cld
aas
in
mov
sub
in
mov
iret
jle
pop
mov
sbb
xlat
push
ja
fisubrs
cwtl
xorb
movsb
push
imul
fwait
pop
mov
jmp
sub
push
xchg
scas
cmp
cwtl
std
xchg
cmp
and
jns
push
mov
add
sbb
push
cltd
fistpll
mov
xchg
sub
pop
add
adcb
push
mov
test
shrb
mov
push
lea
jle
pushf
mov
inc
bt
shr
movl
lea
je
jmp
pushf
stos
mov
mov
pushf
lea
jmp
hlt
jmp
fwait
stos
mov
pop
aam
and
cld
in
sbb
shl
jnp
lret
div
adc
push
mov
call
leave
sbb
mov
lods
mov
mov
and
or
mov
bound
pop
pusha
pop
mov
adc
std
xor
jge
andb
jge
jp
in
cmp
scas
or
mov
pop
or
push
xor
push
imul
add
das
lahf
cwtl
call
mov
cmp
lea
leave
jo
lea
test
loop
popa
fwait
cltd
sub
cmp
xchg
adc
and
and
dec
das
jae
ljmp
dec
cmc
add
sub
xlat
inc
ret
and
call
and
sub
stos
in
mov
cmc
ja
or
test
hlt
subl
sbb
lret
fwait
xchg
aad
sub
inc
xchg
adc
mov
jnp
push
mov
xchg
data16
je
mov
xchg
and
inc
movsl
jg
call
pushf
pushf
lea
jae
clc
sar
mov
movsbw
bswap
mov
bt
mov
cmp
pusha
test
stc
xor
call
sub
adc
jg
leave
jecxz
je
pop
int
into
cmp
mov
inc
pop
and
inc
out
loope
xlat
std
out
mov
out
xchg
aas
arpl
scas
sbb
scas
mov
fidivrl
pop
sti
pop
ljmp
lret
or
cmp
mov
xor
sub
mov
lcall
jecxz
dec
rclb
aaa
lods
add
mov
mov
xor
fcompl
rorl
inc
sbb
mov
popf
ss
test
xchg
shlb
cmp
stos
ds
imul
cmpsl
sti
shll
mov
test
les
mov
lods
mov
mov
lds
jns
push
stos
or
pusha
sbb
lcall
xchg
mov
push
mov
out
aaa
fs
xchg
mov
adc
xchg
outsb
mov
sub
push
or
pop
dec
and
pop
pop
lahf
and
jl
pushf
cmpsb
dec
cmp
mov
push
in
dec
push
imul
xchg
cmp
lock
shrl
mov
xchg
divb
sbb
lds
scas
sub
mov
mov
stc
jnp
in
jo
test
pop
leave
push
out
sbbb
call
cmpsl
jae
xchg
xchg
mov
push
jne
pop
inc
mov
imull
in
dec
jbe
cltd
pop
push
dec
pop
xorl
ret
or
int
mov
or
aad
clc
push
ffree
xor
xchg
mov
mov
sbb
mov
out
and
or
mov
cmpsl
repnz
mov
stc
xchg
and
test
cmp
in
leave
filds
pop
adc
and
mov
icebp
push
pop
push
hlt
sub
iret
lahf
push
pushf
lret
adc
and
or
bound
and
xor
mov
addr16
mov
or
in
mov
or
xlat
push
aad
je
fldt
add
movsl
scas
addr16
add
mov
push
cmpsb
push
jb
lahf
int
xchg
ret
pusha
pushf
stos
push
mov
push
aad
out
movlps
add
adc
es
pop
adc
jae
or
or
jmp
stc
sti
jl
repz
cwtl
call
mov
insb
in
and
pushf
fcomps
pop
push
or
sub
fstps
mov
cwtl
stos
rclb
test
add
jg
push
add
xor
mov
loop
jb
xchg
hlt
or
adc
in
dec
pop
mov
xchg
es
rclb
push
int
adc
lds
mov
lds
mov
pop
bnd
rcrl
push
mulb
inc
inc
sahf
pop
push
cmpsb
notl
mov
hlt
xchg
mov
mov
jb
sub
mov
push
cs
sub
jl
mov
nop
lahf
jle
or
jno
lret
movsb
mov
imul
imul
mov
jae
and
add
sbb
jecxz
and
push
sub
xchg
cmpsb
outsl
mov
mov
dec
mov
aad
add
bound
and
xor
sub
ja
scas
mov
inc
sub
xchg
push
sub
add
fcmove
test
pop
shlb
jmp
lock
xorb
cmp
mov
loopne
dec
in
or
leave
mov
je
cltd
xchg
ret
jge
mov
addr16
mov
add
mov
jg
mov
gs
jnp
jmp
cltd
out
xorl
out
or
sbb
pop
jns
mov
jmp
mov
pop
movsl
pop
popf
inc
fdivrl
fs
dec
mov
out
hlt
rcrl
popa
dec
mov
idivl
push
mov
mov
pusha
adc
in
in
loope
push
das
dec
and
cmp
dec
and
adc
ljmp
or
loope
add
lock
pop
dec
jo
mov
push
mov
aas
push
ja
test
hlt
xor
cmp
mov
pop
sub
cmp
or
mov
xor
lahf
imul
sahf
hlt
dec
and
mov
gs
add
dec
int
addr16
push
outsl
dec
cs
pop
mov
shl
ret
lret
cmp
dec
mov
jmp
fcmovne
or
dec
adc
stc
push
xchg
mov
mov
pusha
lods
std
sti
push
cmp
int
icebp
pop
idivb
or
xor
sysexit
lcall
and
sub
dec
repnz
std
ret
ja
icebp
sub
lock
aad
or
jl
fst
arpl
outsl
subl
mov
inc
into
lock
or
and
clc
jb
mov
inc
jecxz
cld
stos
and
push
push
mov
mov
aas
mov
enter
mov
cmp
rcll
adc
lods
stos
enter
adc
xchg
mov
mov
pop
mov
adc
loop
iret
imul
mov
jle
mov
cld
pop
add
mov
mov
cmp
movsb
mov
push
or
imul
loopne
adc
ret
fcomps
mov
xchg
adc
movsl
in
stos
lret
jge
incl
ljmp
mov
andb
push
iret
aaa
and
in
nop
ds
push
lea
jb
pushf
cmc
cmpb
pushf
call
call
lock
push
nop
jne
jge
mov
cmp
mov
imul
out
mov
jb
and
cld
into
mov
push
jmp
mull
push
std
jle
shll
push
inc
testl
repz
pop
lods
sub
pop
ret
cmpl
push
mov
or
xor
fisubl
sub
mov
xchg
push
cmpsl
xchg
sbb
jnp
aad
pushf
push
jmp
imul
fisubrs
mov
data16
les
push
pushf
mov
out
out
pop
call
xor
negb
popa
in
adc
addb
and
and
mov
mov
jmp
sbb
mov
sbb
and
mov
lahf
std
arpl
cmovbe
out
push
mov
js
enter
adc
push
adc
add
push
scas
icebp
movsb
cmpsl
pop
push
nop
xchg
inc
ljmp
fmul
xor
pop
daa
dec
pop
cmp
sub
orb
jmp
xchg
cmp
rcrl
jns
mov
in
add
dec
jecxz
lcall
lods
sub
imul
mov
fcompl
das
sub
jb
enter
dec
fwait
shlb
pop
add
push
and
mov
arpl
ret
add
lea
jne
xor
aaa
aad
sub
btr
mov
pushf
pushf
add
push
pusha
pushl
lea
jmp
lea
jbe
not
clc
clc
sub
jmp
call
js
js
rolb
fstpl
popa
int
jp
ss
push
in
sbb
mov
mov
xlat
std
sbb
leave
sbb
arpl
cwtl
xchg
gs
jge
pop
jno
or
mov
jmp
daa
mov
lahf
loopne
push
mov
mov
aam
xchg
aaa
aam
in
and
mov
or
cmp
enter
out
iret
pushl
loope
pop
add
sbb
mov
and
lock
and
loope
stos
sub
xchg
inc
ja
push
fdivrs
push
movl
pop
call
jmp
adc
xor
inc
inc
mov
push
cli
push
xchg
data16
mov
enter
pop
js
outsl
adc
sbb
pop
into
and
movsl
enter
out
cwtl
ss
call
sahf
mov
adc
repnz
sahf
enter
jae
mul
sbb
sub
fwait
or
call
test
xchg
add
ret
lods
and
cmp
cmp
mov
aaa
jp
subl
pop
dec
test
mov
and
mov
repz
outsb
adc
xorb
cmpsl
cmp
icebp
add
cmp
and
loope
pop
push
inc
arpl
inc
pop
sub
jb
and
mov
rcrb
xchg
jne
lock
mov
cmpsb
adc
fistpll
dec
fwait
ss
test
inc
sarl
pop
arpl
jb
mov
cmp
testl
aaa
jge
mov
adc
inc
fidivl
adc
and
mov
aad
and
xor
mov
sbb
dec
adc
add
mov
jmp
ret
in
cmp
pusha
jnp
inc
hlt
cld
jns
and
fwait
mov
arpl
jb
and
ss
pusha
imul
xchg
lock
imul
mov
stos
jmp
fists
adc
pop
mov
stos
lahf
push
lret
shrl
mov
mov
jo
add
test
cmc
js
mov
stc
int
add
jp
and
std
sub
cmpsl
pusha
test
insb
sahf
fisttps
scas
inc
pop
push
push
jle
xor
mov
sbb
jmp
divl
add
adc
mov
pop
out
leave
add
inc
rclb
sub
inc
dec
js
inc
mov
enter
hlt
enter
mov
repnz
sub
stos
cmc
in
inc
jge
inc
sbb
push
scas
insb
test
add
dec
lods
and
out
popl
and
cs
or
mov
push
xchg
push
mov
mov
test
pop
mov
jns
push
pushf
jmp
pop
xor
xchg
sub
sbbl
sarl
mov
add
movsb
and
das
xor
jae
ret
xchg
adc
enter
loopne
call
lock
sub
into
cmp
enter
and
dec
les
js
std
dec
cli
test
sti
adcl
ffreep
sub
roll
jg
add
jle
repnz
nop
mov
lds
add
lock
mov
dec
and
out
add
push
pusha
int3
add
shll
sub
cmp
test
cmp
fwait
bound
adc
out
sub
mov
inc
inc
test
pop
iret
lahf
int3
fdiv
jmp
cmc
outsl
cmp
lea
pop
in
dec
mov
mov
adc
mov
dec
jmp
inc
mov
jle
mov
or
cmp
lret
pop
loop
xor
inc
jnp
in
dec
cmp
inc
xlat
pusha
xchg
daa
xchg
cwtl
sub
sub
leave
je
pop
flds
in
push
outsl
sbb
icebp
jne
cmp
aaa
sahf
jns
shll
incb
and
mov
inc
jg
fdivrl
mov
push
ljmp
mov
xor
add
xchg
xchg
xchg
out
mov
hlt
and
push
push
or
rorb
xchg
jo
sbb
dec
jb
jmp
push
cmp
inc
push
ret
add
or
outsl
andl
std
jp
int3
test
in
jle
insl
clc
mov
push
inc
mov
jge
dec
mov
nopl
popf
mov
stos
jae
inc
es
inc
movsb
add
pop
sbbl
pop
scas
in
sbb
enter
jmp
not
dec
movsb
pop
and
les
mov
mov
sbb
mov
inc
pushf
bt
push
neg
jmp
pushf
clc
repnz
lea
ja
push
lea
jne
pusha
rol
pusha
neg
mov
clc
sub
adc
add
btc
shrd
lea
sub
call
sahf
mov
xor
ret
lods
dec
mov
xor
sub
jl
push
mov
and
mov
mov
int
mov
mov
xor
arpl
dec
nop
fisubl
pop
enter
nop
inc
int3
loope
sbbb
xor
inc
pop
push
sub
and
rolb
mov
ja
mov
jb
mov
jecxz
icebp
ss
inc
pop
or
pop
or
icebp
xchg
test
daa
lea
cmp
cmc
sub
jb
xor
fs
insb
add
popf
mov
cli
rorl
and
stos
in
mov
cmpsl
mov
or
or
jbe
push
or
mov
ss
rcrl
and
cmp
mov
loopne
movsb
popf
dec
insb
push
xor
dec
mov
jmp
dec
lods
inc
pusha
cwtl
fprem
scas
pushf
out
pop
pop
pop
ret
pushl
insb
mov
aam
popa
call
rorl
fnstenv
pop
jae
adc
inc
mov
clc
insl
call
inc
hlt
icebp
insl
cmpsl
aam
pop
cmp
lahf
push
inc
inc
mov
stos
jns
or
imul
sub
icebp
insb
movsl
outsb
stos
shll
xchg
addr16
dec
es
arpl
in
adc
adc
cmpsb
sbb
cwtl
repz
mov
jl
out
std
or
lds
ret
lds
fnsave
jbe
cltd
into
daa
mov
cmp
je
sbb
sbb
lock
inc
or
cmpsl
fcompl
pusha
fbld
cmp
mov
lds
mov
jecxz
test
js
dec
jo
in
inc
cmc
jge
loopne
data16
mov
cmpb
inc
jl
lcall
or
push
xor
stos
or
cli
aad
xchg
hlt
jbe
adc
ret
cmp
push
aas
lods
sbb
div
dec
cmpsb
cmp
mov
ss
sbb
jae
adc
int
repnz
or
add
adcb
inc
clc
ror
sub
lret
scas
mov
cli
sbb
jns
into
loop
int3
jno
test
cld
insb
nop
ja
lds
xorl
push
stc
push
mov
adc
out
outsb
mov
vpsubq
fs
jp
cmpsb
std
fiadds
fidivrs
or
bound
or
inc
rclb
add
adc
test
push
icebp
stc
jge
xchg
test
xor
hlt
lock
out
sbb
addr16
fisttps
sbb
jb
clc
test
cmc
push
repz
inc
out
pusha
adcb
pop
rorb
sti
xchg
lods
mov
sbb
mov
dec
jno
inc
jge
push
adc
hlt
xlat
mov
ljmp
pop
sub
in
add
add
imul
mov
and
test
xor
mov
add
xchg
mov
cwtl
inc
mov
adc
or
or
push
pop
jl
pushf
push
lahf
pop
ret
je
lahf
mov
sbb
rol
mov
sbb
mov
cmpsb
iret
in
ljmp
insl
pop
shl
and
fisttpll
in
ss
adc
out
aas
mov
jmp
pop
insb
call
cmp
mov
dec
in
movsl
adc
pop
pop
loopne
xchg
aas
cld
dec
mov
pushf
jmp
psraw
cmp
jg
iret
je
sbb
jnp
mov
cli
mov
cmp
push
sub
cmp
mov
xor
pusha
sbb
mov
jmp
lcall
jae
ss
mov
stc
adc
cmp
js
pop
add
pop
scas
movsl
mov
iret
movsl
aad
in
adc
inc
xchg
rorb
in
ds
inc
or
imul
leave
xchg
mov
pop
repnz
fisttpl
ret
pop
das
jmp
fld
into
xchg
jb
xchg
sub
dec
sbb
mov
jne
cmc
jb
pop
lea
pop
into
repz
imul
or
pushl
sahf
icebp
jno
stc
shl
mov
push
fwait
mov
sti
aam
mov
andb
push
push
jecxz
jns
sti
imul
cld
xchg
cs
insl
in
testl
mov
ss
push
mov
push
cmp
enter
pop
jns
in
adc
daa
add
int
and
rorl
mov
cmp
out
add
xor
arpl
loope
push
in
push
pop
cmpsl
jle
mov
into
adc
int
pop
cmp
aaa
mov
mov
mov
inc
mov
dec
loope
cmp
ja
cmc
andl
or
inc
or
jge,pn
les
inc
sub
pop
fidivl
dec
pop
clc
mov
addr16
or
sub
dec
adc
divb
shrb
lock
dec
fistps
call
pop
or
dec
ljmp
out
xchg
ds
pop
pop
add
div
ja
enter
push
sbb
add
jno
and
test
in
pop
mov
jmp
or
outsb
out
push
add
andb
dec
aam
rcl
leave
mov
jbe
dec
push
les
push
and
aaa
shrl
pop
fsts
scas
lcall
addr16
mov
arpl
jo
shrb
das
jge
std
mov
push
adc
push
sarb
sbbb
jl
leave
xchg
lds
sar
inc
mov
je
xchg
xor
gs
data16
add
lahf
loope
and
jmp
mov
push
jp
push
inc
insb
jae
leave
ljmp
les
mov
psubsb
popa
cmp
stos
dec
cmp
cmc
mov
sbb
aaa
ds
mov
lret
sbb
xchg
fdivrs
gs
repz
sub
cmp
in
rcr
sbb
cmp
sub
dec
push
pop
add
xchg
leave
pop
dec
cwtl
pop
pusha
cmpsl
jne
out
mov
lock
cld
dec
mov
inc
fimuls
xor
sahf
adc
inc
push
andl
pop
sbb
jno
incl
pop
int
ds
sbb
stos
mov
cmp
jno
bnd
imulb
clc
xchg
dec
jl
shll
and
shlb
adc
mov
shlb
mov
sub
mov
pusha
in
pop
ljmp
push
add
adc
repz
cli
add
popa
popa
and
pop
stos
dec
icebp
jb
mov
je
lds
ror
stos
xor
xchg
jae
popf
jp
jmp
cmp
lahf
sti
addb
mov
aam
and
mov
outsl
out
imul
sbb
andl
iret
ror
xchg
dec
pop
jae
push
call
in
and
idivb
xor
stos
mov
sbb
repnz
stc
jg
in
loope
inc
hlt
out
insl
icebp
sti
repz
lahf
push
out
popf
fldenv
inc
lcall
sbb
jo
fisubrl
add
xor
cmp
xlat
movsb
out
mov
mov
cmp
lret
clc
jne
add
add
inc
dec
dec
sbb
jne
lahf
or
fidivs
adc
pop
and
dec
dec
lea
mov
or
jae
cmp
pop
dec
outsb
mov
mov
add
and
cs
ja
xsha1
cmpsb
into
inc
push
jne
lods
jg
cwtl
daa
pop
ret
out
mov
movsl
add
out
repz
mov
mov
pop
and
mov
lret
dec
in
lcall
xor
xor
push
sar
fsubs
icebp
out
cs
push
lret
lods
fwait
insl
cmp
mov
add
pop
add
lret
mov
jle
mov
sub
jbe
and
dec
cmp
outsl
and
mov
aad
add
loope
mov
call
stos
pop
cmc
ror
popf
mov
dec
dec
push
xor
aaa
mov
mov
shrl
and
fwait
cmp
pop
clc
test
xor
lds
push
mov
stos
cwtl
das
fmuls
shlb
movsb
or
imul
dec
cs
scas
and
clc
cmp
test
sub
bt
cmc
clc
ror
lea
js
dec
test
cmp
cmc
cmp
setnp
lea
movsbw
cwtl
jmp
leave
shr
ret
or
ljmp
fcmovnu
rcll
shll
stc
stc
inc
pop
mov
mov
decb
adc
xlat
or
mov
out
mov
lret
jns
jge
jp
xchg
adc
pop
sub
fldcw
mov
int
add
inc
loope
push
pop
std
movd
mov
add
jns
push
scas
mov
in
mov
xor
outsl
movsb
imul
lock
mov
inc
cmp
subb
sbb
xor
out
sbb
loope
or
loope
aas
pop
ja
dec
xchg
jno
push
call
or
xor
jo,pn
cmc
sub
inc
lods
fwait
out
xchg
aaa
push
cmp
jp
shrl
fisubrs
mov
mov
lds
mov
inc
jo
inc
sahf
pop
jecxz
mov
leave
push
sbb
ja
fdivs
jno
push
test
fisttps
mov
jns
push
mov
aad
ss
jl
not
mov
not
mov
seta
mov
jmp
push
lock
std
std
adcb
outsb
sbb
inc
lcall
arpl
pushf
mov
pop
sahf
ss
jae
jl
jge
fxam
xor
dec
inc
inc
and
aam
push
int
mov
or
mov
loope
into
dec
add
xchg
inc
inc
xchg
ret
in
xchg
push
cmpsb
mov
leave
pop
mov
cmp
jb
add
jmp
push
fmuls
cs
fwait
cwtl
roll
in
ret
movsb
subb
mov
repz
or
stos
jecxz
push
mov
divl
push
xchg
dec
pop
faddl
pop
ret
lahf
sbb
outsb
push
jnp
push
enter
jo
shrb
fwait
test
jnp
mov
mov
pop
lcall
gs
into
mov
das
iret
std
je
test
mov
mov
mov
inc
ficompl
cmp
lods
ret
xchg
xor
lret
inc
adc
notb
gs
xchg
stos
mov
xchg
scas
pop
inc
ss
std
pop
stos
sbb
or
jmp
dec
in
bound
cmp
movb
dec
push
push
pop
pop
out
jnp
movsb
or
in
fwait
jnp
movsl
fmul
mov
out
call
fnsave
and
sbb
or
dec
pop
pusha
mov
sbb
nop
or
aam
loopne
pop
and
arpl
jno
lods
xchg
mov
stos
push
test
inc
xchg
ret
add
out
pop
fmul
jo
aaa
mov
lcall
enter
stos
lock
insl
dec
int
cwtl
pusha
out
ret
test
pusha
cmp
enter
jno
cmpsl
cmpsb
cmpsl
dec
iret
mov
or
or
and
push
cmpsl
js
imul
sbb
add
sbb
mov
movsb
imul
and
aaa
pop
cmovle
push
xchg
loopne
hlt
jno
cmp
lahf
cmpsb
scas
or
popf
ret
das
push
jo
cld
cmpsb
mov
add
xor
jg
xor
out
and
lods
arpl
clc
mov
mov
in
idivl
int3
jbe
add
dec
dec
jo
and
test
mov
pop
into
add
arpl
inc
sbb
mov
pushl
in
sti
ficoml
push
jns
xlat
add
int
lea
jne
ror
xchg
mov
sub
dec
call
sub
out
insl
pop
iret
js
sbb
mov
fildl
dec
dec
push
add
out
mov
sbb
jae
push
cs
sub
push
and
and
mov
out
push
inc
js
push
ret
int3
shlb
xchg
adc
push
dec
repnz
addr16
inc
mov
xchg
ss
and
popa
xchg
dec
int
test
and
dec
push
mov
in
push
jne
pop
mov
sub
dec
repnz
scas
das
cmc
sti
xchg
pop
inc
fstps
xlat
add
push
push
pusha
jmp
cmp
xchg
repz
xor
in
pop
fldenv
lds
xchg
or
cltd
or
pusha
mov
aad
in
ljmp
cmp
inc
sbbl
imul
cmpsb
jo
jmp
sub
jg
xlat
jl
and
jb
push
xchg
outsl
cmp
imul
cmp
lahf
pop
mov
mov
cmp
mov
dec
test
mov
cld
sar
xchg
cmp
adc
in
mov
or
adc
or
sbb
nop
fwait
jge
xchg
mov
mov
adc
adc
dec
ja
mov
xor
fsubl
or
pop
lahf
enter
inc
cld
push
iret
dec
cmc
lcall
jecxz
pop
jl
xor
iret
lea
stos
sahf
or
imul
cmp
mov
xchg
orb
mov
fs
aad
in
pop
push
es
lods
es
mov
fdivs
clc
and
jae
insl
sbb
fcmove
xchg
popf
mov
rolb
fisubrl
sarb
int3
mov
lahf
sbb
sbb
int3
inc
in
cmc
xor
shl
mov
push
stos
dec
mov
push
pop
sub
mov
fildll
popa
dec
pushl
in
and
xchg
jg
data16
add
dec
in
repz
jno
inc
sbb
out
mulb
mov
mov
bound
addr16
js
push
shr
in
addl
insl
dec
fwait
hlt
test
dec
dec
popa
push
xchg
cmp
mov
sbb
in
shl
test
out
mov
mov
fcom
sbb
negl
and
xchg
pop
push
ja
je
jae
add
pop
daa
pop
jmp
test
andl
pop
ret
jnp
frstor
sahf
mov
sahf
popa
cltd
icebp
mov
push
push
les
cli
jl
popf
push
mov
cmp
rol
push
outsb
int
fadds
mov
mov
mov
mov
out
jge
mov
push
mov
aas
jo
popa
jecxz
inc
mov
popa
fiaddl
sub
fwait
or
mov
push
adcl
inc
es
jecxz
lods
pop
jbe
scas
repnz
cmp
insb
ds
dec
push
jae
xlat
add
push
movl
push
jmp
and
sbb
fnstcw
clc
rcrl
pop
test
fcomi
orps
xchg
or
and
mov
push
cmp
push
std
fcomps
in
enter
inc
jnp
jnp
scas
xor
jbe
lcall
daa
pop
cmpsl
jle
mov
je
loopne
std
aaa
shrl
test
outsl
adc
jecxz
inc
xor
jnp
and
sub
pop
push
in
mov
push
or
xchg
les
dec
xchg
mov
and
sbb
jge
mov
push
xor
inc
stos
repnz
add
add
and
and
pop
pop
popf
js
cli
dec
fwait
pop
sub
adc
cmp
and
scas
mov
mov
lret
mov
std
adc
sbb
mov
xlat
push
mov
push
pushf
movl
jmp
add
bt
pushl
mov
pushf
bt
test
pushf
pushf
jmp
scas
add
dec
sbb
clc
mov
adc
pop
in
popa
lods
xchg
cmp
das
or
es
xchg
jle
sbb
shl
adc
je
sub
sub
xor
into
xor
icebp
pop
aaa
xchg
mov
cmpsl
pushf
push
leave
aaa
sbb
or
and
add
jns
dec
and
pusha
fstpl
ror
testb
addl
pop
sub
mov
aaa
in
pushf
mov
outsb
cmp
sbbb
rcrb
sub
clc
stos
adc
in
dec
push
subb
xlat
push
dec
adc
fdivl
and
aad
in
ja
lds
lret
fdivr
es
loopne
inc
jnp
pop
xabort
leave
or
dec
ds
enter
cmp
nop
adc
aad
nop
fcoml
call
push
aad
push
fsubrs
mov
das
imul
rolb
nop
jns
xchg
and
sti
cmp
outsb
xchg
ret
pushf
cld
or
mov
adc
repnz
xchg
xchg
subl
iret
or
jl
lock
mov
out
xchg
pop
lods
jno
add
pop
aam
sbb
shrl
fiaddl
push
sbb
xor
leave
mov
in
sbb
enter
sbb
adc
and
xor
iret
pop
sub
popf
ror
ficompl
call
aas
jmp
out
dec
add
test
in
or
jle
push
xor
test
mov
and
and
pop
fucomi
push
hlt
inc
cmp
stos
sub
repnz
mov
mov
push
dec
sbb
cltd
test
test
subb
mov
mov
xlat
or
test
push
scas
xchg
out
dec
stos
rorl
je
push
dec
movsl
xchg
jns
neg
insl
out
imul
repnz
and
pop
pop
aad
push
gs
insb
lahf
mov
lea
les
mov
dec
andb
loopne
sbb
fnstcw
into
pop
cmpb
punpckhbw
js
dec
fmuls
mov
lods
push
aad
mov
cwtd
aam
sahf
jmp
cwtl
dec
ficomps
push
bound
push
sub
lock
mov
add
in
popa
xor
bound
or
in
aam
es
mov
ret
das
fiaddl
dec
rolb
je
subl
sub
xchg
test
or
data16
push
add
mov
lret
aas
addr16
test
ss
in
mov
std
subl
add
xor
sbb
cmpsb
es
or
sub
mov
rorl
in
lret
repz
adc
out
andb
mov
hlt
push
push
dec
fidivrl
in
les
mov
aaa
mov
mov
iret
mov
popf
cld
out
push
xor
stc
push
in
imull
xchg
xchg
hlt
and
jns
fdivrl
test
shlb
stos
and
arpl
push
sbb
pop
popf
arpl
js
mov
pushf
in
mov
push
push
xor
inc
pop
flds
and
fisubs
mov
scas
clc
mov
popf
sbb
mov
pop
inc
and
adcb
inc
xlat
adc
or
pushf
mov
or
andl
push
xor
rorb
or
mov
xlat
or
fildl
out
sub
lds
bound
out
sbbl
and
xchg
or
and
mov
and
or
adc
enter
xor
scas
leave
out
inc
lret
push
popaw
aas
and
scas
in
je
repz
jbe
fadds
xchg
jo
in
and
and
sub
orb
xorb
scas
bound
aam
mov
sub
add
mov
adc
lcall
and
das
sub
pop
rcrl
sbb
out
inc
dec
mov
in
or
lods
cmc
adc
mov
mov
sub
xor
test
int
sub
sbbl
aad
mov
mov
xor
mov
adc
pop
pop
xor
dec
mov
addb
push
lahf
sbb
mov
fs
dec
sbb
mov
repnz
mov
fwait
es
xchg
inc
jle
lods
lods
dec
out
xor
pop
pop
inc
sti
dec
mov
ret
push
das
popf
xchg
and
mov
ror
cmp
pushf
aam
icebp
int3
jae
int
mov
jnp
ss
jno
inc
sbb
jle
faddl
mov
mov
loopne
inc
addr16
jns
cmp
add
cld
push
fs
push
or
imul
add
lret
js
arpl
push
lds
icebp
jb
bound
inc
stc
mov
inc
adc
call
in
cmp
cmp
scas
stc
ret
fildll
or
xor
addr16
sbb
push
pop
ja
scas
xchg
adc
mov
mov
dec
rcrl
jnp
int
xor
ja
in
testb
in
cs
aaa
xor
or
sbb
dec
push
sub
xlat
test
in
adc
popa
addr16
adc
lods
cmp
mov
rcl
mov
push
dec
addr16
or
aad
mov
mov
or
mov
stos
rorb
popf
pop
jp
shlb
cs
enter
stos
inc
roll
aad
mov
insl
and
jo
jp
pop
pop
rolb
xlat
sub
or
mov
jns
daa
gs
insl
call
mov
in
mov
and
hlt
mov
into
scas
and
add
jae
pop
pop
shrb
test
nop
cltd
dec
mov
fdivs
add
add
fdivs
add
add
add
xchg
add
add
add
push
add
ljmp
add
add
add
xor
add
add
xchg
jl
add
add
add
add
add
add
add
add
add
add
add
add
jmp
xor
xchg
and
add
ss
das
add
add
add
add
and
xor
jnp
pop
fcoms
or
testl
adc
mov
inc
popa
fdivr
ficoms
aaa
les
pushf
xchg
in
pop
mov
jb
inc
pusha
xchg
imul
nop
repz
je
aam
inc
sarb
mov
or
int
sahf
jl
popf
loope
aas
jle
sub
mov
dec
xor
movsb
rorb
pop
mov
xchg
addr16
dec
add
clc
leave
popa
jnp
pop
fistpl
outsb
std
mov
xlat
data16
lods
ret
push
in
leave
push
push
sti
into
mov
shr
jmp
loope
ja
aaa
mov
rorl
lret
xchg
enter
xor
into
add
bound
fs
pop
cmp
pop
mov
fidivrs
adc
std
js
mov
in
adc
pop
xor
xchg
and
lods
fisttpl
xchg
sub
shrb
dec
push
pmuludq
and
neg
sub
fdivrp
pop
xor
mov
cmp
sbb
lret
jbe
mov
popl
outsb
pop
cmp
xor
fs
push
data16
adc
jl
fucomip
shl
sbb
lea
daa
dec
add
mov
add
ret
pop
jl
ss
add
mov
lock
pushf
cmp
pop
add
fldcw
sub
lret
add
sub
dec
jne
push
mov
and
fs
cmpsl
out
pop
test
in
insl
rcll
sbb
jmp
cmpb
push
setge
pushf
lock
dec
std
jge
cmp
maxps
fisubl
push
dec
or
out
mov
inc
in
jne
push
pushf
pop
lahf
rol
sub
scas
outsb
jns
ljmp
scas
out
push
sbb
cmp
xchg
mov
iret
cmp
loopne
hlt
pop
xchg
fstpt
sub
ljmp
jg
dec
jne
aaa
mov
outsb
cmp
cmc
es
push
aad
loop
xlat
cwtl
push
push
cmp
mov
mov
loope
sub
mov
mov
xchg
jle
fmuls
pop
pop
xchg
jl
inc
lahf
push
jmp
cmp
cmp
mov
dec
lea
jne
mov
call
sub
pop
imul
adc
cld
je
xlat
pop
jns
clc
test
sub
lret
xlat
repz
repz
add
loope
sbb
pop
cmp
add
fsubr
xor
insl
cmp
loopne
fsubs
jbe
mov
sub
ja
xor
je
fsubrs
dec
dec
dec
mov
int3
dec
test
in
mov
loop
sar
ret
push
and
jl
ffreep
pop
sbb
sbb
pusha
aaa
lods
pop
cmp
lret
stos
sti
mov
adc
iret
rcl
mov
sub
pop
mov
adc
adc
subb
enter
add
dec
dec
push
push
and
sbb
adc
jl
sbb
jp
cld
xchg
lock
lea
outsl
add
push
sbb
scas
int3
dec
hlt
mov
and
je
or
cs
inc
and
mov
iret
xor
xchg
adc
push
lock
inc
ljmp
dec
addr16
or
sbb
arpl
add
jge
and
add
enter
sub
xchg
xor
add
inc
and
fs
jbe
pusha
jmp
pusha
movl
pushf
jmp
insl
mov
bound
sbb
mov
test
sub
jg
ja
jge
scas
incb
cmp
andb
iret
xchg
or
mov
ss
pop
dec
cs
call
std
mov
xchg
in
repz
mov
jae
sbb
push
jae
mov
sbb
pop
loope
adc
pop
sar
mov
or
mov
pop
ret
ret
test
add
adc
shl
iret
sahf
popa
cmpsb
packssdw
loopne
pop
cld
mov
mov
call
scas
pop
out
jnp
aaa
push
push
sbb
mov
xchg
xchg
mov
movsl
jbe
push
lods
pop
mov
das
clc
sbb
int
mov
mov
pop
mov
push
push
mov
adc
je
inc
xor
jne
xor
jl
fistps
push
push
mov
mov
ret
lods
arpl
pop
jns
fcmovb
mov
jmp
adc
pushf
and
imul
dec
mov
sbb
lret
or
xor
into
dec
or
push
push
repnz
rclb
pop
loopne
sar
incl
dec
sub
xchg
ss
inc
add
mov
dec
jge
add
jbe
cmp
push
int3
cmc
rclb
es
jle
pop
mov
test
xor
leave
in
sbb
jmp
sbb
out
in
or
out
or
jbe
fsubrp
data16
cmp
adc
mov
cwtl
cmp
xchg
and
xchg
loopne
aam
jno
mov
pop
fiadds
adc
mov
aam
out
pusha
das
mov
movsl
xchg
add
test
lret
jne
adc
sbb
sbb
das
loop
mov
add
mov
xorl
cli
out
arpl
dec
jecxz
xchg
loope
loope
push
push
scas
sti
jae
mov
test
xor
scas
into
mov
jge
inc
std
push
push
lahf
sahf
ja
mov
push
jne
insl
leave
es
dec
pop
or
pop
sti
cmovne
xor
xor
clc
addr16
rol
push
jnp
dec
test
ucomiss
pop
das
sbbl
xlat
dec
cs
rcrl
or
cwtl
jae
cmp
test
add
ljmp
push
jb
sbb
sbb
stos
xchg
jns
ds
inc
add
and
sub
xor
xchg
pop
add
je,pt
fistpl
lahf
jp
in
movsb
jmp
mov
orps
movsl
loopne
cmp
movsl
xlat
xor
fwait
pop
lret
in
test
sbb
cmpb
jno
fmull
repnz
jmp
stos
fiadds
nop
push
icebp
dec
push
cmpsl
push
sbb
xlat
adc
dec
push
pusha
lea
ja
pushf
jmp
mov
loop,pt
fisttpl
push
insl
and
bound
mov
in
push
lods
out
sbb
stos
lds
enter
mov
mov
rcl
shlb
movsb
xchg
and
aam
inc
enter
xchg
and
mov
xor
dec
int3
out
or
or
call
pop
lods
xchg
sub
and
jle
cmp
int3
arpl
std
sti
sbb
js
inc
aam
out
cwtl
cltd
cmc
add
clc
imul
repnz
mov
popl
ret
xlat
adc
inc
pop
fs
lahf
dec
es
mov
cmpsb
adc
or
jae
mov
mov
cmp
movsb
xor
addr16
das
xchg
lock
sbb
lods
xchg
popa
mov
test
or
jmp
in
xchg
mov
jo
jb
in
cwtl
sbb
pop
decb
pop
orl
xor
push
bound
xchg
in
pop
jbe
hlt
sbb
fcoml
xlat
push
sbb
ret
mov
sub
mulb
pop
and
cwtl
and
xor
lss
jmp
int
sub
adc
inc
lds
repz
mov
push
inc
daa
pop
xchg
and
scas
push
fwait
or
mov
pop
test
sbb
inc
cltd
test
and
cwtl
dec
test
push
xchg
xor
sub
hlt
outsb
cmp
pop
je
lea
jae
bt
call
call
adc
adc
adc
fcmovb
addr16
mov
push
xor
ljmp
cmpsb
jp
fdivs
push
mov
cmpsb
cld
out
dec
int3
dec
sub
es
dec
movsl
jl
into
push
pop
mov
addr16
jecxz
jl
fdivrs
mov
enter
mov
xor
mov
sbb
push
add
or
xor
push
add
xlat
pop
sbb
or
test
ja
pushl
test
sub
movzbw
rcr
sub
shld
mov
bt
jmp
test
add
xchg
fnstenv
scas
dec
pop
loopne
dec
inc
pushf
mov
mov
or
repnz
test
mov
adc
or
incb
sub
or
stc
adc
pusha
and
ss
mov
fs
jp
lods
loop
mov
pop
mov
cmp
push
cli
aas
mov
pop
sti
and
xchg
in
insl
or
pop
gs
push
dec
js
outsl
cmp
xchg
aaa
xor
cmpsl
dec
mov
dec
lret
mov
mov
dec
rol
pushf
call
and
mov
popa
fnstsw
decl
fildll
rclb
sbb
sbbl
cld
sbb
lea
out
vmread
hlt
sub
pop
pusha
out
cltd
mov
mov
jbe
hlt
movl
jle
push
jbe
std
jbe
and
dec
cmpsb
push
out
repnz
pop
cmp
mov
fdivl
inc
mov
mov
jae
setle
inc
pusha
mov
dec
dec
jmp
fsubrl
dec
xchg
sbb
inc
push
mov
lret
push
sbb
jno
fcomps
fisubl
js
vmovq
pop
rcr
mov
xchg
sub
stos
fwait
bound
dec
xchg
repnz
dec
outsl
jmp
out
and
xor
mov
clc
push
xchg
sub
jne
movsl
aad
jo
inc
rcl
pop
mov
push
call
les
imul
push
enter
data16
lds
jmp
test
call
cmp
pop
xor
ret
or
xlat
sbb
adc
rclb
pushf
movb
pusha
lea
je
call
push
insb
adc
and
popf
push
bound
lds
dec
dec
sar
bt
or
sub
fsubrs
push
mov
push
negl
mov
pushl
es
dec
shll
in
or
adc
push
cs
xor
inc
je
lret
sbbb
mov
inc
int3
cmp
xlat
dec
pushf
mov
add
scas
jo
popa
adc
jp
cwtl
mov
ret
outsl
loopne
pop
pop
dec
shll
inc
pop
aas
xor
ljmp
cmp
pushf
movl
pusha
pushf
lea
jbe
adc
rol
bswap
shl
mov
not
sub
pushf
movsbw
add
not
bswap
mov
lea
sub
add
inc
rcr
bts
movl
clc
call
sar
sub
pop
add
test
rcl
mov
pushf
test
sub
cmp
pusha
pushl
popl
bt
cmp
pusha
jmp
lea
jbe
shl
push
xadd
sub
sar
clc
cmp
not
mov
sub
not
cmp
dec
mov
neg
bsf
movzbw
add
bsr
sbb
xchg
shr
sub
bts
add
btr
mov
btr
ror
add
mov
pushf
movsbl
jmp
lcall
sub
call
sub
mov
xlat
jo
scas
add
insb
add
addl
pusha
jmp
cmp
add
pushl
dec
call
add
inc
js
je
jb
arpl
jae
stos
je
or
inc
aad
fs
rol
jp
jmp
and
xchg
add
cmp
repnz
push
push
xchg
ret
cli
add
inc
in
mov
iret
rol
pushf
dec
push
lret
push
ljmp
push
sub
scas
push
ds
in
scas
insl
lods
mov
sbb
push
and
jnp
xchg
int3
dec
add
aas
mov
and
ljmp
aaa
xchg
bound
loop
add
adc
test
push
lret
mov
sbb
fstps
mov
and
push
pop
mov
mov
mov
nop
sub
lahf
stos
bound
stos
scas
repnz
stos
mov
or
jmp
xchg
pop
xchg
sub
jge
pop
cmp
pop
jle
push
mov
ljmp
loope
fwait
shl
pop
and
insb
mov
jbe
jge
mov
stos
iret
hlt
repz
pop
mov
jno
aam
and
pop
pop
testb
mov
lods
pop
lods
jge
in
xchg
pop
imul
imulb
sahf
popa
mov
push
sbb
xor
xchg
fisubl
push
fcmovbe
pop
xlat
or
mov
dec
jge
iret
jno
and
pop
mov
call
sub
fnstcw
sbb
or
mov
fadds
fs
push
mov
fidivrs
pop
shrb
lock
andb
sub
xchg
out
xchg
cs
lods
out
aam
or
push
mov
repz
aam
sbb
mov
xchg
ds
aas
dec
dec
xchg
xchg
and
dec
bound
insl
lods
mov
mov
sti
mov
jle
adc
push
cmp
idivb
mov
xlat
sbb
inc
add
mov
cmp
cmc
jmp
stos
seto
call
pushf
movl
jmp
or
repz
imul
frstor
or
loope
dec
shlb
das
int3
jne
fwait
pop
push
ss
mov
jno
mov
fdivl
sub
adc
push
cmc
mov
xchg
mov
inc
pop
push
aaa
js
leave
push
sub
push
adc
scas
movsb
sub
insl
push
aaa
sub
stos
jge
mov
lahf
imul
mov
aad
add
fisttpll
out
rclb
push
adc
adc
xor
mov
popf
addr16
testl
xlat
push
adc
fs
in
cmpsb
push
pop
cld
inc
or
test
push
and
dec
lds
cmpl
cwtl
lock
or
popa
and
dec
inc
pusha
and
cltd
adc
popa
rcrl
cmpsl
pop
jo
xchg
fidivl
ret
and
ret
fcomp
push
sbb
in
mov
testl
pop
jp
loopne
xor
and
das
push
fwait
scas
out
gs
mov
mov
add
xlat
sarl
and
push
mov
aad
fdivp
lret
outsb
mov
lods
movsl
cmp
adc
int3
cmp
insb
cmc
adc
cmc
push
fldl
and
icebp
sub
push
dec
push
jmp
mov
popa
adc
push
xchg
or
lea
pop
or
lods
cmp
stc
and
in
cli
arpl
pop
scas
ds
mov
arpl
and
test
cmp
iret
gs
pop
xchg
cmp
test
jecxz
cwtl
jns
mov
mov
sbb
mov
insb
push
call
fidivrl
sub
cmp
fdivs
push
mov
xor
pop
xchg
lcall
test
outsl
cld
push
push
sub
test
pushf
call
call
pop
mov
jne
aam
pusha
mov
and
sub
out
icebp
pop
dec
shrb
inc
push
xor
or
sub
lock
test
pop
mov
mov
mov
push
sarl
mov
lcall
dec
loop
sub
rclb
sarb
dec
rcr
frstor
inc
xor
mov
insb
xchg
mov
sub
pop
xor
pop
push
cmp
int3
inc
adc
mov
add
stos
imul
add
sub
loopne
sbb
cltd
xor
mov
fnstsw
jecxz
jmp
jmp
dec
ja
mov
in
add
iret
mov
mov
insl
hlt
aam
dec
add
jae
jo
mov
lcall
sub
loopne
jb
pop
push
inc
and
xchg
sub
mov
pop
ja
jge
mov
sbb
test
add
push
movb
pusha
lea
movzbw
mov
lahf
lea
call
hlt
jo
push
cmp
push
mov
into
stc
ret
mov
shll
xchg
jl,pt
ret
xor
mov
jb
jne
jbe
rorb
divl
xchg
ror
push
adc
hlt
mov
addb
push
stos
pcmpgtw
jae
fcmovbe
insl
dec
jge
mov
lea
sti
jns
fwait
incl
pop
pop
cli
cmp
addr16
das
scas
loope
mov
adc
leave
push
pop
fldenv
jecxz
out
out
imul
adc
clc
cmp
cmp
call
pusha
cmp
fxch
nop
adcl
cmp
call
xchg
sbb
inc
xor
in
and
push
dec
stos
test
mov
cs
fsubrp
add
rcrl
ret
sub
mov
out
adc
inc
push
jnp
rclb
incl
adc
xchg
out
add
ret
mov
ljmp
stc
cmp
mov
pushf
fcmovnb
inc
jo
cmp
xchg
insl
sbb
mov
orb
push
cmc
jl
shll
mov
pop
popa
pop
xchg
imul
orb
pop
insb
push
pop
mov
bound
ljmp
stc
cmp
icebp
lock
push
pop
push
xchg
in
pop
sbb
sub
cmp
imul
mov
lcall
dec
shlb
jns
lea
pop
testb
pop
and
leave
addb
xchg
call
sbb
add
clc
aas
ffree
loopne
imul
dec
inc
test
aam
inc
inc
pop
inc
inc
dec
sub
add
mov
or
pop
xchg
inc
adc
adc
cmp
repz
rorl
test
scas
push
mov
sbb
mov
repnz
xor
sbbb
dec
stos
sub
les
fcoml
pusha
pop
push
jae
popa
psubw
mov
dec
out
addl
mov
cs
fbstp
in
and
jb
pop
xchg
pop
push
fcoml
add
in
into
mov
adc
and
in
bt
test
cmp
xor
pushf
pushf
movb
inc
lea
pusha
pusha
lea
call
jmp
xor
arpl
inc
sub
and
in
dec
mov
loop
inc
rorb
mov
cld
ret
test
js
js
xor
nop
or
cmp
sbbl
dec
out
sahf
pop
adc
pop
add
inc
mov
and
into
cmp
adc
cld
mov
imul
lcall
shl
adc
sbb
add
outsl
ja
jne
jae
jb
cmc
repnz
jmp
jmp
lret
mov
xchg
push
sub
test
daa
stc
clc
fistps
dec
sbb
pop
push
test
cli
ja
es
and
jg
mov
adc
sahf
jae
movsl
out
ret
cmp
fnsave
mov
cwtl
jae
lods
in
orb
or
ss
xlat
addr16
cmc
mov
in
jmp
jp
notb
outsb
adc
addl
pop
or
xchg
aas
mov
out
add
into
sbbb
dec
dec
add
mov
xlat
and
in
mov
lea
push
mov
jmp
out
add
mov
jno
leave
nop
push
mov
cwtl
inc
or
mov
xor
sbb
xor
dec
and
adc
push
pop
arpl
in
add
fwait
add
mov
outsb
add
jmp
dec
out
pop
mov
daa
pop
test
jne
repnz
lret
add
push
jae
cmp
sub
adc
arpl
cwtl
inc
xchg
fs
pop
xchg
faddl
fisttpl
movsb
lds
mov
sub
mov
dec
sbb
shlb
imul
bound
or
mov
pop
mov
mov
pop
rcl
test
outsl
popa
cld
mov
xchg
mov
adc
sub
sub
int
dec
pop
shll
mov
das
push
adc
add
fnstsw
sbb
scas
clc
push
mov
mov
hlt
jns
lods
in
push
cmpsb
adc
cmp
insl
xchg
inc
sbbl
sub
sbb
push
lds
add
fadds
test
in
push
shr
stos
push
sbb
mov
pop
addr16
jbe
push
int3
lea
push
std
popf
push
xchg
in
pop
nop
adc
sbb
bound
mov
xor
stos
xchg
sub
adc
lods
in
fstps
sub
faddp
addr16
cmp
loopne
jo
test
mov
mov
inc
pop
jb
xchg
lods
xor
in
repnz
and
lock
add
les
mov
lock
ds
mov
xlat
es
cmp
enter
pop
lahf
mov
bswap
lea
call
or
shrl
fstpl
cli
loope
test
cmp
lds
scas
push
cli
test
lds
sub
mov
aas
stc
or
xchg
mov
and
addl
inc
cli
and
mov
loop
xchg
int
xor
ds
sub
push
xor
clc
sti
add
and
cmp
lds
pop
add
mov
mov
out
stc
adc
xor
inc
adc
call
sbb
push
sub
bound
aam
fiaddl
adc
popa
sahf
xchg
xorl
stc
fidivrs
push
mov
popf
cli
in
cmp
push
test
push
fdivl
xor
mov
jl
push
jp
push
dec
push
in
mov
icebp
aam
int3
orl
push
sub
inc
out
sub
adc
mov
bound
inc
add
dec
movlps
jne
push
out
pusha
clc
mov
adc
mov
xadd
test
clc
push
rcl
push
bswap
ror
rcr
push
bsr
test
and
mov
pushf
xadd
stc
mov
or
pushf
mov
pushf
rcl
rol
cmp
sub
lea
xchg
mov
jmp
insb
hlt
ret
sbbl
push
cltd
ret
cli
les
ds
shlb
idivb
pop
aas
jb
imul
jle
pusha
jg
rcr
imull
stos
jo
test
faddl
sub
or
mov
cmpps
cmp
xchg
and
mov
js
xchg
outsb
movsl
cld
arpl
adc
xlat
daa
test
lret
mov
cmp
mov
ret
popa
loope
or
cld
xor
imul
icebp
sbb
jmp
mov
mov
jns
es
ja
fs
adc
lods
outsb
scas
fldl
scas
sahf
fsubrl
sub
aas
sahf
divl
mov
xchg
ficomps
or
push
mov
lods
and
push
dec
into
sub
add
cs
je
pop
daa
out
rorl
sub
add
add
fsubs
fs
jne
sub
rcr
mov
clc
push
add
push
push
pusha
movzwl
pushf
bsf
stc
mov
pushl
clc
add
clc
cmc
pushf
mov
test
test
pushf
push
lea
je
cmc
bt
cmc
call
add
push
dec
inc
gs
popa
insb
insb
outsl
arpl
lea
je
pusha
pushf
push
lea
jmp
cmp
push
stos
jns
imul
pop
bound
sti
int3
stos
or
inc
stos
dec
scas
inc
dec
mov
mov
insb
dec
cmp
and
push
decl
mov
xchg
and
fiaddl
fs
inc
push
adc
mov
adc
mov
add
pushf
out
scas
sub
mov
mov
push
cmp
repz
adc
add
movsb
out
stos
push
loope
dec
add
das
dec
inc
fdivl
or
xchg
mov
sub
push
shl
adc
and
mov
shlb
ret
and
mov
and
pop
lahf
mov
add
jmp
mov
xor
jno
push
add
xor
adc
and
push
enter
nop
xchg
xor
xchg
cmp
xchg
pop
js
add
xor
ret
adc
insb
push
dec
adc
test
es
fnstenv
and
push
adc
lcall
call
lods
jnp
mov
lcall
sub
aad
lds
data16
ljmp
js
xchg
jbe
mov
pusha
dec
jne
jle
repnz
push
jo
sub
push
mov
sahf
mov
fsubrl
test
mov
or
insb
mov
push
lea
jb
clc
clc
clc
jmp
out
in
jl
std
inc
negb
sahf
mov
pop
scas
mov
jae
sub
mov
adc
outsb
and
dec
push
call
imul
in
notl
aam
mov
hlt
or
xchg
cmp
repnz
je
pop
xchg
mov
mov
mov
cmp
xchg
jl
sub
loop
mov
xor
dec
cmpsb
mov
push
cmp
mov
add
mov
pop
adc
movsl
cmp
movsl
xlat
or
loopne
jbe
dec
add
idiv
push
dec
leave
pushf
cmp
jns
add
jnp
out
lahf
push
out
insl
jae
jns
js
xchg
adcl
push
mov
jae
push
pop
jbe
or
lds
jae
cld
dec
cmp
add
mov
movsb
stos
adc
jp
hlt
scas
es
xlat
sub
je
paddd
xor
addb
fnstsw
sbbl
inc
and
and
movsb
pop
lds
mov
xlat
and
ja
mov
hlt
cmp
fcmovnu
lcall
dec
mov
pop
loopne
ret
adc
outsl
loop
daa
jae
aam
cmp
stos
push
add
jno
push
test
mov
or
scas
lods
mov
ds
xchg
xor
daa
cwtl
cmpsl
xor
mov
dec
adc
pop
push
xor
mov
jecxz
pushf
cwtl
mov
mov
lea
cwtl
lea
push
call
movb
pushl
jmp
popa
fs
jo
xor
cs
insb
add
mov
or
sub
bts
mov
cmc
push
add
movw
bt
push
mov
stc
pushf
cmp
cmp
test
pusha
pushf
lea
je
bt
clc
add
test
cmp
pushf
pusha
pusha
lea
jb
clc
bt
test
cmp
cmp
call
pusha
pushl
mov
mov
lea
pop
push
pusha
mov
pusha
pushl
ret
div
cmp
or
inc
push
pop
pop
rcr
je
lods
jo
scas
leave
shll
cmc
xor
cmp
mov
or
lods
fildl
sub
stos
jne
xor
push
push
pusha
ficomps
adc
jno
jmp
sbbb
mov
divb
das
pusha
rclb
jae
cmpsl
fidivrs
and
lcall
pop
add
xchg
mov
dec
jno
mov
lock
sub
sub
mov
cli
jbe
mov
test
das
imulb
mov
and
jge
fs
jne
lahf
push
not
movb
setb
lea
movsbw
movzbw
mov
call
cmp
in
push
icebp
xor
inc
push
mov
jno
in
add
inc
cmp
mov
ficoms
insl
xor
sub
iret
cmc
dec
mov
mov
and
cmp
mov
in
insl
add
xchg
dec
rclb
movsl
arpl
jns
lods
mov
arpl
jnp
ss
dec
rcrl
insl
sub
ja
xchg
clc
add
jle
test
loopne
mov
and
xorb
pop
sarb
mov
lahf
sub
jb
inc
inc
add
mov
xor
pop
pop
mov
aam
call
out
sbbl
sbb
pop
je
inc
or
popa
xchg
das
xor
or
nop
jo
lret
or
cmp
add
jns
mov
dec
jecxz
mov
mov
dec
enter
cld
sub
add
int
mov
push
pop
imul
jo
jo
xchg
mulb
ja
arpl
mov
adc
xor
mov
rorb
aaa
sub
adc
pop
fldt
scas
ss
popf
sub
push
roll
xor
imul
jp
adc
lret
cmp
inc
sub
je
xchg
jg
shrl
cmc
arpl
sarb
sub
xor
bound
setle
in
push
sub
xlat
das
pop
adc
mov
mov
ljmp
into
andb
or
in
jmp
push
loop
dec
sahf
int
push
jmp
inc
lds
xchg
mov
mov
sub
inc
adc
syscall
in
push
pop
sbb
jl
jno
xor
lods
and
add
jae
jge
sbb
add
push
sbbl
scas
adc
mov
pop
ss
and
xchg
sbb
jbe
and
adc
mov
lahf
inc
rcrl
bound
iret
mov
push
pop
jbe
shll
mov
pop
sbb
jmp
xchg
fildl
lret
sbb
adc
inc
popa
ss
or
mov
data16
bswap
pop
bswap
call
fs
out
sub
fmuls
in
mov
aad
push
jnp
add
pop
in
push
inc
loop
imul
mov
aas
arpl
call
mov
rclb
pop
mov
mov
setle
je
sub
inc
ret
out
fisubrl
loope
xor
fmuls
imul
cmp
aad
jne
out
std
and
fldenv
pop
add
test
jae
push
mov
repnz
cli
push
ret
fidivrs
dec
xor
mov
jno
add
adc
lcall
cmp
scas
adc
push
sbb
imul
std
imul
sahf
sub
pop
or
fsub
scas
iret
cmc
or
outsl
xor
xchg
inc
inc
aad
push
cmpb
aam
xchg
adc
popf
iret
daa
xchg
imul
sub
es
shl
aam
stos
aaa
mov
cmp
sub
cmp
sti
mov
push
int3
push
jbe
mov
rorb
adc
repnz
aad
aad
xlat
xor
call
je
add
add
push
jmp
repz
dec
pop
sub
mul
jmp
jb
jl
lods
jge
movsl
jg
imul
jb
ds
cli
jp
scas
int3
push
mov
cmpsb
fs
dec
out
shll
sbbl
js
mov
std
popa
movl
dec
vmulss
or
and
or
fstl
push
xor
inc
add
imul
xlat
xor
sbb
add
pop
cmc
les
out
imul
fcmovnb
test
xor
orb
xchg
dec
cmp
xchg
mov
icebp
fwait
and
fimuls
xchg
rorl
cmp
stos
fstps
push
filds
pop
sbb
fnstsw
testb
je
scas
or
movsl
sbb
push
stc
arpl
lods
paddusb
test
mov
incl
clc
mov
fwait
or
stc
push
mov
arpl
out
out
sbb
pop
je
add
push
mov
add
xor
int3
ret
mov
add
add
mov
add
loope
add
ret
mov
add
lods
aaa
add
ret
mov
add
ret
inc
mov
add
ret
dec
mov
add
daa
add
ret
push
mov
add
mov
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
xor
and
add
mov
cmpsb
rorb
sub
fistpl
pop
cmp
sbb
mov
xor
mov
pop
setae
pop
fnstcw
scas
xlat
and
add
sub
dec
push
xchg
adc
testl
add
jle
lock
iret
fwait
sbb
jae
rclb
outsl
and
jo
inc
push
je
jle
pop
fs
leave
xchg
push
daa
andb
jmp
cmc
mov
add
pushl
push
pusha
lea
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jns
cltd
cs
roll
mov
or
clc
mov
xchg
push
rcr
jne
sbb
pop
inc
loop
sbb
sbb
nop
mov
xchg
xlat
mov
bswap
pop
sarl
mov
adc
inc
lods
push
test
hlt
cs
aad
adc
dec
cld
repnz
daa
jp
loop
pop
pop
xor
dec
mov
xor
adc
and
imul
lods
jb
push
mul
lahf
mov
push
fsub
leave
add
mov
adc
aam
dec
jno
sub
sbb
insl
les
and
lret
lock
push
ja
jns
cmpsb
push
movsb
jge
fildll
out
cs
ds
int3
out
ljmp
xchg
fists
loop
push
push
aas
mov
out
das
jns
scas
mov
pop
inc
xchg
cmp
inc
je
mov
shll
popf
ret
pop
mov
lret
flds
fdivrl
mov
and
stos
jg
enter
sub
xchg
pop
mov
in
leave
pop
and
xor
test
cs
lods
xchg
cld
fstp
jecxz
push
dec
insl
test
xchg
push
pop
jnp
jno
xchg
movsl
std
xor
xor
fcompl
inc
mov
and
mov
sub
das
mov
xor
xchg
cmp
cwtl
leave
mull
sbb
mov
cmpsl
xor
mov
xchg
cld
xlat
rclb
clc
mov
add
lds
mov
sti
push
add
pusha
movzwl
dec
mov
bt
test
jmp
movl
movb
pushf
pusha
pushl
lea
jmp
jge
sbb
add
push
cltd
push
push
ss
pushf
sub
jp
pop
inc
aad
je,pn
in
inc
cmp
push
cs
push
bound
push
test
dec
stc
mov
pextrw
dec
std
xchg
loope
inc
sbb
push
inc
dec
mov
cmp
dec
sub
fistpll
scas
or
push
orl
mov
xchg
mov
test
and
cmp
scas
adc
jge
insl
leave
dec
stc
mov
sub
call
lea
call
push
mov
lea
jb
push
push
pushf
push
pushl
ret
sbb
mov
daa
int
jge
mov
test
in
pop
xchg
add
mov
push
pop
int3
and
pop
lahf
xor
sub
mov
imul
mov
int
aad
lahf
sbb
fnstcw
fwait
adc
pop
sbb
in
repz
push
dec
push
push
cmc
es
aas
pop
and
sub
mov
popf
cmpb
fcoms
arpl
addb
lea
add
push
and
dec
push
test
aam
cmp
ss
xor
int
inc
popf
or
lock
jno
cmp
shlb
ret
std
adc
dec
jl
adc
cld
cmp
loope
pop
mov
push
mov
nop
out
jecxz
lret
sub
cltd
repnz
add
dec
and
js
xlat
push
clc
xor
add
jmp
insb
sub
ds
sub
ljmp
aas
fcompl
insl
pop
sub
cmp
mov
out
test
sub
cmp
dec
mov
mov
lock
cmp
pop
push
loop
stos
jne
and
xchg
cli
and
xchg
aas
or
lds
dec
pop
loopne
pop
cwtl
es
push
cmp
not
fnsave
jae
movsl
mov
xlat
cmp
pop
add
pop
add
cmp
negb
mov
mov
cli
push
add
pop
addr16
mov
jl
out
sbb
imul
bound
lds
in
cwtl
mov
rolb
inc
inc
lock
in
loopne
subl
insb
cli
stc
mov
adc
movsl
orl
cld
popa
stos
nop
mov
mov
iret
aas
inc
fs
faddl
jne
pop
in
or
das
clc
jmp
pop
popf
sub
addl
movsb
out
xchg
stos
push
jecxz
mov
loope
outsb
or
in
jg
jl
adc
mov
insb
stc
bound
push
gs
or
lahf
mov
cli
jl
mov
cltd
cmc
mov
daa
add
mov
adc
mov
pop
sub
adcl
adc
sub
out
adc
inc
daa
movsb
lret
sub
out
lcall
xchg
xchg
je
fildll
jp
pop
jecxz
jo
rol
cmpl
inc
mov
xlat
cmp
push
aam
push
insl
or
out
sbb
mull
mov
pop
ret
xchg
in
mov
out
les
lods
cmpsb
imul
cltd
dec
pop
or
shlb
add
cwtl
mov
je
inc
out
and
mov
cmp
inc
jno
jb
cmpl
jmp
imul
ret
adc
dec
xchg
outsl
aaa
fdivs
push
pop
popa
sbb
push
lds
pop
int3
cltd
sbb
mov
hlt
sti
or
ror
lock
sub
xchg
js
mov
and
adc
sub
sub
add
fstpt
xchg
fstps
popf
mov
lret
xchg
dec
mov
cmp
dec
cli
cs
insb
jne
es
stc
mov
mov
xlat
mov
jo
lahf
sbb
data16
jo
fisubrs
push
mov
push
stos
dec
sti
push
cld
sbb
pop
insb
mov
addr16
jb
aam
add
adc
sub
fistpl
ss
test
test
loopne
push
or
jae
jno
cmp
pop
xor
or
nop
mov
test
add
popa
insb
inc
jb
add
mov
pushf
pushl
adc
lea
pushf
pushf
pushl
ret
negl
pop
insl
inc
pop
ret
aaa
in
mov
jg
pushf
jecxz
dec
aam
hlt
rcrl
mov
je
scas
mov
outsl
mov
gs
rol
lea
in
leave
mov
int
negb
cmc
cmp
add
inc
daa
add
inc
xor
cmc
ret
cmpsb
sti
sub
adc
icebp
subl
fdivr
or
jle
repz
dec
sbb
mov
pop
dec
push
dec
xor
push
push
and
icebp
imull
dec
iret
test
je
stos
jne
lret
mov
pop
lea
jae
jo
bt
cmc
stc
cmp
jmp
mov
leave
std
mov
scas
out
and
cmp
outsb
gs
xchg
mov
negb
mov
insl
jne
int3
sahf
dec
dec
stos
push
dec
pop
cli
movsb
flds
test
arpl
nop
cmpsl
mov
dec
lcall
icebp
dec
or
mov
sahf
lods
lahf
mov
push
fcomp
dec
cli
sti
inc
xchg
out
divl
add
add
jbe
notb
xchg
push
mov
add
xchg
xor
cwtl
stos
dec
insb
outsb
std
popa
xchg
lods
lret
sub
and
sbb
push
jp
in
pop
mov
testb
adc
jge
rclb
sti
mov
mov
xlat
cmp
mov
outsl
adc
and
add
pusha
xlat
popf
gs
dec
cmc
dec
int3
test
jo
cltd
lahf
xlat
das
aad
ds
push
in
xlat
push
sub
mov
mov
movsb
hlt
nop
xor
add
pop
adc
enter
fcomps
das
sbb
in
fiaddl
sbb
and
movsb
mov
sbb
ret
in
lcall
and
jmp
stc
inc
mov
mov
in
inc
fs
mov
push
sbb
shll
mov
sbb
push
and
cmp
mov
and
cmpb
cli
aad
or
mov
test
jb
arpl
mov
leave
test
and
pop
pop
adc
test
notl
cmc
bswap
jae
sbb
stos
and
mov
int
mov
fwait
and
hlt
push
inc
lahf
push
faddl
push
dec
fists
hlt
stc
fistl
int
std
in
sbb
cmp
jae
mov
xchg
add
das
outsl
xlat
mov
mov
aam
cmpsl
pop
inc
ss
mov
adc
mov
push
jmp
div
fcompl
and
leave
pop
add
leave
outsl
lcall
lahf
mov
push
sbb
mov
jg
jg
aad
sub
hlt
dec
out
in
jno
or
ja
fs
dec
push
jne
in
xchg
mov
repz
xchg
mov
and
ret
push
xchg
xchg
mov
rcll
fs
lcall
test
rcr
in
dec
dec
cmpsl
add
inc
stos
or
cmpsl
push
fsubp
fcoml
push
dec
stos
inc
mov
or
imulb
es
mull
jae
popf
adc
xchg
out
sbb
mov
hlt
sub
out
push
sub
repz
mov
jge
test
jno
movsl
aas
dec
adc
jle
jge
call
ljmp
mov
cwtl
lret
subl
fs
jno
lahf
sbb
jge
leave
test
out
mov
jno
dec
cmp
sbb
cmp
mov
cmp
aad
or
insl
in
das
addr16
push
push
xchg
insb
push
test
cmp
mov
add
ss
jo
out
rolb
mov
movsl
shr
mov
add
mov
mov
sbb
dec
mov
jecxz
xchg
rcll
je
push
test
pop
stc
enter
leave
out
dec
sub
jnp
stc
pop
fcmovnbe
mov
out
or
test
add
dec
dec
repnz
xchg
aam
stos
fs
mov
in
inc
incl
aas
pop
int
and
jecxz
in
dec
mov
sub
inc
shll
stos
mov
fbstp
ja
mov
fsubl
mov
nop
in
int3
pop
enter
hlt
addb
out
mov
mov
sbb
inc
sbb
cmp
jg
out
popf
fs
cmp
sbb
adc
std
lret
push
add
jno
add
and
pop
jbe
xor
push
int3
xor
push
jl
mov
jb
xchg
sub
inc
or
lods
popa
and
in
mov
push
pop
out
push
test
sbb
mov
jg
adc
lods
inc
mov
sub
ds
xchg
jmp
shll
or
mov
out
cmp
push
jl
jbe
std
cmp
or
das
jecxz
addr16
sbb
ja
jnp
mov
lods
leave
or
cli
mov
cmp
pop
pop
or
adc
jl
fldl
push
mov
pusha
push
scas
js
pushf
sub
dec
sbb
loop
mov
jo
xchg
ret
xchg
lahf
decb
clc
popa
mov
jg
mov
outsl
mov
push
addr16
lds
jmp
push
fxch
pusha
dec
loopne
pop
and
adc
cmpsl
xchg
add
cmc
lods
jo
jle
xchg
jecxz
inc
cltd
js
imul
xor
addb
sahf
push
dec
mov
fisubl
pop
ss
jnp
call
scas
outsb
lahf
push
das
push
fmull
shll
imull
jno
add
and
shr
aad
mov
pop
jo
xlat
imull
mov
repz
xchg
pop
sbb
or
inc
push
nop
icebp
and
aad
push
jns
testl
sbb
cltd
in
popa
cmp
sub
adc
or
push
test
add
dec
sbb
push
mov
cmpsl
out
cld
or
rcll
or
cwtl
push
dec
mov
insl
jle
sahf
data16
mov
push
and
fs
stos
in
jg
xchg
cmp
aaa
mov
mov
push
les
xchg
enter
int
insl
mov
sbb
jmp
ret
mov
cmc
sbb
xchg
sbb
pusha
movl
mov
push
push
mov
movl
movb
lea
jmp
leave
ljmp
loopne
icebp
insb
loopne
mov
cmp
stc
mov
ss
cmpsb
and
leave
xchg
mov
lea
jae,pt
or
xlat
fdiv
mov
push
fnstsw
sbb
xchg
push
xchg
loopne
xchg
push
js
cltd
jle
shlb
into
push
loop
push
mov
pop
aam
jmp
dec
les
cmpsb
jb
jp
insb
sub
sub
in
popf
lea
pop
add
stos
fwait
jg
xchg
imul
rolb
mov
ret
xchg
mov
inc
add
fdivp
lods
repz
cmp
adc
xchg
ljmp
pop
xchg
inc
mov
clc
xchg
mov
or
ret
dec
pop
mov
push
push
arpl
cmpsl
ljmp
push
pusha
inc
or
dec
and
inc
adc
dec
sbbl
and
mov
roll
mov
pop
out
pop
pop
mov
fdivrs
jns
inc
xchg
ret
cltd
jge
fildl
xor
rclb
lret
mov
mov
roll
sub
or
pushf
cmp
push
cld
rcl
mov
inc
cmpsb
cmp
in
push
sbb
andb
xchg
cld
mov
cmpb
inc
or
test
imul
cmp
jp
dec
js
mov
or
pop
cld
xchg
jg
mov
dec
mov
cltd
pop
pop
adc
mov
movsl
outsl
in
inc
nop
inc
jle
sbb
out
add
test
or
mov
sbb
cld
xor
data16
mov
inc
adc
in
pop
je
or
mov
ss
dec
enter
push
xorb
xor
push
push
and
enter
jns
pop
lock
xchg
pop
idivl
lds
repz
test
call
xchg
into
xchg
ret
xorl
mov
push
dec
enter
adc
mov
inc
aaa
popf
sub
add
mov
sbb
xlat
inc
pop
jae
cld
xchg
data16
int
sbb
out
sub
test
add
mov
mov
pop
mov
divl
daa
out
aam
xor
pusha
ds
and
fsubl
stos
sub
mov
insl
cmp
shl
or
stos
xchg
sub
lods
mov
lea
jno
mov
pop
push
call
inc
sbb
and
xchg
lret
imul
pop
outsl
lods
roll
and
cmpsb
push
jmp
mov
sub
pop
xor
out
iret
fmuls
je,pn
shlb
or
pushf
inc
xchg
int3
and
mov
out
mov
push
sbb
into
aaa
insl
cmpsl
and
push
dec
ret
insl
sti
pop
and
cmp
xchg
dec
stos
jp
fnsave
sahf
loop
int
add
push
lret
ljmp
fisubs
outsl
push
add
dec
cmp
mov
insl
jle
imul
negl
pop
mov
jnp
pop
adc
cmp
js
inc
push
pop
push
int3
dec
lods
iret
lods
fs
leave
mov
pop
js
rcrb
cmp
imul
sbb
gs
das
in
nop
data16
lods
mov
inc
and
cmp
xchg
push
fisubrl
xchg
mov
mov
mov
out
frstor
add
or
mov
add
adc
out
jl
dec
and
add
popa
nop
ret
and
cwtl
and
cmpsb
ljmp
inc
sub
movsb
or
sub
add
negl
jno
data16
out
adc
cwtl
imul
negl
outsl
mov
cmp
test
jo
frstor
jmp
push
inc
cmp
repnz
xor
imul
scas
mov
andb
and
jmp
dec
test
and
xchg
lock
lea
mov
dec
mov
xchg
aam
jmp
jb
in
das
cld
aas
fdivl
loopne
xchg
loop
push
loope
pop
lock
fs
or
test
pop
repnz
nop
leave
or
cmp
jnp
stc
into
adc
adc
imul
adc
jp
and
add
mov
and
jbe
or
cwtl
mov
ljmp
clc
cmpsl
js
aas
fisubl
sbb
dec
mov
add
andl
jns
stos
mov
jae
into
mov
dec
sbb
add
out
and
cmp
std
xchg
subl
xor
push
movsb
notb
push
lret
or
pop
notb
or
push
addb
pusha
loop
ret
xchg
xlat
dec
pop
xchg
adc
idiv
cmc
js
ljmp
ljmp
xchg
sub
addr16
dec
int3
mov
sbb
repz
add
xchg
jnp
mov
xlat
scas
mov
or
jo
in
xchg
dec
push
add
xlat
inc
pop
jno
pop
dec
ret
sub
cwtl
pop
es
xchg
js
dec
xor
or
shlb
icebp
stc
ljmp
aad
pushf
mov
stos
inc
jne
or
cmp
in
mov
adc
sbb
push
dec
xchg
cmc
ffree
test
xor
and
dec
stc
and
faddl
lcall
or
dec
cmpsl
jecxz
lcall
mov
std
mov
jno
adc
push
xchg
jno
push
cmpsb
adc
in
mov
stc
jns
sbb
sbb
mov
dec
and
bound
dec
popf
pop
jmp
xor
shlb
call
cmc
sbb
xchg
lods
or
add
mov
jno
mov
cmpb
rcl
vpackuswb
cmpsb
not
mov
and
jb
cwtl
sub
mov
jp
or
sbb
stos
sub
daa
mov
scas
in
xchg
mov
or
repnz
mov
lock
mov
pop
push
push
test
sbb
aam
lods
fwait
leave
ds
dec
lcall
mov
mov
xlat
dec
lods
and
inc
idivb
add
scas
ficoml
sbb
out
sahf
inc
dec
jl
je
or
and
xchg
js
loope
rcrl
sub
mov
jno
test
fldcw
mov
aad
or
dec
and
jmp
je
add
or
mov
pop
pop
js
pop
dec
clc
push
clc
inc
movsl
mov
jmp
mov
fsubr
cmpsl
xchg
dec
or
pop
mov
mov
pop
xor
sbb
adc
test
test
addr16
stc
pop
stc
and
mov
xchg
lods
mov
pusha
mov
xor
in
mov
mov
dec
or
dec
loope
out
rolb
add
dec
xchg
inc
shll
sub
fucomp
sub
fldl
xchg
lock
push
or
dec
icebp
scas
rorl
mov
push
sbb
and
mov
jmp
fs
call
pusha
cmp
cmp
call
rcll
xchg
sub
movsl
sub
add
jo
ss
repnz
mov
adc
call
pop
sub
loope
mov
es
ss
or
sub
sub
mov
in
sub
mov
pop
push
test
xlat
loope
and
cmp
mov
mov
mov
aad
out
icebp
mov
mov
mov
ja
add
stc
lea
jbe
pusha
movl
call
xor
inc
stc
mov
jg
enter
clc
ficomps
xchg
imul
mov
ljmp
stos
mov
push
mov
sub
inc
adc
add
mov
inc
cmc
and
sub
outsb
mov
stos
dec
pusha
addb
pushf
dec
data16
lea
out
out
sbb
jne
jle
out
loop
out
rorl
sbb
sbb
movsl
repz
push
jbe
mov
fcmovne
roll
insb
es
movsl
aad
sar
adc
cmp
xorb
dec
cmpsb
in
push
mov
enter
or
pop
and
mov
mov
cltd
or
xchg
pop
sub
mov
daa
pushf
rcr
mov
stc
cmc
and
bt
clc
test
add
push
movb
movw
pusha
lea
jmp
xchg
in
or
jo
jle
add
test
xchg
mov
mov
popf
call
loop
es
dec
into
aam
jbe
sub
mov
popa
leave
or
jmp
std
push
cmpsl
subl
xor
repnz
jmp
mov
shlb
std
repnz
shrl
push
out
ret
mov
int
lods
mov
in
sub
mov
or
mov
push
xor
lods
adc
stos
insl
inc
jecxz
lcall
daa
adc
bound
inc
inc
inc
sub
lcall
jmp
fcompl
mov
aad
inc
xchg
push
mov
jecxz
mov
mov
jns
std
add
test
sbb
and
push
pop
dec
cmp
xor
fsub
cmp
add
icebp
add
and
daa
adc
mov
mov
jno
add
fisttps
dec
mov
mov
jg
lret
push
shlb
fisubrs
xchg
jle
cld
test
jne
adc
arpl
inc
jmp
adc
mov
xacquire
mov
test
pop
stos
and
mov
test
dec
cmc
mov
pop
xchg
inc
cli
aad
int
lea
mov
mov
sub
cmp
stos
jmp
insb
inc
jmp
out
jns
xchg
xor
std
or
dec
dec
mov
paddusw
push
roll
xchg
ja
into
push
sarl
mov
pushf
sahf
jne
jbe
loopne
bound
mov
popf
lods
std
in
xchg
jecxz
lods
int
fs
scas
cmp
mov
aad
mov
psadbw
xchg
lock
mov
std
fadd
cld
arpl
sbbb
ss
pop
and
sbb
test
sbb
call
fidivrl
pop
mov
mov
jnp
shlb
dec
insb
push
in
aaa
icebp
testl
int3
cmp
sbb
popa
mov
lods
add
shrb
dec
or
or
pop
inc
adc
push
addb
lock
jne
cmp
lcall
mov
jbe
xchg
mov
cmp
add
insl
scas
pop
mov
xor
cmpsl
je
xchg
pop
out
push
mov
cmp
pop
lret
push
and
daa
add
xchg
sbb
mov
mov
jns
adc
and
xchg
leave
pop
cmp
mov
movsb
jb
mov
inc
cwtl
and
pop
pop
negl
test
int
je
cmpsb
mov
sub
mov
xlat
dec
mov
imul
xor
and
lods
adc
mov
fcmovu
adc
cli
fdivrp
negl
mov
imul
mov
pop
jmp
and
pop
iret
loop
adc
orb
in
and
push
add
add
xchg
stc
jg
jle
xor
pop
or
lock
fmuls
push
pop
and
push
xor
stc
clc
icebp
add
cltd
mov
in
rcrb
pop
cs
mov
cmp
dec
and
pusha
lea
je
cmp
add
stc
cmp
pusha
push
lea
jb
cmc
pusha
cmc
cmp
push
pusha
call
pusha
call
add
notl
mov
popf
mov
lds
mov
ljmp
ret
bound
push
das
push
sub
fdivrl
out
sbb
jns
outsb
call
es
cld
mov
push
push
ja
cmp
fdivs
sub
push
inc
decl
jae
sub
jns
scas
adcl
xor
and
jnp
mov
jbe
pop
daa
cmc
mov
leave
sub
icebp
mov
adc
call
jl
fisubl
add
fbstp
mov
loop
sbb
out
stc
push
and
cmpsb
filds
frstor
cmc
jne
sub
dec
pop
daa
push
test
mov
mov
ljmp
inc
add
jo
jb
cmc
push
cmpsb
mov
xchg
mov
movl
mov
rcr
pop
mov
inc
int
dec
aam
int
pop
add
pop
inc
jle
lret
fcompl
mov
fs
push
rclb
xor
int
mov
js
mov
push
dec
jmp
xchg
rolb
cs
cmpsb
aam
fs
xchg
les
push
repnz
pop
fbld
cmpsl
stc
loop
jg
jo
mov
cmp
xchg
dec
jge
inc
call
int3
outsl
scas
sub
pop
repz
orl
ret
jecxz
je
mull
sti
push
test
push
add
push
scas
mov
rorb
mov
addr16
fwait
js
pop
sbb
xor
pop
daa
jo
cmpsl
cmp
stos
sbb
cmpsb
movsl
std
sbb
lcall
rcrl
mov
xchg
sbb
inc
or
mov
ja
mov
in
sub
jbe
mov
inc
cld
notl
daa
es
or
rcrl
adc
and
xlat
push
jmp
jp
fs
jne
sar
dec
bt
bt
mov
bt
test
pusha
cmp
push
lea
ja
not
push
mov
call
inc
add
roll
jns
sbb
pop
push
js
cmpsb
in
rcl
stos
je
dec
lcall
or
sub
data16
mov
dec
and
sub
or
jmp
out
fcoml
mov
out
mov
sbb
out
inc
clc
rorl
pop
add
cmp
insb
fwait
or
and
push
adc
xchg
imul
adc
xchg
push
jg,pn
mov
popa
out
pop
push
inc
int3
cmp
and
xlat
push
stos
and
mov
push
pushf
jmp
sbb
js
cmp
pop
and
or
sub
outsl
popf
jo
test
push
cmp
dec
pop
dec
adc
out
xchg
xlat
xor
xchg
pminsw
insl
cmp
xchg
ss
adcb
xor
jmp
cli
cmp
jne
mov
pop
and
scas
xchg
mov
xor
les
popf
fbld
and
js
jno
cmp
dec
cmp
push
mov
pusha
xor
mov
cmp
mov
dec
xor
mov
push
lea
call
pushf
mov
push
call
outsl
insb
outsb
test
pop
lods
push
ds
and
dec
mov
popa
mov
mov
inc
mov
mov
push
shlb
jb
mov
rcll
outsl
outsl
gs
lahf
lea
or
jo
sbb
cmp
or
imul
mov
mov
jg
jmp
pusha
lea
je
cmp
cmp
push
jmp
jne
mov
mov
xor
push
popa
jae
pop
inc
xor
shll
mov
int3
sbb
push
loope
sahf
scas
pop
ret
xchg
scas
shlb
inc
test
jno
loope
adc
or
pop
cmp
imul
cmpsl
pmulhuw
xor
inc
out
out
js
pop
es
aas
cld
inc
jle
popf
jo
out
lahf
pop
in
andb
adc
jae
addr16
loope
sbb
out
ljmp
mov
mov
loop
jg
pushf
mov
sub
cltd
sbb
mov
adc
sub
fisttpll
jg
popf
pop
arpl
sub
pop
in
adc
xchg
nop
jae
into
shrd
ss
out
inc
ret
add
xor
dec
leave
imul
mov
rcll
xlat
roll
dec
test
dec
xchg
out
pop
xchg
push
cmpsb
fwait
xchg
mov
loope
push
xor
mov
imul
sbb
mov
dec
iret
jno
add
mov
enter
add
pop
cmp
mov
sbb
aaa
xor
rolb
shl
decb
out
jmp
testb
or
loope
pop
inc
cmpsl
idiv
stos
and
les
pop
rclb
sub
mov
inc
mov
push
mov
loope
push
sarb
xchg
enter
pushf
aam
idivb
pushf
les
push
mov
cmpsl
sti
xchg
inc
stos
push
sarb
in
lret
stc
inc
inc
lret
outsb
jg
pop
inc
popf
inc
aad
lahf
xor
pop
loopne
ss
push
std
rorb
pop
mov
aaa
adc
stc
sub
or
cli
lret
and
subl
dec
into
mov
push
pop
jne
mulb
adcl
push
sahf
mov
iret
shlb
rcl
sub
adc
sub
lds
push
xorb
mov
out
push
jle
pop
xchg
rorl
lea
sub
pcmpeqb
push
fadds
sbb
mov
push
push
js
mov
cs
xchg
mov
lods
data16
leave
inc
sbb
cmc
xchg
data16
mov
push
ljmp
bswap
movb
call
xchg
mov
dec
fldenv
sbb
addr16
jo
cld
rorb
ds
out
cmp
push
stos
shr
out
xchg
dec
je
push
pop
or
pop
cltd
rcll
insb
scas
lock
out
outsb
call
push
arpl
jo
push
fst
mov
inc
jbe
mov
leave
or
imul
lret
fcmovbe
inc
imul
and
mov
mov
movsl
mov
in
xor
clc
add
mov
add
sahf
out
mov
aad
dec
out
mov
pop
sbb
push
cli
push
fimuls
adc
aaa
fnstcw
sbb
jno
ret
mov
jge
fildl
std
mov
jecxz
cld
stc
adcb
sbb
sub
inc
test
push
ss
mov
leave
lea
roll
dec
sbb
aaa
adc
js
xchg
lock
ljmp
mov
inc
mov
sbb
xchg
ss
in
mov
int
mov
dec
mov
je
cmp
dec
add
sbb
sarl
icebp
lret
xor
std
xor
loopne
popf
cmp
jp
push
push
jb
inc
das
in
xchg
dec
in
in
imul
mov
leave
insl
push
push
ret
inc
add
dec
pop
adc
sarb
mov
sub
xchg
mov
push
int
fnstcw
gs
jae
rcr
sahf
movsb
mov
mov
ja
push
cmp
push
xchg
mov
and
xor
lea
ja
rcl
sub
bswap
inc
cmp
bt
add
shl
dec
mov
dec
setnp
mov
pushf
test
movw
repnz
pushl
jmp
push
ror
test
lock
mov
aaa
adc
imul
cltd
shrb
enter
jl
int3
inc
cmp
pop
aas
fwait
test
sbb
mov
int3
test
xchg
mov
int
sub
pop
adc
ror
test
inc
pop
lret
cmp
js
test
push
cmpsb
fld
cmp
imul
sbb
push
push
enter
jg
cmp
sbb
test
xchg
sub
imul
std
fildll
shrl
mov
test
jl
pmaxub
jecxz
sub
test
mov
xchg
test
push
mov
sti
dec
test
mov
cld
ror
test
shlb
std
lods
test
test
pop
aaa
pop
xchg
and
int
jno
jl
jae
or
jo
test
out
in
xchg
xlat
repnz
cli
clc
jl
lea
shrl
fisubrs
shrl
push
aad
xchg
cmc
jl
shr
inc
push
pop
icebp
jl
and
xchg
pop
movsb
test
test
cld
add
test
addr16
cli
cltd
jne
shrl
pusha
dec
into
xchg
jno
int
scas
das
jge
divb
int3
test
push
cs
mov
jl
xchg
aas
stos
cmp
out
jl
fwait
inc
out
int
jno
jl
and
cmp
int3
test
mov
jecxz
test
pop
nop
loope
cmpsl
push
int
sbb
imul
sub
adc
test
cwtl
popa
push
push
out
jl
push
jbe
mov
jno
jl
ljmp
test
loopne
sub
loopne
int
jno
jl
fmull
sti
jl
int
mov
jl
nop
int
outsl
aaa
shrl
mov
xor
test
shrl
test
test
test
lret
sub
test
xor
or
test
jg
mov
lock
mov
or
test
jecxz
sub
je
jl
ret
stos
inc
sbb
js
test
out
insl
jp
stos
pushf
mov
mov
cld
mov
push
cmpb
push
push
popa
fwait
dec
sbb
sbb
push
out
popa
adc
sbb
dec
andb
icebp
mov
and
adc
scas
cmp
dec
loopne
dec
sbb
leave
imul
xchg
pop
call
push
rclb
adc
outsl
arpl
pushf
xor
cmp
popf
and
sub
bound
add
pop
sbb
xchg
imul
in
xchg
lahf
sbb
pop
fiaddl
lcall
mov
cmpsl
push
adc
jns
cmp
sbb
push
call
ret
sub
imul
and
inc
insb
lahf
xchg
leave
push
dec
gs
hlt
xchg
jle
mov
mov
pushf
jmp
or
cmp
aam
sahf
sbb
mov
insb
subb
ret
fucomp
in
icebp
ret
mov
jl
push
stc
clc
sub
add
sti
xchg
dec
xchg
mov
fistpl
lret
out
sahf
push
decl
lods
bt
inc
pop
jo
add
dec
mov
push
jge
stc
jns
fstpl
sub
sub
jmp
sbb
fiaddl
fimull
dec
adc
imul
mov
fsubrl
in
mov
push
outsl
xor
mov
enter
cmp
add
xchg
dec
cmp
dec
or
outsb
std
imul
xchg
cmp
pop
stos
cmp
mov
lods
int
push
pusha
mov
fs
jecxz
pop
fsts
hlt
cmp
call
add
dec
fimull
xchg
xor
sti
xor
jl
fld1
stos
and
aaa
adc
call
xchg
xor
sub
stos
movb
insl
fcompl
add
jb
jge
adc
cmp
mov
or
das
and
jb
shlb
ja
imul
mov
popa
sub
lds
loop
repz
sub
adc
leave
nop
adc
dec
jb
cmc
lret
pop
pop
adc
xor
sub
sarl
movsl
xor
out
shlb
lds
push
jne
cmp
push
jb
popa
int
xchg
adc
add
mov
mov
cli
inc
ss
ss
sub
push
test
jl
mov
jmp
jne
mov
adc
fdivrs
add
push
outsl
inc
mov
xlat
pop
jnp
andb
mov
call
cltd
ja
call
xchg
xchg
adc
lcall
xor
mov
ljmp
nop
cmc
out
jl
pop
in
pop
push
mov
les
jle
movsb
ja
inc
mov
xor
jbe
scas
and
sbb
movsl
rol
or
sti
mov
xor
in
stos
and
xbegin
pop
mov
fxch
in
cmp
dec
insl
insb
repz
add
leave
xor
or
sub
xor
mov
adc
jae
xor
pop
out
jmp
ljmp
mov
das
mov
adc
fildl
int3
mov
add
pop
mov
cmp
xor
ja
js
lret
cmpsl
aad
cmc
cmc
data16
push
jns
pop
sbb
imul
pop
pop
cmp
lods
push
lock
repnz
aas
dec
xchg
pop
mull
pop
popl
and
cmpsb
and
in
and
or
ss
xlat
pop
xchg
insl
jmp
les
imul
lods
pushf
orb
cmp
jecxz
pop
dec
or
nop
mov
inc
es
dec
cmp
or
pminsw
loope
ds
dec
daa
nop
mov
cmpsb
imul
lock
sahf
jecxz
lahf
jge
mov
fisubrl
lret
adc
jle
in
pop
cmp
or
dec
jbe
push
sub
dec
lret
gs
xchg
out
pop
sahf
pop
int
xlat
pop
xchg
cmp
not
add
xor
mov
dec
jns
pop
cli
xor
call
jae
icebp
jne
xor
and
and
fs
addr16
and
rcr
sahf
lea
outsl
mov
subb
inc
jge
jo
inc
mov
cmp
pop
lret
in
out
cmp
push
bound
adcl
mov
stos
push
movb
pusha
movl
pushl
pusha
movl
push
push
lea
jmp
lock
je
and
leave
nop
orb
in
cmpsl
push
out
outsb
fst
ss
mov
xor
iret
fimuls
xor
es
int
in
push
stc
out
pop
ret
cli
addb
cmp
es
jg
leave
jl
pop
push
push
cwtl
ss
mov
repnz
test
inc
jmp
int3
mov
shrb
cs
xchg
push
jle
dec
fistpll
xchg
dec
xchg
test
jne
sbb
or
roll
mov
loopne
xchg
xchg
pop
push
jecxz
data16
call
mov
bt
cmpb
pushf
push
pushl
call
pop
cmp
mov
es
cmp
loope
roll
rcrl
adc
imul
push
jae
fisttpl
jnp
movsl
add
aam
xchg
adc
jb
pushf
xchg
lods
icebp
sub
shlb
pop
mov
add
movsl
mov
imul
dec
or
in
jl
mov
dec
lock
or
fs
pop
movsl
imul
ret
push
dec
cmpsb
sbb
push
mov
ss
leave
xlat
lds
outsl
and
loop
insb
cmp
adc
jo
pop
int3
fucom
setp
or
xchg
jl
xchg
mov
mov
sub
data16
fcomi
jbe
pop
cld
sarl
push
icebp
push
push
std
scas
testb
popa
mov
jb
dec
mov
ror
jbe
jno
lret
into
stos
cmp
pop
mov
xor
mov
or
bound
orb
xlat
out
xor
sbb
cmp
adc
sub
popa
fidivrl
inc
jge
mov
cmpsl
add
js
ss
mov
xchg
inc
and
mov
adc
pushf
lea
jmp
adc
push
mov
sbb
out
pop
adc
test
loop
das
outsb
into
dec
push
mov
or
test
insl
xor
addr16
xor
pop
cld
xlat
mov
push
fcmovu
int
inc
iret
stos
mov
mov
movsb
sub
mov
and
dec
adc
or
xor
mov
test
outsb
sub
data16
jl
adc
fldenv
aas
or
rclb
into
cwtl
jle
aad
sub
repz
out
jne
int3
clc
out
pop
pop
add
out
mov
outsb
push
pop
push
mov
inc
adc
ja
dec
jno
std
sub
mov
add
push
into
sbb
addr16
dec
push
pop
mov
push
in
int
or
pop
sbb
fwait
push
enter
roll
dec
icebp
pusha
lea
icebp
jae
and
jmp
ds
cmpsb
lods
outsl
jne
test
mov
pop
in
push
xor
int
pop
jl
sti
push
sub
nop
mov
adc
add
lret
lea
jne
pusha
lea
jne
push
jmp
mov
lcall
lea
enter
or
adc
mov
xchg
loop
les
push
in
out
mov
test
mov
out
ret
pop
cltd
jae
mov
clc
ja
mov
cwtl
insb
pop
cmp
mov
adc
rcr
sub
mov
aam
out
xchg
pop
sbb
movsl
je
mov
push
iret
dec
adc
adc
mov
xchg
test
or
push
pop
sbb
xor
pushf
ja
mov
stos
bound
jb
dec
xorb
fistpl
test
test
pop
rcrb
jne
sub
in
cmpsb
sub
testb
subl
mov
popl
add
sbb
mov
dec
lock
sub
call
stos
push
cmp
outsl
pop
jne
test
data16
mov
dec
shr
mov
outsl
leave
sbb
dec
test
adc
movsb
inc
or
or
mov
sahf
andb
sub
bound
mov
ljmp
popf
mov
mov
xor
dec
mov
ss
sub
test
inc
adc
adc
mov
jae
repz
out
out
lea
flds
sub
sbb
mov
push
sub
push
mov
idiv
test
or
test
loop
arpl
lret
out
subb
call
test
clc
push
ret
rorl
cld
add
ret
shr
cmpsb
imul
jg
je
imul
fcmovnb
mov
inc
imul
pslld
jno
arpl
mov
stos
hlt
inc
mov
faddp
lea
inc
cmpl
lahf
cmpsb
xor
pop
sub
scas
xchg
or
pop
dec
fisttps
and
test
dec
lods
pop
std
test
pop
lret
and
hlt
jo
adc
repz
sbb
cmp
inc
pop
mov
fst
cltd
mov
jp
jl
rolb
js
aaa
mov
shlb
add
and
cmp
subb
fscale
and
mov
mov
rcrl
call
jo
fdivrs
pop
inc
push
push
or
adc
sbbb
cmp
sbb
insb
push
jne
xchg
je
call
sub
sbb
push
fisttpll
adc
add
jg
inc
dec
sub
mov
jecxz
mov
jmp
lahf
int
mov
fcmovbe
mov
movb
loope
sub
cli
gs
les
aad
mov
call
pushl
sbb
in
int
cmp
and
sub
testb
dec
adc
mov
ret
shlb
pushf
bound
ret
inc
or
pop
lret
push
icebp
lahf
ret
push
sbb
jmp
inc
outsl
aaa
push
pop
mov
jbe
js
in
mov
mov
stos
pusha
jecxz
xor
sbb
in
out
mov
pop
addr16
ret
mov
pop
pop
and
and
mov
addb
stos
sahf
popa
cld
push
je
xchg
pop
leave
fwait
and
mov
daa
mov
fstpt
es
int
or
fmuls
lods
bound
das
push
pushf
into
imul
sub
xorb
sti
inc
xor
mov
shlb
mov
xchg
sub
popf
jle
ret
leave
dec
sbb
pop
add
push
aam
jg
dec
in
xchg
jle
out
push
sbb
mov
iret
cmp
sub
dec
inc
shl
xlat
fs
jecxz
cld
sub
add
shr
addr16
pop
push
and
jmp
xchg
hlt
mov
aam
mov
pop
iret
mov
mov
lock
sub
cs
out
add
inc
sarb
je
mov
subl
jae
stos
jo
cld
sub
lods
int
push
lret
jo
pop
mov
lock
lret
push
cs
sbb
adc
cmp
popf
pop
loopne
sar
outsl
pop
or
scas
pop
xor
repz
xor
lods
imul
addr16
and
shlb
test
pushf
lret
pop
dec
mov
adc
mov
insl
in
add
mov
and
movsl
add
xor
mov
icebp
ret
jo
rcrl
add
add
sbb
and
cwtl
add
lret
int3
enter
ror
into
add
fmul
fimuls
fnstsw
loope
push
in
popa
inc
add
add
or
xor
add
outsb
je
insl
gs
jb
outsl
out
adc
cli
xor
sbb
xor
xor
xor
ss
cmp
add
inc
inc
inc
inc
test
int3
xor
xchg
or
rorb
loop
xchg
sbb
xchg
adc
fs
pop
jo
adc
loope
add
movsb
jl
lods
cmp
jbe
sbb
rcrb
and
movsb
dec
loopne
add
add
mov
xchg
xchg
or
mov
aam
fsubl
in
in
hlt
mov
adc
add
adc
sbb
and
sub
xor
mov
and
dec
pop
xchg
and
jl
test
mov
dec
pushf
xchg
movsb
and
movsl
int3
adc
add
inc
and
dec
addb
cmp
sbb
inc
adcl
test
insb
test
and
xchg
test
xor
nop
cmp
or
in
jno
sbbl
pop
mov
and
notl
add
inc
add
or
ja
pop
dec
push
xchg
mov
jp
sbb
sbb
sbb
fcmove
adc
jo
cs
andb
movsl
iret
adc
and
add
push
addl
or
xor
filds
cmp
or
adc
or
adc
fwait
jbe
jb
pop
or
dec
mov
sarb
jb
pop
jg
scas
jp
mov
add
roll
sub
sub
repz
stc
jmp
gs
mov
cmc
ret
jo
sbb
jo
inc
in
or
call
jno
mov
inc
and
dec
pusha
xchg
jo
addb
mov
shlb
in
je
pop
or
cld
iret
and
mov
xor
jmp
fs
sbb
push
rcll
out
cmp
mov
sysenter
lea
pop
sbb
xchg
adc
pop
jmp
inc
pop
mov
dec
iret
add
popa
outsb
jae
or
imul
mov
sbb
sbb
adc
adc
adc
and
adc
push
mov
xchg
adc
aaa
rolb
sub
callw
adc
adc
add
jo
and
stos
and
adc
rcr
mov
cmpsb
lret
inc
int3
jmp
loopne
mov
arpl
in
pop
leave
test
or
xor
add
adc
dec
js
adc
nop
inc
adc
add
data16
sbb
inc
in
mov
sub
inc
or
push
and
dec
push
inc
add
and
dec
aam
pop
and
inc
add
mov
adc
add
xchg
cmp
js
cmpsb
mov
sbbb
jo
push
xchg
mov
add
mov
or
inc
xchg
lcall
push
je
inc
dec
mov
orl
inc
xchg
mov
mov
xchg
cmp
mov
push
mov
push
dec
int3
xchg
cwtl
and
inc
mov
mov
adc
and
push
sub
dec
adc
push
adc
or
xor
dec
or
gs
sub
or
addb
sbb
inc
sbb
nop
adc
or
or
jl
push
lds
or
adc
lock
loopne
xchg
int
mov
xchg
shlb
enter
xor
cmp
inc
dec
adc
or
insl
dec
mov
frstor
pop
push
adc
push
leave
jns
mov
lcall
and
xchg
nop
dec
jb
add
and
icebp
and
inc
and
je
or
adc
or
or
mov
sbb
and
add
add
add
xor
fmull
adc
or
sbb
mov
dec
and
dec
push
xchg
mov
or
fcoms
loopne
call
and
lcall
add
mov
or
clc
hlt
jo
enter
or
jbe
pop
nop
and
insl
mov
jbe
std
mov
adc
and
dec
cli
xchg
inc
and
inc
push
clc
mov
mull
dec
notb
movsb
hlt
mov
dec
repnz
fsubl
icebp
inc
lock
add
add
dec
sbb
in
cmp
in
adc
jmp
pusha
xchg
ljmp
xchg
sahf
mov
lock
lods
faddl
add
xchg
adc
xor
adc
or
add
jne
push
add
test
movsb
cltd
inc
mov
imul
mov
or
cld
call
cld
imul
pusha
aad
cwtl
pusha
add
daa
mov
dec
pop
add
mov
inc
or
int
fs
je
leave
xor
add
pop
mov
inc
or
subl
hlt
jp
adc
iret
fsubrs
pop
or
add
imul
add
and
mov
mov
adc
and
dec
std
xchg
ljmp
mov
adc
addl
mov
inc
xor
mov
les
cmpsb
sub
pop
inc
sbb
and
mov
xchg
or
and
inc
sub
mov
dec
and
dec
pop
cs
jp
in
sarb
mov
push
inc
or
bound
xchg
jb
or
mov
dec
int3
and
les
pushf
nop
andb
jns
dec
insl
cmc
mov
inc
int3
jb
cmpsl
or
and
cs
dec
mov
ficompl
dec
dec
adc
pop
fldcw
pop
xor
jae
fwait
repz
mov
or
mov
adc
sahf
lahf
xchg
cmp
add
je
sbb
pop
int
cmpsb
inc
es
pop
xchg
fadds
xor
or
and
or
call
test
add
sub
adc
cmp
add
mov
mov
sub
mov
aad
aas
pop
or
fld
push
xchg
sbb
sti
jns
cmpsb
or
shrl
jb
das
mov
sbb
in
add
es
add
sub
inc
ljmp
mov
repnz
or
cld
mov
arpl
dec
push
jno
pop
movsb
jle
cmp
xchg
or
jb
int
jno
dec
adc
push
jnp
pop
pop
ret
aad
pushf
adc
sub
pop
mov
nop
sub
jns
pop
lret
fstpt
push
call
sahf
mov
loopne
ja
xlat
daa
add
mov
pusha
jb
sbb
repz
jo
bound
adc
arpl
lret
add
stos
sub
int3
mov
incb
adc
jmp
adc
mov
mov
lds
je
add
pop
into
push
xchg
xchg
scas
or
insb
adcl
xchg
sub
mov
adc
data16
or
popa
cmp
test
jl
xor
test
mov
jne
jmp
mov
sbb
cmpl
xchg
add
rep
insl
inc
hlt
add
add
test
movsb
dec
lock
pop
add
lcall
or
lock
add
push
sub
lock
insb
add
out
outsb
in
jp
push
jne
add
sbb
jbe
scas
cmp
pop
lret
mov
inc
sbbb
out
add
movsl
test
jge
pop
mov
fdivs
loopne
add
roll
js
add
stos
rorl
ja
add
jb
sbb
and
shlb
dec
adc
ljmp
shl
leave
jb
add
jnp
cltd
sbb
aam
and
sbb
pop
jecxz
dec
inc
mov
loopne
xchg
mov
inc
dec
test
add
push
sbb
or
cwtl
or
pop
adc
add
add
push
add
adc
push
adc
or
or
jecxz
add
sbb
adc
pop
sbb
push
adc
pop
adc
pop
add
mov
adc
add
ljmp
push
adc
sbb
add
push
or
adc
add
sbb
adc
ud2
adc
adc
or
rorb
pop
or
adc
sbb
add
pop
adc
add
sbb
sbb
stc
add
loop
and
adc
add
rcrl
mov
fstl
stos
outsb
loope
fmul
add
adc
aad
lds
imul
out
mov
es
jle
and
add
dec
loope
cmc
pop
cs
add
out
fmull
sub
add
cmpl
aad
dec
movsb
scas
pop
jae
add
pushf
cmpsb
push
out
pop
cli
and
in
pop
shlb
testl
xchg
dec
and
add
pop
xchg
arpl
les
cmp
mov
out
jge
ljmp
push
jmp
xchg
stc
ret
hlt
daa
pop
test
loopne
popf
call
mov
sbb
lods
mov
sbb
test
mov
jge
inc
add
jno
push
add
cld
xchg
lret
data16
cmp
or
cmpsl
xchg
rorl
jnp
add
mov
add
mov
jmp
lret
xchg
jp
sti
dec
rorb
pop
cli
test
lock
add
and
cmp
adc
movsb
add
out
and
xor
add
mov
pushf
punpckhwd
mov
xchg
jbe
add
adc
insb
cmp
jae
call
mov
lahf
push
inc
lret
loopne
add
lea
jmp
sbbl
nop
je
cwtl
add
out
cmp
das
xor
add
shll
dec
xor
test
cmp
aas
sub
pop
mov
out
pop
int3
xchg
and
bound
mov
stc
andb
add
shlb
fadds
adc
mov
imul
mov
lods
jns
push
test
test
in
cmp
in
int3
je
jns
add
inc
mov
inc
or
xor
daa
fisubl
mov
rcrb
shll
cs
add
fisubrl
adc
jne
add
aad
cmc
scas
dec
pusha
sbb
push
mov
aam
add
outsb
xchg
sti
test
jnp
jp
add
or
mov
sbb
out
push
cltd
mov
push
jg
pop
cmp
int
das
add
call
dec
mov
cwtl
filds
lock
or
jle
add
sbb
cmc
arpl
xor
xchg
inc
mov
aad
subl
jnp
and
jo
loope
mov
andl
pop
rclb
rcrb
mov
lret
fiadds
pop
clc
in
xor
mov
insl
cli
add
lds
shl
mov
fwait
or
jb
lahf
mov
cltd
and
ret
aaa
add
test
xchg
mov
mov
pop
cmpsl
push
nop
notb
add
inc
xchg
sub
xorb
cmpsl
movsl
cmp
push
lahf
test
mov
loopne
jl
cld
and
dec
add
dec
cmp
mov
add
addb
or
mov
loop
dec
bound
fldcw
mov
add
pop
outsb
je
mov
inc
add
sbb
pinsrw
lock
and
popf
rorl
scas
sub
xchg
loopne
add
adc
jl
mov
push
rcr
mov
fildl
or
les
jmp
inc
push
xlat
xor
mov
add
cli
aaa
sahf
add
out
add
jle
pop
pusha
adc
inc
xlat
xchg
add
jmp
in
add
lods
mov
push
add
or
fwait
enter
sti
cmp
mov
or
add
push
xchg
xchg
inc
cmp
inc
subb
push
dec
inc
pop
dec
pop
jbe
add
mov
ficoms
shlb
data16
ret
add
jne
lcall
leave
jae
sbbb
stos
xchg
add
xorl
sub
testb
lahf
pop
mov
add
adc
shlb
add
addr16
sub
jl
xor
into
adc
pop
pop
push
mov
pop
xchg
insb
push
rorb
fbstp
lds
mov
dec
fidivl
jb
hlt
testb
rcrb
add
jecxz
add
or
add
mov
push
sahf
add
add
int
cwtl
loopne
nopl
out
icebp
cmp
orl
adc
pushl
in
jo
inc
ficoml
cltd
and
add
movsl
or
bound
lret
imul
lods
sbb
mov
aaa
in
out
sbb
push
fisubl
fwait
cmp
xor
add
push
pushf
push
imul
mov
sub
xchg
cld
cmp
inc
sub
rolb
add
xchg
testl
adc
add
into
das
mov
hlt
pop
filds
xor
jnp
pop
cs
ljmp
push
xor
pop
pop
gs
jno
add
addr16
adc
add
lock
and
xor
add
jmp
add
stos
lods
dec
in
xchg
cmp
cmp
shrl
int
aam
loop
or
add
std
xlat
pop
add
fisttpll
leave
push
and
adc
pcmpgtb
loopne,pt
sbb
sub
lahf
cmc
cmp
inc
shlb
xor
jge
push
fistpl
mov
jbe
sub
mov
adc
mov
cmp
sbb
rcl
lods
movsl
mov
push
adc
aam
add
test
pop
add
shlb
fcompl
out
xor
outsl
pop
incb
push
jecxz
je
dec
lret
and
add
xchg
in
add
fdivrl
rol
add
je
in
in
add
mov
subl
add
test
sbb
inc
mov
cli
adc
push
add
sbb
sbb
pop
push
add
lods
subl
pusha
repnz
add
sub
fprem
testl
cmp
lea
inc
jo
sarb
dec
add
and
fs
mov
push
imul
arpl
mov
jno
inc
xor
sub
add
clc
imul
fisubs
xchg
push
fs
xor
pusha
add
jge
fldl
push
stc
sarl
xchg
ret
in
xor
mov
pop
sub
sub
or
pop
lock
call
sahf
addl
mov
push
lds
ror
cmc
pusha
jl
mov
daa
pushf
pop
jns
add
or
inc
dec
mov
add
sub
pop
in
nop
add
xchg
shrb
mov
pop
xlat
dec
sbb
enter
mov
rorl
pusha
jno
in
inc
push
dec
ljmp
cmp
insb
xor
jp
mov
fwait
arpl
add
mov
pusha
aam
lret
das
insb
push
push
addr16
mov
scas
xchg
mov
jo
outsb
adc
loop
add
arpl
push
aaa
pusha
loopne
imul
or
adc
add
sahf
push
leave
add
jae
aas
and
int3
xor
insl
mov
pop
data16
popa
and
mov
and
add
push
xchg
inc
push
adc
mov
lahf
pop
loope
jp
fcmovne
and
rol
and
mov
int
pop
aam
test
jne
ret
push
mov
or
xchg
xchg
test
pop
call
jl
ror
mov
inc
mov
pop
repnz
or
scas
sar
nop
jg
sub
testl
pop
cmp
in
std
push
xchg
lods
mov
mov
fildll
rolb
loop
ja
add
mov
sbbb
xor
cmc
sbb
mov
loop
or
push
xchg
add
push
std
push
out
dec
stos
mov
cmp
out
cld
es
cmp
add
cs
inc
add
in
push
inc
les
mov
nop
loopne
cmp
add
jecxz
jge
repnz
rclb
daa
push
decl
mov
sarb
in
cmp
mov
int
das
mov
out
fs
jnp
pop
mov
mov
add
jmp
push
and
mov
add
lcall
sahf
jle
repz
add
jmp
mov
aam
jae
inc
cmc
pop
add
sbb
xchg
andb
cmp
add
pop
dec
jp
inc
pop
jmp
arpl
sbb
add
cli
jecxz
bound
pushf
pop
xchg
ljmp
loop
jo
mov
add
sbb
scas
mov
and
imul
loop
push
add
mov
enter
add
das
or
push
cwtl
movsb
push
add
mov
nop
mov
jo
inc
xlat
cmp
add
addr16
sbb
xchg
add
je
mov
or
std
stos
add
loope
sbb
clc
pop
scas
cli
add
pop
mov
cmp
mov
or
lods
aam
test
vrcpss
xchg
into
les
lret
adc
iret
sbb
adc
dec
in
xchg
loopne
sahf
and
add
jl
cwtl
xlat
xchg
dec
inc
mov
xchg
push
dec
jbe
aad
jb
test
inc
ja
ss
adc
sahf
cmp
loopne
lock
add
test
jecxz
or
cmp
inc
sahf
repnz
lea
pop
cmpl
sub
push
int3
mov
xchg
nop
pop
and
and
xor
cltd
sti
add
push
fisubrl
loop
add
movsb
xchg
add
xor
pop
out
mov
fnsave
loop
fwait
in
add
jg
xor
mov
jns
andb
aad
fdivl
lds
add
or
rcl
cwtl
mov
imul
orb
lock
push
fcom
cmp
pop
add
mov
gs
inc
sbb
and
xchg
cmpsl
add
push
fmul
mov
push
incb
scas
addr16
xchg
subl
add
popa
shr
pop
stos
addl
push
pop
les
cli
test
cmp
or
jl
mov
or
clc
or
imul
add
roll
add
lods
gs
cmp
cwtl
add
orl
push
mov
dec
sub
imul
cmp
inc
lahf
add
sbb
addb
or
sbb
cltd
pop
sbb
cmp
in
aad
xchg
push
pop
jg
jnp
lahf
insl
xor
sub
pop
sbb
lods
nop
add
cmp
cwtl
mov
fstpl
mov
xor
add
xorb
imul
rorb
add
lret
jge
xchg
push
testl
pop
aaa
jl
inc
push
cmpb
add
push
mov
jns
int
mov
sbb
add
or
movsl
add
roll
pop
cmpsl
out
add
adc
mov
inc
pop
mov
jae
or
clc
ss
add
in
xor
repnz
cli
nop
andl
xchg
fstp
jp
add
mov
iret
in
rolb
mov
lret
xchg
adc
neg
shr
mov
inc
jns
add
or
adc
mov
sub
adc
dec
pop
mov
jg
inc
jns
loopne,pt
ljmp
cld
add
pop
test
fcmovnb
xor
xchg
sbb
repnz
push
sub
clc
add
sarb
mov
jmp
sub
mov
xor
dec
fwait
pusha
add
xchg
and
and
pop
add
in
inc
pop
mov
stc
push
jo
outsl
add
bound
flds
outsb
mov
pop
les
pop
inc
lock
push
sti
mov
out
xor
pop
pop
adc
dec
ja
in
jno
add
add
test
es
call
pop
ret
add
jb
inc
in
popa
add
subl
cltd
add
add
sbb
dec
sbb
jp
scas
and
push
adc
imul
jne
test
mov
push
int
fildl
leave
mov
sub
xor
in
test
pop
lock
mov
add
in
and
pop
cltd
mov
test
mov
mov
mov
push
stos
popa
outsl
call
mov
xchg
and
subps
cmc
add
pusha
add
sahf
jp
sbb
in
mov
dec
dec
repz
cmp
and
sub
add
mov
sbb
add
sub
lahf
inc
cmp
pop
pusha
pop
mov
lret
xchg
or
cmp
addb
sarb
xor
sub
lret
out
testb
cli
popa
stos
cmp
add
adc
in
shll
add
sub
xchg
inc
push
lds
add
mov
cld
dec
repz
dec
into
add
mov
sub
dec
push
pop
lods
mov
and
jbe
jg
mov
arpl
push
aas
sbb
gs
jo
and
std
cld
or
cmpsl
xor
add
daa
fmull
cmc
add
add
loopne
cld
lret
jns
daa
ja
stos
inc
scas
pop
sarl
cmpsb
and
inc
cli
and
pop
nop
jnp
push
daa
mov
psllw
and
and
add
clc
insb
jecxz
sub
add
jae
cmp
inc
add
adc
xchg
ja
push
popf
add
inc
pop
mov
int3
out
add
ficoms
sub
xchg
push
add
imul
xchg
insb
push
mov
lock
pop
les
pop
dec
cmp
cs
push
cmp
inc
dec
push
mov
js
mov
xor
pushf
pop
test
out
sar
pop
pop
dec
and
push
push
xlat
aaa
jne
push
lock
add
jge
mov
hlt
mov
push
shlb
xor
sbb
in
add
push
iret
roll
inc
sub
mov
bswap
pusha
cli
cs
inc
push
out
push
inc
shlb
in
sbb
add
cmpsb
cmpl
cmp
pop
add
sbb
sub
out
add
shl
xlat
nop
mov
dec
xor
jle
adcl
cmp
add
jp
aam
push
push
dec
sbb
mov
fcmovnu
jno
test
movsb
test
lret
add
push
inc
les
xchg
sahf
and
or
mov
jnp
mov
scas
or
push
add
lods
xorb
gs
add
movsb
ja
add
add
std
inc
add
cmp
or
mov
in
pushf
ja
jne
dec
pop
loopne
out
pop
cmpsb
xchg
add
sub
mov
add
sti
push
add
jo
sbb
xor
fildll
add
leave
pop
loop
dec
xchg
lcall
jmpw
push
fnsave
add
fs
mov
mov
push
push
pop
arpl
adc
lret
mov
je
notl
xor
mov
movb
mov
aad
ljmp
insl
shlb
test
in
sub
sarl
add
aad
aaa
jmp
clc
xor
mov
divb
jbe
push
inc
int
clc
dec
rcrl
popa
pushf
popf
andb
fcmovb
pop
add
lret
movsb
xchg
div
xchg
roll
scas
outsb
jne
das
sbb
hlt
cmp
xchg
add
aam
fs
sbb
lahf
fdivp
loopne
jne
add
js
into
push
add
xchg
and
add
fstpl
addr16
add
stos
fidivs
xchg
jge
jno
sub
or
lcall
rol
push
or
fs
xchg
and
inc
mov
mov
ljmp
adc
orl
add
dec
sub
xchg
movsb
shr
movsl
inc
sub
ret
enter
les
mov
mov
pop
ffree
add
push
or
mov
insl
push
lcall
mov
add
or
das
mov
push
or
add
or
pop
in
sub
insl
jl
hlt
push
add
xchg
xlat
or
testl
xor
add
mov
daa
add
out
inc
in
add
push
subb
cmp
popw
dec
inc
mov
aad
jns
mov
add
sbb
outsb
add
jmp
add
jmp
lret
popa
dec
and
scas
add
sub
add
out
and
add
roll
add
lods
sti
inc
ror
xor
adc
or
cltd
xor
aas
sbb
rorl
mov
orb
add
mov
dec
adc
pusha
pop
push
push
adc
rolb
sbb
in
pop
sbb
jg
and
xchg
add
add
push
mov
jecxz
sbb
mov
and
inc
cmp
xchg
cld
leave
pop
out
add
in
push
insb
pop
int3
lods
add
data16
les
aad
add
scas
icebp
outsl
pop
push
jns
mov
nop
sub
xchg
test
scas
add
testb
pop
fmuls
std
sbb
stos
addb
and
dec
inc
movsb
and
shlb
jp
scas
mov
pop
or
out
jmp
cmpb
pop
inc
nop
xchg
ret
ds
addb
cltd
sbb
add
mov
loop
lea
push
std
push
add
sahf
lret
sub
aaa
jp
pop
pop
imul
mov
and
mov
mov
inc
fcomp
and
cs
clc
call
gs
sbb
cmp
clc
popa
mov
adcb
inc
jo
js
loopne
inc
jle
stos
scas
add
arpl
add
xor
add
test
iret
add
jbe
js
adc
pop
cli
push
jmp
add
out
mov
cmpsl
sti
lods
data16
push
mov
adc
mov
pop
pop
xchg
fbld
add
outsl
mov
mov
add
cmpsl
dec
push
cmp
ljmp
cs
imul
inc
dec
adc
jnp
adc
xor
jae
mov
xorl
pop
add
ds
stos
call
fwait
icebp
mov
out
inc
or
jb
pop
hlt
stc
adc
scas
popf
sbb
add
aaa
out
and
add
xor
test
cli
xchg
jo
out
lret
dec
je
jae
repnz
add
mov
fs
ss
add
call
cmp
imul
mov
xchg
jge
pop
push
add
in
add
negl
mov
repnz
add
push
pop
jae
je
pop
add
jns
mov
mov
add
add
mov
push
jne
fadds
movsb
movsl
add
xlat
jmp
andb
adc
xchg
fcompl
add
mov
bound
xor
aad
ret
rorl
jbe
enter
inc
aaa
loope
inc
mov
ljmp
aam
jno
cmp
cld
add
inc
shrl
xchg
pop
push
push
pop
cmc
clc
mov
imul
cwtl
add
and
add
addr16
xchg
sbb
rcrl
sub
mov
fiadds
sub
or
fcomp
mov
add
and
sub
or
add
lcall
add
xor
frstor
iret
out
add
stos
test
out
push
sar
jbe
movsl
or
out
mov
jae
add
fs
arpl
mov
and
add
adc
xorl
add
add
cmp
aaa
add
mov
aas
sub
cmpb
insl
mov
push
adc
xor
jae
pop
loope
jno
pop
push
loopne
pop
rcrl
xchg
mov
icebp
mov
outsb
notb
dec
arpl
mov
mov
clc
addr16
dec
adc
adc
sbb
pop
dec
fadds
out
loope
mov
sbb
add
test
cmp
test
cmpsb
cli
mov
test
adc
stc
xor
cmpsl
scas
and
mov
ret
sbbb
jne
push
push
jbe
inc
jne
jb
xchg
xchg
cmp
mov
jmp
dec
hlt
sub
sub
pop
ret
jnp
or
lea
ljmp
and
cmp
push
add
sahf
jl
push
int
rcll
cmp
aaa
mov
jecxz
pop
outsb
cmp
jb
mov
push
push
inc
inc
clc
gs
inc
sbb
cs
cmp
into
mov
cmpsb
in
ljmp
mov
hlt
dec
push
cmp
incb
mov
shlb
arpl
xchg
xor
add
jp
gs
dec
adc
leave
addb
pop
cmp
push
rolb
jp
les
aas
pop
jbe
bound
sbb
xchg
pop
cltd
dec
fstpt
pop
fs
push
out
jns
add
push
leave
add
cmp
int
inc
loopne
test
aaa
mov
sbb
and
add
inc
imul
mov
dec
xchg
aad
cltd
rclb
orb
inc
add
xchg
out
jl
cmpsl
mov
in
adc
sub
pop
pop
dec
pop
lret
repnz
mov
xchg
adc
outsl
insb
pop
fwait
add
dec
and
mov
push
stos
add
xor
push
cmp
push
fistps
je
test
ror
aas
sbb
in
cmc
add
ja
js
xchg
inc
jle
pop
cmp
scas
mov
enter
push
xor
imul
clc
fwait
les
shlb
outsb
sti
jns
add
jg
decl
push
js
push
inc
mov
add
mov
aam
pop
push
pop
inc
cmp
add
std
stos
mov
add
test
add
jb
mov
pop
pop
mov
sbb
dec
add
inc
icebp
mov
ljmp
add
xlat
xchg
pop
add
jnp
sbb
les
mov
leave
inc
frstor
add
out
add
jmp
sub
add
loope
push
movsl
lret
push
repz
or
popf
inc
les
add
aam
sbb
cli
imul
lahf
jbe
mov
or
stos
jo
add
push
out
ja
or
fcoms
test
fisubrs
mov
ljmp
add
test
imul
push
adc
test
in
and
insl
xlat
pushf
xchg
sub
mov
dec
out
xor
popf
out
add
in
or
inc
insb
testb
push
mov
jns
dec
mov
nop
sub
call
xor
loope
fstpl
aam
das
add
fmull
add
int3
je
add
jge
pushf
add
cli
sahf
add
mov
jnp
pop
fdivl
lcall
fdivrs
add
jmp
lcall
js
fdiv
mov
mov
add
mov
add
stos
sbb
mov
jmp
jecxz
cmp
push
add
push
iret
nop
insl
xchg
hlt
inc
ja
add
xchg
adcb
test
mov
add
test
imul
xlat
roll
in
and
adc
xchg
pop
cld
add
pop
dec
dec
shlb
xchg
filds
shl
data16
add
jo
test
rorb
fadds
daa
cwtl
jmp
cmc
cmp
xchg
mov
daa
mov
aaa
inc
pop
shlb
xor
roll
and
daa
push
lods
ljmp
shlb
or
mov
pop
aam
loopne
inc
push
es
lret
add
rol
xchg
cmc
push
sbbb
inc
adc
bound
cmp
ret
jne
mov
fs
xchg
cli
mov
xor
add
mov
das
mov
cmpsb
add
adc
je
sub
mov
pop
xor
jecxz
data16
mov
push
inc
out
push
add
negb
orl
add
popf
stos
jno
push
lds
mov
roll
xor
repnz
fcoml
mov
adc
fisubl
push
add
mov
sbb
fwait
jecxz
lret
out
icebp
push
sub
xchg
xchg
ljmp
std
xlat
pusha
fucomi
test
adc
sub
add
test
add
mov
out
mov
dec
add
orb
ja
add
push
rcr
or
aas
movsb
mov
pushf
mov
jnp
insl
mov
icebp
adc
add
enter
jg
stc
daa
inc
pop
sahf
pusha
lock
add
repnz
or
mov
movsb
and
out
jbe
add
popa
xchg
dec
rcl
repnz
add
adc
loope
dec
outsl
jo
add
xchg
out
insb
add
mov
outsl
mov
pusha
pop
enter
stos
push
pcmpgtw
or
shrb
out
add
scas
sar
xchg
pop
add
and
or
xchg
cmp
push
mov
xor
aaa
lock
mov
addr16
inc
pop
test
stc
mov
cmp
jg
add
sbb
mov
je
out
negl
dec
push
mov
andb
push
imul
data16
out
pop
mov
psubsw
das
xor
adc
mov
repz
movsb
push
xor
sbb
add
lods
mov
aad
add
mov
test
jmp
cmp
and
loopne
jbe
add
jne
mov
leave
sbb
cmpsl
inc
shrl
xchg
cltd
add
sar
pop
adc
mov
cmc
faddl
shrb
pop
push
and
daa
xchg
mov
dec
sbb
nop
jl
sti
dec
test
pop
xchg
mov
cmp
fldcw
movsl
xorl
mov
mov
sahf
xlat
inc
pop
cmp
push
add
and
std
inc
into
add
int
or
xchg
mov
add
sub
add
fistpll
sub
notb
out
xor
mov
mov
sub
add
test
jmp
mov
notb
xchg
or
add
push
imul
add
xchg
in
int3
xchg
outsb
mov
adc
es
rorl
and
cmpsl
pushf
add
jle
aas
popf
jne
adc
and
in
into
mov
xor
test
push
jae
shll
int3
out
add
cmpsb
adc
pop
mov
sub
pop
push
sbb
dec
add
push
or
ret
add
jno
cld
dec
xor
in
scas
add
inc
mov
add
cmp
jbe
push
test
push
cmp
dec
scas
arpl
sbb
pop
in
test
loop
lods
or
pop
pop
iret
and
adc
mov
ret
into
xchg
lods
add
jp
mov
add
or
inc
inc
pop
mov
in
and
adc
repz
mov
cmp
mov
mov
ds
jg
lods
jecxz
pshufw
lds
add
aam
mov
icebp
orb
pop
add
inc
or
sub
cli
outsb
add
jnp
adc
sbb
push
ss
loope
out
outsb
pop
test
and
loop
sbb
mov
fists
jo
mov
jl
pop
shll
sbb
leave
add
test
add
loop
icebp
push
pop
ljmp
adc
add
pushf
add
add
xchg
loopne
add
aaa
dec
add
and
imul
and
jne
add
ret
add
repz
xchg
cmp
cmp
and
repnz
ret
lods
cmc
pop
or
xchg
inc
mov
movsb
sub
subb
jae
cmc
test
adc
mov
add
adc
xor
in
out
mov
out
push
lds
pop
repz
mov
add
in
add
add
paddsb
enter
adc
sub
push
dec
add
ss
iret
mov
add
mov
xchg
push
or
movsl
pop
pop
imul
xchg
cmp
test
add
clc
fisubs
mov
pop
push
ret
roll
fldt
std
add
mov
sbb
sbb
add
aam
movsl
push
mov
test
mov
mov
nop
push
enter
sbb
imul
shrb
add
xchg
outsb
sbb
xchg
lcall
xor
adc
add
or
and
lahf
add
sub
cmp
mov
add
clc
cs
xchg
sar
filds
hlt
jmp
jle
fldl
mov
mov
add
outsb
or
scas
pop
nop
and
into
mov
fisubs
pop
xchg
cld
jae
pop
inc
lock
out
std
and
push
xchg
repnz
cmc
jmp
jno
inc
addl
ficompl
jmp
fld1
add
in
push
and
cmpsl
add
add
iret
cmp
nop
mov
cmpsl
jp
insw
sub
test
pop
add
or
xchg
jne
cmp
enter
inc
pop
popf
leave
loope
lret
add
pushf
sbb
xchg
fildl
jbe
add
stc
out
call
pusha
sub
movsb
xor
pop
push
xchg
push
jb
inc
mov
xchg
sarl
les
jae
out
sbb
sbb
rcll
lea
xor
add
ljmp
dec
mov
mov
lret
pusha
mov
sti
add
rclb
dec
adc
push
out
sbb
xlat
add
sub
xor
or
loop
loopne
inc
imul
sub
aas
adcl
pop
lcall
mov
rcl
scas
fldl
add
sbb
scas
add
pop
cmp
jno
jo
add
push
and
add
jp
aaa
and
mov
inc
inc
into
inc
cmpsl
add
xor
test
mov
push
cmpsb
add
orb
dec
mov
adc
pop
jnp
sbb
pop
ret
outsb
dec
add
mov
sahf
fnsave
shrb
jmp
iret
push
pop
mov
loop
in
xchg
add
and
test
hlt
push
push
add
inc
adc
movsb
add
mov
stos
sub
jo
ljmp
mov
cmp
pop
xor
mov
lcall
mov
add
jbe
gs
pop
out
sti
add
arpl
sbb
xor
int3
push
adcb
dec
es
insb
pop
adc
loop
icebp
arpl
xchg
mov
pop
mov
dec
stos
cwtl
out
pusha
or
jbe
add
test
lea
push
or
je
sbb
loopne
popa
roll
sahf
and
ss
jg
add
fcmovnu
pop
cli
lds
decl
addb
jno
pop
out
and
mov
pop
dec
mov
mov
ret
or
jg
or
lock
or
testl
jae
jnp
pop
push
add
or
cmp
scas
ds
mov
push
leave
add
adc
ficompl
push
enter
adc
adc
test
stos
xor
add
imul
sub
test
aad
lods
fcoms
cwtl
iret
adc
lret
dec
insl
xlat
dec
push
add
cmpb
mov
push
insb
or
sti
lahf
cmp
mul
lea
in
dec
jns
iret
jmp
lcall
das
test
lret
sub
cmpsb
mov
repnz
add
movsl
fdivrs
idivl
lcall
in
cmpsl
ja
iret
inc
add
inc
push
and
xchg
fistpll
add
fidivl
and
out
or
pop
mov
adc
mov
aad
jo
jge
inc
shlb
adc
aas
sub
ret
or
mov
inc
xchg
jns
mov
popa
ljmp
push
hlt
jno
dec
dec
aad
leave
inc
sub
xchg
shlb
jmp
xchg
dec
roll
xor
add
push
aas
add
icebp
mov
cmpsb
cwtl
add
add
es
add
pop
shrb
add
imul
cmp
mov
cs
incl
inc
adcb
test
inc
mov
add
aaa
sbb
cmc
and
cmp
jle
sbb
mov
adc
xor
xchg
add
adc
lods
imul
enter
adcl
mov
rorl
in
jl
test
out
mov
add
fsubs
mov
clc
fisttpll
call
repnz
cmp
add
cmp
adc
mov
xor
test
jns
ljmp
pusha
std
movsl
add
rcll
push
push
sub
loopne
popf
xchg
mov
movsb
lods
adc
pushf
mov
jecxz
jbe
mov
jne
ret
sbbb
imul
ljmp
fs
xlat
pushf
push
jp
es
pop
or
mov
push
dec
aaa
inc
inc
mov
xchg
lahf
pusha
stos
fstpl
add
imul
scas
dec
add
xchg
les
stos
std
inc
sbb
add
in
mov
cwtl
repz
pop
and
icebp
cmp
mov
adc
dec
add
lahf
or
iret
faddl
out
mov
cmp
sbbb
test
mov
cmp
xor
jns
add
std
into
sub
sahf
cld
pop
add
lret
inc
call
loopne
loop
addb
mov
repnz
dec
add
or
adc
cmp
and
xor
fwait
loope
cvttps2pi
gs
xchg
xor
sahf
popf
add
stos
outsl
pop
or
pop
insl
cmpb
ror
pushl
jge
sbb
add
or
cmp
lock
dec
stc
cli
loop
add
adc
cwtl
push
adc
add
sub
pop
pop
cli
cmp
dec
das
pop
jae
adc
mov
and
push
leave
mov
add
pop
push
inc
add
dec
fistl
sub
add
bound
xbegin
scas
mov
hlt
sbb
cmp
ja
and
mov
loope
dec
scas
jb
adc
add
push
rcll
imul
push
out
lahf
inc
add
mov
call
fcoms
push
mov
pusha
jne
fwait
xchg
and
mov
jbe
mov
loop
popa
subl
sbbb
add
add
mov
fmulp
xchg
xchg
cld
clc
scas
add
out
outsl
mov
or
add
cwtl
add
mov
sbb
mov
mov
jb
mov
push
sbb
arpl
je
add
ljmp
sub
push
sub
xchg
dec
inc
xlat
dec
pop
je
addr16
sbb
mov
lret
mov
adc
push
jmp
scas
mov
add
push
mov
fdivp
addb
push
sub
add
cmc
shlb
testb
inc
filds
inc
push
insb
mov
cli
mov
add
call
nop
xor
iret
gs
push
test
add
mov
mov
mov
ja
jmp
inc
paddb
cwtl
std
inc
sub
mov
and
mov
iret
dec
cwtl
movsb
inc
fisubl
fdivl
mov
cmp
loope
jns
inc
xlat
sbb
addb
xchg
xchg
adc
sbbl
pusha
inc
pop
add
stc
stos
negb
mov
jno
cmp
sbbb
add
add
pop
jno
push
push
xor
lcall
cmp
int
paddsw
mov
pop
adc
insb
loop
jg
scas
xchg
push
decl
mov
fwait
add
fisubrs
mov
jge
add
lds
mov
jae
clc
std
jg
ret
adc
lods
movsl
sbb
insl
mov
xchg
mov
rcr
adc
xor
cltd
adc
xchg
out
jp
xchg
imul
cmpsl
sbb
xor
or
daa
add
xchg
in
aaa
push
xorb
xchg
xchg
aas
mov
xlat
pop
and
jp
adc
jne
in
iret
add
lods
jae
jg
add
adc
lret
cmp
xchg
xchg
jnp
pop
sar
add
push
rol
js
aad
push
es
add
jbe
fdivrp
adc
dec
sub
sub
add
push
inc
loop
jo
mov
aaa
fldenv
rolb
bound
dec
push
or
inc
lret
test
xchg
add
xchg
incl
fsubr
jg
rclb
ss
sbb
jl
pop
testl
jecxz
pop
xor
sub
inc
push
sbb
xorb
dec
imul
stc
cmpsb
or
shl
mov
push
and
es
sbb
jmp
xchg
int
sbb
or
into
lahf
sub
sub
add
es
jge
mov
aaa
add
in
ljmp
pop
adc
push
mov
mov
xchg
aas
dec
and
push
ja
jecxz
add
push
inc
scas
dec
push
verr
mov
mov
aas
popf
ror
dec
add
xchg
sub
mov
dec
sbb
repz
jle
or
adc
out
out
xor
xchg
push
in
add
es
call
popa
stc
inc
sub
lret
lea
mov
push
clc
dec
inc
pop
add
fdivrp
pandn
or
mov
jmp
cmp
lods
enter
cmpsb
push
pushf
mov
xor
mov
inc
je
push
call
dec
push
xchg
daa
add
ja
add
pop
ds
ret
bound
add
decb
push
jns
add
fucomp
push
das
std
add
setge
add
pop
cmp
inc
test
xor
cs
vmwrite
mov
dec
rorb
xchg
ret
mov
fstpl
add
test
add
add
out
inc
repnz
in
adc
mov
out
adc
test
add
mov
fisubs
js
pop
mov
outsb
outsl
mov
and
cltd
rcr
nop
and
add
daa
mov
scas
pop
jp
cmp
enter
mov
repz
add
sub
cmc
add
cmp
cmp
cmp
cltd
push
xorb
sub
add
pop
adc
add
inc
insb
sbb
dec
inc
add
mov
popf
enter
dec
bound
mov
test
loope
movl
inc
cld
lret
mov
int3
dec
inc
ss
dec
add
jg
and
xor
jne
cld
clc
add
mov
lods
shlb
or
add
movsl
cmp
push
lret
cmp
sbb
adc
push
and
mov
ds
push
call
jbe
add
dec
das
xor
mov
sub
scas
mov
jnp
jl
jle
ret
loope
stos
inc
cmc
mov
lahf
mov
add
mov
stos
inc
add
inc
mov
ss
mov
or
sub
je
add
dec
inc
push
and
outsl
out
mov
sbb
xor
add
add
pop
fdivl
iret
mov
or
add
enter
imul
pop
xorb
sbb
inc
or
mov
ja
mov
pop
xor
in
add
mov
rcrb
sbb
outsl
loopne
shlb
scas
add
ja
push
pushf
cmp
ds
aaa
xlat
stos
adc
xor
out
adc
add
insb
pop
lea
nop
notl
out
ljmp
inc
pushf
mov
inc
roll
fst
icebp
dec
add
leave
fs
jmp
dec
rcll
in
or
xchg
pop
lock
inc
int3
sbb
ficoml
jmp
dec
daa
ss
cmp
int3
lods
or
xchg
cmp
jnp
dec
add
or
movsb
faddl
outsb
cmp
xchg
cld
mov
shr
cmp
stos
mov
jge
push
call
mov
mov
push
scas
xor
loopne
orb
int3
cmp
add
aam
mov
pop
or
jnp
cmp
ds
jns
scas
sti
fldt
lds
scas
cmp
adc
jae
pop
aas
xor
xchg
mov
pop
pop
add
sar
lret
rcrl
addl
les
jle
push
inc
mov
stc
add
jmp
add
xchg
push
xchg
sti
xor
or
jns
data16
orb
aad
adc
jae
std
xor
mov
cltd
jb
inc
dec
lcall
idivb
inc
mov
add
fistpll
cmc
andb
sti
push
ljmp
pop
imul
arpl
test
in
sub
add
fdivp
push
push
add
sub
cmc
add
mov
jne
push
test
dec
sbb
mov
fadd
add
mov
test
xorl
fistl
sbb
ja
icebp
jbe
push
ss
jnp
fdivr
xchg
dec
adc
add
pop
nop
or
bound
filds
mov
sti
repz
xchg
call
enter
add
in
ljmp
rclb
pop
add
sahf
loop
push
insl
dec
jns
mov
mov
rorb
mov
add
out
xor
jl
mov
in
mov
add
clc
pop
scas
add
add
movsb
mov
cmpsb
cmp
dec
mov
sub
sbb
lret
inc
sbb
sub
pop
cmp
and
jbe
pop
in
xor
jno
mov
cli
add
xor
xlat
ret
add
fisubl
jb
add
out
and
mov
int
lea
stc
push
sarl
iret
popl
mov
dec
adc
xchg
mov
pop
popa
clc
pop
xor
sub
and
jmp
shl
and
inc
stos
pop
in
add
out
sub
dec
mov
sub
pop
cmpsb
add
bound
sub
and
sbb
and
add
mov
mov
ljmp
stos
jmp
js,pt
pop
loopne
hlt
jne
push
out
xchg
add
int3
mov
push
mov
add
pop
mov
je
xchg
xor
push
lods
int
add
sbb
add
leave
out
cli
outsl
repz
push
loop
mov
pusha
xchg
push
add
adc
and
xchg
or
fiaddl
daa
sar
lahf
add
xchg
cmp
stos
punpcklwd
jnp
iret
jo
das
ficomps
pop
xchg
adc
sbb
mov
adc
fsubr
mov
movl
movsl
cltd
xor
loope
add
mov
addb
fbld
icebp
jnp
add
fprem
pop
jl
aas
adc
adc
xchg
mov
data16
loopne
in
movl
jne
out
loopne
or
add
push
subl
movsb
add
popa
daa
sbb
pushl
mov
add
xchg
out
jmp
mov
jg
les
inc
lea
fmull
inc
loope
pminub
dec
adc
fimuls
push
int
cmp
sub
mov
repz
pop
mov
mov
test
add
outsl
adc
xchg
jle
stc
mov
jmp
dec
push
loopne
add
xor
or
jbe
pop
adc
jns
scas
orb
lret
je
or
into
mov
add
shl
xchg
lret
pop
add
mov
in
add
cmc
sub
sbb
cmp
aam
popa
dec
mov
cmpsb
add
or
sub
jl
dec
outsb
add
pushf
lods
rcrl
cmp
popa
jae
imul
cs
adc
add
cltd
lds
mov
mov
scas
add
inc
lret
add
sbb
andb
faddl
xor
cltd
xor
std
add
loope
sarl
int3
push
add
ljmp
testl
fbld
cmp
sub
push
mov
rcrb
xchg
jle
out
mov
mov
pop
dec
lock
in
push
ret
stos
mov
pop
iret
or
aas
xchg
jmp
mov
clc
scas
lret
or
adc
orb
jns
pusha
clc
mov
mov
dec
fbld
mov
dec
mov
icebp
add
daa
out
inc
lret
les
pop
and
call
add
mov
add
testb
lock
repnz
mov
jno
and
dec
jae
jb
pop
add
and
add
or
jecxz
pinsrw
add
movsl
pop
nop
gs
orl
jb
dec
pop
lods
lahf
dec
xor
loop
adc
test
das
cmp
int3
or
and
mov
pop
fstpl
pop
xor
add
adc
insb
cltd
lods
jo
mov
sbb
pusha
jnp
mov
inc
cmp
add
sbb
out
add
fdivs
out
xchg
cli
clc
add
popf
mov
mov
jl
pop
test
sbb
xchg
cmp
push
and
xchg
pop
add
mov
mov
sbb
and
js
shlb
lods
sub
lock
or
pop
insl
icebp
je
or
and
pushf
in
pusha
xor
add
cmp
cmp
ds
add
mov
lret
push
add
jmp
lds
ds
cwtl
stos
bound
push
and
add
xor
nop
add
cwtl
call
out
push
stc
sahf
add
sub
add
pop
and
ret
out
push
xor
cli
shlb
mov
inc
add
das
mov
add
mov
repnz
clc
xchg
fadds
inc
cltd
aaa
add
dec
lahf
fs
fxch
mov
pop
orb
xor
imul
sbb
out
mov
add
fadds
mov
int
jg
inc
mov
ljmp
adc
dec
int3
mov
inc
push
xchg
hlt
insl
add
mov
rolb
sbb
pushf
in
inc
ret
sbb
cli
jo
fnstsw
mov
xlat
imul
in
sbb
jp
dec
fldl
fdivs
add
add
inc
andl
push
pop
mov
rclb
xchg
push
ret
into
add
add
int3
or
daa
hlt
add
mov
enter
push
ljmp
repnz
pop
mov
add
loopne
mov
pop
inc
add
gs
mov
sub
arpl
mov
fstpt
dec
xchg
sbb
jnp
push
pop
xchg
rcrb
aas
stos
stos
xchg
hlt
movl
cmpsb
nop
xchg
outsl
je
sbb
mov
inc
mov
in
add
push
sti
out
sahf
add
add
jbe
lret
add
stc
push
xchg
cmp
add
dec
adc
mov
test
add
ffreep
add
mov
pop
bound
in
testb
popf
sub
enter
and
and
out
sub
negb
insb
rcl
add
or
leave
and
aaa
test
inc
out
jno
mov
push
inc
pusha
xchg
xchg
pop
cwtl
sub
aas
mov
add
pop
fadds
xor
or
jl
stc
dec
xchg
add
jmp
adc
ss
mov
orb
or
pop
adc
mov
add
loopne
and
sub
fistl
or
rdpmc
daa
xorl
addb
outsl
dec
push
cmp
mov
add
inc
mov
cmc
inc
and
call
dec
and
pop
adc
ljmp
dec
shll
sbb
add
cld
imul
arpl
repnz
lods
dec
idivb
out
add
lret
popa
mov
mov
in
cli
mov
clc
and
das
out
and
sbb
pop
repnz
fs
inc
inc
push
add
jbe
add
push
fcompl
mov
xor
les
int3
adc
leave
jno
xchg
jg
mov
mov
faddl
cmp
adc
xchg
addb
lcall
sbb
push
push
pop
mov
dec
adcl
or
inc
push
lahf
push
rcl
pop
or
enter
call
test
in
mov
xchg
sub
add
lea
add
hlt
insl
inc
mov
rcr
sarl
orb
push
xor
adc
mov
mov
mov
xlat
testl
and
jno
insb
pop
fldenv
xchg
sub
addr16
add
jle
js
adc
orb
sub
test
loop
and
movsb
call
adc
shrb
dec
lcall
dec
push
sbb
pusha
fwait
xchg
mov
or
dec
clc
mov
lds
push
movsl
xchg
fisubs
fstl
lea
inc
clc
push
xor
in
push
repnz
jle
in
test
mov
xor
jge
jo
add
mov
dec
add
das
xor
in
sub
mov
add
xchg
cmc
cwtl
add
inc
test
inc
xchg
or
popf
inc
add
ror
test
sub
inc
jmp
add
popa
rol
in
out
mov
fwait
es
scas
repnz
outsb
loope
gs
out
add
sbb
jbe
je
jns
inc
add
jp
sbb
and
jmp
aas
xchg
lock
loopne
jnp
repnz
btc
hlt
idivl
out
test
sbb
cmp
cs
adc
or
mov
popf
mov
std
scas
cmpsl
mov
les
push
jno
in
lahf
add
xorb
jmp
add
sarb
add
lock
add
add
mov
pusha
fimuls
lock
mov
enter
xlat
inc
aaa
add
adc
stc
cmp
pop
mov
scas
mov
xchg
shlb
arpl
add
jb
dec
fs
dec
add
lret
popl
fcomip
nop
xchg
add
ljmp
jo
add
sarl
jmp
negb
sbb
xchg
fcoms
mov
sbb
cmp
pushf
pop
stos
insb
mov
push
rcrb
push
and
lcall
out
xchg
imul
add
pop
mov
loope
push
mov
arpl
leave
pop
and
add
and
push
outsl
xor
sbb
pop
lret
pop
add
jno
jg
rolb
jmp
bound
in
push
nop
add
movsb
xor
cmp
popf
xchg
divb
add
xlat
sbb
in
add
dec
xchg
out
std
jmp
jmp
adc
pop
test
add
xor
mov
mov
mov
xchg
or
xor
dec
dec
rorl
cmp
jmp
mov
cmp
outsl
lahf
loop
add
mov
jns
bound
xchg
movsl
inc
inc
xorl
xor
xor
xor
cmp
dec
mov
adc
loopne
js
jmp
mov
push
enter
addl
test
jecxz
add
ret
sub
mov
scas
cmp
adcb
jae
lcall
icebp
test
out
dec
or
add
mov
pusha
adc
jno
out
add
sub
gs
xor
mov
in
stos
add
mov
loope
fsts
add
add
dec
add
iret
inc
cli
adc
jle
sbb
push
xor
rorl
aas
cld
push
and
add
iret
jge
push
mov
ror
inc
xor
adc
ret
sub
mov
push
in
dec
add
scas
loopne
div
jae
inc
adc
xchg
and
rcrb
mov
push
scas
sti
add
jle
lock
adc
pxor
out
pop
mov
add
fldz
adc
pop
stos
popa
add
mov
insl
into
jne
pop
rclb
jae
rolb
adc
add
inc
pushf
add
addr16
sub
sahf
fs
jl
or
mov
push
add
dec
push
push
subb
push
pop
and
cwtl
leave
mov
inc
xchg
jb,pt
pop
outsb
jne
dec
pop
xor
add
adc
cmpsb
shlb
add
inc
add
stos
mov
push
lods
cmp
es
inc
add
cwtl
mov
add
jg
xchg
jo
fcom
mov
push
push
adc
repnz
push
int
mov
add
sub
mov
stc
popa
mov
adc
mov
xchg
add
push
mov
addb
loopne
imulb
cmp
repz
sub
inc
sbb
rcrb
lds
rcrl
or
incb
inc
pop
push
xor
loopne
dec
out
add
lret
fisttps
mov
sub
dec
fmuls
aam
stc
pushf
pop
jl
ret
cmp
sbbb
pop
add
mov
jbe
add
insl
in
outsb
scas
adc
push
lcall
add
cli
or
xlat
pop
add
pop
int3
mov
insl
je
jge
dec
test
cmc
insb
add
mov
inc
xchg
shl
sub
add
orl
sbb
mov
lods
adc
inc
sbb
clc
mov
es
lret
movsb
mov
in
mov
nop
xchg
mov
sbb
xchg
lds
cmc
ja
add
mov
and
lock
cld
fsubr
ja
add
pop
add
mov
jge
cmp
inc
movsl
jmp
inc
jnp
test
inc
mov
out
add
xchg
stos
pop
outsb
ficoml
sub
jecxz
or
fldenv
jb
cmp
addb
xor
pop
cld
pop
js
mov
in
aad
mov
mov
jbe
iret
add
dec
lahf
mov
add
out
cli
sbb
notl
inc
add
dec
icebp
push
lods
fmull
add
jno
lds
sub
popa
ja
aad
mov
pop
add
fildl
mov
add
or
insb
add
sub
lods
and
add
cmpsb
inc
in
mov
test
xchg
lds
outsl
cmp
nop
filds
add
popf
cs
push
inc
je
lds
dec
dec
roll
dec
sti
lret
add
je
add
jo
xchg
test
push
rol
into
add
xchg
jp
mov
roll
cmpl
int3
xor
sbb
jp
adcl
hlt
push
add
filds
xchg
hlt
sbb
and
test
imul
xchg
test
add
rcrb
mov
jle
fildl
mov
push
jge
add
mov
fs
sarb
leave
push
add
add
mov
jmp
in
pop
out
xor
popl
mov
jl
lcall
xchg
sbb
add
xlat
jmp
dec
add
ret
andb
and
icebp
loope
cltd
add
and
stos
cmc
jne
pop
out
mov
jge
arpl
or
xchg
add
mov
push
arpl
xor
mov
stos
cs
movsl
insb
cld
rcrb
or
jno
mov
mov
lret
push
and
ret
dec
leave
add
bound
cwtl
flds
push
dec
add
test
jbe
add
push
idivb
adc
add
xor
mov
repnz
jp
add
stc
sbb
mov
mov
jmp
xorb
pop
add
inc
or
popa
leave
mov
flds
cwtl
add
dec
pusha
popf
iret
punpcklbw
xor
add
cmp
mov
lock
jnp
mov
push
jb
cmp
inc
ss
mov
dec
stos
push
and
or
and
mov
push
lahf
mov
push
inc
add
test
add
aad
xchg
xor
inc
stos
pop
mov
add
mov
or
push
add
aaa
or
add
out
cmp
fsubrs
sub
mov
pshufw
es
sub
rolb
iret
enter
pop
inc
sbbb
out
mov
cmp
mov
shl
add
mov
jnp
xor
repz
mov
jns
aam
jo
nop
xor
pop
inc
adc
or
cmp
imulb
cmp
adc
outsb
adc
rcll
aad
std
loope
lret
in
xor
loop
add
xchg
cmp
call
lods
aam
sub
gs
jb
cli
xlat
adcb
gs
add
pop
scas
fwait
ljmp
jecxz
rcrl
fisubs
les
pop
fcomps
in
ljmp
or
std
add
mov
add
inc
enter
add
aas
jns
mov
call
xchg
notb
aas
into
int
inc
loop
inc
insb
roll
push
push
cmc
add
and
test
pop
mov
pop
ret
add
lret
mov
inc
mov
sbb
mov
adc
cmc
add
aaa
add
or
out
inc
rolb
xor
adc
fsts
fiadds
fbstp
rol
add
inc
loopne
scas
clc
add
sub
xor
add
fdiv
fnsave
pop
push
cmp
mov
rolb
dec
inc
out
push
pop
fmull
ljmp
add
fs
and
mov
das
addb
in
jecxz
dec
sbb
hlt
sub
xor
loopne
clc
adc
add
push
hlt
add
sarb
add
cmp
test
jae
lea
mov
pop
in
push
dec
data16
push
add
add
jmp
pop
out
fadds
lret
cmp
mov
aam
xchg
pop
popf
cmpsb
add
lods
in
mov
add
movsb
adc
pop
lock
sub
cld
adc
in
call
pop
outsl
scas
mov
lcall
adc
push
loopne
add
cmpsb
fildll
xchg
imul
xchg
aaa
xchg
mov
mov
cmp
mov
adc
aas
cmc
add
or
popf
aaa
mov
negl
and
inc
push
mov
pop
jno
push
repnz
or
dec
stos
or
jno
fwait
mov
add
stos
test
add
in
and
sbb
aam
sbb
add
adc
xor
out
mov
pop
mov
add
icebp
into
push
cmp
sub
ja
es
lea
mov
ret
inc
push
jo
cmp
cmpsb
jp
or
cmc
cmpsl
inc
xchg
lret
mov
jno
aas
add
int
sub
jmp
mov
inc
xor
nop
roll
add
push
mov
imul
imul
cld
add
lret
mov
out
push
cmp
add
inc
cltd
pop
xor
les
add
add
jg
addb
test
xor
add
fstpl
test
sbbb
add
push
daa
rclb
jnp
stos
sub
jecxz
pop
andb
in
xor
out
xchg
add
ds
pop
inc
sub
pop
lock
and
mov
testb
inc
out
add
stc
je
lea
adc
jns,pt
mov
aam
dec
add
ja
shll
cmpsb
mov
dec
push
jbe
push
cmp
xchg
push
adc
scas
rcl
mov
lods
dec
shll
mov
push
fiadds
mov
cmpl
insb
test
xor
gs
and
sbb
shrl
scas
fiaddl
out
lods
cmp
push
xchg
xchg
xor
lds
inc
dec
push
loopne
out
mov
add
ret
sub
add
pop
loope
push
dec
jmp
ja
out
adc
sub
mov
add
add
cwtl
lcall
loop
incb
ret
add
je
lahf
adc
push
pandn
inc
fsubrl
stos
fdivrs
inc
inc
cmpsl
out
push
divl
add
pop
dec
test
movsb
push
js
mov
mov
jle
shr
arpl
push
adc
push
xchg
mov
pop
jo
in
cmp
dec
mov
push
adc
cli
add
push
cltd
mov
pop
roll
rolb
xchg
fmull
add
dec
mov
dec
repnz
test
mov
add
or
ret
add
test
adc
lret
add
in
scas
or
iret
add
mov
pop
clc
xchg
add
scas
jo
cmp
fs
jle
push
adc
inc
jnp
lds
or
add
xchg
xor
and
adc
add
fstps
add
push
mov
outsb
iret
out
fldcw
test
sub
daa
in
rclb
add
adc
mov
jnp
push
jnp
cli
jo
jge
sbb
pop
fstpt
sbb
add
or
jge
sbb
add
sbb
aad
add
in
loopne
je
gs
inc
int
mov
push
movb
xchg
jp
cmp
xor
in
pop
inc
jae
push
pop
and
into
pushf
cld
loop
out
add
add
aam
call
mov
sbbb
add
leave
shlb
xor
push
adc
std
sub
mov
pushf
add
lods
sub
jmp
add
cmpsb
out
in
xor
fcomps
in
mov
in
push
add
xor
lods
push
sub
xor
mov
add
and
add
and
add
push
pusha
adc
inc
mov
lea
push
sbb
inc
dec
leave
and
cltd
nop
cmp
xchg
dec
pop
or
idivl
add
in
test
loop
dec
inc
add
pop
int
jb
jg
notb
add
cltd
int
add
xorb
jae
ret
add
fs
push
pop
xchg
add
mov
in
add
jno
jecxz
ljmp
imul
lea
hlt
or
mov
cmpsl
sbb
outsl
mov
push
rcrl
adc
das
push
and
add
push
xchg
popf
sbb
dec
sbb
lret
stc
leave
dec
movl
out
es
inc
pop
ljmp
mov
dec
dec
xchg
test
jge
mov
push
mov
cmp
daa
push
lds
mov
mov
push
add
cmpb
jg
pushf
push
pop
fs
xor
mov
jge
popf
cmp
imul
push
or
mov
repnz
in
lahf
in
bswap
cs
gs
rorb
jmp
sbb
xchg
dec
add
sub
adc
push
adc
icebp
jnp
cld
mov
iret
insl
fistl
aaa
jp
ljmp
push
lret
add
xchg
or
and
hlt
loope
lret
pop
fstpt
ja
add
movsb
in
pushf
mov
fdivs
das
cmp
mov
mov
cli
inc
addl
mov
sbb
add
lock
movsb
sbb
xor
inc
leave
add
stc
and
add
xor
push
pop
adc
mov
pop
add
loopne
lds
adc
es
cli
dec
pop
mov
xor
pop
xchg
add
lcall
add
test
mov
jp
les
push
in
lock
lret
xchg
imul
pusha
add
inc
add
adc
outsb
fiadds
cmp
sub
and
decb
addl
push
jl
add
out
nop
cmpsl
or
xchg
test
insl
pop
add
mov
mov
out
add
es
int3
add
add
mov
sub
fs
adc
adc
jae
jns
add
and
mov
sbb
divb
push
xchg
outsl
jp
add
dec
mov
jno
jl
add
jnp
cmp
gs
outsb
insl
je
sub
jno
cmp
add
mov
lods
std
jnp
pusha
cwtl
xor
cmp
and
hlt
rolb
decb
pop
jno
cmp
pop
inc
frstor
jae
ret
inc
inc
stos
add
push
xchg
xor
xchg
jbe
add
dec
push
xor
arpl
add
add
movsl
enter
add
adc
jo
dec
add
fisubrl
shll
mov
sbb
data16
push
mov
push
jmp
xorb
mov
das
mov
xor
pop
push
add
add
in
add
mov
mov
test
pop
inc
stos
jae
jl
add
xchg
cmpsb
mov
mov
in
mulb
dec
push
hlt
nop
cs
loope
add
push
push
popf
xlat
nop
dec
jns
add
cli
add
add
ds
sub
and
push
add
clc
mov
add
stc
repnz
les
add
jge
xchg
cmp
ret
rcll
add
inc
cmc
jecxz
jbe
stos
add
push
xchg
jmp
xchg
incl
mov
xchg
lods
dec
lea
in
sub
sbb
adc
scas
mov
popa
or
test
add
jmp
pop
out
inc
mov
test
cmc
and
divl
in
add
mov
in
and
pop
cwtl
mov
mov
inc
test
cmp
push
jbe
pop
shlb
mov
add
ds
fldt
push
sub
inc
insb
std
cmp
fldl
sahf
out
push
push
and
adc
popl
test
jge
and
add
pop
mov
ret
cmp
popa
ret
cmc
jne
pop
xchg
std
in
inc
stos
lahf
adc
dec
test
fbld
mov
jle
aas
bsr
mov
pop
and
mov
pop
push
sahf
add
dec
jp
jg
nop
add
lds
xchg
mov
ret
or
mov
mov
out
mov
outsb
lock
add
rcr
iret
stos
dec
add
scas
loopne
dec
sub
mov
xchg
dec
shl
or
in
jae
mov
popa
scas
mov
add
xchg
ja
add
jmp
aad
adc
ss
xor
jo
add
fidivs
inc
shl
push
mov
xchg
cmp
jne
xchg
lcall
push
jo
mov
dec
je
push
add
dec
add
dec
sub
xchg
rolb
lock
inc
push
push
imul
popa
pop
mov
out
lcall
mov
add
adc
fwait
push
pop
or
add
aas
aas
adc
roll
jbe
add
dec
sub
or
pop
faddl
add
bound
xor
rorl
inc
es
and
add
mov
cmp
ficompl
clc
adc
sbb
insb
cmp
out
hlt
sbb
jno
test
fiaddl
call
sarl
jb
inc
loopne
fistpll
add
pop
sarb
inc
movsb
push
rcr
testb
movsl
pop
aam
loope
sbb
pop
add
mov
add
fdivrl
out
lret
or
cmp
cmp
movl
mov
outsl
in
push
dec
lcall
lods
icebp
jl
add
jle
mov
sbb
jo
popa
pop
aam
mov
das
jbe
ja
cltd
shrb
push
cmp
push
jg
pop
and
push
mov
add
xor
mov
orl
sar
testl
sbb
scas
pop
les
js
loope
lds
test
lret
jg
push
and
inc
mov
add
sub
daa
fidivs
adc
mov
push
add
jmp
mov
sbb
cmp
pop
xchg
and
ss
add
lahf
hlt
push
add
out
fcomi
cmp
rcrb
pop
les
xchg
xlat
pop
pop
or
or
push
or
dec
loopne
ss
dec
add
cmpl
push
jmp
lahf
xchg
call
ja
dec
mov
xorb
scas
lret
js
jp
lock
mov
ja
int3
in
cmc
dec
stos
inc
dec
cwtl
adc
jns
inc
mov
iret
add
aam
pushf
mov
or
xlat
test
sub
or
mov
add
add
and
je
pusha
stos
aam
adc
cmpl
sbb
out
insl
xor
fldt
add
flds
sbb
xor
mov
ljmp
sbb
outsb
jecxz
push
mov
mov
pop
cmpb
pop
add
cmp
mov
dec
push
shl
add
pop
sti
jge
add
sbb
out
and
sahf
jmp
adc
aad
icebp
xor
imul
mov
in
add
js
mov
add
je
daa
sti
ss
push
stos
ja
add
lods
xor
xchg
int3
add
mov
xorb
insl
xchg
aad
push
add
sub
inc
sbb
dec
in
sbb
mov
ja
cmp
insb
add
popa
arpl
add
mov
add
fs
add
sub
and
or
add
xor
pusha
add
mov
add
cwtl
jl
mov
and
mov
add
adc
pusha
cmp
aad
pop
pop
cmp
lret
inc
dec
xor
xchg
mov
fldt
scas
adc
or
add
xlat
cltd
dec
lea
rcll
add
adc
push
cmp
icebp
add
cmpsb
shl
add
fnstsw
lock
mov
in
movsl
push
add
or
add
ds
mov
or
add
int
pop
fcmovnbe
rcrb
rep
in
iret
mov
xchg
or
xchg
mov
adc
push
stc
int3
mov
nop
hlt
xchg
push
loopne
sbb
aas
sar
int
xchg
test
add
cmp
cltd
std
add
pand
out
xchg
push
mov
cli
mov
push
add
pop
loop
fsts
insb
jl
add
xchg
pop
push
add
scas
vphaddwd
sbb
xorl
stos
mov
hlt
mov
sub
xchg
daa
lods
icebp
nop
jmp
cld
add
cmpsl
mov
jo
adc
push
adc
loope
js
stos
je
sub
rorb
cmpsl
shr
ljmp
lds
jno
mov
ret
cmc
shlb
or
imul
shrb
bound
lcall
idivb
test
sbb
xor
cli
jb
pop
cmp
pusha
sub
in
das
add
loope
jns
fs
add
out
sbb
push
rcl
push
test
js
repz
dec
arpl
add
add
and
data16
inc
add
ret
in
jecxz
add
pop
add
andb
aam
add
adc
aas
sbbl
int
je
cld
outsb
sub
inc
add
pop
cs
cmp
andl
add
negb
push
mov
fs
xor
dec
push
outsb
jb
cld
pushf
sub
add
jo
xor
cmc
or
fdivs
inc
addl
cmpb
ret
xchg
pop
fs
jge
jmp
jnp
imul
xor
arpl
pop
dec
mov
clc
adc
fistl
adc
dec
out
add
push
ffree
push
cli
mov
shrl
add
xchg
sbb
iret
add
popf
cmp
ret
xlat
mov
ja
ljmp
je
jae
insb
push
dec
push
lahf
sar
in
pop
add
aas
das
add
mov
or
pop
sbb
xor
lock
add
sub
sahf
add
dec
pusha
outsb
and
sub
js
mov
stc
mov
sub
int3
jnp
adc
inc
dec
mov
add
or
lods
jo
inc
outsl
jne
pop
push
ret
loopne
sbbb
jecxz
push
fists
mov
das
std
cmp
cwtl
push
fcom
or
dec
xchg
hlt
enter
add
lret
cmp
xchg
add
sub
divb
in
xchg
jo
add
pop
sbb
aaa
or
rol
andb
pop
sbb
jg
xor
mov
sbb
push
dec
sbb
add
mov
cmp
loop
les
adc
add
data16
dec
sbb
and
jae
sbb
push
popa
or
mov
pop
paddd
and
aas
xchg
pop
push
mov
xchg
sub
jmp
push
xlat
lds
xor
call
add
jmp
ret
pushf
add
out
aam
notl
cltd
add
imul
xor
int3
popf
mov
wbinvd
add
mov
aas
rorb
rolb
roll
in
sub
jb
pusha
jns
dec
lsl
inc
sbb
add
mov
pushf
jo
add
lds
and
dec
lods
dec
out
fsubrs
add
fsubs
sbb
mov
ror
inc
int3
mov
sbb
xchg
cwtl
shrb
jbe
pop
mov
loopne
fs
jo
add
sub
inc
sbb
es
cld
push
mov
insb
add
cmp
aam
mov
mov
fstpl
and
jne
popa
insb
pop
jecxz
pop
ret
sbb
add
xor
inc
in
pop
push
push
neg
mov
dec
loope
mov
shlb
das
out
mov
xor
rcrb
add
cmc
sbb
iret
shlb
test
pand
or
cli
cltd
add
test
daa
adc
jg
jns
sti
jmp
cmp
add
in
cmpsb
sarb
pop
xor
andb
out
imul
xorl
mov
jns
pop
adc
add
cs
test
adc
out
addr16
psubb
popf
inc
pop
mov
fidivrs
add
mov
mov
aas
aad
and
cwtl
imul
shrl
cmp
rcrl
add
shrl
inc
outsl
divl
lea
or
loope
jb
add
xchg
jl
int3
and
in
inc
movl
cltd
mov
or
push
orb
das
or
stos
cmp
xchg
fcmovb
test
and
inc
imull
add
es
sarl
add
add
aas
add
andb
dec
lock
add
into
in
xlat
sub
cmp
gs
rclb
mov
add
fwait
stos
mov
in
add
pop
ror
adc
pop
test
call
add
jge
mov
dec
adcl
sbb
add
je
adc
or
mov
pop
iret
cmp
enter
add
mov
add
cmp
xchg
push
push
test
lret
mov
xor
sti
jp
dec
lcall
aaa
lock
and
cwtl
push
add
add
cmp
mov
shlb
mov
push
mov
adc
add
mov
xchg
loope
mov
adcb
mov
imul
mov
push
dec
sbb
je
les
add
lods
movsb
add
xchg
mov
adc
mov
and
pusha
pop
sbb
rorb
push
ja
scas
sar
call
inc
mull
lcall
add
jp
mov
mov
repz
leave
mov
cmp
inc
fidivl
out
insl
and
or
adc
push
pop
push
add
ja
add
add
imul
stos
stc
rclb
rorl
or
lock
aas
mov
popf
rolb
add
xchg
out
in
std
mov
jae
cpuid
xchg
and
cmpsl
push
cmp
and
inc
cmpsl
add
outsb
cmpsb
das
popa
aaa
pop
push
and
stc
jge
dec
imul
mov
inc
and
icebp
outsl
ret
icebp
add
mov
mov
cmpsb
add
mov
mov
add
fimuls
lock
mov
lds
rcrb
sub
mov
sbb
cmp
add
sahf
fisubrl
add
int3
fistps
jle
jne
mov
adc
inc
mov
inc
rorb
add
cli
into
inc
jle
inc
loopne
adc
dec
movl
cld
lahf
mov
jb
int
in
add
ss
dec
out
add
sub
xor
repz
add
lods
adc
inc
shll
lret
and
jle
pusha
add
movsb
out
cld
add
xchg
xor
inc
push
add
push
push
fs
pop
or
add
popl
push
pop
loop
mov
add
test
mov
jmp
test
add
mov
testl
stos
cs
push
pop
lea
repz
icebp
das
int3
lahf
hlt
adcl
test
add
addr16
mov
shl
add
sub
mov
aas
add
mov
shlb
aas
das
aam
push
xchg
jns
add
jno
in
mov
in
int
fsubp
test
jb
mov
iret
sub
negl
stos
or
cmp
or
aam
add
cld
mov
add
xchg
jb
xchg
pop
aaa
arpl
data16
add
jno
fsubrl
jb
dec
cmpsb
into
cmp
movsl
data16
or
dec
add
int
or
xor
add
xchg
popl
xchg
add
repz
jnp
in
xchg
adc
mov
cmc
xchg
mov
push
fwait
call
orl
popa
sbb
add
out
rolb
and
in
les
push
and
mov
jne
jg
add
pop
xorb
imul
inc
add
arpl
out
push
pop
mov
sub
pop
dec
sbb
push
stos
nop
rcrb
push
dec
rol
and
sahf
in
jp
or
dec
jle
add
and
fs
dec
loopne
xchg
cmp
into
mov
cld
jo
add
fxch
out
mov
or
pop
push
add
add
jo
popf
push
sbb
pushf
stc
add
pop
lods
or
lock
push
push
int
add
clc
mov
sbb
pop
out
repz
push
jl
sar
orb
xchg
adc
mov
dec
push
mov
addr16
mov
test
xor
dec
mov
js
sbb
jmp
cmpsl
mov
je
shlb
and
add
push
mov
add
push
mov
cmp
in
in
sbb
fimuls
lods
pop
add
inc
adcb
sbb
lds
fmuls
push
sbb
push
cmp
mov
incl
add
stos
push
call
add
fs
loopne
pop
div
jne
push
mov
mov
dec
add
push
fld1
jno
addps
sbb
shlb
fsubrs
jg
pop
outsl
pop
jmp
xor
test
sub
dec
clc
nop
rorb
into
add
scas
xor
pop
daa
sbbb
std
adcb
stc
sbb
std
imul
sub
add
add
mov
push
data16
add
rcll
test
je
push
cwtl
add
repnz
shll
arpl
mov
mov
pop
es
enter
mov
add
xchg
sub
hlt
cltd
or
outsb
or
fcomip
cwtl
add
loopne
out
or
test
inc
add
xor
pop
add
xchg
bound
jae
mov
add
or
loop
add
pop
aad
and
push
add
jne
mov
lret
add
sub
pop
repz
into
jno,pt
cmp
add
cmpsl
rcll
pop
cmp
inc
lret
push
cmc
stos
add
std
xchg
mov
pusha
add
fstps
xor
cmp
dec
push
popa
stc
cwtl
movsb
rolb
fcoms
and
das
add
mov
push
add
leave
lret
pop
in
mov
xchg
rcrl
push
cltd
or
and
jle
in
scas
add
ljmp
call
mov
add
inc
jge
mov
je
xlat
repnz
popa
inc
xchg
inc
jnp
push
pop
mov
out
pop
jp
outsl
mov
arpl
adc
or
fwait
mov
add
mov
push
hlt
xor
pop
adc
add
cld
add
sub
cltd
mov
scas
or
jno
cmp
jp
pop
lock
shrb
inc
sahf
add
test
out
sub
mov
movsl
aaa
pop
add
bound
push
fldenv
mov
ja
insb
mov
mov
inc
sbb
rcr
sar
inc
add
jge
pop
jnp
dec
sbb
add
repz
and
inc
and
lock
cmpsl
cmc
push
add
movsl
xchg
cwtl
ss
dec
sub
cmp
pop
mov
filds
call
fnsave
xchg
sub
loopne
add
push
sti
push
movb
adc
sbb
movsb
cli
lds
push
ret
sbb
jno
int3
pop
adc
incl
jo
xor
xchg
mov
cmp
icebp
jbe
or
movsl
insl
roll
hlt
clc
shl
out
pop
aas
push
cmp
pushf
fisttpl
data16
js
inc
out
jnp
add
addl
lods
mov
mov
mov
test
and
and
ja
add
repz
fcmovnu
add
add
dec
jmp
or
mov
divl
jle
std
inc
add
hlt
faddp
and
mov
pop
add
push
loopne
or
lcall
xor
push
js
ja
dec
scas
add
push
xor
adc
mov
out
repnz
out
adc
push
sbb
and
cwtl
mov
sbbl
movq
inc
mov
out
lods
or
inc
pusha
add
pop
jg
and
ds
adc
movsb
pop
loop
rolb
mov
pop
cmp
int
xlat
cmc
push
test
pushf
cld
es
jl
xchg
mov
nop
jbe
inc
addb
push
in
lahf
cmp
loopne
mov
fwait
sub
xor
mov
inc
add
adc
add
jl
adc
sbb
fcomp
add
sti
push
inc
mov
jnp
add
adc
mov
ficomps
inc
inc
popa
mov
test
add
sbb
add
ljmp
andl
sub
sarl
inc
xchg
jae
add
lds
iret
gs
add
or
dec
lea
movsb
push
add
arpl
pop
les
scas
or
cwtl
test
and
xchg
xlat
in
add
sbb
aad
sbb
sti
and
lret
pusha
lods
add
mov
jle
ljmp
xchg
add
nop
sbb
insb
aaa
xchg
ret
cmp
cmp
cmp
test
rclb
mov
add
adc
mov
into
push
cmp
fwait
popf
es
shrb
outsb
jge
add
push
jg
xchg
call
lea
push
jle
movsl
sarl
push
mov
mov
rorb
sbb
ret
ret
and
int3
xchg
push
add
and
jae
movb
pop
fyl2xp1
mov
add
out
lock
xchg
mov
pop
pop
enter
sbb
add
lds
cmp
mov
clc
add
icebp
mov
mov
in
add
add
insb
jns
jl
xchg
fdivl
scas
sub
mov
xlat
xchg
push
mov
aaa
jg
adc
les
pop
adc
xorl
aaa
fisttpll
loope
aas
add
push
pop
and
test
sbb
addl
add
inc
adc
lods
loop
das
sarl
stc
movmskps
and
fidivl
pusha
add
icebp
or
add
and
rcll
dec
adcb
pusha
xor
and
xor
lcall
sub
xor
add
mov
out
xchg
push
adc
mov
cltd
dec
pop
shrb
imul
pop
sbb
sti
mov
movsb
inc
imul
fimull
stos
mov
adc
setp
mov
hlt
inc
xchg
jge
mov
enter
lea
int3
xchg
mov
and
sbbb
jne
and
outsl
add
mov
add
adc
push
cltd
lahf
popa
add
pusha
les
shl
outsl
dec
inc
sbb
adc
fs
negb
es
cmp
rcrl
mov
push
insl
push
cmp
es
adc
pop
sbb
xor
inc
sbb
popl
dec
jl
inc
loop
xlat
push
sub
add
lret
scas
xor
addb
pop
ljmp
clc
mov
jmp
jnp
push
mov
int
add
fisttps
pop
hlt
jp
inc
les
loop
add
iret
into
dec
lock
cmc
ds
sbb
pushf
xorb
or
add
je
inc
std
pop
inc
in
add
test
lret
cmp
jo
sbb
in
mov
pop
pop
mov
ss
jge
mov
hlt
stos
pop
fldl
jg
addb
dec
insl
add
dec
cmpsl
cmpsb
add
jecxz
fidivs
aam
fadds
mov
cmp
fidivrl
cmp
xor
pop
lds
data16
mov
imul
mov
test
xchg
add
add
mov
les
out
sbb
add
mov
decl
cwtl
add
cmpsl
push
mov
lea
inc
aam
mov
movsl
and
int3
test
shll
mov
test
inc
cmp
add
cli
movl
push
in
xchg
or
int
jg
jae
loop
mov
add
andb
nop
xchg
pop
loopne
sub
mov
imul
fldenv
cmp
cmpsl
jg
pop
por
push
outsl
pusha
jbe
iret
dec
int3
flds
incl
in
sbb
pop
xor
add
xor
mov
push
and
mov
notb
push
call
dec
stos
jle
fistps
push
push
js
or
sub
mov
popf
shll
shlb
cmp
sub
add
pop
mov
mov
jmp
sbb
pop
push
aad
sbbb
xor
rcrb
gs
cmpsb
xchg
xor
add
xor
push
pusha
icebp
mov
add
xchg
pusha
push
adc
inc
scas
cld
jmp
dec
je
fadds
jae
xlat
call
popa
das
push
les
mov
test
add
ds
xchg
aad
sbbl
lea
add
or
jne
shll
and
pop
xor
rolb
rolb
jle
mov
sbbb
inc
out
les
and
dec
jnp
addb
mov
addl
cmpsb
insb
push
hlt
xchg
add
jne
or
pop
xchg
out
fnstenv
sub
push
testl
dec
xor
xor
out
ljmp
mov
data16
xchg
ret
push
repz
nop
pop
adc
mov
inc
mov
pop
cli
or
xchg
aaa
loopne
pop
cld
cs
shl
push
sbb
mov
cmpsl
fnsave
add
xchg
inc
sbb
mov
lock
movsl
sub
mov
mov
sub
add
lds
add
mov
insl
mov
aaa
pop
sub
lods
add
sarb
jge
repz
outsl
bswap
adc
popa
mov
ds
adc
addb
lods
pop
popf
sbb
loopne
push
inc
popa
shl
xchg
jmp
ja
imul
cmp
mov
outsb
mov
lock
jle
test
int3
ja
sbb
dec
xor
inc
add
loopne
fnstsw
pushaw
mov
int3
add
rcl
sar
and
fwait
jbe
psubusb
push
dec
in
sub
rclb
lcall
or
and
cmp
cmp
or
loopne
rolb
jo
test
pop
sarb
cmc
jne
movlps
xor
mov
je
fistpll
dec
mov
xchg
mov
insb
lahf
call
xor
or
pop
mov
sub
scas
icebp
enter
or
xorb
imul
add
cmp
loop
ret
rol
inc
clc
out
fists
repnz
sub
or
das
js
aas
jne
cmpb
test
aam
movsl
adc
incb
out
mov
jnp
icebp
inc
push
je
and
pusha
push
cmc
clc
mov
mov
hlt
cwtl
mov
cmp
mov
inc
insl
and
dec
daa
lock
mov
add
push
mov
fwait
mov
stc
ret
add
push
adc
cmp
mov
cld
pmulhuw
inc
outsb
xor
rcr
dec
scas
push
mov
add
stc
mov
xchg
orb
fcomps
jno
scas
push
sbb
cmp
adc
or
cs
sti
push
add
pop
ljmp
std
stos
jno
pushf
jnp
mov
cli
inc
add
xor
shr
mov
push
xlat
movsb
pop
jb
add
cmp
jne
mov
shlb
sub
add
jb
rolb
cli
fidivs
add
inc
push
imul
stc
mov
jle
mov
aas
xor
imul
cmp
dec
and
popf
or
push
stc
notb
mov
sbb
xor
adc
out
jnp
add
xor
push
movl
sahf
ficoml
stc
push
fwait
sub
ret
cmp
cwtl
sbb
hlt
pop
imul
adc
add
jge
lcall
addr16
loopne
pop
out
repz
jns
add
jne
inc
mov
add
push
mov
add
mov
subl
add
xchg
out
and
bound
data16
cmp
std
frstor
filds
shll
or
mov
les
lods
cmp
addb
inc
mov
lds
lds
lds
into
sub
add
mov
rclb
jge
xchg
insl
lods
cmp
add
mov
aad
add
dec
adc
add
daa
bound
jecxz
add
or
jbe
jge
add
sbb
in
clc
leave
inc
ret
lock
fmuls
xor
mov
loopne
iret
sbbb
push
sbbl
imul
add
ljmp
adc
aam
add
fistpl
mov
pop
in
cltd
dec
mov
and
xor
stos
mov
sub
and
sub
ss
mov
add
jmp
pop
mov
xchg
jnp
subb
sti
add
orl
cmp
mov
sub
stos
mov
push
cld
push
cvttps2pi
xchg
pop
shlb
mov
scas
andb
inc
mov
mov
fisubl
add
test
add
mov
push
xor
pop
add
push
push
mov
xchg
sub
sub
sub
add
jnp
repnz
and
or
cmpb
dec
enter
pop
aam
into
jle
lods
jge
jno
pop
push
fldenv
cmp
add
test
and
add
add
xchg
imul
mov
xor
lret
pop
xchg
jns
jmp
in
push
faddl
add
push
push
mov
sbb
add
mov
mov
push
add
loop
stos
sbb
ret
in
stos
arpl
nop
mov
mov
cwtl
mov
scas
xchg
fdivrl
mov
xor
mov
pop
mulb
gs
fwait
incb
sub
pusha
add
pop
push
mov
push
mov
dec
mov
jbe
in
add
sub
repnz
adc
ss
loopne
pop
or
add
dec
jne
dec
out
push
sub
int
push
add
xlat
xchg
and
or
and
enter
arpl
cmp
xchg
add
out
dec
inc
sti
xchg
add
mov
fldl
inc
loope
lock
cld
jmp
stc
les
outsb
pop
cmc
int3
lea
sbb
inc
incb
popa
clc
jne
pop
incl
and
mov
xor
adcb
dec
inc
pop
cmpsl
nop
xor
fisttps
lcall
cltd
add
loopne
jge
test
loopne
and
inc
sbb
xchg
jo
add
jns
or
xor
xor
pop
jnp
mov
rorb
add
jp
add
scas
and
shrb
xchg
add
movsb
cwtl
test
push
insl
push
dec
jbe
call
lret
jmp
adc
add
sub
movb
or
pop
add
lds
cmp
mov
pop
mov
dec
dec
test
add
fpatan
ds
add
aad
sarb
insb
add
popf
dec
mov
adc
xor
add
in
test
pop
ljmp
add
cmp
add
jno
in
faddl
or
and
push
pop
mov
adc
xor
adc
mov
push
or
sbb
sbb
mov
push
psrad
cmp
adc
xor
mov
adc
xor
sub
push
mov
cs
and
xor
mov
xor
loop
cmp
cmp
sbb
and
sbb
mov
ds
loop
cmp
popf
pusha
inc
mov
mov
and
gs
and
insb
dec
and
mov
daa
and
sub
jnp
push
sub
jge
sub
je
sub
mov
das
and
xor
push
cmp
push
xor
push
push
xor
or
outsb
aaa
and
cmp
dec
dec
je
push
dec
jbe
and
cmp
inc
jp
loop
cmp
inc
jle
and
inc
mov
sbb
ret
test
cld
ret
int3
inc
mov
mov
cmp
inc
and
mov
leave
nop
dec
loop
cmp
dec
adcl
mov
cwtl
dec
loop
cmp
dec
and
sahf
dec
mov
mov
mov
push
and
cmpsb
push
mov
test
jecxz
rclb
cmp
and
mov
mov
mov
loop
cmp
and
mov
pop
loop
es
pop
and
shlb
ret
mov
cmpsb
arpl
movsl
enter
arpl
mov
cmp
mov
and
aam
loop
cmp
imul
fisubrl
mov
outsb
loop
cmp
outsl
mov
loop
mov
cmp
jae
xchg
call
jne
lahf
in
jbe
lcall
js
mov
jns
mov
jp
mov
idivb
clc
jl
test
jge
xchg
jle
cmpb
jg
xor
outsb
out
icebp
out
jecxz
repz
cmp
test
jg
xchg
insl
cmp
mov
imul
mov
mov
popa
cmp
lea
addr16
mov
mov
inc
cmp
xchg
mov
xchg
and
xchg
mov
xchg
loop
cmp
xchg
mov
xchg
and
mov
cltd
loop
cmp
lcall
int
mov
popf
loop
cmp
sahf
mov
lahf
and
mov
cmp
mov
mov
mov
mov
cmpsl
das
sbb
test
or
mov
stos
mov
lods
lods
loop
jne
in
add
test
hlt
add
xchg
mov
and
xchg
mov
and
popf
mov
sub
mov
das
fwait
mov
sub
test
and
cmpl
mov
and
mov
loop
cmp
mov
jno
mov
cmp
mov
jns
mov
cmp
mov
popa
lret
arpl
loop
cmp
mov
imul
loop
cmp
mov
push
rorb
cmpb
aam
mov
and
pop
xlat
loop
cmp
mov
inc
fimull
cwtl
cmp
mov
push
fisubs
xchg
dec
fisttps
aad
aaa
loope
xor
and
xor
mov
cmp
aas
in
fidivrl
out
fistpll
out
fsubl
daa
jmp
and
and
mov
sub
das
in
mov
sub
and
sub
mov
adc
pop
icebp
mov
adc
and
adc
mov
sbb
pop
cmc
mov
sbb
and
sbb
mov
add
pop
stc
mov
add
daa
sti
add
jg
or
std
mov
or
loop
cmp
jmp
cld
dec
mov
pusha
or
inc
in
cltd
adc
cmp
call
dec
mov
adc
xchg
adc
test
clc
and
cmp
sbb
aam
and
mov
rorb
fs
adc
inc
les
pop
and
dec
adc
fs
mov
movsb
sub
dec
xchg
and
enter
dec
and
xor
cwtl
movsb
xorb
dec
adc
les
dec
adc
inc
cwtl
movsb
pusha
movsb
cmp
and
lods
dec
adc
aam
call
jo
shlb
mov
test
in
cltd
shlb
dec
adc
xchg
int3
shlb
adc
ljmp
cld
cltd
push
js
push
dec
adc
mov
je
in
cs
test
sub
enter
dec
cltd
fsubrl
dec
stos
nop
loopne
test
rclb
and
add
adc
fs
adc
mov
adc
je
clc
cltd
or
call
rol
mov
movsb
dec
xchg
cwtl
les
mov
es
dec
xchg
push
mov
sub
dec
test
mov
rclb
dec
dec
or
lock
xchg
or
mov
les
push
les
dec
xchg
add
mov
insb
dec
adc
inc
clc
mov
mov
pusha
cltd
les
insb
dec
dec
sbb
add
or
ljmp
sub
cltd
lods
js,pn
sub
call
adc
add
cltd
in
and
ljmp
sub
mov
xchg
adc
pop
mov
in
mov
pusha
les
adc
push
mov
jl,pn
mov
shrb
lods
les
sub
push
les
xchg
call
fcoms
push
fs
inc
and
push
ljmp
inc
dec
dec
pushf
push
les
rolb
cmpsl
and
dec
dec
xchg
out
and
inc
faddl
mov
adc
and
dec
inc
xchg
adc
jl
push
lock
dec
xchg
xchg
lret
inc
rorb
icebp
dec
enter
mov
loop
ljmp
and
inc
pushf
dec
mov
inc
jmp
mov
dec
xchg
imul
inc
xor
or
aas
jne
dec
adc
and
dec
sub
mov
adc
inc
dec
pop
xchg
or
popf
inc
cmp
stc
and
dec
inc
xchg
cwtl
and
pop
adc
addr16
aad
mov
xchg
mov
adc
dec
iret
xchg
out
movb
ret
adc
and
dec
outsl
xchg
inc
and
jecxz
sbb
xchg
shll
inc
imul
test
xchg
push
ja
in
adc
xchg
andl
inc
mov
call
in
adc
and
dec
push
xchg
mov
mov
pop
adc
xchg
dec
test
xor
mov
or
xchg
ja
cmpsb
inc
jnp
mov
adc
and
dec
mov
inc
dec
pop
mov
adc
xchg
movsl
and
inc
mov
mov
xor
dec
js
add
jno
fildll
adc
xchg
xor
popa
inc
movsb
out
xor
loope
add
inc
push
inc
mov
adc
scas
dec
dec
xchg
aaa
and
inc
sub
mov
in
and
xchg
fisubs
mov
mov
lods
and
dec
loopne
inc
and
inc
or
and
dec
adcb
jns
xchg
adc
ds
daa
xchg
andl
mov
fwait
and
dec
push
xchg
jae
dec
inc
adc
and
dec
jge
push
and
inc
outsb
mov
and
dec
aam
in
and
inc
mov
mov
adc
xchg
out
mov
inc
and
dec
xchg
xchg
or
xchg
mov
adc
push
dec
fstl
loope
mov
adc
and
dec
jmp
stc
and
inc
sbb
pop
adc
and
dec
lea
inc
decb
clc
dec
jne
pop
and
inc
add
mov
dec
out
xchg
mov
push
adc
adc
and
inc
in
mov
push
adc
and
dec
inc
xchg
pop
and
stos
adc
and
dec
fists
lcall
cmp
enter
add
mov
mov
adc
test
xchg
inc
and
cmp
icebp
adc
gs
and
jb
mov
dec
add
inc
mov
or
dec
xor
jl
mov
adc
pop
dec
jnp
mov
addl
and
dec
pop
xchg
pushf
and
lods
adc
and
dec
imul
adc
and
pop
loop
adc
aam
push
inc
sub
push
adc
jbe
xchg
call
aaa
mov
adc
and
pop
loop
arpl
mov
adc
xchg
sarl
scas
adc
and
dec
and
push
and
inc
mov
mov
dec
pop
xchg
adc
pop
inc
add
mov
dec
fwait
xchg
leave
and
inc
mov
pop
and
dec
pop
xchg
mov
out
inc
dec
int
mov
and
xrelease
adc
aad
push
inc
sarb
adc
insb
dec
test
mov
popf
and
dec
mov
movsl
xor
dec
js
xchg
cli
inc
in
mov
dec
pusha
xchg
imul
inc
push
dec
mov
adc
and
dec
into
xchg
ret
and
out
push
inc
sti
xchg
mov
xchg
dec
push
xchg
lret
and
push
fisttpll
loope
dec
xchg
lock
inc
cld
jmp
stc
adc
and
dec
outsb
xchg
pop
and
inc
int3
lea
inc
dec
xchg
pop
and
clc
jne
pop
adc
and
dec
and
adc
mov
add
adc
dec
jecxz
in
and
dec
adc
pop
dec
cmpsl
xchg
nop
and
mov
dec
push
xchg
lcall
cmp
enter
add
mov
loopne
xlat
jge
test
mov
xchg
cmp
inc
inc
icebp
inc
mov
and
dec
sbb
xchg
jo
adc
xchg
mov
or
xor
xchg
jl
mov
or
pop
adc
mov
adcl
adc
pushf
dec
adcl
xor
ja
setno
rorb
adc
movsb
inc
cwtl
test
aam
push
xchg
sub
insl
inc
push
dec
mov
and
dec
rcll
lret
pop
sub
ret
adc
mov
inc
scas
das
mov
adc
push
dec
xchg
mov
mov
adc
xchg
add
lds
mov
dec
cmp
sbb
mov
adc
dec
out
xchg
dec
and
inc
mov
fs
fldenv
repz
ds
stos
adc
and
dec
push
xchg
shlb
inc
mulb
insb
adc
mov
popf
mov
mov
dec
ficoml
cmpb
adc
xchg
xchg
in
sub
mov
dec
ljmp
loop
fs
xchg
ja
adc
stos
lret
dec
cmp
push
add
lret
mov
hlt
js
push
pop
adc
push
xor
ss
inc
fdivl
adc
xchg
mov
add
add
inc
hlt
xor
fidivs
imul
dec
out
push
test
popa
sbb
inc
or
fs
cmp
inc
cltd
enter
popa
dec
and
mov
int3
jnp
adc
sub
pop
sbb
pop
test
fsub
jo
aaa
rol
add
or
lods
jno
mov
sub
mov
data16
adc
or
gs
mov
adc
js
jo
dec
arpl
or
or
mov
mov
loope
mov
icebp
sbb
lock
fmull
mov
jo
sbb
inc
mov
jl
int3
push
dec
and
int3
imul
and
and
sbb
or
adc
sbb
jns
sbb
fisubrs
shlb
or
push
mov
aaa
xor
js
dec
fdivrl
adc
shlb
dec
cld
test
adc
dec
or
je
test
cwtl
or
and
shrb
cld
xor
enter
mov
inc
cld
pop
mov
adc
sbb
cltd
mov
test
cmpsb
mov
stc
inc
leave
jl
mov
adc
jns
dec
negl
inc
jl
data16
adc
xor
inc
int3
sbb
sub
loope
mov
sbb
push
pushf
hlt
sbb
and
xor
cld
xor
subl
cmp
loope
xor
sbb
xor
in
mov
movsl
call
inc
push
mov
and
and
loopne
shlb
int3
and
jns
leave
pop
les
push
mov
loopne
add
cld
push
fs
fs
int3
inc
adc
int3
int3
imul
cld
pop
pop
mov
or
sub
cmp
or
pop
fs
je
pop
fwait
adc
nop
movsb
mov
push
sub
enter
sub
adc
aaa
and
int3
mov
int3
or
cmp
test
nop
pop
int3
sub
jl
sbb
inc
lock
in
mov
test
rcrb
xchg
mov
inc
or
ret
dec
or
or
jns
and
cltd
xor
sub
js
fsubrs
out
dec
sub
xor
shrb
inc
xor
mov
and
sbb
push
sti
xor
test
jns
xor
sub
cmp
xor
in
data16
adc
push
push
and
mov
pop
clc
xchg
dec
pushl
movsb
cwtl
js
test
dec
push
movsb
shl
int3
inc
mov
pop
mov
cltd
push
pushf
imul
mov
jns
dec
add
cltd
adc
xchg
sbb
cwtl
cwtl
sbb
shll
imul
and
dec
sbb
lock
xchg
mov
movsb
cltd
les
sbb
cmp
cmpsb
aam
adc
cmp
lret
lods
xchg
xchg
dec
mov
and
xor
fisttps
mov
xor
mov
push
or
rol
add
not
stc
cmc
sub
pushf
call
in
outsb
adc
pushf
adc
cmp
and
dec
das
sbb
inc
sbb
lea
les
mov
test
jl
jp
push
outsl
jl
sub
orb
jle
cmp
jmp
jecxz
pop
data16
push
dec
sbb
cmpsb
dec
fildl
cmp
stos
lret
stos
dec
xor
dec
lods
xchg
arpl
mov
push
mov
push
cmp
push
sbb
mov
inc
or
push
jg
lods
das
repnz
jb
add
adc
jno
mov
loop
and
ss
xcrypt-ctr
cmpsl
popf
push
outsl
std
out
push
js
inc
push
cmc
jg
inc
inc
cld
fisttps
sub
out
test
ljmp
inc
loope
jb
dec
daa
cmc
aas
mov
xchg
pop
loope
cltd
sbb
and
cld
mov
in
mov
arpl
jmp
adc
and
inc
cli
test
and
data16
cli
addr16
sti
dec
sub
sub
mov
cmp
maxps
ja
and
push
jnp
imul
mov
xchg
enter
in
mov
inc
xor
ficompl
dec
add
daa
jnp
mov
mov
add
push
imul
mov
mov
push
insl
out
and
into
add
xchg
sbb
add
or
xor
lret
mov
inc
scas
ror
sbb
push
jle
jmp
dec
jo
rcrl
mov
add
cmp
xchg
imul
xchg
nop
mov
imul
leave
mov
and
in
adc
movsl
cmp
xlat
out
and
cmp
out
and
pop
cli
mov
mov
lods
add
inc
sub
push
push
leave
xor
divl
mov
loop
femms
push
mov
xchg
xor
or
mov
and
ds
in
push
testb
cmp
xor
imul
scas
orl
fiaddl
xchg
imul
aaa
and
xor
cmc
mov
push
or
sub
mov
pop
sarb
dec
push
mov
les
inc
pusha
lods
shl
cmc
not
neg
not
inc
sbb
neg
pushf
pusha
inc
setp
pushf
jmp
jmp
mov
ljmp
lcall
and
daa
xchg
push
loope
cmp
repnz
out
and
and
sahf
add
push
pop
mov
pop
add
divb
jns
ljmp
into
push
test
pop
adc
dec
repz
aad
jbe
mov
jo
sub
mov
test
sbb
imul
lock
mov
sub
mov
pushf
bt
bt
stc
cmpb
call
pusha
movsl
por
out
aas
dec
sbb
call
mov
shr
clc
fidivs
or
mov
jecxz
jmp
dec
ja
test
sub
mov
push
xor
push
sub
lea
stos
mov
pusha
fnstsw
cmp
jl
cwtl
leave
movsb
pop
pop
stos
adc
sub
in
mov
xor
out
aaa
scas
arpl
mov
dec
aad
jnp
sub
inc
and
mov
push
jecxz
or
jnp
bound
mov
mov
and
mov
out
int3
xchg
mov
xchg
xchg
arpl
cmp
cs
mov
rolb
cmc
arpl
loopne
push
in
outsl
shrb
jnp
aam
sbb
ljmp
call
bound
popf
test
fldenv
mov
loop
mov
push
stos
movb
arpl
or
int3
rorl
subl
mov
dec
mov
jmp
les
cwtl
inc
loopne
imul
scas
mov
lahf
adc
mov
push
pop
into
mov
outsb
les
mov
adcl
pop
mov
popa
sub
data16
xor
ficomps
add
mov
inc
push
dec
sub
call
ret
movsb
push
adc
dec
mov
pop
loop
repnz
lds
stos
pusha
pop
mov
scas
idivl
xchg
orl
into
dec
inc
sbb
lcall
adc
lcall
sub
dec
jge
outsl
cs
or
mov
pushf
xchg
lds
jo
mov
loope
sub
sbb
pop
shr
mov
or
sub
outsb
lock
pop
test
out
xchg
dec
je
inc
sti
int
and
jge
push
mov
inc
in
sub
jns
xchg
mov
ja
mov
xor
cli
imul
movb
es
lahf
jp
dec
and
push
enter
aaa
out
push
or
out
push
ljmp
fs
jns
inc
push
iret
imul
pop
dec
mov
dec
mov
les
push
dec
xorl
mov
jg
stc
pushf
mov
add
mov
xor
mov
cmp
xor
outsl
adc
mov
cltd
or
lahf
push
inc
dec
loopne
lock
add
loope
fistpll
or
add
inc
mov
les
cmpsb
jmp
push
gs
stc
or
rcrl
inc
clc
push
adc
sub
xchg
addr16
lcall
mov
jge
jmp
call
cmpsl
jns
ljmp
inc
lock
in
sahf
addr16
in
lock
sbb
dec
mov
mov
pop
lret
dec
push
sbb
test
ja
nop
adc
dec
cmpsl
je
sub
stos
and
test
test
and
imul
mov
mov
inc
mov
or
leave
or
and
xchg
pop
push
dec
sbb
andb
sti
ja
aaa
jno
iret
hlt
or
into
jae
les
imulb
push
iret
mov
mov
mov
sub
movl
and
ret
mov
bsf
rol
mov
jmp
mov
ret
lcall
sub
pop
mov
cmp
lods
or
je
cmc
xchg
imul
and
push
hlt
ljmp
mov
sarl
sbb
xchg
outsb
lret
cmp
pop
lahf
enter
mov
add
pop
scas
push
mov
jno
push
stos
je
jecxz
les
mov
data16
xchg
out
cwtl
sahf
pop
mov
in
loop
mov
jl
dec
add
and
and
sbb
mov
cmp
mov
pop
pop
dec
mov
dec
test
add
inc
cmpsb
popa
bound
cmp
push
repz
mov
push
or
mov
mov
inc
sahf
sbb
mov
sti
stc
push
and
fwait
lcall
mov
stc
outsb
call
movsl
out
inc
in
xor
xchg
mov
jnp
cmp
subl
int3
dec
xorl
jnp
stos
cli
sbb
jno
mov
xchg
xchg
jne
lahf
into
xor
sbb
pop
cltd
cmp
popa
add
push
mov
pop
inc
jno
mov
fisubl
idivb
add
cmpsl
cmp
addl
sbb
pop
inc
data16
lods
push
fmull
scas
adc
and
in
arpl
pop
push
push
call
cmp
cmp
inc
jne
in
idiv
xor
jo
testl
repnz
dec
pop
fsubr
sub
jp
pop
scas
mov
pop
cmp
ffree
popa
mov
sub
add
out
xchg
xchg
test
jo
push
lock
mov
mov
pop
jge
mov
lds
flds
fidivrs
mov
mov
ret
xchg
test
imul
addr16
xchg
mov
inc
cmp
inc
xchg
jl
ret
pushf
arpl
dec
scas
ret
push
lret
es
pushl
jl
cltd
jle
mov
outsl
mov
lahf
into
ss
mov
out
out
jl
arpl
in
or
push
or
sub
dec
test
adc
cmc
mov
stc
push
jle
movsbl
fadd
xchg
add
xchg
pushf
sbb
xor
leave
xchg
xchg
and
add
loope
jns
and
mov
es
addr16
push
std
ja
mov
arpl
sub
test
out
mov
mov
xchg
aad
leave
out
or
push
hlt
xor
mov
pop
add
les
inc
sbb
mov
mov
jbe
and
push
mov
test
je
push
dec
cmp
movsb
and
sbb
mov
test
jb
arpl
adc
push
rorb
jl
loop,pn
movsb
xchg
mov
or
xlat
lea
sbb
mov
iret
dec
paddw
adc
xchg
int3
mov
sub
or
fistl
pop
repz
adc
bound
dec
idivl
mov
push
pusha
dec
pushl
jmp
mull
repnz
test
or
lds
daa
gs
sti
loopne
cmpsb
inc
addr16
dec
fsubr
sub
cmp
dec
adc
fdivrl
inc
xlat
and
or
sub
pop
dec
nop
iret
mov
cltd
and
mov
in
sarl
int3
xchg
push
movsl
xor
xchg
in
jp
notl
cltd
mov
cmp
cmc
add
jmp
outsl
insb
gs
jne
xor
cs
insb
add
ljmp
mov
outsl
push
sub
movsl
in
cmp
mov
ror
data16
adc
das
add
cmpsb
inc
std
loop
divb
add
movsb
pop
xor
pop
pusha
sub
andb
or
cld
ljmp
dec
lods
ret
cmp
aaa
mov
xchg
inc
das
dec
inc
mov
cmp
mov
cmp
repnz
sub
int
andb
lahf
mov
int
out
mov
ret
addb
push
decl
negl
movb
lea
jae
test
cmp
call
not
lea
mov
stc
mov
call
pushf
mov
not
jmp
jmp
in
loop
test
cmp
inc
pop
xor
leave
sbb
rclb
pop
mov
xchg
or
add
pop
cmc
pop
xchg
fcomps
xchg
cmp
xchg
test
sub
addr16
mov
mov
notl
in
je
int3
push
test
stos
push
js
inc
ljmp
sbb
call
ja
fmulp
xor
bound
mov
pusha
hlt
das
ja
shl
xor
jecxz
out
aad
adc
enter
push
into
mov
aas
lods
lock
xchg
sahf
cmp
in
movsb
cmp
adc
imulb
dec
mov
push
pop
lcall
inc
sbb
add
scas
sbb
ljmp
jecxz
in
fstpt
mov
mov
fsub
xchg
add
scas
mov
push
in
mov
les
pop
jl
movsl
cwtl
fwait
dec
cmp
sub
adc
sbb
mov
adc
std
dec
cmpsl
test
in
cmp
xchg
les
aad
in
bound
repz
in
stc
jmp
sbb
scas
xchg
fiaddl
inc
xor
pop
lahf
adc
cmp
fdiv
out
outsl
sub
sbb
cmp
adcl
mov
cmp
rolb
sti
js
orb
mov
js
sub
xchg
mov
pop
lret
dec
out
and
pop
ret
xchg
adc
mov
loopne
jnp
push
mov
cmc
dec
popf
xchg
addr16
out
and
int3
ficoms
js
mov
test
int
pop
imul
xlat
mov
sbb
lahf
add
mov
in
sbb
pushf
cmp
nop
into
dec
sub
xchg
cmp
ds
fwait
pop
cs
xchg
dec
sbb
sbb
in
stos
mov
sbb
pop
dec
mov
daa
jl
mov
xor
mov
inc
out
test
pop
or
loop
stos
or
xchg
pop
lea
push
cmp
cli
dec
lock
sbb
jle
adc
lcall
ds
and
je
scas
pop
jle
leave
scas
aas
xchg
or
mov
stc
and
mov
push
imull
sub
push
rcrb
jg
mov
outsb
push
fldcw
aas
arpl
cmp
inc
add
pop
clc
stos
out
scas
idiv
arpl
cmp
jge
xchg
adc
or
lea
dec
jp
les
mov
fistpl
mov
pop
and
fidivrl
push
inc
in
ret
inc
adc
mov
popa
sub
pop
fwait
clc
dec
mov
test
ret
xor
cmpsl
xchg
divb
dec
mov
sti
cmp
jmp
movb
cmp
lahf
into
cmp
mov
cld
popf
lret
lods
and
adc
mov
lcall
add
mov
rol
fcomps
inc
push
call
mov
test
push
add
jns
sti
mov
ret
pusha
xchg
sbb
xor
jl
inc
cmp
in
inc
and
inc
adc
cmp
sub
fstpl
aaa
lock
mov
sarb
sbb
cwtl
pop
or
loop
mov
dec
adc
pminsw
testl
dec
and
sub
pushf
and
xor
adc
inc
scas
and
fs
mov
call
and
jae
cs
dec
cmpsb
outsl
jno
dec
clc
subl
push
clc
icebp
push
daa
popa
cmp
nop
loopne
xor
sub
mov
xor
adc
mulb
cltd
mov
and
cltd
pop
xor
xchg
fwait
leave
mov
imul
lods
push
out
jecxz
insb
jae
push
jp
call
cwtl
mov
push
mov
pop
pusha
xor
psubsw
cltd
mov
dec
aam
add
mov
dec
out
movsb
cli
inc
inc
popf
es
pop
int3
ja
jp
mov
and
pop
push
sub
mov
xlat
std
es
jge
stos
cmp
mov
fucomp
xchg
ret
outsb
xor
lahf
pop
and
xchg
rclb
sub
sub
or
fcmovu
push
lret
adcl
fistps
jo
xchg
mov
jo
hlt
iret
mov
sti
lret
out
sub
lock
int
mov
test
les
or
jbe
cmpsb
popf
and
cmp
adc
mov
cmp
sahf
push
lds
cmp
mov
jmp
lods
inc
or
jge
xchg
jle
mov
xchg
dec
rcrl
adc
inc
dec
jae
inc
mov
in
clc
dec
sub
test
inc
out
ficomps
xor
mov
inc
add
test
dec
pop
and
push
pop
push
jnp
pop
lods
pop
notl
sub
ret
sti
mov
loopne
out
test
mov
and
out
cld
ss
dec
mov
imul
jle
dec
xchg
arpl
ret
mov
jno
push
ja
sub
out
add
cmp
inc
addb
pop
fiaddl
test
in
mov
dec
mov
dec
mov
lgs
fcoml
out
shll
or
sbb
pushf
call
arpl
arpl
xor
fs
insb
add
sub
bt
cmp
pushl
pusha
cmp
call
jo
inc
pop
xchg
addr16
inc
adc
lret
pop
orl
sbb
mov
cltd
or
push
or
mov
jp
xlat
dec
xchg
nop
out
xchg
mov
pushl
inc
mov
inc
mov
mov
leave
mov
stos
adc
jg
sti
sbb
repz
inc
and
nop
std
mov
dec
push
cmp
add
dec
jg
xlat
push
xor
lods
leave
ja
xchg
pop
or
jbe
cs
sbb
pop
div
jl
fimuls
cmp
xchg
out
sub
enter
cltd
xor
and
push
call
mov
sub
test
adc
mov
stos
jbe
dec
sub
mov
mov
lret
xor
shl
cmp
or
movsl
mov
nop
gs
cmc
fdiv
or
mov
inc
lcall
mov
in
push
xchg
scas
shll
test
punpcklbw
mov
cmp
mov
sub
fs
mov
cmp
ja
pop
cltd
inc
fidivrl
pop
rcll
into
pop
push
cmp
mov
xchg
enter
inc
out
shll
sub
ret
in
xchg
inc
mov
adc
js
sub
fisttpll
pop
add
lahf
mov
test
mov
adc
inc
cltd
mov
fwait
mov
xlat
lret
xchg
mov
aam
test
stc
test
jg
sub
dec
mov
inc
xlat
outsb
pop
mov
cmpsb
adc
lds
mov
dec
iret
pusha
adc
mov
lock
pop
push
pop
sub
sbb
jbe
out
mov
mov
scas
mov
jp
in
push
ljmp
psraw
push
add
add
in
sbb
out
cmpsl
xor
jno
ja
scas
add
int3
aaa
sbb
mov
xlat
stos
push
rclb
loop
dec
pop
cld
into
movsb
dec
or
pop
or
loope
in
stc
test
jg
sub
dec
push
mov
jb,pn
dec
out
out
lods
pop
dec
pop
mov
ret
pop
or
dec
fisubl
add
cmp
dec
mov
mov
and
lcall
adc
loope
pop
ret
or
push
inc
xchg
in
or
pop
lea
adc
mov
cmpl
xchg
xchg
inc
mov
push
adc
stc
vpmacsdd
das
shlb
clc
scas
das
pop
cmc
or
jmp
inc
push
push
popf
sub
adc
mov
scas
xor
in
xchg
dec
inc
adc
xor
mov
sub
out
sbb
stc
xor
adc
loop
bound
or
xor
add
mov
cld
aaa
mov
test
je
xorb
sub
xchg
test
push
stc
or
mov
pushf
xchg
imul
and
fildl
aaa
pop
cmp
fcoms
sub
or
adc
dec
leave
rep
mov
mov
xchg
pop
lods
sub
mov
daa
inc
mov
mov
cmp
cli
pop
dec
mov
mov
sbb
jns
aad
je
adc
gs
test
add
xor
aad
icebp
mov
or
xchg
sub
mov
out
mov
out
flds
mov
or
dec
outsl
cmp
in
lock
loop
scas
pop
and
fldl
xor
out
add
test
adc
outsl
dec
test
jecxz
xor
es
push
push
mov
adc
imul
and
inc
movsb
rclb
insl
pop
mov
jb
push
pop
mov
lret
stos
inc
das
jb
xor
loopne
lahf
pop
or
mov
addr16
xchg
cltd
test
sub
insl
stos
add
xor
pop
cmpsb
mov
stos
lret
or
pop
dec
ret
mov
inc
mov
or
add
cmpsl
pop
int
stc
pop
sub
lods
mov
test
cmp
inc
roll
repnz
or
idivl
cmpsl
add
dec
rol
push
mov
movsl
push
xor
pop
test
xchg
pop
mov
sbb
scas
cmpb
xor
sahf
frstor
clc
jge
popl
dec
les
or
out
leave
push
std
mov
sbb
pushf
xor
sub
inc
cmp
mov
push
fildll
add
mov
aas
adc
jbe
mov
test
repnz
lcall
mov
scas
bnd
cmp
inc
sarb
pop
mov
sbbb
sbb
mov
mov
sti
lods
cmp
fiaddl
mov
rorb
enter
addr16
ljmp
cmp
scas
and
aad
cmpsb
scas
cmc
or
inc
xchg
mov
imul
push
xchg
ror
and
lods
or
mov
xor
fadds
nop
mov
popa
cmp
pop
xor
push
pop
ja
fildl
cltd
addr16
inc
or
xor
sbb
add
cld
sbb
pop
cmp
insb
xor
xchg
cmp
les
sub
xchg
mov
jae
scas
cli
xlat
mov
in
jae
sti
mov
call
movsb
mov
push
cmpsl
pop
into
dec
clc
mov
sbb
popa
xchg
sub
dec
aad
push
insb
pusha
mov
xchg
mov
sbb
xchg
dec
or
shll
xor
out
mov
in
shll
out
fs
pop
jg
inc
int3
sbb
sarb
xlat
push
xor
test
test
and
rorb
stc
xchg
stos
pusha
loop
cmp
iret
popf
inc
push
adc
sub
sbb
xlat
lds
inc
adc
lock
jmp
xor
cwtl
cmp
jl
lock
jb
inc
popa
xchg
stc
lahf
lds
dec
fsubs
mov
fs
shlb
repnz
leave
outsl
iret
lds
mov
mov
in
mov
cli
dec
iret
add
xchg
or
xor
or
je
sbb
lds
sti
mov
push
arpl
add
imul
in
and
imul
test
pop
iret
movsl
jbe
sti
addr16
mov
push
inc
adc
dec
cmp
sub
pushf
push
inc
mov
enter
xchg
test
jle
int
or
dec
sarl
hlt
cli
test
adc
cmp
call
ja
adc
jno
arpl
lahf
cmpsb
push
das
add
pushf
and
push
mov
sbb
jg
lret
in
mov
xchg
mov
out
shrl
sub
ljmp
test
cmovne
rcrl
fbstp
cmpsl
sbb
pop
mov
inc
or
js
lea
test
mov
dec
lcall
mov
pop
or
test
push
shlb
leave
sbb
rolb
dec
inc
orl
nop
xchg
frstpm(287
popf
fidivl
pop
cmp
xchg
loope
icebp
std
push
leave
xorl
push
xchg
xchg
cwtl
outsl
out
sbb
fsubrl
movsb
outsb
jbe
pop
mov
bswap
mov
mov
adc
cmp
ret
push
popf
mov
xor
push
cmpl
clc
xchg
ret
stos
xor
dec
dec
adc
pop
dec
jg
cltd
pop
and
jp
add
test
popl
imull
jnp
ret
fstpl
pushf
xchg
cmp
rolb
cmp
pop
mov
mov
ja
je
in
xor
mov
jne
mov
cmp
and
hlt
pop
gs
mov
enter
sub
roll
scas
lahf
mov
mov
inc
sbb
or
pop
leave
xchg
cli
pushf
lret
inc
pop
sub
mov
in
inc
sub
mov
dec
test
es
xor
inc
aad
push
sbb
and
adc
jae
scas
dec
xchg
xchg
xor
jle
out
outsb
jl
addr16
push
dec
in
jo
jg
mov
fwait
push
stc
jle
fnstsw
jmp
sub
test
inc
xchg
push
inc
gs
push
cmp
dec
out
pop
add
push
inc
in
sbb
add
scas
sahf
test
jge
push
pop
push
add
in
insb
addr16
pop
test
push
popa
pop
rcll
arpl
movsb
push
jo
lret
dec
inc
mov
in
adc
mov
pop
into
je
cwtl
lret
out
adc
push
or
sbb
xchg
bound
mov
loopne
ljmp
jae
addb
sarl
js
dec
pop
fimuls
jno
dec
xchg
xchg
pop
xor
imul
cltd
and
add
into
in
fsts
lods
jp
sub
outsl
lods
add
and
not
mull
cli
lds
aaa
test
jg
mov
js
cltd
lock
out
mov
test
lahf
adc
pop
jae
popa
xlat
outsl
mov
jg
push
xor
addr16
add
mov
movntps
inc
sub
in
pop
add
mov
rorl
or
cmpsl
dec
in
sbb
or
gs
hlt
daa
rorb
pop
mov
imul
int
stc
jp
or
jmp
flds
rol
dec
dec
out
xchg
pop
push
fwait
movsl
fldt
dec
adc
inc
sub
icebp
mov
lods
sub
sub
dec
push
pop
fs
dec
sbb
xor
inc
adc
mov
xchg
dec
aas
lret
adc
popf
out
insb
mov
test
movsl
popf
popa
xor
ret
insl
add
cmp
mov
jge
repnz
dec
xchg
push
loopne
dec
ja
lods
dec
or
cmp
sub
lea
xchg
cs
push
jmp
lea
cs
aas
xchg
mov
lahf
aam
dec
lahf
mov
dec
into
jns
and
pop
mov
imul
arpl
and
ja
das
sbb
or
mov
sbb
lods
ret
jb
xchg
das
xchg
sbb
mov
inc
xchg
xor
js
dec
sub
ja
xchg
xor
pop
sbb
js
jnp
xchg
lds
inc
aad
sti
paddusw
jbe
and
inc
test
xor
inc
lahf
jae
test
aad
stos
inc
mov
adc
or
inc
xchg
fwait
mov
mov
add
fs
adc
mov
sub
daa
ret
jmp
push
lcall
popa
mov
sbb
movsl
jmp
sahf
fldt
pop
jl
xor
cmp
sbb
push
sbb
sub
imul
jge
mov
outsb
pop
mov
out
jae
pop
push
pop
pushl
jp
dec
xor
lods
sbb
shll
cmp
adc
loop
push
popl
sbb
adc
jns
lret
mov
mov
mov
les
add
in
xor
and
mov
call
scas
insb
pop
mov
outsb
aaa
and
push
jo
fnstcw
mov
daa
adc
stc
scas
sbb
xchg
pop
jmp
inc
mov
sbb
shrb
and
lcall
inc
ss
cmp
push
jbe
dec
mov
fwait
in
xor
xlat
nop
sub
lods
out
cmp
cmp
mov
paddb
subb
aad
pop
or
xor
out
sbb
xchg
sbb
adc
adcb
pop
cwtl
dec
movsl
mov
aas
faddl
adc
stc
nop
jle
lock
mov
and
nop
push
pop
pop
adc
ljmp
ret
ljmp
xor
jne
in
bound
scas
insb
pop
sarl
stos
mov
adc
js
inc
push
fsubrp
cmpsb
jne
fcmove
xor
rorl
imull
std
sub
fcomp
stc
cmp
push
cmp
lcall
dec
dec
addr16
pop
jbe
add
push
aam
imul
divl
and
and
int
xor
das
movsl
mov
sbb
lods
push
jp
stos
cmc
inc
lock
bound
mov
pop
mov
jg
sbb
or
pop
out
mov
adc
jecxz
dec
clc
das
jo
addb
orb
fstpt
pushf
shlb
insb
ds
mov
mov
mov
adc
pop
test
lahf
ss
insb
out
inc
inc
xchg
jno
and
adc
adc
daa
xor
pop
pop
adc
lods
pop
jl
adc
xor
out
mov
test
fstpl
pop
sub
and
jp
inc
mov
jnp
ret
adc
test
pop
dec
das
xchg
sub
inc
sahf
mov
or
outsl
movsl
gs
sbb
cmpl
lret
xor
shlb
lret
add
adc
out
popa
popf
out
mov
cmp
jle
lock
out
insb
scas
into
dec
clc
pop
imul
cmp
and
lret
xchg
pop
jle
lock
cli
cmpsl
jl
add
jae
in
icebp
inc
dec
xchg
lock
lock
xor
jb
adc
push
adc
outsb
lods
xlat
sti
movsb
push
fld
pushf
iret
cltd
bsf
nop
jns
adc
inc
cmpl
ljmp
cltd
scas
fs
loopne
lea
lds
int3
ss
cmp
enter
in
bound
sub
aaa
lock
sbbb
push
add
inc
mov
xor
mov
mov
add
ret
mov
aad
pop
jp
xchg
jg
int
cmpsb
rcrb
aam
inc
aad
pop
ret
inc
pusha
fldcw
mov
js
push
add
dec
bound
adc
cltd
sub
repnz
pop
push
aaa
add
xor
pop
inc
sbb
and
add
inc
push
mov
xchg
movsl
push
mov
fidivs
rorl
push
sbbl
pop
push
inc
xchg
mov
loop
divl
int3
rcrb
aas
mov
xchg
xchg
or
nop
shr
mov
popa
add
xchg
ljmp
daa
cmp
in
xor
stos
adc
insl
mov
dec
cmp
out
fdivrl
lock
cmp
pop
das
in
xchg
decb
xchg
lock
mov
jns
fisubs
jno
stos
out
xor
test
mov
in
test
inc
les
and
arpl
push
push
call
out
movsb
icebp
and
sbb
lret
lods
xor
xchg
in
jle
push
test
jg
sbb
cmp
mov
movmskps
mov
add
cld
jl
adc
lcall
push
fxch
dec
cld
dec
xor
xor
lods
fwait
or
xor
repz
xchg
jp
and
hlt
out
xchg
outsl
xchg
shrl
sbb
or
or
add
stos
push
mov
pop
and
insb
ror
cmp
scas
and
sti
in
dec
movsb
xchg
dec
mov
cmp
lea
cwtl
mov
push
inc
push
lds
or
lock
stos
shrl
push
mov
enter
push
cld
inc
xchg
cwtl
addl
add
ret
testb
andl
inc
dec
fadds
push
pop
mov
dec
mov
inc
cld
je
out
inc
lods
xchg
mov
or
js
aas
inc
mov
fcoms
jge
xchg
xorb
movsb
mov
xchg
mov
and
adc
xor
sarb
mov
idivl
test
hlt
push
mov
dec
sbb
les
loope
adc
xchg
icebp
xchg
jne
mov
pop
icebp
push
insl
cmp
addr16
mov
pop
cmp
mov
hlt
pop
push
mov
sub
jbe
inc
test
adc
mov
rorb
mov
js
rorb
jl
aam
fcoml
sub
sub
mov
ja
fstps
aaa
pop
inc
and
insb
cmp
sub
popa
cmp
scas
test
stos
lret
xchg
dec
add
mov
ds
inc
jmp
xchg
test
xor
dec
xchg
shl
cmp
mov
mov
mov
stos
ds
push
rorl
lahf
xorb
cs
ss
pop
mov
sub
and
xchg
repz
inc
out
stos
mov
outsb
lret
adc
jne
outsl
dec
sbb
jg
mov
imul
nop
ret
push
in
pop
lret
mov
sahf
in
pop
add
mov
jnp
aaa
and
xor
cmpsb
adc
repz
pusha
lods
rorl
cmpsb
jne
dec
xor
clc
test
jg
jnp
mov
into
sub
mov
push
lods
fwait
adc
mov
scas
in
pop
pop
pop
iret
loop
inc
std
push
leave
xchg
fcmovnb
lock
roll
mov
sub
xorl
jmp
sar
pop
ja
push
arpl
sarl
xchg
mov
cmpb
dec
rclb
aas
daa
or
test
enter
mov
cs
push
leave
je
sbb
in
ror
enter
push
add
aaa
enter
cmpb
ret
cmp
xor
or
sub
sub
punpcklbw
cmp
mov
subl
mov
lcall
pop
lahf
stos
stos
mov
xchg
pop
jmp
iret
dec
jns
or
dec
stc
mov
sub
das
stc
cmp
out
jmp
rorb
dec
add
sub
inc
adc
jnp
aad
push
and
push
sbb
or
cmp
mulb
adc
mov
sbb
push
push
in
sbb
push
cwtl
in
fsubrs
push
pop
mov
int
mov
xor
psubsw
and
mov
or
mov
mov
in
pushf
push
into
lods
jb
push
cmp
lcall
xchg
xchg
cs
sbb
andb
ret
test
push
jnp
mov
jg
retw
cmp
filds
cs
lods
not
inc
repnz
sub
mov
std
jg
mov
and
inc
icebp
stos
cltd
scas
shll
int3
call
jne
or
inc
pop
xor
inc
aad
mov
adc
or
adc
dec
gs
sbb
bound
fcmovnu
cmp
mov
mov
dec
fldl
lods
push
jb
outsb
scas
mov
sarb
adc
and
dec
ss
pop
add
insb
cld
lret
add
outsb
icebp
loop
jp
pop
lock
les
adc
ljmp
icebp
fbstp
jae
mov
dec
rol
mov
push
inc
aad
pop
jo
leave
xchg
and
test
sti
jnp
ds
in
mov
add
mov
cmp
jo
or
or
push
jg
push
add
pop
pop
mov
lret
jp
in
shrb
pop
mov
unpckhps
and
cmp
pushf
jg
int
jns
leave
fs
push
cli
pop
out
lahf
dec
jae
push
stos
jno
les
ret
xchg
sub
mul
cmp
lock
mov
notl
scas
inc
xor
xor
out
or
push
cltd
mov
mov
jl
in
addr16
dec
jge
loop
ja
scas
fs
jo
imul
jle
shll
daa
pop
ss
fcmove
push
adc
jp
push
sbb
into
out
fildll
xor
sbb
sub
pop
shlb
stos
sub
push
popa
imul
inc
mov
je
jle
gs
loopne
hlt
nop
je
das
sub
push
sbb
cs
popa
pop
xor
popl
repz
insl
cmpb
mov
cmp
out
pop
cmpsl
je
and
dec
scas
push
inc
popa
dec
rol
cli
mov
subl
scas
sub
jno
out
or
lock
int3
sub
or
aam
and
mov
push
adc
jmp
imul
orb
mov
insb
sbb
inc
ret
aad
out
add
int3
sub
insb
cmc
or
fwait
push
arpl
pop
dec
pop
xchg
cmc
or
jle
gs
pop
mov
cmp
pushf
jg
add
int
cld
cli
std
xchg
aad
data16
push
lret
pop
jb
xor
ds
mov
pusha
test
xchg
dec
mov
out
ss
idivl
xchg
jno
adc
lds
loop
or
data16
rclb
pop
dec
shll
scas
loopne
mov
xorl
push
lcall
jmp
jo
mov
xchg
leave
or
aad
in
pop
jb
sub
pop
aaa
dec
ret
in
inc
jle
mov
xchg
adc
mov
sub
push
jb
dec
add
push
sub
leave
and
sbb
rorl
xchg
test
cmpl
aam
mov
mov
pop
xor
rorl
sbbb
add
icebp
xlat
stos
scas
add
jle
out
sub
push
add
push
xchg
aaa
nop
faddl
mov
stos
mov
bound
les
xchg
xor
insl
out
mov
cmp
xchg
or
and
sti
jno
push
add
add
or
movsl
fsubrp
jl
fstl
cltd
cmp
in
cltd
clc
mov
xchg
mov
loop
adc
or
fcoms
fldcw
cwtl
fs
stc
and
mov
sub
ds
adcl
or
mov
mov
out
jbe
sbb
lret
add
jbe
iret
sub
sti
in
movsb
xor
jge
shlb
jle
int3
lahf
mov
imul
xor
pop
adc
mov
push
cltd
inc
stos
pop
mov
inc
imul
in
inc
idivl
subl
dec
mov
inc
mov
cs
sti
mov
push
push
loop
aad
mov
movsl
decb
sarl
enter
cs
mov
xchg
or
xchg
loopne
mov
pop
mov
or
add
cmp
adc
pop
out
jbe
mov
addr16
inc
xlat
cmpb
push
sbb
es
sahf
loop
movsb
lds
lret
sbb
fcoml
sbb
lods
js
mov
or
rcl
adc
loop
rcll
add
adc
dec
pop
loope
lahf
and
and
ljmp
lahf
test
mov
mov
xchg
pop
mov
or
mov
xor
rorl
push
cwtl
cmc
imul
add
lds
inc
inc
cli
or
insb
mov
dec
mov
in
test
jo
sub
test
loope
movl
lods
ds
jmp
negl
mov
test
mov
js
jle
and
mov
xlat
ret
cmpsb
test
in
pop
ret
leave
stos
sbb
fisubrs
cmpsb
out
sbb
jo
loope
mov
lahf
adc
test
dec
fstps
xchg
pop
or
ss
mov
shll
out
cmp
mov
adc
push
inc
jmp
jp
and
std
sub
outsb
add
push
add
mov
pop
xchg
scas
fstpl
faddp
inc
mov
mov
push
ljmp
dec
and
push
std
fsubrs
adc
cmp
jg
jns
scas
inc
stos
lret
cmpsb
sub
push
mov
cmc
xchg
orb
pop
or
mov
mov
sbb
pop
push
mov
aam
pop
das
aad
inc
enter
adcb
aaa
xchg
cmc
cmp
sub
call
dec
mov
inc
pop
icebp
jmp
add
adc
jecxz
xor
outsb
pushf
jl
xor
mov
ljmp
lods
test
xor
push
adc
xchg
push
adc
enter
ja
roll
movb
enter
sbb
enter
iret
xor
inc
and
mov
dec
popa
call
ljmp
mov
stc
js
or
movsb
iret
sarb
sahf
leave
push
xchg
pop
xchg
mov
insl
jo
imul
sub
sbb
push
sbb
mov
xor
cltd
and
decl
out
mov
loope
and
mov
mov
out
out
and
in
je
enter
test
shr
or
dec
push
stc
dec
xchg
pusha
mov
out
push
stos
test
shrb
mov
cmp
sub
outsl
push
push
sub
xchg
aas
mov
xor
pushf
xchg
jno
sarl
push
inc
or
popa
add
in
sbb
and
sub
jnp
mov
stc
or
sub
inc
xor
mov
fcomps
pusha
outsb
cld
leave
loop
ljmp
inc
pop
mov
stos
and
sbb
push
idiv
jnp
mov
addl
andb
mov
mov
mov
movl
jecxz
sub
ret
rclb
xor
or
xchg
xor
mov
js
cmp
fiadds
mov
fwait
cmpsb
pop
mov
xchg
dec
push
faddp
or
add
jnp
test
fcomps
mov
pushf
inc
idivl
pusha
mov
pop
or
push
pop
pop
into
lahf
sbbl
popa
subb
add
dec
cmp
shlb
popa
sti
mov
pop
inc
ret
mov
inc
xor
push
pop
rol
ss
shr
inc
push
jmp
mov
dec
mov
mov
jg
pop
pushf
sbb
xor
push
fwait
sbb
xor
data16
lods
push
mov
shrb
dec
pop
mov
enter
dec
lods
or
add
lock
dec
sub
dec
movsl
or
movsb
in
inc
sub
lods
flds
sbb
fcmovnbe
mov
mov
add
cmp
scas
daa
stc
pop
stos
xchg
jns
fsts
dec
int
inc
je
push
push
mov
add
adc
cmp
rcrl
je
lret
jno
movsl
andb
lahf
out
inc
cmp
xchg
dec
je
outsl
mov
add
pop
mull
mov
dec
mov
out
or
fiaddl
dec
mov
push
nop
dec
dec
add
mov
divb
xchg
fwait
loop
dec
lret
aaa
add
loop
and
adc
fadds
or
sarl
in
fisubl
pop
leave
sbb
pop
enter
orl
enter
sbb
aad
lods
insb
jle
test
push
mov
jg
out
filds
fcmovb
pop
jmp
cs
ljmp
cmp
addr16
push
pop
loope
rolb
test
push
jecxz
fs
enter
adc
rorl
sbb
jmp
inc
hlt
cwtl
xchg
adc
aaa
test
push
inc
loope
outsb
aas
inc
movsb
addr16
inc
adc
call
js
xor
adc
mov
ja
fwait
push
pop
adc
push
xchg
fiaddl
stos
idivl
pop
mov
cmc
mov
mov
aas
cmc
jmp
sbb
mov
xchg
sub
mov
sub
call
js
pop
insl
fistpll
subb
in
inc
stos
imul
cli
xor
ljmp
mov
nop
xchg
xchg
push
mov
lea
pop
scas
rcr
push
movsl
sbb
test
sub
dec
enter
das
std
push
and
cli
xor
lret
xchg
push
jg
and
fwait
js
loop
cli
xchg
and
add
sub
mov
push
dec
iret
pop
adc
and
mov
pop
mov
adc
add
add
mov
dec
aam
arpl
xchg
push
in
adc
das
adc
lods
pop
push
subb
fisttps
xchg
mov
dec
and
in
pop
jg
mov
inc
sti
imul
push
cltd
sbbb
and
jns
inc
dec
push
nop
push
repz
and
fsubl
mov
adc
hlt
ficoml
cmpsb
mov
out
pop
loope
xor
xchg
mov
sub
adc
sbb
pop
clc
add
mov
mov
sbb
addr16
mov
mov
dec
dec
das
cli
fadds
std
std
sub
ret
repnz
or
scas
mov
ljmp
sbb
es
mov
lahf
push
rcll
lods
mov
dec
mov
push
js
adc
fs
sub
mov
out
loope
pop
subb
hlt
addl
ljmp
pop
sbb
mov
xchg
or
ljmp
jae
lods
jb
push
inc
jbe
xchg
mov
mov
inc
rclb
xchg
test
psubq
cmp
aaa
inc
pop
call
adc
jmp
fcoms
sbb
hlt
sub
jae
addb
dec
mov
aaa
dec
pop
jb
jbe
xor
notb
div
push
repz
xorb
loop
bound
lret
shll
nop
mov
loopne
add
mov
and
scas
mov
jp
jbe
push
das
adc
bnd
adc
aaa
jle
fidivs
rcl
ss
repz
mov
or
jecxz
andl
fdivs
dec
push
inc
iret
dec
lea
adc
pop
adc
stc
adc
mov
loop
mov
scas
shlb
add
paddusw
jae
decl
add
dec
sbb
push
and
mov
out
test
pop
mov
sub
mov
push
movsb
mov
imul
jb
sub
into
movsb
and
and
inc
gs
lock
sbb
cmp
arpl
popf
or
mov
lds
int
popf
mov
mov
not
xor
push
xor
mov
cmc
push
adc
pop
in
cld
cwtl
mov
out
jb
jne
mov
xchg
jp
arpl
loop
ret
jnp
dec
cmp
arpl
or
inc
and
aas
xchg
shlb
roll
fs
xchg
adc
or
add
std
shrl
pop
int
xchg
dec
nop
sub
repnz
and
clc
or
addr16
cld
mov
pop
mov
push
mov
icebp
mov
sub
into
aas
addr16
xor
clc
es
sahf
xor
xchg
xchg
ss
or
enter
push
ds
xor
jg
pop
mov
and
arpl
pop
mov
xor
imul
dec
and
out
lahf
pop
int3
inc
js
push
lods
cltd
sbb
xchg
sti
hlt
xor
scas
mov
or
dec
test
mov
into
popa
lret
xchg
jmp
bound
cltd
sbb
data16
rcl
hlt
sti
repz
insb
mov
xorb
add
and
test
sub
and
jmp
jle
add
sub
cld
inc
arpl
mov
mov
lods
mov
lds
fsubs
mov
imul
mov
jns
xchg
pop
popa
jge
add
jmp
mov
cs
sbb
cwtl
push
push
cmp
sub
repnz
hlt
jnp
xlat
sub
xor
sbb
push
push
and
in
cmp
and
imul
imul
mov
fs
call
pushf
call
bswap
bswap
jmp
ret
mull
cwtl
leave
mov
dec
cmp
add
jmp
enter
mov
addr16
adc
nop
inc
cmpsb
jecxz
shll
popf
add
jb
pop
les
mov
idivl
cmp
dec
xchg
lods
mov
inc
sbb
daa
add
rorb
clc
inc
pop
and
sub
ss
jns
js
cltd
fwait
outsl
int
popa
js
lock
test
sbb
adc
mov
jp
icebp
xchg
cs
daa
mov
jmp
aad
mov
les
sbb
dec
dec
test
push
js
cmp
clc
xlat
lret
loopne
les
adc
in
and
xchg
push
xor
adc
inc
addr16
popf
push
adc
in
inc
out
xor
adc
mov
xchg
sbb
leave
push
pop
loopne
add
adc
xor
cmp
scas
ret
pop
in
aam
fsubs
out
loop
add
mov
dec
inc
mov
and
call
push
lods
in
sub
xlat
mov
pushf
and
sti
ds
jecxz
nop
nop
and
jne
pop
push
arpl
les
jge
inc
nop
enter
lret
test
or
fs
dec
int3
test
push
loope
insl
sbb
lahf
arpl
sub
push
popa
mov
xchg
mov
add
xchg
inc
xchg
xor
pushf
or
stos
ds
cmpb
repz
rorl
loopne
repnz
xor
mov
inc
fs
in
loop
call
push
inc
inc
dec
add
test
outsl
out
sub
leave
scas
sbb
jp
das
cmp
push
cmp
inc
adc
aad
push
push
xchg
cmp
repnz
or
inc
aad
int
pop
mov
pop
mov
in
jecxz
inc
std
cmp
xchg
xchg
mov
orb
lea
fsub
xchg
or
mov
mov
sub
in
mov
push
add
fsubrs
ret
test
mov
pop
gs
stos
into
aam
cli
jmp
fldcw
rolb
lahf
stc
hlt
in
das
or
scas
sbb
ret
dec
int3
into
add
scas
out
icebp
rclb
in
push
sti
cmp
and
adc
xchg
in
ljmp
fs
inc
iret
jmp
adc
mov
cltd
inc
test
jnp
lcall
jo
aam
dec
mov
xchg
clc
pushf
data16
ret
icebp
adc
repz
jge
sbb
fwait
push
pushf
push
aad
sbb
in
mov
loopne
push
adc
jbe
pop
mov
sti
sahf
and
stos
ret
ror
je
int3
mov
ljmp
jmp
xor
fidivrs
cmp
xchg
mov
mov
sarb
xchg
mov
dec
lods
test
pushf
leave
sahf
out
and
aaa
repnz
fidivrl
fsubs
add
jae
popa
addr16
outsl
js
add
jae
sub
xor
mov
lds
pop
cs
das
mov
notb
pop
push
push
mov
dec
iret
popa
cli
mov
fcom
or
lock
adc
mov
lods
xor
stos
cs
mov
push
and
xchg
outsl
scas
rclb
jle
adc
pushf
add
add
int
and
nop
jle
in
cmpsb
nop
jne
fwait
ljmp
add
adc
loope
sti
ljmp
cmp
idivl
mov
and
mov
jae
fs
mov
int
push
sub
sub
testb
add
xor
inc
mov
faddp
gs
jbe
push
sbb
test
aam
adc
and
pop
add
adc
or
adc
and
or
jne
pop
pop
sub
fwait
hlt
sbb
ds
imul
mov
or
mov
jns
sub
and
hlt
out
pop
bound
movsb
dec
push
xor
push
or
pop
dec
mov
inc
lea
je
stc
test
push
add
cmp
cmp
push
mov
pushf
push
lea
jb
clc
clc
push
cmp
pusha
lea
jae
xadd
mov
sbb
setne
shld
mov
push
jmp
call
dec
nop
dec
ja
fiaddl
xchg
sbb
sbb
divl
test
lods
xchg
xchg
mov
fcmove
jae
xchg
jecxz
popa
xor
adc
fwait
jle
and
iret
stos
movsl
ja
pusha
push
push
mov
movsb
sahf
sbb
mov
dec
lret
pop
jb
push
jbe
cwtl
push
cmp
jmp
sbbl
cmp
lret
lcall
fsubs
inc
lea
cs
adc
jns
pop
sub
test
cmp
lock
dec
pop
xor
mov
pop
int3
cmpsb
or
pop
rcrb
out
aam
fistpll
loop
mov
ret
mov
movsb
add
cmp
jae
pop
or
or
or
out
movsb
ss
pop
push
rcrl
fsubs
ret
pusha
pusha
mov
pushf
pushf
pushf
lea
jmp
fmul
imul
jg
loop
and
lock
inc
ret
pop
and
lcall
xchg
adc
outsb
xchg
push
add
jecxz
sbb
les
movsb
loopne
loopne
push
out
add
dec
addb
lret
cmp
dec
cmc
shlb
inc
xor
mov
jne
sub
adc
icebp
mov
push
pop
jae
sti
jo
jno,pt
pop
xor
insb
test
sub
aas
cltd
xchg
xor
jl
enter
sub
scas
or
bt
mov
cmp
clc
pusha
stc
and
stc
add
pusha
pushf
pushf
push
lea
jmp
cli
xchg
mov
ret
sbbb
push
sub
inc
cmp
call
dec
pop
adc
notb
int
cmpsl
out
xchg
test
adc
mov
jo
mov
data16
sub
mov
outsl
mov
mov
jno
fwait
pop
aas
jnp
icebp
xchg
cmp
es
push
mov
push
xchg
and
sub
ja
ss
std
ljmp
out
cmp
fsubr
xchg
dec
inc
pop
dec
es
insl
sbb
lcall
loope
dec
loop
insb
xorl
adc
mov
jecxz
iret
lea
mov
addr16
aad
lcall
loope
dec
lret
push
or
push
xchg
jnp
shl
jl
mov
jecxz
icebp
sbb
and
scas
les
aaa
mov
or
inc
repz
dec
mov
cli
mov
fsubrs
mov
dec
and
mov
mov
jl
loope
icebp
sub
mov
addl
push
jno
push
rclb
dec
push
xchg
loope
stos
loope
jns
es
in
inc
cli
test
pop
xchg
test
lock
fwait
add
jl
ret
icebp
popa
lds
loop
xchg
hlt
pop
jne
dec
pop
addr16
push
add
pop
mov
in
mov
push
sbb
adc
and
xchg
imul
mov
add
jae
cwtl
cmp
lds
dec
adc
xchg
inc
xorb
int
ja
sub
in
hlt
sub
or
inc
les
xchg
mov
icebp
mov
pop
fs
push
enter
notl
lcall
fscale
test
int3
pop
loopne
mov
and
and
repz
aam
adc
pop
dec
mov
shll
sbb
pop
dec
inc
mov
push
outsl
jmp
and
mov
imul
je
loop
dec
insl
pop
idiv
add
ret
fistpll
mov
cmp
or
add
inc
pop
aad
mov
insb
in
push
das
mov
add
and
xchg
outsl
enter
mov
movsl
pop
jecxz
faddl
mov
loop,pn
dec
into
es
inc
jecxz
pop
fsub
mov
xor
mov
cmpsb
mov
xchg
mov
in
js
daa
jle
lods
or
scas
insl
test
jecxz
shlb
repz
add
jb
arpl
xor
cmp
std
push
stc
push
popf
dec
sbb
push
inc
and
out
mov
dec
sub
cmpsl
ds
sbb
push
fwait
mov
into
jno
cmp
push
mov
push
out
adc
dec
pop
repnz
xchg
test
cmp
adc
lods
scas
je
cld
flds
mov
and
mov
adc
xor
add
sub
cmp
popf
ret
xchg
inc
bound
inc
adc
cmpl
xlat
outsl
enter
cmpsb
mov
add
inc
mov
sub
outsl
mov
pushf
cmpsb
xorb
mov
mov
lcall
data16
in
push
out
adc
cmp
sub
dec
jge
repz
mov
dec
mov
cwtl
add
mov
aaa
shr
jo
and
es
fildll
jno
sarl
movsb
add
leave
mov
pop
rorl
sub
js
dec
pusha
clc
cmp
cmp
movzbw
bswap
call
pusha
mov
push
lea
jmp
sbb
mov
and
cld
aaa
and
cld
cmp
aam
mov
xchg
mov
jmp
lea
outsb
inc
sbb
call
xchg
mov
adc
jge
xchg
jno
mov
fistl
cmovne
jnp
test
aam
scas
or
xchg
std
int
sub
stos
ds
in
mov
mov
inc
mov
xchg
mov
mov
ljmp
jne
mov
pop
fcmovbe
lea
push
imul
clc
neg
jmp
mov
add
fistpll
call
shll
adc
push
aas
sbb
iret
stc
cmp
jb
in
mov
loop
mov
mov
movsb
push
and
pop
pusha
pop
rcll
pop
mov
fdivrs
push
add
cmc
jo
mov
and
outsl
aaa
pop
lahf
mov
popw
int
dec
pop
mov
gs
repz
pop
add
imul
ss
in
add
rcl
movsb
arpl
sbbl
inc
xchg
xchg
xor
adc
cs
sub
movsb
sub
add
push
xor
adc
fwait
jle
aas
outsb
test
add
test
cltd
pop
push
lret
lds
mov
cltd
pop
xchg
mov
jnp
xchg
les
add
pop
scas
pmovmskb
adc
sbbb
jo
pop
mov
ficomps
jae
and
insb
and
dec
nop
in
adc
mov
or
nop
xor
sbb
cwtl
jecxz
fistl
or
rdpmc
pop
dec
mov
sti
call
jmp
cmp
call
and
scas
fimull
dec
cmp
mov
jbe
insl
je
test
rcrb
outsl
inc
mov
push
push
call
aas
cmp
loop
add
rcll
into
xchg
jecxz
cltd
in
xor
adc
fcmove
inc
cld
jle
add
jns
test
aad
jmp
adc
popf
popl
jg
mov
mov
add
xchg
fdivr
testb
mov
mov
xchg
jb
adc
fsubrs
pop
jne
in
pop
mov
into
nop
sub
mov
mov
je
out
lret
pop
mov
jnp
or
repz
mulb
mov
fadd
loope
mov
mov
pushf
dec
adc
push
lcall
adc
add
jg
enter
ja
jge
jecxz
pop
sub
fsubrs
jg
push
ret
dec
sub
neg
lret
push
push
les
cmp
rorb
pop
jae
pop
mov
mov
lods
mov
pop
test
mov
ds
aad
sub
je
call
iret
jb
std
adc
inc
pop
rcrl
add
or
mov
pop
imul
lahf
addr16
adc
lret
pop
sbb
ret
arpl
push
xlat
add
aas
mov
iret
shr
jmp
pop
push
pusha
push
lea
ja
jmp
fcoms
shrl
adc
fldl
push
and
cld
shrb
ja
or
push
outsb
insl
and
push
lds
into
shlb
cmp
lds
dec
jno
test
push
xchg
out
aad
xchg
push
inc
sbb
imul
mov
iret
cmpb
enter
dec
jge
mov
and
inc
xor
mov
push
lahf
dec
iret
sub
cld
fwait
negb
ret
adc
into
add
insl
rorb
lds
xchg
inc
mov
ja
push
cmpsl
mov
or
sbb
ljmp
je
aas
out
cld
aaa
xor
lods
pop
pop
leave
mov
call
mov
sbb
push
jb
or
jns
mov
out
enter
jp
daa
cld
cmpsb
ljmp
and
ljmp
adc
daa
and
ficoms
xlat
dec
jno
jne
jecxz
ljmp
cmp
pop
in
push
outsl
xchg
mov
fldenv
dec
mov
ja
inc
and
mov
push
add
fnstenv
or
mov
insb
lea
and
xchg
cltd
das
cld
punpckhbw
icebp
xor
push
iret
scas
inc
popa
xor
mov
xor
jl
cli
cmp
out
jnp
cmpl
fldt
or
mov
and
dec
ret
or
xchg
xor
outsb
cmp
cmp
hlt
iret
lcall
pop
xchg
test
jge
dec
jnp
sbb
or
push
adc
pop
and
mov
out
iret
fcoml
push
out
les
jne
out
fdivs
and
cwtl
mov
outsl
jg
mov
test
xor
mov
daa
clc
nop
cmp
mov
ret
and
adc
je
lea
jmp
enter
xor
pop
dec
movsb
mov
cmp
fdivs
push
cmpsb
jl
dec
sarl
inc
sub
into
aam
xor
add
jecxz
xor
in
and
mov
stos
and
je
mov
fldl
es
jecxz
push
pop
outsb
xchg
sbb
sbb
out
call
aad
fmuls
es
scas
push
repz
pop
mov
fdivs
add
fs
jae
bt
pushf
mov
cmp
cmp
movw
push
pusha
mov
lea
ja
push
setae
inc
pushl
mov
inc
rcr
xchg
sar
clc
mov
not
call
mov
ficompl
mov
add
xor
pop
vmptrst
jle
mov
sub
cmp
aad
push
sub
insb
leave
sarb
leave
popf
sbb
adc
ss
cltd
dec
and
inc
and
js
add
hlt
mov
cmpsb
lods
call
mov
push
pushf
xor
sbb
nop
shll
mov
iret
es
fdivs
orl
or
pop
mov
pop
jo
sbb
arpl
cld
xor
jp
pop
inc
pop
push
faddl
add
repz
les
ja
mov
xor
in
das
or
push
sbb
sbb
add
inc
outsb
fwait
inc
adc
pop
jb
test
inc
add
scas
push
test
pop
xor
outsb
pop
lcall
push
fdivs
not
add
pop
fimuls
rclb
cmp
push
shr
clc
mov
jl
test
add
lods
push
push
mov
fs
ljmp
push
cmp
add
test
xor
pop
rolb
adc
lods
test
shrl
sbbb
mov
and
faddl
mov
sbb
ss
jg
imul
filds
mov
orb
lret
mov
pop
sbb
je
orw
inc
mov
push
outsb
loop
mov
push
in
aaa
out
sbb
mov
aaa
leave
dec
push
adc
test
loopne
in
cltd
xor
and
mov
test
lret
add
mov
loop
sahf
subl
incb
and
or
test
in
hlt
pusha
pushf
pushf
pushl
lea
jmp
stos
mov
mov
imul
or
ret
lea
mov
mov
mov
inc
add
ret
sub
inc
lahf
icebp
mov
and
sbb
mov
std
jnp
xor
jg
mov
lods
lods
xor
fldcw
inc
outsl
sbb
push
or
xchg
mov
aaa
iret
lahf
dec
mov
sub
stc
pop
ret
fstps
data16
xchg
pop
pop
push
xor
jno
and
and
test
and
jae
dec
repz
mov
mov
inc
int3
loope
and
aad
sti
pop
test
fdecstp
jns
rol
lcall
xor
push
cwtl
in
mov
push
int
int
push
xor
in
jg
dec
iret
fbld
mov
mov
shll
pop
fwait
sub
inc
mov
in
inc
repz
fsubrs
fsubs
jb
ret
inc
bound
cmp
xchg
add
inc
dec
mov
les
mov
mov
fcomps
push
stos
cmp
and
xor
mov
paddq
xchg
ds
jl
push
aad
xor
xorl
repnz
iret
sti
xor
je
xchg
xchg
fcompl
adc
or
push
test
or
sbb
and
push
aaa
insl
icebp
out
nop
fdivrs
mov
imul
sti
shr
outsb
sti
or
cltd
xor
cltd
scas
pusha
add
mov
cmp
call
in
inc
pop
shll
jge
cmp
jne
stos
jmp
sub
pushf
dec
insl
xor
and
mov
sbb
sbb
cmp
xchg
adc
sub
cs
xchg
mov
inc
call
sub
add
inc
inc
cld
xlat
push
xchg
mov
mov
push
sub
and
sti
mov
icebp
cmp
fsubrl
sub
neg
cs
stc
pmullw
jnp
add
into
add
mov
leave
cmp
loop
fdivs
jg
sahf
push
imul
jp
jle
push
dec
fwait
mov
js
cmp
roll
daa
in
cmp
sbbl
fld
xchg
mov
xor
mov
dec
out
fists
fcomip
movsb
sahf
mov
in
rolb
push
add
rolb
cwtl
in
xlat
mov
or
popa
dec
mov
xor
int3
dec
idivl
inc
fld
rorb
lds
sbb
fsubr
scas
shrb
sahf
ss
aas
push
jns
sahf
pop
mov
in
fadd
and
lds
mov
xor
xor
cltd
daa
xor
adc
test
xorl
push
aas
inc
clc
inc
test
mov
pop
fimuls
lods
loop
cs
cmc
cwtl
outsb
mov
cmpsl
mov
and
pop
and
les
std
bound
clc
ds
cli
dec
gs
sbb
cmpsb
cmp
loope
mov
mov
int
jmp
dec
sbb
push
imul
les
fldl
stos
int
repnz
ss
jmp
outsb
xor
adc
mov
push
dec
es
ss
mov
ja
sbb
stc
cmp
adc
inc
inc
sbb
rorl
jge
les
inc
aas
sbb
ljmp
imul
js
inc
jb
add
adc
repz
inc
mov
pop
ret
sub
jecxz
add
mov
dec
and
mov
mov
fsubs
inc
test
sub
test
or
lods
popf
push
ret
mov
cmp
sub
sbb
mov
popl
pop
jecxz
pop
jns
mov
pushf
dec
sarl
mov
sub
jb
shlb
jg
cmp
bound
in
sbb
notb
pop
stc
mov
aam
stos
add
nop
loop
icebp
push
shlb
inc
xlat
fnstsw
int
adc
fimull
in
pop
jb
cmc
jecxz
xchg
cltd
stos
in
sbb
xchg
mov
inc
push
pop
scas
in
mov
or
cmpsb
add
out
fs
fdivrs
or
xor
lahf
into
jp
mov
and
xorb
mov
pusha
adc
and
cmpsb
std
add
or
rorl
hlt
adc
push
sub
gs
iret
into
stos
pop
iret
lcall
clc
mov
pop
scas
movsb
shrl
mov
jle
push
fsubs
ds
pushf
rep
lea
pushf
movsbl
mov
pushf
lea
jmp
in
sub
or
imulb
pop
xor
ret
aad
cmp
pop
scas
pop
jmp
shrl
js
inc
inc
std
inc
inc
mov
adc
cmc
rorb
mov
and
shlb
pushf
pushf
pushf
mov
pusha
pushl
ret
jns
out
mul
push
stos
in
adc
lds
lea
clc
ljmp
sbb
cwtl
lods
cs
call
test
mov
fsubp
and
sahf
jb
cmp
jae
xchg
cmp
mov
sbb
cmp
mov
jbe
jns
mov
push
repnz
clc
outsl
mov
push
and
add
ja
sahf
sbb
adc
xchg
pop
xchg
mov
lret
repz
mov
inc
xchg
lds
sub
and
mov
xchg
or
loopne
sahf
jb
mov
dec
push
stos
nop
pop
sub
add
pop
fwait
jecxz
mov
pusha
add
xchg
push
aad
add
add
mov
inc
movsb
js
pop
or
fwait
push
push
clc
xorb
mov
in
sub
adc
push
mov
jp
lds
sub
test
sub
loopne
adc
xlat
mov
fdivrs
mov
mov
lea
jne
call
gs
jg
in
dec
sbb
pusha
mov
cmpsb
adc
lock
cmp
inc
jbe
bound
add
mov
xchg
andl
mov
add
scas
ja
cmpsl
adc
xchg
mov
ret
arpl
imul
cmp
dec
add
pop
mov
insl
sub
lea
jno
push
mov
add
mov
xchg
sbb
pusha
or
cli
sahf
sbb
mov
add
das
mov
add
push
push
loopne
cmp
dec
test
stos
imull
inc
fs
push
push
jae
stos
inc
sti
imul
push
dec
dec
or
inc
sbb
test
mov
loopne
push
cmc
and
sub
mov
fistps
jle
shlb
dec
imul
or
pop
shrl
mov
or
movsl
dec
inc
xchg
xlat
dec
push
pop
or
hlt
lret
cmp
in
movsl
mov
or
orb
dec
lahf
adc
movsl
adc
pop
aad
test
out
xchg
stc
dec
sub
jns
or
push
sbb
push
xchg
fbstp
push
pop
jp
es
and
out
ret
mov
dec
xor
xorb
mov
ja
insb
ret
mov
loopne
repnz
je
xchg
ret
rcr
mov
repnz
pushf
xchg
jp
xchg
ret
cmpsl
adc
mov
fwait
out
adc
pop
ds
jle
sarl
cli
and
movsl
loopne
popf
push
out
imul
push
fildl
adc
in
aad
or
repz
loopne
push
test
stc
push
push
sarl
mov
push
sub
pusha
dec
into
lahf
nop
push
adc
call
add
leave
mov
call
cltd
push
loop
insl
ja
decb
or
mov
dec
mov
iret
std
mov
sbb
fcmovb
mov
adc
mov
ret
int
xor
inc
test
inc
stc
pop
loope
aas
jnp
push
daa
jnp
xorb
nop
imul
popf
adc
inc
repnz
in
sbb
sub
repnz
mov
ss
sub
addr16
xor
dec
sbb
mov
add
insl
hlt
push
test
cmp
mov
leave
mov
jle
or
int3
add
mov
pop
fadd
aad
xor
outsl
hlt
mov
mov
scas
or
scas
xlat
mov
les
pop
mov
push
push
pushl
ret
adc
pushf
pushf
lea
jmp
mov
not
mov
not
lea
movsbw
pushf
mov
push
pushf
pushl
ret
lea
je
push
mov
clc
or
pushf
push
pusha
lea
je
shl
rol
shl
aam
xor
sets
setle
stc
bsf
mov
clc
shld
cmc
setae
mov
bsr
call
sarl
or
mov
ret
stos
inc
sbb
out
jmp
push
test
inc
add
and
dec
fisubl
jl
in
xchg
or
push
sub
mov
pushf
push
in
rclb
loopne
lds
inc
inc
in
aam
adc
cmpl
lcall
popf
ror
pop
xchg
enter
jl
ss
xchg
ficompl
or
mov
sbb
scas
sbb
les
push
pop
js
mov
imul
int
xchg
std
adcb
inc
insl
mov
addr16
nop
fs
push
outsl
mov
testb
stc
mov
add
es
scas
repnz
add
loope,pn
cs
jp
or
push
pusha
jp
lds
test
jecxz
push
andb
imul
pop
es
pop
les
pop
outsb
aad
pop
es
cwtl
and
xlat
jnp
leave
dec
jp
mov
fwait
cmpsb
test
dec
lahf
into
xor
dec
outsl
cmp
pop
lds
xchg
test
sbb
in
inc
out
pop
mov
adc
rcrb
add
jl
dec
outsl
xchg
xchg
or
xchg
cmpsl
sti
jmp
mov
int3
popl
and
or
pop
aas
icebp
into
dec
mov
jmp
outsl
sbb
scas
mov
or
jg
push
mov
adc
push
scas
inc
xor
mov
mov
pusha
and
shrl
ficomps
sbb
mov
push
pop
scas
pop
les
and
dec
or
loopne
cmpxchg
loope
icebp
dec
in
fistps
mov
stc
shll
data16
xchg
adc
jecxz
shll
jmp
sbb
push
push
pop
pop
and
pusha
cwtl
dec
movsl
movsb
std
inc
scas
dec
loope
lahf
push
xchg
inc
or
jp
mov
cwtl
into
jo
adc
push
sbb
movsb
mov
cmpsl
insl
push
call
dec
or
enter
xchg
outsb
inc
cmp
lods
cmc
mov
xor
daa
ljmp
clc
cwtl
int
insl
shl
mov
repz
mov
sub
cwtl
dec
in
jbe
jmp
jns
add
cmp
ret
mov
aad
aad
xchg
dec
jmp
scas
xchg
icebp
sub
scas
popf
mov
movsl
add
xlat
outsb
push
sbb
ja
pop
jnp
lods
je
aam
jge
cmp
mov
pop
sbb
fadds
lds
jmp
push
lea
jae
bsr
mov
pusha
sbb
rol
mov
test
movsbl
btc
mov
cmc
stc
sub
cmc
repnz
pushf
pushl
pushf
lea
jne
movsbw
shl
mov
shld
test
sar
bt
sub
pushf
call
outsl
add
hlt
dec
pop
jl
mov
dec
and
int3
xchg
pusha
push
adcl
mov
repz
cmp
xor
mov
rcrl
rclb
mov
dec
dec
fstps
sahf
sub
jle
les
out
pop
jnp
or
fwait
clc
cmp
jmp
xor
and
lahf
jo
int
dec
jge
mov
and
lahf
jmp
jmp
stc
add
pushf
lea
jmp
lods
cmp
call
lea
jb
call
sbb
popa
mov
cmp
cmc
and
mov
out
add
adc
or
push
sti
aaa
pop
nop
dec
popa
and
mov
clc
ror
push
mov
aaa
daa
dec
lds
test
dec
mov
ds
sahf
sti
push
roll
lock
or
test
sarl
pop
jmp
lahf
xchg
jnp
daa
out
and
sub
rorb
pusha
inc
jnp
fwait
jbe
xchg
jbe
push
insb
pop
movsb
or
call
and
mov
mov
xchg
mov
leave
jns
mov
cmc
add
lock
jp
ds
gs
jnp
fisubl
pusha
push
out
xchg
bound
fadds
pop
jle
xchg
call
jl
push
add
dec
dec
add
jnp
movl
das
clc
push
jbe
jae
sub
rdtsc
loopne
mov
int3
cmp
mov
gs
cmp
enter
icebp
inc
int
inc
repnz
aas
sbb
mov
test
fwait
jne
hlt
fnstsw
cld
cmpl
nop
addb
shrl
add
int
mov
dec
or
mov
pushf
es
in
movsl
movsl
bound
pop
push
fmulp
xlat
jle
data16
loopne
sbb
xchg
cmpl
mov
orb
cmp
shll
and
popa
xchg
leave
in
lock
clc
stos
jl
cmp
cmpsl
icebp
outsl
jmp
cmp
xchg
adc
cmp
add
adc
icebp
pushf
and
xchg
push
dec
repz
mov
popf
or
and
dec
in
in
insl
mov
lretw
fadds
daa
or
xchg
mov
pop
mov
or
jge
inc
repnz
mov
mov
fmuls
jge
cmp
push
lock
mov
jbe
mov
ds
loope
and
ret
xchg
das
lods
mov
rol
mov
mov
lods
pop
repz
outsl
stc
pop
insl
shrb
test
sub
cmpb
mov
inc
stos
or
notb
add
mov
pop
fiaddl
jnp
and
xchg
test
jo
mov
lcall
int3
inc
push
jnp
divl
adcb
ljmp
xchg
push
mov
pop
inc
jle
in
popf
jp
pusha
inc
or
push
xchg
js
push
arpl
mov
or
or
xor
sbb
jmp
mul
and
sub
mov
and
add
lods
decl
jo
repnz
mov
add
clc
push
test
ljmp
cli
adcl
jb
fsubrl
dec
in
mov
or
mov
ljmp
xor
pushf
cmp
cmp
inc
pop
subl
cli
outsb
inc
jbe
lods
decl
test
mov
stos
ja
mov
push
add
mov
mov
pusha
lea
jmp
and
add
mov
mov
dec
inc
cmp
push
mov
lea
fcomip
aam
dec
push
imul
popa
xchg
hlt
or
mov
mov
push
paddusw
and
mov
xor
dec
mov
ret
lcall
into
dec
sub
ds
mov
jb
push
pop
cld
jns
imul
hlt
imul
mov
fwait
pushf
adc
pop
cmp
mov
push
lea
call
mov
push
pushf
lea
jmp
test
not
jmp
not
pop
pushl
popl
bswap
pushf
jmp
jmp
sbb
sets
add
bts
ror
bts
shld
add
clc
bts
shl
and
bts
or
mov
bt
jmp
xor
pushl
jmp
jmp
rcl
rol
xchg
shl
mov
pushf
rcl
rcr
mov
stc
pushf
jmp
shl
ror
movzbl
pusha
clc
call
mov
mov
not
movzbw
repz
popl
not
bswap
call
jmp
not
movzbw
bswap
mov
call
rcl
movsbl
mov
inc
sub
setae
btc
mov
pusha
test
test
lea
jo
add
call
clc
add
jmp
xlat
clc
xchg
mov
xchg
xchg
jecxz
jmp
out
decl
xchg
jmp
xchg
fs
xchg
sbb
xchg
and
xchg
and
mov
dec
testl
incl
xchg
jo
xchg
jmp
xchg
and
mov
sar
xchg
outsb
out
lcall
xchg
aad
xchg
sbb
xchg
daa
out
call
hlt
xchg
adc
xchg
mov
in
xchg
mov
xchg
lcall
call
xchg
lcall
jmp
fldl
decl
clc
xchg
xor
xchg
insb
cli
xchg
and
mov
and
mov
inc
repz
mov
hlt
xchg
inc
hlt
xchg
insb
cli
xchg
mov
xchg
inc
out
xchg
mov
in
call
clc
xchg
test
xchg
mov
xchg
pop
testl
decl
out
lcall
std
xchg
pop
testl
mov
lock
test
xchg
dec
testl
decl
cli
xchg
and
mov
and
mov
adc
xchg
inc
out
xchg
inc
hlt
xchg
inc
hlt
xchg
test
xchg
hlt
loope
incl
xchg
xlat
in
xchg
inc
repz
inc
repz
pandn
jmp
xchg
xchg
in
xchg
aad
xchg
jmp
xchg
adc
xchg
insb
cli
xchg
pop
hlt
xchg
mov
testb
adc
xchg
flds
mov
ret
cld
xchg
sbb
xchg
flds
mov
dec
lock
xlat
in
xchg
and
mov
and
mov
jmp
mov
inc
hlt
xchg
inc
hlt
xchg
jmp
std
xchg
insb
cli
xchg
xchg
in
xchg
fs
xchg
insb
cli
xchg
xlat
in
xchg
xchg
in
xchg
sar
xchg
pandn
incl
xchg
inc
testb
xlat
in
xchg
jns
mov
adc
xchg
dec
testl
lcall
xchg
jmp
xchg
jns
mov
dec
lock
pandn
jmp
add
flds
mov
inc
hlt
xchg
inc
hlt
xchg
xchg
in
xchg
adc
xchg
lcall
call
in
xchg
jmp
xchg
shl
incl
xchg
adc
xchg
dec
lock
dec
testl
lcall
xchg
lcall
lcall
xchg
daa
out
lcall
cld
xchg
daa
out
ljmp
xchg
mov
xchg
mov
add
decl
hlt
xchg
inc
hlt
xchg
and
xchg
aad
xchg
and
mov
shl
pushl
stc
xchg
xchg
jecxz
jmp
jmp
cld
xchg
pop
hlt
xchg
xor
xchg
pop
testl
call
xchg
adc
xchg
xor
xchg
out
clc
xchg
pop
hlt
xchg
and
xchg
jmp
xchg
xlat
clc
xchg
mov
cmc
xchg
adc
xchg
lods
fldl
jmp
add
ljmp
xchg
inc
hlt
xchg
inc
hlt
xchg
mov
add
dec
testl
call
call
xchg
outsb
out
jmp
clc
xchg
shl
jmp
xchg
test
xchg
adc
xchg
fs
xchg
jns
mov
ret
cld
xchg
aad
xchg
adc
xchg
jmp
xchg
out
clc
xchg
lods
fldl
decl
xchg
mov
in
xchg
and
mov
shl
inc
out
incl
xchg
inc
hlt
xchg
dec
lock
lcall
call
clc
xchg
fwait
loop
jmp
xchg
xchg
jecxz
jmp
clc
xchg
inc
testb
hlt
loope
out
clc
xchg
adc
xchg
aad
xchg
mov
call
divl
movb
mov
pushl
push
mov
movl
pushf
popl
movw
movl
push
pushl
popl
movl
lea
jmp
lea
push
bswap
bswap
push
pusha
mov
pushf
mov
call
movsbw
mov
jmp
pushl
popl
pusha
pusha
call
call
pushf
inc
bt
pushl
ror
movb
add
cmc
bt
bt
mov
stc
stc
jmp
jmp
neg
clc
cmp
mov
and
mov
push
clc
cmc
sub
push
pusha
shr
pushl
mov
push
pushf
mov
pushf
pushf
movl
pushf
popl
call
mov
pushf
lea
jmp
push
pushl
popl
pushf
movb
movb
lea
jmp
mov
jmp
pushl
popl
movb
movw
pushf
pushf
lea
jmp
jmp
pushf
popl
pushf
pusha
call
pushf
jmp
movsbw
jmp
sub
pushf
movb
pusha
xchg
jmp
bsf
mov
movzww
cmc
xchg
call
jmp
push
mov
bswap
push
jmp
call
jmp
jmp
mov
movzbl
mov
push
pusha
call
lea
push
jg
pusha
mov
pop
jmp
inc
stc
call
bswap
push
movzbw
mov
movzbw
pusha
lea
call
jmp
push
pushf
mov
jmp
pushf
bswap
push
mov
push
pushf
lea
jmp
add
pusha
pushl
jmp
movw
jmp
test
add
mov
mov
movb
pushl
pushf
mov
lea
jmp
pusha
mov
mov
mov
call
pusha
movb
mov
pusha
call
call
mov
jmp
pusha
pushl
popl
pushf
movb
lea
jmp
mov
mov
pushf
lea
jmp
mov
push
pusha
mov
movb
pusha
jmp
add
call
pushf
pushf
bswap
push
pushl
pusha
movb
lea
jmp
pushf
popl
push
pushl
popl
pusha
push
pushf
lea
jmp
stc
pusha
stc
cbtw
test
push
cwtl
call
cmp
clc
cmc
shl
movb
sub
jns
pusha
shr
pushf
or
stc
pusha
clc
xor
pushf
inc
pushf
push
decl
call
sub
call
movb
pushl
call
bswap
mov
bswap
lea
push
mov
push
mov
pusha
jmp
mov
jmp
mov
pushl
movw
mov
pushl
lea
jmp
pushf
mov
movb
lea
jmp
aas
btc
mov
jnp
add
push
call
stc
mov
mov
mov
stc
mov
cmp
sub
jmp
mov
mov
pushf
movb
xchg
pushf
lea
jnp
lea
bswap
repz
lea
movzbl
push
call
push
lea
jno
push
push
push
pushl
ret
push
movzbw
mov
mov
push
mov
not
pushl
not
pusha
movl
movsbw
pop
mov
jmp
mov
sub
pushl
movw
add
bt
pushl
sub
mov
jmp
bswap
pushf
lea
jmp
pushf
call
not
call
pusha
movw
pushf
pushl
popl
movb
pushf
movb
mov
lea
jmp
add
clc
jmp
aad
bts
aas
seto
mov
test
push
call
lea
mov
push
push
call
push
jmp
neg
sbb
jmp
mov
mov
pusha
mov
jmp
movl
bswap
call
jmp
mov
call
not
clc
call
sar
lea
mov
sar
mov
call
xadd
movsbl
mov
btr
movzbw
add
mov
sub
pusha
movl
pushl
mov
jmp
mov
jmp
setb
movsbw
movzbw
push
mov
lea
jo
push
lea
pushl
mov
pushf
pushl
lea
jmp
mov
rol
shl
stc
mov
pushf
pushf
cmc
add
push
pushf
mov
mov
pushl
pushf
lea
jmp
xchg
pop
bswap
repz
popl
lea
jns
push
not
push
movsbw
mov
movzbw
push
lea
push
mov
movzbl
push
call
pushl
popl
mov
mov
pushf
lea
jmp
jmp
pusha
push
mov
bswap
movzbl
mov
movzbw
push
jmp
cmc
sub
pushf
call
pushf
mov
push
mov
pusha
push
push
lea
cpuid
cmp
pushf
sub
clc
cmpl
call
pushf
popl
movb
pushf
push
mov
pushl
popl
push
movw
pushf
pushf
lea
jmp
mov
call
movb
bswap
pushf
push
movb
pushf
lea
jmp
pushf
mov
rcr
rcr
call
aas
rol
mov
xchg
rcr
btc
dec
mov
inc
shr
rcl
ror
mov
stc
jmp
push
jmp
pusha
movzbw
pushl
popl
movsbl
movsbw
movl
not
movsbw
lea
mov
mov
pushf
jmp
call
cmc
rcl
pusha
pusha
movzbl
bt
xor
jmp
movl
not
call
xor
push
cwtl
push
pushf
call
pop
mov
call
pushl
test
movb
add
movl
pushl
jmp
mov
movb
push
pusha
pushl
lea
jmp
pushf
mov
push
pushf
jmp
mov
stc
clc
add
bt
rol
pusha
call
mov
pusha
pushf
jmp
aam
add
bts
cbtw
movzww
pushf
test
xchg
stc
xor
bt
pusha
call
mov
jmp
sub
bt
mov
pushf
call
test
jmp
add
call
pusha
xor
pushf
call
cmp
lahf
cmc
mov
pusha
add
pusha
lea
jo
mov
jmp
add
add
movzbw
jmp
push
pushl
popl
pushf
lea
jmp
pusha
mov
lea
pusha
mov
mov
push
push
pushf
lea
jmp
xchg
movl
mov
pusha
movl
movb
cld
call
mov
push
pushf
movb
call
xchg
mov
bswap
movsbl
movw
repz
popl
movsbw
mov
jmp
mov
pushl
popl
movb
push
lea
jmp
pushf
pushf
popl
movb
push
call
mov
push
xchg
lea
jge
repz
pushf
push
not
jmp
test
add
push
mov
movb
push
lea
jmp
movb
mov
mov
movw
movb
movb
movb
lea
jmp
mov
pushf
movw
lea
jmp
pusha
lea
jne
pusha
pushl
pusha
call
stc
pushf
cwtl
mov
push
sub
bt
bt
sub
call
cmp
shrd
jmp
inc
call
btr
shr
cmc
add
ror
ror
bt
or
add
stc
add
rcl
and
movzbw
pusha
mov
pusha
pushl
call
pushf
jmp
shl
mov
setg
adc
not
add
pushf
mov
pushl
mov
mov
movb
lea
jmp
mov
pusha
pushf
lea
jmp
mov
mov
push
pusha
pushf
lea
jmp
pushl
pop
mov
mov
jmp
lea
push
movzbw
pushf
mov
jmp
dec
pushf
pushf
lea
jmp
mov
bswap
mov
jmp
pusha
pushf
pushf
popl
movw
mov
pushl
popl
mov
movb
lea
jmp
xor
clc
bt
bt
mov
bt
sub
jmp
pusha
movb
mov
pusha
lea
jmp
lea
je
cmp
cmp
cmc
bt
sub
cmp
xchg
test
pushf
clc
mov
clc
clc
push
sub
jmp
pusha
pushf
and
pushf
lea
jge
pusha
mov
pusha
pushf
popl
call
pushf
mov
movw
pushf
lea
jg
mov
pusha
mov
pusha
pushf
lea
jmp
jmp
mov
push
pushl
lea
jmp
ror
call
repz
popl
movsbw
pusha
pushf
mov
pop
pusha
pushf
mov
pushf
lea
push
call
test
jmp
jmp
jmp
jmp
pusha
jmp
call
mov
jmp
sub
cmp
bt
stc
stc
shr
jmp
jmp
jmp
mov
cmc
call
mov
call
lea
jne
call
sbb
pushf
lea
mov
movb
sub
jmp
call
mov
movl
push
dec
pushl
pushf
mov
lea
jmp
sub
jmp
mov
pushl
pushf
mov
mov
lea
jmp
movw
bswap
mov
mov
movb
mov
movl
pushl
ret
xor
pusha
bt
jmp
pusha
call
lea
push
lea
push
lea
pusha
pop
pop
mov
bswap
movsbw
pushl
popl
bswap
bswap
movl
push
movsbl
bswap
mov
call
pushf
pusha
movb
movl
mov
pusha
movb
movw
push
lea
jmp
mov
pushf
bt
add
jmp
sub
push
jmp
bt
clc
stc
call
mov
movb
mov
cld
pushl
pushf
mov
rep
xadd
movzbw
pop
mov
shr
call
clc
sub
call
call
rcl
mov
jns
add
push
pushf
mov
mov
lea
jmp
push
call
jmp
push
inc
pushf
xor
jmp
mov
pusha
pushf
movb
lea
jmp
call
cmc
rcr
dec
mov
pushf
cmp
add
mov
mov
call
lahf
bsr
mov
bt
bswap
jmp
pushf
pushl
popl
pushf
lea
jmp
pusha
add
pushf
bt
shrd
push
pushf
push
mov
pushf
push
call
pusha
pushl
popl
jmp
jmp
mov
jmp
mov
call
pusha
mov
push
bswap
pusha
mov
mov
call
pushf
pushf
rep
jmp
cmc
sub
jmp
jmp
call
push
bswap
pushf
lea
jmp
bswap
jmp
jmp
movzbw
mov
call
cmc
sub
pusha
jmp
push
lea
jo
pushf
mov
push
pushf
lea
jmp
push
or
mov
mov
push
neg
mov
pusha
bt
movb
not
jmp
call
call
mov
pushl
popl
pushf
push
pushf
movb
lea
jmp
mov
jmp
call
pushf
call
adc
rol
call
bswap
mov
push
mov
not
movzbw
mov
movzbl
not
not
pusha
pushl
popl
pushf
push
not
movl
pushf
movzbw
movzbw
mov
jmp
call
pop
bswap
pop
lea
push
movzbw
push
jmp
call
jmp
pusha
call
mov
lea
pop
pushl
popl
lea
mov
movl
pushf
mov
pushf
movb
bswap
mov
pushf
pushl
lea
jmp
pushl
popl
pop
movsbw
push
movl
movsbl
pushf
mov
pushf
mov
jmp
mov
jmp
pusha
jmp
call
mov
call
call
pusha
mov
pushf
pusha
movb
call
mov
pushf
mov
lea
jmp
call
mov
pushf
pushl
popl
pop
movl
pushf
mov
pusha
bswap
movb
pushl
movb
lea
jmp
lea
ja
push
lea
cmp
lea
xor
stc
add
sub
cwtl
seta
or
lea
bts
bswap
pusha
dec
and
pushl
shld
xor
sub
pushf
not
mov
movzbl
movsbw
pushf
bswap
pusha
pushf
xchg
bswap
mov
pop
pushf
jmp
pushf
mov
push
push
mov
lea
jmp
pusha
xchg
bswap
bswap
mov
repz
popl
bswap
mov
mov
call
pushf
popl
jmp
btc
mov
setne
xor
mov
sbb
add
pusha
setl
seta
mov
mov
push
mov
pushl
pushf
mov
pushl
lea
jmp
seta
mov
cmp
cmc
cmp
sub
pusha
jmp
mov
movb
jmp
pushf
popl
call
pushl
popl
not
pop
pusha
movl
push
mov
lea
jp
push
bswap
pusha
pushf
push
lea
jmp
pusha
call
bswap
call
stc
add
cmp
jmp
mov
mov
push
call
movzbw
mov
mov
pop
lea
push
bswap
push
call
xchg
pop
movzbw
repz
popl
pop
mov
jmp
cmc
mov
call
jmp
rol
cmp
cmp
jmp
bswap
push
movl
push
pushf
lea
jmp
sub
pusha
xchg
jmp
mov
movw
pushf
lea
jmp
jmp
call
pusha
repz
popl
lea
pusha
not
mov
movsbl
pop
mov
mov
lea
lea
push
movzbw
push
movzbw
jmp
pushl
not
xchg
call
mov
movzbl
movzbw
push
bswap
mov
jmp
movzbw
push
bswap
mov
call
pusha
push
inc
cmp
xor
mov
movb
bswap
test
jmp
push
pushl
popl
pusha
movsbw
movl
mov
movsbl
bswap
mov
pushl
bswap
pushf
push
mov
pushf
lea
jmp
push
jmp
lea
pushf
mov
pushl
xchg
not
jmp
xadd
xadd
mov
bt
shl
test
mov
std
pushl
popf
mov
mov
movb
lea
jmp
neg
sete
lea
bt
pushf
clc
lea
jge
cmp
call
pusha
not
pushl
popl
pushf
movl
pop
movzbw
jmp
pushf
push
mov
call
movb
mov
mov
call
pushl
movsbl
repz
popl
jmp
test
not
cmc
mov
and
movl
mov
jmp
mov
call
clc
mov
neg
setge
xor
not
rcl
ror
bswap
movzbl
movsbw
not
dec
not
movsbw
dec
push
inc
adc
neg
movzbw
neg
xor
ror
movzbl
mov
mov
bt
pusha
mov
or
jmp
cwtl
seto
mov
pusha
pushf
mov
call
mov
mov
mov
mov
mov
lea
jmp
pushf
jb
pusha
pushl
popl
mov
mov
lea
jmp
rcr
cmp
mov
jmp
pushf
call
pusha
bswap
pushf
movb
pushl
pushl
lea
jmp
call
lea
jne
pushf
call
push
xchg
bswap
aas
mov
shrd
dec
mov
call
clc
add
clc
cmp
pushf
add
push
jmp
cmc
pushl
popl
push
add
cmc
clc
cmp
std
pushl
popf
pushf
movw
lea
jmp
call
jmp
inc
push
decl
jmp
bswap
mov
movl
mov
bswap
bswap
lea
mov
pusha
bswap
pushf
lea
jmp
stc
shr
push
movb
pushl
mov
pusha
push
pushf
popl
call
pushf
mov
not
jmp
mov
call
mov
movw
mov
lea
jmp
call
bswap
pusha
mov
lea
jmp
jmp
pushf
mov
mov
push
call
pusha
call
pusha
jmp
movb
mov
xchg
bswap
pushl
movzbw
pushl
repz
popl
pushf
mov
pushf
mov
mov
pop
push
not
lea
push
movzbw
pusha
pusha
mov
jmp
std
mov
pusha
btc
cmp
ror
mov
cwtl
movb
movsbw
mov
sar
das
mov
pushf
cmp
rdtsc
mov
btc
shl
mov
xchg
adc
rcl
stc
mov
rol
mov
neg
bts
push
pushl
popf
pushf
mov
call
pushl
popf
mov
mov
mov
lea
jmp
clc
test
add
jae
push
pushl
pusha
mov
push
pushf
lea
jmp
movsbw
jmp
and
xor
mov
adc
ror
mov
clc
pushf
jmp
shl
mov
mov
mov
pushf
popl
push
lea
jae
pushf
mov
pushl
popl
pusha
pushf
mov
lea
jmp
pushf
popl
call
decl
call
mov
push
movb
pusha
call
movw
push
pushf
mov
push
push
push
pushf
popl
movb
movb
jmp
jmp
btc
xor
jmp
jmp
cmc
add
call
xchg
stc
clc
add
call
call
pushf
shld
pusha
pushf
movb
push
mov
mov
mov
pushf
popl
movb
pushl
popl
mov
lea
jmp
ror
bsr
cmc
rdtsc
stc
bt
bt
push
sub
pushf
call
call
mov
call
push
xchg
pusha
movw
pushf
mov
mov
xchg
pusha
repz
popl
shrd
xchg
shld
push
mov
not
movzbw
neg
sbb
add
push
bsf
push
not
shrd
shld
sub
push
rcl
rol
rcl
pushl
btc
pusha
bts
setno
movl
xadd
shl
movzbw
btr
mov
clc
xadd
movsbw
sub
bswap
lea
pusha
sub
rol
push
rol
setne
add
bt
lea
bsr
sub
bswap
clc
mov
dec
inc
shl
dec
mov
sar
shl
bt
add
sub
clc
dec
mov
btc
add
cmc
rol
bsf
add
xor
sub
xor
xor
btc
bswap
btr
cmc
add
inc
movzbl
shld
setle
mov
cmp
pusha
push
cmc
sub
pusha
not
pushl
stc
clc
add
call
movw
call
pushf
jmp
pushf
mov
pushl
movw
mov
pushl
lea
jmp
mov
mov
push
pusha
push
pushl
ret
and
shl
mov
test
xor
mov
xor
rcl
rol
bsf
sub
dec
add
not
not
inc
inc
not
dec
rcl
movsbw
or
xor
sub
cmc
bsr
mov
pushf
stc
add
mov
pusha
pusha
pushf
mov
pushf
movb
pushl
lea
jmp
btc
mov
sbb
pusha
mov
call
cmp
push
call
mov
call
mov
pushf
pushf
lea
jne
bswap
xor
inc
mov
clc
test
and
cmc
cmp
pushf
pusha
lea
jne
not
not
clc
not
xorb
bswap
movzbw
call
mov
movl
push
push
lea
jmp
mov
movzbw
not
setl
jmp
call
sub
pusha
shl
pushf
mov
pushl
pushf
popl
pushf
jmp
jmp
pop
pushl
popl
pushf
movl
movsbl
movsbw
mov
pusha
call
not
mov
pushf
jmp
pushf
jmp
xadd
mov
call
jmp
stc
call
movsbw
bswap
push
push
pushf
pushl
popl
mov
movl
pusha
push
mov
call
mov
pusha
pusha
call
pusha
call
mov
mov
movzbw
mov
not
movzbw
movzbw
lea
push
push
pop
bswap
push
call
rol
pusha
mov
cmp
bt
add
push
push
lea
jmp
sar
mov
mov
sbb
bt
mov
bt
cmp
push
sub
cmp
cmc
jmp
notl
stc
ror
sub
cmc
mov
pushf
cmp
sub
test
and
movw
jmp
jmp
call
sar
aam
mov
adc
shld
shrd
bsr
mov
adc
call
pusha
bswap
pushf
push
pushf
lea
jmp
movzbl
jmp
test
add
push
jmp
pushl
popl
pushf
lea
jmp
push
movb
pusha
mov
pushf
mov
movb
lea
jmp
movb
mov
pushf
pusha
xchg
mov
pushf
repz
popl
pushf
call
mov
pusha
mov
mov
push
bswap
pushf
lea
jmp
mov
pushf
pushl
ret
push
push
mov
bswap
call
xchg
pushl
lea
repz
popl
pusha
movsbw
bswap
mov
pushf
mov
movsbw
lea
push
lea
push
pushl
mov
mov
call
jmp
jmp
movw
mov
pushl
pushf
pusha
lea
jmp
pusha
stc
cmc
bt
sub
clc
cmp
add
call
pusha
pushf
push
mov
pushf
jmp
pushl
popl
push
pushf
push
lea
jmp
lea
ja
cmc
seto
clc
mov
or
lea
pushf
cmc
rcr
sub
sbb
lea
movzbw
movsbw
and
clc
sbb
sub
pusha
mov
pushf
pushf
popl
call
bsr
mov
rcl
inc
seto
mov
cmp
pusha
cmc
call
mov
movl
pushf
pushf
push
lea
jmp
mov
push
pushf
push
lea
jmp
push
clc
cmc
shr
cmp
movw
mov
clc
or
test
cmp
xor
lea
jns
inc
pushf
call
ror
mov
call
pushf
call
pushl
popl
pushl
pushf
pushl
mov
lea
jmp
push
stc
sub
pushf
clc
sub
mov
mov
mov
movl
lea
jmp
pushf
mov
push
call
or
mov
push
mov
mov
sub
lea
jnp
push
add
push
movw
pusha
push
pushf
popl
pushf
pushl
popl
movb
pushl
pushf
lea
jmp
pushf
call
pushf
lea
mov
movw
mov
pop
not
push
jmp
push
mov
pushl
pushl
popl
movw
lea
jmp
push
setno
rol
mov
mov
dec
movzbw
inc
btc
pushf
ror
clc
bsr
add
ror
mov
mov
cmc
jmp
bswap
mov
lea
jmp
lea
jnp
bswap
pushf
pushf
lea
jmp
bt
cmc
bt
pushf
add
pusha
pusha
push
lea
jmp
mov
movb
mov
pushf
lea
jmp
call
mov
jo
pusha
sub
test
cmp
cmc
stc
add
jmp
mov
lea
jns
pushf
mov
call
pusha
movl
push
call
movzbw
mov
dec
rcl
mov
stc
cmc
cmc
pusha
sub
bt
cmp
pushl
shl
call
movb
jmp
pop
pushf
pushl
popl
pusha
movl
movsbw
not
push
pushf
mov
jmp
call
mov
jmp
xor
call
pushl
mov
pushl
pusha
mov
movzbl
lea
not
repz
popl
call
pushf
pushf
popl
movb
push
call
push
call
inc
pushf
mov
neg
pushf
bt
test
xor
pushf
add
jno
cbtw
cmc
jmp
call
bswap
push
pushf
push
lea
jmp
clc
neg
stc
call
call
mov
push
pushf
lea
jne
call
