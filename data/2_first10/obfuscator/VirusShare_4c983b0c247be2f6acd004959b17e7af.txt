incl
push
outsl
imul
idiv
outsb
dec
gs
bound
jae
imul
jo
xor
cs
insb
call
push
push
ja
push
jb
jbe
insb
gs
insb
dec
outsl
fs
jne
cmp
dec
dec
xor
dec
xor
outsb
mov
cs
and
data16
popa
jb
pop
dec
imul
mov
sbb
pop
inc
jne
pop
outsb
je
imul
out
jl
outsl
outsb
pop
inc
jo
and
je
jae
pop
ja
inc
inc
push
jg
fs
std
jae
je
jo
pop
vmread
cmp
inc
mov
arpl
dec
dec
inc
add
bound
je
jnp
fistpl
pop
sub
adc
and
jmpw
add
sub
inc
inc
dec
dec
inc
mov
inc
inc
inc
sub
dec
pop
push
add
mov
fucomi
push
dec
push
dec
addr16
data16
das
dec
outsl
jmp
push
je
mov
inc
mov
and
jne
and
sbb
fnsave
insb
push
and
and
ljmp
push
push
inc
inc
dec
pop
push
push
push
or
scas
std
mov
dec
pop
add
cmp
shlb
imul
jg
xor
xor
mov
das
jae
xor
inc
xor
push
dec
dec
push
inc
mov
pop
xor
mov
pop
jle
sar
insb
jo
popa
inc
arpl
inc
push
inc
dec
inc
packssdw
inc
dec
aas
adc
pop
mov
adcl
fwait
dec
mov
jne
and
dec
jge
sbb
or
push
push
push
inc
dec
inc
pop
inc
dec
pop
jg
fidivs
push
inc
add
dec
inc
insl
jae
xor
sbb
je,pn
aas
inc
cmp
jmp
sub
jo
inc
sub
or
test
sub
fucomp
insb
pop
pop
or
mov
outsl
jo
push
and
sar
mov
push
add
add
add
add
add
pop
cs
decl
or
or
or
or
or
movups
adc
dec
pop
fwait
jl
aas
add
add
dec
shll
or
push
push
xlat
xor
shrl
ds
jle
aas
xor
xlat
mov
add
add
pop
or
pop
pop
pop
shll
mov
sti
or
pop
add
add
pop
or
or
shll
adc
pushl
rcrl
push
inc
cwtl
xlat
jae
pop
dec
xchg
fcmovb
xor
and
ret
adc
ja
js
fs
jo
decl
ret
sub
xor
cmp
jne
mov
incl
sub
mov
push
mov
mov
test
je
mov
inc
inc
decl
icebp
cmpl
out
mov
out
jne
dec
mov
pop
ret
out
outsl
pop
in
add
or
cmp
mov
je
aas
fimuls
imul
add
dec
jne
adc
adc
mov
pop
sub
mov
pop
cmp
adc
ljmp
enter
jb
sub
add
jmp
dec
or
in
sbb
xor
insl
or
insb
mov
mov
mov
add
divb
lock
idiv
movb
sbb
xchg
pop
ja
call
sub
rclb
mov
neg
xchg
sti
je
lea
push
push
add
lods
push
push
fwait
in
ret
outsl
adc
push
movl
add
shlb
mov
pushl
push
call
add
ret
fstps
mov
mov
pop
pop
call
std
push
fcmove
ret
sbb
mov
mov
mov
clc
add
mov
jb
lock
dec
push
mov
adc
test
mov
pop
adc
ss
test
push
mov
mov
lcall
fistpl
push
cmpl
lock
xor
push
ss
dec
sbb
or
in
insb
das
pushl
push
jbe
lea
in
aaa
adc
imulb
adc
add
cmp
jb
fisubrl
push
and
push
push
dec
pop
mov
in
jmp
cmp
je
movl
ds
sbb
in
add
aas
and
or
adc
repz
dec
inc
insl
insl
rcr
jmp
cmpl
repz
ja
addr16
ja
or
mov
jmp
mov
mov
push
std
insb
in
fcoms
or
xor
fwait
into
sbb
dec
inc
adc
and
pop
or
mov
bswap
adc
pop
and
jmp
addb
sbb
movsbl
popa
or
push
daa
and
in
fucomp
jmp
adc
and
inc
add
fstpl
mov
and
out
jo
jnp
and
dec
repnz
aas
pop
mov
test
inc
sbb
mov
ret
bound
and
sub
test
test
idivb
fimuls
xlat
push
lock
je
je
fisubl
sbb
or
push
clc
in
ficoml
iret
fsubs
push
jne
notb
or
dec
addr16
mov
inc
push
add
pop
mov
push
cmpb
push
into
jge
add
mov
cmpb
sbb
out
pop
push
adc
sbb
and
xchg
and
outsb
cs
pop
or
lea
out
push
rep
stos
sbb
std
pop
loope
pushf
stos
in
or
lods
fstpt
add
mov
push
out
mov
pop
test
ret
scas
or
das
mov
fnsave
ret
punpckhbw
add
mov
mov
adc
jle
dec
push
incl
jl
pop
jne
fisttpl
mov
add
ss
or
adc
loop
hlt
and
adc
sub
sahf
xor
mov
dec
mov
mov
cmpsl
fcomip
fistps
pushl
fucomi
stos
test
and
inc
fs
jbe
pop
adc
and
sbb
sbb
out
jle
pusha
mov
mov
sbb
fmuls
inc
add
pop
js
outsb
pusha
fdivr
fdivs
adc
adc
mov
fnstsw
ret
mov
jmp
xor
cmp
sti
jmp
xchg
rorl
mov
add
push
mov
lea
adc
mov
fimull
or
add
mov
sub
pop
push
pop
nop
scas
shll
pop
dec
add
jmp
mov
sbb
lret
sub
in
add
mov
dec
enter
insb
addr16
fsubs
and
cmp
sbb
xor
or
mov
cmp
mov
dec
nop
xchg
xchg
adc
popa
mov
cmp
adc
xor
sbb
pop
test
mov
lcall
xor
pop
or
pop
jne
sbb
pop
mov
dec
loop
decl
inc
add
inc
add
jne
jle
pop
popa
fidivrl
jne
cmp
add
cmp
sbb
repnz
push
push
push
sar
xor
dec
push
enter
and
shll
jo
pop
pop
add
mov
insb
es
cmp
sbb
je
pop
add
or
push
shrb
psubsb
mov
jge
pushf
or
into
orb
mov
sbb
and
pop
and
jbe
push
add
in
rcrl
xor
pop
sbb
add
mov
push
test
outsl
incl
add
daa
push
add
push
pop
add
add
push
fucomi
adc
or
loope
rdpmc
jmp
adc
iret
sbb
hlt
fwait
jmp
xchg
rorl
insb
addb
lock
mov
jl
add
or
js
outsb
xchg
pushf
je
in
lock
mov
pop
xor
cmp
sahf
out
cltd
xchg
adc
mov
ret
lods
enter
pusha
sbb
out
adc
cmp
or
mov
pop
mov
adc
out
inc
sub
loop
add
test
fstpl
cli
push
jmp
cmp
sbb
sub
add
push
jg
xchg
inc
mov
ficomps
testb
fcomp
jmp
xor
jne
xrelease
leave
pusha
cs
xor
inc
cld
jp
jbe
jne
das
mov
sub
push
pop
sub
or
xchg
or
and
neg
sbb
and
add
cmp
lods
sbb
push
push
adc
or
cmp
xor
in
xor
fcomps
sub
pusha
sub
pop
push
push
or
leave
or
shll
repnz
dec
jl
leave
push
sub
push
add
sti
shld
or
cmpl
sbbb
mov
jmp
ja
lret
jmp
jno
inc
das
or
adc
or
mov
pcmpeqb
add
ror
pop
xor
les
or
inc
mov
sbb
fs
xchg
jno
popa
arpl
or
enter
hlt
sti
push
fmuls
xchg
fstl
movb
aas
and
test
int3
jbe
inc
pop
pop
push
dec
lods
and
mov
mov
loop
xlat
cmp
xor
fisttpll
push
or
aas
pushf
popa
mov
mov
mov
pop
pop
fnsave
adc
adc
lahf
lock
inc
sbb
imull
pop
je
cmpsl
inc
xchg
add
outsb
adc
stc
push
lock
jo
ret
cmpl
rclb
pop
loope
mov
pop
or
scas
inc
pop
sti
scas
push
jns
aaa
dec
push
push
sub
js
xchg
data16
dec
ss
add
rol
dec
lds
enter
xor
jg
adc
cmp
xchg
fcomp
test
add
mov
jo
hlt
aaa
fdivl
sbb
hlt
mov
mov
jp
aam
test
inc
cmp
pop
cltd
scas
sahf
jp
test
out
imul
mov
mov
push
mov
push
lret
addr16
mov
inc
insb
inc
mov
xchg
test
adc
sub
push
jbe
movsl
jb
loopne
call
pop
push
push
rcrb
push
arpl
rcrl
js
pop
ljmp
sar
jno
add
ret
inc
xchg
pushl
mov
adc
rolb
incl
or
fadds
jl
add
or
sbb
mov
jg
or
nop
pop
or
push
jne
cmp
sbb
sub
incb
or
inc
jl
mov
movsl
stos
insl
push
xor
cld
rcll
push
loop
clc
dec
mov
pop
das
ds
xor
jnp
and
dec
aam
xchg
cmp
andb
mov
add
data16
popa
push
mov
cmpsl
fmuls
stos
sbb
fldpi
sbb
insb
aaa
icebp
cmpsb
test
mov
dec
and
daa
and
add
subl
cmp
jne
testb
in
or
jno
std
mov
scas
sbb
push
adc
rorl
inc
inc
jne
daa
xor
and
in
sub
rorl
roll
clc
xor
cmp
clc
mov
scas
jecxz
movb
pop
cmp
adc
sbb
cltd
mov
push
and
lods
pop
cmpsb
aam
xor
testl
loopne
int3
movsb
ss
lods
les
adc
sbb
push
daa
or
push
int
inc
lock
mov
push
sbb
inc
push
pusha
inc
mov
nop
mov
nop
pop
jbe
ret
xor
pop
push
dec
mov
lods
rcr
pop
repnz
test
push
scas
xor
insl
gs
std
lods
push
xlat
mov
es
adc
jo
xchg
and
je
push
or
test
shrb
mov
pop
mov
sub
pop
and
push
xchg
mov
sub
movsb
dec
xor
std
jmp
push
push
cli
int
mov
test
and
loopne
mov
and
shrb
push
and
cs
jbe
data16
mov
addr16
das
sbb
mov
mov
movsb
jbe
orl
lock
pop
fsubrs
ficoms
bound
push
add
inc
push
or
insl
andl
movsb
rolb
push
fmuls
sub
mov
sbb
fdiv
test
popf
inc
push
sahf
in
sbb
popa
test
or
je
push
jo
mov
push
ds
or
xor
sbb
or
push
dec
je
inc
into
push
shrl
push
lods
sub
or
dec
lock
popf
jle,pn
dec
inc
sarl
inc
cmp
pusha
adc
lds
pop
loopne
cmp
xchg
pop
pop
push
or
outsb
jle
push
inc
push
xchg
or
fwait
sbb
adc
and
mov
adc
sbb
dec
jg
jmp
push
dec
push
mov
push
fnstenv
jae
dec
test
mov
in
dec
mov
fs
shlb
pop
dec
cmp
mov
aaa
adc
popl
dec
mov
data16
hlt
xor
or
adc
and
or
push
adc
xchg
jmp
sub
dec
movsb
rorb
mov
mov
mov
dec
or
mov
adc
mov
mov
pop
push
insb
sbb
jne
adc
mov
or
mov
or
mov
adc
mov
add
jo
idivl
cmp
cmp
rolb
push
pushf
dec
adc
mov
push
push
fisttpl
push
inc
add
jae
je
cmpsb
pop
or
or
push
adc
xor
sub
das
add
in
jne
cmp
mov
push
testb
lds
je
push
jmp
mov
je
push
mov
and
stos
mov
sub
test
cs
adc
ljmp
icebp
dec
ret
or
adc
push
mov
mov
repnz
test
sub
jg
mov
push
sub
aas
fmull
mov
sub
lock
aas
sub
adc
sub
lods
shrb
clc
push
fsubrs
or
cmp
or
or
insb
or
jp
push
sub
cltd
push
outsb
hlt
fldt
ret
stc
add
xchg
pop
jns
leave
fidivrl
lea
cmp
jle
push
push
call
sub
and
out
mov
lea
cmp
rorl
xor
pop
push
push
mov
push
iret
jl
sbb
fcoml
mov
pop
dec
call
in
pop
clc
adc
cmp
ja
mov
aas
cmp
je
and
or
pop
pop
aam
cwtl
sbb
add
mov
lock
mov
and
push
rep
dec
int3
sbb
mov
ret
js
jbe
adcb
adc
push
fisubrs
add
xchg
subl
dec
jl
inc
xchg
sti
jle
sbb
xchg
movsl
mov
mov
cmpb
je
or
je
push
popf
imul
inc
cmp
adc
inc
xchg
out
fdivr
jne
lret
sarb
lret
pop
sbb
xchg
push
imul
sti
int
mov
jg
movups
jmp
cmp
ss
fidivrl
cmp
jne
or
jmp
fyl2x
rcrb
cmp
decl
and
insl
or
ljmp
cmp
push
call
shl
mov
mov
inc
dec
jne
mov
int3
or
xlat
btc
jae
add
mov
lsl
jge
mov
fnstcw
jp
nop
sub
mov
fcmovu
add
sbb
test
push
mov
push
inc
and
and
pop
std
psubb
lea
imull
dec
das
inc
xor
fnstsw
push
mov
xor
push
call
lock
jmp
out
adcl
adc
iret
lods
push
inc
les
pop
mov
and
pop
imul
add
xor
adc
push
imul
push
in
out
inc
cmp
test
mov
mov
fs
mov
jmp
pushl
jo
mov
sub
xchg
int
pop
ret
jbe
loopne
addb
je
clc
sbb
je
mov
mov
int
add
pusha
or
mov
jnp
mov
or
push
pop
jmp
mov
add
adc
imul
in
xchg
xlat
mov
jnp
in
mov
cmpb
inc
sar
daa
fisttpl
mov
adc
lock
pusha
jae
cmp
stc
lock
sub
xchg
arpl
mov
stos
lock
dec
add
mov
fwait
or
sti
sbb
adc
clc
js
xchg
mov
pop
insl
je
ret
mov
jbe
cmp
xchg
aad
add
ret
mov
push
inc
push
mov
mov
or
pop
or
mov
test
mov
shr
sub
movsb
mov
ret
xchg
push
xchg
pop
mov
cmp
add
ret
jecxz
adcb
inc
aad
jmp
xchg
xchg
in
pop
cld
rcr
dec
mov
or
les
push
mov
stc
pop
mov
addr16
and
jne
test
add
mov
ljmp
pop
inc
jne
push
shlb
mov
je
mov
mov
cld
test
xor
addb
inc
pop
or
daa
fs
adc
adc
adc
or
inc
addb
lret
bound
mov
fadd
subl
mov
fldlg2
pop
stos
inc
push
cmpsl
and
pop
mov
mov
xor
push
cmp
fbstp
stos
jmp
push
movsl
adc
jae
jmp
or
and
loop
gs
and
sahf
and
xor
pop
test
push
pop
in
test
lahf
aam
cmp
adc
or
jg
ret
push
cmp
jle
or
or
inc
mov
dec
inc
aaa
test
loopne
sbb
cmpb
inc
cmp
ficoml
iret
out
jmp
mov
lret
add
imul
adc
cmp
add
or
cld
lods
insl
cmp
add
add
faddl
xor
movsb
jb
sub
mov
aam
or
jno
rorl
fiaddl
adc
imul
mov
mov
push
movb
mov
xorl
inc
stos
adc
loopne
inc
shll
cmp
cli
mov
imull
aaa
mov
pop
je
jmp
lcall
pop
and
inc
add
test
xor
xlat
into
mov
aas
jmp
comiss
add
movb
sti
inc
inc
inc
jmp
sbb
mov
and
inc
sub
and
pop
pop
push
aam
mov
outsb
outsb
ljmp
test
add
xchg
xor
cmp
jge
adc
lahf
push
add
adc
out
push
pop
sub
stos
cmpb
add
fmuls
xadd
call
add
and
in
int
mov
pop
inc
add
pop
sub
sbb
cmp
int
add
push
test
rorl
outsb
or
mov
pop
jg
push
mov
jmp
cmp
sub
xchg
adc
pop
and
mov
dec
lret
pop
imul
inc
jp
add
je
add
je
and
adc
or
pop
arpl
jmp
andl
or
in
scas
hlt
sub
lret
adc
jmp
or
jmp
sub
jl
sub
stos
xor
daa
xchg
sub
push
add
daa
dec
daa
dec
xor
add
fwait
imul
stos
push
cmp
sbb
push
jo
jne
and
mov
or
loopne
test
mov
add
jl
push
adc
leave
shl
inc
je
add
cmp
push
pop
nop
push
pop
loope
fs
shlb
clc
adc
rorb
xor
push
push
lret
sti
es
insb
cltd
lock
dec
inc
mov
mov
add
mov
movsb
or
addb
pop
rolb
mov
push
xor
xor
sub
leave
test
leave
push
sub
push
push
push
mov
sbb
in
insb
sub
daa
jne
pusha
mov
in
cwtl
mov
out
xlat
xor
scas
fcmovnu
xor
andl
jnp
shr
adc
orb
call
add
imul
pop
ret
add
popa
mov
in
pop
fsubrs
mov
mov
ds
lock
in
loopne
rcll
out
sbb
jmp
pop
xor
ret
or
test
mov
xchg
push
push
dec
aam
add
jle
push
fdivl
cmc
sub
aad
adc
xor
popf
incl
sbb
fisubs
pusha
jno
jb
xchg
pop
cmp
xchg
xchg
ds
iret
xchg
in
adc
andl
inc
pop
push
in
sbb
add
fucomip
jecxz
div
ficompl
rorb
scas
and
add
add
add
out
std
jb
push
aam
xor
push
mov
push
and
xor
cs
pusha
xchg
fadds
push
xor
mov
mov
lea
les
or
lods
or
addl
push
add
in
cmp
out
push
cwtl
mov
or
sbb
pop
mov
push
cmp
mov
or
cs
inc
aam
ret
and
dec
adc
call
or
les
ret
popf
adc
adc
mov
or
and
mov
sub
fnsave
scas
movsb
and
push
adcb
cs
or
pop
xlat
dec
mov
adc
pop
add
test
xchg
mov
inc
pop
mov
scas
ss
cmp
hlt
in
xchg
inc
adc
addr16
sub
jecxz
in
sbb
push
dec
mov
lea
jmp
dec
pop
fs
inc
adc
fldt
adc
bt
add
sub
shl
mulb
adc
jo
xor
push
adc
jb
push
hlt
pop
jbe
cmp
mov
pop
ret
fldpi
inc
shlb
arpl
fs
mov
jmp
xor
inc
add
sbb
pop
add
adc
or
jge
sub
lret
or
inc
mov
mov
adc
mov
insl
scas
dec
push
lds
pop
scas
cltd
sbb
int
and
adc
cmp
test
sbb
mov
mov
les
data16
enter
pop
pop
js
xchg
jno
dec
sbb
mov
inc
mov
pop
push
outsb
add
jge
leave
cmpsl
pusha
inc
pop
fs
pop
mov
ljmp
fistpl
ss
jbe
inc
mov
jmp
push
and
jmp
adc
test
loope
dec
lret
xor
mov
or
or
add
xchg
sbb
sbb
sbb
out
sbb
push
sub
xor
sbb
push
insl
xor
fwait
inc
or
mov
repz
negb
or
hlt
loopne
sub
mov
adc
adc
sub
cwtl
inc
and
ret
arpl
or
sbb
orl
ja
aad
add
test
add
xchg
movsl
ds
test
pop
mov
stc
or
les
aas
insl
sub
jmp
and
or
and
sahf
lcall
add
adc
mov
shll
dec
inc
adc
sbb
push
jbe
xadd
addr16
and
rorb
cmp
insl
fistl
sbb
jl
sub
adc
inc
icebp
ret
push
push
and
cmpsb
inc
testb
jne
add
cld
or
mov
int3
mov
pop
adc
push
jp
loop
cmp
jnp
or
push
cmp
mov
lock
add
xor
fsub
movsl
ret
roll
pop
xchg
into
fdiv
stos
mov
inc
mov
add
ss
int
jb
in
fadds
xor
or
pop
mov
cwtl
and
pop
fildll
xor
or
adc
sbb
adc
xor
jne
jp
out
xlat
mov
push
and
add
sbb
out
pop
je
das
arpl
pop
add
lahf
clc
shl
mov
push
pop
mov
aaa
and
lds
mov
loop
xchg
add
dec
mov
mov
push
mov
push
sbb
nop
mov
sub
adc
and
ret
sarl
and
pop
xchg
andl
lea
push
shlb
and
das
fisubl
and
arpl
jle
push
cmp
sub
ss
dec
push
mov
or
or
cli
xor
dec
jbe
adc
sub
aas
imul
mov
xchg
push
mov
cmp
aam
movl
lret
scas
ret
or
lret
sti
mov
or
dec
cmp
in
pushf
mov
pop
push
fcoms
mov
out
in
and
xor
pop
xchg
leave
cmp
je
inc
sbb
sub
fwait
jne
jl
dec
sarl
nop
loopne
cld
rcrl
cmp
add
pop
les
and
insb
jl
and
adc
cmp
lret
mov
out
insb
aas
call
in
test
pop
push
mov
nop
mov
adc
sub
pop
and
push
add
int3
cltd
scas
adc
fcmovb
iret
ljmp
mov
adc
add
mov
jne
fsts
pusha
jae
mull
dec
mov
add
hlt
xor
push
adc
fstps
adc
mov
lea
cwtl
shl
inc
data16
cld
outsb
xor
add
pop
mov
dec
inc
jmp
add
fistps
mov
mov
aad
lret
add
jmp
and
lcall
out
out
mov
das
add
lea
xchg
push
or
jg
jbe
lea
push
push
aas
mov
push
addb
lea
mov
fidivrl
lds
adc
fwait
lea
xor
push
push
mov
movsb
pop
mov
data16
xchg
ret
pop
or
sub
push
dec
fmull
je
push
aam
stos
xchg
clc
daa
sbb
push
ret
and
sbb
test
sti
dec
bound
sbb
jg
xor
mov
insb
nop
fs
mov
and
jbe
mov
daa
sbb
addr16
and
adc
jl
xlat
jmp
mov
fldl2e
and
cmp
xchg
push
pusha
pop
mov
inc
jg
test
pop
cmp
mov
dec
add
or
jle
ja
adc
jb
and
int
lock
mov
shr
outsl
sbb
mov
xor
mov
xchg
mov
das
add
testl
mov
xlat
sub
add
pop
mov
jo
lea
sti
fldt
repnz
add
pushl
pushl
shll
mov
mov
adc
sub
add
rorl
mov
dec
add
mov
daa
pop
ret
xor
hlt
push
push
sbb
fwait
and
outsb
rcll
or
sbbb
cmovp
push
mov
bound
jl
xor
pop
scas
dec
xchg
jbe
mov
leave
adc
outsb
test
or
es
xchg
sarl
cld
pop
or
imul
add
lea
pop
lea
mov
adc
mov
add
mov
jo
bound
andl
cwtl
add
pop
dec
inc
xchg
cmp
sbb
ds
aad
jbe
loop
rcrl
dec
push
cmp
xchg
in
inc
add
jo
mov
testl
inc
cmc
shl
bound
push
repnz
fwait
insl
out
andl
sbb
adc
lcall
cwtl
mov
arpl
mov
in
or
xlat
hlt
add
sub
loopne
dec
mov
push
adc
fldcw
and
rorb
and
inc
cmpsb
dec
sbb
mov
cmp
push
cmp
xchg
shl
insb
cmp
push
sbb
arpl
mov
in
jmp
and
addb
add
shrl
cmp
sbb
or
cs
inc
sbb
movsb
clc
std
loopne
ret
or
add
fldcw
stos
add
inc
and
xor
sub
jg
sub
xor
fistl
sub
js
mov
and
mov
mov
xchg
jbe
xor
sbb
add
shll
mov
shll
call
testl
push
cmp
clc
jge
jmp
add
cld
popf
add
in
push
push
inc
adc
mov
push
mov
pop
cmc
mov
xchg
rolb
ret
and
inc
jne
xor
xor
jmp
adc
add
adc
push
clc
jl
test
adc
dec
enter
dec
mov
push
push
into
xor
push
test
push
lods
mov
pop
jl
xlat
testl
in
mov
cmp
into
push
pop
mov
adc
mov
andb
orb
les
out
inc
xor
adc
cmp
fists
sbb
clc
push
or
mov
cld
mov
sub
adc
cltd
aas
int3
push
mov
mov
add
daa
loopne
sub
mov
sub
push
or
jl
xchg
push
add
aam
sbb
cli
xchg
mov
lea
cli
cmp
setne
daa
push
enter
rcll
aam
es
xchg
ret
mov
xchg
xchg
testb
les
je
cmpl
push
std
sbbl
rorb
icebp
add
mov
mov
das
icebp
pop
sub
je
add
sub
ret
scas
mov
pop
movsb
mov
sbb
and
xchg
cmp
or
push
pusha
xorl
fwait
adc
pop
push
xor
and
dec
imul
aaa
outsl
or
je
loopne
add
mov
sub
push
stc
mov
inc
imul
pop
aaa
fcomps
push
pop
ljmp
shll
xor
pop
inc
xor
or
dec
mov
or
movaps
fiaddl
pop
fs
jle
cmp
iret
outsl
data16
adc
stos
inc
shr
cmovs
add
fs
aaa
add
fwait
out
push
cld
in
xchg
add
push
scas
cli
push
inc
cmpsl
popf
lods
jbe
sti
std
and
ret
scas
shl
push
je
pop
loop
jo
mov
sbb
push
cmpsl
rcrl
and
pop
adc
fwait
xor
loopne
js
test
outsb
out
add
xor
inc
cs
adcb
add
sbb
pop
push
sbb
je
push
pop
jb
mov
sti
pop
jne
mov
adc
leave
add
mov
xor
or
inc
sbb
push
ds
inc
mov
mov
in
cli
dec
cmp
mov
xchg
cmc
inc
lret
and
and
imul
out
xchg
xor
mov
roll
lea
or
pop
aam
push
aam
adc
or
mov
sbb
adc
ret
jp
sbb
or
adc
jbe
push
fistpll
or
or
gs
mov
shlb
push
mov
test
sub
shll
cmp
pop
loope
and
pop
in
cmpsl
mov
or
pop
inc
stos
add
push
test
pop
dec
xor
sub
aas
sbb
inc
mov
rep
push
mov
fcmovnu
bound
jg
jo
inc
jnp
mov
repnz
push
or
mov
lods
je
aam
mov
xchg
or
inc
adc
frstor
xchg
inc
adc
daa
test
stos
cli
push
xchg
es
inc
pop
push
test
jb
pop
rclb
cmp
push
pop
les
cmp
mov
rorl
dec
add
jmp
mov
and
lea
xchg
clc
mov
mov
in
jo
add
fidivrs
adc
cwtl
or
and
xor
outsl
punpckhbw
cwtl
cmp
addr16
mov
insl
adc
xorl
les
andb
push
int
inc
cmp
jo
adc
clc
cmp
fldt
insb
add
cmp
push
dec
push
mov
push
push
lock
inc
cmp
arpl
xchg
jbe
fldenv
inc
push
mov
add
data16
dec
or
enter
push
dec
adc
xchg
sub
sub
inc
mov
stos
and
out
add
mov
sub
movb
ja
push
jg
mov
jo
aas
movsb
outsl
repz
xor
adc
test
push
pop
dec
jbe
shll
mov
popf
mov
aam
sub
ja
int3
out
push
imul
xor
pop
jbe
push
dec
add
out
mov
repnz
test
lret
pop
dec
dec
push
cmpsb
push
mov
lea
cmp
lods
jb
inc
je
mov
js
sahf
test
jbe
ret
jmp
push
pop
in
ds
cs
mov
lds
negl
loopne
lcall
sbb
mov
pop
sub
imull
jb
out
xor
imul
sbb
orl
xor
sub
push
in
pusha
cmp
push
inc
cmp
insb
pusha
pop
inc
jecxz
pop
and
push
jb
cmpsl
fiaddl
push
sub
inc
cltd
mov
cmp
push
adc
adc
in
mov
das
cmp
sbb
mov
data16
and
dec
xor
dec
inc
int3
movsl
xchg
sbb
fsubrs
mov
jns
mov
lock
fmull
push
mov
out
inc
out
adc
inc
pop
insl
ret
add
cmp
mull
adc
dec
ljmp
lahf
lock
js
and
sbb
mov
or
popf
fwait
mov
xor
inc
out
push
cmp
shrl
jle
pop
and
icebp
mov
mov
jmp
jnp
fwait
pop
or
rolb
ds
add
inc
mov
dec
sub
push
push
or
faddl
dec
mov
out
addl
push
popf
je
add
fildl
leave
loopne
shll
mov
adc
insl
jbe
cmp
jo
adc
aam
xor
adc
or
ror
sbb
iret
adc
jne
or
aad
test
jno
pushf
fstps
xor
mov
inc
and
mov
and
inc
test
dec
pop
sti
fsubs
adcl
jne
push
adc
int3
adc
movsl
adc
jbe
sarl
mov
mov
out
data16
push
test
rcrb
sbb
push
test
in
pop
push
cwtl
mov
jo
mov
loopne
js
imul
dec
or
xor
adc
imul
xchg
add
ss
mov
or
sub
add
inc
push
push
sbbl
rcrb
cmpsb
cmp
or
nop
out
push
fisubs
jne
lret
test
mov
movl
sbb
pop
icebp
and
insl
mov
adc
es
popf
int
int
push
pop
or
aaa
cs
mov
sub
mov
int
sub
stos
mov
push
jl
dec
lret
nop
pop
jnp
sahf
and
les
loop
cmp
ret
outsl
shlb
or
fnstcw
cltd
sar
enter
jne
lea
push
sti
sub
rorl
add
pop
push
fisttpl
adc
push
mov
or
hlt
pop
fsts
shrb
pop
push
cmp
ret
add
cmp
fnstcw
jmp
inc
js
cmp
andb
pusha
jl
orl
sbb
rolb
sbb
jmp
pushf
mov
orb
xchg
dec
and
push
xchg
popa
sub
sbb
xchg
aam
fldcw
test
inc
sbb
jecxz
pop
and
push
xor
adc
jecxz
push
xchg
jnp
and
loopne
add
and
adc
dec
push
int
inc
sub
push
int
and
lret
fsubrs
mov
test
cmp
ret
out
cmp
jmp
pop
fstpt
and
sarb
fstl
mov
push
mov
sub
pop
mov
cmpsb
jnp
arpl
stos
aam
rcll
bound
sub
xchg
or
and
push
push
lods
xor
jmp
xchg
hlt
or
xlat
sbb
sbb
cmp
mov
lea
push
iret
push
mov
inc
je
or
stos
clc
mov
out
cmp
push
jnp
or
push
pop
dec
cmp
push
out
movhps
and
je
push
nop
mov
pop
movsl
mov
inc
loopne
cmc
pop
push
mov
sti
shrl
xorb
fbstp
inc
jae
popf
dec
cmp
pop
sbb
addr16
mulb
js
sar
popa
or
mov
enter
jo
lods
push
push
or
add
daa
push
icebp
xor
sbb
or
xchg
call
inc
subl
icebp
test
iret
adc
les
and
cmp
inc
cmp
xchg
mov
push
test
insl
pop
dec
loopne
je
push
add
dec
mov
stos
xchg
jge
dec
sub
scas
shlb
jns
push
das
cld
mov
and
mov
adc
push
dec
xor
ret
add
xor
test
jnp
jnp
cmp
scas
pusha
xchg
test
add
cmp
shll
shrl
inc
negb
push
or
add
ja
and
negb
cmp
das
cmp
mov
dec
push
outsl
dec
sub
dec
mov
xor
push
pop
mov
adc
sub
neg
out
or
cmpb
adc
adc
jle
inc
or
jg
jmp
push
hlt
push
mov
andl
sbb
pop
rolb
push
shll
mov
push
pop
push
cmp
sbb
addr16
jbe
lock
addr16
popa
movsb
xchg
adc
lods
inc
dec
mov
mov
push
sahf
jo
cmp
xor
cmp
push
fs
lock
inc
hlt
adc
xor
movb
add
out
imul
mov
int3
push
arpl
jne
sbb
test
movsl
push
lea
xor
cmp
test
std
outsb
aam
xchg
sarb
out
popf
int3
mov
or
xchg
jb
enter
in
rolb
movsl
mov
mov
xchg
sub
fildl
pop
lea
in
and
insb
lahf
mov
or
push
aam
fidivrl
xor
or
rcr
shlb
cmp
push
xchg
inc
pushf
in
jne
sbb
or
mov
jl
js
add
push
je
add
inc
movsb
jnp
adc
fistpll
cmp
jne
sub
repz
popf
pop
mov
mov
push
sbb
cs
xor
repnz
rcrb
pop
arpl
adc
dec
push
xorb
je
test
ret
xor
cmp
mov
dec
or
ja
xlat
push
icebp
push
jne
or
push
pop
jbe
push
inc
subl
inc
lret
outsl
inc
jl
pop
testb
pop
fstp
mov
jmp
hlt
cmp
adc
jp
add
test
inc
cmp
sub
mov
inc
adc
je
push
sub
mov
pop
sub
outsb
cld
and
or
call
inc
adc
lcall
inc
inc
sbb
xor
sub
mulb
and
outsl
ljmp
mov
cmp
add
movsbl
jmp
or
jl
std
outsl
jmp
add
sub
cmp
jl
add
jg
shl
push
add
fistpl
xor
leave
cmp
jnp
dec
add
sbb
lods
mov
push
or
or
repnz
xchg
sbbb
pop
jo
add
dec
enter
inc
adc
data16
clc
in
sub
push
mov
xor
ret
fwait
nop
clc
leave
jge
fsubs
xor
and
add
push
mov
enter
add
loope
in
or
push
mov
pop
jmp
add
push
adc
es
jae
xor
cmpsb
sub
inc
push
cmp
jle
test
pop
in
mov
or
add
or
dec
dec
or
leave
sbb
xchg
sub
jno
or
pop
cmp
jae
and
cmp
fmull
dec
decl
push
dec
cwtl
add
pushl
nop
in
jne
pop
jmp
mov
scas
pop
xorb
push
or
sbb
imul
sti
pop
cmp
push
stos
push
push
subl
inc
adc
adc
arpl
adc
jb
inc
push
sbb
in
mov
imul
adc
test
jne
int
jo
push
add
hlt
lock
sub
enter
je
fs
into
and
mov
insl
add
pop
leave
js
push
adc
add
scas
and
roll
xchg
sub
mov
sbb
imul
push
test
test
mov
movb
sub
sbb
sbb
sbb
and
mov
xor
jo
add
dec
mov
push
outsb
fld
cmp
shll
add
mov
test
push
cmp
mov
adc
clc
and
pop
subl
push
or
add
adc
in
sub
ss
in
push
lock
out
in
or
jg
cmpsb
imul
add
or
dec
cli
add
add
mov
and
aad
icebp
and
call
xchg
pushf
mov
add
pop
mov
mov
cmp
dec
jo
jae
mov
popa
push
or
sub
mov
mov
and
pop
je
cmp
je
mov
inc
push
mov
mov
inc
add
dec
cwtl
xchg
in
mov
inc
jo
push
movzwl
push
ss
mov
aaa
sub
rorl
xchg
mov
lret
ljmp
test
jmp
jbe
push
test
xchg
sbb
pop
dec
bound
bnd
push
sahf
xor
xchg
jae
pop
push
pop
cmp
cmp
iret
push
dec
add
cmp
inc
mov
jge
inc
pop
or
push
das
pop
sub
lahf
std
or
inc
dec
inc
aaa
sub
lock
mov
adc
add
cmp
ja
or
ret
test
clc
rcl
rolb
dec
sbb
movl
test
push
and
sub
or
inc
in
int
das
mov
jne
inc
mov
in
xchg
xchg
pushf
push
sbb
pop
sbb
not
or
jmp
leave
or
inc
add
aas
or
or
mov
push
or
sbb
std
push
push
adc
test
jo
cmp
lods
inc
mov
insl
add
icebp
incl
mov
inc
test
jne
sub
lea
sarl
leave
jne
pop
mov
push
lahf
lock
or
insb
and
xor
xlat
js
int
mov
ds
js
ret
icebp
fcomps
outsb
inc
js
inc
js
mov
ret
xor
jne
or
and
orl
aas
xor
cmp
pop
shll
dec
mov
mov
mov
ret
pcmpeqb
je
add
sub
adc
or
jne
iret
fisubrs
aaa
mov
jmp
or
enter
je
cs
jmp
int3
mov
adc
add
inc
mov
adc
xor
cs
repz
mov
rcll
xchg
sbb
add
xor
mov
dec
push
jmp
push
add
shr
inc
add
pop
shl
lea
fldl
test
push
xchg
insl
push
lds
add
cld
pop
imul
clc
cmp
cmp
je
inc
stos
in
fldpi
shll
push
ds
cmc
out
rcrb
push
cmp
pop
sahf
sbb
dec
add
push
or
pop
mov
pop
and
and
jbe
jl
mov
or
mov
and
int3
add
push
mov
or
inc
iret
sbb
adc
or
jbe
ret
arpl
xor
push
int3
jmp
inc
cmpsb
mov
sub
mov
clc
sbb
pop
sbb
aad
faddl
or
xor
xchg
xchg
ret
lea
mov
xor
push
jo
add
cwtl
repz
inc
xchg
inc
es
sub
push
cmp
jge
xchg
mov
flds
add
push
push
ss
pop
or
pop
pusha
add
or
inc
push
ja
xor
mov
and
cmp
jg
add
pop
mov
sbbl
xchg
scas
les
xchg
pop
jne
fcoml
dec
std
das
sub
mov
cmp
or
jne
adc
xor
add
fs
in
out
rolb
pushl
outsl
and
je
adc
or
push
jno
mov
mov
add
popa
arpl
cmp
jo
mov
cmp
push
and
pop
mov
aad
es
mov
outsb
lret
mov
sbb
test
push
fs
or
out
mov
sbb
and
test
lea
js
cmp
mov
sbb
or
loop
mov
cmpsl
mov
push
loopne
orl
xor
cmpb
mov
push
or
mov
push
repnz
or
je
pop
inc
gs
jbe
push
cltd
lock
push
cs
shrb
sbb
adc
icebp
add
xor
and
lea
pop
lea
or
testb
xchg
pop
popa
sub
or
pop
mov
cmp
or
popf
jmp
mov
loop
push
sub
fidivrs
sbb
sbb
bound
lcall
adc
mov
adc
fidivl
movzbl
ljmp
or
sbb
jmp
cmp
jne
daa
or
add
cmp
jne
test
sbb
pop
insb
fs
mov
add
jnp
xchg
jno
add
std
pop
repnz
jne
aaa
pop
sub
sbb
inc
add
sub
fwait
mov
clc
ja
mov
add
jmp
and
sbb
and
sub
scas
scas
and
sub
je
adc
pop
jne
sahf
fdivrl
add
sbb
incl
add
dec
pop
rorb
or
jne
pushf
adc
sub
leave
call
mov
jge
inc
loop
sahf
nop
mov
xchg
or
call
les
xor
mov
jae
imull
stos
dec
inc
mov
lods
cmpsl
push
rorl
lock
cmpl
inc
mov
leave
movsb
inc
dec
stos
nop
xchg
push
sub
push
mov
pop
pop
mov
out
push
ljmp
dec
inc
or
jno
add
jp
loop
jne
adc
adc
dec
mov
push
jae
cmp
orl
mov
rcrl
push
sahf
or
arpl
add
aas
mov
push
cmpl
je
jo
lret
add
adc
ljmp
incl
or
out
sbb
mov
fisubs
inc
xchg
mov
mov
or
pushf
push
shl
sbb
jle
add
xor
stos
jnp
pop
jo
adc
lods
fnstcw
cmpl
and
int3
orb
aaa
cmp
cmp
outsl
sbb
inc
popa
mov
lods
cmp
lock
adc
pop
sub
xor
ret
dec
cmp
jg
insl
mov
and
enter
push
cmp
jle
daa
push
sub
dec
lock
or
sub
xor
push
loopne
adc
xor
idivl
pop
xor
je
mov
imul
pop
push
je
dec
add
fcoms
push
loopne
jae
je
sbb
ret
sub
sub
cmp
jbe
int3
adc
inc
or
aam
push
adc
clc
add
sub
dec
ret
movntps
or
or
sub
orl
lock
pop
subl
cmp
stos
add
imul
adc
movsb
jmp
sbbb
andl
adc
aaa
call
inc
movsl
or
mov
cltd
cmp
dec
into
push
pop
nop
mov
lcall
adc
pop
add
sub
imul
pop
cwtl
cmpsb
mov
fstps
push
sbb
or
sbb
sub
push
xchg
xchg
mov
je
nop
push
add
iret
out
push
sub
dec
pushf
push
xor
or
and
inc
enter
sub
or
pop
fimull
or
and
in
jp
inc
xchg
sbbb
lcall
and
sbbl
dec
stos
push
sbb
dec
adc
xor
nop
xchg
out
decb
inc
cmp
les
push
cmp
jb
cld
push
sbb
pushl
daa
dec
fpatan
arpl
clc
xchg
je
cmpl
filds
flds
pop
dec
pop
or
or
and
cmovb
pop
inc
in
lret
call
xor
arpl
adc
and
push
push
jb
fstl
add
test
mov
test
inc
sarb
cmc
mov
add
inc
mov
enter
mov
pushf
inc
mov
or
inc
or
shl
or
outsb
ja
jne
cli
dec
les
out
dec
je
add
dec
mov
sbb
shl
sbb
mov
or
sub
or
pop
xor
shll
push
in
fcomps
sbb
sbb
add
sbb
in
push
js
sub
or
stos
loope
mulb
shlb
sbb
add
pop
imul
and
enter
mov
pop
add
sub
sub
lret
mov
sub
sbb
add
push
int3
jle
mov
push
in
mov
cmp
push
jecxz
push
dec
outsb
inc
sub
inc
dec
inc
pushl
insl
mov
mov
mov
sbb
mov
dec
shll
enter
xchg
cmp
cmpl
or
negl
imul
inc
and
inc
cld
outsl
lsl
and
mov
mov
jno
pop
sbb
daa
sbb
push
mov
cmp
fstl
xor
jge
stc
and
sbb
ds
pushl
sbb
andl
push
add
mov
jle
push
mov
push
inc
ja
ja
jno
mov
xchg
inc
push
mov
cs
fidivrs
mov
adc
aad
sub
jne
lods
and
add
or
push
and
mov
or
je
or
sub
jge
popa
das
insb
das
pop
ret
sbb
xchg
insb
and
sbb
inc
ss
out
loopne
sbb
sbb
sbb
and
xchg
xchg
lock
sub
adc
dec
incl
or
inc
xor
hlt
push
rorb
sbb
and
out
pop
pop
mov
sbb
pop
inc
add
mov
outsl
les
mov
adc
roll
loopne
jmp
add
inc
cmp
mov
jb
add
out
push
call
and
je
leave
ret
imul
shlb
pop
pop
push
or
and
cmpsl
outsb
mov
mov
ss
mov
push
mov
and
stos
rol
subl
mov
sub
sub
into
out
xchg
into
push
pop
adc
cmpsl
enter
add
xchg
lods
inc
cmpsb
ret
adc
xchg
mov
mov
or
add
les
xchg
cltd
mov
add
call
cmp
sbb
scas
js
test
std
call
cs
incl
in
mov
and
add
lea
lea
movsl
sub
mov
movsw
push
lock
mov
jg
cmp
subl
mov
lods
inc
decl
sub
cmp
jne
mov
jae
mov
mov
inc
jg
popf
and
sub
mov
inc
fcomps
push
fstpt
fbstp
add
mov
js
std
lea
cmp
or
test
dec
movsl
jne
xor
rolb
sub
mov
pop
cmpl
inc
movsb
mov
sub
push
mov
shlb
cltd
or
cmp
jb
out
shl
outsl
or
dec
movsl
pusha
mov
insb
dec
fadds
lret
testb
add
mov
cmp
shrb
jge
je
inc
mov
arpl
filds
clc
insl
or
testl
cmp
das
rcl
adc
mov
xor
and
add
clc
add
xor
fdivs
arpl
jecxz
mov
arpl
lea
adc
pop
mov
stc
mov
push
movsb
push
mov
sbb
sti
add
das
or
sbb
mov
jmp
push
jl
pushf
hlt
fadd
fidivrs
mov
xchg
fmuls
xchg
test
adc
pop
jle
adc
jne
mov
mov
lea
jo
sub
sti
mov
cmp
dec
popa
add
test
orb
pop
xor
or
and
or
jne
inc
mov
mov
movb
sbb
push
mov
mov
push
xchg
je
xor
shlb
cmp
mov
ds
jo
cmp
jo
sti
in
aaa
push
mov
add
movb
neg
mov
shl
or
add
mov
push
out
loop
sti
cmp
mov
test
add
pop
sub
push
int3
cmp
sti
icebp
mov
jb
movl
inc
mov
mov
ss
lret
adc
neg
mov
mov
dec
mov
mov
sub
daa
inc
cmp
push
addr16
dec
pop
jmp
mov
pop
push
sub
popa
cmpsl
loop
push
shr
test
jle
jg
divl
cmp
lea
inc
cli
lods
sbb
fimuls
xchg
es
incl
cmp
jge
mov
mov
mov
inc
inc
adc
pop
fisubs
add
clc
mov
push
jo
jmp
fistpll
sub
add
outsb
mov
lods
mov
dec
or
push
stos
cmp
mov
out
imul
orb
mov
inc
test
add
pop
lcall
or
or
pop
add
jno
push
andl
rorl
add
add
dec
jne
and
mov
sbb
or
or
sbb
or
push
cmpsb
cmp
push
mov
jne
jge
pop
mov
push
inc
cmp
mov
loop
sbb
jle
mov
inc
mov
fmull
testl
jl
add
pop
pushf
lcall
test
cmp
repnz
inc
xchg
inc
shr
jl
cmpl
push
inc
jae
cmp
mov
push
shll
sub
test
cltd
jg
lods
hlt
fcmovnu
or
sub
add
mov
mov
or
enter
loopne
inc
clc
mov
add
lock
jo
pop
sub
jns
divl
push
mov
mov
pop
push
or
mov
jmp
sti
and
cmp
test
add
or
sbb
mov
movsl
sub
ja
sub
test
jge
xorb
fnstcw
in
mov
addr16
and
cmp
mov
dec
in
jl
inc
dec
enter
add
mov
xor
incb
inc
sar
cmp
mov
fstpl
jle
mov
mov
jmp
sub
mov
subl
outsb
cmpb
xor
xor
hlt
mov
pop
pop
in
in
or
push
jmp
inc
sub
jg
xchg
push
sub
adc
push
sbb
add
sub
imul
mov
adc
mov
inc
inc
sub
jge
cli
es
and
mov
pop
call
xor
pop
pop
mov
fidivl
dec
test
dec
rorl
mov
mov
cs
frstor
or
and
rcrl
inc
jp
hlt
push
dec
adc
repz
mov
adc
dec
sbb
bound
sub
hlt
sbb
enter
cmp
sbb
inc
ljmp
adc
and
dec
sbb
push
xor
mov
xor
sbb
aas
adc
sbb
ljmp
xor
hlt
mov
dec
in
cmp
fidivl
mov
aas
pop
mov
jbe
dec
adc
jg
xchg
imul
in
dec
dec
xor
adc
sub
cli
popf
sub
int3
subl
or
mov
push
clc
mov
dec
cmpsb
or
xchg
xlat
and
ret
cld
or
xchg
cmpsb
gs
sub
and
jge
cld
and
jmp
and
in
insl
and
and
sbbb
movsl
xchg
push
dec
push
call
jns
stc
xchg
stc
js
or
test
xchg
and
pop
daa
or
lea
push
arpl
repz
xchg
in
fdivl
jg
and
push
pop
test
xor
xchg
cmpsb
test
xor
jmp
mov
fwait
inc
lea
inc
and
std
aam
xchg
and
lcall
cmp
inc
in
xchg
or
and
into
jbe
mov
mov
ret
mov
sub
loope
xchg
int3
push
adc
push
or
mov
shr
shlb
push
sub
pop
adc
pop
inc
call
jbe
sub
add
jbe
push
mov
add
add
outsl
pop
jns
test
jnp
shll
lods
pop
call
push
rcr
add
leave
mov
dec
insb
shr
add
or
je
shr
fs
add
pop
or
cmp
add
inc
xchg
cmpl
or
dec
pop
lods
or
jg
stc
dec
add
xor
andb
aam
or
mov
sbb
fcomps
add
popa
mov
addr16
mov
xor
push
cld
mov
out
jns
jecxz
or
inc
andl
insb
push
pop
dec
jle
inc
dec
leave
addr16
call
pusha
push
sub
xchg
xchg
fadds
test
and
sub
pusha
in
add
int
inc
adcl
sub
sarb
xorb
fisttps
jp
mov
inc
jb
pcmpgtb
test
test
push
and
aad
mov
shll
jle
mov
sub
mov
sbb
pop
lea
jg
mov
push
icebp
rcrl
push
mov
test
or
add
xor
pop
sbb
push
decb
dec
pop
and
cmpl
jg
jecxz
pop
push
jne
movb
jmp
insb
jmp
push
imul
fisttpll
shll
out
mov
mov
pop
stos
test
adc
mov
sub
dec
dec
aas
pop
daa
lret
lret
mov
sbb
inc
pop
push
inc
loope
lret
inc
sub
or
mov
and
sub
mov
jge
mov
or
xchg
push
xlat
mov
es
scas
push
stos
cld
inc
sub
movsb
daa
add
adc
andb
sbb
xor
lret
ss
mov
enter
cmpsb
into
repnz
in
and
inc
jno
mov
inc
mov
call
cld
repz
dec
jb
pop
sti
orb
sbb
fimuls
js
ret
xchg
ret
push
iret
xor
pop
shrb
xchg
mov
into
test
fwait
xor
add
jns
add
fbstp
mov
and
pop
rcrb
cld
pushf
mov
cltd
das
nop
add
fldt
cmpl
mov
xor
mov
xchg
sbb
cmp
testb
mov
inc
insl
or
insl
or
ja
pop
lcall
mov
xor
rorb
cs
stos
cld
clc
jbe
jmp
cld
mov
mov
mov
mov
call
movsl
clc
test
cmpsl
ficoms
adc
push
test
dec
mov
jmp
mov
dec
lods
lahf
adc
mov
pop
and
lods
fimull
xchg
gs
enter
popa
dec
or
mov
cwtl
xchg
lock
popa
movsb
dec
push
ds
dec
int3
xchg
xor
adc
jmp
cld
or
dec
and
cmp
push
loopne
jge
test
dec
call
shr
ret
sbbl
test
cmp
mov
sbb
into
sbb
or
cli
pop
xchg
movsb
pcmpeqb
cmpl
push
pushl
mov
nop
nop
outsb
cltd
call
sbb
sbb
inc
sbbb
push
push
cmc
call
test
cmp
jl
cmpl
mov
ljmp
or
out
mov
stc
push
xor
inc
xor
test
xchg
and
jne
xchg
mov
cmpsb
mov
jp
mov
or
xchg
std
mov
inc
mov
pop
jae
xor
jl
out
sub
sbb
jae
mov
ljmp
data16
or
mov
add
sub
push
inc
add
insb
adc
lock
push
insl
fcomps
xor
mov
xor
or
sarb
mov
outsb
lea
icebp
mov
inc
add
dec
and
dec
adc
add
adc
fldcw
push
sbb
ret
pop
or
dec
xor
adc
inc
xor
test
idivb
pop
add
mov
js
jge
movl
es
sbb
push
rclb
cli
and
adc
mov
roll
xchg
pushf
or
xchg
xor
sub
and
add
adc
inc
jl
jne
mov
jbe
xchg
pop
add
sub
in
clc
jg
push
cltd
pop
idiv
jmp
dec
cmp
lods
xlat
sbb
jl
jne
adc
inc
fdivrl
pop
xchg
aaa
lret
xor
mov
cmp
or
or
mov
mov
enter
mov
inc
data16
mov
sbb
test
gs
sub
aad
mov
add
js
stos
mov
inc
push
in
xor
xor
cmovo
mov
mov
int3
push
xchg
sub
push
jne
hlt
and
and
jae
push
cmp
add
xchg
push
mov
movsb
pop
enter
roll
inc
subl
notl
add
or
add
insb
inc
cmpsl
mov
mov
in
scas
inc
data16
or
lea
call
test
inc
dec
mov
mov
ljmp
testb
loopne
add
sub
mov
jbe
cmpl
divb
call
jge
xchg
push
sub
mov
mov
idivb
pop
popf
push
jo
adc
mov
sub
cmp
sbb
jecxz
push
jle
lret
loopne
rorl
jl
iret
shl
inc
dec
cmp
cmp
fstpt
jbe
jne
sbb
fmull
testb
test
sbbl
jae
mov
ljmp
jle
mov
pop
jmp
sub
xchg
rcrl
jmp
push
loop
mov
inc
mov
add
test
jo
shl
xchg
or
mov
out
mov
and
in
pop
movsl
push
loop
pop
cmp
ja
shlb
jnp
sub
mov
mov
or
fcom
add
mov
xchg
jae
leave
data16
push
pop
sub
lods
jo
in
sub
inc
add
pop
vpminsw
mov
or
cmp
jne
fneni(8087
add
rclb
xor
mov
mov
mov
xor
sbb
cmp
xchg
inc
inc
shl
and
aam
les
push
jb
out
xlat
sub
mov
mov
adc
sbb
mov
pop
lret
mov
mov
or
lret
push
mov
cld
lret
ss
adc
jne
push
fldt
stos
insl
mov
mov
mov
in
add
fimull
add
call
pop
roll
mov
pop
insl
lods
push
sub
insb
and
push
sub
push
insb
in
iret
and
mov
ljmp
insl
int
sbb
push
mov
adc
jl
mov
push
or
rcr
frstor
jbe
and
mov
push
incb
hlt
ret
push
jae
ss
mov
or
add
lock
adc
test
movsb
jae
sub
mov
gs
push
lds
and
int
notrack
and
inc
or
dec
mov
push
shl
imul
pop
adc
sub
dec
mov
loop
jne
adc
mov
das
mov
js
and
jae
popa
adc
outsb
push
arpl
or
adc
push
aaa
negb
push
dec
inc
dec
dec
cs
add
push
jo
cltd
sub
fldt
inc
outsl
insb
fs
mov
out
xor
inc
jb
gs
add
mov
das
or
jbe
stos
inc
sbb
inc
imul
popaw
jne
je
add
add
in
outsl
or
add
push
in
notb
gs
pop
mov
push
push
fnstsw
or
test
pop
jmp
outsb
popa
stos
add
lods
stos
subb
mov
push
fcomp
mulb
gs
out
movsl
or
fcomps
mov
in
and
push
sub
and
or
insb
das
inc
cmp
add
inc
cs
jbe
and
and
and
jle
insl
inc
adc
in
fs
inc
arpl
add
inc
sbb
add
mov
fimuls
inc
gs
roll
test
enter
add
dec
add
aaa
incl
inc
add
dec
add
inc
add
push
add
inc
cmovae
fbstp
dec
add
push
add
add
ja
xlat
adc
push
add
dec
push
jne
mov
adc
jmp
inc
dec
dec
pop
inc
pop
push
mov
or
push
dec
push
jmp
ror
adc
push
dec
adc
sbb
or
dec
push
pop
fwait
rcrb
inc
adc
and
jns
in
jae
xorps
pop
inc
or
mov
xor
cmp
jl
push
std
add
inc
inc
adc
add
inc
sti
das
push
dec
and
push
loopne
popf
mov
mov
jbe
push
mov
jae
inc
dec
adc
fbstp
adc
or
rorb
sar
idivl
out
in
sbb
add
add
push
cld
sub
dec
inc
and
pop
inc
inc
ud2
pop
sub
daa
and
pushw
outsl
mov
mov
or
xor
addb
addb
jmp
rolb
incl
push
jmp
mov
jbe
fs
dec
or
mov
dec
push
dec
dec
enter
push
adc
icebp
and
and
outsl
xchg
xor
fs
xorl
or
add
add
mov
or
or
add
add
add
mov
add
and
pop
or
add
and
test
or
add
inc
or
nop
or
ret
fstps
leave
inc
and
and
rclb
sub
push
mov
pop
inc
mov
and
adc
xchg
mov
and
in
insb
xchg
pop
xor
fs
or
dec
push
mov
sub
add
jecxz
ret
pop
sysexit
rorb
dec
fs
and
fwait
ltr
add
dec
fwait
pop
sub
mov
or
xor
popa
ret
sbb
add
test
add
sbb
sbb
aaa
xlat
cs
or
pop
xor
add
adc
cmp
insl
xor
mov
ud2
cmp
outsl
or
cmp
add
popa
or
mov
push
cmp
fcomp
sbb
arpl
or
or
lds
cmovne
sbb
fwait
popf
or
or
add
cmp
or
or
outsb
dec
or
adc
xor
push
das
or
and
int
mov
jmp
or
sub
add
movl
sahf
pop
push
cmpsl
add
and
imul
mov
pushf
cmc
unpckhps
or
aaa
aas
notl
push
add
push
mov
mov
push
pop
and
add
add
or
mov
add
or
cmpb
add
xor
push
or
inc
and
jge
or
dec
adc
sbb
add
mov
cmp
insl
adc
pop
xchg
in
mov
add
into
dec
repz
add
adc
psubusw
loope
mov
pop
xor
dec
push
push
or
imul
mov
jecxz
sbb
mov
or
cmp
cmp
mov
or
std
xchg
or
or
and
and
adc
and
pop
es
out
popa
inc
sbb
addr16
das
mov
pop
sbb
ss
arpl
sbb
jne
mov
add
iret
lock
add
pop
call
sbb
inc
es
mov
sidtl
popl
adc
add
or
insb
out
hlt
lea
add
sbb
mov
loope
sub
sbb
mov
and
push
adc
in
sbbl
pop
mov
push
aaa
push
fstp
sbb
sbb
sbb
fdivl
decl
pop
lahf
addl
or
in
cmp
adc
mov
or
int3
xor
or
sub
daa
adc
int
pop
add
or
int3
or
sbb
idivl
dec
add
sbb
or
add
push
xor
cmpl
dec
fstps
add
jnp
out
sub
dec
sbb
test
add
scas
lods
sbbb
or
xchg
mov
and
adc
or
adc
and
pop
sub
lea
daa
fimull
loope
jbe
lock
in
xor
sub
mov
sbb
int3
mov
add
movsl
xor
add
lret
clc
sahf
fwait
mov
or
or
adc
adc
nop
jl
jmp
aaa
dec
ret
aaa
aaa
arpl
enter
push
add
pop
xor
movsb
outsb
xor
pop
or
xor
jmp
gs
mov
adc
cltd
outsb
or
mov
xor
cmp
add
ss
add
add
stc
add
or
add
cmp
int3
add
or
fisttps
and
or
aaa
push
and
cmp
sub
xchg
cmp
xorl
cmp
pop
ds
movsl
in
sbb
and
or
xchg
mov
or
xor
fcoms
push
and
add
popf
inc
xchg
or
lods
aaa
sbb
mov
adc
jnp
enter
add
or
inc
pop
or
and
incl
nop
adc
leave
push
dec
sbb
sbb
push
dec
cmp
xor
sub
shll
popf
insb
leave
mov
repz
lcall
push
push
out
rcrl
and
or
adc
enter
push
add
das
push
add
dec
cmp
pusha
pop
xchg
dec
cwtl
nop
pusha
pusha
sub
cmpsb
xor
leave
pop
and
out
or
daa
adc
xchg
xchg
pop
add
cwtl
mov
stos
sbb
pop
daa
fsubs
xchg
adc
adc
lret
sbb
jnp
or
orb
pusha
cmp
fs
sbb
dec
pusha
es
outsb
outsb
mov
pop
cmp
sbb
addr16
cmpsb
sub
sub
push
jbe
jnp
pop
adc
or
in
push
inc
and
imul
leave
inc
mov
adc
es
test
into
adc
push
adc
adc
or
add
loope
or
or
sub
ret
jae
push
push
jle
popf
push
mov
and
jbe
loope
loope
sbb
sbb
dec
js
sbb
es
push
ja
pusha
daa
loope
and
js
js
das
adc
jne
out
cmovnp
icebp
jns
xor
loope
inc
stc
jge
pop
stos
fs
aad
jle
push
shrb
fcmove
xchg
ret
notl
jnp
jnp
lret
fidivrs
and
mov
push
lods
pop
xchg
fildll
outsl
adc
push
ss
adc
push
or
pop
mov
add
or
push
add
stos
or
shll
add
pushf
cmpsl
fsubrl
in
cltd
mov
sbb
add
cs
xor
dec
sbb
fnsave
cmp
stc
ud2
cmpxchg
mov
in
daa
sub
movups
nop
lock
cmp
incl
push
xor
pop
aad
mov
xchg
iret
xor
adc
or
adc
xor
cmp
and
cmp
sbbb
popf
dec
jp
popf
cmp
xchg
or
pop
mov
ret
adc
xchg
loope
pop
sub
movl
or
addr16
or
adc
dec
mov
in
xchg
add
adc
dec
jp
xchg
daa
cmc
xchg
or
sbb
dec
cltd
fisttpll
sub
lcall
dec
inc
pop
movsl
and
fmull
sbb
sbb
xchg
or
xchg
adcb
in
adc
push
cmp
and
adc
fists
popf
or
or
mov
mov
fwait
pop
and
pop
std
pushf
xchg
jmp
jl
adc
push
mov
mov
cltd
movsb
ja
stos
lods
pop
mov
lock
rcrl
mov
in
stos
xor
sbbb
loope
addr16
lods
and
xor
repnz
add
pop
adc
jb
maxps
int3
mov
adc
jns
movsb
push
mov
jns
lods
out
xchg
jno
sub
adc
lret
adc
add
mov
and
add
cs
xchg
cmc
popa
test
repz
push
add
shl
jo
ret
jge
xchg
and
xchg
mov
movb
mov
sahf
scas
add
add
xchg
lods
xchg
xchg
bound
or
adc
or
or
xchg
add
sub
pop
mov
xor
mov
pusha
adc
cmc
adc
dec
pop
mov
or
pop
ja
pushf
xchg
adc
mov
test
xchg
lea
mov
outsl
jbe
jo
inc
jge
jbe
mov
out
xchg
pop
jb
xchg
mov
leave
sbb
dec
leave
enter
mov
and
and
adc
and
mov
xchg
mov
sbb
in
dec
out
push
leave
mov
btr
popa
adc
jmp
add
push
xlat
add
cmpl
and
xchg
sbb
loope
jb
sbb
leave
adc
and
enter
add
or
and
add
adc
jbe
inc
ds
les
add
xchg
adc
adc
fists
xor
fwait
lds
adc
int3
lds
push
adc
xor
add
xor
enter
add
cs
sbb
inc
or
or
jne
jno
dec
cmp
aam
aam
and
in
repz
shrl
lds
jno
jg
xor
or
adc
jno
add
xchg
adc
mov
in
mov
ret
and
cmp
adcl
push
jmp
roll
aam
leave
and
call
fisttpll
test
fadd
dec
fcoml
xchg
loope
mov
mov
fisubl
sbb
jbe
nop
and
call
jo
popa
lret
and
test
int3
sbb
or
fldt
and
aaa
mov
loope
or
sbb
inc
push
pop
iret
hlt
sbb
out
pop
adc
xor
or
in
sub
or
daa
adc
movsl
scas
pop
negb
dec
adc
andb
and
pop
push
mov
adc
add
adc
add
add
popf
or
or
test
jmp
mov
call
pop
or
sub
insb
mov
sbb
and
jmp
mov
cmp
fdivl
sub
xor
sub
adc
push
in
push
ret
popa
push
lcall
repz
outsl
fldenv
pusha
int
test
lock
out
in
inc
iret
or
xchg
in
hlt
cs
dec
inc
jo
adc
inc
or
js
mov
jbe
cmc
add
xor
push
pop
sbb
daa
punpcklbw
subb
adc
mov
nop
in
or
cmpsb
or
add
push
add
jb
xchg
pop
sub
and
mov
lahf
sahf
adc
adc
xchg
add
add
enter
pop
cmp
lret
outsb
sbb
sub
xchg
sbb
adc
add
pop
clc
enter
and
cmp
or
add
push
dec
and
enter
push
inc
xchg
add
or
cli
add
js
lods
dec
add
cmp
add
mov
nop/reserved
or
add
xchg
xor
stc
negl
mov
or
add
mov
pop
and
je
add
aaa
popa
and
and
pop
out
jae
jne
jbe
sub
adc
add
pop
sub
inc
pop
xchg
push
sbb
out
or
outsl
sbb
notl
or
adc
jne
cs
mov
xlat
and
xchg
xor
xlat
fwait
in
cmp
repz
jnp
lds
stos
sub
popf
mov
insl
or
ret
pop
jmp
bound
das
mov
add
pop
arpl
jno
das
cmp
gs
daa
and
shll
imul
lea
daa
gs
cs
or
in
dec
xorl
testl
icebp
popf
sbb
mov
and
xchg
inc
es
sub
ja
mov
sbb
xor
jns
es
sbb
and
pop
and
inc
push
pop
xlat
lea
inc
inc
and
imul
imul
push
es
inc
add
jge
push
loope
or
mov
test
lret
outsl
add
or
xorb
jb
data16
and
push
jne
push
test
sbbl
xor
adc
mov
push
divl
shll
pop
mov
add
add
add
dec
push
pop
add
jmp
sub
mov
xor
push
and
mov
cmp
cmpsl
lds
pop
or
mov
xlat
or
cmp
dec
sub
xor
pop
sbb
cmp
and
mov
das
xor
add
addr16
fcmovnbe
mov
inc
sbb
lahf
xor
inc
mov
xor
es
outsl
mov
add
inc
pushl
or
notb
inc
shll
in
inc
sbb
xlat
lea
aas
imul
addr16
cmp
mov
inc
sbb
jge
jae
jecxz
fldl
jnp
add
mov
insl
dec
shrl
pop
out
arpl
xor
cwtl
mov
xor
xor
orl
add
sub
imul
test
or
pop
aas
xor
data16
add
mov
or
ror
mov
jb
and
test
sub
cwtl
lds
push
push
dec
enter
sub
sub
inc
sbb
ljmp
mov
fisttpll
sbb
sbb
mov
dec
mov
add
out
inc
popf
mov
je
and
pop
mov
jae
imul
orb
and
ret
jno
out
mov
daa
adc
adc
dec
xor
mov
insl
pop
sbb
dec
out
inc
in
sbb
ret
lods
adcl
jne
dec
xor
out
ret
jns
call
flds
adc
shrb
dec
cmp
dec
mov
xor
out
push
iret
mov
cmp
popa
and
nop
adc
push
aas
test
inc
or
inc
stos
cmp
or
add
xor
jne
push
dec
sub
imul
push
sbb
sbb
es
sbbl
in
outsb
adc
sub
sub
add
fs
popa
int
aas
sub
arpl
fwait
adc
or
mov
ret
shll
or
bound
or
fs
inc
mov
sbb
dec
daa
mov
inc
aaa
ffreep
and
fs
subl
outsl
xor
lods
aad
jmp
push
fstpl
sbb
adc
dec
scas
out
mov
arpl
or
fnstenv
leave
lea
gs
ret
aam
dec
xchg
fs
xchg
push
aad
sbb
push
test
insl
pop
outsb
jns
mov
shlb
xchg
xor
jno
test
push
fildl
fidivrs
inc
and
mov
lea
fistpll
pushf
adc
or
mov
mov
test
cwtl
mov
jg
fstpt
sub
dec
xchg
or
orl
pop
mov
or
push
ret
and
inc
lahf
cmp
sahf
icebp
cmp
sub
popf
jno
jns
add
pop
and
jp,pn
mov
loope
lret
ret
jne
jne
icebp
add
mov
das
leave
and
push
scas
in
or
jae
pop
loopne
pop
mov
add
push
ja
push
inc
dec
sub
das
leave
mov
divb
mov
imul
das
popf
jbe
adc
imul
inc
add
inc
jecxz
out
popa
xchg
or
xchg
sbb
xor
addr16
push
movsl
shlb
jae
icebp
cmp
mov
push
push
or
jg
sarb
or
xchg
jno
mov
inc
pop
pop
imul
xchg
add
fwait
pop
dec
fs
iret
jmp
dec
pop
jge
sub
addl
dec
pop
sub
xor
xor
pop
in
push
dec
insl
ja
mov
enter
and
dec
add
imul
mov
inc
add
jge
xor
rcll
lahf
jae
jmp
sub
sub
je
inc
add
push
or
fs
movsb
xchg
test
ror
cwtl
lea
sub
xor
inc
pop
scas
xchg
lods
sbb
sbb
or
jbe
imul
xchg
push
dec
xchg
or
mov
mov
mov
and
push
lret
xor
mov
or
bound
xlat
jo
sub
xor
popa
sarl
pop
add
push
adc
xor
jb
movsl
xchg
adc
fldenv
adc
dec
pushf
xchg
inc
sbb
dec
adc
sbb
xor
add
add
icebp
sbb
and
popa
adc
gs
jae
push
fucomp
es
push
or
jmp
loopne
add
push
and
xchg
lds
jbe
call
jge
mov
pusha
gs
dec
lods
aaa
stos
xchg
mov
or
add
jne
cmpsb
in
sbb
bound
jne
sti
mov
dec
push
add
add
xor
sub
dec
pop
lahf
andl
dec
ljmp
add
mov
pusha
fldcw
pop
sbb
mov
movsb
dec
imul
rcll
add
outsl
mov
xor
cmc
cs
push
sub
movsb
add
jl
jnp
or
adc
daa
mov
push
dec
addl
loopne
xor
jp
cmp
movsb
pop
mov
mov
xchg
dec
lcall
insl
pop
int3
push
lods
mov
ljmp
lret
fwait
lahf
xchg
xacquire
jae
inc
sub
iretw
xchg
mov
loope
inc
push
dec
fidivl
popa
aam
shll
and
ficoml
comiss
mov
adcb
inc
pavgb
push
imul
insb
gs
leave
rcr
insl
movnti
and
pop
or
popf
imul
and
outsl
ja
inc
aaa
pop
sub
push
dec
cmp
fs
pusha
out
xor
popa
rclb
mov
pop
cmp
jo
testl
roll
jbe
mov
or
inc
mov
lds
lock
jmp
and
cmp
addr16
nop
and
xchg
xor
cwtl
dec
lret
popa
jmp
sbb
dec
cs
push
test
and
pop
fs
dec
ret
sbb
mov
cmpl
mul
mov
jmp
adcb
mov
or
cmp
fsts
sti
jnp
scas
xor
and
jecxz
fcmovnu
adc
nop
test
dec
xor
fwait
dec
cmc
xchg
jge
xor
aaa
mov
xchg
stc
pushl
lea
pop
jp
mov
push
or
adcb
pop
leave
out
sub
add
out
xchg
add
pop
lods
mov
cmp
mov
leave
mov
sbb
shll
pop
and
es
inc
push
std
jno
and
inc
pop
add
xor
shl
hlt
mov
jnp
fisubrs
fs
fs
ret
cmp
pop
pop
push
sbb
dec
cmp
shrl
lock
fs
loopne
xchg
sti
ror
mov
jmp
js
pop
sub
add
test
fistl
adc
or
jg
movb
and
inc
insb
loope
lds
xchg
rclb
xchg
in
lds
popf
cmp
push
adc
add
mov
jbe
and
loopne
cmp
loopne
inc
mul
xor
popf
jmp
aad
add
int
sub
push
cmp
lea
xchg
cmpl
inc
and
jne
dec
test
pop
ret
jae
add
push
rcrb
out
pop
sub
add
or
lock
ds
adc
scas
xchg
push
push
add
inc
inc
std
adc
mov
xchg
fs
sbbb
lea
decb
add
jecxz
push
inc
push
add
push
push
cmc
arpl
push
adc
sbb
stos
fldenv
fdivs
or
popf
jecxz
inc
xor
in
mov
xchg
dec
xor
iret
mov
incl
adc
push
mov
mov
jo
in
aam
sti
inc
mov
iret
add
mov
sbb
loop
mov
adc
shlb
cli
sbb
push
rolb
into
ret
mov
in
ficomps
sbb
dec
pop
inc
push
pop
xchg
push
xchg
lods
bound
mov
test
adc
mov
std
and
subl
push
sbb
add
and
inc
out
dec
out
movsb
incl
lods
dec
std
jmp
incl
and
pop
incl
call
maskmovq
negl
jmp
mov
pop
cs
mov
jg
in
in
xchg
out
iret
idivl
idiv
pushl
scas
std
mov
push
dec
ficomps
imul
icebp
cmpsb
dec
add
out
lret
idiv
pop
push
cmp
mov
jns
mov
cmpsb
out
or
mov
mov
jg
cli
inc
les
lcall
shrb
andb
pushl
lods
popf
fdivl
cmc
insl
dec
inc
inc
mov
jecxz
fsin
push
std
filds
push
dec
incl
test
fsubrl
lcall
sbb
inc
dec
scas
std
sub
fs
movsb
mov
divb
fbld
inc
cmp
xor
xchg
cltd
sub
idiv
cmp
cmp
push
nop
mov
fistpl
and
std
pop
mov
stos
inc
loope
jg
or
mov
iret
cmp
scas
mov
out
outsl
pop
mov
imul
sbb
sbb
dec
dec
fldl
decb
lods
je
pushl
lock
inc
inc
negl
push
sti
mov
pop
mov
ljmp
jmp
adc
push
and
add
in
cmp
pop
popf
lds
mov
sub
mov
cmp
sub
call
mov
loope
loope
icebp
mov
leave
icebp
mov
mov
aas
test
call
mov
int
dec
iret
push
push
das
into
in
out
movsl
insb
inc
in
dec
bound
incl
out
mov
push
idivb
dec
jmp
aas
pop
xlat
pop
scas
movsl
mov
or
in
cltd
int
or
in
in
stos
sahf
movsb
enter
and
mov
out
call
jbe
fsubrs
fstps
push
and
jmp
jl
mov
test
push
pop
stos
mov
sbb
mov
out
sub
mov
cltd
push
call
jno
xor
addr16
jb
inc
xor
lahf
sti
icebp
mov
into
outsl
daa
xor
fistpll
ret
ss
jns
inc
bound
loopne
repz
in
std
xor
fcmovu
push
push
pop
shlb
mov
pop
jmp
imul
sbb
or
aam
push
pop
xchg
mov
jns
enter
lcall
bswap
pop
sbb
pop
or
into
lahf
pop
fiaddl
jnp
mov
mov
lcall
pop
ficomps
pop
sahf
fwait
add
pop
flds
pop
jns
jno
notl
inc
sub
aas
sub
pop
xor
repz
xchg
pusha
sbb
outsb
jl
dec
das
das
xor
rcr
popa
icebp
jp
sub
pop
push
imul
ja
ljmp
lea
insb
push
mov
inc
xchg
aad
jmp
lret
mov
lcall
in
in
iret
rclb
stos
outsb
das
mov
fildll
dec
push
xchg
xchg
movsl
xchg
bound
cmp
inc
adc
push
mov
adc
sub
push
push
xchg
push
mov
ljmp
into
repz
pop
cmpb
inc
xor
pop
inc
dec
ss
inc
test
or
jmp
jae
imul
enter
mov
pop
ficomps
fimuls
jne
pushl
popa
shll
pop
jnp
ret
or
xor
mov
mov
out
les
jne
or
repnz
aad
mov
adc
xchg
loopne
and
cmp
add
inc
dec
dec
or
inc
inc
cmpb
in
fs
insb
imul
incl
shll
inc
jmp
pusha
dec
and
test
push
mov
sub
push
clc
adc
decl
pop
cwtl
cs
and
sub
jb
xchg
push
lret
sbb
outsl
das
arpl
ljmp
sbbb
or
jne
cli
test
push
insl
cmp
pop
hlt
push
loope
push
xor
pushl
addb
adcb
aaa
fidivrl
icebp
and
adc
decl
mov
inc
sbb
js
push
cmp
outsl
push
pushf
adc
adc
lcall
rorl
fdivr
push
adc
inc
sbb
pop
or
sub
pop
sbb
mov
mov
pop
test
mov
add
mov
sub
mov
lea
pop
notl
push
and
loopne
insb
fwait
sub
scas
cmc
and
dec
pop
ljmp
lcall
mov
andb
rcrl
pop
pop
aam
push
pop
shll
ficoms
or
pushl
cmpsb
pop
negb
mov
cld
sbb
aam
push
loope
data16
sbbl
pop
push
mov
adc
mov
cmp
inc
shlb
mov
pop
cli
incl
pop
sub
and
aaa
pushf
test
fisttps
pop
adc
sbb
pushl
adc
int3
cmp
pusha
mov
sahf
mov
push
aam
pop
adc
push
add
sub
fdecstp
in
mov
xchg
clc
ljmp
dec
sbb
mov
fdiv
mov
mov
fsubs
rol
sbb
dec
popf
subb
sub
jmp
stos
and
push
mov
clc
xor
mov
aad
idivb
out
mov
push
xchg
adc
mov
or
push
dec
decl
xchg
nop
ljmp
or
imul
dec
inc
mov
ljmp
aam
jne
add
inc
inc
je
std
into
fdivrs
inc
mov
icebp
inc
loope
mov
shll
xor
into
mov
ljmp
call
pop
mov
ficomps
pop
andnps
xor
test
inc
inc
cmp
imulb
mov
inc
faddl
enter
cmp
sti
cmpsl
or
mov
psubq
rorb
push
adc
nop
lods
mov
cmp
ret
imull
in
and
and
xchg
xor
ds
push
loopne
lcall
jo
and
sub
fs
stc
mov
mov
mov
loop
xchg
das
push
xchg
push
hlt
cmp
aam
std
bound
imull
jecxz
decl
mov
cld
orl
adc
divb
cmp
jmp
in
jo
in
xchg
aaa
mov
cmp
cmp
sbb
or
mov
ds
mov
xchg
xor
jb
movb
pop
orb
das
and
in
hlt
in
pop
les
ljmp
lcall
call
xchg
push
mov
sbb
shrb
push
push
or
popf
push
xchg
pop
push
and
push
decl
inc
sar
push
add
inc
rorl
dec
dec
mov
enter
inc
pop
xor
mov
and
aam
incl
rcrb
cmp
adc
pop
sbb
dec
rcrl
xor
outsl
std
lcall
movsb
adc
add
sbb
sbb
loop
sarb
ret
inc
subb
repnz
addr16
cli
cmp
je
jge
xchg
lcall
into
mov
data16
rcl
xchg
xchg
or
sahf
pusha
mov
sbb
ljmp
lock
shll
jne
aas
pop
cmp
aam
addr16
fs
fsubp
jmp
xchg
xchg
sub
mov
jecxz
clc
jmp
lcall
call
dec
dec
loopne
add
pop
aad
into
cwtl
pop
mov
cld
jle
pop
jecxz
cs
test
cmp
mov
ljmp
sti
scas
and
xor
dec
xchg
dec
addr16
es
xchg
dec
jbe
sub
arpl
ljmp
mov
sub
addb
inc
lds
cmp
inc
xor
and
clc
dec
xchg
pop
fwait
adc
in
pop
push
pop
ret
test
pushl
lock
jnp
in
bound
jo
data16
or
jnp
mov
add
add
mov
mov
test
ljmp
fistps
pop
es
ret
push
sti
xchg
pop
pop
pushl
mov
inc
je
sbb
add
inc
fisubrs
mov
pop
leave
test
mov
cli
ljmp
xchg
repnz
xor
cltd
sub
addr16
xor
call
inc
jb
mov
jo
filds
sbb
fidivrs
in
push
call
pushl
inc
add
int3
dec
in
enter
jecxz
jae
jns
xchg
shr
arpl
sbb
lcall
push
mov
sub
mov
fstp
adc
sarl
fsubp
call
jno
adc
pop
cwtl
cmp
insb
call
test
pop
test
filds
xchg
sahf
adc
xchg
dec
stc
outsb
sbb
mov
dec
pop
mov
addr16
fsubs
xor
punpcklbw
call
rcrl
xor
fimuls
sbb
cmc
add
fdivr
pop
sub
pop
sarl
xchg
out
imul
cmpsl
ljmp
xchg
inc
aas
pushf
sub
add
mov
mov
cld
mov
into
jecxz
clc
pushl
ja
and
xchg
test
pop
mov
jae
jbe
fs
dec
sar
decl
xor
cmp
or
jae
outsb
cmp
mov
enter
mov
imul
inc
mov
jge
jno
and
mov
jl
sub
jmp
pushf
in
in
std
xor
cmp
jbe
fs
and
mov
stos
pushl
insl
or
add
pop
pop
ds
adc
sbb
shr
aaa
clc
inc
orb
fstps
sub
insl
int3
cmp
sub
aad
clc
pop
lods
cs
xchg
sub
xor
testl
cmc
cli
jne
cmpsl
icebp
test
ds
call
lods
fists
sbb
les
stos
mov
dec
enter
xchg
push
sarb
cmpsl
adc
adc
jle
jnp
movsb
xchg
arpl
cltd
ss
popa
nop
push
mov
sbb
or
xchg
fmull
xchg
jecxz
and
mov
inc
mov
lods
cmc
mov
xchg
es
jnp
repnz
cld
call
std
shlb
sub
xchg
mov
int
sub
xchg
and
adc
lcall
pop
lds
dec
push
fsubr
xlat
inc
pop
dec
aad
xchg
cmp
fists
cmc
nop
dec
sub
mov
mov
pop
repz
loopne
rcrb
roll
lcall
inc
int
pop
outsb
dec
jae
jp
mov
or
rcrl
test
jae
push
mov
mov
adc
sbb
imul
test
mov
or
mov
push
mov
pop
mov
xor
in
and
or
xchg
lock
call
xor
pop
and
add
enter
add
insl
rcrb
push
mov
pop
mov
sahf
incl
ljmp
imul
sub
jbe
push
addr16
add
incl
test
lock
push
sbb
add
push
sbb
xor
outsb
mov
incl
jmp
cmc
pop
clc
pop
popa
out
mov
xor
test
outsb
aaa
push
pushl
repnz
sub
sub
out
dec
jo
icebp
xchg
xchg
mov
mov
mov
push
dec
dec
icebp
ja
out
fidivs
je
push
loopne
push
inc
mov
es
sahf
jns
push
shll
jmp
dec
leave
sti
jo
call
pop
test
jo
fisubl
scas
pop
pop
mov
cmpsb
cmpsl
or
daa
cmpsl
les
sahf
aad
outsl
cld
decl
fnsave
gs
adc
mov
hlt
mov
shlb
and
test
pop
and
push
sbb
ss
push
out
lock
add
add
decl
cwtl
and
jno
jg
fdivrl
or
pop
cli
mov
sub
mov
fwait
shrl
jmp
mov
push
enter
mov
dec
daa
lret
enter
mov
mov
int3
push
flds
arpl
push
insl
insl
mov
or
lcall
dec
xor
mov
inc
shr
cmp
lods
sarb
fs
ljmp
and
cmc
jo
dec
xchg
insl
adc
fldt
and
es
inc
std
pop
cmpb
or
das
inc
mov
add
add
push
fldenv
cmp
mov
mov
sbb
cmp
jg
pushl
pop
imul
mov
rcrl
adc
iret
jae
js
lcall
lahf
inc
outsl
repnz
add
push
push
fwait
les
ja
outsb
or
incl
mov
or
pusha
sbb
lret
dec
pushf
jge
loopne
les
hlt
and
lds
arpl
cwtl
out
push
push
jmp
pop
loope
mov
movsb
mov
and
les
out
lret
xor
call
daa
ret
mov
push
sbb
xchg
mov
pushl
clc
ljmp
and
out
mov
sub
adcl
stos
rclb
incl
popa
add
and
sub
xchg
mov
cwtl
pop
sub
cmpl
dec
xor
mov
fdiv
stc
pushl
ss
inc
lret
scas
insl
popa
stc
push
sub
fstpt
jnp
sarb
inc
adc
iret
add
in
dec
cli
or
pushl
cmpsb
loopne
xchg
lods
cmp
mov
pop
mov
enter
cld
movsl
lods
add
mov
dec
sub
bound
ljmp
jle
sbb
pop
sti
cmpsb
data16
cltd
and
push
jnp
dec
mov
xchg
sahf
mov
inc
clc
jmp
pop
call
mov
scas
sbb
shlb
lahf
cwtl
sbbb
pop
call
ss
mov
sahf
cmp
mov
aas
add
dec
pop
cmpsl
dec
sahf
mov
lret
imulb
insb
stc
jo
sarl
int
add
fcmovnu
call
std
jae
and
add
loope
push
push
sub
or
pop
mov
inc
repz
pushf
imul
lcall
sbb
je
mov
and
jbe
mov
jnp
popf
jmp
xlat
add
cmc
push
repz
inc
inc
xchg
imul
es
or
pop
pop
ljmp
outsl
out
mov
mov
pop
cmp
dec
into
pushl
dec
imul
sbb
rol
or
sti
dec
push
mov
add
sub
pop
loop
lods
es
fyl2xp1
call
push
mov
or
mov
adc
dec
hlt
push
orl
sbb
addl
ja
push
ret
ret
or
xchg
sbb
pushl
dec
negb
push
jno
and
stc
icebp
addr16
rcrb
shlb
adc
je
sarb
js
or
pushl
pop
xor
rclb
cwtl
fs
cmp
xor
jbe
ss
pop
jne
ret
in
ljmp
and
pop
xor
out
dec
call
mov
sti
js
repz
jnp
std
incl
pop
inc
mov
dec
rolb
outsb
xor
jecxz
pop
or
movsb
scas
jp
inc
jge
lcall
dec
ret
xor
pop
adc
dec
lock
jl
sub
sub
out
adc
xor
jg
pop
xchg
stos
or
sub
sar
enter
inc
push
adc
incl
clc
xchg
mov
adc
addr16
scas
mov
js
sub
pop
and
cwtl
mov
addr16
scas
out
and
mov
or
incl
jmp
rorl
out
push
mov
dec
shrb
xor
jmp
loope
xor
or
jbe
pop
cli
call
xchg
pop
call
pop
pop
mov
xchg
adc
cld
loop
test
xchg
sbb
cmp
inc
add
testb
push
incl
incl
outsl
xor
fsubrl
in
or
cmpsb
and
stc
mov
pushl
jnp
xor
sub
andl
dec
pop
and
stos
mov
sahf
ljmp
mov
add
lods
call
fs
xor
pop
ja
imul
jg
int
xor
dec
inc
andl
es
or
lcall
lcall
pop
xchg
lock
inc
jge
dec
inc
insl
adc
out
cmp
ljmp
pop
test
addr16
ret
test
mov
negb
lea
sub
push
mov
dec
imul
push
or
jmp
mov
sbb
inc
imul
arpl
mov
mov
ljmp
sub
nop
sarl
mov
inc
fisubrl
inc
mov
popf
cmpsl
push
shll
fdivrl
pmulhw
shll
loop
lret
xor
mov
fcoml
mov
loop
sub
test
shlb
fldl
sti
les
stos
mov
sti
inc
push
xor
xchg
mov
scas
aas
ljmp
jl,pn
pop
js
mov
lcall
jmp
cmp
and
mov
sub
mov
jbe
xor
lcall
idivb
push
pop
fcomp
leave
or
jmp
inc
cmp
inc
in
mov
cld
incl
sahf
cmp
daa
jae
movsl
adc
add
ljmp
sbb
fisttpll
pop
das
bound
inc
mov
jmp
js
push
inc
pop
clc
lcall
mov
mov
inc
scas
shlb
adc
lds
fdivr
pushl
or
imulb
pop
sub
nop
mov
lret
push
xchg
out
cs
call
sub
sub
test
jl
xacquire
adc
out
jmp
addr16
mov
add
push
cli
icebp
push
push
int3
lods
add
pop
mov
cmp
je
xchg
inc
mov
jmp
dec
or
roll
nop
inc
lods
sub
jae
fldenv
xor
mov
outsl
inc
fcomi
adc
mov
sti
mov
les
or
mov
scas
cli
mov
or
pusha
cmp
cmp
test
fistpll
jo
incl
adc
add
or
add
xor
lods
xchg
ljmp
cld
std
hlt
adc
pop
cmp
cmpsb
mov
fdiv
dec
ret
test
icebp
mov
push
add
xor
je
mov
das
lret
mov
cld
cld
xor
rcr
mov
fidivs
push
sub
jl
add
dec
decl
dec
xchg
imul
mov
sti
and
decl
sahf
cld
stc
loopne
inc
push
and
cmp
sbb
aas
pop
int3
mov
je
call
incl
lcall
cmp
popa
jl
mov
mov
leavew
movsb
mov
push
sahf
xor
xor
gs
stos
inc
inc
jge
ret
add
adc
cmp
clc
lcall
push
adc
mov
adc
pop
add
sahf
mov
or
leave
dec
ljmp
push
rorl
jg
add
leave
mov
mov
sub
mov
std
stos
pop
pop
aam
pushf
xchg
mov
cmp
dec
push
xlat
pop
push
mov
mov
pop
mov
sub
jae
lods
pusha
dec
push
mov
call
cmpsl
push
dec
xor
sbb
xchg
xchg
shr
jg
cld
add
test
lcall
xorl
lea
dec
jmp
clc
pop
rclb
mov
rol
call
jne
je
repnz
inc
or
adc
jns
sbbb
mov
hlt
push
inc
push
aad
enter
call
call
push
add
sub
dec
jle
je
push
jl
mov
push
int3
fs
add
sbb
int
cmc
push
jmp
test
sarl
enter
loope
aas
mov
pop
sub
sbb
leave
loopne
std
decl
cmp
cltd
cmp
pop
add
fisttps
jmp
in
mov
enter
rolb
mov
cmp
fcompl
xchg
je
lahf
adc
lahf
pop
lods
inc
data16
cmp
adc
addr16
lods
dec
inc
scas
jns
idiv
add
xchg
stc
clc
es
mov
dec
push
repnz
jmp
jne
scas
xchg
jnp
xor
iret
aas
cmp
lea
inc
sar
lcall
or
inc
mov
cmp
movsb
insb
jno
xor
insb
push
adc
push
inc
int
sbb
cmp
clc
out
adc
paddd
inc
xor
and
jns
xchg
lock
fs
scas
push
sbb
mov
std
mov
shlb
loop
cltd
dec
xchg
push
push
lods
sti
pushf
and
repnz
imul
movsl
push
adc
loopne
sub
cmc
xchg
ret
dec
jmp
cmp
add
mov
das
xchg
jg
push
jno
mov
push
or
sub
jg
jmp
pop
inc
pop
pop
mov
cmp
imul
inc
lcall
call
movsl
mov
jmp
movsb
repz
and
adc
bound
inc
jbe
ja
mov
leave
fmull
xchg
xor
cltd
fdivl
clc
inc
adcb
mov
dec
and
mov
mov
ljmp
cs
sbb
subb
xchg
mov
rolb
or
adc
imul
mov
inc
mov
inc
dec
cwtl
cmp
cmp
jle
ljmp
in
call
out
lea
and
add
ds
mov
xlat
or
dec
fmull
mov
mov
hlt
jnp
inc
fs
pop
mov
mov
pushl
and
imul
cli
fimull
jbe
aam
mov
adcb
and
mov
lret
or
fs
cmp
jg
cld
hlt
or
mov
cmp
ficoml
rorb
lds
pushl
xlat
cmp
rclb
pushf
adc
test
dec
fs
notb
outsb
test
dec
incl
jns
jp
push
inc
inc
adc
xor
mov
fidivrs
push
dec
push
insl
je
xor
mov
in
mov
into
mov
icebp
or
jmp
mov
inc
or
xor
lods
in
ss
add
loope
xchg
hlt
jg
jne
std
mov
stos
lds
adc
xchg
fimuls
ljmp
xchg
mov
std
ss
cmp
pushf
lock
nop
out
addr16
filds
imul
loopne
popf
cmp
jno
pop
sbb
arpl
xlat
ljmp
hlt
pop
dec
inc
out
xchg
fwait
jns
push
ds
inc
mov
jb
sbb
jmp
xor
dec
inc
mov
out
mov
adc
pop
popf
test
push
sbbl
push
call
cmp
popf
out
and
test
sbb
sub
mov
xor
in
pop
arpl
or
jmp
jnp
pop
xchg
popf
mov
jns
out
in
cs
mov
cmp
jg
jmp
ror
sub
rcr
pop
test
sbb
ljmp
call
push
inc
mov
xchg
ret
sbb
pop
popf
adc
das
fistpll
cli
or
les
outsl
pop
movsb
subb
call
aam
pop
popf
ret
push
rcrb
rcrb
stc
jne
mov
sti
xchg
jns
push
mov
xor
das
mov
inc
jle
xchg
pop
clc
pushl
mov
jle
loopne
jno
inc
arpl
lds
loop
jl
call
ds
clc
out
bound
push
push
test
sbb
in
add
mov
sti
loope
fwait
inc
ds
fs
clc
or
rolb
xor
fisubrl
shr
mov
jle
jl
std
incl
xchg
loopne
pop
clc
les
icebp
ljmp
xor
lcall
bnd
iret
dec
into
cmpl
cmp
push
in
mov
pushl
sbb
adc
ljmp
lcall
lcall
int
dec
jp
add
insl
cmove
in
xlat
push
in
mov
adc
xor
pop
lock
loope
inc
mov
daa
ss
push
sbb
into
nop
inc
or
ljmp
stos
sub
or
mov
cwtl
dec
fstps
add
add
mov
xchg
ret
add
incl
push
sub
dec
ljmp
pop
xor
sub
sub
add
dec
mov
mov
stc
shlb
or
mov
mov
std
adc
jnp
sub
cmp
inc
mul
sbb
mov
nop
stos
vsqrtsd
sar
jmp
mov
negb
mov
dec
negl
xor
int3
insl
cmp
jle
rep
icebp
add
fwait
cmp
neg
or
movb
incl
mov
fbstp
mov
ljmp
mov
fwait
scas
and
ds
xchg
sub
ss
loopne
jnp
inc
aaa
mov
mov
xchg
pop
sub
gs
dec
outsb
xlat
or
js
add
sar
sbb
in
adc
mov
std
adc
and
lcall
add
inc
mov
adc
jo
push
ret
arpl
sbb
or
add
lcall
decl
jg
ret
sbb
push
mov
sahf
mov
cmpsl
les
test
loope
std
xchg
fstps
push
repnz
into
cs
jp
jno
and
sahf
lea
lock
lods
movsb
icebp
hlt
out
andl
mov
push
or
xor
xchg
dec
fnstcw
scas
and
popl
sub
mov
xchg
adc
js
push
xlat
xchg
aaa
push
mov
ret
aaa
pop
or
dec
xchg
std
inc
mov
leave
arpl
fwait
adc
shr
test
gs
jg
xchg
xchg
and
mov
jns
inc
inc
das
lret
push
ljmp
cld
xchg
sahf
mov
lods
and
jbe
cmp
push
jae
loopne
cmp
das
cld
jge
jo
dec
ret
loope
dec
mov
pop
or
fisttpl
test
inc
cmpsb
mov
cmp
xor
pop
hlt
xchg
mov
leave
inc
adc
ljmp
cld
decl
testl
insl
sbb
fsubs
stos
cmp
push
inc
jb
sub
pushl
fs
inc
insb
loopne
sbb
xor
mov
movb
test
out
sbb
dec
std
incl
inc
xchg
mov
mov
insb
xchg
jmp
fst
cltd
mov
adc
sbb
or
ret
sbb
sahf
mov
nop
test
dec
test
lods
jg
pop
sbb
mov
les
sbb
mov
les
inc
pop
clc
ljmp
cmp
cld
iret
push
jae
sbb
mov
jns
jnp
mov
cli
rcrb
aaa
pop
stos
add
add
outsl
lds
cmpsl
popf
cmp
jae
dec
pop
xchg
stos
xchg
je
or
mov
pop
fimull
sub
xor
repnz
lock
idivl
pop
dec
test
jmp
inc
adc
mov
sbbl
and
pop
xchg
clc
rcll
or
lcall
lcall
add
ja
cli
pushl
xchg
jne
ds
mov
mov
push
pop
imul
sar
lock
call
in
arpl
jl
add
scas
les
mov
lahf
ljmp
sub
lret
in
and
loope
imul
aas
sahf
xor
pusha
and
loopne
rcll
sbb
sbb
mov
fldl
cltd
jno,pt
sub
jne
out
pushl
cli
lock
add
xor
inc
adc
out
xchg
pushf
mov
mov
popa
int3
push
sbb
stos
xchg
and
xor
push
sub
mov
mov
xor
ljmp
jge
sbb
pop
push
pop
loopne
inc
ret
add
pop
enter
sbb
loope
jae
mov
mov
in
push
inc
or
pop
xchg
push
mov
mov
out
setne
cmc
leave
pop
inc
jg
inc
pop
xor
jbe
cmpsb
in
pop
inc
pop
movsl
jmp
or
jnp
xor
mov
stc
mov
loope
sub
leave
mov
pop
pop
jecxz
clc
xchg
xor
incl
pusha
mov
jmp
fcmovnu
inc
jg
cli
enter
jmp
mov
jmp
sbb
and
out
imul
adc
cmp
xor
mov
xchg
inc
mov
je
xor
push
mov
xchg
call
mov
fsubrs
jge
test
aaa
call
add
jecxz
lret
loopne
scas
shll
mov
lcall
repz
jmp
ror
and
sti
mov
pushf
repz
stc
sub
call
push
roll
cld
movsb
sub
dec
xchg
incl
in
hlt
popf
fmuls
cld
stos
mov
scas
cmp
cs
xlat
lcall
cs
out
cmp
fld
test
adc
push
stos
in
addr16
xchg
push
lea
pushl
frstor
and
xchg
sbb
pop
sti
dec
mov
xchg
rcrb
mov
sahf
or
push
mov
or
std
or
int
mov
dec
xchg
lods
je
adc
jg
cmp
arpl
jp
mov
add
lcall
cld
jmp
popa
nop
cli
pop
xorl
adc
rcll
decl
std
call
mov
push
xor
lahf
xchg
mov
inc
out
mov
es
pushl
mov
jle
insl
jo
call
sbb
cmpsb
dec
pop
movsb
xor
fbld
mov
push
ja
pop
sub
add
and
js
out
out
and
lcall
ret
or
sub
outsb
jp
xor
ljmp
stos
push
imul
mov
cmp
ljmp
lcall
loop
and
les
int3
shll
fdivrs
xor
lock
jg
jle
js
mov
jmp
xchg
sub
sti
into
jg
adc
pop
and
add
enter
jl
sbb
mov
lds
mov
mov
aad
or
imul
cli
sti
adcb
incl
repnz
into
std
cmp
inc
inc
add
inc
push
out
xchg
sbb
and
adc
push
dec
decl
aam
sub
mov
sub
mov
vcvttpd2dq
cmp
popf
xchg
inc
int3
imul
in
jae
or
gs
insl
sub
mov
or
fdivr
mov
mov
mov
lcall
mov
shrb
push
adc
cmpsl
pushl
and
sub
test
enter
enter
mov
test
push
cmp
push
ja
add
xchg
enter
ljmp
jne
mov
xlat
nop
push
sbb
dec
fisttps
incl
mov
xchg
pop
and
cmp
push
adc
pop
cmp
lcall
and
das
push
stos
gs
sub
dec
mov
lcall
fisubs
fwait
sbb
nop
xor
ss
mov
xchg
xor
push
in
cs
std
call
xchg
mov
std
xor
jb
mov
jmp
call
in
add
cwtl
das
xchg
xlat
add
push
jo
roll
mov
orl
mov
sbb
iret
lahf
leave
jle
and
decl
push
or
rorb
lods
in
xchg
dec
jge
jmp
flds
jb
mov
aaa
jp
jae
jae
pop
sar
and
sar
jg
add
mov
add
inc
rol
daa
and
jbe
inc
out
push
mov
std
mov
mov
out
push
jae
push
fwait
xchg
lret
and
lcall
cltd
push
sahf
lret
mov
cmp
aaa
jbe
sub
xchg
clc
outsl
mov
ror
and
in
mov
and
icebp
mov
jg
add
mov
dec
jnp
push
sbb
call
mov
ljmp
mov
mov
pop
push
and
mov
decl
and
out
out
les
pop
and
push
sbb
push
jle
cmp
btc
pushf
or
jmp
jg
nop
dec
lods
jle
jg
jecxz
mov
cltd
fdivs
dec
scas
xchg
test
pop
inc
and
lea
push
decb
xlat
divl
repnz
cmp
gs
add
push
inc
int
int
in
andb
push
dec
testl
fsubrp
jle
divl
mov
lcall
fisttpll
lods
out
jg
cld
push
pushf
sti
insb
rorl
js
jge
xchg
inc
xchg
in
fisttpl
jmp
cli
dec
stc
xchg
jmp
lods
test
xor
dec
pushf
call
pushl
sub
mov
imul
mov
mov
fucomip
fildll
addr16
pop
pop
dec
add
fwait
pop
mov
lds
les
incl
jecxz
test
lret
nopl
leave
or
lods
adc
test
jp
int3
nop
pop
stos
cwtl
cs
lds
dec
cmp
xchg
or
xchg
cli
call
sbbb
xor
xchg
nop
movsb
pop
mov
inc
lods
mov
mov
out
out
pop
in
push
lret
push
and
inc
mov
and
jmp
out
ret
jp
ret
inc
in
hlt
loop
xor
sub
add
dec
int
and
call
mov
je
cli
fwait
xchg
mov
out
adc
insb
jge
xchg
out
pop
das
mov
xchg
push
dec
test
in
bound
cltd
mov
push
jg
push
pop
test
sbb
inc
sbb
jmp
xchg
dec
jle
faddp
call
decb
dec
dec
xchg
in
xlat
insl
fs
mov
push
cmpsl
call
inc
aaa
mov
lock
dec
xor
movsb
stc
inc
aam
std
push
call
loop
xchg
mov
icebp
jge
mov
les
call
repz
adc
icebp
and
cwtl
add
aaa
idiv
jmp
cli
mov
les
sbb
shlb
lods
aaa
jl
addr16
faddp
jbe
stos
mov
pop
sti
lea
mov
cltd
cwtl
cmp
fiaddl
jo
testl
scas
not
xchg
call
cmpsb
scas
in
out
or
jmp
int
ror
jno
fnstsw
pop
clc
adcb
addr16
inc
clc
movsl
aad
push
mov
notl
clc
test
push
add
call
dec
into
sbb
idiv
gs
lahf
cld
sub
and
insl
in
jne
mov
loopne
ljmp
pop
popa
out
sub
sub
xchg
aam
arpl
fnstcw
or
sub
test
sbb
pusha
mov
inc
and
push
call
sub
push
xlat
popf
nop
je
add
test
mov
xorb
das
aad
addb
inc
dec
xor
insb
std
int3
mov
mov
out
mov
in
je
mov
or
in
mov
sub
icebp
mov
cs
outsl
std
data16
dec
dec
push
adc
ljmp
test
popa
std
and
aas
inc
and
mov
mov
lcall
scas
pop
sub
pusha
xchg
jp
jl
pop
sbb
arpl
inc
jnp
and
pop
jae
fadds
ret
cmp
add
push
fdiv
std
push
scas
mov
psubd
stc
push
outsl
jns
test
xor
lea
dec
fildl
stc
xchg
push
testl
jg
outsl
icebp
pushl
cwtl
mov
into
add
dec
call
cmp
mov
jb
addr16
jns
sub
or
and
int
cs
pop
dec
pop
mov
int3
lcall
test
mov
insl
out
data16
decl
cmc
cmp
es
sub
mov
push
lds
push
mov
mov
sbbb
jmp
outsl
shlb
lret
cmp
es
adc
jp
mov
int3
fnstsw
pop
in
xorb
out
and
lcall
decl
mov
pop
in
rcr
push
fs
insl
sub
fbstp
dec
fwait
inc
push
jbe
hlt
dec
shl
mov
aas
or
ficoml
ljmp
xor
jo
dec
xor
mov
out
mov
xchg
loop
sbb
js
fnstsw
ljmp
or
pcmpgtd
stc
add
std
cmp
cmp
call
decl
or
and
pushf
es
outsb
bound
arpl
mov
scas
leave
push
es
in
rcl
fisubrs
push
pop
clc
in
xchg
lret
ja
data16
ljmp
repnz
xchg
xchg
mov
jns
xor
jns
dec
mov
jns
testb
ljmp
insb
and
ds
sub
mov
xor
xchg
jae
jb
inc
jne,pt
clc
loopne
repz
outsb
xor
popa
out
xchg
jmp
adc
ja
or
call
call
cmp
adcb
inc
out
or
adc
mov
popf
mov
imul
cs
jne
mov
inc
imulb
icebp
cmp
adc
gs
ds
sarl
sbb
pop
inc
aaa
and
lcall
cli
bound
or
shrb
imul
or
in
std
push
arpl
mov
jg
and
jno
pop
mov
shrl
dec
sbb
addl
out
dec
int
lock
push
in
push
out
jb
cmc
negb
jo
in
push
add
mov
pop
mov
jle
cmp
sar
cmp
test
lods
cli
or
mov
out
mov
inc
jecxz
xchg
hlt
sub
les
cld
mov
mov
mov
fdivr
sbb
push
pop
cmp
sbb
pop
mov
mov
dec
jnp
je
push
rcrl
lret
outsb
shl
sbb
maxps
rolb
aad
fisubrs
dec
call
fs
add
pusha
lret
call
daa
fildl
pusha
pop
jp
mov
dec
lret
jmp
ficoms
adc
jae
test
clc
call
test
mov
add
dec
popa
test
sbb
cld
jns
filds
shrb
out
mov
mov
in
bound
xor
lods
test
aaa
cli
push
dec
dec
dec
stos
scas
hlt
xchg
in
scas
andl
dec
or
outsb
mov
fsubl
sub
pop
push
xchg
pop
shlb
call
mov
in
in
mov
fmuls
mov
or
loope
ljmp
popa
mov
push
dec
jle
mov
lret
sti
cmp
jge
sub
insb
push
jg
xchg
jbe
adc
dec
imul
orb
mov
sbb
sub
mov
fucomip
inc
pop
and
mov
mov
cmp
and
or
call
push
pop
cli
xchg
scas
mov
mov
imul
decl
inc
leave
dec
adcl
sub
cmpsl
sti
sub
adc
ret
jo
pushf
cld
call
adc
mov
mov
in
cmp
mov
add
push
dec
jb
ljmp
data16
sbb
pop
pop
std
mov
stos
cmp
mov
in
dec
inc
add
in
inc
ds
jb
call
mov
cli
outsl
sbb
js
les
and
inc
push
push
out
jecxz
xchg
push
cld
mov
fdivrs
mov
imul
lcall
cmp
adc
mov
mov
xor
fdivrl
roll
cld
decl
std
rcll
ficomps
js
popa
sub
loop
pop
sub
mov
insb
sbb
jg
insl
ret
pop
push
scas
pop
arpl
dec
clc
add
jb
and
fidivl
daa
dec
fidivs
fstpl
cmp
pusha
adc
xor
into
imul
mov
xchg
shll
adc
rorl
dec
pop
jp
pushl
cli
add
push
mov
inc
popf
mov
lock
sar
cs
mov
add
mov
mov
out
add
movsl
stc
jg
sbbb
subl
or
hlt
and
and
xchg
push
in
jne
sbb
clc
dec
lods
jae
nop
add
mov
mov
and
or
rcll
add
jb
push
mov
pcmpgtb
sbb
das
pop
call
stc
mov
stc
inc
jb
movsl
push
mov
outsl
std
pop
xchg
mov
inc
mov
mov
dec
pop
outsl
hlt
mov
mov
fcmovu
imul
insb
sub
mov
add
aaa
pop
out
sub
mov
scas
mov
cmp
sbb
aad
shr
mov
and
push
scas
call
loope
negb
push
in
out
fdivrs
jl
inc
sub
cmp
mov
jnp
and
dec
incl
dec
xor
ret
icebp
clc
inc
lea
lods
testl
mov
ds
or
mov
add
dec
adc
mov
dec
aad
ffreep
faddl
cmp
cmp
pop
js
sbb
push
lea
mov
test
je
pop
xchg
in
ljmp
decl
xor
inc
xchg
rol
mov
ljmp
out
cmp
incl
inc
mov
test
or
dec
push
shrb
push
xchg
test
pop
lcall
decl
sbb
gs
mov
cmp
cmp
ss
mov
aam
sbb
call
xor
fisubl
aaa
cmpsl
pop
mov
jno
push
push
lcall
std
pushl
inc
test
sbb
mov
adc
adc
clc
decl
pop
dec
or
cs
dec
inc
cwtl
popf
jo
mull
xchg
call
popa
ja
jl
stc
pop
sub
fs
stos
inc
repnz
jmp
pop
jge
sarb
fistl
jp
scas
stos
fwait
jle
dec
jmp
push
adc
jmp
adc
lcall
sbb
xor
adc
call
cmp
leave
in
loopne
shl
dec
frstor
leave
jbe
decl
mov
and
rcrl
mull
test
ljmp
dec
jnp
mov
or
call
call
cltd
pop
xor
insb
aam
cmp
pop
pop
mov
cs
pushf
mov
aaa
mov
jp
dec
out
sbb
mov
mov
or
call
ss
jns
jecxz
cli
neg
pop
jge
adc
jbe
inc
xchg
call
decl
xor
test
xor
repnz
mov
cmp
or
ljmp
iret
sub
mov
or
inc
aad
push
add
and
fstps
mov
adc
insb
jae
jg
icebp
and
and
mov
outsb
jnp
loop
xor
les
xor
sbb
decl
mov
add
ret
pop
fistl
xchg
sbb
push
loope
cmp
mov
add
push
adc
dec
daa
lock
jmp
insb
mov
xorb
pop
mov
push
mov
or
jp
ljmp
mov
adc
jns
outsl
cld
inc
xchg
pop
cmp
push
test
mov
jl
ret
and
inc
jmp
lret
and
xchg
test
ljmp
mov
sbb
in
add
nop
pusha
sti
jle
js
testb
filds
pop
push
cltd
mov
pushf
stc
cmp
icebp
adc
inc
lcall
icebp
aam
fwait
mov
enter
int3
loope
dec
inc
dec
dec
jnp
xchg
mov
jl
inc
dec
mulb
sbb
mov
jg
popf
bound
fcmovb
out
lret
movsb
out
xchg
ljmp
pop
cmp
fcoml
les
dec
mov
fisubs
loop
movsl
ljmp
in
jns
pushf
mov
ret
jmp
inc
lahf
xor
xchg
xor
jle
mov
mov
aam
jmp
pop
clc
adc
movsb
sti
pop
push
sti
pop
roll
push
push
xor
fdivp
mov
push
mov
arpl
orb
lds
fcoml
push
decl
mov
lods
aad
xorl
mov
arpl
jb
adc
test
js
jg
lcall
imul
mov
and
mov
inc
ret
fucomip
incl
xchg
push
sbb
mov
xor
mov
fdivr
xor
movsb
scas
mov
mov
shrb
sub
int3
mov
shlb
es
imul
addr16
ljmp
xor
pushl
and
mov
pop
leave
std
adc
sbbb
imul
cli
in
sub
ret
test
fiaddl
incl
adc
xchg
dec
mov
pop
and
xor
add
or
mov
test
lea
imul
pusha
lret
adc
mov
mov
pushl
jns
ljmp
cmp
add
and
xchg
jecxz
negb
and
push
les
push
in
mov
push
push
clc
sub
pusha
mov
sarl
decl
push
push
cmp
pop
pop
xor
push
cmp
sbb
adc
add
sti
pop
fidivl
pop
add
mov
xchg
gs
mov
insl
test
lods
push
jmp
cwtl
clc
mov
sbb
repnz
sbb
mov
call
inc
mov
inc
cs
cmp
pop
shlb
xchg
lock
test
mov
sbb
xor
xchg
cmpsl
mov
mov
outsl
and
add
out
jecxz
cwtl
push
jle
jg
mov
pop
push
pusha
and
lahf
hlt
and
push
add
aaa
rcrl
roll
lcall
movsl
mov
vpperm
xlat
js
scas
shl
popa
jge
xor
mov
sub
pop
push
sbb
adc
out
and
mov
decl
adc
aam
dec
addr16
inc
mov
xor
jg
mov
aas
cmp
jl
fmuls
ja
pop
dec
adc
mov
das
cli
dec
adcl
pop
mov
mov
inc
mov
mov
icebp
xor
adc
movsl
or
test
push
mov
jg
movsl
push
imul
mov
jg
jge
sbb
adc
gs
icebp
outsl
std
incl
int
jg
add
push
addl
test
fimuls
and
add
int3
data16
lcall
adc
lret
sbb
stos
push
and
xchg
push
mov
aas
xchg
insb
sub
push
jno
ljmp
fisubs
rolb
cmp
in
pop
dec
jp
out
jmp
pop
int
clc
incl
dec
cwtl
icebp
cwtl
mov
nop
test
vcmpsd
gs
incl
lea
aaa
mov
sarb
pop
mov
xchg
push
les
popa
or
xor
mov
in
cmp
pusha
jle
cmp
ljmp
pop
push
xor
aaa
xchg
jmp
incl
inc
push
dec
sbb
cld
mov
bound
lods
adc
int3
xchg
idiv
or
mov
outsl
lock
xorb
inc
mov
mov
mov
movsl
push
xor
decl
insl
insb
push
out
movl
mov
hlt
ljmp
adc
mov
jp
ljmp
mov
addr16
push
jle
push
mov
pop
mov
add
pop
jg
outsl
inc
orb
dec
xchg
lea
pop
ljmp
cmp
cltd
call
fdivl
xchg
test
lret
gs
pop
pop
clc
incl
das
fmull
sub
shlb
loop
mov
cmp
icebp
outsl
cwtl
out
push
std
dec
or
mov
iret
enter
jo
add
lock
testl
mov
test
jge
pop
imul
lcall
shrl
and
out
popf
inc
testb
sbb
and
lods
cmpsb
push
mov
inc
pop
loope
lock
dec
testl
test
sub
lret
lea
jmp
pop
sbb
pushf
adc
shl
pop
in
jae,pn
jne
movl
bound
rorb
rorl
push
pusha
jp
fcomps
out
ror
jnp
pop
and
scas
jb
jb
jg
sti
mov
jnp
jb,pn
xor
xchg
aam
add
adc
call
fmuls
xchg
xchg
mov
push
jns
pop
mov
jb
mov
leave
imul
fs
dec
ret
aaa
les
xchg
cwtl
mov
sbb
pop
es
ljmp
sbb
and
mov
rcrl
inc
xlat
dec
push
fstpt
testb
out
loopne
cmp
cmpsb
sub
sub
jl
inc
loop
icebp
dec
push
imul
sub
inc
js
loopne
lcall
insb
pop
nop
scas
inc
inc
sub
into
in
push
test
lahf
fiaddl
and
incl
jmp
fistpll
fistps
outsb
rcr
dec
roll
mov
ljmp
ljmp
daa
jo
cwtl
add
icebp
test
loopne
pop
hlt
leave
out
jg
dec
add
les
insb
mov
jmp
jo
sub
xchg
in
daa
sti
fs
inc
fisttpl
mov
cmc
inc
push
fadds
incl
mov
pop
nop
in
cmc
test
pop
scas
xlat
pushl
pop
mov
push
faddp
sbb
pusha
or
mov
and
fcmovnbe
mov
es
jle
sub
jns
jecxz
cmp
nop
ljmp
repz
and
mov
das
and
jnp
xor
push
mov
test
dec
stos
dec
test
and
xor
shll
push
mov
add
add
xor
push
mov
push
mov
or
jmp
cmp
push
add
jae
fsub
xchg
xor
cmp
add
aad
dec
iret
dec
aas
sbb
rcrl
aas
cltd
ret
out
cmp
lods
inc
nop
int
or
decl
daa
add
lds
pop
jl
jecxz
es
cmc
and
es
mov
push
stos
jbe
mov
xor
mov
cld
mov
mov
mov
mov
loope
fnstcw
dec
aam
pop
outsb
lock
jb
movsl
cs
outsl
out
push
cmp
mov
cmp
cmp
lret
call
dec
fdivrs
jmp
fnstcw
lret
stos
fs
or
leave
jmp
adc
xchg
rcrb
popa
divps
pop
or
mov
movb
in
mov
jnp
lock
nop
lahf
mov
out
jmp
sub
mov
enter
pusha
jb
mov
push
movsl
fcoml
fsubr
jge
pop
scas
pshufw
pushl
loope
decb
and
add
mov
ret
movsb
ret
xchg
mov
sar
mov
das
adc
mov
mov
rcl
loope
pop
cli
imul
inc
sub
and
pop
dec
push
int3
sub
call
bound
enter
xor
dec
imul
orl
mov
mov
dec
sub
jp
jbe
call
push
cmp
ljmp
negb
out
add
jge
jmp
rorl
lea
and
cmc
xor
out
fldl
inc
pop
in
lret
xor
cmp
cmp
xchg
shl
jnp
cs
push
inc
xchg
gs
jne
call
mov
pushl
and
pop
add
call
inc
outsl
outsl
jle
or
and
aad
or
incl
sbb
inc
jge
or
jl
in
cmp
test
cmp
fisttps
rcr
mov
hlt
add
mov
fists
push
mov
lret
test
loop
jnp
sub
inc
xor
imul
pop
cld
inc
notl
cmc
mov
hlt
mov
fnstcw
pop
popa
call
shl
dec
int3
dec
and
jno
pushl
xchg
sahf
push
in
mov
out
and
push
xchg
sbb
dec
out
leave
xorb
shll
lea
xor
incl
mov
lret
and
scas
xor
lcall
pop
cli
decl
std
mov
lea
push
xrelease
push
jge
mov
das
stos
lock
test
push
adc
sub
sub
push
imul
inc
adc
inc
push
cwtl
mov
loopne
or
lods
push
adc
loop
lds
adc
imul
test
ljmp
mov
orb
pop
nop
mov
pop
cli
lahf
fcompl
xchg
pop
out
or
decl
xchg
xchg
xchg
mov
inc
jne
sub
and
jmp
lcall
daa
pop
adc
js
sbb
adc
inc
pop
push
mov
aaa
mov
mov
fnstsw
inc
xor
std
jb
dec
int3
adc
scas
paddusb
push
test
inc
incl
adc
push
test
push
jnp
inc
add
movsb
jno
dec
ljmp
adc
jo
pop
jae
jge
fs
push
aad
dec
cmpsb
fcoms
jg
xor
mov
mov
shrb
jg
xchg
xchg
cmpsb
in
pusha
jecxz
add
ss
pusha
fwait
rorb
and
mov
hlt
sbb
mov
sbb
test
incl
or
xlat
int3
sub
cmp
cld
cmp
ljmp
decl
cmc
xor
inc
xor
jmp
js
stos
aaa
idiv
sub
sti
rorl
or
jbe
inc
daa
int
ficoms
sar
sbb
imul
cltd
jnp
cmp
sub
pop
cmp
fcos
outsl
mov
pop
fistps
fists
pop
repz
adc
fstl
movsb
lods
dec
lock
mov
fs
xchg
jbe
push
call
pushf
mov
pop
std
push
or
shll
js
jl
insb
dec
cmp
cltd
jb
xor
movsb
or
call
test
mov
mov
test
lds
xor
imul
je
mov
jmp
xor
adc
ds
and
out
int3
imul
sbb
decl
std
dec
adc
push
jns
adc
xchg
pop
cmpsb
inc
call
mov
scas
aaa
xor
xor
xchg
rclb
lcall
xchg
xadd
cmp
pusha
or
cltd
int
xor
pop
int3
sbb
and
in
xlat
hlt
push
clc
cmc
arpl
lahf
aam
add
mov
pop
ja
inc
inc
add
jb
icebp
adc
stos
sub
lods
mov
out
clc
jg
fcompl
sbb
push
push
adc
ja
int3
lods
pop
mov
aaa
sbb
lcall
mov
scas
enter
in
fcom
sahf
je
adc
in
adc
or
mov
xchg
dec
outsb
mov
inc
and
pop
sahf
bound
mov
idiv
pushl
sub
pusha
movsb
sbb
fdivp
push
cmc
xchg
fistps
and
mov
std
and
sahf
xor
cmp
int3
add
popa
adc
cli
pushl
adc
or
data16
inc
leave
xlat
ss
xchg
ja
scas
ljmp
pushl
cmp
ss
lods
bound
sub
xchg
idivb
and
or
and
loope
clc
mov
mov
mov
aaa
jmp
nop
jnp
pop
rorl
xor
pop
std
pop
xchg
pop
mov
cmp
out
in
outsb
pop
cmpsl
scas
dec
ret
icebp
pop
ljmp
gs
cs
lock
mov
std
mov
cmpsb
cs
popf
mov
sub
xor
jae
cmp
std
cmp
ljmp
and
pop
repz
shld
aas
mov
in
andb
sub
mov
jb
adcl
arpl
vpsadbw
jmp
adc
xchg
lock
lods
mov
adc
push
push
dec
mov
adc
jg
jl
add
addr16
lret
xchg
iret
clc
lcall
stos
inc
ja
xchg
es
mov
xchg
pop
or
adc
mov
subl
add
mov
pop
in
inc
orl
jmp
out
jg
push
call
xchg
dec
cli
push
repnz
mov
scas
popa
jnp
jge
mov
enter
xor
fidivrl
test
add
xchg
cs
popaw
mov
out
or
jg
jmp
sub
cmpsl
pop
aad
sub
frstor
outsl
adc
ljmp
xchg
xchg
mov
pop
ss
mov
cs
pop
mov
cmp
sub
outsl
or
push
xor
ret
sub
sbb
sub
adcl
jg
push
mov
ja
mov
rorb
in
sub
or
and
adc
mov
xchg
push
jne
pop
loop
outsb
pop
mov
mov
jp
mov
pop
cmpsb
dec
lret
pop
inc
jp
sbb
ljmp
sahf
mov
and
dec
shlb
and
pushl
or
test
loop
loopne
pop
shrl
adc
movsl
pop
das
std
pushl
fidivl
lods
repz
int3
shll
mov
sub
xchg
dec
iret
mov
xchg
add
sbb
push
sbb
mov
jb
sub
pop
adc
mov
pop
in
jp
sti
out
pop
mov
repz
mov
shll
shlb
rclb
xor
std
or
das
pop
cs
into
cmp
push
jne
or
mov
xor
dec
icebp
mov
and
cmp
stos
in
mov
mov
loopne
sahf
cli
lret
decl
xor
push
add
xchg
jno
jmp
add
insl
incb
sub
scas
lahf
push
add
repnz
adcb
incl
imul
xor
push
mov
test
inc
ljmp
fwait
pop
push
cmpsb
ret
jecxz
jae
pusha
mov
xchg
rcrl
dec
decl
decl
repz
mov
gs
jne
rorb
pop
sti
or
fdivs
mov
movsb
inc
ss
jmp
out
xlat
loope
push
xchg
call
and
sarl
enter
adc
pop
add
dec
push
insl
mov
andb
push
das
cmpsl
inc
aaa
ljmp
cmc
pop
adc
and
sarb
clc
pop
cmpl
imull
cmp
movsl
mov
mov
push
push
subl
lcall
mov
in
pop
mov
addr16
lea
adc
fsubrl
fisubl
call
mov
test
ss
aas
mov
imul
sbb
in
sub
mov
in
nop
jae
add
pop
lock
add
lahf
lahf
fdivrp
jg
dec
jl
test
repz
sbb
enter
add
inc
das
xchg
icebp
xchg
mov
incl
pop
cli
imul
xor
inc
mov
jmp
inc
adc
jg
ja
out
insl
add
not
das
sbb
movsb
xchg
test
pop
add
stos
nop
sub
push
loope
cld
lret
loopne
sub
inc
sti
adc
add
xlat
add
lahf
loop
xchg
bound
jg
test
add
mov
pushf
mov
push
int
insb
sbb
pop
dec
clc
jle
jno
push
ljmp
icebp
inc
js
aas
cmp
filds
push
loopne
xchg
push
sub
iret
pop
test
pop
ljmp
xchg
mov
addr16
fildll
xchg
add
mov
pop
jl
mov
xchg
aaa
and
jae
outsb
cmp
adc
fs
mov
push
test
jb
add
sbb
mov
adc
icebp
push
lret
cmp
int3
sub
adc
xchg
dec
ja
movsl
out
iret
push
xchg
gs
add
xchg
lds
xor
jae
addr16
xchg
jp
iret
push
inc
dec
jno
sar
outsl
int
add
inc
pop
cwtl
aad
rcrl
add
decl
ss
es
mov
adc
ret
fimull
adc
sub
mov
outsb
shll
sub
cmp
loop
and
jae
pop
in
leave
pop
clc
or
cmc
push
xchg
sarb
inc
xor
add
adc
jl
ljmp
rcrl
out
lock
sub
js
dec
stos
mov
inc
pop
pusha
ds
sbb
mov
imul
and
cmpsl
popf
jbe
mov
aaa
pop
and
call
in
mov
pop
fisttpll
pushf
into
leave
dec
fists
movsl
jg
or
mov
shl
sub
mov
insb
ljmp
xchg
ja
and
mov
or
push
pop
in
jg
repnz
movsl
ljmp
or
hlt
cmpsb
adc
shl
les
outsl
scas
sbb
jne
push
or
adc
gs
lea
pop
xor
int3
mov
or
call
lahf
jbe
loop
pop
fbld
mov
hlt
adc
ja
jg
test
pop
sbb
ror
jno
jle
or
fwait
pusha
push
sub
add
decl
nop
outsb
jbe
enter
push
les
jg
dec
cwtl
fdivr
movsl
jg
pusha
jmp
jmp
pusha
cmpsb
xchg
movsl
and
sub
loope
push
les
clc
xlat
sti
jg
decl
es
mov
push
adc
xchg
dec
decl
jg
adc
xchg
insb
leave
mov
dec
dec
or
sub
sbb
aas
jo
fsubl
addl
loop
inc
or
inc
pushf
mov
adc
inc
insb
lock
mov
pusha
push
mov
fildll
push
out
pop
rolb
ss
mov
cmpb
cmc
repz
xor
movsl
lcall
mov
lock
call
inc
enter
add
ljmp
std
xchg
das
mov
cmc
mov
push
fdivrs
jns
sub
rorb
or
pop
incl
mov
or
push
jmp
outsl
ret
jmp
std
add
inc
sub
std
int
pop
pushl
cli
jno
jp
or
and
jns
js
inc
and
push
pushl
add
sti
xchg
sub
movsl
cltd
int3
add
jp
aas
fistps
pop
adc
out
adc
cmp
mov
arpl
loope
ljmp
jne
dec
repz
mov
test
pushl
adc
sbb
pop
fildll
mov
push
out
sti
mov
inc
iret
popf
pop
inc
mov
orb
orb
pop
das
rcll
out
jns
xor
hlt
leave
push
mov
pop
js
nop
mov
cli
push
inc
jmp
and
movsb
outsl
bound
cmp
cmp
ljmp
lds
mov
push
adc
loopne
arpl
loopne
jmp
hlt
sub
les
in
aaa
sbb
rclb
or
cs
bound
ljmp
inc
outsb
jnp
push
shlb
test
xor
lods
cmp
pop
out
aaa
pusha
int
lcall
aaa
lods
cmp
pmaxub
push
pop
and
inc
fisttpll
ljmp
or
scas
push
mov
ds
movsb
or
mov
xchg
xor
icebp
gs
mov
pop
pop
enter
mov
lock
pushl
clc
pushl
and
ret
cmp
dec
fsubr
lret
xlat
jne
andb
stos
sbb
add
js
incl
sub
mov
and
or
jmp
add
pushl
stos
and
lcall
cmp
jecxz
add
inc
stos
xchg
pushl
sub
adc
iret
nop
and
dec
adc
pushl
js
adc
loope
outsb
inc
ret
aad
cld
mov
nop
arpl
scas
jmp
xchg
inc
sub
jbe
xor
push
adc
xor
xchg
jns
test
sub
mov
pop
sbb
cmpsl
in
cs
sub
bound
sti
aad
cld
jmp
es
nop
push
push
add
dec
mov
fsubs
sbb
pop
pop
clc
decl
push
mov
xchg
cmp
leave
jp
mull
movsb
addr16
lcall
jmp
mov
ret
in
inc
jge
jmp
lcall
and
jno
push
sub
test
insb
or
xchg
xchg
loopne
mov
mov
inc
rol
aaa
clc
push
into
movaps
adc
sbb
push
inc
sbb
fs
mov
mov
sbb
bound
xchg
shll
xchg
and
mov
pushl
inc
ja
add
rorl
jmp
jl
adc
push
mov
xorb
or
int3
cmc
icebp
insl
outsb
sub
lea
cmp
mov
and
dec
lcall
orl
fwait
mov
pop
fadds
mov
bound
cmp
fnsave
pop
cmp
cmc
push
lods
icebp
jg
ud2
adc
mov
testl
ret
xor
ljmp
dec
shrl
cltd
xor
mov
add
inc
faddl
or
mov
outsb
arpl
mov
mov
pop
jg
sub
mov
mov
push
cmc
fiaddl
or
mov
test
pushf
les
outsl
icebp
call
mov
mov
inc
push
push
mov
rcrb
icebp
fucomip
dec
cmp
popa
in
or
mov
imul
xor
lcall
jge
pop
in
xchg
add
sbb
stc
je
ljmp
inc
mov
cmp
nop
inc
pusha
aad
xchg
mov
dec
inc
call
decl
stos
push
and
aam
xor
inc
js
insb
sbbl
sbb
xchg
repz
jge
adc
jne
lcall
lret
sarb
jp
mov
pusha
les
xchg
dec
lock
pop
fadds
outsl
insb
jle
mov
sub
xchg
lock
cmp
sbb
cli
push
nop
pop
js
dec
push
pop
shll
mov
arpl
dec
std
test
incl
mov
cwtl
test
xchg
ja
loop
jb
adc
sbb
lods
mov
adc
xchg
repnz
jg
dec
ljmp
xchg
adc
loop
or
jecxz
inc
jns
lods
lods
mov
outsb
adc
lcall
daa
jge
arpl
cmpsl
or
loopne
jle
sub
and
mov
shrl
and
and
in
test
sub
lods
movsl
fs
into
inc
pop
aam
leave
add
bound
add
js
mov
sbb
stos
inc
jno
out
subl
mov
jne
mov
in
ud1
lods
jmp
fldenv
xor
mov
mov
loope
mov
call
enter
xor
pop
arpl
loop
mov
jnp
xor
add
mov
call
mov
mov
loopne
push
pop
jmp
mov
xchg
sbb
adc
dec
push
or
in
push
adc
xlat
or
mov
scas
jnp
cmp
ljmp
lock
ljmp
mov
loop
test
push
pop
pop
xor
cld
cli
sub
push
dec
push
mov
cmp
sbb
and
call
call
sub
adc
test
and
xchg
pop
sti
lret
add
mov
sub
add
adc
popa
sbb
incl
inc
adc
test
inc
aam
mov
lahf
pop
xor
jp
fs
dec
jecxz
xchg
lret
xchg
or
push
or
adc
movsb
addr16
dec
mov
lds
clc
js
mov
mov
cmc
je
dec
cli
adc
inc
pop
and
decl
scas
out
mov
enter
out
popl
sbb
negl
pop
xor
or
std
lods
sub
mov
lds
sbb
and
pushl
andb
je
mov
jb
imul
hlt
out
mov
inc
sahf
rcl
outsb
xor
pop
xchg
out
xlat
push
xchg
es
mov
scas
test
dec
stc
pushl
nop
cmp
sub
push
lret
mov
in
dec
push
push
jae
xor
mov
mov
subb
icebp
jne
xor
and
call
and
ljmp
std
fwait
lds
pop
dec
or
arpl
push
mov
movsb
jns
xor
sub
ds
outsl
lock
pop
xchg
xchg
jmp
dec
mov
fiaddl
pop
add
and
data16
call
lods
into
or
mov
add
je
pusha
mov
daa
fucomip
lcall
mov
and
lahf
imul
xchg
jg
incl
xor
repnz
shlb
int3
out
pop
sbb
fstp
clc
add
mov
sti
das
sub
jg
sbb
out
fs
aaa
pushw
lea
pop
fwait
jge
mov
lcall
jmp
out
ja
fsubl
test
sbb
pop
adc
std
enter
ret
adc
pop
cs
call
call
mov
pop
jo
inc
xor
sub
test
inc
lods
leave
lcall
ret
fbld
jb
adc
fistpll
in
adc
fdivrp
popa
les
loope
stos
ljmp
cmc
pop
pop
aad
and
test
je
jge
loopne
lcall
jge
push
pop
clc
sbb
mov
cld
std
dec
jns
xchg
andb
hlt
loopne
jbe
push
jmp
outsb
les
fmull
sub
pop
jl
and
ljmp
icebp
inc
out
mov
sbb
lcall
arpl
dec
adc
jne
mov
add
shr
pop
es
insl
lcall
inc
bound
adc
in
std
xor
and
xlat
inc
sbbb
rcrl
lock
dec
mov
rclb
std
ljmp
mov
lret
or
dec
icebp
cli
lret
jle
adc
push
mov
jp
es
add
jno
cmp
in
sbb
and
fdivrl
sub
xchg
adc
dec
test
in
faddl
xchg
dec
std
ljmp
pop
shll
sbb
cmp
pusha
cltd
cmp
xor
decl
inc
mov
lret
sub
lret
pop
bound
jb
rclb
call
pop
sahf
dec
or
inc
mov
adc
jmp
arpl
shll
xchg
add
jo
outsl
call
outsl
fists
sbb
mov
cmp
cmpsl
sbb
dec
mov
inc
sbb
nop
stc
mov
dec
ljmp
and
xchg
sub
and
pusha
mov
dec
int
pushl
das
sahf
sub
test
stos
enter
stos
aas
pop
push
add
sti
jns
inc
jmp
out
mov
or
inc
dec
xor
push
shlb
inc
xchg
sbb
xchg
push
dec
mov
mov
adc
addl
movsl
decb
inc
shr
aaa
xor
aam
jecxz
mov
or
push
dec
inc
cmp
addr16
pop
xlat
cld
lea
call
ljmp
out
ret
and
popa
jecxz
push
ret
jmp
dec
cmp
cltd
jle
addl
mov
jl
push
cmp
je
cmpsl
adc
fstl
or
adc
jle
es
push
jle
jp
movsl
mov
hlt
fldt
pushf
lret
mov
jg
mov
mov
rcr
int3
dec
clc
jmp
jo
sbb
pusha
in
cmp
mov
inc
imul
cmc
jge
mov
or
inc
xor
xchg
push
outsl
fists
stos
lods
sbb
lcall
xchg
lods
icebp
testl
sub
adc
mov
push
fists
mov
adc
adc
add
jg
icebp
aam
add
xchg
and
rcrl
sub
xorb
pop
in
loopne
les
adc
aaa
arpl
fistpll
sbb
insl
mov
cmp
mov
not
xchg
movsb
add
add
mov
jbe
outsl
jo
pop
ja
mov
adc
popa
imul
jo
in
mov
jbe
mov
shlb
jae
or
in
mov
popf
ss
jle
jne
mov
mov
dec
xchg
xchg
popf
inc
mov
mov
dec
sub
push
js
dec
cmc
mov
dec
fs
mov
test
das
cmpsb
mov
xchg
adc
push
push
xchg
and
mov
icebp
fisubrl
sub
pop
inc
xchg
xor
xor
mov
dec
pop
imul
cmp
cmpsl
xchg
pop
mov
jno
int
mov
push
dec
jmp
cld
mov
and
shrb
in
push
push
cs
repz
xchg
jno
incl
jle
inc
xchg
in
xor
imul
or
or
pushf
push
clc
dec
or
dec
ficompl
mov
fdivrl
mov
incl
cmp
mov
add
int3
div
push
leave
sub
add
inc
gs
pop
pop
loopne
mov
ret
lods
mov
incl
inc
stos
inc
lea
mov
mov
mov
ds
sbb
fs
jmp
mov
xchg
pop
cwtl
daa
cmpsl
pop
pop
cmpsl
jle
outsb
mov
xor
adc
inc
imul
addr16
push
mov
lock
cmp
in
decl
adc
jno
xchg
ja
push
cltd
pop
inc
jns
push
lret
xchg
inc
mov
mov
lods
arpl
pop
jge
mov
jecxz
aam
mov
sar
clc
push
jge
cmp
int3
push
adc
jo
mov
push
repnz
cltd
call
cwtl
adc
aas
xlat
in
in
lar
fcmove
cmp
and
sbb
pop
xchg
nop
stc
push
ljmp
cli
imul
repz
push
mov
lock
inc
lcall
call
push
or
xchg
fnstenv
loop
mov
ds
imul
jg
sarl
cmp
push
push
outsl
xchg
cwtl
add
and
inc
dec
popa
scas
inc
call
movsl
adc
pop
ss
ljmp
or
aam
shrb
xor
or
push
loope
and
pop
jns
jno
push
cmp
inc
lock
pop
jno
add
gs
mov
mov
mov
add
fldt
arpl
lret
mov
xchg
incl
cld
sub
xchg
sbb
dec
dec
into
adc
jp
insl
ja
add
out
shl
push
mov
int
mov
aaa
mov
sbb
movsl
pop
mov
xchg
sbb
imul
mov
fildl
mov
dec
inc
mov
dec
repnz
pop
leave
call
add
enter
push
popf
push
dec
jns
mov
pop
ljmp
xchg
lret
bound
shlb
ds
xchg
fsubrp
daa
cltd
or
pop
loopne
test
inc
sub
inc
mov
rcr
loopne
xchg
outsl
or
stc
dec
and
adcl
lds
push
sarl
lods
xor
incl
imull
push
cs
mov
xor
loop
jns
mov
jne
xlat
sub
mov
and
fs
jbe
and
dec
cmp
fists
xor
pusha
mov
mov
jmp
aad
push
or
push
pop
dec
dec
pusha
mov
test
xlat
call
pusha
addr16
daa
shlb
and
jge
in
cld
rorl
mov
and
lcall
pop
mov
sub
mov
aam
inc
call
daa
cmc
pushl
jae
mov
pop
std
test
movsb
xchg
enter
or
jne
xchg
sbb
xchg
inc
sub
jmp
add
ret
sub
dec
dec
dec
mov
mov
mov
dec
mov
xlat
jmp
lret
out
mov
cmpl
rol
jg
loopne
inc
mov
stos
mov
xor
inc
sbbb
push
into
stos
inc
test
lock
sbb
test
pop
subl
in
jg
mov
sbb
mov
xor
subb
jo
jmp
daa
pop
xor
lea
and
lcall
das
lods
pop
mov
xor
insb
in
jnp
jo
jbe
and
ljmp
aaa
inc
push
in
call
pop
imul
sub
and
cmp
pushl
or
sbb
fstl
dec
popa
inc
adc
orb
jg
mov
ds
sahf
mov
push
push
inc
imull
fwait
mov
pop
test
outsb
test
or
lock
comiss
add
and
shll
inc
xchg
add
sub
in
test
fstps
cwtl
test
test
pop
mov
push
jmp
push
scas
out
xor
fistl
repnz
movsl
cmp
sbb
fmuls
xor
or
and
dec
lea
jmp
sbb
pusha
and
iret
sbb
xor
cmc
fdiv
aaa
clc
cmp
fxch
insb
ds
cs
lods
outsb
cmp
sar
pushl
movsl
js
mov
mov
dec
dec
inc
sbb
addl
jl
add
dec
or
stc
push
xchg
adc
dec
pop
push
aaa
pushf
outsb
push
fisttpll
pop
sbb
jmp
sahf
fmull
leave
or
xor
sub
rorl
mov
dec
cmp
dec
out
decl
outsb
lods
xchg
xor
in
sub
shl
in
call
shrl
pop
add
sbb
incl
lret
stc
repnz
flds
xchg
ficompl
incl
inc
popa
ret
out
jmp
test
iret
popf
fisttpl
xchg
imul
cmpsl
sub
jbe
out
jno
loop
push
cmp
adc
loope
mov
push
add
xchg
push
aad
test
nop
ja
mov
push
and
mov
mov
das
and
cmpb
int
adc
push
lcall
xchg
cli
popa
ja
sub
mov
aam
mov
mov
lods
adc
bound
imull
test
jg
int
jae
xorb
jp
cmp
sub
dec
mov
lock
incl
inc
cmp
mov
shlb
pop
adc
or
outsl
cmp
inc
xor
loop
pop
es
jp
jo
hlt
pushl
imul
out
mov
mov
adc
mov
call
mov
gs
and
and
mov
shrd
jg
add
mov
and
pop
cwtl
adc
lea
cld
sbb
cmc
outsl
testb
sub
or
adc
mov
ljmp
outsl
es
mov
push
push
add
cmpsb
in
and
arpl
stos
das
pop
inc
mov
das
hlt
pop
cli
mov
mov
and
in
or
fs
jg
adc
sub
fs
lock
xchg
mov
dec
add
cs
sub
sub
xorl
push
sahf
dec
inc
loope
clc
stos
ljmp
and
and
add
dec
add
fistps
in
jbe
lcall
push
sub
or
add
outsl
push
scas
subl
adc
and
sbb
das
push
jmp
addl
sbb
xchg
cmp
mov
add
sbb
test
jle
lret
jg
mov
test
imul
icebp
test
enter
inc
addb
push
xor
test
ljmp
or
mov
inc
int3
sub
dec
push
mov
iret
jne
arpl
jp
call
clc
iret
add
sbb
pop
fcmovbe
pop
or
add
mov
xlat
dec
push
inc
call
mov
cmp
stos
insl
xlat
test
test
adc
call
mov
out
mov
nop
cltd
mov
inc
arpl
jns
fistpl
std
mov
testb
sbb
jo
sbb
ds
push
inc
dec
sub
adc
mov
out
sti
in
mov
xchg
sub
cmp
cs
nop
or
call
xchg
imul
mov
in
rcrl
fistps
rorb
lcall
roll
or
sub
mov
jo
sub
ficoms
es
jg
call
pop
pop
cld
lods
xchg
mov
out
xchg
movsl
dec
adc
std
dec
push
xchg
cmp
mov
repnz
adc
incl
gs
mov
fldt
fcoms
lahf
in
and
xchg
in
and
xor
xor
in
sti
addl
ffree
lret
add
dec
repz
xor
add
ret
jmp
std
sbb
pop
push
pop
adc
dec
push
lcall
push
mov
cs
xor
test
and
pop
sub
and
add
xchg
mov
and
fwait
cmpsl
xchg
in
outsl
icebp
mov
insb
jge
adc
or
loope
lock
fwait
add
xor
decb
mov
adc
pushl
xor
jno
and
mov
xchg
jbe
add
movsb
mov
les
mov
fdivrp
filds
cltd
rcl
push
lahf
daa
pop
in
jecxz
stos
and
mov
sbbb
mov
sbb
ret
clc
mov
pop
pusha
add
mov
decl
sahf
fldl
inc
mov
mov
add
pop
xor
popa
shll
incb
xor
roll
mov
lcall
add
dec
add
dec
leave
outsb
adcl
incl
push
sub
sahf
pusha
sahf
inc
sub
mov
dec
add
inc
mov
sub
adc
fnstsw
xor
add
jb
movsl
popa
adc
adcb
lock
pushl
mov
adc
jmp
mov
sbb
ljmp
xchg
dec
dec
xor
pop
inc
dec
sarb
or
negl
decl
lret
jno
dec
push
leave
popf
call
into
and
test
lea
das
icebp
mov
lods
jb
data16
inc
enter
sub
pop
lret
inc
incl
inc
hlt
dec
cmpsb
popf
std
scas
sub
pop
dec
test
cmp
cmc
sub
decl
shll
inc
xor
popf
dec
xor
inc
test
lret
popa
adc
pop
xorl
pushl
sub
xor
dec
ljmp
xchg
mov
shrl
loopne
ljmp
and
jno
mov
mov
popf
shlb
xor
cltd
pop
mov
mov
mov
cmp
mov
ljmp
cmc
ljmp
cmp
int
leave
and
push
adc
jg
jmp
adc
stos
neg
shll
dec
and
and
shrb
pop
ljmp
inc
fldl
push
dec
push
movsb
loop
pop
stos
or
jp
rcrb
inc
and
lret
xor
adc
shrl
repz
imul
ret
or
push
pop
popa
test
js
lods
mov
mov
push
lock
xor
dec
cmp
fs
jmp
es
mov
int3
xchg
and
pusha
dec
push
dec
mov
pop
push
imull
cmpsb
gs
or
pop
hlt
add
xchg
lret
das
fldl
pushf
jp
fbstp
les
add
cmpl
cmovo
repnz
add
loope
jg
popa
dec
lock
popa
push
js
mov
jg
ss
mov
or
dec
mov
out
outsb
push
or
call
xchg
cs
shll
cs
dec
fnstsw
insb
divl
jg
dec
mov
jl
jmp
mov
mov
fcomps
pop
sbb
sub
and
ja
leave
test
test
jae
cmc
cli
mov
aas
xor
lods
adc
sarb
or
fdiv
pop
std
mov
out
push
xor
or
test
outsl
xchg
xor
data16
sub
xchg
daa
jno
pop
lods
and
jecxz
sbb
push
popf
mov
data16
dec
mov
subb
sub
ja
xchg
pop
pop
xor
call
incb
or
dec
ficoml
and
and
push
enter
or
fcmovnu
clc
incl
pop
mov
jb
or
jbe
sub
insb
pop
fsubp
cli
inc
and
mov
les
push
aaa
fistpl
movsb
cwtl
andb
dec
rorb
dec
incl
pop
pushf
std
fnstcw
incl
or
xchg
push
jg
shrl
lahf
sub
jmp
mov
das
icebp
outsl
sub
scas
lahf
sub
cmc
jb
scas
mov
call
paddw
icebp
lahf
std
out
push
push
mov
push
in
mov
sub
insl
inc
mov
jo
jbe,pt
ds
jp
sbb
ljmp
mov
or
xchg
jmp
mulb
add
outsl
hlt
mov
add
xchg
mov
jmp
decb
decl
xorl
jg
push
adc
loopne
adcb
notl
outsl
sbb
mov
lahf
xchg
insb
int
fildl
rcl
inc
inc
jbe
push
dec
sub
ja
push
mov
out
insl
into
mov
ds
out
nop
out
or
out
repz
fildll
rorl
cmp
jnp
jns
pop
pop
or
sti
pop
jnp
stc
push
movaps
das
stos
lods
jmp
test
xor
scas
pop
pop
jg
or
out
xchg
clc
pushl
pop
cld
add
hlt
mov
and
clc
lds
dec
call
std
sbbl
f2xm1
push
int3
incl
mov
dec
decl
add
loope
add
sub
or
push
std
jne
mov
inc
aas
sbb
movsl
shrl
hlt
xchg
je
ljmp
outsl
mov
mov
mov
push
aas
adc
decb
dec
popf
dec
std
ljmp
pop
pop
push
cltd
cli
aam
out
popa
cmc
sar
std
lcall
scas
dec
add
pop
dec
push
ljmp
pushl
pop
pop
pop
dec
lcall
test
sub
pop
incl
pushl
pop
sar
pop
push
pusha
mov
push
leave
out
jb
js
call
mov
incl
xchg
loope
mov
leave
push
jmp
add
pop
out
xchg
lds
pop
cmpsb
mov
mov
pushf
fistpl
inc
xor
fcompl
addr16
hlt
add
ljmp
mov
cmp
stc
cmp
jg
aas
mov
scas
cmp
cmp
std
ja
jns
filds
fisttps
mov
aas
divps
stc
mov
fistpll
std
das
cld
inc
add
daa
test
test
push
mov
push
addr16
mov
out
fistps
sbb
cli
jl
cmpsb
cmp
nop
insl
sar
in
shl
push
pop
jnp
pop
jle
dec
pushf
andl
or
fsubrl
test
jg
sub
ljmp
cmp
cli
cmp
lea
mov
fistl
das
hlt
lahf
or
cmp
stos
call
mov
cli
jne
sar
ret
xor
inc
add
call
mov
dec
aas
push
pop
push
jp
adc
inc
mov
mov
sbb
cmp
pop
pushf
mov
pop
fisttpl
sub
jg
sbb
inc
mov
jmp
sar
out
inc
jp
repnz
out
mov
repnz
mov
popl
jo
push
sbb
inc
add
out
and
push
clc
pop
pop
pop
add
dec
lods
mov
pop
adc
das
clc
cli
xchg
pop
aad
cmp
addl
cli
call
mov
cmpsl
mov
cli
shrl
ret
and
leave
in
aas
jmp
lock
.byte
mov
incl
push
outsl
imul
idiv
outsb
dec
gs
bound
jae
imul
jo
xor
cs
insb
call
push
push
ja
push
jb
jbe
insb
gs
insb
dec
outsl
fs
jne
cmp
dec
dec
xor
dec
xor
outsb
mov
cs
and
data16
popa
jb
pop
dec
imul
mov
sbb
pop
inc
jne
pop
outsb
je
imul
out
jl
outsl
outsb
pop
inc
jo
and
je
jae
pop
ja
inc
inc
push
jg
fs
std
jae
je
jo
pop
vmread
cmp
inc
mov
arpl
dec
dec
inc
add
bound
je
jnp
fistpl
pop
sub
adc
and
jmpw
add
sub
inc
inc
dec
dec
inc
mov
inc
inc
inc
sub
dec
pop
push
add
mov
fucomi
push
dec
push
dec
addr16
data16
das
dec
outsl
jmp
push
je
mov
inc
mov
and
jne
and
sbb
fnsave
insb
push
and
and
ljmp
push
push
inc
inc
dec
pop
push
push
push
or
scas
std
mov
dec
pop
add
cmp
shlb
imul
jg
xor
xor
mov
das
jae
xor
inc
xor
push
dec
dec
push
inc
mov
pop
xor
mov
pop
jle
sar
insb
jo
popa
inc
arpl
inc
push
inc
dec
inc
packssdw
inc
dec
aas
adc
pop
mov
adcl
fwait
dec
mov
jne
and
dec
jge
sbb
or
push
push
push
inc
dec
inc
pop
inc
dec
pop
jg
fidivs
push
inc
add
dec
inc
insl
jae
xor
sbb
je,pn
aas
inc
cmp
jmp
sub
jo
inc
sub
or
test
sub
fucomp
insb
pop
pop
or
mov
outsl
jo
push
and
sar
mov
push
add
add
add
add
add
pop
cs
decl
or
or
or
or
or
movups
adc
dec
pop
fwait
jl
aas
add
add
dec
shll
or
push
push
xlat
xor
shrl
ds
jle
aas
xor
xlat
mov
add
add
pop
or
pop
pop
pop
shll
mov
sti
or
pop
add
add
pop
or
or
shll
adc
pushl
rcrl
push
inc
cwtl
xlat
jae
pop
dec
xchg
fcmovb
xor
and
ret
adc
ja
js
fs
jo
decl
ret
sub
xor
cmp
jne
mov
incl
sub
mov
push
mov
mov
test
je
mov
inc
inc
decl
icebp
cmpl
out
mov
out
jne
dec
mov
pop
ret
out
outsl
pop
in
add
or
cmp
mov
je
aas
fimuls
imul
add
dec
jne
adc
adc
mov
pop
sub
mov
pop
cmp
adc
ljmp
enter
jb
sub
add
jmp
dec
or
in
sbb
xor
insl
or
insb
mov
mov
mov
add
divb
lock
idiv
movb
sbb
xchg
pop
ja
call
sub
rclb
mov
neg
xchg
sti
je
lea
push
push
add
lods
push
push
fwait
in
ret
outsl
adc
push
movl
add
shlb
mov
pushl
push
call
add
ret
fstps
mov
mov
pop
pop
call
std
push
fcmove
ret
sbb
mov
mov
mov
clc
add
mov
jb
lock
dec
push
mov
adc
test
mov
pop
adc
ss
test
push
mov
mov
lcall
fistpl
push
cmpl
lock
xor
push
ss
dec
sbb
or
in
insb
das
pushl
push
jbe
lea
in
aaa
adc
imulb
adc
add
cmp
jb
fisubrl
push
and
push
push
dec
pop
mov
in
jmp
cmp
je
movl
ds
sbb
in
add
aas
and
or
adc
repz
dec
inc
insl
insl
rcr
jmp
cmpl
repz
ja
addr16
ja
or
mov
jmp
mov
mov
push
std
insb
in
fcoms
or
xor
fwait
into
sbb
dec
inc
adc
and
pop
or
mov
bswap
adc
pop
and
jmp
addb
sbb
movsbl
popa
or
push
daa
and
in
fucomp
jmp
adc
and
inc
add
fstpl
mov
and
out
jo
jnp
and
dec
repnz
aas
pop
mov
test
inc
sbb
mov
ret
bound
and
sub
test
test
idivb
fimuls
xlat
push
lock
je
je
fisubl
sbb
or
push
clc
in
ficoml
iret
fsubs
push
jne
notb
or
dec
addr16
mov
inc
push
add
pop
mov
push
cmpb
push
into
jge
add
mov
cmpb
sbb
out
pop
push
adc
sbb
and
xchg
and
outsb
cs
pop
or
lea
out
push
rep
stos
sbb
std
pop
loope
pushf
stos
in
or
lods
fstpt
add
mov
push
out
mov
pop
test
ret
scas
or
das
mov
fnsave
ret
punpckhbw
add
mov
mov
adc
jle
dec
push
incl
jl
pop
jne
fisttpl
mov
add
ss
or
adc
loop
hlt
and
adc
sub
sahf
xor
mov
dec
mov
mov
cmpsl
fcomip
fistps
pushl
fucomi
stos
test
and
inc
fs
jbe
pop
adc
and
sbb
sbb
out
jle
pusha
mov
mov
sbb
fmuls
inc
add
pop
js
outsb
pusha
fdivr
fdivs
adc
adc
mov
fnstsw
ret
mov
jmp
xor
cmp
sti
jmp
xchg
rorl
mov
add
push
mov
lea
adc
mov
fimull
or
add
mov
sub
pop
push
pop
nop
scas
shll
pop
dec
add
jmp
mov
sbb
lret
sub
in
add
mov
dec
enter
insb
addr16
fsubs
and
cmp
sbb
xor
or
mov
cmp
mov
dec
nop
xchg
xchg
adc
popa
mov
cmp
adc
xor
sbb
pop
test
mov
lcall
xor
pop
or
pop
jne
sbb
pop
mov
dec
loop
decl
inc
add
inc
add
jne
jle
pop
popa
fidivrl
jne
cmp
add
cmp
sbb
repnz
push
push
push
sar
xor
dec
push
enter
and
shll
jo
pop
pop
add
mov
insb
es
cmp
sbb
je
pop
add
or
push
shrb
psubsb
mov
jge
pushf
or
into
orb
mov
sbb
and
pop
and
jbe
push
add
in
rcrl
xor
pop
sbb
add
mov
push
test
outsl
incl
add
daa
push
add
push
pop
add
add
push
fucomi
adc
or
loope
rdpmc
jmp
adc
iret
sbb
hlt
fwait
jmp
xchg
rorl
insb
addb
lock
mov
jl
add
or
js
outsb
xchg
pushf
je
in
lock
mov
pop
xor
cmp
sahf
out
cltd
xchg
adc
mov
ret
lods
enter
pusha
sbb
out
adc
cmp
or
mov
pop
mov
adc
out
inc
sub
loop
add
test
fstpl
cli
push
jmp
cmp
sbb
sub
add
push
jg
xchg
inc
mov
ficomps
testb
fcomp
jmp
xor
jne
xrelease
leave
pusha
cs
xor
inc
cld
jp
jbe
jne
das
mov
sub
push
pop
sub
or
xchg
or
and
neg
sbb
and
add
cmp
lods
sbb
push
push
adc
or
cmp
xor
in
xor
fcomps
sub
pusha
sub
pop
push
push
or
leave
or
shll
repnz
dec
jl
leave
push
sub
push
add
sti
shld
or
cmpl
sbbb
mov
jmp
ja
lret
jmp
jno
inc
das
or
adc
or
mov
pcmpeqb
add
ror
pop
xor
les
or
inc
mov
sbb
fs
xchg
jno
popa
arpl
or
enter
hlt
sti
push
fmuls
xchg
fstl
movb
aas
and
test
int3
jbe
inc
pop
pop
push
dec
lods
and
mov
mov
loop
xlat
cmp
xor
fisttpll
push
or
aas
pushf
popa
mov
mov
mov
pop
pop
fnsave
adc
adc
lahf
lock
inc
sbb
imull
pop
je
cmpsl
inc
xchg
add
outsb
adc
stc
push
lock
jo
ret
cmpl
rclb
pop
loope
mov
pop
or
scas
inc
pop
sti
scas
push
jns
aaa
dec
push
push
sub
js
xchg
data16
dec
ss
add
rol
dec
lds
enter
xor
jg
adc
cmp
xchg
fcomp
test
add
mov
jo
hlt
aaa
fdivl
sbb
hlt
mov
mov
jp
aam
test
inc
cmp
pop
cltd
scas
sahf
jp
test
out
imul
mov
mov
push
mov
push
lret
addr16
mov
inc
insb
inc
mov
xchg
test
adc
sub
push
jbe
movsl
jb
loopne
call
pop
push
push
rcrb
push
arpl
rcrl
js
pop
ljmp
sar
jno
add
ret
inc
xchg
pushl
mov
adc
rolb
incl
or
fadds
jl
add
or
sbb
mov
jg
or
nop
pop
or
push
jne
cmp
sbb
sub
incb
or
inc
jl
mov
movsl
stos
insl
push
xor
cld
rcll
push
loop
clc
dec
mov
pop
das
ds
xor
jnp
and
dec
aam
xchg
cmp
andb
mov
add
data16
popa
push
mov
cmpsl
fmuls
stos
sbb
fldpi
sbb
insb
aaa
icebp
cmpsb
test
mov
dec
and
daa
and
add
subl
cmp
jne
testb
in
or
jno
std
mov
scas
sbb
push
adc
rorl
inc
inc
jne
daa
xor
and
in
sub
rorl
roll
clc
xor
cmp
clc
mov
scas
jecxz
movb
pop
cmp
adc
sbb
cltd
mov
push
and
lods
pop
cmpsb
aam
xor
testl
loopne
int3
movsb
ss
lods
les
adc
sbb
push
daa
or
push
int
inc
lock
mov
push
sbb
inc
push
pusha
inc
mov
nop
mov
nop
pop
jbe
ret
xor
pop
push
dec
mov
lods
rcr
pop
repnz
test
push
scas
xor
insl
gs
std
lods
push
xlat
mov
es
adc
jo
xchg
and
je
push
or
test
shrb
mov
pop
mov
sub
pop
and
push
xchg
mov
sub
movsb
dec
xor
std
jmp
push
push
cli
int
mov
test
and
loopne
mov
and
shrb
push
and
cs
jbe
data16
mov
addr16
das
sbb
mov
mov
movsb
jbe
orl
lock
pop
fsubrs
ficoms
bound
push
add
inc
push
or
insl
andl
movsb
rolb
push
fmuls
sub
mov
sbb
fdiv
test
popf
inc
push
sahf
in
sbb
popa
test
or
je
push
jo
mov
push
ds
or
xor
sbb
or
push
dec
je
inc
into
push
shrl
push
lods
sub
or
dec
lock
popf
jle,pn
dec
inc
sarl
inc
cmp
pusha
adc
lds
pop
loopne
cmp
xchg
pop
pop
push
or
outsb
jle
push
inc
push
xchg
or
fwait
sbb
adc
and
mov
adc
sbb
dec
jg
jmp
push
dec
push
mov
push
fnstenv
jae
dec
test
mov
in
dec
mov
fs
shlb
pop
dec
cmp
mov
aaa
adc
popl
dec
mov
data16
hlt
xor
or
adc
and
or
push
adc
xchg
jmp
sub
dec
movsb
rorb
mov
mov
mov
dec
or
mov
adc
mov
mov
pop
push
insb
sbb
jne
adc
mov
or
mov
or
mov
adc
mov
add
jo
idivl
cmp
cmp
rolb
push
pushf
dec
adc
mov
push
push
fisttpl
push
inc
add
jae
je
cmpsb
pop
or
or
push
adc
xor
sub
das
add
in
jne
cmp
mov
push
testb
lds
je
push
jmp
mov
je
push
mov
and
stos
mov
sub
test
cs
adc
ljmp
icebp
dec
ret
or
adc
push
mov
mov
repnz
test
sub
jg
mov
push
sub
aas
fmull
mov
sub
lock
aas
sub
adc
sub
lods
shrb
clc
push
fsubrs
or
cmp
or
or
insb
or
jp
push
sub
cltd
push
outsb
hlt
fldt
ret
stc
add
xchg
pop
jns
leave
fidivrl
lea
cmp
jle
push
push
call
sub
and
out
mov
lea
cmp
rorl
xor
pop
push
push
mov
push
iret
jl
sbb
fcoml
mov
pop
dec
call
in
pop
clc
adc
cmp
ja
mov
aas
cmp
je
and
or
pop
pop
aam
cwtl
sbb
add
mov
lock
mov
and
push
rep
dec
int3
sbb
mov
ret
js
jbe
adcb
adc
push
fisubrs
add
xchg
subl
dec
jl
inc
xchg
sti
jle
sbb
xchg
movsl
mov
mov
cmpb
je
or
je
push
popf
imul
inc
cmp
adc
inc
xchg
out
fdivr
jne
lret
sarb
lret
pop
sbb
xchg
push
imul
sti
int
mov
jg
movups
jmp
cmp
ss
fidivrl
cmp
jne
or
jmp
fyl2x
rcrb
cmp
decl
and
insl
or
ljmp
cmp
push
call
shl
mov
mov
inc
dec
jne
mov
int3
or
xlat
btc
jae
add
mov
lsl
jge
mov
fnstcw
jp
nop
sub
mov
fcmovu
add
sbb
test
push
mov
push
inc
and
and
pop
std
psubb
lea
imull
dec
das
inc
xor
fnstsw
push
mov
xor
push
call
lock
jmp
out
adcl
adc
iret
lods
push
inc
les
pop
mov
and
pop
imul
add
xor
adc
push
imul
push
in
out
inc
cmp
test
mov
mov
fs
mov
jmp
pushl
jo
mov
sub
xchg
int
pop
ret
jbe
loopne
addb
je
clc
sbb
je
mov
mov
int
add
pusha
or
mov
jnp
mov
or
push
pop
jmp
mov
add
adc
imul
in
xchg
xlat
mov
jnp
in
mov
cmpb
inc
sar
daa
fisttpl
mov
adc
lock
pusha
jae
cmp
stc
lock
sub
xchg
arpl
mov
stos
lock
dec
add
mov
fwait
or
sti
sbb
adc
clc
js
xchg
mov
pop
insl
je
ret
mov
jbe
cmp
xchg
aad
add
ret
mov
push
inc
push
mov
mov
or
pop
or
mov
test
mov
shr
sub
movsb
mov
ret
xchg
push
xchg
pop
mov
cmp
add
ret
jecxz
adcb
inc
aad
jmp
xchg
xchg
in
pop
cld
rcr
dec
mov
or
les
push
mov
stc
pop
mov
addr16
and
jne
test
add
mov
ljmp
pop
inc
jne
push
shlb
mov
je
mov
mov
cld
test
xor
addb
inc
pop
or
daa
fs
adc
adc
adc
or
inc
addb
lret
bound
mov
fadd
subl
mov
fldlg2
pop
stos
inc
push
cmpsl
and
pop
mov
mov
xor
push
cmp
fbstp
stos
jmp
push
movsl
adc
jae
jmp
or
and
loop
gs
and
sahf
and
xor
pop
test
push
pop
in
test
lahf
aam
cmp
adc
or
jg
ret
push
cmp
jle
or
or
inc
mov
dec
inc
aaa
test
loopne
sbb
cmpb
inc
cmp
ficoml
iret
out
jmp
mov
lret
add
imul
adc
cmp
add
or
cld
lods
insl
cmp
add
add
faddl
xor
movsb
jb
sub
mov
aam
or
jno
rorl
fiaddl
adc
imul
mov
mov
push
movb
mov
xorl
inc
stos
adc
loopne
inc
shll
cmp
cli
mov
imull
aaa
mov
pop
je
jmp
lcall
pop
and
inc
add
test
xor
xlat
into
mov
aas
jmp
comiss
add
movb
sti
inc
inc
inc
jmp
sbb
mov
and
inc
sub
and
pop
pop
push
aam
mov
outsb
outsb
ljmp
test
add
xchg
xor
cmp
jge
adc
lahf
push
add
adc
out
push
pop
sub
stos
cmpb
add
fmuls
xadd
call
add
and
in
int
mov
pop
inc
add
pop
sub
sbb
cmp
int
add
push
test
rorl
outsb
or
mov
pop
jg
push
mov
jmp
cmp
sub
xchg
adc
pop
and
mov
dec
lret
pop
imul
inc
jp
add
je
add
je
and
adc
or
pop
arpl
jmp
andl
or
in
scas
hlt
sub
lret
adc
jmp
or
jmp
sub
jl
sub
stos
xor
daa
xchg
sub
push
add
daa
dec
daa
dec
xor
add
fwait
imul
stos
push
cmp
sbb
push
jo
jne
and
mov
or
loopne
test
mov
add
jl
push
adc
leave
shl
inc
je
add
cmp
push
pop
nop
push
pop
loope
fs
shlb
clc
adc
rorb
xor
push
push
lret
sti
es
insb
cltd
lock
dec
inc
mov
mov
add
mov
movsb
or
addb
pop
rolb
mov
push
xor
xor
sub
leave
test
leave
push
sub
push
push
push
mov
sbb
in
insb
sub
daa
jne
pusha
mov
in
cwtl
mov
out
xlat
xor
scas
fcmovnu
xor
andl
jnp
shr
adc
orb
call
add
imul
pop
ret
add
popa
mov
in
pop
fsubrs
mov
mov
ds
lock
in
loopne
rcll
out
sbb
jmp
pop
xor
ret
or
test
mov
xchg
push
push
dec
aam
add
jle
push
fdivl
cmc
sub
aad
adc
xor
popf
incl
sbb
fisubs
pusha
jno
jb
xchg
pop
cmp
xchg
xchg
ds
iret
xchg
in
adc
andl
inc
pop
push
in
sbb
add
fucomip
jecxz
div
ficompl
rorb
scas
and
add
add
add
out
std
jb
push
aam
xor
push
mov
push
and
xor
cs
pusha
xchg
fadds
push
xor
mov
mov
lea
les
or
lods
or
addl
push
add
in
cmp
out
push
cwtl
mov
or
sbb
pop
mov
push
cmp
mov
or
cs
inc
aam
ret
and
dec
adc
call
or
les
ret
popf
adc
adc
mov
or
and
mov
sub
fnsave
scas
movsb
and
push
adcb
cs
or
pop
xlat
dec
mov
adc
pop
add
test
xchg
mov
inc
pop
mov
scas
ss
cmp
hlt
in
xchg
inc
adc
addr16
sub
jecxz
in
sbb
push
dec
mov
lea
jmp
dec
pop
fs
inc
adc
fldt
adc
bt
add
sub
shl
mulb
adc
jo
xor
push
adc
jb
push
hlt
pop
jbe
cmp
mov
pop
ret
fldpi
inc
shlb
arpl
fs
mov
jmp
xor
inc
add
sbb
pop
add
adc
or
jge
sub
lret
or
inc
mov
mov
adc
mov
insl
scas
dec
push
lds
pop
scas
cltd
sbb
int
and
adc
cmp
test
sbb
mov
mov
les
data16
enter
pop
pop
js
xchg
jno
dec
sbb
mov
inc
mov
pop
push
outsb
add
jge
leave
cmpsl
pusha
inc
pop
fs
pop
mov
ljmp
fistpl
ss
jbe
inc
mov
jmp
push
and
jmp
adc
test
loope
dec
lret
xor
mov
or
or
add
xchg
sbb
sbb
sbb
out
sbb
push
sub
xor
sbb
push
insl
xor
fwait
inc
or
mov
repz
negb
or
hlt
loopne
sub
mov
adc
adc
sub
cwtl
inc
and
ret
arpl
or
sbb
orl
ja
aad
add
test
add
xchg
movsl
ds
test
pop
mov
stc
or
les
aas
insl
sub
jmp
and
or
and
sahf
lcall
add
adc
mov
shll
dec
inc
adc
sbb
push
jbe
xadd
addr16
and
rorb
cmp
insl
fistl
sbb
jl
sub
adc
inc
icebp
ret
push
push
and
cmpsb
inc
testb
jne
add
cld
or
mov
int3
mov
pop
adc
push
jp
loop
cmp
jnp
or
push
cmp
mov
lock
add
xor
fsub
movsl
ret
roll
pop
xchg
into
fdiv
stos
mov
inc
mov
add
ss
int
jb
in
fadds
xor
or
pop
mov
cwtl
and
pop
fildll
xor
or
adc
sbb
adc
xor
jne
jp
out
xlat
mov
push
and
add
sbb
out
pop
je
das
arpl
pop
add
lahf
clc
shl
mov
push
pop
mov
aaa
and
lds
mov
loop
xchg
add
dec
mov
mov
push
mov
push
sbb
nop
mov
sub
adc
and
ret
sarl
and
pop
xchg
andl
lea
push
shlb
and
das
fisubl
and
arpl
jle
push
cmp
sub
ss
dec
push
mov
or
or
cli
xor
dec
jbe
adc
sub
aas
imul
mov
xchg
push
mov
cmp
aam
movl
lret
scas
ret
or
lret
sti
mov
or
dec
cmp
in
pushf
mov
pop
push
fcoms
mov
out
in
and
xor
pop
xchg
leave
cmp
je
inc
sbb
sub
fwait
jne
jl
dec
sarl
nop
loopne
cld
rcrl
cmp
add
pop
les
and
insb
jl
and
adc
cmp
lret
mov
out
insb
aas
call
in
test
pop
push
mov
nop
mov
adc
sub
pop
and
push
add
int3
cltd
scas
adc
fcmovb
iret
ljmp
mov
adc
add
mov
jne
fsts
pusha
jae
mull
dec
mov
add
hlt
xor
push
adc
fstps
adc
mov
lea
cwtl
shl
inc
data16
cld
outsb
xor
add
pop
mov
dec
inc
jmp
add
fistps
mov
mov
aad
lret
add
jmp
and
lcall
out
out
mov
das
add
lea
xchg
push
or
jg
jbe
lea
push
push
aas
mov
push
addb
lea
mov
fidivrl
lds
adc
fwait
lea
xor
push
push
mov
movsb
pop
mov
data16
xchg
ret
pop
or
sub
push
dec
fmull
je
push
aam
stos
xchg
clc
daa
sbb
push
ret
and
sbb
test
sti
dec
bound
sbb
jg
xor
mov
insb
nop
fs
mov
and
jbe
mov
daa
sbb
addr16
and
adc
jl
xlat
jmp
mov
fldl2e
and
cmp
xchg
push
pusha
pop
mov
inc
jg
test
pop
cmp
mov
dec
add
or
jle
ja
adc
jb
and
int
lock
mov
shr
outsl
sbb
mov
xor
mov
xchg
mov
das
add
testl
mov
xlat
sub
add
pop
mov
jo
lea
sti
fldt
repnz
add
pushl
pushl
shll
mov
mov
adc
sub
add
rorl
mov
dec
add
mov
daa
pop
ret
xor
hlt
push
push
sbb
fwait
and
outsb
rcll
or
sbbb
cmovp
push
mov
bound
jl
xor
pop
scas
dec
xchg
jbe
mov
leave
adc
outsb
test
or
es
xchg
sarl
cld
pop
or
imul
add
lea
pop
lea
mov
adc
mov
add
mov
jo
bound
andl
cwtl
add
pop
dec
inc
xchg
cmp
sbb
ds
aad
jbe
loop
rcrl
dec
push
cmp
xchg
in
inc
add
jo
mov
testl
inc
cmc
shl
bound
push
repnz
fwait
insl
out
andl
sbb
adc
lcall
cwtl
mov
arpl
mov
in
or
xlat
hlt
add
sub
loopne
dec
mov
push
adc
fldcw
and
rorb
and
inc
cmpsb
dec
sbb
mov
cmp
push
cmp
xchg
shl
insb
cmp
push
sbb
arpl
mov
in
jmp
and
addb
add
shrl
cmp
sbb
or
cs
inc
sbb
movsb
clc
std
loopne
ret
or
add
fldcw
stos
add
inc
and
xor
sub
jg
sub
xor
fistl
sub
js
mov
and
mov
mov
xchg
jbe
xor
sbb
add
shll
mov
shll
call
testl
push
cmp
clc
jge
jmp
add
cld
popf
add
in
push
push
inc
adc
mov
push
mov
pop
cmc
mov
xchg
rolb
ret
and
inc
jne
xor
xor
jmp
adc
add
adc
push
clc
jl
test
adc
dec
enter
dec
mov
push
push
into
xor
push
test
push
lods
mov
pop
jl
xlat
testl
in
mov
cmp
into
push
pop
mov
adc
mov
andb
orb
les
out
inc
xor
adc
cmp
fists
sbb
clc
push
or
mov
cld
mov
sub
adc
cltd
aas
int3
push
mov
mov
add
daa
loopne
sub
mov
sub
push
or
jl
xchg
push
add
aam
sbb
cli
xchg
mov
lea
cli
cmp
setne
daa
push
enter
rcll
aam
es
xchg
ret
mov
xchg
xchg
testb
les
je
cmpl
push
std
sbbl
rorb
icebp
add
mov
mov
das
icebp
pop
sub
je
add
sub
ret
scas
mov
pop
movsb
mov
sbb
and
xchg
cmp
or
push
pusha
xorl
fwait
adc
pop
push
xor
and
dec
imul
aaa
outsl
or
je
loopne
add
mov
sub
push
stc
mov
inc
imul
pop
aaa
fcomps
push
pop
ljmp
shll
xor
pop
inc
xor
or
dec
mov
or
movaps
fiaddl
pop
fs
jle
cmp
iret
outsl
data16
adc
stos
inc
shr
cmovs
add
fs
aaa
add
fwait
out
push
cld
in
xchg
add
push
scas
cli
push
inc
cmpsl
popf
lods
jbe
sti
std
and
ret
scas
shl
push
je
pop
loop
jo
mov
sbb
push
cmpsl
rcrl
and
pop
adc
fwait
xor
loopne
js
test
outsb
out
add
xor
inc
cs
adcb
add
sbb
pop
push
sbb
je
push
pop
jb
mov
sti
pop
jne
mov
adc
leave
add
mov
xor
or
inc
sbb
push
ds
inc
mov
mov
in
cli
dec
cmp
mov
xchg
cmc
inc
lret
and
and
imul
out
xchg
xor
mov
roll
lea
or
pop
aam
push
aam
adc
or
mov
sbb
adc
ret
jp
sbb
or
adc
jbe
push
fistpll
or
or
gs
mov
shlb
push
mov
test
sub
shll
cmp
pop
loope
and
pop
in
cmpsl
mov
or
pop
inc
stos
add
push
test
pop
dec
xor
sub
aas
sbb
inc
mov
rep
push
mov
fcmovnu
bound
jg
jo
inc
jnp
mov
repnz
push
or
mov
lods
je
aam
mov
xchg
or
inc
adc
frstor
xchg
inc
adc
daa
test
stos
cli
push
xchg
es
inc
pop
push
test
jb
pop
rclb
cmp
push
pop
les
cmp
mov
rorl
dec
add
jmp
mov
and
lea
xchg
clc
mov
mov
in
jo
add
fidivrs
adc
cwtl
or
and
xor
outsl
punpckhbw
cwtl
cmp
addr16
mov
insl
adc
xorl
les
andb
push
int
inc
cmp
jo
adc
clc
cmp
fldt
insb
add
cmp
push
dec
push
mov
push
push
lock
inc
cmp
arpl
xchg
jbe
fldenv
inc
push
mov
add
data16
dec
or
enter
push
dec
adc
xchg
sub
sub
inc
mov
stos
and
out
add
mov
sub
movb
ja
push
jg
mov
jo
aas
movsb
outsl
repz
xor
adc
test
push
pop
dec
jbe
shll
mov
popf
mov
aam
sub
ja
int3
out
push
imul
xor
pop
jbe
push
dec
add
out
mov
repnz
test
lret
pop
dec
dec
push
cmpsb
push
mov
lea
cmp
lods
jb
inc
je
mov
js
sahf
test
jbe
ret
jmp
push
pop
in
ds
cs
mov
lds
negl
loopne
lcall
sbb
mov
pop
sub
imull
jb
out
xor
imul
sbb
orl
xor
sub
push
in
pusha
cmp
push
inc
cmp
insb
pusha
pop
inc
jecxz
pop
and
push
jb
cmpsl
fiaddl
push
sub
inc
cltd
mov
cmp
push
adc
adc
in
mov
das
cmp
sbb
mov
data16
and
dec
xor
dec
inc
int3
movsl
xchg
sbb
fsubrs
mov
jns
mov
lock
fmull
push
mov
out
inc
out
adc
inc
pop
insl
ret
add
cmp
mull
adc
dec
ljmp
lahf
lock
js
and
sbb
mov
or
popf
fwait
mov
xor
inc
out
push
cmp
shrl
jle
pop
and
icebp
mov
mov
jmp
jnp
fwait
pop
or
rolb
ds
add
inc
mov
dec
sub
push
push
or
faddl
dec
mov
out
addl
push
popf
je
add
fildl
leave
loopne
shll
mov
adc
insl
jbe
cmp
jo
adc
aam
xor
adc
or
ror
sbb
iret
adc
jne
or
aad
test
jno
pushf
fstps
xor
mov
inc
and
mov
and
inc
test
dec
pop
sti
fsubs
adcl
jne
push
adc
int3
adc
movsl
adc
jbe
sarl
mov
mov
out
data16
push
test
rcrb
sbb
push
test
in
pop
push
cwtl
mov
jo
mov
loopne
js
imul
dec
or
xor
adc
imul
xchg
add
ss
mov
or
sub
add
inc
push
push
sbbl
rcrb
cmpsb
cmp
or
nop
out
push
fisubs
jne
lret
test
mov
movl
sbb
pop
icebp
and
insl
mov
adc
es
popf
int
int
push
pop
or
aaa
cs
mov
sub
mov
int
sub
stos
mov
push
jl
dec
lret
nop
pop
jnp
sahf
and
les
loop
cmp
ret
outsl
shlb
or
fnstcw
cltd
sar
enter
jne
lea
push
sti
sub
rorl
add
pop
push
fisttpl
adc
push
mov
or
hlt
pop
fsts
shrb
pop
push
cmp
ret
add
cmp
fnstcw
jmp
inc
js
cmp
andb
pusha
jl
orl
sbb
rolb
sbb
jmp
pushf
mov
orb
xchg
dec
and
push
xchg
popa
sub
sbb
xchg
aam
fldcw
test
inc
sbb
jecxz
pop
and
push
xor
adc
jecxz
push
xchg
jnp
and
loopne
add
and
adc
dec
push
int
inc
sub
push
int
and
lret
fsubrs
mov
test
cmp
ret
out
cmp
jmp
pop
fstpt
and
sarb
fstl
mov
push
mov
sub
pop
mov
cmpsb
jnp
arpl
stos
aam
rcll
bound
sub
xchg
or
and
push
push
lods
xor
jmp
xchg
hlt
or
xlat
sbb
sbb
cmp
mov
lea
push
iret
push
mov
inc
je
or
stos
clc
mov
out
cmp
push
jnp
or
push
pop
dec
cmp
push
out
movhps
and
je
push
nop
mov
pop
movsl
mov
inc
loopne
cmc
pop
push
mov
sti
shrl
xorb
fbstp
inc
jae
popf
dec
cmp
pop
sbb
addr16
mulb
js
sar
popa
or
mov
enter
jo
lods
push
push
or
add
daa
push
icebp
xor
sbb
or
xchg
call
inc
subl
icebp
test
iret
adc
les
and
cmp
inc
cmp
xchg
mov
push
test
insl
pop
dec
loopne
je
push
add
dec
mov
stos
xchg
jge
dec
sub
scas
shlb
jns
push
das
cld
mov
and
mov
adc
push
dec
xor
ret
add
xor
test
jnp
jnp
cmp
scas
pusha
xchg
test
add
cmp
shll
shrl
inc
negb
push
or
add
ja
and
negb
cmp
das
cmp
mov
dec
push
outsl
dec
sub
dec
mov
xor
push
pop
mov
adc
sub
neg
out
or
cmpb
adc
adc
jle
inc
or
jg
jmp
push
hlt
push
mov
andl
sbb
pop
rolb
push
shll
mov
push
pop
push
cmp
sbb
addr16
jbe
lock
addr16
popa
movsb
xchg
adc
lods
inc
dec
mov
mov
push
sahf
jo
cmp
xor
cmp
push
fs
lock
inc
hlt
adc
xor
movb
add
out
imul
mov
int3
push
arpl
jne
sbb
test
movsl
push
lea
xor
cmp
test
std
outsb
aam
xchg
sarb
out
popf
int3
mov
or
xchg
jb
enter
in
rolb
movsl
mov
mov
xchg
sub
fildl
pop
lea
in
and
insb
lahf
mov
or
push
aam
fidivrl
xor
or
rcr
shlb
cmp
push
xchg
inc
pushf
in
jne
sbb
or
mov
jl
js
add
push
je
add
inc
movsb
jnp
adc
fistpll
cmp
jne
sub
repz
popf
pop
mov
mov
push
sbb
cs
xor
repnz
rcrb
pop
arpl
adc
dec
push
xorb
je
test
ret
xor
cmp
mov
dec
or
ja
xlat
push
icebp
push
jne
or
push
pop
jbe
push
inc
subl
inc
lret
outsl
inc
jl
pop
testb
pop
fstp
mov
jmp
hlt
cmp
adc
jp
add
test
inc
cmp
sub
mov
inc
adc
je
push
sub
mov
pop
sub
outsb
cld
and
or
call
inc
adc
lcall
inc
inc
sbb
xor
sub
mulb
and
outsl
ljmp
mov
cmp
add
movsbl
jmp
or
jl
std
outsl
jmp
add
sub
cmp
jl
add
jg
shl
push
add
fistpl
xor
leave
cmp
jnp
dec
add
sbb
lods
mov
push
or
or
repnz
xchg
sbbb
pop
jo
add
dec
enter
inc
adc
data16
clc
in
sub
push
mov
xor
ret
fwait
nop
clc
leave
jge
fsubs
xor
and
add
push
mov
enter
add
loope
in
or
push
mov
pop
jmp
add
push
adc
es
jae
xor
cmpsb
sub
inc
push
cmp
jle
test
pop
in
mov
or
add
or
dec
dec
or
leave
sbb
xchg
sub
jno
or
pop
cmp
jae
and
cmp
fmull
dec
decl
push
dec
cwtl
add
pushl
nop
in
jne
pop
jmp
mov
scas
pop
xorb
push
or
sbb
imul
sti
pop
cmp
push
stos
push
push
subl
inc
adc
adc
arpl
adc
jb
inc
push
sbb
in
mov
imul
adc
test
jne
int
jo
push
add
hlt
lock
sub
enter
je
fs
into
and
mov
insl
add
pop
leave
js
push
adc
add
scas
and
roll
xchg
sub
mov
sbb
imul
push
test
test
mov
movb
sub
sbb
sbb
sbb
and
mov
xor
jo
add
dec
mov
push
outsb
fld
cmp
shll
add
mov
test
push
cmp
mov
adc
clc
and
pop
subl
push
or
add
adc
in
sub
ss
in
push
lock
out
in
or
jg
cmpsb
imul
add
or
dec
cli
add
add
mov
and
aad
icebp
and
call
xchg
pushf
mov
add
pop
mov
mov
cmp
dec
jo
jae
mov
popa
push
or
sub
mov
mov
and
pop
je
cmp
je
mov
inc
push
mov
mov
inc
add
dec
cwtl
xchg
in
mov
inc
jo
push
movzwl
push
ss
mov
aaa
sub
rorl
xchg
mov
lret
ljmp
test
jmp
jbe
push
test
xchg
sbb
pop
dec
bound
bnd
push
sahf
xor
xchg
jae
pop
push
pop
cmp
cmp
iret
push
dec
add
cmp
inc
mov
jge
inc
pop
or
push
das
pop
sub
lahf
std
or
inc
dec
inc
aaa
sub
lock
mov
adc
add
cmp
ja
or
ret
test
clc
rcl
rolb
dec
sbb
movl
test
push
and
sub
or
inc
in
int
das
mov
jne
inc
mov
in
xchg
xchg
pushf
push
sbb
pop
sbb
not
or
jmp
leave
or
inc
add
aas
or
or
mov
push
or
sbb
std
push
push
adc
test
jo
cmp
lods
inc
mov
insl
add
icebp
incl
mov
inc
test
jne
sub
lea
sarl
leave
jne
pop
mov
push
lahf
lock
or
insb
and
xor
xlat
js
int
mov
ds
js
ret
icebp
fcomps
outsb
inc
js
inc
js
mov
ret
xor
jne
or
and
orl
aas
xor
cmp
pop
shll
dec
mov
mov
mov
ret
pcmpeqb
je
add
sub
adc
or
jne
iret
fisubrs
aaa
mov
jmp
or
enter
je
cs
jmp
int3
mov
adc
add
inc
mov
adc
xor
cs
repz
mov
rcll
xchg
sbb
add
xor
mov
dec
push
jmp
push
add
shr
inc
add
pop
shl
lea
fldl
test
push
xchg
insl
push
lds
add
cld
pop
imul
clc
cmp
cmp
je
inc
stos
in
fldpi
shll
push
ds
cmc
out
rcrb
push
cmp
pop
sahf
sbb
dec
add
push
or
pop
mov
pop
and
and
jbe
jl
mov
or
mov
and
int3
add
push
mov
or
inc
iret
sbb
adc
or
jbe
ret
arpl
xor
push
int3
jmp
inc
cmpsb
mov
sub
mov
clc
sbb
pop
sbb
aad
faddl
or
xor
xchg
xchg
ret
lea
mov
xor
push
jo
add
cwtl
repz
inc
xchg
inc
es
sub
push
cmp
jge
xchg
mov
flds
add
push
push
ss
pop
or
pop
pusha
add
or
inc
push
ja
xor
mov
and
cmp
jg
add
pop
mov
sbbl
xchg
scas
les
xchg
pop
jne
fcoml
dec
std
das
sub
mov
cmp
or
jne
adc
xor
add
fs
in
out
rolb
pushl
outsl
and
je
adc
or
push
jno
mov
mov
add
popa
arpl
cmp
jo
mov
cmp
push
and
pop
mov
aad
es
mov
outsb
lret
mov
sbb
test
push
fs
or
out
mov
sbb
and
test
lea
js
cmp
mov
sbb
or
loop
mov
cmpsl
mov
push
loopne
orl
xor
cmpb
mov
push
or
mov
push
repnz
or
je
pop
inc
gs
jbe
push
cltd
lock
push
cs
shrb
sbb
adc
icebp
add
xor
and
lea
pop
lea
or
testb
xchg
pop
popa
sub
or
pop
mov
cmp
or
popf
jmp
mov
loop
push
sub
fidivrs
sbb
sbb
bound
lcall
adc
mov
adc
fidivl
movzbl
ljmp
or
sbb
jmp
cmp
jne
daa
or
add
cmp
jne
test
sbb
pop
insb
fs
mov
add
jnp
xchg
jno
add
std
pop
repnz
jne
aaa
pop
sub
sbb
inc
add
sub
fwait
mov
clc
ja
mov
add
jmp
and
sbb
and
sub
scas
scas
and
sub
je
adc
pop
jne
sahf
fdivrl
add
sbb
incl
add
dec
pop
rorb
or
jne
pushf
adc
sub
leave
call
mov
jge
inc
loop
sahf
nop
mov
xchg
or
call
les
xor
mov
jae
imull
stos
dec
inc
mov
lods
cmpsl
push
rorl
lock
cmpl
inc
mov
leave
movsb
inc
dec
stos
nop
xchg
push
sub
push
mov
pop
pop
mov
out
push
ljmp
dec
inc
or
jno
add
jp
loop
jne
adc
adc
dec
mov
push
jae
cmp
orl
mov
rcrl
push
sahf
or
arpl
add
aas
mov
push
cmpl
je
jo
lret
add
adc
ljmp
incl
or
out
sbb
mov
fisubs
inc
xchg
mov
mov
or
pushf
push
shl
sbb
jle
add
xor
stos
jnp
pop
jo
adc
lods
fnstcw
cmpl
and
int3
orb
aaa
cmp
cmp
outsl
sbb
inc
popa
mov
lods
cmp
lock
adc
pop
sub
xor
ret
dec
cmp
jg
insl
mov
and
enter
push
cmp
jle
daa
push
sub
dec
lock
or
sub
xor
push
loopne
adc
xor
idivl
pop
xor
je
mov
imul
pop
push
je
dec
add
fcoms
push
loopne
jae
je
sbb
ret
sub
sub
cmp
jbe
int3
adc
inc
or
aam
push
adc
clc
add
sub
dec
ret
movntps
or
or
sub
orl
lock
pop
subl
cmp
stos
add
imul
adc
movsb
jmp
sbbb
andl
adc
aaa
call
inc
movsl
or
mov
cltd
cmp
dec
into
push
pop
nop
mov
lcall
adc
pop
add
sub
imul
pop
cwtl
cmpsb
mov
fstps
push
sbb
or
sbb
sub
push
xchg
xchg
mov
je
nop
push
add
iret
out
push
sub
dec
pushf
push
xor
or
and
inc
enter
sub
or
pop
fimull
or
and
in
jp
inc
xchg
sbbb
lcall
and
sbbl
dec
stos
push
sbb
dec
adc
xor
nop
xchg
out
decb
inc
cmp
les
push
cmp
jb
cld
push
sbb
pushl
daa
dec
fpatan
arpl
clc
xchg
je
cmpl
filds
flds
pop
dec
pop
or
or
and
cmovb
pop
inc
in
lret
call
xor
arpl
adc
and
push
push
jb
fstl
add
test
mov
test
inc
sarb
cmc
mov
add
inc
mov
enter
mov
pushf
inc
mov
or
inc
or
shl
or
outsb
ja
jne
cli
dec
les
out
dec
je
add
dec
mov
sbb
shl
sbb
mov
or
sub
or
pop
xor
shll
push
in
fcomps
sbb
sbb
add
sbb
in
push
js
sub
or
stos
loope
mulb
shlb
sbb
add
pop
imul
and
enter
mov
pop
add
sub
sub
lret
mov
sub
sbb
add
push
int3
jle
mov
push
in
mov
cmp
push
jecxz
push
dec
outsb
inc
sub
inc
dec
inc
pushl
insl
mov
mov
mov
sbb
mov
dec
shll
enter
xchg
cmp
cmpl
or
negl
imul
inc
and
inc
cld
outsl
lsl
and
mov
mov
jno
pop
sbb
daa
sbb
push
mov
cmp
fstl
xor
jge
stc
and
sbb
ds
pushl
sbb
andl
push
add
mov
jle
push
mov
push
inc
ja
ja
jno
mov
xchg
inc
push
mov
cs
fidivrs
mov
adc
aad
sub
jne
lods
and
add
or
push
and
mov
or
je
or
sub
jge
popa
das
insb
das
pop
ret
sbb
xchg
insb
and
sbb
inc
ss
out
loopne
sbb
sbb
sbb
and
xchg
xchg
lock
sub
adc
dec
incl
or
inc
xor
hlt
push
rorb
sbb
and
out
pop
pop
mov
sbb
pop
inc
add
mov
outsl
les
mov
adc
roll
loopne
jmp
add
inc
cmp
mov
jb
add
out
push
call
and
je
leave
ret
imul
shlb
pop
pop
push
or
and
cmpsl
outsb
mov
mov
ss
mov
push
mov
and
stos
rol
subl
mov
sub
sub
into
out
xchg
into
push
pop
adc
cmpsl
enter
add
xchg
lods
inc
cmpsb
ret
adc
xchg
mov
mov
or
add
les
xchg
cltd
mov
add
call
cmp
sbb
scas
js
test
std
call
cs
incl
in
mov
and
add
lea
lea
movsl
sub
mov
movsw
push
lock
mov
jg
cmp
subl
mov
lods
inc
decl
sub
cmp
jne
mov
jae
mov
mov
inc
jg
popf
and
sub
mov
inc
fcomps
push
fstpt
fbstp
add
mov
js
std
lea
cmp
or
test
dec
movsl
jne
xor
rolb
sub
mov
pop
cmpl
inc
movsb
mov
sub
push
mov
shlb
cltd
or
cmp
jb
out
shl
outsl
or
dec
movsl
pusha
mov
insb
dec
fadds
lret
testb
add
mov
cmp
shrb
jge
je
inc
mov
arpl
filds
clc
insl
or
testl
cmp
das
rcl
adc
mov
xor
and
add
clc
add
xor
fdivs
arpl
jecxz
mov
arpl
lea
adc
pop
mov
stc
mov
push
movsb
push
mov
sbb
sti
add
das
or
sbb
mov
jmp
push
jl
pushf
hlt
fadd
fidivrs
mov
xchg
fmuls
xchg
test
adc
pop
jle
adc
jne
mov
mov
lea
jo
sub
sti
mov
cmp
dec
popa
add
test
orb
pop
xor
or
and
or
jne
inc
mov
mov
movb
sbb
push
mov
mov
push
xchg
je
xor
shlb
cmp
mov
ds
jo
cmp
jo
sti
in
aaa
push
mov
add
movb
neg
mov
shl
or
add
mov
push
out
loop
sti
cmp
mov
test
add
pop
sub
push
int3
cmp
sti
icebp
mov
jb
movl
inc
mov
mov
ss
lret
adc
neg
mov
mov
dec
mov
mov
sub
daa
inc
cmp
push
addr16
dec
pop
jmp
mov
pop
push
sub
popa
cmpsl
loop
push
shr
test
jle
jg
divl
cmp
lea
inc
cli
lods
sbb
fimuls
xchg
es
incl
cmp
jge
mov
mov
mov
inc
inc
adc
pop
fisubs
add
clc
mov
push
jo
jmp
fistpll
sub
add
outsb
mov
lods
mov
dec
or
push
stos
cmp
mov
out
imul
orb
mov
inc
test
add
pop
lcall
or
or
pop
add
jno
push
andl
rorl
add
add
dec
jne
and
mov
sbb
or
or
sbb
or
push
cmpsb
cmp
push
mov
jne
jge
pop
mov
push
inc
cmp
mov
loop
sbb
jle
mov
inc
mov
fmull
testl
jl
add
pop
pushf
lcall
test
cmp
repnz
inc
xchg
inc
shr
jl
cmpl
push
inc
jae
cmp
mov
push
shll
sub
test
cltd
jg
lods
hlt
fcmovnu
or
sub
add
mov
mov
or
enter
loopne
inc
clc
mov
add
lock
jo
pop
sub
jns
divl
push
mov
mov
pop
push
or
mov
jmp
sti
and
cmp
test
add
or
sbb
mov
movsl
sub
ja
sub
test
jge
xorb
fnstcw
in
mov
addr16
and
cmp
mov
dec
in
jl
inc
dec
enter
add
mov
xor
incb
inc
sar
cmp
mov
fstpl
jle
mov
mov
jmp
sub
mov
subl
outsb
cmpb
xor
xor
hlt
mov
pop
pop
in
in
or
push
jmp
inc
sub
jg
xchg
push
sub
adc
push
sbb
add
sub
imul
mov
adc
mov
inc
inc
sub
jge
cli
es
and
mov
pop
call
xor
pop
pop
mov
fidivl
dec
test
dec
rorl
mov
mov
cs
frstor
or
and
rcrl
inc
jp
hlt
push
dec
adc
repz
mov
adc
dec
sbb
bound
sub
hlt
sbb
enter
cmp
sbb
inc
ljmp
adc
and
dec
sbb
push
xor
mov
xor
sbb
aas
adc
sbb
ljmp
xor
hlt
mov
dec
in
cmp
fidivl
mov
aas
pop
mov
jbe
dec
adc
jg
xchg
imul
in
dec
dec
xor
adc
sub
cli
popf
sub
int3
subl
or
mov
push
clc
mov
dec
cmpsb
or
xchg
xlat
and
ret
cld
or
xchg
cmpsb
gs
sub
and
jge
cld
and
jmp
and
in
insl
and
and
sbbb
movsl
xchg
push
dec
push
call
jns
stc
xchg
stc
js
or
test
xchg
and
pop
daa
or
lea
push
arpl
repz
xchg
in
fdivl
jg
and
push
pop
test
xor
xchg
cmpsb
test
xor
jmp
mov
fwait
inc
lea
inc
and
std
aam
xchg
and
lcall
cmp
inc
in
xchg
or
and
into
jbe
mov
mov
ret
mov
sub
loope
xchg
int3
push
adc
push
or
mov
shr
shlb
push
sub
pop
adc
pop
inc
call
jbe
sub
add
jbe
push
mov
add
add
outsl
pop
jns
test
jnp
shll
lods
pop
call
push
rcr
add
leave
mov
dec
insb
shr
add
or
je
shr
fs
add
pop
or
cmp
add
inc
xchg
cmpl
or
dec
pop
lods
or
jg
stc
dec
add
xor
andb
aam
or
mov
sbb
fcomps
add
popa
mov
addr16
mov
xor
push
cld
mov
out
jns
jecxz
or
inc
andl
insb
push
pop
dec
jle
inc
dec
leave
addr16
call
pusha
push
sub
xchg
xchg
fadds
test
and
sub
pusha
in
add
int
inc
adcl
sub
sarb
xorb
fisttps
jp
mov
inc
jb
pcmpgtb
test
test
push
and
aad
mov
shll
jle
mov
sub
mov
sbb
pop
lea
jg
mov
push
icebp
rcrl
push
mov
test
or
add
xor
pop
sbb
push
decb
dec
pop
and
cmpl
jg
jecxz
pop
push
jne
movb
jmp
insb
jmp
push
imul
fisttpll
shll
out
mov
mov
pop
stos
test
adc
mov
sub
dec
dec
aas
pop
daa
lret
lret
mov
sbb
inc
pop
push
inc
loope
lret
inc
sub
or
mov
and
sub
mov
jge
mov
or
xchg
push
xlat
mov
es
scas
push
stos
cld
inc
sub
movsb
daa
add
adc
andb
sbb
xor
lret
ss
mov
enter
cmpsb
into
repnz
in
and
inc
jno
mov
inc
mov
call
cld
repz
dec
jb
pop
sti
orb
sbb
fimuls
js
ret
xchg
ret
push
iret
xor
pop
shrb
xchg
mov
into
test
fwait
xor
add
jns
add
fbstp
mov
and
pop
rcrb
cld
pushf
mov
cltd
das
nop
add
fldt
cmpl
mov
xor
mov
xchg
sbb
cmp
testb
mov
inc
insl
or
insl
or
ja
pop
lcall
mov
xor
rorb
cs
stos
cld
clc
jbe
jmp
cld
mov
mov
mov
mov
call
movsl
clc
test
cmpsl
ficoms
adc
push
test
dec
mov
jmp
mov
dec
lods
lahf
adc
mov
pop
and
lods
fimull
xchg
gs
enter
popa
dec
or
mov
cwtl
xchg
lock
popa
movsb
dec
push
ds
dec
int3
xchg
xor
adc
jmp
cld
or
dec
and
cmp
push
loopne
jge
test
dec
call
shr
ret
sbbl
test
cmp
mov
sbb
into
sbb
or
cli
pop
xchg
movsb
pcmpeqb
cmpl
push
pushl
mov
nop
nop
outsb
cltd
call
sbb
sbb
inc
sbbb
push
push
cmc
call
test
cmp
jl
cmpl
mov
ljmp
or
out
mov
stc
push
xor
inc
xor
test
xchg
and
jne
xchg
mov
cmpsb
mov
jp
mov
or
xchg
std
mov
inc
mov
pop
jae
xor
jl
out
sub
sbb
jae
mov
ljmp
data16
or
mov
add
sub
push
inc
add
insb
adc
lock
push
insl
fcomps
xor
mov
xor
or
sarb
mov
outsb
lea
icebp
mov
inc
add
dec
and
dec
adc
add
adc
fldcw
push
sbb
ret
pop
or
dec
xor
adc
inc
xor
test
idivb
pop
add
mov
js
jge
movl
es
sbb
push
rclb
cli
and
adc
mov
roll
xchg
pushf
or
xchg
xor
sub
and
add
adc
inc
jl
jne
mov
jbe
xchg
pop
add
sub
in
clc
jg
push
cltd
pop
idiv
jmp
dec
cmp
lods
xlat
sbb
jl
jne
adc
inc
fdivrl
pop
xchg
aaa
lret
xor
mov
cmp
or
or
mov
mov
enter
mov
inc
data16
mov
sbb
test
gs
sub
aad
mov
add
js
stos
mov
inc
push
in
xor
xor
cmovo
mov
mov
int3
push
xchg
sub
push
jne
hlt
and
and
jae
push
cmp
add
xchg
push
mov
movsb
pop
enter
roll
inc
subl
notl
add
or
add
insb
inc
cmpsl
mov
mov
in
scas
inc
data16
or
lea
call
test
inc
dec
mov
mov
ljmp
testb
loopne
add
sub
mov
jbe
cmpl
divb
call
jge
xchg
push
sub
mov
mov
idivb
pop
popf
push
jo
adc
mov
sub
cmp
sbb
jecxz
push
jle
lret
loopne
rorl
jl
iret
shl
inc
dec
cmp
cmp
fstpt
jbe
jne
sbb
fmull
testb
test
sbbl
jae
mov
ljmp
jle
mov
pop
jmp
sub
xchg
rcrl
jmp
push
loop
mov
inc
mov
add
test
jo
shl
xchg
or
mov
out
mov
and
in
pop
movsl
push
loop
pop
cmp
ja
shlb
jnp
sub
mov
mov
or
fcom
add
mov
xchg
jae
leave
data16
push
pop
sub
lods
jo
in
sub
inc
add
pop
vpminsw
mov
or
cmp
jne
fneni(8087
add
rclb
xor
mov
mov
mov
xor
sbb
cmp
xchg
inc
inc
shl
and
aam
les
push
jb
out
xlat
sub
mov
mov
adc
sbb
mov
pop
lret
mov
mov
or
lret
push
mov
cld
lret
ss
adc
jne
push
fldt
stos
insl
mov
mov
mov
in
add
fimull
add
call
pop
roll
mov
pop
insl
lods
push
sub
insb
and
push
sub
push
insb
in
iret
and
mov
ljmp
insl
int
sbb
push
mov
adc
jl
mov
push
or
rcr
frstor
jbe
and
mov
push
incb
hlt
ret
push
jae
ss
mov
or
add
lock
adc
test
movsb
jae
sub
mov
gs
push
lds
and
int
notrack
and
inc
or
dec
mov
push
shl
imul
pop
adc
sub
dec
mov
loop
jne
adc
mov
das
mov
js
and
jae
popa
adc
outsb
push
arpl
or
adc
push
aaa
negb
push
dec
inc
dec
dec
cs
add
push
jo
cltd
sub
fldt
inc
outsl
insb
fs
mov
out
xor
inc
jb
gs
add
mov
das
or
jbe
stos
inc
sbb
inc
imul
popaw
jne
je
add
add
in
outsl
or
add
push
in
notb
gs
pop
mov
push
push
fnstsw
or
test
pop
jmp
outsb
popa
stos
add
lods
stos
subb
mov
push
fcomp
mulb
gs
out
movsl
or
fcomps
mov
in
and
push
sub
and
or
insb
das
inc
cmp
add
inc
cs
jbe
and
and
and
jle
insl
inc
adc
in
fs
inc
arpl
add
inc
sbb
add
mov
fimuls
inc
gs
roll
test
enter
add
dec
add
aaa
incl
inc
add
dec
add
inc
add
push
add
inc
cmovae
fbstp
dec
add
push
add
add
ja
xlat
adc
push
add
dec
push
jne
mov
adc
jmp
inc
dec
dec
pop
inc
pop
push
mov
or
push
dec
push
jmp
ror
adc
push
dec
adc
sbb
or
dec
push
pop
fwait
rcrb
inc
adc
and
jns
in
jae
xorps
pop
inc
or
mov
xor
cmp
jl
push
std
add
inc
inc
adc
add
inc
sti
das
push
dec
and
push
loopne
popf
mov
mov
jbe
push
mov
jae
inc
dec
adc
fbstp
adc
or
rorb
sar
idivl
out
in
sbb
add
add
push
cld
sub
dec
inc
and
pop
inc
inc
ud2
pop
sub
daa
and
pushw
outsl
mov
mov
or
xor
addb
addb
jmp
rolb
incl
push
jmp
mov
jbe
fs
dec
or
mov
dec
push
dec
dec
enter
push
adc
icebp
and
and
outsl
xchg
xor
fs
xorl
or
add
add
mov
or
or
add
add
add
mov
add
and
pop
or
add
and
test
or
add
inc
or
nop
or
ret
fstps
leave
inc
and
and
rclb
sub
push
mov
pop
inc
mov
and
adc
xchg
mov
and
in
insb
xchg
pop
xor
fs
or
dec
push
mov
sub
add
jecxz
ret
pop
sysexit
rorb
dec
fs
and
fwait
ltr
add
dec
fwait
pop
sub
mov
or
xor
popa
ret
sbb
add
test
add
sbb
sbb
aaa
xlat
cs
or
pop
xor
add
adc
cmp
insl
xor
mov
ud2
cmp
outsl
or
cmp
add
popa
or
mov
push
cmp
fcomp
sbb
arpl
or
or
lds
cmovne
sbb
fwait
popf
or
or
add
cmp
or
or
outsb
dec
or
adc
xor
push
das
or
and
int
mov
jmp
or
sub
add
movl
sahf
pop
push
cmpsl
add
and
imul
mov
pushf
cmc
unpckhps
or
aaa
aas
notl
push
add
push
mov
mov
push
pop
and
add
add
or
mov
add
or
cmpb
add
xor
push
or
inc
and
jge
or
dec
adc
sbb
add
mov
cmp
insl
adc
pop
xchg
in
mov
add
into
dec
repz
add
adc
psubusw
loope
mov
pop
xor
dec
push
push
or
imul
mov
jecxz
sbb
mov
or
cmp
cmp
mov
or
std
xchg
or
or
and
and
adc
and
pop
es
out
popa
inc
sbb
addr16
das
mov
pop
sbb
ss
arpl
sbb
jne
mov
add
iret
lock
add
pop
call
sbb
inc
es
mov
sidtl
popl
adc
add
or
insb
out
hlt
lea
add
sbb
mov
loope
sub
sbb
mov
and
push
adc
in
sbbl
pop
mov
push
aaa
push
fstp
sbb
sbb
sbb
fdivl
decl
pop
lahf
addl
or
in
cmp
adc
mov
or
int3
xor
or
sub
daa
adc
int
pop
add
or
int3
or
sbb
idivl
dec
add
sbb
or
add
push
xor
cmpl
dec
fstps
add
jnp
out
sub
dec
sbb
test
add
scas
lods
sbbb
or
xchg
mov
and
adc
or
adc
and
pop
sub
lea
daa
fimull
loope
jbe
lock
in
xor
sub
mov
sbb
int3
mov
add
movsl
xor
add
lret
clc
sahf
fwait
mov
or
or
adc
adc
nop
jl
jmp
aaa
dec
ret
aaa
aaa
arpl
enter
push
add
pop
xor
movsb
outsb
xor
pop
or
xor
jmp
gs
mov
adc
cltd
outsb
or
mov
xor
cmp
add
ss
add
add
stc
add
or
add
cmp
int3
add
or
fisttps
and
or
aaa
push
and
cmp
sub
xchg
cmp
xorl
cmp
pop
ds
movsl
in
sbb
and
or
xchg
mov
or
xor
fcoms
push
and
add
popf
inc
xchg
or
lods
aaa
sbb
mov
adc
jnp
enter
add
or
inc
pop
or
and
incl
nop
adc
leave
push
dec
sbb
sbb
push
dec
cmp
xor
sub
shll
popf
insb
leave
mov
repz
lcall
push
push
out
rcrl
and
or
adc
enter
push
add
das
push
add
dec
cmp
pusha
pop
xchg
dec
cwtl
nop
pusha
pusha
sub
cmpsb
xor
leave
pop
and
out
or
daa
adc
xchg
xchg
pop
add
cwtl
mov
stos
sbb
pop
daa
fsubs
xchg
adc
adc
lret
sbb
jnp
or
orb
pusha
cmp
fs
sbb
dec
pusha
es
outsb
outsb
mov
pop
cmp
sbb
addr16
cmpsb
sub
sub
push
jbe
jnp
pop
adc
or
in
push
inc
and
imul
leave
inc
mov
adc
es
test
into
adc
push
adc
adc
or
add
loope
or
or
sub
ret
jae
push
push
jle
popf
push
mov
and
jbe
loope
loope
sbb
sbb
dec
js
sbb
es
push
ja
pusha
daa
loope
and
js
js
das
adc
jne
out
cmovnp
icebp
jns
xor
loope
inc
stc
jge
pop
stos
fs
aad
jle
push
shrb
fcmove
xchg
ret
notl
jnp
jnp
lret
fidivrs
and
mov
push
lods
pop
xchg
fildll
outsl
adc
push
ss
adc
push
or
pop
mov
add
or
push
add
stos
or
shll
add
pushf
cmpsl
fsubrl
in
cltd
mov
sbb
add
cs
xor
dec
sbb
fnsave
cmp
stc
ud2
cmpxchg
mov
in
daa
sub
movups
nop
lock
cmp
incl
push
xor
pop
aad
mov
xchg
iret
xor
adc
or
adc
xor
cmp
and
cmp
sbbb
popf
dec
jp
popf
cmp
xchg
or
pop
mov
ret
adc
xchg
loope
pop
sub
movl
or
addr16
or
adc
dec
mov
in
xchg
add
adc
dec
jp
xchg
daa
cmc
xchg
or
sbb
dec
cltd
fisttpll
sub
lcall
dec
inc
pop
movsl
and
fmull
sbb
sbb
xchg
or
xchg
adcb
in
adc
push
cmp
and
adc
fists
popf
or
or
mov
mov
fwait
pop
and
pop
std
pushf
xchg
jmp
jl
adc
push
mov
mov
cltd
movsb
ja
stos
lods
pop
mov
lock
rcrl
mov
in
stos
xor
sbbb
loope
addr16
lods
and
xor
repnz
add
pop
adc
jb
maxps
int3
mov
adc
jns
movsb
push
mov
jns
lods
out
xchg
jno
sub
adc
lret
adc
add
mov
and
add
cs
xchg
cmc
popa
test
repz
push
add
shl
jo
ret
jge
xchg
and
xchg
mov
movb
mov
sahf
scas
add
add
xchg
lods
xchg
xchg
bound
or
adc
or
or
xchg
add
sub
pop
mov
xor
mov
pusha
adc
cmc
adc
dec
pop
mov
or
pop
ja
pushf
xchg
adc
mov
test
xchg
lea
mov
outsl
jbe
jo
inc
jge
jbe
mov
out
xchg
pop
jb
xchg
mov
leave
sbb
dec
leave
enter
mov
and
and
adc
and
mov
xchg
mov
sbb
in
dec
out
push
leave
mov
btr
popa
adc
jmp
add
push
xlat
add
cmpl
and
xchg
sbb
loope
jb
sbb
leave
adc
and
enter
add
or
and
add
adc
jbe
inc
ds
les
add
xchg
adc
adc
fists
xor
fwait
lds
adc
int3
lds
push
adc
xor
add
xor
enter
add
cs
sbb
inc
or
or
jne
jno
dec
cmp
aam
aam
and
in
repz
shrl
lds
jno
jg
xor
or
adc
jno
add
xchg
adc
mov
in
mov
ret
and
cmp
adcl
push
jmp
roll
aam
leave
and
call
fisttpll
test
fadd
dec
fcoml
xchg
loope
mov
mov
fisubl
sbb
jbe
nop
and
call
jo
popa
lret
and
test
int3
sbb
or
fldt
and
aaa
mov
loope
or
sbb
inc
push
pop
iret
hlt
sbb
out
pop
adc
xor
or
in
sub
or
daa
adc
movsl
scas
pop
negb
dec
adc
andb
and
pop
push
mov
adc
add
adc
add
add
popf
or
or
test
jmp
mov
call
pop
or
sub
insb
mov
sbb
and
jmp
mov
cmp
fdivl
sub
xor
sub
adc
push
in
push
ret
popa
push
lcall
repz
outsl
fldenv
pusha
int
test
lock
out
in
inc
iret
or
xchg
in
hlt
cs
dec
inc
jo
adc
inc
or
js
mov
jbe
cmc
add
xor
push
pop
sbb
daa
punpcklbw
subb
adc
mov
nop
in
or
cmpsb
or
add
push
add
jb
xchg
pop
sub
and
mov
lahf
sahf
adc
adc
xchg
add
add
enter
pop
cmp
lret
outsb
sbb
sub
xchg
sbb
adc
add
pop
clc
enter
and
cmp
or
add
push
dec
and
enter
push
inc
xchg
add
or
cli
add
js
lods
dec
add
cmp
add
mov
nop/reserved
or
add
xchg
xor
stc
negl
mov
or
add
mov
pop
and
je
add
aaa
popa
and
and
pop
out
jae
jne
jbe
sub
adc
add
pop
sub
inc
pop
xchg
push
sbb
out
or
outsl
sbb
notl
or
adc
jne
cs
mov
xlat
and
xchg
xor
xlat
fwait
in
cmp
repz
jnp
lds
stos
sub
popf
mov
insl
or
ret
pop
jmp
bound
das
mov
add
pop
arpl
jno
das
cmp
gs
daa
and
shll
imul
lea
daa
gs
cs
or
in
dec
xorl
testl
icebp
popf
sbb
mov
and
xchg
inc
es
sub
ja
mov
sbb
xor
jns
es
sbb
and
pop
and
inc
push
pop
xlat
lea
inc
inc
and
imul
imul
push
es
inc
add
jge
push
loope
or
mov
test
lret
outsl
add
or
xorb
jb
data16
and
push
jne
push
test
sbbl
xor
adc
mov
push
divl
shll
pop
mov
add
add
add
dec
push
pop
add
jmp
sub
mov
xor
push
and
mov
cmp
cmpsl
lds
pop
or
mov
xlat
or
cmp
dec
sub
xor
pop
sbb
cmp
and
mov
das
xor
add
addr16
fcmovnbe
mov
inc
sbb
lahf
xor
inc
mov
xor
es
outsl
mov
add
inc
pushl
or
notb
inc
shll
in
inc
sbb
xlat
lea
aas
imul
addr16
cmp
mov
inc
sbb
jge
jae
jecxz
fldl
jnp
add
mov
insl
dec
shrl
pop
out
arpl
xor
cwtl
mov
xor
xor
orl
add
sub
imul
test
or
pop
aas
xor
data16
add
mov
or
ror
mov
jb
and
test
sub
cwtl
lds
push
push
dec
enter
sub
sub
inc
sbb
ljmp
mov
fisttpll
sbb
sbb
mov
dec
mov
add
out
inc
popf
mov
je
and
pop
mov
jae
imul
orb
and
ret
jno
out
mov
daa
adc
adc
dec
xor
mov
insl
pop
sbb
dec
out
inc
in
sbb
ret
lods
adcl
jne
dec
xor
out
ret
jns
call
flds
adc
shrb
dec
cmp
dec
mov
xor
out
push
iret
mov
cmp
popa
and
nop
adc
push
aas
test
inc
or
inc
stos
cmp
or
add
xor
jne
push
dec
sub
imul
push
sbb
sbb
es
sbbl
in
outsb
adc
sub
sub
add
fs
popa
int
aas
sub
arpl
fwait
adc
or
mov
ret
shll
or
bound
or
fs
inc
mov
sbb
dec
daa
mov
inc
aaa
ffreep
and
fs
subl
outsl
xor
lods
aad
jmp
push
fstpl
sbb
adc
dec
scas
out
mov
arpl
or
fnstenv
leave
lea
gs
ret
aam
dec
xchg
fs
xchg
push
aad
sbb
push
test
insl
pop
outsb
jns
mov
shlb
xchg
xor
jno
test
push
fildl
fidivrs
inc
and
mov
lea
fistpll
pushf
adc
or
mov
mov
test
cwtl
mov
jg
fstpt
sub
dec
xchg
or
orl
pop
mov
or
push
ret
and
inc
lahf
cmp
sahf
icebp
cmp
sub
popf
jno
jns
add
pop
and
jp,pn
mov
loope
lret
ret
jne
jne
icebp
add
mov
das
leave
and
push
scas
in
or
jae
pop
loopne
pop
mov
add
push
ja
push
inc
dec
sub
das
leave
mov
divb
mov
imul
das
popf
jbe
adc
imul
inc
add
inc
jecxz
out
popa
xchg
or
xchg
sbb
xor
addr16
push
movsl
shlb
jae
icebp
cmp
mov
push
push
or
jg
sarb
or
xchg
jno
mov
inc
pop
pop
imul
xchg
add
fwait
pop
dec
fs
iret
jmp
dec
pop
jge
sub
addl
dec
pop
sub
xor
xor
pop
in
push
dec
insl
ja
mov
enter
and
dec
add
imul
mov
inc
add
jge
xor
rcll
lahf
jae
jmp
sub
sub
je
inc
add
push
or
fs
movsb
xchg
test
ror
cwtl
lea
sub
xor
inc
pop
scas
xchg
lods
sbb
sbb
or
jbe
imul
xchg
push
dec
xchg
or
mov
mov
mov
and
push
lret
xor
mov
or
bound
xlat
jo
sub
xor
popa
sarl
pop
add
push
adc
xor
jb
movsl
xchg
adc
fldenv
adc
dec
pushf
xchg
inc
sbb
dec
adc
sbb
xor
add
add
icebp
sbb
and
popa
adc
gs
jae
push
fucomp
es
push
or
jmp
loopne
add
push
and
xchg
lds
jbe
call
jge
mov
pusha
gs
dec
lods
aaa
stos
xchg
mov
or
add
jne
cmpsb
in
sbb
bound
jne
sti
mov
dec
push
add
add
xor
sub
dec
pop
lahf
andl
dec
ljmp
add
mov
pusha
fldcw
pop
sbb
mov
movsb
dec
imul
rcll
add
outsl
mov
xor
cmc
cs
push
sub
movsb
add
jl
jnp
or
adc
daa
mov
push
dec
addl
loopne
xor
jp
cmp
movsb
pop
mov
mov
xchg
dec
lcall
insl
pop
int3
push
lods
mov
ljmp
lret
fwait
lahf
xchg
xacquire
jae
inc
sub
iretw
xchg
mov
loope
inc
push
dec
fidivl
popa
aam
shll
and
ficoml
comiss
mov
adcb
inc
pavgb
push
imul
insb
gs
leave
rcr
insl
movnti
and
pop
or
popf
imul
and
outsl
ja
inc
aaa
pop
sub
push
dec
cmp
fs
pusha
out
xor
popa
rclb
mov
pop
cmp
jo
testl
roll
jbe
mov
or
inc
mov
lds
lock
jmp
and
cmp
addr16
nop
and
xchg
xor
cwtl
dec
lret
popa
jmp
sbb
dec
cs
push
test
and
pop
fs
dec
ret
sbb
mov
cmpl
mul
mov
jmp
adcb
mov
or
cmp
fsts
sti
jnp
scas
xor
and
jecxz
fcmovnu
adc
nop
test
dec
xor
fwait
dec
cmc
xchg
jge
xor
aaa
mov
xchg
stc
pushl
lea
pop
jp
mov
push
or
adcb
pop
leave
out
sub
add
out
xchg
add
pop
lods
mov
cmp
mov
leave
mov
sbb
shll
pop
and
es
inc
push
std
jno
and
inc
pop
add
xor
shl
hlt
mov
jnp
fisubrs
fs
fs
ret
cmp
pop
pop
push
sbb
dec
cmp
shrl
lock
fs
loopne
xchg
sti
ror
mov
jmp
js
pop
sub
add
test
fistl
adc
or
jg
movb
and
inc
insb
loope
lds
xchg
rclb
xchg
in
lds
popf
cmp
push
adc
add
mov
jbe
and
loopne
cmp
loopne
inc
mul
xor
popf
jmp
aad
add
int
sub
push
cmp
lea
xchg
cmpl
inc
and
jne
dec
test
pop
ret
jae
add
push
rcrb
out
pop
sub
add
or
lock
ds
adc
scas
xchg
push
push
add
inc
inc
std
adc
mov
xchg
fs
sbbb
lea
decb
add
jecxz
push
inc
push
add
push
push
cmc
arpl
push
adc
sbb
stos
fldenv
fdivs
or
popf
jecxz
inc
xor
in
mov
xchg
dec
xor
iret
mov
incl
adc
push
mov
mov
jo
in
aam
sti
inc
mov
iret
add
mov
sbb
loop
mov
adc
shlb
cli
sbb
push
rolb
into
ret
mov
in
ficomps
sbb
dec
pop
inc
push
pop
xchg
push
xchg
lods
bound
mov
test
adc
mov
std
and
subl
push
sbb
add
and
inc
out
dec
out
movsb
incl
lods
dec
std
jmp
incl
and
pop
incl
call
maskmovq
negl
jmp
mov
pop
cs
mov
jg
in
in
xchg
out
iret
idivl
idiv
pushl
scas
std
mov
push
dec
ficomps
imul
icebp
cmpsb
dec
add
out
lret
idiv
pop
push
cmp
mov
jns
mov
cmpsb
out
or
mov
mov
jg
cli
inc
les
lcall
shrb
andb
pushl
lods
popf
fdivl
cmc
insl
dec
inc
inc
mov
jecxz
fsin
push
std
filds
push
dec
incl
test
fsubrl
lcall
sbb
inc
dec
scas
std
sub
fs
movsb
mov
divb
fbld
inc
cmp
xor
xchg
cltd
sub
idiv
cmp
cmp
push
nop
mov
fistpl
and
std
pop
mov
stos
inc
loope
jg
or
mov
iret
cmp
scas
mov
out
outsl
pop
mov
imul
sbb
sbb
dec
dec
fldl
decb
lods
je
pushl
lock
inc
inc
negl
push
sti
mov
pop
mov
ljmp
jmp
adc
push
and
add
in
cmp
pop
popf
lds
mov
sub
mov
cmp
sub
call
mov
loope
loope
icebp
mov
leave
icebp
mov
mov
aas
test
call
mov
int
dec
iret
push
push
das
into
in
out
movsl
insb
inc
in
dec
bound
incl
out
mov
push
idivb
dec
jmp
aas
pop
xlat
pop
scas
movsl
mov
or
in
cltd
int
or
in
in
stos
sahf
movsb
enter
and
mov
out
call
jbe
fsubrs
fstps
push
and
jmp
jl
mov
test
push
pop
stos
mov
sbb
mov
out
sub
mov
cltd
push
call
jno
xor
addr16
jb
inc
xor
lahf
sti
icebp
mov
into
outsl
daa
xor
fistpll
ret
ss
jns
inc
bound
loopne
repz
in
std
xor
fcmovu
push
push
pop
shlb
mov
pop
jmp
imul
sbb
or
aam
push
pop
xchg
mov
jns
enter
lcall
bswap
pop
sbb
pop
or
into
lahf
pop
fiaddl
jnp
mov
mov
lcall
pop
ficomps
pop
sahf
fwait
add
pop
flds
pop
jns
jno
notl
inc
sub
aas
sub
pop
xor
repz
xchg
pusha
sbb
outsb
jl
dec
das
das
xor
rcr
popa
icebp
jp
sub
pop
push
imul
ja
ljmp
lea
insb
push
mov
inc
xchg
aad
jmp
lret
mov
lcall
in
in
iret
rclb
stos
outsb
das
mov
fildll
dec
push
xchg
xchg
movsl
xchg
bound
cmp
inc
adc
push
mov
adc
sub
push
push
xchg
push
mov
ljmp
into
repz
pop
cmpb
inc
xor
pop
inc
dec
ss
inc
test
or
jmp
jae
imul
enter
mov
pop
ficomps
fimuls
jne
pushl
popa
shll
pop
jnp
ret
or
xor
mov
mov
out
les
jne
or
repnz
aad
mov
adc
xchg
loopne
and
cmp
add
inc
dec
dec
or
inc
inc
cmpb
in
fs
insb
imul
incl
shll
inc
jmp
pusha
dec
and
test
push
mov
sub
push
clc
adc
decl
pop
cwtl
cs
and
sub
jb
xchg
push
lret
sbb
outsl
das
arpl
ljmp
sbbb
or
jne
cli
test
push
insl
cmp
pop
hlt
push
loope
push
xor
pushl
addb
adcb
aaa
fidivrl
icebp
and
adc
decl
mov
inc
sbb
js
push
cmp
outsl
push
pushf
adc
adc
lcall
rorl
fdivr
push
adc
inc
sbb
pop
or
sub
pop
sbb
mov
mov
pop
test
mov
add
mov
sub
mov
lea
pop
notl
push
and
loopne
insb
fwait
sub
scas
cmc
and
dec
pop
ljmp
lcall
mov
andb
rcrl
pop
pop
aam
push
pop
shll
ficoms
or
pushl
cmpsb
pop
negb
mov
cld
sbb
aam
push
loope
data16
sbbl
pop
push
mov
adc
mov
cmp
inc
shlb
mov
pop
cli
incl
pop
sub
and
aaa
pushf
test
fisttps
pop
adc
sbb
pushl
adc
int3
cmp
pusha
mov
sahf
mov
push
aam
pop
adc
push
add
sub
fdecstp
in
mov
xchg
clc
ljmp
dec
sbb
mov
fdiv
mov
mov
fsubs
rol
sbb
dec
popf
subb
sub
jmp
stos
and
push
mov
clc
xor
mov
aad
idivb
out
mov
push
xchg
adc
mov
or
push
dec
decl
xchg
nop
ljmp
or
imul
dec
inc
mov
ljmp
aam
jne
add
inc
inc
je
std
into
fdivrs
inc
mov
icebp
inc
loope
mov
shll
xor
into
mov
ljmp
call
pop
mov
ficomps
pop
andnps
xor
test
inc
inc
cmp
imulb
mov
inc
faddl
enter
cmp
sti
cmpsl
or
mov
psubq
rorb
push
adc
nop
lods
mov
cmp
ret
imull
in
and
and
xchg
xor
ds
push
loopne
lcall
jo
and
sub
fs
stc
mov
mov
mov
loop
xchg
das
push
xchg
push
hlt
cmp
aam
std
bound
imull
jecxz
decl
mov
cld
orl
adc
divb
cmp
jmp
in
jo
in
xchg
aaa
mov
cmp
cmp
sbb
or
mov
ds
mov
xchg
xor
jb
movb
pop
orb
das
and
in
hlt
in
pop
les
ljmp
lcall
call
xchg
push
mov
sbb
shrb
push
push
or
popf
push
xchg
pop
push
and
push
decl
inc
sar
push
add
inc
rorl
dec
dec
mov
enter
inc
pop
xor
mov
and
aam
incl
rcrb
cmp
adc
pop
sbb
dec
rcrl
xor
outsl
std
lcall
movsb
adc
add
sbb
sbb
loop
sarb
ret
inc
subb
repnz
addr16
cli
cmp
je
jge
xchg
lcall
into
mov
data16
rcl
xchg
xchg
or
sahf
pusha
mov
sbb
ljmp
lock
shll
jne
aas
pop
cmp
aam
addr16
fs
fsubp
jmp
xchg
xchg
sub
mov
jecxz
clc
jmp
lcall
call
dec
dec
loopne
add
pop
aad
into
cwtl
pop
mov
cld
jle
pop
jecxz
cs
test
cmp
mov
ljmp
sti
scas
and
xor
dec
xchg
dec
addr16
es
xchg
dec
jbe
sub
arpl
ljmp
mov
sub
addb
inc
lds
cmp
inc
xor
and
clc
dec
xchg
pop
fwait
adc
in
pop
push
pop
ret
test
pushl
lock
jnp
in
bound
jo
data16
or
jnp
mov
add
add
mov
mov
test
ljmp
fistps
pop
es
ret
push
sti
xchg
pop
pop
pushl
mov
inc
je
sbb
add
inc
fisubrs
mov
pop
leave
test
mov
cli
ljmp
xchg
repnz
xor
cltd
sub
addr16
xor
call
inc
jb
mov
jo
filds
sbb
fidivrs
in
push
call
pushl
inc
add
int3
dec
in
enter
jecxz
jae
jns
xchg
shr
arpl
sbb
lcall
push
mov
sub
mov
fstp
adc
sarl
fsubp
call
jno
adc
pop
cwtl
cmp
insb
call
test
pop
test
filds
xchg
sahf
adc
xchg
dec
stc
outsb
sbb
mov
dec
pop
mov
addr16
fsubs
xor
punpcklbw
call
rcrl
xor
fimuls
sbb
cmc
add
fdivr
pop
sub
pop
sarl
xchg
out
imul
cmpsl
ljmp
xchg
inc
aas
pushf
sub
add
mov
mov
cld
mov
into
jecxz
clc
pushl
ja
and
xchg
test
pop
mov
jae
jbe
fs
dec
sar
decl
xor
cmp
or
jae
outsb
cmp
mov
enter
mov
imul
inc
mov
jge
jno
and
mov
jl
sub
jmp
pushf
in
in
std
xor
cmp
jbe
fs
and
mov
stos
pushl
insl
or
add
pop
pop
ds
adc
sbb
shr
aaa
clc
inc
orb
fstps
sub
insl
int3
cmp
sub
aad
clc
pop
lods
cs
xchg
sub
xor
testl
cmc
cli
jne
cmpsl
icebp
test
ds
call
lods
fists
sbb
les
stos
mov
dec
enter
xchg
push
sarb
cmpsl
adc
adc
jle
jnp
movsb
xchg
arpl
cltd
ss
popa
nop
push
mov
sbb
or
xchg
fmull
xchg
jecxz
and
mov
inc
mov
lods
cmc
mov
xchg
es
jnp
repnz
cld
call
std
shlb
sub
xchg
mov
int
sub
xchg
and
adc
lcall
pop
lds
dec
push
fsubr
xlat
inc
pop
dec
aad
xchg
cmp
fists
cmc
nop
dec
sub
mov
mov
pop
repz
loopne
rcrb
roll
lcall
inc
int
pop
outsb
dec
jae
jp
mov
or
rcrl
test
jae
push
mov
mov
adc
sbb
imul
test
mov
or
mov
push
mov
pop
mov
xor
in
and
or
xchg
lock
call
xor
pop
and
add
enter
add
insl
rcrb
push
mov
pop
mov
sahf
incl
ljmp
imul
sub
jbe
push
addr16
add
incl
test
lock
push
sbb
add
push
sbb
xor
outsb
mov
incl
jmp
cmc
pop
clc
pop
popa
out
mov
xor
test
outsb
aaa
push
pushl
repnz
sub
sub
out
dec
jo
icebp
xchg
xchg
mov
mov
mov
push
dec
dec
icebp
ja
out
fidivs
je
push
loopne
push
inc
mov
es
sahf
jns
push
shll
jmp
dec
leave
sti
jo
call
pop
test
jo
fisubl
scas
pop
pop
mov
cmpsb
cmpsl
or
daa
cmpsl
les
sahf
aad
outsl
cld
decl
fnsave
gs
adc
mov
hlt
mov
shlb
and
test
pop
and
push
sbb
ss
push
out
lock
add
add
decl
cwtl
and
jno
jg
fdivrl
or
pop
cli
mov
sub
mov
fwait
shrl
jmp
mov
push
enter
mov
dec
daa
lret
enter
mov
mov
int3
push
flds
arpl
push
insl
insl
mov
or
lcall
dec
xor
mov
inc
shr
cmp
lods
sarb
fs
ljmp
and
cmc
jo
dec
xchg
insl
adc
fldt
and
es
inc
std
pop
cmpb
or
das
inc
mov
add
add
push
fldenv
cmp
mov
mov
sbb
cmp
jg
pushl
pop
imul
mov
rcrl
adc
iret
jae
js
lcall
lahf
inc
outsl
repnz
add
push
push
fwait
les
ja
outsb
or
incl
mov
or
pusha
sbb
lret
dec
pushf
jge
loopne
les
hlt
and
lds
arpl
cwtl
out
push
push
jmp
pop
loope
mov
movsb
mov
and
les
out
lret
xor
call
daa
ret
mov
push
sbb
xchg
mov
pushl
clc
ljmp
and
out
mov
sub
adcl
stos
rclb
incl
popa
add
and
sub
xchg
mov
cwtl
pop
sub
cmpl
dec
xor
mov
fdiv
stc
pushl
ss
inc
lret
scas
insl
popa
stc
push
sub
fstpt
jnp
sarb
inc
adc
iret
add
in
dec
cli
or
pushl
cmpsb
loopne
xchg
lods
cmp
mov
pop
mov
enter
cld
movsl
lods
add
mov
dec
sub
bound
ljmp
jle
sbb
pop
sti
cmpsb
data16
cltd
and
push
jnp
dec
mov
xchg
sahf
mov
inc
clc
jmp
pop
call
mov
scas
sbb
shlb
lahf
cwtl
sbbb
pop
call
ss
mov
sahf
cmp
mov
aas
add
dec
pop
cmpsl
dec
sahf
mov
lret
imulb
insb
stc
jo
sarl
int
add
fcmovnu
call
std
jae
and
add
loope
push
push
sub
or
pop
mov
inc
repz
pushf
imul
lcall
sbb
je
mov
and
jbe
mov
jnp
popf
jmp
xlat
add
cmc
push
repz
inc
inc
xchg
imul
es
or
pop
pop
ljmp
outsl
out
mov
mov
pop
cmp
dec
into
pushl
dec
imul
sbb
rol
or
sti
dec
push
mov
add
sub
pop
loop
lods
es
fyl2xp1
call
push
mov
or
mov
adc
dec
hlt
push
orl
sbb
addl
ja
push
ret
ret
or
xchg
sbb
pushl
dec
negb
push
jno
and
stc
icebp
addr16
rcrb
shlb
adc
je
sarb
js
or
pushl
pop
xor
rclb
cwtl
fs
cmp
xor
jbe
ss
pop
jne
ret
in
ljmp
and
pop
xor
out
dec
call
mov
sti
js
repz
jnp
std
incl
pop
inc
mov
dec
rolb
outsb
xor
jecxz
pop
or
movsb
scas
jp
inc
jge
lcall
dec
ret
xor
pop
adc
dec
lock
jl
sub
sub
out
adc
xor
jg
pop
xchg
stos
or
sub
sar
enter
inc
push
adc
incl
clc
xchg
mov
adc
addr16
scas
mov
js
sub
pop
and
cwtl
mov
addr16
scas
out
and
mov
or
incl
jmp
rorl
out
push
mov
dec
shrb
xor
jmp
loope
xor
or
jbe
pop
cli
call
xchg
pop
call
pop
pop
mov
xchg
adc
cld
loop
test
xchg
sbb
cmp
inc
add
testb
push
incl
incl
outsl
xor
fsubrl
in
or
cmpsb
and
stc
mov
pushl
jnp
xor
sub
andl
dec
pop
and
stos
mov
sahf
ljmp
mov
add
lods
call
fs
xor
pop
ja
imul
jg
int
xor
dec
inc
andl
es
or
lcall
lcall
pop
xchg
lock
inc
jge
dec
inc
insl
adc
out
cmp
ljmp
pop
test
addr16
ret
test
mov
negb
lea
sub
push
mov
dec
imul
push
or
jmp
mov
sbb
inc
imul
arpl
mov
mov
ljmp
sub
nop
sarl
mov
inc
fisubrl
inc
mov
popf
cmpsl
push
shll
fdivrl
pmulhw
shll
loop
lret
xor
mov
fcoml
mov
loop
sub
test
shlb
fldl
sti
les
stos
mov
sti
inc
push
xor
xchg
mov
scas
aas
ljmp
jl,pn
pop
js
mov
lcall
jmp
cmp
and
mov
sub
mov
jbe
xor
lcall
idivb
push
pop
fcomp
leave
or
jmp
inc
cmp
inc
in
mov
cld
incl
sahf
cmp
daa
jae
movsl
adc
add
ljmp
sbb
fisttpll
pop
das
bound
inc
mov
jmp
js
push
inc
pop
clc
lcall
mov
mov
inc
scas
shlb
adc
lds
fdivr
pushl
or
imulb
pop
sub
nop
mov
lret
push
xchg
out
cs
call
sub
sub
test
jl
xacquire
adc
out
jmp
addr16
mov
add
push
cli
icebp
push
push
int3
lods
add
pop
mov
cmp
je
xchg
inc
mov
jmp
dec
or
roll
nop
inc
lods
sub
jae
fldenv
xor
mov
outsl
inc
fcomi
adc
mov
sti
mov
les
or
mov
scas
cli
mov
or
pusha
cmp
cmp
test
fistpll
jo
incl
adc
add
or
add
xor
lods
xchg
ljmp
cld
std
hlt
adc
pop
cmp
cmpsb
mov
fdiv
dec
ret
test
icebp
mov
push
add
xor
je
mov
das
lret
mov
cld
cld
xor
rcr
mov
fidivs
push
sub
jl
add
dec
decl
dec
xchg
imul
mov
sti
and
decl
sahf
cld
stc
loopne
inc
push
and
cmp
sbb
aas
pop
int3
mov
je
call
incl
lcall
cmp
popa
jl
mov
mov
leavew
movsb
mov
push
sahf
xor
xor
gs
stos
inc
inc
jge
ret
add
adc
cmp
clc
lcall
push
adc
mov
adc
pop
add
sahf
mov
or
leave
dec
ljmp
push
rorl
jg
add
leave
mov
mov
sub
mov
std
stos
pop
pop
aam
pushf
xchg
mov
cmp
dec
push
xlat
pop
push
mov
mov
pop
mov
sub
jae
lods
pusha
dec
push
mov
call
cmpsl
push
dec
xor
sbb
xchg
xchg
shr
jg
cld
add
test
lcall
xorl
lea
dec
jmp
clc
pop
rclb
mov
rol
call
jne
je
repnz
inc
or
adc
jns
sbbb
mov
hlt
push
inc
push
aad
enter
call
call
push
add
sub
dec
jle
je
push
jl
mov
push
int3
fs
add
sbb
int
cmc
push
jmp
test
sarl
enter
loope
aas
mov
pop
sub
sbb
leave
loopne
std
decl
cmp
cltd
cmp
pop
add
fisttps
jmp
in
mov
enter
rolb
mov
cmp
fcompl
xchg
je
lahf
adc
lahf
pop
lods
inc
data16
cmp
adc
addr16
lods
dec
inc
scas
jns
idiv
add
xchg
stc
clc
es
mov
dec
push
repnz
jmp
jne
scas
xchg
jnp
xor
iret
aas
cmp
lea
inc
sar
lcall
or
inc
mov
cmp
movsb
insb
jno
xor
insb
push
adc
push
inc
int
sbb
cmp
clc
out
adc
paddd
inc
xor
and
jns
xchg
lock
fs
scas
push
sbb
mov
std
mov
shlb
loop
cltd
dec
xchg
push
push
lods
sti
pushf
and
repnz
imul
movsl
push
adc
loopne
sub
cmc
xchg
ret
dec
jmp
cmp
add
mov
das
xchg
jg
push
jno
mov
push
or
sub
jg
jmp
pop
inc
pop
pop
mov
cmp
imul
inc
lcall
call
movsl
mov
jmp
movsb
repz
and
adc
bound
inc
jbe
ja
mov
leave
fmull
xchg
xor
cltd
fdivl
clc
inc
adcb
mov
dec
and
mov
mov
ljmp
cs
sbb
subb
xchg
mov
rolb
or
adc
imul
mov
inc
mov
inc
dec
cwtl
cmp
cmp
jle
ljmp
in
call
out
lea
and
add
ds
mov
xlat
or
dec
fmull
mov
mov
hlt
jnp
inc
fs
pop
mov
mov
pushl
and
imul
cli
fimull
jbe
aam
mov
adcb
and
mov
lret
or
fs
cmp
jg
cld
hlt
or
mov
cmp
ficoml
rorb
lds
pushl
xlat
cmp
rclb
pushf
adc
test
dec
fs
notb
outsb
test
dec
incl
jns
jp
push
inc
inc
adc
xor
mov
fidivrs
push
dec
push
insl
je
xor
mov
in
mov
into
mov
icebp
or
jmp
mov
inc
or
xor
lods
in
ss
add
loope
xchg
hlt
jg
jne
std
mov
stos
lds
adc
xchg
fimuls
ljmp
xchg
mov
std
ss
cmp
pushf
lock
nop
out
addr16
filds
imul
loopne
popf
cmp
jno
pop
sbb
arpl
xlat
ljmp
hlt
pop
dec
inc
out
xchg
fwait
jns
push
ds
inc
mov
jb
sbb
jmp
xor
dec
inc
mov
out
mov
adc
pop
popf
test
push
sbbl
push
call
cmp
popf
out
and
test
sbb
sub
mov
xor
in
pop
arpl
or
jmp
jnp
pop
xchg
popf
mov
jns
out
in
cs
mov
cmp
jg
jmp
ror
sub
rcr
pop
test
sbb
ljmp
call
push
inc
mov
xchg
ret
sbb
pop
popf
adc
das
fistpll
cli
or
les
outsl
pop
movsb
subb
call
aam
pop
popf
ret
push
rcrb
rcrb
stc
jne
mov
sti
xchg
jns
push
mov
xor
das
mov
inc
jle
xchg
pop
clc
pushl
mov
jle
loopne
jno
inc
arpl
lds
loop
jl
call
ds
clc
out
bound
push
push
test
sbb
in
add
mov
sti
loope
fwait
inc
ds
fs
clc
or
rolb
xor
fisubrl
shr
mov
jle
jl
std
incl
xchg
loopne
pop
clc
les
icebp
ljmp
xor
lcall
bnd
iret
dec
into
cmpl
cmp
push
in
mov
pushl
sbb
adc
ljmp
lcall
lcall
int
dec
jp
add
insl
cmove
in
xlat
push
in
mov
adc
xor
pop
lock
loope
inc
mov
daa
ss
push
sbb
into
nop
inc
or
ljmp
stos
sub
or
mov
cwtl
dec
fstps
add
add
mov
xchg
ret
add
incl
push
sub
dec
ljmp
pop
xor
sub
sub
add
dec
mov
mov
stc
shlb
or
mov
mov
std
adc
jnp
sub
cmp
inc
mul
sbb
mov
nop
stos
vsqrtsd
sar
jmp
mov
negb
mov
dec
negl
xor
int3
insl
cmp
jle
rep
icebp
add
fwait
cmp
neg
or
movb
incl
mov
fbstp
mov
ljmp
mov
fwait
scas
and
ds
xchg
sub
ss
loopne
jnp
inc
aaa
mov
mov
xchg
pop
sub
gs
dec
outsb
xlat
or
js
add
sar
sbb
in
adc
mov
std
adc
and
lcall
add
inc
mov
adc
jo
push
ret
arpl
sbb
or
add
lcall
decl
jg
ret
sbb
push
mov
sahf
mov
cmpsl
les
test
loope
std
xchg
fstps
push
repnz
into
cs
jp
jno
and
sahf
lea
lock
lods
movsb
icebp
hlt
out
andl
mov
push
or
xor
xchg
dec
fnstcw
scas
and
popl
sub
mov
xchg
adc
js
push
xlat
xchg
aaa
push
mov
ret
aaa
pop
or
dec
xchg
std
inc
mov
leave
arpl
fwait
adc
shr
test
gs
jg
xchg
xchg
and
mov
jns
inc
inc
das
lret
push
ljmp
cld
xchg
sahf
mov
lods
and
jbe
cmp
push
jae
loopne
cmp
das
cld
jge
jo
dec
ret
loope
dec
mov
pop
or
fisttpl
test
inc
cmpsb
mov
cmp
xor
pop
hlt
xchg
mov
leave
inc
adc
ljmp
cld
decl
testl
insl
sbb
fsubs
stos
cmp
push
inc
jb
sub
pushl
fs
inc
insb
loopne
sbb
xor
mov
movb
test
out
sbb
dec
std
incl
inc
xchg
mov
mov
insb
xchg
jmp
fst
cltd
mov
adc
sbb
or
ret
sbb
sahf
mov
nop
test
dec
test
lods
jg
pop
sbb
mov
les
sbb
mov
les
inc
pop
clc
ljmp
cmp
cld
iret
push
jae
sbb
mov
jns
jnp
mov
cli
rcrb
aaa
pop
stos
add
add
outsl
lds
cmpsl
popf
cmp
jae
dec
pop
xchg
stos
xchg
je
or
mov
pop
fimull
sub
xor
repnz
lock
idivl
pop
dec
test
jmp
inc
adc
mov
sbbl
and
pop
xchg
clc
rcll
or
lcall
lcall
add
ja
cli
pushl
xchg
jne
ds
mov
mov
push
pop
imul
sar
lock
call
in
arpl
jl
add
scas
les
mov
lahf
ljmp
sub
lret
in
and
loope
imul
aas
sahf
xor
pusha
and
loopne
rcll
sbb
sbb
mov
fldl
cltd
jno,pt
sub
jne
out
pushl
cli
lock
add
xor
inc
adc
out
xchg
pushf
mov
mov
popa
int3
push
sbb
stos
xchg
and
xor
push
sub
mov
mov
xor
ljmp
jge
sbb
pop
push
pop
loopne
inc
ret
add
pop
enter
sbb
loope
jae
mov
mov
in
push
inc
or
pop
xchg
push
mov
mov
out
setne
cmc
leave
pop
inc
jg
inc
pop
xor
jbe
cmpsb
in
pop
inc
pop
movsl
jmp
or
jnp
xor
mov
stc
mov
loope
sub
leave
mov
pop
pop
jecxz
clc
xchg
xor
incl
pusha
mov
jmp
fcmovnu
inc
jg
cli
enter
jmp
mov
jmp
sbb
and
out
imul
adc
cmp
xor
mov
xchg
inc
mov
je
xor
push
mov
xchg
call
mov
fsubrs
jge
test
aaa
call
add
jecxz
lret
loopne
scas
shll
mov
lcall
repz
jmp
ror
and
sti
mov
pushf
repz
stc
sub
call
push
roll
cld
movsb
sub
dec
xchg
incl
in
hlt
popf
fmuls
cld
stos
mov
scas
cmp
cs
xlat
lcall
cs
out
cmp
fld
test
adc
push
stos
in
addr16
xchg
push
lea
pushl
frstor
and
xchg
sbb
pop
sti
dec
mov
xchg
rcrb
mov
sahf
or
push
mov
or
std
or
int
mov
dec
xchg
lods
je
adc
jg
cmp
arpl
jp
mov
add
lcall
cld
jmp
popa
nop
cli
pop
xorl
adc
rcll
decl
std
call
mov
push
xor
lahf
xchg
mov
inc
out
mov
es
pushl
mov
jle
insl
jo
call
sbb
cmpsb
dec
pop
movsb
xor
fbld
mov
push
ja
pop
sub
add
and
js
out
out
and
lcall
ret
or
sub
outsb
jp
xor
ljmp
stos
push
imul
mov
cmp
ljmp
lcall
loop
and
les
int3
shll
fdivrs
xor
lock
jg
jle
js
mov
jmp
xchg
sub
sti
into
jg
adc
pop
and
add
enter
jl
sbb
mov
lds
mov
mov
aad
or
imul
cli
sti
adcb
incl
repnz
into
std
cmp
inc
inc
add
inc
push
out
xchg
sbb
and
adc
push
dec
decl
aam
sub
mov
sub
mov
vcvttpd2dq
cmp
popf
xchg
inc
int3
imul
in
jae
or
gs
insl
sub
mov
or
fdivr
mov
mov
mov
lcall
mov
shrb
push
adc
cmpsl
pushl
and
sub
test
enter
enter
mov
test
push
cmp
push
ja
add
xchg
enter
ljmp
jne
mov
xlat
nop
push
sbb
dec
fisttps
incl
mov
xchg
pop
and
cmp
push
adc
pop
cmp
lcall
and
das
push
stos
gs
sub
dec
mov
lcall
fisubs
fwait
sbb
nop
xor
ss
mov
xchg
xor
push
in
cs
std
call
xchg
mov
std
xor
jb
mov
jmp
call
in
add
cwtl
das
xchg
xlat
add
push
jo
roll
mov
orl
mov
sbb
iret
lahf
leave
jle
and
decl
push
or
rorb
lods
in
xchg
dec
jge
jmp
flds
jb
mov
aaa
jp
jae
jae
pop
sar
and
sar
jg
add
mov
add
inc
rol
daa
and
jbe
inc
out
push
mov
std
mov
mov
out
push
jae
push
fwait
xchg
lret
and
lcall
cltd
push
sahf
lret
mov
cmp
aaa
jbe
sub
xchg
clc
outsl
mov
ror
and
in
mov
and
icebp
mov
jg
add
mov
dec
jnp
push
sbb
call
mov
ljmp
mov
mov
pop
push
and
mov
decl
and
out
out
les
pop
and
push
sbb
push
jle
cmp
btc
pushf
or
jmp
jg
nop
dec
lods
jle
jg
jecxz
mov
cltd
fdivs
dec
scas
xchg
test
pop
inc
and
lea
push
decb
xlat
divl
repnz
cmp
gs
add
push
inc
int
int
in
andb
push
dec
testl
fsubrp
jle
divl
mov
lcall
fisttpll
lods
out
jg
cld
push
pushf
sti
insb
rorl
js
jge
xchg
inc
xchg
in
fisttpl
jmp
cli
dec
stc
xchg
jmp
lods
test
xor
dec
pushf
call
pushl
sub
mov
imul
mov
mov
fucomip
fildll
addr16
pop
pop
dec
add
fwait
pop
mov
lds
les
incl
jecxz
test
lret
nopl
leave
or
lods
adc
test
jp
int3
nop
pop
stos
cwtl
cs
lds
dec
cmp
xchg
or
xchg
cli
call
sbbb
xor
xchg
nop
movsb
pop
mov
inc
lods
mov
mov
out
out
pop
in
push
lret
push
and
inc
mov
and
jmp
out
ret
jp
ret
inc
in
hlt
loop
xor
sub
add
dec
int
and
call
mov
je
cli
fwait
xchg
mov
out
adc
insb
jge
xchg
out
pop
das
mov
xchg
push
dec
test
in
bound
cltd
mov
push
jg
push
pop
test
sbb
inc
sbb
jmp
xchg
dec
jle
faddp
call
decb
dec
dec
xchg
in
xlat
insl
fs
mov
push
cmpsl
call
inc
aaa
mov
lock
dec
xor
movsb
stc
inc
aam
std
push
call
loop
xchg
mov
icebp
jge
mov
les
call
repz
adc
icebp
and
cwtl
add
aaa
idiv
jmp
cli
mov
les
sbb
shlb
lods
aaa
jl
addr16
faddp
jbe
stos
mov
pop
sti
lea
mov
cltd
cwtl
cmp
fiaddl
jo
testl
scas
not
xchg
call
cmpsb
scas
in
out
or
jmp
int
ror
jno
fnstsw
pop
clc
adcb
addr16
inc
clc
movsl
aad
push
mov
notl
clc
test
push
add
call
dec
into
sbb
idiv
gs
lahf
cld
sub
and
insl
in
jne
mov
loopne
ljmp
pop
popa
out
sub
sub
xchg
aam
arpl
fnstcw
or
sub
test
sbb
pusha
mov
inc
and
push
call
sub
push
xlat
popf
nop
je
add
test
mov
xorb
das
aad
addb
inc
dec
xor
insb
std
int3
mov
mov
out
mov
in
je
mov
or
in
mov
sub
icebp
mov
cs
outsl
std
data16
dec
dec
push
adc
ljmp
test
popa
std
and
aas
inc
and
mov
mov
lcall
scas
pop
sub
pusha
xchg
jp
jl
pop
sbb
arpl
inc
jnp
and
pop
jae
fadds
ret
cmp
add
push
fdiv
std
push
scas
mov
psubd
stc
push
outsl
jns
test
xor
lea
dec
fildl
stc
xchg
push
testl
jg
outsl
icebp
pushl
cwtl
mov
into
add
dec
call
cmp
mov
jb
addr16
jns
sub
or
and
int
cs
pop
dec
pop
mov
int3
lcall
test
mov
insl
out
data16
decl
cmc
cmp
es
sub
mov
push
lds
push
mov
mov
sbbb
jmp
outsl
shlb
lret
cmp
es
adc
jp
mov
int3
fnstsw
pop
in
xorb
out
and
lcall
decl
mov
pop
in
rcr
push
fs
insl
sub
fbstp
dec
fwait
inc
push
jbe
hlt
dec
shl
mov
aas
or
ficoml
ljmp
xor
jo
dec
xor
mov
out
mov
xchg
loop
sbb
js
fnstsw
ljmp
or
pcmpgtd
stc
add
std
cmp
cmp
call
decl
or
and
pushf
es
outsb
bound
arpl
mov
scas
leave
push
es
in
rcl
fisubrs
push
pop
clc
in
xchg
lret
ja
data16
ljmp
repnz
xchg
xchg
mov
jns
xor
jns
dec
mov
jns
testb
ljmp
insb
and
ds
sub
mov
xor
xchg
jae
jb
inc
jne,pt
clc
loopne
repz
outsb
xor
popa
out
xchg
jmp
adc
ja
or
call
call
cmp
adcb
inc
out
or
adc
mov
popf
mov
imul
cs
jne
mov
inc
imulb
icebp
cmp
adc
gs
ds
sarl
sbb
pop
inc
aaa
and
lcall
cli
bound
or
shrb
imul
or
in
std
push
arpl
mov
jg
and
jno
pop
mov
shrl
dec
sbb
addl
out
dec
int
lock
push
in
push
out
jb
cmc
negb
jo
in
push
add
mov
pop
mov
jle
cmp
sar
cmp
test
lods
cli
or
mov
out
mov
inc
jecxz
xchg
hlt
sub
les
cld
mov
mov
mov
fdivr
sbb
push
pop
cmp
sbb
pop
mov
mov
dec
jnp
je
push
rcrl
lret
outsb
shl
sbb
maxps
rolb
aad
fisubrs
dec
call
fs
add
pusha
lret
call
daa
fildl
pusha
pop
jp
mov
dec
lret
jmp
ficoms
adc
jae
test
clc
call
test
mov
add
dec
popa
test
sbb
cld
jns
filds
shrb
out
mov
mov
in
bound
xor
lods
test
aaa
cli
push
dec
dec
dec
stos
scas
hlt
xchg
in
scas
andl
dec
or
outsb
mov
fsubl
sub
pop
push
xchg
pop
shlb
call
mov
in
in
mov
fmuls
mov
or
loope
ljmp
popa
mov
push
dec
jle
mov
lret
sti
cmp
jge
sub
insb
push
jg
xchg
jbe
adc
dec
imul
orb
mov
sbb
sub
mov
fucomip
inc
pop
and
mov
mov
cmp
and
or
call
push
pop
cli
xchg
scas
mov
mov
imul
decl
inc
leave
dec
adcl
sub
cmpsl
sti
sub
adc
ret
jo
pushf
cld
call
adc
mov
mov
in
cmp
mov
add
push
dec
jb
ljmp
data16
sbb
pop
pop
std
mov
stos
cmp
mov
in
dec
inc
add
in
inc
ds
jb
call
mov
cli
outsl
sbb
js
les
and
inc
push
push
out
jecxz
xchg
push
cld
mov
fdivrs
mov
imul
lcall
cmp
adc
mov
mov
xor
fdivrl
roll
cld
decl
std
rcll
ficomps
js
popa
sub
loop
pop
sub
mov
insb
sbb
jg
insl
ret
pop
push
scas
pop
arpl
dec
clc
add
jb
and
fidivl
daa
dec
fidivs
fstpl
cmp
pusha
adc
xor
into
imul
mov
xchg
shll
adc
rorl
dec
pop
jp
pushl
cli
add
push
mov
inc
popf
mov
lock
sar
cs
mov
add
mov
mov
out
add
movsl
stc
jg
sbbb
subl
or
hlt
and
and
xchg
push
in
jne
sbb
clc
dec
lods
jae
nop
add
mov
mov
and
or
rcll
add
jb
push
mov
pcmpgtb
sbb
das
pop
call
stc
mov
stc
inc
jb
movsl
push
mov
outsl
std
pop
xchg
mov
inc
mov
mov
dec
pop
outsl
hlt
mov
mov
fcmovu
imul
insb
sub
mov
add
aaa
pop
out
sub
mov
scas
mov
cmp
sbb
aad
shr
mov
and
push
scas
call
loope
negb
push
in
out
fdivrs
jl
inc
sub
cmp
mov
jnp
and
dec
incl
dec
xor
ret
icebp
clc
inc
lea
lods
testl
mov
ds
or
mov
add
dec
adc
mov
dec
aad
ffreep
faddl
cmp
cmp
pop
js
sbb
push
lea
mov
test
je
pop
xchg
in
ljmp
decl
xor
inc
xchg
rol
mov
ljmp
out
cmp
incl
inc
mov
test
or
dec
push
shrb
push
xchg
test
pop
lcall
decl
sbb
gs
mov
cmp
cmp
ss
mov
aam
sbb
call
xor
fisubl
aaa
cmpsl
pop
mov
jno
push
push
lcall
std
pushl
inc
test
sbb
mov
adc
adc
clc
decl
pop
dec
or
cs
dec
inc
cwtl
popf
jo
mull
xchg
call
popa
ja
jl
stc
pop
sub
fs
stos
inc
repnz
jmp
pop
jge
sarb
fistl
jp
scas
stos
fwait
jle
dec
jmp
push
adc
jmp
adc
lcall
sbb
xor
adc
call
cmp
leave
in
loopne
shl
dec
frstor
leave
jbe
decl
mov
and
rcrl
mull
test
ljmp
dec
jnp
mov
or
call
call
cltd
pop
xor
insb
aam
cmp
pop
pop
mov
cs
pushf
mov
aaa
mov
jp
dec
out
sbb
mov
mov
or
call
ss
jns
jecxz
cli
neg
pop
jge
adc
jbe
inc
xchg
call
decl
xor
test
xor
repnz
mov
cmp
or
ljmp
iret
sub
mov
or
inc
aad
push
add
and
fstps
mov
adc
insb
jae
jg
icebp
and
and
mov
outsb
jnp
loop
xor
les
xor
sbb
decl
mov
add
ret
pop
fistl
xchg
sbb
push
loope
cmp
mov
add
push
adc
dec
daa
lock
jmp
insb
mov
xorb
pop
mov
push
mov
or
jp
ljmp
mov
adc
jns
outsl
cld
inc
xchg
pop
cmp
push
test
mov
jl
ret
and
inc
jmp
lret
and
xchg
test
ljmp
mov
sbb
in
add
nop
pusha
sti
jle
js
testb
filds
pop
push
cltd
mov
pushf
stc
cmp
icebp
adc
inc
lcall
icebp
aam
fwait
mov
enter
int3
loope
dec
inc
dec
dec
jnp
xchg
mov
jl
inc
dec
mulb
sbb
mov
jg
popf
bound
fcmovb
out
lret
movsb
out
xchg
ljmp
pop
cmp
fcoml
les
dec
mov
fisubs
loop
movsl
ljmp
in
jns
pushf
mov
ret
jmp
inc
lahf
xor
xchg
xor
jle
mov
mov
aam
jmp
pop
clc
adc
movsb
sti
pop
push
sti
pop
roll
push
push
xor
fdivp
mov
push
mov
arpl
orb
lds
fcoml
push
decl
mov
lods
aad
xorl
mov
arpl
jb
adc
test
js
jg
lcall
imul
mov
and
mov
inc
ret
fucomip
incl
xchg
push
sbb
mov
xor
mov
fdivr
xor
movsb
scas
mov
mov
shrb
sub
int3
mov
shlb
es
imul
addr16
ljmp
xor
pushl
and
mov
pop
leave
std
adc
sbbb
imul
cli
in
sub
ret
test
fiaddl
incl
adc
xchg
dec
mov
pop
and
xor
add
or
mov
test
lea
imul
pusha
lret
adc
mov
mov
pushl
jns
ljmp
cmp
add
and
xchg
jecxz
negb
and
push
les
push
in
mov
push
push
clc
sub
pusha
mov
sarl
decl
push
push
cmp
pop
pop
xor
push
cmp
sbb
adc
add
sti
pop
fidivl
pop
add
mov
xchg
gs
mov
insl
test
lods
push
jmp
cwtl
clc
mov
sbb
repnz
sbb
mov
call
inc
mov
inc
cs
cmp
pop
shlb
xchg
lock
test
mov
sbb
xor
xchg
cmpsl
mov
mov
outsl
and
add
out
jecxz
cwtl
push
jle
jg
mov
pop
push
pusha
and
lahf
hlt
and
push
add
aaa
rcrl
roll
lcall
movsl
mov
vpperm
xlat
js
scas
shl
popa
jge
xor
mov
sub
pop
push
sbb
adc
out
and
mov
decl
adc
aam
dec
addr16
inc
mov
xor
jg
mov
aas
cmp
jl
fmuls
ja
pop
dec
adc
mov
das
cli
dec
adcl
pop
mov
mov
inc
mov
mov
icebp
xor
adc
movsl
or
test
push
mov
jg
movsl
push
imul
mov
jg
jge
sbb
adc
gs
icebp
outsl
std
incl
int
jg
add
push
addl
test
fimuls
and
add
int3
data16
lcall
adc
lret
sbb
stos
push
and
xchg
push
mov
aas
xchg
insb
sub
push
jno
ljmp
fisubs
rolb
cmp
in
pop
dec
jp
out
jmp
pop
int
clc
incl
dec
cwtl
icebp
cwtl
mov
nop
test
vcmpsd
gs
incl
lea
aaa
mov
sarb
pop
mov
xchg
push
les
popa
or
xor
mov
in
cmp
pusha
jle
cmp
ljmp
pop
push
xor
aaa
xchg
jmp
incl
inc
push
dec
sbb
cld
mov
bound
lods
adc
int3
xchg
idiv
or
mov
outsl
lock
xorb
inc
mov
mov
mov
movsl
push
xor
decl
insl
insb
push
out
movl
mov
hlt
ljmp
adc
mov
jp
ljmp
mov
addr16
push
jle
push
mov
pop
mov
add
pop
jg
outsl
inc
orb
dec
xchg
lea
pop
ljmp
cmp
cltd
call
fdivl
xchg
test
lret
gs
pop
pop
clc
incl
das
fmull
sub
shlb
loop
mov
cmp
icebp
outsl
cwtl
out
push
std
dec
or
mov
iret
enter
jo
add
lock
testl
mov
test
jge
pop
imul
lcall
shrl
and
out
popf
inc
testb
sbb
and
lods
cmpsb
push
mov
inc
pop
loope
lock
dec
testl
test
sub
lret
lea
jmp
pop
sbb
pushf
adc
shl
pop
in
jae,pn
jne
movl
bound
rorb
rorl
push
pusha
jp
fcomps
out
ror
jnp
pop
and
scas
jb
jb
jg
sti
mov
jnp
jb,pn
xor
xchg
aam
add
adc
call
fmuls
xchg
xchg
mov
push
jns
pop
mov
jb
mov
leave
imul
fs
dec
ret
aaa
les
xchg
cwtl
mov
sbb
pop
es
ljmp
sbb
and
mov
rcrl
inc
xlat
dec
push
fstpt
testb
out
loopne
cmp
cmpsb
sub
sub
jl
inc
loop
icebp
dec
push
imul
sub
inc
js
loopne
lcall
insb
pop
nop
scas
inc
inc
sub
into
in
push
test
lahf
fiaddl
and
incl
jmp
fistpll
fistps
outsb
rcr
dec
roll
mov
ljmp
ljmp
daa
jo
cwtl
add
icebp
test
loopne
pop
hlt
leave
out
jg
dec
add
les
insb
mov
jmp
jo
sub
xchg
in
daa
sti
fs
inc
fisttpl
mov
cmc
inc
push
fadds
incl
mov
pop
nop
in
cmc
test
pop
scas
xlat
pushl
pop
mov
push
faddp
sbb
pusha
or
mov
and
fcmovnbe
mov
es
jle
sub
jns
jecxz
cmp
nop
ljmp
repz
and
mov
das
and
jnp
xor
push
mov
test
dec
stos
dec
test
and
xor
shll
push
mov
add
add
xor
push
mov
push
mov
or
jmp
cmp
push
add
jae
fsub
xchg
xor
cmp
add
aad
dec
iret
dec
aas
sbb
rcrl
aas
cltd
ret
out
cmp
lods
inc
nop
int
or
decl
daa
add
lds
pop
jl
jecxz
es
cmc
and
es
mov
push
stos
jbe
mov
xor
mov
cld
mov
mov
mov
mov
loope
fnstcw
dec
aam
pop
outsb
lock
jb
movsl
cs
outsl
out
push
cmp
mov
cmp
cmp
lret
call
dec
fdivrs
jmp
fnstcw
lret
stos
fs
or
leave
jmp
adc
xchg
rcrb
popa
divps
pop
or
mov
movb
in
mov
jnp
lock
nop
lahf
mov
out
jmp
sub
mov
enter
pusha
jb
mov
push
movsl
fcoml
fsubr
jge
pop
scas
pshufw
pushl
loope
decb
and
add
mov
ret
movsb
ret
xchg
mov
sar
mov
das
adc
mov
mov
rcl
loope
pop
cli
imul
inc
sub
and
pop
dec
push
int3
sub
call
bound
enter
xor
dec
imul
orl
mov
mov
dec
sub
jp
jbe
call
push
cmp
ljmp
negb
out
add
jge
jmp
rorl
lea
and
cmc
xor
out
fldl
inc
pop
in
lret
xor
cmp
cmp
xchg
shl
jnp
cs
push
inc
xchg
gs
jne
call
mov
pushl
and
pop
add
call
inc
outsl
outsl
jle
or
and
aad
or
incl
sbb
inc
jge
or
jl
in
cmp
test
cmp
fisttps
rcr
mov
hlt
add
mov
fists
push
mov
lret
test
loop
jnp
sub
inc
xor
imul
pop
cld
inc
notl
cmc
mov
hlt
mov
fnstcw
pop
popa
call
shl
dec
int3
dec
and
jno
pushl
xchg
sahf
push
in
mov
out
and
push
xchg
sbb
dec
out
leave
xorb
shll
lea
xor
incl
mov
lret
and
scas
xor
lcall
pop
cli
decl
std
mov
lea
push
xrelease
push
jge
mov
das
stos
lock
test
push
adc
sub
sub
push
imul
inc
adc
inc
push
cwtl
mov
loopne
or
lods
push
adc
loop
lds
adc
imul
test
ljmp
mov
orb
pop
nop
mov
pop
cli
lahf
fcompl
xchg
pop
out
or
decl
xchg
xchg
xchg
mov
inc
jne
sub
and
jmp
lcall
daa
pop
adc
js
sbb
adc
inc
pop
push
mov
aaa
mov
mov
fnstsw
inc
xor
std
jb
dec
int3
adc
scas
paddusb
push
test
inc
incl
adc
push
test
push
jnp
inc
add
movsb
jno
dec
ljmp
adc
jo
pop
jae
jge
fs
push
aad
dec
cmpsb
fcoms
jg
xor
mov
mov
shrb
jg
xchg
xchg
cmpsb
in
pusha
jecxz
add
ss
pusha
fwait
rorb
and
mov
hlt
sbb
mov
sbb
test
incl
or
xlat
int3
sub
cmp
cld
cmp
ljmp
decl
cmc
xor
inc
xor
jmp
js
stos
aaa
idiv
sub
sti
rorl
or
jbe
inc
daa
int
ficoms
sar
sbb
imul
cltd
jnp
cmp
sub
pop
cmp
fcos
outsl
mov
pop
fistps
fists
pop
repz
adc
fstl
movsb
lods
dec
lock
mov
fs
xchg
jbe
push
call
pushf
mov
pop
std
push
or
shll
js
jl
insb
dec
cmp
cltd
jb
xor
movsb
or
call
test
mov
mov
test
lds
xor
imul
je
mov
jmp
xor
adc
ds
and
out
int3
imul
sbb
decl
std
dec
adc
push
jns
adc
xchg
pop
cmpsb
inc
call
mov
scas
aaa
xor
xor
xchg
rclb
lcall
xchg
xadd
cmp
pusha
or
cltd
int
xor
pop
int3
sbb
and
in
xlat
hlt
push
clc
cmc
arpl
lahf
aam
add
mov
pop
ja
inc
inc
add
jb
icebp
adc
stos
sub
lods
mov
out
clc
jg
fcompl
sbb
push
push
adc
ja
int3
lods
pop
mov
aaa
sbb
lcall
mov
scas
enter
in
fcom
sahf
je
adc
in
adc
or
mov
xchg
dec
outsb
mov
inc
and
pop
sahf
bound
mov
idiv
pushl
sub
pusha
movsb
sbb
fdivp
push
cmc
xchg
fistps
and
mov
std
and
sahf
xor
cmp
int3
add
popa
adc
cli
pushl
adc
or
data16
inc
leave
xlat
ss
xchg
ja
scas
ljmp
pushl
cmp
ss
lods
bound
sub
xchg
idivb
and
or
and
loope
clc
mov
mov
mov
aaa
jmp
nop
jnp
pop
rorl
xor
pop
std
pop
xchg
pop
mov
cmp
out
in
outsb
pop
cmpsl
scas
dec
ret
icebp
pop
ljmp
gs
cs
lock
mov
std
mov
cmpsb
cs
popf
mov
sub
xor
jae
cmp
std
cmp
ljmp
and
pop
repz
shld
aas
mov
in
andb
sub
mov
jb
adcl
arpl
vpsadbw
jmp
adc
xchg
lock
lods
mov
adc
push
push
dec
mov
adc
jg
jl
add
addr16
lret
xchg
iret
clc
lcall
stos
inc
ja
xchg
es
mov
xchg
pop
or
adc
mov
subl
add
mov
pop
in
inc
orl
jmp
out
jg
push
call
xchg
dec
cli
push
repnz
mov
scas
popa
jnp
jge
mov
enter
xor
fidivrl
test
add
xchg
cs
popaw
mov
out
or
jg
jmp
sub
cmpsl
pop
aad
sub
frstor
outsl
adc
ljmp
xchg
xchg
mov
pop
ss
mov
cs
pop
mov
cmp
sub
outsl
or
push
xor
ret
sub
sbb
sub
adcl
jg
push
mov
ja
mov
rorb
in
sub
or
and
adc
mov
xchg
push
jne
pop
loop
outsb
pop
mov
mov
jp
mov
pop
cmpsb
dec
lret
pop
inc
jp
sbb
ljmp
sahf
mov
and
dec
shlb
and
pushl
or
test
loop
loopne
pop
shrl
adc
movsl
pop
das
std
pushl
fidivl
lods
repz
int3
shll
mov
sub
xchg
dec
iret
mov
xchg
add
sbb
push
sbb
mov
jb
sub
pop
adc
mov
pop
in
jp
sti
out
pop
mov
repz
mov
shll
shlb
rclb
xor
std
or
das
pop
cs
into
cmp
push
jne
or
mov
xor
dec
icebp
mov
and
cmp
stos
in
mov
mov
loopne
sahf
cli
lret
decl
xor
push
add
xchg
jno
jmp
add
insl
incb
sub
scas
lahf
push
add
repnz
adcb
incl
imul
xor
push
mov
test
inc
ljmp
fwait
pop
push
cmpsb
ret
jecxz
jae
pusha
mov
xchg
rcrl
dec
decl
decl
repz
mov
gs
jne
rorb
pop
sti
or
fdivs
mov
movsb
inc
ss
jmp
out
xlat
loope
push
xchg
call
and
sarl
enter
adc
pop
add
dec
push
insl
mov
andb
push
das
cmpsl
inc
aaa
ljmp
cmc
pop
adc
and
sarb
clc
pop
cmpl
imull
cmp
movsl
mov
mov
push
push
subl
lcall
mov
in
pop
mov
addr16
lea
adc
fsubrl
fisubl
call
mov
test
ss
aas
mov
imul
sbb
in
sub
mov
in
nop
jae
add
pop
lock
add
lahf
lahf
fdivrp
jg
dec
jl
test
repz
sbb
enter
add
inc
das
xchg
icebp
xchg
mov
incl
pop
cli
imul
xor
inc
mov
jmp
inc
adc
jg
ja
out
insl
add
not
das
sbb
movsb
xchg
test
pop
add
stos
nop
sub
push
loope
cld
lret
loopne
sub
inc
sti
adc
add
xlat
add
lahf
loop
xchg
bound
jg
test
add
mov
pushf
mov
push
int
insb
sbb
pop
dec
clc
jle
jno
push
ljmp
icebp
inc
js
aas
cmp
filds
push
loopne
xchg
push
sub
iret
pop
test
pop
ljmp
xchg
mov
addr16
fildll
xchg
add
mov
pop
jl
mov
xchg
aaa
and
jae
outsb
cmp
adc
fs
mov
push
test
jb
add
sbb
mov
adc
icebp
push
lret
cmp
int3
sub
adc
xchg
dec
ja
movsl
out
iret
push
xchg
gs
add
xchg
lds
xor
jae
addr16
xchg
jp
iret
push
inc
dec
jno
sar
outsl
int
add
inc
pop
cwtl
aad
rcrl
add
decl
ss
es
mov
adc
ret
fimull
adc
sub
mov
outsb
shll
sub
cmp
loop
and
jae
pop
in
leave
pop
clc
or
cmc
push
xchg
sarb
inc
xor
add
adc
jl
ljmp
rcrl
out
lock
sub
js
dec
stos
mov
inc
pop
pusha
ds
sbb
mov
imul
and
cmpsl
popf
jbe
mov
aaa
pop
and
call
in
mov
pop
fisttpll
pushf
into
leave
dec
fists
movsl
jg
or
mov
shl
sub
mov
insb
ljmp
xchg
ja
and
mov
or
push
pop
in
jg
repnz
movsl
ljmp
or
hlt
cmpsb
adc
shl
les
outsl
scas
sbb
jne
push
or
adc
gs
lea
pop
xor
int3
mov
or
call
lahf
jbe
loop
pop
fbld
mov
hlt
adc
ja
jg
test
pop
sbb
ror
jno
jle
or
fwait
pusha
push
sub
add
decl
nop
outsb
jbe
enter
push
les
jg
dec
cwtl
fdivr
movsl
jg
pusha
jmp
jmp
pusha
cmpsb
xchg
movsl
and
sub
loope
push
les
clc
xlat
sti
jg
decl
es
mov
push
adc
xchg
dec
decl
jg
adc
xchg
insb
leave
mov
dec
dec
or
sub
sbb
aas
jo
fsubl
addl
loop
inc
or
inc
pushf
mov
adc
inc
insb
lock
mov
pusha
push
mov
fildll
push
out
pop
rolb
ss
mov
cmpb
cmc
repz
xor
movsl
lcall
mov
lock
call
inc
enter
add
ljmp
std
xchg
das
mov
cmc
mov
push
fdivrs
jns
sub
rorb
or
pop
incl
mov
or
push
jmp
outsl
ret
jmp
std
add
inc
sub
std
int
pop
pushl
cli
jno
jp
or
and
jns
js
inc
and
push
pushl
add
sti
xchg
sub
movsl
cltd
int3
add
jp
aas
fistps
pop
adc
out
adc
cmp
mov
arpl
loope
ljmp
jne
dec
repz
mov
test
pushl
adc
sbb
pop
fildll
mov
push
out
sti
mov
inc
iret
popf
pop
inc
mov
orb
orb
pop
das
rcll
out
jns
xor
hlt
leave
push
mov
pop
js
nop
mov
cli
push
inc
jmp
and
movsb
outsl
bound
cmp
cmp
ljmp
lds
mov
push
adc
loopne
arpl
loopne
jmp
hlt
sub
les
in
aaa
sbb
rclb
or
cs
bound
ljmp
inc
outsb
jnp
push
shlb
test
xor
lods
cmp
pop
out
aaa
pusha
int
lcall
aaa
lods
cmp
pmaxub
push
pop
and
inc
fisttpll
ljmp
or
scas
push
mov
ds
movsb
or
mov
xchg
xor
icebp
gs
mov
pop
pop
enter
mov
lock
pushl
clc
pushl
and
ret
cmp
dec
fsubr
lret
xlat
jne
andb
stos
sbb
add
js
incl
sub
mov
and
or
jmp
add
pushl
stos
and
lcall
cmp
jecxz
add
inc
stos
xchg
pushl
sub
adc
iret
nop
and
dec
adc
pushl
js
adc
loope
outsb
inc
ret
aad
cld
mov
nop
arpl
scas
jmp
xchg
inc
sub
jbe
xor
push
adc
xor
xchg
jns
test
sub
mov
pop
sbb
cmpsl
in
cs
sub
bound
sti
aad
cld
jmp
es
nop
push
push
add
dec
mov
fsubs
sbb
pop
pop
clc
decl
push
mov
xchg
cmp
leave
jp
mull
movsb
addr16
lcall
jmp
mov
ret
in
inc
jge
jmp
lcall
and
jno
push
sub
test
insb
or
xchg
xchg
loopne
mov
mov
inc
rol
aaa
clc
push
into
movaps
adc
sbb
push
inc
sbb
fs
mov
mov
sbb
bound
xchg
shll
xchg
and
mov
pushl
inc
ja
add
rorl
jmp
jl
adc
push
mov
xorb
or
int3
cmc
icebp
insl
outsb
sub
lea
cmp
mov
and
dec
lcall
orl
fwait
mov
pop
fadds
mov
bound
cmp
fnsave
pop
cmp
cmc
push
lods
icebp
jg
ud2
adc
mov
testl
ret
xor
ljmp
dec
shrl
cltd
xor
mov
add
inc
faddl
or
mov
outsb
arpl
mov
mov
pop
jg
sub
mov
mov
push
cmc
fiaddl
or
mov
test
pushf
les
outsl
icebp
call
mov
mov
inc
push
push
mov
rcrb
icebp
fucomip
dec
cmp
popa
in
or
mov
imul
xor
lcall
jge
pop
in
xchg
add
sbb
stc
je
ljmp
inc
mov
cmp
nop
inc
pusha
aad
xchg
mov
dec
inc
call
decl
stos
push
and
aam
xor
inc
js
insb
sbbl
sbb
xchg
repz
jge
adc
jne
lcall
lret
sarb
jp
mov
pusha
les
xchg
dec
lock
pop
fadds
outsl
insb
jle
mov
sub
xchg
lock
cmp
sbb
cli
push
nop
pop
js
dec
push
pop
shll
mov
arpl
dec
std
test
incl
mov
cwtl
test
xchg
ja
loop
jb
adc
sbb
lods
mov
adc
xchg
repnz
jg
dec
ljmp
xchg
adc
loop
or
jecxz
inc
jns
lods
lods
mov
outsb
adc
lcall
daa
jge
arpl
cmpsl
or
loopne
jle
sub
and
mov
shrl
and
and
in
test
sub
lods
movsl
fs
into
inc
pop
aam
leave
add
bound
add
js
mov
sbb
stos
inc
jno
out
subl
mov
jne
mov
in
ud1
lods
jmp
fldenv
xor
mov
mov
loope
mov
call
enter
xor
pop
arpl
loop
mov
jnp
xor
add
mov
call
mov
mov
loopne
push
pop
jmp
mov
xchg
sbb
adc
dec
push
or
in
push
adc
xlat
or
mov
scas
jnp
cmp
ljmp
lock
ljmp
mov
loop
test
push
pop
pop
xor
cld
cli
sub
push
dec
push
mov
cmp
sbb
and
call
call
sub
adc
test
and
xchg
pop
sti
lret
add
mov
sub
add
adc
popa
sbb
incl
inc
adc
test
inc
aam
mov
lahf
pop
xor
jp
fs
dec
jecxz
xchg
lret
xchg
or
push
or
adc
movsb
addr16
dec
mov
lds
clc
js
mov
mov
cmc
je
dec
cli
adc
inc
pop
and
decl
scas
out
mov
enter
out
popl
sbb
negl
pop
xor
or
std
lods
sub
mov
lds
sbb
and
pushl
andb
je
mov
jb
imul
hlt
out
mov
inc
sahf
rcl
outsb
xor
pop
xchg
out
xlat
push
xchg
es
mov
scas
test
dec
stc
pushl
nop
cmp
sub
push
lret
mov
in
dec
push
push
jae
xor
mov
mov
subb
icebp
jne
xor
and
call
and
ljmp
std
fwait
lds
pop
dec
or
arpl
push
mov
movsb
jns
xor
sub
ds
outsl
lock
pop
xchg
xchg
jmp
dec
mov
fiaddl
pop
add
and
data16
call
lods
into
or
mov
add
je
pusha
mov
daa
fucomip
lcall
mov
and
lahf
imul
xchg
jg
incl
xor
repnz
shlb
int3
out
pop
sbb
fstp
clc
add
mov
sti
das
sub
jg
sbb
out
fs
aaa
pushw
lea
pop
fwait
jge
mov
lcall
jmp
out
ja
fsubl
test
sbb
pop
adc
std
enter
ret
adc
pop
cs
call
call
mov
pop
jo
inc
xor
sub
test
inc
lods
leave
lcall
ret
fbld
jb
adc
fistpll
in
adc
fdivrp
popa
les
loope
stos
ljmp
cmc
pop
pop
aad
and
test
je
jge
loopne
lcall
jge
push
pop
clc
sbb
mov
cld
std
dec
jns
xchg
andb
hlt
loopne
jbe
push
jmp
outsb
les
fmull
sub
pop
jl
and
ljmp
icebp
inc
out
mov
sbb
lcall
arpl
dec
adc
jne
mov
add
shr
pop
es
insl
lcall
inc
bound
adc
in
std
xor
and
xlat
inc
sbbb
rcrl
lock
dec
mov
rclb
std
ljmp
mov
lret
or
dec
icebp
cli
lret
jle
adc
push
mov
jp
es
add
jno
cmp
in
sbb
and
fdivrl
sub
xchg
adc
dec
test
in
faddl
xchg
dec
std
ljmp
pop
shll
sbb
cmp
pusha
cltd
cmp
xor
decl
inc
mov
lret
sub
lret
pop
bound
jb
rclb
call
pop
sahf
dec
or
inc
mov
adc
jmp
arpl
shll
xchg
add
jo
outsl
call
outsl
fists
sbb
mov
cmp
cmpsl
sbb
dec
mov
inc
sbb
nop
stc
mov
dec
ljmp
and
xchg
sub
and
pusha
mov
dec
int
pushl
das
sahf
sub
test
stos
enter
stos
aas
pop
push
add
sti
jns
inc
jmp
out
mov
or
inc
dec
xor
push
shlb
inc
xchg
sbb
xchg
push
dec
mov
mov
adc
addl
movsl
decb
inc
shr
aaa
xor
aam
jecxz
mov
or
push
dec
inc
cmp
addr16
pop
xlat
cld
lea
call
ljmp
out
ret
and
popa
jecxz
push
ret
jmp
dec
cmp
cltd
jle
addl
mov
jl
push
cmp
je
cmpsl
adc
fstl
or
adc
jle
es
push
jle
jp
movsl
mov
hlt
fldt
pushf
lret
mov
jg
mov
mov
rcr
int3
dec
clc
jmp
jo
sbb
pusha
in
cmp
mov
inc
imul
cmc
jge
mov
or
inc
xor
xchg
push
outsl
fists
stos
lods
sbb
lcall
xchg
lods
icebp
testl
sub
adc
mov
push
fists
mov
adc
adc
add
jg
icebp
aam
add
xchg
and
rcrl
sub
xorb
pop
in
loopne
les
adc
aaa
arpl
fistpll
sbb
insl
mov
cmp
mov
not
xchg
movsb
add
add
mov
jbe
outsl
jo
pop
ja
mov
adc
popa
imul
jo
in
mov
jbe
mov
shlb
jae
or
in
mov
popf
ss
jle
jne
mov
mov
dec
xchg
xchg
popf
inc
mov
mov
dec
sub
push
js
dec
cmc
mov
dec
fs
mov
test
das
cmpsb
mov
xchg
adc
push
push
xchg
and
mov
icebp
fisubrl
sub
pop
inc
xchg
xor
xor
mov
dec
pop
imul
cmp
cmpsl
xchg
pop
mov
jno
int
mov
push
dec
jmp
cld
mov
and
shrb
in
push
push
cs
repz
xchg
jno
incl
jle
inc
xchg
in
xor
imul
or
or
pushf
push
clc
dec
or
dec
ficompl
mov
fdivrl
mov
incl
cmp
mov
add
int3
div
push
leave
sub
add
inc
gs
pop
pop
loopne
mov
ret
lods
mov
incl
inc
stos
inc
lea
mov
mov
mov
ds
sbb
fs
jmp
mov
xchg
pop
cwtl
daa
cmpsl
pop
pop
cmpsl
jle
outsb
mov
xor
adc
inc
imul
addr16
push
mov
lock
cmp
in
decl
adc
jno
xchg
ja
push
cltd
pop
inc
jns
push
lret
xchg
inc
mov
mov
lods
arpl
pop
jge
mov
jecxz
aam
mov
sar
clc
push
jge
cmp
int3
push
adc
jo
mov
push
repnz
cltd
call
cwtl
adc
aas
xlat
in
in
lar
fcmove
cmp
and
sbb
pop
xchg
nop
stc
push
ljmp
cli
imul
repz
push
mov
lock
inc
lcall
call
push
or
xchg
fnstenv
loop
mov
ds
imul
jg
sarl
cmp
push
push
outsl
xchg
cwtl
add
and
inc
dec
popa
scas
inc
call
movsl
adc
pop
ss
ljmp
or
aam
shrb
xor
or
push
loope
and
pop
jns
jno
push
cmp
inc
lock
pop
jno
add
gs
mov
mov
mov
add
fldt
arpl
lret
mov
xchg
incl
cld
sub
xchg
sbb
dec
dec
into
adc
jp
insl
ja
add
out
shl
push
mov
int
mov
aaa
mov
sbb
movsl
pop
mov
xchg
sbb
imul
mov
fildl
mov
dec
inc
mov
dec
repnz
pop
leave
call
add
enter
push
popf
push
dec
jns
mov
pop
ljmp
xchg
lret
bound
shlb
ds
xchg
fsubrp
daa
cltd
or
pop
loopne
test
inc
sub
inc
mov
rcr
loopne
xchg
outsl
or
stc
dec
and
adcl
lds
push
sarl
lods
xor
incl
imull
push
cs
mov
xor
loop
jns
mov
jne
xlat
sub
mov
and
fs
jbe
and
dec
cmp
fists
xor
pusha
mov
mov
jmp
aad
push
or
push
pop
dec
dec
pusha
mov
test
xlat
call
pusha
addr16
daa
shlb
and
jge
in
cld
rorl
mov
and
lcall
pop
mov
sub
mov
aam
inc
call
daa
cmc
pushl
jae
mov
pop
std
test
movsb
xchg
enter
or
jne
xchg
sbb
xchg
inc
sub
jmp
add
ret
sub
dec
dec
dec
mov
mov
mov
dec
mov
xlat
jmp
lret
out
mov
cmpl
rol
jg
loopne
inc
mov
stos
mov
xor
inc
sbbb
push
into
stos
inc
test
lock
sbb
test
pop
subl
in
jg
mov
sbb
mov
xor
subb
jo
jmp
daa
pop
xor
lea
and
lcall
das
lods
pop
mov
xor
insb
in
jnp
jo
jbe
and
ljmp
aaa
inc
push
in
call
pop
imul
sub
and
cmp
pushl
or
sbb
fstl
dec
popa
inc
adc
orb
jg
mov
ds
sahf
mov
push
push
inc
imull
fwait
mov
pop
test
outsb
test
or
lock
comiss
add
and
shll
inc
xchg
add
sub
in
test
fstps
cwtl
test
test
pop
mov
push
jmp
push
scas
out
xor
fistl
repnz
movsl
cmp
sbb
fmuls
xor
or
and
dec
lea
jmp
sbb
pusha
and
iret
sbb
xor
cmc
fdiv
aaa
clc
cmp
fxch
insb
ds
cs
lods
outsb
cmp
sar
pushl
movsl
js
mov
mov
dec
dec
inc
sbb
addl
jl
add
dec
or
stc
push
xchg
adc
dec
pop
push
aaa
pushf
outsb
push
fisttpll
pop
sbb
jmp
sahf
fmull
leave
or
xor
sub
rorl
mov
dec
cmp
dec
out
decl
outsb
lods
xchg
xor
in
sub
shl
in
call
shrl
pop
add
sbb
incl
lret
stc
repnz
flds
xchg
ficompl
incl
inc
popa
ret
out
jmp
test
iret
popf
fisttpl
xchg
imul
cmpsl
sub
jbe
out
jno
loop
push
cmp
adc
loope
mov
push
add
xchg
push
aad
test
nop
ja
mov
push
and
mov
mov
das
and
cmpb
int
adc
push
lcall
xchg
cli
popa
ja
sub
mov
aam
mov
mov
lods
adc
bound
imull
test
jg
int
jae
xorb
jp
cmp
sub
dec
mov
lock
incl
inc
cmp
mov
shlb
pop
adc
or
outsl
cmp
inc
xor
loop
pop
es
jp
jo
hlt
pushl
imul
out
mov
mov
adc
mov
call
mov
gs
and
and
mov
shrd
jg
add
mov
and
pop
cwtl
adc
lea
cld
sbb
cmc
outsl
testb
sub
or
adc
mov
ljmp
outsl
es
mov
push
push
add
cmpsb
in
and
arpl
stos
das
pop
inc
mov
das
hlt
pop
cli
mov
mov
and
in
or
fs
jg
adc
sub
fs
lock
xchg
mov
dec
add
cs
sub
sub
xorl
push
sahf
dec
inc
loope
clc
stos
ljmp
and
and
add
dec
add
fistps
in
jbe
lcall
push
sub
or
add
outsl
push
scas
subl
adc
and
sbb
das
push
jmp
addl
sbb
xchg
cmp
mov
add
sbb
test
jle
lret
jg
mov
test
imul
icebp
test
enter
inc
addb
push
xor
test
ljmp
or
mov
inc
int3
sub
dec
push
mov
iret
jne
arpl
jp
call
clc
iret
add
sbb
pop
fcmovbe
pop
or
add
mov
xlat
dec
push
inc
call
mov
cmp
stos
insl
xlat
test
test
adc
call
mov
out
mov
nop
cltd
mov
inc
arpl
jns
fistpl
std
mov
testb
sbb
jo
sbb
ds
push
inc
dec
sub
adc
mov
out
sti
in
mov
xchg
sub
cmp
cs
nop
or
call
xchg
imul
mov
in
rcrl
fistps
rorb
lcall
roll
or
sub
mov
jo
sub
ficoms
es
jg
call
pop
pop
cld
lods
xchg
mov
out
xchg
movsl
dec
adc
std
dec
push
xchg
cmp
mov
repnz
adc
incl
gs
mov
fldt
fcoms
lahf
in
and
xchg
in
and
xor
xor
in
sti
addl
ffree
lret
add
dec
repz
xor
add
ret
jmp
std
sbb
pop
push
pop
adc
dec
push
lcall
push
mov
cs
xor
test
and
pop
sub
and
add
xchg
mov
and
fwait
cmpsl
xchg
in
outsl
icebp
mov
insb
jge
adc
or
loope
lock
fwait
add
xor
decb
mov
adc
pushl
xor
jno
and
mov
xchg
jbe
add
movsb
mov
les
mov
fdivrp
filds
cltd
rcl
push
lahf
daa
pop
in
jecxz
stos
and
mov
sbbb
mov
sbb
ret
clc
mov
pop
pusha
add
mov
decl
sahf
fldl
inc
mov
mov
add
pop
xor
popa
shll
incb
xor
roll
mov
lcall
add
dec
add
dec
leave
outsb
adcl
incl
push
sub
sahf
pusha
sahf
inc
sub
mov
dec
add
inc
mov
sub
adc
fnstsw
xor
add
jb
movsl
popa
adc
adcb
lock
pushl
mov
adc
jmp
mov
sbb
ljmp
xchg
dec
dec
xor
pop
inc
dec
sarb
or
negl
decl
lret
jno
dec
push
leave
popf
call
into
and
test
lea
das
icebp
mov
lods
jb
data16
inc
enter
sub
pop
lret
inc
incl
inc
hlt
dec
cmpsb
popf
std
scas
sub
pop
dec
test
cmp
cmc
sub
decl
shll
inc
xor
popf
dec
xor
inc
test
lret
popa
adc
pop
xorl
pushl
sub
xor
dec
ljmp
xchg
mov
shrl
loopne
ljmp
and
jno
mov
mov
popf
shlb
xor
cltd
pop
mov
mov
mov
cmp
mov
ljmp
cmc
ljmp
cmp
int
leave
and
push
adc
jg
jmp
adc
stos
neg
shll
dec
and
and
shrb
pop
ljmp
inc
fldl
push
dec
push
movsb
loop
pop
stos
or
jp
rcrb
inc
and
lret
xor
adc
shrl
repz
imul
ret
or
push
pop
popa
test
js
lods
mov
mov
push
lock
xor
dec
cmp
fs
jmp
es
mov
int3
xchg
and
pusha
dec
push
dec
mov
pop
push
imull
cmpsb
gs
or
pop
hlt
add
xchg
lret
das
fldl
pushf
jp
fbstp
les
add
cmpl
cmovo
repnz
add
loope
jg
popa
dec
lock
popa
push
js
mov
jg
ss
mov
or
dec
mov
out
outsb
push
or
call
xchg
cs
shll
cs
dec
fnstsw
insb
divl
jg
dec
mov
jl
jmp
mov
mov
fcomps
pop
sbb
sub
and
ja
leave
test
test
jae
cmc
cli
mov
aas
xor
lods
adc
sarb
or
fdiv
pop
std
mov
out
push
xor
or
test
outsl
xchg
xor
data16
sub
xchg
daa
jno
pop
lods
and
jecxz
sbb
push
popf
mov
data16
dec
mov
subb
sub
ja
xchg
pop
pop
xor
call
incb
or
dec
ficoml
and
and
push
enter
or
fcmovnu
clc
incl
pop
mov
jb
or
jbe
sub
insb
pop
fsubp
cli
inc
and
mov
les
push
aaa
fistpl
movsb
cwtl
andb
dec
rorb
dec
incl
pop
pushf
std
fnstcw
incl
or
xchg
push
jg
shrl
lahf
sub
jmp
mov
das
icebp
outsl
sub
scas
lahf
sub
cmc
jb
scas
mov
call
paddw
icebp
lahf
std
out
push
push
mov
push
in
mov
sub
insl
inc
mov
jo
jbe,pt
ds
jp
sbb
ljmp
mov
or
xchg
jmp
mulb
add
outsl
hlt
mov
add
xchg
mov
jmp
decb
decl
xorl
jg
push
adc
loopne
adcb
notl
outsl
sbb
mov
lahf
xchg
insb
int
fildl
rcl
inc
inc
jbe
push
dec
sub
ja
push
mov
out
insl
into
mov
ds
out
nop
out
or
out
repz
fildll
rorl
cmp
jnp
jns
pop
pop
or
sti
pop
jnp
stc
push
movaps
das
stos
lods
jmp
test
xor
scas
pop
pop
jg
or
out
xchg
clc
pushl
pop
cld
add
hlt
mov
and
clc
lds
dec
call
std
sbbl
f2xm1
push
int3
incl
mov
dec
decl
add
loope
add
sub
or
push
std
jne
mov
inc
aas
sbb
movsl
shrl
hlt
xchg
je
ljmp
outsl
mov
mov
mov
push
aas
adc
decb
dec
popf
dec
std
ljmp
pop
pop
push
cltd
cli
aam
out
popa
cmc
sar
std
lcall
scas
dec
add
pop
dec
push
ljmp
pushl
pop
pop
pop
dec
lcall
test
sub
pop
incl
pushl
pop
sar
pop
push
pusha
mov
push
leave
out
jb
js
call
mov
incl
xchg
loope
mov
leave
push
jmp
add
pop
out
xchg
lds
pop
cmpsb
mov
mov
pushf
fistpl
inc
xor
fcompl
addr16
hlt
add
ljmp
mov
cmp
stc
cmp
jg
aas
mov
scas
cmp
cmp
std
ja
jns
filds
fisttps
mov
aas
divps
stc
mov
fistpll
std
das
cld
inc
add
daa
test
test
push
mov
push
addr16
mov
out
fistps
sbb
cli
jl
cmpsb
cmp
nop
insl
sar
in
shl
push
pop
jnp
pop
jle
dec
pushf
andl
or
fsubrl
test
jg
sub
ljmp
cmp
cli
cmp
lea
mov
fistl
das
hlt
lahf
or
cmp
stos
call
mov
cli
jne
sar
ret
xor
inc
add
call
mov
dec
aas
push
pop
push
jp
adc
inc
mov
mov
sbb
cmp
pop
pushf
mov
pop
fisttpl
sub
jg
sbb
inc
mov
jmp
sar
out
inc
jp
repnz
out
mov
repnz
mov
popl
jo
push
sbb
inc
add
out
and
push
clc
pop
pop
pop
add
dec
lods
mov
pop
adc
das
clc
cli
xchg
pop
aad
cmp
addl
cli
call
mov
cmpsl
mov
cli
shrl
ret
and
leave
in
aas
jmp
lock
mov
inc
mov
sbb
mov
jl
fnstsw
push
jl
idiv
and
add
pop
lcall
sti
mov
pmuludq
incb
ljmp
jle
insb
aaa
adc
mov
dec
or
jg
mov
push
fs
xor
incl
in
iret
cmp
inc
popa
pusha
sarl
cmp
sbb
clc
lods
cs
push
push
mov
jmp
sarb
jmp
jle
out
fisubrs
call
hlt
and
jg
mov
pop
or
aad
jmp
add
and
icebp
and
cld
idiv
jmp
scas
xor
inc
pop
outsb
mov
es
fbstp
adc
ljmp
call
dec
daa
pop
les
or
mov
pop
sbb
cld
decl
pop
mov
loop
add
mulb
inc
jae
ret
sar
push
shrb
in
sar
jle
sarb
mov
mov
jmp
inc
insl
xor
sti
movsl
out
fmul
mov
lahf
mov
inc
sbb
cmp
xor
enter
inc
mov
inc
cld
daa
clc
fstpl
popl
mov
decb
add
fwait
cmp
add
jnp
cs
test
jo
inc
insb
adcb
cmp
andb
ja
pop
sbbb
push
loopne
mov
aam
mov
mov
rorl
outsl
mov
ljmp
idivb
fildll
push
jb
or
mov
cmp
imul
cmp
push
push
in
push
inc
cmp
lods
push
mov
mov
in
dec
mov
aam
inc
xor
loopne
mov
inc
or
xchg
sbb
das
inc
fdivr
lcall
filds
call
lods
ds
sbb
iret
dec
test
add
call
outsl
pop
and
xchg
dec
mov
jb
nop
or
das
dec
imul
stos
jle
and
jmp
incl
rcrb
mov
cmpl
fisubl
jle
iret
cmc
jge
sbb
aad
in
mov
push
imul
sub
adc
js
xchg
cmp
lods
jo
gs
xor
out
jg
test
jp
mov
in
jnp
ds
mov
or
andb
aas
call
fnstsw
in
push
daa
jg
pop
xchg
scas
pop
jg
jecxz
pop
pushl
mov
roll
icebp
pop
sti
lahf
scas
inc
mov
scas
adc
add
dec
mov
push
jns
mov
jg
add
sbb
into
test
std
push
pusha
shll
cld
sar
loop
sbb
jg
adc
out
idiv
cmpsb
pop
mov
scas
mov
popf
pslld
ljmp
fstpt
mov
outsl
hlt
push
dec
push
stos
push
jle
xchg
push
clc
ja
jg
jg
xchg
lds
rol
out
jmp
add
mov
pushl
mov
sbb
mov
test
out
push
adc
or
xor
xorl
lods
fdivr
mov
test
pushf
dec
loop
pop
dec
aas
addr16
mov
incl
ljmp
or
aas
enter
testb
call
jb
std
mov
pop
mov
mov
jg
ds
push
in
sbb
adc
mul
xchg
cmp
jne
icebp
dec
rcl
clc
stc
stc
lret
lahf
stc
daa
std
push
mov
iret
or
cld
push
addr16
mov
ret
inc
mov
cmp
ret
loopne
pop
std
mov
add
mov
dec
sbb
fnsave
incl
shll
outsl
lock
inc
and
fdivs
por
jg
pushl
mov
incb
mov
cmp
xabort
dec
in
call
das
cld
push
daa
cmp
test
gs
outsb
mov
jbe
sbb
jg
sti
lcall
decl
popa
jle
stos
pushf
ret
test
inc
and
rcr
jmp
call
jno
pop
adc
mov
out
outsb
fidivs
sub
sub
jg
aad
aam
test
jg
int3
aas
dec
pop
dec
scas
sub
std
decb
decl
lock
xor
sub
lds
dec
mov
imul
and
out
mov
stc
mov
das
divb
push
and
out
jg
mov
imull
pop
addr16
cmpl
adc
add
cltd
rorl
mov
decl
lock
xlat
in
movl
ljmp
pop
jg
add
jecxz
pop
mov
lahf
sahf
cmp
cmp
or
xor
loope
fldt
fldl
cmpsl
jge
das
jp
jecxz
lods
jg
aas
imul
add
icebp
dec
sub
xor
sbb
and
mov
jecxz
das
iret
adc
ja
std
out
fisttpll
incl
mov
and
insb
mov
lahf
add
mov
or
out
pop
sub
xchg
dec
cld
in
sbb
jle
jne
xor
jg
idiv
xchg
clc
mov
fwait
clc
stos
mov
xchg
lods
push
pop
flds
cld
mov
testl
mov
incb
in
js
cmp
pop
cld
movsl
shrb
sti
enter
fstpt
mov
movsl
or
xchg
leave
adc
fdivrl
mov
mov
in
jg
loope
mov
stc
test
sti
cwtl
fdivl
pop
sub
pop
jns
cmpsl
aas
ja
fmull
cmp
sbb
xchg
fnstcw
std
sarb
rcl
shr
imul
sbb
repz
and
movsl
sub
jecxz
pop
jle
mov
hlt
jg
xchg
cli
mov
popa
jns
cli
pop
std
xchg
cmp
pop
in
xor
inc
jge
sar
call
pop
mov
jnp
jle
clc
cmp
in
fwait
jnp
ret
sub
aas
push
mov
into
and
ljmp
leave
xchg
aaa
xor
lds
scas
xchg
adc
loop
test
lods
out
push
sub
add
pop
cmp
push
call
push
lods
ror
ret
mov
outsl
mov
jl
inc
stos
mov
cmc
inc
scas
lret
outsl
dec
addr16
gs
xor
add
pop
loop
fsubrs
shrl
mov
call
jle
push
push
dec
sub
or
add
dec
push
or
inc
iret
or
pop
xor
pop
ljmp
scas
mov
addr16
negb
dec
into
xor
push
jge
cli
ljmp
sahf
dec
adc
xor
sahf
outsb
ja
les
inc
loope
fucomi
jmp
pushl
ljmp
push
inc
hlt
dec
sub
popf
jo
int3
cli
mov
jle
cwtl
lods
loop
mov
jae
testl
movswl
mov
sar
arpl
mov
leave
dec
out
jb
add
xchg
xor
or
jg
and
sub
shrb
sbbl
jmp
pop
xchg
sub
jle
push
or
loop
xchg
add
mov
add
cs
ljmp
pusha
fdivrl
lods
pop
sbbl
movsb
das
aas
mov
mov
lea
mov
icebp
dec
jge
adc
xor
mov
call
ret
cmp
scas
testl
push
leave
jae
aam
nop
lds
outsl
pop
clc
fildl
push
sub
ss
sub
loope
and
call
mov
or
lds
jl
or
in
or
cld
lcall
push
adc
inc
into
lret
adc
push
cmp
iret
stos
fidivrs
dec
lahf
in
pop
sub
js
xor
cmp
pop
in
jmp
push
loope
js
rorl
pushl
cli
add
cmc
mov
out
xor
jne
jecxz
icebp
ljmp
push
push
aaa
shl
nop
xor
sub
call
ljmp
imul
into
xlat
sub
cmp
movsl
dec
sub
cmp
ret
test
aam
sbb
mov
sub
pop
jnp
and
icebp
add
idiv
jmp
sar
dec
std
scas
xchg
pusha
jns
sbb
mov
addb
pushl
ja
mov
xchg
inc
xchg
xor
js
lcall
std
outsl
in
mov
shl
cmpb
dec
dec
inc
movsl
jecxz
adc
das
pop
call
mov
sub
cli
pop
test
inc
fists
sbb
pop
jns
jmp
cmp
pop
outsb
jno
pop
scas
and
jmp
aaa
cmp
test
mov
sub
imul
decl
pop
xchg
dec
scas
sbb
xor
test
and
jecxz
ljmp
push
mov
pushf
mov
lock
imul
sar
xchg
sub
xchg
mov
adc
dec
fcomip
sub
leave
mov
xchg
xchg
push
pushf
fwait
pop
aad
lret
rcrl
mov
ljmp
mov
sub
xchg
popa
jge
leave
mov
and
pop
inc
mov
into
loopne
cli
inc
xor
ja
mov
or
fistpll
iret
adc
aad
in
outsl
std
push
pushf
mov
add
cmp
dec
pop
xchg
xchg
jecxz
sbb
mov
pop
call
mov
push
cli
adc
insl
movsl
in
adcb
adc
cmp
lret
xor
jns
lods
decl
or
adc
xchg
and
or
or
push
jne
ret
ljmp
std
call
mov
scas
cmp
mov
addr16
jp
mov
jae
test
in
scas
pushl
clc
js
push
sub
lret
sub
and
outsb
cli
data16
pushl
shrb
notl
pop
or
inc
xchg
inc
sub
out
ds
push
pop
incl
dec
push
xchg
ljmp
pop
sahf
push
xlat
dec
jno
push
aas
sarb
stos
nop
mov
push
dec
cld
repz
add
mov
sarb
mov
lds
jbe,pn
adc
lcall
ljmp
ljmp
mov
les
ljmp
stc
and
xchg
sub
out
out
rorl
xor
in
inc
int3
lock
cli
xor
lods
cltd
xor
das
icebp
call
jnp
pop
adc
jecxz
mov
jmp
push
pushl
xor
fimull
and
cmpsl
mov
lods
scas
outsl
mov
pop
dec
lds
inc
adc
sub
or
mov
xor
xchg
lods
sahf
push
push
sahf
mov
and
sahf
mov
into
cld
aaa
fisubrl
and
pop
sub
addr16
pop
bound
ljmp
out
popa
testb
or
imul
jp
inc
repz
xchg
fbld
mov
ss
jl
out
jmp
mov
jle
push
in
icebp
repnz
adc
test
mov
loop
fnstenv
lret
sbb
test
dec
or
dec
inc
mov
lcall
shrb
mov
sub
push
mov
adc
ljmp
adc
lret
pop
and
jg
inc
sbb
pop
xchg
cmpsl
add
out
mov
sub
scas
pop
and
out
sbb
repz
call
jmp
iret
and
into
shr
ret
jo
cld
loop
xchg
sar
cld
lcall
test
jecxz
sub
cmpsl
das
xchg
pop
mov
aas
mov
sub
jmp
pop
jne
xchg
cmp
dec
pushf
jmp
aam
fsubl
sub
dec
xchg
pushl
pop
xchg
inc
sbb
stos
je
repnz
in
mov
fs
jg
shlb
scas
xor
ficoms
out
lcall
ljmp
push
and
lods
and
loope
aad
and
mov
mov
insb
sub
xchg
insb
fs
pushl
pop
aas
mov
jp
es
add
sub
mov
in
data16
push
arpl
pop
cld
pushl
jg
xchg
mov
mov
pushl
lret
pop
std
mov
cmp
out
mov
jb
aaa
pop
ljmp
iret
cmpsb
gs
push
fs
xlat
cwtl
push
enter
inc
lret
das
cmp
in
andl
dec
out
dec
subl
fs
dec
xor
xor
shl
movsl
mov
jmp
jae
std
pop
push
sub
sbb
lods
mov
pushl
sbb
mov
repz
sti
cmc
mov
mov
lods
pop
clc
mov
fcos
xchg
arpl
mov
mov
pop
or
lcall
jl
cmp
push
out
out
xchg
pop
mov
jb
mov
lods
mov
and
and
lret
ljmp
pop
mov
in
inc
inc
mov
xchg
pop
or
aam
dec
std
dec
pop
cmp
mull
mov
push
incl
and
test
mov
and
xchg
push
pushf
mov
mov
jge
mov
fs
hlt
aad
scas
adc
popf
lcall
sbb
push
lea
xchg
cmp
jne
pushf
out
clc
out
mov
mov
push
fbstp
pop
es
push
movsb
daa
add
pusha
xchg
mov
outsl
cld
fistpll
stc
adc
cli
pusha
add
js
call
xchg
mov
cltd
xchg
dec
jmp
mov
sbb
cmc
lcall
and
in
in
iret
pushf
mov
mov
addr16
inc
movsl
imul
out
inc
pop
mov
inc
jnp
xchg
lock
xchg
ja
mov
inc
lcall
cld
mov
xchg
je
cltd
daa
out
incl
mov
push
jmp
dec
dec
aam
aaa
fldenv
insl
lret
and
les
jb
push
add
stos
out
enter
cmp
xchg
loopne
sbb
jl
fdivrp
mov
outsl
mov
push
sub
mov
dec
add
jnp
fidivs
jg
and
inc
inc
hlt
outsb
xor
push
out
daa
xor
ret
sahf
int
jp
test
jne
imul
outsb
inc
mov
inc
jnp
aaa
outsl
nop
test
push
sti
mov
cmp
ja
push
stos
fwait
pop
test
and
jl
pop
sub
decl
or
out
in
or
scas
addr16
mov
xchg
lock
outsl
outsl
test
hlt
lcall
sub
xchg
push
cmp
stc
sbb
insb
mov
decl
adc
jg
jge
dec
popf
sbb
dec
or
aad
jl
test
push
scas
cmpsb
clc
fmulp
inc
int3
daa
cld
pop
call
lret
and
push
inc
cmpsb
adc
clc
cwtl
jecxz
and
call
sbb
ljmp
insb
sbb
mov
ss
inc
xor
inc
jbe
xchg
jne
adcl
sub
pop
incl
xchg
scas
in
jp
fidivs
xor
inc
in
xchg
jmp
fdivl
xor
push
js
dec
adc
cld
int
je
ret
out
pop
mov
mov
inc
mov
inc
cmp
in
pop
movsb
sahf
mov
adc
push
adc
movq
punpcklwd
lcall
mov
mov
loopne
ret
push
mov
stos
pushf
fisttps
add
pop
js
test
sti
incl
lods
jecxz
and
jmp
inc
or
pop
aaa
sub
cmp
ret
cmpsl
stos
icebp
or
movsb
ficomps
fimuls
cmovg
daa
test
jg
rorl
adc
ss
loopne
add
icebp
iret
shll
mov
call
test
mov
jg
dec
push
lods
fcomps
lret
loopne
fisubrs
cmp
int
add
jmp
push
adc
das
gs
jno
loopne
fbstp
inc
or
xchg
push
icebp
inc
test
dec
cmp
pop
adc
jae
enter
jg
pop
sub
repnz
in
test
jbe
fdivl
xchg
push
xchg
stc
pushf
das
lock
fucomi
jl
sbb
jne
loope
xchg
iret
les
push
insb
mov
das
adcb
int3
pop
mov
push
aad
pop
lea
out
ljmp
cmc
mov
repz
mov
jp
bnd
hlt
sbb
pop
cld
mov
std
rcll
leave
inc
wrmsr
lcall
icebp
jl
cli
xchg
cmp
sbb
arpl
dec
ja
sti
decl
jmp
jmp
push
rcrb
js
clc
jnp
push
test
xchg
mulb
mov
push
imul
push
outsl
inc
cmpsl
fwait
in
arpl
mov
aas
mov
jno
lds
inc
int
iret
push
rcrl
xor
pop
cli
xchg
xchg
lds
dec
loopne
lea
ljmp
and
repnz
inc
cmpsb
pushl
sbb
mov
push
pop
mov
and
pop
jb
xchg
cmp
pop
pop
aam
lcall
cmpsl
jbe
push
sti
pop
pop
xor
jmp
push
stc
repz
fildll
sbb
and
popf
gs
push
sub
mov
cmc
mov
push
loopne
jns
adc
cmpsb
sub
pop
cmp
pop
mov
lea
cltd
imul
lcall
outsl
adc
arpl
out
fwait
pop
push
push
push
ret
bound
fs
adc
mov
scas
add
es
pop
iret
xchg
and
inc
push
mov
ret
pop
jb
les
loopne
cmp
inc
scas
push
lcall
mov
push
cld
int3
jb
adc
les
mov
sub
decl
clc
dec
cmpsb
push
sub
shll
adc
inc
icebp
call
in
mov
neg
gs
add
or
lcall
aas
mov
mov
mov
in
and
sub
ficompl
mov
push
pop
scas
mov
ljmp
cmc
mov
bnd
sub
jg
loope
sub
ficomps
cli
jle
test
and
jl
jbe
negb
jge
inc
sar
outsl
cld
inc
leave
sub
lcall
pushf
xor
adc
mov
ljmp
call
pop
push
mov
mov
jnp
in
add
loope
stc
jne
mov
aam
push
ljmp
pop
cmp
xchg
mov
sub
pop
out
lahf
bound
mov
or
incl
incl
pop
mov
or
cmpsb
fcomps
lret
mov
sti
lcall
inc
decb
cmpb
andl
movsb
jg
pop
repnz
ss
pop
insb
call
loopne
retw
repz
enter
subl
je
jne
testl
int
incl
mov
stos
dec
out
mov
jmp
xor
mov
inc
and
repnz
mov
pop
fidivrs
dec
outsb
push
stos
into
ret
insl
jb
mov
xor
stos
ficompl
jge
jmp
push
rclb
loope
inc
adc
mov
aaa
test
clc
push
mulb
popf
sub
dec
scas
mov
ja
fsts
xchg
adc
lea
adc
into
xor
xchg
pushf
adc
jmp
or
das
cmpsb
mov
int
jp
loopne
jp
jle
push
sub
dec
lcall
and
jb
dec
cltd
fidivrl
loopne
repnz
mov
xchg
outsl
jmp
idivb
fadd
cmp
lcall
jle
dec
cs
aaa
jae
dec
call
sbb
cmp
fdivs
hlt
fiaddl
lcall
jb
cli
push
add
das
std
incl
jg
add
mov
cmp
xchg
cmp
cmp
jge
sti
hlt
jmp
insb
stc
fstpl
jl
push
das
mov
incl
call
outsb
aam
imul
and
sbb
adc
mov
pop
out
cltd
jne
add
push
dec
imul
push
ja
add
incl
jnp
mov
pop
outsb
sbb
std
decl
adc
fildll
bound
lea
shrl
pop
je
mov
lcall
loope
out
inc
pusha
call
enter
pop
inc
movsb
mov
shrb
sbb
mov
push
xchg
sub
aam
outsb
daa
mov
hlt
and
in
cltd
mov
mov
enter
jg
arpl
fcoml
dec
aad
push
notb
gs
out
out
mov
jg
insl
dec
dec
je
lret
dec
inc
ljmp
and
pop
cli
lcall
and
rolb
out
aaa
inc
push
dec
out
fldt
or
bnd
call
cs
pusha
pop
mov
insb
xor
and
mov
push
pop
pop
insb
call
or
pop
mov
lret
pop
int
movsl
push
xor
decl
pop
mov
cmp
cmpsl
clc
jle
xor
mov
push
mov
pushf
icebp
inc
sub
cld
mov
or
sbbb
fucomip
mov
iret
cmc
fcomps
and
idivb
movsb
ds
call
inc
in
mov
and
arpl
inc
cmpsb
add
pop
inc
rdmsr
bound
in
sub
inc
jecxz
cmp
scas
stc
or
sbb
movb
ficomps
imul
iret
mov
jbe
ret
ficoml
sbb
fwait
cmc
popf
aad
loopne
jg
dec
aam
rcrl
or
ret
sbb
repz
pop
jns
ljmp
aad
es
mov
mov
or
xchg
sub
stc
scas
aaa
out
xchg
pop
ljmp
insl
pop
jae
xchg
es
jle
pusha
sar
mov
mov
mov
or
mov
sub
into
mov
pop
fists
rclb
rcr
scas
sbb
pop
and
jae
and
pushl
xabort
je
pop
mov
sbb
adc
decl
jnp
push
ret
ret
gs
std
ret
push
cwtl
fnstenv
stc
aas
push
add
mov
decl
lods
cmpsb
xchg
int3
pop
shll
aam
sahf
ja
xchg
test
push
shl
xchg
ret
mov
lret
imul
stc
inc
std
sti
dec
shll
fidivrl
xor
dec
decl
inc
inc
and
mov
orb
idiv
call
insb
addr16
jb
adc
jae
insb
inc
dec
push
mov
xor
push
cmp
sbb
incl
dec
pop
into
cltd
lds
sbb
sarb
mov
lock
sbb
lods
ljmp
mov
xor
adc
cmc
fimuls
out
ds
mov
das
jne
mov
sub
dec
lret
add
xchg
ljmp
popa
popf
push
jo
mov
sbb
int3
cli
cmc
sub
pop
movsl
cmc
jnp
dec
cli
mov
jmp
ret
inc
mov
fists
int
jmp
daa
mov
push
sub
movl
dec
jns
ljmp
lcall
stos
add
mov
arpl
repnz
cwtl
add
cmpsl
jne
pop
cs
outsb
cld
incl
pushf
repz
fdivrp
aaa
or
stos
enter
ljmp
mov
lret
jnp
and
mov
jmp
mov
cmc
dec
movsb
jnp
out
xchg
adc
mov
aam
and
xor
decl
sbb
fsubr
inc
push
popa
mov
mov
ss
in
xchg
test
gs
sub
jmp
xor
add
ljmp
add
or
stos
insb
xlat
xchg
pop
fsts
sbb
mov
mov
mov
sti
cmp
sbb
test
xchg
daa
in
loop
adc
mov
jnp
outsl
adc
fildll
stc
cwtl
push
test
xor
mov
push
pushl
cli
mov
mov
sbb
or
icebp
xchg
idivb
mov
and
mov
fucomip
call
es
sub
dec
aam
sub
or
mov
xchg
xchg
pavgw
cmpl
push
dec
push
adc
mov
mov
imul
js
pop
cli
jg
int3
push
push
jno
out
std
into
int3
sbb
xor
mov
mov
fwait
insl
je
xchg
loop
fcomip
pop
mull
fcmovnu
push
sub
addr16
cli
xchg
data16
call
pop
aas
cs
pop
push
xchg
pop
sbb
mov
xchg
pop
ljmp
rclb
outsl
jg
imul
call
jb
pop
decl
cld
jbe
popa
dec
daa
mov
jg
inc
arpl
xchg
xor
pop
clc
incl
mov
pop
dec
insb
pop
ret
mov
mov
or
decl
test
push
scas
test
xor
inc
aam
cmp
fildll
sub
ss
dec
rcrb
push
mov
into
cld
outsb
xor
in
test
pop
xor
jle
pop
mov
dec
orb
push
jg
and
jg
movsb
adc
cmp
cmp
sbb
cmpsl
add
rcl
in
clc
sub
xchg
and
jbe
push
roll
les
dec
xor
mov
cmpsl
out
and
dec
inc
out
inc
lcall
sbbl
repnz
cld
push
xchg
mov
das
insl
cmp
ja
xor
add
cmpl
lds
incl
cmp
out
mov
ds
lods
enter
cli
jp
pop
mov
lret
mov
daa
rorl
pop
movsl
pushl
clc
sub
mov
fistpl
jp
in
xchg
xorw
sbb
sbb
hlt
outsl
test
dec
inc
out
pop
ret
sbb
mov
lods
sbb
lret
clc
mov
push
fidivrl
cmp
clc
sub
ljmp
or
mov
stos
repnz
outsb
movsl
leave
fistpl
cld
mov
test
rclb
sbb
pushl
and
fs
mov
push
or
in
int
fs
cmp
and
lods
mov
int3
adc
leave
mov
in
sub
incl
and
hlt
and
jg
fnstsw
fsubs
mov
sahf
push
pop
and
popf
pop
push
call
push
stc
rol
shlb
push
jno
mov
mov
jns
push
inc
xor
das
std
decl
mov
mov
sti
pop
jnp
pop
pop
sahf
or
pop
sub
jg
pop
les
cmp
lods
and
in
inc
sbb
push
pop
sbb
das
jl
xchg
dec
sbb
cmp
leave
sbbb
in
mov
mov
cmp
stos
scas
pop
and
xorl
call
rolb
push
pusha
pop
sub
rcr
call
sub
test
imul
cmpsl
and
mov
movsl
or
icebp
scas
mov
pop
test
aaa
sub
scas
dec
or
incl
popf
sbb
mov
push
pop
and
cmpsb
icebp
pop
test
xchg
push
jg
pop
fidivl
je
dec
pcmpeqb
dec
push
mov
int
inc
xchg
pop
pop
sarl
jo,pn
cmp
jmp
or
aad
jg
mov
repnz
mov
push
xchg
sub
ss
stos
mov
pushl
cmp
repz
test
insb
cmc
das
inc
adc
and
adc
mov
dec
subb
leave
xchg
ror
paddsb
cmc
push
jnp
sbb
ret
shrb
int
cmp
xor
jecxz
pushl
sub
in
xlat
push
inc
mov
addr16
sub
mov
clc
mov
ret
clc
xor
sbb
cli
ljmp
divl
cmpsl
enter
mov
decl
adc
mov
nop
call
jae
loopne
mov
push
mov
push
fistps
arpl
mov
cmp
in
mov
pop
xchg
jle
mov
jo
pushl
xlat
fs
or
and
push
mov
pop
repz
lcall
out
cmp
push
xlat
lahf
pop
xlat
cmp
imul
inc
xlat
clc
ret
push
push
xchg
fidivrs
call
mov
xchg
jp
loop
ljmp
out
push
out
jmp
je
push
jno
sbb
cmp
push
shlb
xchg
out
leave
and
jp
lcall
mov
scas
dec
fbstp
and
mov
dec
int
jnp
mov
arpl
dec
mov
fstl
pop
push
stos
ss
insb
or
push
lahf
call
rorb
inc
push
out
mov
sbb
aam
cmp
jmp
stos
lock
pop
int3
dec
mov
adc
pushf
xchg
decl
inc
popf
and
adc
and
bound
push
mov
outsl
pusha
pop
and
cmp
rcll
pop
stc
out
jnp
stos
decl
je
push
sub
lods
les
add
loopne
pop
pop
ret
dec
fwait
xor
and
add
xor
sub
push
and
scas
mov
push
inc
lods
push
adc
loope,pt
popa
stos
push
jns
fidivrl
lods
lcall
arpl
out
mov
ljmp
mov
inc
in
jmp
cwtl
in
rcll
stc
aad
add
mov
bound
nop
xorb
dec
shrl
xchg
call
aam
jl
ficomps
arpl
out
insb
call
call
dec
mov
loope
mov
test
mov
push
popf
out
fucomip
lcall
jb
addl
push
loopne
mov
roll
decl
std
push
fwait
jle
jmp
pop
scas
cli
xchg
repz
jl
incb
push
ljmp
jb
jle
inc
mov
mov
xchg
imul
lds
xor
fldt
mov
iret
pushf
cltd
stos
data16
loopne
out
lea
and
xor
sar
jg
lret
and
movb
and
cmp
in
cmc
out
push
inc
fs
mov
jl
ja
icebp
pop
push
ja
test
ret
insl
dec
cld
xchg
into
hlt
lods
rcl
inc
loop
ss
inc
push
inc
fst
ficompl
jg
or
mov
ds
and
popf
leave
jmp
jmp
mov
daa
jne
push
cwtl
stos
outsb
mov
iret
push
mov
ljmp
pop
cmpsl
cmp
test
fsts
repz
rolb
jmp
push
dec
pop
jnp
fdivrl
mov
outsb
pop
je
sahf
pop
repnz
cmp
sbb
pushl
loope
daa
pusha
lock
ds
bound
jo
pop
cltd
or
pop
ljmp
sbb
sub
jge
mov
aas
dec
pop
xor
jnp
jg
sahf
sbb
sbb
sti
sbb
clc
xor
fbld
cld
ret
push
call
mov
push
mov
pop
and
xor
cmp
rcrb
mov
gs
inc
lock
xor
incl
dec
xchg
cmp
ret
pop
std
testl
pop
loop
dec
mov
mov
mov
pop
jnp
sub
jmp
insl
shlb
inc
fsubs
sub
sub
cmp
cmc
mov
jb
ljmp
pop
inc
insl
cltd
fcom
jle
shrl
outsl
and
xchg
jge
add
xor
jle
fwait
xor
push
push
add
jae
divl
jg
incl
scas
loope
aam
sub
push
int3
test
lods
out
lods
xor
clc
xor
inc
pop
movsb
std
inc
in
fsubs
repz
add
and
outsl
cmc
jmp
or
adc
pop
pop
xchg
sbb
mov
and
loope
ja
mov
fisubrs
sbb
rol
ljmp
jno
add
icebp
movsb
in
icebp
mov
negl
jg
clc
inc
daa
rclb
fldl
inc
jae
repz
icebp
incl
testl
enter
stc
push
dec
adc
aaa
pop
ljmp
pop
push
andl
icebp
mov
mov
jle
cmp
scas
xchg
dec
dec
mov
mov
inc
jmp
in
adc
pop
ret
das
xor
mov
imul
rclb
ljmp
cld
jne
cmovnp
push
pop
inc
es
mov
or
mov
call
cli
pop
aas
and
cmp
cmpb
and
pop
jg
mov
jle
lahf
fnstsw
add
ret
jmp
jbe
jle
arpl
incl
icebp
mov
jbe
xor
push
mov
sbb
fildl
and
ret
mov
outsl
push
mov
dec
fdivrs
pop
push
insb
mov
mov
outsl
lods
shll
rorb
inc
repnz
stos
xor
push
ret
test
mov
imul
xor
mov
loope
psadbw
stc
dec
sbb
jg
scas
mov
mov
negl
inc
stos
call
jecxz
inc
jecxz
aaa
repz
ret
push
popf
in
repnz
sub
push
push
push
aaa
or
push
mov
arpl
rcrl
movsl
xchg
sbb
outsl
clc
pop
inc
mov
lds
jg
sub
pop
out
lea
sarl
pop
clc
push
std
jno
clc
ret
in
jns
fistpl
cmp
int3
cmc
push
cmp
lret
mov
mov
lock
in
dec
imull
mov
mov
call
in
loope
lods
ret
lock
shrl
jo
insl
xor
push
xor
lods
call
enter
lret
cli
stos
mov
mov
in
jl,pn
xchg
lret
decl
push
fld
cltd
int3
pushf
rcrb
push
test
data16
mov
jge
push
loopne
mov
sti
into
push
rcrl
mov
stc
mov
in
push
imull
pop
xor
cmpsb
cmpsl
mov
sti
ljmp
pop
mov
cmp
mov
jmp
mov
loope
icebp
in
jecxz
mov
mov
fidivrs
imul
mov
jmp
inc
stos
sti
iret
mov
push
ret
push
mov
call
dec
mov
adc
pushf
cmp
adc
mov
cmp
sbb
sbb
ljmp
out
loop
sub
aas
inc
and
das
inc
das
jmp
mov
cli
cmp
and
outsl
cmc
call
pop
js
dec
cmp
lods
xor
pop
push
sub
sub
mov
mov
xchg
pop
insl
fidivrs
jne
or
cmp
icebp
call
daa
cmp
inc
jp
mov
adc
jecxz
das
lock
jmp
sbb
xchg
cmp
and
jb
insl
ljmp
enter
sbb
mov
fsubs
mov
lahf
pushf
ss
aaa
jecxz
dec
icebp
cmp
test
sbb
push
cli
leave
imul
js
add
imul
jmp
inc
fisttps
rep
jge
and
cmc
xchg
cwtl
enter
inc
in
add
dec
in
jo
push
push
pushl
repnz
pop
ret
push
out
mov
into
jne
adc
sbb
outsb
add
push
and
fdivp
mov
cmp
data16
cmp
pop
es
mov
cmp
or
int
sub
mov
pop
mov
jo
sub
cltd
mov
xlat
mov
dec
sbb
jae
shrb
add
enter
fists
ljmp
aam
inc
mov
pop
xchg
dec
dec
cmc
add
mov
xchg
sub
pop
inc
push
lods
push
pushl
jns
sub
pop
test
call
lds
jns
sbb
clc
dec
pop
jge
jne
fs
out
popl
inc
std
pushf
inc
mov
inc
ja
cmp
das
movsl
lods
ljmp
dec
cmpsb
ja
mov
pop
xchg
cmp
lcall
jmp
testl
sbb
icebp
dec
and
and
in
mov
fistl
push
and
popf
lret
add
push
jmp
lcall
pop
movsb
mov
rcll
xchg
les
aas
sub
mov
das
sub
clc
xlat
aam
jl
test
jp
std
sbb
loop
ljmp
stos
and
xor
sub
fisubl
push
gs
and
arpl
mov
push
add
push
sub
push
mov
outsl
push
stos
and
ss
hlt
std
adc
jecxz
dec
xor
jg
push
jne
inc
ret
mov
rcll
ret
jo
inc
stc
nop
pop
cli
dec
aam
xchg
dec
dec
loope
test
into
popf
mov
sub
sub
ljmp
sbb
lret
daa
mov
pushf
das
push
mull
ja
or
addr16
aaa
mov
pop
decl
dec
sbb
and
xchg
mov
jge
fnstenv
ljmp
incl
icebp
fsubrl
adc
andb
push
cmpsb
push
out
gs
fsub
push
mov
mov
push
mov
popf
pushf
push
inc
js
sbb
cmp
pop
ljmp
push
pop
cmp
lods
sahf
xchg
vmwrite
adc
and
inc
and
add
mov
decl
movsl
pop
inc
xchg
into
iret
clc
enter
out
pop
sbb
pop
xor
subb
mov
mov
pop
ficompl
dec
xchg
fldenv
inc
lock
fs
jb
xor
rcrb
or
pushl
test
aas
sub
rol
hlt
jns
dec
mov
sub
testb
shlb
aas
cs
call
loopne
gs
push
cmc
aad
sbb
pop
movsbl
adc
incl
arpl
xchg
sar
dec
lahf
imul
mov
divl
mov
xchg
sub
cld
fbstp
xor
sbb
pop
outsl
out
lret
out
fwait
aaa
adc
ljmp
in
movsl
mov
clc
aaa
jg
inc
cmp
lret
inc
int3
mov
sar
call
cmp
jge
inc
xchg
sbb
mov
data16
ret
mov
mov
mov
adc
lahf
adc
ss
jecxz
sub
insb
jmp
lcall
std
mov
push
xor
aaa
cmp
rclb
in
testb
andb
ljmp
mov
fsubl
out
dec
xlat
stc
sbb
dec
mov
imul
push
pop
inc
mov
jmp
lock
jb
jo
mov
std
sbb
jg
jl
lret
mov
fadds
hlt
xchg
mov
imul
mov
sar
push
mov
mov
jg
fidivl
inc
pop
dec
jmp
mov
jnp
mov
cli
shrl
stc
fnstcw
mov
inc
lcall
call
or
inc
aad
push
mov
cmp
rcrl
pop
in
cs
mov
and
jns
cwtl
sub
rolb
mov
adc
adc
outsl
pop
mov
loope
and
out
imul
cmp
mov
into
jmp
ret
jno
fistl
jmp
int
sub
add
add
dec
fsts
dec
mov
xor
ljmp
pop
mov
push
xlat
pop
stos
pushf
ret
inc
sub
xlat
mov
xchg
aaa
in
shl
dec
add
movsb
stc
stc
dec
popa
inc
in
push
pminub
adc
aas
jg
lea
sbb
inc
and
ret
push
insb
int
xchg
jmp
sbb
sti
or
sbb
push
sub
fidivrl
inc
movsl
mov
push
mov
andb
frstor
push
loop
dec
adc
clc
inc
xor
imul
add
mov
test
scas
scas
push
fs
or
out
fsubl
sub
xor
or
js
jns
add
jg
mov
sbb
inc
lods
movsl
cmp
divb
adc
xchg
testl
call
adc
ret
sub
int3
in
fs
and
add
jmp
pop
lods
mov
js
mov
mov
xlat
das
cmp
jnp
call
sahf
xchg
xchg
js
and
scas
out
lods
ss
icebp
mov
push
out
sar
decl
fisubrl
loopne
cmc
push
mov
push
ds
mov
rcll
pop
dec
jno
lret
xor
leave
inc
shrb
xor
addr16
inc
std
hlt
jno
pop
pop
cmpb
mov
lods
dec
sbb
aas
dec
mov
fcoms
add
add
rorl
mov
xor
mov
push
das
cmc
push
lock
rorl
sahf
xor
lcall
or
out
inc
or
in
iret
insb
jns
mov
icebp
cmp
bnd
test
mov
pop
cmp
int
dec
cmp
decl
jecxz
mov
push
inc
push
shrb
fsts
insb
push
scas
inc
mov
jg
dec
jns
pop
shlb
and
dec
sbb
outsw
mov
outsb
add
fisttps
daa
pop
pushf
sbb
jns
push
and
jbe
mov
in
mov
dec
mov
lcall
mov
inc
out
or
push
jg
pushl
and
arpl
sahf
rclb
lahf
mov
xchg
ljmp
neg
lods
pop
stos
popa
pop
pop
fldln2
jno
pop
cmpsl
mov
pop
outsb
cmp
stc
movsb
mov
pushl
lock
inc
invd
mov
sub
xor
outsl
stc
sarl
lret
mov
mov
call
clc
outsl
cmpsl
imul
sub
mov
decl
sahf
stc
addl
ljmp
loopne
xchg
lcall
jmp
repz
mov
cmpsb
mov
std
push
test
xchg
or
call
mov
push
std
lcall
push
jae,pt
int
lods
addr16
pop
sahf
incl
dec
dec
cmp
scas
in
jns
xchg
in
push
divl
sahf
adc
sbb
scas
in
test
inc
repz
js
aam
and
cmpsl
mov
out
lods
test
adc
lds
sti
mov
jmp
cmpsb
or
je
mov
imul
ficomps
or
jl
lods
mov
push
jg
lcall
mov
movsl
rorb
das
xchg
hlt
ja
stos
test
sbbb
jne
je
or
movsl
pop
dec
lcall
dec
idiv
fildl
xor
xor
jle
shlb
std
in
cwtl
sbb
icebp
or
imul
loope
cwtl
pop
add
clc
jmp
out
jmp
nop
aam
movsb
jo
jge
jno
or
fildl
das
xor
cld
fbld
loop
jle
test
fwait
or
push
testl
incl
jle
loopne
jmp
mov
int
rcrl
loop
xor
test
clc
or
notb
mov
shll
cld
decl
sti
push
mov
jnp
ds
lock
mov
push
add
incl
inc
jle
push
shll
jae
push
lock
hlt
imul
mov
xor
incl
and
cmp
shrl
inc
cmpsl
xor
xchg
xchg
bt
lcall
xor
xchg
mov
aam
jne
popf
frstor
mov
das
mull
jle
push
xor
push
adc
fs
pop
and
push
sbb
mov
adc
js
loope
adc
lcall
call
inc
test
and
das
push
mov
push
jp
jge
insl
adcb
inc
inc
adc
ljmp
fwait
inc
push
lahf
iret
popf
jae
in
mov
scas
mov
cmpl
imul
lcall
pop
int
push
cmp
xchg
popa
rdmsr
out
dec
sbbl
mov
mov
add
call
clc
push
iret
sbb
out
sti
loop
bnd
xchg
lods
mov
push
push
sbb
dec
push
jle
lcall
jno
cmpl
dec
ljmp
in
inc
movsl
in
popa
mov
xchg
es
incl
repz
dec
loop
jmp
mov
inc
mov
pop
fucomip
pushl
pop
mov
mov
mov
stc
lcall
mov
adc
data16
inc
into
pop
mov
jbe
clc
cs
decl
std
push
xchg
rcll
andl
sbb
cmc
ja
xor
mov
pop
outsb
pop
dec
jne
lcall
pop
loopne
shrb
cld
jg
pop
cmp
adc
sahf
insb
mov
in
xchg
mov
sub
negb
daa
ret
inc
ret
and
xchg
xor
xchg
inc
push
and
cmp
ret
add
mov
cmp
loopne
incl
or
xchg
out
ljmp
aaa
fidivrl
jg
mov
adc
out
rclb
lret
hlt
std
mov
push
mov
jno
sub
stos
inc
inc
outsl
jne
mov
cmp
push
mov
mov
pop
insl
bound
add
jg
clc
clc
fmul
repnz
test
cs
in
idiv
pop
outsl
xchg
mov
es
hlt
cmpsl
xchg
pushf
mov
imul
dec
push
and
outsb
pop
fwait
push
push
mov
dec
movsl
sub
mov
xchg
out
cmp
clc
ljmp
dec
insl
bound
and
mov
fldl
dec
pop
decl
push
xchg
adc
sub
pop
shlb
lods
jae
and
shr
ds
jg
lods
int3
mov
icebp
loope
loopne
jno
push
test
jns
ljmp
cmp
mov
dec
push
sbb
test
xchg
nop
ljmp
and
repnz
cmp
pop
in
mull
aad
jg
xor
pop
inc
sub
ljmp
sbb
pop
adc
loop
inc
jg
adc
negb
cmp
push
inc
popa
test
fstpl
in
xchg
es
cmc
in
repnz
mov
dec
cli
pop
mov
popa
fisttps
add
sub
rcrl
jg
push
xor
jmp
adc
fs
ss
cmp
fld
and
testl
pop
notl
mov
adc
lret
cld
and
lcall
bound
adc
pushf
dec
xor
xchg
out
mov
ljmp
out
pusha
xchg
jne
add
xchg
cmc
cwtl
and
sub
ret
adc
fidivrl
cmp
jecxz
fbstp
xor
in
xchg
mov
iret
and
pop
jnp
out
cmpsb
inc
mov
incl
xor
js
fcoms
pop
arpl
mov
mov
lcall
in
xor
les
imul
adc
outsb
cs
mul
sub
xchg
push
insb
inc
lcall
pop
mull
push
and
sub
dec
cltd
sbb
xchg
rcll
les
inc
nop
rcll
call
sub
jbe
sbb
xchg
into
sbb
sub
loopne
cld
pop
call
jbe
fwait
rorl
jmp
lea
xchg
and
dec
pushl
jmp
stos
push
fmuls
rep
ss
dec
fwait
jecxz
dec
pop
insl
pusha
mov
pushl
cmp
stc
inc
jmp
repz
push
mov
gs
testb
push
mov
jns
mov
and
outsl
pop
test
aam
ret
or
cwtd
xor
aad
ljmp
xchg
cli
decl
fnstcw
int3
mov
jbe
jns
sbbl
add
ljmp
cld
popa
sub
sbb
and
mov
fcomps
ret
out
dec
mov
push
hlt
aad
icebp
ret
xchg
pushf
jno
les
lock
pushf
mov
call
aam
je
dec
or
aam
aam
aas
mov
sar
sbb
inc
negb
push
or
test
pop
dec
stos
fld
std
insb
add
sub
cmp
lret
cli
repz
xchg
mov
insb
arpl
ljmp
cld
pushl
fmull
lret
or
jmp
pop
cltd
xchg
ljmp
cmc
dec
mov
xor
mov
sub
movsl
xor
popa
adc
test
sub
repz
loop
or
idivb
clc
mov
push
jnp
loopw
sub
test
mov
out
call
fcos
lcall
sub
adc
jns
dec
pop
cmp
xorb
subl
lds
mov
pop
jl
mov
sti
sbb
xchg
mov
cmp
daa
jmp
sub
mov
andl
xor
clc
sub
mov
call
jno
shlb
aas
or
cmpsl
xor
sti
ja
jg
pushl
je
movb
sbb
leave
push
cmp
and
mov
pop
sub
call
pop
xor
cmp
pop
rcrl
mov
daa
sub
inc
pop
das
cmp
xchg
decl
lock
mov
sub
leave
sbb
sahf
scas
aad
inc
arpl
loopne
cmp
call
or
pop
cmp
leave
inc
lahf
fs
in
cld
xchg
push
out
mov
je
pop
shrd
das
cmc
sarb
loope
insb
shlb
daa
inc
jl
pop
loopne
ljmp
cltd
inc
out
pop
ffreep
dec
inc
daa
cmp
js
hlt
inc
fadds
or
sub
sti
push
jns
ss
scas
dec
fdivr
dec
leave
add
mov
pop
sub
dec
add
jmp
lcall
xchg
dec
call
cmp
lock
and
loopne
adc
ret
outsl
jp
stos
fsubrl
es
push
std
cmp
push
aad
mov
lcall
adc
iret
xchg
pop
aaa
fisttps
jl
iret
mov
push
daa
rcr
aam
lock
jmp
xor
and
cmpsb
mov
xlat
roll
mov
arpl
cmp
les
mov
xchg
and
add
lahf
dec
icebp
mov
loopne
call
mov
outsb
sar
cmc
inc
mov
mov
push
mov
dec
into
pop
or
outsl
insb
push
mov
inc
stos
out
pop
jo
and
cmp
in
pop
jmp
mov
int
ret
addr16
mov
loopne
dec
sbb
add
jg
dec
add
test
cmp
nop
pusha
sbb
pushl
jns
pop
mov
fcomp
pop
lcall
xchg
jbe
in
push
dec
stc
insl
shr
mov
dec
cmp
cli
jl
and
mov
in
shlb
cld
fwait
movsl
pop
out
dec
push
or
add
sbb
iret
and
push
xor
repz
cli
dec
lret
pop
adc
decl
cmpsb
jp
sbb
addr16
loope
fnstsw
shrb
sbb
push
sarb
out
xchg
sub
push
inc
pop
push
in
dec
jo
dec
das
jb
lahf
adc
pop
and
incl
or
mov
and
movsl
mov
xor
mov
imul
ljmp
adc
in
mov
jbe
inc
dec
push
pop
sub
addr16
in
pop
rorl
jg
mov
xlat
out
push
inc
bsr
inc
cwtl
pop
xor
repz
hlt
es
into
mov
in
movsl
mov
mov
shr
icebp
xchg
cmc
lods
mov
movsw
add
call
mov
gs
jmp
mov
ficomps
lds
push
sub
pop
mov
ret
les
aaa
sub
xchg
es
cmc
dec
push
mov
cmp
mov
iret
cmp
cmp
sub
mov
sbb
dec
sub
js
sub
je
xor
jmp
inc
inc
cmp
sub
mov
jno
out
cmp
mov
jg
decl
ljmp
test
mov
sbb
mov
jl
lcall
arpl
mov
adc
mov
iret
or
inc
xor
sub
daa
lret
in
sub
ljmp
push
dec
movsb
pop
cs
das
negb
movhps
jmp
enter
dec
mov
decl
nop
shll
inc
mov
cmp
jbe
or
push
cwtl
mov
sar
jmp
out
push
sbb
mov
notb
mov
imul
sub
sbb
or
jo
in
jmp
popf
dec
call
clc
cmp
imul
lds
jle
mov
lcall
stos
push
xchg
inc
ds
fs
inc
movsl
and
lods
add
inc
pushf
xchg
sbb
push
pop
inc
cld
imulb
adc
movsl
enter
adc
push
pop
mov
call
jle
scas
inc
inc
ss
adc
cmp
dec
rcl
push
fwait
gs
imul
mov
test
out
pop
fistpll
cmp
cld
sahf
dec
and
sets
push
daa
mov
jno
leave
outsb
int3
xor
lock
in
dec
sbb
iret
push
pop
mov
add
es
aad
add
loopne
pop
std
pop
sub
xchg
mov
out
adc
nop
push
sbb
pop
js
xchg
jp
pop
pushf
mov
jg
scas
test
dec
jmp
stc
xchg
call
test
int3
aad
cld
lods
test
test
repnz
js
in
jae
rcl
adc
xlat
jmp
cmp
jg
lcall
int3
call
sti
pop
sbb
int
cmpsl
cmp
fucomip
jno
enter
in
ja
cld
jmp
lcall
ljmp
mov
cwtl
inc
jmp
bound
fnsave
ljmp
mov
lods
je
push
insl
sub
es
lret
test
icebp
xchg
xchg
pop
test
inc
mov
call
lea
dec
cmc
lds
pushf
add
sub
rclb
pushl
imul
in
jg
push
popa
xor
out
jg
mov
in
call
call
out
dec
xor
pop
mull
imul
test
mov
jae
mov
jmp
add
js
dec
sarb
data16
and
sbb
mov
shll
dec
pop
pop
mov
xor
push
lea
xor
pop
clc
dec
mov
popf
popf
pop
addr16
add
in
incl
adc
dec
cmp
inc
push
out
add
std
and
pop
decl
test
or
pop
nop
movsb
add
sbb
and
test
shll
fucomp
jl
in
lods
dec
ss
lock
mov
stc
inc
cmp
lock
jge
push
pop
jl
push
stos
pusha
jg
adc
pop
push
and
jg
jg
decl
into
and
sbb
and
not
faddp
out
int
ljmp
mov
mov
mov
xor
cs
in
stos
lea
xchg
movsl
icebp
call
jmp
xor
out
sub
sub
outsb
les
ljmp
ljmp
out
in
and
and
or
and
divl
and
pushl
ret
out
cmp
idivl
sahf
test
mov
push
jecxz
or
cli
movsl
lods
push
sahf
dec
xchg
data16
pop
mov
out
cmp
cwtl
sub
out
stos
inc
je
shll
push
hlt
ljmp
jbe
jecxz
sub
inc
les
pushl
push
imul
call
inc
add
pop
clc
pop
mov
shlb
jg
pop
fsubrl
ljmp
mov
mov
repz
cli
in
clc
dec
push
jnp
pop
imul
iret
mov
sbb
push
js
mov
jmp
push
push
dec
push
lds
mov
xor
in
push
ljmp
movl
stos
lock
sbb
jno
in
out
jnp
push
outsb
add
jg
andl
mov
bnd
pop
sub
cmp
incl
in
push
in
ja
leave
imul
shll
mov
call
sbb
popf
cmp
push
inc
sbb
xor
adc
push
call
decl
subb
inc
add
loop
mov
xor
hlt
fucomip
mov
iret
ret
inc
jnp
inc
push
les
pop
cmp
das
mov
and
mov
mov
clc
jno
mov
xchg
ljmp
sbb
js
popw
mov
lods
push
fcmovne
jmp
rsqrtps
idiv
decl
lock
rorb
gs
push
cmp
mov
pop
loop
pushf
jmp
inc
ficomps
jp
insl
addl
or
and
frndint
dec
mov
mov
lcall
pop
test
addr16
mov
mov
notb
insb
xor
jae
js
jge
pop
outsl
jae
iret
aam
add
mov
inc
mov
lahf
mov
fs
in
adc
sub
popf
push
push
fildll
push
ficoms
cmp
mov
sbb
push
mov
cmpsb
and
jmp
mov
mov
je
fsubrs
sub
inc
dec
inc
hlt
xor
adc
sbb
jg
push
shlb
je
xchg
divl
mov
push
jg
aaa
fsubrl
rcll
or
mov
iret
test
incl
sbbb
dec
scas
pop
sarb
les
or
dec
cmpl
dec
mov
call
mov
dec
jg
mov
mov
loop
xor
decl
lcall
arpl
mov
pop
xlat
stos
jns
mov
pop
lahf
mov
jg
ret
push
addb
jns
mov
bound
xchg
xor
scas
lods
and
call
and
sub
lock
lcall
xchg
mov
div
lods
push
jb
or
rorl
inc
fnstcw
popf
and
lea
push
inc
add
pop
push
lcall
jmp
xor
and
roll
sub
add
mov
leave
jg
cmpsl
jg
jecxz
out
xor
in
aaa
test
cld
repnz
fsub
adc
lds
fprem1
mov
ds
jl
dec
stc
xchg
sbb
mov
incl
pop
icebp
inc
inc
out
cs
fnstenv
outsl
cld
jge
adc
add
lds
mov
out
fcmovnu
push
lahf
pushf
lret
outsb
call
popf
lahf
cltd
and
adc
or
mov
lahf
pop
and
jg
dec
inc
mov
lods
rorl
popf
repz
pop
fildl
xor
imul
call
sub
out
pop
pushf
ja
call
mov
das
std
decb
outsb
mulb
lds
push
ret
sub
fildll
rcrb
mov
int
add
bound
popf
das
std
and
fwait
xlat
mov
mov
sub
mov
scas
sbb
xor
icebp
iret
inc
jge
sub
fidivrl
int3
hlt
sbb
decl
mov
popf
pusha
or
out
xor
xchg
dec
stos
lret
lret
repnz
jg
dec
je
sti
or
add
mov
pop
or
mov
jg
jne
inc
push
and
fcomps
test
fstpt
daa
loopne
test
jg
mov
dec
pushf
mov
lret
and
idiv
sub
mov
inc
cmp
insl
mov
movsl
lods
out
dec
aad
dec
aaa
insl
jns
push
sub
push
inc
ljmp
icebp
jg
popf
mov
ljmp
mov
mov
mov
cmc
call
sar
insb
pop
mov
jae
leave
pop
add
fbld
cmp
arpl
in
adc
cmp
xchg
mov
jo
pushl
repnz
dec
and
inc
xor
cli
cmpsb
in
cwtl
push
push
imul
add
int3
jecxz
mov
sub
in
js
out
lods
es
fwait
mov
jmp
cmp
stos
ss
inc
fsub
xor
xor
dec
jbe
cwtl
in
dec
lds
aam
incl
pop
into
mov
xor
mov
loope
mov
inc
mov
dec
xrelease
icebp
test
scas
inc
mov
incl
xchg
lret
fisttpl
lahf
in
push
xor
imul
addr16
mov
jge
fistpll
push
mov
ret
mov
mov
dec
dec
sub
mov
mov
aas
out
pop
sbb
call
add
sbb
decl
cmc
enter
mov
fimuls
sub
push
mov
mov
cli
cmp
addr16
xchg
loop
pop
nop
fisttpl
add
mov
jns
ja
sub
adc
outsl
cmpsb
scas
aaa
js
sbb
add
mov
cli
mov
daa
fistl
fwait
filds
pop
call
lret
andl
imul
je
push
ljmp
popf
imul
je
mov
insl
sahf
inc
pop
pop
sbb
inc
shr
sahf
loop
mov
cld
clc
call
lret
mov
lds
shl
cmpsl
sbb
ds
inc
repnz
mov
call
mov
jg
pop
jb
rclb
jae
sbb
mov
sbb
cmc
pushw
or
incl
or
sub
pop
addr16
or
lret
dec
pop
insl
outsb
cld
outsl
decl
jp
adc
out
dec
int
or
mov
iret
inc
mov
ljmp
sbb
aam
mov
sahf
mov
lea
xchg
call
inc
stos
or
loop
or
xor
sbb
pop
jl
out
call
jmp
into
sbb
jmp
inc
mov
sbbl
jmp
jp
lret
mov
or
cmp
scas
frstor
jecxz
pop
mov
loop
clc
daa
loope
in
mov
mov
movsl
mov
sub
lcall
ljmp
push
enter
out
inc
jne
idivb
xor
mov
push
push
cmp
incl
jp
adc
xchg
push
push
aad
and
loop
pusha
push
pop
cli
add
xor
icebp
mov
jp
imul
call
pop
pop
add
xor
mov
jecxz
jecxz
enter
idiv
incl
out
imulb
stos
pop
outsb
push
pop
inc
inc
xchg
mov
js
xchg
mov
lret
sub
das
stos
ljmp
dec
xor
xchg
xchg
cli
jg
scas
sub
adc
jp
inc
jmp
nop
jno
lcall
pushl
loopne
xchg
int3
in
mov
pop
jp
push
int3
ljmp
pop
int
cmpsl
daa
pop
mov
mov
ds
pop
bound
mov
pushl
repz
adc
into
es
mov
inc
pop
pop
push
jae
push
push
ds
push
inc
sub
out
adc
mov
fwait
cmp
jb
jo
adc
adc
cmp
inc
cld
decl
sbb
cmc
js
es
clc
inc
ds
cwtl
sub
sub
push
xor
in
fidivs
rcrl
dec
les
pop
cmpxchg
aad
sbb
call
mov
sti
es
cmc
mov
push
sbb
jne
jmp
jb
push
outsb
shl
push
cltd
add
jle
or
jmp
ljmp
sub
stos
mov
mov
shrl
adc
fdivrl
xchg
stos
sub
sub
incl
popa
js
mov
xor
pop
shll
mov
pushl
adc
rcl
cld
inc
cltd
mov
xor
pop
push
sbb
mov
mov
in
or
or
aad
jmp
loopne
gs
mov
call
int3
or
or
ljmp
lahf
ret
jmp
ja
or
mov
xor
call
adc
sbb
or
sti
and
test
pushl
int3
out
cltd
jo
inc
mov
adc
daa
aad
fwait
sti
pushw
lock
hlt
mov
sbb
and
mov
lret
and
and
data16
sub
and
fmuls
pusha
mov
sub
adc
sbb
shrb
hlt
fisttps
jbe
xchg
cmp
je
jo
ljmp
jmp
mov
pushf
push
aad
pop
xor
xorb
push
jns
push
cmp
pushl
mov
and
les
pop
mov
decl
adc
push
imul
out
out
mov
aaa
mov
in
pop
cld
lcall
xor
in
not
sahf
xchg
xchg
mov
lahf
jg
pusha
mov
femms
dec
in
and
inc
movsl
movsb
repnz
mov
je
sbb
movsb
shll
push
mov
cld
lcall
mov
mov
push
insb
sbb
or
aam
cltd
mov
push
xor
loop
mov
fsubrs
jno
out
pop
push
movsl
in
jno
lret
cmp
out
es
test
xor
inc
lahf
or
or
dec
outsl
or
gs
xor
pop
mov
in
vpmullw
sub
ss
out
arpl
cwtl
push
push
hlt
dec
cmp
inc
and
push
fisttpll
mov
or
lcall
and
mov
mov
lcall
mov
movsb
mov
aas
iret
lcall
mov
dec
xchg
xchg
mov
xchg
jbe
imulb
movsl
pushf
or
inc
mov
loope
push
jne
cmp
mul
pop
imul
or
mov
pushl
scas
cltd
stos
int
pop
cmp
pop
insl
clc
lods
ja
out
bound
ss
call
sti
cmp
mov
mov
pop
enter
adc
sub
jo
gs
mov
incl
inc
pusha
pusha
fdivrs
jle
push
and
mov
icebp
in
rorl
call
sbb
adc
cmp
xchg
subb
loope
pop
aad
fistpll
test
mov
testb
xor
std
xchg
mov
cli
fstpt
hlt
fs
pop
mov
es
adc
pop
xor
incl
xchg
jg
ss
test
push
xchg
aas
popf
scas
sub
loope
mov
pop
es
cli
out
fucom
rolb
xchg
jp
ds
adc
push
ret
and
pop
mov
lods
inc
push
lock
mov
pop
idiv
ljmp
fldl
mov
es
cli
xor
imull
outsl
and
cwtl
mov
call
add
jl
loop
inc
or
in
mov
mov
ret
mov
lahf
enter
sub
adc
arpl
mov
call
mov
xchg
jg
cwtl
mov
cmp
int
mov
xchg
outsl
cld
ljmp
jo
icebp
sub
pop
mov
jle
lret
dec
jb
mov
sti
imulb
mov
gs
fsubp
sbb
dec
mov
jo
shll
outsb
ljmp
icebp
aam
ljmp
jge
xor
xor
mov
mov
cmc
pop
rcrb
cld
sub
push
cmp
jg
xorl
sub
test
and
daa
jmp
sub
sub
ljmp
stc
faddp
mov
sub
jmp
cltd
mov
mov
lret
inc
sbb
xchg
in
pop
inc
mov
mov
mov
ret
pop
pop
pop
mov
jbe
ljmp
shll
inc
pop
ljmp
cmpsb
imul
imul
roll
inc
xor
sub
adc
sbb
inc
inc
inc
and
pop
lea
das
xchg
or
leave
push
lods
test
or
pop
gs
arpl
pop
imul
jmp
mov
dec
out
ret
arpl
xchg
fcmovne
hlt
jae
cmp
inc
lret
jo
sahf
jl
xchg
xchg
pushf
xchg
stc
mov
cld
sbb
pop
sub
pop
push
in
sbb
cmp
ja,pn
sbb
and
in
js
call
add
out
clc
fldcw
mov
pushf
rcr
mov
lcall
cmp
andl
test
or
call
ja
xor
adc
repz
pop
shlb
ljmp
jge
push
adc
popf
push
in
shrl
gs
dec
in
fwait
popf
inc
lds
scas
sarl
loop
jecxz
xchg
lahf
test
mov
mov
mov
int
negb
sub
mov
dec
mov
imul
addb
cmpsb
test
in
mov
inc
sbb
dec
pop
test
jae
gs
push
mov
mov
das
push
mov
enter
xchg
es
adc
xor
call
arpl
clc
bswap
in
sub
mov
pop
ss
cmc
push
scas
xor
call
outsb
mov
stc
imul
jl
clc
mov
xor
xchg
sti
call
inc
icebp
adc
mov
xchg
or
call
std
stos
push
fiaddl
mov
ds
incl
in
jmp
xchg
push
mov
dec
xor
rorb
lea
fucomip
pop
fs
scas
test
testl
aad
sbb
cmc
les
std
sbb
decl
pop
dec
dec
or
out
jmp
in
and
mov
out
test
lcall
shlb
pop
repz
sahf
xchg
ja
cmpsb
mov
pop
loopne
sahf
sti
ret
repz
push
xchg
mov
jmp
iret
adc
push
jno
pushf
call
loope
push
es
jge
xchg
pop
dec
insl
push
dec
jb
jae
mov
insb
test
repz
decl
out
scas
cmp
addr16
xor
jnp
mov
call
jb
cmpsl
andb
test
pop
mov
sbbb
or
cmp
push
xchg
jno
ja
mov
add
jge
fildll
mov
iret
mov
mov
enter
lcall
fdivp
out
lret
addr16
decl
sub
fsubrs
or
cltd
pop
adc
cld
incl
push
dec
scas
repz
sub
cwtl
sub
outsb
gs
sbb
das
mov
push
jl
xor
jle
scas
std
popa
ss
and
sub
inc
call
jns
mov
data16
aad
fisubrs
in
std
inc
aas
xlat
pop
mov
call
pushl
hlt
hlt
sbb
push
rolb
int3
shrb
test
icebp
sbb
push
inc
fbld
adc
push
lds
ficomps
xor
repnz
and
push
pop
mov
in
mov
in
push
jo
std
mov
mov
popf
pop
push
and
shl
jmp
inc
mov
mov
imul
dec
fcoms
sub
xor
mov
jecxz
jg
incl
call
iret
outsb
adc
push
add
and
loop
ss
inc
mov
fisubrs
pop
pusha
test
int3
cmc
lcall
dec
push
loope
ss
cmpsl
aam
fwait
das
call
fidivrs
jne
sarl
dec
test
leave
xchg
pusha
xchg
mov
jns
mov
sarl
sub
lds
cltd
mov
repz
mov
cld
popl
sub
pop
idivb
cmp
shll
mov
dec
push
in
cmp
push
xchg
cltd
push
xor
push
push
dec
maxps
sbb
daa
test
outsb
and
je
call
shll
fdivs
out
scas
fdivl
loope
ret
aaa
loopne
stos
pop
in
pop
lret
add
adc
dec
xchg
xchg
fnstsw
inc
hlt
lods
xor
pop
push
movsb
jecxz
pusha
adc
dec
cmpsl
sarb
js
lods
lcall
incb
loope
das
adc
push
aad
lahf
and
sti
scas
hlt
fcmovbe
outsl
sbb
inc
in
ljmp
cmc
or
dec
sbb
sub
mov
pop
cmp
mov
call
adcl
adc
lea
or
push
sub
and
xchg
ds
js
dec
sti
outsb
bnd
add
decl
sbb
out
inc
xor
ljmp
cmpsb
int3
dec
stc
cld
push
ja
mov
jg
sahf
fcmovnu
rcrl
aad
xchg
clc
jmp
pop
out
pop
out
xlat
mov
aad
stc
outsb
fmul
mov
ljmp
out
or
dec
jp
cli
ljmp
pop
pusha
jmp
stos
aam
out
pushf
push
jle
cli
mov
repnz
mov
and
out
jnp
xchg
leave
je
adc
test
pop
cmp
mov
out
out
dec
inc
dec
and
mov
popa
scas
dec
push
mov
js
les
decl
scas
adc
rol
or
and
nop
cmpsl
push
lret
sbb
stc
mov
jg
jle
mov
and
xor
aaa
inc
jecxz
movsb
int
into
mov
sbb
dec
sub
incl
imul
sbb
ja
add
lock
cmc
sub
sti
ret
pushf
xor
dec
push
mov
cmpsb
rcr
loop
push
outsl
in
mov
in
pop
ss
cltd
cmp
std
decl
jecxz
add
mov
loope
jae
out
push
ret
push
clc
pop
call
and
dec
int
dec
sbb
hlt
incl
jge
mov
xchg
movsl
rorl
in
imul
cli
push
jmp
or
mov
push
fcoms
out
adc
pushl
test
sub
icebp
or
filds
sub
lcall
inc
imulb
mov
dec
pop
dec
push
imul
mov
mov
push
xor
jle
loop
mov
push
or
shrl
xor
call
inc
jecxz
add
cmp
pop
mov
lds
out
stos
cmc
in
fbstp
incl
movsl
lock
mov
stos
pop
ret
test
outsb
xchg
push
lods
movsl
sbb
lret
int3
call
das
cmc
out
mov
data16
divb
and
insl
mov
mov
jb
sub
movsb
cs
movsl
test
mov
clc
out
jb
dec
rcrl
ds
in
dec
or
aad
mov
decl
out
mov
hlt
nop
adcb
mov
pusha
lock
pushl
sti
xor
jg
add
ret
cltd
sbb
or
dec
enter
filds
mov
mov
pop
stos
jg
filds
mov
nop
xor
shrl
xor
inc
jg
loope
xchg
fwait
add
mov
mov
lock
popa
lret
sbb
jno
sub
or
popa
jge
popf
xlat
je
xlat
aas
push
cmc
push
jb
dec
inc
gs
div
jne
or
orb
xor
popf
mov
repz
push
cli
divb
mov
out
shll
dec
mov
std
incl
mov
rolb
cmc
incl
das
sbbl
push
push
ficoms
push
in
mov
mov
test
push
cli
inc
push
scas
cmp
popa
stc
fld
test
mov
mov
cmp
das
lods
push
das
movsl
pusha
dec
jnp
incb
sub
dec
push
pop
dec
ss
icebp
lret
iret
sub
jno
pop
pop
ljmp
jle
insl
inc
adc
icebp
dec
mov
testb
unpcklps
fisubrl
clc
mov
add
dec
pop
sub
push
call
pushf
pop
jl
data16
dec
mov
aad
test
mov
push
stos
mov
pushl
cmp
push
cltd
xchg
or
push
sbb
ds
push
ljmp
xor
in
pop
in
mov
jg
rclb
rorl
fwait
jecxz
lock
jae
repz
dec
inc
rcr
movsl
in
cmpsb
loopne
jg
jl
add
movsb
xor
pop
pop
cli
xchg
adc
cmp
stos
and
xchg
ljmp
lcall
mov
inc
xchg
test
pop
mov
mov
decl
xor
dec
rorb
cltd
xchg
jg
lock
bound
xchg
sub
or
xchg
sbb
aas
push
jp
mov
ljmp
gs
addr16
lcall
enter
add
xor
cmp
pushf
in
fucomip
jmp
ficoml
loope
test
sbb
fwait
jp
pop
loop
out
cmc
lea
lret
cmp
mov
bound
lcall
aad
jae
pop
pop
jp
lock
and
jnp
xchg
sbb
imull
aad
lcall
ret
add
xor
jmpw
stos
dec
lret
sbb
xchg
mov
js
cwtl
push
clc
lods
push
lret
daa
mov
dec
cmp
inc
sbb
jmp
out
and
xchg
scas
ljmp
lret
mov
ja
rclb
or
mov
pop
lea
mov
xchg
cmp
xor
mov
mov
fimuls
clc
mov
sub
outsl
pop
and
adc
sub
dec
mov
mov
ljmp
scas
pop
in
inc
shl
aad
pop
test
popa
outsb
pop
std
incl
enter
ret
xchg
aad
xchg
mov
adc
sbb
fwait
sbb
cmp
lcall
mov
aam
ror
jno
incl
xlat
xchg
ja
loopne
and
mov
dec
aas
lret
out
xor
call
mov
mov
leave
movsl
das
fsubr
mov
cs
pop
and
fstps
call
pop
cli
sub
push
ljmp
ret
outsb
sub
decl
sub
add
lds
lods
shrb
sbb
lcall
inc
lods
jne
sbb
loopne
mov
jge
pop
sub
push
stos
sbb
sahf
sub
movsb
cltd
nop
loopne
call
sbb
aad
dec
gs
dec
adc
outsl
dec
sub
dec
xorl
inc
sti
push
mov
fcomps
jb
mul
push
insb
jnp
sbb
adc
lcall
sbb
out
mov
add
xchg
cmp
push
cmp
xor
loopne
xchg
sahf
pushl
xor
pushf
sbb
cmp
push
pusha
xchg
leave
incl
dec
loopne
cli
enter
inc
ljmp
sbb
mov
push
cmp
int3
push
shlb
cmp
cld
mov
mov
ljmp
mov
mov
jns
pop
mov
xor
mov
cs
jg
xchg
mov
xor
xor
aam
sub
test
xor
stc
fimull
adc
cli
adc
das
stos
sub
aas
aam
xor
cltd
jnp
decl
call
loope,pt
pop
push
mov
aad
push
push
xlat
add
mov
pushf
ljmp
aaa
pop
imul
mov
inc
shrl
ss
mov
cmp
add
cmp
cld
adc
out
dec
pushf
xchg
mov
pop
lods
xor
adc
hlt
ljmp
sahf
mov
jne
xchg
xlat
pandn
scas
lcall
out
fsubr
scas
mov
icebp
roll
cmp
imul
js
movsb
outsb
into
insl
cmp
decl
loope
jbe
inc
call
jbe
push
add
adc
imul
adc
push
cli
pop
mov
xchg
loop
adc
lcall
push
pushl
mov
adcl
xlat
lret
pushl
xchg
mov
orl
imul
std
ljmp
inc
push
clc
imul
and
mov
movsl
dec
lret
cltd
sti
pop
mov
jmp
fisubrs
rorl
mov
xchg
pop
out
out
adc
js
popa
mov
jg
addr16
pushf
dec
das
int
ret
jl
dec
or
dec
dec
xor
lds
aas
scas
shll
ljmp
in
aad
cmp
inc
jnp
sbb
fcompl
ficoms
dec
lcall
arpl
lea
leave
sub
sbb
xchg
mov
mov
or
pop
call
jne
mov
cmc
in
loopne
inc
jecxz
pusha
subl
adc
jae
repnz
fbld
mov
jp
push
sub
out
mov
and
out
sub
mov
xchg
sbb
sbb
dec
xchg
xchg
cmp
cmp
into
rcr
gs
aad
out
fisttps
in
mov
lcall
imul
and
sbb
push
dec
repz
pop
inc
in
xlat
pop
mov
inc
or
stos
mov
repnz
in
mov
lock
push
stc
test
add
cld
pop
clc
decl
mov
lcall
pop
into
mov
call
mov
jb,pn
fwait
jmp
out
ljmp
popf
imull
sbb
xchg
inc
cmc
mov
call
lcall
les
test
shll
adc
aas
loop
inc
push
data16
mov
jmp
xchg
loope
sub
fldcw
xchg
jl
dec
fidivl
mov
in
push
rorb
nop
jmp
sbb
cmp
jg
bound
mov
mov
mov
test
pop
push
mov
inc
cmp
gs
pop
aad
cs
xlat
jle
andb
ds
mov
jge
fistl
push
or
push
and
movsl
fdivl
pop
push
push
and
xor
fistps
out
push
cmc
jl
pop
pop
and
adc
lock
hlt
sbb
push
mov
mov
call
iret
scas
xchg
mov
loope
leave
leave
cmpsl
jnp
aad
xchg
mov
dec
std
and
and
adc
lock
nop
out
mov
lock
in
movsl
imul
popa
cmpsb
and
xlat
std
ljmp
inc
adc
das
jg
or
xor
mov
es
aaa
out
out
push
pusha
subb
clc
int3
leave
and
hlt
cmp
sub
popf
push
test
ljmp
lcall
hlt
adc
out
nop
pop
pop
adc
mov
data16
pop
mov
fnstsw
dec
dec
or
das
sbb
lock
jmp
sub
or
xchg
cwtl
hlt
mov
jne
cli
cmc
mov
xor
pop
mov
push
jmp
and
push
fisttps
xor
mov
leave
in
cmpsb
inc
xchg
and
fs
dec
clc
sub
outsl
icebp
adc
sub
push
mov
into
test
movsb
ljmp
pop
or
sub
jp
mov
cmp
call
inc
mov
mov
and
xchg
sbb
cmp
bnd
mov
jbe
lock
jmp
xor
mov
mov
pop
sub
je
add
jb
aas
out
pop
lcall
call
pop
dec
sbb
call
mov
push
fsubl
push
call
xor
mov
sub
mov
out
push
loope
push
ja
aad
loopne
inc
inc
inc
fdivs
dec
iret
movsl
pop
and
outsb
xchg
dec
mov
push
icebp
xchg
loop
lock
fnclex
push
pop
mov
or
fistl
out
xor
fbld
jmp
popa
sbb
dec
test
xchg
lods
push
jo
in
mov
pop
sub
imul
pop
movsb
incl
push
pop
popf
sub
inc
cltd
jecxz
sbb
stos
pop
popa
and
jmp
into
or
push
adc
rcl
jmp
icebp
cmpsb
int
fcmovb
mov
pop
cld
lods
aas
mov
test
fs
bswap
les
pop
movsl
cwtl
movsl
loop
in
call
cli
jnp,pn
les
in
dec
lcall
call
pop
clc
push
out
add
adc
testb
idivb
adc
pop
cli
adc
test
cld
out
jmp
pop
ss
sub
pop
divb
xor
push
test
mov
bound
fsts
movsl
sub
daa
adc
lcall
daa
adc
lods
and
adc
push
popf
adc
and
push
jecxz
les
aad
clc
push
repnz
sbb
mov
in
cltd
je
popf
pushl
sub
inc
stos
pop
iret
push
push
out
mov
mov
mov
je
arpl
jmp
repz
mov
lret
insl
rcrb
ljmp
data16
push
sub
cmp
ret
fidivrs
fdivr
call
lret
dec
sbb
push
cmp
jbe
test
dec
daa
andl
imul
decl
adcb
push
mov
nop
mov
mov
sbb
in
aas
out
push
inc
pushl
and
xchg
adc
add
dec
in
jg
jmp
push
and
les
hlt
in
jp
push
jg
mov
decl
loope
mov
in
movsl
push
arpl
clc
sub
ljmp
mov
or
pop
xchg
mov
mov
fldenv
push
and
cmp
add
mov
pop
test
pop
fimull
inc
das
aad
sub
mov
shlb
lock
mov
stc
movsb
xchg
push
sbb
pop
mov
dec
pop
dec
mov
nop
or
mov
js
cmp
js
pop
dec
mov
incl
mov
test
lret
adc
cmpsb
lcall
inc
in
dec
icebp
outsl
cmc
jecxz
repz
in
daa
cmpsb
jnp
add
ljmp
push
pop
push
inc
imul
into
cmpsb
ret
push
inc
sbb
jle
cmp
test
imul
jl
jns
jb
out
mov
jge
cmp
dec
xchg
dec
lds
pop
cmc
test
pop
inc
fidivrl
add
idiv
mov
push
xchg
std
jb
mov
adc
push
fistps
jmp
jbe
mov
mov
out
movsl
mov
ret
mov
push
mov
jmp
jecxz
xor
pop
movsl
push
jecxz
shrb
add
rcll
push
out
ljmp
mov
cmp
push
xor
dec
and
mov
mov
sbb
adc
in
or
or
jg
jmp
mov
push
and
pop
inc
and
sbb
decl
cld
mov
movsb
mov
out
mov
mov
jbe
ljmp
jl
fwait
and
ret
sub
push
lret
pop
int3
xchg
mov
xchg
lret
incl
mov
xor
and
cmp
mov
adc
das
and
inc
inc
or
sub
push
sbb
inc
repnz
jle
and
xchg
popf
or
call
lods
aam
mov
jle
in
call
add
ljmp
lcall
scas
aas
inc
or
inc
int3
divl
xchg
mov
mov
lret
enter
cmp
cs
jns
jb
outsl
cld
das
lock
mov
xor
mov
pop
outsb
ja
call
pop
jno
push
arpl
ret
cmp
or
xchg
cmp
xchg
out
jle
in
jno
inc
shl
nop
fbld
inc
inc
out
incl
xor
mov
dec
xchg
mov
lea
sub
hlt
and
jno
aam
das
pop
std
cli
sahf
lahf
outsl
push
jg
jb
mov
sub
ljmp
fnstsw
mov
or
mov
popf
add
mov
jmp
add
cmp
and
sbb
xchg
stos
jnp
cmp
insb
decl
cmp
mov
sbb
xchg
mov
cwtl
sbb
jmp
sbb
xchg
sti
lcall
bound
je
sub
in
rorl
inc
enter
jo
mov
out
inc
andl
pop
mov
js
loop
mov
jbe
jg
test
mov
cmp
popa
andl
push
xor
incl
lcall
xchg
mov
jg
arpl
test
insl
mov
mov
fucomip
jmp
repz
icebp
add
pushl
arpl
sbb
xor
scas
loope
inc
out
mov
push
aam
loope
or
and
jno
sub
lods
lods
dec
bound
lcall
or
call
scas
jne
pop
call
xor
repnz
pop
mov
pop
dec
mov
push
pop
into
incl
mov
jmp
push
cltd
fisubrl
movsl
push
xchg
sub
dec
and
or
mov
es
lods
gs
xchg
pop
in
movsb
mov
inc
dec
addb
cmp
jg
mov
sub
push
mov
sahf
fdivrs
adc
sbb
jno
mov
test
fldlg2
jae
test
iret
push
mov
aam
repz
fnstsw
sub
pop
shlb
pop
sbb
push
testl
cltd
mov
dec
pop
insb
mov
jne
ret
aaa
jnp
push
and
into
xor
cld
mov
pop
popa
dec
add
pop
out
dec
pop
jne
mov
dec
sbb
scas
push
mov
loopne
out
int3
pop
pushl
pop
aad
adcl
cld
jl
nop
fucomp
out
cmpsl
sub
dec
dec
das
adc
and
int
sub
rcl
and
sub
ret
rcrb
xor
push
scas
cmp
fistl
mov
ljmp
call
push
dec
inc
or
mov
fucomi
iret
xchg
mov
mov
pushl
fwait
scas
push
popf
push
shl
xchg
ret
dec
mov
mov
inc
push
xchg
inc
ds
inc
jg
adc
mov
repnz
aas
rclb
fdivrl
int
mov
insl
dec
mov
lahf
mov
sarb
cmpsb
call
cli
mov
aad
int
xor
mov
mov
sbb
fildll
stos
ja
imul
mov
iret
mov
inc
std
jge
pop
movsb
rcrb
jns
sbb
lret
clc
mov
add
xor
cwtl
pop
outsl
cmp
pushl
or
int3
cmp
clc
gs
add
loopne
xor
pop
std
jmp
pop
mov
cwtl
xor
fs
std
inc
dec
lret
cmp
pop
cli
xacquire
mov
fcmovnbe
lea
fistpll
std
adc
adc
icebp
mov
mov
dec
stos
outsl
mov
adc
outsb
jno
jp
lahf
adc
push
std
add
pop
out
sub
dec
and
sbb
insb
lret
mov
js
inc
push
xchg
sub
loop
scas
loope
insb
and
and
push
lahf
xchg
rcll
out
add
push
lods
cmpsb
or
js
jmp
jno
outsl
cmc
insb
movsb
enter
push
jne
mov
incl
outsl
mov
xor
test
inc
arpl
ds
xor
dec
or
pxor
cli
dec
scas
add
cmpsb
mov
mov
icebp
push
jmp
out
mov
hlt
call
repz
adc
dec
push
sbb
push
fsubrs
cmp
loope
rcrb
imul
lods
sbb
or
imull
clc
in
cmpsb
ljmp
sti
xor
xchg
push
push
lods
mull
xor
popf
mov
cmpb
sar
xor
fldl
icebp
stc
popf
and
add
jp
arpl
mov
insb
pop
adc
out
iret
jge
lahf
mov
xor
sub
enter
xchg
push
aam
mov
jge
mov
pushl
icebp
cmp
sbb
fwait
mov
and
jle
vxorps
sub
dec
fidivrs
cld
hlt
jle
popa
aad
sar
lcall
sbb
mov
loop
and
or
lods
outsl
cld
pushl
cmp
jo
jmp
stos
test
or
fldt
pusha
das
js
inc
mov
push
clc
push
es
inc
inc
mov
mov
jg
jg
jns
das
inc
add
sti
scas
movsb
mov
pop
ja
mov
mov
inc
aaa
jecxz
inc
push
dec
test
pop
test
out
shrl
rorl
mov
arpl
cmp
ljmp
test
bound
ss
cli
xchg
add
xchg
fimull
push
lds
roll
inc
gs
inc
in
nop
xchg
fimuls
inc
xor
fwait
lcall
pop
aaa
mov
mov
mov
cmpsb
mov
insl
pushf
sbb
dec
inc
or
jne
and
ja
or
mov
inc
fistpl
push
bound
inc
push
mov
lret
mov
clc
lcall
xor
loopne
out
push
mov
xchg
orb
inc
aaa
and
fs
jl
xor
push
sbb
in
xchg
shlb
mov
in
sbb
jecxz
jns
lea
in
enter
in
adc
xchg
and
mov
cmp
push
cmp
mov
xor
or
ljmp
fsts
lea
test
mov
enter
jg
repnz
jmp
jne
xor
xor
fists
je
icebp
and
ljmp
iret
cmp
inc
lock
shrb
test
jne
lcall
sbb
loop
je
decl
pushf
or
adc
mov
sub
cs
or
jle
fs
vpsrlw
jb
ror
lds
in
imul
pusha
daa
mov
cmp
push
push
fprem1
cmpl
or
push
std
jg
mov
cmp
adc
and
imul
sahf
adc
flds
mov
mov
movsb
lret
xor
test
lock
mov
inc
push
dec
fwait
jnp
dec
xchg
out
das
lock
ljmp
sub
push
fwait
jl
negb
adc
xor
adc
add
mov
addr16
jle
lret
jnp
mov
mov
cmp
test
adcl
mov
repz
and
mov
push
mov
repnz
mov
xor
ljmp
mov
mov
aad
pop
imul
jg
mov
stos
fsub
mov
push
dec
dec
push
adc
sbb
ljmp
jl
add
xchg
in
mov
lea
lret
sbb
ret
es
vpand
lahf
insb
sbb
mov
cs
pusha
test
xchg
mov
nop
pushf
jbe
aaa
cmp
data16
cld
lahf
test
dec
xor
pop
mov
pop
aam
cmpsl
inc
das
loope
pusha
jge
lahf
xor
mov
mov
insl
jecxz
lods
cmc
xor
lock
push
fisubs
test
inc
adc
mov
cmp
bound
jb
inc
jno
push
push
add
std
test
pop
out
xor
and
orb
ss
mov
adc
jecxz
fwait
mov
clc
and
mov
mov
lret
lcall
lods
pop
in
xchg
test
or
lcall
notb
xchg
popf
in
jmp
xchg
and
inc
lock
je
je
xor
mov
shr
push
lock
outsl
lea
outsb
aam
es
sar
adc
std
cs
mov
inc
out
push
cmpsl
into
daa
or
into
out
ja
test
out
cmp
jne
test
incl
mov
cmpsl
push
and
push
int
call
lods
ret
pop
fadd
push
call
imul
mov
and
cmp
lds
ljmp
cs
aaa
std
stos
je
in
jg
imulb
ret
mov
lods
idiv
and
aas
ljmp
inc
testb
adc
sbb
xlat
mov
daa
dec
aaa
icebp
push
call
pop
push
sbb
daa
mov
aam
sti
pop
mov
or
sub
call
int3
and
cli
fstcw
or
mov
jno
loope
stos
adc
cmp
push
xchg
fnstenv
imul
stos
and
call
or
pop
mov
je
mov
fnstcw
pop
sbb
in
repz
aas
shrl
lret
andb
push
mov
jmp
dec
sub
xchg
jbe
sbb
outsb
sbb
ds
xchg
add
mov
xchg
jle
mov
push
iret
mov
leave
dec
popf
mov
jnp
push
les
gs
icebp
mov
ljmp
rclb
cmpsl
ljmp
cmpsb
in
push
sub
dec
dec
lcall
pop
cs
cmpsb
mov
mov
frstor
fildll
dec
rol
lea
cmp
jmp
rorl
data16
cmp
lcall
in
icebp
lcall
call
jl
movsl
dec
lds
push
outsb
movsb
mov
mov
call
and
mov
adcl
movsl
aam
prefetcht2
mov
lcall
jp
cli
mov
jnp
sub
mov
outsb
outsl
addl
cld
into
or
mov
aaa
cli
jmp
outsl
loopne
mov
pop
cltd
mov
mul
insl
sub
loopne
sub
decl
dec
xor
pop
dec
add
ljmp
cmp
xchg
push
fsubp
xchg
incl
xchg
mov
stc
sarb
push
sbb
mov
mov
dec
push
pop
fcmovb
fcompl
add
stos
loope
pop
mov
outsb
lock
pushl
pop
scas
adc
ficoms
push
mov
or
mov
stos
or
push
fldcw
xor
sbb
jge
sbb
mull
test
testb
pushf
cmp
jg
mov
sbb
mov
in
mov
rol
call
jmp
scas
das
dec
fdivrs
push
push
aaa
es
jo
icebp
mov
push
and
ljmp
or
add
loopne
call
xchg
dec
movsb
inc
jecxz
es
sti
adc
icebp
std
pushl
mov
inc
sbb
adc
push
cmpsb
fidivs
mov
mov
xor
fists
shl
arpl
mov
jge
jg
pop
out
sbb
stos
push
outsl
sub
iret
cmpsl
aam
mov
mov
mov
popf
jnp
inc
out
sahf
xchg
xchg
sub
xor
divb
sbb
add
incl
mov
imul
mov
flds
out
pushf
mov
adc
out
js
xchg
mov
jl
mov
scas
cmp
pusha
xchg
enter
cmpsb
lds
jmp
idivb
sbb
push
pushf
push
dec
fcmovu
fs
movsb
ja
add
sbb
stos
pop
gs
mov
data16
vmovupd
lcall
outsb
push
jae
jb
fcoms
scas
test
inc
and
cs
leave
leave
and
dec
add
ja
mov
pop
pushl
mov
cli
scas
and
sub
das
push
inc
pop
jb
enter
mov
outsl
pop
jns
and
xchg
loop
lcall
hlt
pop
sbb
lahf
cmpsb
cld
xchg
push
out
mov
jecxz
lcall
out
clc
cmp
push
sub
loope
aas
cmp
lds
jmp
jle
icebp
xor
lcall
insl
fistpl
jns
or
repnz
add
aaa
mov
adc
mov
paddq
xorb
adc
sbb
jl
jecxz
mov
ljmp
push
jns
xchg
inc
pop
inc
and
or
leave
mov
frstor
out
int
pop
xchg
push
add
mov
inc
sbb
pop
push
inc
add
pop
add
or
inc
repz
popa
push
inc
xor
sbb
add
adc
xor
inc
inc
dec
dec
mov
or
cmovl
add
inc
jb
or
adc
fisubrl
or
ljmp
in
or
fsts
arpl
adc
leave
adc
insb
adc
dec
outsl
fs
add
cmp
rorb
inc
orb
jbe
adc
jns
pop
insb
arpl
pop
jnp
int3
or
jo
stos
not
inc
pop
push
jb
sub
popa
push
outsl
dec
and
cwtl
inc
sbb
int
scas
sbb
sub
cmp
xor
inc
js
popa
cmp
jbe
repz
insl
mov
jo
loope
adc
push
outsb
add
sub
lods
imul
in
fisttpl
inc
inc
push
dec
andb
out
push
xchg
add
sub
dec
xchg
jbe
sti
mov
insl
jo
or
outsl
jbe
mov
add
or
idivb
or
addr16
gs
dec
or
push
add
xchg
addb
cmp
btr
push
cmp
faddl
mov
loope
fs
neg
sbb
in
imul
xor
movsl
dec
jne
cmp
or
insl
lcall
pop
adc
push
imul
push
push
outsl
sbb
push
fs
lret
popl
push
gs
mov
lret
mov
sti
fisttpll
mov
and
cmp
mov
cld
pusha
iret
push
outsl
insb
jne
xchg
pop
insl
lea
or
test
dec
popa
loopnew
fistpll
and
addl
popa
dec
pop
xchg
popa
out
int
dec
push
or
cmp
lret
push
dec
xor
push
xchg
sub
loopne
lds
xchg
or
out
and
push
push
daa
mov
pop
pop
lret
xchg
adcl
sarl
inc
loopne
popa
jne
or
pop
dec
adc
in
xlat
dec
and
push
jns
add
jmp
lds
inc
sahf
or
jnp
fs
in
add
adc
jae
push
mov
fcoms
push
jo
or
fs
popa
cmp
push
jle
or
inc
jmp
ret
imul
insl
and
adc
outsb
push
and
sbb
dec
push
addr16
lods
mov
cmpb
ret
sarb
repz
jmp
mov
xchg
dec
sbb
xchg
stc
pop
sbb
push
push
mov
adcl
add
sub
lcall
push
jae
mov
test
mov
jb
jo
push
pushf
push
mov
xor
popf
dec
gs
cmp
jo
pusha
sbb
or
bound
sub
bound
int
fstpl
in
cmp
shrl
adc
testl
cltd
and
jae
add
mov
lods
jmp
je
add
leave
ret
fisttpl
div
or
cmpsl
jb
push
dec
add
cli
or
push
xchg
mov
pop
imul
jge
iret
dec
jae
cltd
in
mov
jo
dec
push
lret
pop
pop
out
sub
or
jns
sub
popa
outsb
ror
popa
inc
inc
out
mov
adc
insb
addr16
fmuls
ret
adc
orb
dec
sbb
push
add
cmp
js
fsubrl
or
mov
xor
insl
lcall
ss
pop
aaa
pop
ss
push
fs
mov
fstps
ss
add
lods
test
leave
dec
inc
notl
fimuls
test
stos
mov
add
inc
or
push
inc
and
inc
adc
mov
outsb
notb
mov
jnp
adc
loopne
sidtl
add
or
roll
je
add
lds
popf
mov
or
ret
add
adc
xchg
cmp
or
clc
pop
in
test
add
call
in
or
hlt
das
add
adc
add
fildl
push
mov
je
sub
jmp
pop
into
xchg
les
and
shll
testb
sahf
daa
inc
sbb
shrb
lcall
flds
mov
add
loopne
mov
add
add
add
add
add
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
