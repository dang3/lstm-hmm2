das
stos
stos
xchg
add
ljmp
pop
or
or
and
adc
nop
nop
push
mov
test
and
adc
inc
add
pushl
adc
test
and
pusha
add
pop
add
or
dec
call
add
mov
or
iret
mov
inc
adc
push
or
and
add
pusha
inc
add
fbstp
mov
add
push
push
add
inc
lea
add
mov
pushl
loop
sar
pop
add
sub
ja,pt
add
lea
sub
lcall
fs
push
sbb
cmp
jge
mov
mov
add
jg
add
andb
mov
dec
add
inc
mov
add
inc
mov
add
or
mov
fadds
pop
leave
ret
sub
push
outsl
push
inc
mov
in
into
dec
push
inc
add
idiv
pop
dec
xor
inc
leave
ret
push
xor
jmp
xchg
dec
fildll
push
dec
jae
sub
push
mov
push
jmp
push
push
lea
push
call
add
fs
lock
inc
sub
rolb
lock
pushl
pop
pop
fcoms
sbb
mov
cmp
std
out
dec
jo
push
fmuls
fld1
mov
pop
int3
shll
sub
fisubrl
cli
dec
pop
jbe
adc
dec
add
sub
mov
sbb
inc
aaa
imul
mov
dec
inc
pop
outsl
ss
jmp
add
mov
add
mov
call
lret
es
push
push
jmp
inc
inc
sbb
outsl
js
cwtl
xchg
bound
push
ds
or
call
adc
ret
imul
mov
pop
jb
dec
dec
movsb
dec
call
dec
in
xchg
pop
xchg
clc
push
lea
push
call
fiaddl
fcmovne
mov
push
push
cmp
inc
dec
test
jbe
insl
dec
clc
xchg
nop
mov
sarb
add
roll
insl
dec
js
or
rorl
dec
push
insl
ss
push
mov
inc
push
xor
out
bound
dec
inc
jb
jg
orl
inc
push
jae
ss
hlt
mov
cmpsb
push
cwtl
and
add
pop
imul
mov
loop
cmp
xor
je
and
pusha
in
idivl
mov
sub
insl
lret
aaa
sbb
popa
add
ss
lock
mov
dec
push
dec
dec
adc
call
in
xchg
push
sub
sbb
js
xor
arpl
repnz
call
push
repz
push
inc
xchg
dec
dec
xor
ret
jo
mov
mov
push
aam
add
adc
add
or
js
or
cli
jl
fwait
out
push
mov
jle
inc
cmpsl
add
call
roll
dec
mov
xor
jnp
shrl
mov
sub
inc
or
or
out
es
push
push
lret
movb
push
aaa
push
ret
js
fwait
lods
dec
pushf
andb
adc
or
fisubrs
jno
rcrl
push
mov
sub
test
jae
jns
inc
mov
or
push
lret
dec
cmp
sbb
outsb
pop
aaa
or
stc
and
fucomip
pop
or
dec
dec
pop
mov
inc
dec
loop
mov
dec
add
int3
jne
mov
mov
jp
imul
hlt
sbb
ja
cwtl
pop
xor
sub
push
push
imul
sbb
jnp
std
incb
xchg
ds
cwtl
inc
mov
xor
pop
scas
jns
jae
stc
shll
je
cwtl
jmp
xor
mov
inc
push
push
cld
mov
dec
inc
push
dec
push
sub
dec
shrl
mov
outsl
dec
insl
rolb
js
mov
mov
jbe
inc
jmp
jmp
fs
mov
xor
dec
dec
popa
outsb
cld
mov
sub
addr16
dec
cld
jne
jg
dec
dec
inc
cli
ret
push
dec
imul
fisttps
xor
enter
jmp
xlat
pop
mov
outsb
je
out
rcll
je
daa
cli
js
pusha
push
push
add
jno
jbe
cwtl
or
push
loopne
popa
push
fs
clc
push
sti
sub
add
pop
lods
inc
lcall
mov
dec
inc
imul
outsl
popa
call
push
mov
inc
aam
negl
pop
lock
mov
ss
inc
shlb
aaa
mov
sbb
outsb
push
gs
jo
rol
insl
gs
aaa
mov
inc
push
jno
outsb
push
call
cmp
mov
loop
fsubr
jne
inc
outsl
in
dec
jno
je
testb
push
add
pop
and
loopne
and
cs
push
dec
push
add
pop
jl
dec
pop
scas
call
out
arpl
jp
inc
inc
inc
repnz
es
sbb
stos
shr
movsb
ror
push
arpl
jns
std
loopne
call
jb
or
jbe
loopne
pop
js
push
add
or
and
push
inc
xor
dec
clc
mov
cmpb
xchg
jne
cmpsb
add
and
push
movsl
cli
orb
jno
push
dec
add
nop
fisubrl
jno
imul
cmp
mov
add
addl
imul
inc
jbe
ja
cmp
call
popl
pop
cltd
inc
xor
test
loope
sbb
es
xor
in
mov
add
push
xor
push
sahf
js
inc
dec
dec
popa
and
ja
ss
jbe
xchg
mov
mov
push
call
push
fwait
or
jl
or
jbe
insl
fildl
das
or
lret
jb
pushw
push
add
push
xor
pop
pop
push
push
mov
push
ds
arpl
repnz
mov
and
jo
rcr
jmp
jae
jb
ds
mov
xor
push
sub
in
add
sub
pop
push
js
rolb
mov
cld
mov
repnz
dec
jbe
mov
ret
inc
xchg
jo
outsb
sub
cli
jae
jns
in
lock
fadds
pusha
lock
push
movsb
cwtl
jl
fs
adc
mov
mov
adc
jne
dec
insb
rcl
jmp
hlt
aaa
xchg
in
push
call
std
mov
mov
sbb
icebp
xchg
push
pushl
rcrl
es
ret
or
daa
and
pop
jo
mov
test
push
pushf
mov
push
cld
addr16
mov
in
clc
push
clc
subb
push
pop
xorb
call
fistpl
inc
sub
insb
xor
outsl
push
inc
mov
ja
out
or
mov
in
push
jne
push
inc
inc
mov
mov
inc
dec
lock
adc
push
inc
dec
push
cmp
dec
and
test
fwait
sub
add
adc
shr
cwtl
cmc
inc
jbe
inc
lock
push
push
cmp
mov
xchg
mov
add
dec
outsb
pop
js
dec
test
pop
lret
jbe
and
or
add
mov
jo
sub
adc
lock
push
imul
jbe
adc
push
or
or
out
push
push
inc
xor
mov
inc
fs
jb
out
xor
mov
bound
nop
enter
mov
cwtl
push
fsub
ficoms
insl
jb
pop
cwtl
add
push
push
jns
mov
mov
push
push
dec
lods
bnd
mov
std
insb
mov
das
ret
inc
mov
dec
shl
xchg
div
sbb
mov
xor
nop
sbb
shll
subb
mov
dec
sbb
inc
pop
pop
cltd
dec
es
dec
push
cmpsl
rclb
stos
mov
push
jb
data16
cmp
sbb
movsl
cmp
or
cmp
inc
jmp
cmp
bound
lock
jecxz
lods
vmread
js
mov
outsb
ffree
arpl
add
fisubs
sti
dec
aam
lret
scas
xchg
testl
sqrtps
shr
fs
add
inc
inc
aaa
sbb
inc
pusha
pop
sbb
loopne
hlt
sub
mov
or
bound
outsb
and
pop
inc
ja
lock
cmc
je
inc
xor
mov
arpl
inc
mov
xchg
cmp
jp
popa
cwtl
jb
fadds
inc
or
mov
or
adc
stos
pusha
add
call
jno
ret
or
test
or
in
insl
nop
insb
lock
mov
push
jle
xchg
adc
cs
cmp
ljmp
dec
pop
jne
clc
fdivl
ja
hlt
ja
dec
inc
dec
shr
inc
outsl
stos
sub
dec
fs
push
jo
dec
rorl
insl
test
les
mov
push
dec
imul
mov
inc
push
mov
cld
cli
test
mov
ss
jo
add
inc
xor
divl
arpl
jmp
mov
jmp
jns
mov
or
mov
adc
lahf
insl
sbb
out
idivl
mov
es
jno
and
inc
dec
loop
pop
lds
sub
push
inc
dec
int3
into
xchg
adc
das
cs
pop
aas
subb
sub
lods
dec
aaa
clc
inc
sarl
out
pop
popa
jae
gs
call
testb
and
inc
mov
inc
outsb
rorb
cli
push
dec
fs
pop
push
js
push
dec
dec
inc
gs
bnd
pushf
add
mov
imul
stc
cld
addr16
mov
push
push
dec
mov
inc
dec
mov
dec
xorl
xor
adc
pop
dec
mov
jbe
lods
clc
sub
jp
sbb
cmp
in
call
dec
inc
sub
ljmp
es
add
stos
icebp
jp
data16
mov
push
cli
in
xor
add
incb
jmp
add
xchg
push
jmp
jbe
xor
fimuls
inc
cmp
jbe
add
into
xor
adc
sbb
mov
adc
aam
push
cmpsl
lock
cwtl
roll
idivb
hlt
mov
mov
push
jge
push
je
repz
inc
outsl
push
sub
xchg
imul
add
pop
call
push
inc
cmp
sbb
iret
push
cmp
test
inc
xchg
xchg
add
ror
inc
rcll
outsb
mov
mov
loop
push
inc
shr
dec
dec
push
xor
cmpsb
add
dec
push
mov
xchg
pop
lock
cwtl
or
scas
and
jno
and
dec
shlb
xlat
hlt
push
dec
cwtl
ficomps
push
push
xor
jmp
mov
lcall
js
push
inc
push
push
data16
in
in
aam
sti
mov
dec
add
xlat
mov
negl
insb
nop
jmp
bound
shll
cld
out
fs
in
in
dec
outsl
out
roll
inc
xor
jns
stos
adc
sbb
pop
xor
cmp
sub
arpl
jns
clc
pop
aas
rorb
push
flds
sarb
rcrl
jbe
xchg
rcll
pop
leave
das
push
dec
cmp
ds
rorl
ror
sar
fimull
clc
andb
mov
add
mov
xlat
inc
dec
mov
aaa
imul
adc
adc
int3
ss
ret
call
stos
test
mov
inc
shrl
mov
push
jb
or
xlat
lock
sets
repz
push
pop
or
xor
inc
imul
push
lods
pusha
dec
mov
sbb
hlt
lcall
xor
sahf
mov
push
mov
push
sti
adc
fldcw
loop
push
xor
ret
mov
addb
lock
and
xlat
jno
in
inc
dec
inc
dec
in
push
int3
mov
outsb
push
call
dec
adcl
fcmovbe
js
push
jb
loopne
or
cmpsb
xlat
push
les
push
insb
jns
call
push
push
outsl
roll
dec
jge
inc
mov
int3
inc
call
sbb
lret
push
lcall
dec
or
fs
popa
ss
push
outsb
push
push
push
jle
add
mov
in
movb
shlb
ds
mov
adcb
jmp
inc
push
push
jo
imul
cmp
icebp
cmp
lods
cmp
add
pop
push
gs
cmp
data16
add
inc
test
insb
cs
bound
dec
rcl
inc
mov
push
inc
xor
jle
mov
ds
pushf
daa
add
dec
ja
push
fisubrs
movsl
rolb
dec
call
adc
mov
push
jnp
push
dec
add
jge
mov
xchg
jns
imul
mov
cmp
push
jbe
push
shrb
daa
flds
and
call
adc
test
call
mov
dec
ja
dec
mov
pop
mov
ljmp
movsl
mov
jb
ss
idivb
pop
hlt
lods
dec
inc
cmp
xor
push
sbb
in
push
and
or
test
inc
pop
push
bound
jo
push
fadd
inc
xor
inc
pop
inc
rorl
and
out
mov
sbb
push
push
jae
jns
fcmove
clc
and
cmp
testl
movl
int3
shl
rclb
inc
jnp
in
adc
stos
mov
xchg
sbb
sub
inc
jbe
ret
push
push
mov
mov
push
aaa
adc
mov
daa
push
dec
xchg
roll
and
adc
sbb
lock
xor
sub
push
mov
rcrl
jne
pop
mov
insl
xor
cmp
outsl
dec
inc
inc
enter
xchg
pushf
push
inc
inc
cmp
in
adc
cmp
je
dec
outsl
dec
mov
or
lret
sbb
xchg
pop
fs
jbe
popa
push
jne
push
push
je
cwtl
dec
jmp
ret
jg
dec
push
movsb
dec
call
xor
cmp
arpl
inc
lock
push
sbb
out
pop
je
rcll
or
pop
cmp
pusha
shlb
popa
mov
daa
fs
dec
push
sub
clc
fdivl
mov
sti
leave
push
push
mov
in
fldt
sub
cltd
push
popf
mov
out
jne
jae
hlt
xchg
mov
das
sub
enter
sarl
push
ret
xor
jmp
cmp
fisubs
adc
aas
loope
mov
ret
inc
dec
push
aaa
mov
inc
adc
jbe
pop
in
xor
sbb
pop
or
test
push
jmp
dec
mov
adc
inc
pop
jmp
cli
ret
xor
repnz
aad
push
dec
dec
stos
imul
add
add
sub
mov
xchg
sub
pushf
inc
aas
test
jb
mov
jg
pop
pop
outsb
jno
jb
pop
mov
fwait
addl
loop
insl
inc
in
add
aaa
je
nop
call
gs
or
jbe
int3
add
xchg
cs
movsb
sub
lock
outsb
mov
push
ja
add
or
jo
shlb
mov
and
ret
fsubs
iret
fdivrl
mov
mov
push
mov
xor
movsl
dec
orb
fiaddl
dec
add
jne
mov
cwtl
in
or
mov
data16
shlb
push
push
inc
dec
cli
test
sbb
sub
in
add
enter
dec
je
pop
adc
sub
clc
inc
or
cmp
mov
rol
xchg
inc
pop
ds
in
jp
inc
mov
jp
jg
push
xor
movsl
fs
pop
in
mov
or
jl
popf
leave
push
push
mov
loop
mov
out
mov
xor
sbb
lods
clc
aaa
lock
push
push
pop
fimull
dec
ss
mov
add
jo
lds
fs
mov
xchg
jmp
jg
add
pop
add
jle
xlat
pop
enter
inc
test
add
dec
pushf
ss
arpl
ss
shrb
hlt
or
cmp
dec
js
ja
loopne
mov
dec
js
inc
out
push
in
mov
ja
dec
es
dec
test
xor
call
pop
scas
aas
insb
stc
xchg
jl
jne
rorl
imul
jne
add
adc
push
aad
cmp
test
bound
xor
mov
dec
ja
fldenv
popf
push
jecxz
jb
mov
pop
dec
adc
dec
inc
arpl
xor
push
mov
pop
mov
aaa
sub
arpl
xor
lret
roll
roll
mov
gs
ljmp
in
aam
sbb
iret
test
mov
xchg
or
jl
inc
inc
dec
or
jb
dec
pop
pop
imul
inc
pushf
and
xor
sub
fidivs
nop
push
pop
cmpsl
loopne
in
ud2
dec
sub
cmp
adc
insb
data16
inc
in
jp
out
or
or
push
ljmp
fcompl
adc
test
mov
push
lock
dec
mov
roll
test
in
mov
dec
ret
insb
cmp
push
rolb
pushf
bnd
outsl
dec
sub
push
in
adc
push
lea
push
jae
ljmp
int3
mov
outsb
mov
aaa
push
adc
mov
ja
icebp
test
jb
push
out
bound
jae
repz
mov
and
in
sti
lock
lds
sbb
push
push
mov
es
imul
push
outsl
jbe
loopne
cmc
adc
adc
js
not
scas
sbb
jb
xor
push
arpl
add
cli
push
mov
dec
in
scas
sub
stc
popa
jmp
jnp
clc
lods
pop
pushf
stc
xchg
testl
cli
inc
adc
call
jmp
fidivs
dec
lret
jo
jge
dec
sahf
cmp
mov
inc
pushf
adcb
inc
mov
xchg
push
cwtl
push
aaa
and
push
loope
and
jmp
inc
inc
pop
sarb
jae
push
arpl
mov
sbb
cmp
pusha
adcb
shrl
decl
addl
out
enter
adc
in
add
test
xchg
je
andb
cld
jmp
mov
in
dec
jo
nop
outsb
gs
movsb
or
push
mov
imul
pop
pop
inc
outsb
inc
xor
das
jle
jmp
jp
stc
dec
add
dec
leave
pushf
subb
shlb
pusha
fadds
add
and
inc
or
repnz
push
dec
pop
mov
pop
cmp
pop
xor
jno
push
push
adc
test
push
adc
xor
lcall
inc
dec
mov
jbe
jecxz
mov
adc
stc
mov
insb
fldenv
sbb
jo
addr16
jb
pushl
inc
jae
insb
sub
icebp
pop
jp
inc
fdivrs
or
fs
dec
ret
imul
jne
dec
jae
or
imul
cld
xlat
jecxz
enter
shr
add
aaa
ss
dec
push
jo
push
cmp
push
mov
mov
adc
cld
out
rcrl
aas
roll
mov
mov
dec
jno
inc
sbb
dec
inc
jbe
fs
pushf
sbb
mov
push
outsl
into
inc
int
jl
push
cmp
es
pop
loopne
lea
dec
cmp
pop
xchg
push
daa
lcall
jle
jo
cmc
ret
inc
xor
imul
push
movsl
add
add
jecxz
or
ret
mov
mov
mov
insb
in
ror
hlt
pop
rcr
iret
xchg
iret
jl
je
jns
neg
push
sub
js
pop
push
push
adc
iret
pop
jg
into
dec
popl
mov
insb
xor
popa
fisttpl
mov
movsb
rclb
add
inc
xor
dec
add
pop
cwtl
clc
loop
out
jo
push
push
addr16
push
jmp
fdivl
clc
or
add
mov
inc
or
cwtl
call
les
js
add
and
pop
arpl
out
dec
add
fld1
pop
in
into
push
sbb
inc
rcrl
push
mov
add
call
or
push
sbb
lock
jo
sub
xlat
lock
pop
mov
les
sbb
cmp
lcall
shr
xchg
inc
lods
out
xor
add
pusha
add
fdivrl
xor
cmp
mov
gs
sarb
test
test
mov
push
dec
cmp
push
push
fwait
fwait
mov
push
jbe
lret
or
xorb
dec
rolb
rcr
mov
je
gs
js
stos
subb
in
in
in
lds
lods
jo
pop
dec
js
pop
bound
inc
or
mov
dec
sub
dec
loopne
arpl
adc
enter
out
xchg
lock
inc
pop
testb
and
enter
cwtl
add
mov
lcall
inc
out
dec
xor
clc
push
inc
push
lret
pop
jnp
enter
dec
pop
dec
fiadds
mov
sahf
incb
pop
andb
push
rcll
mov
scas
xorb
dec
out
cmp
or
xor
sarl
das
mov
std
repnz
inc
data16
inc
pop
pop
rcrb
pop
orb
in
xor
sarb
jno
out
inc
push
outsb
push
fldl
mov
mov
pop
pop
or
decb
jo
pop
dec
mov
shll
ljmp
inc
call
js
push
lock
int
add
aaa
insb
insb
imul
aaa
fmuls
rcrl
or
lock
inc
test
dec
xchg
push
lock
or
in
in
sbb
ljmp
movsl
cs
ret
xchg
pop
scas
mov
mov
outsb
push
inc
mov
add
enter
xlat
aam
outsb
sbb
das
test
or
mov
lds
sub
stos
je
pop
mov
pop
bound
push
sbb
sbb
sysexit
icebp
push
sarl
lret
out
cmp
or
test
dec
inc
aam
fs
lret
mov
popa
call
cmc
inc
das
loopne
pop
jecxz
call
ret
push
push
cwtl
push
mov
es
pop
push
jne
inc
push
mov
cld
call
mov
test
arpl
xor
mov
jae
je
dec
pusha
jb
outsl
jne,pt
add
cmpsb
repnz
adc
int
pop
xor
mov
lea
lds
fimuls
push
cmc
movsb
push
ret
sbb
rorl
jl
iret
out
fs
pop
and
pop
pop
loop
lret
adc
mov
xchg
roll
iret
push
jge
movsl
mov
inc
fisttps
inc
dec
or
add
movsl
je
pop
or
xor
rclb
inc
xor
pop
stc
adc
add
incl
int3
adc
cld
aas
repz
add
inc
add
popa
add
and
je
jns
neg
aas
dec
add
jo
jae
or
dec
add
fdivr
out
ficoms
outsb
sub
cmp
imul
add
add
add
adc
js
insl
push
arpl
jns
pop
pop
popa
push
imul
push
push
xor
std
call
xor
push
xchg
add
pop
add
inc
les
mov
sub
das
imul
in
jle
cmp
sub
ds
or
add
add
xchg
jmp
jne
je
and
xlat
add
add
lcall
in
sahf
pop
outsb
jae
dec
outsb
pop
push
int
jg
adcb
mov
inc
aaa
subb
add
xchg
jbe
pop
ret
test
incl
add
add
and
jbe
fs
iret
add
add
add
aas
add
test
add
fildl
and
outsl
push
ja
jg
add
cmp
mov
outsb
arpl
push
jbe
cld
push
dec
pop
xor
inc
pop
repnz
xchg
add
add
add
pop
jnp
mov
insb
cmp
push
aaa
pop
push
outsl
dec
jb
ja
dec
jb
xor
arpl
popa
xor
jmp
push
jne
jbe
dec
inc
cmp
cmp
dec
push
push
push
push
insb
ja
inc
push
arpl
pushl
std
jb
data16
jb
dec
jne
bound
dec
inc
dec
insl
jno
push
pushl
jb
outsl
popaw
jns
bound
push
jns
imul
dec
push
pop
push
inc
insb
imul
pushl
jno
push
dec
addr16
xor
inc
xor
xor
jo
push
push
pop
arpl
push
dec
inc
inc
inc
inc
bound
gs
inc
inc
jo
xor
xor
push
inc
push
inc
outsb
ja
in
pushl
bound
aaa
dec
mov
push
push
fs
imul
pop
insl
push
pop
clc
ljmp
push
jne
dec
xor
jb
push
cmp
push
inc
dec
jne
fs
inc
insl
push
xor
ss
add
push
xor
push
xor
push
mov
mov
imul
dec
jbe
jno
dec
imul
adc
push
in
fs
inc
dec
inc
ja
js
mov
mov
jae
xor
xor
inc
push
push
inc
jne
outsw
in
mov
push
push
jb
inc
jae
push
inc
cmp
decl
outsb
jb
jb
dec
dec
nop
outsl
jae
inc
xor
jne
inc
inc
je
push
dec
shll
arpl
gs
push
inc
ss
mov
jg
push
je
dec
jb
insb
inc
bound
dec
push
cmpsb
bound
dec
push
outsl
clc
pushl
outsl
push
imul
pop
inc
inc
js
je
inc
inc
push
inc
push
imul
inc
push
clc
incl
xor
push
insl
je
inc
je
push
gs
inc
ss
jb
insb
clc
pop
mov
outsl
outsb
xor
fs
xchg
addr16
inc
out
ss
inc
push
dec
xor
fisttps
clc
clc
aaa
jns
jbe
inc
jae
xor
lret
inc
ret
mov
push
push
cs
cmpsb
jo
xor
sbb
jg
dec
gs
outsb
xor
xor
dec
popa
push
xor
loop
inc
pop
popa
ss
inc
addr16
push
jno
pushf
aaa
imul
popa
dec
xor
or
pop
jne
jne
xor
les
jae
dec
dec
gs
xor
pop
test
push
dec
inc
dec
inc
cmp
sbb
cld
adc
inc
jae
push
inc
inc
inc
addr16
push
xor
sbb
outsb
inc
dec
push
jbe
subb
jbe
push
dec
add
inc
push
dec
dec
pop
dec
jo
mov
inc
jne
push
jbe
insb
mov
jbe
mov
push
popa
bound
cmp
fistl
es
jno
inc
rolb
dec
dec
outsl
jb
dec
jbe
outsb
outsl
clc
push
dec
push
inc
imul
jno
inc
push
jbe
pop
push
and
call
imul
adc
ss
jns
cli
or
stos
xor
imul
aaa
xor
insl
insl
fisttps
dec
inc
push
in
dec
inc
jp
or
dec
push
xchg
push
addr16
inc
pop
outsb
aaa
loop
xor
jmp
sbb
pushw
dec
insl
adc
push
jns
popa
push
inc
pop
push
jbe
pop
jae
jno
push
or
imul
je
sbb
dec
xor
addr16
aaa
push
dec
insb
scas
dec
sti
outsl
mov
lret
insb
test
push
outsl
push
outsb
inc
pop
outsb
data16
pusha
stos
js
jae
gs
nop
js
das
jo
dec
outsb
bound
inc
jo
dec
js
out
mov
gs
cmp
inc
jns
push
mov
jns
pop
push
nop
jbe
mov
pop
add
popa
dec
jbe
jno
dec
dec
cmp
gs
push
cmp
push
dec
jae
jo
push
dec
jo
insl
sarb
addr16
push
jb
dec
rolb
push
test
arpl
adc
add
clc
inc
dec
cmp
cmpsb
pop
icebp
xor
bound
push
push
inc
jae
mov
mov
inc
push
je
inc
pop
adcb
pop
lock
ja
xor
addr16
outsl
push
call
sub
dec
je
push
popa
fs
dec
lcall
inc
cmp
push
jne
dec
js
jns
shr
insb
jns
imul
lock
incl
push
subb
jne
jbe
aaa
pop
xor
or
push
dec
jns
popa
xchg
js
outsb
insb
adc
les
mov
or
test
jbe
pop
xor
inc
push
cmp
insb
aad
pop
cmp
popa
out
inc
aaa
inc
push
push
jb
inc
jg
cs
dec
inc
or
xor
cmp
pushf
bound
pop
das
cli
push
pop
push
push
js
inc
xor
xor
pop
insb
cwtl
in
scas
mov
jno
jae
jo
ficoms
lock
ljmp
pushw
xchg
pop
test
scas
push
cmp
cmp
and
mov
or
jns
dec
mov
dec
jb
push
xor
adc
stos
xor
outsb
mov
insl
outsl
pop
dec
mov
gs
insb
insl
jb
push
ss
sbb
movsb
insl
data16
xor
jae
pushl
cmp
or
popa
outsl
ss
pop
dec
xor
popa
sub
lcall
xor
push
push
add
addr16
imul
add
dec
loopne
fs
push
push
sbb
popa
dec
hlt
gs
jo
jg
push
xorb
push
push
push
cmp
dec
push
inc
inc
loope
push
mov
sbbb
dec
test
inc
inc
jle
jns
push
outsb
push
outsb
push
and
fs
pop
dec
push
dec
xor
ja
cld
xor
xor
jb
jae
pop
adc
push
jmp
dec
aam
jp
data16
push
sbb
fs
orb
cmp
imul
sarb
push
push
push
gs
xor
bound
xor
and
insb
out
add
push
dec
dec
insb
xor
xchg
je
mov
dec
xchg
adc
fwait
sub
cmp
ja
cld
sbb
xor
out
jp
cmpsb
push
aam
push
in
je
xor
inc
jno
xor
loopne
loop
outsl
js
inc
mov
dec
lods
lock
xor
ss
inc
push
push
mov
mulb
cmp
fimuls
add
jae
pop
xlat
pop
sbb
insl
xor
dec
insb
add
push
dec
repnz
ja
push
imul
mov
pop
add
imul
push
cmp
ja
xor
push
lock
dec
xchg
loopne
xor
xor
mov
pop
data16
outsl
rclb
insb
xor
and
xor
push
loopne
stos
push
scas
gs
insl
dec
pop
lods
push
dec
mov
aad
inc
push
fs
push
add
inc
mov
imul
fmuls
fs
push
pop
lock
imul
data16
or
push
or
jb
mov
push
jno
inc
xor
arpl
push
inc
push
push
push
lods
ljmp
add
inc
push
lock
std
push
ret
popa
inc
subb
dec
js
push
push
inc
popa
xor
mov
push
dec
ljmp
cli
fwait
or
dec
cld
push
push
dec
inc
push
xor
cwtl
add
pop
fs
push
aaa
inc
ja
lcall
sahf
push
dec
repnz
sarl
pop
arpl
push
jae
jae
mov
jno
xor
xchg
loop
dec
inc
xor
push
int3
fsubs
lcall
push
adc
imul
xor
xor
lcall
jo
notb
inc
popa
xor
push
or
xor
arpl
pop
fs
mov
inc
dec
jno
movsb
cmp
sti
sbbb
pop
inc
arpl
xor
cld
push
push
aad
dec
ss
arpl
push
push
dec
pusha
pop
or
xor
jo
push
mov
adc
ja
push
outsb
ljmp
push
dec
push
inc
dec
arpl
inc
in
fsubl
adc
ja
push
mov
aaa
mov
ja
ficoml
gs
xor
aaa
inc
stos
das
push
push
push
jbe
out
insb
mov
stos
mov
jns
xor
inc
mov
in
pop
and
dec
fs
js
dec
imul
jne
je
ss
stos
push
shlb
push
push
aaa
bound
jg
inc
imul
jne
je
pop
inc
xor
push
ja
inc
jb
cmpsb
add
jbe
dec
fiadds
movsb
push
dec
data16
addr16
pop
xchg
jmp
cs
dec
xor
push
je
js
xor
jb
arpl
je
fidivs
xor
dec
outsb
inc
push
mov
cmp
inc
les
adc
ja
push
jbe
xor
xor
insl
push
sbb
adc
addr16
or
add
aaa
jne
push
adc
add
xor
daa
push
inc
xchg
jle
dec
dec
jne
lock
add
es
add
jb
je
mov
hlt
jle
jbe
adc
push
push
dec
dec
xchg
push
stos
xor
jb
mov
push
mov
push
jne
jb
inc
ljmp
outsb
inc
xor
gs
stos
jns
jns
dec
aaa
xor
test
sub
mov
push
shlb
dec
ja
outsl
pop
outsl
jno
dec
inc
imul
js
insl
inc
dec
jp
dec
dec
ja
fbstp
sub
js
inc
dec
dec
jo
xor
fsubr
imul
test
imul
pop
in
jns
insl
sbb
push
ss
push
or
test
mov
outsl
int3
dec
inc
xor
int3
push
inc
or
pushf
push
std
push
push
pop
lret
push
push
jno
jb
add
adc
push
inc
dec
dec
push
icebp
sub
jo
fdivr
xor
inc
inc
stos
pop
jne
fildl
or
rcl
mov
xor
jns
dec
lcall
mov
inc
fs
dec
push
addr16
xchg
sub
push
push
int3
pop
sti
lods
jmp
inc
fsubrs
addr16
push
xor
dec
add
jbe
imul
pop
popa
js
inc
jbe
fimull
mov
fidivs
mov
pop
inc
insb
inc
insb
lcall
notb
push
jge
xor
push
bound
push
push
inc
or
jbe
mov
cmpb
ficoml
push
cmp
std
push
xor
imul
enter
add
jmp
aaa
push
inc
arpl
outsb
insb
mov
mov
xor
and
push
test
dec
cmp
mov
pop
push
mov
jo
sub
inc
xchg
jae
mov
lret
fidivrl
dec
popaw
je
mov
outsb
imul
or
add
popa
bound
bound
inc
or
sbb
arpl
add
inc
push
fs
gs
inc
xor
jbe
push
cld
push
enter
bound
or
dec
outsb
pop
fs
shrl
gs
gs
dec
popa
dec
inc
inc
jns
int3
fwait
jp,pn
ss
pop
dec
gs
sbb
data16
fdivrp
push
bnd
js
dec
imul
popa
push
xor
jbe
or
sahf
pop
mov
mov
dec
push
mulb
and
inc
mov
addr16
mov
jbe
push
push
pop
and
or
xor
outsb
xor
loop
movl
jno
jno
jae
xchg
lods
lock
jo
xor
outsl
je
inc
aaa
jge
sbb
loop
dec
dec
js
mov
jne
mov
push
insb
xor
insl
inc
xor
jo
gs
jbe
ret
outsl
mov
push
inc
push
dec
ficoms
or
xor
dec
xor
in
fisttps
push
push
outsb
cmp
outsl
mov
dec
inc
outsb
jae
pop
jns
xor
sti
aaa
mov
jne
inc
inc
pushw
push
inc
jne
push
insl
dec
bound
inc
cmc
incl
jne
xor
jo
popa
je
das
sub
nop
cmpsb
insl
ret
arpl
cmpsb
jg
cmpsb
inc
movsb
dec
bound
dec
addr16
push
inc
push
inc
xchg
push
loop
imul
pop
xor
fadds
xor
icebp
mov
or
push
dec
insb
aaa
insb
dec
lea
cld
pop
insb
jne
xor
jo
jns
jb
lret
sbbb
xor
lret
ss
push
scas
push
je
inc
jne
xor
or
push
inc
mov
push
inc
jne
jae
jo
incb
cmp
aaa
jb
jb
imul
adc
xor
sub
pop
mov
dec
arpl
inc
jbe
imul
push
jge
jb
inc
dec
addr16
inc
jno
inc
dec
das
push
or
push
imul
pop
and
push
dec
mov
dec
lock
in
ljmp
inc
fs
bound
xor
xor
or
add
loopne
insb
bound
push
ret
push
insl
push
inc
inc
inc
cmp
push
push
js
inc
dec
mov
dec
bound
stos
mov
xchg
xor
mov
in
or
outsl
mov
repnz
push
cmpsb
dec
mov
push
cmp
xor
out
dec
gs
insl
cmp
stos
adc
cli
inc
jae
xor
insl
subl
sub
and
and
push
imul
push
xchg
fnsave
inc
push
xor
jmp
aaa
dec
push
dec
push
outsl
mov
test
mov
dec
jae
push
push
dec
aaa
push
outsl
fsubs
mov
xor
push
lds
inc
aad
xor
fs
or
jb
sub
dec
inc
popa
sarb
xor
xor
ret
jbe
aaa
xor
sub
mov
push
ja
xchg
je
xor
cld
inc
jle
jae
xor
xor
jno
test
push
pushf
jno
dec
arpl
inc
insl
inc
dec
push
pusha
test
jne
xor
adc
cs
cmpsb
adc
outsb
or
push
jb
mov
push
insb
fs
dec
push
push
adc
push
dec
jno
inc
dec
imul
inc
aam
or
inc
cmp
imul
pop
xor
shl
incl
dec
push
bound
les
dec
jb
dec
arpl
and
pushl
arpl
dec
xor
outsl
dec
mov
decl
dec
imul
jb
pop
dec
pop
push
lock
leave
pop
sbb
jb
inc
inc
ss
int3
dec
mov
push
push
inc
add
pop
lock
bound
mov
xor
jb
mov
push
push
xor
sub
cmp
hlt
xor
push
xor
sub
js
dec
insl
xor
cmp
xchg
inc
aad
ja
push
inc
pop
push
aam
sbb
jg
ja
inc
imul
gs
push
js
popa
dec
dec
xor
inc
mov
ss
push
aam
popa
aam
cld
mov
jo
gs
int3
dec
dec
jo
push
pop
lock
je
sub
push
fs
outsl
popa
dec
popa
xor
ss
loopne
push
cs
nop
inc
ja
sbb
int3
inc
fs
xor
ds
inc
out
xor
dec
fwait
mov
cmp
adc
push
dec
js
xor
inc
inc
in
dec
mov
movl
shlb
xor
lock
mov
dec
jae
push
gs
jbe
inc
pop
icebp
pushl
dec
aaa
xor
push
je
dec
xor
inc
sub
dec
push
pop
add
dec
push
arpl
sbb
gs
jno
jbe
gs
dec
test
mov
mov
outsb
dec
je
mov
ss
dec
imul
xchg
ja
jns
dec
test
dec
arpl
aaa
pop
arpl
xor
mov
or
jno
jns
outsb
mov
insl
inc
gs
imul
sbb
mov
je
sub
je
push
xchg
or
stos
jle
dec
imul
jbe
jne
dec
fs
cmp
pop
movsb
pop
cli
jne
inc
push
add
dec
cmp
sbb
xor
xor
inc
push
dec
push
cmp
call
ret
decb
imul
push
inc
arpl
addr16
or
inc
push
inc
dec
jle
push
xchg
sbb
js
inc
push
dec
dec
dec
xchg
or
dec
cmp
dec
aaa
push
lret
cld
mov
push
dec
fs
push
popa
dec
push
imul
jae
inc
loopne
fcoms
pop
loop
and
mov
sahf
arpl
jp
sbb
rolb
push
pop
dec
push
dec
push
push
ss
ss
cmp
inc
cmp
jns
push
lret
fs
jp
popa
imul
sbb
sbb
dec
dec
jne
sbb
or
mov
inc
push
outsb
dec
popa
enter
aaa
or
dec
idiv
insl
pop
imul
je
inc
xchg
enter
push
fiadds
orb
xor
push
cmp
ret
sub
lods
insb
dec
dec
outsl
xor
dec
jl
gs
inc
outsb
push
outsl
sbb
bound
dec
jb
jo
dec
inc
mov
stos
arpl
inc
sub
dec
outsl
jae
pop
shlb
xor
ja
mov
push
outsb
bound
shrb
scas
ficoml
pop
jne
push
in
sbb
jae
push
push
addr16
rcrl
jno
stos
jns
std
pop
push
xchg
fdivrl
sbb
imul
push
adc
gs
das
cli
jne
dec
push
je
dec
dec
jbe
push
inc
push
jae
push
push
aaa
loope
adc
dec
sub
dec
cmp
sub
mov
adc
push
sub
xor
adc
int
push
adc
xor
dec
inc
imul
imul
sub
mov
ljmp
push
insl
push
popa
sub
insl
mov
push
push
add
push
inc
or
popa
push
je
scas
outsl
outsb
push
bnd
add
dec
push
inc
adc
outsl
push
fsubrs
insl
and
gs
push
call
dec
jb
pop
push
xor
pop
call
inc
push
dec
xor
jb
jno
pop
push
add
mov
inc
jns
inc
test
js
imul
xchg
mov
push
cwtl
in
pop
outsb
arpl
outsl
dec
test
gs
push
sbb
js
ja
jo
add
outsl
adc
jo
das
inc
xorl
imul
dec
cmp
adc
aam
dec
jb
ja
pop
dec
jno
pop
shll
ja
inc
push
adc
scas
andb
dec
dec
push
fs
shlb
xor
insl
mov
dec
push
jae
mov
cmp
aaa
rcrl
addr16
mov
outsb
push
imul
decl
jno
xor
xor
popa
push
push
mov
fs
and
mov
dec
inc
je
loopne
data16
rcrl
arpl
inc
dec
je
mov
fs
in
leave
jbe
popa
cmp
pop
push
adc
inc
pop
jns
dec
push
inc
call
cmp
ja
jb
inc
ja
dec
fs
xor
inc
add
mov
push
or
inc
ljmp
pop
push
shr
cmp
incl
xor
pop
xor
jns
xchg
dec
push
cwtl
jecxz
in
pop
js
jbe
lods
add
js
adc
lock
push
pop
lock
jae
ss
decb
inc
push
fs
cmp
xor
push
push
xor
int3
cs
push
push
push
lret
jno
sub
push
dec
inc
addr16
cwtl
cli
jg
dec
xor
xor
imul
or
push
dec
push
arpl
mov
xor
insb
addr16
push
inc
mov
mov
adc
outsb
push
dec
dec
jbe
in
ret
shll
mov
call
push
jno
xor
imul
shrl
addr16
insl
push
jns
inc
dec
adc
push
jg
aad
pop
push
dec
insb
inc
fisubl
jne
jns
aaa
dec
imul
cld
fs
jb
arpl
inc
arpl
in
shlb
mov
les
andl
popa
mov
enter
outsb
ss
arpl
mov
inc
bound
xchg
ljmp
lods
mov
mov
aaa
cmp
push
inc
push
jo
jno
inc
or
cli
xor
jbe
add
jo
inc
jno
js
xchg
int3
insl
fsubrs
push
jno
outsb
dec
inc
lods
call
out
xor
add
and
jbe
mov
inc
stos
int
dec
addr16
or
hlt
fbld
rclb
dec
dec
jae
inc
push
cmp
push
inc
sub
dec
in
add
push
or
xchg
ja
or
mov
mov
jno
cld
js
sub
sbb
pop
mov
loopne
or
insb
dec
xor
pop
push
movsb
inc
inc
fwait
ljmp
int3
pop
inc
jbe
push
fadds
mov
repnz
js
insb
ss
jo
pop
sub
dec
shlb
sbb
pop
pop
inc
xlat
or
push
dec
dec
bound
int3
xor
gs
add
aam
dec
inc
dec
imul
inc
outsb
push
imul
push
outsb
xor
in
adc
xor
jbe
mov
fisubs
inc
jbe
inc
js
add
or
outsl
rolb
jae
stos
inc
push
stos
call
xor
sub
out
jbe
mov
bound
sub
push
dec
add
jbe
push
sbb
jle
jbe
dec
and
mov
push
dec
jno
testb
es
jge
jecxz
fisubl
dec
imul
test
push
scas
aaa
pop
imul
dec
xor
stos
sub
inc
insl
sub
inc
xor
jo
jbe
sbb
rclb
push
repnz
jns
jbe
mov
mov
push
dec
imul
js
loope
add
pushf
mov
js
imul
data16
jne
jne
stos
loope
lret
jae
push
cmp
xor
jg
xchg
add
cmp
gs
arpl
test
fdiv
jns
dec
ja
outsl
addr16
mov
loop
std
push
push
imul
inc
adc
imul
insb
xor
fs
inc
or
cs
imul
adc
clc
jns
jl
imul
outsl
aaa
ret
nop
push
dec
jns
push
cmc
andb
push
js
push
mov
xor
fidivl
push
cmp
push
in
pop
call
js
arpl
jno
inc
dec
xor
add
adc
dec
push
inc
aaa
jl
inc
jae
xor
js
dec
xchg
dec
dec
xor
mov
gs
jo
shrb
or
dec
xor
mov
lcall
push
pop
cltd
xchg
pop
adcl
jae
orb
push
sar
adc
cmp
sub
cwtl
xor
pushf
or
mov
leave
add
in
dec
push
rol
cmpsl
xor
mov
sub
sbb
or
or
aaa
jmp
push
inc
lds
pop
movsl
add
or
fbstp
faddl
pop
cld
addb
add
inc
mov
dec
test
adc
outsl
fstpt
or
mov
push
out
jle
or
jo
pop
add
or
loopne
lock
add
rolb
or
fsubrl
mov
mov
shlb
xchg
cmp
and
loope
cmp
jb
lock
cli
add
push
cmpsl
adc
mov
lods
sbb
push
dec
sub
leave
mov
cld
in
add
repz
fdivr
cmp
js
add
and
mov
and
std
xchg
inc
or
add
enter
pop
out
mov
movswl
inc
push
outsl
xor
add
add
mov
cmp
pop
ja
adc
outsl
sub
rol
jg
bnd
mov
add
imul
rolb
adc
adc
sub
and
popf
in
mov
mov
xchg
and
xor
xchg
sbb
aaa
sbb
shll
and
pop
add
cs
cld
sbb
add
sbb
bnd
jecxz
pop
js
cmc
adc
dec
dec
mull
out
loop
lds
aam
out
mov
popf
cltd
xchg
and
leave
xchg
add
sub
outsl
inc
movl
fcomi
xchg
push
pop
jae
pop
mov
adc
mov
in
pop
and
lds
aaa
pop
lock
loop
dec
dec
lods
jo
mov
mov
mov
pop
xchg
mull
sub
mov
sub
push
add
cmp
lods
mov
cwtl
mov
loope
pop
ret
pop
in
mov
lahf
sbb
imul
sub
iret
cwtl
or
dec
sbb
push
shll
xchg
call
ret
pop
lock
or
ljmp
in
push
daa
adc
rorl
mov
cmpsl
mov
add
imul
icebp
sti
mov
fwait
rolb
sub
aas
in
or
data16
int
push
sub
cmp
test
or
rcl
into
fadds
mov
add
loopne
inc
inc
or
jl
cmpsl
sbb
pop
xor
add
xlat
daa
jge
loopne
imul
jb
cmpsl
push
xor
xor
je
sub
jmp
pop
add
int3
add
loopne
mov
push
dec
aas
fs
repnz
imul
pop
mov
pop
sti
andl
mov
icebp
add
add
sar
jg
push
xor
mov
mov
lea
loopne
out
adc
cld
xor
jnp
inc
mov
jnp
and
jl
cmpsb
mov
cli
insl
xchg
out
subb
adc
pop
mov
dec
cmp
mov
pop
mov
outsl
lcall
into
stos
or
lcall
outsl
repnz
loopne
push
xlat
in
sub
mov
inc
out
inc
inc
les
mov
xor
adc
xor
pushf
sub
sbb
je
xchg
test
jl
sub
cld
fsts
or
into
int
and
scas
push
loopne
or
or
sub
jg
shlb
cmp
cs
pop
jecxz
or
aad
aas
mov
insb
rorb
sbb
pop
cmp
jns
xor
xor
pop
add
sub
les
loop
ja
adc
pop
mov
cmc
fcoml
loopne
divb
in
add
jl
stc
pop
xchg
pop
and
jmp
adc
mov
xchg
or
sti
push
popa
je
int3
or
popa
fcmovnbe
sbb
adc
pop
xchg
and
mov
ljmp
mov
sub
jbe
les
dec
push
xchg
notl
out
scas
pop
add
pop
jge
add
inc
xlat
xchg
mov
insl
adcb
rcr
push
test
push
pop
imul
es
inc
sbb
mov
add
stc
xchg
push
pop
mov
mov
cs
mov
in
dec
hlt
sti
xor
fadds
mov
pop
or
adc
insl
cvttps2pi
aaa
test
or
push
movsl
ret
pop
arpl
cltd
xchg
andb
mov
pop
pop
dec
cwtl
pusha
clc
mov
jb
mov
sbb
dec
fsubrs
pop
inc
pop
jle
cmp
insb
pop
add
rcl
jb
push
stos
and
mov
roll
inc
loop
out
mov
repnz
pop
mov
mov
add
stos
xchg
inc
call
andl
das
jb
popa
stos
and
mov
pop
bound
in
in
ficoml
sub
jl
xchg
pushf
add
jl
test
lock
and
push
push
and
dec
add
sbb
jo
repz
xor
push
imul
sub
pop
xor
mov
testl
xorl
popa
out
push
cmpl
or
jg
fwait
or
repnz
popf
movsl
cld
dec
rorl
lcall
add
cld
lods
push
inc
push
push
shlb
jns
inc
call
dec
sbb
data16
movsb
xor
lahf
sbb
push
clc
rolb
outsl
xor
cltd
push
push
cmp
add
ret
jg
mov
outsl
addl
push
pushf
cs
push
sub
mov
jae
mov
clc
cmp
xor
mov
std
xchg
aam
test
jb
roll
ss
movd
mov
clc
pop
or
fstpl
dec
clc
adc
adc
inc
adc
fnsave
sbb
dec
aas
jmp
push
aad
jmp
mov
icebp
iret
inc
loop
sub
std
lret
hlt
jo
pop
les
dec
aaa
jo
dec
enter
imul
jae
add
mov
adc
adc
jecxz
lods
pop
adc
inc
call
rorl
fiadds
xchg
mov
add
mov
out
mov
sbbb
stos
cmpsb
ret
and
push
stos
sub
daa
push
cld
test
lock
push
push
ljmp
repnz
push
sarl
xchg
push
and
insl
ret
int
xchg
cmpsb
fwait
hlt
mov
roll
std
sarb
cld
sub
xor
ret
fldcw
mov
cmpsb
adcb
and
fs
cltd
ret
add
fisttps
aas
mov
inc
mov
mov
xchg
jl
insl
jne
aam
sbb
adc
jbe
repnz
andb
shll
add
gs
fsubrl
js
pushl
push
popf
dec
mov
pop
xor
iret
jp
push
std
fwait
or
xor
mov
mov
adc
call
sbb
icebp
in
pop
add
cmpsb
pushl
jge
sbb
cli
daa
add
orb
cli
mov
or
mov
mov
ss
add
jp
and
incl
ja
cld
sub
stc
adc
imul
adc
lcall
lahf
aaa
xchg
fsubrs
std
and
or
insb
push
and
mov
pop
orb
jnp
xor
lret
dec
call
push
sbbl
pop
outsl
lods
hlt
sub
push
adc
test
cmp
xchg
arpl
xchg
inc
stos
dec
cmp
mov
mov
xor
xor
idivl
cmp
jbe
cmc
ret
aas
fcoml
clc
mov
adc
test
inc
aad
pop
imul
popa
and
rcr
jo
cmp
add
stos
jle
aas
enter
cs
inc
fisttps
test
sub
sub
adc
in
mov
add
adc
or
incl
push
xor
shrl
pop
push
mov
jp
sub
cmpsl
jge
cmp
arpl
sbb
add
push
and
mov
mov
movsb
jecxz
clc
or
fnstsw
addb
out
ret
into
sti
fisubl
jo
incb
ljmp
cs
fadd
rolb
pop
aaa
insl
outsl
cmp
ljmp
shlb
push
pop
lock
cmp
sbb
xor
inc
add
scas
jecxz
jnp
inc
pop
lcall
add
cwtl
test
add
fsubl
popa
sbbl
add
pushf
test
sub
loop
ret
add
mov
ss
xchg
pusha
rcrb
pop
push
push
sub
jne
mov
sahf
jbe
sub
dec
nop
jl
push
in
addr16
fdivs
push
scas
shl
fwait
dec
xchg
adc
mov
sti
inc
sarl
mov
jecxz
jno
sub
mov
mov
or
xchg
ja
inc
ret
dec
push
sub
mov
lods
jnp
mov
mov
fldl
or
cmp
test
mov
sbb
sub
es
adc
sbb
mov
push
add
call
push
pop
je
mov
pop
jg
ret
dec
and
cmp
pop
cs
push
popa
push
dec
mov
je
pop
xor
mov
push
iret
push
or
pop
adcb
push
dec
test
cmc
call
jg
nop
cmpsl
and
pop
mov
inc
repnz
lds
cltd
into
lret
cld
out
push
in
push
jns
add
popa
aas
jb
cmpsb
xor
sbbb
addb
or
outsl
ret
mov
jbe
jle
adc
add
push
jge
mov
dec
inc
xchg
lahf
pop
gs
rcrl
mov
ja
add
push
push
test
mov
push
mov
cwtl
and
add
test
or
mov
jp
push
mov
rcll
ja
or
out
lods
mov
xor
fs
add
add
xchg
adc
in
mov
clc
dec
cld
add
dec
fsubrl
dec
outsl
and
sub
pop
fnsave
mov
dec
cmp
fs
push
clc
test
pop
sbb
movsl
jg
movswl
mov
repz
pop
push
dec
mov
add
xchg
jno
lods
enter
sarl
ret
sbb
jmp
inc
jmp
test
or
fadds
add
mov
push
lret
sub
mov
cmp
int3
lcall
inc
sti
inc
call
sub
cmp
jle
jg
mov
sarb
vpacksswb
jne
dec
sahf
xchg
cltd
push
lret
js
cmpl
fmull
call
inc
pusha
push
pop
adc
jge
pop
mov
shrb
lock
enter
stc
bound
jl
mov
mov
or
cmp
lret
sub
jns
movl
mov
inc
insb
das
inc
sahf
mov
xchg
jecxz
add
rcrb
add
mov
mov
fsubl
outsl
inc
sarl
jl
push
loop
loop
jl
outsl
lods
ds
jl
adc
or
rclb
mov
and
xor
and
xchg
pop
test
xchg
mov
ljmp
mov
jge
iret
cli
out
add
lds
rolb
mov
inc
out
clc
inc
in
or
test
mov
icebp
mov
lock
push
test
test
sub
mov
mov
ljmp
jg
sbb
out
loope
and
adc
mov
fistps
pushf
daa
enter
cmp
gs
pop
dec
jo
cmp
lcall
rcll
mov
dec
inc
repz
pop
rcr
ja
sbb
push
dec
std
push
add
out
mov
inc
dec
mov
ret
mov
mov
and
xlat
adc
add
test
adc
xor
pop
cmpsb
test
push
and
or
jecxz
and
stos
lahf
test
adc
sbb
loop
jmp
jl
flds
insl
gs
adc
mov
not
xor
lock
icebp
and
pop
mov
insl
push
and
lock
scas
mov
pop
push
xorb
cli
sub
rolb
mov
stos
cwtl
mov
test
fists
fcoml
test
cld
enter
mov
clc
or
into
push
jp
out
jb
dec
push
fdivr
sbb
sbb
add
ficomps
jp
call
sub
ljmp
loop
sub
push
add
jmp
sbb
sub
dec
sbb
sbb
in
rcrl
mov
test
push
pop
out
lahf
lods
mov
outsb
rcrb
incl
imul
je
cmp
fs
push
push
inc
in
test
std
or
icebp
lahf
xchg
out
inc
mov
pop
pop
clc
dec
pop
add
add
add
or
mov
andb
in
and
pop
cli
roll
fwait
mov
fs
pop
loope
into
xchg
rcll
lock
adc
push
pop
lret
mov
fcom
xor
fcompl
pop
jns
xor
aaa
pop
imul
push
sbb
sbb
enter
pop
call
xchg
jae
dec
aaa
ret
dec
aas
inc
add
mov
jnp
loop
inc
xchg
pop
ret
add
mov
js
cld
and
icebp
ja
shll
xchg
shlb
fidivrs
sub
cwtl
int3
icebp
sub
xchg
test
or
add
rcl
cmp
jmp
imulb
out
vpmacsdqh
sbb
lock
lret
xorb
add
in
pop
call
loop
or
sub
icebp
orl
pop
loope
dec
jle
ljmp
cmpsb
lock
pusha
scas
mov
rolb
in
inc
sub
ljmp
xchg
push
xor
arpl
in
cmpsl
add
popa
in
pop
aad
pop
adc
imul
xor
addl
ss
mov
rcr
addl
clc
and
jle
shlb
fs
out
xchg
mov
jge
movsl
inc
jb
mov
pop
cmp
int
ficomps
mov
mov
mov
andb
jb
adc
sbb
sbb
stos
mov
jmp
mov
inc
lahf
pushf
sbb
int
jp
mov
loopne
call
push
jb
out
mov
push
negl
mov
fisubs
add
push
enter
call
fcoms
data16
mov
enter
push
idiv
jmp
push
adc
and
std
inc
aaa
cmp
dec
iret
sbb
imul
orb
ljmp
jne
rcr
fsubp
rorl
adc
pop
in
xor
cmp
cwtl
pop
push
pop
pop
call
fs
mov
cwtl
sahf
in
mov
rol
mov
out
cmc
cli
call
pop
pop
cmp
xor
pop
pop
pop
arpl
jl
xchg
scas
mov
cld
mov
mov
int3
xchg
push
add
aad
and
and
cmp
das
out
js
dec
push
pop
outsb
cmc
cmp
mov
xchg
or
test
mov
test
adc
mov
incl
or
cs
cmp
push
inc
mov
call
and
rcl
rcrl
out
repz
in
jmp
push
sbb
xor
push
popf
push
pop
popa
pop
lea
insl
sti
mov
fwait
mov
mov
aaa
jmp
in
repnz
test
mov
sbb
jg
push
inc
iret
mov
jb
jle
jb
ret
mov
mov
aam
adc
loope
pop
movups
std
add
xchg
cmp
es
and
add
pop
pusha
notb
jge
mov
mov
mov
jmp
int
rclb
and
sub
stc
out
call
pop
imul
mov
ret
add
dec
repz
mov
add
push
adc
xchg
pop
adc
xor
pop
cld
adc
xchg
fcompl
shll
iret
push
add
jg
fwait
pop
add
dec
rcl
dec
inc
mov
imul
mov
popf
mov
lret
fucom
jmp
sti
lret
push
sub
mov
mov
repz
mov
mov
bound
rcl
ss
cmc
jp
sbb
call
pop
and
jg
mov
lods
mov
pop
fld
jno
out
mov
lods
das
sbb
sub
mov
push
movsb
push
jno
outsl
jle
test
fisubl
lock
xchg
cs
repnz
out
cmp
and
xor
cmp
xor
pop
pusha
decl
jl
xchg
test
sarb
iret
mov
cli
testl
cmc
aas
inc
push
pop
dec
pop
xorl
aas
pushl
mov
mov
pop
rcl
fcmovu
into
pop
sub
cld
jmp
cwtl
xchg
push
sbb
push
pop
mov
jl
pushf
movsl
sarl
jg
xorb
dec
fiaddl
xor
or
outsl
clc
inc
xor
shlb
xchg
fwait
jg
aas
cld
fmul
rol
jnp
ljmp
push
push
and
enter
cli
repz
in
outsl
pop
dec
stos
sbbb
mov
dec
pop
in
sbb
out
hlt
lock
sbb
sbb
ss
inc
dec
cmp
sbb
cmpsl
jp
loope
xorl
loop
out
jo
fisttpll
pop
sbb
cmp
dec
pusha
fdivl
out
ffreep
xchg
jg
mov
scas
mov
mov
lds
xor
leave
idiv
test
adc
dec
aas
in
insl
jae
ds
mov
mov
jg
xor
push
loope
cs
cmpsl
and
cmp
ds
dec
push
mov
pop
dec
rolb
mov
loopne
js
mov
pop
add
pminub
sbb
aam
pop
jne
insl
pusha
push
pop
cmpb
push
loop
iret
ret
dec
sbb
enter
jns
add
sub
aaa
stos
pop
stc
out
ss
pusha
gs
out
xchg
and
mov
jae
or
int
ret
jmp
pop
icebp
cmp
pop
and
dec
cld
dec
decl
push
movsb
and
pop
xchg
xchg
xchg
cltd
lahf
xor
out
mov
ret
bound
cld
in
add
sbb
shlb
sub
sti
lods
mov
jl
aaa
shrb
fnsave
and
lds
pop
icebp
inc
jg
xor
arpl
sbb
pop
jns
lahf
lret
mov
adc
hlt
jecxz
dec
and
pop
jle
int
jg
gs
arpl
xchg
xchg
inc
aaa
stc
int
fcomi
roll
int3
lret
andb
in
call
sbb
pop
out
aas
ficoml
dec
jnp
jae
jae
fnsave
fdivr
jg
lods
mov
dec
jne
loope
xchg
cmc
out
fwait
xor
lcall
daa
sub
push
pop
and
pop
jecxz
test
cmpsl
and
out
mov
fcmovne
push
repz
ficoms
daa
sub
and
cld
pop
mov
cmp
mov
movsb
iret
mov
ret
jmp
aaa
mov
insb
adc
or
pusha
daa
xor
cmp
or
cld
pusha
imul
mov
mov
fldcw
mull
cmpb
aaa
jg
pop
aaa
inc
sahf
pushf
jo
addr16
daa
jge
call
aam
fcomip
out
mov
clc
rolb
std
pop
std
repz
test
mov
cs
lahf
fdiv
loopne
out
adc
pushf
out
sub
test
add
daa
sub
lahf
xchg
push
pop
sub
xchg
xchg
stos
xchg
enter
sarb
sti
popf
jae
push
das
push
pop
cmp
mov
inc
xchg
addb
mov
into
mov
pushf
pop
push
in
lahf
cmc
repz
hlt
or
cli
lret
outsl
pop
cmpsl
aaa
ds
loopne
xor
scas
xchg
insb
mov
xor
subb
sub
repz
add
xchg
jns
ret
sub
push
das
lock
pop
mov
loop
xor
pop
cs
inc
es
pushf
std
in
xchg
sbb
ss
aad
scas
aas
fcmovbe
jne
xchg
data16
mov
xor
ret
stos
mov
ret
mov
loope
xor
rolb
rcrl
xor
fdivs
or
ds
or
xlat
lahf
popf
movsl
mov
rcr
out
jp
sub
add
xor
out
push
push
int
inc
dec
jne
jno
jo
leave
cltd
push
stos
cmp
int3
stos
sbb
xchg
mov
sub
negl
cs
push
inc
pop
push
jno
mov
jp
jnp
int
and
repz
stos
dec
and
mov
jle
adc
rcll
clc
mov
inc
inc
dec
push
inc
mov
jl
repz
mov
or
jecxz
push
inc
aaa
mov
xor
enter
push
lods
dec
addr16
outsl
jg
ret
pop
mov
pop
xchg
test
sbb
inc
and
fdivl
adc
ret
cs
into
inc
fsubl
cli
sbb
sbb
outsb
inc
lods
and
int
clc
test
pushf
cmpl
popl
inc
jae
adcl
jnp
bound
jbe
test
cld
cs
sub
scas
xchg
ret
aad
lret
xchg
mov
stos
cmp
push
outsb
adcb
jle
push
pop
jp
push
pop
test
inc
add
call
divl
psrad
loope
ja
sub
push
xchg
pop
addb
rcrl
ret
jmp
and
push
adc
incb
pop
fisttpl
jecxz
jbe
or
inc
mov
and
jmp
ljmp
in
dec
push
inc
movsb
insl
jle
scas
xor
sbb
sahf
movsb
xchg
xchg
fistpl
adc
sub
xchg
outsl
inc
fisubl
jl
push
clc
inc
andb
and
sahf
fs
ja
scas
mov
rorb
mov
inc
and
or
loopne
pop
cmp
pop
pop
arpl
ret
adcb
stc
xchg
pop
mov
pop
sub
roll
inc
das
in
fisubl
mov
rolb
add
mov
fwait
and
push
cltd
mov
stos
xchg
xchg
jmp
fists
jae
add
lret
testb
cld
sbb
fnsetpm(287
xor
push
scas
jbe
roll
push
mov
jb
add
scas
aaa
push
stos
adc
leave
cmp
pop
adc
out
outsl
mov
inc
push
rorb
test
aaa
mov
fcmove
mov
or
in
stos
or
mov
cld
inc
stos
inc
cmp
dec
setle
lods
clc
repz
fadd
insb
notb
lods
hlt
fldcw
sbb
sbb
mov
cmp
mov
xlat
adc
sbb
aas
cld
repz
rolb
cli
and
and
and
ror
dec
push
push
repz
pop
adcl
sub
sti
inc
aad
add
add
push
loopne
ss
fildll
push
fld
addl
outsb
aaa
jl
jle
xchg
int
scas
inc
mov
stos
jmp
pop
mov
sbb
add
sub
xor
sub
outsl
call
dec
cltd
jl
jo
fwait
mov
shlb
out
in
jae
nop
dec
mov
mov
pop
rcrb
and
cld
cli
nop
inc
mov
xor
and
stos
xor
and
pop
sub
cmpsb
inc
push
popa
jbe
shrl
cmp
lcall
enter
rorb
movsb
or
cmp
xor
daa
push
mov
push
cmpsb
rcll
mov
mov
xorb
clc
loope
and
rcr
adc
jo
push
aaa
movsl
loopne
adc
imul
push
movsb
cld
movsl
les
or
ret
lahf
sub
pushf
into
mov
push
pushf
pop
es
fidivrl
sbb
mov
imul
orb
cmc
jg
add
and
fadd
inc
add
cmc
in
das
or
inc
and
adc
inc
cmp
cmp
outsb
pushf
pop
jae
xchg
in
out
out
stos
rolb
push
inc
repnz
jmp
aaa
lahf
and
ds
xor
jne
sbb
jg
es
sahf
shr
int3
rcl
aam
push
sub
jle
mov
adc
inc
outsl
daa
mov
fiaddl
mov
lret
pop
sbb
lret
xlat
sti
sub
rcll
insb
sbb
filds
es
cmpb
je
js
lods
ss
cmp
ljmp
stc
pop
jle
stos
pop
sbb
pop
mov
sbb
sahf
jae
sarb
mov
fwait
push
rol
leave
iret
aam
xor
out
sub
push
pop
jp
subb
jb
data16
call
out
mov
fucomip
lock
mov
pushf
sarb
pop
mov
call
ret
fidivl
out
loope
add
fsts
xor
mov
mov
jo
dec
cmpl
jg
shlb
out
or
mul
test
and
mov
xchg
jnp
push
jbe
aas
decl
mov
lret
rcr
or
neg
and
stc
jae,pn
jno
sub
pop
inc
pushf
pushf
cmp
mov
popf
hlt
xchg
in
mov
fdivrs
mov
cmc
ret
fimull
push
inc
xchg
fs
clc
or
dec
jp
fwait
push
aad
sbb
lret
and
jl
inc
andb
and
out
lcall
nop
xchg
pushf
aad
xchg
lods
mov
loope
xchg
fmull
das
sub
pop
inc
rolb
insl
jg
aaa
jo
scas
mov
rolb
negl
std
add
and
pop
cmp
pop
mov
imul
ret
xchg
jnp
inc
push
mov
fwait
leave
jb
xor
and
cmp
into
mov
mov
pop
ja
xlat
hlt
mov
aad
aam
cmp
add
outsl
mov
sub
call
gs
mov
outsb
lcall
out
call
pop
pop
add
dec
sub
ss
pop
jne
lea
sbb
sbb
int
xchg
flds
push
mov
or
inc
fidivrs
sub
pop
repz
clc
out
ja
mov
cld
jnp
mov
test
push
mov
xlat
sub
test
and
in
inc
cmp
outsb
roll
int3
mov
rcrb
rclb
cli
cmp
push
dec
push
xor
push
inc
jmp
pop
test
sbb
lds
cwtl
icebp
cld
addb
sub
dec
push
aas
mov
aaa
push
sbb
pop
inc
enter
jg
fidivrl
sbb
dec
shrl
push
inc
mov
xchg
inc
insl
xchg
test
mov
js
decb
sarb
pop
cli
movsb
adc
call
xor
pop
pop
fcmovu
cmpsb
repz
xchg
jge
mov
enter
cmpsb
in
mov
loopne
aaa
xchg
add
sbb
sarb
cld
jge
mov
rcll
add
out
cmc
in
and
sbb
cli
sub
push
out
pop
push
mov
cmp
fdivr
xchg
mov
lock
cmp
mov
mov
mov
sub
jbe
repz
lahf
icebp
cli
pop
mov
test
fdivrp
inc
jmp
mov
sbb
inc
inc
and
sub
scas
lahf
popa
clc
adc
xchg
push
pop
and
xor
mov
dec
arpl
stos
jp
mov
loop
lods
repnz
sbb
jl
or
lock
stc
dec
les
cs
pop
push
mov
sbb
push
push
add
push
shl
out
cmp
sub
call
sarb
xchg
push
inc
jne
insb
int3
mov
orb
mov
adc
loopne
push
adc
mov
sbb
rclb
pusha
pop
fadds
jge
mov
cmpsl
mov
lods
mov
mov
mov
mov
xlat
pop
aam
data16
mov
pushf
xchg
jb
mov
mov
jnp
and
pop
cmp
aaa
ljmp
push
xchg
subb
xchg
call
std
shl
pop
and
in
enter
ljmp
test
jg
inc
xlat
shrb
adc
add
sub
sarb
pop
inc
imul
xchg
adcl
xchg
adc
out
fstpt
popf
xchg
cmp
push
mov
mov
jecxz
test
mov
clc
out
mov
mov
shl
cmp
addr16
std
cld
adcb
bound
inc
cmc
cwtl
pop
push
mov
xor
mov
push
loope
aas
loop
xorl
shrb
and
mov
jle
cltd
adc
cltd
inc
xchg
xchg
cmpsb
mov
jnp
push
clc
out
pop
push
sbb
or
push
ss
mov
outsl
jge
ljmp
mov
jns
loope
std
sbb
jmp
aaa
and
syscall
inc
repz
imul
push
fstpt
movsb
lods
mov
loopne
shlb
out
popf
out
lock
lcall
xor
ja
pop
cmp
ret
mov
inc
mov
or
sub
pop
lcall
and
or
pushf
xchg
cwtl
sahf
xor
pusha
out
fwait
iret
aaa
jg
cmp
push
fdivr
hlt
incl
lahf
jno
xchg
js
jmp
inc
push
les
lahf
int
mov
and
push
jle
add
pop
cmc
jno
lds
ja
call
popf
cld
lods
lret
sub
fsubs
std
ficoml
add
pop
sub
mov
out
mov
cltd
cmpsb
lods
mov
std
pop
outsb
pop
rcrb
sbb
or
sbb
dec
pop
pop
dec
pop
xchg
sbb
and
push
or
inc
fsubr
icebp
std
dec
jmp
sarb
cmp
andb
sbbl
pop
aaa
daa
les
fcmove
stos
add
incb
iret
sbb
inc
push
pop
int3
ja
jns
or
jge
jae
mov
cmpsl
mov
pop
dec
sub
add
xor
out
jp
cld
mov
xchg
stc
mov
in
in
pusha
add
xchg
and
xor
sbb
scas
insb
pop
or
fldl
jmp
outsl
fbld
mov
das
cmp
sbb
mov
repz
pop
and
stos
inc
pop
lock
les
mov
sbb
inc
pop
cltd
outsl
movswl
outsl
pop
xchg
rcll
push
into
cmc
rol
aas
jp
cld
jmp
add
sub
cmp
mov
stos
sbbb
test
cmpsl
inc
test
mov
add
hlt
lfs
xor
subb
and
int
push
push
jmp
enter
in
decl
pop
popa
sbb
int3
mov
and
push
in
mov
sub
std
addr16
inc
popa
idivb
out
fcmovnb
sub
or
cli
in
pop
pop
rcrb
scas
shrb
push
push
pop
lods
pop
mov
pop
pushf
xchg
andl
stos
mov
rcl
push
fldcw
outsl
sahf
aaa
jecxz
mov
mov
aaa
pusha
lock
jge
decb
xchg
cltd
popa
lods
stos
lcall
js
loope
addr16
movsl
pushf
mov
in
dec
dec
scas
addr16
dec
addw
xchg
mov
push
cli
out
fimuls
sub
jg
pop
loop
fisubl
inc
fcoms
jo
sar
dec
and
inc
xchg
adc
es
fimuls
push
sti
jecxz
and
test
pop
cmpl
xchg
stc
pop
pop
mov
sbb
sub
cmp
cli
dec
pushf
xchg
push
jp
and
jae
stc
test
jns
xchg
pop
lods
outsl
fsubrs
and
adc
push
mov
repnz
push
pushf
or
sub
mov
jmp
jle
xchg
test
cmpsl
jecxz
push
cli
subl
and
inc
imul
aam
inc
push
pop
out
push
xchg
stc
mov
fwait
ret
pop
pop
and
mov
out
clc
adc
xchg
cld
adc
es
cs
rclb
icebp
mov
loopne
jmp
sub
ret
cld
cmp
sbb
jmp
stc
loope
mov
inc
push
bound
xchg
movsb
jno
mov
mov
call
inc
mov
enter
leave
fcomi
sti
add
adc
jle
push
xchg
pop
push
jbe
imul
ljmp
xchg
jge
mov
push
sub
or
sub
mov
lds
lea
or
leave
jb
xchg
fistpll
arpl
in
rolb
icebp
push
push
pushf
rcrl
shlb
inc
dec
dec
xchg
jne
orb
adc
fistpl
rclb
lret
and
sbb
cld
or
popf
mov
int
adc
shll
mov
out
int3
pop
js
fbld
push
or
add
rcrb
out
shlb
cli
das
jo
mov
lds
cld
daa
cld
rcl
out
cltd
fisttps
je
rolb
add
pusha
push
fnstsw
lock
incl
or
push
lret
repz
out
mov
cmp
jl
js
push
mov
ljmp
icebp
add
mov
in
out
aas
sub
add
clc
popf
adc
shlb
movsb
clc
xchg
push
jno
data16
std
inc
shlb
ret
push
psllw
in
mov
pop
sbb
sbb
jno
pop
fistps
push
and
mov
jnp
pushf
aam
xor
sti
inc
and
push
xor
loope
jbe
dec
dec
movsb
mov
inc
std
mov
daa
ret
call
call
out
push
orb
mov
pop
test
popf
cmpsl
and
iret
mov
jmp
and
fcomps
add
cli
add
in
sbb
popa
clc
jmp
pop
les
pushf
imul
pop
sbb
leave
lret
daa
adc
in
add
and
xor
pop
repz
ficompl
dec
pop
out
shrb
inc
pop
loop
push
std
mov
sub
repz
xor
jmp
push
loop
clc
or
adc
jl
aam
loope
pusha
sbb
pop
sub
dec
fwait
and
js
dec
xor
xor
jb
lds
cmpsl
mov
incl
repnz
jle
and
sti
std
add
push
stc
scas
getsec
mov
outsb
inc
pushf
mov
orl
jg
decl
lods
add
adc
cwtl
sbb
xor
and
dec
lock
nop
fisttpll
xchg
scas
xor
jno
jg
xor
rcr
ret
pushf
mul
push
cmp
loop
aaa
pop
push
popa
dec
outsb
sbb
jle
jecxz
mov
jae
or
out
xor
sarb
testl
jo
pop
sub
sub
mov
jp
ja
hlt
mov
pushf
cmc
or
xchg
aas
aas
sub
rolb
bound
mov
add
out
subb
fsub
or
outsl
decb
cs
push
push
insl
jg
dec
mov
repz
mov
mov
in
add
mov
stc
mov
and
scas
dec
cs
jbe
xorl
push
cld
lock
mov
rcl
and
mov
imul
add
push
nop
test
sbbl
cmpsb
mov
adc
ljmp
and
aaa
hlt
inc
dec
cmp
pop
orl
xchg
cltd
scas
inc
xlat
mov
into
cs
cld
fimull
dec
inc
dec
dec
je
outsb
jle
rcrb
fwait
mov
jmp
push
es
addb
icebp
loop
push
or
clc
fwait
popa
shll
push
mov
push
cli
dec
and
pop
fsubr
pop
aaa
sbb
sbb
dec
jl
inc
mov
mov
adc
das
outsl
clc
js
rcr
xchg
idiv
repnz
loopne
cld
and
pop
dec
mov
icebp
ds
shlb
call
jns
lock
sbb
adc
jae
ljmp
lea
lret
ret
fwait
mov
and
xor
cli
pop
add
fiaddl
sub
mov
aas
popa
inc
adc
mov
mov
pushf
negb
or
out
es
mov
cs
call
dec
dec
aas
fiaddl
ret
lock
sbb
sarb
mov
daa
andb
jnp
mov
scas
decl
insb
cmc
cmp
add
repz
mov
add
jmp
notl
fidivl
cmpsb
inc
cmp
pushf
lock
test
fwait
decl
int3
fcomp
in
push
pop
ljmp
hlt
xchg
jbe
shl
mov
pop
mov
mov
jecxz
push
jmp
or
push
ss
push
push
and
out
mov
xchg
mov
mov
jnp
lods
pop
sahf
iret
stos
add
cld
inc
lret
rol
and
call
lock
inc
loop
and
pop
mov
jle
nop
pop
je
jnp
outsl
mov
test
scas
sbb
loope
inc
adc
stc
fwait
icebp
int
or
mov
arpl
stos
pop
sarb
sarb
inc
cmp
movhps
sub
sbb
push
cld
out
int
cmpsb
je
mov
loope
and
push
fcomip
or
add
aas
sub
push
js
out
mov
inc
insl
rolb
mov
repz
push
ficomps
cli
pushf
sti
add
pop
rcl
cmp
mov
shlb
or
and
std
imul
cmpsb
bound
jl
xchg
jle
pop
fisttps
inc
mov
scas
mov
inc
enter
enter
fidivrl
cmp
adc
lock
pop
pop
dec
fisubs
popl
setp
mov
lock
sub
stc
dec
mov
push
pop
arpl
sub
sar
xchg
cwtl
sub
mov
into
pop
rcr
cmc
das
cmp
adc
push
inc
ds
push
shr
xor
out
jnp
sbb
loopne
out
push
and
inc
clc
out
in
repz
clc
cli
sub
push
push
loope
adc
sub
sbb
xchg
mov
into
jl
sbb
or
mov
dec
cmp
pop
sub
test
mov
xor
lret
sub
lret
lock
repz
pop
stc
cmpsl
cmp
data16
aam
lcall
or
adc
fistpll
sub
push
push
inc
lret
bnd
stc
pop
clc
fidivl
jae
pop
mov
fisubrl
and
mov
cld
xchg
or
shlb
jae
out
js
mov
mov
into
sub
or
or
cli
dec
push
add
sbb
fdivs
inc
push
mov
push
orb
cli
dec
lods
and
cli
sbb
repnz
loopne
in
pushf
std
mov
pop
loopne
add
sbb
jne
lret
mov
mov
sbb
int3
loop
xchg
push
loope
and
add
dec
jle
dec
push
mov
push
loopne
or
sbb
pop
ljmp
repz
movsl
pop
inc
xor
cld
in
imul
lods
mov
xchg
in
and
adc
loope
out
hlt
subb
xor
inc
or
sub
icebp
out
adc
pushf
fsubl
shlb
mov
shlb
std
mov
loopne
adc
inc
sub
push
out
ret
jg
mov
jg
mov
lods
lods
popa
in
xchg
test
stc
popa
sub
fwait
jg
popa
jbe
arpl
into
dec
mov
mov
daa
adc
push
mov
outsb
adc
jge
mov
push
mov
mov
lret
out
adc
es
or
adc
and
sbbb
shl
xor
incl
cmpsb
into
in
push
or
or
pop
das
add
pop
push
pop
dec
push
aas
add
stos
cltd
jo
pushf
pop
jmp
clc
mov
cli
and
outsb
sbbl
add
jmp
sbb
xchg
inc
enter
scas
aaa
mov
add
adc
xchg
pushf
popa
fcoml
sbb
xchg
pop
sbb
test
das
add
hlt
clc
jle
popf
adc
aaa
jo
decb
bound
push
loopne
hlt
xchg
or
pop
rcr
aam
cs
add
iret
and
mov
dec
push
icebp
mov
bound
mov
pushf
mov
or
les
ret
outsl
jg
bound
cli
push
adc
and
loope
pusha
jle
pop
popa
push
data16
addb
add
cmpsl
sub
pop
into
or
fbld
and
xchg
jbe
mov
push
imul
test
or
mov
shrl
mov
xor
sti
sbb
psrlq
mov
cmp
ja
inc
pushf
sahf
mov
test
popa
push
pop
insb
mov
roll
jg
lea
and
xor
cmpl
in
jl
outsl
aam
std
es
nop
xchg
pusha
leave
inc
outsl
int3
push
sbb
repz
shlb
cmp
jbe
dec
loope
pop
and
ds
iret
fimuls
cli
inc
fisubrs
cli
push
clc
or
outsl
inc
stos
xlat
outsl
mov
and
mov
es
mov
rorb
sub
rolb
add
out
push
sbb
sbb
xchg
inc
mov
xchg
cmpsl
pushf
xor
mov
rcl
push
push
adcb
repz
fildll
jo
mov
mov
push
pusha
lods
mov
les
cmp
sbb
das
inc
dec
mov
mov
dec
jns
mov
in
loope
loopne
jl
repnz
sahf
cmp
cli
pop
mov
pop
dec
les
inc
int3
pop
pushf
xor
aaa
add
fwait
or
outsl
pop
cmp
aas
and
cmp
mov
cltd
jbe
hlt
out
mov
addr16
aam
ffreep
or
xor
aad
xchg
push
clc
inc
sub
movb
aas
add
fcomip
lahf
out
jns
shr
cli
sbb
pop
sub
inc
dec
push
inc
jmp
cmp
leave
mov
push
jecxz
out
add
sbb
pop
jns
pop
xchg
pushf
and
jo
xchg
mov
test
jns
lret
rcrb
ret
js
rcrb
pop
push
push
loop
aam
lcall
lods
jl
fwait
rcl
ret
mov
stc
push
or
dec
pop
jae
mov
adcb
mov
mov
pop
add
ljmp
incl
jle
cmp
inc
and
lcall
lret
imul
pushf
add
sub
cmp
dec
push
in
js
fcmovb
daa
jl
outsl
cltd
movsl
jnp
imul
and
das
mov
sbb
mov
or
repz
popf
pop
dec
mov
lfs
movsb
rcl
fstpl
and
dec
ret
adc
pop
jecxz
xchg
xor
pusha
mov
push
imul
sub
call
rcr
sar
add
fisubl
pushf
das
pop
mov
cltd
pop
pop
adc
lea
and
mov
sub
mov
loope
sub
add
insb
dec
mov
sarb
cltd
insb
adcl
xchg
mov
inc
int3
sub
cld
pushf
sti
into
subb
inc
in
push
jle
push
popf
mov
xchg
in
dec
std
adc
and
loopne
adc
adc
cmp
std
iret
cmp
cld
cld
jle
fcoms
push
in
stos
or
in
add
in
ficoml
rclb
push
or
fwait
fwait
lods
stos
ret
cld
sar
out
in
sbb
adc
inc
es
fcmovu
and
insl
movsl
dec
addr16
jne
push
or
pop
cmc
cmpsb
xchg
push
push
push
lret
pop
inc
hlt
xchg
or
or
sub
aas
xorb
repz
ds
jl
popf
in
xchg
sub
mov
das
cli
mov
repnz
es
rcrb
cltd
dec
inc
jp
mov
mov
pop
lahf
sahf
stos
sub
jo
sub
stc
inc
rolb
jle
outsl
adc
popa
pop
dec
insl
push
shlb
nop
xchg
fsubr
into
clc
and
add
sbb
xchg
fidivs
jns
pop
cmp
xchg
lcall
mov
rcl
repz
or
cmc
adc
scas
clc
and
push
dec
sbb
jae
dec
jne
jge
ret
test
rclb
mov
stc
push
xchg
cs
pop
add
arpl
pusha
jns
test
adc
adc
and
mov
stc
mov
mov
mov
dec
fisubl
jne
mov
imul
jne
pop
mov
fwait
mov
sub
mov
outsl
mov
fidivs
daa
push
jnp
rorb
add
cmp
std
or
xchg
jg
xor
in
pop
out
gs
fidivl
pop
movsb
test
push
jge
into
clc
pop
cmc
sbbl
sti
popf
mov
adc
mov
inc
sbb
jge
xchg
rcr
pop
je
loope
dec
outsb
inc
adc
mov
cltd
adc
call
icebp
add
or
cmp
adc
mov
fnstcw
add
movsl
rol
rcl
lret
sarl
test
mov
stos
jbe
sbb
inc
movsb
sbb
push
dec
pushf
cmp
mov
cmc
mov
hlt
stc
loopne
rcrb
mov
arpl
xor
xorl
mov
out
iret
lret
rcll
pop
push
xchg
push
pop
push
iret
adc
das
rcrb
inc
leave
mov
xchg
jge
arpl
jg
nop
sbbb
lods
mov
jg
insb
aas
fstpt
hlt
call
sub
mov
dec
aas
push
pop
bound
data16
lock
js
pop
cmpl
jmp
faddl
pop
sub
push
push
push
pop
lock
ret
test
lret
pop
mov
mov
or
pushl
xorb
dec
and
xlat
ret
add
xor
sbb
push
fcmovb
pop
or
cmpb
iret
xor
mov
jno
jb
xchg
cld
shlb
fimull
int
test
dec
mov
inc
pop
jle
jns
push
imul
xchg
clc
xchg
test
adc
dec
mov
jmp
or
cmp
and
pop
ja
pop
lret
pusha
loopne
xchg
xchg
mov
rorl
call
fucom
shlb
sbb
ror
xorb
ss
cmp
popa
push
push
inc
xchg
pop
leave
xchg
adc
incl
inc
int3
pop
mov
out
aam
iret
hlt
movsl
adc
filds
sbb
sbb
test
push
jne
aas
add
mov
add
jo
mov
push
jmp
ljmp
pop
movsb
daa
dec
push
push
pop
out
lods
jp
push
addb
test
push
pushl
jl
ret
aam
rorl
and
pop
and
ds
xor
outsl
out
ret
loop
push
sbb
lods
mov
shll
mov
loopne
repnz
out
push
lds
add
sub
jg
popa
lds
mov
movsl
cmpsb
mov
fbstp
outsb
ja,pt
ficomps
push
addr16
and
mov
js
mov
sbb
imul
mov
sbb
cmp
shrb
cwtl
lahf
lea
adc
mov
fldcw
pop
or
and
jbe
cmpb
pushl
jmp
jl
cld
gs
mov
rcl
push
mov
jns
sbb
jne
inc
xor
jge
hlt
push
clc
dec
mov
mov
and
sar
mov
pop
inc
sahf
push
sub
repnz
sub
test
mov
cmp
nop
pop
mov
mov
lretw
xchg
sarb
ja
in
ljmp
xor
mov
popa
bound
sub
mov
inc
incl
ret
mov
mov
cli
repnz
jo
fiadds
cld
push
adcl
subb
mov
cld
mov
lock
cmpsl
ds
hlt
repz
adc
mov
and
mov
imul
fsubrl
push
pop
stc
pop
movsl
leave
scas
add
fildl
sbb
add
ds
push
pop
pop
sub
lret
jno
test
add
mov
add
or
or
sbb
xor
dec
push
inc
inc
hlt
popl
jbe
mov
fwait
ror
inc
sub
sbb
loopne
imulb
inc
cmp
sbb
jl
int
jl
xchg
push
xlat
fiadds
roll
loop
xor
mov
in
pushf
inc
inc
inc
imul
repz
rolb
movsb
fsubs
lock
pushl
ds
mov
arpl
les
cmpsl
cli
xchg
jecxz
xchg
scas
mov
rclb
jmp
mov
push
loopne
pop
push
xchg
inc
cltd
test
in
test
incl
sbb
fidivl
sar
add
adc
jns
decb
xchg
cmpsl
pushf
mov
test
aad
pop
lret
and
cmp
lahf
mov
ss
inc
aas
ds
data16
jae
call
ficoml
nop
ds
jge
out
fwait
pop
movsl
out
loop
daa
fistl
add
invd
ds
clc
out
lock
inc
nop
push
insb
fiaddl
mov
enter
jg
cmp
aaa
fmull
and
or
push
xor
ljmp
js
pop
repnz
fisubrl
repz
lcall
push
std
test
andb
and
and
es
mov
xchg
cwtl
jle
mov
jg
jmp
hlt
cli
add
std
and
mov
adc
mov
or
sahf
fiadds
adc
int3
arpl
pop
or
pop
jns
fistpl
pop
insl
call
mov
les
loopne
xchg
xchg
jle
ret
jp
mov
sub
call
adc
andb
xor
adc
jecxz
xlat
xchg
jg
xchg
mov
add
ds
inc
xchg
mov
adc
aaa
jo
pushf
ficoms
push
adcb
pop
stc
cld
add
scas
pushf
mov
cmp
add
hlt
repnz
sub
ss
subl
sub
and
scas
lods
sbb
pop
mov
xor
test
shrb
dec
loope
adc
fsubrp
sbb
mov
push
xchg
push
addb
cmpl
stos
push
dec
pop
std
jmp
and
int
std
adc
stos
dec
pusha
push
mov
test
lret
lcall
rol
iret
div
push
bnd
sbb
ficompl
inc
inc
jae
les
sbb
mov
push
cli
mov
orb
sahf
sub
inc
inc
dec
inc
xchg
mov
jo
push
jns
and
andb
cli
inc
cld
mov
sub
mov
push
dec
std
mov
xchg
loopne
test
test
pop
sub
loope
ret
adc
pop
lcall
test
imul
js
pop
enter
jle
lret
mov
pop
mov
sbb
repz
push
inc
call
dec
adc
mov
cmp
lea
or
decb
mov
fadds
inc
icebp
das
mov
sub
xchg
cwtl
jg
ret
loop
push
pop
cs
shrb
inc
aaa
cmp
lcall
and
outsl
jle
xchg
pop
mov
sbb
pop
cs
imul
stos
dec
enter
inc
and
lock
imul
insb
fildll
mov
mov
add
push
add
es
das
add
mov
jle
pop
jo
adc
iret
test
call
js
mov
jmp
adc
or
rcll
mov
fiaddl
sahf
add
popa
aad
mov
ljmp
sbb
outsl
jle
rcrl
sub
das
popa
imul
xor
stc
test
mov
scas
pop
ficompl
cltd
mov
inc
sbb
and
inc
adc
dec
clc
int
outsl
adc
cltd
cmpb
fwait
aas
jl
filds
push
ret
outsl
hlt
sub
sbb
cs
and
pop
rcrb
stc
inc
jg
mov
mov
lcall
add
testb
add
sub
push
cmp
sbbl
addb
fwait
mov
mov
pop
jle
out
es
pop
in
push
dec
ds
dec
loopne
jp
mov
sbb
hlt
pop
mov
dec
xchg
mov
iret
bound
or
and
xchg
cmp
mov
inc
fisttps
add
jno
sbb
mov
lock
loopne
sti
jle
cld
aaa
popa
fildl
js
lahf
outsl
jp,pn
cmp
add
mov
xor
mov
jno
cmc
adc
push
push
xor
mov
call
mov
push
loop
jl
fbld
cmc
pop
ljmp
sub
or
xor
lret
mov
mov
dec
ret
inc
fcomps
int
xor
daa
mov
dec
js
movsb
outsl
pop
xchg
lock
lods
scas
mov
cli
lret
mov
xlat
jge
ret
xor
add
lock
mov
cld
adc
dec
push
jg
jo
jmp
loope
ret
push
insl
lret
loop
adc
add
or
lahf
inc
subb
daa
shrb
jge
loopne
cmpl
fisubrs
stos
pop
les
xchg
icebp
ret
in
pop
js
lock
inc
popa
data16
push
test
add
ret
enter
jmp
loop
in
repnz
repz
push
inc
mov
pop
ja
adcl
or
stos
mov
inc
test
mov
fucom
aas
mov
hlt
sub
filds
in
test
test
mov
fstps
loop
shlb
in
pusha
pushf
hlt
push
jmp
repz
push
inc
fcoml
push
mov
push
cli
gs
jle
out
shll
repnz
pop
test
jge
mov
cmp
pop
inc
jge
jnp
jo
ja
outsl
aam
in
movsb
stos
cwtl
test
push
cmp
mov
ret
fcoms
cli
or
inc
jl
gs
mov
lock
cli
testl
sti
popf
mov
jno
and
les
int
call
or
mov
adcb
mov
scas
mov
iret
lahf
dec
push
enter
cli
inc
sbb
sub
sbb
subb
rcll
fstpt
lea
lods
add
rorb
notb
daa
push
fldl
mov
inc
dec
and
inc
aas
jp
addr16
adcb
push
icebp
mov
cld
out
aad
push
pushf
cmpsl
outsw
and
jecxz
pop
stos
insb
hlt
repz
das
jns
hlt
call
pop
push
add
push
negb
cmc
aas
cld
cld
arpl
shlb
out
push
ja
das
rorb
sub
into
mov
in
loopne
jecxz
add
and
sub
ljmp
push
add
movsl
outsb
cltd
aam
pop
loopne
jb
pop
xor
push
fmuls
outsl
push
scas
inc
or
aam
add
add
iret
jle
pusha
mov
inc
adc
ficoml
push
pop
push
mov
test
pop
jnp
addb
mov
dec
enter
pop
mov
cmc
out
sysexit
cmpsb
rclb
out
mov
shrb
xchg
popa
mov
call
mov
and
push
out
mov
test
movsl
subb
jge
mov
mov
or
test
adc
pop
cmpsl
outsl
push
mov
jle
inc
js
adcb
add
dec
cld
jnp
filds
mov
or
and
sbb
sbb
xchg
push
sub
int
pop
test
jo
mov
rcrb
xchg
mov
out
int
leave
das
fimull
fmulp
push
sub
jg
fwait
pusha
pop
or
cmp
adc
ret
shl
cmc
cld
mov
pusha
mov
shlb
push
or
pop
scas
jp
add
movsl
movsb
movsb
rcr
adc
pusha
cld
jmp
fprem1
add
sub
mov
cmp
inc
fs
test
mov
mov
lahf
aad
push
pop
hlt
stos
and
and
clc
cmpsl
ds
push
cltd
inc
push
mov
into
rcl
push
or
pop
or
lahf
ret
ficoms
inc
fadds
dec
push
inc
xor
mov
stos
cmc
add
cmpsl
xchg
cld
out
hlt
std
sbb
lock
adc
dec
mov
lock
inc
cld
push
mov
xchg
sahf
sub
icebp
xchg
mov
push
subl
jnp
jae
dec
mov
xchg
jb
popf
push
mov
das
mov
push
or
or
je
nop
std
sub
cmp
scas
dec
cmp
inc
jl
mov
pushf
push
insl
xchg
mov
cmp
mov
paddd
je
cld
cld
and
rclb
iret
aaa
incl
icebp
out
insb
cmpsl
jp
inc
lret
stos
or
test
mov
arpl
or
andb
lea
xchg
pop
pop
sar
ljmp
sbb
push
nop
sub
clc
push
xor
jns
mov
repz
jnp
addr16
cmp
mov
aam
jl
out
out
js
or
lret
inc
aas
addr16
jne
xorb
cmc
jbe
loopne
xchg
mov
hlt
daa
cld
or
cmc
or
ficomps
insl
pop
js
stc
pusha
out
mov
scas
lcall
pop
sub
out
push
lods
or
jmp
repz
sub
cmp
cmp
mov
lea
fidivl
lahf
push
add
and
pop
jnp
pushf
sbb
jne
inc
mov
addr16
jns
xchg
pushf
jg
mov
ljmp
out
push
scas
insb
xor
insb
cmpl
mov
mov
loopne
movsl
cmp
and
sbb
inc
out
pop
xor
adc
inc
xchg
lods
int3
fstpt
xor
cmp
es
mov
cld
pop
cltd
pushf
xchg
js
lcall
ffreep
pop
icebp
inc
add
inc
jg
sbb
and
fidivl
decl
mov
int3
mov
mov
psadbw
cs
xor
clc
pop
inc
dec
fdivr
sbb
jge
push
out
pop
sbb
test
sbb
stc
mov
mov
das
xor
les
arpl
push
jp
xchg
xchg
mov
mov
mov
out
cmpsl
fwait
fwait
mov
adc
sbb
or
imul
add
int3
xchg
xchg
bound
and
cmpsl
movsb
sub
push
sbb
cld
or
add
push
pop
or
scas
jb
dec
pushf
in
mov
mov
push
lret
pop
jecxz
decl
and
lcall
push
and
pop
roll
dec
mov
mov
inc
dec
and
mov
mov
mov
loopne
cld
cmc
das
test
sbb
cltd
xor
pop
cmp
mov
pop
lock
mov
ret
loope
push
hlt
call
xchg
pop
adc
ja
cmp
xor
fldcw
mov
xor
lea
sub
mov
in
pop
or
cmp
add
lahf
jg
jne
inc
pushf
mov
fs
sub
xchg
xor
decl
fstpl
adc
out
rcrl
mov
add
inc
push
pop
cmpsb
cmp
int
sub
xchg
xchg
lret
pop
jo
outsb
jle
daa
pop
subb
push
jmp
and
shrb
pop
ret
adc
sbb
pushf
mov
dec
notl
add
out
shlb
adc
jne
pop
mov
shl
popa
arpl
jg
or
enter
mov
clc
push
daa
loope
or
jb
mov
mov
ljmp
lret
repnz
mov
cmp
sub
ds
cld
out
mov
popa
xchg
in
mov
mov
rclb
pushf
int
adc
or
outsl
jbe
aaa
push
xchg
xorl
cmc
popf
lea
in
pushf
aas
out
repnz
jecxz
sbb
fisubrl
jno
es
dec
mov
push
cmp
insb
pushf
xchg
mov
fcomip
and
ret
pusha
jmp
cmpl
mov
les
orl
fwait
lcall
jl
rcll
filds
adc
jmp
add
push
and
in
sahf
cmpsb
jae
cmc
xchg
int3
mov
jecxz
cmc
mov
ljmp
das
pop
push
pop
jl
sub
pop
sti
jp
sbb
cmpsl
mov
mov
lret
sbb
or
xlat
push
mov
or
jle
outsl
pop
pop
loop
stc
lock
mov
cmp
push
aaa
cld
mov
and
adc
xor
rorb
inc
cli
lahf
insb
jmp
insl
divb
inc
lods
pushf
dec
mov
mov
add
pushf
and
sbb
das
cld
pusha
and
add
push
mov
adc
popa
or
and
cld
adc
sub
adc
test
loopne
jge
lret
cltd
pop
es
enter
jg
nop
iret
lret
adc
sub
cmp
sub
pop
cmc
push
mov
outsl
jbe
ja
jbe
xchg
add
std
int
in
cmc
sbb
xchg
and
push
mov
das
add
push
into
xorb
leave
jle
enter
fiadds
loop
out
daa
cmp
sub
lret
cli
push
sbb
xchg
movsb
xchg
xchg
sub
add
mov
faddp
and
lea
das
adc
or
inc
xchg
inc
ret
fstp
mov
ds
mov
pushl
rclb
sub
add
sbb
sub
shl
test
fistpll
dec
cmp
les
or
ljmp
or
ja
sub
lahf
aas
pop
push
mov
cmpsl
jb
sbb
aam
pusha
int
xchg
stc
mov
dec
cmp
jae
hlt
mov
bound
inc
outsl
outsl
mov
aad
add
push
loopne
out
push
adc
push
push
xchg
popa
test
dec
adc
shl
int3
pushl
rcr
leave
test
jp
push
loopne
sarl
xor
ja
adc
aas
out
inc
lcall
ror
daa
mov
sbb
and
and
imul
or
lods
addb
stos
aas
icebp
fldenv
ud0
and
stos
adc
mov
roll
cmpb
and
inc
jg
push
iret
mov
mov
jl
jecxz
scas
sbb
adc
pop
aaa
add
iret
lea
test
outsl
cmpsb
jnp
fs
mov
mov
fdivr
repnz
movsl
and
popa
adc
push
xor
outsl
stc
mov
push
popf
jae
loope
mov
fimuls
hlt
addb
ljmp
push
sub
pop
dec
popa
outsb
jae
les
cmp
mov
fimuls
int3
repnz
mov
or
stc
repz
movsb
sbb
sub
in
fists
mov
inc
push
mov
leave
mov
add
in
adc
adc
or
adc
cmp
inc
outsl
pop
fs
jle
addr16
rcrb
loopne
loope
aaa
icebp
xchg
iret
idiv
ret
add
xor
add
bound
ss
stos
mov
push
loopne
push
adc
ret
ljmp
ror
clc
in
stos
pop
or
mov
shll
loop
adc
cwtl
sahf
movsl
jae
dec
ds
imul
mov
add
lret
xchg
call
arpl
mov
xchg
xchg
xchg
mov
add
mov
out
test
std
mov
and
sbb
xor
aaa
lock
or
add
ficoms
in
loop
jl
stos
mov
adc
xor
arpl
decb
cmpsb
xorl
out
cli
pop
mov
or
mov
xor
inc
pop
std
pushf
push
cmpb
sub
incl
test
rcrl
pushf
dec
mov
cld
cmp
popa
push
xchg
inc
jle
mov
test
lock
shrd
mov
add
add
cmp
cmovg
inc
popa
push
arpl
mov
lahf
mov
fnstsw
dec
shr
adc
add
or
ljmp
jge
dec
sbb
pop
mov
cli
adc
push
into
sub
and
cld
xchg
and
and
ret
pop
les
add
rolb
push
stos
mov
mov
int
cli
pushf
jg
out
movsb
add
adc
das
ss
ret
xor
subb
ljmp
loopne
aas
clc
ficoms
rolb
pop
ja
mov
jp
iret
aaa
add
sbb
insb
xchg
ds
mov
mov
sbb
mov
into
sbb
fwait
xor
lcall
push
and
pop
std
cmp
andl
mov
sbb
xlat
jnp
mov
or
jne
push
std
adc
and
jl
lock
test
loopne
mov
and
or
ljmp
and
adc
vpunpcklqdq
mov
aam
jle
mov
mov
dec
xchg
ljmp
mov
cli
jmp
test
pop
lods
and
cmp
xor
pop
out
fimull
xchg
mov
xor
push
fbld
decb
ljmp
cli
das
shlb
stos
daa
fidivl
or
push
xchg
cltd
mov
jge
subl
ret
rolb
inc
shll
jg
mov
dec
xchg
jge
test
fmul
push
fucomp
clc
and
and
ss
sub
or
mov
pushf
pusha
aam
mov
filds
loope
fdiv
fimull
sbb
inc
or
dec
mov
dec
sub
push
imul
fwait
andl
fcompl
incl
sub
inc
das
pop
pop
and
pop
icebp
iret
and
pop
fnsave
sbb
fsub
mov
add
fwait
mov
pop
aaa
mov
push
out
fnstcw
cmpb
fisubl
jle
add
clc
and
or
cmp
pop
incl
push
mov
je
loopne
in
addb
or
cmp
rcrl
mov
or
xchg
cmp
sbb
icebp
mulb
scas
and
inc
mov
cli
pusha
fsubrl
jae
mov
pop
xchg
ljmp
iret
pusha
out
add
xor
shrb
int
bound
fiaddl
ret
out
test
out
dec
mov
inc
out
add
and
pop
pop
cmpl
imul
cmpsl
insb
cltd
jp
pop
mov
shlb
ss
cmp
mov
mov
inc
dec
xor
add
insb
jl
jp
stos
pusha
shrb
dec
mov
adc
jmp
in
xor
sbb
dec
cmp
or
fcmove
jns
add
mov
inc
cld
inc
jl
jae
and
dec
sahf
arpl
dec
lahf
aaa
call
and
mov
mov
inc
jmp
jecxz
pop
mov
inc
mov
rolb
loopne
jle
adc
stc
mov
jl
idiv
pushf
fwait
pop
sbb
adc
xor
inc
sahf
ficompl
add
jo
add
test
inc
pushf
cmp
out
out
push
and
ss
sub
jnp
std
sbb
cltd
mov
pop
std
dec
mov
and
lods
ja
test
ror
clc
add
insb
enter
mov
aaa
lock
inc
sarl
adc
movsl
shl
imull
xchg
ret
call
sarb
push
les
add
mov
mov
es
or
mov
das
ficoms
pop
pushf
jg
and
jbe
jae
sahf
into
test
lret
sarb
leave
out
sbb
and
jp
mov
scas
loop
lock
sbb
ljmp
pop
test
and
test
movsb
pop
jns
xor
fwait
sub
xor
cmc
mov
out
aad
push
sub
sub
js
fcompl
xor
mov
mov
add
mov
xchg
fneni(8087
out
push
in
add
inc
sub
cli
pop
fstpl
mov
ja
lahf
pop
mov
inc
xchg
jnp
or
sbb
aas
inc
scas
jno
pop
loope
cld
shrb
adc
aaa
ds
mov
ja
popa
lock
pop
lret
push
adc
out
stc
cmp
ljmp
subb
test
pop
dec
outsb
pop
jno
lcall
ss
mov
mov
aad
int
jmp
mov
mov
adc
scas
in
pop
imul
or
dec
mov
loopne
cltd
incl
pop
sub
dec
and
add
sti
mov
sbb
cmc
pop
add
popf
dec
mov
mov
push
jns
pop
dec
imulb
dec
adc
mov
mov
inc
mov
mov
jne
rcl
sub
out
jmp
sbbb
mov
inc
adc
pop
jbe
pop
pushl
sbb
clc
bound
mov
lods
scas
shlb
pop
cli
imul
push
jno
mov
sbb
xchg
aaa
fiaddl
mov
lds
fildll
test
mov
inc
mov
aas
jns
call
pop
inc
jo
mov
mov
int
sub
iret
ljmp
cmp
sub
cli
fldl
arpl
pop
sbb
or
adc
aas
sbb
pop
es
rolb
push
inc
rorb
outsl
loopne
jle
mov
into
movsb
jmp
pop
repnz
ljmp
call
ja
popa
push
jbe
andb
fwait
mov
inc
rcrb
movl
mov
push
mov
std
fstpl
push
adc
enter
pop
mov
je
in
push
pushf
popf
pushf
pop
xor
pop
pop
pop
mov
adcb
mov
sahf
mov
inc
in
testl
loopw
cmp
fiaddl
fs
js
test
sti
movsl
add
dec
fildll
insl
int3
jg
push
cmc
sbb
xor
sub
sub
in
dec
inc
mov
pushf
dec
ret
cli
pop
cwtl
insl
pop
push
fstpl
and
cltd
es
add
pop
mov
fcomps
mov
jg
cmc
inc
or
sarb
fldt
ret
int3
cmp
jecxz
or
data16
pop
inc
imul
sbbl
cmpb
call
shr
cmp
loopne
and
cmp
scas
idivl
andl
xchg
xchg
mov
dec
pop
mov
icebp
loopne
hlt
pop
sbb
or
pusha
sbb
cmp
push
jge
pop
push
mov
mov
enter
jg
mov
mov
cmp
mov
pop
lahf
push
les
push
sbb
jg
gs
push
in
fmull
add
or
sub
mov
pop
jl
and
xorb
enter
xor
je
and
dec
add
dec
sarb
cs
sub
mov
cld
int
and
in
sbb
sub
pop
add
pop
cmp
and
cld
inc
xchg
xchg
jecxz
mov
lds
sbb
fdivp
inc
pop
loop
cld
mov
xchg
and
outsb
imul
mov
jbe
aaa
push
rcrb
hlt
cld
cld
ffree
mov
fisubrs
xor
push
fldl
test
xchg
lods
mov
pushf
mov
subl
lret
aam
push
fists
sbb
test
clc
stos
daa
mov
stos
fidivrl
std
add
inc
push
pop
xchg
pop
or
fsts
iret
nop
stos
dec
js
mov
out
mov
jecxz
inc
jo
gs
push
lea
lcall
lahf
fsubp
pushf
jns
lcall
mov
push
lcall
dec
loopne
jbe
repnz
js
sbb
sbb
xchg
and
scas
mov
cmpl
and
pop
sub
stos
jle
fwait
push
adc
push
fmul
call
loop
dec
lods
rcrb
cld
sub
icebp
or
insb
mov
fwait
aam
or
cs
add
cmp
inc
jo
jne
jle
add
repnz
mov
mov
mov
int3
sti
loop
adc
cmp
inc
add
aam
call
pop
sbb
lcall
jmp
in
add
and
mov
cld
inc
lcall
jl
loopne
push
push
mov
in
int3
clc
dec
loope
rcl
mov
and
mov
pop
pop
popa
add
push
mov
fs
ret
fsubp
int
and
orl
sbb
notl
inc
iret
sbb
jl
addr16
xchg
pop
ss
decl
clc
jp
pop
lods
jle
rcll
aam
add
pop
sbb
sahf
pop
inc
dec
inc
outsl
jle
fcompl
mov
jp
adcb
or
add
lods
repnz
inc
mov
add
frstor
mov
lea
mov
rol
mov
js
mov
and
sbb
cs
lods
push
dec
inc
xor
jns
outsl
fistps
movsl
mov
scas
rolb
int
mov
sahf
cmp
xchg
jns
les
cmp
fimull
fnstsw
je
nop
scas
in
and
sub
and
jl
decl
mov
and
daa
jg
cwtl
push
fwait
mov
out
aaa
jge
push
into
ret
ds
lock
je
xlat
and
xorl
outsl
push
insl
mov
add
stos
fcmove
mulb
in
lret
popf
rdtsc
in
loopne
adc
sub
test
insb
fs
jl
xchg
mov
rcr
addr16
scas
adc
xchg
add
cld
fidivrs
fisubl
hlt
data16
lods
add
cmp
mov
cmpsb
mov
idiv
add
fcmovne
hlt
fstpt
rcr
sbbb
bound
or
cld
and
xchg
and
jo
push
mov
push
leave
sbb
std
push
clc
or
call
xor
or
mov
pop
in
lahf
xchg
sbb
pop
lods
sbb
test
fdivr
mov
nop
loope
cld
adc
fstpl
int3
ss
loope
sub
add
mov
mov
push
adc
in
push
out
push
pop
add
cld
push
sbb
cmp
or
pop
pushf
mov
sti
pop
adc
and
int3
push
sahf
add
es
in
xchg
add
aad
jle
dec
insb
cli
in
or
int3
cmp
xor
pop
sbb
jp
jmp
daa
pop
or
addr16
pop
cmpb
loop
shufps
cmpsl
or
pop
test
ja
hlt
enter
xor
or
mov
sub
mov
pop
push
jle
test
push
push
js
jle
rol
pusha
aam
xchg
mov
cld
hlt
pop
repnz
mov
fcmove
sbb
sbbl
adc
inc
pop
pop
ss
imul
psllw
cltd
inc
cmpb
adc
cld
test
mov
xchg
push
ficomps
idivb
jne
cld
xorl
xchg
repnz
in
aam
inc
std
xchg
mov
inc
pop
push
cli
out
add
push
sbb
cs
xchg
scas
sahf
cld
test
rcr
shl
movsb
stc
outsb
in
sub
inc
add
mov
lea
adc
mov
int
lahf
pop
out
adc
and
dec
cmp
int
clc
int
xorb
outsb
pop
inc
pop
nop
fwait
mov
ja
mov
js
add
out
push
outsb
loopne
mov
xor
pop
push
gs
loop
mov
push
data16
daa
jo
mov
push
es
sub
cmp
sarb
adc
nop
push
fwait
rorl
mov
mov
push
loope
ss
push
sbb
dec
inc
test
cmp
popa
outsl
dec
add
lock
mov
jmp
in
test
imul
adc
gs
je
ljmp
imul
pop
pop
sub
aad
mov
jp
sub
inc
cwtl
dec
movsl
sbb
ficoms
sarb
mov
jo
in
aas
lods
mov
shlb
mov
cltd
mov
nop
gs
out
jo
inc
jg
aam
lock
mov
mov
incl
ret
jecxz
lret
divb
mov
lock
leave
call
loope
dec
add
mov
cmp
bound
xor
mov
add
dec
dec
add
testb
xor
xchg
loope
or
cmp
or
push
pop
mov
addr16
es
int3
jge
cwtl
fucomi
jnp
cld
nop
lret
out
sbb
nop
setnp
fs
lods
call
out
mov
sti
int
test
xchg
outsb
mov
decb
sub
add
std
and
fldl
popf
mov
or
sbb
xchg
and
shlb
aaa
insl
lock
xchg
adc
roll
stos
test
addl
cwtl
enter
inc
add
icebp
add
cmpsl
sub
jle
inc
imul
add
xor
lcall
push
pop
xchg
inc
and
jge
rcrl
pop
das
adc
or
stos
ficoms
lods
jle
pop
sarl
stos
add
scas
pop
stos
lods
in
out
add
or
icebp
and
inc
pop
sbb
aas
js
and
scas
ds
insb
in
dec
pop
cmp
push
fsubrs
iret
inc
data16
add
and
jmp
repnz
jle
or
call
cli
subb
aaa
mov
mov
xchg
push
imul
adc
and
sahf
xor
push
rclb
and
loopne
dec
pop
push
inc
mov
and
fs
test
inc
and
lods
mov
ret
pop
dec
xchg
add
movsb
inc
add
dec
loopne
add
pop
out
or
or
hlt
xor
sub
and
push
and
pand
mov
add
in
testl
add
mov
add
sub
lahf
push
dec
je
inc
lea
iret
sbb
lods
je
add
xor
iret
cmp
filds
stos
xchg
add
add
mov
movsb
mov
js
xchg
orb
push
in
outsl
xor
mov
addl
jp
mov
lcall
add
and
enter
jbe
dec
lods
inc
cmp
dec
je,pt
outsb
mov
jo
jl
jae
xchg
out
test
mov
fisubrl
ja
icebp
mov
or
jns
div
leave
cli
mov
cld
xchg
mov
xchg
xor
xchg
sub
jle
lods
test
pop
add
in
lock
movsb
mov
fsubr
aaa
cmp
mov
add
xor
dec
flds
push
add
mov
mov
lock
incl
ss
enter
sub
dec
roll
cld
xchg
sub
cmp
push
or
mov
dec
and
add
xchg
movsb
lret
mov
sbb
popf
scas
in
aas
add
sbb
shll
push
mov
rcl
ljmp
pop
push
push
push
shlw
loopne
add
add
mov
sbb
orl
and
or
jne
adc
js
dec
inc
mov
lret
sbb
mov
pop
das
clc
cmp
loopne
push
xor
out
and
call
je
push
int3
or
sub
mov
mov
add
imul
lock
dec
push
popa
stos
fwait
bound
movsl
and
pop
xchg
add
int3
call
push
dec
ret
bound
add
idivl
mov
pop
jl
mov
notl
or
addr16
xchg
out
sub
ret
sarl
repz
or
test
rol
sub
cmp
jnp
jnp
pop
mov
fcomps
xor
jns
mov
pop
cld
into
jmp
jo
dec
in
jg
and
cmp
push
mov
inc
outsl
loop
xor
jmp
lret
push
cmp
scas
cld
add
sub
std
and
mov
xchg
cmp
pop
mov
mov
add
cmp
push
xor
cmp
cmpsl
pop
shl
call
inc
add
xlat
insl
cmpb
add
sbb
sbbb
sbb
sub
and
mov
out
rolb
sbbb
fs
mov
lcall
xchg
out
lods
cld
cmpsb
xchg
dec
mov
test
inc
push
lea
xchg
push
xor
scas
add
cmp
jecxz
xor
ficomps
lods
je
sbb
lock
push
sub
cmpsl
or
xchg
pop
into
addb
test
test
cmpsb
pop
sub
adc
addr16
xchg
daa
das
pop
fmull
scas
pop
dec
notl
ret
aas
js
dec
xor
xchg
inc
cs
inc
mov
jns
mov
lods
rcr
repz
inc
fistps
adc
sbb
add
mov
push
or
std
mov
ja
mov
pushf
push
inc
jecxz
jmp
add
and
movsl
jmp
enter
jne
fsubp
xchg
pop
xor
jg
sbb
pop
xor
movsl
or
fildll
jo
pop
lods
rol
add
pop
mov
scas
jb
ret
push
mov
jp
xchg
or
xor
pop
je
mov
mov
xchg
and
icebp
cmpsb
popl
cli
cmp
add
dec
adc
jle
in
ds
pop
sub
sbb
call
incl
xor
mov
call
sbb
popf
test
mov
aad
lods
dec
mov
add
pushf
lcall
xlat
pusha
xchg
cmp
inc
mov
fcoms
sub
lret
sub
js
pop
mov
xlat
lret
nop
aad
call
outsb
nop
pop
sub
mov
in
mov
fildl
out
mov
lret
cmc
mov
mov
xor
add
iret
mov
divb
add
mov
sbb
ljmp
mov
fcom
mov
ds
inc
and
adc
lret
pop
push
test
rcpps
aas
scas
add
inc
xchg
push
and
sbb
lock
test
mov
xchg
cmp
inc
push
adcb
mov
les
add
and
loope
mov
es
rorb
fcomi
or
inc
jp
ljmp
add
jmp
cmc
mov
nop
call
push
insb
xchg
xor
push
ret
jmp
inc
je
jbe
cs
lahf
shrb
dec
push
pop
and
add
push
push
adc
dec
mov
or
xchg
mov
inc
xchg
loope
add
fisttps
mov
int
in
stos
sar
push
rcl
lods
les
mov
je
push
push
cltd
imull
sbb
pop
jge
add
movsl
ds
loopne
nop
in
dec
add
mov
in
mov
xchg
xor
jbe
sbb
ljmp
in
mov
in
and
mov
fisubrl
ljmp
sti
rcrb
mov
iret
mov
dec
dec
mov
out
mov
adc
mov
decb
sahf
push
jl
add
jne
cltd
cmp
iret
pop
cld
xor
xor
lcall
fisttpll
cwtl
or
cmp
adc
jl
adc
sub
mov
clc
test
testb
lock
fwait
push
mov
aam
mov
mov
mov
cli
and
push
pop
lcall
push
and
scas
sbb
push
xor
xor
loop
decb
fmull
inc
fstpt
xchg
ds
lret
rcrl
dec
sar
loopne
lahf
movl
test
js
clc
call
fiaddl
das
incl
add
inc
pop
xchg
and
daa
repz
sbbl
mov
repz
ljmp
mov
push
outsb
sub
aad
orb
and
add
or
subb
inc
xor
inc
add
pop
mov
push
xor
mov
xor
stos
rcll
and
inc
dec
mov
insb
dec
mov
jb
or
jmp
aad
mov
rclb
and
xchg
rorb
mov
mov
ds
xchg
nop
pop
or
inc
mov
int
add
add
mov
hlt
inc
jl
cmc
mov
and
and
or
iret
mov
scas
les
aam
mov
roll
test
inc
xor
fstpl
test
out
lods
sub
add
int3
inc
and
lcall
inc
push
imul
push
cwtl
sbb
cmp
inc
or
inc
mov
pop
jl
dec
ret
or
shlb
pusha
inc
rcr
cld
push
inc
pop
movsb
in
fs
xchg
xor
sarb
fst
or
incb
loopne
mov
cmpl
or
loope
iret
sub
pop
cmc
mov
pop
adc
cmpsb
test
fildll
loop
sub
lahf
xor
adc
test
shrb
lock
inc
outsb
and
ret
pop
or
cli
adc
dec
inc
mov
in
add
sub
add
adc
adc
xchg
mov
in
out
lods
data16
xor
dec
sbb
js
adc
mov
popf
push
orps
inc
mov
ja
jo
orl
or
push
xor
test
fadd
xchg
dec
pop
lock
mov
loope
js
gs
fdivs
daa
fcoms
mov
and
pop
pop
inc
outsb
inc
ds
pop
outsl
or
dec
fisttps
insb
subb
aaa
lock
in
push
leave
mov
cmp
out
loop
mov
stos
jns
mov
fwait
lock
mov
inc
cld
pop
mov
lods
dec
push
jg
add
inc
and
push
lock
js
dec
mov
pusha
pop
pushf
push
test
movsl
jecxz
jno
sbb
test
add
sub
aas
pop
mov
bound
fs
or
in
jo
push
adc
stos
gs
fldenv
add
push
jno
je
mov
mov
inc
addr16
loopne
aam
push
sahf
ss
cmp
cmpsb
lret
pop
shrb
rol
inc
add
sbb
fwait
hlt
mov
cmp
and
arpl
hlt
cli
jl
adc
or
mov
lods
or
pop
sub
push
push
fimull
loop
leave
cmpsb
jne
bound
xchg
adc
js
inc
or
cwtl
bound
ss
aas
fimuls
sti
push
mov
adc
loop
dec
push
scas
flds
adc
sub
jle
lods
shrb
mov
scas
adc
sbb
add
mov
addb
add
lret
fsubs
push
mov
push
adc
inc
mov
pop
sti
push
js,pt
jge
add
nop
sbb
mov
adcb
jae
fbstp
mov
add
cmpl
lea
and
ja
xor
lods
xchg
inc
inc
mov
repz
mov
decb
adc
add
rol
loopne
mov
dec
call
and
inc
dec
in
and
xor
out
or
pusha
lock
jl
pop
sub
inc
xchg
sbb
dec
pop
fwait
pop
inc
add
xor
cmpsl
int
aam
xchg
andl
cli
pop
jge
push
nop
sub
imulb
push
icebp
sbb
icebp
sbb
adcl
mov
sbb
aaa
dec
in
inc
xor
int
into
movsl
nop
popa
cmp
loope
das
addr16
cmp
out
sub
pop
mov
jne
sbb
pop
arpl
mov
filds
push
mov
sbb
scas
jle
lea
pop
sub
es
loopne
dec
cmc
jne
adc
adc
xchg
pop
xlat
sbb
je
mov
mov
jg
cwtl
mov
dec
fsubp
call
sbb
sbbl
push
in
xchg
fsts
inc
jno
js
mov
bound
push
cmp
ds
inc
sahf
adc
outsl
and
js
jmp
inc
scas
shrb
fcos
jae
mov
mov
repnz
ret
fnstcw
push
stos
in
pop
add
icebp
rol
dec
addl
sub
pop
jnp
add
in
jne
or
mov
gs
addb
add
add
xor
stos
outsl
incb
cmp
loop
imul
dec
jne
mov
lock
punpckhdq
aas
addr16
xor
dec
outsl
mov
mov
or
out
dec
jno
adc
jo
movsb
test
adc
call
ss
das
pop
cli
jno
testl
add
jecxz
mov
frstor
repnz
add
xor
or
std
insb
rcll
lds
shll
sub
xorb
mov
sub
adc
fnstsw
repnz
or
mov
mov
fnstenv
push
jns
cmpsl
sbb
sbb
ret
je
pop
dec
rcl
sub
imul
sub
xchg
pop
push
push
testb
cmp
mov
imul
add
sbb
sub
inc
push
pop
mov
xchg
xchg
push
clc
inc
sbb
xor
mov
push
aaa
add
push
test
push
ljmp
xchg
cmp
in
das
aas
nop
mov
pop
sbb
into
mov
jmp
mov
popf
in
and
adc
pop
or
adc
dec
das
lea
sub
adc
repz
scas
cmp
xor
imul
nop
mov
fldcw
push
je
loopne
loopne
jg
test
mulb
pop
mov
rorb
clc
lea
adc
arpl
pop
jno
xchg
int3
and
dec
in
mov
enter
xor
in
xchg
dec
dec
and
xor
cld
push
cmp
mov
push
cmp
push
sbb
jb
outsb
decb
xchg
sti
sub
lea
outsb
xor
and
lea
and
fsubp
mov
cltd
repz
scas
nop
or
movsl
inc
hlt
dec
pop
sub
clc
xchg
push
mov
daa
ja
mov
xor
mov
jl
dec
fwait
mov
xchg
jb
mov
lds
fs
push
pop
or
bswap
dec
fimuls
push
mov
clc
xor
mov
arpl
mov
mov
insl
pop
test
sub
cmp
jmp
mov
xchg
nop
pop
mov
rorb
into
outsb
xor
adc
lahf
fimuls
lcall
ret
mov
and
inc
adcb
xchg
xchg
shlb
lahf
enter
dec
cmpl
shr
out
ret
or
stos
shrl
sbb
iret
dec
iret
cmp
jg
mov
cmp
in
test
dec
leave
sahf
int3
pushf
scas
pop
push
adc
hlt
or
les
mov
not
xchg
loope
pop
or
inc
hlt
cmc
cmp
stc
dec
lods
adc
test
cmp
cmovge
inc
push
pop
jae
icebp
stos
adc
mov
sbb
pop
nop
cmp
adc
addl
push
mov
ja
loope
xchg
inc
and
jmp
adc
insb
dec
in
pop
pop
fsubs
sub
push
mov
shrl
out
push
sbbb
or
lds
mov
sbb
cmp
push
dec
out
lcall
push
and
cld
orb
int3
mov
lds
sbb
lret
cmp
lret
xor
push
les
shll
pop
pusha
inc
in
xor
mov
push
jle
or
jne
jle
ja
subl
pusha
inc
mov
or
xchg
out
inc
or
xor
push
pop
xchg
mov
sbb
fdivs
rcrl
and
pop
lods
lea
xchg
jecxz
sub
add
bound
jp
pop
icebp
sbb
cmp
xchg
lods
and
and
addb
xchg
rclb
adc
ja
mov
ret
sbb
js
mov
nop
or
stos
stos
jno
lret
mov
insb
pop
adc
xchg
jg
dec
jb
stc
in
adc
test
sbb
push
sub
sti
dec
icebp
pusha
jle
les
aad
xchg
xchg
lea
add
insb
xchg
mov
adc
shlb
stos
dec
outsb
push
hlt
aaa
sarl
iret
inc
mov
push
sbb
decb
outsb
jmp
add
sar
jne
push
add
pop
loopne
jo
es
stos
mov
pop
jle
mov
and
push
mov
sub
dec
ds
or
arpl
mov
or
adc
mov
repnz
movaps
mov
sbb
mov
fnstenv
iret
adc
popa
scas
sub
adc
xor
sbb
das
nop
xchg
push
movsb
jns
xor
loope
fwait
mov
mulb
movsl
add
jl
jg
xor
xchg
mov
jg
in
cmovs
out
lods
popa
mov
popl
jno
jbe
cmp
fwait
mov
sbb
cli
jle
ret
push
inc
pop
mov
lret
inc
inc
sub
stos
cmpsb
pop
pop
test
add
sbb
pop
mov
jecxz
addl
dec
jge
rclb
les
sbb
sub
daa
sbb
sti
jp
inc
out
test
adc
xchg
mov
fdivrp
roll
out
jnp
inc
inc
cwtl
lods
clc
push
lods
jecxz
bound
jle
dec
mov
test
ljmp
mov
add
inc
cmp
out
adc
sti
in
mov
mov
aad
pop
shll
xor
jle
and
inc
sbb
xor
lods
fcmovbe
jo
inc
or
ljmp
rorb
int
push
test
add
scas
les
pop
loopne
bound
mov
mov
pop
mov
cmp
jmp
sub
jp
sub
mov
cltd
int
xlat
and
or
push
loopne
sbb
sub
lds
pusha
mov
fldcw
or
inc
std
ja
fwait
or
xchg
push
loope
jmp
shl
movsl
mov
or
lea
push
je
cli
xor
fidivl
xor
push
cmp
or
shrb
nop
mov
push
jl
add
bound
out
jg
dec
jb
sub
xchg
push
or
xor
mov
rolb
insb
jo
jg
xorps
sub
je
gs
sbb
cld
mov
mov
mov
sbb
inc
insb
or
dec
test
negl
jne
sub
lock
pusha
adc
jnp
push
xchg
jb
jnp
add
imul
lret
sub
push
mov
ljmp
insb
mov
inc
mov
cmc
pop
mov
pop
mov
dec
pop
push
divb
lock
cld
out
orb
jae
dec
pop
daa
cmp
adc
pop
sbb
outsb
jecxz
hlt
enter
lock
lcall
nop
pop
mov
lret
push
jo
les
cs
sarb
xchg
push
ret
xchg
mov
ja
adc
mov
fiadds
pop
jbe
repz
pop
andb
rolb
and
xor
jecxz
insl
repz
movl
cmp
push
fs
cs
mov
leave
filds
mov
xor
cs
xor
sbb
fdivrs
mov
ret
mov
scas
lock
fdivl
shrb
sbb
cld
add
sbb
das
sub
cld
mov
fiadds
lret
and
jmp
or
add
outsl
cs
cs
jo
mov
and
jbe
mov
xchg
push
cmp
outsb
pop
sbb
sahf
pop
cmp
add
mov
pop
stos
cli
stos
jp
add
pop
pop
jbe
inc
mov
ret
sbb
jp
add
mov
xor
repnz
push
ljmp
sbb
push
pusha
loope
push
cmpb
or
enter
pop
sub
sbb
sti
xor
jmp
or
adc
fsubl
xorb
shrb
mov
pop
stos
adc
es
or
pop
loope
adc
sub
inc
dec
adc
dec
out
fs
adc
xchg
je
add
jo
int3
iret
mov
inc
add
inc
mov
mov
jnp
cmpsl
icebp
jb
test
and
jmp
sar
push
inc
or
cmp
mov
mov
lods
jle
fidivrs
rclb
push
out
pop
test
aas
mov
and
push
mov
dec
test
stos
dec
push
sbb
jg
mov
push
push
data16
in
inc
mov
jle
in
pop
xor
mov
sarl
cmp
add
es
mov
or
stc
and
or
jb
sar
test
repnz
xchg
push
in
sbb
sub
xchg
outsl
add
adc
icebp
pop
mov
ficoms
enter
mov
imul
fadds
mov
pop
adc
jle
daa
inc
pop
jno
pusha
jmp
aad
xlat
cmp
inc
cmp
mov
mov
lds
dec
pop
outsl
test
pop
call
xor
loop,pt
xchg
lahf
inc
xchg
push
push
jle
das
lock
cli
inc
adc
jae
and
jg
inc
lret
add
and
push
lods
int
cmpsl
push
inc
or
repnz
inc
mov
and
xor
fildl
data16
sbb
sub
inc
mov
ds
call
lods
decb
cmp
inc
test
cmp
nop
in
or
js
inc
ja
and
xchg
cmp
pop
sbb
push
jecxz
adc
ret
inc
rcrb
jecxz
sbb
mov
hlt
adc
loope
loop
leave
cwtl
sbb
mov
xchg
or
addb
push
inc
jo
pop
sbbb
cld
loope
pushf
clc
sbb
xorb
jecxz
add
or
xchg
push
or
or
xor
adc
push
add
in
push
std
addb
out
call
xor
int
cli
pop
dec
pop
mov
dec
dec
add
fiaddl
push
insb
adc
shr
sahf
adc
lea
sbb
mov
fbld
adc
hlt
ljmp
inc
and
and
add
ja
adc
xchg
sbb
inc
push
jp
dec
notb
xchg
fldz
sub
mov
adc
pop
movb
loope
dec
mov
stos
push
jmp
shrb
test
fdivr
jmp
cs
les
inc
mov
bound
cmp
cmp
xchg
lcall
xchg
cli
out
inc
inc
lret
ret
mov
out
push
mov
xchg
jl
mov
mov
iret
in
add
jns
ds
les
mov
jp
decl
repz
insb
inc
xchg
push
loope
or
sub
ja
mov
sbb
arpl
pusha
or
jnp
push
popa
lret
std
xchg
add
pop
les
xor
ret
pop
popa
mov
ret
aad
ret
ss
inc
aad
mov
inc
and
xor
test
aas
jg
leave
repnz
lds
sub
mov
mov
rcr
inc
push
lock
xor
mov
push
movsb
filds
xchg
or
pop
pusha
scas
loopne
fdivrs
dec
mov
loope
mov
push
inc
mov
adc
pop
notl
push
loopne
out
add
add
roll
push
sub
lahf
adc
sbb
loope
scas
jno
cmp
sbbb
add
mov
jp
popa
add
jecxz
mov
inc
pusha
cld
add
fadds
nop
xchg
pop
fwait
cmc
cmpb
mov
xchg
sub
mov
sub
pop
orl
out
add
fwait
ret
pop
jl
test
movsl
xchg
hlt
imul
push
sahf
fsubp
jg
and
mov
outsl
frstor
setp
scas
movsl
call
and
out
shr
inc
pop
clc
xorb
add
push
cmp
dec
out
inc
xor
lods
dec
mov
push
cmp
sub
aad
add
push
adc
mov
adc
loop
je
cmp
inc
push
and
jle
dec
test
jecxz
sarb
xor
and
add
mov
xor
add
sub
test
jecxz
lock
add
lock
dec
scas
mov
sahf
lea
cmp
icebp
ret
jmp
mov
mov
mov
push
add
mov
mov
mov
loopne
bound
jg
xchg
lea
idivb
int
mov
das
sub
jle
or
xchg
in
sbb
loopne
bound
add
mov
mov
xchg
xchg
mov
inc
jb
ret
mov
fcmovnbe
out
pop
iret
nop
sbb
ja
mov
leave
cmp
arpl
pop
or
pop
test
int3
shl
out
adc
and
stc
adcb
out
movsb
movsb
xchg
cmp
adc
pusha
repnz
and
pmaxub
lcall
cmp
cmp
rorl
movsl
or
insb
cmpsl
lds
ret
lret
repz
out
jb
push
hlt
hlt
clc
out
cli
loope
adc
int3
push
hlt
inc
pop
mov
push
mov
sub
nop
inc
cmpsl
imull
push
xchg
pop
test
jle
mov
lret
or
push
cmp
jo
popa
ret
rolb
sbb
adc
leave
fildl
sbbb
jo
pop
aam
add
mov
lock
roll
pop
inc
cmp
test
clc
aas
pop
rol
call
call
jle
mov
jg
mov
xchg
inc
or
cmpsb
jp
scas
test
inc
jmp
inc
or
push
xchg
cmp
test
mov
cltd
orl
dec
sbb
fldenv
xchg
inc
mov
jne
sbb
roll
cmp
dec
mov
aaa
xor
aam
mov
or
loope
imul
inc
cmpl
insl
shll
xchg
lock
or
into
data16
in
jae
push
aaa
and
and
lret
jns
jbe
in
stc
aaa
lret
mov
les
bound
aam
push
popf
out
bndldx
jbe
push
fs
sub
notb
lock
shll
cld
aaa
sbbb
std
xchg
cmc
push
push
imul
sbb
jbe
sub
push
std
push
mov
dec
cmp
jmp
adc
xchg
inc
sbb
push
inc
leave
mov
cmp
add
dec
cmp
sub
shlb
inc
test
inc
lock
bswap
adc
rcr
and
in
ret
mov
out
pop
mov
sti
pop
mov
in
shll
cmpl
mov
push
pop
clc
mov
xchg
fdivrl
cmp
pushf
js
pop
sahf
push
aam
mov
and
jmp
mov
mov
daa
rolb
lds
sbb
xchg
inc
or
js
mov
es
aam
jae
insl
rcll
ficoml
jb
jl
out
jmp
push
test
mov
call
and
push
add
dec
lods
add
jbe
scas
adc
sbb
mov
cld
icebp
and
mov
mov
pop
push
cli
cmp
sbb
mov
push
and
loopne
loop
subl
jg
aaa
roll
adcl
outsb
mov
dec
adc
mov
cmp
pop
jmp
mov
mov
dec
fistpll
shl
add
movsb
lods
xchg
jecxz
mov
add
loop
add
sbb
adc
sbb
hlt
add
test
test
lret
sbbb
jg
subb
inc
sub
sbb
adc
rol
inc
js
dec
sub
aad
jle
mov
aas
jb
xor
dec
lahf
and
inc
dec
aaa
test
lcall
mov
filds
ret
dec
xlat
xchg
into
push
add
cli
and
cmp
clc
xlat
or
fdivs
dec
jb
mov
insb
cld
addl
fwait
adc
xor
dec
jle
jge
insb
push
cmp
lahf
cmpsb
imul
push
cmp
push
test
sub
ret
cmpsb
fnstenv
sbb
sub
jg
dec
cmpsl
add
push
xor
test
test
orb
mov
push
call
hlt
and
mov
mov
rcrb
fists
in
aas
fidivl
negb
adc
ret
push
popa
xchg
push
aaa
push
ret
or
mov
clc
test
xabort
and
lods
xchg
movsb
scas
jle
mov
cwtl
popa
std
push
xlat
test
pop
sahf
leave
outsb
fimull
jo
jecxz
and
and
test
mov
data16
dec
popf
jae
add
js
aam
and
pop
adc
inc
cmp
and
and
xchg
sub
push
cmc
jg
test
shll
xlat
js
add
or
negb
add
push
cwtl
cmp
or
sub
and
test
sub
sub
leave
pop
jmp
mov
add
or
jo
add
adc
add
js
in
or
fwait
dec
bts
inc
push
shl
stc
cmp
add
pushf
add
lods
sub
or
adc
xor
push
int
add
add
and
lea
inc
dec
js
subl
cmp
loopne
roll
inc
pop
cmpsb
fsubrl
jle
lock
nop
sbb
sti
xabort
mov
and
or
sub
inc
cli
add
sub
push
jge
int3
orb
xor
jo
mov
dec
adc
loope
data16
adc
or
in
push
lds
push
pop
pushf
lcall
lcall
pop
les
mov
inc
aaa
add
or
aam
xor
lock
or
xchg
inc
and
hlt
mov
cmp
sbb
jno
out
adc
jo
maxps
jge
pop
mov
sbb
rorb
jbe
cli
das
ret
test
jmp
dec
jecxz
jmp
add
sbb
movsl
mov
ss
adc
not
push
pop
adc
cmp
xor
leave
lahf
jbe
jg
jle
xchg
xchg
cmpsl
mov
shrl
sbb
lock
pop
pop
lods
and
sub
sbb
aad
testl
bound
cmpb
scas
pop
adc
pop
cltd
cmpsl
mov
ret
adc
fldt
xchg
call
xchg
cmp
add
sub
cmc
hlt
jecxz
xchg
inc
rcrb
shrl
and
lret
inc
scas
xchg
into
sbb
jae
xchg
or
jecxz
out
nop
or
xchg
fsubrl
cmpsb
dec
dec
imulb
push
cld
adc
dec
sbb
ja
test
sbb
jo
pop
or
arpl
xchg
orl
test
es
xchg
loop
stos
ljmp
mov
sahf
push
jecxz
dec
add
imul
pushl
dec
repnz
out
mov
inc
cmpsb
inc
xor
xor
or
mov
cmpw
mov
repz
adc
addr16
test
popa
jbe
mov
in
mov
adc
xchg
mov
cmpsl
inc
cmp
or
mov
into
int3
xor
add
xchg
jns
in
mov
and
in
nop
subb
or
fisttps
and
sbb
xchg
mov
imul
dec
aas
mov
pusha
mov
pop
or
sub
stc
jb
xlat
cmpsb
push
ljmp
cwtl
imul
dec
adc
inc
cmpb
clc
imul
sub
pusha
cld
test
mov
adc
ret
clc
ret
cmp
sbb
call
and
les
mov
sbb
out
imul
andb
rorl
mov
subb
add
xchg
dec
sti
xor
jmp
int
jl
loopne
insb
aaa
xor
testl
nop
adc
fdivrp
mov
js
add
push
adc
mov
mov
les
adc
pop
sbb
shrl
mov
jns
in
cmp
cwtl
lea
mov
into
pop
mov
mov
cld
pop
lock
and
dec
and
lret
and
add
xor
fs
cmpsb
adc
mov
sub
mov
pop
lds
mov
lahf
mov
cmp
rorl
jge
pop
leave
imul
jl
rcl
lods
iret
inc
add
aas
mov
les
arpl
pop
sub
outsl
push
jp
sub
enter
out
test
fldenv
sahf
jmp
cld
je
cmp
dec
shr
mov
or
or
pop
and
jle
into
test
sbb
sbb
pushf
xor
add
pop
jecxz
fisttps
pop
mov
out
sub
shl
xorl
data16
sub
insl
fstpl
shl
shr
cmp
pop
xlat
loope
std
call
mov
arpl
xchg
mov
inc
jg
leave
and
and
aas
dec
nop
les
pop
mov
xor
hlt
outsl
inc
outsb
push
push
mov
pushf
aam
dec
push
mov
or
lods
pushf
test
inc
cmp
into
stc
mov
push
add
in
push
xchg
mov
push
mov
or
xor
ret
jg
mov
fsubr
scas
mov
push
push
sahf
cwtl
test
iret
sub
xor
aaa
mov
hlt
mov
clc
iret
cmp
xor
add
clc
cmp
in
test
jo
rolb
aad
cmpsl
out
je
cmp
lret
out
mov
test
les
pusha
inc
push
adc
mov
movsb
into
shl
mov
add
lods
xlat
mov
sub
push
xchg
out
adc
mov
fistps
inc
std
sbb
pop
shrl
xchg
mov
sbb
aas
das
aam
jp
mov
mov
cmp
jmp
das
mov
movsb
push
les
shrl
xor
add
or
into
push
push
adc
dec
jo
std
jle
cmp
add
aam
dec
xchg
pop
lret
mov
sub
sub
cmp
add
jo
iret
incl
stos
sbb
into
incl
push
push
iret
test
mov
in
pop
push
outsl
add
add
jp
cmp
add
sti
adc
xchg
or
xchg
outsb
or
or
lock
adc
pop
ds
push
movsb
sbb
push
mov
jmp
dec
mov
stos
or
mull
cmp
inc
pop
mov
loopne
mov
fs
jns
fsubp
and
xor
push
push
adcb
push
lcall
jae
std
rcll
push
out
push
test
subb
xor
sahf
gs
rolb
push
xor
lret
add
ret
sbb
dec
rcrl
dec
cmpl
adcl
inc
mov
xor
lcall
xor
inc
ja
lock
xchg
adc
push
and
hlt
icebp
sbb
add
out
out
les
decl
bound
movsb
mov
xchg
pop
pop
cli
daa
cs
loop
scas
enter
inc
push
mov
fimuls
adc
dec
jbe
aam
mov
adc
inc
inc
pushf
sbbb
loopne
out
aas
repz
ficomps
push
xchg
in
mov
adc
aad
push
add
push
outsl
pop
out
add
lret
mov
jg
or
shrl
sub
enter
lcall
cs
xor
scas
dec
adc
mov
mov
pop
mov
pop
rol
mov
out
fdivr
cmp
mov
inc
pop
push
add
out
ljmp
xchg
sarl
add
sti
xchg
xchg
mov
dec
clc
inc
cmp
ret
add
xchg
mov
xchg
fidivl
mov
incl
mov
lcall
sbb
sub
and
adc
push
mov
cli
rclb
add
pop
dec
orl
inc
scas
push
cwtl
pop
mov
push
mov
mov
dec
sahf
repz
int3
push
cmp
adc
pop
test
aaa
icebp
mov
xchg
cmp
xor
inc
or
xchg
cmp
mov
ja
aas
in
sbb
push
das
push
cmpsl
fnsave
cmp
mov
rcr
jp
sbbb
loope
roll
cmpb
decl
pop
insb
aaa
rol
sarb
mov
pusha
jecxz
cmp
ds
outsl
icebp
or
nop
pop
add
dec
ljmp
sbb
mov
insb
std
test
enter
jae
pop
jmp
cmpsb
cli
sub
lcall
les
jp
ds
pop
cmpsb
popf
mov
cmc
mov
mov
stos
push
jecxz
and
das
loop
ret
xchg
mov
roll
lods
adc
push
cli
xchg
sbb
icebp
sbb
incl
or
jno
xchg
cmp
add
or
cmp
lea
dec
cld
loopne,pt
jecxz
shrb
fsubl
pop
push
push
call
ret
mov
sbb
arpl
int
jne
cmp
incl
jns
fs
jle
adc
das
or
jo
adc
mov
mov
jecxz
sbb
std
add
xchg
lcall
je
testl
lock
loopne
nop
fcomip
outsl
cmp
mov
adc
lret
or
inc
les
daa
or
jecxz
imul
aad
pop
addr16
add
add
loope
aas
cmp
sub
xchg
cld
sub
or
xor
ljmp
inc
adc
adc
dec
push
fadds
sbbl
orl
outsl
fsub
das
bswap
mov
jb
sbb
adc
or
negb
inc
inc
and
das
xchg
sub
in
sub
jo
mov
dec
mov
pop
iret
loopne
add
add
inc
adc
jl
ja
xchg
add
inc
xor
mov
add
test
xchg
aas
adc
push
sarl
dec
daa
out
jge
mov
and
jne
jo
out
div
jno
sbbb
out
sbb
rorl
sbb
xor
loope
lock
jbe,pn
lock
and
aad
push
xchg
into
imul
sub
test
sub
cs
and
cld
dec
icebp
add
jp
mov
push
test
shrl
sarb
popa
adc
stos
into
adcb
push
push
xor
pop
idivl
pop
add
mov
out
sbb
daa
fsts
sbb
xchg
loop
and
mov
mov
ret
movsb
daa
cmpsl
dec
vcmpnless
and
or
mov
in
lods
and
test
cli
lcall
sub
cwtl
dec
sub
jno
push
shlb
cmp
aam
sbb
jl
out
xchg
clc
test
andb
push
inc
loop
lock
adc
fisttps
dec
inc
cmp
fcoml
or
push
inc
loope
aaa
pop
std
pop
adc
xchg
dec
inc
ret
adc
imulb
xchg
rcll
loope
mov
or
sub
add
insb
lock
loop
and
jmp
repz
inc
out
push
mov
mov
rolb
sahf
add
lcall
shlb
cmp
fcompl
ret
movsb
jbe
sarb
cmp
in
lock
outsl
mov
adc
xchg
out
es
or
ljmp
hlt
mov
dec
mov
mov
push
jmp
mov
sub
cmp
insl
test
or
nop
loop
mov
test
sub
adc
dec
or
test
popf
or
stos
out
dec
addr16
ret
xchg
xchg
ud0
cmp
mov
mov
add
push
call
xor
mov
inc
adc
pop
sbb
in
movsb
xchg
mov
lds
loopne
sub
sub
add
addb
incl
sbb
stos
cmp
sub
xchg
inc
sub
push
pop
add
js
cld
xor
insb
std
fldl
xchg
fisttpl
jp
mov
rcrb
sub
and
xchg
and
enter
cmp
push
cmp
add
push
lret
in
add
je
aam
imul
scas
jmp
jae
push
shll
clc
inc
popa
cmp
jno
add
fildl
shll
mov
jno
jp
or
mov
pop
cld
rclb
gs
adcb
jne
sti
and
add
and
pushf
cmpsl
lods
jnp
jle
fsubp
cld
mov
inc
and
rcrl
test
inc
in
add
insb
out
loopne
lods
mov
cwtl
daa
sbb
cmp
or
dec
movsb
outsl
sub
jnp
mov
daa
and
push
jb
je
inc
push
shr
and
decb
or
pop
mov
pusha
mov
pop
cld
xchg
hlt
cmp
sahf
dec
lcall
cltd
stos
cmc
jge
sbb
rorb
fmull
mov
int
add
adc
iret
ret
add
jno
shlb
sbb
mov
aas
outsl
arpl
sbb
add
testb
cmpsb
in
in
inc
lds
adc
mov
jg
cmp
daa
xchg
and
mov
lods
pop
inc
in
and
add
insb
or
xchg
out
jo
jle
add
cmp
xchg
xor
mov
cld
inc
jg
in
mov
fists
or
js
jnp
xor
mov
subl
popf
dec
inc
cmp
mov
mov
pop
mov
push
mov
push
imul
orb
jge
test
in
jl
cmp
rcll
test
das
hlt
imul
loopne
sub
movsl
jno
in
push
xor
pop
push
cltd
mov
mov
push
sub
xor
fdivl
int3
inc
call
jno
or
lods
shl
ljmp
addl
jl
mov
mov
pop
cmp
test
mov
loopne
stc
es
dec
pop
cmp
popa
incl
bnd
xchg
bound
outsl
push
add
mov
fs
mov
cld
les
in
insl
sub
loop
cld
in
ret
fstpt
add
sub
jnp
rsm
cmc
aam
cmp
icebp
aam
xor
jmp
mov
adc
dec
inc
out
clc
dec
cmp
dec
xor
iret
dec
arpl
cli
pop
aas
test
sub
or
mov
outsb
js
ja
pop
and
pop
clc
movsl
add
jmp
arpl
mov
push
push
mov
cli
lret
mov
cld
dec
clc
add
loopne,pt
pusha
sarl
xor
add
mov
pop
push
add
rcrl
call
stc
pushaw
out
cmp
daa
inc
mov
ret
in
mov
adcl
inc
outsb
or
pop
and
or
push
dec
pop
jne
cmp
mov
mov
mov
fbld
mov
das
fstps
call
jge
xlat
dec
repnz
test
loop
cmp
jecxz
mov
repnz
jle
inc
and
adc
popl
sub
mov
out
cmp
adc
adc
movsb
xor
cmp
std
cmp
pop
mov
pop
mov
cwtl
sbb
pop
cmp
adc
sbb
shll
and
lods
cltd
push
dec
jo
and
mov
add
ret
mov
lret
xchg
and
xor
push
test
fsubs
xchg
fdivrl
push
cwtl
sbb
out
xchg
les
inc
mov
call
sub
or
hlt
lock
and
hlt
rol
pusha
sbb
sbb
jp
test
adc
sbb
loop
jno
js
jns
popa
cld
fcmovu
inc
test
fimull
stos
or
ret
aas
shrl
stc
cs
xlat
aad
cmpb
add
and
mov
rorb
fnstsw
sti
fstpt
mov
insb
icebp
mov
pop
and
push
inc
aam
aaa
ljmp
je
xlat
jg
add
cmp
cmp
stos
out
call
lods
push
ja
pop
mov
sbbb
repnz
int3
inc
and
out
sbb
cs
cli
cmpsl
lods
rorl
push
push
jns
retw
es
mov
scas
and
clc
sarb
shrl
push
mov
pusha
xchg
cld
inc
std
into
and
adc
cmpsl
stc
lahf
push
imul
test
mov
fiaddl
pop
cmp
push
push
cmp
inc
or
aas
stc
mov
loope
mov
sbb
mov
lret
jae
pop
jl
push
out
inc
mov
push
stc
xchg
sub
mov
inc
cld
loop
mov
jl
iret
xchg
imul
das
test
sbb
and
fchs
loop
inc
xor
lahf
push
mov
shll
cmp
idivl
and
mov
mov
xchg
sub
xchg
mov
xchg
or
loope
adc
sub
inc
sbbb
lock
insb
inc
or
sub
xchg
mov
scas
std
bound
pop
xchg
loopne
outsb
loope
hlt
or
dec
push
inc
jno
loop
outsb
xchg
sbb
mov
pusha
pop
or
aam
adc
insl
pop
fcomp
or
pop
ljmp
imull
aaa
or
mov
dec
mov
mov
mov
or
add
push
movsl
mov
mov
out
call
les
movsl
dec
in
ret
and
loop
sbb
cltd
clc
push
sbb
lahf
nop
push
jo
and
xor
or
or
or
js
lods
inc
mov
shlb
and
push
cltd
leave
ss
sub
icebp
mov
es
lahf
cwtl
stos
sbb
jno
and
push
stc
out
fisubrs
and
fdivrs
fdivl
and
cmp
js
lock
pop
insl
loopne
lods
mov
and
xchg
fmuls
cmc
mov
lret
imul
jns
repnz
add
xchg
jmp
in
pop
incb
mov
cwtl
pushf
call
or
mov
aam
xor
popf
xchg
fcoms
xchg
and
mov
ja
popa
mov
dec
dec
pop
decb
cld
into
inc
pop
add
aas
fs
insb
ret
mov
and
push
ja
cmp
or
jbe
mov
int3
in
imul
push
add
dec
dec
sub
incl
and
lock
xor
push
mov
insb
pop
push
bound
lock
jmp
mov
inc
fcompp
test
ds
mov
das
icebp
sbb
xchg
sbb
into
test
or
inc
jne
stc
jecxz
scas
xor
inc
movsl
mov
into
and
mov
hlt
xchg
data16
xor
fdivs
xchg
cli
mov
mov
sub
mov
into
sahf
nop
movb
pmuludq
dec
sbb
pop
jp
jmp
cmc
or
push
add
stos
sbb
inc
xchg
mov
mov
ror
push
inc
jg
xchg
js
test
jo
adc
call
loope
inc
cmp
mov
data16
dec
inc
mov
pop
popa
das
dec
fwait
mov
stos
aaa
lods
ja
or
sahf
sub
push
adc
sti
mov
jecxz
out
xlat
pop
mov
in
push
cmp
in
sbb
bound
sbb
pop
jl
and
dec
in
sbb
mov
xchg
mov
aad
icebp
push
pushf
icebp
mov
addb
cs
xor
outsb
stc
cmp
jle
leave
shlb
or
lret
xor
xor
mov
jo
cmp
cs
cli
hlt
mov
mov
popa
cmp
dec
imul
mov
xchg
les
jle
xor
inc
xchg
and
dec
push
jle
es
cwtl
or
lret
mov
pusha
and
lcall
loopne
push
push
js
adcb
pushw
fs
bound
into
test
outsl
std
or
pop
dec
jns
ss
mov
rcrl
jnp
incl
sub
rol
out
ljmp
js
and
push
in
add
sbb
push
movb
insb
cwtl
orl
fdivrp
jg
sahf
inc
mov
setns
aam
xor
loopne
shlb
cld
or
pushl
cmp
mov
fsubr
nop
mov
aas
jge
roll
push
or
lret
mov
hlt
pop
and
test
ret
scas
or
jge
cwtl
inc
fwait
hlt
push
fcmovnb
add
leave
ja
into
cld
shl
push
mov
sbb
js
dec
push
pop
push
mov
fildl
rorl
mov
xor
scas
pop
cld
gs
call
xor
scas
pop
adc
inc
mov
test
cmpb
add
sub
fsubrl
sub
adc
lods
lods
mov
jae
outsl
in
xchg
push
shll
int
dec
fistpll
lcall
adc
xor
aas
fcmovb
cmp
or
in
push
mov
push
fs
pop
push
daa
or
dec
mov
aam
jp
sbb
rcrb
rorl
fwait
ret
xor
adc
mov
dec
movsl
mov
aas
xor
push
test
push
sub
shll
test
ss
adc
mov
int
mov
sub
pusha
pop
int
test
repnz
rcl
shl
mov
mov
pop
push
lock
dec
std
adc
dec
add
push
xor
jle
xor
sub
push
ret
adc
push
jnp
xlat
pop
mov
dec
dec
sub
ljmp
adc
mov
mov
rolb
and
and
stos
nopl
ret
fdivr
shlb
inc
mov
and
sahf
pop
cmp
sbb
data16
push
cli
add
xor
push
shrl
jmp
mov
in
scas
add
ret
sahf
subl
lcall
xchg
add
cmpsl
and
leave
push
lods
or
and
pop
inc
fists
stos
mov
add
dec
mov
mov
xor
add
sub
cs
sahf
adc
ja
ficoms
pop
ds
pop
in
mov
mov
test
repz
sti
ljmp
pop
lahf
push
cmp
outsb
lock
call
popa
daa
test
imul
pop
jl
inc
or
or
dec
lods
push
mov
sub
mov
add
push
jo
pop
pop
loop
in
movsl
ljmp
cwtl
sbb
dec
mov
loop
adc
out
dec
pop
push
add
xchg
jno
mov
fs
add
mov
inc
cmp
ja
test
add
sub
pop
jmp
mov
xchg
pusha
leave
iret
dec
pop
mov
pop
mov
push
push
xchg
jb
mov
test
subb
shlb
sub
rep
int3
mov
sub
bound
mov
cmpl
sub
mov
je
push
lods
inc
sbb
add
fdivs
sub
addb
sub
ds
and
loopne
cmp
jg
pop
xchg
push
xchg
testl
or
into
es
sbb
mov
xchg
decl
pop
or
xchg
and
mov
and
pop
or
cmp
out
loope
pop
pop
adc
lcall
xchg
icebp
in
dec
and
test
xor
inc
push
pop
pop
push
fidivl
push
xchg
ficomps
mov
incl
jo
jecxz
xlat
dec
addr16
xor
sbb
pop
adc
cld
jnp
jne
jmp
push
aas
cld
iret
cli
inc
cmc
xchg
xor
cs
inc
jl
push
add
imul
xchg
cmc
ljmp
aaa
mov
es
mov
jmp
xor
std
pop
push
clc
sbb
adc
inc
ss
es
pop
aad
push
loopne
inc
mov
ss
jmp
or
fwait
pop
inc
leave
sbb
jmp
pusha
nop
das
inc
clc
scas
movsl
push
inc
xor
daa
loopne
jbe
in
or
jno
push
das
pop
loopne
lods
inc
adc
add
push
mov
inc
repnz
fxch
or
xlat
ja
jbe
imul
or
arpl
or
mov
sbb
fists
xchg
incl
pop
rcrb
psubd
fsubrl
or
mov
and
into
sbb
cmp
add
lahf
or
lds
leave
sbb
dec
lea
fbld
pushf
icebp
popf
dec
test
lret
test
jle
mov
insl
aaa
shll
js
rclb
or
push
pop
pop
sub
cmc
je
sub
jle
jbe
or
jo
insl
jmp
pusha
inc
out
pusha
or
lock
call
nop
sbb
jp
aam
test
sub
push
pop
cmpsb
jne
or
push
gs
aas
hlt
in
test
jnp
sti
mov
out
out
das
cmp
jp
sbb
xor
and
cs
lock
repnz
pop
xchg
jl
pop
arpl
lds
xlat
lock
lock
hlt
dec
movsl
cmp
loope
rcrl
mov
push
jno
addr16
fbstp
push
push
and
xchg
mov
adc
xor
out
push
cli
insl
repnz
addl
inc
ja
sbb
push
add
loope
jnp
cld
in
ja
daa
lock
lods
push
adc
icebp
mov
lcall
or
add
ja
ret
sub
int3
cmpsl
sbb
test
pop
jl
sbb
adc
pop
cmova
aas
lret
jns
push
pop
push
cmp
faddl
adc
cli
push
dec
and
jo
adc
sbb
insb
push
out
jle
lahf
cmp
jne
scas
adc
aad
mov
inc
movsl
xor
sbb
xlat
bound
call
dec
stos
adc
and
and
call
inc
inc
test
sbb
test
stos
mov
and
rcr
loopne
addl
jp
cltd
pop
push
loopne
cmp
mov
sbb
rol
pushl
cmp
pop
rcl
push
pop
subb
push
push
scas
mov
xchg
xchg
dec
js
out
scas
mov
fwait
pushf
in
mov
and
sbb
test
movsb
cwtl
cmp
cmp
and
or
pop
cmp
inc
sbb
nop
clc
jb
fisttpll
adc
je
mov
dec
movsb
test
aad
xchg
int3
add
jno
cmpsl
jge
vmwrite
cmp
cmp
inc
push
fadd
add
fdivr
and
dec
ret
cwtl
pusha
and
pop
and
mov
test
pop
stos
inc
lds
adc
add
xor
inc
xchg
inc
adc
xchg
cld
jo
mov
mov
dec
xor
and
fnstcw
out
adc
mov
or
test
cld
mov
jecxz
movsl
sbb
les
js
or
mov
xchg
add
les
cld
lret
push
stos
mov
incb
in
aas
pop
lds
or
into
dec
dec
sub
cld
or
std
jl
dec
popf
pop
int3
pop
call
and
jno
xor
adc
movsb
jo
sbb
and
sahf
add
aas
push
cld
jo
mov
dec
jecxz
inc
leave
mov
ret
mov
ret
or
push
xchg
faddp
xchg
sahf
fnstenv
or
push
sub
push
xchg
jle
ja
cmp
es
xor
jae
push
pop
mov
jo
inc
xor
mov
add
test
push
jmp
call
pop
das
pusha
es
sbb
jecxz
cmpsl
push
lock
mov
sbb
popf
movsb
insb
sbb
ja
sbb
popa
and
cmpsl
xlat
mov
fdivp
subl
sbb
pop
outsl
divps
or
arpl
maskmovq
mull
adc
loop
push
pop
sbb
testl
push
jmp
mov
lret
fwait
inc
cmp
push
lds
cmp
mov
orb
lods
ret
pop
mov
mov
imul
mov
nop
cs
or
cmpsb
test
mov
insb
add
cld
shrl
scas
sbb
add
idivb
js
xchg
mov
add
pop
sub
mov
addb
cli
jo
sbb
jmp
cmpb
ret
jmp
jecxz
and
mov
push
xchg
sbb
add
adc
or
adc
jae
add
sub
jmp
jge
mov
shr
adc
sub
mov
inc
cltd
cmp
outsl
out
inc
mov
add
mov
icebp
adc
loope
xchg
cmp
daa
outsl
push
stc
into
xor
mov
loope
jae
push
ret
pop
mov
xor
and
inc
inc
std
sbb
pusha
leave
xlat
add
xor
pop
xor
rorl
or
into
inc
sahf
xor
jae
cwtl
cs
pusha
inc
or
xchg
jns
ret
jbe
adc
aas
or
sbb
jecxz
jne
xor
test
les
inc
xchg
mov
jb
adc
std
insb
test
andl
sub
push
popl
pusha
les
loopne
inc
fmuls
and
mov
ljmp
adc
bound
cld
loopne
scas
cwtl
std
imul
fistps
gs
lret
insb
push
push
or
dec
inc
scas
xor
pop
or
jno
mov
add
xchg
lea
sub
sbb
addl
and
jbe
pop
ljmp
popf
ljmp
xor
or
fcmovnb
mov
out
mov
pop
add
cli
decl
sbb
add
push
dec
fst
shufps
and
mov
mov
dec
scas
xor
mov
gs
inc
adc
inc
xor
outsl
pop
xchg
sbb
mov
mov
rolb
dec
jle
loope
mov
and
xor
jl
adc
adcl
inc
fstpt
subl
int3
test
push
call
cmc
and
add
loop
jl
pop
aaa
add
lahf
lcall
cmp
shll
pop
repnz
pop
aas
mov
xchg
mov
loop
loop,pt
outsl
mov
xchg
cwtl
sbb
out
jle
push
test
das
xor
push
fwait
scas
cmp
daa
xor
xor
pop
pop
subl
movsb
adc
mov
aas
pop
in
sub
push
mov
mov
push
lcall
pop
pop
orl
roll
mov
mov
cld
mov
rcrb
and
or
cld
ret
sub
mov
lock
ljmp
mov
add
sbb
std
scas
gs
aaa
mov
mov
cmp
lret
sub
add
xchg
clc
inc
push
xchg
nop
decl
insb
scas
ds
push
mov
popf
idivb
pop
dec
stc
inc
cmp
xor
andl
mov
dec
ret
sub
std
push
fildll
push
cmpsl
mov
aas
inc
inc
pop
lods
pop
call
mov
sbb
pusha
and
jbe
and
inc
lret
mov
stc
jae
rolb
iret
sbb
int
mov
ds
aam
sub
cmp
mov
ret
fstl
stc
dec
cmp
ds
cld
cmp
cmp
sub
mov
mov
xchg
or
pop
adc
mov
dec
push
idiv
rcrl
mov
lods
pusha
pushf
mov
dec
es
clc
mov
cs
xor
dec
inc
xchg
icebp
adcl
mov
test
leave
scas
aam
sub
cmc
call
mov
ret
inc
dec
movsb
cld
lret
test
cmp
std
jmp
mov
xor
sbb
mov
adc
push
inc
and
pop
and
mov
jnp
or
jle
das
sbb
cli
inc
push
inc
sti
fldt
mov
inc
and
xchg
clc
push
ffreep
jg
jno
or
add
dec
out
in
shl
inc
out
jl
dec
push
ja
lret
fcompl
and
push
xor
enter
pop
xor
loop
aam
and
das
mov
inc
test
push
sbb
pop
stos
adc
or
into
or
inc
ss
sahf
mov
pop
arpl
rolb
cmp
push
test
enter
jecxz
jp
call
aas
jle
pop
orl
mov
mulb
mov
outsl
fsub
testb
mov
pop
js
cmp
or
sbb
adc
push
sbb
subl
push
icebp
add
out
outsb
dec
dec
xor
loope
xchg
lret
mov
aad
and
ret
cmpsb
or
loopne
jge
xor
stos
mov
lods
add
es
add
sahf
add
repz
cmp
pop
mov
push
mov
xor
adc
adc
bound
push
inc
lahf
fldt
aad
shlb
test
inc
repz
jle
inc
hlt
add
mov
sub
cli
sbb
movsb
jg
xor
pop
xchg
ret
int3
clc
test
fcmovb
pop
dec
decl
mov
push
cmp
inc
mov
testb
and
test
clc
mov
out
movsb
inc
inc
ret
int
xor
loop
pop
pop
outsl
mov
fs
add
sbbl
xor
stos
mov
loopne
jno
jecxz
ret
inc
sub
dec
push
push
fisttpll
rclb
inc
mov
jp
sbbl
add
clc
inc
pop
sbbb
scas
inc
push
ljmp
adc
and
inc
xor
inc
and
dec
sub
int
mov
add
sub
cltd
call
inc
xor
lret
fwait
xchg
fwait
lock
mov
inc
mov
imulb
scas
sahf
setne
xor
std
dec
stos
pusha
scas
push
jge,pt
dec
shrb
adc
int
adc
mov
xor
popa
fildl
clc
xchg
jp
dec
mov
sbb
or
test
out
xchg
test
add
insb
and
pop
mov
popf
aam
test
pop
jl
ret
sbb
outsl
cmpsl
imul
push
push
stc
jmp
mov
clc
jne
scas
xchg
icebp
adc
add
cmp
mov
mov
pop
cmp
inc
cmp
pop
or
xchg
loopne
pop
fs
inc
dec
and
jb
lret
ror
cli
imulb
test
and
movsl
icebp
cld
outsl
mov
adc
push
add
push
xor
cmc
jmp
stos
aas
push
push
mov
dec
outsl
or
add
push
mov
inc
cmp
movsb
imul
loop
test
inc
add
pop
decl
push
sbbb
jg
dec
stos
dec
push
cmpsb
mov
jmp
push
aaa
push
add
lock
rcrb
fiaddl
adc
test
mov
sbb
push
push
inc
mov
dec
xor
dec
les
pop
jg
out
fidivs
imul
adc
or
xchg
movsl
push
repz
rcr
xor
sbb
aam
cmp
lock
xchg
pop
adc
dec
pop
aas
jno
pusha
or
stc
loopne
mov
inc
divps
add
inc
xor
test
jne
aad
xchg
inc
out
lods
bound
push
sub
xchg
push
xchg
add
mov
punpcklbw
lahf
dec
dec
rcrl
and
push
into
push
out
notl
mov
cmp
or
xchg
pop
inc
mov
inc
fstl
popa
loope
push
dec
adc
mov
push
xchg
leave
test
adc
push
das
inc
and
inc
inc
fucompp
mov
cmpsl
cmp
int
call
loop
jg
xabort
xor
push
lock
insb
cmp
dec
pushf
lods
cs
inc
ljmp
dec
cmp
out
add
mov
adc
cs
sbb
dec
cwtl
cmp
xchg
insl
or
xor
pop
repz
divl
test
mov
sub
or
mov
pusha
dec
mov
dec
inc
js
jnp
std
cmp
mov
mov
sbbl
dec
dec
mov
add
fwait
icebp
cmc
cmpsl
cltd
mov
mov
mov
shlb
lods
es
stos
xlat
dec
mov
mov
fldt
cmc
pop
dec
fisubrs
in
add
jne
fucomi
pusha
std
subb
test
xor
pop
cld
les
testl
mov
ret
add
mov
cmpsl
mov
xchg
jmp
jl
push
sti
add
add
push
les
dec
cmp
mov
fwait
enter
imul
xlat
push
jg
mov
push
mov
sub
add
lds
jae
stc
in
pop
out
in
ret
scas
add
sahf
jo
push
lret
fadds
jecxz
inc
and
xorb
cmp
sbb
ret
sti
add
add
jnp
lds
inc
mov
les
orb
sub
jecxz
sti
and
es
cltd
jp
xor
clc
inc
sbb
mov
add
mov
mov
xchg
mov
loopne
repnz
sbb
enter
dec
pop
jo
stos
push
out
mov
addr16
sbb
dec
das
mov
cld
or
sbb
test
dec
rclb
mov
mov
out
lods
int
and
push
stos
subb
lds
dec
sub
nop
pop
cmpsb
and
dec
jb
jg
loop
xchg
cmp
sub
imul
in
mov
or
pop
scas
jle
iret
pusha
and
stc
push
fildl
scas
inc
ljmp
loope
mov
mov
dec
outsl
test
outsl
loope
xchg
xchg
rcrb
dec
inc
and
icebp
bound
lret
fwait
lea
repnz
mov
jl
clc
cmovo
es
cmp
adc
xorb
adc
push
scas
mov
test
jno
aaa
hlt
cwtl
popa
or
sahf
xor
or
push
mov
lahf
pop
shlb
add
jle
js
mov
pop
shlb
mov
cwtl
jns
das
pop
push
dec
clc
data16
jl
loopne
sti
or
push
jns
jge
jmp
bound
or
out
shrl
pop
loopne
pop
or
or
lods
mov
or
jle
or
adc
xchg
add
mov
xchg
cmc
mov
xchg
stos
test
cwtl
xlat
xchg
jle
ljmp
jo
mov
mul
cwtl
or
popa
adc
lcall
into
int
test
lds
jmp
adc
sbb
adc
add
mov
aas
cs
ret
test
and
mov
into
mov
sbb
add
mov
pop
dec
test
in
pop
mov
xchg
in
sti
sbb
pop
lcall
jp
cmpsb
fildll
jno
and
imulb
add
mov
outsl
inc
inc
insl
lret
mov
adc
jl
je
outsl
testl
push
or
loopne
jl
mov
adc
sub
inc
in
sarb
add
dec
dec
add
stos
jb
sbb
mov
sbb
cmp
inc
in
scas
jg
cmpl
and
inc
and
out
fisttps
mov
or
icebp
mov
jecxz
add
filds
clc
push
jle
or
add
negl
sub
addr16
inc
push
xor
fildll
or
adc
sbb
push
sbb
pop
rorb
jns
ljmp
shlb
xlat
push
add
cmp
in
imul
in
or
mov
outsb
inc
js
lds
sbb
bound
mov
or
sbb
pop
test
rorl
push
mov
lock
or
xor
orb
pusha
jp
aas
in
loope
jne
pop
mov
cmp
pusha
out
mov
pop
xor
inc
cmpsl
nop
movsb
adc
adc
loopne
add
pushf
mov
jp
jo
push
cmp
popa
jg
jmp
inc
inc
dec
dec
sti
clc
icebp
or
mov
cmp
xor
or
out
shl
into
inc
adc
mov
lret
scas
cmp
pop
push
pop
test
lds
inc
push
pusha
push
ljmp
cmp
andl
push
in
xchg
lcall
mov
mov
inc
mov
rolb
scas
in
adc
fiaddl
test
invd
mov
mov
xchg
icebp
movsb
adc
outsl
les
adc
fildl
push
mov
cs
mov
inc
loop
jp
adc
or
mov
inc
aaa
loop
and
pop
mov
jae
ret
cs
repz
push
into
inc
mov
mov
mov
pop
adc
orl
lcall
push
sub
push
imul
push
loope,pt
mov
jp
aam
cmp
test
cmpsb
out
dec
andl
in
cmp
xor
mov
push
jg
sbb
dec
ficoms
lahf
sub
adc
xchg
lret
mov
xor
dec
mov
xchg
orb
pop
mov
lock
in
decb
cmc
andl
subl
add
imul
mov
jecxz
sbb
mov
jo
jmp
pop
fstpl
in
or
mov
les
mov
inc
pop
paddusw
inc
sti
clc
pop
push
dec
pop
cld
lods
pop
cltd
jmp
push
rolb
divl
cmp
es
bound
das
or
lahf
adc
mov
inc
aas
lods
sbb
sbb
jl
sub
dec
or
mov
add
in
push
push
lcall
mov
adc
pop
in
icebp
push
cmpsb
adc
mov
fsubrs
insl
ret
out
add
repz
ss
nop
push
es
pushf
loopne
in
stos
pop
xor
mov
jecxz
inc
scas
push
add
xchg
ror
std
fistl
or
pushl
push
popa
js
mov
mov
lcall
loope
bnd
pop
push
sub
lock
jns
ss
loopne
ljmp
call
es
call
dec
jmp
mov
fldl
lock
hlt
lds
rcl
in
pop
sar
int3
repnz
inc
fcomps
call
add
push
imul
add
or
mov
cs
lcall
cmp
mov
or
adc
aad
filds
test
and
push
idiv
stc
sbb
movsl
and
xor
add
shll
jmp
fcomps
shll
shlb
test
mov
call
test
xchg
cmp
add
jp
clc
jo
loop
mov
xor
or
sarb
in
and
push
jle
inc
outsb
xchg
js
or
movsl
mov
lods
adc
rcrb
sub
imul
push
or
add
push
mov
shll
inc
mov
into
push
xorb
das
ja
xor
jge
es
adc
mov
jg
mov
cld
mov
stc
das
pop
sub
xchg
lods
jge
movsb
data16
pop
xor
int3
testl
sub
clc
or
js
sbb
andb
icebp
push
sub
or
imul
ret
arpl
fdivrp
sub
lds
lods
imul
pop
mov
mov
xchg
sub
xor
ljmp
or
push
loope
mov
out
imul
lods
cmp
nop
adc
or
orb
mov
das
fcomps
push
jg
in
je
and
jp
mov
iret
xchg
insb
out
mov
mov
cld
outsl
int
insl
mov
mov
loopne
mov
lret
test
jne
inc
int3
cltd
call
in
jge
and
jae
cmc
negl
out
jns
add
jp
mov
hlt
jle
shr
xchg
fldt
arpl
sub
sbb
cmpsb
adc
and
pop
push
add
insb
call
dec
push
dec
lcall
sub
pushf
mov
pop
test
js
mov
sbb
adc
pop
out
mov
repnz
inc
and
lret
out
push
addl
adc
sbb
test
sbb
sarl
fwait
neg
xor
pop
test
mov
pop
loope
lods
inc
pop
and
push
loope
shrb
dec
add
pop
xchg
sahf
sub
sti
and
out
cwtl
mov
mov
sub
xchg
push
into
sbbb
push
insw
cltd
jl
sbb
cld
das
sbb
pop
pop
jl
xor
jecxz
scas
insl
aas
cmpsb
insb
dec
push
mov
sbb
pop
outsb
test
loop
push
xchg
mov
sub
gs
in
fisubl
pop
data16
mov
inc
mov
inc
shl
push
jo
test
mov
xchg
pusha
or
sbb
mov
adc
in
jns
andb
test
fstps
push
dec
test
sub
rol
push
das
push
pop
mov
gs
ret
add
in
mov
insl
icebp
aam
ljmp
inc
sbb
pop
or
sbb
popl
xchg
pop
cmp
sub
mov
sub
mov
or
cmp
insb
loopne
ss
and
mov
lods
dec
fs
push
loopne
add
ljmp
fnstsw
in
sbb
pop
or
rorb
jecxz
adc
shrl
pusha
test
jl
mov
and
mov
xor
cmc
or
ret
mov
xlat
mov
sbbb
mov
fstp
mov
cli
sub
inc
jnp
in
mov
mov
in
xchg
xchg
add
frstor
movsl
jg
jge
adc
inc
mov
rclb
sbb
mov
daa
pop
shlb
adc
int
ret
mov
xchg
dec
xlat
rcrb
push
repnz
sbb
add
cmp
adc
sbb
in
popa
and
movb
leave
fiaddl
sub
lods
iret
push
stc
jg
sub
mov
bound
in
cmp
mov
lret
in
inc
loop
sbb
dec
imul
stos
sahf
ja
push
push
pop
js
xor
rol
pop
sub
movaps
cmp
rolb
inc
std
push
je
adc
jl
mov
rorb
add
enter
outsl
dec
add
jle
sbb
xchg
fs
fiaddl
inc
or
mov
shlb
push
pusha
enter
bound
cmpsl
add
jnp
jp
push
sbb
sbb
inc
mov
add
xor
xchg
lods
or
or
mov
ljmp
cmp
cmpb
stos
inc
jl
test
push
cld
jnp
fldt
push
mov
dec
outsl
es
and
and
daa
cli
and
cmc
mov
or
add
pushf
sub
jecxz
or
adc
fsts
stos
xchg
cltd
or
xchg
mov
shlb
test
clc
push
pop
pop
cmc
fscale
xchg
sbbl
addb
inc
ljmp
jo
add
clc
popa
das
shll
inc
xchg
stc
enter
inc
rcll
fists
fcoml
out
aad
std
mov
leave
mov
dec
int
mov
cmpsb
aas
call
call
pop
jnp
clc
call
jns
pop
adc
loope
inc
sbb
es
call
xchg
mov
xor
pop
out
test
mov
or
jle
loopne
lea
bound
cli
ja
scas
mov
adc
outsb
mov
lcall
cwtl
push
pop
jge
jecxz
or
mov
subl
repz
inc
pop
pop
lcall
cli
pop
or
push
inc
xchg
sbb
sub
jp
sub
aad
jnp
or
dec
loop,pt
stos
push
jns
jecxz
lods
dec
sbb
incl
and
sbb
cmp
outsb
lock
add
inc
out
mov
pop
jg
jge
loope
sub
add
add
clc
cs
incl
fdivrs
add
mov
fstl
loopne
jmp
push
push
bound
or
cmpsl
leave
sbb
inc
pop
hlt
pop
ja
stc
push
jo
ficoms
dec
adc
xor
add
dec
pop
inc
xchg
cmpsl
aam
imul
and
adc
js
sahf
ss
xor
inc
inc
pop
add
fs
addr16
daa
jecxz
push
addl
jle
iret
dec
push
cli
js
aam
push
add
or
aas
pop
inc
cwtl
mov
fcomps
inc
lods
add
int3
inc
jbe
cld
xchg
xchg
jne
loopne
test
pop
mov
into
insl
inc
or
adc
icebp
push
dec
add
fiaddl
shr
push
cs
movsb
dec
adc
sbb
inc
hlt
inc
shll
mov
mul
inc
lret
addr16
cmp
cmp
sbb
sbb
ret
addr16
scas
and
movsb
and
mov
push
cmpsl
and
psubb
std
xlat
je
jle
addr16
xor
inc
out
xchg
push
lcall
xchg
frstor
fwait
xchg
call
jns
jl
inc
les
std
dec
add
loope
and
fwait
jb
sti
and
mov
or
shll
ds
mov
movsb
mov
pusha
fwait
or
sub
cmp
adc
xchg
scas
test
xor
and
dec
dec
dec
cmp
push
lret
mov
lret
xchg
arpl
fs
mov
test
mov
nop
xor
stc
sarb
adc
inc
js
push
stos
cld
cwtl
cli
push
mov
shlb
adc
adc
jg
fsubs
mov
shll
pop
loopne
in
xor
mov
or
pop
pop
dec
add
xor
cmc
cmp
pusha
sahf
push
pinsrw
dec
push
or
xor
out
push
mov
xor
or
cmpb
popf
bound
js
clc
mov
cwtl
aam
je
mov
add
call
push
add
out
mov
push
rcl
aas
xchg
mov
sub
push
loop
xor
nop
aaa
cmp
pop
push
lea
loopne
ret
adc
push
xchg
fs
sbb
adc
notb
xor
jb
pop
iret
pop
fistpll
jmp
add
insl
jmp
xor
out
clc
or
push
xchg
xchg
sbb
stc
add
add
inc
jae
dec
add
or
insl
or
dec
hlt
leave
push
rcll
fidivs
push
js
aad
inc
jmp
push
in
inc
and
or
rcrb
mov
cmp
sbb
ss
mov
mov
jl
clc
pop
jecxz
add
int
ret
hlt
or
dec
mov
les
add
aam
fs
sub
stc
mov
dec
adc
mov
jno
rcl
icebp
out
les
clc
sub
pminub
out
sub
inc
and
xchg
leave
add
nop
bound
jg
rolb
lock
jo
pop
jle
test
inc
pop
xchg
jb
add
xor
sub
xchg
jle
mov
ret
cli
cmp
xor
mov
std
decl
imul
and
loopne
adc
sti
pop
mov
jne
sbb
and
xor
loopne
and
lods
jg
mov
xor
jp
and
in
lcall
jge
loop
mov
and
pop
lock
xchg
shll
and
push
jl
xor
mov
lock
push
sbb
push
push
jle
andl
cmovl
sbb
cmpsb
aas
jno
dec
lods
stos
lock
or
adc
adc
mov
jae
out
nop
adc
jo
popf
into
sbbl
dec
ljmp
out
idiv
sub
xor
mov
clc
inc
xchg
inc
ss
out
fstl
rclb
pop
and
jecxz
ret
jmp
mov
mov
jbe
mov
xchg
sbb
pcmpeqb
lods
inc
jmp
lahf
or
push
or
xchg
jl
loopne
icebp
adc
scas
add
or
mov
and
js
push
mov
mov
lret
std
jnp
stos
clc
pop
fdivs
xchg
xor
add
in
mov
jbe
push
push
inc
sbb
or
mov
adc
adc
outsb
cmp
je
adc
hlt
scas
call
and
test
or
mov
fistpll
imul
les
outsl
es
cli
lds
lcall
ret
pop
loopne
jb
in
add
stc
leave
mov
and
xchg
adcl
push
lock
add
mov
jmp
cmp
js
xchg
lods
add
mov
outsb
cli
mov
dec
stos
xchg
mov
pop
xor
xlat
sub
cmp
sub
and
push
ljmp
pop
test
mov
aad
in
push
add
push
and
test
xlat
mov
jae
mov
cmp
fiadds
and
test
lock
clc
les
ja
imull
mov
sbb
cmp
pop
lea
inc
les
in
sbb
adc
aam
xchg
rcrb
mov
cmp
dec
xchg
clc
icebp
cmp
stos
pusha
and
add
pushf
inc
and
inc
jmp
jno
clc
push
push
jecxz
or
cltd
addr16
sahf
adc
bound
incl
cli
fldenv
add
aaa
xor
lods
mov
pop
add
jge
hlt
test
sbbl
inc
xchg
xor
outsl
cmp
movsl
mov
lahf
aaa
add
push
jo
cmpsb
cmp
sub
cwtl
hlt
add
add
mov
clc
ucomiss
push
sbb
mov
sub
inc
pop
pop
mov
std
pop
or
mov
inc
cmpb
jl
push
hlt
clc
xchg
push
loopne
pushl
mov
cld
mov
pop
or
jg
adc
cld
clc
inc
pop
roll
push
lahf
test
push
mov
test
lock
adc
rcrb
dec
dec
test
ret
mov
out
mov
inc
mov
dec
sbbb
loope
sbb
shl
lea
mov
sti
xor
push
jne
cmpl
xor
xchg
ret
inc
data16
aas
push
fdivrp
stc
sub
jo
and
stc
or
in
xchg
jg
push
cmp
push
and
xchg
sub
inc
data16
mov
loope
pusha
jae
push
repnz
scas
in
push
adc
cmp
inc
test
mov
outsl
imul
insb
jno
jmp
adc
sahf
jno
inc
push
movsl
clc
mov
cmpsl
sbb
je
push
out
mov
clc
scas
and
mov
or
add
jge
adc
and
lods
pop
ret
mov
adc
adc
loop
out
mov
sbb
into
movb
jnp
scas
incb
lea
js
cli
sahf
sbb
fcomps
sbb
dec
adc
push
int
pop
adc
pusha
daa
iret
sbb
insb
shll
jp
pop
jecxz
lds
or
and
xchg
mov
test
and
push
hlt
rorl
mov
xlat
jp
jmp
xchg
cmpsb
dec
stos
adcb
inc
push
test
dec
icebp
in
xor
or
out
xor
lods
lahf
lahf
push
and
fnstsw
scas
pushf
icebp
sahf
lds
xor
clc
jge
scas
nopl
lods
or
outsb
xchg
push
jo
adc
lods
fsts
jnp
aaa
cmp
test
lret
inc
jne
sub
adc
movsl
jecxz
aas
lods
cld
mov
jo
xor
and
xor
adc
test
add
or
arpl
enter
push
jmp
std
fisubrl
mov
pop
aam
cmp
mov
sub
mov
inc
push
aam
xor
push
loopne
dec
popa
jo
enter
rcll
insb
push
push
cld
push
inc
clc
cmpsb
add
or
ljmp
jge
lret
xchg
inc
cmp
add
sub
clc
pop
insb
test
dec
pop
fadd
mov
das
push
mov
inc
sbb
iret
or
mov
xchg
adc
scas
jno
dec
test
cld
adc
inc
inc
jge
lahf
lahf
outsl
insl
inc
or
lock
pop
mov
and
or
imul
xchg
test
mov
push
and
hlt
scas
jae
dec
and
js
loop
cwtl
lods
incl
xorb
mov
cltd
ret
pop
adc
out
test
jae
ss
and
mov
imul
test
push
mov
sbb
popa
jp
add
push
dec
xchg
sbb
pop
hlt
pop
cli
test
inc
movsl
push
xchg
nop
jp
cmp
loopne
subb
pop
cli
push
mov
rcrb
rol
ret
xchg
jg
or
and
lea
shrb
jg
cmpl
push
test
or
jl
loop
pop
cmp
test
push
addl
gs
cmp
sbb
mov
pop
int3
sub
sub
push
xor
push
mov
cmp
movsb
adc
sbb
ret
xchg
and
jb
jp
mov
and
ret
sub
nop
fs
sub
push
jp
sub
jns
xchg
jp
test
add
cld
lcall
lret
cmp
test
aaa
push
sarb
or
xchg
jne
jmp
mov
or
pop
aaa
sbb
imul
jle
sbb
sahf
loopne
int3
scas
test
add
xchg
fs
mov
ss
in
out
stos
add
pop
mov
dec
test
adc
push
repz
and
repnz
aaa
jl
inc
pushf
call
pop
xchg
scas
subl
mov
sub
cld
and
int3
ljmp
iret
loopne
subb
jns
loope
jbe
jge
and
push
dec
sbbb
imul
sbb
xlat
loopne
aaa
add
and
imul
mov
mov
orb
sbb
cs
andl
dec
mov
add
push
jecxz
movsb
jne
movsb
pop
xchg
inc
clc
add
cmpsl
mov
mov
shll
popf
imul
icebp
scas
stc
hlt
aas
xchg
popa
push
push
lods
jl
pop
ljmp
and
jno
xchg
push
xor
lcall
push
xchg
cmp
sbb
and
js
pusha
add
cmpsl
jle
test
mov
pusha
mov
aam
roll
fildll
and
adc
ret
mov
inc
adc
push
jmp
imul
mov
cli
cmc
aas
mov
inc
rclb
mov
bound
xchg
mov
decb
bound
and
xor
xchg
mov
xlat
into
mov
lods
mov
rcrl
adc
jmp
pop
frstor
push
mov
lahf
pop
mov
les
addl
mov
aam
sahf
cmp
sub
or
jge
dec
mov
or
lcall
adc
pop
ret
sbb
add
mov
fst
inc
cmp
cmpsb
leave
inc
pusha
mov
cmp
push
xchg
xchg
std
nop
mov
inc
mov
inc
shr
loopne
cmp
mov
gs
cs
insl
mov
push
pop
xchg
jp
push
push
repz
mov
outsl
add
mov
aas
hlt
push
bsf
and
sbbb
adc
pop
and
je
rolb
outsb
mov
push
ljmp
test
adc
sub
loop
fwait
sub
sar
push
xor
or
les
lock
cmpsl
fnstenv
lock
adc
add
mov
das
xor
mov
xor
add
mov
roll
xorb
fdivs
add
pop
cwtl
out
sbb
xchg
mov
out
mov
add
jmp
std
push
lds
xor
mov
xor
je
add
xchg
mov
mov
push
test
and
out
mov
inc
arpl
or
call
je
or
mov
inc
imul
imul
and
mov
push
xchg
push
clc
add
dec
and
incb
fdivs
jge
jmp
pusha
test
jo
lcall
out
cmp
scas
aad
inc
in
out
jle
aaa
jmp
xchg
gs
xor
ds
push
and
push
shlb
lcall
in
hlt
or
test
lock
pushf
xor
imul
sbb
xor
inc
mov
cmp
stc
shl
mov
mov
imul
and
mov
mov
clc
jecxz
aam
pushf
push
mov
add
fwait
sbb
mov
sbb
cmp
mov
sub
pop
scas
xchg
sti
test
push
mov
fld
sbb
pop
lahf
les
mov
lds
mov
lahf
lds
jmp
mov
jnp
xor
jne
xchg
lahf
and
xchg
clc
push
test
imul
data16
bound
pop
and
inc
adc
popa
cld
push
xchg
cmp
mov
fadds
icebp
lret
pop
dec
sub
jle
dec
mov
jno
jbe
subl
cmp
adc
and
xor
dec
and
hlt
cmp
and
adc
pop
enter
cmc
pop
or
mov
jge
push
jp
inc
mov
repnz
stos
xor
mov
inc
mov
stos
lods
popa
sbb
add
push
mov
mov
pop
clc
pusha
mov
sbb
fcoml
aam
pop
pop
lods
inc
cltd
ret
add
and
push
mov
adc
mov
add
jmp
add
inc
pushf
sarb
add
push
add
sub
or
mov
push
mov
mov
inc
adc
adc
lods
test
dec
clc
ja
dec
fdivl
ljmp
mov
ja
ljmp
and
inc
jne
mov
xlat
xor
and
cmp
mov
sbb
in
sbb
xor
mov
push
xchg
fninit
and
xor
test
xor
add
adc
mov
and
add
and
pop
sub
inc
lock
movsb
out
mov
adc
xor
nop
fistps
mov
imulb
adc
jb
aas
sbb
jo
lcall
fdivl
push
aaa
gs
pop
scas
xchg
ja
adc
div
pop
out
movsb
shll
add
xor
push
ret
push
mov
dec
aaa
adc
jno
push
outsb
inc
adc
mov
pop
int
mov
arpl
mov
movsb
lcall
xchg
lcall
fdivp
sbb
aam
ljmp
pop
loope
clc
cmc
sub
adcl
mov
ss
das
sub
xchg
push
adc
pop
hlt
xchg
lods
and
push
pop
mov
xlat
sub
imul
cmp
push
dec
mov
push
mov
mov
lock
rorl
lcall
dec
mov
nop
inc
hlt
push
testl
pop
mov
adc
insb
ret
cmpsl
jb
jns
cwtl
inc
mov
paddb
jge
dec
and
add
test
addl
std
mov
sarb
les
arpl
adc
mov
gs
cli
mov
js
push
adc
cltd
sub
push
pop
je
inc
or
push
mov
jge
sbb
sub
mov
scas
adc
xchg
test
jg
pushl
daa
nop
fisttpll
push
enter
mov
jno
shrl
addr16
xchg
sbb
je
es
lds
push
scas
mov
pop
mov
ret
pop
sahf
dec
add
sbb
repz
xor
sub
icebp
mov
mov
adc
out
xchg
rorb
jno
mov
mov
mov
xor
lds
push
in
mov
lds
mov
mov
inc
scas
loop
test
in
mov
mov
adcb
add
dec
cmc
push
shl
sub
sbbl
jne
pop
insb
loopne
bound
lret
cli
pop
cs
or
repz
imul
jne
sbb
lret
jg
pop
lahf
adcb
sub
mov
lea
push
imul
loopne
sbb
mov
ja
mov
mov
icebp
add
repz
cmc
xchg
add
xchg
or
mov
fdivrs
sbb
call
adc
mov
push
mov
out
sbb
pop
jmp
push
cmp
add
inc
fisttpl
mov
inc
pop
sbbb
imul
incl
pop
repnz
mov
lahf
xor
scas
out
cmp
outsb
cmp
sub
sahf
insl
mov
adc
cld
or
dec
add
or
push
jb
out
adc
cli
int
ret
xor
add
cli
sub
inc
aad
mov
fnstenv
data16
xchg
sarb
es
fwait
aaa
add
pusha
jbe
sbb
js
and
roll
es
pusha
fsubs
lcall
jne
ret
sti
or
sbb
sub
pop
js
add
jmp
push
mov
fucomi
cmp
cmp
jg
roll
or
jne
cmc
jno
dec
imul
push
in
inc
js
push
dec
xchg
mov
sub
add
mov
cmc
push
jmp
fs
repz
jl
clc
pop
jo
fwait
dec
shlb
sbb
iret
or
sub
xchg
mov
sbb
daa
cmpsb
pop
in
cld
cmp
sbb
sub
int
xbegin
and
xchg
repz
add
ja
bound
lcall
inc
pop
xor
test
sub
js
daa
inc
sub
inc
test
or
cmp
fldcw
adc
fucomip
or
add
nop
rclb
xchg
jnp
add
mov
mov
fwait
cwtl
std
loop
xor
jg
xchg
addr16
fidivs
jg
ljmp
add
pop
fucomip
cmp
mov
mov
adc
hlt
inc
push
mov
xchg
xchg
sbb
sbb
or
pop
mov
sarl
xchg
sbb
ss
bound
mov
pop
jb
xchg
mov
fsubrs
mov
inc
mov
xchg
cmpb
sbb
adc
fidivrs
pop
xchg
mov
les
decl
cmp
cmc
xor
pushf
iret
mov
inc
hlt
insl
mov
xlat
idivl
mov
cmp
popa
and
loopne
test
cmp
addr16
shrb
jge
ljmp
sub
clc
out
repz
rclb
sub
cmpb
test
daa
les
jecxz
sbb
movsl
pop
aad
jmp
aas
cltd
je
popl
xchg
add
jns
xchg
inc
frstor
inc
lret
movsb
data16
cld
fcoms
cmp
sbb
adc
aam
mov
jp
adc
ljmp
iret
movsb
outsl
pop
push
sub
mov
fisttpl
add
sub
cwtl
mov
pop
add
cltd
imul
jae
pop
pop
pop
jmp
fsubl
test
sub
test
aaa
test
mov
test
hlt
les
pop
add
popf
sbb
pop
imul
stc
jbe
mov
adc
jo
adc
daa
scas
inc
push
lea
jge
sbb
adc
arpl
loop
faddl
sub
addb
lahf
push
add
fcmovbe
jnp
fsub
shl
cmpsb
mov
fwait
xor
mov
xchg
dec
out
movsb
in
lock
call
or
sub
cmp
jge
fs
rcl
push
in
jae
outsb
jl
mov
jl
adc
sub
or
loope
ljmp
pop
jmp
dec
sbb
out
add
inc
inc
sub
in
and
call
ds
pop
push
pop
pop
flds
mov
ret
add
dec
sub
pop
mov
in
jle
mov
xlat
cli
inc
and
jae
push
dec
popa
mov
subl
mov
jp
dec
sub
push
pop
test
sbb
pop
cmp
xlat
mov
or
repz
into
aam
push
ret
and
push
cmp
outsl
xchg
ds
pop
xor
mov
int3
or
mov
mov
xor
cli
in
pop
mov
xchg
inc
shrl
sbb
test
mov
das
adc
test
jp
mov
leave
lcall
ss
and
mov
imul
test
sbb
aad
addr16
push
fcoms
fstps
or
das
stos
fwait
sbb
jb
mov
cmp
testl
arpl
inc
adc
cltd
and
mov
jmp
movb
jle
and
push
mov
sub
mov
mov
push
mov
pop
or
pop
mov
sub
enter
jno
insl
dec
into
in
fdivp
xor
push
sbb
dec
adc
mov
out
sbb
or
add
into
jo
cmc
rorb
jecxz,pn
scas
cli
arpl
and
fisubrs
hlt
enter
and
add
idivl
pop
and
mov
les
das
pop
jle
addl
and
xchg
dec
rorb
xor
stos
insb
pop
push
fwait
lods
jge
push
or
and
dec
dec
mov
jno
mov
push
lods
andl
xchg
adc
adc
xchg
das
adc
adc
adc
aad
clc
stos
or
rcl
sbb
push
ret
add
mov
dec
das
ret
mov
jb
aas
lcall
imul
jmp
mov
cmp
scas
cs
das
pusha
or
notb
adc
pusha
push
mov
sbb
jle
inc
sbb
stos
dec
cmpsb
ret
add
fadds
cmc
loope
adc
jmp
and
xor
cmp
ljmp
rolb
insb
adc
mov
test
mov
pop
inc
mov
add
xor
dec
inc
scas
xor
sub
ja
fnstsw
outsb
pushl
scas
lock
inc
test
arpl
or
cmpsb
xchg
push
ja
test
push
insb
xor
aas
shll
cmp
gs
pusha
fdiv
and
add
add
loopne
jb,pt
out
es
jg
add
enter
adc
push
cmp
or
cmp
jge
pop
jno
mov
adc
push
cwtl
fisttpl
dec
inc
mov
cmpsb
sbbb
mov
adc
arpl
add
lods
sbb
outsl
push
mov
notl
pop
ljmp
ja
and
stos
inc
sbb
sbb
adc
add
fcom
cmpl
add
in
iret
sub
pop
add
mov
aaa
push
push
adc
ljmp
call
pusha
outsl
cs
pop
jle
outsl
mov
adc
push
mov
push
lcall
cltd
xor
lods
jp
push
dec
sub
iret
xchg
and
daa
adc
cmp
iret
dec
je
inc
add
xor
ljmp
jge
scas
sar
addb
or
xchg
jle
lods
push
lock
adc
push
wbinvd
jo
cld
jl
inc
imulb
dec
cmp
xor
sub
and
rolb
add
mov
in
subb
clc
xor
icebp
xor
push
adc
stos
push
jmp
xchg
decb
mov
test
cwtl
mov
subl
mov
adc
fnstenv
in
insb
sub
or
dec
clc
subb
arpl
jecxz
cld
loop
and
lods
mov
mov
aaa
icebp
push
repz
fnsave
test
aaa
scas
inc
es
mov
inc
icebp
add
push
cld
test
sbb
loopne
ds
push
adc
mov
jmp
fdivrs
cmp
ljmp
lea
inc
jle
subl
idiv
adc
lcall
icebp
aas
sub
xchg
in
dec
scas
push
jo
sub
repz
test
and
mov
int
pop
mov
mov
xchg
mov
or
std
imul
rorl
sbbb
movsl
pop
les
pop
adc
adc
push
push
outsb
add
cmpl
fidivrl
mov
insl
mov
sub
mov
cmp
push
imul
mov
loope
mov
mov
sahf
movb
aam
daa
addb
ljmp
in
mov
scas
xchg
sub
push
mov
pop
sbb
push
in
daa
out
fistl
xor
popa
pop
mov
xor
mov
es
rcl
xor
shll
or
rorb
icebp
adc
sbb
out
mov
dec
lea
aaa
add
movb
xor
std
dec
cmp
and
dec
jl
pop
addb
int3
fs
pop
add
lret
fisttpll
cwtl
test
fsubrl
push
cmpsb
pusha
jno
adc
xor
lock
aam
cld
mov
insb
std
test
es
sub
jno
push
or
vmovdqu
lret
jg
jo
sub
mov
aaa
fisubrs
add
or
mov
and
xchg
jno
inc
cli
shl
sub
cmp
xor
outsb
mov
dec
int3
inc
mov
sahf
pop
fadds
int
push
push
repnz
insb
xchg
pop
mov
jne
push
mov
dec
jnp
adc
xor
nop
subl
test
addb
ret
in
mov
mov
in
lods
dec
bound
into
mulb
gs
mov
xor
lock
clc
gs
sub
mov
movsl
dec
add
arpl
fbld
sub
and
cmpsb
gs
pop
push
jp
test
or
lock
mov
in
sub
dec
fsubs
cmp
or
outsl
aas
out
mov
test
jmp
dec
mov
add
maxps
dec
inc
jnp
in
mov
add
mov
add
jg
mov
jmp
xor
imul
fwait
pushf
pop
sti
rcrl
lock
push
aaa
fsub
pop
fwait
jno
xor
fnsave
inc
stc
xor
fisttps
mov
cmc
lret
sub
pusha
xor
test
lahf
into
pop
sbb
jl
sbb
push
addb
dec
loope
call
iret
inc
add
and
inc
imul
dec
sub
fsts
ret
mov
jbe
jecxz
scas
cmp
add
inc
mov
pop
jle
in
andl
push
rorb
push
cmpsl
inc
cli
icebp
xchg
xchg
test
aad
inc
je
int3
jb
ljmp
xchg
jb
cmp
jo
stos
cld
in
cs
add
xchg
clc
xor
sbb
xchg
jl
or
andb
and
mov
pushl
jl
movw
popa
lret
pushf
or
push
mov
xchg
decb
fdivl
shl
mov
cmp
testb
ljmp
inc
fdiv
enter
cwtl
adc
xchg
out
inc
cmp
push
xor
pushf
test
push
jmp
cmp
or
data16
mov
sub
gs
cmp
cvttps2pi
xchg
out
lock
sub
add
jmp
push
cmpsl
pop
out
and
pushf
mov
push
jl
xchg
inc
loopne
test
jl
inc
pop
cmp
mov
mov
out
enter
outsl
incl
stos
test
or
je
adc
shl
or
push
sbb
or
aad
and
sbb
mov
lock
dec
add
pop
inc
push
gs
outsl
shlb
aas
push
push
xor
call
fwait
sbb
sbbl
xor
stc
push
xchg
xchg
sub
mov
out
fidivrs
mov
mov
loope
ret
adc
jo
sub
sbbb
aaa
cld
inc
inc
mov
xor
and
xchg
sbbl
daa
inc
push
ljmp
xchg
popa
push
std
mov
cli
in
into
dec
rclb
loope
xchg
lock
outsb
jns
adc
rcrb
test
cmc
out
frstor
fucom
and
mov
sbb
and
test
aam
push
movsb
clc
test
gs
es
mov
rcrb
sahf
jae
inc
mov
and
adc
and
in
xchg
lds
cmpsb
in
pop
lds
out
rorl
add
loopne
pushf
xor
pop
cltd
or
and
ljmp
fiadds
insb
lea
fucomp
scas
sub
and
push
movsl
mov
pop
cld
or
je
xorl
dec
test
add
pop
add
sarb
aam
jmp
xchg
lock
dec
cmp
sbb
mov
test
out
sbb
in
adc
cld
adc
add
jb
mov
std
repnz
sub
mov
lods
loope
pop
clc
ret
sbb
inc
cmp
sbb
xchg
inc
fldl
or
out
int
gs
test
inc
xchg
adc
dec
push
xor
mov
mov
push
mov
add
fstpt
adc
mov
adcl
inc
add
icebp
in
xor
xor
dec
inc
fcmove
aad
daa
jge
sbb
push
insb
es
int
call
lods
das
dec
sbb
mov
push
and
or
xor
push
mov
fwait
scas
mov
jl
sub
mov
lock
ret
loop
push
or
push
cmpsl
popl
pop
jecxz
mov
in
pop
mov
lds
nop
je
das
arpl
sbb
je
pop
xor
rorb
sahf
test
jns
pop
mov
sub
test
jo
jbe
js
adc
or
jmp
cs
cld
cmp
and
hlt
fdivrp
fistpll
gs
movsb
pop
sub
dec
or
cli
out
xor
popa
xchg
inc
adc
mov
mov
pop
inc
and
outsl
cli
lret
lods
ret
inc
cltd
pop
push
out
rolb
std
mov
pop
dec
jl
add
mov
fs
xchg
hlt
sbb
enter
cmp
loope
out
mov
and
arpl
hlt
push
jae
stc
mov
hlt
mov
mov
les
stc
mov
push
or
icebp
xor
pop
mov
jae
sbb
xor
testb
andl
loopne
xchg
hlt
es
mov
nop
mov
dec
push
xor
loope
out
cmpsl
into
inc
adc
es
outsl
xor
sub
or
sub
pusha
push
xchg
cmp
aas
jmp
repz
sub
dec
movmskps
push
inc
push
inc
lods
dec
cs
jno
mov
es
stc
dec
sub
into
or
push
in
cmp
jae
adc
fcomps
rorb
roll
mov
lock
psubd
inc
mov
xchg
add
popa
in
dec
or
adc
sbb
mov
dec
sbb
lds
imul
in
push
fidivl
ud0
fimuls
sbb
leave
inc
xchg
cmp
loope
int
sub
cmovne
icebp
addr16
mov
clc
insb
xchg
mov
lea
daa
inc
les
xchg
push
mov
sbb
test
loopne
roll
mov
inc
or
nop
lea
cli
or
sbb
orl
xlat
xchg
or
dec
and
mov
into
ss
mov
filds
mov
xchg
xchg
cld
sbb
fcomps
xor
or
or
int3
scas
cmp
pop
mov
cli
rcrl
mov
sbbb
cli
push
adc
adc
movsl
inc
sub
lea
mov
add
xor
push
imul
mov
adc
inc
cmp
stos
test
imul
daa
xlat
ds
data16
pop
sbbb
push
sub
dec
das
xor
movsb
cmpb
negb
aas
mov
mov
dec
or
addl
ljmp
dec
jb
mov
jg
aas
mov
add
int3
xor
mov
push
adc
mov
pop
int3
out
jb
inc
xchg
xchg
jne
xchg
into
hlt
pop
cmp
gs
sti
jmp
test
das
and
popa
test
out
pop
mov
or
notb
jo
push
xor
inc
repz
and
and
jg
hlt
popa
js
mov
fwait
push
push
mov
int3
xchg
inc
adc
mov
or
push
jp
jle
xchg
pop
mov
jnp
int3
fmulp
or
fiadds
mov
lcall
sahf
ficompl
inc
mov
cmp
mov
jae
inc
decl
stc
sbb
imul
add
cs
jno
or
loope
daa
mov
push
xchg
xchg
or
rcll
fisttpl
into
ss
or
icebp
sbb
or
pop
lea
and
xor
pop
cli
add
xor
movsl
aam
mov
push
das
or
jecxz
mov
in
scas
jns
les
jecxz
outsl
pop
xchg
push
xor
sub
inc
cmpsb
dec
imull
mov
movsl
test
ja
xchg
mov
inc
insl
in
out
fdiv
inc
add
adcb
jno
lahf
and
in
sbb
adc
pushf
dec
clc
divb
jmp
sub
sbb
add
outsl
sbb
jp
xor
cld
cmp
dec
cmp
push
xor
cmp
movsb
xlat
xchg
and
xor
cmp
jle
push
movsl
xor
icebp
jg
pushf
mov
sti
daa
adc
test
dec
loope
mov
jns
mov
and
ja
lahf
xor
sarl
adc
xchg
mov
js
ja
add
and
cmpsl
xchg
mov
mov
mov
sbbl
loopne
hlt
cmp
outsl
shlb
rcrl
cld
add
fstpl
out
push
sub
dec
pop
rclb
dec
add
sbb
popa
int3
push
sub
clc
int3
xchg
xchg
ret
or
shr
xor
push
fwait
cmpsl
es
xchg
ljmp
icebp
dec
xchg
pusha
bound
add
cmp
adc
fidivl
inc
stc
mov
clc
jmp
push
lcall
call
insl
popa
in
outsl
negb
mov
jne
or
scas
mov
sti
mov
pop
xor
shll
xchg
sti
xor
inc
cmp
pop
aaa
nop
sahf
mov
inc
push
inc
stc
loopne
outsl
mov
and
leave
add
fsubs
and
out
cmpb
jg
addb
cld
adc
push
inc
outsl
xor
mov
adc
daa
cmp
xlat
jmp
repnz
ficomps
popf
or
pop
dec
mov
mov
sbb
add
add
and
cs
cld
out
xor
add
sub
jns
jb
xchg
shlb
rcll
pop
mov
mov
popf
mov
adc
push
ret
stos
lret
xchg
dec
and
lcall
push
js
and
test
dec
inc
sbb
shl
mov
hlt
jne
inc
outsl
pop
nop
inc
les
inc
mov
clc
mov
xor
mov
inc
dec
addl
loope
push
scas
ror
fcmovnu
cmp
push
cmp
andb
add
in
sub
std
push
pop
or
int3
push
movsb
fbld
cmp
mov
mov
sbb
test
ss
adc
xchg
adc
loopne
pushf
lds
sahf
mov
addb
mov
mov
lret
push
aam
pop
icebp
popa
jmp
sbb
pop
call
mov
add
sti
ret
push
and
mov
loope
ds
out
and
lock
test
aad
ret
and
mov
and
push
adc
mov
lcall
in
jno
mov
pushf
push
or
test
sub
daa
scas
rolb
fisubl
cmp
pop
rolb
xchg
cmp
rorb
test
cld
push
popa
adc
dec
mov
xchg
es
push
xchg
mov
fwait
sbb
mov
loop
add
cmp
push
and
and
ss
stos
sbb
and
push
push
mov
add
push
std
jp
aad
or
cmp
jb
jb
int3
mov
std
cmp
mov
mov
xchg
jnp
mov
sbb
mov
push
pop
out
cwtl
in
push
mov
std
push
rcrb
bound
cmp
adc
fprem1
and
test
roll
dec
inc
divb
cs
dec
iret
mov
loopne
adc
imul
test
pop
or
pop
repz
out
add
hlt
bound
push
cld
dec
dec
sbb
sahf
cmp
clc
dec
je
and
cmpb
add
nop
std
ss
fistpll
push
pop
sbb
push
loope
mov
movsb
in
mov
sbb
lock
mov
icebp
cmp
sbb
rclb
xchg
cltd
sbb
pop
popf
arpl
lods
das
popa
adc
add
movsb
sbb
inc
cmpsb
and
jae
mov
int
xor
mov
ljmp
mov
nop
bound
jecxz
inc
pop
inc
jno
cwtl
ss
pop
hlt
mov
cmp
and
hlt
push
cmpsl
and
push
std
or
or
sub
push
mov
aaa
cmp
mov
mov
shlb
daa
inc
into
adc
sti
adc
or
mov
call
pop
insb
lea
xor
mov
add
test
lods
les
mov
les
jb
mov
popf
adc
mov
mov
insb
call
vphaddbd
sub
jbe
in
xchg
xor
jbe
dec
xchg
cmpl
jg
hlt
pop
xor
xchg
imul
aad
sarl
scas
pop
mov
scas
add
jge
lret
test
mov
outsl
faddl
clc
addl
mov
adc
decl
movsb
ljmp
decl
clc
mov
arpl
mov
mov
pop
inc
push
call
out
sbb
cs
xchg
push
testb
stos
jg
pop
scas
and
adc
push
and
nop
loope
mov
scas
lods
hlt
push
ja,pn
rcrb
push
adc
mov
pop
rorb
cs
and
incb
cltd
fdivrl
lock
sbb
mov
clc
cmp
out
add
fmull
and
cld
addb
add
outsb
pop
push
subb
sbb
cs
cmp
shl
inc
loope
insl
push
hlt
test
xor
sbb
arpl
inc
clc
and
scas
rolb
cltd
push
push
gs
sub
and
icebp
add
fldl
and
inc
add
nop
ret
inc
out
loop
sub
add
test
jl
mov
jg
jp
add
addb
jecxz
add
cld
in
xchg
mov
rclb
mov
nop
jbe
sarl
mov
enter
cli
cmpsb
jo
sar
mov
out
xor
jmp
ja
xor
pop
sub
xchg
mov
pop
out
or
bound
cwtl
add
or
aaa
jl
mov
adc
push
jecxz
mov
jae
mov
sahf
push
sbb
mov
dec
sub
ret
in
leave
push
mov
inc
cmc
mov
loopne
dec
mov
lock
loop
and
cmp
repz
mov
lret
mov
cli
dec
push
rol
loope
cmc
and
stos
or
xchg
xchg
loop
roll
mov
rol
pop
or
nop
flds
enter
cmp
test
scas
test
inc
rcrb
scas
hlt
pusha
fwait
pop
testl
mov
mov
pop
mov
xlat
sbb
and
into
xchg
or
cli
push
jnp
xchg
idiv
mov
je
sub
push
ret
pop
cmp
leave
or
add
aas
dec
inc
or
cld
adc
test
aaa
adc
fadd
lock
cmp
mov
pop
std
sarb
sti
cld
and
mov
pop
pop
test
mov
add
cld
sub
sbb
int
iret
xor
in
jecxz
in
jp
test
cmp
call
and
addb
dec
adcb
sbb
and
jb
out
sbb
xchg
lds
ds
out
mov
inc
and
sahf
pop
clc
inc
sub
imul
jae
cs
cmp
popa
cli
daa
shll
or
add
in
js
sbb
inc
push
push
push
xchg
jae
mov
les
loop
stos
rol
adc
shrb
in
inc
scas
loope
and
or
adc
xor
leave
es
cmpsl
inc
fs
cmpsb
push
cmp
sub
jecxz
push
mov
repnz
xchg
push
or
pushl
test
xor
push
fdivs
sub
pop
inc
jp
test
mov
lahf
rorb
fiadds
push
leave
aam
cld
mov
inc
jnp
mov
sbb
data16
mov
sarl
adcl
and
inc
enter
movl
adc
jecxz
jo
pop
add
mov
jmp
add
pop
mov
inc
adc
mov
push
test
lahf
inc
mov
lahf
and
add
notl
xor
inc
lcall
add
jecxz
inc
pop
jl
mov
and
ja
cli
mov
add
push
out
hlt
fmull
outsl
add
inc
sub
lods
add
je
stos
sub
mov
push
or
xchg
inc
and
mov
test
jecxz
push
adc
shlb
iret
or
dec
aaa
scas
into
rcr
aas
lret
jg
sbb
cli
pop
or
xor
ljmp
xchg
mov
pminub
lret
insl
in
dec
js
inc
pop
insb
sahf
das
into
and
addr16
daa
jmp
mov
or
jl
mov
cmpl
and
push
inc
xlat
popf
xchg
call
stc
fs
xchg
cs
push
mov
sbb
fs
adcb
ret
jbe
insl
adc
mov
push
ud1
cmp
push
add
push
out
jo
scas
inc
idiv
pop
std
rol
shll
adc
mov
cld
jnp
and
enter
cmp
sbb
movsbl
int3
das
pusha
int
out
cmp
cltd
stos
cmc
push
inc
mov
test
call
pop
dec
pop
and
loop
fwait
stos
dec
and
div
push
add
rorb
inc
cmp
jnp
dec
das
je
das
dec
mov
js
sub
imul
clc
jae
aam
stos
std
inc
flds
pop
roll
cltd
or
movsb
out
jge
aad
mov
loop
int
inc
adc
mov
into
loopne
lcall
add
mov
inc
adc
xchg
xchg
sub
loopne
cmp
jge
inc
clc
std
mov
and
stos
and
out
jb
mov
jg
push
call
cld
cmpsb
adcb
mov
and
xchg
or
iret
add
and
inc
lea
incb
out
in
adc
xchg
or
adc
jmp
push
cmp
cmp
pusha
movsl
pop
mov
int3
cmp
cmp
ja
loop
daa
inc
or
cltd
daa
nop
icebp
outsb
jge
xchg
arpl
cmpsl
insb
dec
fisttps
popf
add
add
outsl
xchg
xchg
pop
sbb
push
sub
jle
and
aas
push
add
mov
insb
mov
lahf
faddl
imul
xor
insl
sbb
test
add
les
outsl
add
mov
outsb
pop
sub
push
mov
es
ljmp
test
mov
call
sbb
push
mov
outsl
stos
push
rclb
cltd
sahf
aas
push
bound
mov
lret
test
jle
fadds
xchg
stc
adc
mov
inc
in
popa
ss
popf
add
lahf
or
clc
xchg
cmp
rcl
adc
pop
mov
outsl
hlt
mov
cmp
test
dec
pushf
cmp
and
push
mov
inc
push
inc
mov
loope
sbb
mov
loop
lcall
adc
stc
push
push
push
lret
mov
mov
mov
sub
pop
cmp
outsb
imul
push
scas
xor
imul
push
aad
shl
sub
mov
pop
or
push
mov
addb
inc
or
mov
fmuls
adc
scas
ret
mov
les
pop
inc
movsb
xchg
out
inc
cltd
sbb
jnp
sub
jg
pop
and
mov
imul
into
clts
cmpsl
xchg
pop
adc
pop
ret
inc
aaa
push
pop
push
div
mov
shufps
xchg
inc
test
cmpsl
sahf
shl
add
dec
dec
incl
flds
divl
add
lods
xchg
lcall
fcoml
mov
and
mov
dec
cld
push
lret
jle
je
or
testb
int3
pop
dec
pop
loope
cltd
cmp
movsb
cmpsl
xchg
sub
or
movsb
cmp
xchg
clc
iret
dec
push
jns
lock
xor
cmp
push
xor
xor
sbb
add
cli
push
jp
inc
jne
je
bound
jle
popf
lcall
lret
imul
mov
add
fistl
mov
sarb
sub
mov
cwtl
inc
test
out
lea
test
arpl
ret
add
xor
rcr
hlt
sub
aam
gs
cmp
jnp
push
call
popf
mov
shr
fbstp
jns
pop
pop
cli
es
add
dec
into
in
cmc
add
movsb
mov
mov
or
movsb
ds
aad
mov
add
ret
mov
push
push
mul
sub
das
sarb
add
mov
add
outsl
addb
pop
sub
test
mov
adc
sbb
push
dec
dec
aam
sub
push
inc
add
inc
add
xor
call
fiadds
mov
enter
mov
mov
mov
sbb
cmc
push
sbb
inc
fldl
hlt
dec
cld
ss
mov
pushf
ret
inc
popf
pop
sub
mov
jp
popf
sub
dec
jp
addl
imul
pushl
outsl
or
or
fdivs
gs
repnz
mov
mov
pop
sub
jnp
push
pop
ljmp
loopne
loopne
sbb
jecxz
add
adc
aaa
xor
fimuls
insl
ret
imul
mov
inc
xchg
int3
jle
sub
les
insb
cs
mov
ljmp
stc
rorl
sub
mov
cmp
jecxz
or
jb
push
xchg
lods
pop
je
xchg
adc
test
adc
pop
loopne
adc
push
and
or
xlat
jp
ret
push
mov
aam
jmp
and
imul
inc
loope
or
add
xor
sub
sahf
decb
cmp
pop
call
icebp
inc
pop
dec
jl
das
hlt
push
add
mov
sub
testb
dec
push
lret
and
addr16
or
loopne
and
or
lock
das
or
add
push
sub
stos
std
pop
ds
mov
nop
mov
sub
and
or
lock
test
and
xchg
xchg
pop
outsl
and
bound
popf
mov
clc
sbb
fs
pusha
ffree
das
push
movsb
cmp
cs
push
fistpl
clc
pop
jl
mov
push
pusha
add
ret
cmc
add
cli
loop
mov
or
cld
es
or
into
data16
add
push
stos
add
cld
mov
sti
inc
jg
or
push
iret
xor
sbb
jmp
or
xchg
inc
jle
pop
jno
xchg
ret
mov
and
clc
ljmp
cmp
jecxz
repnz
inc
pop
std
pop
push
dec
repz
push
aaa
mov
out
mov
loopne
mov
push
add
jnp
ds
movhps
or
sub
bound
adc
pop
mov
fstpl
jmp
sub
addr16
les
xchg
add
xor
dec
bnd
je
pop
cs
cmp
or
lahf
xor
jle
mov
cmp
xor
sbb
into
gs
dec
add
popa
add
and
xor
mov
and
push
sbb
jp
fs
adc
cmp
xchg
icebp
push
in
xor
pop
mov
jge
lock
jp
roll
push
pop
inc
std
xor
dec
cld
ja
add
ljmp
xchg
xchg
pop
rcll
add
or
add
jo
insb
pusha
lods
es
push
sbb
fmul
fcmovnb
call
sbb
je
xor
pop
mov
leave
mov
or
hlt
xchg
jo
inc
push
cli
jmp
pop
mov
jbe
aaa
das
fisubrs
jbe
sahf
jae
sub
clc
movsb
nop
int3
repnz
jl
mov
mov
fwait
lods
or
mov
sub
push
sbbb
popa
mov
pop
inc
aam
mov
and
mov
fldt
xchg
lods
das
and
lods
pop
sub
mov
add
mov
xor
cwtl
rcrl
fidivrl
inc
cmp
ret
sbb
xlat
push
or
stc
test
sbb
roll
sbbl
xor
psraw
ja
stc
and
mov
inc
adc
cltd
inc
js
jecxz
lahf
fdivrs
pop
nop
lds
and
pop
or
and
mov
es
xchg
cmp
ja
iret
sbb
das
rol
jnp
adc
fisubrs
mov
push
sbb
stc
add
lods
and
add
xchg
or
push
roll
mov
adc
jmp
fisttpll
call
mov
mov
lcall
xor
add
jg
scas
jp
ljmp
shl
or
imull
das
mov
mov
pop
lds
arpl
shrb
enter
mov
scas
ljmp
cld
rcll
xchg
dec
dec
jb
xchg
sbb
xor
adcb
sbb
pop
pop
add
lcall
mov
rcl
pop
jle
es
jne
sbb
pop
fsub
push
das
pop
push
xlat
jg,pn
inc
loop
daa
mov
jle
mov
and
xchg
movd
leave
incl
push
and
inc
dec
xor
bound
cmpsb
icebp
inc
mov
pop
mov
inc
dec
insb
fisttps
jmp
movsl
cmpsb
arpl
push
imul
fwait
cwtl
addr16
popf
shlb
xchg
cs
stc
in
pop
push
testb
fs
mov
cmc
pop
push
out
out
jmp
cmp
mov
lea
cmp
push
push
mov
inc
jmp
mov
inc
xchg
jmp
in
ljmp
mov
test
lock
mov
pop
loop
sub
pop
jne
or
test
xchg
cmpsl
movsl
add
rorl
xor
inc
daa
push
andl
popa
cmp
xor
mov
pop
js
jl
sar
xlat
out
sbb
push
test
sbb
in
mov
inc
hlt
add
add
xorl
sub
out
xchg
mov
cmp
arpl
xorb
pop
sbb
scas
aad
bound
rcrb
pop
jl
xor
call
sbb
jne
or
sub
in
rcr
pop
stos
aad
jp
jecxz
jl
icebp
sbb
std
aad
in
into
aaa
in
inc
and
fcmovu
loopne
jo
sbb
addr16
jle
rorb
mov
inc
movsb
call
or
aam
pop
cmp
lods
dec
jle
inc
mov
aas
mov
jb
mov
dec
lahf
imul
and
ljmp
test
std
mov
outsl
ffreep
fcomps
push
add
test
pop
sbbb
ret
popf
pushf
cmp
sbb
cli
jp
iret
sbbl
hlt
addb
repz
jl
loope
push
or
enter
push
bound
mov
call
sbb
cmc
repz
fcoml
orb
xchg
andb
xchg
pop
scas
loope
pushf
sbb
inc
sub
mov
sahf
pop
or
push
jne
call
std
aam
inc
adc
inc
mov
adc
popf
scas
dec
mov
mov
jecxz
pop
cltd
hlt
mov
cld
fisttps
and
xchg
sub
push
pop
xchg
adcb
cmp
inc
mov
mov
shlb
rorl
popf
ljmp
bound
test
mov
jns
ret
xor
xor
mov
jge
adc
mov
aad
mov
or
sub
xlat
ljmp
mov
aas
push
add
sbb
cmp
loopne
push
dec
jne
pop
aas
jecxz
adc
lods
push
daa
dec
insl
pop
fdivp
cli
repz
pop
sbb
lcall
fistpll
insb
add
arpl
daa
in
pushf
push
inc
leave
jo
enter
add
je
adc
jbe
or
cli
imul
pusha
aaa
jnp
popf
popa
cs
mov
movsl
test
jle
sbb
or
mov
aaa
shr
out
idivl
jnp
lea
mov
dec
sbb
and
add
and
sbb
push
popa
sub
repnz
ljmp
in
popf
push
loopne
rcll
cs
sbb
cmpsl
inc
adc
push
mov
jle
mov
mov
xchg
push
notl
xchg
sbbl
jo
inc
subl
jo
pop
js
add
lock
sub
pop
cmc
fisubs
loop
mov
lahf
loopne
xchg
std
or
mov
push
xchg
int
and
sub
fwait
leave
push
mov
adc
dec
loop
mov
fidivrs
les
mov
loop
pop
fs
lret
jne
out
adc
iret
mov
out
arpl
ret
inc
push
insb
cmp
arpl
insb
xchg
pop
sub
xor
cwtl
xor
loopne
jle
pusha
iret
sub
mov
or
int3
stc
add
dec
jecxz
fldl
or
xchg
andl
add
jg
hlt
xor
pop
js
or
cwtl
xchg
js
mov
int3
pop
into
dec
pop
movl
lcall
lahf
mov
add
mov
inc
cmp
jo
cmp
shlb
cwtl
bound
pop
and
dec
jo
jp
mov
stos
out
xchg
adc
pop
dec
and
icebp
mov
or
sbb
adc
dec
cmp
je
push
sub
hlt
adc
fwait
sub
push
stc
movsb
rcrb
je
shlb
jecxz
loope
cmp
repz
xor
daa
jle
cmp
fists
icebp
shll
fldt
pop
sub
mov
imul
xorl
mov
aad
mov
add
pusha
testb
dec
pop
shll
imul
int
or
ficoms
dec
fcompl
jge
adc
dec
test
mov
outsl
xchg
xchg
test
xlat
pop
ss
das
insl
mov
sbb
push
dec
test
icebp
lcall
inc
jno
repz
inc
mov
nop
pop
jmp
jnp
shl
cmp
rcr
sysenter
sbb
add
mov
xlat
jno
mov
cld
enter
or
or
add
cmp
inc
add
test
scas
lods
pop
inc
inc
pop
add
push
mov
sub
or
ret
test
clc
pop
jge
sbb
insb
push
or
scas
mov
jg
jne
pop
adc
xlat
adc
xlat
xor
outsl
repnz
int3
push
mov
fcoms
fwait
int
aam
xor
adc
xchg
mov
jmp
or
outsb
dec
xchg
xchg
sbb
das
add
inc
sub
mov
in
or
sbb
add
sub
cltd
std
stc
push
push
cld
inc
andnps
mov
jl
inc
add
add
xchg
arpl
xlat
and
sbb
daa
mov
push
scas
xchg
mov
xchg
mulps
insl
inc
sbb
push
mov
lahf
xor
rcr
cmc
icebp
dec
mov
inc
cmp
mov
xchg
jle
fwait
or
cmpsl
and
cli
or
lahf
xchg
jb
jmp
push
sub
pop
test
outsb
test
aas
stos
movsl
movsb
inc
mov
xor
aas
push
and
popa
stos
cmp
jl
xchg
jbe
shl
mov
cmpsl
enter
rcll
push
in
ljmp
sub
sbb
adc
int
aas
call
stos
mov
das
add
sub
sub
fwait
sbb
in
and
lea
in
stc
adc
sbb
fucomp
ret
pop
add
stos
cwtl
out
mov
sub
popa
into
mov
dec
sbb
push
ret
ds
int
cmp
push
xor
jne
jns
adc
hlt
adc
xchg
sarb
inc
pop
adc
imul
jle
xor
push
cmp
mov
and
imul
loopne
xchg
add
push
aaa
inc
cmpsb
jno
aad
xor
xor
call
js
cld
sub
sub
adc
test
fldt
aam
inc
adc
mov
aas
adc
lea
jmp
sbb
repz
pop
bound
int
loope
ds
daa
mov
inc
xlat
js
test
push
sahf
ss
xchg
pop
adc
pusha
fildl
imul
inc
mov
adc
mov
push
imul
hlt
mul
cmp
push
mov
fildll
lea
loope
es
orb
in
out
mov
pop
add
ljmp
jg
adc
or
lea
inc
adc
jecxz
cmpsl
pop
aas
xor
shrl
sub
and
or
and
mov
mov
cmpsb
cmpsl
icebp
xchg
mov
lcall
xchg
rcl
lcall
jb
adc
and
lock
dec
les
pop
cs
pop
pusha
popa
hlt
loop
mov
xor
loope
xor
sbb
faddl
adc
jmp
adc
dec
shll
stos
inc
xchg
push
add
addl
dec
mov
inc
in
xchg
lret
inc
push
and
fisttps
in
pop
bound
js
sub
or
or
add
sub
lea
scas
mov
subb
icebp
adc
pop
mov
test
xor
adc
sbb
mov
sbb
inc
ds
dec
sti
adc
xchg
cli
and
mov
test
mov
lret
pusha
jg
fiadds
jnp
inc
inc
fsubp
and
rol
jmp
jmp
cmp
lahf
test
xor
xorl
sub
mov
movl
sbb
mov
imulb
push
jbe
imulb
pop
sahf
jmp
push
subb
pop
jmp
shr
aaa
mov
cmpsb
inc
dec
repz
push
xor
jg
mov
call
aad
jl
dec
loop
sub
les
lahf
cmp
outsl
jle
push
lods
mov
imul
mov
cmp
mov
jge
push
xchg
idivb
insb
es
push
or
clc
or
lret
mov
adc
popa
scas
movsl
into
ret
ret
add
orb
mov
int3
cmp
jae
call
call
sub
sub
mulb
inc
xchg
stos
jbe
cmpsb
into
add
mov
in
dec
sbb
and
dec
add
shlb
fildll
lods
loope
pop
inc
movsl
dec
mov
mov
pusha
aas
sahf
and
std
nop
loopne
or
adc
dec
movsl
pop
push
dec
cmp
hlt
imul
loop
test
int3
or
inc
push
add
dec
jo
adc
outsl
imul
testl
popf
in
cmc
mov
lods
mov
filds
fldcw
cs
push
add
add
ds
gs
js
pop
aaa
or
inc
mov
mov
enter
pop
mov
mov
mov
push
nop
mov
push
aaa
lea
cwtl
mov
xor
mov
sub
cmc
mov
push
cmp
dec
sbb
mov
pop
jmp
push
imul
movsb
icebp
cmp
or
popf
call
push
sbb
mov
adc
imulb
jbe
add
mov
cs
sub
aad
loope
pop
arpl
ja
xor
push
pop
fwait
roll
mov
das
adc
les
js
dec
call
xor
scas
fwait
popa
gs
mov
test
or
loopne
rorl
test
aad
or
fidivl
mov
ret
sbb
jno
ret
jb
push
sub
imul
mov
aad
cmpsl
xor
lret
aaa
push
dec
insb
xchg
dec
xchg
sbb
bound
mov
stos
lea
dec
fnstenv
call
adc
cmp
xchg
add
nop
and
lds
lret
jp
inc
js
les
fmuls
aad
or
xchg
andl
cmp
or
aad
ljmp
push
xor
aas
stos
popl
daa
cwtl
and
sbbb
mov
push
sbb
xor
add
mov
jmp
sub
js
lea
filds
mulps
rclb
or
ret
jae
or
push
lret
decb
jnp
test
rcrl
pop
sub
inc
shll
daa
pop
fwait
jbe
decl
aaa
pop
cld
cmp
adc
dec
bnd
lock
and
and
add
mov
cld
mov
and
xchg
cmp
faddl
ljmp
subb
sub
loopne
or
mov
mov
test
xlat
or
dec
and
insl
and
shl
mov
aam
push
xchg
dec
xor
mov
insl
daa
xorb
pop
popa
add
ljmp
in
adc
jecxz
xchg
xor
inc
rorb
sub
clc
xchg
lds
add
ret
mov
fstpt
xchg
mov
lret
movsl
cmc
pop
adc
or
xchg
aam
cmc
or
iret
sub
mov
push
sahf
mov
sub
xchg
adc
fsubl
mov
pop
cvtps2pd
jno
subl
lock
jecxz
lods
adc
lock
movl
and
hlt
xorl
jp
mov
mov
movsb
push
lret
scas
dec
rolb
rcll
popa
or
add
sub
push
add
or
adc
lods
jbe
push
xor
pop
push
dec
and
pop
push
add
or
mov
and
and
loopne
adc
inc
addr16
add
jnp
pop
pop
add
push
dec
sbb
adc
sahf
cmp
test
mov
cmp
or
dec
adc
sbb
stos
sub
shll
add
mov
sbb
mov
icebp
adc
cltd
sbb
jmp
sbb
sub
hlt
addb
hlt
mov
inc
lcall
sbb
jno
fimull
cmp
iret
or
inc
pop
jb
pop
cmc
mov
addl
ret
out
jo
mov
enter
aam
pop
adc
jnp
movsb
mov
jl
and
cltd
ret
std
loopne
ret
icebp
mov
cmp
leave
lea
idiv
sbb
push
int3
adc
fs
inc
jl
inc
pop
inc
call
outsl
test
pop
sbb
push
pop
sub
cmp
or
cmpsb
into
dec
lea
xor
dec
inc
cld
push
rorl
mov
insl
pop
ret
pop
sub
cld
bound
or
arpl
sqrtps
mov
adc
adc
lods
fistpl
mov
push
mov
adc
inc
mov
outsl
lock
push
mov
cmp
jg
mov
push
or
push
sti
cli
andl
or
je
mov
push
pop
jle
or
leave
jl
cld
adc
scas
or
out
push
push
shlb
push
arpl
sbb
test
push
and
add
cli
int3
ds
push
push
add
inc
in
les
stos
mov
mov
and
addb
aad
jno
pop
cmc
outsb
jecxz
push
loop
push
sub
or
sub
xlat
mov
inc
push
push
jae
shrb
xchg
mov
jae
push
xchg
mov
xchg
fisubrl
iret
mov
mov
mov
decl
adc
or
lods
jo
xchg
sbb
mov
add
cmp
cmp
dec
ret
xchg
and
adc
xchg
sbb
sub
xlat
or
xchg
shll
adc
mov
out
pop
jp
dec
insb
cmp
or
iret
mov
addr16
fsubr
cli
push
std
adc
shr
xchg
jo
cmpsb
in
ljmp
pop
adc
ret
jb
inc
arpl
or
add
dec
scas
dec
push
mov
mov
insb
cmp
push
sub
std
enter
lds
xor
dec
test
or
pop
shr
cmp
icebp
pop
std
je
push
xlat
fcomps
pop
or
sub
aad
dec
in
mov
push
int
mov
bound
insb
mov
push
sbb
lds
lahf
push
das
mov
or
add
aam
or
sti
adc
push
pop
push
jp
fdecstp
mov
lock
inc
pop
inc
ljmp
icebp
add
notl
shll
insb
outsl
push
sub
mov
pop
dec
insl
neg
jbe
dec
pop
cmpb
sbb
jl
sbb
cmpsb
cmp
adc
subl
add
add
aad
inc
or
push
shrb
pop
xchg
sbb
xorl
jl
pop
inc
in
lcall
clc
hlt
pop
push
adc
push
xorl
fsubrs
inc
sbb
mov
sub
addl
lods
hlt
ror
jbe
movsl
repz
jg
mov
repnz
jle
scas
hlt
sbb
sub
data16
fs
iret
cmp
lods
aaa
and
dec
xor
push
test
sub
sub
fcmovbe
cwtl
mov
negl
scas
mov
xchg
pop
adc
sahf
pop
leave
jno
sbb
pushf
pop
mov
out
mov
loopne
push
adc
and
or
push
pop
xchg
lea
adc
add
test
push
push
nop
mov
into
push
ss
iret
mov
repnz
xchg
push
addb
mov
cmp
mov
fsubl
sub
add
mov
lods
add
xchg
or
cmp
add
jle
sub
dec
mov
pop
mov
pushf
cmp
jmp
mov
inc
mov
push
out
xchg
push
shlb
pop
adc
sbb
cmp
stos
mov
call
lock
xchg
pushf
ret
xchg
xchg
mov
fsubrs
paddb
mov
aam
movsb
push
mov
inc
int3
pop
pop
jmp
movsl
pop
lret
mov
xchg
xchg
xor
and
adc
push
and
inc
mov
cli
jo
jp
lock
xor
jne
mov
mov
mov
inc
pop
gs
mov
cmp
jbe
lea
sub
call
inc
jo
inc
or
lods
fdivr
jae,pn
cmc
jmp
adc
adc
pop
xor
icebp
xchg
sti
inc
daa
dec
pop
mov
cmpsl
stos
adc
sbb
lcall
mov
lcall
dec
or
dec
xchg
stos
outsb
repnz
test
push
mov
out
or
pop
or
in
cmpb
dec
int3
daa
movsb
adc
mov
pop
hlt
std
or
or
sub
test
icebp
push
cli
fs
mov
add
pop
es
sti
pop
xchg
push
adc
mov
outsb
xchg
je
pusha
sbb
mov
scas
test
mov
fcmovne
test
stos
shl
pop
cmp
data16
push
iret
rorl
subb
cld
ljmp
out
pop
and
xlat
cmpsl
xchg
sbb
inc
sub
ret
pop
lcall
jae
adc
movsb
cmpsl
jbe
push
xor
push
or
push
lret
sub
pop
and
insl
inc
decb
mov
mov
dec
es
pushl
and
xchg
mov
adc
movsl
out
pop
add
push
fsubrl
xor
popa
jge
sbb
sub
fcompl
hlt
inc
dec
cmp
loopne
cli
jno
mov
or
push
rolb
cmp
std
fbstp
mov
add
stos
xor
pop
test
stos
cmp
lret
pop
mov
daa
sbb
aam
dec
lcall
cmp
mov
loopne
push
jecxz
lock
pop
fs
cmp
push
ja
mov
test
inc
push
in
out
and
push
jb
lret
xchg
xchg
icebp
pop
add
adc
adc
jmp
lods
jg
or
pusha
daa
adc
jmp
fcomip
rolb
enter
das
or
es
sbb
pop
push
mov
bound
push
mov
ret
fcmovnbe
fs
ficoml
mov
es
xchg
push
rcrl
fldt
inc
xor
push
cmp
aaa
les
xor
mov
push
mov
sbb
cmpsl
mov
stos
stc
cld
add
lret
add
xchg
cli
adc
daa
push
fsts
loopne
lea
mov
inc
push
jne
xchg
es
mov
xchg
sbb
jle
std
xchg
inc
jne
lock
dec
jno
rorl
sbb
sbb
icebp
push
push
xor
and
cli
cmp
mov
jge
or
push
push
push
add
or
les
sub
sbb
adc
sbb
and
xchg
cmp
push
rol
xchg
mov
es
fisttpll
adc
iret
lds
xor
test
sbb
movsl
push
inc
in
scas
adcb
test
xor
xchg
adc
icebp
orb
xor
stos
pop
ljmp
out
mov
inc
sbb
xor
xchg
adc
mov
inc
sbb
push
sbb
pop
andb
mov
sbb
std
pop
mov
hlt
xor
or
test
push
lods
and
mov
mov
lods
out
mov
lret
inc
sub
addr16
dec
mov
in
out
xor
ds
sub
leave
mov
outsb
xor
icebp
in
inc
pop
inc
xchg
call
sub
fwait
clc
and
popf
jns
ret
dec
scas
cmp
push
ja
sub
sub
pop
jge
cwtl
and
jae
mov
movsl
mov
icebp
adc
xchg
xor
push
cmpsb
es
shr
cmp
dec
fidivs
cld
push
push
cmp
fneni(8087
js
shll
jbe
and
stc
or
sub
add
add
xchg
mov
mulb
js
add
inc
ds
adc
addb
or
outsl
inc
xchg
adc
lds
sbb
in
jb
inc
test
mulb
aad
outsl
dec
out
xchg
adc
mov
sbb
cmp
mov
data16
jno
in
mov
shrb
inc
notrack
mov
add
sarl
jmp
fdivl
push
inc
sub
imul
decb
aaa
or
sbb
sbb
pextrw
clc
inc
clc
jle
mov
xor
pusha
xor
or
scas
inc
into
and
movsb
add
sarl
pop
jge
inc
mov
push
xor
jmp
xor
movl
scas
mov
inc
or
pusha
and
outsl
popa
test
adc
je
ss
mov
out
push
pop
cwtl
add
push
push
pop
add
clc
adc
xchg
xlat
cmp
leave
dec
cs
rorb
or
jmp
and
cli
incb
loopne
pop
int3
mov
and
loop
aas
or
lods
insl
nop
dec
push
ds
inc
loop
push
adc
and
lock
shlb
add
xlat
stos
cs
and
mov
ret
sub
and
es
fs
cmc
mov
jae
sub
mov
push
das
sub
js
adc
jns
sbb
xchg
xor
test
or
or
hlt
js
and
insb
icebp
dec
or
lods
xor
sub
or
notb
and
stc
add
rol
jp
jo
adc
pop
call
outsb
mov
testl
int3
in
test
pop
mov
insb
mov
loop
test
push
bound
es
inc
or
mov
test
mov
inc
push
xchg
or
gs
push
dec
das
jl
add
ret
jo
sbb
jmp
xor
je
mov
lds
inc
addb
fs
pop
mov
leave
add
push
jno,pt
inc
dec
hlt
push
cmp
mov
imul
cmp
xor
addb
push
sbb
cmpsl
push
pop
xchg
shrl
add
jno
cmpb
sub
sbb
pop
jbe
pop
sbb
mov
xor
decl
sbb
fwait
into
mov
xorl
push
add
iret
xor
enter
cmpb
pop
push
sbb
fidivrs
ljmp
lock
loopne
xchg
push
and
ljmp
push
lret
cmp
dec
or
lods
push
loopne
sar
arpl
mov
mov
and
in
testb
mov
xlat
jbe
pop
fsubs
dec
fs
mull
inc
mov
pop
jb
imul
test
push
lret
mov
test
sbb
pop
out
cmc
aaa
fs
mov
iret
outsl
mov
inc
dec
les
outsb
fstpl
mov
daa
sti
inc
pop
dec
xchg
push
add
out
js
imulb
pop
dec
push
sti
pop
popf
pop
lea
mov
lcall
xor
mov
rolb
ret
lret
les
sahf
mov
add
adc
das
cmp
pop
dec
add
movsl
test
xchg
jno
and
sbb
inc
jnp
or
and
loop
cmpl
fiadds
dec
lock
out
dec
loop
cmc
adc
xor
mov
loope
push
add
dec
ret
push
dec
push
mov
test
inc
fwait
cli
sbb
pop
test
cs
sub
and
aaa
fdivrs
mov
push
mov
adc
dec
frstor
repnz
dec
insb
pop
jl
fwait
movsb
or
dec
out
fadds
add
lock
push
sbbb
pop
lods
shl
xorl
ss
lock
cli
pop
inc
insl
stos
push
rclb
clc
in
cs
cmp
dec
adc
out
push
addr16
mov
loope
clc
push
mov
pop
cltd
mov
fstpt
adc
push
push
inc
js
cwtl
insl
loop
jb
mov
aas
mov
nop
pop
push
mov
dec
xchg
dec
inc
in
cmpb
push
pop
and
lret
sub
nop
add
mov
and
xchg
je
test
xchg
pop
sub
or
add
lret
test
popf
decb
jp
stos
xchg
or
sbb
cmp
cmp
shrb
xor
mov
push
xlat
bound
pop
mov
arpl
cmp
xchg
xor
fmuls
test
fs
adc
jns
pushf
push
test
and
mov
mov
inc
mov
mov
inc
fmull
jg
popl
inc
cs
cmc
in
movsl
mov
icebp
jno
idiv
rcr
cmpsl
fimull
cli
inc
je
out
or
or
stos
dec
enter
pop
push
push
or
pop
dec
push
mov
fwait
cmp
das
sbb
or
dec
dec
inc
es
leave
inc
adc
cld
inc
dec
mov
dec
push
lret
jle
mov
and
pop
in
lock
xchg
es
test
loop
push
pop
shll
test
popa
fstpt
push
sub
xchg
pop
dec
xchg
cmp
aaa
into
or
jbe
lret
insl
mov
sbb
jl
or
daa
aad
fildll
rolb
movsl
js
aad
fwait
pop
mov
lock
mov
dec
jne
lods
out
scas
cmp
adc
push
daa
in
add
icebp
bound
mov
loopne
adc
mov
pop
ss
sub
aam
icebp
lret
ret
pop
xchg
and
or
test
adc
daa
pop
and
inc
sub
pop
cmp
lahf
mov
sbb
pop
int
lahf
mov
jp
sub
inc
or
int
dec
pop
stc
cmp
clc
enter
movsb
xchg
roll
mov
adc
lock
mov
js
test
clc
and
push
dec
push
dec
push
pusha
add
pop
fs
dec
and
insb
repnz
or
push
mov
push
sbb
mov
shr
and
je
outsl
add
test
scas
push
xor
ret
xchg
cmp
cmp
out
adc
jecxz
mov
mov
jbe
fdivr
add
push
cmpsb
add
mov
ljmp
or
sbb
stc
add
jg
cli
shl
imulb
shll
xchg
std
das
xlat
shrb
sub
push
outsl
inc
push
and
enter
mov
rol
add
cmp
mov
inc
adc
sbb
test
ja
cltd
xlat
mov
lods
jle
aas
add
add
mov
fs
mov
and
push
aad
sub
mov
pop
xor
xlat
daa
fsubl
jns
dec
popa
dec
gs
inc
push
jl
xchg
xor
xor
decl
hlt
add
jge
mov
ret
cmp
push
add
mov
gs
lahf
repz
sar
mov
pop
pusha
dec
push
and
movsl
and
or
fldenv
jno
mov
mov
cmpb
inc
adc
loop
ds
dec
andl
loope
sbb
lock
sub
mulb
ret
inc
jns
and
addb
push
jp
mov
add
popf
call
sbb
cs
xchg
xchg
lods
outsl
jp
adc
sbb
imul
xor
jo
adcb
ror
fwait
popa
sti
cmpsb
test
xchg
xchg
xlat
and
xor
popa
mov
rorb
add
dec
adc
neg
or
add
dec
inc
push
cmp
mov
ret
sti
sub
inc
add
xchg
inc
loope
scas
add
inc
dec
mov
idivl
fistl
lock
roll
add
loopne
adc
jo
dec
adc
xchg
pop
jmp
repnz
xor
fcmovne
into
adc
scas
ret
mov
inc
loope
lock
pushl
adc
adc
mov
push
jo
mov
ja
lock
sbb
lods
inc
dec
pop
into
outsb
loop
cmpsl
test
mov
mov
cld
rcr
xor
or
lods
inc
shlb
push
xor
sub
mov
jecxz
das
xchg
jns
sbb
jo
add
std
data16
rorb
bound
notl
cli
jb
sub
rolb
and
add
rolb
ja
cmp
int
sbb
stos
daa
push
stc
push
add
xor
into
loop
mov
ds
inc
cli
mov
js
dec
or
mov
xchg
sahf
repnz
or
push
or
push
call
cmpsb
sub
incl
or
inc
das
dec
repnz
cmpsl
push
dec
dec
cmp
xor
dec
push
psubb
dec
add
jecxz
lds
push
adc
push
jecxz
xchg
call
jp
mull
push
push
xor
cmp
adc
pop
add
divb
les
cmp
adc
sahf
cmp
add
repnz
push
daa
mov
add
inc
add
jno
mov
int
xor
xchg
std
jo
sbb
decl
loop
push
xchg
adc
inc
cwtl
dec
jp
pop
rcll
push
fs
loopne
adc
xlat
jmp
dec
lea
push
inc
xor
mov
out
enter
cwtl
nop
adc
fadds
mov
xchg
lcall
lahf
leave
sbb
xlat
sbb
mov
add
push
dec
jecxz
enter
pop
rcrb
sub
inc
out
sarl
inc
add
add
or
ret
rclb
shl
mov
mov
push
cld
mov
js
fwait
adc
aam
push
sub
test
imul
or
ret
xchg
jmp
and
pop
and
lods
scas
xor
push
push
mov
sbb
pop
xor
or
pop
xor
add
loope
out
mov
loope
add
ljmp
push
pop
add
mov
or
and
into
sbb
imul
outsl
ficomps
xchg
mov
and
nop
sbb
mov
shlb
sub
mov
jns
push
les
in
sarb
in
sbb
push
push
movsb
rolb
xchg
lods
cmp
ds
int3
mov
adc
hlt
repnz
fcoms
rolb
pop
jl
sub
mov
hlt
call
insb
fisttpl
std
jo
in
or
int
inc
or
mov
rorb
iret
shrl
xchg
repz
mov
push
push
sub
jmp
mov
hlt
je
mov
aaa
roll
ror
insb
jnp
xor
dec
loope
std
pop
out
add
sbb
xchg
xlat
dec
or
test
rcr
in
add
fisubs
in
and
scas
pop
mov
lods
out
sub
mov
inc
inc
je
dec
hlt
rcl
cli
sub
mov
push
mov
inc
mov
mov
xlat
dec
fstps
js
cld
push
lock
adc
dec
js
sbb
mov
cld
ret
mov
fdivl
add
fmull
ret
sbb
mov
stc
jo
jecxz
data16
sub
mov
jp
push
add
out
fimuls
mov
fwait
mov
sub
imul
and
cli
xor
mov
add
inc
in
add
loopne
push
xchg
leave
repnz
mov
lock
xor
mov
pop
lret
xchg
mov
add
stc
adc
add
cmpsl
mov
stos
sbb
test
mov
sbb
arpl
sbb
popf
mov
cli
das
push
daa
dec
test
test
mov
jg
ret
mov
adc
outsl
pop
fstps
push
xchg
pusha
loope
xchg
cli
cmp
shlb
push
sbb
or
mov
roll
iret
lds
scas
ja
das
popf
cmpsb
mov
add
aad
test
push
nop
mov
adc
sub
gs
js
rcrb
xchg
pop
mov
and
pop
int3
mov
scas
push
stos
xchg
pushf
inc
xorb
test
push
pop
ljmp
and
movsl
mov
lock
dec
add
gs
mov
lods
rcll
in
sub
xor
nop
lret
inc
cmp
pop
xor
inc
xor
fimull
jmp
fwait
inc
fcoms
xchg
enter
data16
mov
outsb
pop
push
mov
insb
add
clc
sarb
sahf
jo
xchg
es
mov
loopne
push
movsb
out
xchg
loope
sbb
loop
adc
sarb
roll
adc
ljmp
sub
ret
imul
add
loop
in
andl
cmp
cwtl
fsubl
xchg
inc
dec
xchg
jbe
cli
mov
adc
add
or
inc
push
in
in
mov
movb
add
loopne
mov
push
push
ret
std
mov
sub
mov
and
push
pusha
out
jae
and
cwtl
adc
test
add
mov
adcb
adc
outsb
sub
dec
scas
je
les
popa
sbb
popa
daa
decb
and
sbb
loopne
lea
or
call
icebp
je
loop
or
or
mov
dec
pop
cmc
inc
test
in
jbe
aaa
cmp
movsb
xor
dec
mov
sbb
lcall
push
mov
jne
push
iret
and
lds
stos
xchg
jle
mov
lock
pop
xchg
xchg
mov
inc
jg
sahf
and
sub
inc
push
and
outsl
sub
shlb
stos
sbb
push
and
out
ljmp
cli
or
jle
nop
xlat
ljmp
push
inc
or
add
add
push
sub
sub
mov
insb
mov
outsb
cmp
adc
pop
clc
push
mov
add
jle
push
movsb
jo
mov
mov
pushf
lcall
inc
iret
sub
insl
inc
fldl
jl
cmp
inc
imul
jecxz
fistps
sub
and
xchg
sti
sahf
leave
or
rcr
mov
xor
lods
inc
xchg
jns
jo
ret
cs
ficomps
xor
lods
mov
iret
xor
mov
ljmp
xchg
in
loope
lock
inc
dec
and
inc
imul
ds
fstp
jp
loop
in
dec
movsl
rclb
hlt
and
add
sbb
dec
std
sbb
movsb
cld
pushw
xlat
add
inc
nop
fldcw
lock
xor
jecxz
xchg
in
clc
xor
mov
inc
stos
xchg
push
sbb
pop
dec
mov
lock
mov
pop
clc
bound
aas
insb
andl
aaa
push
dec
add
fsubl
or
jg
pop
or
and
ss
movsb
cmp
jle
scas
push
pop
mov
push
add
decl
mov
jl
and
ss
fcompl
fildll
lock
add
jecxz
cs
pop
cli
dec
pop
mov
loop
cmp
and
push
cli
mov
cld
xchg
test
xchg
mov
inc
jg
jp
dec
ret
aam
push
mov
sbb
cmp
dec
or
insb
pushf
pop
sub
cli
sti
or
das
jl
andb
or
add
jge
test
leave
in
jo
lock
rcr
clc
shr
and
mov
hlt
out
push
push
jl
incl
clc
pop
dec
pop
mov
shrl
mov
jecxz
jo
pop
sbb
loopne
mov
inc
mov
addr16
inc
cmp
and
popa
aam
enter
mov
and
addr16
orl
fstl
orl
mov
pop
test
adc
jmp
add
push
pop
push
imul
rcrb
pop
mov
in
in
mov
or
fsubl
sar
mov
pushf
es
xor
aaa
mov
mov
subb
repnz
push
cmpsl
add
or
cmpsb
jae
adc
cmp
insb
jp
cwtl
out
in
loopne
pop
out
jmp
loop
loop
xchg
test
nop
or
cld
jb
lea
arpl
mov
mov
inc
xchg
push
push
mov
xor
stos
mov
lods
jl
cmpl
mov
jle
inc
pushf
ss
cmpl
mov
inc
ljmp
mov
mov
popa
add
imulb
mov
push
pop
clc
and
je
adc
insl
out
sbb
subb
out
test
fisubrl
xchg
push
add
mov
iret
adc
pusha
pop
daa
call
add
pop
shlb
inc
clc
adc
das
add
cwtl
test
mov
int
jo
sbb
lods
test
pop
nop
and
fcmovne
or
stc
outsl
add
insb
cmpsl
insl
mov
call
mov
mov
sub
dec
cmp
ficomps
ds
jbe
pusha
inc
xor
leave
add
lock
adc
or
jbe
and
add
lret
cli
pop
jbe
xor
inc
xor
inc
cmp
jb
insl
inc
mov
rorl
sbb
sbbb
dec
pop
push
mov
or
and
ds
pop
mov
mov
mov
in
add
test
push
push
mov
xchg
in
divl
mov
push
cs
push
inc
jmp
test
cmp
mov
pushf
sbb
mov
xor
sbb
sti
bound
pusha
cmp
cmc
dec
push
popa
dec
insb
xchg
shr
repz
lods
stos
xor
jmp
jmp
xchg
test
int3
clc
incl
sbb
into
dec
in
mov
popf
xchg
enter
mov
stos
push
cwtl
negb
out
inc
adc
and
aas
sbb
or
cmc
fistps
push
mov
add
lods
test
lds
add
mov
cld
fidivs
push
rcrb
add
cmpsl
jg
ss
jp
lock
jne
loope
test
adc
xor
rorb
js
jb
test
push
push
sub
lcall
mov
mov
mov
jp
nop
cmc
jle
mov
pop
popa
imul
cmc
add
inc
lods
test
and
dec
mov
adc
cmp
iret
out
push
add
xor
pop
aas
cli
jmp
xchg
ss
dec
pop
rorl
outsb
xor
xchg
into
aas
cmp
imul
inc
scas
movsb
push
hlt
shrl
adc
fidivl
fwait
mov
data16
or
and
or
loop
pop
pop
data16
addb
aaa
lahf
test
ss
xchg
orb
test
push
pushf
loop
aaa
or
add
xlat
jns
pusha
pop
les
add
in
push
insl
sub
lods
or
dec
pop
std
pop
sbb
add
xchg
out
movsb
dec
cmp
or
cmc
cmpsl
test
nop
mov
scas
andl
sbb
mov
fists
sub
pop
dec
push
sub
pusha
sar
addb
clc
mov
lds
mov
or
dec
stc
add
or
popa
dec
dec
add
mov
cmpsl
and
aam
lret
mov
pop
rol
cmp
rclb
and
ret
jg
inc
jge
push
and
push
jge
pop
sub
dec
fwait
cld
add
dec
sbb
loop
lock
mov
push
inc
loopne
cmpsl
lds
lock
or
jp
mov
cmc
ret
aas
jb
push
fwait
inc
imul
test
add
dec
loopne
cs
mov
adc
and
inc
mov
rcr
adc
rorb
xchg
and
mov
mov
inc
or
ret
mov
stos
cmp
adc
xchg
and
mov
mov
ja
pop
push
in
dec
pop
push
inc
push
and
mov
add
call
sbbb
mov
xchg
pop
les
xchg
add
aam
cmc
pop
enter
aas
std
ret
insl
mov
test
test
dec
scas
orl
and
mov
xchg
add
fcoml
sbbb
loop
hlt
les
pusha
mov
mov
mov
lock
inc
enter
fnstenv
cmp
jo
dec
adc
into
or
enter
iret
pop
mov
adc
ljmp
out
gs
xchg
ss
test
shrl
mov
dec
sar
xor
add
or
inc
jp
jne
mov
ret
ja
fistps
aad
rol
cmpsb
enter
cmc
scas
push
adc
aas
xchg
pushf
fldl
xchg
xchg
xchg
pop
inc
fcmovb
xchg
mov
or
or
xchg
shll
or
push
sbb
pushl
sub
das
sub
inc
shll
clc
pop
add
fadds
ljmp
add
and
es
and
loopne
dec
push
dec
shr
out
pop
jle
decb
mov
or
jle
pop
scas
xor
clc
xor
push
insb
adc
fsubs
lcall
aas
hlt
sbb
cmc
and
sbb
dec
enter
movsl
orl
ja
jp
dec
add
scas
pop
add
push
sub
pop
fs
xchg
ret
jl
push
push
mov
or
jge
ljmp
inc
inc
sbb
nop
mov
scas
push
sahf
andl
jno
scas
cs
cmc
outsl
push
mov
ret
sbbl
pop
push
push
cmpsl
lret
adc
popf
xchg
out
jmp
clc
jnp
mov
inc
cmp
adc
and
out
jp
icebp
call
cli
cmpsb
sbb
xchg
jns
xchg
sahf
mov
outsl
sub
jo
bsf
adc
add
lods
inc
mov
testb
xchg
inc
and
lea
mov
nop
lret
orb
ss
ljmp
mov
and
shlb
shrb
shrb
inc
fsubl
outsl
out
imulb
lock
xchg
or
arpl
mov
mov
xor
test
or
scas
and
inc
mov
xor
das
mov
push
in
fidivrl
xchg
jmp
stc
sbb
pop
inc
loope
shl
pop
xchg
gs
test
loopne
adcb
arpl
mov
mov
pop
mov
decl
inc
dec
mov
sub
cmpsb
pop
cmp
cld
sub
pushf
je
or
test
mov
shll
and
dec
or
mov
xor
insl
test
fistps
inc
sbb
icebp
lret
clc
loop
inc
les
daa
cmpsb
pop
daa
mov
or
xchg
or
push
or
push
pop
cld
mov
inc
add
shll
decb
dec
push
and
das
in
xchg
inc
jle,pt
or
shll
pop
sub
test
adc
push
cmpps
sbb
sub
pop
jae
inc
pop
and
add
cmp
cmp
pop
or
repz
mov
shlb
jb
pop
push
sbb
iret
pushf
mov
sbb
cs
out
xor
stc
sub
call
mov
ja
lds
xlat
mov
out
or
stos
shr
cwtl
pop
aaa
cld
sub
add
pop
sub
adc
ficoml
es
out
dec
loopne
ficoms
xchg
adc
and
adc
or
sar
mov
addr16
into
hlt
adc
inc
xor
rorl
adc
insb
test
fildll
push
cld
test
popf
fiaddl
loop
pop
mov
adc
jecxz
push
cwtl
jns
sbb
dec
imul
push
inc
inc
aam
pop
ret
dec
sub
lahf
pusha
scas
add
or
lods
jg
movsb
mov
cwtl
mov
mov
pop
js
lock
sub
jle
repnz
mov
dec
sbb
movsl
mov
lea
jmp
jo
sub
pop
lock
jne
mov
fsubs
nop
arpl
icebp
add
lea
pop
sub
scas
add
or
ficomps
and
rolb
inc
inc
pop
insb
push
lods
mov
mov
fcoms
scas
cmp
pop
add
adc
lea
mov
lods
pushf
and
mov
sub
xchg
mov
stc
lahf
sub
pop
iret
jl
lahf
into
fdivrl
xor
out
inc
push
pop
std
jmp
cmp
jo
mov
cmp
mov
mov
push
loopne
jp
fdivrs
lahf
inc
xlat
hlt
hlt
inc
stos
loopne
push
xor
pop
pop
nop
or
lods
jp
fiadds
fs
outsb
into
mov
mov
sbb
dec
mov
dec
popl
ficoml
mov
pop
mov
inc
cltd
mov
cmp
outsl
imul
shlb
push
push
push
shll
inc
popl
adc
loope
mov
pop
push
ret
bound
inc
stc
aaa
clc
dec
dec
xlat
into
mov
and
jg
movsb
dec
lahf
subl
push
cli
imul
out
fidivrs
jle
ret
loope
icebp
and
sub
sub
popf
ja
adc
pop
test
adc
sub
jl
mov
push
xchg
sbb
sbb
mov
lods
daa
push
loope
dec
inc
testl
push
xchg
mov
sub
and
call
push
mov
shl
movsb
and
movsb
and
sarb
sarl
jg
jp
jge
fildl
ret
pop
jecxz
fidivrs
vfrczpd
cli
push
repnz
iret
shlb
push
xlat
call
in
dec
pop
in
xchg
xlat
mov
pop
aaa
push
popf
inc
leave
push
xchg
or
adc
push
xchg
fisubrs
inc
ret
loopne
dec
sub
mov
inc
and
aaa
mov
adc
mov
les
mov
mov
imul
inc
xor
jge
mov
sti
cld
mov
std
stos
xchg
inc
xchg
fdivl
inc
loopne
push
jp
fbld
mov
in
aas
test
daa
daa
pushf
pop
mov
out
mov
push
push
add
mov
mov
adc
int3
pop
loop
js
mov
insl
cmpsb
or
mov
ret
push
and
in
cli
ja
mov
dec
popf
bound
jae
fcomip
inc
lods
and
mov
add
push
mov
outsl
mov
jl
cmp
popa
fs
mov
mov
inc
jae
mov
or
push
or
rorl
adc
mov
clc
outsl
rcrl
cmp
mov
pop
inc
rol
jg
outsb
ss
pushf
popa
subb
mov
inc
push
add
pop
dec
hlt
mov
push
sbb
call
push
mov
mov
loopne
push
adc
fwait
dec
add
outsl
idiv
or
dec
lock
addr16
shl
jp
add
mov
jl
call
std
stos
std
hlt
push
repnz
loopne
xor
bound
add
aas
push
shrl
add
dec
push
add
ss
js
jmp
jo
popa
add
loop
add
jl
test
push
jmp
jo
mov
adc
rep
xchg
pusha
lock
ficomps
sub
sbb
cmp
ss
movsb
jl
jo
js
mov
fildll
sbb
mov
sbb
push
pusha
popl
incl
stos
rcrb
shrb
fstl
xor
mov
add
dec
push
inc
inc
fcomip
in
dec
fnop
dec
xchg
adc
insb
mov
fucomp
orl
and
xchg
outsb
jle
push
mov
pop
or
push
clc
or
and
enter
subl
jle
sub
xchg
xor
xchg
scas
pop
mov
cmp
fldenv
roll
imul
sbb
pushf
mov
jo
jnp
lods
repz
mov
fnstenv
scas
pop
sbb
in
pop
cmp
movsb
add
dec
daa
and
lret
insb
push
inc
fwait
repnz
test
push
or
xchg
pusha
mov
das
psubd
sbb
adc
add
ret
push
jge
cmp
push
aas
adc
icebp
clc
movsb
clc
cmpsb
sahf
jge
popf
insl
aas
jno
rol
sbb
mov
inc
jp
pop
aas
lret
test
jno
ja
fiaddl
xor
xor
loopne
movaps
xchg
icebp
xor
daa
in
push
imul
pop
bound
or
imul
outsb
and
push
adc
call
insl
es
or
lret
jmp
scas
movsb
cli
pop
and
outsl
inc
mov
int3
movsb
mov
inc
insb
inc
mov
idivb
lock
add
jecxz
sbb
repz
aad
adc
inc
jl
mov
aad
cmp
cmp
fcomip
or
xchg
mov
out
in
jmp
and
inc
mov
push
popa
add
sbb
add
aaa
sub
dec
mov
fsubl
cwtl
jns
or
add
int
mov
cmpsl
jne
mov
notb
lock
adc
addl
push
cmp
cmpsb
adc
das
js
xor
stc
mov
leave
jbe
push
inc
sbb
and
mov
push
and
and
inc
mov
xor
mov
es
sbb
adc
std
or
ljmp
into
or
dec
ficompl
daa
fisubrs
and
aad
cld
adc
scas
or
mov
mov
std
shrb
pop
pop
movsl
out
mov
loopne
and
xlat
add
cmp
and
dec
rclb
dec
outsl
fadds
int
js
sahf
orl
lcall
jecxz
jg
push
mov
mov
jo
mov
mov
xchg
cmc
add
mov
inc
inc
ja
sub
sub
push
push
push
insl
repnz
ss
lret
mov
cmp
cmp
cmp
cmp
xlat
aaa
jne
fmul
out
or
xchg
push
shl
aaa
and
mov
inc
xchg
or
orl
push
dec
mov
pop
shl
lcall
testl
push
aad
jl
cld
outsb
lret
add
clc
adc
jbe
int
push
sub
insl
sbb
fistpl
repnz
push
push
add
and
cld
cmpsb
mov
inc
popf
and
push
cld
sub
int3
inc
iret
cmpsb
bound
push
sbb
xlat
sbb
jb
lahf
hlt
ficompl
cmp
adc
mov
aaa
fcmovnb
pop
fcoml
and
cmp
sbb
das
mov
sarl
lret
movsb
fwait
mov
sbb
sarb
sahf
insl
int
fucom
push
lock
fmull
add
mov
sub
xor
dec
pop
leave
pop
add
mov
fadds
into
inc
add
sub
pop
inc
xchg
loop
movsb
adc
mov
ljmp
xchg
fwait
or
cs
pop
and
or
mov
add
cltd
clc
pop
sub
sbb
rcrb
or
xchg
xlat
aaa
push
repnz
or
in
ljmp
popf
bound
add
xorl
rorl
pop
inc
dec
inc
iret
jp
push
sub
push
addr16
or
and
pop
pop
fcoms
divb
xchg
push
jg
xchg
mov
xchg
sbb
je
cmp
fnsave
into
add
push
pop
and
xor
or
mov
add
push
jno
add
ror
jne
js
insb
loopne
mov
ja
jbe
inc
loop
pop
pushf
in
bound
bound
movl
and
cmp
imul
sbb
push
mov
pop
mov
ret
mov
jp
fs
jo
jle
push
out
sbb
es
xchg
arpl
notb
fmulp
and
and
mov
sub
js
outsb
mov
inc
jle
movsb
les
nop
lcall
dec
gs
or
cmp
inc
inc
cmp
int
mov
nop
aaa
add
lea
data16
adc
mov
xadd
adc
in
test
bound
push
aam
inc
movsb
mov
and
push
cmp
sub
push
mov
je
push
sub
dec
jne
mov
movsl
adc
addl
jl
lcall
inc
je
add
sub
push
and
jecxz
clc
test
cwtl
hlt
push
mov
jp
jo
and
mov
fisubrl
sahf
push
loop
xor
inc
pusha
push
xchg
dec
jl
cmpl
mov
cmp
mov
lsl
lock
outsl
arpl
xor
pop
lock
dec
inc
adcl
add
or
ret
arpl
mov
add
cmp
loopne,pt
sahf
xchg
mov
add
out
adc
nop
rorl
cld
mov
cli
add
and
aas
sub
jne
mov
inc
ret
enter
mov
test
movsb
cli
lock
out
out
movsb
lret
shr
mov
icebp
inc
cmp
or
cltd
cs
rorl
mov
push
aas
add
icebp
out
mov
filds
nop
fs
sbb
sahf
clc
pop
cli
aam
mov
mov
fisttps
sub
iret
shll
sbb
fnsave
sbb
imul
add
filds
cmp
sbb
clc
cmp
icebp
jb
gs
js
bound
xchg
cmp
pop
inc
in
pusha
fs
andl
jo
jns
mov
mov
int
ret
mov
je
push
push
je
and
aad
loope
test
cli
dec
rcll
push
sbb
lds
add
addl
and
out
int
cmp
or
mov
hlt
aaa
push
testw
lret
ds
xlat
movsb
imul
jo
push
mov
pushf
sub
ja
andb
xchg
cltd
mov
push
lds
xor
sbb
fstps
pop
ss
dec
xor
or
cmp
inc
mov
inc
call
out
enter
jecxz
mov
push
adcl
or
mov
xchg
xchg
push
rol
jle
mov
pop
sub
fisttps
dec
je
sti
xor
cmpsl
movsb
inc
fsubl
pop
lret
dec
cld
arpl
addr16
mov
out
and
divb
inc
mov
fdivl
lea
leave
inc
sbb
adc
adcb
adc
jmp
clc
fadds
ljmp
add
mov
mov
mov
or
jbe
sub
sbb
xor
or
xor
clc
push
mov
nop
jns
cs
mov
or
add
lret
sub
dec
invd
dec
nop
ss
inc
ret
push
call
sub
sbb
outsl
test
inc
jg
dec
lahf
ljmp
jp
mov
insb
enter
add
pop
mov
shr
test
adc
fisubs
loope
ret
push
out
addr16
dec
dec
dec
mov
popa
push
adc
ljmp
fstp
add
mov
mov
cmpsb
insb
jmp
enter
add
mov
mov
jno
jo
push
mov
sub
pop
popa
outsb
scas
scas
test
inc
aas
pusha
pop
mov
xor
arpl
push
out
and
adc
pusha
sbb
pop
xchg
decl
hlt
add
adc
push
and
dec
out
adc
jecxz
sarl
push
jecxz
sub
pop
pop
and
sti
out
jne
mov
test
jl
adc
stc
jecxz
add
out
add
incb
or
lods
mov
call
lcall
shrl
add
add
xor
xchg
lock
jmp
sub
into
rolb
call
push
xor
bound
and
lods
xor
sti
sbb
and
mov
add
xchg
mov
fsubs
cmpsb
xor
push
sbb
imul
dec
sahf
aam
loope
test
mov
stos
pop
pop
add
lcall
mov
hlt
test
dec
orl
repnz
lods
lcall
jle
push
cmp
mov
aas
jne
cmp
test
and
loop
jg
icebp
inc
fs
enter
ror
pop
call
fwait
add
mov
xchg
fucompp
or
nop
popf
add
jo
dec
cmp
popf
lods
push
adc
push
fwait
mov
pop
das
mov
popa
or
sbb
xchg
fisubl
dec
repnz
test
mov
xchg
aad
pop
js
cmpsb
dec
fcoml
in
cltd
dec
insb
pop
jl
cmpsb
mov
push
inc
mov
xchg
insl
icebp
inc
fsubl
insl
sbbb
push
psubq
adc
cmpsb
xor
xchg
sbb
inc
aas
clc
lods
jle
inc
insb
adc
sbb
jmp
adc
stos
ds
add
pop
ljmp
bound
sbb
jb
fists
jp
adc
movsl
and
push
stos
aaa
jge
insl
test
imul
jp
fwait
repz
mov
imul
lahf
and
mov
and
sub
add
iret
sbb
fbld
jo
mov
js
ret
pop
xchg
and
outsl
in
shl
sbb
notb
or
cs
ud2
out
loop
dec
inc
scas
loop
orb
mov
or
ss
loop
mov
jnp
jne
sar
push
fs
pop
push
jl
and
jns
mov
insl
repnz
adc
dec
movsl
jge
mov
loopne
sub
cmc
mov
test
je
cs
pop
mov
lock
pusha
push
sbb
sub
cld
ficomps
mov
xor
fdiv
cmp
add
inc
test
and
ja
and
pop
pop
int
jb
push
iret
ret
pop
adc
xchg
jecxz
add
dec
adc
push
test
xchg
ja
xchg
rol
cwtl
inc
mov
jb
xchg
cld
add
mov
mov
out
fstl
test
ds
test
aas
mov
dec
add
hlt
add
mov
loopne
push
fs
dec
test
push
lret
fidivrl
and
lret
adc
pop
jecxz
mov
es
mov
pop
movl
mov
push
mov
jne
enter
in
loop
out
add
ret
ret
cs
xor
and
and
nop
push
mov
popa
inc
jne
int3
mov
mov
jo
cli
and
and
lock
push
jns
inc
or
lcall
rcrb
inc
push
pop
bound
ljmp
enter
xor
sbb
inc
test
insl
sbb
jo
das
sahf
push
ss
mov
ljmp
pushf
add
not
mov
sbb
stc
mov
into
mov
mov
test
inc
ja
mov
jo
jle
fisttpll
aaa
push
mov
push
scas
sub
pop
pop
int3
and
sub
or
test
cmp
pushl
xchg
icebp
test
jmp
loopne
or
mov
inc
push
cwtl
andb
dec
push
add
xor
push
xchg
in
adc
or
adc
push
jns
dec
push
cld
sub
or
loopne
and
je
mov
loop
leave
sbb
push
outsl
mov
jo
inc
out
mov
adc
div
lahf
dec
loop
cmp
adc
push
lcall
inc
mov
and
mov
bound
and
rclb
or
test
ret
sub
movsl
movl
add
mov
idivb
pop
jno
dec
inc
jnp
lahf
data16
shll
incl
sahf
into
dec
xor
sub
test
data16
outsb
inc
or
pop
mov
or
cmc
icebp
pop
loopne
xchg
test
fidivs
jge
les
jle
frstor
adc
mov
testl
jl
or
push
mov
mov
popf
nop
inc
ret
aam
push
adc
add
sub
lds
scas
sub
je
fstps
pop
and
cmp
xchg
in
mov
xchg
and
mov
ret
mov
or
iret
mov
stos
jmp
js
data16
and
add
pop
stos
test
mov
jmp
and
pop
pop
cs
sub
and
mov
aaa
or
mov
jns,pt
lret
mov
mov
loope
popa
cmp
cmpl
jne
cmp
xor
loop
andnps
xchg
cmpsl
and
pop
sbb
pop
xchg
jno
add
scas
mov
xor
inc
inc
ss
xor
sub
inc
lea
rclb
pop
mov
sub
bound
sub
sbbb
mov
sbb
adc
gs
clc
std
mov
mov
and
cmp
jp
lcall
test
jo
sahf
lods
fmull
pop
fcompl
mov
add
sbb
std
adc
scas
dec
dec
ret
hlt
dec
pop
sub
xor
pop
addl
mov
fs
cmc
and
aaa
add
in
sbb
sbbl
xchg
mov
out
shrl
sbb
enter
xchg
inc
cwtl
xor
cmp
jp
movlps
sub
subb
sahf
cmpsb
imul
pop
sub
push
cwtl
or
js
pushf
or
cmpsb
lock
xchg
and
add
sub
enter
cmp
xor
xor
or
lahf
xor
cmp
pop
cmp
movsl
push
movq
les
pop
sbb
sbb
inc
das
bound
hlt
mov
mov
ret
data16
test
jl
daa
pop
jp
pusha
rclb
rclb
inc
fisubl
ja
sbb
stc
add
push
or
ret
jge
jb
lea
cmp
push
je
sbb
scas
inc
mov
mov
push
int3
dec
pop
xor
lds
ss
xor
xor
test
push
pop
pop
mov
jp
push
hlt
ret
xchg
shlb
xor
xchg
and
or
pop
fadd
andb
add
sub
cmp
mov
fwait
mov
leave
xor
add
out
jno
shrl
mov
outsl
or
or
inc
sub
sarb
dec
pminsw
in
pop
hlt
inc
cmpsl
das
pop
mov
pushf
add
xchg
and
clc
jmp
lret
lock
mov
jg
leave
jg
movsb
std
jo
push
jnp
mov
clc
lea
push
sub
incb
pop
daa
push
or
ds
mov
aas
dec
pop
dec
mov
inc
notl
std
lock
mov
popa
inc
pushf
mov
aad
clc
sbb
loopne
je
jmp
mov
and
fisubl
cld
cmp
adc
xchg
mov
mov
loope
inc
shlb
add
shl
mov
jl
ja
inc
jmp
adc
je
into
rclb
inc
push
sub
add
and
jg
mov
sub
dec
arpl
mov
sub
jno
xchg
fdivrp
sub
jb
push
rorl
dec
push
lret
stos
pop
push
push
xchg
test
pop
jg
out
out
adc
dec
test
xlat
and
test
pusha
adc
cld
xchg
push
jae
mov
push
push
xchg
or
dec
mov
aam
mov
sbb
jl
xchg
lahf
rclb
sbb
faddl
je
insb
scas
jl
mov
cmc
mov
sahf
es
lcall
xor
gs
xor
mov
test
fbld
xchg
lea
dec
cld
lock
mov
xor
jl
jl
sub
jp
or
dec
mov
mov
jbe
pop
les
dec
test
push
adc
ds
sbb
cmp
mov
push
scas
loopne
jg
jmp
add
xor
scas
shlb
xor
mov
mov
add
fisubrl
and
aam
sbb
imul
sarb
jne
jno
sti
loopne
fildl
repnz
mov
push
and
movsb
mov
insb
cvtdq2ps
mov
out
adc
or
scas
dec
shrl
in
scas
sarl
ds
jnp
ljmp
jmp
mov
sub
out
inc
mov
inc
psadbw
clc
sub
jge
fdivrl
push
push
cld
iret
xchg
movsb
int
mov
mov
movsl
shl
jmp
cwtl
lds
sbb
push
cmpsl
lret
loope
repnz
enter
pop
lcall
pop
bound
mov
inc
mov
or
rolb
add
xchg
decb
jg
dec
pop
jg
sub
mov
xor
sbb
sub
adc
push
mov
add
add
je
cmp
cmpsb
jae
js
inc
outsb
out
push
loop
mov
push
cwtl
setp
rcrb
popa
add
addb
pop
aam
push
add
mov
test
inc
ret
notl
adc
inc
jae
lcall
repnz
lods
mov
xor
mov
jno
mov
or
out
mov
fimull
xchg
orb
sbb
mov
push
test
insl
lds
cwtl
orl
cld
cli
aam
in
add
cmp
inc
pop
lea
sbb
jg
test
inc
lods
and
or
xchg
sbb
jl
fdivr
call
imulb
mov
cltd
mov
cmp
inc
xchg
dec
arpl
rol
mov
lret
aad
push
mov
adc
loope
clc
lret
rclb
addl
push
fstps
xor
pop
sbb
sub
nop
jl
push
add
enter
sbb
shll
or
movsb
out
and
in
repz
aas
and
daa
mov
sub
movsb
xor
sub
xchg
xchg
loope
fsub
adc
out
icebp
inc
lock
aam
popa
lahf
sub
push
add
cmp
pop
fistpll
loop
clc
lret
xor
mov
or
mov
jmp
int3
sbb
or
int3
xchg
cli
xchg
subb
push
mov
push
or
ret
cld
pop
lret
mov
mov
xor
adc
adc
inc
push
cs
sbb
scas
or
lahf
and
mov
repnz
daa
les
mov
fdivl
jle
jae
daa
in
jp
ljmp
pop
push
outsb
call
pop
cltd
push
inc
and
mov
add
sbb
push
in
pop
out
jg
jle
sbb
into
mov
lahf
lock
cltd
insb
cwtl
or
rcrl
lcall
or
adc
mov
pop
jb
ds
sub
sbb
ljmp
sub
clc
mov
xchg
mov
cld
push
inc
jecxz
addr16
fcmovnb
dec
shrb
inc
pop
mov
jl
orb
ret
mov
shrl
mov
pushl
cmp
pop
and
ret
jo
fucomp
xor
lods
sbb
divl
xchg
push
sbb
fdivrs
mov
mov
loop
call
subl
mov
xor
fs
add
mov
dec
add
adcl
xchg
pop
pop
lods
popf
mov
jae
jecxz
push
xor
push
aam
lret
xchg
sbb
sub
cs
pop
aas
add
into
cld
les
push
mov
in
push
int
mov
mov
sbbb
jno
cmpsl
scas
cltd
sub
in
popa
push
scas
jo
push
clc
sbb
and
sub
cmp
jbe
std
or
jo
jle
push
leave
add
pushf
lock
dec
pop
mov
pop
jg
divb
push
adcb
mov
inc
jb
pop
fdivrs
roll
dec
inc
add
clc
popl
jg
jne
enter
mov
inc
adcb
add
dec
clc
adc
jmp
xor
adc
push
shl
test
mov
incb
sub
cli
sbb
aaa
out
adc
sahf
mov
sahf
call
jno
insb
sbb
push
mov
pop
movsb
push
jmp
call
mov
add
inc
sbb
jle
cmp
fnsave
inc
sub
outsl
scas
mov
in
dec
mov
mov
in
inc
or
cmpsl
lock
mov
rorl
std
cli
mov
mov
cmp
push
inc
lret
leave
pop
iret
fs
iret
cmp
test
pusha
rol
pop
sub
nop
xor
incb
lcall
mov
cmp
call
sub
incl
cli
icebp
inc
or
xchg
aam
xor
inc
jmp
push
cmpsl
ja
sbb
fdivrl
add
pusha
mov
out
into
fisubrs
outsb
arpl
psubsw
rolb
mov
in
lock
push
dec
in
into
call
popa
repz
shl
adc
test
decb
push
push
mov
ja
adc
xor
mov
insb
test
xorb
lea
fwait
aas
out
xor
add
and
sub
mov
in
cmpsb
pop
and
or
fdivs
inc
pop
adc
pop
dec
ret
loope
push
xchg
jb
mov
sub
and
sbb
loop
mov
loopne
add
mov
and
add
xchg
inc
int
mov
pop
xchg
jb
stos
sub
cmc
adc
push
jo
adc
jns
fabs
jne
es
or
sub
lret
fdivl
dec
test
dec
ljmp
loopew
pop
xlat
xor
aad
movsb
testl
cmp
add
dec
add
aas
sbb
adc
andl
fistpl
decl
sbb
mov
movsb
negb
lds
sti
jmp
int
cmpb
xor
fstp
stos
sbb
or
fadds
loop
xchg
mov
cli
and
clc
push
xor
and
pop
jle
pop
cld
daa
dec
in
pop
add
push
ja
jl
pop
xlat
daa
push
push
pop
es
xchg
add
inc
das
pop
cltd
cmp
mov
push
nop
mov
add
push
push
or
jg
add
xchg
stos
mov
jbe
iret
add
mov
cmp
sbb
sbb
test
aas
std
fs
pop
add
enter
add
lahf
dec
fnstenv
mov
adc
test
testb
cmp
sahf
aaa
out
sti
xor
icebp
sub
popa
pop
push
and
loopne
cmp
add
cwtl
jecxz
in
test
lods
ret
mov
idiv
and
mov
sbb
lcall
outsb
arpl
xchg
ljmp
sbb
leave
and
adc
xor
mov
jp
fisttps
daa
insb
sub
cld
or
jl
outsl
pop
lea
inc
clc
shrb
and
inc
test
xchg
pop
and
cmovg
cmp
daa
scas
outsb
stc
pop
cmp
adc
call
cltd
push
mov
imul
mov
pop
or
es
mov
outsb
jbe
hlt
mov
movsb
leave
imul
pop
lret
xchg
and
pop
mov
fistpll
lds
ljmp
push
rcrb
sub
sub
das
sub
loopne
sub
push
pop
test
fcomps
push
ljmp
dec
fisubl
ret
push
repz
adc
shr
popa
and
mov
scas
clc
lods
stos
jecxz
sbb
jp
xchg
hlt
int3
mov
jg
inc
jns
stos
dec
fcoms
je
lds
mov
fsts
dec
adc
lock
mov
cmp
sti
mov
mov
xlat
mov
in
dec
cld
or
clc
rcr
stos
fwait
xor
pop
xchg
hlt
test
loopne
dec
fdivl
insb
inc
cmpsb
add
mov
lock
cmp
mov
insb
mov
jb
cmp
rcll
sub
das
lds
add
xor
mov
les
add
clc
std
xchg
and
push
jge
and
cmp
push
adc
inc
cmc
aas
inc
mov
in
jnp
sub
xor
adc
push
sbb
xor
adc
out
pop
mov
push
outsb
jl
je
adc
or
repnz
loop
scas
rcrb
into
pop
ret
stc
push
stos
sti
mov
xlat
mov
push
mov
test
mov
cmp
loopne
sub
mov
pusha
adc
push
add
or
inc
cld
rcrl
jle
mov
add
rorl
inc
inc
pop
push
adc
loopne
cld
repnz
add
leave
lea
call
loopne
ret
psubb
out
subb
lret
in
test
out
js
dec
sub
and
cmp
jo
xchg
push
imul
dec
pop
std
push
movsb
push
and
arpl
pop
rsqrtps
jne
mov
inc
fisubl
or
lods
mov
int
out
pop
jl
or
sbb
cmpb
xchg
push
in
and
out
lds
push
sub
shrb
insb
push
clc
sub
cmpb
xchg
mov
adc
cmp
lret
les
cmc
ds
scas
inc
mov
andb
addl
les
push
lock
bnd
fmuls
cli
enter
xor
mov
pop
aas
add
xchg
lret
mov
bnd
pop
xchg
mov
loop
inc
test
adc
roll
shl
or
jmp
mov
rcl
inc
add
mov
sti
data16
add
out
ja
cmpb
outsl
and
repz
pushf
sahf
xor
mov
sbb
pop
lret
jp
push
in
stos
jle
notl
cmp
and
leave
sub
add
bound
mov
jo
or
push
fcoms
pop
sbb
inc
lock
mov
sub
mov
xchg
int
xor
test
cmp
push
dec
lret
dec
call
andl
and
psubb
outsb
mov
insb
push
hlt
mov
in
jnp
mov
push
addr16
call
mul
in
pop
or
popa
add
adc
loopne
sbb
or
push
jae
sub
hlt
jmp
push
sub
mov
jmp
clc
bound
pop
imul
roll
mov
push
sbb
add
or
mov
ret
and
lock
mov
loopne
push
fldl
mov
cmp
rcr
cmp
sbb
xchg
daa
cmpsl
mov
add
mov
mov
js
roll
dec
and
and
sub
dec
and
fdivs
pusha
jno
stos
testb
jge
test
test
push
aad
pop
xor
cld
or
test
ss
mov
insb
pop
sub
dec
rcrl
fs
mov
jae
xor
jg
or
dec
ret
dec
add
cmp
or
xchg
xchg
iret
pop
cmpsb
decb
push
sbbl
jo
or
scas
imul
imul
cs
mov
mov
sarb
add
add
pop
lds
mov
arpl
cli
mov
push
icebp
inc
cltd
mov
hlt
dec
lock
addr16
ret
push
pop
mov
hlt
add
sti
in
popf
mov
mov
adc
dec
roll
push
cld
or
push
test
dec
popf
xchg
cltd
sbb
fldl
mov
ds
stos
xchg
test
dec
inc
mov
scas
cs
stc
test
sub
push
mov
das
or
mov
cs
or
adcl
inc
in
pop
je
adc
test
xchg
cli
dec
inc
jge
inc
xor
jae
or
mov
or
pop
cmp
mov
cmpsl
mov
inc
shlb
fucomp
adc
out
jmp
aas
shrl
pop
or
push
inc
push
add
push
cmp
sub
mov
xchg
sub
data16
mov
xchg
jle
sbb
sbb
xorl
shrb
enter
scas
stos
bound
dec
call
or
inc
add
or
cwtl
add
pop
mov
sub
movl
repz
cmpsl
cmp
or
cmc
das
jp
and
fisttps
loop
nop
mov
jne
test
dec
xchg
mov
xchg
sbb
xchg
mov
xor
mov
and
inc
and
and
adc
mov
cwtl
cmpsb
xor
pop
shr
iret
arpl
add
add
out
mov
cld
mov
outsl
push
xacquire
shll
shl
dec
rcrb
jmp
and
mov
cmp
test
pop
sbb
out
call
sbb
aas
add
adc
add
xor
pop
les
add
pop
or
es
test
adc
sbb
pop
or
push
adc
and
orl
pop
repnz
out
adc
andb
mov
sbb
pushf
in
add
ljmp
cmp
mov
adcl
mov
inc
sahf
and
ss
ret
push
sahf
dec
adc
fwait
hlt
add
ficomps
scas
jno
nop
lods
sub
lods
aam
mov
xchg
mov
in
movsb
push
inc
or
andb
call
jno
mov
add
cld
mov
push
testl
dec
insl
inc
sbb
icebp
into
std
dec
jmp
repz
ja
add
loopne
sahf
add
jecxz
mov
dec
or
mov
pop
push
mov
das
jge
cld
dec
xor
pop
push
movsl
sbb
xchg
lds
push
outsl
jbe
push
push
mov
or
and
add
xchg
call
xor
lcall
andb
push
cmc
cmp
cmp
sbb
pop
fadds
jbe
cmp
fiadds
ret
mov
sbb
cmpsl
adc
add
inc
ljmp
mov
pop
xor
sbb
jp
jno
mov
add
or
int
push
icebp
cmp
ss
sub
mov
and
jmp
dec
pop
hlt
icebp
pop
push
ljmp
out
cmp
mov
loop
inc
je
push
fcompl
decl
lret
adc
ret
je
xchg
mov
popa
inc
outsb
pop
mov
adc
std
and
test
and
insb
jl
xor
mov
mov
sub
xor
cmp
dec
pop
lcall
rorl
pop
push
icebp
push
adc
sahf
cmpsb
arpl
pop
mov
fimuls
movsb
aam
cmp
insb
push
movsb
adc
enter
xchg
cmp
push
ror
push
jb
jmp
push
movsb
add
popf
xor
in
shrb
jl
lods
hlt
adc
mov
jg
inc
inc
dec
fisttpll
ret
pop
dec
add
popa
jge
inc
cld
add
lahf
inc
xor
mov
mov
jp
js
jo
adc
push
dec
xor
mov
mov
movsl
cmc
mov
cwtl
lds
pusha
mov
push
inc
addr16
push
sahf
nop
std
jno
mov
rorl
adc
sbb
push
fistpll
add
xor
lock
sub
sbbl
xor
add
fs
mov
pusha
mov
push
xchg
adc
lret
stos
xchg
dec
mov
mov
outsl
out
decl
sub
add
mov
js
push
popf
out
xchg
mov
xor
xchg
mov
cs
or
incl
push
pop
add
decl
xchg
push
es
add
js
out
or
push
mov
je
push
push
je
pop
push
cmpl
mov
sbb
imul
outsl
sbb
loope
mov
lahf
rol
xchg
stc
mov
mov
aad
rol
mov
scas
jbe
je
push
movsb
xchg
jmp
pop
dec
daa
test
icebp
push
sar
xor
ret
xor
mov
scas
fisttpll
and
pop
mov
sbb
and
mov
test
or
mov
pop
sbb
out
xchg
fmuls
push
xchg
lret
mov
add
repnz
xor
xchg
pop
xchg
add
es
xor
aas
ret
pop
lods
sub
xchg
jo
mov
shrb
ret
movsb
mov
shl
clc
mov
adc
fst
push
inc
cmovae
das
fcmovne
out
push
push
sub
cwtl
lock
jns
lods
pop
cmc
xchg
pop
cmp
scas
mov
int3
sbb
popa
inc
dec
dec
jle
jno
popf
icebp
aad
mov
fs
xchg
jle
into
inc
xchg
sbb
and
add
shrb
ret
xchg
xchg
push
mov
adc
ss
dec
es
dec
fmull
push
dec
inc
mov
dec
sub
bound
ret
ss
mov
push
lods
xchg
mov
incl
outsb
jae
aaa
xchg
adc
shlb
imul
push
adc
dec
loopne
jne
les
dec
sbb
cmc
popa
loope
push
cmp
or
xor
fadd
push
inc
ds
mov
or
bound
test
call
inc
ret
mov
leave
add
in
inc
pop
loop
cmp
jns
and
hlt
dec
es
inc
dec
cmp
imul
add
xlat
lock
rcl
pop
faddl
push
je
lret
jge
testb
and
sub
rorb
sbbl
orl
stc
push
dec
testb
repnz
rorb
les
call
out
adc
push
leave
call
cltd
fimull
ret
push
cmp
mov
outsb
subb
pop
ss
xchg
test
mov
cmp
mov
std
arpl
pop
jo
sti
fisubrs
sbb
lods
gs
push
outsb
push
and
dec
sbb
push
ret
iret
mov
mov
xor
add
shrb
inc
pop
lods
aad
or
mov
pop
je
dec
in
pop
sub
popa
push
test
testb
sub
outsl
sub
test
std
push
pop
nop
repz
test
cwtl
jmp
incl
aaa
in
pop
shl
mov
fistpll
roll
or
cmpsl
or
and
neg
and
out
inc
or
sub
jno
clc
sbb
movsb
mov
jnp
cmp
fwait
or
pusha
jmp
pop
push
test
push
push
imul
xchg
jno
jb
inc
or
push
rolb
dec
insb
xor
loop
pop
pop
jg
aaa
cmp
out
inc
into
sbb
pop
or
or
pop
adc
adc
scas
sbb
jmp
ljmp
les
int
or
pop
pop
add
fucomi
mov
or
pop
rolb
sbb
fnstenv
adc
into
add
lret
std
cmp
mov
mov
xchg
lods
pop
inc
jnp
aaa
mov
push
lock
mov
mov
bound
sbb
jb
dec
cmp
sbbb
out
les
and
add
aad
mov
sarb
dec
lds
jl
add
inc
out
sbb
inc
adcl
stos
lret
imul
lret
mov
divb
subl
test
and
lds
clc
push
adc
dec
mov
js
add
jg
rcr
push
ret
iret
clc
push
mov
fnstenv
jno
xlat
lock
cmp
inc
xorl
andl
lock
fistpl
loope
and
jns
cmp
leave
pushf
jg
or
dec
mov
inc
popa
push
hlt
cmp
repnz
or
pusha
push
adc
jb
mov
jne
xor
movsl
fwait
push
stos
xor
rcrl
jo
xchg
cmpsb
daa
cwtl
jae
mov
or
lock
cmp
mov
sub
sahf
cmp
nop
ss
cmpsb
movsl
outsl
or
sbb
push
das
fiadds
add
add
repnz
jg
adc
loope
inc
dec
inc
pop
lods
xor
data16
add
lahf
icebp
and
push
jl
cmc
in
outsb
pop
in
jnp
rcll
cmpsb
lock
fs
cmp
sbb
cmp
scas
push
ror
xor
sbbb
mov
or
sub
aaa
pop
and
mov
mov
xchg
inc
mov
loope
icebp
or
xor
and
xchg
rcrb
mov
dec
push
xor
sarb
mov
mov
clc
xchg
add
scas
push
inc
bound
loopne
aaa
sahf
gs
cmpsb
popa
inc
or
sub
xchg
mov
xor
into
xchg
or
sbb
rorl
subl
adc
test
and
data16
sbb
popf
jns
and
mov
test
sbb
mov
jg
pop
test
jp
jg
or
cmp
loop
rcrb
push
mov
jl
jl
dec
popa
mov
imul
std
addr16
ljmp
aaa
and
mov
dec
imul
xchg
jp
inc
jge
ret
inc
jle
dec
mov
hlt
push
xorb
rcrb
nop
pop
inc
fidivl
inc
bound
pop
lcall
cltd
cmpsb
add
cmp
in
fwait
stc
xor
dec
stos
add
les
je
mov
stos
cwtl
orl
jne
out
add
mov
cmp
sarb
sbbb
aam
jmp
dec
xchg
cmp
fnstenv
mov
and
jns
mov
mov
xchg
bnd
lock
xchg
mov
add
popa
loope
iret
sbbb
xor
inc
mov
pop
inc
inc
add
lret
insb
add
jp
fildl
les
xor
sub
mov
pop
adc
scas
mov
aam
xchg
into
mov
pop
fs
sub
fdivrl
scas
movsl
jne
xchg
pop
js
mov
daa
sub
and
pushf
sbb
jecxz
outsl
mov
ret
push
ljmp
mov
mov
bound
cld
push
fmull
inc
mov
lea
dec
hlt
rolb
icebp
icebp
cmpb
bound
jecxz
aaa
rorb
mov
jmp
sbb
cmp
push
xchg
jle
mov
adc
imul
out
stos
out
adc
test
icebp
lahf
mov
negb
scas
mov
mov
xor
lea
cmpb
ds
les
int3
insb
and
add
rcr
jns
jae
pop
or
sub
es
jne
jo
sub
sub
push
jecxz
call
fmull
sub
out
mov
jmp
fisttpl
jnp
pop
mov
clc
cmc
jp
add
scas
push
fdivs
jecxz
mov
fwait
inc
cwtl
mov
add
push
pop
clc
aaa
pop
sub
adc
mov
inc
sbb
aad
scas
xchg
sbb
add
jb
jne
fs
mov
mov
cld
sbb
xchg
cmp
add
rol
sbb
adc
notl
stos
dec
cmp
cmp
add
ds
pop
hlt
mov
aaa
push
hlt
js
sub
fadd
inc
add
lock
xchg
xchg
mov
mov
out
mov
sbb
dec
xchg
jmp
mov
ss
push
or
pop
subl
pop
stos
lock
adc
ss
mov
jle
addb
into
inc
test
push
jb
cmpb
faddl
outsb
sbb
rorb
mov
imul
mov
daa
test
movb
xor
add
sub
ret
xlat
clc
xor
insl
push
lea
mov
orb
clc
mov
out
lret
test
push
mov
loopne
das
pop
int3
mov
pop
std
arpl
pusha
jno
pop
cmc
movsb
mov
hlt
in
sarl
mov
dec
sub
mov
xchg
adc
lods
sub
loopne
flds
imul
mov
mov
cmp
jecxz,pt
cmc
mov
ss
scas
mov
sub
xor
daa
subl
and
mov
and
cmp
ljmp
cmp
xchg
inc
mov
clc
js
mov
fdivs
adc
decl
mov
loope
popf
cmp
sub
ftst
and
cmp
adc
in
shrw
push
mov
fists
push
mov
sbbb
xor
or
xchg
lcall
xchg
dec
scas
sbb
movsb
mov
inc
mov
mov
sbb
pusha
mov
fistpl
cltd
and
adc
push
mov
clc
les
loopne
orb
stos
and
aas
jb
mov
push
sbb
rolb
xchg
or
cmc
push
sbb
xchg
jb
fs
dec
xchg
outsb
dec
mov
popf
sbb
lret
loopne
fs
ret
adc
ret
insl
push
add
loopne
cwtl
push
inc
or
add
jecxz
cmp
cld
or
add
test
int3
jae
cld
mov
leave
pop
in
lcall
stos
call
sbb
int
or
mov
cmp
xorl
jp
jnp,pt
pushf
adc
mov
mov
aas
and
mov
mov
imul
movsb
sbb
pop
jg
subb
jmp
inc
fisubrs
lahf
hlt
je
es
cmp
stos
pop
fildl
shlb
dec
ss
push
push
js
and
pop
lret
mov
dec
cmp
icebp
int
or
push
sub
mov
or
pusha
xchg
xchg
subl
ljmp
jecxz
maskmovq
divl
and
subb
jp
push
pop
aaa
lds
add
lahf
cmp
mov
pop
lds
push
add
xor
mov
shr
insl
cmpsb
xchg
inc
out
rorl
mov
push
adc
and
push
test
inc
sub
es
jp
push
push
icebp
lea
xor
lds
setnp
mov
jmp
or
je
iret
push
repnz
add
pop
or
movsl
mov
subb
xor
lahf
pop
rorb
scas
stc
mov
add
xchg
scas
das
cld
loope
sbb
jg
xchg
cmp
inc
pusha
mov
pop
test
mov
pop
mov
or
sti
ja
jp
mov
popa
insb
leave
pop
dec
pop
cmp
shll
pop
or
xchg
mov
jl
sbb
and
ret
nop
jp
cld
mov
sub
int
test
add
fmuls
xchg
stos
lret
andb
mov
les
dec
insl
and
jmp
mov
xlat
add
adc
data16
pop
in
push
cmpsb
pushf
lds
cmp
sbb
jge
inc
sub
or
push
mov
int3
push
insl
loop
sub
subb
and
or
mov
sbb
iret
xor
and
cmp
sub
xchg
xor
and
xchg
test
rol
push
jne
cwtl
pop
dec
pushl
fcoml
mov
xchg
dec
add
gs
loopne
mov
addr16
imul
ss
sub
sbb
jmp
sbb
inc
xchg
aaa
push
jnp
sub
cmc
stc
xchg
pop
xor
mov
sbb
inc
test
fnsave
push
cmp
cmpsb
push
cmp
outsl
out
ret
data16
aas
jmp
lret
xchg
sub
addr16
call
addl
add
mov
push
out
loop
and
dec
stos
mov
mov
mov
add
loope
loopne
gs
sub
pusha
pop
adc
cmc
push
jns
dec
inc
out
adc
pop
test
lea
inc
pop
in
add
jae
movsb
ret
je
mov
sub
in
ffree
xor
iret
xchg
sbb
mov
movsb
mov
ret
les
cmpsl
fisubs
daa
dec
push
xor
fdivl
imul
mov
xchg
and
fnstsw
add
popa
adc
sub
test
dec
pop
cmp
negl
xchg
jmp
adc
imul
movsl
in
mov
or
mov
mov
cmp
pop
fucomip
lods
mov
rolb
pushfw
scas
pop
lds
leave
or
out
mov
push
outsl
or
lea
fstpt
push
les
sub
ret
cmp
int3
sbb
adc
cmc
push
cli
cmp
jle
inc
adc
das
mov
lods
sahf
loope
adc
or
fimull
mov
push
int
data16
or
and
cli
adc
imul
mov
cmp
or
xchg
scas
movsb
and
or
jno
lods
cmpsb
jle
push
orl
or
lods
into
xor
sbb
stos
mov
mov
pop
and
inc
sub
pop
popa
sub
stos
cltd
loope
sub
iret
fwait
pop
daa
xor
popa
or
jl
je
movsb
push
pop
aas
daa
mov
dec
jg
xchg
test
xor
test
adc
cmp
dec
pop
and
imul
sti
sub
lret
add
fadds
and
popa
jl
push
xor
or
inc
fwait
pop
xor
xlat
xlat
das
push
dec
inc
jmp
cmp
mov
ss
jg
movsb
sub
pusha
clc
sub
int3
sub
push
lods
or
jnp
int3
bnd
xchg
imul
test
sub
fsubrp
lret
mov
jnp
mov
xchg
repz
lods
cmpb
scas
mov
cmp
je
loopne
mov
pop
add
pop
repnz
adc
push
clc
aam
or
xor
dec
test
xchg
int
subb
pop
pop
imul
shlb
loopne
jb
loopne
jns,pn
add
arpl
lahf
jg
inc
outsb
shrl
xchg
and
ret
jge
mov
nop
cmp
sbb
aaa
bound
mov
mov
sarl
dec
mov
test
rcll
addb
lahf
xchg
ss
das
stos
stos
xchg
add
ljmp
pop
or
or
and
adc
nop
nop
push
mov
test
and
adc
inc
add
pushl
adc
test
and
pusha
add
pop
add
or
dec
call
add
mov
or
iret
mov
inc
adc
push
or
and
add
pusha
inc
add
fbstp
mov
add
push
push
add
inc
lea
add
mov
pushl
loop
sar
pop
add
sub
ja,pt
add
lea
sub
lcall
fs
push
sbb
cmp
jge
mov
mov
add
jg
add
andb
mov
dec
add
inc
mov
add
inc
mov
add
or
mov
fadds
pop
leave
ret
sub
push
outsl
push
inc
mov
in
into
dec
push
inc
add
idiv
pop
dec
xor
inc
leave
ret
push
xor
jmp
xchg
dec
fildll
push
dec
jae
sub
push
mov
push
jmp
push
push
lea
push
call
add
fs
lock
inc
sub
rolb
lock
pushl
pop
pop
fcoms
sbb
mov
cmp
std
out
dec
jo
push
fmuls
fld1
mov
pop
int3
shll
sub
fisubrl
cli
dec
pop
jbe
adc
dec
add
sub
mov
sbb
inc
aaa
imul
mov
dec
inc
pop
outsl
ss
jmp
add
mov
add
mov
call
lret
es
push
push
jmp
inc
inc
sbb
outsl
js
cwtl
xchg
bound
push
ds
or
call
adc
ret
imul
mov
pop
jb
dec
dec
movsb
dec
call
dec
in
xchg
pop
xchg
clc
push
lea
push
call
fiaddl
fcmovne
mov
push
push
cmp
inc
dec
test
jbe
insl
dec
clc
xchg
nop
mov
sarb
add
roll
insl
dec
js
or
rorl
dec
push
insl
ss
push
mov
inc
push
xor
out
bound
dec
inc
jb
jg
orl
inc
push
jae
ss
hlt
mov
cmpsb
push
cwtl
and
add
pop
imul
mov
loop
cmp
xor
je
and
pusha
in
idivl
mov
sub
insl
lret
aaa
sbb
popa
add
ss
lock
mov
dec
push
dec
dec
adc
call
in
xchg
push
sub
sbb
js
xor
arpl
repnz
call
push
repz
push
inc
xchg
dec
dec
xor
ret
jo
mov
mov
push
aam
add
adc
add
or
js
or
cli
jl
fwait
out
push
mov
jle
inc
cmpsl
add
call
roll
dec
mov
xor
jnp
shrl
mov
sub
inc
or
or
out
es
push
push
lret
movb
push
aaa
push
ret
js
fwait
lods
dec
pushf
andb
adc
or
fisubrs
jno
rcrl
push
mov
sub
test
jae
jns
inc
mov
or
push
lret
dec
cmp
sbb
outsb
pop
aaa
or
stc
and
fucomip
pop
or
dec
dec
pop
mov
inc
dec
loop
mov
dec
add
int3
jne
mov
mov
jp
imul
hlt
sbb
ja
cwtl
pop
xor
sub
push
push
imul
sbb
jnp
std
incb
xchg
ds
cwtl
inc
mov
xor
pop
scas
jns
jae
stc
shll
je
cwtl
jmp
xor
mov
inc
push
push
cld
mov
dec
inc
push
dec
push
sub
dec
shrl
mov
outsl
dec
insl
rolb
js
mov
mov
jbe
inc
jmp
jmp
fs
mov
xor
dec
dec
popa
outsb
cld
mov
sub
addr16
dec
cld
jne
jg
dec
dec
inc
cli
ret
push
dec
imul
fisttps
xor
enter
jmp
xlat
pop
mov
outsb
je
out
rcll
je
daa
cli
js
pusha
push
push
add
jno
jbe
cwtl
or
push
loopne
popa
push
fs
clc
push
sti
sub
add
pop
lods
inc
lcall
mov
dec
inc
imul
outsl
popa
call
push
mov
inc
aam
negl
pop
lock
mov
ss
inc
shlb
aaa
mov
sbb
outsb
push
gs
jo
rol
insl
gs
aaa
mov
inc
push
jno
outsb
push
call
cmp
mov
loop
fsubr
jne
inc
outsl
in
dec
jno
je
testb
push
add
pop
and
loopne
and
cs
push
dec
push
add
pop
jl
dec
pop
scas
call
out
arpl
jp
inc
inc
inc
repnz
es
sbb
stos
shr
movsb
ror
push
arpl
jns
std
loopne
call
jb
or
jbe
loopne
pop
js
push
add
or
and
push
inc
xor
dec
clc
mov
cmpb
xchg
jne
cmpsb
add
and
push
movsl
cli
orb
jno
push
dec
add
nop
fisubrl
jno
imul
cmp
mov
add
addl
imul
inc
jbe
ja
cmp
call
popl
pop
cltd
inc
xor
test
loope
sbb
es
xor
in
mov
add
push
xor
push
sahf
js
inc
dec
dec
popa
and
ja
ss
jbe
xchg
mov
mov
push
call
push
fwait
or
jl
or
jbe
insl
fildl
das
or
lret
jb
pushw
push
add
push
xor
pop
pop
push
push
mov
push
ds
arpl
repnz
mov
and
jo
rcr
jmp
jae
jb
ds
mov
xor
push
sub
in
add
sub
pop
push
js
rolb
mov
cld
mov
repnz
dec
jbe
mov
ret
inc
xchg
jo
outsb
sub
cli
jae
jns
in
lock
fadds
pusha
lock
push
movsb
cwtl
jl
fs
adc
mov
mov
adc
jne
dec
insb
rcl
jmp
hlt
aaa
xchg
in
push
call
std
mov
mov
sbb
icebp
xchg
push
pushl
rcrl
es
ret
or
daa
and
pop
jo
mov
test
push
pushf
mov
push
cld
addr16
mov
in
clc
push
clc
subb
push
pop
xorb
call
fistpl
inc
sub
insb
xor
outsl
push
inc
mov
ja
out
or
mov
in
push
jne
push
inc
inc
mov
mov
inc
dec
lock
adc
push
inc
dec
push
cmp
dec
and
test
fwait
sub
add
adc
shr
cwtl
cmc
inc
jbe
inc
lock
push
push
cmp
mov
xchg
mov
add
dec
outsb
pop
js
dec
test
pop
lret
jbe
and
or
add
mov
jo
sub
adc
lock
push
imul
jbe
adc
push
or
or
out
push
push
inc
xor
mov
inc
fs
jb
out
xor
mov
bound
nop
enter
mov
cwtl
push
fsub
ficoms
insl
jb
pop
cwtl
add
push
push
jns
mov
mov
push
push
dec
lods
bnd
mov
std
insb
mov
das
ret
inc
mov
dec
shl
xchg
div
sbb
mov
xor
nop
sbb
shll
subb
mov
dec
sbb
inc
pop
pop
cltd
dec
es
dec
push
cmpsl
rclb
stos
mov
push
jb
data16
cmp
sbb
movsl
cmp
or
cmp
inc
jmp
cmp
bound
lock
jecxz
lods
vmread
js
mov
outsb
ffree
arpl
add
fisubs
sti
dec
aam
lret
scas
xchg
testl
sqrtps
shr
fs
add
inc
inc
aaa
sbb
inc
pusha
pop
sbb
loopne
hlt
sub
mov
or
bound
outsb
and
pop
inc
ja
lock
cmc
je
inc
xor
mov
arpl
inc
mov
xchg
cmp
jp
popa
cwtl
jb
fadds
inc
or
mov
or
adc
stos
pusha
add
call
jno
ret
or
test
or
in
insl
nop
insb
lock
mov
push
jle
xchg
adc
cs
cmp
ljmp
dec
pop
jne
clc
fdivl
ja
hlt
ja
dec
inc
dec
shr
inc
outsl
stos
sub
dec
fs
push
jo
dec
rorl
insl
test
les
mov
push
dec
imul
mov
inc
push
mov
cld
cli
test
mov
ss
jo
add
inc
xor
divl
arpl
jmp
mov
jmp
jns
mov
or
mov
adc
lahf
insl
sbb
out
idivl
mov
es
jno
and
inc
dec
loop
pop
lds
sub
push
inc
dec
int3
into
xchg
adc
das
cs
pop
aas
subb
sub
lods
dec
aaa
clc
inc
sarl
out
pop
popa
jae
gs
call
testb
and
inc
mov
inc
outsb
rorb
cli
push
dec
fs
pop
push
js
push
dec
dec
inc
gs
bnd
pushf
add
mov
imul
stc
cld
addr16
mov
push
push
dec
mov
inc
dec
mov
dec
xorl
xor
adc
pop
dec
mov
jbe
lods
clc
sub
jp
sbb
cmp
in
call
dec
inc
sub
ljmp
es
add
stos
icebp
jp
data16
mov
push
cli
in
xor
add
incb
jmp
add
xchg
push
jmp
jbe
xor
fimuls
inc
cmp
jbe
add
into
xor
adc
sbb
mov
adc
aam
push
cmpsl
lock
cwtl
roll
idivb
hlt
mov
mov
push
jge
push
je
repz
inc
outsl
push
sub
xchg
imul
add
pop
call
push
inc
cmp
sbb
iret
push
cmp
test
inc
xchg
xchg
add
ror
inc
rcll
outsb
mov
mov
loop
push
inc
shr
dec
dec
push
xor
cmpsb
add
dec
push
mov
xchg
pop
lock
cwtl
or
scas
and
jno
and
dec
shlb
xlat
hlt
push
dec
cwtl
ficomps
push
push
xor
jmp
mov
lcall
js
push
inc
push
push
data16
in
in
aam
sti
mov
dec
add
xlat
mov
negl
insb
nop
jmp
bound
shll
cld
out
fs
in
in
dec
outsl
out
roll
inc
xor
jns
stos
adc
sbb
pop
xor
cmp
sub
arpl
jns
clc
pop
aas
rorb
push
flds
sarb
rcrl
jbe
xchg
rcll
pop
leave
das
push
dec
cmp
ds
rorl
ror
sar
fimull
clc
andb
mov
add
mov
xlat
inc
dec
mov
aaa
imul
adc
adc
int3
ss
ret
call
stos
test
mov
inc
shrl
mov
push
jb
or
xlat
lock
sets
repz
push
pop
or
xor
inc
imul
push
lods
pusha
dec
mov
sbb
hlt
lcall
xor
sahf
mov
push
mov
push
sti
adc
fldcw
loop
push
xor
ret
mov
addb
lock
and
xlat
jno
in
inc
dec
inc
dec
in
push
int3
mov
outsb
push
call
dec
adcl
fcmovbe
js
push
jb
loopne
or
cmpsb
xlat
push
les
push
insb
jns
call
push
push
outsl
roll
dec
jge
inc
mov
int3
inc
call
sbb
lret
push
lcall
dec
or
fs
popa
ss
push
outsb
push
push
push
jle
add
mov
in
movb
shlb
ds
mov
adcb
jmp
inc
push
push
jo
imul
cmp
icebp
cmp
lods
cmp
add
pop
push
gs
cmp
data16
add
inc
test
insb
cs
bound
dec
rcl
inc
mov
push
inc
xor
jle
mov
ds
pushf
daa
add
dec
ja
push
fisubrs
movsl
rolb
dec
call
adc
mov
push
jnp
push
dec
add
jge
mov
xchg
jns
imul
mov
cmp
push
jbe
push
shrb
daa
flds
and
call
adc
test
call
mov
dec
ja
dec
mov
pop
mov
ljmp
movsl
mov
jb
ss
idivb
pop
hlt
lods
dec
inc
cmp
xor
push
sbb
in
push
and
or
test
inc
pop
push
bound
jo
push
fadd
inc
xor
inc
pop
inc
rorl
and
out
mov
sbb
push
push
jae
jns
fcmove
clc
and
cmp
testl
movl
int3
shl
rclb
inc
jnp
in
adc
stos
mov
xchg
sbb
sub
inc
jbe
ret
push
push
mov
mov
push
aaa
adc
mov
daa
push
dec
xchg
roll
and
adc
sbb
lock
xor
sub
push
mov
rcrl
jne
pop
mov
insl
xor
cmp
outsl
dec
inc
inc
enter
xchg
pushf
push
inc
inc
cmp
in
adc
cmp
je
dec
outsl
dec
mov
or
lret
sbb
xchg
pop
fs
jbe
popa
push
jne
push
push
je
cwtl
dec
jmp
ret
jg
dec
push
movsb
dec
call
xor
cmp
arpl
inc
lock
push
sbb
out
pop
je
rcll
or
pop
cmp
pusha
shlb
popa
mov
daa
fs
dec
push
sub
clc
fdivl
mov
sti
leave
push
push
mov
in
fldt
sub
cltd
push
popf
mov
out
jne
jae
hlt
xchg
mov
das
sub
enter
sarl
push
ret
xor
jmp
cmp
fisubs
adc
aas
loope
mov
ret
inc
dec
push
aaa
mov
inc
adc
jbe
pop
in
xor
sbb
pop
or
test
push
jmp
dec
mov
adc
inc
pop
jmp
cli
ret
xor
repnz
aad
push
dec
dec
stos
imul
add
add
sub
mov
xchg
sub
pushf
inc
aas
test
jb
mov
jg
pop
pop
outsb
jno
jb
pop
mov
fwait
addl
loop
insl
inc
in
add
aaa
je
nop
call
gs
or
jbe
int3
add
xchg
cs
movsb
sub
lock
outsb
mov
push
ja
add
or
jo
shlb
mov
and
ret
fsubs
iret
fdivrl
mov
mov
push
mov
xor
movsl
dec
orb
fiaddl
dec
add
jne
mov
cwtl
in
or
mov
data16
shlb
push
push
inc
dec
cli
test
sbb
sub
in
add
enter
dec
je
pop
adc
sub
clc
inc
or
cmp
mov
rol
xchg
inc
pop
ds
in
jp
inc
mov
jp
jg
push
xor
movsl
fs
pop
in
mov
or
jl
popf
leave
push
push
mov
loop
mov
out
mov
xor
sbb
lods
clc
aaa
lock
push
push
pop
fimull
dec
ss
mov
add
jo
lds
fs
mov
xchg
jmp
jg
add
pop
add
jle
xlat
pop
enter
inc
test
add
dec
pushf
ss
arpl
ss
shrb
hlt
or
cmp
dec
js
ja
loopne
mov
dec
js
inc
out
push
in
mov
ja
dec
es
dec
test
xor
call
pop
scas
aas
insb
stc
xchg
jl
jne
rorl
imul
jne
add
adc
push
aad
cmp
test
bound
xor
mov
dec
ja
fldenv
popf
push
jecxz
jb
mov
pop
dec
adc
dec
inc
arpl
xor
push
mov
pop
mov
aaa
sub
arpl
xor
lret
roll
roll
mov
gs
ljmp
in
aam
sbb
iret
test
mov
xchg
or
jl
inc
inc
dec
or
jb
dec
pop
pop
imul
inc
pushf
and
xor
sub
fidivs
nop
push
pop
cmpsl
loopne
in
ud2
dec
sub
cmp
adc
insb
data16
inc
in
jp
out
or
or
push
ljmp
fcompl
adc
test
mov
push
lock
dec
mov
roll
test
in
mov
dec
ret
insb
cmp
push
rolb
pushf
bnd
outsl
dec
sub
push
in
adc
push
lea
push
jae
ljmp
int3
mov
outsb
mov
aaa
push
adc
mov
ja
icebp
test
jb
push
out
bound
jae
repz
mov
and
in
sti
lock
lds
sbb
push
push
mov
es
imul
push
outsl
jbe
loopne
cmc
adc
adc
js
not
scas
sbb
jb
xor
push
arpl
add
cli
push
mov
dec
in
scas
sub
stc
popa
jmp
jnp
clc
lods
pop
pushf
stc
xchg
testl
cli
inc
adc
call
jmp
fidivs
dec
lret
jo
jge
dec
sahf
cmp
mov
inc
pushf
adcb
inc
mov
xchg
push
cwtl
push
aaa
and
push
loope
and
jmp
inc
inc
pop
sarb
jae
push
arpl
mov
sbb
cmp
pusha
adcb
shrl
decl
addl
out
enter
adc
in
add
test
xchg
je
andb
cld
jmp
mov
in
dec
jo
nop
outsb
gs
movsb
or
push
mov
imul
pop
pop
inc
outsb
inc
xor
das
jle
jmp
jp
stc
dec
add
dec
leave
pushf
subb
shlb
pusha
fadds
add
and
inc
or
repnz
push
dec
pop
mov
pop
cmp
pop
xor
jno
push
push
adc
test
push
adc
xor
lcall
inc
dec
mov
jbe
jecxz
mov
adc
stc
mov
insb
fldenv
sbb
jo
addr16
jb
pushl
inc
jae
insb
sub
icebp
pop
jp
inc
fdivrs
or
fs
dec
ret
imul
jne
dec
jae
or
imul
cld
xlat
jecxz
enter
shr
add
aaa
ss
dec
push
jo
push
cmp
push
mov
mov
adc
cld
out
rcrl
aas
roll
mov
mov
dec
jno
inc
sbb
dec
inc
jbe
fs
pushf
sbb
mov
push
outsl
into
inc
int
jl
push
cmp
es
pop
loopne
lea
dec
cmp
pop
xchg
push
daa
lcall
jle
jo
cmc
ret
inc
xor
imul
push
movsl
add
add
jecxz
or
ret
mov
mov
mov
insb
in
ror
hlt
pop
rcr
iret
xchg
iret
jl
je
jns
neg
push
sub
js
pop
push
push
adc
iret
pop
jg
into
dec
popl
mov
insb
xor
popa
fisttpl
mov
movsb
rclb
add
inc
xor
dec
add
pop
cwtl
clc
loop
out
jo
push
push
addr16
push
jmp
fdivl
clc
or
add
mov
inc
or
cwtl
call
les
js
add
and
pop
arpl
out
dec
add
fld1
pop
in
into
push
sbb
inc
rcrl
push
mov
add
call
or
push
sbb
lock
jo
sub
xlat
lock
pop
mov
les
sbb
cmp
lcall
shr
xchg
inc
lods
out
xor
add
pusha
add
fdivrl
xor
cmp
mov
gs
sarb
test
test
mov
push
dec
cmp
push
push
fwait
fwait
mov
push
jbe
lret
or
xorb
dec
rolb
rcr
mov
je
gs
js
stos
subb
in
in
in
lds
lods
jo
pop
dec
js
pop
bound
inc
or
mov
dec
sub
dec
loopne
arpl
adc
enter
out
xchg
lock
inc
pop
testb
and
enter
cwtl
add
mov
lcall
inc
out
dec
xor
clc
push
inc
push
lret
pop
jnp
enter
dec
pop
dec
fiadds
mov
sahf
incb
pop
andb
push
rcll
mov
scas
xorb
dec
out
cmp
or
xor
sarl
das
mov
std
repnz
inc
data16
inc
pop
pop
rcrb
pop
orb
in
xor
sarb
jno
out
inc
push
outsb
push
fldl
mov
mov
pop
pop
or
decb
jo
pop
dec
mov
shll
ljmp
inc
call
js
push
lock
int
add
aaa
insb
insb
imul
aaa
fmuls
rcrl
or
lock
inc
test
dec
xchg
push
lock
or
in
in
sbb
ljmp
movsl
cs
ret
xchg
pop
scas
mov
mov
outsb
push
inc
mov
add
enter
xlat
aam
outsb
sbb
das
test
or
mov
lds
sub
stos
je
pop
mov
pop
bound
push
sbb
sbb
sysexit
icebp
push
sarl
lret
out
cmp
or
test
dec
inc
aam
fs
lret
mov
popa
call
cmc
inc
das
loopne
pop
jecxz
call
ret
push
push
cwtl
push
mov
es
pop
push
jne
inc
push
mov
cld
call
mov
test
arpl
xor
mov
jae
je
dec
pusha
jb
outsl
jne,pt
add
cmpsb
repnz
adc
int
pop
xor
mov
lea
lds
fimuls
push
cmc
movsb
push
ret
sbb
rorl
jl
iret
out
fs
pop
and
pop
pop
loop
lret
adc
mov
xchg
roll
iret
push
jge
movsl
mov
inc
fisttps
inc
dec
or
add
movsl
je
pop
or
xor
rclb
inc
xor
pop
stc
adc
add
incl
int3
adc
cld
aas
repz
add
inc
add
popa
add
and
je
jns
neg
aas
dec
add
jo
jae
or
dec
add
fdivr
out
ficoms
outsb
sub
cmp
imul
add
add
add
adc
js
insl
push
arpl
jns
pop
pop
popa
push
imul
push
push
xor
std
call
xor
push
xchg
add
pop
add
inc
les
mov
sub
das
imul
in
jle
cmp
sub
ds
or
add
add
xchg
jmp
jne
je
and
xlat
add
add
lcall
in
sahf
pop
outsb
jae
dec
outsb
pop
push
int
jg
adcb
mov
inc
aaa
subb
add
xchg
jbe
pop
ret
test
incl
add
add
and
jbe
fs
iret
add
add
add
aas
add
test
add
fildl
and
outsl
push
ja
jg
add
cmp
mov
outsb
arpl
push
jbe
cld
push
dec
pop
xor
inc
pop
repnz
xchg
add
add
add
pop
jnp
mov
insb
cmp
push
aaa
pop
push
outsl
dec
jb
ja
dec
jb
xor
arpl
popa
xor
jmp
push
jne
jbe
dec
inc
cmp
cmp
dec
push
push
push
push
insb
ja
inc
push
arpl
pushl
std
jb
data16
jb
dec
jne
bound
dec
inc
dec
insl
jno
push
pushl
jb
outsl
popaw
jns
bound
push
jns
imul
dec
push
pop
push
inc
insb
imul
pushl
jno
push
dec
addr16
xor
inc
xor
xor
jo
push
push
pop
arpl
push
dec
inc
inc
inc
inc
bound
gs
inc
inc
jo
xor
xor
push
inc
push
inc
outsb
ja
in
pushl
bound
aaa
dec
mov
push
push
fs
imul
pop
insl
push
pop
clc
ljmp
push
jne
dec
xor
jb
push
cmp
push
inc
dec
jne
fs
inc
insl
push
xor
ss
add
push
xor
push
xor
push
mov
mov
imul
dec
jbe
jno
dec
imul
adc
push
in
fs
inc
dec
inc
ja
js
mov
mov
jae
xor
xor
inc
push
push
inc
jne
outsw
in
mov
push
push
jb
inc
jae
push
inc
cmp
decl
outsb
jb
jb
dec
dec
nop
outsl
jae
inc
xor
jne
inc
inc
je
push
dec
shll
arpl
gs
push
inc
ss
mov
jg
push
je
dec
jb
insb
inc
bound
dec
push
cmpsb
bound
dec
push
outsl
clc
pushl
outsl
push
imul
pop
inc
inc
js
je
inc
inc
push
inc
push
imul
inc
push
clc
incl
xor
push
insl
je
inc
je
push
gs
inc
ss
jb
insb
clc
pop
mov
outsl
outsb
xor
fs
xchg
addr16
inc
out
ss
inc
push
dec
xor
fisttps
clc
clc
aaa
jns
jbe
inc
jae
xor
lret
inc
ret
mov
push
push
cs
cmpsb
jo
xor
sbb
jg
dec
gs
outsb
xor
xor
dec
popa
push
xor
loop
inc
pop
popa
ss
inc
addr16
push
jno
pushf
aaa
imul
popa
dec
xor
or
pop
jne
jne
xor
les
jae
dec
dec
gs
xor
pop
test
push
dec
inc
dec
inc
cmp
sbb
cld
adc
inc
jae
push
inc
inc
inc
addr16
push
xor
sbb
outsb
inc
dec
push
jbe
subb
jbe
push
dec
add
inc
push
dec
dec
pop
dec
jo
mov
inc
jne
push
jbe
insb
mov
jbe
mov
push
popa
bound
cmp
fistl
es
jno
inc
rolb
dec
dec
outsl
jb
dec
jbe
outsb
outsl
clc
push
dec
push
inc
imul
jno
inc
push
jbe
pop
push
and
call
imul
adc
ss
jns
cli
or
stos
xor
imul
aaa
xor
insl
insl
fisttps
dec
inc
push
in
dec
inc
jp
or
dec
push
xchg
push
addr16
inc
pop
outsb
aaa
loop
xor
jmp
sbb
pushw
dec
insl
adc
push
jns
popa
push
inc
pop
push
jbe
pop
jae
jno
push
or
imul
je
sbb
dec
xor
addr16
aaa
push
dec
insb
scas
dec
sti
outsl
mov
lret
insb
test
push
outsl
push
outsb
inc
pop
outsb
data16
pusha
stos
js
jae
gs
nop
js
das
jo
dec
outsb
bound
inc
jo
dec
js
out
mov
gs
cmp
inc
jns
push
mov
jns
pop
push
nop
jbe
mov
pop
add
popa
dec
jbe
jno
dec
dec
cmp
gs
push
cmp
push
dec
jae
jo
push
dec
jo
insl
sarb
addr16
push
jb
dec
rolb
push
test
arpl
adc
add
clc
inc
dec
cmp
cmpsb
pop
icebp
xor
bound
push
push
inc
jae
mov
mov
inc
push
je
inc
pop
adcb
pop
lock
ja
xor
addr16
outsl
push
call
sub
dec
je
push
popa
fs
dec
lcall
inc
cmp
push
jne
dec
js
jns
shr
insb
jns
imul
lock
incl
push
subb
jne
jbe
aaa
pop
xor
or
push
dec
jns
popa
xchg
js
outsb
insb
adc
les
mov
or
test
jbe
pop
xor
inc
push
cmp
insb
aad
pop
cmp
popa
out
inc
aaa
inc
push
push
jb
inc
jg
cs
dec
inc
or
xor
cmp
pushf
bound
pop
das
cli
push
pop
push
push
js
inc
xor
xor
pop
insb
cwtl
in
scas
mov
jno
jae
jo
ficoms
lock
ljmp
pushw
xchg
pop
test
scas
push
cmp
cmp
and
mov
or
jns
dec
mov
dec
jb
push
xor
adc
stos
xor
outsb
mov
insl
outsl
pop
dec
mov
gs
insb
insl
jb
push
ss
sbb
movsb
insl
data16
xor
jae
pushl
cmp
or
popa
outsl
ss
pop
dec
xor
popa
sub
lcall
xor
push
push
add
addr16
imul
add
dec
loopne
fs
push
push
sbb
popa
dec
hlt
gs
jo
jg
push
xorb
push
push
push
cmp
dec
push
inc
inc
loope
push
mov
sbbb
dec
test
inc
inc
jle
jns
push
outsb
push
outsb
push
and
fs
pop
dec
push
dec
xor
ja
cld
xor
xor
jb
jae
pop
adc
push
jmp
dec
aam
jp
data16
push
sbb
fs
orb
cmp
imul
sarb
push
push
push
gs
xor
bound
xor
and
insb
out
add
push
dec
dec
insb
xor
xchg
je
mov
dec
xchg
adc
fwait
sub
cmp
ja
cld
sbb
xor
out
jp
cmpsb
push
aam
push
in
je
xor
inc
jno
xor
loopne
loop
outsl
js
inc
mov
dec
lods
lock
xor
ss
inc
push
push
mov
mulb
cmp
fimuls
add
jae
pop
xlat
pop
sbb
insl
xor
dec
insb
add
push
dec
repnz
ja
push
imul
mov
pop
add
imul
push
cmp
ja
xor
push
lock
dec
xchg
loopne
xor
xor
mov
pop
data16
outsl
rclb
insb
xor
and
xor
push
loopne
stos
push
scas
gs
insl
dec
pop
lods
push
dec
mov
aad
inc
push
fs
push
add
inc
mov
imul
fmuls
fs
push
pop
lock
imul
data16
or
push
or
jb
mov
push
jno
inc
xor
arpl
push
inc
push
push
push
lods
ljmp
add
inc
push
lock
std
push
ret
popa
inc
subb
dec
js
push
push
inc
popa
xor
mov
push
dec
ljmp
cli
fwait
or
dec
cld
push
push
dec
inc
push
xor
cwtl
add
pop
fs
push
aaa
inc
ja
lcall
sahf
push
dec
repnz
sarl
pop
arpl
push
jae
jae
mov
jno
xor
xchg
loop
dec
inc
xor
push
int3
fsubs
lcall
push
adc
imul
xor
xor
lcall
jo
notb
inc
popa
xor
push
or
xor
arpl
pop
fs
mov
inc
dec
jno
movsb
cmp
sti
sbbb
pop
inc
arpl
xor
cld
push
push
aad
dec
ss
arpl
push
push
dec
pusha
pop
or
xor
jo
push
mov
adc
ja
push
outsb
ljmp
push
dec
push
inc
dec
arpl
inc
in
fsubl
adc
ja
push
mov
aaa
mov
ja
ficoml
gs
xor
aaa
inc
stos
das
push
push
push
jbe
out
insb
mov
stos
mov
jns
xor
inc
mov
in
pop
and
dec
fs
js
dec
imul
jne
je
ss
stos
push
shlb
push
push
aaa
bound
jg
inc
imul
jne
je
pop
inc
xor
push
ja
inc
jb
cmpsb
add
jbe
dec
fiadds
movsb
push
dec
data16
addr16
pop
xchg
jmp
cs
dec
xor
push
je
js
xor
jb
arpl
je
fidivs
xor
dec
outsb
inc
push
mov
cmp
inc
les
adc
ja
push
jbe
xor
xor
insl
push
sbb
adc
addr16
or
add
aaa
jne
push
adc
add
xor
daa
push
inc
xchg
jle
dec
dec
jne
lock
add
es
add
jb
je
mov
hlt
jle
jbe
adc
push
push
dec
dec
xchg
push
stos
xor
jb
mov
push
mov
push
jne
jb
inc
ljmp
outsb
inc
xor
gs
stos
jns
jns
dec
aaa
xor
test
sub
mov
push
shlb
dec
ja
outsl
pop
outsl
jno
dec
inc
imul
js
insl
inc
dec
jp
dec
dec
ja
fbstp
sub
js
inc
dec
dec
jo
xor
fsubr
imul
test
imul
pop
in
jns
insl
sbb
push
ss
push
or
test
mov
outsl
int3
dec
inc
xor
int3
push
inc
or
pushf
push
std
push
push
pop
lret
push
push
jno
jb
add
adc
push
inc
dec
dec
push
icebp
sub
jo
fdivr
xor
inc
inc
stos
pop
jne
fildl
or
rcl
mov
xor
jns
dec
lcall
mov
inc
fs
dec
push
addr16
xchg
sub
push
push
int3
pop
sti
lods
jmp
inc
fsubrs
addr16
push
xor
dec
add
jbe
imul
pop
popa
js
inc
jbe
fimull
mov
fidivs
mov
pop
inc
insb
inc
insb
lcall
notb
push
jge
xor
push
bound
push
push
inc
or
jbe
mov
cmpb
ficoml
push
cmp
std
push
xor
imul
enter
add
jmp
aaa
push
inc
arpl
outsb
insb
mov
mov
xor
and
push
test
dec
cmp
mov
pop
push
mov
jo
sub
inc
xchg
jae
mov
lret
fidivrl
dec
popaw
je
mov
outsb
imul
or
add
popa
bound
bound
inc
or
sbb
arpl
add
inc
push
fs
gs
inc
xor
jbe
push
cld
push
enter
bound
or
dec
outsb
pop
fs
shrl
gs
gs
dec
popa
dec
inc
inc
jns
int3
fwait
jp,pn
ss
pop
dec
gs
sbb
data16
fdivrp
push
bnd
js
dec
imul
popa
push
xor
jbe
or
sahf
pop
mov
mov
dec
push
mulb
and
inc
mov
addr16
mov
jbe
push
push
pop
and
or
xor
outsb
xor
loop
movl
jno
jno
jae
xchg
lods
lock
jo
xor
outsl
je
inc
aaa
jge
sbb
loop
dec
dec
js
mov
jne
mov
push
insb
xor
insl
inc
xor
jo
gs
jbe
ret
outsl
mov
push
inc
push
dec
ficoms
or
xor
dec
xor
in
fisttps
push
push
outsb
cmp
outsl
mov
dec
inc
outsb
jae
pop
jns
xor
sti
aaa
mov
jne
inc
inc
pushw
push
inc
jne
push
insl
dec
bound
inc
cmc
incl
jne
xor
jo
popa
je
das
sub
nop
cmpsb
insl
ret
arpl
cmpsb
jg
cmpsb
inc
movsb
dec
bound
dec
addr16
push
inc
push
inc
xchg
push
loop
imul
pop
xor
fadds
xor
icebp
mov
or
push
dec
insb
aaa
insb
dec
lea
cld
pop
insb
jne
xor
jo
jns
jb
lret
sbbb
xor
lret
ss
push
scas
push
je
inc
jne
xor
or
push
inc
mov
push
inc
jne
jae
jo
incb
cmp
aaa
jb
jb
imul
adc
xor
sub
pop
mov
dec
arpl
inc
jbe
imul
push
jge
jb
inc
dec
addr16
inc
jno
inc
dec
das
push
or
push
imul
pop
and
push
dec
mov
dec
lock
in
ljmp
inc
fs
bound
xor
xor
or
add
loopne
insb
bound
push
ret
push
insl
push
inc
inc
inc
cmp
push
push
js
inc
dec
mov
dec
bound
stos
mov
xchg
xor
mov
in
or
outsl
mov
repnz
push
cmpsb
dec
mov
push
cmp
xor
out
dec
gs
insl
cmp
stos
adc
cli
inc
jae
xor
insl
subl
sub
and
and
push
imul
push
xchg
fnsave
inc
push
xor
jmp
aaa
dec
push
dec
push
outsl
mov
test
mov
dec
jae
push
push
dec
aaa
push
outsl
fsubs
mov
xor
push
lds
inc
aad
xor
fs
or
jb
sub
dec
inc
popa
sarb
xor
xor
ret
jbe
aaa
xor
sub
mov
push
ja
xchg
je
xor
cld
inc
jle
jae
xor
xor
jno
test
push
pushf
jno
dec
arpl
inc
insl
inc
dec
push
pusha
test
jne
xor
adc
cs
cmpsb
adc
outsb
or
push
jb
mov
push
insb
fs
dec
push
push
adc
push
dec
jno
inc
dec
imul
inc
aam
or
inc
cmp
imul
pop
xor
shl
incl
dec
push
bound
les
dec
jb
dec
arpl
and
pushl
arpl
dec
xor
outsl
dec
mov
decl
dec
imul
jb
pop
dec
pop
push
lock
leave
pop
sbb
jb
inc
inc
ss
int3
dec
mov
push
push
inc
add
pop
lock
bound
mov
xor
jb
mov
push
push
xor
sub
cmp
hlt
xor
push
xor
sub
js
dec
insl
xor
cmp
xchg
inc
aad
ja
push
inc
pop
push
aam
sbb
jg
ja
inc
imul
gs
push
js
popa
dec
dec
xor
inc
mov
ss
push
aam
popa
aam
cld
mov
jo
gs
int3
dec
dec
jo
push
pop
lock
je
sub
push
fs
outsl
popa
dec
popa
xor
ss
loopne
push
cs
nop
inc
ja
sbb
int3
inc
fs
xor
ds
inc
out
xor
dec
fwait
mov
cmp
adc
push
dec
js
xor
inc
inc
in
dec
mov
movl
shlb
xor
lock
mov
dec
jae
push
gs
jbe
inc
pop
icebp
pushl
dec
aaa
xor
push
je
dec
xor
inc
sub
dec
push
pop
add
dec
push
arpl
sbb
gs
jno
jbe
gs
dec
test
mov
mov
outsb
dec
je
mov
ss
dec
imul
xchg
ja
jns
dec
test
dec
arpl
aaa
pop
arpl
xor
mov
or
jno
jns
outsb
mov
insl
inc
gs
imul
sbb
mov
je
sub
je
push
xchg
or
stos
jle
dec
imul
jbe
jne
dec
fs
cmp
pop
movsb
pop
cli
jne
inc
push
add
dec
cmp
sbb
xor
xor
inc
push
dec
push
cmp
call
ret
decb
imul
push
inc
arpl
addr16
or
inc
push
inc
dec
jle
push
xchg
sbb
js
inc
push
dec
dec
dec
xchg
or
dec
cmp
dec
aaa
push
lret
cld
mov
push
dec
fs
push
popa
dec
push
imul
jae
inc
loopne
fcoms
pop
loop
and
mov
sahf
arpl
jp
sbb
rolb
push
pop
dec
push
dec
push
push
ss
ss
cmp
inc
cmp
jns
push
lret
fs
jp
popa
imul
sbb
sbb
dec
dec
jne
sbb
or
mov
inc
push
outsb
dec
popa
enter
aaa
or
dec
idiv
insl
pop
imul
je
inc
xchg
enter
push
fiadds
orb
xor
push
cmp
ret
sub
lods
insb
dec
dec
outsl
xor
dec
jl
gs
inc
outsb
push
outsl
sbb
bound
dec
jb
jo
dec
inc
mov
stos
arpl
inc
sub
dec
outsl
jae
pop
shlb
xor
ja
mov
push
outsb
bound
shrb
scas
ficoml
pop
jne
push
in
sbb
jae
push
push
addr16
rcrl
jno
stos
jns
std
pop
push
xchg
fdivrl
sbb
imul
push
adc
gs
das
cli
jne
dec
push
je
dec
dec
jbe
push
inc
push
jae
push
push
aaa
loope
adc
dec
sub
dec
cmp
sub
mov
adc
push
sub
xor
adc
int
push
adc
xor
dec
inc
imul
imul
sub
mov
ljmp
push
insl
push
popa
sub
insl
mov
push
push
add
push
inc
or
popa
push
je
scas
outsl
outsb
push
bnd
add
dec
push
inc
adc
outsl
push
fsubrs
insl
and
gs
push
call
dec
jb
pop
push
xor
pop
call
inc
push
dec
xor
jb
jno
pop
push
add
mov
inc
jns
inc
test
js
imul
xchg
mov
push
cwtl
in
pop
outsb
arpl
outsl
dec
test
gs
push
sbb
js
ja
jo
add
outsl
adc
jo
das
inc
xorl
imul
dec
cmp
adc
aam
dec
jb
ja
pop
dec
jno
pop
shll
ja
inc
push
adc
scas
andb
dec
dec
push
fs
shlb
xor
insl
mov
dec
push
jae
mov
cmp
aaa
rcrl
addr16
mov
outsb
push
imul
decl
jno
xor
xor
popa
push
push
mov
fs
and
mov
dec
inc
je
loopne
data16
rcrl
arpl
inc
dec
je
mov
fs
in
leave
jbe
popa
cmp
pop
push
adc
inc
pop
jns
dec
push
inc
call
cmp
ja
jb
inc
ja
dec
fs
xor
inc
add
mov
push
or
inc
ljmp
pop
push
shr
cmp
incl
xor
pop
xor
jns
xchg
dec
push
cwtl
jecxz
in
pop
js
jbe
lods
add
js
adc
lock
push
pop
lock
jae
ss
decb
inc
push
fs
cmp
xor
push
push
xor
int3
cs
push
push
push
lret
jno
sub
push
dec
inc
addr16
cwtl
cli
jg
dec
xor
xor
imul
or
push
dec
push
arpl
mov
xor
insb
addr16
push
inc
mov
mov
adc
outsb
push
dec
dec
jbe
in
ret
shll
mov
call
push
jno
xor
imul
shrl
addr16
insl
push
jns
inc
dec
adc
push
jg
aad
pop
push
dec
insb
inc
fisubl
jne
jns
aaa
dec
imul
cld
fs
jb
arpl
inc
arpl
in
shlb
mov
les
andl
popa
mov
enter
outsb
ss
arpl
mov
inc
bound
xchg
ljmp
lods
mov
mov
aaa
cmp
push
inc
push
jo
jno
inc
or
cli
xor
jbe
add
jo
inc
jno
js
xchg
int3
insl
fsubrs
push
jno
outsb
dec
inc
lods
call
out
xor
add
and
jbe
mov
inc
stos
int
dec
addr16
or
hlt
fbld
rclb
dec
dec
jae
inc
push
cmp
push
inc
sub
dec
in
add
push
or
xchg
ja
or
mov
mov
jno
cld
js
sub
sbb
pop
mov
loopne
or
insb
dec
xor
pop
push
movsb
inc
inc
fwait
ljmp
int3
pop
inc
jbe
push
fadds
mov
repnz
js
insb
ss
jo
pop
sub
dec
shlb
sbb
pop
pop
inc
xlat
or
push
dec
dec
bound
int3
xor
gs
add
aam
dec
inc
dec
imul
inc
outsb
push
imul
push
outsb
xor
in
adc
xor
jbe
mov
fisubs
inc
jbe
inc
js
add
or
outsl
rolb
jae
stos
inc
push
stos
call
xor
sub
out
jbe
mov
bound
sub
push
dec
add
jbe
push
sbb
jle
jbe
dec
and
mov
push
dec
jno
testb
es
jge
jecxz
fisubl
dec
imul
test
push
scas
aaa
pop
imul
dec
xor
stos
sub
inc
insl
sub
inc
xor
jo
jbe
sbb
rclb
push
repnz
jns
jbe
mov
mov
push
dec
imul
js
loope
add
pushf
mov
js
imul
data16
jne
jne
stos
loope
lret
jae
push
cmp
xor
jg
xchg
add
cmp
gs
arpl
test
fdiv
jns
dec
ja
outsl
addr16
mov
loop
std
push
push
imul
inc
adc
imul
insb
xor
fs
inc
or
cs
imul
adc
clc
jns
jl
imul
outsl
aaa
ret
nop
push
dec
jns
push
cmc
andb
push
js
push
mov
xor
fidivl
push
cmp
push
in
pop
call
js
arpl
jno
inc
dec
xor
add
adc
dec
push
inc
aaa
jl
inc
jae
xor
js
dec
xchg
dec
dec
xor
mov
gs
jo
shrb
or
dec
xor
mov
lcall
push
pop
cltd
xchg
pop
adcl
jae
orb
push
sar
adc
cmp
sub
cwtl
xor
pushf
or
mov
leave
add
in
dec
push
rol
cmpsl
xor
mov
sub
sbb
or
or
aaa
jmp
push
inc
lds
pop
movsl
add
or
fbstp
faddl
pop
cld
addb
add
inc
mov
dec
test
adc
outsl
fstpt
or
mov
push
out
jle
or
jo
pop
add
or
loopne
lock
add
rolb
or
fsubrl
mov
mov
shlb
xchg
cmp
and
loope
cmp
jb
lock
cli
add
push
cmpsl
adc
mov
lods
sbb
push
dec
sub
leave
mov
cld
in
add
repz
fdivr
cmp
js
add
and
mov
and
std
xchg
inc
or
add
enter
pop
out
mov
movswl
inc
push
outsl
xor
add
add
mov
cmp
pop
ja
adc
outsl
sub
rol
jg
bnd
mov
add
imul
rolb
adc
adc
sub
and
popf
in
mov
mov
xchg
and
xor
xchg
sbb
aaa
sbb
shll
and
pop
add
cs
cld
sbb
add
sbb
bnd
jecxz
pop
js
cmc
adc
dec
dec
mull
out
loop
lds
aam
out
mov
popf
cltd
xchg
and
leave
xchg
add
sub
outsl
inc
movl
fcomi
xchg
push
pop
jae
pop
mov
adc
mov
in
pop
and
lds
aaa
pop
lock
loop
dec
dec
lods
jo
mov
mov
mov
pop
xchg
mull
sub
mov
sub
push
add
cmp
lods
mov
cwtl
mov
loope
pop
ret
pop
in
mov
lahf
sbb
imul
sub
iret
cwtl
or
dec
sbb
push
shll
xchg
call
ret
pop
lock
or
ljmp
in
push
daa
adc
rorl
mov
cmpsl
mov
add
imul
icebp
sti
mov
fwait
rolb
sub
aas
in
or
data16
int
push
sub
cmp
test
or
rcl
into
fadds
mov
add
loopne
inc
inc
or
jl
cmpsl
sbb
pop
xor
add
xlat
daa
jge
loopne
imul
jb
cmpsl
push
xor
xor
je
sub
jmp
pop
add
int3
add
loopne
mov
push
dec
aas
fs
repnz
imul
pop
mov
pop
sti
andl
mov
icebp
add
add
sar
jg
push
xor
mov
mov
lea
loopne
out
adc
cld
xor
jnp
inc
mov
jnp
and
jl
cmpsb
mov
cli
insl
xchg
out
subb
adc
pop
mov
dec
cmp
mov
pop
mov
outsl
lcall
into
stos
or
lcall
outsl
repnz
loopne
push
xlat
in
sub
mov
inc
out
inc
inc
les
mov
xor
adc
xor
pushf
sub
sbb
je
xchg
test
jl
sub
cld
fsts
or
into
int
and
scas
push
loopne
or
or
sub
jg
shlb
cmp
cs
pop
jecxz
or
aad
aas
mov
insb
rorb
sbb
pop
cmp
jns
xor
xor
pop
add
sub
les
loop
ja
adc
pop
mov
cmc
fcoml
loopne
divb
in
add
jl
stc
pop
xchg
pop
and
jmp
adc
mov
xchg
or
sti
push
popa
je
int3
or
popa
fcmovnbe
sbb
adc
pop
xchg
and
mov
ljmp
mov
sub
jbe
les
dec
push
xchg
notl
out
scas
pop
add
pop
jge
add
inc
xlat
xchg
mov
insl
adcb
rcr
push
test
push
pop
imul
es
inc
sbb
mov
add
stc
xchg
push
pop
mov
mov
cs
mov
in
dec
hlt
sti
xor
fadds
mov
pop
or
adc
insl
cvttps2pi
aaa
test
or
push
movsl
ret
pop
arpl
cltd
xchg
andb
mov
pop
pop
dec
cwtl
pusha
clc
mov
jb
mov
sbb
dec
fsubrs
pop
inc
pop
jle
cmp
insb
pop
add
rcl
jb
push
stos
and
mov
roll
inc
loop
out
mov
repnz
pop
mov
mov
add
stos
xchg
inc
call
andl
das
jb
popa
stos
and
mov
pop
bound
in
in
ficoml
sub
jl
xchg
pushf
add
jl
test
lock
and
push
push
and
dec
add
sbb
jo
repz
xor
push
imul
sub
pop
xor
mov
testl
xorl
popa
out
push
cmpl
or
jg
fwait
or
repnz
popf
movsl
cld
dec
rorl
lcall
add
cld
lods
push
inc
push
push
shlb
jns
inc
call
dec
sbb
data16
movsb
xor
lahf
sbb
push
clc
rolb
outsl
xor
cltd
push
push
cmp
add
ret
jg
mov
outsl
addl
push
pushf
cs
push
sub
mov
jae
mov
clc
cmp
xor
mov
std
xchg
aam
test
jb
roll
ss
movd
mov
clc
pop
or
fstpl
dec
clc
adc
adc
inc
adc
fnsave
sbb
dec
aas
jmp
push
aad
jmp
mov
icebp
iret
inc
loop
sub
std
lret
hlt
jo
pop
les
dec
aaa
jo
dec
enter
imul
jae
add
mov
adc
adc
jecxz
lods
pop
adc
inc
call
rorl
fiadds
xchg
mov
add
mov
out
mov
sbbb
stos
cmpsb
ret
and
push
stos
sub
daa
push
cld
test
lock
push
push
ljmp
repnz
push
sarl
xchg
push
and
insl
ret
int
xchg
cmpsb
fwait
hlt
mov
roll
std
sarb
cld
sub
xor
ret
fldcw
mov
cmpsb
adcb
and
fs
cltd
ret
add
fisttps
aas
mov
inc
mov
mov
xchg
jl
insl
jne
aam
sbb
adc
jbe
repnz
andb
shll
add
gs
fsubrl
js
pushl
push
popf
dec
mov
pop
xor
iret
jp
push
std
fwait
or
xor
mov
mov
adc
call
sbb
icebp
in
pop
add
cmpsb
pushl
jge
sbb
cli
daa
add
orb
cli
mov
or
mov
mov
ss
add
jp
and
incl
ja
cld
sub
stc
adc
imul
adc
lcall
lahf
aaa
xchg
fsubrs
std
and
or
insb
push
and
mov
pop
orb
jnp
xor
lret
dec
call
push
sbbl
pop
outsl
lods
hlt
sub
push
adc
test
cmp
xchg
arpl
xchg
inc
stos
dec
cmp
mov
mov
xor
xor
idivl
cmp
jbe
cmc
ret
aas
fcoml
clc
mov
adc
test
inc
aad
pop
imul
popa
and
rcr
jo
cmp
add
stos
jle
aas
enter
cs
inc
fisttps
test
sub
sub
adc
in
mov
add
adc
or
incl
push
xor
shrl
pop
push
mov
jp
sub
cmpsl
jge
cmp
arpl
sbb
add
push
and
mov
mov
movsb
jecxz
clc
or
fnstsw
addb
out
ret
into
sti
fisubl
jo
incb
ljmp
cs
fadd
rolb
pop
aaa
insl
outsl
cmp
ljmp
shlb
push
pop
lock
cmp
sbb
xor
inc
add
scas
jecxz
jnp
inc
pop
lcall
add
cwtl
test
add
fsubl
popa
sbbl
add
pushf
test
sub
loop
ret
add
mov
ss
xchg
pusha
rcrb
pop
push
push
sub
jne
mov
sahf
jbe
sub
dec
nop
jl
push
in
addr16
fdivs
push
scas
shl
fwait
dec
xchg
adc
mov
sti
inc
sarl
mov
jecxz
jno
sub
mov
mov
or
xchg
ja
inc
ret
dec
push
sub
mov
lods
jnp
mov
mov
fldl
or
cmp
test
mov
sbb
sub
es
adc
sbb
mov
push
add
call
push
pop
je
mov
pop
jg
ret
dec
and
cmp
pop
cs
push
popa
push
dec
mov
je
pop
xor
mov
push
iret
push
or
pop
adcb
push
dec
test
cmc
call
jg
nop
cmpsl
and
pop
mov
inc
repnz
lds
cltd
into
lret
cld
out
push
in
push
jns
add
popa
aas
jb
cmpsb
xor
sbbb
addb
or
outsl
ret
mov
jbe
jle
adc
add
push
jge
mov
dec
inc
xchg
lahf
pop
gs
rcrl
mov
ja
add
push
push
test
mov
push
mov
cwtl
and
add
test
or
mov
jp
push
mov
rcll
ja
or
out
lods
mov
xor
fs
add
add
xchg
adc
in
mov
clc
dec
cld
add
dec
fsubrl
dec
outsl
and
sub
pop
fnsave
mov
dec
cmp
fs
push
clc
test
pop
sbb
movsl
jg
movswl
mov
repz
pop
push
dec
mov
add
xchg
jno
lods
enter
sarl
ret
sbb
jmp
inc
jmp
test
or
fadds
add
mov
push
lret
sub
mov
cmp
int3
lcall
inc
sti
inc
call
sub
cmp
jle
jg
mov
sarb
vpacksswb
jne
dec
sahf
xchg
cltd
push
lret
js
cmpl
fmull
call
inc
pusha
push
pop
adc
jge
pop
mov
shrb
lock
enter
stc
bound
jl
mov
mov
or
cmp
lret
sub
jns
movl
mov
inc
insb
das
inc
sahf
mov
xchg
jecxz
add
rcrb
add
mov
mov
fsubl
outsl
inc
sarl
jl
push
loop
loop
jl
outsl
lods
ds
jl
adc
or
rclb
mov
and
xor
and
xchg
pop
test
xchg
mov
ljmp
mov
jge
iret
cli
out
add
lds
rolb
mov
inc
out
clc
inc
in
or
test
mov
icebp
mov
lock
push
test
test
sub
mov
mov
ljmp
jg
sbb
out
loope
and
adc
mov
fistps
pushf
daa
enter
cmp
gs
pop
dec
jo
cmp
lcall
rcll
mov
dec
inc
repz
pop
rcr
ja
sbb
push
dec
std
push
add
out
mov
inc
dec
mov
ret
mov
mov
and
xlat
adc
add
test
adc
xor
pop
cmpsb
test
push
and
or
jecxz
and
stos
lahf
test
adc
sbb
loop
jmp
jl
flds
insl
gs
adc
mov
not
xor
lock
icebp
and
pop
mov
insl
push
and
lock
scas
mov
pop
push
xorb
cli
sub
rolb
mov
stos
cwtl
mov
test
fists
fcoml
test
cld
enter
mov
clc
or
into
push
jp
out
jb
dec
push
fdivr
sbb
sbb
add
ficomps
jp
call
sub
ljmp
loop
sub
push
add
jmp
sbb
sub
dec
sbb
sbb
in
rcrl
mov
test
push
pop
out
lahf
lods
mov
outsb
rcrb
incl
imul
je
cmp
fs
push
push
inc
in
test
std
or
icebp
lahf
xchg
out
inc
mov
pop
pop
clc
dec
pop
add
add
add
or
mov
andb
in
and
pop
cli
roll
fwait
mov
fs
pop
loope
into
xchg
rcll
lock
adc
push
pop
lret
mov
fcom
xor
fcompl
pop
jns
xor
aaa
pop
imul
push
sbb
sbb
enter
pop
call
xchg
jae
dec
aaa
ret
dec
aas
inc
add
mov
jnp
loop
inc
xchg
pop
ret
add
mov
js
cld
and
icebp
ja
shll
xchg
shlb
fidivrs
sub
cwtl
int3
icebp
sub
xchg
test
or
add
rcl
cmp
jmp
imulb
out
vpmacsdqh
sbb
lock
lret
xorb
add
in
pop
call
loop
or
sub
icebp
orl
pop
loope
dec
jle
ljmp
cmpsb
lock
pusha
scas
mov
rolb
in
inc
sub
ljmp
xchg
push
xor
arpl
in
cmpsl
add
popa
in
pop
aad
pop
adc
imul
xor
addl
ss
mov
rcr
addl
clc
and
jle
shlb
fs
out
xchg
mov
jge
movsl
inc
jb
mov
pop
cmp
int
ficomps
mov
mov
mov
andb
jb
adc
sbb
sbb
stos
mov
jmp
mov
inc
lahf
pushf
sbb
int
jp
mov
loopne
call
push
jb
out
mov
push
negl
mov
fisubs
add
push
enter
call
fcoms
data16
mov
enter
push
idiv
jmp
push
adc
and
std
inc
aaa
cmp
dec
iret
sbb
imul
orb
ljmp
jne
rcr
fsubp
rorl
adc
pop
in
xor
cmp
cwtl
pop
push
pop
pop
call
fs
mov
cwtl
sahf
in
mov
rol
mov
out
cmc
cli
call
pop
pop
cmp
xor
pop
pop
pop
arpl
jl
xchg
scas
mov
cld
mov
mov
int3
xchg
push
add
aad
and
and
cmp
das
out
js
dec
push
pop
outsb
cmc
cmp
mov
xchg
or
test
mov
test
adc
mov
incl
or
cs
cmp
push
inc
mov
call
and
rcl
rcrl
out
repz
in
jmp
push
sbb
xor
push
popf
push
pop
popa
pop
lea
insl
sti
mov
fwait
mov
mov
aaa
jmp
in
repnz
test
mov
sbb
jg
push
inc
iret
mov
jb
jle
jb
ret
mov
mov
aam
adc
loope
pop
movups
std
add
xchg
cmp
es
and
add
pop
pusha
notb
jge
mov
mov
mov
jmp
int
rclb
and
sub
stc
out
call
pop
imul
mov
ret
add
dec
repz
mov
add
push
adc
xchg
pop
adc
xor
pop
cld
adc
xchg
fcompl
shll
iret
push
add
jg
fwait
pop
add
dec
rcl
dec
inc
mov
imul
mov
popf
mov
lret
fucom
jmp
sti
lret
push
sub
mov
mov
repz
mov
mov
bound
rcl
ss
cmc
jp
sbb
call
pop
and
jg
mov
lods
mov
pop
fld
jno
out
mov
lods
das
sbb
sub
mov
push
movsb
push
jno
outsl
jle
test
fisubl
lock
xchg
cs
repnz
out
cmp
and
xor
cmp
xor
pop
pusha
decl
jl
xchg
test
sarb
iret
mov
cli
testl
cmc
aas
inc
push
pop
dec
pop
xorl
aas
pushl
mov
mov
pop
rcl
fcmovu
into
pop
sub
cld
jmp
cwtl
xchg
push
sbb
push
pop
mov
jl
pushf
movsl
sarl
jg
xorb
dec
fiaddl
xor
or
outsl
clc
inc
xor
shlb
xchg
fwait
jg
aas
cld
fmul
rol
jnp
ljmp
push
push
and
enter
cli
repz
in
outsl
pop
dec
stos
sbbb
mov
dec
pop
in
sbb
out
hlt
lock
sbb
sbb
ss
inc
dec
cmp
sbb
cmpsl
jp
loope
xorl
loop
out
jo
fisttpll
pop
sbb
cmp
dec
pusha
fdivl
out
ffreep
xchg
jg
mov
scas
mov
mov
lds
xor
leave
idiv
test
adc
dec
aas
in
insl
jae
ds
mov
mov
jg
xor
push
loope
cs
cmpsl
and
cmp
ds
dec
push
mov
pop
dec
rolb
mov
loopne
js
mov
pop
add
pminub
sbb
aam
pop
jne
insl
pusha
push
pop
cmpb
push
loop
iret
ret
dec
sbb
enter
jns
add
sub
aaa
stos
pop
stc
out
ss
pusha
gs
out
xchg
and
mov
jae
or
int
ret
jmp
pop
icebp
cmp
pop
and
dec
cld
dec
decl
push
movsb
and
pop
xchg
xchg
xchg
cltd
lahf
xor
out
mov
ret
bound
cld
in
add
sbb
shlb
sub
sti
lods
mov
jl
aaa
shrb
fnsave
and
lds
pop
icebp
inc
jg
xor
arpl
sbb
pop
jns
lahf
lret
mov
adc
hlt
jecxz
dec
and
pop
jle
int
jg
gs
arpl
xchg
xchg
inc
aaa
stc
int
fcomi
roll
int3
lret
andb
in
call
sbb
pop
out
aas
ficoml
dec
jnp
jae
jae
fnsave
fdivr
jg
lods
mov
dec
jne
loope
xchg
cmc
out
fwait
xor
lcall
daa
sub
push
pop
and
pop
jecxz
test
cmpsl
and
out
mov
fcmovne
push
repz
ficoms
daa
sub
and
cld
pop
mov
cmp
mov
movsb
iret
mov
ret
jmp
aaa
mov
insb
adc
or
pusha
daa
xor
cmp
or
cld
pusha
imul
mov
mov
fldcw
mull
cmpb
aaa
jg
pop
aaa
inc
sahf
pushf
jo
addr16
daa
jge
call
aam
fcomip
out
mov
clc
rolb
std
pop
std
repz
test
mov
cs
lahf
fdiv
loopne
out
adc
pushf
out
sub
test
add
daa
sub
lahf
xchg
push
pop
sub
xchg
xchg
stos
xchg
enter
sarb
sti
popf
jae
push
das
push
pop
cmp
mov
inc
xchg
addb
mov
into
mov
pushf
pop
push
in
lahf
cmc
repz
hlt
or
cli
lret
outsl
pop
cmpsl
aaa
ds
loopne
xor
scas
xchg
insb
mov
xor
subb
sub
repz
add
xchg
jns
ret
sub
push
das
lock
pop
mov
loop
xor
pop
cs
inc
es
pushf
std
in
xchg
sbb
ss
aad
scas
aas
fcmovbe
jne
xchg
data16
mov
xor
ret
stos
mov
ret
mov
loope
xor
rolb
rcrl
xor
fdivs
or
ds
or
xlat
lahf
popf
movsl
mov
rcr
out
jp
sub
add
xor
out
push
push
int
inc
dec
jne
jno
jo
leave
cltd
push
stos
cmp
int3
stos
sbb
xchg
mov
sub
negl
cs
push
inc
pop
push
jno
mov
jp
jnp
int
and
repz
stos
dec
and
mov
jle
adc
rcll
clc
mov
inc
inc
dec
push
inc
mov
jl
repz
mov
or
jecxz
push
inc
aaa
mov
xor
enter
push
lods
dec
addr16
outsl
jg
ret
pop
mov
pop
xchg
test
sbb
inc
and
fdivl
adc
ret
cs
into
inc
fsubl
cli
sbb
sbb
outsb
inc
lods
and
int
clc
test
pushf
cmpl
popl
inc
jae
adcl
jnp
bound
jbe
test
cld
cs
sub
scas
xchg
ret
aad
lret
xchg
mov
stos
cmp
push
outsb
adcb
jle
push
pop
jp
push
pop
test
inc
add
call
divl
psrad
loope
ja
sub
push
xchg
pop
addb
rcrl
ret
jmp
and
push
adc
incb
pop
fisttpl
jecxz
jbe
or
inc
mov
and
jmp
ljmp
in
dec
push
inc
movsb
insl
jle
scas
xor
sbb
sahf
movsb
xchg
xchg
fistpl
adc
sub
xchg
outsl
inc
fisubl
jl
push
clc
inc
andb
and
sahf
fs
ja
scas
mov
rorb
mov
inc
and
or
loopne
pop
cmp
pop
pop
arpl
ret
adcb
stc
xchg
pop
mov
pop
sub
roll
inc
das
in
fisubl
mov
rolb
add
mov
fwait
and
push
cltd
mov
stos
xchg
xchg
jmp
fists
jae
add
lret
testb
cld
sbb
fnsetpm(287
xor
push
scas
jbe
roll
push
mov
jb
add
scas
aaa
push
stos
adc
leave
cmp
pop
adc
out
outsl
mov
inc
push
rorb
test
aaa
mov
fcmove
mov
or
in
stos
or
mov
cld
inc
stos
inc
cmp
dec
setle
lods
clc
repz
fadd
insb
notb
lods
hlt
fldcw
sbb
sbb
mov
cmp
mov
xlat
adc
sbb
aas
cld
repz
rolb
cli
and
and
and
ror
dec
push
push
repz
pop
adcl
sub
sti
inc
aad
add
add
push
loopne
ss
fildll
push
fld
addl
outsb
aaa
jl
jle
xchg
int
scas
inc
mov
stos
jmp
pop
mov
sbb
add
sub
xor
sub
outsl
call
dec
cltd
jl
jo
fwait
mov
shlb
out
in
jae
nop
dec
mov
mov
pop
rcrb
and
cld
cli
nop
inc
mov
xor
and
stos
xor
and
pop
sub
cmpsb
inc
push
popa
jbe
shrl
cmp
lcall
enter
rorb
movsb
or
cmp
xor
daa
push
mov
push
cmpsb
rcll
mov
mov
xorb
clc
loope
and
rcr
adc
jo
push
aaa
movsl
loopne
adc
imul
push
movsb
cld
movsl
les
or
ret
lahf
sub
pushf
into
mov
push
pushf
pop
es
fidivrl
sbb
mov
imul
orb
cmc
jg
add
and
fadd
inc
add
cmc
in
das
or
inc
and
adc
inc
cmp
cmp
outsb
pushf
pop
jae
xchg
in
out
out
stos
rolb
push
inc
repnz
jmp
aaa
lahf
and
ds
xor
jne
sbb
jg
es
sahf
shr
int3
rcl
aam
push
sub
jle
mov
adc
inc
outsl
daa
mov
fiaddl
mov
lret
pop
sbb
lret
xlat
sti
sub
rcll
insb
sbb
filds
es
cmpb
je
js
lods
ss
cmp
ljmp
stc
pop
jle
stos
pop
sbb
pop
mov
sbb
sahf
jae
sarb
mov
fwait
push
rol
leave
iret
aam
xor
out
sub
push
pop
jp
subb
jb
data16
call
out
mov
fucomip
lock
mov
pushf
sarb
pop
mov
call
ret
fidivl
out
loope
add
fsts
xor
mov
mov
jo
dec
cmpl
jg
shlb
out
or
mul
test
and
mov
xchg
jnp
push
jbe
aas
decl
mov
lret
rcr
or
neg
and
stc
jae,pn
jno
sub
pop
inc
pushf
pushf
cmp
mov
popf
hlt
xchg
in
mov
fdivrs
mov
cmc
ret
fimull
push
inc
xchg
fs
clc
or
dec
jp
fwait
push
aad
sbb
lret
and
jl
inc
andb
and
out
lcall
nop
xchg
pushf
aad
xchg
lods
mov
loope
xchg
fmull
das
sub
pop
inc
rolb
insl
jg
aaa
jo
scas
mov
rolb
negl
std
add
and
pop
cmp
pop
mov
imul
ret
xchg
jnp
inc
push
mov
fwait
leave
jb
xor
and
cmp
into
mov
mov
pop
ja
xlat
hlt
mov
aad
aam
cmp
add
outsl
mov
sub
call
gs
mov
outsb
lcall
out
call
pop
pop
add
dec
sub
ss
pop
jne
lea
sbb
sbb
int
xchg
flds
push
mov
or
inc
fidivrs
sub
pop
repz
clc
out
ja
mov
cld
jnp
mov
test
push
mov
xlat
sub
test
and
in
inc
cmp
outsb
roll
int3
mov
rcrb
rclb
cli
cmp
push
dec
push
xor
push
inc
jmp
pop
test
sbb
lds
cwtl
icebp
cld
addb
sub
dec
push
aas
mov
aaa
push
sbb
pop
inc
enter
jg
fidivrl
sbb
dec
shrl
push
inc
mov
xchg
inc
insl
xchg
test
mov
js
decb
sarb
pop
cli
movsb
adc
call
xor
pop
pop
fcmovu
cmpsb
repz
xchg
jge
mov
enter
cmpsb
in
mov
loopne
aaa
xchg
add
sbb
sarb
cld
jge
mov
rcll
add
out
cmc
in
and
sbb
cli
sub
push
out
pop
push
mov
cmp
fdivr
xchg
mov
lock
cmp
mov
mov
mov
sub
jbe
repz
lahf
icebp
cli
pop
mov
test
fdivrp
inc
jmp
mov
sbb
inc
inc
and
sub
scas
lahf
popa
clc
adc
xchg
push
pop
and
xor
mov
dec
arpl
stos
jp
mov
loop
lods
repnz
sbb
jl
or
lock
stc
dec
les
cs
pop
push
mov
sbb
push
push
add
push
shl
out
cmp
sub
call
sarb
xchg
push
inc
jne
insb
int3
mov
orb
mov
adc
loopne
push
adc
mov
sbb
rclb
pusha
pop
fadds
jge
mov
cmpsl
mov
lods
mov
mov
mov
mov
xlat
pop
aam
data16
mov
pushf
xchg
jb
mov
mov
jnp
and
pop
cmp
aaa
ljmp
push
xchg
subb
xchg
call
std
shl
pop
and
in
enter
ljmp
test
jg
inc
xlat
shrb
adc
add
sub
sarb
pop
inc
imul
xchg
adcl
xchg
adc
out
fstpt
popf
xchg
cmp
push
mov
mov
jecxz
test
mov
clc
out
mov
mov
shl
cmp
addr16
std
cld
adcb
bound
inc
cmc
cwtl
pop
push
mov
xor
mov
push
loope
aas
loop
xorl
shrb
and
mov
jle
cltd
adc
cltd
inc
xchg
xchg
cmpsb
mov
jnp
push
clc
out
pop
push
sbb
or
push
ss
mov
outsl
jge
ljmp
mov
jns
loope
std
sbb
jmp
aaa
and
syscall
inc
repz
imul
push
fstpt
movsb
lods
mov
loopne
shlb
out
popf
out
lock
lcall
xor
ja
pop
cmp
ret
mov
inc
mov
or
sub
pop
lcall
and
or
pushf
xchg
cwtl
sahf
xor
pusha
out
fwait
iret
aaa
jg
cmp
push
fdivr
hlt
incl
lahf
jno
xchg
js
jmp
inc
push
les
lahf
int
mov
and
push
jle
add
pop
cmc
jno
lds
ja
call
popf
cld
lods
lret
sub
fsubs
std
ficoml
add
pop
sub
mov
out
mov
cltd
cmpsb
lods
mov
std
pop
outsb
pop
rcrb
sbb
or
sbb
dec
pop
pop
dec
pop
xchg
sbb
and
push
or
inc
fsubr
icebp
std
dec
jmp
sarb
cmp
andb
sbbl
pop
aaa
daa
les
fcmove
stos
add
incb
iret
sbb
inc
push
pop
int3
ja
jns
or
jge
jae
mov
cmpsl
mov
pop
dec
sub
add
xor
out
jp
cld
mov
xchg
stc
mov
in
in
pusha
add
xchg
and
xor
sbb
scas
insb
pop
or
fldl
jmp
outsl
fbld
mov
das
cmp
sbb
mov
repz
pop
and
stos
inc
pop
lock
les
mov
sbb
inc
pop
cltd
outsl
movswl
outsl
pop
xchg
rcll
push
into
cmc
rol
aas
jp
cld
jmp
add
sub
cmp
mov
stos
sbbb
test
cmpsl
inc
test
mov
add
hlt
lfs
xor
subb
and
int
push
push
jmp
enter
in
decl
pop
popa
sbb
int3
mov
and
push
in
mov
sub
std
addr16
inc
popa
idivb
out
fcmovnb
sub
or
cli
in
pop
pop
rcrb
scas
shrb
push
push
pop
lods
pop
mov
pop
pushf
xchg
andl
stos
mov
rcl
push
fldcw
outsl
sahf
aaa
jecxz
mov
mov
aaa
pusha
lock
jge
decb
xchg
cltd
popa
lods
stos
lcall
js
loope
addr16
movsl
pushf
mov
in
dec
dec
scas
addr16
dec
addw
xchg
mov
push
cli
out
fimuls
sub
jg
pop
loop
fisubl
inc
fcoms
jo
sar
dec
and
inc
xchg
adc
es
fimuls
push
sti
jecxz
and
test
pop
cmpl
xchg
stc
pop
pop
mov
sbb
sub
cmp
cli
dec
pushf
xchg
push
jp
and
jae
stc
test
jns
xchg
pop
lods
outsl
fsubrs
and
adc
push
mov
repnz
push
pushf
or
sub
mov
jmp
jle
xchg
test
cmpsl
jecxz
push
cli
subl
and
inc
imul
aam
inc
push
pop
out
push
xchg
stc
mov
fwait
ret
pop
pop
and
mov
out
clc
adc
xchg
cld
adc
es
cs
rclb
icebp
mov
loopne
jmp
sub
ret
cld
cmp
sbb
jmp
stc
loope
mov
inc
push
bound
xchg
movsb
jno
mov
mov
call
inc
mov
enter
leave
fcomi
sti
add
adc
jle
push
xchg
pop
push
jbe
imul
ljmp
xchg
jge
mov
push
sub
or
sub
mov
lds
lea
or
leave
jb
xchg
fistpll
arpl
in
rolb
icebp
push
push
pushf
rcrl
shlb
inc
dec
dec
xchg
jne
orb
adc
fistpl
rclb
lret
and
sbb
cld
or
popf
mov
int
adc
shll
mov
out
int3
pop
js
fbld
push
or
add
rcrb
out
shlb
cli
das
jo
mov
lds
cld
daa
cld
rcl
out
cltd
fisttps
je
rolb
add
pusha
push
fnstsw
lock
incl
or
push
lret
repz
out
mov
cmp
jl
js
push
mov
ljmp
icebp
add
mov
in
out
aas
sub
add
clc
popf
adc
shlb
movsb
clc
xchg
push
jno
data16
std
inc
shlb
ret
push
psllw
in
mov
pop
sbb
sbb
jno
pop
fistps
push
and
mov
jnp
pushf
aam
xor
sti
inc
and
push
xor
loope
jbe
dec
dec
movsb
mov
inc
std
mov
daa
ret
call
call
out
push
orb
mov
pop
test
popf
cmpsl
and
iret
mov
jmp
and
fcomps
add
cli
add
in
sbb
popa
clc
jmp
pop
les
pushf
imul
pop
sbb
leave
lret
daa
adc
in
add
and
xor
pop
repz
ficompl
dec
pop
out
shrb
inc
pop
loop
push
std
mov
sub
repz
xor
jmp
push
loop
clc
or
adc
jl
aam
loope
pusha
sbb
pop
sub
dec
fwait
and
js
dec
xor
xor
jb
lds
cmpsl
mov
incl
repnz
jle
and
sti
std
add
push
stc
scas
getsec
mov
outsb
inc
pushf
mov
orl
jg
decl
lods
add
adc
cwtl
sbb
xor
and
dec
lock
nop
fisttpll
xchg
scas
xor
jno
jg
xor
rcr
ret
pushf
mul
push
cmp
loop
aaa
pop
push
popa
dec
outsb
sbb
jle
jecxz
mov
jae
or
out
xor
sarb
testl
jo
pop
sub
sub
mov
jp
ja
hlt
mov
pushf
cmc
or
xchg
aas
aas
sub
rolb
bound
mov
add
out
subb
fsub
or
outsl
decb
cs
push
push
insl
jg
dec
mov
repz
mov
mov
in
add
mov
stc
mov
and
scas
dec
cs
jbe
xorl
push
cld
lock
mov
rcl
and
mov
imul
add
push
nop
test
sbbl
cmpsb
mov
adc
ljmp
and
aaa
hlt
inc
dec
cmp
pop
orl
xchg
cltd
scas
inc
xlat
mov
into
cs
cld
fimull
dec
inc
dec
dec
je
outsb
jle
rcrb
fwait
mov
jmp
push
es
addb
icebp
loop
push
or
clc
fwait
popa
shll
push
mov
push
cli
dec
and
pop
fsubr
pop
aaa
sbb
sbb
dec
jl
inc
mov
mov
adc
das
outsl
clc
js
rcr
xchg
idiv
repnz
loopne
cld
and
pop
dec
mov
icebp
ds
shlb
call
jns
lock
sbb
adc
jae
ljmp
lea
lret
ret
fwait
mov
and
xor
cli
pop
add
fiaddl
sub
mov
aas
popa
inc
adc
mov
mov
pushf
negb
or
out
es
mov
cs
call
dec
dec
aas
fiaddl
ret
lock
sbb
sarb
mov
daa
andb
jnp
mov
scas
decl
insb
cmc
cmp
add
repz
mov
add
jmp
notl
fidivl
cmpsb
inc
cmp
pushf
lock
test
fwait
decl
int3
fcomp
in
push
pop
ljmp
hlt
xchg
jbe
shl
mov
pop
mov
mov
jecxz
push
jmp
or
push
ss
push
push
and
out
mov
xchg
mov
mov
jnp
lods
pop
sahf
iret
stos
add
cld
inc
lret
rol
and
call
lock
inc
loop
and
pop
mov
jle
nop
pop
je
jnp
outsl
mov
test
scas
sbb
loope
inc
adc
stc
fwait
icebp
int
or
mov
arpl
stos
pop
sarb
sarb
inc
cmp
movhps
sub
sbb
push
cld
out
int
cmpsb
je
mov
loope
and
push
fcomip
or
add
aas
sub
push
js
out
mov
inc
insl
rolb
mov
repz
push
ficomps
cli
pushf
sti
add
pop
rcl
cmp
mov
shlb
or
and
std
imul
cmpsb
bound
jl
xchg
jle
pop
fisttps
inc
mov
scas
mov
inc
enter
enter
fidivrl
cmp
adc
lock
pop
pop
dec
fisubs
popl
setp
mov
lock
sub
stc
dec
mov
push
pop
arpl
sub
sar
xchg
cwtl
sub
mov
into
pop
rcr
cmc
das
cmp
adc
push
inc
ds
push
shr
xor
out
jnp
sbb
loopne
out
push
and
inc
clc
out
in
repz
clc
cli
sub
push
push
loope
adc
sub
sbb
xchg
mov
into
jl
sbb
or
mov
dec
cmp
pop
sub
test
mov
xor
lret
sub
lret
lock
repz
pop
stc
cmpsl
cmp
data16
aam
lcall
or
adc
fistpll
sub
push
push
inc
lret
bnd
stc
pop
clc
fidivl
jae
pop
mov
fisubrl
and
mov
cld
xchg
or
shlb
jae
out
js
mov
mov
into
sub
or
or
cli
dec
push
add
sbb
fdivs
inc
push
mov
push
orb
cli
dec
lods
and
cli
sbb
repnz
loopne
in
pushf
std
mov
pop
loopne
add
sbb
jne
lret
mov
mov
sbb
int3
loop
xchg
push
loope
and
add
dec
jle
dec
push
mov
push
loopne
or
sbb
pop
ljmp
repz
movsl
pop
inc
xor
cld
in
imul
lods
mov
xchg
in
and
adc
loope
out
hlt
subb
xor
inc
or
sub
icebp
out
adc
pushf
fsubl
shlb
mov
shlb
std
mov
loopne
adc
inc
sub
push
out
ret
jg
mov
jg
mov
lods
lods
popa
in
xchg
test
stc
popa
sub
fwait
jg
popa
jbe
arpl
into
dec
mov
mov
daa
adc
push
mov
outsb
adc
jge
mov
push
mov
mov
lret
out
adc
es
or
adc
and
sbbb
shl
xor
incl
cmpsb
into
in
push
or
or
pop
das
add
pop
push
pop
dec
push
aas
add
stos
cltd
jo
pushf
pop
jmp
clc
mov
cli
and
outsb
sbbl
add
jmp
sbb
xchg
inc
enter
scas
aaa
mov
add
adc
xchg
pushf
popa
fcoml
sbb
xchg
pop
sbb
test
das
add
hlt
clc
jle
popf
adc
aaa
jo
decb
bound
push
loopne
hlt
xchg
or
pop
rcr
aam
cs
add
iret
and
mov
dec
push
icebp
mov
bound
mov
pushf
mov
or
les
ret
outsl
jg
bound
cli
push
adc
and
loope
pusha
jle
pop
popa
push
data16
addb
add
cmpsl
sub
pop
into
or
fbld
and
xchg
jbe
mov
push
imul
test
or
mov
shrl
mov
xor
sti
sbb
psrlq
mov
cmp
ja
inc
pushf
sahf
mov
test
popa
push
pop
insb
mov
roll
jg
lea
and
xor
cmpl
in
jl
outsl
aam
std
es
nop
xchg
pusha
leave
inc
outsl
int3
push
sbb
repz
shlb
cmp
jbe
dec
loope
pop
and
ds
iret
fimuls
cli
inc
fisubrs
cli
push
clc
or
outsl
inc
stos
xlat
outsl
mov
and
mov
es
mov
rorb
sub
rolb
add
out
push
sbb
sbb
xchg
inc
mov
xchg
cmpsl
pushf
xor
mov
rcl
push
push
adcb
repz
fildll
jo
mov
mov
push
pusha
lods
mov
les
cmp
sbb
das
inc
dec
mov
mov
dec
jns
mov
in
loope
loopne
jl
repnz
sahf
cmp
cli
pop
mov
pop
dec
les
inc
int3
pop
pushf
xor
aaa
add
fwait
or
outsl
pop
cmp
aas
and
cmp
mov
cltd
jbe
hlt
out
mov
addr16
aam
ffreep
or
xor
aad
xchg
push
clc
inc
sub
movb
aas
add
fcomip
lahf
out
jns
shr
cli
sbb
pop
sub
inc
dec
push
inc
jmp
cmp
leave
mov
push
jecxz
out
add
sbb
pop
jns
pop
xchg
pushf
and
jo
xchg
mov
test
jns
lret
rcrb
ret
js
rcrb
pop
push
push
loop
aam
lcall
lods
jl
fwait
rcl
ret
mov
stc
push
or
dec
pop
jae
mov
adcb
mov
mov
pop
add
ljmp
incl
jle
cmp
inc
and
lcall
lret
imul
pushf
add
sub
cmp
dec
push
in
js
fcmovb
daa
jl
outsl
cltd
movsl
jnp
imul
and
das
mov
sbb
mov
or
repz
popf
pop
dec
mov
lfs
movsb
rcl
fstpl
and
dec
ret
adc
pop
jecxz
xchg
xor
pusha
mov
push
imul
sub
call
rcr
sar
add
fisubl
pushf
das
pop
mov
cltd
pop
pop
adc
lea
and
mov
sub
mov
loope
sub
add
insb
dec
mov
sarb
cltd
insb
adcl
xchg
mov
inc
int3
sub
cld
pushf
sti
into
subb
inc
in
push
jle
push
popf
mov
xchg
in
dec
std
adc
and
loopne
adc
adc
cmp
std
iret
cmp
cld
cld
jle
fcoms
push
in
stos
or
in
add
in
ficoml
rclb
push
or
fwait
fwait
lods
stos
ret
cld
sar
out
in
sbb
adc
inc
es
fcmovu
and
insl
movsl
dec
addr16
jne
push
or
pop
cmc
cmpsb
xchg
push
push
push
lret
pop
inc
hlt
xchg
or
or
sub
aas
xorb
repz
ds
jl
popf
in
xchg
sub
mov
das
cli
mov
repnz
es
rcrb
cltd
dec
inc
jp
mov
mov
pop
lahf
sahf
stos
sub
jo
sub
stc
inc
rolb
jle
outsl
adc
popa
pop
dec
insl
push
shlb
nop
xchg
fsubr
into
clc
and
add
sbb
xchg
fidivs
jns
pop
cmp
xchg
lcall
mov
rcl
repz
or
cmc
adc
scas
clc
and
push
dec
sbb
jae
dec
jne
jge
ret
test
rclb
mov
stc
push
xchg
cs
pop
add
arpl
pusha
jns
test
adc
adc
and
mov
stc
mov
mov
mov
dec
fisubl
jne
mov
imul
jne
pop
mov
fwait
mov
sub
mov
outsl
mov
fidivs
daa
push
jnp
rorb
add
cmp
std
or
xchg
jg
xor
in
pop
out
gs
fidivl
pop
movsb
test
push
jge
into
clc
pop
cmc
sbbl
sti
popf
mov
adc
mov
inc
sbb
jge
xchg
rcr
pop
je
loope
dec
outsb
inc
adc
mov
cltd
adc
call
icebp
add
or
cmp
adc
mov
fnstcw
add
movsl
rol
rcl
lret
sarl
test
mov
stos
jbe
sbb
inc
movsb
sbb
push
dec
pushf
cmp
mov
cmc
mov
hlt
stc
loopne
rcrb
mov
arpl
xor
xorl
mov
out
iret
lret
rcll
pop
push
xchg
push
pop
push
iret
adc
das
rcrb
inc
leave
mov
xchg
jge
arpl
jg
nop
sbbb
lods
mov
jg
insb
aas
fstpt
hlt
call
sub
mov
dec
aas
push
pop
bound
data16
lock
js
pop
cmpl
jmp
faddl
pop
sub
push
push
push
pop
lock
ret
test
lret
pop
mov
mov
or
pushl
xorb
dec
and
xlat
ret
add
xor
sbb
push
fcmovb
pop
or
cmpb
iret
xor
mov
jno
jb
xchg
cld
shlb
fimull
int
test
dec
mov
inc
pop
jle
jns
push
imul
xchg
clc
xchg
test
adc
dec
mov
jmp
or
cmp
and
pop
ja
pop
lret
pusha
loopne
xchg
xchg
mov
rorl
call
fucom
shlb
sbb
ror
xorb
ss
cmp
popa
push
push
inc
xchg
pop
leave
xchg
adc
incl
inc
int3
pop
mov
out
aam
iret
hlt
movsl
adc
filds
sbb
sbb
test
push
jne
aas
add
mov
add
jo
mov
push
jmp
ljmp
pop
movsb
daa
dec
push
push
pop
out
lods
jp
push
addb
test
push
pushl
jl
ret
aam
rorl
and
pop
and
ds
xor
outsl
out
ret
loop
push
sbb
lods
mov
shll
mov
loopne
repnz
out
push
lds
add
sub
jg
popa
lds
mov
movsl
cmpsb
mov
fbstp
outsb
ja,pt
ficomps
push
addr16
and
mov
js
mov
sbb
imul
mov
sbb
cmp
shrb
cwtl
lahf
lea
adc
mov
fldcw
pop
or
and
jbe
cmpb
pushl
jmp
jl
cld
gs
mov
rcl
push
mov
jns
sbb
jne
inc
xor
jge
hlt
push
clc
dec
mov
mov
and
sar
mov
pop
inc
sahf
push
sub
repnz
sub
test
mov
cmp
nop
pop
mov
mov
lretw
xchg
sarb
ja
in
ljmp
xor
mov
popa
bound
sub
mov
inc
incl
ret
mov
mov
cli
repnz
jo
fiadds
cld
push
adcl
subb
mov
cld
mov
lock
cmpsl
ds
hlt
repz
adc
mov
and
mov
imul
fsubrl
push
pop
stc
pop
movsl
leave
scas
add
fildl
sbb
add
ds
push
pop
pop
sub
lret
jno
test
add
mov
add
or
or
sbb
xor
dec
push
inc
inc
hlt
popl
jbe
mov
fwait
ror
inc
sub
sbb
loopne
imulb
inc
cmp
sbb
jl
int
jl
xchg
push
xlat
fiadds
roll
loop
xor
mov
in
pushf
inc
inc
inc
imul
repz
rolb
movsb
fsubs
lock
pushl
ds
mov
arpl
les
cmpsl
cli
xchg
jecxz
xchg
scas
mov
rclb
jmp
mov
push
loopne
pop
push
xchg
inc
cltd
test
in
test
incl
sbb
fidivl
sar
add
adc
jns
decb
xchg
cmpsl
pushf
mov
test
aad
pop
lret
and
cmp
lahf
mov
ss
inc
aas
ds
data16
jae
call
ficoml
nop
ds
jge
out
fwait
pop
movsl
out
loop
daa
fistl
add
invd
ds
clc
out
lock
inc
nop
push
insb
fiaddl
mov
enter
jg
cmp
aaa
fmull
and
or
push
xor
ljmp
js
pop
repnz
fisubrl
repz
lcall
push
std
test
andb
and
and
es
mov
xchg
cwtl
jle
mov
jg
jmp
hlt
cli
add
std
and
mov
adc
mov
or
sahf
fiadds
adc
int3
arpl
pop
or
pop
jns
fistpl
pop
insl
call
mov
les
loopne
xchg
xchg
jle
ret
jp
mov
sub
call
adc
andb
xor
adc
jecxz
xlat
xchg
jg
xchg
mov
add
ds
inc
xchg
mov
adc
aaa
jo
pushf
ficoms
push
adcb
pop
stc
cld
add
scas
pushf
mov
cmp
add
hlt
repnz
sub
ss
subl
sub
and
scas
lods
sbb
pop
mov
xor
test
shrb
dec
loope
adc
fsubrp
sbb
mov
push
xchg
push
addb
cmpl
stos
push
dec
pop
std
jmp
and
int
std
adc
stos
dec
pusha
push
mov
test
lret
lcall
rol
iret
div
push
bnd
sbb
ficompl
inc
inc
jae
les
sbb
mov
push
cli
mov
orb
sahf
sub
inc
inc
dec
inc
xchg
mov
jo
push
jns
and
andb
cli
inc
cld
mov
sub
mov
push
dec
std
mov
xchg
loopne
test
test
pop
sub
loope
ret
adc
pop
lcall
test
imul
js
pop
enter
jle
lret
mov
pop
mov
sbb
repz
push
inc
call
dec
adc
mov
cmp
lea
or
decb
mov
fadds
inc
icebp
das
mov
sub
xchg
cwtl
jg
ret
loop
push
pop
cs
shrb
inc
aaa
cmp
lcall
and
outsl
jle
xchg
pop
mov
sbb
pop
cs
imul
stos
dec
enter
inc
and
lock
imul
insb
fildll
mov
mov
add
push
add
es
das
add
mov
jle
pop
jo
adc
iret
test
call
js
mov
jmp
adc
or
rcll
mov
fiaddl
sahf
add
popa
aad
mov
ljmp
sbb
outsl
jle
rcrl
sub
das
popa
imul
xor
stc
test
mov
scas
pop
ficompl
cltd
mov
inc
sbb
and
inc
adc
dec
clc
int
outsl
adc
cltd
cmpb
fwait
aas
jl
filds
push
ret
outsl
hlt
sub
sbb
cs
and
pop
rcrb
stc
inc
jg
mov
mov
lcall
add
testb
add
sub
push
cmp
sbbl
addb
fwait
mov
mov
pop
jle
out
es
pop
in
push
dec
ds
dec
loopne
jp
mov
sbb
hlt
pop
mov
dec
xchg
mov
iret
bound
or
and
xchg
cmp
mov
inc
fisttps
add
jno
sbb
mov
lock
loopne
sti
jle
cld
aaa
popa
fildl
js
lahf
outsl
jp,pn
cmp
add
mov
xor
mov
jno
cmc
adc
push
push
xor
mov
call
mov
push
loop
jl
fbld
cmc
pop
ljmp
sub
or
xor
lret
mov
mov
dec
ret
inc
fcomps
int
xor
daa
mov
dec
js
movsb
outsl
pop
xchg
lock
lods
scas
mov
cli
lret
mov
xlat
jge
ret
xor
add
lock
mov
cld
adc
dec
push
jg
jo
jmp
loope
ret
push
insl
lret
loop
adc
add
or
lahf
inc
subb
daa
shrb
jge
loopne
cmpl
fisubrs
stos
pop
les
xchg
icebp
ret
in
pop
js
lock
inc
popa
data16
push
test
add
ret
enter
jmp
loop
in
repnz
repz
push
inc
mov
pop
ja
adcl
or
stos
mov
inc
test
mov
fucom
aas
mov
hlt
sub
filds
in
test
test
mov
fstps
loop
shlb
in
pusha
pushf
hlt
push
jmp
repz
push
inc
fcoml
push
mov
push
cli
gs
jle
out
shll
repnz
pop
test
jge
mov
cmp
pop
inc
jge
jnp
jo
ja
outsl
aam
in
movsb
stos
cwtl
test
push
cmp
mov
ret
fcoms
cli
or
inc
jl
gs
mov
lock
cli
testl
sti
popf
mov
jno
and
les
int
call
or
mov
adcb
mov
scas
mov
iret
lahf
dec
push
enter
cli
inc
sbb
sub
sbb
subb
rcll
fstpt
lea
lods
add
rorb
notb
daa
push
fldl
mov
inc
dec
and
inc
aas
jp
addr16
adcb
push
icebp
mov
cld
out
aad
push
pushf
cmpsl
outsw
and
jecxz
pop
stos
insb
hlt
repz
das
jns
hlt
call
pop
push
add
push
negb
cmc
aas
cld
cld
arpl
shlb
out
push
ja
das
rorb
sub
into
mov
in
loopne
jecxz
add
and
sub
ljmp
push
add
movsl
outsb
cltd
aam
pop
loopne
jb
pop
xor
push
fmuls
outsl
push
scas
inc
or
aam
add
add
iret
jle
pusha
mov
inc
adc
ficoml
push
pop
push
mov
test
pop
jnp
addb
mov
dec
enter
pop
mov
cmc
out
sysexit
cmpsb
rclb
out
mov
shrb
xchg
popa
mov
call
mov
and
push
out
mov
test
movsl
subb
jge
mov
mov
or
test
adc
pop
cmpsl
outsl
push
mov
jle
inc
js
adcb
add
dec
cld
jnp
filds
mov
or
and
sbb
sbb
xchg
push
sub
int
pop
test
jo
mov
rcrb
xchg
mov
out
int
leave
das
fimull
fmulp
push
sub
jg
fwait
pusha
pop
or
cmp
adc
ret
shl
cmc
cld
mov
pusha
mov
shlb
push
or
pop
scas
jp
add
movsl
movsb
movsb
rcr
adc
pusha
cld
jmp
fprem1
add
sub
mov
cmp
inc
fs
test
mov
mov
lahf
aad
push
pop
hlt
stos
and
and
clc
cmpsl
ds
push
cltd
inc
push
mov
into
rcl
push
or
pop
or
lahf
ret
ficoms
inc
fadds
dec
push
inc
xor
mov
stos
cmc
add
cmpsl
xchg
cld
out
hlt
std
sbb
lock
adc
dec
mov
lock
inc
cld
push
mov
xchg
sahf
sub
icebp
xchg
mov
push
subl
jnp
jae
dec
mov
xchg
jb
popf
push
mov
das
mov
push
or
or
je
nop
std
sub
cmp
scas
dec
cmp
inc
jl
mov
pushf
push
insl
xchg
mov
cmp
mov
paddd
je
cld
cld
and
rclb
iret
aaa
incl
icebp
out
insb
cmpsl
jp
inc
lret
stos
or
test
mov
arpl
or
andb
lea
xchg
pop
pop
sar
ljmp
sbb
push
nop
sub
clc
push
xor
jns
mov
repz
jnp
addr16
cmp
mov
aam
jl
out
out
js
or
lret
inc
aas
addr16
jne
xorb
cmc
jbe
loopne
xchg
mov
hlt
daa
cld
or
cmc
or
ficomps
insl
pop
js
stc
pusha
out
mov
scas
lcall
pop
sub
out
push
lods
or
jmp
repz
sub
cmp
cmp
mov
lea
fidivl
lahf
push
add
and
pop
jnp
pushf
sbb
jne
inc
mov
addr16
jns
xchg
pushf
jg
mov
ljmp
out
push
scas
insb
xor
insb
cmpl
mov
mov
loopne
movsl
cmp
and
sbb
inc
out
pop
xor
adc
inc
xchg
lods
int3
fstpt
xor
cmp
es
mov
cld
pop
cltd
pushf
xchg
js
lcall
ffreep
pop
icebp
inc
add
inc
jg
sbb
and
fidivl
decl
mov
int3
mov
mov
psadbw
cs
xor
clc
pop
inc
dec
fdivr
sbb
jge
push
out
pop
sbb
test
sbb
stc
mov
mov
das
xor
les
arpl
push
jp
xchg
xchg
mov
mov
mov
out
cmpsl
fwait
fwait
mov
adc
sbb
or
imul
add
int3
xchg
xchg
bound
and
cmpsl
movsb
sub
push
sbb
cld
or
add
push
pop
or
scas
jb
dec
pushf
in
mov
mov
push
lret
pop
jecxz
decl
and
lcall
push
and
pop
roll
dec
mov
mov
inc
dec
and
mov
mov
mov
loopne
cld
cmc
das
test
sbb
cltd
xor
pop
cmp
mov
pop
lock
mov
ret
loope
push
hlt
call
xchg
pop
adc
ja
cmp
xor
fldcw
mov
xor
lea
sub
mov
in
pop
or
cmp
add
lahf
jg
jne
inc
pushf
mov
fs
sub
xchg
xor
decl
fstpl
adc
out
rcrl
mov
add
inc
push
pop
cmpsb
cmp
int
sub
xchg
xchg
lret
pop
jo
outsb
jle
daa
pop
subb
push
jmp
and
shrb
pop
ret
adc
sbb
pushf
mov
dec
notl
add
out
shlb
adc
jne
pop
mov
shl
popa
arpl
jg
or
enter
mov
clc
push
daa
loope
or
jb
mov
mov
ljmp
lret
repnz
mov
cmp
sub
ds
cld
out
mov
popa
xchg
in
mov
mov
rclb
pushf
int
adc
or
outsl
jbe
aaa
push
xchg
xorl
cmc
popf
lea
in
pushf
aas
out
repnz
jecxz
sbb
fisubrl
jno
es
dec
mov
push
cmp
insb
pushf
xchg
mov
fcomip
and
ret
pusha
jmp
cmpl
mov
les
orl
fwait
lcall
jl
rcll
filds
adc
jmp
add
push
and
in
sahf
cmpsb
jae
cmc
xchg
int3
mov
jecxz
cmc
mov
ljmp
das
pop
push
pop
jl
sub
pop
sti
jp
sbb
cmpsl
mov
mov
lret
sbb
or
xlat
push
mov
or
jle
outsl
pop
pop
loop
stc
lock
mov
cmp
push
aaa
cld
mov
and
adc
xor
rorb
inc
cli
lahf
insb
jmp
insl
divb
inc
lods
pushf
dec
mov
mov
add
pushf
and
sbb
das
cld
pusha
and
add
push
mov
adc
popa
or
and
cld
adc
sub
adc
test
loopne
jge
lret
cltd
pop
es
enter
jg
nop
iret
lret
adc
sub
cmp
sub
pop
cmc
push
mov
outsl
jbe
ja
jbe
xchg
add
std
int
in
cmc
sbb
xchg
and
push
mov
das
add
push
into
xorb
leave
jle
enter
fiadds
loop
out
daa
cmp
sub
lret
cli
push
sbb
xchg
movsb
xchg
xchg
sub
add
mov
faddp
and
lea
das
adc
or
inc
xchg
inc
ret
fstp
mov
ds
mov
pushl
rclb
sub
add
sbb
sub
shl
test
fistpll
dec
cmp
les
or
ljmp
or
ja
sub
lahf
aas
pop
push
mov
cmpsl
jb
sbb
aam
pusha
int
xchg
stc
mov
dec
cmp
jae
hlt
mov
bound
inc
outsl
outsl
mov
aad
add
push
loopne
out
push
adc
push
push
xchg
popa
test
dec
adc
shl
int3
pushl
rcr
leave
test
jp
push
loopne
sarl
xor
ja
adc
aas
out
inc
lcall
ror
daa
mov
sbb
and
and
imul
or
lods
addb
stos
aas
icebp
fldenv
ud0
and
stos
adc
mov
roll
cmpb
and
inc
jg
push
iret
mov
mov
jl
jecxz
scas
sbb
adc
pop
aaa
add
iret
lea
test
outsl
cmpsb
jnp
fs
mov
mov
fdivr
repnz
movsl
and
popa
adc
push
xor
outsl
stc
mov
push
popf
jae
loope
mov
fimuls
hlt
addb
ljmp
push
sub
pop
dec
popa
outsb
jae
les
cmp
mov
fimuls
int3
repnz
mov
or
stc
repz
movsb
sbb
sub
in
fists
mov
inc
push
mov
leave
mov
add
in
adc
adc
or
adc
cmp
inc
outsl
pop
fs
jle
addr16
rcrb
loopne
loope
aaa
icebp
xchg
iret
idiv
ret
add
xor
add
bound
ss
stos
mov
push
loopne
push
adc
ret
ljmp
ror
clc
in
stos
pop
or
mov
shll
loop
adc
cwtl
sahf
movsl
jae
dec
ds
imul
mov
add
lret
xchg
call
arpl
mov
xchg
xchg
xchg
mov
add
mov
out
test
std
mov
and
sbb
xor
aaa
lock
or
add
ficoms
in
loop
jl
stos
mov
adc
xor
arpl
decb
cmpsb
xorl
out
cli
pop
mov
or
mov
xor
inc
pop
std
pushf
push
cmpb
sub
incl
test
rcrl
pushf
dec
mov
cld
cmp
popa
push
xchg
inc
jle
mov
test
lock
shrd
mov
add
add
cmp
cmovg
inc
popa
push
arpl
mov
lahf
mov
fnstsw
dec
shr
adc
add
or
ljmp
jge
dec
sbb
pop
mov
cli
adc
push
into
sub
and
cld
xchg
and
and
ret
pop
les
add
rolb
push
stos
mov
mov
int
cli
pushf
jg
out
movsb
add
adc
das
ss
ret
xor
subb
ljmp
loopne
aas
clc
ficoms
rolb
pop
ja
mov
jp
iret
aaa
add
sbb
insb
xchg
ds
mov
mov
sbb
mov
into
sbb
fwait
xor
lcall
push
and
pop
std
cmp
andl
mov
sbb
xlat
jnp
mov
or
jne
push
std
adc
and
jl
lock
test
loopne
mov
and
or
ljmp
and
adc
vpunpcklqdq
mov
aam
jle
mov
mov
dec
xchg
ljmp
mov
cli
jmp
test
pop
lods
and
cmp
xor
pop
out
fimull
xchg
mov
xor
push
fbld
decb
ljmp
cli
das
shlb
stos
daa
fidivl
or
push
xchg
cltd
mov
jge
subl
ret
rolb
inc
shll
jg
mov
dec
xchg
jge
test
fmul
push
fucomp
clc
and
and
ss
sub
or
mov
pushf
pusha
aam
mov
filds
loope
fdiv
fimull
sbb
inc
or
dec
mov
dec
sub
push
imul
fwait
andl
fcompl
incl
sub
inc
das
pop
pop
and
pop
icebp
iret
and
pop
fnsave
sbb
fsub
mov
add
fwait
mov
pop
aaa
mov
push
out
fnstcw
cmpb
fisubl
jle
add
clc
and
or
cmp
pop
incl
push
mov
je
loopne
in
addb
or
cmp
rcrl
mov
or
xchg
cmp
sbb
icebp
mulb
scas
and
inc
mov
cli
pusha
fsubrl
jae
mov
pop
xchg
ljmp
iret
pusha
out
add
xor
shrb
int
bound
fiaddl
ret
out
test
out
dec
mov
inc
out
add
and
pop
pop
cmpl
imul
cmpsl
insb
cltd
jp
pop
mov
shlb
ss
cmp
mov
mov
inc
dec
xor
add
insb
jl
jp
stos
pusha
shrb
dec
mov
adc
jmp
in
xor
sbb
dec
cmp
or
fcmove
jns
add
mov
inc
cld
inc
jl
jae
and
dec
sahf
arpl
dec
lahf
aaa
call
and
mov
mov
inc
jmp
jecxz
pop
mov
inc
mov
rolb
loopne
jle
adc
stc
mov
jl
idiv
pushf
fwait
pop
sbb
adc
xor
inc
sahf
ficompl
add
jo
add
test
inc
pushf
cmp
out
out
push
and
ss
sub
jnp
std
sbb
cltd
mov
pop
std
dec
mov
and
lods
ja
test
ror
clc
add
insb
enter
mov
aaa
lock
inc
sarl
adc
movsl
shl
imull
xchg
ret
call
sarb
push
les
add
mov
mov
es
or
mov
das
ficoms
pop
pushf
jg
and
jbe
jae
sahf
into
test
lret
sarb
leave
out
sbb
and
jp
mov
scas
loop
lock
sbb
ljmp
pop
test
and
test
movsb
pop
jns
xor
fwait
sub
xor
cmc
mov
out
aad
push
sub
sub
js
fcompl
xor
mov
mov
add
mov
xchg
fneni(8087
out
push
in
add
inc
sub
cli
pop
fstpl
mov
ja
lahf
pop
mov
inc
xchg
jnp
or
sbb
aas
inc
scas
jno
pop
loope
cld
shrb
adc
aaa
ds
mov
ja
popa
lock
pop
lret
push
adc
out
stc
cmp
ljmp
subb
test
pop
dec
outsb
pop
jno
lcall
ss
mov
mov
aad
int
jmp
mov
mov
adc
scas
in
pop
imul
or
dec
mov
loopne
cltd
incl
pop
sub
dec
and
add
sti
mov
sbb
cmc
pop
add
popf
dec
mov
mov
push
jns
pop
dec
imulb
dec
adc
mov
mov
inc
mov
mov
jne
rcl
sub
out
jmp
sbbb
mov
inc
adc
pop
jbe
pop
pushl
sbb
clc
bound
mov
lods
scas
shlb
pop
cli
imul
push
jno
mov
sbb
xchg
aaa
fiaddl
mov
lds
fildll
test
mov
inc
mov
aas
jns
call
pop
inc
jo
mov
mov
int
sub
iret
ljmp
cmp
sub
cli
fldl
arpl
pop
sbb
or
adc
aas
sbb
pop
es
rolb
push
inc
rorb
outsl
loopne
jle
mov
into
movsb
jmp
pop
repnz
ljmp
call
ja
popa
push
jbe
andb
fwait
mov
inc
rcrb
movl
mov
push
mov
std
fstpl
push
adc
enter
pop
mov
je
in
push
pushf
popf
pushf
pop
xor
pop
pop
pop
mov
adcb
mov
sahf
mov
inc
in
testl
loopw
cmp
fiaddl
fs
js
test
sti
movsl
add
dec
fildll
insl
int3
jg
push
cmc
sbb
xor
sub
sub
in
dec
inc
mov
pushf
dec
ret
cli
pop
cwtl
insl
pop
push
fstpl
and
cltd
es
add
pop
mov
fcomps
mov
jg
cmc
inc
or
sarb
fldt
ret
int3
cmp
jecxz
or
data16
pop
inc
imul
sbbl
cmpb
call
shr
cmp
loopne
and
cmp
scas
idivl
andl
xchg
xchg
mov
dec
pop
mov
icebp
loopne
hlt
pop
sbb
or
pusha
sbb
cmp
push
jge
pop
push
mov
mov
enter
jg
mov
mov
cmp
mov
pop
lahf
push
les
push
sbb
jg
gs
push
in
fmull
add
or
sub
mov
pop
jl
and
xorb
enter
xor
je
and
dec
add
dec
sarb
cs
sub
mov
cld
int
and
in
sbb
sub
pop
add
pop
cmp
and
cld
inc
xchg
xchg
jecxz
mov
lds
sbb
fdivp
inc
pop
loop
cld
mov
xchg
and
outsb
imul
mov
jbe
aaa
push
rcrb
hlt
cld
cld
ffree
mov
fisubrs
xor
push
fldl
test
xchg
lods
mov
pushf
mov
subl
lret
aam
push
fists
sbb
test
clc
stos
daa
mov
stos
fidivrl
std
add
inc
push
pop
xchg
pop
or
fsts
iret
nop
stos
dec
js
mov
out
mov
jecxz
inc
jo
gs
push
lea
lcall
lahf
fsubp
pushf
jns
lcall
mov
push
lcall
dec
loopne
jbe
repnz
js
sbb
sbb
xchg
and
scas
mov
cmpl
and
pop
sub
stos
jle
fwait
push
adc
push
fmul
call
loop
dec
lods
rcrb
cld
sub
icebp
or
insb
mov
fwait
aam
or
cs
add
cmp
inc
jo
jne
jle
add
repnz
mov
mov
mov
int3
sti
loop
adc
cmp
inc
add
aam
call
pop
sbb
lcall
jmp
in
add
and
mov
cld
inc
lcall
jl
loopne
push
push
mov
in
int3
clc
dec
loope
rcl
mov
and
mov
pop
pop
popa
add
push
mov
fs
ret
fsubp
int
and
orl
sbb
notl
inc
iret
sbb
jl
addr16
xchg
pop
ss
decl
clc
jp
pop
lods
jle
rcll
aam
add
pop
sbb
sahf
pop
inc
dec
inc
outsl
jle
fcompl
mov
jp
adcb
or
add
lods
repnz
inc
mov
add
frstor
mov
lea
mov
rol
mov
js
mov
and
sbb
cs
lods
push
dec
inc
xor
jns
outsl
fistps
movsl
mov
scas
rolb
int
mov
sahf
cmp
xchg
jns
les
cmp
fimull
fnstsw
je
nop
scas
in
and
sub
and
jl
decl
mov
and
daa
jg
cwtl
push
fwait
mov
out
aaa
jge
push
into
ret
ds
lock
je
xlat
and
xorl
outsl
push
insl
mov
add
stos
fcmove
mulb
in
lret
popf
rdtsc
in
loopne
adc
sub
test
insb
fs
jl
xchg
mov
rcr
addr16
scas
adc
xchg
add
cld
fidivrs
fisubl
hlt
data16
lods
add
cmp
mov
cmpsb
mov
idiv
add
fcmovne
hlt
fstpt
rcr
sbbb
bound
or
cld
and
xchg
and
jo
push
mov
push
leave
sbb
std
push
clc
or
call
xor
or
mov
pop
in
lahf
xchg
sbb
pop
lods
sbb
test
fdivr
mov
nop
loope
cld
adc
fstpl
int3
ss
loope
sub
add
mov
mov
push
adc
in
push
out
push
pop
add
cld
push
sbb
cmp
or
pop
pushf
mov
sti
pop
adc
and
int3
push
sahf
add
es
in
xchg
add
aad
jle
dec
insb
cli
in
or
int3
cmp
xor
pop
sbb
jp
jmp
daa
pop
or
addr16
pop
cmpb
loop
shufps
cmpsl
or
pop
test
ja
hlt
enter
xor
or
mov
sub
mov
pop
push
jle
test
push
push
js
jle
rol
pusha
aam
xchg
mov
cld
hlt
pop
repnz
mov
fcmove
sbb
sbbl
adc
inc
pop
pop
ss
imul
psllw
cltd
inc
cmpb
adc
cld
test
mov
xchg
push
ficomps
idivb
jne
cld
xorl
xchg
repnz
in
aam
inc
std
xchg
mov
inc
pop
push
cli
out
add
push
sbb
cs
xchg
scas
sahf
cld
test
rcr
shl
movsb
stc
outsb
in
sub
inc
add
mov
lea
adc
mov
int
lahf
pop
out
adc
and
dec
cmp
int
clc
int
xorb
outsb
pop
inc
pop
nop
fwait
mov
ja
mov
js
add
out
push
outsb
loopne
mov
xor
pop
push
gs
loop
mov
push
data16
daa
jo
mov
push
es
sub
cmp
sarb
adc
nop
push
fwait
rorl
mov
mov
push
loope
ss
push
sbb
dec
inc
test
cmp
popa
outsl
dec
add
lock
mov
jmp
in
test
imul
adc
gs
je
ljmp
imul
pop
pop
sub
aad
mov
jp
sub
inc
cwtl
dec
movsl
sbb
ficoms
sarb
mov
jo
in
aas
lods
mov
shlb
mov
cltd
mov
nop
gs
out
jo
inc
jg
aam
lock
mov
mov
incl
ret
jecxz
lret
divb
mov
lock
leave
call
loope
dec
add
mov
cmp
bound
xor
mov
add
dec
dec
add
testb
xor
xchg
loope
or
cmp
or
push
pop
mov
addr16
es
int3
jge
cwtl
fucomi
jnp
cld
nop
lret
out
sbb
nop
setnp
fs
lods
call
out
mov
sti
int
test
xchg
outsb
mov
decb
sub
add
std
and
fldl
popf
mov
or
sbb
xchg
and
shlb
aaa
insl
lock
xchg
adc
roll
stos
test
addl
cwtl
enter
inc
add
icebp
add
cmpsl
sub
jle
inc
imul
add
xor
lcall
push
pop
xchg
inc
and
jge
rcrl
pop
das
adc
or
stos
ficoms
lods
jle
pop
sarl
stos
add
scas
pop
stos
lods
in
out
add
or
icebp
and
inc
pop
sbb
aas
js
and
scas
ds
insb
in
dec
pop
cmp
push
fsubrs
iret
inc
data16
add
and
jmp
repnz
jle
or
call
cli
subb
aaa
mov
mov
xchg
push
imul
adc
and
sahf
xor
push
rclb
and
loopne
dec
pop
push
inc
mov
and
fs
test
inc
and
lods
mov
ret
pop
dec
xchg
add
movsb
inc
add
dec
loopne
add
pop
out
or
or
hlt
xor
sub
and
push
and
pand
mov
add
in
testl
add
mov
add
sub
lahf
push
dec
je
inc
lea
iret
sbb
lods
je
add
xor
iret
cmp
filds
stos
xchg
add
add
mov
movsb
mov
js
xchg
orb
push
in
outsl
xor
mov
addl
jp
mov
lcall
add
and
enter
jbe
dec
lods
inc
cmp
dec
je,pt
outsb
mov
jo
jl
jae
xchg
out
test
mov
fisubrl
ja
icebp
mov
or
jns
div
leave
cli
mov
cld
xchg
mov
xchg
xor
xchg
sub
jle
lods
test
pop
add
in
lock
movsb
mov
fsubr
aaa
cmp
mov
add
xor
dec
flds
push
add
mov
mov
lock
incl
ss
enter
sub
dec
roll
cld
xchg
sub
cmp
push
or
mov
dec
and
add
xchg
movsb
lret
mov
sbb
popf
scas
in
aas
add
sbb
shll
push
mov
rcl
ljmp
pop
push
push
push
shlw
loopne
add
add
mov
sbb
orl
and
or
jne
adc
js
dec
inc
mov
lret
sbb
mov
pop
das
clc
cmp
loopne
push
xor
out
and
call
je
push
int3
or
sub
mov
mov
add
imul
lock
dec
push
popa
stos
fwait
bound
movsl
and
pop
xchg
add
int3
call
push
dec
ret
bound
add
idivl
mov
pop
jl
mov
notl
or
addr16
xchg
out
sub
ret
sarl
repz
or
test
rol
sub
cmp
jnp
jnp
pop
mov
fcomps
xor
jns
mov
pop
cld
into
jmp
jo
dec
in
jg
and
cmp
push
mov
inc
outsl
loop
xor
jmp
lret
push
cmp
scas
cld
add
sub
std
and
mov
xchg
cmp
pop
mov
mov
add
cmp
push
xor
cmp
cmpsl
pop
shl
call
inc
add
xlat
insl
cmpb
add
sbb
sbbb
sbb
sub
and
mov
out
rolb
sbbb
fs
mov
lcall
xchg
out
lods
cld
cmpsb
xchg
dec
mov
test
inc
push
lea
xchg
push
xor
scas
add
cmp
jecxz
xor
ficomps
lods
je
sbb
lock
push
sub
cmpsl
or
xchg
pop
into
addb
test
test
cmpsb
pop
sub
adc
addr16
xchg
daa
das
pop
fmull
scas
pop
dec
notl
ret
aas
js
dec
xor
xchg
inc
cs
inc
mov
jns
mov
lods
rcr
repz
inc
fistps
adc
sbb
add
mov
push
or
std
mov
ja
mov
pushf
push
inc
jecxz
jmp
add
and
movsl
jmp
enter
jne
fsubp
xchg
pop
xor
jg
sbb
pop
xor
movsl
or
fildll
jo
pop
lods
rol
add
pop
mov
scas
jb
ret
push
mov
jp
xchg
or
xor
pop
je
mov
mov
xchg
and
icebp
cmpsb
popl
cli
cmp
add
dec
adc
jle
in
ds
pop
sub
sbb
call
incl
xor
mov
call
sbb
popf
test
mov
aad
lods
dec
mov
add
pushf
lcall
xlat
pusha
xchg
cmp
inc
mov
fcoms
sub
lret
sub
js
pop
mov
xlat
lret
nop
aad
call
outsb
nop
pop
sub
mov
in
mov
fildl
out
mov
lret
cmc
mov
mov
xor
add
iret
mov
divb
add
mov
sbb
ljmp
mov
fcom
mov
ds
inc
and
adc
lret
pop
push
test
rcpps
aas
scas
add
inc
xchg
push
and
sbb
lock
test
mov
xchg
cmp
inc
push
adcb
mov
les
add
and
loope
mov
es
rorb
fcomi
or
inc
jp
ljmp
add
jmp
cmc
mov
nop
call
push
insb
xchg
xor
push
ret
jmp
inc
je
jbe
cs
lahf
shrb
dec
push
pop
and
add
push
push
adc
dec
mov
or
xchg
mov
inc
xchg
loope
add
fisttps
mov
int
in
stos
sar
push
rcl
lods
les
mov
je
push
push
cltd
imull
sbb
pop
jge
add
movsl
ds
loopne
nop
in
dec
add
mov
in
mov
xchg
xor
jbe
sbb
ljmp
in
mov
in
and
mov
fisubrl
ljmp
sti
rcrb
mov
iret
mov
dec
dec
mov
out
mov
adc
mov
decb
sahf
push
jl
add
jne
cltd
cmp
iret
pop
cld
xor
xor
lcall
fisttpll
cwtl
or
cmp
adc
jl
adc
sub
mov
clc
test
testb
lock
fwait
push
mov
aam
mov
mov
mov
cli
and
push
pop
lcall
push
and
scas
sbb
push
xor
xor
loop
decb
fmull
inc
fstpt
xchg
ds
lret
rcrl
dec
sar
loopne
lahf
movl
test
js
clc
call
fiaddl
das
incl
add
inc
pop
xchg
and
daa
repz
sbbl
mov
repz
ljmp
mov
push
outsb
sub
aad
orb
and
add
or
subb
inc
xor
inc
add
pop
mov
push
xor
mov
xor
stos
rcll
and
inc
dec
mov
insb
dec
mov
jb
or
jmp
aad
mov
rclb
and
xchg
rorb
mov
mov
ds
xchg
nop
pop
or
inc
mov
int
add
add
mov
hlt
inc
jl
cmc
mov
and
and
or
iret
mov
scas
les
aam
mov
roll
test
inc
xor
fstpl
test
out
lods
sub
add
int3
inc
and
lcall
inc
push
imul
push
cwtl
sbb
cmp
inc
or
inc
mov
pop
jl
dec
ret
or
shlb
pusha
inc
rcr
cld
push
inc
pop
movsb
in
fs
xchg
xor
sarb
fst
or
incb
loopne
mov
cmpl
or
loope
iret
sub
pop
cmc
mov
pop
adc
cmpsb
test
fildll
loop
sub
lahf
xor
adc
test
shrb
lock
inc
outsb
and
ret
pop
or
cli
adc
dec
inc
mov
in
add
sub
add
adc
adc
xchg
mov
in
out
lods
data16
xor
dec
sbb
js
adc
mov
popf
push
orps
inc
mov
ja
jo
orl
or
push
xor
test
fadd
xchg
dec
pop
lock
mov
loope
js
gs
fdivs
daa
fcoms
mov
and
pop
pop
inc
outsb
inc
ds
pop
outsl
or
dec
fisttps
insb
subb
aaa
lock
in
push
leave
mov
cmp
out
loop
mov
stos
jns
mov
fwait
lock
mov
inc
cld
pop
mov
lods
dec
push
jg
add
inc
and
push
lock
js
dec
mov
pusha
pop
pushf
push
test
movsl
jecxz
jno
sbb
test
add
sub
aas
pop
mov
bound
fs
or
in
jo
push
adc
stos
gs
fldenv
add
push
jno
je
mov
mov
inc
addr16
loopne
aam
push
sahf
ss
cmp
cmpsb
lret
pop
shrb
rol
inc
add
sbb
fwait
hlt
mov
cmp
and
arpl
hlt
cli
jl
adc
or
mov
lods
or
pop
sub
push
push
fimull
loop
leave
cmpsb
jne
bound
xchg
adc
js
inc
or
cwtl
bound
ss
aas
fimuls
sti
push
mov
adc
loop
dec
push
scas
flds
adc
sub
jle
lods
shrb
mov
scas
adc
sbb
add
mov
addb
add
lret
fsubs
push
mov
push
adc
inc
mov
pop
sti
push
js,pt
jge
add
nop
sbb
mov
adcb
jae
fbstp
mov
add
cmpl
lea
and
ja
xor
lods
xchg
inc
inc
mov
repz
mov
decb
adc
add
rol
loopne
mov
dec
call
and
inc
dec
in
and
xor
out
or
pusha
lock
jl
pop
sub
inc
xchg
sbb
dec
pop
fwait
pop
inc
add
xor
cmpsl
int
aam
xchg
andl
cli
pop
jge
push
nop
sub
imulb
push
icebp
sbb
icebp
sbb
adcl
mov
sbb
aaa
dec
in
inc
xor
int
into
movsl
nop
popa
cmp
loope
das
addr16
cmp
out
sub
pop
mov
jne
sbb
pop
arpl
mov
filds
push
mov
sbb
scas
jle
lea
pop
sub
es
loopne
dec
cmc
jne
adc
adc
xchg
pop
xlat
sbb
je
mov
mov
jg
cwtl
mov
dec
fsubp
call
sbb
sbbl
push
in
xchg
fsts
inc
jno
js
mov
bound
push
cmp
ds
inc
sahf
adc
outsl
and
js
jmp
inc
scas
shrb
fcos
jae
mov
mov
repnz
ret
fnstcw
push
stos
in
pop
add
icebp
rol
dec
addl
sub
pop
jnp
add
in
jne
or
mov
gs
addb
add
add
xor
stos
outsl
incb
cmp
loop
imul
dec
jne
mov
lock
punpckhdq
aas
addr16
xor
dec
outsl
mov
mov
or
out
dec
jno
adc
jo
movsb
test
adc
call
ss
das
pop
cli
jno
testl
add
jecxz
mov
frstor
repnz
add
xor
or
std
insb
rcll
lds
shll
sub
xorb
mov
sub
adc
fnstsw
repnz
or
mov
mov
fnstenv
push
jns
cmpsl
sbb
sbb
ret
je
pop
dec
rcl
sub
imul
sub
xchg
pop
push
push
testb
cmp
mov
imul
add
sbb
sub
inc
push
pop
mov
xchg
xchg
push
clc
inc
sbb
xor
mov
push
aaa
add
push
test
push
ljmp
xchg
cmp
in
das
aas
nop
mov
pop
sbb
into
mov
jmp
mov
popf
in
and
adc
pop
or
adc
dec
das
lea
sub
adc
repz
scas
cmp
xor
imul
nop
mov
fldcw
push
je
loopne
loopne
jg
test
mulb
pop
mov
rorb
clc
lea
adc
arpl
pop
jno
xchg
int3
and
dec
in
mov
enter
xor
in
xchg
dec
dec
and
xor
cld
push
cmp
mov
push
cmp
push
sbb
jb
outsb
decb
xchg
sti
sub
lea
outsb
xor
and
lea
and
fsubp
mov
cltd
repz
scas
nop
or
movsl
inc
hlt
dec
pop
sub
clc
xchg
push
mov
daa
ja
mov
xor
mov
jl
dec
fwait
mov
xchg
jb
mov
lds
fs
push
pop
or
bswap
dec
fimuls
push
mov
clc
xor
mov
arpl
mov
mov
insl
pop
test
sub
cmp
jmp
mov
xchg
nop
pop
mov
rorb
into
outsb
xor
adc
lahf
fimuls
lcall
ret
mov
and
inc
adcb
xchg
xchg
shlb
lahf
enter
dec
cmpl
shr
out
ret
or
stos
shrl
sbb
iret
dec
iret
cmp
jg
mov
cmp
in
test
dec
leave
sahf
int3
pushf
scas
pop
push
adc
hlt
or
les
mov
not
xchg
loope
pop
or
inc
hlt
cmc
cmp
stc
dec
lods
adc
test
cmp
cmovge
inc
push
pop
jae
icebp
stos
adc
mov
sbb
pop
nop
cmp
adc
addl
push
mov
ja
loope
xchg
inc
and
jmp
adc
insb
dec
in
pop
pop
fsubs
sub
push
mov
shrl
out
push
sbbb
or
lds
mov
sbb
cmp
push
dec
out
lcall
push
and
cld
orb
int3
mov
lds
sbb
lret
cmp
lret
xor
push
les
shll
pop
pusha
inc
in
xor
mov
push
jle
or
jne
jle
ja
subl
pusha
inc
mov
or
xchg
out
inc
or
xor
push
pop
xchg
mov
sbb
fdivs
rcrl
and
pop
lods
lea
xchg
jecxz
sub
add
bound
jp
pop
icebp
sbb
cmp
xchg
lods
and
and
addb
xchg
rclb
adc
ja
mov
ret
sbb
js
mov
nop
or
stos
stos
jno
lret
mov
insb
pop
adc
xchg
jg
dec
jb
stc
in
adc
test
sbb
push
sub
sti
dec
icebp
pusha
jle
les
aad
xchg
xchg
lea
add
insb
xchg
mov
adc
shlb
stos
dec
outsb
push
hlt
aaa
sarl
iret
inc
mov
push
sbb
decb
outsb
jmp
add
sar
jne
push
add
pop
loopne
jo
es
stos
mov
pop
jle
mov
and
push
mov
sub
dec
ds
or
arpl
mov
or
adc
mov
repnz
movaps
mov
sbb
mov
fnstenv
iret
adc
popa
scas
sub
adc
xor
sbb
das
nop
xchg
push
movsb
jns
xor
loope
fwait
mov
mulb
movsl
add
jl
jg
xor
xchg
mov
jg
in
cmovs
out
lods
popa
mov
popl
jno
jbe
cmp
fwait
mov
sbb
cli
jle
ret
push
inc
pop
mov
lret
inc
inc
sub
stos
cmpsb
pop
pop
test
add
sbb
pop
mov
jecxz
addl
dec
jge
rclb
les
sbb
sub
daa
sbb
sti
jp
inc
out
test
adc
xchg
mov
fdivrp
roll
out
jnp
inc
inc
cwtl
lods
clc
push
lods
jecxz
bound
jle
dec
mov
test
ljmp
mov
add
inc
cmp
out
adc
sti
in
mov
mov
aad
pop
shll
xor
jle
and
inc
sbb
xor
lods
fcmovbe
jo
inc
or
ljmp
rorb
int
push
test
add
scas
les
pop
loopne
bound
mov
mov
pop
mov
cmp
jmp
sub
jp
sub
mov
cltd
int
xlat
and
or
push
loopne
sbb
sub
lds
pusha
mov
fldcw
or
inc
std
ja
fwait
or
xchg
push
loope
jmp
shl
movsl
mov
or
lea
push
je
cli
xor
fidivl
xor
push
cmp
or
shrb
nop
mov
push
jl
add
bound
out
jg
dec
jb
sub
xchg
push
or
xor
mov
rolb
insb
jo
jg
xorps
sub
je
gs
sbb
cld
mov
mov
mov
sbb
inc
insb
or
dec
test
negl
jne
sub
lock
pusha
adc
jnp
push
xchg
jb
jnp
add
imul
lret
sub
push
mov
ljmp
insb
mov
inc
mov
cmc
pop
mov
pop
mov
dec
pop
push
divb
lock
cld
out
orb
jae
dec
pop
daa
cmp
adc
pop
sbb
outsb
jecxz
hlt
enter
lock
lcall
nop
pop
mov
lret
push
jo
les
cs
sarb
xchg
push
ret
xchg
mov
ja
adc
mov
fiadds
pop
jbe
repz
pop
andb
rolb
and
xor
jecxz
insl
repz
movl
cmp
push
fs
cs
mov
leave
filds
mov
xor
cs
xor
sbb
fdivrs
mov
ret
mov
scas
lock
fdivl
shrb
sbb
cld
add
sbb
das
sub
cld
mov
fiadds
lret
and
jmp
or
add
outsl
cs
cs
jo
mov
and
jbe
mov
xchg
push
cmp
outsb
pop
sbb
sahf
pop
cmp
add
mov
pop
stos
cli
stos
jp
add
pop
pop
jbe
inc
mov
ret
sbb
jp
add
mov
xor
repnz
push
ljmp
sbb
push
pusha
loope
push
cmpb
or
enter
pop
sub
sbb
sti
xor
jmp
or
adc
fsubl
xorb
shrb
mov
pop
stos
adc
es
or
pop
loope
adc
sub
inc
dec
adc
dec
out
fs
adc
xchg
je
add
jo
int3
iret
mov
inc
add
inc
mov
mov
jnp
cmpsl
icebp
jb
test
and
jmp
sar
push
inc
or
cmp
mov
mov
lods
jle
fidivrs
rclb
push
out
pop
test
aas
mov
and
push
mov
dec
test
stos
dec
push
sbb
jg
mov
push
push
data16
in
inc
mov
jle
in
pop
xor
mov
sarl
cmp
add
es
mov
or
stc
and
or
jb
sar
test
repnz
xchg
push
in
sbb
sub
xchg
outsl
add
adc
icebp
pop
mov
ficoms
enter
mov
imul
fadds
mov
pop
adc
jle
daa
inc
pop
jno
pusha
jmp
aad
xlat
cmp
inc
cmp
mov
mov
lds
dec
pop
outsl
test
pop
call
xor
loop,pt
xchg
lahf
inc
xchg
push
push
jle
das
lock
cli
inc
adc
jae
and
jg
inc
lret
add
and
push
lods
int
cmpsl
push
inc
or
repnz
inc
mov
and
xor
fildl
data16
sbb
sub
inc
mov
ds
call
lods
decb
cmp
inc
test
cmp
nop
in
or
js
inc
ja
and
xchg
cmp
pop
sbb
push
jecxz
adc
ret
inc
rcrb
jecxz
sbb
mov
hlt
adc
loope
loop
leave
cwtl
sbb
mov
xchg
or
addb
push
inc
jo
pop
sbbb
cld
loope
pushf
clc
sbb
xorb
jecxz
add
or
xchg
push
or
or
xor
adc
push
add
in
push
std
addb
out
call
xor
int
cli
pop
dec
pop
mov
dec
dec
add
fiaddl
push
insb
adc
shr
sahf
adc
lea
sbb
mov
fbld
adc
hlt
ljmp
inc
and
and
add
ja
adc
xchg
sbb
inc
push
jp
dec
notb
xchg
fldz
sub
mov
adc
pop
movb
loope
dec
mov
stos
push
jmp
shrb
test
fdivr
jmp
cs
les
inc
mov
bound
cmp
cmp
xchg
lcall
xchg
cli
out
inc
inc
lret
ret
mov
out
push
mov
xchg
jl
mov
mov
iret
in
add
jns
ds
les
mov
jp
decl
repz
insb
inc
xchg
push
loope
or
sub
ja
mov
sbb
arpl
pusha
or
jnp
push
popa
lret
std
xchg
add
pop
les
xor
ret
pop
popa
mov
ret
aad
ret
ss
inc
aad
mov
inc
and
xor
test
aas
jg
leave
repnz
lds
sub
mov
mov
rcr
inc
push
lock
xor
mov
push
movsb
filds
xchg
or
pop
pusha
scas
loopne
fdivrs
dec
mov
loope
mov
push
inc
mov
adc
pop
notl
push
loopne
out
add
add
roll
push
sub
lahf
adc
sbb
loope
scas
jno
cmp
sbbb
add
mov
jp
popa
add
jecxz
mov
inc
pusha
cld
add
fadds
nop
xchg
pop
fwait
cmc
cmpb
mov
xchg
sub
mov
sub
pop
orl
out
add
fwait
ret
pop
jl
test
movsl
xchg
hlt
imul
push
sahf
fsubp
jg
and
mov
outsl
frstor
setp
scas
movsl
call
and
out
shr
inc
pop
clc
xorb
add
push
cmp
dec
out
inc
xor
lods
dec
mov
push
cmp
sub
aad
add
push
adc
mov
adc
loop
je
cmp
inc
push
and
jle
dec
test
jecxz
sarb
xor
and
add
mov
xor
add
sub
test
jecxz
lock
add
lock
dec
scas
mov
sahf
lea
cmp
icebp
ret
jmp
mov
mov
mov
push
add
mov
mov
mov
loopne
bound
jg
xchg
lea
idivb
int
mov
das
sub
jle
or
xchg
in
sbb
loopne
bound
add
mov
mov
xchg
xchg
mov
inc
jb
ret
mov
fcmovnbe
out
pop
iret
nop
sbb
ja
mov
leave
cmp
arpl
pop
or
pop
test
int3
shl
out
adc
and
stc
adcb
out
movsb
movsb
xchg
cmp
adc
pusha
repnz
and
pmaxub
lcall
cmp
cmp
rorl
movsl
or
insb
cmpsl
lds
ret
lret
repz
out
jb
push
hlt
hlt
clc
out
cli
loope
adc
int3
push
hlt
inc
pop
mov
push
mov
sub
nop
inc
cmpsl
imull
push
xchg
pop
test
jle
mov
lret
or
push
cmp
jo
popa
ret
rolb
sbb
adc
leave
fildl
sbbb
jo
pop
aam
add
mov
lock
roll
pop
inc
cmp
test
clc
aas
pop
rol
call
call
jle
mov
jg
mov
xchg
inc
or
cmpsb
jp
scas
test
inc
jmp
inc
or
push
xchg
cmp
test
mov
cltd
orl
dec
sbb
fldenv
xchg
inc
mov
jne
sbb
roll
cmp
dec
mov
aaa
xor
aam
mov
or
loope
imul
inc
cmpl
insl
shll
xchg
lock
or
into
data16
in
jae
push
aaa
and
and
lret
jns
jbe
in
stc
aaa
lret
mov
les
bound
aam
push
popf
out
bndldx
jbe
push
fs
sub
notb
lock
shll
cld
aaa
sbbb
std
xchg
cmc
push
push
imul
sbb
jbe
sub
push
std
push
mov
dec
cmp
jmp
adc
xchg
inc
sbb
push
inc
leave
mov
cmp
add
dec
cmp
sub
shlb
inc
test
inc
lock
bswap
adc
rcr
and
in
ret
mov
out
pop
mov
sti
pop
mov
in
shll
cmpl
mov
push
pop
clc
mov
xchg
fdivrl
cmp
pushf
js
pop
sahf
push
aam
mov
and
jmp
mov
mov
daa
rolb
lds
sbb
xchg
inc
or
js
mov
es
aam
jae
insl
rcll
ficoml
jb
jl
out
jmp
push
test
mov
call
and
push
add
dec
lods
add
jbe
scas
adc
sbb
mov
cld
icebp
and
mov
mov
pop
push
cli
cmp
sbb
mov
push
and
loopne
loop
subl
jg
aaa
roll
adcl
outsb
mov
dec
adc
mov
cmp
pop
jmp
mov
mov
dec
fistpll
shl
add
movsb
lods
xchg
jecxz
mov
add
loop
add
sbb
adc
sbb
hlt
add
test
test
lret
sbbb
jg
subb
inc
sub
sbb
adc
rol
inc
js
dec
sub
aad
jle
mov
aas
jb
xor
dec
lahf
and
inc
dec
aaa
test
lcall
mov
filds
ret
dec
xlat
xchg
into
push
add
cli
and
cmp
clc
xlat
or
fdivs
dec
jb
mov
insb
cld
addl
fwait
adc
xor
dec
jle
jge
insb
push
cmp
lahf
cmpsb
imul
push
cmp
push
test
sub
ret
cmpsb
fnstenv
sbb
sub
jg
dec
cmpsl
add
push
xor
test
test
orb
mov
push
call
hlt
and
mov
mov
rcrb
fists
in
aas
fidivl
negb
adc
ret
push
popa
xchg
push
aaa
push
ret
or
mov
clc
test
xabort
and
lods
xchg
movsb
scas
jle
mov
cwtl
popa
std
push
xlat
test
pop
sahf
leave
outsb
fimull
jo
jecxz
and
and
test
mov
data16
dec
popf
jae
add
js
aam
and
pop
adc
inc
cmp
and
and
xchg
sub
push
cmc
jg
test
shll
xlat
js
add
or
negb
add
push
cwtl
cmp
or
sub
and
test
sub
sub
leave
pop
jmp
mov
add
or
jo
add
adc
add
js
in
or
fwait
dec
bts
inc
push
shl
stc
cmp
add
pushf
add
lods
sub
or
adc
xor
push
int
add
add
and
lea
inc
dec
js
subl
cmp
loopne
roll
inc
pop
cmpsb
fsubrl
jle
lock
nop
sbb
sti
xabort
mov
and
or
sub
inc
cli
add
sub
push
jge
int3
orb
xor
jo
mov
dec
adc
loope
data16
adc
or
in
push
lds
push
pop
pushf
lcall
lcall
pop
les
mov
inc
aaa
add
or
aam
xor
lock
or
xchg
inc
and
hlt
mov
cmp
sbb
jno
out
adc
jo
maxps
jge
pop
mov
sbb
rorb
jbe
cli
das
ret
test
jmp
dec
jecxz
jmp
add
sbb
movsl
mov
ss
adc
not
push
pop
adc
cmp
xor
leave
lahf
jbe
jg
jle
xchg
xchg
cmpsl
mov
shrl
sbb
lock
pop
pop
lods
and
sub
sbb
aad
testl
bound
cmpb
scas
pop
adc
pop
cltd
cmpsl
mov
ret
adc
fldt
xchg
call
xchg
cmp
add
sub
cmc
hlt
jecxz
xchg
inc
rcrb
shrl
and
lret
inc
scas
xchg
into
sbb
jae
xchg
or
jecxz
out
nop
or
xchg
fsubrl
cmpsb
dec
dec
imulb
push
cld
adc
dec
sbb
ja
test
sbb
jo
pop
or
arpl
xchg
orl
test
es
xchg
loop
stos
ljmp
mov
sahf
push
jecxz
dec
add
imul
pushl
dec
repnz
out
mov
inc
cmpsb
inc
xor
xor
or
mov
cmpw
mov
repz
adc
addr16
test
popa
jbe
mov
in
mov
adc
xchg
mov
cmpsl
inc
cmp
or
mov
into
int3
xor
add
xchg
jns
in
mov
and
in
nop
subb
or
fisttps
and
sbb
xchg
mov
imul
dec
aas
mov
pusha
mov
pop
or
sub
stc
jb
xlat
cmpsb
push
ljmp
cwtl
imul
dec
adc
inc
cmpb
clc
imul
sub
pusha
cld
test
mov
adc
ret
clc
ret
cmp
sbb
call
and
les
mov
sbb
out
imul
andb
rorl
mov
subb
add
xchg
dec
sti
xor
jmp
int
jl
loopne
insb
aaa
xor
testl
nop
adc
fdivrp
mov
js
add
push
adc
mov
mov
les
adc
pop
sbb
shrl
mov
jns
in
cmp
cwtl
lea
mov
into
pop
mov
mov
cld
pop
lock
and
dec
and
lret
and
add
xor
fs
cmpsb
adc
mov
sub
mov
pop
lds
mov
lahf
mov
cmp
rorl
jge
pop
leave
imul
jl
rcl
lods
iret
inc
add
aas
mov
les
arpl
pop
sub
outsl
push
jp
sub
enter
out
test
fldenv
sahf
jmp
cld
je
cmp
dec
shr
mov
or
or
pop
and
jle
into
test
sbb
sbb
pushf
xor
add
pop
jecxz
fisttps
pop
mov
out
sub
shl
xorl
data16
sub
insl
fstpl
shl
shr
cmp
pop
xlat
loope
std
call
mov
arpl
xchg
mov
inc
jg
leave
and
and
aas
dec
nop
les
pop
mov
xor
hlt
outsl
inc
outsb
push
push
mov
pushf
aam
dec
push
mov
or
lods
pushf
test
inc
cmp
into
stc
mov
push
add
in
push
xchg
mov
push
mov
or
xor
ret
jg
mov
fsubr
scas
mov
push
push
sahf
cwtl
test
iret
sub
xor
aaa
mov
hlt
mov
clc
iret
cmp
xor
add
clc
cmp
in
test
jo
rolb
aad
cmpsl
out
je
cmp
lret
out
mov
test
les
pusha
inc
push
adc
mov
movsb
into
shl
mov
add
lods
xlat
mov
sub
push
xchg
out
adc
mov
fistps
inc
std
sbb
pop
shrl
xchg
mov
sbb
aas
das
aam
jp
mov
mov
cmp
jmp
das
mov
movsb
push
les
shrl
xor
add
or
into
push
push
adc
dec
jo
std
jle
cmp
add
aam
dec
xchg
pop
lret
mov
sub
sub
cmp
add
jo
iret
incl
stos
sbb
into
incl
push
push
iret
test
mov
in
pop
push
outsl
add
add
jp
cmp
add
sti
adc
xchg
or
xchg
outsb
or
or
lock
adc
pop
ds
push
movsb
sbb
push
mov
jmp
dec
mov
stos
or
mull
cmp
inc
pop
mov
loopne
mov
fs
jns
fsubp
and
xor
push
push
adcb
push
lcall
jae
std
rcll
push
out
push
test
subb
xor
sahf
gs
rolb
push
xor
lret
add
ret
sbb
dec
rcrl
dec
cmpl
adcl
inc
mov
xor
lcall
xor
inc
ja
lock
xchg
adc
push
and
hlt
icebp
sbb
add
out
out
les
decl
bound
movsb
mov
xchg
pop
pop
cli
daa
cs
loop
scas
enter
inc
push
mov
fimuls
adc
dec
jbe
aam
mov
adc
inc
inc
pushf
sbbb
loopne
out
aas
repz
ficomps
push
xchg
in
mov
adc
aad
push
add
push
outsl
pop
out
add
lret
mov
jg
or
shrl
sub
enter
lcall
cs
xor
scas
dec
adc
mov
mov
pop
mov
pop
rol
mov
out
fdivr
cmp
mov
inc
pop
push
add
out
ljmp
xchg
sarl
add
sti
xchg
xchg
mov
dec
clc
inc
cmp
ret
add
xchg
mov
xchg
fidivl
mov
incl
mov
lcall
sbb
sub
and
adc
push
mov
cli
rclb
add
pop
dec
orl
inc
scas
push
cwtl
pop
mov
push
mov
mov
dec
sahf
repz
int3
push
cmp
adc
pop
test
aaa
icebp
mov
xchg
cmp
xor
inc
or
xchg
cmp
mov
ja
aas
in
sbb
push
das
push
cmpsl
fnsave
cmp
mov
rcr
jp
sbbb
loope
roll
cmpb
decl
pop
insb
aaa
rol
sarb
mov
pusha
jecxz
cmp
ds
outsl
icebp
or
nop
pop
add
dec
ljmp
sbb
mov
insb
std
test
enter
jae
pop
jmp
cmpsb
cli
sub
lcall
les
jp
ds
pop
cmpsb
popf
mov
cmc
mov
mov
stos
push
jecxz
and
das
loop
ret
xchg
mov
roll
lods
adc
push
cli
xchg
sbb
icebp
sbb
incl
or
jno
xchg
cmp
add
or
cmp
lea
dec
cld
loopne,pt
jecxz
shrb
fsubl
pop
push
push
call
ret
mov
sbb
arpl
int
jne
cmp
incl
jns
fs
jle
adc
das
or
jo
adc
mov
mov
jecxz
sbb
std
add
xchg
lcall
je
testl
lock
loopne
nop
fcomip
outsl
cmp
mov
adc
lret
or
inc
les
daa
or
jecxz
imul
aad
pop
addr16
add
add
loope
aas
cmp
sub
xchg
cld
sub
or
xor
ljmp
inc
adc
adc
dec
push
fadds
sbbl
orl
outsl
fsub
das
bswap
mov
jb
sbb
adc
or
negb
inc
inc
and
das
xchg
sub
in
sub
jo
mov
dec
mov
pop
iret
loopne
add
add
inc
adc
jl
ja
xchg
add
inc
xor
mov
add
test
xchg
aas
adc
push
sarl
dec
daa
out
jge
mov
and
jne
jo
out
div
jno
sbbb
out
sbb
rorl
sbb
xor
loope
lock
jbe,pn
lock
and
aad
push
xchg
into
imul
sub
test
sub
cs
and
cld
dec
icebp
add
jp
mov
push
test
shrl
sarb
popa
adc
stos
into
adcb
push
push
xor
pop
idivl
pop
add
mov
out
sbb
daa
fsts
sbb
xchg
loop
and
mov
mov
ret
movsb
daa
cmpsl
dec
vcmpnless
and
or
mov
in
lods
and
test
cli
lcall
sub
cwtl
dec
sub
jno
push
shlb
cmp
aam
sbb
jl
out
xchg
clc
test
andb
push
inc
loop
lock
adc
fisttps
dec
inc
cmp
fcoml
or
push
inc
loope
aaa
pop
std
pop
adc
xchg
dec
inc
ret
adc
imulb
xchg
rcll
loope
mov
or
sub
add
insb
lock
loop
and
jmp
repz
inc
out
push
mov
mov
rolb
sahf
add
lcall
shlb
cmp
fcompl
ret
movsb
jbe
sarb
cmp
in
lock
outsl
mov
adc
xchg
out
es
or
ljmp
hlt
mov
dec
mov
mov
push
jmp
mov
sub
cmp
insl
test
or
nop
loop
mov
test
sub
adc
dec
or
test
popf
or
stos
out
dec
addr16
ret
xchg
xchg
ud0
cmp
mov
mov
add
push
call
xor
mov
inc
adc
pop
sbb
in
movsb
xchg
mov
lds
loopne
sub
sub
add
addb
incl
sbb
stos
cmp
sub
xchg
inc
sub
push
pop
add
js
cld
xor
insb
std
fldl
xchg
fisttpl
jp
mov
rcrb
sub
and
xchg
and
enter
cmp
push
cmp
add
push
lret
in
add
je
aam
imul
scas
jmp
jae
push
shll
clc
inc
popa
cmp
jno
add
fildl
shll
mov
jno
jp
or
mov
pop
cld
rclb
gs
adcb
jne
sti
and
add
and
pushf
cmpsl
lods
jnp
jle
fsubp
cld
mov
inc
and
rcrl
test
inc
in
add
insb
out
loopne
lods
mov
cwtl
daa
sbb
cmp
or
dec
movsb
outsl
sub
jnp
mov
daa
and
push
jb
je
inc
push
shr
and
decb
or
pop
mov
pusha
mov
pop
cld
xchg
hlt
cmp
sahf
dec
lcall
cltd
stos
cmc
jge
sbb
rorb
fmull
mov
int
add
adc
iret
ret
add
jno
shlb
sbb
mov
aas
outsl
arpl
sbb
add
testb
cmpsb
in
in
inc
lds
adc
mov
jg
cmp
daa
xchg
and
mov
lods
pop
inc
in
and
add
insb
or
xchg
out
jo
jle
add
cmp
xchg
xor
mov
cld
inc
jg
in
mov
fists
or
js
jnp
xor
mov
subl
popf
dec
inc
cmp
mov
mov
pop
mov
push
mov
push
imul
orb
jge
test
in
jl
cmp
rcll
test
das
hlt
imul
loopne
sub
movsl
jno
in
push
xor
pop
push
cltd
mov
mov
push
sub
xor
fdivl
int3
inc
call
jno
or
lods
shl
ljmp
addl
jl
mov
mov
pop
cmp
test
mov
loopne
stc
es
dec
pop
cmp
popa
incl
bnd
xchg
bound
outsl
push
add
mov
fs
mov
cld
les
in
insl
sub
loop
cld
in
ret
fstpt
add
sub
jnp
rsm
cmc
aam
cmp
icebp
aam
xor
jmp
mov
adc
dec
inc
out
clc
dec
cmp
dec
xor
iret
dec
arpl
cli
pop
aas
test
sub
or
mov
outsb
js
ja
pop
and
pop
clc
movsl
add
jmp
arpl
mov
push
push
mov
cli
lret
mov
cld
dec
clc
add
loopne,pt
pusha
sarl
xor
add
mov
pop
push
add
rcrl
call
stc
pushaw
out
cmp
daa
inc
mov
ret
in
mov
adcl
inc
outsb
or
pop
and
or
push
dec
pop
jne
cmp
mov
mov
mov
fbld
mov
das
fstps
call
jge
xlat
dec
repnz
test
loop
cmp
jecxz
mov
repnz
jle
inc
and
adc
popl
sub
mov
out
cmp
adc
adc
movsb
xor
cmp
std
cmp
pop
mov
pop
mov
cwtl
sbb
pop
cmp
adc
sbb
shll
and
lods
cltd
push
dec
jo
and
mov
add
ret
mov
lret
xchg
and
xor
push
test
fsubs
xchg
fdivrl
push
cwtl
sbb
out
xchg
les
inc
mov
call
sub
or
hlt
lock
and
hlt
rol
pusha
sbb
sbb
jp
test
adc
sbb
loop
jno
js
jns
popa
cld
fcmovu
inc
test
fimull
stos
or
ret
aas
shrl
stc
cs
xlat
aad
cmpb
add
and
mov
rorb
fnstsw
sti
fstpt
mov
insb
icebp
mov
pop
and
push
inc
aam
aaa
ljmp
je
xlat
jg
add
cmp
cmp
stos
out
call
lods
push
ja
pop
mov
sbbb
repnz
int3
inc
and
out
sbb
cs
cli
cmpsl
lods
rorl
push
push
jns
retw
es
mov
scas
and
clc
sarb
shrl
push
mov
pusha
xchg
cld
inc
std
into
and
adc
cmpsl
stc
lahf
push
imul
test
mov
fiaddl
pop
cmp
push
push
cmp
inc
or
aas
stc
mov
loope
mov
sbb
mov
lret
jae
pop
jl
push
out
inc
mov
push
stc
xchg
sub
mov
inc
cld
loop
mov
jl
iret
xchg
imul
das
test
sbb
and
fchs
loop
inc
xor
lahf
push
mov
shll
cmp
idivl
and
mov
mov
xchg
sub
xchg
mov
xchg
or
loope
adc
sub
inc
sbbb
lock
insb
inc
or
sub
xchg
mov
scas
std
bound
pop
xchg
loopne
outsb
loope
hlt
or
dec
push
inc
jno
loop
outsb
xchg
sbb
mov
pusha
pop
or
aam
adc
insl
pop
fcomp
or
pop
ljmp
imull
aaa
or
mov
dec
mov
mov
mov
or
add
push
movsl
mov
mov
out
call
les
movsl
dec
in
ret
and
loop
sbb
cltd
clc
push
sbb
lahf
nop
push
jo
and
xor
or
or
or
js
lods
inc
mov
shlb
and
push
cltd
leave
ss
sub
icebp
mov
es
lahf
cwtl
stos
sbb
jno
and
push
stc
out
fisubrs
and
fdivrs
fdivl
and
cmp
js
lock
pop
insl
loopne
lods
mov
and
xchg
fmuls
cmc
mov
lret
imul
jns
repnz
add
xchg
jmp
in
pop
incb
mov
cwtl
pushf
call
or
mov
aam
xor
popf
xchg
fcoms
xchg
and
mov
ja
popa
mov
dec
dec
pop
decb
cld
into
inc
pop
add
aas
fs
insb
ret
mov
and
push
ja
cmp
or
jbe
mov
int3
in
imul
push
add
dec
dec
sub
incl
and
lock
xor
push
mov
insb
pop
push
bound
lock
jmp
mov
inc
fcompp
test
ds
mov
das
icebp
sbb
xchg
sbb
into
test
or
inc
jne
stc
jecxz
scas
xor
inc
movsl
mov
into
and
mov
hlt
xchg
data16
xor
fdivs
xchg
cli
mov
mov
sub
mov
into
sahf
nop
movb
pmuludq
dec
sbb
pop
jp
jmp
cmc
or
push
add
stos
sbb
inc
xchg
mov
mov
ror
push
inc
jg
xchg
js
test
jo
adc
call
loope
inc
cmp
mov
data16
dec
inc
mov
pop
popa
das
dec
fwait
mov
stos
aaa
lods
ja
or
sahf
sub
push
adc
sti
mov
jecxz
out
xlat
pop
mov
in
push
cmp
in
sbb
bound
sbb
pop
jl
and
dec
in
sbb
mov
xchg
mov
aad
icebp
push
pushf
icebp
mov
addb
cs
xor
outsb
stc
cmp
jle
leave
shlb
or
lret
xor
xor
mov
jo
cmp
cs
cli
hlt
mov
mov
popa
cmp
dec
imul
mov
xchg
les
jle
xor
inc
xchg
and
dec
push
jle
es
cwtl
or
lret
mov
pusha
and
lcall
loopne
push
push
js
adcb
pushw
fs
bound
into
test
outsl
std
or
pop
dec
jns
ss
mov
rcrl
jnp
incl
sub
rol
out
ljmp
js
and
push
in
add
sbb
push
movb
insb
cwtl
orl
fdivrp
jg
sahf
inc
mov
setns
aam
xor
loopne
shlb
cld
or
pushl
cmp
mov
fsubr
nop
mov
aas
jge
roll
push
or
lret
mov
hlt
pop
and
test
ret
scas
or
jge
cwtl
inc
fwait
hlt
push
fcmovnb
add
leave
ja
into
cld
shl
push
mov
sbb
js
dec
push
pop
push
mov
fildl
rorl
mov
xor
scas
pop
cld
gs
call
xor
scas
pop
adc
inc
mov
test
cmpb
add
sub
fsubrl
sub
adc
lods
lods
mov
jae
outsl
in
xchg
push
shll
int
dec
fistpll
lcall
adc
xor
aas
fcmovb
cmp
or
in
push
mov
push
fs
pop
push
daa
or
dec
mov
aam
jp
sbb
rcrb
rorl
fwait
ret
xor
adc
mov
dec
movsl
mov
aas
xor
push
test
push
sub
shll
test
ss
adc
mov
int
mov
sub
pusha
pop
int
test
repnz
rcl
shl
mov
mov
pop
push
lock
dec
std
adc
dec
add
push
xor
jle
xor
sub
push
ret
adc
push
jnp
xlat
pop
mov
dec
dec
sub
ljmp
adc
mov
mov
rolb
and
and
stos
nopl
ret
fdivr
shlb
inc
mov
and
sahf
pop
cmp
sbb
data16
push
cli
add
xor
push
shrl
jmp
mov
in
scas
add
ret
sahf
subl
lcall
xchg
add
cmpsl
and
leave
push
lods
or
and
pop
inc
fists
stos
mov
add
dec
mov
mov
xor
add
sub
cs
sahf
adc
ja
ficoms
pop
ds
pop
in
mov
mov
test
repz
sti
ljmp
pop
lahf
push
cmp
outsb
lock
call
popa
daa
test
imul
pop
jl
inc
or
or
dec
lods
push
mov
sub
mov
add
push
jo
pop
pop
loop
in
movsl
ljmp
cwtl
sbb
dec
mov
loop
adc
out
dec
pop
push
add
xchg
jno
mov
fs
add
mov
inc
cmp
ja
test
add
sub
pop
jmp
mov
xchg
pusha
leave
iret
dec
pop
mov
pop
mov
push
push
xchg
jb
mov
test
subb
shlb
sub
rep
int3
mov
sub
bound
mov
cmpl
sub
mov
je
push
lods
inc
sbb
add
fdivs
sub
addb
sub
ds
and
loopne
cmp
jg
pop
xchg
push
xchg
testl
or
into
es
sbb
mov
xchg
decl
pop
or
xchg
and
mov
and
pop
or
cmp
out
loope
pop
pop
adc
lcall
xchg
icebp
in
dec
and
test
xor
inc
push
pop
pop
push
fidivl
push
xchg
ficomps
mov
incl
jo
jecxz
xlat
dec
addr16
xor
sbb
pop
adc
cld
jnp
jne
jmp
push
aas
cld
iret
cli
inc
cmc
xchg
xor
cs
inc
jl
push
add
imul
xchg
cmc
ljmp
aaa
mov
es
mov
jmp
xor
std
pop
push
clc
sbb
adc
inc
ss
es
pop
aad
push
loopne
inc
mov
ss
jmp
or
fwait
pop
inc
leave
sbb
jmp
pusha
nop
das
inc
clc
scas
movsl
push
inc
xor
daa
loopne
jbe
in
or
jno
push
das
pop
loopne
lods
inc
adc
add
push
mov
inc
repnz
fxch
or
xlat
ja
jbe
imul
or
arpl
or
mov
sbb
fists
xchg
incl
pop
rcrb
psubd
fsubrl
or
mov
and
into
sbb
cmp
add
lahf
or
lds
leave
sbb
dec
lea
fbld
pushf
icebp
popf
dec
test
lret
test
jle
mov
insl
aaa
shll
js
rclb
or
push
pop
pop
sub
cmc
je
sub
jle
jbe
or
jo
insl
jmp
pusha
inc
out
pusha
or
lock
call
nop
sbb
jp
aam
test
sub
push
pop
cmpsb
jne
or
push
gs
aas
hlt
in
test
jnp
sti
mov
out
out
das
cmp
jp
sbb
xor
and
cs
lock
repnz
pop
xchg
jl
pop
arpl
lds
xlat
lock
lock
hlt
dec
movsl
cmp
loope
rcrl
mov
push
jno
addr16
fbstp
push
push
and
xchg
mov
adc
xor
out
push
cli
insl
repnz
addl
inc
ja
sbb
push
add
loope
jnp
cld
in
ja
daa
lock
lods
push
adc
icebp
mov
lcall
or
add
ja
ret
sub
int3
cmpsl
sbb
test
pop
jl
sbb
adc
pop
cmova
aas
lret
jns
push
pop
push
cmp
faddl
adc
cli
push
dec
and
jo
adc
sbb
insb
push
out
jle
lahf
cmp
jne
scas
adc
aad
mov
inc
movsl
xor
sbb
xlat
bound
call
dec
stos
adc
and
and
call
inc
inc
test
sbb
test
stos
mov
and
rcr
loopne
addl
jp
cltd
pop
push
loopne
cmp
mov
sbb
rol
pushl
cmp
pop
rcl
push
pop
subb
push
push
scas
mov
xchg
xchg
dec
js
out
scas
mov
fwait
pushf
in
mov
and
sbb
test
movsb
cwtl
cmp
cmp
and
or
pop
cmp
inc
sbb
nop
clc
jb
fisttpll
adc
je
mov
dec
movsb
test
aad
xchg
int3
add
jno
cmpsl
jge
vmwrite
cmp
cmp
inc
push
fadd
add
fdivr
and
dec
ret
cwtl
pusha
and
pop
and
mov
test
pop
stos
inc
lds
adc
add
xor
inc
xchg
inc
adc
xchg
cld
jo
mov
mov
dec
xor
and
fnstcw
out
adc
mov
or
test
cld
mov
jecxz
movsl
sbb
les
js
or
mov
xchg
add
les
cld
lret
push
stos
mov
incb
in
aas
pop
lds
or
into
dec
dec
sub
cld
or
std
jl
dec
popf
pop
int3
pop
call
and
jno
xor
adc
movsb
jo
sbb
and
sahf
add
aas
push
cld
jo
mov
dec
jecxz
inc
leave
mov
ret
mov
ret
or
push
xchg
faddp
xchg
sahf
fnstenv
or
push
sub
push
xchg
jle
ja
cmp
es
xor
jae
push
pop
mov
jo
inc
xor
mov
add
test
push
jmp
call
pop
das
pusha
es
sbb
jecxz
cmpsl
push
lock
mov
sbb
popf
movsb
insb
sbb
ja
sbb
popa
and
cmpsl
xlat
mov
fdivp
subl
sbb
pop
outsl
divps
or
arpl
maskmovq
mull
adc
loop
push
pop
sbb
testl
push
jmp
mov
lret
fwait
inc
cmp
push
lds
cmp
mov
orb
lods
ret
pop
mov
mov
imul
mov
nop
cs
or
cmpsb
test
mov
insb
add
cld
shrl
scas
sbb
add
idivb
js
xchg
mov
add
pop
sub
mov
addb
cli
jo
sbb
jmp
cmpb
ret
jmp
jecxz
and
mov
push
xchg
sbb
add
adc
or
adc
jae
add
sub
jmp
jge
mov
shr
adc
sub
mov
inc
cltd
cmp
outsl
out
inc
mov
add
mov
icebp
adc
loope
xchg
cmp
daa
outsl
push
stc
into
xor
mov
loope
jae
push
ret
pop
mov
xor
and
inc
inc
std
sbb
pusha
leave
xlat
add
xor
pop
xor
rorl
or
into
inc
sahf
xor
jae
cwtl
cs
pusha
inc
or
xchg
jns
ret
jbe
adc
aas
or
sbb
jecxz
jne
xor
test
les
inc
xchg
mov
jb
adc
std
insb
test
andl
sub
push
popl
pusha
les
loopne
inc
fmuls
and
mov
ljmp
adc
bound
cld
loopne
scas
cwtl
std
imul
fistps
gs
lret
insb
push
push
or
dec
inc
scas
xor
pop
or
jno
mov
add
xchg
lea
sub
sbb
addl
and
jbe
pop
ljmp
popf
ljmp
xor
or
fcmovnb
mov
out
mov
pop
add
cli
decl
sbb
add
push
dec
fst
shufps
and
mov
mov
dec
scas
xor
mov
gs
inc
adc
inc
xor
outsl
pop
xchg
sbb
mov
mov
rolb
dec
jle
loope
mov
and
xor
jl
adc
adcl
inc
fstpt
subl
int3
test
push
call
cmc
and
add
loop
jl
pop
aaa
add
lahf
lcall
cmp
shll
pop
repnz
pop
aas
mov
xchg
mov
loop
loop,pt
outsl
mov
xchg
cwtl
sbb
out
jle
push
test
das
xor
push
fwait
scas
cmp
daa
xor
xor
pop
pop
subl
movsb
adc
mov
aas
pop
in
sub
push
mov
mov
push
lcall
pop
pop
orl
roll
mov
mov
cld
mov
rcrb
and
or
cld
ret
sub
mov
lock
ljmp
mov
add
sbb
std
scas
gs
aaa
mov
mov
cmp
lret
sub
add
xchg
clc
inc
push
xchg
nop
decl
insb
scas
ds
push
mov
popf
idivb
pop
dec
stc
inc
cmp
xor
andl
mov
dec
ret
sub
std
push
fildll
push
cmpsl
mov
aas
inc
inc
pop
lods
pop
call
mov
sbb
pusha
and
jbe
and
inc
lret
mov
stc
jae
rolb
iret
sbb
int
mov
ds
aam
sub
cmp
mov
ret
fstl
stc
dec
cmp
ds
cld
cmp
cmp
sub
mov
mov
xchg
or
pop
adc
mov
dec
push
idiv
rcrl
mov
lods
pusha
pushf
mov
dec
es
clc
mov
cs
xor
dec
inc
xchg
icebp
adcl
mov
test
leave
scas
aam
sub
cmc
call
mov
ret
inc
dec
movsb
cld
lret
test
cmp
std
jmp
mov
xor
sbb
mov
adc
push
inc
and
pop
and
mov
jnp
or
jle
das
sbb
cli
inc
push
inc
sti
fldt
mov
inc
and
xchg
clc
push
ffreep
jg
jno
or
add
dec
out
in
shl
inc
out
jl
dec
push
ja
lret
fcompl
and
push
xor
enter
pop
xor
loop
aam
and
das
mov
inc
test
push
sbb
pop
stos
adc
or
into
or
inc
ss
sahf
mov
pop
arpl
rolb
cmp
push
test
enter
jecxz
jp
call
aas
jle
pop
orl
mov
mulb
mov
outsl
fsub
testb
mov
pop
js
cmp
or
sbb
adc
push
sbb
subl
push
icebp
add
out
outsb
dec
dec
xor
loope
xchg
lret
mov
aad
and
ret
cmpsb
or
loopne
jge
xor
stos
mov
lods
add
es
add
sahf
add
repz
cmp
pop
mov
push
mov
xor
adc
adc
bound
push
inc
lahf
fldt
aad
shlb
test
inc
repz
jle
inc
hlt
add
mov
sub
cli
sbb
movsb
jg
xor
pop
xchg
ret
int3
clc
test
fcmovb
pop
dec
decl
mov
push
cmp
inc
mov
testb
and
test
clc
mov
out
movsb
inc
inc
ret
int
xor
loop
pop
pop
outsl
mov
fs
add
sbbl
xor
stos
mov
loopne
jno
jecxz
ret
inc
sub
dec
push
push
fisttpll
rclb
inc
mov
jp
sbbl
add
clc
inc
pop
sbbb
scas
inc
push
ljmp
adc
and
inc
xor
inc
and
dec
sub
int
mov
add
sub
cltd
call
inc
xor
lret
fwait
xchg
fwait
lock
mov
inc
mov
imulb
scas
sahf
setne
xor
std
dec
stos
pusha
scas
push
jge,pt
dec
shrb
adc
int
adc
mov
xor
popa
fildl
clc
xchg
jp
dec
mov
sbb
or
test
out
xchg
test
add
insb
and
pop
mov
popf
aam
test
pop
jl
ret
sbb
outsl
cmpsl
imul
push
push
stc
jmp
mov
clc
jne
scas
xchg
icebp
adc
add
cmp
mov
mov
pop
cmp
inc
cmp
pop
or
xchg
loopne
pop
fs
inc
dec
and
jb
lret
ror
cli
imulb
test
and
movsl
icebp
cld
outsl
mov
adc
push
add
push
xor
cmc
jmp
stos
aas
push
push
mov
dec
outsl
or
add
push
mov
inc
cmp
movsb
imul
loop
test
inc
add
pop
decl
push
sbbb
jg
dec
stos
dec
push
cmpsb
mov
jmp
push
aaa
push
add
lock
rcrb
fiaddl
adc
test
mov
sbb
push
push
inc
mov
dec
xor
dec
les
pop
jg
out
fidivs
imul
adc
or
xchg
movsl
push
repz
rcr
xor
sbb
aam
cmp
lock
xchg
pop
adc
dec
pop
aas
jno
pusha
or
stc
loopne
mov
inc
divps
add
inc
xor
test
jne
aad
xchg
inc
out
lods
bound
push
sub
xchg
push
xchg
add
mov
punpcklbw
lahf
dec
dec
rcrl
and
push
into
push
out
notl
mov
cmp
or
xchg
pop
inc
mov
inc
fstl
popa
loope
push
dec
adc
mov
push
xchg
leave
test
adc
push
das
inc
and
inc
inc
fucompp
mov
cmpsl
cmp
int
call
loop
jg
xabort
xor
push
lock
insb
cmp
dec
pushf
lods
cs
inc
ljmp
dec
cmp
out
add
mov
adc
cs
sbb
dec
cwtl
cmp
xchg
insl
or
xor
pop
repz
divl
test
mov
sub
or
mov
pusha
dec
mov
dec
inc
js
jnp
std
cmp
mov
mov
sbbl
dec
dec
mov
add
fwait
icebp
cmc
cmpsl
cltd
mov
mov
mov
shlb
lods
es
stos
xlat
dec
mov
mov
fldt
cmc
pop
dec
fisubrs
in
add
jne
fucomi
pusha
std
subb
test
xor
pop
cld
les
testl
mov
ret
add
mov
cmpsl
mov
xchg
jmp
jl
push
sti
add
add
push
les
dec
cmp
mov
fwait
enter
imul
xlat
push
jg
mov
push
mov
sub
add
lds
jae
stc
in
pop
out
in
ret
scas
add
sahf
jo
push
lret
fadds
jecxz
inc
and
xorb
cmp
sbb
ret
sti
add
add
jnp
lds
inc
mov
les
orb
sub
jecxz
sti
and
es
cltd
jp
xor
clc
inc
sbb
mov
add
mov
mov
xchg
mov
loopne
repnz
sbb
enter
dec
pop
jo
stos
push
out
mov
addr16
sbb
dec
das
mov
cld
or
sbb
test
dec
rclb
mov
mov
out
lods
int
and
push
stos
subb
lds
dec
sub
nop
pop
cmpsb
and
dec
jb
jg
loop
xchg
cmp
sub
imul
in
mov
or
pop
scas
jle
iret
pusha
and
stc
push
fildl
scas
inc
ljmp
loope
mov
mov
dec
outsl
test
outsl
loope
xchg
xchg
rcrb
dec
inc
and
icebp
bound
lret
fwait
lea
repnz
mov
jl
clc
cmovo
es
cmp
adc
xorb
adc
push
scas
mov
test
jno
aaa
hlt
cwtl
popa
or
sahf
xor
or
push
mov
lahf
pop
shlb
add
jle
js
mov
pop
shlb
mov
cwtl
jns
das
pop
push
dec
clc
data16
jl
loopne
sti
or
push
jns
jge
jmp
bound
or
out
shrl
pop
loopne
pop
or
or
lods
mov
or
jle
or
adc
xchg
add
mov
xchg
cmc
mov
xchg
stos
test
cwtl
xlat
xchg
jle
ljmp
jo
mov
mul
cwtl
or
popa
adc
lcall
into
int
test
lds
jmp
adc
sbb
adc
add
mov
aas
cs
ret
test
and
mov
into
mov
sbb
add
mov
pop
dec
test
in
pop
mov
xchg
in
sti
sbb
pop
lcall
jp
cmpsb
fildll
jno
and
imulb
add
mov
outsl
inc
inc
insl
lret
mov
adc
jl
je
outsl
testl
push
or
loopne
jl
mov
adc
sub
inc
in
sarb
add
dec
dec
add
stos
jb
sbb
mov
sbb
cmp
inc
in
scas
jg
cmpl
and
inc
and
out
fisttps
mov
or
icebp
mov
jecxz
add
filds
clc
push
jle
or
add
negl
sub
addr16
inc
push
xor
fildll
or
adc
sbb
push
sbb
pop
rorb
jns
ljmp
shlb
xlat
push
add
cmp
in
imul
in
or
mov
outsb
inc
js
lds
sbb
bound
mov
or
sbb
pop
test
rorl
push
mov
lock
or
xor
orb
pusha
jp
aas
in
loope
jne
pop
mov
cmp
pusha
out
mov
pop
xor
inc
cmpsl
nop
movsb
adc
adc
loopne
add
pushf
mov
jp
jo
push
cmp
popa
jg
jmp
inc
inc
dec
dec
sti
clc
icebp
or
mov
cmp
xor
or
out
shl
into
inc
adc
mov
lret
scas
cmp
pop
push
pop
test
lds
inc
push
pusha
push
ljmp
cmp
andl
push
in
xchg
lcall
mov
mov
inc
mov
rolb
scas
in
adc
fiaddl
test
invd
mov
mov
xchg
icebp
movsb
adc
outsl
les
adc
fildl
push
mov
cs
mov
inc
loop
jp
adc
or
mov
inc
aaa
loop
and
pop
mov
jae
ret
cs
repz
push
into
inc
mov
mov
mov
pop
adc
orl
lcall
push
sub
push
imul
push
loope,pt
mov
jp
aam
cmp
test
cmpsb
out
dec
andl
in
cmp
xor
mov
push
jg
sbb
dec
ficoms
lahf
sub
adc
xchg
lret
mov
xor
dec
mov
xchg
orb
pop
mov
lock
in
decb
cmc
andl
subl
add
imul
mov
jecxz
sbb
mov
jo
jmp
pop
fstpl
in
or
mov
les
mov
inc
pop
paddusw
inc
sti
clc
pop
push
dec
pop
cld
lods
pop
cltd
jmp
push
rolb
divl
cmp
es
bound
das
or
lahf
adc
mov
inc
aas
lods
sbb
sbb
jl
sub
dec
or
mov
add
in
push
push
lcall
mov
adc
pop
in
icebp
push
cmpsb
adc
mov
fsubrs
insl
ret
out
add
repz
ss
nop
push
es
pushf
loopne
in
stos
pop
xor
mov
jecxz
inc
scas
push
add
xchg
ror
std
fistl
or
pushl
push
popa
js
mov
mov
lcall
loope
bnd
pop
push
sub
lock
jns
ss
loopne
ljmp
call
es
call
dec
jmp
mov
fldl
lock
hlt
lds
rcl
in
pop
sar
int3
repnz
inc
fcomps
call
add
push
imul
add
or
mov
cs
lcall
cmp
mov
or
adc
aad
filds
test
and
push
idiv
stc
sbb
movsl
and
xor
add
shll
jmp
fcomps
shll
shlb
test
mov
call
test
xchg
cmp
add
jp
clc
jo
loop
mov
xor
or
sarb
in
and
push
jle
inc
outsb
xchg
js
or
movsl
mov
lods
adc
rcrb
sub
imul
push
or
add
push
mov
shll
inc
mov
into
push
xorb
das
ja
xor
jge
es
adc
mov
jg
mov
cld
mov
stc
das
pop
sub
xchg
lods
jge
movsb
data16
pop
xor
int3
testl
sub
clc
or
js
sbb
andb
icebp
push
sub
or
imul
ret
arpl
fdivrp
sub
lds
lods
imul
pop
mov
mov
xchg
sub
xor
ljmp
or
push
loope
mov
out
imul
lods
cmp
nop
adc
or
orb
mov
das
fcomps
push
jg
in
je
and
jp
mov
iret
xchg
insb
out
mov
mov
cld
outsl
int
insl
mov
mov
loopne
mov
lret
test
jne
inc
int3
cltd
call
in
jge
and
jae
cmc
negl
out
jns
add
jp
mov
hlt
jle
shr
xchg
fldt
arpl
sub
sbb
cmpsb
adc
and
pop
push
add
insb
call
dec
push
dec
lcall
sub
pushf
mov
pop
test
js
mov
sbb
adc
pop
out
mov
repnz
inc
and
lret
out
push
addl
adc
sbb
test
sbb
sarl
fwait
neg
xor
pop
test
mov
pop
loope
lods
inc
pop
and
push
loope
shrb
dec
add
pop
xchg
sahf
sub
sti
and
out
cwtl
mov
mov
sub
xchg
push
into
sbbb
push
insw
cltd
jl
sbb
cld
das
sbb
pop
pop
jl
xor
jecxz
scas
insl
aas
cmpsb
insb
dec
push
mov
sbb
pop
outsb
test
loop
push
xchg
mov
sub
gs
in
fisubl
pop
data16
mov
inc
mov
inc
shl
push
jo
test
mov
xchg
pusha
or
sbb
mov
adc
in
jns
andb
test
fstps
push
dec
test
sub
rol
push
das
push
pop
mov
gs
ret
add
in
mov
insl
icebp
aam
ljmp
inc
sbb
pop
or
sbb
popl
xchg
pop
cmp
sub
mov
sub
mov
or
cmp
insb
loopne
ss
and
mov
lods
dec
fs
push
loopne
add
ljmp
fnstsw
in
sbb
pop
or
rorb
jecxz
adc
shrl
pusha
test
jl
mov
and
mov
xor
cmc
or
ret
mov
xlat
mov
sbbb
mov
fstp
mov
cli
sub
inc
jnp
in
mov
mov
in
xchg
xchg
add
frstor
movsl
jg
jge
adc
inc
mov
rclb
sbb
mov
daa
pop
shlb
adc
int
ret
mov
xchg
dec
xlat
rcrb
push
repnz
sbb
add
cmp
adc
sbb
in
popa
and
movb
leave
fiaddl
sub
lods
iret
push
stc
jg
sub
mov
bound
in
cmp
mov
lret
in
inc
loop
sbb
dec
imul
stos
sahf
ja
push
push
pop
js
xor
rol
pop
sub
movaps
cmp
rolb
inc
std
push
je
adc
jl
mov
rorb
add
enter
outsl
dec
add
jle
sbb
xchg
fs
fiaddl
inc
or
mov
shlb
push
pusha
enter
bound
cmpsl
add
jnp
jp
push
sbb
sbb
inc
mov
add
xor
xchg
lods
or
or
mov
ljmp
cmp
cmpb
stos
inc
jl
test
push
cld
jnp
fldt
push
mov
dec
outsl
es
and
and
daa
cli
and
cmc
mov
or
add
pushf
sub
jecxz
or
adc
fsts
stos
xchg
cltd
or
xchg
mov
shlb
test
clc
push
pop
pop
cmc
fscale
xchg
sbbl
addb
inc
ljmp
jo
add
clc
popa
das
shll
inc
xchg
stc
enter
inc
rcll
fists
fcoml
out
aad
std
mov
leave
mov
dec
int
mov
cmpsb
aas
call
call
pop
jnp
clc
call
jns
pop
adc
loope
inc
sbb
es
call
xchg
mov
xor
pop
out
test
mov
or
jle
loopne
lea
bound
cli
ja
scas
mov
adc
outsb
mov
lcall
cwtl
push
pop
jge
jecxz
or
mov
subl
repz
inc
pop
pop
lcall
cli
pop
or
push
inc
xchg
sbb
sub
jp
sub
aad
jnp
or
dec
loop,pt
stos
push
jns
jecxz
lods
dec
sbb
incl
and
sbb
cmp
outsb
lock
add
inc
out
mov
pop
jg
jge
loope
sub
add
add
clc
cs
incl
fdivrs
add
mov
fstl
loopne
jmp
push
push
bound
or
cmpsl
leave
sbb
inc
pop
hlt
pop
ja
stc
push
jo
ficoms
dec
adc
xor
add
dec
pop
inc
xchg
cmpsl
aam
imul
and
adc
js
sahf
ss
xor
inc
inc
pop
add
fs
addr16
daa
jecxz
push
addl
jle
iret
dec
push
cli
js
aam
push
add
or
aas
pop
inc
cwtl
mov
fcomps
inc
lods
add
int3
inc
jbe
cld
xchg
xchg
jne
loopne
test
pop
mov
into
insl
inc
or
adc
icebp
push
dec
add
fiaddl
shr
push
cs
movsb
dec
adc
sbb
inc
hlt
inc
shll
mov
mul
inc
lret
addr16
cmp
cmp
sbb
sbb
ret
addr16
scas
and
movsb
and
mov
push
cmpsl
and
psubb
std
xlat
je
jle
addr16
xor
inc
out
xchg
push
lcall
xchg
frstor
fwait
xchg
call
jns
jl
inc
les
std
dec
add
loope
and
fwait
jb
sti
and
mov
or
shll
ds
mov
movsb
mov
pusha
fwait
or
sub
cmp
adc
xchg
scas
test
xor
and
dec
dec
dec
cmp
push
lret
mov
lret
xchg
arpl
fs
mov
test
mov
nop
xor
stc
sarb
adc
inc
js
push
stos
cld
cwtl
cli
push
mov
shlb
adc
adc
jg
fsubs
mov
shll
pop
loopne
in
xor
mov
or
pop
pop
dec
add
xor
cmc
cmp
pusha
sahf
push
pinsrw
dec
push
or
xor
out
push
mov
xor
or
cmpb
popf
bound
js
clc
mov
cwtl
aam
je
mov
add
call
push
add
out
mov
push
rcl
aas
xchg
mov
sub
push
loop
xor
nop
aaa
cmp
pop
push
lea
loopne
ret
adc
push
xchg
fs
sbb
adc
notb
xor
jb
pop
iret
pop
fistpll
jmp
add
insl
jmp
xor
out
clc
or
push
xchg
xchg
sbb
stc
add
add
inc
jae
dec
add
or
insl
or
dec
hlt
leave
push
rcll
fidivs
push
js
aad
inc
jmp
push
in
inc
and
or
rcrb
mov
cmp
sbb
ss
mov
mov
jl
clc
pop
jecxz
add
int
ret
hlt
or
dec
mov
les
add
aam
fs
sub
stc
mov
dec
adc
mov
jno
rcl
icebp
out
les
clc
sub
pminub
out
sub
inc
and
xchg
leave
add
nop
bound
jg
rolb
lock
jo
pop
jle
test
inc
pop
xchg
jb
add
xor
sub
xchg
jle
mov
ret
cli
cmp
xor
mov
std
decl
imul
and
loopne
adc
sti
pop
mov
jne
sbb
and
xor
loopne
and
lods
jg
mov
xor
jp
and
in
lcall
jge
loop
mov
and
pop
lock
xchg
shll
and
push
jl
xor
mov
lock
push
sbb
push
push
jle
andl
cmovl
sbb
cmpsb
aas
jno
dec
lods
stos
lock
or
adc
adc
mov
jae
out
nop
adc
jo
popf
into
sbbl
dec
ljmp
out
idiv
sub
xor
mov
clc
inc
xchg
inc
ss
out
fstl
rclb
pop
and
jecxz
ret
jmp
mov
mov
jbe
mov
xchg
sbb
pcmpeqb
lods
inc
jmp
lahf
or
push
or
xchg
jl
loopne
icebp
adc
scas
add
or
mov
and
js
push
mov
mov
lret
std
jnp
stos
clc
pop
fdivs
xchg
xor
add
in
mov
jbe
push
push
inc
sbb
or
mov
adc
adc
outsb
cmp
je
adc
hlt
scas
call
and
test
or
mov
fistpll
imul
les
outsl
es
cli
lds
lcall
ret
pop
loopne
jb
in
add
stc
leave
mov
and
xchg
adcl
push
lock
add
mov
jmp
cmp
js
xchg
lods
add
mov
outsb
cli
mov
dec
stos
xchg
mov
pop
xor
xlat
sub
cmp
sub
and
push
ljmp
pop
test
mov
aad
in
push
add
push
and
test
xlat
mov
jae
mov
cmp
fiadds
and
test
lock
clc
les
ja
imull
mov
sbb
cmp
pop
lea
inc
les
in
sbb
adc
aam
xchg
rcrb
mov
cmp
dec
xchg
clc
icebp
cmp
stos
pusha
and
add
pushf
inc
and
inc
jmp
jno
clc
push
push
jecxz
or
cltd
addr16
sahf
adc
bound
incl
cli
fldenv
add
aaa
xor
lods
mov
pop
add
jge
hlt
test
sbbl
inc
xchg
xor
outsl
cmp
movsl
mov
lahf
aaa
add
push
jo
cmpsb
cmp
sub
cwtl
hlt
add
add
mov
clc
ucomiss
push
sbb
mov
sub
inc
pop
pop
mov
std
pop
or
mov
inc
cmpb
jl
push
hlt
clc
xchg
push
loopne
pushl
mov
cld
mov
pop
or
jg
adc
cld
clc
inc
pop
roll
push
lahf
test
push
mov
test
lock
adc
rcrb
dec
dec
test
ret
mov
out
mov
inc
mov
dec
sbbb
loope
sbb
shl
lea
mov
sti
xor
push
jne
cmpl
xor
xchg
ret
inc
data16
aas
push
fdivrp
stc
sub
jo
and
stc
or
in
xchg
jg
push
cmp
push
and
xchg
sub
inc
data16
mov
loope
pusha
jae
push
repnz
scas
in
push
adc
cmp
inc
test
mov
outsl
imul
insb
jno
jmp
adc
sahf
jno
inc
push
movsl
clc
mov
cmpsl
sbb
je
push
out
mov
clc
scas
and
mov
or
add
jge
adc
and
lods
pop
ret
mov
adc
adc
loop
out
mov
sbb
into
movb
jnp
scas
incb
lea
js
cli
sahf
sbb
fcomps
sbb
dec
adc
push
int
pop
adc
pusha
daa
iret
sbb
insb
shll
jp
pop
jecxz
lds
or
and
xchg
mov
test
and
push
hlt
rorl
mov
xlat
jp
jmp
xchg
cmpsb
dec
stos
adcb
inc
push
test
dec
icebp
in
xor
or
out
xor
lods
lahf
lahf
push
and
fnstsw
scas
pushf
icebp
sahf
lds
xor
clc
jge
scas
nopl
lods
or
outsb
xchg
push
jo
adc
lods
fsts
jnp
aaa
cmp
test
lret
inc
jne
sub
adc
movsl
jecxz
aas
lods
cld
mov
jo
xor
and
xor
adc
test
add
or
arpl
enter
push
jmp
std
fisubrl
mov
pop
aam
cmp
mov
sub
mov
inc
push
aam
xor
push
loopne
dec
popa
jo
enter
rcll
insb
push
push
cld
push
inc
clc
cmpsb
add
or
ljmp
jge
lret
xchg
inc
cmp
add
sub
clc
pop
insb
test
dec
pop
fadd
mov
das
push
mov
inc
sbb
iret
or
mov
xchg
adc
scas
jno
dec
test
cld
adc
inc
inc
jge
lahf
lahf
outsl
insl
inc
or
lock
pop
mov
and
or
imul
xchg
test
mov
push
and
hlt
scas
jae
dec
and
js
loop
cwtl
lods
incl
xorb
mov
cltd
ret
pop
adc
out
test
jae
ss
and
mov
imul
test
push
mov
sbb
popa
jp
add
push
dec
xchg
sbb
pop
hlt
pop
cli
test
inc
movsl
push
xchg
nop
jp
cmp
loopne
subb
pop
cli
push
mov
rcrb
rol
ret
xchg
jg
or
and
lea
shrb
jg
cmpl
push
test
or
jl
loop
pop
cmp
test
push
addl
gs
cmp
sbb
mov
pop
int3
sub
sub
push
xor
push
mov
cmp
movsb
adc
sbb
ret
xchg
and
jb
jp
mov
and
ret
sub
nop
fs
sub
push
jp
sub
jns
xchg
jp
test
add
cld
lcall
lret
cmp
test
aaa
push
sarb
or
xchg
jne
jmp
mov
or
pop
aaa
sbb
imul
jle
sbb
sahf
loopne
int3
scas
test
add
xchg
fs
mov
ss
in
out
stos
add
pop
mov
dec
test
adc
push
repz
and
repnz
aaa
jl
inc
pushf
call
pop
xchg
scas
subl
mov
sub
cld
and
int3
ljmp
iret
loopne
subb
jns
loope
jbe
jge
and
push
dec
sbbb
imul
sbb
xlat
loopne
aaa
add
and
imul
mov
mov
orb
sbb
cs
andl
dec
mov
add
push
jecxz
movsb
jne
movsb
pop
xchg
inc
clc
add
cmpsl
mov
mov
shll
popf
imul
icebp
scas
stc
hlt
aas
xchg
popa
push
push
lods
jl
pop
ljmp
and
jno
xchg
push
xor
lcall
push
xchg
cmp
sbb
and
js
pusha
add
cmpsl
jle
test
mov
pusha
mov
aam
roll
fildll
and
adc
ret
mov
inc
adc
push
jmp
imul
mov
cli
cmc
aas
mov
inc
rclb
mov
bound
xchg
mov
decb
bound
and
xor
xchg
mov
xlat
into
mov
lods
mov
rcrl
adc
jmp
pop
frstor
push
mov
lahf
pop
mov
les
addl
mov
aam
sahf
cmp
sub
or
jge
dec
mov
or
lcall
adc
pop
ret
sbb
add
mov
fst
inc
cmp
cmpsb
leave
inc
pusha
mov
cmp
push
xchg
xchg
std
nop
mov
inc
mov
inc
shr
loopne
cmp
mov
gs
cs
insl
mov
push
pop
xchg
jp
push
push
repz
mov
outsl
add
mov
aas
hlt
push
bsf
and
sbbb
adc
pop
and
je
rolb
outsb
mov
push
ljmp
test
adc
sub
loop
fwait
sub
sar
push
xor
or
les
lock
cmpsl
fnstenv
lock
adc
add
mov
das
xor
mov
xor
add
mov
roll
xorb
fdivs
add
pop
cwtl
out
sbb
xchg
mov
out
mov
add
jmp
std
push
lds
xor
mov
xor
je
add
xchg
mov
mov
push
test
and
out
mov
inc
arpl
or
call
je
or
mov
inc
imul
imul
and
mov
push
xchg
push
clc
add
dec
and
incb
fdivs
jge
jmp
pusha
test
jo
lcall
out
cmp
scas
aad
inc
in
out
jle
aaa
jmp
xchg
gs
xor
ds
push
and
push
shlb
lcall
in
hlt
or
test
lock
pushf
xor
imul
sbb
xor
inc
mov
cmp
stc
shl
mov
mov
imul
and
mov
mov
clc
jecxz
aam
pushf
push
mov
add
fwait
sbb
mov
sbb
cmp
mov
sub
pop
scas
xchg
sti
test
push
mov
fld
sbb
pop
lahf
les
mov
lds
mov
lahf
lds
jmp
mov
jnp
xor
jne
xchg
lahf
and
xchg
clc
push
test
imul
data16
bound
pop
and
inc
adc
popa
cld
push
xchg
cmp
mov
fadds
icebp
lret
pop
dec
sub
jle
dec
mov
jno
jbe
subl
cmp
adc
and
xor
dec
and
hlt
cmp
and
adc
pop
enter
cmc
pop
or
mov
jge
push
jp
inc
mov
repnz
stos
xor
mov
inc
mov
stos
lods
popa
sbb
add
push
mov
mov
pop
clc
pusha
mov
sbb
fcoml
aam
pop
pop
lods
inc
cltd
ret
add
and
push
mov
adc
mov
add
jmp
add
inc
pushf
sarb
add
push
add
sub
or
mov
push
mov
mov
inc
adc
adc
lods
test
dec
clc
ja
dec
fdivl
ljmp
mov
ja
ljmp
and
inc
jne
mov
xlat
xor
and
cmp
mov
sbb
in
sbb
xor
mov
push
xchg
fninit
and
xor
test
xor
add
adc
mov
and
add
and
pop
sub
inc
lock
movsb
out
mov
adc
xor
nop
fistps
mov
imulb
adc
jb
aas
sbb
jo
lcall
fdivl
push
aaa
gs
pop
scas
xchg
ja
adc
div
pop
out
movsb
shll
add
xor
push
ret
push
mov
dec
aaa
adc
jno
push
outsb
inc
adc
mov
pop
int
mov
arpl
mov
movsb
lcall
xchg
lcall
fdivp
sbb
aam
ljmp
pop
loope
clc
cmc
sub
adcl
mov
ss
das
sub
xchg
push
adc
pop
hlt
xchg
lods
and
push
pop
mov
xlat
sub
imul
cmp
push
dec
mov
push
mov
mov
lock
rorl
lcall
dec
mov
nop
inc
hlt
push
testl
pop
mov
adc
insb
ret
cmpsl
jb
jns
cwtl
inc
mov
paddb
jge
dec
and
add
test
addl
std
mov
sarb
les
arpl
adc
mov
gs
cli
mov
js
push
adc
cltd
sub
push
pop
je
inc
or
push
mov
jge
sbb
sub
mov
scas
adc
xchg
test
jg
pushl
daa
nop
fisttpll
push
enter
mov
jno
shrl
addr16
xchg
sbb
je
es
lds
push
scas
mov
pop
mov
ret
pop
sahf
dec
add
sbb
repz
xor
sub
icebp
mov
mov
adc
out
xchg
rorb
jno
mov
mov
mov
xor
lds
push
in
mov
lds
mov
mov
inc
scas
loop
test
in
mov
mov
adcb
add
dec
cmc
push
shl
sub
sbbl
jne
pop
insb
loopne
bound
lret
cli
pop
cs
or
repz
imul
jne
sbb
lret
jg
pop
lahf
adcb
sub
mov
lea
push
imul
loopne
sbb
mov
ja
mov
mov
icebp
add
repz
cmc
xchg
add
xchg
or
mov
fdivrs
sbb
call
adc
mov
push
mov
out
sbb
pop
jmp
push
cmp
add
inc
fisttpl
mov
inc
pop
sbbb
imul
incl
pop
repnz
mov
lahf
xor
scas
out
cmp
outsb
cmp
sub
sahf
insl
mov
adc
cld
or
dec
add
or
push
jb
out
adc
cli
int
ret
xor
add
cli
sub
inc
aad
mov
fnstenv
data16
xchg
sarb
es
fwait
aaa
add
pusha
jbe
sbb
js
and
roll
es
pusha
fsubs
lcall
jne
ret
sti
or
sbb
sub
pop
js
add
jmp
push
mov
fucomi
cmp
cmp
jg
roll
or
jne
cmc
jno
dec
imul
push
in
inc
js
push
dec
xchg
mov
sub
add
mov
cmc
push
jmp
fs
repz
jl
clc
pop
jo
fwait
dec
shlb
sbb
iret
or
sub
xchg
mov
sbb
daa
cmpsb
pop
in
cld
cmp
sbb
sub
int
xbegin
and
xchg
repz
add
ja
bound
lcall
inc
pop
xor
test
sub
js
daa
inc
sub
inc
test
or
cmp
fldcw
adc
fucomip
or
add
nop
rclb
xchg
jnp
add
mov
mov
fwait
cwtl
std
loop
xor
jg
xchg
addr16
fidivs
jg
ljmp
add
pop
fucomip
cmp
mov
mov
adc
hlt
inc
push
mov
xchg
xchg
sbb
sbb
or
pop
mov
sarl
xchg
sbb
ss
bound
mov
pop
jb
xchg
mov
fsubrs
mov
inc
mov
xchg
cmpb
sbb
adc
fidivrs
pop
xchg
mov
les
decl
cmp
cmc
xor
pushf
iret
mov
inc
hlt
insl
mov
xlat
idivl
mov
cmp
popa
and
loopne
test
cmp
addr16
shrb
jge
ljmp
sub
clc
out
repz
rclb
sub
cmpb
test
daa
les
jecxz
sbb
movsl
pop
aad
jmp
aas
cltd
je
popl
xchg
add
jns
xchg
inc
frstor
inc
lret
movsb
data16
cld
fcoms
cmp
sbb
adc
aam
mov
jp
adc
ljmp
iret
movsb
outsl
pop
push
sub
mov
fisttpl
add
sub
cwtl
mov
pop
add
cltd
imul
jae
pop
pop
pop
jmp
fsubl
test
sub
test
aaa
test
mov
test
hlt
les
pop
add
popf
sbb
pop
imul
stc
jbe
mov
adc
jo
adc
daa
scas
inc
push
lea
jge
sbb
adc
arpl
loop
faddl
sub
addb
lahf
push
add
fcmovbe
jnp
fsub
shl
cmpsb
mov
fwait
xor
mov
xchg
dec
out
movsb
in
lock
call
or
sub
cmp
jge
fs
rcl
push
in
jae
outsb
jl
mov
jl
adc
sub
or
loope
ljmp
pop
jmp
dec
sbb
out
add
inc
inc
sub
in
and
call
ds
pop
push
pop
pop
flds
mov
ret
add
dec
sub
pop
mov
in
jle
mov
xlat
cli
inc
and
jae
push
dec
popa
mov
subl
mov
jp
dec
sub
push
pop
test
sbb
pop
cmp
xlat
mov
or
repz
into
aam
push
ret
and
push
cmp
outsl
xchg
ds
pop
xor
mov
int3
or
mov
mov
xor
cli
in
pop
mov
xchg
inc
shrl
sbb
test
mov
das
adc
test
jp
mov
leave
lcall
ss
and
mov
imul
test
sbb
aad
addr16
push
fcoms
fstps
or
das
stos
fwait
sbb
jb
mov
cmp
testl
arpl
inc
adc
cltd
and
mov
jmp
movb
jle
and
push
mov
sub
mov
mov
push
mov
pop
or
pop
mov
sub
enter
jno
insl
dec
into
in
fdivp
xor
push
sbb
dec
adc
mov
out
sbb
or
add
into
jo
cmc
rorb
jecxz,pn
scas
cli
arpl
and
fisubrs
hlt
enter
and
add
idivl
pop
and
mov
les
das
pop
jle
addl
and
xchg
dec
rorb
xor
stos
insb
pop
push
fwait
lods
jge
push
or
and
dec
dec
mov
jno
mov
push
lods
andl
xchg
adc
adc
xchg
das
adc
adc
adc
aad
clc
stos
or
rcl
sbb
push
ret
add
mov
dec
das
ret
mov
jb
aas
lcall
imul
jmp
mov
cmp
scas
cs
das
pusha
or
notb
adc
pusha
push
mov
sbb
jle
inc
sbb
stos
dec
cmpsb
ret
add
fadds
cmc
loope
adc
jmp
and
xor
cmp
ljmp
rolb
insb
adc
mov
test
mov
pop
inc
mov
add
xor
dec
inc
scas
xor
sub
ja
fnstsw
outsb
pushl
scas
lock
inc
test
arpl
or
cmpsb
xchg
push
ja
test
push
insb
xor
aas
shll
cmp
gs
pusha
fdiv
and
add
add
loopne
jb,pt
out
es
jg
add
enter
adc
push
cmp
or
cmp
jge
pop
jno
mov
adc
push
cwtl
fisttpl
dec
inc
mov
cmpsb
sbbb
mov
adc
arpl
add
lods
sbb
outsl
push
mov
notl
pop
ljmp
ja
and
stos
inc
sbb
sbb
adc
add
fcom
cmpl
add
in
iret
sub
pop
add
mov
aaa
push
push
adc
ljmp
call
pusha
outsl
cs
pop
jle
outsl
mov
adc
push
mov
push
lcall
cltd
xor
lods
jp
push
dec
sub
iret
xchg
and
daa
adc
cmp
iret
dec
je
inc
add
xor
ljmp
jge
scas
sar
addb
or
xchg
jle
lods
push
lock
adc
push
wbinvd
jo
cld
jl
inc
imulb
dec
cmp
xor
sub
and
rolb
add
mov
in
subb
clc
xor
icebp
xor
push
adc
stos
push
jmp
xchg
decb
mov
test
cwtl
mov
subl
mov
adc
fnstenv
in
insb
sub
or
dec
clc
subb
arpl
jecxz
cld
loop
and
lods
mov
mov
aaa
icebp
push
repz
fnsave
test
aaa
scas
inc
es
mov
inc
icebp
add
push
cld
test
sbb
loopne
ds
push
adc
mov
jmp
fdivrs
cmp
ljmp
lea
inc
jle
subl
idiv
adc
lcall
icebp
aas
sub
xchg
in
dec
scas
push
jo
sub
repz
test
and
mov
int
pop
mov
mov
xchg
mov
or
std
imul
rorl
sbbb
movsl
pop
les
pop
adc
adc
push
push
outsb
add
cmpl
fidivrl
mov
insl
mov
sub
mov
cmp
push
imul
mov
loope
mov
mov
sahf
movb
aam
daa
addb
ljmp
in
mov
scas
xchg
sub
push
mov
pop
sbb
push
in
daa
out
fistl
xor
popa
pop
mov
xor
mov
es
rcl
xor
shll
or
rorb
icebp
adc
sbb
out
mov
dec
lea
aaa
add
movb
xor
std
dec
cmp
and
dec
jl
pop
addb
int3
fs
pop
add
lret
fisttpll
cwtl
test
fsubrl
push
cmpsb
pusha
jno
adc
xor
lock
aam
cld
mov
insb
std
test
es
sub
jno
push
or
vmovdqu
lret
jg
jo
sub
mov
aaa
fisubrs
add
or
mov
and
xchg
jno
inc
cli
shl
sub
cmp
xor
outsb
mov
dec
int3
inc
mov
sahf
pop
fadds
int
push
push
repnz
insb
xchg
pop
mov
jne
push
mov
dec
jnp
adc
xor
nop
subl
test
addb
ret
in
mov
mov
in
lods
dec
bound
into
mulb
gs
mov
xor
lock
clc
gs
sub
mov
movsl
dec
add
arpl
fbld
sub
and
cmpsb
gs
pop
push
jp
test
or
lock
mov
in
sub
dec
fsubs
cmp
or
outsl
aas
out
mov
test
jmp
dec
mov
add
maxps
dec
inc
jnp
in
mov
add
mov
add
jg
mov
jmp
xor
imul
fwait
pushf
pop
sti
rcrl
lock
push
aaa
fsub
pop
fwait
jno
xor
fnsave
inc
stc
xor
fisttps
mov
cmc
lret
sub
pusha
xor
test
lahf
into
pop
sbb
jl
sbb
push
addb
dec
loope
call
iret
inc
add
and
inc
imul
dec
sub
fsts
ret
mov
jbe
jecxz
scas
cmp
add
inc
mov
pop
jle
in
andl
push
rorb
push
cmpsl
inc
cli
icebp
xchg
xchg
test
aad
inc
je
int3
jb
ljmp
xchg
jb
cmp
jo
stos
cld
in
cs
add
xchg
clc
xor
sbb
xchg
jl
or
andb
and
mov
pushl
jl
movw
popa
lret
pushf
or
push
mov
xchg
decb
fdivl
shl
mov
cmp
testb
ljmp
inc
fdiv
enter
cwtl
adc
xchg
out
inc
cmp
push
xor
pushf
test
push
jmp
cmp
or
data16
mov
sub
gs
cmp
cvttps2pi
xchg
out
lock
sub
add
jmp
push
cmpsl
pop
out
and
pushf
mov
push
jl
xchg
inc
loopne
test
jl
inc
pop
cmp
mov
mov
out
enter
outsl
incl
stos
test
or
je
adc
shl
or
push
sbb
or
aad
and
sbb
mov
lock
dec
add
pop
inc
push
gs
outsl
shlb
aas
push
push
xor
call
fwait
sbb
sbbl
xor
stc
push
xchg
xchg
sub
mov
out
fidivrs
mov
mov
loope
ret
adc
jo
sub
sbbb
aaa
cld
inc
inc
mov
xor
and
xchg
sbbl
daa
inc
push
ljmp
xchg
popa
push
std
mov
cli
in
into
dec
rclb
loope
xchg
lock
outsb
jns
adc
rcrb
test
cmc
out
frstor
fucom
and
mov
sbb
and
test
aam
push
movsb
clc
test
gs
es
mov
rcrb
sahf
jae
inc
mov
and
adc
and
in
xchg
lds
cmpsb
in
pop
lds
out
rorl
add
loopne
pushf
xor
pop
cltd
or
and
ljmp
fiadds
insb
lea
fucomp
scas
sub
and
push
movsl
mov
pop
cld
or
je
xorl
dec
test
add
pop
add
sarb
aam
jmp
xchg
lock
dec
cmp
sbb
mov
test
out
sbb
in
adc
cld
adc
add
jb
mov
std
repnz
sub
mov
lods
loope
pop
clc
ret
sbb
inc
cmp
sbb
xchg
inc
fldl
or
out
int
gs
test
inc
xchg
adc
dec
push
xor
mov
mov
push
mov
add
fstpt
adc
mov
adcl
inc
add
icebp
in
xor
xor
dec
inc
fcmove
aad
daa
jge
sbb
push
insb
es
int
call
lods
das
dec
sbb
mov
push
and
or
xor
push
mov
fwait
scas
mov
jl
sub
mov
lock
ret
loop
push
or
push
cmpsl
popl
pop
jecxz
mov
in
pop
mov
lds
nop
je
das
arpl
sbb
je
pop
xor
rorb
sahf
test
jns
pop
mov
sub
test
jo
jbe
js
adc
or
jmp
cs
cld
cmp
and
hlt
fdivrp
fistpll
gs
movsb
pop
sub
dec
or
cli
out
xor
popa
xchg
inc
adc
mov
mov
pop
inc
and
outsl
cli
lret
lods
ret
inc
cltd
pop
push
out
rolb
std
mov
pop
dec
jl
add
mov
fs
xchg
hlt
sbb
enter
cmp
loope
out
mov
and
arpl
hlt
push
jae
stc
mov
hlt
mov
mov
les
stc
mov
push
or
icebp
xor
pop
mov
jae
sbb
xor
testb
andl
loopne
xchg
hlt
es
mov
nop
mov
dec
push
xor
loope
out
cmpsl
into
inc
adc
es
outsl
xor
sub
or
sub
pusha
push
xchg
cmp
aas
jmp
repz
sub
dec
movmskps
push
inc
push
inc
lods
dec
cs
jno
mov
es
stc
dec
sub
into
or
push
in
cmp
jae
adc
fcomps
rorb
roll
mov
lock
psubd
inc
mov
xchg
add
popa
in
dec
or
adc
sbb
mov
dec
sbb
lds
imul
in
push
fidivl
ud0
fimuls
sbb
leave
inc
xchg
cmp
loope
int
sub
cmovne
icebp
addr16
mov
clc
insb
xchg
mov
lea
daa
inc
les
xchg
push
mov
sbb
test
loopne
roll
mov
inc
or
nop
lea
cli
or
sbb
orl
xlat
xchg
or
dec
and
mov
into
ss
mov
filds
mov
xchg
xchg
cld
sbb
fcomps
xor
or
or
int3
scas
cmp
pop
mov
cli
rcrl
mov
sbbb
cli
push
adc
adc
movsl
inc
sub
lea
mov
add
xor
push
imul
mov
adc
inc
cmp
stos
test
imul
daa
xlat
ds
data16
pop
sbbb
push
sub
dec
das
xor
movsb
cmpb
negb
aas
mov
mov
dec
or
addl
ljmp
dec
jb
mov
jg
aas
mov
add
int3
xor
mov
push
adc
mov
pop
int3
out
jb
inc
xchg
xchg
jne
xchg
into
hlt
pop
cmp
gs
sti
jmp
test
das
and
popa
test
out
pop
mov
or
notb
jo
push
xor
inc
repz
and
and
jg
hlt
popa
js
mov
fwait
push
push
mov
int3
xchg
inc
adc
mov
or
push
jp
jle
xchg
pop
mov
jnp
int3
fmulp
or
fiadds
mov
lcall
sahf
ficompl
inc
mov
cmp
mov
jae
inc
decl
stc
sbb
imul
add
cs
jno
or
loope
daa
mov
push
xchg
xchg
or
rcll
fisttpl
into
ss
or
icebp
sbb
or
pop
lea
and
xor
pop
cli
add
xor
movsl
aam
mov
push
das
or
jecxz
mov
in
scas
jns
les
jecxz
outsl
pop
xchg
push
xor
sub
inc
cmpsb
dec
imull
mov
movsl
test
ja
xchg
mov
inc
insl
in
out
fdiv
inc
add
adcb
jno
lahf
and
in
sbb
adc
pushf
dec
clc
divb
jmp
sub
sbb
add
outsl
sbb
jp
xor
cld
cmp
dec
cmp
push
xor
cmp
movsb
xlat
xchg
and
xor
cmp
jle
push
movsl
xor
icebp
jg
pushf
mov
sti
daa
adc
test
dec
loope
mov
jns
mov
and
ja
lahf
xor
sarl
adc
xchg
mov
js
ja
add
and
cmpsl
xchg
mov
mov
mov
sbbl
loopne
hlt
cmp
outsl
shlb
rcrl
cld
add
fstpl
out
push
sub
dec
pop
rclb
dec
add
sbb
popa
int3
push
sub
clc
int3
xchg
xchg
ret
or
shr
xor
push
fwait
cmpsl
es
xchg
ljmp
icebp
dec
xchg
pusha
bound
add
cmp
adc
fidivl
inc
stc
mov
clc
jmp
push
lcall
call
insl
popa
in
outsl
negb
mov
jne
or
scas
mov
sti
mov
pop
xor
shll
xchg
sti
xor
inc
cmp
pop
aaa
nop
sahf
mov
inc
push
inc
stc
loopne
outsl
mov
and
leave
add
fsubs
and
out
cmpb
jg
addb
cld
adc
push
inc
outsl
xor
mov
adc
daa
cmp
xlat
jmp
repnz
ficomps
popf
or
pop
dec
mov
mov
sbb
add
add
and
cs
cld
out
xor
add
sub
jns
jb
xchg
shlb
rcll
pop
mov
mov
popf
mov
adc
push
ret
stos
lret
xchg
dec
and
lcall
push
js
and
test
dec
inc
sbb
shl
mov
hlt
jne
inc
outsl
pop
nop
inc
les
inc
mov
clc
mov
xor
mov
inc
dec
addl
loope
push
scas
ror
fcmovnu
cmp
push
cmp
andb
add
in
sub
std
push
pop
or
int3
push
movsb
fbld
cmp
mov
mov
sbb
test
ss
adc
xchg
adc
loopne
pushf
lds
sahf
mov
addb
mov
mov
lret
push
aam
pop
icebp
popa
jmp
sbb
pop
call
mov
add
sti
ret
push
and
mov
loope
ds
out
and
lock
test
aad
ret
and
mov
and
push
adc
mov
lcall
in
jno
mov
pushf
push
or
test
sub
daa
scas
rolb
fisubl
cmp
pop
rolb
xchg
cmp
rorb
test
cld
push
popa
adc
dec
mov
xchg
es
push
xchg
mov
fwait
sbb
mov
loop
add
cmp
push
and
and
ss
stos
sbb
and
push
push
mov
add
push
std
jp
aad
or
cmp
jb
jb
int3
mov
std
cmp
mov
mov
xchg
jnp
mov
sbb
mov
push
pop
out
cwtl
in
push
mov
std
push
rcrb
bound
cmp
adc
fprem1
and
test
roll
dec
inc
divb
cs
dec
iret
mov
loopne
adc
imul
test
pop
or
pop
repz
out
add
hlt
bound
push
cld
dec
dec
sbb
sahf
cmp
clc
dec
je
and
cmpb
add
nop
std
ss
fistpll
push
pop
sbb
push
loope
mov
movsb
in
mov
sbb
lock
mov
icebp
cmp
sbb
rclb
xchg
cltd
sbb
pop
popf
arpl
lods
das
popa
adc
add
movsb
sbb
inc
cmpsb
and
jae
mov
int
xor
mov
ljmp
mov
nop
bound
jecxz
inc
pop
inc
jno
cwtl
ss
pop
hlt
mov
cmp
and
hlt
push
cmpsl
and
push
std
or
or
sub
push
mov
aaa
cmp
mov
mov
shlb
daa
inc
into
adc
sti
adc
or
mov
call
pop
insb
lea
xor
mov
add
test
lods
les
mov
les
jb
mov
popf
adc
mov
mov
insb
call
vphaddbd
sub
jbe
in
xchg
xor
jbe
dec
xchg
cmpl
jg
hlt
pop
xor
xchg
imul
aad
sarl
scas
pop
mov
scas
add
jge
lret
test
mov
outsl
faddl
clc
addl
mov
adc
decl
movsb
ljmp
decl
clc
mov
arpl
mov
mov
pop
inc
push
call
out
sbb
cs
xchg
push
testb
stos
jg
pop
scas
and
adc
push
and
nop
loope
mov
scas
lods
hlt
push
ja,pn
rcrb
push
adc
mov
pop
rorb
cs
and
incb
cltd
fdivrl
lock
sbb
mov
clc
cmp
out
add
fmull
and
cld
addb
add
outsb
pop
push
subb
sbb
cs
cmp
shl
inc
loope
insl
push
hlt
test
xor
sbb
arpl
inc
clc
and
scas
rolb
cltd
push
push
gs
sub
and
icebp
add
fldl
and
inc
add
nop
ret
inc
out
loop
sub
add
test
jl
mov
jg
jp
add
addb
jecxz
add
cld
in
xchg
mov
rclb
mov
nop
jbe
sarl
mov
enter
cli
cmpsb
jo
sar
mov
out
xor
jmp
ja
xor
pop
sub
xchg
mov
pop
out
or
bound
cwtl
add
or
aaa
jl
mov
adc
push
jecxz
mov
jae
mov
sahf
push
sbb
mov
dec
sub
ret
in
leave
push
mov
inc
cmc
mov
loopne
dec
mov
lock
loop
and
cmp
repz
mov
lret
mov
cli
dec
push
rol
loope
cmc
and
stos
or
xchg
xchg
loop
roll
mov
rol
pop
or
nop
flds
enter
cmp
test
scas
test
inc
rcrb
scas
hlt
pusha
fwait
pop
testl
mov
mov
pop
mov
xlat
sbb
and
into
xchg
or
cli
push
jnp
xchg
idiv
mov
je
sub
push
ret
pop
cmp
leave
or
add
aas
dec
inc
or
cld
adc
test
aaa
adc
fadd
lock
cmp
mov
pop
std
sarb
sti
cld
and
mov
pop
pop
test
mov
add
cld
sub
sbb
int
iret
xor
in
jecxz
in
jp
test
cmp
call
and
addb
dec
adcb
sbb
and
jb
out
sbb
xchg
lds
ds
out
mov
inc
and
sahf
pop
clc
inc
sub
imul
jae
cs
cmp
popa
cli
daa
shll
or
add
in
js
sbb
inc
push
push
push
xchg
jae
mov
les
loop
stos
rol
adc
shrb
in
inc
scas
loope
and
or
adc
xor
leave
es
cmpsl
inc
fs
cmpsb
push
cmp
sub
jecxz
push
mov
repnz
xchg
push
or
pushl
test
xor
push
fdivs
sub
pop
inc
jp
test
mov
lahf
rorb
fiadds
push
leave
aam
cld
mov
inc
jnp
mov
sbb
data16
mov
sarl
adcl
and
inc
enter
movl
adc
jecxz
jo
pop
add
mov
jmp
add
pop
mov
inc
adc
mov
push
test
lahf
inc
mov
lahf
and
add
notl
xor
inc
lcall
add
jecxz
inc
pop
jl
mov
and
ja
cli
mov
add
push
out
hlt
fmull
outsl
add
inc
sub
lods
add
je
stos
sub
mov
push
or
xchg
inc
and
mov
test
jecxz
push
adc
shlb
iret
or
dec
aaa
scas
into
rcr
aas
lret
jg
sbb
cli
pop
or
xor
ljmp
xchg
mov
pminub
lret
insl
in
dec
js
inc
pop
insb
sahf
das
into
and
addr16
daa
jmp
mov
or
jl
mov
cmpl
and
push
inc
xlat
popf
xchg
call
stc
fs
xchg
cs
push
mov
sbb
fs
adcb
ret
jbe
insl
adc
mov
push
ud1
cmp
push
add
push
out
jo
scas
inc
idiv
pop
std
rol
shll
adc
mov
cld
jnp
and
enter
cmp
sbb
movsbl
int3
das
pusha
int
out
cmp
cltd
stos
cmc
push
inc
mov
test
call
pop
dec
pop
and
loop
fwait
stos
dec
and
div
push
add
rorb
inc
cmp
jnp
dec
das
je
das
dec
mov
js
sub
imul
clc
jae
aam
stos
std
inc
flds
pop
roll
cltd
or
movsb
out
jge
aad
mov
loop
int
inc
adc
mov
into
loopne
lcall
add
mov
inc
adc
xchg
xchg
sub
loopne
cmp
jge
inc
clc
std
mov
and
stos
and
out
jb
mov
jg
push
call
cld
cmpsb
adcb
mov
and
xchg
or
iret
add
and
inc
lea
incb
out
in
adc
xchg
or
adc
jmp
push
cmp
cmp
pusha
movsl
pop
mov
int3
cmp
cmp
ja
loop
daa
inc
or
cltd
daa
nop
icebp
outsb
jge
xchg
arpl
cmpsl
insb
dec
fisttps
popf
add
add
outsl
xchg
xchg
pop
sbb
push
sub
jle
and
aas
push
add
mov
insb
mov
lahf
faddl
imul
xor
insl
sbb
test
add
les
outsl
add
mov
outsb
pop
sub
push
mov
es
ljmp
test
mov
call
sbb
push
mov
outsl
stos
push
rclb
cltd
sahf
aas
push
bound
mov
lret
test
jle
fadds
xchg
stc
adc
mov
inc
in
popa
ss
popf
add
lahf
or
clc
xchg
cmp
rcl
adc
pop
mov
outsl
hlt
mov
cmp
test
dec
pushf
cmp
and
push
mov
inc
push
inc
mov
loope
sbb
mov
loop
lcall
adc
stc
push
push
push
lret
mov
mov
mov
sub
pop
cmp
outsb
imul
push
scas
xor
imul
push
aad
shl
sub
mov
pop
or
push
mov
addb
inc
or
mov
fmuls
adc
scas
ret
mov
les
pop
inc
movsb
xchg
out
inc
cltd
sbb
jnp
sub
jg
pop
and
mov
imul
into
clts
cmpsl
xchg
pop
adc
pop
ret
inc
aaa
push
pop
push
div
mov
shufps
xchg
inc
test
cmpsl
sahf
shl
add
dec
dec
incl
flds
divl
add
lods
xchg
lcall
fcoml
mov
and
mov
dec
cld
push
lret
jle
je
or
testb
int3
pop
dec
pop
loope
cltd
cmp
movsb
cmpsl
xchg
sub
or
movsb
cmp
xchg
clc
iret
dec
push
jns
lock
xor
cmp
push
xor
xor
sbb
add
cli
push
jp
inc
jne
je
bound
jle
popf
lcall
lret
imul
mov
add
fistl
mov
sarb
sub
mov
cwtl
inc
test
out
lea
test
arpl
ret
add
xor
rcr
hlt
sub
aam
gs
cmp
jnp
push
call
popf
mov
shr
fbstp
jns
pop
pop
cli
es
add
dec
into
in
cmc
add
movsb
mov
mov
or
movsb
ds
aad
mov
add
ret
mov
push
push
mul
sub
das
sarb
add
mov
add
outsl
addb
pop
sub
test
mov
adc
sbb
push
dec
dec
aam
sub
push
inc
add
inc
add
xor
call
fiadds
mov
enter
mov
mov
mov
sbb
cmc
push
sbb
inc
fldl
hlt
dec
cld
ss
mov
pushf
ret
inc
popf
pop
sub
mov
jp
popf
sub
dec
jp
addl
imul
pushl
outsl
or
or
fdivs
gs
repnz
mov
mov
pop
sub
jnp
push
pop
ljmp
loopne
loopne
sbb
jecxz
add
adc
aaa
xor
fimuls
insl
ret
imul
mov
inc
xchg
int3
jle
sub
les
insb
cs
mov
ljmp
stc
rorl
sub
mov
cmp
jecxz
or
jb
push
xchg
lods
pop
je
xchg
adc
test
adc
pop
loopne
adc
push
and
or
xlat
jp
ret
push
mov
aam
jmp
and
imul
inc
loope
or
add
xor
sub
sahf
decb
cmp
pop
call
icebp
inc
pop
dec
jl
das
hlt
push
add
mov
sub
testb
dec
push
lret
and
addr16
or
loopne
and
or
lock
das
or
add
push
sub
stos
std
pop
ds
mov
nop
mov
sub
and
or
lock
test
and
xchg
xchg
pop
outsl
and
bound
popf
mov
clc
sbb
fs
pusha
ffree
das
push
movsb
cmp
cs
push
fistpl
clc
pop
jl
mov
push
pusha
add
ret
cmc
add
cli
loop
mov
or
cld
es
or
into
data16
add
push
stos
add
cld
mov
sti
inc
jg
or
push
iret
xor
sbb
jmp
or
xchg
inc
jle
pop
jno
xchg
ret
mov
and
clc
ljmp
cmp
jecxz
repnz
inc
pop
std
pop
push
dec
repz
push
aaa
mov
out
mov
loopne
mov
push
add
jnp
ds
movhps
or
sub
bound
adc
pop
mov
fstpl
jmp
sub
addr16
les
xchg
add
xor
dec
bnd
je
pop
cs
cmp
or
lahf
xor
jle
mov
cmp
xor
sbb
into
gs
dec
add
popa
add
and
xor
mov
and
push
sbb
jp
fs
adc
cmp
xchg
icebp
push
in
xor
pop
mov
jge
lock
jp
roll
push
pop
inc
std
xor
dec
cld
ja
add
ljmp
xchg
xchg
pop
rcll
add
or
add
jo
insb
pusha
lods
es
push
sbb
fmul
fcmovnb
call
sbb
je
xor
pop
mov
leave
mov
or
hlt
xchg
jo
inc
push
cli
jmp
pop
mov
jbe
aaa
das
fisubrs
jbe
sahf
jae
sub
clc
movsb
nop
int3
repnz
jl
mov
mov
fwait
lods
or
mov
sub
push
sbbb
popa
mov
pop
inc
aam
mov
and
mov
fldt
xchg
lods
das
and
lods
pop
sub
mov
add
mov
xor
cwtl
rcrl
fidivrl
inc
cmp
ret
sbb
xlat
push
or
stc
test
sbb
roll
sbbl
xor
psraw
ja
stc
and
mov
inc
adc
cltd
inc
js
jecxz
lahf
fdivrs
pop
nop
lds
and
pop
or
and
mov
es
xchg
cmp
ja
iret
sbb
das
rol
jnp
adc
fisubrs
mov
push
sbb
stc
add
lods
and
add
xchg
or
push
roll
mov
adc
jmp
fisttpll
call
mov
mov
lcall
xor
add
jg
scas
jp
ljmp
shl
or
imull
das
mov
mov
pop
lds
arpl
shrb
enter
mov
scas
ljmp
cld
rcll
xchg
dec
dec
jb
xchg
sbb
xor
adcb
sbb
pop
pop
add
lcall
mov
rcl
pop
jle
es
jne
sbb
pop
fsub
push
das
pop
push
xlat
jg,pn
inc
loop
daa
mov
jle
mov
and
xchg
movd
leave
incl
push
and
inc
dec
xor
bound
cmpsb
icebp
inc
mov
pop
mov
inc
dec
insb
fisttps
jmp
movsl
cmpsb
arpl
push
imul
fwait
cwtl
addr16
popf
shlb
xchg
cs
stc
in
pop
push
testb
fs
mov
cmc
pop
push
out
out
jmp
cmp
mov
lea
cmp
push
push
mov
inc
jmp
mov
inc
xchg
jmp
in
ljmp
mov
test
lock
mov
pop
loop
sub
pop
jne
or
test
xchg
cmpsl
movsl
add
rorl
xor
inc
daa
push
andl
popa
cmp
xor
mov
pop
js
jl
sar
xlat
out
sbb
push
test
sbb
in
mov
inc
hlt
add
add
xorl
sub
out
xchg
mov
cmp
arpl
xorb
pop
sbb
scas
aad
bound
rcrb
pop
jl
xor
call
sbb
jne
or
sub
in
rcr
pop
stos
aad
jp
jecxz
jl
icebp
sbb
std
aad
in
into
aaa
in
inc
and
fcmovu
loopne
jo
sbb
addr16
jle
rorb
mov
inc
movsb
call
or
aam
pop
cmp
lods
dec
jle
inc
mov
aas
mov
jb
mov
dec
lahf
imul
and
ljmp
test
std
mov
outsl
ffreep
fcomps
push
add
test
pop
sbbb
ret
popf
pushf
cmp
sbb
cli
jp
iret
sbbl
hlt
addb
repz
jl
loope
push
or
enter
push
bound
mov
call
sbb
cmc
repz
fcoml
orb
xchg
andb
xchg
pop
scas
loope
pushf
sbb
inc
sub
mov
sahf
pop
or
push
jne
call
std
aam
inc
adc
inc
mov
adc
popf
scas
dec
mov
mov
jecxz
pop
cltd
hlt
mov
cld
fisttps
and
xchg
sub
push
pop
xchg
adcb
cmp
inc
mov
mov
shlb
rorl
popf
ljmp
bound
test
mov
jns
ret
xor
xor
mov
jge
adc
mov
aad
mov
or
sub
xlat
ljmp
mov
aas
push
add
sbb
cmp
loopne
push
dec
jne
pop
aas
jecxz
adc
lods
push
daa
dec
insl
pop
fdivp
cli
repz
pop
sbb
lcall
fistpll
insb
add
arpl
daa
in
pushf
push
inc
leave
jo
enter
add
je
adc
jbe
or
cli
imul
pusha
aaa
jnp
popf
popa
cs
mov
movsl
test
jle
sbb
or
mov
aaa
shr
out
idivl
jnp
lea
mov
dec
sbb
and
add
and
sbb
push
popa
sub
repnz
ljmp
in
popf
push
loopne
rcll
cs
sbb
cmpsl
inc
adc
push
mov
jle
mov
mov
xchg
push
notl
xchg
sbbl
jo
inc
subl
jo
pop
js
add
lock
sub
pop
cmc
fisubs
loop
mov
lahf
loopne
xchg
std
or
mov
push
xchg
int
and
sub
fwait
leave
push
mov
adc
dec
loop
mov
fidivrs
les
mov
loop
pop
fs
lret
jne
out
adc
iret
mov
out
arpl
ret
inc
push
insb
cmp
arpl
insb
xchg
pop
sub
xor
cwtl
xor
loopne
jle
pusha
iret
sub
mov
or
int3
stc
add
dec
jecxz
fldl
or
xchg
andl
add
jg
hlt
xor
pop
js
or
cwtl
xchg
js
mov
int3
pop
into
dec
pop
movl
lcall
lahf
mov
add
mov
inc
cmp
jo
cmp
shlb
cwtl
bound
pop
and
dec
jo
jp
mov
stos
out
xchg
adc
pop
dec
and
icebp
mov
or
sbb
adc
dec
cmp
je
push
sub
hlt
adc
fwait
sub
push
stc
movsb
rcrb
je
shlb
jecxz
loope
cmp
repz
xor
daa
jle
cmp
fists
icebp
shll
fldt
pop
sub
mov
imul
xorl
mov
aad
mov
add
pusha
testb
dec
pop
shll
imul
int
or
ficoms
dec
fcompl
jge
adc
dec
test
mov
outsl
xchg
xchg
test
xlat
pop
ss
das
insl
mov
sbb
push
dec
test
icebp
lcall
inc
jno
repz
inc
mov
nop
pop
jmp
jnp
shl
cmp
rcr
sysenter
sbb
add
mov
xlat
jno
mov
cld
enter
or
or
add
cmp
inc
add
test
scas
lods
pop
inc
inc
pop
add
push
mov
sub
or
ret
test
clc
pop
jge
sbb
insb
push
or
scas
mov
jg
jne
pop
adc
xlat
adc
xlat
xor
outsl
repnz
int3
push
mov
fcoms
fwait
int
aam
xor
adc
xchg
mov
jmp
or
outsb
dec
xchg
xchg
sbb
das
add
inc
sub
mov
in
or
sbb
add
sub
cltd
std
stc
push
push
cld
inc
andnps
mov
jl
inc
add
add
xchg
arpl
xlat
and
sbb
daa
mov
push
scas
xchg
mov
xchg
mulps
insl
inc
sbb
push
mov
lahf
xor
rcr
cmc
icebp
dec
mov
inc
cmp
mov
xchg
jle
fwait
or
cmpsl
and
cli
or
lahf
xchg
jb
jmp
push
sub
pop
test
outsb
test
aas
stos
movsl
movsb
inc
mov
xor
aas
push
and
popa
stos
cmp
jl
xchg
jbe
shl
mov
cmpsl
enter
rcll
push
in
ljmp
sub
sbb
adc
int
aas
call
stos
mov
das
add
sub
sub
fwait
sbb
in
and
lea
in
stc
adc
sbb
fucomp
ret
pop
add
stos
cwtl
out
mov
sub
popa
into
mov
dec
sbb
push
ret
ds
int
cmp
push
xor
jne
jns
adc
hlt
adc
xchg
sarb
inc
pop
adc
imul
jle
xor
push
cmp
mov
and
imul
loopne
xchg
add
push
aaa
inc
cmpsb
jno
aad
xor
xor
call
js
cld
sub
sub
adc
test
fldt
aam
inc
adc
mov
aas
adc
lea
jmp
sbb
repz
pop
bound
int
loope
ds
daa
mov
inc
xlat
js
test
push
sahf
ss
xchg
pop
adc
pusha
fildl
imul
inc
mov
adc
mov
push
imul
hlt
mul
cmp
push
mov
fildll
lea
loope
es
orb
in
out
mov
pop
add
ljmp
jg
adc
or
lea
inc
adc
jecxz
cmpsl
pop
aas
xor
shrl
sub
and
or
and
mov
mov
cmpsb
cmpsl
icebp
xchg
mov
lcall
xchg
rcl
lcall
jb
adc
and
lock
dec
les
pop
cs
pop
pusha
popa
hlt
loop
mov
xor
loope
xor
sbb
faddl
adc
jmp
adc
dec
shll
stos
inc
xchg
push
add
addl
dec
mov
inc
in
xchg
lret
inc
push
and
fisttps
in
pop
bound
js
sub
or
or
add
sub
lea
scas
mov
subb
icebp
adc
pop
mov
test
xor
adc
sbb
mov
sbb
inc
ds
dec
sti
adc
xchg
cli
and
mov
test
mov
lret
pusha
jg
fiadds
jnp
inc
inc
fsubp
and
rol
jmp
jmp
cmp
lahf
test
xor
xorl
sub
mov
movl
sbb
mov
imulb
push
jbe
imulb
pop
sahf
jmp
push
subb
pop
jmp
shr
aaa
mov
cmpsb
inc
dec
repz
push
xor
jg
mov
call
aad
jl
dec
loop
sub
les
lahf
cmp
outsl
jle
push
lods
mov
imul
mov
cmp
mov
jge
push
xchg
idivb
insb
es
push
or
clc
or
lret
mov
adc
popa
scas
movsl
into
ret
ret
add
orb
mov
int3
cmp
jae
call
call
sub
sub
mulb
inc
xchg
stos
jbe
cmpsb
into
add
mov
in
dec
sbb
and
dec
add
shlb
fildll
lods
loope
pop
inc
movsl
dec
mov
mov
pusha
aas
sahf
and
std
nop
loopne
or
adc
dec
movsl
pop
push
dec
cmp
hlt
imul
loop
test
int3
or
inc
push
add
dec
jo
adc
outsl
imul
testl
popf
in
cmc
mov
lods
mov
filds
fldcw
cs
push
add
add
ds
gs
js
pop
aaa
or
inc
mov
mov
enter
pop
mov
mov
mov
push
nop
mov
push
aaa
lea
cwtl
mov
xor
mov
sub
cmc
mov
push
cmp
dec
sbb
mov
pop
jmp
push
imul
movsb
icebp
cmp
or
popf
call
push
sbb
mov
adc
imulb
jbe
add
mov
cs
sub
aad
loope
pop
arpl
ja
xor
push
pop
fwait
roll
mov
das
adc
les
js
dec
call
xor
scas
fwait
popa
gs
mov
test
or
loopne
rorl
test
aad
or
fidivl
mov
ret
sbb
jno
ret
jb
push
sub
imul
mov
aad
cmpsl
xor
lret
aaa
push
dec
insb
xchg
dec
xchg
sbb
bound
mov
stos
lea
dec
fnstenv
call
adc
cmp
xchg
add
nop
and
lds
lret
jp
inc
js
les
fmuls
aad
or
xchg
andl
cmp
or
aad
ljmp
push
xor
aas
stos
popl
daa
cwtl
and
sbbb
mov
push
sbb
xor
add
mov
jmp
sub
js
lea
filds
mulps
rclb
or
ret
jae
or
push
lret
decb
jnp
test
rcrl
pop
sub
inc
shll
daa
pop
fwait
jbe
decl
aaa
pop
cld
cmp
adc
dec
bnd
lock
and
and
add
mov
cld
mov
and
xchg
cmp
faddl
ljmp
subb
sub
loopne
or
mov
mov
test
xlat
or
dec
and
insl
and
shl
mov
aam
push
xchg
dec
xor
mov
insl
daa
xorb
pop
popa
add
ljmp
in
adc
jecxz
xchg
xor
inc
rorb
sub
clc
xchg
lds
add
ret
mov
fstpt
xchg
mov
lret
movsl
cmc
pop
adc
or
xchg
aam
cmc
or
iret
sub
mov
push
sahf
mov
sub
xchg
adc
fsubl
mov
pop
cvtps2pd
jno
subl
lock
jecxz
lods
adc
lock
movl
and
hlt
xorl
jp
mov
mov
movsb
push
lret
scas
dec
rolb
rcll
popa
or
add
sub
push
add
or
adc
lods
jbe
push
xor
pop
push
dec
and
pop
push
add
or
mov
and
and
loopne
adc
inc
addr16
add
jnp
pop
pop
add
push
dec
sbb
adc
sahf
cmp
test
mov
cmp
or
dec
adc
sbb
stos
sub
shll
add
mov
sbb
mov
icebp
adc
cltd
sbb
jmp
sbb
sub
hlt
addb
hlt
mov
inc
lcall
sbb
jno
fimull
cmp
iret
or
inc
pop
jb
pop
cmc
mov
addl
ret
out
jo
mov
enter
aam
pop
adc
jnp
movsb
mov
jl
and
cltd
ret
std
loopne
ret
icebp
mov
cmp
leave
lea
idiv
sbb
push
int3
adc
fs
inc
jl
inc
pop
inc
call
outsl
test
pop
sbb
push
pop
sub
cmp
or
cmpsb
into
dec
lea
xor
dec
inc
cld
push
rorl
mov
insl
pop
ret
pop
sub
cld
bound
or
arpl
sqrtps
mov
adc
adc
lods
fistpl
mov
push
mov
adc
inc
mov
outsl
lock
push
mov
cmp
jg
mov
push
or
push
sti
cli
andl
or
je
mov
push
pop
jle
or
leave
jl
cld
adc
scas
or
out
push
push
shlb
push
arpl
sbb
test
push
and
add
cli
int3
ds
push
push
add
inc
in
les
stos
mov
mov
and
addb
aad
jno
pop
cmc
outsb
jecxz
push
loop
push
sub
or
sub
xlat
mov
inc
push
push
jae
shrb
xchg
mov
jae
push
xchg
mov
xchg
fisubrl
iret
mov
mov
mov
decl
adc
or
lods
jo
xchg
sbb
mov
add
cmp
cmp
dec
ret
xchg
and
adc
xchg
sbb
sub
xlat
or
xchg
shll
adc
mov
out
pop
jp
dec
insb
cmp
or
iret
mov
addr16
fsubr
cli
push
std
adc
shr
xchg
jo
cmpsb
in
ljmp
pop
adc
ret
jb
inc
arpl
or
add
dec
scas
dec
push
mov
mov
insb
cmp
push
sub
std
enter
lds
xor
dec
test
or
pop
shr
cmp
icebp
pop
std
je
push
xlat
fcomps
pop
or
sub
aad
dec
in
mov
push
int
mov
bound
insb
mov
push
sbb
lds
lahf
push
das
mov
or
add
aam
or
sti
adc
push
pop
push
jp
fdecstp
mov
lock
inc
pop
inc
ljmp
icebp
add
notl
shll
insb
outsl
push
sub
mov
pop
dec
insl
neg
jbe
dec
pop
cmpb
sbb
jl
sbb
cmpsb
cmp
adc
subl
add
add
aad
inc
or
push
shrb
pop
xchg
sbb
xorl
jl
pop
inc
in
lcall
clc
hlt
pop
push
adc
push
xorl
fsubrs
inc
sbb
mov
sub
addl
lods
hlt
ror
jbe
movsl
repz
jg
mov
repnz
jle
scas
hlt
sbb
sub
data16
fs
iret
cmp
lods
aaa
and
dec
xor
push
test
sub
sub
fcmovbe
cwtl
mov
negl
scas
mov
xchg
pop
adc
sahf
pop
leave
jno
sbb
pushf
pop
mov
out
mov
loopne
push
adc
and
or
push
pop
xchg
lea
adc
add
test
push
push
nop
mov
into
push
ss
iret
mov
repnz
xchg
push
addb
mov
cmp
mov
fsubl
sub
add
mov
lods
add
xchg
or
cmp
add
jle
sub
dec
mov
pop
mov
pushf
cmp
jmp
mov
inc
mov
push
out
xchg
push
shlb
pop
adc
sbb
cmp
stos
mov
call
lock
xchg
pushf
ret
xchg
xchg
mov
fsubrs
paddb
mov
aam
movsb
push
mov
inc
int3
pop
pop
jmp
movsl
pop
lret
mov
xchg
xchg
xor
and
adc
push
and
inc
mov
cli
jo
jp
lock
xor
jne
mov
mov
mov
inc
pop
gs
mov
cmp
jbe
lea
sub
call
inc
jo
inc
or
lods
fdivr
jae,pn
cmc
jmp
adc
adc
pop
xor
icebp
xchg
sti
inc
daa
dec
pop
mov
cmpsl
stos
adc
sbb
lcall
mov
lcall
dec
or
dec
xchg
stos
outsb
repnz
test
push
mov
out
or
pop
or
in
cmpb
dec
int3
daa
movsb
adc
mov
pop
hlt
std
or
or
sub
test
icebp
push
cli
fs
mov
add
pop
es
sti
pop
xchg
push
adc
mov
outsb
xchg
je
pusha
sbb
mov
scas
test
mov
fcmovne
test
stos
shl
pop
cmp
data16
push
iret
rorl
subb
cld
ljmp
out
pop
and
xlat
cmpsl
xchg
sbb
inc
sub
ret
pop
lcall
jae
adc
movsb
cmpsl
jbe
push
xor
push
or
push
lret
sub
pop
and
insl
inc
decb
mov
mov
dec
es
pushl
and
xchg
mov
adc
movsl
out
pop
add
push
fsubrl
xor
popa
jge
sbb
sub
fcompl
hlt
inc
dec
cmp
loopne
cli
jno
mov
or
push
rolb
cmp
std
fbstp
mov
add
stos
xor
pop
test
stos
cmp
lret
pop
mov
daa
sbb
aam
dec
lcall
cmp
mov
loopne
push
jecxz
lock
pop
fs
cmp
push
ja
mov
test
inc
push
in
out
and
push
jb
lret
xchg
xchg
icebp
pop
add
adc
adc
jmp
lods
jg
or
pusha
daa
adc
jmp
fcomip
rolb
enter
das
or
es
sbb
pop
push
mov
bound
push
mov
ret
fcmovnbe
fs
ficoml
mov
es
xchg
push
rcrl
fldt
inc
xor
push
cmp
aaa
les
xor
mov
push
mov
sbb
cmpsl
mov
stos
stc
cld
add
lret
add
xchg
cli
adc
daa
push
fsts
loopne
lea
mov
inc
push
jne
xchg
es
mov
xchg
sbb
jle
std
xchg
inc
jne
lock
dec
jno
rorl
sbb
sbb
icebp
push
push
xor
and
cli
cmp
mov
jge
or
push
push
push
add
or
les
sub
sbb
adc
sbb
and
xchg
cmp
push
rol
xchg
mov
es
fisttpll
adc
iret
lds
xor
test
sbb
movsl
push
inc
in
scas
adcb
test
xor
xchg
adc
icebp
orb
xor
stos
pop
ljmp
out
mov
inc
sbb
xor
xchg
adc
mov
inc
sbb
push
sbb
pop
andb
mov
sbb
std
pop
mov
hlt
xor
or
test
push
lods
and
mov
mov
lods
out
mov
lret
inc
sub
addr16
dec
mov
in
out
xor
ds
sub
leave
mov
outsb
xor
icebp
in
inc
pop
inc
xchg
call
sub
fwait
clc
and
popf
jns
ret
dec
scas
cmp
push
ja
sub
sub
pop
jge
cwtl
and
jae
mov
movsl
mov
icebp
adc
xchg
xor
push
cmpsb
es
shr
cmp
dec
fidivs
cld
push
push
cmp
fneni(8087
js
shll
jbe
and
stc
or
sub
add
add
xchg
mov
mulb
js
add
inc
ds
adc
addb
or
outsl
inc
xchg
adc
lds
sbb
in
jb
inc
test
mulb
aad
outsl
dec
out
xchg
adc
mov
sbb
cmp
mov
data16
jno
in
mov
shrb
inc
notrack
mov
add
sarl
jmp
fdivl
push
inc
sub
imul
decb
aaa
or
sbb
sbb
pextrw
clc
inc
clc
jle
mov
xor
pusha
xor
or
scas
inc
into
and
movsb
add
sarl
pop
jge
inc
mov
push
xor
jmp
xor
movl
scas
mov
inc
or
pusha
and
outsl
popa
test
adc
je
ss
mov
out
push
pop
cwtl
add
push
push
pop
add
clc
adc
xchg
xlat
cmp
leave
dec
cs
rorb
or
jmp
and
cli
incb
loopne
pop
int3
mov
and
loop
aas
or
lods
insl
nop
dec
push
ds
inc
loop
push
adc
and
lock
shlb
add
xlat
stos
cs
and
mov
ret
sub
and
es
fs
cmc
mov
jae
sub
mov
push
das
sub
js
adc
jns
sbb
xchg
xor
test
or
or
hlt
js
and
insb
icebp
dec
or
lods
xor
sub
or
notb
and
stc
add
rol
jp
jo
adc
pop
call
outsb
mov
testl
int3
in
test
pop
mov
insb
mov
loop
test
push
bound
es
inc
or
mov
test
mov
inc
push
xchg
or
gs
push
dec
das
jl
add
ret
jo
sbb
jmp
xor
je
mov
lds
inc
addb
fs
pop
mov
leave
add
push
jno,pt
inc
dec
hlt
push
cmp
mov
imul
cmp
xor
addb
push
sbb
cmpsl
push
pop
xchg
shrl
add
jno
cmpb
sub
sbb
pop
jbe
pop
sbb
mov
xor
decl
sbb
fwait
into
mov
xorl
push
add
iret
xor
enter
cmpb
pop
push
sbb
fidivrs
ljmp
lock
loopne
xchg
push
and
ljmp
push
lret
cmp
dec
or
lods
push
loopne
sar
arpl
mov
mov
and
in
testb
mov
xlat
jbe
pop
fsubs
dec
fs
mull
inc
mov
pop
jb
imul
test
push
lret
mov
test
sbb
pop
out
cmc
aaa
fs
mov
iret
outsl
mov
inc
dec
les
outsb
fstpl
mov
daa
sti
inc
pop
dec
xchg
push
add
out
js
imulb
pop
dec
push
sti
pop
popf
pop
lea
mov
lcall
xor
mov
rolb
ret
lret
les
sahf
mov
add
adc
das
cmp
pop
dec
add
movsl
test
xchg
jno
and
sbb
inc
jnp
or
and
loop
cmpl
fiadds
dec
lock
out
dec
loop
cmc
adc
xor
mov
loope
push
add
dec
ret
push
dec
push
mov
test
inc
fwait
cli
sbb
pop
test
cs
sub
and
aaa
fdivrs
mov
push
mov
adc
dec
frstor
repnz
dec
insb
pop
jl
fwait
movsb
or
dec
out
fadds
add
lock
push
sbbb
pop
lods
shl
xorl
ss
lock
cli
pop
inc
insl
stos
push
rclb
clc
in
cs
cmp
dec
adc
out
push
addr16
mov
loope
clc
push
mov
pop
cltd
mov
fstpt
adc
push
push
inc
js
cwtl
insl
loop
jb
mov
aas
mov
nop
pop
push
mov
dec
xchg
dec
inc
in
cmpb
push
pop
and
lret
sub
nop
add
mov
and
xchg
je
test
xchg
pop
sub
or
add
lret
test
popf
decb
jp
stos
xchg
or
sbb
cmp
cmp
shrb
xor
mov
push
xlat
bound
pop
mov
arpl
cmp
xchg
xor
fmuls
test
fs
adc
jns
pushf
push
test
and
mov
mov
inc
mov
mov
inc
fmull
jg
popl
inc
cs
cmc
in
movsl
mov
icebp
jno
idiv
rcr
cmpsl
fimull
cli
inc
je
out
or
or
stos
dec
enter
pop
push
push
or
pop
dec
push
mov
fwait
cmp
das
sbb
or
dec
dec
inc
es
leave
inc
adc
cld
inc
dec
mov
dec
push
lret
jle
mov
and
pop
in
lock
xchg
es
test
loop
push
pop
shll
test
popa
fstpt
push
sub
xchg
pop
dec
xchg
cmp
aaa
into
or
jbe
lret
insl
mov
sbb
jl
or
daa
aad
fildll
rolb
movsl
js
aad
fwait
pop
mov
lock
mov
dec
jne
lods
out
scas
cmp
adc
push
daa
in
add
icebp
bound
mov
loopne
adc
mov
pop
ss
sub
aam
icebp
lret
ret
pop
xchg
and
or
test
adc
daa
pop
and
inc
sub
pop
cmp
lahf
mov
sbb
pop
int
lahf
mov
jp
sub
inc
or
int
dec
pop
stc
cmp
clc
enter
movsb
xchg
roll
mov
adc
lock
mov
js
test
clc
and
push
dec
push
dec
push
pusha
add
pop
fs
dec
and
insb
repnz
or
push
mov
push
sbb
mov
shr
and
je
outsl
add
test
scas
push
xor
ret
xchg
cmp
cmp
out
adc
jecxz
mov
mov
jbe
fdivr
add
push
cmpsb
add
mov
ljmp
or
sbb
stc
add
jg
cli
shl
imulb
shll
xchg
std
das
xlat
shrb
sub
push
outsl
inc
push
and
enter
mov
rol
add
cmp
mov
inc
adc
sbb
test
ja
cltd
xlat
mov
lods
jle
aas
add
add
mov
fs
mov
and
push
aad
sub
mov
pop
xor
xlat
daa
fsubl
jns
dec
popa
dec
gs
inc
push
jl
xchg
xor
xor
decl
hlt
add
jge
mov
ret
cmp
push
add
mov
gs
lahf
repz
sar
mov
pop
pusha
dec
push
and
movsl
and
or
fldenv
jno
mov
mov
cmpb
inc
adc
loop
ds
dec
andl
loope
sbb
lock
sub
mulb
ret
inc
jns
and
addb
push
jp
mov
add
popf
call
sbb
cs
xchg
xchg
lods
outsl
jp
adc
sbb
imul
xor
jo
adcb
ror
fwait
popa
sti
cmpsb
test
xchg
xchg
xlat
and
xor
popa
mov
rorb
add
dec
adc
neg
or
add
dec
inc
push
cmp
mov
ret
sti
sub
inc
add
xchg
inc
loope
scas
add
inc
dec
mov
idivl
fistl
lock
roll
add
loopne
adc
jo
dec
adc
xchg
pop
jmp
repnz
xor
fcmovne
into
adc
scas
ret
mov
inc
loope
lock
pushl
adc
adc
mov
push
jo
mov
ja
lock
sbb
lods
inc
dec
pop
into
outsb
loop
cmpsl
test
mov
mov
cld
rcr
xor
or
lods
inc
shlb
push
xor
sub
mov
jecxz
das
xchg
jns
sbb
jo
add
std
data16
rorb
bound
notl
cli
jb
sub
rolb
and
add
rolb
ja
cmp
int
sbb
stos
daa
push
stc
push
add
xor
into
loop
mov
ds
inc
cli
mov
js
dec
or
mov
xchg
sahf
repnz
or
push
or
push
call
cmpsb
sub
incl
or
inc
das
dec
repnz
cmpsl
push
dec
dec
cmp
xor
dec
push
psubb
dec
add
jecxz
lds
push
adc
push
jecxz
xchg
call
jp
mull
push
push
xor
cmp
adc
pop
add
divb
les
cmp
adc
sahf
cmp
add
repnz
push
daa
mov
add
inc
add
jno
mov
int
xor
xchg
std
jo
sbb
decl
loop
push
xchg
adc
inc
cwtl
dec
jp
pop
rcll
push
fs
loopne
adc
xlat
jmp
dec
lea
push
inc
xor
mov
out
enter
cwtl
nop
adc
fadds
mov
xchg
lcall
lahf
leave
sbb
xlat
sbb
mov
add
push
dec
jecxz
enter
pop
rcrb
sub
inc
out
sarl
inc
add
add
or
ret
rclb
shl
mov
mov
push
cld
mov
js
fwait
adc
aam
push
sub
test
imul
or
ret
xchg
jmp
and
pop
and
lods
scas
xor
push
push
mov
sbb
pop
xor
or
pop
xor
add
loope
out
mov
loope
add
ljmp
push
pop
add
mov
or
and
into
sbb
imul
outsl
ficomps
xchg
mov
and
nop
sbb
mov
shlb
sub
mov
jns
push
les
in
sarb
in
sbb
push
push
movsb
rolb
xchg
lods
cmp
ds
int3
mov
adc
hlt
repnz
fcoms
rolb
pop
jl
sub
mov
hlt
call
insb
fisttpl
std
jo
in
or
int
inc
or
mov
rorb
iret
shrl
xchg
repz
mov
push
push
sub
jmp
mov
hlt
je
mov
aaa
roll
ror
insb
jnp
xor
dec
loope
std
pop
out
add
sbb
xchg
xlat
dec
or
test
rcr
in
add
fisubs
in
and
scas
pop
mov
lods
out
sub
mov
inc
inc
je
dec
hlt
rcl
cli
sub
mov
push
mov
inc
mov
mov
xlat
dec
fstps
js
cld
push
lock
adc
dec
js
sbb
mov
cld
ret
mov
fdivl
add
fmull
ret
sbb
mov
stc
jo
jecxz
data16
sub
mov
jp
push
add
out
fimuls
mov
fwait
mov
sub
imul
and
cli
xor
mov
add
inc
in
add
loopne
push
xchg
leave
repnz
mov
lock
xor
mov
pop
lret
xchg
mov
add
stc
adc
add
cmpsl
mov
stos
sbb
test
mov
sbb
arpl
sbb
popf
mov
cli
das
push
daa
dec
test
test
mov
jg
ret
mov
adc
outsl
pop
fstps
push
xchg
pusha
loope
xchg
cli
cmp
shlb
push
sbb
or
mov
roll
iret
lds
scas
ja
das
popf
cmpsb
mov
add
aad
test
push
nop
mov
adc
sub
gs
js
rcrb
xchg
pop
mov
and
pop
int3
mov
scas
push
stos
xchg
pushf
inc
xorb
test
push
pop
ljmp
and
movsl
mov
lock
dec
add
gs
mov
lods
rcll
in
sub
xor
nop
lret
inc
cmp
pop
xor
inc
xor
fimull
jmp
fwait
inc
fcoms
xchg
enter
data16
mov
outsb
pop
push
mov
insb
add
clc
sarb
sahf
jo
xchg
es
mov
loopne
push
movsb
out
xchg
loope
sbb
loop
adc
sarb
roll
adc
ljmp
sub
ret
imul
add
loop
in
andl
cmp
cwtl
fsubl
xchg
inc
dec
xchg
jbe
cli
mov
adc
add
or
inc
push
in
in
mov
movb
add
loopne
mov
push
push
ret
std
mov
sub
mov
and
push
pusha
out
jae
and
cwtl
adc
test
add
mov
adcb
adc
outsb
sub
dec
scas
je
les
popa
sbb
popa
daa
decb
and
sbb
loopne
lea
or
call
icebp
je
loop
or
or
mov
dec
pop
cmc
inc
test
in
jbe
aaa
cmp
movsb
xor
dec
mov
sbb
lcall
push
mov
jne
push
iret
and
lds
stos
xchg
jle
mov
lock
pop
xchg
xchg
mov
inc
jg
sahf
and
sub
inc
push
and
outsl
sub
shlb
stos
sbb
push
and
out
ljmp
cli
or
jle
nop
xlat
ljmp
push
inc
or
add
add
push
sub
sub
mov
insb
mov
outsb
cmp
adc
pop
clc
push
mov
add
jle
push
movsb
jo
mov
mov
pushf
lcall
inc
iret
sub
insl
inc
fldl
jl
cmp
inc
imul
jecxz
fistps
sub
and
xchg
sti
sahf
leave
or
rcr
mov
xor
lods
inc
xchg
jns
jo
ret
cs
ficomps
xor
lods
mov
iret
xor
mov
ljmp
xchg
in
loope
lock
inc
dec
and
inc
imul
ds
fstp
jp
loop
in
dec
movsl
rclb
hlt
and
add
sbb
dec
std
sbb
movsb
cld
pushw
xlat
add
inc
nop
fldcw
lock
xor
jecxz
xchg
in
clc
xor
mov
inc
stos
xchg
push
sbb
pop
dec
mov
lock
mov
pop
clc
bound
aas
insb
andl
aaa
push
dec
add
fsubl
or
jg
pop
or
and
ss
movsb
cmp
jle
scas
push
pop
mov
push
add
decl
mov
jl
and
ss
fcompl
fildll
lock
add
jecxz
cs
pop
cli
dec
pop
mov
loop
cmp
and
push
cli
mov
cld
xchg
test
xchg
mov
inc
jg
jp
dec
ret
aam
push
mov
sbb
cmp
dec
or
insb
pushf
pop
sub
cli
sti
or
das
jl
andb
or
add
jge
test
leave
in
jo
lock
rcr
clc
shr
and
mov
hlt
out
push
push
jl
incl
clc
pop
dec
pop
mov
shrl
mov
jecxz
jo
pop
sbb
loopne
mov
inc
mov
addr16
inc
cmp
and
popa
aam
enter
mov
and
addr16
orl
fstl
orl
mov
pop
test
adc
jmp
add
push
pop
push
imul
rcrb
pop
mov
in
in
mov
or
fsubl
sar
mov
pushf
es
xor
aaa
mov
mov
subb
repnz
push
cmpsl
add
or
cmpsb
jae
adc
cmp
insb
jp
cwtl
out
in
loopne
pop
out
jmp
loop
loop
xchg
test
nop
or
cld
jb
lea
arpl
mov
mov
inc
xchg
push
push
mov
xor
stos
mov
lods
jl
cmpl
mov
jle
inc
pushf
ss
cmpl
mov
inc
ljmp
mov
mov
popa
add
imulb
mov
push
pop
clc
and
je
adc
insl
out
sbb
subb
out
test
fisubrl
xchg
push
add
mov
iret
adc
pusha
pop
daa
call
add
pop
shlb
inc
clc
adc
das
add
cwtl
test
mov
int
jo
sbb
lods
test
pop
nop
and
fcmovne
or
stc
outsl
add
insb
cmpsl
insl
mov
call
mov
mov
sub
dec
cmp
ficomps
ds
jbe
pusha
inc
xor
leave
add
lock
adc
or
jbe
and
add
lret
cli
pop
jbe
xor
inc
xor
inc
cmp
jb
insl
inc
mov
rorl
sbb
sbbb
dec
pop
push
mov
or
and
ds
pop
mov
mov
mov
in
add
test
push
push
mov
xchg
in
divl
mov
push
cs
push
inc
jmp
test
cmp
mov
pushf
sbb
mov
xor
sbb
sti
bound
pusha
cmp
cmc
dec
push
popa
dec
insb
xchg
shr
repz
lods
stos
xor
jmp
jmp
xchg
test
int3
clc
incl
sbb
into
dec
in
mov
popf
xchg
enter
mov
stos
push
cwtl
negb
out
inc
adc
and
aas
sbb
or
cmc
fistps
push
mov
add
lods
test
lds
add
mov
cld
fidivs
push
rcrb
add
cmpsl
jg
ss
jp
lock
jne
loope
test
adc
xor
rorb
js
jb
test
push
push
sub
lcall
mov
mov
mov
jp
nop
cmc
jle
mov
pop
popa
imul
cmc
add
inc
lods
test
and
dec
mov
adc
cmp
iret
out
push
add
xor
pop
aas
cli
jmp
xchg
ss
dec
pop
rorl
outsb
xor
xchg
into
aas
cmp
imul
inc
scas
movsb
push
hlt
shrl
adc
fidivl
fwait
mov
data16
or
and
or
loop
pop
pop
data16
addb
aaa
lahf
test
ss
xchg
orb
test
push
pushf
loop
aaa
or
add
xlat
jns
pusha
pop
les
add
in
push
insl
sub
lods
or
dec
pop
std
pop
sbb
add
xchg
out
movsb
dec
cmp
or
cmc
cmpsl
test
nop
mov
scas
andl
sbb
mov
fists
sub
pop
dec
push
sub
pusha
sar
addb
clc
mov
lds
mov
or
dec
stc
add
or
popa
dec
dec
add
mov
cmpsl
and
aam
lret
mov
pop
rol
cmp
rclb
and
ret
jg
inc
jge
push
and
push
jge
pop
sub
dec
fwait
cld
add
dec
sbb
loop
lock
mov
push
inc
loopne
cmpsl
lds
lock
or
jp
mov
cmc
ret
aas
jb
push
fwait
inc
imul
test
add
dec
loopne
cs
mov
adc
and
inc
mov
rcr
adc
rorb
xchg
and
mov
mov
inc
or
ret
mov
stos
cmp
adc
xchg
and
mov
mov
ja
pop
push
in
dec
pop
push
inc
push
and
mov
add
call
sbbb
mov
xchg
pop
les
xchg
add
aam
cmc
pop
enter
aas
std
ret
insl
mov
test
test
dec
scas
orl
and
mov
xchg
add
fcoml
sbbb
loop
hlt
les
pusha
mov
mov
mov
lock
inc
enter
fnstenv
cmp
jo
dec
adc
into
or
enter
iret
pop
mov
adc
ljmp
out
gs
xchg
ss
test
shrl
mov
dec
sar
xor
add
or
inc
jp
jne
mov
ret
ja
fistps
aad
rol
cmpsb
enter
cmc
scas
push
adc
aas
xchg
pushf
fldl
xchg
xchg
xchg
pop
inc
fcmovb
xchg
mov
or
or
xchg
shll
or
push
sbb
pushl
sub
das
sub
inc
shll
clc
pop
add
fadds
ljmp
add
and
es
and
loopne
dec
push
dec
shr
out
pop
jle
decb
mov
or
jle
pop
scas
xor
clc
xor
push
insb
adc
fsubs
lcall
aas
hlt
sbb
cmc
and
sbb
dec
enter
movsl
orl
ja
jp
dec
add
scas
pop
add
push
sub
pop
fs
xchg
ret
jl
push
push
mov
or
jge
ljmp
inc
inc
sbb
nop
mov
scas
push
sahf
andl
jno
scas
cs
cmc
outsl
push
mov
ret
sbbl
pop
push
push
cmpsl
lret
adc
popf
xchg
out
jmp
clc
jnp
mov
inc
cmp
adc
and
out
jp
icebp
call
cli
cmpsb
sbb
xchg
jns
xchg
sahf
mov
outsl
sub
jo
bsf
adc
add
lods
inc
mov
testb
xchg
inc
and
lea
mov
nop
lret
orb
ss
ljmp
mov
and
shlb
shrb
shrb
inc
fsubl
outsl
out
imulb
lock
xchg
or
arpl
mov
mov
xor
test
or
scas
and
inc
mov
xor
das
mov
push
in
fidivrl
xchg
jmp
stc
sbb
pop
inc
loope
shl
pop
xchg
gs
test
loopne
adcb
arpl
mov
mov
pop
mov
decl
inc
dec
mov
sub
cmpsb
pop
cmp
cld
sub
pushf
je
or
test
mov
shll
and
dec
or
mov
xor
insl
test
fistps
inc
sbb
icebp
lret
clc
loop
inc
les
daa
cmpsb
pop
daa
mov
or
xchg
or
push
or
push
pop
cld
mov
inc
add
shll
decb
dec
push
and
das
in
xchg
inc
jle,pt
or
shll
pop
sub
test
adc
push
cmpps
sbb
sub
pop
jae
inc
pop
and
add
cmp
cmp
pop
or
repz
mov
shlb
jb
pop
push
sbb
iret
pushf
mov
sbb
cs
out
xor
stc
sub
call
mov
ja
lds
xlat
mov
out
or
stos
shr
cwtl
pop
aaa
cld
sub
add
pop
sub
adc
ficoml
es
out
dec
loopne
ficoms
xchg
adc
and
adc
or
sar
mov
addr16
into
hlt
adc
inc
xor
rorl
adc
insb
test
fildll
push
cld
test
popf
fiaddl
loop
pop
mov
adc
jecxz
push
cwtl
jns
sbb
dec
imul
push
inc
inc
aam
pop
ret
dec
sub
lahf
pusha
scas
add
or
lods
jg
movsb
mov
cwtl
mov
mov
pop
js
lock
sub
jle
repnz
mov
dec
sbb
movsl
mov
lea
jmp
jo
sub
pop
lock
jne
mov
fsubs
nop
arpl
icebp
add
lea
pop
sub
scas
add
or
ficomps
and
rolb
inc
inc
pop
insb
push
lods
mov
mov
fcoms
scas
cmp
pop
add
adc
lea
mov
lods
pushf
and
mov
sub
xchg
mov
stc
lahf
sub
pop
iret
jl
lahf
into
fdivrl
xor
out
inc
push
pop
std
jmp
cmp
jo
mov
cmp
mov
mov
push
loopne
jp
fdivrs
lahf
inc
xlat
hlt
hlt
inc
stos
loopne
push
xor
pop
pop
nop
or
lods
jp
fiadds
fs
outsb
into
mov
mov
sbb
dec
mov
dec
popl
ficoml
mov
pop
mov
inc
cltd
mov
cmp
outsl
imul
shlb
push
push
push
shll
inc
popl
adc
loope
mov
pop
push
ret
bound
inc
stc
aaa
clc
dec
dec
xlat
into
mov
and
jg
movsb
dec
lahf
subl
push
cli
imul
out
fidivrs
jle
ret
loope
icebp
and
sub
sub
popf
ja
adc
pop
test
adc
sub
jl
mov
push
xchg
sbb
sbb
mov
lods
daa
push
loope
dec
inc
testl
push
xchg
mov
sub
and
call
push
mov
shl
movsb
and
movsb
and
sarb
sarl
jg
jp
jge
fildl
ret
pop
jecxz
fidivrs
vfrczpd
cli
push
repnz
iret
shlb
push
xlat
call
in
dec
pop
in
xchg
xlat
mov
pop
aaa
push
popf
inc
leave
push
xchg
or
adc
push
xchg
fisubrs
inc
ret
loopne
dec
sub
mov
inc
and
aaa
mov
adc
mov
les
mov
mov
imul
inc
xor
jge
mov
sti
cld
mov
std
stos
xchg
inc
xchg
fdivl
inc
loopne
push
jp
fbld
mov
in
aas
test
daa
daa
pushf
pop
mov
out
mov
push
push
add
mov
mov
adc
int3
pop
loop
js
mov
insl
cmpsb
or
mov
ret
push
and
in
cli
ja
mov
dec
popf
bound
jae
fcomip
inc
lods
and
mov
add
push
mov
outsl
mov
jl
cmp
popa
fs
mov
mov
inc
jae
mov
or
push
or
rorl
adc
mov
clc
outsl
rcrl
cmp
mov
pop
inc
rol
jg
outsb
ss
pushf
popa
subb
mov
inc
push
add
pop
dec
hlt
mov
push
sbb
call
push
mov
mov
loopne
push
adc
fwait
dec
add
outsl
idiv
or
dec
lock
addr16
shl
jp
add
mov
jl
call
std
stos
std
hlt
push
repnz
loopne
xor
bound
add
aas
push
shrl
add
dec
push
add
ss
js
jmp
jo
popa
add
loop
add
jl
test
push
jmp
jo
mov
adc
rep
xchg
pusha
lock
ficomps
sub
sbb
cmp
ss
movsb
jl
jo
js
mov
fildll
sbb
mov
sbb
push
pusha
popl
incl
stos
rcrb
shrb
fstl
xor
mov
add
dec
push
inc
inc
fcomip
in
dec
fnop
dec
xchg
adc
insb
mov
fucomp
orl
and
xchg
outsb
jle
push
mov
pop
or
push
clc
or
and
enter
subl
jle
sub
xchg
xor
xchg
scas
pop
mov
cmp
fldenv
roll
imul
sbb
pushf
mov
jo
jnp
lods
repz
mov
fnstenv
scas
pop
sbb
in
pop
cmp
movsb
add
dec
daa
and
lret
insb
push
inc
fwait
repnz
test
push
or
xchg
pusha
mov
das
psubd
sbb
adc
add
ret
push
jge
cmp
push
aas
adc
icebp
clc
movsb
clc
cmpsb
sahf
jge
popf
insl
aas
jno
rol
sbb
mov
inc
jp
pop
aas
lret
test
jno
ja
fiaddl
xor
xor
loopne
movaps
xchg
icebp
xor
daa
in
push
imul
pop
bound
or
imul
outsb
and
push
adc
call
insl
es
or
lret
jmp
scas
movsb
cli
pop
and
outsl
inc
mov
int3
movsb
mov
inc
insb
inc
mov
idivb
lock
add
jecxz
sbb
repz
aad
adc
inc
jl
mov
aad
cmp
cmp
fcomip
or
xchg
mov
out
in
jmp
and
inc
mov
push
popa
add
sbb
add
aaa
sub
dec
mov
fsubl
cwtl
jns
or
add
int
mov
cmpsl
jne
mov
notb
lock
adc
addl
push
cmp
cmpsb
adc
das
js
xor
stc
mov
leave
jbe
push
inc
sbb
and
mov
push
and
and
inc
mov
xor
mov
es
sbb
adc
std
or
ljmp
into
or
dec
ficompl
daa
fisubrs
and
aad
cld
adc
scas
or
mov
mov
std
shrb
pop
pop
movsl
out
mov
loopne
and
xlat
add
cmp
and
dec
rclb
dec
outsl
fadds
int
js
sahf
orl
lcall
jecxz
jg
push
mov
mov
jo
mov
mov
xchg
cmc
add
mov
inc
inc
ja
sub
sub
push
push
push
insl
repnz
ss
lret
mov
cmp
cmp
cmp
cmp
xlat
aaa
jne
fmul
out
or
xchg
push
shl
aaa
and
mov
inc
xchg
or
orl
push
dec
mov
pop
shl
lcall
testl
push
aad
jl
cld
outsb
lret
add
clc
adc
jbe
int
push
sub
insl
sbb
fistpl
repnz
push
push
add
and
cld
cmpsb
mov
inc
popf
and
push
cld
sub
int3
inc
iret
cmpsb
bound
push
sbb
xlat
sbb
jb
lahf
hlt
ficompl
cmp
adc
mov
aaa
fcmovnb
pop
fcoml
and
cmp
sbb
das
mov
sarl
lret
movsb
fwait
mov
sbb
sarb
sahf
insl
int
fucom
push
lock
fmull
add
mov
sub
xor
dec
pop
leave
pop
add
mov
fadds
into
inc
add
sub
pop
inc
xchg
loop
movsb
adc
mov
ljmp
xchg
fwait
or
cs
pop
and
or
mov
add
cltd
clc
pop
sub
sbb
rcrb
or
xchg
xlat
aaa
push
repnz
or
in
ljmp
popf
bound
add
xorl
rorl
pop
inc
dec
inc
iret
jp
push
sub
push
addr16
or
and
pop
pop
fcoms
divb
xchg
push
jg
xchg
mov
xchg
sbb
je
cmp
fnsave
into
add
push
pop
and
xor
or
mov
add
push
jno
add
ror
jne
js
insb
loopne
mov
ja
jbe
inc
loop
pop
pushf
in
bound
bound
movl
and
cmp
imul
sbb
push
mov
pop
mov
ret
mov
jp
fs
jo
jle
push
out
sbb
es
xchg
arpl
notb
fmulp
and
and
mov
sub
js
outsb
mov
inc
jle
movsb
les
nop
lcall
dec
gs
or
cmp
inc
inc
cmp
int
mov
nop
aaa
add
lea
data16
adc
mov
xadd
adc
in
test
bound
push
aam
inc
movsb
mov
and
push
cmp
sub
push
mov
je
push
sub
dec
jne
mov
movsl
adc
addl
jl
lcall
inc
je
add
sub
push
and
jecxz
clc
test
cwtl
hlt
push
mov
jp
jo
and
mov
fisubrl
sahf
push
loop
xor
inc
pusha
push
xchg
dec
jl
cmpl
mov
cmp
mov
lsl
lock
outsl
arpl
xor
pop
lock
dec
inc
adcl
add
or
ret
arpl
mov
add
cmp
loopne,pt
sahf
xchg
mov
add
out
adc
nop
rorl
cld
mov
cli
add
and
aas
sub
jne
mov
inc
ret
enter
mov
test
movsb
cli
lock
out
out
movsb
lret
shr
mov
icebp
inc
cmp
or
cltd
cs
rorl
mov
push
aas
add
icebp
out
mov
filds
nop
fs
sbb
sahf
clc
pop
cli
aam
mov
mov
fisttps
sub
iret
shll
sbb
fnsave
sbb
imul
add
filds
cmp
sbb
clc
cmp
icebp
jb
gs
js
bound
xchg
cmp
pop
inc
in
pusha
fs
andl
jo
jns
mov
mov
int
ret
mov
je
push
push
je
and
aad
loope
test
cli
dec
rcll
push
sbb
lds
add
addl
and
out
int
cmp
or
mov
hlt
aaa
push
testw
lret
ds
xlat
movsb
imul
jo
push
mov
pushf
sub
ja
andb
xchg
cltd
mov
push
lds
xor
sbb
fstps
pop
ss
dec
xor
or
cmp
inc
mov
inc
call
out
enter
jecxz
mov
push
adcl
or
mov
xchg
xchg
push
rol
jle
mov
pop
sub
fisttps
dec
je
sti
xor
cmpsl
movsb
inc
fsubl
pop
lret
dec
cld
arpl
addr16
mov
out
and
divb
inc
mov
fdivl
lea
leave
inc
sbb
adc
adcb
adc
jmp
clc
fadds
ljmp
add
mov
mov
mov
or
jbe
sub
sbb
xor
or
xor
clc
push
mov
nop
jns
cs
mov
or
add
lret
sub
dec
invd
dec
nop
ss
inc
ret
push
call
sub
sbb
outsl
test
inc
jg
dec
lahf
ljmp
jp
mov
insb
enter
add
pop
mov
shr
test
adc
fisubs
loope
ret
push
out
addr16
dec
dec
dec
mov
popa
push
adc
ljmp
fstp
add
mov
mov
cmpsb
insb
jmp
enter
add
mov
mov
jno
jo
push
mov
sub
pop
popa
outsb
scas
scas
test
inc
aas
pusha
pop
mov
xor
arpl
push
out
and
adc
pusha
sbb
pop
xchg
decl
hlt
add
adc
push
and
dec
out
adc
jecxz
sarl
push
jecxz
sub
pop
pop
and
sti
out
jne
mov
test
jl
adc
stc
jecxz
add
out
add
incb
or
lods
mov
call
lcall
shrl
add
add
xor
xchg
lock
jmp
sub
into
rolb
call
push
xor
bound
and
lods
xor
sti
sbb
and
mov
add
xchg
mov
fsubs
cmpsb
xor
push
sbb
imul
dec
sahf
aam
loope
test
mov
stos
pop
pop
add
lcall
mov
hlt
test
dec
orl
repnz
lods
lcall
jle
push
cmp
mov
aas
jne
cmp
test
and
loop
jg
icebp
inc
fs
enter
ror
pop
call
fwait
add
mov
xchg
fucompp
or
nop
popf
add
jo
dec
cmp
popf
lods
push
adc
push
fwait
mov
pop
das
mov
popa
or
sbb
xchg
fisubl
dec
repnz
test
mov
xchg
aad
pop
js
cmpsb
dec
fcoml
in
cltd
dec
insb
pop
jl
cmpsb
mov
push
inc
mov
xchg
insl
icebp
inc
fsubl
insl
sbbb
push
psubq
adc
cmpsb
xor
xchg
sbb
inc
aas
clc
lods
jle
inc
insb
adc
sbb
jmp
adc
stos
ds
add
pop
ljmp
bound
sbb
jb
fists
jp
adc
movsl
and
push
stos
aaa
jge
insl
test
imul
jp
fwait
repz
mov
imul
lahf
and
mov
and
sub
add
iret
sbb
fbld
jo
mov
js
ret
pop
xchg
and
outsl
in
shl
sbb
notb
or
cs
ud2
out
loop
dec
inc
scas
loop
orb
mov
or
ss
loop
mov
jnp
jne
sar
push
fs
pop
push
jl
and
jns
mov
insl
repnz
adc
dec
movsl
jge
mov
loopne
sub
cmc
mov
test
je
cs
pop
mov
lock
pusha
push
sbb
sub
cld
ficomps
mov
xor
fdiv
cmp
add
inc
test
and
ja
and
pop
pop
int
jb
push
iret
ret
pop
adc
xchg
jecxz
add
dec
adc
push
test
xchg
ja
xchg
rol
cwtl
inc
mov
jb
xchg
cld
add
mov
mov
out
fstl
test
ds
test
aas
mov
dec
add
hlt
add
mov
loopne
push
fs
dec
test
push
lret
fidivrl
and
lret
adc
pop
jecxz
mov
es
mov
pop
movl
mov
push
mov
jne
enter
in
loop
out
add
ret
ret
cs
xor
and
and
nop
push
mov
popa
inc
jne
int3
mov
mov
jo
cli
and
and
lock
push
jns
inc
or
lcall
rcrb
inc
push
pop
bound
ljmp
enter
xor
sbb
inc
test
insl
sbb
jo
das
sahf
push
ss
mov
ljmp
pushf
add
not
mov
sbb
stc
mov
into
mov
mov
test
inc
ja
mov
jo
jle
fisttpll
aaa
push
mov
push
scas
sub
pop
pop
int3
and
sub
or
test
cmp
pushl
xchg
icebp
test
jmp
loopne
or
mov
inc
push
cwtl
andb
dec
push
add
xor
push
xchg
in
adc
or
adc
push
jns
dec
push
cld
sub
or
loopne
and
je
mov
loop
leave
sbb
push
outsl
mov
jo
inc
out
mov
adc
div
lahf
dec
loop
cmp
adc
push
lcall
inc
mov
and
mov
bound
and
rclb
or
test
ret
sub
movsl
movl
add
mov
idivb
pop
jno
dec
inc
jnp
lahf
data16
shll
incl
sahf
into
dec
xor
sub
test
data16
outsb
inc
or
pop
mov
or
cmc
icebp
pop
loopne
xchg
test
fidivs
jge
les
jle
frstor
adc
mov
testl
jl
or
push
mov
mov
popf
nop
inc
ret
aam
push
adc
add
sub
lds
scas
sub
je
fstps
pop
and
cmp
xchg
in
mov
xchg
and
mov
ret
mov
or
iret
mov
stos
jmp
js
data16
and
add
pop
stos
test
mov
jmp
and
pop
pop
cs
sub
and
mov
aaa
or
mov
jns,pt
lret
mov
mov
loope
popa
cmp
cmpl
jne
cmp
xor
loop
andnps
xchg
cmpsl
and
pop
sbb
pop
xchg
jno
add
scas
mov
xor
inc
inc
ss
xor
sub
inc
lea
rclb
pop
mov
sub
bound
sub
sbbb
mov
sbb
adc
gs
clc
std
mov
mov
and
cmp
jp
lcall
test
jo
sahf
lods
fmull
pop
fcompl
mov
add
sbb
std
adc
scas
dec
dec
ret
hlt
dec
pop
sub
xor
pop
addl
mov
fs
cmc
and
aaa
add
in
sbb
sbbl
xchg
mov
out
shrl
sbb
enter
xchg
inc
cwtl
xor
cmp
jp
movlps
sub
subb
sahf
cmpsb
imul
pop
sub
push
cwtl
or
js
pushf
or
cmpsb
lock
xchg
and
add
sub
enter
cmp
xor
xor
or
lahf
xor
cmp
pop
cmp
movsl
push
movq
les
pop
sbb
sbb
inc
das
bound
hlt
mov
mov
ret
data16
test
jl
daa
pop
jp
pusha
rclb
rclb
inc
fisubl
ja
sbb
stc
add
push
or
ret
jge
jb
lea
cmp
push
je
sbb
scas
inc
mov
mov
push
int3
dec
pop
xor
lds
ss
xor
xor
test
push
pop
pop
mov
jp
push
hlt
ret
xchg
shlb
xor
xchg
and
or
pop
fadd
andb
add
sub
cmp
mov
fwait
mov
leave
xor
add
out
jno
shrl
mov
outsl
or
or
inc
sub
sarb
dec
pminsw
in
pop
hlt
inc
cmpsl
das
pop
mov
pushf
add
xchg
and
clc
jmp
lret
lock
mov
jg
leave
jg
movsb
std
jo
push
jnp
mov
clc
lea
push
sub
incb
pop
daa
push
or
ds
mov
aas
dec
pop
dec
mov
inc
notl
std
lock
mov
popa
inc
pushf
mov
aad
clc
sbb
loopne
je
jmp
mov
and
fisubl
cld
cmp
adc
xchg
mov
mov
loope
inc
shlb
add
shl
mov
jl
ja
inc
jmp
adc
je
into
rclb
inc
push
sub
add
and
jg
mov
sub
dec
arpl
mov
sub
jno
xchg
fdivrp
sub
jb
push
rorl
dec
push
lret
stos
pop
push
push
xchg
test
pop
jg
out
out
adc
dec
test
xlat
and
test
pusha
adc
cld
xchg
push
jae
mov
push
push
xchg
or
dec
mov
aam
mov
sbb
jl
xchg
lahf
rclb
sbb
faddl
je
insb
scas
jl
mov
cmc
mov
sahf
es
lcall
xor
gs
xor
mov
test
fbld
xchg
lea
dec
cld
lock
mov
xor
jl
jl
sub
jp
or
dec
mov
mov
jbe
pop
les
dec
test
push
adc
ds
sbb
cmp
mov
push
scas
loopne
jg
jmp
add
xor
scas
shlb
xor
mov
mov
add
fisubrl
and
aam
sbb
imul
sarb
jne
jno
sti
loopne
fildl
repnz
mov
push
and
movsb
mov
insb
cvtdq2ps
mov
out
adc
or
scas
dec
shrl
in
scas
sarl
ds
jnp
ljmp
jmp
mov
sub
out
inc
mov
inc
psadbw
clc
sub
jge
fdivrl
push
push
cld
iret
xchg
movsb
int
mov
mov
movsl
shl
jmp
cwtl
lds
sbb
push
cmpsl
lret
loope
repnz
enter
pop
lcall
pop
bound
mov
inc
mov
or
rolb
add
xchg
decb
jg
dec
pop
jg
sub
mov
xor
sbb
sub
adc
push
mov
add
add
je
cmp
cmpsb
jae
js
inc
outsb
out
push
loop
mov
push
cwtl
setp
rcrb
popa
add
addb
pop
aam
push
add
mov
test
inc
ret
notl
adc
inc
jae
lcall
repnz
lods
mov
xor
mov
jno
mov
or
out
mov
fimull
xchg
orb
sbb
mov
push
test
insl
lds
cwtl
orl
cld
cli
aam
in
add
cmp
inc
pop
lea
sbb
jg
test
inc
lods
and
or
xchg
sbb
jl
fdivr
call
imulb
mov
cltd
mov
cmp
inc
xchg
dec
arpl
rol
mov
lret
aad
push
mov
adc
loope
clc
lret
rclb
addl
push
fstps
xor
pop
sbb
sub
nop
jl
push
add
enter
sbb
shll
or
movsb
out
and
in
repz
aas
and
daa
mov
sub
movsb
xor
sub
xchg
xchg
loope
fsub
adc
out
icebp
inc
lock
aam
popa
lahf
sub
push
add
cmp
pop
fistpll
loop
clc
lret
xor
mov
or
mov
jmp
int3
sbb
or
int3
xchg
cli
xchg
subb
push
mov
push
or
ret
cld
pop
lret
mov
mov
xor
adc
adc
inc
push
cs
sbb
scas
or
lahf
and
mov
repnz
daa
les
mov
fdivl
jle
jae
daa
in
jp
ljmp
pop
push
outsb
call
pop
cltd
push
inc
and
mov
add
sbb
push
in
pop
out
jg
jle
sbb
into
mov
lahf
lock
cltd
insb
cwtl
or
rcrl
lcall
or
adc
mov
pop
jb
ds
sub
sbb
ljmp
sub
clc
mov
xchg
mov
cld
push
inc
jecxz
addr16
fcmovnb
dec
shrb
inc
pop
mov
jl
orb
ret
mov
shrl
mov
pushl
cmp
pop
and
ret
jo
fucomp
xor
lods
sbb
divl
xchg
push
sbb
fdivrs
mov
mov
loop
call
subl
mov
xor
fs
add
mov
dec
add
adcl
xchg
pop
pop
lods
popf
mov
jae
jecxz
push
xor
push
aam
lret
xchg
sbb
sub
cs
pop
aas
add
into
cld
les
push
mov
in
push
int
mov
mov
sbbb
jno
cmpsl
scas
cltd
sub
in
popa
push
scas
jo
push
clc
sbb
and
sub
cmp
jbe
std
or
jo
jle
push
leave
add
pushf
lock
dec
pop
mov
pop
jg
divb
push
adcb
mov
inc
jb
pop
fdivrs
roll
dec
inc
add
clc
popl
jg
jne
enter
mov
inc
adcb
add
dec
clc
adc
jmp
xor
adc
push
shl
test
mov
incb
sub
cli
sbb
aaa
out
adc
sahf
mov
sahf
call
jno
insb
sbb
push
mov
pop
movsb
push
jmp
call
mov
add
inc
sbb
jle
cmp
fnsave
inc
sub
outsl
scas
mov
in
dec
mov
mov
in
inc
or
cmpsl
lock
mov
rorl
std
cli
mov
mov
cmp
push
inc
lret
leave
pop
iret
fs
iret
cmp
test
pusha
rol
pop
sub
nop
xor
incb
lcall
mov
cmp
call
sub
incl
cli
icebp
inc
or
xchg
aam
xor
inc
jmp
push
cmpsl
ja
sbb
fdivrl
add
pusha
mov
out
into
fisubrs
outsb
arpl
psubsw
rolb
mov
in
lock
push
dec
in
into
call
popa
repz
shl
adc
test
decb
push
push
mov
ja
adc
xor
mov
insb
test
xorb
lea
fwait
aas
out
xor
add
and
sub
mov
in
cmpsb
pop
and
or
fdivs
inc
pop
adc
pop
dec
ret
loope
push
xchg
jb
mov
sub
and
sbb
loop
mov
loopne
add
mov
and
add
xchg
inc
int
mov
pop
xchg
jb
stos
sub
cmc
adc
push
jo
adc
jns
fabs
jne
es
or
sub
lret
fdivl
dec
test
dec
ljmp
loopew
pop
xlat
xor
aad
movsb
testl
cmp
add
dec
add
aas
sbb
adc
andl
fistpl
decl
sbb
mov
movsb
negb
lds
sti
jmp
int
cmpb
xor
fstp
stos
sbb
or
fadds
loop
xchg
mov
cli
and
clc
push
xor
and
pop
jle
pop
cld
daa
dec
in
pop
add
push
ja
jl
pop
xlat
daa
push
push
pop
es
xchg
add
inc
das
pop
cltd
cmp
mov
push
nop
mov
add
push
push
or
jg
add
xchg
stos
mov
jbe
iret
add
mov
cmp
sbb
sbb
test
aas
std
fs
pop
add
enter
add
lahf
dec
fnstenv
mov
adc
test
testb
cmp
sahf
aaa
out
sti
xor
icebp
sub
popa
pop
push
and
loopne
cmp
add
cwtl
jecxz
in
test
lods
ret
mov
idiv
and
mov
sbb
lcall
outsb
arpl
xchg
ljmp
sbb
leave
and
adc
xor
mov
jp
fisttps
daa
insb
sub
cld
or
jl
outsl
pop
lea
inc
clc
shrb
and
inc
test
xchg
pop
and
cmovg
cmp
daa
scas
outsb
stc
pop
cmp
adc
call
cltd
push
mov
imul
mov
pop
or
es
mov
outsb
jbe
hlt
mov
movsb
leave
imul
pop
lret
xchg
and
pop
mov
fistpll
lds
ljmp
push
rcrb
sub
sub
das
sub
loopne
sub
push
pop
test
fcomps
push
ljmp
dec
fisubl
ret
push
repz
adc
shr
popa
and
mov
scas
clc
lods
stos
jecxz
sbb
jp
xchg
hlt
int3
mov
jg
inc
jns
stos
dec
fcoms
je
lds
mov
fsts
dec
adc
lock
mov
cmp
sti
mov
mov
xlat
mov
in
dec
cld
or
clc
rcr
stos
fwait
xor
pop
xchg
hlt
test
loopne
dec
fdivl
insb
inc
cmpsb
add
mov
lock
cmp
mov
insb
mov
jb
cmp
rcll
sub
das
lds
add
xor
mov
les
add
clc
std
xchg
and
push
jge
and
cmp
push
adc
inc
cmc
aas
inc
mov
in
jnp
sub
xor
adc
push
sbb
xor
adc
out
pop
mov
push
outsb
jl
je
adc
or
repnz
loop
scas
rcrb
into
pop
ret
stc
push
stos
sti
mov
xlat
mov
push
mov
test
mov
cmp
loopne
sub
mov
pusha
adc
push
add
or
inc
cld
rcrl
jle
mov
add
rorl
inc
inc
pop
push
adc
loopne
cld
repnz
add
leave
lea
call
loopne
ret
psubb
out
subb
lret
in
test
out
js
dec
sub
and
cmp
jo
xchg
push
imul
dec
pop
std
push
movsb
push
and
arpl
pop
rsqrtps
jne
mov
inc
fisubl
or
lods
mov
int
out
pop
jl
or
sbb
cmpb
xchg
push
in
and
out
lds
push
sub
shrb
insb
push
clc
sub
cmpb
xchg
mov
adc
cmp
lret
les
cmc
ds
scas
inc
mov
andb
addl
les
push
lock
bnd
fmuls
cli
enter
xor
mov
pop
aas
add
xchg
lret
mov
bnd
pop
xchg
mov
loop
inc
test
adc
roll
shl
or
jmp
mov
rcl
inc
add
mov
sti
data16
add
out
ja
cmpb
outsl
and
repz
pushf
sahf
xor
mov
sbb
pop
lret
jp
push
in
stos
jle
notl
cmp
and
leave
sub
add
bound
mov
jo
or
push
fcoms
pop
sbb
inc
lock
mov
sub
mov
xchg
int
xor
test
cmp
push
dec
lret
dec
call
andl
and
psubb
outsb
mov
insb
push
hlt
mov
in
jnp
mov
push
addr16
call
mul
in
pop
or
popa
add
adc
loopne
sbb
or
push
jae
sub
hlt
jmp
push
sub
mov
jmp
clc
bound
pop
imul
roll
mov
push
sbb
add
or
mov
ret
and
lock
mov
loopne
push
fldl
mov
cmp
rcr
cmp
sbb
xchg
daa
cmpsl
mov
add
mov
mov
js
roll
dec
and
and
sub
dec
and
fdivs
pusha
jno
stos
testb
jge
test
test
push
aad
pop
xor
cld
or
test
ss
mov
insb
pop
sub
dec
rcrl
fs
mov
jae
xor
jg
or
dec
ret
dec
add
cmp
or
xchg
xchg
iret
pop
cmpsb
decb
push
sbbl
jo
or
scas
imul
imul
cs
mov
mov
sarb
add
add
pop
lds
mov
arpl
cli
mov
push
icebp
inc
cltd
mov
hlt
dec
lock
addr16
ret
push
pop
mov
hlt
add
sti
in
popf
mov
mov
adc
dec
roll
push
cld
or
push
test
dec
popf
xchg
cltd
sbb
fldl
mov
ds
stos
xchg
test
dec
inc
mov
scas
cs
stc
test
sub
push
mov
das
or
mov
cs
or
adcl
inc
in
pop
je
adc
test
xchg
cli
dec
inc
jge
inc
xor
jae
or
mov
or
pop
cmp
mov
cmpsl
mov
inc
shlb
fucomp
adc
out
jmp
aas
shrl
pop
or
push
inc
push
add
push
cmp
sub
mov
xchg
sub
data16
mov
xchg
jle
sbb
sbb
xorl
shrb
enter
scas
stos
bound
dec
call
or
inc
add
or
cwtl
add
pop
mov
sub
movl
repz
cmpsl
cmp
or
cmc
das
jp
and
fisttps
loop
nop
mov
jne
test
dec
xchg
mov
xchg
sbb
xchg
mov
xor
mov
and
inc
and
and
adc
mov
cwtl
cmpsb
xor
pop
shr
iret
arpl
add
add
out
mov
cld
mov
outsl
push
xacquire
shll
shl
dec
rcrb
jmp
and
mov
cmp
test
pop
sbb
out
call
sbb
aas
add
adc
add
xor
pop
les
add
pop
or
es
test
adc
sbb
pop
or
push
adc
and
orl
pop
repnz
out
adc
andb
mov
sbb
pushf
in
add
ljmp
cmp
mov
adcl
mov
inc
sahf
and
ss
ret
push
sahf
dec
adc
fwait
hlt
add
ficomps
scas
jno
nop
lods
sub
lods
aam
mov
xchg
mov
in
movsb
push
inc
or
andb
call
jno
mov
add
cld
mov
push
testl
dec
insl
inc
sbb
icebp
into
std
dec
jmp
repz
ja
add
loopne
sahf
add
jecxz
mov
dec
or
mov
pop
push
mov
das
jge
cld
dec
xor
pop
push
movsl
sbb
xchg
lds
push
outsl
jbe
push
push
mov
or
and
add
xchg
call
xor
lcall
andb
push
cmc
cmp
cmp
sbb
pop
fadds
jbe
cmp
fiadds
ret
mov
sbb
cmpsl
adc
add
inc
ljmp
mov
pop
xor
sbb
jp
jno
mov
add
or
int
push
icebp
cmp
ss
sub
mov
and
jmp
dec
pop
hlt
icebp
pop
push
ljmp
out
cmp
mov
loop
inc
je
push
fcompl
decl
lret
adc
ret
je
xchg
mov
popa
inc
outsb
pop
mov
adc
std
and
test
and
insb
jl
xor
mov
mov
sub
xor
cmp
dec
pop
lcall
rorl
pop
push
icebp
push
adc
sahf
cmpsb
arpl
pop
mov
fimuls
movsb
aam
cmp
insb
push
movsb
adc
enter
xchg
cmp
push
ror
push
jb
jmp
push
movsb
add
popf
xor
in
shrb
jl
lods
hlt
adc
mov
jg
inc
inc
dec
fisttpll
ret
pop
dec
add
popa
jge
inc
cld
add
lahf
inc
xor
mov
mov
jp
js
jo
adc
push
dec
xor
mov
mov
movsl
cmc
mov
cwtl
lds
pusha
mov
push
inc
addr16
push
sahf
nop
std
jno
mov
rorl
adc
sbb
push
fistpll
add
xor
lock
sub
sbbl
xor
add
fs
mov
pusha
mov
push
xchg
adc
lret
stos
xchg
dec
mov
mov
outsl
out
decl
sub
add
mov
js
push
popf
out
xchg
mov
xor
xchg
mov
cs
or
incl
push
pop
add
decl
xchg
push
es
add
js
out
or
push
mov
je
push
push
je
pop
push
cmpl
mov
sbb
imul
outsl
sbb
loope
mov
lahf
rol
xchg
stc
mov
mov
aad
rol
mov
scas
jbe
je
push
movsb
xchg
jmp
pop
dec
daa
test
icebp
push
sar
xor
ret
xor
mov
scas
fisttpll
and
pop
mov
sbb
and
mov
test
or
mov
pop
sbb
out
xchg
fmuls
push
xchg
lret
mov
add
repnz
xor
xchg
pop
xchg
add
es
xor
aas
ret
pop
lods
sub
xchg
jo
mov
shrb
ret
movsb
mov
shl
clc
mov
adc
fst
push
inc
cmovae
das
fcmovne
out
push
push
sub
cwtl
lock
jns
lods
pop
cmc
xchg
pop
cmp
scas
mov
int3
sbb
popa
inc
dec
dec
jle
jno
popf
icebp
aad
mov
fs
xchg
jle
into
inc
xchg
sbb
and
add
shrb
ret
xchg
xchg
push
mov
adc
ss
dec
es
dec
fmull
push
dec
inc
mov
dec
sub
bound
ret
ss
mov
push
lods
xchg
mov
incl
outsb
jae
aaa
xchg
adc
shlb
imul
push
adc
dec
loopne
jne
les
dec
sbb
cmc
popa
loope
push
cmp
or
xor
fadd
push
inc
ds
mov
or
bound
test
call
inc
ret
mov
leave
add
in
inc
pop
loop
cmp
jns
and
hlt
dec
es
inc
dec
cmp
imul
add
xlat
lock
rcl
pop
faddl
push
je
lret
jge
testb
and
sub
rorb
sbbl
orl
stc
push
dec
testb
repnz
rorb
les
call
out
adc
push
leave
call
cltd
fimull
ret
push
cmp
mov
outsb
subb
pop
ss
xchg
test
mov
cmp
mov
std
arpl
pop
jo
sti
fisubrs
sbb
lods
gs
push
outsb
push
and
dec
sbb
push
ret
iret
mov
mov
xor
add
shrb
inc
pop
lods
aad
or
mov
pop
je
dec
in
pop
sub
popa
push
test
testb
sub
outsl
sub
test
std
push
pop
nop
repz
test
cwtl
jmp
incl
aaa
in
pop
shl
mov
fistpll
roll
or
cmpsl
or
and
neg
and
out
inc
or
sub
jno
clc
sbb
movsb
mov
jnp
cmp
fwait
or
pusha
jmp
pop
push
test
push
push
imul
xchg
jno
jb
inc
or
push
rolb
dec
insb
xor
loop
pop
pop
jg
aaa
cmp
out
inc
into
sbb
pop
or
or
pop
adc
adc
scas
sbb
jmp
ljmp
les
int
or
pop
pop
add
fucomi
mov
or
pop
rolb
sbb
fnstenv
adc
into
add
lret
std
cmp
mov
mov
xchg
lods
pop
inc
jnp
aaa
mov
push
lock
mov
mov
bound
sbb
jb
dec
cmp
sbbb
out
les
and
add
aad
mov
sarb
dec
lds
jl
add
inc
out
sbb
inc
adcl
stos
lret
imul
lret
mov
divb
subl
test
and
lds
clc
push
adc
dec
mov
js
add
jg
rcr
push
ret
iret
clc
push
mov
fnstenv
jno
xlat
lock
cmp
inc
xorl
andl
lock
fistpl
loope
and
jns
cmp
leave
pushf
jg
or
dec
mov
inc
popa
push
hlt
cmp
repnz
or
pusha
push
adc
jb
mov
jne
xor
movsl
fwait
push
stos
xor
rcrl
jo
xchg
cmpsb
daa
cwtl
jae
mov
or
lock
cmp
mov
sub
sahf
cmp
nop
ss
cmpsb
movsl
outsl
or
sbb
push
das
fiadds
add
add
repnz
jg
adc
loope
inc
dec
inc
pop
lods
xor
data16
add
lahf
icebp
and
push
jl
cmc
in
outsb
pop
in
jnp
rcll
cmpsb
lock
fs
cmp
sbb
cmp
scas
push
ror
xor
sbbb
mov
or
sub
aaa
pop
and
mov
mov
xchg
inc
mov
loope
icebp
or
xor
and
xchg
rcrb
mov
dec
push
xor
sarb
mov
mov
clc
xchg
add
scas
push
inc
bound
loopne
aaa
sahf
gs
cmpsb
popa
inc
or
sub
xchg
mov
xor
into
xchg
or
sbb
rorl
subl
adc
test
and
data16
sbb
popf
jns
and
mov
test
sbb
mov
jg
pop
test
jp
jg
or
cmp
loop
rcrb
push
mov
jl
jl
dec
popa
mov
imul
std
addr16
ljmp
aaa
and
mov
dec
imul
xchg
jp
inc
jge
ret
inc
jle
dec
mov
hlt
push
xorb
rcrb
nop
pop
inc
fidivl
inc
bound
pop
lcall
cltd
cmpsb
add
cmp
in
fwait
stc
xor
dec
stos
add
les
je
mov
stos
cwtl
orl
jne
out
add
mov
cmp
sarb
sbbb
aam
jmp
dec
xchg
cmp
fnstenv
mov
and
jns
mov
mov
xchg
bnd
lock
xchg
mov
add
popa
loope
iret
sbbb
xor
inc
mov
pop
inc
inc
add
lret
insb
add
jp
fildl
les
xor
sub
mov
pop
adc
scas
mov
aam
xchg
into
mov
pop
fs
sub
fdivrl
scas
movsl
jne
xchg
pop
js
mov
daa
sub
and
pushf
sbb
jecxz
outsl
mov
ret
push
ljmp
mov
mov
bound
cld
push
fmull
inc
mov
lea
dec
hlt
rolb
icebp
icebp
cmpb
bound
jecxz
aaa
rorb
mov
jmp
sbb
cmp
push
xchg
jle
mov
adc
imul
out
stos
out
adc
test
icebp
lahf
mov
negb
scas
mov
mov
xor
lea
cmpb
ds
les
int3
insb
and
add
rcr
jns
jae
pop
or
sub
es
jne
jo
sub
sub
push
jecxz
call
fmull
sub
out
mov
jmp
fisttpl
jnp
pop
mov
clc
cmc
jp
add
scas
push
fdivs
jecxz
mov
fwait
inc
cwtl
mov
add
push
pop
clc
aaa
pop
sub
adc
mov
inc
sbb
aad
scas
xchg
sbb
add
jb
jne
fs
mov
mov
cld
sbb
xchg
cmp
add
rol
sbb
adc
notl
stos
dec
cmp
cmp
add
ds
pop
hlt
mov
aaa
push
hlt
js
sub
fadd
inc
add
lock
xchg
xchg
mov
mov
out
mov
sbb
dec
xchg
jmp
mov
ss
push
or
pop
subl
pop
stos
lock
adc
ss
mov
jle
addb
into
inc
test
push
jb
cmpb
faddl
outsb
sbb
rorb
mov
imul
mov
daa
test
movb
xor
add
sub
ret
xlat
clc
xor
insl
push
lea
mov
orb
clc
mov
out
lret
test
push
mov
loopne
das
pop
int3
mov
pop
std
arpl
pusha
jno
pop
cmc
movsb
mov
hlt
in
sarl
mov
dec
sub
mov
xchg
adc
lods
sub
loopne
flds
imul
mov
mov
cmp
jecxz,pt
cmc
mov
ss
scas
mov
sub
xor
daa
subl
and
mov
and
cmp
ljmp
cmp
xchg
inc
mov
clc
js
mov
fdivs
adc
decl
mov
loope
popf
cmp
sub
ftst
and
cmp
adc
in
shrw
push
mov
fists
push
mov
sbbb
xor
or
xchg
lcall
xchg
dec
scas
sbb
movsb
mov
inc
mov
mov
sbb
pusha
mov
fistpl
cltd
and
adc
push
mov
clc
les
loopne
orb
stos
and
aas
jb
mov
push
sbb
rolb
xchg
or
cmc
push
sbb
xchg
jb
fs
dec
xchg
outsb
dec
mov
popf
sbb
lret
loopne
fs
ret
adc
ret
insl
push
add
loopne
cwtl
push
inc
or
add
jecxz
cmp
cld
or
add
test
int3
jae
cld
mov
leave
pop
in
lcall
stos
call
sbb
int
or
mov
cmp
xorl
jp
jnp,pt
pushf
adc
mov
mov
aas
and
mov
mov
imul
movsb
sbb
pop
jg
subb
jmp
inc
fisubrs
lahf
hlt
je
es
cmp
stos
pop
fildl
shlb
dec
ss
push
push
js
and
pop
lret
mov
dec
cmp
icebp
int
or
push
sub
mov
or
pusha
xchg
xchg
subl
ljmp
jecxz
maskmovq
divl
and
subb
jp
push
pop
aaa
lds
add
lahf
cmp
mov
pop
lds
push
add
xor
mov
shr
insl
cmpsb
xchg
inc
out
rorl
mov
push
adc
and
push
test
inc
sub
es
jp
push
push
icebp
lea
xor
lds
setnp
mov
jmp
or
je
iret
push
repnz
add
pop
or
movsl
mov
subb
xor
lahf
pop
rorb
scas
stc
mov
add
xchg
scas
das
cld
loope
sbb
jg
xchg
cmp
inc
pusha
mov
pop
test
mov
pop
mov
or
sti
ja
jp
mov
popa
insb
leave
pop
dec
pop
cmp
shll
pop
or
xchg
mov
jl
sbb
and
ret
nop
jp
cld
mov
sub
int
test
add
fmuls
xchg
stos
lret
andb
mov
les
dec
insl
and
jmp
mov
xlat
add
adc
data16
pop
in
push
cmpsb
pushf
lds
cmp
sbb
jge
inc
sub
or
push
mov
int3
push
insl
loop
sub
subb
and
or
mov
sbb
iret
xor
and
cmp
sub
xchg
xor
and
xchg
test
rol
push
jne
cwtl
pop
dec
pushl
fcoml
mov
xchg
dec
add
gs
loopne
mov
addr16
imul
ss
sub
sbb
jmp
sbb
inc
xchg
aaa
push
jnp
sub
cmc
stc
xchg
pop
xor
mov
sbb
inc
test
fnsave
push
cmp
cmpsb
push
cmp
outsl
out
ret
data16
aas
jmp
lret
xchg
sub
addr16
call
addl
add
mov
push
out
loop
and
dec
stos
mov
mov
mov
add
loope
loopne
gs
sub
pusha
pop
adc
cmc
push
jns
dec
inc
out
adc
pop
test
lea
inc
pop
in
add
jae
movsb
ret
je
mov
sub
in
ffree
xor
iret
xchg
sbb
mov
movsb
mov
ret
les
cmpsl
fisubs
daa
dec
push
xor
fdivl
imul
mov
xchg
and
fnstsw
add
popa
adc
sub
test
dec
pop
cmp
negl
xchg
jmp
adc
imul
movsl
in
mov
or
mov
mov
cmp
pop
fucomip
lods
mov
rolb
pushfw
scas
pop
lds
leave
or
out
mov
push
outsl
or
lea
fstpt
push
les
sub
ret
cmp
int3
sbb
adc
cmc
push
cli
cmp
jle
inc
adc
das
mov
lods
sahf
loope
adc
or
fimull
mov
push
int
data16
or
and
cli
adc
imul
mov
cmp
or
xchg
scas
movsb
and
or
jno
lods
cmpsb
jle
push
orl
or
lods
into
xor
sbb
stos
mov
mov
pop
and
inc
sub
pop
popa
sub
stos
cltd
loope
sub
iret
fwait
pop
daa
xor
popa
or
jl
je
movsb
push
pop
aas
daa
mov
dec
jg
xchg
test
xor
test
adc
cmp
dec
pop
and
imul
sti
sub
lret
add
fadds
and
popa
jl
push
xor
or
inc
fwait
pop
xor
xlat
xlat
das
push
dec
inc
jmp
cmp
mov
ss
jg
movsb
sub
pusha
clc
sub
int3
sub
push
lods
or
jnp
int3
bnd
xchg
imul
test
sub
fsubrp
lret
mov
jnp
mov
xchg
repz
lods
cmpb
scas
mov
cmp
je
loopne
mov
pop
add
pop
repnz
adc
push
clc
aam
or
xor
dec
test
xchg
int
subb
pop
pop
imul
shlb
loopne
jb
loopne
jns,pn
add
arpl
lahf
jg
inc
outsb
shrl
xchg
and
ret
jge
mov
nop
cmp
sbb
aaa
bound
mov
mov
sarl
dec
mov
test
rcll
addb
lahf
xchg
ss
pop
aas
enter
std
mov
imul
add
shlb
xchg
cmc
in
aaa
ds
cmpsb
js
in
test
push
jmp
sti
add
xchg
mov
lahf
es
push
xchg
push
je
xor
insl
mov
rolb
mov
fcmovu
rorb
popa
adc
pop
loopne
sbb
cmp
fmuls
clc
add
cmp
push
pop
add
add
adc
sub
inc
jmp
jbe
ss
insl
push
sub
pop
jno
or
js
fs
dec
jne
or
inc
and
sub
sub
and
or
jp
and
mov
jmp
xchg
ja
js
insb
sub
ja
jle
gs
jp
xlat
push
push
or
mov
or
or
mov
fsubl
loopne
mov
sbb
addr16
loope
fsubs
stos
and
cs
cmp
lcall
dec
daa
and
mov
mov
push
mov
xor
stos
pop
popa
push
dec
lock
pop
loop
adc
mov
and
xchg
xchg
out
mov
or
cs
jnp
inc
testl
jne
pop
adc
cmp
ds
or
out
test
push
pop
jno
xchg
icebp
in
lods
lds
dec
adc
addb
xlat
push
stos
sbb
pop
mov
or
dec
lret
cwtl
mov
fadds
jmp
push
fistl
unpcklps
mov
lock
into
jmp
leave
dec
jl
jl
jno
jb
adc
inc
scas
adc
push
jmp
cmp
enter
cmp
inc
test
mov
xchg
jno
pop
pop
mov
sub
cld
cmp
fidivl
out
xor
push
jo
add
inc
dec
sahf
cli
cmpsl
cmp
ljmp
jne
add
push
mov
xchg
cwtl
or
loop
xchg
add
inc
movsl
pusha
mov
lret
xor
dec
mov
lods
xor
je
inc
cli
pop
imul
mov
mov
push
test
cmovb
sarb
into
mov
clc
cmc
stos
clc
dec
xchg
loope
mov
push
mov
das
call
inc
or
pusha
lcall
xlat
cmp
fbld
icebp
pop
call
and
mov
imul
outsb
pusha
das
into
pop
scas
ja
mov
and
sub
add
add
sbb
xchg
shl
push
cwtl
add
inc
jmp
pop
int
cld
fmuls
lret
xor
sbb
xchg
mov
out
cltd
lahf
ja
push
clc
cld
stc
or
lods
mov
out
dec
jo
inc
mov
xchg
sti
or
push
mov
or
xor
sub
sub
dec
test
xor
jg
ret
lahf
push
inc
mov
mov
inc
imul
mov
adc
mov
cmp
pop
xchg
push
ds
xchg
shl
fists
data16
lret
add
sbb
in
rcll
add
mov
leave
add
das
test
mov
jl
bound
test
rcrl
les
push
arpl
jge
aas
mov
mov
ret
dec
subb
pop
clc
aam
leave
dec
call
add
or
mov
test
js
inc
add
inc
scas
loopne
push
adc
lock
shrb
add
cs
xor
sub
sbbl
es
ficoml
iret
mov
add
pop
or
xor
xor
sbb
fcmovne
inc
jbe
pop
shrl
divb
outsb
adc
and
mov
mov
cli
jg
hlt
inc
add
lea
mov
mov
pop
lret
inc
sbb
jl
lods
sbb
inc
sub
shlb
xor
xor
inc
daa
repz
push
loop
and
es
aas
push
or
push
pop
xor
loop
adc
add
mov
in
fs
retw
jb
repnz
shl
stos
cmp
cld
and
inc
sub
sub
orb
mov
into
sbb
bswap
iret
lahf
xchg
js
loop
jl
push
inc
add
or
sti
movl
dec
scas
lahf
xchg
jns
js
hlt
dec
mov
scas
sti
shlb
adc
jg
rorb
and
in
leave
fdivs
cwtl
cmp
xor
rcll
int
loopne
mov
das
jle
sub
mov
sbb
mov
cs
jmp
xchg
movsl
inc
fisubl
jmp
or
sub
cmpsl
outsb
clc
ss
jo
cmp
sbb
push
std
dec
cmp
fs
insl
movsb
add
push
insl
js
lret
add
push
sti
iret
push
call
je
adc
fs
mov
mov
inc
jae
aaa
scas
lret
mov
jg
pop
cld
xchg
movsb
test
inc
outsb
out
mov
in
adc
imul
adc
or
incl
js
jo
mov
lock
mov
mov
push
cld
dec
fsubr
mov
add
int
adc
push
inc
rolb
add
adc
sub
inc
lea
pushf
syscall
mov
scas
lock
es
rcl
push
push
cmp
pop
loop
mov
sub
cmpsl
xlat
mov
push
add
sbb
out
add
and
movups
lea
ds
mov
xchg
imul
jmp
cmc
xchg
mov
mov
imul
cli
insb
jp
hlt
push
cmp
push
push
pop
sar
decl
fsubrl
and
push
xchg
dec
sbb
arpl
xor
lret
cmp
sbb
scas
mov
outsl
sbb
inc
mov
cld
jl
sbb
scas
inc
pop
incb
std
test
sbb
jns
inc
lock
sbb
ror
xor
sbb
xchg
jno
push
pop
push
inc
push
rcl
ud0
test
push
push
stos
or
add
jns
cmp
int3
xchg
cli
push
mov
aas
lock
dec
aam
inc
mov
sbb
and
daa
test
inc
dec
cld
pop
jae
push
shll
fcmovb
adc
lret
xor
shlb
lahf
cmp
jecxz
ljmp
loop
fcmovb
rcll
daa
xor
or
jo
jle
nop
jecxz
das
out
pop
rclb
xchg
test
jo
or
push
mov
pop
jno
fisubrs
aam
push
jp
mov
dec
add
lar
cmc
ret
lock
enter
jnp
xchg
pop
shlb
movsb
mov
arpl
rorb
mov
mov
add
push
shlb
je
jnp
ret
mov
xchg
loop
sbb
xchg
ja
stos
pop
dec
or
mov
mov
sbb
pop
push
sbbb
movsb
outsl
push
scas
push
hlt
add
xchg
lds
jae
incl
jno
mov
testl
ret
rcll
pop
sbb
fdivrp
mov
dec
xor
inc
and
lods
cmc
cmp
orb
andl
or
lods
pop
faddp
xchg
and
xchg
jae
cmp
rcrb
loope
pushf
pop
lret
mov
cli
repnz
pop
sub
add
mov
lcall
pop
mov
movsl
mov
data16
jg
dec
push
add
add
adc
addb
push
imul
jmp
xor
and
cvttps2pi
adc
or
cmpb
lahf
xor
sub
mov
mov
adc
mov
icebp
sub
stos
mov
xchg
cmpsb
push
imul
sub
mov
jmp
sbb
adc
call
js
pusha
jmp
imul
push
lret
or
imul
rcrl
loop
and
cmpsl
scas
sahf
add
shlb
xor
jo
cmp
enter
sub
in
test
rorl
inc
pop
dec
mov
ret
pop
xor
mov
inc
jno
mov
add
mov
push
adc
cmp
jg
test
adc
pushf
and
xor
inc
in
shlb
lock
pop
sti
cmp
adc
mov
mov
ljmp
stc
sub
fisttpl
lds
dec
test
outsb
dec
sub
jae
sub
inc
addr16
mov
add
ss
psrad
in
loop
rclb
leave
cli
lcall
test
add
in
cli
jg
loope
pop
lock
inc
mov
push
xchg
inc
sahf
test
shlb
or
into
sub
jg
mov
xchg
out
jle
or
fisubrs
cmp
push
icebp
xchg
stc
or
es
jl
rcr
jmp
fcomip
inc
das
aaa
cwtl
adc
daa
ja
nop
int
cmp
push
xor
sub
jnp
inc
imul
xchg
mov
dec
js
daa
xchg
fs
faddl
mov
int
xchg
pushf
enter
daa
fldl2e
ficoms
add
mov
popa
jmp
cs
repz
push
pop
shr
shrb
xchg
sbb
push
popa
push
lds
jns
icebp
and
jl
and
ds
sbb
xor
gs
xor
mov
inc
mov
outsl
pop
cmp
dec
pop
mov
pop
js
xor
dec
or
nop
lcall
push
mov
fs
ljmp
inc
test
push
popa
test
dec
or
lock
js
andl
loope
xor
push
xor
out
in
je
hlt
push
add
movsb
rolb
ljmp
dec
stos
jb
or
xorb
mov
mov
bound
and
std
and
mov
mov
es
clc
outsl
in
movsb
popf
inc
jecxz
xchg
push
add
nop
in
push
jecxz
xchg
dec
ret
adc
inc
loope
int
loope
cltd
call
stc
lahf
xchg
sub
bound
dec
insb
test
mov
xchg
add
les
xchg
sub
adc
ljmp
jmp
push
arpl
int3
dec
sub
roll
imul
mov
sahf
into
fcmovb
test
jmp
popa
lods
mov
push
sar
sub
mov
nop
jp
adc
adc
pop
push
dec
lock
adc
outsl
jnp
pop
sbb
int3
xchg
add
sarb
xchg
xchg
push
int3
dec
sub
arpl
ret
mov
cmp
xor
aam
adc
adc
mov
dec
push
data16
dec
movsb
insb
lods
mov
or
aas
daa
add
sbb
dec
add
ss
lgs
lock
jnp
out
push
cli
inc
mov
mov
dec
das
sbb
xchg
icebp
and
xchg
dec
push
mov
cltd
sub
xorl
adc
dec
mov
into
mov
inc
popa
push
pop
mov
pop
sub
out
add
je
jmp
jb
dec
xchg
stos
push
andl
hlt
out
xor
dec
xor
push
dec
cli
cmpsb
xchg
adc
sarb
test
inc
mov
add
in
leave
lock
mov
sbb
sarb
clc
push
cmp
ror
ret
loopne
push
repz
je
mov
hlt
rclb
iret
jge
add
mov
jne
ret
rcll
cli
das
mov
dec
lret
daa
pop
data16
cmp
cmpsb
add
sbb
pop
pop
mov
cs
lods
fnstsw
sbb
add
repnz
mov
mov
scas
rclb
cwtl
les
add
xchg
add
js
dec
and
arpl
mov
cmpsb
mov
push
insl
mov
xor
sbb
sub
rcrb
adc
dec
xchg
jb
pop
cmp
lock
pop
adc
outsl
jp
xor
push
and
mov
in
or
arpl
xor
rorl
call
xchg
mov
call
cld
mov
push
js
imul
fmull
in
and
or
pop
or
add
lahf
aad
jg
pop
and
jbe
mov
dec
push
sub
inc
mov
sub
neg
icebp
stos
ficompl
loopne
inc
movsb
out
pushl
adc
inc
lods
push
push
test
cltd
jecxz
or
mov
adc
call
xor
pop
add
push
inc
mov
mov
inc
cmp
pop
loopne
xor
mov
std
adc
adc
notb
es
and
les
or
aaa
fstpt
sahf
hlt
mov
fsub
jg
enter
sbb
repnz
sbb
adcl
insb
dec
and
xor
add
loope
sbb
fmull
test
and
sub
jl
dec
sbb
and
xchg
xor
ja
ret
mov
xchg
sahf
out
mov
add
and
cmpsb
mov
xor
mov
inc
push
jne
inc
mov
loop
mov
jb
dec
push
movsl
movsl
add
xchg
out
ret
jge
cli
pop
xlat
fcmovbe
bound
lret
push
xchg
jne
lods
sti
jbe
into
lret
loop
inc
lods
and
mov
jmp
inc
sbb
mov
je
sbb
add
icebp
call
es
jp
shrb
incb
mov
and
cld
mov
mov
sti
mov
es
in
bound
mull
adc
sub
pop
or
xchg
inc
push
test
stos
les
push
sub
stc
mov
adc
mov
mov
aas
mov
cmp
and
repz
push
push
sub
mov
push
inc
mov
js
fstpl
mov
push
add
pop
fwait
push
mov
inc
or
es
mov
lahf
dec
mov
mov
fcomip
ds
mov
fdivrp
cmp
adc
cmpsb
psadbw
lahf
jl
pop
lcall
lock
sbb
mov
lret
data16
je
movsb
mov
lahf
nop
sbb
mov
push
adc
sbb
mov
adc
inc
iret
xor
ljmp
adc
inc
jo
or
mov
fisttps
inc
jbe
xor
insl
std
icebp
adc
xorb
inc
push
ds
in
jo
adcb
dec
test
push
inc
mov
outsl
fwait
outsb
mov
cmp
dec
xor
inc
mov
mov
mov
sbb
xchg
cld
pop
push
push
push
or
orl
loope
xorl
inc
lret
mov
inc
test
fisttpll
sub
rclb
xchg
test
add
jb
hlt
rorl
mov
mov
mov
xchg
pop
ror
push
sub
scas
pop
cltd
add
mul
sbb
fwait
stc
push
and
mov
xlat
lea
loop
pusha
scas
clc
addr16
lea
stc
dec
mov
cli
jne
jge
ds
lods
jnp
std
or
add
cmp
outsb
or
loop
loop
lock
xchg
sub
push
ja
or
inc
fwait
rolb
imul
and
adc
dec
sbb
cmp
mov
aaa
mov
xchg
mov
sub
test
aad
loope
lods
clc
adc
dec
and
cld
mov
stos
ljmp
pop
xor
inc
add
push
clc
mov
dec
push
fcomp
pop
and
jo
sbb
arpl
sub
clc
jmp
ret
dec
add
push
xor
fwait
sub
mov
dec
movsb
xchg
push
xchg
mov
and
push
mov
clc
mov
inc
in
pop
gs
dec
decl
les
jl
xchg
push
or
xor
jo
jmp
stc
movsb
enter
inc
jns
in
icebp
lds
inc
add
mov
mov
outsb
loope
mov
jecxz
loopne
push
pop
jo
das
ud0
mov
xor
xchg
cmc
jl
adc
push
or
dec
sbb
jg
jmp
cmp
cmp
push
push
clc
in
mov
add
add
pop
mov
pop
outsb
fsubs
in
push
cmp
cli
test
mov
push
push
mov
aaa
inc
std
sbb
stos
je
pop
sbb
data16
scas
mov
cli
pop
sbb
xchg
orl
test
sub
adc
add
mov
mov
xchg
push
jl
ja
add
out
inc
cmpl
push
dec
xor
mov
popf
push
sbb
mov
sbb
lret
mov
adc
shlb
or
lcall
lcall
dec
add
stos
sbb
ljmp
dec
cmp
cmp
cmp
cmp
pushf
out
nop
int
cmp
jne
stc
or
out
push
int3
mov
rcll
add
out
aad
dec
xor
adcl
ljmp
push
add
call
stc
rorl
mov
ret
fs
adc
cvtps2pd
dec
mov
arpl
testb
clc
pop
push
scas
ss
insb
ja
and
push
shrb
push
cmpsl
iret
scas
pop
hlt
push
mov
dec
in
popf
clc
xchg
mov
fdivrl
and
cwtl
jg
fs
sbb
or
rorl
std
movsl
push
adc
outsb
cmp
aaa
jl
ljmp
mov
pop
mov
call
xor
das
adc
jle
pop
push
aas
adc
icebp
ret
movsb
push
repz
adc
call
ficoml
sbb
inc
xor
insb
js
cmpsb
js
outsb
mov
in
fstl
cmpsl
and
xchg
add
test
jp
cmp
shufps
scas
jno
or
imul
aas
rorl
adc
or
dec
ja
lret
stc
ss
stos
movsb
dec
fsubr
inc
int3
fsubrp
scas
pop
lds
mov
cmpsl
push
mov
jne
and
stos
push
lahf
cmp
addb
fnstenv
lods
int3
out
loopne
jl
lahf
dec
cmp
inc
outsl
lfs
dec
aad
mov
inc
aaa
inc
mul
out
jl
enter
push
push
mov
js
jmp
cmp
outsb
sbb
adc
dec
mov
cmpsb
scas
cli
cmpsb
mov
push
mov
adc
xor
cli
sub
xor
mov
int3
adc
repnz
or
and
aam
jnp
insb
cmp
xchg
fsubs
push
dec
push
xchg
lds
mov
shlb
test
aam
push
in
xor
xchg
pushf
xchg
sarb
adc
scas
push
or
jmp
ljmp
cld
pop
xor
fiaddl
sbb
pop
xor
rcrb
pop
and
jge
cmpb
adc
call
sbb
jnp
adc
mov
sub
pop
sub
push
daa
mov
adc
andb
add
push
movsl
mov
dec
dec
mov
nop
imull
push
aad
inc
jmp
mov
fcompl
inc
adc
out
bound
pop
jne
push
insb
decb
jno,pn
adc
push
mov
jb
push
lcall
in
outsb
cmp
xchg
daa
push
lods
cmp
ret
and
repnz
jge
sbb
or
cmp
out
cmpsb
add
sub
fdivs
dec
iret
lret
adc
jbe
mov
inc
sbb
adc
sbbl
jg
cmp
or
jbe
dec
lcall
or
adc
jle
cli
jno
pusha
xor
sbb
sub
ss
fs
stos
das
data16
aaa
adcl
sub
ds
fadd
dec
pop
sbb
clc
mov
cwtl
loop
pop
xchg
daa
mov
mov
or
dec
sbb
stos
incb
push
aam
out
fwait
mov
sbb
dec
and
js
call
or
addr16
mov
dec
mov
testl
rcr
jbe
cmp
push
cmp
xor
enter
add
das
pop
jp
fs
lds
inc
jne
sub
dec
inc
divb
push
hlt
pushf
out
cmp
and
iret
cwtl
inc
adc
inc
jmp
jp,pn
mov
data16
jp
test
jp
sbb
outsl
sub
lods
dec
add
jmp
pop
cs
imul
ds
mov
imul
call
inc
fmuls
loope
pmulhw
ret
loopne
push
stc
lods
out
mov
clc
cmpsl
cmp
jnp
cmp
out
cwtl
push
rorl
sub
or
aaa
inc
rolb
pop
xor
dec
and
out
inc
or
and
mov
dec
xorb
pop
movsb
fimuls
lret
sahf
bound
ljmp
push
repnz
arpl
xor
pop
dec
fwait
dec
shrl
cmp
leave
mov
add
mov
push
push
mov
lock
call
mov
add
js
jle
js
add
outsl
and
das
cmc
adc
ljmp
cmpb
push
xchg
shrl
xchg
adc
xchg
mov
fsts
sar
push
add
adc
mov
shl
adc
aam
mov
push
mov
mov
outsb
sub
ds
cmp
out
dec
lock
push
fs
dec
and
pop
out
xchg
mov
out
or
jns
es
das
out
sub
faddl
cmpsl
lea
scas
sub
xchg
nop
shl
insb
inc
or
aam
push
and
repz
pop
loop
xor
lea
cmp
cmc
fldt
cmc
sbb
mov
insb
xchg
std
xor
pop
mov
push
pop
insl
shrb
jns
or
cld
loopne
xor
mov
aaa
je
cltd
sahf
adc
dec
or
dec
jnp
pop
stos
jne
aam
decl
repnz
aad
add
mov
adc
xchg
add
ss
cli
mov
pusha
dec
imulb
test
pop
ret
jge
inc
inc
aas
icebp
rcl
pop
dec
push
jb
and
mov
pop
data16
hlt
call
aad
sbb
adc
orb
mov
mov
add
negb
mov
nop
lahf
imul
adc
cwtl
cmp
dec
mov
aas
popa
outsl
mov
out
push
dec
repz
stos
cmpsl
mov
mov
in
pop
rorl
fiaddl
cmp
lea
fmul
sahf
ret
loopne
js
shlb
mov
test
movsl
pop
jge
xor
sar
popf
add
inc
pop
es
lret
add
xor
imul
or
call
ja
mov
lods
xchg
dec
mov
pop
addl
pop
dec
and
test
and
scas
mov
in
cmp
push
mov
jo
rcr
out
mov
push
mov
jne
jo
pusha
sub
jg
cwtl
pop
leave
daa
insb
dec
jno
mov
icebp
add
mov
iret
xor
mov
sub
push
jbe
fcmovu
pushl
hlt
add
sub
insl
clc
sbb
je
mov
out
cmp
lock
pop
mov
add
add
sbb
sub
hlt
mov
outsl
pushf
mov
push
or
sub
ljmp
jns
add
xchg
rcl
jo
cmp
add
pop
pusha
jnp
lcall
inc
cwtl
xchg
mov
mov
adc
mov
dec
and
jecxz
jno
cld
and
loopne
sub
mov
inc
cmpsl
and
adc
test
push
adc
pushf
pop
insb
roll
aaa
test
inc
aad
icebp
repz
ret
mov
lahf
je
sbb
stos
rcl
in
cmp
add
fildl
mov
push
test
pop
pop
fnsave
frstor
aas
jg
js
out
out
pop
pop
sbb
mov
add
sbb
std
mov
cmp
movsl
push
push
adc
bound
insl
std
mov
popf
dec
cwtl
inc
je
loope
push
push
xor
inc
mov
inc
jns
mov
loopne
cltd
rorl
aam
and
out
aas
cwtl
mov
clc
mov
mov
leave
pop
sbb
jno
mov
dec
loope
add
insb
sub
or
and
outsl
mov
mov
inc
jne
push
shrb
sbb
rorb
test
mov
inc
add
rorl
pop
adc
cwtl
scas
out
sarb
push
jno
and
adc
pusha
cmpsl
aam
dec
xchg
popa
mov
data16
push
mov
dec
jp
arpl
jns
loopne
movl
cmc
mov
dec
inc
stos
js
jl
push
dec
pop
xorl
mov
and
xor
pop
jge
lea
shrd
rorb
dec
pop
fsubr
jle
and
movsb
repz
sarb
sbb
and
add
or
cmp
es
lea
mov
das
cmp
loopnew
and
mov
daa
loopne
ljmp
fst
pop
sub
nop
mov
pop
imul
shll
mov
fisttps
seta
lock
popf
mov
cltd
insl
pop
stc
das
pusha
lds
test
inc
dec
sarb
pop
pop
cld
push
fsubrl
mov
cwtl
pop
cmpsb
pop
jecxz
sbb
dec
and
fstl
inc
and
adc
aam
jmp
sbb
lock
mov
repz
cmpb
movsb
xchg
add
pop
popf
xchg
das
add
xchg
adc
dec
orb
mov
or
in
orl
popf
add
lock
fmull
inc
add
jl
jno
sub
aam
lds
mov
mov
loope
cltd
pop
xchg
push
dec
push
xchg
mov
idivb
jmp
jp
adc
iret
cmp
je
sub
pop
sub
out
sbb
adc
das
and
aaa
adc
lret
outsl
jb
jge
sub
aas
push
js
mov
or
les
push
xor
lds
rclb
fwait
sbb
add
movsb
clc
movsl
gs
mov
popa
loop
pop
ss
lods
jnp
pop
xchg
sbb
pop
lret
inc
aad
in
and
imul
ret
out
push
dec
push
ss
sub
jle
movsb
and
mov
mov
loope
xchg
jp
bound
or
inc
xor
pushf
js
add
into
xchg
adc
popa
or
adc
mov
xor
sbb
inc
dec
nop
dec
xlat
in
test
test
decl
fs
jbe
push
push
cmpsb
loop
mov
fildl
push
roll
and
dec
sar
stc
or
test
mov
mov
aam
pop
or
pusha
add
js
ljmp
pop
in
or
xchg
fmuls
loopne
mov
mov
or
mov
loope
std
sbb
fiaddl
jbe
or
mov
mov
inc
js
icebp
add
xchg
pushf
test
gs
inc
cld
sti
add
jns
aam
xor
dec
sbb
lea
cmc
push
push
jns
sbb
aaa
test
mov
mov
push
addr16
sub
and
test
adc
pop
push
add
mov
jmp
inc
mov
or
dec
pop
mov
xor
cmp
push
lahf
imul
lret
or
into
pop
or
pop
jle
arpl
sub
xchg
insb
jno
ljmp
and
sub
push
sbb
pop
inc
cmp
addl
out
dec
dec
inc
jo
loopne
js
sahf
pop
in
mov
fidivl
jns
mov
cmp
fucom
jae
push
or
xor
sub
mov
sub
lahf
stos
inc
jp
clc
imul
mov
fs
ljmp
xchg
pop
cmp
inc
int
sbb
or
std
mov
cmp
inc
jg
insb
pop
cmp
cmp
jg
in
push
shl
and
mov
push
push
leave
sbb
fs
ret
or
mov
shlb
fdivs
dec
jne
cmp
or
pop
adc
add
mov
xchg
ds
mov
les
jne
xchg
mov
cli
movl
sbb
roll
mov
adc
jle
cld
repz
sub
and
stos
arpl
mov
out
loopne
adc
mov
jnp,pn
push
sbb
inc
arpl
jnp
cmpsb
aad
call
inc
cmp
arpl
adc
stos
repnz
xor
lds
dec
clc
add
cmp
push
add
mov
xlat
add
pop
add
cmp
inc
push
lods
dec
lret
mov
outsl
cmp
decb
and
test
cld
mov
sbb
lods
adc
cmpb
sub
and
xor
sub
adc
cmp
mov
sub
int3
rorb
data16
outsl
dec
cld
jb
and
cmp
test
ljmp
imul
loope
daa
pushf
sbb
dec
dec
cli
pop
cwtl
or
pop
int
cltd
cmpsb
or
push
fdivrs
jb
or
lock
ss
popa
ficoml
push
shrl
mov
test
adc
pushf
jg
xchg
lahf
dec
mov
jl
dec
lock
sub
inc
xchg
scas
dec
push
mov
sub
lahf
xor
or
push
in
test
js
or
stc
mov
call
scas
and
nopl
dec
xchg
cmp
out
sbb
add
push
or
or
rcl
add
icebp
or
cld
test
filds
jo
fwait
jne
je
aam
sbb
pop
std
sbb
or
inc
mov
or
push
pop
mov
stos
mov
lea
ret
cmp
adc
jnp
mov
out
xchg
repnz
push
test
stc
pop
mov
pusha
mov
rcrb
mov
pop
xchg
jo
mov
lcall
sbb
push
jmp
lahf
aam
jge
inc
lods
add
das
rol
jne
rcrl
test
stos
ficoml
push
sbbl
dec
fwait
js
es
incb
push
mov
inc
or
xor
adc
out
rcl
loopne
pop
push
and
pop
and
xor
mov
xor
jmp
sbb
mov
adc
das
sbb
mov
jno
cmp
mov
stos
mov
rolb
or
jl
cli
push
fdivp
add
sahf
dec
push
loop
or
es
nop
mov
pushf
or
jl
or
js
pop
fsubrs
cmc
movsb
test
jecxz
imul
aam
sub
pop
cmp
xor
xchg
test
or
xor
fsubs
xchg
addb
or
jne
mov
rorb
mov
and
pop
je
arpl
out
or
leave
add
fistpl
and
push
dec
ficomps
ret
push
jbe
mov
test
mov
out
ja
out
scas
add
cltd
mov
and
lret
rcrl
push
cmp
ret
dec
stc
jle
jmp
cmpb
fwait
and
clc
adc
decl
nop
mov
lock
adc
jl
pop
andb
cmpb
aam
mov
fisttpl
cmpsb
js
push
enter
daa
push
mov
lods
sub
pop
js
mov
and
inc
xchg
push
adc
fsts
sbb
inc
cwtl
aaa
fcmovne
push
rcll
push
xchg
and
xor
push
das
scas
in
fmul
dec
dec
or
and
cmpsl
test
pushf
insl
lock
daa
loope
add
sub
adc
sub
sbb
inc
mov
mov
mov
pop
fldcw
int3
pushf
lahf
sub
fldcw
fidivl
inc
gs
mov
mov
push
mov
cmp
lahf
incb
mov
out
xor
cmp
das
xor
xlat
push
popf
call
xor
in
jmp
adc
loopne
sub
dec
xor
fcmovb
push
aad
cmc
mov
jmp
pop
adc
add
stos
ffree
xchg
ljmp
and
jg
jl
pop
mov
divl
cmp
das
inc
jbe
popa
sub
sbb
inc
ljmp
out
and
or
leave
cmp
inc
push
aas
and
jns
test
add
fs
sub
dec
pop
push
movsb
stos
std
cwtl
push
fdivrs
popf
sbb
xchg
test
mov
or
movsl
fs
add
int
mov
mov
popa
sbb
mov
mov
es
push
inc
cltd
clc
popa
cld
mov
jp
dec
push
je
inc
push
cmpsb
dec
pusha
or
jmp
or
jo
xchg
adc
loopne
stc
mov
push
decb
lahf
pop
repz
dec
sub
test
fidivrs
inc
ret
add
mov
jae
insb
cmp
std
les
push
dec
xlat
nop
jbe
iret
xlat
or
jmp
scas
aam
and
or
das
jb,pn
test
ret
sub
gs
inc
jl
dec
pop
mov
fisubs
int3
es
mov
cli
pop
mov
mov
and
repnz
test
insl
stos
pop
subb
push
jae
sahf
arpl
push
add
call
pop
jno
and
shlb
add
pop
f2xm1
pop
inc
xchg
fstps
and
add
add
dec
push
clc
pop
pop
dec
inc
scas
popf
iret
push
jl
xchg
jns
popa
dec
jg
lods
rcrb
gs
fisttps
mov
sbb
cld
test
mov
add
jl
sbb
add
ret
push
fistl
inc
lock
pop
dec
dec
shlb
verw
xchg
pop
sbb
push
mov
mov
or
adc
aad
sbb
pusha
ret
sbb
addb
jo
sub
lcall
pop
push
xchg
insl
adc
ds
shlb
or
jno
loopne
cwtl
push
enter
and
ss
sub
inc
mov
lret
cmp
or
stos
rcll
lret
sub
aad
rcr
mov
add
inc
loopne
adc
sbb
and
sbb
pushf
xchg
into
xchg
jnp
mov
dec
sarl
add
and
mov
push
pop
xor
popa
insl
xchg
dec
mov
lods
sub
test
push
lret
pop
cmp
inc
pop
xchg
sbb
jae
lods
add
lods
pushl
jne
add
mov
inc
lea
pop
addl
pop
dec
loop
push
mov
lret
jae
mov
push
ret
lret
ret
push
test
jecxz
mov
ss
rcl
mov
and
and
std
push
dec
xchg
and
push
mov
jp
inc
dec
sub
idiv
jns
shll
les
inc
jle
call
adc
pop
add
and
pop
je
xchg
cmp
xchg
aas
mov
or
sub
mov
bound
arpl
gs
lock
sti
add
inc
cmp
shl
stos
addl
dec
sub
push
and
das
shr
inc
test
std
cld
push
loop
clc
jnp
mov
jbe
bound
and
fildll
repz
jecxz
add
or
mov
adc
jb
dec
xlat
mov
dec
fbstp
push
jmp
xchg
mov
fdivl
sti
dec
imul
jae
or
ljmp
push
pusha
jmp
jge
add
and
into
add
ljmp
push
push
xchg
sub
dec
push
cli
mov
jmp
outsb
inc
lock
xor
sub
inc
sbb
mov
push
dec
xor
rcll
hlt
add
push
pushl
xchg
pop
mov
jne
mov
popf
scas
sbb
jmp
test
daa
push
popa
cmp
add
mov
xchg
xchg
jp
sub
lahf
jmp
andl
xchg
xchg
pop
mov
lock
in
fidivrs
lret
adc
pop
mov
sub
inc
fwait
mulb
and
shlb
pop
pop
jo
mov
inc
pop
pop
ret
mulb
push
sbb
stc
sub
pop
inc
xorb
inc
shr
fnstcw
aaa
dec
pop
or
ja
shll
push
fildll
std
or
js
fwait
loop
movb
cmpsl
loope
pop
or
pop
test
lahf
xor
imul
mov
cmp
ljmp
add
cli
mov
and
jne
inc
mov
hlt
stos
xor
xor
inc
daa
outsb
clc
add
repz
lds
or
scas
xor
loop
orb
mov
xor
ja
adc
loop
adc
rclb
fs
push
add
popf
inc
mov
sub
pop
xor
cld
sub
push
pop
adc
and
daa
dec
xchg
add
inc
dec
fldt
sbb
fs
and
xchg
push
rolb
mov
or
push
cld
nop
jbe
and
cmp
divb
sbb
ja
popa
and
hlt
push
ret
pushf
movsl
std
jg
ret
inc
xchg
mov
aas
sbb
add
fs
fcoml
mov
dec
xchg
data16
or
cltd
jl
xchg
dec
ds
std
mov
fwait
dec
dec
or
sar
stos
add
loopne
hlt
sub
push
bt
out
bound
rcrl
out
adc
mov
pop
mov
add
lods
je
cmp
add
adc
call
xor
jae
mov
cmp
xchg
int3
adc
inc
mov
inc
scas
ja
push
pop
adc
das
cltd
pop
rorb
movl
ss
pop
jge
dec
sub
imul
les
jne
fldenv
mov
lret
mov
lcall
daa
sub
sbb
adc
movsl
cwtl
out
rcll
stos
xchg
js
f2xm1
insb
xor
pop
or
test
fldcw
lret
orb
xchg
sbb
pop
sbb
loope
lea
xchg
stos
mov
jns
cli
jae
adc
adc
push
inc
ljmp
pop
sbb
cs
pop
and
popa
pop
lret
pcmpeqd
loope
push
adc
stos
mov
jnp
mov
pop
sbb
ljmp
orb
out
sbb
pop
pop
data16
clc
outsl
sbb
lds
xchg
push
lret
fabs
fmull
ljmp
lcall
inc
pop
pusha
or
sarl
add
mov
inc
or
repnz
gs
jge
inc
cmp
in
jp
lods
sbb
repnz
or
shlb
or
ja
roll
aad
add
mov
stos
add
dec
outsb
xor
filds
les
add
or
lahf
and
add
ljmp
aam
cs
sbb
ret
push
ret
movsl
nop
mov
xchg
in
lods
jg
leave
xchg
jmp
mov
daa
jnp
xor
adc
stc
dec
mov
push
mov
daa
clc
push
mov
mov
jp
int3
notl
hlt
inc
pushf
cmp
es
into
jge
int3
xchg
scas
std
xor
test
adc
or
and
xchg
hlt
lret
inc
test
fistl
sarb
icebp
mov
dec
adc
out
js
in
test
pop
cmp
xchg
pop
mov
iret
pushf
sub
jle
or
mov
sbb
insl
test
inc
sbb
aam
ds
xchg
xchg
cwtl
push
ljmp
pop
insb
mov
addb
sbb
and
push
sub
push
xchg
fiaddl
sub
int
jg
out
jno
cwtl
xor
ret
test
cli
pop
or
push
mov
in
lret
jge
push
and
popf
cmp
pop
jmp
rorl
sarb
lea
push
rcrb
add
and
test
inc
rcr
mov
cwtl
ret
adc
enter
loop
mov
in
neg
pop
xchg
ss
nop
and
pop
sub
jns
loop
pop
jp
jbe
outsb
fisttpll
sub
ds
add
nop
sub
mov
hlt
mov
insb
test
jb
lea
cmp
or
inc
in
mov
pop
dec
dec
pop
xor
adc
lock
pop
mov
and
adc
and
aaa
jecxz
push
inc
push
or
roll
in
lea
pop
push
ja
lahf
leave
clc
cmp
add
jg
xchg
push
sub
ret
inc
insl
adc
adc
rcrl
or
jg
push
sub
adc
ss
aas
fldl
mov
call
push
jae
out
push
xlat
subb
divb
xorl
push
jg
dec
mov
adc
mov
movsl
or
xlat
xchg
mov
inc
cmp
sub
pop
mov
aam
or
inc
jno
rcl
and
in
dec
icebp
daa
xchg
and
mov
iret
data16
js
enter
lcall
movhps
xchg
aas
arpl
mov
push
sbb
ljmp
bound
sti
push
les
mov
dec
xor
mov
mov
or
mov
popl
ret
mov
push
push
or
push
xchg
lea
pop
add
cld
call
jns
adc
movsl
insb
push
imul
xor
adc
add
dec
lcall
sar
push
mov
sbb
les
and
cli
inc
adc
xor
xor
pushf
mov
or
pusha
ss
decb
cwtl
push
mov
into
push
adc
adc
lret
lahf
jle
jbe
pop
sbb
inc
movb
inc
ljmp
les
lahf
pop
in
test
xor
xor
xlat
dec
loope
out
xorb
ds
fs
js
aad
xchg
outsb
push
shl
out
add
pop
aaa
cltd
jne
lret
push
xchg
inc
add
xchg
arpl
xchg
sub
lea
mov
inc
addr16
push
add
sub
inc
aas
mov
sbb
add
cwtl
pop
push
sti
sub
out
sub
inc
in
inc
cmp
aam
mov
cmp
sub
cmc
lret
out
add
push
jb
push
sub
test
mov
lcall
cld
adc
xor
mov
sbb
loopne
ficoms
sub
mov
or
or
dec
mov
sub
scas
test
dec
fsubp
or
fsts
inc
or
ret
adc
xchg
cmp
mov
add
loope
sbb
push
out
inc
cmp
mov
inc
push
popf
pop
add
icebp
add
xchg
dec
mov
pop
and
lret
cmp
das
loop
in
pop
jg
push
out
mov
adc
out
test
aas
roll
nop
push
stos
ret
push
test
lcall
jbe
mov
fisttps
xchg
rsqrtps
out
nop
inc
test
ret
int
add
int3
or
shlb
mov
cmp
cmp
sahf
push
or
dec
test
and
add
jns
mov
sbb
pusha
mov
and
and
outsb
loop
mov
cmpsb
push
jns
jo
cmp
mov
fisttps
iret
dec
icebp
pushf
pushf
xchg
jmp
popa
enter
xor
sub
mov
or
shlb
sbb
pop
les
jp
cld
or
out
sbb
cmp
call
add
movsl
mov
inc
mov
or
test
cmp
mov
xor
jmp
xor
lret
add
sarb
sub
or
rclb
and
jle
mov
rclb
mov
pop
cmpl
mov
and
mov
lret
jmp
stos
shll
call
mov
cs
xchg
sbb
pop
cli
mov
or
leave
xchg
inc
and
add
scas
ja
inc
mov
loope
ret
rclb
lret
or
fidivrl
sbb
in
ret
imul
xchg
daa
ret
les
inc
loop
adc
lcall
mov
cld
out
testb
mov
and
jae
ror
inc
cmc
arpl
scas
pop
mov
dec
fnstcw
fwait
or
jmp
xchg
push
dec
sub
or
push
inc
dec
dec
icebp
cmp
inc
cmp
ss
fmull
pop
and
std
mov
ds
adc
lock
jne
andb
pop
or
xor
cmc
cmp
cmpsb
clc
xchg
in
push
inc
mov
insb
sub
push
adc
jb
cltd
xchg
add
out
rcll
or
push
sub
dec
mov
test
rorl
lock
xchg
xor
push
mov
and
inc
cld
adc
inc
xor
js
mov
fsubrs
push
es
cmp
pop
mov
sbb
sbb
loop
or
addr16
push
aaa
cmp
daa
add
mov
lret
push
push
jp
arpl
popf
pop
and
xchg
js
or
pop
cmp
sti
mov
lret
popa
mov
inc
pop
jmp
cmpl
mov
inc
call
fadds
adc
mov
pusha
insb
push
sbb
call
dec
xor
test
dec
or
mov
rcrl
mov
out
pusha
xor
mov
iret
sbb
ljmp
pop
jge
mov
fcoms
xchg
ja
int3
sarb
inc
xor
add
pop
pop
ret
sub
out
ret
xchg
jne
loopne
dec
gs
cld
pop
out
mov
adc
xchg
mov
out
xor
popl
pop
pusha
or
aad
sbb
add
lods
pop
jecxz
mov
add
data16
fwait
popa
xchg
xchg
sub
test
fmull
in
test
or
bound
pop
sbb
push
pusha
cmpsl
inc
roll
out
push
cmp
sbb
cmp
mov
inc
ljmp
ljmp
adcb
pop
sub
popf
js,pt
push
cmp
jmp
out
lods
xor
lret
dec
sub
jae
addr16
push
mov
mov
and
pop
jmp
jmp
js
cmp
xchg
gs
imul
xor
xor
xchg
fidivs
lret
xor
push
pop
mov
jb
ss
dec
mov
push
repz
out
daa
movsb
mov
cmovb
adc
iret
dec
incl
mov
out
mov
or
inc
xor
dec
add
aad
xchg
iret
loop
push
int3
dec
popf
dec
test
mov
and
or
sbb
fld
dec
and
ja
jg
ljmp
add
fsubrs
shlb
andb
cmp
es
adc
pop
add
jmp
ret
pop
pop
pop
jo
clc
loop
stc
sub
mulb
ds
clc
ds
or
or
ljmp
mov
mov
mov
xchg
ds
cli
sar
fcomi
jnp
jns
rcl
or
fnsave
loope
push
pop
dec
push
mov
adc
jg
imul
aam
sub
mov
push
and
mov
mov
push
add
das
cmp
adc
sub
ficoms
lcall
int3
dec
push
test
clc
sub
and
cld
push
jnp
cmp
rorb
cmp
outsl
push
jmp
jp
push
adc
cld
ror
in
mov
add
or
mul
sub
movnti
jb
cmpsb
pop
sbb
movsb
jl
fsubs
rol
fisttpl
ds
roll
pop
test
and
cli
roll
fldt
sbb
sub
cmp
or
pop
jno
pop
xlat
add
loopne
cmp
mov
add
or
call
pop
mov
jb
adc
add
daa
pop
push
pop
pop
fdiv
stos
test
imul
dec
pop
and
std
les
adc
inc
jb
pop
scas
cmp
push
rorl
mov
mov
aam
int3
push
aas
les
xchg
int3
inc
cld
mov
ret
fwait
xchg
pop
adc
dec
call
xlat
loop
mov
adc
mov
and
je
test
inc
scas
or
mov
repz
les
lcall
pop
jmp
lods
pop
pop
enter
enter
aad
mov
bound
test
mov
pop
jbe
mov
pushf
ja
jb
mov
addr16
scas
pop
sub
mov
sub
pop
cmp
out
in
jl
add
or
scas
xchg
sub
or
or
adc
and
loope
sbb
add
ss
mov
ret
add
mov
call
inc
inc
mov
sti
pushf
mov
loopne
jge
insl
push
shlb
pop
fistl
mov
push
dec
sbb
test
cs
imul
data16
and
push
push
mulb
scas
mov
jbe
mov
pop
lahf
xor
ljmp
cs
mov
shll
mov
or
pop
jge
mov
mov
xor
insb
jge
mov
insl
jne
ja
enter
in
mov
xchg
in
es
ja
mov
cld
icebp
lahf
shlb
outsb
mov
cltd
arpl
call
enter
jno
jae
icebp
or
shrl
jbe
cli
pop
fcomps
fimull
sub
ja
push
mov
mov
inc
loope
je
push
add
sbb
push
loopne
and
inc
dec
movsl
jmp
jmp
icebp
loopne
ljmp
nop
fs
inc
add
test
cmc
push
xor
jo
sbb
popa
adcl
inc
ljmp
sbb
cltd
jns
sbb
jecxz
jle
movsb
fwait
sbb
es
leave
in
xchg
xchg
push
loopne
pop
pop
je
das
sbb
cmp
call
fcompl
loopw
mov
mov
xchg
cmp
pop
insb
lock
lahf
xor
daa
unpcklps
movsb
incb
scas
adc
cltd
dec
loop
loope
in
sub
xchg
mov
leave
jno
insb
mov
aaa
outsb
lock
sub
fldenv
int3
idivl
loope
enter
bound
pusha
push
fistl
and
orb
loop
mov
movsl
mov
pop
sbb
add
out
jecxz
loopne
jns
outsb
aam
cli
add
xor
xor
xchg
data16
lock
sub
ret
xchg
into
in
stos
add
dec
jle
or
lret
add
xchg
push
js
lret
xor
inc
sub
xchg
test
repnz
lahf
pop
fidivs
and
sub
push
shlb
mov
js
pop
mov
lret
xchg
lods
movsb
inc
iret
or
dec
jo
fdivrp
repnz
jne
hlt
adc
sub
mov
rclb
mov
gs
add
stos
inc
mov
or
inc
mov
mov
push
enter
jp
cmpsl
sub
pushf
push
ror
clc
hlt
lods
incl
repz
mov
loop
fiaddl
loopne
sbb
push
and
sbb
push
dec
movsl
sub
jg
fs
hlt
mov
or
mov
adc
add
cmp
push
pop
shlb
fdivs
inc
cs
psubsb
rcrb
mov
sbb
test
mov
add
es
xor
xchg
or
push
leave
dec
xchg
jp
push
test
aam
push
pop
dec
arpl
icebp
or
clc
and
loop
orb
dec
movsb
or
addb
jns
push
jg
mov
ljmp
movsb
inc
stos
sub
fcomi
pop
xlat
or
in
daa
loope
push
nop
mov
push
subl
pop
sub
scas
icebp
dec
push
inc
sub
pop
dec
and
fstpl
out
orl
sbb
sub
cmpsb
repnz
movsb
dec
push
mov
mov
add
cld
xor
rcr
shll
dec
mov
sahf
shrl
nop
mov
pop
pusha
addl
lahf
cmp
movsb
icebp
pop
sti
clc
repz
out
or
adc
mov
mov
dec
stos
add
push
jmp
loope
push
xor
ds
rorl
out
popf
lods
bound
pop
mov
adc
jle
or
dec
mov
sbb
lds
aam
cwtl
inc
int
js
sub
jge
aas
test
or
or
call
clc
and
xchg
daa
repnz
mov
jle
pop
push
mov
imul
adc
cwtl
adc
loope
dec
add
ret
xchg
ret
fucomip
leave
aas
inc
add
xor
dec
or
mov
jle
dec
mov
inc
or
js
orl
fwait
add
mov
inc
pop
aad
mov
push
movsl
or
mov
popf
rclb
lret
jb
cmp
mov
testl
add
cld
jmp
xor
or
mov
movd
arpl
jl
insl
aas
stos
lock
add
cmp
jno
fs
imul
sub
shl
es
loopne
ret
jne
and
pop
xor
and
mov
and
andb
adc
xlat
mov
and
inc
xchg
jmp
imul
les
cmp
add
xor
test
cmc
aad
dec
sti
jmp
xchg
sub
inc
jge
push
cs
xorb
xlat
xchg
filds
imulb
aam
inc
pop
jle
popf
and
dec
mov
mov
repnz
and
test
mov
loopne
lret
pop
or
xchg
test
and
fs
adc
test
xorb
xchg
ljmp
and
add
sbb
bswap
aam
stos
ret
or
adc
decb
cli
inc
lea
cmp
cwtl
sti
push
insb
call
jo
int
pop
or
aad
cmp
inc
mov
add
jp
aam
pop
pop
pop
xchg
or
adc
adc
mov
cmpsl
add
push
mov
rclb
add
add
adc
or
mov
adc
cmp
sub
sub
loop
mov
sub
or
jmp
clc
jge
and
test
subl
aas
rclb
inc
rolb
mov
xlat
sbb
mov
int3
or
pop
scas
push
mov
xlat
xchg
ficoml
sbb
dec
flds
and
test
hlt
fdivl
and
xor
ror
fidivs
addl
cmp
lahf
or
orb
lock
fsubrl
gs
and
sar
mov
and
and
loopne
gs
daa
hlt
xlat
popa
push
jb
and
flds
imul
dec
pop
iret
xor
aam
cwtl
push
fsubrs
adc
imul
addr16
mov
lret
aas
lret
movl
gs
jno
sub
scas
adc
loop
xchg
jae
ss
xor
cmpsl
cs
adc
cltd
scas
sahf
jecxz
sbb
fwait
xlat
mov
int
xchg
stc
insb
dec
xchg
mov
xchg
push
outsl
inc
and
adc
addl
std
mov
and
movsl
jle
stos
pop
xchg
sub
mov
mov
test
inc
dec
adc
lret
jns
out
test
pop
push
xlat
add
or
xchg
js
xchg
add
das
jne
fsubs
dec
push
jo
pop
call
and
cmpsb
mov
sbb
jmp
sub
mov
dec
mov
leave
into
xor
sub
icebp
xchg
or
mov
cmp
loop
int3
pop
repnz
rcr
hlt
es
push
mov
and
movsl
mov
mov
sub
mov
pop
inc
leave
ficompl
lcall
push
adc
adc
adc
add
cld
leave
mov
jb
fs
ret
sub
inc
repz
add
or
dec
or
lods
nop
and
push
repz
xor
ret
stos
aad
sbb
xlat
push
sub
inc
inc
jno
adc
cmp
in
pop
adc
pop
testb
call
outsl
cmpsb
sahf
leave
mov
fildll
mov
shlb
scas
or
inc
gs
js
gs
xabort
mov
xchg
fisttpll
push
int
and
push
xor
ret
xchg
add
jl
xor
adcb
push
insl
insl
cld
out
lods
std
insb
icebp
or
pop
mov
inc
add
fmul
scas
mov
mov
sbb
shr
jb
ds
cmp
in
loop
sbb
add
mov
movups
test
pop
and
xor
pop
or
mov
mov
loopne
push
imul
loope
jo
cmp
outsb
ljmp
shll
shlb
sub
jo
sbb
sbb
jo
test
cmp
xor
ja
insl
dec
ficompl
pushf
je
or
ret
ja
sbb
mov
enter
add
dec
dec
test
clc
je
mov
daa
push
std
inc
loope
and
mov
mov
gs
dec
push
inc
aaa
xlat
or
call
adc
daa
mov
cmp
test
xchg
jge
repz
push
pop
je
int3
fs
rcrb
ljmp
adc
xchg
cmp
or
dec
ss
scas
mov
cs
fucom
cltd
in
ret
pop
push
mov
jp
and
stos
cli
and
out
xchg
inc
cld
aad
add
stos
xchg
into
sub
loopne
push
pushf
mov
cwtl
mov
icebp
aas
fcoml
mov
shrb
dec
xor
xor
lahf
pop
aam
mov
push
sub
cmp
inc
out
inc
sarl
jecxz
xor
xchg
cmc
sbb
fdivs
out
es
nop
jmp
add
lock
mov
jno
inc
adc
repnz
sub
xchg
sbb
dec
jle
jmp
pop
repz
lahf
add
or
popf
push
jmp
sbb
andl
mov
faddl
sbb
int
negb
shr
sarb
lcall
push
movsl
lret
inc
xchg
shr
mov
loopne
add
in
sbb
mov
sarb
in
cli
insl
out
outsl
lds
daa
mov
test
imul
pop
aas
cld
jmp
xor
sub
sbb
mov
push
xchg
outsl
push
jmp
stos
sbb
mov
mov
mov
or
mov
xor
sub
movsb
mov
mov
hlt
or
bound
push
push
add
sub
fwait
dec
sti
loope
iret
push
mov
popf
stc
inc
xchg
xchg
add
lret
sbb
adc
add
jp
mov
aas
ljmp
push
in
push
mov
push
pop
popa
mov
mov
xchg
mov
add
imul
dec
fidivl
fcoms
je
and
jge
jno
sbb
pop
loopne
inc
add
or
add
jg
push
imul
dec
mov
dec
mov
stc
mov
mov
nop
mov
aas
pop
gs
jne
push
repz
sub
mov
outsl
sbb
test
jnp
call
add
cltd
lahf
out
mov
mov
dec
les
je
add
mov
push
xchg
xchg
push
fucomip
shll
cltd
in
dec
fsubl
dec
rol
push
push
push
lock
lea
loopne
sub
cmp
ja
pop
pop
inc
das
pop
insb
inc
les
pusha
das
mov
xchg
pushf
sbb
and
jb
subb
fidivrs
sahf
pop
mov
pop
repnz
or
cltd
add
arpl
stc
call
iret
xor
incl
pusha
jne
jmp
adc
sub
dec
cs
pop
cld
test
inc
jl
pop
add
out
sub
jbe
xor
fcmovnb
adcb
lods
xchg
je
rorb
movsl
inc
adc
xchg
lcall
bound
rorb
mov
outsl
loope
mov
jb
add
pusha
mov
mov
xchg
or
adc
mov
cmp
shll
lret
out
loope
enter
scas
cmc
popa
in
jnp
sbb
pop
test
enter
add
loope
ss
fs
push
push
dec
push
test
adc
adc
mov
add
nop
mov
pop
hlt
cmpb
stc
pusha
or
icebp
and
gs
aam
mov
sbb
test
lea
jo
sub
sbb
push
enter
inc
call
cwtl
es
xor
mov
adc
mov
cmp
mov
add
pop
arpl
add
dec
ljmp
cld
push
adc
loope
xor
cli
and
mov
push
jmp
sbb
inc
and
cmp
jmp
into
mov
pop
jge
imul
or
sbb
mov
lahf
dec
xor
sub
inc
adc
ds
xor
pop
mov
inc
movsl
movsb
enter
idiv
mov
pop
inc
and
xor
fcompl
pusha
call
in
dec
ret
lahf
jne
fadds
add
xchg
test
jo
lock
adc
mov
or
xchg
cmp
mov
sbb
sub
cmp
in
js
pushf
pop
movsb
jl
pusha
xchg
mov
iret
cmp
pushf
xchg
scas
and
call
cmp
outsb
add
aas
bound
ret
sub
inc
or
in
ret
in
adc
pavgb
xchg
push
add
call
movsl
bound
pop
push
loopne
int3
cmp
mov
xor
and
cs
push
push
pop
stc
test
add
xorb
clc
movl
out
adc
movsb
sbb
ja
jge
rorl
adc
js
inc
call
mov
push
ss
inc
stos
inc
dec
sbb
push
fwait
popf
dec
jbe
fs
mov
xor
enter
adc
push
jmp
push
in
mov
lock
test
lods
adc
add
in
ret
xchg
sbb
into
jnp,pn
mov
mov
hlt
push
scas
xor
aaa
ljmp
inc
test
sbb
cld
cmp
pop
sbb
out
cmp
cmp
mov
inc
mov
xor
leave
push
or
cld
or
div
test
daa
test
stos
idivb
test
ret
mov
je
lds
call
subb
jo
mov
or
fcoms
dec
sub
pop
push
cld
cmp
add
lock
clc
in
mov
pop
stos
ret
mov
or
insl
repz
dec
clc
and
stos
test
call
lock
ds
or
add
sub
sbb
bound
sbb
cmpsb
pusha
stc
sub
pop
lcall
cmp
dec
mov
dec
out
jmp
add
add
xorb
cltd
cmpsb
or
mov
ret
jge
push
lds
cmp
and
sbb
and
or
jecxz
xchg
or
sub
ror
outsb
nop
xchg
mov
hlt
sub
icebp
imul
jnp
inc
loope
outsb
push
inc
inc
out
hlt
sub
inc
loope
fiadds
das
push
leave
jl
cmp
jae
outsb
xchg
vpcmpgtd
xor
inc
jle
mov
ljmp
das
subb
xchg
dec
popf
popa
mov
fwait
add
add
test
mov
dec
push
cmc
je,pt
jecxz
add
sbb
ret
in
mov
inc
inc
push
pushf
mov
xchg
add
cld
aaa
lahf
pusha
nop
mov
fs
imul
int
lcall
arpl
je
outsl
outsb
je,pn
jb
and
xor
divb
outsl
sub
sbb
out
mov
jns
cs
push
imul
add
inc
gs
out
outsl
fwait
sub
jb
imul
test
mov
xor
imul
mov
imul
lods
inc
jne
push
outsb
out
fbld
rorl
xlat
je
je
jo
outsb
outsw
inc
and
iret
fisubrl
mov
dec
ficoms
insb
fs
dec
fs
jge
or
mov
gs
insl
pop
idivl
cmp
insb
imul
iret
push
lahf
std
popa
ja
gs
std
inc
insb
addr16
lods
push
jo
cld
out
mull
inc
mov
push
lods
jo
dec
insl
popa
xor
aad
xor
daa
add
cmp
push
inc
xorb
mov
sub
jbe
imul
dec
push
jne
mov
inc
xor
and
imul
inc
roll
xor
int3
lock
ja
dec
cli
dec
popf
addr16
mov
popa
test
inc
jbe,pn
cmc
inc
mov
rol
inc
push
pop
dec
jecxz
cld
int
iret
push
inc
add
add
pop
testl
add
test
mov
add
testl
adc
xor
add
adc
mov
mov
sub
notl
movlps
lock
lcall
in
and
cmc
mov
push
xchg
int
stc
into
inc
pop
cmp
mov
test
jne,pn
jo
shl
sbb
jecxz
in
pusha
mov
fiaddl
and
and
mov
cs
add
add
sahf
es
jae
nop
inc
cmp
rcrb
pop
popa
dec
mov
in
in
pop
add
mov
dec
inc
push
dec
cmp
mov
mov
insl
inc
loopne
dec
inc
add
sbb
inc
pusha
sbbb
nop
iret
stc
out
sahf
add
mov
adc
ss
fisubs
add
push
xchg
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
jle
add
inc
