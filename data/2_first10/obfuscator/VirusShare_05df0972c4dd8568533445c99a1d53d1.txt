xchg
add
sub
xchg
sub
pusha
pusha
popa
popa
movl
pusha
pusha
push
xchg
xchg
add
popa
popa
call
inc
inc
jmp
sarb
sbb
ljmp
ret
lds
add
lret
mov
jb
xchg
mov
pop
test
jg
sti
jno
and
nop
test
mov
shrl
mov
cli
test
adc
inc
xlat
test
out
sbb
add
lock
lds
sbb
mov
pop
std
insb
jecxz
test
scas
jbe
fwait
xchg
push
jmp
dec
pop
jl
stos
je
push
inc
mov
repnz
sbbl
jno
fwait
jae
pop
xor
pop
imul
dec
inc
mov
in
push
into
insb
sbb
xlat
xchg
aas
enter
pop
dec
push
mov
in
inc
fnstcw
mov
sub
jne
jp
mov
cmp
or
add
mov
cmpsl
jbe
lock
mov
push
loopne
jecxz
jle
ljmp
cwtl
smsw
stos
xchg
aaa
mov
loopne
js
ljmp
in
fsubs
push
sbb
stos
mov
push
add
lcall
imul
xchg
scas
pop
sbb
jne
cmpsl
sbb
loop
in
push
lds
outsb
in
sbb
es
mov
mov
test
fstpl
and
jge
fbstp
andb
cmp
cld
xchg
and
and
pop
int
stos
popf
mov
xchg
icebp
imul
andl
xor
repz
and
or
xor
rorl
mov
rcrl
push
mov
sbb
leave
jmp
inc
popa
cltd
iret
int3
mov
cmc
in
mov
mulb
dec
and
mov
push
jne
pop
test
xchg
jbe
push
push
add
push
xor
push
pop
lock
sub
cmc
ss
in
xchg
popl
insb
push
push
jmp
scas
fs
xor
leave
call
test
push
fnstcw
pop
or
xor
call
je
mov
enter
pop
jo
aaa
dec
ret
aad
mov
outsb
cwtl
popa
mov
xchg
pop
mov
repnz
test
xchg
or
xchg
fisubs
jg
push
mov
adc
dec
je
cli
xor
rolb
mov
xchg
xor
in
sbb
adc
mov
dec
mov
mov
aas
pop
xor
pop
stos
lods
xchg
fimuls
loopne
cmpsl
es
fldt
fwait
mov
push
leave
insl
and
test
xchg
dec
adc
inc
xor
pop
mov
in
dec
bound
test
xlat
test
ja
mov
sbb
mov
dec
shll
cmp
addr16
ja
sub
shll
test
test
in
scas
add
ds
lods
stc
jae
movsl
mov
mov
jns
and
pop
inc
push
ret
cltd
cmp
sbb
and
xor
pop
cmpsb
notb
loop
adc
pop
stos
dec
rcrl
call
shll
ffreep
mov
int3
add
sub
imul
sub
push
aaa
mov
ss
mov
out
imul
les
mov
xchg
ss
test
inc
out
jle
xor
jae,pn
inc
lods
and
jmp
add
and
popf
cwtl
mov
xor
jns
xchg
test
pop
gs
xorl
lods
mov
ss
jbe
pop
sub
xor
iret
mov
ret
imul
pop
les
jnp
xchg
dec
mov
bound
xchg
das
bound
mov
fisubrl
orb
sub
lods
insl
es
pop
sub
sbb
sti
add
sub
or
pop
xor
mov
scas
mov
pop
add
repnz
out
andl
inc
xor
loope
sbb
mov
arpl
cli
lock
inc
sub
mov
aaa
in
fwait
jg
cmpsb
aaa
mov
push
in
inc
popa
xchg
sub
xchg
dec
and
mov
xor
cmp
rcll
cld
add
mov
jo
xor
lcall
jo,pt
cvtpi2ps
sub
cmp
test
je
shll
pop
out
adc
stos
jg
out
dec
test
lods
fistl
mov
mov
fdivr
push
dec
add
out
jnp
pusha
iret
cwtl
cld
ja
jle
or
dec
cmc
outsl
lahf
call
icebp
in
subb
push
ja
sub
dec
dec
mov
mov
jmp
je
xor
and
mov
imull
lahf
push
cmp
sub
orl
cmp
stc
js
and
adc
and
aaa
inc
test
popf
mov
sbb
adc
das
mov
rclb
pop
pop
xchg
sub
clc
dec
sbb
mov
clc
aam
fcmovne
lret
fidivrs
or
lret
adc
decb
test
and
and
dec
dec
fmuls
xor
inc
ss
lods
inc
mov
subb
ss
dec
pop
and
or
push
push
out
call
imul
scas
or
test
daa
dec
jg
pop
xchg
test
cmc
ds
insl
mov
push
icebp
mov
inc
cmp
lcall
jle
dec
sti
dec
divl
push
pop
push
das
inc
sub
faddl
negl
sbb
and
adc
cli
ror
mov
insb
xchg
xlat
imul
push
movsb
push
in
add
lds
fldl
repz
clc
add
nop
in
pop
ret
dec
insl
jge
jmp
inc
inc
ss
inc
push
fs
fucomip
sarb
mov
push
fcompl
out
shrl
push
iret
stc
jno
mov
mov
mov
out
in
je
jmp
int3
sbb
jo
push
and
inc
xchg
rorl
jge
inc
pop
push
sub
lret
pop
jp
mov
sub
std
adc
leave
xchg
sub
mov
ss
pop
add
in
ljmp
cmp
jge
out
test
movsl
sub
pushf
dec
jbe
xchg
and
nop
cltd
push
jnp
pop
cmp
xor
ljmp
in
sarl
mov
decl
jg
mov
fsubrs
fistpll
ror
mov
dec
xchg
rep
dec
lret
jns
out
int3
sbb
and
inc
call
int
lcall
out
ficoml
hlt
push
mov
cmp
out
cmp
cmpsb
push
pop
jo
imul
cmp
bound
inc
out
mov
push
or
pop
sti
adc
dec
adc
or
fistl
mov
ret
or
mov
ret
sub
mov
mov
mov
xorb
adc
dec
hlt
push
jbe
sub
scas
gs
fdivrs
mov
sub
pop
sub
stos
stc
out
push
out
mov
adc
xchg
sarl
mov
imul
xchg
aas
in
sub
mov
fdivrl
out
cmc
jmp
mov
push
cmp
cmp
les
scas
jnp
mov
js
daa
jne
adc
dec
fwait
lock
add
or
adc
movsl
xor
movb
xor
notl
mov
into
add
clc
pop
mov
sub
cltd
aad
sub
mov
ret
out
test
jbe
adc
pop
add
xor
xchg
fcoml
pop
js
cmp
ja
fcomps
inc
es
push
push
lret
imull
sbbb
data16
jmp
cld
mov
pop
mov
cmc
arpl
std
mov
or
lcall
pop
add
and
pop
dec
and
xchg
aas
pop
dec
lahf
push
add
pop
stos
mov
mov
in
and
aad
xchg
test
sbb
aas
in
das
inc
nop
test
xorl
jne
xchg
mov
mov
jnp
xorb
mov
xchg
out
cmc
iret
add
and
nop
pop
fcmovbe
rcr
sti
scas
pop
insb
ficoms
imul
ja
ficomps
cld
xchg
pop
mov
sub
pop
ret
out
add
jmp
mov
sub
push
fnstenv
js
xlat
sub
fldenv
pop
xor
jbe
mov
mov
sub
pop
mov
dec
cmp
sbb
out
xchg
shll
inc
fdivr
cld
push
cmpsl
cmp
sahf
mov
lods
jle
and
mov
sbb
adc
dec
in
aam
or
repz
mov
fdivrs
jns
sbbb
inc
outsb
push
pusha
xchg
pop
sbb
stos
clc
xchg
jb
and
mov
sbbb
fnstcw
sub
add
mov
jo
mov
repnz
cmp
subb
repnz
outsb
outsl
fstpt
mov
xchg
cmpsl
or
inc
and
push
add
in
imul
inc
xor
sub
gs
mov
outsl
pop
stc
scas
sub
pop
push
mov
sub
and
bound
lods
fcompl
fsubl
mov
mov
mov
jmp
aas
xchg
hlt
gs
add
ja
clc
aad
pop
mov
icebp
pop
testl
mov
mov
sbb
insl
clc
fsubrs
in
mov
inc
mov
movsb
xor
cmp
xchg
jecxz
insl
mov
xor
inc
in
sub
mov
testl
int
mov
xchg
clc
popf
pop
test
cmp
jg
mov
hlt
lcall
fdivs
cmp
call
or
jg
adc
adc
lds
sbb
clc
mov
or
cli
jg
imul
dec
jl
xchg
and
cld
decb
pop
shll
push
mov
add
sbbl
cmp
sbb
and
dec
dec
lods
push
mov
push
add
mov
insl
cmp
cli
in
lds
fwait
push
push
xlat
fstl
je
adc
stos
xchg
in
paddusb
ret
cmp
inc
jne
rclb
outsl
xchg
add
cltd
fsubr
push
outsl
pop
repnz
mov
xor
cmpb
test
stc
mov
test
lret
and
orb
loop
xchg
sbb
ret
rcl
add
in
out
addl
mov
and
das
divb
jb
fistpll
repnz
mov
cs
xchg
scas
outsl
rclb
cmp
scas
cs
ljmp
inc
testl
sbb
push
ljmp
xchg
test
ficoms
push
or
cmpl
fstp
cld
pop
loope
cli
fildl
fadds
inc
dec
and
aaa
inc
stos
lock
or
adc
push
pop
pop
out
lock
movsl
push
ret
mov
mov
pop
lods
pusha
test
movsb
out
dec
shll
aam
mov
adc
test
and
insb
inc
xor
cmc
mulb
pusha
pop
and
cmp
call
sub
imul
add
sub
and
in
sub
ret
sbb
rorl
leave
jl
dec
fstpt
pop
jge
sub
addb
jmp
sahf
enter
in
jnp
call
push
jmp
insb
sub
ljmp
fbld
lret
out
in
in
mov
and
insl
mov
dec
mov
pop
fs
mull
rcr
sub
sub
push
aad
dec
sub
mov
jae
dec
jb
or
sbb
lret
xchg
mov
jge
je,pt
icebp
stos
xchg
mov
dec
and
jbe
and
das
shlb
pop
ss
hlt
nop
sbbl
push
xor
sti
movsl
and
andb
int
aaa
repnz
hlt
dec
dec
add
adc
sub
mov
dec
cmp
add
sub
mov
xchg
in
aam
pop
leave
xchg
mov
fs
sub
daa
inc
insb
mov
popa
lock
adc
pop
test
mov
inc
orl
sbb
mov
mov
clc
pop
jb
les
push
test
rcl
mov
mov
int3
xor
faddl
repnz
leave
mov
decb
in
insl
je
ficoml
sub
ret
scas
jl
enter
mull
call
int
rolb
cmc
outsl
jle
mov
aad
push
lds
insl
outsb
add
push
in
lret
fldt
shl
mov
push
sub
push
pop
cli
lahf
es
push
stos
mov
inc
adc
cmp
xchg
cld
xchg
pop
or
push
adcl
xor
mov
inc
sbb
outsl
pushf
aad
jnp
imul
dec
out
test
xor
pop
les
mov
aaa
push
or
pusha
dec
dec
mov
pop
mov
cmpb
sbb
outsl
lock
or
xchg
xor
fisttpl
push
sahf
sub
lea
js
mov
mov
dec
fidivl
jmp
mov
push
and
add
jmp
push
lods
in
cmp
pop
js
stos
pusha
add
jns
dec
rcrb
test
idivl
cmp
inc
mov
js
add
fwait
mov
dec
adc
mov
fcoml
daa
xchg
xchg
push
popa
or
add
insb
dec
negl
dec
or
int
lock
cmp
dec
aam
mov
inc
sub
sahf
jg
dec
bound
push
mov
lret
jb
jmp
lock
loop
insb
adc
pop
push
addr16
cmpsl
adc
mov
ret
add
cmp
je
outsb
pushf
pop
jno
mov
out
xorb
jb
jle
leave
pop
cmp
js
inc
loopne
aam
mov
cltd
xor
das
xor
insl
add
mov
push
inc
adc
cmpl
cli
push
cmc
jo
lods
cmp
push
not
int3
into
loop
sti
and
adc
into
movsl
ret
aad
mov
jbe
cld
sarl
xchg
fistpll
mov
dec
pop
test
test
movsb
lret
inc
out
or
and
ret
mov
fstpl
add
xchg
cwtl
pop
es
push
lret
lret
and
adc
mov
xchg
xchg
and
je
push
or
mov
in
icebp
pop
sub
add
pushf
dec
or
cmpl
adc
cwtl
scas
in
cmp
cli
stc
jle
mov
push
xor
pop
int
bts
mov
cwtl
inc
or
cli
adc
mov
sub
movsl
mov
or
sbb
mov
inc
push
jecxz
std
arpl
inc
scas
mov
stos
xchg
xlat
dec
ja
fidivl
cmpsl
fdivrs
xchg
and
dec
add
lea
sbb
and
inc
xchg
push
repz
adc
cmp
mov
insl
or
aad
xchg
add
adc
out
jl
into
pushf
das
out
sti
cwtl
dec
clc
repz
leave
xor
mov
and
mov
and
sahf
mov
imul
test
int
test
jne
sbb
scas
mov
inc
mov
pushf
scas
inc
pusha
jle
out
or
es
dec
adc
dec
imul
mov
sub
popa
cmp
testl
jge
rcrl
nop
push
or
and
adc
sti
std
xchg
pop
lods
mov
sub
pop
cmpsl
and
or
pusha
push
mov
addb
dec
int
lret
adc
or
pop
push
movb
sbb
cmp
mov
add
jle
add
cmp
pop
mov
pop
ja
std
lahf
lods
ds
je
push
das
popa
clc
repnz
stos
xlat
jbe
xchg
cs
cmp
enter
lret
mov
push
aad
shlb
mov
in
xorb
inc
outsl
jnp
rolb
loopne
jle
dec
cmpsl
ljmp
popf
or
cmp
inc
mov
cmp
pop
test
stos
aam
add
insb
lret
test
push
inc
push
adc
inc
mov
mov
out
push
jnp
inc
dec
push
cwtl
insb
mov
mov
daa
dec
jnp
or
pop
sbb
mov
adc
or
pop
inc
push
mov
shlb
jmp
sbb
sub
idiv
or
adc
scas
je
and
pop
sbb
sti
lahf
fmull
pop
mov
cwtl
pop
or
out
std
loope
jbe
xchg
movsb
jno
daa
insb
mov
and
enter
mov
lret
push
popa
mov
dec
cld
inc
aas
and
stos
into
leave
sub
lock
jmp
int
xor
xor
sahf
aas
sbb
fadds
ret
rol
cli
or
imul
fldl
movsb
jo
sbb
dec
adc
mov
xor
push
mov
or
fdivs
xor
lcall
jle
push
pop
imul
testl
cmp
sub
adcb
dec
xor
cmp
incl
push
sub
jbe
addr16
mov
and
ja
add
adc
push
lahf
jne
cmp
or
mov
pushf
mov
outsl
xchg
xchg
jge
cmp
push
cmpsl
and
pop
aas
or
daa
push
push
sbb
mov
xchg
in
mov
lcall
test
mov
hlt
push
or
std
ss
mov
pop
mov
jl
es
push
out
adc
enter
popa
sbb
xor
or
sub
mov
jecxz
scas
dec
mov
out
repnz
pop
adc
data16
adc
pop
idivb
cmpsl
cmp
xchg
into
lret
lods
and
pop
cmp
aaa
inc
xchg
xchg
jecxz
dec
adc
jg
jb
xchg
cs
jns
dec
xchg
int
es
roll
cmc
lea
mov
mov
test
lods
sub
ljmp
out
lahf
jb
sarb
and
lcall
cwtl
jae
or
rol
xor
cmp
lods
daa
xchg
or
jl
std
mov
add
stos
mov
pop
inc
hlt
xlat
mov
mov
xchg
mov
cwtl
out
push
icebp
lret
adc
shll
shl
shrb
orb
pop
adcl
fbstp
pop
push
call
ret
pop
xchg
lret
stc
cld
fbld
sbb
sub
add
sbb
mov
arpl
and
cltd
adc
mov
adc
outsl
pusha
cmpsb
cmpsb
dec
xor
in
or
mov
xchg
and
loop
mov
cmp
cmpl
inc
insl
xchg
pop
stc
mov
lret
jns
adcb
mov
push
and
in
add
push
push
popa
clc
pop
cmp
sub
call
gs
faddl
mov
jle
add
push
fwait
push
arpl
mul
jne
adc
in
push
shrd
cs
and
xchg
je
mov
inc
dec
cmp
int
ret
push
rclb
cli
push
ret
or
sbb
xchg
cli
lods
gs
cmp
push
push
enter
into
rclb
adc
outsb
vmovapd
mov
mov
or
dec
sub
enter
sbb
xlat
mov
dec
adc
inc
inc
cmp
push
inc
xchg
add
div
repnz
cmp
inc
data16
and
into
push
dec
mov
orl
pop
jecxz
icebp
xor
or
flds
pop
mov
mov
adc
arpl
in
orb
inc
arpl
lods
icebp
in
adc
push
enter
ds
std
stos
scas
movsb
repnz
jnp
enter
stos
adc
movsl
cmc
cld
lods
aas
std
jbe
hlt
xor
dec
push
data16
rcrl
mov
adc
js
shl
xor
and
stos
pop
mov
adc
dec
aaa
cmpsl
xchg
pop
incl
pop
mov
and
mov
add
cltd
sbb
test
cmp
sti
aam
cmp
loop
sub
inc
in
scas
adc
cmp
popa
call
rol
mov
mov
mov
popf
pushf
mov
sub
mov
mov
insl
sbb
in
aaa
and
faddp
lds
inc
ds
mov
cmp
repnz
lea
push
mov
mov
aam
fists
cmpsb
mov
xchg
mov
lret
xchg
dec
lea
or
push
gs
sub
sbb
mov
add
scas
push
or
adc
fsubs
mov
xchg
addl
fcomi
or
lods
out
imul
push
cmc
pusha
dec
add
cli
das
movsl
xchg
xchg
or
mov
aad
lea
cmp
cmc
sbb
sbb
imulb
mov
dec
fmuls
dec
inc
add
xchg
and
xchg
or
inc
sub
mul
or
pop
pop
testl
and
daa
push
jmp
mov
cs
es
dec
push
jmp
xchg
fadds
inc
cli
ret
in
testb
int
xor
pushf
daa
mov
cltd
out
popf
inc
mov
cmp
push
mov
lcall
lods
jbe
jecxz
mov
mov
inc
sbb
cmp
addl
jl
mov
pop
in
into
rol
pop
jns
push
lock
or
inc
outsb
addb
push
mov
in
xchg
imulb
and
out
adc
and
mov
jmp
enter
mov
mov
xor
in
lcall
addr16
mov
pop
cmp
jae
je
push
pop
sub
add
and
jb
mov
pop
je
mov
dec
sahf
mov
fisttpl
stc
sub
insl
and
jno
and
neg
sub
cs
jo
fwait
xor
aas
int
sub
jle
insb
push
pop
xlat
cmp
repnz
je
dec
pop
mov
movsb
sbb
sbb
xchg
or
xchg
jg
cmp
sub
fldcw
bound
out
xchg
mov
jle
in
pop
imul
jbe
mov
leave
shrl
repz
xor
adc
ret
cmc
cmp
xor
and
mov
icebp
adc
pop
jle
test
pop
sbb
faddl
imul
pop
or
mov
jne
xchg
daa
fadds
dec
lds
test
cmpsl
dec
pop
hlt
sub
pop
sahf
add
pop
test
inc
lock
out
inc
and
mov
in
out
push
add
lcall
and
mov
dec
and
push
or
pop
cmp
stos
mov
outsb
insb
cmp
or
ret
loopne
inc
fstpl
call
sti
shll
scas
and
cmp
xchg
adc
test
cmpsl
adc
jno
ss
pusha
mov
mov
jg
adc
mov
add
mov
or
popa
inc
jmp
or
lods
rolb
pop
lock
in
dec
jecxz
push
push
push
insl
mov
mov
cmp
and
push
bswap
sbb
cs
dec
push
fisttpl
testb
jle
mov
xchg
xchg
mov
jmp
and
jge
mov
mov
sbb
pushf
pop
arpl
cmc
dec
jne
std
aam
addr16
icebp
lods
ret
rcrl
out
movsl
adc
les
jae
repnz
cmpb
dec
dec
mov
fdivs
bound
mulb
jg
pop
call
jbe
fistpl
push
mov
xchg
adc
add
inc
rorl
cli
insb
mov
arpl
jle
adc
testl
add
cmpsl
add
push
and
mov
push
mov
and
sbbl
repnz
sbb
pusha
mov
or
imul
jle
clc
push
daa
cmpsb
pop
stc
pop
stos
add
xor
pop
mov
fisubrs
into
std
mov
dec
mov
mov
inc
fldl
into
cmc
dec
cmpsb
or
xchg
add
sahf
push
addl
in
add
test
mov
jle
imul
sbb
jne
xchg
sub
push
into
std
sbbl
negb
hlt
or
aaa
jne
push
sbb
mull
dec
push
push
jecxz
adc
data16
in
fstps
xor
mov
dec
pop
and
ret
push
add
stc
and
lods
test
pushf
xor
jno
lods
jae
fidivrs
add
aas
adc
lcall
mov
outsb
push
sbb
push
push
mov
subl
xchg
mov
sbb
push
mov
sub
cmp
add
jno
in
dec
mov
int
test
decb
ds
leave
mov
jne
xchg
cmpsl
pop
xorl
js
pop
jecxz
mov
sti
xchg
bound
fidivrl
dec
push
repz
xchg
inc
lret
out
fwait
std
jno
adc
push
push
cli
mov
adc
or
mov
sub
popl
movsb
push
pop
ja
sbbb
adc
inc
repnz
fadd
lret
mov
test
jnp
aas
stos
pop
sbb
inc
std
mov
xchg
in
shrl
add
mov
jg
fwait
adcl
sub
cmp
in
insb
rcrb
and
test
jne
dec
or
ret
jg
sti
inc
push
cs
add
mov
out
pop
mov
jno
xor
das
dec
cli
iret
jmp
and
js
inc
jne
hlt
jmp
push
and
fmull
push
aam
dec
lahf
jmp
adc
bound
add
mov
mov
std
bound
or
subb
cmp
scas
xor
mov
sbbl
mov
pop
fprem1
mov
scas
lock
lret
cmp
je
aaa
popa
mov
sbb
rcrl
insb
mov
stos
cwtl
pop
sbb
dec
out
pushf
push
outsl
stos
std
sub
jg
jnp
outsb
inc
movb
pusha
incb
and
gs
xchg
add
test
hlt
shlb
sbb
inc
cmp
mov
mov
sbb
call
pop
scas
jle
out
xchg
nop
in
or
loopne
sbb
adc
shrl
outsl
cmp
dec
xor
aas
add
pop
outsb
add
rorb
fcomps
cmpsb
pop
xchg
inc
aad
or
rcrb
pop
loope
add
push
pop
or
iret
mov
scas
out
mov
mov
mov
movsb
psrld
adc
aas
sahf
push
inc
repnz
or
adc
pop
jne
jo
aaa
ret
mov
add
dec
scas
int
inc
mov
push
mov
push
divb
pop
xor
jb
pop
xor
jecxz
mov
lods
test
in
mov
cmp
mov
cs
jne
icebp
leave
out
js
arpl
aad
mov
push
bound
hlt
add
xor
xchg
jle
sbbl
add
fadds
ror
push
lods
jne
lcall
lcall
test
cmpsl
cmp
cli
insb
scas
mov
jb
repnz
xor
xchg
push
lahf
jbe,pt
mov
loopne
dec
push
cmc
dec
dec
das
lret
mov
ljmp
outsl
push
jbe
mov
rclb
enter
sub
fdiv
enter
adc
daa
xchg
pop
insb
push
into
mov
lea
push
jle
int3
mov
adc
mov
test
xor
scas
js
fidivl
push
mov
push
mov
mov
fs
adc
push
aad
stos
jle
sahf
mov
loop
push
gs
sbb
push
cs
add
xchg
stc
sub
pop
dec
sbb
dec
lods
mov
cld
out
xchg
sbb
sbb
roll
rorl
aam
insb
mov
or
sub
pop
aas
add
cmp
ss
jb
sbb
add
jnp
insb
mov
adc
jno
add
call
jo
adc
mov
xchg
pop
lea
xchg
loop
sub
ljmp
daa
das
push
mov
data16
js
inc
sub
cmp
hlt
jg
data16
fcmovnbe
scas
add
mov
mov
inc
nop
subps
xchg
fildl
mov
jle
adc
iret
mov
cmc
mov
jnp
jmp
fistpll
mov
imul
jb
leave
push
mov
mov
dec
stc
test
enter
insl
aam
cmp
pop
ret
gs
iret
cwtl
pop
jnp
mov
loope
sub
mov
je
jae
fs
jb
and
arpl
and
ja
add
xchg
daa
cmc
mov
and
jle
sub
or
adc
dec
dec
les
js
dec
jne
mov
lods
fsts
xor
adc
repz
xchg
out
sub
xchg
ret
fistpl
scas
mov
mov
xlat
cmpl
inc
dec
adc
ss
mov
leave
icebp
aam
mov
rcr
mov
jno
loop
jbe
jnp
xor
dec
repnz
or
sahf
std
xor
jle
sbb
ss
mov
in
int3
inc
dec
and
lar
or
cmp
sbb
push
in
movsb
hlt
pop
pusha
mov
test
push
repz
out
addr16
inc
mov
sbb
sbb
jae
icebp
nop
data16
adc
jnp
mov
jecxz
fstps
push
fisubrs
bound
outsl
or
adc
lahf
or
fwait
int
add
out
orb
mov
adc
push
xchg
into
nop
in
xchg
fs
js
cmp
lret
in
xchg
or
jbe
adc
sub
insb
cmp
jnp
int
shll
cld
lret
sub
dec
sbb
es
sub
popf
lods
cmpsl
out
cld
mov
jno
inc
xor
xor
fcoml
mov
lcall
sub
jl
mov
pop
xchg
cli
sbb
xor
js
pop
mov
xchg
sub
shl
lea
mov
jb
mov
or
std
pushf
cs
cs
dec
mov
test
sbbb
mov
mov
stc
incl
dec
mov
lock
add
mov
mov
popf
in
xchg
lret
or
stos
mov
adc
shr
and
cmp
loopne
mov
mov
bound
test
or
inc
imull
rorl
aaa
add
and
mov
pop
daa
sbb
imul
ja
leave
inc
lea
mov
jmp
dec
int
pop
mov
sahf
mov
xorb
xor
pop
lcall
cmp
addr16
push
icebp
imul
push
push
pop
loope
rclb
loop
mov
loope
subl
xchg
mov
daa
and
cmp
jle
inc
push
test
addl
loop
imul
inc
mov
mov
repz
fsubr
aaa
adcb
xchg
das
mov
stc
cmp
lret
inc
push
lret
jb
sub
ds
and
mov
adc
je
mov
je
or
lods
mull
lods
xor
mov
movsl
or
leave
and
cmp
mov
jb
fcoms
dec
test
scas
daa
xchg
sbb
arpl
movsl
xor
shrl
arpl
sahf
add
mov
popf
and
push
push
sbb
ficomps
into
fcmove
ds
sub
lcall
mov
mov
movsb
test
push
push
mov
jle
std
clc
data16
jne
cmp
or
clc
mov
lahf
lods
cld
and
ret
lret
fs
stos
mov
push
pusha
jb
sub
mov
or
jae
and
jbe
push
xor
xlat
mov
jbe
andl
data16
fistl
arpl
add
addl
pop
mov
fldlg2
imul
xor
inc
jo
mov
pop
loopne
push
lahf
fldcw
jl
in
out
jge
jo
scas
and
add
test
iret
movsb
neg
add
dec
mov
pop
xchg
repnz
fcmovb
push
xchg
add
test
int
lahf
mov
jmp
sahf
fldcw
cmp
xchg
dec
pop
push
aaa
and
stos
in
stos
sub
movsb
in
cmc
out
in
mov
push
pop
cmpsl
mov
hlt
mov
icebp
dec
ljmp
mov
ret
arpl
mov
fmull
hlt
popf
in
fstl
cmp
in
push
movsl
and
push
insl
jl
mov
xor
pop
fs
daa
hlt
push
jne
dec
jno
aad
mulb
out
mov
pop
and
push
inc
push
mov
sbb
icebp
sub
xchg
pop
call
jmp
mov
cmp
outsl
incb
jnp
mov
xor
adc
xchg
sbb
stos
and
repnz
leave
gs
mov
dec
adc
loope
push
push
lea
push
sbb
mov
push
and
and
call
movsl
mov
add
sbbb
sub
mov
jae
fwait
sbb
and
ljmp
lret
inc
inc
dec
mov
pop
test
pop
or
cmp
pop
mov
jp
cmp
pushf
dec
test
leave
adc
mov
mov
xchg
out
hlt
pop
add
pop
sbb
mov
sar
repnz
and
iret
mov
xor
adc
aam
mov
sub
push
push
add
mov
lock
xchg
or
or
add
add
orl
fbld
cwtl
jb
sbb
popl
xor
and
dec
xor
lret
scas
test
mov
mov
jne
les
and
sti
imul
into
mov
jae
fildl
adc
adc
jbe
adc
push
lds
ss
sub
pop
les
in
icebp
add
test
enter
push
nop
add
jae
or
pop
loope
mov
test
fs
fisubs
cltd
fsubs
adc
sbbb
lret
push
mov
sub
and
repnz
push
out
mov
inc
popf
and
test
movsb
test
cli
mov
xchg
lahf
or
xor
xchg
out
pop
cmpsl
add
and
addb
xchg
xlat
jno
addr16
das
sbb
imul
xchg
ror
lods
stc
add
out
call
cmp
es
outsl
and
xor
xor
in
mov
loope
pop
dec
adc
rcll
sbb
cmp
adc
pop
xchg
divb
xor
aas
popf
adc
inc
hlt
loope
jne
push
arpl
test
dec
and
push
in
je
jmp
xchg
push
test
lods
in
scas
icebp
sti
shll
aam
cmp
sub
loopne
cli
mov
shlb
add
xor
shl
in
jmp
loope
push
cmp
fcmovbe
mov
add
pusha
push
loopne
mov
jno
push
dec
pop
or
xor
dec
adc
mov
lea
int
jae
cmp
push
pusha
outsb
mov
aam
adc
rcrl
mov
cmpl
sbb
lcall
dec
je
mov
pop
imul
jmp
js
andb
mulb
cmp
jmp
in
xchg
pop
push
cld
rcrl
jmp
test
hlt
cltd
inc
mov
or
adc
mov
mov
mov
mov
insl
addr16
pop
jns
imul
push
jae
or
mov
cwtl
testb
jae
pop
lret
gs
sbb
pop
stos
arpl
scas
xor
push
stc
jmp
das
pop
mov
ja
icebp
lret
push
xchg
push
xchg
push
jo
scas
xor
decb
ja
cld
loope
lods
data16
push
arpl
jp
cld
sub
xchg
outsl
mov
inc
xlat
fptan
pop
fs
mov
inc
push
or
xchg
clc
decl
dec
sub
dec
fcompl
rolb
cmp
outsl
ds
test
sbb
loopne
pop
mov
shrl
movsb
pop
ja
cmpsl
push
movsl
mov
xchg
roll
rcll
loopne
clc
nop
push
popa
mov
push
clc
ss
jge
ficoml
insl
scas
jle
rcrl
pop
out
cmp
bound
lahf
fisttpll
or
mov
lods
in
xor
bound
shr
fildll
push
sbb
jg
in
mov
xchg
lods
jge
jnp
loop
or
xchg
insl
dec
inc
dec
lahf
popf
ja
push
enter
insb
push
enter
lea
int
inc
das
sbb
addl
jnp
jl
test
cmp
jle
push
shll
sahf
mov
xchg
fstl
lock
add
adc
adc
in
xchg
lret
js,pt
out
add
imul
mov
inc
lods
add
gs
sbbb
psllq
aas
adc
add
mov
inc
popa
negl
dec
mov
cmp
ljmp
mov
daa
mov
stos
imul
mov
rol
call
xchg
scas
ret
push
fsubrp
adc
mov
cmc
inc
clc
data16
cmp
scas
jb
mov
pop
pop
lahf
ds
xor
push
xchg
cmp
mov
lcall
push
sub
inc
dec
pusha
xchg
ljmp
mov
int
sbb
pop
cs
and
sti
enter
test
scas
pushf
div
cld
stc
aam
jne
xchg
stos
sub
push
pop
into
cwtl
mov
inc
sbb
inc
fisubrl
inc
bound
gs
repz
test
or
add
and
sub
repnz
pushf
dec
pushf
je
inc
rorb
push
mov
pop
outsl
dec
shrb
imul
pop
out
jmp
xchg
je
sbb
xchg
dec
pusha
push
adc
sbbb
jmp
outsl
cmp
stos
sub
and
mov
fisubrs
dec
push
cmp
lret
add
nop
mov
lea
sar
jns
int3
xchg
pop
inc
cltd
cmpsl
xor
cltd
out
push
in
das
add
and
pop
pop
scas
scas
in
jecxz
lods
dec
fucom
mov
dec
push
mov
inc
dec
movsb
sar
sub
mov
out
or
arpl
lock
shrb
jecxz
adc
icebp
jg
push
andl
sti
mov
sbb
sbb
mov
push
vmovups
jmp
ja
push
push
xor
xchg
enter
imul
cmp
xchg
ja
xor
mov
and
pop
pop
push
rcrb
std
aaa
jle
movsb
push
hlt
jo
fadd
jnp
scas
adc
hlt
test
or
clc
xchg
jp
mov
sbb
sub
mov
sbb
pushf
mov
adc
lods
andb
and
pusha
sbb
and
inc
dec
pusha
and
mov
fistpll
in
cmp
shlb
add
add
out
push
xchg
mov
dec
int3
pop
stos
push
loopne
mov
iret
pop
out
inc
cld
xor
rorl
cmp
rol
and
loope
push
jo
lret
xor
cmpsl
jns
loope
leave
cli
cmp
gs
sbb
push
test
jns
jge
fwait
push
popl
iret
pop
mov
cmp
jne
out
shll
fstpt
sbb
fldcw
in
inc
hlt
sub
lds
lock
fnstsw
loop
inc
pusha
cmpsb
push
pop
out
mov
imul
call
das
lods
ret
cmp
and
dec
jmp
data16
sarl
test
outsb
mov
and
enter
jb
dec
je
rorb
sar
fidivl
pop
mov
das
call
lock
inc
pop
movsl
add
call
fbstp
jl
fsts
sbb
mov
aaa
das
cmp
lahf
mov
xchg
nop
push
test
in
fiadds
cmp
mov
pop
adc
push
cmp
lock
out
cmp
stos
ret
sbb
push
sbb
cld
shll
arpl
bound
fs
int3
xorb
test
lcall
aad
push
in
jno
mov
mov
mov
lahf
push
test
mov
movsb
sbb
loope
cmp
cs
xchg
sar
mov
xor
in
and
imul
adcb
push
lcall
in
mov
cld
lcall
sti
jns
aaa
std
mov
lret
push
mulb
xor
ficoms
pushf
mov
push
xor
cli
xchg
fdivs
test
cmc
adc
out
add
hlt
jge
lods
daa
pop
fwait
push
out
push
popf
cmp
std
mov
sub
mov
cmpsb
pop
adc
mov
xor
out
xorb
inc
int3
mov
mov
stos
adc
hlt
mov
pop
push
xor
xchg
dec
cmp
cli
cmp
iret
sbb
adc
sub
lods
mov
adc
xchg
jmp
pop
mov
sub
mov
sub
lds
xor
fcompl
and
sub
pop
inc
dec
repz
pop
jns
or
movsb
mov
aam
push
or
mov
add
dec
dec
and
inc
inc
and
dec
jp
dec
leave
mov
jne
out
mov
inc
push
call
mov
and
sub
imul
mov
clc
fnstcw
jp
sbb
mov
mov
insl
add
cmp
push
fwait
jle
cmp
subb
shlb
das
sub
inc
ror
leave
pop
test
cmp
aam
pop
test
xor
fsubl
or
hlt
fdiv
sahf
ja
lods
add
lret
testl
inc
cmc
pop
jne
rorb
int3
pusha
or
popf
stc
xlat
mov
js
mulb
sbb
mov
and
xchg
bound
inc
dec
fucomp
ja
ljmp
xor
xor
push
cltd
ja
or
imul
lods
call
mov
push
out
ss
repnz
adc
sub
fcomp
adc
es
mov
mov
movb
mov
pop
es
daa
mov
push
mov
or
movsl
dec
push
aas
cmp
mov
jnp,pt
rcll
cmp
mov
sub
fdivp
movsl
mov
sub
push
or
repnz
inc
adc
iret
and
jmp
or
fdivl
sbb
fdivrp
jnp
sub
and
mov
ja
inc
inc
mov
insl
fadd
jno
and
sbb
jbe
gs
adc
mov
sub
mov
mov
out
mov
cmpsb
dec
jl
iret
adc
xchg
sbb
cld
inc
int3
lret
outsl
int3
cmc
incb
rolb
imul
push
sbb
jl
jecxz
dec
fs
shlb
sub
loope
cmp
int3
mov
mov
movsl
push
bound
aaa
mov
fs
sbb
adc
ret
xchg
mov
push
pop
pop
pop
in
sub
clc
sub
jns
enter
arpl
pop
dec
je
scas
mov
inc
pop
xor
mov
adc
or
and
cmpsl
sbb
mov
cmp
add
mov
pop
ja
fcomps
leave
mov
mov
dec
inc
outsl
pop
stc
mov
xchg
push
push
lret
insb
or
insl
jmp
adc
jnp
aas
lods
jbe
pusha
std
sbb
dec
test
pushf
inc
dec
in
sbb
sub
fmul
push
daa
pop
scas
sbb
outsl
nop
les
inc
push
sub
cmpsl
cwtl
pusha
aaa
pop
xor
pusha
and
pusha
aaa
cli
pop
pusha
enter
gs
push
nop
jg
lods
jmp
mov
add
sti
in
jae
enter
leave
shrl
fnstenv
push
mov
mov
mov
sbb
or
sub
fidivrl
outsb
popf
imul
pop
std
repnz
movsl
jmp
xchg
xor
loopne
mov
int3
arpl
pop
push
sbb
aad
inc
sub
fs
jne
xor
push
or
cld
sub
fldenv
stc
pop
rorb
bound
or
pop
cmp
out
push
aad
and
mov
or
stc
xor
int
push
pop
or
loop
fldcw
aam
push
inc
out
aas
mov
fidivrl
push
sbb
ja
mov
cmp
int3
popa
cli
pop
shrl
test
xor
repnz
mov
jg
add
call
add
pop
repz
and
mov
inc
je
ret
push
bound
call
cmp
sti
adc
inc
or
cli
aas
sub
lods
mov
jmp
mov
stos
rcrb
jecxz
rcl
daa
add
dec
cmc
mov
lahf
and
ds
jns
push
and
shlb
xor
loop
mov
sub
mov
dec
leave
shrb
mov
pop
xor
leave
pop
insb
out
pop
dec
sub
or
test
das
add
add
xor
test
fidivrs
clc
in
adc
lret
push
jl
xchg
push
inc
js
sub
xchg
pop
lea
test
push
leave
roll
push
or
mov
ret
insb
jno
lods
jb
or
fdiv
and
jge
dec
outsb
frstor
testb
cmp
jnp
fwait
sbb
movsl
jbe
int3
popf
mov
jp
jg
dec
frstor
mov
daa
pushf
das
dec
aam
scas
pop
int3
push
dec
dec
mov
add
ret
add
aam
fwait
scas
adc
pop
fnstcw
push
mov
popf
jbe
orb
pop
das
rclb
loopne
movsl
shrb
jo
xlat
into
push
inc
cmp
push
cld
clc
mov
iret
xor
std
xchg
lret
sub
push
cmp
cmpsl
adc
out
pop
jne
mov
xlat
add
mov
push
std
imul
stos
test
dec
enter
stos
test
int3
lret
add
xor
fsubrl
imul
out
test
outsb
dec
sub
and
jo
stos
adc
dec
je
jl
mov
repnz
mov
lods
add
iret
pop
outsb
jns
add
in
sti
add
adc
or
jbe
push
jg
fwait
rcrb
dec
push
sub
dec
arpl
rol
idivb
or
out
aaa
fistl
sti
shl
insb
or
mov
es
pop
cmp
call
mov
inc
lret
xchg
es
outsb
scas
lcall
fildl
ret
fistpll
and
cmp
push
int
outsb
adc
pushf
stc
inc
cmc
xor
jle
mov
rcl
push
jmp
mov
push
aad
imul
inc
xchg
add
push
adc
dec
hlt
mov
or
lods
or
loopne
cmp
inc
inc
xor
push
outsb
sub
imull
jns
ficoml
jb
lock
pop
jle
sarb
loope
jbe
add
pop
jl
test
out
jge
mov
arpl
jg
xchg
or
int3
inc
bound
mov
and
daa
push
outsl
test
hlt
inc
rorl
xchg
pop
push
sub
adc
adc
scas
mov
cmpsl
icebp
xor
test
imul
dec
or
jmp
or
dec
sub
fidivrs
push
add
mov
cmp
sbb
sbb
scas
cmp
arpl
mov
pop
out
sub
adcl
mov
sbb
das
lret
jnp
gs
adc
test
lods
fs
stos
pop
cld
icebp
out
push
mov
adc
jns
mov
jno
mov
data16
loope
jne
push
push
mov
testb
push
fs
in
pop
data16
outsb
mov
sub
cmp
leave
in
jae
data16
fists
aam
pop
shll
xor
and
adc
jg
enter
lea
loope
icebp
or
add
loope
adc
xchg
mov
add
sbb
adc
popf
repz
movzbl
ret
add
imul
mov
pop
xchg
shlb
popa
arpl
shrb
mov
jne
je
outsl
ja
add
sahf
pop
add
add
sbb
inc
xlat
cltd
repz
cmp
in
mov
jae
insb
dec
xlat
enter
clc
inc
es
or
xor
cmp
jnp
sbb
or
adc
mov
push
sbb
dec
in
push
mov
or
add
cli
cmp
add
ljmp
pop
sub
xor
lods
push
rol
outsb
test
or
rorl
push
mov
lret
cmc
push
inc
es
cmp
in
dec
in
aas
in
or
stc
std
bound
repnz
cmp
sub
ss
loop
fistpl
add
lods
fcos
add
iret
popa
jp
ret
mov
or
cmp
movsl
mov
shl
sub
sub
sub
rcrl
cmc
mov
fdiv
xchg
pushf
push
mov
inc
mov
push
sbb
mov
xchg
jnp
xchg
lds
out
movsl
mov
stc
cmpl
lahf
pop
jg
push
ret
inc
mov
cmp
push
ja
lock
and
mov
dec
push
icebp
fcoms
pop
mov
lods
fcoml
ja
sbb
xor
jnp
into
sti
jge
lahf
xlat
movsl
divl
inc
pop
lcall
or
movsb
dec
in
mov
inc
into
pop
push
jne
add
sbb
dec
je
push
mov
cmpb
push
ss
das
push
into
jmp
jns
in
sbb
jnp
or
insl
and
cltd
sbb
add
js
insb
arpl
mov
mov
roll
inc
in
jb
gs
stos
mov
push
xor
in
mov
loopne
int3
sbb
push
mov
mov
xor
in
dec
addr16
pop
mov
cmp
fs
mov
xor
mov
jle
sub
notb
or
jl
pop
add
cvtdq2ps
or
jae
fs
pop
mov
addr16
subb
mov
mov
jnp
add
gs
cmc
nop
push
dec
mov
je
aas
cwtl
mov
inc
lods
push
sub
adc
pop
mov
jbe
lock
aas
xchg
or
ficoms
push
push
sub
and
mov
loop
or
pop
adc
or
addr16
dec
sbb
scas
sbb
mov
in
fisubs
rol
inc
add
mov
pusha
sti
and
push
dec
inc
pusha
pop
and
lret
aam
dec
sti
pop
inc
das
fnstenv
in
lea
and
rcrl
and
mov
sbb
jp
popf
xlat
outsb
test
push
and
push
xchg
sub
not
ret
jno
lea
and
ret
xor
mov
stc
lods
mov
mov
push
sbb
cwtl
enter
insl
in
xchg
dec
adc
ss
add
scas
pop
dec
filds
sarl
sub
add
std
out
sub
pop
mov
push
and
fisubrl
data16
repz
inc
jns
adc
leave
push
jle
sbb
mov
mov
cmp
and
decb
jns
std
lods
jns
and
adc
clc
test
push
mov
sub
popa
jmp
xlat
test
jle
je
push
sub
inc
mov
lods
out
int3
hlt
jmp
repnz
jbe
sub
or
adc
jg
sbb
push
lret
xchg
jae
mov
cwtl
in
mov
inc
and
std
std
push
clc
movsb
lret
mov
addb
fwait
push
mov
dec
ret
inc
dec
or
lock
add
divb
stos
mov
jb
rcll
and
sub
in
mov
scas
lahf
cmpsb
js
inc
xor
and
rolb
daa
jo
in
inc
jno
xchg
xor
or
enter
shll
gs
xor
insl
add
imul
test
pop
cmp
bound
and
lea
push
pop
push
aam
repnz
mov
cwtl
sub
rclb
in
addr16
inc
sbb
jne
jns
decb
mov
xchg
call
xchg
xor
lret
ljmp
addb
loopne
cld
dec
cmp
stos
sub
xchg
sbb
sbb
sbb
jecxz
rcr
outsb
das
mov
shlb
mov
cld
mov
push
shr
sbb
push
push
fwait
pop
cmpl
and
int
inc
pop
cmp
enter
shll
divb
stos
std
pop
mov
cmpsb
data16
sub
lods
subl
test
lret
cmc
cmp
or
mov
xor
sub
movsl
test
daa
jp
js
aas
subb
fs
movsb
mov
push
jno
adc
mov
inc
adc
mov
xchg
push
jle
jge
mov
lock
push
xorl
test
stmxcsr
mov
les
dec
cwtl
insl
lock
sahf
fisubl
lods
adc
rcll
mov
jne
cmp
inc
les
int3
addb
bnd
mov
sbb
sub
xor
sub
daa
in
fnstcw
add
imul
or
mov
rol
lods
pop
push
xchg
sub
decb
lret
cmp
fdivp
fwait
push
push
or
inc
mov
aaa
into
hlt
pop
adcl
push
xchg
dec
in
fisubs
lret
insl
aas
je
push
mov
repz
mull
filds
fwait
pop
lahf
inc
arpl
cmp
ss
mov
icebp
pop
jmp
rorb
aas
mov
out
xor
leave
and
inc
addl
and
test
mov
sahf
jle
mov
push
jmp
lret
xchg
push
ret
ja
jle
pop
js
xor
add
mov
dec
outsb
loopne
mov
scas
jg
pop
test
jnp
lcall
cld
stos
mov
xchg
lock
rcr
or
ret
pop
adc
and
call
insb
mov
pop
and
and
xchg
int
sbb
jb
dec
repz
sti
test
setne
data16
mov
hlt
cld
add
es
std
in
adc
sbb
ljmp
int3
xor
pop
lcall
js
adc
adc
pusha
iret
push
movsl
lods
adc
add
xchg
adc
add
mov
idivl
lret
js
mov
xchg
jb
adc
jmp
sub
mov
lret
je
or
in
mov
push
and
mov
es
flds
int
stos
cmpsb
lods
lcall
cmpsb
repnz
mov
mov
test
jbe
mov
pop
mov
inc
sub
adc
out
adc
dec
dec
lea
or
xchg
mov
cmc
add
adc
dec
jl
movsl
stc
mov
lahf
xchg
inc
sbb
rol
xchg
pop
jno
cmc
enter
pop
loope
mov
aad
inc
mov
scas
mov
mov
pop
pusha
dec
repnz
xor
lds
iretw
fsubrs
cwtl
mov
in
inc
out
xchg
dec
inc
sti
leave
lcall
dec
stos
out
and
add
cmc
ret
les
sahf
jno
pop
mov
mov
aas
lods
or
push
sbb
fadds
in
clc
dec
inc
mov
iret
dec
jmp
sbb
in
mov
int3
push
aam
sbb
pop
les
mov
cmp
push
pop
jecxz
scas
xor
stos
pop
inc
push
sub
icebp
sub
mov
scas
lcall
mov
sbb
lret
xchg
jmp
add
enter
fistpll
cmp
aad
cmpsl
ret
inc
adc
push
movsb
hlt
clc
ja
sub
mov
outsb
std
shll
pop
fldenv
jne
push
hlt
push
cmp
rolb
stos
js
push
lret
mov
rol
jo
sahf
gs
roll
fcoml
mov
in
dec
xor
lods
xor
lock
aad
call
cmp
mov
mov
add
xlat
fsub
rcll
enter
je
mov
mov
out
add
outsb
add
addb
call
cmp
fmulp
shrl
xor
js
mov
dec
push
in
mov
into
xchg
fistps
sub
in
fmull
imul
inc
pop
push
clc
loope
std
and
dec
notb
movsb
xchg
test
inc
mov
js
test
ds
inc
or
dec
push
cwtl
test
mov
sbb
jge
fiaddl
adc
imul
insb
push
cmp
fcom
icebp
stos
adc
inc
mov
push
inc
lret
mov
div
dec
dec
mov
fs
jmp
pop
mov
ret
push
mov
mov
adc
js
cld
sbb
aad
lahf
fwait
and
mov
in
mov
das
mov
mov
lahf
in
sbb
sbb
or
cmp
stos
fstpl
addr16
jno
xor
in
shlb
dec
jnp
mov
add
push
nop
or
push
jmp
in
lods
hlt
jge
jg
aam
mul
adc
ja
int3
loope,pt
push
cmp
cmpsb
mov
and
cmpsl
sbb
inc
les
inc
add
loop
jmp
mov
pop
cmp
pushf
cmp
repz
scas
pop
ud2
push
scas
sbb
lcall
and
rcrl
loopne
mov
push
mov
xor
xchg
xor
and
xchg
jl
aas
out
repz
fmul
xchg
arpl
mov
rorl
shll
gs
daa
out
pop
pop
ret
test
mov
roll
jge
bound
faddp
sahf
sbb
xchg
or
push
cli
xchg
xchg
pop
cmpsl
call
sub
sub
cmp
aam
sub
cmpsl
cmpsb
mov
leave
xor
or
mov
imul
mov
pop
int3
mov
and
fdivr
lahf
jnp
or
daa
xlat
mov
jl
nop
push
push
arpl
cmp
repnz
dec
jle
in
xchg
cmp
sub
fistpll
imul
dec
pop
pop
mov
ljmp
sbb
push
cltd
popa
cmp
or
push
fucomi
xchg
pusha
aaa
cmp
cmp
lret
push
call
cs
push
incl
in
or
cmc
loope
jg
int
inc
pop
lods
push
add
mov
je
xor
adc
addb
inc
test
adcl
adc
js
pop
fldl
mov
push
sub
jmp
arpl
jg
shl
movsb
jbe
lods
test
lds
xchg
jbe
dec
mov
sub
mov
xor
dec
flds
pusha
xor
xchg
xchg
jecxz
and
jl
jmp
push
and
call
fidivrl
mov
dec
jnp
dec
icebp
jmp
mov
sub
push
pop
outsb
push
jle
add
sete
mov
fimuls
dec
sub
cmp
gs
push
pop
loopne
mov
lds
pop
pushf
cmp
xor
lods
push
loope
jg
sub
div
int3
cmp
cwtl
xchg
into
cmp
cmp
add
fstl
sbb
repnz
dec
lods
jb
mov
mov
add
lahf
mov
inc
and
xor
enter
mov
mov
pop
subl
push
xchg
leave
fwait
mov
push
mov
lret
pop
mov
push
test
sub
push
ds
sbb
js
ficoms
test
rclb
dec
cmpsb
popa
out
sbb
shrl
popa
mov
cmpl
xor
and
or
mov
mov
jnp
push
cmp
test
push
daa
xchg
xor
mov
mov
mov
mov
push
jb
andl
pusha
dec
push
cmp
mov
cwtl
movsb
cmp
incl
call
repz
imul
xchg
bound
push
inc
aaa
mov
gs
dec
pop
and
rclb
inc
enter
aam
and
iret
cs
jecxz
in
mov
shlb
mov
and
cwtl
sub
fildl
cmp
jecxz
cmpsb
and
sbb
pop
and
pushf
out
fldcw
and
test
leave
in
mov
sbb
ret
push
xchg
in
mov
add
add
in
xchg
push
cmc
mov
inc
ljmp
or
fdiv
dec
loopne
adc
cltd
inc
fcoml
testb
ret
and
cmp
clc
sbb
push
int
push
icebp
mov
or
movsb
jecxz
xor
add
cli
cmp
aaa
mov
mov
cmpsb
sbb
lret
and
lret
cmp
movsb
sub
insb
push
lcall
fldenv
sbb
jno
xchg
sbbb
shl
dec
rcrl
push
stos
das
adc
pop
into
in
daa
test
out
mov
cmp
movsb
shl
repnz
std
mov
sbb
lods
fsubp
stos
out
xchg
ror
adcb
int
fisttpll
or
sbb
pop
loop
mov
mov
or
jne
and
cmpsb
les
jnp
fnsave
repnz
mov
outsb
mov
in
negl
dec
testb
mov
inc
sahf
pusha
push
cmpb
xor
aaa
adc
cld
das
enter
dec
js
test
repnz
scas
in
push
sbb
sbb
and
insb
stos
sub
adc
repz
mov
test
push
xor
cmpsb
ja
add
add
jmp
lock
in
ret
repz
ret
pop
xchg
xor
mov
add
mov
pop
push
sahf
pop
mov
dec
int
inc
in
adcl
aas
dec
fbstp
dec
sub
mov
pop
std
xlat
adc
sahf
mov
adc
mov
sub
mov
pop
xchg
rol
test
and
jnp
jns
mov
or
cmp
hlt
dec
ret
in
das
sarl
loopne
jmp
nop
pop
and
imul
or
mov
ret
xchg
dec
mov
std
xor
add
mov
jo
pop
add
mov
and
ljmp
loop
adc
sub
rcrl
dec
jbe
add
fisttpll
or
sub
sub
and
pop
in
mov
enter
xor
mov
inc
lahf
rol
mov
pop
mov
wrmsr
arpl
stos
mov
ds
or
ror
shlb
int
pop
outsb
xor
mov
xchg
orb
or
movsb
stos
adc
add
cwtl
and
cs
dec
test
mov
pop
daa
fsubrl
out
nop
push
shll
repz
neg
sbb
or
sub
shlb
xor
or
and
std
cmp
pop
daa
call
push
aam
adc
fsubs
hlt
pop
mov
mov
pop
stos
dec
cmp
inc
mov
fimull
xchg
lock
shrb
shll
iret
daa
pop
and
pop
nop
cmp
enter
std
cmp
pusha
sub
test
adc
pop
jp
cmp
mov
cmp
xor
shll
inc
adcl
sub
addr16
pop
aas
xor
xchg
into
mov
shll
sub
lahf
add
cld
fmull
in
xchg
xor
or
int
scas
pop
adc
mov
add
testb
add
adc
in
sti
out
std
mov
loopne
jle
cmp
pop
fs
jg
test
mov
jmp
int
leave
scas
pop
mov
and
jne
add
shlb
add
pop
dec
add
dec
cmp
imul
mov
sahf
xchg
xchg
lea
pop
mov
inc
lret
out
popa
enter
jmp
jbe
jae
mov
adc
mov
fs
aam
ds
cmp
sub
cmp
dec
out
jae
jecxz
ret
or
mov
shl
inc
xor
std
jns
mov
mov
fcmove
stos
mov
push
fcompl
loopne
pop
and
popf
or
push
jne
ja
mov
sub
loopne
mov
mov
mov
cmp
sbb
jmp
subl
pop
jns
enter
loop
cmpsl
push
aas
and
mov
mov
js
gs
data16
dec
add
inc
push
in
mov
in
cmc
cmpsl
sahf
jo
xchg
out
cmp
or
in
adc
push
cmp
jno
inc
faddl
fstpt
scas
mov
into
call
xor
and
cs
dec
xor
jmp
pushf
dec
and
jne
js
mov
jmp
lcall
js
stos
inc
push
push
pop
xchg
cmp
gs
out
cmpsl
jecxz
pop
rcrb
or
xor
cmp
jbe
mov
cmp
push
xchg
dec
cmpsl
addl
cwtl
sahf
jge
pop
dec
test
fnsave
fiadds
jmp
lea
mov
jmp
fiaddl
out
xchg
mov
adc
mov
xor
scas
mov
jo
and
jmp
les
push
cmp
adc
adc
pop
lahf
cmp
xchg
movsl
xorb
imul
mov
imul
sahf
mov
arpl
fsubrl
movsb
lcallw
lret
mov
jns
insb
loope
enter
loopne
imulb
jp
inc
repnz
push
imul
fisttpl
cwtl
adc
and
adc
rclb
mov
mov
mov
mov
fsubr
pushf
push
mov
pop
push
add
push
and
mov
das
add
add
mov
inc
mov
stc
add
fmul
lods
mov
mov
and
testb
cli
adc
rorl
vphaddubd
and
popl
cmpsl
jb
repz
mov
insb
rclb
mov
mov
mov
pop
add
mov
std
mov
and
sub
loop
or
jae
and
sub
les
imul
popf
les
cwtl
sbb
xor
sbb
sbb
insb
add
jmp
out
mov
ret
arpl
add
cmp
lods
sub
shrb
rorb
shll
or
pop
iret
jge
nop
pop
xor
mov
insl
inc
mov
and
movsl
nop
call
outsb
sub
cli
ja
addr16
jg
imul
scas
decl
push
fmuls
or
adc
dec
xchg
in
mov
in
ret
mov
cmpsl
out
outsb
fildl
push
test
mov
xor
lods
mov
mov
jecxz
out
enter
jle
sti
push
lret
icebp
dec
cmc
push
mov
sbb
ret
cmpsb
jo
mov
push
mov
std
jmp
add
xor
jmp
out
sub
pop
insl
pop
test
shll
arpl
out
hlt
dec
jb
add
xor
lcall
out
sub
or
scas
push
adc
push
pop
xor
int3
sti
or
dec
shll
push
or
pop
rol
nop
popf
lcall
adc
enter
cmp
lods
loope
xor
dec
dec
inc
xor
mov
sbb
jl
clc
insl
mov
add
sub
stos
ja
fs
or
shrl
sbb
inc
push
lods
inc
mov
xchg
sbb
jb
pop
mov
daa
ss
cmc
aam
fisubrl
mov
ret
and
jg
repnz
out
js
mov
jae
sub
jnp
ss
dec
lret
push
push
test
in
sub
sub
arpl
jecxz
jb
mov
dec
aam
das
dec
jnp
push
mov
loope
xor
std
lcall
cmp
nop
push
repz
arpl
je
lock
mov
outsl
pop
test
mov
cmpsl
push
xor
or
mov
xchg
fidivrl
and
movups
fsts
outsl
inc
pushf
hlt
jge
adc
mov
xchg
cs
push
push
ds
xchg
inc
out
mov
inc
and
test
