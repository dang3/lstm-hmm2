add
or
add
add
pop
add
addb
add
mov
add
add
add
addb
add
call
add
add
or
orb
add
or
orb
add
sub
add
push
add
add
jge
cmp
add
add
add
add
add
add
add
add
add
addb
add
lock
addb
add
add
addb
add
push
add
add
add
add
jge
cmp
add
add
add
add
add
add
mov
add
add
out
inc
cmp
add
add
add
add
add
add
add
add
mov
add
add
out
inc
cmp
add
add
add
add
add
add
add
add
mov
add
add
out
inc
cmp
add
add
add
add
add
add
add
add
add
add
out
inc
cmp
add
add
add
add
add
add
add
mov
add
out
inc
cmp
add
add
add
add
add
add
xchg
pop
add
add
out
inc
cmp
add
add
add
add
add
add
xchg
pop
add
add
out
inc
cmp
add
add
add
add
add
cmpb
add
jo
add
cwtl
add
and
add
hlt
or
sub
add
adc
add
cmp
add
pusha
add
subb
add
or
xorb
add
out
inc
cmp
add
add
add
add
add
add
add
add
pop
add
add
add
jge
cmp
add
add
add
add
add
add
add
hlt
xchg
pop
add
add
add
jge
cmp
add
add
add
add
add
add
xchg
pop
add
add
add
jge
cmp
add
add
add
add
add
add
cltd
pop
add
add
add
jge
cmp
add
add
add
add
add
add
add
add
pop
add
add
add
jge
cmp
add
add
add
add
add
add
add
add
pop
add
add
add
jge
cmp
add
add
add
add
add
add
add
add
lahf
pop
add
add
add
jge
cmp
add
add
add
add
add
add
add
call
add
add
jge
cmp
add
add
add
add
add
add
add
mov
add
add
jge
cmp
add
add
add
add
add
add
movsb
pop
add
add
add
jge
cmp
add
add
add
add
add
add
add
add
pop
add
add
add
jge
cmp
add
add
add
add
add
or
addb
add
xor
addb
add
pop
add
addb
add
add
add
jge
cmp
add
add
add
add
add
add
add
add
decb
add
add
add
jge
cmp
add
add
add
add
add
add
add
add
or
push
add
add
jge
cmp
add
add
add
add
add
add
add
push
or
call
add
add
jge
cmp
add
add
add
add
add
add
or
add
add
add
jge
cmp
add
add
add
add
add
add
add
out
inc
cmp
add
add
add
add
add
add
add
add
pop
add
add
out
inc
cmp
add
add
add
add
sldt
addb
add
sldt
rolb
add
clc
add
add
and
add
dec
push
add
jo
add
cwtl
push
add
rolb
cmp
add
call
sldt
adc
add
cmp
add
pusha
pop
add
mov
add
mov
add
fadds
add
add
add
out
inc
cmp
add
add
add
add
add
add
mov
add
out
inc
cmp
add
add
add
add
add
add
add
pop
add
add
add
jge
cmp
add
add
add
add
add
add
add
pop
add
add
out
inc
cmp
add
add
add
add
add
add
push
add
and
add
out
inc
cmp
add
add
add
add
add
add
push
add
cmp
pop
add
add
add
jge
cmp
add
add
add
add
add
add
add
hlt
roll
loopne
add
out
inc
cmp
add
add
add
add
add
add
ret
sub
add
out
inc
cmp
add
add
add
add
add
add
les
add
add
add
jge
cmp
add
add
add
add
add
add
push
add
nop
movb
or
add
out
inc
cmp
add
add
add
add
add
add
pop
add
pushf
lret
pusha
add
add
jge
cmp
add
add
add
add
add
add
pop
add
cld
int
add
add
add
jge
cmp
add
add
add
add
add
add
add
call
add
add
jge
cmp
add
add
add
add
add
add
add
sbb
pop
add
add
add
jge
cmp
add
add
add
add
add
add
aad
add
add
out
inc
cmp
add
add
add
add
add
add
pop
add
mov
add
add
jge
cmp
add
add
add
add
add
add
pop
add
mov
add
add
jge
cmp
add
add
add
add
add
add
or
add
fldl
add
add
out
inc
cmp
add
add
add
add
add
jbe
add
mov
add
add
add
out
inc
cmp
add
add
add
add
add
add
add
lods
loopne
add
add
add
jge
cmp
add
add
add
add
add
add
loopne
add
add
add
jge
cmp
add
add
add
add
add
add
jecxz
add
mov
add
out
inc
cmp
add
add
add
add
jg
add
or
cmp
add
cmp
add
pusha
or
cmp
add
mov
add
mov
add
fmuls
add
add
add
out
inc
cmp
add
add
add
add
add
add
or
add
or
adc
add
out
inc
cmp
add
add
add
add
add
add
add
dec
pushf
or
adc
add
out
inc
cmp
add
add
add
add
add
add
add
pop
pushf
or
adc
add
out
inc
cmp
add
add
add
add
add
add
pushf
or
adc
add
out
inc
cmp
add
add
add
add
add
add
or
add
add
out
inc
cmp
add
add
add
add
add
add
or
add
add
add
jge
cmp
add
add
add
add
add
add
or
add
add
out
inc
cmp
add
add
add
add
or
addb
add
out
inc
cmp
add
add
add
add
add
add
add
pushf
decb
add
add
add
jge
cmp
add
add
add
add
add
add
add
add
jge
cmp
add
add
add
add
add
add
sti
or
in
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
push
add
dec
add
inc
add
dec
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
sub
add
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jne
je
outsl
add
jne
outsb
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
outsl
add
inc
add
add
add
add
add
add
add
inc
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
je
outsl
add
jne
outsb
add
add
js
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
je
outsl
add
jne
outsb
add
add
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
sbb
add
inc
add
insl
add
add
je
jae
add
dec
add
push
add
daa
add
and
jne
outsb
add
jbe
add
jae
popa
add
add
jne
je
outsl
add
jne
outsb
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
sbb
add
add
add
adc
or
add
add
sub
add
add
adc
add
add
or
push
add
and
add
add
call
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
jo
add
pop
addb
lea
ja
mov
js
or
js
add
jnp
fisttps
xchg
pop
lock
pop
ja
pop
jo
ja
ja
cmpb
js
mov
jb
and
jo
pop
pushl
and
jo
add
and
das
jo
add
jb
and
jo
add
jb
stos
scas
jo
add
jg
pushl
pop
add
orb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
pop
add
in
incl
cli
add
add
add
in
pop
add
pop
pop
incl
cli
pop
pop
add
add
add
pop
add
pop
pop
pop
add
sti
sti
add
add
add
pop
add
pop
pop
sti
add
pop
pop
add
add
add
incl
in
sti
pop
sti
incl
pop
add
add
add
incl
pop
in
sti
sti
incl
pop
pop
pop
add
in
incl
pop
pop
add
add
add
in
in
pop
add
in
in
add
pop
in
in
in
in
in
in
in
in
pop
add
in
pop
pop
in
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
pop
in
outsl
jp
xor
in
add
add
in
in
outsl
in
push
xor
in
add
add
add
in
in
outsl
in
jp
xor
in
add
add
add
add
outsl
jp
in
push
in
add
add
add
add
outsl
dec
dec
dec
dec
dec
in
add
add
add
add
lock
add
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
add
addb
add
add
incl
add
incl
add
add
add
incl
incl
incl
incl
add
add
add
add
ja
pop
js
fstl
add
js
lock
jg
mov
cltd
nop
add
add
add
xorb
clc
std
fstps
add
js
lock
js
mov
cwtl
mov
add
add
jg
cmpb
xchg
add
js
lock
js
or
add
jg
cmpb
xchg
add
add
js
lock
mov
jo
add
add
cmpb
mov
add
add
jg
lock
fwait
mov
add
add
jg
lock
mov
add
add
add
lock
js
mov
lock
clc
lock
mov
jg
lock
addb
ja
jo
jg
lock
jg
pushl
ja
jo
mov
ja
ja
ja
ja
jo
ja
jo
mov
addb
push
or
mov
ja
ja
jo
pop
incl
ja
or
repnz
and
and
xchg
add
add
jo
repnz
das
xchg
add
add
incl
repnz
mov
xor
add
add
jo
mov
das
xchg
add
add
add
pop
repnz
sti
mov
xor
xchg
add
add
add
pop
repnz
das
xchg
add
add
add
pop
repnz
sti
mov
das
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
xchg
add
add
add
pop
repnz
and
and
xchg
add
add
add
pop
incl
add
add
ja
ja
ja
ja
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
addb
addb
add
addb
rcr
add
add
add
or
add
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
jl
add
push
push
add
add
add
movb
out
add
add
add
add
cltd
add
add
add
add
xor
add
xor
add
add
cltd
xor
add
xor
add
xor
add
data16
xor
add
add
cltd
data16
int3
data16
jmp
add
cltd
add
xor
add
cltd
cltd
add
int3
cltd
add
lcall
add
xor
add
data16
add
cltd
int3
add
int3
int3
add
dec
add
incw
add
incl
add
add
add
add
add
xor
cltd
add
add
add
add
add
add
xor
add
xor
add
xor
cltd
xor
add
xor
add
xor
add
xor
xor
add
xor
cltd
xor
int3
xor
jmp
add
cltd
xor
xor
xor
cltd
cltd
xor
int3
cltd
xor
lcall
xor
xor
xor
data16
xor
cltd
int3
xor
int3
int3
xor
dec
xor
xor
xor
pushw
add
pushl
add
pushl
add
add
xor
data16
data16
add
incl
data16
xor
xor
data16
data16
xor
pushl
data16
data16
data16
data16
data16
cltd
data16
cltd
data16
data16
cltd
data16
cltd
data16
int3
data16
int3
data16
int3
data16
int3
data16
jmp
xor
data16
jmp
incl
int3
add
add
add
cltd
cltd
add
add
add
add
add
cltd
add
xor
add
cwtd
add
cwtd
add
cltd
add
cwtd
add
xor
add
cltd
add
cltd
cltd
add
cltd
cltd
add
int3
cltd
add
int3
cltd
add
data16
int3
cltd
add
int3
cltd
add
lcall
add
cltd
add
lcall
add
add
add
add
add
add
add
xor
add
int3
add
xor
add
xor
add
data16
add
data16
add
cltd
add
data16
add
cwtd
add
cltd
int3
add
cltd
int3
add
int3
add
cltd
int3
add
cltd
int3
add
int3
int3
add
int3
int3
add
int3
add
int3
int3
add
int3
int3
add
dec
add
dec
add
cltd
add
dec
add
dec
add
add
add
incl
cltd
add
add
xor
add
xor
add
incl
cltd
xor
add
xor
add
xor
add
incw
xor
add
int3
add
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
xor
incl
dec
add
incl
jmp
add
data16
jmp
data16
jmp
add
incl
movsl
add
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
lock
addb
add
add
incl
add
add
add
add
add
incl
incl
add
add
ljmp
add
ljmp
xor
add
add
mov
add
add
ljmp
pop
xor
lahf
inc
add
in
mov
add
ljmp
pop
xor
lahf
lahf
lahf
inc
add
mov
imul
add
out
out
pop
pop
mov
lahf
repnz
add
mov
imul
out
out
out
out
pop
mov
repnz
in
mov
imul
ljmp
add
repnz
out
out
inc
in
mov
imul
mov
add
add
in
in
in
out
out
inc
in
mov
imul
ljmp
add
add
lock
in
in
inc
in
mov
imul
repnz
lahf
pop
pop
add
out
idiv
lock
out
inc
in
incl
imul
ljmp
jae
out
testl
in
incl
in
imul
ljmp
mov
incl
in
incl
imul
imul
pop
push
push
jae
loope
mov
inc
pop
pop
pop
pop
pop
add
add
in
incl
div
div
ljmp
mov
add
add
pop
out
in
add
add
incl
div
div
add
jmp
loope
mov
in
in
in
in
in
pop
pop
in
add
add
incl
div
div
add
in
in
in
in
jmp
in
add
add
in
in
in
in
add
div
testl
in
in
in
in
in
in
in
in
in
in
in
in
out
in
add
add
ljmp
div
add
out
or
in
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
add
in
in
in
in
in
in
in
ljmp
incl
in
add
add
add
add
ljmp
in
incl
add
add
add
add
add
add
pop
in
in
ljmp
incl
sti
jp
xor
xor
dec
dec
dec
add
pop
in
add
incl
in
incl
ret
pop
jp
xor
xor
dec
dec
add
pop
in
add
in
in
in
in
in
add
add
pop
jp
xor
xor
dec
add
pop
in
add
add
incl
ret
pop
ret
pop
jp
xor
xor
add
pop
in
add
add
incl
pop
ret
pop
ret
pop
jp
xor
xor
incl
in
add
add
incl
jp
ret
pop
ret
pop
jp
xor
add
pop
in
add
add
incl
jp
pop
ret
pop
ret
pop
jp
xor
incl
in
add
add
incl
jp
jp
ret
pop
ret
sti
jp
add
pop
in
add
add
incl
add
add
add
add
add
add
pop
in
add
add
incl
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
incb
inc
clc
add
shlb
shlb
jg
add
jg
add
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
aas
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
cld
add
add
int3
fstl
jl
jecxz
cmc
fwait
in
jbe
ljmp
jge
fs
aad
repz
scas
seto
ficoml
or
or
and
sbb
adcl
inc
in
push
fs
into
or
fistpl
or
mov
cltd
inc
in
jg
xor
mov
push
in
mov
dec
and
jno,pt
jae
hlt
roll
dec
lods
push
mov
pop
mov
adc
ss
neg
sbb
pop
dec
cld
enter
std
aaa
xchg
leave
mov
sti
orl
xor
push
lret
int
sarl
outsb
xchg
jns
jbe
sub
add
fisubrs
leave
sbb
bound
inc
pop
add
lahf
addr16
ja
cmpsl
xchg
pushf
aam
addl
pop
mov
fiaddl
int
add
adcb
outsb
jle
sub
data16
cmp
popa
bnd
repz
push
out
lahf
push
or
jmp
pop
xor
cmp
lahf
or
loope
je
rcrb
hlt
pop
xor
pop
or
int3
setb
repnz
adc
push
lods
sbb
or
ja
fstps
or
mov
push
ljmp
push
icebp
insl
mov
pop
and
je
cmp
mov
subl
xor
push
mov
cmc
jge
repz
shll
or
xor
or
jnp
fsts
jle
cmp
inc
dec
cmp
aam
inc
push
inc
lret
xchg
sub
xor
dec
out
pop
fadd
jae
ret
jmp
lock
idivb
repnz
pop
xchg
adc
mov
add
insl
stos
mov
mov
call
mov
sub
testl
lds
or
cmp
inc
ret
cld
adc
dec
sub
bound
jb
push
pusha
inc
pop
xor
std
shrb
aad
mov
or
in
mov
sahf
dec
mov
sbb
enter
mov
cld
int
xchg
std
adc
add
mov
fucom
mov
push
push
fmull
sub
sti
or
cld
mov
mov
xor
push
stos
mov
insb
cmpsb
pop
daa
mov
dec
cmp
jbe
cli
test
jb
adc
sbb
dec
cmp
scas
or
das
out
xchg
xchg
xor
lea
xor
cmpsb
es
rcll
sbb
xchg
das
pusha
push
sub
mov
icebp
outsb
incl
mov
test
mov
in
stos
cmp
lds
sbb
aad
outsl
iret
negb
pop
dec
push
cwtl
sbb
std
dec
scas
popa
sbb
xchg
xor
jle
jns
xor
lahf
cmp
in
xchg
and
nop
les
cmpsb
repnz
fucomp
neg
cmp
leave
ret
aad
leave
xor
jns
push
xchg
pop
xor
jg
stos
add
sbb
sbb
mov
in
pop
and
rclb
push
sub
and
jnp
out
mov
pop
lcall
imul
lret
jge
add
and
enter
mov
xor
aas
imul
dec
and
test
or
jg
adc
lods
mov
mov
inc
rclb
dec
pop
xchg
push
mov
mov
sub
jnp
inc
jo
xchg
gs
call
mov
mov
leave
mov
or
stc
sti
scas
inc
adc
xorb
nop
pop
xchg
inc
loopne
hlt
fcomp
xchg
stc
push
mov
adc
mov
orl
sbb
fisubrs
repnz
sbb
sbb
mov
lea
inc
pop
or
and
cmp
xor
out
icebp
jae
insb
inc
sbb
sub
clc
imul
pop
mov
push
sbb
cmp
add
push
jp
cmp
mov
call
inc
inc
jnp
loope
inc
call
inc
xor
mov
jno
cmp
lods
mov
ja
dec
pop
jmp
out
jg
mov
xchg
cmpsl
nop
sbb
ss
pop
dec
fadds
xor
orb
dec
xor
sub
ds
jae
fcoml
xor
popa
clc
popf
mov
imul
mov
xchg
push
mov
mov
pop
xor
pop
fcomps
or
jo
rcll
cli
adc
sbb
mov
add
inc
and
and
cmp
xchg
sbb
mov
rcrl
sub
out
je
mov
mov
pop
pop
test
mov
xchg
roll
jle
cwtl
std
xchg
test
sub
jne
aaa
jle
rolb
pop
pop
ficompl
insl
or
xchg
push
outsb
xchg
les
lods
rcll
cltd
rorb
hlt
push
add
jle
stos
adc
dec
lahf
stc
es
shll
xor
cmpl
mov
mov
ljmp
orl
movl
cwtl
inc
or
pop
mov
add
ret
sbb
shrb
push
mov
out
push
and
ljmp
push
aas
sub
movsb
xchg
add
test
jle,pn
sub
mov
out
movsl
push
ds
dec
cli
out
pushf
test
adc
aam
fsub
add
shrb
and
jp
out
xlat
scas
xchg
dec
imul
cmp
dec
lahf
jno
inc
popaw
addr16
lea
pop
lcall
call
subl
dec
aas
or
rolb
shlb
push
je
sbb
cwtl
xchg
xchg
and
adc
push
mov
pop
mov
call
bound
or
push
mov
inc
jnp
add
cli
enter
mov
cmpsl
sbb
mov
adc
fwait
sbb
xchg
cmp
out
sbb
les
and
out
or
xor
mov
ss
pop
or
cltd
hlt
movsl
xor
arpl
push
cmp
add
sub
rolb
icebp
in
aam
fcompl
push
fidivrs
adc
jns
test
out
int3
rolb
jl
lods
rcr
pop
jmp
ss
insl
mov
add
mov
repnz
outsl
mov
ja
push
call
mov
inc
push
adcb
daa
fsubs
mov
xchg
loop
insb
sbb
xor
lret
movsb
in
pop
cltd
lea
xchg
adc
js
pop
or
sbb
aas
mov
adc
dec
call
bound
es
sti
sub
outsl
jb
aaa
xor
dec
test
add
clc
rcrb
add
xlat
ljmp
xor
push
in
mov
mov
dec
adc
sbb
shl
test
cmp
insl
adc
inc
adc
fst
hlt
jp
fisubrs
cwtl
inc
imul
mov
sti
push
and
mov
cltd
jbe
insl
bound
std
sarl
dec
fcomps
mov
stc
sbb
lcall
cmp
push
jl
mov
rcrl
pop
add
out
fwait
pushf
inc
clc
and
outsl
adc
into
js
mov
mov
mov
sub
pop
fisubl
push
dec
xchg
adc
push
in
aaa
dec
jnp
sbb
popf
ret
popf
add
mov
arpl
cmp
inc
push
add
mov
rcrb
push
lret
adc
outsl
sub
rolb
dec
nop
inc
and
add
pop
and
sbb
mov
popf
mov
add
lret
add
rcl
pop
sub
loop
or
in
rclb
or
cli
mov
stos
inc
js
mov
imul
dec
lret
jo
and
shrl
subb
jmp
dec
mov
repz
xor
lret
cmc
mov
pop
fwait
je
aam
sub
dec
add
clc
mov
xchg
stos
mov
andb
or
dec
mov
push
and
push
xchg
lock
loopne
loopne
dec
adcl
push
mov
cld
mov
cmp
jg
popf
cmp
mov
cmpb
push
mov
divb
dec
hlt
outsl
popf
icebp
sbb
cmp
or
into
pop
sarb
into
xor
ret
jbe
jae
shlb
mov
pushf
pop
stos
xlat
flds
aam
and
imul
pop
stc
scas
push
jmp
rcrb
push
ret
and
xor
xor
lahf
adc
add
pop
add
ficompl
xor
es
dec
lahf
nop
pushf
add
lds
out
mov
aas
mov
cmc
and
movsl
ret
bound
inc
ds
shlb
mov
adc
pop
sbb
in
adc
mov
add
outsb
cltd
es
mov
and
push
imul
cmpb
insl
sti
inc
iret
add
arpl
sbb
loop
faddl
xor
jns
sub
and
int
imul
xchg
push
or
add
inc
ss
push
mov
fs
testl
or
mov
sahf
jecxz
mov
adc
mov
mov
stos
push
cmp
dec
adc
xchg
pop
and
les
cmp
aad
mov
xchg
test
mov
mov
mov
pop
push
jae
and
xor
add
cltd
or
out
lods
sbb
testb
mov
push
lsl
mov
rcrb
fisubl
fildl
jl
addl
dec
stc
clc
lea
stc
dec
sbb
mov
callw
jg
fsubrl
fisubs
jo
ljmp
jg
sbb
es
sarl
add
test
xchg
pop
push
add
mov
movsl
mov
aad
fcomps
add
cwtl
repz
cmc
and
push
or
adc
sti
pop
jno
int3
fisubl
dec
decl
cmp
jae
push
mov
mov
ret
in
mov
jbe
jns
jecxz
xchg
pop
mov
jmp
add
jb
mov
xor
popf
stos
mov
fcompl
adc
cmp
outsl
xchg
fdivrl
pop
lcall
stc
ficoml
jg
mov
xor
test
inc
into
popa
push
mov
enter
dec
or
int
mov
ds
fsts
ret
fs
mov
mov
arpl
xlat
aas
je
add
lea
jg
testl
mov
clc
jo
outsb
scas
imul
int
int3
dec
call
push
inc
fwait
loop
jp
imul
divl
fadds
bound
push
inc
fs
jp
jae
clc
or
push
jl
xchg
mov
add
pushf
mov
sbb
in
cld
in
call
push
pushf
jl
repnz
out
pop
and
shll
dec
das
mov
mov
dec
lods
jmp
dec
pop
xchg
inc
dec
xchg
pop
ljmp
xchg
xor
out
and
pop
mov
cmc
lds
notb
mov
repz
inc
jle
push
popa
fxch
and
mov
in
dec
and
adc
aad
add
int3
cmpsl
insl
loope
xor
adc
pop
xchg
subl
push
in
mov
and
inc
xchg
cmpsl
nop
push
jnp
dec
xchg
xor
xor
mov
mov
xchg
fistl
roll
scas
call
xor
mov
and
and
xor
in
sbb
push
and
notb
push
je
test
xchg
sub
in
mov
sti
jno
and
push
jle
daa
sub
imul
cmp
sbb
inc
insl
mov
dec
jmp
adc
pop
dec
lret
jne
inc
repnz
lret
leave
in
data16
fldenv
mov
xor
ret
add
push
jne
cltd
and
repz
mov
movsb
ljmp
sub
jae
mov
das
orl
out
and
fisubrs
push
adc
jmp
jo
ljmp
leave
sub
in
mov
ljmp
adc
or
pop
test
ficomps
xor
test
repnz
cmp
pop
pop
adc
mov
xor
cmp
test
inc
inc
sbb
outsl
adc
sti
pop
inc
or
loopne,pn
mov
xchg
imul
push
nop
sub
sub
xor
orl
sbb
push
out
mov
repnz
dec
cmp
pusha
loopne
xor
adc
dec
or
iret
sbb
imul
mov
fistpl
rol
cmp
stc
add
mov
adc
push
mov
xor
lock
mov
jne
aad
call
mov
sahf
mov
sbb
xchg
bound
lock
icebp
fdivrs
fdivl
add
lock
std
add
or
mov
daa
mov
lret
xor
and
imul
divl
sub
sbb
dec
inc
add
fstpl
jne
mov
mov
jl
or
outsl
inc
leave
inc
inc
inc
jno
cmp
addr16
jne
pop
adc
lret
pop
outsb
hlt
xchg
dec
or
test
xchg
subb
cmp
leave
stos
jae
sbb
popa
out
out
push
cmc
sub
ret
icebp
aas
dec
imul
push
out
inc
mov
push
call
jge
jae
cwtl
js
sub
lcall
scas
mov
cwtl
add
ja
cmc
dec
and
ficomps
cwtl
inc
ss
cmpsb
pop
pop
or
and
frndint
rorb
mov
sub
add
pop
xchg
leave
rclb
ss
sbb
dec
and
jae
test
testb
movsb
pop
jl
inc
insb
lea
outsb
repz
xchg
mov
shrl
gs
ret
inc
sub
xor
leave
es
pusha
loopne
stos
mov
xor
pusha
rcrb
or
push
in
mov
xlat
test
cmpsl
xchg
cmp
sarb
xor
lret
dec
gs
hlt
cmp
dec
call
sbb
sub
lods
shrl
jnp
fistpl
push
and
add
mov
iret
int3
insb
aam
aaa
push
in
fs
incb
xchg
jae
pop
mov
test
test
pop
fsubs
inc
in
aam
add
cmp
push
cli
sahf
and
call
mov
rcr
dec
mov
test
fisubrs
pop
cmp
lcall
cmpsl
aaa
stc
pushf
push
jg
mov
add
mov
test
mov
pop
inc
adc
adc
and
jl
jns
and
loopne
ret
xchg
jmp
inc
jnp
jmp
sti
insb
enter
inc
fwait
iret
inc
sbb
sub
scas
pop
ret
adcb
ret
aaa
data16
movsb
add
orb
mov
cmpsb
sbb
into
or
cmp
mov
mov
jo
jne
push
lahf
bound
rclb
out
pop
push
and
pop
add
fisubrs
arpl
pop
lds
mov
pop
fimull
fdivrl
pop
pop
lods
loop
popa
inc
pushf
pop
xchg
les
adcl
ds
cli
test
test
sbb
xchg
sbb
sbb
mov
mov
ss
dec
sbb
cmp
jl
mov
sub
add
or
lods
out
adc
sarl
test
imul
retw
aaa
mov
popa
push
xor
fs
xor
outsl
cmp
cwtl
mov
adc
xchg
enter
jg
in
imul
cld
test
sub
movsl
push
sbb
jle
pusha
movsl
xor
adc
mov
arpl
or
xchg
push
mov
push
xchg
push
add
sbb
repz
and
xor
xchg
lret
ror
pusha
mov
add
out
mov
cmovbe
mov
jnp
les
mov
icebp
icebp
mov
clc
in
pop
pusha
add
add
je
inc
std
aad
dec
sahf
push
and
and
jno
xor
rolb
cmp
test
loop
lods
addr16
data16
jbe
rclb
stc
mov
sub
les
cld
adc
sbb
popa
loop
mov
les
loope
xlat
or
pop
xor
inc
lds
cmpsb
call
jno
jle
xchg
and
icebp
mov
lahf
jmp
mov
lea
push
test
ja
inc
icebp
jp
addr16
add
hlt
pop
cmp
int3
lahf
add
dec
push
xchg
popa
add
cmp
orl
outsb
sbb
out
cltd
or
cmc
dec
mov
dec
lcall
pusha
cmp
rcrb
jge
mov
add
mov
xchg
in
imul
xchg
xor
loopne
into
in
pusha
cltd
cmp
jo
sbb
popa
iret
push
int3
rcrb
xchg
sbb
lret
xchg
in
cwtl
inc
inc
mov
movsl
cmc
lahf
cmpb
mov
add
inc
sub
jbe
rcll
fs
pop
xor
push
mov
enter
sbb
imul
out
lods
les
push
fldenv
jo
fidivrl
mov
mov
mov
jp
je
push
mov
shll
xchg
cli
scas
int
pop
xlat
xchg
or
pop
test
mov
mov
jmp
adc
in
lods
lahf
sbb
jb
cmp
test
popf
add
jmp
fcoms
pop
push
sbb
test
adc
xor
bound
jecxz
mov
lods
cmp
sbb
pushf
xor
adc
mov
fistpl
scas
lods
ror
push
and
movsb
out
and
mov
ficompl
dec
arpl
lock
loop
mov
bound
out
cmp
mov
imul
popf
test
aas
pop
popf
xchg
add
inc
cmp
xor
lcall
pop
cmp
sbb
inc
stc
or
lcall
fwait
stc
mov
int
pop
pop
andb
inc
test
adc
aam
and
jno
scas
ja
mov
push
scas
mov
rolb
cmpb
bound
pusha
dec
dec
sbb
sbb
sub
cmp
xchg
sbbl
cli
insb
or
addb
adcb
aaa
mov
test
cmpsb
iret
mov
add
jbe
sbb
dec
addl
js
dec
push
je
jp
push
or
push
xchg
mov
int
nop
push
inc
xor
xlat
fldcw
into
push
lahf
out
rorl
iret
dec
adc
and
pop
dec
jmp
dec
push
cltd
sub
dec
dec
daa
out
sbb
or
inc
lods
cmp
lahf
ror
in
jnp
xor
push
adc
jp
fimuls
mov
pop
in
lcall
mov
push
aad
push
mov
xchg
sub
jl
int3
jo
test
xchg
outsl
push
pop
test
clc
push
pop
pop
pop
mov
sbb
xor
mov
and
ja
popf
test
cmpsl
xor
inc
sarl
jno
cmp
cwtl
jae
push
or
jo
xor
hlt
dec
jno
xchg
lret
xorb
fsts
hlt
iret
mov
mov
jns
adc
add
imul
pop
inc
and
xchg
lock
mov
testb
mov
or
lds
popf
stc
push
jae
daa
dec
push
mov
mov
jbe
pusha
test
pop
xchg
imul
bound
mov
stos
push
ds
inc
int
mov
sub
loope
push
xor
pop
pop
movl
mov
pushf
jle
out
pop
insb
outsl
iret
nop
mov
adc
ficoms
inc
pushf
scas
push
notb
add
sbb
mov
std
shll
push
sti
sbb
out
mov
movsb
cmp
test
into
daa
add
dec
test
in
add
jecxz
push
push
sti
sub
cmc
pusha
daa
leave
mov
inc
outsl
add
pop
or
clc
push
ds
jnp
mulb
jmp
sbb
aaa
adc
push
jmp
or
add
popa
sbb
dec
movl
movsb
push
add
imul
lea
dec
pushl
call
mov
sbb
adc
push
scas
mov
repnz
push
inc
sub
iret
lret
pushf
mov
jbe
stos
fwait
or
mov
sbb
into
je
sbbb
int
xorl
lds
lret
lahf
scas
outsl
insl
inc
mov
mov
cld
mov
cmp
cmp
jmp
into
dec
fistl
hlt
fsubl
and
sti
pop
or
shlb
stos
xchg
sbb
jne
rcrb
push
sub
lock
ljmp
mov
dec
aam
cmp
lods
mov
std
push
call
xchg
icebp
push
inc
fisubrs
sbb
jne
inc
sbb
in
inc
inc
enter
pop
imul
and
xchg
push
cs
push
fwait
pushf
mov
in
xchg
mov
aas
stos
dec
test
and
movsb
out
in
sbbb
jl
test
xorb
repz
stos
pusha
aas
inc
adc
cmpl
jmp
lock
xor
cltd
jne
cmp
xchg
dec
adc
mov
adc
pop
int
aas
movsl
cmp
jns
pop
mov
add
out
or
push
and
stc
jge
in
jg
push
xchg
cmp
xlat
push
clc
adc
jle
jae
push
mov
dec
mov
lock
mov
sbb
jg
and
dec
push
cmc
sub
xchg
iret
jne
subb
dec
mov
sbb
xor
xchg
xchg
sbb
pop
scas
or
jmp
outsl
das
mov
inc
mov
jl
mov
xchg
stos
imul
cltd
shlb
jecxz
enter
jno
iretw
sbbb
test
jbe
orl
push
les
add
push
dec
out
pop
sub
lods
aad
inc
leave
pop
adc
lds
inc
je
add
dec
enter
jb
aaa
addr16
fildl
fdivrs
xor
lcall
out
push
inc
in
push
or
xor
xchg
jecxz
imul
cwtl
push
lret
fsubr
scas
cmpb
aaa
movsb
mov
cmc
mov
sbb
hlt
or
sarl
cmp
xor
xchg
and
cs
mov
mov
jae
mov
push
jle
or
inc
mov
xchg
das
jae
sub
ret
insb
cmp
pop
inc
xchg
add
xchg
push
mull
lahf
mov
stc
cmc
sahf
pop
push
ja
pusha
mov
and
mov
xchg
xor
fdivs
imul
pop
or
in
mov
mov
imul
test
ljmp
adc
popa
cmp
loope
call
fsubl
das
fistps
sub
sub
cmpsb
push
lret
adc
jmp
fdivrs
inc
repz
fwait
pop
pop
testb
mov
adc
fisttpl
aaa
sbb
push
sbb
mov
push
out
mov
jbe
hlt
pop
mov
imul
es
cld
stos
xor
out
loop
xor
xchg
loopne
cmc
dec
nop
add
cltd
xor
dec
pop
lock
iret
jns
icebp
hlt
roll
movsb
push
push
sbb
jmp
cltd
dec
ljmp
or
jmp
cmpsb
xor
mov
mov
or
ja
xchg
push
lods
cmpl
mov
cwtl
sub
xchg
out
movsb
add
mov
movsb
andl
pop
mov
or
add
pop
jp
ficompl
iret
fisttpll
xlat
imul
test
add
sub
shrb
ds
pop
jns
push
pop
ret
insb
inc
cmpsb
loope
aaa
insl
push
inc
inc
push
jbe
test
out
outsb
sub
in
popa
or
pop
mov
adc
mov
dec
in
ret
jbe
scas
loop
add
and
sub
pop
imul
in
mov
ja
xchg
sbb
mov
xor
enter
shlb
sbb
xlat
add
and
push
and
cmpsl
xchg
lret
sbb
ja
add
xchg
hlt
lcall
lods
repz
mov
loop
mov
mov
lea
aaa
outsb
stos
add
popf
imul
insb
aaa
dec
ret
popa
adc
shlb
push
jmp
pop
sub
sbb
inc
add
mov
daa
out
dec
mov
dec
int3
mov
test
mov
adc
insb
sahf
dec
inc
dec
dec
xor
push
iret
fdivr
or
sub
cltd
dec
lods
inc
xchg
in
lds
sbb
loopne
aaa
xor
xor
pushf
inc
fidivrs
bound
mov
testl
mov
shll
repnz
cmp
cmp
pop
dec
jns
xchg
push
xor
repnz
pop
pop
scas
pop
jb
jle
add
testl
inc
xor
cmc
ss
sub
jp
cmp
inc
push
out
in
mov
push
add
dec
mov
add
xchg
out
dec
inc
and
pop
mov
sbb
xor
arpl
cmpsl
xchg
xchg
mov
inc
ss
clc
lcall
xchg
dec
sbb
fwait
or
add
fdivp
jns
xchg
add
inc
out
adc
enter
add
out
and
xchg
jno
enter
and
pop
inc
mov
add
dec
xlat
stos
push
and
mov
shl
pop
lret
rol
jp
sbb
hlt
fstl
cmp
pop
ja
sub
xor
loopne,pt
dec
add
lock
aas
gs
out
test
pop
xchg
shll
sub
mov
shl
jo
fsubp
and
lcall
fmulp
add
mov
xchg
mov
xor
or
leave
jno
pop
fistpl
sahf
out
pop
fst
cmp
inc
or
or
mov
shll
mov
xchg
add
cmc
ficompl
jne
lret
int3
rcl
adc
mov
add
loop
std
pop
cs
mov
cmpsb
lea
rol
sub
lock
lods
cmp
pop
pop
shll
std
mov
lahf
sbb
sub
dec
int
aam
fwait
cmp
loopne
test
test
or
shlb
rclb
cld
int
mov
clc
data16
ja
mov
int
lret
inc
jns
idivl
adc
out
xchg
push
push
ja
mov
insl
popf
cmpl
pop
mov
nop
aaa
and
shll
dec
cmpsl
push
adc
mov
out
aas
mov
outsb
test
icebp
cmp
jns
cltd
fsubl
mov
push
mov
push
pusha
push
test
lret
scas
mov
xor
into
cwtl
mov
mov
daa
add
push
lods
in
cmp
pop
out
repnz
lea
add
cwtl
xchg
test
mov
popf
push
ljmp
dec
cwtl
aaa
sbb
push
xchg
scas
mov
push
add
dec
adc
push
imul
adc
mov
int
jne
or
aad
jno
xchg
push
outsb
dec
add
mov
icebp
or
add
push
mov
xchg
adc
repnz
js
xchg
push
mov
mov
and
sbb
cmp
mov
lock
out
mov
adc
ret
mov
mov
adc
cmp
xchg
adc
pop
cmpsb
nop
xchg
push
sbb
lods
mov
or
andb
clc
sub
addr16
dec
dec
mov
or
cld
fwait
mov
inc
cmp
in
adc
pop
enter
mov
clc
gs
icebp
stos
mov
pop
cmpsb
adc
and
inc
scas
mov
inc
or
mov
or
and
pop
popa
mov
push
negl
dec
mov
dec
and
or
lret
sahf
push
insl
push
lret
adc
lcall
bound
push
fnstcw
pop
movsb
add
and
sub
mov
mov
adc
jno
inc
sub
mov
sti
in
adc
cmpsl
mov
dec
icebp
add
ficomps
leave
adc
inc
push
ljmp
mov
mov
imul
or
mov
mov
in
int
jmp
push
jne
gs
jno
cmp
or
push
inc
xchg
jg
or
or
sbb
cmp
and
in
push
cmp
mov
sbb
frstor
adc
xchg
imul
adc
cmpb
mov
mov
or
mov
add
cmp
pop
cmpb
fdivl
and
lock
shl
loop
sarl
inc
std
repnz
int3
fildll
sbb
lahf
test
clc
testl
dec
mov
cltd
and
cld
sub
sub
sub
int
out
fsub
movsl
movsl
xchg
scas
xchg
clc
push
test
loopne
add
in
lcall
jno
addr16
mov
lret
xor
aam
out
fbstp
out
sbb
add
xchg
pop
aas
adc
adc
pop
inc
dec
xchg
cli
cld
loop
cli
jo
mov
aad
scas
int3
cs
and
stc
insb
out
xchg
aad
xlat
clc
gs
pop
dec
mov
add
jge
bound
mov
sbb
dec
sbb
repz
add
jge
push
hlt
cmp
hlt
and
cmc
push
xchg
ljmp
push
xor
out
mov
arpl
xor
or
mov
pop
int
cmp
lds
inc
and
inc
pop
imul
lcall
cmpsl
sub
fucomip
or
dec
cmpsl
orl
fwait
push
lock
push
outsl
adc
sbb
or
lds
daa
mov
incb
push
lahf
lea
jecxz
push
sbb
mov
icebp
lods
adcl
imul
loope
or
test
clc
mov
test
rorb
inc
lahf
push
sti
xlat
cs
jecxz
mov
push
sub
popa
in
test
mov
adc
out
test
sbb
jecxz
mov
leave
je
int3
pop
subl
jnp
xlat
add
test
repz
and
add
sub
fs
aam
add
adc
mov
add
pushf
adc
mov
dec
xchg
push
shr
repz
mov
pop
xchg
dec
and
fildl
movsl
xor
sti
push
sahf
pop
lret
xor
or
shl
outsb
inc
push
and
cld
mov
leave
adc
mov
adcl
mov
js
jmp
cmpsl
cli
push
and
push
jg
sub
pusha
cmp
out
jge
push
in
mov
pop
inc
cmp
inc
jle
xor
les
mov
add
fcmovnu
icebp
cmp
pop
out
call
xchg
aaa
dec
cmp
movsl
dec
sti
imul
imulb
push
test
mov
pop
js
int3
mov
or
jle
pop
js
sub
shll
adc
jnp
mov
lret
push
and
sbb
iret
and
adc
pop
sbb
mov
push
stos
enter
test
xchg
mov
jb
and
cli
push
jp
sbb
clc
dec
xor
ljmp
jb
mov
mov
pushf
pushf
das
sub
ret
stc
lods
out
lea
dec
add
imul
jl
jmp
scas
icebp
lahf
add
dec
dec
sub
ljmp
xchg
aam
mov
xchg
inc
or
ret
in
pop
stc
cmp
inc
out
test
and
dec
fwait
in
cltd
mov
adc
mov
test
icebp
js
in
jmp
xor
or
add
in
dec
in
popa
adc
push
sbb
xor
xor
push
in
add
push
popa
inc
pop
sahf
cmp
xor
inc
pushf
popf
pop
cs
add
and
pushf
or
push
mov
out
mov
cmc
push
fsubrs
and
in
rcll
js
outsb
lahf
aaa
out
mov
orl
lods
pop
imul
ret
and
mov
and
mov
je
mov
mov
loope
daa
pusha
or
xor
xor
pop
test
movsb
and
pop
push
sub
pop
sub
cwtl
popa
jmp
mov
pushf
mov
scas
cmp
outsb
sarb
push
or
jle
dec
adc
test
mov
push
xor
shll
leave
and
inc
push
cmp
lea
sahf
fimuls
push
test
add
mov
aas
daa
push
jbe
dec
jecxz
hlt
or
scas
jl
push
push
or
aam
mov
mov
and
xchg
push
iret
jne
inc
out
leave
push
sbb
mov
es
cmp
sub
iret
test
ja
jmp
xor
dec
test
lock
subl
js
push
mov
in
inc
in
xor
mov
cmpsb
xor
cmp
adc
dec
test
movsb
xchg
fstl
mov
adc
dec
and
and
xchg
jae
mov
addl
jns
sub
icebp
xor
cmp
enter
push
and
xorb
loopne
jge
icebp
mov
lret
rclb
xchg
jno
xchg
or
mov
xor
and
fistps
xchg
pop
call
dec
dec
pop
movsb
lds
push
mov
jo
stc
add
outsb
rcrl
scas
and
in
mov
adc
or
lret
mov
push
adc
sub
jo
aad
negb
xlat
dec
pop
hlt
sbb
icebp
das
pminsw
ret
ficomps
mov
pop
roll
or
mov
outsb
inc
push
mov
add
xor
lock
and
stos
pop
push
sti
movsl
les
shll
jne
cmpsl
mov
mov
popa
fidivrs
out
xor
adc
iret
es
mov
ljmp
fldt
push
xor
mov
inc
lods
mov
loopne
imul
in
jg
sbb
jo
sbb
pop
push
es
jecxz
pop
and
adc
dec
aam
out
cmpl
sbb
cmpxchg
ret
stos
daa
sub
pop
movsb
cld
add
lods
xchg
sub
clc
xchg
gs
rorl
sub
sub
dec
xor
xor
stos
mov
ret
push
push
inc
xchg
sarb
push
jae
out
out
mov
sbb
lods
aad
dec
jmp
imul
pop
scas
pop
iret
push
sbb
mov
imul
pop
jno
inc
jp
sbb
push
xchg
or
out
or
pusha
das
mov
xlat
lret
testl
leave
dec
fwait
lods
inc
ret
adc
aas
js
lahf
imul
std
popf
loope
xor
pushf
jne
jns
push
sub
in
mov
dec
jbe
or
test
fucomip
pop
jno
cmp
jno
xchg
into
test
ficompl
out
cmc
rcll
lods
dec
pop
ret
push
nop
scas
ret
daa
test
sub
pop
lea
push
scas
mov
clc
ja
icebp
stos
cmp
fwait
outsb
cmp
mov
ss
xor
je
adc
lea
lds
adc
cwtl
shll
lcall
or
pop
push
inc
xchg
and
cli
loopne
sahf
mov
mov
mov
addr16
mov
mov
xchg
mov
mov
xchg
repz
lcall
mov
shlb
lcall
add
pop
jae
push
push
mov
ljmp
add
xlat
pop
push
daa
daa
pop
push
inc
stos
jne
stos
lock
iret
pop
scas
pusha
adc
subl
and
lcall
outsb
pop
push
push
ljmp
mov
push
test
pop
sahf
loope
out
enter
inc
mov
xlat
lds
int
das
adc
cmpsb
icebp
daa
push
pop
fisubrs
and
or
lea
xchg
sbb
jp
sbb
hlt
test
push
dec
xlat
cmc
dec
jle
mov
outsl
adc
mov
sub
xor
add
xor
xor
scas
scas
popa
adc
xor
sti
jg
das
stos
mov
cmp
lret
outsb
add
das
divl
xchg
scas
cmp
in
std
inc
push
mov
adc
outsb
inc
push
cli
aam
imul
lcall
push
dec
in
cmp
add
test
mov
pop
sub
jg
ret
cltd
push
xchg
icebp
xchg
sahf
pushl
pop
dec
adc
inc
arpl
xchg
mov
arpl
sub
lds
dec
leave
aas
and
imul
lahf
test
jecxz
pop
popf
arpl
pop
lret
cmp
cmp
addr16
cwtl
mov
jne
xor
or
je
cmp
in
xchg
push
xchg
sbb
push
enter
es
roll
sarl
mov
xor
jae
loope
test
or
arpl
je
gs
lea
testl
sub
into
fldt
sub
aas
pop
jle
adc
outsl
popf
out
ja
inc
sbb
mov
jb
lahf
jae
xchg
inc
mov
imul
ret
cmpsl
xor
mov
push
rcrl
push
mov
fnstcw
mov
pop
pop
rolb
inc
xlat
out
xor
pop
enter
push
lods
jge
clc
adc
lahf
sbb
das
push
xchg
aas
addl
xlat
dec
aam
jecxz
fstpt
rclb
je
testb
push
push
gs
pop
adc
mov
add
std
inc
out
push
stc
mov
loope
call
mov
pop
mov
pop
xchg
push
push
gs
jbe
subl
insb
add
andl
leave
mov
xchg
inc
fwait
aad
leave
shrl
scas
loopne
ljmp
out
insb
push
xor
add
xchg
lret
in
mov
std
push
lret
cmc
ret
xor
xlat
pop
push
mov
xchg
push
aad
jmp
mov
imul
cmpsb
in
loop
out
xchg
inc
outsb
mov
fistpll
or
and
push
inc
jge
mov
jmp
sbb
push
popf
sbb
movl
xchg
js
mov
mov
std
imulb
sahf
jnp
lods
test
or
data16
lret
insb
jbe
cmp
jno
or
sbb
cmp
cmc
incb
xchg
out
xchg
mov
dec
loope
arpl
xchg
negb
loop
pop
dec
int
xor
pushf
aas
mov
inc
cmp
loop
mov
cmp
pop
test
cmp
mov
lods
add
pop
or
mov
jmp
mov
dec
or
xor
pushf
aaa
ret
add
aaa
out
pop
test
call
cwtl
loope
sbb
test
cld
mov
cmp
pop
mov
pop
cmp
sub
cwtl
cli
jecxz
daa
mov
into
sub
pop
sub
add
arpl
scas
ljmp
pop
fsubrp
cmpsl
jne
imul
roll
pop
je
fcompl
pop
inc
xlat
or
xsaveopt
mov
loop
in
mov
lret
push
pop
rorb
sti
or
dec
mov
ljmp
out
mov
insl
jle
inc
or
movd
inc
and
adc
pop
xchg
sahf
ret
jns
mov
shlb
stc
xchg
addr16
cltd
pop
int3
push
test
xor
rcr
cwtl
movsb
stos
xor
sarl
dec
mov
mov
popf
add
fst
dec
jp
mov
loopne
adc
sahf
mov
xchg
into
sahf
push
cmp
mov
mov
imul
inc
in
scas
jge
cwtl
gs
loop
addr16
or
mov
pop
rol
xchg
mov
adc
adc
std
cmc
xor
jb
cmp
mov
gs
dec
jge
cwtl
pop
mov
lock
jmp
pop
ror
and
aad
in
negb
xor
xchg
call
jecxz
in
andl
pop
ja
mov
and
leave
js
bound
sub
lds
mov
loope
iret
pop
cwtl
imul
or
inc
inc
mov
xor
cld
inc
or
imul
leave
lret
fsubp
push
in
aas
add
leave
xor
cmp
jae
mov
imul
or
jl
sbb
and
daa
or
fisubrs
je
popa
inc
movsl
xchg
add
xchg
jmp
test
and
shl
stos
aas
aas
add
and
xor
scas
push
addr16
popa
data16
cli
cmp
test
push
cmp
add
lret
add
adc
pop
pop
jle
push
test
mov
jae
add
mov
mov
mov
cmp
dec
jns
and
insl
sub
push
add
mov
mov
mov
into
lods
rcr
sbb
in
sub
pop
cmp
jns
roll
mov
mov
mov
arpl
add
mov
loope
mov
test
loopne
or
inc
test
xchg
xchg
js
int3
cmp
mov
push
xor
movsl
fdivrp
outsl
dec
push
pop
clc
cwtl
ret
popa
jno
aas
or
ret
jl
imulb
or
sahf
cmp
mov
loopne
mov
sbb
xchg
cmp
sbb
add
arpl
mov
mov
inc
std
push
push
repnz
jl
call
xchg
xchg
test
inc
adc
push
imul
jbe
leave
ljmp
lods
imul
mov
pminsw
dec
call
jns
adcl
sub
pop
pop
mov
fcomps
mov
loope
ds
bound
push
hlt
cmpl
mov
out
push
ret
lea
dec
cmpsb
add
sub
add
lods
in
pop
mov
iret
pop
jge
add
scas
inc
test
movsl
testb
scas
cmp
shr
mov
jmp
sahf
fstps
mov
cs
mov
notl
mov
mov
or
cmp
cmp
daa
cmp
push
xchg
mov
sub
sub
and
enter
leave
and
ss
cmp
filds
fs
lods
adc
xchg
in
add
lds
and
add
test
pop
in
push
repz
dec
fwait
jns
push
ret
pop
xchg
fwait
imul
je
in
jns
pushf
test
ss
mov
int
adc
xchg
lea
loop
pop
dec
andb
stos
inc
pop
loop
mov
pop
sbb
lcall
icebp
in
mov
aam
add
mov
ret
mov
sbb
jecxz
mov
jns
add
cmp
sbbl
or
add
out
lcall
cltd
sbbl
or
mov
adc
xor
das
aam
imul
ljmp
xlat
add
mov
pop
or
xor
les
pusha
mov
xchg
stos
xchg
xor
push
in
xchg
mov
int3
mov
inc
push
adc
inc
mov
cld
mov
jb
pushf
lds
add
and
sub
cli
out
movsl
insb
pop
pop
adc
daa
and
cmp
aad
pop
clc
jbe
xchg
movsl
sbb
xchg
fwait
push
cwtl
fimuls
mov
fstps
or
push
mov
cmp
xchg
pop
add
push
mov
jle
ret
jo
pushf
pop
inc
sti
xchg
lret
das
jp
sub
insb
dec
cmpsl
fwait
iret
cmp
std
mov
aad
movsb
repnz
mov
into
push
stc
mov
sbb
and
jo
lods
xor
mov
and
fcoms
sar
movzwl
adc
pushf
jns
je
ja
xorl
iret
popf
lods
popa
cltd
mov
sub
repz
mov
mov
cmp
pop
pop
xor
mov
cmc
inc
scas
xor
and
fcomps
data16
mov
adc
push
sarl
push
adc
cwtl
add
mov
jle
push
mov
pop
ret
cld
ljmp
xor
pop
pop
inc
les
xchg
dec
stos
cmp
inc
sahf
icebp
sub
sub
dec
aad
scas
push
jge
cmp
outsb
push
int3
add
adc
lret
mov
push
sbb
or
faddl
mov
jmp
int
popa
sbbb
mov
in
push
xor
or
add
mov
cmovnp
addb
and
ret
and
shl
push
fisubrs
cld
or
xchg
fbstp
xchg
inc
fwait
and
mov
pop
and
stos
or
arpl
adc
stc
mov
sbb
mov
lds
negb
dec
out
repz
idivb
sbb
pop
cld
push
adc
push
mov
jmp
dec
push
adc
lds
lret
mov
dec
out
mov
fbstp
mov
fsubrl
jnp
arpl
xor
push
lds
xchg
imul
rorl
inc
mov
sahf
ror
xchg
out
scas
popf
xchg
cld
sub
les
adc
inc
icebp
xchg
and
test
inc
xchg
inc
adc
and
mov
fsubs
insb
pushf
pop
jbe
loop
ficomps
inc
aaa
and
mov
xchg
mov
imul
or
daa
add
call
xor
call
xlat
ret
sub
loop
orb
lcall
sbb
sub
lods
jmp
scas
neg
stos
mov
arpl
sahf
jge
dec
adc
ja
lods
popa
jno
cli
imul
inc
lea
pop
push
jl
ja
out
popa
add
adc
fsub
xor
test
sub
das
jne,pt
imul
popa
xchg
xor
in
dec
push
lock
hlt
les
mov
cmp
fadds
bound
push
xchg
ljmp
add
mov
aad
mov
mov
xor
out
jg
repnz
pop
add
mov
cmp
sub
add
fwait
pop
jae
xor
sbb
aad
stos
cltd
adc
pop
mov
imul
test
xor
mov
cmp
sbb
mov
out
sbb
fdivp
in
test
into
mov
divl
cmp
lcall
mov
mov
cmp
in
dec
cmp
js
arpl
push
dec
stos
inc
outsl
imul
add
mov
xorb
push
xor
call
je
jnp
sub
mov
or
push
in
mov
xlat
push
dec
add
sub
outsl
dec
xchg
testl
and
xchg
xor
loopne
xor
or
fmull
rcrl
adc
mov
adc
outsb
inc
fdivr
mov
int
and
lds
xor
xorl
inc
sub
and
out
ljmp
jge
test
dec
jl
addr16
in
xor
dec
leave
adc
ljmp
lock
into
push
and
fs
xor
and
jae
mov
mov
cmp
cmpsb
mov
push
mov
push
ljmp
mov
mov
lds
xor
push
insl
inc
push
jo
mov
jo
lcall
ss
or
ficoms
or
xchg
mov
push
mov
jecxz
testl
xor
mov
and
fwait
push
icebp
sbb
pop
jmp
mov
hlt
sahf
shl
lret
adc
jle
inc
lods
sti
lods
dec
xor
icebp
adc
outsb
cmp
pop
adc
stc
rorb
nop
push
jno
cmp
sub
pop
mov
inc
fwait
jge
test
jbe
mov
jo
incb
loope
test
mov
ror
ss
adc
cld
ror
daa
or
jae
enter
in
fimuls
cmp
sti
xchg
sar
ja
mov
jne
sub
push
or
es
sub
inc
mov
cmpsl
pop
push
mov
imul
ljmp
inc
push
icebp
jns
test
iret
hlt
stos
mov
jne
or
xor
stos
test
inc
pop
jns,pn
mov
or
ret
mov
fdivl
orl
nop
rorb
lahf
jae
arpl
jbe
mov
xchg
or
mov
xchg
inc
sub
enter
adc
adc
and
sub
cmp
repz
out
sti
xchg
mov
iret
xchg
add
test
popf
xor
in
mov
ja
aas
cli
enter
jge
mov
xchg
cmpb
xchg
pop
sub
addr16
mov
les
xchg
stos
cmpl
fnstcw
pop
jno
xchg
ja
test
int3
push
mov
jmp
cmc
cmovbe
mov
nop
movsl
in
adc
xchg
push
cwtl
test
pop
fdivl
out
push
jp
outsb
ss
lock
push
loopne
ljmp
jno
sarl
mov
stos
movsb
imul
push
mov
nop
in
arpl
leave
add
jl
dec
jns
mov
popa
addr16
mov
mov
je
hlt
test
dec
loope
lret
xchg
stc
je
jle
jg
mull
xor
cmovne
jecxz
xchg
pop
jns
sub
aad
push
std
je
je
cmp
leave
sbb
scas
cld
xchg
pop
out
rclb
mov
push
leave
clc
imul
es
pop
loop
movsb
les
push
int
movsb
dec
pop
mov
xchg
outsb
mov
data16
pop
sub
or
neg
mov
mov
sub
pop
mov
xchg
jnp
jecxz
push
sar
inc
and
testl
sub
mov
lods
adc
pop
lea
rcrl
dec
popf
arpl
dec
mov
mov
scas
loope
aad
lret
mov
adc
xchg
mov
xchg
add
mov
mov
cmp
leave
lock
add
in
shll
lea
pushf
call
pop
fwait
ret
sub
shr
push
jo
notb
in
lock
or
fs
lock
xchg
xor
ja
incl
mov
js
xchg
stc
add
mov
icebp
stos
in
out
insl
jge
jae
imul
adc
sbbl
xor
dec
out
clc
xor
mov
das
inc
push
push
or
imul
icebp
fdivs
loop
add
mov
jge
cmpsb
xchg
sbb
cld
ret
mov
enter
and
les
fistps
decl
dec
insl
pusha
xorl
sbb
enter
test
fldenv
hlt
rorb
popa
outsl
nop
mov
add
adc
test
xor
sbb
pop
cld
adc
andb
jae
icebp
push
or
pop
mov
cmp
sbb
subb
mov
mov
jle
add
int
dec
mov
js
insb
testb
call
add
add
jmp
cmp
cmp
enter
mov
jg
sti
popf
inc
test
push
pop
xchg
movb
or
leave
inc
mov
in
jp
inc
mov
sub
jge
push
mov
fisttpll
pop
mov
cmpsl
js
xchg
push
adc
bound
xor
dec
adc
in
movsl
sub
or
imul
lea
bound
add
mov
repnz
adc
xor
pop
jno
xor
lret
fnstenv
repz
cmp
shll
jns
xchg
and
ficompl
insl
mov
dec
addb
push
and
or
pop
mov
push
xchg
cwtl
mov
test
ljmp
hlt
mov
xor
pusha
out
aas
bound
push
lcall
pop
dec
xchg
inc
inc
mov
repz
sbb
leave
mov
lock
daa
inc
out
xchg
lods
clc
fiadds
sahf
out
cmc
gs
mov
jbe
xchg
pop
dec
push
cltd
xchg
inc
test
xor
ja
pop
xchg
rclb
pop
mov
push
outsl
push
sub
mov
inc
adc
cmp
dec
mov
cwtl
pusha
add
xorl
shll
or
daa
dec
or
sub
mov
push
and
add
mov
stos
xchg
inc
aaa
or
out
xchg
push
pusha
es
data16
fadds
jnp
ja
xchg
jge
sub
in
sbb
clc
pop
sbb
sbb
dec
push
push
mov
mov
cld
mov
aaa
jl
stos
mov
dec
aam
scas
dec
push
mov
push
dec
add
or
sub
sub
sbb
mov
fs
mov
fmuls
adc
sub
repz
lea
test
inc
testl
mov
movsl
rol
scas
lret
fsubl
ljmp
negl
fisubrl
arpl
gs
add
xchg
das
mov
xor
push
and
int3
fildl
loopne
pop
cmp
dec
inc
inc
push
ljmp
iret
push
in
repnz
jg
or
dec
enter
je
outsl
xchg
xchg
mov
lods
push
shl
jmp
dec
xchg
sahf
push
sub
jmp
or
dec
ja
loop
pop
add
push
dec
dec
mov
sub
cli
xor
jno
mov
and
pop
imul
clc
imul
inc
adc
outsb
fisttpl
push
ss
xor
push
mov
pop
sbb
adcb
je
test
in
xchg
add
push
rorb
ret
cmp
nop
pop
sarb
dec
movsb
ficoms
test
dec
sub
xor
int
pushl
push
and
push
loopne
lods
in
test
or
add
iret
add
into
pop
jmp
lds
cmp
movsl
cmp
nop
fdiv
scas
push
xor
mov
das
jns
sbb
movsb
dec
aaa
sub
add
jg
sub
fcmovu
xchg
mov
sbb
out
add
std
jp
gs
jecxz
dec
cmp
push
dec
pushf
int3
enter
test
cmp
mov
pop
xchg
sbb
add
aaa
test
mov
push
add
cmp
sbb
lcall
adc
pop
add
xor
and
mov
leave
movsl
jge
or
shrl
mov
cmpsl
pop
mov
lea
dec
jg
sub
lcall
sub
mov
push
sbb
sub
rorb
sbb
xchg
inc
adc
pop
jne
push
sub
mov
sbb
or
pop
stos
jnp
rcrb
cmp
es
xchg
clc
aas
jae
sub
push
sub
push
pop
loop
insl
lock
dec
jl
mov
adc
xchg
dec
ds
mov
cld
xchg
jno
lcall
insb
mov
xchg
or
movb
inc
lock
add
shr
outsl
add
mov
mov
mov
call
dec
xchg
dec
cltd
test
lahf
xchg
mov
adc
fwait
sbb
mulb
fmull
mov
mov
pop
js
in
andb
lds
sub
push
mov
and
sub
loop
pop
or
js
inc
mov
clc
ja
fistpl
lcall
xlat
sub
popa
sub
cmp
shlb
clc
and
push
and
repz
inc
repz
aam
adc
shl
pop
push
push
xchg
xchg
xor
and
sub
ja
mov
jnp
aam
mulb
pop
xchg
lret
les
pop
adc
mov
mov
imul
cs
pop
jle
adcb
ds
fwait
cmp
mov
test
dec
pop
or
fsubrs
push
lds
add
xor
and
push
xchg
popf
inc
xchg
test
vprotb
mov
xchg
inc
sub
sti
sbb
mov
lcall
scas
push
push
clc
pop
mov
inc
cmp
xchg
jnp
jns
or
push
ja
ret
inc
mov
push
push
cmc
xorl
cmpsb
sbb
xor
jb
pushf
imul
cmpsl
pop
movsl
aaa
adc
sub
pop
loope
roll
lret
jle
xchg
adc
adc
je
pop
mov
movsl
dec
ljmp
dec
mov
out
jne
xor
push
movsl
push
test
add
lds
fldl
bnd
gs
mov
jo
mov
jns
aaa
and
jl
ljmp
dec
int3
sub
jmp
cmp
daa
pop
ss
outsb
ja
cltd
mov
insl
in
xor
cmp
aaa
int
das
daa
adc
test
mov
movsl
loopne
push
outsl
inc
push
cmc
test
xchg
std
iret
and
xor
mov
mov
fcomps
mov
out
mov
fcmovbe
test
adc
and
sbb
pop
jo
loopne
mov
jmp
insb
pcmpeqw
xor
cli
xor
adc
es
pop
or
add
icebp
out
push
or
jnp
ljmp
push
sarl
rol
cld
test
push
mov
shlb
add
out
ljmp
push
fnstenv
push
hlt
cwtl
gs
push
int
pop
stos
push
in
pop
and
pop
xor
mov
inc
sbb
push
lahf
lret
fadd
push
jb
and
jo
mov
dec
rcrl
xchg
or
repz
jle
stos
dec
cli
out
dec
ret
js
fcoml
mov
push
jns
pushf
jb
inc
sti
and
cwtl
pop
and
mov
xor
add
jecxz
insb
popf
cmpsb
imul
lcall
ljmp
dec
mov
adc
das
inc
jae
cwtl
pop
ss
les
lods
cwtl
adc
xor
into
mov
ret
push
sbb
aas
ja
jecxz
fdivrs
lret
jo
mov
popa
gs
mov
push
rcrb
repz
negl
arpl
out
dec
mov
inc
or
cltd
imul
xor
loopne
mov
movsl
aad
rcll
add
push
dec
aaa
jbe,pt
lds
inc
inc
jge
in
mov
push
fsin
lret
sbb
jge
ret
jnp
dec
or
in
mov
inc
mov
dec
mov
cmpl
leave
insb
fsubr
xchg
inc
inc
decb
fsubl
mov
push
loopne
sub
xchg
dec
push
lock
sub
icebp
scas
dec
and
clc
notb
cli
sbb
ljmp
mulb
outsl
add
out
pop
and
push
push
roll
stos
clc
xchg
jecxz
or
cmp
ja,pn
fbstp
daa
ss
lock
loope
cld
cmp
sbb
xor
fsubl
data16
aaa
sbb
or
jge
sbb
or
adc
push
mov
test
popf
push
repnz
inc
jle
sbb
shrb
mov
xorb
jbe
add
adcl
sub
hlt
mov
add
jmp
cmp
pop
or
cltd
adc
inc
fucomi
sub
testl
sti
cmc
movsl
mov
add
lret
fmuls
jae
out
repz
js
fcoml
mov
mov
xchg
scas
and
insb
popf
push
pop
and
inc
sarb
sbb
scas
dec
mov
nop
cmpb
mov
ret
popf
test
xchg
insb
mov
js
sbb
push
out
dec
jno
and
push
pop
cmp
nop
scas
int
add
mov
jge
pushf
adc
fwait
xchg
ja
arpl
mov
jbe
sub
popa
movsb
pop
push
ljmp
jo
fisttpll
adc
dec
pusha
ds
mov
mov
call
push
mov
dec
std
add
repnz
in
push
ret
xchg
pop
push
cwtl
dec
adc
sub
and
push
push
sbb
cld
cwtl
sbb
sub
aam
lds
push
test
xorb
lock
pop
sbb
mov
addr16
cmc
jp
mov
int
jge
jge
cmp
int
ret
sub
or
xchg
push
inc
mov
mov
pop
adc
xchg
fs
or
cmpsb
aaa
dec
xlat
xor
dec
lahf
xchg
jecxz
mov
aad
pusha
loop
test
mov
cmp
bound
mov
dec
fcomps
stos
mov
pop
sti
xor
je
cmpsb
aam
sbb
repz
sbb
jp
pop
sar
xchg
icebp
subb
and
mov
xchg
mov
gs
cli
push
and
dec
stos
dec
mov
aaa
test
arpl
gs
cmp
mov
jnp
popa
sbb
pop
mov
fwait
and
nop
jl
in
or
add
push
loopne
xchg
adc
clc
xor
jae
in
pop
jnp
imul
leave
sti
es
and
jne
arpl
inc
fldenv
mov
inc
cmp
jns
fldl
pushl
int3
int
mov
pop
in
xchg
in
out
lret
cmp
mov
aaa
std
pop
push
lret
dec
push
and
icebp
add
add
cmpsb
and
mov
pusha
adc
imulb
imul
inc
cmp
into
dec
mov
lcall
mov
je,pn
pop
mov
jo
fimuls
imul
insb
adc
xchg
enter
cld
repz
loop
adc
icebp
mov
fcoms
push
stc
cmp
sar
out
dec
mov
mov
dec
and
pop
test
popf
push
and
push
stc
inc
jp
pop
xlat
test
cmpsl
add
sub
fisttpll
cltd
movsb
and
cmp
jg
push
cmp
aad
sbb
inc
fdivrl
add
xor
mov
jno
mov
jbe
int3
movsl
jmp
dec
lret
bound
xchg
xchg
in
jge
xchg
aaa
xor
imul
mov
leave
push
adc
xchg
pop
lock
sbb
sbb
adc
fistpll
push
pop
leave
add
sarl
sbbl
add
sarb
sbb
mov
sub
xchg
xchg
lock
jecxz
adc
sub
push
lret
sbb
lret
stos
bnd
sbb
in
dec
pop
outsb
push
push
mov
mov
dec
push
out
xor
in
mov
cmp
pushf
cmp
loopne
sub
jle
mov
pop
bound
mov
test
mov
sub
iret
inc
sbb
add
flds
adc
pop
mov
push
aas
sbb
xlat
fisubs
xor
insl
push
pop
loopne
add
enter
sar
or
inc
sbb
loope
je
mov
fcoml
adc
test
xchg
out
pop
vmaxps
shr
add
test
ret
scas
gs
jg
shr
movsl
leave
into
shr
mov
hlt
nop
mov
mov
push
mov
ret
lds
xor
in
int3
filds
test
pop
imul
sbb
aas
lock
and
sahf
inc
fnstcw
fadds
sbb
add
mov
xor
push
mov
jp
xchg
inc
fstpt
mov
mov
pop
push
xchg
sbb
fcmovu
aaa
sub
mov
push
aaa
in
enter
cmp
imul
clc
push
mov
dec
or
subl
in
lods
jg
loopne
and
jo
aam
hlt
pop
mov
dec
mov
sub
xor
ffreep
adc
pushf
xchg
test
dec
aaa
fs
xor
cmp
das
dec
mull
insl
jp
sub
push
imul
mov
dec
gs
popf
fs
xchg
stos
add
inc
push
pushw
sub
repnz
jb
gs
jmp
fldl
sub
xor
dec
das
aad
xor
fisubs
lret
pushf
pop
shrb
xor
test
sbb
push
mov
push
rorl
inc
test
pop
mov
das
rcrl
dec
lea
sets
outsb
add
mov
scas
push
nop
into
fsubrs
sahf
adc
out
push
or
sbb
xor
jae
xchg
pop
cmp
hlt
pop
and
dec
pop
cmc
or
jns
fsubs
fldcw
gs
popf
jbe
stos
xor
test
push
cmp
stos
std
test
sub
xor
call
add
mov
cltd
sti
cmp
xchg
jge
aam
mov
cmp
jbe
movsb
push
mov
loopne
ljmp
mov
add
mov
cmp
sbb
push
ret
mov
lds
pop
cmp
or
sub
mov
fs
daa
es
and
adc
lret
and
loopne
lods
add
fs
mov
mov
out
and
cltd
gs
mov
out
push
in
or
inc
push
out
add
mov
popf
mov
insb
stc
cmpsl
movsl
test
inc
sbb
push
fisttps
dec
inc
pusha
imul
mov
mov
mov
jb
stc
dec
data16
xor
in
xchg
add
imul
inc
jne
jg
pop
daa
pop
gs
xor
ret
adc
cmpb
xor
outsb
in
sbb
lahf
push
aas
stos
sbbb
xchg
jo
fcomps
mov
insb
or
repnz
arpl
pop
scas
daa
and
push
jns
loopne
pop
mov
mov
push
imul
iret
sarl
push
out
stos
pushf
pop
testb
cmpsl
adc
leave
sbbl
adc
insl
inc
dec
in
mov
fstl
xchg
sbb
push
pop
aad
mov
and
cmp
sbb
inc
sub
pop
mov
cltd
fwait
addr16
repnz
loop
adc
or
cli
inc
out
push
cmp
xchg
lds
in
div
lock
lea
mov
add
fistpll
xchg
push
and
dec
xchg
mov
int3
xor
out
cmpl
divl
add
pop
mov
stos
jle
dec
xchg
fisttpl
lods
mov
or
scas
push
dec
in
pop
mov
ja
adc
test
dec
pop
stos
pop
jnp
outsb
lret
ret
xor
mov
call
fmull
or
roll
jne
je
push
or
lds
and
pop
adc
clc
push
mov
notb
repz
push
mov
xchg
cmp
ficoml
inc
cwtl
adc
dec
icebp
inc
push
jb
out
leave
shlb
sub
pop
xchg
xchg
nop
js
out
pop
inc
ret
inc
insb
outsb
push
pop
popf
inc
pop
int
xlat
inc
cli
cmp
jg
jmp
jbe
sub
pop
inc
mov
out
fstsw
cmp
add
aam
daa
mov
orl
pop
cmp
mov
xchg
ficompl
cmp
out
mov
daa
dec
sub
test
xlat
fldl2t
mov
cmp
jb
cmp
rol
jge
aas
insl
push
pop
mov
jmp
daa
cmp
mov
mov
aad
fisttpll
mov
xchg
insb
inc
jno
cmpsb
xchg
mov
outsb
xchg
adc
adc
sbb
aad
mov
xor
cmp
jno
dec
jo
xor
dec
pusha
lret
shl
fsubrl
das
popf
mov
scas
dec
push
shl
imull
lcall
lea
dec
jno
add
xor
scas
jg
test
mov
sbb
sbb
mov
mov
jb
in
mov
push
das
adc
movsb
ljmp
in
popf
or
es
xor
xchg
mov
mov
sahf
movsb
pop
or
in
ret
mov
out
ret
xchg
inc
arpl
sbb
xchg
and
sub
xor
fisttpl
pop
push
notl
mov
mov
into
xchg
scas
fmulp
mov
testl
addr16
or
inc
jnp
lea
scas
hlt
dec
inc
mov
xchg
outsl
idivl
test
fdiv
and
adc
ljmp
and
jl
mov
mov
mov
cmp
ja
ds
scas
push
mov
fndisi(8087
cmpb
mov
jle
fdivrl
stos
test
es
mov
outsb
xor
xor
jnp
cld
addr16
xor
sub
xchg
ljmp
loope
inc
aad
aam
cmp
aas
cltd
xor
je
and
add
sbb
xor
cltd
je
hlt
insb
inc
pop
mov
fs
les
dec
sub
fldcw
cltd
or
fimull
dec
inc
or
and
dec
dec
mov
adc
pop
xchg
mov
sub
in
jb
inc
aam
mov
push
push
xchg
test
xchg
aas
in
into
inc
cmpsb
lock
mov
rorl
inc
out
sahf
push
lcall
mov
cwtl
mov
mov
xchg
cs
jp
sub
insl
ljmp
fisubs
addr16
inc
mov
mov
jg
sti
adc
test
call
sub
cmp
in
or
xor
fadd
ror
pop
mov
out
cmp
cld
clc
jg
push
xor
aaa
lahf
lock
mov
cmp
lock
in
xor
scas
cs
andl
xchg
jp
push
imul
mov
or
ljmp
jb
iret
jge
movsl
out
je
loopne
push
pop
cmpsl
aaa
stos
adc
mov
inc
push
jb
inc
add
jge
mov
mov
inc
add
push
lea
stc
fnstsw
test
imul
cmpsl
pop
cmpl
jnp
ret
pop
testb
xchg
or
ret
popa
lea
sub
sbb
xchg
sbb
jne
hlt
and
inc
mov
sahf
fdivr
jp
pop
popa
stos
in
jnp
dec
sub
dec
test
lret
shrb
mov
movsb
les
dec
insb
lahf
fbld
xchg
les
and
in
mov
decl
dec
movsb
add
ja
mov
fdivs
aas
inc
popf
jge
mov
push
cmc
and
mov
leave
and
push
push
sub
lcall
divb
jns
or
dec
xor
repnz
or
pop
pop
xchg
push
pop
xchg
sbb
mov
out
sahf
jmp
and
out
inc
and
cmpsb
push
cmp
pop
adc
or
or
pop
insl
and
fildll
mov
jb
out
int
jns
jbe
and
aas
push
lcall
jle
out
push
dec
and
push
push
jle
fs
repnz
clc
sahf
in
test
push
jno
sti
test
push
sahf
ds
rcll
inc
pusha
push
cmp
adc
loope
cmpsl
push
fldt
cmpsl
jp
inc
repz
mov
repnz
push
mov
cmpsl
sub
push
pop
cmc
out
call
jne
xor
xchg
xchg
sahf
pop
popa
aad
aaa
jge
cmp
test
mov
inc
jmp
shlb
jp
movsb
push
rcr
jns
add
xor
xor
bound
mov
push
pop
lahf
and
mov
pop
dec
dec
push
loopne
sub
cmc
out
cmp
sub
loope
pop
mov
adc
push
mov
aas
mov
add
repnz
push
adc
xchg
outsb
cmp
aaa
push
push
pop
cmpsb
mov
cmc
test
icebp
ja
and
jb
jmp
jp
pop
jg
mov
lret
mov
xchg
int3
adc
icebp
add
mov
mov
mov
popf
mov
cs
push
push
dec
push
mov
ljmp
xor
jb
fstl
pop
stos
lahf
xor
les
aad
jge
jmp
jno
dec
in
adc
lock
sbb
outsb
jmp
dec
xor
fstpt
sub
mov
sub
fildl
jb
jg
jecxz
jg
mov
jle
fnstcw
ret
fmull
mov
dec
mov
sub
pop
xchg
adc
mov
sub
aas
ja
pop
pop
aad
add
repz
xor
jno
jle
in
movsl
or
push
popf
pusha
les
pop
sub
jb
xchg
xor
rorl
sub
sub
or
movsl
dec
das
ret
lods
and
cmp
jnp
in
mov
ds
roll
sbb
int3
mov
push
pusha
mov
int3
sub
lods
cmpsb
mov
pop
adc
jb
pinsrw
push
inc
inc
in
xor
movsl
fdivrl
dec
mov
pop
sahf
stos
xchg
or
pop
and
aas
mov
out
push
lret
inc
in
ret
iret
adc
pusha
add
fcmove
xchg
loope
pushf
inc
inc
mov
lods
test
icebp
xchg
dec
cltd
push
das
xlat
roll
pop
push
xor
mov
incb
push
inc
or
call
ss
je
mov
xor
stos
jle
inc
xor
pop
shrb
xor
jbe
adc
cmp
add
movsl
sub
xchg
fcoml
jmp
sbb
lock
mov
jne
out
and
leave
icebp
rorb
leave
lcall
fidivrl
adc
or
out
adc
inc
mov
add
sub
ss
fstpt
jmp
inc
jo
fsubs
jp
inc
pop
dec
mov
jl
sub
push
les
push
daa
inc
daa
inc
and
push
sbb
mov
xor
rcll
out
sbb
xorb
or
sbb
cmp
and
sbb
lea
xchg
or
pop
notb
mov
inc
push
xor
adc
das
dec
stos
in
xchg
xchg
mov
mov
adc
lods
dec
cld
mov
ljmp
cmp
push
cmp
or
es
stc
inc
int
rcrl
xlat
outsb
scas
int
pop
scas
outsb
shrb
lret
fscale
daa
ljmp
lahf
xchg
and
pop
cmp
dec
enter
lahf
mov
popa
loop
lds
pushf
arpl
cmp
sti
pop
repz
add
dec
inc
sarb
filds
sub
sub
mov
push
sahf
push
jle
jne
mov
iret
mov
pop
leave
cmp
mov
nop
add
gs
adc
mov
mov
push
or
mov
adc
add
xchg
mov
inc
hlt
ja
fstpl
xor
and
xchg
fisubs
ret
pop
out
sahf
fimuls
adc
ljmp
aaa
or
ja
std
and
leave
cmp
mov
inc
adc
addb
lahf
push
mov
xchg
aad
mov
pop
mov
cmp
es
jmp
sti
xor
insl
add
cmp
gs
sbb
xor
test
scas
mov
inc
and
push
test
lods
mov
adc
xchg
lahf
dec
xchg
push
rcrl
adc
lods
mov
inc
xchg
enter
cmp
lods
shrl
dec
xor
leave
out
dec
mov
call
shlb
adc
mov
inc
call
mov
push
push
and
xchg
pop
lods
mov
push
fistpl
cmp
cmpb
jne
mov
cs
aas
lahf
mov
lods
sbb
shll
movsb
inc
inc
cmp
mov
dec
clc
ret
out
loopne
pop
fidivl
add
push
sub
xchg
insl
loope
inc
jbe
test
push
xchg
orps
movsl
sahf
mov
pop
nop
std
xorb
das
adc
arpl
and
aam
mov
pop
ret
sub
pop
dec
jg
pop
inc
mov
adc
inc
nop
xor
inc
ret
or
ja
in
pop
lret
aam
push
call
cmc
je
push
mov
vmovsd
movsl
retw
xchg
xor
outsb
sbb
push
jmp
pop
push
xor
mov
es
push
negb
add
jp
bound
jae
sahf
xlat
test
ret
arpl
repnz
sti
lea
aas
fwait
push
stos
insb
lret
cltd
sbb
hlt
jecxz
lcall
das
add
jl
sub
gs
leave
ret
pop
jg
gs
pop
push
aas
leave
adc
inc
xchg
aas
inc
push
ds
aad
fstps
js
faddl
sbb
add
ret
inc
bswap
or
mov
icebp
push
or
xchg
cmp
stos
push
nop
pop
dec
stc
dec
push
andl
push
cmp
mov
inc
stc
cmp
push
repnz
sub
out
or
mov
jnp
enter
jle
or
test
pusha
jge
pop
mov
sub
mov
xchg
inc
adc
iret
xor
push
jb
add
sub
jmp
out
faddl
loope
test
out
mov
adc
popw
sbb
dec
sbb
xor
inc
add
dec
cmpsb
or
ja
imul
call
mov
movsb
sbb
inc
pop
jle
subb
cmp
filds
loop
cld
inc
rorl
pop
push
aam
inc
jno
pop
xchg
dec
push
cmp
std
or
mov
or
cmovle
test
jno
push
mov
in
scas
jmp
loop
push
xchg
xchg
loopne
xchg
push
out
incl
mov
lods
inc
cmp
xchg
inc
cwtl
mov
xor
push
fcompl
xchg
dec
xor
xor
nop
mov
or
inc
mov
adc
sub
or
xchg
add
or
mov
aam
mov
xchg
xchg
and
push
imul
lcall
xor
lods
enter
adc
dec
daa
stos
lods
xor
inc
adc
or
repnz
mov
call
jne
adc
hlt
and
aaa
xchg
subl
inc
int3
adc
cmp
cmc
jbe
cmpsb
inc
dec
fimuls
pop
fwait
icebp
in
dec
aas
pop
xor
mov
lret
push
cmp
hlt
mov
cmp
iret
sub
push
xchg
dec
bound
sarb
pop
xchg
or
mul
mov
jg
dec
int
jns
aam
aam
dec
xor
sub
mov
pop
aaa
insl
fmuls
mov
dec
xor
sbb
push
and
movsb
daa
lock
nop
stc
sub
cs
jb
and
into
push
ja
loope
push
mov
and
shr
test
push
xchg
aaa
out
cmpsl
aaa
mov
xor
and
inc
je
sbb
mov
add
xchg
leave
inc
das
add
pop
adc
or
pushf
pop
pop
repnz
xor
pop
in
outsb
les
cmp
imul
test
pop
shlb
aaa
adc
mov
lods
fnsave
ss
jg
out
adc
lea
mov
mov
pop
or
cmc
mov
xlat
pop
or
nop
inc
jae
lods
cvtpi2ps
xor
fcom
leave
leave
push
cmpsb
das
mov
dec
mov
test
pop
loop
inc
pop
sub
into
inc
rcll
int
pop
sbb
loop
mov
arpl
in
mov
push
mov
jp
inc
xor
int
imul
dec
xchg
jne
outsl
test
xchg
mov
lea
add
mov
cltd
mov
fisttps
inc
pop
mov
jmp
and
push
or
test
pop
mov
sbb
dec
mov
daa
jns
sub
dec
mov
outsb
or
and
rcll
dec
popa
outsb
push
mov
rcr
std
andl
rcll
sbb
sub
fwait
aad
lret
xchg
outsl
aad
fidivrl
aas
imul
add
mov
adc
pushl
arpl
test
xchg
sbbb
cwtl
xchg
sbb
loopne
push
or
out
pop
icebp
push
testl
xor
aad
sbb
xchg
test
mov
ret
dec
adc
mov
push
leave
lahf
scas
insl
sbb
rorb
jnp
loope
iret
cmp
pop
cltd
lcall
shrb
push
aas
pushl
ret
adc
jno
imul
jmp
mov
addb
scas
das
dec
movsb
sbb
and
cli
mov
xchg
add
mov
inc
xor
fucomip
testl
inc
add
loopne
mov
das
push
mov
clc
arpl
out
lret
cld
pop
jb
movb
sbb
insl
xor
sub
scas
cli
dec
xlat
mov
and
and
addl
xchg
fbld
push
pop
jb
mov
pop
jle
jbe
insb
stos
push
mov
xor
imul
push
pop
insb
ja
dec
hlt
mov
mov
insl
lret
loope
hlt
sbb
pop
out
popa
inc
jle
xchg
repz
mov
jb
fldt
leave
ds
push
lods
aam
into
lods
and
xchg
mov
mov
fnstenv
pusha
mov
test
push
shll
test
into
inc
mov
mov
shr
dec
lds
xchg
pop
mov
mov
rclb
jmp
call
and
outsl
das
loop
into
stc
imul
adc
push
rorb
mov
int3
stos
pop
xchg
loopne
mov
mov
cmp
add
dec
les
mov
xor
mov
dec
mov
push
sub
in
inc
das
aas
inc
addps
push
std
cmc
mov
aam
jmp
and
jl
enter
cmp
paddusw
mov
xor
repz
pushf
mov
pop
adc
loope
hlt
lea
and
mov
aad
xor
dec
xchg
xlat
aaa
mov
nop
mov
add
xor
xchg
mov
or
jno
inc
and
or
clc
loopne
add
lret
call
push
and
sbb
das
addl
jne
cmp
mov
mov
pop
jmp
insb
lret
dec
cmp
mov
xchg
ret
test
and
mov
fldenv
mov
arpl
mov
dec
in
dec
lret
inc
stos
fidivs
or
add
enter
fdivrl
inc
nop
push
fdiv
sbbb
fists
pop
insb
cld
adc
aad
inc
lret
rcll
out
pop
pop
push
mov
pop
fmul
les
test
fstps
sub
xchg
out
xlat
jge
pop
lret
loope
test
lcall
adc
fidivl
dec
or
adc
or
sub
sbb
push
or
sub
test
hlt
jno
lock
dec
mov
and
add
repz
sbb
out
jne
and
fcmovne
mov
in
bswap
and
out
inc
mov
loopne
pop
and
add
sub
repnz
mov
jge
add
rcr
mov
out
into
mov
cmpl
push
into
mov
dec
push
in
dec
or
andl
data16
mov
loopne
push
pop
xchg
and
push
sbb
cmp
mov
or
inc
inc
cmpl
mov
test
jnp
lea
mov
std
mov
jno
inc
sar
repnz
cmc
stc
repz
lock
leave
mov
test
add
mov
and
sbb
sub
ja
int3
int3
mov
sbb
mov
outsb
mov
outsb
aas
pop
dec
repz
xchg
clc
sarb
or
inc
test
ljmp
cmpsl
dec
push
das
jbe
std
insb
fisttps
mov
xor
push
sbb
add
adc
push
mov
loop
push
add
pop
decl
arpl
sbb
insl
iret
push
loopne
sbb
xor
xor
pop
mov
and
daa
sub
in
sarl
int
sbb
inc
add
pop
or
sub
es
inc
mov
inc
pop
add
pop
push
mov
insb
movsb
mov
cld
sub
lods
rcl
sub
stc
pop
or
sbb
xor
mov
jle
pop
mov
pusha
jne
scas
mov
scas
mov
out
adc
arpl
mov
inc
sbb
cmp
xchg
dec
daa
xor
lahf
daa
aaa
pop
push
test
push
xor
mov
pop
das
inc
sub
sbb
add
daa
ds
nop
call
adc
xchg
fidivs
outsl
or
fwait
sub
lahf
and
jne
xor
into
out
stos
push
dec
mov
jae
aad
xor
lds
jecxz
dec
mov
jle
fisttpll
sti
mov
daa
dec
popf
subb
mov
enter
in
dec
jns
aaa
xchg
aas
xchg
cmp
rclb
inc
lods
xor
inc
jg
dec
ja
pop
push
fdivl
movb
xlat
sti
sbb
subb
ret
lock
int3
push
push
mov
sub
or
in
or
repnz
fists
jnp
sub
lcall
je
cmp
adc
and
clc
rcrl
mov
ret
insl
jno
or
movsb
stos
call
inc
lret
into
dec
cs
xchg
imul
jle
push
dec
sbb
std
mov
inc
xchg
pop
test
inc
pop
xchg
je
cs
or
in
xchg
add
imul
shrl
lods
fisubl
fnsave
mov
jne
push
cwtl
rol
test
mov
loope
inc
stos
inc
pop
mov
cmp
in
cli
add
mov
lods
cmc
or
mov
mov
js
sti
int3
pop
xorb
cmpsl
add
push
sbb
js
fnsave
sub
ss
jb
sahf
jl
lret
fisubrl
sbb
mov
lods
jnp
mov
mov
jg
pop
and
mov
or
sbb
pop
or
fucomi
xchg
sub
repnz
mov
popf
sub
fwait
push
fs
cltd
repz
ret
inc
dec
add
dec
arpl
mov
mov
inc
pop
cmp
enter
jmp
adc
test
add
jl
xchg
jecxz
mov
insb
mov
fs
icebp
or
and
insb
lods
push
cmp
cmp
cmpsl
push
cltd
cmovae
pop
es
xchg
adc
fbld
xchg
jge
xor
xor
push
jmp
loopne
mov
ljmp
loop
push
sub
mov
sbb
xchg
int3
inc
jne
cwtl
je
es
cmp
and
rorb
dec
dec
data16
push
push
mov
xchg
gs
lret
fnstcw
jl
inc
push
and
das
pop
shlb
sbb
xor
push
xor
push
pop
add
or
shl
imul
mov
inc
mov
xor
enter
out
negl
jmp
inc
mov
aam
sti
out
cmp
mov
movsb
rcrl
movsb
cmp
sbb
dec
ds
out
and
ficompl
and
xchg
dec
xor
pusha
mov
stc
mov
ds
sub
fs
and
stos
shl
in
repz
sbbl
hlt
adc
shl
push
mov
dec
sub
iret
lea
imul
mov
mov
fistpll
sahf
mov
pop
inc
scas
xor
xor
inc
addr16
sti
xchg
shrl
out
lods
sar
mov
and
cmp
mov
movsb
add
sub
pop
xchg
je
mov
cmp
adc
das
push
nop
aad
pop
gs
inc
repz
mov
or
ss
jmp
sahf
adc
movsb
lret
sub
sub
inc
push
jmp
insb
sahf
sahf
xor
out
and
push
mov
mov
outsb
mov
xlat
mov
mov
lea
jl
arpl
inc
sub
jae
cmp
pop
fcoml
push
jo
inc
popa
int3
clc
xchg
and
jns
inc
lods
lods
and
cltd
shll
mov
lret
subl
push
aas
pop
int3
ja
jo
call
mov
insl
push
xchg
dec
inc
cli
cwtl
jnp
add
sahf
pop
shll
mov
and
lcall
sbb
add
cmp
dec
iret
fmulp
push
mov
mov
xor
cmp
sub
stc
mov
mov
shrl
xchg
push
iret
not
mov
fnstenv
mov
aam
inc
mov
jno
cmpsb
adc
mov
sbb
and
ffree
fdivl
dec
cs
mov
in
push
inc
dec
inc
mov
fldl
push
xorl
js
dec
and
gs
sbb
rcrl
aas
or
bound
push
cmp
jnp
xor
xchg
add
pop
cmp
pop
jb
lcall
adc
iret
pusha
mov
neg
adc
mov
or
adc
mov
mov
sahf
data16
xchg
lcall
pop
enter
stos
push
gs
in
or
pushf
mov
subb
out
pop
adc
push
addb
xchg
mov
andb
fs
pop
cs
das
faddp
insb
scas
xchg
je
dec
adc
stc
inc
sahf
call
mov
or
jmp
mov
stos
bound
dec
adc
push
out
ret
pop
fdivs
xchg
add
cmp
rcll
addr16
sub
loope
jle
dec
movsl
ljmp
movsb
enter
push
jg
push
inc
arpl
fwait
xchg
sbb
sbb
xchg
sbb
loope
rclb
push
in
lods
and
pop
mov
mov
xor
pop
adc
jae
jmp
inc
std
daa
test
mov
aam
xlat
inc
nop
jnp
xor
inc
push
mov
jb
scas
cwtl
xchg
dec
lret
ja
cmpsl
stc
xchg
adc
xor
loope
cmp
negb
add
lret
sbb
xchg
enter
pop
jae
fucomi
dec
pop
mov
pop
adc
daa
dec
adc
pop
cld
lret
fistl
sub
insl
dec
lahf
push
notb
mov
dec
ss
addr16
out
shl
fdivr
inc
sti
fbld
mov
pop
lahf
pop
enter
int
or
mov
jbe
mov
mov
pop
dec
mov
sbb
xorl
cmp
xchg
enter
insl
inc
sbb
nop
inc
sub
mov
and
das
aam
lock
jns
xchg
or
pop
ret
call
push
test
aad
pop
dec
sub
xor
std
push
in
sbb
ds
movsb
int
mov
out
push
xorb
ret
ret
sbb
jno
movsl
inc
push
jmp
aas
inc
ja
dec
or
movsb
xlat
enter
xchg
mov
jle
and
jae
sub
or
push
push
adc
imul
insl
xor
lock
sub
rclb
aam
loope
xchg
loope
test
mov
jbe
or
mov
and
adc
clc
mov
xchg
cmp
push
test
lods
xlat
inc
loope
scas
add
adc
js
rcrl
cld
das
cmpl
test
and
jne
cmp
xchg
in
and
int
cs
cltd
aaa
lret
sub
lret
insl
imul
int
and
stos
popa
jmp
das
push
push
movsb
add
sbb
mov
in
fdivrs
js
std
cmc
and
pop
push
rorb
xlat
repnz
mov
movsl
repnz
lock
pop
fsubrl
xlat
nop
jp
out
pop
sub
xchg
es
push
push
ret
je
shll
lds
lea
xchg
or
es
aas
push
mov
call
cmc
out
dec
push
jno
xchg
mov
das
sbb
adc
cmp
or
jl
mov
jle
dec
out
sbb
and
es
stc
inc
dec
sub
push
inc
xor
cmp
push
mov
jae
jbe
loopne
cld
divb
pop
xchg
mov
cld
and
idivl
arpl
xchg
add
in
lds
dec
out
lahf
test
jb
and
scas
dec
xor
mov
dec
pop
push
xor
adc
adc
pop
mov
xor
adc
imul
popl
out
add
xor
das
in
add
jmp
cmpsb
gs
pop
pop
push
jae
je
or
jmp
jge
sbbl
lods
aas
loop
lods
ds
adc
xor
pop
movsl
pop
inc
mov
test
cmp
add
mov
or
dec
jnp
icebp
dec
sub
outsb
insl
sar
int3
pop
lds
mov
mov
pop
fildll
in
pop
mov
rcrb
lahf
add
xor
xchg
xchg
movsb
cmp
gs
sarb
lret
xor
xchg
pop
scas
out
mov
popf
arpl
or
fcomp
jecxz
aas
movsl
cs
inc
xchg
data16
stc
sarb
ds
movsl
mov
in
js
cmc
add
lods
dec
shlb
push
das
or
jbe
and
and
mov
or
sbb
aas
mov
mov
movsl
icebp
pop
and
ds
mov
repnz
outsl
and
repz
insb
pop
jbe
repnz
movsb
shrd
insl
negl
jl
fs
neg
xor
rcrb
add
add
stos
sub
mov
pusha
jno
dec
stos
dec
add
lods
out
and
add
add
adc
push
cltd
xor
push
push
sbb
lret
mov
imul
gs
and
xchg
inc
loop
dec
dec
lea
rol
sub
xor
clc
cs
xor
je
push
int3
xor
inc
push
aam
in
adc
lea
jns
dec
repz
cmp
push
mov
nop
cmp
adcb
pop
cmp
xchg
nop
adc
adc
or
mov
push
dec
in
jns
das
and
mov
test
lds
fildll
mov
cmpb
mov
sbb
push
or
repnz
fs
inc
hlt
mov
cld
dec
pop
lret
sahf
mov
mov
mov
fisubl
cli
shll
out
cmc
inc
outsb
and
add
gs
icebp
repnz
xchg
outsl
movsb
loopne
idivb
adc
cmpsl
rol
xor
shrb
insb
jp
sahf
bound
dec
movsl
ljmp
cltd
mov
xor
dec
cltd
push
pop
subb
outsb
adc
lods
add
stos
inc
cmc
fisubrl
stos
aad
dec
sub
or
pop
mov
or
jbe
push
popf
adcb
adc
xchg
xchg
outsl
aad
orl
pop
test
cmp
int
pop
pop
mov
sbb
and
loop
or
xor
or
push
or
daa
loope
cs
icebp
aaa
sub
sarb
push
and
outsl
sti
push
or
fs
push
xor
or
lret
nop
cmp
hlt
repz
or
pusha
mov
cltd
fnstsw
out
ret
xchg
mov
mov
addr16
sarl
gs
or
and
lea
loop
dec
xor
or
or
adc
outsl
loopne
pushf
scas
jp
add
outsb
dec
lcall
xchg
adc
fistl
cmpsb
xor
inc
popa
adc
pop
push
pop
push
in
jge
pop
xlat
xchg
repz
mov
mov
mov
ds
xchg
xor
add
mov
arpl
cmpsl
arpl
adc
mov
loopne
outsl
push
sub
and
or
imul
push
push
push
stos
fwait
sub
es
jbe
gs
lds
roll
push
add
jle
fsubl
test
lahf
divl
push
jo
mov
adc
stos
sbb
test
xor
inc
cmp
leave
addr16
pop
xor
push
cwtl
out
scas
sub
xchg
mov
mov
in
repz
stc
adc
dec
cmpsb
xchg
std
or
mov
sbb
test
adc
adc
ss
xchg
adc
dec
add
add
pop
xchg
nop
sub
shr
outsb
test
add
push
pop
insl
add
dec
or
sar
push
mov
mov
sbb
jp
jg
lret
ss
fildll
xor
rorb
jmp
daa
add
cmc
xchg
idivl
lret
std
aad
dec
ja
inc
flds
pop
lock
add
repz
adc
or
icebp
cltd
add
sub
insb
pop
cli
neg
push
mov
sub
inc
dec
mov
inc
sbb
jne
adc
xchg
test
cmp
push
inc
inc
cmpsl
pushf
sbb
cmp
pop
dec
xor
mov
pop
adc
cmpsb
cs
push
das
ss
cmp
or
icebp
inc
dec
xchg
icebp
xor
test
test
repnz
cmp
out
jne
jp
push
sub
mov
push
adc
pop
loopne
push
dec
mov
adc
inc
ftst
ss
jp
sbb
jmp
rclb
push
cltd
adc
imulb
iret
arpl
repz
pop
and
xlat
lds
rcl
mov
xchg
and
stc
cmp
mov
inc
cmc
inc
or
cltd
insb
fnstenv
xchg
in
cmc
pop
dec
push
out
lods
ss
adc
jg
jne
mov
mov
push
cmp
fisttps
lret
dec
iret
inc
inc
mov
ljmp
mov
movsb
fadds
and
lahf
or
push
mov
insl
rcr
pop
or
test
mov
mov
cmp
push
xchg
mov
test
stc
cmp
xor
jae
lods
setno
push
xor
mov
inc
mov
enter
popf
jle
andl
addb
push
sub
test
jns
add
push
inc
orb
pop
adc
inc
in
sbb
repnz
fidivl
mov
das
xor
sub
push
adc
mov
and
cmpps
xchg
mov
mov
outsl
lahf
push
pop
aam
cmp
mulb
sti
sub
movsl
call
inc
push
movsl
ljmp
xor
add
repnz
xor
push
or
stc
sbb
jae
lret
dec
enter
test
cmp
add
cmpsb
sbb
mulb
hlt
sbb
pop
sbb
inc
mov
test
cwtl
cld
jg
inc
mov
stc
push
or
lea
popf
inc
fcomps
ja
mov
std
arpl
inc
in
in
jae
mov
inc
adc
lock
jecxz
jnp
pop
xchg
push
cmp
xchg
mov
pop
jns
jecxz
adc
mov
daa
push
jg
push
rol
xchg
xchg
push
push
pop
mov
cwtl
scas
push
and
lcall
fldt
cwtl
iret
scas
push
xchg
jno
aas
cmpsl
sbb
insb
ja
xchg
out
outsl
xor
xchg
cmpsl
rorb
out
xor
xchg
sub
mov
adc
mov
imul
cli
push
inc
je
xlat
adc
dec
xchg
cmc
fildl
ret
sbb
aam
lods
sbb
push
jnp
idivl
inc
shl
jne
int3
adc
loope
push
cmovno
dec
jns
out
call
nop
sbb
inc
adc
sub
dec
jne
mov
shlb
xor
push
mov
cmp
push
pop
inc
pop
imul
dec
cmpsl
sbb
push
mov
mov
inc
outsl
addl
test
sysexit
mov
icebp
adc
xchg
pop
in
invd
dec
push
jb
add
lret
or
popa
lods
je
mov
icebp
mov
imull
cld
push
lcall
es
adc
dec
adc
das
ret
ds
push
inc
lahf
push
aaa
scas
mov
int
mov
push
je
cmpsb
fs
push
or
sub
js
add
es
fcomps
mov
das
std
xor
cltd
xor
or
dec
cmpsb
imul
xor
fnsave
and
test
pop
inc
sbb
pusha
cwtl
xorl
rcll
inc
xor
xchg
outsl
dec
add
sbb
xor
cmpsl
ljmp
clc
dec
cwtl
jmp
cwtl
loop
loop
jp
fstpl
sbb
dec
roll
out
push
pushf
sub
cmpsb
push
lods
add
pop
js
dec
xchg
repz
adc
dec
push
pop
ret
xchg
jbe
stos
xchg
push
mov
sbb
testl
cltd
jp
in
aam
lock
push
or
cmp
sbb
mov
shr
adc
js
icebp
outsl
fsubrl
push
sbb
jl
cmpsl
rcrb
negl
xor
cmc
and
lds
inc
mov
or
jg
adc
dec
push
popf
mov
dec
lret
mov
lahf
icebp
jno
aas
lcall
cmpsb
rorb
sarb
pop
std
fs
mov
pop
rol
fwait
push
add
dec
push
addl
pop
cmp
lock
pop
sti
negb
jmp
mov
repz
push
jne
and
xor
stos
mov
lahf
push
andl
pop
or
scas
jmpw
or
fdivrs
idivb
cmp
aam
lock
fnsave
push
iret
sub
push
jg
pushl
adc
jno
dec
es
mov
in
jns
adc
push
aam
arpl
lods
cmp
and
imul
mov
jo
xor
aaa
insb
int3
pop
mov
call
in
shrl
add
sub
addr16
xor
outsl
push
sbb
inc
out
mov
inc
and
inc
pop
cmp
jge
adc
popa
xchg
icebp
sarl
jb
aas
cmp
int3
mov
js
stos
xchg
fwait
cmp
xchg
jno
fsubr
sub
inc
in
gs
ds
mov
in
aam
fcomps
outsb
imul
call
xchg
lods
push
pop
xor
cmpsb
imul
push
inc
fcomps
lret
insb
adc
cwtl
lcall
mov
xor
push
mov
es
xchg
sbb
aad
shrl
out
js
mov
add
sub
fcompl
rolb
dec
movsl
cmpb
sarl
sbb
mov
and
notl
push
out
mov
shrb
orb
addr16
jo
orl
out
xor
hlt
jns
add
mov
and
xchg
xorl
mov
inc
dec
adc
mov
js
mov
sarl
ljmp
mov
cmp
or
mov
in
rcl
enter
jno
adc
jecxz
gs
insl
pop
sbb
inc
push
mov
daa
cmpsb
push
jo
adc
sbb
lods
pushf
fisubrl
call
add
int
mov
adc
out
mov
sbb
mov
inc
and
pop
and
sbb
push
or
cmp
jb
imul
mov
aaa
imul
lahf
xor
add
aaa
fnstenv
sbb
xor
pusha
dec
nop
leave
mov
sbb
jl
or
loopne
jmp
cmp
shll
or
ret
int
lds
aas
popa
aaa
mov
cs
jmp
adc
mov
adc
mov
stc
add
jge
insl
jne
scas
fldcw
lret
lock
jb
fstl
in
and
mov
jle
add
repnz
push
lahf
lds
and
jl
sti
cmp
outsl
mov
push
dec
mov
jae
iret
pop
or
push
and
aam
xor
fdivrl
mov
stos
push
out
ds
lcall
push
mov
xor
test
mov
jl
daa
lcall
push
mov
xor
fwait
and
movsb
jb
scas
iret
cmp
insb
add
inc
movsb
in
std
jge
sub
dec
push
and
push
in
jnp
lods
ss
mov
fisttpll
loopne
lods
cmp
mov
mov
or
subb
inc
pop
fists
cmp
icebp
std
fsubl
sub
ja
add
sub
test
or
sahf
xchg
sub
adc
das
inc
cli
add
xlat
ja
xchg
cmpsb
dec
jge
mov
add
xor
or
pop
dec
sti
jnp
insl
int
enter
fimuls
jle
pop
pop
out
push
cmp
lds
lea
cmp
repnz
mov
push
or
sub
mov
push
jns
cs
cmp
scas
mov
inc
jmp
pop
jp
in
setp
jmp
push
pop
inc
sbb
lahf
bound
cmc
test
dec
loope
mov
dec
and
test
mov
dec
daa
aas
push
pop
xchg
out
push
inc
cmpsl
in
test
mov
cli
pop
add
sbb
adc
pusha
pop
sub
imul
xchg
mov
pusha
lahf
lods
sahf
cs
fimull
or
lahf
sub
out
or
aaa
pop
cmp
xchg
loopne
xchg
mov
imul
add
xor
cmp
xor
lods
pop
outsb
adc
sbb
dec
and
lret
outsl
dec
outsl
int3
cmp
mov
pop
out
mov
loop
fistps
ret
fnstsw
mov
lcall
jecxz
stos
lahf
ret
pop
push
test
lock
inc
pop
shl
jbe
aam
mov
add
jb
leave
testl
or
in
out
cmpb
mov
cmp
sahf
jne
mov
cmp
repnz
xchg
dec
out
cmp
xchg
sbb
and
mov
dec
cmp
adc
data16
cwtl
mov
icebp
xchg
dec
jmp
std
cmp
aas
push
xor
sti
mov
imul
sti
push
iret
loopne
jle
cmpsb
pop
mov
in
xor
aas
rdmsr
sbb
icebp
cs
test
jmp
outsl
mov
ficoml
and
ret
lea
mov
loopne
xchg
lret
fildll
stc
pop
lds
jg
lahf
jge
fwait
and
fiadds
mov
insl
jecxz
add
sbb
sbb
adc
in
mov
inc
shll
sbb
icebp
jmp
into
call
cmp
call
fsub
push
mov
call
cli
in
lock
gs
xchg
paddsw
pop
ret
das
mov
nop
sbb
lret
and
mov
mov
cld
cmp
lret
jne
loopne
ret
imull
cmp
adc
mov
xor
or
jle
adc
dec
ds
nop
and
pop
pop
push
roll
fisttpll
out
pusha
vpslld
pop
or
mov
xlat
lea
inc
mov
mov
jl
repz
push
es
and
mov
sbb
insl
test
dec
mov
sub
sbb
and
fnsave
sub
mov
push
es
push
test
cmp
test
clc
add
mov
loopne
rcrl
ret
sub
faddp
sbb
rcll
hlt
inc
dec
cwtl
push
mov
inc
sbb
inc
lcall
sahf
mov
gs
fisttps
and
sub
inc
decb
sbb
cmpsl
xchg
mov
push
mov
sbb
push
inc
jb
sub
pop
loop
mov
mov
mov
push
push
test
stos
push
mov
cli
cmp
push
mov
sub
sbb
mov
inc
pop
bound
movsb
imul
rorb
loope
sub
cwtl
imul
mov
filds
inc
push
movq
jbe
lret
sub
lret
or
cmp
mov
mov
outsl
cltd
xor
mov
and
in
xchg
cmp
mov
ja
in
jmp
pop
jmp
pop
pusha
sub
or
aaa
pop
fs
mov
div
mov
pop
movsl
in
insl
pop
and
hlt
insb
scas
mov
sub
pop
movl
sub
pop
outsb
and
pop
jmp
sub
xchg
push
aas
dec
inc
addr16
and
lret
movsb
enter
std
sti
sbb
ret
loopne
dec
or
mov
and
les
imul
add
jl
sbb
jp
sub
jle
adc
out
sarl
push
push
int3
xor
add
loopne,pt
dec
repz
call
idivb
sub
jne
loopne
fimuls
roll
loop
in
arpl
mov
call
into
sub
mov
pop
out
je
xchg
adc
push
popf
shrb
rcrb
pop
cwtl
pop
cmp
andb
and
push
out
xchg
mov
testb
imul
hlt
inc
push
xchg
xor
push
mov
int3
pop
push
hlt
iret
loopne
jle
xchg
mov
or
out
sbbl
sbb
pop
push
add
dec
std
mov
adc
or
dec
mov
sbb
xchg
mov
adc
and
mov
int3
mov
jl
test
mov
jl
je
inc
das
dec
pusha
or
add
iret
and
jmp
mov
cltd
xchg
push
pop
movsl
clc
ffree
mov
add
xor
mov
test
and
inc
xor
mov
push
sbb
mov
imul
pop
test
dec
jmp
sbb
jns
test
push
mov
scas
lcall
xor
movl
mov
outsb
fwait
or
mov
jg
inc
dec
cmp
adc
adc
cmp
js
fcmovnb
cwtl
testb
push
or
mov
jmp
mov
jge
adc
es
xor
push
in
lcall
mov
std
xor
pop
mov
gs
enter
frstor
sub
cld
mov
pop
xor
pushf
aas
dec
pop
pop
movsb
call
cmp
out
nop
cld
push
and
or
lret
and
pop
xchg
in
jb
test
push
pop
mov
outsl
add
aam
les
icebp
in
cmp
dec
sub
stc
mov
jno
pushf
cmp
lds
sar
lea
lahf
clc
lds
lea
mov
cmp
xor
popa
ja
cmp
xchg
sbb
lds
nop
mov
jmp
jmp
mov
lock
mov
push
sbb
xchg
iret
scas
mov
jmp
push
andl
gs
fcompl
scas
stos
movsl
fistl
mov
add
push
xchg
ja
jmp
mov
stc
pop
pop
inc
inc
xchg
push
adc
or
or
hlt
mov
jo
sub
pop
push
adc
rcrl
mov
add
std
dec
mov
sub
or
andb
into
int3
lds
js
push
std
les
cmp
dec
shrb
cmpsl
sub
cmp
movb
out
mov
jge
push
addr16
xor
xor
xchg
movsl
push
js
fwait
hlt
push
repnz
sbb
or
es
sbb
cvttps2pi
add
inc
xor
jp
mov
sbb
enter
sbb
push
test
outsl
shll
inc
lret
mov
xor
dec
cmc
inc
pop
mov
out
add
inc
jb
adc
mov
mov
cmpl
xor
dec
pop
or
in
pop
loopne
jns
rclb
xchg
lods
rorl
rep
jb
outsb
jl
jb
sub
xor
xchg
je
xor
cmpsb
xchg
pusha
mov
into
push
test
sarl
xor
pop
push
shl
mov
aam
out
pusha
mov
adc
cltd
or
cmp
sbb
dec
inc
out
sub
adc
aad
outsl
cmp
lcall
adc
insl
popf
into
push
mov
dec
pushf
and
xchg
cltd
pop
xchg
and
xchg
jl
jb
push
fildl
imul
ljmp
xlat
dec
sub
mov
mov
hlt
adc
nop
cmc
sahf
lods
leave
jo
les
das
imul
jecxz
pop
push
or
sub
mov
mov
mov
test
mov
mov
inc
xchg
mov
inc
pop
cli
rorb
or
subl
dec
jl
cmpsl
arpl
addr16
jns
pop
in
and
ss
gs
and
stos
fists
fisubs
sub
sbb
jo
cld
lds
inc
lds
mov
inc
jle
lahf
xlat
xchg
lea
int
xchg
xchg
cmovbe
add
mov
shrb
lcall
sbb
mov
fisubs
mov
push
cmp
testl
jo
or
or
push
fildl
jo
push
add
insl
xor
stc
pop
push
aaa
jb
dec
popf
xlat
sti
jne
aad
es
add
push
imul
jg
xchg
out
in
cmpsb
jmp
push
and
dec
dec
jle
mov
mov
mov
jge
int
xchg
aam
dec
cmpsb
icebp
pop
add
fsts
out
push
in
add
in
cmc
mov
bound
fwait
inc
push
loop
sbb
iret
lret
cmp
mov
int
sub
push
pop
fcoml
mov
or
push
jno
or
push
fcompl
inc
mov
sbbb
sub
inc
lahf
pop
mulb
loop
xchg
xchg
or
flds
loope
dec
mov
lea
jp
add
subl
les
xchg
mov
fisttps
xchg
and
ja
mov
cmp
movsl
mov
into
stos
xchg
pop
shlb
movsb
insl
js,pt
lock
xor
out
fidivs
mov
test
cwtl
in
lret
arpl
movsb
jmp
xchg
jl,pt
arpl
test
fldt
aas
adc
aad
sbb
push
xchg
or
ret
push
cmp
cwtl
into
mov
or
mov
loop
out
loopne
stos
dec
lret
jb
adc
or
dec
xchg
xor
ret
mov
jbe
cli
mov
insl
mov
in
fdivs
daa
inc
loopne
mov
fldl
cmpsl
or
std
pop
xchg
inc
mov
xchg
aas
mov
lock
sub
sbb
sbb
les
lds
ljmp
ja
jecxz
pop
addr16
or
pop
xor
fiaddl
sub
std
mov
fsubrl
and
pop
mov
out
adc
xchg
mov
cmp
lahf
loopne
cmp
or
in
xchg
movsb
push
fimuls
les
mov
xchg
add
stos
repnz
adc
cwtl
push
cmp
jno
test
leave
aad
pop
sbb
jmp
xchg
pop
cmp
aad
cmp
sbb
scas
cmc
data16
jbe
sub
adc
fs
mov
and
jg
dec
push
xchg
std
mov
mov
push
cli
std
mov
daa
pop
inc
inc
sbb
cld
les
or
and
inc
adc
lods
mov
add
or
idivl
sahf
adc
in
ljmp
jb
mov
pop
fstl
test
orl
sahf
and
xchg
test
or
push
xchg
jb
xchg
cmp
pusha
cld
ljmp
sar
add
stos
rcll
pop
lret
xor
jnp
aas
sub
fadds
xor
xchg
lods
pop
inc
push
shlb
pushf
and
fsubrp
pop
mov
cmp
sti
movsb
imul
inc
insb
adcb
arpl
add
dec
xchg
xchg
jno
fcomps
mov
mov
sub
cmp
cmp
sarl
es
aas
sbb
sarb
xchg
fidivl
fdivs
add
lock
and
xor
loop
mov
mov
imulb
pop
xor
shrl
es
jo
push
stos
push
icebp
jl
fdivrs
or
push
les
push
pop
and
fwait
pop
lods
mov
sbb
repnz
dec
push
xor
test
xchg
loopne
jnp
das
dec
inc
adc
sti
push
movsl
fildl
shr
popf
and
push
mov
xchg
xor
inc
clc
pop
sub
mov
in
out
push
sub
xor
ljmp
jns
sbb
andb
dec
insb
xchg
aas
mov
cwtl
or
cli
nop
fnsave
dec
aad
dec
lods
mov
sbb
and
testb
dec
mov
lock
xchg
lods
mov
xor
mov
push
out
mov
daa
dec
xlat
fs
add
jae
pop
ljmp
lds
call
sbb
incb
add
xchg
xor
add
out
sub
dec
ja
dec
test
inc
or
sbb
xor
xor
pop
fsubr
movsb
add
cmp
fisubrs
aas
or
enter
loopne
imul
and
xor
insb
out
stos
sbb
sbb
out
pusha
push
mov
add
and
sbb
xchg
popf
out
mov
roll
fldenv
fisubrl
add
leave
cmp
adc
jnp
add
lds
pop
sub
scas
mov
inc
xchg
mov
sub
push
jmp
xorl
mov
sbb
adc
clc
sahf
ret
ss
sbb
lahf
das
push
dec
lock
ja
inc
fdivl
push
xchg
lods
ret
out
loope
and
fldenv
roll
aad
scas
cmp
in
mov
and
xchg
mov
nop
pop
outsb
cmp
not
dec
push
inc
lods
loop
mov
jb
and
add
sbb
mov
fsubl
in
shrb
push
mov
inc
imul
sbb
jne
mov
sbb
or
sub
pop
push
addl
enter
and
in
xor
ficoms
subl
cmp
mov
aad
cmc
stc
jo
shll
mov
adc
and
aas
inc
or
add
loope
adc
xchg
cld
dec
adc
iret
sub
leave
push
mulb
cmp
dec
push
insb
sbb
in
xor
leave
sub
adc
jmp
sub
sub
in
pop
sbb
jo
mov
jns
ret
inc
and
shlb
inc
add
cmp
push
sbb
mov
in
inc
inc
jl
mov
mov
sbb
jnp
sahf
sbb
sti
bound
cmp
movsl
mov
xor
inc
dec
cmp
popf
sub
and
lock
pop
xchg
stos
mov
mov
xor
movsl
adc
xor
jl
mov
add
inc
arpl
push
pusha
xchg
repz
mov
adc
sbb
mov
cmp
push
mov
sti
jp
test
add
xor
push
jnp
and
jno
out
sarl
jecxz
cwtl
jo
sub
mov
jnp
cmp
mov
dec
dec
js
fisubl
mov
mov
test
insl
or
in
mov
call
orl
cmpsl
inc
jno
ja
fdivl
iret
mov
jo
xchg
orb
hlt
incb
mov
lods
imul
ljmp
pop
push
cwtl
call
sarb
outsb
inc
adc
call
call
ljmp
sti
jp
sbb
sub
xor
movsbl
push
add
gs
inc
clc
push
push
pusha
sbb
in
push
jbe
mov
idivl
rorl
pop
fsts
and
jp
outsb
xchg
pop
data16
in
jnp
push
out
jmp
cmp
xchg
pop
add
xlat
mov
xor
sbb
push
loop
cmp
hlt
insb
xlat
dec
cltd
test
faddp
lds
sub
rclb
jl
or
je
js
je
or
scas
xchg
in
roll
imul
mov
orb
or
and
ret
mov
aaa
popa
in
lds
mov
pop
fistpl
cmp
adc
sub
mov
shlb
ret
stc
lahf
xor
std
sbb
xor
bound
or
leave
out
or
mov
pop
adc
leave
sbb
les
fstps
daa
arpl
cmp
jne
ror
jno
mov
repnz
mov
shlb
sub
jg
cwtl
pop
imul
push
into
jle
xlat
clc
sarl
bound
sub
dec
shll
pop
xor
out
mov
jmp
add
stos
pop
popf
loopne
xlat
test
mov
and
loop
jmp
pushf
fsubs
jmp
fs
and
sbb
push
sub
jo
hlt
addr16
rclb
stc
iret
mov
fisubrl
sahf
lret
adc
jle
dec
scas
add
sbb
xchg
outsl
sub
dec
les
jl
enter
xchg
mov
testb
daa
and
cmc
bound
pop
cwtl
subb
mov
dec
lahf
clc
inc
push
mov
pusha
pop
cmp
xor
mov
and
push
xlat
mov
xchg
push
shll
out
dec
push
int
cs
in
pop
dec
cmp
xchg
int3
mov
pop
mov
pop
cmpsl
jp
inc
push
scas
xchg
add
ret
jae
mov
cmp
or
ret
cli
inc
mov
mov
jnp
fcom
aaa
inc
and
int3
cld
and
sub
shrl
idivl
jle
inc
mov
mov
and
and
scas
pop
sbb
popa
arpl
mov
push
fisubs
test
jmp
test
arpl
imul
mov
outsl
jns
mov
mov
repz
pop
jmp
in
out
notb
cmc
shlb
inc
paddusb
data16
loopne
or
daa
sbb
mov
sbb
rolb
push
and
nop
orl
sbb
fcmovnu
sub
addl
dec
lret
bnd
jle
insl
ss
mov
movsb
in
outsb
dec
jnp
mov
ret
jno
cltd
sub
pop
ret
mov
lods
cmc
xor
sub
xchg
icebp
test
inc
out
lahf
roll
in
or
outsl
dec
or
and
sub
and
fldenv
cmpsl
ret
lods
int
sbb
add
adc
jnp
jo
push
push
outsl
xorl
push
mov
sarl
adc
push
std
rorl
dec
pushl
push
mov
stc
je
cs
or
xchg
xchg
xor
fsubs
jbe
dec
rcrb
in
das
std
mov
imul
data16
jns
stc
and
xor
jp
jge
mov
xchg
jnp
sbb
xchg
pop
out
or
adcl
outsl
popa
xor
iret
jb
and
mov
pop
and
xchg
ss
jae
cmp
or
sar
xchg
mov
jge
push
daa
sti
sbb
lods
mull
nop
cmp
jnp
mov
cmp
lods
cltd
mov
and
jmp
push
mov
jl
outsb
pop
inc
sti
cmpsb
sbb
in
push
aas
push
add
adc
pop
aam
pop
push
add
cmp
mov
mov
loope
mov
out
shll
movsb
lcall
mov
or
mov
in
cmp
dec
inc
jo
loop
pop
mov
push
inc
sbbl
xchg
pop
pop
xor
xor
mov
mov
push
dec
stos
pop
shll
xor
cmc
or
and
les
test
shl
xor
xlat
imul
testl
int3
out
idivl
inc
mov
fs
shll
adc
shlb
pop
cwtl
or
movsw
aam
icebp
imull
inc
xchg
mov
inc
mov
xor
leave
xor
pop
into
or
mov
jecxz
cmp
mov
and
orb
pop
pop
adc
push
mov
jg
shl
sbb
ret
bound
mov
inc
push
setae
ljmp
inc
push
movb
das
je
pop
sbb
inc
sti
test
mov
sub
add
lods
loope
jae
scas
lods
sub
sbb
rol
loope
mov
clc
test
lahf
pop
cmp
jp
sbb
pop
mov
push
dec
inc
leave
addr16
inc
les
inc
js
test
out
cwtl
outsl
push
pusha
fwait
repnz
rcrl
adc
or
out
pop
push
inc
sub
fwait
idivb
jo
cmp
jl
mov
pop
pop
pop
pop
and
aaa
jno
pop
rcr
jecxz
jmp
je
jnp
mov
stos
scas
aas
sbb
lret
pop
pop
aaa
je
sbb
push
cmp
sbb
ficoms
pop
fsubrs
out
xchg
mov
adc
int3
fst
cmpsb
inc
push
sbb
adc
mov
andb
xchg
subl
in
insb
out
insb
dec
mov
add
add
in
js
mov
rcll
imul
adc
fbstp
inc
inc
xchg
je
xor
pop
mov
loopne
pop
jp
adc
out
sbb
test
dec
inc
mov
scas
bound
cltd
and
sub
outsb
jp
mov
and
mov
xchg
ret
sbb
and
adc
mov
or
pop
mov
jl
pop
cmp
into
int
sub
xor
ret
mov
lea
scas
add
stc
mov
sbb
div
mov
cmp
out
push
bound
mov
mov
push
outsb
das
push
push
loope
rclb
xchg
imul
jne
cmp
mov
lahf
xchg
sub
jb
sti
outsb
push
out
jge
dec
xchg
xor
sarb
push
das
mov
jo
sub
ja
xor
mov
pop
mov
in
aam
push
or
or
lods
movsb
out
loop
inc
inc
imul
nop
das
sarb
add
outsb
add
inc
js
xchg
test
pusha
mov
adc
pop
jecxz
dec
fisttps
pop
cli
jmp
stc
imul
call
mov
pop
ljmp
cs
inc
add
sahf
xchg
scas
adc
or
xchg
mov
pop
xchg
adcl
int3
pop
jbe
mov
push
cmpsl
or
jmp
xorb
xchg
fwait
enter
push
imul
adc
jmp
test
xchg
mov
push
cld
cwtl
add
sub
or
xor
xor
das
into
ret
mov
and
enter
sti
mov
out
repnz
jo
stos
add
jae
inc
mov
inc
mov
xchg
lidtl
cmp
int
aas
xor
fdivl
mov
call
in
jb
sub
ja
shll
sbb
mov
xchg
pushf
mov
xchg
inc
push
or
add
imul
mov
fucomip
inc
outsb
pusha
pop
jg
mov
ret
aaa
ret
and
mov
fwait
and
lret
adc
cltd
mov
inc
filds
jnp
mov
or
sbb
outsl
xchg
push
sbbb
sub
fisttpll
pusha
xchg
outsb
hlt
out
xchg
aas
fdivp
dec
stc
dec
jle
xchg
and
stc
lock
lds
mov
pop
lret
inc
enter
pop
test
fucomp
imul
sub
xor
or
add
js
xchg
loope
cmpsl
push
das
scas
push
jo
lods
push
leave
in
adc
sbb
icebp
adc
add
aam
enter
sarb
test
stos
scas
push
mull
mov
repz
ret
lea
insb
in
lahf
jp
psllw
mov
xor
ret
movsb
xchg
mov
jl
push
gs
xor
cs
or
outsl
shll
enter
mov
mov
lods
pushf
mov
mov
aad
sub
push
cmp
xchg
aaa
sub
add
xchg
sbb
pop
mov
push
testb
sub
test
call
scas
mov
mov
sbb
rcll
repnz
mov
into
xchg
mov
add
insb
testl
sub
xchg
int
adc
ja
push
daa
mov
jl
cli
lods
es
sbb
xor
jle
ret
cmpsb
xor
add
outsb
imul
pushf
into
leave
outsl
bound
rorb
xor
xlat
xchg
sub
xchg
je
cmpsl
mov
loopne
lods
sub
xchg
shr
sbbl
insl
mov
sub
incl
iret
lcall
pop
fstps
jge
dec
sub
pop
mov
loopne
mov
sbb
sbb
or
or
mov
enter
out
add
ret
test
mov
jae
push
jle
jmp
push
in
sahf
lea
es
inc
icebp
dec
imul
out
lea
sub
inc
adc
mov
in
inc
mov
xchg
fistl
jecxz
clc
stc
leave
sbbb
mov
mov
mov
xor
adc
and
push
adc
outsb
adc
xchg
std
mov
cmp
enter
ret
lahf
enter
lea
add
inc
js
dec
pop
pop
push
or
push
jne
xchg
push
lret
jne
ljmp
shlb
nop
xchg
lcall
movsb
jl
aas
mov
xor
es
cwtl
mov
das
insl
adc
pop
jle
and
sbb
xchg
fldcw
add
shlb
int
insb
inc
xchg
inc
inc
mov
mov
jno
aad
ss
les
sbb
mov
ds
jo
into
or
push
push
inc
adc
sbb
outsl
sub
sub
xor
xlat
icebp
ljmp
int3
loop
push
sbb
outsb
insb
dec
push
inc
sarl
mulb
adc
mov
sub
jo
je
sbbl
push
inc
shlb
sti
push
cmp
sbb
adc
loopne
push
fnstenv
jo
or
call
cmpsl
and
nop
pop
xchg
sbb
stos
cmp
scas
push
mov
or
jmp
sahf
imul
stc
adc
imul
int
push
in
fwait
xlat
in
inc
mov
hlt
xor
xchg
lea
adc
pop
call
add
flds
jae
lahf
roll
xlat
xlat
xor
add
inc
gs
in
add
jbe
jno
int
xorl
movsl
pop
add
or
lahf
mov
in
movsl
sub
sbb
adc
jne
sub
in
add
pop
or
cmpsb
pop
insb
jb
jbe
test
enter
negb
pop
stos
add
out
stos
pop
inc
mov
sub
ljmp
pop
icebp
fldl
jb
loope
shlb
xchg
mov
pmulhuw
or
xchg
push
inc
mov
addr16
mov
push
inc
mov
mov
or
jmp
cmp
sub
cli
or
mov
inc
insb
lock
pop
or
or
scas
flds
add
cld
cmp
pop
sbb
repnz
jecxz
cmp
mov
xchg
xor
loop
pop
sub
mov
pop
bnd
scas
loopne
adc
mov
shrb
lods
adc
mov
in
push
adc
hlt
test
jmp
mov
mov
adc
and
aaa
outsl
mov
in
pop
stos
pop
cmp
pop
and
pop
ret
ss
xor
xlat
xchg
cmp
arpl
cmc
movsb
insb
jae
mov
cs
jg
jno
jge
or
mov
inc
jno
rorl
push
push
in
add
adcb
jg
je
hlt
sti
imul
movsl
icebp
iret
cmp
jecxz
shlb
in
rcrb
aad
pusha
mov
pushf
mov
push
or
outsl
or
adc
push
arpl
sub
sbb
adc
pop
inc
adc
mov
addr16
nop
in
lahf
xchg
imul
mov
idivl
push
sbb
addb
and
insl
dec
addb
sti
dec
sahf
pop
out
push
mov
scas
loopne
add
sarl
mov
dec
cmc
repnz
popa
in
push
in
jl
sub
fsubp
push
pop
lret
pop
inc
pop
xchg
fsubrl
call
push
test
mov
sti
fisubrl
pop
inc
int3
test
cltd
add
out
iret
adc
pop
stc
aas
je
or
sub
mov
mov
and
loope
mov
push
sbb
xchg
fsubrl
sarb
jl
cs
mov
inc
push
out
mov
cmp
xor
inc
lea
ljmp
mov
xchg
add
or
jecxz
jnp
inc
lock
push
arpl
or
jne
popa
out
stos
mov
push
sbb
insb
div
test
repz
push
stc
popf
sar
fcomps
call
movsb
cmovs
add
out
xchg
out
js
push
mov
sub
sub
pop
or
xchg
or
dec
inc
inc
jo
ret
roll
cmpsl
xchg
cmp
jmp
rorb
mov
hlt
in
and
aad
mov
mov
adc
xchg
shl
mov
sub
mov
in
insl
inc
punpckhwd
fbstp
imul
in
pop
pushf
pop
cs
add
mov
lret
push
iret
scas
xlat
cli
or
xchg
je
dec
imul
sbb
hlt
add
clc
xlat
push
addb
cmp
xchg
cmpsb
sahf
mov
shrl
push
sbb
ja
loop
out
imul
dec
push
sub
inc
int
repz
add
lcall
sub
pop
jb
inc
sbb
clc
sahf
loopne
jb
adc
cmpsb
test
cmpsl
push
xchg
jg
xor
lock
mov
push
lds
rcl
or
xchg
sub
cmc
test
shll
in
add
pop
add
fdivs
push
xor
lock
aam
and
popl
fdivrp
xchg
jno
mov
mov
push
pop
into
push
pop
push
fadds
enter
xor
sarb
and
fcomi
lock
in
xchg
ret
jb
rcr
dec
lret
pop
dec
and
push
cmc
mov
pop
fwait
cmp
and
in
das
push
scas
mov
sti
and
xchg
or
aad
cmp
idivb
mov
mov
xchg
lock
cmp
imul
insl
outsb
push
lods
popf
mov
add
cmp
ss
lods
xchg
pop
mov
pop
sbb
cmpl
call
xchg
jno
jecxz
xchg
test
mov
scas
push
inc
cltd
sub
addr16
lock
or
mov
or
fs
mov
xor
cld
iret
fwait
xor
push
mov
mov
xor
cmc
cmc
sub
cs
push
shrb
sbb
lods
mov
jbe
les
movl
push
out
dec
mov
ja
repnz
icebp
adc
inc
mov
fwait
outsl
mov
aas
dec
mulb
jno
dec
add
or
les
icebp
movsl
cs
inc
jo
cmp
mov
imul
dec
push
push
mov
adc
insb
fsubrs
idiv
sbb
dec
pop
leave
in
mov
addr16
data16
iret
insl
notb
in
jle
leave
aaa
add
xor
push
in
mov
and
loop
data16
jb
cwtl
lds
adc
push
ljmp
inc
xchg
push
idivb
out
mov
mov
addr16
mov
pop
push
adc
xor
xor
lret
aaa
std
cmp
iret
hlt
push
sub
pusha
xchg
push
push
cmp
xchg
adcb
add
xor
les
mov
ret
xchg
jl
mov
in
fsubrp
hlt
xchg
pop
in
insl
xor
mov
pop
cld
popa
push
notl
push
cmp
push
sub
adc
mov
cmc
dec
sub
cmpl
adc
repz
fnstsw
mov
jecxz
cli
dec
inc
dec
xchg
repnz
loopne
lret
dec
icebp
cwtl
sub
cmpsl
in
mov
pop
lcallw
fwait
ss
or
pop
fsub
popa
lcall
fstl
pop
sbb
jmp
xchg
adc
cmc
xchg
les
movsb
jge
fdivrp
les
pop
xor
iret
loopne
test
and
sar
jbe
insb
adc
xchg
cmp
ret
add
sbb
pop
inc
xchg
jns
or
out
lahf
mov
aad
dec
mov
jl,pn
test
sbb
fisubs
push
sbb
sahf
test
xchg
clc
popa
lret
ljmp
rorb
add
imul
popa
pushf
or
push
push
sbb
jp
push
pushf
lods
call
leave
nop
and
push
mov
inc
pop
dec
add
dec
cmp
int
mov
into
daa
cmp
scas
cmp
adc
iret
adc
subb
mov
leave
int
push
push
dec
lahf
ret
daa
js
repnz
push
pushf
push
jo
jnp
cmp
mov
jp
imull
sbb
adc
cmp
mov
aam
into
lds
pop
mov
movsb
jl
sarl
jnp
rcll
jo
mov
dec
lret
shrb
dec
adc
out
or
pop
cmp
retw
outsb
dec
jae
fdivl
adc
xchg
sub
jo
push
cmc
andb
mov
out
cmpsl
test
mov
mov
fistpl
pop
aas
sub
mov
add
movsl
packssdw
xor
clc
jmp
mov
popf
bound
ret
xchg
andb
mov
sub
gs
xchg
xorb
ss
sub
inc
int
inc
dec
aaa
push
push
push
and
out
lahf
jns
ret
fucomp
pop
xchg
insl
ds
or
popf
fcompl
int
pop
adc
and
sbb
scas
inc
add
insl
int
cs
call
inc
pusha
bound
and
into
pop
mov
mov
loop
cs
push
push
out
and
ljmp
ds
dec
les
stos
inc
cmp
xor
inc
movb
pop
aam
dec
outsb
xor
jmp
movsl
or
ds
mov
in
xlat
xchg
lahf
outsb
jecxz
sbb
sub
add
fsubrl
pop
dec
lds
sub
mov
loopne
mov
add
inc
iret
push
fidivrs
lock
adc
push
and
out
fisttpll
movsl
roll
in
shl
loopne
lods
pop
xor
jp
push
mov
in
in
jne
jae
push
sarb
xchg
or
mov
sbb
jg
jl
fs
push
stos
iret
cmp
cli
out
cs
or
sbb
es
fistps
mov
add
inc
dec
pop
test
dec
loopne
mov
cmpsl
lods
in
mov
test
pop
mov
addb
mov
das
jmp
fmull
mov
push
cmp
xchg
vmptrld
test
scas
cmpsb
sbb
gs
push
scas
mov
orl
lret
movb
in
jb
pop
add
mov
fisubrs
sub
popf
test
popf
mov
aaa
dec
push
addl
push
dec
in
xchg
popa
push
ljmp
movsl
inc
aaa
xlat
inc
testb
in
mov
jl
add
movsb
lock
outsl
aam
xchg
push
mov
jnp
mov
jmp
dec
mov
loope
cmpsb
lods
cli
test
addr16
add
lahf
cs
mov
push
push
pushw
and
scas
sub
int3
divl
out
ror
and
cwtl
push
adc
xor
test
mov
dec
idivb
pop
gs
rcrl
sarl
xor
sub
loope
out
mov
dec
into
inc
ss
lahf
xlat
adc
adc
js
jns
lcall
sbb
inc
out
lret
inc
pop
popa
rcr
sub
or
jae
aam
inc
adc
adc
sbb
js
inc
lock
cltd
data16
or
ret
into
push
dec
push
xchg
in
jmp
or
out
add
ffreep
in
test
out
shlb
std
fisubrl
xchg
xor
inc
adc
jle
outsb
lret
lret
mov
cltd
sub
out
test
mov
and
or
sub
add
fbstp
jbe
xchg
ret
mov
pop
xor
aas
das
shr
xchg
fmull
and
sub
loopnew
dec
in
cmp
test
add
adc
xchg
enter
adc
sub
sbb
sub
mov
cmp
mov
sbb
in
mov
bound
lock
cltd
xchg
inc
leave
xchg
test
ds
out
sub
movsbl
inc
jns
add
mov
or
push
and
add
pusha
loop
add
xchg
lahf
mov
movsl
cmpsl
jns
ror
cmp
movsl
xlat
inc
and
xchg
stos
mov
jmp
out
clc
sbb
clc
jne
push
and
mov
popa
pusha
test
rcr
ds
jns
or
nop
hlt
mov
inc
jecxz
lret
xchg
lret
mul
jg
repz
mov
lods
adc
dec
or
imul
xchg
jmp
in
or
pop
shrl
les
xchg
imul
cmp
inc
or
gs
mov
jbe
movsb
push
mov
add
mov
lahf
sbb
imul
stos
movsb
sbb
cld
mov
push
xchg
dec
pop
mov
jp
mov
loop
imul
dec
pop
add
inc
xchg
pop
jns
lret
icebp
or
cwtl
pop
push
or
inc
inc
popa
cs
dec
cmpsl
lds
aam
in
js
or
popa
int3
fidivs
lcall
mov
xor
cld
sbb
cmp
jge
jl
repz
mov
push
add
loope
data16
sub
dec
in
dec
outsb
int3
les
pop
lds
inc
push
pop
aaa
pop
mov
fiaddl
push
in
ret
jp
ret
sbb
adc
sti
xor
jmp
jbe
lods
lods
int
lds
pop
or
sbb
out
or
sub
pop
push
mov
xchg
push
mov
jb
inc
cmp
xchg
and
push
repz
jne
sarl
hlt
inc
jno
lret
lahf
pop
shrl
arpl
cmp
jmp
cmpsb
clc
fisubl
mov
add
push
outsl
loopne
xchg
fcmovnu
aam
pop
fisubl
call
xor
mov
xor
in
pop
sub
pop
sub
sar
mov
loope
test
jns
sahf
cmc
daa
repnz
mov
leave
lea
out
pop
test
std
lds
fcmovnbe
add
fildl
xor
add
aas
xchg
arpl
sub
push
rcrb
dec
cmp
lret
out
pop
mov
mov
mov
or
or
enter
cmp
xor
and
xchg
fldl
fildl
inc
lahf
adcl
or
icebp
inc
stc
and
cmp
jge
cs
cmp
jb
int3
insb
adc
adc
enter
es
fildl
cmp
lret
es
dec
pop
clc
in
adc
add
and
xor
push
sbb
sub
cli
stos
add
jmp
and
lcall
cltd
aam
shlb
push
fistps
outsl
cmp
cwtl
loopne
sbb
ret
adc
mov
fwait
ja
cli
push
push
loopne
xchg
cmp
xchg
dec
jp
push
aam
movsl
out
cli
das
rclb
mov
mov
cmpsl
bound
shrl
fiadds
ret
and
sbb
pop
jo
xlat
and
sbb
inc
add
repz
or
push
jg
enter
push
data16
icebp
shll
cmpsl
stc
das
ljmp
and
dec
mov
adc
shlb
shlb
jge
fisubrl
and
jno
fdivr
or
or
stos
add
in
or
inc
decb
fnstsw
sbbl
mov
sub
jo
mov
dec
sbb
outsb
in
insl
or
pop
test
call
and
lcall
push
into
mov
add
pusha
and
push
mov
pop
push
pop
sub
cmp
popa
imul
lcall
add
mov
imul
jbe
push
out
pusha
push
or
cmpsl
adc
lahf
fidivs
pop
mov
dec
inc
mov
std
daa
imul
adc
xchg
pop
xchg
jle
das
dec
mov
push
adcl
sahf
jb
or
popf
stos
roll
cli
dec
mov
xchg
divb
add
dec
stos
cmp
ss
xchg
pop
insl
mov
aas
ret
push
inc
inc
xchg
arpl
pushf
lahf
or
lods
in
aad
fsubs
rorb
cwtl
loopne
or
cmp
cli
into
leave
rorl
jnp
fsubrl
sub
xlat
jmp
mov
inc
or
jo
clc
add
test
mov
outsl
enter
lcall
mov
in
scas
mov
out
imul
pop
stos
sbbl
xor
mov
aad
bound
fnstcw
push
lcall
es
je
cmpsb
pop
aam
popa
push
imulb
or
jp
mov
test
mov
mov
push
dec
xor
mov
imul
cli
add
ret
jb
push
pop
xlat
push
mov
stc
out
push
cltd
mov
mov
pop
daa
xor
jecxz
or
mov
test
push
sub
cmp
lea
insl
xor
pop
enter
mov
lods
iret
push
stos
clc
pop
and
out
adc
ja
inc
std
pop
sub
es
push
xor
ja
pop
xchg
xchg
movsl
iret
lret
popa
adc
cltd
das
xchg
int
out
sbb
rolb
dec
movsb
std
cli
mov
mov
iret
int3
sub
cwtl
dec
xchg
pop
mov
ja
sbb
mov
xchg
loopne
nop
pop
push
rclb
adc
je
mov
hlt
sbb
xchg
cli
sub
aad
adc
mov
hlt
leave
cmp
inc
rolb
shlb
jle
push
fs
out
popf
jecxz
cmc
imull
sub
and
daa
std
pop
gs
fcoms
pop
push
test
data16
and
les
dec
test
and
mov
inc
sbb
lret
nop
pop
sbb
sarl
cmp
enter
cli
dec
lcall
into
ds
xor
imul
xor
out
mov
sub
nop
cmp
sbbb
push
adc
insl
shll
xor
inc
or
mov
andb
es
aaa
mov
adc
pop
sbb
shr
imul
jns
les
mov
push
fcmovne
fildl
inc
pop
sti
sbb
into
insl
ss
imul
ret
aaa
add
inc
daa
sbb
fidivs
sbb
mov
sahf
ret
subl
dec
mov
sarb
in
lret
pop
testb
aaa
mov
mov
iret
mov
pop
std
inc
mov
loop
adc
fwait
jb
pop
add
mov
mov
mov
sub
dec
fisubrs
clc
push
or
jnp
and
andb
jno
mov
mov
aaa
fsubr
pop
ss
inc
jmp
mov
nop
lret
or
jecxz
cmpsb
cmp
push
jae
loope
aam
iret
aaa
lret
shll
loope
outsb
int
cs
lret
push
push
or
rorl
hlt
gs
lahf
lret
stc
cld
popl
mov
jbe
das
sahf
dec
pop
xchg
dec
pop
aad
insl
cwtl
in
cmp
lods
mov
ja
sbb
je
push
clc
xchg
pusha
icebp
sbb
adcb
ror
dec
jmp
loope
inc
and
in
ja
xor
mull
lds
jl
dec
jns
dec
or
jmp
inc
iret
add
xor
or
stos
cs
insl
push
addb
lods
jmp
push
mov
mov
pop
movsl
add
pop
outsl
push
jne
push
jbe
test
push
pop
popa
mov
mov
cmp
movb
jg
inc
pushf
outsl
fucomi
test
inc
jne
test
cwtl
mov
sub
out
repz
add
dec
sbb
cltd
sub
mov
out
das
pop
push
pop
lret
pop
lret
testb
jp
divb
pop
gs
dec
enter
popa
xor
daa
cmp
inc
in
fstps
cli
xchg
notb
andl
std
or
addr16
pop
jbe
xchg
inc
mov
jnp
push
cmp
mov
rcll
jno
dec
aam
orb
add
xor
adc
in
cmc
mov
out
pop
lods
das
pushf
mov
aas
and
dec
and
xor
outsb
add
add
ds
inc
roll
mov
ja
repnz
dec
test
push
cmp
sub
mov
dec
scas
inc
cmc
push
fmul
pop
cwtl
pushf
inc
cld
cltd
pop
scas
arpl
or
push
or
loop
sahf
xchg
pop
movl
sbb
xor
pop
cmp
mov
jo
jae
and
mov
sub
lods
aad
jne
adc
cmp
lods
jmp
mov
idiv
adc
cwtl
ret
jo
outsl
loope
xor
iret
jo
insl
mov
xchg
sti
pusha
jmp
inc
xchg
fs
clc
fwait
jno
repnz
ret
and
popa
pop
xchg
adc
sub
es
dec
in
lock
add
popa
jbe
add
or
jg
jnp
rcll
rorl
sbb
cmpsl
sub
out
jno
orb
test
test
in
mov
sti
lret
mov
lret
fwait
xchg
xchg
stos
mov
repz
pop
int
mov
dec
pusha
xor
movsl
fs
xchg
mov
jle
dec
shl
push
dec
xor
sbb
or
add
dec
xor
arpl
and
lret
sbb
adc
push
fsubrl
inc
xchg
rolb
ret
dec
inc
add
clc
sub
mov
sbb
sti
adc
sahf
sbb
leave
in
loopne
dec
mov
cmpsb
adc
hlt
and
dec
enter
iret
sub
les
jae
lds
mov
adc
inc
out
push
insl
jp
or
dec
mov
cmp
cwtl
jnp
cli
mov
inc
pop
adc
pop
mov
outsl
cli
xor
imul
and
push
pop
push
in
cmp
xor
add
repz
sahf
rclb
adc
outsb
nop
syscall
cmp
daa
or
or
dec
push
mov
fstpt
shll
and
push
loop
in
and
jp
fimull
arpl
cmp
pop
push
xchg
out
mov
inc
les
stos
mov
subb
xchg
outsl
pop
jmp
inc
mov
addl
cwtl
push
sub
sub
fwait
out
push
movsb
cmp
mov
lods
jae
adc
dec
test
mov
rorl
std
sub
xor
sbb
dec
cmp
fnsave
lock
in
negl
jb
into
mov
dec
or
inc
icebp
xor
cld
and
mov
and
jbe
fs
jg
push
and
ljmp
fisubs
mov
fbld
add
rcll
mov
scas
mov
clc
out
insl
out
inc
xor
outsb
flds
cli
adcl
push
ffreep
push
fdivr
int
ret
into
dec
pusha
mov
icebp
mov
nop
mov
xchg
xor
pop
add
in
jmp
cmp
arpl
adcl
outsb
shl
jne
pop
sub
fcom
add
adc
add
stc
adc
ret
sti
mov
sbb
push
xchg
and
mov
xor
jne
xchg
test
outsb
xor
pusha
lds
xor
les
adc
cmp
orl
stos
cmp
fisttpl
imull
jmp
stos
mov
push
push
fneni(8087
adc
add
pop
sub
jecxz
dec
and
vmread
push
dec
pop
mov
aam
rcrb
jmp
repz
int
outsb
pop
jg
loop
cltd
dec
dec
pop
bound
dec
repz
int3
gs
insl
fistps
out
pop
fs
outsl
insl
shr
cmpsl
call
inc
pop
cmp
mov
mov
adc
mov
in
repnz
pop
aad
xlat
std
icebp
pop
push
scas
add
mov
and
mov
jmp
shlb
insb
pop
leave
js
mov
out
int3
lcall
enter
insb
pop
xchg
popa
lret
icebp
cmp
jns
mov
cwtl
push
test
cmp
cmp
in
orps
mov
sbb
add
mov
stos
js
arpl
cltd
cmp
inc
stos
mov
gs
ljmp
icebp
nop
jno
cmpl
fs
cld
push
jecxz
js
mov
lods
inc
mov
popa
orb
jp
xchg
pop
pop
push
test
mov
ja
and
push
lret
aad
test
mov
das
cmp
xor
mov
jmp
mov
scas
adc
ss
xlat
inc
push
movsl
loope
stos
add
cmp
or
dec
pop
or
sbb
adc
xchg
push
sbb
stos
add
adc
inc
or
mov
fistpll
ja
popl
adc
xor
or
jae
int3
jecxz
mov
adc
out
or
jge
adc
push
iret
les
in
in
push
sub
mov
mov
sbb
adc
fnstenv
mov
jo
xor
add
lret
out
ret
lods
cmp
imul
in
xor
js
cmc
add
imul
inc
mov
and
cmp
cmp
jp
sub
jnp
push
jo
cli
pop
or
inc
ja
cmc
filds
icebp
repnz
push
jecxz
mov
test
push
adc
pop
dec
lcall
cmpsb
or
iret
into
out
aas
pop
push
repz
outsb
in
xchg
test
aaa
mov
orl
roll
gs
cmpsb
dec
dec
cmp
in
jno
xchg
mov
add
in
sbb
dec
and
stc
and
jbe
fildll
inc
and
sub
push
enter
xchg
pushf
inc
push
aaa
in
das
cmp
int
mov
lret
out
lahf
or
dec
xchg
icebp
ljmp
aad
popl
xchg
dec
mov
jp
out
push
xchg
scas
roll
xlat
clc
mov
add
mov
js
ja
push
inc
fucom
and
imul
hlt
push
enter
es
jne
push
dec
loope
pop
ror
pop
aad
or
or
in
mov
lods
pop
fldl
aaa
adc
in
pop
movsl
cld
mov
dec
push
mov
sub
repnz
negl
rcll
popf
mov
mov
push
orl
xchg
repnz
add
adc
jae
jbe
idiv
push
dec
stc
jp
pop
push
aad
xchg
inc
popf
popf
lods
test
or
jb
fsub
mov
lcall
jbe
shll
inc
sbb
cmp
testl
test
push
push
lds
adc
aad
jp
inc
ret
and
ja
pop
and
mov
out
or
int
add
jge
sub
loopne
out
inc
arpl
dec
fld
lods
mov
ret
in
pop
mov
jae
push
roll
mov
mov
imul
js
outsb
iret
sub
jge
mov
sub
rorb
insl
in
or
inc
ja
xor
sbb
mov
hlt
xor
jmp
mov
movb
stos
test
nop
enter
daa
jbe
dec
cmpl
out
lahf
insb
lahf
mull
xchg
stos
das
cs
in
hlt
jne
mov
mov
aad
shlb
movsb
insl
mov
fwait
je
jecxz
outsb
xor
out
mov
icebp
pop
stos
mov
fmull
add
or
cld
ds
push
lret
insb
push
ficompl
mov
int3
mov
add
mov
lods
movb
cwtl
adc
movsb
aam
in
pop
push
mov
out
inc
fwait
std
xor
mov
nop
incl
dec
xchg
dec
insl
test
loop
xlat
es
adc
mov
add
cmpsb
xchg
sahf
sbb
mov
xchg
jns
mov
pop
push
clc
sysexit
pop
adcl
jnp
into
add
jg
adc
leave
sub
sub
xor
add
add
sahf
jmp
jne
pusha
add
pop
add
jno
push
mov
add
jno
mov
mov
nop
std
xorl
and
roll
mov
daa
lock
xchg
sub
lret
xor
xchg
sti
fimull
jb
out
jmp
ficoml
lcall
and
lahf
pop
rolb
rcr
pop
jge
std
sbb
nop
and
fcmovbe
or
dec
out
and
shlb
js
fwait
and
mov
lret
sbb
cmpsb
adc
mov
out
pusha
repz
adc
shrb
xchg
xchg
dec
das
loope
mov
enter
les
mov
sub
je
xlat
iret
or
pop
test
cmp
xchg
dec
sub
dec
aad
jnp
xlat
clc
mov
lea
fs
push
jno
or
test
xchg
sahf
pusha
pop
arpl
adc
jo
add
xor
mov
xor
push
mov
incb
and
int
jne
cld
mov
mov
cmpsl
cmp
ret
test
enter
addb
bound
aad
dec
pop
mov
fs
mov
leave
lahf
nop
addr16
in
or
mov
xor
les
out
inc
outsl
pop
sarb
ds
scas
bound
scas
aam
mov
mov
test
fstps
ret
gs
or
xchg
fs
addr16
daa
imul
js
ror
sahf
sub
ss
cmc
cmc
add
jae
fwait
mov
in
pop
dec
adc
dec
dec
faddp
lods
or
xchg
popa
or
int
sub
out
movsb
inc
call
inc
mov
loope
sbb
stc
or
cmc
xchg
push
adc
sbb
sub
enter
jno
ja
adc
push
movsb
popf
jl
jl
imul
lret
testb
loop
das
or
dec
sub
mov
movsl
ljmp
arpl
adc
cmpsl
imul
xchg
testb
mov
jg
gs
lds
mulb
sbb
mov
mov
jg
mov
dec
pop
in
add
pop
dec
sbb
sti
or
bound
mov
pop
xchg
inc
push
in
xchg
xor
mov
imul
cmp
lahf
push
mov
fs
mov
pop
and
xchg
xchg
in
mov
inc
jle
insl
cmpsb
ror
arpl
shl
loop
dec
jecxz
inc
gs
pop
je
jecxz
ja
and
jl
jl
aam
mov
mov
mov
mov
out
mov
pop
dec
push
sbb
cltd
push
pop
mov
cmp
mov
iret
aam
and
imul
scas
imul
in
xor
lock
dec
adcl
inc
adc
aad
scas
xchg
popa
mov
adc
int
fisubrs
cmp
fistpl
ja,pt
shll
pop
inc
add
bound
out
in
fdivrl
mov
imul
mov
sub
popa
mov
andb
mov
push
test
dec
mov
fdiv
inc
faddl
mov
adc
je
or
xchg
sar
adc
jmp
jecxz
mov
dec
lcall
and
negb
dec
adc
xor
movsb
push
pusha
add
mov
adc
jb
pop
mov
aas
adc
xchg
out
shll
inc
dec
divl
notb
loopne
mov
dec
sbb
push
mov
mov
xchg
dec
aas
xor
mov
xchg
push
add
je
sbb
sub
shlb
add
and
pop
nop
mov
cmp
sub
aaa
pop
sbb
or
mov
push
imul
mov
leave
xchg
lods
flds
inc
stos
mov
outsl
mov
loop
and
je
into
or
add
xchg
push
xor
push
adc
arpl
inc
pop
fbld
lret
dec
out
repnz
or
mov
and
jle
in
outsl
mov
fstpl
xor
in
cmc
rorb
in
jnp
sub
pop
outsb
imul
jmp
pushf
add
dec
bound
out
insb
mov
mov
ret
mull
mov
mov
adc
loopne
dec
xchg
adc
pusha
push
rcl
inc
push
dec
mov
jmp
mov
mov
cmp
jno
cmp
rolb
mov
xor
xor
dec
or
addl
call
mov
jl
repz
push
xchg
int3
ljmp
pop
ja
mov
fisubrs
or
dec
jae
scas
negb
fwait
imul
inc
mov
popa
and
pop
pushf
lds
push
mov
push
xchg
ror
repnz
and
les
mov
mov
xchg
dec
sub
xchg
jbe
add
loopne
lods
jae
dec
rolb
mov
sbb
xor
fisubl
mov
sti
ljmp
mov
addb
int
vandnps
sub
repnz
hlt
dec
loop
inc
jmp
jno
subl
jp
into
adc
ret
sub
stos
fs
je
xchg
lods
mov
ror
pop
int3
cmc
test
ficoml
mov
nop
xor
cmc
cwtl
mov
loop
xchg
lock
adc
cmp
sbb
add
cmp
jmp
loopne
leave
incl
lods
dec
inc
adc
cld
repnz
lret
xchg
fstpt
jge
out
mov
call
sub
mov
or
lea
jmp
jle
or
sbb
mov
repz
mov
push
mov
bound
lcall
ss
xor
enter
pop
in
cmp
and
gs
jns
in
je
shr
inc
rclb
gs
ss
sahf
mov
into
addr16
cs
inc
jecxz
fcomp
sbb
ljmp
lahf
insl
in
mov
out
aaa
or
push
jmp
movsl
push
call
sbb
pusha
sti
inc
out
pop
jns
inc
lock
rcl
push
clc
negb
roll
inc
dec
mov
jge
gs
lret
lret
sub
pop
pop
xchg
sub
dec
cmp
scas
sub
dec
push
movsb
fcmovb
daa
outsl
and
ret
clc
mov
add
lds
pushf
roll
mov
addr16
xor
jl
dec
jne
ja
pop
test
xor
out
xchg
loop
jno
and
mov
fcmove
or
or
inc
int3
ja
inc
cmp
cmp
sbb
jg
hlt
cmp
test
add
cmp
dec
and
mov
sti
xchg
sub
out
cmp
nop
out
mov
into
dec
in
inc
inc
rcr
jecxz
xchg
fdivp
add
int3
clc
add
int3
loope
insl
adc
dec
sub
orb
pop
out
ret
mov
sbb
movsl
and
fimuls
pop
push
cltd
cs
call
jp
and
sbb
fs
jg
out
cmp
push
fidivrs
mov
pop
das
jb
cmpb
loop
or
or
int
dec
outsl
sbb
xor
mov
push
test
jns
sub
pop
insb
sbb
sbb
loopne
popf
sbb
jmp
inc
in
outsl
ljmp
xor
loopne
sub
test
cmp
sub
jge
mov
lock
jmp
or
mov
lcall
mov
jle
enter
rolb
push
jg
addr16
xchg
mov
shlb
sahf
sub
nop
data16
loopne
cmpsl
imul
push
or
xor
js
lods
xchg
ret
sti
pop
cmc
inc
mov
push
stc
pop
mov
and
cmp
or
push
xchg
dec
sbb
push
mov
insl
dec
jg
fwait
push
adcb
int3
jb
jb
sbb
sbb
shrl
nop
sub
pop
shlb
jg
es
aad
adc
test
add
jmp
insb
inc
dec
bound
fmulp
adc
test
mov
das
add
and
and
jmp
addb
stos
lea
mov
or
arpl
dec
in
mov
push
cmc
and
into
xor
sub
call
jbe
mov
lret
dec
ljmp
decb
addb
es
or
push
shr
cltd
inc
push
mov
lock
jbe
lods
sbb
or
ds
add
sbb
mov
or
mov
or
repz
stc
rcrl
fbld
lret
shrb
fucomip
pop
xor
pushf
and
aaa
sbb
in
sti
lds
add
out
mov
jae
push
jbe
mov
sti
jecxz
cld
mov
cmp
mov
mov
push
jl
sub
outsb
dec
jne
and
adcl
jecxz
inc
loopne
and
nop
dec
mov
faddl
add
xor
mov
dec
pushf
outsb
lock
dec
imul
and
cmp
mov
pop
lea
adc
shll
cmc
xchg
inc
xor
nop
sub
jp
lret
insb
notl
push
inc
rcrl
ljmp
xor
out
out
and
mov
push
aam
dec
xchg
mov
push
repnz
pop
es
or
sub
jbe
lcall
rorl
int3
popa
ret
mov
or
icebp
sbb
out
lods
mov
lods
jmp
lret
into
jg
std
mov
insb
and
ret
nop
pop
aas
stos
shl
add
mov
jbe
shrl
cltd
stc
mov
sbb
mov
in
pop
into
cli
stos
jnp
mov
add
stos
scas
or
push
cmp
subl
inc
loope
jge
xchg
pop
cs
shlb
push
repz
xor
pop
cmp
fiadds
xor
mov
mov
mov
popa
testl
lret
pop
fisubrs
clc
sbbl
jg
hlt
and
inc
cmp
insl
mov
out
cwtl
movsl
sbb
ret
jae
xchg
data16
adc
shlb
imul
hlt
cmp
je
les
loope
inc
mov
jmp
in
add
push
dec
jno
lods
xor
xor
mov
rorb
push
cmpsl
test
pop
test
cmp
aaa
sub
push
loopne
sbb
insl
fmul
sbb
aam
xchg
inc
xchg
jmp
jle
ret
out
scas
imul
and
push
mov
addl
jmp
stc
out
lods
and
or
mov
es
imul
fldcw
jo
or
push
adc
arpl
pop
aad
aad
add
neg
mov
outsb
fidivrs
mov
adc
adc
pop
flds
mov
out
jne
mov
xor
mov
jnp
and
arpl
outsl
xchg
xchg
cltd
cmp
out
enterw
rcrl
push
push
cmp
test
shlb
mov
shlb
mov
add
insl
negb
push
addl
ret
adc
mov
fcoml
sbbl
shrb
rcrb
sub
bound
xor
in
push
and
test
push
shlb
sbb
lods
and
div
dec
xlat
push
loope
push
xchg
dec
jmp
fwait
ds
mov
xor
int
pop
imul
xor
sbb
xchg
jecxz
lgs
out
dec
in
sub
out
shrl
or
loopne
inc
pop
clc
mov
stos
cmp
xor
pop
cld
adcl
test
xorl
push
adcl
pop
add
push
orl
iret
sbb
movsb
roll
enter
mov
fdivl
sub
mov
add
pushf
es
xor
xchg
icebp
or
leave
sahf
inc
or
lcall
pusha
mov
sbb
stos
xchg
std
cmp
addr16
jmp
xchg
pop
xor
pop
js
or
testb
dec
xlat
lahf
mov
push
add
out
leave
arpl
fsubl
clc
iret
xchg
xchg
setne
mov
insl
jg
in
mov
or
mov
dec
repz
jns,pn
loopne
push
jo
inc
inc
loope
add
pop
dec
add
out
fisubrs
sub
pop
lret
stos
cwtl
mov
movsl
int3
inc
test
sub
shlb
xor
out
aas
int3
stos
or
fsubrs
and
and
stos
repz
push
pusha
jmp
cwtl
repnz
icebp
dec
mov
or
and
push
push
adc
adc
mov
jmp
mov
pop
and
inc
dec
test
jb
pusha
jp
pushf
int3
icebp
mov
shrb
pusha
sbb
sub
xorb
loopne
pop
mov
or
or
cmpl
adc
pop
pop
pop
scas
xor
or
cltd
push
mov
into
aaa
sub
and
add
xchg
arpl
nop
cmpsb
jae
jmp
loope
mov
push
xlat
cli
insl
shrb
iret
xor
push
push
repz
inc
sti
xchg
andb
mov
enter
js
pop
dec
out
push
mov
sbb
ret
hlt
fistps
jns
xor
xor
adc
adc
mov
and
lea
adc
out
aas
xlat
add
xor
mov
aad
stc
add
cmp
in
push
xchg
xor
pusha
mov
mov
add
das
mov
lcall
push
and
jmp
xchg
lds
lods
pop
sub
shr
shlb
mov
mov
daa
in
pop
pop
mov
and
xorb
mov
leave
mov
push
rcrl
into
lods
and
subb
mov
pop
adc
xchg
arpl
sub
and
inc
jle
rcrb
sahf
lods
sbb
aad
add
fstps
out
push
imul
ds
mov
aad
cltd
or
call
push
sbb
mov
cmp
outsl
nop
loop
cmp
xor
in
lret
jmp
add
xchg
loope
lret
push
inc
pusha
xor
and
cmpsb
xchg
xchg
pop
and
pop
leave
sub
xor
sbbb
lock
fimuls
pop
pop
mov
mov
mov
push
je
jae
outsl
mov
lds
nop
scas
add
mov
or
leave
inc
fcoms
mov
mov
dec
jmp
inc
stc
sub
pop
cli
std
leave
lea
mov
lock
movsb
dec
cld
sbb
inc
dec
pop
lret
push
add
xchg
cmpb
mov
adc
push
xor
stos
mov
iret
add
and
pusha
inc
les
ret
pop
push
cmpb
mov
inc
mov
xchg
jge
jae
push
sub
jae
imul
jecxz
or
dec
testb
repz
enter
orb
fistpl
push
cmp
lock
mov
hlt
push
xchg
dec
in
adc
sbb
mov
popa
sub
xor
incl
in
imul
inc
hlt
jecxz
mov
hlt
arpl
flds
add
int3
shlb
mov
mov
lds
cld
pop
jns
rorl
add
cli
loope
and
inc
mov
xor
insb
inc
cmp
add
cld
fstps
jae
inc
arpl
scas
xor
leave
mov
fs
in
filds
and
push
xor
mov
pop
enter
mov
pop
push
pop
mov
sahf
fs
jbe
xchg
rcrl
popa
xor
add
outsb
cld
cmc
sbb
mov
dec
movsl
or
rcll
jno
sub
jmp
adc
das
xor
push
and
shr
repnz
fnstcw
outsb
lods
cltd
mov
dec
int
push
ds
cmpsl
sub
cmp
loopne
in
data16
fdiv
movsl
inc
std
pop
jo
dec
xchg
cltd
stos
dec
lea
lock
lret
cs
dec
xchg
sti
test
adc
addr16
fmull
es
mov
mov
shlb
sbb
or
push
adc
xor
adc
insb
mov
mov
add
rclb
jmp
rcrl
scas
neg
movsl
mov
xchg
in
jnp
arpl
adc
shlb
and
and
push
sbb
xor
mov
jb
data16
aad
lods
in
les
push
ja
insb
xor
mov
movb
add
inc
pop
dec
add
inc
mov
mov
ss
ds
lea
pop
in
xchg
cltd
das
mov
dec
inc
lret
push
inc
dec
push
push
pop
xchg
mov
and
cli
data16
cmp
js
adc
rcll
pop
mov
mov
movsl
int3
lods
add
clc
out
bound
mov
lahf
cltd
fcmovb
addl
xchg
iret
jns
frstor
clc
lret
sbb
mov
jnp
xor
sti
iret
sub
popf
cli
and
cwtl
push
pop
jp
push
mov
es
iret
das
cld
shll
sbb
pop
scas
sbb
fcmovu
push
mov
dec
inc
mov
mov
push
insb
loop
lea
popf
xchg
push
xor
xchg
mov
dec
nop
pop
sti
add
adc
daa
stos
dec
js
sbb
jmp
js
mov
mov
mulb
pop
out
shll
fisubs
lods
sbbl
dec
insl
and
adc
or
lret
je
mov
sbbl
fdivrs
orb
inc
push
repnz
mov
push
es
shl
cmc
jb
inc
fmulp
hlt
cld
jle
sahf
clc
adc
mov
push
popf
fisubs
popf
or
leave
int
cmp
mov
repnz
add
sub
int3
mov
fisttpl
fs
movsl
cmp
push
lds
pop
pop
and
jp
sub
movsb
and
enter
adc
adc
push
loope
cmp
jb
push
pushf
lods
ret
repz
orl
dec
test
dec
daa
inc
and
lods
fdivl
push
jb
mov
mov
add
pop
popa
testb
js
xchg
fistl
out
or
fs
fldenv
mov
pop
mov
push
mov
mov
or
or
jmp
and
shrl
loop
inc
aam
out
bound
aaa
sbb
mov
jb
jns
in
adc
shrl
cmpsl
loope
jne
mov
jge
andb
lea
xchg
pop
and
divl
xor
or
push
hlt
or
mov
jmp
xchg
stos
mov
repnz
dec
clc
in
mov
int
mov
push
add
inc
and
or
jmp
int
cmp
jl
repz
sbb
pop
add
or
sbb
mov
in
sarl
add
push
shrl
iret
iret
shlb
lds
lods
out
leave
rorl
and
push
stc
in
out
stos
sbb
xchg
jmp
xor
out
sub
mov
sub
adc
xlat
cmpsb
push
or
mov
or
xorb
daa
mov
fcoml
imull
mov
pop
sub
pop
insl
call
sub
add
sbb
je
outsb
xor
nop
stos
push
sbb
xchg
fidivrl
movsl
aad
xchg
adc
lcall
je
sbb
push
adc
dec
pushf
aas
cmp
cmpsb
insl
test
movsl
push
movsl
jne
mov
mov
jmp
pop
mov
das
and
lcall
fs
xor
sub
lret
scas
xor
jnp
out
movsb
ss
data16
cmp
shld
clc
jbe
cmpsb
mov
stc
js
fdivrs
sahf
subb
outsb
aas
cmp
fiaddl
js
bound
xchg
or
std
push
fimuls
out
mov
popf
xchg
psrld
out
inc
push
fisubl
mov
test
mov
clc
imul
movsb
dec
mov
dec
gs
adcl
and
jecxz
pop
in
stos
dec
fistpll
addr16
jbe,pt
xchg
mov
sbb
mov
pushl
movsl
pop
mov
je
pop
fidivs
leave
push
enter
and
fwait
jecxz
inc
fwait
mov
mov
stos
and
mov
rol
mov
out
jge
mov
jns
dec
cmpsl
mov
inc
jae
mov
in
cld
cltd
and
inc
test
pop
aam
mov
push
jl
scas
cld
and
xor
adc
enter
adcl
xlat
repz
jl
dec
sbb
mov
call
or
push
minps
mov
loopne
aaa
cmp
cwtl
rcrb
mov
jge
nop
inc
cmpsb
in
cwtl
xchg
cltd
inc
jmp
mov
in
xchg
pop
lsl
mov
je
mov
and
inc
mov
je
shr
cmc
jne
xchg
outsb
inc
dec
pusha
sbbb
pushf
lock
int3
inc
lock
dec
jnp
aaa
dec
das
out
cmp
push
sbb
outsl
inc
xlat
mov
bound
lock
test
popa
push
cmp
pop
cmp
jmp
repnz
fistpll
orb
mov
inc
adc
xor
les
flds
adc
adc
sar
scas
mov
or
adc
push
and
cmp
in
xor
dec
pushf
inc
mov
scas
inc
icebp
xchg
xor
mov
mov
bound
mov
jge
lret
test
outsl
jle
popl
push
inc
add
dec
jl
mov
jmp
xor
test
ret
into
dec
fistpl
das
repz
sti
add
movsb
jb
dec
mov
jp
std
inc
jmp
mov
sti
imul
mov
push
aas
cmpsb
jbe
stc
push
sbb
loop
push
cmpsl
pop
xchg
pop
jecxz
test
mov
jg
fmuls
test
dec
xchg
mov
incl
mov
fwait
loope
add
add
int3
jmp
inc
andb
mov
dec
shrb
or
test
sti
cmc
xchg
popf
sub
cld
dec
xor
ljmp
adc
int3
test
dec
std
push
dec
sbb
cld
out
adc
inc
cmpb
add
jle
fwait
jo
mov
pop
dec
mov
jb
sub
or
jg
lahf
or
leave
pop
lock
dec
cli
push
pop
jg
adc
mov
pop
dec
cmp
xlat
dec
mov
pop
pushf
push
xor
xchg
int
push
sbb
sub
cmp
sub
dec
mov
or
loopne
mov
mov
in
or
lret
dec
pop
leave
adc
shll
and
ret
inc
mov
dec
call
faddl
sub
add
jg
sti
add
mov
cld
or
inc
scas
mov
mov
test
mov
push
and
loop
daa
or
xlat
sbb
adc
and
mov
dec
outsl
push
pop
wrmsr
roll
andb
sub
roll
cli
aad
and
lea
movsb
add
data16
dec
inc
fwait
xlat
fprem
scas
aam
pop
loopne
xchg
icebp
daa
jne
shl
and
add
cmc
mov
fwait
xor
sbb
int
jmp
jo
pop
movsb
mov
jecxz
int
add
push
adc
mov
pushf
or
sahf
cmp
adc
pop
jo
push
jmp
aam
xor
cmc
xlat
or
cmp
adc
jmp
xor
pop
mov
mov
adc
and
cli
add
inc
or
sbb
std
fwait
mov
out
jno
sbb
mov
in
popa
pop
pmuludq
repz
jp
cwtl
adc
inc
test
imul
mov
pop
unpckhps
data16
push
outsl
data16
jmp
dec
fwait
and
gs
aas
push
cmpb
sbb
mov
mov
paddd
es
leave
call
lcall
pop
test
adc
lods
addr16
loopne
lahf
movsb
xor
inc
daa
pop
or
test
fsubrs
hlt
cmp
ret
stc
pop
mov
mov
vmwrite
push
es
stos
or
push
push
daa
pop
rcrb
scas
arpl
xchg
or
js
outsl
pusha
jmp
sbb
cltd
adc
and
lea
std
rolb
and
das
mov
sahf
divl
mov
push
pop
or
cltd
imul
cmp
ret
or
push
push
pop
test
and
cs
std
mov
mov
fs
nop
adc
in
cs
loop
mov
sub
outsb
sub
and
jg
ja
mov
dec
lcall
xchg
mov
fldl
into
cmp
cmp
pop
scas
inc
jnp
gs
pushf
cwtl
mov
sbb
incl
aas
movsl
sti
aam
std
test
pushf
mov
repz
push
rcr
icebp
out
and
notb
lods
lahf
xor
mov
jmp
mov
cmpsl
out
mov
fdivrl
or
lods
jp
add
cltd
movsb
push
xor
pop
aam
sbb
ja
adc
or
rorl
movsl
mov
lds
pop
aaa
pop
jp
sbb
jge
int3
or
mov
popf
sub
out
sbb
push
hlt
sub
xor
cmp
pop
sub
xchg
int
das
in
or
sbb
mov
xchg
js
xchg
pop
pop
add
cltd
cli
mov
mov
mov
out
xchg
cmp
fdivrs
es
push
jl
pop
daa
and
ja
sarb
lds
dec
push
inc
or
addr16
mov
sarb
adc
cmp
push
loope
in
pushf
in
inc
push
push
dec
xchg
xchg
jnp
jmp
add
mov
frstor
and
imul
inc
leave
fisubrl
jbe
je
cltd
push
pop
lahf
cmp
lret
mov
mov
repnz
jl
cmpb
ret
rcrl
cmpl
shlb
cmp
or
pop
das
push
repnz
inc
xor
jb
das
into
mov
and
xchg
shlb
jmp
dec
test
aad
add
ret
jne
pop
xor
mov
jecxz
or
push
das
or
sub
jb
lret
push
and
test
sub
sbb
lret
mov
cmp
mov
data16
adc
cltd
dec
or
aam
dec
add
in
sbb
adc
sbb
jbe
xchg
xchg
lods
and
dec
cmp
pop
inc
loop
sbb
inc
dec
push
dec
xchg
int
repz
lods
dec
pop
push
xchg
xor
icebp
or
imul
push
pushf
mov
pushf
icebp
es
or
add
mov
pop
mov
or
jae
dec
pushf
mov
cmpsb
imul
lock
enter
sbb
outsl
cmp
mov
xor
jp
mov
loope
daa
xchg
xor
jo
outsb
lret
fidivrl
lods
flds
jp
je
lret
adc
inc
lahf
mov
enter
adc
mov
and
addr16
mov
sbb
inc
imul
mov
push
mov
outsb
and
mov
stc
xchg
fldt
leave
movsl
cmp
das
push
push
ds
ljmp
push
shl
adc
call
outsb
hlt
stc
test
push
xor
mov
add
sbb
push
mov
aaa
pop
cld
rorl
in
sbb
rcrl
mov
push
addr16
jp
loop
lock
dec
dec
jg
mov
mov
push
xchg
ljmp
fwait
lods
nop
jecxz
jmp
nop
mov
lods
adc
ret
jbe
mov
jno
or
outsb
jne
test
ja
andb
stos
xor
sub
dec
outsl
mov
or
sbb
dec
jg
jg
stos
xor
aas
sub
jge
and
cmp
sbb
sbb
xchg
mov
sub
les
or
fwait
xchg
mov
and
and
jge
fsts
loope
outsl
adc
dec
inc
mov
fs
mov
repnz
pop
and
loopne
mov
or
add
into
test
pop
je
mov
jmp
shrl
scas
inc
sbb
mov
add
rolb
mov
mov
inc
pop
jp
aam
mov
pop
and
cld
aaa
jae
jb
fs
sbb
lds
mov
fs
movsl
enter
repnz
mov
enter
mov
inc
add
rol
addb
gs
dec
xchg
add
and
lods
fldenv
and
fsubr
popf
cmp
jns
test
xchg
fsqrt
bound
pop
pop
loope
dec
xor
jne
mov
pop
iret
xchg
sbb
ret
je
test
ret
xchg
dec
pop
xchg
jmp
sbbl
mov
outsb
idivb
sub
mov
push
pushl
sub
icebp
add
ror
jb
or
inc
popa
lret
sbb
aad
sbbl
or
je
fwait
mov
sbbb
fs
jle
push
dec
xchg
dec
sub
fimuls
push
stos
rcrl
xor
jb
jp
adc
mov
mov
mov
fbstp
jne
ret
mov
out
pop
fs
ljmp
push
repz
mov
and
divl
mov
in
das
inc
inc
int
sub
paddd
inc
mov
hlt
cmp
mov
push
inc
ret
stos
dec
pop
dec
leave
inc
push
mov
mov
ret
dec
repnz
mov
mov
mov
mov
pusha
pusha
icebp
pop
push
loopne
mov
push
es
test
addr16
inc
xor
rcl
add
xor
inc
pop
push
in
call
mov
ja
icebp
pop
push
mov
mov
add
clc
int3
lcall
mov
pop
lahf
out
es
pop
pop
xorb
bound
cmp
cltd
cltd
push
pop
mov
enter
push
insb
xor
flds
sub
rcr
stos
into
stos
sbb
pusha
push
pop
je
or
add
into
xchg
xchg
pop
xchg
pop
inc
dec
lret
mov
jo
call
mov
sub
test
adc
js
roll
mov
data16
pop
aad
cmp
pop
push
pop
fildll
nop
jbe
mov
cmpsb
stos
or
loopne
add
mov
jmp
mov
pop
pusha
xlat
jnp
add
loop
xor
pop
mov
push
ljmp
out
cmc
cmp
and
mov
ret
into
sbb
jb
cmp
and
or
stos
adc
sbb
in
jns
pop
mov
cwtl
push
loope
xchg
push
popa
popa
inc
jl
icebp
xchg
or
idiv
aad
mov
fwait
mov
inc
xor
pop
push
iret
scas
pop
lods
pop
lret
lret
sti
jmp
adc
mov
repz
mov
and
add
inc
mov
icebp
fsubs
adc
scas
lods
out
test
loope
scas
fmull
jmp
and
mov
inc
inc
cld
ret
hlt
cmp
int3
inc
int3
xlat
jecxz
mov
cmc
loope
scas
test
aad
sub
push
sub
xchg
mov
test
jne
icebp
jne
ljmp
add
xor
pushf
stc
mov
jns
jp
mov
bound
add
adcl
and
aaa
inc
jg
arpl
xor
and
ret
sub
dec
mov
in
in
push
test
pop
iret
rolb
jae
or
push
jmp
mov
mov
test
push
mov
les
hlt
dec
hlt
xchg
lret
xor
push
push
xchg
lock
mov
pop
jle
pop
shll
xchg
push
faddl
shll
sub
adc
and
test
std
pop
jle
inc
loopne
mov
jle
push
xchg
stos
sub
mov
pop
push
mov
dec
lock
pop
jns
inc
pushf
fwait
xor
push
in
adc
add
cli
push
out
lret
mov
aaa
test
xor
jg
cmp
insb
adc
dec
pop
ret
lcall
cltd
fstpt
pop
push
sarl
jbe
xchg
ficompl
mov
rorl
int
sub
hlt
mov
cmpsl
test
mov
pop
repnz
and
mov
inc
and
dec
inc
adc
pop
push
sbb
sub
lret
jp
loop
push
xor
aam
dec
into
xchg
jb
mov
fst
aas
dec
jp
stc
or
fisubs
movsb
addr16
movsb
push
out
jmp
push
scas
jl
add
jne
enter
call
inc
add
adc
cmp
out
xor
mov
add
rolb
lods
add
outsb
xor
cmp
mov
xchg
sbb
adc
loopne
subl
mov
int3
decl
add
mov
xor
cmp
mov
shl
xchg
imul
sub
movsl
test
xor
arpl
lret
fcomp
sub
dec
jmp
sbb
inc
cs
jge
dec
and
ljmp
pop
pop
mov
cmp
push
mov
add
inc
xor
mov
or
outsb
pop
xchg
mov
inc
cld
insb
lahf
addr16
adc
aad
outsb
fs
jecxz
out
xchg
ljmp
jns
out
dec
dec
mov
xchg
jne
ds
sahf
add
stos
mov
out
mov
lds
xchg
adc
dec
mov
rcrb
iret
mov
imul
sub
pusha
test
gs
jl
outsb
sub
xchg
push
jge
cli
dec
loop
gs
jae
les
out
lods
cmc
or
icebp
and
nop
cmpl
hlt
lock
out
adc
insb
cs
or
xchg
sub
pop
xchg
js
mov
jns
adc
mov
sub
push
add
push
out
cmp
add
pop
dec
add
in
mov
xchg
fwait
jo
addr16
stos
push
and
out
rdmsr
aam
scas
sahf
aaa
je
cmc
sti
repnz
mov
inc
es
shll
mov
xchg
int
xchg
pop
lods
mov
and
mov
shl
push
int3
or
hlt
mov
mov
sbb
iret
or
mov
pop
mov
pop
cld
push
xor
leave
xor
and
inc
daa
adc
or
lcall
xchg
push
sub
pusha
jb
les
mov
es
mov
icebp
pop
jbe
loope
vpunpcklbw
mov
out
xor
les
in
mov
mov
xor
adc
cmp
jns
fwait
arpl
fucomp
xchg
mov
lods
push
ret
adc
dec
mov
jmp
xor
inc
icebp
mov
in
cmc
faddl
mov
shrb
pop
imul
das
fisttpll
mov
stc
or
adc
mov
push
in
add
mov
mov
dec
mov
lret
push
xor
dec
int
in
hlt
push
xlat
add
or
cmp
cltd
lcall
hlt
mov
loope
call
mov
pause
scas
xlat
mov
push
jno
and
push
dec
xor
pushf
xor
pushf
jb
sbb
adc
inc
dec
mov
xor
push
push
pop
push
push
icebp
pushf
stos
mov
and
xchg
pop
cmc
xchg
or
mov
sub
aaa
cmpsb
mov
arpl
cmp
jecxz
popf
xor
jg
sub
dec
xor
fistpl
imul
adc
out
sbb
js
test
shl
sub
mov
xchg
lods
cmpsl
leave
faddp
sbb
in
out
aad
pop
jb
dec
inc
xchg
dec
mov
iret
push
sbb
cmp
lahf
imull
aam
fwait
mov
or
push
dec
add
loopne
iret
sbb
lea
mov
push
pusha
fwait
outsl
or
dec
bound
dec
in
rcl
xchg
stc
xchg
adc
insl
adc
sub
or
add
mov
xchg
aam
adc
jno
popf
xor
fcmovnbe
addb
sbb
ljmp
inc
sub
pop
dec
xor
pop
cmp
rcrl
mov
mov
add
loope
inc
gs
fisttpll
add
inc
cs
lret
jg
sbb
sbb
lea
call
inc
mov
dec
std
sahf
int3
add
mov
insb
scas
add
jecxz
xor
lret
xchg
add
fucom
sub
add
bound
dec
mov
call
cmp
push
cmpsl
push
lret
jbe
push
mov
push
adc
clc
adc
lret
jge
pop
lret
into
cs
pop
xor
xor
xor
pop
jg
stc
repz
cmp
bound
addr16
xchg
fildl
xor
and
cmpsl
sub
movsb
add
push
pop
xor
jle
mov
cmp
imul
sub
fs
push
push
fwait
cmpsb
push
xchg
xor
int
cmp
pop
mov
dec
loopne
addr16
ds
ljmp
cmp
adc
sar
xchg
pop
pop
insl
jno
sbb
xor
repz
fucom
xor
adcl
fs
dec
dec
push
fstpl
dec
pop
cli
mov
push
jne
lea
ret
mov
in
dec
mov
cmp
mov
out
les
mov
jg
sub
xchg
mov
mov
int3
movsl
sub
lods
adc
inc
cmc
mov
or
mov
loope
sub
cwtl
mov
and
xor
aad
jns
clc
xor
les
incl
mov
sahf
mov
iret
in
je
push
adc
and
xor
jp,pn
pop
dec
xor
mov
enter
std
xchg
inc
jge
pop
nop
xchg
or
mov
popf
std
xchg
xchg
jecxz
loope
popa
xchg
flds
outsb
mov
mov
and
fwait
cwtl
xchg
sti
in
fwait
jnp
addb
lret
adc
adc
aaa
lea
imul
push
sub
xlat
add
sub
es
nop
mov
les
jns
shlb
jb
cmp
filds
xchg
mov
iret
repnz
into
fwait
adc
loop
xor
aad
lret
lret
and
mov
mov
cmp
xlat
and
fcoms
sbb
push
test
pop
cmp
sub
and
pop
pusha
and
xor
ret
jno
outsb
push
scas
or
inc
stos
xor
test
pushf
sub
stos
inc
test
pop
out
push
cld
cwtl
out
inc
xlat
push
jmp
cltd
das
jnp
sub
or
rclb
scas
add
int3
test
jmp
mov
fldcw
push
es
scas
or
aaa
sub
fisubrs
sarb
jns
call
test
stos
jns
iret
test
pop
inc
xor
xchg
pop
jg
xor
pop
mov
mov
cld
fsubr
mov
test
test
inc
sub
mov
in
ret
push
push
aad
xchg
xlat
mov
push
pminsw
or
xchg
movsl
fsubr
cltd
jmp
inc
add
push
cltd
mov
out
stc
rcrb
mov
faddl
mov
insb
and
fchs
ja
je
ficoml
pop
jbe
cmp
mov
sub
xchg
arpl
xor
arpl
push
outsb
inc
inc
popf
push
add
xchg
sbb
jle
mov
cmp
push
mov
rcrl
jp
mov
and
and
adc
add
and
sub
mov
xchg
add
mov
jbe
test
into
xchg
fisttps
inc
jg
repz
sub
pusha
in
ret
imul
jg
js
mov
gs
lods
inc
mov
mov
insb
dec
sbb
adcb
and
addr16
fnstenv
lcall
adc
cmp
lea
int
dec
adc
cmpsl
insb
das
sub
add
add
cmpb
out
imul
int
ss
and
sbb
repnz
fadds
inc
gs
in
sub
xor
sub
insb
ror
cli
cmc
in
inc
cmpsb
dec
mov
je
sahf
jbe
outsl
sub
xchg
nop
lret
cli
adc
sub
lcall
dec
outsl
mov
mov
adc
jbe
pop
nop
pop
mov
call
inc
mov
mov
jmp
imul
pop
and
nop
pop
repnz
xchg
jl
test
test
sbb
push
test
ljmp
cmpsl
dec
cmp
lea
ror
dec
out
or
jmp
js
call
xchg
xor
jmp
mov
into
push
fistpl
mov
cs
jnp
mov
daa
jge
out
movsl
in
or
jecxz
and
xchg
outsb
fists
test
int3
pushf
mov
int3
andl
jo
add
sbb
jmp
sarb
stos
jne
popf
outsb
jp
cmp
mov
pusha
xchg
xchg
adcl
sbb
add
add
leave
cmp
pushf
mov
inc
sub
lods
pop
xchg
movsl
shr
mov
cmc
lods
shrb
repnz
imull
cltd
in
clc
pushf
mov
xchg
dec
push
push
xchg
sbb
mov
fidivs
jecxz
push
or
dec
add
popf
sbb
xchg
pop
push
rclb
sbb
mov
fistpl
mov
cmp
loop
pop
pop
cmp
negl
shrb
cmpl
call
add
mov
push
pop
rol
orl
mov
push
inc
cmc
outsl
test
jecxz
inc
push
mov
sbb
mov
test
jne
out
xor
sbb
stos
out
dec
add
sbb
and
gs
and
orl
mov
xor
and
lods
aam
ljmp
sbb
cmpsl
lods
int3
add
xor
icebp
mov
shll
es
mov
pop
div
mov
pop
mov
pop
shlb
dec
mov
push
dec
icebp
inc
icebp
inc
mov
jo
or
jnp
lcall
jbe
jns
pop
fcomps
sahf
sub
out
lds
push
nop
outsl
jno
cmp
addr16
es
pusha
or
rcll
push
cmp
rcl
adc
adc
popf
jnp
push
cmpsb
pop
sub
mov
fwait
jmp
shl
outsl
dec
clc
arpl
fwait
in
es
pop
jmp
addr16
movsb
enter
jne
jg
hlt
and
ret
jecxz
lds
cwtl
js
call
cli
fwait
es
jle
rorl
add
into
inc
jle
push
test
sub
divl
add
rorl
and
in
sti
call
pop
ss
mull
cmpsl
add
jns
or
gs
xchg
ret
dec
xchg
inc
hlt
pop
and
xchg
adc
and
cmc
xchg
stc
cmp
mov
sbb
mov
sub
pusha
cmpsl
push
jo
push
xchg
shr
pop
xchg
push
fwait
pop
in
int
sarb
xchg
aam
dec
or
loop
arpl
fs
dec
fiadds
std
insl
mov
ss
xchg
ret
sbb
in
jle
pop
out
lock
std
stc
loop
ret
cmp
cwtl
dec
arpl
xor
loope
loopne
xor
cli
jb
jp
cmp
sbb
inc
xchg
sahf
loop
xchg
les
sbb
fisubs
jg
iret
mov
jne
and
rcrb
aaa
shlb
int
imulb
mov
pop
mov
add
insl
adc
mov
and
cld
rcrb
and
inc
push
push
cmpsb
or
cmc
repnz
xchg
aaa
aaa
movsb
jb
std
ret
push
mov
outsb
xor
sbb
shlb
andb
imul
aad
loope
aam
lahf
add
pop
xor
mov
sarb
cmp
mov
inc
mov
push
jl
mov
mov
out
scas
jp
or
cmp
int
loop
fsubl
shl
inc
aam
or
mov
addl
xchg
jbe
and
fdivp
js
xchg
sbb
add
and
bound
push
out
arpl
lcall
push
scas
iret
aaa
fdivrs
das
mov
adcl
shlb
add
pop
cld
xor
aam
jp
daa
dec
inc
inc
inc
or
jno
icebp
and
lods
imul
push
add
add
cmp
in
imul
retw
sbb
sahf
xchg
int3
iret
xor
repnz
mov
pusha
in
in
sbb
dec
xor
neg
inc
in
xchg
fwait
xor
cld
dec
cmc
add
test
add
mov
cmp
or
fsubp
xor
cmc
jecxz
fucomp
test
dec
arpl
mov
sarl
cwtl
outsb
jae
mov
xchg
or
sbb
js
mov
lret
add
scas
aas
sbb
jnp
iret
jns
fisubrs
mov
ret
jns
mov
stos
les
data16
in
or
pop
cmp
loop
adc
test
sbb
ljmp
mov
movsb
sbb
xchg
out
dec
pop
jge
js
or
adc
pop
pushf
sti
xor
into
popa
xor
bound
ret
insb
jmp
mov
mov
push
shrl
pop
imul
adc
jo
stos
dec
leave
inc
mov
popf
mov
sub
jnp
sub
mov
insb
inc
shll
cli
dec
cmp
sub
in
inc
shll
sbb
lret
xor
xchg
sub
push
push
mov
push
push
lea
repnz
push
jmp
and
jmp
lea
lcall
mov
xor
popf
mov
jl
push
jne
pop
fs
fnstcw
les
inc
pusha
pop
xchg
out
or
idiv
dec
mov
add
fwait
mov
inc
dec
addl
jle
cmp
pop
fwait
mov
pop
push
repz
jle
jmp
mov
test
adc
ret
add
add
popf
add
sub
lods
jae
cmpsb
push
lea
and
push
shlb
pop
pop
cmpsl
rorb
pop
jmp
mov
out
je
lcall
flds
ja
mov
jmp
lds
xchg
pushf
cmpsl
ret
das
rorb
scas
in
out
movsl
arpl
cmc
movsb
lea
pop
sahf
inc
outsb
add
je
or
mov
cmp
xchg
insb
or
pop
mov
push
int
imul
sub
pop
add
pop
lret
add
imul
inc
sti
fcompl
add
sbb
rclb
or
cmp
xchg
ret
popa
iret
adc
pushf
test
push
rcr
and
cmp
loope
out
int3
mov
sub
iret
adc
lcall
jl
icebp
imul
pusha
pop
movsl
nop
out
add
pop
sub
mov
je
sub
aad
dec
int3
in
push
out
xchg
xor
ljmpw
int
rol
shl
inc
sub
ja
sub
xchg
arpl
dec
push
xchg
mov
cwtl
je
test
jb
dec
pop
push
sti
fisubl
dec
pop
lret
pop
sahf
fs
movsb
add
fstp
inc
or
pop
mov
mov
mov
lea
jae
jbe
lret
adc
xchg
cmc
arpl
pop
scas
test
jno
inc
sub
cld
pusha
push
cmc
cmpsb
js
aam
mov
aaa
and
pop
jg
xchg
and
decl
movsl
push
iret
dec
sub
mov
xchg
daa
push
pop
inc
pusha
sti
je
mov
push
decb
lea
add
mov
std
jl
les
push
push
push
push
mov
push
ljmp
sbb
mov
dec
clc
ffreep
mov
std
fwait
aad
mov
mov
out
loopne
pop
adc
hlt
mov
pop
mov
lods
fwait
mov
sbb
adc
sub
mov
sub
mov
jmp
jecxz
stos
or
ret
test
je
les
jbe
mov
into
jecxz
sbb
rcrb
jns
das
stos
xor
rcll
push
or
xor
xchg
mov
les
scas
scas
test
dec
or
in
jg
xor
jmp
nop
xor
pop
ret
pushl
je
add
mov
inc
nopl
rcr
lods
call
adc
xchg
mov
movsb
lods
or
dec
test
jno
jmp
imulb
clc
pop
clc
add
xlat
test
add
mov
mov
hlt
stos
clc
add
xchg
mov
ret
fadds
push
pushf
mov
xlat
dec
mov
rorb
aam
inc
lret
test
pop
addb
jae
scas
and
stc
jl
inc
pop
int
scas
cmpb
cmp
and
xchg
adc
sbb
pop
push
mov
sub
sub
popa
sahf
push
loopne
dec
and
stc
sbb
adc
pop
pop
push
in
pop
ja
loop
dec
mov
inc
jge
inc
cwtl
paddusb
sbb
adc
ret
dec
sbb
push
push
jl
testb
sbb
icebp
insl
imul
cli
imulb
mov
test
outsb
scas
inc
jg
inc
inc
fidivs
in
push
xchg
add
sub
aaa
lcall
stos
jmp
jp
in
scas
fstps
nop
roll
dec
add
pop
movsb
addr16
inc
imul
pop
inc
xchg
pop
imul
mov
aaa
aam
xchg
stos
xchg
push
pop
in
stos
adc
mov
add
inc
pusha
sbb
test
lahf
jb
xchg
inc
dec
movsb
enter
mov
jmp
xor
or
adc
jb
push
ja
push
pop
pop
cmp
lss
push
mov
xor
int3
push
lea
stos
nop
ficompl
dec
popa
push
xorl
inc
mov
cmc
cmpsl
jg
clc
rolb
dec
dec
sbbl
es
sub
shrl
neg
fldcw
and
xor
push
adc
out
imul
mov
mov
cltd
or
push
or
into
xor
cmpsl
jmp
xchg
pusha
xchg
iret
fnstsw
and
and
or
shll
stos
mov
and
lods
sub
or
dec
call
loop
jb
sub
scas
or
add
xlat
aad
into
jg
xchg
popa
scas
push
stos
aas
lret
xchg
dec
jb
sbb
orl
ret
push
es
inc
sub
xchg
inc
dec
inc
sti
fldcw
call
mov
lahf
or
dec
xor
xor
test
repnz
rorb
adc
mov
arpl
out
rolb
dec
mov
arpl
or
in
test
inc
sbb
ss
lods
les
cmp
decl
pop
cmpsb
cmp
icebp
and
mov
push
cmp
jo
testl
mov
xor
mov
push
jecxz
aaa
cli
scas
cmpsb
testb
pusha
and
add
bound
and
fstp
shlb
dec
and
cmp
pop
js
add
fdivr
shl
sub
pop
sub
ret
insl
push
inc
movb
shrl
adc
mov
sbb
mov
cmp
daa
outsb
push
add
push
xchg
mov
dec
pusha
add
push
jbe
gs
les
pop
add
xchg
out
jo
aas
add
lahf
lret
push
or
push
or
inc
in
pop
cmp
sti
or
rorb
mov
mov
dec
mov
scas
pop
inc
mov
xor
stos
movsb
add
sub
pop
pop
cli
mov
sbb
loop
cwtl
push
jle
inc
xlat
push
out
jp
fwait
rorl
push
fnstsw
mov
lds
test
outsb
dec
out
sub
aas
pushf
adc
cltd
and
leave
pop
add
pop
jecxz
xchg
mov
fisubrs
xor
test
out
xor
xchg
mov
pop
bound
mov
mov
cmp
out
pop
mov
ja
xchg
rcrl
push
jnp
mov
rcrb
inc
inc
fldl
repnz
and
cmpsl
int
add
adc
andb
xchg
jecxz
aaa
cmpsl
adc
sub
es
testl
xor
push
subb
cmpsb
xor
jb
xchg
inc
lods
mov
and
push
dec
hlt
sbb
inc
jnp
aaa
test
clc
mov
test
push
mov
test
lods
and
lret
sti
cmp
jns
ret
sti
ss
cwtl
jmp
imull
and
add
pushf
push
rcrl
jae
popa
mov
mov
fidivrl
mov
cmp
cmp
xchg
pushf
fbstp
ljmp
jmp
or
adc
icebp
rorl
subb
xlat
pop
lret
dec
daa
cmp
sub
popf
shll
dec
xor
xor
mov
mov
insb
cmpsl
cmpsb
mov
je
bound
adc
sbb
out
adc
lock
lds
mov
gs
fildl
pop
scas
adc
inc
push
adc
shr
out
add
cmp
testb
shlb
and
sbb
das
ja
xchg
or
imull
loope
mov
cwtl
rorl
jge
inc
cmp
call
es
test
mull
rclb
call
std
cmp
dec
dec
push
fcoms
adc
stos
fs
mov
call
subb
data16
xchg
in
xor
sub
aaa
ret
push
xchg
aad
sub
out
in
mov
mov
outsb
and
cmp
push
pop
leave
dec
inc
in
dec
out
mov
movmskps
pop
jb
daa
or
cwtl
jmp
push
pushf
xor
or
scas
roll
mov
insb
and
jns
mov
xchg
pusha
fcmovne
jo
add
xchg
and
mov
hlt
and
mov
push
fistpll
and
test
push
and
ss
std
xchg
and
stc
or
lret
jle
int3
jo
add
xchg
sti
mov
out
mov
mov
xchg
sub
into
aaa
and
or
mov
icebp
fildll
jbe
push
les
and
ljmp
xchg
ja
test
out
jae
out
or
sub
inc
leave
or
add
mov
inc
lcall
mov
in
adc
jle
or
clc
fcmovu
call
pop
mov
push
mov
pop
xor
sti
fimull
fmuls
adc
adc
push
mov
mov
mov
popa
nop
mov
jns
gs
in
xchg
ret
aas
inc
mov
dec
es
sbb
arpl
push
add
jno
jmp
mov
pop
pop
cmp
pushf
cmpsl
enter
daa
mov
int3
cs
sub
in
dec
jne
aad
packsswb
les
cmp
inc
fistpl
jmp
mov
sysenter
push
or
mov
loope
clc
jb
push
aaa
cmp
dec
add
jae
dec
pop
xorl
out
xchg
jbe
push
mulb
das
jne
mov
inc
jle
sbb
jbe
sbb
ja
ja
pop
ficompl
aas
movsl
loopne
repz
push
fmulp
je
lods
pop
mov
dec
inc
int
push
testb
ds
mov
enter
lds
xchg
idivb
jo
outsl
mov
and
mov
adc
cs
sbb
arpl
aad
pop
pop
cmc
ja
adc
dec
cmp
out
stos
pop
leave
adc
cmpsl
aas
push
jp
jl
arpl
xchg
loop
jmp
enter
xchg
sbb
xchg
or
in
mov
sarl
jg
fs
or
cmp
add
mov
xchg
adc
adc
out
jl
adc
adc
jl
cwtl
sarl
clc
pop
repnz
mov
cmp
dec
xor
mov
mov
insb
push
inc
in
or
xchg
xchg
push
test
push
jb
jmp
test
lods
inc
add
jge
dec
scas
inc
mov
push
pop
mov
cmp
rorb
cs
jb
xlat
scas
cmp
pavgw
mov
adcb
popf
jbe
jl
adcb
mov
and
mov
xchg
flds
pop
cli
sub
aaa
mov
sub
mov
sub
cli
repnz
fisttpll
jge
inc
lcall
sti
leave
dec
dec
xor
inc
push
mov
push
mov
sub
jg
mov
mov
cli
out
inc
dec
mov
bound
pop
cmp
das
cmp
imul
or
mov
dec
sbb
add
je
outsb
je
imul
std
cld
test
push
mov
sbb
xchg
clc
add
js
aam
sub
cmp
daa
cmpsl
and
adc
push
in
xor
rcrb
fwait
clc
loope
sbb
cmp
mov
push
sub
fldenv
sbb
testb
mov
in
out
cltd
lea
in
mov
and
fdivs
xchg
cmpsb
and
push
loop
dec
xlat
inc
imul
jb
scas
shl
adc
sbb
sbb
mov
xchg
bound
lret
rcll
ds
out
dec
add
xchg
out
mov
fldl
aad
cmpsl
stc
cs
mov
ds
mov
shlb
jno
idivb
mov
pop
scas
shl
addb
dec
insl
mov
mov
sub
imul
mov
and
sbb
xlat
cld
test
enter
jg
mov
inc
cmp
test
fdivp
insb
ljmp
jp
stc
inc
and
jecxz
sub
rorl
rcr
inc
and
pop
inc
mov
or
and
jmp
jno
mov
dec
into
xor
jnp
lock
lods
pusha
ja
sbb
data16
adcb
std
or
mov
sarl
sub
pusha
sub
adc
enter
cltd
sub
jp
stos
gs
add
sub
jmp
fnstenv
pop
jle
arpl
dec
cli
push
cld
test
aas
fidivl
jecxz
stos
test
jmp
jo
out
and
push
js
mov
lock
cld
clc
or
or
out
sub
push
or
fxch
add
jle
lock
inc
ss
or
jecxz
dec
xchg
scas
cs
lea
cltd
lds
jbe
subb
sti
cs
and
or
jg
movsl
pushf
pop
daa
jl
xor
and
jmp
sub
dec
jl
dec
bound
xchg
xor
test
pop
xchg
xchg
out
pop
popf
push
jnp
mov
or
jb
fcmovnbe
xor
mov
clc
mov
iret
je
adc
pop
push
sbb
call
sbb
jae
jae
daa
jg
sub
test
lds
mov
popf
jo
lsl
jp
lods
pop
std
push
jl
add
xchg
jb,pt
cmc
aas
ljmp
cwtl
pushf
push
push
xchg
push
mov
push
scas
fdivs
push
sub
inc
enter
jbe
push
inc
mov
xor
sub
sbb
aas
popf
cs
or
mov
mov
mov
imul
mov
sub
push
push
mov
imulb
dec
pop
mov
xor
push
mov
adc
lahf
insb
add
test
pop
das
inc
aaa
mov
cmc
and
aaa
in
sti
lds
shlb
mov
stos
inc
pop
stos
sbb
dec
mov
lret
add
dec
push
mov
ss
mov
jmp
xchg
incl
fimull
or
dec
loope
push
dec
shl
mov
mov
ret
jl
fprem1
cmp
test
inc
out
push
jo
pop
in
jmp
pop
add
dec
inc
aaa
jle
in
mov
xor
pop
aas
enter
lods
ja
cltd
pop
mov
add
pop
bound
xor
jnp
in
pop
dec
sub
jno
jp
jmp
lcall
jl
sub
dec
inc
out
scas
add
mov
fildll
scas
incb
xchg
mov
movsl
shlb
aas
fcmovbe
in
rol
pop
das
jne
fnstenv
mov
push
push
flds
dec
push
dec
mov
shrb
fs
adc
adc
and
les
das
inc
jno
hlt
push
cli
adc
cld
inc
idivl
fisubrs
les
cltd
adc
sub
ljmp
dec
iret
mov
dec
adc
add
mov
cmp
andb
push
and
mov
mov
pop
sub
neg
imul
jecxz
jp
add
fildl
sbb
ss
enter
cmpsb
fcompl
inc
in
sbb
xor
sub
jle
pop
jl
cs
leave
addb
mov
dec
mov
sub
mov
icebp
aam
subl
cmpsb
jo
jb
std
sub
popf
pop
inc
xlat
ficoms
lahf
and
inc
rclb
pusha
xor
adc
push
xorb
fincstp
stos
sahf
aad
std
sar
xor
cmpsb
add
lea
das
cmc
cmpsb
or
dec
rolb
fldenv
lds
jp
mov
jae
pushf
dec
loopne
pop
movsl
sbb
repz
adc
or
arpl
bound
fistl
out
adc
gs
std
jnp
lock
jecxz
pop
out
repz
xor
cmp
fldcw
test
pop
jno
cmp
sub
pop
fs
mov
add
insl
pop
inc
lods
in
mov
outsl
in
cmp
dec
loop
sbb
inc
pop
gs
jmp
push
je,pt
into
addr16
jp
jge
cld
sub
pusha
dec
mov
daa
stos
scas
jle
ret
lods
mov
test
movsl
pushf
push
scas
lret
push
sti
adc
mov
push
subl
mov
jae
sti
movsb
scas
les
push
testb
mov
out
push
adc
dec
movsb
pusha
sub
dec
orl
je
lahf
xor
adc
pushf
in
adc
lock
push
pmaxsw
pop
add
scas
mov
out
adc
or
add
xorb
mov
inc
adc
sub
call
movsl
adc
jns
fisttpl
cld
fs
adc
xor
jecxz
xchg
mov
push
pop
push
mov
xlat
mov
push
push
rcrb
sub
cmp
stos
sbb
xchg
adc
stc
cmpsb
dec
pop
sbb
push
sub
sub
push
gs
pop
pushf
dec
ja
sbb
std
ret
push
into
aad
jnp
inc
push
out
shlb
mov
scas
hlt
aaa
stos
lret
xchg
adc
adc
das
jle
mov
dec
jmp
daa
loopne
add
in
and
and
lahf
in
outsl
je
pusha
jbe
xorl
insb
dec
jle
mov
scas
lea
cmp
xor
bound
adc
sub
mov
lock
inc
xchg
jmp
mov
mov
adc
pop
xchg
lret
repnz
imul
sbb
addb
inc
movhlps
ret
add
sub
xchg
nop
mov
jns
cmpsl
dec
aam
shll
mov
jno
mov
adc
sub
imul
lods
mov
xor
pop
jg
jb
dec
test
out
adc
lock
mov
mov
push
fisubrl
jl
pop
stos
sub
and
jg
lea
sub
xchg
lods
fs
fstpl
cld
out
stos
cmp
jmp
push
jb
fdivr
sub
inc
movsb
mov
add
rol
inc
dec
pop
in
daa
and
xor
jae
testl
fisubrl
repnz
arpl
xchg
or
push
jecxz
adc
cmp
xchg
jns
js
stc
or
sub
jnp
ja
lahf
fs
scas
jge
and
daa
leave
xchg
les
pop
xchg
fwait
leave
test
aad
in
flds
mov
dec
cwtl
subb
mov
and
jge
enter
insl
add
mov
xor
push
mov
cmp
popa
jne
out
movzbl
mov
pop
int
js
or
int
pop
lret
pop
jecxz
cmp
test
daa
cmp
add
sub
rcl
xchg
adc
or
jns
fcomi
mov
aas
out
test
out
adc
sbb
push
in
mov
cmp
jno
js
fstpl
pop
or
out
push
leave
inc
jo
inc
pop
push
rclb
pop
cmp
ja
call
mov
shlb
test
xchg
add
popf
imul
inc
and
dec
pop
push
test
lea
filds
pop
cmc
shr
adc
loope
loop
xor
pop
mov
mov
inc
adc
pop
pop
dec
push
sub
js
and
in
cmovle
xlat
dec
jno,pt
out
or
idiv
or
dec
jge
loope
stc
push
inc
jecxz,pn
add
sahf
fstl
push
cwtl
faddl
gs
js
xor
mov
push
adc
mov
stos
sbb
jl
arpl
hlt
pop
lret
dec
jne
mov
xor
xchg
mov
imul
push
dec
nop
test
daa
shlb
out
xchg
jmp
cmp
loopne
jp
in
adc
push
xor
ja
mov
push
mov
outsb
mov
stc
iret
and
inc
cmp
add
or
xor
push
icebp
pushl
push
jl
insl
mov
repz
and
leave
pop
jmp
cs
in
loope
fwait
test
js
cmp
out
cmp
je
cmc
popa
mov
adc
mov
sar
sarl
adc
sbb
mov
test
cmpsb
xchg
std
push
leave
pop
out
mov
in
adc
pop
scas
cmp
fs
push
dec
sub
or
mov
daa
mov
xchg
dec
fbld
push
xchg
insl
decl
mov
pushf
dec
pop
roll
xchg
fsubr
mov
and
shlb
cld
jecxz
mov
cmpsl
sub
pushf
xor
sarl
test
sbb
cmp
cmc
pop
push
gs
pushf
dec
mov
iret
arpl
xor
int
xor
dec
add
test
pop
aas
and
jmp
cld
iret
imul
mov
imul
fsubr
fsubl
fwait
and
push
jno
nop
out
ret
cmp
sbb
clc
leave
cmp
test
and
fwait
not
jne
xor
jno
out
mov
hlt
push
xor
lcall
sbb
loopne
push
cmp
xor
iret
fwait
cmp
cld
je
adc
sbb
xchg
xchg
or
jnp
test
push
pop
sahf
jecxz
jl
dec
aas
sub
sahf
pop
xor
stos
and
mov
rcr
xchg
cmp
es
adc
adc
cmp
jnp
pop
movsb
sub
outsb
push
out
std
mov
iret
jns
rcll
ret
dec
jge
and
scas
int3
inc
popa
adc
add
test
mov
fcompl
lods
je
lods
cmpsb
hlt
mov
sbb
imul
out
xchg
cmpl
xchg
cmp
mov
insl
icebp
pop
mov
sbb
lods
mov
cltd
adc
and
xor
and
nop
stos
cmp
loope
sbb
xchg
xchg
es
xor
xor
cmpsl
hlt
js
enter
mov
in
pop
das
xchg
fsubrl
out
xor
dec
lds
jmp
daa
aad
repz
neg
out
cs
rcll
in
sub
mov
ds
pop
das
cld
cmp
lea
jne
in
int
mov
enter
push
mov
lock
fbld
fldcw
mov
pop
jo
mov
jl
out
or
outsb
inc
inc
jmp
and
call
mov
sub
jle
int
imul
jecxz
push
in
cmp
ja
inc
mov
je
gs
fxch
mov
add
fisubl
push
repnz
in
jmp
push
fcmovnbe
inc
xchg
mov
test
adc
addr16
ret
movl
outsl
fwait
inc
sahf
out
inc
fwait
popf
imull
dec
lds
xorl
cld
jo
outsl
push
nop
sbb
fdivr
out
mov
or
adc
dec
sbb
aad
subb
and
push
flds
in
cmp
jns
into
ret
outsl
push
ret
sarl
lods
xor
out
cmpl
mov
xor
cmc
dec
int
push
mov
fidivl
jge
mov
popf
fisttps
mov
xor
and
out
push
scas
mov
loope
sbb
sbb
fidivrl
orl
add
das
popa
addr16
mov
or
and
mov
push
jns
stos
sbb
dec
jle
dec
repnz
pop
push
andb
sub
gs
dec
dec
gs
jae
js
jbe
mov
pop
or
insl
loopne
mov
fistps
push
cmp
outsb
xchg
leave
sub
in
hlt
jecxz
test
stos
hlt
shll
jae
jae
movsl
xchg
sub
adc
sub
mov
mov
imul
in
jge
sub
pop
movsb
leave
scas
jmp
mov
fsubrl
and
sahf
adc
sub
push
into
cmp
push
lret
lcall
mov
out
ret
sbbl
pushf
mov
cmp
in
mov
ljmp
subl
ret
add
or
int3
ja
add
loopne
in
sub
popa
nop
xchg
enter
sbb
dec
addb
xchg
xchg
inc
add
sub
xorb
mov
clc
sbb
add
push
mov
push
add
mov
mov
rclb
bound
sbb
xchg
dec
into
jp
rclb
push
sar
xor
push
cmp
cmc
push
jnp
xchg
cmpsb
fsubrp
xchg
mov
sbb
stos
rcrl
repnz
jae
paddsw
sub
push
sarb
xchg
mov
add
lret
addr16
add
xchg
sbb
ds
xor
jp
fwait
push
xor
jl
sti
stos
pop
or
push
push
sub
pop
cmc
dec
cli
cmpsl
out
push
iret
sbb
xchg
dec
or
test
or
pusha
sbb
mov
stc
or
push
ljmp
mov
fwait
xchg
bound
or
jle
outsb
dec
pop
adc
imul
cmpsb
imul
push
xor
enter
cwtl
mov
test
or
shll
mov
movsl
je
imul
sub
daa
xor
and
hlt
dec
adc
and
inc
pop
and
adc
xor
push
incb
jge
jl
cmpsl
mov
inc
jns
mov
pop
not
test
push
mov
lds
cmpsb
and
fsubr
leave
push
push
or
push
daa
sbb
sahf
ja
mov
dec
xchg
stos
subb
in
jae
cld
sub
dec
out
je
rol
data16
mov
iret
jp
out
push
call
or
sub
iret
testb
jg,pt
lahf
test
test
mov
cmc
mov
sbb
outsl
popa
dec
pop
mov
enter
and
sub
je
mov
cmp
mov
add
int
test
lret
scas
test
stc
jge
mov
fwait
jl
iret
push
test
outsl
xchg
mov
jmp
sbb
jl
pop
ljmp
inc
in
aam
inc
pop
mov
pop
push
mov
clc
decb
dec
mov
dec
cmp
repnz
in
pop
mov
push
adc
dec
sbb
inc
push
pop
data16
scas
or
orb
xlat
test
aad
sbb
mov
and
and
repnz
jmp
pushf
lds
nop
pop
mov
stos
cmp
jb
arpl
adc
aas
sahf
imul
xchg
and
and
lret
cmp
xor
dec
jo
arpl
fcmovnbe
arpl
ja
movsl
push
mov
adc
cmp
ss
pop
enter
xor
jns
repnz
xor
std
xor
arpl
xor
cmpsl
mov
xchg
mov
out
mov
test
mov
or
mov
shr
sub
clc
scas
stc
jmp
cmp
addr16
aam
add
int3
ds
fs
inc
stos
jnp,pn
daa
popa
in
insl
adc
jg
test
loop
push
jge
cmc
fsubl
sahf
inc
lcall
mov
mul
push
mov
int3
sbb
ficomps
cmp
popa
pop
iret
mov
inc
jge
clc
mov
inc
nop
fidivrs
orb
insb
pusha
mov
sbb
inc
jns
leave
push
mov
or
imul
shlb
cltd
and
sub
ja
push
in
sbb
or
je
add
lods
in
repz
shll
push
ljmp
lret
mov
loope
loop
sub
aas
adc
in
push
hlt
arpl
aam
sub
lret
lods
mov
mov
add
adc
mov
loopne
jo
rcr
mov
testb
call
lock
or
stos
adc
inc
lea
mov
andl
push
pop
aas
jno
inc
arpl
add
push
movsb
cmp
movsb
ss
cmp
cmpl
inc
dec
filds
sub
add
fisubrs
lea
jne
inc
mov
int
sbb
insb
lret
cmp
xchg
add
and
js
jnp
out
xor
test
jns
js
nop
mov
loop
negb
xor
pushf
imul
mov
pop
xor
fdivs
lahf
cwtl
daa
cwtl
lret
fwait
add
int3
mov
mov
cmp
jne
out
test
data16
out
icebp
jle
cli
sub
in
xchg
leave
movsl
mov
push
or
mov
cs
or
inc
sahf
xor
addr16
lcall
mov
mov
in
add
xchg
inc
aas
or
xor
repz
push
lods
sub
ss
push
in
push
jecxz
mov
int
adc
imul
cmp
fwait
inc
xchg
lret
sti
ds
xor
push
mov
jbe
sbb
sti
sub
adcb
sbb
cmp
rcll
adc
dec
lret
xor
mov
pop
or
outsl
sti
adc
dec
int
cmp
pop
les
dec
and
inc
out
push
or
lods
clc
outsb
dec
adc
incb
mov
std
dec
jg
lock
pop
stos
mov
clc
lods
repnz
pop
or
test
cmp
scas
adc
stc
inc
adc
inc
lret
push
or
dec
into
pop
adc
mov
or
loope
xchg
xlat
aad
je
mov
int
push
fs
daa
mov
insb
pop
push
das
sub
stos
push
imul
cli
cwtl
add
jg
cmp
in
and
mov
push
popa
xchg
out
loop
jb
mov
dec
lods
mov
shr
pop
or
pop
pusha
les
jns
test
lret
dec
test
aaa
idivb
push
test
adcb
lahf
lds
xlat
pop
adc
push
sub
in
out
lods
mov
rorl
clc
jmp
sbbb
cs
call
in
push
fldcw
sbb
subl
mov
mov
js
imul
push
pop
popf
xlat
mov
push
dec
pop
dec
xor
push
test
mov
movsl
repz
insb
jg
stos
inc
jo
inc
add
int
and
pop
gs
ljmp
mov
xor
and
aaa
jp
pop
cltd
lods
cmp
push
mov
stos
push
add
sub
adc
mov
lods
cltd
jo
push
scas
mov
xor
pop
jb
dec
std
ficompl
push
adc
push
mov
mov
lock
iret
mov
jae
sub
fmul
inc
push
fistpl
push
fisubs
out
insb
icebp
shll
int
shlb
lea
ret
dec
and
pop
cld
fcoms
or
outsb
or
cmp
int3
mov
mov
xchg
fsts
jbe
in
sbb
into
xchg
pop
fisubrl
pusha
lods
and
adcb
xchg
icebp
xchg
icebp
jno
jbe
stos
sahf
jmp
inc
adc
xorl
add
xchg
and
xor
ljmp
pop
outsb
xchg
jecxz
into
cmpsl
rolb
cmpsb
imul
push
pushf
movsl
int3
or
dec
sub
jne
mov
cmpsb
nop
push
cmp
out
sbb
lds
mov
shll
int3
addr16
dec
xorb
es
imul
jne
xor
ds
and
cmp
je
xchg
out
pop
test
shlb
frstor
clc
pop
cwtl
sbb
sub
int3
xor
test
ror
jbe
lret
int3
loope
xlat
add
sahf
rcl
jns
dec
pmuludq
cmpsb
test
sbb
gs
sahf
or
xchg
jbe
repz
in
mov
pop
adc
pop
sti
movsb
jbe
mov
and
dec
jo
insl
bound
sub
movsb
mov
lea
out
mov
ret
out
andb
mov
push
scas
pop
dec
cld
mov
inc
or
addl
lea
je
add
loop,pn
testl
xor
dec
push
daa
pushf
cltd
xchg
cmpxchg
push
inc
cmpb
mov
or
aas
inc
add
jnp
cwtl
shlb
movsb
cmp
push
lret
sub
sbb
xor
in
sahf
or
fimuls
ss
dec
cmp
push
pop
and
repnz
sbb
jge
and
adc
mov
xchg
daa
push
mov
pop
push
sbb
adc
push
lods
pusha
subb
out
dec
popf
pavgw
out
sbb
push
xchg
stos
arpl
mov
push
mov
cmp
pushf
sub
rol
push
in
jne
push
sub
pop
mov
stos
loope
mov
or
cmp
inc
mov
adc
adc
fwait
inc
in
mov
mov
jecxz
push
lods
jne
cltd
subb
mov
cmp
jmp
inc
inc
or
or
mov
xchg
or
andb
adc
test
mov
sbb
fbstp
xchg
pop
pand
dec
sub
fsubs
ficoms
and
mov
lds
sbb
into
pop
loopnew
mov
out
repz
out
adc
lods
in
sub
and
lods
pop
lock
clc
mov
adc
jecxz
call
mov
adc
mov
pop
pop
js
js
pop
enter
mov
in
push
nop
xchg
pop
aas
jne
push
leave
jnp
ja
aas
scas
dec
cmp
fs
sbb
inc
fwait
packssdw
mov
xchg
sbb
out
push
pop
cmp
mov
bound
imul
rolb
and
xchg
dec
or
lods
mov
inc
out
scas
sub
jne
mov
int3
adc
enter
std
dec
ret
addl
insb
lods
aam
push
sbb
xchg
out
int3
sbb
sbbl
enter
xchg
adc
enter
push
inc
inc
xor
sub
daa
push
push
jno
cs
jns
fs
pop
loope
fisttpl
outsb
mov
mov
int3
mov
aaa
pop
push
enter
mov
xchg
shr
popa
push
xchg
pop
adc
or
cmp
in
scas
jae
arpl
out
out
or
fldt
ss
jge
inc
inc
cld
mov
dec
lcall
and
jge
push
cmp
xchg
cmc
cmp
mov
and
sbb
or
cmpsb
mull
fwait
insl
pop
dec
inc
roll
leave
inc
jnp
push
icebp
in
inc
push
lock
test
xchg
add
pop
int3
jns
dec
push
das
xchg
fnstenv
enter
jno
cmp
mov
ljmp
push
or
negb
lret
xchg
mov
mov
jecxz
sub
cmp
add
imul
addr16
iret
mov
std
leave
adc
fsub
push
adc
cmpsb
push
xchg
subb
add
adc
popa
xlat
ljmp
negb
adc
mov
push
pusha
es
lcall
jne
cmpsl
jg
mov
iret
adc
push
cwtl
es
mov
add
jmp
clc
stos
xlat
sbb
xchg
inc
bswap
mov
jns
dec
jl
xchg
xchg
mov
sbb
mov
dec
mov
mov
mov
outsl
in
xor
xchg
imull
dec
inc
imulb
fidivrl
sub
and
out
lods
xor
cltd
mov
movhlps
pop
xor
lahf
inc
out
addr16
in
push
mov
add
imul
cmpsb
and
jge
sub
mov
push
xchg
add
repz
lock
mov
js
call
int3
pop
sub
sub
sbb
xchg
pop
and
imull
and
movsb
clc
jg
ficompl
aas
sbb
mov
fstl
or
aaa
movsl
dec
int
or
fwait
lahf
cld
xchg
adc
xor
add
push
adc
mov
sub
repz
mov
mov
test
in
cld
js
enter
in
repnz
push
popa
jmp
out
dec
push
mov
sub
stc
es
popa
jp
jmp
xor
and
mov
xchg
xchg
xchg
ja
testl
cmpsb
mov
hlt
sub
adc
dec
mov
sbb
mov
jp
int3
fmuls
mov
ret
lods
movlps
and
or
clc
push
imul
pop
mov
xchg
fildl
rol
fbstp
test
je
fiaddl
aaa
mov
aam
or
mov
outsl
movsl
inc
pushf
add
clc
insb
and
pushf
shll
add
ret
mov
push
push
sbbb
push
xor
dec
out
test
jo
mov
shlb
ret
sbb
popa
sti
enter
jecxz
ds
insl
dec
out
or
addr16
xor
loop
and
rolb
in
in
ljmp
stos
int3
cmp
pop
cmp
ret
repnz
icebp
wrmsr
pop
sbb
popa
mov
out
xchg
jg
mov
fisubs
xchg
es
mov
pop
fists
shrb
adc
add
stc
dec
cwtl
sbb
dec
icebp
lret
leave
lods
pop
adc
xchg
leave
stos
das
pop
fisubrl
insb
popf
ljmp
jmp
ss
clc
and
lcall
fdivl
call
push
push
add
and
sbb
push
shlb
cmp
mov
xlat
fwait
imul
push
add
neg
nop
into
push
mov
ja
or
std
and
stos
mov
popf
lds
sub
adc
push
jge
std
movsb
fs
cmp
loopne
arpl
aam
adc
stos
lock
sub
xchg
jge
pushf
les
fadd
cld
je
mov
cmpsb
int
and
ds
imul
mov
les
out
push
fnstsw
sub
xchg
cmp
gs
xor
dec
mov
jnp
out
call
push
movsb
cmp
add
insb
cli
stos
mov
push
arpl
inc
cmp
dec
pushf
dec
dec
dec
jne
jecxz
cmp
push
les
push
jmp
inc
mov
mov
ja
pop
add
and
fwait
es
inc
mov
mov
jnp
or
insb
jnp
movsl
mov
outsb
push
inc
or
xchg
repz
cmp
pop
or
cmpsl
frstor
and
mov
jno
fdivrp
repz
sti
arpl
and
mov
jne
out
adc
test
mov
jnp
enter
xchg
push
mov
outsl
and
mov
mov
sbb
push
ret
push
outsb
icebp
cmpsb
fidivl
add
mov
xchg
mov
shlb
mov
fnstcw
in
popa
cmp
dec
pop
pop
loop
scas
pop
insl
jmp
sub
push
hlt
roll
shl
cmp
addl
mov
jnp
dec
mov
rcrl
cld
aam
sub
shll
cmp
mov
fldcw
xchg
sbb
arpl
push
into
shrl
sub
push
push
cmp
fs
std
cmpsl
stos
addr16
sahf
xchg
movl
jecxz
xor
aam
insb
xchg
roll
ss
in
or
sub
in
cwtl
push
dec
and
les
mov
shr
sub
jl
scas
xor
stos
xor
dec
mov
je
loopne
das
lcall
fldt
outsl
add
lret
lahf
mov
mov
pop
mov
ds
std
jmp
or
movsb
cmpsb
mov
fldcw
mov
das
scas
adc
pusha
push
push
and
dec
inc
dec
ds
dec
add
cld
loope
dec
push
mov
pop
ficomps
ret
xor
je
hlt
lods
js
push
dec
mov
sbb
sbb
in
ret
xchg
pop
mov
fxch
jo
mov
jne
std
sahf
xor
or
lds
pop
test
inc
movsb
sub
inc
inc
pushf
jg
mov
scas
pusha
and
or
mov
cmc
lahf
mov
cmp
insl
jge
sbb
std
aaa
sub
add
or
ds
nop
push
add
push
mov
in
pop
or
dec
push
mov
jns
insl
inc
fsts
daa
adc
stc
notb
mov
adc
addr16
cld
cmp
testl
adc
in
inc
xor
jbe
lret
xor
or
enter
cmpsb
sarb
mov
scas
inc
adc
ja
ss
jmp
push
repnz
mov
mov
inc
sarl
aas
aaa
das
dec
push
stos
add
mov
ret
iret
leave
imul
lods
cli
adc
inc
loope
inc
imul
sub
add
push
push
xchg
pop
pop
cltd
mov
gs
daa
cld
aas
mov
jo
repz
jg
adc
pushf
mov
mov
setnp
test
mov
jp
loopne
push
aad
pushf
pop
jmp
js
aas
cwtl
ret
mov
daa
ret
cmpsb
shll
dec
push
push
in
xor
jl
ljmp
jnp
in
add
sbbl
xlat
fs
xchg
insl
aas
xlat
mov
int3
popf
dec
add
mov
bound
xchg
arpl
cmp
inc
jp
xchg
pop
jne
xchg
dec
sub
gs
xchg
pop
mov
xchg
mov
sub
std
mov
lahf
cld
sbb
aad
dec
xor
outsl
sub
scas
dec
and
inc
pushf
scas
mov
sub
adc
inc
xchg
pusha
insl
cld
sub
fiaddl
insl
jns
dec
cmc
jne
in
popa
mov
ds
daa
loopne
sub
test
insl
mov
loop
and
cmc
mov
or
imul
jno
cmp
and
das
mov
push
shlb
pop
popf
sti
stos
adc
xchg
inc
test
pop
add
mov
jge
mov
pushf
xchg
mov
adc
adc
iret
jb
push
iret
inc
pop
sub
pusha
add
cmpsb
dec
inc
test
inc
insb
or
xor
notb
dec
in
stos
cmpsb
es
jg
mov
mov
lods
inc
cwtl
mov
aas
add
jmp
and
fwait
inc
repz
outsl
mov
data16
adc
int
outsl
inc
int
rclb
xchg
push
push
cmpsl
xchg
pop
repnz
jae
add
dec
cmpl
jmp
pop
cltd
dec
in
push
das
fists
mov
cmpsb
add
mov
fisttpl
jl
cmp
loop
lcall
movsb
inc
add
push
pop
into
jle
sbb
in
loop
mov
shrl
xchg
adc
jnp
repnz
cld
push
ds
addr16
push
adc
xchg
inc
sahf
cli
ror
jno
dec
sbb
jnp
mov
in
out
es
std
adc
mov
ja
ficoms
loop,pt
cmc
inc
mov
out
sarb
test
jge
or
nop
fdiv
jge
and
or
in
inc
pop
cmp
jnp
imul
sarb
pop
imul
cwtl
jmp
mov
pop
push
inc
sti
popa
adc
loop
fcomip
sti
movsl
fs
lret
pop
sub
push
adcb
lds
ss
ljmp
test
push
dec
out
bound
xchg
mov
cld
and
mov
adc
xchg
jp
cmp
test
push
or
jmp
xlat
outsb
push
or
pop
and
or
iret
add
or
aas
mov
mov
jo
mov
int3
xchg
xorb
mov
fwait
in
loopne
test
imul
mov
out
push
or
jae
jle
sbb
sub
inc
inc
loopne
gs
sbb
aam
out
push
or
mov
out
add
mov
shlb
andl
mov
cmp
outsb
cmp
mov
cmpsb
mov
jno
xor
cmp
daa
pop
sub
inc
cmp
cmpsb
pop
lods
inc
push
mov
xchg
push
mov
cmpsb
mov
jge
ficompl
shl
rcr
xor
sahf
jbe
lcall
push
pop
sub
test
mov
das
iret
mov
mov
in
insl
cwtl
mov
sub
or
movsb
test
xchg
int3
test
lods
shll
xchg
xor
dec
test
movsl
cmpsl
sub
push
daa
stc
mov
lcall
ja
call
fadds
fistps
jle
cmp
adcl
adc
dec
pusha
loope
and
fstl
add
jmp
mov
pop
cmp
cmpsb
cmp
push
dec
dec
pop
xchg
sub
add
cli
xchg
xchg
es
scas
sub
popf
mov
add
adc
add
mov
dec
or
xor
stos
shl
leave
inc
shr
pusha
sahf
adc
aaa
dec
pop
lret
insl
dec
int3
mov
mov
inc
mov
rcll
loopne
mov
xchg
mov
shlb
loope
sbb
dec
sbb
mov
ret
stc
or
shl
inc
iret
dec
pop
sbb
cmp
inc
mov
sti
shll
test
and
pop
jae
fildl
lds
loopne
stos
lods
and
fsubrs
in
inc
mov
loopne
sub
int
mov
inc
mov
pop
fdivrs
mov
cmp
mov
int
pushf
adc
pusha
pop
jno
clc
test
lods
movl
dec
int
cmpsb
icebp
rclb
lahf
xchg
and
adc
dec
fistl
push
xor
sbb
inc
pop
mulb
cmp
mov
push
push
cld
popf
push
test
inc
mov
mov
sbb
pop
add
lret
pushf
movsl
xchg
ret
dec
arpl
fs
inc
lret
popf
fwait
sub
jnp
push
mov
int3
ss
lcall
fldcw
repz
test
hlt
push
sbb
cli
sbb
into
mov
imulb
mov
mov
pop
jecxz
jp
pop
imul
inc
packssdw
jne
adc
test
int
stc
lods
insl
orl
ja
lock
outsl
cltd
nop
fldt
or
nop
es
cmc
fistpl
lods
mov
add
xor
or
or
aaa
or
lock
sub
pop
xchg
add
adc
ss
fstps
sbb
lds
in
lcall
insb
aad
adc
add
push
out
enter
lds
rolb
mov
inc
out
sub
cmp
inc
js
ds
adc
stos
jmp
mov
xor
jmp
add
scas
lea
mul
test
cmp
imul
cmp
add
fcoms
mov
daa
mov
mov
cli
mov
push
add
and
cltd
sahf
or
int
push
mov
push
mov
outsb
jmp
dec
xor
jp
mov
shlb
movntq
out
bound
rcll
dec
adc
sarl
in
cmp
fs
jns
jne
jg
xchg
mov
push
xor
dec
jg
test
and
push
push
adc
or
jns
push
and
ja
xor
in
add
sub
xchg
dec
mov
sub
pop
sarb
fldt
movsl
or
lods
jge
and
in
movsl
ret
jl
pop
lds
movsb
rclb
inc
dec
jno
push
jb
pop
mov
xchg
out
repnz
in
ret
jae
dec
pushl
iret
inc
rclb
adc
cmpb
inc
sbb
rorb
dec
mov
ljmp
mov
leave
stos
shr
rclb
lds
mov
xlat
dec
cwtl
mov
sub
xor
push
bound
jbe
mov
popf
dec
ja
fisttps
roll
mov
and
mov
stos
mov
adc
mov
mov
lcall
movsb
outsl
shrl
ds
arpl
or
cmp
and
dec
shll
fadds
jnp
or
push
cmp
lret
cmpsb
xor
lret
pop
lret
inc
arpl
mov
add
dec
in
inc
dec
mov
pop
mov
cmpsl
insb
inc
xor
es
cmp
mov
out
xor
pop
jmp
mov
mov
mov
jo
and
cmpb
pop
dec
sar
sub
mov
ljmp
andl
insl
int
rcr
rol
sub
int
ficoml
mov
outsb
lods
xorl
in
cmp
fwait
mov
les
mov
popa
push
jp
inc
test
mov
je
popa
cli
in
inc
xchg
mov
jbe
cmp
mov
or
cmp
fs
mov
pop
sarl
inc
mov
aas
adc
adc
enter
mov
and
call
cmp
jmp
mov
inc
ret
mov
ss
fs
gs
pushf
xor
scas
int3
mov
ljmp
jge
xchg
inc
jge
ret
and
jae
sbb
ljmp
stos
sahf
cmc
mov
pop
adcl
push
std
sub
pop
dec
pop
and
testb
arpl
sbb
call
rclb
xor
xor
in
clc
jmp
ljmp
jle
fsubrp
inc
icebp
jne
mov
std
cmp
add
adc
mov
cmp
mov
test
iret
push
xor
mov
sub
sub
and
test
mov
pop
jno
aad
and
loopne
mov
cmp
cmp
mov
mov
cmp
xor
lods
imul
pop
bnd
or
cwtl
and
pop
pop
data16
jo
dec
insb
and
sbb
clc
cmpsl
andl
push
push
sarb
sar
xor
or
xor
xchg
add
jge
adc
push
jle
inc
mov
sbb
ljmp
cwtl
sti
xor
and
stc
dec
cltd
mov
sbb
cmp
cmp
mov
push
push
mov
scas
xchg
js
mov
clc
sbb
ds
mov
jle
push
loope
ret
pop
sub
rcll
cmp
and
movb
fwait
les
mov
test
xchg
adc
lods
jno
fsubl
xchg
push
dec
jge
fsub
pushf
clc
and
aas
lcall
stos
xchg
add
push
nop
and
or
out
inc
lret
sbb
sbb
loope
icebp
lods
or
cmp
mov
push
add
out
pop
insl
or
jmp
pop
mov
adc
add
fdivs
and
mov
push
and
dec
jo
add
mov
xchg
mov
insb
fs
das
or
inc
bound
lods
add
pushf
cmp
mov
leave
pop
ret
mov
int
xor
inc
sbb
sbb
fidivs
push
fdivrs
notl
or
dec
cmp
pop
stc
add
fsubrl
stos
pop
xchg
fsubrp
hlt
stos
push
jnp
insl
fs
push
xlat
in
push
fsubl
and
sbb
or
mov
xchg
or
test
inc
cmc
std
push
jp
and
dec
fmuls
inc
cmpsb
xor
xchg
iret
aas
call
shrl
scas
mov
sbb
push
sbb
movsb
mov
xor
and
lret
xor
shlb
sub
out
xchg
push
out
mov
cmp
or
dec
inc
push
out
cs
cmp
mov
data16
pop
ljmp
repnz
or
pop
pushf
adc
sbb
mov
cmp
out
adc
shrl
sub
outsb
or
in
leave
adc
pop
in
mov
jbe
sti
jecxz
fdivl
inc
pop
mov
fs
nop
or
faddp
push
adc
cli
mov
and
ja
xor
jg
pusha
xchg
inc
in
jo
inc
jno
or
inc
pop
inc
push
add
repz
jb
rcrl
or
data16
mov
pop
add
cltd
test
div
pop
repnz
xchg
aas
cmp
dec
mov
lret
adc
fidivrl
sbb
sbb
jno
xchg
jb
xor
mov
cld
test
mov
push
add
shrl
mov
adc
xchg
pop
imull
sub
pop
mov
dec
mov
pop
dec
xor
push
out
movsb
or
add
jge
sub
std
stos
in
rcl
dec
sbb
push
push
pop
push
mov
dec
into
icebp
insl
sub
xchg
movb
adc
inc
xor
or
cmp
push
das
jb
cmp
push
rcrl
into
rorl
add
das
loop
pop
push
or
mov
jp
fildll
jne
repz
or
inc
fs
xchg
addr16
ficoml
rolb
unpcklps
cmp
cmp
mov
ret
or
psllq
mov
addr16
rorb
inc
add
inc
sub
mov
mov
mov
jge
mov
sbb
stos
decl
dec
and
sbb
sub
cmp
scas
shlb
jl
test
xor
data16
orb
int
push
outsl
push
and
inc
sub
lods
jo,pt
sahf
fcomi
ficompl
shl
ss
push
sahf
in
xchg
mov
jns
mov
rolb
lock
nop
ljmp
ss
lods
shl
shlb
pop
xor
push
push
pop
mov
fmuls
mov
aas
sbb
addl
cmp
inc
std
outsl
int3
cmp
int
sub
lcall
inc
pop
and
inc
notl
xchg
pop
movsb
mov
mov
enter
push
jno
jle
fsubrs
push
push
bound
std
push
divb
and
jp
dec
dec
sahf
adc
fsubl
fsubs
outsb
fwait
add
cli
mov
mov
popf
dec
jne
mov
inc
daa
out
inc
ss
fidivs
loop
movsl
ret
shrl
int
fcmovne
out
mov
push
jmp
add
pushf
dec
aas
mov
inc
stc
inc
or
jo
xchg
add
stos
lahf
addr16
push
mov
cmp
mov
mov
ja
and
mov
xchg
outsb
dec
mov
or
in
mov
clc
sbb
fucom
call
push
sub
or
enter
push
or
insb
cmp
addr16
mov
stc
push
leave
test
out
and
inc
and
sbb
pusha
sbb
dec
fidivl
pop
jl
xchg
xchg
sbb
adc
dec
negl
nop
aad
in
xchg
pop
fisubrl
push
lret
hlt
orb
jp
cli
fwait
xchg
inc
jmp
les
mov
mov
jb
cmp
cmp
arpl
sbbl
mov
pusha
mov
inc
mov
stc
mov
int3
cld
xchg
mov
int3
mov
cmp
push
jp
mov
adcb
arpl
mov
push
push
jno
iret
jmp
cmp
or
and
push
out
xchg
xor
ja
out
decb
mov
repnz
push
scas
iret
std
insb
jb
and
pop
pop
pusha
push
pop
xchg
push
jae
add
adc
cwtl
sub
out
and
fisubrl
adc
outsb
out
or
add
fpatan
jae
mov
icebp
mov
aas
xlat
adc
imul
add
int3
adc
inc
or
and
scas
add
lcall
movsb
je
lcall
push
inc
add
rorl
out
cmp
jmp
inc
dec
and
mov
jns
jle
in
cmp
out
movb
js
lock
in
xor
dec
sub
pop
and
or
sub
int
pop
mov
cmp
pop
xor
outsb
or
mov
lret
inc
jnp
dec
jg
lahf
push
xor
mov
dec
jg
mov
inc
out
fcmovnu
out
in
sti
les
shll
jno
sbb
cmp
pop
inc
pop
ja
fstpt
out
xor
jbe
lods
dec
cltd
je
mov
jmp
jbe
test
ret
in
test
cmpsb
push
adc
int3
cmp
test
rorl
or
mov
test
popa
add
sbb
dec
and
bound
int
sub
lods
mov
aaa
rcr
cmp
lcall
pop
pushf
add
pop
ds
mov
jo
idivl
mov
pop
cmpsb
rolb
test
ja
fisttpl
or
xlat
lret
xchg
inc
lret
push
rcrb
push
push
add
push
adc
sub
mov
adc
cmc
leave
lea
jnp
sbb
mov
mov
ret
dec
xchg
and
dec
adc
mov
dec
jne
enter
pop
lret
shrb
fstpl
xchg
mov
outsb
icebp
inc
jge
push
mov
cmp
out
fs
adc
sbb
xlat
push
adc
outsb
mov
fcmove
cmpsl
mov
fimuls
and
test
xchg
fsts
call
inc
sub
cmpsb
test
cmp
xor
jg
jmp
push
add
cmpsb
xor
push
data16
mov
jp
mov
push
out
or
inc
cli
dec
sahf
les
dec
clc
scas
out
adc
je
dec
popf
sub
or
mov
loopne
pushf
sbb
outsb
mov
push
cwtl
dec
call
inc
or
dec
shlb
scas
and
fistps
test
cmp
cld
mov
sti
sbb
mov
mov
push
inc
xor
cld
inc
insl
sub
cmp
sahf
aam
fdivrs
add
xor
daa
clc
stos
pop
pop
notl
jl
sti
sub
xor
lret
repnz
repnz
pop
inc
add
push
dec
push
insl
aam
xor
sbb
inc
mov
std
mov
test
lret
stos
fstpt
jg
fisubrl
xor
inc
mov
stc
orb
xchg
in
mov
lret
or
pop
lock
cli
fists
add
push
insl
inc
int
int3
xchg
cmpl
cmp
sbb
and
loope
cmp
pop
pusha
pop
jo
scas
sti
jl
mov
sbb
mov
pushf
idiv
les
daa
fdivrs
jl
sub
bound
add
jno
xor
gs
mov
jle
std
xor
lods
push
mov
xchg
andl
pop
and
pop
sub
rcrb
sbb
fwait
divb
rcrb
xor
cwtl
adc
pop
add
ss
sub
or
cli
xorl
pop
xchg
push
fstps
and
fs
push
push
shll
in
pop
mov
cmp
fstpt
aas
in
or
pop
dec
jae
scas
or
das
push
push
lds
dec
rorb
je
and
sub
sbb
xchg
testl
sbb
repz
mov
sub
out
cwtl
mov
fistl
push
inc
mov
imul
cmpsl
test
pop
outsb
lds
mov
movsl
xor
pop
lahf
fmuls
fs
mov
jecxz
in
out
mov
sub
mov
sbb
cmp
mov
sbb
dec
or
lcall
add
mov
ds
stos
mov
push
sbb
cltd
scas
cwtl
mov
mov
jle
xor
pop
jge
cs
out
xchg
testb
ret
jmp
les
test
ja
mov
pushf
xor
cs
lcall
push
pushf
jnp
dec
stc
add
out
push
mov
inc
pushf
pop
cmpsl
stos
shlb
shrb
rorb
xor
cmp
loope
outsl
xlat
mov
add
sbb
sahf
mov
rcll
adc
ss
ret
jmp
jne
xor
cltd
mov
lea
pop
pop
mov
push
xor
imul
cs
hlt
xchg
aaa
fwait
aad
cmp
subb
lcall
fmuls
or
mov
or
repnz
filds
sbbb
dec
or
sub
aam
int
dec
enter
push
or
sti
orl
addl
and
push
sarb
jmp
leave
push
xchg
or
cmc
mov
adc
hlt
lods
mov
adc
ret
add
lock
mov
lds
mov
and
cmp
adc
pop
shrl
divl
mov
das
mov
leave
adc
clc
pop
add
add
popa
cld
cwtl
mov
push
shlb
sbb
sti
cltd
sub
nop
lods
sbb
and
sti
aad
ret
mov
in
jge
loopne
add
insb
mov
mov
bound
mov
xorl
shr
ret
mov
xchg
or
testl
cltd
lock
subb
les
push
and
cmp
stos
jae
mov
movsb
jno
std
bound
lods
cwtl
push
jo
cld
push
adc
enter
aaa
push
mov
imul
cmc
fstl
ss
popf
push
cs
inc
adc
das
xlat
and
dec
mov
jns
insl
inc
jae
xchg
push
xlat
stc
xchg
and
test
shll
sub
arpl
pop
cmpsb
push
or
loopne
or
push
or
pop
jle
push
adc
scas
pop
xor
in
add
pop
iret
sub
and
movsl
test
rol
popf
dec
push
fwait
pusha
rcrl
cmc
mov
fwait
add
popa
lcall
mov
sbb
push
xorl
and
sub
cmpb
pushf
test
arpl
loope
cmp
lods
cltd
jae
rol
test
fstps
iretw
test
call
inc
test
lret
lret
push
bound
lods
aam
popa
mov
pop
mov
repz
ret
fcoms
es
mov
jecxz
cmp
or
dec
nopl
out
jne
xchg
mov
sbb
sub
cli
mov
adc
xchg
fs
xchg
outsb
dec
or
ficompl
pop
pop
mov
rolb
loope
lahf
sbb
ds
shlb
inc
mov
fwait
lods
and
mov
jnp
mov
imul
mov
repnz
movsb
add
cmp
or
into
adc
lods
imul
push
outsb
jg
adc
out
jb
push
dec
cmp
pop
add
jp
out
jbe
cmp
push
sbb
sub
xor
in
shll
out
int3
mov
dec
out
mov
and
mov
aaa
sub
imul
aas
pop
xchg
cmp
into
sbb
xor
cmp
cmp
adc
sub
rcrl
mov
ljmp
lea
out
mov
push
sub
xor
movsb
sub
xchg
imul
rorb
aad
andb
icebp
dec
sbb
scas
jnp
mov
test
xor
jnp
out
out
ds
nop
ds
jns
mov
adc
or
push
xor
mov
push
mov
imul
lcall
inc
sbbb
add
in
repnz
notb
and
push
push
sbb
lcall
dec
pop
xor
jne
lods
push
roll
push
jb
dec
rcrb
xor
repz
nop
movsl
lods
lea
es
test
test
jno
cmp
arpl
clc
adc
insl
fdivl
loopne
into
push
mov
repz
mov
or
rcr
fmul
sub
ja
testl
rclb
imulb
pop
stc
cltd
jle
xchg
adc
xchg
hlt
dec
pushl
sub
mov
and
or
mov
xchg
nop
shrb
ljmp
ljmp
fwait
push
clc
pop
inc
sbb
sub
ss
jge
in
fwait
or
mov
sbb
jns
hlt
jne
in
xlat
vmovd
int
inc
lahf
sbb
aam
inc
and
push
and
mov
dec
loope
ret
testl
cmc
sbb
or
push
sti
dec
mov
dec
and
mov
lcall
dec
hlt
stos
sbb
lods
sti
es
fcoms
jmp
sbb
popl
pop
bound
outsb
mov
and
pop
or
cwtl
loopne
or
inc
cmpb
pushf
shll
call
in
sub
cmc
outsb
mov
cmp
into
dec
jno
xor
test
sbbb
sub
xor
adc
adc
mov
mov
jmp
dec
cwtl
pop
test
lock
bound
pop
rcrl
dec
cmp
add
add
mov
jg
in
add
std
movsl
jae
jmp
or
imul
jecxz
ja
push
sbb
lods
in
pop
pop
ljmp
int
mov
and
fstl
mov
ror
out
pop
sti
lods
imul
sub
mov
push
add
in
fsubs
sbb
sub
popa
pop
ja
mov
out
mov
rorl
gs
pop
fcmovbe
xorb
enter
cmp
lcall
frstor
lret
loope
in
aaa
movswl
insb
fisubrl
push
fs
fnstcw
lods
pop
lahf
mov
outsb
sub
jp
add
filds
xchg
mov
and
jecxz
sub
rorl
mov
or
and
jp
push
jmp
or
pop
pop
test
jno
ja
xchg
aam
std
repnz
mov
pop
idivb
xchg
mov
inc
sbb
aam
shlb
push
faddl
test
mov
nop
aad
mov
pushf
int
mov
js
imull
loop
jecxz
pand
repz
add
push
mov
dec
inc
cltd
and
lret
jnp
in
pandn
jg
insb
dec
shrb
cmp
cmc
pop
mov
cmp
fmuls
decl
adc
cld
lea
jge
imul
insb
and
sub
dec
pop
les
aad
mov
or
ficompl
shlb
cmpsl
jecxz
mov
lret
jb
add
adc
and
lds
jb
lods
outsl
aas
xor
cmp
movsl
jns
mov
inc
aas
pop
sbbl
test
add
nop
cmp
mov
mov
inc
mov
mov
shll
scas
fcoml
out
xchg
out
mov
out
or
add
dec
int3
insb
out
out
jno
cmc
loopne
dec
inc
mov
in
movsl
arpl
cmpsl
xchg
into
in
jg
imul
shrl
dec
cwtl
iret
std
mov
hlt
lods
add
jbe
pop
je
cli
fld
out
fcmovb
pop
mov
lret
mov
sbb
fmull
push
and
dec
cmpb
iret
inc
jns
xor
inc
inc
sub
xchg
cmp
sbb
mov
sub
lret
xor
cmpsb
testb
cltd
imul
and
insl
iret
push
mov
sahf
call
orb
fstp
orl
mov
ficoml
and
jmp
xchg
mov
insl
xor
xchg
es
ret
jmp
in
dec
add
inc
adc
mov
adc
or
sti
lret
jmp
flds
jo
xchg
movsb
shrl
mov
mov
ret
test
lahf
loope
aam
adc
mov
loop
xchg
mov
addr16
xchg
ja
testb
mov
push
sub
fsts
mov
loopne
xlat
mov
jb
mov
nop
cwtl
in
mov
rcrb
sub
pop
sub
mov
xlat
inc
ja
push
daa
or
pop
mov
sub
inc
stc
rclb
arpl
cwtl
dec
sub
or
lret
jne
or
mov
mov
outsb
jae
out
bound
bound
push
pop
xor
out
or
xor
imul
dec
aad
mov
push
mov
mov
lods
sub
aaa
mov
ja
cwtl
scas
loope
orb
lahf
arpl
mov
xchg
adc
loope
push
loopne
icebp
adc
jnp
inc
pop
pop
arpl
lahf
adc
cvtps2pd
mov
call
aam
jmp
test
cmp
int3
cs
dec
repz
insl
mov
cli
sub
sub
mov
loopne
outsl
lret
mov
mov
movntps
add
xor
push
ror
mov
mov
jecxz
insl
pop
sub
rcll
in
add
cmp
or
es
and
dec
out
outsl
jg
in
push
sub
mov
xlat
shl
xor
cld
jg
jo
fnstsw
add
idivb
rcll
mov
inc
lods
dec
lahf
in
aam
call
mov
ret
dec
or
lea
mov
dec
outsl
mov
jg
xchg
sub
inc
notb
rol
xchg
cmp
jae
mov
inc
rorb
ljmp
stos
mov
std
or
lock
into
mov
fsubs
scas
std
ret
mov
and
or
fs
mov
jp
jg
mov
xchg
test
scas
stos
jecxz
in
add
insl
inc
and
test
lret
or
ss
cs
adc
mov
jbe
loopne
in
sbbl
cmp
jmp
js
mov
and
lods
mov
nop
test
movsb
mov
sbb
xchg
sub
sub
lods
cld
das
mov
scas
iret
mov
in
push
out
inc
jmp
or
jge
pop
clc
jo
icebp
arpl
dec
add
or
or
in
cli
mov
lahf
push
leave
sbb
inc
xlat
repnz
popa
mov
arpl
jle
in
sti
aas
or
and
inc
das
sbb
es
stc
mov
mov
mov
xchg
or
mov
jns
data16
mov
mov
dec
and
pop
loope
sbb
lods
cltd
push
js
cmp
lds
repz
xorl
repz
dec
pusha
sub
sub
jmp
cmp
les
lret
mov
sub
pushf
add
sahf
int3
adcb
cmp
or
movsb
adc
and
test
sub
jl
nop
xchg
adc
mov
cmp
cmp
xchg
roll
sbb
inc
mov
cmp
lods
jge
xchg
cmpsl
jmp
in
push
cltd
repz
push
dec
sbb
shl
repnz
sbbl
mov
push
cs
lods
pop
loope
ljmp
or
lds
pusha
fisttpll
xchg
adc
jns
push
dec
xor
lods
xorb
add
shlb
xor
movsb
mov
test
lcall
imul
jne
imul
push
mov
orl
dec
mov
pop
in
mov
push
shrl
mov
movsb
cs
out
aaa
sti
pop
jge
dec
in
idiv
test
jle
fildll
in
xchg
lret
daa
xchg
jnp
cmp
stos
lcall
xlat
gs
push
and
add
rcll
push
cmp
dec
aad
xchg
stos
andl
add
push
sbb
mov
sub
stc
push
dec
xor
popf
int
push
cmp
dec
es
mov
push
fcoml
push
push
cli
movsl
or
js
push
mov
in
adc
inc
and
push
or
pop
pop
bound
mov
mov
and
or
push
mov
hlt
inc
add
movsb
sbb
ds
andb
jg
or
dec
stos
ljmp
cmp
fs
dec
pop
test
les
sbb
stos
or
hlt
mov
dec
mov
pop
xchg
jno
orl
in
repz
pop
pop
dec
inc
sti
test
mov
pop
or
sub
orb
pushf
adc
cmp
mov
mov
das
mov
or
sub
and
int
pop
pop
ljmp
push
add
cmp
shlb
call
daa
clc
add
add
mov
fs
pop
mov
mov
xchg
inc
mov
jns
aaa
rcl
cmpsl
add
call
pop
cli
inc
xor
ljmp
push
cmp
cmp
xchg
test
jae
out
xor
mov
lock
lahf
add
push
fs
cmp
pop
orl
call
push
fucom
dec
loope
in
mov
sub
cmp
xchg
cltd
ds
xlat
in
imul
mov
daa
sbb
sti
sub
jle
aas
push
sbb
idivl
and
jbe
xor
sbbl
cmc
dec
std
ret
sub
mov
out
xchg
fwait
je
pop
add
mov
xor
push
out
and
in
jmp
jmp
int3
sub
incb
pop
adc
shll
daa
add
xor
in
mov
adc
lahf
in
aas
pop
shr
push
push
std
fcmovb
in
jbe
sbb
or
jbe
inc
mov
imul
out
mov
ret
pushf
mov
sub
stc
and
scas
and
test
call
sub
add
lcall
xor
sub
mov
insb
pop
rolb
ds
push
loop
cld
jno
enter
push
fsubrl
sub
into
outsb
pop
or
jmp
lods
mov
in
cmp
lcall
and
aam
stc
sbb
inc
scas
adc
pop
enter
mov
sti
pop
jo
ljmp
push
cli
pop
rol
jecxz
pop
sbbl
lods
mov
sub
mov
xchg
dec
push
lock
ss
add
mov
loopne
mov
out
in
and
jns
push
inc
cmp
push
mov
out
inc
inc
jl
stc
loopne
push
popa
sbb
xchg
and
movsl
lock
icebp
xchg
push
cmp
andl
xchg
jecxz
mov
mov
enter
sbb
leave
mov
cld
js
sub
push
in
xchg
cmp
or
faddl
inc
add
setnp
inc
dec
scas
sub
mov
lea
dec
push
nop
jecxz
test
scas
cmp
or
add
mov
add
aaa
push
into
push
dec
int3
lahf
ret
jmp
dec
and
fnstsw
ret
sbb
scas
push
cmp
shrl
pop
repz
sub
cmp
movsl
out
lcall
sub
pushf
cmp
pop
data16
add
jle
push
lahf
lahf
dec
mov
sub
call
mov
popf
cmp
sbb
bound
leave
rorl
sub
mov
lds
scas
ret
jecxz
xchg
test
mulb
test
dec
fyl2x
mov
es
fisubrl
mov
pop
mov
cmp
adc
pop
adc
nop
mov
in
push
add
ss
pop
push
dec
jae
fsubrs
push
dec
test
mov
xor
cli
das
in
rol
push
mov
inc
and
in
sti
out
movsb
adc
cwtl
shll
mov
fwait
inc
mov
pushf
mov
adc
mov
in
sub
subl
cmp
lods
nop
mov
fimuls
dec
imul
repnz
mov
xor
mov
sarl
dec
insl
shll
scas
and
inc
xor
sarb
sbb
inc
pop
jmp
out
rol
xchg
adc
in
push
cmp
cmp
pop
xor
scas
cli
pop
test
and
xchg
mov
xchg
arpl
pop
adc
sbb
dec
iret
mov
fwait
insl
pusha
outsl
mov
dec
ret
push
push
aas
hlt
or
jge
fildl
or
pushl
push
lret
pop
mov
xchg
lods
pop
pop
jne
or
aam
cmpb
pop
popf
cs
dec
ficoms
ss
shr
sahf
sar
sbb
pop
add
gs
loop
mov
adc
add
mov
lahf
test
dec
lods
les
aaa
xor
sub
subb
mov
je
adc
popf
js
ret
mov
aad
and
movsb
out
mov
int3
xor
push
cmp
mov
jae
sub
fisubrl
decl
adc
sahf
pop
cmp
mov
pushf
and
sub
mov
insl
jecxz
cmp
adc
imul
aad
icebp
cli
jne
pop
inc
pushf
icebp
adc
adcb
cmp
mov
mov
pop
icebp
mov
leave
rcll
flds
cmc
jo
gs
fdivl
adc
xor
mov
cmp
and
sub
inc
adc
invd
mov
mov
mov
sub
loopne
xchg
icebp
in
jp
mov
movsb
sbb
sub
rorl
out
pop
mov
jno
mov
ljmp
repz
cli
sbb
test
xor
test
sbb
lock
xor
movsl
je
decl
cmpsb
adc
icebp
lods
daa
mov
dec
insb
mov
call
or
fcoml
andb
divl
xor
nop
xchg
pusha
push
insb
jecxz
sub
inc
addr16
dec
vrsqrtss
cmp
mov
cmp
jmp
xor
add
sub
fstpt
dec
xchg
jo
cmp
adc
push
pop
sub
dec
jns
loope
mov
loop
mov
loope
cld
mov
mov
cmp
mov
les
mov
xchg
in
or
sub
aaa
in
mov
add
in
dec
mov
dec
push
jbe
mov
and
mov
jae
repnz
aad
sbb
adc
jo
faddl
push
lret
sub
push
dec
jg
sbb
test
repz
pop
inc
loopne
insl
scas
gs
jecxz
jbe
arpl
xchg
sub
pusha
push
jge
fsubrl
stc
fisubs
push
and
xchg
clc
mov
ja
cmpsb
cld
jp
jns
aam
movsl
popf
sti
ljmp
mov
pop
fldcw
mov
daa
out
aas
rorl
xor
jb
into
sub
dec
pop
xchg
inc
jmp
cmp
adc
cmp
add
nop
add
sub
mov
ret
ja
mov
jg
scas
test
mov
repnz
ljmp
ficoms
mov
xchg
sbb
pushf
loope
or
leave
xlat
xchg
add
ffree
pop
icebp
icebp
mov
jecxz
mov
scas
orl
inc
jne
cmpsb
pop
outsb
mov
fsts
push
iret
sbb
std
sbb
repnz
mov
cwtl
xchg
movsb
mov
sub
test
cmpl
test
inc
add
dec
mov
sbb
add
imul
and
adc
push
mov
adc
mov
pop
add
fbstp
push
mov
xor
loop
ja
into
pop
add
fisubl
xchg
push
lods
fsubr
xor
mov
movsl
ja
movsb
mov
repz
pop
cmp
ljmp
sahf
cmp
fidivrs
lret
inc
imul
mulb
ret
jmp
sbb
leave
cmp
leave
rclb
into
loop
cli
loop
push
packuswb
cwtl
movsb
and
cmp
lcall
mov
pop
or
dec
test
in
pop
std
sub
mov
mov
cmp
popa
das
test
add
imul
cli
jle
aas
xor
repnz
rcll
adc
fs
mov
pop
inc
inc
add
mov
dec
push
ret
jmp
adc
clc
xchg
fildl
loopne
ja
sbb
cmpsl
ljmp
jne
sub
dec
mov
addr16
fldcw
jb
flds
lods
jns
sti
jge
hlt
fs
movsl
dec
or
rcrb
shr
dec
fcos
addr16
ret
loop
cmp
mov
aaa
fistps
les
cld
insl
mov
mov
sub
test
pop
test
add
repnz
pop
mov
lea
pop
punpcklbw
inc
mov
dec
push
adc
nop
xchg
out
test
add
or
add
pop
lret
rcrl
ret
mov
and
jmp
mov
in
sahf
dec
mov
pop
mov
or
push
jbe
out
fdivrs
cmp
ret
push
popf
dec
add
je
aaa
test
inc
sub
mov
outsl
scas
sbb
mov
push
push
mov
push
mov
or
inc
popf
fmull
sub
js
sub
cltd
jae
lock
inc
xchg
sti
int
cmp
push
hlt
jle
nop
into
dec
pushf
mov
stos
into
shrl
loop
in
shlb
push
hlt
mov
aaa
stos
xchg
mov
lcall
sub
xchg
clc
int3
int
rorl
inc
inc
dec
lods
fcmovu
clc
cmpsb
mov
jge
dec
xchg
cmp
add
sti
stc
xchg
popa
push
dec
xor
or
xorb
mov
adc
les
or
add
mov
xor
aam
lods
add
xchg
in
ss
pop
arpl
mov
ret
and
or
fbstp
testb
inc
xor
mov
jp
lcall
repz
mov
sub
lds
aaa
mov
lret
fisubl
in
dec
dec
dec
pop
test
fistpll
xchg
dec
dec
pop
pop
or
int3
or
dec
out
sarb
outsb
ljmp
jecxz
xchg
movsl
adc
mov
js
pop
or
cld
fs
jmp
rolb
mov
hlt
fldl
js
sbb
cmp
inc
adc
pop
out
js
test
xchg
jmp
cmpl
lods
ror
cmp
inc
shlb
fcoms
xchg
outsl
test
inc
inc
lock
xor
adc
cmpsl
call
ljmp
sub
push
and
mov
in
pop
xor
popf
push
dec
dec
mov
dec
lods
jl
addr16
test
outsb
lar
orl
je
movsb
fwait
cwtl
or
ret
mov
lock
ja
cmpsb
cld
inc
cmp
jl
nop
and
insb
adc
lret
loop
aad
inc
cmp
xor
in
iret
sub
outsb
jl
fnsave
fucomip
jo
add
daa
xchg
lods
ja
mov
mov
outsl
imulb
je
popf
lods
scas
cs
jbe
ljmp
mov
fiadds
xchg
loop
or
loopne
ljmp
jge
dec
bnd
clc
std
gs
pushf
mov
dec
cmpsb
sbb
pop
addr16
ljmp
bound
sub
sub
mov
xlat
cli
pusha
add
lock
cmpsb
cmp
mov
mov
outsb
jbe
loopne
ja
push
ja
xor
xlat
adc
out
addr16
mov
cmc
inc
cmp
pop
push
popf
loope
mov
and
cmc
int3
loop
data16
or
pop
jmp
popfw
das
inc
dec
fisubrl
shll
jecxz
lea
mov
pop
scas
mov
dec
push
lds
or
inc
pop
stc
xor
mov
add
dec
push
pop
cmp
adc
xor
es
out
mov
cmpsb
pop
rolb
mov
clc
cld
xchg
push
inc
aas
pop
test
cmpsl
push
mov
hlt
push
pop
int
xchg
mov
xchg
imul
fdivs
xchg
push
stos
out
lahf
or
repnz
lods
pushf
xor
push
xchg
jp
dec
and
gs
test
out
ds
stos
xor
ds
imul
add
in
add
loopne
sahf
xchg
lock
rcrb
in
addr16
out
fadds
mov
push
aad
stos
push
sub
push
mov
add
sahf
sub
incl
adc
out
cmpsb
mov
leave
adc
or
add
xor
mov
or
cmc
lods
les
cmpsl
insb
or
mov
js
cmp
jl
add
mov
jg
mov
xchg
ss
fs
in
lahf
nop
out
subb
push
push
arpl
xlat
inc
in
add
lea
cmp
or
lods
cmpsb
dec
repz
dec
incb
jmp
sbbb
adc
mov
xchg
mov
dec
add
sub
adc
inc
loope
xor
test
pop
dec
test
xorb
test
repnz
lods
lret
faddl
sub
shll
data16
dec
nop
shll
shl
add
andl
test
adc
and
or
add
lret
aad
popa
cwtl
dec
sub
test
int3
adc
mov
and
adc
adc
pushf
mov
lret
mov
in
hlt
cwtl
cltd
in
add
dec
jp
cmp
hlt
inc
jl
jmp
mov
mov
xchg
or
sbb
shll
cmc
in
aad
adc
mov
in
jb
into
xchg
mov
adc
fcompl
xor
std
in
lods
clc
nop
sub
pop
fsubl
inc
iret
pop
insl
hlt
mov
cli
pop
shrl
cld
jmp
dec
pop
mov
mov
stc
cli
shlb
pop
std
fstpl
adc
cmp
mov
cltd
and
adc
mov
movsl
add
imul
adc
lods
mov
push
rclb
stos
incb
or
psubd
cs
dec
dec
mov
lea
mov
cmpsl
xor
or
cmp
jecxz
dec
sar
stos
sbb
ljmp
popf
idiv
in
dec
out
dec
add
fwait
adc
inc
or
adc
inc
mov
inc
cmp
std
sahf
xchg
push
ss
jns
fwait
pop
xor
stos
sbb
lcall
xchg
sarb
xorb
ret
nop
mov
add
icebp
and
popf
xor
mov
push
int3
mov
add
pop
mov
dec
inc
inc
dec
sbb
ja
pop
sub
into
enter
mov
jnp
je
inc
mov
cmp
mov
stos
and
or
add
push
xchg
outsl
xorb
lcall
jecxz
jnp
or
pop
mov
xchg
enter
shl
and
int3
lret
cmpsb
loopne
jae
xchg
sub
sub
in
lods
mov
add
outsb
or
stc
rcll
add
fiadds
rcr
dec
mov
xchg
cmpsl
inc
inc
add
push
scas
stc
xchg
in
mov
mov
sbb
and
repnz
add
xor
hlt
mov
rep
add
int3
out
shlb
mov
xor
ret
or
mov
aaa
push
and
adc
push
jns
mov
add
mov
cld
ljmp
xchg
pop
mov
jle
test
fistpl
inc
sub
divb
stos
pop
jb
jg
jecxz
inc
xor
adc
es
xchg
andb
cmc
lahf
cmc
adc
insb
and
popa
outsb
out
push
mov
pusha
mov
jnp
inc
rcrl
adc
fmulp
jb
xchg
jns
mov
mov
sbb
mov
pop
lods
enter
push
pop
dec
and
mov
lock
sub
arpl
inc
in
pop
rclb
rclb
sti
pop
jb
jnp
adcb
inc
xor
pop
gs
sbb
stos
add
push
out
inc
sbb
fs
add
inc
xchg
add
inc
adc
inc
jno
ds
lcall
and
insb
inc
sbb
movsb
xchg
xchg
shrb
cwtl
mov
pop
aad
sbb
cmp
jg
out
outsb
pop
out
mov
push
xchg
test
and
mulb
clc
lret
inc
mov
ret
xchg
mov
subl
xor
pop
sbb
scas
add
mov
or
cmp
movsb
out
or
cwtl
push
adc
bnd
pop
pop
in
jno
sarb
cmpsb
mov
rep
adc
fdiv
les
je
add
xchg
pop
push
adc
loope
push
xor
popf
adc
push
gs
lods
xchg
insb
lods
lret
mov
shl
lahf
shl
std
jbe
popf
or
sbbb
or
jns
das
fidivl
mov
xchg
and
scas
sar
das
jmp
aad
in
rolb
mov
add
cmp
repnz
xor
mov
fwait
add
aas
pushf
mov
clc
jle
lds
mov
fs
mov
dec
repz
cmp
icebp
pop
ds
insl
mov
mov
and
nop
out
push
inc
or
jge
lret
scas
daa
fldt
out
add
xchg
jg
push
idivl
pop
cmc
fsts
loope
mov
adc
ret
jbe
cmp
jb
adc
push
das
pop
push
call
inc
mov
mov
test
sbb
bound
int3
push
add
pop
or
jno
mov
aam
out
fsubl
jae
mov
jmp
mov
jae
rcrl
shrb
pushf
xor
jmp
xchg
pop
jae
sub
fsubrs
pop
xchg
add
sti
clc
in
stos
cmpsl
or
pushf
sbb
nop
enter
push
jmp
test
int3
rep
mov
push
push
jo
sub
xchg
add
mov
inc
mov
pop
sub
xchg
stos
cmc
aas
xchg
inc
lcall
repz
push
add
cmp
push
popf
aad
sub
int
fsubrl
adc
inc
fucomip
and
add
mov
insl
pusha
mov
inc
xchg
mov
xor
out
rcl
js
xor
sub
addr16
xlat
loop
cmc
repz
mov
dec
push
outsb
adc
mov
out
ret
pop
shrb
or
push
and
int3
xchg
inc
jmp
add
fiaddl
dec
sbb
nop
fisttps
or
inc
or
inc
stc
cmpsb
hlt
lock
lock
or
rcrb
loope
jnp
mov
cwtl
sbb
int3
sub
or
and
sub
icebp
mov
jae
xchg
cli
neg
sti
mov
gs
outsb
in
icebp
test
or
cmpsb
and
adc
int
jle
test
rcll
sbb
pop
pop
gs
pop
scas
xor
enter
jo
aam
fcompl
out
test
flds
lea
in
inc
jne
jle
je
rolb
add
cmpb
xor
lahf
mov
jge
xchg
jno
mov
pop
sahf
aam
mov
cmp
lahf
arpl
int3
xor
push
mov
inc
popf
jnp
mov
cmp
inc
cmp
push
sar
or
add
dec
nop
mov
lock
mov
rol
xchg
pop
fbld
sbbb
dec
in
sbb
dec
je
jns
jp
dec
pusha
mov
subl
or
popf
jp
pop
pop
xchg
inc
mov
adc
cld
mov
mov
or
adc
mov
outsb
scas
jl
mov
pop
pop
mov
lahf
in
mulw
scas
xor
and
push
mov
cmp
xchg
enter
aad
fwait
icebp
test
mov
shlb
inc
push
iret
and
jns
mov
jno
repz
addl
pusha
dec
adc
loopne
xchg
ds
push
mov
testl
sbbl
movsl
mov
pop
push
or
adc
in
outsl
in
push
aam
test
adc
adc
mov
jo
pop
and
sbb
jbe
sub
sub
paddsb
xchg
ficoms
aas
cmp
leave
and
rol
or
push
mov
push
lahf
lahf
ret
jmp
inc
jp
cwtl
or
xor
add
push
push
mov
clc
adc
or
cld
and
jb
out
inc
ljmp
add
paddsw
nop
cmpsl
inc
xor
jne
movsb
xchg
dec
and
mov
sahf
mov
sub
cmp
jmp
je
pop
or
cmp
nop
inc
sub
addr16
pop
cmp
push
mov
adc
xchg
and
mov
dec
mov
mov
add
mov
push
cmp
jne
dec
mov
pop
outsb
outsb
xor
rolb
imul
ds
rorl
repnz
fcomps
pop
or
sbb
cli
sarb
lret
mov
movsb
xchg
xor
sbb
int3
mov
ret
scas
mov
cmpsl
xchg
sbb
pop
or
test
adc
out
mov
cmpsb
dec
testl
xor
cmpsb
enter
push
xor
dec
arpl
xor
mov
pop
shll
jae
pop
aas
xor
in
leave
fsubrl
xlat
or
push
pop
jg
inc
jbe
inc
dec
and
or
in
mov
test
push
ja
xlat
lahf
mov
pop
dec
sarb
and
addr16
fistpll
cmp
andl
sub
xor
and
mov
cmp
lahf
lahf
stc
jae
decl
aam
dec
arpl
les
mov
mov
outsb
or
popa
dec
and
cmp
dec
std
dec
iret
adc
jne
xchg
xor
push
push
xchg
test
jg
sbb
push
push
cs
shlb
insb
sub
mov
sarl
xlat
jno
cs
hlt
ret
mov
loope
xor
dec
and
outsb
in
stos
sbb
clc
sbb
and
je
cli
gs
shrl
mov
not
test
js
sbb
insb
mov
jbe
xchg
loopne
push
sti
scas
negb
aaa
jecxz
add
push
pop
push
filds
imul
dec
adc
mov
mov
dec
adc
and
scas
testl
push
xchg
mov
mov
jae
out
push
jb
pop
dec
loope
cmpl
icebp
sbb
aad
cmp
clc
dec
and
repz
sub
mov
inc
popf
in
xor
aad
stos
mov
dec
aam
decb
adc
and
pop
xchg
ljmp
pop
and
inc
cmp
inc
sbb
and
push
stos
push
out
sbb
int3
adc
inc
push
les
sub
adc
les
arpl
xchg
xor
dec
pop
mov
movsl
aam
xchg
loop
jmp
jmp
test
mov
push
add
mov
xor
xchg
in
mov
xor
stos
jae
mov
adc
xchg
mov
nop
jbe
cmp
test
addl
js
mov
push
nop
or
ss
insl
sub
les
mov
dec
fstl
popa
lods
mov
pop
repz
aam
pop
daa
mov
outsb
pop
daa
sbb
shll
mov
mov
sbb
cmp
test
sub
addb
mov
jecxz
adc
js
negb
ja
insl
outsl
pop
jge
mov
cmp
scas
int
pusha
dec
dec
pop
cmp
sub
xlat
cmc
orl
mov
jbe
pusha
adc
inc
fucom
xchg
test
ret
neg
push
mov
repnz
mov
inc
pop
cmp
out
test
popa
pop
pop
pusha
or
rorb
dec
xlat
ret
sti
sti
dec
push
idivl
xor
cmp
or
fs
jmp
xor
add
jo
in
mov
or
push
xor
arpl
aas
add
push
or
les
fst
mov
sbb
dec
and
leave
push
xchg
lret
xor
jns
movsl
inc
gs
sub
mov
xor
cmp
push
pushf
cmp
mov
shrb
pop
dec
push
cli
pop
cmp
inc
xor
pop
test
mov
cld
push
mov
and
pop
aad
fiadds
mov
in
nop
and
or
cmp
int3
jae
or
mov
arpl
cld
xchg
push
pop
or
shll
inc
jne
adc
ficoml
sub
je
mov
aad
sbb
mov
mov
mov
add
jle
and
test
or
cmp
sub
add
push
clc
jne
bound
inc
xor
int
add
mov
repnz
mov
cmpsl
sbb
pop
fdivrl
push
sub
mov
ss
push
sti
lods
pop
orb
out
jns
stos
movsl
sub
mov
mov
sub
sub
ficomps
adc
dec
call
loop
sbb
dec
cmpsl
xchg
dec
xor
add
and
jl
es
popf
gs
adc
inc
sbb
push
mov
adc
add
push
jge
sbb
pushf
stc
es
or
jmp
jbe
mov
loop
js
mov
subb
test
rorl
pop
sbb
imul
shrl
shr
pop
xlat
push
mov
fisttps
push
ret
sbb
in
cmc
int3
lcall
int
int3
mov
inc
flds
cld
or
cmp
ret
aaa
or
popa
jne
addl
inc
loop
or
arpl
es
test
jl
rorl
jmp
je
add
jg
data16
icebp
mov
aam
jle
add
fprem1
xchg
dec
cmc
cmpsl
xchg
xlat
push
movsb
test
lea
divl
fisttpll
sbb
pop
scas
pop
add
outsb
sti
pop
test
fs
mov
jb
repnz
sbb
push
push
mov
cmc
push
jnp
add
lea
mov
mov
leave
or
movsb
cmp
les
std
inc
jmp
pop
lret
scas
cmpsl
or
pop
mov
rol
push
fcoms
pop
lock
jns
pusha
ret
fstl
aam
or
xor
fnstcw
je
mov
mov
enter
mov
sbb
mov
stc
mov
out
push
push
test
xor
xor
mov
pusha
mov
mov
cmpsb
movsl
xchg
mov
mov
iret
icebp
rolb
cltd
add
pop
movb
add
pop
push
imul
sub
mov
leave
or
dec
jmp
notb
pop
adc
lds
adc
ficompl
stc
dec
cmp
ret
xor
lea
jne
add
stc
adc
push
insb
or
mov
and
nop
add
pop
adc
or
fistpll
jbe
repnz
jne
std
add
cs
shl
mov
cld
rcll
adc
xor
mov
cwtl
popa
repnz
adc
mov
lea
mov
sub
or
lcall
sahf
mov
stos
bound
nop
jge
fcoml
sahf
scas
mov
pusha
mov
adc
pop
adc
mov
mov
repz
test
cmc
or
loope
or
push
cmp
js
pop
push
aad
add
shll
out
mov
les
push
push
cmpsb
movsl
out
xchg
ficompl
adc
push
adc
ljmp
cwtl
mov
xchg
lret
cwtl
xchg
sbb
adc
ret
inc
mov
sahf
stos
cmp
xchg
push
aas
and
pop
add
mov
add
les
push
arpl
stos
mov
mov
aam
dec
dec
js
mov
aas
cmp
pop
jbe
jne
fstl
stos
gs
inc
movsb
xchg
jle
fdivl
loopne
pop
dec
scas
pop
inc
mulb
aaa
jmp
or
movsb
inc
aas
dec
fstpt
or
pop
sub
outsl
fwait
inc
pusha
or
sbb
mov
arpl
decl
sbb
and
jmp
jmp
mov
xchg
mov
xchg
mov
sub
pop
fisubl
loope
sbb
inc
test
inc
xchg
sbb
mov
push
jno
add
bound
mov
scas
cmpsl
in
push
cmc
jl
pop
cmpsb
imul
in
in
into
xor
fwait
jnp
xor
pop
popa
je
adc
jl
in
fcomi
sbb
mov
adcl
jne
fisubs
movsb
adc
aaa
icebp
sbb
xor
cmp
sahf
inc
pusha
sbb
xchg
out
adcb
mov
pop
repnz
lock
into
loop
cltd
sbb
out
lods
loop
sub
popa
or
adc
icebp
dec
mov
and
push
xchg
sti
xor
ljmp
pop
jns
aaa
cmpsb
test
adc
jmp
pop
jp
sbb
out
mov
xchg
sbb
sarl
cwtl
cmc
fcom
jl
inc
push
ja
hlt
mov
inc
xor
ljmp
ss
jne
jbe
leave
je
xlat
xchg
adc
in
jmp
rcrb
xchg
adc
pop
cmp
leave
imul
jnp
cli
insb
das
mov
inc
mov
cmp
pop
push
mov
push
or
sub
cmp
adc
icebp
movsb
lret
xchg
call
test
jl
fdivp
rclb
in
mov
mov
sub
pop
dec
aad
jno
fcmovu
sub
andl
imul
cmp
mov
xchg
sub
lods
push
aad
mov
push
cli
sub
jmp
loop
shl
fdivrs
movsl
out
mov
mov
or
out
jle
int
pushf
inc
mov
inc
sbb
adcl
cmp
mov
iret
and
mov
outsl
std
ret
add
clc
ret
jo
pop
cld
enter
add
out
jmp
jnp
test
xchg
xor
mov
popa
sbb
adc
imulb
inc
stos
fbld
push
xchg
imul
addr16
mov
and
std
dec
push
xchg
imul
push
rclb
add
mov
push
mov
js
dec
pop
dec
les
or
stos
dec
xor
mov
mov
in
fistpll
sbb
sbb
dec
add
in
xchg
cmp
lock
outsl
rcl
lock
and
aaa
fdivrl
pop
sahf
push
test
add
and
cli
xor
loope
dec
add
inc
aaa
ret
inc
push
rclb
mov
mov
daa
je,pt
dec
xchg
mov
inc
push
fadds
scas
not
push
jecxz
dec
or
in
shll
enter
das
jmp
mov
movsl
sbb
xor
jno
mov
outsl
inc
ja
jb
fs
mov
pop
sub
in
xor
lcall
xlat
repnz
ljmp
jge
jl
and
sbb
sbb
push
in
daa
sub
bnd
data16
int
add
je
fdivrl
in
jno
cmpsb
adc
test
pop
jne
test
pop
xor
popf
test
repnz
pop
mov
mov
lods
jge
fsubs
cmp
dec
in
je,pt
cmpsb
outsl
stos
je
cmp
les
lods
lret
jle
xchg
xchg
rorl
mov
test
iret
adc
lods
icebp
subb
dec
inc
push
mov
push
test
push
inc
inc
pop
inc
mov
es
jle
insl
sbb
push
out
mov
dec
add
fucom
pop
xor
outsl
mov
bound
add
in
sbb
fcom
push
cmp
pop
jne
mov
out
leave
or
pop
mov
fnstenv
lret
mov
mul
nop
mov
lea
lret
inc
cmp
fs
gs
rol
push
mov
arpl
enter
xlat
nop
mov
mov
mov
and
loope
andl
pop
fstl
ja
nop
cld
inc
pushw
cmp
mov
or
mov
dec
aam
dec
hlt
jle
icebp
fs
fdivs
outsb
aaa
negb
xchg
mov
pop
push
pusha
push
data16
pop
fidivrs
les
loop
inc
stos
xor
lock
stos
jp
cli
div
dec
xchg
fimuls
cs
movsl
ret
push
push
mov
mov
jne
inc
stos
int
jp
repnz
cmp
or
pop
rolb
test
daa
fwait
jmp
mov
clc
sub
in
sub
mov
popf
jae
push
popf
inc
mov
fnstenv
out
mov
fisttpl
lret
cmp
mov
dec
xchg
adc
out
int3
cmp
add
arpl
sbb
mov
xor
mov
jbe
jb
cmp
mov
push
testl
out
cltd
sub
lea
cmc
dec
add
daa
xchg
adc
jmp
into
jae
adc
test
imul
scas
shll
cltd
push
sub
mov
push
push
repz
inc
mov
mov
lcall
test
rclb
or
das
nop
outsl
ficompl
and
popf
mov
int
jl
fdivr
mov
xor
out
div
mov
mov
icebp
pop
add
enter
mov
mov
loope
xchg
std
ret
jmp
std
or
std
andb
loope
mov
fs
push
xchg
mov
test
push
fwait
es
xchg
lock
fisubrs
lret
lret
icebp
jnp
mov
cmpsb
push
jns
mov
daa
push
fdivs
xchg
inc
cmp
cmovp
fwait
mov
cmc
loop
adc
and
and
int
std
test
inc
test
xor
xor
add
jp
inc
ficompl
inc
clc
cmp
sub
lahf
cltd
cwtl
loope
pop
and
push
mov
mov
lods
add
ss
loopne
mov
lods
pop
cltd
repnz
sub
and
mov
sub
cli
out
xor
sbb
dec
fdivrl
mov
popa
jns
pop
mov
in
testb
inc
fiaddl
aaa
add
and
dec
lcall
xchg
popa
out
push
or
mov
les
movsb
xor
scas
push
xor
fldenv
cli
push
out
dec
add
jb
fsubs
pop
sbb
jge
dec
mov
cld
movsl
js
jns
int3
loop
adcl
clc
pop
sbb
pushf
leave
and
imul
cmc
push
out
cmp
xchg
shrb
mov
ror
pop
jl
orl
jb
dec
inc
cmpsb
aam
loop
js
popa
mov
dec
inc
pushw
pop
dec
sbb
push
cld
sub
and
and
leave
scas
sub
lea
movsl
dec
test
orb
data16
sbb
mov
arpl
outsb
xor
out
movsb
ret
dec
aas
pop
cmc
mov
stos
pop
mov
fsubrs
jne
dec
jle
in
mov
add
add
mov
xchg
sbb
mov
fcoms
sbb
add
ljmp
lret
gs
mov
fistps
fidivrl
nop
jns
mov
int
add
mov
mov
sti
out
cld
inc
cmp
aam
mov
out
xchg
push
pop
sbb
pop
popl
shlb
les
mov
out
pop
mov
fcompl
lahf
into
out
pop
loopne
mov
push
xchg
imul
ret
add
testb
ljmp
jbe
pusha
dec
or
fisttpll
pop
das
jnp
pop
cmp
pop
push
shll
jmp
push
idiv
xchg
pop
fdivr
cmpsl
pop
xchg
xor
mov
adc
lods
lods
fidivrs
mov
add
cmpsb
out
inc
ds
aaa
inc
rorb
insl
cmpsb
mov
xchg
fs
jle
sar
imul
fs
sbb
lock
ja
add
pop
push
call
adc
sbb
lret
pop
sub
fwait
lret
mov
scas
insb
sbb
mov
pushf
lret
mov
out
std
inc
pop
jne
cltd
rorl
das
inc
pop
dec
rcl
aad
inc
jge
dec
push
andl
cmp
jecxz
mov
dec
push
adc
adc
fwait
or
or
insl
dec
sub
fstps
add
inc
xchg
leave
rcl
pop
sub
xlat
mov
cs
jo
lea
push
xchg
es
in
xchg
jmp
ss
imul
test
addr16
or
push
test
scas
sbb
arpl
push
pop
insb
inc
push
divb
xchg
fcoml
int3
mov
lods
aam
ljmp
loopne
out
pop
popa
pop
aad
ja
xor
ret
mov
sub
movsb
xor
js
cmpsb
adc
mov
pop
add
mov
push
pop
cli
inc
loope
push
sbb
test
cld
in
mov
pop
cmpxchg
rcrb
jmp
sub
into
out
lret
jnp
insl
mov
ret
xchg
mov
cltd
or
pop
or
out
fwait
iret
mov
lcall
mov
and
out
mov
outsl
xor
mov
loopne
lea
cltd
fs
fst
outsl
out
test
lock
sbb
cs
jle
mov
push
push
add
scas
cld
xchg
sbb
mov
and
push
jns
lods
in
stc
adc
aad
lcall
sahf
adc
mov
idiv
sub
jp
xor
sub
jecxz
fcmovu
and
cld
mov
inc
cs
sbb
jl
test
xchg
and
fs
mov
nop
ret
ret
push
push
sub
sbbb
leave
add
or
daa
insl
cmpsb
mov
mov
jo
ss
dec
push
push
arpl
scas
enter
mov
out
xor
shlb
push
jle
jecxz
jne
push
inc
sub
mov
xchg
mov
or
adc
in
cmp
pusha
jmp
sub
push
addr16
jge
xlat
adc
xchg
or
inc
jle
jo
jge
add
out
xor
xchg
jno
xor
sahf
sub
and
push
adc
push
xor
lods
mov
xchg
inc
lock
pop
jl
outsl
les
adc
sub
or
mov
sub
std
xchg
add
lcall
andl
xchg
in
std
cli
inc
xor
repnz
jmp
cmp
push
mov
adc
fiaddl
cmpsb
out
ret
sub
retw
into
pop
int
or
mov
xchg
ljmp
jb
or
jns
dec
repz
cld
pop
add
out
mov
or
inc
insb
out
jns
leave
dec
or
cmpsl
add
sub
or
dec
mov
jle
in
sbb
cmp
dec
int
dec
idivb
push
pop
and
mov
mov
sbb
lcall
push
cmp
aaa
clc
lods
jmp
jle
mov
mov
data16
sbb
xchg
ljmp
jecxz
xor
popa
andl
add
push
jbe
push
cmp
int3
loope
pop
ljmp
adc
insl
sti
int3
mov
loop
pop
dec
lea
int
pop
xchg
js
sbb
jge
test
div
inc
fnstsw
pop
pop
inc
add
sub
jl
pusha
lea
mov
test
dec
inc
xchg
insb
xchg
push
mov
addl
lods
aaa
gs
addr16
xchg
lds
cmp
or
xchg
inc
dec
iret
and
or
jbe
sbb
pop
jbe
dec
cmp
stos
xchg
cwtl
add
pusha
out
fists
movsl
and
push
test
cwtl
data16
and
pushf
rclb
jmp
xor
xchg
mov
push
fstpt
fisttps
jmp
and
add
enter
mov
adc
clc
test
xchg
mov
dec
mov
sbb
je
or
cwtl
pushf
mov
das
pop
xchg
sub
sahf
push
mov
ficompl
mov
inc
xorl
cmp
pusha
xchg
jl
movsl
mov
gs
xchg
out
stos
mov
call
xor
out
and
xchg
add
xor
push
pop
repz
rcll
mov
lahf
fimuls
xor
pusha
cli
push
sub
fsubrp
mov
shll
jo
lret
xchg
push
bound
mov
ret
mov
int3
jns
cmp
mov
sub
cmc
mov
icebp
lock
mov
xlat
out
mov
mov
int3
xchg
shll
and
in
mov
test
lcall
pop
mov
stos
imul
ljmp
dec
cwtl
dec
push
xchg
dec
divl
rcrb
out
fcoms
gs
movsl
mov
and
wrmsr
je
lret
xchg
test
xchg
arpl
jae
in
mov
mov
xorl
push
test
shrl
cs
in
add
mov
das
fnstcw
pause
mov
pushf
mov
mov
jbe
repnz
add
xchg
sbb
in
mull
xchg
sbb
shlb
add
cld
fs
dec
add
scas
cmp
push
fsubs
cmpsl
adc
sbb
loop
sbb
int
fbstp
roll
repnz
orb
jg
add
mov
fwait
jmp
es
jo
les
ljmp
setge
andl
dec
aaa
clc
mov
jbe
mov
subb
cmpsl
cmp
movsl
cmp
in
out
mov
and
pushf
int3
out
adc
pushf
adc
ret
aad
bound
cmpsl
out
xchg
sar
mov
popf
sbb
mov
jp
mov
inc
mov
setne
adc
and
pop
inc
cmp
mov
lahf
sti
aaa
insb
je
xor
adc
dec
ds
xor
cmp
lods
push
pop
dec
adc
stc
mov
mov
sarl
or
sub
enter
jno
cmp
inc
lret
loope
mov
out
in
add
cmp
negb
push
jb
push
sbb
mov
fisubl
push
mov
inc
push
sub
xchg
cmp
mov
mov
xor
dec
hlt
xchg
pop
jb
icebp
adc
out
mov
outsl
mov
mov
insl
add
xchg
in
in
in
cmp
nop
cli
pop
cmp
icebp
xor
fldenv
jns
lahf
stc
inc
xlat
inc
and
shlb
push
out
push
enter
sub
repnz
aas
adc
push
dec
scas
cmp
xor
dec
cltd
mov
fwait
dec
fsubrs
mov
push
stos
mov
xor
insl
mov
xor
jno
mov
jp
test
ja
sub
mov
pop
popa
pusha
and
sbb
cmp
jle
stos
adc
repz
mov
xor
cld
sub
ljmp
ret
adcl
test
mov
inc
jbe
jno,pt
push
imul
mov
dec
pop
mov
out
mov
jg
pop
cmp
mov
add
add
fistpl
in
and
scas
jl
in
fstps
outsb
cmovbe
cmpsb
aas
lods
adc
push
rorl
std
jge
jge
mov
xchg
push
movsb
mov
lock
mov
jl
int
mov
mov
mov
js
mov
add
icebp
cmp
mov
sbb
hlt
jne
stc
push
jge
syscall
aam
mov
xchg
pop
or
jmp
adcl
mov
or
cli
xor
fldt
push
mov
notl
sbb
jge
sbb
icebp
sub
jno
jmp
addb
nop
stos
test
mov
lahf
sub
stos
xchg
mov
cmpl
outsl
loopne
sbbl
pushf
mov
xchg
jp
pop
into
xor
inc
push
iret
test
sahf
push
mov
fcmovnbe
pop
xchg
es
test
mov
fucomp
mov
fcmovbe
cmc
outsb
out
nop
std
lods
cmova
ja
and
aam
repnz
or
jg
jp
adc
mov
ret
xor
test
mov
stc
sub
dec
pop
lret
fstps
and
or
cltd
push
ja
mov
cli
aad
sti
mov
ljmp
out
jae
and
cmc
push
rclb
pop
out
xchg
aas
push
jbe
sbb
xor
jl
fnstenv
in
out
sahf
enter
out
push
and
fsts
push
out
ljmp
jecxz
cwtl
adc
push
sbb
xor
rorb
pop
pusha
adc
stos
in
fs
imul
clc
and
pop
das
data16
adc
in
icebp
or
std
mov
mov
jl
cmpsb
sub
jp
push
mov
cltd
movsb
ficomps
scas
out
xlat
xor
inc
mov
xchg
mov
in
mov
nop
gs
and
jg
xlat
lds
mov
cltd
push
mov
cmp
jbe
or
cmpsb
test
mov
adc
shr
mov
cmpsb
inc
xchg
stc
test
mov
ret
mov
js
mov
adcb
sub
or
andnps
repnz
mov
cld
adc
and
pop
mov
pop
jg
lahf
mov
enter
sbb
push
in
mov
or
data16
dec
jmp
push
sbb
ljmp
fsubs
xchg
add
mov
loopne
adc
add
jno
dec
mov
push
mov
adc
mov
jae
out
ss
mov
adc
adc
jge
pop
xor
inc
jl
push
subl
cmpsb
fisubrl
sti
imul
jle
mov
mov
fimuls
or
repz
pop
pop
cmpb
lret
jmp
pop
mov
xchg
aad
loop
mov
add
mov
rcl
jo
sub
push
sbb
out
jecxz
push
jmp
lds
add
sub
out
repz
xor
les
pop
adc
cmpsl
mov
add
mov
fcomps
mov
pop
sti
aas
fsts
push
aad
push
jl
cmp
lds
mov
out
or
sbb
and
fnstcw
add
mov
scas
lcall
ficoms
scas
mov
test
sbb
sti
bound
cmp
aaa
and
scas
mov
idiv
mov
jmp
push
insb
addr16
xor
icebp
repnz
mov
adc
jg
mov
adc
jp
ljmp
imul
loop
cmp
dec
sub
jae
cmpsl
sti
repnz
and
mov
test
add
pop
fcompl
mov
ret
aam
adc
adcb
addr16
mov
inc
ret
xchg
mov
mov
pop
int3
adc
add
data16
sbb
pop
sbb
iret
test
psrlw
cld
mov
leave
test
push
pop
mov
fstpt
dec
je
add
out
dec
and
pop
inc
xchg
mov
push
push
inc
in
push
pop
cmp
std
mov
cs
xor
dec
out
or
aaa
repnz
outsb
inc
and
or
mov
push
clc
addr16
dec
inc
scas
test
std
insl
cmp
cmpsl
and
outsl
xor
push
or
dec
mov
dec
loopne
mov
cmp
mov
nop
xor
jecxz
movsl
cmp
lcall
popa
cwtl
inc
pusha
inc
lahf
addr16
sub
xor
in
sub
push
fstpt
inc
insb
mov
or
add
or
add
sub
pop
fsubrs
inc
push
mov
xchg
into
out
sbb
daa
adcl
xchg
adc
inc
stos
mov
stos
push
mov
mov
repz
out
sub
rcll
mov
sub
push
imul
xor
repz
loopne
ds
and
mov
out
scas
outsb
cmpsb
je
bound
andb
xchg
mov
rorl
xor
fmull
out
xlat
icebp
add
xchg
mul
imull
xchg
jmp
stos
jno
jbe
dec
sbb
mov
mov
push
int3
pop
in
mov
add
add
das
sbbl
push
xchg
cmp
test
cli
push
jg
jb
mov
int3
push
cmpl
mov
push
add
imul
mov
push
jg
stos
or
ja
cmp
std
mov
sbb
and
ret
mov
sub
sbb
sti
mov
jb
cmp
xchg
insb
pusha
ret
imul
xorl
xchg
ret
icebp
aam
imul
or
jb
repz
jnp
clc
mov
mov
enter
jbe
ljmp
pop
jg
add
xor
lods
jp
repnz
jne
xchg
lret
add
pop
mov
dec
sbb
stos
pop
or
ss
mov
addl
rcl
or
aam
fnsave
aad
lock
out
or
sub
ret
andl
xor
push
lock
inc
cmovbe
ret
push
mov
mov
adc
adc
jno
cmp
and
cmp
mov
mov
xchg
js
cld
inc
stos
push
dec
es
cmc
mov
push
pop
sub
add
dec
fdiv
and
add
lea
jns
incb
pop
adc
inc
ljmp
and
push
dec
cld
push
mov
ficomps
sbb
xor
sbb
ret
push
inc
cmp
or
cmpsl
sti
outsb
cmp
imul
aad
dec
movsl
fnsave
mov
or
pop
ljmp
popf
in
pop
clc
jne
insl
pop
cltd
scas
cltd
inc
sub
fisubrl
dec
pop
or
mov
jno
popl
adc
out
jecxz
fst
fiaddl
sbb
dec
pop
and
das
lcall
pop
mov
pop
push
inc
aaa
sahf
pop
test
imul
cmpsb
dec
mov
out
and
fcmovbe
mov
mov
jno
xor
jnp
fdivl
mov
mov
sub
call
jns
icebp
popa
jp
cmp
enter
shlb
cltd
adc
inc
push
mov
mov
call
sub
jge
jle
orb
dec
and
fstpt
imul
cmp
int3
data16
out
sarb
movups
notl
pop
inc
adc
into
xchg
pushf
dec
imulb
jl
mov
out
and
xchg
mov
pop
and
xor
mov
loope
repz
insb
jle
mov
lret
ds
test
xor
sbb
bnd
dec
lods
test
push
adc
dec
cs
push
mov
rcll
jp
cmpl
mov
xor
push
inc
in
dec
test
pop
xlat
or
data16
jp
xchg
mov
imul
pop
cld
add
mov
cmp
cli
and
xchg
imul
push
xchg
push
xor
and
push
lret
es
movl
inc
adc
clc
lock
insb
or
adc
into
push
out
mov
or
out
mov
xchg
jp
popa
cmp
sbb
faddl
mov
push
aaa
dec
xchg
in
and
cld
fldenv
xchg
jecxz
pop
jb
mov
imul
cmpsl
js
mov
xchg
push
daa
in
inc
inc
mov
shll
scas
cmp
jo
sti
push
popa
inc
cmc
pusha
xchg
xchg
push
xchg
rclb
shl
insb
sbb
pusha
cmp
jno
xchg
pop
jnp
xlat
mov
pop
nop
jo
push
fnstsw
push
imul
jge
insl
dec
gs
pop
in
mov
sbb
mov
gs
sbbb
test
fbld
fwait
cmpl
or
aad
je
shrl
xor
cmpl
cmp
inc
cltd
xchg
sub
gs
ds
pusha
repnz
adc
cmp
gs
sbb
outsl
sbb
iret
sbb
aas
cmp
aas
ret
mov
xchg
add
ds
popa
insl
cmp
cs
into
inc
mov
adc
jle
jl
or
scas
mov
fdivl
sbb
dec
adc
insb
jbe
cli
dec
or
bound
pusha
cwtl
lahf
pop
rolb
jp
jae
xor
or
or
sbb
aad
aaa
mov
add
inc
sbb
mov
mov
pop
cmp
lcall
adc
mov
cmp
sub
scas
adc
add
jp
sarb
pop
hlt
cli
je
shll
inc
pushf
mov
imul
sbb
sbb
int3
add
add
adc
push
inc
and
mov
mov
jo
into
outsb
mov
inc
loopne
popf
dec
xor
push
add
cmp
push
cmp
stc
cwtl
stos
in
xorb
dec
imul
and
mov
add
scas
nop
lret
mov
int
addr16
mov
insl
dec
cmp
pop
mov
cmp
jl
fstl
cmp
pop
mov
dec
js
sbb
or
xor
movsl
xlat
ljmp
lcall
jno
shll
mov
cli
jl
mov
imul
mov
fidivs
shll
lds
pushf
fwait
adc
test
cwtl
mov
lds
or
fstl
cmp
stos
stos
or
jno
jmp
add
inc
mov
es
das
icebp
push
cmpsb
pushf
shlb
jae
add
xchg
imul
adc
mul
stos
adc
nop
xchg
push
jae
out
testb
mov
lock
cli
jl
dec
daa
js
mov
sarb
push
and
cmp
popa
jb
pop
loopne
jg
xlat
fwait
outsl
addr16
mov
rorb
out
pop
push
sbb
rcrl
xor
adc
mov
mov
outsb
fiaddl
into
inc
mov
and
sub
int3
xor
daa
or
dec
mov
cmp
jp
cmpl
xor
push
inc
data16
enter
lahf
mov
inc
lahf
push
adc
cwtl
and
pop
xor
mov
sbb
cli
push
jmp
dec
ja
jl
ret
movsb
cmpl
inc
dec
mov
push
in
xor
das
das
xchg
inc
pop
push
xor
inc
sbb
outsl
cltd
ds
fistpl
lret
mov
in
ljmp
dec
jbe
mov
ds
sbb
cmc
in
cmp
push
es
xlat
loop
arpl
out
in
xchg
cmpsb
xor
out
xor
mov
and
mov
cltd
mov
pop
mov
cmpsb
je
cmp
rcrb
or
mov
xchg
les
pop
lods
stos
or
sub
data16
in
fmull
mov
xchg
xor
sub
sahf
sbb
inc
out
xor
pop
das
scas
and
sahf
popa
push
cmp
jg
xor
sub
dec
or
and
out
out
mov
pop
xor
jb
sar
sbb
test
lcall
xor
dec
mov
dec
push
sahf
adc
out
and
das
mov
je
jo
xor
outsb
jne
jl
sub
mov
je
frstor
cmp
les
sub
jnp
jne
xor
dec
push
icebp
inc
add
xchg
in
xchg
sar
adc
call
fistpl
jle
sbb
sbb
iret
je
ret
scas
in
xlat
ljmp
push
ljmp
ret
dec
mov
pop
mov
dec
sarb
sbb
jb
fadds
je
add
or
loopne
cmpsl
push
fistpll
fcomps
lds
aaa
or
mov
dec
fbld
xor
cs
mov
add
xor
movsl
fidivs
sub
fsubs
inc
inc
dec
loope
mov
cmp
rolb
bound
mov
add
inc
xchg
cs
mov
inc
push
fidivl
push
sub
ja
adc
mov
sahf
push
rcrb
cmp
out
jnp
jmp
pop
iret
das
or
dec
addr16
jbe
cmp
popf
lcall
test
scas
adc
push
arpl
jge
add
mov
add
int3
int3
add
cmpsb
add
fyl2xp1
flds
loope
cmp
fiaddl
inc
xor
jmp
cmp
fiaddl
mov
shr
hlt
jle
insb
mov
push
push
lahf
dec
and
es
cmovle
xchg
arpl
cltd
mov
ret
inc
out
mov
mov
mov
in
cmp
ret
xor
cmp
jns
and
and
stos
shlb
ficomps
lahf
mov
js
stos
ja
out
test
scas
cmc
call
imul
ret
das
mov
dec
jge
aad
adc
in
jle
ficoml
scas
mov
aad
push
mov
push
out
mov
and
aaa
jo
pop
or
or
push
and
leave
andl
mov
mull
icebp
sbb
iret
cmp
aad
test
pop
in
leave
adc
mov
std
pop
push
mov
push
pop
faddl
dec
mov
je
aad
iret
mov
out
push
jl
jl
or
jae
or
mov
jne
mov
or
cmc
adc
lds
dec
scas
jg
sbb
ret
mov
xor
dec
ljmp
mov
mov
cwtl
scas
imul
jb
aas
sub
and
sub
xor
adc
mov
loope
jecxz
insb
mov
pop
dec
jne
xor
or
loop
xor
insb
push
cmc
xor
mov
into
mov
mov
mov
mov
fcmovu
cmp
adc
cmp
add
push
sbb
stos
sahf
add
std
out
lret
dec
dec
adc
ja
push
or
das
ljmp
loope
xchg
add
popf
adc
sbb
xchg
sahf
movsb
sub
ficompl
add
or
push
fcompl
aas
sbb
lret
sbb
int
insl
imul
cmpsl
or
orb
jne
lds
sti
cmpl
jnp
es
or
lods
and
lahf
jns
lods
out
ret
dec
loop
repnz
push
ss
jne
add
fsubrs
stc
into
scas
dec
mov
insb
mov
add
mov
ficoms
repnz
push
dec
lret
movsl
dec
mov
pop
xchg
push
js
enter
enter
mov
mov
dec
mov
fisubrs
addr16
lcall
sbb
dec
mov
das
insb
pop
lcall
fimull
bnd
popa
loopne
adc
outsl
insl
and
jge
hlt
fsts
dec
push
sahf
mov
pop
mov
popf
cmp
add
lcall
clc
push
jne
lock
mov
lret
cs
fisubrs
push
in
insl
xor
or
test
add
sub
sbb
or
pop
cmp
daa
fwait
dec
dec
push
lea
add
nop
xchg
inc
xchg
inc
inc
test
rorl
es
test
repnz
xor
xchg
sub
imul
jbe
inc
jnp
in
sub
fidivrl
jl
in
push
xor
fidivl
push
mov
fbld
test
push
or
sub
pusha
aad
push
mov
fistl
outsb
subb
fiadds
mov
pop
into
lcall
jmp
bndstx
and
pop
fsubr
pop
pusha
mov
addr16
std
jae
sub
pop
push
or
xor
pop
sbb
cmp
cmpb
imul
cmp
enter
pop
ds
popf
jg
and
pop
arpl
ret
call
xchg
pop
mov
fcompl
mov
sahf
pop
scas
lret
lea
cli
lret
and
bound
jbe
push
push
movsl
add
test
js
aas
push
je
jns
cmp
xor
sub
pop
mov
lods
rcrb
and
push
les
repnz
add
cpuid
dec
mov
and
push
aaa
jnp
jo
insl
imul
push
dec
mov
add
jno
ret
rcr
mul
or
movb
andl
push
js
clc
imul
out
addl
sti
fs
xchg
xor
xchg
adc
test
dec
dec
mov
push
sub
nop
mov
pop
dec
push
fdivl
nop
inc
sbbb
sbb
rcrl
and
leave
sbb
scas
mov
cs
fstp
scas
repz
sub
pop
mov
test
xchg
mov
icebp
shlb
sbb
pop
xor
daa
cmpsb
push
add
in
lea
jle
popf
cmp
xchg
pop
xchg
and
pop
cmpsb
das
jne
inc
lcall
sbb
test
add
xchg
or
sub
cmp
mov
ljmp
and
sub
clc
dec
repnz
hlt
mov
std
dec
cmp
imul
push
arpl
icebp
sbb
inc
out
jl
movsb
pop
or
stc
out
lahf
inc
cmc
mov
das
mov
dec
mov
and
cmp
dec
xchg
fistpll
fisttpll
cs
pop
sub
jmp
sbb
xchg
stos
push
sbb
lds
out
add
adc
out
add
cld
push
add
mov
push
rorb
xlat
cmp
test
xchg
dec
cmp
lret
dec
iret
inc
add
lods
cmpb
mov
sub
subl
ljmp
sti
rcl
cmp
in
arpl
notb
out
xor
ficoms
add
jae
scas
lock
lea
push
mov
ja
and
jl
out
in
jae
outsb
and
lods
xchg
push
data16
mov
pusha
push
jnp
inc
sbb
push
mov
dec
idivb
std
in
leave
imul
xchg
sahf
pop
testb
mov
mov
mov
add
pop
repz
sti
push
xor
jne
pop
clc
mov
jns
das
and
pop
add
adc
inc
and
inc
sbb
inc
pop
data16
push
push
jecxz
xchg
mov
stc
int3
mov
int
or
andb
jle
mov
popa
test
movsb
and
push
cs
sub
in
add
bound
dec
mov
push
jge
iret
jno
cli
mov
dec
pop
pop
lea
inc
push
adcl
loop
sbb
aaa
jmp
mov
inc
mov
pushf
test
cmp
jge
jne
insl
loope
lock
cwtl
movsb
jae
aaa
aas
adc
in
mov
outsl
cmp
xchg
push
jg
lods
mov
and
jl
cld
fwait
insb
mov
sub
gs
xchg
pop
pop
insl
stos
sub
mov
inc
cmpsb
cmp
dec
xchg
adc
jle
jne
das
inc
or
divb
jnp
ljmp
pop
loope
std
add
adcb
in
mov
addr16
and
je
mov
jae
sbb
ret
pop
sbb
and
fisubrl
push
cmp
test
pop
imul
xchg
mov
xor
ja
imul
push
scas
test
push
xchg
notl
push
enter
ljmp
movsb
inc
sub
cmp
inc
into
jecxz
fcom
add
inc
loope
pop
lods
adc
push
std
jl
aas
cmp
pop
adc
pushf
insl
sti
mov
cltd
inc
cmp
in
sarb
add
int3
fildll
push
sub
xchg
jecxz
mov
sbb
outsl
les
bound
xor
aam
js
push
add
ficomps
xor
outsl
int
test
nop
hlt
int
mov
mov
repnz
sbb
orl
or
push
adc
cltd
ja
mov
ret
icebp
das
test
add
gs
cmc
dec
and
shrb
mov
bound
dec
outsb
jnp
push
mov
mov
mov
addl
scas
jnp
xchg
popl
inc
sti
in
mov
cmp
mov
push
sahf
or
mov
movsl
mov
stc
ja
ret
pop
xchg
adc
mov
das
mov
mov
clc
cmpsb
and
ds
loop
xor
mov
sar
xor
sub
roll
iret
cltd
sub
adc
xchg
inc
jp
and
xor
xchg
jmp
in
lods
stos
add
pusha
cmp
jmp
or
cwtl
fwait
add
jno
les
cmp
daa
cmp
dec
fists
push
imul
out
scas
inc
adcl
ret
inc
in
stos
sbb
pop
mov
pop
xchg
adc
mov
add
pop
inc
nop
adc
jmp
pop
fwait
sti
test
int
push
aaa
lcall
jge
cmp
shlb
test
test
lret
cmp
mov
cmp
cmp
mov
in
xchg
push
out
ja
sub
lcall
and
or
mov
loope
aam
subl
jmp
pop
insb
add
fwait
in
das
sub
adc
jbe
mov
adc
nop
jb
nop
push
inc
xor
xor
in
ljmp
out
push
test
scas
bndstx
cmp
jecxz
mov
push
mov
inc
addb
xchg
aaa
ja
cmp
fadds
push
ficompl
dec
adc
rcll
jne
pop
mov
mov
stos
xor
ljmp
mov
mov
mov
mov
bound
dec
add
pop
mov
lds
push
cmp
jge
out
insb
cli
xlat
pushf
fcoml
pop
jge
xchg
fdivrl
aad
or
ja
pop
dec
imul
xlat
lods
fstpl
leave
sbb
out
fdivrl
imul
or
and
xchg
pop
shll
push
out
push
xchg
movsl
jb
mov
bound
xchg
inc
les
xchg
subl
test
mov
je
lahf
inc
gs
jg
orl
inc
and
lods
test
mov
in
jle
mov
xchg
fildll
xorl
mov
cmp
add
cli
push
mov
popf
mov
add
push
mov
daa
pop
jb
push
pushf
sbb
sub
cmp
pop
mov
dec
lods
add
push
xchg
and
mov
lock
add
mov
push
daa
gs
into
int3
inc
rcll
xchg
cli
adc
dec
xchg
add
mov
inc
and
loopne
lret
mov
add
and
mov
dec
adcb
subb
in
cmp
sub
lods
mov
shrl
gs
inc
xchg
ss
scas
lret
cmpsb
adc
xlat
leave
loopne
push
pop
outsb
enter
imul
dec
imul
mov
cmp
mov
loopne
inc
xchg
xchg
cmp
mov
inc
cmpl
stos
out
cmpsl
aad
cmp
cmp
sub
ds
jge
lds
xor
daa
inc
js
popa
mov
mov
xchg
push
ds
pop
cltd
and
adc
sbb
or
push
pop
cmpsb
mulps
loopne
pop
dec
pusha
cwtl
stos
insl
int3
and
mov
xchg
push
jge
bound
add
les
xor
fmul
adc
insl
fnstenv
outsb
lea
add
jnp
in
cmp
aam
cmp
imul
popa
or
push
shrb
sub
inc
add
jno
lea
in
jecxz
pop
xor
jbe
jne
ss
dec
inc
xor
aaa
or
sub
mov
mov
rcll
adc
enter
in
int3
out
fildll
clc
adc
outsl
in
or
insb
cltd
xchg
les
mov
addr16
mov
jb
std
push
mov
mov
scas
cmpsl
popa
rolb
mov
and
sbb
push
mov
js
dec
adc
loop
fwait
into
xchg
leave
sti
sbb
dec
or
in
enter
std
in
sarl
mov
jne
mov
push
jl
adc
and
mov
add
ficoms
xchg
sbb
cmp
mov
cli
jecxz
cmp
imul
mov
in
xchg
pop
push
inc
pop
sub
cmpsb
add
lret
mov
sbb
popf
sbb
iret
dec
cmp
sarb
inc
mov
pop
jb
icebp
popf
add
push
and
inc
fwait
mov
cmpsb
loope
sahf
clc
mov
jno
mov
xchg
aad
mov
in
mov
push
test
xlat
adc
repnz
cwtl
inc
pop
hlt
jle
addr16
push
clc
lcall
outsl
xor
cwtl
fwait
xchg
lods
push
pushf
add
ja
pop
inc
adc
ja
jae
xor
xor
mov
mov
xor
pop
jg
scas
push
dec
add
add
test
outsb
push
adc
xor
ficomps
mov
mov
sub
ret
rolb
mov
gs
jl
pop
aad
jg
popf
xor
loope
dec
aas
scas
add
pusha
movsb
or
addr16
cmpb
mov
std
or
jb
sub
mov
bound
jecxz
and
and
add
add
sbb
jle
sbb
ss
inc
je
sbb
cmc
pop
insb
add
lods
roll
mov
sti
test
mov
testl
sahf
icebp
inc
mov
sbb
cmc
pop
xchg
fistpl
lahf
push
adc
dec
or
adc
jns
pop
sbb
push
aam
roll
push
mov
cmp
mov
and
xchg
add
mov
jl
fs
add
mov
out
in
inc
insb
js
fstpt
add
jl
bound
pop
jo
add
sub
dec
inc
xchg
mov
shll
ret
xor
xchg
mov
mov
lea
int
add
into
gs
sbb
xor
xchg
jecxz
pushf
shlb
cld
jle
add
push
or
not
mov
add
rcll
xchg
fisttpll
jg
pop
mov
adc
std
sub
into
shll
push
inc
lahf
push
lea
cmp
lock
negl
jo
repnz
pop
pop
outsb
push
jbe
lods
mov
pop
sahf
mov
repz
insl
lock
jle
cli
std
ficoml
call
jecxz
mov
test
cmpsb
xchg
cmc
mov
out
cld
pop
mov
add
xchg
sbb
fstps
ficoms
add
cs
test
mov
shlb
push
lcall
in
and
mov
and
fisttpl
bound
dec
ljmp
mov
xchg
xor
shrl
push
mov
cmp
pop
loope
lods
insb
add
push
ja
cwtl
cmp
fsts
add
mov
push
dec
xchg
adc
test
jo
mov
cmpsl
sti
mov
repz
adc
pop
rorb
ficompl
aas
popa
xlat
cmp
jo
call
sub
ficoms
icebp
loopne
rclb
jne
adc
cmp
sbb
xchg
nop
es
shl
mov
test
pop
mov
xchg
push
pop
insl
shll
cmp
sub
fsubl
cmpsb
add
jl
sbb
ljmp
adc
mov
xchg
inc
cmpsl
scas
mov
push
fucomip
dec
adc
push
out
inc
xor
loopne
xchg
xor
loopne
mov
jmp
shlb
push
hlt
enter
push
or
shll
pop
leave
js
scas
add
int3
mov
cmp
push
push
mov
ja
pop
fcoms
js,pn
lods
mov
jbe
in
inc
and
sbb
xchg
mov
push
cwtl
mov
js
mov
ljmp
or
aas
jmp
es
test
mov
xlat
push
adc
mov
sarb
fwait
push
dec
pop
nop
jns
pusha
popa
clc
cmp
lahf
in
push
les
loope
xchg
and
js
xor
adc
pusha
mov
les
lds
fists
add
outsl
popf
out
in
mov
sub
jo
ficompl
rclb
xchg
add
cmc
sub
jne
cmp
xchg
int
pop
cld
add
cmpsl
adc
into
test
sub
test
or
mov
pop
and
icebp
mov
sbb
mov
sbb
jp
roll
cmp
add
or
xor
jecxz
mov
shrb
cmc
std
mov
jns
add
add
jnp
cmp
dec
jne
push
mov
and
xchg
aas
add
pushf
out
xor
les
cld
jnp
push
jp
push
int
cli
inc
sub
je
outsb
sub
mov
enter
xchg
push
icebp
lock
aas
mov
mov
and
dec
or
xchg
rcrb
xor
pushf
adc
hlt
out
andl
mov
push
mov
push
lods
xchg
fdivrl
pop
lea
sbb
xchg
mov
push
imul
lock
hlt
push
in
mov
dec
leave
mov
xchg
inc
jl
jmp
pop
and
push
push
inc
and
das
out
mov
xor
mov
popf
inc
mov
add
stos
push
jbe
add
inc
push
std
and
inc
mov
hlt
xchg
sbb
sahf
icebp
mulb
addl
and
inc
cltd
cltd
sar
mov
or
scas
cld
lods
test
les
pop
outsb
xor
aaa
jecxz
push
cmp
mov
nop
test
lret
popa
out
inc
in
iret
pop
adc
aas
mov
push
adc
leave
adc
mov
xchg
mov
les
cmpsb
out
notl
cld
sub
add
lock
enter
xchg
jp
lods
out
cmpsb
inc
push
aas
mov
movsl
mov
jbe
stc
push
sbb
push
or
ds
out
loopne
lcall
shrl
adc
test
cmp
mov
mov
or
std
inc
push
pop
mov
jmp
mov
pop
mov
pop
mov
rcr
push
push
dec
pop
es
ret
ljmp
movsl
cltd
imul
popa
adc
fisttps
xchg
cs
pop
or
jbe
dec
test
insb
sbb
and
pop
into
xchg
aaa
push
dec
sbb
mov
inc
jnp
lock
push
jecxz
add
cmc
mov
stos
pushf
cltd
enter
xor
stc
into
lahf
add
pop
xor
push
sbb
lcall
pop
sub
pop
mov
popa
mov
mov
cmp
ret
dec
call
imul
ds
xchg
add
add
jge
pop
and
imul
int
cmp
push
insb
dec
jmp
notb
inc
dec
cmp
subb
std
sbb
es
roll
divb
mov
adc
xchg
xor
xchg
or
popf
les
rorb
data16
in
and
ret
xchg
hlt
xor
dec
cwtl
shl
int3
aas
push
or
leave
test
jae
js
sbb
inc
inc
subl
mov
in
mov
cmp
add
xchg
adcb
xchg
adc
into
hlt
mov
lds
dec
cmp
cltd
out
push
mov
push
push
xor
jge
nop
mov
jo
aam
shll
mov
cld
arpl
or
push
dec
iret
pop
push
imul
testl
adc
rcrl
xor
mov
jmp
dec
mov
xorb
loopne
push
pop
lea
jge
sub
pusha
push
repz
lds
xchg
ja
cmpsl
fcoms
and
dec
pop
push
and
nop
mov
mov
xchg
mov
aam
ficomps
pop
out
aas
rcrb
popf
dec
stos
add
xchg
adc
addr16
inc
jno
sahf
push
push
inc
lcall
scas
inc
and
pop
xchg
int
xchg
fists
lret
pop
scas
imul
mov
cmp
or
and
into
cli
add
push
ja
jnp
lock
lock
sbb
xchg
scas
popf
sbb
or
mov
xchg
xchg
jne
fs
jp
adc
mov
and
fsubrp
lcall
cmp
dec
nop
jb
jp
cltd
pusha
and
jp
std
dec
sbb
or
adc
lret
push
xchg
ret
data16
mov
insl
stc
pop
loope
xchg
loopne
fs
hlt
xchg
adc
dec
mov
or
mov
cmp
pop
shll
push
rorb
xor
inc
jns
mov
fsubl
cs
aaa
outsb
add
jmp
fwait
daa
xor
jl
jmp
loop
push
jl
sub
add
push
xchg
cld
out
and
int3
mov
xchg
cli
fwait
push
mov
dec
dec
or
xchg
sub
xchg
sahf
jns
dec
sahf
and
dec
mov
adc
cmc
jmp
ss
leave
pusha
push
sub
sub
aaa
je
push
or
dec
pop
push
jo
mov
add
mov
in
out
movsl
mov
adc
sbb
lret
sbbl
fildl
and
cli
dec
test
mov
sahf
adc
adc
xor
sbb
adc
repnz
inc
push
and
andl
xchg
rcrb
hlt
hlt
in
add
out
bound
mov
mov
icebp
pop
cmpsl
cmp
jl
inc
sbb
xchg
stc
jecxz
cmp
insb
andl
or
mov
dec
cmpsb
stc
dec
fidivs
out
xorb
aaa
add
lods
mov
insl
xchg
mov
add
sub
jg
sbb
leave
fstpl
daa
mov
xor
leave
cmp
fsubl
popf
cmp
ss
les
mov
pop
shll
lret
adc
in
test
jmp
stos
icebp
repnz
mov
idivl
jnp
push
and
xchg
hlt
xchg
sbb
mov
cmp
lahf
gs
imul
mov
mov
int3
jl
pop
fmul
ljmp
sbb
jns
lret
orl
sub
pop
jmp
addr16
cmpsl
mov
adc
movsl
pop
sbb
aam
gs
jmp
decb
cmpsb
test
dec
pop
sub
pop
rcrl
pop
loop
mov
lock
in
push
popa
jmp
mov
dec
clc
and
out
dec
jl
mov
lds
cmp
push
mov
sub
xchg
sbb
rorl
push
jae
push
popa
nop
mov
test
adc
and
sbb
inc
sbb
inc
inc
xchg
jns
sub
icebp
and
jl
add
xchg
cli
sbb
or
das
xchg
jp
dec
fwait
std
mov
in
xchg
jae
sub
adc
outsb
jb
mov
jecxz
mov
adc
jns
inc
mov
js
int3
sub
pop
dec
mov
pop
and
mov
or
dec
lret
pop
fdivrl
push
and
enter
vcvttss2si
mov
sbb
outsl
xor
in
xchg
mov
clc
mov
imul
sbb
fldenv
lods
mov
je
push
sbb
aam
adc
mov
jecxz
clc
mov
xchg
enter
cmp
cltd
jb
pop
ss
sahf
mov
pop
iret
fsub
cmp
push
and
jp
fnstenv
cmp
lahf
les
mov
js
jmp
addr16
mov
adc
gs
sbb
mov
out
repnz
push
or
push
movsl
scas
adc
adc
ds
push
orb
loop
lods
push
sub
ret
call
or
sub
mov
pop
pushf
jp
inc
pop
in
dec
and
inc
insb
pop
mov
push
dec
mov
add
mov
aaa
adc
out
insl
clc
cmpsl
add
int3
sub
scas
ret
mov
or
and
mov
lahf
inc
cmpsb
dec
nop
jmp
inc
aam
lds
jb
add
fadd
in
fsubl
xlat
mov
mov
add
mov
pop
cmpsb
imul
dec
loope
and
mov
sarb
and
loope
lds
jmp
or
dec
fbld
xlat
lahf
int3
out
sti
jbe
cmp
in
cmpsl
decl
gs
pop
fs
pop
dec
push
or
mov
shll
dec
fsub
ret
addr16
pop
aam
jg
add
xchg
cld
push
push
cld
xor
push
mul
and
mov
jbe
or
push
pop
mov
shlb
add
je
adc
pop
test
mov
jbe
jge
leave
ja
movsb
mov
mov
nop
or
addb
ficoms
fcoms
aam
daa
adc
jp
rcll
and
mov
fnstsw
pop
imul
sub
xor
dec
pusha
xor
cwtl
les
jp
sbb
lahf
fwait
xchg
and
sbb
je
test
mov
jecxz
jg
mov
mull
sarl
shlb
imulb
scas
cmp
jb
loope
xlat
adc
push
loope
jecxz
or
mov
or
jmp
lret
push
inc
mov
or
sub
in
sub
push
inc
adc
mov
jmp
std
mov
cmp
pushf
sub
xor
fcomip
cwtl
stos
pop
imul
aaa
addr16
push
mov
fucomi
mov
int3
xchg
jnp
sti
out
push
lock
dec
adc
ret
sub
std
idivl
je
scas
pop
das
inc
out
movsl
xchg
dec
ljmp
test
shrb
inc
dec
mov
and
bound
cmpsb
add
or
nop
rorl
daa
mov
xor
push
sti
stos
push
xchg
aaa
lods
das
jl
ds
sub
stos
add
divb
mov
or
mov
mov
pushf
lret
mov
add
mov
cld
xchg
inc
test
fisubrs
into
loopne
xor
push
push
jl
push
scas
mov
mov
jp
mov
sbb
dec
aad
pushf
movsl
mov
out
lcall
inc
mov
pop
pop
lret
inc
pop
dec
cwtl
shr
pop
scas
aad
push
sub
pop
mov
bndldx
mov
jmp
test
out
and
in
out
lods
mov
jg
push
push
push
pop
xchg
dec
dec
cmp
lret
or
test
mov
mov
adc
ret
fstpt
pop
movsl
les
loop
adc
jno
mov
and
lods
inc
xchg
push
movsl
mov
and
lahf
add
fimull
pop
mov
fwait
xchg
push
mov
movsb
sub
jecxz
ja
dec
cltd
lea
xor
pop
mov
je
pop
sbb
cmc
mov
fdivp
mov
or
or
mov
scas
xor
int
pop
add
insl
inc
sbb
test
adc
sbb
movsl
sub
xchg
push
and
mov
je
stc
xchg
sub
jne
cli
sub
jmp
insb
xchg
push
cmp
imul
mov
cmp
jns
sarb
nop
push
call
xchg
dec
icebp
pop
push
clc
xchg
mulb
pusha
dec
rcrl
aaa
outsl
imull
pop
loopne
mov
push
daa
leave
lcall
and
bound
mov
and
dec
lock
push
inc
je
jae
pushf
adc
aaa
repz
shr
jb
cli
adcl
lahf
lret
mov
ficoml
mov
jmp
cltd
push
nop
jg
je
sub
jl
push
out
scas
and
dec
fadds
popa
into
lret
repz
out
jle
pusha
mov
pop
in
push
jp
pop
mov
adc
pop
cmc
and
dec
outsb
inc
xchg
mov
rcrl
xchg
adc
movsb
jge
cmp
sti
cmpsl
rolb
aaa
cmp
les
inc
enter
xor
add
dec
pop
push
mov
push
push
sub
test
jae
sbb
int3
adc
lods
rorb
push
jmp
mov
dec
xor
call
pop
mov
fbld
inc
jbe
fistpl
sub
fwait
in
aas
inc
rolb
testl
sarl
sub
std
int3
sub
fwait
popa
adc
mov
push
shlb
das
inc
sbb
push
out
jae
lcall
ror
lock
and
out
int3
les
das
cmovle
or
pop
sbb
gs
test
in
imul
push
pop
dec
jmp
in
or
push
sub
pusha
push
fadds
les
jne
jb
mov
mov
push
mov
inc
adc
movsl
imul
std
and
int3
pop
in
jo
pop
inc
pushf
aad
push
xchg
inc
mov
xlat
or
jl
xlat
mov
sub
or
lahf
xor
cmp
push
test
push
xchg
das
hlt
aaa
or
cmp
jg
push
sub
pusha
outsb
pop
fisttpl
sbb
hlt
arpl
mov
or
mov
and
ja
je
das
nop
insl
in
dec
mov
xchg
jmp
inc
mov
daa
pop
in
dec
enter
or
lea
mov
push
inc
cltd
ss
ljmp
std
jns
pop
add
lock
xor
and
jae
les
mov
push
in
dec
jg
int
add
and
mov
push
jecxz
out
fimull
aaa
pop
inc
pop
fstl
push
ret
int3
iret
pop
jno
or
push
iret
or
mov
inc
rolb
pop
pop
and
jne
xlat
add
cmc
sbb
jne
push
pop
pop
and
jae
fwait
push
ljmp
xchg
sbb
push
shll
dec
pop
push
out
fstp
sbb
dec
pop
add
inc
adc
mov
insb
imulb
lea
in
dec
jmp
sbb
add
mov
stc
push
mov
sbb
jg
add
arpl
adc
loope
scas
gs
ss
jmp
or
and
sub
loopne
insl
movsl
ret
loope
xor
shr
adc
mov
fyl2xp1
mov
shl
pop
jp
mov
repz
cmpsl
jecxz
jl
cmpl
fdiv
leave
imul
jnp
push
lock
xchg
dec
je
push
aas
mov
iret
push
mov
xor
cltd
sub
push
repz
or
cmp
nop
fwait
push
sarl
xor
hlt
sub
insl
nop
mov
add
push
insb
out
icebp
dec
cmp
mov
fistps
imul
pop
int3
addr16
add
inc
cwtl
mov
mov
adc
nop
push
push
jae
shll
je
or
imul
insb
ret
sbb
dec
cmp
sbb
xchg
xor
out
pushf
cltd
mov
test
xor
xor
cmp
fildll
outsl
dec
jnp
xchg
enter
and
lcall
mov
push
mov
mov
xchg
nop
cmpsb
aas
xor
or
lcall
adc
fsubrs
mov
push
repz
rclb
xor
push
mov
leave
imul
ret
adc
fildl
xlat
jmp
push
add
and
cwtl
test
nop
pop
xlat
sbb
call
std
js
cmpl
sub
int3
iret
mov
xor
fxch
test
push
mov
lods
mov
lods
cmpsb
aaa
in
sub
and
fbld
pop
dec
mov
xorb
pop
out
dec
dec
stos
jp
rep
inc
push
dec
ss
aas
jmp
rclb
popf
hlt
stos
js
enter
xor
lret
sbb
in
inc
jnp
push
jl
clc
cmp
lds
mov
push
mov
inc
xchg
jnp
dec
jecxz
adc
out
sbb
aad
repz
mov
jp
pop
dec
addl
data16
dec
mov
or
ficoml
sub
arpl
mov
pop
pusha
xchg
mov
mov
push
mov
cltd
mov
fists
push
sub
int
cltd
icebp
mov
mov
jle
movsl
xchg
sbb
mov
adc
aam
push
cmpsb
cmp
lock
dec
adc
imull
imul
pslld
and
ljmp
insl
xchg
and
shl
int3
mov
iret
jbe
aam
jno
or
cmpsb
adc
jge
fnstcw
pop
scas
push
mov
lods
sbb
and
mov
nop
pop
daa
mov
push
xchg
xchg
pop
cmp
fucomip
jp
je
repz
ds
jo
icebp
sbb
jecxz
iret
push
add
xor
das
ffreep
or
mov
dec
packssdw
add
adc
or
dec
sub
inc
lods
cmp
fisubrl
or
int
mov
js
loopne
jle
js
inc
ss
cmp
xor
or
sarl
mov
xor
popf
xchg
mov
xor
add
add
mov
rcll
xchg
call
cmp
imul
mov
std
mov
pop
push
mov
enter
cmc
jp
imul
daa
pop
lock
pop
rcl
cli
pop
fs
jg
pop
mov
rcl
daa
adcb
daa
and
hlt
xor
pop
mov
out
or
jmp
push
inc
or
data16
add
push
stos
popl
ret
mov
shll
idivl
push
mov
pop
cld
xchg
decb
aaa
data16
cmpsb
enter
mov
outsl
testl
adc
sub
popa
mov
idiv
mov
xchg
popf
sahf
cmpsb
lds
and
hlt
cli
in
cmp
pusha
mov
cmpsl
pop
mov
sub
adc
iret
add
cli
cmp
int
mov
popf
jbe
dec
subl
sahf
sub
inc
aaa
or
out
rcrl
inc
and
cmp
and
push
addr16
cmp
inc
and
add
cli
push
adc
sub
fstp
adcl
mov
or
mov
or
sarb
outsl
mov
mov
sub
mov
stos
pop
pop
int
dec
mov
loop
push
dec
popa
out
jmp
popa
jae
xchg
mov
jp
movsb
ljmp
inc
lods
repnz
and
fs
pmulhw
cltd
scas
mov
jg
fisubrs
jp
js
mov
call
rcll
cmp
in
sub
mov
cmp
int
lods
cmovno
inc
cmp
push
adc
pop
stos
push
jnp
or
dec
jo
aam
pushf
xor
or
cmp
hlt
xor
and
idivb
je
stc
in
imul
or
aas
mov
test
cltd
sub
mov
aad
test
ljmp
sbb
adc
scas
lea
loope
pushl
xchg
or
xchg
xchg
mov
and
call
jp
lods
mov
pop
add
outsb
pop
mov
std
scas
and
xor
xchg
fimull
fs
fmull
push
loope
ret
and
inc
sub
cmp
add
or
aas
sub
pop
gs
add
das
nop
push
je
repnz
push
pop
push
mov
push
push
in
jns
mov
xor
dec
mov
cs
dec
nop
jbe
push
lcall
sub
iret
add
sub
rolb
jno
jnp
sub
sbb
pop
add
enter
mov
aam
and
pop
mov
xrelease
fadds
arpl
sbb
mov
out
mov
adc
lret
mov
push
jno
dec
mov
pushf
xor
adc
push
cmp
cmp
mov
cmpsl
dec
cmpsl
pop
into
scas
or
mov
xchg
pop
call
das
xchg
test
mov
mov
jae
mov
xor
push
fwait
gs
inc
scas
int3
bound
push
scas
mov
mov
std
loope
xchg
push
sbbb
out
push
mov
inc
add
jmp
xchg
cli
pop
jbe
push
popa
fwait
scas
mov
popl
and
ficoms
int
pusha
jmp
popf
xchg
je
xchg
sub
or
fs
inc
mov
pop
fiaddl
sub
test
mov
ret
and
sub
mov
mov
fists
dec
imul
pusha
jno
mov
or
pop
push
add
adc
adc
pop
xchg
sbb
and
rclb
ljmp
inc
push
mov
roll
push
insb
leave
pop
jmp
xchg
pop
insl
sbb
insl
sbb
ret
jae
leave
fnsave
aam
stc
inc
or
adc
enter
sub
divb
xor
pop
inc
pop
and
loop
dec
push
mov
in
xchg
pop
push
sub
or
dec
divl
dec
sub
pop
cmc
movsb
jle
lret
mov
sub
cwtl
cmp
mov
aas
xlat
scas
lret
xchg
scas
sub
int3
inc
pop
cmp
movsb
mov
and
aaa
xchg
mov
shll
sub
repnz
movsl
lock
scas
or
imul
sub
shrl
stos
add
mov
sub
jbe
or
aas
cmp
out
xchg
out
jl
jno
dec
ret
bound
sti
xchg
aaa
mov
jo
test
xchg
sbb
fbld
cmp
adc
jecxz
jmp
data16
cli
dec
ret
dec
decb
iret
jle
and
pop
into
sbb
dec
arpl
in
jbe
repz
scas
mov
or
aas
cs
mov
pushf
mov
mov
mov
mov
pop
pop
js
sbb
jmp
mov
lahf
xchg
cmp
inc
mov
out
xchg
sub
xchg
or
mov
call
test
push
dec
lock
xchg
loopne
mov
pop
lahf
add
ds
dec
bound
cltd
aad
jo
push
dec
mov
mov
repz
arpl
and
pop
sti
lea
adc
pop
cmp
xchg
imul
in
incl
jnp
fs
out
into
jns
jg
pusha
leave
jmp
inc
je
inc
leave
xlat
dec
dec
icebp
dec
cmp
jp
out
cltd
and
mov
rcl
push
adc
sarb
mov
xchg
sub
out
jge
ror
mov
inc
sub
hlt
movsb
sub
mov
dec
adc
dec
test
ljmp
or
inc
repz
jno
sahf
and
pop
xor
dec
ret
scas
js
lea
test
ljmp
jge
or
mov
xorl
cmp
fildll
lods
or
mov
aaa
shll
add
pop
addr16
fisubrl
insb
jle
push
xor
mov
pop
dec
fucomi
sub
sbb
in
xor
xchg
out
incb
rclb
adc
add
add
mov
or
xchg
clc
in
stc
stos
xchg
sub
fidivrs
mov
jno
lcall
jne
adc
insl
mov
dec
cmp
sub
test
inc
inc
mov
mov
rclb
mov
cmp
mov
inc
sub
mov
lret
stos
xchg
jl
add
call
aad
popf
dec
or
fildll
inc
xchg
lods
mov
sub
sbb
or
dec
or
mov
mov
cwtl
cmp
repnz
fiaddl
and
push
jmp
add
jle
jge
lods
cmp
or
in
push
add
imul
xor
mov
mov
fmul
jg
into
and
cmpl
out
jg
xchg
jo
es
mov
fstps
data16
adc
sbb
and
push
fs
xchg
ja
mov
ret
push
mov
push
xlat
add
insl
cld
sbb
std
pop
pop
pusha
add
sbb
insb
adc
mov
pop
in
sahf
test
ret
dec
jecxz
stc
sub
dec
mov
adc
fmuls
xchg
fimuls
jecxz
mov
sub
pop
cmpsb
orl
adc
fnstsw
pop
mov
aas
fbld
or
and
jecxz
mov
scas
mov
leave
insb
mov
and
aad
xor
dec
ja
push
jecxz
out
dec
push
into
addr16
and
cmp
inc
dec
or
dec
cmpsb
jmp
cmp
popf
fsubp
adc
xchg
sbb
and
sub
scas
mov
jp
sbb
xchg
cmpsb
mov
iret
mov
cmp
das
sti
adc
fistl
lock
mov
add
rcr
mov
lods
cmp
dec
std
sbb
mov
dec
add
outsb
push
push
addr16
bound
daa
pop
dec
ds
lret
popa
enter
pop
lahf
push
ret
cmp
outsl
push
cld
pop
and
popa
movsl
xor
dec
cmc
xchg
adc
sbb
shll
icebp
jne
aad
icebp
dec
std
xchg
ds
sub
mov
leave
inc
pop
aad
push
outsl
and
sub
add
aas
cmc
in
cmc
out
sahf
lock
pop
mov
sub
enter
loopne
add
je
inc
mov
push
dec
pusha
pop
mov
inc
jno
es
adc
pop
icebp
roll
es
cld
mov
xchg
pop
xchg
dec
test
lods
loop
sub
pop
cmpsl
mov
fidivl
pop
sbb
aam
jl
cmp
ss
packuswb
push
repnz
leave
jae
aas
cwtl
loope
ja
cmp
push
cmp
pop
add
imul
movsl
aad
inc
pop
pop
fcmovne
push
out
psrad
dec
xor
vmovsd
and
ljmp
adc
cmc
repnz
dec
pop
repnz
lahf
clc
sub
dec
push
mov
daa
int3
mov
insb
jge
inc
sti
sub
inc
test
cmp
jp
dec
cwtl
aam
mov
push
jns
xchg
mov
pop
lret
in
lcall
push
xchg
inc
jmp
push
cmpsl
adc
mov
shlb
in
mov
in
jae
or
push
jge
hlt
xchg
mov
cmc
imul
mov
mov
es
inc
mov
shlb
push
in
fisubrs
xchg
pop
mov
ficompl
mov
sub
cmp
shrl
cmpb
inc
pop
jp
stos
xor
test
lret
fstpt
inc
into
in
mov
shll
xor
dec
or
xor
dec
mov
test
xor
or
xor
or
add
cmp
jg
add
lret
xor
arpl
xor
data16
sbb
cwtl
jne
mov
mov
push
fistpll
dec
add
sub
enter
xlat
outsb
aam
mov
cltd
sub
test
mov
adc
mov
mov
or
add
dec
mov
adcl
inc
shrb
xchg
adc
jge
adc
lods
std
adc
iret
and
fidivl
xor
jo
xchg
mov
imul
mov
push
shll
ds
cmc
shr
xchg
insl
dec
push
int3
movsb
sbb
inc
popa
fistl
cmpsb
push
and
popa
hlt
fwait
push
lcall
pop
mov
xchg
jne
in
push
mov
in
or
mov
xchg
sbbb
cs
pop
ret
cltd
and
push
push
or
stos
xchg
pop
sub
jle
outsb
out
into
mov
adc
or
xor
jo
xchg
psadbw
inc
adc
lret
shlb
imul
push
cmp
xor
add
or
jne
inc
push
mov
xchg
bound
pop
notb
das
loope
mov
mov
xchg
mov
adc
sbb
pop
adc
arpl
jge
sarb
jae
out
popa
sbb
xlat
test
xchg
into
lahf
mov
shl
sbb
cmc
and
aad
ljmp
les
adc
loop
fadds
xchg
push
faddl
adc
sbb
jecxz
sahf
adc
mov
loop
cmc
mov
sbb
or
xchg
mov
dec
pop
pop
push
pusha
xor
pop
bound
subb
inc
repnz
mov
pop
mov
negl
adc
into
jnp
cwtl
iret
mov
jmp
xchg
int
sbb
jae
and
pop
mov
pop
push
and
mov
mov
dec
push
xchg
int3
xor
mov
inc
out
mov
popf
mov
rorb
daa
clc
mov
jg
pop
sub
pusha
sbb
mov
aas
pusha
jle
jmp
in
jg
xchg
dec
mov
sbb
mov
leave
xchg
xor
and
lods
adc
add
cltd
sar
xchg
adc
mov
addb
shl
jo
jbe
inc
mov
lcall
ljmp
leave
jb
fwait
and
dec
mov
jecxz
dec
sub
aaa
test
popa
lods
or
icebp
sub
test
insb
fiaddl
sahf
jecxz
rol
cmp
or
mov
mov
pop
mov
gs
mov
inc
add
sbb
iret
jae
adc
fisttpll
rolb
mov
in
cmp
lods
daa
scas
inc
lods
shl
adc
ret
xchg
xor
mov
pushf
les
pop
mov
xlat
xor
inc
lea
outsb
push
push
sahf
mov
or
rcll
test
sbb
xor
rcll
push
inc
inc
adc
imulb
mov
ljmp
mov
push
xchg
rcr
insb
popf
cli
mov
mov
ss
in
sbb
gs
xor
cmp
xor
loope
pop
inc
add
mov
pop
out
ja
ror
xchg
jmp
pop
mov
add
lods
bts
sbb
into
clc
out
pop
cmpsl
testl
test
lock
inc
pushf
je
inc
std
jg
ret
stos
jle
stc
les
add
sub
sbb
xchg
mov
ljmp
bound
daa
addl
and
mov
cmp
das
std
aam
or
push
outsb
push
cmp
adcl
sub
lahf
je
bound
sti
adc
mov
xor
mov
cli
mov
jmp
inc
pop
sub
pushl
lret
dec
dec
loope
ja
loopne
test
xor
and
sbb
mov
add
test
dec
daa
int3
pop
pop
lret
xchg
ds
test
imul
cwtl
pop
cmp
cmp
ret
inc
outsl
pop
cmp
add
sub
pop
into
or
push
nop
lea
sub
lods
mov
and
fstpt
jbe
test
xor
pop
stos
jns
jns
add
ret
fs
push
jle
xchg
sub
inc
shll
loop
fwait
orb
nop
js
sbb
pop
popa
push
outsb
sahf
out
add
repz
jmp
xchg
jnp
lcall
xchg
jmp
std
mov
sbbl
push
jo
pop
mov
divb
jl
stos
popf
add
mov
xchg
pop
out
ja
inc
mov
ud0
jbe
ss
mov
shll
pop
shll
mov
xchg
inc
adc
xchg
sbb
inc
and
lahf
data16
cmp
dec
xchg
lret
call
iret
jmp
mov
add
mov
dec
mov
jmp
inc
xor
or
ljmp
and
dec
ret
dec
or
pop
xlat
inc
fwait
cli
push
scas
imul
call
mov
push
xor
pop
push
and
jne
dec
cmpsl
fwait
xor
insb
sbb
fcmovne
mov
inc
mov
pop
dec
or
out
int3
test
ret
cmp
jl
lret
repnz
adc
enter
or
pop
dec
dec
mov
ficomps
jno
call
push
cmp
push
push
inc
sbb
and
mov
pop
mov
cli
sub
dec
dec
cmp
in
les
push
fstps
lahf
mov
test
fwait
stos
movsl
xchg
lahf
jle
mov
xlat
pop
mov
xchg
int
jp
mov
imul
jle
dec
orl
push
dec
cli
cmpsl
mov
es
sbb
test
ret
jns
outsl
and
add
push
push
roll
sub
xchg
sti
mov
cmpsb
mov
pusha
icebp
popa
pop
mov
dec
out
jp
push
jmp
loopne
daa
ss
cmp
ja
cmpsl
jne
loope
pop
sub
or
mov
mov
push
lea
insb
insb
shrl
fs
lahf
sbb
adc
mov
movsl
xor
mov
add
mov
aam
cmp
andl
cs
adc
rclb
lcall
inc
rcll
test
push
out
movsl
xchg
mov
push
xchg
sub
or
rcll
test
mov
sbb
fisttps
xchg
sub
xor
inc
rcrl
jno
sbb
mov
test
in
inc
xlat
movsb
xor
lea
add
mulb
mov
xchg
sbb
frstor
xchg
jbe
inc
push
into
sahf
jmp
pop
push
test
cs
mov
mov
fadds
sbb
push
xchg
dec
mov
cmp
ret
clc
cmp
xor
ret
lahf
inc
mov
pop
inc
outsb
fcomps
push
roll
mov
ljmp
loop
and
mov
sarl
out
test
ret
push
lret
pop
push
outsl
sub
adc
ss
adc
shlb
or
xchg
out
dec
addr16
push
sub
sub
leave
inc
push
aam
icebp
mov
xchg
aam
in
call
dec
shrb
jae
inc
dec
in
stos
dec
pop
mov
aas
sahf
sbb
and
xchg
mov
sub
jl
inc
and
jbe
mov
add
stc
hlt
push
scas
cmp
jle
xchg
push
or
xor
stos
pop
mov
mov
dec
lret
stc
xchg
mov
push
pop
pop
leave
iret
into
inc
pop
iret
and
pusha
addr16
cmpsl
xor
push
stos
mov
add
aam
jg
push
shlb
mov
inc
xor
inc
sub
add
lahf
push
bound
or
test
dec
xor
subl
mulb
ljmp
int
call
sbb
cmpl
aam
mov
std
fwait
mov
pop
xor
xor
mov
shrb
test
andl
fstps
xchg
adc
push
inc
add
out
scas
add
inc
btc
inc
push
arpl
or
lcall
cmp
or
or
xchg
mov
sar
jae
lock
adc
lahf
mov
mov
sub
pop
fisttps
push
icebp
pop
jmp
cs
cmp
inc
pop
pushf
add
mov
shll
mov
mov
adc
out
ret
pusha
rcr
mov
push
in
jg
loopne
lret
stos
fwait
outsl
adc
sub
mov
add
insl
xor
fildl
jp
sbb
mov
adc
es
imul
popa
int
push
mov
sub
test
push
std
hlt
shrb
inc
add
cmpsb
data16
pop
push
movl
ljmp
jno
in
clc
or
lods
sbb
lahf
xor
leave
jo
int
in
loopne
and
fcmovnb
pusha
outsl
insl
mov
jns
adc
jns
loopne
and
cs
add
aad
pop
and
xor
mov
jns
ds
sbb
fwait
test
loope
aad
in
test
adc
cmp
pop
imul
loope
int3
or
xlat
xor
xchg
push
jae
or
popa
sbb
lcall
adc
lods
cmp
je
insb
jp
adc
sub
inc
cli
cli
out
adc
movsl
adc
xchg
dec
jb
jae
std
add
test
inc
inc
mov
nop
pop
movsb
or
jbe
lods
jae
stos
sub
aaa
int3
xchg
cld
int
cmpsl
push
nop
int3
cmp
jg
mov
je
pushf
dec
hlt
dec
scas
lods
popa
inc
or
dec
or
outsl
sub
fisttps
or
mov
hlt
adc
rorb
mov
ror
addr16
test
out
lret
inc
fdiv
enter
in
and
ret
lods
cmpsl
xorb
ljmp
rol
repnz
push
popa
cmp
adc
jo
dec
cmp
push
jle
or
aam
lahf
inc
inc
xchg
pop
dec
or
push
pop
lods
mov
mov
cwtl
lret
sbb
and
mov
test
and
mov
xchg
cmp
das
stos
in
arpl
add
pop
idiv
jne
in
lds
adcb
lahf
stc
xchg
in
jge
and
jle
popa
xor
pusha
and
icebp
addb
dec
adc
icebp
xchg
mov
sub
adc
sub
out
sbb
pop
icebp
and
lods
ficomps
mov
jmp
push
inc
adc
leave
fsubl
pop
jp
arpl
push
pop
mov
fsts
arpl
fdivr
xor
fisttpl
push
pop
mov
loope
push
adcb
cwtl
add
cmp
inc
jl
out
mov
pop
adc
sub
push
xchg
lret
sbb
cli
fldt
push
mov
sbb
pusha
fistpll
sub
push
dec
push
mov
mull
lock
stos
mov
ds
int3
out
sbb
pushf
popf
inc
xchg
dec
mov
movsb
hlt
mov
daa
fistl
fcmovbe
sub
into
xor
loopne
and
xor
or
adc
mov
xchg
shll
shrl
xchg
lahf
pop
cmp
dec
lea
aam
aas
adc
adc
lods
xchg
lods
nop
pop
xor
mov
push
leave
xchg
adc
xor
push
and
push
sbb
fs
mov
fiadds
outsb
mov
xchg
pop
sub
repz
rcll
cltd
pushl
adc
cmp
repz
xchg
loopne
mov
jp
js
adc
andb
xchg
inc
sub
sub
mov
shrl
lcall
inc
js
mov
fs
push
fiadds
push
mov
test
fidivrs
test
aaa
inc
and
popa
or
fsqrt
roll
mov
jmp
into
mov
add
fnsave
jb
jno
or
push
lret
sub
outsl
mov
punpckldq
adc
imul
js
mov
or
repnz
enter
dec
inc
rclb
jbe
cld
cmpsl
mov
mov
dec
loopne
data16
cmp
sbb
pop
jnp
sub
xor
or
andb
and
sub
leave
sub
pop
cmp
ljmp
cltd
getsec
cmp
cmp
nop
sub
andb
inc
or
mov
pop
push
inc
dec
push
sti
and
sti
sarl
imul
or
cmpsb
in
jo
je
add
clc
daa
loop
call
stos
scas
mov
inc
mov
mov
in
cmp
cmp
fcompl
int3
mov
subb
popa
or
adc
fdivrl
xorb
mov
xor
ret
lret
in
sbb
xorb
xor
push
clc
jp
mov
rcll
xlat
mov
mov
inc
mov
outsb
adc
adc
insl
test
ljmp
sbb
inc
rorl
test
push
aas
and
idivb
dec
loope
outsb
jge
adc
xchg
hlt
call
div
mov
btr
stos
inc
pop
xor
lods
repnz
out
sti
inc
jmp
loopne
and
dec
add
mov
and
mov
and
das
or
ret
mov
xor
sub
fisubrl
sbb
push
std
jmp
aad
fs
push
dec
jp
mov
jns
jno
rclb
mov
inc
cmpsb
cmpsl
add
add
adc
subl
fisttps
mov
pop
mov
mov
push
lods
dec
and
data16
cld
lds
sbb
nop
scas
mov
test
dec
aaa
and
xchg
divl
clc
and
dec
or
xchg
loope
mov
jnp
mov
mov
int3
clc
stos
mov
mov
push
mov
xchg
xor
dec
mov
pop
jg
jecxz
inc
xchg
es
fidivrl
inc
mov
push
mov
in
ss
loop
inc
sahf
mov
ret
out
cmp
rcrl
jg
lcall
xor
js
lods
in
sbb
sub
xchg
and
or
add
xor
in
fpatan
xchg
xor
mov
mov
sarb
test
inc
fsubrl
or
mov
and
fstpl
popa
sti
pusha
jae
into
test
pop
dec
xor
xchg
push
xchg
dec
dec
iret
dec
into
test
fdivrl
fisubrl
mov
adc
jge
jmp
mov
cmp
into
les
mov
jno
cmpsl
mov
mov
jge
cmp
jne
int3
mov
xorb
jg
fwait
lcall
lock
negl
mov
add
cli
and
les
sbb
in
je
dec
sahf
push
adc
pop
xchg
xor
enter
add
xor
repnz
std
jle
cwtl
arpl
and
roll
pop
fidivl
sbb
sbb
test
push
add
or
jle
lahf
aam
add
ds
imulb
iret
and
pop
nop
xor
popa
mov
jb
stos
mov
ficoms
adc
aad
aam
cli
das
ret
mov
dec
fnstcw
loopne
mov
sbb
dec
jg
push
in
dec
mov
insl
cmpsb
jo
mov
fcomps
inc
push
or
jge
lret
pop
and
adc
rol
mov
lea
mov
push
adc
pop
aas
xchg
inc
rolb
out
mov
shlb
or
ja
sbb
inc
shlb
nop
xor
aam
out
mov
lret
pop
xor
popf
js
cwtl
cmp
jno
dec
pop
das
ret
push
dec
sar
fldl2e
outsb
inc
inc
xor
mov
pop
pop
addr16
cs
inc
ret
int
mov
xchg
inc
jns
repz
jnp
and
les
and
fstpl
lahf
lea
sub
scas
dec
inc
sub
sub
aad
xchg
mov
pop
mov
sub
push
movsl
pop
lods
leave
loopne
test
outsb
inc
sbb
inc
aaa
iret
jne
inc
push
fs
dec
mov
dec
loop
inc
inc
xchg
pop
repz
mov
jns
mov
aaa
hlt
cmp
mov
or
mov
out
xchg
popf
shrl
adc
push
sub
xchg
je
jae
jl
xor
mov
test
pushf
and
push
sbb
shrl
mov
repz
stc
lret
dec
or
xchg
lds
out
sbb
nop
in
ljmp
jge
or
and
cmp
nop
aas
mov
icebp
mov
inc
call
aas
out
insb
push
xchg
pop
push
enter
ret
loop
loop
adc
hlt
out
fdivrs
and
mov
mov
je
jge
dec
or
or
cwtl
fs
mov
adc
dec
js
cmp
cmp
xchg
fwait
in
sbb
jnp
divl
push
push
popa
scas
ret
push
je
cltd
adcb
push
mov
stos
push
inc
mov
clc
cmp
and
outsl
pop
jmp
sarl
push
lods
fcompl
and
push
inc
mov
pop
sbb
dec
clc
mov
imul
jl
push
add
and
test
insb
outsl
and
adc
pop
pop
lods
cld
adc
mov
mov
add
stos
mov
cmp
ds
push
test
sbb
cmpsl
jle
int
jbe
push
jbe
fiadds
lock
movsb
mov
sub
cld
mov
faddp
sbb
push
lahf
jecxz
mov
sti
pushf
push
inc
mov
xchg
jo
push
xchg
mov
repz
jnp
push
jb
imul
fdivrl
call
scas
adc
loopne
ljmp
imul
arpl
xchg
or
lcall
dec
sub
cli
or
pop
push
lods
hlt
and
lods
loop
sub
sbb
pop
rclb
ret
sbb
push
sub
in
faddl
mov
std
mov
leave
in
lret
xor
xchg
jmp
fstpt
shrb
ret
dec
jecxz
sahf
lret
dec
xor
push
xor
and
pop
fistpll
dec
sti
add
jge
push
call
jb
jns
imul
shlb
into
fidivrs
add
mov
aas
pop
aaa
out
testb
mov
jge
xor
inc
dec
xor
push
cwtl
adc
push
inc
loopne
add
lock
push
gs
mov
pop
stos
lret
and
cmp
jmp
stc
cli
mov
inc
stos
sbb
inc
push
stos
loop
std
lods
sub
iret
jo
xchg
inc
mov
mov
xor
fidivs
ds
pop
jae
add
lea
push
es
push
cli
mov
dec
sti
jbe
adc
jnp
mov
mov
js
cmp
push
shlb
inc
in
imul
stos
lahf
stos
mov
ja
nop
loop
sbb
dec
cmp
mov
jecxz
push
ds
test
mov
insb
notl
inc
in
popf
es
lret
fs
iret
fmuls
push
arpl
xchg
outsl
roll
out
mov
jo
push
rorb
ret
jnp
sub
mov
aaa
aaa
lahf
jg
or
mov
lcall
adc
jp
inc
out
xchg
mov
xchg
xor
scas
push
or
inc
inc
jle
cld
push
out
int
mov
pop
fistps
pop
and
iret
xor
mov
push
lods
inc
inc
push
cmp
pushf
cltd
xor
push
or
pusha
fisttpll
add
in
inc
mov
inc
out
xchg
filds
inc
lds
nop
or
ja
popf
mov
xchg
inc
mov
jns
out
test
stos
mov
lds
jb
lea
test
push
xor
fs
movsb
sbb
call
or
mov
out
adc
cmp
adc
fistl
shr
mov
imul
jbe
push
cmp
adcl
jnp
pop
mov
leave
push
lods
xor
mov
inc
cs
push
mov
sbb
fldcw
scas
lods
movsl
sbb
mov
xchg
test
inc
jle
punpckhwd
fstpl
pop
movb
cmpsb
stos
dec
test
adcb
dec
popa
cs
sti
shlb
fs
mov
xor
leave
test
das
push
dec
add
mov
push
cwtl
aas
cmp
and
mov
mov
or
xchg
daa
icebp
cmpsl
xchg
sbb
jne
add
ja
or
cmp
pop
in
jmp
adc
stos
pop
call
fsts
pop
pop
ret
and
fidivl
fnstenv
cld
movsl
sbb
std
mov
inc
js
loopne
or
std
sbbl
cli
adc
je
dec
cmp
mov
arpl
or
inc
jp
imul
les
or
adc
pop
or
aaa
jl
fldcw
lds
cmp
pop
sbb
mov
mov
addb
stc
and
fbstp
lahf
dec
mov
mov
fs
cmp
mov
push
cmp
add
stc
call
mov
sub
hlt
xor
lret
mov
mov
addr16
fiadds
adc
inc
out
inc
sbb
xor
xor
sahf
outsl
fidivrs
ljmp
mov
cmp
lret
xor
in
xchg
sbb
cltd
in
or
xor
push
mov
push
into
je
leave
stos
sbb
sbb
rcll
xchg
aad
mov
pop
jmp
dec
std
pop
push
cltd
push
mov
dec
testl
loopne
dec
test
lret
bound
fst
cmp
or
add
cmp
fs
jbe
sub
jecxz
sbb
adc
xchg
in
adc
mov
add
cmp
inc
sub
cmp
ret
std
mov
jmp
rcr
mov
adc
out
sub
jg
sahf
bnd
mov
ret
jno
lea
nop
fiadds
add
scas
enter
sub
lock
xchg
in
mov
insb
add
mov
mov
popa
int
adc
idivb
gs
stc
out
test
aaa
leave
or
mov
add
fstps
push
shll
and
scas
mov
lds
and
rcrb
mov
aam
mov
fstpt
and
test
push
push
mul
mov
add
sub
jns
push
fwait
iret
xchg
lahf
stc
pop
push
mov
insb
xchg
xor
xor
jnp
loope
inc
lcall
movlps
imul
jnp
sub
and
loop
jecxz
xor
loop
cld
adc
out
mov
push
pop
pushf
insb
mov
ds
dec
inc
or
pop
test
andb
data16
inc
leave
fdivrs
lahf
addr16
fimuls
imul
jp
aaa
imul
inc
das
lds
jmp
stc
mov
add
xor
push
int
xchg
insb
mov
push
push
xchg
jp
repz
mov
movsb
mov
mov
and
pop
ja
cltd
testl
sub
notb
xlat
cmp
les
call
cmp
adc
mov
xchg
cmp
imul
ficomps
xchg
xchg
es
dec
dec
les
inc
fdivrl
pop
inc
dec
fsub
lods
imul
cmp
mov
jl
push
push
mov
clc
test
shlb
xchg
adc
ret
subb
shl
popa
les
rcl
out
pop
mov
push
shrb
aaa
test
aad
enter
mov
mov
xor
add
mov
mov
int
gs
xor
je
inc
arpl
cmp
fwait
or
push
jbe
inc
repnz
out
cmp
cmc
out
out
cmc
lcall
lea
push
xor
clc
loopne
jns
jge
cld
inc
push
pushf
jb
inc
imul
inc
push
push
cmp
push
xor
jb
pop
mov
dec
inc
lret
aaa
mov
arpl
les
fiaddl
data16
dec
add
fisttpl
ja
dec
sbb
aad
movsb
mov
bound
cmp
cmp
pushf
lret
mov
cmp
and
cld
add
stos
dec
xchg
cmp
cwtl
js
aam
test
add
mov
cmp
push
pushl
mov
and
cmp
es
cmpsl
incb
rorb
jne
cmp
fimuls
adc
fldt
cmp
jo
test
movl
sahf
xchg
push
addr16
push
mov
or
sbb
jb
pop
push
inc
loopne
mov
xchg
and
adc
icebp
add
arpl
and
sti
fdivrs
and
mov
xor
mov
insl
push
push
cmp
dec
cli
lea
inc
addl
sbb
cmpsl
in
loope
push
mov
std
mov
adc
ss
and
cmpsl
mov
sbb
out
popa
addr16
mov
push
repz
lcall
xor
sub
mov
mov
pop
xchg
subl
loop
out
ret
mov
daa
rcrl
mov
pushf
adc
cltd
dec
pop
inc
and
bound
lods
sbb
inc
xchg
loop
mov
add
mov
pop
hlt
sub
daa
jl
mov
daa
sbb
xor
leave
cmp
or
inc
cmp
into
aad
roll
xchg
sub
test
or
mov
pop
adc
dec
dec
hlt
test
cmp
pusha
jne
lods
push
mov
icebp
mov
in
js
psrld
call
pop
mov
mov
mov
repnz
inc
or
leave
test
shrl
and
push
aas
mov
pusha
inc
xchg
test
test
and
sub
pop
jge
dec
add
cmpb
outsl
mov
push
add
out
sahf
scas
sbb
cmp
es
mov
testb
pusha
sub
lods
insb
push
ja
lret
cmp
add
inc
cmp
test
data16
push
das
lret
mov
ljmp
lods
mov
push
fsubrs
pop
cld
jb
sub
or
lahf
jbe
mov
sbb
sbb
push
outsb
gs
insb
arpl
das
ss
and
shr
test
jle
lea
fmul
or
dec
scas
test
mov
cmc
add
push
aad
mov
xor
xor
popa
data16
jl
lret
push
xlat
ljmp
cld
mov
xlat
and
hlt
cmpb
jae
nop
pop
dec
ret
inc
mov
sbb
sub
adc
mov
dec
das
lcall
lcall
push
mov
or
jmp
push
xor
adc
sbb
ljmp
cmp
push
cmp
fcompl
mov
adc
dec
pop
hlt
pop
rcr
aam
imull
sbb
out
mov
adc
sub
mov
cmp
dec
mov
data16
mov
or
fdivp
iret
dec
dec
jmp
sbb
adc
out
sbb
adc
xorl
mov
stc
and
or
sub
or
pop
aaa
mov
mov
je
das
lret
stc
adc
cmp
es
cmp
mov
jmp
int3
push
test
std
aam
jecxz
jbe
adc
pop
xchg
pusha
js
inc
mov
pop
cmpsl
pusha
addl
jl
lret
inc
mov
mov
push
xchg
sarl
pushw
aad
jbe
or
aad
dec
pop
jp
pusha
cmp
sub
cmp
je
jns
and
fsubrl
lds
xchg
jg
jle
push
mov
xor
aam
out
lret
nop
lcall
into
movl
addl
addb
testl
and
call
scas
ror
jge
in
xor
filds
jge
cld
sub
imul
fmull
outsb
lcall
sbb
or
or
fsubrl
inc
mov
or
out
pop
jb
adc
cmp
test
mov
orl
or
and
push
pop
xor
aaa
lea
xchg
inc
mov
inc
out
push
sarb
mov
jle
lret
push
and
and
loope
hlt
xchg
cmp
push
mov
out
lcall
push
dec
xchg
mov
dec
mov
push
fmull
push
or
rol
mov
out
scas
mov
out
xchg
push
dec
bound
divl
and
xchg
or
jb
add
fstps
pop
filds
ljmp
xchg
loopne
test
ret
lock
loope
in
testb
test
daa
cwtl
pop
add
insl
fcomps
cmp
outsb
sahf
xor
stos
xor
rorb
in
and
jnp
cmc
or
roll
sbb
xchg
stc
pop
cltd
xor
sahf
add
cltd
mov
enter
std
popf
das
out
mov
mov
jge
mov
inc
add
sub
push
or
mov
lahf
in
jp
or
jne
jmp
or
mov
cmpl
test
ret
push
fidivrs
imul
daa
sbb
pusha
mov
or
mov
mov
xorl
fmuls
scas
int
push
push
push
xor
xchg
outsb
call
xlat
dec
pushf
cltd
pop
cltd
xlat
lahf
test
adc
cmpsl
fcoms
aam
in
inc
sbb
lret
and
or
dec
mov
dec
jae
jecxz
sub
call
out
dec
fistps
ds
ret
and
icebp
xchg
testb
ret
jecxz
cmpb
pop
in
pop
popf
push
pop
ret
sub
and
rcrl
popa
add
jmp
stc
inc
adc
inc
repnz
jmp
iret
rcr
sahf
sbb
or
lret
pushf
push
imul
push
les
jns
stos
call
shl
lcall
xchg
aam
sbb
aad
addb
xor
cmp
dec
imul
test
pop
fisubs
push
mov
and
sti
adc
pop
mov
hlt
xor
fisttpl
sbbl
mov
or
mov
call
adc
add
lahf
mov
cld
or
mov
fdivl
pop
xor
xchg
lret
xor
dec
xchg
pop
xor
add
dec
scas
xlat
dec
sbb
lock
add
push
xchg
xchg
scas
xorb
push
mov
mov
sub
std
loopne
lods
bound
pop
test
lahf
jmp
dec
mov
dec
cmpsb
jne
xor
dec
pop
jmp
jnp
scas
or
sti
adc
push
not
ret
jnp
bound
ss
inc
xor
loope
xchg
mov
and
cwtl
loop
in
jg
push
loopne
addr16
jns
cmc
pop
xor
jne
jno
rcr
push
pop
inc
dec
jl
jl
stos
push
jne
scas
jo
sub
repnz
sti
dec
and
pop
ror
test
push
xchg
ffree
jp
inc
push
sbb
mov
mov
leave
mov
xor
add
lods
jae
arpl
inc
fucomp
dec
clc
mov
scas
lock
inc
mov
push
add
cmp
jecxz
pop
adcl
mov
fidivs
mov
icebp
xchg
ss
or
aaa
add
cmpsb
je
and
xor
stos
and
push
mov
pop
jmp
cld
xchg
cmp
in
xor
jns
push
mov
ljmp
mov
xor
cmp
cmpsb
inc
cmp
push
dec
cmp
mov
dec
fbld
push
lods
lahf
into
sbb
ficompl
arpl
shlb
mov
and
cmp
lahf
xor
xorb
xor
and
je
pop
nop
loopne
in
ja
mov
sbb
add
mov
loop
jge
fcmovnbe
add
cmp
pop
sbb
pop
jb
sub
push
xor
mov
sub
dec
add
lods
xor
sarl
push
or
out
pop
fidivrs
mov
in
mov
mov
stos
jp
int3
push
aaa
call
mov
lret
fisubrl
aam
jge
push
and
mov
ja
mov
out
jae
jge
jnp
and
xlat
fst
jno
cmpsb
and
shrl
xor
mov
fdiv
dec
jmp
or
jnp
popf
rorl
scas
inc
out
pushf
sub
cmpsl
nop
adc
push
popa
sub
push
aas
fcmovb
sbb
inc
outsl
cmp
xor
adc
xchg
popa
and
mov
pushf
enter
or
lock
hlt
in
inc
leave
mov
shlb
mov
mov
shl
in
mov
or
lcall
jp
push
les
or
cmp
ret
sar
mov
cmp
mov
dec
push
bound
test
out
adc
jnp
test
notl
daa
enter
pushf
dec
mov
mov
popf
loope
loopne
testb
add
daa
fsts
and
pop
and
movsb
adc
push
rorl
scas
cwtl
out
test
inc
jnp
pop
pushf
dec
jo
insl
cmc
mov
ret
out
loopne
mov
jl
sbb
or
jle
pop
cmp
push
pop
jae
jae
or
fwait
cmp
pop
cmp
push
ds
xchg
jne
xchg
pop
pop
xor
push
xor
mov
inc
fld
lods
fwait
push
lcall
xchg
subl
mov
insb
add
aam
jg
xchg
loop
push
out
sbb
orl
repnz
arpl
movsl
stos
addr16
pushf
push
ss
rolb
push
cmpl
inc
data16
sahf
mov
dec
das
mov
cwtl
fisttps
push
icebp
fisubs
pushf
mov
test
jecxz
loop
gs
leave
xor
mov
fwait
xlat
pop
mov
lds
repnz
sub
fwait
cltd
mov
lods
fildl
pop
mov
mov
xchg
hlt
fldenv
je
push
jns
fldl
in
hlt
jg
jecxz
jne
into
pop
repz
push
mov
jbe
push
fwait
push
ret
paddd
mov
lret
or
pushl
cwtl
lret
lock
xchg
stos
iret
jl
jmp
rcl
inc
jle
push
xchg
cmp
sub
arpl
jns
push
je
mov
aaa
xor
cltd
push
call
jo
dec
pop
cmc
dec
fisttpll
inc
call
movsb
je
mov
mov
sbb
fisubrl
cli
lret
lcall
movsb
adc
negb
inc
or
sbb
in
jp
xor
mov
mov
fwait
fwait
jb
fs
inc
lock
stc
inc
data16
fs
in
mull
xor
sub
sub
lea
inc
int3
lock
enter
or
outsl
mov
inc
add
mov
fcomps
add
push
or
dec
lret
cmp
mov
mov
pop
clc
xorl
sub
divb
popf
popf
aas
shlb
jb
jbe
fbstp
pinsrw
leave
push
inc
or
cmp
call
mov
sbb
mov
push
repnz
imul
hlt
lret
inc
movsl
cmp
sub
jecxz
add
pop
insb
inc
inc
in
mov
je
addl
sti
sbb
stc
scas
shrb
inc
jp
lcall
lret
leave
jmp
and
loopne
push
test
mov
daa
push
pop
xor
xor
rcll
movsb
mov
adcl
dec
cmp
mov
out
pusha
mov
std
stc
ja
push
fldcw
xchg
aas
xor
shrb
push
pop
in
bnd
add
xor
push
cmp
leave
cmp
xchg
push
adc
jb
push
lock
iret
aaa
andl
daa
movb
out
adc
ljmp
mov
movsb
cmp
sub
pop
cmc
mov
jmp
call
push
ror
pop
lods
ret
inc
data16
push
shlb
dec
push
sbb
cmp
leave
xchg
mov
lret
push
adc
dec
inc
cmp
push
fwait
fs
pop
inc
dec
std
rcrl
sbbb
clc
or
push
mov
mov
repz
lcall
jmp
jecxz
in
fdivrs
cli
mov
loope
jecxz
fs
in
jmp
imulb
sbb
fidivl
clc
add
or
hlt
add
xchg
xchg
jmp
icebp
pop
arpl
bound
mov
jb
sbb
outsb
mov
pusha
pushf
dec
shrl
add
cmp
sahf
lahf
xorl
cli
xchg
cmp
sbb
sbb
pop
mov
test
sub
das
pop
push
lea
iret
mov
int
loop
cltd
lods
addr16
xchg
jp
fsts
js
xor
jmp
bound
xchg
adcb
loopne
imul
cld
paddusb
pop
pushf
fdivl
sub
icebp
sbb
nop
mov
cmpsb
je
repz
jbe
or
or
fwait
xchg
rolb
sti
fsubrs
dec
test
or
cmp
inc
mov
jge
inc
cmp
mov
call
jnp
fldl
fisttps
pop
cli
outsl
in
push
rolb
dec
pop
push
mov
mov
adc
adc
push
inc
bound
xorl
cmp
int
inc
xchg
add
mov
mov
jb
xor
xor
into
movsl
cltd
push
xchg
cmp
imul
addl
xchg
mov
jbe
lods
fs
or
jno
mov
int3
add
xor
addl
adc
xor
xor
aaa
ror
pop
jnp
fnstenv
cmpsb
dec
push
test
pop
or
in
ret
mov
insl
xchg
out
data16
pusha
stos
push
and
mov
jnp
push
lret
add
popf
imull
push
ret
mov
xlat
xchg
jl
push
sub
adc
and
rorl
dec
xor
cmp
push
or
lea
lock
inc
subb
sbb
mov
pop
cld
adc
data16
inc
xchg
or
outsl
lret
fsub
test
sub
das
xchg
ficomps
fnstsw
je
imul
cli
ret
mov
testb
frstor
int
in
icebp
jae
fldl
and
sbb
imul
daa
adc
stos
ret
testl
sahf
icebp
cmpsb
ljmp
movsl
cmpsl
cmpsl
adc
xchg
push
push
mov
jecxz
mov
xor
sub
jne
lods
ficoml
cmc
jle
fwait
sbb
sbb
push
push
xor
push
sahf
add
mov
movsb
adc
xchg
fwait
loop
sub
pop
aam
pop
lahf
mov
add
pop
mov
cltd
pop
push
mov
cmp
fwait
mov
dec
lret
mov
mov
push
cwtl
stos
push
mov
nop
pop
les
mov
add
jl
mov
pop
dec
dec
ja
or
in
pop
or
fadds
xchg
push
sti
xor
loop
mov
adc
int3
das
jns
adc
adc
aaa
imul
je
push
lcall
sbb
jle
inc
pop
punpckhbw
push
out
js
dec
data16
adc
aad
mov
add
stos
add
lock
aam
into
dec
jo
cmp
jmp
ja
pop
je
setno
and
mov
mov
mov
icebp
int
fmul
shll
mov
enter
mov
aad
xchg
mov
mov
jp
test
dec
arpl
sbb
orb
in
cmp
das
adc
mov
arpl
sarl
xchg
cmp
ror
mov
sbb
scas
out
idivb
pop
jg
data16
inc
sub
jns
repz
lret
xchg
aaa
push
js
leave
fldenv
pop
cmp
pop
pusha
fstl
or
sar
sbb
js
fmuls
jns
popa
imul
pusha
cltd
push
repz
shll
add
inc
bound
inc
cli
xchg
sbb
lods
mov
cmp
push
test
pop
push
xor
inc
adc
flds
mov
xchg
mov
mov
pop
stc
movl
xchg
mov
gs
movsb
mov
icebp
jg
push
adc
or
dec
movl
mov
jae
outsb
pop
outsb
lods
mov
scas
popl
out
out
push
ss
pop
pop
mov
sbb
out
jg
pop
pop
sbb
adc
mov
push
out
push
dec
pop
adc
arpl
pop
repz
insb
adc
mov
xchg
jle
int3
scas
sbb
ret
dec
popf
inc
pop
pushf
jbe,pt
pop
mov
enter
fistpll
ljmp
mov
int3
aas
addr16
pop
add
scas
xor
xchg
aam
mov
and
jae
jp
lock
pop
je
and
xlat
sbb
or
mov
imul
push
faddp
pusha
mov
sahf
adc
test
dec
xlat
pop
dec
nop
jbe
pop
mov
push
xchg
or
adc
icebp
xor
lret
xchg
add
lret
xorb
cmp
and
mov
sub
aad
jecxz
add
mov
jns
cmc
orl
xchg
daa
ret
push
mov
shrb
xchg
test
insb
repz
mov
and
pop
and
mov
dec
adc
lds
stos
sbb
sub
and
addb
inc
mov
jle
and
and
iret
and
popf
hlt
jp
fsubp
pusha
rolb
aas
mov
mov
add
cmpsb
std
xor
cmpsb
pop
sahf
ficomps
shlb
roll
push
jge
repz
mov
and
popf
inc
and
pop
pop
sarw
andb
insl
push
pop
movsb
fdivl
pop
lea
insb
jbe
push
nop
ja
xor
jnp
xchg
cmpsl
aam
cmp
pushl
cwtl
popf
push
int
cmpsb
sbb
and
lods
adc
xorb
icebp
ret
mov
push
pop
pop
mov
sahf
out
cli
je
outsl
or
mov
pop
jne
stc
fsubrl
rcrl
daa
fstpt
cmc
cmp
cmp
adc
and
imul
sarb
sbb
pop
sub
mov
aaa
mov
cmpsb
repz
pop
cmpb
mov
or
je
ret
fiadds
fcmovb
push
xor
pop
fs
sub
fcompl
or
rcrl
cmp
xor
or
pop
orl
lcall
jp
inc
popa
jnp
push
outsl
out
mov
stos
inc
ffreep
leave
lock
arpl
int
xchg
or
push
std
insb
adc
cmpsb
mov
outsb
xchg
mov
out
cmp
xor
out
jg
dec
mov
loopne
mov
cwtl
dec
sub
sbb
int3
pop
and
sub
cltd
mov
add
addr16
les
ss
dec
decb
cltd
lcall
mov
fisttpl
adc
out
sub
mov
add
dec
mov
pop
popl
loopne
lahf
or
mov
inc
dec
mov
mov
adc
fcoms
mov
dec
xor
es
fcmovnu
je
int3
out
insl
gs
mov
push
inc
iret
pop
sahf
pop
test
cwtl
lcall
fsubrl
jnp
sub
adc
mov
add
jmp
ja
repz
in
scas
push
imul
cmp
jl
js
cmp
inc
testl
push
andl
cli
int
scas
xchg
xchg
xchg
cmp
or
cld
jle
pushf
fiadds
or
jg
mov
fcmovbe
movsl
push
and
push
and
jno
sub
jmp
dec
scas
jmp
and
mov
inc
dec
xchg
and
xchg
push
ljmp
mov
pushf
fcmovne
jb
add
ja
xlat
scas
push
aaa
imul
xchg
lds
add
or
pop
or
jge
inc
sbb
push
ja
xchg
nop
mov
mov
mov
subb
sub
inc
xchg
jle
test
adc
neg
fistpll
push
in
cltd
mov
out
xlat
dec
cwtl
inc
ret
sub
jle
fdivs
shlb
dec
push
sub
adcl
pop
loop
movsl
mov
jle
sbb
arpl
xor
cmpsl
xorl
test
pop
dec
jno
push
xchg
leave
xor
test
dec
inc
mov
and
xchg
cmp
neg
imul
bound
push
xchg
cs
jns
out
mov
xor
push
sahf
pop
xchg
cmp
push
bound
mov
sub
add
out
cmp
mov
jl
push
mov
notl
dec
popa
mov
int
xor
mov
mov
or
dec
rclb
aad
adc
jo
imul
out
adc
notl
mov
pop
aad
xor
cmpsb
pushl
xor
lcall
xchg
cmpl
sbb
shl
inc
imul
xchg
data16
pop
lock
dec
ss
xor
sti
in
cld
xor
push
inc
mov
insb
or
rorl
cld
mov
repz
fldl
or
or
and
cmp
dec
push
add
cmp
and
jnp
sub
jge
dec
or
or
inc
scas
in
sub
popa
shlb
arpl
repnz
cmp
gs
rorl
adc
sahf
push
sbb
xchg
mov
fcomi
cwtl
jbe
or
jb
pop
sbb
lods
lock
cmp
lea
push
xchg
dec
mov
mov
aas
rcll
insb
sbb
jns
popf
push
jge
push
xor
mov
inc
add
sbb
adc
movd
test
arpl
pop
inc
add
fidivs
pop
pop
jge
mov
hlt
clc
lahf
insl
test
jnp
xchg
loopne
and
xchg
rclb
aam
sub
clc
int
jle
pop
fisttpll
insl
lcall
nop
cmp
adc
mov
dec
push
iret
cmpsl
icebp
fisttpll
aas
test
push
dec
cmp
xchg
inc
ljmp
dec
out
fldl
ss
stos
jle
and
fcompl
sbbl
xor
push
out
pop
xchg
sarb
rcrl
jge
pop
repnz
in
jl
add
idiv
iret
leave
call
sbb
mov
sbb
call
add
imul
mov
out
pop
push
mov
jnp
out
shlb
pop
push
add
clc
popa
mov
adc
sarw
lds
xor
push
out
ret
xchg
outsb
lods
sbb
jo
sub
mov
fs
mulb
imul
jo
pop
sub
dec
add
mov
test
pop
add
ja
xlat
lahf
fnstsw
pop
lods
mov
xor
dec
ss
mov
std
mov
leave
out
ficoms
ljmp
sbb
push
aam
fwait
push
gs
movsb
xchg
mov
je
inc
xor
cmpsb
dec
pop
pop
in
fsubrl
rclb
fcomip
adc
enter
out
sub
out
sub
jge
rclb
xchg
fnstsw
cltd
jbe
rcll
in
push
and
arpl
pusha
ret
addr16
rcr
mov
sti
mov
and
das
xor
jb
push
clc
push
lret
sub
mov
orl
add
mov
push
mov
addr16
jo
mov
jge
arpl
pop
lcall
push
jge
xchg
sub
loop
xor
ja
xor
fdivrs
mov
fists
mov
mov
cmp
nop
pop
dec
xchg
and
sbb
aas
ljmp
pop
dec
dec
and
mov
add
and
mov
jae
push
cmp
fisubrs
addr16
cld
lea
push
sti
xchg
push
xchg
hlt
jecxz
cmp
jne
loope
out
adc
push
cmc
jmp
arpl
pop
mov
cmp
mov
loopne
inc
jnp
pop
pop
dec
add
add
std
imul
push
leave
xor
add
rcrb
add
jns
lahf
inc
xor
ret
aas
fcomi
cmp
push
or
xlat
xchg
pushw
sti
jge
inc
pop
leave
sub
dec
adc
fcmovb
pop
clc
cli
cmp
scas
dec
jo
push
inc
aad
outsl
in
in
arpl
mov
or
and
outsl
cs
mov
notl
sbb
rcl
loop
lds
fs
test
pop
xchg
add
cmc
jmp
add
rep
adc
pusha
sarl
dec
add
mov
test
int
test
fdivl
mov
addr16
pushf
enter
xchg
jb
test
leave
sub
jae
jg
dec
ss
push
andb
cltd
movsb
test
jp
inc
adc
pop
rcrl
out
ret
mov
mov
adc
test
inc
sub
in
movb
or
xor
jge
outsl
cmpl
mov
int
jge
xchg
repz
inc
cmp
and
icebp
iret
movsb
dec
mov
test
xlat
jmp
and
test
mov
test
xchg
js
cmp
insb
std
pop
adc
aam
mov
mov
inc
push
jbe
in
iret
movsb
in
xor
cpuid
movsb
out
xlat
les
lods
mov
data16
pop
mov
mov
cmp
cmp
sbb
inc
mov
outsb
jg
aas
cld
movsl
fs
or
dec
lret
lds
out
lock
sbb
data16
stc
fmul
mov
mov
fmul
xor
add
fisubs
sub
inc
shrb
inc
loop
mov
insb
push
in
xor
inc
xlat
add
xorb
arpl
les
out
sbb
adcl
pop
cmpsl
sbb
mov
jne
loope
add
xchg
xchg
fists
xorl
mov
or
loope
mov
jg
cmp
mov
pop
dec
pop
mov
jg
ds
pop
clc
repz
cs
mov
fisubrl
add
inc
or
les
call
dec
jo
and
sbb
inc
jns
fwait
jae
push
cmp
dec
sbb
xchg
clc
mov
stos
addb
dec
addr16
mov
pusha
mov
cmp
lcall
mov
lock
ds
fildl
and
cmp
sub
rcpps
dec
mov
repz
add
push
push
das
xchg
insb
cs
inc
icebp
movsb
pop
mov
lea
push
dec
xchg
and
jle
ss
cmp
xchg
dec
jne
cmc
icebp
dec
and
fdivl
pop
and
mov
repz
mov
rclb
mov
cmp
pop
std
test
mov
stc
aas
cmpsb
je
stos
add
sub
scas
xchg
adcb
fadds
sbb
ja
and
stos
popa
aas
in
outsb
dec
lret
or
cmp
fstpl
in
xchg
jnp
pop
sub
hlt
push
stos
lret
sbb
in
inc
xchg
sti
cmpsb
insl
aaa
mov
cmpsl
addr16
jo
jg
aas
inc
mov
inc
xchg
insb
pop
jnp
fs
and
clc
or
sbbl
jns
lods
mov
pop
pop
test
test
movsl
adc
mov
xor
lods
adc
xchg
data16
sub
insb
mov
out
and
lahf
out
popa
mov
mov
mov
fadds
add
scas
hlt
sub
mov
fsubs
loop
mov
xchg
xchg
loopne
push
popf
dec
inc
imul
and
mov
outsb
inc
ljmp
sub
push
or
mov
mov
mov
or
and
stc
push
fs
inc
rorl
rolb
add
sbb
mov
sbb
call
or
sbb
iret
ss
fstpt
push
aam
cmp
mov
call
testl
movsl
mov
push
or
and
adc
sahf
mov
mov
addl
lods
rorl
adc
mov
fmull
mov
pop
jecxz
lcall
aaa
or
jb
inc
adc
mov
das
es
nop
out
out
add
movsb
cmp
jb
inc
push
adc
sti
dec
xchg
addr16
or
test
push
je
pop
adc
mull
ds
sbb
sbb
cli
mov
mov
imul
test
test
cmp
es
aas
sbb
lcall
or
xor
add
lahf
pop
jge
cltd
aas
pop
push
xchg
add
mov
popf
shrb
ret
sub
cmp
popl
ret
push
pop
cwtl
adc
sti
iret
lods
inc
movsb
jae
lock
dec
jl
jge
jb
mov
push
loop
xchg
jecxz
imul
pop
cmp
fidivl
in
rclb
stos
jb
gs
test
add
dec
xchg
push
cmp
mov
jbe
xor
icebp
sub
or
sub
mov
inc
ret
lods
push
pop
xchg
cmpsl
movsl
out
lcall
pop
ret
pop
cmp
lret
or
movsb
and
imul
mov
int3
arpl
sbb
push
cmp
and
shl
fistpll
pop
lahf
outsb
cmp
xor
std
adc
cmp
and
mov
dec
movsl
pop
xchg
aaa
mov
adc
loopne
ja
dec
jp
mov
cmp
mov
sub
mov
adc
popf
adc
stos
push
pop
out
or
jnp
fcoml
jo
mov
sbb
inc
mov
std
push
ljmp
cmp
adc
xchg
sbb
inc
ja
jb
es
gs
imul
sbb
outsb
aas
jns
xchg
imul
pop
jmp
imul
rclb
lock
pop
addr16
dec
int
cs
pop
movsb
mov
cltd
pushf
cmpsb
shlb
xchg
cmp
cmpsl
mov
jmp
loop
fsubs
and
test
mov
cwtl
out
mov
add
pop
dec
jns
test
stos
test
scas
or
add
mov
dec
sub
stos
and
test
mov
int
je
dec
and
push
or
xor
rcrb
add
lret
pop
and
lea
cmc
movsb
shlb
neg
cmp
incl
movsb
xor
clc
mov
adc
movsb
push
jae
sahf
xchg
sub
xchg
pop
mov
mov
pop
xor
icebp
jo
inc
ret
sub
imul
stc
pop
xor
mov
jnp
xor
cli
push
shlb
dec
rorl
dec
or
ss
add
cld
repz
fmull
into
inc
push
popa
fcmove
lods
scas
ret
xchg
sbb
mov
loop
push
aad
mov
test
and
fsubr
gs
jl
int
push
cmp
repz
adcl
push
stos
cld
dec
clc
in
sub
xchg
push
inc
cmp
xor
xchg
cmp
daa
outsl
pop
inc
jecxz
mov
or
aaa
push
or
mov
and
pop
cwtl
ja
not
xor
sub
fisttpll
push
repz
int3
fwait
cmpsb
sbb
dec
insl
xlat
cmpsl
lock
shrb
fdivs
pop
xchg
mov
xchg
mov
jmp
js
icebp
aam
ss
push
in
out
lcall
or
test
inc
mov
push
add
or
dec
mov
call
dec
pusha
call
xor
lock
sub
fwait
mull
pop
jmp
orb
cmpsl
stos
adc
aam
pop
jno
inc
lds
je
mov
mov
sub
adc
fcomip
lock
xchg
pop
fdivrl
xor
dec
out
inc
insl
loopne
sub
mov
or
push
push
sub
jle
cmp
ljmp
and
mov
test
or
in
xchg
insl
sahf
push
or
jl
lcall
adc
fsts
test
jnp
movsl
insb
jmp
cli
cmp
and
adc
and
and
test
outsl
push
loopne
jl
fcoml
cmpsb
and
mov
popa
arpl
test
ja
mov
inc
cmp
jns
sub
js
jnp
jl
adc
hlt
nop
cmp
sub
jb
and
jne
ss
daa
int3
adc
ret
aad
imul
xchg
inc
xlat
movsb
add
inc
mov
sub
data16
push
in
or
xlat
clc
inc
sahf
ds
aam
and
or
push
test
repnz
dec
fidivl
pushf
lret
add
mov
nop
adc
push
lods
mov
pop
insl
ret
fcmovbe
popa
xchg
mov
sub
leave
movb
mov
outsl
or
cwtl
outsb
inc
sbb
movq
sbb
ds
lock
hlt
pop
push
cmp
cmpsb
push
sbb
jo
mov
and
jns
xchg
or
bndstx
xlat
aas
pop
dec
addr16
lods
bound
mov
jno
xchg
test
in
dec
pop
push
nop
sub
loop
cmpsl
js
and
add
int
in
cmc
out
mov
mov
pushl
mov
add
mov
sbb
xchg
adc
mov
dec
repz
cli
std
shll
fnsave
out
mov
jp
xor
call
dec
popf
xchg
pop
ljmp
push
fnsave
mov
das
ja
lret
insb
push
mov
add
or
xor
mov
into
popf
jge
insl
xchg
or
pop
aaa
mov
add
popa
add
push
jg
jge
jg
movsb
xor
fimuls
and
pushf
in
lret
cmc
mov
ss
mov
addb
imul
fsubs
loop
pop
dec
xor
mov
mov
dec
inc
imul
xlat
push
or
and
xchg
loopne
pop
ja
js
in
sub
push
dec
xorl
push
push
fadds
scas
rorb
xlat
dec
push
xchg
idiv
pop
mov
subl
pop
or
test
lcall
ss
out
adc
je
sub
push
jecxz
fucomp
out
addb
adc
inc
inc
dec
mov
imul
and
sub
lea
mov
sti
cmc
lahf
fldenv
mov
push
lcall
add
mov
jle
data16
pushf
mov
jno
mov
xor
testb
cwtl
fdecstp
sahf
clc
mov
mov
xchg
xor
sub
lods
dec
xor
sbb
popl
inc
js
arpl
mov
fidivl
dec
jb
repz
rcr
mov
jnp
leave
out
inc
and
test
mov
xor
push
aam
popa
mov
adc
cmp
aaa
inc
xor
cli
jmp
sbb
cmp
ljmp
scas
out
pushf
ret
sbb
loop
addr16
push
out
inc
ljmp
jne
das
push
xchg
es
push
lds
mov
or
push
call
cld
fmull
push
lret
fistpl
mov
nop
jb
pop
xor
call
sbb
push
mov
inc
fdivrs
subb
inc
adc
incb
cmp
outsb
data16
rorl
popf
fdivrl
push
out
dec
in
xchg
push
mov
adc
push
push
sbb
jne
std
mov
push
adc
inc
or
push
and
lods
out
iret
call
xor
jnp
jmp
mov
mov
lret
and
mov
cs
iret
into
ja
dec
icebp
push
sbb
push
mull
jp
push
pop
push
iret
pusha
enter
popa
inc
jp
mov
mov
mov
mov
sarl
lahf
lods
adc
and
movsb
shll
push
dec
xor
iret
jge
ja
mov
out
rorb
pop
in
out
ds
sub
in
mov
xor
test
mov
movsb
test
xchg
mov
push
addr16
in
out
sub
mov
add
frstor
sbb
stos
cwtl
mov
mov
adc
jnp
mov
or
insb
fcoms
hlt
mov
decb
shll
mov
cltd
in
xchg
xlat
movsl
sbb
lahf
cmp
mov
dec
cld
jo
dec
mov
rcrl
xor
cmp
adc
jb
sbb
movsb
scas
sarb
cmpsl
aas
jbe
aaa
rcll
sbb
clc
jae
shll
mov
jle,pn
aaa
mov
mul
pop
rorl
enter
cld
xor
daa
jo
ljmp
into
xchg
push
popf
inc
push
jnp
cmp
mov
pop
lret
or
ss
repnz
sbb
popf
jmp
lea
clc
in
xchg
les
ljmp
dec
add
test
mov
ljmp
add
xor
cltd
shll
add
mov
sbb
jp
dec
std
iret
and
adc
scas
xchg
or
popf
jmp
add
shll
mov
movsb
xor
sub
leave
sub
or
jecxz
mov
mov
jl
dec
rorb
add
or
idivb
hlt
ja
dec
and
push
xchg
cmp
inc
adc
insb
sub
into
pusha
ja
adc
js
cwtl
int3
sti
mull
and
ds
adc
loopne
fstp
inc
clc
sub
popf
dec
jnp
test
and
sub
inc
xor
dec
ret
sbb
stos
inc
dec
xorb
imul
repz
sub
in
or
xlat
incl
popf
mov
dec
cli
push
sbb
pop
cwtl
aad
sub
loope
cmp
cmp
inc
loop
pusha
inc
sti
xor
inc
into
xor
daa
adc
cs
adc
mov
not
pushf
mov
dec
inc
cmp
outsl
testl
jne
movsb
add
sub
cmpsb
aam
dec
add
and
stos
inc
in
loopne
jno
aas
out
sbb
and
daa
mov
xchg
into
pop
nop
std
pop
jbe
stos
pop
mov
xor
bound
mov
inc
andl
inc
push
xor
lahf
test
xor
sub
mov
jns
rcr
mov
or
xlat
pop
loopne
dec
sbb
mov
pop
mov
test
or
in
movsl
sbb
aaa
test
or
mov
dec
lds
lods
addb
sub
pop
repnz
pop
mov
inc
cld
pop
push
inc
dec
adc
dec
lea
xchg
fimuls
cltd
xchg
or
std
loop
loope
inc
lods
pushf
pop
sub
and
aam
jnp
add
gs
and
out
enter
insl
lret
cld
dec
dec
mov
xchg
dec
add
fstl
idivb
dec
dec
xchg
gs
adc
push
xchg
mov
std
jo
xchg
mov
jb
cltd
test
call
lea
pop
mov
les
and
addr16
xchg
outsl
xor
sub
int3
pushf
jmp
gs
bound
dec
inc
test
mov
xchg
dec
repnz
lcall
xor
dec
fisttps
xor
push
xchg
notb
mov
sbb
jns
testl
mov
xchg
and
inc
mov
fcmovnbe
jecxz
push
test
xchg
jnp
dec
push
ljmp
ror
in
jecxz
sbb
faddl
lcall
jge
pusha
sbb
pop
repnz
mov
div
lods
jl
add
jmp
mov
xchg
cltd
test
aaa
push
pop
and
popa
mov
fiadds
test
cs
rclb
pushf
fistpl
xchg
and
nop
cld
into
repnz
xor
stos
cwtl
pop
enter
add
sub
shrb
pushf
xchg
xchg
cmpsl
push
pusha
cmp
push
lret
mov
inc
pop
imul
dec
mov
or
xlat
test
ds
sbb
pop
mov
lds
int3
stc
xor
pop
scas
mov
pop
cmp
fwait
out
push
add
nop
push
ret
shrl
imull
lcall
push
or
mov
out
jnp
adc
call
mov
imul
cld
jae
loopne
dec
cmc
js
mov
xchg
sbb
mov
lret
push
loopne
push
ret
loopne
inc
ljmp
dec
cmp
sub
sti
imul
dec
jl
dec
repz
push
cltd
sub
xchg
push
or
lods
rol
dec
into
cld
dec
adc
sbb
cmp
rcrl
jmp
mov
add
adc
jne
xor
orl
xor
lahf
mov
jge
sbb
fs
out
orb
pop
mov
sti
xlat
pop
push
add
push
push
dec
mov
xchg
ja
imul
loop
test
dec
mov
cmp
into
mov
xlat
xchg
sbb
divb
xor
mov
out
in
sub
in
ret
and
icebp
negl
xchg
xchg
test
data16
loop
mov
out
inc
cmp
cli
mov
lcall
lods
mov
push
push
cmp
push
jne
shll
push
add
out
ja
inc
mov
leave
push
idiv
xchg
and
cmp
mov
in
mov
cmpsb
add
or
jle
loopne
pop
cmp
arpl
fwait
nop
lds
cmp
ljmp
adc
cwtl
xchg
iret
fwait
pop
mov
rcrb
fcmovnu
test
pop
inc
out
inc
dec
add
jl
aam
dec
xchg
mov
sub
cs
mov
or
jns
inc
in
or
enter
dec
cld
loope
pop
mov
lds
mov
pop
js
rolb
or
nop
jg
addr16
dec
xchg
xor
pop
sarl
jo
cltd
loopne
int
nop
mov
mul
loop
test
shll
inc
xlat
int
cmp
mov
hlt
mov
out
jp
imul
cmp
or
leave
lods
xchg
push
ficoms
fucomip
xor
ss
push
icebp
int3
dec
xchg
mov
cmc
pop
push
xchg
sub
cwtl
mov
push
addb
or
imul
stos
ret
cli
mov
adc
xor
repz
jae
add
or
iret
cld
insl
mov
pop
lods
rcll
push
fldcw
xor
aaa
cmpsl
add
xchg
cmp
mov
push
or
xchg
pop
inc
cmp
add
int3
sbbb
out
repz
cmpsb
aaa
lret
mov
mov
scas
xor
inc
inc
popa
sbb
nop
outsl
cmc
cmp
pusha
mov
pop
ja
inc
push
ret
mov
lret
mov
je
cmp
int
jp
je
rolb
lock
pop
pop
sbbl
inc
jae
jmp
xchg
xor
push
je
pushf
ds
movsb
mov
out
cli
push
shll
xor
dec
xchg
add
push
or
sahf
dec
dec
daa
arpl
icebp
xor
adc
lret
das
clc
push
nop
pop
iret
rcrl
in
and
adc
pop
psraw
pop
add
clc
add
jecxz
fwait
add
hlt
jle
jmp
loopew
dec
or
mov
jl
add
and
ret
add
mov
adc
cmp
sbb
xchg
sbb
les
std
cwtl
mov
inc
inc
jmp
pop
das
in
inc
sub
push
mov
sahf
jecxz
fdivl
jecxz
jecxz
mov
adc
popf
lret
lock
js
les
gs
sti
push
test
sub
repz
adc
dec
mov
pop
mov
aad
jmp
addl
fcomi
add
es
cld
shr
fildll
push
mov
repnz
int3
imul
in
aad
xor
fiadds
sub
out
mov
or
rcr
add
mov
and
mov
dec
test
xchg
clc
jae
mov
add
movsl
jae
cmp
shll
mov
mov
mov
fxch
js
adc
imul
shll
sub
test
fstl
push
pop
stos
jge
pop
jbe
fwait
movsb
in
je
dec
in
mov
inc
mov
ja
inc
push
notl
sbb
cmp
es
sbb
sbb
xchg
ret
add
mov
sub
in
adc
stos
int
pop
and
or
xor
int3
enter
into
push
rclb
addr16
push
pop
and
xchg
shll
pop
mov
cmp
xor
dec
cwtl
mov
or
and
out
enter
ds
test
adc
enter
lock
sbbb
pmaxub
xchg
jecxz
lret
fs
cmp
or
or
mov
ljmp
loopne
iret
push
cmp
imul
cmp
ss
and
cmp
fstpl
adc
xchg
sub
insl
dec
inc
clc
repz
ljmp
fcompl
data16
push
mov
or
idivb
insb
lea
aad
cmp
sbbl
push
or
mov
lods
push
mov
faddl
sbbb
scas
cs
mov
cmp
int3
popf
shll
subb
jecxz
ret
and
test
call
dec
movsl
leave
pop
ficoms
scas
fcoml
mov
inc
cltd
cmp
lds
notl
adc
sahf
mov
shrb
pop
xchg
and
add
jo
jmp
dec
leave
lret
sub
cmp
dec
push
jl
and
clc
adc
arpl
mov
fwait
jnp
mov
outsl
in
push
rcll
push
andl
pop
idivb
dec
pop
andl
arpl
bound
inc
das
lods
icebp
push
mov
or
xor
fidivrl
mov
cmp
adc
sub
mov
mov
clc
ljmp
cmp
repz
jne
out
mov
pop
hlt
lock
mov
iret
dec
and
xchg
cli
arpl
push
pop
jnp
cmp
outsl
mov
xchg
sarl
sbbb
fsubrs
movsl
lcall
jns
dec
out
arpl
pop
pop
push
repz
in
stc
aas
rcll
cmp
inc
sbb
pop
mov
pushf
arpl
mov
xor
mov
aas
stos
lods
test
sti
cld
pop
push
data16
aad
push
pop
mov
mov
in
ds
sub
and
call
call
jecxz
cs
xor
mov
movzbl
in
clc
mov
ss
mov
je
jnp
sub
xchg
pushl
in
or
mov
aaa
inc
es
int3
test
lock
out
les
dec
mov
jecxz
adc
jb
enter
cmp
or
in
loope
jno
xchg
jecxz
dec
leave
pusha
out
jo,pn
lea
mov
bound
mov
scas
test
out
mov
test
je
add
xchg
push
call
inc
mov
daa
or
mov
mov
push
xor
inc
out
sbb
ret
addr16
je
movb
insb
inc
cmc
popa
nop
jbe
sbb
shl
daa
mov
lahf
fwait
sahf
ficoms
cmp
hlt
cmc
mov
ljmp
pop
cmp
mov
or
incl
in
mov
ret
scas
or
pop
outsb
xchg
cmp
fxch
pop
mov
mov
lahf
fistps
sti
xchg
sbb
shll
test
sbb
ljmp
sysexit
test
pop
daa
addr16
jns
testl
and
fwait
xor
push
or
jb
push
mov
js
lahf
push
xchg
push
xchg
call
rcrb
jb
inc
pushf
jb
mov
icebp
popf
mov
xchg
xchg
xor
repnz
je
mov
inc
push
mov
scas
int3
repz
mov
mov
je
lret
stc
pop
movsb
mov
ja
loope
and
dec
or
cli
adc
popa
and
sub
push
movsl
pop
or
icebp
add
cltd
inc
inc
rcrb
pop
cmpb
rclb
lcall
rcrb
clc
cld
dec
or
cmp
int
sub
subl
shll
pextrw
insb
arpl
and
adc
sbb
sbbl
push
pop
jmp
sub
lcall
js
lods
adc
pop
adc
out
shlb
cmp
and
jp
add
or
outsb
pop
xchg
jl
in
hlt
dec
stos
imul
jle
aas
add
repnz
mov
sbb
inc
insl
jne
xchg
xor
adc
inc
mov
mov
dec
sub
jge
push
sub
pop
loop
out
cmp
add
je
les
mov
inc
insb
jbe
fwait
mov
mov
sti
xlat
mov
test
push
cmp
xchg
js
test
movsl
sub
stos
faddl
mov
clc
pop
jnp
push
dec
or
sahf
movsl
and
xchg
testl
pop
and
inc
lds
push
xor
jne
pop
dec
lret
xor
rolb
lret
push
push
xchg
mov
or
or
add
enter
pshufw
pop
pop
fistps
and
lret
dec
mov
jne
cltd
cwtl
scas
sbb
jle
xor
into
xchg
in
dec
shrl
cmp
fs
or
mov
test
pop
int
sbb
cltd
add
and
cmp
test
ja
imull
pop
jp
leave
dec
jle
js
leave
outsl
xchg
pop
imul
xchg
mov
call
leave
xchg
and
jl
sbb
adc
lret
push
add
jbe
or
xchg
cld
aam
or
inc
lods
inc
jno
testb
mov
adc
loop
or
pop
out
popa
lret
test
jae
inc
mov
dec
mov
cmpb
hlt
mov
pop
jo
rsm
add
and
inc
pop
lret
and
cmp
lahf
inc
lock
movsb
stc
mov
fildl
dec
test
lret
cmpl
cmp
jo
adc
jle
fwait
cltd
xor
pop
das
adc
inc
or
lcall
push
push
push
mov
js
mov
and
push
mov
cmpsb
call
mov
jg
sbb
inc
cmpl
stos
sbb
sub
sub
fxch
jle
sub
mov
inc
dec
int3
in
arpl
lock
sbbb
sub
and
adc
sub
jecxz
out
test
frstor
mulb
inc
pop
div
ja
and
cmp
loope
je
test
aaa
pop
movsb
rorl
push
sbb
sbb
mov
or
cmp
mov
xchg
cmpsl
int
lods
fistpl
div
leave
push
rorb
lcall
and
dec
aaa
xor
out
clc
add
shll
pop
in
xchg
jns
cmp
sub
pop
loopne
mov
sbb
ds
loopne
div
or
jae
sbb
pop
addr16
cmpsl
mov
push
pop
mov
jb
pop
into
xchg
xor
mov
pop
mov
ret
imul
movsb
cmc
fxch
adc
add
mov
or
test
fs
pushf
mov
movsb
adc
jo
jecxz
mov
into
repnz
cs
psraw
or
xchg
adc
notl
fldenv
daa
or
cmp
ljmp
xchg
aaa
imull
outsb
cmpl
mov
repz
pop
jp
aas
cmp
jbe
shrl
xor
jmp
mov
jbe
fs
sti
cltd
les
call
mov
mov
stos
jns
or
mov
pop
es
xor
bound
sarl
push
in
out
hlt
es
subb
loopne
lds
ljmp
data16
jmp
cmp
ss
test
cmpsb
dec
cmp
sar
and
mov
popa
or
mov
outsl
fwait
push
mov
call
mov
cmp
push
int3
cwtl
sbb
cmp
bswap
outsb
push
pop
pop
gs
test
lods
pusha
or
lock
fadds
sarl
out
test
push
ficompl
add
mov
push
xor
je
sbb
cmpsl
bound
addr16
js
xor
push
jmp
cld
hlt
jg
sub
xchg
shrl
mov
or
std
pop
scas
mov
notb
add
sbb
leave
jne
sarb
in
loopne
fdivp
sub
daa
mov
xchg
jle
arpl
sub
and
aam
add
inc
cwtl
fstpt
add
ja
cmp
mov
adc
mov
jl
aad
shl
mov
mov
inc
inc
pusha
int3
insl
mov
out
repnz
movsl
xor
adc
fcom
pusha
iret
loop
jae,pn
loopne
cmp
sub
push
pop
or
cli
loope
jecxz
test
add
imul
mov
xor
shl
je
sbb
jmp
hlt
ficoms
imul
mov
or
xlat
add
mov
dec
lahf
cmp
out
xchg
cmp
adc
enter
jmp
xchg
or
mov
fnsave
xor
add
dec
jp
jns
jnp
int3
or
orb
adc
jge
sbb
push
or
inc
mov
cmp
call
sbbb
cmp
and
dec
add
pop
aam
jae
add
iret
push
in
adc
pop
aaa
js
push
cmpsl
out
xor
mov
repz
gs
inc
mov
pop
push
xchg
adc
mov
aam
push
aad
pop
xchg
pop
rdmsr
loope
add
lea
mov
mov
iret
cmp
bextr
clc
inc
ficompl
cmc
insb
sbb
pop
test
repnz
lods
das
push
arpl
sub
pusha
inc
into
xor
std
mov
adc
les
jns
ret
insb
mov
stos
xchg
xor
lods
sbb
ja
jb
enter
insb
jne
pop
filds
inc
fyl2xp1
dec
sub
call
inc
mov
sub
pop
loopne
jg
loopne
mov
jecxz
sti
adc
sahf
sub
push
and
cmp
jae
adc
mov
lahf
inc
push
mov
push
lret
repnz
lock
into
mov
loope
in
fisubrl
loope
xor
lds
fistpll
fbstp
loope
pop
push
push
xchg
sbb
and
dec
xor
pop
cmp
xlat
inc
jp
dec
pop
sub
ss
push
xchg
xor
lahf
popfw
and
aas
bndstx
popf
repz
in
test
adc
cmpsl
mov
sub
addb
imul
sbb
arpl
mov
mov
cld
xor
adc
daa
inc
jge
fadds
push
arpl
jno
in
loope
xor
popa
add
mov
iret
adc
push
call
push
call
movsb
xlat
int3
dec
push
imul
add
daa
pop
insb
sub
ret
std
inc
add
out
ja
cmc
xchg
fldcw
pop
mov
movsl
inc
daa
pop
push
fwait
jl,pn
out
jns
mov
jbe
xorb
arpl
std
inc
nop
xchg
enter
icebp
in
fwait
das
sarb
mov
lods
xchg
out
xor
popf
cltd
and
inc
stos
lea
aad
xor
fdivrp
addr16
enter
insl
inc
mov
push
pusha
sbb
out
push
xchg
fisubs
pop
gs
mov
ss
jle
mov
jg
imul
cmp
mov
repnz
mov
sbb
inc
out
cli
andl
xor
and
cmp
lods
pop
jp
repz
pop
hlt
pop
leave
add
xchg
test
pop
push
xor
aaa
out
daa
dec
out
and
int3
xchg
fwait
movsb
xor
mov
mov
loope
mulb
cmp
xchg
fidivrl
imul
push
mov
or
int
mov
jg
xor
push
icebp
xchg
xchg
mov
aas
pop
out
ficompl
mov
stc
daa
popf
stos
inc
add
pusha
bound
xor
or
stc
ret
inc
js
mov
loop
mov
fdivrs
sub
mov
adc
jae
or
adc
shl
cmpsl
btr
out
mov
or
inc
push
jp
into
loop
sub
xchg
mov
nop
sbb
test
aas
ja
xlat
sbb
enter
mov
sbb
ror
sbb
xchg
push
sub
adc
outsb
scas
sub
pop
dec
test
mov
adc
lods
adc
repz
add
push
mov
jbe
lahf
cmpsb
cmp
jb
cmp
or
les
mov
mov
int
sti
out
mov
dec
cmpsb
cltd
jge
mov
pop
dec
adc
popf
mov
filds
and
and
rcrl
push
jl
mov
or
sahf
ljmp
outsl
dec
sbb
push
pop
adc
adc
incb
adc
cltd
pop
cmp
xor
dec
mov
cmp
repnz
stos
xchg
in
mov
ds
and
xchg
pop
pop
call
dec
inc
jne
arpl
or
or
cmc
scas
adc
mov
data16
mov
add
pop
mov
cmp
pop
xchg
popa
icebp
mov
xor
mov
rcrb
sub
out
or
inc
insb
imul
push
out
test
or
je
inc
push
push
inc
cmp
push
cmp
sahf
jnp
xchg
adc
mov
mov
std
cwtl
mov
lret
adc
loope
push
icebp
jecxz
lea
out
sahf
add
jmp
push
cs
dec
jnp
push
int3
movsb
mov
loopne
or
xchg
in
add
xchg
add
push
and
jmp
push
test
into
test
das
adc
pop
bound
xrelease
pusha
jbe
pushl
push
ss
ja
cli
push
lea
jmp
mov
jge
cmp
fs
sub
rcl
xor
sbb
jb
jo
imul
bnd
inc
and
ljmp
mov
data16
jns
fwait
pop
out
jno
sti
jnp
or
shll
ficoms
dec
cmpsl
shrl
imul
test
xchg
lods
and
add
inc
mov
test
out
and
xchg
pop
imul
add
sub
nop
imul
inc
shlb
sub
xorb
out
je
lds
data16
mov
pop
jge
cmp
pop
pusha
xor
std
adc
or
dec
idivb
shll
jae
arpl
or
setg
pop
out
mov
inc
aas
push
andb
mov
xchg
push
add
decl
out
std
mov
add
outsb
js
iret
and
inc
iret
mov
dec
test
inc
or
call
pop
mov
repz
mov
cmpsb
ss
mov
add
scas
in
test
sbb
mov
mov
cmpsb
cmp
iret
or
mov
or
pop
mov
aam
xchg
sbbl
adc
into
xchg
loopne
in
pop
insl
adc
mov
xor
cmp
data16
xor
aad
mov
add
xor
or
or
lahf
and
outsl
cmp
fnstenv
cs
dec
fidivrl
out
not
dec
loope
and
loope
ret
cwtl
stc
insb
in
ret
mov
mov
xor
test
or
movsl
lret
mov
jl
xchg
mov
cmpsl
cmp
pusha
je
das
subl
scas
fcomp
mov
add
fists
cmp
mov
sbb
les
loope
xchg
mov
mov
cli
push
cmp
cmpsb
xor
lods
icebp
cli
loope
adc
out
pusha
enter
jno
shrl
ret
jns
dec
cld
ret
ror
ja
inc
add
fldl
mov
faddl
out
mov
pop
jle
imul
sbb
sub
pop
clc
je
fnstenv
push
inc
lock
fistps
inc
jae
add
jge
je
mov
jnp
push
fiadds
sahf
nop
push
rclb
nop
adcl
cld
push
jns
and
xor
inc
xchg
repnz
xchg
cmp
cwtl
cmpsl
cmpsl
adc
push
xchg
lret
stc
imul
jb
xchg
dec
mov
idivb
xchg
add
inc
jb
pop
out
adc
ret
fstpt
pushf
fnstcw
aam
jno
dec
repz
push
inc
xor
out
addl
cwtl
push
push
test
rolb
or
mov
mov
paddd
cwtl
data16
cmp
mov
int
push
and
mov
addl
cmpl
inc
mov
sub
in
rcl
pop
loope
xor
out
cmp
sbb
and
into
or
mov
or
jb
rcrl
sbb
ficoml
dec
lods
dec
push
xchg
test
lods
jl
mov
js
imul
out
adc
mov
stos
cltd
lea
stos
pop
stos
data16
jecxz
lea
cld
or
and
xlat
mov
push
jns
xor
mov
push
rorb
add
mov
mov
jl
and
gs
dec
mov
imull
mov
addr16
jl
push
lea
dec
cmp
fdivrp
inc
movsl
jns
sahf
jge
int
inc
out
and
clc
movsl
pop
enter
addb
or
lcall
add
in
add
sahf
movsb
and
jmp
test
popa
jo
mov
mov
xchg
or
mov
loopne
es
sub
out
cmp
fimuls
lods
push
pop
inc
xchg
ret
and
addr16
pop
push
add
pop
movsl
sub
jne
cmp
xor
imul
hlt
ljmp
sub
bound
lods
adc
cmp
inc
mov
adc
inc
mov
insl
xchg
or
and
jmp
in
xchg
add
scas
pop
hlt
pop
inc
outsb
mov
mov
loop
pop
fiadds
repz
dec
aaa
or
sub
popa
adc
xor
out
and
mov
pusha
or
sarb
cmp
mov
xor
stos
lahf
cmp
rol
arpl
xor
dec
outsb
insl
or
pop
sbb
xchg
xchg
insb
insl
jl
bound
int
loope
and
push
ss
adc
fimull
dec
sbb
sub
xchg
rolb
mov
sub
js
into
xor
dec
notb
js
loopne
ret
mov
xor
push
das
sbb
sarl
or
int3
sub
adc
jecxz
mov
pop
addb
or
leave
sub
pop
cmp
fwait
adc
mov
aam
out
sub
jecxz
push
add
inc
mov
enter
cli
and
dec
aad
push
lcall
push
fs
cmp
loop
or
jns
adc
mov
fwait
adc
pop
ret
inc
mov
mov
ret
mov
jo
ja
mov
leave
pushf
mov
scas
setae
out
inc
xor
aam
xchg
lret
iret
fbstp
lock
lods
incb
jecxz
shll
fcomps
cld
not
cmp
dec
dec
push
fsubrl
mov
sbb
push
jmp
mov
scas
xchg
neg
push
sbbb
sub
int
mov
cmp
jmp
or
sub
les
inc
xlat
adc
lcall
lea
mov
mov
roll
js
cld
inc
xchg
pop
lods
mov
jae
gs
rolb
pop
push
inc
dec
jbe
loop
dec
push
lret
in
sbb
repnz
movsl
xor
fs
subl
cmpsl
ret
les
jbe
scas
push
lret
pop
pop
jb
mov
stc
iret
cmc
ss
add
xchg
mov
dec
in
xchg
ljmp
jecxz
pop
inc
push
adc
mov
mov
dec
pop
mov
sti
enter
pop
add
and
mov
adc
dec
add
sarl
pcmpgtd
fnsave
push
or
cmp
adc
arpl
pop
xor
test
sub
adc
or
mov
sbb
jb
nop
push
int3
out
fdiv
push
clc
loopne
call
dec
lods
cmp
out
dec
pop
testl
fwait
bound
mov
add
xchg
and
fs
lret
xacquire
or
out
test
adc
push
cmpsl
shrb
fs
xchg
adc
loopne
push
pop
js
push
stos
or
mov
shrb
lret
push
sbb
pop
mov
pop
push
clc
ja
jecxz
push
cli
sbb
enter
pop
insl
adc
mov
lret
subb
mov
mov
lock
inc
push
jecxz
jge
pop
cmp
addr16
in
jmp
mov
leave
adc
add
aad
fidivl
jne
daa
mov
and
sti
into
scas
and
mov
pop
stos
xchg
repnz
xchg
jg
lea
test
mov
sti
xchg
pop
insb
repnz
push
mov
inc
and
jle
inc
mov
fsubr
test
rcll
or
jns,pn
inc
sbb
and
push
sbb
fadds
xchg
xor
fbld
int
adc
paddw
in
inc
ja
adc
inc
sbb
mov
movsl
test
lock
jecxz
addr16
pop
mov
or
fsubrp
repz
jns
lahf
jl
sti
sbb
fists
ret
ljmp
lcall
enter
lods
lods
or
xchg
in
sub
mov
bound
push
lods
lret
xor
frstor
ret
lret
ret
mov
test
or
inc
sbb
aam
fwait
repnz
mov
imul
dec
insb
insb
sub
sti
jo
inc
jge
aam
andl
mov
ss
sub
mov
inc
jae
popa
jle
jo
ret
or
dec
sbb
dec
shr
dec
jp
or
and
fidivl
int
cltd
ret
mov
stos
stos
inc
hlt
xor
push
out
out
enter
lock
aad
cmpsb
and
into
and
sbb
decb
mov
add
outsl
stc
subb
das
xchg
jae
mov
jnp
stos
pushf
nop
ja
jno
push
pop
out
in
idivl
ja
mov
cmpsb
scas
xchg
loope
xor
daa
mov
pop
hlt
icebp
jle
or
aad
cli
scas
fadd
leave
pop
insl
pop
sbb
dec
push
lods
add
stos
jae
and
pop
in
mov
dec
inc
lock
inc
or
dec
pop
dec
cmpsl
sub
decb
mov
and
mov
cli
mov
or
push
jp
push
cltd
mov
fldt
cmpsb
mov
ficoms
jg
in
jl
add
adc
int
pop
dec
mov
xchg
jecxz
mov
sbb
lea
cmpl
lods
leave
into
cmpsl
pop
xchg
xor
fsubl
sbb
push
mov
jmp
ljmp
mov
idivb
fsubrp
xchg
addr16
push
ds
push
inc
data16
mov
mov
jbe
and
adc
sbb
sbbl
xchg
add
sahf
sbb
in
sbb
inc
in
jmp
or
lods
aam
push
rcrl
into
mov
cs
lea
sbb
mov
push
or
mov
ret
outsl
out
mov
jl
xorl
cwtl
jle
sbbb
lea
pushf
mov
or
xchg
cmc
loop
fwait
add
test
mov
incb
cld
jecxz
stc
pop
in
inc
movsb
out
fiaddl
or
scas
bound
fimuls
scas
jbe
daa
stos
sub
aaa
sub
outsb
insl
mov
loop
sub
stos
nop
push
or
pop
push
ficomps
and
jge
xor
lret
into
push
sub
mov
arpl
jge
in
div
ret
fidivl
aad
iret
fadd
ret
and
fs
xor
pop
push
pop
movsb
pop
jae
lock
sbb
pop
jle
int
cs
sub
xchg
push
pop
adc
fimull
jp
mov
push
mov
mov
cmp
mov
jnp
pop
in
add
out
ljmp
cmc
int
ficoml
scas
out
sti
pop
dec
jg
inc
pop
cmpb
mov
icebp
lods
lahf
ja
adc
jl
mov
inc
in
inc
or
outsb
xor
mov
push
dec
xchg
clc
lret
jnp
dec
in
sub
push
add
fsubl
sti
jmp
sub
imul
iret
xchg
cltd
frstor
int3
push
dec
xor
pop
add
cmp
pop
jle
pop
mov
push
dec
cmp
lcall
lds
cs
mov
cmp
inc
in
dec
mov
and
rolb
movsl
mov
je
es
aad
and
imul
sub
push
cmp
push
sti
and
xchg
sbb
divl
push
orl
push
sub
cmp
mov
jp
adc
and
jns
sbb
xchg
mov
sahf
add
xlat
adc
pop
pop
jne
jl
repnz
bnd
subb
and
negl
add
loop
sub
fistpl
mov
and
fcmovnb
bound
xchg
test
cmpsb
leave
inc
ds
negl
adc
push
mov
jg
cmp
mov
add
pop
sbb
adc
pop
xchg
jmp
lcall
fcmove
insl
mov
lock
out
adc
shll
push
mov
icebp
jl
insb
jg
inc
pop
mov
into
inc
inc
xlat
push
push
inc
mov
std
jecxz
fidivl
mov
pop
push
adc
into
into
jle
jnp
lds
push
jbe
aas
arpl
add
mov
push
fs
push
nop
fnsave
push
scas
mov
bound
mov
neg
jb
scas
scas
push
add
cmp
add
cmp
cs
pop
and
popf
push
test
out
lea
mov
std
je
or
ljmp
mov
mov
or
test
mov
ljmp
cltd
xor
call
cmpsb
push
imul
orb
or
into
das
mov
sbb
imul
icebp
jge
gs
xor
cmpsb
pop
fmul
xchg
bound
mov
sub
sub
and
dec
and
aas
popf
pop
push
clc
cmp
xchg
adc
xchg
fldt
push
test
cmpl
push
jmp
xchg
popf
push
cmp
add
fnstcw
jb
in
clc
adc
xlat
sub
pop
add
inc
sti
cmp
roll
pop
sbb
popf
call
xor
movsb
enter
mov
add
jne
sbb
js
mov
sarb
sub
xor
adc
jns
je
pop
mov
or
pop
imul
test
and
pop
mov
xchg
bound
jmp
test
daa
xchg
mov
cmp
fninit
loopne
fisttpl
lahf
sahf
daa
imul
rcrb
ret
sbb
or
dec
add
sub
inc
push
mov
xchg
or
push
and
sub
bound
aam
pop
int
imul
add
ficompl
jp
cmp
push
fucomp
dec
mov
mov
out
icebp
cli
movsl
lcall
add
shrb
inc
clc
in
popf
repz
icebp
cmp
cltd
mov
add
data16
xor
lret
in
lret
xchg
adc
adc
sbb
repnz
pop
scas
mov
lret
sbb
in
gs
mov
out
and
pusha
mov
xchg
push
sahf
mov
aam
les
ss
aad
mov
lret
pusha
pusha
fdivrl
iret
lock
mov
movsl
sarl
out
js
xor
fdiv
xor
cmp
xchg
mov
sbb
sarl
mov
inc
xchg
in
jp
movsb
nop
sbb
jp
cld
mov
xor
mov
lahf
nop
sbb
roll
daa
js
inc
inc
call
mov
xchg
je
cwtl
xor
jl
stos
ljmp
pminsw
lcall
roll
arpl
out
out
aaa
pop
arpl
add
sub
bound
mov
pop
sbb
cmpsl
xchg
push
sti
mov
jmp
in
pop
dec
xchg
fcoms
cmovl
pop
lcall
xor
jecxz
cmpsl
add
lods
pop
mov
sbb
or
xorl
int3
cmpsl
jb
shl
cmp
jmp
pusha
push
jp
mov
jb
nop
fmuls
mov
popa
add
xor
xchg
ds
pop
sbb
imul
bnd
dec
nop
mov
cmp
lds
into
imul
ret
loope
ljmp
aad
push
lock
cmp
ret
insl
in
je
cmp
sbb
int3
mov
inc
lods
lods
ss
stos
out
mov
iret
fcmovb
add
lods
rcrl
inc
ret
or
lret
scas
lods
jns
daa
cmpsl
lea
aas
test
ljmp
ret
xchg
add
sub
in
pop
pop
push
mov
in
lods
pop
xor
adc
sbb
lods
fsubl
inc
test
push
ret
mov
rcrl
sti
lret
in
mov
push
fwait
or
or
ss
outsb
lock
dec
cmp
pushf
stc
push
rcrb
add
ss
push
sahf
jmp
ret
fistpl
shll
jns
insl
mov
pop
xor
mov
inc
or
movsb
dec
fiaddl
ret
adc
cmpsb
inc
jnp
popa
lcall
push
or
dec
cmp
add
mov
or
inc
lret
pop
push
mov
sbb
sarl
sub
sbb
jg
cld
cwtl
xchg
add
inc
dec
mov
pop
roll
push
mov
cmp
push
cmp
imul
inc
push
lock
call
ja
cmc
mov
lds
js
pusha
imul
push
inc
push
xchg
mov
add
mov
push
fs
lods
pop
xor
cmp
sbb
into
cmp
test
into
or
jno
mov
inc
add
sub
push
mov
xchg
jecxz
psrld
pop
add
cmp
andb
jge
mov
data16
push
mov
add
fcoml
push
pop
add
mov
sub
in
cmpsl
mov
roll
fstl
fwait
or
aas
lea
or
mov
dec
push
or
mov
je
es
mov
fmuls
add
daa
mov
icebp
fnstcw
mov
jecxz
insb
outsl
xor
js
ds
out
and
fisubrl
dec
lret
pop
mov
and
dec
ljmp
pop
adcb
sarb
push
mov
rcll
stos
ret
xor
lds
pop
inc
xchg
fcompl
adc
clc
pop
push
pop
xor
loop
jnp
jp
inc
sbb
adc
jge
shll
mov
add
inc
sub
repnz
ljmp
inc
or
imul
mov
mov
jns
mov
mov
and
cmp
cmp
add
idiv
idivb
pop
mov
cmp
adc
adc
pop
mov
add
cmp
pop
je
bound
sbb
lret
adc
push
mov
ljmp
sti
adc
sub
mov
jmp
add
pusha
mov
add
loopne
jmp
push
mov
outsb
inc
add
bound
mov
shlb
fs
lds
lock
pop
cmpsb
jno
insb
sbb
lds
gs
fs
sbb
pop
push
mov
add
in
sub
push
pop
fisubrl
std
pop
pushf
push
mov
xchg
inc
enter
cli
lahf
add
add
ret
ljmp
jecxz
mov
add
nop
jp
popa
fnstenv
fwait
or
xchg
lcall
adc
xchg
jns
cmpsb
jle
jg
inc
rolb
sbb
or
shl
add
dec
into
mov
jl
push
fisttpl
call
fidivl
mov
je
call
dec
xchg
lcall
lcall
andl
in
push
ret
int3
data16
out
add
add
or
fwait
enter
outsl
mov
or
xor
fsts
pushf
test
call
lods
jp
xchg
mov
pusha
mov
es
mov
test
adc
pop
inc
mov
mov
sbbl
dec
les
loop
inc
dec
fnstcw
xor
mov
push
cmpsb
add
out
mov
gs
inc
mov
lcall
js
jecxz
cmp
dec
mov
sbb
orl
pop
negb
mov
xchg
dec
stc
ret
inc
nop
push
push
push
cmpb
lcall
push
adc
sbb
lds
cmp
mov
addr16
mov
mov
std
fwait
mov
dec
dec
pop
cwtl
movl
pop
sub
or
out
add
cmpsl
pop
sbb
ret
pop
adc
pop
cwtl
aaa
shll
shrl
cmp
dec
in
lea
mov
mov
xor
ljmp
fs
lods
xchg
gs
and
icebp
xchg
mov
push
cs
jg
xor
jo
enter
insl
sbb
lcall
xor
call
shl
mov
pop
or
pcmpeqd
inc
and
jne
testb
lods
cmpsb
cli
loop
test
dec
or
jb
jo
cli
mov
mov
ficoml
imul
push
cmpl
shrl
hlt
sbb
scas
inc
inc
sub
cmp
dec
fucomp
daa
xchg
dec
pop
jno
jbe
dec
ljmp
xor
lahf
inc
aad
or
and
int3
or
shll
xchg
dec
ja
mov
enter
out
jae
sbb
stos
mov
loope
sbb
mov
mov
pop
div
xchg
sub
les
cmp
int3
stos
fistl
and
cltd
mov
fst
enter
test
int3
insl
push
ds
or
aas
xchg
pusha
mov
adc
lock
nop
shr
aas
outsl
shrb
arpl
mov
mov
push
pop
mov
imul
inc
xchg
cmp
test
icebp
out
mov
lea
or
push
mov
inc
repz
cmp
sarl
adc
testl
inc
sub
scas
ljmp
xor
dec
das
xor
push
stos
enter
jp
jnp
xchg
xchg
into
test
jne
fsubr
andl
xor
sahf
jb
mov
jo
loope
loopne
arpl
lret
cmp
ret
pop
sbb
or
sbb
or
adc
and
test
stos
inc
and
sub
mov
and
mov
sub
shl
std
jle
push
hlt
and
mov
aad
hlt
mov
mov
add
sub
push
mov
ljmp
lret
dec
add
and
cmpsb
mov
sbb
cmp
push
mov
or
test
pop
jns
xor
pop
fs
or
mov
add
outsb
stos
leave
push
cltd
js
ret
pop
cmc
out
inc
xor
pop
xchg
jge
rorl
inc
push
dec
push
push
push
and
adc
jge
xchg
mov
and
scas
je
push
pop
mov
xchg
sub
test
adc
xor
pop
xchg
mov
or
ljmp
xchg
xor
jno
ret
sbb
cmp
xchg
stc
pushl
push
jne
inc
lock
mov
adcb
mov
xor
inc
or
bnd
adc
xchg
sub
call
inc
test
rcrl
mov
jne
jle
jg
or
ret
cli
clc
cwtl
pop
fsubl
mov
repnz
loop
fcmove
inc
out
in
and
xor
out
dec
mov
push
push
imul
pop
movl
orb
mov
mov
int
aad
push
dec
mov
push
jp
shrl
pusha
sbb
and
mov
imul
xorb
xchg
mov
sub
inc
sub
inc
in
lock
enter
push
xchg
add
pop
mov
jmp
xchg
nop
push
jmp
jno
xor
pop
lahf
adc
leave
int
inc
pop
fimuls
roll
cmp
insl
mov
loope
inc
dec
adc
stos
cmp
mov
test
xor
addr16
out
dec
mov
mov
cmpsl
test
cmp
add
orl
out
mov
cmp
adc
sub
jge
dec
adc
adc
in
rorl
repnz
mov
adc
hlt
xchg
dec
ret
out
dec
loop
loopne
cmpb
push
adc
les
cmp
or
sbb
ret
out
adc
mov
adc
or
xor
or
mov
push
mov
aam
adc
pop
rcr
mov
lret
loope
sub
mov
mov
sti
mov
aad
sti
mov
mov
xor
sbb
inc
pop
aas
pop
mov
test
hlt
and
cmp
les
test
sub
inc
adc
addr16
lret
aam
cmp
imul
or
jb
addb
dec
aam
cmp
push
pop
je
add
add
inc
cmp
ja
cmpsb
and
subb
loop
mov
dec
sahf
ret
icebp
add
and
and
mov
jge
mov
std
nop/reserved
and
adc
outsl
lds
es
mov
insl
pop
ss
stos
inc
jnp
ljmp
popa
call
jno
sbb
cmp
push
mov
pop
jne
lret
pop
sti
hlt
mov
bound
dec
mov
imul
arpl
pop
hlt
push
mov
or
gs
add
xor
in
cs
add
in
mov
sub
jp
out
pop
rolb
push
adc
loopne
adc
push
je
jmp
mov
movb
ss
cmp
mov
jno
lock
jno
and
das
rorl
xchg
jb
fsubrl
and
adc
cld
xchg
sbb
pop
push
mov
lret
iret
or
fbstp
loope
repz
cmpsl
fsubrs
jnp,pt
fiaddl
xor
dec
out
push
idivb
or
push
xor
push
jmp
xchg
aad
rolb
sbb
push
mov
xchg
fsubrs
sub
xor
loopne
iret
jmp
pushl
lods
movsl
addr16
insb
pop
in
jecxz
dec
pop
inc
add
pushf
mov
stos
push
and
mov
popa
jge
stos
xchg
daa
push
or
aaa
sub
inc
sub
push
mov
mov
xchg
add
mov
loopne
and
cmp
test
sub
pop
shrl
inc
add
and
dec
mov
fwait
setbe
fs
out
sub
mov
adc
inc
imul
fisttps
pop
icebp
shlb
adc
sahf
pushf
shrb
ds
or
jnp
std
call
fs
aaa
imul
rclb
les
in
xor
sbb
jnp
mov
jae
adc
pop
jo
mov
and
adc
jmp
xor
mov
jle
rorb
aad
pop
adc
adc
leave
push
add
stos
add
jae
adc
cmp
fnstenv
scas
fdivr
test
dec
sub
lea
pusha
das
and
loope
or
jns
lea
call
scas
rcll
outsb
add
mov
xchg
repnz
lea
pop
jp
and
inc
mov
pop
or
or
jmp
ja
mov
sub
push
iret
mov
mov
loopne
inc
fldl
ja
popf
cltd
cmp
rorl
and
xor
rcl
cwtl
mov
jmp
pushw
jg
cmp
xchg
jne
mov
sub
mov
fldcw
adcl
das
ljmp
pop
add
dec
dec
movsl
sbbl
sti
aaa
or
fucomp
pop
pop
mov
cmp
out
stos
nop
xor
ljmp
sbb
decb
je
cld
dec
scas
lods
inc
jmp
mov
mov
rcr
jg
loop
aaa
add
gs
xorl
int
add
gs
repz
dec
mov
xlat
dec
cmc
dec
mov
std
cmp
test
pop
sub
notb
les
js
lds
mov
lahf
stos
mov
mov
enter
and
dec
pusha
aad
dec
dec
or
cmp
jno
aaa
mulb
icebp
xor
inc
mov
ror
stos
sti
lret
test
in
out
test
inc
in
add
loope
xor
push
cmc
shlb
cmp
cmp
mov
mov
and
xchg
push
push
mov
sub
in
xor
jmp
cmp
xor
sub
xchg
aaa
pop
test
adc
imul
out
and
mov
jbe
sbb
mov
cwtl
cwtl
mov
cmp
lds
xchg
xchg
insb
add
pop
jecxz
out
mov
inc
repz
pop
pop
sbb
or
sub
lcall
xchg
daa
add
xor
push
mov
add
push
outsb
push
add
pop
or
adc
hlt
into
repnz
stc
repnz
jns
cmpsb
das
xchg
nop
pop
xor
inc
lret
mov
sub
leave
sub
cli
add
inc
rcll
lret
test
xchg
loopne
repz
loop
inc
dec
sbb
stc
sbb
pop
jae
movsb
out
cmpsb
mov
jmp
pop
les
fisttpl
dec
ss
mov
mov
mov
outsl
pop
dec
cmpsb
xchg
xorb
int3
test
push
mov
adc
sti
fs
inc
adc
sarl
pop
pop
fmuls
mov
jg
adc
mov
rorb
pop
mov
pusha
jae
mov
stos
sub
jge
rorl
je
mov
sbb
xchg
test
mov
cmc
out
mov
mov
cs
dec
std
inc
fisubrs
inc
les
test
test
jle
movsl
adc
xchg
sar
mov
mov
aaa
cmp
push
scas
or
loop
into
or
ficoml
imul
fimull
and
popf
jae
insl
adc
clc
jp
sbb
push
sub
jne
nop
fdivrs
call
fcmovb
push
push
push
push
in
fs
add
lcall
cmpsl
sub
ret
cmp
mov
inc
cli
jmp
inc
int3
adc
dec
rcrl
cmpsl
ds
or
insl
fidivs
pusha
xchg
xchg
sub
imul
cmp
mov
mov
push
cld
adc
push
add
or
out
dec
aad
aam
ret
mov
mov
adc
jge
mov
sub
and
sbb
lds
data16
out
jg
pushf
out
mov
cmc
loopne
or
scas
mov
adc
je
imul
ret
imul
lret
insb
mov
jae
inc
dec
and
loop
push
int
push
jo
mov
call
push
push
addl
xchg
push
fisubrs
dec
shlb
pop
pop
cli
divl
pop
gs
add
or
and
pop
roll
cwtl
movsb
or
cwtl
cld
pop
xor
aad
pop
push
dec
test
scas
mov
xchg
scas
xlat
cmp
push
mov
pop
test
insl
nop
pop
insb
xchg
mov
loopne
lock
add
and
aaa
xchg
adc
cltd
jo
inc
dec
mov
jae
mov
sbb
ss
pop
fimuls
push
nop
jb
fstpl
lahf
enter
mov
insl
sbb
outsl
fldcw
in
xchg
ret
mov
enter
pop
xor
jb
and
push
jo
lods
sbb
push
inc
adc
adc
mov
mov
push
mov
fsubs
pop
and
push
bound
dec
mov
mov
mov
and
aaa
icebp
xchg
adc
fstpt
clc
mov
cltd
arpl
dec
pop
test
xor
arpl
xchg
sbb
sub
scas
adc
popa
aam
sbb
out
or
enter
pop
stos
imul
xchg
sub
andl
xchg
pop
or
and
pop
out
inc
jp
orb
sub
sarl
addl
rorl
cwtl
add
mov
out
push
out
and
stc
dec
aas
popa
xlat
dec
push
in
popa
dec
ljmp
negl
je
push
mov
mov
orl
enter
cmp
nop
mov
stc
fstl
insb
jl
pop
test
inc
iret
out
jl
or
cmc
js
pop
das
dec
lds
xchg
jecxz
pop
add
mov
stos
or
inc
adc
arpl
cwtl
pusha
test
lret
push
sub
inc
pop
fcompl
xchg
stos
or
jp
out
mov
iret
in
adc
insl
jle
mov
mov
shll
lahf
mov
dec
mov
mov
outsb
dec
xlat
movsl
addr16
or
ret
jmp
mov
aad
jae
and
push
in
pop
sub
adcl
mov
mov
ret
push
cmp
jno
in
push
push
int3
push
xchg
or
cmp
jmp
popa
jl
push
sub
jbe
cli
hlt
loop
cltd
ficoml
sbb
mov
or
sbb
jmp
psadbw
fisubrs
lcall
leave
out
push
movb
mov
or
cmp
cmp
popf
enter
sbb
mov
sbb
fcmovb
loope
adc
mov
mov
leave
pop
sbb
cmc
or
mov
loop
sbb
dec
rcl
hlt
cmp
adc
test
test
aad
push
jne
je
shll
jns
dec
pop
pop
push
jge
add
subl
ljmp
sbb
mov
inc
pop
dec
aam
xchg
addr16
adcb
inc
leave
test
rcl
decb
loopne
stos
sti
fmulp
jmp
out
in
jmp
int
lret
movsb
jne
mov
clc
in
mov
jmp
push
dec
repz
test
xor
insb
and
cmp
sbb
push
nop
cmp
stos
xchg
pop
mov
pop
inc
mov
xlat
add
pop
adc
ja
or
xor
or
dec
fnsave
mov
in
sbb
dec
arpl
fsubs
idivb
mov
popf
mov
movsl
pop
aas
push
jg
xchg
push
jp
xchg
pop
out
das
cmpsb
rcrl
fs
mov
pop
mov
add
rclb
pop
add
inc
mov
out
jp
shll
mov
inc
pushf
xor
mov
scas
cmp
mov
xor
sub
ret
je
test
ret
pop
rorl
lea
rcr
call
mov
es
dec
xlat
cmp
jne
push
inc
sahf
push
int
aaa
sbb
lods
pop
stos
xorb
jbe
mov
mov
fistpl
inc
test
xor
fcoml
xorb
jl
pop
push
jo
mov
push
xlat
js
push
mov
adc
jmp
cmpl
sub
imul
bound
mov
inc
out
inc
outsl
dec
rclb
mov
jp
xchg
shll
push
lret
fisttps
sbb
jb
mov
out
push
cli
rorl
cmpsl
jp
jge
and
insb
and
sub
mov
mov
test
popf
jnp
imul
mov
std
push
arpl
xchg
adc
mov
into
xchg
or
aaa
mov
xor
sub
stc
dec
je
push
sub
fsubrl
xchg
mov
ret
pop
fidivrl
or
outsl
jo
xchg
hlt
imul
icebp
jb
stc
and
ficomps
arpl
out
cwtl
or
insl
or
sbb
cmp
push
xchg
jp
arpl
shrl
jno
sub
mov
or
add
or
out
stc
inc
mov
mov
pop
scas
adc
lods
in
push
fisubl
mov
xchg
xchg
pop
mov
jp
jge
cli
lds
shll
jg
mov
in
inc
mov
push
dec
cltd
clc
std
fldcw
inc
cwtl
ficoms
fdivl
dec
adc
push
mov
sbb
jbe
mov
mov
and
outsl
pop
pop
jb
clc
fs
mov
mov
arpl
inc
int3
imul
and
push
jp
push
arpl
loopne
adc
xchg
pop
mov
mov
ja
mov
xacquire
mov
nop
and
xor
mov
stos
xor
orl
cmp
loop
dec
shl
fdivrs
repz
jle
cmp
xor
rcll
into
or
lcall
add
lcall
mov
jle
aaa
mov
add
lret
imul
sub
jge
mov
cmp
loope
clc
push
sbb
cmp
lret
fwait
dec
sub
ss
es
fimull
dec
pop
clc
flds
mov
pop
dec
mov
int
mov
cmp
dec
aad
cmp
ret
fistps
stos
jp
sub
inc
jnp
inc
add
test
out
test
adc
scas
sti
shrb
nop
aad
jns
pop
es
or
mov
cld
sbb
pop
mov
lahf
xchg
xor
out
mov
jle
cmp
cmp
jmp
ja
xor
xor
shlb
xchg
mov
cmp
and
mov
js
and
or
gs
add
cmc
jle
fcmovne
jne
xor
and
adc
lods
xchg
pop
mov
xlat
mov
lcall
lods
jns
pop
arpl
insb
mov
cmc
loop
mov
movsl
sub
cmp
lahf
fwait
push
in
mov
cwtl
les
xor
adc
push
ds
test
or
cmp
cmpsb
push
mov
dec
mov
popa
cmp
fcmove
jl
sub
sub
sub
cld
repnz
cs
cmp
subl
notl
mov
inc
sbb
jo
jno
mov
bound
or
mov
xchg
sti
add
jle
cmc
cmp
jnp
fcoml
add
mov
mov
int3
stos
mov
sbbl
push
sar
outsl
jle
xor
test
pop
push
repnz
sarl
and
and
les
ret
pop
mov
js
inc
icebp
push
mov
xchg
push
add
imul
mov
jnp
in
xchg
ret
pop
dec
lea
mov
sbb
filds
add
fwait
shrb
popa
test
fxch
jecxz
out
push
adc
sub
mov
adc
ret
adc
jmp
inc
fisttpll
adcb
sbb
push
movsb
out
shlb
dec
push
fs
push
sub
fisubrs
mov
loop
push
mov
shrl
aam
push
fidivrl
sub
nop
lcall
push
xor
mov
and
aad
dec
add
pop
jl
pop
sti
xchg
add
mov
movsb
mov
lock
icebp
test
mov
xor
ljmp
inc
mov
in
scas
sbb
fs
sub
jecxz
lods
jbe
push
out
xchg
mov
fwait
sti
mov
cwtl
xor
lcall
mov
adc
pcmpeqb
mov
gs
fldcw
popa
cmp
pusha
xor
jnp
mov
mov
insb
jne
inc
jbe
inc
out
xchg
dec
push
ret
push
pop
and
sbb
xchg
and
sub
cwtl
adc
xchg
dec
das
mov
popa
clc
sub
sbbb
pop
or
call
sub
mov
daa
jl
mov
loope
xor
sahf
lods
jno
repz
add
pusha
mov
mov
adc
sub
mov
sahf
je
cmp
jbe
sub
xorb
or
pop
ljmp
sahf
sub
pop
imul
and
xor
jmp
ja
das
call
ljmp
pop
popa
aaa
icebp
push
ret
inc
jno
add
sbb
icebp
cmp
rorb
shrb
cmp
in
or
inc
out
test
ljmp
movsl
mov
mov
jb
or
test
mov
fnsave
and
cmpl
mov
xchg
push
insl
jae
inc
mov
shll
push
ret
enter
jg
xchg
cmp
enter
jle
xchg
jg
ret
or
imul
call
cmpsb
into
cmc
jo
push
adc
scas
push
fisttps
out
shll
lds
aam
sub
pushf
enter
cmp
or
sbb
imul
test
mov
out
xor
sbb
lret
inc
and
mov
mov
xchg
cmp
lret
rorb
jl
stc
nop
push
stos
sbb
and
xchg
jae
insl
mov
xchg
add
repnz
add
add
aad
mov
xchg
stc
int
dec
sbb
xor
push
xor
pop
mov
xchg
push
mov
adc
jge
outsl
xchg
mov
je
in
rorl
aas
loope
inc
mov
lds
or
cmpsl
xor
call
mov
push
or
ja
mov
frstor
push
or
int3
lea
adc
repz
cmpsl
inc
scas
call
jle
push
mov
xor
popa
jl
pop
and
aas
and
jno
inc
stos
cmpl
test
js
call
sbb
dec
mov
mov
push
fs
cwtl
out
cmp
pop
repz
inc
xchg
mov
jae
testl
mov
pop
popa
jge
fildl
ficompl
ljmp
mov
popa
fnstenv
test
jne
stos
adc
icebp
mov
leave
xchg
loop
dec
insl
mov
sub
mulb
mov
pusha
cmp
test
or
movsl
repz
test
in
or
daa
bound
jp
mov
stos
in
test
cmpsl
sti
add
js
pop
in
dec
cmpsb
movsb
pop
jae
and
jecxz
push
mov
inc
mov
sahf
inc
andb
lret
lahf
mov
das
in
sbb
add
in
ret
lea
push
mov
bound
pop
cmpsb
or
mov
cmp
sbb
ss
sub
testb
inc
es
pop
mov
rcl
fadds
add
and
mov
xor
iret
fs
adc
aaa
repnz
aad
loopne
mov
or
arpl
add
push
add
ljmp
sbb
jp
loope
imul
or
mov
or
ret
and
push
xchg
push
out
sbb
jno
or
in
sbb
mov
push
je
mov
push
mov
pusha
sub
jg
mov
xor
rcrl
fnstcw
xchg
pshufw
fwait
pop
mov
pop
pop
pop
pushf
in
es
pop
xchg
in
inc
sub
jmp
into
push
jne
mov
les
pop
enter
adcb
leave
fcmovnu
cmp
popa
iret
pop
in
stc
inc
jle
loop
and
mov
call
push
das
cmp
mov
sbb
mov
adc
sub
pop
cli
into
mov
std
aam
adc
outsb
sarl
inc
mov
out
in
push
scas
inc
das
clc
xorb
ljmp
mov
call
xorl
test
hlt
jo
cmp
dec
bound
nop
pop
adc
aaa
mov
leave
jmp
popa
in
std
push
pop
jne
icebp
cmp
and
jns
mov
fcmovnu
ficomps
outsl
pop
sbb
or
fsubs
push
push
cmp
repnz
jl
xor
jb
stos
das
lahf
sbb
test
cli
jbe
insl
push
pop
mov
in
mov
push
cmpsl
sarb
or
fisttps
cli
daa
push
scas
push
stc
rorl
sub
jecxz
or
loope
int
rcrb
push
and
shlb
rcrl
jmp
pushf
mov
sbb
outsl
push
cmp
mov
rcl
pusha
out
movsl
inc
or
dec
mov
mov
js
mov
mov
adc
inc
popa
arpl
rcll
and
ds
lea
sbb
dec
xchg
divb
nop
es
lock
addr16
scas
loop
xchg
and
mov
fs
adc
insb
in
into
fs
or
fs
insl
sub
and
inc
imulb
dec
and
dec
lods
push
xor
popa
mov
pusha
mov
mov
mov
out
add
or
cmp
push
dec
adc
dec
mov
sarl
test
aam
mov
in
cmc
mov
into
jl
jle
xor
fsubrs
mov
sbb
lds
xor
cwtl
fistl
pop
xor
mov
popf
jns
rclb
movsl
arpl
push
leave
mov
dec
les
jg
add
add
test
cmp
jg
xor
sahf
sub
xor
inc
ljmp
in
mov
lds
push
cmp
dec
push
push
out
out
repnz
stos
pop
lret
xor
fldl
fldenv
ret
cmc
mov
push
push
jae
sub
sbb
cmp
mov
shrb
gs
arpl
lock
mov
cmc
add
dec
mov
ljmp
iret
fnstsw
sbb
stos
xchg
aam
aam
cmpsb
lcall
mov
inc
cmpsb
xchg
cmp
push
fdivl
cmpsb
loopne
mov
mov
inc
adc
cmp
sub
adc
rorl
scas
add
lahf
push
jb
sbb
rolb
cltd
pop
adc
xor
cmp
fwait
divl
xchg
jmp
add
jge
jne
jge
stos
gs
adc
notb
outsb
pop
xchg
cmp
test
or
mov
rol
imul
pop
mov
sbb
and
nop
ds
sahf
movsb
lods
outsl
pop
jl
mov
or
jae
lock
nop
int
loop
lea
sub
into
or
xor
push
in
pop
sar
stos
lret
xor
pop
test
aaa
pop
or
test
aas
jbe
sbb
sub
push
pop
or
fs
out
cmp
call
push
lods
xor
mov
xor
lds
xlat
cltd
imul
add
cmpsl
in
pusha
mov
jo
repnz
lcall
sbb
mov
add
inc
enter
dec
jne
jae
fisubrl
pop
adc
pop
cmp
call
and
pop
pop
lea
fnstcw
in
jno
leave
adc
add
or
les
testl
add
push
das
fiadds
mov
mov
les
xor
mov
jns
in
mov
sbbl
scas
data16
test
mov
insl
mov
dec
shlb
dec
jle
add
sbb
cmp
jp
push
jno
in
repz
mov
iret
bound
aas
dec
sbb
cs
repnz
jg
data16
movsb
pop
ret
jmp
fcompl
mov
push
xchg
scas
imull
sbb
sar
push
ret
fdivl
jmp
stos
xchg
fsubl
mov
shrb
movsb
xor
test
pop
fs
sub
repnz
or
cmp
ljmp
mov
movsl
dec
outsb
push
lds
aam
add
lea
or
sub
xchg
xor
data16
movsl
out
jno
popf
jp
dec
test
push
stos
inc
fisubl
out
sub
inc
add
daa
push
xchg
sub
pop
and
and
add
and
add
mov
ljmp
lea
dec
xorl
lcall
jecxz
mov
icebp
sbb
aam
jge
scas
je
ljmp
outsl
scas
dec
lods
cmp
inc
clc
dec
fs
fcmove
jge
inc
adc
mov
fldenv
fadd
in
inc
mov
out
lods
div
pop
push
in
sbb
insl
aam
fimull
jne
sbb
loope
adc
pop
loope
sbb
scas
cwtl
aad
and
or
fcompl
imul
jle
loop
push
sbb
in
repnz
pop
adc
xchg
jb
xlat
dec
loopne
lcall
mov
xchg
add
insb
mov
adc
jo
adc
fists
xor
push
out
loope
ss
mov
les
fsub
mov
movsl
fistps
shlb
xchg
inc
mov
add
pop
sub
xchg
dec
gs
mov
out
popl
xor
add
in
mov
inc
and
xchg
je
clc
dec
ljmp
xchg
pop
aaa
aad
div
jecxz
sub
add
inc
fucom
popa
inc
dec
jmp
loopne
stc
lret
out
cmp
adc
nop
ret
pop
mov
dec
xor
outsb
xor
lds
adc
jo
adc
mov
and
leave
rolb
mov
ljmp
test
and
rcrl
xor
mov
mov
aaa
jne
flds
xchg
insb
or
pop
or
test
fdivs
mov
les
lret
pop
mov
push
sub
lcall
pop
jle
xor
pop
cli
js
xchg
call
mov
sbb
stc
or
les
sbb
jnp
test
mov
sub
rcrb
aaa
loopne
mov
add
fidivl
cmpsb
divb
jl
mov
lret
jl
orb
nop
repnz
pop
nop
ret
mov
rcrl
nop
int
insb
int3
cwtl
adc
stos
jp
out
loopne
cmp
xchg
imul
sub
lock
xchg
insl
lea
mov
outsb
jne
add
in
lods
shlb
jmp
xchg
ja
outsb
lret
jbe
in
or
pop
fwait
push
imul
and
cmpb
xor
pushf
test
and
cwtl
stc
and
pop
add
and
jae
decl
sub
test
adc
xor
inc
xor
aas
pop
test
bound
leave
cmc
shll
jge
insb
adc
loopne
sbb
xchg
and
inc
test
push
popa
aam
popf
das
push
ret
mov
pop
in
xor
xchg
push
push
mov
push
mul
push
or
sbb
mov
ja
cmp
cwtl
bnd
cmpl
frstor
in
mov
inc
fs
xchg
xor
and
out
dec
and
clc
and
pop
int
rorl
or
adc
mov
test
inc
cmp
xor
andl
adc
ret
sbb
ret
mov
jge
addr16
lret
stc
cmp
daa
inc
inc
std
and
pop
aam
sbb
jle
cld
sub
test
push
mov
mov
xor
or
mov
push
cli
shl
xchg
sbbb
and
mov
push
lods
add
mov
push
ljmp
repz
mov
add
mov
leave
arpl
loop
imul
mov
incb
jb
jne
popw
jl
decb
xchg
sub
mov
xor
test
mov
inc
outsb
test
pop
int
rorl
roll
notb
pushf
lods
aad
sbbl
push
pop
dec
gs
das
out
lods
out
fsubrl
dec
mov
sub
mov
in
pop
inc
int3
enter
lods
pop
and
adc
idivb
jcxz
gs
mov
fiaddl
out
add
repnz
repz
and
int
add
int3
mov
movsl
mov
push
hlt
shll
imul
fidivs
ret
lds
stos
dec
lahf
push
lret
adc
stos
fiadds
dec
sub
pop
data16
lods
cmc
scas
cli
dec
cwtl
inc
or
push
ret
fstps
addr16
pop
ja
js
mov
cmpl
fdivp
adc
add
push
mov
test
insb
cmp
add
aaa
cmc
mov
jp
xchg
pushf
push
enter
cmpsl
push
hlt
ja
adc
pop
add
pop
stos
mov
pop
bound
pop
lock
adc
mov
movsb
iret
loope
sub
lea
mov
ret
loope
enter
mov
dec
test
fs
jp
xor
xchg
adc
mov
pop
adc
fdivp
push
daa
xor
jno
or
dec
push
movsb
adc
dec
clc
das
jnp
je
adc
aad
sbb
xor
cltd
test
roll
popa
cltd
ja
out
jecxz
cltd
std
sbb
jns
test
or
or
sbb
dec
imul
leave
stc
jno
add
sbb
aam
push
or
add
xchg
in
incl
mov
inc
addl
dec
add
fwait
out
insb
cwtl
adc
pop
negl
push
fildll
or
dec
xor
movsl
cmp
arpl
jmp
mov
pop
test
shrb
cmp
add
push
jecxz
dec
sub
enter
cltd
push
cld
jp
mov
and
lods
pop
xor
or
jnp
mov
pop
xchg
daa
push
test
sbb
test
enter
pop
aad
in
push
lret
inc
jmp
push
mull
cmpsl
sub
mov
lea
mov
popf
test
cltd
push
dec
jl
dec
divl
fs
fsubp
add
lea
mov
pop
lods
fisubl
test
scas
xchg
in
aad
sti
pusha
xchg
pop
shrl
dec
out
jbe
xor
scas
mov
cld
pop
outsl
call
daa
out
pop
shrb
cmp
or
xchg
mov
imul
xor
add
js
rorl
adc
loop
xlat
ja
jp
mov
mov
pop
mov
jle
xlat
sti
cmp
mov
pop
pop
outsb
bound
mov
cli
es
popf
int3
lods
orl
fwait
loop
aas
mov
in
scas
aam
cwtl
mov
or
xor
ds
je
cli
hlt
inc
mov
inc
inc
dec
loop
repz
negb
scas
pop
mov
mov
or
dec
or
lahf
xchg
mov
inc
jp
mov
dec
add
bound
pop
sub
xor
loopne
mov
xlat
xchg
mov
lret
pop
jae
mov
out
lods
and
daa
jno
cli
sbb
mov
int3
aad
lahf
add
pop
jecxz
dec
ret
inc
and
addr16
addr16
ds
cmp
test
inc
in
fidivs
enter
or
or
or
fistpll
out
cmp
or
and
int
aam
into
pop
mov
icebp
out
adc
push
div
mov
jns
xorl
mov
std
pop
push
add
pop
fmull
repnz
push
jno
pop
pop
inc
js
xchg
cld
dec
rcr
xchg
xchg
arpl
adc
nop
imul
jae
lock
stos
sub
dec
mov
xor
fdivr
jne
sbb
xor
pop
or
dec
or
pop
xor
push
add
and
movsl
xor
call
aad
fldt
jns
negl
xor
icebp
jbe
loope
ds
xor
sub
loop
es
mov
jecxz
pop
out
add
jo
cmp
and
dec
test
daa
inc
mov
pop
stos
jl
xor
popf
xor
sti
rolb
std
cs
push
popf
test
adc
ret
push
out
data16
xchg
mov
ret
test
daa
shll
push
jmp
int3
es
ds
mov
push
int
fisubs
pop
ss
cmp
or
repz
loop
jp
cmpsl
movhps
push
test
cmp
sbb
les
gs
jne
lahf
push
xor
call
jno
pop
cmp
aad
in
shlb
mov
idivl
in
dec
jnp
cltd
cmp
push
in
adc
rorb
repnz
lahf
sbb
mov
push
enter
sbb
stos
xor
or
arpl
and
ret
cmc
out
arpl
out
cmp
loope
push
pop
lods
aad
mov
mov
cmpsl
lahf
push
aad
nop
jno
xor
testb
pop
mov
pmuludq
fcompl
xor
mov
mov
add
or
push
roll
inc
fmul
adc
fildll
imul
mov
add
or
out
clc
jmp
popf
decl
lret
inc
jmp
push
push
mov
hlt
mov
jo
stos
fidivrs
pop
push
or
jecxz
fildl
icebp
or
inc
lcall
lea
out
mov
data16
cltd
mov
loop
popf
jmp
pop
fmul
add
out
fwait
cmp
and
dec
lahf
mov
pop
jno
jbe
test
fwait
push
push
add
hlt
and
xchg
push
loope
dec
dec
movsl
pusha
ret
cmp
mov
outsb
je
fs
dec
adc
mov
mov
mov
pop
or
sahf
fldl
jbe
sub
mov
dec
lmsw
fadds
lods
mov
dec
inc
jg
ror
pushf
pop
popa
loop
xchg
cld
lods
outsb
ljmp
push
jmp
lods
mov
shlb
push
cmp
sbb
nop
push
int
xor
lret
dec
aam
ret
aaa
jno
fcmovnb
pop
mov
frstor
bound
imul
iret
sbb
or
push
loopne
sbb
enter
out
add
imul
jge
and
addr16
pusha
add
cld
push
cwtl
sub
std
hlt
push
or
mov
adc
dec
push
mov
cmpsl
mov
inc
jns
mov
ds
lods
cmp
in
push
or
push
cmp
subl
mov
mov
int3
sbb
scas
sti
mov
lea
adc
pop
adc
push
jb
push
sbb
and
sbb
lret
add
adc
or
mov
popf
and
and
fdivr
add
xchg
inc
push
movsl
divb
push
mov
pop
lea
ss
jp
aaa
pop
mov
out
out
xor
ja
cmp
mov
popl
mov
in
mov
into
or
push
add
mov
aam
sub
cmp
sub
aad
cltd
cwtl
les
adcb
ljmp
fstl
jmp
sbb
push
or
mov
test
in
hlt
inc
lock
outsb
cmp
in
mov
add
in
fimull
dec
cmpl
ljmp
lock
jns
xor
pop
push
cmp
jae
jmp
dec
pop
cmp
pushf
repnz
cmpsb
popa
sbb
outsb
sbbb
or
stc
jae
fdivs
xchg
icebp
movsl
outsb
mov
stos
addr16
lock
movsl
in
cmpsl
lods
sub
in
add
xchg
xor
lret
iret
ret
repnz
and
inc
inc
xchg
cwtl
ror
loope
aad
adc
je
incb
inc
test
sbb
add
outsb
nop
cmpsb
fiaddl
inc
aam
push
add
rolb
mov
fnstenv
mov
fsubs
inc
pop
neg
dec
shl
inc
push
adc
push
pop
fstps
dec
xchg
and
pop
add
icebp
xchg
dec
mov
push
jns
xchg
fwait
lret
mov
push
sbb
scas
icebp
inc
push
lcall
imul
scas
cmp
push
sub
int
mov
cmc
mov
sahf
jo
pusha
lret
ja
aaa
add
sbb
pop
dec
fidivs
sbb
jmp
bound
lea
jp
or
mov
and
flds
jno
and
sbb
aas
jg
xchg
cmp
test
pop
into
mov
push
jnp
stos
lahf
in
cli
mov
shll
pop
push
aaa
into
and
jecxz
mov
push
xor
imul
sub
push
arpl
inc
sub
or
movsl
call
push
pop
push
jle
dec
sub
repnz
adc
out
pop
mov
jne
cmpb
xchg
das
imul
push
mov
fwait
xchg
or
mov
daa
push
rcrb
push
mov
push
das
adc
or
mov
sub
repz
sbbb
lcall
jo
sbb
in
adc
cmpsl
stos
add
aad
lahf
xchg
mov
cmp
dec
enter
mov
cmp
jg
add
sub
sub
xor
adc
jns
mov
fwait
xchg
pop
mov
int3
xchg
mov
scas
push
inc
push
mov
loop
push
out
sub
in
push
test
cmp
mov
lret
das
sar
jmp
xchg
add
xchg
push
inc
out
loop
fmull
lds
repnz
add
mov
popf
push
adc
mov
mov
cltd
and
jle
test
xor
xor
and
leave
imul
dec
mov
push
mov
dec
cmp
addr16
popa
xchg
xor
ljmp
je
loopne
sbb
bound
pop
movsb
arpl
push
repz
sbb
push
and
pushf
int3
mov
dec
outsb
pop
scas
mov
mov
jno
lock
pop
nop
adc
inc
dec
test
les
std
cld
sbb
adc
add
ucomiss
cmp
mov
jmp
jge
cmpsb
sub
in
mov
in
jb
andl
pop
jecxz
out
shrb
push
xor
rcll
push
xchg
ljmp
shr
sub
mov
adc
stos
loopne
out
adc
pop
fwait
push
add
scas
sti
jmp
lock
add
mov
call
add
push
push
sbb
js
jne
mov
les
es
xchg
xchg
inc
pusha
push
jge
scas
add
stos
ds
or
cmc
add
xchg
push
xchg
cmpsb
and
pop
pop
aad
iret
outsb
cwtl
aas
adc
scas
shrl
in
aad
cmp
insb
fcoml
inc
data16
xor
push
in
dec
or
add
push
jle
jmp
scas
pop
ds
int3
mov
sub
pusha
or
pop
xchg
aas
es
inc
fistpll
xlat
push
xorb
push
clc
push
push
xchg
bound
mov
push
xchg
pop
xchg
arpl
movsl
jae
sbb
mov
mov
add
lret
ss
dec
sbb
push
div
cmp
js
aas
ss
int3
push
add
int3
push
fildll
fnstenv
sbb
jno
adc
ljmp
mov
mov
mov
popf
cmp
cmp
mov
xlat
mov
push
das
out
jno
mov
cmp
fwait
xor
push
mov
mov
push
mov
xlat
mov
add
mov
adc
filds
popf
jmp
dec
lods
mov
sbb
mov
gs
mov
sbb
aas
inc
sub
jg
xor
xchg
mov
lret
notl
xchg
out
push
dec
test
dec
repz
fwait
mov
fistpl
in
es
rolb
xor
xorl
pushf
adc
mov
push
scas
aad
cltd
push
mov
inc
aaa
adc
dec
lret
shl
lds
xchg
cmc
pop
jecxz
ret
and
stos
and
fwait
inc
cld
in
cmp
roll
mov
roll
out
aam
cltd
and
loopne
repnz
lahf
lods
sarb
scas
hlt
sub
in
lret
and
adc
mov
push
fcomps
outsb
lea
stos
pop
pop
push
push
test
inc
adc
or
cmp
push
jae
cs
lret
popf
pop
inc
loopne
inc
clc
and
movb
shrb
adc
stos
inc
stc
xchg
pop
repnz
loopne
stos
sbb
push
pop
lea
aas
pop
ret
adc
or
outsl
sub
cpuid
jg
jne
and
test
mov
in
sbb
sbb
cmp
ret
dec
jbe
mov
call
mov
popa
stos
mov
gs
cmc
mov
xor
push
or
mov
sub
or
dec
out
testb
frstor
clc
addl
movsl
inc
aad
inc
jne
clc
imul
push
iret
cmp
jle
sbb
dec
adc
cs
stos
jnp
inc
out
insl
mov
push
mov
add
mov
mov
add
sbb
xlat
cmp
int
or
in
jne
mov
sti
inc
or
stos
aas
sti
jmp
movsl
mov
lock
daa
xchg
lcall
add
popa
out
cmc
movsl
xor
daa
xchg
dec
ret
push
ljmp
aaa
dec
mov
push
and
mov
shl
mov
fists
push
mov
xor
jo
push
push
and
and
das
jne
rcrb
jl
xor
dec
mov
or
push
cmpsb
adc
jo
jl
jecxz
lock
pcmpgtd
in
mov
fidivrs
xchg
lock
lahf
in
mov
outsl
out
mov
fnstenv
add
sar
pop
cmp
adc
cltd
pop
cmpsl
mov
and
arpl
mov
mov
pop
mov
fst
aaa
inc
push
mov
test
loope
test
add
jnp
mov
sbb
mov
mov
dec
nop
sbb
dec
lcall
and
or
cli
pop
push
mov
cmp
sbb
push
data16
ret
push
mov
cmpsb
mov
and
jl
gs
xchg
sarl
sbb
pushf
sbb
fisttps
pop
cltd
sub
adc
xchg
iret
pushf
sbb
enter
add
jb
sbb
pop
cmp
and
xchg
lret
jg
scas
sub
mov
das
pop
std
adc
jno
cmp
ss
push
in
pop
aad
adc
jmp
pop
mov
sahf
and
mov
push
mov
add
das
pop
jl
jb
mov
sahf
xlat
ja
dec
mov
and
fnstsw
and
xchg
aas
mov
adc
jo
mov
sub
inc
jne
mov
shrd
push
push
push
add
ljmp
clc
sbb
jns
sbb
cmovb
pop
xor
mov
inc
and
ret
dec
or
pop
int
xchg
mov
das
imul
fldenv
movsl
xchg
jno
repz
lods
cs
cwtl
sbbl
mov
adc
mov
test
sub
ja
inc
pop
xchg
or
xchg
loop,pt
loop
ret
push
push
mov
daa
out
cmpb
inc
push
lahf
push
mov
movb
test
xor
xlat
gs
mov
sbb
jl
ret
xchg
fbld
add
aaa
mov
mov
sbb
push
das
repnz
in
das
sub
jo
or
cwtl
mov
movsb
adc
xorb
push
push
mov
testl
jle
jp
mov
mov
cmpsl
jb
lea
add
dec
cmpsl
pop
push
ja
std
clc
xchg
mov
sbb
sahf
sbbb
push
jl
jns
aad
cmp
fbstp
nop
aad
mov
in
stc
out
ror
out
fadd
movsl
adc
mov
pop
rol
test
arpl
push
cmpb
mov
dec
mov
sub
cmp
xchg
mov
jmp
inc
mov
push
loopne
arpl
mov
mov
pop
mull
pop
cmp
xchg
mov
xchg
iret
add
xchg
insl
pop
sbbl
push
xor
jns
and
sub
mov
or
sub
ja
cltd
xchg
imul
nop
jnp
mov
popf
sarb
cmpsb
fwait
and
cmp
iret
cwtl
ret
adc
lods
and
lahf
mov
clc
push
iret
loop
push
push
add
jne
ret
inc
cmp
sbb
push
ljmp
repz
adcl
sub
jno
sub
mov
xchg
js
push
neg
aam
adc
pop
scas
sbb
out
push
outsb
call
or
add
pop
jnp
sub
lret
adc
or
mov
pop
jmp
pop
xor
inc
test
xchg
mov
test
and
lret
lret
cli
jbe
push
and
jg
cmp
and
cmp
mov
pop
xchg
xchg
jno
cmp
loop
xchg
jo
in
sbb
xchg
sub
mov
jle
pop
in
orl
loope
dec
sbb
jbe
pop
les
push
divl
imul
stos
inc
insb
orb
das
mov
movsl
xor
pop
std
jle
mov
and
xchg
test
shl
mov
into
cld
mov
in
aas
inc
sub
ds
ret
rorb
cmpsb
insb
ljmp
insb
test
data16
repz
and
aam
lods
mov
push
loop
fptan
stos
stos
arpl
sbbl
add
mov
xchg
mov
xchg
lea
shl
fs
push
std
push
in
cwtl
cmpsl
ret
enter
movsb
shlb
sub
test
sub
or
jecxz
lahf
cwtl
inc
add
mov
push
xor
outsb
jl
xchg
pusha
aas
push
fxch
not
imul
jge
icebp
sub
dec
fwait
mov
mov
shr
sub
push
notb
in
cmpsl
jg
es
in
mov
roll
out
lcall
loope
mov
cmc
addl
dec
movsl
inc
add
loop
adc
aad
les
mov
xchg
pop
jo
push
jbe
cltd
js
sbb
sub
mov
lods
jbe
cmpsl
dec
icebp
pop
mov
cmpsb
sbb
pop
call
push
cmp
loope
xor
xchg
movsb
out
rcrb
dec
loop
nop
pop
call
adc
or
ds
stc
ljmp
rclb
setnp
orb
test
mov
cmp
test
or
mov
adc
push
adc
adc
fdivp
es
aaa
in
out
mov
xor
jnp
xchg
lcall
xchg
dec
sub
jmp
xchg
mov
inc
sub
call
int3
push
hlt
jns
mov
mov
insb
ljmp
mov
xor
lock
jne
les
and
or
mov
cwtl
inc
test
xor
aaa
call
or
dec
or
push
sub
cmpsb
rcrb
add
cli
lret
and
jo
popf
inc
push
iret
imul
jl
xor
and
xchg
jo
cmpsb
pop
jl
test
mov
add
sarb
dec
inc
xchg
xchg
push
push
inc
jge
out
pop
and
pop
dec
sbb
hlt
stc
ret
andl
mov
jl
repz
mov
ret
shrb
cmc
push
dec
loope
add
sub
add
aam
push
int
push
pop
hlt
and
ret
sub
mov
iret
cmp
rcrb
xlat
pop
xlat
add
xchg
inc
cld
lea
mov
enter
xchg
in
mov
int
cld
rclb
es
pop
xchg
jb
pushf
rclb
loopne
leave
icebp
fcomps
inc
out
les
je
insl
jne
lods
inc
lods
push
push
lcall
es
orl
jae
cmp
int
fidivs
ljmp
les
sub
iret
cwtl
or
xchg
outsb
pop
dec
add
jnp
pop
cmp
pop
cmc
mov
xor
mov
push
pop
xchg
and
sub
or
jns
jne
adc
jnp
ja
push
call
jmp
dec
xor
push
or
in
dec
sti
cmp
hlt
roll
orb
cmp
jle
test
add
add
sbb
cmp
iret
lds
add
mov
mov
sbb
test
call
ja
jl
loope
notb
jl
push
ror
mov
aad
and
into
push
xchg
pop
popf
mov
aad
or
add
in
in
flds
mov
cmp
scas
test
inc
and
test
mov
popa
lea
fldcw
jnp
les
daa
insb
data16
repz
cmp
daa
mov
mov
jo
imul
test
into
sub
sahf
lock
mov
and
push
mov
dec
pop
shll
loop
or
mov
loop
icebp
add
sahf
push
and
mov
push
aam
adcl
push
xchg
cmp
xchg
movsb
add
dec
mov
inc
cmp
push
notl
sub
sti
xor
mov
ret
nop
mov
or
pushf
xchg
fwait
out
ljmp
hlt
sub
xchg
lret
in
cmc
pushf
ret
or
cmpl
cli
out
mov
inc
mov
mov
aaa
incb
insb
jle
sub
or
add
xchg
cltd
sub
add
outsb
sarl
stc
xchg
push
test
mov
repnz
pop
add
std
es
loope
jl
cmp
mov
aad
mov
push
push
jb
xor
sarl
pop
mov
mov
sub
or
jb
sbb
jnp
or
fisubrs
fucomi
cmpsb
sbb
es
pop
xchg
movsl
popa
sub
mov
mov
sti
shll
addr16
xor
cltd
cmp
fildl
adc
mov
sbb
inc
sysenter
push
push
pushf
xchg
xlat
inc
jne
cmp
jno
and
out
sbb
add
sti
out
jns
cli
adc
jbe
add
and
ja
into
lret
cs
int3
outsb
into
jns
mov
mov
fld
xor
pop
add
test
push
adc
dec
insb
mov
les
cli
iret
sbb
lods
rcrb
sbb
mov
jb
sahf
imulb
sub
test
inc
insb
pop
mov
outsl
inc
subb
bound
sub
xor
popf
jmp
mov
inc
cmc
fsubrs
out
inc
clc
inc
test
pop
mov
subb
test
and
shl
sahf
pop
stos
inc
push
dec
lds
aam
test
clc
cmp
hlt
adc
sti
insb
cmp
inc
dec
testl
mov
fnstcw
lods
loop
cmp
cltd
jecxz
dec
inc
jp
pop
mov
loopne
scas
in
mov
mov
cltd
ret
daa
dec
mov
sub
imul
aad
push
sub
rcrb
xor
dec
xchg
test
add
sub
or
sbb
aas
pop
cmp
add
jl
hlt
add
subl
in
cmp
xchg
lods
ja
pop
dec
nop
xlat
bound
jbe
movsl
sbb
pushf
shll
adc
ret
inc
lret
and
add
push
loop
inc
inc
iret
fisubrs
imul
addr16
or
lods
mov
or
imul
std
mov
hlt
sti
push
pop
stos
adc
push
pop
mov
adc
mov
xlat
lods
sbb
push
repz
adc
jae
xchg
test
jno
lea
incb
dec
pop
inc
mov
mov
cmpsb
inc
pop
repz
cltd
add
or
adc
lahf
nop
insb
out
test
rcrl
or
add
mov
push
daa
scas
out
jmp
js
out
in
out
mov
popf
sub
push
xor
sbb
int
filds
js
push
lods
or
aad
xchg
dec
je
add
fdivl
and
jnp
or
hlt
and
jg,pn
cmpsb
movsb
mov
and
cmc
mov
loop
jmp
cmc
add
call
inc
push
fwait
sub
inc
jmp
jns
rolb
jo
insl
das
pusha
push
mov
ja
jmp
outsb
inc
cmp
adc
pusha
pop
or
xchg
xor
daa
push
xchg
test
sub
add
test
xor
push
in
stos
xor
int
popf
out
inc
es
dec
roll
or
call
jmp
xchg
into
mov
inc
inc
arpl
daa
out
cmp
push
out
les
mov
aas
icebp
adc
clc
dec
shlb
inc
cld
fwait
rolb
inc
or
mov
je
int3
gs
aam
mov
dec
les
sar
pop
sbb
inc
mov
std
in
xchg
lret
lahf
xor
push
ds
aam
dec
sub
lods
push
cwtl
mov
mov
mov
scas
lock
add
sbb
ret
lret
and
enter
imulb
mov
loop
sub
es
adc
nop
push
das
mov
loop
add
sbb
imulb
mov
adc
fdivrs
xchg
and
or
or
push
mov
jnp
aas
adc
inc
loope
les
ror
mov
cmp
mov
or
jl
sub
loop
jae
push
test
dec
mov
mov
xchg
push
leave
cmp
or
adc
cmp
sub
andl
aaa
ljmp
mov
sub
cmpsl
lret
pop
xlat
adc
shrl
mov
lahf
test
fstpt
and
push
aam
or
add
jbe
pop
cmp
aas
lds
lods
jle
mov
and
dec
and
push
loopne
xchg
add
cmpb
pusha
repz
test
and
dec
fwait
lods
out
pop
mov
pop
mov
sub
jmp
data16
dec
xor
xor
mov
and
inc
mov
aam
fnstenv
xlat
mov
add
clc
add
arpl
aas
test
movsb
or
jno
cmp
cld
cmp
pop
jge
mov
mov
jno
and
add
flds
rcrb
call
ja
pop
in
push
lret
xchg
das
mull
sahf
lods
or
sti
pop
cmp
addr16
inc
jl
sahf
mov
inc
pop
imul
movsl
sub
je
bound
dec
push
push
sub
dec
cmp
insl
add
and
mov
inc
pop
adc
test
in
iret
jge
pop
stos
popf
and
std
sbb
test
inc
dec
pop
adc
int3
fcoms
mov
or
dec
dec
mov
clc
outsb
xchg
and
pop
loopne
loop,pt
xor
js
fiaddl
insl
lods
pop
and
push
loope
int3
lock
xor
aam
mov
jne
xlat
in
push
jb
hlt
add
add
jp
outsl
cmp
xor
jp
data16
sbb
jmp
xor
xor
sbb
jge
insb
sarb
divb
in
call
dec
repz
add
add
in
cmp
lods
lods
jmp
or
push
sub
sarb
pop
dec
inc
outsl
lahf
or
add
and
mov
fisubrs
fldenv
mov
fiadds
push
cs
cmp
andl
xor
push
mov
outsl
fsubrp
push
mov
xchg
fwait
sbb
adc
cli
test
fidivrl
jb
jo
mov
push
xchg
xchg
leave
add
addb
ffreep
enter
add
cmp
sbb
scas
add
inc
mov
xchg
push
aad
cli
imul
dec
dec
test
nop
mov
xchg
jecxz
into
push
in
test
mov
pop
sub
ror
mov
pusha
jmp
mov
inc
pop
pusha
in
data16
repnz
jnp
pop
jae
mov
push
cmc
out
sub
cmpsb
mov
mov
pop
orb
adc
nop
ret
in
leave
jns
xchg
sbb
jmp
mov
xchg
or
push
and
and
loopne
inc
sub
push
lods
fisubs
js
sub
cmp
arpl
pop
in
and
mov
mov
es
pop
dec
bound
jl
loopne
push
cmp
outsl
jp
je
cmp
shr
out
add
movl
or
std
mov
pop
push
and
mov
hlt
pop
pop
fdivs
cmp
inc
pusha
mov
jle
jno
imul
icebp
lods
sahf
mov
and
test
and
mov
imul
jno
pop
xchg
adc
fistl
cmp
out
add
cmp
int3
xchg
clc
nop
adc
ret
jbe
xor
inc
fstl
pop
lea
jno
stc
dec
cli
ficomps
add
and
insb
shlb
pop
imul
cmpsl
mov
jbe
out
leave
and
adc
adc
push
cltd
add
jl
xchg
mov
dec
push
sub
mov
inc
xchg
mov
xchg
ror
adc
mov
mov
popa
and
push
xchg
push
mov
push
push
push
pop
fcmove
dec
mov
push
jo
mov
stos
test
sbb
pushf
mov
lcall
jmp
jo
ja
leave
pop
adc
test
in
ret
ljmp
adc
and
or
inc
icebp
arpl
iret
or
popf
leave
mov
fwait
fwait
add
ret
mov
pop
bound
jno
inc
jp
clc
fnstenv
lret
and
inc
pop
mov
lods
pop
pop
add
adc
bound
xor
ljmp
cli
jmp
dec
stc
popa
stos
loopne
adc
sub
mov
push
mov
and
adc
cmp
int3
in
push
xchg
loopne
loopne
jl
push
cltd
fistpll
movsl
ror
fisubrs
out
movsl
mov
xor
ret
or
ret
mov
adc
pusha
and
push
outsb
cmpl
clc
jb
cmc
jb
outsl
and
jle
jle
xor
cmc
adc
out
dec
dec
test
or
aad
outsl
xchg
sbb
in
jb
mov
jnp
cmp
jns
cmp
dec
mov
lret
jge
xorb
pop
mov
insb
ljmp
mov
hlt
push
and
xor
jecxz
out
or
mov
test
int
cwtl
jae
clc
cmp
pop
sbb
jb
add
jne
cld
adc
fwait
adc
jne
out
scas
inc
ja
push
pop
out
mov
mov
mov
push
inc
jns
cmp
shll
dec
push
out
add
ja
lock
mov
pop
outsb
dec
not
std
add
jp
stc
xchg
adc
ja
sti
add
dec
fwait
lcall
insb
mov
xchg
pushf
sbb
adc
xchg
popa
hlt
mov
outsl
jmp
es
movsl
lahf
lds
adc
jo
enter
push
pushf
lods
jbe
shrl
sub
pop
cmp
imul
mov
out
inc
enter
div
mov
arpl
scas
sub
cmp
sbb
ja
sbb
dec
sbb
in
pop
lods
fcomps
mov
jne
scas
cmc
mov
int3
pusha
dec
out
sub
dec
test
or
or
mov
leave
icebp
das
lret
pop
and
dec
repnz
movsb
mov
imul
jg
iret
and
jl
out
dec
lret
xchg
mov
lahf
push
rcrb
rcll
aam
stos
mov
xrelease
dec
lahf
mov
adc
fcoms
jmp
pop
push
jo
out
dec
repz
test
fdivrs
loopne
pushf
jge
iret
cmpsb
outsl
xchg
insl
add
repz
jmp
mov
or
mov
aaa
test
sub
lahf
sub
or
dec
adc
popf
add
and
xchg
cmp
imul
xchg
dec
push
in
and
cmp
stos
stos
lret
faddl
popf
xor
jo
add
imul
fcomps
decb
pop
adc
test
jmp
in
jo
std
or
or
mov
pop
ret
cmpsb
or
arpl
and
xorl
inc
mov
adc
dec
jb
aaa
inc
loope
jmp
add
outsl
sbbb
ja
cmc
fcoms
jecxz
adc
lcall
test
dec
sbb
inc
sbb
inc
out
std
out
test
mov
iret
stc
xchg
gs
cli
call
cwtl
jno
sbb
aas
lds
inc
movl
mov
popf
or
push
daa
xchg
ljmp
mov
addb
cmp
ds
push
add
push
pop
xchg
sub
xchg
lcall
inc
ret
adc
dec
lcall
mov
roll
inc
inc
inc
push
xor
daa
push
xchg
iret
ljmp
xchg
xchg
cmp
aaa
je
addr16
cli
cmc
daa
dec
ljmp
loop
and
sub
mov
sub
cmp
add
fcoms
mov
jne
movsb
pop
jl
les
lock
rolb
and
dec
inc
frstor
mov
lret
and
repz
add
sbb
nop
lret
js
jle
out
pop
ljmp
adc
xor
jmp
pop
mov
rorl
mov
mov
pop
push
jno
fstpt
aam
mov
movsl
cwtl
incb
sbb
push
int3
gs
mov
int3
sub
sbb
and
inc
sub
in
shll
pop
sub
rolb
mov
arpl
push
shll
xchg
sub
jg
cmp
inc
dec
sub
inc
mov
subl
test
jmp
jg
inc
mov
sub
jnp
adc
push
dec
pusha
mov
les
mov
bound
inc
pop
push
add
mov
lcall
js
xor
sub
addr16
mov
mov
pop
mov
into
decb
rcrb
mov
loopne
mov
cmp
imulb
push
jge
adc
das
fildl
outsb
xor
jmp
lock
lock
fcomps
clc
les
repnz
fimuls
mov
cmp
loope
pop
movsl
dec
and
pop
adc
cltd
leave
xor
lret
insb
ret
or
stc
adc
jbe
mov
int
xor
loope
popa
adc
sbb
cmp
adc
pop
and
jl
inc
dec
or
mov
add
cmpsl
dec
sti
lods
mov
and
pop
pop
popf
inc
lods
push
repnz
fcmovu
push
mov
loope
add
push
mov
sti
mov
add
clc
lea
mov
inc
jne
aad
pop
cmp
cmp
aam
cld
mov
xor
mov
mov
stos
sub
lods
call
pop
xlat
shlb
jle
imul
xchg
push
jecxz
imul
lahf
push
sub
in
loopne
pop
mov
mov
push
mov
xchg
adc
das
stc
push
movsb
fcompl
dec
int3
imul
outsl
mov
push
cld
ja
add
ret
xor
mov
and
mov
movsl
bound
ss
inc
clc
push
adc
lock
mov
cmp
push
stc
and
rolb
push
icebp
push
or
mov
push
enter
sub
into
movsb
out
jo
push
mov
ja
cmp
insl
daa
ret
icebp
pop
je
fwait
daa
sbb
je
mov
mov
insl
mov
jg
in
dec
int
xchg
inc
push
xor
in
mov
scas
xor
cs
add
test
push
or
std
inc
or
or
mov
je
rorl
stos
loopne
int3
aam
test
lds
push
pop
mov
scas
xchg
dec
dec
data16
addr16
adc
enter
xor
dec
data16
adc
popf
stos
shrl
int3
rorl
fldcw
pop
nop
xchg
xor
cmp
imul
and
cmp
es
loope
jo
outsb
add
push
dec
fdivr
inc
mov
dec
outsb
xor
loope
mov
push
add
add
mov
mov
dec
add
jle
or
mov
ficoms
outsb
aaa
cmc
xchg
test
add
xchg
addr16
stc
adc
xor
int
pop
cmp
dec
ds
push
outsl
sub
out
sbb
adc
sbb
outsb
mov
add
repz
mov
xchg
push
js
jb
hlt
lea
loopne
inc
sbb
popa
push
ljmp
ret
inc
icebp
imul
dec
lock
jg
mov
out
pop
in
dec
pusha
mov
push
jb
or
rcrb
jne
push
cld
push
in
mov
in
je
andl
hlt
roll
mov
inc
push
leave
mov
loop
cwtl
adcw
inc
or
es
pop
push
dec
fcomps
icebp
xor
or
pop
pop
mov
in
jmp
push
mov
arpl
movb
popa
cli
lret
les
xchg
out
daa
mov
mov
loop
mov
clc
sbb
cwtl
lcall
jle
cwtl
jne
or
inc
mov
inc
pop
jmp
mov
jb
test
sbb
repz
lock
or
xchg
cmp
adc
test
imul
sbb
lcall
movsb
sbb
mov
pop
mov
inc
adc
insl
fldcw
fwait
xchg
cmp
push
aam
and
shlb
and
cmp
sbb
inc
pop
xor
fwait
cli
mov
lret
gs
enter
adc
adc
pop
pop
sti
fwait
and
es
push
push
dec
inc
fs
push
shl
shrl
nop
int
jnp
out
clc
xor
cs
pop
in
sahf
imul
mov
cmc
movsl
and
pop
xor
out
sub
lods
lret
sbb
movl
ja
mov
xchg
push
insb
add
outsl
aas
pop
jg
pop
pop
adc
dec
push
vmovdqa
cmp
or
adc
cmp
sbb
mov
imul
stc
les
and
aas
xchg
sbb
mov
mov
imul
cs
ja
jns
pop
fimull
outsl
pop
fwait
jb
push
in
fsubrs
cltd
sub
out
int
fnstsw
sbb
cli
xchg
aas
std
stc
push
shrb
push
lods
adc
fstps
insb
jae
sbb
jl
cmp
inc
inc
in
jb
adc
add
cld
mov
or
stos
jb
fs
sub
mov
ljmp
in
mov
xchg
xchg
imul
mov
dec
or
dec
mov
stos
leave
xchg
leave
cmpsb
dec
out
inc
push
mov
pop
cmp
jns
fsts
in
fbstp
xor
test
cwtl
pop
xchg
push
fwait
and
cmpsb
mov
ljmp
std
test
inc
out
lret
adc
idivb
mov
sub
shl
xor
hlt
push
stos
andl
mov
mov
xchg
lock
ret
out
aad
fsubrl
sub
movsb
xor
adc
subl
and
cmp
pop
inc
sbb
fwait
fs
pusha
pop
ja
pop
inc
push
adc
add
xchg
repz
mov
mov
xor
push
fidivl
negl
stos
push
insb
out
adc
insl
mov
adc
pop
lcall
mov
push
mov
sub
mov
mov
cs
imul
mov
sbb
xor
mov
stos
ljmp
int
lret
lods
dec
out
dec
jne
mov
xorb
decl
cwtl
test
sub
sub
into
dec
or
loop
add
fildl
xor
push
sbb
mov
js
out
cmpsb
pop
jecxz
mov
scas
sbb
gs
es
out
imul
rolb
fs
cld
push
dec
mov
mov
ss
out
push
ficoms
fsubrl
gs
inc
add
xchg
les
sti
fwait
pusha
adcl
and
aad
inc
pop
lea
add
pop
movsl
in
xchg
mov
xor
xchg
adc
je
dec
fisttpl
pop
add
jbe
jo
ss
push
pop
mov
and
movsb
cmp
pushf
rolb
bound
movsb
push
and
test
jb
ficompl
movsl
jne
pop
mov
xor
mov
sub
push
cmp
inc
ds
in
jl
enter
push
pop
fwait
insl
lock
lret
mov
bound
imul
xor
ret
movsl
add
sbb
add
pop
jg
xchg
movb
movsb
dec
fidivrl
mov
push
lds
xor
pop
add
cli
hlt
mov
stos
cld
les
cmp
push
ja
mov
loop
movsl
adc
sub
xchg
dec
mov
out
scas
mov
fwait
pop
ror
jno
push
test
repz
fs
xchg
inc
inc
cmp
out
mov
outsb
cmp
imul
cltd
ror
push
mov
mov
decb
push
call
and
negl
mov
xchg
cs
fdivs
or
in
mov
adc
adc
pop
js
and
jnp
out
mov
js
add
dec
jg
add
dec
pop
adc
jge
inc
in
js
cmp
sub
roll
fucomip
and
ljmp
add
enter
sub
dec
into
mov
push
sub
and
push
add
sub
xchg
sahf
or
test
push
adc
add
xchg
clc
mov
lcall
outsb
sbb
popf
lods
xchg
call
pop
push
adc
fstpt
add
mov
mov
addr16
jno
sbb
stos
xor
mov
add
into
add
push
out
dec
lods
jg
orb
push
je
mov
ret
fnsave
push
into
sub
cs
filds
mov
ret
fwait
jb
jp
clc
insl
mov
dec
mov
call
mov
fidivl
mov
scas
mov
cs
loope
inc
repnz
mov
mov
xchg
mov
or
das
out
inc
fstpt
into
xor
jnp
mov
enter
push
push
push
sub
pop
and
xchg
int
mov
or
add
pop
xchg
mov
sarb
or
or
arpl
jns
cmp
js
mov
jp
mov
pop
and
fldl
in
cmc
or
jecxz
movsl
dec
arpl
call
mov
jae
mov
cmp
cmp
dec
push
out
sub
sbbb
fwait
mov
dec
mov
popa
pushf
mov
push
into
jbe
xor
lea
faddl
cltd
int3
arpl
aaa
pop
cltd
int3
xchg
pop
xchg
push
stos
inc
xor
sti
scas
shlb
xchg
mov
loope
pop
test
xor
cmp
je
js
loop
clc
fwait
jno
insl
xor
pusha
sbb
mov
rcrl
mov
inc
pop
pop
rol
stos
xor
movl
jne
jl
pop
mov
inc
leave
orb
lods
inc
adc
addr16
ss
push
ret
int3
sub
cmpb
inc
rcll
or
xchg
pop
add
iret
lea
sahf
dec
dec
es
mov
inc
mov
push
cmc
ljmp
stos
and
rcrl
fildl
fldcw
xor
sub
cli
sti
mov
jl
shll
scas
cmp
or
xor
outsb
push
lods
lds
pop
push
and
ds
int3
jae
xchg
mov
popw
outsl
popa
sub
or
inc
or
push
sub
sub
or
xorl
mov
lds
movsb
cltd
jge
add
push
fdivrl
aaa
inc
add
ds
mov
jo
xchg
in
jae
es
out
dec
adc
je
jo
jge
cli
inc
adc
pop
aad
inc
not
stos
inc
jle
xor
loop
lds
cmc
mov
or
aaa
cltd
addr16
mov
addl
push
or
call
or
stc
sti
jmp
pop
enter
mov
lret
call
mov
or
imul
push
xchg
push
push
aaa
cmp
ljmp
push
sahf
aas
stos
adc
push
mov
cmc
sbb
jmp
jae
xchg
cmp
cwtl
push
fldt
mov
cmpsb
bound
jns
lcall
dec
inc
bound
arpl
jbe
or
push
outsl
out
pop
pop
rcr
es
sub
xchg
js
dec
sub
arpl
adc
sbb
mov
jnp
adc
pop
mov
xchg
lock
lea
mov
xchg
mov
xchg
xor
ret
imul
dec
add
inc
lahf
sti
ljmp
xor
mov
imul
mov
jno
jnp
clc
inc
insb
xchg
sahf
mov
lret
jl
rorl
outsb
scas
push
xor
pushf
xlat
in
xorl
xchg
xor
dec
mov
add
dec
adc
addl
add
push
jno
int3
int3
add
pop
repnz
ret
jmp
adcb
pop
pop
aad
insb
jnp
sub
push
inc
mov
mov
xchg
xchg
gs
jle
lea
and
dec
scas
adc
push
mov
aaa
pop
sbb
xor
enter
adc
or
sahf
cwtl
xchg
dec
out
imul
or
inc
and
dec
loope
inc
push
xor
test
sti
push
nop
mov
das
inc
add
cwtl
lea
mov
push
mov
arpl
dec
sbb
xchg
sti
movsl
mov
fwait
ljmp
pop
or
fcomip
not
int
dec
jns,pn
dec
mov
lods
jae
mov
mov
add
out
rcl
pop
or
je
pop
mov
jo
adc
mov
pop
dec
pushf
loope
pop
adcb
add
sbb
sbb
pop
daa
add
leave
insb
dec
in
hlt
adc
jns
push
pop
roll
push
fldenv
cmp
dec
push
notl
sub
sti
mov
dec
inc
shrl
mov
mov
mov
jmp
pop
lret
dec
inc
aas
cmc
shl
xchg
pop
call
clc
or
in
ja
inc
outsb
mov
or
jmp
push
mov
cmpsl
insb
mov
pushl
xor
mov
xchg
scas
out
jmp
scas
icebp
imul
pop
inc
xchg
mov
xor
cmp
mov
cmp
cli
add
sbb
xchg
scas
xchg
call
lret
clc
cmp
popa
xor
push
lret
addb
insb
ljmp
xlat
cmp
sub
push
out
inc
and
xchg
insb
xlat
popa
inc
outsb
dec
fiaddl
jne
sahf
lds
dec
rorl
into
push
pop
pop
mov
call
xor
mov
aad
mov
movl
jne
pop
test
ja
adcl
scas
cli
mov
mov
and
sti
andb
dec
icebp
das
inc
xor
loopne
mov
mov
call
or
lret
mov
lret
push
cmp
enter
push
cmp
idivb
pop
lods
repz
sbb
mov
cli
dec
clc
lahf
mov
je
lret
inc
lea
in
outsl
push
loopne
test
mov
fiadds
popf
js
sbb
push
adc
pop
andb
mov
mov
fsubr
addb
jp,pt
sub
push
lret
cltd
or
push
push
popl
push
push
scas
icebp
xchg
push
out
out
cmp
insb
fisubl
inc
pop
mov
cmp
ja
ljmp
pop
mov
cmp
dec
push
in
test
nop
sahf
test
and
cmp
fdivrs
jbe
test
push
jl
add
mov
jmp
shl
cltd
or
add
aam
out
dec
add
enter
pusha
jge
push
mov
test
sbb
shlb
outsb
or
mov
repz
adc
rcl
pop
sbb
xor
xlat
inc
jnp
inc
lahf
and
push
scas
inc
xor
add
mov
jle
xor
xchg
out
add
out
lret
jmp
add
fcmove
arpl
xchg
imul
add
jmp
dec
leave
add
pop
pop
fsubs
mov
mov
xchg
mov
mov
mov
in
roll
gs
notl
stos
push
std
loope
lea
mov
lahf
cmpsl
push
mov
push
aad
je
adc
rcll
cmp
pop
roll
dec
nop
xor
outsb
out
testl
ds
lret
lahf
xchg
leave
sahf
xor
jp
mov
popf
adc
es
sub
jp
je
jne
and
push
inc
pop
lods
dec
sbb
cmpsb
outsb
and
popa
xor
out
loop
lahf
rorl
jo
pop
xor
idiv
mov
adcl
cmp
inc
cmpl
pop
sub
and
cld
sbb
jnp
push
inc
xchg
cwtl
pop
sub
lea
mov
jp
fstcw
add
dec
dec
aad
inc
push
cmc
insl
imul
xchg
sbb
sub
nop
mov
into
mov
out
pop
pop
sub
ret
rorb
push
and
pop
call
mov
fwait
aas
leave
mov
sti
xor
adc
push
dec
fimuls
pop
mov
mov
pop
xor
xor
inc
jmp
xlat
cmpsl
xor
mov
push
sbb
aaa
imul
inc
xor
push
shl
loopne
insl
int
push
lcall
insl
sub
xchg
jmp
jne
dec
pop
inc
cwtl
jbe
pop
pop
sub
add
iret
xchg
lret
xor
and
add
loop
and
ds
push
int3
cmpl
mov
inc
xor
ljmp
xchg
pop
push
and
out
fidivrl
jns
mov
cmp
stos
fistpll
dec
and
daa
cs
mov
andb
pop
sarb
xor
iret
push
fucom
aam
nop
mov
lcall
in
lcall
pop
dec
mov
mov
int
cltd
loope
out
jb
xchg
sti
adc
mov
lcall
sbb
test
push
shr
test
or
imul
pop
or
cwtl
inc
jno
dec
dec
les
cs
add
out
mov
je
jl
cmpsl
mov
lcall
mov
movsb
cmp
dec
jle
pop
inc
sbb
ror
pusha
xchg
mov
jae
inc
adc
and
imul
lret
lea
popa
push
das
mov
mov
xlat
jp
mov
movsl
repz
xor
pop
push
lret
jb
mov
lret
roll
ss
sub
mov
out
test
sbb
jne
daa
fists
add
lret
mov
adc
fwait
test
pop
push
loope
jb
push
sbb
jl
xchg
iret
add
mov
shll
mov
push
mov
aam
es
lcall
adc
push
pop
mov
pop
imul
and
test
imul
mov
dec
jno
pop
sub
in
movsl
sahf
mov
pop
sbb
rclb
repz
dec
and
pop
std
mov
int3
test
ljmp
cmc
xor
or
pop
sbb
cmp
outsb
inc
mov
je
out
stc
lea
sti
mov
fstl
leave
adc
lcall
or
lahf
lea
in
fisubrs
sbb
mov
insb
test
scas
mov
or
rcrb
add
cwtl
mov
sub
mov
call
stc
rcrl
aaa
testl
adc
cmc
mov
int
loopne
nop
imul
stos
stos
arpl
adc
lea
rcrl
jp
punpckldq
mov
movsb
cs
or
hlt
dec
xchg
pop
or
jmp
sbb
call
or
xlat
push
and
aam
sbb
sbb
aad
cmp
insl
int3
in
cmp
fldcw
pop
xchg
imul
lcall
cmp
cmpl
sub
inc
dec
in
sbb
xchg
jge
mov
test
push
add
jge
stc
sub
add
jb
fstp
xchg
fistpl
sub
ljmp
mov
sti
cmpsb
lcall
pop
xchg
mov
cld
or
shrl
pop
jg
int
mov
out
popa
add
add
mov
xchg
or
push
jno
lods
jl
jne
sbb
or
jl
push
inc
cmp
mov
insb
and
arpl
stc
push
dec
icebp
xlat
rcll
clc
movsb
clc
jnp
mov
mov
int
sar
xor
xor
jle
or
sub
add
adcb
or
sub
add
xor
xchg
in
add
push
pop
xchg
rcl
jno
outsl
cmp
aad
cmp
and
mov
sub
jmp
divl
test
sahf
gs
add
dec
sub
adc
pop
sbb
addr16
rolb
xchg
sub
xchg
and
adc
adc
push
xor
xor
ficompl
push
pop
xchg
mov
icebp
cltd
pop
pop
bound
cld
xchg
leave
adc
pop
mov
and
cmp
fnstsw
rorl
shrb
add
xchg
icebp
pushf
outsb
mov
insl
or
xor
decl
and
lods
and
out
add
mov
lods
pop
fs
jae
sub
pop
shll
mov
ss
cwtl
jg
push
les
dec
cmp
enter
testb
in
pop
mov
push
hlt
mov
adc
outsl
xchg
test
xor
pusha
arpl
mov
lods
es
enter
out
daa
mov
fwait
lret
pop
pusha
call
daa
loope
pop
das
stos
push
cmpl
cmp
add
mov
js
add
mov
mov
shrl
fdivr
cli
pop
in
add
mov
or
pop
ret
inc
or
xchg
ret
jbe
sub
sahf
data16
jne
mov
daa
and
xchg
scas
xchg
jb
add
mov
xor
xchg
mov
popa
fldt
dec
sbb
mov
jg
push
idivl
test
int
pushf
mov
and
jg
fmuls
add
xor
dec
or
and
or
lds
test
xchg
sub
insb
pop
mov
call
cltd
enter
jp
mov
or
int3
lret
cmpsl
sub
lret
lock
cmp
rorl
sbbb
sub
in
mov
sahf
jl
lret
cld
fnsave
fiadds
sub
ror
sarl
mov
daa
leave
inc
sbb
mov
mov
clc
or
call
xchg
xchg
or
inc
adc
push
test
movsb
sbb
repz
lea
popf
and
lgs
mov
add
pop
lods
andb
push
cld
jge
ret
dec
cmpl
mov
jne
mov
or
cld
cmp
test
sbb
dec
addr16
in
decl
fmul
outsl
mov
adcb
push
push
test
popa
ss
fdiv
ret
insl
mulb
clc
iret
push
push
mov
sbb
mov
popa
call
lds
insb
pop
dec
jmp
xlat
xchg
pop
xchg
dec
imul
mov
pop
sbb
xor
mov
nop
cmp
ds
rcll
orl
sbb
cmp
testl
inc
pop
inc
mov
pop
outsb
xlat
or
mov
and
xor
ret
push
push
fmul
jnp
inc
xchg
sub
fdivr
out
mov
mov
int
push
pop
fadds
fs
mov
push
fimull
jge
dec
xor
xor
push
ds
mov
stc
sub
xlat
loope
fisubs
movsb
lods
insb
inc
mov
or
adc
and
aaa
jmp
pop
xchg
or
jb
cmp
cmp
lods
mov
xchg
mov
add
push
sbb
push
jno
inc
lea
push
sbb
xor
cltd
pop
inc
mov
push
mov
pop
js
pcmpeqb
xor
test
xchg
sbb
rclb
push
loope
addl
ja
cmp
mov
orb
loopne
pop
shlb
cmp
dec
sbb
dec
xor
in
or
jg
sbbb
insb
pop
into
sub
daa
mov
fildll
sti
jo
orl
inc
push
jle
gs
inc
push
jb
dec
push
leave
push
pop
xchg
dec
mov
xchg
cmpsb
outsb
sti
cld
pop
jecxz
lds
in
cltd
ret
faddl
sti
prefetch
mov
call
insl
mov
sbb
outsl
push
xchg
add
mov
or
testb
and
mov
adc
add
inc
mov
xchg
xchg
mov
pop
ss
dec
xchg
repnz
xchg
imul
add
add
std
dec
cmpsl
outsb
int3
mov
jl
and
sbb
xchg
xor
mov
or
mov
stos
xor
pop
add
cmp
negl
mov
adc
sbb
cld
and
aam
cmp
cld
push
arpl
mov
scas
nop
cmc
enter
dec
xor
push
jge
and
add
sub
rcll
mov
out
mov
sbb
sbb
sar
inc
cmp
mov
jg
jmp
int3
jae
adc
movsb
lea
sbb
sbb
imul
shrl
ret
cmp
pop
pop
mov
dec
mov
shl
shrb
pushf
jg
daa
repnz
fmulp
imul
cmp
fsubl
cmc
addr16
pop
pop
je
out
inc
test
filds
sbb
and
out
in
add
jg
mov
test
or
fcoms
sbb
sub
inc
dec
scas
jecxz
icebp
sbb
stos
mov
ret
inc
rolb
rcrb
in
inc
push
jl
mov
aam
push
lahf
in
push
adc
shrl
cmpsb
addr16
test
aam
dec
xchg
in
push
test
xchg
sub
sahf
in
jmp
subb
stos
cmp
dec
mov
sbb
gs
inc
jns
mov
mov
mov
jle
or
jae
adc
xchg
dec
fcoml
pop
ja
sub
cmp
ret
std
adc
mov
xchg
mov
fwait
int3
adc
sbb
fcomi
ds
stc
jp
out
sar
sub
imull
adc
adc
test
in
pop
jecxz
mov
sub
and
mov
repnz
jmp
inc
daa
jmp
mov
out
jecxz
cmpsb
jae
fbld
add
cmp
test
mov
shl
add
in
mov
adcl
pop
xor
mov
lods
jo
lods
shlb
mov
lods
ljmp
shlb
rcrl
insb
insl
mov
mov
decb
cmp
test
movsl
fwait
mov
xor
pushf
ds
pop
jns
js
bound
scas
fsubl
inc
ret
stos
movsb
mov
sti
cmpsb
ljmp
out
dec
push
fdivrs
xorb
jo
cmp
insb
jg
cs
cwtl
loop
insb
jmp
push
cmp
fdivrl
movsl
int3
sbb
cmpsb
push
xchg
add
ret
push
ret
insl
cmpsb
arpl
xchg
jno
jno
iret
jg
clc
and
push
or
aaa
cmp
and
add
push
leave
pop
sbb
ja
insb
mov
aas
stc
lret
jg
je
out
into
shll
sub
jno
lds
mov
sbb
sbb
or
pop
cmpsb
sbb
xchg
dec
adc
add
cmpsb
and
cwtl
cmp
inc
inc
in
add
gs
xchg
inc
sbb
cld
sbb
test
mov
mov
cmp
pop
dec
xor
lea
cmp
xor
out
daa
jno
lods
mov
mov
push
and
dec
mov
test
ds
aad
mov
lret
das
sub
icebp
xor
add
movsl
push
outsl
mov
and
lock
adc
inc
lds
pop
mov
pop
loopne
ljmp
xchg
stc
js
adc
or
out
jae
mov
loope
pop
pop
pop
shrl
fwait
inc
mov
push
stos
in
mov
std
movb
fnsave
lahf
jmp
scas
mov
or
lret
cmp
sub
mov
sti
adc
xchg
jge
cmp
fstps
push
in
loopne
or
lock
lods
add
repz
pop
sti
sbb
sub
inc
cwtl
lods
mov
sbb
in
add
test
bound
subl
and
pushl
fiaddl
aam
int
mov
mov
cmp
push
cmc
jnp
test
aam
or
outsb
orps
fisubrl
test
push
imul
adcl
inc
xor
addl
cli
xor
xchg
xor
cmp
cmp
add
mov
stos
inc
adc
push
lahf
jg
in
imul
inc
pop
push
and
sbb
mov
sbbb
ja
popa
lcall
lcall
xchg
sub
and
ja
out
addr16
and
stos
aas
lahf
sbbl
push
iret
sub
scas
ja
pop
sahf
mov
pand
or
mov
shl
mov
or
or
or
xor
loope
lock
adc
add
mov
in
sub
iret
jo
in
pop
dec
dec
in
mov
pop
sbb
push
or
jp
mov
jl
add
inc
add
mov
mov
mov
inc
cmpsb
pop
gs
inc
sti
and
sub
cmp
lds
scas
je
push
jnp
push
jne
test
mov
cmc
test
cmp
lea
xor
test
sar
and
push
add
xchg
out
push
loope
mov
jmp
inc
cmp
mov
mov
stc
mov
test
lods
jmp
dec
jns
jo
inc
imul
jns
sarb
pop
cmpb
data16
cmp
jmp
test
pop
mov
ja
mov
sbb
test
out
push
lock
sub
jge
adc
inc
sub
dec
rol
icebp
iret
jnp
jo
nop
xchg
dec
fs
rolb
test
xor
push
xchg
mov
push
mov
scas
outsb
pop
fildll
dec
neg
sbb
aaa
pop
lea
mov
ret
lods
or
lock
dec
iret
hlt
push
push
xlat
xchg
cmp
push
fsub
xchg
gs
cmp
inc
in
xchg
sub
sbb
ret
outsl
inc
outsl
jae
int3
stos
jl
xchg
fcoml
mov
sbb
cltd
leave
push
mov
push
xchg
stos
fcompl
or
cli
dec
sbbb
notl
xor
jnp
push
rol
lea
or
jle
mov
jno
iret
sub
aaa
mov
filds
loop
jp
adcl
movsl
mov
lret
dec
and
mov
mov
jge
and
fdivrs
mov
scas
int3
pop
pushf
adc
push
cmp
pop
shlb
clc
adc
mov
in
lods
inc
out
in
mov
jae
pop
syscall
inc
xchg
pop
mov
inc
popa
outsb
jp
popa
adc
pop
and
jbe
imul
rorl
jnp
xor
ljmp
sub
dec
push
or
cmp
xchg
mov
sti
scas
clc
jmp
xlat
lahf
movsl
shll
shl
aad
icebp
cmpl
jg
jmp
lods
push
test
js
sbb
daa
xchg
loope
es
outsl
inc
stc
call
in
cmpl
xchg
pop
cmpsl
bound
in
sarb
or
sub
lret
sbb
adc
push
cmp
je
jg
push
xor
push
mov
into
jmp
jge
fidivs
xor
mov
lock
mov
mov
jo
popa
cmp
mov
jp
lods
and
loope
std
jne
xchg
push
jg
add
push
add
cmp
frstor
inc
add
xchg
lds
in
rorl
push
mov
cmp
test
mov
sbb
jle
mov
pop
push
sbb
sbb
mov
aas
sahf
xchg
adc
inc
inc
dec
cmp
jl
cmp
popa
shr
daa
call
xchg
jae
daa
je
pop
fildl
in
rcll
leave
xor
push
sub
mov
frstor
mov
mul
or
mov
scas
dec
gs
add
sbb
roll
mov
pop
add
jb
add
mov
push
add
adc
xlat
idivb
movsb
movsb
jp
fisubl
pop
inc
xor
cmp
jnp
out
pop
fs
insb
nop
inc
jle
xchg
insb
sub
in
mov
xchg
lahf
test
sbb
cmp
pop
shl
push
mov
sub
fnstenv
cmp
jns
xchg
idivl
in
xor
arpl
fstpl
jnp
jae
orl
push
repz
add
test
push
mov
sahf
xor
cmp
add
pop
inc
adc
sub
shll
movsb
cltd
push
mov
jmpw
mov
ret
xchg
adc
mov
xchg
or
xlat
loope
xlat
add
fstl
incb
pop
hlt
popl
das
ret
fadds
xchg
lods
jb
or
adc
add
mov
jns
mov
push
jl
or
jb
int3
es
je
fstl
dec
xchg
scas
and
enter
vorps
std
adc
push
cs
inc
pop
sub
ret
fsts
xchg
adc
push
or
fstps
movsb
pop
pop
dec
shrl
pop
and
leave
test
mov
xchg
into
mov
mov
lock
lock
mov
dec
dec
fcomp
dec
stos
cmpsl
cwtl
xchg
pop
and
pushf
pop
test
out
pusha
push
mov
clc
jg
and
rcr
xlat
idivl
movsb
ljmp
inc
popa
movsl
repnz
imul
mov
movsl
outsl
pop
in
mov
int3
push
mov
sub
out
test
push
xor
pop
out
int
mov
xor
ss
pusha
mov
and
rcll
int
push
jbe
jecxz
int
cmpsb
ja
icebp
sub
mov
pop
in
fmuls
sub
inc
sbb
mov
xchg
mov
scas
inc
add
fcmovnb
jmp
and
pop
jle
pop
jg
fdivrs
sbb
aas
push
mov
out
sbb
hlt
push
ror
std
shl
lcall
dec
jmp
or
sbb
push
and
sbb
shlb
xlat
jmp
pop
lahf
or
or
out
addr16
cmpsl
mov
fidivs
aam
ss
jp
pushf
int3
orb
add
adc
outsb
jb
push
aaa
adc
push
movsb
jns
jbe
or
andl
sub
lcall
sbb
jp
js
jl
fidivl
xchg
cmp
cmp
dec
dec
or
sar
nop
xchg
scas
mov
lods
in
cwtl
mov
fstpt
cltd
cld
pop
cmp
loop
addr16
rcrl
xchg
xchg
push
pusha
mov
inc
mov
cmpl
jb
sahf
or
inc
jp
mov
xor
cmpsb
and
xsavec
cltd
iret
mov
jg
xchg
outsl
cmp
stc
test
jmp
push
in
adc
lock
xor
push
sahf
inc
jecxz
mov
pusha
push
sub
daa
lods
es
xchg
cmp
into
xlat
shl
jmp
leave
jnp
fists
add
mov
push
sub
pop
fadd
push
add
stos
adc
mov
iret
rolb
pop
pop
mov
sbb
arpl
or
or
pop
jns
lcall
je
in
lea
daa
adc
sub
xchg
mov
dec
dec
aam
out
decl
mov
sbb
cmp
sbb
mov
mov
js
adcl
fwait
lea
pop
sbb
lret
gs
push
std
nop
push
adc
shlb
push
lock
add
test
push
xor
jbe
addb
popf
xor
push
pop
xor
add
das
and
xor
cwtl
je
dec
das
dec
aam
cs
lcall
inc
mov
pusha
push
cli
dec
mov
mov
das
add
aaa
inc
imul
pop
test
scas
pushf
in
test
leave
add
lret
cmp
pop
xor
addl
inc
xchg
sbb
mov
xlat
gs
or
fldenv
push
test
sbb
add
cwtl
pushf
mov
xlat
popf
dec
cmp
xorb
stos
push
incl
add
sub
movsl
add
test
fsubrp
ja
out
aaa
jl
ja
or
test
out
mov
mov
cmpsb
adc
jg
mov
mov
addl
rolb
sbb
mov
or
outsl
push
mov
and
xchg
movsb
pop
xchg
je
jno
addr16
sbb
test
cmp
fimuls
mov
out
sub
imul
arpl
enter
mov
pop
or
jno
shlb
xchg
pop
gs
and
push
test
or
and
lds
sbb
or
mov
sub
mov
scas
jmp
pop
jno
mov
arpl
int
cmp
mov
add
pop
subb
adc
xchg
lods
xor
sub
and
sbb
xlat
add
fldenv
mov
add
sbb
loopne
fcomip
sarb
cs
add
inc
pop
loope
dec
sbb
loop
mov
data16
out
jo
or
decb
add
and
fstl
lret
sub
push
pop
jl
push
push
imul
cmc
cld
dec
or
jecxz
mov
jl
out
add
imul
pop
aas
movsbl
js
mov
xchg
inc
jns
dec
jae
cmp
and
jmp
mov
fmul
push
sbb
dec
hlt
sub
mov
out
out
and
xchg
out
and
jge
in
adc
jg
sub
fs
sub
aaa
clc
test
in
push
mul
jl
lods
xor
ret
test
xlat
and
sbb
add
pop
in
adcb
push
ret
xchg
mov
cmc
lret
inc
movsb
int
dec
add
ss
movsb
jbe
or
inc
mov
es
push
and
xor
xchg
mov
pusha
lock
mov
lods
rorb
cmpsl
or
aaa
mov
jl
fistpl
mov
fcompl
add
pop
int3
neg
cmp
out
sub
daa
dec
mov
js
pusha
cwtl
mov
mov
cmc
or
les
fnstenv
mov
xchg
ret
lods
xchg
or
lret
mov
or
xlat
outsb
jl
outsb
or
add
call
mov
dec
push
stc
adc
fists
outsl
pop
jge
xorl
adc
xor
xlat
icebp
sarl
sbb
or
xchg
adc
movsl
insl
incb
push
xchg
cld
jg
xor
orb
inc
cmc
cmpsl
mov
fdivrl
repz
rolb
fmull
cmp
pop
imul
nop
or
inc
xor
and
xor
push
xchg
insb
mov
cmpsb
mov
pop
pop
and
daa
dec
hlt
popf
jae
adc
mov
jne
lahf
cmp
jg
dec
pushf
rorl
imul
inc
inc
rorb
push
lods
inc
jb
mov
dec
hlt
in
rcrl
sbb
mov
sub
into
popf
iret
subb
jo
jno
nop
mov
sbb
xor
adc
stos
xor
test
adc
stc
add
rcrb
adc
pop
push
movsb
rcl
sub
adc
call
icebp
loop
adc
out
cmpsl
mov
fucomp
mov
daa
jnp
push
ret
ljmp
test
repz
scas
or
push
xlat
jno
mov
int
popf
adc
js
or
dec
imul
mov
add
pushf
xor
scas
lea
lahf
xchg
in
cmpsb
jmp
test
pop
xor
xchg
dec
and
rcrb
adc
outsb
lret
sbb
lcall
aas
shlb
xchg
jns
or
sbb
iret
lahf
aad
bound
adc
lea
mov
movsb
fisubl
cltd
into
push
pushf
scas
insb
iret
jne
mov
jl
movl
das
push
xchg
add
ret
ss
sub
jl
jne
bound
outsb
cmp
mov
cmpsl
cmp
shll
out
mov
or
fnsave
and
jnp
cmc
sahf
jmp
mov
in
xchg
in
shll
jle
bound
sub
addb
cmp
xor
xchg
adc
test
dec
lds
xchg
repz
cmp
mov
int
cld
fidivl
xchg
outsl
or
sbb
pop
jo
mov
lods
sub
les
fildll
sti
out
fcompl
stc
and
and
fmul
stc
pop
and
imul
cmp
jge
ror
dec
xchg
test
nop
scas
lcall
push
jno
push
negl
sbb
mov
sahf
pushf
insl
jb
ja
jns
sbb
mov
repnz
faddl
popa
cmp
jno
adc
jp
icebp
popf
xchg
sbb
mov
push
lret
and
cwtl
je
lahf
adc
pop
shlb
ljmp
popf
ficoml
pop
inc
or
mov
fs
dec
fwait
insb
aad
jo
mov
mov
and
stc
jecxz
imul
dec
mov
mov
adc
mov
out
mov
loop
jl
fisubl
popa
loop
stos
fcmovbe
sti
das
or
push
das
mov
sti
sti
stos
mov
mov
lret
sub
or
xorl
jo,pt
sbb
lds
push
arpl
inc
adc
or
mov
lahf
pushl
inc
daa
dec
add
in
cmp
arpl
sahf
pop
jg
jp
add
and
shrb
adc
lret
fstpt
adc
lret
jo
sti
lods
repz
test
cs
or
scas
stc
lahf
mov
les
xchg
mov
lds
sbb
xchg
xchg
adc
rcl
mov
pop
jns
insl
je
scas
cwtl
shrl
mov
mov
sub
mov
mov
shlb
push
cmp
stos
push
fisttpl
out
adc
mov
adc
mov
jbe
pop
loop
sub
or
out
test
or
lret
fldcw
cmpsb
mov
lret
cmp
xlat
mov
test
das
js
xchg
push
iret
xchg
in
sbb
sub
imull
jl
or
cmpsl
sub
sarl
xor
mov
popf
fdivl
inc
out
adc
hlt
mov
fnstsw
pop
cld
adc
dec
dec
pushf
in
aad
xor
test
push
popa
sub
xchg
pusha
add
cmp
sbb
hlt
and
cmpsb
jnp
imul
inc
in
pop
callw
jl
adc
and
imul
add
imul
jp
mov
cltd
arpl
test
xchg
add
repz
xor
mov
roll
mov
xchg
sub
cwtl
jmp
mov
call
adc
mov
das
lods
stos
pop
rorl
int3
inc
push
enter
fnstenv
into
out
mov
out
dec
std
mov
loopne
sub
pop
adc
gs
inc
or
popf
fildl
mov
xor
xor
adc
outsl
cmp
arpl
sub
pop
mov
jns
pop
jbe
mov
push
push
stc
sahf
adc
iret
daa
pusha
bound
icebp
daa
mov
lcall
jmp
jno
sti
adc
or
mov
outsl
push
sub
aas
or
test
xchg
mov
and
outsl
out
pop
mov
jns
ret
xchg
jnp
mov
xor
add
pop
xchg
test
mov
pop
iret
mov
dec
pop
or
push
inc
xor
enter
in
or
sub
jge
adc
mov
lods
inc
mov
and
stos
push
out
adc
push
xor
push
mov
push
jge
outsl
rol
pop
dec
xor
in
adc
out
lahf
dec
jae
or
aas
sub
fisttpl
leave
xlat
fs
ds
mov
cmp
jl
dec
jl
jns
iret
sub
hlt
cli
leave
xchg
xchg
aam
push
test
mov
mov
aas
ret
sbb
push
xchg
inc
es
aas
pusha
push
pushf
repnz
ja
sahf
mov
jnp
jns
and
int3
fadds
lahf
ret
or
sbb
dec
pop
mov
fs
xchg
and
mov
pop
push
outsl
sub
jecxz
add
xchg
leave
cli
xchg
mov
subb
outsb
lock
cli
scas
outsl
popf
push
mov
out
fisttps
sbb
int
int
or
dec
add
or
pop
inc
out
or
adc
adc
sbb
push
inc
mov
aaa
xor
sbb
mov
xchg
mov
pop
aas
jns
shll
call
pop
test
stc
dec
pushf
stos
jns
fsubs
out
jae
add
icebp
sbb
or
loop
mulb
mov
adc
inc
or
pop
addl
ja
fwait
inc
mov
pop
fidivs
sbb
fldt
ja
pop
push
lods
add
test
mov
test
and
ficoms
push
test
push
add
mov
pop
stos
mov
test
mov
aas
lret
mov
mov
or
mov
and
into
cmc
push
or
or
sbb
push
out
in
and
xchg
xor
mov
push
xchg
insl
xchg
mov
add
mov
fdivs
mov
fbstp
shll
jl
jecxz
aad
mov
xor
mov
jecxz
cmp
sbb
sub
enter
ds
insl
inc
mov
xor
xor
mov
sbb
mov
mov
and
add
lahf
fbld
in
lds
cmp
fnstcw
sbbl
dec
lret
push
cltd
lods
push
pusha
sub
fwait
xor
ret
mov
cltd
pop
pop
pop
xorl
pop
sub
lcall
inc
pop
or
jno
inc
xchg
or
xchg
cli
scas
popa
sub
mov
xchg
push
out
dec
mov
fldl
fbld
rcll
inc
add
sbb
dec
push
aas
shlb
jne
in
lods
daa
div
xchg
adc
cmp
fcoms
cmpsb
mov
call
cmpsb
jb
sbb
idiv
mov
or
icebp
push
push
rcr
int
push
mov
ficoml
pop
loop
aas
ljmp
lcall
mov
xorl
sbbb
lcall
mov
lds
test
cld
mov
shrb
jge
faddp
cmp
add
call
or
push
jge
mov
test
les
out
fsts
pop
daa
jnp
mov
ret
xor
jae
fdivr
sbb
adcl
pop
add
mov
test
sti
mov
push
sti
inc
jns
jb
js
xor
xor
jecxz
inc
xlat
subl
lods
sub
adc
out
xchg
add
jo
sbb
cmp
sbb
or
jne
rorl
popa
aad
insb
lea
jg
mov
sbb
shll
add
fnstcw
rclb
and
sbbb
lcall
outsb
push
xlat
test
in
mov
add
xor
repnz
int3
jns
sub
stc
dec
cmp
xor
fdivp
inc
test
mov
out
ds
xchg
ret
and
int
jp
adc
dec
ljmp
inc
cmp
scas
and
cmp
ret
mov
inc
sbb
pop
or
pop
xchg
mov
adc
lcall
sub
xchg
and
sbb
int3
in
pop
jp
repnz
xor
sub
out
xor
pop
outsl
out
xor
iret
iret
inc
aas
ficoms
jmp
add
cltd
and
push
loopne
and
mov
int
pop
inc
or
push
and
mov
mov
hlt
inc
mov
jae
pushf
shrb
or
and
jbe
push
ret
mov
jge
xor
pop
clc
std
fisubs
inc
fcmovb
sahf
xlat
lahf
push
test
mov
mov
cmp
addr16
movsl
int
xchg
mov
mov
lds
jbe
fs
mov
shrb
add
cs
idivl
fisttpl
fdivl
aad
ret
mov
and
pop
push
jno
fisubrl
icebp
clc
scas
push
cld
xchg
push
pop
popf
std
cmpsl
pop
dec
pop
movsb
sub
mov
xor
ret
mov
cmp
and
push
push
test
pop
outsb
adc
dec
inc
pop
arpl
and
loop
sub
cmp
push
and
jbe
adc
mov
push
push
popf
roll
cmpsb
and
dec
fdivrl
jg
jp
mov
movsb
or
inc
out
cmp
mov
sub
ss
and
jmp
cs
ret
pop
daa
sahf
cmp
inc
lock
test
inc
insb
cwtl
jo
add
repz
daa
sub
mov
xor
inc
mov
sbb
push
nop
ret
cld
decl
ja
sub
sti
jge
xchg
imul
add
mov
lret
sti
cmpsb
sub
fsts
fwait
icebp
sub
test
push
jb
mov
cwtl
sub
movsl
jns
or
jbe
loopne
mov
aas
repnz
rcll
pop
lods
fsubl
pop
in
dec
push
jmp
jg
add
inc
mov
mov
dec
mov
imul
or
mov
jbe
cmp
mov
repz
xchg
aam
mov
es
popf
mov
daa
push
jg
mov
sbb
mov
mov
xor
adc
cmp
fdivrp
outsl
mov
fwait
jg
or
pop
sahf
mov
add
out
cltd
stos
out
jmp
mov
sub
loop
scas
pop
mulb
inc
or
je
shll
xorl
xor
mov
aas
push
int
enter
jne
xchg
sbb
and
mov
outsl
lea
enter
sub
add
iret
jl
xchg
test
cmpsl
fdivp
push
sub
imul
add
xor
aas
add
int3
ljmp
cmpsb
test
pop
in
subw
cmpsb
cmp
adc
sbb
push
mov
push
mov
pop
cmp
adcb
loop
and
je
dec
mov
je
aaa
inc
fwait
dec
inc
and
inc
stos
rorl
scas
dec
outsl
dec
push
mov
imul
movsb
inc
mov
repnz
jb
jbe
and
xlat
push
mov
xchg
adc
imul
stc
dec
and
push
add
mov
cmp
lods
mov
aas
xchg
xchg
lock
sbb
orb
mov
jl
push
stos
movsb
out
sub
add
adc
fadd
jg
xchg
push
aam
out
add
mov
jbe
adc
xor
or
or
adc
mov
jle
xchg
shrl
jae
out
cmpsl
mov
xchg
test
mov
rcl
push
cmpsb
test
dec
addr16
fldcw
pop
lcall
cmp
cmp
pop
jmp
fldcw
xchg
mov
cmp
xchg
scas
cmp
xlat
loopne
repnz
mov
mov
gs
bnd
adcb
dec
test
arpl
inc
xor
fnstenv
fisubrs
push
std
jno
xchg
or
fwait
push
push
jnp
xchg
outsb
ret
mov
fistps
xchg
aaa
push
out
cmpsl
mov
mov
mov
sub
out
fwait
cltd
out
xor
dec
mov
lea
addb
js
pop
mov
mov
pop
jmp
and
mov
mov
into
add
in
push
lret
int
iret
loope
xor
mov
sub
loop
sbb
loope
int3
shll
sbb
push
ljmp
adc
int3
lahf
jnp
xchg
mov
add
push
and
dec
dec
aas
xchg
bound
adcb
sbb
mov
bound
lret
dec
iret
mov
lahf
and
mov
dec
hlt
mov
sbb
test
sub
data16
imul
inc
mov
pusha
jecxz
lcall
je
mov
out
push
adc
incl
mov
pop
daa
sti
adc
stc
arpl
fiadds
scas
std
ret
adc
xor
addr16
mov
roll
xor
clc
in
mov
jae
jle
cmpsb
sarl
out
pop
jmp
out
mov
shrb
jns
mov
dec
push
inc
lret
inc
inc
movsl
dec
nop
mov
mov
movsb
xchg
lds
hlt
mov
mov
dec
pop
adc
inc
ljmp
dec
cmp
and
adc
mov
xchg
and
lcall
inc
cmp
pop
jnp
addr16
testb
cmp
popa
dec
pusha
into
adc
pushf
and
in
xor
cltd
enter
push
mulb
shrl
sub
inc
mov
fs
aad
stos
push
iret
ljmp
mov
scas
cmp
fmuls
pop
and
stos
rorl
push
mov
clc
cmp
negl
lea
pop
sbb
adc
and
sub
imul
mov
dec
jae
dec
inc
shlb
dec
add
pop
out
hlt
inc
inc
loope
xchg
dec
cmp
ja
jne
sbb
sbb
sub
xchg
cmpsl
ret
xorl
dec
pop
sbb
and
inc
in
test
nop
xor
mov
ficoms
repnz
shlb
int
cmp
fdivrl
push
pusha
lret
cmove
xchg
das
jecxz
xor
cwtl
cmp
ss
push
and
pusha
outsb
xor
push
fdivrs
jge
sub
xlat
mov
and
aaa
and
mov
xchg
pop
push
or
test
lds
out
and
int3
fwait
pop
cmp
aam
add
push
sbb
lret
mov
xor
xchg
dec
sarl
or
jae
hlt
test
push
pop
jmp
pop
mov
lret
arpl
clc
ss
testb
imul
or
fimuls
sub
outsb
adc
add
movsl
or
xchg
pop
dec
out
fildl
push
lods
mov
pop
add
mov
inc
cli
sub
jle
inc
mov
mov
xchg
add
cmp
lret
testl
jae
lock
test
arpl
cmc
add
push
adc
pop
cmp
cmp
or
stos
and
adc
scas
pop
mov
into
mov
scas
ss
adc
push
mov
lcall
inc
or
aam
xchg
jo
jb
inc
pusha
fldcw
ret
xchg
push
imul
call
jns
fnstsw
adc
ret
xchg
in
sub
jb
xor
push
fsubrs
sbb
mov
js
loopne
nop
sbb
clc
mov
dec
out
dec
cmp
ljmp
inc
in
xor
repnz
dec
lret
stc
dec
jnp
sub
into
adc
enter
dec
or
arpl
stos
pop
and
xchg
ljmp
imul
pop
sti
mov
xchg
dec
pusha
jne
and
mov
lret
mov
inc
hlt
xchg
cmp
rcrb
adc
push
xor
mov
testb
mov
jnp
push
loopne
fs
mov
add
jmp
pop
pushf
jbe
xor
pop
push
das
pushf
xchg
leave
in
lret
jae
or
pop
dec
xor
pop
out
pushf
mov
mov
push
cs
inc
pusha
sbb
fstps
rclb
mov
arpl
cmc
mov
fadds
cmpsb
xorl
int
dec
sahf
add
jp
add
pop
push
dec
out
ret
pop
or
mov
imul
jbe
fwait
xlat
scas
pop
mov
mov
hlt
mov
gs
mov
xchg
mov
faddl
lods
aaa
mov
cltd
daa
dec
add
inc
mov
xchg
jb
sbb
inc
call
inc
pop
enter
mov
add
dec
enter
push
ret
cmp
lret
dec
xchg
or
dec
mov
or
fcoms
movsb
scas
dec
rcll
loope
mov
iret
into
shlb
dec
dec
xchg
lret
jo
in
daa
or
adc
sub
mov
and
push
aaa
hlt
inc
cmp
out
es
pop
movsl
jg
ds
imul
xor
lcall
aad
imul
adc
aad
xor
imull
les
or
int
lods
lret
leave
cli
adc
dec
sub
cmc
cmp
jp
es
jmp
lock
cmpsl
xchg
dec
repnz
mov
into
xchg
iret
and
fwait
hlt
les
xchg
jae
pop
mov
push
cmp
inc
cmc
mov
inc
pop
push
mov
repnz
and
je
ja
stos
add
test
outsb
or
mov
mov
jnp
test
loopne
loope
icebp
sub
xchg
xchg
push
jne
or
push
inc
mov
lahf
in
jne
adc
mov
nop
clc
sarl
push
test
fidivrl
add
loopne
dec
mov
dec
into
int
sbb
scas
js
mov
subl
rolb
mov
movsb
mov
in
mov
out
mov
jge
stos
mov
stos
ret
pop
test
adc
xchg
xchg
dec
xor
cwtl
cmc
adc
pop
sarb
ljmp
mov
xchg
and
cwtl
in
jo
pop
jae
cltd
push
jae
jnp
shlb
or
lahf
sub
cmp
or
ss
mov
js
add
pop
xchg
sub
xchg
push
rcl
xchg
mov
test
outsl
out
in
inc
xor
popa
pop
les
ret
mov
sbb
inc
mov
mov
int3
jb
pop
into
sti
cltd
fs
xchg
jle
inc
inc
pusha
pop
or
add
xor
mov
add
mov
lea
inc
pop
xchg
icebp
pop
push
add
arpl
es
jg
int
jmp
or
and
push
sbb
inc
sbb
xor
pop
cmpsb
decb
add
jg
xor
loopne
aas
and
loope
sbb
add
jo
cmp
inc
pop
dec
add
jg
mov
ret
jo
outsl
sub
mov
add
test
stos
stos
inc
jecxz
fstl
iret
mov
sub
sbb
addr16
cld
mov
push
hlt
mov
jbe
rcrb
xchg
sub
jae
sub
mov
cmp
and
lods
dec
out
xchg
dec
fistpll
push
outsl
sbbl
mov
pop
stos
insl
pop
in
out
adc
push
mov
push
icebp
pop
add
mov
jb
add
cmp
jae
aad
movsl
push
mov
mov
and
call
sbb
xchg
ljmp
into
add
jp
out
ret
loop
stos
cmp
into
mov
fidivrs
or
push
jnp
stos
xchg
fwait
loopne
fdivrs
inc
stos
jecxz
into
jbe
or
test
arpl
cltd
ds
int
pusha
add
mov
inc
jb
loope
lock
push
cmp
rol
mov
mov
add
jo
jmp
xchg
stc
xchg
sbb
pop
jp
push
mov
je
or
outsl
cmpsl
pop
pop
cmp
imull
cmp
jp
or
call
mov
addb
imul
or
sahf
aam
xchg
leave
in
mov
mov
hlt
pop
arpl
mov
xchg
sar
and
test
xchg
pop
repnz
pushf
ds
lds
das
mov
popa
in
mov
cmp
js
jp
xchg
cmpl
sub
pop
pop
pop
movl
stc
pop
inc
std
test
sub
hlt
lea
push
xchg
or
popa
call
pusha
cmpsl
dec
rolb
push
cmc
test
daa
mov
xlat
scas
push
repnz
movsb
in
pop
das
xor
andl
sbb
xchg
clc
shl
mov
add
scas
sub
arpl
mov
in
push
adc
push
ret
pop
out
mov
iret
mov
jecxz
loope
jecxz
inc
mov
outsb
xchg
mov
inc
popa
clc
mov
out
pop
cmpsb
rcrl
popa
adc
dec
xchg
or
or
je
outsb
outsb
cmpsb
add
inc
aam
icebp
lahf
shl
inc
int3
cmpb
pop
push
push
mov
jae
hlt
sbb
add
incl
int
jnp
rcll
loope
jbe
scas
jecxz
test
xor
xchg
mov
movsb
add
jecxz
pop
testb
dec
pcmpeqw
jecxz
jl
aas
stos
adc
push
push
mov
test
dec
ret
pop
xchg
mov
mov
cmp
or
mov
loopne
jnp
outsb
mov
ss
cmp
jo
outsl
cmc
sub
mov
int
jl
sub
sbb
add
ja
xchg
addr16
sarb
jb
jne
pop
mov
xor
aaa
imul
sbb
push
mov
aaa
roll
mov
lods
mov
jae
mov
iret
push
sbb
mov
pop
in
pop
insb
dec
inc
jmp
ss
push
das
addl
stos
rorl
xor
adc
mov
stos
rsqrtps
sbb
jge
cs
mov
lods
cmp
inc
adc
xor
pop
addr16
xchg
into
sbb
daa
nop
mov
cmp
fisttpl
adc
push
sbb
mov
psubsw
mov
shrl
mov
push
mov
push
sbb
mov
mov
ja
push
sbb
rclb
cli
popf
into
inc
sbb
jg
popf
and
lds
adc
nop
pop
inc
cmp
adc
pusha
fwait
xor
jno
rcll
scas
xchg
adc
out
cmpl
sub
xchg
or
mov
or
aas
cmp
int3
mov
jmp
mov
lahf
sbb
sbb
in
mov
fwait
mov
xchg
lds
test
and
add
cmpsl
mov
jno
cmc
jb
pop
sbb
and
icebp
xchg
fldt
xlat
inc
dec
or
mov
or
mov
stc
rcll
shll
hlt
jmp
pop
sbb
xor
jmp
ret
and
ss
cmpb
dec
test
jge
mov
fisttpll
pop
jl
pop
or
cmp
stc
xchg
lret
pop
call
xchg
jp
into
sti
filds
mov
out
push
cmpsl
ret
std
mov
rcrl
mov
mov
popa
faddl
cld
test
loopne
jmp
fidivrl
loopne
mov
ja
cmpsl
nop
popa
lock
fwait
push
sub
mov
mov
pop
loopne
pop
push
loopne
sub
add
out
sti
loope
mov
sbb
das
lret
loop
inc
mov
inc
xlat
add
jp
mov
and
sub
das
adc
inc
inc
mov
and
add
or
jno
mov
scas
test
sbb
xchg
iret
xor
add
test
mov
jne
mov
mov
mov
jae
sbb
mov
bound
and
lods
jmp
push
xchg
dec
jb
scas
ret
ror
stc
dec
cmp
jp
aaa
inc
mov
inc
jmp
imul
adc
rcll
jo
dec
pop
cmp
les
inc
test
jo
add
pop
and
aam
ss
or
mov
into
rol
jecxz
inc
xchg
not
sub
roll
pop
pop
jne
jb
sbb
stc
or
add
inc
mov
aas
mov
mov
lahf
negl
es
leave
aas
and
push
adc
cmp
or
movsb
lahf
in
je
cmp
cltd
jmp
lcall
gs
das
mov
cmp
add
std
pop
add
push
icebp
lret
adc
add
rol
mov
loope
mov
subb
ret
adc
and
pop
arpl
mov
ss
mov
addl
rcrl
les
bound
add
sti
das
xor
ss
test
in
push
inc
jecxz
fisubrs
enter
or
bound
lods
xor
insl
mov
cmp
dec
cld
cmp
cwtl
and
sub
cltd
xchg
out
mov
nop
jle
and
and
jnp
out
int
sbb
out
mov
push
sahf
add
fdivrp
adc
push
dec
ret
pop
pop
cmp
mov
daa
push
in
push
aas
push
enter
notl
movsb
cmp
jl
push
clc
sbb
test
push
cmp
pop
pusha
nop
jle
xor
add
pop
mov
enter
pop
mov
imul
mov
xor
nop
mov
jle
jl,pt
lds
out
pusha
fldl
sbbb
mov
xchg
int3
fcom
jo
xor
lret
lcall
mov
xchg
cmp
add
jb
iret
jo
aad
call
ret
mov
mov
les
ficoms
jmp
repz
lods
inc
int3
out
sub
les
add
iret
out
dec
call
shrl
jns
xor
mov
inc
pop
fists
imul
lea
lods
fs
cmp
xchg
in
push
xchg
in
inc
pop
xchg
xchg
sbb
jae
pushf
enter
sbb
out
fstpt
sub
cmp
mov
mov
or
sbb
test
scas
imul
out
insl
xor
shl
int3
mov
pop
push
adc
rorl
xorb
add
or
shlb
cmpb
aam
add
lock
push
enter
cmp
dec
pop
and
loop
leave
jmp
mov
test
dec
xchg
jge
jb
xor
lret
pop
push
popf
int3
in
xchg
out
pop
dec
xor
mov
je
je
rcrl
sbb
es
cmp
sahf
shll
mov
cltd
jne
fadd
xchg
jne
mov
xlat
sub
mov
dec
repz
mov
cmpsl
lock
rcl
lret
push
sub
cmp
inc
push
pop
adc
scas
fcompl
data16
cmp
lods
fs
sbb
sbb
ret
pop
loop
mov
cmp
arpl
dec
mov
fsts
mov
sbb
aaa
aad
std
ss
pusha
das
dec
cmp
nop
xchg
mov
test
push
xchg
dec
popf
shrb
xchg
cmp
out
pop
push
test
push
add
call
test
mov
or
cmpsb
shl
jmp
xor
cld
test
pop
add
jnp
xor
dec
jb
inc
outsb
test
outsb
lcall
push
pop
push
mov
mov
fmull
lock
xchg
fstpl
cmp
adc
sti
insb
int
enter
fisubrl
mov
add
or
repz
int3
pop
mov
push
int
or
jp
jp
inc
test
mov
push
xchg
dec
adc
insb
lds
push
gs
in
cs
sub
aam
call
out
mov
loope
in
xor
sti
adc
test
cmp
mov
inc
mov
push
xchg
and
jb
inc
add
add
and
lret
mov
jns
jno
push
aam
jbe
aam
mov
lret
js
push
xchg
cmpsb
mov
rorb
ret
rcrb
xchg
das
rorl
mov
mov
es
dec
pop
out
sbb
jp
iret
mov
fs
adc
icebp
xchg
fs
fsts
fs
popf
adc
clc
cmp
adc
bound
push
jmp
pop
mov
cmp
popf
mov
mov
xchg
sbb
or
mov
xor
inc
xor
jg
mov
xchg
out
jne
ror
add
mov
in
clc
repnz
add
jns
sbb
mov
push
push
sub
out
call
das
cmpsl
cmp
sub
sbb
sbb
cmp
rcrb
adc
sub
push
add
or
inc
dec
mov
push
clc
cld
jmp
mov
ds
jnp
int3
xchg
loopne
lret
adc
in
sub
fistpll
fisubrs
mov
cmpsb
push
mov
inc
pushf
inc
rcrl
sub
into
inc
lods
dec
movsl
cmp
dec
and
or
cs
pop
in
nop
xchg
mov
lds
xor
data16
loop
lods
ror
test
mov
insb
clc
or
js
or
in
aas
outsb
mov
jp
adc
repz
adc
push
pop
mov
cmp
cltd
xor
sub
sbbl
lret
ret
dec
into
or
lods
pop
jge
clc
dec
push
push
lahf
mul
es
jmp
scas
adc
adc
sti
negb
data16
ja
test
loopne
cmp
rol
call
cmpsl
adc
movups
mov
push
ret
pop
or
shr
js
stos
inc
fsubs
inc
pushf
mov
add
scas
in
rorb
andb
test
mov
cmc
aam
sbb
or
mov
loope
in
pop
inc
test
or
stc
xlat
inc
imul
scas
imul
mov
jno
pop
test
dec
push
push
fs
enter
ret
sbb
mov
std
push
out
int
jmp
xor
subl
and
lods
lcall
xchg
iret
lea
or
les
jge
and
lea
cmpsb
ds
dec
and
mov
mov
sbb
test
movsb
dec
jg
add
xor
loop
testl
mov
pop
pushf
xlat
or
pop
and
imul
jns
fs
test
xor
and
sbb
mov
or
or
sbb
orl
sahf
mov
cmpsb
mov
sub
pop
out
in
test
hlt
data16
mov
dec
sub
push
sahf
aam
inc
adc
xchg
add
test
mul
cli
mov
jae
adc
cmpsb
jne
loop
imul
sbb
jbe
xorb
adc
std
ret
je
mov
test
jmp
fsubr
or
vpslld
push
push
pop
cmc
insl
mov
xorl
adc
cmc
xor
cmp
sti
adc
in
stos
popa
xor
and
in
std
psubq
stc
xor
or
adcb
and
push
inc
imul
ja
je
ret
popa
cmp
inc
add
lock
mov
adc
imul
add
nop
call
sbb
pop
and
decb
add
adc
and
mov
push
pop
sub
sub
bound
in
mov
clc
decl
sub
xlat
mov
loop
jnp
ret
out
mov
xchg
into
mov
out
fistpll
iret
adc
jl
mov
cmp
stc
femms
sbb
mov
cmpsl
jnp
xor
mov
and
imul
loopne
xchg
lock
add
mov
xor
loop
or
lret
and
xchg
sub
inc
sub
sub
test
testb
mov
popa
mov
jmp
xchg
pop
movb
mov
mov
mov
testb
xchg
fcmovnb
mov
jb
mov
repz
adc
and
insb
and
inc
mov
arpl
push
ja
push
jmp
sarl
rolb
add
adc
out
pop
dec
cmpsb
fdivr
inc
int
test
xor
in
mov
jle
les
push
dec
aas
aad
push
adc
dec
mov
aad
mov
lods
adc
movntq
xchg
repnz
aad
lahf
outsl
mov
jecxz
jp
adc
scas
or
jmp
xchg
lock
fcmovu
mov
push
sbb
mov
push
popa
mov
mov
inc
rcrb
fcom
lahf
bound
lret
inc
adc
mov
and
sub
cli
push
test
mov
ret
mov
pop
test
jne
cmpsb
and
movsb
xchg
mov
xchg
push
mull
mov
jbe
je
shll
popf
lahf
pop
push
cmpsb
fistl
pop
stos
mov
idivl
inc
iret
pop
in
inc
add
sbb
stc
xor
pop
fdivl
mov
loop
fsub
sbb
arpl
mov
adc
vunpckhpd
pop
push
sub
in
cmp
mov
mov
in
pop
lock
push
xorl
inc
stos
stos
ja
inc
aas
jg
pop
stos
dec
movsb
add
and
xchg
pop
je
cmpsl
in
setg
pusha
xchg
mov
mov
mov
ja
xchg
pop
lret
cmp
and
imulb
dec
outsl
pop
imul
aam
pop
jge
cmp
cld
clc
lea
dec
mov
ret
rorl
nop
fs
push
aas
imul
adc
xor
mov
push
outsl
cmp
xchg
push
pop
leave
scas
adc
insb
ss
faddp
rcrl
mov
xorl
sub
mov
notb
mov
dec
sub
pop
insl
popf
sub
jae
out
cmovno
xor
mov
stos
cwtl
fnstenv
sarl
icebp
cmp
pop
subl
xchg
daa
mov
aaa
roll
push
out
call
cmpsb
mov
aad
xlat
fisttps
test
cmpsl
bound
mov
xor
xchg
pop
into
sbb
inc
call
pop
aam
xchg
xor
cltd
add
or
mov
adc
inc
inc
ret
or
mov
jmp
sbb
icebp
imul
icebp
nop
into
cmp
jg
dec
xlat
sbb
and
push
add
jo
cwtl
jnp
pop
aad
jge
dec
jae
sub
and
cmpl
or
cltd
or
mov
std
mov
cs
cmp
stc
pop
mov
sub
pop
fs
xchg
sub
dec
rcl
scas
xchg
jg
sbb
ret
xorb
jb
lret
int
push
mov
setle
mov
cld
add
nop
aam
sub
sahf
fsubl
xor
jo
sarl
lock
ret
scas
xorb
xorb
mov
or
aam
sub
push
orb
scas
ret
xor
and
out
fimuls
movsb
imul
in
xor
lret
int3
call
orl
cmp
sahf
and
lcall
lcall
inc
shrl
pop
dec
mov
in
in
push
mov
jle
add
popa
sahf
sub
push
xchg
repz
sub
xchg
and
out
mov
fsubr
mov
and
add
out
mov
test
repnz
fs
dec
jecxz
enter
sub
pop
lret
add
sub
mov
sbb
ret
insb
gs
in
add
test
jecxz
cmp
and
sub
ja
adc
aad
addr16
mov
in
insl
pop
out
sbb
inc
adc
cltd
add
jle
insb
mov
add
push
call
sbb
ja
loope
cmp
sub
leave
stos
lret
arpl
movsb
adc
mov
lahf
inc
mov
repnz
and
jae
call
and
inc
jno
cmpl
push
addl
xchg
aad
mov
repnz
fnstenv
mov
lods
xchg
cmp
fstl
mov
mov
lds
lods
out
push
dec
cmp
bound
cmp
mov
jmp
adcb
fwait
sbb
test
mov
dec
imul
test
popf
pop
fs
bound
mov
cmpsb
push
rcrb
jbe
cld
sub
mov
push
cmp
mov
xchg
inc
movsb
mov
xchg
clc
shl
call
cmp
xchg
inc
mov
xor
daa
cmp
xchg
dec
cmpsl
mov
fildll
jp
and
cld
fcompl
add
jae
mov
fmul
stos
inc
ja
jecxz
test
jns
test
in
loopne
adc
xor
mov
scas
or
inc
jmp
inc
outsl
test
mov
shlb
and
mov
out
call
repz
in
loop
adc
shlb
incl
cmc
adc
pop
add
cmc
xchg
pop
xorl
pop
sbb
hlt
andb
out
adc
hlt
fs
pop
sarb
out
aam
fdivl
push
inc
adc
les
sbb
sbb
xchg
sbb
mov
aaa
cmpsl
ss
and
ret
xor
lcall
sbb
jns
notb
pop
bound
dec
les
arpl
and
xchg
adc
out
les
in
xor
das
cwtl
push
sbb
jge
add
jle
out
fsts
lret
or
cmp
sbb
pop
jno
fwait
jb
movsb
leave
mov
gs
inc
jmp
push
mov
outsl
cltd
or
xchg
xor
fistps
pop
lods
and
mov
cmp
les
test
push
ds
dec
jle
push
jmp
in
mov
mov
fstps
icebp
push
je
jns
add
xchg
aam
incl
and
or
enter
hlt
nop
sub
sti
pop
loop
dec
push
loopne
fmull
jae
cli
sub
xchg
scas
jle
mov
aam
xchg
pop
icebp
xor
xor
cmp
inc
imul
pop
imul
sub
sbb
fldl
movsb
in
mov
pop
inc
nop
fidivrl
stos
push
xor
mov
lea
xchg
fcoms
push
jne
mov
cwtl
cmc
ja
fsts
pop
hlt
fists
iret
lret
das
jmp
loope
iret
aas
adc
dec
fwait
jbe
mov
xor
push
gs
adc
rcl
or
push
mov
cmp
idivb
hlt
and
stos
repnz
lods
aas
push
mov
cmp
lock
adc
xchg
loope
ror
push
insb
inc
pop
inc
les
nop
arpl
push
pop
cs
jg
popf
aaa
lahf
mov
scas
ljmp
cmp
addr16
mov
push
leave
nop
cmp
and
or
cwtl
cli
repz
sub
std
and
jae
cmp
ljmp
repnz
add
in
xchg
fstps
mov
in
ss
pop
mov
rclb
xlat
jg
cltd
jns
add
jb
dec
insb
push
xchg
dec
fildl
cwtl
pop
cmpsb
addb
outsb
pop
imul
push
pushf
xchg
es
mov
outsl
xor
cmp
jns
pusha
pop
insb
es
mov
jns
push
jp
or
sbb
add
mov
jmp
insb
or
mov
insb
mov
pop
adc
xor
dec
pop
int3
dec
and
ja
fmul
enter
xchg
push
pop
xchg
pop
cmpsl
into
inc
pop
das
lret
js
xchg
enter
jecxz
push
test
cmp
into
add
xlat
inc
push
lret
mov
sbb
ret
add
lret
pop
or
lea
pop
push
push
nop
sti
gs
rolb
push
das
adc
aam
loopne
pop
mov
and
mov
int3
aad
pop
inc
mov
or
pop
test
test
icebp
xor
mov
mov
fists
pop
lods
inc
and
inc
and
push
negl
repnz
xorb
dec
rcrl
inc
jp
pusha
mov
mov
add
insb
pop
data16
imul
jnp
sbb
repnz
adc
movsl
xchg
xchg
lods
inc
xchg
mov
dec
pop
xchg
fdivs
xor
mov
cmpsb
mov
fsubr
roll
test
fmull
in
sbb
adc
push
fcomps
enter
xor
mov
xor
fmull
into
fildll
daa
lds
xor
ljmp
and
xchg
arpl
int3
inc
dec
in
dec
and
jge
xor
fwait
or
leave
inc
repnz
int
lods
daa
mov
sub
mov
enter
cmp
or
mov
xor
and
and
idivl
pop
es
out
jae
rcll
lret
cmpsb
cmp
std
xchg
xchg
xor
or
loopne
shlb
push
out
xor
dec
add
out
test
cmp
lods
mull
pop
arpl
ja
fstl
jo
mov
xor
pusha
lret
pushf
mov
cli
out
mov
inc
sub
add
rcrl
cmc
push
ss
inc
mov
js
outsb
push
adc
repz
xor
cmc
inc
lret
mov
fstpt
fadd
test
into
add
aas
mov
popf
and
loop
rol
dec
lcall
std
jno
push
inc
lds
sarb
jmp
jle
mov
inc
lds
push
repz
pop
frstor
test
es
mov
les
sbb
mov
cli
mov
jp
shll
cmc
pop
jns
int3
shl
pop
cmpsb
dec
dec
push
mov
sub
rolb
push
aas
xor
out
in
push
in
push
inc
jg
mov
xchg
jns
fstl
enter
sbb
loopne
cmp
add
inc
int
pop
dec
xchg
xor
fwait
les
movsl
mov
mov
xor
movsl
jnp
jnp
test
jmp
mov
xchg
das
xchg
mov
int3
roll
and
dec
mov
fnsave
adcb
ljmp
jo
das
xor
pop
shlb
and
add
fcmovb
je
jo
or
mov
mov
fisttpll
sub
cmp
xchg
xchg
fnstsw
jl
push
sbb
pusha
nopl
frstor
aaa
sbb
movsb
inc
sbb
addr16
sbbb
fmull
pop
adc
mov
sbbb
xchg
and
std
roll
je
stc
inc
lock
imul
enter
pop
aaa
pushf
sbb
fwait
js
jmp
sahf
add
arpl
add
mov
mov
hlt
mov
cmpsl
popf
mov
lea
shlb
cmp
movsb
sbb
dec
mov
push
sbb
push
inc
pop
cmpsb
jmp
or
jp
in
mov
fcmovnb
fcomip
cmp
pop
daa
lret
decl
mov
push
gs
inc
stos
jno
sar
dec
sub
xor
xor
leave
ljmp
and
xchg
xchg
insb
and
repz
pop
push
nop
xor
aad
enter
sbb
das
or
fwait
call
dec
xchg
pop
pop
iret
and
mov
push
cmp
aaa
loop
fstpt
lea
mov
jb
fldl
mov
and
mov
cltd
ficompl
fwait
leave
cli
mov
movsl
inc
dec
idivl
push
push
xor
mov
dec
sbb
ret
gs
test
lds
sub
in
test
xor
cmp
das
jmp
loopne
ss
rcr
std
add
inc
hlt
outsb
push
mov
imul
insl
xor
test
mov
adc
and
dec
dec
and
pop
iret
inc
mov
out
and
sub
push
sahf
sbb
in
pop
pop
xchg
movsb
je
es
sbb
add
jbe
push
push
jae
adc
scas
jb
loop
lds
mov
stc
fildl
fimull
jne
fsubrl
sbb
push
push
popf
in
xchg
xor
mov
pop
dec
int
cmpl
repz
pop
dec
repz
imul
loop
sbb
sbb
movsl
xlat
clc
roll
jg
clc
outsl
mov
dec
lcall
dec
sbb
push
mov
jmp
push
out
or
push
lds
push
jg
mov
cs
pop
push
mov
andl
lcall
mov
jge
test
lods
ret
lods
cmp
movsb
cmp
xor
out
scas
cld
leave
popf
push
jae
mov
movsb
cs
les
aaa
xchg
test
out
xor
lahf
push
and
add
xor
xchg
adc
xchg
lahf
sarb
out
stos
dec
call
ret
sbb
test
stc
and
lock
mov
mov
fmul
and
mov
aad
addr16
jmp
mov
add
mov
fs
rcll
jg
pop
dec
pop
lods
push
push
jb
and
sub
inc
jmp
pop
hlt
mov
push
in
iret
sub
in
orb
cmp
jno
mov
and
fdiv
jge
push
std
aas
mov
pushf
cli
test
add
sbb
lahf
daa
cmp
test
daa
inc
cmp
jl
in
xchg
or
mov
leave
pop
cmp
ucomiss
or
mov
sub
popa
cltd
std
xchg
fsubrs
sbb
pop
enter
stos
mov
es
fs
je
dec
jo
cs
call
jo
xchg
inc
sbb
pop
aam
sub
xchg
aaa
enter
js
mov
lods
sub
pop
sahf
lcall
call
imul
test
sahf
popa
push
and
fs
movl
sbb
mov
fbld
push
push
ret
into
in
jp
adc
inc
lret
insl
inc
and
add
cmp
test
sbb
stc
loope
adc
xchg
mov
dec
mov
popf
and
pop
pop
mov
sbb
jp
cld
pop
mov
mov
int3
movsb
sub
sbb
xchg
mov
sti
out
popa
sarl
lret
popa
pop
adc
repnz
mov
adc
repnz
cltd
repnz
pop
sbb
outsb
pop
xchg
stc
add
jnp
dec
arpl
xor
gs
enter
sbb
push
fildll
inc
movsl
test
cmpsl
test
out
aas
scas
or
mov
xor
mov
mov
ret
adc
xchg
sbb
sbb
loope
pushl
mov
std
xchg
sbb
subl
sbbb
xor
into
shll
add
cmpsb
dec
sbb
int3
loope
data16
mov
les
outsl
fmulp
lods
mov
add
push
adc
dec
xchg
aam
inc
pop
sub
xchg
lcall
push
inc
std
sti
or
dec
push
dec
fcmove
xchg
jmp
lock
cwtl
push
inc
add
packuswb
add
push
xchg
test
sub
imul
in
ds
in
rcrb
sbb
jae
fucomi
dec
lahf
repnz
sti
mov
and
lret
dec
and
fdivp
stc
lods
adc
int3
push
pop
xor
inc
jmp
xor
push
mov
nop
dec
leave
add
test
rclb
xchg
push
push
test
lcall
lods
mov
sbb
gs
or
ja
loop
adcb
idivb
xor
inc
push
mov
outsl
cmpsl
inc
mov
add
gs
push
sbb
ljmp
imul
xchg
fucomip
daa
xchg
mov
out
shlb
pop
cltd
pop
adc
outsl
mov
scas
mov
sahf
mov
ret
mov
jmp
rorl
in
ret
ret
xor
mov
pop
pusha
es
mov
hlt
dec
nop
jbe
jl
lcall
jle
gs
cwtl
sti
cmpsb
subb
cmpb
mov
inc
bound
shlb
cmp
cld
and
xchg
push
jle
push
das
movsb
mov
inc
aad
aam
aas
cmp
pop
jnp
adc
mov
data16
ljmp
cwtl
stc
hlt
mov
cmpsb
sbb
pushf
int
xchg
shrb
cwtl
loope
mov
lock
push
hlt
addr16
pop
add
aam
mov
jo
loop
mov
out
dec
loop
cmpsb
jbe
push
jnp
adc
inc
loopne
jge
fcoms
sbb
dec
xchg
add
lods
add
push
pop
jbe
mov
imul
leave
fadds
jg
sub
jae
dec
push
sbb
xor
repnz
adc
push
shrb
push
pop
sub
push
sub
dec
mov
jge
clc
cld
mov
shl
std
out
xchg
fs
ret
fwait
or
jg
insb
xor
sub
dec
or
mov
cmc
sbb
jnp
repnz
mov
mov
xchg
xor
cmp
scas
ret
push
adc
fcmovnb
repz
sub
nop
lahf
mov
addr16
push
repnz
mov
xchg
jns
mov
push
jl
arpl
sbb
add
jle
in
sub
dec
adc
cmp
sub
repz
adc
mov
mov
mov
fisttpl
sti
push
jecxz
inc
out
mov
shrl
pop
xor
mov
jnp
jmp
mov
and
jbe
push
fldenv
cmpsl
in
cltd
add
out
out
test
imul
icebp
pop
icebp
sbb
cmp
lahf
mov
shrl
pop
xchg
jle
stos
testb
fcmovnbe
jo
std
inc
out
dec
cld
ja
or
pushf
pop
or
rorl
dec
mov
lret
xlat
xchg
or
mov
or
push
in
ret
arpl
sbb
ret
loop
mov
cltd
ret
jl
or
inc
icebp
movsl
fbld
pop
dec
enter
roll
filds
xchg
aas
pop
pop
nop
pop
lock
imul
mov
push
cmpsb
xor
jb
in
dec
jns
gs
add
mov
sub
jo
scas
lds
test
pop
xchg
insb
and
out
sub
dec
cltd
xchg
dec
xor
lahf
lret
aaa
je
jae
push
clc
bound
loope
sbb
adc
push
out
push
lds
ret
push
mov
mov
dec
shrl
adc
arpl
mov
ja
ret
hlt
gs
sub
xchg
andb
xor
stc
lcall
xchg
int3
mov
sub
daa
cmp
pusha
xchg
push
xor
sub
sbb
dec
sahf
mov
jmp
dec
repz
movsl
jne
push
cli
jns
iret
pop
fldenv
cltd
sahf
mov
inc
push
lods
loop
dec
pop
sbb
leave
outsl
ljmp
jo
and
dec
leave
mov
daa
jno
iret
sbb
push
test
stos
cli
outsb
in
or
sbb
push
scas
xchg
lahf
jno
cmc
mov
xor
xchg
cld
mov
or
xlat
test
stos
notb
icebp
mov
pop
loop
jecxz
or
xor
push
mov
rorl
add
clc
cwtl
fsubrs
lods
xor
mov
es
mov
dec
loope
orb
lea
lods
sub
or
mov
jmp
and
jae
lcall
add
add
iret
sub
stos
int
inc
dec
pushf
inc
mov
jns
sahf
les
push
cltd
jb
test
cmp
and
mov
lock
popf
pusha
xor
mov
adc
inc
pop
cwtl
and
in
add
dec
pop
mov
push
mov
and
xor
icebp
jp
imul
gs
data16
daa
pushl
and
sbbb
or
adc
xor
adc
xchg
mov
dec
lret
jb
inc
pop
xchg
xchg
sbb
loopne
js
dec
add
add
push
repnz
in
dec
jae
stos
outsl
fwait
mov
adc
push
nop
mov
sub
cmp
nop
push
mov
mov
sbb
pop
mov
mov
test
popa
in
sub
pop
arpl
stos
and
cmpb
ss
dec
inc
js
dec
jle
xchg
mov
ljmp
and
hlt
dec
gs
dec
imul
dec
lcall
cmp
sbb
mov
or
test
aaa
cmpsl
xchg
lds
xchg
add
cmp
and
inc
pop
adc
cwtl
call
fisttps
paddq
in
jp
mov
add
insl
jmp
sbb
stos
dec
dec
test
stos
mov
push
mov
xchg
fldcw
ss
lcall
adc
jb
or
dec
jp
dec
mov
cli
leave
mov
out
lret
out
sub
or
mov
add
add
sub
push
push
int3
rcrb
xchg
stos
add
mov
inc
js
adc
adc
pop
jg
bound
fs
mov
xchg
shr
decl
scas
jns
jns
je
sbb
std
pop
inc
dec
xchg
xlat
imul
or
aaa
mov
mov
aaa
bnd
daa
xor
jb
out
sub
or
mov
mov
lahf
cmc
inc
or
push
jecxz
inc
ss
fmulp
adc
pop
stos
test
push
arpl
cmp
dec
out
mov
pop
dec
or
fsubl
jnp
or
jns
mov
mov
push
xchg
in
hlt
mov
cmp
pop
or
inc
xchg
roll
fsubrp
and
xor
jmp
shrb
cltd
repnz
sbb
or
add
sub
jnp
out
push
dec
imul
clc
outsb
pop
xchg
push
repnz
jae
pushf
xchg
mov
les
fwait
pop
into
inc
dec
mov
ficoml
add
push
jmp
xchg
arpl
xchg
sub
lds
and
sub
es
adc
jle
test
jno
arpl
lahf
repz
jbe
jne
lcall
loop
or
and
inc
adc
addr16
pushl
mov
and
cmpsl
clc
ja
jb
mov
mov
into
loop
clc
rcrl
pushf
push
inc
jecxz
mov
cmp
inc
adc
shrb
insb
rolb
inc
or
cmp
gs
rcrb
mov
lahf
in
sbb
add
mov
and
sbb
jae
sub
pop
xor
mov
lahf
ds
jae
xchg
dec
or
into
mov
xchg
ret
les
adc
xor
shrb
ja
clc
lods
into
add
scas
cmp
mov
push
sbbb
clc
rorb
ss
lahf
fadd
stos
movsb
sti
js
mov
xchg
stos
je
sub
push
movsb
inc
cmp
shl
lds
mov
push
fs
mov
adc
sarl
sti
xor
bound
cld
or
sub
push
lret
adc
mov
lahf
sbb
insl
movsl
insl
cmpb
cltd
push
sbb
lock
pop
jecxz
sti
les
mov
aaa
clc
movsl
loop
push
inc
or
sub
push
xorl
std
dec
test
add
test
xchg
out
add
jnp
push
cmpl
add
add
fstpt
push
sbb
jg
xor
dec
inc
xchg
push
shrb
imul
adc
xchg
mov
inc
movsb
jecxz
mov
inc
xchg
fdiv
dec
call
pushf
cld
mov
jbe
cmp
add
sbb
sti
jo
xorl
or
inc
push
in
scas
lods
and
mov
movsl
lret
push
mov
jmp
idivl
pop
rorl
ja
mov
or
push
mov
mov
jb
lods
cmp
inc
cmp
jge
push
addl
ficoms
lret
mov
or
xor
mov
aam
jns
mov
or
add
push
cld
test
adc
cld
mov
push
dec
sahf
mov
cld
loopne,pt
insl
out
sahf
pusha
pop
test
mov
roll
js
lret
or
es
outsb
sbb
xchg
mov
ja
mov
mov
dec
mov
or
jae
xor
or
push
fwait
push
or
push
cmp
or
cld
stc
inc
cmp
test
mov
enter
loop
orl
inc
xchg
loope
and
sbb
cwtl
outsl
or
dec
movsl
or
push
mov
mov
adc
ja
rolb
aad
cmp
sub
mov
stc
jecxz
xor
fdivrs
mov
push
dec
dec
and
and
ret
cltd
fidivrl
movsb
lea
xor
shll
shrb
xor
hlt
sti
ljmp
xchg
add
jbe
or
das
mov
iret
in
xor
push
test
and
jmp
xlat
int3
shrl
test
mov
pop
clc
call
iret
xchg
sub
or
pop
lea
out
in
sub
or
lret
cmp
lods
pusha
push
std
inc
clc
in
adc
sbb
ret
insb
inc
arpl
mov
push
pop
movsb
fistps
mov
lahf
sbb
xchg
mulb
mov
jge
stos
sub
out
cmpsb
push
cmp
push
mov
sub
movsb
loopne
jl
add
jb
sub
mov
xchg
jle
xchg
inc
cs
outsb
cltd
adc
loopne
mov
mov
sub
fadd
and
xchg
mov
or
pop
movsl
xor
and
sahf
ja
jp
jp
and
cmpsb
mov
xchg
in
add
int3
stc
xchg
lods
pusha
fmul
pop
in
sbb
mov
aaa
lods
shlb
lahf
xor
subl
push
pop
stos
into
adc
jno
int3
fmuls
dec
rclb
jg
ja
popf
jg
pop
aam
repz
adc
xorl
scas
dec
pop
cmc
push
lods
xor
hlt
inc
lock
pop
xchg
push
lods
mov
fcmovne
movsb
cmp
jnp
jnp
mov
mov
ja
cmp
in
mov
leave
cli
cmp
pop
sbb
xor
cmc
scas
mov
mov
sub
sahf
mov
mov
jbe
movsb
mov
sahf
and
sti
pop
pop
das
out
mov
fadds
pop
aad
adc
and
pop
xchg
dec
lcall
mov
mov
sub
stc
aas
and
sbb
jo
lret
lret
pop
mov
ja
aas
mov
jl
dec
mov
jp
sub
loop
xchg
adcl
sbb
out
cmp
imul
jae
inc
mov
rclb
mov
pop
mov
rcrl
ja
mov
out
add
or
les
mov
aad
icebp
dec
mov
test
pop
add
pop
jnp
mov
cwtl
mov
fistl
sub
sti
cli
divb
outsl
sub
arpl
xor
addr16
adc
lods
les
add
mov
insb
mov
cmc
dec
mov
fbstp
mov
mov
lret
dec
dec
stc
add
testl
dec
lds
mov
in
outsb
mov
jae
push
bnd
jecxz
and
xor
aaa
out
adc
loop
sbb
xchg
repnz
lret
addb
lea
mov
lret
and
sub
stos
arpl
jmp
lods
sbb
js
ja
pop
add
jle
lret
push
popf
mul
sahf
aad
pushf
shrl
cld
jns
jge
out
cli
inc
jnp
shl
icebp
cld
fdivs
adc
inc
xlat
xchg
addr16
xchg
add
stc
rclb
mov
data16
or
mov
mov
jae
shlb
mov
sub
mov
xor
cmp
cs
sarl
mov
mov
inc
sarb
mov
jo
lcall
lea
insl
mov
inc
dec
and
nop
lods
dec
test
cltd
jae
arpl
into
and
pop
inc
mov
out
jo
mov
add
iret
aas
aas
mov
pop
call
xlat
enter
lds
pop
xchg
stos
jns
add
ja
in
lret
movsl
test
push
adc
mov
ss
cmp
mov
scas
movsl
lret
loopne
pop
sub
push
jne
mov
call
mov
xchg
sub
sub
sub
loopne
fdivrl
cmp
shrl
rolb
pop
insl
cmp
cmc
fsubrl
aam
lods
stos
sbb
dec
push
test
pop
push
xor
mov
mov
dec
test
dec
dec
add
dec
jno
push
lcall
dec
xchg
xor
imul
lret
mov
and
jae
jmp
negb
and
cmp
dec
dec
ss
xorb
mov
fs
sub
adc
shrb
jg
lret
add
std
xlat
xchg
lds
sbb
mov
das
shll
aas
cmp
dec
inc
and
mov
leave
dec
insl
jl
mov
adc
scas
cmp
xchg
mov
xchg
loope
das
stos
push
push
push
loopne
sbb
dec
icebp
jl
mov
pop
mov
cmp
pop
sub
xchg
je
jecxz
lock
insl
jle
push
aam
or
lcall
cmpsl
lahf
addb
xor
sub
dec
test
mov
push
es
fwait
les
cmp
ret
sub
fs
xchg
pop
jno
std
cmp
arpl
stos
mov
cmpsb
or
mov
xor
pop
data16
pop
sbb
jnp
pop
shlb
cwtl
add
mov
xor
outsb
mov
add
lret
push
pop
test
mov
insb
mov
sbb
jecxz
shll
rolb
add
dec
fnstsw
nop
fimuls
ds
push
sub
scas
imul
sbb
xchg
push
mov
repnz
dec
test
push
mov
xchg
mov
call
sbb
inc
out
mov
fnstsw
pop
dec
jle
jge
out
add
fcomp
icebp
movsl
mov
test
repnz
fdivrl
aam
or
insb
mov
ret
cmpxchg
xor
xchg
mov
inc
jbe
in
imul
add
push
clc
adc
sub
adc
cmp
aas
or
push
lods
mov
mov
adc
cwtl
cmpsl
sbb
in
fisubl
xor
jl
repnz
mov
cmp
jns
mov
gs
mov
cli
jp
push
lret
and
add
pop
jnp
mov
fmuls
push
sub
xor
jmp
dec
mov
adc
lods
pop
ret
and
xor
int
push
scas
outsb
scas
fildl
inc
cmp
mov
mov
inc
sub
push
movsl
addr16
add
test
addr16
lock
jle
pop
sahf
movsb
fisttpll
and
rolb
cmp
aaa
lahf
lahf
jp
nop
xor
inc
loop
push
dec
push
pushf
ret
cs
lcall
mov
inc
mov
and
test
nop
ret
int3
push
mov
mov
dec
cli
rcl
addr16
mov
sub
mov
push
outsb
xor
lock
push
fsubrl
rcrb
add
mov
pop
xchg
hlt
mov
inc
les
pop
cli
sbb
pop
sbbl
je
push
test
cmc
mov
push
push
inc
xchg
test
mov
push
mov
imull
or
jl
sub
lea
xor
cltd
adc
push
adc
lret
sbb
xchg
xlat
push
pop
lret
or
dec
rcrb
lcall
and
dec
adc
xor
out
sbb
fnop
iret
inc
pushf
add
inc
je
dec
or
insb
into
mov
icebp
xchg
xchg
cmp
fcos
mov
xor
sbb
popa
leave
mov
push
sbb
jle
int3
xchg
cs
call
data16
adc
aaa
movl
cmp
cmc
sub
insl
dec
pop
jne
and
repz
dec
js
push
fld
ljmp
in
in
lcall
xor
aam
cltd
mov
mov
adc
cmp
cmp
dec
ds
call
add
test
lock
pop
and
mov
xchg
cltd
inc
iret
roll
adc
cmp
into
or
fs
push
int3
pop
loope
cmpsl
mov
mov
xchg
rcl
lcall
push
jnp
mov
sbb
rorl
pop
aaa
jle
mov
mov
mov
fidivrs
outsl
mov
dec
idivl
and
sub
mov
fldl
xor
or
adc
faddl
lods
push
mov
arpl
pop
add
pop
pop
dec
scas
pop
push
clc
test
and
jle
fidivl
movb
movl
in
aam
jecxz
pop
cmc
repz
mov
jp
sub
mov
xchg
pop
outsl
decb
hlt
xor
jle
stc
hlt
push
repnz
jo
test
dec
lret
or
movsb
push
fwait
push
pushf
cmp
mov
inc
mov
push
sbb
mov
adc
adc
mov
push
jmp
loop
cmp
mov
inc
pushf
xchg
cltd
mov
cmp
test
jle
inc
sbb
or
dec
fnstenv
cmp
cmp
outsl
pusha
sub
pop
add
repz
xchg
test
dec
dec
jle
lock
out
out
out
js
mov
int3
cwtl
and
aam
xor
repnz
inc
mov
ja
xor
jmp
out
push
add
cmp
clc
shll
and
xor
in
xor
xchg
push
mov
insb
mov
sub
or
xor
repz
push
fsubrp
and
mov
jp
push
mov
fistpll
test
mov
cmp
mov
sub
xor
test
jg
pslld
push
mov
andb
add
lods
cmpsl
dec
xor
push
out
add
jb
lahf
out
mov
push
or
lods
dec
int3
clc
movsb
fs
adc
in
mov
out
in
rcll
rorb
ss
jp
mov
scas
pop
pop
inc
adc
rorl
fdivs
loope
gs
in
addb
scas
aad
je
dec
add
icebp
in
mov
inc
std
ss
pop
sub
sbb
cmc
push
and
xchg
xlat
inc
push
inc
mov
push
xchg
jae
test
inc
push
mov
and
pop
lock
sub
hlt
inc
lcall
scas
enter
xchg
addl
sbb
jno
int
negb
or
xor
sub
shrb
ret
ss
test
notb
pop
gs
inc
out
int3
cltd
nop
ret
out
into
sub
out
pop
lret
movsb
add
aam
dec
test
loope
jl
sbb
int3
pop
stc
cmc
add
popl
mov
ljmp
xchg
inc
xchg
hlt
test
aas
cmp
pop
fsubrl
adc
repnz
ja
mov
mov
mov
jb
sub
rorb
cmp
pop
lret
mov
add
adc
in
cs
adc
adc
mov
in
arpl
ss
sub
lret
jmp
dec
loope
mov
pop
mov
inc
jp
test
add
inc
sbbb
xchg
adc
cli
xchg
outsl
cmp
mov
xchg
repz
out
jae
ds
insb
xchg
int3
cmp
add
jnp
cmp
loope
ljmp
push
xlat
inc
push
push
add
pop
std
lcall
push
sub
pop
pop
stc
inc
dec
push
adc
out
lahf
jmp
lock
cmpsb
icebp
pop
cmpsb
cmp
adc
outsb
push
pop
test
and
jb
sub
cltd
and
xchg
test
push
imul
cmp
push
add
in
in
jge
mov
xor
xor
sarl
mov
sub
push
pop
inc
add
ljmp
ret
pop
add
cld
loopne
lods
pop
mov
movb
and
fildl
pop
mov
jo
pop
mov
jbe
movsl
dec
add
mov
out
inc
in
cmp
mov
rclb
sbb
lahf
jecxz
cmpsb
lahf
cmpsl
aam
stos
cli
pop
xlat
lock
dec
iret
pop
xchg
icebp
rcrb
clc
jmp
add
mov
arpl
pop
mov
add
adc
mov
scas
jo
or
movl
adc
add
cmp
loope
cmp
cld
fldcw
das
mov
pop
dec
push
sbb
push
in
mull
xchg
cltd
jp
or
mov
mov
lock
pushf
xchg
cmp
pop
add
jne
movsl
jae
jmp
call
mov
mov
pop
test
popf
inc
aaa
inc
sbb
cltd
xor
or
jns
pop
and
int
sbb
mov
imul
ret
or
mov
mov
jno
jns
push
mov
adc
insb
je
mov
dec
fwait
sbb
mov
out
mov
fmul
fnstenv
fcom
xchg
mov
incb
sbb
and
aam
mov
add
jns
ret
push
dec
fucomip
arpl
sub
addr16
pop
jl
pop
dec
mov
incb
call
adc
and
subl
int
ljmp
push
mov
scas
fwait
mov
xchg
nop
enter
and
sbb
mov
aas
scas
cmp
pop
pop
aad
lods
jl
or
mov
setns
push
je
push
fs
arpl
inc
and
xchg
pop
inc
pop
xchg
sbb
push
aaa
push
push
mov
inc
jmp
arpl
add
jp
fstl
ds
loope
dec
push
or
pop
in
or
dec
mov
in
sbb
pop
and
repz
inc
fs
pop
dec
in
scas
xchg
mov
cli
xor
stos
and
dec
sti
icebp
ret
shrl
out
cmpsl
push
insl
jno
ss
inc
jno
add
fmuls
push
repz
fmul
pop
sahf
lds
leave
xor
lods
adc
or
cld
mov
test
xchg
mov
leave
scas
mov
aaa
add
xchg
cmpsb
fistpll
fdivl
into
cmp
jb
xchg
mov
rorb
imul
test
mov
shrl
and
jmp
incl
mov
xorb
xor
inc
and
mov
in
outsl
jb
shrb
mov
adc
pop
xlat
imul
or
jnp
cmc
test
ss
lcall
in
pop
imul
xor
aaa
or
xor
loopne
dec
jp
aad
aam
rolb
jp
xchg
jmp
test
iret
ret
out
lea
nop
adc
xor
movsl
dec
pop
jmp
mov
hlt
sub
xor
push
mov
icebp
jnp
movsl
fdivs
dec
leave
or
repnz
leave
pop
imul
sahf
or
pop
int3
mov
stos
sub
mov
xor
inc
sub
sar
icebp
sub
out
inc
icebp
test
sti
push
mov
scas
fisubl
push
and
and
push
pushf
insb
cmpsl
add
aas
pop
inc
out
sahf
sub
pushf
mov
je
push
cli
inc
sarl
or
test
arpl
jg
imul
jbe
movsb
test
fs
lcall
ds
sbb
nop
aas
pop
push
inc
and
xchg
dec
and
outsl
jle
dec
inc
pop
xor
xchg
lahf
adc
je
jno
lcall
jg
fcom
sahf
lret
push
mov
aaa
imul
aaa
cwtl
adc
cmp
lcall
xor
xor
and
dec
shrb
jae
shrl
adc
xchg
sbb
addr16
push
pop
cwtl
shll
mov
xchg
jg
jecxz
lahf
dec
loope
jne
adcl
mov
and
inc
adc
cmpsb
lock
xor
mov
repnz
or
push
mov
sbb
scas
add
out
addr16
push
inc
inc
idivb
xchg
stos
lds
arpl
das
mov
ss
es
test
pop
sub
cmp
rol
aam
aad
scas
ret
inc
xchg
adc
imul
push
and
arpl
pop
aas
xchg
xor
enter
sbb
jle
test
or
insb
hlt
push
sub
mov
cmpsl
lock
fistps
add
cmp
aad
leave
rcrb
xchg
mov
imul
push
pop
inc
mov
cmp
ja
pop
jg
test
pop
jne
fnstenv
out
imulb
out
jb
sub
fldt
pop
push
vaddsubps
lods
rolb
sbb
loope
push
adc
inc
jno
pop
and
jmp
scas
cmp
mov
dec
xchg
js
js
sbb
and
xchg
repnz
lea
push
into
push
aas
jge
sub
insl
push
xchg
fs
xor
repz
pusha
mov
adc
adc
xor
icebp
push
xor
xor
es
add
fcoml
imul
mov
mov
mov
mov
mov
ret
and
sbb
cmc
adc
psrlw
insb
mov
mov
and
movsb
aam
sub
test
lea
cs
std
mov
sbb
aas
cmp
jo
pop
mov
pusha
ljmp
sub
repz
xchg
cli
sbb
jle
loopne
lahf
sub
ret
or
shrb
mov
cmp
fwait
pop
push
jl
jae
sti
adc
cmp
sub
lcall
xor
push
pushl
jmp
scas
lcall
mov
jb
ja
fstl
mov
cmpsl
loop
dec
cmc
or
out
sub
data16
outsb
add
mov
jnp
jl
mov
mov
in
retw
leave
inc
xor
std
cmp
iret
pop
subl
scas
mov
push
jns
repnz
mov
pushf
pop
js
and
pop
out
or
in
xchg
jbe
jle,pn
cmp
xor
dec
sahf
jne
sbb
jmp
test
mov
jno
or
sbb
std
or
push
fcmovne
add
lods
or
mov
adc
mov
daa
push
sbb
push
mov
sti
fsub
xchg
gs
fs
leave
mov
cmp
aam
xchg
cmp
loopne
xor
push
push
push
jnp
cld
jnp
and
sbb
mov
push
push
sti
stos
daa
jl
dec
xor
shr
imul
mov
subl
aad
lods
cltd
adc
aas
jno
in
add
mov
cmp
push
dec
dec
xchg
or
imul
mov
outsb
aad
test
fisubrl
mov
cmp
push
mov
pop
jp
sahf
xchg
jle
mov
rclb
shll
imul
push
mov
addr16
and
mov
dec
fdivp
movl
cmp
pop
stos
ss
dec
adc
push
scas
mov
scas
xchg
int3
pop
dec
lahf
repnz
enter
rolb
and
mov
out
pop
pop
fiaddl
mov
sub
mov
in
push
sbb
add
push
aad
and
int
sub
or
mov
addr16
push
mov
add
dec
add
push
mov
movsb
pusha
cmp
mov
cmp
je
jbe
inc
ss
ret
mov
loop
pushf
adc
shlb
hlt
or
jnp
lret
and
rol
or
lods
insl
lcall
xor
pop
enter
xor
mov
xchg
jns
pop
adc
popa
xchg
mov
faddl
xor
xor
out
inc
movsl
add
pop
xlat
cld
movsl
jmp
or
push
pop
fistl
test
lock
cwtl
push
xor
popf
inc
sbb
pop
push
test
push
xor
inc
sub
ja
lcall
mov
and
shrb
and
out
cmp
ret
call
mov
add
jb
mov
adc
movhps
and
mov
xchg
pop
repz
and
mov
in
pop
call
mov
and
inc
and
cltd
outsb
or
out
mov
lods
mov
mov
and
std
sbb
ret
sbb
jge
push
add
pop
dec
inc
xor
cmpsl
mov
stc
sub
pop
adc
jae
pop
jmp
mov
mov
push
pop
mov
pop
mov
or
inc
mov
stos
mov
cmp
xor
inc
repz
aas
ret
jno
arpl
and
and
idivb
ret
or
push
aam
icebp
lea
pushl
repz
aaa
loopne
cmp
mov
sbb
or
xlat
sarl
fildl
pushf
add
fiaddl
rclb
mov
pop
aam
sbb
scas
mov
mov
push
jne
jns
nop
xor
aad
mov
out
fs
rcl
mov
jecxz
mov
mov
adc
es
mov
cmp
mov
and
lds
je
push
mov
lock
data16
xchg
or
mov
or
xchg
mov
ds
mov
and
mov
mov
xor
xor
test
ret
fwait
jl
loop
xchg
add
sub
std
or
fmuls
jmp
inc
popf
les
subb
jmp
testl
or
and
xchg
in
and
cmp
xchg
ficoms
sbb
cmp
loopne
add
out
mov
leave
and
loopne
ljmp
mov
in
cmc
repnz
loope
pop
cmp
xor
outsl
pcmpeqd
popl
jb
in
mov
or
loopne
outsb
aas
ret
idivb
mov
inc
sub
ret
jno
les
dec
test
outsb
xchg
scas
xor
sbb
sarb
out
leave
inc
mov
aas
ss
in
ljmp
fistps
pop
jp
loopne
mov
adc
clc
popa
mov
fsts
test
sub
push
hlt
unpckhps
cmp
xlat
andl
jne
test
adc
adc
sahf
popf
pop
gs
outsb
jecxz
into
mov
lock
daa
decb
int
xchg
jns
sbb
es
insb
das
daa
out
sub
or
xor
mov
jp
outsl
add
xchg
testb
mov
fadd
arpl
fbld
mov
in
cld
test
or
adcl
fwait
repz
sbb
sbb
cmc
rcr
movsl
cwtl
mov
add
xchg
xor
test
shll
imul
sarb
pushf
int
push
jp
sbb
push
mov
int
lret
leave
in
fdiv
push
int
test
fwait
jno
lods
icebp
out
mov
push
js
lahf
cli
ds
ja
cmc
clc
push
outsl
scas
lock
add
aas
inc
nop
mov
daa
xlat
lds
sub
sti
xor
mov
adc
xor
push
mov
push
sarl
fcmovu
jecxz
in
into
pop
sub
jo
jmp
sub
clc
mov
mov
hlt
ss
pop
out
and
out
sbb
cltd
div
pop
add
stos
mov
and
js
ficoml
or
ret
inc
ret
pop
rcrb
mov
jne
loope
cmp
aas
jns
xor
mov
fs
jle
jbe
lcall
jg
push
push
xor
data16
jnp
dec
cmp
data16
push
inc
repz
inc
push
je
loop
jecxz
and
sub
pushf
in
test
fidivrs
pop
add
and
jno
mov
pushl
shrl
sbb
int
arpl
ror
inc
lods
and
mov
enter
xor
xchg
in
xchg
rep
mov
loop
in
add
or
rol
leave
loope
add
jae
mov
lret
jp
icebp
loopne
push
test
popf
daa
and
out
add
cmp
push
stos
ret
cwtl
jae
ret
jnp
sub
pop
push
pop
jne
shll
mov
mov
js
nop
aam
popf
push
or
cmpsb
sbbl
push
xchg
movsl
dec
cld
xchg
test
lcall
ja
push
pop
push
mov
aas
mov
pop
sub
xor
rcrl
mov
into
dec
xor
test
stos
jnp
jbe
mov
add
rcl
xor
xchg
cmp
cwtl
bound
add
int
ja
push
cs
push
pop
and
push
movsb
orl
dec
in
ret
shll
rolb
rorb
jmp
pop
jbe
stos
out
popa
mov
pusha
jne
xchg
sbb
sub
xchg
repz
in
data16
push
dec
fxch
xchg
jl
in
incl
notl
sbb
sti
incb
inc
pop
push
adc
shrb
pop
sub
xor
test
xchg
sub
pushf
fwait
xchg
sahf
or
push
loope
inc
add
cmpsl
jo
ror
insb
push
andl
jnp
add
idivl
shl
mov
adc
adc
stos
cmp
shl
mov
lock
adc
adc
outsb
fadd
add
add
repnz
push
dec
push
fcoml
les
test
mov
xor
mov
stc
aas
mov
jno
inc
sti
stc
jge
dec
dec
push
jo
repz
scas
fwait
xchg
dec
or
pop
cmp
or
clc
sbb
and
adcl
or
fs
pop
dec
sti
fmul
mov
sti
repz
mov
fs
aad
or
das
fwait
jbe,pn
mov
and
repz
das
js
sbb
and
pusha
je
insl
dec
dec
mov
js
jmp
mov
filds
mov
inc
xor
test
repz
filds
sub
mov
inc
inc
aaa
gs
push
mov
mov
adc
mov
jb
iret
nop
and
scas
adc
imul
mov
xlat
pop
dec
or
push
fadds
flds
pusha
pop
push
mov
stc
pop
dec
rolb
and
cmp
test
ljmp
out
jns
mov
adc
ret
fdivl
push
adc
pop
aas
cmp
dec
xor
pop
or
lea
int
ret
fisttpl
add
mov
aas
mov
popa
pushl
mov
adc
and
in
les
imul
lods
lods
mov
dec
and
inc
mov
sbb
adc
scas
popf
test
xor
mov
mov
stc
dec
ss
and
lret
mov
mov
pop
mov
nop
dec
pop
xchg
popa
pop
out
dec
and
shll
rorb
divl
dec
orl
int
or
xor
or
dec
mov
divl
jecxz
lds
inc
jecxz
incl
sbb
mov
jno
int
enter
stos
add
jbe
fwait
and
insl
gs
cmc
test
jne
jl
add
lods
punpckhdq
add
loope
lcall
sbb
out
pop
xor
test
jmp
pop
push
dec
dec
inc
sbb
sarl
dec
mov
rclb
xchg
sbb
repz
jns
pop
out
xlat
cs
sarl
in
pop
es
add
andb
sbbl
xchg
dec
mov
and
sub
fs
xlat
push
sbb
mov
stos
adc
add
mov
mov
ret
lods
dec
dec
imul
pop
mov
mov
test
dec
aam
shld
push
dec
jle
outsb
mov
loope
lret
pop
es
daa
push
push
dec
push
and
add
push
pop
imul
mov
xchg
lahf
adc
pushl
daa
adcb
adc
leave
push
adc
imul
arpl
repnz
mov
mov
test
add
sub
std
mov
jnp
loope
pop
scas
jns
icebp
fiaddl
lret
scas
std
dec
sti
iret
jae
cmp
xchg
pop
repz
jnp
mov
lret
cld
sub
iret
mov
loop
dec
mov
inc
shlb
lea
loop
cld
mov
and
test
into
ret
std
enter
sub
call
mov
imul
push
data16
mov
sub
out
out
pop
pop
scas
scas
mov
aaa
mov
leave
dec
enter
faddl
je
into
ret
push
iret
mov
jp
repz
mov
mov
mov
ljmp
outsl
jmp
rcrb
adcl
pop
js
mov
cmc
out
xor
mov
movsl
xchg
pop
or
sub
dec
rcr
lods
into
inc
je
mov
add
rcrb
push
arpl
or
aam
daa
xor
xor
adc
xchg
push
jb
arpl
cs
hlt
sahf
pop
aam
in
jae
mov
or
repnz
cmp
mov
test
gs
jne
sbb
xorb
aas
jle
scas
daa
clc
test
sub
xchg
push
xor
sub
jnp
adcb
sub
lcall
in
ds
addb
mov
lret
push
je
or
pop
das
gs
inc
test
xlat
mov
outsl
dec
adc
dec
adc
test
out
and
loop
aad
fs
test
rdpmc
shl
dec
cmc
fidivs
add
pop
mov
dec
gs
dec
mov
adc
lods
push
int3
mov
pusha
xor
mov
mov
bound
push
imulb
sbb
movsb
inc
aas
dec
test
pop
inc
push
jo
push
push
lods
push
jmp
push
jns
roll
dec
inc
outsb
mov
push
mov
sbbl
inc
das
lds
adc
dec
test
pop
cmp
xlat
filds
inc
fiaddl
jmp
push
out
pusha
dec
cwtl
adc
dec
mov
enter
lods
call
and
lahf
test
aaa
stos
sahf
mov
jnp
stos
sti
push
aas
ss
sbb
mov
xchg
fstpt
sbb
or
gs
adc
daa
insb
lret
xor
mov
sarl
lods
test
imul
pop
out
adc
jmp
les
sti
mov
and
xchg
inc
paddusb
out
and
xchg
cli
scas
sub
lds
add
mov
or
out
rorl
lahf
frstor
and
push
pop
mov
mov
shrb
scas
cmpsb
adc
pop
aas
cs
add
add
into
adc
sti
movsl
int3
lds
mov
cmpsb
out
mov
mov
fstpt
add
mov
xchg
movsb
sbbl
cmc
or
fildl
aad
pop
sub
sub
mov
pop
mov
cld
fbstp
mov
popa
dec
xchg
stos
dec
and
arpl
or
pop
cwtl
mov
inc
push
orl
mov
push
lock
sub
or
add
push
mov
mov
xlat
test
aaa
inc
mov
pop
cmpsl
jmp
mov
testl
cli
aas
mov
imul
data16
push
pop
cmp
and
dec
add
cmp
sbb
jae
imul
int
jnp
js
sub
pop
adc
mov
nop
push
je
jne
test
dec
hlt
popa
or
imul
stos
dec
and
fs
sti
out
gs
aad
add
std
sbb
mov
pop
mov
mov
les
fisttpl
pusha
out
xchg
test
in
notb
pop
dec
jo
daa
add
mov
and
push
fisubrl
push
pop
cmc
mov
ljmp
std
movsl
test
popa
lds
sub
lcall
push
fs
jp
mov
jmp
dec
pop
push
pop
or
gs
ds
adc
sbb
or
sahf
bound
jmp
jle,pn
rorl
ror
arpl
shrl
cmp
sub
xchg
inc
fwait
inc
jae
lods
hlt
loope
xor
jp
aam
push
xor
movsb
cmc
add
dec
add
add
fprem1
and
in
pop
and
add
adc
enter
jae
subb
push
lea
adc
push
jg
xchg
inc
pop
sub
stc
dec
testl
xchg
hlt
xchg
aad
lods
jp
insl
movsb
xchg
lods
add
mov
into
ljmp
out
ret
jl
xchg
in
mov
xor
mov
in
xchg
jmp
punpckldq
sub
and
cmp
rolb
mov
loop
imulb
bound
sub
mov
scas
scas
in
push
jnp
or
sbb
pop
nop
jecxz
or
push
movsl
xchg
sub
std
and
sbb
lret
add
shrl
xchg
pop
pop
ss
inc
cltd
std
cltd
jae
jmp
or
gs
insl
dec
test
add
repz
mov
outsl
imul
push
pop
mov
push
jl
inc
cmp
loope
jo
test
add
mov
fisubrl
aam
inc
jmp
add
pop
lret
push
sbb
clc
rorl
aas
mov
jle
jge
cmp
adc
addr16
dec
push
loop
sub
cmp
les
or
enter
inc
aam
cmc
xchg
cmp
test
dec
in
sub
push
mov
cmp
mov
ret
mov
orl
leave
mov
rolb
out
xor
push
sbb
hlt
cmc
cs
adc
pop
mov
outsl
bound
sbb
inc
pop
ficomps
xchg
push
add
out
sahf
sbb
cmpsb
jg
and
adc
pusha
in
pop
test
faddl
mov
cmp
jo
dec
je
add
out
cmp
cli
jge
clc
ss
push
repz
sub
sbb
mov
xchg
lods
cwtl
adc
jge
enter
call
mov
cld
jns
lahf
cmc
push
or
imul
mov
cmp
and
and
test
mov
sarl
je
mov
ficompl
lea
jle
out
and
cmc
inc
inc
fwait
loopne
jl
or
push
out
ret
cmp
data16
inc
mov
dec
sub
push
fisttpll
imul
mov
icebp
mov
subb
inc
dec
mov
rorl
or
mov
icebp
gs
insl
aaa
push
xchg
es
xor
push
shlb
sahf
mov
sub
cmp
and
xor
or
mov
add
movb
das
cli
dec
sub
mov
mov
cltd
or
shrb
or
jmp
inc
push
mov
int3
xor
inc
mov
mov
shr
xor
push
xchg
jb
pop
lea
adc
fldl
fisttpl
in
fucomi
xlat
faddl
call
push
inc
mov
orb
inc
imul
add
addr16
sbb
pop
subl
dec
jo
js
mov
mov
add
push
ret
pop
clc
push
cmp
popa
mov
sub
jg
jns
mov
sbb
popa
pop
mov
adc
ret
cwtl
cmp
test
mov
add
mov
int3
aam
repz
jecxz
xor
jecxz
divps
mov
lret
or
cltd
lahf
jg
ljmp
outsb
dec
jmp
insl
add
loope
sbb
ficoms
andl
mov
adc
mov
fistpll
mov
mov
inc
mov
pop
imul
loopne
xlat
pusha
cli
cwtl
outsb
out
int3
mov
add
jbe
jge
iret
add
push
sbb
and
dec
sbb
sbbl
jmp
jbe
lret
in
in
ficomps
lahf
sbb
lret
cmp
shlb
push
jo
ljmp
dec
cmp
aad
aaa
xchg
jnp
leave
push
jge
pop
cli
dec
jo
popl
cmp
insb
popf
xchg
std
out
cmp
out
xorl
imul
imul
imul
mov
push
icebp
fwait
js
shll
cli
and
dec
iret
aad
and
cmp
xchg
clc
dec
push
pop
pop
lea
or
mov
insl
cmpsl
adc
mov
mov
sbb
loope
test
inc
movb
and
jb
or
inc
stos
cs
ret
rclb
push
loopne
cli
enter
pop
shl
mov
orl
jns
push
test
mov
inc
nop
lret
int3
push
cmc
lret
dec
push
ficoms
xchg
or
inc
lods
push
rclb
pop
pushf
ret
gs
xchg
cli
clc
mov
cli
lcall
outsb
mov
pop
pop
pusha
push
pop
push
xor
cmp
sub
inc
dec
mov
dec
lods
cmpsl
xor
cmp
adc
je
pop
mov
sbb
inc
push
inc
int
jo
sub
js
or
call
rcl
inc
sahf
xor
lahf
sbb
int3
iret
popf
sbb
fcmovnb
sub
shrb
cld
xlat
lock
push
jmp
push
popf
cs
dec
stos
addl
jns
add
push
adc
pop
sahf
mov
sbb
push
mov
call
shrb
push
in
add
fldt
and
cmpsb
pop
mov
cld
adc
ljmp
jns
pusha
mov
cmp
jb
pushf
lock
xchg
ljmp
jge
dec
xchg
loop
mov
hlt
movsl
push
fistpll
jmp
clc
mov
mov
push
mov
imul
cmp
and
push
outsl
jo
cmp
cmpb
loopne
adc
mov
inc
xor
inc
clc
repz
and
push
mov
adc
add
sub
lret
filds
dec
fs
or
inc
and
fprem
imul
dec
adc
fisubrs
lret
fwait
in
fisttpl
sub
and
adc
das
daa
mov
insb
fdiv
cld
repz
outsb
cmp
movsl
inc
mov
adc
rorl
out
sahf
subb
adcb
dec
fimuls
jmp
pusha
outsb
inc
dec
lods
mov
in
bound
sti
outsb
lret
cmp
or
dec
lret
cmp
jnp
add
xor
call
pop
jnp
or
xor
adcb
xor
xor
jo
incl
test
mov
stc
aas
idiv
xlat
jo
insb
jb
fisttpll
pusha
test
mov
add
sub
das
test
mov
inc
sbb
lea
lret
mov
and
imull
insb
adc
xchg
lret
movsl
mov
add
js
adc
enter
lret
add
ljmp
inc
ret
xchg
cmpl
lcall
out
inc
mov
and
fcoml
pop
mov
pop
jecxz
icebp
lock
lcall
movsb
xor
in
add
adc
lods
stos
xchg
fimull
call
cwtl
xchg
cmpsl
jmp
push
sahf
jb
loop
repz
inc
into
jp
cltd
cmp
sub
sbb
cwtl
dec
test
cli
jno
ret
aad
jae
mov
xchg
testl
out
sbb
scas
dec
loopne
push
in
add
orb
int3
xor
inc
jne
xchg
imul
dec
test
scas
adc
pop
pop
sbb
call
out
es
push
sub
clc
rcr
aam
jmp
lahf
sub
inc
or
insb
add
mov
xor
jo
cmpsb
gs
mov
jle
pop
fwait
test
iret
mov
xchg
inc
pop
lea
ss
pop
rcrb
pop
test
out
xchg
dec
inc
sbb
popa
lret
shlb
xor
sbb
jno
fdivrs
pop
cwtl
lea
adc
jns
mov
icebp
iret
test
add
ret
dec
mov
sti
stos
mov
pusha
mov
das
xchg
adc
pusha
jno
jns
xor
bound
mov
pusha
in
sti
jnp
push
sub
nop
push
jno
or
mov
stos
daa
insb
cmp
pop
out
adc
out
movsb
sbb
das
mov
jmp
and
xchg
push
lret
stos
sbbl
xor
mov
enter
mov
xor
mov
jbe
sub
inc
mov
pop
rclb
push
push
insb
lock
xchg
int
jecxz
cmp
mov
add
loope
stc
mov
test
xchg
xor
cld
cmpsb
inc
mov
jg
jbe
push
shlb
lcall
sub
ret
xlat
dec
sbb
ja
xchg
ljmp
dec
push
das
iret
shrb
xchg
int3
ret
jo
out
movsl
shlb
push
iret
insb
addr16
mov
sbb
data16
inc
insl
dec
push
pop
pop
or
cld
push
jbe
leave
push
xchg
scas
xor
xchg
add
jnp
xchg
cli
mov
mov
or
movsb
int3
ds
subb
xchg
jge
sbb
js
sbb
bound
adc
test
push
test
ljmp
and
int3
mov
divb
in
das
cmp
fwait
pop
mov
sub
stos
xchg
sub
std
cwtl
nop
push
ljmp
xor
push
sub
test
pop
add
jno
test
insl
cmpsb
xor
mov
ljmp
outsl
aam
add
lock
jp
repnz
pop
fsubrl
push
dec
faddl
push
cmp
fistpll
rorb
sub
dec
cli
pop
gs
aas
pushf
add
mov
and
or
mov
push
dec
cmpsl
cld
movsb
js
sbb
and
lea
mov
lahf
jmp
cmp
add
sti
jo
loope
iret
adc
inc
adc
fdivp
loopne
add
es
fnsave
fisubl
sbb
cli
push
xchg
mov
mov
pop
jecxz
jb
cmp
mov
jbe
inc
rclb
sbb
mov
mov
adcl
repnz
mov
aam
cmp
mov
adc
push
jle
lret
data16
lods
divl
in
mov
sbb
fildll
icebp
jmp
lock
ret
push
mov
fwait
lret
sbb
dec
push
adc
push
ss
out
pop
mov
bound
sahf
dec
or
sub
cmp
cld
imul
or
jecxz
loope
aaa
mov
push
inc
dec
inc
scas
mov
cmp
out
das
xchg
jp
lret
aam
mov
push
aad
jmp
es
arpl
nop
cltd
iret
cmp
icebp
icebp
sbb
lret
mov
cmp
lea
push
push
nop
int
shlb
xor
mov
and
daa
test
dec
and
sarb
cld
fwait
dec
mov
or
lock
mov
outsl
pop
jl
mov
push
mov
or
jge
mov
cmp
cmp
fldt
dec
out
mov
test
jmp
sub
push
popa
xor
sbb
stc
jl
jge
push
push
out
stos
out
and
data16
ret
insl
outsb
aam
pop
stc
xchg
test
mov
xchg
lea
popa
out
and
adc
pop
in
xor
fsts
out
jge
xor
adc
xor
call
push
shl
fdivrs
push
jns
pop
sbb
mov
insl
sub
sbb
sbb
gs
dec
fdiv
jno
mov
dec
push
pop
orb
pop
sbb
mov
jne
lahf
sbb
dec
xor
and
mov
mov
insb
test
mov
and
add
lds
scas
stos
addb
add
mov
addr16
mov
dec
xor
push
adc
xlat
popf
and
mov
movsb
js
mov
jbe
loope
aas
and
jg
mov
xchg
inc
cmp
mov
loop
sbb
lods
mov
and
enter
stos
xchg
jo
dec
rol
add
mov
test
push
pop
jo
add
popa
lods
xor
push
shl
mov
push
inc
push
cltd
mov
test
pop
mov
adc
mov
and
out
xlat
enter
pushf
push
push
adc
jmp
jmp
in
cmp
cld
push
cmp
xlat
mov
push
inc
daa
dec
dec
jp
iret
xchg
add
mov
adc
imul
std
insl
setg
pusha
test
das
lock
xchg
sub
sub
int
inc
sbb
gs
scas
or
mov
aam
pop
leave
push
aas
mov
push
add
pop
mov
push
int
jno
lods
rcll
push
push
adc
adc
loope
jmp
cmp
lods
in
outsb
insb
xchg
push
pusha
pop
sbb
stos
adc
pushf
stos
jle
lret
push
pop
fwait
add
lds
push
gs
sub
xor
stc
push
call
mov
rolb
ffree
cmp
or
xchg
decb
ret
mov
cmpsl
rcl
addr16
jae
add
popl
std
lahf
daa
das
andb
xchg
xchg
out
daa
prefetchwt1
or
cmp
scas
js
mov
pop
lcall
push
sahf
aam
out
in
iret
cmp
test
test
mov
hlt
inc
cs
xor
cmp
jecxz
leave
xor
fadds
out
lock
bt
xorl
push
jecxz
test
adcb
cmp
in
push
mov
xchg
outsb
or
push
mov
xlat
cli
and
iret
push
ss
mov
fnsave
movsl
jle
stc
and
loop
aas
fmull
xor
dec
sub
sub
sub
ret
lds
push
and
nop
jb
into
jbe
pop
sahf
icebp
mov
stc
pop
sbb
stos
hlt
xchg
stos
and
fiadds
xchg
ja
mov
mov
dec
ror
or
call
les
jmp
aad
clc
arpl
sbb
pop
pop
jo
imul
mov
and
int
mov
xchg
xor
sub
dec
ja
sbb
pop
fwait
cld
ret
pop
inc
inc
inc
subl
rcrb
jbe
sub
fistl
inc
and
test
popa
inc
sbb
insb
lret
leave
cli
loop
push
xchg
dec
cmpsl
mov
pop
out
je
fdivs
mov
push
jmp
pop
pop
mov
jno
imul
mov
cltd
fcoms
sub
pop
mov
jge
xlat
ret
add
or
dec
sub
mov
xchg
mov
adc
int
dec
sbb
stos
pop
ja
scas
outsb
or
mov
mov
shrl
mov
std
int
mov
jb,pt
test
or
fwait
and
or
enter
aam
scas
mov
mov
repnz
ret
sbb
cmpsl
push
lods
mov
dec
adc
inc
xor
movl
xchg
mov
xchg
xor
sub
outsl
mov
sub
loope
call
scas
ficoms
push
imul
sub
add
or
sbb
mov
jecxz
add
lret
cwtl
lret
cmp
std
sbb
cmpsb
or
adc
xchg
fldl
push
cltd
add
int3
mov
adc
push
repz
rclb
mov
shrb
pushl
pusha
les
and
cmpsl
or
in
stos
imul
fdiv
cmp
daa
mov
sub
sarb
and
jmp
int
sbb
mov
fsubrs
sub
xchg
int3
fisttps
stos
sub
push
mov
icebp
jae
out
and
and
dec
movsb
xor
cli
jb
arpl
rcll
sbb
addr16
sub
in
scas
sub
or
test
xchg
inc
mov
xchg
das
pop
das
mov
mov
jbe
push
jno
mov
sub
adc
mov
les
adc
dec
jge
mov
jg
xchg
mov
xchg
add
in
cmpl
jecxz
pop
arpl
js
rcrl
ror
test
int
leave
lcall
fiadds
lahf
test
test
int3
push
or
negl
out
pop
xchg
and
sub
out
and
xchg
jp
outsl
mov
xchg
lcall
leave
outsb
clc
bound
xlat
and
aaa
lods
sub
sub
or
push
cli
pop
jnp
inc
mov
out
scas
ljmp
jnp
push
aad
or
daa
sbb
lcall
push
notb
pop
imul
xchg
jnp
xchg
mov
out
fdivrl
xor
mov
mov
sub
mov
xlat
dec
and
jl
xchg
inc
orl
or
dec
clc
pop
pop
and
jmp
push
xor
add
clc
mov
repz
js
sahf
test
xchg
jb
mov
fiadds
mov
xchg
pop
out
leave
pop
jecxz
scas
stos
and
jnp
dec
add
ljmp
rol
dec
mov
dec
call
movl
sbb
sbb
xchg
dec
mov
sti
mov
mov
mov
adc
fcmovne
or
stos
pop
adc
dec
sti
ficompl
test
sahf
mov
movsb
fstpl
add
mov
bound
int
repz
ja
sub
mov
dec
cmp
add
fs
xor
add
popl
pushl
pop
imul
arpl
shrb
and
adc
and
pop
imul
jecxz
popa
xor
or
jecxz
aaa
adc
push
sbbl
sbb
sbb
or
xchg
sub
and
pop
sbb
test
cmpsl
loope
mov
loope
xchg
stc
push
ftst
addr16
insb
dec
jl
lds
sub
jb
sub
jne
fnstenv
and
mov
add
fcmovne
jnp
fs
mov
inc
ljmp
fdivrs
cmp
mov
dec
out
mov
sub
cli
pop
cmpsl
mov
pop
movsb
cmp
mov
lret
int3
and
test
addr16
ds
stos
ja
cld
int
mov
xchg
and
and
mov
jmp
aad
jmp
les
pusha
and
cmp
sbb
fwait
inc
sbb
jbe
cmp
push
dec
inc
push
mov
aad
sahf
clc
mov
inc
push
dec
movsb
push
scas
loop
push
decb
addr16
xchg
pop
jbe
xor
cmp
loopne
test
mov
inc
pop
in
rolb
jmp
imul
mov
insb
mov
inc
cli
adc
lret
loope
jnp
jns
lcall
jmp
lods
mov
ja
add
adc
jbe
xor
xor
test
sbb
arpl
jp
push
mov
add
pop
mov
notl
inc
adc
movsb
cs
mov
sub
arpl
mov
fcomps
push
push
mov
popf
sbb
out
jb
arpl
pusha
mov
repz
push
sub
adc
xlat
mov
inc
push
add
dec
in
or
mov
cmc
lock
push
hlt
lods
xchg
std
jge
fwait
enter
sub
stos
mov
xchg
or
dec
adc
jmp
das
adc
push
pop
mov
push
lods
mov
std
test
mov
leave
sub
cmp
and
cli
into
pop
dec
fstps
sub
sbb
lea
lods
cmp
add
mov
xchg
push
push
test
stc
jno
mov
aad
std
push
cmovs
lahf
dec
ficoms
push
jl
xchg
mov
or
sub
mov
mov
lcall
iret
fidivl
scas
aaa
ret
jbe
adc
mov
addb
aam
xchg
int3
pop
out
repnz
mov
jo
mov
push
xor
add
repz
mov
mov
or
and
mov
fldenv
int3
scas
cmp
push
orl
push
pop
movsb
popf
push
fcoml
jmp
fiadds
mov
and
jmp
or
sub
pop
loop
es
adc
jmp
and
nop
int
mov
cli
jecxz
jae
cwtl
je
jno
cmpsb
and
pop
mov
or
push
xchg
das
fidivs
jecxz
add
dec
stos
ljmp
xchg
sub
icebp
icebp
mov
jmp
or
xor
and
cltd
in
fildll
gs
jae
cli
mov
adcl
icebp
subb
cmp
pop
pushl
lcall
fisttpl
mov
int
lret
add
jle
lret
lret
jecxz
js
je
cmp
lret
mov
mov
jl
sub
in
das
lret
lret
leave
add
inc
and
fdivp
xchg
inc
into
outsb
sub
outsb
cmp
arpl
jl
xor
mov
add
xchg
push
lcall
test
add
and
and
stos
jae
nop
push
inc
or
addr16
dec
mov
lea
and
leave
stos
pop
out
add
jl
inc
push
push
lods
mov
pusha
flds
lods
or
jae
or
add
ljmp
movsl
adc
ljmp
push
and
inc
int
sahf
es
pop
imul
test
idiv
adc
rcrb
sti
stos
enter
and
mov
add
sahf
shll
in
xor
mov
lahf
test
jo
mov
in
ljmp
mov
daa
addr16
jecxz
sub
xchg
push
xchg
jne
mov
cli
jnp
xor
je
jno
adc
push
adc
adc
xchg
pop
cltd
mov
mov
xchg
test
mov
stos
ficoml
mov
mov
repz
leave
mov
test
aam
mov
pop
out
push
xchg
dec
fcmovu
repz
dec
ds
fwait
dec
mov
cmpsb
out
cmpsb
or
push
nop
push
inc
pop
push
in
arpl
add
xor
mov
xor
xchg
lods
nop
rorl
lods
push
mov
mov
mov
and
inc
rcl
daa
xor
jo
xor
add
shlb
je
pop
pop
or
ret
adc
lds
mov
inc
jnp
mov
sbb
xor
loop
imul
mov
clc
ss
movsl
xchg
dec
dec
es
int3
into
mov
add
dec
cmp
jae
into
pusha
pop
mov
jbe
dec
cmc
mov
sbb
ss
mov
imul
aaa
js
fsubp
enter
mov
faddl
push
leave
add
push
ljmp
mov
or
js
sub
fcom
arpl
push
pop
test
fnstsw
enter
push
fcomip
mov
lds
in
icebp
sub
arpl
inc
movsl
mov
in
sub
inc
fistl
pop
push
stc
lock
shl
mov
xor
fs
push
mov
ret
aam
or
push
enter
js
push
and
hlt
leave
xor
jnp
imul
pop
mov
dec
push
stos
outsl
sbb
outsb
dec
pop
iret
jae
bound
out
sbb
xor
or
mov
mov
push
dec
sbb
jb
das
psubusw
sahf
or
sbb
mov
mov
push
dec
lahf
add
add
ja
movsb
push
scas
imul
sbb
aam
mov
loopne
popw
clc
enter
cwtl
imul
push
sbb
lret
inc
arpl
lahf
lock
arpl
add
xchg
jle
lds
and
mull
cmp
pop
push
jp
and
and
bound
xchg
xchg
mov
mov
push
testl
dec
adc
scas
fcmovnbe
not
jbe
jb
ss
push
push
mov
push
call
push
lret
daa
jne
imul
pop
adc
or
cmp
mov
movsl
mov
fistpll
ret
rol
cmp
ficoms
mov
jecxz
ds
in
cmp
loope
fwait
mov
sub
mov
pop
ja
and
xor
or
cmpsl
je
aas
lods
loopne
cmpb
movsl
or
mov
cmp
insb
add
push
jae
cld
orl
adc
ljmp
bound
inc
jl
lock
das
in
mov
dec
stos
ja
ret
in
inc
mov
push
add
cmp
mov
aaa
test
cmpb
lods
call
push
ss
nop
stos
lock
cli
jmp
xchg
xchg
fisubs
mull
imul
loop
int3
push
mov
pop
call
inc
or
mov
mov
jmp
fistl
fincstp
dec
lods
cmc
in
push
push
mov
lods
test
add
jae
jecxz
cld
pop
rcll
or
aas
dec
add
dec
inc
lock
cld
or
adc
pop
int3
mov
std
push
fildll
xchg
fwait
jge
jnp
mov
pop
mov
mov
and
icebp
jle
sbb
fsubrs
adc
popa
lret
pop
mov
push
jno
cltd
hlt
inc
xor
add
into
repnz
jns
jecxz
stc
stc
adc
mov
xchg
sub
xchg
jg
xlat
lcall
jbe
fiadds
loop
je
xchg
cltd
jge
jnp
pusha
cmp
aad
cmp
jg
fwait
aam
in
ljmp
imul
jge
cli
loop
in
push
jae
cmc
aad
iret
arpl
sarb
dec
inc
test
repz
in
push
divb
out
sub
fsubp
ret
pop
loopne
inc
sbb
or
movsb
sbb
imul
push
test
test
hlt
std
push
mov
fstl
repnz
push
inc
and
mov
inc
xchg
fisubl
arpl
cwtl
hlt
cli
mov
mov
adc
dec
cmp
repnz
repnz
int
aaa
ss
out
movsl
aas
ljmp
cmpsl
test
imulb
loope
add
cs
jl
jmp
enter
cwtl
in
jbe
cwtl
stc
jnp
ret
cwtl
mov
outsl
adc
scas
cmp
cmpsl
push
mov
xor
icebp
sbb
xchg
mov
rcrb
or
gs
es
divl
in
popa
ss
cld
inc
loop
cmc
sub
pop
je,pn
dec
sbb
and
lahf
mulb
xor
into
sbb
mov
icebp
cli
sti
mov
mov
inc
insb
sahf
xor
dec
jl
test
daa
push
test
stc
pop
inc
add
jns
and
adc
mov
mov
mov
mov
call
daa
xchg
sub
jne
and
dec
jno
das
loopne
inc
mov
pop
mov
in
cli
outsl
xlat
sbb
jne
sub
sbb
push
testb
pop
xor
sub
popa
les
push
mov
jmp
dec
push
mov
xchg
sbb
add
arpl
hlt
cmp
xchg
xchg
movsl
clc
jg
mov
mov
push
out
insb
cs
sti
iret
adc
mov
cmp
stc
jno
cwtl
out
in
cmp
test
scas
mov
sbb
or
or
cmp
push
rorb
les
sub
mov
sahf
or
jl
xor
movsb
pop
in
inc
mov
xchg
cmp
sti
adc
dec
mov
dec
mov
incl
test
or
ret
clc
scas
dec
std
xchg
inc
mov
mov
jp
dec
mov
jg
lds
sahf
lcall
ret
outsl
in
sub
xchg
in
cs
pushf
add
mov
js
addr16
out
or
js
jle
add
or
addl
shl
ljmp
sub
dec
nop
les
mov
jb
sub
push
call
loope
repnz
cmp
dec
outsb
les
sbb
movsl
jmp
cmp
mov
pop
adc
adc
push
inc
jns
int
pop
mov
mov
fs
adc
mov
js
jbe
movsb
push
push
jns
sub
lret
jp
lret
imul
jae
in
repz
popa
sub
inc
xor
sbbb
or
repz
aas
jno
pop
mov
adc
cltd
jns
pop
sbb
mov
movsl
lahf
lock
xor
fdiv
sbbb
pop
adc
pop
cltd
cli
pop
test
add
shl
dec
mov
retw
sub
xor
movsl
hlt
and
pusha
sub
sbb
add
adc
movsl
stc
xchg
outsl
or
cmpsl
fcmovne
int3
aam
push
pop
jmp
mov
lods
mov
mov
cmp
or
pop
jmp
cli
cltd
scas
roll
cmc
int
pop
xchg
in
lods
xlat
sbb
gs
sub
lds
test
rcrb
sbb
push
sbb
popf
add
inc
sahf
sbb
rdpmc
pop
cmpsb
xchg
insl
xor
divl
xchg
pop
je
jle
jecxz
xor
cmp
out
xor
in
jl
popl
test
push
lods
mov
or
outsb
aad
xor
mov
xchg
clc
int3
test
adc
push
push
mov
ficoms
cmp
sbb
test
jnp
cmp
popa
mov
adc
or
imul
pushf
outsl
loop
inc
out
inc
inc
es
rol
mov
adc
fcmovne
ja
fimuls
jmp
jl
sbb
outsl
jns
insl
xchg
es
sahf
sub
sbb
and
jmp
mov
dec
and
popf
stc
push
ret
inc
cmp
jno
xlat
nop
fs
mov
dec
cs
mov
jb
add
test
aad
mov
repz
xor
cmp
sbb
scas
push
sbb
mov
insb
fnstsw
jl
shl
push
dec
xor
iret
pop
push
push
out
and
add
pop
cmpsl
lea
xchg
cmc
add
jg
xchg
sub
mov
pusha
lods
imul
push
data16
adc
cmp
arpl
xchg
scas
mov
add
sbb
or
jns
pop
xchg
cmpsl
je
xor
ret
or
mulb
cmp
add
sbb
inc
sbb
mov
xchg
add
lret
incl
and
jmp
icebp
cmp
std
push
jmp
xchg
test
jbe
bound
mov
push
mov
add
call
test
sub
imul
mov
popf
arpl
repz
fisubrl
cmpb
inc
mov
cmc
pop
push
repz
leave
push
add
adc
dec
push
dec
mov
inc
inc
dec
loop
dec
cltd
cs
cltd
pusha
lgs
iret
adc
dec
mov
dec
inc
iret
cs
loop
js
jo
add
or
xchg
pushf
mov
testb
fildll
push
pop
fldl
jbe
or
popa
xor
rclb
xchg
pushf
cmc
mov
sbb
incb
mov
out
or
xchg
mov
inc
mov
sbb
clc
mov
or
xchg
mov
mov
sbb
xchg
jge
data16
ds
xchg
xor
inc
jle
push
push
jno
push
jle
add
mov
cli
or
mov
addr16
aam
xchg
sub
iret
sti
cmp
push
adc
aaa
addr16
les
adc
or
mov
inc
inc
inc
rcl
cmp
push
popf
in
mov
loopne
adc
push
les
out
cmp
or
popf
mov
icebp
add
aas
and
mov
aas
and
mov
xor
ret
jmp
out
add
je
fwait
push
repnz
inc
xchg
aad
jmp
pop
out
out
scas
jno
in
fwait
dec
std
adc
fwait
adc
and
bound
clc
out
in
and
insl
int
ds
pop
stos
mov
lret
dec
xchg
mov
push
sbb
in
jle
ljmp
jle
mov
pop
in
xor
nop
add
push
rorl
mov
mov
ret
jge
mov
cmpsl
xchg
movsb
jg
inc
push
xchg
push
out
jae
add
pop
clc
lcall
mov
mov
lcall
pop
lahf
vpsubsb
cld
adc
mov
fs
mov
cmp
and
insb
insb
imul
ja
aas
adc
or
loop
jns
iret
push
pusha
sbb
imul
sbb
sub
lahf
cmc
loopne
lret
push
cmp
iret
inc
ljmp
pop
call
outsl
fdiv
jno
mov
pop
into
nop
pop
mov
push
out
push
pop
rcrb
cmp
xor
xchg
test
call
xchg
sub
jb
cmp
push
mov
adc
cmp
loopne
and
cltd
dec
mov
xlat
pop
push
add
mov
add
xchg
inc
sbbb
nop
adc
iret
mov
cli
xor
aam
dec
repz
in
sbb
mov
cltd
xor
and
lods
push
pop
mov
sub
dec
pop
xchg
call
call
test
sub
cli
into
dec
cmp
pop
outsl
iret
mov
clc
pop
stos
adc
stos
loopne
inc
lods
cmc
imul
fisttpl
cld
je
loope
sbb
out
int
sub
push
push
call
icebp
push
cli
adc
jnp
add
cmc
les
dec
movsl
loopne
inc
shll
push
adc
sbb
and
test
lock
jmp
test
arpl
mov
and
jle
lret
xor
jl
insl
jle
mov
das
push
xorb
sbb
adc
mov
jle
sbb
lods
insb
inc
xchg
clc
repz
and
mov
cli
out
cmp
push
movl
stc
cltd
jmp
fistpl
mov
popf
lock
sub
xchg
mov
pop
dec
dec
cld
fsub
enter
clc
lahf
mov
sahf
orl
js
cld
dec
ds
push
lods
arpl
push
add
push
cmp
shll
test
sbb
adc
mov
cwtl
cmp
out
sub
dec
adcb
xchg
push
sbb
adc
inc
mov
sbb
and
mov
stos
dec
xchg
dec
in
ret
sbb
dec
push
mov
push
in
jl
iret
not
nop
and
fistpl
rcr
mov
je
or
push
mov
sub
xchg
adc
in
push
enter
in
aas
out
mov
fs
jg
lcall
insb
in
sbbb
dec
dec
hlt
xchg
xlat
inc
cwtl
mov
mov
cmp
enter
pop
imul
fstps
movsl
inc
xor
push
cmp
pop
in
xchg
pop
out
xchg
rorb
or
repz
adc
mov
sub
mov
jnp
dec
push
int
fistps
push
fadds
ds
mov
jge
pop
or
sub
roll
out
dec
loopne
jno
mov
dec
sbb
push
popf
push
repnz
shrl
push
and
pop
icebp
mov
push
add
mov
xor
xor
imul
test
pop
and
cld
push
daa
fs
stc
lock
rcrl
push
jle
insl
lods
inc
xchg
inc
outsb
pop
stc
cmp
and
mov
adc
mov
and
push
mov
lods
in
dec
clc
jle
arpl
mov
sarl
pop
sbbl
sarl
sahf
insb
adc
insb
ret
fwait
stc
xor
dec
sbb
mov
jge
js
int
dec
test
data16
jmp
test
out
insl
pusha
shll
icebp
adc
sbb
push
inc
scas
std
lods
repz
repnz
lds
and
into
scas
lret
inc
xchg
sub
std
fdivs
jp
pop
add
pop
mov
icebp
divl
pusha
stc
daa
call
dec
and
ja
outsl
ja
call
pop
testb
outsl
xchg
fcompl
stos
mov
xchg
add
out
sbb
pop
mov
push
and
adc
mov
fldcw
xor
fwait
dec
pop
cmp
xchg
scas
pushf
loop
xchg
xchg
fnsave
jmp
icebp
mov
stos
daa
sub
insl
inc
lock
xchg
push
popa
fcoml
jo
popa
dec
xchg
mov
mov
inc
xor
jne
sbb
push
mov
xchg
jmp
jo
fsts
lock
lret
push
mov
andb
scas
notl
xorb
inc
ror
clc
std
hlt
sub
jmp
int3
icebp
je
mov
scas
and
jne
inc
sub
pop
jg
adc
pushf
sbb
xlat
push
idivl
in
adc
mov
js
and
cmpsb
imull
push
mov
sbb
jae
mov
inc
jecxz
popa
std
xchg
dec
cld
xor
rol
int3
fldl
pop
pop
cli
pusha
aas
sbb
dec
in
arpl
mov
sbb
lods
movl
push
lcall
ds
dec
add
cmp
add
push
scas
xchg
pop
dec
add
mov
mov
mov
test
pop
inc
cmc
sub
ljmp
adc
clc
dec
inc
add
adc
movsl
mov
mov
mov
push
shlb
or
xor
add
movsl
scas
aam
jmp
outsl
arpl
roll
je
sahf
ret
mov
sar
dec
jbe
mov
jae
jl
push
or
jb
jns
sub
adc
ja
push
push
add
repz
std
and
mov
filds
mov
add
aad
imul
mov
aaa
dec
insl
loopne
xor
in
jmp
repz
in
cli
mov
arpl
add
pop
divl
popf
xchg
xchg
js
xchg
aad
mov
jae
ficompl
stos
mov
ret
in
push
rol
or
mov
cmp
xchg
std
dec
stos
notl
add
fsubr
push
adc
mov
dec
adc
cmpsb
xor
jle
lret
in
mov
sub
or
nop
test
test
push
sti
cmp
mov
mov
scas
into
je
mov
cmp
test
sub
add
fldenv
xor
cli
jns
out
and
insl
mov
mov
sahf
iret
pop
pop
mov
push
pop
push
xor
and
or
icebp
mov
into
movsb
enter
mov
fldcw
cmp
mov
mov
dec
imul
mov
imul
sub
testl
push
pop
aas
push
sub
movsb
out
sub
orl
loope
mov
in
push
pop
sbb
repz
jge
ret
cld
push
les
hlt
jae
into
loopne
je
cmpb
lcall
cmp
stos
outsb
pop
mov
pop
sbb
add
mov
movsb
loopne
inc
mov
mov
or
xchg
inc
cmp
cmp
dec
jecxz
and
in
xor
lret
in
cli
pop
pop
pop
xchg
rcll
xchg
add
lahf
dec
aam
sbb
xlat
xchg
jg
loop
test
ss
inc
xor
mov
cltd
rep
out
filds
fcmovnb
das
mov
lea
adc
sbb
lahf
xchg
mov
and
les
mov
push
lea
inc
loope
sbb
ds
pop
mov
xor
xchg
les
cld
dec
fwait
push
into
jns
adc
scas
sub
pop
inc
mov
int
ljmp
jmp
mov
cmp
and
mov
xchg
in
xlat
insb
aad
mov
pop
cmp
out
pop
lahf
in
movsl
icebp
stos
push
imul
addl
xchg
movsb
sub
test
xchg
adc
adc
sbb
int
mov
xchg
clc
movsb
pop
sbb
das
ret
mov
jns
fcmovnu
xchg
pcmpeqb
add
subb
xor
inc
aas
and
inc
fnstcw
mov
or
pop
hlt
ss
cmp
adc
not
push
outsb
jg
pop
mov
sub
jecxz
lcall
adc
inc
pop
nop
icebp
mov
sbb
cmp
fildll
jg
in
fldl
std
sti
mov
sub
out
pop
popf
or
test
and
lcall
pop
andb
cmp
mov
dec
ja
xor
stos
or
lahf
push
add
loopne
sbb
ja
adc
ret
dec
popf
cs
mov
scas
dec
pop
pop
mov
mov
mov
adc
or
adc
ficoms
jge
stc
mov
xor
add
ds
cmp
arpl
sbb
rcl
cs
xchg
loop
cmpsb
sti
shl
sub
mov
into
loopne
cmp
xchg
xor
testb
dec
jbe
fsts
in
cwtl
push
pop
mov
jmp
and
push
pop
inc
addr16
and
mov
pop
cs
js
dec
cwtl
push
push
popf
imul
jmp
and
sub
push
or
daa
jl
mov
jl
lret
aaa
jae
fiaddl
mov
add
jmp
adc
dec
lds
fs
xchg
into
cltd
sub
mov
push
je
dec
popf
testl
das
jecxz
cmp
ss
push
mov
aad
int
shr
mov
imul
dec
fs
cli
jae
jae
inc
popf
mov
sub
mov
push
arpl
cs
mov
inc
shrb
push
jp
insb
inc
push
mov
sbb
jl
jbe
mov
int
test
in
scas
ljmp
mov
outsl
shrb
adc
sbb
jbe
jl
dec
idivl
scas
negb
iret
xor
mov
fists
imul
das
testb
sarl
iret
ret
fwait
xor
stc
cmp
loopne
mov
gs
dec
mov
rcr
add
lds
test
sahf
mov
loope
das
out
jno
test
mov
test
leave
shlb
ljmp
mov
es
movsb
sahf
sahf
mov
xchg
shlb
repz
and
lods
inc
or
ljmp
sub
push
stos
mov
adc
mov
repz
pushf
sbb
cmp
add
das
ja
lcall
lahf
shll
movsb
ret
sub
jnp
test
ljmp
mov
pop
sbb
repz
cs
mov
iret
add
xchg
sub
hlt
imul
inc
fists
jl
sub
sbb
xchg
xchg
lods
and
cltd
mov
gs
and
neg
daa
scas
rolb
mov
xchg
stos
sub
push
dec
and
sbbb
in
inc
cmpsb
insb
mov
shrb
movsl
mov
sbb
daa
mov
sbb
in
and
add
mov
mov
pop
mov
push
add
std
push
and
sbb
inc
mov
pop
xor
adc
sub
push
mov
xchg
aaa
rcll
stos
sub
mov
fcoml
xor
dec
ret
or
xchg
and
or
jg
sbb
lret
ljmp
mov
gs
adc
dec
and
roll
scas
push
push
aas
xchg
lahf
or
push
mov
fcompp
inc
sub
xlat
pop
fsubp
fdivs
pop
push
loop
xorb
daa
pop
negl
mov
adcl
fidivrl
sar
cmp
xchg
push
lea
lock
xor
pop
xchg
or
dec
addb
lahf
mov
jns
inc
xor
push
movsl
ret
fwait
in
adc
scas
das
insl
test
dec
shll
pop
fs
stc
cmp
aas
mov
repnz
sub
loope
loopne
pop
xor
pusha
dec
pop
jae
aam
aam
mov
add
pop
call
cmp
imul
subb
aam
orb
jl
out
pop
push
pop
jno
and
fiaddl
mov
adc
cmp
hlt
sbb
rcll
in
or
imul
lahf
aam
cmpsl
mov
pop
jp
xchg
mov
jne
inc
sub
loop
pusha
pop
cmp
sbb
or
fldenv
cmp
ret
xchg
push
xor
push
push
cmp
aaa
mov
ja
mov
mov
sbb
inc
ret
cmp
fwait
and
inc
xor
xchg
inc
mov
hlt
pushf
lret
xchg
jnp
enter
mov
push
xchg
xchg
aam
scas
mov
insb
sbb
outsb
inc
outsl
dec
lods
fs
sbb
mov
sbb
nop
mov
out
xchg
fmuls
clc
ja
jmp
mov
ljmp
push
push
add
lea
push
jle
enter
mov
repnz
notl
add
inc
sahf
imul
xchg
imul
rclb
add
inc
inc
pusha
xchg
cld
and
jbe
rclb
out
fsubl
imul
add
push
jle
push
mov
fs
and
test
setg
mov
pop
int
out
adc
mov
fdiv
into
ret
inc
mov
bound
and
mov
mul
cmp
mov
sti
popf
jmp
sarl
outsl
stc
cli
jnp
mov
jl
mov
sbb
push
jge
xchg
cli
lds
stos
mov
cmp
jnp
sub
push
ss
inc
lods
ss
fdivs
xchg
in
shll
jecxz
inc
add
out
mov
scas
pop
push
decl
and
sbb
popf
xor
adc
js
data16
ficompl
ds
jns
in
fldt
mov
dec
jl
cmp
inc
test
cmc
adc
popf
mov
dec
loope
jp
stc
jae
idivb
lods
cmp
mov
inc
inc
push
pop
pop
aaa
push
nop
mov
adc
sub
add
out
mov
pop
jo
jo
dec
cmc
push
les
std
cwtl
pop
aas
mov
jge
lds
sub
dec
jno
dec
pop
movsb
adc
dec
mov
dec
push
inc
add
xor
insl
popf
dec
js
je
jns
adc
lods
mov
mov
xor
andl
xor
and
movsb
jp
jmp
lahf
or
shlb
xor
inc
sbb
adc
mov
adcb
mov
cmp
xchg
rcr
sarb
add
mov
outsl
and
add
out
add
inc
lret
sbb
or
mov
ror
out
aad
std
leave
scas
rorb
sbb
ja
sub
cmpsl
ljmp
sub
lret
mov
test
mov
adc
imul
cmp
int3
xchg
lods
mov
jge
push
jnp
lahf
dec
loopne
xchg
cwtl
add
xor
or
subl
mov
call
sbb
adc
mov
sahf
mov
or
nop
test
pop
pop
xor
xor
lods
mov
mov
or
jnp
and
sarb
nop
fwait
add
inc
lret
mov
or
ret
fwait
push
push
pop
js
inc
movsb
dec
lock
mov
lret
fstpt
xlat
adc
mov
add
pop
rorb
mov
scas
mov
cmp
pop
out
sar
adc
adc
cmpsl
jae
inc
sbb
call
ss
scas
xor
cmp
stos
fwait
mov
rcll
icebp
jno
ret
orb
outsl
lods
mov
inc
inc
sbb
or
aad
push
stos
mov
cmpsl
cld
sub
aaa
es
add
mov
pusha
bound
movsl
or
sti
xchg
imul
inc
xorb
and
sbb
mov
push
sub
xchg
pop
outsb
jns,pn
push
pushf
cwtl
orb
add
mov
arpl
mov
aam
push
rclb
cmp
pop
adc
inc
movsb
sbb
das
pop
cld
movsl
sbb
test
notl
push
inc
add
clc
dec
and
call
sub
or
pop
out
mov
cmpsb
clc
jno
mov
popa
stc
add
jg
inc
test
rcrb
daa
in
mov
sbb
in
int3
inc
aaa
push
out
mov
dec
mov
sahf
pop
frstor
jnp
pop
adc
cli
push
or
iret
fildll
jo
and
mov
out
mov
insb
xor
rcrl
xor
or
inc
les
push
shrl
mov
cmp
xor
xor
sbb
push
movsb
jmp
add
gs
xchg
xlat
sbb
jecxz
sbb
filds
or
cmp
push
mov
movsb
cmp
inc
shll
push
sbb
xchg
stos
rorl
push
mov
xor
loopne
add
aas
iret
in
idivl
repz
sbb
ffreep
mov
adc
int3
mov
loope
in
mov
xor
or
xchg
idivb
in
out
pushf
lahf
int3
jnp
adc
push
sub
sub
jno
sub
arpl
mov
inc
loopne
test
add
jb
lahf
push
mov
mov
mov
mov
sbb
out
mov
scas
and
xchg
scas
test
push
pop
xchg
xor
repz
mov
sub
sub
aam
mov
hlt
add
arpl
adc
push
aam
adc
repnz
jnp
es
mov
les
les
jns
push
sub
data16
lret
or
repnz
lret
cli
xor
xchg
into
xor
inc
cwtl
std
test
aaa
xchg
int3
add
cmp
inc
pop
jno
push
xchg
sti
ret
jp
push
loopne
lock
pop
xor
xor
mov
or
add
sub
jne
sub
pop
inc
cmpsl
stc
gs
pop
sub
lret
fmuls
les
adcl
mov
mov
js
xor
jl
xchg
pop
lret
mov
insb
dec
mov
sbb
out
test
js
pop
addr16
and
fwait
testb
je
mov
cld
adc
pop
fildl
pop
mov
out
add
xchg
stc
icebp
mov
jns
daa
jmp
sar
fwait
jne
neg
enter
dec
dec
stos
inc
push
mov
mov
fsubrs
movl
jnp
loopne
test
fwait
jnp
jge
dec
je
lods
js
jno
mov
xchg
jne
imul
in
cmp
cwtl
shll
stos
pop
cli
ljmp
mov
or
shll
fs
and
das
dec
cmp
mov
fnsave
nop
mov
daa
adc
insb
push
int3
hlt
ljmp
int
jns
test
out
fstps
adc
mov
add
std
mov
mov
adc
scas
adc
repz
int
adc
mov
dec
jnp
mov
or
xor
xlat
push
jecxz
and
shll
add
push
jmp
test
dec
xor
test
sti
rcl
cmp
lahf
jno
mov
mov
mov
je
cmpsb
shlb
inc
inc
add
xor
cltd
in
xor
enter
xchg
loop
cld
inc
scas
xchg
movsl
add
les
call
add
ror
rol
xor
jns
out
orb
sub
push
divb
pop
mov
scas
out
jg
lea
xchg
addb
xchg
jae
lea
cmc
movsl
rcll
mov
jne
push
add
frstor
jae
rcll
lods
mov
sub
and
push
cmp
out
or
mov
add
pop
mov
inc
jae
out
xchg
cmpb
sub
xorl
jnp
adc
mov
int
push
pop
or
fsubs
inc
stc
aad
add
mov
sub
jl
lods
fdivs
push
mov
fcomps
jp
cmp
sbb
add
imul
and
aad
sti
aaa
fmuls
ret
pop
scas
int3
push
push
push
inc
cmpsb
adc
fdivp
mov
stos
cmp
imul
jp
push
aam
lret
mov
sti
pop
std
icebp
adc
stc
jecxz
and
adc
lahf
jnp
rol
in
lods
out
or
mov
ljmp
lret
mov
mov
mov
fcomps
nopl
add
sbb
inc
cmpsl
sbb
push
scas
addr16
enter
and
aad
pop
sbb
dec
jnp
scas
jnp
hlt
xchg
and
push
fimull
jb
jg
mov
out
rcrb
ss
call
out
dec
mov
cmp
fisubs
mov
and
lret
sub
mov
cmp
mov
mov
jge
in
mov
ret
std
ret
fidivrl
sub
mov
mov
or
loop
adc
loop
jg
into
jmp
test
or
pusha
mov
data16
out
pusha
xor
add
mov
cld
cmp
jae
rorb
sbb
pop
loopne
loopne
filds
pop
shl
pop
jge
jge
repz
xor
push
lods
sahf
loopne
pushf
test
or
xchg
jmp
sub
cmp
cmpsb
push
imul
and
aam
fnstsw
dec
mov
fisttpll
cmp
cld
push
xchg
fbld
jae
mov
divb
scas
xor
cld
push
mov
jno
lds
lret
inc
lods
pop
or
mov
and
shrl
dec
mov
xchg
xchg
pop
or
loop
fwait
mov
jecxz
pop
sarl
aam
dec
xchg
xchg
cmp
iret
add
inc
jns
lea
sarb
out
xchg
cmc
mov
mov
stos
out
call
mov
fnstcw
nop
out
mov
sbb
stos
xchg
dec
in
push
xor
test
jmp
in
sbb
pop
xor
shlb
sub
in
mov
hlt
or
daa
fistl
dec
lret
sbb
mov
mov
xchg
leave
and
xor
sarl
mov
nop
je
lock
sub
clc
into
lcall
enter
and
pop
imul
lcall
push
push
mov
stc
push
and
or
mov
popf
js
imulb
or
jns
inc
push
subb
sub
outsb
or
or
push
and
cmpsb
movsb
add
imul
lods
lods
mov
pushf
push
arpl
mov
sbb
lods
movsb
and
and
fimull
adc
sbb
imul
pop
jecxz
dec
icebp
ret
sets
push
fstpt
out
enter
push
dec
push
pop
enter
mov
aaa
inc
pusha
and
ljmp
stos
test
push
jge
ljmp
fstl
jae
sub
cmp
or
mov
and
cwtl
je
cmp
dec
add
xchg
jbe
or
mov
xorl
aas
cmp
in
adc
int3
cwtl
xchg
mov
mov
xor
mov
dec
or
ret
lahf
js
dec
cmp
stc
andb
test
add
sbb
xchg
jb
test
hlt
xor
daa
in
popf
in
jmp
or
inc
cmp
mov
sub
jl
or
pop
push
jns
xor
jo
and
sbb
leave
xchg
mov
xorb
xchg
mov
jae
add
int
scas
leave
testb
adc
icebp
lock
mov
scas
or
lahf
adc
xchg
cli
or
and
pop
pop
fdivrp
cmp
in
loope
jl
add
add
xor
jne
adc
arpl
inc
dec
cmp
dec
mov
outsb
in
outsl
adc
loopne
data16
jg
mov
aad
test
lock
repz
aaa
movsl
inc
mov
ret
mov
cwtl
dec
clc
mov
sub
std
or
or
or
lea
aas
pop
movsl
cmp
repz
add
mov
enter
xor
jne
sbbl
popa
push
iret
xor
lcall
dec
mov
xchg
dec
sub
inc
adc
das
mov
test
bound
jle
add
adc
out
iret
sahf
xor
jnp
imul
xchg
sub
fadd
dec
lods
xchg
add
movsb
xchg
shll
and
jp
jecxz
in
imul
and
pop
and
push
sbb
dec
add
push
jl
sub
out
je
adc
mov
pop
loope
adc
xor
xor
fsubr
lods
xor
fst
mov
arpl
adc
fcoms
clc
add
ret
shlb
cs
bswap
out
popa
mov
in
imul
jecxz
lret
mov
add
cs
movsb
pop
addr16
lret
jo
in
in
ss
out
cmp
mov
sub
adc
xor
dec
mov
test
mov
inc
mov
xchg
mov
test
cltd
sbb
xchg
jae
ficoml
ret
adc
sbb
int
popf
lods
aam
cwtl
shlb
push
test
lcall
fstps
mov
insb
jmp
adc
leave
mov
mov
pop
aam
pop
scas
push
inc
adc
xchg
jl
xor
jo
mov
mov
test
lods
adc
or
inc
or
add
adc
nop
or
or
jnp
add
mov
and
orb
aaa
jne
out
inc
pop
push
orl
pop
push
shrl
aad
mov
ret
enter
arpl
inc
fcmovnb
cmpsl
pusha
jecxz
lcall
mov
orb
jle
in
dec
mov
jb
cmc
leave
sbb
sub
lods
lcall
scas
cmp
xchg
sub
jge
clc
xchg
jbe
in
or
mov
subb
mov
sbb
xor
subb
or
dec
shl
mov
popf
jp
sub
pop
movsl
iret
push
dec
dec
iret
imul
jecxz
sub
sbb
push
ret
insl
out
xchg
leave
pop
add
xchg
test
or
jg
fs
sub
dec
icebp
jns
in
adc
movb
cmp
mov
mov
cltd
jg
jne
xorl
adcl
lea
add
xchg
arpl
xchg
shrb
iret
das
loope
out
xchg
pop
loopne
dec
mov
stos
mov
jns
subb
sub
leave
pusha
sbb
addb
mov
add
imul
and
push
mov
repnz
outsl
sub
mov
and
in
call
enter
sahf
cmpsb
aad
ret
outsl
cwtl
popl
arpl
push
sub
cmpsb
pop
mov
jmp
inc
popl
mov
cmp
push
xchg
mov
fiaddl
sub
imul
inc
adc
stc
pop
popf
add
and
and
xor
mov
arpl
mov
xchg
xlat
shr
mov
jl
stos
inc
into
mov
and
fisttpl
pop
and
sub
rolb
test
mov
loope
pushl
pop
sub
scas
xor
into
xchg
scas
push
mov
outsb
push
fisttpl
xchg
dec
adc
dec
aaa
mov
mov
loop
fdiv
pop
cwtl
cmp
inc
sub
mov
sbb
bound
xchg
cld
fldcw
adc
xchg
stos
cwtl
sbb
je
call
cmp
aaa
push
dec
pusha
negl
jge
cmpsl
mov
lcall
pop
aam
lods
xchg
push
sarl
gs
bound
dec
push
fwait
cwtl
push
jecxz
ljmp
jmp
cmc
cmp
mov
add
imul
sbb
ret
mov
or
sbb
jp
shll
je
mov
xchg
cli
jge
mov
add
sbbl
and
xchg
loop
push
mov
imul
stos
sbb
insb
inc
aam
xchg
sti
lret
and
fsts
movsb
jae
adc
dec
pushf
mov
bound
cltd
and
xchg
jge
push
insb
ror
popa
in
ljmp
cmp
testb
sub
stos
xor
inc
es
sti
mov
push
sbb
xor
dec
in
dec
fidivrl
out
pop
stc
aaa
pop
lahf
gs
xchg
inc
aas
bound
mov
dec
push
push
lahf
pop
lcall
in
inc
push
xchg
dec
xchg
dec
int3
jp
pop
incb
sub
cmp
mov
cli
mov
out
mov
imulb
and
popa
dec
and
pop
push
mov
ror
xchg
and
push
ds
pop
stos
js
dec
fs
pop
mov
inc
jbe
daa
xchg
xlat
orb
pop
sti
sti
add
arpl
cld
jb
xchg
pop
mov
inc
xor
jne
sahf
imul
and
sub
int3
dec
in
pop
outsl
icebp
arpl
rolb
jmp
negb
leave
push
xorb
cld
sti
cwtl
movsb
fiadds
add
insb
enter
pop
mov
lahf
pop
xor
mov
call
fdiv
and
adc
outsb
hlt
int
in
repz
add
lds
call
push
stc
into
dec
je
mov
dec
fsubl
mov
mov
ror
daa
jno
test
cmp
inc
fwait
xchg
mov
sub
ja
movsl
xchg
repnz
mov
cmp
pushf
xchg
mov
movsb
xor
out
icebp
mov
xchg
add
stos
shrb
jne
mov
jnp
add
jl
pop
decl
in
pop
ljmp
mov
push
and
mov
cmp
divl
jg
enter
pop
imul
jo
sub
ja
push
sub
cmc
cmp
lcall
lcall
mov
push
or
push
arpl
icebp
jg,pt
mov
loop
rol
mov
pop
sub
into
xor
sbb
add
pop
inc
and
mov
push
int3
adc
and
sub
xchg
sbb
fdivr
mov
mov
inc
cltd
or
dec
daa
xchg
or
adc
push
ljmp
shrb
int
jmp
sbbb
popa
adc
test
es
stos
sbb
sbb
pushf
xor
sbb
pusha
dec
nop
outsb
leave
icebp
jg
loop
dec
sbb
je
mov
sbb
mov
and
sbb
push
paddq
sub
ret
movsb
sarb
inc
leave
pop
mov
outsl
inc
aad
add
dec
pop
push
shlb
add
aad
inc
sarb
jne
lret
lock
mov
xor
scas
push
mov
repz
das
sub
loop
push
and
roll
and
fcoml
adc
xlat
pop
ret
xor
pop
std
mov
push
cli
stos
sbb
ja
leave
ffree
aaa
aas
outsl
add
push
testl
movsb
ret
fwait
mov
or
jge
and
cmpsl
mov
dec
jmp
adc
iret
stos
je
jbe
cmpsl
sub
iret
sbb
into
cmp
out
mov
mov
and
or
icebp
inc
push
aas
push
xor
and
xor
aaa
in
js
aad
cmp
dec
mov
repnz
icebp
les
je
icebp
lcall
test
push
out
xchg
adc
movsb
insb
push
lea
xor
sub
popf
push
lds
popa
mov
xchg
cli
loope
mov
insb
cmp
in
pop
inc
jb
pushf
and
pusha
sbb
sbb
sbb
scas
cltd
ror
push
int
jae
dec
mov
cmp
xchg
or
add
cmp
ret
or
xor
test
pop
push
aam
sbb
and
jb
jecxz
xor
shlb
adc
and
mov
push
fidivrl
or
jge
in
call
outsl
mov
xchg
in
lret
aam
cmp
jbe
fs
mov
sti
mov
inc
addb
dec
stos
sub
scas
sub
fstp
fists
mov
jmp
mov
sbb
xor
pop
les
xor
loopne
adc
outsb
jne
jae
lods
gs
sbb
scas
test
and
data16
mov
cld
stos
je
stos
rclb
xlat
out
or
pop
leave
add
pop
pop
cltd
cmpsb
xchg
xor
loope
sbb
daa
loopne
push
push
ret
jle
jo
inc
mov
inc
mov
add
std
xchg
mov
xor
jne
mov
adc
cmp
add
loop
inc
cltd
mov
rcl
inc
addr16
cmp
ljmp
cmp
mov
mov
mov
gs
inc
pop
cmp
cmpsl
mov
inc
push
popf
adc
clc
xchg
mov
out
jl
or
xchg
sub
sub
pop
addr16
mov
push
nop
ljmp
mov
cmpsb
jno
gs
sarb
jns
sub
outsl
loop
push
mov
fwait
cltd
sbb
imul
repz
jae
cmpsb
push
xchg
or
shlb
scas
rolb
or
mov
xor
out
sarl
lods
and
jmp
dec
in
dec
shrl
mov
lods
outsl
cmp
cltd
adc
push
pop
int3
jg
insb
mov
dec
jp
lcall
aam
or
push
add
xor
iret
inc
out
pop
scas
sti
mov
dec
insb
fwait
clc
mov
pop
mov
mov
leave
jle
jl
loop
xor
adc
lds
out
cmp
loopne
push
jle
dec
pop
rcl
push
sbbl
scas
popf
push
mov
cmp
into
xchg
dec
popa
jb
mov
fcmovne
mov
add
scas
mov
outsl
add
pusha
cltd
cli
daa
das
pop
or
ret
cmp
repnz
jg
xchg
xor
ret
pop
call
lods
xchg
jo
or
aad
cltd
cld
stc
push
mov
cmp
dec
mov
in
hlt
mov
enter
iret
cld
out
jbe
or
pop
sub
adc
out
dec
jno
dec
pop
sub
pop
sub
jmp
dec
xchg
mov
lea
lahf
mov
mov
inc
fcomi
dec
mov
dec
push
sti
aaa
cmp
movsb
or
outsl
lcall
fldt
and
hlt
imul
or
lods
inc
push
jo
adc
mov
dec
enter
or
loope
mov
jo
scas
fwait
pop
jo
pop
and
test
out
push
mov
ss
mov
ja
je
and
adc
pop
add
mov
adc
mov
adc
mov
xor
outsb
dec
xchg
cwtl
ljmp
pushf
test
add
pushf
imulb
xchg
xor
jnp
adcb
repnz
hlt
sbb
cmp
mov
jle
test
bound
out
cwtl
mov
sub
ficoml
or
notl
and
popa
mov
mov
lcall
jae
add
xchg
int3
movsl
mov
pushf
gs
xchg
movsb
das
stos
sbb
cmp
lcall
test
lahf
rolb
sub
dec
push
daa
or
and
dec
xchg
xchg
es
notb
daa
jg
and
loopne
lods
jae
sbb
ss
std
fimuls
mov
enter
and
add
cmp
xor
aad
xor
shrb
les
xor
cwtl
sub
dec
iret
add
xor
dec
iret
xchg
pop
shr
xor
dec
xor
inc
jmp
xor
adc
xchg
loop
mov
jge
loop
int
fdivr
sbb
push
repnz
and
and
sub
fs
outsl
add
loope
lods
dec
or
js
dec
hlt
xchg
add
add
and
xchg
mov
pop
xchg
fwait
sub
xchg
jno
dec
mov
xor
push
loopne
out
mov
out
not
fwait
cmp
pop
dec
jno
fwait
lods
or
push
fidivrs
jae
dec
adc
cwtl
mov
cltd
ljmp
xchg
xor
and
cmp
icebp
mov
jno
sahf
movsb
popf
sub
rcrb
mov
icebp
xchg
mov
sbb
lock
cmc
lds
pusha
push
dec
xchg
lods
sbb
sbb
loopne
data16
jmp
ja
sarl
adc
sarl
pop
or
cmp
pop
fsubl
je
add
je
repz
icebp
xchg
andb
xchg
push
pop
loop
ud0
lcall
call
jg
hlt
dec
in
out
sub
jmp
pop
outsl
fs
stc
dec
sti
fbstp
mov
outsb
add
sbb
jp
and
xor
xlat
outsl
or
add
jecxz
cmp
out
mov
das
pop
fstl
les
push
xchg
enter
xor
call
jno
movsl
mov
icebp
pop
mov
es
mov
and
inc
and
or
shll
hlt
ffreep
or
ss
lea
popf
inc
cmp
adc
push
add
jae
es
sbb
xchg
pusha
jb
addr16
lret
out
pusha
add
push
xchg
adc
adc
jns
arpl
xor
and
decb
arpl
inc
ja
mov
mov
fs
lret
data16
pushf
int3
jmp
and
shl
pop
adc
adc
jecxz
out
lods
cli
aas
xorb
sub
jmp
mov
cs
in
dec
xor
xchg
scas
xchg
pop
xchg
into
jnp
mov
cmp
cmp
xlat
inc
mov
sarb
mov
fucom
cmp
mov
xor
jae
loopne
insl
or
cld
mov
dec
pop
mov
push
sbb
lahf
cmpsb
mov
jne
aam
dec
scas
rorb
hlt
loope
movsl
mov
cmp
mov
scas
pusha
pop
aas
cmp
test
test
nop
sub
push
add
mov
test
and
xor
add
and
pop
mov
insb
push
divl
cli
inc
xchg
mov
aaa
nop
mov
lret
jp
fisubl
loopne
lea
fs
frstor
icebp
jp
pushf
sbb
dec
dec
fbstp
add
in
jae
mov
mov
test
fstps
and
fwait
add
add
adc
push
popf
inc
je
dec
ja
lock
mov
xor
lcall
out
int
out
loop
loopne
xchg
xchg
cwtl
lret
sub
dec
mov
dec
stc
or
adc
xchg
outsl
test
push
mov
jbe
sbb
sbb
mov
enter
in
fidivrs
mov
hlt
repz
out
inc
xchg
adc
sar
je
js,pt
push
sbb
mov
fisttpl
pop
sti
xor
jp
lds
or
pop
push
jg
lods
or
push
rcll
lds
cld
int3
stc
dec
push
rolb
dec
jg
pop
mov
pusha
push
test
rol
ja
push
mov
cmp
popa
jmp
xchg
daa
dec
cmp
andl
xchg
or
daa
xchg
pop
jl
xchg
lret
sub
dec
inc
clc
pop
sub
push
inc
sahf
pop
fsubs
xchg
jnp
cwtl
addr16
add
jns
mull
sarb
and
add
pop
into
and
jmp
outsl
popa
dec
pop
push
outsl
arpl
mov
js
loopne
push
sbb
and
aad
aaa
xchg
inc
push
aaa
movsb
test
and
jae
cld
mov
mov
push
push
cmp
dec
lret
pop
and
sbb
cs
inc
dec
jmp
out
lahf
add
fistps
fwait
dec
add
sahf
lret
sbb
adc
push
mov
cmpsb
jmp
xchg
and
sbb
outsb
and
int
or
sbb
mov
loopne
inc
or
mov
add
subl
cmp
xor
bnd
fs
popf
pop
out
xor
lret
mov
int
mov
bound
push
fs
repz
pop
push
push
mov
sar
leave
xor
push
rcll
jecxz
sub
icebp
fcompl
xor
xchg
cmp
xorl
fdivrs
fcomps
xchg
push
fs
push
fdivl
lds
jns
and
jns
pop
lahf
xor
test
xlat
cmp
aam
jle
or
pop
popa
mov
inc
dec
cmpsl
xchg
mov
push
mov
jno
dec
inc
adc
sahf
push
hlt
out
cmpsl
stos
or
sub
imul
add
jae
je
es
aaa
inc
xchg
mov
pop
in
cwtd
or
cmp
mov
stc
cmp
xor
pusha
mov
out
lret
jp
shrb
andb
into
mov
outsl
lret
cmp
jp
cmpb
aas
adc
pushf
fcoms
dec
push
fxch
cmp
lods
je
add
mov
popa
int
lret
adc
ss
push
aad
out
adc
jg
mov
inc
fimuls
mov
repnz
sub
jle
outsl
loopne
xor
sub
lret
or
leave
out
adc
cltd
add
int
mov
mov
xchg
adc
rclb
xor
loope
xchg
int3
cmc
cmp
and
cmp
and
lds
movsb
inc
jb
aas
add
imul
ss
pop
sub
arpl
cmp
sub
loopne
xchg
frstor
inc
jp
or
mov
add
neg
mov
jae
imul
jp
fwait
imul
xor
adc
xchg
mov
dec
movsb
mov
xor
sbb
mov
ss
xchg
js
add
fnstsw
mov
mov
hlt
insl
sarl
sahf
or
sbb
mov
jno
cmp
mov
rcr
push
cmp
pop
push
mov
das
jl
out
stos
std
inc
lods
xchg
and
dec
fildll
jne
movsb
sub
pop
push
pushf
cmpsb
loop
popl
pop
mov
dec
pop
incb
sbbb
sub
stos
fisubrs
dec
test
adc
cmp
in
icebp
and
in
add
jl
lret
mov
mov
xor
testl
mov
into
rclb
es
loope
xchg
lahf
mov
xor
cs
mov
rcrb
stc
test
test
stc
mov
mov
pop
movsb
adc
pop
nop
adc
cmp
sub
ret
cmc
sub
fisubl
sub
inc
add
inc
jle
lods
stos
int3
mov
dec
popf
out
jns
mov
xorb
stos
cli
add
adc
sub
fildll
mov
mov
imul
test
jb
push
into
dec
insl
pop
or
dec
test
scas
fisttps
out
iret
adc
shrb
or
shr
push
scas
clc
dec
stos
lock
adc
add
push
popf
outsl
xchg
and
movsb
orl
xchg
xchg
sbbl
data16
in
sbb
jo
jge
push
inc
repnz
cmpsl
fmuls
enter
ljmp
lcall
pop
and
aam
mov
inc
lahf
inc
rorb
mov
jge
outsl
sbb
jmp
int
imull
ljmp
sub
add
adc
adc
ret
pop
rol
sbb
fdiv
dec
bound
aas
push
mov
jle
fidivrl
ds
mov
ljmp
xchg
push
jbe
mov
addb
sub
or
in
or
sbb
xlat
cmpsl
sahf
xchg
adc
test
adc
or
xchg
das
out
push
inc
sahf
ret
push
das
lcall
icebp
fisttps
std
sbb
pop
jne
push
xor
outsb
fdivrs
mov
xchg
lods
iret
mov
ja
incl
lods
lods
and
testb
mov
out
push
xchg
out
pushf
inc
sub
jns
movb
dec
jnp
aam
popf
fdivrs
stos
ret
int3
jl
mov
faddp
pop
in
mov
mov
add
fsubl
repz
push
mov
mov
pop
outsb
data16
insl
lods
and
es
das
les
inc
xchg
xlat
push
pop
test
cmc
aas
sbb
mov
loopne
test
pop
fstp
lcall
pop
cmpsl
out
inc
sub
or
jns
ss
fistpl
sub
lret
xor
test
xchg
pop
xlat
jp
stos
mov
cmp
incb
enter
shlb
mov
lods
mov
jecxz
push
pop
mov
jmp
xor
js
pop
std
mov
lds
pop
push
or
jno
fs
repnz
test
cld
mov
in
les
bound
sub
js
xchg
pop
lock
pop
nop
pop
leave
pop
sbb
rcrl
fcmovbe
es
push
clc
add
inc
mov
rcll
mov
stos
in
imul
jl
jmp
sub
mov
test
out
push
in
mov
bound
adc
mov
in
orl
cmp
inc
xchg
pop
lds
mov
pop
rcr
mov
dec
cmpsl
fwait
mov
mov
pop
xchg
scas
sbb
xchg
jo
adc
stos
scas
pop
ret
cmp
sbb
outsl
push
pop
or
or
mov
push
or
jb
dec
shlb
inc
mov
dec
cmp
arpl
pusha
les
scas
pop
mulb
mov
or
pop
dec
adc
xchg
inc
popf
cltd
pop
or
repnz
adc
iret
in
jmp
mov
inc
imul
inc
shll
pop
cmp
mov
cmp
sbb
ja
sbbb
and
ja
pop
outsl
fiaddl
addr16
push
rcll
movq
fs
insl
movsb
cmp
movl
insl
repnz
xor
fistps
repz
ja
enter
push
in
lcall
loopne
mov
fs
scas
mov
sets
pop
jmp
fsts
dec
mov
rdtsc
fs
jno
bound
shlb
int3
test
mov
outsb
enter
mov
dec
sub
push
imul
in
adc
adc
pop
cmpsl
cmp
fadds
loop
call
out
mov
out
push
sbb
jbe
mov
ds
decb
aam
mov
mov
add
or
scas
add
mov
lea
adc
test
inc
pop
pop
pushf
test
fildll
xchg
test
jle
stc
enter
or
das
loop
rorb
jae
or
sbb
fsts
js
sub
cmp
ss
adc
inc
cwtl
and
sbb
xlat
mov
stos
and
shll
je
jne
push
or
pop
sub
ja
jge
pop
jbe
imul
mov
and
out
jg
dec
mov
loopne
jge
rcll
scas
dec
daa
mov
xor
fwait
sbb
xchg
imul
cwtl
add
mov
xchg
lahf
jl
mov
sbb
fstl
cmp
out
ds
jno
gs
adc
cltd
int3
add
adc
fs
mov
out
inc
dec
lock
mov
clc
mov
out
xlat
dec
std
andl
mov
dec
xlat
pop
cltd
mov
call
jp
std
aas
stos
jl
es
xchg
cmp
pop
pop
dec
jae
jg
aam
mov
lret
popf
pushf
lods
xlat
cwtl
push
mov
mov
outsl
xchg
push
xlat
push
cmc
arpl
loope
sub
popa
cmp
jmp
jbe
jno
jnp
add
jo
adc
cmp
aas
movsb
pop
and
ret
ret
pop
inc
daa
mov
mov
dec
pop
jae
mov
mov
gs
popa
clc
jnp
or
cmp
fdivrs
fnstcw
adc
and
sarl
jmp
shrb
xchg
inc
int
aaa
aaa
adc
cs
dec
scas
les
xchg
dec
testl
or
jbe
pop
iret
sub
inc
mov
jecxz
sub
xor
mov
call
in
add
outsl
clc
outsl
lcall
int
inc
addr16
mov
shl
fidivl
mov
stc
movsb
adc
movsl
push
orb
or
mov
dec
add
out
hlt
dec
jecxz
inc
sub
outsl
xor
jle
push
shr
inc
mov
mov
das
in
xor
into
cmpsl
js
add
push
push
cmp
scas
dec
xchg
cmp
fs
jg
xchg
rorl
and
loop
inc
mov
xchg
hlt
fidivrs
mov
mov
mov
arpl
inc
lock
sub
ljmp
push
stos
pop
movzbl
adc
adc
jns
mov
inc
xchg
adc
in
stos
inc
test
pop
sub
aas
cs
lods
mov
in
test
lock
mov
xchg
rcrl
or
mov
clc
cs
insl
int3
movsb
push
adc
lock
pusha
push
push
adcl
sbb
int3
out
push
sbb
xor
fsubl
sbb
xchg
sahf
int
fsts
mov
fisubrl
rorl
jecxz
jno
inc
in
and
gs
cld
mov
sbbl
arpl
fnstcw
in
out
mov
dec
mov
inc
or
not
popf
jecxz
aaa
aaa
sub
xor
xorb
sbb
mov
rolb
aad
in
in
pop
xchg
and
dec
cmp
jle
addr16
mov
insl
jae
mov
xchg
jb
subb
sub
mov
ret
or
lock
adc
repnz
cmpsb
dec
xor
pop
js
insl
cltd
sub
dec
adc
sbb
outsb
fldenv
push
repnz
adc
sbb
inc
pop
sarb
xchg
mov
fwait
loope
rcrl
mov
dec
imul
ss
sbb
pop
scas
insb
imulb
mov
addb
xor
out
aas
xor
xor
push
lret
lret
lret
cmovns
int
pushf
add
stos
mov
xchg
mov
mov
iret
scas
or
jo
mov
daa
add
inc
mov
inc
test
mov
test
cmp
pushf
mov
add
loope
lods
pop
fchs
jl
xchg
hlt
call
jl
ljmp
jno
je
lahf
jnp
mov
ja
ficoml
push
add
add
pop
inc
mov
cmp
in
mov
inc
clc
mov
sbb
sub
cmovae
mov
push
pop
or
push
adc
mov
out
xor
mov
mov
stc
aas
xor
iret
daa
xchg
fsub
ficoml
mov
aam
faddl
cmp
dec
movsl
sbb
cmc
jge
push
into
dec
jnp
daa
push
push
rolb
dec
adc
outsb
or
daa
jns
jmp
pop
imul
jae
lea
cmp
sub
pop
movsb
mov
add
sub
flds
mov
sbb
fdivr
xlat
push
mov
pushf
lock
xchg
or
fists
and
aad
decb
adc
addr16
shld
pop
es
sarb
arpl
jns
frstor
cltd
ja
jno
mov
jg
es
aas
mov
sahf
mov
pop
stos
xchg
push
dec
mov
frstor
mov
or
xor
jle
inc
cmpsb
sahf
subl
lcall
shrl
outsb
stos
cli
orl
in
lret
dec
pop
sbb
mov
in
adc
sub
movsb
mov
jae
into
dec
les
nop
scas
pop
jns
add
aam
insb
cmp
adc
mov
pusha
call
cmp
dec
pop
cmp
add
mov
out
lret
fistps
shl
mov
in
and
pop
lods
rcrb
add
push
push
mov
lahf
and
pop
lcall
add
out
and
mov
inc
mov
cmp
inc
rcr
sub
imul
mov
fs
sti
imul
fisttps
aaa
dec
sub
dec
out
mov
inc
and
dec
pusha
int3
pop
cld
push
in
xchg
push
jns
xor
inc
sbb
push
pop
sbb
sahf
loop
jg
or
mov
jp
shlb
pop
xor
mov
out
mov
xchg
mov
lret
jmp
xchg
xchg
test
xchg
add
push
push
repz
lret
enter
push
rcrl
jae
xor
cmp
push
cli
add
mov
mov
scas
jae
lret
add
pop
lahf
sbb
in
repnz
inc
fimuls
loopne
sbb
lds
sbb
sti
cltd
sahf
imul
pop
stos
mov
xchg
mov
cmpsl
jl
leave
in
mov
jb
shlb
rorb
mov
xlat
lods
or
ja
out
shrb
cmp
push
arpl
adc
inc
das
imul
xor
mov
and
lock
mov
mov
jbe
xchg
add
addb
dec
je
pop
stos
sahf
xchg
adc
sub
pop
ja
xchg
test
add
je
add
in
out
mov
and
push
pop
xchg
mov
arpl
dec
out
jo
test
ds
dec
adc
pushf
shlb
xchg
pop
mov
stos
xchg
sets
lcall
ss
pop
mov
pop
dec
jo
pop
aas
sbb
jge
mov
pop
lcall
pop
std
lret
ja
lods
pop
and
je
cmp
icebp
loope
add
adc
and
repz
push
jp
in
cltd
mov
mov
sub
insb
aaa
stc
rcrb
or
outsl
lods
lret
cmpsl
push
leave
pop
push
or
jge
adc
push
cwtl
jbe
mov
and
pop
scas
ret
mov
sbb
mov
inc
mov
repz
add
mov
cwtl
in
imull
imul
decl
cmp
iret
cmp
adc
ljmp
jp
sahf
push
lods
cmc
lds
or
int3
test
sub
push
mov
adc
xor
jg
jg
out
in
sub
and
fsubrs
int3
orb
inc
mov
cmc
xor
imul
pop
xchg
push
adc
mov
xlat
push
xor
mov
mov
aam
push
repnz
int
in
lods
leave
cmp
pop
jg
add
add
in
loop
fcoml
push
repz
fdivrs
jb
sub
pop
mov
out
push
jne
adc
ljmp
sbb
jno
fcomp
or
jno
test
hlt
jbe
lret
test
daa
cmc
mov
cwtl
lods
and
xchg
cmp
imul
jmp
stos
pop
dec
iret
adc
aaa
sub
les
and
jg
dec
sahf
fisubrs
dec
mov
mov
and
dec
adc
push
push
xchg
xor
push
push
sbb
mov
repnz
data16
aas
icebp
jp
lea
sbb
jmp
loopne
lods
mov
addr16
call
and
test
imul
shlb
jp
popf
sub
fcmovnu
mov
push
mov
sbb
out
xor
sar
fucom
cltd
sahf
pushf
mov
jbe
out
fidivl
sbb
xor
or
cmp
push
fidivrs
push
cltd
adc
adc
jns
clc
in
cmp
adc
into
adc
inc
dec
xlat
and
notb
mov
mov
int3
add
cmp
dec
mov
cltd
mov
cwtl
test
mov
dec
shlb
ja
dec
jecxz
add
lods
rorl
cmp
movsl
inc
cmp
jb
push
and
leave
or
mov
enter
xchg
in
push
push
fs
pop
sub
fsubr
push
mov
shrl
push
and
hlt
mulb
rol
push
shll
mov
fwait
movsl
jecxz
mov
or
int
ret
cmp
add
mov
and
jbe
add
hlt
cld
std
xchg
xchg
mov
int3
je
popf
loop
popa
mov
mov
mov
cs
jo
lret
mov
sbb
insb
adc
mov
inc
pop
adc
fs
je
lret
sub
in
mov
imul
add
repnz
xchg
out
mov
pop
pop
push
cmp
add
push
lret
xchg
mov
jmp
in
cmp
pop
shl
lahf
xchg
lods
xchg
mov
in
clc
mov
xchg
daa
pop
xchg
in
nop
test
push
or
mov
data16
arpl
xchg
fists
loop
rclb
sub
cltd
andb
ljmp
stos
fwait
xchg
or
aam
fxch
push
xchg
xor
mov
shlb
movsl
mov
sbbb
inc
mov
lahf
in
xor
stos
call
jnp
mov
clc
iret
push
int3
cwtl
inc
xor
mov
adc
push
pop
jb
test
fcoms
mov
rcrb
arpl
xchg
pop
push
iret
mov
adc
sbb
mov
cs
fisubrs
inc
mov
jae
inc
imull
int
cli
aaa
dec
and
jmp
dec
stos
mov
aad
ret
repz
scas
pop
es
movsl
sarl
xchg
test
lea
repz
lahf
decb
insl
push
dec
pop
in
aas
jo
orl
sarl
lret
and
adc
mov
pop
fsubrs
shlb
adc
dec
in
ret
mov
es
fadds
push
sbbl
lahf
or
jecxz
pop
xchg
testb
fcoms
adc
dec
ror
or
pop
mov
enter
and
shr
or
mov
push
aam
jmp
test
inc
and
cmp
fistpll
and
pop
int3
rcr
xor
add
roll
jnp
mov
jae
loopne
hlt
mov
out
jne
sbb
movsl
xor
cmp
mov
in
test
jb
gs
into
jecxz
adcl
inc
pop
and
repnz
sub
push
sbb
shl
jp
jne
mov
mov
je
lret
mov
mov
daa
add
sub
fnstcw
shlb
iret
clc
mov
jnp
lcall
pushf
mov
dec
negb
fcoml
out
sti
vpcmpeqb
mov
outsl
and
mov
stc
pop
mov
cwtl
ficoml
and
pop
in
or
inc
mov
fbstp
dec
insb
mov
call
in
es
xor
dec
xlat
fldcw
aaa
imul
mov
popf
inc
sub
addb
add
hlt
pushf
inc
mov
scas
in
adc
test
push
rolb
and
push
mov
or
fistpll
push
fists
movsb
pop
stos
dec
mov
lea
jl
sub
mov
mov
mov
cltd
pop
add
daa
test
xchg
aad
sub
dec
cltd
je
pusha
inc
fistps
stos
or
mov
jne
outsb
dec
cmp
dec
xor
sub
push
sbb
jbe
jg
xchg
data16
sub
pusha
add
enter
fisttpl
pop
xor
sub
dec
add
mov
in
lock
pop
mov
mov
dec
not
ret
out
aam
fildll
cmp
adc
sti
pop
loop
add
insl
lahf
imul
mov
or
xchg
pop
fnsave
movb
icebp
test
mov
fcmovnbe
xchg
or
popa
xchg
fs
xor
xor
add
sbb
rcl
mov
xor
fsub
fcmovnu
mov
ficomps
aad
sub
jl
add
lods
mov
popa
enter
xor
bound
popa
call
fmuls
mov
lods
stos
out
inc
loope
out
les
mov
adcb
fdivrp
fcmovnu
jl
ffree
add
lret
es
testl
inc
mov
dec
out
cmp
sub
xor
and
dec
ret
fimuls
gs
lahf
mov
or
mov
xchg
cmp
mov
xor
mov
push
mov
mov
xchg
lret
mov
enter
mov
xchg
pusha
jbe
data16
pushf
ror
cmp
or
es
nop
cmpsb
and
xchg
push
in
dec
xchg
fistpll
inc
mov
mov
cmp
enterw
mov
adc
mov
xchg
cmp
rolb
sbb
out
pop
mull
dec
xchg
daa
std
mov
cmp
and
push
mov
les
push
je
jp
jmp
jle
jb
dec
test
cmp
add
add
sbb
fldl
xchg
mov
mov
icebp
popf
mov
clc
xchg
test
popa
imull
fcoml
sub
cmp
sub
movsl
and
jne
imul
je
lahf
sub
addr16
ret
pop
cld
mov
jbe
push
jae
aaa
jno
dec
outsb
mov
jae
sti
pusha
clc
jecxz
stc
xchg
gs
pop
ds
and
fwait
inc
xor
adc
pop
ficoml
stos
push
das
out
pop
add
mov
pop
fcomi
fisubrs
in
xor
ret
mov
and
shrl
sbb
les
fwait
jb
mov
arpl
hlt
adc
adc
cmp
or
xor
lods
sbb
cld
xchg
or
and
push
adc
lods
xor
in
sub
lds
adc
out
cmp
jg
loope
addl
or
sbb
in
xchg
pop
push
xchg
adc
ror
shll
xor
mov
bound
cltd
sbb
pop
sbbl
or
sub
pop
xor
in
dec
scas
jno
shll
stos
sbb
rolb
hlt
sti
jg
js
je
mov
and
adc
cmc
js
inc
inc
xor
in
outsl
mov
nop
jl
and
lock
imul
data16
push
lcall
inc
loopne
addr16
fsub
or
icebp
mov
rcl
mov
sar
dec
jno
cmc
mov
loope
xor
jge
fistpll
fldt
push
sbb
xchg
ja
sarl
dec
and
ljmp
aas
lock
mov
ja
and
lahf
jge
and
call
jb
test
or
fsubr
filds
cmp
iret
outsb
mov
sub
mov
mov
or
popa
pop
jne
jae
adc
sarl
dec
sbb
out
cltd
ret
adc
mov
outsl
and
mov
mov
les
pop
lahf
mov
mov
mov
cwtl
or
and
and
imul
dec
or
nop
mov
lods
sarl
dec
fiadds
sarb
sbb
mul
fsub
adc
shrl
inc
into
cwtl
shll
sub
pushf
xor
mov
jae
and
lret
scas
jecxz
add
aas
lods
cmp
dec
sub
jbe
pop
insl
ret
mov
and
jle
mov
mov
movswl
xlat
xchg
frstor
mov
mov
xor
shrl
imul
mov
and
outsb
out
mov
lods
jnp
mov
lods
clc
subl
mov
or
push
jl,pn
in
pop
popf
jmp
vmwrite
out
fnstcw
xchg
loope
shrd
sub
pop
aad
inc
mov
inc
shrb
mov
fs
ljmp
das
pop
xlat
insb
iret
mov
jmp
repnz
rcrb
dec
mov
sbb
sbb
mov
mov
in
mov
mov
fisubl
jno
sub
sbb
and
xlat
cmp
dec
out
vxorps
pushf
xchg
mov
jmp
fstl
and
outsl
inc
or
cmp
inc
or
out
sbb
adc
adc
stc
lret
in
mov
adc
ret
mov
mov
mov
mov
push
mov
xor
pop
loop
ljmp
adc
jle
push
push
addr16
out
std
mov
push
outsb
add
lods
sub
jmp
and
js
jl
xchg
out
inc
cld
inc
adc
sahf
sub
fs
icebp
xor
push
mov
mov
mov
add
fstpl
push
jge
iret
jmp
rorl
push
imul
mov
sahf
jb
inc
dec
pop
data16
lcall
sbb
xchg
shrb
push
mov
popa
popf
out
js
bound
jbe
aaa
out
push
jo
setl
pop
lods
mov
insb
mov
test
jne
push
loopne
mov
sub
xor
gs
inc
jg
lock
fdivp
andb
push
inc
mov
mov
and
jbe
add
sub
mov
jo
pop
xor
lods
mov
repz
sbb
inc
jno
scas
mov
adcb
pushf
and
mov
sbb
lods
push
pop
mov
add
jmp
movsb
test
jp
cmp
xchg
aaa
pop
push
pop
jo
movsb
repnz
mov
cmp
sbb
mov
je
hlt
std
clc
push
mov
add
js
dec
fidivs
push
xor
push
or
and
mov
leave
xchg
mov
insb
mov
orb
xor
test
mov
dec
mov
mov
lock
outsb
lds
sbb
adc
dec
sarb
sub
adc
cltd
arpl
in
lds
std
push
sahf
adc
arpl
push
repz
sahf
hlt
out
mov
inc
and
jge
test
imul
inc
outsb
cmc
or
cmp
int3
cmp
and
and
mov
subl
pusha
add
and
xchg
xchg
sbb
mov
das
push
xchg
push
loope
pop
cli
mov
adc
in
cmp
dec
dec
inc
notb
rorb
jns
fistpll
xor
mov
hlt
mov
movntq
push
test
imul
jb
fistl
sub
sub
add
push
adc
sub
mov
fisubs
les
mov
out
mov
push
pop
xchg
inc
sbb
ret
fisubrs
subb
lret
lea
das
cmp
sti
int3
loop
sub
jbe
xchg
fbld
xor
sub
mov
insb
add
pop
pop
adc
je
enter
lcall
jl
jl
sbb
cmp
cli
and
fisttps
cmp
std
daa
mov
sub
sbb
std
call
mul
push
test
cmpsl
xchg
movsb
cmp
clc
cmpsb
mov
adcl
cli
mov
xor
in
dec
dec
mov
test
loop
ret
repnz
lret
mov
jmp
nop
hlt
mov
imul
cltd
pop
cld
call
mov
outsl
loope
cmp
in
mov
mov
bound
loop
jp
test
imul
cmp
jnp
call
in
mov
rdmsr
out
sbbb
mov
movsl
mov
das
inc
dec
cmp
out
aas
xor
adc
stc
lods
mov
frstor
pop
and
out
fstpl
lods
popf
cmp
dec
dec
cmc
mov
mov
inc
daa
add
push
fimull
jecxz
pop
fnstsw
and
icebp
inc
dec
sub
std
in
scas
dec
inc
or
sub
repz
insl
xchg
pusha
jl
mov
mov
or
mov
mov
rorb
add
ds
push
mov
call
ds
xor
out
leave
xchg
fcomip
out
pop
aam
jecxz
fidivs
or
sub
adc
pushf
enter
decl
imul
push
pushf
jg
fdiv
xor
mov
pop
mov
mov
xchg
enter
js
jmp
inc
xchg
sub
adc
in
xlat
jnp
movl
cmpb
fcompl
sbbl
xchg
test
or
cld
or
or
hlt
inc
cmp
shl
xor
es
and
adc
pop
call
out
jmp
fistpll
xor
cwtl
inc
ret
mov
inc
shll
gs
jo
cs
or
jl
loop
jmp
lret
lahf
aad
pop
mov
in
mov
push
aam
scas
mov
in
rolb
ret
mov
jnp
sbb
inc
or
leave
xchg
rorb
and
aam
lret
or
rorb
call
adc
lea
push
ret
imul
imul
add
xor
jp
out
mov
lds
xchg
shrb
sbb
js
imul
ret
mov
call
or
lods
outsb
test
imul
jae
and
jae
sub
mov
jg
mov
leave
cmp
mov
xor
xchg
or
add
xor
enter
jle
push
adc
xor
insl
xchg
adc
inc
sub
fcmove
out
daa
add
outsl
pop
or
inc
or
cmp
mov
sbb
sub
or
mov
dec
cld
mov
push
sbb
sbb
push
or
cmpsb
shrl
mov
sbb
jmp
icebp
das
ret
fbld
scas
inc
push
pop
lods
and
cmp
push
test
inc
fadds
ret
repz
pushf
mov
scas
out
jb
les
outsl
addl
in
int3
cmp
std
rcrl
xchg
je
adc
movsb
lods
and
sbb
inc
scas
movsl
rclb
es
ja
stc
clc
cs
addr16
xchg
ds
scas
cmp
movsb
push
sub
xchg
fs
aas
ss
imul
inc
xor
js
mov
sbb
lods
mov
mov
dec
xchg
js
divl
push
fcoms
sbb
adc
or
mov
into
lock
add
into
pop
into
cmovg
xchg
xor
stos
mov
inc
pop
or
leave
xchg
add
or
mov
or
push
sbb
inc
mov
daa
pop
aad
adc
mov
push
leave
push
adc
aam
cmp
ljmp
call
mov
jne
mov
cmp
scas
pop
pop
repz
xor
jo
or
stc
das
cmpsl
dec
inc
mov
and
mov
jnp
fimuls
mov
pop
push
ds
cltd
data16
jo
loopne
sbb
ds
pushf
xor
mov
stos
filds
jns
jne
in
mov
insl
bound
aad
jmp
jle
aaa
add
xor
mov
inc
inc
in
cmp
or
movsl
push
adc
scas
or
mov
push
cmc
xor
mov
subb
jmp
push
xor
jb
cmp
xchg
icebp
sub
sbb
sub
cltd
lcall
jge
es
add
js
and
cmp
pushf
rcrl
inc
test
push
call
cld
xchg
mov
add
repz
mov
mov
mov
icebp
out
sub
repz
push
add
das
inc
xchg
shl
mov
mov
pop
sbb
insb
dec
hlt
add
lds
jg
ret
xchg
lea
mov
filds
mov
push
push
ds
cmp
jmp
outsb
sbb
sbb
in
adc
mov
std
xlat
and
inc
and
mov
test
jne
inc
xor
mov
sub
es
bound
int
push
and
daa
ret
imul
xor
mov
cmpb
jne
inc
jbe
mov
cmp
bound
addr16
cs
mov
push
adc
push
stos
jg
mov
jne
cmp
decl
xchg
dec
ljmp
dec
push
or
int3
scas
aam
push
xchg
fcmovnb
dec
movsb
sbb
pop
and
addr16
dec
jns
test
xorl
mov
leave
xorl
mov
cmp
test
inc
mov
sbb
pop
add
inc
rcr
mov
jb
cmp
rcrl
scas
sbb
frstor
pop
xor
hlt
pop
enter
mov
fs
dec
mov
addr16
xor
ret
stos
iret
push
pop
xor
add
and
fs
and
test
pop
jecxz
loope
pop
nop
lods
pop
xor
push
push
adc
adc
iret
test
int
pop
cltd
lods
push
sbb
loopne
cmc
ret
fidivrl
gs
jecxz
rolb
mov
add
pop
popf
pop
arpl
lahf
add
rorb
mov
shl
std
call
push
mov
pop
mov
cmp
sub
rdpmc
shr
sub
xchg
dec
aad
stc
lahf
push
stc
mov
or
clc
inc
cmp
mov
test
push
mov
push
int
or
insb
pop
xlat
mov
pop
cmp
or
or
into
enter
mov
into
sub
xchg
inc
enter
inc
add
ret
xchg
or
pop
jp
test
das
xor
jae
sbbl
inc
icebp
inc
cmp
sub
and
pop
cmp
mov
insl
cs
and
or
mov
mov
inc
subl
cwtl
adc
jbe
in
dec
dec
mov
mov
mov
fistpl
pop
inc
push
sub
movsl
test
add
mov
or
rorl
mov
outsl
loope
dec
sbb
sarl
mov
lods
mov
out
lock
xchg
sub
xchg
stc
shll
jnp
xor
and
inc
scas
inc
cli
pop
and
jl
loope
inc
mov
inc
jns
or
ss
push
orb
inc
mov
xor
push
pop
cmp
xlat
push
clc
sbb
pop
xchg
pusha
ja
gs
mov
pop
xor
push
mov
stos
sarb
inc
testl
test
pop
into
jmp
and
ljmp
xchg
inc
mov
jmp
xchg
addr16
aaa
imul
out
mov
bound
enter
sub
push
sub
mov
out
xlat
mov
mov
gs
xorl
loopne
xchg
mov
movl
mov
mov
sbb
pusha
ret
stos
movl
sub
jecxz
scas
aad
ret
inc
mov
jecxz
mov
aaa
mov
inc
mov
dec
fstps
mov
fbld
int3
push
and
shr
lock
xchg
mov
fildll
das
xor
inc
xchg
pop
pusha
dec
popa
sbb
mov
fdivs
mov
xor
lock
enter
sbb
push
data16
and
xchg
mov
outsl
mov
ret
inc
xor
mov
jno
push
xchg
lods
add
cltd
push
mov
hlt
into
sub
cs
enter
jmp
pop
outsl
and
addr16
push
cmpsb
pop
mov
adc
adc
mov
push
scas
int
push
and
push
pop
stos
insl
dec
das
inc
mov
inc
lods
lret
mov
lods
out
mov
cltd
inc
in
push
mov
sahf
push
mov
lahf
outsl
sbb
xor
sbb
je
pop
xchg
mov
mov
arpl
adc
cmp
sbb
jnp
popa
popa
cmp
or
int3
add
aad
mov
imul
popf
fisttpl
je
loopne
insb
ret
add
mov
lret
out
push
mov
adc
out
jge
out
fbstp
push
lret
jmp
test
aas
jl
fisttpll
cmp
cs
fdivl
or
lea
aaa
es
movaps
pop
sbb
fisttpll
or
pop
fwait
xor
icebp
xchg
lret
roll
xchg
mov
add
add
rorl
jns
ret
loop
popa
insb
xchg
repz
popa
das
out
pop
icebp
adc
xchg
int
jge
xlat
shl
xor
mov
or
jae
fists
xchg
cli
fnstenv
ret
fistpl
daa
cmp
repz
lds
and
incl
aas
daa
pslld
sbb
sub
out
test
adc
push
mov
mov
dec
out
inc
mov
add
rcrb
inc
or
push
lret
sbb
jb
push
inc
mov
outsl
add
cmp
shll
shr
shlb
out
dec
insb
inc
sub
pop
xor
jp
imul
sti
jae
sub
out
mov
bound
mov
cmp
xchg
mov
and
cmp
and
in
and
repz
or
push
mov
das
add
sbbb
xchg
clc
bound
out
or
cmpb
in
repnz
mov
lods
inc
addr16
add
xor
or
fwait
pop
or
in
mov
xor
cmp
and
or
jo
mov
jae
xchg
cmc
add
fisubs
into
mov
fiaddl
jle
sbb
mov
pop
inc
es
mov
inc
cwtl
mov
adc
push
xor
jp
pop
test
je
pop
icebp
xor
das
push
and
add
leave
dec
sub
fs
push
cmp
cmpxchg
jmp
dec
cmpsb
loope
iret
cmp
fistps
lea
ret
dec
push
xchg
xor
add
fnstsw
inc
jbe
push
ficompl
cmpsb
test
fwait
lahf
insl
sub
outsl
jp
lret
scas
rcrl
enter
xor
dec
xchg
jmp
pop
and
int3
daa
pop
lea
xor
popa
sub
or
sub
cli
and
push
sub
inc
sub
mov
cli
mov
inc
dec
in
jge
xchg
mov
mov
jne
cmpsl
mov
es
ret
cld
std
pop
mov
lcall
mov
dec
in
xchg
cmp
in
pop
stc
mov
and
enter
test
stos
jbe
pop
jnp
jge
js
stc
fnstcw
repnz
jg
lret
dec
leave
icebp
jecxz
xchg
pop
stos
cld
dec
insb
aad
and
push
sub
pop
cs
leave
rorb
lcall
ret
ret
std
cld
push
or
mov
inc
andl
rorl
pop
pusha
mov
sub
dec
das
mov
mov
add
xchg
lods
mov
sub
fs
mov
mov
dec
outsl
dec
iret
sbb
imul
inc
mov
cmpsb
sbb
lahf
pushl
cmc
pusha
scas
and
pop
shrl
movsb
mov
frstor
sub
xor
in
xchg
push
orl
adc
adc
cmpsb
jp
imul
mov
pop
adc
in
xchg
stc
push
int3
pop
push
inc
mov
test
xchg
dec
inc
dec
mov
and
into
lds
sub
hlt
and
ret
adc
es
push
sub
xchg
in
scas
ljmp
mov
fimull
addr16
add
mov
mov
aad
cs
push
jns
scas
popf
lock
sahf
dec
mov
mov
push
pop
cmp
jl
mov
ret
add
es
xor
mov
jg
scas
mov
pop
sub
xor
fcmove
dec
inc
or
jb
sbb
stos
mov
mov
jnp
pop
fld
or
rclb
or
pop
jecxz
testb
scas
fsubs
push
in
es
fistps
jne
addb
insl
lds
pop
bnd
jbe
adc
mov
loop
jmp
gs
mov
loopne
xchg
mov
rcl
fmuls
lret
push
loop
loop
jno
or
mov
test
cmp
enter
inc
rcrb
jbe
lret
jmp
ss
and
mov
arpl
insl
or
push
inc
xor
dec
pop
mov
cmp
cmpl
dec
jp,pt
pop
xchg
sbb
in
and
leave
add
inc
add
xlat
add
push
sub
movsl
les
push
cwtl
and
cmp
push
incb
out
inc
push
and
shl
and
sbb
mov
dec
inc
int3
or
pushf
fildll
fnstenv
imul
lret
xchg
popa
leave
lret
jnp
leave
cmp
pop
cmp
ret
or
ljmp
popf
or
xchg
repz
dec
xor
push
fninit
mov
jne
jb
mov
mov
xor
negb
arpl
xchg
pop
or
out
sbb
push
mov
mov
cmp
cmpsl
jl
inc
push
push
loopne
test
arpl
loope
xchg
iret
xchg
push
daa
popf
fdivp
jl
push
insl
xlat
sub
imul
sbb
jecxz
lock
cmpsl
icebp
add
mov
pusha
adc
loope
insb
pusha
jl
or
lds
pop
insb
xor
das
add
insb
xchg
fdivl
inc
inc
sbb
pop
gs
cmp
mov
and
pop
sbb
out
dec
mov
aaa
adc
adc
popa
cli
xor
xchg
mov
sub
push
orl
mov
aas
push
fsubl
cmp
and
pop
mov
push
push
xor
push
cmpsl
or
sub
mov
stos
dec
push
outsb
loop
in
or
lods
and
cmp
xchg
ret
push
push
gs
shll
or
cmp
stc
pop
mov
cmp
aam
mov
in
xor
sub
repz
test
int
lods
push
lods
bound
test
fwait
notb
mov
dec
mov
jg
lds
shlb
fisubs
sbb
jo
test
insb
lcall
mov
pop
push
xor
je
mov
mov
mov
inc
pusha
mov
mov
xor
sbb
push
mov
mov
push
xchg
xchg
cltd
fwait
aad
bnd
rorb
sbb
push
jle
lds
mov
mov
and
add
dec
out
in
aad
test
and
les
imul
xlat
mov
std
pop
jg
adc
neg
cmpsb
ljmp
inc
inc
xor
pop
push
mov
nop
dec
mov
lods
in
pop
aad
subb
lret
push
aad
and
fwait
shr
and
outsb
test
ret
mov
pop
mov
movmskps
adcl
xor
test
iret
adc
mov
pushf
jno
jb
jmp
ss
push
leave
shl
mov
and
and
sbb
inc
adc
add
shrl
in
push
aad
inc
mov
mov
adc
andl
cli
jge
aaa
fidivl
pop
pop
outsl
inc
lret
lds
dec
jno
mov
mov
adc
jno
mov
insl
mov
nop
mov
or
push
sar
mov
dec
leave
push
rcr
and
xor
jb
sahf
mov
imul
movsb
std
push
icebp
mov
inc
cltd
lcall
cld
mov
jge
hlt
movsb
xchg
sbb
insl
test
xchg
or
and
pop
mov
fdivr
les
cmp
sbb
xchg
sbb
cmc
mov
sbb
and
and
mov
pop
bound
dec
ss
int
or
gs
mov
aad
dec
mov
rclb
jns
jbe
cmp
xchg
test
pop
jbe
ja
subl
pop
xor
in
repnz
out
inc
jge
aaa
lret
xchg
scas
push
mov
xchg
shll
mulb
push
pop
pop
stos
xor
mov
test
sbb
repz
mov
dec
mov
addr16
add
fmull
xchg
out
sbb
mov
push
jg
imul
pusha
imul
out
mov
and
fidivrs
adc
mov
mov
iret
jmp
arpl
and
pop
push
enter
out
cmpsb
cld
mov
movsb
in
loop
outsl
sub
daa
in
push
sub
push
jl
mov
jbe
imul
outsb
jne
out
or
fadds
test
xor
mov
mov
int3
stos
push
insb
ds
xor
dec
sbb
ds
lret
mov
mov
out
cmp
cli
xlat
decb
push
sub
in
outsl
xchg
in
pop
mov
bound
jb
imul
xchg
mov
push
sbb
push
fbld
cmpsl
add
loopne
in
and
mov
popa
adc
xor
pop
push
cmp
clc
lcall
adc
mov
and
movsb
popf
sbb
pop
adc
fidivs
jge
out
xchg
sbb
xchg
leave
insb
stos
mov
cltd
sti
aaa
adc
stc
pop
divb
mov
mov
fistpl
mov
aam
xlat
aas
movb
test
test
rorb
stc
or
fldenv
jae
and
fldcw
in
lods
mov
dec
mov
mov
outsb
scas
lret
jge
aas
rol
jl
and
test
mov
mov
add
lods
inc
xlat
dec
inc
mov
mov
and
andb
lock
cwtl
dec
xchg
movl
jae
ret
call
scas
movsb
xor
xchg
inc
sbb
sub
push
scas
inc
inc
pop
lea
fldcw
ja
and
lds
lods
inc
push
test
into
xchg
lods
mov
mov
push
xchg
xor
mov
movsb
adc
push
cmp
popf
inc
pop
test
inc
mov
mov
and
cmp
shl
cltd
sub
push
cmp
scas
add
icebp
out
mov
loope
jge
jae
fwait
aad
dec
rcl
and
into
stos
sbb
popf
adc
cmp
fdivrp
negl
xchg
cmp
xchg
fisubl
movsl
repnz
cld
push
xchg
outsl
orb
inc
sub
mov
ljmp
xchg
xchg
inc
pop
mov
stos
push
jecxz
xor
jo
in
std
or
mov
push
jae
inc
dec
das
xlat
lret
daa
xchg
mov
out
dec
mov
in
push
pop
sahf
mov
int
and
mov
pop
xchg
xchg
test
pop
xchg
aam
sbb
cmp
jp
or
sub
or
push
arpl
push
xlat
shrb
jg
xor
add
xor
jb
push
int3
mov
rolb
mov
mov
shll
out
unpckhps
and
aad
iret
popa
call
in
shlb
lds
fs
mov
mov
adcb
xchg
cmp
xor
and
or
pop
adc
scas
push
push
das
cmp
push
lahf
or
stos
push
popa
int3
lcall
out
dec
mov
sub
cmp
mov
jp
adc
jo
cmp
cmp
sub
das
sahf
mov
insl
sub
and
xor
jl
mov
pop
arpl
adc
add
push
adc
stc
lahf
out
loope
pop
or
lds
dec
cwtl
mov
inc
adc
xchg
aaa
ss
jmp
pop
and
scas
cld
push
rcl
loope
sahf
jb,pt
dec
and
enter
lahf
sbb
adc
cmp
mov
xchg
out
cmp
sbb
push
gs
dec
fsubr
repnz
push
in
cmpsl
xor
dec
and
rcrl
stos
cmpl
fsubp
fildl
jecxz
leave
gs
popa
ret
fstl
sbb
xchg
das
cltd
xchg
out
ja
push
pop
je
fldcw
pop
or
insl
outsb
cmp
outsb
adc
pop
decb
dec
jne
test
cwtl
clc
aad
ret
inc
lock
jnp
adc
aas
fnstenv
or
inc
inc
pushf
mov
adc
sbb
push
push
testb
mov
js
or
addb
pop
or
jg
and
rcrl
imul
mov
movsb
cmp
into
xchg
pop
out
out
push
adc
jo
sub
cli
xchg
mov
cwtl
sub
lds
or
out
inc
les
fadd
pop
cld
xor
push
faddp
ficomps
out
arpl
jp
jns
add
imul
outsb
push
mov
mov
adc
popa
push
sahf
sarb
clc
mov
mov
ret
iret
sub
fstl
dec
sbb
rcll
aad
or
mov
daa
xor
into
pop
dec
jae
or
insb
aad
add
mov
out
mov
adc
outsl
aad
pop
out
cmpsl
or
cmp
js
or
sbb
out
sub
jg
data16
mov
pop
ljmp
xchg
pop
mov
and
push
outsl
jbe
xchg
push
in
xor
sub
stc
cwtl
push
pop
pop
xchg
xor
nop
sbb
inc
mov
adc
aaa
sbb
cmp
stc
cltd
sub
ja
lds
repnz
xchg
xor
in
adc
jne
stc
aaa
fcmovu
jecxz
movsb
sbb
cwtl
or
jl
cwtl
sub
xchg
les
mov
push
cltd
mov
adc
outsl
jbe
and
enter
aam
insb
imul
fcoms
repnz
int3
push
repnz
into
fiadds
fldl
cmpsb
in
mov
xchg
aad
push
test
lods
test
cmpsb
movsl
ja
mov
add
jb
test
push
scas
insb
aaa
sahf
cld
inc
test
jmp
cmp
shll
xchg
jmp
jl
mov
scas
jle
int3
fdiv
and
lahf
lods
mov
fistpll
and
or
cmp
scas
mov
mov
mov
mov
sub
js
addr16
mov
and
and
and
cmpsl
lods
mov
dec
push
mov
xor
adc
xor
insl
popa
mov
outsl
addr16
mov
push
jne
add
pop
pushf
push
int
cmpsb
mov
mov
das
pop
push
push
xchg
lock
add
scas
push
loopne
cmpsl
cmp
inc
adc
lea
inc
mov
dec
add
xor
pusha
call
std
mov
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
add
inc
add
lock
add
add
push
add
add
add
add
add
add
or
