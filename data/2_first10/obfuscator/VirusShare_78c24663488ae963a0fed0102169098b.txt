add
add
add
incl
add
add
incb
add
add
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
in
and
and
pop
sbb
sbb
sbb
pop
push
pop
sbb
sbb
sbb
and
addb
add
or
in
adc
sub
sub
sti
push
sbb
daa
daa
and
and
daa
sub
mov
add
add
adc
xor
push
sub
xor
sub
sub
daa
daa
daa
and
daa
daa
sub
mov
add
add
adc
xor
sub
sti
push
sub
sub
sub
sub
and
and
sub
mov
add
add
adc
and
sbb
and
and
pop
sbb
and
and
xorb
cmc
add
add
adc
and
and
sbb
sbb
and
sbb
pop
adc
and
and
jne
or
add
add
adc
and
and
and
and
sbb
sbb
push
adc
adc
sbb
hlt
mov
add
add
adc
and
and
and
and
sbb
pop
pop
pop
adc
pop
sbb
and
mov
add
add
adc
and
and
and
sbb
sbb
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
cmc
mov
add
add
adc
and
and
and
and
sbb
sbb
sbb
pop
pop
pop
sbb
sbb
and
mov
add
add
and
and
and
and
and
and
sbb
pop
pop
pop
pop
pop
sbb
sbb
and
mov
add
add
sub
and
and
and
and
and
and
push
push
push
push
push
push
push
and
and
addb
add
add
adc
and
and
and
and
and
in
in
in
in
in
in
in
in
in
in
out
out
xorl
add
add
adc
adc
adc
adc
adc
adc
adc
adc
in
in
mov
imul
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
mov
jne
xorb
cmc
adc
add
addb
adc
adc
adc
adc
adc
adc
in
in
in
in
in
in
in
je
addl
adc
add
add
adc
adc
adc
adc
adc
adc
adc
adc
in
in
in
adc
or
xchg
test
adc
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
in
adc
je
nop
nop
adcl
out
orb
adc
adc
adc
adc
adc
adc
adc
adc
adc
je
mov
add
orb
adc
adc
adc
adc
adc
adc
adc
adc
adc
je
mov
add
orb
adc
adc
adc
adc
adc
adc
adc
adc
adc
orb
xor
orb
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
orb
adc
add
addb
je
je
je
or
or
or
or
or
je
add
orb
lea
je
or
or
or
or
or
or
or
je
add
add
add
aas
incb
add
add
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
aas
cld
add
add
aas
cld
add
add
cld
add
add
cld
add
add
cld
add
add
cld
add
add
cld
add
add
incl
add
add
add
xor
add
add
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
sahf
add
add
add
add
xor
add
add
inc
add
add
dec
add
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
insb
add
arpl
popa
add
add
outsl
add
add
add
add
push
add
add
add
add
inc
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
add
imul
dec
add
sub
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
adc
add
je
add
outsb
add
insb
add
popa
add
add
add
jo
insb
add
arpl
popa
add
add
outsl
add
add
add
add
push
add
add
add
add
inc
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
push
add
add
imul
dec
add
sub
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
sbb
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
insb
add
arpl
popa
add
add
outsl
add
add
add
add
push
add
add
add
js
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
add
imul
dec
add
sub
add
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
adc
add
insl
add
add
je
jae
add
inc
add
insb
add
arpl
popa
add
add
outsl
add
add
add
add
push
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
push
add
add
add
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
pop
cld
add
add
aas
cld
add
add
aas
cld
add
add
cld
add
add
cld
add
add
cld
add
add
cld
add
add
cld
add
add
incl
add
add
add
xor
add
add
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
sahf
add
add
add
add
xor
add
add
inc
add
add
dec
add
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
insb
add
arpl
popa
add
add
outsl
add
add
add
add
push
add
add
add
add
inc
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
add
imul
dec
add
sub
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
adc
add
je
add
outsb
add
insb
add
popa
add
add
add
jo
insb
add
arpl
popa
add
add
outsl
add
add
add
add
push
add
add
add
add
inc
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
push
add
add
imul
dec
add
sub
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
sbb
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
insb
add
arpl
popa
add
add
outsl
add
add
add
add
push
add
add
add
js
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
add
imul
dec
add
sub
add
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
adc
add
insl
add
add
je
jae
add
inc
add
insb
add
arpl
popa
add
add
outsl
add
add
add
add
push
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
push
add
add
add
add
es
add
add
push
add
add
push
add
push
add
push
add
push
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
je
jb
arpl
fs
jae
add
add
fs
imul
add
add
jb
jne
insb
push
jb
je
arpl
pop
cmpl
jne
cld
mov
mov
xor
call
mov
jecxz
lea
lea
mov
lea
mov
push
dec
jne
mov
push
push
pushl
call
add
add
loop
add
mov
mov
call
mov
test
je
mov
jecxz
push
call
test
je
mov
mov
mov
jecxz
test
jne
add
inc
inc
jmp
and
push
pushl
call
stos
jmp
add
jmp
mov
lea
lea
lods
xchg
jecxz
push
mov
push
push
push
lods
xchg
lods
push
push
call
pop
loop
pop
popa
popf
ret
sub
mov
mov
mov
lods
test
je
stos
jmp
call
and
je
outsw
jne
add
stos
test
jne
push
push
push
push
call
inc
jb
outsl
jb
pop
lods
stos
test
jne
call
push
push
inc
push
xor
cs
dec
dec
add
push
sub
or
add
dec
gs
popa
addr16
outsl
js
add
push
sub
rolb
enter
pusha
mov
mov
lea
mov
push
xor
mov
mov
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
rep
push
pop
call
dec
jne
push
pop
mov
mov
mov
and
shl
add
lea
call
jae
call
movzbl
imul
xor
mov
inc
cmpl
lea
mov
jl
mov
sub
mov
movzbl
mov
shll
mov
mov
and
lea
lea
call
jae
call
add
test
jne
jmp
call
test
lea
je
cmp
jl
jmp
mov
lea
call
jae
call
add
jmp
call
lea
cmp
jl
mov
mov
incl
cmpl
mov
mov
jge
andl
jmp
cmpl
jge
subl
jmp
subl
jmp
call
mov
mov
lea
call
jae
call
cmpl
mov
mov
mov
mov
mov
mov
jge
andl
jmp
push
popl
mov
add
jmp
call
mov
mov
lea
call
jae
call
mov
add
shl
mov
add
lea
call
jae
call
mov
xor
cmpl
mov
setge
lea
mov
mov
sub
incl
mov
mov
mov
jmp
call
jmp
call
mov
mov
lea
call
jae
call
mov
jmp
call
mov
mov
lea
call
jae
call
mov
jmp
call
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setge
dec
and
add
mov
mov
add
call
jae
call
push
shl
lea
jmp
call
add
call
jae
call
shl
lea
push
push
jmp
call
lea
push
push
pop
mov
push
call
pop
xor
inc
mov
shl
pop
sub
add
cmpl
push
jge
addl
cmp
jge
mov
jmp
push
pop
mov
shl
lea
push
popl
call
sub
cmp
mov
jl
mov
sar
and
dec
or
cmp
mov
jge
shl
mov
sub
mov
lea
jmp
sub
push
call
shr
add
cmp
jb
sub
or
pop
loop
mov
add
shl
push
popl
push
popl
call
inc
mov
pop
je
mov
inc
sub
inc
add
mov
mov
mov
dec
incl
inc
test
mov
mov
jne
jmp
pop
mov
jmp
pop
mov
jecxz
push
mov
mov
pop
add
cmp
jae
lods
inc
cmp
je
cmp
je
cmp
jne
cmp
jae
lods
inc
cmp
jb
cmp
ja
cmp
je
mov
cmp
jne
xor
bswap
sub
mov
add
add
jmp
popa
leave
ret
cmp
jae
push
mov
mov
movzbl
shl
or
shl
incl
mov
pop
ret
call
mov
mov
shr
imul
cmp
ret
mov
mov
sub
shr
add
ret
call
mov
ret
sub
sub
mov
shr
sub
ret
call
mov
ret
xor
inc
push
call
mov
call
jae
call
mov
add
pop
jmp
call
mov
lea
pop
or
shll
decl
jne
ret
call
add
add
add
inc
add
pusha
inc
add
add
add
add
adc
dec
push
add
adc
add
add
add
add
inc
add
add
add
add
add
sbb
arpl
xchg
iret
xlat
pop
xchg
cld
push
jmp
jne
cmp
jae
lods
inc
cmp
jb
cmp
ja
cmp
je
mov
cmp
jne
xor
bswap
sub
mov
add
add
jmp
popa
leave
ret
cmp
jae
push
mov
mov
movzbl
shl
or
shl
incl
mov
pop
ret
call
mov
mov
shr
imul
cmp
ret
mov
mov
sub
shr
add
ret
call
mov
ret
sub
sub
mov
shr
sub
ret
call
mov
ret
xor
inc
push
call
mov
call
jae
call
mov
add
pop
jmp
call
mov
lea
pop
or
shll
decl
jne
ret
call
add
add
add
inc
add
pusha
inc
add
add
add
add
adc
dec
push
add
adc
add
add
add
add
inc
add
add
add
add
add
sbb
arpl
xchg
iret
xlat
pop
xchg
cld
push
bound
xchg
neg
push
dec
bound
or
mov
imul
sub
push
outsl
cs
bound
les
jecxz
ret
stc
test
add
cmp
mov
fstl
adc
mov
sbb
scas
pop
popa
in
fwait
sub
out
enter
popa
mov
sbb
pop
xchg
sbbb
das
stc
js
ret
cwtl
inc
imul
popf
imul
sub
into
sbb
jge
std
pop
xchg
xor
ss
fwait
sub
cmpsl
jge
and
sbb
cltd
adc
adc
pop
dec
push
fs
mov
cwtl
rcrl
ret
inc
pop
andb
cmp
jg
sub
sbb
xchg
sbb
inc
js
adc
or
pop
add
daa
stos
decb
jmp
ret
dec
pop
test
shr
sbb
test
sbb
cmp
outsl
lods
jge
ja
xor
push
mov
cmp
fcmovnb
add
pop
sub
adc
scas
xor
sub
jg
adc
mov
insb
sti
sti
fwait
sub
add
out
out
jae
scas
sbb
xor
dec
jl
out
push
sahf
fwait
jae
nop
repz
mov
mov
shr
adc
mov
jne
dec
cmp
ljmp
repnz
nop
jle
or
add
mov
out
fists
aaa
pushf
int3
jbe
ljmp
js
testb
imul
pop
lret
mov
lods
adc
subl
outsb
add
popa
sub
or
mov
or
idiv
das
add
test
outsb
testl
lea
pop
push
lahf
out
cmpsb
cmp
jnp
jecxz
sbb
pop
cmp
pop
mov
dec
stos
jl
clc
in
repnz
add
outsl
xchg
add
push
push
inc
test
xchg
mov
mov
cltd
jbe
adc
mov
inc
and
sti
mov
in
fwait
xchg
mov
inc
icebp
inc
jge
or
adc
xlat
je
ret
insb
jne
mov
sbb
or
aad
mov
or
movl
pop
in
jno
aas
inc
mov
fcoml
loope
rolb
shrb
mov
pop
xlat
sbb
sbbb
pop
jnp
dec
mov
inc
stc
dec
mov
inc
mov
pop
jnp
jg
dec
push
pop
sbb
lret
ja
push
mov
mov
or
jmp
adc
pop
scas
orb
jnp
xchg
jo
dec
aaa
pop
sub
xchg
jg
sbb
pop
lds
or
cmp
sub
and
mov
or
ret
call
cmp
dec
ficompl
adc
mov
testb
cmp
out
add
cmp
push
gs
ss
insl
add
mov
inc
out
lahf
ss
adc
xchg
xor
inc
sbb
xchg
and
add
cmp
mov
les
sti
dec
xor
fisttps
xor
adc
xor
adc
int
inc
je
or
cs
xchg
movb
repz
cmc
lret
shrl
js
loopne
shrl
test
mov
call
fnstsw
aaa
xcrypt-ctr
cmpsl
sbb
test
negl
fld
cwtl
mov
jge
cmp
xchg
lea
pop
repz
mov
pop
or
push
push
or
sbb
rorl
xor
push
push
dec
inc
sbb
mov
pushf
stos
sbb
sbb
xor
and
cmp
mov
cmp
cmp
xor
xchg
je
fdivrl
mov
xchg
adc
shrb
sub
sub
je
jnp
xchg
mov
inc
imull
pop
sti
repnz
and
xchg
pop
and
js
popf
jmp
inc
outsl
mov
dec
sar
call
mov
mov
add
lods
xchg
neg
push
dec
bound
or
mov
imul
sub
push
outsl
cs
bound
les
jecxz
ret
stc
test
add
cmp
mov
fstl
adc
mov
sbb
scas
pop
popa
in
fwait
sub
out
enter
popa
mov
sbb
pop
xchg
sbbb
das
stc
js
ret
cwtl
inc
imul
popf
imul
sub
into
sbb
jge
std
pop
xchg
xor
ss
fwait
sub
cmpsl
jge
and
sbb
cltd
adc
adc
pop
dec
push
fs
mov
cwtl
rcrl
ret
inc
pop
andb
cmp
jg
sub
sbb
xchg
sbb
inc
js
adc
or
pop
add
daa
stos
decb
jmp
ret
dec
pop
test
shr
sbb
test
sbb
cmp
outsl
lods
jge
ja
xor
push
mov
cmp
fcmovnb
add
pop
sub
adc
scas
xor
sub
jg
adc
mov
insb
sti
sti
fwait
sub
add
out
out
jae
scas
sbb
xor
dec
jl
out
push
sahf
fwait
jae
nop
repz
mov
mov
shr
adc
mov
jne
dec
cmp
ljmp
repnz
nop
jle
or
add
mov
out
fists
aaa
pushf
int3
jbe
ljmp
js
testb
imul
pop
lret
mov
lods
adc
subl
outsb
add
popa
sub
or
mov
or
idiv
das
add
test
outsb
testl
lea
pop
push
lahf
out
cmpsb
cmp
jnp
jecxz
sbb
pop
cmp
pop
mov
dec
stos
jl
clc
in
repnz
add
outsl
xchg
add
push
push
inc
test
xchg
mov
mov
cltd
jbe
adc
mov
inc
and
sti
mov
in
fwait
xchg
mov
inc
icebp
inc
jge
or
adc
xlat
je
ret
insb
jne
mov
sbb
or
aad
mov
or
movl
pop
in
jno
aas
inc
mov
fcoml
loope
rolb
shrb
mov
pop
xlat
sbb
sbbb
pop
jnp
dec
mov
inc
stc
dec
mov
inc
mov
pop
jnp
jg
dec
push
pop
sbb
lret
ja
push
mov
mov
or
jmp
adc
pop
scas
orb
jnp
xchg
jo
dec
aaa
pop
sub
xchg
jg
sbb
pop
lds
or
cmp
sub
and
mov
or
ret
call
cmp
dec
ficompl
adc
mov
testb
cmp
out
add
cmp
push
gs
ss
insl
add
mov
inc
out
lahf
ss
adc
xchg
xor
inc
sbb
xchg
and
add
cmp
mov
les
sti
dec
xor
fisttps
xor
adc
xor
adc
int
inc
je
or
cs
xchg
movb
repz
cmc
lret
shrl
js
loopne
shrl
test
mov
call
fnstsw
aaa
xcrypt-ctr
cmpsl
sbb
test
negl
fld
cwtl
mov
jge
cmp
xchg
lea
pop
repz
mov
pop
or
push
push
or
sbb
rorl
xor
push
push
dec
inc
sbb
mov
pushf
stos
sbb
sbb
xor
and
cmp
mov
cmp
cmp
xor
xchg
je
fdivrl
mov
xchg
adc
shrb
sub
sub
je
jnp
xchg
mov
inc
imull
pop
sti
repnz
and
xchg
pop
and
js
popf
jmp
inc
outsl
mov
dec
sar
call
mov
mov
add
movsl
lods
popl
or
rcrl
shrb
gs
xlat
push
int
push
sbb
inc
aas
jbe
test
cli
sbb
pushf
pop
arpl
loop
pushl
lods
sub
mov
int
out
xor
aad
cmp
sbb
push
xchg
adc
inc
sti
mov
sbb
cmp
or
je
cmp
js
sub
stos
or
psubsb
cmp
pop
mov
sbb
popa
xchg
push
loopne
call
pop
xchg
pop
inc
mov
psrld
add
das
not
or
inc
sub
ss
sbbb
movq
je
xor
in
xor
xchg
sbb
lahf
cmpsb
adc
lods
ds
aam
sbb
movsb
outsb
dec
xor
inc
insl
scas
push
cld
out
mov
lds
push
stos
push
popf
fcompp
lods
mov
sub
ljmp
sub
int
xchg
sahf
ds
subl
xchg
inc
cmpsl
mov
xor
jns
ret
cmc
hlt
mov
enter
arpl
pop
xor
jp
lods
xchg
lret
pop
cmp
lock
andb
mov
xor
movsb
lcall
sti
test
cmp
jp
push
sub
aam
jecxz
fdivs
cli
sti
outsl
or
dec
sbb
stc
push
mov
sbb
xchg
fbld
sub
cmp
stos
cmp
jmp
insl
xchg
mov
mov
sbb
mov
test
jo
ds
xchg
dec
and
jmp
ss
cmp
mov
sub
test
pop
out
out
sub
sub
mov
pop
adc
mull
mov
jno
ss
pop
aad
mov
push
fucomi
fiaddl
xchg
std
pop
lret
rolb
stc
push
push
jg
xor
mov
cmp
mov
in
data16
out
pop
jl
sbb
inc
imul
cmp
sti
gs
and
add
repnz
and
xor
xchg
mov
inc
push
aaa
jns
or
jp
xor
in
sbb
cmp
scas
fadd
stc
stos
inc
or
cmp
dec
push
inc
mov
pop
sub
mov
stos
shrb
xor
jno
in
clc
scas
inc
or
std
aaa
vucomisd
pushfw
mov
out
loopne
aaa
cwtl
mov
add
in
push
mov
sbb
pop
push
mov
mov
lods
mov
sbb
sbb
dec
jbe
pushf
pop
aaa
mov
fistl
cmpl
xor
add
cmp
scas
repz
mov
xchg
mov
pop
sbb
mov
clc
jp
imull
jg
mov
mov
call
into
adc
in
mov
shrb
sub
imul
aaa
cld
and
xor
mov
xor
jo
bound
jae
sbb
xchg
xchg
or
inc
out
mov
xchg
test
insb
mov
push
push
shll
sti
push
in
out
cmc
cmp
fsubrs
jb
decl
mov
shl
xchg
shll
xor
mov
dec
sbb
arpl
dec
lret
leave
and
sbb
jmp
div
and
and
mov
pop
ljmp
cmp
fnstcw
xchg
clc
dec
mov
xor
dec
fsubrl
sub
int3
adc
or
mov
xchg
jnp
mov
loopne
add
int3
int
and
push
stos
pop
mov
inc
movsl
in
out
outsb
add
sarb
cmp
int
dec
fdivp
shlb
cli
std
stos
scas
mov
cmp
adc
add
cltd
jns
sbb
inc
push
frstor
adc
sbb
andb
fwait
addr16
cmp
lds
shrb
jmp
fcoml
and
or
dec
mov
mov
or
lcall
sub
out
outsl
dec
xchg
or
jmp
clc
stos
jo
fsubr
pop
stos
pop
out
into
loop
divb
sbb
pop
xor
pushf
jecxz
aad
ffree
adc
dec
xor
movsb
aaa
cli
cmp
mov
sbb
into
inc
fs
pop
mov
imull
mov
xor
int3
or
and
icebp
dec
sub
out
js
pop
fs
push
push
cmp
incl
out
mov
fldcw
push
xchg
push
mov
popa
mov
push
xchg
jg
dec
mov
pop
and
xchg
sub
clc
aaa
pop
inc
xchg
and
push
loopne
cmp
call
insl
xchg
dec
loop
das
scas
dec
shll
into
outsb
lret
int3
ret
push
push
mov
add
movsl
pushf
jp
xor
mov
and
sbb
lock
pop
icebp
xchg
and
stc
push
fcompl
mov
sbb
stc
push
in
icebp
mov
push
or
fcomip
jne
pushw
mov
xchg
fisubrs
cmp
xor
daa
push
xlat
cmp
push
das
ja
push
gs
or
fidivrl
sbb
xor
movsb
loopne
sti
aad
mov
jne
adc
and
mov
data16
cmp
adc
pushf
jne
outsb
push
fistpll
scas
mov
push
cmc
cltd
or
stc
mov
xchg
sub
push
push
movsb
fildll
mov
jecxz
shlb
sbb
addb
xchg
push
push
jae
push
repz
out
pop
mov
jmp
push
inc
rol
mov
mov
cmpsl
fldt
mov
add
and
pop
lret
inc
fsubrl
pop
jns
pop
dec
pop
and
inc
in
or
fistpl
pop
ljmp
lahf
push
mov
enter
dec
and
mov
adc
push
pop
mov
xchg
mov
andps
xor
loop
cmpsb
inc
xor
cld
or
mov
out
push
gs
mov
fcmovu
cmp
xchg
in
xor
mov
or
outsb
lcall
loop
mov
insl
xchg
std
fists
mov
push
push
xor
dec
imul
loope
pop
jecxz
out
fistpll
mov
adc
scas
dec
pop
jle
jnp
dec
dec
inc
xor
sub
cmpsl
mov
mov
lea
push
fcompl
mov
sbb
stc
push
in
icebp
mov
push
or
fcomip
jne
pushw
mov
xchg
fisubrs
cmp
xor
daa
push
xlat
cmp
push
das
ja
push
gs
or
fidivrl
sbb
xor
movsb
loopne
sti
aad
mov
jne
adc
and
mov
data16
cmp
adc
pushf
jne
outsb
push
fistpll
scas
mov
push
cmc
cltd
or
stc
mov
xchg
sub
push
push
movsb
fildll
mov
jecxz
shlb
sbb
addb
xchg
push
push
jae
push
repz
out
pop
mov
jmp
push
inc
rol
mov
mov
cmpsl
fldt
mov
add
and
pop
lret
inc
fsubrl
pop
jns
pop
dec
pop
and
inc
in
or
fistpl
pop
ljmp
lahf
push
mov
enter
dec
and
mov
adc
push
pop
mov
xchg
mov
andps
xor
loop
cmpsb
inc
xor
cld
or
mov
out
push
gs
mov
fcmovu
cmp
xchg
in
xor
mov
or
outsb
lcall
loop
mov
insl
xchg
std
fists
mov
push
push
xor
dec
imul
loope
pop
jecxz
out
fistpll
mov
adc
scas
dec
pop
jle
jnp
dec
dec
inc
xor
sub
cmpsl
mov
mov
lea
cmp
xor
sbb
outsb
jg
mov
pop
mov
in
add
push
lret
test
mov
cwtl
scas
out
leave
sarb
fisubl
cld
jl
scas
cmp
scas
and
fs
mov
adc
rcll
add
hlt
adc
xchg
bound
ds
orb
pushf
into
fimull
pop
sub
andb
fldenv
out
out
cwtl
test
push
stc
pop
gs
mov
mov
in
push
inc
leave
adc
lea
and
clc
xor
and
cmpsl
arpl
stos
jno
mov
xchg
ficoml
cmp
sub
je
push
add
cwtl
dec
mov
fs
sbb
lea
rorl
sbb
xor
dec
cs
push
mov
out
inc
jno
xchg
out
xor
loop
pop
call
jecxz
mov
loopne
adc
add
push
int
xlat
sub
and
outsb
insl
or
jle
jmp
sbb
sub
aad
jbe
xlat
mov
jnp
stos
add
or
xor
dec
aad
shl
mov
lods
lret
pop
xor
mov
sbb
sub
stc
aad
movsl
jmp
xchg
adc
mov
scas
inc
pop
push
mov
add
inc
repnz
rcl
mov
mov
addr16
into
fchs
pop
xchg
outsb
cli
jno
add
push
adc
mov
mov
sub
ficompl
mov
outsb
or
xchg
adc
mov
cmp
hlt
lahf
sti
es
data16
mov
cmp
mov
xchg
adc
inc
sbb
mov
or
imul
out
jae
and
mov
mov
sub
insl
or
push
ja
push
roll
pop
lret
add
pop
push
bound
xor
popa
incl
pop
popa
popf
xor
arpl
sti
and
push
push
mov
js
xchg
jnp
push
mov
popf
fsubs
xchg
and
call
faddl
or
push
pop
pop
push
nop
test
insb
ret
mov
outsb
in
insl
into
aaa
dec
xor
jl
sbbl
sbb
and
jecxz
cs
mov
sub
popf
sbb
mov
shll
int
sbbb
cltd
xor
cmp
mov
inc
xor
xor
lret
shl
aas
shll
mov
shrb
and
ljmp
insb
cmp
stos
gs
sub
sbb
out
pop
inc
ljmp
arpl
jge
aad
ja
or
ret
and
inc
push
xchg
mov
call
push
test
movsb
mov
outsl
lret
add
ljmp
mov
jnp
inc
sbb
pop
add
test
in
xchg
clc
push
mov
icebp
inc
sbb
and
adc
jmp
test
jo
xor
stc
lret
inc
add
pop
jg
adc
dec
push
sbb
jmp
or
and
jns
push
cs
and
cmpsb
cmp
jns
mov
cs
jne
enter
mov
push
cld
jmp
push
sbb
ret
xchg
mov
xchg
xchg
xchg
mov
jg
test
mov
test
ss
xor
out
es
xor
sbb
outsb
jg
mov
pop
mov
in
add
push
lret
test
mov
cwtl
scas
out
leave
sarb
fisubl
cld
jl
scas
cmp
scas
and
fs
mov
adc
rcll
add
hlt
adc
xchg
bound
ds
orb
pushf
into
fimull
pop
sub
andb
fldenv
out
out
cwtl
test
push
stc
pop
gs
mov
mov
in
push
inc
leave
adc
lea
and
clc
xor
and
cmpsl
arpl
stos
jno
mov
xchg
ficoml
cmp
sub
je
push
add
cwtl
dec
mov
fs
sbb
lea
rorl
sbb
xor
dec
cs
push
mov
out
inc
jno
xchg
out
xor
loop
pop
call
jecxz
mov
loopne
adc
add
push
int
xlat
sub
and
outsb
insl
or
jle
jmp
sbb
sub
aad
jbe
xlat
mov
jnp
stos
add
or
xor
dec
aad
shl
mov
lods
lret
pop
xor
mov
sbb
sub
stc
aad
movsl
jmp
xchg
adc
mov
scas
inc
pop
push
mov
add
inc
repnz
rcl
mov
mov
addr16
into
fchs
pop
xchg
outsb
cli
jno
add
push
adc
mov
mov
sub
ficompl
mov
outsb
or
xchg
adc
mov
cmp
hlt
lahf
sti
es
data16
mov
cmp
mov
xchg
adc
inc
sbb
mov
or
imul
out
jae
and
mov
mov
sub
insl
or
push
ja
push
roll
pop
lret
add
pop
push
bound
xor
popa
incl
pop
popa
popf
xor
arpl
sti
and
push
push
mov
js
xchg
jnp
push
mov
popf
fsubs
xchg
and
call
faddl
or
push
pop
pop
push
nop
test
insb
ret
mov
outsb
in
insl
into
aaa
dec
xor
jl
sbbl
sbb
and
jecxz
cs
mov
sub
popf
sbb
mov
shll
int
sbbb
cltd
xor
cmp
mov
inc
xor
xor
lret
shl
aas
shll
mov
shrb
and
ljmp
insb
cmp
stos
gs
sub
sbb
out
pop
inc
ljmp
arpl
jge
aad
ja
or
ret
and
inc
push
xchg
mov
call
push
test
movsb
mov
outsl
lret
add
ljmp
mov
jnp
inc
sbb
pop
add
test
in
xchg
clc
push
mov
icebp
inc
sbb
and
adc
jmp
test
jo
xor
stc
lret
inc
add
pop
jg
adc
dec
push
sbb
jmp
or
and
jns
push
cs
and
cmpsb
cmp
jns
mov
cs
jne
enter
mov
push
cld
jmp
push
sbb
ret
xchg
mov
xchg
xchg
xchg
mov
jg
test
mov
test
ss
xor
out
add
fmulp
mov
pop
imull
adc
jecxz
mov
add
sahf
lret
popf
cmp
arpl
mov
icebp
and
das
mov
cmp
ss
pop
sti
dec
dec
jl
push
out
adc
adc
jmp
call
test
xchg
jp
scas
lods
sbb
jae
mov
bound
xlat
mov
cltd
jmp
loop
outsb
mov
dec
cmp
stc
xchg
and
jne
js
sub
fsubl
sbb
jns
int3
sbb
push
cmp
call
popf
inc
stos
aas
dec
mov
in
pop
neg
repnz
mov
std
lcall
push
mov
aaa
mov
rorb
adc
jecxz
pop
movsb
mov
mov
gs
test
fnsave
arpl
xchg
clc
cmp
fisubrl
pop
inc
pop
repnz
inc
adc
cs
nop
into
pop
scas
aad
jmp
cmpsl
mov
stc
scas
mov
ficomps
dec
dec
in
stos
pop
decb
jne
xchg
pushf
dec
ds
jg
mov
cmp
bound
pusha
outsl
scas
lea
inc
xchg
sahf
sbb
cli
xor
les
stc
fisubl
cld
cmpl
and
xor
and
insb
pop
rorb
or
cmc
cmpb
in
mov
cwtl
adc
lds
fwait
bound
jge
addl
push
bound
out
cld
stc
mov
out
cli
int3
je
add
les
mov
mov
fiadds
in
jnp
mov
movb
rorl
test
push
repnz
cmpsb
jo
out
jp
movups
nop
ja
dec
addr16
iret
repnz
or
jbe
andb
jae
adc
mov
sub
loopne
jbe
movsb
popa
sub
lcall
mov
call
loopne
cltd
push
call
call
adcl
inc
xor
movsb
pusha
sub
push
ljmp
movsl
out
and
sbb
xchg
mov
add
push
out
clc
sub
stos
xchg
in
mov
scas
gs
mov
push
cltd
lret
dec
sti
push
in
adc
jmp
add
lret
add
xchg
adc
aam
push
mov
lods
fstl
mov
inc
mov
inc
jle
test
mov
sbb
adc
fcompl
inc
pop
lcall
push
aam
scas
repnz
jmp
int3
cld
add
imul
cmp
sbb
mov
dec
aas
je
mov
mov
pop
pop
icebp
push
or
push
stos
pop
pop
xchg
mov
int3
test
pop
leave
fiaddl
push
xor
daa
jnp
icebp
bnd
andl
les
movd
loope
push
xor
inc
lret
icebp
in
addb
inc
mov
sahf
les
lahf
movsl
and
shlb
adc
xchg
pop
cmpsl
add
lret
adc
mov
add
jnp
fcoml
mov
outsb
pop
inc
add
lock
xlat
or
fistpll
inc
out
shl
lds
rcrb
lods
add
xor
xor
enter
cmpsb
insb
or
lret
out
ljmp
sbb
push
jae
pop
shll
xchg
mov
loop
lods
mov
cmp
shrb
inc
aad
mov
jl
popf
push
mulb
or
mov
pop
leave
cli
mov
xor
aaa
sub
jns
pop
fdivrl
pop
hlt
mov
lahf
shl
aad
push
int3
stos
aad
pop
sahf
sub
les
mov
and
mov
inc
sbb
xchg
icebp
lret
iret
in
mov
cwtl
dec
popf
cmpsb
cltd
or
pop
cli
adc
repnz
inc
inc
aad
sbb
addr16
sahf
and
pop
out
jae
andl
nop
mov
jg
mov
xchg
jo
stc
cmpsb
add
out
push
cmp
cmpl
push
mov
pop
das
push
in
inc
rclb
iret
fistpll
insl
cli
shlb
pop
lea
cmpsb
mov
clc
daa
test
mov
aam
mov
push
dec
cmp
add
mov
push
dec
icebp
roll
jno
daa
pop
push
outsb
fistpll
push
sbb
mov
jge
adc
das
mov
adc
jbe
mov
sub
add
xchg
insl
icebp
or
aaa
fnstsw
push
mov
sahf
pop
hlt
stc
lods
sub
xor
mov
sbb
and
push
lret
push
sahf
mov
jb
in
mov
pop
sub
mov
out
shrb
or
cmp
dec
mov
jns
push
sahf
roll
outsb
and
decb
lds
je,pn
add
lcall
test
sub
add
ljmp
pop
dec
push
aas
push
pop
push
add
ljmp
movsb
mov
dec
inc
outsb
hlt
inc
xchg
clc
ds
push
mov
inc
push
mov
pop
push
out
xor
test
xor
scas
mov
enter
and
cmp
iret
jns
mov
jle
fxch
pop
call
in
subl
in
or
lea
xchg
jbe
rcl
ss
aas
xchg
div
add
pop
je
ljmp
mull
push
sbb
lret
arpl
ja
mov
pusha
and
push
adc
scas
mov
mov
and
push
push
repnz
sti
mov
pop
mov
and
xchg
mov
fisubrs
jo
test
inc
push
cmpsb
lret
jnp
xchg
or
or
xchg
jns
adc
adc
iret
int
fdivl
mov
ljmp
fldt
sub
in
xor
sti
jp
xchg
mov
imul
out
xor
inc
push
shlb
add
fcmove
cmc
sbb
test
jns
add
dec
xchg
dec
push
enter
dec
pop
imul
fidivl
mov
adc
or
into
cld
mov
popf
lods
andl
xor
xchg
xor
sub
pushf
pop
inc
lcall
outsl
int3
in
mov
fildl
ja
inc
or
add
mov
mov
pushf
cs
cmpsb
sbb
sub
dec
xor
fsubrp
or
je
scas
sub
out
sub
orb
push
adcb
pop
mov
pusha
dec
xchg
mov
pop
cmc
jbe
or
loopne
leave
insl
mov
sbb
and
dec
dec
xlat
mov
or
add
stc
cmc
dec
rcrb
sahf
pop
int3
xor
push
das
and
in
movb
js
inc
push
dec
stc
add
xorb
mov
mov
mov
mov
mov
jbe
sub
add
adc
add
leave
pusha
sub
incb
insb
jg
adc
xor
jecxz
inc
xorl
cmpsl
mul
xchg
cmpsl
lcall
outsb
xor
lds
add
imul
adc
mov
jne
popf
ret
icebp
call
fistps
fldl
std
jg
lret
rcl
xor
clc
mov
push
inc
std
inc
cld
xchg
or
nop
mov
gs
xor
dec
mov
pop
lock
pop
jb
dec
adc
test
jo
dec
push
in
in
leave
insl
scas
insb
dec
add
mov
dec
es
int3
xchg
pushf
test
push
arpl
adcl
adc
rcrb
add
push
sub
cmp
shrb
sub
lock
ja
push
les
sub
pop
sti
xchg
pop
pop
jo
cmp
es
rol
loopne
addr16
push
outsl
cmpl
lret
xor
push
jo
cmp
movsb
call
sub
js
cmp
call
inc
dec
push
stos
dec
cmp
arpl
or
cmc
pop
imul
dec
push
fistpll
in
test
imul
inc
leave
mov
mov
sbb
popa
mov
insb
push
movd
int
or
sbbl
out
mov
cmp
lods
or
leave
mov
push
jl
xor
in
adc
stos
cltd
mov
int
gs
les
cmc
ret
mov
mov
pusha
jg
jae
notl
adc
and
sub
xchg
insb
addl
pop
icebp
ja
data16
lock
pop
jnp
mov
jl,pn
lods
bndstx
rcll
cmp
aaa
fwait
int
cmp
mov
mov
dec
sub
push
jb
out
popa
dec
sub
addl
mov
and
cmp
bnd
xor
nop
push
mov
daa
aad
ljmp
popa
pushf
fcomps
and
imul
lods
pushf
aas
pop
xlat
add
icebp
cmp
push
ret
clc
jo
sete
mov
inc
xor
mov
cmp
nop
push
add
jo
xchg
push
ljmp
xor
xchg
mov
sahf
sbb
pop
push
pop
or
int
in
lahf
stos
mov
cwtl
dec
xchg
or
xor
stos
jno
cmp
sbb
les
sbb
fs
push
addb
ficoms
stos
push
dec
aad
scas
in
mov
sti
sub
pop
adc
cld
jle
add
stc
rorl
pop
sub
lds
pusha
pop
data16
pop
push
mov
pop
mov
call
xor
xlat
dec
mov
pusha
stos
stc
lret
dec
rcr
mov
loopne
sahf
push
bound
xor
inc
ret
in
sub
xlat
pop
cmp
adc
setb
fstpl
orb
js
mov
faddl
and
mov
out
xchg
pusha
pushf
xchg
imul
sarl
fidivl
ljmp
lods
outsb
outsb
ret
int3
push
or
popf
cs
or
mov
sbb
sub
inc
mov
inc
and
test
ficomps
or
dec
std
push
insl
xchg
jl
add
movsb
repz
add
cmp
and
mov
xlat
cmc
mov
out
mov
lds
jne
js
cmp
dec
cmpsb
cmpl
add
jne
pop
inc
xchg
add
dec
ficomps
arpl
repz
and
xlat
dec
inc
cwtl
cs
cld
popa
mov
repnz
lret
mov
mov
dec
ror
jge
call
repz
cmp
adc
lret
subb
jne
pop
inc
sbb
movsl
insl
add
mov
sbb
xor
dec
and
mov
ds
pop
jno
add
scas
or
cmpsl
or
sub
mov
xor
out
jmp
dec
bound
out
hlt
clc
lea
cmp
lods
add
and
loopne
mov
or
aam
push
jnp
fs
rolb
mov
ret
xor
arpl
xchg
in
push
insb
lds
push
test
cwtl
inc
das
subb
mov
fcomps
sub
inc
int3
jecxz
mov
aas
test
inc
jo
pop
nop
and
orl
push
mov
add
std
inc
fnstenv
or
aad
lret
jns
jge
jb
in
cmc
push
pop
mov
pushf
adc
sub
adcl
cltd
mov
sbb
and
rcr
cwtl
in
inc
mov
add
lea
mov
adc
mov
loope
adc
lea
xchg
add
scas
adc
xchg
leave
jo
lods
xor
dec
mov
shl
sbb
push
stos
sub
shll
rorb
aam
cmp
scas
sbb
jbe
mov
dec
test
icebp
xchg
fidivl
ljmp
lods
outsb
outsb
ret
int3
push
or
popf
cs
or
mov
sbb
sub
inc
mov
inc
and
test
ficomps
or
dec
std
push
insl
xchg
jl
add
movsb
repz
add
cmp
and
mov
xlat
cmc
mov
out
mov
lds
jne
js
cmp
dec
cmpsb
cmpl
add
jne
pop
inc
xchg
add
dec
ficomps
arpl
repz
and
xlat
dec
inc
cwtl
cs
cld
popa
mov
repnz
lret
mov
mov
dec
ror
jge
call
repz
cmp
adc
lret
subb
jne
pop
inc
sbb
movsl
insl
add
mov
sbb
xor
dec
and
mov
ds
pop
jno
add
scas
or
cmpsl
or
sub
mov
xor
out
jmp
dec
bound
out
hlt
clc
lea
cmp
lods
add
and
loopne
mov
or
aam
push
jnp
fs
rolb
mov
ret
xor
arpl
xchg
in
push
insb
lds
push
test
cwtl
inc
das
subb
mov
fcomps
sub
inc
int3
jecxz
mov
aas
test
inc
jo
pop
nop
and
orl
push
mov
add
std
inc
fnstenv
or
aad
lret
jns
jge
jb
in
cmc
push
pop
mov
pushf
adc
sub
adcl
cltd
mov
sbb
and
rcr
cwtl
in
inc
mov
add
lea
mov
adc
mov
loope
adc
lea
xchg
add
scas
adc
xchg
leave
jo
lods
xor
dec
mov
shl
sbb
push
stos
sub
shll
rorb
aam
cmp
scas
sbb
jbe
mov
dec
test
inc
idivl
test
loopew
ficomps
mov
sbb
fdivp
scas
inc
aas
jl
pop
sub
enter
push
ds
stos
add
pop
lds
cmp
call
into
fstpl
int3
inc
bound
adc
and
orl
negl
ret
std
pop
popf
aam
sub
jl
jae
lods
push
xorl
pop
dec
punpckhdq
xchg
push
pop
xchg
xor
jle
add
jmp
mulb
enter
out
adc
mov
subl
ljmp
mov
scas
xchg
sar
add
cld
pop
sbb
xchg
jle
add
ljmp
sbbl
bnd
xor
add
outsb
cli
xchg
js
jno
dec
ds
dec
add
imulb
imul
cmpsb
lea
cmc
xlat
rol
in
test
cmpl
mov
aas
outsl
call
push
mov
xchg
popf
in
pop
out
xchg
mov
or
xchg
cwtl
lods
movsb
pop
popf
bound
je
popf
mov
enter
cwtl
ljmp
lret
xchg
push
lahf
xor
add
hlt
sarb
or
data16
mov
jmp
adc
sub
lret
xchg
in
adc
and
pminsw
adc
lcall
mov
xchg
mov
add
testb
push
sbb
cmc
ret
sub
pop
jg
sbb
adc
xor
pop
pop
pop
outsb
imul
sub
fidivrs
fwait
jmp
adc
jno
subl
xchg
enter
jmp
in
daa
mov
sub
jle
sbb
fscale
jge
ja
icebp
jmp
pop
movsb
insb
outsb
sbb
mov
push
jecxz
inc
repnz
jecxz
jmp
pop
or
adc
xor
dec
pop
dec
adc
pop
scas
xchg
cwtl
mov
sub
jo
add
es
inc
cmp
cmpsb
mov
lods
add
pop
jae
fiadds
jecxz
loope
fisttpl
sub
dec
call
sub
add
dec
mov
lea
or
dec
mov
imul
xor
mov
bound
sarb
dec
mov
or
jp
daa
sub
cmp
dec
jecxz
popa
lahf
out
xchg
out
mov
pop
or
sbb
xchg
sarb
add
loope
cmp
adc
dec
add
xor
sub
imul
lock
loope
popf
sub
jmp
xor
pop
fisttpll
push
fnstcw
inc
test
filds
scas
loopne
icebp
rorl
lret
fs
cmp
js
xchg
and
xor
call
cmpsb
orb
mov
ds
mov
inc
fsubrs
imul
idivl
test
loopew
ficomps
mov
sbb
fdivp
scas
inc
aas
jl
pop
sub
enter
push
ds
stos
add
pop
lds
cmp
call
into
fstpl
int3
inc
bound
adc
and
orl
negl
ret
std
pop
popf
aam
sub
jl
jae
lods
push
xorl
pop
dec
punpckhdq
xchg
push
pop
xchg
xor
jle
add
jmp
mulb
enter
out
adc
mov
subl
ljmp
mov
scas
xchg
sar
add
cld
pop
sbb
xchg
jle
add
ljmp
sbbl
bnd
xor
add
outsb
cli
xchg
js
jno
dec
ds
dec
add
imulb
imul
cmpsb
lea
cmc
xlat
rol
in
test
cmpl
mov
aas
outsl
call
push
mov
xchg
popf
in
pop
out
xchg
mov
or
xchg
cwtl
lods
movsb
pop
popf
bound
je
popf
mov
enter
cwtl
ljmp
lret
xchg
push
lahf
xor
add
hlt
sarb
or
data16
mov
jmp
adc
sub
lret
xchg
in
adc
and
pminsw
adc
lcall
mov
xchg
mov
add
testb
push
sbb
cmc
ret
sub
pop
jg
sbb
adc
xor
pop
pop
pop
outsb
imul
sub
fidivrs
fwait
jmp
adc
jno
subl
xchg
enter
jmp
in
daa
mov
sub
jle
sbb
fscale
jge
ja
icebp
jmp
pop
movsb
insb
outsb
sbb
mov
push
jecxz
inc
repnz
jecxz
jmp
pop
or
adc
xor
dec
pop
dec
adc
pop
scas
xchg
cwtl
mov
sub
jo
add
es
inc
cmp
cmpsb
mov
lods
add
pop
jae
fiadds
jecxz
loope
fisttpl
sub
dec
call
sub
add
dec
mov
lea
or
dec
mov
imul
xor
mov
bound
sarb
dec
mov
or
jp
daa
sub
cmp
dec
jecxz
popa
lahf
out
xchg
out
mov
pop
or
sbb
xchg
sarb
add
loope
cmp
adc
dec
add
xor
sub
imul
lock
loope
popf
sub
jmp
xor
pop
fisttpll
push
fnstcw
inc
test
filds
scas
loopne
icebp
rorl
lret
fs
cmp
js
xchg
and
xor
call
cmpsb
orb
mov
ds
mov
inc
fsubrs
imul
and
leave
inc
dec
mov
inc
xor
inc
dec
imul
jge
cmp
mov
ds
rorb
mov
popa
pusha
test
sub
add
nop
leave
stc
lock
push
icebp
xchg
adc
loopne
arpl
enter
cmp
pop
sbb
or
adc
shl
lahf
adc
mov
sahf
push
pop
or
xchg
jp
mov
push
mov
inc
popa
inc
aas
or
out
repz
sti
pop
jnp
pop
cli
mov
mov
jle
loop
pop
lds
lds
outsb
cmp
out
or
push
push
fdivrl
mov
jne
test
xlat
js
bound
jno
sub
add
dec
loope
sbbb
xchg
xor
mov
push
inc
vcvtps2pd
jae
ds
lret
cmp
mov
scas
loop
pop
dec
mov
fcmovb
push
je
mov
andl
jl
adc
mov
inc
outsb
decl
lods
inc
xor
cmpsb
pusha
xchg
mov
push
arpl
movsl
jle
jnp
lds
stos
daa
jo
mov
inc
jnp
add
adc
sbb
mov
adc
xor
dec
pop
fisubs
loopne
jmp
lret
mov
cmc
or
mov
and
dec
mov
into
adc
xchg
imul
shll
ljmp
gs
fdivrs
cs
data16
add
test
lcall
adc
push
int3
scas
fcmovu
adc
mov
sbb
mov
mov
in
popa
add
stc
or
icebp
sbbb
lcall
fs
xchg
out
pop
insb
lea
es
and
mov
test
aas
fistpll
das
in
scas
testb
xor
mov
or
aad
jns
popf
mov
xor
push
fs
mov
lcall
xor
clc
mov
rcrl
outsl
push
cmp
cmc
mov
jmp
dec
fcoms
mov
inc
mov
scas
outsl
jle
cwtl
outsb
gs
mov
cmpsl
adc
clc
loop
pop
daa
cmpl
clc
push
sarl
dec
dec
inc
jno
cmp
scas
roll
lret
ja
mov
mov
out
sbb
xchg
stos
insl
push
mov
std
std
sbb
sarb
mov
inc
mov
inc
cli
jmp
lret
call
cmp
push
xchg
pop
pop
cld
not
push
jmp
xlat
sub
into
out
cli
repz
adc
or
out
pop
push
cmpsl
call
dec
mov
mov
cmpsl
enter
add
sbb
ret
jns
stos
adcl
dec
cmc
dec
add
loop
data16
dec
subb
dec
leave
js
jnp
inc
out
fstpt
xchg
sbb
fisttpl
xor
into
in
mov
shlb
jg
inc
pop
cmp
jne
insb
jle
mov
loopne
fucomp
pop
loop
jecxz
dec
sbb
sub
ja
xchg
add
stos
jne
into
lods
jno
pop
or
out
sub
daa
cli
mov
add
ss
jae
or
xor
add
icebp
ja
mov
mov
inc
dec
xchg
icebp
cwtl
sbb
cwtl
int3
push
dec
xchg
push
sub
push
jg
xchg
and
call
jno
xor
fcomps
mov
or
stos
bound
sbb
iret
mov
repnz
mov
xchg
cmp
push
sahf
movsl
loope
sti
into
enter
jp
pop
loopne
xorl
pop
adc
xlat
loop
mov
rcr
mov
ja
hlt
jns
orb
xor
movl
push
or
outsb
inc
je
cmpsl
fs
jg
cmc
in
mov
xor
push
cmpsl
sbb
push
pop
roll
in
in
lret
fisubrl
push
lods
outsb
lock
adc
push
out
rol
pushf
pop
mov
rcrb
and
xchg
sbb
add
jmp
leave
outsl
pop
xchg
jno
mul
adc
xchg
pop
es
ss
inc
jo
lret
fisttpll
lods
iret
test
pop
jb
cli
aam
testb
cmp
fwait
test
sbbb
and
call
stos
in
dec
or
lahf
loopne
push
movsb
subl
cmp
mov
dec
les
mov
and
push
inc
pop
ret
out
and
inc
cmc
fcoml
mov
pop
cmp
and
cmp
rcl
xchg
stos
in
mov
mov
sbb
loope
fisttpl
and
jg
ja
idivl
mov
push
fwait
mov
in
mov
add
sub
push
enter
and
add
jle
and
jmp
in
nop
adc
in
ss
jge
int
adc
shrl
test
pop
fisubs
jno
fdivs
xchg
ror
sarl
jge
test
xchg
repz
movsl
xlat
ficoml
push
daa
fs
mov
stos
dec
inc
jb
pop
ja
mov
xor
stos
lea
xor
inc
packuswb
stc
lods
cli
test
mov
cwtl
xchg
cld
cli
ljmp
push
xchg
dec
rclb
pushf
mov
and
std
xchg
in
xor
in
scas
dec
pop
int
xor
adc
cmp
call
cmp
fdivp
sahf
and
mov
fwait
xchg
pop
hlt
movd
orl
xor
fcomps
jo
int
dec
xor
cmp
loop
mov
xchg
cltd
push
add
sbb
gs
js
imul
xor
adc
das
lock
enter
sub
sbb
pop
pop
mov
sub
dec
popa
popf
lcall
sub
xchg
andb
fwait
leave
outsl
jmp
pop
dec
fidivrl
adc
fs
flds
xchg
rorl
lea
test
ja
and
js
mov
mov
ret
fadds
stos
xchg
jmp
xor
mov
into
addl
aaa
mov
inc
sbb
test
jecxz
xor
shl
imul
loop
cmpsl
out
fdiv
cmpsb
sarb
jo
push
fldenv
cmpl
jmp
cmpsb
adc
dec
sbb
into
or
loop
popf
and
icebp
dec
pop
adc
and
mov
or
adc
inc
cmp
das
jmp
adc
adc
sahf
jb
mull
dec
test
push
fildl
adc
jns
daa
and
mov
jne
mov
add
test
xor
fldl
ds
cli
jp
iret
mov
jmp
mov
fists
sbb
fistpl
ret
adc
xor
repz
xchg
and
push
push
xchg
mov
pop
xchg
orl
jp
enter
push
xrelease
subb
jp
stos
push
add
fs
pop
fcmovnu
in
cmp
call
adc
ds
jg
ja
cmova
jns
dec
pop
fwait
mov
pop
ffreep
loopne
push
xchg
out
or
jno
mov
pop
lea
jbe
cmp
and
jmp
in
nop
adc
in
ss
jge
int
adc
shrl
test
pop
fisubs
jno
fdivs
xchg
ror
sarl
jge
test
xchg
repz
movsl
xlat
ficoml
push
daa
fs
mov
stos
dec
inc
jb
pop
ja
mov
xor
stos
lea
xor
inc
packuswb
stc
lods
cli
test
mov
cwtl
xchg
cld
cli
ljmp
push
xchg
dec
rclb
pushf
mov
and
std
xchg
in
xor
in
scas
dec
pop
int
xor
adc
cmp
call
cmp
fdivp
sahf
and
mov
fwait
xchg
pop
hlt
movd
orl
xor
fcomps
jo
int
dec
xor
cmp
loop
mov
xchg
cltd
push
add
sbb
gs
js
imul
xor
adc
das
lock
enter
sub
sbb
pop
pop
mov
sub
dec
popa
popf
lcall
sub
xchg
andb
fwait
leave
outsl
jmp
pop
dec
fidivrl
adc
fs
flds
xchg
rorl
lea
test
ja
and
js
mov
mov
ret
fadds
stos
xchg
jmp
xor
mov
into
addl
aaa
mov
inc
sbb
test
jecxz
xor
shl
imul
loop
cmpsl
out
fdiv
cmpsb
sarb
jo
push
fldenv
cmpl
jmp
cmpsb
adc
dec
sbb
into
or
loop
popf
and
icebp
dec
pop
adc
and
mov
or
adc
inc
cmp
das
jmp
adc
adc
sahf
jb
mull
dec
test
push
fildl
adc
jns
daa
and
mov
jne
mov
add
test
xor
fldl
ds
cli
jp
iret
mov
jmp
mov
fists
sbb
fistpl
ret
adc
xor
repz
xchg
and
push
push
xchg
mov
pop
xchg
orl
jp
enter
push
xrelease
subb
jp
stos
push
add
fs
pop
fcmovnu
in
cmp
call
adc
ds
jg
ja
cmova
jns
dec
pop
fwait
mov
pop
ffreep
loopne
push
xchg
out
or
jno
mov
pop
lea
jbe
mov
test
or
mov
push
cs
xorl
pusha
add
adc
not
mov
enter
mov
orl
and
outsb
pop
inc
pop
nop
xchg
test
lods
mov
shlb
and
pop
test
dec
and
leave
outsl
ss
sti
fcomps
mov
or
dec
imul
jae
out
adc
cmp
aas
addr16
imul
stos
lret
les
out
add
stos
loope
jle
mov
arpl
push
push
ljmp
popf
jo
test
mov
mov
loope
xchg
adc
mov
xor
movsb
out
inc
in
loope
jge
xchg
adc
notb
fcoml
jg
insl
push
in
test
movsl
push
xchg
xorb
pop
push
loopne
daa
xor
jno
cmpsb
test
enter
jle
jbe
push
sub
jge
fwait
jle
mov
xchg
jo
pop
mov
jno
scas
test
rcll
popa
stos
stc
loop
mov
daa
jnp
mov
pop
orl
pop
das
push
cmp
loopne
loop
pop
push
dec
ss
fcomps
jo
sub
xor
test
das
cmc
push
sbb
testb
dec
adc
and
and
cmp
mul
in
sub
push
call
jmp
adc
xor
lea
pushf
out
shll
push
push
shl
and
dec
jo
jb
jno
sarb
flds
push
sub
jbe
xor
pop
idivb
ficoms
pop
leave
imul
sub
repnz
pop
pop
sahf
in
inc
fldt
scas
pushf
jbe
add
loop
dec
dec
xchg
fistpl
cmp
ljmp
dec
inc
adc
lods
or
in
cmp
shll
sbb
jno
push
pop
fimuls
push
cwtl
lds
xchg
mov
call
test
test
lea
sub
out
fsubrl
adc
pop
int
test
enter
jge
test
lods
mov
adc
xlat
cs
lret
mov
mov
repz
pushf
mov
std
jp
cmp
jge
xchg
mov
test
inc
jae
fidivs
jb
cli
jle
xchg
and
sbb
mov
xchg
inc
cmp
lods
into
in
lods
pop
mov
xor
nop
negb
movsl
push
cs
xorl
pusha
add
adc
not
mov
enter
mov
orl
and
outsb
pop
inc
pop
nop
xchg
test
lods
mov
shlb
and
pop
test
dec
and
leave
outsl
ss
sti
fcomps
mov
or
dec
imul
jae
out
adc
cmp
aas
addr16
imul
stos
lret
les
out
add
stos
loope
jle
mov
arpl
push
push
ljmp
popf
jo
test
mov
mov
loope
xchg
adc
mov
xor
movsb
out
inc
in
loope
jge
xchg
adc
notb
fcoml
jg
insl
push
in
test
movsl
push
xchg
xorb
pop
push
loopne
daa
xor
jno
cmpsb
test
enter
jle
jbe
push
sub
jge
fwait
jle
mov
xchg
jo
pop
mov
jno
scas
test
rcll
popa
stos
stc
loop
mov
daa
jnp
mov
pop
orl
pop
das
push
cmp
loopne
loop
pop
push
dec
ss
fcomps
jo
sub
xor
test
das
cmc
push
sbb
testb
dec
adc
and
and
cmp
mul
in
sub
push
call
jmp
adc
xor
lea
pushf
out
shll
push
push
shl
and
dec
jo
jb
jno
sarb
flds
push
sub
jbe
xor
pop
idivb
ficoms
pop
leave
imul
sub
repnz
pop
pop
sahf
in
inc
fldt
scas
pushf
jbe
add
loop
dec
dec
xchg
fistpl
cmp
ljmp
dec
inc
adc
lods
or
in
cmp
shll
sbb
jno
push
pop
fimuls
push
cwtl
lds
xchg
mov
call
test
test
lea
sub
out
fsubrl
adc
pop
int
test
enter
jge
test
lods
mov
adc
xlat
cs
lret
mov
mov
repz
pushf
mov
std
jp
cmp
jge
xchg
mov
test
inc
jae
fidivs
jb
cli
jle
xchg
and
sbb
mov
xchg
inc
cmp
lods
into
in
lods
pop
mov
xchg
lods
stos
loope
arpl
jbe
or
out
lcall
sub
pusha
push
push
mov
jle
pop
das
pop
sar
sbb
dec
jne
xor
mov
pusha
adc
cmp
movsb
sarl
jo
adc
cld
mov
dec
test
cmp
out
push
test
and
js
enter
mov
push
test
inc
add
cmp
rcr
das
lds
enter
dec
mov
inc
pop
into
xor
xor
pop
pop
push
and
jge
or
add
push
pop
data16
jp
sub
ffree
mov
test
int3
adc
ret
pop
arpl
stos
arpl
xor
pop
gs
inc
xor
in
xor
bound
cmp
xchg
inc
in
cmc
jo
js
fimull
push
decl
sti
out
sbb
ret
pop
mov
dec
push
aaa
push
fwait
not
cli
sub
adc
ret
mov
pop
test
imul
imul
xchg
pop
test
int
iret
jecxz
dec
int3
cmpsb
ljmp
mov
mov
fldenv
adc
outsl
cmp
or
inc
adc
fildl
cs
addr16
sbb
or
cmp
xor
dec
scas
adc
dec
loopne
mov
push
add
stos
fwait
sahf
stc
adc
mov
xor
inc
mov
in
pop
sub
stos
mov
ror
xchg
cmc
push
push
jle
pop
adc
jo
scas
andb
lds
imul
stos
pop
dec
xchg
fwait
sbb
leave
das
or
mov
loopne
jbe
ljmp
jge
sub
cmp
clc
sub
cmp
pop
mov
mov
dec
mov
mov
sbb
dec
lock
cs
mov
mov
inc
sub
mov
add
xchg
lret
or
rolb
mov
push
sub
push
in
loop
jb
pop
sbb
pop
hlt
sarl
xor
mov
mov
fnsave
sbb
mov
in
idiv
insb
xchg
fbld
jecxz
mov
push
xor
and
loopne
mov
or
and
cmp
mov
push
int
or
ret
outsb
scas
iret
push
xor
mov
leave
lcall
shld
mov
push
jb
xor
mov
pop
pop
leave
insl
pop
mov
fimuls
jb
and
mov
mov
rdpmc
in
ljmp
arpl
sub
mov
mov
pop
pop
mov
outsl
loope
inc
mov
sbb
in
orl
movsb
lcall
sub
pusha
push
push
mov
jle
pop
das
pop
sar
sbb
dec
jne
xor
mov
pusha
adc
cmp
movsb
sarl
jo
adc
cld
mov
dec
test
cmp
out
push
test
and
js
enter
mov
push
test
inc
add
cmp
rcr
das
lds
enter
dec
mov
inc
pop
into
xor
xor
pop
pop
push
and
jge
or
add
push
pop
data16
jp
sub
ffree
mov
test
int3
adc
ret
pop
arpl
stos
arpl
xor
pop
gs
inc
xor
in
xor
bound
cmp
xchg
inc
in
cmc
jo
js
fimull
push
decl
sti
out
sbb
ret
pop
mov
dec
push
aaa
push
fwait
not
cli
sub
adc
ret
mov
pop
test
imul
imul
xchg
pop
test
int
iret
jecxz
dec
int3
cmpsb
ljmp
mov
mov
fldenv
adc
outsl
cmp
or
inc
adc
fildl
cs
addr16
sbb
or
cmp
xor
dec
scas
adc
dec
loopne
mov
push
add
stos
fwait
sahf
stc
adc
mov
xor
inc
mov
in
pop
sub
stos
mov
ror
xchg
cmc
push
push
jle
pop
adc
jo
scas
andb
lds
imul
stos
pop
dec
xchg
fwait
sbb
leave
das
or
mov
loopne
jbe
ljmp
jge
sub
cmp
clc
sub
cmp
pop
mov
mov
dec
mov
mov
sbb
dec
lock
cs
mov
mov
inc
sub
mov
add
xchg
lret
or
rolb
mov
push
sub
push
in
loop
jb
pop
sbb
pop
hlt
sarl
xor
mov
mov
fnsave
sbb
mov
in
idiv
insb
xchg
fbld
jecxz
mov
push
xor
and
loopne
mov
or
and
cmp
mov
push
int
or
ret
outsb
scas
iret
push
xor
mov
leave
lcall
shld
mov
push
jb
xor
mov
pop
pop
leave
insl
pop
mov
fimuls
jb
and
mov
mov
rdpmc
in
ljmp
arpl
sub
mov
mov
pop
pop
mov
outsl
loope
inc
mov
pusha
lods
iret
adcb
adc
or
mov
test
out
cmp
pop
xchg
xchg
cmp
sbb
fcos
mov
ljmp
pop
mov
mov
lret
fwait
hlt
cmp
leave
je
movsl
xor
out
orl
dec
lds
xchg
adc
es
adc
mov
enter
rolb
or
sub
inc
push
jg
stos
or
sbb
sub
in
or
mov
addr16
xor
and
fcompl
hlt
dec
xorl
rorb
pushf
ret
std
and
jge
rolb
leave
nop
shrl
inc
shl
mov
xchg
add
cmpsl
xor
popf
sahf
add
std
aad
jne
mov
dec
lret
jb
jbe
sbb
xchg
in
mov
mov
mul
xchg
mov
push
fsubl
or
xchg
push
and
pop
repz
cli
lods
jbe
pop
inc
insb
pop
jmp
mov
mov
mov
xor
shrl
bound
mov
ret
sub
push
adc
int3
mov
es
cmp
mov
mov
mov
ljmp
xor
sarb
pusha
in
test
adc
and
movsb
sub
loopne
aam
or
and
rcl
fs
nop
mov
jo
sbb
xor
dec
movsb
pop
testl
fstpl
and
sbb
outsb
icebp
fbld
xchg
in
dec
add
xor
jmp
cli
pop
jmp
mov
test
idivb
pop
or
clc
xor
mov
add
pop
xchg
dec
sub
xor
out
in
test
xchg
push
dec
xchg
ss
addr16
push
xchg
mov
pop
push
cmp
sarl
jne
stc
adc
cmpsl
in
and
mov
xchg
or
ja
sub
aad
mov
fld
stos
test
aad
cmc
mov
hlt
xchg
mov
sub
test
dec
cmpsl
out
fwait
mov
dec
idivl
aad
inc
and
sbb
das
jns
stos
xor
mov
adc
jle
jne
sbb
insb
or
sub
notb
pop
movsb
pop
lcall
stos
loop
call
sbb
jge
pop
insb
lret
mov
lods
iret
adcb
adc
or
mov
test
out
cmp
pop
xchg
xchg
cmp
sbb
fcos
mov
ljmp
pop
mov
mov
lret
fwait
hlt
cmp
leave
je
movsl
xor
out
orl
dec
lds
xchg
adc
es
adc
mov
enter
rolb
or
sub
inc
push
jg
stos
or
sbb
sub
in
or
mov
addr16
xor
and
fcompl
hlt
dec
xorl
rorb
pushf
ret
std
and
jge
rolb
leave
nop
shrl
inc
shl
mov
xchg
add
cmpsl
xor
popf
sahf
add
std
aad
jne
mov
dec
lret
jb
jbe
sbb
xchg
in
mov
mov
mul
xchg
mov
push
fsubl
or
xchg
push
and
pop
repz
cli
lods
jbe
pop
inc
insb
pop
jmp
mov
mov
mov
xor
shrl
bound
mov
ret
sub
push
adc
int3
mov
es
cmp
mov
mov
mov
ljmp
xor
sarb
pusha
in
test
adc
and
movsb
sub
loopne
aam
or
and
rcl
fs
nop
mov
jo
sbb
xor
dec
movsb
pop
testl
fstpl
and
sbb
outsb
icebp
fbld
xchg
in
dec
add
xor
jmp
cli
pop
jmp
mov
test
idivb
pop
or
clc
xor
mov
add
pop
xchg
dec
sub
xor
out
in
test
xchg
push
dec
xchg
ss
addr16
push
xchg
mov
pop
push
cmp
sarl
jne
stc
adc
cmpsl
in
and
mov
xchg
or
ja
sub
aad
mov
fld
stos
test
aad
cmc
mov
hlt
xchg
mov
sub
test
dec
cmpsl
out
fwait
mov
dec
idivl
aad
inc
and
sbb
das
jns
stos
xor
mov
adc
jle
jne
sbb
insb
or
sub
notb
pop
movsb
pop
lcall
stos
loop
call
sbb
jge
pop
insb
lret
mov
sti
shl
lock
dec
and
inc
cltd
cmp
dec
ja
dec
sbb
push
in
jmp
sub
int3
sbb
test
es
and
dec
xchg
leave
push
stos
pop
int3
mov
outsl
jns
aas
adc
inc
jecxz
push
adc
pop
push
daa
int
pop
nop
xor
cmp
fimull
in
mov
movsb
mov
es
cwtl
ja
bound
push
and
out
and
or
lahf
sub
sahf
xchg
xor
inc
fstpt
xchg
lds
fcoms
stos
incl
out
add
test
lods
fisubs
data16
dec
sbb
xchg
pusha
inc
xor
fs
pmaxsw
test
xchg
xchg
mov
cltd
mov
jle
daa
sbb
outsl
insl
cmpsb
mov
cwtl
in
lcall
pusha
sub
lret
dec
xchg
add
adc
setbe
dec
mov
mov
out
and
and
frstor
add
cmp
mov
mov
dec
dec
sahf
popf
shll
xchg
es
cmpsb
rcrb
xchg
cli
addr16
push
jae
pop
daa
out
mov
mov
jns
addr16
outsl
popf
add
jne
dec
fmuls
jae
mov
xor
sub
jmp
inc
mov
gs
cmc
xchg
sub
xor
ret
or
inc
mov
push
leave
cmp
cmpsb
cmp
jl
cmp
icebp
lds
xor
jp
add
push
cmpb
push
add
dec
addr16
in
in
test
lds
ja
add
test
out
push
enter
push
dec
mov
insb
jae
repnz
adc
and
mov
xlat
mov
cltd
stos
mov
je
andb
scas
xorb
mov
xorb
push
mov
xor
jo
rorb
int
mov
and
pop
xchg
and
push
rcrb
adc
sub
orb
in
movsb
jae
inc
movb
bound
fs
cmpsb
out
lods
in
dec
jne
cmp
lret
ja,pt
mov
rorl
cmp
psubsw
mov
pop
xchg
divb
call
decl
mov
mov
mov
xchg
iret
imul
gs
mov
cmp
cmpsb
ret
or
jo
mov
or
xor
pop
mov
cwtl
fldcw
loope
xchg
fs
icebp
lds
rorl
icebp
in
or
mov
add
dec
aaa
out
hlt
sub
ret
mov
mov
lea
mov
mov
and
outsb
flds
xchg
push
adcb
jg
push
add
mov
push
out
or
jecxz
mov
push
jbe
add
sbb
rorb
sbb
inc
out
fcmovbe
stos
add
dec
in
cs
sbb
adc
je
js
jne
lods
gs
mov
or
and
dec
and
inc
cltd
cmp
dec
ja
dec
sbb
push
in
jmp
sub
int3
sbb
test
es
and
dec
xchg
leave
push
stos
pop
int3
mov
outsl
jns
aas
adc
inc
jecxz
push
adc
pop
push
daa
int
pop
nop
xor
cmp
fimull
in
mov
movsb
mov
es
cwtl
ja
bound
push
and
out
and
or
lahf
sub
sahf
xchg
xor
inc
fstpt
xchg
lds
fcoms
stos
incl
out
add
test
lods
fisubs
data16
dec
sbb
xchg
pusha
inc
xor
fs
pmaxsw
test
xchg
xchg
mov
cltd
mov
jle
daa
sbb
outsl
insl
cmpsb
mov
cwtl
in
lcall
pusha
sub
lret
dec
xchg
add
adc
setbe
dec
mov
mov
out
and
and
frstor
add
cmp
mov
mov
dec
dec
sahf
popf
shll
xchg
es
cmpsb
rcrb
xchg
cli
addr16
push
jae
pop
daa
out
mov
mov
jns
addr16
outsl
popf
add
jne
dec
fmuls
jae
mov
xor
sub
jmp
inc
mov
gs
cmc
xchg
sub
xor
ret
or
inc
mov
push
leave
cmp
cmpsb
cmp
jl
cmp
icebp
lds
xor
jp
add
push
cmpb
push
add
dec
addr16
in
in
test
lds
ja
add
test
out
push
enter
push
dec
mov
insb
jae
repnz
adc
and
mov
xlat
mov
cltd
stos
mov
je
andb
scas
xorb
mov
xorb
push
mov
xor
jo
rorb
int
mov
and
pop
xchg
and
push
rcrb
adc
sub
orb
in
movsb
jae
inc
movb
bound
fs
cmpsb
out
lods
in
dec
jne
cmp
lret
ja,pt
mov
rorl
cmp
psubsw
mov
pop
xchg
divb
call
decl
mov
mov
mov
xchg
iret
imul
gs
mov
cmp
cmpsb
ret
or
jo
mov
or
xor
pop
mov
cwtl
fldcw
loope
xchg
fs
icebp
lds
rorl
icebp
in
or
mov
add
dec
aaa
out
hlt
sub
ret
mov
mov
lea
mov
mov
and
outsb
flds
xchg
push
adcb
jg
push
add
mov
push
out
or
jecxz
mov
push
jbe
add
sbb
rorb
sbb
inc
out
fcmovbe
stos
add
dec
in
cs
sbb
adc
je
js
jne
lods
gs
mov
mov
xchg
cmp
inc
mov
mov
mov
mov
sahf
mov
pop
call
dec
cmp
std
inc
les
inc
in
sub
jl
mov
cmp
xor
cmp
fldl
out
push
pusha
lds
mov
mov
lods
sbb
pop
hlt
rcl
sub
mov
xchg
out
bound
pop
sbb
push
in
lret
iret
cmp
pop
pop
cmp
movb
and
fimull
sbb
repnz
jne
loopne
inc
mov
lea
add
or
or
in
jmp
mov
imul
add
ret
fwait
adcl
iret
cmp
popa
je
lock
fstps
dec
shrb
inc
mov
es
and
ret
xchg
push
int3
xor
les
imul
ljmp
push
cmp
aaa
cmpsl
inc
inc
xchg
pushf
test
xor
bound
xchg
pop
outsb
inc
jp
push
or
jo
mov
mov
pop
dec
roll
mov
mov
sub
int3
cs
aaa
pop
push
pop
pop
in
call
scas
mov
test
int3
hlt
jb
mov
jnp
mov
cmp
fcompp
std
stos
jo
adc
xor
push
stos
jge
cmpsl
test
mov
movsl
mov
adc
imul
ret
mov
and
imul
stc
fs
out
stos
popf
roll
cmp
jp
clc
add
lea
inc
es
pop
in
xchg
insl
jg
pop
mov
lret
addr16
stc
dec
icebp
xlat
fwait
dec
xchg
pusha
out
xchg
leave
mov
hlt
cmp
jbe
add
lock
xchg
xchg
mov
stos
adc
mov
adc
mov
and
pop
leave
push
push
jge
jge
dec
ret
repz
nop
xchg
lretw
insl
test
lret
clc
sub
std
mov
mov
push
mov
mov
xchg
cmp
inc
mov
mov
mov
mov
sahf
mov
pop
call
dec
cmp
std
inc
les
inc
in
sub
jl
mov
cmp
xor
cmp
fldl
out
push
pusha
lds
mov
mov
lods
sbb
pop
hlt
rcl
sub
mov
xchg
out
bound
pop
sbb
push
in
lret
iret
cmp
pop
pop
cmp
movb
and
fimull
sbb
repnz
jne
loopne
inc
mov
lea
add
or
or
in
jmp
mov
imul
add
ret
fwait
adcl
iret
cmp
popa
je
lock
fstps
dec
shrb
inc
mov
es
and
ret
xchg
push
int3
xor
les
imul
ljmp
push
cmp
aaa
cmpsl
inc
inc
xchg
pushf
test
xor
bound
xchg
pop
outsb
inc
jp
push
or
jo
mov
mov
pop
dec
roll
mov
mov
sub
int3
cs
aaa
pop
push
pop
pop
in
call
scas
mov
test
int3
hlt
jb
mov
jnp
mov
cmp
fcompp
std
stos
jo
adc
xor
push
stos
jge
cmpsl
test
mov
movsl
mov
adc
imul
ret
mov
and
imul
stc
fs
out
stos
popf
roll
cmp
jp
clc
add
lea
inc
es
pop
in
xchg
insl
jg
pop
mov
lret
addr16
stc
dec
icebp
xlat
fwait
dec
xchg
pusha
out
xchg
leave
mov
hlt
cmp
jbe
add
lock
xchg
xchg
mov
stos
adc
mov
adc
mov
and
pop
leave
push
push
jge
jge
dec
ret
repz
nop
xchg
lretw
insl
test
lret
clc
sub
std
mov
mov
push
mov
inc
cmp
and
cld
cmp
mov
test
pop
insb
xchg
cmc
stc
jmp
and
insl
lret
inc
push
inc
es
xor
bound
cmp
xor
sbb
inc
decb
cmp
loopne
xchg
and
jbe
mov
gs
insb
push
cmp
mov
stos
aad
jmp
lods
or
cmp
adc
jl
sbb
mov
mov
xchg
sbb
jmp
and
sbb
push
and
in
dec
scas
movsb
stc
or
xchg
jp
xor
loopne
mov
xor
mov
jnp
setle
and
push
xlat
jecxz
xchg
pop
pop
fs
fstpl
mov
dec
data16
cmc
lods
and
sbb
cs
stos
inc
fmul
cmp
sti
push
popa
jl
add
mov
andl
outsb
pop
les
mov
push
mov
mov
daa
out
xchg
sbb
js
scas
outsl
fimuls
insl
imul
sub
mov
sbb
mov
dec
sbb
ret
mov
cltd
shll
movsl
pop
jmp
pop
inc
mov
outsb
out
push
out
or
sbb
push
sarl
jae
movsb
fcmovnbe
fs
sub
xchg
jecxz
xchg
pop
je
bound
outsl
call
sbb
and
insl
adc
jmp
dec
sti
mov
xor
add
cwtl
and
repz
inc
push
ds
pop
mov
jle
push
or
lods
mov
rcrl
push
rclb
sbb
icebp
add
mov
lds
push
inc
push
mov
arpl
cmp
xchg
je
xor
ss
cmpsl
imul
insb
and
jno
sub
add
ljmp
jb
xlat
push
fistpll
xchg
bound
mov
divl
or
pop
dec
into
adc
and
out
and
jecxz
sub
lock
in
lahf
jg
psadbw
dec
xchg
nop
mov
xor
pop
mov
in
test
stos
pop
mov
jo
push
push
in
mov
mov
push
mov
sbb
jp
dec
jns
cmp
add
jge
cmp
sbb
push
fwait
add
aas
mov
xlat
call
shll
lret
bound
mov
push
icebp
mov
inc
push
push
iret
xchg
dec
js
lcall
push
fistps
xchg
jecxz
push
pushf
movsb
js
repz
ljmp
shlb
pop
mov
fimuls
sub
int3
call
dec
xor
or
mov
movsb
fmuls
xor
ficompl
xchg
pop
orb
in
jae
mov
popa
dec
les
hlt
ret
cmpsb
int3
adc
add
rorl
and
xchg
jne
out
lahf
aam
mov
sti
lock
repnz
xor
aaa
dec
and
jne
sbb
mov
mov
cmc
mov
lret
mov
mov
bound
add
cld
cmp
mov
test
pop
insb
xchg
cmc
stc
jmp
and
insl
lret
inc
push
inc
es
xor
bound
cmp
xor
sbb
inc
decb
cmp
loopne
xchg
and
jbe
mov
gs
insb
push
cmp
mov
stos
aad
jmp
lods
or
cmp
adc
jl
sbb
mov
mov
xchg
sbb
jmp
and
sbb
push
and
in
dec
scas
movsb
stc
or
xchg
jp
xor
loopne
mov
xor
mov
jnp
setle
and
push
xlat
jecxz
xchg
pop
pop
fs
fstpl
mov
dec
data16
cmc
lods
and
sbb
cs
stos
inc
fmul
cmp
sti
push
popa
jl
add
mov
andl
outsb
pop
les
mov
push
mov
mov
daa
out
xchg
sbb
js
scas
outsl
fimuls
insl
imul
sub
mov
sbb
mov
dec
sbb
ret
mov
cltd
shll
movsl
pop
jmp
pop
inc
mov
outsb
out
push
out
or
sbb
push
sarl
jae
movsb
fcmovnbe
fs
sub
xchg
jecxz
xchg
pop
je
bound
outsl
call
sbb
and
insl
adc
jmp
dec
sti
mov
xor
add
cwtl
and
repz
inc
push
ds
pop
mov
jle
push
or
lods
mov
rcrl
push
rclb
sbb
icebp
add
mov
lds
push
inc
push
mov
arpl
cmp
xchg
je
xor
ss
cmpsl
imul
insb
and
jno
sub
add
ljmp
jb
xlat
push
fistpll
xchg
bound
mov
divl
or
pop
dec
into
adc
and
out
and
jecxz
sub
lock
in
lahf
jg
psadbw
dec
xchg
nop
mov
xor
pop
mov
in
test
stos
pop
mov
jo
push
push
in
mov
mov
push
mov
sbb
jp
dec
jns
cmp
add
jge
cmp
sbb
push
fwait
add
aas
mov
xlat
call
shll
lret
bound
mov
push
icebp
mov
inc
push
push
iret
xchg
dec
js
lcall
push
fistps
xchg
jecxz
push
pushf
movsb
js
repz
ljmp
shlb
pop
mov
fimuls
sub
int3
call
dec
xor
or
mov
movsb
fmuls
xor
ficompl
xchg
pop
orb
in
jae
mov
popa
dec
les
hlt
ret
cmpsb
int3
adc
add
rorl
and
xchg
jne
out
lahf
aam
mov
sti
lock
repnz
xor
aaa
dec
and
jne
sbb
mov
mov
cmc
mov
lret
mov
mov
bound
test
mov
or
xor
adc
and
add
std
gs
xchg
xor
movsl
add
push
and
jbe
mov
xchg
sbbb
pop
icebp
test
push
add
fbld
pusha
xor
fwait
cmp
xchg
jg
mov
popa
notl
mov
pop
lahf
scas
push
cs
into
or
aad
pop
and
inc
dec
dec
and
push
cmp
out
cmp
insl
mov
pop
dec
fcmovnu
and
insl
outsb
xor
xorl
cld
xor
fisubl
jno
cmp
fmull
jecxz
lods
sbb
imul
push
in
push
cmpsb
jl
stc
dec
mov
sub
stos
dec
fcmovu
jnp
imul
cld
out
pop
jle
xchg
jmp
jg
stos
inc
push
and
lods
fimull
aad
mov
mov
push
inc
mov
add
add
sbb
insl
std
push
adc
aad
pop
xor
int
or
or
jmp
jp
sahf
xchg
test
das
push
and
dec
cmp
mov
jnp
sti
dec
push
scas
clc
jb
hlt
push
imul
cld
cmp
mov
gs
stos
popf
jle
or
cmp
fst
xlat
mov
pusha
popf
mov
dec
pop
xchg
push
pmuludq
lock
xchg
outsl
xchg
push
mov
call
pop
sub
clc
sbb
scas
mov
aam
mov
and
xor
mov
test
mov
ljmp
loopne
sti
adc
pop
push
xor
mov
and
fbstp
adc
shl
imull
push
jo
je
adc
std
sbb
loope
movsl
add
add
or
or
jp
mov
std
inc
xchg
pop
cs
xor
dec
insl
inc
inc
enter
insb
gs
int3
test
mov
or
xor
adc
and
add
std
gs
xchg
xor
movsl
add
push
and
jbe
mov
xchg
sbbb
pop
icebp
test
push
add
fbld
pusha
xor
fwait
cmp
xchg
jg
mov
popa
notl
mov
pop
lahf
scas
push
cs
into
or
aad
pop
and
inc
dec
dec
and
push
cmp
out
cmp
insl
mov
pop
dec
fcmovnu
and
insl
outsb
xor
xorl
cld
xor
fisubl
jno
cmp
fmull
jecxz
lods
sbb
imul
push
in
push
cmpsb
jl
stc
dec
mov
sub
stos
dec
fcmovu
jnp
imul
cld
out
pop
jle
xchg
jmp
jg
stos
inc
push
and
lods
fimull
aad
mov
mov
push
inc
mov
add
add
sbb
insl
std
push
adc
aad
pop
xor
int
or
or
jmp
jp
sahf
xchg
test
das
push
and
dec
cmp
mov
jnp
sti
dec
push
scas
clc
jb
hlt
push
imul
cld
cmp
mov
gs
stos
popf
jle
or
cmp
fst
xlat
mov
pusha
popf
mov
dec
pop
xchg
push
pmuludq
lock
xchg
outsl
xchg
push
mov
call
pop
sub
clc
sbb
scas
mov
aam
mov
and
xor
mov
test
mov
ljmp
loopne
sti
adc
pop
push
xor
mov
and
fbstp
adc
shl
imull
push
jo
je
adc
std
sbb
loope
movsl
add
add
or
or
jp
mov
std
inc
xchg
pop
cs
xor
dec
insl
inc
inc
enter
sbbb
repz
push
movsl
fmul
mov
xchg
lds
jle
xor
inc
ja
gs
pop
xchg
dec
jo
in
push
fsubrl
jb
cli
inc
into
xor
insb
xchg
das
roll
rol
fwait
aam
or
lcall
mov
xchg
lcall
lret
cs
lods
mov
and
cmp
imul
fs
pusha
jne
sbb
push
paddsw
adc
xchg
cmp
cmp
mov
mov
sarb
push
mov
mov
outsl
out
imul
fwait
push
or
repnz
addb
ret
es
jo
and
sbb
mov
mov
jl
push
adc
rclb
push
aam
mov
and
insl
or
clc
push
sub
lahf
aaa
pop
pop
mov
out
sub
inc
push
out
dec
clc
repnz
loop
adc
add
sbb
jl
lods
loop
enter
add
enter
xchg
jnp
cld
test
lods
mov
dec
add
inc
addr16
adcl
or
cmp
and
addps
mov
in
vpaddusb
ds
sarl
sbb
cmp
push
add
xor
lret
inc
imul
gs
mov
sbb
mov
imul
cmc
addb
iret
adcl
sti
dec
push
adcb
fs
into
mov
imul
inc
mov
addr16
addl
jo
dec
dec
adc
jo
out
lcall
outsl
inc
add
adc
mov
push
mov
ret
insb
loope
cs
add
mov
fldenv
mov
mov
and
jnp
adc
or
rorl
repnz
dec
add
arpl
xor
jo
int
add
push
dec
data16
test
out
pop
insl
test
push
mov
dec
or
stc
std
and
inc
mov
xchg
cld
and
mov
add
lahf
ret
or
mov
mov
ret
sub
push
dec
jae
ss
xor
lcall
xchg
adc
pop
cmp
push
int
dec
adc
sub
lret
aaa
mov
pushf
cmpsb
pop
aas
int3
imul
inc
aad
clc
fnsave
scas
sub
xor
mov
or
pop
push
xchg
lods
sbb
xchg
mov
jmp
dec
mov
cmp
js
jns
bound
pop
fmuls
insb
and
loop
sub
cmp
notb
aaa
jnp
int3
dec
xchg
cmpsl
rorb
pushl
sub
cmp
out
pop
je
push
shlb
repz
gs
jg
sub
aas
rorb
cmp
imul
imul
xor
add
ficoml
iret
cmp
xchg
push
inc
mov
lea
cmp
jecxz
sbb
iret
xlat
xchg
mov
pop
mov
inc
sub
insb
lock
dec
adc
inc
frstor
dec
sbbl
test
cmc
pop
idivl
sub
sub
stc
inc
sbb
aad
insb
and
clc
sbbb
repz
push
movsl
fmul
mov
xchg
lds
jle
xor
inc
ja
gs
pop
xchg
dec
jo
in
push
fsubrl
jb
cli
inc
into
xor
insb
xchg
das
roll
rol
fwait
aam
or
lcall
mov
xchg
lcall
lret
cs
lods
mov
and
cmp
imul
fs
pusha
jne
sbb
push
paddsw
adc
xchg
cmp
cmp
mov
mov
sarb
push
mov
mov
outsl
out
imul
fwait
push
or
repnz
addb
ret
es
jo
and
sbb
mov
mov
jl
push
adc
rclb
push
aam
mov
and
insl
or
clc
push
sub
lahf
aaa
pop
pop
mov
out
sub
inc
push
out
dec
clc
repnz
loop
adc
add
sbb
jl
lods
loop
enter
add
enter
xchg
jnp
cld
test
lods
mov
dec
add
inc
addr16
adcl
or
cmp
and
addps
mov
in
vpaddusb
ds
sarl
sbb
cmp
push
add
xor
lret
inc
imul
gs
mov
sbb
mov
imul
cmc
addb
iret
adcl
sti
dec
push
adcb
fs
into
mov
imul
inc
mov
addr16
addl
jo
dec
dec
adc
jo
out
lcall
outsl
inc
add
adc
mov
push
mov
ret
insb
loope
cs
add
mov
fldenv
mov
mov
and
jnp
adc
or
rorl
repnz
dec
add
arpl
xor
jo
int
add
push
dec
data16
test
out
pop
insl
test
push
mov
dec
or
stc
std
and
inc
mov
xchg
cld
and
mov
add
lahf
ret
or
mov
mov
ret
sub
push
dec
jae
ss
xor
lcall
xchg
adc
pop
cmp
push
int
dec
adc
sub
lret
aaa
mov
pushf
cmpsb
pop
aas
int3
imul
inc
aad
clc
fnsave
scas
sub
xor
mov
or
pop
push
xchg
lods
sbb
xchg
mov
jmp
dec
mov
cmp
js
jns
bound
pop
fmuls
insb
and
loop
sub
cmp
notb
aaa
jnp
int3
dec
xchg
cmpsl
rorb
pushl
sub
cmp
out
pop
je
push
shlb
repz
gs
jg
sub
aas
rorb
cmp
imul
imul
xor
add
ficoml
iret
cmp
xchg
push
inc
mov
lea
cmp
jecxz
sbb
iret
xlat
xchg
mov
pop
mov
inc
sub
insb
lock
dec
adc
inc
frstor
dec
sbbl
test
cmc
pop
idivl
sub
sub
stc
inc
sbb
aad
insb
and
int3
outsb
xchg
push
cli
xchg
inc
cltd
stc
fmulp
inc
dec
in
cmpsb
mov
mov
mov
nop
scas
mov
xor
cmpsb
xorb
aaa
push
jno
sbb
outsb
shr
cld
in
mov
fmul
ja
sub
out
pop
add
add
inc
add
ja
subl
fwait
mov
push
dec
pop
mov
subb
cs
lahf
mov
pop
es
mov
mov
pop
fnstcw
loopne
insl
daa
fldenv
push
mov
cmp
push
rcrb
fcomps
xorb
pop
jb
ret
mov
popf
push
fcomps
mov
insb
lahf
roll
in
dec
jae
cmp
scas
jmp
sbb
loope
xor
xor
sbb
aas
add
or
sbb
pusha
sbb
push
es
mov
xlat
push
sbb
jbe
add
aas
fldt
push
scas
andl
mov
aaa
pop
nop
push
inc
int3
and
insb
mov
cld
sbb
je
xchg
mov
sub
adc
je
lods
dec
xor
insb
iret
cmp
iret
pop
popl
shl
sbb
inc
pop
adc
mov
imul
inc
or
pop
pusha
and
iret
test
hlt
jle
mov
repnz
cmpsb
sub
xchg
icebp
testl
jae
lcall
arpl
jle
test
cmc
pop
hlt
mov
sbb
mov
or
push
xchg
popa
sub
sub
sbb
dec
addb
mov
pop
jmp
stos
arpl
filds
lahf
int
outsb
xchg
push
cli
xchg
inc
cltd
stc
fmulp
inc
dec
in
cmpsb
mov
mov
mov
nop
scas
mov
xor
cmpsb
xorb
aaa
push
jno
sbb
outsb
shr
cld
in
mov
fmul
ja
sub
out
pop
add
add
inc
add
ja
subl
fwait
mov
push
dec
pop
mov
subb
cs
lahf
mov
pop
es
mov
mov
pop
fnstcw
loopne
insl
daa
fldenv
push
mov
cmp
push
rcrb
fcomps
xorb
pop
jb
ret
mov
popf
push
fcomps
mov
insb
lahf
roll
in
dec
jae
cmp
scas
jmp
sbb
loope
xor
xor
sbb
aas
add
or
sbb
pusha
sbb
push
es
mov
xlat
push
sbb
jbe
add
aas
fldt
push
scas
andl
mov
aaa
pop
nop
push
inc
int3
and
insb
mov
cld
sbb
je
xchg
mov
sub
adc
je
lods
dec
xor
insb
iret
cmp
iret
pop
popl
shl
sbb
inc
pop
adc
mov
imul
inc
or
pop
pusha
and
iret
test
hlt
jle
mov
repnz
cmpsb
sub
xchg
icebp
testl
jae
lcall
arpl
jle
test
cmc
pop
hlt
mov
sbb
mov
or
push
xchg
popa
sub
sub
sbb
dec
addb
mov
pop
jmp
stos
arpl
filds
lahf
int
mov
je
int
mov
insl
jg
cmp
aad
das
mov
jb
mov
sub
push
out
dec
subb
cmp
nop
add
shll
jb
jmp
int3
cmp
pop
inc
mov
sub
inc
adc
sbb
out
mov
mov
add
push
ljmp
outsb
call
jge
stc
mov
stos
jmp
aam
repz
and
repnz
js
cwtl
pop
cmp
mov
loop
xor
dec
gs
ret
mov
test
out
sbb
sbb
dec
jp
les
lahf
iret
adc
jbe
add
inc
les
mov
sbb
push
pop
outsb
je
sbb
or
sbb
xor
xchg
cld
cmp
dec
and
fisttps
mov
aam
fwait
repnz
push
adc
push
inc
rorl
push
hlt
sub
sbb
fcomip
mov
jle
xchg
pop
or
enter
mov
mov
push
clc
sub
sbb
sbb
xchg
mov
push
xchg
pop
dec
push
jmp
hlt
in
mov
mov
jmp
idiv
sbb
out
sbb
jp
add
mov
sbb
repnz
ret
popf
call
xchg
gs
sub
pop
rcrl
loope
mov
and
and
dec
data16
dec
mov
int3
sbb
xchg
dec
mov
jb
pop
repz
je
aam
mov
in
repz
aam
sbb
scas
fdiv
inc
lret
xchg
ret
les
pcmpgtw
sub
mov
lret
aaa
fs
push
mov
sbb
inc
adcb
or
scas
data16
xchg
ret
mov
imul
popa
in
arpl
test
mov
lret
insb
sarb
jbe
xchg
shl
push
repz
push
jae
ljmp
pop
mov
push
sbbb
cmp
inc
out
fmuls
xchg
cmp
fsubrs
inc
push
and
adc
enter
dec
arpl
lret
dec
fcmovb
pop
addl
mov
sahf
sahf
sbb
add
and
sbb
sub
push
add
inc
push
adc
push
fistpll
test
add
ret
fadd
hlt
add
movsb
inc
jecxz
or
loop
mov
sbb
xchg
cmp
push
lahf
sbb
in
cwtl
testb
xchg
dec
jne
je
rorb
lods
in
popf
sti
lea
arpl
call
cmp
push
pop
repz
in
jl
pop
cltd
pushf
scas
push
jnp
xor
sub
repnz
sub
push
sub
and
mov
sub
and
adc
xchg
jbe
lock
ret
inc
or
cmp
add
lods
xlat
sbb
stc
ror
and
push
outsb
xor
xor
out
xchg
in
or
je
pop
fstl
notb
mov
jge
jmp
xchg
adc
add
sbb
ja
push
mov
enter
xlat
mov
imul
ret
into
sbb
clc
and
inc
dec
pop
test
mov
push
push
push
xchg
daa
movsb
pop
xchg
mov
cmp
dec
sub
leave
cmp
imul
cmp
inc
lea
push
push
push
inc
or
lock
jge
jnp
mov
out
mov
ds
push
jp
fcmove
dec
mov
je
int
mov
insl
jg
cmp
aad
das
mov
jb
mov
sub
push
out
dec
subb
cmp
nop
add
shll
jb
jmp
int3
cmp
pop
inc
mov
sub
inc
adc
sbb
out
mov
mov
add
push
ljmp
outsb
call
jge
stc
mov
stos
jmp
aam
repz
and
repnz
js
cwtl
pop
cmp
mov
loop
xor
dec
gs
ret
mov
test
out
sbb
sbb
dec
jp
les
lahf
iret
adc
jbe
add
inc
les
mov
sbb
push
pop
outsb
je
sbb
or
sbb
xor
xchg
cld
cmp
dec
and
fisttps
mov
aam
fwait
repnz
push
adc
push
inc
rorl
push
hlt
sub
sbb
fcomip
mov
jle
xchg
pop
or
enter
mov
mov
push
clc
sub
sbb
sbb
xchg
mov
push
xchg
pop
dec
push
jmp
hlt
in
mov
mov
jmp
idiv
sbb
out
sbb
jp
add
mov
sbb
repnz
ret
popf
call
xchg
gs
sub
pop
rcrl
loope
mov
and
and
dec
data16
dec
mov
int3
sbb
xchg
dec
mov
jb
pop
repz
je
aam
mov
in
repz
aam
sbb
scas
fdiv
inc
lret
xchg
ret
les
pcmpgtw
sub
mov
lret
aaa
fs
push
mov
sbb
inc
adcb
or
scas
data16
xchg
ret
mov
imul
popa
in
arpl
test
mov
lret
insb
sarb
jbe
xchg
shl
push
repz
push
jae
ljmp
pop
mov
push
sbbb
cmp
inc
out
fmuls
xchg
cmp
fsubrs
inc
push
and
adc
enter
dec
arpl
lret
dec
fcmovb
pop
addl
mov
sahf
sahf
sbb
add
and
sbb
sub
push
add
inc
push
adc
push
fistpll
test
add
ret
fadd
hlt
add
movsb
inc
jecxz
or
loop
mov
sbb
xchg
cmp
push
lahf
sbb
in
cwtl
testb
xchg
dec
jne
je
rorb
lods
in
popf
sti
lea
arpl
call
cmp
push
pop
repz
in
jl
pop
cltd
pushf
scas
push
jnp
xor
sub
repnz
sub
push
sub
and
mov
sub
and
adc
xchg
jbe
lock
ret
inc
or
cmp
add
lods
xlat
sbb
stc
ror
and
push
outsb
xor
xor
out
xchg
in
or
je
pop
fstl
notb
mov
jge
jmp
xchg
adc
add
sbb
ja
push
mov
enter
xlat
mov
imul
ret
into
sbb
clc
and
inc
dec
pop
test
mov
push
push
push
xchg
daa
movsb
pop
xchg
mov
cmp
dec
sub
leave
cmp
imul
cmp
inc
lea
push
push
push
inc
or
lock
jge
jnp
mov
out
mov
ds
push
jp
fcmove
cs
mov
fwait
cmp
cmpl
enter
jg
mov
std
dec
iret
xchg
add
mov
popa
push
pop
lock
loopne
adc
sbb
inc
sub
fisttpl
insl
pop
faddl
test
lahf
lds
xor
pusha
mov
dec
call
pop
sbb
dec
stos
bswap
sub
enter
xor
mov
push
loope
fldcw
divb
dec
repnz
add
xchg
scas
cmp
mov
mov
lods
adc
or
scas
insl
dec
lods
cmpsb
cs
xchg
lahf
std
pop
sbb
pop
inc
xchg
xlat
test
lcall
mov
xchg
xchg
orb
dec
xlat
cmp
and
hlt
data16
cmp
pop
xor
xchg
aad
pop
xchg
mov
fadds
mov
sub
in
daa
aad
and
outsl
fstl
push
mov
xchg
in
xchg
jno
push
repnz
mov
mov
jmp
add
add
fwait
scas
in
test
cmp
inc
cmp
das
imul
mov
fwait
and
adc
imul
subl
lods
loope
lahf
push
inc
sbb
jne
xor
pushf
jle
jle
outsb
mov
cmp
or
adc
xor
imul
scas
sbb
popf
leave
int
push
lock
pop
mov
inc
fwait
outsb
or
mov
xchg
ret
cs
mov
fwait
cmp
cmpl
enter
jg
mov
std
dec
iret
xchg
add
mov
popa
push
pop
lock
loopne
adc
sbb
inc
sub
fisttpl
insl
pop
faddl
test
lahf
lds
xor
pusha
mov
dec
call
pop
sbb
dec
stos
bswap
sub
enter
xor
mov
push
loope
fldcw
divb
dec
repnz
add
xchg
scas
cmp
mov
mov
lods
adc
or
scas
insl
dec
lods
cmpsb
cs
xchg
lahf
std
pop
sbb
pop
inc
xchg
xlat
test
lcall
mov
xchg
xchg
orb
dec
xlat
cmp
and
hlt
data16
cmp
pop
xor
xchg
aad
pop
xchg
mov
fadds
mov
sub
in
daa
aad
and
outsl
fstl
push
mov
xchg
in
xchg
jno
push
repnz
mov
mov
jmp
add
add
fwait
scas
in
test
cmp
inc
cmp
das
imul
mov
fwait
and
adc
imul
subl
lods
loope
lahf
push
inc
sbb
jne
xor
pushf
jle
jle
outsb
mov
cmp
or
adc
xor
imul
scas
sbb
popf
leave
int
push
lock
pop
mov
inc
fwait
outsb
or
mov
xchg
ret
jbe
inc
je
lds
test
in
loope
mov
std
pop
and
adc
shll
fsubrs
mov
addr16
in
daa
fistl
stos
cmp
lret
jo
xorb
mov
test
xchg
jbe
imul
push
lea
inc
sbb
and
orl
or
xchg
add
push
xchg
mov
pop
push
test
sub
aaa
lcall
mov
mov
orb
cmpsl
push
daa
lcall
pop
jbe
jl
popf
and
push
sbb
out
mov
mov
or
loopne
aas
out
bswap
movsb
sub
test
movsb
stos
cld
mov
hlt
pop
and
jp
mov
dec
jecxz
cltd
xchg
sbb
dec
nop
mov
xchg
lods
adc
cmp
adc
jne
lret
adc
xchg
mov
pop
pop
iret
push
repnz
scas
push
lahf
sbb
sbb
clc
fstl
xor
lret
mov
in
sti
test
je
add
icebp
repz
iret
ss
jecxz
jg
jmp
fistpll
mov
int
jo
cmp
lret
cmp
shll
dec
add
push
inc
mov
mov
mov
insb
push
test
or
leave
mov
arpl
cmpsl
mov
lea
pop
nop
dec
movsb
mov
arpl
add
cmp
fdivr
cwtl
test
jne
cmp
outsl
and
jecxz
mov
jg
cld
or
call
mov
or
test
stos
in
call
xchg
cs
sub
pushf
xor
test
nop
mov
xchg
jl
leave
nop
jbe
xor
addr16
dec
mov
adc
adc
ljmp
sarl
aas
pop
add
inc
jecxz
adc
pushf
lcall
mov
stc
inc
add
mov
or
sahf
out
je
fsubrp
adc
add
cmovae
div
subb
ds
pop
xlat
or
out
inc
jg
sbb
push
mov
fcomps
scas
push
mov
insb
mov
sbb
lahf
fldl
mov
add
jle
or
sub
jnp
mov
dec
cwtl
add
fucomp
lods
aaa
cld
inc
fsubrl
aaa
adc
outsl
push
or
jle
jge
xchg
dec
loop
inc
push
fldt
mov
out
in
xchg
rcll
cmpsb
cmpsl
rolb
pminub
push
cmp
mov
add
fsubrs
clc
xchg
das
push
cmpsl
sub
fcmovnb
call
test
and
dec
sbb
pop
scas
push
or
xor
pop
loope
jge
andb
mov
sbb
add
fdiv
mov
aas
shlb
jae
mov
and
xchg
ljmp
add
mov
arpl
mov
xchg
subl
insb
cs
maskmovq
divl
fsave
loope
xchg
mov
das
xchg
jl
ds
cmp
fisubrs
dec
fdivp
mov
aaa
out
jp
cmp
sub
test
push
mull
jl
xchg
test
dec
stos
pop
cwtl
movsb
imul
lds
sbb
and
sbb
add
out
loope
nop
cli
hlt
popf
stc
jo
test
mov
cmpsl
dec
outsb
mov
popf
enter
sbb
cmp
cmpsb
add
dec
lds
mov
int3
insb
addb
ljmp
mov
roll
std
inc
mov
in
loope
icebp
mov
xlat
jne
test
notb
sub
jbe
inc
je
lds
test
in
loope
mov
std
pop
and
adc
shll
fsubrs
mov
addr16
in
daa
fistl
stos
cmp
lret
jo
xorb
mov
test
xchg
jbe
imul
push
lea
inc
sbb
and
orl
or
xchg
add
push
xchg
mov
pop
push
test
sub
aaa
lcall
mov
mov
orb
cmpsl
push
daa
lcall
pop
jbe
jl
popf
and
push
sbb
out
mov
mov
or
loopne
aas
out
bswap
movsb
sub
test
movsb
stos
cld
mov
hlt
pop
and
jp
mov
dec
jecxz
cltd
xchg
sbb
dec
nop
mov
xchg
lods
adc
cmp
adc
jne
lret
adc
xchg
mov
pop
pop
iret
push
repnz
scas
push
lahf
sbb
sbb
clc
fstl
xor
lret
mov
in
sti
test
je
add
icebp
repz
iret
ss
jecxz
jg
jmp
fistpll
mov
int
jo
cmp
lret
cmp
shll
dec
add
push
inc
mov
mov
mov
insb
push
test
or
leave
mov
arpl
cmpsl
mov
lea
pop
nop
dec
movsb
mov
arpl
add
cmp
fdivr
cwtl
test
jne
cmp
outsl
and
jecxz
mov
jg
cld
or
call
mov
or
test
stos
in
call
xchg
cs
sub
pushf
xor
test
nop
mov
xchg
jl
leave
nop
jbe
xor
addr16
dec
mov
adc
adc
ljmp
sarl
aas
pop
add
inc
jecxz
adc
pushf
lcall
mov
stc
inc
add
mov
or
sahf
out
je
fsubrp
adc
add
cmovae
div
subb
ds
pop
xlat
or
out
inc
jg
sbb
push
mov
fcomps
scas
push
mov
insb
mov
sbb
lahf
fldl
mov
add
jle
or
sub
jnp
mov
dec
cwtl
add
fucomp
lods
aaa
cld
inc
fsubrl
aaa
adc
outsl
push
or
jle
jge
xchg
dec
loop
inc
push
fldt
mov
out
in
xchg
rcll
cmpsb
cmpsl
rolb
pminub
push
cmp
mov
add
fsubrs
clc
xchg
das
push
cmpsl
sub
fcmovnb
call
test
and
dec
sbb
pop
scas
push
or
xor
pop
loope
jge
andb
mov
sbb
add
fdiv
mov
aas
shlb
jae
mov
and
xchg
ljmp
add
mov
arpl
mov
xchg
subl
insb
cs
maskmovq
divl
fsave
loope
xchg
mov
das
xchg
jl
ds
cmp
fisubrs
dec
fdivp
mov
aaa
out
jp
cmp
sub
test
push
mull
jl
xchg
test
dec
stos
pop
cwtl
movsb
imul
lds
sbb
and
sbb
add
out
loope
nop
cli
hlt
popf
stc
jo
test
mov
cmpsl
dec
outsb
mov
popf
enter
sbb
cmp
cmpsb
add
dec
lds
mov
int3
insb
addb
ljmp
mov
roll
std
inc
mov
in
loope
icebp
mov
xlat
jne
test
notb
sub
xchg
cld
out
jns
jne
movsb
mov
jmp
xor
push
and
dec
lcall
or
sbb
mov
iret
and
lea
shlb
add
push
sbb
mov
pop
sbb
sbb
enter
mov
jl
dec
cmpsl
jmp
sub
pop
mov
pop
or
and
or
pop
lahf
pop
aam
mov
inc
int3
rcr
inc
ljmp
addr16
sub
lock
jl
sub
outsb
ljmp
aad
xchg
aaa
cmp
jmp
addr16
or
mov
jle
jg
fstpl
mov
inc
sbb
xor
es
shl
dec
ja
lock
sbb
add
outsl
inc
sarb
loopne
dec
fsubrl
flds
and
adc
movsl
dec
cmc
mov
in
add
push
mov
stos
inc
out
mov
inc
ss
cmp
jo
lea
std
ftst
dec
push
pop
cmp
subb
mov
sub
pop
jmp
sbb
cmp
dec
hlt
nop
fcmovnu
jl
fidivs
fimull
sbbl
arpl
pop
testb
sbb
add
adc
divl
jns
jne
movsb
mov
jmp
xor
push
and
dec
lcall
or
sbb
mov
iret
and
lea
shlb
add
push
sbb
mov
pop
sbb
sbb
enter
mov
jl
dec
cmpsl
jmp
sub
pop
mov
pop
or
and
or
pop
lahf
pop
aam
mov
inc
int3
rcr
inc
ljmp
addr16
sub
lock
jl
sub
outsb
ljmp
aad
xchg
aaa
cmp
jmp
addr16
or
mov
jle
jg
fstpl
mov
inc
sbb
xor
es
shl
dec
ja
lock
sbb
add
outsl
inc
sarb
loopne
dec
fsubrl
flds
and
adc
movsl
dec
cmc
mov
in
add
push
mov
stos
inc
out
mov
inc
ss
cmp
jo
lea
std
ftst
dec
push
pop
cmp
subb
mov
sub
pop
jmp
sbb
cmp
dec
hlt
nop
fcmovnu
jl
fidivs
fimull
sbbl
arpl
pop
testb
sbb
add
adc
divl
jb
push
mov
mov
pop
out
push
rcl
xor
out
jg
dec
js
imul
repz
xor
jl
dec
imul
mov
mov
pop
sbb
mov
in
ret
js
fs
out
addr16
push
and
jmp
xor
add
lea
or
mov
lods
jp
popa
inc
fwait
add
rcll
lea
out
stos
enter
push
incb
xor
lods
cmp
inc
ljmp
inc
xchg
cli
out
repnz
adc
stos
shrl
adc
in
push
je
imul
pop
rcl
inc
mov
pop
and
orl
mov
mov
fstpt
arpl
repnz
ret
xchg
adcl
jnp
loopne
pop
fdivrs
mov
xor
stos
scas
adc
cmp
xchg
push
and
cs
decl
cld
jnp
shlb
jmp
loope
pop
dec
push
dec
jecxz
gs
sar
jg
loope
pop
add
lret
sbb
push
mov
sub
jns
xchg
lahf
enter
pop
in
jae
and
pop
shrl
adc
dec
repnz
daa
mov
je
shll
add
mov
mov
lret
movsl
jl
sbbl
push
lock
std
push
call
sub
lret
repz
sub
jns
cmpsl
pop
push
rcrl
ja
int
add
xlat
dec
mov
in
stos
push
lock
shlb
inc
jmp
xchg
lret
imul
pop
out
ret
mov
mov
ss
stc
inc
mul
test
sub
imul
ret
divb
mov
sbb
ret
xchg
xor
fwait
add
iret
dec
icebp
jecxz
and
shlb
loop
xchg
hlt
or
adc
dec
shll
pop
mov
push
in
sub
or
add
in
mov
or
icebp
test
cmp
in
loop
fnstsw
lret
inc
lock
std
jo
test
jecxz
add
insl
loope
rorb
push
pop
sbb
mov
jns
call
adc
cltd
adcl
cmpsb
cmp
jg
sbb
iret
mov
pop
pop
inc
clc
add
pop
jno
fwait
test
cld
push
hlt
iret
sbb
cld
xchg
in
jbe
or
cmpsb
push
lock
loop
sahf
lods
push
shll
add
test
or
adc
dec
test
je
jmp
and
adc
imul
daa
and
jbe
aam
dec
in
sub
popa
sub
mov
cmp
lods
stos
das
js
jl
jae
cmp
mov
lret
and
add
jmp
or
ficomps
fnstsw
aad
cmpsl
int3
push
mov
in
cwtl
cmpl
lods
or
popf
jno
inc
cmp
movsb
xchg
sarb
sub
pop
cmp
lret
mov
aad
stos
ljmp
shl
xchg
fwait
or
mov
push
inc
or
hlt
or
shll
sahf
pop
sub
cmpl
in
clc
in
cmpsb
add
shr
xor
xchg
popf
inc
scas
or
aaa
or
adc
adc
hlt
jae
or
into
cmc
loop
movsl
sub
or
xchg
insl
movsb
pop
cmp
jnp
aam
mov
dec
sub
lods
or
mov
mov
mov
pop
inc
mov
lock
nop
xor
iret
int
mov
loop
aam
shlb
sbb
mov
xorl
dec
test
fwait
jbe
stos
popa
rorl
or
pushf
jnp
andb
xor
test
icebp
aas
mov
stos
mov
cmp
sub
cli
into
add
fimull
hlt
sub
lret
dec
lods
in
sahf
xchg
xchg
dec
in
lods
inc
push
xchg
popf
pop
xor
cmp
aaa
outsl
jle
mov
and
xor
jge
bound
or
cmp
mov
add
aad
cmp
rep
imul
push
xchg
mov
dec
subl
mov
add
iret
pop
pop
dec
shll
in
push
sub
mov
or
or
imul
filds
loop
stc
mov
adc
lds
inc
aas
mov
add
sub
out
push
pusha
out
sbb
fcmovnb
icebp
and
mov
mov
pop
lea
jnp
leave
add
xchg
repz
sti
subl
pop
pop
daa
mov
icebp
cltd
iret
aas
lret
in
inc
adc
push
enter
pop
or
iret
cs
movsl
mov
popf
fcomps
fsub
mov
adc
hlt
pop
xchg
rcrb
cmp
leave
ljmp
or
test
push
pop
and
insb
mov
pop
mov
xor
test
mov
pop
lret
adc
test
pop
inc
ret
xchg
pop
inc
subl
pop
lret
addr16
gs
and
xor
cmpsb
cltd
imul
cld
ret
mov
push
fidivl
in
mov
or
xor
mov
jne
push
jmp
sub
je
and
loopne
subb
sbb
std
cmp
adc
lret
jl
xchg
rorb
fdiv
ds
scas
xchg
pop
mov
mov
xchg
pop
pop
dec
xchg
cmc
cs
or
outsl
std
sbb
popa
dec
lock
pushf
test
les
ficoml
or
push
fdiv
aaa
mov
cmp
sub
in
fcmovnbe
mov
pusha
sub
ljmp
push
lea
mov
mov
out
lret
or
imul
mul
mov
push
xor
in
push
aam
pop
jno,pn
dec
mov
add
pop
jns
scas
hlt
dec
fldl
push
jp
out
stos
adc
inc
jae
xorl
xchg
andb
mov
xlat
enter
sub
adc
mov
fs
rorb
inc
pop
imul
jnp
in
sahf
ret
mov
js
mov
push
cli
push
rol
mov
mov
adcl
shll
or
out
push
mov
repnz
lret
sbb
sarl
fnstsw
jp
fdivr
add
popa
mov
sbb
xor
inc
jb
cmp
ret
jnp
cli
mov
inc
arpl
dec
cmp
into
sbb
sub
test
aad
rcrl
adc
cmp
dec
cmp
pop
flds
rclb
xchg
fs
call
push
jecxz
xor
pop
stos
test
scas
xchg
or
aaa
cmp
pop
lock
out
xchg
add
mov
push
cld
in
fldenv
pop
test
inc
test
js
mov
lea
inc
and
cwtl
pop
imul
xor
adc
add
aam
subl
out
xor
xchg
pop
sub
call
pop
cmp
scas
cmp
fcoml
mov
outsl
movl
mov
sub
jg
jmp
lea
aaa
add
pop
addr16
ret
xor
sbb
dec
mov
icebp
mov
in
loope
clc
imul
negb
cmp
cmp
mov
scas
mov
sahf
push
mov
dec
mov
inc
inc
out
ret
les
mov
mov
inc
add
ljmp
pop
push
jne
int
and
ss
js
frstor
sbb
adc
mov
sbb
fwait
js
mov
push
ret
jecxz
daa
mov
repz
arpl
xor
es
pop
push
sub
out
in
pop
mov
add
mov
push
pusha
loop
xchg
sti
jns
ja
test
xchg
ficompl
scas
daa
pop
lods
xchg
ret
sub
jge
xorb
mov
scas
test
movsl
filds
mov
rolb
mov
xchg
inc
push
scas
lods
inc
icebp
das
push
mov
test
mov
sub
test
pop
adc
jl
inc
and
mov
enter
stos
ss
nop
mov
inc
xchg
xor
pop
pushf
subl
repz
fninit
int
pxor
jnp
decb
pmuludq
pop
mov
inc
push
out
lahf
mov
dec
jp
mov
aaa
rcll
inc
in
call
inc
xor
stos
in
clc
insb
pop
hlt
ja
inc
fadds
ret
xor
inc
sbb
lds
out
xchg
inc
mov
cmp
pop
leave
imul
jns
clc
jge
xchg
das
pop
mull
jb
nop
clc
nop
ret
test
dec
pop
ds
es
cs
mov
into
push
mov
std
pop
insb
aam
sub
dec
sub
loop
leave
cwtl
xor
xor
test
mov
pop
lret
adc
test
pop
inc
ret
xchg
pop
inc
subl
pop
lret
addr16
gs
and
xor
cmpsb
cltd
imul
cld
ret
mov
push
fidivl
in
mov
or
xor
mov
jne
push
jmp
sub
je
and
loopne
subb
sbb
std
cmp
adc
lret
jl
xchg
rorb
fdiv
ds
scas
xchg
pop
mov
mov
xchg
pop
pop
dec
xchg
cmc
cs
or
outsl
std
sbb
popa
dec
lock
pushf
test
les
ficoml
or
push
fdiv
aaa
mov
cmp
sub
in
fcmovnbe
mov
pusha
sub
ljmp
push
lea
mov
mov
out
lret
or
imul
mul
mov
push
xor
in
push
aam
pop
jno,pn
dec
mov
add
pop
jns
scas
hlt
dec
fldl
push
jp
out
stos
adc
inc
jae
xorl
xchg
andb
mov
xlat
enter
sub
adc
mov
fs
rorb
inc
pop
imul
jnp
in
sahf
ret
mov
js
mov
push
cli
push
rol
mov
mov
adcl
shll
or
out
push
mov
repnz
lret
sbb
sarl
fnstsw
jp
fdivr
add
popa
mov
sbb
xor
inc
jb
cmp
ret
jnp
cli
mov
inc
arpl
dec
cmp
into
sbb
sub
test
aad
rcrl
adc
cmp
dec
cmp
pop
flds
rclb
xchg
fs
call
push
jecxz
xor
pop
stos
test
scas
xchg
or
aaa
cmp
pop
lock
out
xchg
add
mov
push
cld
in
fldenv
pop
test
inc
test
js
mov
lea
inc
and
cwtl
pop
imul
xor
adc
add
aam
subl
out
xor
xchg
pop
sub
call
pop
cmp
scas
cmp
fcoml
mov
outsl
movl
mov
sub
jg
jmp
lea
aaa
add
pop
addr16
ret
xor
sbb
dec
mov
icebp
mov
in
loope
clc
imul
negb
cmp
cmp
mov
scas
mov
sahf
push
mov
dec
mov
inc
inc
out
ret
les
mov
mov
inc
add
ljmp
pop
push
jne
int
and
ss
js
frstor
sbb
adc
mov
sbb
fwait
js
mov
push
ret
jecxz
daa
mov
repz
arpl
xor
es
pop
push
sub
out
in
pop
mov
add
mov
push
pusha
loop
xchg
sti
jns
ja
test
xchg
ficompl
scas
daa
pop
lods
xchg
ret
sub
jge
xorb
mov
scas
test
movsl
filds
mov
rolb
mov
xchg
inc
push
scas
lods
inc
icebp
das
push
mov
test
mov
sub
test
pop
adc
jl
inc
and
mov
enter
stos
ss
nop
mov
inc
xchg
xor
pop
pushf
subl
repz
fninit
int
pxor
jnp
decb
pmuludq
pop
mov
inc
push
out
lahf
mov
dec
jp
mov
aaa
rcll
inc
in
call
inc
xor
stos
in
clc
insb
pop
hlt
ja
inc
fadds
ret
xor
inc
sbb
lds
out
xchg
inc
mov
cmp
pop
leave
imul
jns
clc
jge
xchg
das
pop
mull
jb
nop
clc
nop
ret
test
dec
pop
ds
es
cs
mov
into
push
mov
std
pop
insb
aam
sub
dec
sub
loop
leave
cwtl
xor
push
pop
cmc
icebp
int
sub
inc
sub
mov
nop
and
rcl
xchg
xor
bound
aas
or
int3
sahf
pop
jae
loop
cmpsl
add
rcll
scas
cmp
cltd
or
repz
inc
dec
and
jb
call
adcb
jo
xor
sahf
aas
data16
sti
jp
mov
push
inc
lret
jg
xchg
adc
into
sbb
cwtl
dec
sbb
test
jbe
lcall
pop
cmp
inc
mov
xchg
pop
xor
gs
movups
pop
xchg
inc
sub
dec
push
mov
mov
cmp
sbb
cmpsb
sbb
mov
outsl
in
and
iret
xor
inc
xchg
xor
loop
mov
fistpll
adc
pop
xchg
fcmovnbe
cs
jl
enter
mov
push
mov
cmc
icebp
int
sub
inc
sub
mov
nop
and
rcl
xchg
xor
bound
aas
or
int3
sahf
pop
jae
loop
cmpsl
add
rcll
scas
cmp
cltd
or
repz
inc
dec
and
jb
call
adcb
jo
xor
sahf
aas
data16
sti
jp
mov
push
inc
lret
jg
xchg
adc
into
sbb
cwtl
dec
sbb
test
jbe
lcall
pop
cmp
inc
mov
xchg
pop
xor
gs
movups
pop
xchg
inc
sub
dec
push
mov
mov
cmp
sbb
cmpsb
sbb
mov
outsl
in
and
iret
xor
inc
xchg
xor
loop
mov
fistpll
adc
pop
xchg
fcmovnbe
cs
jl
enter
mov
push
mov
xchg
dec
jno
in
jge
sbb
mov
dec
call
dec
shlb
sub
inc
jnp
std
fmul
loopne
mov
adc
jmp
pop
cs
fdivrp
sub
fs
loopne
jl
mov
subps
add
mov
lcall
mov
pop
outsl
ds
sub
adc
arpl
loop
lds
mov
out
push
sub
mov
jns
test
incl
sub
leave
movsl
sbb
mov
push
enter
mov
sbb
or
mov
adcl
xchg
dec
mov
mov
aaa
pop
xor
mov
xchg
mov
pop
or
repnz
push
cmp
jnp
and
roll
rclb
mov
xor
call
fwait
cmp
sub
ljmp
dec
and
daa
push
xchg
inc
mov
pushl
mov
test
sahf
mov
push
rcrl
daa
mov
jg
pop
filds
jbe
nop
xlat
imul
xchg
stos
lret
in
test
mov
pop
lds
mov
xchg
xor
daa
xchg
fbstp
out
dec
mov
or
mov
or
repz
lahf
mov
adc
mov
test
movsb
or
push
stc
rorl
divl
inc
leave
pushf
mov
out
repnz
pop
add
pushf
sub
lret
push
mov
or
pop
clc
jle
xor
mov
popf
mov
and
sbbl
adc
cmpsl
dec
jbe
push
in
and
cmc
popf
dec
out
idivl
mov
scas
sub
add
shll
mov
dec
fmull
mov
pop
mov
fwait
mov
test
daa
cli
mov
mov
nop
sbb
lahf
xchg
xchg
inc
and
scas
mov
xchg
std
out
out
mov
es
or
adcl
mov
cmpsl
sahf
into
insb
pop
dec
das
subl
xchg
movsb
in
sbb
stos
sbb
je
push
idivb
insl
stos
test
cs
aas
pop
cmp
cmp
pusha
popa
in
scas
fcom
popf
fs
pop
int3
jb
push
lret
ret
adc
and
mov
ss
mov
pusha
xchg
inc
repnz
out
xchg
push
jns
xor
pop
nop
sub
or
jp
imul
orb
xchg
mov
dec
mov
jecxz
and
pop
add
sahf
or
dec
xsavec
shlb
and
lods
jns
inc
xor
push
cmp
add
mov
jno
or
add
add
cmp
mov
fst
inc
or
mov
ret
iret
adc
daa
sbb
xchg
adc
dec
int
cmp
mull
out
mov
cmpsb
loope
dec
push
ret
in
lods
inc
incb
inc
cmpsl
pop
pop
xchg
sar
push
push
aad
pop
aaa
sbb
aad
and
cs
mov
and
push
push
fildl
daa
jnp
leave
sub
in
clc
test
inc
push
and
pushf
sub
sbb
aaa
gs
shrl
cmp
fwait
movb
iret
stos
int
push
push
lcall
push
xchg
mov
mov
outsb
jmp
test
incl
mov
add
negl
arpl
mov
out
stos
and
sti
dec
loope
in
rorl
in
sahf
repz
xchg
shlb
loope
nop
pop
fsubrl
jns
lds
push
sub
loop
jae
pop
call
and
xchg
imul
mov
mov
into
mov
sarb
mov
sarl
faddl
decl
xchg
cmp
jbe
dec
in
mov
int3
insb
in
sbb
xchg
cmp
rcrb
push
mov
rcl
cmpsb
pop
mov
or
inc
pop
lcall
jp
dec
test
pop
sti
push
loop
test
sbbl
mov
mov
lods
into
je
aaa
jg
xchg
roll
in
jge
sbb
mov
dec
call
dec
shlb
sub
inc
jnp
std
fmul
loopne
mov
adc
jmp
pop
cs
fdivrp
sub
fs
loopne
jl
mov
subps
add
mov
lcall
mov
pop
outsl
ds
sub
adc
arpl
loop
lds
mov
out
push
sub
mov
jns
test
incl
sub
leave
movsl
sbb
mov
push
enter
mov
sbb
or
mov
adcl
xchg
dec
mov
mov
aaa
pop
xor
mov
xchg
mov
pop
or
repnz
push
cmp
jnp
and
roll
rclb
mov
xor
call
fwait
cmp
sub
ljmp
dec
and
daa
push
xchg
inc
mov
pushl
mov
test
sahf
mov
push
rcrl
daa
mov
jg
pop
filds
jbe
nop
xlat
imul
xchg
stos
lret
in
test
mov
pop
lds
mov
xchg
xor
daa
xchg
fbstp
out
dec
mov
or
mov
or
repz
lahf
mov
adc
mov
test
movsb
or
push
stc
rorl
divl
inc
leave
pushf
mov
out
repnz
pop
add
pushf
sub
lret
push
mov
or
pop
clc
jle
xor
mov
popf
mov
and
sbbl
adc
cmpsl
dec
jbe
push
in
and
cmc
popf
dec
out
idivl
mov
scas
sub
add
shll
mov
dec
fmull
mov
pop
mov
fwait
mov
test
daa
cli
mov
mov
nop
sbb
lahf
xchg
xchg
inc
and
scas
mov
xchg
std
out
out
mov
es
or
adcl
mov
cmpsl
sahf
into
insb
pop
dec
das
subl
xchg
movsb
in
sbb
stos
sbb
je
push
idivb
insl
stos
test
cs
aas
pop
cmp
cmp
pusha
popa
in
scas
fcom
popf
fs
pop
int3
jb
push
lret
ret
adc
and
mov
ss
mov
pusha
xchg
inc
repnz
out
xchg
push
jns
xor
pop
nop
sub
or
jp
imul
orb
xchg
mov
dec
mov
jecxz
and
pop
add
sahf
or
dec
xsavec
shlb
and
lods
jns
inc
xor
push
cmp
add
mov
jno
or
add
add
cmp
mov
fst
inc
or
mov
ret
iret
adc
daa
sbb
xchg
adc
dec
int
cmp
mull
out
mov
cmpsb
loope
dec
push
ret
in
lods
inc
incb
inc
cmpsl
pop
pop
xchg
sar
push
push
aad
pop
aaa
sbb
aad
and
cs
mov
and
push
push
fildl
daa
jnp
leave
sub
in
clc
test
inc
push
and
pushf
sub
sbb
aaa
gs
shrl
cmp
fwait
movb
iret
stos
int
push
push
lcall
push
xchg
mov
mov
outsb
jmp
test
incl
mov
add
negl
arpl
mov
out
stos
and
sti
dec
loope
in
rorl
in
sahf
repz
xchg
shlb
loope
nop
pop
fsubrl
jns
lds
push
sub
loop
jae
pop
call
and
xchg
imul
mov
mov
into
mov
sarb
mov
sarl
faddl
decl
xchg
cmp
jbe
dec
in
mov
int3
insb
in
sbb
xchg
cmp
rcrb
push
mov
rcl
cmpsb
pop
mov
or
inc
pop
lcall
jp
dec
test
pop
sti
push
loop
test
sbbl
mov
mov
lods
into
je
aaa
xchg
push
out
fistpll
int3
jecxz
hlt
cmpsb
shlb
inc
add
stos
add
adc
psubw
push
cmp
mov
mov
stos
dec
test
xchg
fcoms
clc
stc
out
mov
rcll
lea
jmp
sub
arpl
es
cmpsb
push
dec
adc
ret
loope
or
sub
mov
int
pop
test
jno
ds
test
xchg
or
mov
pusha
cmp
lea
and
mov
sub
sbb
cmp
jge
cltd
icebp
pushl
xchg
ficompl
jb
les
cmp
lahf
in
push
out
fistpll
int3
jecxz
hlt
cmpsb
shlb
inc
add
stos
add
adc
psubw
push
cmp
mov
mov
stos
dec
test
xchg
fcoms
clc
stc
out
mov
rcll
lea
jmp
sub
arpl
es
cmpsb
push
dec
adc
ret
loope
or
sub
mov
int
pop
test
jno
ds
test
xchg
or
mov
pusha
cmp
lea
and
mov
sub
sbb
cmp
jge
cltd
icebp
pushl
xchg
ficompl
jb
les
cmp
lahf
in
mov
leave
lahf
ret
mov
sti
fsub
cmp
sub
sarl
mov
lcall
ficoms
jge
ljmp
mov
xchg
icebp
xlat
cmc
sbb
xor
rclb
pusha
pop
andps
jns
sahf
xchg
cmpsb
jo
mov
jge
jns
pop
ret
inc
mov
or
mov
ret
fildll
mov
xor
sbb
mov
ficompl
cs
mov
shlb
dec
sub
fs
lods
test
divl
sub
adc
arpl
push
lahf
jecxz
pop
movsb
jl
inc
sub
mov
add
lret
insl
mov
jl
and
push
call
lock
loopne
push
mov
int
xor
mov
push
mov
pop
pop
and
hlt
push
mov
insb
mov
fists
idivl
lcall
in
xchg
add
imul
movsl
jne
cmpsb
sbb
lock
jp
movsl
mov
lods
inc
jge
xlat
push
inc
out
insb
or
sbb
cli
jno
adc
pop
lock
xor
pusha
arpl
aam
dec
xchg
stos
testl
sbb
addr16
dec
aaa
mov
add
pushf
pop
xchg
sarl
or
push
loop
loopne
fisubrl
mov
add
cli
pop
repnz
jg
divb
adc
or
cmp
icebp
xor
jg
inc
ljmp
dec
shlb
mov
sbb
mov
dec
iret
gs
pop
das
adcl
test
push
and
les
lock
insl
popf
inc
out
push
and
jbe
shll
push
add
mov
ljmp
and
imul
fisubrs
lret
pushf
and
ss
adcb
push
pop
fdivr
add
dec
lds
cli
fsubr
fs
push
imul
and
xor
fcmovnu
mul
add
or
aad
out
mov
mov
push
repnz
repnz
mov
xor
ja
and
test
stos
inc
imul
in
scas
mov
aad
rorb
sub
fnstenv
inc
mov
out
adc
and
test
fcomps
shlb
mov
xor
popf
je
jmp
rorl
sbb
test
test
sub
imul
sbb
push
or
dec
mov
loope
imul
mov
mov
dec
mov
call
pop
in
pushf
das
ja
in
ja
insl
in
adc
ret
push
dec
sub
xchg
fsubs
sti
lods
pusha
out
cmp
sbb
pop
dec
mov
std
mov
jnp
shr
outsb
scas
dec
enter
and
adcb
fs
push
pop
cmp
add
xchg
xor
jle
sbb
xor
ljmp
add
sbbb
in
sub
mov
push
inc
mov
gs
rcl
sub
insb
or
in
into
sub
repnz
nop
into
loop
push
mov
cld
sub
jnp
push
jge
ficompl
push
xor
push
push
das
push
or
dec
mov
fcmovne
mov
notl
mov
gs
mov
pop
push
adc
jo
add
loopne
pop
jmp
stos
xor
xor
stos
jne
pop
lods
loope
arpl
insb
pop
pusha
jno
cli
inc
mov
pop
lcall
sbb
stos
rcrb
push
ss
nop
xor
aam
sbb
jmp
mov
add
hlt
rclb
xor
xchg
add
test
pop
mov
sbb
sub
repz
sub
jmp
mov
jne
adc
inc
inc
iret
mov
xchg
fidivrl
fisttps
jg
rcr
lcall
lds
arpl
adc
push
mov
adc
xchg
into
mov
ret
mov
push
repz
pusha
dec
in
imul
inc
mov
fsts
outsb
insb
adc
arpl
add
arpl
pop
cli
aas
imul
push
pop
inc
add
sub
pop
dec
movsl
push
loop
aam
repnz
push
mov
call
sbb
in
mov
mov
stc
pop
push
js
mov
pop
mov
fisttpll
lcall
and
xor
jnp
fnsave
cmpb
cmp
shll
and
leave
lahf
ret
mov
sti
fsub
cmp
sub
sarl
mov
lcall
ficoms
jge
ljmp
mov
xchg
icebp
xlat
cmc
sbb
xor
rclb
pusha
pop
andps
jns
sahf
xchg
cmpsb
jo
mov
jge
jns
pop
ret
inc
mov
or
mov
ret
fildll
mov
xor
sbb
mov
ficompl
cs
mov
shlb
dec
sub
fs
lods
test
divl
sub
adc
arpl
push
lahf
jecxz
pop
movsb
jl
inc
sub
mov
add
lret
insl
mov
jl
and
push
call
lock
loopne
push
mov
int
xor
mov
push
mov
pop
pop
and
hlt
push
mov
insb
mov
fists
idivl
lcall
in
xchg
add
imul
movsl
jne
cmpsb
sbb
lock
jp
movsl
mov
lods
inc
jge
xlat
push
inc
out
insb
or
sbb
cli
jno
adc
pop
lock
xor
pusha
arpl
aam
dec
xchg
stos
testl
sbb
addr16
dec
aaa
mov
add
pushf
pop
xchg
sarl
or
push
loop
loopne
fisubrl
mov
add
cli
pop
repnz
jg
divb
adc
or
cmp
icebp
xor
jg
inc
ljmp
dec
shlb
mov
sbb
mov
dec
iret
gs
pop
das
adcl
test
push
and
les
lock
insl
popf
inc
out
push
and
jbe
shll
push
add
mov
ljmp
and
imul
fisubrs
lret
pushf
and
ss
adcb
push
pop
fdivr
add
dec
lds
cli
fsubr
fs
push
imul
and
xor
fcmovnu
mul
add
or
aad
out
mov
mov
push
repnz
repnz
mov
xor
ja
and
test
stos
inc
imul
in
scas
mov
aad
rorb
sub
fnstenv
inc
mov
out
adc
and
test
fcomps
shlb
mov
xor
popf
je
jmp
rorl
sbb
test
test
sub
imul
sbb
push
or
dec
mov
loope
imul
mov
mov
dec
mov
call
pop
in
pushf
das
ja
in
ja
insl
in
adc
ret
push
dec
sub
xchg
fsubs
sti
lods
pusha
out
cmp
sbb
pop
dec
mov
std
mov
jnp
shr
outsb
scas
dec
enter
and
adcb
fs
push
pop
cmp
add
xchg
xor
jle
sbb
xor
ljmp
add
sbbb
in
sub
mov
push
inc
mov
gs
rcl
sub
insb
or
in
into
sub
repnz
nop
into
loop
push
mov
cld
sub
jnp
push
jge
ficompl
push
xor
push
push
das
push
or
dec
mov
fcmovne
mov
notl
mov
gs
mov
pop
push
adc
jo
add
loopne
pop
jmp
stos
xor
xor
stos
jne
pop
lods
loope
arpl
insb
pop
pusha
jno
cli
inc
mov
pop
lcall
sbb
stos
rcrb
push
ss
nop
xor
aam
sbb
jmp
mov
add
hlt
rclb
xor
xchg
add
test
pop
mov
sbb
sub
repz
sub
jmp
mov
jne
adc
inc
inc
iret
mov
xchg
fidivrl
fisttps
jg
rcr
lcall
lds
arpl
adc
push
mov
adc
xchg
into
mov
ret
mov
push
repz
pusha
dec
in
imul
inc
mov
fsts
outsb
insb
adc
arpl
add
arpl
pop
cli
aas
imul
push
pop
inc
add
sub
pop
dec
movsl
push
loop
aam
repnz
push
mov
call
sbb
in
mov
mov
stc
pop
push
js
mov
pop
mov
fisttpll
lcall
and
xor
jnp
fnsave
cmpb
cmp
shll
and
nop
inc
pusha
add
clc
subb
sub
int
popa
subb
push
inc
mov
push
push
jp
mov
lock
loop
in
jo
cmp
sub
test
repz
mov
mov
hlt
into
out
int
xor
mov
or
push
cmpsl
mov
jg
push
pop
sub
mull
push
cmp
aas
mov
xchg
xchg
fwait
push
dec
out
jns
loopne
ss
jecxz
nop
inc
pusha
add
clc
subb
sub
int
popa
subb
push
inc
mov
push
push
jp
mov
lock
loop
in
jo
cmp
sub
test
repz
mov
mov
hlt
into
out
int
xor
mov
or
push
cmpsl
mov
jg
push
pop
sub
mull
push
cmp
aas
mov
xchg
xchg
fwait
push
dec
out
jns
loopne
ss
mov
and
jno
fninit
call
pop
bound
inc
inc
mov
lods
imul
nop
mov
add
push
fstps
sbb
shll
movsb
ljmp
push
pop
int3
xor
and
inc
pop
push
sbb
add
outsl
xchg
ds
arpl
out
jmp
ds
push
jae
sub
adc
pop
xor
das
mov
jne
out
repnz
clc
push
xchg
pop
out
int3
inc
jno
pusha
inc
outsb
mov
jg
mov
sbb
out
push
and
xchg
sub
jg
cmpsb
sub
pusha
mov
sbb
sub
aaa
sbb
inc
jo
cld
icebp
mov
and
and
ret
sbbl
push
je
dec
lds
sub
mov
enter
out
in
xchg
getsec
pop
shr
popf
insb
lea
pop
xchg
inc
dec
popa
cmp
sbb
into
fmuls
pop
sti
fldl
cmpsb
or
inc
fcmovb
out
daa
inc
ds
mov
push
pusha
pop
int3
mov
dec
in
mov
lea
icebp
adc
push
scas
xchg
and
jmp
jmp
mov
test
jae
mov
in
hlt
icebp
inc
mov
adc
push
mov
pop
popa
pop
mov
jmp
or
stos
mov
inc
sbb
loopne
cmpsl
addl
lock
cmp
movsb
arpl
sbb
repz
jbe
lods
add
cmp
cmp
jmp
and
in
jns
mov
out
add
stos
mov
loopne
es
xlat
mov
adc
xchg
rcrl
adc
push
les
ret
pop
inc
sbb
push
sbbl
push
mov
xor
leave
mov
pop
rcrl
lods
or
int3
hlt
mov
push
pushf
mov
sbb
ja
lea
pop
int3
movsb
test
mov
fildl
inc
and
leave
lea
scas
std
xor
jb
repnz
dec
call
imul
lea
ljmp
mov
mov
sbb
andb
testb
inc
mov
mov
xor
xor
mov
sub
sub
in
or
mov
mov
mov
fcmovne
ffreep
cwtl
hlt
sbb
add
sbb
mov
ss
icebp
fmul
in
inc
or
xor
pusha
fcom
push
popa
loop
andl
sbb
dec
push
mov
shr
iret
jle
jg
aam
mov
sbb
jb
xchg
cmp
sbb
ret
push
mov
insb
adcl
push
bound
add
and
outsl
int3
jmp
push
ss
jp
repz
clc
dec
sub
js
out
hlt
ljmp
in
mov
dec
int3
push
ret
loopne
mov
jp
xchg
in
jmp
sub
xor
xchg
mov
mov
push
scas
push
int
sub
shll
std
vmovaps
add
bnd
fbstp
mov
fsts
jmp
xchg
outsl
push
sbb
jle
shlb
xchg
loop
mov
mov
rolb
out
mov
or
sbb
lretw
daa
cmpsb
dec
out
cltd
jp
test
cmp
push
iret
insb
jno
mov
movsb
sub
mov
pusha
pushf
std
jns
in
scas
dec
sbbl
repnz
or
ret
movsl
jmp
fs
mov
jp
int3
repz
mov
jne
dec
xor
mov
nop
lock
out
mov
xor
xlat
jp
mov
lock
hlt
jg
lock
repz
adc
push
sbbb
cmpsb
clc
insl
and
fdivl
fisubs
adc
testb
mov
repz
jle
and
lods
xchg
stc
lea
in
movsl
fistps
in
insl
das
mov
inc
jne,pt
push
cmp
or
fldl
pop
sbb
sub
into
fcomp
cmp
push
jge
lock
fs
sub
sub
push
lds
mov
arpl
cwtl
shr
xchg
dec
mov
dec
lahf
and
mov
sbb
rorl
dec
pushf
pushf
dec
les
pop
inc
test
aas
xor
dec
or
jmp
mov
movsb
mov
mov
cmp
pop
inc
popa
les
sub
test
or
jecxz
loope
push
cmp
sbb
aas
test
cwtl
mov
jbe
push
mov
out
imul
sub
xor
or
je
jae
push
lea
inc
jmp
iret
or
mov
and
jno
fninit
call
pop
bound
inc
inc
mov
lods
imul
nop
mov
add
push
fstps
sbb
shll
movsb
ljmp
push
pop
int3
xor
and
inc
pop
push
sbb
add
outsl
xchg
ds
arpl
out
jmp
ds
push
jae
sub
adc
pop
xor
das
mov
jne
out
repnz
clc
push
xchg
pop
out
int3
inc
jno
pusha
inc
outsb
mov
jg
mov
sbb
out
push
and
xchg
sub
jg
cmpsb
sub
pusha
mov
sbb
sub
aaa
sbb
inc
jo
cld
icebp
mov
and
and
ret
sbbl
push
je
dec
lds
sub
mov
enter
out
in
xchg
getsec
pop
shr
popf
insb
lea
pop
xchg
inc
dec
popa
cmp
sbb
into
fmuls
pop
sti
fldl
cmpsb
or
inc
fcmovb
out
daa
inc
ds
mov
push
pusha
pop
int3
mov
dec
in
mov
lea
icebp
adc
push
scas
xchg
and
jmp
jmp
mov
test
jae
mov
in
hlt
icebp
inc
mov
adc
push
mov
pop
popa
pop
mov
jmp
or
stos
mov
inc
sbb
loopne
cmpsl
addl
lock
cmp
movsb
arpl
sbb
repz
jbe
lods
add
cmp
cmp
jmp
and
in
jns
mov
out
add
stos
mov
loopne
es
xlat
mov
adc
xchg
rcrl
adc
push
les
ret
pop
inc
sbb
push
sbbl
push
mov
xor
leave
mov
pop
rcrl
lods
or
int3
hlt
mov
push
pushf
mov
sbb
ja
lea
pop
int3
movsb
test
mov
fildl
inc
and
leave
lea
scas
std
xor
jb
repnz
dec
call
imul
lea
ljmp
mov
mov
sbb
andb
testb
inc
mov
mov
xor
xor
mov
sub
sub
in
or
mov
mov
mov
fcmovne
ffreep
cwtl
hlt
sbb
add
sbb
mov
ss
icebp
fmul
in
inc
or
xor
pusha
fcom
push
popa
loop
andl
sbb
dec
push
mov
shr
iret
jle
jg
aam
mov
sbb
jb
xchg
cmp
sbb
ret
push
mov
insb
adcl
push
bound
add
and
outsl
int3
jmp
push
ss
jp
repz
clc
dec
sub
js
out
hlt
ljmp
in
mov
dec
int3
push
ret
loopne
mov
jp
xchg
in
jmp
sub
xor
xchg
mov
mov
push
scas
push
int
sub
shll
std
vmovaps
add
bnd
fbstp
mov
fsts
jmp
xchg
outsl
push
sbb
jle
shlb
xchg
loop
mov
mov
rolb
out
mov
or
sbb
lretw
daa
cmpsb
dec
out
cltd
jp
test
cmp
push
iret
insb
jno
mov
movsb
sub
mov
pusha
pushf
std
jns
in
scas
dec
sbbl
repnz
or
ret
movsl
jmp
fs
mov
jp
int3
repz
mov
jne
dec
xor
mov
nop
lock
out
mov
xor
xlat
jp
mov
lock
hlt
jg
lock
repz
adc
push
sbbb
cmpsb
clc
insl
and
fdivl
fisubs
adc
testb
mov
repz
jle
and
lods
xchg
stc
lea
in
movsl
fistps
in
insl
das
mov
inc
jne,pt
push
cmp
or
fldl
pop
sbb
sub
into
fcomp
cmp
push
jge
lock
fs
sub
sub
push
lds
mov
arpl
cwtl
shr
xchg
dec
mov
dec
lahf
and
mov
sbb
rorl
dec
pushf
pushf
dec
les
pop
inc
test
aas
xor
dec
or
jmp
mov
movsb
mov
mov
cmp
pop
inc
popa
les
sub
test
or
jecxz
loope
push
cmp
sbb
aas
test
cwtl
mov
jbe
push
mov
out
imul
sub
xor
or
je
jae
push
lea
inc
jmp
iret
or
sbb
rorl
cwtl
dec
jge
xorl
bound
mov
loope
adc
and
les
push
mov
push
in
sub
movsb
lds
inc
ljmp
push
lcall
xchg
mov
sub
rorl
cwtl
dec
jge
xorl
bound
mov
loope
adc
and
les
push
mov
push
in
sub
movsb
lds
inc
ljmp
push
lcall
int3
push
in
xor
popa
jb
push
xchg
or
pusha
cld
add
pop
fisttps
adc
std
test
xor
repz
adc
dec
jmp
insb
outsb
push
inc
mov
cld
into
and
repnz
inc
out
inc
xchg
push
aas
xor
jne
cmpsb
mov
sbb
popl
cmpsb
and
mov
aad
les
pop
in
imul
push
stos
cltd
stos
repnz
lret
movsl
mov
cmp
scas
ret
les
daa
or
jl,pn
sbb
push
aaa
ja
jp
xchg
rcl
lods
cs
and
push
aas
clc
and
push
push
inc
jno
push
sbb
cs
push
or
jle
jbe
or
inc
inc
mov
pusha
sbb
mov
add
lock
sub
daa
int
adcb
fs
sub
dec
mov
xchg
test
call
icebp
fisttpl
sbb
ds
int
adc
and
pop
sbb
testl
stos
sbb
popa
rclb
fistpll
mov
or
lret
dec
inc
lcall
in
cmp
add
mov
mov
subl
movsl
sbb
mov
lds
jmp
int3
jmp
cmc
xor
loop
loope
dec
cmp
cmp
push
out
sbb
mov
add
cmp
lds
aas
inc
sarb
mov
imul
mov
addl
add
add
popf
lods
mov
inc
mov
mov
xchg
in
or
dec
dec
into
sbbl
inc
mov
imulb
push
push
jno
fwait
jae
ljmp
js
add
add
out
in
inc
inc
and
imul
imul
jl,pt
or
test
scas
test
mov
out
aas
adc
movsl
repz
xchg
jmp
xchg
sbb
and
add
test
addr16
imul
shlb
addl
test
cmp
pop
jmp
jle
shl
aaa
or
mov
outsb
pop
in
into
fidivl
xchg
inc
add
cmp
jmp
or
jno
movsl
mov
sbb
rcrb
icebp
icebp
sbb
aad
imul
xor
leave
dec
mov
aad
cli
leave
add
out
out
aad
dec
jecxz
mov
lods
add
xor
jno
and
push
inc
lcall
xor
mov
adc
mov
xor
dec
or
xchg
push
xor
inc
cmp
out
xchg
mov
std
mov
rcr
data16
aad
push
cli
add
orl
jne
mov
ret
and
pop
pop
pop
pop
mov
sub
cltd
out
in
ret
ret
xor
jns
sbb
mov
jmp
dec
jae
out
aaa
outsb
pop
pop
ficoml
xchg
adc
inc
xchg
mov
cmp
adc
xor
jge
jle
inc
cmpsb
mov
mov
add
scas
mov
fsts
sub
sub
cmpb
ljmp
ljmp
add
fdivrs
inc
ds
xor
out
pop
arpl
inc
pop
out
lcall
push
out
sub
mov
cmp
sub
adc
out
pop
mov
or
call
enter
and
xchg
sub
push
push
cwtl
clc
movsb
pop
mov
sub
inc
or
lcall
cmp
test
push
xor
lods
mov
mov
or
lea
js
mov
repz
enter
mov
xchg
pop
push
lods
adc
push
xchg
cmp
clc
mov
xor
xor
dec
xchg
fiaddl
mov
sub
test
mov
int3
es
pop
dec
out
push
pop
ficoml
in
push
pop
sub
pop
and
out
call
shll
popa
cmp
ljmp
sbb
and
or
sub
nop
test
fistpll
pushl
andb
leave
add
repnz
sar
fisubrl
xor
iret
push
out
jae
xor
movsb
mov
cmp
loopne
iret
pop
dec
clc
xchg
xchg
sbb
xlat
mov
int3
das
repz
ss
stc
fdivs
loopne
outsb
or
movsb
call
data16
or
cmc
shll
aaa
cmpl
inc
mov
adc
cwtl
adc
sti
mov
mov
jns
sub
sub
push
mov
pop
add
inc
lahf
ret
mov
dec
pop
sub
sub
in
popa
pop
sub
dec
repnz
sub
xor
push
nop
popa
jb
push
xchg
or
pusha
cld
add
pop
fisttps
adc
std
test
xor
repz
adc
dec
jmp
insb
outsb
push
inc
mov
cld
into
and
repnz
inc
out
inc
xchg
push
aas
xor
jne
cmpsb
mov
sbb
popl
cmpsb
and
mov
aad
les
pop
in
imul
push
stos
cltd
stos
repnz
lret
movsl
mov
cmp
scas
ret
les
daa
or
jl,pn
sbb
push
aaa
ja
jp
xchg
rcl
lods
cs
and
push
aas
clc
and
push
push
inc
jno
push
sbb
cs
push
or
jle
jbe
or
inc
inc
mov
pusha
sbb
mov
add
lock
sub
daa
int
adcb
fs
sub
dec
mov
xchg
test
call
icebp
fisttpl
sbb
ds
int
adc
and
pop
sbb
testl
stos
sbb
popa
rclb
fistpll
mov
or
lret
dec
inc
lcall
in
cmp
add
mov
mov
subl
movsl
sbb
mov
lds
jmp
int3
jmp
cmc
xor
loop
loope
dec
cmp
cmp
push
out
sbb
mov
add
cmp
lds
aas
inc
sarb
mov
imul
mov
addl
add
add
popf
lods
mov
inc
mov
mov
xchg
in
or
dec
dec
into
sbbl
inc
mov
imulb
push
push
jno
fwait
jae
ljmp
js
add
add
out
in
inc
inc
and
imul
imul
jl,pt
or
test
scas
test
mov
out
aas
adc
movsl
repz
xchg
jmp
xchg
sbb
and
add
test
addr16
imul
shlb
addl
test
cmp
pop
jmp
jle
shl
aaa
or
mov
outsb
pop
in
into
fidivl
xchg
inc
add
cmp
jmp
or
jno
movsl
mov
sbb
rcrb
icebp
icebp
sbb
aad
imul
xor
leave
dec
mov
aad
cli
leave
add
out
out
aad
dec
jecxz
mov
lods
add
xor
jno
and
push
inc
lcall
xor
mov
adc
mov
xor
dec
or
xchg
push
xor
inc
cmp
out
xchg
mov
std
mov
rcr
data16
aad
push
cli
add
orl
jne
mov
ret
and
pop
pop
pop
pop
mov
sub
cltd
out
in
ret
ret
xor
jns
sbb
mov
jmp
dec
jae
out
aaa
outsb
pop
pop
ficoml
xchg
adc
inc
xchg
mov
cmp
adc
xor
jge
jle
inc
cmpsb
mov
mov
add
scas
mov
fsts
sub
sub
cmpb
ljmp
ljmp
add
fdivrs
inc
ds
xor
out
pop
arpl
inc
pop
out
lcall
push
out
sub
mov
cmp
sub
adc
out
pop
mov
or
call
enter
and
xchg
sub
push
push
cwtl
clc
movsb
pop
mov
sub
inc
or
lcall
cmp
test
push
xor
lods
mov
mov
or
lea
js
mov
repz
enter
mov
xchg
pop
push
lods
adc
push
xchg
cmp
clc
mov
xor
xor
dec
xchg
fiaddl
mov
sub
test
mov
int3
es
pop
dec
out
push
pop
ficoml
in
push
pop
sub
pop
and
out
call
shll
popa
cmp
ljmp
sbb
and
or
sub
nop
test
fistpll
pushl
andb
leave
add
repnz
sar
fisubrl
xor
iret
push
out
jae
xor
movsb
mov
cmp
loopne
iret
pop
dec
clc
xchg
xchg
sbb
xlat
mov
int3
das
repz
ss
stc
fdivs
loopne
outsb
or
movsb
call
data16
or
cmc
shll
aaa
cmpl
inc
mov
adc
cwtl
adc
sti
mov
mov
jns
sub
sub
push
mov
pop
add
inc
lahf
ret
mov
dec
pop
sub
sub
in
popa
pop
sub
dec
repnz
fsts
mov
test
fsts
mov
scas
inc
pop
cmp
mov
mov
in
cmp
mov
adc
call
xchg
xchg
frstor
sbb
push
push
xchg
movsb
jl
jno
and
movsb
test
jle
mov
jns
addr16
gs
aad
add
subl
add
jecxz
mov
add
into
jo
cmpsb
mov
dec
xlat
loopne
dec
jo
xchg
sti
lods
inc
arpl
out
push
lods
shl
addr16
lret
mov
cmc
cwtl
mov
xor
out
and
push
jb
jne
lret
in
mov
xlat
rorl
fs
orb
jno
and
das
subb
imulb
cmp
stos
or
sbb
or
sub
sbbb
subb
jo
lret
pop
insl
pushf
cmpsb
push
dec
test
cld
sarb
push
bound
adc
imul
int
test
pushf
xor
mov
or
cmp
or
xor
scas
out
clc
adc
mov
int3
ror
mov
mov
adc
in
ret
lds
scas
nop
push
pusha
xchg
or
mov
lcall
xor
mov
push
fisttpll
es
imul
cmp
ljmp
sub
sahf
mov
cmpsb
fs
mov
in
and
testb
jmp
sbb
lds
xchg
mov
repnz
inc
pop
cmpsb
cmp
and
dec
scas
shrb
lret
das
out
xchg
popa
fidivrs
sub
loope
idivl
sbb
jecxz
orps
jb
jbe
pushf
push
shl
int
or
inc
mov
cmp
mov
xchg
popf
stc
sub
mov
or
in
mov
scas
idivb
mov
jge
fsubl
jne
paddusb
test
rorb
mov
jnp
sbb
or
call
sub
cmpsb
aas
rep
shrb
jae
xchg
sub
jp
or
xor
test
test
cmp
dec
cmpsb
loopne
shr
es
dec
or
imul
pop
pop
ss
dec
rcll
jae
sub
lods
sahf
xorl
sub
sub
out
xchg
loope
shr
jne
push
aas
pop
or
jne
sbb
dec
ror
popf
mov
pop
inc
mov
mov
cwtl
or
insl
cmp
mov
inc
xchg
les
test
mov
xchg
jp,pt
into
lret
fmull
jge
inc
pop
outsl
cwtl
mov
sbb
jg
or
inc
test
inc
and
leave
mov
dec
fistpl
icebp
cwtl
and
pushf
movsb
rcrb
xchg
xor
rcrb
ret
xor
incb
and
test
inc
xor
add
push
fisttpl
cmpsb
mov
aas
lret
ja
ret
jg
nop
mov
adc
adc
adc
add
call
and
xchg
push
mov
dec
cli
pop
int
ja
sub
movsl
test
xchg
mov
and
rolb
mov
ss
lock
sbb
aaa
adc
push
sahf
mov
loopne
stos
aaa
lock
inc
mov
jp
push
cmp
sbb
add
punpcklwd
xchg
inc
push
jnp
and
out
adc
fs
push
imul
ret
and
int
adc
mov
push
or
push
xor
arpl
sbb
xchg
and
or
adc
pushf
imul
repz
pop
aam
mov
mov
fidivl
je
cmp
nop
scas
xlat
and
add
aas
mov
loop
out
mov
mov
add
scas
cli
lock
push
and
stos
or
dec
fwait
lret
mov
pusha
sbb
stc
enter
sub
cmp
xchg
sbb
in
mov
shl
ss
popf
fimuls
ror
and
inc
pop
fwait
fwait
jo
xlat
xchg
or
xchg
dec
adc
add
test
jmp
test
ret
sbb
push
jle
rcrb
push
adc
les
sahf
jns
cmp
das
pop
clc
jmp
aas
stos
xchg
insb
lea
lods
cwtl
aam
test
sub
inc
pop
scas
mov
xchg
and
inc
pusha
clc
mov
ficoml
xchg
mov
out
mov
ja
aas
pop
icebp
movsl
push
aas
outsl
jne
add
daa
xor
loopne
shlb
and
jmp
aam
mov
lret
and
daa
mov
std
mov
cwtl
lret
dec
mov
mov
pop
mov
ficomps
inc
fcoms
ret
pop
dec
daa
xchg
cmp
leave
inc
dec
out
mov
inc
insb
add
in
adcl
rol
ret
sbbl
mov
xchg
lods
in
shll
adc
fwait
test
or
push
jns
jmp
imul
mov
mov
out
mov
push
sub
mov
jno
int3
mov
sbb
dec
cs
xor
push
and
push
inc
int
sub
rcrb
mov
push
sub
mov
jno
int3
mov
sbb
dec
cs
xor
push
and
push
inc
int
sub
rcrb
xchg
test
lock
ljmp
push
mov
enter
jmp
stos
mov
outsl
sbb
fldcw
sti
clc
xor
xchg
fcoms
fldenv
push
cltd
xchg
jl
cmpsl
adc
into
test
test
shr
repz
inc
jbe
or
cs
imul
mov
inc
inc
or
loope
fbstp
cmp
outsl
rcll
pusha
cmp
add
das
aas
add
inc
mov
jno
mov
push
pop
xchg
insl
test
test
mov
inc
xchg
xor
mov
xchg
ja
test
mov
and
es
add
aas
push
repz
das
aaa
and
arpl
ja
cmp
push
fisubl
jmp
sbb
jo
dec
jae
mov
pop
adc
stos
cmp
data16
sbb
sub
mov
iret
and
insl
sarb
and
xchg
insb
arpl
popf
in
mov
inc
sbb
push
jno
and
popf
ds
push
arpl
fstl
rcrb
jae
stc
arpl
mov
js
lahf
pop
pop
push
loope
mov
jle
clc
dec
sbb
outsl
add
dec
lods
clc
pop
test
and
daa
mov
mov
adc
lret
push
xchg
ljmp
push
pop
xchg
and
xor
addr16
mov
mov
aaa
sti
sbb
mov
and
orb
loopne
rcr
sbb
ror
xor
aad
add
enter
xchg
sub
inc
mov
test
cmp
es
adc
inc
nop
or
cmpsb
xor
sub
in
cmp
in
popf
or
jg
pop
push
sub
cmp
div
push
cli
mov
dec
rolb
icebp
pop
sbb
cmp
sub
dec
fistl
xor
dec
push
mov
in
leave
rcrl
adc
ret
jecxz
gs
adc
mov
out
jmp
pop
dec
aas
mov
mov
loopne
mov
cmpsl
into
pop
and
inc
and
or
repnz
jnp
mov
fmul
icebp
shrl
lret
ja
xor
sub
cs
repz
pusha
mov
cmpb
ds
lret
sti
inc
or
or
in
test
lea
xchg
push
or
jle
in
mov
roll
subl
push
xchg
push
mov
js
loope
lods
or
scas
and
iret
lahf
shrb
clc
mov
or
out
aas
cmc
jecxz
and
rolb
lret
scas
adcl
cmp
pop
push
pusha
jns
sbb
into
popl
loope
push
shl
xchg
imul
stc
jo
sbb
into
xor
adc
cli
mov
out
loop
mov
or
cwtl
cmp
mov
cmc
xor
out
call
nop
sub
or
bound
and
jmp
xchg
imul
cmp
fbstp
roll
jp
sub
pop
ret
push
hlt
xor
xchg
test
push
imulb
fsubrs
icebp
and
mov
dec
xor
xorps
js
dec
pop
xor
popa
loopne
pop
movsl
dec
xor
cld
xorb
cltd
xor
lret
adc
fcmovnb
out
in
idivl
adc
dec
insb
es
dec
sub
jle
dec
sbb
mov
int3
outsl
jmp
xor
in
daa
lretw
out
and
xchg
add
jne
lret
mov
js
inc
ret
xchg
sbb
adc
lods
cmp
mov
sbb
sub
mov
mov
adc
bound
cli
cwtl
ja
dec
adcb
sbb
aaa
nop
ret
int3
scas
es
mov
jae
mov
pop
mov
dec
jo
and
test
mov
jmp
mov
rorl
out
inc
jp
test
xlat
adc
push
mov
insb
pop
mov
push
mov
roll
in
incb
es
inc
orl
stc
cmp
jnp
xor
mov
insb
sbb
rorb
jo
dec
test
test
push
sub
in
int
aam
ret
sub
je
or
jo
dec
adc
xchg
mov
int3
cld
jmp
xchg
cmc
cmpsl
std
sub
data16
std
cli
inc
jp
dec
test
lret
sti
lea
enter
test
addr16
push
sti
js
test
mov
outsl
fdivl
in
xor
lock
jmp
xor
push
movsb
and
clc
push
ljmp
xchg
sub
daa
fdiv
xchg
ljmp
push
mov
enter
jmp
stos
mov
outsl
sbb
fldcw
sti
clc
xor
xchg
fcoms
fldenv
push
cltd
xchg
jl
cmpsl
adc
into
test
test
shr
repz
inc
jbe
or
cs
imul
mov
inc
inc
or
loope
fbstp
cmp
outsl
rcll
pusha
cmp
add
das
aas
add
inc
mov
jno
mov
push
pop
xchg
insl
test
test
mov
inc
xchg
xor
mov
xchg
ja
test
mov
and
es
add
aas
push
repz
das
aaa
and
arpl
ja
cmp
push
fisubl
jmp
sbb
jo
dec
jae
mov
pop
adc
stos
cmp
data16
sbb
sub
mov
iret
and
insl
sarb
and
xchg
insb
arpl
popf
in
mov
inc
sbb
push
jno
and
popf
ds
push
arpl
fstl
rcrb
jae
stc
arpl
mov
js
lahf
pop
pop
push
loope
mov
jle
clc
dec
sbb
outsl
add
dec
lods
clc
pop
test
and
daa
mov
mov
adc
lret
push
xchg
ljmp
push
pop
xchg
and
xor
addr16
mov
mov
aaa
sti
sbb
mov
and
orb
loopne
rcr
sbb
ror
xor
aad
add
enter
xchg
sub
inc
mov
test
cmp
es
adc
inc
nop
or
cmpsb
xor
sub
in
cmp
in
popf
or
jg
pop
push
sub
cmp
div
push
cli
mov
dec
rolb
icebp
pop
sbb
cmp
sub
dec
fistl
xor
dec
push
mov
in
leave
rcrl
adc
ret
jecxz
gs
adc
mov
out
jmp
pop
dec
aas
mov
mov
loopne
mov
cmpsl
into
pop
and
inc
and
or
repnz
jnp
mov
fmul
icebp
shrl
lret
ja
xor
sub
cs
repz
pusha
mov
cmpb
ds
lret
sti
inc
or
or
in
test
lea
xchg
push
or
jle
in
mov
roll
subl
push
xchg
push
mov
js
loope
lods
or
scas
and
iret
lahf
shrb
clc
mov
or
out
aas
cmc
jecxz
and
rolb
lret
scas
adcl
cmp
pop
push
pusha
jns
sbb
into
popl
loope
push
shl
xchg
imul
stc
jo
sbb
into
xor
adc
cli
mov
out
loop
mov
or
cwtl
cmp
mov
cmc
xor
out
call
nop
sub
or
bound
and
jmp
xchg
imul
cmp
fbstp
roll
jp
sub
pop
ret
push
hlt
xor
xchg
test
push
imulb
fsubrs
icebp
and
mov
dec
xor
xorps
js
dec
pop
xor
popa
loopne
pop
movsl
dec
xor
cld
xorb
cltd
xor
lret
adc
fcmovnb
out
in
idivl
adc
dec
insb
es
dec
sub
jle
dec
sbb
mov
int3
outsl
jmp
xor
in
daa
lretw
out
and
xchg
add
jne
lret
mov
js
inc
ret
xchg
sbb
adc
lods
cmp
mov
sbb
sub
mov
mov
adc
bound
cli
cwtl
ja
dec
adcb
sbb
aaa
nop
ret
int3
scas
es
mov
jae
mov
pop
mov
dec
jo
and
test
mov
jmp
mov
rorl
out
inc
jp
test
xlat
adc
push
mov
insb
pop
mov
push
mov
roll
in
incb
es
inc
orl
stc
cmp
jnp
xor
mov
insb
sbb
rorb
jo
dec
test
test
push
sub
in
int
aam
ret
sub
je
or
jo
dec
adc
xchg
mov
int3
cld
jmp
xchg
cmc
cmpsl
std
sub
data16
std
cli
inc
jp
dec
test
lret
sti
lea
enter
test
addr16
push
sti
js
test
mov
outsl
fdivl
in
xor
lock
jmp
xor
push
movsb
and
clc
push
ljmp
xchg
sub
pop
fists
fimull
sbbb
mov
fnsetpm(287
pushf
outsb
sahf
es
add
xor
push
mov
dec
adc
out
divb
mov
mov
jl
lods
cmpsl
mov
add
mov
sti
sti
dec
pop
add
rolb
mov
lret
and
es
adc
push
inc
xor
or
out
pop
fists
fimull
sbbb
mov
fnsetpm(287
pushf
outsb
sahf
es
add
xor
push
mov
dec
adc
out
divb
mov
mov
jl
lods
cmpsl
mov
add
mov
sti
sti
dec
pop
add
rolb
mov
lret
and
es
adc
push
inc
xor
or
stos
cmpsb
mov
cli
mov
mov
cwtl
arpl
jae
xor
dec
jle
mov
rcll
add
subl
shll
jno
mov
fst
sub
xor
cmp
cmc
jo
pop
pop
add
push
adc
jle
pop
pop
inc
jmp
sbb
xor
ja
outsb
sbb
and
dec
mov
jle,pn
jno
fstpl
jp
cmpb
adc
cs
jl
dec
cs
jbe
ret
lret
std
dec
stos
inc
push
add
mov
std
push
jmp
adcl
iret
or
dec
aaa
icebp
insb
aas
out
arpl
lea
jne
and
mov
jge
out
mov
ljmp
mov
and
mov
rorb
fldcw
xchg
pop
in
enter
xlat
mov
and
loope
mov
mov
out
jg
aas
jge
mov
test
push
into
adc
inc
dec
inc
jg
ds
ds
xchg
popa
push
add
loope
xchg
in
les
xor
xlat
fdivrs
sbb
or
lods
and
mov
out
mov
lret
jno,pt
aas
sub
aam
xchg
shl
pop
mov
call
push
aaa
push
cmpsb
fwait
mov
ljmp
dec
mov
lods
inc
mov
test
insb
fwait
movsb
fisttps
mov
das
in
inc
cwtl
out
cwtl
mov
mov
stos
test
inc
shl
sub
pop
cmp
pushf
cs
sub
pop
testb
stos
jne
mov
sub
inc
and
dec
je
jae
flds
popa
adc
fsubrl
inc
je
fwait
dec
fcompl
fiadds
int
xchg
jecxz
shl
stos
sbb
jmp
jmp
popf
rol
lcall
shl
adc
cmp
hlt
inc
mov
xchg
cmove
xor
mov
mov
lock
ja
lcall
jg
add
mov
mov
test
js
mov
xor
push
xor
movsl
jl
push
push
pop
mov
cmp
in
shlb
ficompl
inc
adc
inc
xchg
pop
imul
int3
cmp
and
add
and
add
mov
rorl
jno
xor
incb
mov
lret
mov
mov
hlt
cs
cmp
shlb
xchg
jge
outsl
leave
xchg
cmpsl
imul
test
mov
jmp
inc
sub
jmp
push
jp
shr
cltd
add
inc
sbbb
insl
pop
or
repnz
and
sbb
out
mov
rclb
adc
cli
xor
clc
pusha
ffreep
lods
popf
addr16
and
les
cmp
xorb
xor
jne
mov
cmp
outsl
sbb
push
adc
jno
fisubrl
adc
mov
sub
fistpll
out
shll
ja
adc
pop
adc
xchg
nop
out
pop
pop
push
mov
aad
stc
lds
and
outsl
into
in
pushw
fnstcw
inc
add
adc
push
insb
call
xor
loope
xchg
or
mov
out
fdiv
mov
andl
shlb
pop
cmpsl
dec
or
mov
ss
subb
mov
push
sar
add
sub
pop
aam
test
inc
mov
lods
pop
out
cmp
pop
and
lock
lea
mov
addl
push
loop
or
pop
or
repz
inc
cmpsl
cs
outsl
jmp
and
fdivrp
negb
shll
cmc
fidivl
ljmp
jl
imul
ljmp
or
fidivrs
cmp
xchg
jle
xchg
mov
ds
adc
dec
add
push
stos
pop
push
push
outsb
push
inc
cmp
in
sub
adc
xor
sbb
jo
les
subb
std
cmpsb
mov
xchg
pop
gs
inc
adc
jb
cmp
shll
jae
lea
insb
inc
push
dec
pop
stos
notl
jbe
andb
pop
std
orb
mov
sub
pushf
push
add
jecxz
test
push
pop
pop
xor
cli
addr16
push
push
jle
dec
dec
mov
clc
stos
jle
cmp
scas
jb
mov
cmp
mov
es
stos
cmpsb
mov
cli
mov
mov
cwtl
arpl
jae
xor
dec
jle
mov
rcll
add
subl
shll
jno
mov
fst
sub
xor
cmp
cmc
jo
pop
pop
add
push
adc
jle
pop
pop
inc
jmp
sbb
xor
ja
outsb
sbb
and
dec
mov
jle,pn
jno
fstpl
jp
cmpb
adc
cs
jl
dec
cs
jbe
ret
lret
std
dec
stos
inc
push
add
mov
std
push
jmp
adcl
iret
or
dec
aaa
icebp
insb
aas
out
arpl
lea
jne
and
mov
jge
out
mov
ljmp
mov
and
mov
rorb
fldcw
xchg
pop
in
enter
xlat
mov
and
loope
mov
mov
out
jg
aas
jge
mov
test
push
into
adc
inc
dec
inc
jg
ds
ds
xchg
popa
push
add
loope
xchg
in
les
xor
xlat
fdivrs
sbb
or
lods
and
mov
out
mov
lret
jno,pt
aas
sub
aam
xchg
shl
pop
mov
call
push
aaa
push
cmpsb
fwait
mov
ljmp
dec
mov
lods
inc
mov
test
insb
fwait
movsb
fisttps
mov
das
in
inc
cwtl
out
cwtl
mov
mov
stos
test
inc
shl
sub
pop
cmp
pushf
cs
sub
pop
testb
stos
jne
mov
sub
inc
and
dec
je
jae
flds
popa
adc
fsubrl
inc
je
fwait
dec
fcompl
fiadds
int
xchg
jecxz
shl
stos
sbb
jmp
jmp
popf
rol
lcall
shl
adc
cmp
hlt
inc
mov
xchg
cmove
xor
mov
mov
lock
ja
lcall
jg
add
mov
mov
test
js
mov
xor
push
xor
movsl
jl
push
push
pop
mov
cmp
in
shlb
ficompl
inc
adc
inc
xchg
pop
imul
int3
cmp
and
add
and
add
mov
rorl
jno
xor
incb
mov
lret
mov
mov
hlt
cs
cmp
shlb
xchg
jge
outsl
leave
xchg
cmpsl
imul
test
mov
jmp
inc
sub
jmp
push
jp
shr
cltd
add
inc
sbbb
insl
pop
or
repnz
and
sbb
out
mov
rclb
adc
cli
xor
clc
pusha
ffreep
lods
popf
addr16
and
les
cmp
xorb
xor
jne
mov
cmp
outsl
sbb
push
adc
jno
fisubrl
adc
mov
sub
fistpll
out
shll
ja
adc
pop
adc
xchg
nop
out
pop
pop
push
mov
aad
stc
lds
and
outsl
into
in
pushw
fnstcw
inc
add
adc
push
insb
call
xor
loope
xchg
or
mov
out
fdiv
mov
andl
shlb
pop
cmpsl
dec
or
mov
ss
subb
mov
push
sar
add
sub
pop
aam
test
inc
mov
lods
pop
out
cmp
pop
and
lock
lea
mov
addl
push
loop
or
pop
or
repz
inc
cmpsl
cs
outsl
jmp
and
fdivrp
negb
shll
cmc
fidivl
ljmp
jl
imul
ljmp
or
fidivrs
cmp
xchg
jle
xchg
mov
ds
adc
dec
add
push
stos
pop
push
push
outsb
push
inc
cmp
in
sub
adc
xor
sbb
jo
les
subb
std
cmpsb
mov
xchg
pop
gs
inc
adc
jb
cmp
shll
jae
lea
insb
inc
push
dec
pop
stos
notl
jbe
andb
pop
std
orb
mov
sub
pushf
push
add
jecxz
test
push
pop
pop
xor
cli
addr16
push
push
jle
dec
dec
mov
clc
stos
jle
cmp
scas
jb
mov
cmp
mov
es
repnz
outsl
push
out
rolb
lcall
lret
mov
fcoml
shlb
xchg
into
mov
push
jae
xor
outsl
sbb
subb
imul
roll
popa
xchg
jmp
xor
adc
jno
scas
push
adc
sbb
bound
aaa
xor
xlat
mov
popa
lea
subl
or
outsb
jnp
push
repz
nop
imul
and
cltd
iret
mov
jo
inc
sti
mov
es
sub
xchg
and
xchg
data16
push
jle
inc
pop
insb
cmp
push
mov
add
and
push
fisubs
lcall
arpl
mov
jbe
mov
lahf
cli
mov
jmp
mov
int
add
cmpsb
cwtl
mov
mov
cmp
xor
push
leave
push
sbb
std
push
push
mov
mov
sarl
push
mov
and
push
pop
dec
rolb
or
into
xorl
cld
xor
adc
sbbl
addr16
and
or
sti
add
and
daa
and
ljmp
jne
mov
adc
cld
xchg
pop
je
cmpsb
loopne
ficoml
sbb
fimuls
add
stos
pop
aad
aas
add
fsts
xor
or
jl
popa
sbb
fwait
and
dec
sbb
sub
leave
dec
aam
mov
aad
and
ret
dec
mov
fistpl
push
fisttps
popf
pop
scas
fwait
inc
movsb
xchg
jge
out
adc
or
mov
or
dec
adc
sub
mov
mov
xor
inc
push
imul
jmp
sub
xchg
jl
pop
xchg
or
pop
push
push
pop
push
or
int
xlat
mov
fwait
push
sti
imul
inc
movl
das
repz
xchg
cltd
push
ja
mov
xor
out
pop
jmp
popa
scas
faddl
ret
mov
push
jne
jno
jmp
bound
pop
dec
aad
adc
adc
push
fnstsw
mov
jns
jecxz
fidivrl
xor
pop
lcall
mov
mov
or
sub
cmpsb
loop
xchg
rol
inc
incl
sbbl
push
add
in
imul
gs
cmp
enter
repnz
mov
daa
cli
in
mov
xchg
lods
cli
test
sub
mov
xlat
jp
sbb
jnp
and
pop
addr16
pop
cmpsl
ret
or
mov
sub
pop
popl
movsl
ljmp
outsl
jmp
lcall
mov
push
mov
push
or
in
call
jns
insl
cmp
rcrl
test
adc
popf
dec
popa
sbb
adc
sub
jnp
pop
cmp
push
test
ret
sub
xchg
dec
sbb
scas
shl
movsl
dec
adc
cwtl
pop
pop
movzbl
scas
mov
inc
andb
aad
pop
movntps
jle
lods
lds
push
rcrl
insb
cld
aam
push
mov
mov
push
push
cmp
loop
or
lods
ss
imul
insb
stos
fisttpll
movsb
mov
pop
mov
lock
jb
sub
cmp
hlt
inc
es
adc
sub
cmp
arpl
dec
lock
sub
dec
mov
add
fsts
add
push
xchg
mov
and
out
lock
pop
sbb
into
jnp
mov
shll
sbb
push
pop
push
stc
pop
pushf
sub
sub
push
push
mov
in
xor
mov
add
sbb
je
push
sub
jmp
mov
mov
lock
popf
mov
adc
loopne
orb
insl
jnp
mov
push
loop
popf
jae
cli
and
aad
mov
lret
xchg
mov
push
mov
push
dec
gs
jecxz
sarl
gs
in
mov
subb
mov
mov
fnsave
fsubrs
mov
push
sub
lea
sti
jle
cmp
rclb
add
jg
push
xchg
out
jp
enter
lds
pushf
jbe
push
mov
pop
pushf
clc
jbe
loop
stos
es
fwait
ja
lods
insb
cs
out
lret
mov
scas
and
mov
cs
xchg
movsl
add
aam
pop
dec
cmp
mov
xor
in
les
imull
movsb
dec
inc
push
mov
mov
lahf
ret
lahf
push
cli
movsb
sub
adc
push
rcr
clc
out
inc
pusha
in
cli
out
cmpsb
pop
lret
lahf
sub
lea
inc
shlb
mov
fidivl
lock
aas
adc
test
jnp
push
adc
popa
cmp
out
inc
divb
mov
ror
pushf
test
arpl
outsb
adcb
pop
xlat
lea
in
push
sbb
clc
incb
sti
mul
sub
dec
imul
sarb
add
mov
aad
push
les
adc
xor
ds
je
into
or
cwtl
into
pop
sub
jb
adc
xor
popf
xchg
push
xchg
adc
movsbl
mov
sbb
sbb
mov
pop
loope
sub
adc
xor
lds
pop
inc
mov
dec
push
jno
dec
in
loope
aad
push
jno
aam
out
fisubrl
jle
xchg
inc
int3
mov
inc
jp
rclb
icebp
cmpsb
bound
fcmove
xor
mov
xchg
xchg
pop
or
mov
push
ljmp
and
div
xchg
xchg
push
test
xchg
add
daa
cs
cmp
ret
xchg
lds
inc
lahf
leave
xor
xor
lds
shrl
fdiv
test
rclb
xchg
adc
negl
in
fisubs
cmpsl
cld
or
inc
push
sub
add
or
cmc
sbb
mov
mov
int
mov
popf
dec
scas
je
gs
xchg
addb
push
push
and
popf
lock
pop
fucomi
iret
std
test
lret
stc
divl
int
das
les
sbb
mov
mov
push
fcomps
add
fs
aam
push
test
dec
insl
jl
dec
nop
in
clc
call
pop
jle
hlt
mov
add
in
cwtl
pop
inc
jbe
push
or
mov
clc
ljmp
shrl
pop
mov
xor
cmpsl
dec
mov
fsubrl
data16
enter
mov
aas
pop
aaa
dec
add
push
shlb
cmp
fwait
adc
adc
jae
pop
sub
xchg
or
shll
fbstp
cmp
dec
dec
test
jmp
icebp
outsl
mov
sahf
jno
sub
add
lods
mov
movsl
mov
xchg
pop
pop
mov
std
add
test
adc
call
ret
jecxz
jecxz
jb
ret
xchg
sub
push
xchg
aaa
inc
lahf
sub
push
cli
or
stos
cltd
and
jb
cmp
in
je
mull
pop
mov
inc
xchg
stc
xor
mov
sub
xchg
and
call
in
sbb
movsl
leave
mov
in
in
sub
wbinvd
setbe
xchg
push
push
push
xor
xchg
lods
jns
imul
xor
int
and
pop
inc
mov
movl
mov
mov
pop
adc
aad
dec
cmpsb
into
aad
js
sbb
push
js
cmp
mov
add
cmp
pusha
push
xor
in
pop
dec
fmuls
rcrl
push
add
ret
shlb
out
dec
dec
lods
pop
cmp
mov
repz
in
idivl
sbbl
xor
test
add
hlt
jne
insb
out
mov
mov
popl
push
testl
push
push
mov
ret
ds
arpl
js
outsb
scas
sbb
test
dec
dec
pop
xchg
lcall
rcrl
push
add
sub
aad
push
nop
notl
inc
lcall
sub
inc
xchg
cmp
iret
imulb
sbb
imul
fistpll
push
xchg
fdivl
lea
iret
loope
loop
jl
dec
cmp
das
pop
adc
stos
into
in
fs
push
cmp
xlat
inc
jbe
inc
fcoms
inc
cmp
fnstsw
test
jmp
xor
in
popf
sub
dec
ljmp
sbb
add
dec
jno
jne
in
xor
jge
leave
pushl
icebp
out
pop
cwtl
mov
addr16
and
pushf
mov
stos
icebp
push
sbb
outsb
and
inc
mov
call
pop
pop
scas
push
ret
mov
js
xlat
lea
enter
stos
jmp
jnp
stc
inc
cld
sarl
hlt
or
addr16
cld
lcall
pop
xor
jle
out
xchg
out
mov
mov
clc
sbb
cltd
or
gs
cmpsb
adc
sub
and
dec
xor
jl
movsl
popf
pop
int3
cmp
movsb
and
das
fistpll
push
lahf
sbb
icebp
dec
rclb
dec
sbb
jp
adc
push
sub
xchg
sahf
and
sbb
xchg
pop
cmp
push
add
cmp
test
outsb
jecxz
cmp
or
or
dec
sbb
xor
dec
mov
mov
inc
mov
fisttpl
xchg
out
out
and
or
test
lahf
add
leave
mov
leave
dec
add
lcall
subb
and
stos
xchg
or
sub
sbb
out
jbe
out
jge
jno
mov
jno
fildl
dec
push
and
inc
test
xor
xor
out
rcrb
movsl
and
sahf
push
mov
inc
pop
xchg
xor
mov
stos
out
fstpt
cmpl
mul
clc
add
sub
mov
stos
jmp
or
andb
mov
mov
mov
adc
mov
xchg
adc
leave
jp
ja
fidivrl
add
mov
ret
faddl
loopne
shlb
int3
jecxz
pop
enter
sbb
stos
in
mov
pop
scas
bnd
shr
sbb
sbb
mov
and
mov
dec
fiadds
mov
int3
pop
je
outsb
and
lods
push
loopne
into
push
je
pop
outsl
lds
and
mov
xlat
leave
in
sbb
xchg
pop
adc
lahf
inc
jb
adc
insb
arpl
jg
jae,pn
insl
in
rorb
adc
push
push
cmp
xchg
push
pop
sub
xchg
nop
dec
mov
xchg
dec
pop
outsl
pop
lcall
sub
int3
in
mov
faddp
cld
pusha
cltd
test
fmuls
mov
pop
stos
imul
mov
push
test
jle
rorb
jb
jmp
inc
lret
pusha
add
sbb
std
pop
add
mov
jmp
aaa
scas
push
mov
dec
inc
les
imul
out
sahf
add
mov
xor
pop
push
mov
cmp
dec
mov
add
loopne
add
mov
xor
daa
out
pop
out
xchg
pop
loop
xchg
in
nop
or
ljmp
out
pop
addb
adc
arpl
inc
daa
sub
js
pop
insb
cmp
pop
mov
dec
adc
jmp
mov
dec
loopne
scas
out
xchg
insl
arpl
inc
out
pop
mov
mov
xchg
sbb
add
fidivs
sbb
notl
xchg
mov
xor
push
test
dec
xor
push
mov
stos
pop
jae
jae
sub
sbb
scas
xor
adc
int
outsl
int
pop
stc
jo
or
enter
fistps
gs
out
pop
leave
inc
dec
stos
inc
mov
in
mov
and
cmpl
dec
jo
je
shrl
adc
fcoml
jns
cld
lret
mov
xchg
std
jne
jge
divb
int
mov
mov
add
mov
or
daa
xor
out
shll
in
int
xor
mov
lahf
cld
mov
dec
in
push
negl
out
inc
cmc
xchg
rclb
es
mov
fs
dec
cli
mov
aaa
call
xchg
jbe
shll
sbb
fiaddl
subb
lcall
dec
mov
push
cmpsl
jb
and
mov
dec
mov
inc
loop
xchg
imul
pop
test
cmp
mov
adc
push
sbb
xchg
je
inc
popa
push
lods
ror
je
sbb
cmp
jecxz
xlat
push
xor
rorl
pusha
lcall
je
hlt
lds
test
lods
pop
cmp
in
sbb
hlt
mov
mov
push
cli
and
pop
dec
je
dec
outsl
adc
fisttps
ror
rclb
mov
icebp
pop
sbb
or
ljmp
pop
pop
mov
sub
xor
push
rcrb
jns
fs
and
pop
clc
stc
mov
inc
shll
roll
lret
push
dec
popa
jns
lds
jg
andnps
ss
lock
jns
xchg
sub
jecxz
fidivrl
popf
push
add
jno
sub
inc
std
jno
sub
ss
dec
jmp
std
adc
sbb
subl
cltd
scas
mov
push
stos
ljmp
and
scas
fldl
cwtl
je
xchg
push
adc
inc
mov
add
loopne
clc
mov
fs
mulb
scas
inc
jecxz
rorl
insb
cmp
add
mov
mov
mov
aam
xor
jns
dec
mov
cmp
scas
xchg
test
arpl
lea
push
lahf
mov
push
cmp
mov
inc
loop
cmpsb
push
push
loop
add
and
xor
dec
insb
or
mov
in
hlt
xchg
inc
pop
je
push
bound
dec
lahf
mov
xchg
out
jle
push
test
in
stos
je
mov
jl
inc
fmull
loopne
std
aaa
sbb
mov
pop
xchg
pop
in
test
lahf
lea
adc
incb
jnp
add
lret
movsb
cmpsb
pop
pop
test
test
jmp
adc
push
pop
pop
or
out
sub
dec
xchg
faddp
rsm
push
movl
pop
push
push
fldt
idivl
xchg
sub
xor
scas
cmp
mov
push
xor
lret
sub
cli
lods
adc
mov
mov
je
lds
outsb
adc
add
insb
push
mov
lret
jl
testl
sbb
mov
decb
push
push
xchg
dec
jnp
imul
jns
mov
aaa
jle
or
pop
mov
aas
pusha
mov
mov
push
cs
xchg
out
push
mov
pop
xorl
lret
mov
cmpb
jle
ljmp
sub
add
rcl
icebp
ljmp
pop
push
jle
cmp
fdivr
ss
mov
mov
cltd
adc
cmp
mov
fnsave
loope
mov
inc
dec
icebp
mov
je
in
pop
sbb
sbb
aaa
mov
pushl
pop
xor
lret
ljmp
adc
fistpl
adc
arpl
in
icebp
bound
inc
pop
or
add
ret
aam
jns
rol
js
and
pop
xor
cltd
lods
adc
das
dec
shl
cmpsb
es
adc
ja
sbb
out
iret
mov
hlt
aam
cmpsb
inc
aaa
inc
jo
push
jns
repz
loopne
mov
lahf
push
cmpsl
mov
stos
mov
int
jnp
cmp
mov
sbb
pop
xor
mov
sbb
or
xchg
inc
dec
adc
add
mov
aam
scas
pop
jge
jmp
aaa
icebp
adc
clc
loopne
imul
adcl
int
lcall
pushf
int3
mov
mov
pop
jae
addr16
rorl
mov
call
xchg
mov
vmwrite
fdecstp
add
cmp
cmp
fnstenv
jmp
clc
das
push
cmp
lods
add
popa
and
aaa
stos
push
sbb
shl
add
fiaddl
stc
call
push
xlat
fldt
add
je
inc
shrb
mov
mov
lcall
fs
js
scas
and
outsl
js
dec
push
iret
push
push
push
jp
rcll
inc
mov
push
test
mov
or
mov
mov
scas
ljmp
insl
sbb
mov
mov
aad
cmp
ret
es
mov
fisttpl
aaa
clc
mov
dec
pop
addl
lods
jg
pop
lret
icebp
fsubl
mov
push
fbstp
xlat
mov
data16
mov
mov
inc
leave
cmpsl
fs
jle
cmp
xlat
jno
in
call
outsl
cmp
or
shld
cmp
fucomip
les
sub
push
mov
repnz
imul
dec
lea
or
mov
push
push
xor
in
and
inc
aad
hlt
jle
iret
lret
xor
or
sub
inc
xchg
inc
jg
pop
les
jnp
cmp
mov
jno
xchg
xor
add
fstps
outsl
out
jae
sub
movsb
arpl
push
daa
inc
xorb
insl
lret
decl
inc
dec
sub
xchg
or
sbb
cmp
push
inc
ja
pop
lret
icebp
test
imul
pop
jmp
adc
mov
imul
jbe
fidivs
cmp
in
popa
and
push
xor
jg
jne
das
add
cld
outsb
mov
inc
xchg
push
mov
and
jae
and
punpckhwd
sbb
lods
imul
jl
data16
out
ficomps
add
nop
inc
mov
cmp
add
or
jnp,pn
inc
add
test
push
lret
aas
shll
jae
rclb
fsubl
cli
and
testb
movsl
fadd
inc
loop
dec
pop
mov
mov
inc
cmp
outsl
in
inc
stc
ds
xchg
xchg
arpl
sbb
sub
inc
and
jae
jnp
leave
pop
and
push
jno
fwait
loopne
mov
nop
jp
shl
fnsave
daa
inc
xlat
xchg
cmc
push
vmwrite
repz
fnstenv
add
cs
push
call
add
pop
bound
test
jns
repnz
inc
sbb
mov
jnp
dec
test
push
add
stc
stos
xchg
jo
lods
xor
repnz
mov
test
test
dec
or
cmp
pusha
aas
int
pop
cltd
aas
xor
pop
movsl
or
out
inc
and
dec
shll
popf
jns
adc
push
cmpsb
mov
push
dec
js
inc
dec
stos
pusha
in
out
dec
pop
cld
and
mov
cmp
mov
out
movsb
or
sub
pusha
jno
mov
stos
ret
jmp
xorl
ror
cltd
mov
fcomps
xchg
mov
push
aas
outsl
add
pop
call
cmp
rclb
pop
mov
shll
cmp
push
jle
and
mov
xlat
pushf
pop
fscale
shll
add
add
roll
add
adc
les
rorb
adc
roll
rorl
sbb
test
cwtl
jo
xor
cmpsl
ljmp
jecxz
jbe
sub
cmp
cmp
xor
pushf
inc
movsl
outsl
sub
outsb
sub
mov
dec
lods
adc
scas
add
pop
xchg
mov
rcrl
test
mov
and
pavgw
ds
mov
jge
dec
idivl
in
jno
loope
andl
push
pusha
fcoml
sbb
lods
or
jecxz
popf
imul
sarl
sbb
cs
out
lahf
jb
ds
lods
movsl
push
inc
stc
lret
cmp
push
mov
cmpsb
int3
mov
addr16
and
out
inc
ds
imul
add
out
xlat
rcll
int3
xor
or
dec
mov
repz
das
cmp
xor
cmc
out
in
inc
dec
das
or
push
mov
lea
sbb
jnp
mov
outsb
adc
jmp
dec
push
inc
pushf
mov
mov
test
and
int
mov
es
inc
movsl
ja
jmp
inc
mov
xchg
push
roll
mov
xor
jmp
lret
jae
scas
movsb
popf
add
gs
mov
add
push
dec
sbb
push
cmpsb
addb
push
mov
add
outsl
fs
mov
ds
les
in
lods
xchg
gs
and
mov
lds
subl
into
or
mov
and
das
stc
aaa
jmp
sbb
pop
sub
jmp
mov
loopne
out
cmpsl
lea
mov
scas
add
xor
in
shrl
das
loop
pop
adc
std
add
aas
and
push
lret
ja
xor
gs
sub
rcll
arpl
lret
or
jmp
iret
cmpl
gs
jge
loop
jns
loop
inc
mov
push
adc
loope
pop
hlt
dec
popa
lcall
push
filds
out
mov
test
lea
shr
mov
out
dec
dec
movsb
sub
pop
inc
mov
xlat
iret
cmp
fdivs
lds
sub
loop
lahf
pushf
js
and
cltd
sbb
xlat
sbb
movsb
jg
sbb
mov
popf
sbb
and
xchg
inc
repz
mov
push
and
and
xor
test
or
jmp
xor
mov
mov
out
mov
push
lcall
in
mov
lahf
test
jl
mov
or
test
fs
fimuls
jmp
mov
jmp
push
jge
sti
push
out
jle
gs
push
loop
sahf
inc
jge
jecxz
fs
push
loope
jne
mov
push
sub
push
mov
cwtl
xor
loop
and
push
or
sbb
jb
pushf
mov
add
adc
je
std
repz
pop
mov
fidivs
out
lret
movsl
testl
imul
jmp
aad
pushf
push
jmp
xchg
aam
repnz
cmp
inc
inc
ljmp
mov
or
and
push
orl
sbb
xlat
bound
adc
fsubl
dec
in
or
sbb
nop
lret
inc
dec
add
lds
cwtl
incb
mov
push
or
ror
push
adc
xchg
out
cltd
iret
jmp
and
pop
fisubrs
dec
mov
mov
mov
jp
test
gs
jo
mov
fwait
hlt
outsl
sbb
lret
arpl
add
cmpsl
pop
cmc
add
sbb
jl
adc
fldl
push
sahf
lds
xchg
adc
mov
cmp
sub
inc
sbb
out
dec
jns
dec
mov
lock
stos
mov
sub
mov
repz
sbb
or
mulb
cmp
bound
sbb
das
mov
jmp
or
lock
mov
and
mov
jns
pop
push
cmp
loop
outsl
imul
jle
lea
dec
jne
imul
arpl
fwait
scas
insl
mov
aaa
lea
lahf
dec
adc
sbb
adc
aaa
jp
mov
push
xchg
or
imul
sub
cmp
pop
mov
adc
mov
shll
leave
mul
aaa
mov
add
push
andl
mov
or
gs
mov
popa
add
fs
test
test
adc
in
lahf
fbstp
dec
fs
aas
mov
insl
insl
push
push
mov
jo
push
cmp
ds
dec
sub
aad
jo
xchg
dec
add
sub
jb
push
js
nop
fadds
push
inc
aam
test
jg
cli
repnz
push
inc
or
inc
push
xor
mov
call
mov
xchg
lretw
fwait
gs
mov
or
pop
icebp
jle
out
imul
cmpsl
lahf
movsl
add
in
movsb
int
popa
psrld
xchg
dec
push
add
stos
add
movsl
xchg
fstps
sbb
mov
cld
jnp
push
xchg
pop
jae
aad
aad
addr16
daa
mov
sub
dec
lahf
cmp
pop
xchg
loop
aas
mov
int
test
xchg
ja
cmp
cmpsb
ljmp
lods
in
gs
sbb
shlb
subb
sub
xor
or
jmp
or
jge
scas
xchg
rol
pop
or
mov
lods
repz
cmp
push
sub
std
add
push
arpl
jg
sbb
sahf
dec
inc
pop
and
mov
clc
outsl
test
lods
jns
cmp
sbb
jnp
repnz
jo
jae
and
fst
xor
ljmp
add
addb
sub
lcall
sbb
lahf
aas
call
orl
or
imul
mov
xchg
pop
jnp
mov
inc
mov
mov
cltd
push
daa
test
insl
je
adc
fdivs
cmp
aaa
sub
mov
sub
data16
cld
adc
cmp
push
pop
into
scas
sbb
rorl
pop
loop
dec
add
or
cmp
mov
add
pop
push
icebp
mov
sub
push
ds
push
and
std
arpl
push
jmp
push
shlb
push
pop
movl
mov
dec
cltd
lahf
cltd
inc
add
cmp
pop
jae
adc
stos
ret
cmp
mov
jne
mov
in
bound
out
gs
clc
xchg
adc
fisubs
fstpt
add
out
inc
push
pop
jecxz
data16
jo
sub
fisttps
xchg
iret
arpl
mov
lods
mov
repnz
adc
outsb
inc
cmp
fwait
fs
pop
jg
inc
or
jge
outsb
scas
mov
and
fwait
call
ret
insb
push
xchg
pusha
adc
fwait
mov
in
ja
out
les
andb
cmpsl
add
xor
mov
push
jae
daa
movsl
xor
mov
jae
dec
and
sti
add
cli
pop
data16
stc
push
add
out
loope
add
mov
iret
dec
jp
and
push
repnz
or
out
int3
imull
fsubs
add
jle
out
xor
jns
xchg
or
add
add
arpl
aaa
push
cmpsb
jne
xchg
mov
mov
fcom
stos
mov
pop
or
jnp
shl
or
or
pop
leave
jp
push
mov
popa
test
lcall
lock
push
int3
and
and
or
add
in
sub
in
push
adc
adc
jmp
adc
sarl
mov
popa
ret
mov
mov
adc
mov
cmp
push
inc
cwtl
xlat
lret
and
lret
lock
xor
rcrb
xchg
mov
not
out
adc
xchg
fbld
sub
inc
adc
out
enter
mov
jg
dec
and
test
mov
xor
sbb
insb
xor
sbb
dec
lock
pop
mov
cmc
lods
outsb
loopne
fisubs
mov
dec
stos
push
pop
pusha
ret
popf
or
test
or
pushf
sub
repnz
xor
mov
adc
gs
jmp
xor
push
sub
add
xchg
xchg
mov
cmpsl
imul
and
jno
xor
add
mov
addr16
in
insb
push
add
scas
push
dec
push
pop
adc
sub
xor
sti
movsb
dec
lods
mov
jle
cmp
mull
popf
mov
in
pop
xor
cmp
xor
nop
adc
sub
mov
cltd
add
lcall
repz
outsl
mov
sub
roll
test
cld
stos
popf
rcrl
clc
in
jns
popf
call
mov
fldenv
cmp
push
xchg
mov
in
xor
add
dec
dec
movsl
pop
addb
mov
jnp
pop
data16
mov
dec
in
xor
sub
div
scas
mov
int3
sbb
push
aad
orl
ja
aam
cmp
push
test
push
mov
xchg
repz
adc
clc
push
lock
mov
sarl
or
mov
cmp
sub
insl
jbe
lahf
fstpt
dec
pop
inc
popf
cs
mov
add
pop
pop
pop
or
arpl
jge
sub
push
jecxz
or
cmc
cmp
adc
call
push
fnstenvs
es
or
nop
scas
mov
clc
mov
pop
int
test
dec
mov
push
cli
or
inc
scas
jl
pop
xor
xor
icebp
mov
add
pop
jmp
inc
or
dec
pop
insb
aad
packuswb
add
fmull
cmp
out
pushfw
sub
push
enter
dec
push
jp
ret
push
test
test
addr16
shll
xchg
dec
lods
mov
pop
out
sub
js
in
sub
push
imul
xchg
xchg
cltd
cmp
pop
orb
jmp
pop
pop
leave
push
loope
fsubr
push
mov
cmpb
dec
mov
rcl
xchg
mov
mov
sarl
ljmp
test
in
mov
testb
icebp
adc
sub
ss
js
dec
pop
jb
in
out
adc
movsl
mov
je
ret
inc
jb
ret
sub
mov
pop
fmul
fdivrs
lret
popa
stos
sub
push
cwtl
dec
jl
inc
mov
pop
sub
icebp
setp
stc
cmp
gs
or
sub
loop
scas
clc
subl
inc
int
aas
mov
mov
hlt
lahf
mov
xchg
hlt
xor
or
mov
cs
cmp
adc
dec
out
or
ret
sub
test
mov
xor
stos
mov
gs
dec
jle
and
sub
popa
mov
lea
stc
andb
loop
xor
pop
add
xchg
pop
lret
push
mov
inc
push
stos
sub
jns
in
xor
pop
add
in
mov
in
rclb
pop
or
stc
adc
sub
dec
aas
dec
jp
movsb
shlb
fs
add
jg,pn
loop
jns
adc
imul
mov
ljmp
stos
lods
xchg
insl
popf
mov
sub
in
popf
cltd
pop
je
add
test
outsl
ss
iret
xchg
jnp
push
les
jl
cmp
jle
jmp
cs
xchg
mov
out
je
or
clc
pop
add
hlt
stc
push
jge
adcb
fidivrl
leave
xchg
xchg
sub
mov
jo
push
mov
in
lea
test
mov
push
lea
or
adc
gs
push
pop
or
rorl
xlat
out
and
adc
das
jg
into
out
xchg
jns
cs
xchg
pop
ret
mov
je
jl
in
xor
sub
pop
enter
push
jbe
das
jecxz
cli
cmp
cmp
mov
mov
mov
push
mulb
sbb
push
mov
jle
sbb
adc
sub
xchg
sbb
aas
xchg
imul
jmp
test
mov
xor
sti
gs
das
iret
and
lcall
sbb
in
fs
mov
cmp
jge
jnp
xor
mov
xrelease
or
inc
lret
stos
dec
jmp
mov
pop
sub
aaa
pusha
cli
and
std
xchg
icebp
inc
test
imul
mov
push
flds
mov
aas
mov
repnz
push
fnstenv
fnstsw
out
cmp
or
testb
fidivrs
adc
or
shl
xchg
inc
in
cld
mov
in
inc
enter
aaa
cmp
lock
adc
outsb
cmp
sub
subl
inc
xchg
push
xchg
ficomps
cli
jbe
frstor
addr16
cmp
daa
ja
jnp
in
or
stc
mov
aaa
mov
nop
push
pushf
sbb
ficomps
ss
imul
js
pop
repz
mov
mov
shl
sub
clc
pop
cmp
pop
pop
ss
insl
aam
sub
mov
mov
insb
lea
jae
sbb
inc
cmc
mov
mov
scas
dec
sahf
push
xchg
mov
cmpsb
pop
cmc
adc
rcll
sub
aaa
rorl
in
push
mov
nop
popl
out
scas
aad
mov
push
cmpsl
hlt
in
mov
cmp
inc
jmp
lea
test
xor
outsb
inc
fwait
xor
push
push
sub
pop
dec
jmp
iret
out
adc
fs
in
sbb
sti
dec
mov
lods
adc
dec
mov
int
aas
icebp
test
push
sub
lods
add
call
mov
fisubrs
subl
mov
mov
push
ds
test
popl
cmp
jbe
lds
and
jne
inc
inc
xchg
aas
inc
mov
out
mov
pop
sbb
jbe
xchg
xchg
jmp
cmp
int3
jge
sub
fnsave
int3
mov
aas
std
inc
mov
fcomi
inc
mov
and
sub
icebp
shr
jge
sub
or
xchg
loope
xchg
clc
and
lret
pop
cmp
int3
sbb
add
jge
in
or
ljmp
xchg
ljmp
ja
inc
addr16
cmpsb
dec
push
add
repnz
jno
inc
jmp
cli
lcall
xchg
push
sbb
cmp
cli
popf
lcall
addb
iret
stos
sub
inc
lods
dec
sti
insl
push
adc
cmc
stos
jne
lods
push
jne
sub
and
mov
dec
imul
hlt
ds
sbb
testl
ficomps
jp
std
fwait
movb
aaa
cltd
cmp
mov
cltd
add
dec
xlat
loop
and
sbb
or
mov
insl
xor
pop
lock
adc
mov
out
scas
gs
xor
jns
mov
loope
mov
cmp
loop
enter
in
fstpl
mov
js
ljmp
fldcw
mov
inc
push
lock
push
pop
je
fimull
out
dec
arpl
jno
cli
cmp
jns
adc
sbb
push
adc
inc
in
mov
add
test
xor
aas
adc
sbb
insl
adc
daa
push
jmp
test
sti
lret
enter
cld
mov
icebp
mov
push
cli
push
in
push
jmp
roll
lods
mov
hlt
inc
add
lret
sub
ljmp
xor
mov
mov
sub
xchg
in
movsb
pop
lret
std
shr
shl
xor
xlat
cli
and
mov
stc
fwait
lret
jecxz
and
mov
mov
nop
icebp
mov
ja
jnp
mov
or
jno
ljmp
ds
push
rep
xlat
bound
cmp
dec
jno
gs
cmpb
lds
loope
sbb
mov
fmuls
out
xchg
inc
iret
add
push
pop
sbb
hlt
out
push
loope
inc
loope
cmp
sbb
sbb
das
mov
fwait
movsl
iret
in
or
js
fidivl
lock
sub
data16
jns
loop
xlat
sbb
clc
dec
mov
nop
ja
outsl
clc
sarl
or
xchg
sbb
shrb
fildll
in
bound
xor
mov
mov
subb
dec
mov
pop
jg
int3
sarl
fildl
jmp
inc
push
mov
xor
shlb
mov
scas
addb
call
in
stos
xchg
add
lea
mov
fidivrs
adc
inc
rcrb
lods
mov
and
repnz
dec
pop
push
into
xchg
gs
das
es
adc
pop
cld
enter
iret
lea
test
xor
je
int
divb
out
lret
cmc
in
sti
adcl
sbb
sarl
ret
add
cmp
mov
mov
mov
test
xchg
pop
xchg
test
xor
sbb
pop
icebp
adc
mov
jl
pop
arpl
mov
mov
fisubs
sub
add
push
ja
ds
jbe
and
aas
fildll
sub
ret
xor
sbb
test
gs
in
push
ljmp
stos
add
sbb
stc
push
ljmp
lcall
or
shll
pop
mov
jmp
fldl
dec
mov
icebp
pop
test
loope
imul
sub
ss
sub
dec
outsl
push
push
sub
xor
push
lea
lea
dec
into
xchg
adc
movsl
repnz
dec
int
nop
xor
shr
adc
jecxz
cltd
shl
test
add
in
xorb
mov
jb
sbb
das
cmp
rclb
outsl
add
inc
mov
stc
or
inc
cmp
inc
mov
inc
imul
lods
stos
push
mov
xlat
movsb
shl
push
xchg
popa
icebp
xchg
std
and
fistps
or
test
jnp
repz
mov
popf
or
cmp
mov
repnz
scas
dec
pop
jbe
orb
je
fdivl
sti
cvtpi2ps
rcrb
xlat
adc
daa
push
mov
daa
push
cmp
mov
push
hlt
adc
pop
and
icebp
add
stos
ss
mov
ret
and
xlat
mov
leave
ficompl
mov
jmp
pop
stc
pop
push
ficompl
xchg
jnp
cmpl
lock
pop
leave
outsb
push
call
pop
mov
das
pop
decb
fs
sbb
fnstenv
xlat
jne
jno
cmpsb
hlt
incb
addr16
arpl
mov
inc
inc
cwtl
or
inc
cli
jnp
cmp
incl
out
jg
mov
dec
call
dec
cmp
mov
dec
and
inc
aad
inc
ljmp
push
sub
mov
nop
lods
enter
and
cmp
xor
es
jae
mov
popf
jns
popf
jbe
lret
adc
jnp
je
jge
sbb
pop
lcall
popf
push
sti
ret
arpl
js
dec
vcomiss
sub
arpl
into
xor
in
andl
addb
in
out
jae
divb
xchg
sbb
andl
loop
mov
outsl
sbb
jae
clc
inc
loopne
pop
ret
cltd
sub
stos
and
sub
or
daa
xlat
int3
bndldx
cmp
mov
sbb
add
data16
cmp
add
xchg
mov
hlt
fldcw
sti
push
xchg
das
dec
push
pop
in
out
addr16
call
jge
mov
jnp
pop
addr16
pop
xchg
fcmovnbe
xchg
imul
push
sub
cli
lds
out
rcrl
jle
sub
fwait
mov
push
xchg
sub
pusha
push
lahf
lret
ret
xor
push
mov
xor
out
xchg
jecxz
js
test
jl
or
pop
dec
adc
fisttps
adc
xor
cli
in
daa
push
jmp
lret
scas
jae
stos
rcll
xchg
push
cmpsb
inc
and
inc
jb
mov
sub
std
dec
in
push
lcall
lcall
add
repz
daa
cmpsb
movsb
jge
xor
fwait
add
popf
inc
test
push
cld
or
arpl
inc
mov
mov
insl
add
sahf
ja
push
leave
roll
or
push
sbb
jno
add
add
or
jns
fisttps
mov
mov
inc
ljmp
mov
fisubrs
enter
and
test
push
pusha
or
cmc
bound
push
fwait
pop
int3
xor
fmuls
jl
push
je
sbb
fisubl
or
ret
push
sarl
jge
mov
mov
lret
nop
jecxz
cli
test
sub
xchg
xor
cli
jo
xor
add
std
fisubrs
cmpsb
cs
cmp
pop
jb
lods
sbb
test
in
lods
test
scas
imul
shlb
add
dec
sub
push
jmp
and
cs
fisubrl
dec
js
outsl
ja
in
adc
inc
or
mov
jecxz
mov
jmp
insl
inc
push
lret
mov
xor
pop
imull
outsb
jp
lret
jbe
push
jle
testb
in
adc
xchg
xor
xchg
xor
cmc
jno
aas
xchg
icebp
mov
mov
pop
fiadds
or
out
fdecstp
in
inc
add
mov
sub
push
xlat
je
mov
rcrl
frstor
test
das
stc
mov
stc
mov
imul
call
aaa
movsb
les
lcall
pop
scas
jae
or
fnsave
dec
cmp
data16
push
push
into
jl
pop
adc
mov
mov
popa
cli
xor
lods
iret
adc
adc
adcb
add
pusha
sub
aaa
dec
jmp
lret
xchg
and
mov
das
insl
lea
sub
std
jg
xlat
mov
scas
mov
lds
clc
das
lock
cmp
std
ljmp
pop
hlt
and
fistpll
lods
add
pop
into
in
cmp
daa
or
pop
gs
xchg
mov
xor
xor
inc
repnz
insb
test
mov
add
xchg
sbb
xchg
sbb
loope
repz
lret
repnz
iret
jle
mov
ss
mov
cmp
ljmp
inc
dec
cmp
les
sub
int3
mov
and
cmp
cmpsb
xchg
mov
sub
inc
and
xor
dec
out
test
push
adc
mov
imul
cmp
push
or
pop
ret
jle
sbb
mov
shlb
dec
out
cmp
icebp
mov
mov
fs
inc
nop
mov
mov
lcall
add
stos
out
fidivs
add
pop
ficoml
daa
hlt
in
jbe
pop
loopne
stos
sub
jb
xchg
shll
jne
and
jns
fisubs
ja
imul
jo
out
popa
ret
push
jae
mov
data16
mov
sbb
mov
xchg
mov
enter
or
sub
cs
call
stos
outsl
leave
push
cmp
ljmp
movb
jno
pop
fwait
aaa
pop
arpl
pop
dec
add
or
mov
jg
inc
ja
das
leave
xchg
shll
xchg
mov
addr16
sahf
lcall
decl
mov
jns
stc
or
mov
lods
dec
aaa
adc
mov
mov
xor
divl
inc
push
lret
inc
imul
adc
sbb
jl
mov
out
inc
popf
filds
jae
add
in
aaa
loope
inc
xchg
cmp
cltd
xor
push
cmpsb
mov
test
xchg
xor
adc
cmpsb
adc
nop
mov
iret
shlb
jae
xchg
insb
subb
xor
push
pop
inc
jmp
rclb
ftst
out
cmpsl
sbb
movsb
adcl
mov
xlat
add
or
and
mov
mov
xor
enter
inc
loopne
mov
jmp
mov
push
push
std
or
jne
and
jne
cltd
nop
test
cli
cmpsl
lahf
push
insb
divl
mov
scas
les
mov
cmc
test
insl
jl
test
jae
jne
jg
cmp
inc
mov
pop
xchg
push
cmp
lret
dec
repz
stc
cs
xor
addr16
sbb
pop
lret
imul
lret
aam
push
stos
sub
or
arpl
mov
add
movsl
filds
lock
shrb
outsb
iret
xchg
add
addr16
jmp
out
test
push
gs
cltd
ret
xchg
daa
mov
dec
jge
jg
aam
mov
inc
sbb
daa
mov
mov
mov
mov
xchg
add
and
in
or
mov
push
mov
movsb
sub
sbb
sub
or
in
inc
arpl
push
or
fdivp
cld
sbb
push
fsubs
lret
jbe
icebp
cli
nop
out
and
jae
scas
rcl
imul
leave
cld
test
out
loop
enter
add
cwtl
shll
adc
mov
cmp
inc
inc
dec
mov
sub
inc
testb
inc
mov
daa
cwtl
sub
rolb
ds
sub
fmuls
cmpsl
xchg
cmc
add
and
ret
pop
fdivrl
pusha
in
xchg
xchg
mov
inc
mov
fisttps
xchg
mov
cmp
lret
out
fidivrs
je
cmp
cmovae
xor
out
movsb
popa
mov
inc
jecxz
outsb
pop
push
jmp
dec
xchg
es
out
sbb
dec
pushf
mov
fiadds
ljmp
pop
xor
inc
push
xor
cmp
jecxz
faddl
cltd
loope
incb
fwait
cmpsl
repz
push
out
adc
adc
push
fnstcw
sbb
shrl
sub
lret
push
rolb
jp
inc
xor
lds
add
inc
aam
push
jno
hlt
pop
fisubrl
mov
pop
cmp
mov
dec
lret
push
jno
adc
push
pop
div
std
pop
je
test
mov
xchg
and
pop
ror
outsl
insb
std
imul
loop
adc
clc
inc
mov
add
sbb
aaa
jo
and
adc
hlt
mov
push
push
pop
iret
cmp
imul
sbb
iret
arpl
add
xchg
dec
imul
stc
xor
nop
shl
ss
ljmp
inc
jmp
pop
sub
xchg
jns
and
movsb
sbb
jns
or
and
dec
sbb
adc
mov
subb
mov
or
leave
test
jbe
insb
sahf
cwtl
adc
inc
icebp
dec
into
fs
jmp
sub
mov
mov
flds
cwtl
mov
jns
mov
das
xchg
inc
mov
jns
cld
stos
lcall
xor
ja
shll
lock
xchg
xchg
push
and
sbb
or
xchg
mov
xchg
and
in
sbb
jmp
jmp
scas
inc
imul
cwtl
shrl
xlat
daa
pop
push
or
out
pavgw
cltd
pushw
and
arpl
inc
sub
mov
pop
test
pusha
jo
sbb
cmp
jns
clc
int
add
pop
inc
jo
int3
add
data16
sbb
loope
hlt
mov
daa
jge
leave
mov
pop
in
pop
ret
mov
mull
jle
jmp
jo
ljmp
cmp
filds
test
jecxz
dec
xor
or
mov
int
mov
std
int3
lock
pushf
hlt
jno
hlt
les
mov
loopne
pop
loope
ret
adc
in
test
mov
test
fwait
sbb
sbb
jmp
adc
push
fbld
pop
popa
cmp
jl
pop
adc
dec
pop
jb
mov
jge
lcall
sub
ja
test
dec
push
jae
pop
cmp
xchg
mov
shrb
mov
push
outsl
mov
out
push
cmpsl
or
ds
pop
pop
ret
ret
add
test
movsb
icebp
fsubl
inc
push
popf
inc
mov
adcl
push
mov
stos
insl
and
outsl
std
jo
add
ds
adc
jl
movsb
or
push
push
jle
inc
sbb
pop
cltd
loope
out
mov
je
inc
lret
jne
jo
or
sbb
dec
out
xchg
roll
mov
sbb
and
push
sub
or
jb
jg
inc
pop
fsubrl
mov
xchg
dec
stc
jle
bnd
negl
sarb
pop
and
jae
gs
lahf
mov
jb
dec
and
mov
insl
call
xlat
mov
inc
mov
mov
and
xchg
sar
nop
ss
pop
lods
jle
shll
call
xchg
or
pop
xchg
ret
fwait
ss
sbb
xchg
je
les
dec
movsb
mov
int3
inc
sbb
loope
pop
pop
fstps
mov
popf
scas
clc
outsl
das
inc
push
js,pt
sti
mov
mov
cld
cmp
decl
dec
pop
mov
addl
cmpsb
inc
out
jae
mov
xchg
lcall
test
mov
divb
mov
imul
and
ret
xor
arpl
mov
sbb
and
mov
mov
ret
lret
stos
sbb
mov
std
es
mov
test
push
imul
xchg
cmp
pop
cmp
sbb
mov
repnz
or
sbb
icebp
mov
adc
xchg
pop
repz
xchg
out
or
xor
ficoms
cltd
fwait
pop
out
and
mov
sub
jo
pop
pop
xor
dec
mov
cs
dec
dec
jge
add
and
lahf
or
adc
pusha
inc
pop
mov
push
dec
and
inc
cmpb
sub
cmpsl
push
sbb
stc
shll
insl
mov
push
aam
mov
mov
sti
int3
pop
xchg
push
shll
addr16
adc
dec
push
mov
dec
out
pop
mov
pop
mov
leave
sub
lock
rcrl
mov
mov
inc
mov
xchg
jnp
mov
scas
mov
push
inc
mov
nopl
xchg
push
mov
dec
dec
out
in
cmpsl
loope
push
xor
sbb
mov
push
adc
push
ficompl
pop
mov
pop
push
push
ljmp
xlat
gs
es
or
imul
lret
cmpl
aas
je
cmp
mov
stos
shr
inc
dec
jno
push
sbb
xchg
test
jno
cwtl
mov
lea
test
fiadds
outsb
test
xor
push
xor
xchg
or
push
sbb
or
mov
xlat
xchg
lods
mov
sahf
inc
adc
outsb
cmp
pop
xchg
out
mov
sub
in
lahf
inc
dec
cld
outsl
push
mov
fisubs
push
jl
cmpsb
lcall
adc
fiaddl
mov
imull
daa
rclb
sub
xchg
cld
aam
sahf
lds
loope
sub
dec
mov
bound
sbb
lret
or
mov
jae
and
shr
iret
out
sub
push
arpl
imul
dec
int3
mov
jmp
sahf
jmp
out
call
jbe
ljmp
loope
adc
xchg
addr16
mov
loop
cmpsl
mov
fstps
frstor
dec
push
xor
fbld
pop
sahf
push
ljmp
push
jp
out
shlb
pop
cs
pop
xchg
push
clc
out
cs
adc
ljmp
cmp
les
sub
cmpsl
les
nop
adc
or
xor
xor
ds
pop
push
dec
push
ret
sbb
or
addl
in
mov
add
mov
or
ja
or
or
sub
push
add
jecxz
imul
mov
mov
or
pop
gs
insl
cmp
cwtl
pop
push
cmp
pop
roll
or
pop
int3
xchg
pop
popa
in
adc
aas
sbb
adc
pop
fisttpl
inc
cmp
sahf
movsb
jae
sub
pop
loopne
xor
add
xor
dec
aaa
mov
in
lahf
and
pop
fsubr
push
pop
jg
test
lahf
pop
and
push
rcrl
rcll
sub
movsl
fldenv
testb
xlat
jmp
or
xchg
dec
and
lahf
push
in
jg
fadds
jns
div
int3
jne
inc
jp
and
adc
mov
js
or
dec
mov
je
push
inc
int
test
ret
cmc
dec
pop
ds
cmp
mov
or
jle
and
inc
fwait
adc
xchg
js
jae
sbb
loopne
mov
ds
loope
mov
dec
pop
xor
sub
dec
loopne
stc
std
enter
dec
sbbb
out
cli
add
sahf
mov
inc
insb
popa
lds
cwtl
std
cld
push
scas
lods
in
push
aad
lret
inc
inc
fidivl
mov
test
mov
dec
mov
cmpsb
sbb
xlat
jb
mov
pusha
cmp
cmp
leave
add
repz
sub
cwtl
mov
push
sub
jle
sub
push
mov
push
insl
and
addr16
sub
sub
loopne
test
hlt
add
das
je,pn
test
pusha
pop
iret
and
add
pop
add
pop
and
and
repz
mov
and
xlat
mov
lahf
cmp
or
fisttpl
sbb
push
jno
cmpsb
mov
pop
mov
ljmp
inc
lods
fnstcw
lret
jmp
xchg
ljmp
mov
xchg
cmp
xor
lret
orl
pop
sub
sub
clc
inc
dec
jg
stos
lcall
mov
fdivrs
cmpsb
jnp
outsl
push
jnp
shl
or
jb
std
add
add
jp
pop
adc
hlt
mov
jno
cltd
mov
int
push
adc
mov
jo
sbb
fnstcw
int3
sbb
inc
or
jmp
xchg
jl
xchg
mov
pusha
orb
in
shl
mov
inc
ds
and
sub
and
push
pushf
test
sbb
mov
push
insb
fiadds
pop
jecxz
out
jge
inc
ljmp
dec
insl
push
xor
in
dec
jbe
out
jne
xor
pop
movsb
lock
mov
icebp
repnz
dec
lock
pop
adc
sub
sbb
ss
mov
cmpsb
in
or
xchg
and
jmp
jg
push
add
scas
sarl
add
rcr
push
hlt
fwait
sbb
jae
int
add
rcrl
jne
ja
mov
and
js
cltd
iret
mov
mov
ja
fmuls
cmp
movsl
or
pop
sub
cltd
repnz
dec
lds
pushf
sbb
mov
push
in
adc
mov
jb
and
mov
fildll
mov
and
adc
in
xor
xchg
mov
aam
jp
into
lret
cmpsl
lcall
pusha
out
and
stc
pop
std
dec
mov
inc
adc
mov
mov
add
mov
mov
cltd
shrl
dec
or
push
clc
lcall
adc
and
fisttps
push
enter
fcoms
shrb
or
dec
out
and
cmp
jecxz
ja
dec
leave
lods
xor
pop
mov
stos
sbb
jl
pop
fisubs
mov
stos
add
dec
cs
and
hlt
cs
out
jp
sbb
or
inc
inc
std
movsb
cs
data16
push
cwtl
or
iret
in
lock
xor
jecxz
lret
and
adc
cmp
enter
add
or
fstpt
pop
popf
data16
push
xor
xor
mov
jmp
out
es
filds
mov
xchg
dec
sbb
aam
scas
inc
fmuls
push
hlt
ja
movsl
push
mov
dec
mov
mov
loope
mov
inc
mov
xchg
mov
cmpb
mov
fstpl
out
push
outsb
xchg
out
inc
inc
xchg
insb
adc
mov
in
enter
divl
sbb
xchg
dec
sbb
cmp
ja
sub
xchg
inc
call
cmp
stos
xor
in
fbld
ljmp
ror
mov
loope
lret
add
arpl
push
insb
xchg
cmp
jb
scas
xor
popf
mov
mov
xchg
sub
jl
repz
or
jnp
testl
mov
cld
adc
inc
stos
out
xchg
push
sahf
mov
and
inc
ss
popa
stos
or
icebp
rcll
push
in
xchg
addl
test
sbb
add
xor
add
aad
pusha
xchg
pop
hlt
push
sbb
push
push
js
ja
mov
decb
subl
punpcklbw
gs
stos
pushf
xor
cmp
sbb
dec
jmp
and
xchg
and
add
outsl
mov
cmpsl
loop
or
pop
xor
sub
sub
fsubrl
aad
mov
ret
shl
enter
aad
pop
mov
xorb
inc
roll
int3
outsl
outsl
std
cmp
in
sahf
or
inc
jp
shl
ja
mov
pop
mov
and
adc
daa
sbb
sub
xchg
dec
jl
sub
inc
sub
insl
rorb
dec
xor
cmc
scas
mov
xor
cltd
and
std
sbb
cmpsb
insb
insl
dec
or
ljmp
push
fists
shll
jb
test
cmp
xor
aas
loope
push
pop
dec
mov
inc
int3
inc
icebp
mov
sbb
das
cmp
mov
jb
add
ret
xor
inc
push
or
mov
fwait
inc
pop
je
sti
xlat
pop
xor
orl
cmp
leave
mov
ss
push
push
jp
mov
dec
imul
aaa
aas
cmp
sbb
sbb
inc
jmp
pop
es
fsts
scas
xor
ret
mov
mov
test
out
std
push
les
lods
fsub
js
loopne
jmp
sub
and
lods
out
out
loope
sbb
jge
dec
mov
leave
jnp
inc
bound
sbb
mov
mov
mov
mov
or
cltd
sbb
imul
xor
adc
xchg
or
es
ss
and
cmp
or
fsts
pushf
mov
rol
xchg
adc
ficoml
sub
mov
pavgb
cmp
add
mull
push
movl
rorb
dec
inc
adc
pop
pushf
cmc
subb
out
in
repz
iret
pop
aad
addr16
xorl
lahf
adc
or
cld
xchg
sbb
daa
jno
adc
je
sub
int
movsl
cs
mov
cli
cmc
iret
lock
jnp
inc
gs
and
xchg
pop
hlt
cmc
push
stos
fwait
dec
aaa
lods
out
dec
cmp
mov
xchg
dec
cmc
jp
mov
sub
orb
sbb
test
loopne
es
cmc
adc
xchg
pop
or
pop
sbb
pop
dec
call
adc
adc
xchg
sti
imul
scas
into
fadds
lods
jnp
xor
mov
and
sbb
adc
mov
rorb
shr
and
sarl
int3
scas
cmp
ljmp
into
cltd
notl
lea
lds
sub
loope
push
adc
stc
sub
add
mov
push
fnstenv
fsubrs
xor
add
fwait
dec
cmp
pop
or
mov
mov
negl
fadds
out
cmpsb
out
pandn
xchg
aas
sub
mov
cmc
xor
xlat
adc
mov
push
imul
rorl
xchg
push
in
neg
push
or
test
mov
push
push
pop
mov
fucomip
xor
aam
adcb
xor
lods
outsl
out
mov
sbb
inc
adc
lods
push
popa
jae
mov
aaa
sbb
ljmp
dec
adc
cmp
cmp
cmpsl
fsubl
mov
push
loopne
incb
mov
fbld
les
lret
fcoml
ret
sub
mov
mov
fistps
xchg
adc
in
rorb
pop
jb
mov
iret
mov
fs
add
call
add
mov
stos
pop
inc
mov
cmp
push
clc
data16
mov
mov
add
sti
pop
pop
hlt
lahf
lock
mov
test
adc
sbb
insb
int
sti
dec
jmp
scas
dec
mov
jge
fsubrl
jnp
xor
fstl
ret
repz
lret
ljmp
add
mov
icebp
aad
bound
ret
adc
adc
lock
cmpsb
mov
pushf
gs
jns
push
fstpt
aas
repz
ret
pop
add
inc
out
sti
pop
negb
leave
add
insb
push
add
iret
outsb
outsb
sbb
ret
or
popa
mov
add
mov
icebp
sub
outsb
in
push
gs
mulb
push
and
add
push
pop
push
push
mov
mov
inc
jns
push
xchg
mov
in
xor
ljmp
jge
sbb
clc
push
inc
shll
cs
dec
mov
mov
xlat
mov
inc
cmp
mov
xor
jb
push
and
clc
stos
pop
add
clc
test
into
aam
jo
dec
push
and
stc
adc
js
fildl
adc
subb
mov
imul
stos
mov
sub
mov
iret
ja
dec
add
sub
int
loope
mov
test
push
mov
jnp
or
jge
movsl
jmp
out
inc
mov
rcl
cld
mov
call
push
cmp
xchg
add
xor
inc
mov
and
loop
mov
fiaddl
inc
xor
or
aas
pop
fldcw
push
cmp
fsts
shr
cmp
cmc
mov
sbb
daa
leave
in
adc
xchg
push
int3
cmp
scas
cwtl
dec
mov
cmp
or
mov
mov
xchg
les
jmp
les
xchg
jbe
stc
mov
roll
cmp
into
aam
test
cmp
sub
into
sbb
jmp
jbe
cmp
mov
xchg
inc
xor
lods
fcmovnu
dec
popl
ds
xor
fsts
push
mov
mov
clc
mov
in
xchg
jae
hlt
fcmovne
fcomp
aam
popf
lods
xchg
cmc
jae
in
shlb
int
cmpsl
andl
movsb
sub
std
jle
and
adc
dec
pop
or
xchg
dec
or
in
int3
and
mov
hlt
dec
pop
mov
cltd
outsb
int
cwtl
fucomi
sbb
movsl
push
mov
jne
outsb
aas
mov
mov
fistpl
mov
cmp
jnp
leave
pop
aaa
outsl
cld
movsb
xchg
push
pop
cmp
outsb
ja
inc
xor
adc
fwait
lods
add
cmp
push
inc
ja
rcrl
and
ret
jns
stos
ret
bound
lahf
in
jae
mov
mov
out
push
add
sbb
retw
mov
movsb
add
lcall
sti
pushf
mov
dec
inc
adc
pop
insl
jno
dec
sbb
cmp
mov
stos
mov
orl
push
loopne
movsl
or
fwait
mov
stos
subl
sub
dec
ficomps
xor
pop
pop
xchg
lahf
sub
stos
xor
in
incb
fdivr
sub
mov
adc
sub
or
iret
punpcklbw
adc
dec
fistpl
and
mov
sti
idivb
insl
jl
add
mov
adc
lea
pushf
aas
or
mov
fdivs
dec
stc
sbb
xchg
push
shl
push
ret
jnp
adc
or
lret
xor
jne
jge
test
cmp
call
cmpsl
pusha
popf
add
jmp
lds
mov
fdivr
enter
in
sbb
jge
mov
or
adc
aam
pop
das
adc
testl
cmpb
cmc
sub
cmc
pusha
pop
test
leave
jae
ror
push
add
jge
cmpsb
nop
pop
rdtsc
push
es
or
pop
jp
inc
pop
jle
mov
std
rorl
loope
popf
aas
xchg
pop
pop
ficompl
dec
pushl
clc
ljmp
fcmovb
arpl
mov
pushf
xor
mov
sbb
bound
jle
test
movsb
js
rcr
jbe
jmp
or
inc
or
shlb
out
pop
roll
mov
rorl
mov
pop
inc
sahf
cmp
call
mov
xor
adc
cmc
addr16
jbe
cmp
mov
adc
ret
and
sbb
pop
insl
cmp
rol
sahf
xlat
pop
cltd
ja
test
cmp
sbb
lock
push
clc
xchg
ret
and
push
insb
xor
dec
jne
jle
or
jecxz
push
dec
fwait
and
fadds
sbb
lcall
pop
subl
dec
xor
adc
test
mov
sbb
mov
cld
callw
xor
cmpsb
sar
popf
mov
popl
cltd
movsl
pop
popa
xor
rolb
cmp
xor
test
fldcw
and
lret
push
stos
cltd
mov
popa
jbe
insl
sbb
mov
xchg
loopne
rcrl
mov
sub
fidivs
push
adc
sub
xchg
pop
je
dec
inc
fistpl
sbb
push
fld
es
adc
inc
adc
mov
add
sub
sbb
mov
or
jmp
je
int3
mov
inc
push
pop
cs
mov
pop
mov
fiaddl
mov
pop
adc
fs
scas
insl
push
sbb
aas
imul
leave
mov
fs
orb
mov
push
adc
mov
faddl
out
cmp
outsb
inc
pop
and
add
cli
cmpl
dec
add
xchg
or
cmp
shl
ret
push
mov
and
jbe
les
add
dec
push
loop
pop
lods
mov
lock
test
dec
jecxz
sub
jbe
mov
mov
popf
jp
or
mov
enter
js
jb
es
xchg
fildl
pop
dec
jl
jmp
push
add
xorb
hlt
cmp
pop
dec
idivb
pop
pop
cmp
loop
dec
push
fnstenv
lret
adc
cmp
pop
mull
aas
push
in
rcll
or
adc
ds
pop
aas
call
arpl
jle
mov
sub
es
and
fistpl
ljmp
pop
dec
mov
mov
ljmp
jecxz
push
jbe
dec
test
cmc
lock
popf
imul
push
cmc
jb
shll
push
loopne
repnz
repnz
mov
fcmovnu
popl
ret
shrb
cs
xor
sbb
jne
fldcw
jge
repnz
adc
and
or
repz
pop
out
push
xchg
aam
scas
push
fcom
sarb
lds
arpl
jle
lock
test
in
into
xchg
jl
mov
mov
jl
ret
dec
push
cmp
jns
cltd
pop
cmp
nop
hlt
insl
in
push
xor
paddusb
sahf
or
pop
xchg
xor
jecxz
popa
adc
push
cmp
sti
jo
mov
lods
addr16
loope
cwtl
sbb
fidivrl
out
fildl
int
pop
mov
cmp
loop
jl
repz
dec
inc
adc
mov
mov
jno
ret
adc
cltd
adc
aas
outsb
sub
pushf
jnp
and
ret
imul
pop
dec
xchg
xor
push
push
push
mov
setle
fsubs
call
stos
sbb
xor
add
dec
int
dec
outsb
iret
xor
and
repnz
ss
repz
dec
cmp
test
and
lret
dec
loope
pop
cmp
mov
test
sub
push
push
sub
mov
pop
adc
shr
or
jno
ficoml
ljmp
sub
adc
cli
outsl
cmp
in
jecxz
mov
inc
out
mov
add
mov
mov
nop
mov
jg
mov
dec
in
add
leave
lcall
aam
cmp
pushf
xchg
cmpb
pop
roll
pop
aas
sbb
data16
pusha
jecxz
leave
stos
inc
popf
sbb
xchg
je
ficoms
sbb
cld
pop
jnp
fwait
popa
shrl
sub
int3
lahf
dec
loopne
add
subps
pop
xor
enter
dec
sbb
mov
dec
movsb
loop
outsb
outsb
test
ja
fsubl
sti
inc
cmp
xor
cmpsb
mov
daa
fwait
push
dec
add
cs
fisubrs
mov
mov
adc
sub
add
ret
mov
dec
push
mov
imul
xor
push
adc
jecxz
push
ss
xchg
js
or
mov
and
outsb
lret
movl
shlb
mov
daa
not
mov
test
int3
cli
aaa
sub
mov
add
jno
dec
fsub
or
leave
push
jb
xchg
and
imul
jp
and
sbb
pushf
inc
jecxz
insl
mov
rorl
pop
in
jne
into
sbb
or
dec
mov
push
adc
imul
push
xchg
jbe
dec
adc
pop
xchg
xor
jle
or
cmp
sub
adc
test
cmp
fstl
pop
or
xlat
aam
outsl
test
cmp
sbb
insb
inc
scas
add
pop
ljmp
ret
fdivrl
das
push
jl
into
push
and
mov
mov
mov
mul
ret
xor
adc
out
sbb
mov
inc
dec
adc
push
adc
xorl
adc
and
xchg
mov
clc
xchg
pushf
push
mov
mov
jg
movsl
adcl
in
mov
fldt
xchg
adc
adc
xor
xchg
icebp
aam
add
scas
rcl
jae
scas
xchg
insb
mov
je
data16
mov
mov
jmp
test
adc
xchg
inc
jp
mov
loopne
rolb
fwait
in
add
rclb
lea
sbb
ret
cmp
mov
and
fistps
movsb
test
lcall
lods
shll
pop
mov
jecxz
pop
lock
iret
insl
cmp
orl
pusha
insl
mov
inc
mov
icebp
lcall
or
push
push
mov
jae
loop
dec
in
rol
xor
subb
test
mov
imul
pop
push
int
mov
sqrtps
test
push
mov
repz
lods
test
inc
test
jg
mov
rol
dec
pminsw
sub
cmp
stc
mov
es
adc
popf
cwtl
lds
pop
sarl
cmpsl
sub
jle
call
add
lods
and
sub
and
push
xchg
push
mov
pop
sbb
mov
pop
in
inc
xchg
adc
sbb
mov
fsubs
in
sub
sub
mov
test
xchg
lahf
pop
pop
lds
iret
into
xlat
in
cmc
sahf
cmp
aam
mov
jnp
inc
aam
es
lret
popf
pop
xor
inc
inc
push
mov
pusha
mov
jp
mov
mov
lds
push
sub
and
adc
mov
adc
dec
fmuls
push
idivb
dec
dec
xchg
xbegin
leave
inc
fiaddl
and
mov
lcall
sbb
pop
push
in
fldpi
fisttps
imul
mov
sbb
mov
mov
adcb
int3
or
je
cmp
scas
mov
mov
add
dec
sbb
cmp
int
or
adcl
shlb
std
push
and
outsb
in
and
pop
mov
dec
mov
ret
cld
jno
push
cmp
mov
aad
scas
xor
pop
xlat
sbb
cmp
dec
lods
es
imul
insb
arpl
adc
jle
jno
jns
cmp
sbb
dec
pop
or
fwait
in
mov
outsb
or
fbstp
shrl
lea
stc
add
xchg
mov
mov
lods
mov
cmpsb
push
rolb
pusha
mov
sub
or
mov
sti
xchg
push
mov
aad
jmp
pushf
les
jb
jmp
pop
aas
jecxz
sbb
fcoms
scas
inc
mov
jle
and
mov
sti
ret
imull
mov
popa
cmp
andb
pop
in
fucomi
jmp
enter
jl
push
lods
cwtl
cli
data16
test
sti
popa
inc
imul
push
gs
xor
add
mov
cmp
lea
pop
sbb
jmp
inc
mov
adc
push
sub
cs
add
mov
push
bound
mov
ljmp
mov
push
movsl
xchg
sbb
aaa
movsb
xor
into
outsb
add
inc
insl
or
out
mov
cltd
push
xor
popa
mov
mov
cwtl
popf
and
cmc
adc
pop
xor
inc
aaa
sbb
inc
test
call
fwait
dec
popa
scas
push
jbe
cmpsl
fimuls
xchg
mov
insb
enter
pop
and
clc
cmpsb
cmp
leave
dec
cli
lahf
popf
mov
fidivrl
mov
inc
pop
cld
pop
stos
cmp
or
lret
lds
es
xor
arpl
mov
inc
dec
enter
test
je,pn
sub
int3
jge
scas
outsl
imul
cmp
sub
daa
out
imul
lods
xchg
adc
dec
test
jmp
sbb
inc
leave
pop
clc
aam
aad
jmp
sbb
add
mov
add
adc
mov
sbb
add
xor
mov
stos
scas
jbe
adc
arpl
int
mov
pusha
fwait
mov
js
out
orb
scas
addr16
mov
and
mov
dec
push
pop
sbb
scas
or
stos
xchg
xlat
xchg
jl
not
mov
stos
adc
inc
inc
cmpsb
andl
xchg
pop
clc
lea
clc
in
out
and
bound
es
aad
mov
dec
arpl
imul
push
jg
imul
jmp
mov
je
fdivrl
mov
mov
insb
andl
out
mov
add
cltd
cwtl
and
pop
int3
mov
cmp
fsubrl
and
jge
jp
dec
cld
sub
mov
outsb
imul
decb
notl
scas
pop
iret
add
aam
mov
or
mov
xlat
push
mov
mov
jnp
jge
cmp
lret
ficomps
cli
or
jg
int
inc
sti
push
call
and
mov
mov
sbb
jle
dec
mov
dec
cmpsl
out
cmpsb
enter
add
add
add
mov
fsub
in
add
push
movsb
repnz
add
dec
mov
push
mov
push
clc
lock
jmp
call
and
cwtl
mov
push
dec
sub
xorb
and
subb
xchg
xchg
into
out
orl
pop
push
fidivs
loopne
loop
das
dec
in
andb
add
ljmp
int3
popa
and
aas
mov
out
mov
cmp
sbb
std
shl
sbb
pop
lret
xchg
dec
xchg
leave
mov
jmp
pop
imul
adc
loop
clc
ja
and
sbb
mov
push
fimuls
add
movsl
fsubs
scas
addb
imul
loop
data16
hlt
pushl
movsb
or
mov
cmp
sti
adc
or
mov
stos
je
fstl
cwtl
jl
add
adc
jmp
or
mov
add
push
cltd
js
ja
push
jl
dec
push
test
outsb
or
xchg
xor
cli
push
push
fcompl
fadds
and
bound
stos
adc
bound
inc
jae
movsl
inc
in
adc
loope
movsl
mov
sbb
cld
mov
jns
imul
ret
or
add
arpl
sub
sbb
xor
mov
jo
ja
dec
push
xchg
aad
adc
jbe
mov
out
add
sbb
ja
andl
sub
sbb
sbbb
cmpsl
push
arpl
popf
shr
fs
aas
jnp
test
xchg
aas
sub
jno
pop
int3
dec
pop
out
sub
lcall
sar
stos
jmp
enter
dec
push
or
and
xchg
shrl
cmp
popf
pop
les
std
fwait
out
xor
jnp
pop
xchg
jae,pn
mov
or
mov
push
pop
sub
xchg
cmp
pop
adc
fdivs
xor
fists
pusha
or
sub
cltd
and
in
inc
inc
in
xchg
int
fisubrl
adc
ret
push
sbb
push
dec
mov
or
out
mov
sbb
mov
outsl
imul
sbb
loope
mov
gs
xchg
addr16
cmc
push
inc
sbb
xor
andl
lret
inc
lds
lods
and
insb
test
inc
sti
inc
clc
cmp
jbe
out
cs
sbb
inc
lahf
hlt
mov
rcrb
ja
arpl
or
sub
xor
scas
xor
cmp
iret
push
out
dec
fimuls
aas
js
pop
push
ja
push
sbb
and
xchg
push
sub
pop
jge
lea
in
sub
test
cli
pop
pop
and
jmp
in
paddd
dec
fisttpl
imul
testb
mov
nop
pop
outsb
push
sbb
test
xor
push
cwtl
lea
roll
mov
std
mov
scas
movb
cmc
dec
jecxz
jge
push
sub
xchg
dec
pop
xor
cmpl
jp
cld
push
pop
sub
in
sub
in
sti
lods
push
movsl
mov
outsl
xchg
and
pop
sti
mov
mov
and
gs
xor
mov
fdivr
sbb
jg
dec
push
and
adc
popa
add
xor
xor
imul
insl
stc
dec
sbb
sahf
das
mov
mov
and
or
xchg
outsl
and
xchg
arpl
pop
jns
dec
cmp
cs
push
test
dec
adc
lcall
sti
xorb
push
stos
inc
div
dec
jle
mov
or
sti
cmp
movsb
xchg
std
adc
insl
jbe
movsl
mov
pop
inc
mov
and
pop
cmp
call
xor
outsl
add
jp
push
or
out
repz
sub
sub
cmp
inc
cltd
adc
rcrb
xor
jecxz
jl
cmp
popa
push
jecxz
addb
call
int3
cld
inc
nop
jge
imul
jle
inc
lret
imul
sub
dec
dec
mov
out
adc
scas
add
rcl
ljmp
jp
out
xchg
aad
xchg
xor
add
rcl
pop
cltd
push
jne
jbe
insl
mov
aad
xor
popa
mov
jns
mov
iret
negb
adc
icebp
dec
sbbb
jmp
jno
popa
test
inc
sub
mov
adc
cmpsl
mov
out
int
in
sbbb
add
sbb
pop
jne
and
sbb
sbb
jb
dec
mov
pop
jg
push
es
or
inc
cmp
icebp
into
jnp
push
lds
mov
repz
xor
addr16
xor
or
jmp
insl
pop
aas
xor
and
stos
cmpsb
pop
lcall
cmpsb
lods
xor
test
stc
pop
cwtl
sbb
push
lods
mov
insb
cmp
cli
ret
loope
ret
pop
loop
movsl
popf
cmp
cmp
xlat
popf
imul
out
call
xor
in
dec
mov
fcomp
std
and
dec
imul
lret
es
push
aam
push
scas
xor
mov
aam
mov
jns
push
mov
cld
xchg
jp
adc
mov
push
in
jl
push
jnp
sarb
aam
add
add
loope
and
fimuls
mov
add
insl
lret
mov
shrl
shll
xchg
out
int3
test
out
mov
orb
xchg
mov
mov
mov
std
jle
cli
push
add
or
out
xchg
push
cmp
add
icebp
pushl
push
push
add
outsb
sbb
xchg
outsb
lods
sbb
xchg
fildl
test
in
xchg
dec
mov
mov
xor
mov
ljmpw
xor
sbb
shrb
dec
dec
mov
out
adc
scas
add
rcl
ljmp
jp
out
xchg
aad
xchg
xor
add
rcl
pop
cltd
push
jne
jbe
insl
mov
aad
xor
popa
mov
jns
mov
iret
negb
adc
icebp
dec
sbbb
jmp
jno
popa
test
inc
sub
mov
adc
cmpsl
mov
out
int
in
sbbb
add
sbb
pop
jne
and
sbb
sbb
jb
dec
mov
pop
jg
push
es
or
inc
cmp
icebp
into
jnp
push
lds
mov
repz
xor
addr16
xor
or
jmp
insl
pop
aas
xor
and
stos
cmpsb
pop
lcall
cmpsb
lods
xor
test
stc
pop
cwtl
sbb
push
lods
mov
insb
cmp
cli
ret
loope
ret
pop
loop
movsl
popf
cmp
cmp
xlat
popf
imul
out
call
xor
in
dec
mov
fcomp
std
and
dec
imul
lret
es
push
aam
push
scas
xor
mov
aam
mov
jns
push
mov
cld
xchg
jp
adc
mov
push
in
jl
push
jnp
sarb
aam
add
add
loope
and
fimuls
mov
add
insl
lret
mov
shrl
shll
xchg
out
int3
test
out
mov
orb
xchg
mov
mov
mov
std
jle
cli
push
add
or
out
xchg
push
cmp
add
icebp
pushl
push
push
add
outsb
sbb
xchg
outsb
lods
sbb
xchg
fildl
test
in
xchg
dec
mov
mov
xor
mov
ljmpw
xor
sbb
shrb
mov
fidivrl
add
mov
outsb
fldcw
jne
push
pop
cmp
outsl
inc
test
add
pop
jb
dec
adc
shll
je
pushf
ror
mov
inc
sub
out
sti
sbb
cmpsb
xor
das
pop
clc
popa
ja
sbb
lock
jne
dec
and
dec
and
or
dec
rcll
mov
lock
ret
cli
fs
imul
sub
mov
adc
nop
lret
xchg
mov
popa
xor
jno
jp
push
mov
push
sarb
mov
pop
jb
shl
das
addr16
out
mov
cltd
repnz
mov
arpl
jl
or
cmp
and
jbe
mov
add
xor
jns
outsl
sub
popa
imul
ja
pop
sbb
cwtl
lcall
cs
pop
xchg
stc
outsb
sarl
adc
jbe
sub
sub
addr16
imul
call
adc
cs
popa
movsb
incl
ja
add
subl
leave
jle
cltd
xchg
mov
xchg
sahf
xor
inc
push
lds
mov
add
inc
sub
std
xchg
imul
dec
es
aaa
lea
data16
xchg
outsb
sti
push
ja
rcrb
shll
and
fidivs
fnstenv
jno
imul
pop
in
push
shrl
push
push
or
push
sub
adc
int3
sarb
mov
ud1
aam
xchg
jle
jmp
mov
aas
mov
add
mov
jno
in
mov
push
adc
lahf
stos
pop
fstpt
pop
mov
push
test
mov
es
push
mov
xor
or
stos
lock
inc
addb
jne
subl
arpl
cld
in
adc
gs
sub
mov
js
xchg
add
dec
aam
loopne
xchg
mov
arpl
ss
or
daa
movsl
rclb
hlt
push
mov
add
inc
mov
push
jle
pop
sub
inc
das
leave
pop
aam
leave
imul
sub
iret
push
ret
add
pop
jl
mov
xor
vminss
call
jmp
xorb
ja
xlat
arpl
mov
inc
push
pop
cli
push
cmpsl
stc
aad
push
inc
lcall
in
dec
cmc
sub
jp
testb
cmp
xchg
xchg
pop
mov
push
xor
push
sbb
cmp
scas
adc
mov
dec
pushf
mov
mov
mov
mov
add
imul
std
andl
inc
and
addr16
movsl
shl
jl
addl
and
push
dec
dec
icebp
mov
inc
int3
jnp
aad
addb
es
divb
outsl
fstps
ja
negb
inc
pop
sbb
jmp
es
jbe
movsl
and
mov
out
hlt
sbb
push
xor
out
fldenv
inc
nop
ja,pn
ss
push
cmp
es
js
cltd
mov
push
sbb
in
mov
mov
test
shrb
mov
fidivrl
add
mov
outsb
fldcw
jne
push
pop
cmp
outsl
inc
test
add
pop
jb
dec
adc
shll
je
pushf
ror
mov
inc
sub
out
sti
sbb
cmpsb
xor
das
pop
clc
popa
ja
sbb
lock
jne
dec
and
dec
and
or
dec
rcll
mov
lock
ret
cli
fs
imul
sub
mov
adc
nop
lret
xchg
mov
popa
xor
jno
jp
push
mov
push
sarb
mov
pop
jb
shl
das
addr16
out
mov
cltd
repnz
mov
arpl
jl
or
cmp
and
jbe
mov
add
xor
jns
outsl
sub
popa
imul
ja
pop
sbb
cwtl
lcall
cs
pop
xchg
stc
outsb
sarl
adc
jbe
sub
sub
addr16
imul
call
adc
cs
popa
movsb
incl
ja
add
subl
leave
jle
cltd
xchg
mov
xchg
sahf
xor
inc
push
lds
mov
add
inc
sub
std
xchg
imul
dec
es
aaa
lea
data16
xchg
outsb
sti
push
ja
rcrb
shll
and
fidivs
fnstenv
jno
imul
pop
in
push
shrl
push
push
or
push
sub
adc
int3
sarb
mov
ud1
aam
xchg
jle
jmp
mov
aas
mov
add
mov
jno
in
mov
push
adc
lahf
stos
pop
fstpt
pop
mov
push
test
mov
es
push
mov
xor
or
stos
lock
inc
addb
jne
subl
arpl
cld
in
adc
gs
sub
mov
js
xchg
add
dec
aam
loopne
xchg
mov
arpl
ss
or
daa
movsl
rclb
hlt
push
mov
add
inc
mov
push
jle
pop
sub
inc
das
leave
pop
aam
leave
imul
sub
iret
push
ret
add
pop
jl
mov
xor
vminss
call
jmp
xorb
ja
xlat
arpl
mov
inc
push
pop
cli
push
cmpsl
stc
aad
push
inc
lcall
in
dec
cmc
sub
jp
testb
cmp
xchg
xchg
pop
mov
push
xor
push
sbb
cmp
scas
adc
mov
dec
pushf
mov
mov
mov
mov
add
imul
std
andl
inc
and
addr16
movsl
shl
jl
addl
and
push
dec
dec
icebp
mov
inc
int3
jnp
aad
addb
es
divb
outsl
fstps
ja
negb
inc
pop
sbb
jmp
es
jbe
movsl
and
mov
out
hlt
sbb
push
xor
out
fldenv
inc
nop
ja,pn
ss
push
cmp
es
js
cltd
mov
push
sbb
in
mov
mov
test
jge
mov
sbb
cmp
or
es
lods
adc
vmovaps
mov
out
xchg
mov
add
addr16
aas
lock
test
or
add
pop
mov
sbb
sub
aad
mov
sub
and
inc
sub
lods
loop
xor
or
sbb
cmpsb
jne
mov
repz
aas
and
lock
ret
mov
pop
sti
mov
cmp
sbb
mov
imul
mov
and
aam
lods
pop
mov
movsl
cmp
stos
mov
je
mov
std
into
in
push
cmpb
sbb
adc
fsubp
push
in
das
inc
dec
xor
or
data16
fnstcw
aad
mov
dec
cltd
cmp
movsb
out
mov
or
xchg
pop
xor
das
cmpsb
inc
sbb
sub
mov
pop
or
aaa
lret
scas
sbb
out
dec
mov
adc
lods
lock
and
mov
xchg
shll
mov
inc
pop
jmp
sub
mull
jp
inc
pop
cmpsb
and
test
mov
xchg
lahf
hlt
mov
inc
dec
lahf
repnz
xchg
cli
loopne
jp
stos
gs
push
cli
push
daa
sbb
repz
jmp
cli
fldcw
out
ss
sahf
nop
scas
cmp
mov
xchg
scas
test
add
mov
sbb
mov
jo
jp,pt
test
jl
lahf
mov
mov
and
mov
icebp
in
test
dec
mov
mov
insb
adc
shlb
fdivrl
jle
pop
lahf
fsts
sbbl
cmpsl
push
mov
mov
push
shll
dec
iret
sub
js
repnz
sbb
mov
dec
cs
andl
and
sub
scas
ficoms
mov
dec
push
mov
push
fmuls
pop
jns
jl
clc
mov
stc
pop
subb
enter
xor
fmull
lahf
inc
loope
cmp
ss
lods
adc
vmovaps
mov
out
xchg
mov
add
addr16
aas
lock
test
or
add
pop
mov
sbb
sub
aad
mov
sub
and
inc
sub
lods
loop
xor
or
sbb
cmpsb
jne
mov
repz
aas
and
lock
ret
mov
pop
sti
mov
cmp
sbb
mov
imul
mov
and
aam
lods
pop
mov
movsl
cmp
stos
mov
je
mov
std
into
in
push
cmpb
sbb
adc
fsubp
push
in
das
inc
dec
xor
or
data16
fnstcw
aad
mov
dec
cltd
cmp
movsb
out
mov
or
xchg
pop
xor
das
cmpsb
inc
sbb
sub
mov
pop
or
aaa
lret
scas
sbb
out
dec
mov
adc
lods
lock
and
mov
xchg
shll
mov
inc
pop
jmp
sub
mull
jp
inc
pop
cmpsb
and
test
mov
xchg
lahf
hlt
mov
inc
dec
lahf
repnz
xchg
cli
loopne
jp
stos
gs
push
cli
push
daa
sbb
repz
jmp
cli
fldcw
out
ss
sahf
nop
scas
cmp
mov
xchg
scas
test
add
mov
sbb
mov
jo
jp,pt
test
jl
lahf
mov
mov
and
mov
icebp
in
test
dec
mov
mov
insb
adc
shlb
fdivrl
jle
pop
lahf
fsts
sbbl
cmpsl
push
mov
mov
push
shll
dec
iret
sub
js
repnz
sbb
mov
dec
cs
andl
and
sub
scas
ficoms
mov
dec
push
mov
push
fmuls
pop
jns
jl
clc
mov
stc
pop
subb
sub
lock
mov
fdivrl
and
mov
shlb
push
adc
data16
sti
adc
jnp
sub
dec
je
repnz
push
addb
jno
dec
mov
jle
inc
fisttpll
xlat
sti
adc
mov
in
xchg
xchg
in
jns
mov
fxch
ss
sub
cmc
pop
mov
sub
xchg
cmpl
dec
out
jno
dec
push
jle
push
or
cmp
in
sbb
jg
mov
xchg
cmpsl
test
jmp
mov
mov
sub
jle
and
testl
addb
mov
hlt
pushf
push
les
sbb
and
movsb
loop
dec
adc
leave
rcr
or
xchg
lock
scas
enter
dec
sbb
add
jl
push
jne
mov
pop
dec
pop
pop
jge
jnp
aaa
loop
mov
sbb
inc
pop
or
xchg
add
inc
in
cwtl
sbb
enter
loopne
fildll
mov
and
cmpsb
or
repnz
iret
mov
dec
push
inc
pop
les
add
lock
push
xor
pop
out
adc
loope
pusha
hlt
iret
sbb
and
negl
xor
incb
loop
inc
mov
sqrtps
and
push
and
shll
outsl
insb
adc
jae
fcmovnu
leave
xchg
das
pop
cmpsl
outsl
jl
bound
inc
sub
pop
lds
pop
psubsw
test
and
fists
mov
gs
mov
je
jecxz
dec
sti
mov
xchg
or
sahf
xchg
sbb
jns
mov
ret
xchg
cmp
out
out
push
lods
loope
mov
xor
ja
push
or
out
loop
imul
push
fstpl
add
sub
movsl
lret
adc
out
mov
cmp
fs
pop
mov
xchg
xchg
fisttpll
mov
std
dec
lds
test
sbb
mov
fists
addr16
cmp
push
xor
dec
scas
gs
pop
popf
iret
xchg
inc
ljmp
push
jmp
push
pop
and
ja
inc
xor
shrb
aaa
add
mov
iret
aas
sub
mov
xor
sbb
andb
mov
int3
adc
test
rcr
fimuls
add
inc
dec
outsl
inc
dec
mov
lret
out
or
loopnew
mov
cli
int
sub
mov
dec
mov
test
dec
fildl
or
out
in
sub
pop
in
fstl
aad
enter
fcoms
mov
xchg
dec
mov
jbe
fldcw
jmp
cmp
xchg
or
rol
pop
xchg
xorb
xor
dec
fsts
ret
iret
insb
inc
push
mov
mov
adc
daa
jo
jb
data16
mov
fnsave
outsb
stos
cltd
or
jge
cmp
rcrl
pop
rorl
mov
vmovshdup
lea
push
arpl
mov
mov
fdivrl
and
mov
shlb
push
adc
data16
sti
adc
jnp
sub
dec
je
repnz
push
addb
jno
dec
mov
jle
inc
fisttpll
xlat
sti
adc
mov
in
xchg
xchg
in
jns
mov
fxch
ss
sub
cmc
pop
mov
sub
xchg
cmpl
dec
out
jno
dec
push
jle
push
or
cmp
in
sbb
jg
mov
xchg
cmpsl
test
jmp
mov
mov
sub
jle
and
testl
addb
mov
hlt
pushf
push
les
sbb
and
movsb
loop
dec
adc
leave
rcr
or
xchg
lock
scas
enter
dec
sbb
add
jl
push
jne
mov
pop
dec
pop
pop
jge
jnp
aaa
loop
mov
sbb
inc
pop
or
xchg
add
inc
in
cwtl
sbb
enter
loopne
fildll
mov
and
cmpsb
or
repnz
iret
mov
dec
push
inc
pop
les
add
lock
push
xor
pop
out
adc
loope
pusha
hlt
iret
sbb
and
negl
xor
incb
loop
inc
mov
sqrtps
and
push
and
shll
outsl
insb
adc
jae
fcmovnu
leave
xchg
das
pop
cmpsl
outsl
jl
bound
inc
sub
pop
lds
pop
psubsw
test
and
fists
mov
gs
mov
je
jecxz
dec
sti
mov
xchg
or
sahf
xchg
sbb
jns
mov
ret
xchg
cmp
out
out
push
lods
loope
mov
xor
ja
push
or
out
loop
imul
push
fstpl
add
sub
movsl
lret
adc
out
mov
cmp
fs
pop
mov
xchg
xchg
fisttpll
mov
std
dec
lds
test
sbb
mov
fists
addr16
cmp
push
xor
dec
scas
gs
pop
popf
iret
xchg
inc
ljmp
push
jmp
push
pop
and
ja
inc
xor
shrb
aaa
add
mov
iret
aas
sub
mov
xor
sbb
andb
mov
int3
adc
test
rcr
fimuls
add
inc
dec
outsl
inc
dec
mov
lret
out
or
loopnew
mov
cli
int
sub
mov
dec
mov
test
dec
fildl
or
out
in
sub
pop
in
fstl
aad
enter
fcoms
mov
xchg
dec
mov
jbe
fldcw
jmp
cmp
xchg
or
rol
pop
xchg
xorb
xor
dec
fsts
ret
iret
insb
inc
push
mov
mov
adc
daa
jo
jb
data16
mov
fnsave
outsb
stos
cltd
or
jge
cmp
rcrl
pop
rorl
mov
vmovshdup
adc
addr16
cmp
rcrl
mov
ror
incl
pusha
push
icebp
jae
rcl
jno
rcrb
ja
xor
arpl
add
sbb
fdivrp
pop
sub
inc
mov
mov
add
push
data16
mov
fs
dec
cmp
sbb
ljmp
and
mov
gs
in
sub
xchg
dec
aaa
lret
mov
sbb
dec
movsb
sar
fcmovnb
jecxz
jecxz
jo
imul
mov
divl
ja
pop
dec
or
mov
das
jns
fnsave
mov
insl
jle
aas
mov
fdivrp
sub
std
in
xchg
sahf
fdivrs
cmp
mov
lds
out
lcall
fwait
cmp
cmp
sub
add
dec
dec
mov
pusha
es
ror
enter
fnstcw
ret
sti
stos
fxch
xor
pusha
mov
lcall
lods
or
and
icebp
jns
fdivs
push
sub
movsl
jbe
mov
lds
aaa
enter
or
mov
jmp
xlat
add
stc
cmpb
or
movsl
push
xor
decb
jb
cli
out
das
ljmp
in
mov
dec
sahf
mov
popa
stos
xchg
adc
mov
shrb
mov
push
fsubs
dec
pop
pop
in
aam
hlt
mov
push
cmp
out
out
or
inc
mov
jae
pop
cli
leave
sub
les
jne
push
cmp
jb
adcl
loope
sti
data16
jno
inc
sub
dec
adc
loopew
xor
xor
fimuls
inc
sub
add
adc
jg
test
in
lods
jl
sub
inc
xchg
xor
lahf
inc
loope
adc
addr16
cmp
rcrl
mov
ror
incl
pusha
push
icebp
jae
rcl
jno
rcrb
ja
xor
arpl
add
sbb
fdivrp
pop
sub
inc
mov
mov
add
push
data16
mov
fs
dec
cmp
sbb
ljmp
and
mov
gs
in
sub
xchg
dec
aaa
lret
mov
sbb
dec
movsb
sar
fcmovnb
jecxz
jecxz
jo
imul
mov
divl
ja
pop
dec
or
mov
das
jns
fnsave
mov
insl
jle
aas
mov
fdivrp
sub
std
in
xchg
sahf
fdivrs
cmp
mov
lds
out
lcall
fwait
cmp
cmp
sub
add
dec
dec
mov
pusha
es
ror
enter
fnstcw
ret
sti
stos
fxch
xor
pusha
mov
lcall
lods
or
and
icebp
jns
fdivs
push
sub
movsl
jbe
mov
lds
aaa
enter
or
mov
jmp
xlat
add
stc
cmpb
or
movsl
push
xor
decb
jb
cli
out
das
ljmp
in
mov
dec
sahf
mov
popa
stos
xchg
adc
mov
shrb
mov
push
fsubs
dec
pop
pop
in
aam
hlt
mov
push
cmp
out
out
or
inc
mov
jae
pop
cli
leave
sub
les
jne
push
cmp
jb
adcl
loope
sti
data16
jno
inc
sub
dec
adc
loopew
xor
xor
fimuls
inc
sub
add
adc
jg
test
in
lods
jl
sub
inc
xchg
xor
lahf
inc
loope
fisubl
aam
jle
lods
pop
je
cmpsl
movl
sbb
and
mov
or
out
mov
jae
fbld
dec
test
cmp
or
push
fidivrs
in
les
mov
adc
icebp
push
loope
inc
shr
loope
or
add
pusha
pop
shrb
fs
xchg
leave
ficoml
sahf
mov
sbb
sbb
shlb
and
mov
aam
ljmp
inc
mov
inc
push
mov
pmaxsw
or
movsl
xchg
sti
sbb
ljmp
pop
push
aaa
imul
sub
dec
jge
fiaddl
fs
adc
sbb
gs
fcoml
push
sarb
adc
std
into
cmp
adc
lea
in
repz
jae
add
dec
in
xchg
cmp
push
jo
cmpsb
insb
or
scas
push
imul
outsb
xor
inc
and
mov
loop
rcrb
rcll
leave
lret
in
int3
sbb
ja
jbe
mov
mov
push
dec
pushw
adc
ret
movsb
inc
ljmp
add
dec
dec
mov
ljmp
xchg
xchg
nop
out
imul
mov
enter
jle
andl
loop
pop
icebp
mov
sbb
leave
loopne
arpl
cli
xchg
mov
mov
cmp
add
jns
pop
call
repz
mov
sub
cld
push
dec
add
rcrb
das
sarb
adc
inc
mov
imul
into
cli
pusha
xchg
cld
cmp
sbb
loopne
mov
or
jle
add
dec
mov
divb
into
inc
mov
loope
ss
ret
and
mov
fistl
mov
testl
ret
fcos
pushf
out
popa
negb
les
xchg
mov
fwait
xchg
push
mov
add
mov
pop
dec
addr16
addr16
fsubrl
out
xchg
pop
and
mov
jbe
jb
div
lret
or
pop
jl
lea
enter
cmp
out
test
jae
in
lock
jno
repz
aaa
lds
in
out
js,pt
inc
xor
repnz
sbb
divb
test
test
cmc
test
scas
jl
cmc
loop
xrelease
dec
adc
in
ljmp
jne
cltd
in
repz
push
fs
push
and
pop
jbe
or
cmp
data16
lea
cmc
fcmovnb
dec
test
test
xchg
nop
pop
adc
mov
movsb
mov
inc
add
stc
ret
dec
int3
clc
fwait
add
add
adc
and
push
pop
gs
pop
rcr
in
adc
cmpb
mov
lret
sbb
mov
and
dec
adc
sbb
aad
rcrl
ds
push
pop
and
cs
scas
cs
movb
out
fimuls
mov
cmovb
cld
mov
sbb
inc
aam
jle
lods
pop
je
cmpsl
movl
sbb
and
mov
or
out
mov
jae
fbld
dec
test
cmp
or
push
fidivrs
in
les
mov
adc
icebp
push
loope
inc
shr
loope
or
add
pusha
pop
shrb
fs
xchg
leave
ficoml
sahf
mov
sbb
sbb
shlb
and
mov
aam
ljmp
inc
mov
inc
push
mov
pmaxsw
or
movsl
xchg
sti
sbb
ljmp
pop
push
aaa
imul
sub
dec
jge
fiaddl
fs
adc
sbb
gs
fcoml
push
sarb
adc
std
into
cmp
adc
lea
in
repz
jae
add
dec
in
xchg
cmp
push
jo
cmpsb
insb
or
scas
push
imul
outsb
xor
inc
and
mov
loop
rcrb
rcll
leave
lret
in
int3
sbb
ja
jbe
mov
mov
push
dec
pushw
adc
ret
movsb
inc
ljmp
add
dec
dec
mov
ljmp
xchg
xchg
nop
out
imul
mov
enter
jle
andl
loop
pop
icebp
mov
sbb
leave
loopne
arpl
cli
xchg
mov
mov
cmp
add
jns
pop
call
repz
mov
sub
cld
push
dec
add
rcrb
das
sarb
adc
inc
mov
imul
into
cli
pusha
xchg
cld
cmp
sbb
loopne
mov
or
jle
add
dec
mov
divb
into
inc
mov
loope
ss
ret
and
mov
fistl
mov
testl
ret
fcos
pushf
out
popa
negb
les
xchg
mov
fwait
xchg
push
mov
add
mov
pop
dec
addr16
addr16
fsubrl
out
xchg
pop
and
mov
jbe
jb
div
lret
or
pop
jl
lea
enter
cmp
out
test
jae
in
lock
jno
repz
aaa
lds
in
out
js,pt
inc
xor
repnz
sbb
divb
test
test
cmc
test
scas
jl
cmc
loop
xrelease
dec
adc
in
ljmp
jne
cltd
in
repz
push
fs
push
and
pop
jbe
or
cmp
data16
lea
cmc
fcmovnb
dec
test
test
xchg
nop
pop
adc
mov
movsb
mov
inc
add
stc
ret
dec
int3
clc
fwait
add
add
adc
and
push
pop
gs
pop
rcr
in
adc
cmpb
mov
lret
sbb
mov
and
dec
adc
sbb
aad
rcrl
ds
push
pop
and
cs
scas
cs
movb
out
fimuls
mov
cmovb
cld
mov
sbb
inc
pop
cmp
les
fnsave
mov
jnp
test
jp
insl
jmp
into
bndldx
cmp
push
sub
add
insl
dec
sbb
lret
xor
shll
enter
jecxz
loopne
test
xor
maxps
dec
aad
fmuls
inc
push
int3
xchg
fsubp
xchg
add
imul
into
fsubrs
or
xor
inc
sbb
jne
sbb
xchg
cmp
sub
add
pop
sti
arpl
jg
fiadds
ljmp
test
jns
test
aad
inc
sti
aad
inc
mov
mov
ja
out
push
cmpsl
mov
mov
test
jae
mov
xchg
push
or
xor
idivl
cmpsl
or
in
add
je
sahf
aaa
in
insl
mov
in
adc
mov
shlb
lea
xchg
cmp
xor
notl
aas
mov
fsubrl
jb
mov
push
adc
mov
jmp
lods
xlat
lock
sbb
lds
enter
push
bound
fdivr
adc
lret
out
lahf
sbb
pop
add
imul
push
loopne
mov
cmp
pop
mov
adc
pop
pop
outsb
in
or
cld
loop
int
dec
daa
clc
les
fidivrs
sub
test
fwait
inc
mov
out
jmp
rcrb
jge
or
and
and
mov
incb
jnp
xlat
loopew
jno
adc
movsb
stc
pop
pop
cmp
or
pop
and
and
pop
mov
adc
add
xchg
dec
inc
clc
xor
test
ljmp
stos
repz
cmp
jae
stos
dec
fnstcw
hlt
test
cmp
les
fnsave
mov
jnp
test
jp
insl
jmp
into
bndldx
cmp
push
sub
add
insl
dec
sbb
lret
xor
shll
enter
jecxz
loopne
test
xor
maxps
dec
aad
fmuls
inc
push
int3
xchg
fsubp
xchg
add
imul
into
fsubrs
or
xor
inc
sbb
jne
sbb
xchg
cmp
sub
add
pop
sti
arpl
jg
fiadds
ljmp
test
jns
test
aad
inc
sti
aad
inc
mov
mov
ja
out
push
cmpsl
mov
mov
test
jae
mov
xchg
push
or
xor
idivl
cmpsl
or
in
add
je
sahf
aaa
in
insl
mov
in
adc
mov
shlb
lea
xchg
cmp
xor
notl
aas
mov
fsubrl
jb
mov
push
adc
mov
jmp
lods
xlat
lock
sbb
lds
enter
push
bound
fdivr
adc
lret
out
lahf
sbb
pop
add
imul
push
loopne
mov
cmp
pop
mov
adc
pop
pop
outsb
in
or
cld
loop
int
dec
daa
clc
les
fidivrs
sub
test
fwait
inc
mov
out
jmp
rcrb
jge
or
and
and
mov
incb
jnp
xlat
loopew
jno
adc
movsb
stc
pop
pop
cmp
or
pop
and
and
pop
mov
adc
add
xchg
dec
inc
clc
xor
test
ljmp
stos
repz
cmp
jae
stos
dec
shl
mov
test
fsubrs
jbe
or
repz
sbb
and
pop
icebp
mov
addb
xor
popf
push
dec
jl
insb
inc
add
jge
pop
push
push
mov
movsl
lcall
sub
xchg
in
mov
dec
movsl
ljmp
call
scas
aad
dec
push
sub
dec
jge
cwtl
push
in
mov
cmp
jl
jp
push
push
sbb
lahf
or
in
scas
iret
loopne
mov
inc
xchg
adc
push
xor
unpckhps
jge
pushf
in
popf
or
jb
pushf
fstp
sbb
stos
inc
sbb
loop
cltd
mov
sbb
inc
pusha
pop
rcll
mov
xchg
mov
push
ljmp
mov
out
lcall
sbb
je
xchg
sti
popl
mov
pop
dec
lods
sub
mov
xchg
jl
in
mov
shlb
add
cmpl
push
xchg
addr16
into
js
movsl
xor
and
add
ss
nop
pop
aad
cwtd
push
jns
sbb
arpl
add
sub
repz
cmp
iret
sub
add
add
pop
dec
adc
xchg
xlat
fisubrs
mov
inc
cmp
and
rcll
pop
jno
movsl
mov
or
jnp
xchg
or
cwtl
dec
bound
dec
add
aas
cmpl
sub
xchg
aas
fst
cmp
fbld
push
push
xor
add
lcall
fsubrs
cmp
lret
lods
xor
push
push
add
jbe
mov
mov
inc
pop
stos
pop
ja
and
push
sbb
mov
lcall
dec
mov
and
shl
inc
jmp
rcr
dec
fimull
or
mov
fstps
lods
cli
push
lds
sub
notb
add
jl
fsubrl
lahf
mov
mov
pop
xchg
out
xor
and
or
and
ja
push
adc
out
sbb
imul
test
xor
fs
lahf
sbb
lea
xor
sub
xlat
movsl
aas
mov
add
jb
mov
mov
push
mov
idivl
test
scas
dec
lock
lock
test
fsubrs
jbe
or
repz
sbb
and
pop
icebp
mov
addb
xor
popf
push
dec
jl
insb
inc
add
jge
pop
push
push
mov
movsl
lcall
sub
xchg
in
mov
dec
movsl
ljmp
call
scas
aad
dec
push
sub
dec
jge
cwtl
push
in
mov
cmp
jl
jp
push
push
sbb
lahf
or
in
scas
iret
loopne
mov
inc
xchg
adc
push
xor
unpckhps
jge
pushf
in
popf
or
jb
pushf
fstp
sbb
stos
inc
sbb
loop
cltd
mov
sbb
inc
pusha
pop
rcll
mov
xchg
mov
push
ljmp
mov
out
lcall
sbb
je
xchg
sti
popl
mov
pop
dec
lods
sub
mov
xchg
jl
in
mov
shlb
add
cmpl
push
xchg
addr16
into
js
movsl
xor
and
add
ss
nop
pop
aad
cwtd
push
jns
sbb
arpl
add
sub
repz
cmp
iret
sub
add
add
pop
dec
adc
xchg
xlat
fisubrs
mov
inc
cmp
and
rcll
pop
jno
movsl
mov
or
jnp
xchg
or
cwtl
dec
bound
dec
add
aas
cmpl
sub
xchg
aas
fst
cmp
fbld
push
push
xor
add
lcall
fsubrs
cmp
lret
lods
xor
push
push
add
jbe
mov
mov
inc
pop
stos
pop
ja
and
push
sbb
mov
lcall
dec
mov
and
shl
inc
jmp
rcr
dec
fimull
or
mov
fstps
lods
cli
push
lds
sub
notb
add
jl
fsubrl
lahf
mov
mov
pop
xchg
out
xor
and
or
and
ja
push
adc
out
sbb
imul
test
xor
fs
lahf
sbb
lea
xor
sub
xlat
movsl
aas
mov
add
jb
mov
mov
push
mov
idivl
test
scas
dec
lock
fdivp
push
arpl
stc
jp
xorb
ds
cmpsl
loop
sahf
xlat
pusha
jo
subb
cli
adc
imul
xchg
xor
stc
pusha
mov
or
xchg
test
ret
out
jmp
fidivs
cmpl
ss
xor
sub
in
mov
xchg
lcall
aaa
jno
pop
lea
lock
test
cltd
out
add
jbe
jl
adc
adcb
aaa
inc
mov
sub
arpl
push
sbb
ds
or
iret
insb
or
ret
dec
outsl
add
sub
lea
pop
mov
into
negb
mov
or
outsb
mov
cmp
scas
lock
mov
sub
sub
aam
inc
lahf
adc
push
rcrl
dec
aam
neg
adc
pop
and
data16
xchg
dec
mov
add
or
arpl
call
add
shll
hlt
cli
mov
outsb
mov
loope
pop
mov
vmwrite
push
test
scas
xor
mov
push
das
and
push
xchg
and
jmp
bound
je
popa
ja
aaa
sbbb
add
fildll
insb
add
pop
in
imul
lret
cmp
pop
test
add
flds
repz
push
sbb
sub
std
lods
call
mov
jo
aam
addr16
mov
stos
cmp
xchg
stos
pop
push
pop
dec
sbb
rolb
jb
cmp
inc
dec
mov
sahf
push
ret
push
sub
aad
cs
shrl
sbb
mov
lea
bound
or
xor
test
xor
adc
sbb
and
adc
loopne
mov
sub
jge
mov
push
into
inc
push
mov
je
mov
or
xchg
add
push
inc
nop
iret
mov
test
inc
adc
call
mov
or
pop
js
cmp
add
jp
pop
pushf
int3
jge
bound
pop
test
xchg
adc
mov
sub
mov
test
and
jb
xchg
lcall
sub
mov
mull
or
jmp
xchg
out
shll
adc
adc
roll
arpl
into
orl
neg
sub
adc
repnz
dec
icebp
xor
push
sbb
cli
xchg
cmc
push
or
inc
or
imul
inc
iret
out
jno
lahf
hlt
cmpsb
jge
pop
in
test
lahf
jle
pop
decl
mov
imul
adcb
iret
loope,pn
mov
dec
hlt
insl
jp
or
les
arpl
stc
jp
xorb
ds
cmpsl
loop
sahf
xlat
pusha
jo
subb
cli
adc
imul
xchg
xor
stc
pusha
mov
or
xchg
test
ret
out
jmp
fidivs
cmpl
ss
xor
sub
in
mov
xchg
lcall
aaa
jno
pop
lea
lock
test
cltd
out
add
jbe
jl
adc
adcb
aaa
inc
mov
sub
arpl
push
sbb
ds
or
iret
insb
or
ret
dec
outsl
add
sub
lea
pop
mov
into
negb
mov
or
outsb
mov
cmp
scas
lock
mov
sub
sub
aam
inc
lahf
adc
push
rcrl
dec
aam
neg
adc
pop
and
data16
xchg
dec
mov
add
or
arpl
call
add
shll
hlt
cli
mov
outsb
mov
loope
pop
mov
vmwrite
push
test
scas
xor
mov
push
das
and
push
xchg
and
jmp
bound
je
popa
ja
aaa
sbbb
add
fildll
insb
add
pop
in
imul
lret
cmp
pop
test
add
flds
repz
push
sbb
sub
std
lods
call
mov
jo
aam
addr16
mov
stos
cmp
xchg
stos
pop
push
pop
dec
sbb
rolb
jb
cmp
inc
dec
mov
sahf
push
ret
push
sub
aad
cs
shrl
sbb
mov
lea
bound
or
xor
test
xor
adc
sbb
and
adc
loopne
mov
sub
jge
mov
push
into
inc
push
mov
je
mov
or
xchg
add
push
inc
nop
iret
mov
test
inc
adc
call
mov
or
pop
js
cmp
add
jp
pop
pushf
int3
jge
bound
pop
test
xchg
adc
mov
sub
mov
test
and
jb
xchg
lcall
sub
mov
mull
or
jmp
xchg
out
shll
adc
adc
roll
arpl
into
orl
neg
sub
adc
repnz
dec
icebp
xor
push
sbb
cli
xchg
cmc
push
or
inc
or
imul
inc
iret
out
jno
lahf
hlt
cmpsb
jge
pop
in
test
lahf
jle
pop
decl
mov
imul
adcb
iret
loope,pn
mov
dec
hlt
insl
jp
or
les
icebp
dec
mov
cs
test
fld
lret
cli
inc
jle
xlat
cwtl
push
push
add
jge
gs
and
adc
add
mov
int
cmp
jnp
adc
cmp
xchg
inc
insb
int3
aad
adc
imul
repnz
es
cld
add
sbb
lods
jmp
or
pop
pop
inc
sub
adc
ret
dec
ds
enter
mov
ss
sbb
fcoml
xchg
or
adc
shr
jae
addr16
cmp
cmp
dec
mov
imul
popa
xlat
mov
fs
popf
lods
insb
outsb
pop
rorb
outsl
jmp
pop
in
jle
add
ljmp
arpl
aas
jne
jbe
fcoml
das
int3
dec
adc
xchg
mov
xabort
imul
inc
lock
mov
lods
out
dec
sbb
std
das
cld
loopne
sub
pop
out
xor
popf
mov
xchg
mov
jno
sbb
mov
mov
and
inc
lea
mov
add
lds
and
mov
push
add
sbb
shlb
rcr
mov
in
sub
loop
jg
loopne
xlat
cli
loopne
sub
cmc
repz
push
sbb
mov
and
mov
cmp
call
ss
repz
imull
imul
insl
pop
fisubl
mov
idivl
xchg
pop
xchg
sub
popf
add
loopne
xchg
aam
and
adcl
push
pop
cmpsl
dec
data16
mov
mov
xchg
fisttpl
inc
data16
and
scas
pop
xchg
xorl
push
stos
mov
dec
pop
aaa
popf
pop
adc
es
push
inc
pushf
sub
imul
in
imul
xchg
sahf
sub
xor
xchg
dec
out
add
cmc
pop
lahf
mov
cltd
xchg
scas
leave
jg
sub
inc
jne
jp
ret
sub
lods
xor
mov
mov
fisttps
cmpsl
mov
cmp
and
lock
ds
and
xchg
in
mov
cmpsb
fnstcw
cld
shl
out
icebp
add
xchg
sub
add
xchg
inc
rcr
xchg
cmp
inc
mov
xor
cmp
mov
cs
test
fld
lret
cli
inc
jle
xlat
cwtl
push
push
add
jge
gs
and
adc
add
mov
int
cmp
jnp
adc
cmp
xchg
inc
insb
int3
aad
adc
imul
repnz
es
cld
add
sbb
lods
jmp
or
pop
pop
inc
sub
adc
ret
dec
ds
enter
mov
ss
sbb
fcoml
xchg
or
adc
shr
jae
addr16
cmp
cmp
dec
mov
imul
popa
xlat
mov
fs
popf
lods
insb
outsb
pop
rorb
outsl
jmp
pop
in
jle
add
ljmp
arpl
aas
jne
jbe
fcoml
das
int3
dec
adc
xchg
mov
xabort
imul
inc
lock
mov
lods
out
dec
sbb
std
das
cld
loopne
sub
pop
out
xor
popf
mov
xchg
mov
jno
sbb
mov
mov
and
inc
lea
mov
add
lds
and
mov
push
add
sbb
shlb
rcr
mov
in
sub
loop
jg
loopne
xlat
cli
loopne
sub
cmc
repz
push
sbb
mov
and
mov
cmp
call
ss
repz
imull
imul
insl
pop
fisubl
mov
idivl
xchg
pop
xchg
sub
popf
add
loopne
xchg
aam
and
adcl
push
pop
cmpsl
dec
data16
mov
mov
xchg
fisttpl
inc
data16
and
scas
pop
xchg
xorl
push
stos
mov
dec
pop
aaa
popf
pop
adc
es
push
inc
pushf
sub
imul
in
imul
xchg
sahf
sub
xor
xchg
dec
out
add
cmc
pop
lahf
mov
cltd
xchg
scas
leave
jg
sub
inc
jne
jp
ret
sub
lods
xor
mov
mov
fisttps
cmpsl
mov
cmp
and
lock
ds
and
xchg
in
mov
cmpsb
fnstcw
cld
shl
out
icebp
add
xchg
sub
add
xchg
inc
rcr
xchg
cmp
inc
mov
xor
cmp
imul
popa
cmp
or
out
cmpsl
jecxz
sbb
mov
cs
stos
daa
popa
leave
ret
cli
popf
mov
push
out
jns
out
loope
push
sbb
gs
mov
imul
mov
fidivs
repz
fucomip
mov
dec
push
sub
mov
xor
ds
out
or
scas
addr16
xchg
push
pop
leave
jno
subb
int
inc
and
sbb
and
in
psrad
rcll
fsubs
cmp
ljmp
stos
dec
outsl
and
and
sub
or
and
jo
mov
push
filds
xchg
test
mov
in
sbb
inc
nop
fsubs
iret
xchg
movsb
inc
orl
imul
lret
div
icebp
xchg
push
xchg
mov
and
aad
cmpl
or
push
push
pop
mov
adc
dec
mov
leave
add
sahf
movaps
ret
push
xor
lods
jb
std
loope
and
shl
lock
imul
ds
jmp
pop
jno
movsl
mov
lods
mov
hlt
outsb
and
jbe
dec
dec
or
fldenv
jb
xor
adcb
rorb
adc
sub
lahf
ljmp
std
xor
push
insl
push
or
into
mov
xchg
lahf
out
cld
jecxz
push
mov
mov
fidivrs
xor
xchg
test
mov
fimuls
gs
ret
xchg
sub
xchg
fidivs
std
mov
inc
in
jg
mov
and
cwtl
add
movsb
in
dec
jns
sub
mov
add
addl
test
fidivs
pop
xor
outsb
fldt
lock
pop
and
repnz
mov
into
sahf
test
lea
pop
testb
arpl
sub
inc
lret
mov
js
xor
inc
cli
xlat
je
lret
flds
sbb
pop
ret
add
push
adc
aad
xlat
sbb
jg
stos
mov
mov
jmp
pop
test
je
adc
enter
loop
mov
xor
stc
pop
xsaveopt
pop
fldl
les
int
xor
jne
pushf
xchg
pop
jnp
xchg
ljmp
xor
stc
adc
lret
adc
imul
mov
mov
mov
cmp
adc
mov
sahf
stos
jnp
mov
xchg
cltd
mov
movsb
lret
clc
and
lods
cltd
addb
stc
mov
sub
add
mov
or
add
cmp
jbe
pop
pusha
imul
adc
push
ficomps
jge
dec
lret
loope
jo
mov
dec
push
insl
and
lea
pop
push
in
jo
xchg
push
out
jp
push
lret
enter
dec
sbb
nop
int3
fs
repnz
mov
iret
jg
dec
enter
out
pop
mov
pop
cmc
or
mov
sbb
cld
and
jno
out
push
data16
xchg
sub
addl
xchg
dec
insb
aad
iret
scas
in
jl
enter
sbb
test
cmp
sbb
jge
push
enter
lds
or
js
in
shlb
pop
and
xor
out
test
ffree
mov
mov
dec
sub
shrl
mov
push
inc
ret
sub
jge
sub
dec
test
xor
lods
fnstenv
ss
dec
sbb
mov
movsb
orb
fnsetpm(287
pop
pop
in
es
jo
pop
mov
mov
push
imul
xor
loopne
test
ljmp
loop
ja
dec
ja
pop
pop
insl
push
sarl
cmpsb
gs
push
adc
js
fsubrp
iret
jmp
and
mov
scas
adc
imul
in
outsl
pop
gs
sbb
test
imul
mov
pushf
inc
mov
jb
or
insl
xor
int3
popf
lret
push
and
push
mov
scas
movsb
pop
add
and
mov
xor
clc
push
xchg
test
ret
inc
sub
dec
add
cmp
mov
pusha
aam
push
adc
sbb
or
jbe
jmp
aad
scas
add
xchg
pop
into
cmpsb
add
lock
mov
inc
invd
inc
jae
lcall
pop
xor
insl
stos
mov
faddl
shll
cmp
inc
rcrl
js
adc
in
pop
pop
arpl
or
cmp
test
aaa
lock
jae
sar
lret
ret
insb
jmp
insl
loope
in
mov
cmpsb
cmpl
orb
lods
in
push
dec
cmp
adc
loope
ja
jle
adc
orb
loop
imul
into
xor
inc
pop
repnz
stos
adc
jmp
pop
pop
pushf
push
push
rcll
lcall
push
mov
xchg
jl
daa
clc
dec
idivl
dec
mov
pop
mov
cmc
mov
mov
mov
mov
sbbl
sub
dec
pusha
ret
push
out
pop
cmp
jge
cs
adc
sub
cli
cmpsb
icebp
add
mov
dec
push
xor
cs
mov
xor
bound
repnz
pusha
adc
push
sbb
addr16
sti
leave
xchg
nop
sbb
push
mov
nop
and
add
jb,pt
test
pop
xor
int3
pop
in
ror
bswap
inc
std
or
jp
addr16
mov
insb
imul
xchg
es
sub
mov
repz
loop
mov
inc
inc
repnz
add
xchg
enter
jmp
arpl
incb
jno
in
rol
jmp
sbb
cmp
dec
mov
adc
and
sbb
pushf
xor
fbld
xor
into
fcompl
out
cmp
cltd
repnz
add
out
xor
cmp
mov
stc
pop
or
and
adc
mov
mov
xchg
add
xchg
bound
mov
sbb
inc
inc
out
dec
inc
mov
aas
ja
push
sbbl
lahf
jecxz,pt
sub
cmp
cli
les
mov
hlt
les
negb
xor
in
or
jle
push
data16
mov
adc
mov
sub
cmpsb
lods
and
test
scas
push
mov
or
sti
xchg
xor
cmpsb
add
or
testl
outsl
xorl
push
clc
push
ja
dec
xor
sub
js
xchg
cmp
mov
xor
pop
mov
dec
out
aam
ja
mov
push
cltd
mov
lea
pop
jg
cmc
popf
sub
test
lea
xchg
rcrl
shrl
in
mov
movsb
shlb
sqrtps
out
rcll
push
adc
fcomp
and
add
call
cltd
ficomps
xchg
adc
in
pop
jnp
fiadds
or
xchg
lret
xchg
orb
rclb
push
out
sbb
xor
cld
popf
mov
jo
out
in
jge
stc
sub
push
insl
add
repz
push
orl
jb
sub
dec
dec
lret
repz
je
mov
adc
addl
out
popa
mov
ret
add
dec
fs
in
mov
lods
sub
int
and
xor
pop
insb
orb
mov
fsubrs
outsb
xchg
mov
sub
jb
in
daa
je
add
insb
lea
dec
es
mov
daa
jo
inc
mov
inc
cwtl
icebp
pusha
and
shlb
dec
jmp
inc
repnz
in
mov
adc
jno
mov
mov
push
sbb
cmp
shld
or
imul
fcmovbe
mov
cmpsb
movb
mov
push
sbb
inc
mov
mov
dec
mov
sbbb
stos
lock
mov
call
int3
dec
call
and
iret
sbb
xchg
ret
arpl
sub
xchg
daa
mov
inc
sbb
imul
push
les
in
push
test
jge
mov
pop
mov
mov
push
xchg
loopne
insb
dec
loop
cmp
jnp
repz
add
mov
mov
rorl
add
sahf
jno
push
mov
and
addr16
call
push
pushf
mov
mov
iret
enter
test
add
fiadds
mov
int3
pop
lahf
dec
insl
sahf
or
mov
inc
sbb
fidivs
test
paddsb
mov
arpl
dec
xchg
nop
or
push
mov
out
and
sbb
dec
xchg
aaa
flds
xor
jno
pop
test
enter
jp
fists
add
mov
fwait
insl
loope
cs
daa
aas
push
cmp
add
out
jp
jns
sbb
aam
lret
adc
lret
imul
lea
or
or
push
cmp
popa
xlat
adcb
cmp
lcall
and
cmp
mov
fiaddl
fwait
imul
push
addb
sub
scas
push
cmp
mov
add
test
sub
pop
adc
mov
lcall
inc
out
mov
jnp
cwtl
test
jo
xchg
xor
stos
sti
subb
jno
cwtl
jl
and
mov
jne
pushf
xchg
int
push
mov
mov
and
inc
sahf
and
lret
call
repz
hlt
test
lret
repnz
mov
call
cld
loop
xchg
inc
xor
xchg
cmp
mov
fnstcw
mov
subb
and
adc
mov
adc
into
mov
and
push
xchg
and
dec
outsb
mov
mov
sub
iret
test
dec
addb
js
xor
jmp
xor
sub
movsb
leave
jnp
int3
sete
sbb
adc
aaa
mov
and
push
push
xor
inc
test
add
and
push
ja
pop
int
pop
inc
sub
and
mov
mov
fcmove
mov
xlat
mov
sub
loope
cwtl
adc
in
jmp
jg
leave
pusha
ja
mov
and
mov
outsl
push
loop
ret
lret
xchg
push
inc
xchg
stc
pop
repz
pushl
scas
lock
lock
sub
shrb
and
dec
lret
int3
xchg
daa
add
cmpps
push
les
push
int3
nop
inc
int3
nop
mov
ss
sub
std
daa
mov
add
xlat
sbb
fisttpll
ror
arpl
jle
aam
xchg
mov
scas
mov
sbb
push
sbb
out
add
xor
jl
or
in
fsubrs
movsb
mov
repnz
mov
cmp
cld
sub
fisubrs
jns
cmpsl
pop
loopne
and
adc
inc
mov
push
adc
jecxz
add
cmc
xchg
sti
lock
shlb
jle
sahf
cmpsb
test
add
das
pop
adc
sti
stos
pop
loop
jbe
mov
notb
out
outsl
pop
xor
inc
addb
or
out
pusha
adc
sub
inc
jo
cmc
lahf
dec
mov
xchg
pop
mov
mov
jno
stc
add
call
inc
lea
sub
lret
adc
dec
aam
imul
push
filds
insb
mov
mov
jg
and
sub
adc
or
adc
rcrb
fwait
js
neg
sub
sub
mov
cmp
mov
sub
test
lods
out
or
testb
mov
jle
inc
imul
fsub
cltd
outsb
repnz
mov
loope
mov
mov
test
insl
jmp
je
test
and
mov
into
in
jg
mov
mov
add
sbb
mov
xchg
out
cli
shlb
sar
push
push
pop
push
int
mov
sbbb
dec
out
or
iret
jo
mov
imul
fs
imul
cltd
and
out
xor
loope
movsb
ja
jl,pt
icebp
cmp
sub
stos
frstor
shlb
sbb
mov
push
stos
jg
jl
jecxz
cmpsl
cs
aam
jg
adc
lahf
push
or
sahf
pop
aam
stos
push
jecxz
push
pop
pushf
push
aam
jmp
sub
mov
mov
push
cmpsl
push
loope
lret
pop
pop
or
or
or
outsb
mov
xchg
arpl
xor
add
inc
test
sbb
fs
ja
ljmp
cmp
add
dec
sub
lcall
push
add
sbbb
into
out
pop
fwait
imul
imul
push
push
pop
cmpsl
and
pop
les
fimuls
aas
dec
popf
data16
je
ret
add
outsl
sbb
inc
push
ja
push
mov
mov
dec
mov
std
orl
push
xor
jo
jle
and
int
and
incl
mov
sbb
mov
xchg
push
mov
out
lods
incl
lea
inc
mov
iret
push
imul
cmp
icebp
mov
outsb
add
enter
test
loop
sub
push
jmp
lods
or
push
sbb
add
test
xor
cwtl
pop
mov
or
xor
nop
xor
sete
xchg
xchg
scas
xchg
rcll
data16
les
jae
mov
xor
mov
xor
sti
push
ret
in
in
imull
daa
inc
push
push
pusha
fldenv
bound
orb
jno
rcll
push
loope
outsl
sub
pop
movsl
in
je
dec
ljmp
cli
js
int
insl
adc
jae
inc
add
imul
cmc
andb
add
rcr
test
xchg
arpl
or
xchg
jnp
or
mov
ss
push
xor
xor
les
mul
lahf
mov
mov
shll
dec
outsb
push
xor
jbe
std
in
outsl
jg
inc
xchg
xlat
cli
cli
xor
rorb
cmp
out
mov
in
data16
adc
andb
insl
repz
stc
fcoml
push
aam
jne
xchg
and
sahf
iret
ret
or
rol
outsl
gs
roll
call
inc
jno
inc
adc
jae
lcall
sub
push
push
cld
and
xchg
popf
stos
sub
mov
cwtl
xor
shlb
and
xor
adc
stos
outsb
dec
xchg
and
ljmp
xor
es
decb
inc
fnsave
jge
mov
daa
mov
mov
xchg
rcll
fst
loope
adc
fimuls
test
mov
dec
fnstcw
inc
fsts
jne
or
sbb
into
jns
cmp
and
pop
adc
push
test
jmp
pop
insl
mov
into
jmp
pop
adc
insb
lcall
lret
shll
jecxz
arpl
adc
adc
sub
mov
mov
adc
ss
mov
add
mov
mov
mov
icebp
push
push
xor
stos
xchg
inc
ljmp
push
jbe
jae
jg
mov
fcoml
outsl
in
or
cmp
xlat
ret
mov
shr
nop
xor
bound
xor
or
in
cmp
cmp
pop
inc
mov
cwtl
mov
loope
jnp
pop
popf
xchg
dec
jp
mov
rcrb
rclb
mov
repz
jbe
sub
and
dec
and
and
imul
addr16
loope
mov
add
les
dec
dec
pop
pop
aad
sbb
scas
lods
jmp
testb
mov
test
sbb
xor
jo
jge
hlt
ljmp
mov
ret
push
rolb
push
movb
shlb
sub
notb
fcmovnu
add
sub
adc
push
popl
cmp
rcl
dec
dec
jecxz
sti
gs
fcom
test
cmp
lcall
sub
das
enter
shll
xchg
les
xchg
test
loop
sbbb
in
outsb
cmp
loope
inc
fisubl
xlat
xchg
push
and
shlb
xor
enter
fcmovne
mov
clc
sahf
xchg
std
dec
in
mov
cmp
inc
lock
inc
xchg
or
sub
lea
and
add
data16
xchg
ret
outsb
xor
add
inc
pushf
jbe
lcall
mov
aaa
jb
inc
pop
das
sub
and
je
pop
cli
dec
jmp
and
push
sbb
mov
adc
outsl
xor
inc
int3
xlat
mov
pop
xchg
testl
mov
es
push
hlt
cltd
sub
loope
mov
subb
push
xchg
sub
dec
gs
push
int3
insl
inc
xor
cli
pushf
inc
arpl
andb
jmp
fsubrl
fst
shrl
xor
xchg
push
stc
scas
add
cmpsl
movsb
frstor
inc
fdivr
repz
adc
cmpsl
fstps
push
mov
sbb
imul
mov
fmull
mov
or
dec
jo
imul
push
mov
and
sahf
jno
jp
or
cmpb
ljmp
scas
cmpsb
cwtl
jg
aam
xchg
lods
mov
fucom
mov
arpl
stos
stos
push
jnp
ljmp
pop
sub
push
and
fwait
icebp
mov
jbe
mov
fwait
jl
insl
pop
roll
je
loopne
mov
popf
sub
rorl
sar
jnp,pt
cmp
dec
mov
add
leave
sub
inc
add
mov
mov
enter
adc
and
cmp
frstor
fisttps
pop
xlat
push
loop
int3
mov
jae
aam
inc
int
lret
sub
mov
pop
mov
cwtl
xchg
jmp
sub
outsl
xor
int3
js
test
outsl
inc
test
xchg
adc
loop
test
lock
aaa
inc
mov
and
ficompl
mov
test
out
loop
mov
sub
fistpll
jle
ss
pop
mov
sarb
dec
jge
and
repnz
mov
inc
mov
push
mov
jl
les
add
xor
das
mov
mov
scas
sbb
jno
mov
repnz
arpl
and
push
adc
aam
pop
sub
sub
je
sar
inc
sub
mov
lret
test
cmp
push
xchg
enter
data16
lret
sub
jb
push
xchg
out
fcmovne
dec
xorl
int3
in
push
and
fstpl
sti
or
pmulhrsw
lea
jge
add
sarb
push
out
pop
sahf
mov
xchg
mov
mov
sbb
pop
push
push
push
std
fwait
xor
stos
add
lods
rorl
xchg
outsb
lcall
adc
xchg
mov
out
dec
es
sub
hlt
cmp
orb
cmpl
pop
data16
lret
in
xchg
sbb
lret
es
lcall
sub
ds
inc
addr16
shrb
and
dec
icebp
jo
sbb
je
push
lcall
push
arpl
or
mov
adcb
insl
loopne
fisttpl
jo
cmp
adc
or
dec
or
in
imul
cmp
cmpb
cmp
dec
lcall
je
fcoms
push
out
enter
scas
push
push
mov
inc
mov
xchg
cmp
xchg
and
shll
sub
adcb
pop
jne
sub
gs
dec
imul
rcl
push
xchg
cmc
popf
push
cmpsl
jbe
pop
mov
and
xor
call
and
fdivs
enter
xor
jecxz
cmc
out
jne
pop
xchg
and
mov
dec
adc
jo
es
jb
ds
adc
aas
jo
or
sysret
gs
lret
fs
ret
pop
out
jge
push
mov
jmp
mov
inc
lret
cmp
cmp
js
pop
mov
mov
lcall
sti
xor
and
loop
mov
adc
mov
push
scas
push
loop
sub
sti
inc
sbb
rcrl
add
dec
test
or
in
xor
sub
pop
loope
add
fstl
data16
push
mov
jne
push
js
push
es
std
mov
ljmp
insb
sub
in
imul
dec
out
mov
dec
mov
and
jle
adc
mov
mov
adc
sub
mov
fdivrl
mov
inc
repz
int3
jge
push
in
add
std
ret
outsl
mov
out
xchg
push
stos
lock
cmc
add
or
enter
mov
repz
popa
je
or
sbb
in
cmp
xor
xchg
scas
push
xchg
inc
xchg
movsb
insl
push
lock
test
rcrl
insb
cwtl
fistl
or
test
mov
cmovnp
pop
sbb
jmp
fcmovne
mov
add
pop
and
xor
fsubrl
cltd
ret
test
lock
or
mov
sub
cmpsb
add
lods
int
and
div
pop
dec
xchg
lods
pop
sub
xchg
dec
je
inc
cmp
sti
lock
in
sbb
addr16
notb
clc
outsb
bound
ljmp
inc
cltd
mov
inc
cmp
inc
mov
sar
or
mov
jge
sub
lods
or
sub
mov
xor
push
mov
mov
out
imul
les
mov
inc
ss
push
popa
mov
inc
in
lods
add
js
push
mov
clc
cwtl
sbb
cltd
aam
xchg
jb
cmp
fildl
mov
and
cld
rcrb
push
sbb
pop
clc
bound
pop
enter
inc
sub
dec
xchg
rcl
lret
scas
arpl
jbe
inc
in
dec
jns
add
idiv
cli
int3
es
push
inc
shlb
mov
adc
xchg
xor
loope
sbb
sub
subb
mov
or
and
xchg
lcall
dec
sti
test
push
arpl
cmp
sbb
sbb
add
push
sbb
fwait
xor
mov
mov
loopne
stc
jae
scas
movsl
lret
insl
cli
add
mov
and
into
cltd
scas
movsl
jbe
push
sbb
shl
fsts
lods
push
mov
add
dec
outsb
pop
mov
or
add
mov
pop
fs
cmpsl
hlt
loopne
in
aam
dec
into
pop
push
or
test
mov
lods
push
aas
lcall
mov
push
xchg
sarl
dec
lahf
push
sbb
iret
inc
int3
leave
adc
mov
and
das
lock
mov
sub
mov
push
adc
nopl
mov
es
sbb
sbb
repnz
inc
adc
jno
shll
inc
ret
imul
mov
sbb
adc
pop
out
movhps
mov
mov
add
jo
or
sbb
xor
cmp
inc
and
pop
xor
or
repz
sti
test
inc
adc
rcrb
mov
popf
aaa
or
add
cmpb
arpl
leave
mov
imul
cmpsb
scas
push
ja
cli
outsl
mov
das
jnp
dec
mov
dec
or
mov
sbb
dec
mov
ret
xchg
add
jb
scas
int3
nop
imul
cs
jecxz
pop
int
data16
mov
sti
mov
xlat
scas
push
pusha
pushf
in
jo
mov
in
cld
lret
add
cmpsl
xchg
push
or
shrl
notl
mov
arpl
pop
pop
call
sarl
pop
cwtl
jb
mov
jecxz
push
notl
mov
sbb
sub
andl
mov
pop
pop
cmp
outsl
sub
dec
mov
ret
out
ss
test
pop
les
jb
push
out
sub
xor
mov
sub
jecxz
mov
test
rcrb
nop
sub
pop
dec
dec
rolb
pop
mov
mov
popa
jge
fistl
cmp
xchg
push
pop
aam
cs
or
pop
es
adc
inc
and
mov
jnp
inc
cmp
fadd
xor
xor
xchg
xor
out
cmp
call
add
fdivrl
cmp
les
pop
inc
and
jnp
xchg
mov
call
sbb
pop
jecxz
in
push
test
in
popf
insl
repnz
jbe
andl
and
jl
adc
cmpl
repnz
insl
iret
cmp
jns
out
fadd
mov
jns
dec
lret
cld
dec
shll
adc
test
inc
push
cmp
int
or
push
mov
add
mov
std
rclb
mov
lods
gs
stos
repnz
into
test
mov
aad
jecxz
repz
fs
push
icebp
fs
mov
aam
jge
inc
inc
push
xor
sti
dec
and
sbb
lret
clc
insl
sub
insl
jo
loopne
sub
fucomi
mov
jb
sbb
arpl
nop
mov
ret
xor
pop
pop
lods
das
mov
dec
ds
int3
loopne
lock
fiaddl
dec
pop
xchg
rcll
mov
shr
jne
scas
int3
xor
xchg
int3
jle
xchg
sbb
in
push
sub
inc
jae
jmp
or
jns
dec
or
in
cmpsl
pop
nop
cmp
pop
cmp
fwait
incb
mov
lret
aam
je
outsl
and
out
ja
mul
sbb
adc
cmpl
js
add
std
stos
pop
mov
mov
xor
fwait
jle
mov
push
cli
stos
cmp
mov
ret
cltd
jnp
xchg
push
push
inc
stos
data16
and
pop
jne
test
or
mov
cmc
outsb
adc
cmpsl
inc
dec
xor
shlb
ljmp
cld
in
push
lds
jge
push
and
sbb
adc
or
add
jne
xchg
loope
orb
mov
inc
inc
or
and
je
mov
idivb
clc
dec
jne
jb
into
mov
pop
xorb
push
loop
test
push
jnp
or
sbb
sbb
jno
lods
xor
push
out
sbb
mov
xchg
ret
fwait
cltd
jns
dec
add
push
in
lock
test
or
push
fistps
enter
xchg
loop
xchg
divl
push
jp
es
inc
mov
lret
adc
out
mov
add
cmpsl
push
lods
sti
inc
xchg
popa
mov
shrl
jmp
sub
adcb
adc
adc
dec
das
cwtl
fwait
repz
popf
rorb
aam
push
xorb
sub
mov
out
mov
jle
andl
mov
push
sahf
jmp
jecxz
pop
xchg
adc
ss
sti
sbb
and
fsubrs
xor
lret
cmp
lcall
xor
test
sub
or
les
mov
or
and
mov
div
loop
mov
or
push
ds
daa
roll
jge
fmuls
sbb
test
sbb
outsl
xchg
cltd
mov
xchg
adc
add
test
jo
and
insb
jge
xchg
push
enter
mov
and
xchg
push
je
das
enter
imul
inc
ja
pop
xchg
roll
leave
movsl
jle
cmp
loope
xlat
and
pusha
rcll
cmp
mov
mov
mov
mov
add
aam
and
xor
xchg
add
fdivrs
shl
pop
adc
xor
jne
decl
and
mov
sub
mov
popf
xchg
and
sbb
mov
imul
xor
cltd
jmp
dec
and
daa
loopne
dec
loopne
mov
outsb
xchg
jl
lds
stos
or
sub
mov
test
hlt
push
incl
lds
in
clc
repz
scas
cmp
pop
clc
lea
insl
mov
mov
push
jb
sbb
xchg
mov
sarl
cmp
sbb
in
mov
xchg
test
pop
jae
inc
imul
jne
push
pop
mov
lret
test
mov
jg
and
jno
popa
dec
sub
mov
add
das
call
mov
sahf
out
cmp
rolb
leave
shlb
pop
cmp
cmc
jnp
adc
pop
fs
mov
mov
cmpsb
mov
push
std
test
sub
and
jae
enter
add
dec
cmp
mov
xor
sahf
xchg
push
jno
dec
addb
push
cmpsl
jbe
stc
bound
jmp
mov
dec
dec
pop
push
movsb
sub
call
ja
mov
rcrb
shll
mov
sahf
jo
mov
fildll
or
shr
sbb
pop
cmpsb
daa
bound
aaa
sahf
adc
outsl
xor
lahf
mov
outsl
add
inc
or
pusha
pop
cmp
mov
ret
popf
jmp
and
sbb
orb
pop
mov
fidivs
sub
mov
mov
dec
ret
sbb
xchg
xchg
js
push
mov
cmpb
test
loopne
out
cld
pop
sub
jl
fs
cmp
mov
lds
mov
shr
push
sbb
sbb
imul
std
insl
cmp
push
dec
pop
pop
cmc
or
sbb
rcr
mov
cvtpi2ps
outsb
add
out
jle
insb
xor
pop
aad
mov
push
xchg
ret
jns
nop
jle
jno
in
push
mov
dec
pop
nop
leave
adc
push
clc
call
ret
cmp
mov
fnstsw
push
push
mov
adc
pop
ret
push
push
addr16
xor
fimull
adc
les
fwait
jge
jne
adc
add
insl
pop
mov
push
pop
rcrl
in
fbstp
daa
outsb
pop
adcl
cmp
sbb
sub
lock
lods
fsubl
xchg
xchg
xchg
mov
mov
pushf
jno
adc
xor
addr16
mov
popl
pop
mov
mov
mov
ljmp
lret
dec
jge
shll
mov
mov
mov
dec
xlat
repnz
xchg
inc
cwtl
xchg
mov
lret
dec
mov
jl
nop
rcll
fdivl
push
push
ljmp
push
and
mov
fwait
lret
xor
dec
cmc
or
sub
dec
cmp
ljmp
in
lock
movsb
dec
pop
fucomip
sbb
xor
scas
ljmp
shrl
repnz
mov
inc
stc
mov
cmp
mov
push
hlt
std
and
and
push
xchg
push
fcomi
adc
out
pop
roll
lock
loop
mov
dec
xchg
mov
mov
loopne
stos
jge
or
jl
add
int
rolb
flds
add
rclb
xchg
sti
fmull
fcompl
jno
push
push
repnz
iret
or
inc
pop
aad
andb
sbb
xor
or
xor
mov
lret
adc
xlat
sbb
setge
add
or
repz
loopne
js
lods
and
sbb
test
icebp
lock
dec
lods
fwait
adc
lds
enter
push
xchg
pop
inc
or
stos
push
pop
das
test
lods
mov
inc
mov
adc
push
inc
cmc
imul
ss
test
mov
add
dec
call
aam
out
idivb
test
pushf
pop
roll
or
or
adc
js
js
mov
dec
or
ret
xor
std
into
pop
xchg
out
scas
test
jmp
ss
gs
xchg
daa
fiadds
cld
outsb
mov
dec
out
add
xchg
xchg
cld
icebp
sub
stos
and
push
leave
xchg
out
pop
inc
xor
fcmovu
xchg
push
and
mov
imul
push
out
cmp
cmp
dec
nop
mov
inc
ficomps
pushf
cmp
mov
fwait
push
push
arpl
clc
mov
ficomps
mov
add
lods
inc
incb
and
gs
repz
dec
es
pusha
jo
shlb
sbb
arpl
dec
aad
lret
stos
ss
and
call
jbe
repnz
mov
and
lods
shl
mov
test
subb
jle
bound
mov
add
jle
inc
xchg
test
jnp
inc
test
nop
and
mov
mov
xor
stos
shr
scas
dec
and
push
pop
movsb
ja
iret
mov
inc
movsl
inc
pop
icebp
and
lods
pop
xor
jae
sti
stos
pop
cld
ljmp
dec
mov
pop
pop
cmc
pushf
add
dec
mov
cwtl
loop
cmc
shll
xchg
xchg
idivl
andb
push
or
dec
or
dec
sbb
nop
imul
mov
shrb
dec
lods
cmp
mov
or
sub
iret
sub
lea
jmp
cmp
fimull
jno
fcomip
cltd
pusha
mov
or
pushf
adc
les
aas
cmpb
shll
sub
cld
repz
jnp
arpl
pop
shlb
movsb
or
std
push
data16
ret
push
addr16
mov
xchg
ja
push
dec
dec
movsl
xor
test
lods
and
add
sahf
fisttps
test
divb
xorl
sub
je
out
mov
aas
and
roll
icebp
mov
incl
dec
mov
ja
push
mov
test
inc
inc
jne
dec
jo
enter
std
lock
and
xchg
xchg
xlat
fs
sub
ret
mov
fmull
cmp
inc
push
mov
lods
aam
pop
pop
aam
xchg
jl
out
std
cmc
jne
mov
mov
inc
pop
jae
mov
pop
adc
mov
xchg
call
iret
sbb
and
in
and
out
lods
and
inc
sbb
jo
and
jnp
or
pusha
mov
les
loope
mov
test
ja
sub
jns
outsl
lods
inc
nop
push
mov
fldl
subb
adc
xor
scas
scas
fdivs
push
insl
sub
dec
xchg
push
inc
repz
jo
jecxz
scas
cld
int
lahf
dec
or
test
and
inc
pop
loopne
pushf
and
sbb
add
sub
out
sbb
push
ja
mov
and
cmc
mov
cmp
icebp
and
xor
cld
dec
std
test
test
shlb
adc
inc
inc
mov
fiadds
je
movsb
jo
mov
fwait
scas
pop
lea
mov
or
jo
sub
add
stos
pop
xchg
arpl
push
insb
inc
roll
nop
and
or
cmpsb
cwtl
inc
xor
adc
jae
cmpsl
fs
push
mov
pcmpgtb
adc
dec
mov
lret
push
aas
hlt
sbb
sarb
aaa
lret
cmp
fs
add
fadd
in
bnd
cmp
cmp
jno
in
or
jmp
or
adc
dec
push
insb
imul
mov
cmp
aas
fldl
fstps
loop
inc
mov
cwtl
aas
leave
cmp
dec
push
sub
jle
rorb
test
ja
mov
repz
mov
and
insb
mov
sbb
sbb
hlt
jo
xor
into
mov
adc
mov
sti
xchg
rolb
pop
fwait
mov
push
inc
jmp
ret
pushf
xor
mov
fwait
or
das
jae
inc
clc
add
mov
dec
xchg
add
or
adc
mov
adc
loope
dec
es
adc
dec
pop
jns
aas
ret
mov
pop
mov
dec
xor
lea
out
push
xor
out
and
sub
jp
ficompl
and
shll
gs
ja
fs
push
aas
cmp
out
lods
sub
xor
xor
inc
call
idivl
mov
loope
sub
clc
xor
addb
sahf
mov
pop
mov
dec
and
leave
int
jmp
push
addb
xchg
jbe
fldcw
jbe
test
cltd
call
sbb
mov
xor
pusha
jg
stos
sbb
sbb
dec
sbb
cmp
es
paddw
nop
loop
push
pop
push
fmuls
pop
iret
es
add
ror
jg
test
sbb
sub
repz
cmp
push
and
es
in
mov
mov
push
nop
push
sub
push
lods
and
jae
icebp
rcrb
or
lret
nop
mov
push
int
out
add
cmc
and
lcall
xchg
imul
pop
adc
or
adc
cli
or
xor
jle
or
inc
test
test
or
dec
arpl
mov
jg
mov
ret
mov
iret
cmpsb
call
mov
stc
mov
sub
xchg
cltd
xchg
jae
lds
dec
loop
sbbl
xor
mov
fmull
es
jb
jmp
test
jo
jne
out
push
cmpsb
cli
mov
cld
push
xchg
lds
lds
jns
and
jmp
movsl
out
pop
popa
out
arpl
addr16
jbe
cwtl
pop
fwait
pop
pusha
dec
orl
and
xor
mov
pop
push
cs
cs
and
jb
out
add
sub
cmp
xchg
cli
or
inc
in
dec
push
clc
sbb
or
mov
enter
or
jecxz
test
out
inc
outsb
popf
lods
xchg
or
repnz
xor
cmp
cmp
inc
mov
push
aam
mov
stos
fstps
pop
fisttpl
fidivrl
xchg
inc
cmp
bound
push
jno
pop
cli
movsl
loope
cmp
cwtl
movaps
xchg
mov
movsb
shlb
popa
inc
jl
jns
sub
adc
mov
inc
mov
inc
lods
mov
dec
lret
xor
mov
push
fs
jg
add
jge
ret
mov
es
imul
jmp
inc
and
fldcw
or
pop
adc
mov
cmp
push
lds
mov
mov
xchg
in
xchg
movsb
popa
fcmovb
in
loopne
and
adc
jo
fcmove
lds
and
nop
inc
incl
sub
push
mov
enter
iret
jg
mov
adc
aas
aad
mov
or
dec
push
or
insb
adc
pop
in
loope
inc
push
jp
int
cmpsl
lods
lcall
sub
cmp
std
rolb
lock
push
test
scas
pop
jge
and
jg
push
andl
pop
jae
xlat
jl
inc
pop
test
mov
in
enter
je
ret
adc
sbb
sbb
push
mov
test
imul
lret
sti
mov
outsl
out
adc
mov
pop
jae
jns
dec
and
push
push
cmpsl
test
ss
mov
cli
arpl
or
mov
cmp
mov
and
jecxz
jo
push
mov
hlt
adc
ds
push
dec
jmp
outsb
pop
pop
xchg
enter
cltd
test
push
jmp
inc
sbb
xor
lcall
push
push
sub
fwait
mov
fnsave
aad
mov
mov
daa
scas
in
insl
arpl
out
sub
fs
fidivl
insb
je
jns
outsb
push
mov
into
add
inc
pop
or
jo
in
popf
cmpsb
pop
or
mov
mov
xchg
or
mov
mov
lods
jecxz
leave
inc
mov
stos
stc
push
aaa
sbb
fcmovbe
pop
les
mov
and
jae
jle
nop
cmpsb
fcompl
xchg
fstpt
fstps
jnp
jl
pop
dec
fisubrs
sbb
pop
push
test
pop
mov
enter
push
adc
jno
cld
mov
pop
or
mov
xor
andl
rorl
sub
imul
loopne
fistpll
push
adc
out
data16
push
add
stos
xchg
mov
jns
inc
inc
xchg
lods
adc
popl
hlt
jbe
jo
shl
pop
decb
loope
mov
or
mov
iret
clc
dec
cmc
mov
roll
add
mov
iret
dec
ss
sbb
ret
imul
lahf
adc
mov
jo
pop
fcoms
add
cmp
push
inc
mov
mov
mov
cs
stc
push
pop
pop
test
repnz
mov
bound
sbb
stc
jp
ret
xchg
aam
jmp
cmp
jmp
xor
es
test
insl
mov
pop
shlb
cmp
xchg
shrb
inc
mov
mov
sbb
cmc
mov
adc
lds
fiadds
sbb
fimuls
arpl
mov
cwtl
fsubr
push
fcom
es
addr16
push
repnz
pop
in
insb
inc
les
cmp
mov
or
pushf
or
jae
or
es
push
ret
push
es
cmp
hlt
jp
fs
psrad
dec
dec
mov
inc
lds
test
lock
inc
mov
dec
rorb
push
ret
das
pop
popf
repnz
inc
mov
mov
sbb
xor
lods
les
faddl
orl
cmpsb
cmpb
mov
addr16
or
dec
sbb
call
scas
mov
pusha
dec
test
mov
ret
cs
cmp
sub
jle
hlt
mov
or
push
add
xor
and
mov
repz
cmp
push
insb
mov
popa
xchg
sbb
imul
inc
add
jae
je
lret
ficompl
insb
sbbb
mov
enter
fisubl
adc
cmp
inc
jl
sbb
fdivr
cmpsb
in
loopne
jmp
pop
or
xchg
dec
sbb
xor
lcall
jecxz
add
mov
lods
xor
fisttpll
or
adc
jbe
sub
xchg
cmp
testb
xchg
jg
gs
jmp
push
push
lea
push
jne
stc
lock
push
jg
shll
arpl
push
fwait
int3
aas
cmpsl
add
xchg
cmp
vpminub
js
stos
xchg
inc
insl
daa
lret
hlt
push
aas
stos
jp
cmp
shl
cli
cmp
inc
les
outsb
ret
sarb
cmp
aaa
loopne
pop
into
and
dec
cmpsb
cwtl
ljmp
xchg
sub
adc
ja
test
popf
stos
js
push
jbe
dec
sub
cwtl
add
popf
dec
mov
fimull
hlt
push
push
pop
mov
nop
mov
sbb
loope
jne
lcall
jmp
mov
and
inc
lods
repnz
sbb
test
pop
cmp
test
mov
adc
mov
push
and
xor
push
sbb
xlat
outsb
xor
js
inc
dec
dec
in
inc
push
je
rcr
sub
stos
inc
ror
dec
in
pop
loope
and
orb
rorl
sub
mov
fwait
or
and
pop
rclb
mov
mov
shl
repnz
cmp
mov
ss
pop
xor
inc
sahf
cmp
out
mov
dec
enter
dec
adc
mov
dec
fldt
jne
cld
pop
sbb
es
imul
lcall
mov
mov
cmpsl
jne
mov
sarl
pop
ret
adc
fisttpll
or
out
mov
mov
add
mov
and
jno
jbe
xchg
sbb
xchg
shll
cmp
mov
into
push
jecxz
divb
sbb
xchg
sub
add
pop
out
mov
cs
jns
mov
out
push
jo
das
pushf
mov
fldl
mov
test
addl
loope
xor
and
data16
jmp
mov
add
out
push
out
and
lods
clc
cmpsl
and
out
add
jmp
lds
fmul
fsubl
cwtl
arpl
mov
or
les
cs
mov
outsl
push
in
dec
lds
adc
stos
mov
test
or
jle
adc
push
adc
shlb
cmp
dec
cmp
xchg
pushf
inc
add
enter
outsl
cmp
aas
fcmovbe
push
out
and
xchg
sub
stos
push
add
cmpsl
cmpsb
lahf
movsl
aad
inc
inc
or
loop
mull
movsl
cld
pop
imul
inc
clc
mov
cmp
ljmp
shrb
je
dec
repnz
lds
gs
or
jle
xlat
sbb
je
or
js
adc
push
add
sub
dec
in
hlt
lods
cmp
mov
jne
xchg
scas
jecxz
add
ljmp
out
subl
ds
loopne
jae
jnp
cmc
fidivs
sbb
roll
repnz
das
cmpl
cli
mov
sahf
adc
pop
jo
mov
sbb
or
xor
gs
mov
fists
inc
mov
mov
cmp
cmp
out
cli
fbld
adc
scas
xchg
push
mov
xor
add
aas
mov
loop
jnp
sub
shll
cmp
xchg
ds
subb
mov
mov
jl
cwtl
leave
ljmp
push
shlb
jmp
cld
cmp
sbb
add
repnz
les
cmp
mov
fs
jmp
and
out
je
xchg
xchg
cwtl
mov
mov
mov
fstpl
add
or
add
adc
hlt
shrl
popa
sub
ljmp
xchg
add
rcrl
push
and
sub
popf
into
fidivl
in
mov
ret
or
xor
stos
pop
fidivs
push
push
cld
imul
push
popa
jae
int
mov
ja
push
scas
lahf
mov
into
mov
stos
cmp
popf
fwait
xor
xchg
cmpsb
push
pop
cwtl
mov
and
and
dec
jb
repnz
mulb
lods
push
and
arpl
jbe
popa
jne
test
aam
dec
mov
lret
push
pop
dec
popf
ret
mov
hlt
fs
xchg
push
popf
push
bound
lcall
xchg
hlt
sub
mov
les
aas
scas
add
dec
push
into
stos
std
shl
jle
and
in
inc
sbb
ljmp
loop
lods
mov
test
sbb
dec
xor
pop
sbb
fcoml
idivb
xor
leave
sub
mov
fs
in
sbb
mov
or
rcrb
cmp
repz
scas
pusha
adc
mov
mov
lods
or
cltd
negb
test
mov
cli
sbb
insl
sahf
cmpsb
or
idivl
out
sbb
cmp
jle
or
notb
out
inc
stc
xchg
cmp
in
jo
xchg
out
pop
js
mov
fcomp
jecxz
into
jmp
aaa
scas
mov
ficomps
insl
pmuludq
fstpt
add
xor
cmp
jb
dec
mov
cmpsl
or
push
push
call
jo
inc
mov
cmp
dec
cs
dec
mov
les
lods
imul
shl
xor
in
sahf
add
sahf
enter
sub
dec
mov
pop
fs
mov
mov
inc
fs
inc
push
pop
cltd
pop
add
xchg
aam
jmp
sti
icebp
and
fsubrs
pop
lods
pushf
add
ljmp
sbb
nop
cmp
jnp
mov
nop
sarl
push
or
fiadds
lret
loope
and
push
mov
pop
push
pop
jb
in
add
out
adc
or
ljmp
dec
pop
sbb
dec
cmp
mov
cmpsb
sbb
cmpsb
out
jecxz
push
test
push
push
lret
filds
push
inc
jo
sbb
lahf
add
ret
dec
ljmp
sbb
mov
or
aas
insb
test
xchg
xchg
nop
xlat
repz
arpl
jb
mov
jge
fistpll
mov
repz
std
in
imull
repnz
movsb
imul
lahf
lret
lret
mov
push
add
push
mov
xchg
xchg
test
bound
mov
gs
dec
adc
test
add
add
insb
cld
std
jle
jne
adc
jle
pop
fiadds
xor
outsb
mov
sub
push
pop
outsl
dec
ret
imul
adc
out
lods
fstpl
ror
xchg
popf
jecxz
fwait
int
inc
adc
and
mov
cmp
sub
mov
pusha
inc
cmp
cmp
push
sarb
mov
cltd
and
fcomps
mov
fdiv
add
js
loopne
insl
add
dec
inc
movsl
mov
and
aad
rcr
lds
jp
xchg
dec
or
or
mov
std
popa
aaa
les
std
push
and
cmpsl
or
test
cmp
orb
adc
fldenv
mov
pop
aaa
add
bnd
add
jge
mov
cltd
in
outsl
fs
pop
pop
call
and
cmp
lret
cltd
push
sub
sbb
or
sub
push
sahf
xchg
and
add
cmp
pop
adc
push
and
or
add
xchg
mov
sti
xchg
testl
sbb
nop
das
pop
jbe
jecxz
cmp
inc
mov
sbb
imul
adc
dec
rorl
add
mov
dec
push
out
stc
mov
loopne
fldt
jns
mov
and
int3
adc
xchg
int3
cmc
addr16
mov
rolb
std
xchg
pop
sub
mov
sub
xchg
roll
subb
es
jge
je
pusha
jnp
inc
cmp
add
inc
adc
dec
stos
outsb
sbb
in
xchg
jge
dec
push
mov
adc
leave
jnp
dec
xchg
sbb
add
push
pop
loopne
pop
shrb
cmp
loope
dec
or
stos
mov
push
xchg
movl
xchg
popf
inc
sarl
sub
mov
cltd
lret
imul
in
or
pusha
cmpsb
fs
pop
cltd
jne
bound
in
outsl
pop
outsl
sbb
in
mov
xor
adc
mov
bound
jne
cli
testl
sub
adc
cwtl
imul
movsb
push
ja
cmpsl
pop
sbb
jle
mov
fadds
jl
out
test
movsl
dec
inc
out
insb
and
pop
pop
mov
xor
mov
pusha
or
rol
das
jmp
pop
push
cmc
rorb
leave
rcrl
push
fisubs
outsl
xchg
clc
jmp
outsl
test
movsl
rorb
push
dec
xchg
pop
aad
dec
ds
cs
dec
jno
aaa
sub
cmpsl
xchg
cmc
fwait
sub
in
add
push
std
mov
fidivrs
mov
neg
push
lret
cs
push
jl
pop
mov
dec
imul
test
ficompl
daa
movsl
mov
aas
les
cmp
mov
rolb
aad
xchg
pop
add
test
out
inc
lcall
mov
push
clc
jo
pop
fnsave
adc
pop
mov
pop
or
mov
adc
pop
sbb
jge
popa
out
xchg
xchg
pop
lahf
xchg
dec
pop
xlat
inc
mov
xchg
mov
cmpsb
jle
and
int3
addr16
lds
dec
mov
repz
mov
mov
es
jbe
fcom
jne
cs
and
call
jge
push
ret
mov
mov
sbb
jnp
and
cli
icebp
mov
popf
mov
addr16
fidivrs
mov
sahf
leave
nop
inc
subb
or
in
mov
pop
mov
jno
js
inc
das
cmp
dec
pop
mov
push
bsf
rorb
inc
cmp
pusha
cmpsb
jmp
xchg
cltd
lods
push
jge
ss
insb
push
fcomps
or
loopne
inc
xchg
or
ss
push
adc
jl
aas
xor
inc
aad
and
iret
addb
jecxz
xchg
dec
sub
sahf
lods
test
add
sub
sahf
sbb
push
push
mov
ja
sbb
andb
in
push
jge
insb
lahf
inc
xchg
sti
mov
jecxz
pop
pop
pop
test
pop
popa
mov
pop
mov
scas
mov
jp
jno
or
push
add
dec
or
mov
cli
movsl
jg
push
push
adc
lods
sub
out
cwtl
stos
repz
and
shll
mov
bound
push
mov
push
js
adc
icebp
repz
mov
and
addb
imul
mov
inc
cmp
and
push
mov
iret
cli
pop
cmp
testl
test
jmp
mov
pop
jnp
pushf
test
inc
jno
sbb
rclb
icebp
add
ret
aas
aam
cltd
push
fdiv
inc
pop
dec
jge
and
cmc
inc
sub
cmp
ss
cmovg
sbb
aad
sbb
divb
adc
in
cmp
and
push
adc
scas
lods
jge
adc
leave
fisubl
outsb
sub
and
fmuls
das
nop
jmp
pop
add
int
xlat
pop
push
add
fwait
into
ds
jno
pusha
sbb
push
push
aas
fxam
movsb
pop
test
insl
dec
pop
std
mov
push
jecxz
sbb
jno
fdivrl
jb
cwtl
in
jl
xchg
or
sub
adc
fisubrl
iret
dec
mov
inc
sub
add
je
ljmp
outsl
mov
add
pop
lock
dec
pop
rcll
pop
jle
or
fisttpll
mov
mov
adc
adc
mov
push
pop
xorb
test
ds
ret
pop
add
cli
inc
mov
loop
push
or
std
stos
cli
loope
mov
leave
mov
fnstcw
stc
in
lahf
lds
out
mov
lret
dec
lods
jae
jno
pop
hlt
dec
fisttps
daa
faddp
divl
inc
cmp
adc
dec
dec
xor
xorl
sbb
and
or
hlt
and
cld
xchg
rolb
ss
fstpl
rcr
mov
mov
ret
add
push
pop
add
popf
sbb
outsl
and
or
push
jge
xchg
sbb
mov
mov
lds
jnp
sarl
leave
push
popa
mov
cmpsl
push
cmp
jmp
cmp
push
cmpsl
cmp
mov
add
pop
and
xor
js
sarb
jns
xlat
inc
cli
mov
pop
orb
loop
loopne
leave
pop
sbb
dec
and
adc
fstpl
mov
xor
cwtl
paddusb
and
and
cmp
mov
mov
negb
test
rcrb
adc
mov
addl
lcall
mul
jae
mov
icebp
adc
jb
fwait
shll
xchg
loop
pop
add
loope
xchg
push
adc
mov
sbb
outsl
xchg
fidivrl
mov
or
dec
push
xchg
mull
loop
lret
stos
mov
ja
mov
popf
aaa
mov
or
pop
cmp
std
mov
push
fcoml
ret
xchg
mov
leave
js
int3
pop
pop
and
xchg
lock
fadd
das
mov
sbb
sub
repnz
mov
mov
and
push
orl
or
xorb
divl
xor
mov
outsl
jnp
fwait
and
xchg
xor
call
sbbl
push
rcrl
dec
sub
xor
in
jbe
arpl
push
outsb
test
sahf
jg
and
push
mov
mov
enter
popf
iret
iret
ss
insl
inc
std
sub
cltd
fwait
dec
fimuls
push
std
and
leave
push
dec
test
pusha
xchg
shlb
popl
subb
xor
out
loope
into
push
out
loopew
repz
adc
jecxz
add
jg
cmp
add
sub
aaa
pop
inc
lret
clc
insb
pushf
gs
les
pop
inc
enter
out
mov
inc
sti
fucomp
inc
out
data16
pop
cs
je
enter
pushf
adcb
pop
addr16
and
pushf
stos
mov
js
dec
add
push
cld
fistl
cmp
cmpl
sub
mov
xor
push
aad
lods
inc
aad
inc
cltd
cwtl
sub
dec
push
sbb
mov
add
es
lret
mov
pop
push
jns
aas
insl
add
xchg
xchg
icebp
pop
arpl
push
pop
jmp
fldlg2
pop
stos
inc
pop
adc
pushf
mov
and
mov
fnstenv
outsl
push
inc
std
adc
sbb
loopne
xor
iret
lea
dec
loop
cmp
mov
filds
mov
mov
test
or
std
push
mov
mov
std
test
mov
inc
sub
aad
jae,pn
lret
sub
xor
mov
pop
lahf
inc
adc
and
std
jnp
loope
pop
sbb
xor
jecxz
stos
faddl
push
cmp
cld
cmp
ret
scas
push
adc
in
addr16
jo
stos
or
jmp
shr
xchg
xor
ds
mov
jl
or
iret
aam
test
mov
cld
push
int3
inc
subb
mov
or
clc
lds
add
push
xchg
ljmp
test
cmp
scas
xor
test
pop
sbb
cltd
mov
mov
movl
js
inc
mov
sbb
imul
sub
mov
fs
adc
fsts
xchg
loop
jp
nop
adc
jno
cmp
push
jno
lahf
adc
add
stc
fisubrl
adc
mov
pop
push
mov
sub
or
imul
xchg
push
lret
lahf
cmp
inc
dec
sbb
data16
loop
inc
pusha
xor
je
nop
dec
testl
roll
jmp
xor
mov
sub
xor
scas
add
outsl
insl
enter
pop
fimuls
ja
mov
in
popa
enter
adc
sbb
sbb
xchg
dec
in
push
dec
cmpsl
cmp
xlat
sub
xchg
pop
or
xchg
out
inc
int3
test
mov
xchg
mulb
ret
insl
aaa
xchg
mov
inc
leave
shll
push
or
sbb
int3
lds
pushf
pop
std
das
pop
in
sub
fidivl
mov
arpl
sbb
insl
pusha
pop
push
int
and
dec
dec
cli
mov
mov
lea
sub
push
cmp
lods
sarb
mov
es
sarl
and
mov
leave
mov
push
popa
xor
std
ret
and
stos
loopne
pop
push
xor
or
orl
mov
pop
push
lods
sub
inc
mov
pop
iret
out
mov
outsb
test
movhps
jns
dec
cmpsl
pop
cmp
std
mov
cltd
and
fstps
xchg
adc
cmpl
push
stos
adc
ror
enter
cmpsl
out
nop
imul
enter
jbe
test
les
shlb
mov
aaa
imul
xchg
stos
lock
and
add
and
sbb
sbb
subl
nop
mov
les
push
pop
fs
push
xchg
add
mov
cmp
xchg
xor
fsubrs
flds
mov
sbb
call
in
stos
repnz
xchg
mov
jb
push
out
mov
xor
loope
sti
xchg
add
call
mov
bound
lret
ljmp
int
fwait
xchg
pop
pop
mov
int
out
stc
cmpsl
sub
adc
jne
cs
insl
dec
in
cmpsb
mov
leave
leave
jns
stos
and
ret
mov
aas
cmp
mov
inc
xor
rolb
loope
jae
sbb
mov
lds
fs
nop
lret
xchg
loop
imul
xchg
push
jmp
pushf
mov
cmp
inc
call
cmp
xor
lret
test
mov
mov
clc
sub
mov
push
insl
cmp
xor
jnp
or
clc
add
ja
into
fldcw
mov
mov
jmp
mov
mov
loope
push
adc
jo
push
push
xchg
arpl
mov
push
fcomps
mov
and
push
jecxz
sub
pop
or
aaa
jno
sbb
or
mov
cmp
dec
jbe
mov
imul
arpl
aam
xor
int
hlt
test
jb
test
xchg
int
xor
stos
push
xor
leave
int3
subb
sub
or
dec
add
imul
push
sub
sbb
aad
mov
sub
out
dec
and
and
mov
jecxz
cmpsl
xorl
fldcw
ss
bound
dec
into
loopne
push
push
adc
in
insb
inc
in
dec
lea
repz
test
dec
push
dec
sub
mov
or
mov
or
call
fistpll
lcall
xlat
push
ss
ficoms
or
dec
sub
sub
jns
push
and
pop
push
dec
fwait
mov
shrl
sub
inc
aam
lock
cwtl
pop
sbb
dec
mov
mov
enter
push
xchg
jle
inc
shlb
das
movsb
mov
lahf
push
cwtl
cld
shl
es
pop
dec
mov
dec
inc
jp
mov
js
popa
pop
mov
mov
cmp
sub
fimuls
fwait
pop
sub
ret
outsl
scas
mov
and
dec
dec
adcb
mov
push
pop
jne
ret
orl
test
pop
sbb
xor
push
push
mov
das
jae
imulb
add
jno
or
pop
mov
test
xor
retw
je
add
or
push
loopne
fnstsw
mov
lret
call
inc
xor
mov
fisubl
jmp
out
stc
and
cmp
aad
filds
mov
inc
mov
orb
inc
xor
fidivs
xor
lahf
cmp
and
hlt
subl
pushf
dec
mov
ds
repz
jbe
inc
adc
push
xchg
sub
pop
mov
pop
rcrl
in
test
sbb
push
ret
outsb
jle
xchg
sbb
ljmp
dec
mov
sbb
lret
mov
mov
add
inc
lods
and
out
out
mov
pop
mov
pop
inc
lea
xchg
je
cmp
shrl
in
pop
insl
stos
inc
xchg
fwait
pop
cmpsb
scas
cmp
sub
pop
dec
imul
pop
ss
cmpsb
arpl
jb
testl
jge
jnp
inc
dec
pop
test
xchg
bound
lds
hlt
adc
add
sbb
lods
jnp
mov
cmp
or
mov
mov
sbb
sbb
xor
mov
mov
popf
fmull
sbb
xor
and
jns
sbbb
js
in
xor
roll
or
add
test
cmp
gs
test
add
add
mov
mov
xchg
mov
popf
sbb
ja
scas
adc
fdivr
and
pop
in
jbe
push
mov
sub
mov
sbb
outsl
mov
jae
xor
adc
aas
sub
inc
mov
sbb
fs
xchg
mov
mov
xchg
inc
mov
leave
and
sub
ficoml
ja
hlt
loope
mov
pop
daa
aaa
xchg
in
jge
out
shll
loope
adc
dec
or
pusha
adc
mov
rorl
ret
das
aad
mov
dec
enter
test
mov
dec
mov
xchg
push
fmulp
mov
push
or
or
pop
cltd
imulb
and
movsb
insl
pop
sbb
out
inc
pop
jo
std
add
out
inc
mov
iret
mov
cmp
fists
pop
jno
fdivr
and
jg
jl
stos
ds
cwtl
add
xchg
rorb
vorps
and
mov
popa
mov
out
cld
mov
lock
jne
or
faddp
mov
add
enter
add
rolb
inc
jle
jb
or
dec
fidivrl
mov
inc
adc
stc
icebp
xchg
loope
add
sbb
sbb
inc
sahf
repz
movl
popa
out
rclb
add
sti
add
sar
rorb
inc
nop
jecxz
mov
ret
ds
std
adcb
sbb
dec
jle
dec
inc
sarb
mov
lods
sti
push
sbb
mov
sti
ss
push
pop
clc
pushf
es
jae
jbe
xor
call
std
test
xor
out
orl
mov
sti
dec
pop
adc
push
mov
jbe
fs
or
repnz
adc
fists
and
imul
cmp
push
in
xlat
push
mov
xchg
pop
xchg
mov
xor
inc
sub
jl
sbbb
jne
xchg
xor
sbb
insl
movsl
in
int3
movsl
cmp
test
or
xor
dec
mov
push
shll
clc
xchg
test
ljmp
dec
inc
mov
test
iret
pop
cli
movsb
push
orl
aas
cli
mov
push
scas
adc
fiadds
jle
inc
lret
sbb
arpl
xchg
cmpsl
lods
cmp
inc
and
aas
lret
in
adc
inc
or
dec
jnp
lods
rorl
aad
dec
or
sub
ret
mov
dec
rorb
and
xor
stos
jp
adc
mov
or
xchg
xchg
rorb
mov
xor
push
pushf
in
in
cmc
cmp
jle
ljmp
mov
push
fadds
inc
call
pop
push
and
xchg
pop
adc
insl
fs
inc
adc
dec
fisttpl
push
push
mov
pop
loope
out
jb
dec
inc
std
scas
das
fiadds
das
push
es
push
lods
push
gs
sbb
scas
inc
xor
cmp
xchg
jns
das
or
test
jnp
fldcw
test
jp
fstl
cmp
pop
sbb
outsl
push
insl
sub
test
loope
pusha
adc
imul
sbb
pop
jge
lret
scas
add
inc
push
jb
aaa
repz
mov
xor
push
mov
sub
pop
xor
jb
push
fistps
loopne
imul
adc
lahf
sub
cmp
jecxz
mov
testl
add
js
rol
test
addl
movsb
add
mov
sbb
xor
dec
adcl
insb
jmp
xchg
sahf
popf
imul
das
jecxz
jmp
cmc
push
push
and
mov
ss
sub
pop
pop
xchg
push
insb
xchg
jae
outsl
stc
shlb
sub
xor
push
icebp
mov
adc
lods
hlt
movsl
pusha
cmp
xchg
mov
xor
ret
mov
push
ljmp
in
loope
and
repnz
lds
sub
cmp
hlt
mov
test
jmp
dec
add
fimuls
sarb
pop
mov
cltd
out
lock
jle
push
and
out
enter
xor
push
mov
pop
dec
cmpsb
icebp
jb
les
dec
fsubrp
jl
lods
mov
pop
aaa
arpl
in
imul
cmc
lret
std
mov
dec
in
mov
lds
mov
jns
or
shrl
pop
stos
pop
lret
push
std
out
push
and
repnz
call
das
test
xor
arpl
push
xchg
adc
data16
inc
hlt
dec
bound
inc
push
push
xor
ret
xor
cltd
mov
lods
jp
loope
shrb
popa
dec
scas
imul
and
jmp
jae
loop
or
and
mov
cmp
xchg
sub
in
inc
std
adc
clc
incb
aas
in
mov
xchg
xor
mov
pop
xor
aad
jg
out
sarl
xchg
xor
sub
mov
mov
testb
xor
mov
iret
js
jbe
arpl
imul
ljmp
sbb
mov
add
or
daa
movsl
inc
pop
clc
mov
adc
or
das
dec
push
cmp
cwtl
repz
and
dec
jnp
lea
push
es
and
cmp
std
push
dec
or
out
cmp
mov
mov
sub
popf
xchg
xchg
lret
xchg
addr16
out
imul
and
addr16
decb
out
mov
add
or
js
or
in
lea
out
inc
or
daa
enter
dec
mov
cmpsl
add
andl
pop
dec
loopne
stos
xchg
jo
sub
push
mov
andl
dec
sbb
enter
add
pop
mov
adc
hlt
sarb
push
push
dec
adc
fdivl
mov
mul
mov
dec
jmp
mov
jle
jo
fs
or
mov
sub
push
test
cwtl
mov
xchg
dec
rolb
jmp
orb
add
mov
push
in
gs
adc
mov
mov
out
daa
jg
mov
pop
std
sarb
jl
scas
jns
mov
stos
jae
mov
fisttps
ret
roll
aas
sub
mov
cmp
fwait
mov
sub
subb
ljmp
mov
sbb
add
outsl
dec
mov
push
cmp
and
jae
call
or
inc
mov
sub
int3
mov
pop
push
and
xor
aas
pop
and
std
pushf
leave
stos
popl
dec
dec
sarb
lods
xchg
out
mov
fwait
sarb
dec
pop
xor
mov
push
push
and
mov
aas
jns
insl
call
or
mov
ljmp
out
jge
es
outsb
cs
inc
mov
iret
sbb
addr16
push
test
movsl
inc
add
adc
in
sbb
out
insl
das
adc
mov
imul
mov
leave
fildll
push
push
or
jns
outsb
dec
mov
mov
cmp
test
push
dec
sub
adc
movsl
iret
sbb
adc
pop
xchg
scas
in
fs
add
mov
int
pop
mov
inc
ror
push
stc
ret
push
lock
mov
jbe
and
sbb
pop
push
xchg
fdivr
inc
cld
xor
xlat
xor
lret
in
mov
pop
mov
jne
push
fidivrs
or
aam
decb
mov
pop
ss
dec
add
mov
shrl
enter
jg
arpl
pushf
subb
jnp
or
loop,pt
cmp
arpl
lahf
out
mov
mov
loope
jl
push
aaa
lret
fisubs
fistpl
mov
cmp
inc
fimuls
pop
test
or
addr16
and
inc
loop
mov
or
pushf
fidivrs
out
adc
dec
arpl
mov
pop
insb
pop
lret
nop
cmpsb
dec
or
cs
loope
adc
arpl
sub
add
lret
test
cmpsl
xchg
add
mov
pop
jbe
test
xor
int3
adc
les
adc
add
pop
sbbl
inc
dec
mov
pop
mov
test
push
or
movsb
popa
subl
dec
je
inc
andb
sbb
cmp
mov
flds
push
mov
pop
push
jne
mov
ljmp
xor
pop
popa
xlat
shrb
popf
push
add
pop
int
sub
enter
sub
jae
mov
or
mov
adc
movsb
sarb
cmp
or
mov
inc
mov
aas
incb
fimull
jbe
stc
into
pop
lret
scas
mov
dec
push
loope
and
fldenv
in
or
and
pop
xchg
and
cmp
shl
test
sub
fstps
adc
in
jnp
xchg
or
cmp
insb
ljmp
sahf
mov
iret
mov
aam
aam
outsl
stos
mov
dec
jmp
arpl
add
mov
pop
test
lret
ja
popf
pop
mov
add
sub
movsl
out
fsts
popf
or
into
dec
xchg
loopne
mov
xor
pop
push
xchg
jns
mov
mov
testl
dec
xchg
fs
inc
xchg
out
popl
fidivl
mov
pop
gs
aaa
xchg
repz
hlt
js
mov
js
imul
or
mov
push
push
in
sarl
shll
incb
pop
call
loope
mov
sti
mov
ret
fists
jg
jge
ljmp
inc
dec
cld
iret
rclb
xchg
test
shl
mov
pop
leave
in
xchg
mov
jo
jl
sbb
push
aam
xchg
jae
enter
jno
jmp
rorb
hlt
cmp
cmp
mov
lahf
outsl
xor
jg
je
push
scas
loope
pusha
nop
mov
push
push
jo
lock
cwtl
sub
add
data16
or
pop
adc
test
adc
inc
and
cmp
inc
out
mov
outsl
push
jge
pop
std
push
je
sub
neg
and
sub
mov
push
sub
ficoml
inc
movb
mov
bound
xor
xor
or
pop
dec
in
lods
mov
mov
jae
mov
xchg
add
dec
iret
repz
insl
sub
or
loopne
lcall
inc
insl
mov
mov
lret
mov
xchg
push
sbb
js
mov
sub
inc
push
enter
adc
add
aaa
cwtl
xchg
inc
inc
mov
add
ds
mov
stc
mov
out
mov
mov
add
addl
das
adc
push
mov
lahf
lret
sbb
jge
addr16
js
aas
cmpl
adc
rcl
mov
inc
mov
and
dec
rorb
dec
and
ja
pushf
rorl
cmc
ds
js
sub
fcom
insl
mov
mov
gs
and
sbb
pop
mov
das
mov
sub
mov
xlat
xor
pop
sbb
jns
ds
and
mov
jg
push
out
cmp
push
cmp
lea
sbb
cwtl
test
roll
add
rcrl
push
mov
decl
jne
ret
sub
dec
push
sbb
mov
pop
jge
push
mov
in
xchg
fdivrs
prefetchwt1
stos
jg
push
int
cmc
jge
jp
adc
add
outsb
test
test
aam
sbb
mov
fdivr
imul
mov
sbb
shll
mov
adc
push
mov
mov
cmp
leave
xor
inc
pop
or
js
jecxz
adcl
shlb
and
inc
lret
jae
iret
imul
sarb
inc
jb
cmp
addl
insb
arpl
pop
pushf
jecxz
test
and
test
das
jns
or
jae
and
daa
pop
add
mov
pushf
and
add
push
sbb
or
jnp
lock
scas
clc
popa
fldln2
xchg
or
jl
gs
int3
aad
inc
dec
mov
jno
push
rolb
dec
push
test
and
rclb
ficompl
fwait
inc
lret
gs
in
sbb
add
js
test
and
and
inc
add
sub
loope
fimull
or
rorb
dec
int
jae
pop
fcmovnu
xchg
push
mov
and
stc
insb
mov
inc
adc
or
add
fwait
sbbb
call
out
cwtl
cmpsb
enter
inc
jns
fldln2
xor
mov
push
loop
stos
sti
xor
mov
sub
lret
pop
dec
push
sub
jnp
scas
jge
in
ljmp
enter
pop
push
mov
stc
xchg
pop
mov
sti
scas
insl
push
sub
leave
jne
test
mov
fldcw
push
aaa
inc
and
loope
lods
fldcw
lds
jbe
cmp
push
lock
or
lods
inc
out
stc
shll
xor
insl
and
popf
xchg
xchg
adc
lea
pop
xchg
pop
loope
push
jle
push
insl
outsl
sub
out
dec
push
popa
mov
es
cmp
xchg
loope
mov
cwtl
cmp
je
daa
push
int
xor
fisubs
and
xor
test
std
daa
xor
roll
js
fsubs
dec
or
adc
bound
jbe
les
fimull
int
push
jg
in
cmova
ss
sub
inc
sbb
pushf
mov
jmp
je
and
sbb
fisubl
pushf
cmp
cmp
or
lea
hlt
leave
fisubs
push
cmpsb
call
out
dec
jle
loopne
lock
mov
movsb
add
xchg
cmp
rcl
fdivl
add
cwtl
stc
jb
xor
adcl
push
xchg
or
dec
pop
fmull
inc
fisttpll
inc
cmp
jno
ret
push
push
jle
xor
aas
ret
pop
cli
mov
adc
xchg
mov
sbb
pop
pushf
mov
mov
je
pop
xor
mov
pop
and
popa
ss
inc
cltd
sahf
out
cli
shr
pop
loope
test
add
dec
mov
outsl
rcll
leave
scas
xchg
inc
inc
int3
les
fnsetpm(287
lods
ret
aad
jne
dec
sti
stos
or
mov
pusha
add
fstps
fbld
adc
dec
jae
jle
mov
into
andb
insb
dec
jae
mov
ret
xchg
clc
dec
std
sbb
xchg
ljmp
or
jecxz
pop
mov
push
test
push
jg
shrl
insl
push
or
movsl
movsl
mov
adc
mov
or
gs
mov
shr
ror
out
or
mov
rorb
cwtl
add
lea
mov
nop
add
mov
sub
adc
stos
push
inc
xchg
or
lret
mov
inc
sub
jo
inc
mov
cmc
shlb
mov
arpl
or
mov
inc
aaa
jp
cltd
fdivr
xor
and
test
jae
xor
in
les
imul
inc
mov
mov
pop
aam
out
or
mov
cmp
aam
xor
movsb
xchg
in
adc
push
fildll
das
stc
js
or
decb
out
fwait
sahf
pop
leave
dec
push
into
add
jg
roll
sbb
arpl
cltd
adc
cmc
dec
and
xlat
sti
mov
movsl
faddl
lcall
and
aas
out
mov
repz
mov
add
push
movsb
ds
andb
fwait
lret
mov
movsb
mov
inc
pop
repz
cmpsl
jmp
sbb
dec
or
adc
push
and
add
sub
jecxz
pop
pop
das
shrb
xchg
push
gs
sbb
loope
jnp
and
inc
add
pop
inc
cli
add
mov
fcomps
aaa
inc
insb
pushw
xor
ljmp
stc
cmp
enter
mov
out
arpl
cmpsb
dec
push
mov
jbe
les
cmpsb
dec
insl
mov
out
aas
dec
imul
roll
in
pop
ret
xor
cli
loope
inc
movsl
push
xchg
push
push
movsl
or
decl
pop
fs
jge
call
pusha
inc
sub
mov
xor
xchg
inc
and
jo
dec
call
daa
inc
fwait
jne
jo
and
cmpl
adc
add
push
adc
rolb
scas
mov
sbb
cmc
andb
or
add
mov
sub
pop
rorb
xchg
outsb
sahf
pop
add
mov
xor
jae
test
jl
or
cmp
add
fdivs
or
cmpsb
mov
xchg
inc
and
addr16
lret
aam
ja
sbb
popf
inc
int
inc
imul
dec
fidivrs
cltd
cmp
daa
call
or
fnsave
arpl
clc
cli
xor
adc
fildl
fdivs
cmp
ret
scas
scas
mov
push
pop
xor
mov
pushf
shlb
lcall
mov
adc
jl
dec
xchg
jo
je
clc
les
inc
insl
and
fdivrs
push
loop
adc
in
add
sub
and
sahf
outsb
fwait
dec
loopne
dec
cmp
shrl
lcall
dec
stos
mov
in
xor
cmp
jo
out
sbb
cmpsl
iret
and
sbb
adc
push
aad
sbb
ja
xlat
insb
test
dec
add
mov
cmpsl
mov
pop
lret
sbb
mov
out
es
daa
and
pop
xchg
fidivrs
shrb
or
out
hlt
mov
xor
stos
mov
xchg
mov
cmp
adcl
mov
inc
fldenv
pop
xor
into
push
std
xor
xor
mov
or
pusha
rcll
pusha
push
xor
inc
inc
jo
pop
enter
mov
pop
pop
jecxz
outsl
test
in
andb
addr16
in
mov
imul
mov
sbb
inc
int3
mov
out
mov
xor
in
xchg
xchg
xchg
pop
dec
push
data16
and
inc
inc
sbb
mov
in
pop
pop
lock
sbb
dec
jle
les
pop
jnp
xchg
jae
adc
sub
jb
mov
pusha
out
pop
lea
dec
push
cwtl
pop
rorl
jmp
fnstsw
bound
in
mov
mov
cwtl
stc
ror
sub
fmull
mov
daa
add
or
lret
bound
mov
dec
mov
cs
jmp
test
sub
jmp
mov
clc
shrl
mov
cld
pop
and
xchg
arpl
mov
lcall
adc
test
mov
mov
inc
ficoml
repz
or
out
fdivp
sbb
inc
inc
cs
rolb
jge
imul
mov
sub
mov
jg
into
mov
int
xor
push
push
mov
mov
aaa
js
shrb
mov
or
popf
pop
adc
call
inc
pop
and
int
pop
outsb
xor
in
inc
sbb
in
es
push
out
data16
mov
mov
lret
sbb
iret
orl
push
sbb
lea
mov
dec
fiaddl
xchg
pop
dec
add
fbld
inc
mov
or
or
dec
or
loopne
mov
mov
mov
xchg
push
and
and
ss
push
cwtl
addr16
int
lea
cltd
sub
cmp
std
out
bound
sub
dec
aas
sub
gs
mov
sahf
xchg
pop
lock
test
jmp
mov
xlat
mull
adc
xchg
movsb
cmp
push
bound
jnp
les
int
imul
jecxz
inc
test
adc
rclb
mov
negb
sbb
mov
fcmovbe
negl
arpl
jno
mov
xchg
and
mov
daa
mov
adc
dec
mov
je
jg
jmp
mov
sub
and
add
sahf
lds
mov
les
icebp
mov
mov
fildll
mov
add
scas
fs
mov
jo
mov
and
xchg
dec
das
stos
ljmp
mov
push
and
popf
es
data16
and
shll
outsb
inc
imul
xor
ret
push
jno
sahf
arpl
test
and
push
pop
push
cld
or
out
push
mov
xor
mov
in
pushf
lret
shll
imul
icebp
sbb
jo
and
cmpsl
fs
sahf
pop
imul
lcall
sbb
les
clc
stc
jl
mov
in
mov
adc
pushaw
sub
mov
mov
rolb
jecxz
dec
cmc
addr16
xor
in
dec
push
xchg
mov
pop
adc
daa
je
mov
push
je
mov
add
push
mov
push
lds
mov
jl
mov
fucom
dec
orb
or
movsb
cld
sbb
xor
std
jecxz
inc
lret
inc
jl
and
mov
adc
subl
std
and
hlt
cmc
cmpsl
outsb
cmpb
cmp
cmp
xor
jg
fdiv
mov
push
cmp
mov
cmp
add
xor
adc
cmp
cmpsb
xor
and
stc
pushl
push
jle
mov
dec
aad
leave
or
out
and
adc
adc
or
loopne
or
adc
dec
push
stc
scas
popf
mov
mov
add
mov
mov
jl
insl
add
push
outsb
dec
and
mov
int3
mov
pop
cltd
cmp
out
outsl
dec
movsb
cmpxchg
and
imul
sti
ljmp
stos
adc
lods
adc
fwait
jg
insl
repnz
addr16
pop
xchg
rcrb
xchg
test
mov
adc
xor
sbb
ljmp
sti
jl,pt
jg
pop
mov
pop
aam
les
pop
je
sbb
aas
xchg
dec
pusha
rorb
js
inc
xor
popf
cmp
xor
xor
icebp
cmp
addr16
sarb
xor
js
push
aas
out
mov
lret
mov
dec
push
push
mov
cltd
or
fdiv
outsb
pop
jg
lods
int
xchg
sbb
mov
add
jno
fsubr
pusha
dec
mov
call
cwtl
adc
mov
add
push
push
push
cmp
adc
loope
cld
neg
cmp
or
stc
push
push
mov
lds
andb
adc
cs
adc
xchg
std
push
push
popa
sub
mov
push
push
pop
mov
xchg
mov
in
mov
or
push
fimull
sbb
popf
into
push
sub
into
mov
jns
xchg
ss
add
mov
xlat
or
pop
push
push
xchg
pop
mov
sub
aas
jmp
mov
stc
sub
iret
adc
call
mov
insb
stos
cmp
ss
cltd
pop
divb
xchg
xchg
jmp
push
shrl
sub
sbb
mov
in
inc
loop
xchg
subb
dec
adc
cmp
shlb
and
bound
test
outsb
outsb
imul
push
pusha
mov
xchg
add
adc
fistpll
shrl
mov
mov
sbbb
xor
mov
mov
into
and
mov
xor
dec
lods
dec
hlt
pop
mov
adc
mov
test
call
out
adc
ret
push
xor
int3
dec
arpl
stc
mov
pop
mov
or
dec
push
dec
neg
out
add
dec
sub
adc
arpl
pop
daa
sub
xchg
add
inc
push
mov
dec
ljmp
mov
inc
push
iret
popa
or
gs
inc
in
pop
lret
mov
jb
cld
xchg
testb
xchg
pop
outsl
or
adc
xchg
aad
sub
jmp
jle
sbb
fwait
mov
adc
push
fbstp
mov
test
jle
jns
pop
and
mov
cmp
or
adc
or
mov
mov
in
jmp
push
xor
rcrl
inc
xchg
popa
pop
lea
mov
mov
jne
aas
flds
js
push
test
sbb
pop
and
adc
add
push
pop
loopew
fistl
and
mov
pop
in
push
jbe
cld
lock
xchg
dec
xchg
mov
cmp
xor
les
jb
pushf
std
fldl
aam
ja
lods
inc
loop
pop
inc
sub
or
pop
lock
scas
lea
aaa
inc
push
lret
add
mov
xchg
cmpsl
stos
mov
inc
push
pop
xchg
cmp
jle
data16
sbb
or
push
lds
push
test
push
sbb
cli
arpl
push
cmovle
push
popa
pop
sub
dec
fsubrs
insb
sbb
ja
lods
adc
mov
lods
xchg
data16
ficomps
fstpt
test
test
push
imul
cmpl
loop
pop
fcomps
xchg
jge
xchg
lret
cld
mov
mov
cs
mov
xor
jge
pop
out
cmc
aas
jl
xor
in
stc
gs
add
add
pop
jne
ljmp
dec
lcall
mov
andb
adc
ret
aam
inc
fcomps
cmp
stos
mov
movsb
cli
push
lret
scas
mov
stc
cli
sbb
dec
fisubl
push
add
pop
and
push
sub
scas
in
jge
shll
cmc
fwait
sub
outsb
outsb
cmpsl
outsb
mov
aaa
or
or
lret
ljmp
mov
test
dec
cmp
aas
xor
lahf
adc
inc
stc
jb
in
scas
mov
lds
insl
add
in
cmpsb
les
and
movsl
psllw
pushf
add
out
jae
dec
loopne
and
mov
push
mov
xchg
mov
aad
in
or
push
push
jecxz
pop
je
das
repz
and
push
xor
mov
cmp
mov
sub
es
jmp
push
xor
popf
pop
popa
lahf
and
dec
adcl
into
imul
push
ja
add
mov
xor
mov
dec
sub
push
rcll
scas
push
pop
xchg
aaa
mov
je
cld
in
pop
jne
stos
mov
lods
fimuls
cmp
pusha
push
lcall
std
push
sub
lcall
jbe
push
mov
dec
scas
dec
cmpsl
xchg
stos
xor
cmpsb
mov
sbbl
pop
ds
dec
inc
rcr
fisttpl
jo
mov
add
sub
pop
mov
add
icebp
sahf
add
fsub
push
mov
mov
les
bound
add
mov
sbb
push
sbb
lock
dec
aas
inc
in
sub
add
in
test
or
and
scas
or
and
fucomi
xchg
jo
add
mov
adc
pop
movsb
iret
pop
in
mov
in
push
mov
sbb
je
gs
mov
aaa
dec
pop
mov
adc
aaa
pop
loope
pop
aam
or
andl
mov
cmp
jmp
mov
pop
addr16
xchg
pop
aaa
loop
adc
dec
push
dec
pop
dec
shrl
dec
jnp
add
mov
rcl
sub
jle
mov
pop
nop
mov
sbb
cmpl
xchg
out
inc
mov
popf
sub
push
inc
push
sahf
outsb
ficomps
stos
repz
pushf
mov
testb
inc
sub
ret
into
xchg
loopne
mov
jae
sbb
ljmp
xchg
xchg
mov
iret
xchg
pop
pminub
jle
imul
out
in
repz
add
out
pop
jnp
aad
adc
gs
outsl
repnz
push
mov
out
ret
stc
loope
adc
cmp
mov
xlat
loope
aaa
jbe
mov
addr16
pop
popa
cmpl
xchg
push
push
loope
xchg
sti
mov
stos
nop
imul
loopne
or
jo
pusha
mov
int
lcall
pop
jb
pop
int
nopl
sub
sub
jo
cmc
pusha
mov
and
push
jbe
xchg
imul
hlt
imul
sti
xor
adc
cmpsb
xor
int3
dec
insb
push
xchg
add
pop
cltd
pop
mov
or
add
push
data16
sbb
ds
add
lret
dec
fmull
stos
xor
push
dec
sbb
lcall
xor
cli
xchg
add
xchg
psrlw
jle
xchg
adc
and
xchg
or
mov
in
dec
mov
xchg
out
push
lods
enter
inc
inc
pop
jecxz
add
add
enter
and
insl
stc
xchg
cmp
daa
sub
pop
sub
xchg
xchg
mov
mov
lods
int3
and
dec
hlt
push
cmpl
data16
fisubs
ds
mov
pop
push
add
cld
inc
fstpl
out
inc
jle
jge
sbbb
loope
bound
pop
jne
roll
lret
in
dec
lods
fmuls
popl
cmp
jmp
aaa
mov
push
lods
in
andl
and
pop
push
sti
out
nop
out
push
addr16
mov
test
cmpb
test
pop
leave
sub
fwait
daa
adc
ds
movsl
mov
iret
sub
push
rorb
or
fwait
jge
jno
xchg
shl
test
std
xchg
ret
inc
pop
push
faddl
addr16
gs
int
jl
into
inc
jae
mov
mov
cmc
xor
pop
imul
jnp
sub
outsl
cmp
inc
lock
push
sub
sub
insl
stos
cmp
ss
inc
adc
dec
test
je
mov
dec
xchg
push
je
push
sbb
cs
and
sub
test
inc
add
shll
fwait
pusha
pop
aaa
mov
inc
xchg
fwait
pusha
pop
fbld
je
movsl
dec
std
sbb
and
cmp
jge
sub
stos
test
jg
neg
adc
cmp
xor
shr
outsb
bt
outsb
xor
scas
leave
and
aas
adc
stos
and
loop
test
rorb
push
xor
cwtl
mov
mov
popa
dec
sarl
insb
les
xchg
imul
loope
int
sub
out
ja
pop
jp
cmp
inc
sub
cmp
xchg
lods
adc
dec
dec
aad
mov
cmp
and
stos
imul
jns
leave
mov
outsl
lds
cwtl
inc
fisubs
push
aad
lea
test
sbb
std
rcrb
dec
push
sub
stc
sbbb
lret
inc
in
adc
push
xchg
dec
add
adc
pushf
mov
xchg
or
aam
pop
mov
adc
sub
xor
imull
jnp
mov
mov
jb
insl
xor
sbb
in
push
lret
sbb
add
clc
dec
or
daa
mov
outsb
inc
mov
or
ret
popa
dec
mov
jnp
enter
add
rorb
fsubl
mov
adc
aas
scas
or
es
int3
jg
mov
fildll
jmp
dec
std
cmp
inc
pop
ds
push
inc
jne
xor
scas
in
or
pop
repz
adc
cmp
push
fdivs
jp
push
fs
xor
dec
add
xchg
sarb
adc
add
mov
mov
ficompl
aad
std
rorb
outsl
mov
push
ja
repnz
popf
inc
cwtl
insb
addr16
mov
jmp
jne
sbb
inc
pop
mov
mov
pop
xchg
out
sub
adc
mov
inc
adc
cmp
and
fs
mov
mov
sbb
or
rclb
das
cs
jle
cmpsb
negl
shlb
and
stc
push
sub
je
test
jl
je
andl
arpl
es
pop
push
jg
fwait
arpl
jge
sbb
inc
fists
inc
imul
mov
xlat
xor
mov
mov
xchg
xor
js
fidivl
int
add
mov
sub
pop
movsl
or
loop
jg
in
inc
sub
sbb
stos
call
mov
sub
xor
and
aad
aaa
mov
icebp
inc
jo
jbe
cmp
sbb
lods
add
push
into
iret
sub
rcrb
sub
imul
mov
push
or
add
push
and
adc
xor
or
cs
or
xchg
fmull
pusha
xchg
mov
cli
mov
aas
inc
popl
jle
loop
jle
leave
and
xor
dec
inc
and
std
jae
pusha
mov
jge
rcl
dec
cmp
jns
sbb
es
mov
jbe
xlat
add
data16
int3
ret
mov
inc
clc
xchg
mov
out
enter
or
mov
sbb
lea
stc
stos
adc
sub
popw
and
hlt
add
loop
push
imul
hlt
dec
ret
and
addb
addr16
stos
push
loope
test
rclb
loope
test
add
ret
rcll
xor
mov
call
mov
add
lret
xor
imul
cwtl
inc
adc
xchg
je
push
adc
cmpl
mov
ds
ret
pop
mov
out
int
lahf
pop
pop
mov
lock
cmpsl
fiaddl
mov
outsb
and
jo
sbb
inc
lock
cmc
loopne
int3
mov
lock
hlt
mov
fimuls
mov
push
and
ror
jmp
pushf
and
bound
subb
adc
mov
xorb
fisubl
dec
mov
mov
fcmovbe
xchg
sub
wrmsr
rcrb
loope
adc
leave
arpl
mov
ret
imul
or
les
xchg
mov
mov
dec
xor
cld
mov
out
push
loopne
mov
push
gs
jae
xor
mov
movsl
ja
xchg
shll
mov
inc
decl
aaa
loop
xor
jecxz
rcrl
int
pop
jge
cmp
test
jnp
jns
xorl
push
xor
mov
out
imul
push
ss
inc
cmp
sahf
mov
mov
xor
test
or
cltd
bound
lea
jae
mov
stos
or
ljmp
bound
jnp
test
dec
in
pusha
mov
xor
into
cmpb
aas
and
sbb
pop
test
xor
push
insl
test
jle
and
adcl
divb
ss
outsb
dec
xchg
cmp
aad
shrl
int3
scas
in
call
inc
inc
orl
push
loope
sahf
ljmp
and
inc
xchg
divl
and
sub
ret
fwait
xchg
aam
or
xchg
test
std
mov
mov
jno
xlat
ss
arpl
dec
xor
jmp
pop
xor
out
xorb
jb
in
lret
hlt
sub
jbe
sub
or
sti
xchg
test
sahf
pop
inc
scas
pusha
jb
and
adc
mov
xchg
fistl
rcr
pushf
out
push
xchg
mov
cli
pusha
add
iret
into
push
imul
inc
outsl
or
movsl
inc
subl
mov
mov
push
push
enter
add
das
push
imul
lcall
in
xchg
pop
fadds
mov
out
pop
out
arpl
push
int3
lcall
push
sbb
fdivs
mov
dec
cltd
adc
add
jno
ja
hlt
orl
xor
stos
test
fs
fimull
jl
adc
xlat
rorl
out
jae
mov
mov
test
out
stos
lahf
test
xor
rcl
das
gs
cltd
ljmp
mov
push
out
aad
daa
xchg
je
jno
lea
ss
addr16
xor
aam
xchg
out
arpl
push
fs
cmp
loopne
adc
rol
or
add
and
xchg
shlb
add
xor
sbb
mov
stc
ja
sub
call
movsb
mov
xor
daa
jae
roll
mov
push
js
pop
shlb
adc
sub
leave
out
in
or
pop
pushf
jmp
incb
lea
lahf
loop
xor
lock
rcrl
mov
cmp
mov
out
in
mov
mov
xor
xor
inc
xor
add
int3
or
mov
pop
fs
mov
stos
notb
shrb
icebp
dec
sub
pop
and
and
leave
mov
jnp
mov
mov
pushf
daa
cmpsb
pop
adcb
in
inc
pushf
inc
jae
pop
mov
mov
scas
pop
and
ss
cltd
iret
jb
mov
push
pop
xlat
shll
inc
push
outsb
ficoms
inc
add
cmpsb
addr16
daa
adc
mov
es
push
cmp
dec
addr16
in
mov
out
pop
cli
out
mov
jae
jle
mov
add
mul
add
cmpsb
push
sti
aam
push
xchg
add
mov
mov
das
push
stc
enter
lock
imul
xchg
lret
sub
cmp
roll
cwtl
sub
rcrl
sub
or
loop
pop
jnp
xor
in
xor
pop
xchg
push
cmp
or
lahf
xchg
sub
push
push
divb
jp
outsl
lods
inc
jae
lods
mov
add
lret
shlb
mov
xchg
mov
shr
fimuls
ljmp
xor
adc
mov
inc
mov
dec
fcomps
int
add
mov
out
push
call
icebp
scas
inc
mov
xlat
dec
xor
jmp
inc
vpaddb
xor
les
mov
or
loopne
lods
testl
aaa
and
jp
sbb
ds
jmp
pop
xchg
dec
icebp
jp
pop
addr16
lods
cltd
push
xor
push
and
stc
jl
ret
jns
sbb
push
les
cmp
sahf
push
sub
pop
movsl
std
mov
nop
add
aam
ljmp
xchg
stc
or
pop
push
sarb
push
push
cmp
in
mov
out
mov
outsl
call
and
fimull
sub
pusha
push
sbb
xor
pop
hlt
mov
scas
mov
ss
xor
out
inc
fldenv
xchg
test
add
pop
pop
addr16
scas
pop
hlt
ss
sub
int
scas
jmp
push
push
mov
es
test
sub
shlb
pop
jl
jge
or
stos
pop
fbld
or
pop
or
pop
adc
push
fldl
pop
stos
pop
out
stos
push
clc
cmp
add
mov
xchg
lods
sbb
imul
pop
outsb
pop
jo
je
xchg
fnstsw
bound
xor
jbe
nop
pusha
xor
ds
pop
xor
into
mov
fwait
repnz
xchg
mov
in
and
je,pn
lods
or
xor
mov
adc
iret
fyl2x
fdivr
inc
xchg
imul
fisttpll
mov
jne
cmp
dec
lods
xor
jl
fcoml
and
cmp
lret
fmul
icebp
shlb
int3
mov
fs
sbb
jb
mov
cmpsl
pop
js
rcl
adc
test
out
adc
mov
ja
popa
mov
cmp
cltd
jb
cmp
enter
jno
repz
cmp
or
mov
cmp
mov
fnstcw
mov
popa
out
mov
mov
testl
mov
push
mov
mov
nop
cmc
add
mov
push
scas
out
mov
arpl
and
dec
int
xor
leave
popl
arpl
faddp
popf
mov
xchg
mov
int
mov
jns
inc
adc
cli
push
sub
or
aad
hlt
jmp
lcall
outsb
cmp
dec
flds
mov
insl
mov
loop
repz
rol
loopne
and
insl
out
shll
outsl
popl
rorb
pop
popf
iret
scas
scas
iret
pop
hlt
mov
lds
int3
fdivp
lock
cmc
mov
or
aaa
jle
jle
cld
xchg
lcall
pop
sbb
or
dec
mov
jecxz
add
and
adc
repz
lds
mov
jae
cmp
and
mov
lret
cmp
out
mov
shlb
adc
pop
ret
xor
call
push
adc
mov
dec
inc
inc
mov
sarl
out
pop
mov
adc
mov
xor
aam
lcall
jp
ret
push
stos
cmp
mov
adc
jmp
jo
ss
loope
or
and
push
cmpsb
fnstcw
cltd
mov
shlb
and
cli
cmp
ficoms
icebp
mov
add
add
ljmp
inc
sahf
adc
and
cmp
xchg
mov
cmp
lahf
lret
or
add
dec
xchg
fstl
addb
or
int3
loop
cmc
cmpsl
sub
dec
lcall
inc
pop
push
aaa
push
lds
adc
sub
decb
mov
mov
mov
call
fwait
pop
popf
scas
into
inc
jmp
and
fdivrl
jns
xorb
or
xchg
jo
sub
or
mov
fmull
mov
les
jns
cmp
mov
push
les
push
sahf
pushf
inc
inc
push
int
cmp
loop
mov
xchg
lcall
mov
shrb
lcall
jbe
movb
mov
xor
inc
xor
dec
iret
mov
cmpsl
stos
ss
aaa
lods
out
add
shlb
scas
sbb
sbb
lock
mov
xor
repz
jbe
loope
hlt
jo
ljmp
lret
mov
inc
sbb
jo
dec
lods
push
sbb
mov
and
mov
pop
nop
pusha
testb
sti
inc
jl
lret
lods
or
jns
imul
cmp
loopne
insl
movsb
mov
push
add
xchg
jae
hlt
mov
subl
xor
rcrl
xchg
fsubr
xor
mov
and
stc
pusha
sub
and
sbb
push
jg
cwtl
rolb
std
fbld
xor
push
cmp
jle
dec
addr16
mov
test
ror
movsb
inc
fs
xchg
push
mov
out
inc
mull
jle
int
jp
xor
nop
pop
fimull
jle
ja
and
scas
push
data16
insb
sub
xchg
lahf
adc
and
loop
pop
pop
aam
mov
cwtl
mov
iret
adc
dec
iret
jbe
roll
add
aaa
xchg
cli
sbb
ret
sub
rcll
mov
or
sbb
mov
push
push
movups
jo
sbb
pop
pop
ret
mov
cmp
push
lods
imul
aas
xlat
lock
outsl
shrl
jo
lcall
lahf
jnp
xor
lea
jg
in
fxch
mov
je
dec
mov
xchg
adc
stos
mov
scas
mov
sbb
cmpsb
lea
xchg
shlb
insb
jmp
xchg
and
inc
xchg
mov
cld
arpl
mov
cmp
push
mov
js
adc
sarb
in
xchg
sub
dec
stc
or
dec
mov
popl
orps
in
daa
fisubrs
mov
lods
pushf
cmpsl
loop
cwtl
insl
mov
jae
jp
mov
lret
popf
cmp
movsl
mov
inc
daa
dec
xchg
aas
jmp
xlat
lods
clc
clc
sub
popf
lret
out
bound
fldl
push
mov
sub
cmp
jae
cs
outsl
stc
adc
jle
cli
sub
jae
jo
sahf
jno
or
mov
loop
pandn
mov
xor
sub
popf
stc
push
add
pop
aas
fdivs
lret
dec
sbb
and
pusha
xchg
lock
pop
push
xor
insb
push
pop
fiaddl
jle
mov
inc
xor
iret
out
and
out
outsb
scas
std
test
adc
xchg
sbb
daa
pop
mov
mov
mov
jbe
or
lret
inc
adc
jmp
lods
jecxz
shll
and
inc
or
ja
repnz
sbb
cmp
jle
mov
or
pop
fbld
cld
sbb
movsl
rcl
adc
and
xchg
outsl
mov
jnp
fisubs
mov
insb
das
jle
dec
in
jle
cltd
imul
mov
adc
mov
ficomps
push
sarl
iret
jecxz
mov
and
or
sbb
pop
icebp
or
enter
stc
inc
sti
xor
fwait
xchg
cmpsb
inc
int
mov
mov
in
xchg
shll
fnstenv
or
jns
mov
cmp
inc
jo
inc
scas
movsb
mov
mov
adc
add
mov
lret
test
inc
push
test
loope
leave
push
aaa
bound
sbb
push
xchg
lea
cmc
insl
neg
sbb
pop
pop
hlt
xchg
scas
lods
scas
mov
jmp
cmpsb
fidivs
xchg
jne
int3
cs
jnp
clc
sub
lret
mov
int
or
or
gs
mov
das
xchg
jne
into
sub
loop
shll
lahf
inc
adc
sub
sub
iret
jecxz
or
xor
clc
fstps
dec
scas
inc
or
jl
lock
sub
jne
pop
popf
xor
popf
and
pop
fs
xor
test
jne
sbbl
jbe
call
and
ja
sbb
and
xchg
rcrb
xlat
sub
outsl
mov
in
les
mov
sbb
adc
xchg
scas
mov
mov
stos
leave
ret
fiaddl
mov
repnz
aad
xchg
movsl
shlb
sbb
shlb
andb
roll
pop
imulb
leave
arpl
std
dec
mov
int3
test
sub
inc
daa
pop
fists
or
mov
lea
arpl
sub
iret
in
rcl
andb
inc
nop
daa
hlt
cwtl
pop
adc
pop
popf
andb
mov
push
out
jae
cmp
push
mov
stos
mov
or
in
pushf
and
mov
test
int
loopne
aas
in
cmp
mov
fbld
inc
das
popf
mov
cs
pusha
test
rcll
mov
rcrl
lcall
lea
call
loop
idivb
mov
cmpl
andb
fistpl
xor
sbb
add
cmp
jbe
jp
mov
ss
add
fsubp
sahf
dec
jae
cld
stos
out
sbb
pop
subb
jno
lea
jecxz
dec
leave
push
push
hlt
mov
stos
add
cltd
pop
gs
daa
or
fwait
addl
or
mov
mov
sub
addl
push
mov
aad
pop
mov
jnp
push
mov
test
add
mov
pop
imul
and
inc
inc
ficoms
lcall
es
sbb
xchg
push
dec
xchg
movl
sti
out
fwait
inc
sbbb
push
aad
mov
out
lret
arpl
lds
out
push
mov
xchg
sub
out
sub
ljmp
xchg
sbbb
pop
push
inc
fincstp
mov
fs
imul
ror
push
cwtl
mov
push
adc
push
push
ss
jnp
xchg
sub
mov
pop
stc
adc
dec
mov
addl
sub
inc
jb
or
fldcw
inc
xor
fidivl
sbb
in
xlat
and
call
hlt
mov
adc
stc
sbb
or
out
inc
ds
xchg
enter
jb
adc
gs
mov
adc
fdiv
cmp
pop
cmc
sbb
pop
ljmp
xchg
cs
xor
mov
lods
jecxz
xor
xchg
stc
xchg
push
mov
jmp
xor
mov
adc
test
mov
mov
jb
and
mov
inc
mov
dec
xlat
push
int
aam
in
xor
cmp
repnz
inc
ret
stc
sub
push
test
jbe
cmp
add
xchg
call
cmpsb
push
dec
xor
jbe
push
enter
daa
sub
les
outsl
push
popf
push
or
inc
xor
xlat
jecxz
rol
insb
fnstsw
dec
fidivrl
adc
sub
lcall
pop
test
sub
jmp
das
push
outsb
repnz
jno
cmp
xchg
outsb
jge
push
test
or
mov
test
clc
jl
leave
xchg
and
cmpsb
stos
add
add
xor
dec
ffreep
sub
shrl
fbld
jbe
loope
sub
ss
xor
and
pop
add
mov
and
push
fwait
dec
imul
inc
out
out
stos
rcrb
dec
hlt
les
sbb
sub
or
adc
cmp
cmp
mov
cmp
jne
mov
aam
imul
or
lahf
cmp
fwait
insb
push
push
or
int3
pusha
ret
popf
and
mov
or
fcoms
add
push
ljmp
movsl
push
push
iret
adc
jmp
sbb
test
mov
sbb
pop
push
sub
xor
lret
mov
mov
decl
pop
xor
mov
arpl
mov
xor
push
scas
outsl
lods
mov
cld
js
mov
inc
dec
xchg
xor
mov
jecxz
jmp
pop
inc
push
pusha
in
andl
leave
push
les
add
arpl
xchg
cmp
shl
negb
aaa
cmp
or
dec
scas
arpl
ja
and
cmpsb
sarl
int
lock
xchg
das
movsl
cli
adc
mov
lahf
xor
bound
sub
jge
dec
mov
test
mov
mov
out
sub
push
push
loopne
lds
sar
out
pop
test
jl
call
mov
cs
push
cmpsl
mov
adc
mov
inc
mov
and
pusha
insb
in
push
push
imul
ljmp
xor
sbb
pop
iret
mov
adc
jle
ret
in
xor
sub
or
lods
dec
xor
add
outsb
repz
sar
les
nop
add
mov
cli
add
ljmp
daa
xor
push
imul
rcr
pusha
ljmp
pop
bound
xor
dec
data16
cmp
or
sbb
cmpb
adc
inc
mov
mulps
mov
xchg
sub
xorl
push
and
std
cmp
in
add
adc
mov
mov
enter
and
ss
es
sbb
jl
aam
jg
or
jle
arpl
cmpsl
adc
mov
gs
inc
cmpsl
cwtl
stc
mov
cmp
push
fistl
adc
rcl
repz
cltd
nop
or
movsl
testl
and
aam
xlat
out
pop
pop
cmp
leave
push
add
lret
icebp
js
jmp
jnp
in
dec
shl
pop
or
dec
mov
arpl
mov
sbb
push
or
dec
lods
xor
mov
orb
jno
clc
xor
adc
inc
lods
insb
jle
xchg
insl
dec
dec
xor
pop
or
ss
ret
dec
andb
ljmp
lods
lods
inc
sub
dec
out
push
bound
cld
movsb
fwait
rcrb
cmp
enter
popa
sbb
lock
cltd
dec
sub
shlb
mov
push
xor
xchg
and
xchg
mov
pop
fcomp
es
jae
cmp
xchg
cmp
adc
dec
and
aas
pop
dec
jp
test
mov
out
pop
lret
jecxz
outsb
not
lods
push
pop
rorb
mov
cmp
repnz
mov
pushaw
push
mov
clc
mov
add
addr16
mulb
xor
fwait
mov
pop
dec
mov
jne
jp
dec
outsl
xor
push
push
xor
scas
mov
xchg
mov
pop
adc
adc
mov
std
jp
repz
jno
movsb
push
jge
jg
loope
jge
sub
ljmp
mov
and
mov
mov
lea
mov
ss
mov
rol
and
mov
test
sbb
push
mov
push
pop
add
data16
inc
cmpsb
fldcw
data16
jg
sbb
loopne
jbe
mov
jns
mov
push
jmp
das
repz
adc
cli
rolb
add
mov
push
adc
mov
or
test
pop
arpl
sbbb
xlat
push
mov
push
fmull
sub
lahf
fwait
push
decl
int3
adc
mov
lods
xor
cmpsb
dec
cmc
movsl
pop
inc
int3
je
sti
daa
xchg
nop
arpl
mov
xor
jne
hlt
mov
and
lods
jnp
outsb
push
iret
insl
add
mov
shl
imul
sub
imul
fs
mov
push
push
mov
jne
pushf
test
xchg
movsl
dec
sub
mov
pop
test
and
mov
jnp
jmp
lock
and
inc
inc
and
add
cmp
movzbl
xor
cmp
in
jl
imul
add
xor
shll
lahf
scas
mov
pop
cmpsl
jg
dec
dec
incl
mov
pop
loopne
xchg
js
push
cmpsb
stc
mov
xchg
cmp
rcll
cmp
xlat
std
sub
mov
add
push
cmpsl
cmp
dec
movsl
mov
dec
sub
jmp
mov
xchg
stos
mov
pop
std
add
imul
stos
and
sub
sarb
xor
insl
xchg
adc
or
add
mov
cmp
mov
repz
cmp
jle
fidivrs
mov
push
fidivs
outsl
or
out
lahf
ds
scas
add
and
sub
mov
or
lcall
and
add
ds
dec
fs
das
pushf
cltd
idiv
movhps
data16
int
in
dec
jg
and
xlat
xchg
mov
fistl
xlat
cmp
cmc
pop
sbb
test
fcmovne
add
in
dec
loop
mov
arpl
pop
dec
dec
sbbb
pcmpeqb
sub
rorb
xchg
mov
fmul
scas
fistl
fwait
xor
dec
loopne
inc
fs
and
pushf
push
imul
add
xchg
fidivrs
clc
aas
cmpsl
push
popf
cmp
arpl
lds
pop
mov
stc
sub
pop
jo
in
cmp
adc
xchg
sti
mov
cmp
adc
dec
rcr
movsl
inc
ds
popf
pop
push
xor
lds
cltd
jecxz
movsb
repz
divl
jb
lods
in
sub
xchg
jmp
scas
cmp
push
outsb
dec
js
xchg
jl
pop
mov
jne
loope
mov
xor
mov
jle
lods
mov
or
andl
imul
mov
or
xlat
addr16
hlt
sbb
mov
xchg
push
push
cli
out
insb
test
fs
cmc
mov
add
cmc
pinsrw
push
je
add
push
adc
lds
pop
mov
jns
mov
into
and
aas
popa
cmp
loop
sbb
or
pop
jne
mov
das
int3
movsl
jbe
jns
cwtl
decl
add
mov
push
in
mov
push
mov
mov
xorb
xchg
adc
mov
push
out
mov
sbb
xchg
ss
idivb
test
shll
push
mov
sub
jge
cltd
cmp
dec
inc
dec
loop
jnp
test
xchg
jg
xlat
ja
rol
pop
push
adc
out
sbb
dec
out
sbb
or
fwait
gs
adc
or
sub
outsl
cmp
sbb
xchg
cmpsb
push
fdivrs
jmp
mov
cmp
ja
cld
mov
push
sahf
sbb
xchg
or
test
bound
fists
rolb
aas
fcoms
xor
xor
fcomps
mov
clc
and
testl
loope
in
mov
cli
and
xlat
add
xchg
xchg
les
and
sbb
dec
xchg
xor
xor
addr16
test
cli
jne
mov
aas
int
pop
daa
push
and
out
mov
dec
push
dec
push
stos
fcoms
mov
pop
xlat
ljmp
enter
pushf
daa
dec
lods
mov
ss
push
mov
pop
test
dec
cwtl
fcoml
ficoms
and
jge
out
mov
les
stos
cmpsb
mov
lods
and
adc
nop
mov
shl
pop
pop
fldenv
xchg
hlt
nop
or
jnp
dec
aam
pop
push
pusha
jnp
lret
mov
imul
fdivp
inc
inc
cwtl
fdivr
movsb
mov
out
es
add
mov
hlt
lahf
jbe
cmp
ret
pop
mov
sbb
inc
xchg
inc
jge
xchg
cltd
sub
les
stos
sub
jle
push
dec
mov
scas
data16
addr16
sbb
xor
out
inc
jae
mov
adc
outsl
mov
outsl
mov
enter
mov
or
push
push
pop
orb
cmc
mov
adc
je
xchg
pop
jle,pt
sbb
and
jmp
movsl
aas
mov
dec
or
sub
adc
cmp
ja
aad
push
pop
jnp
xchg
mov
push
addr16
mov
push
pop
adc
xor
sub
loope
mov
test
inc
xor
and
add
dec
lret
xchg
xor
sub
clc
xchg
mov
pop
adc
stc
das
jo
push
inc
arpl
ljmp
push
dec
repnz
or
and
and
push
shrb
sub
pop
movsl
into
data16
pop
aas
int
dec
loopne
sbb
repnz
push
sub
pop
dec
aas
push
leave
sbb
insl
mov
sbb
mov
fcomps
decl
push
mov
or
cmpsb
sbb
mov
and
adc
sbb
cltd
aaa
ss
ds
dec
and
leave
rolb
sti
lock
add
sbb
lods
pop
push
mov
or
lahf
ja
insl
stos
mov
add
cmpsb
xchg
sti
mov
cwtl
lret
and
mov
push
int3
push
jno
repnz
ljmp
xor
ljmp
ja
or
addl
inc
scas
test
jle
and
sbb
mov
jle
dec
mov
in
xchg
sahf
aam
and
ficoms
push
xchg
icebp
mov
lret
mov
mov
icebp
std
popa
clc
adc
fnstcw
inc
aam
lea
jne
add
imul
ja
cmc
ja
dec
or
and
dec
inc
xchg
subb
stos
stos
dec
add
inc
mov
cltd
hlt
lock
dec
xchg
inc
call
xchg
push
test
lea
inc
sub
adc
mov
in
in
out
inc
mov
cmp
and
mov
mov
sbb
push
test
fwait
push
sahf
sbb
fwait
je
test
ror
or
fiaddl
ret
jb
ss
push
xor
add
mov
leave
shlb
cmc
in
into
jmp
jno
arpl
push
loopne
mov
pop
xchg
into
mov
fsubr
jmp
jmp
outsl
std
sub
sub
inc
jbe
mov
prefetchw
or
cs
xor
pusha
and
push
imul
and
dec
sti
add
ds
hlt
sbb
test
pop
or
sub
sub
cmp
inc
repz
jno
cmpsb
fisttpll
xor
lds
xor
inc
add
sahf
adc
pop
inc
or
popf
movsl
xchg
jne
cwtl
cmp
mov
mov
int3
mov
sub
jmp
mov
inc
xor
sbb
dec
mov
pushf
test
adc
fistpll
dec
rcrl
rcl
daa
inc
addr16
sbb
pop
cmp
lods
push
adc
jmp
push
addr16
test
vpcomub
adc
pop
sbb
fnsave
push
dec
add
sub
xchg
push
sbb
pushf
jns
aam
push
sbb
sbb
mov
pushf
xorb
ds
inc
jne
push
stc
notb
arpl
mov
push
int3
insb
fs
leave
mov
mov
adc
subb
dec
arpl
or
arpl
adc
daa
movzwl
adc
push
push
dec
jp
lods
xorb
jp
jbe
cmpsl
xor
leave
outsb
xchg
pop
xchg
into
outsb
mov
jmp
sub
or
loope
jnp
in
add
dec
lcall
out
inc
jns
ret
ds
xchg
mov
or
sti
xlat
jecxz
gs
fldt
push
adc
jge
mov
pop
aas
mov
inc
jno
lret
stos
or
int3
or
xor
or
mov
or
cmp
pop
imul
dec
jne
xor
dec
fbstp
push
clc
test
aas
xchg
xchg
test
push
icebp
push
sbb
push
pmaddwd
xchg
xlat
lahf
insl
aaa
imul
insb
mov
fnstenv
sahf
and
cs
pushf
or
mov
out
nop
mov
out
fcmovu
loop
xor
pop
lds
enter
or
dec
mov
enter
movsl
punpckhdq
lret
arpl
inc
mov
shrl
push
dec
pop
out
xchg
stos
and
cmpsl
xchg
dec
xor
xchg
push
push
mov
or
in
mov
or
cs
push
inc
test
xchg
jne
sub
jge
out
xchg
or
testb
xchg
enter
sub
movups
int
and
sub
dec
xchg
mov
push
xor
mov
adc
add
stos
lods
test
mov
jl
stc
sti
dec
cs
pop
mov
mov
ret
xlat
adc
jecxz
jb
mov
cmp
rorb
lret
sbb
les
lret
jp
cltd
fidivrl
iret
jmp
dec
adc
mov
bound
add
sub
jge
in
ffreep
push
out
mov
int
fwait
shl
aas
dec
pop
pusha
mov
stos
test
push
icebp
add
pop
jne
rcrl
outsl
clc
cmc
pop
out
shlb
adc
mov
or
jmp
add
cmp
lahf
jno
xchg
lods
int3
mov
mov
or
inc
imul
add
add
push
or
movsl
xor
sbb
in
adc
or
out
fsubl
dec
fimuls
push
push
xor
push
loopne
pop
cwtl
mov
out
shufps
or
lahf
scas
popa
insb
push
sub
xor
or
mov
xorb
add
pop
int3
inc
scas
imul
lods
and
arpl
mov
dec
mov
mov
outsb
pop
fidivrl
fdivr
scas
clc
in
mov
lea
pop
out
pop
es
pop
leave
loope
xor
sbb
sahf
adc
insl
mov
pop
lods
addb
loope
lret
mov
sarl
enter
cwtl
ljmp
rolb
fidivrl
or
int
mov
pop
test
rolb
jmp
adc
and
pop
ljmp
push
and
cltd
sti
jp
stc
push
push
lret
inc
and
pop
mov
idivb
incb
push
sbb
push
repnz
jb
cltd
gs
mov
mov
sahf
inc
mov
cwtl
pop
xchg
pop
insb
shlb
popf
lock
jle
test
insl
add
push
cmp
in
cmp
ret
adc
loop
push
je
mov
inc
call
mov
mov
movsb
and
mov
and
sbb
fwait
and
lcall
arpl
icebp
es
cs
xchg
nop
adc
jl
mov
je
pmullw
inc
pop
arpl
pop
loop
add
faddp
cmp
add
inc
mov
adc
daa
adc
fidivrl
cltd
adc
int3
test
out
icebp
imul
test
inc
or
lods
add
push
mov
sbb
jg
shlb
sti
mov
ret
out
popf
fs
dec
push
gs
cmpsl
shrl
dec
out
mov
jle
lock
icebp
ret
or
push
lods
sti
sarb
hlt
inc
jbe
jbe
pop
lods
jmp
sbb
dec
mov
cs
adcb
stos
mov
test
aaa
mov
push
pop
mov
in
cwtl
cmp
fildll
push
mov
in
std
popa
inc
lahf
xchg
ret
sbb
jno
popa
mov
js
mov
xor
lret
aas
sub
test
mov
inc
push
jno
lcall
in
mov
mov
pop
sub
sbb
push
lock
push
aas
push
cli
lahf
xchg
loopne
lods
and
js
and
mov
leave
scas
shr
pop
jnp
and
scas
into
pusha
dec
and
sub
pop
add
adc
sub
mov
push
call
test
mov
or
add
loop
pop
jecxz
lock
comiss
xor
sub
xchg
pop
enter
xor
mov
dec
xchg
push
add
jg
fs
repz
mov
pop
in
or
or
push
sarb
mov
movsb
repz
leave
push
popf
jle,pn
repz
and
nop
mov
or
out
pop
loop
repz
lcall
je
push
int
stos
inc
adc
inc
inc
pop
data16
xor
push
xor
pop
add
jno
dec
inc
stos
cmp
cli
jae
insb
and
fs
pusha
leave
lods
inc
add
filds
inc
cld
mov
movsb
fnsave
pop
inc
xchg
mov
pusha
xchg
ds
addr16
aaa
ljmp
adc
inc
dec
add
insl
ljmp
pop
cmp
js
mov
dec
bnd
lods
mov
mov
xor
xorl
mov
inc
js
cmc
xchg
jb
into
and
inc
jmp
inc
outsb
jmp
sub
popa
ss
add
call
mov
xchg
xor
inc
in
sti
cmp
or
cmp
aas
dec
insb
jnp
mov
scas
pop
cmp
ss
lock
stos
sbb
mov
outsb
pop
inc
xchg
sub
jnp,pn
lods
das
sbb
lret
pop
jno
lcall
imull
les
loopne
sbb
push
dec
stos
fs
iret
test
inc
call
in
inc
clc
or
and
ss
dec
in
sub
cmpsb
in
imul
imul
stos
imul
xchg
daa
fdivl
nop
or
cmc
jmp
inc
push
add
push
into
sbbb
add
ret
test
push
arpl
mov
mov
pop
pop
loop
jp
pop
insb
mov
pop
dec
fwait
lods
xchg
and
add
sub
jecxz
xor
and
loope
fldcw
repnz
push
sbb
imul
adc
jnp
out
and
jecxz
mov
inc
jbe
rcll
rol
cmpsb
emms
hlt
mov
inc
mov
xor
pop
cltd
push
into
and
inc
fcoml
xchg
xor
push
and
ret
adc
iret
int3
add
lds
insb
nop
jle
es
add
inc
mov
pop
ret
pop
xchg
lret
add
jg
add
in
or
lock
das
sub
sub
xchg
inc
and
mov
popf
mov
xchg
jecxz
aad
inc
pop
pop
jne
aaa
sub
ficomps
lcall
out
iret
shr
xor
out
xchg
bound
jmp
es
mov
xor
movsl
and
fwait
pop
dec
jne
cmp
cmp
loope
mov
cmpsb
sbb
loop
add
lods
mov
imul
cmpsb
and
js
add
fsub
mov
ds
push
pusha
shlb
stc
into
mov
cmp
sbb
ja
lret
outsb
xchg
enter
icebp
xchg
mov
xor
mov
mov
push
mov
push
std
adc
popa
arpl
pop
imul
lods
mov
outsb
popa
pop
aas
mov
out
jge
pop
xor
clc
lock
push
jb
test
dec
inc
shlb
pop
mov
out
dec
sub
dec
out
inc
mov
cli
dec
nop
and
pop
xchg
enter
or
mov
mov
ret
sub
lahf
lret
sub
in
jb
jl
loope
xor
mov
cs
mov
sub
nop
push
push
cmpb
shll
jne
push
icebp
sbb
jo
out
adc
pop
cmpl
jecxz
push
adc
cs
outsb
mov
test
sbb
mov
dec
sub
inc
xchg
inc
mov
idivb
outsb
inc
mov
sub
cmp
fcmovb
add
iret
fcomip
xor
jecxz
sub
movsb
popa
hlt
push
push
test
into
scas
sub
mov
pandn
gs
and
fadds
popa
lret
jmp
test
sub
dec
aad
adc
add
sbb
push
iret
ret
data16
cmpsb
insb
addl
xor
cltd
insl
scas
mul
sbb
lock
pop
or
lcall
stos
addb
inc
mov
xchg
jmp
jg
dec
xchg
pushf
or
pop
pop
iret
fcompl
aaa
test
jnp
pop
jecxz
cmc
insl
sub
mov
hlt
cmp
xchg
ret
enter
sbb
lahf
shl
adc
and
ja
lea
mov
dec
aas
cmovge
insb
insb
pop
movsl
fldenv
lcall
mov
lahf
jecxz
icebp
pop
fisttpl
arpl
xlat
mov
nop
fsubrs
rclb
sti
or
xchg
cmpsb
nop
push
or
outsl
jmp
sbbl
jp
ret
dec
lcall
inc
test
mov
fbld
pop
or
jecxz
add
pop
std
sahf
enter
inc
int3
scas
aam
push
pop
mov
mov
fwait
stos
test
mov
jne
mov
sbb
dec
test
mov
xchg
xlat
xchg
xor
mov
lret
mov
js
dec
mov
xchg
mov
ret
mov
stos
rorb
jge
out
xor
fwait
jns
imul
xor
mov
lock
bound
sbb
ret
ljmp
ss
xor
cltd
jmp
scas
add
sub
jg
iret
out
lahf
or
push
ds
mov
data16
pop
aad
add
sub
flds
add
nop
dec
out
xchg
clc
cmpsb
cwtl
add
test
jg
faddl
mov
and
or
adc
xchg
push
pop
pop
jbe
dec
stc
sbbl
sub
out
jl
icebp
pop
lret
outsl
nop
mov
dec
mov
test
mov
jns
add
sub
sub
cmp
mov
movb
addr16
jg
lods
addr16
ja
push
sub
int3
mov
and
leave
fdivl
das
jns
je
mov
enter
es
or
fwait
sti
add
sub
push
lret
scas
inc
stos
add
sbb
je
mov
xchg
repz
jg,pn
iret
lods
mov
shl
int3
lods
push
jl
adc
sbb
out
loop
imul
ja
dec
icebp
in
test
adc
mov
cwtl
arpl
orb
mov
test
mov
scas
test
das
mov
lahf
cmove
xchg
fdivrs
and
push
lods
mov
aam
jb
pop
mov
scas
flds
xor
roll
es
sbb
out
inc
scas
test
fcmovu
ret
imulb
out
mov
mov
out
add
shlb
ret
cltd
xlat
push
test
shll
rcll
sub
pop
adc
mov
mov
xor
dec
aad
or
fisubrl
adc
hlt
out
out
addr16
dec
push
sbb
xor
push
out
int3
in
push
jnp
inc
jne
cmove
push
test
mov
pusha
sbb
aaa
fidivrl
jmp
scas
jne
xor
fidivs
xor
jcxz
xlat
jb
insl
add
adc
lock
sbb
mov
std
jo
add
jmp
xor
shrb
cmp
popa
push
setns
sbb
cmpsb
inc
cmpsl
push
imul
mov
jne
jno
lods
mov
cwtl
dec
in
xchg
das
aam
and
fistpl
push
call
push
mov
shll
popf
outsb
rcrb
js
in
or
push
cmp
ljmp
clc
dec
xchg
and
pop
xor
add
data16
cwtl
lcall
push
and
and
int3
sbb
push
mov
in
mov
add
out
cmp
cli
sahf
cli
aad
mov
cmp
aas
fs
cmp
adc
arpl
addr16
cmpl
cmpsb
in
rcrb
int3
pop
in
and
cld
repnz
xor
xchg
aad
and
mov
lods
push
jmp
adc
call
adc
push
inc
ja
loope
mov
push
adc
in
lods
pop
xor
loop
int
cmp
push
mov
movsb
aad
cmp
and
adc
jecxz
cmp
popa
jp
cli
lods
push
add
arpl
xlat
cltd
xchg
cld
adc
add
cmp
sub
scas
push
pop
sarl
adc
outsb
sarb
mov
add
dec
xchg
jnp
mov
pop
cmp
inc
hlt
or
cmp
jns
in
mov
cmp
test
cmp
rolb
jle
movsb
pop
adc
inc
xorl
mov
push
rcrl
xor
mov
scas
stos
mov
mov
jo
leave
xchg
pop
sub
in
push
mov
lret
loopne
dec
frstor
pop
arpl
mov
pop
add
ret
int3
clc
arpl
or
jne
xlat
dec
fsts
fisubrs
push
popa
iret
jae
ret
mov
in
xchg
push
ret
mov
leave
leave
in
and
arpl
loope
inc
lahf
pop
pop
fsubr
push
pusha
inc
hlt
sub
leave
scas
mov
mov
push
and
xchg
dec
test
loopne
shll
add
rol
jp
scas
jns
lcall
inc
cmp
push
mulb
mov
mov
push
or
stc
pop
movsl
rolb
dec
sub
gs
ja
ret
sbb
movsb
jbe
lods
sbb
pavgw
mov
adc
pop
mov
repz
jo
ljmp
shlb
jb
and
cmp
xchg
movsl
enter
mov
inc
xchg
int
xchg
mov
mov
imul
push
in
xor
cmpl
scas
jge
add
or
cmpsl
out
xchg
out
inc
push
in
mov
dec
xlat
xor
mov
sahf
jl
int
in
shlb
pop
out
icebp
mov
dec
fmulp
outsl
lods
dec
fwait
sub
test
loopne
cltd
inc
xorb
or
cltd
inc
add
repz
stos
nop
or
cld
cmp
pop
shr
dec
and
xor
push
jns
sub
push
jmp
movsl
xchg
cmpsb
decb
push
add
or
jecxz
out
lcall
fiadds
sub
les
in
test
mov
add
and
pop
test
xchg
jecxz
jno
hlt
movsl
and
sti
cmp
bound
lret
enter
lahf
and
es
adc
xor
ljmp
outsb
pop
sub
add
aad
push
pushf
mov
pop
aam
leave
daa
cmp
in
outsb
lods
jno
test
inc
xchg
rcrl
xor
hlt
test
and
mov
into
pop
dec
fcompl
pop
xchg
mov
and
xchg
cmp
push
jp
jnp
fs
inc
add
mov
hlt
xchg
outsl
cmp
out
cs
push
rclb
aam
ljmp
lret
cmp
pop
or
ljmp
push
sbb
push
test
shll
inc
test
cmpsl
add
loopne
test
bound
mov
sub
jge
repnz
cmp
sbb
push
int3
sbb
xchg
call
rcl
jnp
push
add
lea
cmp
int3
sbb
mul
push
cld
jmp
push
xchg
stos
imul
insl
pop
mov
dec
and
je
ficompl
insl
scas
push
and
aad
inc
xchg
sarb
add
jl
jb
arpl
enter
hlt
mov
or
pushf
mov
pop
add
sub
inc
sbb
jp
add
pushf
pop
popf
leave
test
mov
mov
xchg
inc
mov
jne
add
inc
int3
xor
and
or
cwtl
or
movsl
dec
mov
nop
adc
mov
idivb
dec
dec
adc
jns
cwtl
call
push
in
push
iret
rclb
sbb
in
test
outsl
lds
mov
adc
xor
popa
and
push
pop
test
lret
sbb
pushf
xchg
insb
xor
jg
fsub
adc
xchg
pop
mov
loope
push
outsb
xlat
lods
sahf
adc
fstpl
pop
cltd
pop
mov
ljmp
lcall
or
into
les
mov
add
repz
clc
ljmp
sub
aad
jae
mov
ficomps
mov
mov
adc
cmpsl
add
inc
data16
mov
inc
jne
pop
aam
add
test
dec
pop
jp
sbb
iret
addl
jne
rolb
jge
movsl
adc
ret
and
pop
outsl
dec
pop
or
jno
dec
neg
sarb
stos
xchg
adc
jp
ljmp
mov
cmp
aaa
outsl
push
add
es
iret
in
cmpsb
mov
lcall
or
cmp
sahf
clc
mov
mov
jl
sbb
mov
pop
mov
inc
fisubrl
mov
sub
sahf
add
sbb
call
jl
outsb
in
mov
pusha
out
mov
mov
lcall
je
inc
cmp
pop
lahf
sti
fwait
pop
lods
stc
push
mov
cmp
fisubl
cltd
inc
lea
fildll
cmp
sub
xchg
inc
ljmp
sarl
mov
repz
out
repnz
call
mov
mov
add
jnp
iret
sub
scas
mov
inc
sbb
dec
adc
add
cwtl
cmp
adc
cpuid
arpl
test
cld
iret
jne
out
adc
inc
cli
ja
push
mov
jo
jle
add
ss
inc
adc
push
mov
adc
push
test
sbb
aam
xchg
push
jb
or
lahf
pop
inc
loopne
xor
imul
lods
jns
idivl
das
push
sbb
dec
jnp
aaa
leave
lcall
sahf
dec
test
call
pop
push
fidivrs
push
test
movsl
xchg
mov
outsb
movsl
or
sahf
cmp
and
hlt
movb
fwait
jbe
sub
sub
xor
jecxz
out
sub
lret
fidivl
push
das
mov
movl
mov
dec
mov
std
inc
mov
push
push
stc
imul
or
repz
insl
mov
add
sub
lods
imul
xlat
ljmp
mov
in
popa
jae
out
mov
filds
push
push
mov
xor
js
jne
push
fucomip
pop
jne
out
or
in
loop
pop
or
jno
mov
lods
sbb
outsl
addb
int
jge
imull
imul
in
sbb
mov
add
leave
dec
mov
arpl
loope
mov
hlt
mov
push
sub
lds
imul
pop
jno
sar
mov
xor
push
ja
out
jle
push
add
inc
ss
sti
dec
popf
aaa
mov
sbb
outsl
out
add
or
push
jp
aas
inc
push
clc
vpminsw
iret
std
loopne
fdivp
rcrb
jo
icebp
cmp
xor
in
rcrl
hlt
test
rcr
or
mov
dec
stc
dec
mov
xchg
mov
push
pop
xadd
xchg
xor
sbb
mov
cs
inc
lret
lret
lcall
in
mov
lahf
cmp
jecxz
jb
test
hlt
fucomi
or
adc
cmpsl
cmp
nop
xor
sbb
adc
xor
push
xor
xchg
inc
xchg
and
push
jbe
push
dec
mov
lds
js
adc
cmp
shrl
popf
vcvtsd2si
pminsw
xor
scas
sti
arpl
ret
or
mov
dec
mov
mov
insl
in
in
clc
push
mov
push
jns
jp
push
pop
js
lret
mov
and
arpl
mov
adc
fs
adc
mov
pop
fstpl
sub
test
ss
xchg
out
shrl
call
mov
inc
xchg
and
adc
aaa
roll
and
dec
xchg
jae
imul
fst
mov
lret
add
mov
stc
sbb
xchg
dec
pop
mov
xchg
push
fucom
test
add
add
push
mov
fidivs
out
mov
daa
cmp
ret
pop
mov
mov
dec
hlt
cmp
mov
xchg
mov
mov
popa
out
push
out
les
cmp
imul
cmp
jns
pop
dec
into
fisttpll
fiadds
mov
loop
test
dec
addr16
ud1
lods
add
add
aam
and
icebp
push
inc
push
sbb
jae
add
xchg
shlb
xor
mov
fistl
flds
sub
mov
sub
inc
push
aad
shlb
pop
imul
push
aas
jae
jecxz
sahf
adc
or
pop
dec
imul
dec
xchg
cs
pop
pushf
jo
xor
jno
loopne
xor
pop
push
push
mov
arpl
jmp
jmp
outsb
adc
inc
ret
cmp
stos
fstpl
sub
stos
push
subb
mov
scas
xchg
scas
nop
les
jge
popf
sub
sbb
jnp
mov
ds
and
and
xor
mov
imul
inc
mov
sub
cmp
xor
gs
mov
flds
scas
sar
adc
lahf
cli
movsl
mov
into
jno
add
xor
lock
test
dec
movsl
stos
sub
out
imul
mov
popf
xor
sub
loope
cs
or
jl
mov
sub
adc
scas
ljmp
jae
pop
fnstenv
repnz
lds
test
sbb
leave
xchg
xchg
push
adc
mov
mov
enter
stos
mov
dec
inc
adc
cmp
ficomps
mov
mov
shlb
or
loopne
push
in
in
jb
xor
mov
xor
xchg
imull
cmp
pop
aaa
ds
loopne
ret
pop
pop
rolb
pusha
inc
inc
push
add
inc
stos
pop
loopne
test
and
test
fidivrs
fidivrs
dec
mov
cld
mov
or
cmc
movsl
and
sub
test
push
xchg
xchg
push
cmpl
popf
inc
xchg
mov
inc
je
or
and
push
mov
lahf
clc
inc
sub
lods
jecxz
out
pop
mov
call
dec
sbb
movsl
subb
enter
pop
xchg
test
mov
and
cmc
jmp
jp
imul
pmuludq
inc
dec
ret
mov
popf
mov
clc
or
in
dec
pushf
xor
rcll
sub
mov
mov
sub
or
out
cmp
ja
and
jp
lds
or
xchg
inc
xlat
fbstp
mov
and
sub
fucomi
bound
add
mov
mov
mov
and
jmp
cmp
std
fwait
sub
dec
jg
lods
adc
cld
mov
push
push
fnstsw
shrl
xchg
repnz
clc
sbb
cwtl
cld
jo
out
out
stos
sarb
push
add
xlat
imul
xchg
lds
pop
ds
or
test
out
inc
inc
push
scas
inc
and
pop
popf
pop
adc
iret
out
jge
repz
nop
ret
sub
jecxz
xchg
pushf
cmpl
push
adc
mov
call
pxor
mov
jp
mov
dec
cmpsl
ret
xlat
and
sub
cmpsl
push
pusha
dec
xor
or
xor
ficomps
ja
jg
cmc
push
insb
or
xor
rsqrtps
adc
outsl
test
out
xor
into
add
mov
ds
mov
or
lds
and
mov
inc
xlat
ja
scas
pop
lahf
jge
inc
push
push
mov
in
inc
sahf
shl
sub
je
cltd
int
push
cltd
add
xor
jno
mov
xchg
adc
orb
pop
pop
push
decl
xor
je
leave
sti
mov
push
andb
fistl
mov
xchg
push
inc
mov
dec
jmpw
aad
data16
jmp
popf
dec
dec
stos
cld
mov
out
push
push
push
fcmove
outsb
cli
fidivrs
or
stc
inc
ss
or
into
xlat
js
push
or
in
adc
push
or
lcall
int3
jl
bound
lock
jae
pop
addr16
int
ret
lret
pop
xor
insl
push
mov
and
popf
lods
out
adc
or
xchg
imul
lea
scas
movsl
je
or
mov
ja
mov
cmp
in
or
pop
lods
in
push
jns
out
inc
xor
fnstsw
dec
or
xor
inc
sbb
repnz
xor
jno
lea
mov
jp
arpl
icebp
aam
mov
iret
pop
or
inc
fucom
fchs
mov
inc
incl
int3
add
or
jo
jle
or
xchg
shlb
test
test
sub
add
cwtl
fadds
ret
dec
dec
imul
inc
lds
jb
mov
sbb
dec
aas
ds
in
pop
xor
mov
roll
pop
pop
sub
cmp
std
adcl
mov
cltd
xor
cmp
jns
or
cmc
mov
push
mov
call
sti
sti
mov
lcall
clc
out
cmc
mov
cmp
scas
js
jbe
mov
dec
popa
call
outsb
sbb
ret
mov
adc
sbb
in
lcall
dec
fidivs
cmpsl
pop
sbb
inc
lock
hlt
push
ret
shl
outsl
sbb
rcr
or
in
loopne
sbb
dec
adc
leave
filds
arpl
insl
iret
xor
mov
adc
addl
push
scas
xchg
push
pop
sub
inc
decb
lahf
ja
bound
stc
push
pop
mov
xchg
movsb
cwtl
jge
aam
mov
sti
jbe
loopne
aaa
push
lret
sbb
jle
in
xlat
ljmp
out
jle
nop
sbb
adc
jmp
push
mov
adc
and
bound
inc
repz
xchg
xchg
or
dec
shlb
jae
push
xchg
push
mov
jb
out
mov
int
fwait
push
lods
mov
and
int
dec
sub
negl
inc
arpl
pop
cmc
jg
aaa
insb
bound
push
iret
cld
push
jo
xchg
mov
lods
mov
push
push
out
pop
int3
lods
jns
cmpl
sub
jecxz
into
and
in
xlat
pop
test
cli
push
xchg
xchg
xlat
popa
jae
jbe
popa
jns
dec
stos
leave
iret
inc
inc
mov
mov
inc
loopne
cltd
xchg
sub
out
negl
add
fidivrl
sbb
loop
cltd
fsubrl
bound
neg
ljmp
inc
dec
mov
mov
testb
or
sub
shlb
cmp
mov
insb
into
pop
and
decl
mov
sub
subl
mov
sahf
push
sbb
scas
loop
sahf
jnp
mov
inc
test
mov
inc
in
pop
loope
add
sbb
cmpsb
cmpsb
insb
stos
ss
imul
push
sarl
fiadds
lret
inc
scas
sbb
jl
jb
lds
test
and
addl
sbb
rcrl
mov
dec
fimull
adc
cwtl
mov
pop
inc
cli
pop
rcrb
shrl
es
daa
cmp
add
arpl
pop
sbb
sbb
xchg
ret
fidivs
mov
sub
xor
xor
sub
popa
dec
lahf
push
xchg
movsb
and
add
dec
push
mov
fwait
enter
repnz
lds
xchg
std
adc
cmp
sbbb
add
imul
fbstp
mov
mov
push
mov
iret
mov
pushf
xor
xchg
roll
xchg
outsb
in
lret
inc
jge
loop
add
sub
mov
lahf
int3
orl
js
sbb
loope
cmp
stc
mov
dec
int
sub
mov
inc
xor
add
dec
push
dec
les
or
mov
enter
jo
not
mov
jno
cli
dec
push
dec
xor
jno
fsubrl
hlt
stc
mov
lcall
push
push
in
xor
jb
jb
xlat
ljmp
xor
fists
push
aad
sub
.byte
