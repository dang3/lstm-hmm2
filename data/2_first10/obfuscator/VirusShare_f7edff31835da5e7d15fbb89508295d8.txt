push
mov
sub
mov
push
push
push
lea
push
push
call
mov
mov
mov
mov
mov
add
add
mov
mov
mov
test
je
movb
inc
dec
jne
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
mov
mov
movzwl
xor
lea
movl
cmp
jae
lea
mov
mov
test
je
mov
mov
mov
add
add
mov
mov
inc
inc
dec
jne
mov
mov
mov
lea
lea
movb
inc
dec
jne
mov
mov
mov
mov
mov
movzwl
inc
add
mov
cmp
jb
mov
push
push
add
push
push
call
mov
lea
add
cmpl
jbe
mov
add
push
push
mov
call
test
jne
jmp
lea
mov
mov
test
je
add
push
call
mov
mov
mov
push
push
push
call
cmp
jbe
lea
push
call
cmpl
je
mov
test
je
mov
add
add
jmp
mov
add
mov
mov
test
je
sub
mov
test
jns
and
mov
jmp
lea
lea
push
lea
push
mov
lea
push
lea
push
push
call
cmp
jne
lea
push
call
mov
push
push
call
mov
mov
test
je
mov
add
test
jne
mov
add
push
push
mov
call
test
je
mov
movzwl
xor
xor
lea
cmp
jae
lea
lea
mov
mov
mov
mov
mov
shr
lea
push
mov
mov
mov
movl
movl
movl
movl
mov
mov
push
push
add
push
call
mov
movzwl
inc
add
cmp
jb
mov
mov
pop
pop
add
pop
mov
pop
ret
add
add
in
sub
mov
push
push
push
lea
push
push
call
push
push
push
call
push
mov
call
add
push
push
push
push
call
lea
push
mov
call
call
push
push
push
push
lea
push
call
mov
mov
mov
lea
push
push
push
call
mov
mov
lea
and
push
push
push
mov
call
dec
jne
mov
push
push
call
mov
mov
push
call
push
call
push
call
mov
test
jne
pop
pop
mov
pop
mov
pop
ret
lea
push
push
movl
movl
movl
movb
call
mov
test
je
push
push
call
push
call
push
call
push
call
mov
test
jne
call
cmp
jne
push
call
call
push
call
pop
pop
xor
pop
mov
pop
ret
push
mov
sub
push
lea
push
call
mov
push
lea
push
push
call
test
jne
push
call
jmp
mov
push
call
mov
push
push
mov
mov
push
mov
mov
sub
mov
test
jne
mov
test
jne
pop
pop
xor
pop
mov
pop
ret
lea
mov
mov
test
je
lea
lea
mov
sub
shr
test
jle
lea
mov
movzwl
mov
sar
and
dec
je
dec
je
dec
jne
add
jmp
movzwl
jmp
mov
shr
add
add
decl
jne
mov
add
mov
test
jne
pop
pop
mov
pop
mov
pop
ret
add
add
in
sub
mov
push
push
lea
push
push
call
cmp
jae
push
lea
push
call
lea
push
lea
push
call
mov
mov
push
lea
push
add
push
push
movl
call
mov
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
mov
mov
add
push
push
push
push
call
mov
sub
add
add
mov
mov
push
mov
push
mov
call
ret
pop
xor
pop
mov
pop
ret
add
add
in
sub
mov
push
push
push
push
call
test
je
mov
mov
lea
rep
lea
push
movsb
call
mov
mov
movzwl
add
lea
push
lea
mov
push
push
push
mov
call
push
call
xor
xor
cmp
jae
mov
add
mov
mov
lea
push
lea
mov
add
dec
not
push
and
push
push
call
push
call
movzwl
inc
add
cmp
jb
mov
mov
push
push
call
add
pop
pop
pop
mov
pop
ret
add
push
mov
mov
sub
je
sub
jne
mov
push
call
xor
pop
ret
mov
pop
ret
add
add
add
add
in
sub
push
push
push
push
lea
mov
mov
lea
push
rep
call
cmp
jb
push
lea
push
call
push
lea
push
call
mov
mov
add
push
push
add
push
push
mov
call
mov
mov
mov
mov
test
je
lea
sub
mov
mov
inc
dec
jne
mov
xor
mov
test
je
xor
imul
add
add
cmp
jb
dec
jne
push
mov
mov
push
add
push
push
call
mov
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
mov
push
push
call
mov
mov
mov
add
add
mov
test
je
mov
movzwl
add
lea
movzwl
lea
mov
add
lea
lea
push
push
push
add
push
call
push
call
mov
mov
mov
mov
add
mov
add
test
je
mov
mov
inc
inc
dec
jne
mov
mov
lea
push
mov
push
push
push
call
push
call
mov
mov
push
push
push
call
push
push
push
call
mov
mov
nop
push
call
pop
pop
xor
pop
mov
pop
ret
add
add
add
add
in
sub
push
xor
push
push
mov
movl
mov
mov
mov
call
push
push
mov
call
mov
movl
mov
movl
call
lea
push
call
test
jne
push
push
push
push
call
push
lea
push
call
lea
push
call
mov
lea
push
push
call
xor
pop
mov
pop
ret
push
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
cmp
jne
push
push
push
push
call
pop
xor
pop
mov
pop
ret
push
push
call
push
call
mov
push
push
push
lea
push
call
test
jle
mov
push
mov
lea
push
call
lea
push
call
push
push
push
lea
push
call
test
jg
xor
pop
push
push
push
push
call
mov
pop
pop
mov
pop
ret
add
push
push
push
call
mov
call
mov
shl
add
add
mov
lea
mov
shl
add
lea
mov
xor
add
mov
mov
shl
shr
xor
mov
shr
xor
and
shl
xor
xor
mov
shr
mov
lea
xor
mov
add
and
add
shr
xor
xor
mov
mov
mov
shl
shr
xor
mov
shl
shr
and
xor
xor
mov
shl
mov
shr
xor
mov
and
shr
xor
shl
xor
pop
pop
mov
mov
xor
pop
ret
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
add
add
add
int3
jmp
movsb
hlt
xchg
xchg
dec
loope
ds
mov
in
ret
sbb
push
into
enter
push
mov
neg
inc
adc
ss
sbbl
filds
sbb
dec
mov
dec
nop
icebp
mov
cs
scas
cmp
loop
in
test
mov
xchg
leave
cmp
cmpsb
fsubr
out
push
sbb
pop
cli
mov
std
push
fstpl
jae
add
mov
dec
add
pop
mov
call
cld
in
decl
fwait
mov
mov
push
jge
sub
hlt
dec
outsb
jg
cmp
dec
in
in
call
xor
sub
pop
jl
dec
mov
jg
out
movsb
or
pop
rorl
pop
in
mov
cwtl
push
jbe
pop
mov
mov
jo
or
addl
pop
xor
je
cmp
dec
cmp
jmp
insb
js
cmpsl
xchg
shll
sub
aad
mov
movsl
mov
outsl
notl
mov
fistps
or
sbb
pop
lea
out
xchg
cwtl
xor
imul
inc
fsts
in
inc
sub
ss
mov
mov
adc
and
inc
or
iret
incl
push
ret
add
cwtl
xchg
insl
lret
inc
sub
push
jecxz
cmp
sbb
fmull
mov
adc
lods
mov
daa
mov
mov
outsb
xchg
mov
xchg
stc
adc
push
ljmp
push
test
stc
push
cmp
cmp
adc
fs
cmp
xchg
mov
cmp
push
daa
jg
sub
mov
in
mov
lods
adc
pop
out
pop
fdivs
sti
fnstcw
pop
xchg
cmc
or
pusha
lahf
cs
arpl
loopne
repz
jecxz
mov
push
rcll
sti
sbb
xlat
adc
cld
pop
sbb
lods
sbb
dec
inc
fiaddl
sub
mov
sub
bound
fimull
stos
std
push
daa
and
fisttps
push
and
jns
cmpl
sub
clc
xchg
mov
aaa
outsl
xor
imul
mov
ljmp
push
cli
loope
add
push
popf
lahf
out
ret
inc
pop
cmp
or
mov
mov
leave
popa
sub
jo
js
repz
dec
xor
scas
lea
push
inc
ja
cmp
aad
stos
pop
mov
jle
adc
popf
pop
inc
or
or
adc
shlb
pop
push
and
push
sub
add
add
imul
daa
add
dec
mov
gs
out
fs
lret
in
adc
mov
jl
pusha
pop
jno
jge
mov
inc
dec
pop
aam
adc
jecxz
pop
enter
dec
sub
mov
xchg
sbb
in
xor
ja
outsb
ja
cmc
jno
mov
fwait
xor
adc
jno
pop
jmp
ficoms
scas
stos
repnz
insb
sub
add
int3
cvtdq2ps
sub
push
jnp
rcrl
hlt
out
push
ds
push
call
sbb
ja
add
cmp
dec
notl
inc
dec
xchg
notw
and
jecxz
cs
cwtl
aam
cmc
pop
jbe
mov
jge
mov
xchg
pusha
or
mov
mov
and
xchg
cmp
ds
pop
pop
popf
movsb
xchg
xchg
push
xchg
in
sbb
and
xchg
mov
je
lock
jl
nop
xchg
pop
lods
cmp
addr16
scas
sub
sbb
pop
scas
xchg
ret
pusha
rorb
int
imul
into
mov
scas
mov
cli
fidivrs
mov
jae
sbb
or
sub
in
push
adc
push
jecxz
movsb
rorl
lea
push
imul
inc
shrb
mov
pop
xor
pushf
pop
pop
push
clc
add
jecxz
lret
sbb
inc
daa
test
adcb
lock
inc
mov
sub
mov
stos
pop
add
fnsave
jno
add
ror
hlt
popa
mov
push
pop
nop
fistpll
adc
pop
mov
stos
xchg
xchg
leave
dec
fbld
cld
adc
mov
cld
cli
sub
ja
cmp
cltd
int3
mov
repnz
push
scas
fdivrl
shll
sub
dec
push
xor
dec
xchg
add
mov
mov
gs
xchg
cmp
mov
cmpsb
out
push
adc
rorb
sahf
xchg
ret
add
add
rorl
jne
dec
pop
mov
addr16
rolb
mov
test
mov
mov
in
inc
lods
out
jmp
inc
lret
fldl
pop
add
jnp
leave
call
xor
jge
test
xor
cwtl
pop
popf
cmp
ret
sbb
aad
aam
popf
fprem
dec
adc
out
adc
leave
sub
or
andl
std
dec
jp
stos
clc
test
jae
bound
test
mov
xchg
add
lea
xchg
out
out
imul
lcall
mov
and
mov
jb
push
std
mov
outsl
jmp
scas
test
stos
mov
aam
lds
mov
mov
xchg
movsb
adc
mov
inc
imul
or
xor
imul
dec
pop
jbe
dec
jne
bound
mov
push
pop
cmp
lods
sub
insb
pop
inc
shlb
push
repz
mov
dec
pop
push
pop
mov
icebp
jecxz
fmuls
lret
andl
push
or
sub
dec
mov
push
cmc
mov
and
mov
xchg
arpl
loop
add
insb
lock
push
fcoml
ss
lods
xor
les
pop
lods
ss
lcall
arpl
cmp
cmp
jo
add
repz
mov
adc
pop
inc
aam
xchg
mov
out
push
jle
ds
and
pop
push
subl
pusha
lahf
jl
movsb
ja
insb
push
xor
push
dec
xor
and
sti
push
test
jnp
shrb
mov
mov
inc
leave
ret
or
in
or
sub
or
pop
int
cmp
xchg
clc
test
enter
mov
or
xchg
rclb
pop
mov
repz
cmpsb
in
cmc
xor
mov
sbb
inc
je
dec
lcall
testl
cmp
mov
js
mov
fs
adc
ja
inc
cmpsb
dec
pop
and
sbb
cmp
int3
add
lods
ss
pop
inc
jae
add
out
addl
int
test
xchg
or
push
test
lea
push
cmc
jno
jle
inc
bound
insl
jecxz
mov
cmp
xchg
jp
je
nop
out
fadd
call
adc
jg
out
cs
push
pop
push
xor
fadds
lahf
pop
xchg
addr16
scas
mov
js
push
mov
add
aam
in
notb
lcall
movsl
sub
aaa
adc
lds
scas
stos
inc
test
inc
mov
mov
hlt
aam
sbb
mov
pop
mov
loopne
push
mov
push
jl
mov
mov
test
fldt
jle
fcmovnbe
adc
std
push
pop
outsb
adc
dec
fistps
jo
pop
fsts
push
mov
les
mov
lahf
scas
in
std
cmp
push
mov
cmp
inc
arpl
sbbb
add
gs
mov
into
clc
lcall
inc
xor
xchg
add
out
cmpsb
push
stc
mov
mov
ret
jo
es
rcrl
movsl
sbb
jne
jb
fwait
movsl
test
xor
push
push
mov
scas
fstpl
outsl
rclb
fists
cwtl
xchg
je
mov
sub
cmpb
sub
or
out
popf
pop
push
cmp
leave
mov
rorl
pop
adc
lea
movsl
leave
rcll
je
inc
xchg
iret
shlb
jae
sahf
shlb
popf
pop
mov
arpl
enter
outsb
lret
and
inc
ja
xor
jp
dec
mov
mov
sub
sarl
in
imul
pop
pushf
in
adc
rol
in
push
into
addr16
jmp
jns
aad
mov
mov
movsb
jecxz
inc
or
and
or
in
ret
mov
sub
mov
pop
push
lahf
push
scas
in
mov
push
adc
add
xlat
cs
stc
dec
dec
and
or
dec
mov
mov
arpl
cmp
sub
jnp
bound
add
inc
insl
inc
in
or
cltd
or
pusha
loopne
sub
std
push
pop
sti
push
mov
int3
mov
loop
andb
or
in
cwtl
roll
pushf
mov
stc
iret
call
icebp
mov
imul
notb
xchg
addb
jge
hlt
xor
popf
jae
sbb
outsl
xchg
lea
mov
mov
into
adc
aaa
adc
pop
push
sbb
loop
hlt
cltd
pop
lds
jl
fidivl
test
cmp
dec
xchg
lret
out
pop
hlt
mov
dec
push
jle
fsubr
or
push
sbb
pop
add
das
ja
scas
mov
ret
or
ljmp
fcomps
sub
outsb
lcall
sahf
or
push
mov
xchg
xchg
sbb
mov
sub
addr16
out
jb
pop
jbe
les
sysenter
and
mov
imul
leave
mov
bound
lock
popf
add
lcall
jae
mov
pop
test
xor
pop
clc
xor
push
std
add
push
inc
popa
imul
jl
inc
repnz
sub
mov
cwtl
fisubs
jo
xor
faddl
pop
leave
jmp
push
repz
lock
cmpsl
scas
jae
push
dec
mov
push
cmp
cmp
push
aaa
xorl
xor
mov
loopne
xchg
ficomps
xor
int
mov
add
aam
or
outsb
or
mov
std
inc
sbb
pop
add
adc
inc
cmp
outsl
push
movsl
and
push
sub
xor
inc
pop
pop
fsubl
pop
xchg
pop
jns
arpl
pop
sbb
sti
das
sbb
push
mov
add
xchg
mulb
push
pop
repz
fisttps
push
cmp
jo
sbb
sti
adc
ror
jnp
push
mov
xchg
bt
cmp
loopne
mov
xor
ds
xchg
push
xchg
sti
testb
mov
jns
fcoms
insb
fs
jecxz
bound
and
orb
lods
cwtl
lret
pop
and
test
or
imul
test
je
lret
fcmovu
pop
inc
mov
pop
or
pop
or
jmp
or
imul
aad
clc
enter
xor
cli
cld
sahf
adc
sub
mov
push
mov
clc
arpl
jbe
repz
fs
mov
mov
les
and
push
out
sub
mov
jno
stc
rcpps
repz
out
sbb
push
push
push
scas
adc
or
lods
mov
rclb
icebp
and
ficompl
xlat
xchg
mov
sahf
xchg
push
cmp
stc
pop
inc
sbb
nop
jno
xor
rcrb
and
pushl
pop
popa
dec
dec
cli
test
insb
or
cwtl
xorb
xchg
sub
scas
inc
sub
adc
mov
dec
cwtl
adc
shlb
test
ljmp
cs
xchg
pop
loop
cmpsl
out
shlb
lea
xchg
push
xchg
mov
or
arpl
jne
fdivl
loopne
in
adc
pop
arpl
dec
leave
std
dec
iret
xchg
add
in
push
pop
inc
cli
mov
xor
cmp
fistpll
and
lods
xchg
test
jle
or
xor
ljmp
xchg
aas
inc
mov
and
lret
popf
mov
sub
bound
dec
xlat
insl
shll
sbb
les
and
ja
push
ja
xor
insl
pop
mov
cmp
inc
pop
push
mov
or
pop
pusha
aas
jae
mov
js
mov
pop
adc
test
scas
icebp
rclb
xchg
leave
icebp
xchg
test
mov
sbb
ja
mov
inc
shll
xchg
cmpsb
enter
dec
insl
std
movsb
out
ja
imul
mov
and
imul
testb
mov
xlat
pop
test
push
inc
int
mov
or
adc
fstps
sahf
dec
mov
enter
adcb
sbb
test
test
ss
imul
inc
and
mov
or
lods
movsl
aaa
cmp
xlat
out
lahf
adc
xor
xchg
cld
in
ds
out
ret
xor
popa
movl
aad
mov
ss
ljmp
mull
sub
jae
pushf
stc
mov
pop
jae
mov
sbb
xor
dec
adcb
dec
add
ds
and
push
and
pop
xchg
adc
mov
add
pop
xor
push
imul
push
inc
xor
mov
fwait
xor
test
dec
jns
push
popl
mov
xchg
push
lret
cmp
test
in
sub
pusha
jl
mov
dec
mov
cmp
add
push
add
add
add
add
add
pop
dec
add
mov
add
jg
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
das
push
add
dec
int
and
jae
jo
outsl
addr16
insl
jne
popa
outsb
outsb
outsl
inc
and
and
outsb
and
and
dec
push
and
jno
cs
add
add
cmc
add
lcall
cld
lcall
sti
lcall
push
lcall
lcall
cli
lcall
out
lcall
cld
lcall
add
xor
add
add
add
adc
add
inc
add
dec
add
add
add
add
add
add
add
add
add
add
mov
add
rorb
rclb
add
xor
add
add
add
add
add
add
add
add
add
add
add
adc
test
adc
add
cmc
add
add
add
add
add
add
add
add
add
add
add
rolb
repnz
add
add
add
add
adc
add
rol
inc
add
add
xor
add
add
xor
add
add
add
adc
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
pop
xor
add
add
mov
add
adc
add
add
add
add
add
add
add
add
add
adc
loopne
push
pop
xor
add
add
add
xchg
rorb
add
add
add
add
add
jb
jb
add
add
adc
add
shlb
add
add
add
add
push
add
add
add
add
add
xor
add
add
add
adc
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
adc
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
adc
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
adc
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
adc
add
add
cs
add
pop
and
popf
fbld
jno
sub
xchg
adc
cwtl
cli
mov
add
add
add
push
outsb
pop
outsb
call
in
sbbl
lea
push
pop
and
or
add
adc
cmp
std
decl
cmp
sbb
push
add
and
fisubrl
mov
pop
sbb
call
push
or
clc
add
frstor
dec
xchg
add
addl
dec
mov
call
push
sahf
or
push
push
fisttps
pusha
sti
sub
mov
cmp
add
adc
decb
test
sbb
pop
aas
add
movsb
insl
push
add
xor
pushl
push
or
push
push
mov
sub
jg
or
out
add
push
xor
sbb
andl
incb
call
test
adc
dec
clc
or
jne
dec
xor
mov
mov
test
mov
mov
pop
pop
add
mov
push
lahf
push
imul
jg
out
mov
xchg
add
mov
adc
cmp
outsl
ss
lahf
clc
dec
and
inc
in
xor
push
clc
pop
fwait
sub
push
clc
push
outsl
push
cmp
mov
push
dec
js
xchg
cld
adc
sbb
inc
push
insb
lret
inc
sbb
mov
fdivr
push
and
xor
aaa
aas
push
pop
inc
test
in
ret
aas
cmpl
xlat
cmp
push
mov
mov
push
push
loope
outsb
mov
jne
js
sahf
push
push
push
mov
repnz
daa
sub
mov
fisubs
hlt
push
mov
dec
aas
mov
mov
and
dec
push
jne
cmpl
testb
je
push
pusha
enter
test
add
add
sub
neg
jb
nopl
adc
in
popf
push
and
add
inc
push
add
push
inc
and
movsb
hlt
push
jl
clc
push
xor
push
aaa
push
push
inc
mov
inc
and
or
mov
out
imul
stos
cmp
cmp
xor
cld
ljmp
setb
jge
cmp
inc
mov
bound
sbb
jne
mov
mov
push
mov
dec
inc
and
push
mov
ret
pop
roll
ja
xor
sbb
stos
mov
and
lock
scas
mov
les
dec
sarl
pop
adc
add
stc
push
mov
std
mov
dec
or
add
daa
xchg
jl
or
xchg
xchg
out
in
pop
xchg
rorb
fisttpl
adc
movsl
pop
adc
jge
stos
adc
mov
push
mov
mov
addb
sbb
xchg
cmp
mov
adc
add
adc
ss
dec
and
and
sbb
ja
sbb
mov
sarb
dec
jnp
xchg
or
inc
ds
sbb
lea
inc
inc
dec
inc
imul
mov
out
inc
inc
or
repz
jl
jge
jle
fwait
enter
in
sub
subl
arpl
inc
test
fwait
int
jb
adc
cs
mov
imul
push
push
sbb
popa
movsb
jns
cmc
push
insb
push
inc
pop
sub
shrl
inc
outsl
pop
arpl
fwait
rcrb
les
sbb
xchg
je
cwtl
cltd
popa
cs
rorl
outsl
ss
lahf
lock
mov
cmpsl
mov
mov
repz
loop
inc
jnp
sahf
idivb
push
out
addl
dec
sti
push
mov
mov
mov
sarl
xchg
rcll
ret
repz
shrb
pusha
subb
cmp
ss
int
or
insl
dec
outsb
test
outsl
cmp
push
jo
jno
jb
jns
out
xor
es
mov
std
add
testb
lea
mov
cmpl
test
pusha
or
xor
push
mov
xchg
xchg
or
jge
out
inc
or
add
loope
inc
pop
shrb
mov
test
movzwl
cmp
outsl
andb
inc
cmpl
rcr
arpl
lock
push
inc
and
push
pop
rcll
pusha
push
rorb
lahf
xchg
repz
pusha
dec
int3
int3
adc
inc
cmpsl
sbb
pop
sub
pop
add
jne
push
jl
dec
sbb
test
je
les
sbb
rcll
cli
push
sti
jge
je
jmp
jne
rcll
jmp
mov
mov
mov
push
add
ds
sbb
add
pop
int3
test
icebp
in
loope
in
sahf
lcall
add
or
sub
lea
test
xchg
mov
adc
inc
xchg
dec
ret
sarl
jne
adc
xor
aas
cld
cmp
jne
mov
inc
and
out
data16
shll
adc
inc
rorl
in
mov
and
addl
push
stos
or
cmpl
in
adc
test
clc
rcrb
inc
jne
iret
and
or
cld
sbb
adc
cmp
and
push
mov
shr
or
mov
mov
xchg
adcb
and
or
xchg
orb
adc
or
fisubrs
cmp
push
mov
lock
and
lods
imul
iret
loop
adcl
roll
shlb
sbb
mov
pop
xchg
cmp
xlat
add
cmp
test
roll
push
or
popf
iret
fstpt
cmp
jae
hlt
gs
push
sub
pop
rcl
add
int
loop,pn
jmp
xor
sarl
xor
mov
ljmp
cmp
add
rorl
pop
inc
add
out
xchg
fldt
jl
sahf
shrb
and
sub
adc
div
push
xorl
lcall
sbb
add
xor
dec
push
adc
jecxz
mov
or
adc
movsl
popa
or
jo
lahf
fwait
xor
xchg
sbb
into
mov
mull
out
xchg
xor
mov
gs
scas
xor
xchg
add
xlat
in
aaa
cmp
pop
adc
lock
xchg
into
mov
call
mov
das
sbb
scas
add
dec
shr
xor
lret
add
sarb
scas
inc
fbld
adc
xor
dec
rcrl
add
clc
cltd
jae
lea
out
test
inc
out
rorb
ds
sbb
add
adc
lods
ret
dec
sub
push
adc
in
and
push
jo
push
rolb
cmpl
inc
dec
lods
mov
nop
andl
or
mov
lods
add
sbb
mov
and
adcb
add
push
jge
push
mov
cmp
push
hlt
mov
mov
pop
sub
icebp
inc
sub
or
xorl
or
and
in
je
daa
fsubrl
xlat
mov
fmuls
fwait
in
push
adcl
push
mov
push
addr16
xchg
xchg
push
mov
dec
fisubs
jae
xchg
stc
xchg
and
mov
sbb
jmp
dec
sub
scas
scas
push
and
push
dec
call
xor
push
test
je
jl
xor
fisttps
jl
sbb
into
jmp
push
dec
daa
popf
sbb
sub
pop
mov
shlb
xor
or
outsl
ja
jecxz
add
inc
je
movsb
ja
jmp
xchg
fisubl
int3
push
iret
mov
icebp
mov
es
and
add
adc
div
test
or
lea
sbb
scas
or
cmp
clc
imul
mov
je
push
add
scas
sarb
inc
mov
jb
pop
pop
push
notb
fwait
sub
sahf
adc
cs
mov
add
sbb
mov
mov
adc
pmuludq
repz
imull
icebp
mov
inc
jg
mull
pop
ret
mov
xchg
testb
dec
adc
daa
cs
movzbl
imul
je
mov
incl
jmp
stos
mov
and
rep
pop
mov
mov
pop
mov
les
mov
pop
addr16
ljmp
and
test
ljmp
rcrb
rolb
into
push
mov
fwait
cmpsb
imul
clc
cld
lea
sub
sbb
push
adcb
mov
outsb
cmpl
sub
aaa
fnsave
enter
lea
int3
xor
and
lock
fidivl
or
ret
lea
pop
sub
shrb
data16
xchg
clc
or
sub
int
mov
mov
es
stos
pushf
js
jne
dec
ret
fiaddl
mov
inc
ret
push
or
jle
xlat
or
or
cmp
in
test
arpl
fidivs
push
xor
xchg
mov
mov
xchg
movsb
and
fldl
rcrb
mov
sub
js
mov
mov
mov
cmp
push
xor
jo
xchg
adc
cwtl
clc
pop
xor
inc
test
push
xchg
inc
pop
rcrl
mov
std
call
leave
inc
jb
pop
sub
rolb
xchg
inc
daa
lahf
add
or
push
lea
sub
dec
lock
pop
fsubs
repz
ret
push
cmovp
add
lahf
pusha
mov
arpl
fcmove
push
lcall
jecxz
xchg
cld
or
repz
push
fadd
xchg
leave
xor
xchg
mov
idiv
fiaddl
mov
push
push
push
js
xchg
mov
gs
pop
pop
mov
fidivrl
mov
clc
call
das
push
add
test
mov
lea
sub
in
add
aad
xor
mov
or
lods
rolb
jmp
and
mov
mov
inc
outsb
ret
ret
popa
fsubs
inc
xrelease
jo
lock
push
add
pop
mov
xchg
hlt
dec
or
sbb
lahf
test
pushf
loope
push
adc
jne
or
in
push
test
outsb
add
sub
add
jge
loopne
push
push
or
xchg
aad
push
ljmp
mov
xor
mov
jbe
sub
fcmovnb
xor
cmp
cli
rcll
push
jns
lret
or
fmulp
jl
pop
sbb
sbb
ficoms
jmp
sarl
and
js
decl
gs
xchg
bound
jmp
mov
jb
jbe
insb
gs
outsb
gs
add
cs
insb
sub
pop
stc
jg
cmp
bound
jb
push
arpl
insb
pop
gs
fwait
je
and
ret
mov
data16
inc
gs
dec
imul
jg
sbb
push
pop
push
dec
push
push
mov
push
sbb
jle
push
push
inc
in
push
pop
cs
out
imul
inc
sarl
cmp
shlb
outsb
pop
inc
jne
scas
aaa
repz
pop
out
dec
jae
lcall
jae
add
dec
popa
imul
dec
outsb
outsw
rolb
sti
out
pop
gs
dec
inc
inc
data16
push
inc
pop
dec
cmp
add
add
add
pop
push
push
shlb
stos
jo
inc
sub
pop
nop
add
icebp
cmp
jl
jmp
rorb
push
pop
mov
outsl
popa
or
and
imul
jb
mov
outsb
cli
je
mov
outsl
or
jne
and
inc
dec
inc
and
fs
or
div
ret
mov
or
mov
or
pop
int3
jl
xor
push
pop
xchg
pop
xchg
adc
jo
push
imul
sti
pop
sar
add
dec
daa
loopne
add
out
pushf
jne
adc
in
rclb
adc
mov
push
add
sldt
cmp
cmp
sbb
cmpsl
popf
or
push
inc
push
fwait
pusha
inc
add
into
add
add
cmp
lock
and
add
xlat
jmp
sub
out
popa
je
testb
jg
sub
dec
mov
sub
sahf
stos
out
js,pn
jb
xor
lahf
out
mov
outsl
push
in
aas
jo
ss
sub
test
inc
das
rcrl
dec
adc
outsl
xor
out
push
push
ljmp
mov
adc
push
int
icebp
movb
stc
mov
adc
push
cld
jmp
bound
fistl
and
push
push
or
jecxz
ret
mov
mov
fiadds
cmp
je
mov
inc
sub
push
dec
pop
mov
lea
cmpl
lea
jne
jmp
orb
dec
mov
clc
lea
push
sbb
xchg
in
push
call
je
or
pop
inc
xchg
loopne
jnp
and
icebp
imul
mov
mov
cwtl
mov
or
enter
or
cmpl
rcll
cwtl
sbb
mov
testb
adc
jo
das
jne
sbbb
loope
roll
or
loopne
jbe
loopne
outsl
dec
out
add
aam
cmp
or
push
into
loopne
xor
sub
jecxz
clc
pop
jne
adcl
iret
xor
cmp
jbe
mov
rclb
negb
icebp
mov
fstl
and
fcomps
mov
xor
popf
push
add
add
jo
sbb
push
stos
fsubrs
push
xor
add
jle
mov
nop
mov
stos
fs
push
nop
ror
imul
call
clc
cwtl
mov
add
sar
je
les
inc
or
cmpsl
mov
sbb
ret
push
xcrypt-cbc
cmpsl
push
push
pop
cmp
fidivrs
bt
push
push
insl
mov
imul
dec
and
mov
jo
sub
lcall
in
lahf
imul
jg
outsl
xor
cld
xchg
fadd
dec
cli
push
aam
repz
push
jb
mov
pop
cmp
lret
sub
inc
adc
dec
xchg
pop
push
mov
xor
and
pusha
in
imul
call
shll
jmp
loope
mov
shr
push
push
lock
mov
dec
movsb
xor
push
call
repnz
mov
dec
in
xchg
push
call
cltd
ss
mov
dec
outsb
imul
cmp
pop
and
xchg
push
or
fisttpll
leave
stc
add
cmpsb
pop
add
cli
xlat
cmpb
cmpsl
xchg
jo
mov
shll
shl
scas
adc
test
adc
sub
das
push
popf
testl
cmp
inc
test
cmpsl
aad
push
cwtl
push
ds
pop
out
mov
push
sbb
mov
pop
add
push
mov
icebp
adc
lock
adc
jecxz
lods
or
or
push
pushf
adc
push
orl
loope
je
push
jo
dec
push
or
push
std
pop
pop
scas
adc
pop
adc
lock
cmp
ret
or
push
dec
jnp
mov
sub
mov
fs
enter
adc
fnstsw
adc
repnz
in
je
mov
mov
sbb
loopne
pop
jne
movl
ret
xor
nop
out
mov
push
push
sbb
mov
pushl
mov
movsl
jmp
cwtl
lcall
mov
add
mov
push
mov
pop
dec
fstpt
lret
daa
dec
mov
mov
lret
or
rcll
call
sbb
out
lods
loop
push
cld
rorl
addl
lods
xor
sub
iret
rcll
and
sbb
push
jecxz
push
mov
fisubrs
cvtps2pd
ret
push
enter
and
jge
or
and
inc
fwait
jp
int3
mov
cltd
insb
mov
xor
or
mov
sub
dec
mov
mov
pop
call
push
or
sub
cmp
jle
ss
adc
jl
sti
add
bswap
sub
mov
sbb
sub
scas
jns
mov
xor
je
pop
add
cmp
push
inc
xor
xor
movl
or
aas
pop
inc
enter
add
jae
sbb
aaa
lcall
or
add
sub
push
sub
ljmp
dec
lcall
or
adc
push
pusha
pop
mov
add
sub
fwait
call
addb
dec
ret
xor
jbe
inc
mov
cmp
adc
push
fisttps
cli
adc
sbb
adc
xchg
outsb
jb
push
inc
push
inc
add
loopne
sub
push
pop
and
or
std
js
push
mov
add
mov
add
add
lods
push
jae
jmp
or
or
sbb
and
push
adc
hlt
stos
jnp
push
dec
fdivr
rclb
xchg
repnz
sub
cmpb
jmp
out
das
xor
in
pop
lods
sahf
add
cmpsb
flds
test
bound
cld
rorb
jne
xor
sub
mov
sub
mov
pop
pop
push
adc
call
cs
rorb
mov
xor
add
push
inc
sbb
sub
dec
or
ss
and
xor
cmp
lods
cmp
push
push
jge
mov
sub
je
add
cmpl
cmpsb
or
test
inc
jb
hlt
pop
push
xchg
je
lret
xchg
je
icebp
adc
out
jmp
nop
push
or
repnz
es
jle
xchg
xchg
sub
jle
jl
pop
inc
add
pop
push
add
test
add
adc
mov
xchg
fcomip
out
push
inc
add
inc
xchg
fimuls
stc
mov
test
movsl
dec
push
out
bound
and
add
add
add
lods
jae
shr
push
out
imul
imul
xchg
hlt
or
imul
dec
push
inc
outsb
aas
shr
or
inc
push
inc
add
in
dec
shr
jl
mov
dec
xchg
cld
sub
inc
xchg
dec
pop
mov
adc
fwait
movsb
adc
aaa
dec
rolb
fsubr
fcompl
inc
dec
xchg
insb
out
push
inc
add
mov
icebp
and
outsl
out
inc
add
gs
out
fs
add
xchg
into
imul
and
inc
add
mov
and
test
adc
sahf
wrmsr
and
test
adcb
out
cmc
pop
adc
dec
out
jle
jns
push
test
out
js
and
cwtl
and
aaa
stc
add
decl
add
je
fnsave
add
lret
ja
mov
lods
inc
cmpsl
cmpsl
into
push
out
adcb
adc
dec
out
xchg
ret
sbb
add
es
inc
cmpl
movsb
pop
fisubs
aam
push
mov
sub
movsb
test
pusha
cmpsl
out
add
xchg
mov
out
aam
ja
icebp
inc
add
inc
or
sub
aas
movsb
or
lea
sbb
jecxz
dec
jmp
mov
cmp
or
jbe
ss
jmp
dec
bnd
push
inc
aaa
add
add
mov
adc
shrl
out
das
nop
fmull
fisttpll
sub
adc
push
call
cld
push
sbb
sbb
inc
or
cld
mov
je
push
jecxz
add
adc
push
push
in
test
add
xbegin
adcl
mov
inc
and
mov
shrl
add
inc
shrb
cmp
sbb
jp
or
call
mov
adc
or
mov
dec
mov
mov
lea
jle
or
test
nop
dec
movsb
push
mov
dec
push
fnsave
mov
sbbl
leave
and
out
les
sbb
fs
push
cwtl
adc
xor
adcb
pushf
out
push
nop
cs
insb
cmp
xchg
out
lock
call
jp
xchg
cmpl
shrb
hlt
xor
cmp
cmp
imul
ss
addr16
stc
mov
icebp
sub
aam
gs
cwtl
rcrl
xor
es
je
push
mov
or
je
pop
push
rol
xchg
imul
add
into
adc
sub
sub
jne
sub
pushf
cltd
out
sbb
add
and
movnti
leave
jns
push
es
out
movb
movsl
mov
in
lea
push
inc
pusha
inc
lea
ror
cld
dec
jmp
push
dec
inc
aaa
or
mov
loopne
dec
xor
jl
pop
test
xor
and
push
call
inc
add
push
inc
hlt
cmp
cmp
xchg
in
xor
xchg
insb
jno
mov
and
xor
dec
rcll
into
scas
pop
add
push
pop
test
pop
sbb
sbbl
sub
clc
lock
add
aam
dec
pushf
pop
clc
add
js
sbb
insl
pop
das
and
cld
lods
aas
cmp
push
imul
cwtl
shlb
repnz
push
test
mov
sbb
aam
inc
negl
cmp
xchg
xchg
lret
arpl
lret
mov
js
mov
inc
or
pop
lret
bswap
movsl
lsl
call
sbb
xor
lret
dec
jmp
pop
xor
xor
or
imul
incb
movsl
je
sar
into
stos
xchg
jl,pt
adc
xchg
add
scas
lret
jmp
fidivrl
cmp
xlat
rorl
add
mov
dec
test
sub
xlat
out
fwait
mov
jb
rorl
xlat
push
adc
dec
popa
add
pop
ret
dec
pusha
sub
inc
adc
add
daa
xor
inc
daa
andl
out
mov
insl
xor
in
push
gs
pop
mov
add
mov
stos
mov
nop
or
lret
push
shll
movsl
lret
negl
mov
and
jo
pop
cmp
xlat
mov
scas
sbb
ret
loop
ficoml
pop
jmp
jo
mov
call
pushl
ds
repz
xchg
cli
cmp
ror
inc
xlat
inc
push
js
lcall
pop
in
or
mov
sub
sahf
push
xchg
cmpsb
inc
ja
repz
push
shlb
clc
inc
jbe
xor
repz
repz
pop
fs
cmp
nop
mov
sahf
cmpsl
stc
leave
in
ss
sbb
xchg
repnz
mov
bound
pop
dec
femms
dec
push
enter
mov
sub
imul
sub
sti
shll
fs
xor
add
lahf
or
shll
push
inc
jae
jae
lds
jb
push
dec
fldt
or
dec
je
out
jns
imul
inc
fidivrl
xchg
das
inc
xor
out
aad
js
gs
push
popa
insb
jne
test
ja
cmp
push
pop
ja
ja
ret
outsb
je
pop
or
call
and
pop
and
jmp
outsl
outsl
je
cs
xor
pop
jae
arpl
cs
jo
jb
mov
adc
adc
sbb
add
loopne
shl
inc
mov
out
fs
es
int3
dec
cmpsb
xchg
cmp
loopne
loope
dec
es
mov
sbb
add
sub
jne
push
stos
mov
mov
imul
pop
loope
outsl
cmpsl
je
xchg
inc
add
arpl
imul
sbb
push
pop
add
faddl
stos
dec
movsl
addb
jle
dec
popa
sbb
mov
fs
jbe
data16
cmp
cwtl
pop
pop
inc
jle
out
stos
or
fbld
insb
push
pop
jo
push
jnp
jae
push
shll
xchg
sbb
pop
dec
fwait
out
fnstsw
inc
add
sbb
and
mov
loopne
scas
and
fs
push
mov
es
fldenv
inc
pushf
add
adc
jbe
push
push
movsl
cmpsb
divb
popa
imul
dec
push
push
scas
mov
imul
xchg
pushf
add
popa
inc
sub
js
or
xor
inc
pushf
cwtl
inc
add
push
lret
out
outsl
je
add
inc
add
lahf
ss
out
sbb
push
ljmp
lret
pop
or
jo
fisttps
jle
lret
or
in
lahf
in
testl
fiadds
mov
sub
cld
mov
je
jo
mov
cmp
daa
dec
and
mov
mov
inc
jmp
ss
xorb
aad
jmp
mov
fwait
popa
pop
out
dec
out
jl,pt
sbb
mov
andl
sbb
or
ja
jbe
movsb
fmuls
push
fs
push
xchg
add
ds
mov
insl
mov
das
dec
imul
mov
test
push
sahf
and
lock
push
gs
data16
subb
lahf
push
and
dec
inc
push
cmp
xor
ja
mov
xor
xor
mov
popa
dec
mov
bound
fs
call
imul
jle
add
and
test
mov
sub
sbb
add
imul
jne
jns
fwait
arpl
jo
in
aas
and
ja
dec
outsb
sub
gs
mov
inc
rolb
inc
mov
insb
sahf
pop
sbb
sbb
cld
pxor
mov
push
inc
inc
add
push
dec
das
mov
adc
add
mov
stos
push
push
cs
dec
dec
add
add
inc
bound
insl
dec
dec
je
dec
dec
push
jno
icebp
loope
inc
mov
fsubl
ds
cmc
pop
dec
pop
pusha
dec
aam
add
mov
sbbb
mov
jmp
test
xor
out
inc
popa
ljmp
sub
adc
dec
xor
rcrb
push
jns
das
add
mov
addb
mov
adc
pusha
dec
test
in
lods
sub
mov
jns
js
sahf
outsb
jae
and
fwait
push
lcall
push
fldcw
ficomps
and
jbe
and
xor
data16
mov
push
rclb
and
jg
and
cmp
lods
jp
sub
mov
or
mov
push
xor
outsl
and
les
gs
jae
idivb
cmp
pusha
out
dec
cli
insb
and
or
mov
or
mov
jne
inc
arpl
int
pop
sbb
into
in
das
jns
mov
stc
das
out
ss
sbb
sub
push
lahf
ds
roll
inc
inc
dec
dec
xchg
pop
pop
adc
pop
mov
pop
roll
ljmp
xor
xor
fidivs
or
inc
xor
xor
xor
xor
or
lret
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
decl
daa
xor
xor
mov
push
out
xor
ja
jg
test
mov
sahf
loope
xor
xor
xor
bound
xor
xor
xor
xor
xor
shrb
inc
push
pop
xor
xor
add
jnp
andb
xchg
xor
and
xor
xor
or
pushl
xor
loopne
xor
and
cmp
insb
xor
pushl
divb
xor
inc
and
ss
cltd
arpl
ss
ss
add
aaa
pop
aaa
sub
aaa
jne
jge
mov
mov
xlat
aaa
loope
lock
cli
aaa
inc
cmp
cmpb
cmp
cmp
sub
cmp
mov
cmp
pop
mov
cmp
cmp
jbe
mov
sub
jne
jl
mov
xchg
sub
outsb
push
cmp
cmp
push
dec
cmp
cmp
or
addr16
outsb
cmpl
cmp
dec
fstpt
cmp
pop
cmp
cmp
lret
cmp
and
inc
dec
jp,pt
mov
stos
sti
or
bswap
sub
dec
aas
pusha
dec
jne
mov
mov
mov
sub
test
dec
mov
inc
xor
pushl
pusha
bound
mov
cmp
cmp
dec
sarb
cmp
leave
ljmp
cmp
cmp
fs
xchg
cmp
fstpt
adc
xor
cmp
push
ds
add
mov
ds
aas
dec
or
jbe
mov
lods
call
je
and
mov
xor
xor
push
xor
ljmp
pushl
outsl
xor
xchg
mov
mov
xor
xor
cmpsl
xor
xor
rolb
lcall
pushl
popa
xor
cmpsb
xor
xor
testl
adc
and
xor
incl
xor
xor
xor
mov
xor
xor
outsl
adc
in
xor
xor
adc
adc
decl
or
push
out
stos
xchg
addr16
mov
mov
adc
adc
inc
push
mov
adc
sub
lcall
out
sti
cmpsb
sahf
pop
aad
xor
int3
dec
push
mov
or
sahf
fimuls
fisttpll
dec
out
jno
adcl
sbb
fadd
sub
push
dec
sub
repnz
pop
rolb
inc
and
pop
mov
test
jmp
mov
push
pop
outsb
xor
xor
insb
pusha
add
inc
inc
cmpsb
and
and
rolb
adc
add
push
pop
inc
sbb
and
and
cli
lock
add
ja
jl
stos
mov
scas
xlat
out
out
stos
push
jmp
pop
adcb
mov
push
lock
imul
cmp
sbb
cmp
imul
xchg
mov
in
adc
and
jns
out
pop
pusha
jo
call
sahf
xchg
movsb
mov
mov
arpl
dec
add
loop
int3
add
pop
add
add
cld
jbe
push
mov
cmp
add
test
mov
cmp
add
xchg
push
inc
add
dec
cmp
insl
test
js
jg
lods
add
sti
test
add
pop
insl
jl
add
gs
fsubrp
and
bound
mov
jae
addb
in
add
push
in
mov
bound
pop
inc
xor
push
mov
ret
xchg
shlb
loope
stos
push
dec
inc
dec
orb
js
ret
xchg
out
rolb
jg
xchg
popa
popa
pop
lss
jmp
add
add
filds
je
pop
sbb
arpl
cmp
adc
arpl
xchg
mov
jmp
xchg
mov
and
std
rclb
outsl
and
lds
mov
xchg
sbb
bound
addr16
stos
push
xchg
jae
jo
lea
insb
and
add
jae
popl
push
lock
sub
dec
imul
jae
jne
mov
sbb
inc
dec
inc
mov
test
adc
decl
pop
jecxz
testl
mov
inc
push
mov
add
pop
mov
mov
xchg
rclb
mov
lock
lds
and
adc
jbe
jmp
pop
cmpsb
jne
imul
jo
and
outsb
adcb
cmpl
imul
inc
inc
pop
das
jno
imul
imul
std
outsb
outsl
data16
cmpl
js
loop
pop
pop
and
jns
ljmp
and
jno
jo
pop
jbe
cmp
pop
dec
outsb
push
leave
test
mov
mov
lea
std
pushl
dec
xchg
inc
jbe
inc
push
ljmp
inc
ret
xchg
je
pop
push
push
ja
mov
insb
and
insb
lcall
ljmp
push
jo
jne
je
cmp
xchg
inc
and
push
mov
jno
data16
fildl
sbb
je
daa
addr16
pushf
xchg
scas
ljmp
bound
ja
syscall
dec
ds
mull
lea
mov
int3
and
dec
push
incl
push
sbb
pop
pop
mov
push
push
popa
ds
call
dec
decl
inc
cmp
lea
decl
dec
neg
fcoml
shrb
and
xchg
inc
sti
jbe
push
inc
repnz
fdivs
or
or
pop
and
mov
push
sar
add
cli
push
push
call
movsl
sbb
add
imul
in
clc
movsl
fisttpll
mov
adc
jo
cmpb
shld
push
add
lock
sub
rcrl
lea
vpshufd
pop
and
push
insl
adc
fmull
mov
sub
imul
inc
fmull
lcall
or
shl
in
inc
adc
adc
call
outsl
insl
rcrb
sub
dec
sub
xor
dec
loope
hlt
pusha
movsl
lock
clc
jne
push
jecxz
jmp
pop
or
add
dec
jg
mov
add
xchg
and
pushf
data16
jnp
lock
adc
jb
push
in
pop
cmp
sbb
or
jne
fcomi
stc
mov
push
pop
sub
mov
pop
adc
jne
fiadds
xor
xor
mov
cmp
lock
dec
add
lock
add
add
decl
inc
dec
inc
jl
fdivl
int
pop
dec
int3
push
cwtl
pushf
inc
shlb
inc
aas
mov
cmp
jb
mov
push
cmp
negl
sbb
push
ret
push
js
add
xchg
push
inc
cmpsl
mov
push
push
pusha
dec
push
mov
pop
andb
aas
in
inc
mov
sub
or
inc
shl
or
cli
sar
loopne
cmc
mov
test
call
add
push
pop
lcall
into
mov
std
mov
sub
jmp
nop
insl
mov
jns
and
popl
jmp
push
sbb
aaa
inc
popa
inc
sub
faddp
add
add
aad
and
jmp
jnp
or
adc
lea
adc
add
call
sahf
dec
sbb
inc
std
hlt
shll
ret
jmp
push
into
fadds
scas
mov
ret
in
mov
fwait
mov
jl
pop
fbld
sub
es
lods
jb
mov
xor
dec
add
pop
push
or
int
cwtl
lahf
mov
popf
clc
je
sbb
cli
loope
push
jb
add
jle
mov
push
inc
sbb
add
iret
aam
adc
pop
hlt
and
mov
mov
mov
cli
mov
add
lock
decl
sub
cwtl
or
mov
inc
or
mov
xor
xor
lea
or
imul
icebp
outsl
push
push
mov
cmp
jb
ds
mov
and
roll
or
les
je
xchg
pop
adc
fwait
adc
mov
scas
and
adc
adc
lods
pop
in
xlat
mov
adc
cltd
push
jo
add
pop
cmp
dec
adc
adc
push
lea
mov
divb
rorl
incb
or
scas
insl
mov
add
pushf
popf
pop
xor
mov
mov
jbe
call
cld
add
xorl
les
push
sub
rcrb
cmp
dec
dec
repnz
call
iret
or
mov
mov
add
xor
icebp
subb
dec
and
cli
or
cmpl
adc
xor
sbb
mov
mov
jmp
adc
and
notl
shrl
daa
pop
jbe
das
bound
or
sub
out
adc
push
or
cli
inc
or
cmpsb
into
imul
mov
std
cmpsl
mov
clc
mov
cmp
dec
pop
cltd
push
rol
fsubrp
push
in
xor
or
es
pop
aaa
fimuls
imul
call
mov
orb
xor
dec
in
or
add
adc
ja
push
mov
adc
outsb
or
xor
xchg
jmp
clc
inc
pop
scas
ds
test
pop
sar
fwait
or
or
dec
ret
pop
mov
lock
pop
inc
lgs
lea
cmp
and
les
jp
cmp
ja
nop
push
stc
rol
or
cli
out
push
add
bound
aam
ljmp
lock
add
adc
incl
jne
add
lea
das
lock
or
je
add
inc
in
mov
insl
mov
push
add
orl
sub
xor
outsl
mov
shlb
jo
or
shll
or
add
pushl
not
rorl
adc
jmp
sar
or
ja
in
inc
sbb
jecxz
and
outsl
lret
mov
ret
cmp
adc
rcl
loope
fbstp
out
sbb
inc
lret
out
cmp
mov
imul
ljmp
pop
lret
mov
and
rorb
cmp
dec
push
push
inc
out
mov
mov
rcrl
dec
sub
jmp
sub
mov
or
mov
add
ret
mov
push
bound
stos
push
daa
inc
je
and
dec
movsl
xor
movsl
push
sbb
xchg
aad
mov
sub
and
movsl
push
pop
jne
inc
push
mov
push
mov
out
rcll
cmp
std
jg
inc
sbb
sbb
nop
cmp
adcb
jle
adc
mov
cmp
dec
nop
jne
jno
xor
into
mov
mov
push
mov
rorl
and
mov
test
int
push
jp
xor
mov
scas
adc
mov
and
nop
insl
outsl
stos
rclb
fwait
pop
xor
adc
adc
mov
movsl
daa
inc
nop
fwait
lds
mov
lahf
pop
dec
xchg
icebp
add
pop
push
stos
add
jp
xchg
mov
cli
xchg
cs
pop
jmp
mov
stc
xchg
bnd
xchg
cmp
add
add
pop
push
push
adc
fwait
or
add
loopne
push
mov
xchg
push
mov
cltd
inc
xchg
dec
jno
or
rcll
push
aam
ss
jg
fstl
mov
popa
insl
mov
imulb
dec
and
or
or
cwtl
push
cld
xchg
cmp
mov
or
adc
fnstsw
addr16
push
pop
add
add
loopne
lcall
call
testb
je
push
push
cmpb
xchg
cmp
jbe
xchg
sub
push
cwtl
ljmp
ljmp
jbe
test
call
mov
negb
in
push
lock
ret
or
repnz
pandn
pop
addb
rcrl
pop
stos
inc
jg
mov
call
mov
jne
cmpl
clc
decl
clc
inc
loop
jge
adc
add
shll
push
jp
xor
push
xchg
mov
sbb
mov
out
mov
popf
popa
add
movsb
adcb
std
decl
loopne
popa
or
push
pop
pop
or
sub
cmp
jae
clc
cmp
decl
imul
test
xchg
adcb
cmpl
cmp
std
lcall
movl
in
add
push
xchg
out
cld
lcall
or
mov
mov
ss
mov
add
mov
out
aad
bound
lahf
adcb
jg
pushf
je
xor
and
xchg
add
sub
pop
add
std
push
add
push
jge
ret
mov
decl
pop
inc
repz
pop
rolb
data16
push
mov
pop
mov
push
sub
ljmp
mov
dec
inc
shll
scas
sahf
shl
fisubl
jg
xor
decl
or
mov
jl
or
push
add
push
or
es
out
mov
clc
and
dec
dec
adc
enter
jae
cmpsl
and
push
inc
pop
clc
testb
push
push
cmp
mov
or
adc
xor
adc
lock
mov
cltd
imulb
sahf
push
into
jae
adc
adc
clc
add
pusha
mov
out
lret
jecxz
mov
adc
jp
mov
fadds
gs
jbe
sbb
mov
decl
cmp
ljmp
je
mov
repnz
insl
call
dec
in
inc
xchg
addr16
lret
in
fs
scas
fiaddl
rcrl
lods
adc
jb
ljmp
push
fistpll
gs
mov
lods
mov
cmpsl
sarl
jne
push
mov
jg
mov
mov
ljmp
sqrtps
jle
cmp
mov
ja
mov
insb
inc
inc
popf
and
pop
push
decl
or
adc
pop
pop
pop
mov
mov
xchg
push
push
inc
sub
lcall
cltd
cmp
imul
pushf
sbb
mov
push
insl
pushl
mov
mov
scas
mov
fwait
lcall
cmpsb
xor
into
mov
pushl
repnz
jae
jmp
and
call
movsl
call
sti
bound
sti
dec
mov
jmp
jae
fsts
xchg
sbb
and
pop
cmp
imul
dec
sbbb
mov
cli
outsl
data16
adc
dec
gs
ljmp
push
dec
jbe
pop
push
mov
fimull
push
lods
insl
in
pushfw
outsb
aaa
xor
mov
mov
fbstp
sahf
or
add
aas
mov
cmpsl
mulb
add
insb
mov
sub
jmp
inc
decb
and
mov
pop
sbbl
cmp
scas
mov
ja
cmp
test
dec
orl
es
out
push
sub
fiadds
or
dec
cs
daa
ljmp
sub
xchg
mov
mov
push
pop
iret
fstps
dec
fwait
sbb
cld
jle
adc
lret
icebp
ret
test
push
mov
call
cwtl
lock
or
adc
xchg
hlt
cmp
int
mov
add
sub
push
imul
scas
add
sbb
popa
out
lds
jl
cmp
xchg
sub
dec
incl
adc
adc
pop
add
dec
movsb
call
and
test
or
xchg
pop
decb
xor
pop
adc
mov
dec
inc
and
cld
adc
pop
lsl
pushf
outsl
fwait
mov
aas
mov
jmp
iret
jae
jl
mov
push
push
int3
and
inc
mov
mov
jmp
ljmp
jo
out
xchg
aad
adc
push
fsts
dec
pusha
clc
ffree
stc
sbbl
lret
add
add
mov
and
xor
pop
jle
lea
in
int
sbb
adc
fmuls
incl
cmc
mov
lahf
lods
std
cmp
jb
sbb
sbb
daa
clc
rcr
pop
cmp
ljmp
lahf
pop
sub
ret
pop
inc
mov
push
aas
pop
mov
adc
mov
jne
inc
dec
add
jo
pop
push
repnz
hlt
cld
xor
push
or
add
or
cmp
hlt
ljmp
push
pop
mov
pusha
jecxz
push
call
aas
jns
lods
or
sbb
dec
pop
sbb
jg
push
inc
sti
adc
int3
pop
sub
pop
add
mov
add
shll
dec
add
sbb
add
test
fisttps
lods
imul
js
push
loop
rep
loop
cli
ljmp
ljmp
fcoms
push
test
cmp
insl
push
sti
cmp
pusha
push
movsl
xchg
mov
ljmp
push
mov
sbb
stos
pop
outsb
sbb
push
jb
dec
decl
pop
adc
jnp
inc
or
or
dec
test
push
shlb
sbb
in
jecxz
enter
mov
or
jmp
jecxz
add
lock
rcll
add
or
lock
fists
popa
lds
movb
loope
mov
mov
xor
loop
push
pop
inc
pop
enter
cmp
sub
mov
add
mov
js
sbb
lea
testb
inc
xchg
repz
push
add
mov
ds
cmp
enter
sub
fiaddl
call
or
fstpt
push
sub
mov
addr16
loope
mov
inc
pop
jge
pop
in
stos
add
inc
inc
sub
mov
sub
cmpl
clc
and
repnz
cld
mov
decl
test
cmp
and
jo
and
sbb
ljmp
or
addr16
mov
add
jne
sub
std
test
sahf
pop
incl
lods
and
mov
sbb
push
bound
push
pop
fistpll
ljmp
pop
fsubs
out
divl
imulb
adc
push
push
push
sbb
jae
cmp
inc
push
push
andl
call
mov
bound
mov
fidivrl
decl
or
jnp
pusha
and
sub
mov
and
fistpll
add
decl
sarb
in
faddl
xchg
mov
lock
fwait
and
adc
ljmp
sub
add
filds
es
and
push
add
add
test
je
popf
or
dec
xchg
mov
xchg
jne
push
es
or
push
add
pop
dec
pop
pop
mov
test
ljmp
mov
jo
cmp
sub
loope
and
std
jp
jne
sbb
pop
test
mov
pop
in
insb
jg
push
mov
jb
jmp
outsb
out
fmuls
stos
push
inc
jns
mov
aad
out
add
mov
stc
cmpsl
call
arpl
lods
lods
sbb
fs
cld
jg
mov
xchg
push
push
or
mov
pop
leave
mov
sbb
adc
aaa
ret
pop
jecxz
loope
inc
sbb
jnp
leave
notl
je
push
mov
xchg
pop
and
std
mov
mov
cmc
pop
test
int3
mov
je
jmp
jecxz
js
ret
xchg
push
mov
cmp
pop
mov
adc
jl
popa
insb
iret
stos
sbb
sbb
out
cli
add
pop
ljmp
ljmp
mov
je
push
xor
cmp
dec
or
leave
dec
jbe
enter
dec
cmp
insl
scas
mov
add
adc
mov
out
xchg
fsub
fistl
xor
stos
jmp
icebp
xchg
cld
cli
mov
inc
cmp
sub
xchg
lahf
ror
loop
mov
decl
lret
sub
push
sti
popa
into
add
cmpsl
inc
pop
mov
lea
dec
inc
push
stc
sti
gs
movsb
push
inc
and
sbb
and
rcr
add
jg
sub
mov
jmp
aam
orl
nop
mov
addr16
jmp
pop
adc
pop
cmc
insl
pop
outsb
add
inc
in
out
adc
add
mov
cli
add
rol
fsub
ljmp
rorl
aam
and
in
fsin
xchg
out
cwtl
push
cmp
outsl
inc
leave
mov
jb
push
aad
dec
push
and
sub
and
mov
mov
int
push
xchg
pop
iret
sarb
xchg
jno
push
in
clc
mov
sbb
pop
xchg
mov
lods
mov
loope
fimuls
popf
push
push
mov
jl
add
in
jge
xchg
test
mov
loope
das
pop
or
pop
stos
mov
inc
je
dec
inc
ljmp
sahf
sbb
xor
sti
lahf
std
test
cmp
add
sti
gs
cmp
and
jo
fildll
out
pop
cmp
push
xlat
or
nop
rcr
cmpl
ljmp
outsl
aad
pop
push
ljmp
xchg
movzwl
pop
mov
ret
decl
seto
testl
mov
dec
dec
aaa
sub
mov
ljmp
push
sub
je
mov
or
push
insb
jb
jb
cmp
pop
js
sbb
pop
sbb
lret
decl
in
andl
movsl
insb
rol
sbb
sub
mov
lahf
sub
movsl
dec
jmp
lcall
mov
xor
repz
pop
pop
jg
and
lds
lods
loop
sub
ljmp
cld
mov
pop
stos
lea
sub
ljmp
imul
jbe
push
ja
ret
call
jle
push
pop
ds
sbb
jle
push
cwtl
xchg
incl
cld
sub
sub
push
jp
sbb
sub
scas
mov
idiv
push
sub
xchg
jp
out
pop
inc
in
cli
cmp
cld
out
sbb
push
sahf
insl
pop
lea
pop
shlb
rcrb
xlat
in
rcrl
sbb
nop
sub
sar
pop
in
mov
aas
repnz
stos
pushl
inc
cmpsb
push
push
pushf
mov
subl
add
xchg
jle
ret
dec
shrb
jo
cmp
sbb
nop
lods
incl
test
and
sub
mov
lea
dec
and
pop
and
mov
mov
pop
inc
int3
jno
pop
push
jg
sbb
mov
je
out
mov
inc
aas
mov
mov
jecxz
or
outsb
test
jns
lock
out
jno
psubusb
fldl
sarl
outsl
outsl
cmp
cmpsb
add
js
decl
push
sbb
lock
int3
xor
xor
xor
mov
jmp
ret
int
in
ljmp
dec
dec
pop
hlt
add
add
cmp
out
ror
push
mov
rorb
add
jg
mov
ret
fdiv
and
fdivr
ljmp
pop
mov
adc
jp
cs
shll
negb
push
fcomip
cs
sahf
or
add
dec
movsl
ds
mov
xchg
sbb
add
mov
call
xchg
add
lcall
in
adcb
push
or
popa
add
pop
jg
lcall
test
ljmp
push
clc
repnz
mov
or
push
push
loope
adc
lret
mov
cmp
js
mov
dec
jge
cmp
push
inc
lea
and
mov
pop
mov
shrl
cwtl
xchg
decl
mov
xor
pop
test
inc
lcall
imul
mov
xor
inc
cld
mov
divb
negl
pushl
push
xchg
mov
sbb
sub
dec
push
fdivr
add
jg
test
call
adc
xor
push
pop
jnp
es
mov
lahf
or
xor
jb
cwtl
mov
insl
xor
mov
nop
or
in
out
xor
push
call
push
cltd
test
out
daa
je
and
das
ja
ljmp
sbb
insb
dec
mov
movsb
push
test
test
daa
sbb
inc
add
add
out
inc
imull
push
jecxz
mov
or
int3
imul
inc
jo
push
fbstp
hlt
mov
fdivp
push
imul
scas
test
mov
pushf
xchg
lcall
mov
jbe
psrad
and
xor
insb
adc
hlt
pop
imul
movl
call
lea
sub
in
cs
xchg
jae
loopne
sbb
mov
dec
adc
push
pop
ds
push
xor
fcomps
jl
bswap
lcall
pusha
sub
fsubr
int3
sti
movsl
gs
mov
cmpsl
mov
mov
push
inc
daa
dec
and
jl
sbb
lea
mov
push
push
xchg
xlat
jae
sbb
or
fwait
inc
xchg
jnp
adc
or
fndisi(8087
pop
add
cmp
and
inc
lret
std
fdivr
stos
lods
ja
mov
adcb
int
es
push
scas
sbb
test
xchg
push
jno
and
leave
repz
or
scas
cli
call
lea
add
add
and
call
or
xchg
or
add
movsb
leave
mov
or
ljmp
mov
xchg
fldt
inc
or
mov
jp
cmp
adcb
sti
dec
mov
mov
adc
push
js
adc
push
add
clc
mov
sarb
push
mov
leave
pop
call
sahf
dec
push
dec
mov
mov
sbb
test
pop
mov
jmp
pop
cmp
or
xchg
sbb
mov
xor
dec
jb
xchg
or
push
fistl
pop
jnp
repz
in
push
inc
nop
dec
mov
cmp
and
hlt
out
mov
jb
hlt
movsl
hlt
and
push
jg
sub
data16
test
cmp
push
jne
in
inc
xor
pusha
or
cltd
sbb
fs
pop
mov
or
aaa
xlat
xchg
mov
adc
fildll
push
imul
je
cmpsl
stos
es
jl
jp
fisttps
xchg
jns
mov
lods
js
pop
adc
and
adc
mov
sar
decl
outsl
mov
jne
mov
push
int3
add
in
filds
decl
call
cmpb
xor
xlat
or
inc
mov
jo
test
push
pavgw
stos
dec
cbtw
jb
pushf
lods
insb
in
sahf
or
mov
nop
push
xor
push
insb
and
aaa
and
or
pop
aaa
jge
cmp
mov
push
iret
mov
decl
test
cli
xor
mov
mov
dec
fmul
sbb
std
ss
push
stos
pushl
xor
out
xchg
or
xor
addl
or
push
cmp
cwtl
decl
push
fcomps
pop
sahf
mov
fcomps
rolb
inc
mov
ljmp
xor
xor
scas
xchg
push
repnz
je
stc
add
xchg
das
clc
int
je
push
lds
mov
fldcw
movsl
je
pop
inc
mov
mov
jmp
loopne
lahf
test
mov
push
pop
sub
push
out
insb
rol
jmp
fcomip
inc
loopne
xchg
mov
jmp
push
cs
repnz
dec
sub
sbb
pushf
fdivrp
and
pop
or
test
jp
sub
mov
mov
xchg
sbb
aaa
std
inc
aam
enter
sbb
xchg
ret
fmuls
add
clc
jbe
outsl
mov
or
push
iret
scas
jl
cmp
push
je
xchg
push
std
jmp
jo
sbb
mov
loopne
jmp
pop
xchg
sub
call
je
lea
stos
arpl
popf
jns
jl
push
int3
in
or
fdiv
and
inc
jb
mov
lea
mov
jo
mov
test
jmp
lcall
cld
xor
and
cwtl
mov
popa
jne
xor
mov
and
pop
sbb
andb
mov
cld
pop
adc
ljmp
jo
cmp
in
jo
fdivr
jo
insl
fistpl
cmp
insb
push
outsb
rorb
decl
mov
mov
cmp
or
sahf
dec
popa
fs
push
fnsave
cmp
cli
xor
jns
insb
sub
xchg
jecxz
push
lea
mov
pop
cli
ds
ss
decl
imul
xchg
daa
sbb
inc
dec
stc
sbb
repnz
inc
cmp
cld
mov
sbb
sti
jmp
push
in
clc
sti
inc
jle
repnz
loopne
test
popa
push
sub
clc
xchg
iret
and
pop
out
std
add
dec
sbb
scas
add
xor
sahf
sbb
pushl
dec
adc
cmp
dec
adc
dec
or
test
test
out
clc
dec
ljmp
mov
adc
dec
push
lods
mov
mov
in
and
into
cli
std
and
jmp
xchg
stos
andb
cmpsb
xchg
aad
pushl
nop
aas
in
mov
out
mov
dec
cmp
dec
pop
push
cltd
push
jl
xor
mov
sbbb
les
sub
mov
inc
movsb
mov
dec
stc
into
xchg
cmpb
mov
repnz
clc
decl
cwtl
xor
fsubr
enter
repnz
fsubr
xor
pusha
cld
jmp
ljmp
inc
xor
pop
adc
mov
fs
fs
mov
ret
lret
or
std
jg
cmp
iret
xchg
push
mov
inc
cs
call
cld
pop
shll
mov
push
cmc
mov
push
lock
fcoml
loopne
loope
imul
cmp
jmp
pop
cwtl
nop
clc
or
sub
dec
adc
sti
incl
inc
dec
mov
inc
xor
std
adc
outsl
inc
lcall
nop
cmp
dec
xchg
push
dec
decl
in
in
test
cli
adc
in
cmp
js
ss
aam
mov
in
pushl
mov
pushf
test
push
adc
fs
cmc
xor
sti
call
getsec
xor
sbb
stc
mov
jno
hlt
rorb
outsb
xor
adc
std
cmp
push
mov
jl
rcl
add
insb
lcall
decl
faddl
sub
mov
cmp
push
stos
mov
or
xor
lret
xor
rolb
and
or
es
or
xor
movsb
mov
lcall
inc
lret
cld
cmp
sbb
and
hlt
cld
cmpsb
call
add
cmp
cld
cld
fsubs
movsb
hlt
inc
mov
test
int
daa
nop
addb
dec
push
dec
push
nop
push
pop
bnd
sbb
daa
adc
or
adc
inc
out
fisttpl
adc
decl
out
add
push
add
jae
int
mov
mov
lods
sub
pushl
jbe
pcmpgtb
jns
repz
mov
and
stos
stos
decl
aaa
add
adc
add
rol
or
enter
inc
dec
sahf
pushf
jbe
and
out
decl
mov
out
pop
std
push
push
sbb
lock
push
pop
repz
lods
clc
ljmp
sbb
dec
mov
call
fcoms
pop
lock
add
lcall
xor
ja
push
lds
or
sub
aam
decl
and
mov
push
mov
mov
push
sbb
push
sub
test
jg
lahf
push
or
mov
cmpsb
adc
push
ds
push
std
and
lcall
ffree
mov
jb
xchg
xchg
dec
sub
movsl
pop
pop
push
pusha
mov
xor
dec
and
cli
mov
lea
adc
jg
pop
sbb
je
add
outsl
xor
cmp
or
dec
lcall
sbb
push
inc
adc
push
inc
lcall
cmp
scas
push
dec
loope
fmull
mov
jnp
lea
push
and
add
ss
movb
sbb
dec
or
int
paddsw
or
fs
fs
subb
pusha
pop
rolb
and
or
cmp
mov
or
jne
jmp
push
push
add
or
fdiv
mov
bnd
je,pn
ud2
jmp
sbb
inc
testb
addb
data16
fists
in
int
fadds
loopne
push
mov
dec
ljmp
mov
lahf
rorb
push
test
jbe
outsb
testb
xchg
ljmp
clc
dec
inc
call
sub
dec
or
ret
mov
add
push
mov
decl
in
insb
into
cmp
adc
fnsave
sahf
mov
adc
ficomps
pop
mov
pop
add
mov
stc
xchg
inc
fdivs
orl
cltd
and
dec
push
aad
mov
test
cmp
mov
lcall
decl
push
sar
mov
push
mov
sub
jle
cli
mov
sbb
dec
adc
incl
mov
mov
xlat
imul
loop
addr16
push
pop
push
dec
rclb
enter
cmpsl
mov
or
loope
mov
and
mov
je
jg
pushf
ljmp
sub
or
push
ret
pop
je
or
ss
mov
in
lret
enter
mov
incl
or
sbb
sub
xchg
push
and
push
add
ljmp
clc
lret
cmp
sub
xor
jmp
add
cmp
add
lcall
cmovo
push
pop
push
push
enter
xchg
mov
mov
or
aas
lret
pop
sbb
dec
adc
cmovae
push
test
xchg
das
xchg
int
decl
movsl
inc
xchg
jl
in
lcall
jns
jecxz
push
add
dec
rclb
cmp
das
je
mov
ljmp
cmp
cmpl
popa
jmp
mov
dec
sti
call
jo
mov
or
pop
jne
insl
stos
fcomip
popf
pop
push
dec
xor
imul
adc
push
sbb
scas
shlb
sub
rclb
fdivs
test
fxch
mov
jmp
in
bound
adc
push
fcompl
ucomiss
cmpb
push
pop
clc
dec
ss
inc
lret
ljmp
rcr
aas
je
loopne
sub
add
int3
int3
in
push
and
cld
out
es
push
sbb
mul
push
pop
jbe
sbb
das
cli
call
mov
ljmp
out
or
cmp
xchg
jne
decl
insb
fnstcw
popf
or
mov
sbb
pop
mov
or
into
repz
cmpb
sbb
fcmovnu
negb
push
mov
dec
add
mov
out
mov
adc
je
shlb
adc
or
fadd
adc
clc
decl
nop
sbb
inc
lds
sub
jne
call
lods
ljmp
sub
sbb
sub
cmp
shll
add
daa
or
cs
inc
lret
dec
idiv
mov
aad
sbb
adc
in
frstor
out
decl
pop
lcall
xor
mov
dec
pop
rcrb
icebp
out
pop
jo
dec
add
mov
inc
inc
or
mov
add
dec
add
test
ljmp
mov
and
fisttpll
sub
fiaddl
scas
lds
or
pop
push
cmp
push
or
pop
test
cmp
sbb
xor
enter
inc
and
adc
rcrl
cld
test
push
jge
jl
sub
mov
or
loopne
ljmp
rorl
fstl
sbb
xor
adc
sub
add
pushl
xor
mov
jge
shl
vpcomud
mov
xor
ljmp
or
mov
mov
and
repnz
mov
fnstcw
mov
or
mov
jge
jb
inc
inc
or
jge
add
add
incl
jmp
sub
mov
xchg
xchg
fdivrs
add
int
cmp
inc
addb
dec
or
fistps
mov
lock
clc
jle
cmpl
jno
loopne
clc
incl
mov
add
mov
cltd
pavgw
pop
dec
mov
insl
outsl
cli
cmp
sub
sbb
std
pop
cmp
inc
xor
xor
jno
xor
add
sbb
mov
lcall
and
push
push
pop
pop
shrb
xor
pusha
insb
decl
sub
adc
jb
push
adc
inc
or
shrb
push
dec
mov
je
pop
scas
insl
mov
es
add
subb
int3
mov
ljmp
je
mov
nop
sub
or
arpl
mov
or
imul
aas
dec
pmullw
decl
test
sub
cmp
jp
xor
nop
push
push
push
or
cmp
ds
clc
movsl
jmp
mov
add
xchg
push
adc
lcall
dec
push
xchg
push
jb
dec
jo
popa
shr
cmpsl
jge
pop
dec
aad
sbb
mov
push
mov
mov
mov
ljmp
repnz
frstor
push
add
mov
jp
sub
lds
ljmp
ret
sub
mov
push
out
inc
dec
xor
daa
push
rcl
pop
int3
cmp
or
int
rolb
mov
inc
stc
pop
fwait
stos
xchg
mov
lahf
cmp
je
pushf
lods
cld
movsl
decl
bound
rolb
loope
adc
repz
in
jns
mov
pop
or
in
push
pushf
fistl
ljmp
shlb
cmp
fcomps
ds
sub
das
xchg
sub
push
dec
test
decl
mov
mov
mulb
push
push
jmp
add
fnstcw
das
cli
insl
cmp
xor
jne
xor
mov
jae
pusha
xor
add
fistpl
ljmp
adc
fs
push
je
mov
mov
pop
xchg
jns
or
ljmp
mov
jge
xchg
mov
mov
xchg
int3
pop
decb
or
call
aaa
insl
dec
shlb
xchg
adc
fs
and
jmp
ljmp
loope
mov
mov
dec
lods
mov
arpl
mov
mov
adc
adcl
dec
adcb
loopne
stos
pop
mov
or
mov
mov
jae
xor
ret
insb
mov
sub
sbb
jp
cld
push
imul
fwait
scas
push
sub
mov
push
xchg
enter
and
enter
bound
add
fcompl
pop
mov
push
data16
subb
jo
xchg
push
push
mov
xorl
inc
fnstcw
icebp
adc
push
filds
and
xchg
adc
sbb
pop
xor
out
and
inc
cmp
add
adc
cwtl
push
scas
push
decl
lock
mov
jo
push
push
sar
xor
call
mov
ljmp
mov
sti
je
mov
insb
add
cmc
fadd
add
jg
xlat
pop
xor
or
ret
pop
xorl
mov
mov
jmp
mov
mov
cmpsl
jecxz
test
fwait
jmp
xchg
sub
aam
mov
cmpsb
jl
ja
lcall
mov
imul
pushf
movsb
mov
ljmp
xor
jle
rcrb
mov
sbb
test
jne
ja
fstl
hlt
lea
fisttpll
cli
aam
je
adc
lock
test
inc
sub
xchg
mov
ljmp
insl
lcall
xor
int3
mov
bound
mov
dec
daa
movl
aad
lds
xchg
orb
cmp
decl
mov
push
jno
xchg
fs
bound
inc
push
mov
or
sub
xchg
push
lods
clc
sahf
dec
or
aad
sub
or
in
in
dec
imul
nop
xor
xchg
shlb
inc
or
mov
andl
push
and
add
pop
mov
lods
push
mov
or
xchg
sub
stos
cltd
or
sahf
lods
test
push
insl
insl
addl
fcoms
addl
or
orl
or
sbb
dec
xchg
pop
xor
out
xor
and
push
mov
dec
inc
push
nop
jl
dec
and
xchg
and
cs
or
jl
aas
or
insb
and
test
dec
and
inc
push
cmp
add
pop
ffree
and
xchg
decl
jmp
rorl
push
pop
je
out
push
and
shrb
dec
sti
in
inc
pop
lcall
push
lea
enter
mov
inc
sahf
je
faddl
std
call
lea
mov
cmp
pusha
dec
push
xchg
test
ljmp
insb
mov
push
movsl
je
cli
or
out
adc
or
les
push
dec
jbe
fimull
mov
ret
pop
mov
ljmp
dec
es
aaa
xchg
test
mov
sbbl
insl
test
xchg
mov
decl
das
push
cmp
or
cmp
mov
shrb
mov
sar
in
pop
mov
xlat
jg
add
sub
into
orb
dec
lock
rclb
sub
pop
add
inc
inc
add
jmp
mov
incl
je
sarl
xlat
mov
ljmp
inc
or
std
cmp
pop
adc
xor
cs
mov
nop
loopne
notl
mov
in
dec
pop
mov
push
out
cmp
xchg
mov
aas
mov
adc
sub
rclb
mov
pop
mov
orb
mov
cmp
pushl
push
inc
lods
in
jo
repz
xchg
inc
in
pop
faddp
scas
das
sar
rcrb
in
push
mov
push
lcall
nop
inc
sub
push
in
or
dec
and
lods
gs
mov
roll
sub
adc
in
adc
mov
mov
or
mov
hlt
sti
mov
sbb
movsl
or
incl
push
dec
dec
js
or
shlb
xor
or
and
push
xor
xchg
inc
sub
pushl
int3
sti
cmp
addr16
add
xchg
int
mov
sub
pop
pop
mov
call
jbe
int
ficompl
cmp
in
rcl
outsb
outsl
shll
mov
shl
jae
pop
stos
mov
push
xchg
mov
or
mov
or
idivl
xorb
fdivrs
ss
push
adc
std
push
orl
inc
sbb
jnp
jle
cmp
mov
aas
xor
pop
mov
add
push
mov
hlt
cmp
nop
ss
mov
pop
sbb
dec
add
cli
ljmp
in
aam
jecxz
mov
jg
cmp
inc
xor
mov
loopne
mov
jbe
mov
fldl
mov
mov
adc
pop
std
mov
out
inc
mov
shlb
jnp
jmp
stc
inc
or
jg
cwtl
mov
test
jb
jg
mov
add
ja
xlat
lds
xchg
ljmp
les
add
cmp
loopne
mov
cmp
or
sbb
dec
pop
push
cmp
out
int
push
incb
xchg
xchg
adcb
dec
sbb
decl
sbb
xlat
or
pop
xor
or
sub
lods
cmp
pop
std
rorb
mov
inc
rcrb
rcr
iret
add
inc
or
mov
dec
imul
pop
dec
pop
push
push
mov
add
sbb
sbb
and
inc
inc
lods
dec
shlb
add
adc
fcoml
in
jg
add
lea
hlt
cmp
mov
clc
xor
scas
adc
cmp
loop
outsb
aas
mov
xorb
stos
pop
push
cmp
movl
addl
nop
dec
shlb
enter
sub
lds
push
je
jecxz
or
imul
add
outsb
mov
cmpsl
push
mov
stos
jmp
ss
jecxz
ret
adc
jae
mov
or
pop
movsl
nop
sub
jbe
cs
lahf
lahf
js
jg
test
mov
mov
in
mov
mov
int
out
clc
pop
and
sbbl
or
dec
loope
out
icebp
or
jmp
jno
xchg
cmp
or
mov
divl
cmp
imul
fidivrs
pop
pop
jns
jle
enter
mov
inc
jl
mov
add
add
lods
lea
lret
call
ja
and
pop
lods
loop
push
xchg
cmc
test
mov
mov
sbb
lock
filds
or
rorb
adc
stc
pop
push
ljmp
cld
push
mov
push
xchg
mov
mov
xchg
xchg
sub
call
mov
push
das
cli
dec
add
or
stos
lahf
jbe
adc
pop
add
and
loop
mov
dec
ljmp
test
mov
pop
rolb
lea
shl
popa
push
imul
test
arpl
xchg
sar
mov
push
adc
cmp
add
jmp
addl
mov
or
lahf
or
adcb
dec
ret
mov
repz
aas
cmp
jmp
add
mov
push
mov
cmpb
cmp
adc
ljmp
test
mov
add
in
lret
jnp
shlb
xor
cs
mov
lcall
mov
mov
jmp
es
jl
jae
push
nop
in
lahf
les
ljmp
pop
pop
add
xchg
fadds
lock
sbb
shl
inc
in
adc
lcall
push
add
push
sbb
add
aas
orb
pushf
push
lret
call
sahf
push
adc
enter
push
shlb
and
mov
sub
incl
xor
in
cmp
sbb
cld
decb
mov
dec
scas
shl
cmp
rcrl
ja
hlt
fwait
mov
or
int3
ljmp
stos
hlt
mov
inc
xlat
mov
ljmp
dec
filds
xor
mov
adc
call
mov
mov
repz
mov
lahf
cmp
or
imul
mov
push
sbb
es
mov
or
add
push
mov
pop
test
or
ret
sub
in
jecxz
xor
push
in
arpl
loop
sub
mov
mov
or
fnstenv
adc
and
push
mov
cld
pop
or
decl
mov
pop
dec
mov
or
push
mov
das
cli
dec
push
push
push
dec
jne
push
or
enter
dec
imull
push
stos
ljmp
cmp
push
pop
idiv
ljmp
or
inc
jg
decl
jno
cli
aam
adc
or
ffree
add
gs
or
in
nop
daa
dec
ljmp
inc
call
sub
cmp
or
mov
call
sub
xchg
movb
pop
pushf
mov
ljmp
lea
mov
roll
rolb
loopne
xor
js
fistpl
push
stos
cmc
push
je
push
outsl
cmp
fisubl
and
xchg
or
leave
adc
xchg
inc
dec
add
and
add
ljmp
adcl
popa
lock
popf
pusha
push
push
xchg
xchg
in
push
add
push
cmp
xchg
inc
xchg
decl
cmpsl
xor
mov
notl
int
jge
sbb
in
xchg
pop
lret
add
dec
pop
mov
roll
inc
ljmp
sub
ffree
mov
icebp
mov
cmp
or
inc
jp
cltd
xlat
sub
xor
add
cmpsl
scas
jge
adc
adc
into
lret
stos
call
cmpsl
sbb
mov
inc
xchg
cs
or
add
ljmp
shlb
jbe
cltd
xchg
clc
scas
cmp
add
adc
inc
pop
jle
push
decl
or
cmp
rcrb
xor
mov
fcos
in
js
lahf
loopne
inc
inc
add
jne
repnz
jmp
pop
push
adc
mov
pop
xchg
dec
mov
incl
add
push
movsb
pop
divb
adc
imul
addb
decl
cwtl
cld
ficompl
mov
lea
leave
add
jns
fdivl
in
jg
sub
sahf
adc
sbbl
das
jno
jmp
ljmp
mov
fs
inc
leave
mov
mov
in
inc
xor
popf
push
add
inc
jnp
cmp
add
or
mov
push
jo
cmp
cmp
lcall
dec
pop
push
sbb
or
add
ja
test
lods
push
pop
test
mov
jge
repz
cmp
xor
jge
lock
cmp
mov
insb
mov
test
push
jl
dec
idivb
jge
sub
and
cmp
outsb
or
outsb
dec
popf
mov
aas
sub
lret
ljmp
inc
out
cmpsb
gs
cmpsl
insb
and
fs
rcr
xchg
cli
ljmp
xor
pop
mov
fidivs
orb
and
stos
leave
fldenv
push
or
mov
sbb
sub
dec
lods
or
jmp
lds
sahf
cmpsb
fsts
adc
pop
call
in
pop
fcomps
inc
and
rolb
out
clc
pushl
add
pusha
dec
gs
jo
out
cwtl
xchg
orl
mov
mov
mov
test
jne
jns
out
lcall
mov
leave
jae
adc
mov
loope
push
and
inc
lods
das
pop
icebp
or
adcb
shll
stc
and
incl
add
shrb
fs
cltd
arpl
rclb
dec
or
push
clc
pop
dec
stos
jno
adc
aad
and
xchg
adc
clc
add
jmp
outsb
das
sub
in
dec
xor
insb
aas
test
adc
out
movsb
je
iret
ja
decl
adc
dec
mov
push
aad
cmp
aam
sbb
cwtl
call
call
ror
push
shlb
mov
xchg
pop
adc
add
in
call
loope
push
popa
cmc
and
dec
mov
inc
push
push
push
lret
cmp
stc
mov
cmp
dec
movsl
mov
lcall
push
push
fisttpl
das
clc
movsl
add
add
ret
movsl
or
lret
dec
or
je
pushl
mov
je
dec
stos
cmp
dec
or
test
fs
add
cmp
or
sbb
insl
jmp
dec
test
xor
pop
pushf
xchg
jne
lods
or
push
jae
jns
or
call
sbb
mov
mov
and
mov
inc
mov
sub
and
jmp
and
mov
test
or
testb
or
cmp
jmp
jnp
sbb
inc
pop
jno
sbb
fists
sub
push
cltd
dec
incl
in
dec
outsl
inc
jnp
imulb
repnz
xchg
and
push
pusha
je
stc
std
xor
sbb
jl
push
test
repnz
cwtl
mov
mov
mov
mov
sahf
sub
inc
xchg
lods
gs
faddl
add
in
subl
mov
fidivl
faddl
add
jmp
dec
arpl
mov
ljmp
in
xor
and
les
roll
sbb
jb
fidivrs
mov
push
ljmp
adc
daa
les
push
xchg
fdivl
mov
cmp
fwait
mov
inc
test
or
gs
lcall
sbb
push
lods
pusha
lods
sub
lcall
aaa
fidivs
or
add
mov
add
addr16
pusha
add
pop
mov
ja
push
cwtl
sbbl
sbb
sub
ljmp
push
push
subb
cmp
jge
adcl
jno
sub
xchg
loopne
popf
push
scas
add
mov
incl
pop
in
cmp
mov
insb
xor
les
add
cs
stos
ljmp
std
shlb
mov
xchg
int3
xorb
push
enter
xchg
mov
rolb
in
xor
sbb
adc
int3
xchg
clc
push
push
mov
in
xchg
pop
aas
and
in
push
das
test
sub
outsl
jecxz
lret
in
dec
sbb
ljmp
repnz
and
mov
xchg
or
push
mov
es
decl
cwtl
adc
pop
add
lahf
out
or
loope
hlt
inc
and
jae
popa
stos
push
xrelease
ljmp
insb
adc
dec
and
cs
mov
lcall
es
in
decl
test
mov
mov
dec
sbb
inc
cmpsb
adc
mov
pop
mov
cmp
pop
push
mov
std
cmp
and
packuswb
xchg
jbe
jns
adc
incl
shll
and
jb
inc
enter
or
sbb
mov
loope
pop
sub
inc
mov
jns
jl
rorb
std
xor
dec
xor
dec
adc
mov
movsb
jb
sti
xor
jae
push
arpl
mov
pop
ljmp
and
scas
hlt
add
subps
jmp
in
mov
cld
jge
pop
int3
jo
sti
sahf
push
xchg
or
push
xor
ljmp
data16
ljmp
fwait
add
cmp
push
pop
cwtl
or
xor
lret
pop
aam
and
jne
xchg
cmp
and
cmp
js
shrb
decl
inc
dec
pop
inc
lods
sub
jmp
sbb
pop
mov
inc
jne
enter
or
and
movsb
mov
cld
jmp
cmp
jno
sub
xchg
ljmp
nop
sub
lcall
arpl
dec
lcall
inc
jnp
ja
and
dec
cmp
add
pop
insl
or
xchg
add
sbb
add
ljmp
xchg
lock
dec
jmp
pusha
push
cs
push
mov
int3
cli
mov
lcall
push
test
jb
pushf
sbb
fs
test
pop
mov
adc
dec
imul
mov
and
leave
hlt
fidivrs
dec
jle
xor
or
notl
or
inc
int
ljmp
inc
add
or
lret
lds
inc
push
mov
adc
and
or
push
mov
inc
aas
mov
cmp
push
or
or
push
mov
pop
das
cli
in
jmp
mov
adc
xchg
ja
inc
int
js
push
push
idiv
xchg
push
movsl
and
cmp
notb
or
sbb
decl
dec
xor
dec
scas
jecxz
cmp
add
add
scas
pop
jle
imul
sub
adc
push
jb
xchg
pop
outsb
cmp
mov
ljmp
int
xor
out
subl
loopne
add
mov
adc
pop
add
decl
mov
sbb
dec
imul
inc
push
xor
lods
or
jnp
fdivrp
in
xchg
cmp
mov
mov
pop
inc
in
mov
push
push
cmc
add
or
loopne
dec
jmp
lea
loope
cmpsl
aam
ljmp
shlb
sti
icebp
mov
ljmp
mov
mov
jbe
pop
out
add
xchg
pop
out
cli
imul
movlps
mov
dec
loopne
inc
or
je
cmc
push
and
pop
add
mov
sbb
and
mov
lcall
xchg
jns
push
mov
lock
xchg
mov
testb
push
inc
mov
or
mov
fs
incl
push
xor
in
add
fcompl
xor
push
pop
push
xor
sbb
lcall
dec
leave
adc
decl
jg
add
inc
sub
or
lock
sbbl
xchg
loop
js
popa
mull
cltd
stc
dec
das
cli
notl
push
mov
mov
sub
clc
xchg
or
inc
adc
rcrb
push
or
push
cmp
mov
cmp
shrl
neg
repz
xor
dec
cmp
ja
add
sub
sbb
mov
mov
jge
sub
ds
add
and
xor
xchg
or
lea
xchg
ror
jge
sbb
pushf
shlb
pop
push
push
push
vsqrtps
lret
cmp
ret
loopne
sub
pop
sahf
addb
hlt
inc
and
cmp
push
pop
inc
or
jmp
push
add
sub
subl
fildll
lret
in
sbb
fisttps
or
orl
dec
jo
scas
xchg
mov
cmp
sbb
mov
xchg
enter
push
push
mov
dec
adc
jb
and
inc
push
mov
inc
shll
enter
push
add
call
cld
mov
push
loopne
in
lahf
int3
cs
push
es
nop
lret
int3
push
mov
or
mov
pushl
lret
test
cltd
nop
hlt
js
mov
in
lods
movsb
in
imul
lret
cmpsb
ret
mov
stc
cmp
sarb
sub
lea
jne
rcl
xchg
cmpsb
add
push
fsubp
sbb
adc
push
in
mov
call
dec
clc
jmp
imul
push
mov
add
cs
add
push
or
mov
mov
inc
mov
pop
ret
push
push
push
test
das
js
adc
inc
adc
sub
adc
mov
cmc
ljmp
mov
cwtl
add
xor
loop
or
lret
leave
out
sti
in
jg
es
repz
fcoms
push
jb,pn
mov
lret
sbb
push
into
push
ljmp
push
pop
aam
sub
nop
jecxz
push
nop
cld
xor
add
mov
jl
xchg
jbe
stc
into
ljmp
js
f2xm1
jg
push
add
aaa
es
outsb
dec
inc
mov
cltd
rcll
sub
jg
data16
mov
mov
fcoml
repz
ljmp
out
outsl
fdivl
xchg
inc
mov
or
pop
into
jmp
push
mov
jg
nop
std
imul
mov
pop
or
incl
es
sbb
loopne
clc
faddl
pusha
mov
adc
and
push
push
mov
inc
mov
sub
sub
cwtl
repz
aaa
inc
pop
or
jge
imul
dec
pop
mov
in
ljmp
ds
lock
gs
mov
push
sub
xchg
bound
push
in
popf
mov
xchg
incl
add
push
test
cltd
sbb
cmc
push
sbbl
out
sub
rol
add
mov
mov
sbb
loopne
xchg
or
in
icebp
fsubrl
push
or
decl
pushl
adc
clc
arpl
mov
adc
leave
in
push
cltd
lcall
movsl
xor
into
xchg
lods
in
xor
pop
mov
or
jne
or
mov
pop
les
jl
add
lret
sbb
jmp
cmp
fs
fs
sbb
test
fsts
xchg
adc
mov
mov
fcomp
fdivrs
jbe
mov
adc
jl
shr
add
push
mov
add
sbb
ljmp
jo,pt
addb
mov
sbb
push
sbb
jmp
outsl
sub
sbb
enter
xchg
xchg
xchg
jnp
sbb
mov
fstpt
sbb
int3
cltd
jg
pushf
sub
sbb
xchg
mov
dec
into
dec
cmp
sub
pop
mov
pushl
nop
xchg
jno
push
enter
add
inc
adcl
xchg
xchg
cmpsl
loopne
data16
xchg
mov
add
sbb
fildll
lea
jo
movsl
insb
ret
jns
shrb
insb
push
or
jge
mov
or
cld
addr16
mov
push
or
decl
ds
jns
sub
ficomps
or
shll
pushl
aaa
adc
loope
stc
jle
mov
pusha
jle
sti
loop
mov
sarb
stos
lcall
sahf
xchg
jle
push
mov
add
push
addl
push
cwtl
adc
pop
loopne
pushf
aam
mov
sbb
xor
push
sahf
mov
push
pop
sbb
mov
mov
sub
and
loopne
cmp
inc
call
pop
mov
hlt
pushf
mov
jge
and
cmp
int
sbb
pop
roll
pusha
or
jmp
shlb
add
pop
and
fwait
decl
mov
nop
sarb
xchg
adc
inc
gs
aaa
cmp
pop
fldt
lcall
clc
add
pusha
out
mov
dec
jne
mov
movsb
mov
jbe
hlt
mov
or
or
ret
cmp
adc
pop
add
mov
sub
add
add
mov
jl
sbb
lea
cmp
push
jmp
lea
mov
sbb
adc
xchg
jg
add
add
lret
adcl
add
in
pcmpgtw
inc
mov
sahf
add
xchg
cli
push
subl
idivl
setne
pusha
cmpsl
mov
test
inc
gs
sbb
push
xchg
jno
inc
lahf
jnp
es
jno
pop
mov
decl
mov
sbb
push
pop
es
imul
inc
cmpsl
inc
aad
lcall
pushf
cmpsb
imul
rorl
sub
ljmp
inc
inc
sbb
mov
movsl
gs
or
jp
insl
popf
add
loopne
xchg
dec
pop
lds
decl
clc
mov
cli
or
xchg
icebp
add
icebp
mov
sbb
cmp
mov
decl
in
xchg
in
rolb
repz
mov
outsl
mov
adc
and
roll
faddl
push
repnz
cltd
divb
in
incl
cmp
pop
clc
inc
dec
gs
add
cmp
je
sbb
push
shrl
lds
ja
clc
xor
mov
and
sub
mov
decl
lock
popa
sbb
inc
fstpt
xor
push
xor
ljmp
inc
fdivr
dec
in
incl
cmp
xchg
push
pusha
cwtl
and
adc
add
xor
int3
fs
ret
xchg
scas
orl
xor
aaa
addr16
fsubrl
adc
mov
insl
mov
pop
xchg
xor
outsb
imul
mov
adc
pop
int
inc
push
push
jle
lock
cli
stos
add
sti
sti
jmp
aam
imul
fdivr
sbb
fidivs
mov
ficoms
lea
sub
push
inc
movsl
aam
mov
or
adc
js
sub
adc
decl
mov
xchg
mov
dec
jmp
xor
add
lds
adcl
cmpsb
pushf
les
lret
repnz
xor
mov
das
add
pusha
lea
sahf
inc
or
ljmp
add
jecxz
xchg
pushf
pushf
add
push
or
push
scas
and
sarl
into
adc
inc
jle
pushl
nop
arpl
dec
cld
rolb
lock
and
jecxz
mov
fbstp
lret
jb
cmpsb
pop
leave
inc
in
xchg
mov
push
leave
xchg
stc
in
or
jg
push
pushw
lahf
push
imull
dec
xchg
sub
mov
call
pushl
sbb
lods
add
call
insb
arpl
shrb
out
imul
fsubr
xchg
lock
dec
push
pop
pushl
shll
lock
les
lahf
scas
xor
push
cmp
lret
pop
icebp
incl
es
cmp
aad
xchg
outsb
cmp
test
or
pop
frstor
mov
icebp
les
mov
or
dec
cmpsl
sbb
in
cmp
mov
pusha
gs
jne
add
pop
xchg
scas
dec
push
jo
mov
lcall
push
aas
xchg
mov
add
fisttpll
and
mov
ljmp
in
stc
mov
movsl
cmpsl
test
lea
ficoms
lock
xchg
incl
xchg
es
clc
pushf
adc
jne
popl
arpl
das
cli
pushl
push
xor
push
xchg
ss
cwtl
ss
rclb
mov
call
js
incl
into
dec
and
cmp
es
ja
addr16
mov
push
aad
es
sbb
jecxz
pop
cmpsl
fadd
sub
enter
shlb
pusha
adc
fwait
push
cmc
push
stos
ljmp
pop
test
lcall
push
nop
mov
adc
push
push
sahf
adc
subb
or
jl
push
rep
cmp
jmp
cwtl
adc
mov
push
add
cmp
dec
ja
test
dec
push
or
data16
clc
push
sub
sarb
repnz
jbe
inc
sbb
lret
add
clc
adc
jmp
js
xor
int
inc
push
lock
or
jnp
mov
daa
xor
adc
pushl
adc
rclb
ljmp
adc
add
ljmp
cli
bound
push
pop
in
das
outsb
aas
cmp
inc
or
push
ljmp
push
sub
dec
bound
es
push
popf
jo
divb
imul
mov
dec
pop
push
or
shlb
or
dec
mov
mov
add
pop
movsb
xchg
out
push
mov
incl
out
dec
xchg
jae
loop
or
mov
out
loope
pushf
push
mov
ljmp
movsl
mov
data16
daa
les
clc
fimull
pop
test
mov
pop
addr16
push
xor
ljmp
loop,pn
les
jnp
ret
xlat
sub
in
orl
mov
pop
inc
push
pushl
faddp
outsb
pop
test
xchg
cs
ja
test
xor
hlt
addb
hlt
pop
sahf
cltd
mov
push
add
jl
and
es
pop
lret
pop
dec
pusha
fldt
imul
scas
jb
and
adcl
push
or
repz
jmp
enter
pop
inc
add
cwtl
cmpsb
popa
in
adc
inc
hlt
cli
jo
test
dec
push
and
pusha
mov
lock
and
outsb
dec
xchg
push
sbb
push
mov
in
call
jne
mov
pop
adc
pushf
in
ret
mov
inc
xchg
jl
lea
xor
jl
push
add
clc
decl
clc
dec
push
push
mov
adc
ljmp
jne
mov
fwait
pop
hlt
ljmp
or
mov
jno
or
jge
xchg
push
or
sub
push
xchg
daa
sar
dec
rcrb
push
nop
icebp
inc
push
lock
push
movb
pop
push
cli
pop
sub
decl
movnti
adc
push
rol
lea
xchg
inc
stos
rcll
in
xor
roll
stos
sub
dec
inc
dec
dec
shll
dec
cs
int
insl
xor
jg
and
scas
dec
push
inc
xor
add
lahf
jg
das
sahf
pop
les
imul
lods
fdivl
or
test
std
push
jle
call
loopne
xchg
mull
xorl
in
sbb
pushf
inc
add
sbb
xchg
inc
lea
ljmp
lret
pop
adc
sbb
sar
stos
cmc
pop
lcall
fadds
adc
and
cmc
shll
mov
clc
xor
jge
jecxz
xorb
dec
push
out
mov
addl
mov
data16
adc
fists
mov
jb
and
fdiv
in
stos
decb
mov
movsb
insl
pop
enter
adcb
dec
decl
lock
or
js
cmp
cmc
push
xchg
dec
cmp
sub
decl
xchg
out
jae
sbbb
lret
gs
xchg
jbe
outsb
stc
movsb
mov
addb
call
or
lahf
jno
mov
inc
xor
xor
xchg
test
rcrl
decl
push
sahf
fsubrs
pop
push
or
repz
daa
in
inc
cmpsb
mov
pop
in
sahf
popa
xorl
mov
add
jns
inc
cld
fs
push
sub
les
aam
decl
int3
call
aam
mov
xor
add
xor
push
outsl
and
decl
fcmovne
nop
ds
arpl
loope
nop
xor
int3
mov
adc
scas
pop
aam
leave
jg
jo
inc
jno
ret
insb
cmpsl
pop
pop
cli
push
imul
pusha
add
inc
and
incl
imul
lea
mov
sub
cmc
jg
cld
mov
adcl
inc
popl
in
cmp
mov
test
xchg
loopne
mov
inc
cmp
dec
mov
sub
je
fyl2xp1
subl
outsl
xor
dec
lcall
cmp
movsl
stos
das
or
and
push
rcrl
lahf
push
adc
inc
jns
mov
and
test
jmp
fldcw
jecxz
add
sub
inc
fs
or
xchg
sbb
push
test
xlat
ljmp
push
ret
xchg
and
xchg
test
mov
lods
in
and
loopne
lock
add
inc
fisttps
adc
sbb
fstl
xor
dec
or
mov
jmp
aam
aaa
in
add
mov
add
incl
outsb
lcall
or
stos
in
dec
jae
xor
cld
ficoms
orw
and
push
mov
incb
pshufw
adcb
incl
rcrb
add
stc
imul
call
mov
std
or
jmp
test
daa
and
ret
rcll
insl
fsubr
int3
loopne
idiv
dec
dec
ds
imul
xchg
pop
lock
sbb
jno
add
adc
rolb
push
fldt
decl
or
dec
popf
dec
push
adc
push
mov
out
sub
popf
rolb
mov
daa
cmpb
addb
mov
and
out
es
pop
lcall
movsb
cmp
add
lcall
mov
or
and
and
lret
mov
and
mov
or
or
push
nop
mov
and
fidivl
mov
ljmp
hlt
cmc
mov
sub
test
je
mov
cmc
mov
push
sub
decl
fstpt
sbb
or
jl
sub
pop
and
aam
js
pusha
dec
jmp
cmp
dec
pusha
and
mov
aam
imul
ret
mov
mov
cs
push
xchg
sbb
lea
jg
push
int3
mov
ret
das
and
inc
adc
mov
mov
hlt
or
mov
push
cmp
xchg
xchg
loopne
stos
incb
push
xchg
nop
cltd
outsl
mov
shr
and
ret
lods
xchg
mov
ret
dec
sbb
adc
or
mov
outsb
xchg
out
and
in
jno
imul
cmp
int
jmp
inc
sub
hlt
fucomip
aaa
or
divl
in
adc
jecxz
icebp
mov
dec
cmp
cld
and
jne
js
pusha
sbb
sahf
xor
adc
cmp
hlt
stos
sub
sbb
je
push
addr16
jns
out
dec
sub
outsl
xchg
rcll
push
mov
repz
or
cmp
lcall
shl
xcrypt-cbc
cmpsl
xchg
adc
mov
pop
pop
jmp
cmpl
call
loopne
mov
adc
fmull
add
lret
sbb
add
scas
out
mov
or
xchg
cmpsb
data16
mov
int
jg
mov
in
add
aad
stos
cmp
and
adc
inc
ljmp
ret
fs
mov
pushf
pop
cmp
xchg
call
sti
in
adc
add
out
jecxz
jmp
push
xor
xor
mov
fnstsw
inc
andl
dec
repz
inc
clc
mov
sar
ljmp
and
subl
mov
ret
push
in
inc
inc
or
or
push
dec
test
decl
sbb
fistpl
movsb
sbb
pop
xor
mov
fwait
inc
loop
mov
popf
xchg
sti
add
ljmp
push
lock
lock
pusha
push
lods
sti
xor
pushl
divl
lock
sahf
push
aaa
cmc
iret
mov
inc
lods
inc
clc
sarb
inc
adc
aaa
outsl
ljmp
test
loopne
leave
adc
add
mov
movsl
pop
test
mov
mov
or
movsb
pop
repz
int3
hlt
jo
push
inc
inc
hlt
push
add
inc
or
or
adc
jl
xor
sbb
or
clc
push
push
cmpsl
cmp
sub
adc
call
add
mov
cmp
mov
or
jbe
inc
pop
add
and
add
lcall
inc
leave
push
add
lds
repz
mov
ds
ljmp
loopne
aas
push
test
sub
push
pop
xchg
pop
cmp
dec
call
mov
loope
movsb
cmpsl
insl
ret
jb
mov
mov
push
enter
outsl
mov
mov
push
push
call
daa
push
sbb
roll
pushf
subl
ljmp
rol
jle
or
xchg
inc
bound
test
sub
fsts
ljmp
incl
out
loopne
mov
addl
cmp
mov
scas
shll
pop
enter
and
decl
sub
lcall
ret
movsl
fidivs
dec
mov
negl
add
mov
clc
lea
xor
ret
dec
cmp
inc
test
sar
sbb
aaa
call
pushl
sbb
test
push
pop
pusha
and
dec
shlb
dec
push
lods
and
incl
xchg
test
or
pop
xchg
push
xchg
pushf
inc
in
or
push
pop
jg
xor
incl
sbb
mov
add
push
ds
rcll
lock
cs
lock
incl
or
cmp
adc
jle
adc
cmpl
rep
xor
mov
sbb
lahf
add
and
push
jecxz
fidivs
fwait
and
jo
outsl
sbb
jg
icebp
lcall
xor
mov
cmpsb
enter
dec
popf
cmp
or
xlat
mov
aaa
fistpll
fwait
jp
dec
pushl
add
cld
loop,pt
mov
call
sbb
dec
mov
xchg
mov
xor
or
movsl
adc
call
dec
and
push
sub
lock
lret
arpl
iret
clc
lret
cmp
lock
jecxz
sbb
and
jmp
lea
push
ja
jns
adc
test
mov
decl
fcomps
mov
jmp
lods
xor
mov
push
jnp
pop
pop
cs
ret
mov
xor
cmpsl
inc
clc
push
add
add
mov
jo
adc
decl
dec
test
cmpb
mov
mull
push
pop
xchg
mov
inc
ljmp
push
pop
add
lock
in
popf
lods
dec
mov
xchg
sub
cmp
add
mov
incl
pop
movsb
sbb
cmp
dec
mov
jb
jo
je
sbb
jns
jg
jmp
push
jbe
cmovo
push
lret
je
jbe
into
pusha
mov
out
cli
jmp
push
or
jb
je
add
cmc
sbb
cld
fistl
call
repnz
lock
xchg
cmpsl
cmp
pop
cmp
mov
hlt
push
xor
pop
in
cld
cld
and
cmpsb
mov
xor
outsl
and
pop
xor
repz
loopne
popl
icebp
call
std
ljmp
pusha
adc
in
imul
mov
notl
fdivr
jne
imul
les
test
cmp
sub
mov
mov
test
adc
dec
or
into
enter
jg
ljmp
push
cld
dec
sbb
push
push
faddl
out
mov
cmpsb
in
jg
enter
in
jmp
shlb
ljmp
xor
jb
xor
xor
shlb
pushl
cmp
pop
jl
or
push
in
outsb
repnz
dec
cmp
pushl
mov
pusha
data16
mov
dec
sub
xchg
adc
xor
sbb
cli
push
pop
xchg
cmp
icebp
mov
cmp
incl
clc
and
mov
mov
jl
aam
or
fcompl
add
xor
adc
and
decl
adc
xchg
mov
mov
adc
in
or
push
and
add
pop
lcall
pop
push
xchg
push
or
leave
icebp
xor
or
bound
loope
cmp
push
and
fs
cmpsb
pusha
lods
xchg
les
pop
out
roll
mov
clc
pop
fidivrl
mov
fiadds
pop
pop
loopne
call
mov
mov
mov
cli
addl
pop
xor
sti
push
push
dec
jmp
mov
jl
movsl
fidivl
orb
sbbl
pop
std
sti
cmpsl
add
sbb
enter
int
add
mov
adc
aas
push
je
movsb
imul
ja
incl
js
cmc
or
mov
in
insl
cmp
sbb
pushf
push
push
push
jmp
pusha
repz
daa
dec
sahf
mov
pop
popf
push
sub
nop
shll
jmp
sub
test
in
hlt
shrl
add
mov
push
lcall
ret
ljmp
arpl
das
inc
or
and
std
dec
out
inc
cltd
push
jne
ljmp
stos
mov
mov
out
pop
popf
xchg
adc
xor
jae
push
imul
mov
call
movsl
add
inc
cmp
mov
test
or
pushf
decl
xor
or
cmp
fldz
lods
dec
daa
xor
pushf
frstor
fnstenv
imul
mov
jmp
jne
sahf
xchg
leave
lret
mov
dec
ffree
arpl
cmp
cmp
xchg
test
cmp
mov
add
add
gs
xchg
dec
loope
aaa
in
add
test
in
mov
cmp
cmpsb
jo
mov
dec
or
out
aas
incl
daa
xchg
xchg
out
adc
or
pop
dec
adc
sbb
inc
adc
pop
ljmp
push
sbb
out
sbb
and
rcrb
stc
and
sub
push
in
ljmp
clc
out
ja
jno
inc
aad
sti
xor
inc
xchg
xor
push
inc
xchg
push
daa
mov
outsl
decl
or
or
loope
into
pushf
mov
cld
dec
mov
lcall
inc
mov
xchg
adc
push
pop
jmp
push
icebp
stos
xchg
dec
push
sahf
enter
std
push
movsb
dec
leave
jnp
dec
jmp
repnz
shlb
repnz
hlt
push
lds
into
repnz
incl
push
pop
push
fsubr
shlb
sub
cmp
loopne
idivl
iret
xor
cmp
push
adc
enter
repz
call
lcall
sub
and
fsubrl
fstl
mov
mov
sub
jb
fnsave
les
in
pop
hlt
pop
pusha
daa
fs
enter
add
cwtl
mov
cmp
cmp
xchg
lods
mov
in
ljmp
adc
and
pop
daa
daa
mov
fdivs
pop
add
insl
enter
xor
pushl
jae
int
popa
jp
xchg
and
push
jecxz
sbb
xchg
and
or
rol
std
or
dec
lahf
clc
dec
cld
stos
decl
and
data16
xor
sub
ret
loope
xor
cltd
mov
jg
pop
and
int
cmp
jmp
or
and
movsb
cmpsl
bound
and
ljmp
sbb
pop
lret
imul
insb
jno
cmp
icebp
ja
cmp
aas
add
sub
insb
lahf
lret
in
stc
jge
sub
and
cmp
icebp
jl
lret
xchg
mov
test
jb
sub
mov
xchg
ljmp
and
inc
js
xchg
popf
sti
push
js
mov
jne
aas
cltd
movl
hlt
sub
mov
jbe
popf
je
call
xchg
fstpt
jl
pop
mov
add
nop
pxor
aaa
push
cs
jb
mov
int
rcr
addr16
cld
ss
cmp
push
int3
pusha
test
fsubp
cmp
and
push
pop
mov
inc
sbb
mov
cmpl
pusha
mov
dec
sub
push
scas
sub
icebp
push
jg
dec
cmp
xchg
hlt
lret
or
xchg
cmp
mov
lock
sbb
xchg
jbe
movsb
xchg
sub
dec
in
rorb
adc
pushf
test
cmpsb
in
es
push
adc
pop
jg
hlt
lock
mov
jb
repnz
int
jmp
out
cmp
push
mov
jo
in
cwtl
in
nop
pushw
in
decb
add
es
repnz
add
pop
nop
jns
mov
xchg
pop
jge
negb
cli
push
fistps
sbb
lock
data16
in
mov
pushf
xchg
or
fcoml
cwtl
xor
iret
jnp
cltd
sbbb
ja
or
das
push
mov
pushf
mov
leave
jmp
ljmp
pushf
mov
fsubrl
inc
mov
mov
dec
repz
decl
in
xorb
mov
mov
movsb
mov
inc
xlat
cmp
fnstsw
mov
clc
sub
mov
out
cmpsb
lods
fs
add
pushf
rolb
in
outsl
mov
cmp
dec
xor
leave
sbb
stos
push
and
or
insb
cmp
ljmp
mov
addl
stc
jno
hlt
das
scas
xchg
or
mov
in
inc
xlat
mov
inc
insl
in
jle
mov
enter
divl
das
aam
imul
fidivs
and
mov
out
xor
incl
pop
mov
mov
mov
mov
mov
lds
call
fsubrl
test
xchg
ret
daa
xchg
pop
mov
jecxz
push
inc
jb
sub
repz
cmpb
daa
mov
push
add
das
xchg
test
dec
outsb
lea
shll
ret
out
stos
sahf
pushf
int3
sahf
inc
fwait
cmc
ret
pop
ljmp
xor
push
lds
inc
adc
push
xor
pop
mov
lea
outsb
pop
incl
cwtl
enter
lcall
pushl
dec
dec
inc
jmp
mov
gs
nop
insl
jne
mov
lods
ljmp
outsl
xchg
movsb
mov
outsl
pop
adc
aas
mov
cmp
pusha
movsb
mov
out
lcall
xchg
jb
push
push
roll
cwtl
adc
mov
dec
push
sti
cmc
add
jecxz
and
push
cmp
in
mov
and
inc
dec
xor
cmp
add
lock
xor
adc
cwtl
push
jns
sub
mov
enter
je
cli
test
mov
add
pop
loop
outsl
movsb
xchg
pop
jnp
dec
lret
decl
incl
repnz
mov
xchg
daa
cmpsb
xchg
mov
xchg
mov
push
pop
xchg
arpl
in
scas
in
rcr
decl
pop
enter
xchg
out
pop
test
mov
call
dec
int
decl
mov
xor
xchg
sub
incl
sbb
pushl
repnz
stc
call
lock
stc
adc
inc
lcall
xchg
sub
push
cld
in
jp
test
xchg
jbe
mov
dec
out
sbb
nop
mov
mov
sarb
add
mov
sub
pop
je
dec
mov
enter
repnz
daa
inc
mov
fildll
push
sub
add
jb
movsb
out
and
outsb
or
or
jb
xor
aam
mov
or
xchg
adcl
sbbl
lods
ljmp
push
in
mov
lret
push
fwait
mov
pop
mov
in
or
jno
cmp
jo
rep
ds
sbb
loopne
or
outsl
push
pop
push
adc
incb
mov
pop
fs
pop
decb
into
nop
xor
js
mov
push
dec
in
cmp
test
jl
in
inc
mov
pop
dec
jb
inc
cmp
xchg
mov
pop
dec
fs
or
push
inc
popa
idiv
aas
mov
mov
xchg
dec
dec
in
lcall
ret
scas
pusha
fxch
negb
adc
shlb
push
outsb
int3
testl
lock
sub
nop
pop
enter
pop
sub
std
pop
xchg
cwtl
testl
mov
dec
out
cwtl
repnz
in
and
es
cmpsb
pusha
negl
xchg
mov
pop
inc
pop
or
dec
adc
xchg
sbb
mov
sbb
enter
outsl
loop
aad
mov
and
mov
lock
dec
sbb
scas
dec
sbb
cltd
fs
imul
jo
and
dec
pushf
icebp
ret
dec
aas
xor
adc
jb
das
adc
xchg
inc
mov
ja
sbb
sti
stc
ja
mov
filds
mov
mul
jb
idivl
mov
mov
insb
idivb
lods
in
js
dec
ja
out
les
lahf
shr
inc
and
lods
jle
ljmp
in
adc
push
jbe
dec
sbb
jne
repnz
or
js
fisttps
fsubs
mov
inc
cs
fiaddl
and
push
jns
cmc
jmp
and
int
cmpsb
loop
cmp
push
scas
out
mov
ljmp
rol
imul
roll
add
nop
movzwl
push
sbb
dec
bound
sub
repnz
std
fistps
shrl
push
adc
mov
aam
rol
ret
cli
jbe
xchg
adc
stos
int3
cmpsb
mov
add
roll
pushf
std
loopne
inc
push
test
or
inc
lret
mov
fs
pushf
mov
push
dec
loope
mov
jle
shll
pusha
dec
add
repnz
loopne
inc
mov
fistl
xchg
xchg
cld
sub
sbb
adc
mov
fwait
add
cmp
inc
test
test
ret
out
mov
adc
mov
outsb
dec
test
paddb
push
mov
mov
dec
dec
and
cmp
sub
cmp
lret
adc
push
and
movsb
sti
outsb
lods
enter
test
movsb
inc
mov
mov
nop
sbb
adc
xor
push
and
into
in
decl
data16
push
cli
call
add
inc
call
mov
decl
shlb
in
push
in
mov
pop
sub
inc
sbb
cs
mov
outsl
cli
or
ror
inc
mov
ljmp
mov
lods
int3
shrb
sti
stos
mov
cwtl
in
mov
ficompl
dec
jge
lea
scas
jb
sbb
mov
jg
aad
push
sub
cmp
pop
ret
xor
ss
fdivrs
pop
mov
adc
inc
sub
and
clc
mov
pop
and
nop
xor
jg
mov
inc
es
pop
pop
loope
jl
adc
negl
and
cs
push
fdiv
xor
call
mov
adc
loop
rcrl
mov
shrb
in
lret
dec
enter
ret
adc
or
inc
enter
push
sub
and
out
pop
or
dec
pop
decl
mov
out
sbbb
or
rorb
mov
imulb
jle
int
pushf
cmp
push
sub
mov
enter
sub
sub
push
pop
dec
push
cmc
dec
lock
lret
hlt
add
repnz
repz
cmc
xchg
pop
cs
jge
jo
jle
stos
cmp
test
lds
lds
dec
inc
xchg
ljmp
add
fdiv
mov
and
push
fisubl
stc
out
dec
or
cli
in
insb
xchg
dec
fs
test
lock
push
xor
cmp
popa
and
or
pop
xor
pmulhuw
cmpsb
call
and
mov
sub
adc
js
push
mov
xor
mov
inc
es
dec
je
add
insl
decb
in
pop
test
dec
loope
xchg
inc
sub
imul
fcomps
in
push
mov
je
lods
jb
pop
cwtl
xchg
push
hlt
cli
mulb
sub
inc
xchg
es
lcall
fbld
fs
cmp
cld
adc
mov
xlat
pop
outsl
pop
push
cltd
mulb
cltd
out
fists
dec
mov
mov
in
out
add
loop
lock
push
in
lock
sub
and
sbb
int3
adc
gs
add
loop
scas
mov
mov
push
mov
push
jl
pushl
inc
mov
cmpl
mov
dec
adc
pushf
inc
jns
aam
shr
rcrb
pop
pop
inc
push
fs
cwtl
aad
loopne
leave
fs
jg
addb
xchg
dec
hlt
out
sub
cwtl
push
outsb
jmp
imul
pop
out
rolb
ret
mov
test
int3
test
jmp
xor
xchg
fistps
mov
pop
jb
movb
adc
jge
or
pop
movsb
in
test
inc
decl
fwait
stc
fwait
cmc
push
nop
movsb
mov
push
out
fldl
test
test
dec
xchg
outsl
mov
cmpsb
in
cld
add
ss
fimuls
jmp
nop
cltd
dec
sub
mov
in
dec
cmp
scas
sub
mov
fsubl
shrl
scas
cmp
cmc
addb
lret
fwait
xchg
and
or
dec
xor
inc
and
jne
mov
in
into
push
cld
pusha
push
xchg
adc
inc
mov
loop
inc
shlb
nop
cli
or
fisubrl
pop
mov
loope,pt
les
jl
adc
mov
sub
jmp
mov
enter
inc
mov
jmp
pop
rclb
mov
lea
rorb
movsb
ss
into
cmp
cwtl
mov
mov
adc
pusha
cwtl
dec
ret
and
jb
or
pop
movsl
dec
sbb
xchg
in
jl
in
inc
int3
sbb
fcom
pusha
add
mov
jno
and
adc
in
jmp
push
test
outsl
push
pop
imul
aaa
testl
mov
in
mov
lock
jb
loope
lcall
cltd
pop
jae
mov
test
push
pushf
cmp
insl
jl
dec
jmp
ljmp
pop
std
push
mov
mov
cs
int
arpl
fdivr
pop
je
lock
cld
jg
decl
into
push
cmpsl
iret
jnp
dec
fisubrl
jp
mov
je
decl
xchg
mov
or
in
in
cmp
sbb
adc
repnz
loope
ss
ljmp
push
filds
xchg
xchg
negl
mov
sahf
mov
ss
decl
dec
sbb
cltd
flds
rolb
addb
push
dec
add
pop
mov
inc
in
inc
scas
add
test
push
js
adc
sub
cld
or
pop
mov
cmpb
mov
daa
sbbl
or
pop
sub
sarb
add
inc
dec
adc
int
add
in
lret
pop
pop
lcall
sbb
adc
or
rorl
sub
repnz
stc
andl
je
ljmp
mov
cmp
ficompl
add
mov
stos
leave
mov
lret
xorb
call
gs
pop
insl
cwtl
lcall
mov
cmp
dec
pop
comiss
in
xor
pop
bound
push
and
mov
xchg
push
out
sti
je
mov
std
lret
sub
jb
setb
rcr
pop
mov
sub
push
fdivs
into
pushl
inc
pop
aad
pop
pop
mov
adc
ss
cli
movsl
mov
xor
call
int3
adc
xchg
sub
mov
jbe
mov
cmpsb
lods
dec
xorps
pop
inc
clc
fbld
pop
adc
pop
sbb
or
inc
mov
roll
ljmp
out
jl
push
sbb
mov
push
push
cmpl
cld
pop
jnp
mov
mov
and
or
nop
push
scas
mov
dec
xlat
push
cmp
xchg
sub
in
pop
mov
mov
cmpsb
sar
mov
aas
adc
xor
jne
rolb
incl
pushf
mov
xor
jo
xchg
or
pusha
pop
or
popf
movsb
push
mov
out
decl
movsb
orb
sub
mov
adc
test
mov
add
push
stos
lds
pop
ja
sub
lods
cld
add
xchg
test
movsb
subl
ret
inc
xchg
inc
cmp
mov
or
add
clc
add
lcall
ja
cmp
dec
cwtl
jno
rcr
cmp
pop
cmp
in
decl
sqrtps
fisttps
mov
pusha
leave
pushf
mov
cltd
push
ljmp
mov
divl
sbb
adc
dec
push
sti
mov
sarb
sti
decl
mov
stos
xor
fstpt
mov
sub
lahf
es
in
push
pop
popf
mov
ljmp
lods
lcall
fimuls
cmp
inc
and
test
pop
clc
adcb
sbb
decl
dec
or
fildll
mov
or
cmp
jns
rorb
and
push
aas
cmp
or
push
or
rorb
jle
dec
ja
pop
jae
adc
stos
cmp
inc
sub
jle
jne
icebp
dec
and
jle
or
call
data16
dec
loop
jne
call
sub
cs
sbb
jge
leave
call
ds
xchg
fadds
and
ljmp
call
lods
hlt
sbb
push
subb
jmp
fs
or
lods
clc
jp
inc
dec
mov
fwait
inc
les
fists
fs
sub
lcall
adc
gs
push
xor
adc
dec
ret
outsb
cltd
add
adc
mov
push
call
or
out
leave
push
cmp
loop
shll
mov
xor
fistpl
add
or
out
push
std
jg
ja
sbb
mov
test
sbb
in
cltd
mov
test
jmp
cltd
and
and
push
stc
and
xchg
push
jns
jne
dec
decl
ds
adc
fmuls
jae
or
into
add
cmp
dec
cli
cs
inc
popa
fisubs
mov
push
nop
das
jo
add
ret
add
xor
ljmp
sub
nop
cmp
mov
pop
mov
sbb
add
and
or
imul
clc
iret
je
push
orb
sub
sbb
fcomip
loop
mov
sub
jmp
jle
movsb
add
xor
lcall
pop
in
sbb
jg
mov
fcoms
or
jmp
std
push
je
push
sub
cmp
loopne
lea
leave
jne,pt
xor
cmp
inc
adc
push
fbld
popa
loopne
pop
roll
xor
add
dec
mov
ljmp
cmpsb
push
mov
and
mov
inc
sbb
or
out
pop
jg
scas
pop
fidivrl
pusha
pop
jb
adc
lret
sahf
decb
push
shr
sar
in
dec
lea
lcall
and
fstpt
ret
dec
pop
mov
lret
cmpsb
std
clc
or
push
xor
les
cmpb
cmp
xchg
jb
mov
mov
fdivr
mov
jbe
jp
inc
movsb
mov
decl
pop
adc
xchg
lcall
dec
add
sbb
mov
mov
fbstp
orl
std
movb
jae
push
cmp
mov
fmull
add
ljmp
imul
inc
inc
mov
mov
push
mov
mov
decl
sub
jmp
mov
add
mov
pop
insl
mov
ds
mov
fwait
push
fs
push
dec
ret
jns
push
stos
in
mov
cmp
xor
or
pushl
cmp
jl
inc
int
jl
jb
mov
or
add
xorb
mov
push
adcl
imul
shlb
popf
out
ja
mov
xchg
mov
stos
insl
xlat
pop
insb
cmp
adc
xchg
pop
xchg
dec
or
pop
add
push
hlt
cld
jo
enter
adc
rorb
insl
xor
add
inc
fildll
jo
push
add
repz
stc
xor
push
repnz
or
add
adc
and
mov
call
pop
mov
jb
add
daa
notb
dec
pop
adc
in
ret
fiadds
pushl
fnstsw
out
ljmp
in
fcos
jg
mov
rorb
pop
jle
pop
or
push
les
sub
clc
fstpt
ljmp
es
cmp
add
push
xchg
mov
xchg
mov
fdiv
or
xchg
imul
int3
push
outsb
inc
push
in
push
jle
mov
sbbl
nop
int3
lods
dec
mov
pushf
dec
loopne
aaa
std
call
es
loop
test
es
jae
testb
mov
jecxz
mov
fstps
inc
adc
pop
scas
lea
hlt
pop
movsb
ljmp
mov
movntq
push
xchg
pop
cmp
scas
pusha
pop
enter
outsl
ljmp
dec
stc
add
adc
push
in
jbe
fs
in
int
incl
js
adc
jbe
pop
rorb
pop
sbb
dec
inc
addr16
cmpsl
out
sub
push
dec
mov
push
cltd
shrl
adc
push
jl
dec
sbb
mov
cld
pop
jb
rclb
lea
ljmp
inc
fcoml
and
add
nop
hlt
add
sbb
lcall
push
push
and
aam
xor
pop
out
aam
addr16
call
outsb
push
lret
int
arpl
insl
and
in
dec
roll
lea
outsb
ljmp
jne
clc
decl
ret
jge
pop
lock
js
std
xchg
shr
jmp
push
pop
sarl
test
ljmp
mov
add
inc
adc
loop
sbb
pusha
and
push
repz
pop
hlt
decl
stc
jg
or
adc
xchg
adc
testb
mov
hlt
mov
xlat
xchg
ljmp
cmp
push
cmp
addl
sub
inc
nop
out
add
sbbb
xor
pop
pop
or
pusha
xor
add
lcall
jp
mov
test
andl
mov
lods
adc
dec
pushl
test
adc
mov
inc
and
inc
lret
and
push
xchg
push
rcrl
xor
jg
shrd
jb
sub
xor
dec
outsb
dec
adc
cwtl
ljmp
xor
sbb
fstp
jno
adc
or
adc
cltd
out
dec
incl
mov
adc
xchg
mov
cmp
inc
lcall
xchg
xchg
in
call
xchg
mov
jg
xchg
push
cmp
jne
mov
cmpsl
imul
inc
xorb
jnp
ljmp
rcrb
daa
mov
cmpsb
push
test
jnp
aam
jbe
out
cmp
decl
out
js
into
jge
mov
pushf
push
sahf
cmp
mov
leave
aaa
cmpl
mov
xchg
xor
test
inc
push
cld
cli
xchg
aam
addr16
cmp
jb
push
dec
in
or
clc
decl
push
push
or
pop
sbb
or
jecxz
pop
and
nop
mov
cmp
aas
pop
mov
xlat
jb
push
cld
ljmp
xchg
test
mov
int3
pushf
add
aam
dec
sbb
ljmp
pushl
mov
mov
cmp
cwtl
and
aaa
or
aas
mov
jle
hlt
mov
dec
jne
and
and
add
cmp
adc
xchg
std
xor
dec
or
fldenv
add
push
or
in
xchg
cmp
and
push
orl
ret
insb
cs
or
sub
ljmp
xchg
nop
jge
inc
xchg
pop
jnp
xchg
xor
push
xchg
and
sbbb
decl
adc
loopne
scas
pop
add
jg
arpl
xchg
shrl
in
fs
in
mov
push
icebp
inc
add
inc
dec
mov
fsubp
xchg
aad
sti
cmp
push
in
cmp
nop
lods
ficoml
xor
lcall
nop
dec
push
or
dec
and
mov
sub
decl
aas
mov
movsl
jo
aaa
adc
ret
pop
cli
sub
outsb
dec
xchg
push
lcall
mov
inc
loopne
das
mov
fstp
shl
xor
sbb
jbe
and
lods
or
push
loop
adc
cld
decl
rol
mov
mov
mov
add
adc
imul
decl
sahf
sub
sbb
mov
push
xchg
imul
imul
jg
in
in
lods
sub
pop
mov
repnz
and
or
sbbl
push
dec
mov
ljmp
pop
mov
jmp
push
negb
inc
pop
dec
shrb
in
cmp
sbb
sahf
mov
and
ret
stos
add
add
repz
lcall
aas
ljmp
xor
xchg
test
add
das
movb
push
jmp
mov
cli
lea
out
adc
or
cmc
mov
ret
decl
cli
push
cld
sub
pop
js
inc
jecxz
inc
ljmp
ficoms
mov
sar
in
mov
ds
je
ret
mov
fisttpl
hlt
enter
gs
xchg
pop
ljmp
push
or
or
and
xor
pop
outsb
sub
aam
push
loope
decl
cmc
aad
pushf
das
push
sahf
inc
and
pop
and
sbb
xchg
inc
cmp
sbb
sub
xchg
iret
jne
xor
mov
sub
call
and
add
add
pop
cltd
adc
mov
sbb
jmp
insl
jle
fldt
dec
js
dec
je
mov
sti
push
jecxz
dec
or
addl
mov
dec
sub
mov
cmc
outsb
adc
push
mov
ljmp
mov
ds
sub
adc
sbb
fldenv
ljmp
sbb
dec
or
hlt
stos
adc
out
dec
hlt
in
add
movsl
jbe
xor
hlt
adc
pushw
stc
jbe
decl
jl
dec
inc
sub
or
add
sbb
jg
push
shlb
movsb
cwtl
or
mov
repz
mov
adcb
dec
lret
subl
or
lcall
popf
mov
cltd
push
push
sbb
sub
add
scas
xor
fildll
jmp
mov
ljmp
ljmp
xor
adc
push
add
jg
imul
inc
sbbb
pop
jg
ljmp
leave
mov
int3
mov
sets
and
addl
mov
xor
shl
pop
cmp
dec
cmpsl
sbbl
or
sbb
mov
push
pop
dec
mov
insb
dec
and
enter
add
mov
jbe
push
js
or
aaa
std
mov
inc
ss
movsb
rorb
les
insb
inc
push
loop
lods
scas
jo
dec
filds
loope
in
xchg
mov
subb
dec
jg
or
ja
or
or
mov
shlb
dec
sbb
xchg
push
loop
in
cli
sar
or
sub
dec
repnz
jae
sub
pop
pop
mov
jne
call
push
xchg
or
sbb
sti
adc
cltd
std
in
sub
dec
lock
xchg
add
dec
cmp
pop
mov
stos
movsl
outsl
mov
jns
xchg
incl
daa
dec
dec
clc
nop
xor
mov
xor
stos
cmp
cmpsb
push
lods
mov
push
sub
pop
lds
enter
xchg
js
push
add
sub
jmp
adc
cwtl
test
cmp
or
dec
cmp
sub
lahf
cmpb
into
push
lret
inc
stc
clc
jae
dec
mov
cmp
ja
sbb
xor
lods
inc
or
push
push
and
lret
xchg
lret
bnd
call
jo
xor
imul
std
les
fdivrs
in
mov
or
push
dec
push
std
push
inc
fdivr
decl
jge
ss
push
dec
lds
push
push
lods
in
mov
ljmp
pop
jle
ds
sub
leave
xlat
mov
push
xor
into
add
and
or
and
xchg
or
arpl
pop
add
sti
inc
test
adc
sub
out
mov
jmp
pop
test
ret
loope
jl
sti
or
sahf
inc
xlat
in
dec
test
ljmp
cs
add
loope
inc
lahf
sbb
sbb
test
dec
jno
clc
std
ljmp
pop
lret
repz
add
mov
out
cmp
stos
mov
jmp
decl
cmp
cmp
in
leave
jae
pop
lea
xchg
sub
sub
dec
jo
lahf
sub
in
cld
push
sub
mov
sbb
pop
dec
cmpsl
xor
pop
push
pop
daa
sarb
decl
sbb
fistpll
xchg
sbbb
xor
dec
mov
sub
xchg
adc
adc
jg
out
inc
scas
adc
push
fildl
jne,pn
mov
mov
cmp
sub
std
lret
ljmp
sub
sbb
inc
jg
or
repnz
call
mov
lea
dec
rorb
dec
mov
shll
inc
in
movsb
cli
inc
jne
sub
decl
cltd
out
mov
jb
mov
add
js
cld
pusha
mov
lret
idiv
ljmp
xlat
flds
mov
sbb
lock
pop
add
and
mov
aad
or
dec
decl
and
cmp
mov
sub
ljmp
adc
fimull
sarl
add
push
cmp
ss
ds
ds
ficoml
stos
cmc
adc
rcll
int
decl
mov
lret
and
ss
add
sub
dec
cmpsb
imul
cld
fsub
insl
fcmovnu
pushf
outsl
in
pop
paddd
mov
xor
or
inc
xchg
lods
sbbw
call
add
movsl
mov
add
and
cmp
dec
bound
sbb
xor
adc
pop
sbb
decl
push
jl
mull
xor
mov
leave
repz
mov
repnz
lret
inc
ljmp
and
pop
dec
push
push
es
cmp
pop
cld
loopne
push
push
adc
ret
sub
std
dec
cmpsb
dec
add
jnp
xor
push
adc
pop
in
inc
lock
popf
es
jo
decl
js
adcb
imul
mov
in
lock
lock
mov
mov
ljmp
add
int3
adc
fadd
imulb
mov
sbb
mov
add
xor
push
fbld
test
jg
add
sbb
xchg
test
fimull
inc
lcall
push
ljmp
ret
inc
outsb
sbb
push
arpl
ss
enter
mov
mov
ds
push
aam
mov
add
dec
shrb
sbb
and
fs
fisttpl
lcall
sbb
xor
xchg
push
or
push
xor
addr16
iret
test
ljmp
cli
dec
in
gs
dec
bound
dec
or
test
fiaddl
adcb
clc
decl
mov
fldt
sbb
jno
cmp
mov
or
add
xor
ljmp
sub
xor
out
mov
loopne
loopne
fs
scas
mov
decl
xchg
cmpb
nop
dec
imul
movsl
and
std
lret
cwtl
cmp
push
jne
in
pop
cwtl
adc
cltd
jmp
jae
sbb
sub
test
imul
or
incb
mov
inc
inc
add
jg
adc
cmpsl
cmp
repnz
iret
mov
add
xchg
mov
or
jo
mov
mov
and
inc
jb
fs
cmp
ljmp
call
test
test
inc
popf
sub
or
ljmp
sub
call
mov
in
lcall
loopne
aas
sbb
rcrb
xor
hlt
ds
sub
sbb
cmpb
das
sbb
jge
loopne
mov
xor
and
dec
jge
adc
cli
or
shll
xlat
add
or
cmovp
ror
cltd
adc
movb
xor
add
test
or
or
lret
jb
sahf
mov
xchg
sti
or
popf
and
out
xlat
xor
decl
scas
push
pop
dec
sti
cmp
stos
pop
movsl
cwtl
rorb
shlb
pop
or
mov
cld
call
adc
dec
and
push
xor
in
pop
jle
pop
call
fsubl
sahf
out
inc
add
sub
negb
sub
aaa
std
push
jmp
daa
dec
fisubs
cs
mov
jge
pop
and
shrb
and
sub
sbb
movsl
and
orl
xor
jns
add
ret
xchg
cld
loope
loopne
jecxz
iret
inc
lea
jns
sub
add
dec
jge
inc
jne
cmp
adc
sbbl
mov
or
pop
jae
leave
push
cli
ja
xor
cld
xor
pushf
push
xchg
fbstp
mov
into
decl
imul
adc
roll
push
jle
xchg
push
xor
mov
pusha
or
dec
ljmp
pusha
jl
sbb
pop
mov
jmp
xchg
jl
or
xor
inc
xor
push
sub
dec
push
push
inc
add
mov
xchg
sti
dec
jmp
shlb
jp
sbb
xor
cmp
and
or
inc
lret
cli
xor
call
cmp
inc
inc
fisttpll
lea
cmp
ret
bswap
ja
xchg
cmp
in
jno
sub
mov
dec
push
add
xor
in
mov
jne
fcoml
js
loop
pop
mov
in
add
mov
cmpsl
roll
and
dec
sub
cmp
push
xor
sbb
mov
cmp
and
fistpl
and
test
and
andl
adc
mov
decl
pop
inc
test
inc
xchg
jmp
mov
shll
mov
insl
mov
cmpl
test
sbb
jmp
cltd
sbb
mov
dec
dec
sub
or
mov
add
jl
sti
add
pushl
addl
jmp
push
ss
in
jle
or
inc
jb
jg
movsw
fidivs
mov
dec
test
and
or
jmp
ljmp
xor
jns
ds
inc
push
cmpsb
clc
jmp
mov
inc
pop
pop
outsb
loopne
mov
vcvtss2si
xor
ja
fmuls
push
push
arpl
jbe
sbb
cltd
mov
icebp
mov
sbb
cld
pop
sar
mov
inc
pop
test
arpl
test
inc
aam
clc
mov
pop
add
in
lcall
testb
lea
pop
and
add
popf
aam
push
adc
ljmp
lret
push
bnd
lea
or
sub
orb
dec
pushl
aas
push
leave
shrb
call
dec
or
add
adc
mov
mov
clc
mov
lcall
or
mov
pop
sbb
rol
jnp
jmp
sbb
inc
cmp
lcall
dec
mov
pop
cmp
pusha
mov
fcompl
cmp
sbb
mov
decl
dec
int3
sub
int3
push
sbb
inc
insl
mov
jb
dec
orb
rorl
aad
int
cmp
cmp
adc
fcoml
lods
mov
mov
inc
jae
jns
adc
dec
insb
int
push
lods
mov
fst
inc
mov
sub
or
or
fidivrl
imul
push
pop
adc
jns
dec
sbb
or
inc
pop
cli
cmpsb
sub
out
and
push
push
imul
push
push
iret
out
je
call
lock
sbb
lahf
je
or
mov
inc
inc
jne
adc
jg
jmp
test
push
push
les
adcl
push
inc
cli
insb
or
or
xorb
dec
daa
sub
loope
pop
inc
and
push
pop
push
xchg
sbb
push
aas
aaa
prefetch
and
pop
mov
xchg
add
add
pusha
xorl
movsl
inc
jbe
sbb
xor
xlat
xchg
idivb
jmp
xor
cmp
sub
and
adc
fbld
mov
test
cmp
push
in
insb
add
add
or
decl
xchg
data16
imul
fdiv
lock
loop
jo
inc
cmp
jno
push
incl
pop
ds
cmp
sub
dec
mov
shlb
add
inc
and
shlb
repnz
and
sbb
adc
mov
push
in
subl
gs
jne
inc
sahf
push
adc
popf
add
mov
push
dec
call
xlat
pop
jg
jmp
push
aas
sub
pop
ja
stos
dec
inc
sahf
popf
add
mov
lock
decb
daa
inc
cmpsb
fs
pusha
and
in
repnz
nop
cmp
cmp
decl
sub
mov
xchg
dec
adc
frstor
push
push
out
jg
adc
jo
jmp
in
rol
mov
cmp
sbb
adc
mov
add
pop
adc
adc
jmp
ret
adc
fstl
sub
daa
jp
push
testb
shll
adc
filds
push
or
ficomps
mov
lcall
cmp
fiaddl
aas
adc
test
testb
inc
add
xor
pushl
jle
loop
ficoms
out
add
jnp
repz
out
push
xchg
mov
lods
iret
cmp
daa
mov
push
lret
mov
or
adc
clc
jg
out
or
jle
pusha
fbld
movsl
ret
jg
in
or
lret
les
xor
mov
es
loopne
les
decl
xchg
inc
fnop
cs
adc
jl
cs
sbb
or
pop
in
mov
ljmp
fists
push
movsl
and
mov
add
pop
js
sub
push
add
dec
pushl
lcall
adc
mov
je
mov
rcll
jle
data16
call
cld
addb
fistps
dec
sub
mov
dec
sub
cmpsl
in
mov
jp
sbb
std
sbb
fidivrl
or
stos
adc
sbb
adc
inc
data16
xlat
pushl
mov
jg
jg
divl
sub
dec
cmp
or
xchg
push
aam
inc
mov
in
repz
mov
dec
lea
testl
je
push
push
mull
mov
dec
clc
mov
xchg
adc
lock
mov
jle
pop
dec
bound
dec
push
nop
aad
adc
pushl
in
daa
dec
int
sbb
rolb
in
push
insl
xorb
dec
repz
movsb
pusha
xchg
ljmp
rorb
bound
je
in
sbbl
mov
ljmp
scas
mov
pop
push
jo
or
mov
sbb
jae
mov
outsb
in
xor
jne
ljmp
sbb
sbb
sub
test
into
jmp
inc
xlat
arpl
dec
cs
lock
sub
lret
sbb
jae
sub
or
je
ficompl
leave
jmp
adc
add
add
std
sub
cmp
or
and
ds
add
fnstcw
jne
fcoms
push
push
hlt
or
call
push
jnp
imul
xchg
and
dec
in
jno
sub
lret
ljmp
push
movsb
bound
pop
mov
mov
mov
bound
decl
dec
add
sub
add
inc
dec
mov
and
fwait
add
bound
xor
xchg
in
fcoms
je
rorb
cltd
push
jo
lods
out
push
push
mov
mov
mov
dec
adc
cmc
push
push
inc
xchg
ret
or
push
jae
xchg
jne
aam
push
pop
lcall
mov
mov
sbbb
and
aas
jns
inc
dec
inc
sub
in
dec
jne
adc
loopne
sub
lock
sbb
sbb
adc
aas
repnz
push
js
decl
inc
ja
push
lds
xchg
lret
adc
fistpl
sub
jg
filds
pop
cmpsb
movsb
mov
out
mov
xorps
cmp
inc
mov
psubusb
pop
lret
jne
icebp
mov
cmp
seta
or
or
fisttps
add
mov
dec
mov
and
xor
cmp
jmp
ljmp
dec
sarb
pop
push
jge
mov
adc
hlt
and
fdivrp
das
shlb
ror
in
pop
cli
add
movb
xchg
lds
ret
ljmp
ret
xchg
push
sbbb
out
bswap
mov
mov
push
fsubr
xchg
adc
lods
add
adc
rclb
adc
xchg
adc
and
sbb
dec
ja,pt
out
dec
push
mov
xchg
and
nop
shll
and
mov
xchg
dec
out
xor
pushl
and
ss
inc
mov
cmp
pop
adc
sahf
ja
mov
mov
inc
inc
daa
loop
xor
cs
test
jb
hlt
and
sti
in
fisubrs
or
scas
nop
ja
mov
insb
and
jmp
lcall
sbb
loop
enter
out
push
push
add
jp
push
insl
loopne
add
or
xchg
jns
adc
add
xorb
fisubl
gs
inc
xor
add
loopne
jp
push
adc
hlt
push
fldt
lds
in
xchg
mov
loop
add
jne
ljmp
test
mov
cmpsb
mov
int
dec
orb
movsl
les
inc
jp
incl
xlat
into
idivb
sbb
inc
adc
push
push
and
pop
daa
inc
dec
imul
sbb
dec
ss
ret
out
push
cmc
inc
mov
sbb
dec
pop
jae
mov
je
push
rol
dec
add
ljmp
adc
cmovs
or
int3
push
ljmp
xchg
mov
lea
inc
xchg
aam
test
mov
and
call
pop
xchg
inc
lea
adc
and
lods
xchg
mov
or
rclb
and
std
push
mov
xor
test
or
lss
lcall
cld
out
add
cmpl
mov
faddl
pushl
rclb
arpl
sti
cmp
pop
xchg
pop
push
add
mov
pop
push
cmp
push
fsts
sahf
daa
das
pop
mov
jmp
jae
jo
lods
js
jge
inc
inc
sub
das
in
pop
adc
mov
call
call
mov
insb
sarl
mov
add
mov
lea
fisttps
cmpsb
xor
stos
call
sub
nop
les
ljmp
andl
inc
std
cmpb
ds
or
sar
call
dec
pushf
cli
inc
jns
mov
mov
insl
out
in
and
jae
repz
fbstp
mov
ja
leave
mov
lods
inc
and
xchg
out
cli
aas
cmc
push
sbbb
jmp
aas
pushf
dec
stos
push
sub
ljmp
or
loope
pop
xchg
cmp
cli
inc
out
mov
sub
dec
lcall
lods
loop
shlb
mov
xor
scas
jne
sti
pop
dec
in
push
dec
sub
lcall
daa
out
hlt
jno
adc
pop
add
or
jmp
imul
sbb
sti
fmull
nop
xor
dec
adc
in
cmp
mov
ret
push
mov
inc
cwtl
mov
in
pushl
mov
pop
mov
cltd
mov
negb
ljmp
sub
jle
loope
sbb
push
and
in
xchg
mov
jecxz
lea
cld
filds
pushf
in
jg
lods
push
notb
sub
lcall
mov
incb
not
add
lret
inc
lods
or
je
decl
adc
mov
push
mov
lods
cmp
lret
mov
jns
aas
out
push
add
mov
std
push
jge
fstpt
push
push
fnstenv
shlb
cltd
movsb
test
decl
mov
sbb
jo
fildl
fwait
shlb
lods
push
or
jbe
or
mov
cmc
lcall
fdiv
jbe
xchg
lahf
pop
xor
repz
daa
dec
mov
sub
pop
sbb
inc
imul
mov
js
pop
xor
fidivl
add
ljmp
sbb
gs
add
adc
gs
pop
shlb
dec
decl
les
push
mov
and
sahf
xor
in
aaa
clc
dec
jno
xchg
inc
and
jl
ljmp
incl
je
and
inc
lea
add
mov
mov
pop
scas
clc
mov
push
mov
jno
sbb
dec
sbb
movsb
and
loopne
mov
enter
aas
ljmp
adc
popf
dec
inc
pushf
xchg
or
dec
call
int
sahf
decl
addr16
ret
inc
cmp
out
jae
pusha
femms
test
lret
inc
push
add
mov
inc
pusha
add
xchg
fsub
inc
inc
sbb
fldt
jae
xor
push
or
sub
pushf
push
pop
push
lods
ljmp
je
xchg
xor
mov
pop
jno
lods
in
loopne
outsl
les
rol
xor
cld
les
nop
mov
or
cmp
xchg
xchg
cwtl
inc
in
shrl
mov
ljmp
lock
outsl
xor
insl
inc
rolb
dec
mov
mov
rclb
cmp
jmp
dec
add
lahf
sub
int
enter
and
pushf
xor
inc
ljmp
jg
dec
lods
rclb
inc
mov
pop
push
lea
jg
std
subl
adc
cli
ja
xchg
pop
aam
jmp
cmp
xor
jecxz
jp
xor
cmp
cmpsl
mov
js
pop
xor
insb
xlat
popa
sub
popf
aaa
cmp
adc
xor
sarb
jmp
jae
or
nop
ljmp
adc
inc
clc
inc
push
or
sbb
add
out
pop
mov
subb
adc
dec
incl
jo
push
fnstcw
fidivrl
sbb
movsl
jno
pop
sar
fst
adc
xchg
and
mov
push
sbb
mov
jne
cmp
jg
xor
test
rcll
movsb
loope
add
xorb
daa
stc
cmp
std
int
mov
mov
hlt
mov
inc
or
add
pop
cltd
sub
add
decl
inc
adc
or
inc
cmp
loop
add
jne
jmp
arpl
pop
or
sub
xor
add
inc
rcll
push
inc
sbb
or
inc
loop
dec
gs
lea
ja,pn
leave
cmp
sub
sbb
add
sbb
int
insb
cmpsb
leave
incl
inc
add
mov
fiadds
add
leave
dec
pop
add
jle
incl
or
movsl
incl
bound
pop
xor
in
mov
pop
and
je
insb
fdiv
ljmp
adcb
jg
into
inc
or
dec
lock
dec
lahf
mov
pushf
addr16
mov
push
stc
and
pop
ljmp
sub
xchg
fistpl
fnstenv
add
fmul
popf
and
mov
fucomi
mov
ljmp
lcall
push
fwait
mov
and
inc
push
outsb
push
mov
ss
aaa
in
fs
add
or
rcrl
movsl
int
rolb
dec
cmp
add
shr
fnstcw
decl
sub
mov
fsub
lds
lahf
ret
dec
fistps
push
xor
pop
mov
jno
mov
subl
stc
mov
es
rcll
cmp
adc
test
decl
scas
iret
ja
or
adc
and
add
push
or
push
xor
test
dec
push
push
mov
pop
cmp
ljmp
mov
sub
jae
out
cli
incl
mov
data16
push
push
rorl
fsubs
mov
lcall
out
icebp
aaa
mov
je
mov
pusha
push
pop
cld
jmp
ljmp
mov
decl
insb
adc
push
inc
lcall
stos
push
ja
xchg
imul
data16
mov
lcall
mov
jle
add
or
gs
lods
adc
out
push
sub
push
jg
xor
xchg
jmp
in
push
and
pop
cltd
add
mov
jg
dec
shll
cvttps2pi
cmp
pushl
mov
out
jp
jne
movsb
jns
sbb
imul
mov
mov
mov
dec
xchg
cmp
or
push
dec
fstpl
jmp
call
call
mov
or
pop
sbb
mov
ret
clc
and
nop
push
add
mov
mov
jge
ljmp
cmp
add
xchg
adc
push
dec
dec
push
pop
loopne
incl
mov
int3
lret
ja
xchg
or
arpl
push
adc
mov
hlt
out
cli
lcall
mov
sbb
aam
sub
xchg
jge
inc
push
test
call
mov
xchg
xchg
scas
xchg
outsb
rorl
test
mov
xor
cld
mov
xlat
lcall
pop
add
filds
or
add
adc
add
mov
cmp
mov
test
dec
cli
adcl
fcompl
cmp
and
cmp
bnd
call
jecxz
or
nop
push
das
jno
add
hlt
push
push
add
dec
ss
pushl
cs
sahf
mov
ret
stc
call
cmp
lock
cli
nop
stos
loopne
test
lcall
out
lea
dec
push
mov
es
rorb
in
mov
loopne
add
jle
push
sbb
or
cltd
add
mov
add
mov
in
xlat
xchg
dec
xor
rcll
mov
mov
outsb
pop
adc
inc
mov
xadd
hlt
loopne
fcomp
and
rclb
data16
dec
scas
stos
cmp
push
dec
test
dec
dec
add
xchg
mov
mov
push
in
cli
push
mov
jge
xchg
or
cmp
cltd
in
lock
sub
loopne
sti
idiv
xchg
jge
add
ret
and
mov
rclb
js
jge
pop
add
or
add
add
mov
push
outsb
lock
popa
push
adc
pop
ror
sbb
cwtl
les
stos
hlt
pop
mov
pushl
je,pt
clc
mov
mov
add
inc
arpl
aad
xor
addr16
dec
lret
sub
fucomp
add
lahf
mov
test
and
inc
jl
aad
ja
mov
sti
pushl
lea
and
ficoms
cwtl
add
or
or
mov
inc
cmp
xchg
incl
inc
jmp
xchg
or
test
jno
jo
out
in
in
pop
aam
jl
pushl
movsl
mov
jge
out
out
popa
roll
cli
lock
aaa
cmp
loop
pushl
push
mov
pop
pop
adc
mov
sbb
insl
add
sti
out
int
push
fmuls
lcall
out
jb
and
fcoml
lcall
pop
lods
xor
imul
nop
aas
inc
sub
xchg
into
inc
popa
or
filds
test
mov
add
jb
insb
sub
push
or
mov
je
pop
cmp
mov
or
xor
in
nop
in
ljmp
sub
add
ljmp
push
adc
es
scas
clc
outsl
incl
add
dec
mov
repz
pop
jge
cli
jg
add
mov
mov
add
cld
xchg
scas
arpl
or
push
or
push
jge
pushl
lahf
push
jae
dec
andb
fcmovnu
add
cmp
pop
decl
mov
cwtd
pop
lahf
lret
enter
or
push
push
dec
call
lret
mov
pop
cmpb
clc
or
fmull
mov
push
or
mov
popf
insb
fstpl
aam
sar
aam
or
add
ret
ljmp
scas
ffree
in
enter
or
or
out
jle
out
js
incl
push
mov
push
out
sbb
mov
or
mov
mov
xchg
mov
cmp
and
out
push
adc
dec
mov
decl
push
or
and
cmp
or
jo
lods
sbb
xlat
or
ljmp
ljmp
jmp
or
sub
or
inc
out
loopne
shll
outsb
sub
decl
lcall
cmc
ret
sbb
or
sub
pop
or
movsl
nop
mov
push
pop
xchg
ljmp
fsts
push
test
mov
loopne
dec
aas
out
jecxz
adc
enter
ja
mov
jg
inc
incl
repnz
dec
daa
jbe
scas
pop
adc
or
pop
cld
xchg
aaa
xor
cwtl
mov
scas
clc
int
std
mov
xchg
mov
fwait
cld
mov
adc
mov
jbe
mov
incl
lret
xlat
inc
cld
lea
std
dec
push
sar
mov
jns
adc
pusha
mov
std
es
xor
int
addb
in
ja
sbb
mov
mov
or
test
jno
es
adc
or
pushl
lret
dec
dec
xchg
xchg
jg
aam
xchg
dec
nop
icebp
add
sub
std
or
ljmp
inc
dec
sbb
movsb
jns
adc
sub
imul
xor
lret
inc
inc
cld
sbb
cmp
das
sbb
sub
clc
and
and
jbe
stos
sub
jbe
pop
or
adc
jp
or
ljmp
add
xchg
and
sbb
andl
fldt
mov
inc
push
push
ret
xchg
xchg
pop
dec
in
out
popa
mov
pop
aaa
dec
sbb
dec
mov
roll
sub
ljmp
inc
cmp
pop
add
movsl
push
sub
popa
sub
mov
xor
inc
or
xorb
repnz
mov
push
mov
or
xchg
push
faddl
icebp
jge
cli
xchg
cmp
adc
mov
inc
movsb
in
adcb
dec
sbb
sbb
jge
cmp
in
loop
jnp
fdiv
xor
add
push
push
fcomp
jb
shl
mov
idiv
ljmp
lcall
mov
jmp
sub
jo
arpl
push
shl
leave
and
out
loop
fisubrs
push
mov
decl
cltd
inc
or
divb
je
loopne
add
imul
movsb
sub
ljmp
xor
nop
fsub
xor
add
dec
ds
xor
mov
fsts
jg
dec
mov
stos
inc
mov
and
and
shr
mov
xchg
into
xor
or
decl
sub
push
pusha
and
mov
sbb
mov
imul
xchg
pop
mov
mov
sbb
jb
inc
faddl
jle
es
repz
dec
jecxz
sub
add
push
andl
adc
loopne
sbb
decl
cs
add
jb
ljmp
or
mov
inc
add
es
dec
repnz
es
jnp
lcall
stc
arpl
ljmp
in
push
xor
xchg
xchg
lea
lods
push
lea
mov
xchg
lea
jb
pop
adc
decl
lcall
dec
cmpl
in
inc
cmp
mov
sbb
insb
push
dec
ljmp
jns
sub
test
cwtl
rolb
inc
xor
sar
decl
add
jl
mov
ret
cmpb
jo
push
mov
test
push
inc
lahf
call
call
jl
iret
push
mov
test
jge
or
dec
dec
mov
pop
push
clc
loop
cs
mov
sahf
ret
imul
jecxz
jae
js
push
in
ror
add
clc
cld
movsl
outsl
push
lret
and
mov
xor
inc
pop
inc
adc
push
cmp
pop
add
pop
mov
data16
clc
cmc
and
fbld
cmp
inc
inc
jle
jbe
add
pushl
or
loope
outsb
push
clc
xor
scas
inc
mov
fstpl
mov
ljmp
cli
call
adc
push
icebp
dec
add
dec
mov
idivb
xchg
ljmp
fdivp
fisubl
enter
vmovq
adc
dec
dec
add
js
mov
ljmp
push
xor
sbb
sbb
stos
push
push
or
in
loope
je
jl
mov
jle
push
adc
movzbl
sbb
adcl
into
insb
ret
adc
or
decl
and
xchg
add
mov
add
shlb
sub
mov
lret
movaps
lcall
adc
xor
xorl
push
sbb
repnz
icebp
pop
mov
jl
xchg
fbld
lcall
subb
or
push
add
sbb
mov
xor
pop
sub
or
in
jmp
movsl
push
jl
sbb
adc
sbb
fdivrl
xchg
sbb
or
xchg
insb
inc
jg
adc
scas
pop
dec
aaa
icebp
fs
xchg
pop
xchg
dec
inc
sar
incl
outsb
jl
xchg
sbb
mov
subb
xchg
nop
mov
test
loopne
jl
sub
sub
insl
inc
add
mov
pop
pop
add
mov
aam
sbb
xlat
or
push
sub
sub
decl
pusha
mov
jl
xor
pusha
dec
adc
aaa
mov
add
int
ljmp
push
pop
xor
add
dec
mov
enter
mov
int3
inc
xchg
lods
cld
fsubrl
scas
adc
mov
incl
insl
mov
xchg
push
dec
or
xchg
and
add
push
push
sub
push
test
cmp
fdivl
xor
repz
pop
mov
lds
push
jns
call
cmp
jmp
xchg
cld
mov
add
enter
add
jae
sub
fcomip
sub
mov
pop
or
jae
cld
fs
cmp
sbb
pop
and
xchg
xchg
pop
aam
mov
test
push
xor
xchg
in
xor
or
cmpsb
jg
jmp
push
sbb
repz
adc
das
inc
xchg
test
add
inc
daa
mov
popf
cld
mov
call
sahf
mov
jg
xor
mov
push
and
test
dec
mov
filds
push
lret
in
je
dec
or
pop
mov
mov
mov
mov
mov
cmp
inc
test
lock
mov
popf
inc
ss
icebp
inc
dec
lock
xlat
mov
ret
and
lcall
test
mov
pop
fldcw
in
cmpsl
ret
xor
add
sub
and
sub
xor
out
in
adc
xchg
and
lea
jecxz
or
aam
ss
mov
and
jno
inc
cmp
xor
push
jle
or
call
dec
xor
pop
rolb
mov
pop
mov
scas
add
fisttps
sbb
push
inc
out
es
pop
adc
mov
pop
cli
insl
loopne
je
ss
inc
aaa
adc
lret
call
adc
or
adc
jg
test
mov
popa
aad
fmull
sub
insl
dec
add
pop
inc
jmp
aas
mov
mov
jbe
sbb
inc
negb
sub
out
mov
push
sbb
std
jmp
pop
add
fsts
push
dec
decb
ljmp
sub
dec
inc
popa
bound
movsl
add
aam
add
sti
mov
xchg
dec
div
jbe
daa
call
rorl
push
inc
je
lock
lods
sub
neg
loope
in
add
push
mov
push
aam
push
addl
fwait
pop
in
mov
push
das
pusha
loopne
ret
lret
jae
pop
cs
sbb
push
std
mov
adcb
mov
push
jmp
jp
mov
orb
ret
jno
xor
add
mov
cmp
push
adc
add
pushf
cwtl
sar
incl
in
inc
jmpw
or
cs
jmp
add
xchg
sbb
sbb
jl
ljmp
dec
sbb
out
pop
mov
call
inc
mov
mov
mov
adc
jg
decl
or
xor
sbb
inc
and
test
pop
adc
push
jmp
pop
popf
mov
pop
mov
dec
call
stos
xchg
mov
insl
push
mov
lret
adc
sbb
inc
nop
jecxz
xor
orb
adc
push
push
or
sub
mov
push
adc
rolb
and
inc
xchg
sbb
test
adc
mov
loopne
xor
enter
cld
mov
shrb
push
mov
lcall
push
ficoms
movsb
mov
cmp
xchg
add
pop
les
call
cmp
mov
je
sub
jbe
push
jp
faddl
iret
and
jg
incl
clc
imul
xchg
js
shrl
sub
aas
shll
lcall
test
icebp
push
out
pusha
sub
adc
loop
mov
movsb
decl
adc
in
mov
inc
add
sbb
sbb
imul
lods
and
fmuls
fimull
mov
adc
cmpsb
pop
icebp
jmp
les
test
mov
stc
fdivr
jmp
shll
xchg
sbb
stos
test
insl
bound
leave
jp
lcall
mov
insl
add
lds
cmpsb
sub
sub
pop
mov
ljmp
sub
sbb
mov
mov
cmp
jne
roll
stos
jnp
add
out
fisttpll
data16
dec
add
cmpsb
pop
int3
dec
sub
mov
push
leave
inc
rcll
decl
rorb
test
mov
cmpl
mov
scas
mov
sbb
pop
pop
decl
shl
adcl
iret
mov
or
test
sub
jno
imul
mov
jno
notb
mov
cld
xchg
pusha
and
inc
push
push
ljmp
jmp
or
rcll
xchg
jne
pop
aam
subl
cmpsl
xchg
lods
icebp
icebp
sbb
push
mov
incl
sub
push
pop
mov
adc
push
add
add
lds
push
cmp
push
mov
mov
jg
leave
ds
fucomp
mov
cmp
jne
test
pusha
mov
dec
das
shr
adc
sbb
testl
push
inc
inc
or
adc
xchg
jg
jp
aad
inc
xchg
sbb
push
push
inc
mov
cmp
push
jg
lret
ss
pushl
lahf
xchg
loope
and
cmp
adc
mov
fadd
mov
pusha
mov
mov
cs
mov
sbb
in
or
dec
pop
xor
pop
ret
enter
and
adc
adc
push
cld
inc
mov
pop
mov
mov
mov
fwait
pop
sahf
add
mov
or
pop
sbb
push
pushf
mov
mov
xor
mov
push
dec
pushl
pop
out
push
xchg
ret
mov
pop
or
int3
sub
test
ljmp
lock
xchg
add
shlb
jl
outsb
xor
enter
mov
lcall
ljmp
in
sbb
xor
test
mov
decl
call
andb
push
jp
addl
in
sub
jae
repnz
sbb
clc
dec
pop
and
push
add
mov
mov
subl
cld
mov
and
jmp
and
cmp
out
pop
xchg
adc
push
jne
pop
aas
dec
addl
or
inc
mov
mov
mov
pop
jp
lea
lea
inc
decl
enter
xrelease
and
cmp
dec
inc
adc
dec
or
jmp
mov
pop
nop
xlat
fiadds
cmc
lods
or
leave
mov
add
mov
arpl
decl
mov
and
or
jg
ja
fwait
jp
scas
test
test
leave
mov
mov
sub
loope
jecxz
dec
sti
in
mov
push
fmulp
cmc
and
xor
cmp
ret
pop
pop
jne
rcrb
mov
dec
cld
out
add
mov
dec
xor
in
les
aas
push
test
xor
push
xchg
inc
adc
adc
sahf
push
push
cmp
mov
adc
loope
rorb
lcall
inc
adc
sub
sub
cwtl
cwtl
push
adc
and
cmp
jnp
cmp
aas
add
jg
push
lock
jo
add
sbb
push
sub
inc
ja
js
xor
decl
inc
lret
ret
fs
aas
movzwl
inc
nop
shlb
sub
and
je
cmp
mov
push
call
loope
sbb
push
mov
shl
fwait
ljmp
leave
je
mov
pop
fwait
je
call
call
pop
inc
pushl
std
inc
inc
sbb
hlt
jp
or
fldenv
ret
xchg
mov
nop
cwtl
pop
out
stos
clc
call
sub
cmpsb
fistl
or
push
pop
lods
and
jmp
out
xchg
or
icebp
xchg
xorl
lcall
or
insl
push
cltd
add
add
enter
std
pop
lcall
incl
decl
sub
mov
mov
cmp
inc
or
mov
test
jle
in
adc
xor
add
test
out
mov
int3
mov
adc
push
fcos
decl
mov
jl
loop
or
mov
mov
cs
inc
test
pop
and
push
jb
mov
aam
sub
call
cmp
xchg
mov
mov
stc
xchg
aam
lods
cmpsb
push
outsb
js
push
movsl
cwtl
inc
movsb
fbstp
pcmpgtw
add
fistpl
inc
or
jg
orl
or
lock
movsb
les
inc
orb
jg
pop
stos
xchg
test
add
adc
dec
mov
lcall
inc
aaa
popl
sbb
fldenv
jno
jo
enter
mov
ljmp
inc
or
test
idivl
push
push
dec
cmp
icebp
popa
inc
xor
cmp
popa
mov
rorl
clc
lret
mov
push
sbb
out
pop
aaa
and
pop
mov
xor
lcall
jl
popa
loop
aas
mov
pop
lahf
mov
adc
or
mov
shrl
call
push
adc
lcall
mov
pop
add
push
rcl
fimuls
lcall
mov
xor
xorl
mov
push
sarb
mov
decl
jmp
sub
jmp
inc
xor
cmp
sbb
into
pop
dec
cmp
decl
sbb
je
fs
sub
jl
or
das
rolb
cwtl
clc
jg
cmp
dec
jns
orl
cmp
ljmp
dec
pusha
scas
xor
js
imul
adc
sub
inc
jbe
movsl
add
shlb
and
sbb
mov
xor
dec
incl
lret
add
test
outsb
inc
andl
cmpsl
jle
sub
dec
add
popf
dec
cmp
ljmp
cmp
mov
lahf
add
out
xchg
icebp
ss
jmp
lock
mov
testl
lret
or
mov
call
and
imul
pop
add
addb
sahf
inc
xchg
xor
out
pop
adc
test
cld
decl
jle
cmp
movsb
add
out
sti
cmp
sti
push
mov
adc
fstps
adc
incl
lock
mov
or
in
pop
jge
ds
sbb
lods
inc
or
or
pop
jns
test
mov
rorl
in
fcoms
in
dec
lods
fidivl
insb
mov
daa
sbb
lds
mov
jo
test
jae
scas
cli
std
or
xchg
sarl
mov
lret
popf
inc
xor
das
sahf
jl
loope
pop
or
push
cld
inc
repz
mov
pop
cmp
out
adc
jo
mov
loop
fisubs
test
shl
test
jo
pop
cs
stos
jle
pop
add
insl
incl
fs
inc
fwait
pop
dec
mov
lods
inc
enter
arpl
push
nop
lcall
out
or
cmc
pop
and
push
adc
xchg
stos
adc
shrb
ret
xchg
jne
loop
mov
or
pop
add
cmp
add
insb
jmp
in
mov
dec
ud2
idiv
fwait
pop
out
xchg
rcrb
insb
std
icebp
cmp
test
loop
fidivl
adc
xor
add
add
xor
jmp
adc
or
pop
jne
add
scas
loop
inc
rolb
jg
fdivp
jo
xchg
stos
add
aas
addl
jmp
and
cmp
sub
stc
clc
xor
mov
adc
push
mov
dec
ds
incl
push
stc
outsl
add
cmp
fdivrs
add
dec
or
dec
fsubrl
pop
sub
psllq
andl
dec
decl
cmp
insl
shrl
insl
std
sbb
in
mov
xor
cmp
push
jno
xchg
in
jmp
popf
jne
aad
mov
cltd
inc
repnz
bound
fdivrs
lods
mov
ljmp
aam
xchg
js
popa
sbb
pop
xchg
cmc
aas
mov
mov
jle
jle
mov
mov
cli
cmp
faddl
sbb
in
jp
jo
and
lcall
cmpsb
add
or
ljmp
and
adc
mov
hlt
clc
add
jmp
mov
cmp
jle
xchg
xor
mov
setae
xchg
add
int3
jecxz
test
shrb
je
ljmp
movsb
mov
idiv
and
pop
mov
push
jle
repz
lock
push
data16
xor
hlt
inc
cwtl
rorl
or
cmpsb
inc
sbb
or
shr
mov
pop
ss
pop
lahf
jmp
fisubs
jno
decl
lods
je
jmp
fdivrl
negl
adc
mov
sub
sub
aaa
lcall
pop
mov
cs
cmp
jge
sbb
ffree
mov
adc
or
xchg
cmp
inc
jnp
xor
lods
jo
jne
pusha
xorb
add
cltd
push
mov
push
popa
push
cmp
add
push
jb
inc
incl
inc
cmpsb
loopne
push
pop
add
mov
rorb
in
jle
cwtl
mov
daa
push
push
push
mov
incl
sub
pop
jno
in
cli
cmc
call
cmc
sbb
mov
call
nop
lret
mov
pop
nop
xchg
add
cmp
cmpsl
repz
and
pop
jg
sbb
decl
push
xchg
into
in
push
out
jg
inc
push
mov
nop
dec
push
inc
data16
dec
incl
jp
or
xchg
sub
sub
sbb
outsl
enter
or
aaa
outsb
dec
decl
fadds
jl
arpl
adc
cmpsl
rcrb
jae
incl
lea
pop
xor
mov
push
shlb
bndstx
pop
hlt
jl
call
push
xor
sbb
mov
test
lret
mov
into
stc
adc
daa
dec
push
push
in
sbb
sti
mov
fstp
add
add
jbe
lock
mov
sbb
or
stos
test
xchg
outsl
test
push
sarb
dec
push
sbb
lea
dec
add
add
push
xor
pop
xchg
sbb
int3
cmpsl
mov
leave
jns
and
aad
aam
push
ljmp
repnz
fistl
in
sub
movsl
dec
sarb
mov
lea
fcoms
push
lret
fs
call
ljmp
and
lea
cmp
mov
incl
fisttpll
xor
mov
jo
sub
inc
and
stos
fcomip
ljmp
fs
mov
in
mov
out
or
fcmovnu
loopne
and
mov
dec
pop
idivl
ljmp
decl
adc
int
mul
pop
add
push
mov
inc
ljmp
or
shll
push
sbb
mov
jb
cmp
movsb
aam
adc
xchg
test
sub
adc
cld
mov
inc
data16
mov
lcall
or
clc
ljmp
aam
in
out
es
sahf
lock
test
jmp
insb
nop
add
pushl
mov
int
pop
pop
jecxz
mov
sub
ljmp
push
and
in
push
pushf
push
aad
cmpsb
idiv
popa
ja
imul
adc
inc
lcall
mov
fdivrl
inc
ficomps
inc
xor
insl
mov
xor
lret
pop
push
push
pop
in
in
cli
push
sub
push
push
xor
idiv
push
lahf
movsb
cmpb
jne
mov
jg
mov
les
sbb
aad
mov
bound
sti
xchg
pop
ljmp
roll
cld
inc
cmp
xchg
jbe
outsb
test
stc
jle
lods
push
xor
cmp
pushl
jmp
adc
insb
sub
pop
sti
fsubr
aaa
cmp
pop
cli
jg
test
push
or
add
pushf
out
pop
test
std
lock
pop
mov
push
hlt
push
jo
push
sbb
pop
adc
decl
mov
adc
fsubrl
enter
sbb
in
inc
adc
inc
pusha
adc
lods
adc
mov
in
imul
fs
testb
inc
adc
mov
push
jge
mov
inc
and
loopne
icebp
mov
push
push
inc
sub
adc
and
push
adc
add
ljmp
loope
fstp
xlat
and
cmp
lea
out
xor
jnp
js
rcl
stc
sbb
jo
mov
or
loopne
lock
jbe
mov
sbb
sbb
iret
mov
dec
ljmp
and
sahf
clc
jno
push
add
mov
push
xchg
dec
xchg
adc
jb
jge
sub
cld
das
mov
or
push
mov
sahf
dec
ljmp
sahf
fmull
xchg
fsubrs
sbb
sbb
loopne
xchg
adc
push
push
jo
sub
cmp
loopne
pop
add
xchg
aaa
stos
mov
jnp
fsubs
dec
lcall
mov
call
push
in
adc
mov
and
aas
lret
imul
rorb
dec
sub
sub
sub
ljmp
jg
mov
push
shll
add
in
jg
fldenv
and
xchg
cmp
and
xchg
bound
test
push
and
push
fwait
sbb
sahf
dec
inc
mov
mov
pushl
push
lahf
and
cmpsb
out
iret
gs
test
es
cmp
inc
push
nop
inc
leave
jg
bound
dec
mov
roll
xor
xor
xor
ds
dec
sub
pop
mov
push
or
movups
js
cmp
adc
jae
adc
sbb
decl
sbb
push
lods
pusha
and
orl
addl
stc
mov
xor
add
pop
pop
adc
mov
test
int
decl
dec
xor
data16
je
fldcw
mov
sub
mov
les
jmp
sbb
in
jne
jl
jg
lcall
adc
mov
dec
cmp
fdivrs
orl
push
add
mov
decl
fs
ret
fwait
xchg
roll
jns
repnz
dec
sub
dec
cmp
adc
dec
sbb
scas
ficoms
cmp
mov
inc
clc
es
sub
push
adc
mov
ljmp
xor
jmp
push
call
or
adcl
push
adc
ljmp
incl
inc
loop
mov
cmp
sti
add
movsl
lods
bound
sbb
dec
test
es
ljmp
xor
xchg
xchg
pusha
stos
dec
adc
mov
int
add
add
lcall
ljmp
mov
mov
jbe
and
add
aas
fistpll
xchg
orl
fsubrs
dec
andb
jmp
jae
pop
rcr
loopne
sbb
mov
or
popf
jo
mov
jne
add
sub
ja
inc
leave
lahf
or
mov
mov
pusha
in
ror
mov
fadd
push
insl
lret
pop
jmp
lea
and
fnsave
mov
aaa
rcl
rclb
shlb
insb
mov
test
nop
aam
fucom
subl
call
enter
pop
xchg
dec
push
xor
imul
mov
scas
clc
inc
ss
jb
andl
sub
pop
mov
decl
jno
mov
fdivl
ja
push
xchg
jae
mov
lock
jb
pusha
stos
loopne
aad
inc
mov
hlt
add
pop
cmc
jmp
pop
jae
addb
mov
rcrl
cmp
lods
inc
mov
mov
decl
adc
adcb
sub
add
stos
ret
nop
sbbl
cmc
test
jmp
push
push
xchg
lret
dec
cmp
cmp
in
ror
pop
in
in
jb
add
mov
push
dec
fstl
and
mov
cmp
and
dec
dec
lods
ja
cld
and
or
mov
test
mov
lcall
sub
lods
add
jb
das
add
popf
aaa
rcrl
jp
mov
lret
subb
adc
hlt
mov
dec
xor
push
movsb
shlb
outsl
mov
mov
lods
nop
push
add
insb
pop
cmp
call
push
pop
fbld
lea
jmp
push
adc
mov
cltd
push
push
packuswb
fs
incl
add
subb
xor
pop
cmp
cmp
or
out
rolb
mov
js
push
or
jmp
icebp
sub
xchg
sub
push
sbb
xor
add
sub
xlat
xchg
push
sbb
mov
adc
leave
cmp
jne
add
shrl
call
add
xor
shlb
orb
xchg
jno
xchg
push
mov
push
inc
es
loopne
lcall
sub
arpl
jne
cmp
dec
clc
filds
les
fidivl
pop
push
jns
stc
lods
and
inc
lret
test
jmp
mov
fiadds
pusha
loope
pop
inc
inc
add
fstp
sub
mov
sbb
xlat
mov
fsubl
and
sub
xor
mov
xchg
pop
jmp
inc
fidivl
setbe
push
mov
jns
push
popf
mov
xchg
jmp
mov
mov
into
mov
jmp
fistl
mov
mov
aad
pushl
or
mov
adc
fs
enter
jne
xor
repnz
dec
adc
mov
inc
push
or
inc
lods
jns
inc
loop
mov
or
xor
push
dec
inc
inc
arpl
ljmp
dec
lcall
inc
xchg
test
xor
and
add
or
stc
mov
add
mov
sbb
jecxz
lea
les
ljmp
mov
push
push
fcmovbe
mov
pop
mov
sbb
push
and
xlat
inc
jne
pop
mov
jg
jno
jp
cmpsb
cmp
or
adc
notl
pop
aaa
bound
test
inc
add
sub
mov
push
test
jl,pn
mov
out
jo
call
pop
pop
and
inc
loopne
and
mov
jne
xchg
push
mov
lock
pop
cmp
add
pop
and
lcall
roll
xchg
pop
cmpl
les
lret
inc
xchg
jg
jecxz
and
inc
stos
sbb
je
pop
pop
adc
pop
lcall
ljmp
pusha
xchg
cmp
test
mov
adc
icebp
mov
and
dec
cmp
jmp
pushl
xchg
and
mov
nop
or
push
add
xchg
je
pop
scas
adcl
data16
pop
roll
pushl
dec
rol
dec
nop
dec
adc
xor
jbe
dec
xor
add
dec
int
push
mov
xchg
add
sbb
sbb
cwtl
imul
inc
cmp
cmp
cmc
add
out
jo
aam
dec
lea
xor
and
ljmp
rcl
sahf
or
and
push
ja
push
adc
jmp
imul
loope
adc
jge
jne
xchg
push
push
fwait
test
xor
jg
or
sbb
sub
int
sub
sub
xchg
jbe
mov
cmc
pushl
add
push
js
int3
fistps
add
ret
mov
pop
sar
mov
lock
call
mov
cmpsl
cmp
je
inc
mov
in
js
das
mov
jl
in
dec
sbb
push
xchg
jns
mov
pop
lds
cmp
decl
cmpsb
push
push
rolb
adc
push
mov
das
repnz
decl
nop
xchg
in
push
cmp
cmp
cwtl
daa
nop
push
pop
mov
mov
subl
sub
jmp
push
push
cmpl
mov
pop
dec
les
mov
add
lret
rclb
sbb
ljmp
inc
std
int3
inc
int
cmpb
outsl
and
xchg
xorb
pushl
clc
lahf
add
cmpsb
mov
mov
jg
or
test
in
decl
outsb
daa
stc
sbb
movb
inc
dec
jge
lea
fidivrs
imul
inc
mov
mov
sub
loope
mov
inc
push
test
mov
adc
adc
or
sbb
mov
mov
fscale
out
pop
mov
jg
lea
sahf
jne
push
decl
shl
dec
adc
push
push
adc
repz
dec
or
lock
or
call
add
push
push
cs
and
hlt
add
pop
test
repz
lea
loop
jae
xrelease
add
aam
dec
mov
pop
nop
idiv
dec
jmp
faddl
imul
cld
mov
cmpl
mov
dec
icebp
movsl
adc
jbe
push
xor
pop
iret
mov
pop
daa
pushf
inc
and
cs
popf
jno
or
inc
mov
xlat
jle
mov
mull
lcall
fdivrp
mov
cmp
cmp
inc
addl
push
insl
pop
nop
pop
fisttpl
inc
mov
orb
decl
push
insb
in
jno
sbb
les
fimull
dec
fnstsw
loop
lock
sbb
arpl
mov
mov
mov
push
mov
mov
stos
or
xchg
or
mov
das
mov
xor
rcrb
lahf
mov
std
mov
mov
xchg
or
mov
sbb
adc
decl
movsl
iret
orb
jge
mov
mov
sbbb
or
inc
cmp
std
dec
lret
out
repz
sub
mov
in
pop
mov
mov
ljmp
out
mov
mov
lahf
pushf
in
jo
pop
in
int
imul
call
lock
repnz
mov
scas
loop
popf
push
mov
mov
hlt
mov
adc
imul
pop
pop
xor
jl
insl
lods
adc
cmp
decl
and
addl
dec
mov
aam
ds
popf
mov
sub
decl
jl
or
and
jg
adc
jl
lods
xchg
test
in
mov
lret
mov
fsubl
jne
popa
enter
stc
mov
ror
aaa
call
lods
incl
jno
adc
jl
cmpsl
push
push
cmp
jl
out
adc
pop
and
dec
stos
ljmp
mov
mov
mov
test
hlt
mov
loopne
decl
xor
push
loopne
mov
lods
xor
add
lods
out
int
sbb
sub
ljmp
stos
popa
lea
insb
lods
sbb
mov
cwtl
inc
lods
jge
in
push
push
jmp
cmp
pop
jmp
and
sbb
and
mov
mov
mov
decl
insb
test
inc
sbb
movsl
popl
xchg
add
sti
mov
addr16
orb
pop
cmp
and
and
enter
sbb
mov
in
decl
clc
aaa
outsl
fistl
ficomps
test
mov
mov
sbb
cmp
insb
imul
sahf
add
pop
push
xchg
sbb
pop
add
push
mov
or
jmp
shll
push
lret
jne,pn
int3
fistl
es
jbe
sarl
aas
and
sahf
cmp
or
insb
jnp
dec
ljmp
pusha
mov
test
inc
and
xchg
ret
push
test
decl
sub
ret
lea
cmp
adc
cmp
cltd
mov
lds
stc
in
mov
push
cmp
out
inc
mov
add
push
push
in
test
testb
nop
mov
cmp
add
cmpsb
mov
cmp
pushl
int
or
adc
mov
inc
adc
lret
inc
pop
mov
call
and
je
add
pop
sub
aam
daa
aad
mov
pop
sbb
inc
adc
sub
pop
or
cld
mov
xor
xlat
cmp
xchg
jb
ret
sub
xchg
xor
mov
jns
cmp
push
ljmp
mov
cmp
je
mov
incl
mov
jge
push
sub
out
pushf
cmpsl
jns
inc
sub
lock
out
incl
xor
mov
adc
sbb
or
adc
stos
push
add
cmp
push
ljmp
jl
mov
xor
pop
in
mov
data16
fs
in
incl
call
sbb
pusha
pop
push
xchg
jb
aas
nop
jg
inc
mov
or
andb
and
mov
pop
mov
mov
xor
incl
inc
mov
aas
ja
mov
mov
ret
test
sub
es
ljmp
dec
sbb
mov
mov
adcb
jno
xor
xor
scas
adc
pusha
mov
pop
jl
decl
lods
loop
pop
add
int3
inc
call
xor
test
lcall
cmpsl
icebp
pop
inc
mov
push
push
cmpsb
cltd
push
dec
popa
jmp
jo
nop
push
or
call
sti
push
mov
sbb
test
es
jge
negl
loopne
xchg
dec
add
xchg
push
xchg
pop
aam
mov
jmp
push
rcl
loop
add
add
xchg
or
xchg
mov
sbb
imul
xor
jmp
iret
and
pop
sbb
mov
push
xchg
je
jo
hlt
and
pop
add
or
call
mov
lock
pop
sbb
aad
adc
sbb
lret
jne
cmp
lret
lret
mov
ljmp
mov
push
sar
or
jecxz
jo
push
push
test
loope
popa
test
push
push
jg
decl
fists
and
rorb
push
arpl
push
sub
imul
insl
jle
lahf
xor
dec
adc
mov
cmp
out
xchg
or
es
pushl
or
mov
cmp
jb
stc
rclb
xchg
leave
adc
shl
aam
jmp
rcll
ret
lret
mov
and
add
adc
insl
mov
call
and
ret
add
xchg
cli
movsl
icebp
sub
jg
lds
xchg
stc
movsb
test
xchg
and
cld
add
jmp
mov
pushl
lea
push
pushf
loopne
call
ficoms
sbb
and
dec
scas
clc
lcall
jg
aam
aaa
mov
or
hlt
mov
lods
addb
mov
insl
lock
test
cltd
add
aam
clc
push
mov
int
insb
mov
jne
add
incl
mov
xchg
add
jge
cmp
xor
or
inc
and
mov
cmp
cmp
data16
mov
xlat
xchg
sbb
cmp
jg
jae
or
add
inc
mov
jo
cmpsb
inc
cmp
in
lea
in
rcrl
sub
adc
mov
es
vmptrld
lcall
pop
dec
lock
loopne
adc
mov
mov
inc
dec
clc
loope
push
push
mov
popa
or
clc
add
jne
mov
push
incl
add
insb
lds
cli
push
test
ljmp
mov
add
gs
aas
iret
daa
jae
insb
fadd
cli
idivl
fcoms
adc
les
addl
lcall
test
push
mov
cmc
fs
adc
xor
adc
stos
xchg
ljmp
das
xchg
cmpsb
out
cmp
pushf
inc
into
push
call
fisttps
dec
dec
icebp
add
mov
insb
aas
mov
sti
mov
mov
jne
mov
decl
decl
push
sbb
clc
adc
pop
insb
subl
mov
xchg
cltd
sti
je
mov
incl
sti
jne
lea
movsb
lock
ss
pop
inc
adc
push
shll
inc
dec
push
push
jns
mov
ret
mov
out
adc
shll
out
adc
outsb
loope
std
jmp
inc
in
cmp
jbe
or
aaa
push
mov
fucom
call
mov
nop
mov
dec
enter
and
jne
mov
add
add
lcall
push
push
sbb
push
fldcw
pop
into
xchg
cwtl
les
pop
sbb
faddl
jge
push
sub
mov
call
ficoml
push
js
scas
adc
xor
xchg
mov
fidivrs
cld
jecxz
ljmp
sar
pop
add
pop
mov
mov
dec
mov
add
mov
adc
std
pop
cmpsb
gs
cmp
int3
push
lret
cmpsb
test
ret
jg
inc
mov
inc
aam
mov
xor
lods
jo
fisubs
insb
push
mov
mov
fisubrs
jns
out
xlat
test
jns
out
data16
stos
js
notb
ljmp
inc
pop
sub
insb
inc
es
js
push
and
xchg
cwtl
cmp
pushl
stc
arpl
xchg
sub
mov
mov
ret
movsb
push
mov
mov
dec
xor
xchg
or
and
sbb
rclb
lcall
lods
mov
jg
js
negb
xchg
popa
mov
and
sahf
ljmp
nop
xlat
dec
or
mov
fstpl
rorl
mov
xchg
test
cwtl
fadds
fbstp
push
cmp
push
sub
clc
or
lods
mov
push
into
cmp
push
push
cs
in
inc
mov
ljmp
jo
cmpsb
pop
sbb
or
jmp
mov
inc
aam
std
inc
adc
and
addl
pop
inc
es
xchg
mov
and
jo
xchg
inc
sbb
inc
shrl
decl
pop
insb
jle
std
cmpsl
add
lcall
cmp
outsb
ss
jbe
pop
pop
xor
adc
jl
jo
gs
dec
jl
sub
in
sbb
pop
pop
sub
push
loope
rcrb
push
push
enter
inc
dec
mov
les
mov
add
jno
adc
xor
adcl
popa
bnd
lcall
jne
and
lcall
dec
xchg
inc
dec
xchg
cmp
push
lea
jecxz
pop
rorb
or
mov
sub
xchg
xlat
xor
pop
push
incl
mov
add
pop
cmp
cmpsl
mov
ffreep
incl
cmp
sti
sub
adc
jmp
fbld
mov
lahf
call
iret
jg
ljmp
add
sub
in
dec
pop
or
sub
ret
enter
andb
jb
push
bound
mov
mov
jo
cld
dec
sar
dec
or
pop
push
mov
insb
fs
mov
cli
fs
push
push
mov
push
xchg
fldl
leave
cmpsl
pop
mov
push
or
sbb
mov
ljmp
mov
int
test
or
mov
push
aam
mov
aas
outsl
sbb
sbb
adc
ljmp
mov
insl
arpl
gs
sub
movsl
int3
cmp
pushf
daa
inc
sbb
pop
cli
jbe
xchg
lods
dec
shrb
jmp
cmp
imul
pop
sbb
test
add
test
ljmp
xchg
add
or
call
leave
xchg
repz
int3
pop
in
xor
mov
sar
lods
lret
add
je
add
mov
inc
jp
ljmp
and
and
mov
jmp
mov
ja
mov
test
adc
mov
lcall
mov
mov
jmp
mov
sub
mov
and
pop
in
movsb
xchg
pop
push
mov
xor
xchg
aam
inc
lcall
push
add
pop
pop
or
shlb
pop
xchg
push
add
fcomip
lcall
cmp
sbb
or
sti
sti
jle
fimull
mov
inc
imul
loopne
fstpt
and
sbb
fidivs
dec
enter
call
xchg
cmpsb
or
stos
enter
adc
dec
test
sbb
mov
xor
inc
cmp
xor
out
mov
jmp
pop
add
incl
jecxz
mov
mov
or
ja
mov
notl
int
pushl
les
mov
loopne
vrcpss
js
movsl
mov
cmpsb
in
push
or
incl
cs
mov
mov
pop
insb
and
inc
push
push
lcall
stos
and
jmp
adc
pop
imul
jne
std
cmp
arpl
sub
or
and
mov
pop
je
sub
ljmp
jo
fidivl
pushf
insb
subl
lea
push
mov
xchg
loope,pn
xchg
sub
jp
loop
repz
lcall
decl
sbb
fsubs
xchg
jg
add
mov
dec
inc
popa
lock
movsb
add
hlt
xchg
and
pop
rolb
mov
mov
mov
cmp
adcb
lcall
addr16
sahf
or
sahf
xchg
insb
testl
jmp
sahf
mov
cmp
sete
mov
dec
addr16
xor
mov
loopne
test
call
inc
nop
mov
aam
icebp
int
push
sub
inc
stos
sub
xchg
or
push
xchg
jg
stc
adc
xchg
push
iret
jbe
sbb
das
test
pop
dec
ret
inc
pop
and
mov
pushl
xor
inc
add
push
xchg
inc
pop
and
mov
out
cmp
push
gs
cmp
or
push
mov
and
mov
ds
push
dec
xor
push
lock
js
mov
jmp
mov
clc
lds
fidivrl
jbe
xchg
inc
jmp
fcoms
dec
jb
popf
mov
sub
repz
xchg
mov
test
cltd
insl
mov
jns
mov
insb
adc
stos
push
cmp
inc
push
cwtl
pusha
dec
sahf
jno
rorl
xor
call
cli
fnstenv
nop
out
dec
mov
enter
cmp
add
sub
jg
fdivrp
fmul
push
or
sbb
pop
jl
arpl
add
push
add
push
add
ljmp
push
fisttps
enter
sub
jbe
push
sub
cmp
popf
push
mov
dec
decl
jns
addr16
ds
fstl
out
dec
mov
test
sub
stos
call
jmp
ss
and
iret
rclb
adc
pop
mov
push
jne
decl
ljmp
mov
lret
outsb
mov
stc
xor
lret
fstpl
mov
in
sub
push
ljmp
aad
shll
sbb
rcr
jecxz,pn
ljmp
pusha
xchg
add
int
call
xor
in
fmull
pop
mov
mov
inc
lock
pushl
js,pt
dec
scas
mov
mov
cmp
int3
fwait
mov
mov
xor
ljmp
flds
lahf
jbe
sbb
mov
arpl
pop
pop
and
pop
adc
sbb
cmp
inc
mov
cmpsb
jo
popf
test
dec
xor
inc
decl
inc
ss
orb
mov
xor
xchg
sti
aaa
jg
mov
adc
lret
dec
sbb
shlb
shlb
sub
in
fwait
or
sub
mov
incl
inc
pop
jp
inc
xchg
pushf
mov
fistl
lods
sub
pop
cmpsb
mov
aas
dec
jg
xchg
rcl
cmp
jo
and
das
js
sahf
or
stc
cmpsl
test
mov
xchg
push
mov
lret
mov
push
push
jnp
fisubl
stc
inc
jo
dec
hlt
lock
dec
outsl
jg
mov
test
std
mov
int3
jne
inc
ret
cmp
cmp
pushl
mov
sub
rcrl
lahf
fldcw
jl
mov
and
in
das
or
or
sub
sbb
add
test
lea
popf
mov
out
clc
fwait
mov
xor
hlt
xor
mov
fwait
push
mov
pop
and
repnz
xor
fwait
or
das
pop
imul
dec
mov
add
decl
popf
xchg
dec
dec
push
sti
push
or
jg
in
lahf
cmp
scas
add
decl
popf
lret
inc
rorb
sub
inc
loop
cld
adc
std
andl
loop
sti
and
mov
or
push
loop
repnz
enter
pop
inc
xor
into
cmp
inc
jb
jns
ljmp
add
cmc
aam
cwtl
lahf
push
iret
push
in
mov
sbb
fcomp
xor
and
mov
cmpl
push
xor
in
adcl
dec
jmp
pop
stos
test
incl
mov
jg
sub
int3
rolb
fcomps
push
stc
movsb
push
adc
fcomip
mov
sbb
out
cmpsl
fcoml
sub
mov
mov
decl
mov
dec
sbb
pop
aas
loope
loop
xor
aad
and
insl
xchg
jmp
or
adc
inc
ret
and
out
sub
or
push
adc
popa
ljmp
dec
inc
movsb
fstpl
and
add
cmp
jle
pop
int
imul
push
push
or
loop
or
loopne
add
push
cmp
sbb
adc
lods
sbb
or
inc
es
mov
or
jmp
clc
cmc
imul
into
arpl
out
sub
test
inc
rclb
xchg
jmp
or
push
sbb
aas
mov
fldl
sub
xor
jmp
adc
inc
insb
rol
inc
jg
decl
push
lret
out
mov
mov
movsl
mov
inc
pop
decl
sub
sar
mov
or
aad
adc
jno
push
lahf
ljmp
push
dec
ret
mov
mov
fbstp
pushf
mov
xchg
xchg
jmp
mov
lcall
cltd
insl
add
lods
sbb
or
sub
movsl
push
add
addb
inc
lods
jecxz
sub
imul
xchg
inc
sub
inc
sbb
and
pop
dec
stos
mov
cmp
adc
sbb
cltd
add
outsb
or
fmuls
decb
dec
js
sbb
mov
push
sub
pusha
xchg
sub
mov
sbb
add
adc
ljmp
ret
xor
xor
add
mov
inc
cltd
dec
cmp
ss
ud0
jmp
sub
mov
mov
xor
test
jle
mov
adc
cmp
fstpl
xchg
xchg
mov
sub
jo
jg
xor
pusha
jecxz
popa
rcr
in
lods
mov
dec
cmp
cld
lcall
call
incl
xor
fcompl
mov
lea
fcompl
icebp
ljmp
lock
in
in
sub
pop
add
cld
mov
outsb
sub
pop
cmc
lcall
or
leave
inc
add
arpl
add
pop
rorl
cmp
cmp
data16
dec
popa
push
mov
xchg
adc
and
sub
mov
push
cmc
in
push
sbb
jmp
out
in
test
or
mov
enter
outsb
mov
mov
mov
aam
int
cmp
mov
call
jb
loopne
in
ss
loop
xchg
mov
pop
pushf
push
lock
add
adc
mov
pop
mov
jp
fs
sbb
fucomp
jmp
jmp
xor
adc
fidivl
pop
lds
push
pop
pushf
lahf
aas
cli
lcall
xchg
pop
icebp
into
data16
add
pushf
push
push
jb
call
insb
push
shlb
or
dec
mov
or
test
clc
pop
in
mov
popa
fsts
cmp
or
sbb
or
js
fbstp
repnz
mov
cmp
mov
inc
ficoml
xor
jb
sub
in
call
ret
cwtl
jecxz
inc
jb
test
imul
jns
jecxz
add
mov
adc
inc
xor
pop
jmp
movl
or
mov
jmp
jp
push
pop
cmp
mov
mov
daa
icebp
jo
mov
imul
sti
mov
cmpsb
rorl
mov
stc
je
cmp
cli
sub
adc
or
mov
adc
or
xor
sti
enter
jmp
jg
xchg
fisubl
lock
fstpt
add
mov
cld
push
jne
sahf
mov
decl
faddl
dec
push
jb
in
dec
sub
repz
push
xor
adc
xor
nop
in
and
dec
sub
pop
inc
push
lock
aas
outsb
dec
mov
call
pop
pop
xchg
addl
add
dec
push
inc
bound
xor
jbe
or
es
stos
aam
xchg
xchg
add
inc
pushf
push
incl
enter
decl
push
push
shll
add
mov
sbb
test
cmpsb
mov
push
jg
idivl
cs
sbb
dec
push
loopne
mov
xor
out
or
adc
in
xor
mov
cmc
inc
xor
pop
add
cmp
call
or
rolb
aam
testl
aad
ljmp
lcall
sub
sti
mov
imul
mov
dec
mov
push
inc
cmp
jnp
clc
iret
iret
add
xchg
lea
ficomps
std
mov
shrb
adc
mov
add
imulb
ret
lock
lcall
and
add
mov
inc
inc
jmp
mov
pop
xchg
add
or
dec
sub
pop
cmp
xchg
or
push
lea
pushl
xor
pop
sub
push
mov
decl
xorl
js
or
es
jno
mov
dec
arpl
leave
or
sbb
and
and
and
dec
cli
daa
push
jle
movsl
mov
jg
stos
xor
add
enter
sub
or
add
ds
fisttpll
cld
fbstp
dec
dec
pop
or
jbe
cs
scas
imul
ljmp
mov
fdiv
push
push
xchg
mov
xor
decl
lcall
es
test
mov
jo
push
jnp
xchg
pop
lock
fimuls
jns
outsl
les
ljmp
pop
into
xchg
mov
aam
mov
ds
outsl
lea
cmpsb
psubq
push
ret
cmp
fdivs
mov
into
mov
jp
incl
fmull
sub
insb
mov
addb
es
adc
les
cmp
ret
sbb
cli
call
jo
or
push
jle
mov
adc
rorb
push
push
push
inc
std
jne
jg
out
jb
imul
or
sub
popf
adcb
gs
jmp
mov
addr16
add
pop
lcall
xchg
out
pop
mov
incl
test
xor
nop
test
or
jns
dec
fimull
sub
jb
lods
incl
movsl
fwait
adc
aas
js
jne
cwtl
pop
inc
in
orb
cmp
popa
sub
in
cmpsl
add
insb
fnstsw
adc
dec
push
ja
mov
ja
push
cmp
cld
mov
jb
pop
rorb
lods
loopne
jmp
adc
push
in
or
aaa
mov
xor
fdivrl
cmc
sub
sub
mov
cmp
out
ret
mov
lock
repnz
jmp
pop
in
arpl
dec
inc
adc
repnz
xor
and
xor
gs
cmc
jle
sbb
xchg
fildl
int
in
jmp
or
sub
decb
in
push
mov
jae
mov
call
and
mov
inc
ljmp
cltd
inc
xchg
fs
gs
insb
push
std
decl
call
enter
movsb
leave
test
dec
sub
mov
rclb
or
cmc
pop
je
call
jg
ret
jge
cmpsl
jmp
daa
int3
and
pusha
mov
popa
enter
lcall
pop
dec
pop
pop
jmp
push
shlb
pop
mov
pop
mov
jg
aad
jg
jp
inc
mov
std
pop
movsl
xor
mov
jns
push
adc
adc
clc
pop
pusha
ljmp
popf
subl
insl
fs
nop
sti
ds
test
cld
sbb
jmp
push
adc
cwtl
les
mov
lcall
les
jno
imul
cmc
repnz
mov
loopne
fdivrl
dec
fisttps
mov
movsb
inc
shll
jne
movsl
adc
lods
mov
pop
or
push
int3
lods
or
lea
rorb
or
pop
cli
xchg
or
add
ljmp
push
dec
push
sub
xchg
xchg
data16
sub
js
mov
pop
scas
ljmp
mov
outsl
bound
cltd
fstpt
sub
jl
sbb
sub
or
outsb
cmp
ror
call
jns
add
or
adc
js
adc
add
das
and
insb
aaa
adc
lcall
adc
std
test
or
mov
addr16
fucomp
sbb
cmp
mov
cmp
mov
outsl
lods
cld
cmp
mov
and
and
pop
out
jo
mov
aam
jge
dec
cmp
decl
les
in
in
icebp
push
mov
aaa
adc
iret
out
dec
ljmp
push
lahf
loope
enter
pop
repz
pushf
push
js
repz
sbb
std
add
out
fwait
mov
mov
movsl
adc
cmpsl
pop
leave
pop
mov
test
fcomip
dec
or
dec
xlat
ror
int3
mov
push
lock
jge
jne
adc
inc
push
loop
jmp
pop
cmc
inc
add
jb
out
sbb
push
xor
lcall
push
adc
int3
out
decl
stc
and
dec
lock
adc
nop
mov
dec
adc
mov
push
cmp
xlat
test
push
out
sbb
mov
push
popf
adc
fsub
and
mov
or
cmp
leave
pusha
lds
pop
dec
mov
imul
rorl
test
ljmp
mov
jmp
inc
out
mov
push
jae
mov
xor
aaa
pop
and
or
lcall
loop
or
add
rclb
dec
pop
sub
mov
loope
add
push
scas
mov
xor
cli
dec
out
xor
dec
sbbb
lcall
in
in
nop
sbb
sbb
xor
and
or
fdivl
jmp
cmp
xchg
inc
es
jne
mov
add
pushf
subb
add
aaa
cmc
lcall
repnz
sbb
std
push
data16
pop
push
xchg
and
fisubl
jb
lahf
clc
jmp
mov
cmp
or
mov
daa
jl
scas
fdivr
lcall
fmull
adc
push
xchg
xchg
jnp
adcl
fists
cld
incl
mov
leave
inc
call
mov
leave
pop
or
inc
clc
lcall
push
and
cmp
fwait
lea
xor
sub
loopne
jge
leave
call
scas
jbe
ss
pop
push
lods
pop
dec
jmp
ljmp
pushl
sbb
mov
add
or
fisubrl
add
ficoml
add
adc
fdivl
lods
decl
stos
cwtl
fs
es
mov
rolb
mov
pop
mov
fisubs
lods
pushl
pop
je
jp
shlb
inc
inc
adc
adc
in
xchg
icebp
incl
push
mov
add
es
sbbb
mov
incl
add
push
mov
dec
pushf
adc
sbb
outsl
je
cmc
inc
ljmp
decl
ret
push
push
addr16
je
jbe
cwtl
imul
nop
pop
mov
fisttps
dec
pushl
add
out
mov
rolb
xchg
cli
and
clc
xlat
nop
les
xlat
mov
inc
push
mov
ljmp
loopne
add
sub
aas
inc
rol
xchg
add
popa
aad
fists
fnstcw
sbb
jae
xchg
loopne
add
pop
or
xchg
sub
cmp
sbb
push
popa
scas
stc
or
pop
push
mov
jp
cmp
mov
mov
mov
and
in
mov
adc
push
xor
or
inc
jmp
enter
fs
inc
inc
jne
mov
cmc
or
or
mov
shlb
or
repnz
mov
ret
dec
lods
aad
mov
push
in
je
add
mov
pusha
sbb
push
lods
mov
xchg
push
lock
incl
mov
shlb
add
add
mov
jge
daa
decl
scas
fdivl
dec
jo
mov
sarb
shrb
jge
cmp
cmc
xchg
sub
hlt
ljmp
movsb
repz
mov
adc
insl
iret
adc
decl
int3
ja
popa
icebp
xor
jge
fdivl
es
push
mov
or
adc
je
pushf
sahf
ljmp
clc
jmp
adc
sub
push
add
pop
adc
fildl
xchg
mov
pushl
leave
andb
idiv
das
adc
jo
mov
adc
xor
lret
cltd
xchg
jmp
dec
rcll
or
cmp
ljmp
or
dec
mov
pop
cmc
das
and
je
or
cmpl
cmpsl
add
outsb
loope
push
push
sti
dec
push
insb
leave
xor
lahf
sub
sub
movsl
sbb
leave
adc
sbb
ljmp
xchg
sbb
aas
dec
pop
cmp
popf
arpl
jg
popa
pusha
add
sbb
sub
subb
adc
mov
popa
xor
fst
mov
aas
xor
inc
dec
jns
add
bound
cs
lret
lds
dec
or
add
addr16
adc
fadds
pushl
std
push
icebp
cmp
or
leave
cmp
cmp
or
sub
inc
mov
pop
ds
fimull
and
pop
jbe
and
fidivrs
lret
lea
or
push
aas
into
push
decl
sbb
ss
inc
mov
pop
iret
mov
and
xor
iret
jmp
lcall
and
rorl
push
dec
rolb
ret
test
aas
arpl
nop
mov
jg
js
sub
jo
ret
in
call
mov
cmpsl
add
ss
ljmp
add
and
add
jno
fildl
std
or
into
push
popf
inc
fdivl
iret
or
jmp
add
daa
add
nop
test
jb
xorl
sub
and
fists
repnz
lea
jge
decl
xchg
cmpl
xchg
sbb
dec
cs
inc
jns
lea
pop
dec
and
or
jp
sahf
ljmp
inc
je
lea
inc
dec
jbe
xchg
and
aaa
sub
push
xor
rcll
lcall
fld
push
or
std
jge
stos
jne
mov
ss
mov
decl
movsl
sahf
movsb
stos
test
push
loopne
out
fwait
clc
js
lods
or
jecxz
sub
incl
rclb
pop
adc
xchg
test
adc
aas
and
loopne
push
mov
xchg
daa
sarb
cwtl
push
inc
icebp
mov
in
inc
sbb
or
dec
or
inc
cmpsl
pop
xchg
xor
mov
or
pop
ret
jo
adc
fs
adc
out
clc
movsl
push
cmp
arpl
mov
add
fisttps
decl
adc
sahf
xlat
mov
rorl
sbb
add
mov
jl
cmp
sti
adc
movsb
out
jns
cmp
std
ret
mov
or
adc
cld
incl
clc
mov
dec
push
or
xchg
pop
mov
cmp
aas
shrb
ds
mov
push
xor
call
mov
not
rcrb
cmp
mov
shl
icebp
cmp
dec
fs
addb
mov
daa
ds
and
rorb
push
out
sub
cmpsb
fcoms
sub
lcall
daa
mov
mov
rorl
sub
in
xchg
and
fadds
mov
add
pushl
mov
rolb
jp
add
insb
int3
in
loop
mov
or
xor
cmp
push
pop
add
rcrl
mov
leave
shld
cmpsl
dec
pushl
jle
push
and
sbb
push
xchg
adc
jle
incl
ror
shl
lods
in
or
mov
lock
xchg
aaa
cs
adc
test
xor
in
ds
adc
push
push
add
cmpsl
movsb
shr
or
pop
cmpb
je
mov
adc
scas
cli
incl
jae
pop
jle
pop
pusha
insl
inc
cmc
cmp
insb
ficoms
out
nop
in
ret
repnz
addl
gs
jne
adc
jg
dec
and
mov
and
cmp
push
and
pop
aas
dec
addr16
sbb
std
inc
clc
jmp
jmp
ret
push
imul
int3
enter
ja
in
push
add
sub
xchg
push
into
je
pop
sahf
les
lods
push
inc
xchg
mov
jecxz
test
inc
mov
jns
pop
xchg
lcall
dec
jge
imull
scas
push
mov
sar
call
mov
outsb
sub
mov
xor
jg
and
inc
push
inc
test
sar
ljmp
xchg
sbb
loop
lea
mov
cwtl
outsl
cwtl
mov
aam
pop
in
xor
mov
push
imul
dec
dec
xchg
inc
inc
mov
push
js
inc
sbb
decl
sub
ret
push
push
lret
outsb
popf
xchg
push
pusha
push
dec
les
leave
push
cmp
ljmp
decl
cmpsl
or
test
push
push
sbb
repnz
sbb
push
add
decl
fsubl
test
movsb
popa
shll
or
mov
cmp
ljmp
mov
lahf
sar
scas
rol
lea
int3
ss
xchg
xor
icebp
scas
insl
sbb
loopne
cwtl
or
jns
adc
fcmovne
sbbb
xor
rcrl
mov
lret
pop
push
push
aas
mov
aaa
mov
js
pusha
test
je
jmp
mov
xchg
cmp
pop
adcl
out
test
jno
push
ljmp
in
lods
cs
sbb
and
pop
or
lret
cli
pop
jo
je
sbb
ds
mov
mov
pop
xor
daa
xchg
int
cmp
dec
xchg
jne
leave
cmpsl
add
mov
ljmp
push
xor
insl
mov
xlat
jmp
pop
lods
imul
es
mov
in
mov
fsubrs
xchg
pop
inc
lret
sub
hlt
push
sub
jge
ljmp
pushf
fidivs
int3
add
xchg
pop
gs
push
ds
enter
call
dec
adc
inc
dec
jb
add
inc
and
rclb
add
lret
out
in
inc
mov
into
sub
push
gs
xchg
sbb
aaa
pop
add
xor
in
jmp
adc
xabort
aad
adcb
inc
test
push
lods
or
jg
pop
cmp
mov
jb
add
filds
pop
and
test
leave
outsb
lea
or
add
xchg
loopne
fists
xchg
push
pop
adc
or
mov
je
fistpll
add
push
inc
stos
cli
cmp
adc
sbb
push
insb
pop
or
add
dec
inc
pop
xchg
xchg
fs
jmp
xor
add
ficoml
bound
gs
push
add
mov
rorb
mov
add
aad
and
mov
push
fs
std
jg
sti
aam
jbe
pop
repnz
movsbl
out
in
or
jmp
paddusw
es
jno
mov
jb
adc
ss
pushf
mov
incl
push
fcmovnbe
pop
lods
fistpll
push
add
push
dec
mov
ss
cmp
es
fcmovbe
test
orl
jmp
add
jo
xchg
push
test
mov
mov
inc
jmp
mov
imul
pop
je
jge
push
bound
add
inc
xlat
add
pusha
test
xchg
sub
push
ficomps
sbb
sar
lea
mov
fidivl
cmp
jge
shrb
cltd
sub
push
ljmp
inc
xor
outsb
dec
or
adc
movsb
push
sbb
push
adc
cld
jne
sar
mov
sub
mov
push
adc
jno
pop
cmpl
popa
jmp
mov
mov
inc
bound
or
ljmp
cli
cmp
pushl
daa
xor
mov
mov
int
push
or
jg
sbb
cli
call
push
xor
in
fwait
cli
in
jg
add
jle
decl
js
and
cmc
push
sub
iret
push
fsubrp
jbe
xor
push
fs
mov
incl
sub
test
and
and
adc
mov
inc
sub
mov
ljmp
dec
ljmp
ss
xorb
data16
jle
and
sbb
cmp
dec
fcomip
jle
shr
sahf
push
push
push
out
pop
inc
pop
jno
pop
sbb
push
inc
jns,pt
in
call
dec
mov
and
icebp
scas
xchg
shr
fsin
nop
sbb
add
mov
jmp
ret
sub
loope
push
shll
loopne
lret
aam
jmp
xor
scas
arpl
incl
jb
adc
sahf
xchg
test
or
sub
adc
mov
mov
jnp
aad
mov
sub
movsl
adcb
adc
add
orl
mov
jl
rolb
sub
popa
add
adc
mov
lcall
add
addr16
inc
dec
mov
sub
sub
mov
stos
pushl
mov
movsl
pushf
dec
xor
daa
push
push
adc
sub
sbb
addl
cmpsl
mov
sub
das
or
or
movsl
sub
les
pop
dec
dec
pop
cmp
adc
xor
icebp
inc
std
incl
imul
sbb
mov
data16
in
pop
inc
daa
jb
sarl
fldenv
add
xor
xchg
loopne
push
in
icebp
xchg
sbb
and
or
sbb
inc
or
cli
sti
aaa
imul
pop
inc
call
jbe
and
dec
adc
rcl
insl
sti
dec
or
add
xchg
sar
jmp
xchg
es
shlb
outsb
pop
push
aaa
add
jo
cmp
movsb
inc
xor
or
or
leave
dec
call
add
push
shrl
push
lock
add
xchg
dec
jno
or
ja
aam
mov
or
maskmovq
testl
pop
add
or
fdivs
psrad
or
jg
test
dec
orb
mov
mov
sti
sub
decl
xchg
pop
jp
nop
movsb
mov
gs
xor
or
sbb
fsubrs
cwtl
adc
jne
popa
inc
das
xor
adc
insb
xchg
test
mov
enter
inc
push
in
mov
pop
pop
push
pop
add
fs
add
enter
add
adc
repz
and
pop
push
adc
sub
pushl
pusha
loopne
shll
test
sub
or
push
jg
cmp
push
ret
incl
mov
mov
jmp
rcll
dec
push
sbb
ljmp
add
mov
cmpsb
aad
mov
sti
pushl
sbb
test
test
pop
nop
mov
adc
and
add
repnz
xor
test
inc
fnstsw
fldl
pop
push
pop
int3
and
das
jp
pop
and
pop
xchg
outsb
pusha
stos
in
inc
mov
leave
xorb
incl
loopne
rcrb
fldl
add
ret
popa
and
stos
pusha
mov
mov
test
push
mov
add
cld
cmp
in
jmp
roll
adc
sbb
xor
jge
mov
push
mov
and
push
nop
adc
add
jo
test
add
pop
add
push
cwtl
ds
stos
test
adc
add
push
jl
xor
testb
add
movsl
in
andb
pusha
add
push
ja
out
xor
mov
test
or
mov
cld
dec
sub
pop
nop
scas
xchg
dec
sbb
pop
loopne
outsb
mov
add
insl
sbb
popa
add
hlt
nop
lods
add
dec
push
xchg
ljmp
add
rclb
xchg
rclb
insb
mov
and
divl
jb
jmp
aas
xor
dec
add
push
pop
test
pop
cmp
mov
push
add
fisubrs
or
push
rclb
aas
ret
xchg
cmp
es
clc
xchg
add
sub
sarl
add
fnsave
and
inc
outsl
pop
pusha
mov
add
add
pop
jns
out
rolb
scas
clc
pop
ds
call
in
orb
mov
jo
fcomip
leave
rcll
add
nop
push
dec
mov
mov
ret
cmp
jo,pn
jo
add
pop
sub
test
daa
jecxz
cmp
and
sbbb
test
mov
lods
pushl
add
outsl
mov
cmp
fadds
or
adc
lcall
jg
sbb
xor
out
ljmp
scas
xchg
sbb
and
inc
jno
loopne
xor
push
inc
testl
pop
fists
imul
fs
inc
out
and
in
push
movsb
add
or
adc
out
ret
push
inc
lcall
sbb
fcos
lea
inc
shlb
inc
loopne
lock
in
xor
mov
cmpsb
mov
xchg
xchg
or
mov
movsb
mov
xchg
cmpsb
pop
or
mov
xor
fiaddl
call
das
jo
lods
cmp
fisttpl
or
lods
dec
push
and
js
dec
add
insl
fldt
mov
insl
cmc
pusha
sub
jnp
shl
adcb
fucomip
dec
add
adc
rorb
fwait
xchg
xchg
insb
aam
shll
add
adc
shll
fdivrl
xchg
lret
or
inc
adc
mov
ret
sar
cmp
xchg
fistpl
sub
cmp
loopne
or
or
test
lcall
sub
movsb
iret
sahf
mov
push
adc
inc
add
shrb
call
insl
shr
in
filds
push
xchg
and
mov
repnz
and
jbe
lret
pop
push
ljmp
cltd
insb
mov
push
insl
lret
std
push
out
and
jg
jg
or
push
inc
pusha
rcrb
sub
xchg
mov
adc
test
insl
or
mov
int
mov
mov
mov
xchg
sub
decl
mov
ljmp
adc
pop
cltd
push
pop
pop
or
in
mov
add
add
mov
xchg
add
push
pop
std
add
nop
cs
xchg
testl
sub
dec
aad
and
in
pop
outsl
fimull
das
movsl
adc
fstpl
add
and
repnz
or
je
mov
shrb
ret
dec
shl
add
add
and
nop
icebp
pusha
jge
into
push
push
fildl
add
dec
jo
adc
jmp
roll
add
and
lock
or
or
pop
inc
sub
aas
pop
and
adc
mov
or
xor
cli
nop
jl
adc
or
lods
jmp
inc
push
enter
push
outsb
ds
adc
or
incl
mov
xchg
jl
xor
out
mov
lock
jo
jae
push
addb
mov
inc
cmpsl
cmp
out
sbb
or
push
xchg
push
icebp
pop
call
push
nop
pop
and
js
adc
push
pop
lods
dec
ret
dec
outsb
xor
push
popa
xchg
shrb
dec
lcall
sbb
adc
scas
dec
pop
pop
aam
pushf
jo
pop
push
cmp
cmc
sub
xchg
inc
pusha
add
dec
std
scas
mov
movsl
dec
scas
sub
jg
mov
aas
mov
xchg
adc
push
or
push
add
add
test
cmp
mov
cmp
pop
cmp
adc
arpl
dec
lahf
es
lock
ficomps
dec
cmp
jbe
movsb
mov
sar
adc
inc
imul
jg
xor
stos
dec
incl
stc
dec
push
notb
jnp
sbb
jne
mov
push
lds
cmpsb
pushl
sub
je
pushf
or
inc
add
sbb
pop
and
pop
inc
rorl
lcall
mov
push
mov
jg
adc
or
inc
inc
mov
int
cwtl
test
lret
lds
jg
pop
andl
rcll
adc
xchg
sarl
jae
push
enter
mov
iret
mov
dec
pop
mov
mov
inc
pop
aas
stos
mov
dec
push
adc
mov
mov
lcall
cmp
xchg
inc
push
aaa
mov
outsb
and
pop
cs
push
xor
pop
mov
cmp
lods
jg
incl
aas
pop
mov
and
adc
xchg
fwait
xchg
pushl
adc
sbb
ds
mov
mov
push
sub
push
je
ljmp
jne
dec
push
mov
cld
loope
iret
in
cmpsl
and
cmp
es
or
ljmp
xor
push
mov
mov
es
shll
sub
jg
test
inc
cmp
push
dec
ljmp
and
ss
pop
adc
and
push
nop
push
cmp
xchg
jp
fcomip
ljmp
push
cmp
mov
mov
pop
jo
jbe
ret
mov
decl
pop
dec
xor
nop
out
pop
mov
pop
lcall
fcmovbe
ljmp
mov
aas
adc
orb
mov
movsl
sahf
mov
add
or
inc
pop
dec
sub
aas
push
out
mov
jno
or
dec
jne
xor
call
mov
mov
ljmp
inc
lods
stos
add
lods
and
sbb
sub
lret
jle
jae
push
xchg
and
push
cld
or
cmp
lock
push
push
and
mov
leave
cmp
dec
mov
sub
cmpsl
dec
cwtl
adc
js
sbb
andl
jecxz
adc
xchg
ljmp
xchg
div
imul
sarl
cmp
movsl
lock
jp
hlt
decl
lahf
and
mov
lret
add
cmpsb
and
mov
in
lret
mov
cmp
adc
scas
jne
cmpsl
or
or
in
jb
or
mov
aaa
ljmp
ss
cld
jge
inc
dec
or
cmpsl
out
xorb
dec
lds
pop
loope
adc
addb
push
or
or
jbe
cwtl
sub
fcomip
add
cmp
scas
sbb
nop
and
leave
push
lds
sahf
pusha
lock
decl
jg
and
out
and
sub
push
or
orl
xor
dec
stos
xchg
inc
incl
jns
xchg
xor
jle
mov
test
int
or
jmp
lcall
fcomip
decl
bound
adcb
test
pop
out
adc
mov
xor
cli
cmp
fwait
dec
xor
xor
cli
cmp
fwait
hlt
ret
pusha
or
sub
xchg
mov
adc
mov
call
push
and
push
jne
pushf
push
pop
js
rclb
and
or
cwtl
push
popf
add
sub
fdiv
fdivrl
jp
loopne
add
push
mov
jmp
dec
dec
popf
lods
inc
rsm
and
xchg
sub
push
cmpsb
push
add
rclb
outsl
clc
ljmp
jb
loopne
cmp
data16
inc
inc
pop
insl
cli
push
fadds
ljmp
dec
js
sub
dec
xor
fs
xchg
icebp
pop
sbb
testb
or
daa
movl
jb
popa
add
push
pop
int3
arpl
xor
call
mov
or
ss
insb
shrb
mov
movsl
jle
mov
lcall
ucomiss
inc
dec
jecxz
dec
mov
add
pusha
test
adc
mov
add
inc
andl
add
or
xor
rcr
dec
repnz
sbb
verr
or
pushl
push
mov
mov
pop
push
pop
inc
or
pop
adcl
lret
ds
cld
ljmp
sub
hlt
jne
lods
fistl
adc
add
push
sub
mov
movsb
xorl
xchg
ss
lea
pop
nop
sub
and
jg
int
lret
call
fadd
pusha
jecxz
dec
xorl
sbb
and
add
xchg
adc
sar
test
dec
pop
cli
cmpl
je
mov
or
rolb
popa
or
adc
sar
cmovs
xor
pop
dec
inc
push
orb
sub
push
ljmp
pushl
leave
mov
pop
push
scas
sti
push
aaa
inc
mov
jp
adc
lcall
mov
xchg
mov
xor
or
in
push
fsubl
fmull
jo
sti
cmp
in
ja
dec
stos
in
or
stos
popa
xor
adc
popa
push
ror
and
ret
inc
sarb
inc
mov
dec
sbb
inc
push
lret
in
push
jb
incl
dec
adc
push
and
shll
mov
cltd
js
adc
dec
movsl
mov
mov
rsqrtps
add
cmp
dec
cltd
pop
xor
or
mov
push
mov
sarb
test
xor
jne
dec
addl
out
aad
aam
out
lcallw
pop
cltd
cmp
dec
sbb
decl
ret
fwait
sahf
pop
cmp
lcall
add
incb
add
call
stos
sbb
mov
push
addb
icebp
test
and
push
cltd
inc
insb
pop
arpl
or
add
fistl
and
jp
rcrl
jne
xchg
cs
decl
mov
jge
mov
add
call
shlb
cmp
movsl
cli
ljmp
frstor
lret
sub
movsb
fldl
rolb
das
mov
sub
pop
mov
inc
pop
mov
fs
lcall
add
addr16
decl
mov
in
and
rolb
int3
imul
cmp
loopne
mov
mov
add
jmp
call
fists
dec
push
nop
cld
jmp
jae
in
pop
mov
mov
mov
sub
adc
pop
jb
incl
cmp
inc
lods
sbb
rclb
jmp
and
incl
mov
push
cwtl
faddl
cmp
gs
mov
loopne
stos
cmp
test
sbb
mov
out
pop
mov
inc
les
fwait
or
pop
push
sar
fildll
add
out
cmp
nop
adcl
add
lcall
add
sbb
testl
xchg
sbb
push
out
or
sbb
jle
fsubp
test
add
lret
and
insl
call
imul
mov
addr16
out
inc
sarb
xchg
push
mov
sbb
sub
jbe
jo
adcl
ljmp
lods
stos
push
mov
mov
inc
mov
pop
mov
sub
push
call
bswap
mov
cmp
inc
test
jmp
fwait
add
test
ljmp
mov
sub
inc
iret
test
xchg
cmp
gs
xchg
bound
dec
or
mov
insb
mov
popa
adc
loopne
pop
lock
and
loopne
cmpb
push
and
adc
call
inc
fldl
call
fs
lock
add
cmp
psllq
nopl
mov
or
mov
mov
idiv
outsl
ljmp
jecxz
jge
cs
div
push
jb
fcompl
sub
sub
adc
jg
mov
mov
xchg
push
xchg
push
push
push
in
mov
push
dec
mov
cmpsl
es
jmp
dec
xchg
sbb
int
sahf
imul
daa
test
pushf
fs
lods
imul
push
mov
call
test
dec
mov
ljmp
enter
pop
jl
loop
xchg
pusha
clc
lea
std
sahf
lcall
jo
decl
subl
and
jno
punpckhbw
inc
inc
dec
jg
repz
push
faddl
jae
adc
xchg
xchg
ret
imul
and
cmpsl
lods
jg
fstps
jne
gs
and
sub
push
sub
xor
cs
enter
decl
int3
insb
inc
out
scas
push
imul
cld
lea
cld
int3
sub
stos
mov
in
push
or
mov
cli
pusha
sahf
push
push
mov
test
jge
or
cmc
cmc
addl
movsl
js
aam
mov
fbld
adc
pop
cmpsb
lea
les
dec
rcrl
or
add
incl
insb
pop
inc
int3
sarl
ret
fsubrs
jmp
sahf
cmp
test
je
lahf
adc
inc
lret
jmp
nop
mov
icebp
cmp
pop
and
push
cli
fcoms
cltd
sarb
sub
lods
sbbl
pop
shlb
push
or
xor
or
jge
ds
or
cmpl
sarl
lea
xchg
decl
enter
or
and
inc
or
lods
mov
ljmp
mov
jmp
cmp
jp
push
xchg
test
jno
in
xchg
roll
sti
in
and
test
push
xchg
gs
nop
jne
les
jbe
dec
jae
mov
lock
adc
ljmp
pop
mov
xor
in
in
loop
cmp
add
out
movsl
aam
dec
add
dec
arpl
cmpsb
decl
mov
adc
add
nop
inc
loope
push
add
jg
jbe
cmpsl
and
dec
cmp
mov
lock
dec
push
mov
jg
push
sahf
xor
bnd
out
dec
imul
sub
jmp
inc
in
xchg
sub
mov
sub
adc
roll
push
sbb
mov
mov
ja
mov
cli
inc
jne
outsl
inc
aam
mov
loop
test
cmpsb
adc
xchg
and
inc
loop
push
push
dec
ret
mov
push
andb
into
dec
nop
leave
add
test
and
mov
dec
test
add
cmpsl
sub
outsl
xor
sarl
jo
and
jecxz
cmc
sub
call
cltd
or
pop
mov
adc
pop
cs
aad
push
mov
sbb
dec
sub
jmp
aam
add
sti
pop
in
aam
adc
jg
loope
and
fwait
and
imul
jmp
and
mov
and
mov
subl
push
pop
xor
jecxz
xor
xor
pushl
nop
fnstcw
sbb
adc
and
or
data16
insl
test
sar
jnp
sub
dec
sub
or
cmp
fistps
xor
mov
notl
imul
inc
sub
sub
push
push
cmp
mov
and
mov
lret
decl
or
push
orl
push
lret
or
xor
add
cmpl
mov
dec
and
add
adc
inc
in
js
push
scas
cli
and
mov
sub
xchg
xchg
out
insb
inc
subb
dec
and
adc
mov
in
ljmp
testb
xor
fldt
shlb
pop
outsb
int3
pop
and
mov
xorl
jmp
cmp
dec
inc
mov
fnstenv
mov
mov
jg
add
loope
call
outsl
pop
pop
xchg
or
in
lods
in
jecxz
push
int3
pop
push
mov
fistpll
sub
pop
xor
add
cmp
adc
outsl
cwtl
xchg
or
or
popf
add
jg
mov
enter
cmp
out
mov
call
cmp
mov
jnp
sti
lcall
sub
adc
xchg
lods
int
jmp
mov
ljmp
lahf
or
add
inc
jne
sub
clc
push
cmp
ja
stos
xchg
and
cmp
jb
push
pusha
sub
mov
jne
pusha
xor
lcall
mov
mov
pop
mov
lods
shll
sub
mov
cmc
mov
mov
jnp
add
jge
jg
push
mov
insl
xor
mov
popa
insl
dec
btc
add
mov
mov
in
cwtl
add
unpcklps
pop
lock
inc
dec
sbb
mov
dec
mov
xchg
cmc
shll
hlt
scas
ljmp
mov
push
ljmp
sbb
jnp,pn
sar
ficoms
rol
test
out
xchg
rcll
mov
decl
mov
pop
mov
mov
mov
lock
inc
lods
mov
adc
cmp
fmuls
cmp
mov
stos
int
xchg
stos
sub
inc
add
and
inc
mov
add
mov
or
mov
mov
sub
movsl
add
movsb
int3
ljmp
adc
cltd
xor
xchg
in
sbb
loopne
xor
cmc
call
call
mov
sub
xchg
aam
outsl
or
je
lret
decl
stos
add
insb
add
call
fpatan
adc
lods
roll
int
push
int3
xorl
or
sub
sub
loopne
pushf
out
bound
leave
or
and
repnz
adc
add
xor
fistpll
xor
lret
jmp
mov
jl
jge
pop
sbb
add
xor
sub
ljmp
divl
xchg
sysexit
into
fcmovnu
mov
fldl
gs
aam
decl
sbb
jb
push
scas
inc
pop
push
push
es
jne
lock
rolb
adc
cmp
ljmp
outsl
sbb
jle
sbb
mov
jmp
mov
pop
jno
push
xor
jae
bound
decl
aas
mov
xor
cmp
adc
jl
mov
push
pop
push
clc
in
xchg
in
dec
push
jl
fwait
xchg
add
mov
bound
into
pushl
cli
push
dec
nop
xchg
pop
mov
out
lock
pop
in
rolb
testb
xchg
cmc
outsb
std
cld
or
sarb
lret
dec
fadds
adc
push
sbb
ljmp
scas
push
sbb
inc
jecxz
xchg
std
xor
fistpll
mov
mov
loopne
rcr
cs
jg
adc
cmp
sahf
cmp
fisttps
mov
outsl
clc
loopne
ret
jbe
jle
mov
jl
push
lea
push
lods
pop
lods
fcomip
lcall
aad
leave
or
mov
ja
pop
jle
xchg
xor
add
pop
inc
rorl
gs
sub
inc
push
popa
jo
in
xchg
clc
mov
pop
flds
inc
aad
jp
scas
xorl
dec
adc
mov
lds
jg
sti
and
or
in
outsb
test
pop
sbb
addr16
jg
jb
inc
cmc
pop
sahf
jo
add
ficomps
cmp
mov
push
loope
test
js
cmp
rcr
jne
pop
roll
pushl
loopne
push
popf
mov
sbb
jns
cwtl
fwait
mov
incl
mov
inc
dec
cmp
mov
je
ficoms
mov
pushl
adc
enter
test
jns
sub
sbb
mov
adc
xor
lcall
adc
mov
xchg
xchg
loopne
sahf
leave
push
sti
dec
dec
dec
inc
popw
lock
jg
jno
inc
cs
push
sbb
mov
or
sub
cli
fildll
push
sub
cwtl
std
insb
pushf
cmp
sarl
in
sbb
pusha
mov
and
push
imul
pushf
imul
adc
cmp
cmpsl
jmp
incl
dec
jbe
dec
ss
shll
or
ret
enter
jge
sbb
lcall
icebp
sub
repnz
xchg
xchg
sub
xchg
dec
push
and
push
sbb
mov
rol
cmpb
mul
lahf
fs
int
rclb
mov
int3
sbb
add
sub
lods
and
cmp
outsl
in
mov
sbb
add
lahf
mov
hlt
test
push
mov
ljmp
sbb
in
push
cmp
popf
in
dec
aam
add
popa
adc
add
or
pop
adcb
cmp
cld
lods
fcomps
jns
notb
xchg
call
std
sub
f2xm1
pop
cld
lock
lods
adc
adc
pushf
inc
xchg
clc
and
mov
push
pushf
fldt
aam
mov
sahf
inc
sbb
xor
clc
adc
inc
jmp
and
test
xchg
sbb
push
pop
js
and
mov
call
jbe
and
cmp
sbb
push
cld
mov
jp
je
outsb
adc
xchg
pop
inc
mov
and
push
cld
decl
bound
sbb
xor
popa
repnz
pop
push
ficomps
xchg
jmp
popf
and
adc
addr16
fiaddl
inc
or
push
or
and
in
cmpsl
in
push
cs
lcall
incb
inc
mov
pop
andb
shlb
pop
out
adc
ljmp
test
sbb
push
xchg
lea
cmc
sub
pop
push
test
pop
dec
ljmp
jle
adc
fsin
pusha
xchg
pmuludq
ja
adc
mov
test
stos
in
dec
dec
push
xor
push
ljmp
cli
or
xchg
mov
loop
ss
ficoml
mov
xor
sbb
jo
loop
cmpsb
push
cli
mov
push
push
fsub
fstpt
dec
data16
decl
and
out
stc
dec
push
mov
movsb
xor
fildll
sti
shl
mov
xchg
mov
outsl
out
das
adc
loop
subl
cld
and
sub
decl
stc
add
sbb
pop
xorb
mov
adc
arpl
decl
test
aas
cmp
add
mov
cmp
dec
inc
jne
xchg
mov
jb
or
fwait
repnz
push
addr16
xchg
ljmp
shr
pop
sbb
jne
mov
dec
shlb
sbb
test
shll
test
decl
pop
cltd
sbb
je
jo
mov
mov
repz
ja
sub
jg
dec
lods
ret
lret
stos
lods
fstpt
xchg
sbb
clc
aaa
jl
mov
divl
pop
and
test
idivl
pop
jne
mov
lret
imul
and
mov
adc
popf
dec
outsl
cmpsl
xchg
call
pop
pop
push
daa
cld
xchg
ljmp
sub
mov
fwait
xchg
adc
ljmp
and
sbb
dec
ret
popa
pop
insl
or
insb
jae
out
mov
aaa
push
cld
dec
ja
inc
outsb
push
add
push
fldcw
je
push
movsl
fnstcw
add
pop
out
jne
incl
sub
or
nop
add
xor
fidivrl
adc
pop
adc
cli
ljmp
cmp
pop
cmc
xor
js
sbb
adc
jae
mov
push
cs
dec
fadds
leave
popa
in
insl
add
cmpl
pop
scas
les
add
jp
pop
mov
leave
add
ljmp
mov
mov
test
addr16
les
mov
scas
cld
pop
div
decl
test
inc
imul
jae
push
decb
mov
lret
popf
pop
pop
insb
lret
dec
call
hlt
insl
xchg
lret
add
stc
into
or
enter
popf
out
sub
decl
or
xor
fs
cmp
rclb
add
mov
fs
fwait
sbb
lods
inc
mov
out
cli
hlt
lahf
push
xor
cmpsb
ss
sub
clc
inc
loop
mov
push
cmpl
add
push
mov
jmp
mov
dec
lea
push
int3
cmpsb
dec
ret
adc
mov
dec
test
mov
gs
ud0
icebp
pop
sbb
test
or
dec
imul
loop
jo
pushf
les
int3
sub
and
ljmp
xor
lcall
inc
fs
rol
jo
push
incl
mov
das
repnz
insl
mov
jno
xchg
ficoms
mov
mov
lcall
mov
popf
call
mov
lock
add
outsb
addl
int
mov
pop
add
jnp
and
jmp
add
xlat
lock
pop
add
ja
cmpsl
or
ljmp
or
cmp
shrb
gs
test
sbb
insb
aam
mov
add
ss
pop
or
jmp
add
lods
lds
enter
and
push
xor
stos
push
ljmp
lcall
add
inc
cmpl
push
mov
fbstp
enter
mov
jmp
or
cwtl
pop
js
aad
pop
ss
mov
mov
mov
call
and
jl
rorb
les
xchg
movsl
pop
mov
pop
or
ljmp
ljmp
sub
adc
stc
push
in
adc
sti
jle
sub
cmp
xor
inc
adc
mov
mov
out
gs
sub
mov
adc
shl
pushf
cmpsl
mov
pushl
insl
cmp
mov
ljmp
aaa
mov
in
sbb
or
add
nop
lret
dec
lea
or
cmp
scas
loopne
inc
xchg
sbb
push
add
cwtl
popf
xchg
dec
jge
jle
insl
or
dec
xor
jl
cmp
mov
cmp
cmp
xor
xchg
pop
ret
cmp
ret
insl
mov
adc
cmp
lea
and
and
push
jno
decl
aaa
push
adc
imul
addr16
cs
inc
xor
cld
mov
sbb
outsb
xor
aas
shrl
stos
outsl
push
jg
add
pusha
test
repnz
cmp
scas
fstpl
arpl
cmp
lea
push
xchg
adc
xor
call
icebp
mov
mov
xor
lcall
cmpsl
cwtl
push
aaa
push
jo
xchg
mov
add
or
xchg
pop
adc
add
ljmp
cld
leave
sub
call
dec
xchg
or
into
push
and
sar
jg
adc
mov
and
in
movsb
xchg
ffreep
pop
icebp
xor
jg
stc
scas
jle
push
xor
mov
adc
mov
cmp
roll
stc
fstps
fsubrl
fcmovu
lock
sub
jge
cld
pop
dec
rep
out
or
pushl
sub
shlb
push
xor
shrb
leave
icebp
and
xchg
adc
push
rorb
ljmp
hlt
stc
lahf
push
cwtl
das
push
fdivrs
clc
xor
xchg
lret
sub
mov
decl
and
or
rorb
add
pop
mov
and
sbb
in
in
or
decl
int3
sbbb
jns
std
push
sahf
mov
stos
mov
inc
xchg
imul
xchg
push
inc
sbb
mov
lret
paddd
fs
lea
aam
andb
gs
test
or
mov
jmp
add
xchg
daa
pop
mov
insl
adc
es
popf
push
mov
sub
test
add
daa
enter
add
sub
xchg
cmpsb
sbb
mov
lods
adc
pusha
xchg
cmp
hlt
std
stos
mov
test
lock
dec
adc
bound
lcall
or
call
push
aaa
fildl
cmpsl
rorl
jae
cmc
pop
repz
sar
or
es
pop
in
mov
push
cld
pop
cmp
into
pushl
cmp
inc
fsub
movsb
je
int
loope
imul
sub
jbe
push
mov
adc
inc
ds
pushl
cmp
movsl
dec
fcoms
inc
aaa
mov
mov
add
outsb
imul
fsubp
and
push
movsb
cmp
push
sub
push
rorl
mov
adc
or
stos
pop
add
in
inc
lods
loopne
in
enter
arpl
scas
scas
push
and
mov
pop
call
out
sbb
popf
js
pusha
daa
pusha
insb
loop
cmp
lcall
mov
pop
ret
jl
outsb
test
loopne
adc
push
insl
push
pushf
sti
mov
decl
inc
xchg
mov
lcall
mov
push
fdivrs
lods
jmp
add
mov
les
mov
pop
movsb
add
mov
shll
incl
jae
push
xor
sub
das
ret
cs
jg
in
enter
xor
xor
xchg
scas
xor
sbb
movsb
stos
push
loopne
lcall
aad
mov
leave
and
or
xor
inc
add
in
push
in
push
js
ss
mov
lahf
jne
lcall
les
adc
jne
out
jns
cs
sub
and
ljmp
cltd
and
pop
pop
jmp
pushf
jb
pop
fcomi
ret
jne
and
push
lahf
decl
jl
pop
inc
mov
int3
dec
push
rol
sti
push
and
add
fldenv
dec
xor
mov
ljmp
mov
xor
adc
xor
sbb
xor
mov
pop
cmpsb
aas
xor
or
dec
inc
enter
insb
adc
cmp
and
adc
mov
ret
cmc
ds
pop
or
sub
sub
icebp
test
gs
xchg
push
stc
add
lret
arpl
xchg
icebp
fildl
dec
adc
dec
xor
inc
mov
jmp
pop
icebp
popf
jns
sarb
lret
andb
lret
add
xchg
enter
lods
shl
mov
scas
insb
mov
or
push
cs
push
push
in
sarb
and
movsl
lea
or
push
inc
push
pusha
hlt
push
jg
aaa
sub
or
jb
cmpsl
add
rorl
fsubrl
jecxz
lods
jmp
mov
inc
xchg
or
cmpsl
dec
movsl
subb
pop
imul
out
xchg
inc
sbb
push
push
mov
and
add
add
ret
sbb
aad
jg
mov
outsl
insl
pusha
xor
sub
lret
pop
nop
and
ret
pop
not
lahf
add
imul
add
inc
fwait
mov
pop
incl
cmp
int
int3
inc
addl
xchg
push
adc
cli
ljmp
iret
xchg
fistpll
dec
lcall
jae
je
lret
in
call
sbb
mov
mov
adcl
shll
fidivrl
adc
xor
cmp
push
add
sbb
xchg
call
fstl
dec
jg
sbb
pop
insl
sti
xchg
mov
je
push
pop
testb
xor
mov
fcomip
xchg
jl
lock
aas
adc
sbb
inc
frstor
aas
add
push
sub
cwtl
xlat
and
push
aas
mov
aam
dec
jl
inc
adc
dec
or
inc
incl
mov
sbb
pop
jns
xlat
push
ret
ss
pushl
xor
out
jb
cmpsl
loop
push
mov
cld
sbb
imul
xor
adc
cmp
in
jecxz
negb
push
dec
push
sub
xchg
insb
call
pop
jecxz
mov
cmp
xchg
hlt
call
xor
and
popa
scas
inc
mov
xchg
arpl
std
lret
sbb
fcompl
sbb
cwtl
push
sub
push
testb
ret
cmp
adc
sub
mov
fs
loopne
mov
fwait
push
shr
es
push
xor
call
jmp
jg
jmp
xor
mov
pop
jecxz
fdivs
adcb
push
add
mov
insb
adc
ljmp
sbb
xchg
neg
sbb
mov
mov
push
idivl
dec
jg
mov
or
jbe
lahf
repnz
sahf
jle
cmpsl
push
testl
adc
scas
mov
add
inc
aam
js
pushl
sbb
ljmp
sbb
nop
stos
jne
stos
or
dec
and
mov
ja
outsb
int
movl
push
dec
mov
dec
out
loopne
dec
popf
xor
aam
push
jnp
jp
mov
dec
jecxz
insl
push
add
negb
das
jne
lcall
scas
and
negl
andl
push
repnz
mov
call
lcall
adc
les
clc
mov
adc
rclb
jmp
mov
mov
mov
aas
adc
jle
ljmp
sbb
out
jp
push
test
add
adc
xor
je
nop
xchg
lcall
cmpl
inc
push
inc
xor
dec
icebp
ljmp
pop
js
mov
jg
fs
call
push
inc
push
sbb
and
sbb
jo
lahf
and
add
ljmp
lahf
ljmp
sbb
mov
outsl
xchg
outsl
mov
dec
xchg
sbb
push
mov
adc
movsb
dec
movsb
pop
lretw
loope
or
jns
mov
pop
dec
movsb
dec
mov
sbb
mov
jmp
jl
insl
decl
or
mov
jp
jge
loope
sbb
xor
cmp
loope
xchg
xor
mov
or
mov
jecxz
decb
cmp
push
out
pop
and
mov
push
lret
dec
push
cmc
stos
data16
jge
fcomip
jb
push
test
rclb
mov
and
dec
sti
or
filds
dec
bound
push
repnz
mov
dec
sahf
mov
ljmp
dec
or
es
ret
daa
or
div
cltd
aaa
or
xor
lcall
jnp
push
clc
or
rcll
mov
loopne
mov
mov
sahf
add
mov
outsb
add
das
xchg
dec
es
sub
add
imulb
inc
fcomp
cmp
mov
out
pop
mov
mov
or
pop
insb
add
add
loopne
add
ja
adc
or
xor
mov
or
jg
pop
mov
add
dec
pop
or
mov
subl
lcall
test
loop
filds
push
insl
insl
mov
fbld
jne
or
in
cmp
decl
sub
or
dec
cmp
inc
cmc
mov
ljmp
iret
pop
mov
enter
outsb
lods
add
dec
inc
cltd
fsubp
xor
lock
decl
roll
and
sbb
adc
jo
popa
xchg
outsl
sar
into
pop
in
or
inc
sbb
add
push
jl
and
sti
mov
cmp
mov
jg
adc
outsl
clc
decl
cwtl
loop
mov
jge
sub
inc
mov
mov
jg
scas
fsubrp
or
outsb
popf
or
inc
int3
sbb
xorb
push
fiadds
dec
rcll
fs
stos
test
outsl
inc
stos
jge
sbb
dec
mov
jmp
ljmp
outsb
inc
into
adc
js
mov
cs
stos
rolb
inc
adc
inc
push
cmc
sti
daa
mov
push
cld
dec
mov
int
inc
pop
mov
push
sarl
lds
or
or
pusha
xor
cltd
cmpsb
push
sbb
sub
aas
lahf
repnz
push
lret
lcall
imul
leave
and
pop
sysret
addr16
mov
rcl
lods
shlb
jle
mov
sub
movl
clc
dec
je
pop
and
push
fbld
lret
shlb
mov
or
test
popf
pop
xor
dec
and
rolb
arpl
cwtl
mov
cmc
jl
fiadds
sub
push
mov
inc
pushl
outsb
add
xor
aad
sbb
mov
cli
mov
ds
push
cmp
enter
ljmp
imul
jo
into
push
xor
pop
adc
pop
test
and
inc
mov
mov
sbb
push
jne
out
and
cs
ja
bound
add
mov
lea
enter
out
scas
std
xor
call
lret
add
mov
mov
ljmp
sbb
rclb
je
es
shll
dec
ret
sub
or
rclb
mov
sub
pop
xlat
call
fs
jmp
xchg
ljmp
pop
addl
rorb
lgs
decl
nop
push
xchg
or
push
icebp
scas
mov
mov
int3
out
jo
push
ret
ljmp
frstor
sub
mov
dec
mov
pop
cmp
inc
dec
add
stc
sbb
cmp
or
xor
fsub
xor
add
pop
and
pop
lock
mov
jo
outsl
ljmp
mov
jl
jl
jb
push
test
add
sbb
jg
jl
ljmp
dec
repz
ja
dec
sbb
mov
cmp
je
pop
xor
rcrl
sub
pop
lea
inc
pop
cmpsb
push
cltd
push
pop
push
push
jl
or
lods
pop
ficoml
cs
mov
add
loopne
clc
mov
arpl
in
je
sbb
mov
mov
mov
jge
adc
imul
je
pushl
dec
addr16
push
sub
pop
lret
sahf
ljmp
and
dec
xchg
dec
pop
dec
adc
scas
mov
repnz
push
sub
push
sbb
lea
cmpsb
movl
pop
cwtl
rcll
jns
sbb
adc
mov
fiadds
cmc
in
out
out
mov
call
sbb
dec
clc
xchg
jnp
call
std
pop
pop
shlb
or
mull
mov
cmp
add
push
sub
shlb
pop
insb
cmp
test
scas
mov
adcl
es
xor
mov
decl
cwtl
js
add
rsqrtps
movsl
pop
imul
and
insb
outsl
inc
and
sti
jmp
sar
sub
shl
aas
stc
or
or
jg
es
scas
mov
mov
dec
sub
int
push
inc
xor
or
clc
test
ljmp
fsubrs
test
xor
mov
loopne
cmp
lea
repz
add
or
shlb
sub
jp
sub
pop
pushw
nop
or
lods
adc
pushl
pop
movsb
inc
push
in
cmp
cmp
sar
addb
cmp
scas
std
jg
rcrl
add
adc
mov
add
mov
pop
push
rolb
mov
decl
push
sti
push
je
test
mov
ret
jecxz
mov
adc
lds
fs
mov
sub
mov
fs
decl
mov
mov
or
jne
xor
lcall
xchg
test
jb
frstor
cmpl
pop
insb
in
adc
inc
imul
nop
jno
decl
add
rolb
es
aas
lds
pop
sub
fmulp
sahf
or
sar
pop
int
push
and
add
hlt
stos
cwtl
movb
push
les
inc
push
pop
dec
ljmp
and
repnz
dec
je
xchg
and
mov
hlt
xlat
xor
ljmp
add
int3
push
aaa
mov
xor
fcomip
or
sbb
cmp
push
mov
loopne
mov
rolb
loop
pop
or
xor
movsb
cmpb
push
cmpsl
adc
xorl
ljmp
and
xor
sub
sub
sbb
cmpsb
cli
push
clc
out
dec
movsl
leave
les
cmp
ret
je
in
pop
mov
in
xchg
pop
gs
push
sbb
pop
scas
mov
inc
jno
inc
or
adc
in
subb
push
pusha
incl
clc
aas
and
ds
je
pusha
scas
dec
sbb
xchg
test
decl
loopne
imul
and
lods
mov
push
xchg
pop
dec
push
add
in
or
dec
clc
mov
add
icebp
arpl
js
imul
les
adc
and
incl
sub
or
pop
xor
inc
inc
push
repz
cmpl
hlt
clc
push
or
inc
adc
or
pushl
cld
loope
test
adc
rcl
scas
inc
push
dec
or
and
filds
jp
or
call
and
adc
sub
inc
dec
jmp
fld
xchg
push
add
loopne
xchg
mov
xchg
dec
mov
and
movsb
ljmp
adc
in
aaa
movsl
in
or
cmp
add
mov
es
add
xchg
add
dec
aam
push
ret
test
jo
andb
adc
mov
or
lcall
call
loopne
ficoml
iret
dec
jb
dec
xchg
dec
adc
stc
lds
or
inc
test
lcall
sti
in
or
sarb
mov
in
out
ljmp
jb
sarl
test
or
mov
sbb
push
cli
push
lock
cmp
jno
jns
fmul
outsb
shll
cmp
mov
jns
cmpsl
jne
lock
decl
add
xchg
subl
rorb
sbb
in
or
push
cmpsl
adc
in
push
testb
push
mov
add
ret
add
pop
xchg
pop
pop
jmp
cmc
decl
mov
cs
rorb
pop
pop
ds
jle
data16
decl
sub
cwtl
inc
mov
push
pop
dec
out
sub
setnp
push
add
xchg
xor
in
repz
push
pushl
repnz
mov
in
jp
push
mov
lea
sbb
add
sar
fisubl
xor
insl
or
and
dec
pushl
dec
addb
shrb
push
or
pop
rol
adc
cmp
push
lret
xchg
rcll
jp
or
call
lret
roll
xor
push
movb
xchg
mov
mov
jno
cmp
shlb
shll
mov
mov
adc
in
mov
add
sub
sbb
insb
add
mov
inc
cli
xchg
mulb
nop
int
add
decl
ljmp
imull
sub
rolb
inc
icebp
test
clc
jmp
mov
inc
cmc
jo
jle
sub
push
sub
call
push
rorb
sbb
lds
subl
and
cmp
cwtl
ret
ja
adc
inc
andb
mov
lods
gs
mov
fldt
lock
sub
add
pop
jbe
fildll
movsl
sub
add
mov
inc
enter
in
rolb
push
into
sbb
jle
and
decl
cmc
pop
je
int
and
shrb
loopne
loop
outsb
adc
pushl
mov
push
or
mov
dec
xchg
adc
mov
dec
xchg
stos
into
lcall
inc
idivb
push
lcall
inc
and
xor
xchg
mov
out
pop
and
xchg
pushl
push
adc
inc
dec
sub
js
imul
jns
pop
sbb
dec
xor
and
cmp
sbb
push
dec
jne
pop
aad
lea
pop
loope
fs
je
sti
ret
int3
pop
gs
dec
mov
mov
aas
lcall
mov
add
mov
jns
mov
incl
cmpsl
add
jle
or
cli
call
cltd
sbb
decl
sbb
lods
shld
push
adc
xchg
mov
push
xchg
pusha
jl
ja
clc
inc
lcall
jp
mov
mov
inc
les
decl
mov
dec
out
push
punpckhdq
decl
sub
jp
loop
dec
sub
sub
pushf
decl
sub
jmp
test
mov
xor
scas
clc
ljmp
push
loop
push
arpl
jge
inc
subl
push
jmp
lock
repz
add
decl
push
or
inc
dec
jo
sub
data16
cmp
inc
pop
ret
pop
cmp
lcall
test
aaa
dec
and
psubsw
pop
orb
in
std
sbb
insl
pushl
fwait
jg
test
mov
mov
cwtl
adc
and
xor
adcb
mov
repnz
push
jmp
push
rclb
cmp
or
dec
ja
and
pop
cmp
in
dec
push
or
or
das
je
stc
xchg
lea
cmpsb
mov
mov
roll
sub
inc
in
push
push
sbb
sbb
pop
fs
div
mov
sub
mov
sbb
loop
ljmp
fidivrl
stc
inc
lock
xor
fnstenv
aad
test
fdivrs
ljmp
add
add
les
pop
push
add
pop
insl
insb
push
xchg
adc
jmp
cmp
mov
pop
andb
out
or
mov
mov
dec
jae
int3
push
jg
adc
decl
jne
sbb
xor
fs
stos
sbb
pop
and
call
aad
cmp
in
ds
and
push
pusha
pop
mov
inc
loopne
push
leave
sub
aas
insl
data16
cmp
push
dec
sbb
cmp
shl
xor
in
mov
clc
int
icebp
mov
push
stos
adc
out
or
jbe
scas
jne
enter
mov
bound
sub
lea
pop
ret
and
shl
push
shl
and
push
aas
dec
mov
cld
and
xor
sbb
xor
ja
std
sahf
sbb
clc
mov
incl
aas
dec
mov
cli
notb
or
pop
jle
es
lcall
fwait
insb
jno
pop
xlat
aad
insb
jg
clc
xor
jo
inc
mov
mov
xor
repz
mov
lock
add
xor
add
lcall
jbe
push
lcall
sub
pop
notb
imul
gs
jge
dec
and
cmp
jns
xchg
push
xor
pop
shrb
ljmp
leave
sbb
roll
aaa
aad
test
jne
imul
sub
icebp
xor
addb
add
aas
aaa
lds
mov
cmp
in
inc
or
mov
inc
add
ljmp
xor
lahf
jmp
pop
xchg
cmp
or
mov
mov
jne
addb
mov
and
xchg
cmpsl
pop
add
adc
mov
jbe
scas
cli
mov
push
cmp
and
out
je
push
cmp
in
or
call
cmp
inc
imul
lods
mov
in
or
and
add
fdivr
leave
mov
adc
fbstp
les
xchg
stc
pop
adc
cmpsl
mov
push
shrb
dec
rolb
mov
cmp
loopne
push
adc
inc
add
shlb
flds
xchg
iret
fdivs
cmpl
ljmp
xor
enter
addr16
cmpsl
js
loop
fiaddl
inc
xchg
shlb
std
decl
push
xor
jb
fwait
push
inc
push
hlt
inc
mov
in
inc
push
jp
cmp
mov
mov
jg
pop
dec
sbb
xchg
add
inc
lsl
test
ljmp
sbbb
mov
int3
dec
loope
adc
pop
inc
pop
or
outsl
and
or
clc
decl
inc
add
cmpsb
sbb
mov
push
adc
push
add
in
push
mov
add
ss
xchg
stc
jg
loop
test
pop
inc
ficoml
sbb
jae
add
pop
fimuls
sbb
sub
bnd
je
nop
test
insl
inc
mov
cwtl
dec
mov
mov
rolb
push
mov
and
add
rclb
xchg
jo
adc
lcall
pusha
jecxz
sarl
mov
cmp
cmp
or
sub
subb
test
in
sub
jecxz
dec
push
andb
pushf
call
scas
xchg
mov
outsb
mov
inc
dec
inc
lea
add
ljmp
dec
aam
adc
mov
nop
or
inc
adc
stc
xchg
adc
adc
stos
decl
xor
and
and
decl
lret
pop
jns
movsl
test
addb
xor
mov
bound
and
or
xchg
sub
pusha
icebp
mov
xchg
ret
dec
inc
push
int3
or
and
or
mov
call
jns
in
lcall
sub
out
push
xor
push
in
cmpsl
mov
shlb
es
pop
mov
aam
out
loopne
lcall
and
mov
lahf
lods
pop
inc
cmp
sbb
in
xor
or
bound
and
mov
xchg
test
je
jne
repnz
add
fwait
sbb
or
cmp
xor
femms
dec
cmp
dec
enter
out
lcall
adc
cmp
call
dec
sbb
mov
into
pushf
fcomip
in
sub
fcompl
xchg
xchg
xchg
andb
dec
mov
test
inc
loopne
decl
dec
into
add
bound
and
fildll
adc
sbb
cmp
xlat
dec
sti
pop
fidivs
inc
iret
aaa
add
pushl
inc
xchg
outsl
xchg
adc
add
mov
scas
cmp
je
out
int3
sbb
xchg
sub
push
push
push
add
das
mov
sbb
or
ljmp
sbb
mov
enter
fwait
int3
jo
jns
leave
orl
push
loopne
incl
push
lea
cld
cmp
es
sbb
jp
call
or
dec
in
imul
call
cmp
fisubs
mov
sub
cld
scas
mov
aam
pushaw
ss
inc
xchg
inc
pop
lea
xchg
ds
cmpsl
rcrb
cmp
jmp
fsubrl
push
jl
ret
cmpb
xchg
std
insl
lcall
popa
sahf
jnp
ds
inc
or
inc
dec
mov
or
add
and
lcall
mov
sub
imul
mov
lret
cli
sub
sub
dec
ds
popf
xchg
push
andb
fldenv
add
mov
inc
sbb
jge
cmp
or
xor
mov
inc
pusha
ret
add
xor
add
push
push
call
test
inc
jnp
push
test
movsb
mull
xor
pop
cs
pushl
cld
lret
addr16
xchg
or
pop
fcompl
ss
mov
sub
sub
sub
sbb
jbe
xchg
xchg
nop
movsb
and
xor
cmp
dec
push
sbb
and
decl
cmp
xlat
jle
jle
ss
pushf
mov
pop
cmp
ja
jl
sub
orb
jg
dec
rol
orb
notl
inc
cmp
lock
ljmp
js
xchg
pushf
repnz
adc
addb
dec
pop
test
ljmp
mov
clc
mov
push
add
test
pop
mov
fbstp
mov
dec
push
lods
add
and
and
stos
lahf
stos
movsl
js
add
add
mov
xchg
lds
dec
cld
ljmp
push
push
rcrb
dec
xchg
fnsave
mov
add
push
nop
cmp
sub
aad
xor
daa
and
jg
inc
inc
sbb
ret
cmp
int3
dec
int
dec
xor
imul
jo
test
fbld
or
dec
cmp
adc
insl
iret
fisubl
pushf
out
in
int3
mov
dec
or
cli
push
jg
sub
pushf
and
aaa
cmp
pop
mov
push
push
ljmp
lds
stos
add
ret
cmp
pop
lods
inc
mov
ljmp
fcoms
jp
sahf
and
test
cltd
xchg
lods
xchg
mov
fildll
adc
pushl
add
cmp
or
es
cmp
decl
addl
aaa
sub
push
jmp
and
jb
jg
add
in
lods
xchg
hlt
fildll
cli
fbstp
pop
popa
iret
mov
clc
fisubrl
sub
sbb
mov
dec
cmc
adc
aam
jp
call
movsb
pop
dec
and
js
mov
jg
std
push
ret
push
subb
fs
inc
add
dec
sub
ficompl
int
add
cmpb
push
push
pop
mov
push
xchg
out
jg
bound
mov
and
dec
xchg
and
cmpsb
cs
jle
add
jp
ljmp
ja
shr
enter
hlt
xor
stos
dec
adc
push
mov
add
cmp
clc
int
call
xchg
test
push
les
dec
mov
sbb
inc
xor
jg
rol
bound
call
pop
addl
inc
pop
out
addr16
push
xchg
dec
lea
lcall
sbb
out
add
cwtl
rcl
and
mov
je
js
jg
mov
sbb
add
pop
nop
lret
and
pushl
sbb
insb
inc
mov
icebp
or
adc
fisubl
test
xor
ljmp
test
and
cmpsl
sbb
sbb
inc
jg
das
jp
dec
mov
xchg
into
aas
mov
xor
int
aam
scas
add
or
or
xchg
jp
mov
mov
das
popf
lock
mov
inc
das
sar
rcll
jo
hlt
mov
pop
adc
xchg
leave
cwtl
mov
push
add
popa
rolb
dec
sbb
dec
mov
jmp
and
push
sarb
lods
add
scas
pop
rolb
cmp
mov
out
mov
pop
in
ljmp
dec
pop
jg
add
dec
sub
xor
fbstp
dec
fcom
adcb
scas
jg
rcrl
sarb
out
dec
mov
mov
cmpsl
jo
inc
push
jle
int3
sub
or
lcall
adcb
jmp
outsb
dec
cld
mov
cmp
je
mov
idivb
cmp
je
mov
cmp
push
jns
mov
inc
or
movl
insb
xor
sbb
or
rorb
lods
jmp
fildl
jnp
inc
pop
or
push
sub
cmp
mov
xchg
mov
xor
push
stos
xor
jg
sub
mov
xor
jge
mov
decb
out
cli
xchg
or
js
cltd
enter
ljmp
lret
inc
scas
ja
xlat
jecxz
js
mov
dec
hlt
lcall
and
mov
icebp
pop
cmovge
ss
push
mov
pop
mov
push
sbb
sub
mov
mov
repnz
sahf
push
mov
stos
adc
sar
pop
and
lret
pushf
hlt
dec
lret
fwait
mov
outsl
cli
lret
mov
xor
mov
mov
adc
in
stc
pop
mov
scas
inc
pop
popf
push
leave
add
clc
sbb
mov
sub
cmp
call
loopne
mov
cwtl
cs
jp
pop
ret
test
and
das
xchg
cmp
adc
and
push
cmp
lods
ljmp
pushf
mov
add
or
pop
lods
pop
or
push
mov
adc
jmp
and
pop
cld
decl
or
shl
xchg
imul
sbb
inc
mov
loop
decl
mov
mov
adc
pop
test
xor
pushl
xor
ret
dec
xor
fwait
call
fiadds
cs
fstpl
ds
jno
out
ret
jmp
push
mov
adcl
jmp
testl
fildl
add
jo
or
dec
mov
cs
fs
and
shll
dec
cmpb
cmp
sbb
insl
inc
xor
rolb
enter
push
dec
incl
inc
jl
jg
xor
inc
adc
add
lret
jae
jp
icebp
ljmp
sbb
and
sbb
lcall
jmp
xlat
imul
lcall
inc
shlb
mov
into
test
dec
add
into
xchg
pop
out
jmp
adc
sbb
loope
push
or
or
imul
mov
sbb
jle
clc
ljmp
ss
cmp
cmp
sti
shll
jne
add
xor
or
add
js
lock
and
xor
sub
jg
mov
fiaddl
and
outsl
lret
nop
jmp
adc
jg
and
decl
inc
or
add
or
inc
push
jb
cmc
jno
test
add
fnstsw
jno
mov
dec
rolb
in
dec
or
dec
jecxz
or
or
mov
rcrl
adc
adc
xchg
mov
push
sub
adc
and
jl
call
divl
clc
nop
xor
cwtl
push
out
cmp
test
call
int
sub
addl
add
pop
icebp
insl
fcomip
call
cmp
cwtl
cld
int
xor
loopne
pop
hlt
stc
mov
inc
push
jmp
or
dec
iret
popa
cmp
ljmp
cmp
pop
add
or
aam
es
ss
cmp
xor
push
and
mov
adc
cld
sbb
dec
push
mov
scas
adc
add
pop
out
clc
sub
and
mov
std
and
ret
loopne
add
add
int
decl
or
push
add
cmp
pop
shr
and
jae
je
ljmp
cmp
into
imul
mov
pop
and
sti
and
clc
decl
add
push
pop
push
add
adc
js
sbb
inc
in
inc
xor
andl
pusha
in
jae
pop
or
fsts
sub
decl
xchg
and
jg
leave
dec
cmc
imul
test
xor
movsb
decl
add
cs
sub
pop
push
daa
jno
jo
imul
pop
movsb
fiaddl
add
popa
sub
pop
mov
inc
jb
cmp
mov
out
lods
mov
dec
imul
or
inc
push
cmpsl
ret
ljmp
stos
cmp
lock
push
scas
je
adc
or
add
movsb
outsb
bound
sbb
decl
int3
jmp
lea
cmp
imul
jecxz
push
mov
jns
loope
push
data16
lods
cmpsl
xchg
dec
sbb
pop
out
dec
push
mov
mov
std
push
push
jno
fmul
mov
jg
decl
mov
mov
adc
push
xchg
and
mov
loopne
stos
mov
mov
mov
inc
cmp
sbb
jge
xor
or
popa
adc
mov
outsb
les
dec
ret
into
scas
scas
pop
cmp
ljmp
mov
js
std
bound
mov
xchg
shll
xlat
adc
xchg
es
lods
pop
cs
mov
inc
cmovno
cwtl
sbb
outsb
inc
or
js
xchg
clc
fcomip
lods
cmp
cmp
mov
cmp
std
push
bound
ds
ljmp
mov
clc
xchg
jo
dec
stos
je
stos
loopne
mov
and
nop
cmp
or
jns
cmpsl
dec
cmpsb
loopne
adc
jne
push
and
mov
sbb
push
subl
pop
push
sub
sub
lcall
fcoms
xor
lods
xchg
cltd
and
xchg
xor
mov
cmp
std
xor
test
sbb
lods
ret
out
cli
cmc
pushf
sar
pop
mov
pop
inc
pushl
push
rcll
mov
cwtl
psubq
fdivrp
ljmp
loop
dec
sbb
or
dec
dec
cld
nop
mov
and
mov
sbb
cmpsb
jnp
xchg
xor
cmp
mov
adc
loopne
or
popf
push
cld
aaa
xchg
mov
jmp
leave
push
bswap
imul
add
int
fcmovb
sub
sbb
pcmpgtw
push
outsb
mov
sbb
mov
cmp
out
push
sahf
leave
push
mov
lods
adc
mov
fwait
insl
cld
sub
fdivr
adc
rorb
ret
xchg
clc
mov
pushl
sub
lods
jge
ret
jmp
push
dec
stos
pop
pop
or
adc
sbb
test
push
and
decl
pop
mov
push
shll
push
enter
sub
movsb
cmpsb
sub
inc
mov
les
or
mov
enter
nop
cwtl
jmp
jp
sete
add
mov
sbb
addb
das
add
push
xchg
mov
int
iret
jo
in
fmull
push
jne
call
jb
inc
push
movsb
popa
add
outsb
cmpsb
rorl
or
in
and
dec
push
gs
call
orb
push
jecxz
adc
sbb
loope
push
push
mov
popf
out
jg
jg
add
lock
test
jl
or
cli
add
addb
lcall
ljmp
cmc
and
and
aam
lcall
mov
xchg
call
popa
faddp
inc
jb
adc
and
mov
pop
or
pop
orb
pop
and
xlat
xor
sbb
xchg
cmp
pusha
std
dec
dec
jmp
fbstp
xchg
dec
lret
andb
aaa
les
xlat
mul
pop
daa
and
call
sarb
movsl
fdivl
add
int3
popf
mov
sub
dec
dec
or
adc
inc
repnz
and
lock
lds
sub
std
in
ljmp
pop
faddp
add
enter
pop
in
pop
mov
decl
push
sti
mov
andl
fs
fists
mov
icebp
cmp
and
dec
std
cmp
add
enter
xchg
adc
add
mov
cmc
ss
testl
lods
pop
out
mov
ljmp
mov
push
cmpb
xor
shrl
cmp
inc
es
rcl
in
cmpsb
adc
jle
jg
adc
imul
dec
ret
mov
fistps
sub
decl
call
add
in
push
lahf
inc
dec
cli
xchg
movsb
bound
inc
nop
add
test
push
in
lret
std
jmp
push
lods
adc
or
xchg
ds
add
ret
insl
inc
rcll
cmp
push
and
sbb
aad
pop
cmpsl
test
dec
inc
sbb
push
shlb
cmp
imull
or
je
fucom
adc
nop
jno
jno
mov
inc
lods
dec
push
in
fbld
leave
lcall
adc
mov
mov
xchg
add
test
std
call
inc
loope
popa
jp
cmp
jg
mov
xchg
mov
add
lods
cmp
andb
push
push
mov
in
hlt
nop
inc
add
out
or
jmp
cmp
clc
rolb
imul
sti
or
xor
mov
adc
inc
icebp
dec
sub
sub
test
push
cmp
pop
cmp
jne
mov
rorl
insl
dec
add
repnz
clc
pushf
sbbb
dec
cmp
sti
int
adc
stos
xor
jge
inc
fsubrl
sbb
add
pop
jmp
pop
decb
push
mov
mov
xchg
push
fiaddl
dec
mov
sahf
fisubrs
fbstp
push
xchg
sbb
ret
push
push
or
sbb
or
lods
and
jg
mov
and
and
dec
addb
push
arpl
push
mov
push
inc
mov
ljmp
xchg
add
jb
pop
js
pop
and
add
fiaddl
adc
add
les
ret
sub
adc
testl
sub
dec
inc
outsb
mov
jp
and
dec
in
fnstcw
mov
cmpl
lods
jecxz
insl
push
shrl
call
dec
subb
movsl
js
or
loopne
int
jl
icebp
nop
push
dec
xchg
mov
adc
decl
push
adc
inc
mov
and
xchg
adc
mov
popl
ljmp
pop
int3
cmp
sbbl
rol
and
adc
add
out
mov
stos
cmpsb
addl
outsl
push
pushw
add
add
mov
push
mov
mov
mov
pop
bound
fmull
mov
mov
jno
inc
dec
adc
sub
cmp
mov
inc
sbb
ds
jns
pop
ljmp
jne
push
nop
xchg
insb
ret
lds
orb
stos
fwait
mov
pop
ret
bound
pop
and
testb
decl
mov
inc
push
cmpsb
in
rol
outsb
mov
fs
repz
incl
enter
pop
cmp
shlb
xor
inc
pop
jbe
adcl
jg
rorl
jmp
pusha
cmp
jo
or
fisubrs
dec
fimull
inc
push
dec
push
xor
jno
jbe
rorb
add
jno
jmp
dec
mov
int3
dec
xchg
dec
cmp
out
pop
hlt
jle
cmpl
pop
bound
cmc
pop
mov
movsl
mov
push
dec
mov
xor
fwait
stos
mov
cmpsb
mov
sahf
lock
inc
test
js
decl
jg
lea
mov
xorb
push
adc
in
pop
push
or
jl
leave
shrl
pop
jb
push
dec
sbb
add
cmp
ljmp
jp
xor
cmp
cmpsb
fdivrp
xchg
es
push
subb
mov
adc
push
mov
mov
fcomip
sbb
mov
inc
add
mov
sub
or
jo
shrl
xchg
add
or
call
push
mov
inc
dec
ret
or
pop
add
mov
xchg
inc
cmp
add
push
xchg
dec
jl
ja
inc
xchg
popa
sarl
in
nop
push
leave
inc
add
pop
cltd
mov
pop
inc
fisubl
and
sbb
mov
or
dec
push
dec
pop
push
pop
jns
pop
mov
jo
lods
sbb
adc
sbbb
inc
rcr
fcomip
ljmp
add
lods
or
push
mov
mov
pop
mov
cmp
mov
ljmp
mov
inc
fxrstor
jae
cmp
int3
push
xor
cmpsb
insb
jp
add
std
or
mov
or
xor
adc
add
lcall
add
pop
and
push
sbb
xor
arpl
shrl
bound
sar
sbb
pop
jne
lock
ja
pop
adc
int
ljmp
add
xor
subl
repnz
cmp
sarb
test
in
ljmp
pushf
cmc
rcl
add
aad
jae
outsb
nop
mov
cli
inc
js
adc
xchg
decl
mov
lea
sahf
or
sub
je
xchg
mov
mov
pop
and
and
ljmp
inc
lds
pop
aaa
std
xor
adcb
fildl
stos
mov
iret
addr16
decl
cmpsl
push
xchg
jo
lock
and
and
adc
sbb
or
pushf
aaa
sti
mov
xor
or
and
sbb
shlb
testb
scas
ljmp
push
cmp
adc
push
push
jne
imul
inc
cmp
pop
add
cs
aam
add
or
mov
mov
adc
or
pop
popa
cli
inc
and
outsl
decl
cmp
jg
js
cmp
xor
sbb
mov
adc
mov
add
lea
pop
js
mov
mov
jg
cwtl
test
cmp
je
mov
test
je
mov
jns
adc
je
test
in
push
fs
adc
data16
in
sub
pop
cld
ret
mov
push
push
test
fadd
adc
xor
sub
decl
sbb
jg
stos
int3
cmp
jae
mov
lret
mov
pushf
mov
jo
ljmp
push
xchg
push
cmp
sub
push
jo
mov
pop
mov
jns
mov
and
pop
dec
sub
dec
push
jae
push
loopne
stos
push
fcos
jg
lea
mov
repnz
bound
xlat
cwtl
in
mov
fdivr
out
dec
mov
icebp
xchg
fs
mov
mov
pop
mov
jno
pop
mov
xchg
jg
add
jb
adc
mov
outsl
das
ss
mov
mov
ret
sahf
pop
enter
icebp
mov
push
mov
das
clc
or
sbb
xlat
shr
mov
imul
nop
stc
fadd
cld
ljmp
es
push
mov
mov
test
loopne
adc
pop
andl
stos
sbb
dec
inc
sub
dec
dec
mov
mov
repz
and
xchg
sbb
jecxz
insl
jg
jmp
mov
xchg
or
ljmp
mov
subb
xchg
xchg
dec
stc
mov
jbe
cmpsl
inc
test
jmp
ljmp
leave
mov
pop
adc
repz
adc
int3
add
inc
xorl
sub
mov
decl
mov
lods
add
mov
cld
loopne
inc
jno
rcrl
sbb
dec
in
cwtl
test
ss
xchg
mov
jmp
ret
jg
mov
dec
jge
imul
out
add
fdivs
pop
inc
cmc
adc
xlat
lret
push
aas
aam
dec
stos
stos
fistpll
mov
jno
add
push
clc
dec
and
or
test
push
sub
in
decl
ret
add
jo
nop
cmp
push
cmpsb
push
inc
lea
es
loopne
push
adc
mov
and
sbb
cmpl
sub
ja
ljmp
sbb
enter
mov
add
adc
cmp
popa
ss
aaa
xor
decl
outsb
in
stc
mov
lods
mov
leave
jbe
jb
pushf
bound
or
ljmp
jmp
sahf
add
mov
push
inc
aad
adc
push
dec
xorb
mov
incl
es
int3
les
add
mov
inc
dec
sbb
mov
in
ljmp
sbb
fsubl
add
push
arpl
inc
jnp
aas
pop
mov
mov
mov
mov
jno
fsubl
and
mov
fdivs
data16
pop
roll
mov
test
xchg
in
and
jmp
push
cmp
adc
inc
je
arpl
pusha
sti
inc
mov
test
cli
decl
push
xchg
or
andb
mov
push
inc
xor
sbb
add
lret
dec
leave
or
jno
pop
xor
call
add
adc
jmp
sub
push
push
lods
push
in
repz
decl
je
jne
repz
mov
dec
and
aam
testl
push
fstpl
inc
sbb
xchg
iret
test
mov
mov
in
jecxz
pushl
inc
movsl
mov
jecxz
pop
mov
daa
or
aas
add
js
call
mov
mov
mov
pop
inc
ror
popa
lods
outsb
rorb
mov
call
mov
jl
adc
add
decl
pop
or
add
push
push
sbb
cmp
cltd
add
repz
jbe
mov
fidivl
ljmp
sbb
cli
aaa
aam
adc
sti
ret
insb
lock
sub
add
imul
xchg
hlt
test
push
mov
adc
jne
test
sbb
pop
ljmp
mov
ds
fildll
pop
lods
mov
ljmp
and
sahf
lods
mov
cwtl
ss
out
loopne
mov
xchg
inc
xchg
cmp
mov
sub
sti
push
leave
add
repz
or
insb
aaa
sub
adc
or
inc
push
push
push
dec
lock
rep
ficompl
in
mov
inc
fmuls
cli
orb
test
mov
push
jp
test
fsubrs
call
js
loope
div
mov
inc
xor
sarl
rolb
adc
ljmp
mov
push
sbb
or
out
nop
xorb
mov
andl
divl
ds
jl
inc
add
lcall
jmp
push
scas
push
jg
dec
aam
jo
leave
leave
loopne
stos
loopne
pop
add
add
pop
repnz
idivb
adc
mov
jmp
pop
and
adc
push
test
je
push
mov
jnp
test
xor
cmpsb
movsl
xchg
pop
in
jmp
ds
xchg
mov
xchg
sbb
inc
dec
push
mov
pusha
test
pop
and
int
jg
pop
ret
add
sub
jae
xor
sbb
or
les
imul
daa
add
sar
jmp
push
mov
and
dec
clc
jbe
and
dec
ljmp
aas
lods
mov
decl
out
dec
gs
ljmp
mov
mov
mov
push
ds
xor
in
push
adc
adc
decl
adc
psubq
mov
sub
push
xor
filds
pop
incl
test
les
ror
les
adc
dec
test
pushl
mov
or
fcoms
add
in
test
adc
mov
ljmp
add
test
and
xchg
mov
pop
aad
adc
inc
jp
add
sbb
cltd
cld
incl
mov
adc
cmp
cld
push
lcall
es
ret
nop
and
push
mov
ret
jnp
sar
lods
push
int
lods
cli
xchg
int
or
lods
lds
push
add
cmpb
or
shrb
jb
jo
sbb
inc
xchg
into
mov
xchg
test
pop
push
fisttps
mov
mov
jge
and
xor
mov
cmp
sbb
push
sbb
adc
xchg
xor
insl
push
call
andb
adc
lock
push
mov
sub
inc
sahf
stc
add
ljmp
cmp
rcll
leave
adcl
adc
xchg
scas
add
or
or
mov
add
and
int
pop
sub
in
or
sbbl
lret
test
inc
rcrl
fs
cmp
push
sbb
xchg
mov
add
ljmp
or
sub
rcll
mov
jb
xchg
aam
aam
cli
mov
cmp
ja
jbe
decl
daa
clc
mov
adc
outsb
dec
ret
cmp
insb
rcrb
scas
test
jne
cmp
or
jg
leave
mov
sub
xor
sarb
dec
adc
sub
out
lods
mov
sub
lcall
pop
push
add
mov
fildl
lret
jp
das
lahf
mov
mov
and
jmp
and
or
rcll
fisubl
sbb
sub
decl
mov
mov
jg
xchg
inc
xchg
dec
and
es
mov
pop
xchg
jnp
inc
dec
push
jb
ret
decl
mov
bound
mov
adc
or
fdivs
push
dec
ror
lcall
in
xchg
out
pusha
and
inc
nop
leave
pushf
sbb
js
movsl
add
insl
ljmp
mov
pop
call
inc
sbb
ficoms
bound
mov
xor
xchg
xor
push
incl
and
lret
and
jmp
push
mov
xchg
push
push
dec
arpl
mov
jl
pop
sbb
inc
add
mov
push
dec
jp
add
mov
adc
fwait
and
or
rcll
dec
mov
jg
out
and
inc
sbb
sub
cs
add
adc
shlb
stos
cmp
cmpl
dec
jmp
xchg
xor
out
out
jge
cmpsl
sub
out
or
fsubs
jne
fnstcw
scas
faddl
push
xor
sarb
mov
loopne
fstp
sbb
xor
mov
data16
cld
imul
icebp
fmul
cmp
decl
jnp
fstp
int3
incl
fstp
jg
add
imul
mov
add
js
filds
and
decl
faddl
fs
fmul
movsb
icebp
lods
fdivrl
inc
cmp
aam
or
or
mov
xchg
sub
in
hlt
and
int
fiaddl
push
sub
and
scas
andb
shl
sub
xchg
pop
mov
or
jmp
xchg
clc
dec
mov
jmp
decl
push
mov
or
xchg
cmc
test
pop
dec
add
and
pop
or
call
in
inc
scas
mov
add
cltd
jb
mov
push
mov
dec
mov
and
xchg
iret
inc
add
decl
sarl
adc
lods
push
mov
dec
xorb
fisttpll
stc
inc
mov
and
add
jmp
es
jo
scas
cli
jmp
xchg
sti
push
pop
inc
addb
add
js
lcall
add
cs
mov
add
sbb
orb
push
inc
or
push
sti
test
xchg
add
cli
mov
fmull
push
mov
or
stc
inc
idiv
mov
or
inc
bound
push
xchg
pusha
inc
cmc
test
fildll
xchg
xchg
pop
nop
xlat
mov
lret
call
inc
pop
mov
and
xchg
push
dec
imul
stc
lret
inc
mov
jnp
ljmp
rolb
or
into
cmp
mov
aaa
std
ljmp
xchg
mov
mov
addr16
adc
adc
sbb
mov
rcrl
add
sarb
int
ljmp
jmp
mov
in
xor
xchg
adc
mov
inc
arpl
insb
imulb
jge
icebp
dec
cmp
mov
repnz
out
and
movsb
mov
add
inc
movsb
fsubrl
mov
inc
bound
and
cmp
mov
fmul
or
sbb
decl
test
jbe
or
test
add
loope
or
push
insl
es
xor
fisubrs
ljmp
sub
xchg
ja
scas
cmp
cmp
sub
mov
adc
jg
stos
lcall
inc
int3
jb
popa
pusha
roll
xchg
or
or
aaa
sbb
or
cmp
mov
call
fists
shrb
test
rclb
cmpsb
xor
ss
sahf
nop
adc
mov
call
adc
push
xor
mov
or
xor
dec
pop
cmp
inc
cmpsb
popa
movsl
ljmp
mov
daa
push
test
sub
ljmp
sbb
mov
cwtl
jno
lock
into
cltd
xchg
jl
in
xchg
mov
xor
cmp
sub
xchg
cvtpi2ps
or
stos
push
iret
sbb
inc
insb
pop
and
or
in
pop
mov
decl
loopne
nop
or
push
aaa
fcmovb
pop
aad
lds
les
fadd
push
cmp
jne
mov
int
or
stos
xor
pop
daa
daa
inc
and
inc
mov
or
stos
lcall
xor
push
enter
pop
andw
decl
xchg
test
and
adc
mov
jb
and
pop
mov
loop
rorl
jge
adc
lods
cmc
push
js
xor
xchg
push
cmp
cld
mov
or
or
adc
sbb
jo
call
xor
mov
xorb
mov
xor
pop
xchg
mov
cmpl
ret
xchg
sub
mov
xchg
dec
jmp
cmp
push
add
repnz
or
lea
inc
iret
adc
pushl
mov
push
repnz
call
dec
mov
jns
aaa
nop
adc
bnd
and
xor
sbb
cwtl
cmpl
cmp
rorl
fadd
push
imul
jl
ret
sub
in
cld
lods
lcall
xchg
pushf
movsb
mov
loope
movsb
pop
mov
inc
in
or
lahf
and
fcoms
jg
cmp
and
push
fmul
jb
mov
xor
pop
sarb
lcall
fwait
push
push
movsb
inc
mov
sub
orb
pushf
dec
mov
div
push
ret
aam
push
mov
aam
add
incl
mov
into
adc
test
or
pop
fsub
jl
sbb
jg
mov
adc
daa
test
into
leave
psubq
jne
lods
jmp
adc
add
add
mov
cmp
jg
inc
and
adc
dec
jmp
hlt
mov
rorl
orb
out
cltd
shlb
adc
cmp
stos
adc
push
mov
xor
add
test
incl
aam
or
xor
push
push
xor
adc
add
icebp
call
lods
push
add
lods
int
stos
in
dec
ljmp
cmp
sbb
push
jmp
cmp
scas
xchg
mov
adc
push
rcl
loope
sub
cmp
cmpsl
ret
in
and
lret
push
sub
pushf
in
ja
scas
outsb
cmp
xchg
pop
sub
movsl
or
lcall
and
pop
scas
dec
roll
and
xlat
or
jmp
add
out
push
in
call
add
jge
pop
data16
pop
mov
cmp
sbb
shlb
stc
xchg
dec
xchg
inc
cmp
je
js
pop
decb
mov
dec
add
xchg
jg
dec
cmpsb
js
shlb
xor
orb
decl
xchg
pop
dec
push
mov
push
sub
push
push
sbb
sbb
in
pop
jp
push
scas
and
rolb
stos
or
cmp
add
pushl
push
out
or
lahf
mov
inc
xchg
mov
xor
mov
and
outsb
mov
jae
push
rcrl
incl
add
hlt
add
xor
pop
test
mov
add
push
icebp
or
xor
sbb
mov
aas
pushl
xchg
mov
rorb
in
jp
jno
jbe
and
rorb
sub
mov
push
push
decl
cmpsb
pop
int3
pop
cmc
sbb
or
push
add
add
push
jne
inc
sub
jl
insl
mov
fbld
outsb
or
xlat
rol
orb
stos
scas
adc
jg
lds
lcall
add
repnz
push
and
sub
sub
inc
int
mov
mov
jno
fbstp
nop
out
js
popf
jae
add
pop
pop
call
adcb
xor
stos
fidivrl
inc
mov
and
xor
rcrb
fs
orb
mov
sub
in
fbstp
incb
pop
mov
out
mov
pop
and
push
sub
call
bound
pop
out
scas
mov
pop
xor
dec
adc
fs
das
jne
decl
pop
lahf
mov
add
inc
sub
lcall
insl
test
xlat
aad
mov
push
enter
and
dec
inc
js
xchg
dec
inc
jbe
or
add
lcall
adc
xchg
push
adc
adc
lret
fildll
fbld
das
jle
out
cli
decl
aad
icebp
and
add
inc
out
popf
mov
shr
stc
cmp
ljmp
icebp
inc
add
imul
mov
jmp
sbb
cmp
repnz
mov
daa
push
test
and
add
push
push
xchg
dec
mov
add
or
or
leave
mov
mov
inc
push
call
iret
in
enter
jg
jb
stc
pop
push
cmc
cld
add
add
add
and
mov
ljmp
cmpsl
incl
adc
out
shlb
or
xchg
add
add
mov
jmp
mov
ljmp
hlt
into
cmc
jo
sahf
andl
and
fwait
lahf
mov
adc
gs
adc
mov
clc
stos
fistpll
sti
icebp
add
jge
or
mov
adc
js
adc
sbb
jno
fstl
dec
add
pop
js
and
and
xchg
pop
mov
stos
stos
pop
sub
push
sub
cmp
dec
inc
or
mov
sub
ljmp
rclb
rclb
xchg
shrb
sbb
add
inc
imul
icebp
jnp
sar
popf
lcall
push
mov
xchg
js
jmp
into
ja
lcall
scas
jmp
or
push
nop
icebp
and
mov
adc
or
jbe
outsl
and
inc
mov
adc
adc
call
ds
dec
cmp
loop
stos
fisttpll
xor
movl
push
les
call
xor
cmpxchg
and
mov
cmp
adc
mov
pop
add
outsl
mov
jl
adc
xor
add
mov
decl
lods
mov
mov
cmp
xchg
or
imul
jmp
push
testl
push
lsl
fstpt
mov
and
xorl
and
pusha
jp
jle
and
subb
add
ljmp
sub
scas
insb
pop
xor
mov
lahf
std
mov
or
sbbb
outsw
or
push
jg
inc
pusha
mov
or
or
lahf
pop
inc
inc
mov
pusha
stc
sar
mov
sarb
lock
inc
in
cmp
es
cmp
ljmp
call
jmp
add
and
xchg
clc
out
nop
lahf
and
arpl
lods
add
dec
xchg
pop
sbb
sub
aaa
and
cmp
and
sarl
popa
dec
addb
ss
fucomip
ljmp
call
inc
shl
xor
sbb
mov
inc
and
test
adc
push
int3
adcl
cmp
loopne
sbb
orl
dec
or
daa
dec
insb
inc
push
push
push
cmc
push
inc
decb
xchg
dec
sub
test
sub
gs
push
dec
ljmp
push
inc
sub
xchg
fstl
push
dec
pop
aad
imul
mov
add
xor
push
decl
jnp
divb
hlt
add
xor
or
and
xchg
lahf
mov
mov
decl
in
lock
or
and
cmpsl
into
pop
cmp
loopne
mov
cmp
jmp
push
loop
sbb
mov
mov
adc
lods
js
or
mov
jbe
ja
ja
addr16
inc
dec
lcall
les
dec
jg
in
push
xlat
daa
add
push
jp
aam
orb
push
xchg
push
xchg
mov
ja
or
ljmp
lods
add
xor
addr16
scas
sbb
imul
fcmovnb
jbe
leave
jge
inc
mov
pushl
data16
inc
sub
inc
fiadds
hlt
cmc
dec
sub
inc
xchg
push
and
xor
jae
mov
movsl
sbb
pop
notb
and
lahf
xchg
pop
movsb
cmp
adc
lock
or
pop
rolb
insb
ss
and
jnp
mov
push
xchg
push
aaa
test
movsb
lret
out
incl
mov
inc
in
sbb
add
lock
lds
or
or
dec
add
decl
jg
dec
lock
and
sub
adc
xor
sar
decl
bound
sub
mov
add
inc
push
mov
decl
pop
or
mov
push
loope
lods
xorl
jne
mov
mov
js
inc
fimuls
shll
cld
mov
repz
pop
in
push
mov
int
jo
add
push
lcall
scas
mov
push
sub
lcall
fisubrl
or
jg
jle
adc
add
mov
out
cmp
jg,pn
decl
ljmp
sub
sub
xchg
lret
push
out
cs
xchg
orl
incb
push
jne
addb
pusha
mov
mov
ds
outsb
pop
dec
and
cmp
int
sub
push
inc
icebp
andl
das
mov
cmc
in
mov
cwtl
rcll
inc
insl
or
inc
inc
inc
push
mov
pop
stos
xchg
fldcw
ja
rcll
fisubrs
data16
ljmp
rorb
movsb
or
dec
outsl
sub
pop
xchg
movsb
push
repnz
cwtl
xchg
mov
loopne
push
lock
dec
dec
mov
mov
test
xchg
add
dec
sahf
and
pop
push
push
and
cltd
push
push
testl
xlat
bswap
mov
fistps
cmp
xor
aad
dec
cmc
icebp
or
sbb
mov
je
add
in
aaa
fcomp
jno
jl
lea
mov
aam
nop
adc
push
mov
fildll
movsl
lcall
daa
and
ds
out
in
sbb
dec
ja
loopne
inc
push
inc
scas
lahf
aad
imul
clc
test
add
inc
xchg
addl
jo
or
loope
andl
sbb
js
push
xor
aam
ljmp
or
pop
lds
int
outsl
mov
out
xor
jbe
or
sub
cltd
xchg
das
mov
insl
add
sti
dec
xlat
xchg
test
mov
jle
xchg
adc
adc
dec
mov
pop
lea
lods
pop
mov
ss
sti
test
negl
pop
pop
mov
push
jo
push
sub
jmp
cwtl
pop
and
and
pop
xlat
sbb
out
add
fnstsw
int3
xchg
xor
fnstsw
or
dec
lea
mov
test
andb
mov
aad
sub
lahf
sub
xchg
or
mov
jg
sub
sub
sbb
cmpsb
test
dec
dec
push
and
xchg
xchg
and
je
aaa
mov
inc
imul
mov
push
inc
into
gs
aam
shrb
repnz
dec
mov
test
jb
stc
sbb
movsl
jne
sar
or
in
sub
jle
lea
sbb
sarb
pop
and
dec
stos
mov
mov
add
or
jns,pt
ret
outsl
es
push
push
push
push
inc
mov
bound
pop
out
sub
out
pop
dec
mov
pop
and
pushl
or
and
inc
push
test
xchg
mov
decl
mov
aaa
test
inc
ror
repnz
nop
lock
cmpsl
add
adc
mov
in
push
ljmp
dec
xchg
push
ret
aaa
rcrl
imul
fs
lods
dec
cltd
inc
jo
adc
cmp
mov
mov
mov
inc
push
jp
add
add
push
ljmp
add
jne
jg
and
push
pop
pop
mov
daa
mov
sub
push
mov
xor
sbb
mov
mov
nop
push
sbb
dec
fdivs
nop
les
mov
pop
mov
push
jns
xlat
xchg
in
cmp
sbb
pushl
std
or
pop
sub
jmp
xor
scas
out
repnz
inc
sbb
pop
add
jmp
popf
dec
pusha
jmp
mov
daa
jmp
and
jp
pop
cmp
out
and
inc
in
ljmp
decl
sbb
mov
xchg
loopne
mov
xchg
xor
arpl
dec
outsb
jecxz
stc
bswap
idivl
add
sahf
neg
aam
mov
push
leave
jb
pushf
push
aam
xchg
js
dec
mov
popf
mov
mov
dec
push
push
enter
jo
xchg
xchg
mov
or
test
ud0
lahf
aaa
clc
adc
nop
mov
leave
pop
cmpsb
or
cmp
dec
decl
push
jmp
rcll
xchg
xchg
loop
leave
dec
fwait
mov
xor
pop
cld
xchg
shlb
and
mov
fwait
or
jp
pop
push
pop
push
imul
mov
push
push
sti
decl
jno
sub
adcb
mov
xlat
add
and
adc
pusha
pop
decl
push
dec
pop
adc
xchg
adc
popf
push
call
sub
ljmp
push
push
and
and
mov
shlb
ret
xchg
test
fs
xor
orb
clc
outsl
mov
in
mov
pop
mov
dec
jmp
pop
int3
scas
stos
subl
push
idiv
mov
adc
adc
inc
dec
stos
ja
clc
mov
dec
js
pop
mov
arpl
jmp
adc
sub
mov
jae
push
cmp
xchg
sbbb
decl
mov
pop
push
sub
xor
or
clc
aam
xchg
inc
in
pop
fsts
mov
inc
sahf
xor
cld
xchg
in
call
add
scas
or
sub
adc
scas
cli
ljmp
aas
jnp
dec
mov
les
sbb
out
iret
cmp
ljmp
lret
lcall
and
or
repz
mov
leave
push
cmpsl
or
andl
jns
mov
inc
movsb
lods
test
mov
jg
xchg
fisttps
jle
and
scas
push
mov
pop
lret
xchg
in
sbb
loope
insl
call
jo
sub
pop
lods
cmp
push
pop
sub
jecxz
out
jl
push
mov
mulb
adc
mov
mov
daa
sbb
add
xchg
push
mov
ret
xor
sbb
and
jae
lods
pushl
dec
stos
inc
mov
mov
out
xor
or
leave
ret
int3
inc
and
pop
sbb
aam
mov
rclb
dec
in
shll
and
lret
sub
out
sbb
mov
xor
jg
nop
imul
ds
bound
icebp
push
pop
shrb
inc
jle
sbb
jnp
mov
add
cmp
xor
and
sub
nop
pop
push
outsb
mov
push
xchg
cmp
out
adc
syscall
ss
jmp
pop
lods
sbb
or
jb
ljmp
imul
xchg
pop
inc
lahf
jns
pop
mov
decl
std
out
scas
sar
pop
sub
daa
test
dec
int3
out
pop
pop
sbb
add
pop
leave
cwtl
repnz
mov
adc
dec
add
lods
push
xchg
lcall
mov
lea
jl
xchg
aas
xor
clc
das
cmpsb
mov
mov
test
ljmp
pop
ret
sbb
push
ss
insl
add
stos
inc
sbb
and
in
cmp
pop
inc
nop
aaa
add
sub
add
or
cmp
push
push
adc
aad
jl
test
in
ss
adc
cmp
popa
pop
dec
gs
mov
or
jmp
decl
nop
outsl
icebp
and
mov
cmp
mov
scas
jne
mov
sub
and
ljmp
decb
push
dec
push
jp
inc
test
push
jnp
mov
and
push
add
call
iret
inc
mov
jo
xor
mov
push
dec
clc
xchg
sbb
outsl
aad
mov
out
mov
int
fildll
mov
mov
test
xchg
push
cmp
xor
cltd
fwait
or
fcoml
pushl
cmpsl
stos
mov
cmp
push
jle
fsubrs
cmp
adc
decl
shlb
faddl
mov
fmuls
dec
insl
out
dec
pop
hlt
in
mov
xchg
call
nop
pop
ljmp
aam
mov
das
cli
sarb
push
shll
jb
mov
pop
push
aaa
les
out
in
and
sbb
mov
popf
push
sbb
rclb
add
push
pushl
mov
dec
inc
push
pushf
cmc
outsb
adc
repnz
mov
mov
imul
pop
xor
mov
lods
xchg
test
or
jns
ret
mov
mov
decl
jae
push
lret
pop
outsb
cmp
ja
mov
pushf
pop
mov
ljmp
sbb
lea
fld
xchg
mov
shl
aas
movsl
jno
sbb
or
movsb
push
push
jl
pop
shlb
in
movsb
or
mov
decl
push
mov
lea
popa
mov
stos
add
sarl
hlt
shrl
ljmp
sub
sbb
sbb
mov
lahf
dec
push
sub
adc
lods
push
mov
lea
in
outsb
push
jno
add
sbb
sbb
jge
divl
jg
jg
dec
imul
add
enter
mov
add
int
cld
mov
or
not
sub
push
or
push
add
sar
cmp
call
test
mov
pop
sub
rolb
nop
xchg
add
lcall
or
xchg
add
and
out
and
pusha
iret
mov
icebp
mov
mov
jmp
mov
pop
push
xlat
adc
push
or
cli
cmp
adc
mov
xchg
cltd
mov
xchg
mov
pushf
test
ljmp
das
nop
das
lods
pop
pop
test
xchg
sti
push
loop
jmp
inc
and
stos
out
cli
xor
aas
cli
decb
mov
and
sbb
adc
decl
mov
mov
sbb
lock
mov
ss
adc
lock
std
call
repnz
bound
mov
insl
fistps
enter
movsb
xor
or
fst
clc
wrmsr
or
adc
sub
addr16
call
mov
mov
mov
adc
in
insb
sub
sbb
mov
lock
mov
or
ror
cltd
mov
fs
xor
push
arpl
inc
push
add
mov
and
jp
outsb
js
lcall
inc
mov
mov
add
in
sbb
adc
roll
inc
xchg
enter
clc
call
lret
and
mov
and
cmp
ljmp
das
pop
loope
mov
push
inc
add
popf
out
pop
aaa
mov
fiaddl
jge
fidivrl
adcb
pushl
loop
push
add
sbb
xor
shr
or
xchg
push
decl
lcall
xor
add
lds
enter
movsb
test
in
cmpsl
ds
and
push
jne
xor
clc
push
push
cli
sub
insb
dec
push
shll
add
pop
ret
jge
cld
jno
sbb
adc
pop
mov
fisttps
and
xor
pop
dec
cmp
jbe
push
sar
decl
cmp
test
dec
pop
test
sub
mov
divl
mov
mov
sub
sbb
xor
inc
cli
cmpsl
add
decl
mov
cmp
or
rcrb
inc
mov
cli
mov
lcall
inc
add
aaa
or
sub
scas
sub
dec
cmp
lods
mov
aaa
sbb
fdivp
push
pop
cmp
jne
mov
sahf
out
test
fstl
inc
cli
nop
xorl
loope
call
clc
cmp
out
sbb
add
jae
es
xor
leave
add
sub
jmp
cltd
xlat
xor
or
push
mov
and
push
jmp
sub
ja
rcll
and
call
pop
stos
sbb
movsl
decl
imul
jbe
adc
mov
pusha
cmp
lods
popf
inc
cmp
pushl
lds
jge
out
orl
div
dec
stc
jb
push
dec
inc
dec
popl
adc
inc
jmp
dec
stos
jo
mov
and
pop
int3
fcoms
cmp
movsl
lods
lods
loopne
pop
arpl
pushl
mov
sub
add
pop
dec
sahf
inc
cmp
jb
stos
mov
pop
or
pushl
cmp
sbb
mov
adc
and
xor
xor
loope
jmp
int3
mov
js
or
sbb
xchg
jp
jmp
das
inc
rcrl
add
cmp
lcall
lock
cmp
aaa
lret
dec
or
dec
lea
or
incl
mov
jne
jns
gs
stos
pop
sbb
aam
movsl
inc
stos
cmp
sbb
sbb
mov
lods
push
sub
add
loope
inc
jne
or
jle
hlt
leave
decb
mov
sub
das
push
leave
push
dec
les
xchg
xor
sub
add
add
insb
xor
ljmp
test
add
sbb
mov
xchg
adc
xchg
mov
pop
pop
mov
faddl
fidivrs
decl
lahf
and
es
push
pop
decl
mov
sub
or
es
add
sbb
aad
mov
loopew
mov
sub
mov
sub
int3
mov
inc
inc
rclb
mov
and
dec
divb
xchg
xor
or
cmc
int
call
cld
push
jae
jno
pusha
lds
pop
and
xchg
nop
addr16
outsl
push
les
xchg
mov
mov
fidivl
cmp
or
and
or
aam
pop
movsb
jle
sub
push
jns
loop
inc
lods
jle
test
imull
addl
int
mov
pop
lods
incb
std
fistpll
fs
jge
es
sub
fwait
jecxz
pusha
decl
ljmp
jnp
cmp
shlb
or
test
cmp
je
decl
jb
sbbb
lcall
fwait
pop
test
sbb
add
push
xor
inc
add
add
lcall
ret
popf
mov
cmpsl
sub
test
pop
pop
add
lret
iret
jge
cmp
decl
jbe
add
sub
mov
push
jno
shrb
std
jne
inc
inc
bound
scas
adc
dec
and
or
mov
ljmp
or
andl
add
pop
push
mov
cmpsb
mov
pavgw
mov
icebp
sbb
aam
sbb
or
jg
inc
xor
xor
enter
adc
sbb
lock
cli
mov
add
mov
int
cmp
jmp
pop
subl
and
pusha
jns
leave
decb
push
dec
arpl
and
pushf
cltd
incl
leave
lods
sub
leave
cmp
and
mov
mov
sub
call
lret
add
and
xchg
jo
stos
xchg
aam
adc
inc
dec
lods
mov
add
call
test
test
mov
ljmp
sub
test
and
rcrb
inc
imul
cmc
mov
adc
add
sub
imul
or
jg
fildll
rorb
pop
mov
int3
fisubl
mov
xchg
lcall
mov
loop
sub
push
hlt
dec
popl
or
into
mov
je
pop
mov
xchg
sub
push
pop
xor
std
or
xlat
sbb
insl
inc
adc
xchg
xchg
mov
int3
mov
ja
decb
xchg
fscale
mov
pop
xchg
mov
sub
adc
pop
inc
adc
aas
cmp
cmp
jnp
push
cltd
and
es
xchg
inc
lds
xor
sbb
ljmp
clc
sub
mov
faddl
popf
lcall
lea
adc
call
loope
add
mov
loopne
stc
jmp
gs
pop
imul
xchg
jbe
aad
sub
or
cli
lcall
pop
cmp
mov
icebp
pop
cmp
xlat
out
adc
xchg
shrb
fwait
sbb
add
cmp
xor
inc
scas
dec
dec
jge
ret
add
sbb
stos
insb
fs
xor
imul
sbb
ljmp
dec
xabort
out
sbbl
xchg
sub
jg
lcall
xchg
cmp
adc
cmp
lcall
dec
push
xor
cld
sub
test
call
adc
cmp
fs
cmp
decl
mov
ljmp
loop
push
ret
xchg
jns
mov
daa
adc
scas
sarb
jl
jg
jmp
and
sbb
je
ss
pop
xlat
jle
incl
dec
loopne
and
cmp
in
push
and
push
jbe
jg
aad
sbb
or
xchg
mov
and
mov
xchg
les
push
mov
inc
sbb
and
mov
addb
dec
xor
cli
inc
popa
pusha
xor
or
cmp
es
ss
test
das
and
lods
and
pop
and
sub
stos
fcomip
rcrl
js
loope
mov
sbb
cwtl
push
outsl
add
jno
aas
decl
mov
mov
sbb
pusha
pop
lods
popa
add
and
dec
inc
pushl
push
cmp
push
pop
xchg
push
mov
or
pushl
cmpsb
insb
flds
aaa
test
add
xor
jmp
inc
not
or
call
rdtsc
pop
mov
and
ljmp
push
xchg
inc
stc
lcall
lea
mov
and
nop
or
or
dec
out
push
cmp
xchg
mov
cmp
and
or
imull
push
fsubs
call
add
je
pop
mov
cmc
push
push
dec
inc
push
or
and
pop
mov
lcall
dec
and
xor
adc
orb
xchg
jge
jno
and
mov
lcall
das
mov
inc
add
mov
repnz
stos
mov
pop
mov
pushl
add
out
adc
mov
pop
pop
enter
cld
mov
outsb
fsubl
pusha
add
insb
aad
rcll
or
mov
sub
repnz
pop
sub
mov
mov
jmp
test
add
push
subb
decl
movsb
or
or
sbb
pop
add
aad
xchg
push
fcoms
xchg
jmp
push
dec
push
and
pushf
or
movsb
fistpll
add
inc
sti
xchg
cmp
mov
add
fistpll
add
test
jne
fists
negb
aam
jnp
sub
pusha
xor
or
adc
mov
lcall
jbe
enter
dec
divb
jne
sub
sbb
push
add
ljmp
jmp
xor
adc
sub
pop
mov
pop
jbe
decl
iret
idiv
fwait
lods
push
inc
and
push
leave
push
and
sbb
decl
out
testl
repnz
adc
stos
sbb
add
inc
sbb
sbb
cli
fisttpl
jns
jbe
jo
mov
jl
adc
jle
cmp
sub
loop
rcrl
ret
ljmp
cmp
sbb
xchg
pusha
popf
test
jg
mov
add
jno
test
pop
into
sbbb
push
push
inc
dec
ljmp
ljmp
push
in
mov
cwtl
add
inc
xor
cmp
or
dec
jno
and
sub
xchg
inc
scas
cmp
sbb
fists
adc
adc
sbb
ljmp
lret
ljmp
cmpsb
sti
xor
push
mov
and
and
mov
imul
call
aaa
mov
stos
sbb
popf
inc
sbb
adc
pop
dec
and
jbe
mov
jmp
lcall
fnstenv
popa
movsb
add
xor
jo
stos
jb
lods
jmp
pushl
mov
into
test
mov
adcb
sub
ret
or
sbb
push
sbbl
loopne
sub
cld
adc
in
dec
mov
push
dec
push
sbb
sbb
ja
int3
inc
inc
inc
jbe
mov
bnd
ljmp
cmpsl
xchg
add
fwait
imul
and
adc
xchg
add
or
fs
inc
xchg
jge
or
xor
xchg
movsb
stc
fmulp
cmp
xchg
loope
push
cltd
data16
push
add
pushl
push
repnz
jl
and
and
adc
leave
aad
aas
icebp
test
insl
push
nop
xor
out
inc
out
call
or
in
rorb
mov
xchg
push
addb
adc
loopne
xchg
or
jne
test
mov
add
cmp
lea
or
adc
repz
ljmp
or
mov
xchg
xchg
mov
mov
xchg
sbb
mov
decl
imul
or
cwtl
in
push
ffree
inc
mov
mov
enter
ljmp
dec
sbb
fisttpl
xchg
cmc
rclb
lret
das
fcomps
dec
mov
sar
decl
jge
mov
push
mov
out
fisubrl
ljmp
adc
pushf
or
rcl
lods
shr
push
add
push
or
fsubp
incl
and
push
repnz
ret
push
cmp
lcall
sub
fwait
into
ret
and
mov
inc
adc
jne
mov
jmp
xlat
mov
lock
adc
inc
push
adc
fwait
sti
out
mov
fdivrs
incl
sbb
cmp
cmp
mov
xchg
mov
or
int3
adc
xchg
add
mov
push
dec
mov
xor
adc
push
repnz
mov
arpl
js
lods
xor
cltd
mov
nop
and
ljmp
je
subb
lock
popf
push
mov
and
or
sahf
adc
ljmp
or
gs
lret
and
xor
or
aad
ljmp
call
test
adc
push
test
sub
adc
lods
push
popf
jp
xor
push
adcb
decl
in
mov
movsl
pop
add
mov
rorb
inc
inc
outsl
insl
xchg
add
ljmp
fbld
xchg
sbb
aaa
and
mov
mov
pusha
xor
inc
clc
adc
jg
lock
mov
jns
ficomps
inc
and
lahf
adc
mov
repz
sub
mov
xchg
cld
movsb
jmp
ljmp
incb
lds
cmp
fcoml
aam
pushf
sbb
mov
call
xor
mov
loopne
mov
jbe
xchg
fisttpl
pop
inc
fs
or
cs
inc
mov
aam
movsb
in
push
or
pop
sub
add
aad
mov
addr16
lret
aam
ljmp
or
outsb
ss
fisubs
push
push
out
fists
decl
jmp
sbb
orb
pop
and
lahf
bound
std
mov
addr16
pop
ud0
mov
and
int3
mov
push
iret
lock
push
roll
inc
js
mulps
decl
ret
ja
xchg
sahf
dec
and
roll
lcall
push
push
jo
es
fmull
lods
jle
ljmp
sbbl
outsb
xchg
inc
fs
fimuls
adc
or
inc
lret
jp
jmp
jb
mov
movsl
add
test
and
inc
adc
test
sub
mov
nop
in
adc
sub
jne
fmuls
sub
sbb
sbb
dec
scas
insl
call
pop
mov
repnz
push
add
cmpl
loopnew
repz
jg
mov
mov
pop
mov
xchg
lods
out
adc
loop
out
pop
mov
movsl
in
jle
fs
sub
push
push
ret
mov
push
sub
dec
ljmp
incl
add
pushl
insl
inc
es
and
inc
jb
dec
xor
idiv
decl
and
pop
sahf
pop
sbbb
push
rcrl
push
fcoml
inc
inc
pop
xchg
cmp
cld
incl
lds
and
pop
stc
dec
mov
sub
sub
repnz
mov
call
inc
insl
or
inc
mov
aaa
jo
and
ss
adc
xor
cld
outsl
and
or
mov
mov
mov
in
test
fadds
iret
pop
addr16
ljmp
mov
imul
and
lods
pop
dec
mov
push
ret
ss
add
nop
jle
incl
xor
enter
inc
sbb
mov
ja
sbb
movsl
pop
jb
lock
jo
popa
out
push
dec
or
leave
add
xchg
mov
pop
loope
push
inc
pop
clc
sub
dec
aad
adc
mov
or
loope
loope
mov
jmp
out
sar
movl
xchg
cmp
and
adc
cmp
push
or
add
xor
push
xchg
cltd
ret
sub
pushl
push
je
xor
loope
neg
sub
pop
inc
cmp
mov
cmpsl
pop
enter
imul
aam
push
adc
mov
and
pusha
xor
lds
xor
aad
mov
jo
xchg
sub
scas
add
or
sbb
ljmp
js
mov
adc
daa
roll
xchg
and
cmpsb
mov
mov
and
pushf
push
sbb
ja
mov
lcall
test
adc
divb
jmp
sbb
or
adc
xchg
push
int
mov
sbb
fnsave
outsb
add
jmp
out
xor
es
add
stos
sbb
mov
add
cmp
mov
mov
popf
mov
movsl
and
pop
pushl
add
iret
adc
dec
add
xlat
add
mov
lods
mov
popf
sbb
mov
js
pop
mov
sub
dec
in
imul
jbe
cmc
test
sub
adc
out
push
push
je
mov
je
xorb
iret
add
lds
fsubrs
mull
lahf
xorb
mov
mov
and
cmp
xor
fwait
aas
jns
dec
pop
add
test
add
fcomip
mov
frstpm(287
mov
test
icebp
lcall
cmp
scas
sub
and
mov
add
and
xorl
es
mov
sbb
cmp
lret
shlb
cwtl
fsubl
mov
arpl
in
push
sub
dec
or
jb
ficomps
mov
jae
inc
jnp
sqrtps
scas
sbb
pop
repnz
in
mov
inc
shlb
mov
mov
dec
sbb
dec
les
sub
or
push
insb
loope
incl
in
inc
push
in
test
dec
jnp
xchg
dec
push
xchg
lcall
add
pop
add
dec
inc
xor
stos
sub
faddl
fbld
inc
vhsubpd
sub
dec
push
jne
pop
dec
xchg
movsb
gs
fisttps
movb
xchg
adc
and
pushf
mov
mov
in
incl
cwtl
ds
sbb
fadd
into
ja
sbb
xchg
mov
shrb
fisttps
mov
nop
dec
lret
jb
gs
inc
and
mov
cmp
pop
pop
es
outsl
shlb
jno
loope
or
cmp
clc
or
or
enter
push
xor
cmc
je
call
push
das
rclb
adc
add
mov
xor
inc
xor
pop
icebp
pushl
addr16
cld
inc
adc
aam
rcrb
popa
mov
idiv
push
mov
sar
inc
push
arpl
jnp
ret
pop
outsb
jo
push
push
push
out
movsb
cmp
mov
decl
incl
push
push
dec
push
fcom
push
adc
dec
jae
sub
jmp
inc
jb
jnp
jg
adc
insb
popf
cmpsb
pop
andb
mov
mov
add
pop
pop
in
push
jge
xlat
xchg
add
mov
xchg
jbe
call
aam
rcrb
cwtl
xchg
repnz
call
inc
in
pop
subl
inc
or
inc
stos
inc
jae
sbb
subb
mov
int3
pop
aas
sbbl
add
dec
mov
add
dec
inc
push
inc
pop
nop
and
dec
pushf
xor
xchg
and
mov
lahf
adc
test
repz
inc
xor
sti
call
inc
or
shlb
in
jae
xor
decl
enter
stos
and
inc
push
push
dec
inc
les
add
ffreep
pusha
loopne
ret
pushl
dec
js
sbb
mov
or
lret
push
fiaddl
push
mov
shrl
or
xor
xchg
mov
adc
test
push
dec
sub
pop
mov
movsl
mov
mov
cld
fdivl
roll
pop
cmp
into
sbb
loopne
testb
test
jbe
popf
pop
pop
push
nop
jecxz
or
inc
cltd
nop
cmpb
sub
mov
fildll
andb
mov
push
cmp
imul
cli
cmp
pop
cmp
dec
mov
and
ljmp
xchg
inc
je
out
xchg
add
mov
xchg
ret
sbb
sub
pushl
or
lea
cmp
mov
mov
jne
cmp
add
mov
ljmp
push
push
jb
cmp
or
mov
outsl
jge
or
repz
decl
sub
or
int3
jg
sbb
push
dec
repz
pop
push
popf
fadds
std
cli
or
insl
pushl
ljmp
ljmp
push
cmovne
pop
add
jge
adc
push
fldt
mov
movsl
sub
adc
adc
and
fisttps
iret
xor
aaa
inc
nop
add
push
cwtl
xor
xchg
fcmovnu
lock
cmp
sub
push
sbb
push
jge
clc
cmp
adc
scas
dec
in
mov
mov
cmovp
pop
out
clc
jb
xor
leave
aaa
dec
jp
xchg
daa
mov
sbb
cld
ret
push
adc
sub
aas
mov
repnz
or
mov
in
xchg
push
jmp
aas
add
xor
cmp
lds
add
adc
push
lcall
cmp
inc
xor
fsubrl
dec
loop
std
or
or
pop
and
ljmp
dec
mov
jns
lahf
std
mov
dec
incb
incb
xchg
and
inc
add
xchg
sub
clc
mov
inc
sbbl
lock
xchg
pop
addr16
ret
lds
std
mov
repnz
lret
mov
lods
imul
repnz
loop
pushl
lods
jl
packsswb
push
pop
enter
mov
repnz
imulb
pushl
jo
push
adc
sbb
dec
lods
test
test
adc
inc
add
into
daa
xchg
fldcw
pop
fs
add
add
and
sub
cwtl
clc
xor
outsb
pop
sbb
or
das
arpl
sub
outsl
add
decl
sbb
or
mov
scas
je
inc
dec
clc
rcrb
clc
jge
add
xchg
mov
ljmp
int
or
nop
addl
lcall
cmp
dec
adc
dec
mov
xor
jl
push
xchg
decl
repz
popa
arpl
adc
inc
psubq
cli
sbb
std
jg
mov
cmpsl
adc
mov
les
and
pop
call
fldcw
push
cmp
outsl
rcrl
shrl
test
sbb
xchg
add
je
incl
mov
or
test
mov
add
test
xor
test
rclb
mov
cltd
mov
inc
mov
call
movsb
out
xor
xor
xor
aaa
jl
cmp
adc
push
add
xchg
add
sarb
mov
pop
dec
ret
inc
adc
stc
mov
pop
loope
repnz
inc
mov
in
cmp
insb
inc
lods
out
xchg
inc
out
lcall
adc
xor
push
cmpsl
add
andl
pop
xor
std
cmp
sbb
fbstp
orl
ret
jns
punpckldq
jp
jo
adc
sbb
mov
push
mov
mov
clc
push
mov
fstl
jp
gs
out
push
sub
loopne
sbb
ss
addb
call
push
fdivrs
or
imul
xchg
xor
push
xor
inc
insl
fcomip
jg
sarl
sbb
test
xor
incl
push
xchg
loopne
sub
mov
pushf
add
or
jmp
jl
call
popf
adc
push
jbe
mov
sub
mov
dec
rorl
and
fdivr
je
lea
decl
and
movsb
add
icebp
push
inc
and
cld
int
mov
jne
ljmp
ds
js
rclb
cli
repz
imul
dec
test
adc
lods
dec
incl
mov
popa
sbb
ljmp
popf
rol
xchg
dec
js
dec
out
pop
add
mov
iret
sbb
repnz
nop
mov
cwtl
adc
push
push
movsb
jno
dec
cmp
inc
popa
push
push
mov
mov
jge
daa
fldl
sbb
push
or
rorl
in
test
mov
ja
add
dec
sbb
mov
add
add
dec
js
dec
mov
add
mov
cwtl
xor
xchg
or
ljmp
xor
into
fbstp
repnz
sbb
adc
ja
jmp
out
xor
add
or
dec
mov
lods
sub
inc
lds
adcl
or
fistpl
lods
dec
test
xchg
xchg
sar
mov
testb
fwait
and
mov
jecxz
jmp
call
addb
inc
gs
movsl
inc
sbb
push
or
daa
loop
fisubrl
sbbb
call
int
mov
push
pop
sbb
push
xchg
or
xlat
xchg
pop
and
cld
lcall
and
push
and
xchg
mov
sub
loope
lock
ret
decl
dec
sub
xchg
jns
subl
inc
adc
jo
inc
movsl
push
sub
jg
pop
test
push
data16
xlat
cmpl
in
popa
xor
popa
pop
or
call
cmp
sub
in
xchg
pop
mov
rol
mov
cmp
or
push
pop
sbb
add
mov
ss
and
lcall
sub
mov
arpl
lea
imul
leave
les
cmpsb
mov
mov
or
cld
mov
adc
xchg
adc
xchg
xlat
or
mov
push
jg
iret
mov
push
and
cmc
and
xor
shrb
and
sti
mov
lea
add
push
pop
leave
adc
mov
and
jo
mov
jg
mov
ret
adc
cmp
mov
mov
push
cmc
fldt
call
repnz
dec
push
icebp
sbbb
xchg
mov
xchg
pusha
push
dec
cmp
mov
incl
cli
dec
jns
je
jo
or
hlt
sbb
or
inc
mov
and
fisttpll
stos
push
jecxz
jno
mov
dec
fs
or
fwait
out
mov
push
or
xor
cmp
inc
pushf
sub
push
and
clc
lcall
sub
xchg
pusha
inc
push
lcall
or
or
sub
or
enter
adc
jmp
mov
in
fcoms
jnp
sbb
dec
sahf
aam
dec
decb
mov
mov
fdivrl
jecxz
testl
xchg
jp
mov
shll
int
scas
enter
sub
cmp
fsubrs
bound
mov
adc
jo
push
adc
loop
insl
ljmp
aas
and
xchg
xor
adc
adc
and
jg
push
cmp
ljmp
push
loope
lods
aam
psubw
in
pop
dec
push
hlt
cwtl
in
cmp
outsb
xor
lods
dec
sub
dec
dec
or
sbb
pop
inc
gs
jp
ret
cmp
iret
ret
into
lea
jmp
mov
jmp
mov
icebp
mov
pop
incl
jns
inc
pop
ficompl
imul
xchg
cs
and
and
inc
mov
jmp
ret
sub
popf
and
insb
out
shll
mov
add
xchg
jle
push
lods
addr16
xchg
add
add
lock
push
sysret
ficomps
cmp
cmp
xchg
dec
fistl
dec
push
mov
xchg
popf
push
ljmp
aam
daa
adc
xorl
int
imul
add
clc
or
cld
lcall
addl
inc
sbb
call
sbb
jns
inc
sub
loope
pop
mov
in
mov
loop
and
push
mov
jl
push
iret
cld
adc
push
add
mov
sbbl
std
add
xchg
ret
or
outsl
inc
lock
mov
or
jbe
mov
ret
repz
idiv
add
and
aaa
enter
ljmp
push
rcrb
rolb
mov
arpl
lcall
xor
lahf
bound
dec
mov
xor
sbb
fdivrl
mov
les
jg
and
mov
pop
rcll
jl
incb
es
lock
xchg
sbb
lds
mov
pushl
fsts
jl
sbb
xchg
fcompl
iret
pusha
inc
aaa
xchg
xchg
imul
sar
decl
je
dec
roll
nop
pop
add
cmp
inc
and
cmc
jmp
ljmp
shll
leave
pop
test
lock
clc
sbb
lea
cltd
aas
and
lcall
pop
mov
lret
loopne
je
outsl
lds
scas
or
sbb
ja
push
test
sbb
push
jae
js
repnz
inc
push
jbe
pop
xor
adc
lahf
enter
loopne
enter
and
cmp
ret
cmpsb
pushl
mov
cltd
roll
pop
push
dec
dec
sahf
inc
push
repnz
push
fnstcw
call
fcomip
sbbb
js
pop
hlt
testl
pop
adc
ljmp
mov
or
mov
adc
adc
and
add
lcall
push
out
xor
add
or
js
jl
icebp
js
and
sub
call
cmp
call
add
push
push
push
dec
movsl
jne
inc
xor
roll
aas
push
adc
xchg
inc
cmpsb
xor
mov
xchg
in
dec
inc
fimuls
jb
inc
lock
pusha
mov
add
pop
jae
mov
or
pop
sbb
mov
xchg
jg
mov
mov
cmp
pusha
xchg
dec
lret
ljmp
xor
lods
sbb
adc
pushf
clc
inc
xor
jg
rcrb
mov
negl
popa
xchg
decl
xchg
inc
jnp
mov
pop
sub
dec
and
inc
xchg
mov
addr16
addr16
shlb
push
imul
pop
sub
fs
jge
jns
insb
call
das
jno
and
and
xchg
or
cmc
sbb
dec
pop
jne
sub
pushl
rorb
sbb
push
fcoml
and
imul
mov
adc
jbe
xchg
pushl
adc
push
adc
fldcw
and
and
in
sbb
add
xchg
and
pop
mov
jmp
sti
test
and
enter
pop
test
xor
pop
adc
jmp
enter
fcoms
dec
xor
dec
test
inc
das
sub
sub
arpl
stos
subb
int
outsb
sub
mov
outsl
orl
cmp
ljmp
lcall
xchg
testl
test
orl
xchg
cmp
push
push
mov
addr16
loopne
jnp
sub
scas
test
mov
icebp
in
incl
sbb
in
mov
add
inc
and
pop
push
add
inc
cld
cmp
pusha
sbb
adc
or
out
jb
jae
aam
push
inc
mov
ret
or
sub
sbb
ljmp
faddl
push
in
mov
dec
ret
mov
je
mov
sbb
scas
cld
cmpsl
adc
xor
popa
mov
ror
sub
gs
push
repnz
sbbb
push
add
push
xor
jmp
mov
jns
stos
loop
aas
push
aas
and
mov
decl
lcall
les
mov
fcom
les
sub
in
incl
aas
shlb
and
scas
sbb
xchg
fisttps
inc
push
and
cmp
decl
add
or
mov
test
push
xchg
gs
ret
test
xchg
and
and
loopne
movsb
or
sub
jg
cmp
adc
add
test
push
mov
xlat
sbb
test
insl
cmp
push
or
jmp
push
push
dec
call
sbb
jmp
hlt
incl
sbb
pop
dec
mov
cmc
inc
ss
int
pop
xchg
clc
loopne
inc
bound
lcall
pop
dec
xor
test
loope
nop
mov
jle
mov
and
and
jmp
sub
mov
pusha
sti
ljmp
ljmp
add
pop
sub
jb
ljmp
xor
mov
jl
xlat
sub
std
xor
sbb
std
cwtl
mov
or
xor
mov
test
inc
sbb
ljmp
mov
inc
cs
std
jns
jb
jge
mov
pop
dec
inc
dec
adc
ss
ret
push
inc
dec
pop
adc
add
call
jecxz
movsb
dec
mov
sub
xchg
and
xchg
inc
mov
cwtl
inc
or
jg
xor
xor
out
xor
pop
mov
add
in
aad
bound
xor
pushf
add
rorb
decl
and
stos
lret
cmp
lds
adc
ret
jb
popa
push
nop
jmp
decl
or
nop
in
adc
dec
push
hlt
mov
pop
dec
aas
jecxz
mov
jmp
xor
add
push
imul
and
daa
dec
jnp
fisubl
mov
sub
lret
test
sub
test
call
push
movsb
push
fisttpll
lods
xor
lods
in
sub
pop
pushf
xor
push
in
jne
fimull
fsubrl
test
femms
popa
mov
mov
mov
jbe
mov
cmp
mov
adc
mov
inc
adc
mov
ljmp
cs
dec
iret
push
test
nop
jl
pop
int
push
stc
sbbb
ja
or
pop
and
pop
mov
jle
jge
ljmp
lock
pop
adc
sbb
xor
push
or
xchg
dec
inc
lock
cmp
aas
pop
mov
scas
mov
testb
test
rclb
lods
daa
clc
hlt
push
faddp
insl
jl
push
not
mov
lods
adc
shll
enter
dec
std
call
aaa
faddl
sbb
sub
dec
add
ljmp
rorb
or
inc
ds
popa
mov
icebp
enter
int3
bound
and
nop
jmp
push
mov
or
and
mov
jb
incl
and
jb
push
cs
or
and
sar
or
ficomps
adc
hlt
lret
push
push
sti
and
adc
push
loopne
outsl
cli
pop
jle
aad
mov
jge
inc
xor
cli
imul
dec
js
mov
mov
and
movsb
dec
jb
imul
or
nop
mov
test
cmp
call
lock
sub
sbb
inc
ljmp
pop
call
in
lock
xor
mov
push
adc
adc
pop
push
shrb
xlat
pop
adc
mov
cmpsl
push
incl
jnp
nop
or
and
ds
out
xchg
es
dec
dec
ret
pushf
dec
aam
push
cld
insl
inc
pop
mov
leave
imul
mov
mov
xorb
fwait
add
sub
jge
jns
cmp
and
xchg
in
cwtl
adc
adc
bswap
js
cmp
enter
jg
xchg
pop
fidivs
and
or
imul
and
call
and
enter
inc
jg
nop
test
imul
mov
and
inc
dec
orl
mov
movsl
mov
add
cs
incl
dec
in
push
or
adc
test
xorl
sbbl
lcall
sbb
xor
xchg
das
sbb
test
cwtl
dec
stc
shlb
cmpsb
pop
decl
fcoml
jg
push
dec
jnp
push
xor
faddl
addb
sti
sub
inc
push
mov
adc
pop
push
add
or
push
xchg
in
xor
test
pop
and
fsubrl
adc
ds
adc
lcall
aam
and
adc
push
jmp
jmp
push
xor
shl
mov
pushl
jg
roll
xor
test
sar
dec
xor
bound
pushl
dec
decl
jo
mov
les
aas
stos
stos
and
das
daa
std
sub
and
push
sub
xchg
lret
xor
aad
filds
fmull
das
mov
jle
sub
sub
mov
push
in
imull
dec
pop
leave
shlb
xchg
mov
xchg
jb
push
adc
in
dec
xor
cli
inc
dec
push
cmp
mov
outsb
insb
test
int
mov
jo
mov
jbe
or
pushw
or
inc
ds
adc
adc
jle
cmp
inc
and
rolb
jle
jns
sub
or
push
inc
mov
xor
sub
test
mov
adc
dec
outsb
in
les
fwait
in
aas
add
std
xor
in
mov
in
lock
adc
leave
in
pop
fistpll
ret
cltd
xor
xor
movsb
addb
jmp
sub
sub
stos
jl
xor
dec
dec
enter
sub
int3
cmp
in
test
add
in
push
imul
dec
cmp
and
sub
jg
add
adc
adc
add
xchg
mov
call
add
or
pop
fdiv
iret
fnsave
leave
enter
sub
add
or
pop
hlt
sahf
or
xchg
nop
shrl
xlat
sub
jns
jb
loope
pop
push
inc
cmp
xchg
sbb
adc
or
mov
xchg
ds
xor
jne
and
fucomi
sti
add
cld
adc
loop
push
dec
stos
xor
xchg
andb
mov
testl
out
xchg
mov
fiadds
movsb
xor
cmp
jns
xorl
mov
in
std
lcall
pop
mov
jbe
and
or
out
addl
sub
rclb
enter
pop
icebp
sub
shll
add
lcall
mov
push
gs
decl
out
or
psrld
jb
jmp
fldcw
sub
xchg
add
nop
test
inc
inc
iret
fs
and
lcall
mov
stos
push
dec
scas
lds
decl
cltd
adc
aad
lods
lcall
cmp
int
loop
add
xor
mov
ljmp
sbb
test
cmpsb
lods
pop
test
push
or
mov
push
ljmp
ljmp
xchg
inc
stc
mov
or
mov
fidivrl
int3
shlb
push
lock
decl
sub
xchg
scas
jb
jecxz
lods
ljmp
add
sub
mov
daa
ret
stc
cmc
add
das
xchg
sbb
cld
mov
movsb
sbb
jb
aam
repz
scas
lods
repz
mov
dec
xor
xchg
icebp
call
add
add
imul
or
add
lods
or
inc
jl
pop
pop
cld
jg
add
pop
adc
aaa
sub
daa
add
and
jg
add
mov
imul
inc
shlb
lcall
repz
add
sub
and
sbb
push
call
lea
and
pop
sbb
movsb
arpl
sbb
and
fmull
pop
mov
ficomps
movsl
pusha
or
jg
bound
ret
sbb
pushl
shll
rdmsr
test
daa
xchg
sbb
lcall
add
add
add
dec
sub
sbb
adc
pusha
sub
xchg
mov
sub
xchg
jle
mov
or
and
cmp
repz
or
repnz
pop
repz
add
push
mov
aam
dec
sub
mov
rorl
les
pop
jmp
add
xlat
sbb
mov
fbld
pop
out
dec
or
inc
cmp
loopne
pusha
xchg
add
sbb
ljmp
inc
mov
lahf
inc
mov
push
ret
popf
cmc
fstps
mov
insb
aad
imul
outsb
pop
out
adcl
dec
lret
mov
dec
mov
mov
push
movsl
xchg
mov
mov
adc
sbb
push
sti
add
push
inc
scas
imul
mov
rorb
ljmp
mov
mov
hlt
hlt
je
add
js
fdivrs
nop
xchg
mov
dec
pop
andb
push
mov
dec
dec
mov
roll
sbb
push
xchg
pop
inc
adc
call
ljmp
popf
push
shlb
sbb
xchg
gs
out
sbb
inc
fnstenv
loope
decl
add
iret
sbb
leave
ret
jno
mov
mov
cli
mov
lock
push
inc
or
sub
decl
mov
push
test
jle
push
xchg
add
mov
decl
fnstsw
pop
adc
jp
mov
adc
lret
pop
scas
jge
adc
sbbl
sbb
mov
inc
adcl
scas
mov
popf
push
ret
mov
add
sti
mov
add
cmp
call
and
movsb
and
popf
add
aas
jo
inc
or
lods
adc
adc
das
shrb
insb
pop
push
mov
fcomp
in
sub
repnz
movsb
jge
out
clc
decl
arpl
test
ret
inc
js
mov
inc
mov
fwait
dec
decb
enter
shl
and
pop
xchg
pop
mov
add
ljmp
cmp
out
fsubrl
inc
repz
add
repz
sarl
mov
into
call
cmpsl
shll
jae
pop
pop
lock
je
cmpsb
adc
dec
xchg
test
in
push
jl
mov
pop
dec
inc
xor
xor
sbb
and
dec
in
pop
xor
ljmp
cmc
inc
sti
xorb
jg
je
mov
stos
sbb
add
pusha
movsb
sar
decl
cli
add
add
jne
cmp
pop
mov
push
adc
out
mov
fcomip
lods
push
inc
xchg
nop
iret
xchg
movsl
iret
xchg
cmp
test
xlat
jmp
sub
pop
ljmp
mov
adc
ret
mov
add
add
mov
aaa
insl
call
push
frstor
stos
decb
loop
or
jo
ljmp
xchg
push
xor
xor
xor
incl
sti
and
push
pusha
and
mov
sub
decl
mov
cmp
lods
lret
dec
dec
sbb
cmp
xchg
jg
add
inc
inc
hlt
out
lds
mov
or
test
add
data16
and
push
ret
ja
dec
adcb
xchg
loop
decl
int
pop
push
fcomps
dec
mov
xchg
push
stc
adc
add
push
push
outsb
sbb
and
lret
ja
ljmp
leave
data16
cmp
add
push
push
scas
cmp
in
xor
aas
sub
mov
jno
rcrl
arpl
mov
adc
ljmp
sub
movsl
sbb
and
enter
xor
ret
idiv
decl
cmp
scas
push
das
cmp
lods
jbe
jge
jmp
mov
lar
sub
jp
push
and
rol
adc
push
inc
mov
dec
ret
xor
leave
cmp
enter
ljmp
or
and
repnz
fdivs
iret
xlat
stos
push
ljmp
stc
pop
and
lret
dec
cmp
sahf
aam
decl
mov
xchg
push
int
push
mov
adc
mov
push
xor
cltd
sti
dec
add
addb
push
lcall
mov
stos
inc
imul
fiaddl
test
xor
repnz
decl
stos
or
and
inc
dec
or
in
inc
rcrl
push
and
or
cmp
roll
xchg
stos
add
push
pop
dec
mov
lods
lcall
mov
inc
loop
or
in
scas
add
fcmovu
je
ret
push
mov
or
rol
fistpll
jg
mov
pop
inc
dec
lea
hlt
and
xchg
je
mov
cmp
rcr
call
xor
scas
xchg
mov
xor
xlat
dec
pushf
lock
mov
xor
inc
mov
lods
call
sbb
ja
insb
push
mov
inc
fistps
mov
jae
int
std
pop
scas
es
sub
sti
test
cmp
xchg
push
and
mov
xchg
sub
aad
and
subl
dec
cmovns
int
ljmp
pop
sbb
in
add
and
cmp
dec
insl
mov
lods
sbb
xorb
andb
sbb
push
addb
push
dec
loopne
push
add
sub
dec
out
xor
call
js
add
dec
sbbb
push
jge
enter
push
or
mov
ds
mov
sbb
lock
call
sub
adc
jb
test
xor
sub
mov
decb
push
jne
es
call
mov
sub
in
test
pop
mov
stos
or
cmpsb
or
scas
mov
fdivr
jg
lret
stos
push
pop
int
nop
cltd
xchg
xor
pusha
mov
inc
xor
push
push
mov
mov
cmp
xlat
or
imul
mov
push
lods
cmc
rolb
fnstcw
push
and
call
testl
push
scas
mov
push
insl
push
inc
pop
dec
movb
mov
lret
call
xor
ljmp
pop
insl
sbb
mov
push
sahf
mov
jg
andb
pop
sbb
push
add
int3
cmp
sbb
repnz
outsb
sub
lcall
pushf
pop
push
push
pop
aas
int3
mov
dec
jge
adc
add
mov
lea
loopne
or
pop
sbb
clc
call
jp
jnp
mov
dec
push
xchg
cmp
stc
enter
daa
adc
ljmp
cmc
lcall
sub
mov
outsl
xchg
out
and
rclb
ljmp
ss
clc
dec
js
jmp
sti
xor
xor
inc
inc
mov
dec
into
cmp
int
jmp
xor
aas
cmp
mov
mov
pushf
xchg
mov
ffree
arpl
insl
call
loopne
xchg
xor
popf
icebp
arpl
aas
add
xor
das
insl
dec
inc
pusha
adc
adc
pop
mov
es
sti
pop
jns
fidivrl
dec
push
mov
mov
es
rcl
adc
scas
je
jl
push
and
mov
outsb
pop
push
mov
xchg
lret
jp
or
xor
bound
mov
xor
loop
inc
xlat
aad
pop
filds
outsb
fwait
cmpsb
mov
cmp
jge
scas
clc
in
push
adc
jbe
or
out
add
adc
ljmp
or
pop
inc
dec
mov
dec
jae
pop
js
inc
scas
cwtl
cmp
jp
decl
inc
sub
push
iret
add
sub
cmp
int
push
or
cmp
jl
add
dec
or
pop
pop
nop
es
xor
mov
push
test
sub
push
jnp
pop
test
xchg
add
add
dec
cmovp
cli
aaa
cld
jg
or
sbb
leave
adc
les
mov
jns
cmpsl
mov
jmp
mov
dec
stos
popf
je
aad
pop
jge
jae
jne
adc
jne
mov
test
jecxz
jmp
mov
cltd
aas
bound
push
cmpb
sbb
mov
dec
sub
mov
pop
mov
je
push
push
sbb
fstpl
and
subb
call
inc
stos
jb
into
xor
mov
push
js
jp
and
mov
lcall
jl
mov
sub
adc
daa
ret
pop
call
or
fwait
add
call
sbb
xchg
jae
mov
imul
mov
or
mov
cld
or
xor
adcb
stos
popa
push
rcr
shrl
pushl
int
jno
addr16
fs
jne
mov
ja
dec
test
and
xchg
stc
jg
or
pop
repz
add
jg
nop
pop
adc
cmp
ljmp
xchg
dec
push
push
shlb
dec
cmpsl
inc
enter
loopne
xchg
pop
leave
orl
test
aas
jg
mov
mov
dec
lahf
imul
pop
out
fisttps
cmp
push
and
cwtl
lods
fistps
les
inc
shll
pop
stc
push
pop
fcmovnbe
daa
sub
js
dec
mov
or
mov
lcall
rcrb
sti
sti
scas
es
or
and
sub
xchg
addb
lret
leave
and
jmp
enter
lods
adcb
fists
loopne
dec
sti
xchg
inc
shll
shl
or
lock
test
sub
and
inc
and
les
mov
push
inc
sbbl
sub
call
xchg
or
in
inc
mov
mov
mov
fists
fstp
fmuls
sbb
jns
cmpsb
fs
push
pop
int
xchg
pop
jg
mov
jno
xchg
mov
mov
or
mov
pop
pusha
adc
ljmp
cli
lcall
fdivrs
push
mov
mov
jne
js
adc
ljmp
mov
and
loope
pusha
or
insl
callw
push
int3
xlat
mov
popf
xorl
outsb
dec
call
jecxz
adc
inc
loope
cmpsb
dec
movsb
mov
insl
test
push
cld
sbb
push
push
nop
stos
call
cld
add
add
mov
lret
adcb
inc
push
orl
pop
push
mov
incl
push
push
pop
aas
push
or
sbb
in
add
dec
lea
pop
and
inc
jb
pop
xchg
popa
out
enter
imul
pminsw
shll
inc
in
mov
idivb
adc
add
inc
call
push
mov
or
sti
mov
push
lcall
lea
add
fidivl
jmp
inc
hlt
cltd
rcr
std
dec
enter
mov
subl
int3
into
pop
call
fisttps
or
push
xorl
in
call
push
mov
in
mov
mov
mov
push
in
cs
xchg
insb
push
popa
sbb
out
lcall
ja
dec
jecxz
in
popa
xchg
xchg
lock
sbb
xchg
into
add
mov
push
cmp
mov
jno
jge
in
divl
call
roll
in
and
nop
leave
dec
fsubl
pop
pop
dec
sbb
xor
sbb
mov
pop
xchg
stos
dec
add
ss
in
inc
ret
add
adc
in
or
xlat
jg
and
sbbb
sbb
or
or
lcall
add
in
inc
lods
out
pop
loope
and
dec
cld
cmp
mov
testb
fdivs
mov
movsl
outsb
sub
or
cmp
imul
incl
inc
mov
shlb
and
cmpsb
xchg
inc
and
cmp
inc
pop
js
pusha
sub
mov
ret
gs
push
out
xchg
adcb
cmpsb
adc
outsl
ljmp
shr
icebp
cmp
dec
rcr
divl
js
push
inc
add
sub
add
add
and
add
into
or
jmp
ljmp
add
out
shll
push
js
bound
inc
or
sub
push
mov
dec
add
push
cmp
iret
mov
dec
jecxz
mov
dec
xchg
test
dec
push
faddl
xor
das
push
mov
dec
sbb
dec
pushl
sub
sub
sub
sbbb
dec
ljmp
lods
jo
ljmp
mov
sbb
or
fnstcw
rcr
cmp
cmp
loope
test
pop
xchg
dec
sub
rcrb
adc
mov
mov
add
sub
scas
lret
les
pop
sbbl
mov
push
lahf
add
pop
or
ljmp
sbb
je
pop
jbe
push
jno
push
scas
mov
decl
pop
es
outsb
in
sub
adc
aam
push
push
fsubrp
fidivs
jle
push
insb
aas
pop
cmpsl
jne
push
or
cmpsl
inc
imul
daa
les
push
xor
stos
dec
xchg
pop
xchg
ja,pt
push
push
int3
adc
arpl
and
sahf
mov
clc
fdivrp
fbld
pop
cmp
jne
mov
xor
xchg
dec
ja
jmp
jb
add
cmp
pop
fisttpl
add
fadd
adc
cwtl
clc
jbe
shrb
add
pop
push
addr16
rcll
jle
inc
inc
dec
adc
or
les
imul
add
sub
cmp
decl
and
lret
jg
cld
lods
xchg
pop
and
jbe
and
in
cld
jp
repnz
adc
mov
mov
sub
sub
push
popf
sub
dec
dec
xor
sub
mov
decl
fstpt
addb
and
or
and
xchg
jns
cwtl
add
lods
jbe
dec
or
decl
out
decb
mov
xor
fs
ret
add
jbe
lock
mov
rcrl
xchg
cmp
mov
mov
hlt
jle
ljmp
add
cwtl
scas
or
add
lds
jo
push
add
cmp
add
adc
xor
push
sub
decl
jns
or
push
xchg
test
adc
push
sbb
decl
dec
scas
adc
addb
mov
mov
cmpsb
insb
jne,pn
cmp
add
ljmp
mov
sbb
ljmp
filds
mov
or
inc
pop
iret
fwait
mov
xor
lcall
or
fst
sbb
popl
sub
inc
push
mov
and
rorb
shrl
and
ror
push
push
lea
jnp
pusha
and
icebp
test
or
push
decl
or
push
cmp
shlb
cmp
ret
dec
pop
in
inc
test
fistl
les
jg
ljmp
hlt
nop
call
jp
or
fsubl
sub
jne
xchg
push
shlb
sbb
mov
lret
lock
enter
into
pop
or
push
ja
jmp
in
cwtl
adc
das
dec
push
adc
sarb
push
dec
decl
lock
mov
add
mov
fistpl
mov
je
mov
pop
xchg
push
negb
out
decl
cs
sbbb
sbb
scas
pushl
xor
orb
sub
loope
xchg
and
mov
pop
in
jmp
or
shrl
jo
sbb
decl
or
xor
lcall
add
or
push
imul
add
mov
cltd
xchg
inc
pushl
cwtl
sub
testb
push
add
cmp
insl
adc
fisttpll
cmpl
sub
sub
or
nop
adc
sti
in
dec
movsl
and
or
iret
loope
pop
es
adcb
and
loope
add
xchg
movsb
outsl
aaa
push
push
ret
mov
inc
addl
and
mov
in
dec
in
add
push
xchg
mov
add
mov
adc
sub
or
push
lock
das
cli
xchg
sub
push
inc
mov
pop
hlt
addr16
hlt
std
xchg
mov
and
push
adc
or
rcrb
dec
push
sbb
fdivrp
fs
jg
fsubp
adc
push
cmp
jne
push
push
nop
and
cmp
fstl
cmp
popf
xor
insb
xchg
xchg
jp
sub
push
or
fisubrs
pushf
outsl
mov
inc
sbb
icebp
insb
addr16
fs
pop
or
jmp
call
mov
push
pop
sbb
add
jnp
xor
in
xchg
push
pop
add
mov
mov
xchg
sbb
jg
push
dec
xchg
enter
jle
xchg
mov
inc
mov
sbb
add
ret
aaa
cld
call
inc
or
stos
mov
pop
fisttps
cmp
jg
sub
aas
mov
cmp
jmp
ss
xchg
data16
or
outsb
icebp
in
and
push
jp
sub
jg
pop
andb
sbb
test
pop
frstor
mov
adc
ljmp
jl
pop
cmpsb
pop
jl
or
jle
sub
adc
or
clc
lret
dec
jmp
dec
das
cmpsb
sbb
or
lret
das
rorl
es
cmp
xor
ljmp
add
add
aad
cmpsb
lea
filds
nop
dec
fs
dec
push
inc
xchg
lds
sbb
sub
dec
jmp
jb
dec
fistpl
cld
mov
mov
add
insb
test
divb
cltd
cmp
in
clc
decl
decl
push
or
mov
insl
test
test
mov
fildl
addr16
xchg
pop
lea
inc
dec
aam
out
mov
fidivrl
in
xor
and
or
lock
cmp
lods
dec
or
inc
add
pop
rcll
xlat
shrl
dec
push
push
stos
addr16
sub
out
add
into
mov
aas
jo
imul
sub
add
jmp
lcall
js
and
dec
icebp
mov
mov
cmpsl
push
jno
dec
lret
aam
cmpsb
call
mov
xchg
push
hlt
test
outsl
scas
insl
mov
sub
add
adc
test
incl
or
je
leave
push
enter
enter
xor
iret
inc
pop
or
push
add
nop
jmp
xor
adcl
adc
and
call
xor
aad
in
dec
arpl
mov
inc
mov
pop
stos
loope
leave
mov
dec
xchg
das
adc
fbld
cmc
sahf
dec
mov
mov
jle
ljmp
xchg
xchg
int3
dec
push
orb
xchg
xchg
sub
cs
fisubrs
scas
fcomps
mov
sbb
xchg
and
push
test
or
pop
jb
in
jo
xor
jg
ror
je
cli
orb
sti
idivb
mov
jg
sbb
loopne
lahf
push
fs
inc
daa
sbb
jbe
repnz
mov
and
sub
add
jo
cli
mov
pop
add
enter
mov
add
notl
ss
rolb
rcrl
sbb
xchg
fmull
xchg
sbb
push
adc
ret
jg
add
inc
xchg
cmpl
mov
pop
mov
jg
mov
adc
add
inc
in
enter
dec
fidivrs
pop
mov
scas
in
mov
jl
adc
push
mov
or
inc
push
daa
inc
xor
pop
int3
pop
sub
ret
lcall
cmp
rorl
mov
dec
inc
iret
call
ret
scas
jmp
test
decl
jbe
mov
dec
jp
jge
mov
wrmsr
push
push
jne
cwtl
test
push
push
sub
stos
xchg
pop
mov
pop
sub
incl
jo
inc
mov
adc
cmp
sarl
push
dec
test
pop
mov
decl
dec
out
outsb
push
into
dec
push
xor
adc
cmc
stc
mov
jae
sub
and
xor
jmp
std
stos
test
shrb
mov
cmp
cmp
jo
mov
jb
ljmp
inc
pop
sbb
pop
mov
jo
and
test
push
and
pop
inc
mov
pop
or
arpl
sbb
add
decl
in
aam
das
adc
sbb
and
mov
in
jg
push
or
out
push
int3
add
add
aam
pop
andb
xchg
jp
add
pushl
add
pusha
jbe
or
movsb
push
fs
sub
mov
inc
lock
lds
stos
pop
add
incl
lret
sbb
call
inc
data16
sub
call
mov
ret
aam
aad
cmp
push
incb
pop
and
repz
add
fwait
cmpsb
shr
adc
call
push
mov
dec
sbb
lea
push
decl
dec
mov
adc
cmp
inc
lods
dec
ficoms
clc
dec
repnz
lcall
outsb
adc
or
lcall
sub
fidivrs
ds
mov
cld
pop
push
cwtl
lds
jmp
or
fists
mov
inc
dec
jge
mov
imul
decl
pop
and
xchg
scas
in
push
notl
or
addl
pop
std
incl
jmp
sbb
add
pushf
mov
loopne
jbe
sbb
dec
add
mov
mov
sub
aas
xor
add
add
call
mov
pop
mov
insb
ja
sub
mov
inc
xor
jl
adc
mov
xor
cmp
cmpsb
and
in
jns
mov
outsb
mov
push
movsb
push
aam
pushl
sub
fidivs
push
pop
sbb
sar
pop
ret
pop
shll
int3
mov
xchg
inc
inc
ljmp
dec
pusha
jle
adc
lea
push
and
and
sbbl
add
xchg
ljmp
andb
xor
inc
mov
sbb
xor
or
push
cld
mov
cld
cmp
inc
outsb
scas
fcmovnb
xchg
lret
add
out
clc
jne
adc
mov
and
and
mov
insl
pop
loopne
call
push
push
aad
xchg
sub
mov
sub
xor
add
popa
pusha
add
std
ljmp
adc
adc
aas
and
push
cmpsl
ret
add
mov
in
dec
lock
lods
push
pop
cmpsb
inc
lahf
add
in
mov
call
pop
ror
ffree
test
popa
and
adc
fdivrs
popa
push
adc
cld
imul
push
mov
xor
data16
push
and
ljmp
dec
stos
push
or
subl
adc
push
mov
sub
cmp
dec
mov
pop
and
sub
jo
mov
sub
push
xchg
adc
mov
call
cmpsb
std
and
sbbb
cmpsl
movsb
pusha
insl
fistpl
add
dec
lcall
push
xor
std
shrb
repz
sub
repnz
sub
pushl
inc
mov
orb
xchg
inc
ret
aam
shll
mov
mov
out
pop
or
xchg
mov
mov
mov
ljmp
call
jmp
xchg
pop
ljmp
push
sbb
divl
out
dec
sti
ret
enter
push
sbb
incl
add
cld
pop
mov
into
sub
adc
outsb
adc
sahf
sbb
dec
and
aam
pop
imul
incl
mov
push
xor
gs
jp
in
sbb
mov
jg
out
orb
seto
cmpsl
push
xor
decl
jb
mov
jo
shll
imul
xor
sub
lcall
mov
in
jbe
fnstenv
jle
lea
nop
sbb
decl
or
bound
and
clc
ss
scas
push
push
les
test
ss
inc
stos
adc
sub
rcrl
cmp
dec
cmp
ss
incl
jmp
in
pop
push
or
fnstenv
xor
repnz
fwait
pop
je
cwtl
jp
into
push
popf
insb
mov
add
adc
and
mov
add
popf
mov
fwait
call
in
inc
imul
and
enter
pusha
or
pop
inc
jmp
clc
iret
sbb
inc
es
xchg
clc
add
clc
call
add
add
adc
movl
xor
enter
push
pop
loop
mov
adc
inc
test
jmp
loope
pop
mov
inc
lcall
or
cltd
dec
or
rclb
sbb
pop
clc
cmpb
pop
xor
add
sbb
in
inc
dec
sub
movsb
jmp
test
cmp
lcall
cmp
in
inc
divb
imul
shll
daa
xor
dec
pop
sub
push
push
push
shrb
clc
clc
push
lock
cld
sbb
ljmp
or
aam
cmp
lods
pushf
push
les
pop
sbb
mov
mov
pop
rolb
add
cmp
push
adc
mov
mov
xor
outsb
push
into
inc
faddl
jb
movsb
cmp
jbe
push
testb
scas
push
movsb
jl
jle
jne
icebp
lret
decl
jmp
int3
jnp
je
shrb
xchg
enter
shlb
sbb
sbb
enter
ljmp
fadd
pop
pop
iret
sbb
rcr
sub
aam
cli
cmp
js
es
or
pushl
xchg
cmp
mov
lods
daa
push
adc
adc
xor
pushf
dec
mov
stc
add
aaa
xchg
leave
cli
push
std
push
inc
cmp
cmp
daa
xorl
or
jg
outsl
ret
in
add
lods
adc
into
rcl
arpl
fdiv
sbb
cmpsb
add
incl
add
outsl
mov
add
loopne
enter
add
pop
rcrb
ljmp
stc
xchg
and
subl
cmc
inc
loope
cmp
sub
dec
jmp
jmp
sub
sbb
mov
iret
aaa
add
mov
mov
xlat
jg
inc
clc
ljmp
push
mov
add
xor
jo
jno
dec
ror
stos
push
call
push
xor
jg
and
or
add
test
or
fsubrl
clc
lcall
daa
pop
lods
and
repnz
je
add
xchg
cmp
xchg
jle
cmp
or
mov
and
pop
cmp
xor
dec
scas
pushl
jg
xor
fdiv
adc
push
enter
inc
lcall
cmp
push
popa
and
sub
inc
pop
fildll
sub
jae
sub
call
adc
inc
xorb
pop
sbb
lds
insb
dec
bound
ret
xorb
sbb
aas
pop
adc
decl
xor
or
xchg
jne
jle
int
loope
test
push
lods
jb
cltd
sarb
lcall
ret
notl
jmp
or
mov
or
sub
or
test
jo
fidivrl
mov
dec
mov
inc
pushf
lock
mov
and
jne
push
sbb
scas
incl
and
jae
es
cli
or
imul
rolb
or
pushl
jg
add
inc
xchg
pop
je
inc
das
pop
movsl
ret
test
lods
inc
sbb
push
and
xchg
jg
mov
aad
jb
lea
aad
mov
mov
aam
push
xchg
mov
sub
sub
or
sar
jmp
outsl
push
pop
add
fnstenv
fdivp
pop
sbb
dec
bnd
push
pushf
insl
pusha
jecxz
das
add
jmp
xor
add
pop
cmp
lods
decl
cmp
movsl
fs
seta
push
sub
and
mov
push
jle
push
int3
mov
daa
mov
cmp
cmc
testl
bt
cmp
xor
lcall
push
or
push
fsubrl
sti
shrl
push
test
repnz
shlb
ret
js
decl
out
jb
xor
clc
push
or
ljmp
test
lods
xchg
mov
and
jnp
in
jmp
pop
test
or
adc
loope
sub
push
inc
ds
aaa
andl
mov
pop
lret
imul
dec
push
xor
jg
mov
and
mov
xor
insb
mov
inc
divb
mov
xorb
sti
jmp
add
std
test
cld
push
add
test
xchg
pusha
mov
or
jg
decl
xorl
inc
add
mov
imul
or
mov
jmp
mov
adc
dec
fistl
sbb
mov
cmp
jecxz
push
jnp
xor
test
cltd
jns
imul
pop
lock
sbb
sub
push
mov
add
out
pop
gs
pop
add
ja
inc
inc
fcmove
arpl
jp
loopne
rol
or
xor
call
loopne
inc
jl
push
test
sub
cmp
mov
dec
inc
sahf
dec
ljmp
icebp
js
sbb
inc
xchg
les
test
xor
push
jne
or
std
sub
decb
dec
adc
in
imul
and
add
bound
loop
push
mov
cli
cmc
dec
in
movsb
xchg
mov
add
sbbl
add
xchg
arpl
push
fidivs
pop
and
fldenv
lret
mov
or
aam
xor
gs
das
push
mov
cmpsb
clc
and
rclb
adc
fsubrs
xor
cmp
mov
push
add
jnp
cmp
add
or
rcll
cmpsb
enter
push
lcall
es
cmp
inc
sbb
jg
pop
cli
cmp
sti
stos
dec
mov
jnp
leave
cmp
mov
pushf
sub
cwtl
push
lcall
cld
sti
popf
ss
mov
hlt
ss
in
leave
scas
add
cmp
out
sti
jg
out
xor
sbb
jmp
pop
cmp
testb
test
xor
push
dec
jg
ss
mov
ljmp
xchg
mov
push
imul
lahf
push
or
jge
hlt
ljmp
enter
fbld
push
inc
jbe
jbe
enter
mov
push
fwait
outsb
addr16
jmp
stos
ret
shll
push
out
sahf
inc
dec
pushl
std
or
sbb
aad
pushf
or
inc
insb
add
fildl
ret
call
stos
jle
push
or
es
sbb
outsl
or
jb
push
jl
add
nop
outsb
mov
mov
dec
push
stc
push
or
in
mov
dec
push
mov
xchg
hlt
outsb
mov
fs
out
shll
int3
loope
mov
pop
add
add
fstps
bound
ret
xor
incl
mov
cmp
filds
popa
fdivs
fidivs
push
fstpt
mov
xor
sbb
mov
test
jge
or
push
mov
add
add
nop
adc
imul
outsl
fistps
sbb
test
in
sti
cmp
mov
call
or
mov
pop
es
sbbl
ljmp
cmp
lods
or
jg
adc
add
pop
ljmp
jmp
les
mov
mov
int3
push
jg
push
jb
outsb
mov
insl
inc
sub
inc
insb
mov
aam
push
jl
nop
push
pop
fs
mov
push
pop
mov
lds
mov
push
es
jo
icebp
lods
add
lods
in
mov
xlat
dec
insb
jo
mov
xchg
inc
ljmp
jbe
sub
rorl
jno
call
lods
cmp
fimuls
and
dec
jg
test
inc
add
lret
push
push
call
ljmp
out
and
inc
in
movsw
add
dec
xchg
jecxz
andb
adc
xor
push
or
nop
cmp
clc
lcall
inc
add
lods
or
mov
dec
sub
leave
mov
adc
push
inc
push
loop
add
sbb
incl
or
add
add
or
xchg
xchg
aad
je
aad
pop
add
or
lcall
test
pop
es
push
imul
mov
and
fwait
shl
std
push
inc
out
into
aas
pushl
sub
cltd
int3
mov
dec
dec
mov
cld
add
cmp
lcall
dec
cmpsl
mov
or
and
cs
stc
fdivrl
adc
cltd
push
inc
mov
xchg
add
mov
adc
sbb
inc
pop
add
dec
cmpsw
dec
dec
ljmp
or
pop
inc
test
sub
mov
addr16
xchg
sti
imul
rcrl
pushf
cltd
cmp
jne
or
add
ds
push
cld
movsb
lcall
insb
enter
stc
add
add
stc
add
ficoml
push
hlt
repnz
ljmp
inc
hlt
cmp
ret
lahf
push
imul
jg
decl
rcrb
nop
out
push
cmp
dec
repz
xchg
mov
push
les
or
addr16
inc
push
cmp
call
nop
xchg
daa
mov
push
add
sub
mov
test
mov
loop
sar
vaddpd
cmp
js
jmp
ds
popa
mov
decl
xchg
data16
sbb
jge
lock
adc
fstps
into
js
fmull
mov
lods
cmp
sub
push
xor
xor
jg
and
sbb
or
cmc
mov
scas
hlt
sbb
cmpw
pushl
sub
in
sub
cmp
lds
mov
lods
lahf
popf
add
scas
decl
jle
inc
mov
sbb
shlb
icebp
add
shl
jg
lret
call
xchg
add
leave
mov
inc
adc
jmp
mov
dec
pop
and
jns
jl
stos
add
jbe
or
add
fnstenv
ljmp
xchg
mov
push
mov
mov
jp
shrb
scas
push
jge
push
push
pop
inc
add
ds
repnz
aam
decl
jecxz
dec
movsb
xlat
jne
sti
stos
inc
inc
pop
cli
fisubrl
inc
inc
jnp
jle
inc
mov
adc
pushl
loop
stos
xorl
mov
fcomip
cmp
mov
pusha
loopne
push
outsb
decl
mov
push
test
in
xor
shlb
mov
fistl
xchg
imul
xlat
das
lret
ljmp
sbb
out
call
inc
daa
int
mov
sbb
pop
add
decl
scas
fdivl
inc
enter
in
sub
jns
adc
fmull
inc
or
push
dec
flds
sbb
dec
int3
mov
loopne
gs
pop
aaa
add
decl
inc
test
inc
aas
mov
mov
movsb
lods
fcmovnu
rorl
fs
pop
and
push
andl
loopne
mov
dec
dec
xchg
dec
inc
js
in
lcall
push
sub
xchg
push
and
rorb
clc
popa
pop
mov
decl
jge
dec
dec
add
jbe
xor
push
loop
dec
outsl
imul
add
sub
dec
sbb
dec
lds
leave
insb
xchg
jl
pop
or
push
aas
ficomps
jg
mov
fsubl
mov
aas
es
push
adc
orl
jmp
ds
fsts
mov
bound
loopne
sub
dec
xor
scas
sbb
and
mov
call
ret
lds
sub
in
inc
push
mov
stc
xchg
insl
ret
cmp
pusha
pop
adc
mov
pop
cmp
inc
mov
ret
mov
es
in
mov
add
pop
addl
cli
adc
pop
movsl
aas
xor
imul
arpl
sbb
cld
and
ljmp
sbb
mov
sub
sar
mov
pop
inc
mov
ret
call
loopne
lcall
xor
fwait
mov
xchg
jecxz
dec
cmpsl
inc
xchg
fidivrs
add
pop
pop
and
stos
aad
ds
or
add
push
mov
sbb
pushl
mov
mov
ljmp
decl
or
xchg
lock
test
je
inc
jecxz
mov
dec
push
fwait
ret
adc
lcall
or
lcall
lock
aam
movb
cli
dec
shr
stc
cmp
roll
ret
dec
inc
rol
mov
call
subb
dec
dec
ret
adc
mov
lret
call
adcb
int
ljmp
or
push
rcrb
cmpsl
cmp
cltd
decl
add
cmp
push
aas
and
in
mov
adc
call
clc
incl
push
pop
mov
inc
mov
lret
ficompl
dec
jae
push
mov
mov
iret
sub
fs
lcall
cmp
popf
jb
dec
cmp
pop
sbb
push
fisttps
mov
sbb
vexp2ps
push
adc
mov
jno
dec
dec
sub
lea
dec
sub
icebp
cmpsb
leave
jmp
incl
cld
lcall
jae
out
daa
sbb
cmp
mov
fcmovnbe
inc
cwtl
decl
pushl
ficoml
fldl
popa
aad
mov
add
cmp
jo
dec
popa
push
ljmp
movsl
xor
repnz
pop
sbb
cwtl
and
sahf
mov
pushl
sbb
dec
sbb
leave
pop
inc
add
lcall
inc
sbb
add
cli
dec
pop
push
dec
loope
orb
leave
pmuludq
mov
jo
sahf
adc
inc
jns
sbb
aad
dec
push
pop
adcl
decl
int
mov
leave
adc
insl
sub
cmp
xchg
pop
outsb
enter
addr16
decl
push
hlt
and
push
daa
sub
fiadds
mov
mov
mov
mov
pushl
sbb
loop
adc
mov
jbe
push
cld
mov
mov
js
mov
fs
jmp
icebp
push
cld
movsl
mov
mov
sub
sub
pop
add
push
or
push
je
xor
inc
lcall
incl
das
repz
mov
or
int
push
add
cmp
scas
jg
jmp
icebp
jp
push
sbb
mov
aad
cmovg
imulb
jmp
mov
out
adc
imul
jo
xchg
cmp
pop
dec
add
cwtl
dec
add
inc
and
fsts
jmp
nop/reserved
ficompl
mov
pop
es
and
dec
jbe
repnz
ljmp
push
sbb
sub
dec
xor
jb
mov
stos
pop
out
popa
add
test
movsl
and
rolb
cwtl
scas
clc
das
cli
repz
mov
fiadds
sub
or
rcrl
lret
aam
arpl
scas
push
push
or
or
in
pop
loopne
in
pop
and
cltd
push
insl
pop
push
push
pusha
rep
icebp
add
pop
inc
roll
lcall
movsb
push
xchg
rcll
sarl
out
lcall
xorl
mov
inc
sbb
cmp
std
xor
int3
sub
push
push
stos
mov
sbb
push
xchg
dec
dec
cmp
daa
jmp
stos
pushl
adc
lds
or
sub
or
dec
cmp
xchg
je
loop
sbb
pop
adc
inc
scas
es
loope
pushf
pushf
decl
xchg
jmp
inc
add
pop
aaa
push
test
lcall
push
sbb
nop
adc
dec
in
ljmp
mov
lahf
or
mov
test
jg
stos
and
dec
scas
je
aas
add
ljmp
hlt
dec
jb
das
push
mov
jmp
cltd
add
xlat
movsb
jno
incl
mov
pop
push
cmpsb
xor
inc
mov
popf
jmp
decl
int
sub
ss
ret
push
cs
jns
int3
and
mov
pop
adc
mov
incl
or
insb
gs
sti
push
test
add
lahf
sbb
jbe
mov
pop
pop
jp
ss
cmc
or
call
test
decl
sbb
lea
pop
inc
mov
fists
add
pop
pop
sar
lcall
jg
inc
cld
sub
adc
in
pop
fcmovnu
sub
fabs
push
add
jmp
test
test
jnp
xchg
andl
dec
push
dec
add
nop
and
mov
xchg
mov
push
scas
cli
pop
addb
lcall
aam
outsb
rclb
sbb
ljmp
add
in
adc
push
in
inc
inc
jne
popa
std
iret
lea
cltd
inc
sar
jg
lcall
dec
in
out
dec
je
and
jl
cmpl
xor
ljmp
xor
mov
sub
jl
sbbl
inc
loop
hlt
in
fldcw
or
mov
call
mov
mov
call
sub
mulb
mov
fsubr
dec
push
or
decl
mov
push
repnz
or
ret
dec
add
inc
insl
inc
mov
orb
hlt
cmp
in
inc
add
loopne
fnstsw
or
pop
sbb
or
dec
cld
and
push
push
jg
mov
jmp
jo
add
imul
sbb
shl
in
and
dec
and
xlat
popl
pop
push
insb
xor
js
movsb
mov
jg
xor
out
pop
in
pushl
inc
push
pop
add
ficoms
aaa
mov
sbb
addr16
shl
sar
aam
test
decl
imul
xor
xlat
cmp
jp
adc
mov
dec
ljmp
sbb
and
bound
push
leave
cmp
ljmp
imul
outsl
lret
repz
popa
lcall
cld
enter
push
fldcw
decl
ljmp
sbb
mov
sub
mov
repz
xchg
in
xchg
mov
jg
movsl
mov
and
inc
pop
jno
xor
cmpsb
in
out
push
pop
rorb
cld
sub
jmp
add
inc
sbb
in
sahf
ret
add
inc
pop
hlt
push
pop
hlt
das
xchg
sti
notb
inc
pushf
pop
dec
and
jns
inc
addb
es
test
into
xchg
pop
jle
dec
xor
mov
and
mov
flds
add
or
push
jno
or
push
outsl
lock
xor
dec
jge
jae
outsb
cmc
jg
imul
aaa
jmp
push
add
cwtl
addr16
lods
movb
ljmp
or
mov
mov
lods
je
movsb
push
fisttpl
jmp
push
and
daa
lret
jmp
cmp
adc
jge
rcrl
inc
subps
add
fwait
pop
push
in
add
arpl
pushl
mov
push
fldenv
mov
add
add
scas
mov
jg
orb
sbb
push
inc
in
push
adc
dec
rolb
or
pop
mov
mov
lcall
push
into
add
nop
cmpsb
dec
addr16
add
and
inc
sub
in
add
add
mov
cmp
xor
bound
xorb
sbb
cld
push
sbb
faddl
cmp
popa
aad
jl
mov
jnp
mov
mov
cld
push
loopne
andb
xor
jns
mov
lret
ret
nop
or
call
add
popa
pushf
mov
mov
push
in
out
dec
ror
push
and
pusha
je
mov
data16
incl
jbe
inc
xor
adc
mov
mov
test
in
adc
dec
int3
mov
lcall
jmp
cwtl
sub
dec
pop
xchg
movsb
jne
xor
jmp
cmp
jmp
pop
pop
xor
push
jg
cmp
inc
jmp
lcall
or
mov
test
inc
and
lcall
in
mov
sub
mov
and
aad
inc
xor
inc
sbb
incl
add
arpl
rol
mov
andl
and
lcall
cmp
ds
sub
stos
cs
xlat
jl
cld
jne
mov
pop
sbb
sahf
xchg
out
incl
flds
out
jo
xchg
leave
jo
xor
and
adc
add
call
aaa
adc
add
fsts
or
call
rol
dec
inc
add
mov
test
add
lods
insl
enter
inc
mov
lcall
add
fwait
sbbl
pop
jecxz
or
dec
lcall
fld
push
incl
xchg
inc
or
int3
jne
cltd
sbb
or
adc
push
xor
pop
and
ljmp
pop
adc
lods
setle
insl
adc
mov
jne
adc
push
dec
push
pop
scas
push
add
decl
sbb
aas
mov
loopne
sbb
mov
mov
lret
mov
adc
test
popf
lcall
loopne
adc
test
shrl
inc
sub
xchg
add
decl
push
mov
testl
mov
rorb
sar
movsb
push
lcall
rcrl
jge,pt
xor
popa
lahf
test
push
call
int3
sbb
jg
lods
push
adc
add
push
aaa
rcrl
test
and
scas
cli
dec
mov
push
and
stos
lret
or
cmpsb
lds
add
dec
ret
insl
mov
das
cli
or
les
lea
or
dec
mov
jg
loop
decl
mov
lea
or
bound
daa
cmp
inc
mov
call
jo
insb
xor
dec
cmp
jbe
push
loope
dec
sarb
mov
enter
cmp
dec
call
cmp
fwait
nop
push
xlat
lret
push
es
loopne
xor
jbe
mov
ljmp
les
pop
orl
mov
test
shrl
lcall
or
cmp
jmp
add
test
inc
sub
cmp
push
lcall
mov
incb
sub
nop
adcb
rol
cmpl
idiv
insl
testb
lea
in
shll
mov
ds
cmpb
gs
jmp
or
js
cmp
jge
pop
and
in
ljmp
insb
or
fs
cld
push
pop
add
les
in
ret
daa
sahf
stos
mov
mov
xor
jb
sub
mov
adc
jp
xor
sbb
adc
jp
adc
ja
incl
inc
fisubs
mov
sub
sbb
scas
xchg
cwtl
lahf
pushf
push
pop
jno
mov
pop
dec
sbb
xor
pushl
push
dec
mov
mov
xchg
or
sub
out
scas
sub
dec
xchg
add
sub
int
inc
dec
ljmp
decl
dec
and
mov
sbb
or
scas
divl
pop
or
add
mov
mov
leave
dec
aam
lods
decl
jecxz
add
jge
cmp
mov
push
in
push
gs
insl
cmp
mov
roll
add
adc
add
sub
sbb
mov
jmp
sahf
inc
adc
mov
cs
fmull
jg
rcrl
cwtl
xchg
dec
leave
xchg
test
inc
decb
int
jmp
jge
inc
aam
ud0
push
mov
mov
pop
xorb
jmp
jle
lcall
into
or
pushf
gs
xchg
mov
inc
sub
mov
nop
cmp
or
fs
mov
jmp
in
nop
jl
push
adc
jb
pushf
cmp
cwtl
xor
cmp
cmp
and
inc
in
jno
mov
ficompl
and
mov
jmp
aaa
jge
movsb
outsl
shr
cmp
pop
movsl
ficoml
sar
popf
clc
push
outsl
adc
inc
mov
pop
sti
lds
inc
xor
movsl
jns
decb
add
shll
push
ljmp
xor
out
rcll
and
icebp
ret
xorb
sub
pusha
nop
rcll
pusha
xor
mov
ljmp
add
mov
rorb
sbb
lock
decl
nop
jno
ficompl
push
fsubrs
cmp
jo
sbb
ret
shll
call
cmp
aad
gs
lcall
push
add
incl
jge
xor
es
add
xchg
push
push
outsb
add
pop
sub
push
push
ljmp
in
dec
mov
pop
outsl
add
add
xchg
pop
mov
inc
fucomip
jl
sbb
inc
loopne
cmp
add
in
mov
mov
cmp
ljmp
pusha
mov
and
mov
ret
jg
mov
inc
cmp
shlb
jg
mov
int3
cmp
push
or
xchg
inc
push
pop
xchg
int
xchg
add
sub
call
movsl
sbb
clc
shrb
jecxz
adc
cmp
mov
mov
pushl
adcb
xchg
push
mov
xor
jmp
bound
mov
and
decl
xchg
mov
adc
and
pop
mov
cmp
sbb
sub
inc
dec
enter
or
push
mov
dec
test
fimuls
enter
add
cli
dec
decl
or
xlat
shll
pusha
xchg
jle
cmp
jmp
sbb
in
xchg
xchg
sbb
mov
push
push
mov
es
adc
jg
fdivrp
in
mov
push
xchg
int3
jnp
xor
sarb
std
sub
xchg
adc
ret
jb
cmpsl
mov
jmp
sarb
xor
pop
sub
jnp
icebp
flds
loope
push
and
push
push
bound
mov
and
lock
stc
mov
fcoms
fistpll
dec
sahf
mov
jo
jmp
loopne
push
jne
nop
inc
les
sarl
dec
loope
jl
pop
loopne
pop
adc
rclb
dec
dec
inc
rolb
xor
mov
inc
cmp
lea
pushl
or
mov
js
dec
push
and
adc
rorb
loope
sbb
fbstp
mov
or
cli
aas
test
sbb
int
xor
inc
shrl
stc
push
or
mov
in
push
bound
or
cld
das
clc
jg
xchg
jmp
xor
roll
cmp
xor
ljmp
repnz
mov
dec
bound
mov
mov
out
fwait
test
jmp
sbb
cmpl
dec
sub
cmpsb
sti
ds
mov
adc
adc
subb
and
sahf
sub
xchg
inc
jle
lahf
dec
clc
and
xchg
in
or
hlt
xchg
pop
jne
ss
inc
pop
cmp
outsb
xor
cmp
jne
ljmp
lea
inc
inc
pop
dec
add
fists
and
adc
pop
sub
xchg
addl
and
gs
not
xchg
mov
lret
pop
add
mov
push
jecxz
push
mov
push
jo
cmc
fxch
aaa
add
data16
decl
jecxz
and
cmp
and
push
inc
add
mov
incl
dec
ds
mov
cmp
pop
test
jge
adc
pop
push
or
mov
sub
shlb
xor
mov
dec
hlt
lahf
jmp
sti
shrb
sbb
ljmp
das
pop
je
inc
fcomip
inc
cld
xchg
inc
xchg
and
test
add
add
sbb
jmp
insl
push
mov
out
pop
pushf
sbb
fistpl
pop
pop
inc
jne
bound
jmp
ja
cmp
jne
sti
xchg
cwtl
fstpl
mov
test
push
mov
int3
pushl
lock
lahf
adc
sbb
sub
sub
rol
add
ljmp
fmull
int3
or
mov
popf
xchg
pop
loope
mov
arpl
adc
out
addr16
or
mov
cli
test
pop
dec
xchg
add
cmp
enter
call
pop
mov
xor
jecxz
mov
jbe
std
decl
mov
or
stc
or
ss
add
fwait
mov
inc
psubd
bnd
ljmp
lods
arpl
test
pop
lret
push
js
data16
decl
jmp
push
or
lock
std
add
xchg
cmc
leave
sahf
jb
in
jg
dec
xchg
pop
ret
scas
pop
sahf
adc
in
mov
ljmp
jne
lret
shr
ljmp
pop
jecxz
decl
pushf
xor
decl
jmp
and
sbb
jns
in
mov
inc
int3
sub
mov
sub
mov
fs
in
sbbl
xor
cmp
or
aam
mov
jo
lods
cs
sub
out
xchg
lea
pop
push
or
mov
movsl
jb
aaa
adc
mov
xor
call
jp
mov
inc
outsl
add
push
int
data16
aas
inc
xor
xlat
or
jg
add
sub
iret
add
dec
add
jg
lods
jge
ret
fstps
out
sub
sub
pop
inc
lock
call
and
enter
push
nop
push
adcb
dec
add
mov
inc
adc
decl
add
push
push
incl
dec
repnz
js
or
sub
mov
adc
test
sbb
lcall
ret
jns
push
rcr
stos
mov
xor
adc
pop
jl
out
sbb
mull
and
aaa
inc
dec
pop
cmp
lods
dec
enter
add
orb
xor
insl
stos
cld
incl
data16
pop
push
mov
push
add
pop
add
inc
pop
push
xor
mov
ja
dec
sub
xchg
rclb
dec
sub
pop
and
sbb
ror
ret
jnp
jg
decl
dec
add
mov
fdivr
adc
mov
jle
mov
int3
jmp
xchg
loope
fwait
jle
sahf
and
decl
arpl
push
xor
mov
in
lods
push
push
cltd
sub
and
stc
xchg
mov
xor
pushl
mov
sbb
ret
int
sub
jbe
push
mov
andb
iret
push
fwait
ret
arpl
dec
xchg
into
or
cwtd
mov
fiadds
mov
ljmp
push
dec
call
add
popf
cmp
push
and
clc
add
mov
add
dec
inc
mov
adcb
lea
inc
jmp
mov
jae
sahf
pop
subb
dec
mov
jmp
mov
popf
adc
clc
adc
call
std
pushf
jl
insl
mov
cmp
outsb
cmp
or
add
dec
sbb
fcos
call
inc
scas
arpl
data16
sub
js
mov
lcall
mov
fcomip
jb
xor
enter
push
sbb
pop
lret
add
add
leave
popa
je
ljmp
test
leave
jnp
xchg
xchg
test
adc
cmp
mov
inc
dec
leave
pop
jp
dec
arpl
call
jge
dec
test
test
add
xor
adc
pushl
push
ret
mov
or
es
es
movsb
xchg
scas
ljmp
jmp
int3
xor
jge
jge
fisubl
lret
mov
push
add
rorl
arpl
push
jg
shlb
insl
ret
mov
fwait
or
mov
inc
ljmp
aaa
test
sti
push
or
loopne
adc
add
sub
dec
push
jle
jo
decl
sbb
xchg
xorl
dec
leave
jg
xchg
and
rcrl
mov
jbe
ljmp
dec
adc
inc
pop
int3
pop
and
int3
call
inc
lods
roll
and
mov
test
push
add
mov
inc
call
push
push
or
decl
jle
push
jmp
popa
nop
jg
mov
add
sbb
lahf
dec
xor
je
test
in
call
sbb
and
dec
addr16
stos
pop
xor
push
imul
mov
mov
xchg
xchg
cmp
decb
inc
sub
cli
fists
mov
cmp
push
push
jg
and
mov
in
ss
cmpsl
and
ljmp
clc
jmp
shrl
jno
adc
in
sub
fistpl
call
call
je
push
enter
flds
push
pop
popf
xchg
cmp
decl
push
mov
mov
push
jmp
lahf
cmpsl
stc
push
xor
rcrl
in
pop
gs
sbbb
dec
push
lock
and
cmp
ljmp
cmp
dec
and
mov
mov
mov
leave
loopne
dec
fwait
lock
stos
dec
cld
decl
dec
jg
icebp
adc
fisubrs
or
push
ss
inc
add
jecxz
cmp
sub
add
imul
test
sub
popf
xchg
push
jl
pushl
mov
es
das
cwtl
fisttpll
lcall
mov
mov
sub
mov
aad
stc
dec
into
movsl
cmpsl
sbb
adcb
decl
adc
sub
mov
pop
cmp
in
add
and
adc
ljmp
repnz
ret
adc
sub
icebp
dec
mov
inc
imul
mov
fwait
fwait
icebp
sahf
add
outsl
orb
dec
sbb
fcompl
mov
out
std
sub
daa
popl
add
or
ljmp
lods
adc
mov
push
out
mov
jbe
sub
hlt
fiaddl
mov
leave
jmp
sarb
push
dec
cmp
fdivrl
mov
outsl
xor
pop
or
mov
fsubrs
hlt
push
pop
cs
sbb
mov
mov
sbb
xor
mov
sub
add
pop
pushf
jb
push
pop
orb
sbb
lcall
decl
push
test
and
push
fisubrs
pop
mov
push
adc
imul
adc
dec
out
outsb
sahf
mov
andl
sahf
cmp
jo
popf
adc
cmp
outsl
or
jmp
test
add
push
mov
push
std
add
inc
adc
or
incl
inc
add
sahf
and
rcrb
repnz
and
lods
jp
in
mov
call
jg
in
lret
nop
mull
mov
xchg
and
rorb
in
lahf
push
pop
jge
insb
decl
sub
cmp
sahf
add
lock
lahf
push
xchg
push
jns
outsl
ljmp
sti
add
and
into
sub
jl
mov
jle
pusha
pop
in
jo
jg
incl
loopne
nop
dec
fistpll
movsl
ficompl
lock
or
ljmp
fcom
out
xchg
sub
push
and
xor
xor
sub
pop
cmpsl
dec
jo
dec
fldt
js
mul
jae
sub
fidivs
int3
pop
es
add
data16
dec
add
fcomps
inc
add
pop
pop
rorb
push
dec
xor
pushf
xor
arpl
xchg
addb
inc
mov
ljmp
mov
and
outsb
jbe
sbb
push
shlb
cli
decl
loope
xchg
sub
mov
mov
pop
cmp
fcoms
movsb
pusha
rcr
dec
push
or
xchg
inc
lds
test
loop
sbb
xchg
lret
decl
mov
sub
sti
pop
jge
xor
push
shl
jno
cli
out
jbe
add
lock
cmp
jbe
mov
mov
pop
cld
add
shl
jb
pushf
ud0
push
and
jl
movl
jmp
pop
call
add
or
jg
call
and
cs
addr16
dec
mov
sub
xchg
test
fnstenv
sbb
add
pop
inc
call
cmp
lcall
add
nop
inc
insb
scas
xchg
jo
rol
fsubl
dec
cmp
mov
sarl
test
jb
mov
xchg
notb
ret
xor
ljmp
call
xchg
pop
cmpsb
bound
jo
dec
mov
jl
test
ja
call
inc
sbb
add
daa
dec
pop
and
jo
js
pop
ret
outsl
lods
decl
outsb
cmp
push
clc
xor
loopw
ss
ja
out
mov
pusha
dec
or
es
loopne
or
aam
cmp
daa
femms
add
xchg
hlt
popa
mov
hlt
lods
adc
add
cmovne
push
inc
leave
push
rolb
mov
dec
dec
mov
leave
orl
test
lods
pop
clc
xchg
icebp
jle
sbb
sbb
stos
outsl
cmp
aam
jle
test
add
movsb
fnstsw
test
inc
inc
loopne
push
cmp
loopne
add
sbb
cmp
cmp
sub
decl
dec
push
cmpsb
scas
sbb
repz
push
add
jmp
imul
cld
repz
pushl
sbb
pop
and
sti
cmp
mov
insl
adc
push
inc
hlt
push
jo
decl
fidivs
xchg
mov
mov
mov
lret
dec
daa
xchg
jns
popf
mov
cmp
incl
lret
rcll
mov
sarl
mov
add
iret
clc
push
mov
jecxz
jmp
movsl
test
pop
xor
push
or
outsb
push
pop
idiv
add
call
arpl
outsl
jecxz
std
cmp
addl
int3
ret
cld
das
inc
rorb
mov
add
cmp
testb
add
stos
add
jb
sbbb
dec
push
mov
mov
push
mov
sub
sbb
push
leave
out
decl
jno
mov
std
or
loopne
shlb
push
int3
dec
sbb
gs
mul
test
call
or
or
xor
or
push
popa
or
in
pop
lods
in
adc
or
mov
out
sub
sti
cs
xor
cmp
movsl
cmp
shlb
dec
pop
ret
pop
out
rorl
xor
je
and
sbb
pop
or
jg
in
mov
decl
nop
mov
adc
shlb
inc
adc
inc
cli
fstpt
loop
ret
add
mov
std
jg
call
test
daa
adc
push
lcall
mov
sti
scas
lods
pushl
mov
outsl
or
popa
and
imul
xchg
and
decl
mov
cmp
pop
jl
addb
insl
adc
xchg
push
mov
push
in
push
cmp
out
cli
adc
jl
arpl
je
sub
cmp
cmp
jae
aaa
dec
sub
and
cld
lods
jne
les
mov
add
loope
add
scas
aam
jecxz
dec
or
sub
fmuls
sbb
adc
xorl
mov
test
cld
jns
leave
mov
push
dec
inc
cmp
or
nop
mov
call
stos
es
mov
loop
aad
clc
xchg
into
add
pop
push
lds
das
insb
xor
jg
pushl
int3
mov
outsl
mov
sbb
pop
insl
cmp
mov
in
mov
cmpsl
inc
mov
incl
insl
sub
xchg
pop
and
cmp
xchg
lret
mov
cs
and
adc
into
loopne
inc
inc
shlb
enter
sub
cli
in
test
loopne
or
xor
cli
add
sub
jg
aam
lods
jo
in
addr16
pop
push
call
jl
jecxz
fdivr
jmp
add
adc
int
mov
ljmp
test
int3
fnsave
cltd
adc
inc
sbb
cmp
insl
xor
dec
mov
xchg
inc
imul
xchg
push
xor
push
rclb
fcmovne
jns
cs
inc
jnp
push
add
out
jo
pop
fdivrp
neg
ds
push
arpl
pop
adc
push
pop
xchg
jb
inc
ret
or
adc
adc
inc
mov
call
or
mov
in
sbbb
popf
mov
mov
notl
inc
pop
leave
push
dec
and
incl
enter
push
mov
lret
add
or
cmp
mov
jns
mov
addb
cltd
pop
and
sbb
negb
ret
aam
hlt
jg
aaa
gs
push
nop
pop
jbe
cmpsb
inc
or
int3
jg
popa
push
ja
jp
rorl
fs
or
pop
test
xor
pusha
cmp
ljmp
das
adc
adc
push
loopne
lock
add
in
repz
or
das
dec
pop
imul
sbb
xchg
movsl
sub
daa
inc
xchg
pop
mov
push
or
push
mull
stos
push
cwtl
repnz
lcall
andb
pop
test
or
clc
int3
and
push
push
jno
jb
push
fisttps
xor
mov
sarb
jne
add
mov
add
xor
jae
cwtl
bts
push
push
fs
outsl
out
roll
cmp
outsl
outsl
xchg
hlt
dec
or
mov
mov
loopne
in
jl
dec
mov
adc
mov
adc
outsl
pop
xor
leave
fdivrp
nop
pushf
mov
or
ret
cltd
cs
sub
mov
outsb
mov
adc
lock
add
jns
jno
outsl
sub
xchg
mov
incl
add
nop
es
jb
cmpsb
xor
scas
nop
popa
rcrl
xorb
inc
add
or
cld
mov
lcall
push
xor
pop
add
in
call
xor
jns
inc
lcall
lahf
push
neg
popl
cs
mov
pop
hlt
mov
sarb
or
mov
es
js
and
hlt
add
cmp
jae
insb
sbb
lcall
add
sbb
adc
rcrb
out
lock
rcr
mov
mov
inc
adc
loope
pop
jmp
movsl
xor
sbb
mov
jge
in
xchg
push
aaa
flds
int
loopne
adc
addl
lret
adc
mov
int3
add
pusha
arpl
dec
scas
cmpl
and
leave
adc
rclb
mov
push
fwait
push
push
pop
and
shrl
imul
mov
lds
mov
sbbl
xchg
push
fstps
lcall
and
push
sahf
popf
mov
push
xor
mov
fiadds
jg
test
and
dec
test
inc
ud0
call
movsb
mov
loopne
cmp
lidtl
sub
aam
push
push
mov
push
pop
ret
call
add
jmp
cltd
movsb
push
int
or
daa
mov
sub
jne
iret
lahf
inc
xchg
jg
xchg
jo
or
sbb
pop
sub
leave
xchg
add
push
add
sar
jmp
jge
mov
movsb
lods
push
decl
jno
dec
xchg
or
jp
ljmp
mov
mov
adc
push
mov
sbb
and
push
sbb
pop
pop
dec
xchg
pop
in
call
push
cmp
push
and
sub
push
jb
enter
fildll
adc
test
nop
and
dec
and
adc
std
mov
hlt
aaa
lret
lds
or
cmpsl
and
ljmp
jbe
mov
add
es
jmp
call
in
sub
or
pop
into
decl
rcrb
sbb
cmp
int3
sbb
dec
push
or
push
mov
mov
rcrl
ljmp
push
mov
cmpsb
imul
dec
insl
out
pop
scas
and
jnp
movsl
fwait
xor
mov
and
xchg
sbb
xor
call
and
jo
in
incl
cmp
rorl
data16
mov
mov
negb
test
dec
shlb
icebp
jmp
mov
add
xor
inc
insl
add
xor
fdivrs
jl
popf
pusha
adc
leave
pmuludq
xchg
rolb
cli
xchg
mov
dec
out
shlb
xchg
inc
aam
sub
stos
sbb
gs
icebp
cli
add
jne
xchg
sub
adc
call
jno
mov
xor
fistpl
inc
or
ljmp
adc
scas
in
or
xchg
cmpsb
jp
adc
xor
mov
pop
insl
aad
mov
xchg
push
das
jecxz
loope
lods
test
sub
loope
outsb
jg
jne
xchg
mov
mov
cltd
popa
sub
jno
pop
int
scas
cld
push
fsubrl
fdivr
sbb
clc
ljmp
inc
mov
incl
jmp
insb
push
push
cmp
sub
or
js
and
jmp
mov
int3
mov
inc
inc
leave
push
mov
sub
arpl
mov
and
push
push
das
fisttps
pushl
in
adc
adc
aaa
push
lcall
rcrl
or
mov
mov
ljmp
xchg
popa
pop
xchg
xor
and
inc
insb
jecxz
and
inc
cmp
fcmovb
jge
sub
divl
sub
decl
cltd
stos
mov
add
inc
ds
test
or
push
pop
jb
cld
jg
call
scas
ds
push
stc
out
xchg
jg
rolb
add
sub
xchg
in
sub
pop
ljmp
enter
push
mov
lahf
shlb
mov
cmp
ret
mov
decl
push
out
and
test
push
adc
mov
push
mov
seto
lcall
je
imul
std
data16
xchg
data16
nop
mov
decl
pop
std
jge
push
adc
mov
push
pop
mov
dec
popa
mov
xor
leave
loopne
sub
dec
xor
push
adc
dec
dec
movsb
fwait
cmp
push
sahf
or
push
pop
dec
xor
loopew
mov
mov
jbe
je
push
sarl
loop
xor
repnz
rcr
dec
leave
xchg
lea
add
mov
and
and
mov
lea
pop
js
mov
xor
xor
dec
lcall
inc
aam
pushf
pop
js
in
mov
mov
movsl
outsb
nop
mov
test
and
pop
pop
adc
pop
mov
daa
fstpl
push
push
pop
cmp
jg
mov
clc
insb
jns
and
dec
mov
insb
xor
xlat
out
cmp
mov
inc
push
push
and
or
ljmp
jecxz
mov
in
jg
lock
fisubrs
rcll
mov
decl
jle
enter
scas
inc
ljmp
or
add
sbb
inc
inc
inc
xor
nop
shl
adc
xchg
es
mov
adcl
add
push
pusha
repz
mov
cmp
shlb
jne
mov
out
xchg
sub
fwait
and
sbb
sbb
and
mov
inc
add
into
mov
pop
sbb
stc
mov
push
adc
iret
and
mov
decl
cld
mov
sub
pop
cmpsl
fldenv
add
imul
imul
mov
or
stc
icebp
inc
mov
test
add
and
add
outsl
les
repnz
pop
and
sbb
cmp
lea
sbb
xchg
jmp
jmp
sbb
mov
push
and
cmp
push
mov
or
call
sbb
sbb
subps
mov
jno
xchg
out
mov
and
in
jecxz
xchg
push
or
xchg
mov
adc
ljmp
decl
insb
sub
pop
mov
xchg
sbb
cli
cmp
push
xorl
adc
decl
ret
inc
push
filds
leave
pop
insl
lock
add
cmp
jno
sbb
loopne
ljmp
sbb
sahf
nop
xor
pop
cmp
pop
xchg
faddp
jecxz
and
cmp
inc
cmp
adc
icebp
pop
insb
push
xor
add
ljmp
loopne
setg
xchg
rolb
and
jg
in
adc
repz
mov
sbb
push
push
or
pop
mov
lcall
arpl
mov
add
xor
add
inc
xchg
xchg
pop
std
xchg
outsl
push
repnz
imul
mov
inc
popa
les
add
jp
or
icebp
in
push
dec
sub
ret
xchg
fmuls
push
stos
lret
hlt
ljmp
cwtl
cmc
mov
pop
aas
mov
inc
stos
xchg
fwait
pushf
movl
xor
add
pop
adc
mov
inc
push
cmp
neg
int
dec
in
jmp
dec
dec
jg
inc
sbb
into
inc
mov
adc
mov
sbb
jmp
push
push
outsl
and
pop
imul
pop
imul
insb
std
and
bound
sub
inc
push
inc
pushf
std
repnz
decl
lods
add
sbb
adc
inc
lods
nop
lret
clc
push
xorl
int
add
add
mov
dec
xchg
sbb
or
icebp
imul
inc
icebp
sbb
xchg
adc
push
pop
or
xor
xchg
pusha
shll
cli
incl
mov
sti
cmp
mov
decl
subl
cli
in
or
and
pop
jbe
or
iret
xor
ljmp
repnz
enter
add
sbb
pop
in
xor
inc
push
sub
in
pop
jns
mov
imul
pusha
pushaw
and
xor
clc
fcomip
push
ja
scas
roll
scas
add
add
orb
inc
test
call
scas
out
shr
or
rclb
dec
insl
push
and
bound
mov
imul
ljmp
fs
in
enter
sahf
adc
outsb
inc
push
loope
ljmp
sar
rep
or
orl
iret
xchg
inc
push
sbb
adc
int3
call
adc
push
mov
mov
sbb
repnz
fdivrs
sar
call
cmp
sbb
dec
imul
lock
xor
xchg
decl
add
in
pop
push
sarb
fs
jne
adc
into
adc
push
jnp
decl
mov
pushf
mov
jbe
mov
and
es
add
xor
jbe
xchg
lock
decl
adc
pusha
cli
ljmp
dec
jge
mov
push
sub
add
push
lar
ss
cmpsl
sub
scas
fisubrs
mov
stos
cs
loop
jo
xor
popf
lea
mov
cmp
stos
jns
dec
orb
mov
xchg
dec
test
pusha
xorl
adcb
mov
rclb
ss
dec
icebp
ret
ds
cmpsb
mov
fcomip
mulb
shl
and
mov
xor
or
sbb
or
and
xor
jge
mov
ja
call
or
test
push
adc
dec
movsb
leave
push
int
or
hlt
or
pushf
scas
out
push
pushl
sub
sub
mov
adc
adc
mov
call
call
clc
push
add
js
testb
scas
inc
fcomip
in
decl
pop
jl
adc
sub
mov
bound
jne
mov
hlt
xor
in
cli
mov
xor
and
mov
ret
inc
and
decl
sub
xchg
push
data16
insb
aas
sub
or
mov
sub
or
incl
clc
cmp
mov
js
imul
adc
adc
sbb
pop
adc
mov
arpl
ljmp
dec
cltd
lfs
out
dec
rclb
pop
pop
pushf
cs
push
mov
pushl
adc
push
lcallw
pop
decb
sub
jo
decl
out
push
xor
mov
mov
cltd
test
popf
sahf
lcall
in
mov
push
out
sbb
or
sahf
sub
inc
test
mov
sub
pop
mov
ret
xchg
adc
dec
and
ljmp
hlt
fnop
lea
arpl
add
mov
and
jmp
push
cmp
inc
ljmp
test
arpl
mov
popf
push
pcmpeqb
xchg
jge
add
int
mov
sbb
push
pop
add
insb
pop
mov
sarb
call
mov
mov
hlt
mov
sub
or
ficoms
sbb
xlat
add
inc
pop
sub
pop
jg
sub
test
ret
xchg
jg
hlt
mov
fdivr
clc
push
popf
add
xchg
movsl
add
mov
je
decl
test
movb
pop
imul
cs
bound
jge
subb
lods
xchg
enter
jo
mov
dec
jmp
fildll
and
mov
call
xor
mov
incl
pop
add
in
or
push
in
and
mov
add
outsl
clc
incl
les
mov
fiaddl
pop
jb
sbb
mov
or
jmp
std
jmp
ret
insl
mov
or
and
cld
mov
fs
add
mov
mov
adc
or
fs
in
and
add
add
inc
ja
stos
jmp
mov
and
pop
inc
sub
cmp
xor
jge
mov
icebp
xor
push
adc
pop
adcb
test
orb
pop
pushf
mov
test
jbe
decl
xchg
mov
add
cmp
outsl
movsl
inc
insl
and
imul
cmp
in
ljmp
cmpsb
dec
cmp
sbb
dec
mov
ret
les
push
and
movsl
sub
dec
clc
inc
cltd
inc
ret
or
mov
lret
mov
and
cmc
fisttpl
cmp
mov
aam
inc
daa
dec
push
int3
pop
pop
xchg
pusha
xchg
loope
es
pop
xor
jae
xchg
jecxz
gs
shrb
test
call
or
into
push
loopne
push
sub
jae
push
lods
out
bound
arpl
cmp
dec
mov
or
notl
ds
jmp
cld
mov
xor
inc
cmp
scas
clc
adc
mov
xchg
aad
mov
xchg
and
jecxz
dec
stc
call
cltd
in
ret
scas
xor
sbb
push
fistps
js
pop
insb
sahf
push
sub
and
add
test
cmp
popa
add
stos
add
aaa
pop
aam
imul
imul
cli
enter
push
mov
jno
jecxz
xchg
inc
fdivrs
mov
jg
ljmp
inc
and
insb
cltd
jl
jbe
sbb
repz
rcll
rolb
push
inc
addr16
cmc
int
mov
adc
pop
sbb
rorl
mov
leave
cltd
pop
inc
sub
int3
push
mov
sub
mov
enter
test
pop
leave
mov
or
inc
pop
and
mov
fs
pop
add
and
inc
movsl
or
out
mov
in
mov
testb
adc
leave
imul
jo
inc
loopne
stc
sti
jne
pop
fadds
push
ret
test
into
das
clc
lcall
mov
dec
and
lcall
ds
loope
jle
dec
arpl
pushl
nop
insl
imul
dec
jg
cmp
lret
and
sbb
test
pushl
push
cld
mov
mov
dec
div
push
pop
clc
movb
lcall
mov
and
xor
mov
unpcklps
dec
scas
adc
aad
movsb
pop
iret
dec
andb
ret
imul
sbb
dec
sub
ljmp
inc
add
lock
xchg
clc
push
xchg
push
xchg
rclb
in
mov
push
subb
sbb
ljmp
in
das
enter
xor
xor
insl
ret
adc
push
xor
xorl
lods
mov
pushf
ficoml
push
sub
cmp
mov
lock
dec
fidivl
pop
jnp
aad
mov
cld
add
call
inc
inc
out
out
adc
or
xor
push
xchg
pop
adcb
aam
decl
and
and
and
pop
jo
pop
mov
call
lcall
pusha
push
in
cld
sub
and
stos
fs
or
mov
jbe
clc
dec
jecxz
jbe
mov
stos
sahf
outsl
sti
adc
ljmp
mov
jg
jmp
inc
xchg
and
mov
jmp
in
dec
sbb
inc
push
push
adc
dec
dec
or
cmp
xorl
mov
lahf
add
nop
add
in
xor
sbbb
subb
jo
jl
mov
and
pop
lret
orb
sub
cs
pop
clc
fsubrs
mov
dec
je
loope
xchg
pop
push
lods
mov
enter
adc
sbb
and
push
add
insl
sar
adc
cld
daa
and
push
xor
mov
mov
test
adc
ljmp
inc
nop
pushf
or
orb
jo
jb
leave
sbb
mov
add
rcrb
or
lahf
arpl
mov
cli
dec
mov
loope
subl
xor
jne
mov
sbb
jns
rorl
mov
popl
jle
dec
mov
js
pop
mov
mov
xchg
ljmp
mov
cmp
and
mov
test
and
orl
mov
mov
add
clc
imul
imul
mov
stos
jg
and
sbb
fisttps
mov
decl
cmc
push
inc
push
jecxz
jb
xchg
push
out
mov
in
mov
and
sbb
mov
mov
cltd
xchg
inc
fwait
in
aas
flds
js
pop
xchg
enter
sub
xchg
jo
dec
ljmp
add
lea
pushf
pop
and
xor
test
add
cmp
jge
decl
cli
or
std
frstor
repz
adc
push
call
mov
sbb
or
loopne
mov
dec
xchg
dec
xchg
lea
call
sbb
fsubl
add
xchg
lahf
pop
mov
lea
movb
stos
pop
mov
out
addb
mov
imul
shrb
fsubr
mov
insb
jae
sbb
and
shrw
adc
xchg
insb
mov
or
mov
dec
cmpsl
fnstcw
cmp
inc
lock
jp
ja
jnp
jecxz
dec
outsb
out
mov
mov
rolb
cmpb
and
pushl
jne
sub
stos
dec
shrl
jo
decl
cwtl
shll
js
outsb
cmp
dec
inc
xlat
push
imul
test
cmp
jmp
mov
jo
loop
add
movsl
adc
cmc
pushf
mov
fstps
fistpl
ljmp
jnp
movsb
shlb
test
sar
sahf
or
adc
mov
movsb
stc
cmp
arpl
cmp
xchg
outsl
cli
mov
js
cltd
ret
mov
or
in
jmp
fiadds
push
mov
mov
and
sub
les
out
fadds
sub
sub
or
and
dec
rcrl
lea
nop
daa
fsubp
out
ljmp
xor
scas
mov
dec
movl
fldcw
push
sub
ljmp
repz
push
jbe
mov
cwtl
adc
sub
aam
or
fisubrs
es
and
jbe
adc
fiaddl
xchg
lea
movd
in
aas
or
nop
cmp
dec
jp
and
xchg
aam
ljmp
and
mov
pop
pop
adc
jno
imul
out
sub
imul
inc
testb
sub
inc
sti
push
inc
jl
cmpb
ljmp
push
cmp
call
test
xchg
mov
inc
adc
mov
sub
cmp
cmpsb
cmp
cmpsl
mov
mov
push
rorb
push
push
clc
adc
aaa
mov
aas
add
clc
bound
pop
lea
rclb
dec
out
adc
inc
addl
jns
andb
sbb
call
stos
ret
or
adc
insl
push
inc
lods
movsb
clc
or
or
lret
cld
sub
xor
inc
aaa
movsb
jle
hlt
leave
stos
inc
lods
sub
and
pop
icebp
add
dec
sub
push
js
std
add
adc
ljmp
push
mov
adc
test
push
cmp
jnp
push
or
inc
addb
ljmp
andb
push
sub
fistpll
add
and
xchg
jg
jbe
sub
sbb
insl
add
iret
fcoml
cs
decl
dec
cld
sub
dec
jbe
dec
xor
add
movsb
into
lcall
into
mov
dec
inc
ljmp
jg
dec
sub
in
mov
sub
dec
mov
mov
or
sahf
adc
mov
cmpl
fisubrs
add
dec
push
je
push
add
pop
mov
inc
adc
or
inc
xor
decl
call
cmp
or
add
pop
shl
mov
jecxz
mov
mov
mov
dec
sbb
fs
rcl
cmpsb
dec
mov
inc
push
xor
ljmp
pushl
xorb
push
and
mov
or
push
std
and
mov
xchg
icebp
ljmp
fdivp
xor
lahf
mov
xor
xor
sbb
dec
cmp
jl
add
jg
in
jae
inc
push
or
lods
sub
dec
sti
xor
fs
sbb
lods
ss
adc
dec
inc
movsl
sub
add
movsb
push
push
lahf
add
push
xor
shr
clc
ljmp
hlt
pop
decl
test
add
out
roll
or
xchg
ljmp
push
sub
mov
xor
es
jmp
add
dec
add
insl
cli
ljmp
cmp
push
mov
push
mov
lcall
jl
jnp
outsl
pop
or
mov
out
repnz
dec
mov
pop
ja
pusha
cmp
js
test
lds
inc
push
js
dec
mov
adc
and
xchg
xor
lcall
cmp
cli
movsb
lahf
insb
xor
cmp
ljmp
inc
add
add
dec
and
or
mov
shlb
mov
decl
in
push
in
sbb
xchg
popa
sbb
lret
rcr
andb
sbbb
and
sub
pushl
xor
enter
loope
fsubr
jae
xor
cs
loopne
ds
xlat
xor
adc
sbb
fists
stos
decb
inc
out
cmp
out
repnz
cmp
sbb
enter
add
int
in
pushl
enter
mov
popa
push
test
call
jnp
and
push
popa
add
out
mov
lcall
inc
sbb
adc
jb
push
mov
mov
jne
decl
outsb
daa
hlt
cmp
mov
pop
jae
fdivrs
mov
aam
popa
mov
fimull
push
idivb
aam
inc
cmp
dec
sub
ret
jmp
dec
xor
jmp
js
mov
push
and
add
sbb
inc
in
mov
jbe
jo
push
sub
inc
faddl
pusha
adc
jb
jg
jbe
mov
pop
in
incl
lock
jb
test
push
sub
push
cmp
outsb
mov
popa
into
and
pop
pop
inc
decl
aam
cmp
setle
add
mov
int
out
lahf
fmuls
xor
in
mov
cmp
or
int3
loopne
popa
mov
dec
sbb
imul
adc
xchg
sub
in
jmp
pop
xor
cltd
nop
and
xchg
enter
sub
or
testb
cs
add
dec
stos
out
jmp
std
mov
adc
call
and
shlb
inc
sbb
pop
mov
mov
or
loopne
adc
or
cld
add
xor
int
jmp
dec
in
shl
ja
shll
lret
popf
fisubrl
jg
cmpsl
inc
sub
jecxz
lcall
or
addr16
addl
shl
jmp
adc
push
cmp
pop
cmp
test
cmc
shr
sub
xor
push
dec
or
and
add
dec
and
add
incl
adc
rorb
fs
mov
lock
pop
dec
add
incl
sti
ja
das
cmp
inc
leave
and
scas
or
cs
pusha
ficoml
hlt
fadd
lcall
sbb
pop
scas
pop
inc
mov
stos
or
aaa
dec
cwtl
cld
and
out
fdivrl
jb
out
mov
cld
ret
hlt
ljmp
inc
add
dec
fisubrl
int3
jne
push
lock
shlb
daa
aam
mov
incl
js
aaa
mov
jae
in
loopne
dec
enter
inc
enter
pop
push
gs
movlps
sbb
pop
jmp
dec
imul
dec
add
xor
in
pusha
jmp
fs
mov
pushl
fcoml
mov
hlt
mov
or
lods
nop
push
jecxz
clc
jle
in
outsl
inc
mov
jno
data16
adc
push
jg
cmpsl
rclb
jmp
cmp
insl
sub
ljmp
shrb
mov
out
xchg
push
lea
xchg
inc
and
call
add
les
les
xchg
pop
jno
rol
adc
inc
popf
leave
aad
jmp
fcomip
dec
scas
add
jmp
andl
push
mov
dec
mov
ret
in
cmp
enter
add
aas
push
jbe
sbb
inc
lcall
lods
sbb
outsl
mov
rcrl
mov
xor
and
add
test
int
dec
decl
pop
pop
stc
pusha
popa
cmp
cmp
into
mov
and
jne
mov
ja
orps
adc
into
cs
add
dec
fsubr
call
mov
sub
das
movsb
sub
movsb
incl
mov
adc
jge
mov
cmp
loop
jmp
jecxz
shlb
sbb
cld
test
sub
fs
clc
mov
push
mov
pop
clc
bound
inc
jl
incl
cmp
ss
xchg
push
or
mull
mov
decl
outsb
dec
in
or
push
push
pushf
mov
pop
into
je
pop
inc
pushf
push
xorl
call
pand
outsb
aas
daa
in
mov
aas
pop
mov
mov
adc
mov
sbb
ljmp
shll
jecxz
add
mov
push
cmp
mov
add
decl
cmp
insb
push
ret
dec
cmp
dec
cmp
mov
mov
js
or
sbb
arpl
daa
and
mov
pusha
dec
inc
leave
push
adc
and
cmpl
aaa
add
data16
cmp
xor
clc
mov
mov
nop
mov
pop
sub
cmp
cmpsl
in
push
push
jmp
es
xchg
ljmp
and
add
movsb
dec
cmp
in
jnp
mov
jae
aad
inc
xchg
cltd
adc
decl
cli
or
add
add
insb
jbe,pn
mov
dec
or
enter
mov
rcrl
sbb
lcall
jp
rclb
in
xorb
push
jbe
shlb
pushl
imul
cmp
les
mov
ror
jae
ficoms
fldt
decl
and
mov
loopne
adc
mov
fimull
jmp
aas
add
das
cwtl
mov
xchg
lcall
sbbl
and
pop
test
ljmp
mov
xchg
adc
dec
adc
mov
mov
incb
fnsave
mov
mov
push
inc
cmp
test
push
jp
stos
in
pop
push
pushf
mov
call
lcall
inc
mov
pop
std
test
push
andb
mov
and
icebp
decl
sub
push
xchg
dec
lock
mov
sbb
ljmp
xor
pop
push
and
inc
inc
pushl
inc
dec
decl
in
jo
cld
sub
add
rolb
rol
sub
dec
cmp
movsb
repz
inc
cmpl
jg
mov
call
pop
enter
ret
sbb
sbb
sbb
call
and
pop
pusha
cmp
cmp
sbb
fidivl
out
fcompl
fstps
jno
test
clc
nop
mov
xchg
je
int3
mov
in
pop
inc
jmp
popa
mov
sub
repnz
xchg
fisubrl
add
hlt
lcall
stc
int3
mov
cmpsl
cli
pop
loopne
decl
inc
pop
hlt
push
xor
and
inc
xor
adc
outsb
and
lea
sub
mov
add
adc
je
inc
pop
mov
pushf
xchg
sbb
add
aas
test
dec
adc
mov
mov
enter
repnz
sub
push
incl
jb
mov
sar
imul
pop
icebp
incl
sub
sbb
pop
out
je
and
adc
mov
xchg
rclb
mov
js
add
or
adc
push
addps
cs
dec
push
xor
out
add
ja
jmp
sbb
fildl
sub
push
mov
sub
cmpsl
aad
jg
shrb
mov
imul
pop
aam
inc
sub
jg
xchg
adc
stos
fmulp
fcoms
shrb
xor
cmp
into
ds
loop
push
pop
lods
xchg
idiv
call
ss
and
add
js
push
je
inc
jno
movsb
lretw
int
push
add
push
lret
mov
push
xor
or
xor
sub
push
push
cmc
pop
popa
insl
adc
pop
popa
and
mov
or
fcomip
call
mov
testl
sub
sub
jno
push
mov
inc
mov
xchg
scas
dec
mov
sahf
cmp
fistl
add
or
movsl
or
xchg
xchg
lock
push
sub
ret
xchg
dec
push
lock
sbb
outsl
incl
lcall
mov
lahf
sbb
in
int
mov
jg
out
xor
push
fbld
jp
testl
mov
sbb
jg
push
ss
rcl
addr16
adc
xor
push
xchg
jbe
sbb
pop
inc
fdivrl
pop
sub
sub
or
cmc
jmp
in
pop
jb
mov
mov
pusha
add
lcall
xchg
clc
lea
dec
and
or
inc
adc
fimuls
mov
lea
or
or
test
ret
inc
shlb
cwtl
mov
int
lcall
lret
lods
decl
push
fsubl
enter
fcoms
rolb
decl
ja
push
outsb
test
clc
adc
adc
or
add
mov
ljmp
cmp
cld
dec
mov
iret
xor
dec
insb
dec
lcall
adc
orl
shrb
es
lods
jg
jo
bswap
push
rcl
mov
and
ds
or
dec
daa
movsl
repnz
dec
lcall
push
adc
cwtl
insb
add
inc
add
jnp
shr
test
inc
mov
fimuls
dec
mov
mov
loop
pmulhuw
sub
adc
and
sub
incl
jb
push
jae
es
or
push
loope
mov
incl
mov
mov
mov
jae
inc
sbb
insb
jge
test
fcompl
decl
ljmp
jb,pn
xlat
or
inc
je
adc
in
int
mov
jmp
jle
notb
ljmp
jns
cmpl
ss
sub
sbb
clc
aaa
mov
mov
decl
cmp
mov
jae
cmpsb
and
or
fbstp
movsl
push
add
mov
ds
inc
decl
decl
push
sub
adc
mov
arpl
mov
jle
dec
mov
xor
aad
aas
test
lahf
fldln2
pop
inc
ds
in
dec
dec
cltd
mov
xchg
cltd
cs
inc
xor
jmp
mov
mov
inc
lcall
clc
add
inc
sub
ljmp
mov
adc
add
out
cwtl
stos
enterw
cmpsb
aaa
cwtl
clc
js
push
jne
cmp
ljmp
add
jmp
pop
ret
push
lcall
decl
insb
push
cmp
outsb
cmp
jmp
mov
fldenv
iret
inc
dec
adc
mov
adc
out
outsl
sub
cmp
decl
jg
sbb
sbb
push
or
mov
xor
inc
insb
jmp
dec
mov
xchg
adc
call
call
icebp
sub
sub
imul
mov
xchg
movsb
rolb
mov
ljmp
or
pop
mov
into
or
mulb
push
add
incl
mov
mov
push
mov
stos
push
call
push
fwait
dec
mov
jle
bound
mov
xchg
ljmp
shll
adc
push
mov
out
mov
sbb
inc
data16
daa
mov
inc
mov
jg
xor
mov
out
cmpw
mov
cmpsb
push
lock
imul
jno
mov
and
pop
pop
lret
sahf
out
or
add
or
decl
push
into
sub
fcompl
cld
or
iret
jge
aad
repz
test
std
stos
add
mov
jmp
pop
jmp
add
sub
ljmp
out
add
push
dec
test
jle
adc
add
dec
aam
mov
cmp
das
or
ss
inc
adc
mov
pop
mov
xor
sbb
jb
inc
pushl
pop
orb
adc
cmp
sub
adc
xlat
push
cmp
pushl
pop
cmp
mov
and
popa
push
jno
cli
jb
idivb
enter
push
std
sub
dec
xchg
adc
aas
andb
xor
mov
xor
add
sub
rorl
ret
fsub
pushl
ss
cmp
loopne
adc
sti
clc
or
gs
sub
mov
sbb
inc
xchg
fs
push
pop
push
xchg
mov
cmp
sbb
sub
jne
decl
lcall
jg
mov
pop
out
mov
sub
and
loop
jge
xchg
sub
and
ljmp
and
adc
fdivrl
adc
adc
push
scas
xchg
pusha
add
dec
decl
xchg
push
mov
sub
pop
std
in
daa
or
add
lret
shl
decl
and
icebp
cmp
out
sarb
sub
push
jecxz
mov
lea
incl
lcall
xchg
shlb
shr
cmp
les
outsl
or
jmp
imul
addl
dec
call
les
enter
ss
adc
call
popa
mov
sarb
out
xchg
mov
int3
and
les
dec
inc
stos
push
fcoms
jmp
daa
add
ljmp
pusha
aad
test
lea
adc
mov
mov
enter
pushf
cmpsb
loope
stc
jle
inc
xchg
cld
les
cmpsl
jmp
les
outsb
mov
cli
call
inc
add
frstor
mov
xchg
add
push
negb
fildl
jnp
lcall
cld
mov
stos
push
hlt
daa
rcll
insl
inc
lret
lods
ljmp
inc
mov
ljmp
cld
adc
js
jle
lock
inc
cmp
aaa
std
in
cmpsb
or
outsl
xchg
pop
sub
mov
xor
clc
ror
and
ljmp
sbbb
xor
movb
sbb
sahf
dec
and
test
jbe
mov
push
sbb
add
adc
add
ljmp
icebp
lret
hlt
rcll
jne
or
cmp
and
sti
cmp
jecxz
add
orl
cli
lret
xor
mov
add
cmp
mov
out
loopne
lods
sub
jae
movsb
nop
ljmp
fiadds
jl
mov
bound
and
pop
xchg
inc
cmp
add
jmp
inc
dec
dec
jne
decl
jno
pop
xor
sar
cmp
add
int3
mov
push
mov
adc
lods
jmp
scas
test
sub
test
xchg
ss
les
cmpsl
push
aas
bound
test
push
pushf
jl
add
les
mov
call
pop
fisubrs
cmp
ljmp
decb
push
dec
sbb
leave
lret
daa
pminub
pushl
cmp
out
lods
cwtl
or
xchg
jno
rorl
pop
incl
outsl
roll
or
lcall
pusha
rcrb
je
je
jg
mov
fwait
ja
ljmp
cmpsl
sarb
pop
test
add
test
xor
ljmp
adcb
jne
push
bound
addl
cltd
hlt
decb
js
push
or
mov
mov
ss
das
insl
add
sub
cmp
sbb
sti
or
mov
test
mov
addr16
call
ja
test
lret
sub
add
leave
inc
clc
push
and
pop
or
popa
test
sub
sti
adc
ja
add
cmp
sub
jne
lds
pop
cld
movsl
add
movb
ret
xchg
jb
ljmp
repnz
mov
cwtl
cmp
push
imul
int
test
dec
inc
mov
xchg
push
sub
test
shrb
dec
test
inc
mov
shl
sbb
mov
lea
mov
mov
test
sbb
bound
cmp
movsb
test
out
pop
mov
repnz
inc
hlt
lret
faddp
addr16
inc
adc
sub
xchg
jae
xor
xor
jne
loope
dec
ja
call
mov
shr
fdivr
call
push
mov
sahf
cli
jo
into
stos
xchg
mov
pop
sbb
mov
call
dec
jbe
inc
jmp
mov
cmp
ljmp
sti
nop
test
cmp
push
xchg
pop
ficompl
cltd
sub
sbb
hlt
ljmp
dec
idivb
push
sbb
movsl
stc
test
jmp
mov
nop
add
ja
mov
sbb
sub
movsl
add
mov
add
int3
xor
mov
cmp
in
and
dec
fstps
xchg
loope
dec
mov
push
mov
loop
daa
push
adc
jmp
add
mov
iret
stos
or
push
mov
mov
cwtl
mov
fisubl
pop
repnz
inc
or
jmp
cmp
dec
loopne
movsl
or
or
call
mov
jbe
cmc
outsl
mov
add
int3
push
cld
int
sbb
fldl
push
lods
rorb
cld
pop
enter
sbb
add
sti
test
std
fsubs
adc
cmp
pop
jg
movsl
jmp
push
or
cmpsb
pop
adc
jmp
or
mov
incl
adc
mov
push
je
rcr
jg
inc
lods
pop
pop
inc
add
incl
mov
lods
xchg
adc
mov
and
add
sbb
incl
adc
inc
mov
mov
push
out
iret
mov
push
leave
aam
les
cmp
aas
mov
inc
imul
das
call
fucomi
lock
hlt
cmpsb
cmp
mov
sub
fs
sbb
lock
imul
pop
das
cli
lcall
mov
repnz
leave
ret
addb
xorl
xchg
lcall
mov
ret
push
aam
into
jl
cld
cmpsl
and
stc
adc
cld
out
mov
or
pop
push
lock
call
mov
imul
test
pushf
nop
push
add
sar
xlat
popf
add
rcr
push
fidivs
mov
mov
daa
jge
mov
inc
xlat
inc
std
pushl
cmpsl
push
out
daa
add
nop
dec
lcall
roll
sarb
mov
sbb
pop
pusha
mov
ljmp
adc
sbb
sahf
adc
adcb
or
adc
ljmp
mov
repz
fadd
gs
lret
decl
xchg
mov
daa
ja
data16
les
fildll
push
mov
pop
and
nop
cwtl
cs
push
xchg
xor
in
in
aaa
sti
add
or
add
addl
out
cmp
sub
ljmp
aaa
cmp
scas
push
test
aad
jns
mov
decb
decb
adc
lods
and
inc
insb
or
sub
dec
js
mov
xchg
jae
inc
iret
sarl
call
push
and
loope
or
xor
dec
jmp
mov
sar
outsl
sub
mov
mov
push
add
push
cmp
lret
push
cld
and
cmp
dec
push
cmp
jecxz
sbb
ljmp
pop
cmc
push
jl
add
mov
sahf
fsub
or
push
int3
fisubrs
stos
test
dec
ffreep
and
or
in
ljmp
out
lods
push
sbb
sbb
movsl
and
and
int3
clc
pushl
cli
mov
sub
or
cltd
push
cld
lds
xor
add
incl
adc
cmpsl
mov
sbb
fimuls
enter
dec
pushl
pushl
ss
mov
fcoml
jmp
fmuls
decb
xor
ret
lcall
in
decl
xor
addb
sub
add
mov
test
cli
mov
std
dec
sbb
int3
xchg
outsb
inc
arpl
ficoml
fs
ljmp
inc
fs
movsl
nop
mov
out
push
shrb
std
adc
dec
and
cli
inc
pop
je
pop
and
std
mov
les
decl
cmp
fstpl
mov
push
sti
and
cmpsb
sbb
add
adc
pop
lock
lcall
cmp
les
mov
icebp
xor
mov
sbb
jl
xor
mov
leave
jbe
pop
roll
jg
subl
fcmovb
push
mov
mov
data16
gs
and
mov
xor
sub
lcall
in
sbb
sbb
and
pop
into
movsb
js
pushl
shlb
add
add
ret
jle
sub
popf
enter
call
xlat
shrb
cmc
in
add
push
jbe
out
fisttpl
cwtl
inc
popa
pop
pop
mov
ljmp
je
mov
sbb
mov
jp
jae
or
mov
inc
pusha
dec
adc
pop
decl
cmc
sahf
dec
push
sbb
data16
xchg
jle
jmp
add
stos
mov
jmp
or
gs
aaa
add
xor
fisubs
sbb
dec
add
add
push
mov
test
adc
cld
negb
or
decl
aas
inc
movsl
cmp
sub
in
mov
jmp
mov
sub
dec
mov
decl
imul
jl
fidivrl
dec
pop
test
cld
cmc
pop
decl
insb
pop
jge
inc
inc
pop
xor
sbb
pop
mov
out
jl
jge
aaa
ljmp
or
cmp
mov
mov
cmpl
pop
aam
stos
cli
outsb
dec
push
xchg
inc
js
pop
jne
ljmp
and
divl
and
pop
pop
add
mov
lcall
inc
sahf
sbb
test
pop
adc
inc
jmp
rcrb
sbb
lock
xor
into
cltd
fadds
insb
cmp
jmp
cld
mov
rorl
call
add
inc
xchg
negl
push
outsb
add
and
pop
scas
in
cmp
and
decl
mov
add
inc
outsl
js
push
movb
adc
lret
xchg
ljmp
lods
push
cmp
lahf
out
mov
mov
imul
test
xchg
mov
rcr
js
push
incl
xor
cld
popa
lret
inc
jo
jne
add
adc
mov
xlat
pop
js
sti
sbb
rclb
mov
repnz
icebp
or
pop
test
decl
bnd
hlt
ljmp
pop
dec
push
in
xchg
dec
mov
ret
mov
inc
adc
lods
shrl
pushl
cs
mov
lretw
push
or
data16
xchg
inc
pop
push
cwtl
cmp
fnstcw
pop
in
into
das
mov
jno
jo
in
push
lret
sub
adc
push
sub
sar
jmp
in
testl
and
jecxz
test
call
imull
jns
pop
les
ljmp
shrb
pop
push
mov
jg
mov
cmp
mov
sub
cmp
add
xor
out
shl
decl
and
int3
das
outsl
into
cmpsb
inc
and
jmp
add
mov
adc
xchg
mov
ljmp
xor
mov
shll
mov
and
test
xor
push
xchg
mov
scas
lea
sar
xchg
movsb
sbb
cmp
sub
dec
or
mov
imul
or
cmp
rclw
lock
sarb
dec
add
mov
sub
sahf
add
or
mov
and
jns
and
out
call
pushl
or
fisubs
shrb
mov
cmp
mov
fsubl
jae
mov
xchg
adc
in
jne
mov
and
and
fildll
ds
in
icebp
inc
sti
push
mov
js
incl
fidivrs
pop
lea
inc
or
jge
decl
call
enter
xor
push
push
mov
jle
or
das
clc
sub
in
or
sbb
incl
cmpsb
fmulp
xor
js
lock
or
loopne
sbb
pop
pminsw
fcomip
fists
dec
imul
mov
test
push
test
unpcklps
sub
decl
mov
test
adc
sbb
ret
das
push
mov
mov
or
call
pushl
jns
and
add
adc
add
or
adc
mov
je
arpl
ljmp
shr
ret
push
in
or
add
stos
xor
in
iret
push
int
add
push
out
add
jb
and
lods
cld
ljmp
pop
and
sbb
sbb
data16
dec
jmp
jp
fdivs
pop
or
fldt
jl
test
inc
sbb
addl
add
xlat
mov
call
push
adc
je
xor
mov
enter
inc
push
outsb
dec
and
and
add
nop
orl
xchg
cld
jle
sub
jns
pop
inc
shrb
sbb
push
adc
xor
andl
decl
or
push
xor
std
in
enter
add
cmp
add
mov
mov
in
ljmp
fists
mov
fs
or
xchg
and
or
sbb
xchg
enter
lcall
incl
loopne
ss
mov
daa
shlb
test
sti
mov
fnsave
lock
inc
call
in
mov
int3
mov
jg
test
mov
push
cld
jne
jg
std
push
cmp
out
cmp
int
sub
jne
dec
mov
sub
int
mov
ret
shlb
pop
cltd
jp
out
adc
paddw
movsb
int
test
xor
test
pop
in
mov
dec
test
push
dec
adc
inc
inc
std
out
pop
sub
and
mov
and
jmp
jno
sbb
push
je
dec
ljmp
push
mov
sbb
fs
inc
mov
cmp
push
mov
jmp
stc
cld
shl
ja
push
bound
add
mov
pop
fidivl
jg
or
lcall
xchg
and
fcmovnb
sub
push
shr
mov
or
push
pop
jmp
test
out
mov
jle
or
jmp
pushl
or
outsb
jmp
adc
pop
sub
mov
out
daa
mov
and
pop
dec
pop
jmp
std
pop
push
pop
test
xchg
cmp
jmp
inc
mov
out
ds
dec
and
dec
pusha
jmp
std
push
cmpsb
test
inc
nop
in
sub
aaa
add
inc
flds
adcb
push
shll
call
adc
andb
aaa
jmp
pop
push
or
add
mov
ror
jle
cmpsb
movsb
add
adcb
and
pop
jg
inc
jle
xor
sbb
adc
test
and
add
imul
and
in
or
shlb
les
push
mov
jae
es
mov
ret
jle
xor
js
arpl
stc
and
mov
cwtl
inc
push
dec
jmp
popf
dec
pop
addb
clc
popf
shr
into
sbb
mov
sbbb
dec
popa
or
bound
mov
sbb
sub
push
add
dec
mov
mov
nop
leave
aas
pop
test
ljmp
inc
pop
sbb
jp
cld
lods
es
sbb
inc
add
call
sar
cmpsl
adc
rcrb
shlb
ljmp
mov
mov
call
and
cmp
mov
jmp
add
push
bsf
flds
lret
sbb
mov
mov
adc
cltd
pushl
pop
arpl
movsb
clc
dec
loop
popa
repnz
add
subl
push
pushl
or
adc
jle
cltd
sub
outsb
xor
pop
mov
lret
in
dec
adc
cmp
pop
test
test
pop
orb
cmpsl
cmpl
jmp
stos
pop
movsb
mov
aaa
and
scas
in
shrb
clc
pop
mov
insb
test
aam
cmc
mov
and
dec
push
pop
aas
aas
fmull
ret
mov
fdivs
std
cli
pushl
cmp
xchg
xor
xchg
rcll
inc
xchg
lock
add
jnp
or
pushaw
enter
cltd
lock
xlat
push
sbb
mov
cmpsb
roll
in
pushl
les
cmpsb
int3
jns
imul
ret
aas
sub
sub
fcomps
xchg
aaa
insb
in
xor
fistpll
dec
adc
enter
jmp
arpl
dec
jp
sbb
adc
mov
mov
push
ror
mov
cli
push
es
cmpsb
fwait
repnz
sub
xor
push
mov
jl
je
xor
fbld
lret
mov
add
mov
ss
dec
dec
cmp
mov
push
inc
jg
cmp
mov
ss
add
push
shr
push
push
pop
insb
pop
push
aaa
decl
mov
cmp
fsubs
adc
xchg
rol
mov
mov
xchg
mov
mov
pop
mulb
orb
dec
mov
jg
ljmp
aas
pop
pop
and
inc
xchg
lea
push
sar
fwait
inc
std
xchg
dec
adc
mov
cli
pop
cmp
push
ljmp
xchg
test
xchg
cmpsb
add
xor
leave
scas
add
int
fisttps
xor
insb
nop
lret
adc
push
daa
sub
pusha
lea
pushl
jge
pop
or
mov
in
mov
pop
ret
shr
call
dec
mov
lcall
or
cwtl
cltd
inc
jmp
sub
inc
js
push
lret
roll
cmp
call
loop
push
iret
out
push
sar
adc
rolb
sti
ljmp
mov
clc
mov
dec
insb
loope
and
push
push
jne
test
movsb
push
jne
lahf
adc
sbb
lret
cmpl
shrb
inc
shrl
call
arpl
or
movsb
loope
pop
cmp
iret
sub
fidivs
pop
or
mov
cmp
push
ja
jl
jb
xor
sub
ljmp
sbb
sbb
pop
sbb
icebp
daa
pop
out
in
pop
or
inc
xchg
or
decl
cltd
icebp
mov
xchg
int
pop
dec
fistl
or
push
adc
call
or
mov
rorl
adc
sbb
jo
sub
in
cmpl
mov
imul
je
mov
add
or
incl
shll
stc
std
decl
inc
loop
lea
iret
mov
repnz
jg
dec
mov
adc
mov
or
hlt
movsl
mov
out
mov
pop
inc
cmpsl
lock
or
ss
pop
pop
or
decl
call
push
jbe
pop
xor
aam
and
icebp
or
mov
in
push
xor
in
ja
call
sub
ret
out
or
cmp
je
repz
push
fbstp
mov
cmp
mov
or
imul
mov
cmp
and
decl
lcall
add
inc
or
pop
leave
push
push
xlat
fsubl
les
push
decl
push
inc
dec
push
add
xchg
insb
adc
mov
sub
or
loop
cmpsb
out
out
mov
pusha
inc
xor
bound
incl
cltd
mov
cmp
cmp
sbb
mov
push
mov
cmpsl
aam
nop
fcos
push
std
jmp
dec
bnd
adc
js
mov
cmp
lret
jmp
mov
fs
cmp
cmp
jae
loopne
or
rclb
stos
rorl
mov
popa
popa
sbb
dec
popf
adc
dec
popa
adc
in
lock
push
ja
jbe
adc
fistpl
push
loop
mov
cmp
ljmp
mov
aad
xorb
push
popa
and
inc
pop
xchg
bound
test
jge
int
pop
shrb
les
in
ret
enter
loopne
add
cs
outsl
add
mov
push
pushf
fwait
in
pushl
lcall
mov
jl
rorb
imul
add
cmp
and
sub
lea
es
incl
iret
mov
dec
out
jbe
pop
cmp
xchg
cld
xchg
add
ret
cmp
andnps
mov
incl
push
or
push
stos
cltd
jmp
jg
mov
idivl
or
call
into
push
xor
fwait
sbb
inc
repz
rolb
add
test
sub
push
jg
out
out
clc
lcall
lret
andl
out
faddp
neg
mov
loope
fisubs
aaa
or
incl
call
aaa
ret
rorl
push
fadds
dec
sahf
sbb
mov
lods
scas
shlb
cmp
inc
in
lcall
add
loop
adc
xor
sub
add
mov
push
loop
adc
int
jmp
sahf
sti
fildll
jl
sbb
push
pop
dec
xor
dec
dec
ljmp
popf
push
pop
aad
adc
shl
or
cmc
push
mov
decl
ja
add
jl
mov
mov
inc
cmpsb
cmp
or
incl
xorl
cmp
adc
scas
loopne
ret
fsubs
lock
cmp
pop
xlat
in
gs
iret
mov
jl
and
enter
lret
dec
adc
divb
ja
lea
addr16
test
ljmp
notb
insl
inc
out
xchg
icebp
lahf
imul
jmp
xchg
mov
js
add
adc
rolb
js
dec
fs
fwait
jg
adc
and
cmp
adc
mov
mov
ljmp
sbb
or
xchg
add
insb
push
pop
jae
mov
iret
cltd
add
inc
ret
push
adc
lcall
add
enter
add
les
sub
dec
sbb
cmp
je
test
incb
inc
mov
jg
and
int
incl
add
and
mov
mov
outsb
or
call
sub
jmp
jbe
add
insl
incl
and
and
lret
mov
sbb
pop
jmp
fdivrs
out
shr
scas
decl
scas
mov
mov
sub
ds
rol
es
shrb
ljmp
push
sub
lock
in
add
add
je
inc
clc
dec
mov
jmp
mov
pop
cmp
idivl
push
jmp
push
test
mov
and
inc
cmc
js
ljmp
ficoml
mov
lcall
jg
or
imul
cld
imul
push
sarl
lcall
insb
xchg
push
shll
lea
xor
lods
adc
call
rorb
movsl
mov
mov
mov
data16
push
push
mov
jle
ljmp
push
jle
mov
mov
adc
pop
jno
xchg
out
mov
sbb
cmp
cmp
fisttpl
testb
gs
push
fcoml
jle
xchg
sbb
jl
jae
mov
jns
icebp
fnstcw
into
sub
jne
add
call
mov
jg
shlb
in
or
xchg
add
jl
sahf
or
add
jg
lret
add
ljmp
inc
outsb
insb
shlb
xchg
mov
sbb
add
div
scas
loope
add
pop
incl
std
ficoms
jle
std
pop
ficoms
outsb
mov
add
jge
fsubl
lret
mov
mov
sub
xchg
adc
outsl
xchg
loope
cmp
pop
or
test
or
lea
js
data16
cmp
xchg
or
mov
mov
sbb
add
out
dec
push
push
mov
idivw
pop
outsb
add
jnp
xchg
adc
xor
mov
inc
or
lds
xchg
sahf
adc
jns
mov
pop
dec
fcmovnbe
dec
fstpt
aas
add
ljmp
xor
and
adc
ja
clts
mov
stos
ljmp
shrb
jae
pushf
mov
push
xor
test
jae
sub
aam
xchg
mov
scas
and
inc
roll
adc
mov
cmc
outsb
jae
xchg
add
lcall
add
inc
add
cmpsb
lahf
xor
sub
lods
sbb
lcall
push
js
clc
and
out
mov
gs
mov
pop
fsubl
mov
cmpsb
mov
mov
ret
fistps
arpl
ss
dec
inc
nop
std
xlat
pushl
cmp
dec
mov
pop
leave
xchg
jp
sub
add
shrl
or
mov
decl
arpl
xlat
inc
push
xor
fmull
aad
and
jmp
aam
lods
cmp
mov
lds
jp
cmp
incb
scas
push
sub
cmpsb
push
xor
js
adc
pop
call
jmp
and
test
mov
jmp
dec
pop
sub
jmp
int
pop
int3
cmp
ud2
jo
das
jle
lcall
mov
fadds
jne
pop
fistpl
pushf
xchg
daa
push
loopne
imul
sub
xchg
clc
inc
adc
xchg
sub
ret
jmp
les
cmpsb
ret
decl
xchg
xor
dec
push
in
jns
mov
movsl
push
add
push
xchg
mov
pushf
mov
mov
push
dec
mov
enter
or
cmp
mov
faddl
rorb
loopne
inc
sbb
sub
pop
ljmp
movsb
cmp
lods
int
shlb
cmp
fcomip
push
jp
add
sahf
jne
out
mov
sub
shl
jecxz
call
dec
mov
xchg
movsb
push
call
fcomip
mov
aad
xlat
or
es
imul
lret
jg
xor
mov
aad
adc
out
add
or
outsl
data16
mov
jmp
push
xlat
int
cmpsb
lret
add
or
pop
arpl
shrl
push
inc
mov
jno
and
ljmp
and
jp
fisubs
push
cmp
jmp
out
testb
cmc
outsb
test
cld
jb
shl
mov
test
cmp
bound
orl
fidivrs
pop
push
cmp
das
xchg
out
mov
das
pop
aaa
shr
pop
testl
call
add
dec
add
sub
enter
rclb
outsl
lret
incl
lret
cmp
fisubs
mov
or
js
fidivl
pop
xchg
test
jmp
scas
mov
sub
sbb
xchg
mov
mov
push
mov
dec
xor
inc
loope
xchg
jmp
mov
and
test
pop
icebp
incl
add
repz
dec
mov
push
push
out
mov
push
cwtl
inc
xchg
imul
mov
prefetch
jne
out
jg
push
repz
xor
andl
push
outsl
movsb
pushf
fdivl
add
decl
call
pop
add
out
in
std
add
out
jecxz
loop
mov
push
out
fcmovb
lahf
add
mov
mov
mov
es
fadds
xor
push
insb
cltd
xlat
popa
sbb
add
jmp
xor
xor
rorb
rcl
mov
mov
lret
std
sbb
icebp
sbb
sbb
fmul
aam
fildl
decl
mov
sub
mov
sub
cmp
rcll
dec
add
scas
gs
xchg
movq
push
dec
gs
popa
stc
mov
xor
loope
and
push
iret
pusha
sti
stc
jg
outsl
addl
pushl
jle
out
mov
jg
or
lea
cltd
ds
sbb
mov
inc
dec
decl
fisubrs
lret
jbe
lea
aam
out
sbb
shll
cli
rorb
ljmp
jmp
lds
add
dec
enter
adc
push
cmpsl
or
movsl
xchg
xchg
lods
scas
lds
cmp
push
mov
inc
movsl
add
sbbl
xchg
lcall
call
fwait
add
cld
jg
popf
shl
pop
add
lcall
orl
loop
cmp
push
inc
mov
push
dec
in
in
or
inc
stos
inc
push
lcall
xor
mov
sub
adc
movsb
in
sbb
in
pop
sub
loop
rcl
lret
sti
sbb
mov
out
push
add
call
pop
lods
xchg
imull
adc
jg
andl
pop
fucom
into
bound
and
shr
and
rclb
sarl
jg
mov
out
add
rolb
pop
sahf
xchg
pop
in
ljmp
decl
mov
xchg
mov
push
inc
and
cli
ljmp
inc
inc
gs
lea
or
cmp
aas
popf
xchg
jecxz
xchg
ljmp
outsl
sub
push
xchg
jns
pop
or
mov
fldl
sbb
in
in
mov
inc
mov
cmc
or
jbe
je
cmp
sub
and
adc
jg
cmc
out
nop
lret
ret
xchg
and
mov
mov
cwtl
adc
mov
mov
jae
in
cmp
clc
call
fidivrs
nop
adc
mov
adc
and
mov
pop
sbb
jl
sub
mov
mov
sbb
cmpl
decl
decl
dec
mov
and
das
xchg
fisubl
mov
loopne
push
add
cltd
and
push
jmp
jmp
pop
out
in
dec
lea
test
insl
in
hlt
jmp
pop
add
dec
mulb
faddl
stc
jne
sbb
adc
imulb
or
adcb
call
cld
rcrb
loop
sbb
js
or
add
call
xchg
sub
nop
loope
add
addl
pushl
stc
aam
sbb
decl
or
jo
add
lock
push
test
xchg
jo
add
pop
fcoml
movb
scas
pop
and
dec
jns
dec
test
dec
xor
mov
shll
out
xchg
mov
mov
pop
movsl
xorb
stos
outsb
dec
out
cmp
pop
jle
xchg
sub
js
rcrl
ret
pushl
inc
dec
push
jmp
sub
dec
lds
add
mov
std
dec
xchg
test
jg
mov
add
hlt
push
push
ds
call
es
mov
mov
int3
rcr
push
addr16
inc
and
lcall
les
lahf
test
fstpt
push
popa
inc
sbb
push
loopne
mov
dec
mov
jmp
dec
cmpsb
and
jbe
adc
icebp
mov
cli
inc
fsubs
lahf
adc
lcall
aam
cs
aaa
loope
fcomp
xor
stos
inc
test
push
sbb
inc
xor
cwtl
or
ret
xchg
push
add
push
mov
ret
fwait
sub
push
hlt
sbb
jle
xchg
mov
pop
test
mov
cli
call
loop
or
insl
xor
scas
mov
cmpsb
lret
jmp
or
push
cmc
repnz
push
mov
daa
mov
out
pop
jns
inc
adc
popf
xor
mov
pushl
jmp
and
jns
push
addl
ret
mov
adc
ds
cmp
aad
int3
cmp
adc
sarl
aad
mov
pop
mov
lods
dec
aam
adc
repz
and
loopne
test
xor
xor
sbb
ljmp
shlb
stos
daa
sbb
xor
sarb
es
push
test
fidivl
jle
push
push
ja
cmp
sub
mov
dec
mov
bound
loope
arpl
xchg
sbb
push
loopne
ret
lcall
call
shlb
mov
cmp
mov
push
or
lods
lcall
decl
into
sub
scas
or
cmp
and
sbb
mov
je
push
data16
mov
cs
and
in
dec
ljmp
out
addl
enter
mov
xor
out
push
xor
jbe
lods
sbb
adc
nop
pop
sbb
lcall
pop
mov
lret
fdivr
rcl
fxch
pop
xor
dec
call
push
loopne
and
push
adc
adc
and
sbb
push
jmp
dec
push
lcall
in
cmpsl
fsubl
xor
pop
and
push
popl
pushl
rcll
test
in
inc
add
pusha
sub
cli
inc
mov
and
or
jmp
fucomi
mov
jmp
call
push
mov
repnz
sbb
cmpb
add
sar
arpl
sar
rclb
fiaddl
and
pop
pop
jmp
dec
dec
add
int3
lods
adc
aad
call
ja
add
inc
out
and
push
jb
add
and
jae
mov
aad
clc
sar
js
cmp
sub
jo
or
and
hlt
lods
push
push
mov
cmpb
lea
notb
jne
sub
sti
add
xchg
or
push
lcall
or
test
inc
sbb
aam
mov
decl
adc
jb
pop
cmpsl
xchg
fnsave
or
lcall
or
push
push
gs
lock
cmp
cltd
xor
lret
cmovle
cmpb
pop
cmp
mov
pop
mov
mov
ljmp
add
push
ror
xor
data16
pop
out
or
add
insl
filds
push
ror
sbbb
or
mov
add
pusha
dec
xor
test
hlt
mov
push
mov
rcll
adc
add
aam
pop
and
jne
mov
call
cs
sub
call
test
lods
jle
add
add
inc
add
or
loope
or
stos
clc
mov
ja
cmp
cmp
int3
out
ljmp
mov
sarb
pop
ss
add
xorb
xchg
or
clc
faddl
pop
xbegin
cmpl
dec
std
sbb
icebp
inc
es
mov
or
mov
inc
mov
lods
pop
aam
sub
nop
incl
cmp
test
jb
dec
adc
js
lea
loop
cmp
or
add
hlt
xchg
lcall
in
fstl
push
insb
mov
call
loope
insl
enter
xchg
es
ret
insb
xchg
and
shl
data16
dec
push
pop
jmp
push
and
or
jle
cmpxchg
mov
sub
ds
push
pushl
sar
call
mov
pop
adc
test
aaa
pop
pushf
and
jp
mov
jae
push
adc
lock
jno
xchg
jns
inc
xchg
mov
pop
pop
scas
clc
or
gs
ret
popa
adc
xor
es
lret
dec
sbb
pop
jno
in
insb
and
mov
loopne
ret
xchg
push
jns
sbb
insb
in
mov
dec
jg
and
adc
xlat
je
adc
mov
lcall
adc
mov
notb
adc
mov
xchg
xchg
inc
add
cmp
out
daa
hlt
aaa
out
inc
lds
sarl
sbb
decl
subl
fwait
jmp
in
jne
outsb
add
cmp
cmp
imul
push
push
or
sbb
push
sub
push
out
sbb
dec
pop
jbe
mov
jmp
decl
xor
xor
hlt
jge
out
stos
cmp
js
mov
movsb
rorb
pushf
jmp
mov
xor
adc
insb
or
push
dec
jmp
and
repnz
adc
ljmp
push
or
out
add
cmp
jmp
icebp
aas
aam
push
mov
jmp
or
push
out
mov
jp
inc
aas
push
add
fbld
xchg
or
mov
xchg
out
rcl
ret
or
add
and
iret
inc
jbe
aad
or
cmp
dec
push
pop
or
push
leave
mov
outsb
pop
jl
or
and
lcall
jne
jo
push
and
xsave
add
pop
stos
mov
push
inc
dec
mov
xchg
ds
add
or
dec
cmp
div
jbe
mov
and
aas
and
push
iret
mov
and
xorb
mov
inc
inc
popa
jge
mov
movsb
fldl
ljmp
xor
jnp
inc
scas
inc
icebp
push
push
in
dec
pop
push
dec
adc
mov
push
push
sbb
call
rorb
xchg
jmp
push
fmuls
inc
or
testb
jbe
jp
std
icebp
and
orl
notl
out
in
jg
mov
sub
mov
sbb
je
dec
pop
decl
filds
adc
or
mov
dec
jo
dec
jnp
daa
jecxz
mov
decl
imul
add
or
xchg
dec
inc
hlt
add
cmc
cmp
or
or
call
push
mov
or
xor
mov
in
in
in
and
jge
sub
ficompl
adc
faddp
pop
push
jbe
ljmp
mov
pop
out
daa
adc
push
rol
outsl
ret
mov
mov
incl
adc
add
aam
cmpb
je
xchg
jb
decl
pop
dec
stos
xchg
pop
xchg
and
or
inc
pop
and
shrb
ljmp
pop
jb
inc
shl
inc
cmp
ret
sub
sub
cmp
mov
push
shlb
adc
xor
add
nop
dec
jae
cmp
cmp
lds
aaa
jge
jbe
inc
js
push
xor
scas
push
and
and
and
mov
cltd
ljmp
push
push
and
das
sti
stos
lahf
out
sub
popa
sub
push
mov
decl
lcall
pop
test
jb
pop
jne
inc
xorl
das
xchg
insl
push
ror
test
decl
pop
adc
stc
xor
jle
add
dec
pop
inc
pop
pop
test
sbb
fdivrp
jl
into
cmp
adc
xchg
mov
push
jmp
sar
lret
push
sarb
xchg
dec
add
add
adc
decl
mov
push
cmpl
pop
cmp
clc
jecxz
mov
add
repz
movsb
pop
sbb
sbb
sub
and
shr
notb
loope
call
or
ficomps
inc
xlat
cmc
shlb
sub
in
adc
aaa
cld
clc
mov
aas
lcall
inc
sub
ret
sbb
lods
in
fildl
push
sub
out
ds
je
push
mov
in
adcb
push
sub
sub
call
insb
ret
xchg
xchg
adc
xorl
xor
popa
push
pop
mov
ret
incl
pop
xor
stos
add
sub
mov
adc
dec
push
push
push
xchg
lea
daa
or
dec
inc
cmpsl
je
or
inc
pop
sbb
cmp
inc
xor
cmp
jge
aam
jp
dec
pop
xchg
ffreep
pop
test
loope
mov
data16
and
rol
sbb
popf
out
ljmp
add
add
mov
adc
mov
xchg
or
mov
mov
ljmp
imul
sbbb
dec
pushl
cs
push
test
data16
mov
dec
xchg
lods
addb
icebp
add
inc
fisttpl
cmp
sbb
jmp
and
ds
mov
bound
clc
and
mov
pop
push
rcll
sub
cmp
cmp
inc
dec
mov
mov
jb
xor
sub
out
test
sbb
enter
and
call
lcall
xchg
shl
mov
cmp
push
adcb
inc
mov
mov
popf
mov
popf
jg
loope
sbb
and
mov
ret
lcall
sub
out
sbb
sub
push
cmpsb
dec
mov
and
adc
pop
insb
push
pop
ret
inc
mov
xor
and
les
mov
inc
xor
jle
in
decb
mov
mov
lods
bound
pop
add
inc
std
jne
loop
cwtl
rorb
sub
data16
mov
int
iret
in
cmp
movsl
push
cmpsb
mov
insl
out
test
xchg
mov
fwait
xor
insb
or
and
insl
pop
push
js
decl
cwtl
lret
mov
lcall
lock
into
std
xchg
cmpsb
in
push
jmp
add
mov
mov
mov
cmp
aam
jbe
andl
mov
in
call
jne
jnp
jae
cmp
cld
or
sarl
jne
mov
mov
ljmp
incl
and
leave
testb
pop
imul
cmp
mov
pusha
js
fcomp
out
decl
sub
shr
xor
mov
cmp
or
mov
mov
and
xchg
adc
dec
cld
adc
in
hlt
int3
fadds
stos
lock
jmp
and
cmpsb
ret
inc
ds
inc
imul
mov
leave
fldl
jmp
xor
jl
mov
dec
scas
xchg
or
inc
sbb
lcall
xor
movsb
mov
cmc
mov
mov
push
dec
dec
clc
sbb
cs
int3
int3
and
pop
push
sub
cld
jo
mov
mov
gs
jnp
jb
insb
bound
inc
push
xchg
popf
hlt
gs
jmp
das
dec
loopne
sbb
sahf
adc
mov
pop
xchg
in
or
push
nop
sbb
ret
push
or
int
mov
and
sti
rep
roll
or
sub
rolb
adc
jb
das
sub
inc
cmp
adc
cld
mov
jmp
data16
aam
xor
testb
jb
ljmp
sub
das
dec
incl
dec
adc
push
sbb
dec
or
imul
clc
lock
mov
shrb
mov
sub
mov
stos
jb
or
dec
lret
mov
call
jmp
jmp
add
ret
pop
loopne
jmp
addr16
ljmp
inc
xor
or
fwait
jno
adc
inc
cmc
jecxz
test
mov
cltd
std
cmpsl
and
jns
xchg
or
push
dec
add
mov
sbb
repz
ljmp
jmp
lods
push
pusha
and
sbb
and
leave
mov
nop
out
lcall
cmc
xchg
add
mov
or
sbb
call
pop
cmp
icebp
jnp
rolb
mov
cmp
popf
in
jne
aam
pushl
pop
stos
ljmp
orb
es
rolb
rclb
fcos
mov
jg
test
adc
and
popf
pop
nop
fcompl
or
flds
mov
mov
sarb
xchg
out
inc
inc
mov
in
insl
xor
push
shl
incl
fiaddl
les
jo
xchg
and
rcrb
cwtl
out
mov
jae
and
shrl
imul
push
rcrl
leave
icebp
js
ljmp
pop
pop
inc
arpl
or
ljmp
aam
mov
loope
clc
push
cmpsl
decl
jns
repz
or
shrl
orl
lcall
ret
push
sbb
fists
jp
add
pop
pop
mov
jo
push
mov
pushl
add
lock
jo
push
cmpl
movsl
cltd
test
sahf
f2xm1
adc
sub
mov
insb
sbb
xchg
push
xchg
popf
jmp
loope
cmp
or
add
inc
cmp
arpl
push
and
inc
fdiv
adc
adcl
repz
clc
incl
sbb
push
lahf
cvtps2pi
and
pop
repnz
xchg
testl
les
inc
jnp
mov
cli
lea
popf
sbb
jmp
addr16
movsl
xor
test
cmpsb
outsb
out
lahf
dec
push
test
mov
mov
call
xor
xor
adc
icebp
loopne
fwait
add
decl
cwtl
xor
xchg
xor
ds
xor
imul
push
mov
sbb
int3
pop
ljmp
pop
cli
push
add
cmp
push
repz
das
sahf
pusha
add
dec
inc
dec
and
int
pushl
int3
jmp
daa
popa
cld
jne
dec
shlb
xchg
lods
movsb
ds
pop
pop
pop
cmp
je
insl
pushl
add
cmp
loopne
or
adc
xor
xchg
pusha
push
popa
push
xlat
or
dec
std
jmp
pop
add
push
and
outsb
or
sbb
fwait
std
xor
decl
lock
lods
push
inc
inc
or
xor
mov
and
inc
ljmp
incl
fiadds
repnz
hlt
or
push
push
cmp
into
in
dec
push
addr16
clc
enter
sbb
add
ljmp
or
dec
jns
hlt
notb
pop
push
push
pop
xor
hlt
dec
push
cli
mov
shl
fildl
out
int3
sbb
push
ss
ret
inc
scas
dec
ljmp
adc
out
aad
adc
mov
les
dec
push
cmpsb
mov
or
jge
pop
lcall
add
ljmp
or
and
addb
jo
stos
inc
jl
hlt
push
call
stos
aas
pusha
push
jae
xor
mov
xor
cltd
mov
in
xor
cs
cmpsl
pop
xor
js
adc
jecxz
xchg
cmp
out
push
in
cli
push
lcall
or
test
call
sub
ljmp
arpl
jge
mov
pop
adc
fsubl
sub
and
sbb
pop
test
dec
lcall
pop
mov
mov
enter
scas
push
loope
sar
mov
sti
sbb
and
in
incl
fwait
dec
dec
fistl
dec
adc
sar
lea
and
pop
ret
mov
inc
insb
or
sbb
and
call
imul
mov
lahf
loopne
idiv
mov
mov
cmp
out
or
movsl
imulb
pop
sbb
loope
sti
int
lea
cmp
add
movsbl
push
orb
nop
inc
int3
push
cwtl
incl
sbb
sbb
push
inc
or
das
sub
xchg
or
add
mov
pop
lock
mov
and
mov
mul
scas
jge
adc
idivb
xchg
push
jne
decb
lcall
dec
dec
adc
outsl
inc
fsts
pop
mov
add
movsb
lret
and
sbb
sar
fnstenv
ljmp
and
fsubs
mov
imull
push
mov
outsl
test
jmp
mov
addb
xchg
fcmovbe
enter
xchg
ljmp
es
rorl
or
call
mov
push
or
inc
insb
je
inc
cmp
pop
icebp
pushl
ja
imul
jne
inc
sub
pop
pop
cmp
inc
inc
fistpll
lret
mov
in
add
inc
xorb
ja
lret
inc
cmp
inc
xor
lock
adc
pop
in
cmp
mov
push
imul
ficompl
pop
lret
stc
push
mov
shll
decl
out
aaa
aad
jae
xchg
fmuls
sub
push
sub
loopne
dec
pusha
inc
loopne
jmp
sbb
cmp
lock
stos
pop
pop
subb
in
mov
test
add
sub
fcos
incl
add
or
in
ret
rcrl
inc
nop
cmc
test
adc
incl
mov
outsb
in
stos
xchg
lods
pushf
adc
cs
jl
jnp
pop
push
mov
dec
and
fwait
stos
adc
cmpl
nop
jbe
or
mov
es
adcb
cmp
test
rolb
hlt
add
jne
lret
adc
hlt
ljmp
or
dec
aas
sbb
adc
test
mov
jns
shll
jg
sahf
xor
call
mov
cld
dec
lcall
enter
pushf
sub
jmp
loopne
jmp
pop
mov
mov
arpl
inc
cmpb
adc
mov
jg
test
jle
icebp
into
je
pop
divl
dec
add
inc
mov
loopne
sar
mov
gs
xor
addr16
xchg
test
sub
xchg
jo
shl
movsl
out
add
sti
xor
subl
outsb
mov
xchg
outsl
jne
insl
or
subb
lcall
xchg
adc
ret
loopne
mov
addr16
js
stos
mov
jg
push
add
repz
inc
or
cli
adc
sti
mov
in
incl
dec
aas
in
popa
and
ror
mov
dec
pop
mov
add
push
frstor
jne
ljmp
arpl
mov
xchg
and
pop
xchg
lret
cmp
ret
push
xor
jp
and
adc
mov
mov
ja
mov
lcall
jl
xchg
fisubrl
stc
repnz
cmp
mov
jnp
ficoms
daa
mov
rolb
cmp
mov
test
mov
icebp
decl
jl
adc
jo
ret
mov
push
mov
push
fsubrp
shlb
mov
inc
jns
adc
inc
sbb
inc
out
push
inc
aas
adc
adc
pushl
add
and
loope
sub
push
scas
push
testl
add
mov
scas
jmp
add
dec
xchg
or
notl
rcrb
inc
pushl
test
jno
shl
sbb
adc
je
jbe
jmp
imul
stos
sub
push
call
cltd
push
sarb
pop
rorb
aaa
movsl
loopne
jae
neg
xor
add
decl
mov
mov
fldt
jge
std
sbb
mov
outsl
cli
lret
mov
or
jne
and
sbb
mov
pop
test
jg
cmp
pop
icebp
cltd
push
push
sub
loopne
xchg
cmp
shll
sub
mov
cmp
mov
lds
in
sub
jecxz
cltd
xchg
mov
lcall
fmulp
jb
xor
jle
cmc
xlat
lea
jbe
dec
push
cs
aad
push
or
bnd
std
into
ud0
pusha
jmp
push
mov
pop
dec
inc
fisubs
xchg
rcll
mov
aad
aaa
jle
and
pop
mov
or
int
sub
fldpi
or
ljmp
and
xchg
test
dec
pop
cltd
cmp
test
js
cmp
sbb
sub
cmp
pop
dec
mov
push
call
das
rcl
mov
insl
sahf
mov
lcall
fimuls
or
lret
cltd
xchg
sbbb
incl
popf
outsb
jg
cmpsb
enter
or
and
int
lods
inc
and
int3
mov
pop
outsl
add
mov
movl
sub
pushl
hlt
jl
nop
or
or
rorl
shll
push
fwait
inc
incb
jl
push
ljmp
push
sub
push
arpl
adc
nop
and
dec
in
icebp
jnp
daa
pop
subb
leave
pop
dec
pushl
rclb
in
out
into
mov
jle
into
push
add
fildl
incl
push
or
hlt
sub
mov
dec
and
popf
xchg
jne
lret
sub
jmp
mov
clc
sub
push
addb
jne
popf
movsb
out
clc
cmp
cli
sbb
dec
clc
rorl
enter
add
jae
ds
push
nop
loop
nop
ljmp
fidivrl
pop
push
data16
xchg
lock
adc
push
and
std
or
mov
lcall
xor
mov
incl
addb
mov
and
insl
out
pop
fsubrl
std
lea
and
test
sbb
ljmp
mov
int
pushf
inc
pop
cmp
inc
inc
inc
loop
or
adc
cmp
ljmp
sbb
sub
lock
mov
pop
sbb
cmpsl
push
push
mov
ret
das
ret
clc
lcall
jle
push
lea
or
scas
sub
inc
xlat
test
jnp
fisttpl
push
hlt
cs
addr16
cmc
push
rolb
hlt
je
add
call
push
inc
cmp
jne
loopne
outsb
jae
pushf
sub
add
sarb
jbe
les
cmp
lods
or
sub
mov
ret
jne
outsl
push
or
push
fnsetpm(287
adc
clc
and
ret
xchg
ss
dec
xor
jns
shlb
fs
or
jecxz
inc
dec
pop
call
into
cmp
out
adc
fisubs
in
mov
jmp
ss
fcomip
call
jne
fstpt
mov
sub
addb
pop
and
jmp
aam
mov
imul
inc
jbe
mov
and
stos
and
jmp
pushf
lods
ljmp
push
adc
jo
adc
or
xchg
dec
inc
sbb
push
ljmp
ljmp
cltd
sub
pushf
add
movsb
mov
mov
jle
outsl
inc
push
inc
mov
xor
mov
pop
orb
pop
xor
pop
fcoml
pop
decl
mov
or
pop
incl
jne
sub
outsb
jmp
cmp
shll
dec
jge
mov
jmp
xor
std
jmp
xchg
add
pushf
loope
push
in
pop
xor
and
test
ljmp
mov
jl
data16
sub
sbb
pusha
cmp
sbb
test
push
dec
push
sub
push
mov
push
rolb
dec
mov
jl
sub
pop
mov
xchg
pusha
dec
call
cmp
xor
ret
push
nop
add
push
aad
lods
adc
dec
push
mov
sub
call
inc
pop
xchg
test
adc
lret
inc
subb
and
daa
js
movsb
call
push
fimuls
call
pop
pop
sbb
movsb
adc
lods
in
add
clc
adc
cld
ds
and
sbb
lea
mov
daa
loopne
cli
mov
mov
add
add
jbe
jo
xor
fistpll
jge
inc
lret
cmp
mov
mov
or
cmp
inc
pop
into
movl
mov
mov
mov
ljmp
sub
out
adc
fldt
les
add
or
jmp
movsl
xor
ljmp
adc
jp
inc
pop
xchg
or
mov
dec
movsl
jmp
decl
in
in
lock
jb
or
outsl
mov
mov
and
push
pushl
sbb
mov
push
inc
stos
daa
push
xor
outsb
inc
ret
movsb
mov
cmc
stos
aam
incl
sti
jmp
xor
es
xchg
sbb
add
and
repz
xor
fsts
add
jno
enter
scas
call
ret
add
sbb
ljmp
bound
pop
shl
add
clc
jae
popa
sbb
cld
or
inc
dec
sub
sub
incl
add
jle
and
stos
or
xor
sti
mov
jo
lock
inc
push
imul
ret
mov
mov
pusha
sbb
cmp
mov
mov
adcl
mov
cld
dec
mov
cmp
inc
mov
mov
in
imul
xchg
adc
in
adc
adc
pop
add
dec
sbb
gs
sbb
ret
mov
stc
lock
rol
push
add
adc
mov
or
test
mov
add
push
js
inc
stos
dec
jmp
sbb
push
or
inc
nop
ss
jl
jmp
inc
add
cli
and
test
imul
xchg
sbb
lahf
popa
and
out
ljmp
jbe
repz
cwtl
ret
pop
bound
push
cmp
mov
mov
lock
sti
jg
in
xchg
popf
xor
inc
in
imul
cmp
ds
fs
andl
decl
inc
push
das
das
icebp
xchg
or
int3
dec
add
inc
push
es
loope
pusha
push
jp
mov
adc
ljmp
adc
shrb
mov
js
pop
rorb
dec
rcrl
out
pop
dec
sub
decl
ljmp
mov
fadds
sub
and
push
sbb
sbb
andl
sahf
jo
ljmp
jne
leavew
rol
iret
mov
std
leave
sahf
jae
mov
push
fbld
ljmp
push
pop
sub
inc
sbb
inc
mov
outsl
mov
mov
dec
decl
jo
ret
aam
adc
test
out
push
add
js
ljmp
insl
repnz
fisubrl
ja
mov
data16
push
or
cmp
pop
mov
xchg
fstpl
mov
inc
xchg
lret
mov
imul
ficoms
sbb
ljmp
cmp
enter
push
insl
lret
fiadds
inc
in
incl
scas
pop
mov
scas
or
test
pop
add
xchg
push
push
mov
ljmp
sti
push
bound
jge
push
movsb
aas
cmp
fcomps
dec
lcall
addb
or
pop
mov
pop
push
pushl
test
push
iret
lock
mov
and
push
sbb
adc
int
jmp
pushl
sub
fidivs
and
cmc
xorb
push
sti
xchg
ror
insl
aaa
std
loopne
jle
push
fs
add
mov
aam
lea
dec
call
enter
cmp
dec
xor
shl
mov
lea
call
fdivl
adc
fsubs
stos
mov
loop
imul
xchg
cld
dec
insb
mov
incl
xorl
and
ss
pushf
jbe
pop
sbb
inc
pop
mov
call
xor
push
mov
ss
insb
mov
xchg
push
xor
fistl
jne
jne
add
outsb
loopne
add
add
call
mov
iret
lahf
mov
jg
lcall
jb
sbb
add
rorl
pop
cmp
test
jo
aam
sbb
ljmp
pushl
data16
xlat
jmp
icebp
push
outsl
jnp
and
cmp
movb
jo
mov
stos
mov
pop
adc
fs
xchg
hlt
inc
std
sbb
leave
out
jle
ljmp
mov
xchg
push
fbld
push
cmp
push
inc
adc
cli
inc
iret
sub
sbb
pop
pop
push
fnsave
test
jmp
sub
addb
xchg
fmull
lods
in
adc
mov
push
add
mov
lods
pop
jmp
mov
int
lahf
inc
outsb
adc
sbb
jno
jmp
adc
mov
mov
loopne
fdivr
test
add
or
mov
incl
sbb
mov
pop
push
pop
fnsave
sub
and
dec
in
push
data16
mov
decl
inc
repnz
add
callw
or
jb
cmpsl
hlt
cwtl
sahf
jb
dec
inc
cld
scas
jmp
mov
cmp
decl
scas
cmpsl
inc
popa
mov
das
loop
je
inc
pushf
jnp
cmpb
stc
cwtl
mov
adc
decl
lods
imul
sub
in
push
jle
mov
std
mov
clc
fadds
cmp
in
idiv
pushf
jmp
cmpb
insl
and
lahf
insb
xorb
and
add
xlat
clc
push
mov
dec
jmp
mov
add
adc
stos
pop
mov
jge
insl
xor
push
inc
adc
adc
lret
add
cmpsl
sub
inc
rcrb
jne
mov
lods
mov
sub
mov
lock
jmp
push
shrb
lea
cli
dec
push
add
add
push
sub
movb
dec
add
add
and
cltd
and
pop
stos
std
stos
incl
and
cli
cmp
out
dec
mov
add
out
xor
inc
cwtl
scas
fcompl
cld
scas
and
jg
test
push
push
lahf
xchg
add
nop
insb
push
dec
sub
call
lock
lods
rcll
dec
inc
jp
cmp
dec
push
hlt
ss
scas
cli
jmp
jge
xchg
mov
and
jnp
fisttpl
shl
xor
and
call
xor
sti
add
ljmp
out
les
mov
jle
andb
icebp
xor
push
dec
mov
sub
int
lea
pop
jo
das
cli
pop
loopne
xor
or
cli
jne
mov
ljmp
mov
mov
icebp
rorl
movsl
pushl
adc
popa
mov
adc
push
jae
jmp
inc
insb
or
lods
fs
inc
xchg
mov
ss
and
incb
pushl
inc
rolb
lret
xor
inc
call
push
dec
lahf
and
pop
decl
lock
cmc
ret
daa
xlat
and
pop
jne
push
mov
jbe
ja
decl
jmp
inc
or
cmpl
cli
cmp
add
or
daa
cwtl
aaa
jecxz
jns
and
ljmp
add
jno
push
ret
ret
and
and
mov
stos
ljmp
pop
xchg
add
enter
xor
pushl
arpl
xchg
js
or
dec
hlt
add
loop
sbb
jb
and
xchg
and
aaa
dec
pop
jl
xor
jae
fs
jo
xor
mov
xchg
stc
mov
push
xchg
in
test
xchg
jp
adc
cwtl
dec
adc
std
sbb
jb
or
pushw
inc
and
xor
add
nop
add
shll
in
cld
test
fistpl
mov
lcall
sub
pusha
dec
push
inc
or
xchg
fcmovne
mov
shrl
sub
enter
out
repnz
adc
xchg
push
xor
call
into
and
jne
shll
outsl
call
test
sbb
lret
cmp
dec
mov
subl
cmpl
mov
call
pop
shlb
push
sub
dec
bound
je
mov
xchg
cmpsl
jae
mov
out
and
movsb
mov
add
je
das
cmp
lret
movsl
ja
jmp
xchg
scas
xor
pop
fisubrs
fisttps
mov
xor
sahf
add
hlt
fists
fimuls
cld
add
das
clc
sbb
xor
test
jb
sbb
loop
test
sbb
addr16
xchg
loopne
dec
push
pushf
dec
sub
insl
aaa
cld
inc
je
stc
int3
in
dec
push
popf
das
fs
sub
cmp
or
ljmp
push
repnz
dec
cmp
adc
xchg
adc
push
mov
and
xor
ljmp
jno
imul
mov
sbb
insb
aaa
add
push
decl
or
sahf
push
data16
mov
mov
data16
inc
test
mov
dec
je
adc
xchg
xchg
xor
ja
out
push
inc
push
fisttpl
cmp
lock
ljmp
ret
cltd
pop
push
hlt
xchg
or
inc
mov
sub
pop
test
decl
iret
adc
ja
push
add
add
sub
add
in
cltd
mov
adc
idiv
sbb
pop
fs
shr
push
fmuls
jp
jl
xor
push
mov
out
cmpsb
shrb
inc
not
movsl
cmpb
decl
sbb
outsb
mov
mov
or
clc
adc
lods
jae
lock
decl
movl
lea
mov
rclb
aas
sarb
dec
sbb
inc
jne
add
push
xor
pop
loop
loopne
je
insb
or
add
outsl
jmp
cmpl
jbe
les
or
mov
test
jp
test
decl
dec
push
sbb
sti
scas
shr
pusha
cmpl
popa
std
jl
push
jne
or
fadd
fwait
popa
stos
and
in
jg
push
sbb
or
fnstenv
in
or
ljmp
clc
sub
std
imul
cs
xor
sub
jge
jno
sbb
decl
push
pop
sti
or
icebp
call
push
dec
subb
mov
sub
dec
ljmp
pop
pop
xor
stc
and
mov
cmpsb
jmp
inc
testl
sbb
pushl
jge
test
pop
lods
push
loop
enter
or
jae
sbb
push
jl
ss
jno
mov
or
mov
aam
inc
cmp
jl
dec
mov
push
sti
xchg
xchg
hlt
aaa
adc
xor
pop
jle
mov
cmp
xor
sub
les
cltd
int3
push
pop
lock
inc
sub
cmp
cmp
decl
ds
test
cltd
in
mov
sub
sbb
arpl
daa
iret
ss
adc
ljmp
sbb
push
sti
movsb
sbbl
icebp
pop
push
add
mov
lcall
jg
sub
jmp
and
and
push
pop
sbb
sbb
hlt
cmp
cmp
add
jns
ljmp
movsl
outsb
les
rcl
incl
sub
push
add
aas
or
push
mov
push
fisubl
lcall
decl
sahf
sbb
lcall
cmp
sbb
enter
jg
pop
mov
sub
sub
insb
pop
cmp
repz
or
jg
fcoms
pop
jg
jl
addr16
cltd
lahf
out
mov
outsl
cs
sub
or
add
addb
pop
lea
stos
rolb
movb
mov
inc
sbb
xchg
mov
js
mov
pop
or
pop
test
push
cld
or
mov
mov
cwtl
ret
mov
xor
decl
dec
xorb
inc
loope
xor
fnstcw
mov
jle
dec
in
decl
push
xchg
xchg
mov
andl
fstl
popf
mov
fs
adc
pusha
xor
jl
and
lods
out
insb
inc
or
mov
les
das
testb
jo
xchg
sub
fdivs
filds
lahf
jg
orl
sbb
scas
sbb
hlt
cmp
decl
test
lock
sub
test
jae
sahf
rcrb
pop
lret
mov
sub
adc
in
ss
adc
sti
fmuls
aad
lods
call
adc
cmp
ret
sbb
js
mov
mov
ja
cmp
sbb
in
or
pop
jmp
push
out
movsb
push
aam
int3
cmc
loopne
mov
mov
call
jne
lods
jg
add
jmp
adc
outsl
cmpl
inc
dec
pop
adc
or
test
ret
dec
dec
lds
ljmp
dec
push
cmp
out
pop
fcomps
pop
rcrb
fs
push
rcll
sub
decl
mov
in
xchg
add
int
je
xchg
subb
enter
pop
pop
shlb
jg
lret
sub
adc
popa
adc
sbb
dec
jecxz
jmp
jl
dec
cmp
ljmp
lds
imul
add
pusha
mov
mov
xor
aas
dec
push
ljmp
sub
sbb
dec
adcb
fisttpl
adc
and
or
sbb
ljmp
lret
mov
adc
mov
cmp
nop
push
lea
decl
in
xchg
push
insb
jl
lds
add
adc
dec
mov
std
cmp
mov
test
pop
sbb
or
dec
push
adc
imul
add
or
dec
mov
orb
pop
xchg
pop
pop
mov
ljmp
pop
inc
scas
adc
cltd
shlb
xchg
sbb
pop
stc
cltd
popf
xchg
xchg
cmp
idiv
sbb
incl
int3
not
imul
or
pushl
or
notb
jg
push
hlt
push
lea
test
fmul
call
add
dec
pop
sbb
push
inc
orb
mov
nop
out
incl
pop
ljmp
sbb
mov
dec
ss
flds
jecxz
add
imul
je
leave
call
shl
cwtl
xor
push
adc
pusha
dec
ja
je
int
lret
cltd
jo
addr16
dec
xor
adc
add
add
jns
adc
aad
es
sbb
scas
cmp
call
xchg
pusha
jmp
xor
lcall
fdivrs
out
ja
shll
lods
jg
mov
xor
int3
push
adc
mov
sbb
jl
lret
decl
push
into
mov
jbe
or
mov
jb
push
push
push
xor
ljmp
vorpd
push
ret
push
push
pop
inc
cmp
mov
sbb
in
inc
in
dec
push
cmp
adc
inc
sbb
mov
mov
push
xorl
jmp
push
push
or
jns
clc
add
hlt
or
clc
subl
adc
lea
dec
data16
jmp
pop
mov
mov
push
pop
es
test
int3
mov
rclb
xchg
fisubrs
add
ret
cmc
adc
dec
cmp
jge
jl
shll
adc
mov
sub
stos
jge
loopne
lods
fwait
insl
push
repnz
jg
dec
push
jle
punpckhdq
jne
or
add
xchg
out
jne
or
or
cltd
inc
adc
adc
loope
loopne
mov
test
inc
push
ds
xchg
inc
adc
jno
outsb
lods
lahf
and
xchg
jb
sbb
adc
dec
testl
lcall
add
or
cwtl
cmp
test
or
push
push
xor
ljmp
jp
jne
push
scas
inc
loopne
divl
into
push
or
jns
sahf
cmp
cld
push
fs
adc
adc
add
pop
sub
inc
or
jg
jo
jle
adc
rorb
in
neg
subl
out
sahf
pop
hlt
mov
testb
test
in
in
sbb
fucomp
in
mov
dec
loope
pop
push
jmp
push
fmulp
mov
xor
pop
rcr
shr
orl
sub
jg
decl
out
jle
movsb
out
movsb
repnz
mov
jbe
dec
cwtl
mov
mov
add
add
mov
cmp
mov
nop
ret
js
sbb
ss
adc
jmp
sub
adc
scas
fsub
loopne
pop
mov
xor
jmp
jns
cmp
int
pop
xchg
inc
repz
pop
data16
addr16
in
imul
sahf
sbb
imulb
xchg
and
jle
fistl
addr16
inc
sahf
adc
or
jns
jl
psubsw
repz
in
mov
sub
push
lea
pop
pop
push
cli
cmpsb
hlt
cwtl
add
loope
cmp
mov
and
mov
pop
inc
cli
sub
add
jo
daa
pop
nop
cwtl
and
ljmp
int3
aam
cmpsb
jecxz
lock
cmp
adc
aam
je
inc
sar
stos
out
push
mov
fstl
add
fnstcw
cs
pop
cmp
orl
cmp
adc
addb
js
inc
fcmovnbe
pop
add
dec
decl
inc
push
push
add
es
add
dec
lds
sar
ret
and
push
pop
xorb
adc
push
xlat
push
sbb
shrl
sub
xchg
pusha
adc
scas
add
out
test
xor
std
ret
bound
inc
push
test
div
cmp
or
aaa
lea
adc
dec
cli
lcall
std
dec
pushf
mov
mov
mov
pop
and
cmpsl
subb
xchg
cmpsb
lods
pushl
push
and
cwtl
cmp
and
loopne
enter
jl
ror
daa
fidivrs
add
xor
mov
decl
push
rcll
nop
add
sarl
mov
dec
sbb
outsl
push
or
sahf
sti
or
jns
cmp
gs
inc
add
push
mov
ljmp
test
rcrl
lock
in
nop
mov
xchg
pusha
lods
cmc
addb
call
pusha
xchg
mov
dec
lcall
ljmp
pop
jp
push
sub
adc
adc
ror
leave
inc
orb
or
dec
xchg
scas
mov
jae
rclb
pusha
test
nop
iret
test
sarb
adc
in
sub
jno
shrb
xor
xchg
lods
aas
mov
lods
and
push
cmp
or
jb
mov
or
out
add
stos
xchg
and
dec
outsl
push
loope
inc
mov
mov
dec
xchg
ret
add
pusha
or
add
lea
pop
xchg
mov
push
pop
mov
jg
dec
jg
jle
add
bound
fimull
jg
jle
cmp
fcomip
shr
bound
subl
and
int
decb
xchg
or
dec
inc
ja
ljmp
sbbl
popa
cs
mov
cmp
cmp
test
jo
sub
push
mov
inc
loopne
jmp
rorl
push
pop
mov
mov
or
cmpsl
add
dec
mov
lcall
pop
aad
scas
das
es
je
jg
push
fsubp
xor
lds
jg
mov
mov
mov
mov
into
push
xor
mov
or
sub
ljmp
push
cmp
pop
mov
add
push
jle
dec
inc
push
cmpsb
cltd
lods
add
ds
into
lret
decl
jmp
jmp
or
xchg
inc
xchg
lret
push
inc
bound
pop
sbb
and
call
jmp
enter
or
sub
push
add
mov
orb
dec
loopne
xlat
lret
or
ds
mov
js
dec
mov
ljmp
jmp
push
add
cmp
and
add
sbb
gs
jae
and
sbb
clc
dec
je
fdivrs
add
mov
jbe
and
hlt
ja
stos
and
sbb
add
dec
mov
mov
int
ljmp
loopne
jns
fdivrs
js
icebp
rol
aaa
cmp
test
mov
mov
lret
test
ljmp
fdivrl
aas
mov
test
out
cmp
xchg
xlat
pop
aas
or
add
add
sbb
pusha
xor
dec
lcall
dec
rcll
loopne
dec
mov
add
adc
mov
xor
cwtl
or
add
xchg
lahf
mov
ljmp
das
ret
xchg
rorb
sub
pop
jg
adc
jno
loope
sbb
out
clc
cmp
push
cmp
mov
rcrl
jne
cmp
jne
or
jmp
xchg
incl
mov
push
movsl
adc
and
mov
push
pop
cmpb
fadd
mov
pop
sbb
data16
pop
push
ss
jmp
jmp
ret
fnstcw
xor
fnsave
cmovg
out
jbe
repnz
decl
dec
push
sbb
es
test
test
mov
mov
fdivr
rcr
das
mov
inc
shrb
jb
imul
cmp
and
mov
dec
mov
mov
sub
lret
or
pop
dec
jl
mov
insb
xor
call
lock
sub
pop
push
push
dec
mov
hlt
loop
jne
sbbl
xlat
outsl
cli
jmp
adc
pop
ret
dec
and
mov
mov
call
pop
hlt
inc
ret
inc
pop
mov
rclb
mov
or
or
notb
pop
cmc
inc
push
sarb
pop
cwtl
push
or
add
mov
leave
test
decl
and
xchg
mov
ss
xchg
add
fiaddl
popf
in
decl
loop
in
addr16
xor
xor
inc
xor
and
cmp
enter
add
fildll
shr
lret
and
addb
das
or
dec
jno
xchg
decl
outsb
inc
dec
in
dec
and
add
or
sbb
mov
xlat
sub
mov
and
inc
or
and
mov
push
clc
ljmp
jecxz
mov
ret
mov
add
fstp
dec
ficoms
iret
std
or
cmp
decl
in
call
add
aaa
jecxz
sbb
fdivrl
int3
out
in
xchg
jmp
popa
cmp
sub
sub
ret
loopne
mov
pop
pusha
xor
cmp
sbb
insl
push
incl
push
jge
pop
pusha
and
mull
push
and
add
pop
adc
jmp
mov
inc
mull
int3
pop
pushf
push
jmp
mov
aaa
cltd
push
inc
push
adc
fstp
cwtl
insl
out
and
pusha
pusha
or
push
addl
xchg
mov
push
testb
out
fwait
push
mov
xor
sub
cmp
notl
cli
test
and
ljmp
lcall
mov
lret
adc
dec
jne
sbb
add
push
sbb
push
ljmp
out
push
jg
sti
out
stos
icebp
je
sbb
cmp
arpl
pusha
mov
pop
xorb
sbb
jnp
xlat
mov
sub
inc
and
cmp
add
jo
push
push
fstps
fiadds
pop
sub
daa
mov
ljmp
cmp
xor
call
xchg
ljmp
pop
sub
mov
jle
push
cs
mov
adc
js
sti
test
jmp
mov
movsb
cmp
iret
inc
call
ret
jp
add
lods
paddb
fmull
and
rorb
sub
sub
sub
adc
push
aad
sub
mov
sahf
psubusw
sbb
add
adc
hlt
mov
xor
scas
cwtl
bound
sub
gs
xchg
and
scas
jne
loopne
incl
jo
dec
clc
dec
flds
or
cmp
xor
mov
add
fdivrp
push
fdivl
shrl
push
adc
dec
add
pushl
enter
or
subb
in
mov
aad
mov
shl
in
lahf
in
sbb
int
inc
push
cmp
or
loopne
or
call
pop
push
imul
jp
movsl
adc
add
sub
decl
xchg
adc
mov
mov
push
mov
ffree
pop
xor
stos
push
add
jecxz
and
lock
in
test
push
sbb
enter
pop
and
fistpll
js
repnz
mov
inc
and
es
loope
mov
jb
incl
or
sbb
add
or
fs
mov
loop
sub
adc
movsl
sbb
xchg
cmp
mov
stos
add
and
outsl
add
cltd
push
sub
jp
and
xchg
ljmp
or
pop
xchg
xor
in
jmp
jno
or
sub
lcall
dec
push
mov
inc
jb
add
sbb
xor
addr16
in
jg
adc
xchg
push
or
mov
inc
sti
pop
mov
sbb
shrl
int3
pop
rorl
decl
or
mov
add
xorb
add
and
adc
or
and
xor
scas
sub
lahf
fstl
inc
and
cmp
scas
xchg
sbbb
dec
jae
shlb
test
sub
insb
sbb
pusha
orl
or
and
mov
pusha
ljmp
pop
popf
test
cmp
repnz
add
imul
xchg
sbb
cwtl
pusha
jb
jne
popa
adc
leave
fisttpll
xchg
imul
in
das
xor
push
jl
mull
not
pushw
xor
or
pmulhw
mov
xor
lea
loopne
mov
or
jp
fwait
call
xor
dec
movsb
fnstsw
sbb
fdivl
push
sti
fsubr
faddp
fmul
jmp
ljmp
xchg
ret
fwait
clc
je
fucomi
dec
loop
adc
dec
sbb
popa
aam
push
or
xor
filds
cli
mov
mov
ljmp
or
push
andl
repnz
pushl
mov
orl
adc
fadds
mov
ljmp
inc
call
enter
cmp
or
or
dec
cmpsl
mov
xorb
decl
or
aaa
adc
mov
sbb
leave
out
pop
sub
ljmp
lock
imulb
adc
add
lret
cmp
cmc
or
scas
lea
ss
mov
ljmp
cmc
gs
pop
xor
lock
cli
stc
mov
mov
add
std
out
ljmp
or
mov
ret
in
mov
dec
out
fmul
push
mov
shr
mov
call
je
jo
dec
add
imul
push
mov
test
arpl
inc
mov
push
subl
push
and
fisttpll
cmp
das
and
gs
jmp
and
jg
dec
push
test
cmp
notb
and
mov
fnstenv
and
jmp
test
pop
or
add
add
sub
mov
mov
inc
push
jnp
divb
adc
dec
mov
incl
cmpw
cwtl
clc
movsb
lret
mov
popf
adc
mov
lods
sub
push
push
int
jae
xchg
or
dec
outsl
clc
jg
dec
mov
loop
and
xchg
push
adcb
xor
push
push
jle
pop
mov
fsubr
sbb
mov
xor
arpl
inc
call
sbb
xchg
mov
add
or
adc
mov
lcall
std
xor
jns
testl
mov
clc
jl
orl
decl
aam
or
data16
ljmp
mov
cmpsb
sub
arpl
pop
into
push
jne
mov
lock
loope
adc
test
gs
pop
mov
xor
adc
decl
out
mov
mov
push
cmp
jg
ret
dec
je
loopne
mov
pop
sub
push
jmp
jecxz
pop
outsb
clc
or
enter
dec
mov
xchg
adc
lahf
test
add
adc
icebp
addl
rcl
xor
lock
sbb
aad
js
jecxz
or
sbb
push
jmp
jg
jb
pop
pop
movsb
addb
jae
xchg
popf
jecxz
mov
add
in
dec
adc
bound
pop
push
add
inc
in
cmpl
xchg
pop
sbb
je
sub
sub
or
mov
add
or
ljmp
mov
add
out
add
in
push
ss
in
ljmp
es
int
mov
repz
les
pop
adc
pop
add
ljmp
xor
enter
les
dec
add
sub
ljmp
xlat
ljmp
mov
js
cli
sbbb
sbb
jno
js
lock
popf
inc
ret
cmc
mov
xchg
jl
adc
mov
fnsave
mov
push
hlt
popf
std
ja
or
mov
adc
mov
xor
rcl
bound
xor
inc
aad
sub
lcall
fidivs
mov
mov
sarl
mov
ljmp
sbb
mov
movsl
dec
mov
pusha
mov
mov
daa
sahf
add
sahf
mov
mov
lock
ror
or
push
call
fmuls
clc
mov
std
adc
call
aaa
stc
cmp
ret
out
insl
leave
rolb
sub
pop
outsb
lods
enter
incl
and
leave
sub
dec
dec
inc
jge
xchg
sahf
mov
aaa
clc
cwtl
aam
add
dec
jle
data16
dec
cmc
or
and
xor
ja
mov
sub
mov
imul
in
inc
incl
adc
push
jle
ljmp
add
ret
testl
jo
jg
lock
roll
pushf
and
add
pop
test
decl
jg
das
mov
xor
mov
or
jle
pop
adc
pop
fimull
jl
ljmp
sbb
mov
mov
pop
sub
ror
or
sub
add
insb
jb
lods
dec
dec
hlt
dec
ljmp
in
mov
lods
cmp
ljmp
sbb
cmp
or
loope
cwtl
ja
fldcw
decl
inc
lret
xor
pop
into
cmp
sbbb
ljmp
cli
pop
sub
data16
xor
sub
mov
dec
mov
dec
popf
and
push
jle
lahf
mov
ret
mov
add
ret
decl
sarb
test
sbb
es
jmp
ds
xchg
clc
mov
jl
mov
hlt
sub
cmp
pushaw
push
sahf
jnp
inc
repnz
incl
push
gs
mov
insb
or
push
cmpsb
add
call
jge
jmp
xor
loopne
adc
add
mov
test
jne
xlat
stos
push
cld
jmp
mov
and
cmp
mov
bound
sub
lods
push
aam
mov
loopne
xor
add
jmp
xchg
mov
sub
sub
cmp
add
jmp
insl
mov
push
movsl
push
add
leave
cmp
cmp
sub
xorl
dec
adc
or
ljmp
sub
mov
push
add
into
jbe
jmp
xor
pop
cld
ljmp
ds
fldt
mov
fstps
or
jne
sbbl
push
movsl
std
pop
cmp
mov
inc
popa
popa
push
mov
je
dec
pop
push
xor
int
decl
mov
pop
mov
stc
fwait
xchg
rcrb
pushl
cmpb
mov
xchg
push
cmp
jb
dec
jp
in
inc
mov
push
pop
cmpsl
aad
test
les
pop
or
sbb
test
shlb
es
addb
push
push
incl
pop
mov
std
out
mov
push
and
mov
aaa
xor
pushf
cwtl
xchg
ffreep
adc
movsb
mov
xor
cmpsb
mov
jl
jo
idivb
sub
incl
jb
mov
inc
push
sti
out
loope
push
sbb
out
pop
idivl
xchg
add
call
mov
jmp
mov
shrl
pop
cmpsb
jns
out
sbb
rclb
sbb
xor
xor
or
push
mov
idivb
adc
cmc
mov
in
jmp
or
orl
cmp
ljmp
mov
add
imul
push
mov
scas
lret
pop
jb
dec
pop
fnstenv
ljmp
inc
sbb
gs
pop
imul
loope
aad
sub
xorl
arpl
ljmp
mov
rcl
fwait
movsl
stc
loopne
and
sub
inc
and
mov
ljmp
add
adc
inc
add
adc
mov
adc
sub
or
xchg
fidivrs
sub
mov
and
ljmp
push
cli
pop
test
inc
enter
xchg
pop
pop
push
xor
mov
push
sbb
ffreep
add
push
shlb
adc
inc
pop
div
cmc
lcall
add
dec
ljmp
add
cli
andl
data16
add
imul
testb
dec
mov
das
cli
subb
and
nop
inc
dec
bound
lea
ret
pop
adc
arpl
mov
outsl
incb
std
dec
aaa
insb
xchg
add
pushf
and
jg
inc
and
mov
push
mov
mov
xchg
sub
cmp
mov
mov
sbb
dec
sbb
add
xor
or
mov
dec
jl
fnstsw
in
or
aas
lock
xchg
ja
and
ljmp
lock
pop
sbb
daa
add
pop
test
xor
mov
pop
or
or
mov
popf
cli
cmp
or
mov
jle
jl
call
hlt
enter
pop
mov
push
inc
js
imul
add
ljmp
or
push
mov
sbb
pop
mov
add
add
inc
stos
lods
js
mov
dec
push
push
lret
imul
decl
jbe
adc
inc
in
dec
cmp
mov
out
jmp
mov
mov
xorl
jmp
orb
cmp
mov
dec
add
sub
ljmp
cmc
and
fs
push
mov
aaa
xchg
mov
jmp
adc
outsl
cmpsb
pop
daa
add
shrl
sub
mov
mov
pop
mov
cmp
sti
xor
push
inc
loope
lds
xor
ljmp
movsl
std
imulb
sub
movsb
icebp
mov
inc
inc
rcll
cltd
and
jo
jle
mov
cld
dec
mov
mov
lahf
dec
jp
outsb
add
aaa
out
pop
aam
adc
aaa
xchg
imul
stos
mov
test
repnz
inc
jo
sbb
icebp
dec
outsb
cmp
jp
mov
push
or
ret
pop
sbb
cmp
jmp
xchg
jl
lret
jno
pop
xor
dec
cmp
je
sbb
sti
cmpsb
push
lcall
xchg
out
je
std
mov
inc
outsl
add
sub
hlt
out
addl
adc
fsubrs
sbb
adc
outsb
dec
ljmp
call
adc
fidivl
sub
cwtl
dec
stc
shr
clc
ret
dec
jmp
push
pop
pop
jl
cmpsl
cmpsb
scas
pop
sbb
or
in
repnz
decl
repnz
cld
mov
cmp
jmp
mov
ficoms
xorl
push
fdivr
lret
outsb
jmp
sub
sbb
pop
dec
dec
dec
inc
add
lret
add
or
ljmp
jecxz,pt
adc
test
inc
add
jne
inc
pop
adc
and
push
and
shr
scas
adc
decl
mov
cmp
pop
test
mov
movsl
adc
sub
mov
sbb
inc
inc
inc
pop
popa
mov
mov
mov
es
test
and
sub
push
lods
mov
std
push
push
rorl
dec
insb
add
decl
cld
jb
icebp
xchg
adc
adc
je
inc
pop
jno
je
lea
xchg
xchg
cmp
fcomip
lods
loopne
and
aas
inc
mov
pop
mov
push
shr
xor
test
pop
ljmp
shrb
movsb
pop
add
jne
arpl
testl
in
dec
pop
into
ret
pop
cmc
jmp
sub
cmp
fldl
inc
mov
jo
pop
in
popa
add
mov
mov
add
addb
jle
cld
out
lock
cmpsb
popa
push
js
adc
idiv
pushf
arpl
inc
data16
sbb
pop
mov
das
xor
mov
incl
xor
rcll
push
into
nop
cld
call
push
adc
jp
jmp
jecxz
jb
push
inc
push
jne
xchg
xchg
das
lods
je
cmp
adc
icebp
call
xor
ficomps
push
sub
out
xchg
les
push
sub
add
test
push
clc
scas
dec
popa
rcrl
mov
dec
lcall
cld
mov
dec
dec
pop
or
and
or
out
cmp
ds
mov
fcomip
lods
mov
pop
mov
lea
ret
in
add
add
push
xor
sub
jmp
imul
pop
mov
cwtl
sar
ljmp
loop
loop
push
inc
add
pop
push
dec
and
pop
hlt
xchg
inc
dec
cmp
les
dec
lock
scas
ret
sbb
push
adc
div
mov
xchg
mov
sbb
pop
lock
ret
or
clc
add
pop
inc
mov
cs
push
xor
orl
cli
fadd
decl
jbe
push
mov
xor
push
sub
leave
stc
loopne
dec
shrl
mov
aam
call
aad
icebp
cmp
inc
push
jp
das
loop
stos
mov
sub
push
decl
sub
ljmp
test
push
jne
push
jne
mov
decl
inc
in
xor
les
nop
pop
mov
out
jge
mov
cld
push
dec
sbb
sub
ljmp
ljmp
clc
or
lcall
push
movsl
sub
sbb
pop
dec
or
leave
adc
push
jne
bound
pop
inc
sbb
decl
imul
add
pop
cmp
rorb
xor
lea
ljmp
cmp
das
add
adcb
pop
add
push
mov
je
decl
and
aam
xchg
cltd
adc
jo
pop
mov
mov
add
or
call
mov
jl
xchg
jge
cmp
das
inc
mov
dec
jg
sbb
fnstsw
inc
imul
scas
call
add
mov
inc
ret
pop
mov
ljmp
fisttpl
mov
jno
adc
jl
ljmp
mov
jp
jl
repz
mov
pushf
dec
cmp
sbb
ret
int3
into
fisttpl
or
orl
pushl
adc
add
addr16
xor
fidivrl
stos
mov
notb
jmp
pushl
xchg
xchg
dec
jg
dec
fdivrl
mov
adc
push
sub
insb
dec
jl
push
mov
dec
lods
push
cmp
dec
xchg
les
jge
test
bound
xchg
decl
inc
ds
or
dec
lcall
fildl
je
out
ljmp
jl
push
lcall
fwait
div
inc
je
cmp
incb
add
and
repnz
in
sbb
lcall
stc
jp
lret
movb
out
jl
xchg
aas
xchg
imul
or
out
jmp
add
sahf
addr16
mov
ljmp
in
shr
cmp
dec
dec
leave
push
add
int
outsl
pop
xchg
js
loope
and
leave
outsb
jmp
mov
sub
mov
lods
ss
shll
ss
cmp
dec
jg
and
rorl
mov
inc
movsl
jb
rolb
pop
out
movsb
ja
je
sub
mov
sub
push
mov
mov
imul
xchg
add
or
out
or
es
push
nop
call
data16
jl
cmp
push
popl
dec
dec
adc
pop
xor
cmp
ljmp
push
cld
ret
fucomi
int3
push
or
outsl
add
or
and
push
inc
xchg
mov
cld
pushl
ja
cmp
dec
popa
orb
daa
test
arpl
jo
rorl
push
sbb
adc
xchg
and
mov
popa
ret
js
sub
sub
mov
jo
sarb
popf
xchg
popa
jb
jg
ds
add
add
ljmp
jne
or
das
jb
js
push
pop
jp
pop
sbb
lea
packssdw
test
pushl
inc
mov
jmp
movsl
jecxz
aaa
xchg
cs
mov
pusha
repnz
jmp
mov
popf
mov
sti
lea
leave
push
inc
outsb
mov
stc
and
xchg
mov
inc
cmp
stos
push
cld
ljmp
iret
imul
loope
jecxz
add
or
mov
movsl
shlb
out
popa
push
scas
pop
loopne
bound
inc
mov
mov
mov
and
add
icebp
scas
aaa
lods
or
push
pop
jmp
popf
add
sbb
pop
icebp
pushl
add
push
cltd
inc
push
cmpsb
or
adc
out
and
fwait
iret
xchg
add
lock
or
add
adc
ret
add
or
inc
or
shrb
xchg
cs
cmpsb
or
out
out
cwtl
mov
add
enter
mov
enter
loope
cmp
push
dec
and
data16
mov
rcll
loope
inc
and
inc
add
cmpsb
icebp
add
sub
std
pushl
cmp
cmpsl
test
push
fucomp
loopne
clc
cmp
pop
icebp
pop
in
leave
mov
push
repz
nop
test
je
and
pushl
mov
fnclex
push
or
cmp
out
mov
es
and
push
jmp
test
add
ljmp
out
iret
sub
adc
pop
xor
and
mov
mov
mov
add
fcoml
mov
pop
mov
or
mov
or
cld
dec
mov
aam
mov
loopne
sbb
push
push
jle
sub
iret
call
gs
pop
push
jnp
enter
lret
jmp
je
inc
add
jmp
into
lods
inc
cltd
cli
add
jne
mov
ret
jmp
sub
pop
and
jne
lods
or
inc
ljmp
orl
dec
shrl
push
lcall
stos
pop
clc
mov
sbb
mov
push
and
das
and
repnz
sbb
and
pop
hlt
repz
adc
mov
mov
aam
lret
sti
call
decl
hlt
pop
and
sbb
xchg
pop
or
add
clc
inc
out
test
sti
add
add
jg
daa
adc
call
rclb
and
dec
pop
iret
and
xor
cmp
decl
negl
movsl
and
xor
push
push
pop
mov
xor
push
outsl
inc
outsl
pushf
push
xchg
cmpsl
inc
add
ljmp
in
faddl
je
push
loope
dec
hlt
data16
dec
int3
xor
and
stos
mov
jmp
loope
in
into
mov
jl,pt
or
enter
pop
decl
inc
mov
sbb
xchg
add
lock
jge
xchg
or
and
lcall
dec
and
test
jbe
sbb
je
insb
jbe
out
mov
jl
mov
in
push
lret
clc
push
and
mov
add
inc
sbbb
xor
in
mov
sar
hlt
dec
and
mov
ss
add
add
mov
imul
ror
mov
decl
mov
adc
pop
or
addl
adc
cmp
es
sub
xchg
fucomip
and
out
cmp
mov
dec
ja
inc
pop
xchg
subl
lahf
or
loopne
jg
push
ret
pop
cmp
jg
sahf
dec
add
fsubrs
incl
mov
inc
push
pusha
jns
dec
push
popa
dec
dec
in
out
cmp
push
cmp
fildl
rol
push
cmp
sub
adc
mov
xorb
std
ljmp
and
in
push
mov
fildll
add
sbbl
pusha
push
dec
push
jp
or
pop
and
cltd
inc
mov
data16
pop
xchg
dec
pushf
mov
decl
loop
scas
pusha
loopne
xchg
jne
inc
inc
popf
pop
or
add
dec
test
lcall
pop
in
fsubr
xchg
add
sbb
scas
inc
sub
imul
test
mov
loope
mov
xchg
jae
mov
adcl
adc
mov
shlb
rorb
sub
dec
movsb
inc
jp
jae
mov
lods
or
cs
inc
enter
rolb
jo
ljmp
mov
in
fs
mov
lds
add
mov
incl
mov
insl
je
in
cmp
and
cmp
add
dec
or
push
or
mov
or
pop
mov
mov
mov
and
pop
and
lcall
push
sbb
insl
pop
or
out
addb
je
cmp
mov
push
jg
mov
jle
push
jnp
jle
iret
mov
lret
jle
cmp
jb
jbe
decl
and
je
inc
inc
xor
cwtl
xchg
xlat
pop
mov
sub
jge
stos
pop
xorb
call
inc
adc
xchg
ss
push
sbb
inc
fcoml
adc
arpl
add
inc
push
xor
push
sti
fadds
loopne
mov
in
dec
xchg
fisttpll
or
sub
jecxz
dec
add
mov
ljmp
setnp
xchg
test
inc
mov
shlb
shll
push
rcr
sub
or
decl
test
fdivrp
mov
dec
ret
imul
cmp
aam
and
in
xor
push
neg
inc
movsl
and
push
cli
shr
push
push
loopne
push
mov
std
lock
adc
adc
mov
inc
outsb
pop
and
pop
call
cmp
add
sbb
xchg
or
xor
pop
pusha
pop
add
enter
ljmp
push
je
cmc
fcmovnbe
jbe
mov
loope
outsl
sbb
outsb
pop
jmp
push
cmp
dec
ja
jne
test
push
in
pop
movsb
mov
xchg
sbb
mov
loope
scas
xor
add
adc
adc
mov
add
js
aam
mov
jb
jg
sub
xor
or
cmp
adc
call
ljmp
nop
sbb
inc
mov
sahf
imull
popa
je
and
ret
pop
add
and
or
sub
mov
sbb
mov
dec
mov
adc
dec
clc
push
pop
ror
loope
sub
popa
iret
iret
mov
xor
inc
sbbl
inc
push
or
inc
sahf
imul
add
stos
scas
mov
lds
sar
or
dec
dec
add
sub
xor
adc
incl
rorb
or
inc
mov
fwait
insb
jge
adc
sub
fisubl
hlt
push
inc
cld
loopne
ret
xor
imul
cmpsl
xor
add
and
adc
jmp
ficoms
mov
mov
pop
mov
dec
add
sbb
adc
lcall
cwtl
mov
jecxz
add
push
cmp
push
xchg
sub
js
inc
mov
ja
clc
sub
dec
dec
sub
jns
fimuls
or
cmp
nop
xor
fimuls
ljmp
inc
push
mov
cmp
add
test
cmpb
cmpsb
push
push
inc
stc
mov
lcall
lahf
mov
cmp
xchg
dec
test
cmp
sbb
insb
mov
shr
loopne
add
bound
mov
ja
clc
fildl
sub
pusha
fs
sti
pop
mov
or
decl
push
sbb
inc
shlb
or
in
adc
push
xchg
test
ss
mov
lods
pop
jg
adc
cmpsb
out
inc
shlb
add
arpl
adc
mov
int
mov
cmpb
adc
jbe
dec
lock
mov
or
pop
cmc
popf
dec
fimuls
ficoms
cli
cltd
mov
pop
push
adc
cmp
addr16
lock
incl
int3
sbb
pusha
sbbb
mov
mov
pop
fimuls
aad
aam
lahf
cmp
adc
cli
jmp
jge
dec
mov
outsb
xchg
divl
push
setbe
add
cltd
jb
ret
adc
jg
insl
jle
lods
and
push
ret
xchg
fdivrs
pop
sar
test
jmp
adc
mov
call
push
ss
push
jge
dec
pop
sti
jmp
ja
or
pushf
cmpsl
inc
roll
fwait
pop
mov
pop
dec
lcall
lods
test
in
dec
jmp
sbb
jbe
ja
jg
inc
fsts
decl
or
pop
add
mov
jo
ja
dec
data16
les
or
decl
push
inc
cmp
xchg
jne
jmp
and
lods
push
mov
dec
xor
push
add
push
fbstp
push
repz
leave
pop
lcall
out
cmp
xlat
xor
fnstenv
data16
mov
sti
decl
pop
pop
adc
dec
inc
mov
lock
adc
mov
jg
ja
or
xchg
cmpsl
add
adc
or
fsub
inc
pop
test
stc
lock
icebp
push
scas
fwait
mov
xor
int3
xrstors
lds
cmpsb
sahf
mov
pop
mov
jle
stos
push
in
imul
fisttpll
and
js
std
ret
lock
jmp
adc
sub
push
sarl
cmp
mov
or
or
mov
out
inc
push
mov
jb
push
popa
xlat
test
push
sbb
shrl
lock
ljmp
and
adc
mov
rorl
movsb
mov
add
lcall
rorb
inc
xor
xchg
add
aam
or
aad
lods
out
cli
incl
fdivr
sub
les
insb
pop
fwait
cwtl
ja
jmp
cmp
pop
push
sar
fsubr
fdivrs
fisubs
add
std
jmp
ljmp
or
sbb
fstps
lock
inc
sub
in
dec
jmp
insb
ljmp
push
lret
loop
pop
pushf
fcomip
arpl
cmp
cld
lcall
jbe,pt
addr16
adc
and
jne
add
pop
and
clc
push
xor
cmp
jmp
stos
jmp
or
addr16
inc
je
pushf
xor
out
sahf
push
and
sub
sbb
out
cmpsb
mov
jne
aas
es
jg
decl
shlb
push
jge
notb
fimull
setnp
dec
jmp
sti
inc
xchg
add
mov
jp
jg
add
push
cld
cmp
or
adc
xor
ljmp
mov
jl
insb
pop
notl
pop
or
and
push
and
loopne
in
movsb
inc
pushf
adc
iret
xchg
and
jmp
movsb
fwait
ss
cltd
pop
jne
mov
jbe
je
pop
stos
or
mov
ja
lcall
pop
push
mov
mov
add
clc
pop
out
jnp
pop
pop
popf
clc
jmp
loopne
stos
dec
es
divb
test
push
lret
rcr
bound
js
cld
icebp
dec
fdivrs
pop
scas
adc
ljmp
pop
bound
inc
jb
push
sub
mov
call
xor
ljmp
fildll
fldenv
cli
enter
sbb
cwtl
arpl
pushf
push
adc
les
mov
adc
push
or
stos
pusha
cmp
daa
orb
add
shl
ljmp
cmp
seto
rolb
popl
pop
xchg
aad
mov
jno
adc
push
and
and
jnp
test
mov
cs
jno
js
movsl
xor
jmp
dec
fistps
les
call
xchg
cmp
adc
subl
xchg
xchg
add
and
ss
xchg
sti
mov
decl
mov
xor
mov
sub
mov
jl
and
jg
les
in
mov
dec
test
sti
mov
shll
clc
call
add
mov
incl
stc
insb
insl
adc
fsubl
mov
push
fisubs
cmp
add
sub
add
imul
dec
inc
push
inc
and
fidivrl
or
cmp
pop
push
repnz
dec
xor
in
icebp
sbb
mov
push
add
jl
xchg
sbb
add
xchg
mov
gs
mov
dec
mov
lret
call
adc
decl
cmp
sahf
sti
push
push
out
adc
xor
dec
ljmp
mov
adcl
xor
ljmp
mov
sub
sar
dec
push
hlt
frstor
cmp
jno
push
and
xor
inc
inc
decl
insb
add
imul
or
movsl
cs
push
push
mov
dec
ljmp
adc
mov
inc
or
mov
adc
daa
push
out
xchg
outsl
xchg
inc
pop
cmp
outsl
adc
es
jo
sti
xor
xchg
xor
add
sahf
mov
in
push
cli
imul
mov
ficompl
mov
push
mov
je
or
ds
and
jns
ja
xchg
push
in
insl
mov
lea
out
repnz
dec
push
sbbl
adc
js
and
fildll
add
repz
xchg
mov
lcall
sti
inc
daa
mov
inc
fmuls
movsb
cmpsl
push
push
enter
add
mov
int
xor
cmp
pop
call
fmuls
call
inc
inc
sarl
sbb
je
ljmp
cmp
cltd
dec
inc
mov
enter
lea
jl
pop
push
push
adc
pop
loopne
jecxz
push
test
insb
xor
jne
mov
mov
hlt
pop
jne
adc
or
adc
mov
mov
fwait
pop
shlb
mov
pop
dec
mov
lods
out
and
inc
sub
insb
cmp
cmp
jmp
sub
xchg
push
adc
pusha
xchg
push
std
pop
sbb
je
fldcw
sbb
movsl
cmp
or
and
pop
jle
movups
jg
mov
repnz
mov
dec
mov
mov
pop
sub
ljmp
pop
sub
mov
xchg
mov
or
cmpsl
sub
mov
lcall
loopne
jns
decl
adc
inc
inc
fdivrp
jmp
mov
aaa
add
push
shll
in
pop
sub
mov
fcompl
sbb
sarl
ljmp
loopne
sahf
out
insl
and
lods
repnz
test
push
cmp
push
leave
enter
mov
pop
dec
test
shr
jmp
mov
inc
xor
mov
adc
or
jbe
mov
cmp
jnp
icebp
jb
in
pop
jg
adc
lods
pushf
lret
ljmp
mov
rcl
push
imul
jmp
adc
sub
xor
shlb
or
stos
movsl
and
adc
repz
jo
inc
sbb
in
shrl
fistpll
xor
icebp
sbb
fimuls
push
test
es
incl
mov
add
pusha
add
arpl
negb
lods
filds
pushl
addr16
cmp
xchg
mov
lahf
add
xor
cmp
scas
rorb
incl
pop
dec
sbb
cmp
inc
push
xor
lret
and
push
test
das
cli
leave
or
icebp
and
pop
xchg
adc
clc
cmp
jl
mov
shlb
fldcw
push
adcb
shl
lret
push
jns
push
push
cmp
addr16
decl
iret
inc
lea
cmp
dec
fs
pop
lock
push
dec
in
jno
sarb
rorb
sbb
lcall
lcall
sbb
aas
jecxz
xorl
add
dec
stos
and
inc
ret
imul
mov
adc
nop
imul
jg
dec
mov
xor
pop
push
jmp
iret
add
or
pop
std
cmp
dec
mov
or
idivb
mov
cmp
out
inc
mov
adc
cmp
ss
stc
mov
addb
jmp
fs
pusha
in
pop
sub
pop
ljmp
push
mov
xor
push
add
lcall
loope
lods
aas
je
loopne
and
adc
stc
push
inc
ja
iret
loope
add
dec
mov
incl
xchg
iret
mov
lret
lcall
fs
pop
test
xlat
loope
std
pop
hlt
ss
test
insl
jmp
loopne
xchg
jg
mov
add
mov
cs
jne
insl
stc
ret
pop
loop
cmc
lea
push
cmp
in
jnp
adc
sbb
pop
decl
scas
test
imul
test
subb
dec
incl
mov
pusha
mov
aas
jns
bound
mov
or
mov
cmc
xchg
dec
insl
stos
sub
inc
sub
add
sbbl
int3
imul
or
aad
dec
jne
jg
push
jmp
jno
xchg
lahf
ficoml
add
xlat
decl
cmp
mov
aam
mov
push
inc
pop
dec
dec
test
cmp
xchg
fadd
adc
mov
inc
jge
fimull
pop
pop
jne
pop
loopne
ljmp
dec
mov
jae
adc
pop
jge
cmp
or
js
decl
aas
orb
mov
pop
iret
leave
xchg
fs
adc
rclb
imul
sarb
lods
in
mov
lret
in
aas
push
pop
xor
mov
hlt
shl
test
imul
xor
shr
decl
into
bound
and
ja
fcmovnu
push
mov
sub
mov
xchg
aas
add
ljmp
rcll
inc
mov
mov
into
sbb
mov
or
mov
mov
xor
mov
xchg
es
mov
mov
pop
xchg
adc
mov
call
ljmp
sbb
pushf
jecxz
sub
xor
xchg
xor
mov
fmull
adc
in
push
dec
xor
xchg
push
mov
dec
bound
jp
push
inc
mov
push
ds
pop
cmp
dec
jecxz
clc
pop
mov
fmuls
push
mov
aas
jl
sub
inc
rorl
ljmp
push
or
pop
lods
scas
sbb
test
test
test
jb
lods
decl
dec
dec
aam
adc
cwtl
pop
in
mov
rcll
xor
add
lcall
ljmp
aas
aas
jae
mov
mov
jbe
adc
nop
mov
cli
jecxz
dec
decl
test
xchg
push
gs
jbe
jne
pop
int
movsb
shrb
dec
std
xor
inc
jmp
imul
fdivrs
dec
add
jnp
or
sar
lcall
xor
bound
addl
push
sbb
adc
push
pop
and
fbld
xchg
xchg
ret
daa
or
cli
stos
fmull
fdivrs
sbb
add
jg
sub
cmp
pop
push
or
xchg
movsb
xorb
jbe
jmp
ret
stos
filds
into
sub
pop
int
mov
jp
rclb
pushl
stos
lret
fs
lea
mov
fsubrl
aam
aaa
cld
ljmp
jle
push
mov
test
scas
ss
outsb
cmp
lcall
add
insb
cltd
jbe
sbb
mov
decl
xor
and
mov
cmp
shr
mov
sbb
lods
sbb
popa
cld
add
std
xor
push
sti
jg
mov
xchg
mov
mov
ds
cld
sbb
je
push
je
dec
popa
adc
cld
push
xchg
dec
add
push
fimuls
iret
mov
loope
sbb
inc
sub
out
movsl
clc
jmp
or
dec
pop
and
mov
inc
lock
dec
sbb
call
push
lock
incl
xchg
imul
xchg
pusha
push
inc
jg
jl
push
pop
ljmp
lds
pop
and
stos
add
in
add
pop
call
leave
add
jbe
scas
push
outsb
xchg
repnz
jmp
sbb
sbbl
sub
lea
aaa
lea
add
inc
mov
mov
stos
adc
xor
sbb
add
adc
add
mov
test
sbb
lcall
jl
sahf
data16
enter
adc
lock
sub
xorb
add
decl
push
dec
jge
add
mov
adc
mov
pop
cmp
dec
or
sub
icebp
jge
sbbl
outsb
cmp
push
adc
ljmp
cmp
rdmsr
add
cli
loop
xor
sbb
dec
jl
push
decl
add
lock
rorb
clc
cmp
mov
mov
and
sub
lcall
inc
cmp
movsb
fsts
fstl
sbb
out
push
test
mov
notl
dec
jp
mov
lock
popa
jp
mov
mov
js
cs
mov
dec
outsl
sbb
xor
mov
push
mov
inc
dec
pop
daa
das
xor
nop
clc
ljmp
clc
sub
push
shlb
adc
popf
pop
loopne
test
in
ljmp
push
cmp
pop
ficompl
mov
mov
fstpt
mov
push
add
cmpsb
icebp
dec
jne
jae
push
jne
sub
ljmp
cmc
jmp
inc
xchg
test
inc
sbb
xor
add
lods
inc
cli
push
lahf
fstpt
incl
sub
and
push
es
push
add
lock
or
sti
in
cmc
es
aad
jb
adc
ljmp
sub
and
sub
jnp
jno
mov
pop
mov
add
lock
xchg
leave
xchg
les
call
sub
xchg
sub
or
addl
mov
dec
loop
rcrb
lcall
loop
in
aam
into
shlb
add
insb
lcall
dec
mov
cs
inc
dec
mov
out
js
je
mov
mov
and
pusha
into
pusha
ret
je
sti
rcrb
clc
in
mov
or
jecxz
jns
adc
es
mov
mov
or
ljmp
sub
sti
andb
inc
push
fwait
add
push
adc
clc
ja
push
or
push
or
add
les
push
sbb
or
out
fmulp
ficompl
xor
ret
loope
js
mov
lods
and
sbb
ss
xchg
call
movsb
scas
loopne
mov
or
xchg
decl
cmp
push
adc
add
int3
jge
add
push
adc
dec
sub
cmc
sub
xor
cmpsl
adc
cmc
in
fs
jp
dec
sbb
sbb
pushl
lock
insl
jb
lods
sti
repnz
push
movsb
push
icebp
lea
push
repz
pop
pop
das
adc
mov
aas
lods
jbe
mov
and
jg
ljmp
push
stos
jmp
outsl
xchg
xchg
scas
ja
adc
sub
incl
jge
or
sbb
dec
or
je
mov
shrb
lcall
mov
adc
aam
sub
outsb
jecxz
psrlq
aaa
or
bound
ljmp
push
adc
test
add
mov
stos
movsl
ss
pop
cld
lcall
inc
add
fdivl
sub
push
mov
dec
cmc
jecxz
sbb
decl
dec
dec
and
lds
cltd
mov
xor
mov
pop
push
int
nop
test
dec
or
stc
ret
dec
ret
loopne
ljmp
jnp
dec
nop
push
es
lea
test
ljmp
and
movsl
sub
cmp
sub
jb
inc
sar
sbb
rorb
or
mov
cmc
or
xor
sbb
inc
sub
aad
pop
and
dec
inc
decl
shlb
or
adc
div
mov
mov
push
movsl
pop
imul
jae
ljmp
adc
sub
js
push
or
pusha
mov
rolb
pop
sbb
push
xor
imul
xor
into
lret
fildll
adc
popa
add
jl
sub
jl
insb
mov
js
mov
xor
aaa
mov
or
push
mov
dec
dec
cli
sub
jge
hlt
repz
in
cmp
sbb
popa
cmpsl
fsubl
je
xor
add
or
sub
out
clc
lea
push
add
cltd
pusha
pop
outsb
push
and
mov
adc
dec
sub
inc
mov
mov
decl
xchg
sbb
fcoml
and
jne
push
sub
rorl
pop
jne
mov
cli
or
arpl
xor
push
pop
std
outsl
push
jne
pop
xchg
xchg
cmp
mov
mov
sbb
dec
push
push
xor
cltd
sbbb
sbb
movsl
out
cmp
inc
lahf
or
push
inc
std
push
adc
mov
rorb
inc
pop
cmp
xor
out
lret
xchg
ret
mov
cmp
push
decl
lods
fdiv
and
in
sbb
sub
ja
and
sub
dec
adc
pushl
cld
sub
dec
push
sub
jnp
xchg
mov
repnz
jns
or
decl
pop
inc
cmpsl
dec
mov
loope
push
inc
mov
lods
leave
lcall
jbe
push
mov
mov
inc
shlb
cmc
jmp
add
vsubss
outsl
decl
or
dec
rcr
movsl
movsb
icebp
or
mov
aaa
and
ljmp
adc
clc
dec
fdivrs
pushl
fwait
pop
test
in
movsl
inc
in
stos
into
frstor
sub
dec
xor
inc
adcl
adc
decl
hlt
das
mov
xor
movsl
mov
push
xchg
push
add
mov
loopne
ret
daa
and
dec
xchg
mov
mov
out
mov
fsub
jmp
insb
movsl
int
xchg
rcrb
mov
mov
mov
loope,pn
outsl
clc
or
jp
cmpsl
fisttps
or
cli
pop
push
lcall
cld
mov
sbb
jno
fistpl
sbb
ljmp
mov
ror
sbb
ljmp
and
sub
add
ret
mov
dec
lods
or
sub
lahf
and
out
rorb
call
fsubrs
popa
dec
xchg
jb
or
adc
int3
or
icebp
lea
ljmp
push
cmp
insb
pushf
and
sub
pop
insb
mov
pop
sub
out
cmp
sub
sar
call
pop
or
pop
stos
pop
add
push
leave
add
push
inc
call
mov
test
inc
push
dec
dec
sbb
call
out
icebp
cmp
mov
test
sbb
adc
adc
ljmp
iret
jb
pusha
adc
movb
fsubs
mov
adc
jb
cmpb
push
inc
jno
sar
mov
leave
cmp
jg
int3
mov
call
sbb
or
xlat
dec
push
cmp
test
out
inc
sahf
clc
daa
repz
clc
xchg
loope
call
jmp
ds
subl
loope
imulb
sub
in
loope
out
aam
add
and
sbb
or
cli
hlt
push
fadds
rclb
mov
pop
decl
pop
loopne
mov
aaa
nop/reserved
aad
enter
jbe
in
lret
lock
or
jbe
dec
scas
jecxz
cmp
das
add
inc
pop
xchg
ljmp
xchg
loopne
jmp
lds
jne
scas
push
push
jmp
push
fdivrs
insl
incl
jmp
push
pop
pop
stos
leave
popf
scas
dec
js
sub
add
inc
mov
add
cmc
dec
or
out
inc
outsl
sarb
mov
cmp
inc
clc
scas
and
xor
mov
adcl
ss
lods
lcall
ss
lds
jbe
mov
pop
insl
pop
and
sub
int
dec
call
ret
mov
in
mov
xchg
add
xor
stos
pop
jg
inc
sbb
nop
or
out
jg
jo
jmp
jbe
push
pop
faddl
push
cwtl
lock
nop
adcl
and
or
or
push
push
into
sub
pop
jne
les
and
pop
loop
xchg
jge
adc
adc
add
pushl
mov
and
add
add
or
cmp
xor
and
pop
and
decl
mov
mov
xchg
enter
xor
push
sub
dec
fdivrs
sbb
jmp
pop
repz
jecxz
fbld
addb
sbb
pop
pop
cmp
add
jne
and
dec
fwait
xchg
push
clc
ljmp
stos
sysret
push
cmpsb
cmp
jp
pushl
lods
jg
cwtl
andl
jno
in
jg
push
dec
call
sbb
sub
push
sub
xor
call
xor
adc
in
call
fisubrl
dec
push
lea
insb
sbb
push
aam
add
cmpsb
jmp
sbb
mov
daa
mov
mov
sub
loope
push
insl
mov
pop
fidivrs
pop
shlb
mov
icebp
xor
mov
mov
test
rcl
mov
jmp
mov
push
loope
adc
lcall
mov
popf
mov
push
mov
fst
in
lock
pop
nop
pop
pop
and
adc
ljmp
push
int3
int3
sub
inc
loope
and
or
cmp
out
movsb
stos
out
mov
xchg
inc
rcrb
add
xchg
mov
pop
roll
sub
jg
inc
push
hlt
xor
add
std
cmpl
lods
jg
lods
dec
dec
clc
je
in
mov
cli
mov
ljmp
aam
out
jbe
mov
imul
mov
negl
sbb
mov
push
jmp
xchg
popa
decl
xor
scas
mov
sbb
inc
xor
add
js
or
loopne
pop
inc
cmp
mov
push
jmp
loopne
fstps
pop
xor
out
mov
pop
sti
sub
mov
nop
lods
mov
sbb
jns
lods
cmp
dec
xor
adc
mov
adc
jns
push
filds
inc
pop
or
fnstenv
loope
or
dec
xchg
shll
lods
dec
inc
fstpl
insl
adc
sub
push
dec
xor
repnz
pop
add
inc
enter
call
sub
push
pop
mov
aad
addl
xlat
inc
add
dec
xchg
adc
aam
and
stos
mov
fnstenv
test
mov
push
push
xchg
iret
sub
jmp
movsb
and
adc
adc
aaa
xchg
decl
outsb
pusha
adc
or
push
hlt
leave
or
cmpsl
das
lahf
in
mov
xchg
imul
gs
pop
idiv
or
push
gs
fnsave
push
mov
js
cmp
addr16
or
jmp
mov
fldl
mov
ljmp
jg
ss
mov
in
cmp
or
ret
shl
lock
mov
push
push
incl
cmp
insl
xor
adc
adc
mov
decl
mov
shrl
popf
dec
sti
add
imul
or
add
or
inc
sub
pushl
sbb
scas
je
mov
movsl
xchg
xchg
push
add
test
sub
push
pop
dec
cmp
and
cmp
fstps
pop
je
jge
jno
dec
inc
sarb
out
add
inc
mov
pop
insb
inc
ret
add
cli
filds
xchg
mov
push
jecxz
fisttpl
ds
ss
int
push
pop
sub
jg
rorb
jp
jb
xchg
mov
adc
adc
mov
mov
and
jb
or
out
sahf
push
mov
pop
add
lods
lcall
rclb
cmp
lret
xchg
adc
ret
xchg
jl
mov
int
cmp
lcall
inc
in
movsl
dec
push
cmp
sbb
icebp
orb
inc
jb
mov
incl
arpl
std
cmp
scas
push
hlt
xchg
sbb
push
cld
fcoms
xchg
cld
shl
lcall
roll
jb
lahf
mov
inc
iret
rcrl
inc
mov
lods
loop
call
lock
inc
sbb
mov
add
outsl
push
mov
mov
and
mov
mov
movzbl
pop
sub
cli
in
or
add
dec
dec
push
push
aas
add
jb
cli
xchg
aad
push
das
mov
outsl
mov
std
inc
sbb
sub
stos
mov
mov
lret
dec
add
ljmp
adc
pop
je
sbb
mov
outsl
pop
popa
mov
pminub
mov
ljmp
inc
jg
pop
push
jge
adc
add
lret
sbb
lcall
iret
sbb
xchg
mov
data16
lea
xchg
sub
clc
idiv
subb
sub
jno
dec
jl
dec
outsb
sbb
sti
jle
dec
insl
outsb
add
fmuls
nop
pop
mov
out
int
aas
dec
xchg
and
inc
dec
test
ja
fisttpll
mov
lcall
orb
mov
dec
dec
into
jb
and
dec
mov
sbb
jle
addr16
insl
cld
lret
outsb
push
leave
aad
loope
bound
mov
incl
outsl
or
mov
int
jmp
jecxz
mov
ljmp
lock
pop
mov
shlb
and
stos
mov
stos
aam
fldcw
test
mov
dec
insb
dec
add
sbb
fists
push
mov
cmp
sbb
ret
movsb
or
imul
push
and
jg
int
idivb
stos
pop
mov
and
movsb
xchg
jnp
test
xchg
inc
je
and
push
push
das
mov
or
cli
add
aaa
jae
mov
insl
pop
sbb
jmp
nop
cmp
loope
std
and
mov
mov
addr16
clc
or
in
adc
lcall
mov
push
pop
and
dec
inc
movsl
test
daa
fdivrs
sbb
push
leave
movsb
sub
jmp
ret
outsl
push
sbb
sub
stc
inc
add
loop
out
mov
adc
add
sbb
fcoms
add
lods
ret
decl
jae
test
or
lcall
sub
fstps
mov
insb
jmp
or
and
mov
andl
daa
pop
sbb
ljmp
das
add
pop
js
lahf
popf
addl
add
lret
mov
es
mov
outsl
insl
mov
jg
sbb
sti
arpl
popa
dec
daa
and
dec
test
fnsave
loopne
call
stos
mov
xlat
ljmp
into
jne
adcl
mov
xchg
decl
or
call
mov
push
imul
out
mov
pop
addr16
dec
fldt
lods
dec
sbb
fnstenv
call
lret
ljmp
adc
lock
fwait
cld
xor
mov
cli
or
in
xchg
cld
jmp
adc
gs
hlt
lret
sti
xor
incl
fldenv
imull
insw
xor
mov
jmp
les
jns
jae
sbb
or
mov
sti
call
inc
insl
push
popa
test
jl
mov
dec
or
mov
fildll
xor
xchg
add
push
jecxz
jo
add
je
adc
subb
addr16
je
mov
xchg
mov
test
mov
push
loop
incl
sbb
pusha
mov
push
xchg
enter
call
xchg
xor
mov
mov
push
or
cmp
mov
sbbl
shlb
lret
adc
mov
enter
and
fwait
jg
hlt
jg
enter
pop
mov
pop
add
loopne
call
lahf
and
call
lock
mov
mov
ljmp
dec
xor
add
sub
push
jo
adc
add
push
sbb
scas
sub
pushl
je
rcrl
jmp
dec
xor
iret
lahf
loopne
scas
leave
xor
out
jne
inc
jno
loopne
incl
xchg
in
xlat
mov
dec
icebp
sahf
loope
push
jl
lcall
test
and
push
sub
daa
inc
int3
mov
or
decl
add
popa
clc
out
jo
ret
gs
pop
stos
test
adc
lods
or
and
divl
push
push
inc
js
pop
push
push
stos
adc
pop
out
pop
pop
lock
sub
stc
ds
adc
lret
inc
sub
push
push
mov
neg
xor
or
ret
and
lret
les
mov
mov
cmpb
test
iret
aam
loopne
and
xchg
xor
push
push
sub
movsb
push
mov
xchg
xor
push
mov
ja
jg
push
push
fcomps
inc
sbb
out
in
cmc
sub
cmp
cmp
jle
jbe
sub
loope
decl
mov
les
sbb
xchg
mov
push
mov
mov
mov
test
sub
sbb
and
decl
inc
ljmp
in
outsb
aas
jle
jecxz
ds
or
sub
mov
cli
xchg
push
ret
push
and
call
add
movsl
ret
mov
incl
movsb
add
or
dec
ret
cs
mov
pop
movsl
sbb
jne
jg
cs
jmp
aad
imul
xor
in
and
inc
mov
cmpb
insl
loope
sub
jae
clc
in
movsb
shll
sub
or
insl
pushf
mov
cwtl
ds
lahf
cmp
rorb
mov
test
or
pop
mov
inc
cld
mov
int
call
les
jl
add
jb
rclw
cs
or
or
xor
sbb
add
adc
push
adc
movsb
into
ljmp
shl
test
int
jnp
aaa
push
cs
sar
in
mov
push
ret
xor
add
jo
pop
jns
sub
movsb
cs
test
lcall
or
dec
outsb
inc
inc
and
adcb
addr16
call
mov
dec
dec
sbb
jg
sub
and
pop
xor
dec
dec
pusha
dec
add
dec
std
cmp
data16
cmp
jg
fwait
cmp
je
js
subl
cmp
sti
lcall
leave
sub
sbb
inc
lret
aad
inc
mov
nop
add
call
std
call
xor
fstpl
pop
or
out
fbld
lcall
fiaddl
and
test
or
repnz
sbb
xor
rolb
dec
dec
and
cmpsb
in
add
and
xor
enter
pop
add
idiv
in
int3
mov
fs
push
fsubrs
leave
and
sub
mov
adc
into
jnp
das
aam
cmpsl
stos
xchg
xor
inc
inc
daa
out
inc
dec
popa
inc
clc
xchg
jg
pushl
cld
sub
mov
mov
loope
dec
or
mov
mov
xchg
in
pop
popa
dec
sbb
insl
out
xor
repz
mov
cmp
ret
pop
popa
cmp
repnz
outsl
mov
ds
mov
sbb
inc
aam
mov
popa
dec
dec
and
ljmp
mov
sub
fistl
pop
add
das
pop
and
pushl
push
shl
cs
dec
fwait
outsb
or
sub
pop
test
lret
inc
call
push
leave
cmp
sti
or
outsl
mov
fistpl
sbb
sbb
xchg
daa
add
sbbl
cmp
dec
cld
in
out
outsb
daa
clc
adc
mov
pop
pop
cmpsb
xchg
orl
xchg
lcall
inc
js
adc
dec
test
adc
sbb
in
xchg
sub
sbb
pushf
mov
fs
shlb
dec
xor
dec
sarb
adc
fsub
or
mov
rcrb
clc
cld
and
xchg
and
in
push
add
gs
lods
jge
ds
sbb
mov
and
push
mov
aaa
loope
push
xor
cmp
gs
cmpsb
sbb
mov
and
clc
ljmp
mov
sbb
jno
dec
lods
cmp
add
add
call
pushf
fs
mull
ret
cwtl
iret
cmp
setae
stc
or
pop
loope
jecxz
cwtl
aam
fwait
xor
faddp
cltd
sbb
lock
mov
std
sub
mov
adc
lahf
sub
out
sub
or
add
pop
je
or
cmc
or
mov
pop
pop
inc
adc
mov
fcomip
decl
nop
adc
xchg
xor
js
repz
xor
ljmp
outsl
cmp
loopne
and
clc
mov
rcrb
mov
jecxz
push
stc
push
orl
xor
adc
xchg
jne
or
sti
pop
add
aaa
inc
imul
jmp
rorl
ljmp
cmp
mov
es
push
dec
pop
imul
jp
inc
dec
sub
popfw
movsl
jbe
push
push
jle
adc
dec
pop
jno
mov
daa
inc
rorb
rorl
or
mov
sti
ja
imul
pop
adc
jbe
xchg
sbb
sbb
movsl
ds
into
in
mov
adc
or
mov
xor
cmp
sbb
loopne
xchg
clc
jmp
inc
or
lock
pop
cmc
int3
cmp
lock
ds
mov
popa
mov
fists
seto
push
movq
mov
ret
decl
sahf
das
dec
sbb
jbe
ret
or
adc
mov
sbb
loop
xor
into
dec
pop
add
sub
sbb
jnp
iret
data16
sbb
or
fsubr
faddl
or
xchg
pop
adc
cwtl
adc
mov
cmc
mov
mov
fldenv
mov
les
inc
pushl
int3
dec
rorb
nop
pop
aam
mov
xchg
inc
mov
xchg
ja
cmp
or
loopne
and
xor
adc
shll
std
jg
or
nop
adc
nop
pop
dec
adc
push
sbb
pop
adc
sar
ljmp
push
sbb
xorb
movsb
push
jno
mov
cs
sbb
subb
ljmp
ror
push
daa
sub
push
in
dec
fisubrl
mov
stos
cld
add
inc
jbe
idiv
jg
loope
stos
xchg
mov
outsl
add
in
xor
incl
stos
push
lret
push
cmp
or
ds
sbbl
daa
cmpsb
and
cmp
push
add
es
clc
sti
push
or
dec
add
cs
lcall
add
push
or
addb
sbb
push
add
add
fdivp
jp
mov
push
in
in
hlt
out
push
mov
lds
stos
xchg
adc
incl
or
jle
aam
arpl
inc
adc
in
in
cmp
sub
mov
stos
adc
add
loopne
ljmp
mov
and
pop
mov
cld
push
ficomps
icebp
ljmp
cli
inc
mov
or
std
test
cmp
cmp
pusha
dec
jg
mov
incl
movsl
std
mov
and
cmpsl
xorb
ljmp
sub
out
rcrb
add
jmp
cmpsl
pop
adc
or
shrl
inc
adc
sbb
cltd
fistps
decl
and
push
cmpsb
xlat
enter
sbb
fs
fs
je
subl
lods
cltd
push
push
sub
aam
adc
jae
cwtl
aam
pusha
decl
nop
arpl
jmp
ret
cmp
sbb
es
cwtl
inc
out
pop
push
cld
xchg
movsl
ljmp
xor
xchg
in
mov
out
add
iret
dec
sbb
sbb
dec
dec
inc
filds
mov
jmp
shrl
sbb
or
xor
cmp
inc
adc
adc
ds
sti
sar
inc
cmpsb
pop
lods
fisttpll
aas
pop
out
rcrb
daa
data16
xor
je
mov
cmp
xchg
jo
fcom
shr
push
lldt
xor
in
sti
dec
pop
xchg
pop
je
scas
clc
call
sbbb
sbb
inc
test
dec
je
dec
test
sbb
push
cmp
dec
sub
jg
popf
and
mov
push
repz
cmp
je
cmp
push
rorl
push
aas
negb
xchg
jns
sti
sub
cmp
add
sbb
add
mov
aas
lock
or
and
add
jns
mov
dec
ljmp
je
push
inc
movsl
scas
sub
inc
xorl
sahf
adc
xor
push
pushf
jecxz
cmp
sub
push
xor
dec
lret
cmp
inc
aaa
push
xchg
popa
xchg
roll
or
ds
dec
adc
sbb
call
inc
outsb
mov
imul
repnz
sarl
add
out
lods
jnp
sti
lret
pop
cld
loope
xchg
cmp
lret
inc
push
decl
leave
lea
add
push
xchg
outsl
icebp
ljmp
mov
push
lock
inc
inc
add
cmp
shl
pop
orb
testb
sbb
jnp
pushl
sub
add
imul
mov
cli
ss
pushl
push
call
mov
je
and
and
or
mov
stos
rol
shll
data16
or
pop
sti
test
daa
mov
insb
or
dec
or
dec
pusha
dec
fidivl
pop
lock
loopne
sub
aad
xor
ljmp
adc
sbb
ret
pop
test
stc
movsl
test
mov
inc
out
push
sysenter
rorb
sbb
jg
xor
cmp
into
mov
mov
jbe
jl
cmpsb
mov
shll
jg
std
xchg
lret
xor
adc
xor
jae
dec
mov
mov
popa
or
cmp
mov
ljmp
shufps
xlat
imul
adc
aad
lock
lds
add
mov
pop
and
out
cmp
jns
fadds
cmp
sub
or
dec
call
fisubrs
ds
inc
pop
cwtl
test
pop
rol
mov
je
push
dec
fs
stos
mov
hlt
push
jle
push
add
add
sbbl
mov
std
popa
push
pop
data16
add
add
mov
or
sub
adc
mov
imul
popa
scas
ljmp
cmp
cs
dec
jne
mov
lret
mov
stc
cmp
mov
add
adc
repz
pop
jg
pop
sub
xlat
movsb
test
or
cmpsb
jmp
lods
fld
xor
push
clc
mov
jle
repz
fcompp
or
incl
push
imul
xor
rcll
add
add
push
add
jmp
pop
stos
mov
into
adc
decl
or
fstpl
mov
push
xor
ret
inc
lods
cmp
std
xchg
add
mov
mov
idiv
cmp
fldcw
mov
loopne
mov
pop
shlb
fidivrs
fcoml
jo
xchg
mov
sbb
inc
sub
inc
xchg
cltd
fdivr
lcall
or
cmp
cmp
or
int3
adc
or
jne
adc
push
hlt
mov
xchg
mov
icebp
aaa
cld
repz
movsbl
xor
loopne
adc
and
push
dec
cld
fists
mov
test
loop
sub
sti
pop
adc
aaa
sbb
sbb
ror
xchg
xchg
dec
shrb
cmpl
mov
adc
push
lea
xor
cwtl
lcall
mov
je
test
push
sub
movb
test
pusha
add
cmp
mov
push
and
add
das
add
clts
mov
adc
sub
add
pop
mov
pop
jae
push
or
stc
push
fsub
jnp
jno
pop
adcb
sub
push
cmp
out
movsl
lods
or
push
adc
jne
cmp
in
fs
addb
sub
add
ljmp
add
stos
push
inc
inc
icebp
mov
and
adc
mov
mov
mov
repnz
cmpl
xchg
jmp
shll
or
lds
stos
adc
fcoms
mov
mov
push
insb
ljmp
filds
lcall
dec
loop
mov
jmp
bound
jp
imul
or
and
adc
fmulp
cmp
push
imul
and
push
jge
into
mov
inc
push
cs
movb
cmp
sub
mov
jbe
sti
sub
mov
iret
push
data16
adc
sub
jmp
and
in
jmp
sub
push
out
xchg
mov
testl
inc
dec
or
ljmp
mov
lock
mov
push
call
pop
pop
xchg
mov
add
push
mov
ds
popfw
aam
leave
push
mov
ss
mov
inc
mov
decl
inc
mov
push
test
add
cwtl
sarb
shll
pop
shll
outsb
loopne
gs
dec
push
mov
xchg
insb
lret
add
add
repnz
push
or
pop
rol
push
subl
das
jo
or
mov
sub
push
mov
mov
mov
sbb
push
pop
inc
sti
sahf
movb
or
lods
mov
cmp
ficompl
incl
xor
cmpsl
add
jecxz
lods
cmc
sbb
lods
mov
inc
pushl
fcompl
insl
in
rcll
xor
dec
sahf
inc
jmp
push
gs
or
xor
iret
pop
add
pop
lcall
sbb
aaa
cld
repz
loopne
les
mov
pop
jbe
lcall
aad
lea
add
jle
xor
pop
in
adc
and
mov
incl
sarb
and
pop
mov
aas
cmp
inc
out
mov
rorl
push
clc
cmp
fstl
lods
jle
adc
in
or
pushl
call
pop
in
jg
push
out
push
lea
and
inc
adc
fisttps
add
and
xor
xor
gs
pushl
mov
int3
enter
and
or
sbb
sbb
sbb
in
decl
jne
sbb
jmp
push
repnz
lods
push
lds
loope
pop
and
decl
scas
push
fdivr
adc
orb
cmp
pop
push
movl
inc
push
call
inc
add
and
imul
cmp
mov
lret
add
mov
adc
push
sbb
xor
lahf
mov
enter
jmp
cmp
pushl
flds
movsl
and
lock
mov
push
inc
fcmove
je
jmp
push
jg
inc
cld
mov
mov
mov
lahf
scas
adc
lcall
jle
mov
add
jg
es
push
mov
lds
pop
xchg
xchg
in
test
roll
decb
data16
cmpsb
xchg
inc
jb
popf
push
aaa
rol
ret
lcall
decl
decb
cmp
xor
loope
xchg
and
add
and
xchg
imul
decl
int
cmp
inc
sbbb
mov
in
dec
ljmp
mov
jnp
and
jne
xchg
bound
adc
pop
lret
dec
cli
cmc
sar
movsl
sbb
xchg
push
mov
inc
mov
push
add
jne
mov
int
adc
hlt
daa
shr
xor
adc
pop
loopne
dec
roll
cwtl
loopne
fcompl
popa
adc
lcall
jmp
push
clc
pop
or
xchg
scas
add
sbb
das
clc
inc
push
lods
mov
ret
mov
je
shrb
or
jg
lret
sub
mov
jmp
push
push
sbb
outsl
ss
lcall
mov
popa
push
xchg
xlat
mov
add
push
fidivrs
mov
mov
and
sub
sar
call
mov
stc
push
fidivrl
popf
mov
mov
nopl
jecxz
rclb
cld
jg
push
pop
xchg
and
mov
ret
inc
xchg
shll
sbb
test
mov
les
je
push
push
and
addr16
sub
into
jl
and
shrb
add
mov
incb
cmp
je
mov
pop
clc
decl
add
lea
xchg
pusha
movsb
dec
pop
je
adc
lea
data16
dec
jmp
pop
xchg
es
call
mov
popf
test
jecxz
mov
orl
push
fs
fadds
inc
ljmp
dec
daa
fsubp
push
mov
jp
ljmp
fs
mov
push
jne
inc
lcall
orb
jne
push
sbb
lret
sub
fs
push
enter
fcomip
jmp
push
lahf
pop
pushf
push
add
sub
push
xor
xor
cwtl
stos
pushl
subl
repz
sbb
imul
iret
movsl
les
adc
das
push
pop
sbb
dec
fidivs
fsubl
push
out
jp
lcall
xchg
bound
push
fistps
imul
test
int
push
xchg
cmc
push
and
inc
jmp
push
cmp
xor
xchg
adc
repnz
call
nop
xchg
or
adc
lret
sbb
adcb
or
sahf
pop
fdivs
int3
sbb
test
push
out
mov
ljmp
decl
insl
or
cs
icebp
cmp
mov
or
imulb
mov
inc
ret
mov
xchg
adc
shll
lret
js
lea
add
ljmp
sub
mov
or
mov
js
push
pop
ret
cmp
in
inc
decl
scas
lahf
cmp
imul
or
push
adc
out
and
aaa
idiv
ljmp
inc
mov
and
mulb
sbb
xchg
out
fsub
jmp
cmp
pop
out
dec
stos
dec
adc
sub
xchg
into
cmp
scas
adc
sub
incl
pop
ffreep
sbb
xor
xor
adcb
xchg
cld
lcall
jno
lock
test
mov
or
popa
adc
icebp
stos
stc
inc
xor
mov
and
pop
cltd
loope
push
add
jns
jg
push
je
adc
pop
xor
and
adc
or
decl
mov
insl
dec
mov
addb
lcall
sub
filds
ds
ljmp
test
sbb
and
push
stos
sar
cmpsb
lret
imul
mov
add
sbb
adc
add
push
sahf
iret
cmp
scas
clc
insl
decl
dec
andb
lcall
ljmp
lret
ljmp
arpl
cltd
sti
std
sub
pop
push
icebp
imul
xor
ret
int
and
pop
jmp
ret
stos
test
mov
nop
ds
dec
push
add
leave
xor
inc
enter
scas
sbb
in
add
pavgb
lret
jns
xchg
mov
add
jbe
add
incb
add
enter
jae
lret
add
inc
scas
in
outsl
int3
in
pop
iret
or
cmpsl
or
xchg
push
repnz
cld
add
rorl
mov
inc
clc
pop
cmp
or
pop
cmp
or
sub
out
adcb
push
fadd
push
push
enter
push
pswapd
sar
xorl
sbb
dec
adc
mov
in
je
adc
pop
and
push
jbe
push
inc
es
idiv
add
add
jns
and
iret
gs
ljmp
jmp
sbb
clc
sub
imul
cmp
fcompl
sbb
pop
leave
sbb
push
mov
add
orl
movb
out
add
in
dec
add
cmpsb
in
add
mov
pop
or
pushl
add
xchg
iret
cmp
and
ljmp
adc
dec
lahf
dec
xor
sub
in
push
in
scas
sbb
jg
mov
repnz
ret
repz
xor
adc
enter
ljmp
out
jb
cmp
aas
lock
call
cmp
shll
outsb
jmp
cmp
ljmp
jmp
jbe
xor
cmp
loopne
in
in
or
mov
cmp
jle
jmp
pushl
sbbl
scas
icebp
nop
mov
add
addr16
decl
loopne
adc
push
jp
repz
std
hlt
push
stos
cmp
hlt
xchg
std
popf
jge
sahf
cmc
cmc
xchg
mulb
add
aad
in
adc
push
insb
jg
xchg
push
shrl
jge
and
cli
mov
sub
pusha
jno
pushl
push
incl
insl
mov
daa
jne
mov
outsl
sbb
mov
decb
mov
sbb
mov
js
mov
lea
and
mov
js
nop
cmpsb
mov
adc
push
pusha
rcll
shll
sarl
loop
pop
adc
movsb
shl
cmp
pushl
icebp
pop
push
scas
popf
cltd
pop
andb
lcall
popa
xchg
or
cmp
subb
add
in
cltd
mov
mov
or
jmp
inc
or
cli
popf
mov
sbb
mov
das
cmp
adc
lcall
mov
xchg
sbb
testb
push
push
adc
mul
mov
xor
testl
inc
fdivr
int3
jb
pushf
xchg
mov
scas
lret
sti
sti
sar
jg
test
dec
cld
cmp
jmp
add
cmp
ljmp
inc
pop
daa
test
mov
push
clc
mov
popa
mov
loop
mov
mov
jns
add
mov
clc
loopne
adc
cmp
pop
insl
out
mov
add
decl
and
divl
negl
testl
test
outsl
add
dec
push
test
pop
and
hlt
test
cmp
pushf
push
call
repnz
scas
notb
and
jb
or
std
lcall
idiv
mulb
cmc
mov
mulb
adc
clc
stos
hlt
push
dec
sub
subb
mov
push
cld
jg
adc
xchg
pop
leave
or
add
or
stc
lcall
ljmpw
data16
adcb
push
in
adc
push
jg
mov
or
lcall
lea
sbb
sbb
pop
loopne
rorl
lock
pop
repz
lret
jns
mov
adc
nop
add
insb
repz
int
push
cmp
cmp
pop
mov
or
xor
in
popf
jle
fwait
cmp
loopne
cmpsl
loopne
sub
repnz
cmp
dec
pop
aad
test
pushl
and
mov
and
cmc
out
mov
and
sub
call
add
cwtl
icebp
or
jne
mov
dec
adc
repz
icebp
loop
psubq
lcall
lock
mov
lcall
adc
xchg
test
and
mov
pop
or
scas
out
sti
rclb
jmp
push
inc
stos
jge
je
loope
inc
cmp
ret
mov
ret
dec
mov
xchg
push
addb
testb
pop
aad
stc
orb
mov
and
add
cmp
or
and
shll
aam
sbb
fstps
dec
es
loop
mov
pop
adc
ljmp
fwait
push
shrl
fwait
in
mov
test
push
sbbl
adc
int
cli
xchg
sub
repnz
push
sub
mov
idiv
mov
pushl
xchg
icebp
add
push
xlat
dec
rorb
jecxz
icebp
lods
es
ljmp
adc
shlb
push
or
push
add
xchg
mov
mov
ljmp
fwait
rcll
std
push
pusha
ja
in
stc
cmp
pop
inc
pop
xorl
call
cmp
jbe
cmp
cltd
adc
out
loop
les
or
and
mov
inc
sub
pushl
lods
jmp
add
mov
push
pushl
sahf
roll
pop
lock
insb
stos
pop
lea
xor
pushl
repz
push
add
pcmpeqb
or
and
dec
mov
jmp
mov
inc
pop
adcl
aad
xchg
push
sub
mov
cmp
sbbb
and
cmp
ret
sub
arpl
mov
sub
inc
mov
fmuls
mov
dec
ljmp
in
sbbb
pusha
jnp
mov
lods
pop
fs
push
mov
dec
jle
adc
fcoml
jl
iret
cmp
pop
cmpsl
inc
call
cmpsb
mov
mov
jmp
dec
fstpl
jbe
loop
enter
pop
xchg
ret
add
loopne
jmp
call
push
add
icebp
in
pushl
dec
push
aaa
pop
and
jp
shlb
push
aad
push
xchg
fs
or
test
fistps
adc
nop
add
icebp
push
dec
xor
call
sarb
aaa
ja
mov
lock
in
lret
push
ljmp
xchg
mov
lock
pcmpeqw
fcoml
mov
outsb
decl
mov
daa
jle
mov
mov
adc
jne
mov
jne
call
je
in
push
loopne
insl
sbb
jo
mov
jmp
adc
icebp
enter
add
decl
loopne
mov
push
fists
xchg
or
xor
outsb
cwtl
jo
ljmp
xchg
movsb
mov
call
push
icebp
and
push
add
sub
or
sub
push
push
xchg
jnp
data16
sbb
test
test
call
mov
mov
sbbl
addr16
stos
pop
pop
mov
or
loope
fildl
mov
inc
aaa
decl
add
add
pop
sbb
lcall
ljmp
bound
sbb
mov
push
jbe
ret
sbb
aaa
cs
decl
ljmp
push
icebp
lods
push
jmp
inc
in
shlb
xchg
mov
push
aam
add
sahf
cmp
xor
push
jno
shlb
mov
add
in
cs
cs
arpl
dec
mov
xchg
cmp
inc
icebp
es
lret
cmpsl
movb
test
mov
lret
cmpl
in
push
cmp
rep
sub
aad
imul
roll
fwait
push
pop
mull
xor
mov
cli
jmp
jl
bound
lock
xchg
jle
mov
mov
lock
or
xor
jp
cli
imul
xor
and
cmp
pop
sbbb
xchg
lret
add
pop
out
mov
sarb
push
daa
mov
sbb
jo
xchg
or
cltd
jmp
subl
mov
je
sbb
inc
insl
or
push
addl
call
neg
les
fdivrs
add
out
subb
je
nop
ja,pt
jae
xchg
push
fidivs
incl
push
pop
addl
or
jl
adc
lods
les
cmpsl
int3
and
stos
and
aad
cld
and
and
pusha
ret
adc
add
dec
fstpl
push
xchg
push
push
xlat
or
and
and
shll
mov
inc
data16
jg
adc
pop
pushf
ret
push
insl
xor
js
adc
lock
sar
push
inc
mov
sbbb
or
shrb
in
lcall
ret
je
es
mov
sbb
movsb
js
decl
push
shlb
mov
pop
mov
dec
mov
add
jns
inc
je
sub
test
sub
cmpb
dec
sub
ljmp
rcl
daa
xor
pop
test
stos
pop
and
or
inc
dec
adc
movsl
repz
fildll
sarb
sbb
repz
or
inc
or
mov
xlat
or
decl
or
ss
jp
stos
sbb
das
add
in
out
adc
fstl
call
or
jne
mov
test
cmp
outsb
dec
cwtl
inc
or
or
add
and
dec
pop
iret
jbe
and
mov
cmp
push
dec
mov
sub
cmp
je
jmp
repz
jg
cltd
ljmp
incl
movsb
shr
mov
sbb
mov
or
mov
xchg
xor
sbb
fs
push
jno
jb
jmp
mov
add
inc
sahf
scas
adc
ljmp
pop
loopne
adc
push
sar
sar
pop
rorb
das
adc
mov
ss
ds
ficoms
or
aaa
cli
or
pushl
push
pop
mov
sahf
scas
lahf
jmp
push
pop
out
orl
lods
lods
ljmp
out
or
dec
sbb
push
lods
ret
pop
iret
dec
inc
out
je
add
dec
sub
icebp
or
incl
inc
xlat
fsubp
das
inc
bound
push
pop
cmpsb
mov
imul
arpl
push
xor
jmp
push
or
inc
ljmp
incl
or
mov
dec
xchg
mov
gs
nop
push
ret
mov
nop
push
push
add
xlat
pop
decl
pop
aam
and
mov
mov
mov
or
cmc
lods
push
xor
mov
and
pop
repnz
or
sahf
or
mov
ret
dec
lock
adc
and
icebp
decl
cmpsl
xchg
in
jle
xor
mov
imul
es
adc
or
clc
pop
call
and
sub
sub
call
mov
push
mov
or
dec
jne
and
and
pushl
pop
mov
mov
cwtl
adc
movsb
push
push
ret
movsl
add
inc
or
push
xor
lcall
xchg
mov
sahf
test
dec
lret
mov
or
es
call
test
xchg
mov
std
adc
ss
cmp
xchg
idiv
test
stos
dec
call
pop
loopne
jle
mov
mov
push
pop
pop
or
rolb
call
push
dec
pop
imul
push
popa
inc
lcall
or
ja
repnz
sti
dec
or
sub
pop
cmp
sti
stos
mov
cmp
dec
ret
push
jmp
cs
loope
or
addl
push
sti
cwtl
subb
decl
adc
and
fsubrs
xchg
inc
shl
or
cmp
add
or
mov
and
fcmovbe
or
add
lock
pop
or
inc
add
mov
iret
mov
decl
lods
push
or
test
add
dec
xchg
out
dec
hlt
or
paddq
sub
sar
jmp
scas
test
pushf
ss
sub
or
mov
ljmp
movswl
add
mov
and
ret
sub
adc
rcl
adc
popa
mov
rclb
ss
xchg
in
push
adc
push
mov
sbb
dec
test
dec
sbb
ret
aam
push
out
sbb
mov
dec
jns
dec
popa
cmp
ljmp
push
loopne
and
sbb
ljmp
and
popa
call
dec
push
rorl
xchg
push
push
insb
lds
in
and
popf
add
shll
negl
and
inc
call
mov
push
sub
ror
mov
mov
inc
rolb
jmp
dec
leave
les
or
out
or
mov
out
mov
inc
sbb
call
sbb
insb
add
sub
les
inc
mov
xchg
cmp
sub
loop
psllw
jmp
jl
dec
inc
fidivl
jg
sbb
jno
xor
test
fwait
mov
rcl
pop
adc
mov
stos
mov
or
push
out
test
and
test
dec
je
sbb
jns
adc
sub
inc
lcall
sub
jecxz
movd
and
jmp
fdivr
stc
lret
ljmp
and
add
jne
push
orb
jmp
ljmp
sbb
jae
push
int3
ljmp
popa
xchg
cwtl
dec
popf
cmp
outsl
and
inc
mov
jge
sbb
decl
xor
lea
jo
jp
push
hlt
push
inc
sbb
inc
popa
pop
pop
mov
cmp
in
test
das
rol
jmp
mov
int3
enter
mov
lcall
ret
ljmp
push
test
cli
adc
dec
sbb
pushf
lock
and
xchg
in
mov
jecxz
sbb
ret
mov
mov
push
adc
xor
jmp
sbb
adc
jl
insl
inc
ljmp
mov
xor
sub
bound
js
ss
aad
fcomip
stos
fwait
out
add
test
mov
mov
ss
add
test
pop
cmc
jmp
jge
jae
add
icebp
rcrb
pop
push
pop
sbb
adc
test
push
lods
aaa
mov
mov
pop
adc
mov
or
sahf
xchg
idiv
cld
test
in
je
push
cmpsb
or
call
mov
shl
popf
dec
leave
push
loopne
dec
jge
xorb
mov
call
jb
sbb
adc
mov
sbb
jge
sarb
pusha
test
or
lcall
xor
mov
push
mov
test
mov
mov
sbb
dec
shrl
loopne
sbb
fcomi
mov
outsl
push
je
mov
int3
or
and
mov
sbb
outsb
mov
jmp
push
lea
sbb
xchg
xchg
sbb
xor
ljmp
jmp
xchg
cmp
pop
cmp
mov
inc
aaa
adc
jmp
dec
mov
push
dec
xlat
mov
mov
clc
lret
std
loopne
pop
dec
bound
mov
lods
test
inc
in
xlat
jle
dec
enter
push
push
mov
inc
or
xlat
dec
aam
lock
pop
cmp
cmp
call
jae
jb
int
push
or
fwait
int3
data16
js
in
ljmp
inc
adc
mov
or
repz
sbb
xchg
mov
adcb
decl
pusha
xchg
mov
push
sub
adc
lea
pop
test
int
or
imul
jmp
jne
cmc
mov
jne
adc
mov
mov
mov
mov
push
push
mov
dec
mov
xorb
or
mov
sbb
add
sbb
pop
stc
jb
shlb
push
jmp
jecxz
int
ja
xor
fwait
sub
xlat
sbb
push
push
dec
outsl
adc
mov
decl
mov
nop
jo
adc
sahf
adc
ja
mov
xor
mov
mov
mov
stc
dec
bound
add
or
ljmp
adc
xchg
inc
jg
rolb
insb
nop
loope
add
cs
fcoms
decl
dec
push
cmp
repnz
loop
sub
push
mov
fiaddl
xchg
ljmp
out
push
das
arpl
jle
and
ds
insb
cmp
pop
aam
cld
sar
int
xor
or
push
and
lods
sub
imul
sbb
or
or
jg
cs
and
cmp
je
adc
and
adc
or
mov
push
lods
fldl
insb
or
xor
ljmp
push
mov
add
pop
push
sub
rcrl
pop
xchg
pop
mov
dec
pushl
gs
add
add
sbb
les
adc
rcll
mov
ljmp
lcall
xor
push
add
test
or
push
aad
mov
es
cld
adc
shl
sub
pop
icebp
fsubr
out
pushl
lret
popa
aad
vpsubw
adcb
mov
add
mov
jg
and
inc
add
loop
push
mov
nop
outsb
decl
sbb
pop
push
mov
cmc
push
add
stos
xchg
int3
sbb
rol
pop
inc
adc
sar
in
decl
sbb
ret
lods
aaa
lret
out
add
nop
mov
inc
mull
or
mov
pop
cld
sub
leave
adc
imul
inc
jmp
inc
js
nop
insl
sbb
decl
int3
mov
test
or
loope
inc
rolb
sar
pop
rorl
pop
add
add
in
aas
xor
cmp
fsts
std
cmp
cwtl
mov
add
std
mov
pop
cmp
jl
xchg
xlat
or
stos
int3
stos
pop
dec
cmp
loope
nop
mov
decl
lock
lock
jb
dec
rolb
lret
pusha
test
sub
je
xorb
in
ljmp
jns
dec
cmpl
inc
mov
cwtl
or
push
add
movb
ds
and
sti
push
adc
lods
cld
loop
rolb
sbb
push
jl
cli
pop
inc
sahf
jg
xor
mov
aam
pop
rcrl
dec
xchg
inc
adc
cmpl
sub
inc
and
sbb
cmp
xor
push
cli
pop
add
jae
ljmp
sbb
mov
and
xor
loopne
pushl
enter
call
cld
jns
addb
outsb
repnz
or
insl
add
rorb
or
imul
sbb
out
test
jle
je
inc
adc
aam
aaa
push
fnstcw
call
leave
pop
xchg
add
and
mov
mov
dec
loope
cmp
decl
sarl
movsl
das
imul
repz
movsl
pop
sarl
jns
and
sub
fbld
out
xorb
enter
ds
pop
cmpl
mov
or
mov
push
jp
jne
shl
fisubs
inc
mov
mov
ljmp
shll
shl
adc
xchg
in
call
sbb
xchg
lahf
mov
mov
xlat
add
cwtl
jns
ljmp
pop
sub
push
ret
cmp
fcoml
lods
pop
js
test
out
test
or
jg
cmpb
shrb
or
rcrw
dec
inc
mov
inc
rcll
sbb
xor
das
loop
mov
int3
push
jb
fwait
and
fisubrl
or
repnz
add
pusha
dec
sub
imul
adc
shl
adcl
mov
ret
add
lea
fisttpll
pop
inc
andb
aad
ljmp
jns
push
sbb
sbb
xor
adc
xchg
iret
or
inc
aas
dec
mov
mov
dec
fs
cmpsl
cmpl
gs
je
in
dec
into
out
es
or
mov
jno
cmp
pusha
daa
mov
xor
cmp
paddq
sbb
rcll
repz
pusha
and
loopne
dec
scas
dec
test
test
icebp
pop
clc
xchg
pusha
or
cmc
mov
push
or
push
or
iret
pop
add
mov
and
adc
int
mov
aas
lsl
xor
daa
pop
loopne
push
push
xor
and
ja
cld
mov
mov
lret
daa
pop
mov
and
push
scas
jl
jb
jb
das
xor
mov
xor
xchg
inc
and
jno
pop
cmp
andb
xor
fs
mov
dec
shll
mov
aas
sub
mov
xlat
inc
lret
and
lods
jg
or
pop
fs
or
ljmp
call
or
jmp
mov
fwait
cmp
cmc
or
xchg
je
mov
cwtl
dec
iret
mov
push
pop
mov
loope
or
inc
cld
int
cwtl
add
pop
add
cltd
ret
sub
or
call
or
dec
push
jmp
fsubl
movsb
mov
jb
decl
shl
test
stos
or
imul
testl
pand
cwtl
cmp
jle
sub
cmp
xor
and
and
idiv
test
sysenter
pop
idiv
jmp
jnp
xchg
nop
push
and
ljmp
loop
dec
sub
lock
push
sbb
or
mov
clc
mov
xchg
adc
vsubps
in
decl
rorl
mov
arpl
sub
movsb
jne
les
jmp
les
aad
or
xchg
cmp
loopne
les
mov
jmp
xchg
hlt
mov
sbb
pushf
pop
lahf
and
cmpsl
push
inc
mov
jmp
pop
pop
cwtl
adc
push
push
and
decl
jl
sbb
ljmp
mov
lods
sub
int
je
ljmp
inc
dec
out
shll
mov
xor
inc
or
ss
xor
aad
aam
je
cmp
fidivs
or
testl
mov
mov
pop
push
loopne
decl
and
sbb
adc
fisttps
xchg
shrb
mov
pushl
incl
mov
mov
stc
push
adc
mov
outsb
mov
or
inc
jmp
in
pop
ljmp
or
in
or
into
cmp
fcmovb
js
imul
dec
idivb
cmp
cwtl
jge
mov
adc
rcr
fwait
cmp
sbb
inc
test
dec
cmp
push
imul
out
xchg
push
mov
lods
or
mov
bound
jle
jae
mov
lods
or
inc
adc
ja
add
pop
negb
jmp
mov
lods
shll
lret
inc
das
lods
cwtl
push
xchg
fsubl
ret
cmp
lea
out
ud0
push
add
stos
mov
testb
lcall
sub
ficompl
mov
jl
sbb
incl
roll
insl
jb
or
jne
or
lahf
cmpsb
cltd
rolb
movl
cmp
mov
cmpb
or
cmpsl
popa
pop
ljmp
jne
xchg
test
ret
repnz
popf
mov
mov
repnz
das
sar
xchg
jne
adc
adc
shlb
push
pop
mov
and
cmpsb
or
dec
adc
stos
andb
pop
pop
insb
mov
decl
inc
test
sbbb
add
insl
lcall
xchg
into
mov
hlt
or
add
sub
adc
lret
pusha
sub
call
jg
sahf
lock
idiv
je
push
inc
aaa
and
ljmp
mov
mov
jno
jg
add
sbb
or
js
sti
insl
nop
adcl
dec
dec
xchg
lret
add
sbb
xchg
inc
push
loop
gs
insb
xor
lock
jb
shr
clc
add
cmp
bound
into
or
adc
stos
je
add
jns
lock
xchg
popa
je
out
loopne
sub
movsb
add
fdivl
insl
test
repnz
sar
dec
call
push
mov
shr
mov
into
pop
jne
pushf
mov
add
mov
cmp
pushl
push
cmp
aam
mov
mov
sub
aaa
cwtl
pop
or
sbb
movsl
decl
pop
out
js
adc
ljmp
aad
dec
jg
jbe
outsl
lods
mov
fists
leave
pop
adc
add
ret
dec
out
dec
dec
outsb
push
dec
adc
add
and
cs
or
jl
or
xor
jmp
fistpl
dec
mov
jmp
adc
hlt
jg
fwait
cld
dec
and
into
les
cmc
sbb
aaa
jmp
imul
movsl
testb
andnps
out
lods
sub
aam
push
icebp
push
int3
adc
sub
cmp
cmp
aad
sbb
imul
call
sub
inc
and
stos
in
xchg
xchg
mov
cmp
insb
clc
cmp
out
push
ljmp
mov
iret
and
lds
pop
inc
aam
or
mov
inc
adc
jmp
adc
clc
xchg
push
nop
xchg
sbb
mov
jl
cmpsb
fmuls
jg
cmp
add
add
xchg
and
repnz
cmp
ss
mov
push
add
jo
add
or
arpl
xchg
inc
add
xor
pushl
pop
aaa
jge
cmp
jne
jo
sub
push
js
sub
test
incl
popa
inc
ret
jo,pt
adc
lds
mov
stc
inc
fnsave
jne
sahf
fisubrl
negl
cmc
lock
sbb
xchg
cli
push
stos
dec
cmp
out
add
sbb
je
lea
dec
push
fisttps
mov
adc
ja
sarb
cld
out
inc
xchg
int3
sub
ljmp
or
adc
or
lret
aam
cld
lcall
loopne
cmc
neg
xchg
out
xchg
add
loop
dec
sti
stos
ljmp
mov
iret
lods
das
loop
and
or
in
sti
add
jmp
jae
and
pop
ret
hlt
fnstsw
mov
xor
hlt
rorl
sbb
icebp
inc
jmp
repnz
mov
fcomip
test
incl
in
mov
outsl
lock
in
daa
ljmp
inc
imul
push
clc
pop
mov
or
repnz
push
mov
and
popa
cltd
add
ljmp
notl
cmp
sbb
icebp
jne
inc
pop
xchg
fs
inc
std
or
add
in
in
mov
mov
lahf
push
out
in
cmc
dec
sbb
add
loop
pop
jo
fs
dec
cwtl
loopne
clc
dec
dec
pop
xchg
xor
inc
cwtl
inc
es
xchg
dec
dec
test
xchg
push
push
enter
push
xchg
add
cmp
ret
xchg
sahf
cmpsl
mov
adcb
imul
mov
lea
push
jle
sbbb
bound
std
div
mov
add
pusha
mov
or
test
push
mov
nop
jge
xor
mov
push
push
lret
cmp
scas
cli
inc
cmpsl
pop
dec
jae
clc
ret
fstp
mov
sub
cli
jno
mov
or
daa
test
sarb
mov
xor
mov
popf
lock
and
in
xchg
out
push
add
pop
sbb
cli
inc
cli
and
add
movsb
jo
or
in
movb
jge
dec
sub
iret
jp
sbb
adc
inc
mov
lahf
sub
pop
fidivrl
and
xor
lods
decl
sahf
jmp
and
hlt
and
je
xor
dec
inc
mov
fisubrs
sub
rclb
out
push
sbb
cmp
xchg
lock
stos
inc
xor
adc
repnz
data16
rcrl
inc
incl
cld
outsl
xorl
mov
inc
test
push
mov
adc
cmp
in
add
in
xor
xchg
inc
push
jns
mov
call
inc
shlb
inc
fnstsw
aam
int3
xchg
ljmp
mov
rolb
orl
test
xor
and
stos
inc
mov
mov
lret
push
push
pop
clc
ljmp
movsb
cli
mov
sarb
ljmp
xor
cmp
or
mov
adc
cmp
ljmp
or
adc
notb
fadds
in
push
in
or
jge
test
push
inc
lock
push
inc
inc
or
dec
mov
movsb
jne
ljmp
fnsetpm(287
loopne
cmp
pusha
adc
fistps
jge
les
xor
fisubrs
dec
add
shrl
or
in
inc
jmp
decl
lcall
sub
push
lods
outsb
xor
adc
mov
adc
ljmp
sbb
shl
jmp
les
fisttpl
into
pop
mov
inc
rcll
cmp
push
fdivr
decl
adc
neg
test
mov
sub
call
pop
je
loopne
call
mov
aaa
jge
dec
outsb
add
mov
pop
add
and
das
mov
mov
imul
ljmp
dec
in
repnz
movsl
out
dec
icebp
xchg
pop
fs
sbb
in
ds
xchg
out
outsb
decl
fld
jne
fisubl
adc
shr
enter
cmp
negl
cmp
jns
sbb
adc
clc
add
sub
inc
js
xor
negb
mov
xor
shlb
push
jmp
add
outsl
adc
fistl
aas
clc
pop
push
jg
mov
add
mov
lahf
mov
mov
ja
inc
mov
mov
ret
jmp
lock
data16
jge
cmpb
mov
bound
je
add
fmull
mov
bnd
adc
jg
incl
add
pop
or
fcoms
add
push
ret
inc
inc
or
aaa
cltd
mov
jb
insb
mov
or
push
loop
push
mov
repz
jae
call
loop
mov
push
and
adcb
jbe
aam
push
push
or
inc
xchg
jl
incl
push
adcb
rclb
mov
sti
dec
jge
jns
pushl
je
or
mov
cmp
pop
pop
and
xchg
push
jle
pushl
lahf
cmc
push
or
jne
xor
dec
adc
dec
ds
popa
test
lcall
outsb
insl
jo
ret
push
fisttpl
xchg
xchg
adc
mov
lods
lods
cmpsb
jae
test
push
test
fmulp
lret
inc
and
or
jbe
repnz
lret
fwait
pusha
inc
mov
pop
and
sub
and
ja
clc
lcall
adc
pop
cli
ret
inc
xor
sub
jg
incl
push
fwait
or
inc
pushl
insb
dec
test
pop
jmp
inc
inc
loope
les
jne
or
decl
jno
add
jb
into
mov
lahf
inc
lock
lea
lahf
or
inc
popf
sbbb
xchg
ret
jmp
cs
ja
cmc
dec
cwtl
add
sbb
jne
icebp
jmp
add
dec
mov
enter
cli
add
es
lods
mov
push
xchg
repnz
or
decl
inc
and
xor
lods
mov
ja
je
jnp
aas
push
testl
testb
add
sub
add
sbb
mov
and
decl
loopne
pop
mov
or
sar
push
stmxcsr
push
testb
rorb
adc
in
adc
data16
je
comiss
add
mov
xchg
jnp
push
adc
mov
push
pop
jg
es
or
filds
mov
lods
and
decl
jg
push
lock
outsl
lock
nop
pop
dec
pop
inc
arpl
rolb
or
and
mov
daa
enter
incl
fwait
cmp
push
add
pop
sub
fwait
je
push
push
xor
fldt
dec
lea
mov
xchg
out
popf
or
loope
aaa
adc
lret
and
cmp
dec
and
je
xchg
inc
stos
dec
dec
ret
cmpsl
adc
inc
inc
adcl
js
gs
cmc
sbb
sub
sti
pushl
popa
sbb
xchg
add
pop
out
pop
mov
or
data16
pop
pop
mov
push
decl
pop
push
sbb
mov
mov
inc
jge
adc
decl
mov
add
push
sub
imul
andl
push
xor
xchg
inc
cmp
dec
and
add
sbb
dec
cwtl
cmpsb
pushl
jae
test
dec
sar
rolb
push
cmp
jmp
repnz
fildll
adc
lds
cmp
dec
adc
and
in
inc
pop
mov
pop
call
mov
dec
add
incl
inc
pushf
mov
add
sub
rolb
pop
orl
scas
mov
outsb
jb
fnstsw
and
fcoms
lcall
test
jl
push
nop
dec
in
sub
mov
test
sub
mov
iret
or
popf
or
clc
leave
sbb
cmc
cli
clc
pop
add
cld
or
js
or
add
ja
or
xchg
push
std
sub
mov
imul
hlt
aam
and
pushf
push
add
aam
shll
decl
cmp
pop
inc
scas
xchg
cmp
jle
push
dec
or
adc
je
ljmp
dec
in
mov
inc
test
add
scas
je
pushf
jmp
loopne
jo
sar
call
mov
cmp
xchg
and
jbe
sub
enter
das
push
adc
jg
cwtl
dec
inc
cmpsl
loopne
pop
arpl
lods
in
pusha
imul
mov
xor
rcrb
data16
mov
mov
pushl
ret
jle
nop
movsl
mov
mov
test
sbb
xchg
push
jb
shlb
mov
or
addb
mov
hlt
test
loope
decl
roll
dec
js
int
pop
test
pop
or
xor
sbb
pop
mov
cmpsb
outsl
and
lods
nop
inc
fsubrs
and
in
shl
pusha
push
jle
enter
pop
mov
and
insl
inc
mov
push
pop
pop
ficoml
pop
push
ror
push
mov
add
decl
xchg
pop
xor
add
and
inc
jle
mov
inc
jo
les
inc
ja
jg
xchg
ljmp
sbb
add
and
xchg
rorb
xlat
xchg
push
push
dec
pushl
add
or
jo
adc
xchg
mov
scas
add
add
adcb
clc
rcll
pop
lcall
in
iret
mov
add
mov
testl
inc
pop
enter
xchg
sbb
and
ret
mov
adc
mov
mov
xchg
test
lea
adc
mov
test
mov
lret
lock
ret
std
and
sbb
jle
push
dec
jne
push
sarb
pushl
fldt
mov
pop
push
push
loop
cmp
xchg
mov
and
call
sbb
dec
scas
jmp
or
push
bound
in
mov
sbb
test
lcall
mov
jp
test
adc
mov
push
lock
mov
roll
inc
js
test
call
mov
jbe
mov
sub
enter
xor
cli
mov
js
inc
lea
jnp
rcrb
dec
sbb
outsl
jae
aas
jae
jo
push
outsl
aam
lds
or
fwait
or
push
pop
dec
idivb
movsb
and
ljmp
cmc
jg
mov
sub
cmp
js
cmp
cmp
decl
or
sbb
cmpl
xor
mov
or
mov
out
out
test
decl
push
xor
movsb
fwait
and
movsb
fs
lods
insl
xchg
in
or
sbb
and
dec
xchg
nop
xor
ljmp
leave
int
cmp
fwait
adc
jl,pt
dec
nop
mov
sbb
clc
mov
sub
fimuls
icebp
ret
mov
dec
ljmp
mov
sub
lret
mov
pushf
push
push
sbb
cmp
sub
repnz
push
ja
or
rcrb
cmp
mov
pop
mov
fwait
push
test
add
outsl
or
sbb
inc
js
pop
xchg
sbb
movsl
sar
jmp
sbb
test
xchg
fiaddl
add
inc
hlt
ds
mov
or
sbb
and
leave
les
xchg
sub
add
sub
loopne
add
adc
fcomip
push
in
fisttpl
add
jo
cltd
fidivl
pop
adc
imul
xor
xchg
cmp
call
lret
clc
push
mov
jnp
push
cwtl
xor
lret
stc
lret
rolb
xchg
popf
adc
scas
pushf
mov
lock
jle
adcl
dec
ret
or
xor
and
ljmp
cmc
or
add
cmp
sahf
shl
and
adc
push
add
imul
aad
xchg
fadds
push
jle
sahf
sub
dec
jp
jmp
inc
xor
cwtl
mov
sar
adc
dec
pop
dec
pop
mov
shll
lcall
xor
test
lret
js
push
mov
ljmp
hlt
insl
sahf
pusha
test
or
sub
adc
xor
push
scas
cli
decl
and
fs
int
les
nop
mov
mov
pop
popa
xor
pop
cmc
jmp
sub
jnp
adc
or
lahf
add
in
jae
out
push
enter
jg
xchg
pop
inc
jns
stos
or
call
les
cmova
lahf
aad
decl
sub
test
je
test
cs
test
or
icebp
and
fwait
adc
shlb
lcall
and
arpl
xchg
pusha
into
adc
pop
xor
or
aad
pop
or
mov
call
mov
adc
inc
lock
data16
lea
hlt
cld
cmp
sbb
mov
call
aam
cmc
je
xor
sbb
xchg
dec
lcall
jg
jno
sub
aam
push
roll
mov
imul
mov
sahf
mov
decl
call
cmp
int3
fstpl
mov
add
xchg
and
cmc
adc
adc
cli
jbe
jo
jg
test
sbb
lret
iret
mov
lahf
jp
sarl
jl
test
mov
adc
mov
mov
nop
movsb
movsl
xor
lock
add
mov
mov
fsubl
push
jl
out
les
pop
decl
pop
jb
movsb
nop
cld
push
rclb
ss
cmp
fidivs
xchg
dec
add
xchg
loop
add
cmp
adc
stos
call
jmp
pop
rcr
push
sti
outsb
jmp
cld
andb
xchg
adc
sbb
imul
cli
sbb
or
push
addb
idiv
mov
jno
ljmp
out
or
cmc
push
push
mov
cltd
cmp
data16
shlb
mov
fadds
stc
cmc
lcall
push
in
mov
mov
dec
jg
pop
sub
xchg
pop
jno
lods
lea
subl
pop
test
fbld
call
lock
inc
and
mov
dec
popa
and
sbb
sar
mov
fdivrl
clc
sbb
into
in
insb
dec
add
or
cmp
jp
pop
jg
paddsw
fsub
adc
adc
sub
lcall
rorb
add
call
sub
cwtl
cmp
das
repnz
push
pop
add
xchg
ds
lret
mov
jne
mov
sub
pop
lock
mov
mov
std
inc
push
push
pop
push
je
push
or
in
repnz
mov
jmp
push
pop
mov
andl
out
pop
pop
pop
popa
movl
lcall
mov
dec
mov
jns
cltd
sub
jne
stc
fdivrs
cmp
inc
add
cs
xlat
add
insb
cmp
jne
jl
insb
sbb
dec
incl
push
dec
adc
push
clc
xchg
jge
sbb
sbb
decl
ljmp
push
jmp
add
ror
shr
pop
add
fiadds
lcall
nop
sbb
xchg
push
mov
adc
lcall
stc
mov
dec
into
xchg
les
sub
xchg
xor
outsl
pop
mov
mov
call
adcl
sub
jl
int
xchg
and
xorb
lahf
mov
add
jle
sbb
pop
out
pop
jmp
mov
push
popa
decb
sub
in
incl
pop
and
mov
pop
lea
cmovbe
pushl
mov
aad
dec
mov
adcb
std
stos
pop
mov
les
inc
or
sub
jecxz
xchg
mov
xlat
fwait
out
adc
sub
cmp
pop
and
test
and
mov
loopne
mov
push
inc
push
xor
shrb
cli
sub
lahf
inc
mov
sub
inc
xchg
or
add
lcall
shr
xor
adcb
incl
sbb
push
jnp
lahf
mov
jbe
sbb
sbb
and
dec
push
mov
dec
loop
jbe
mov
pop
add
int3
adc
call
mov
leave
ss
dec
push
add
icebp
cmp
scas
leave
rsqrtps
sbb
xor
mov
stos
xchg
add
in
les
push
mov
xchg
loope
push
repz
sbb
adc
into
scas
xchg
jns
sub
inc
ret
push
mov
inc
adc
push
push
bndldx
jnp
lcall
ja
adc
sbbb
mov
xor
imul
jg
filds
push
add
jecxz
mov
fs
pop
mov
push
dec
ds
fstl
mov
insl
fisttpll
and
lods
call
or
leave
inc
movsl
xor
jmp
inc
xor
into
dec
ja
cmpsl
cmp
insb
push
test
std
and
loopne
jle
lcall
aas
cmpsl
lock
or
je
nop
fistl
sahf
fcoml
ljmp
jne
jg
loop
fucomp
or
pop
push
pusha
pop
mov
dec
ja
jmp
sbb
call
adc
lret
xor
repz
lods
pusha
push
jmp
sub
decl
outsl
add
xorb
jmp
mov
jbe
iret
add
sub
add
js
mov
lds
pushl
lds
mov
jb
push
sbb
inc
or
inc
mov
jbe
clc
inc
push
ret
mov
clc
sub
pushf
sahf
lret
call
lcall
dec
lock
and
out
ss
lcall
add
sub
movsl
push
loopne
insl
icebp
bound
sbb
pop
and
test
mov
lea
icebp
adc
shlb
xchg
and
leave
loop
add
shlb
call
sub
insl
orl
xchg
sahf
xchg
stos
or
xor
mov
fdivrs
sti
incl
jl
or
sub
sbb
push
push
cmp
push
ljmp
lds
cmp
test
jbe
cs
js
insb
jae
shll
sbb
decl
out
adc
mov
add
cs
and
pop
out
out
push
mov
hlt
pop
adc
dec
aam
xor
test
or
sbb
jg
pop
or
repz
inc
adc
lock
int3
jg
lods
mov
dec
loop
lret
call
dec
fimull
and
out
je
xlat
sbb
mov
inc
enter
mov
sub
mov
cmp
jg
mov
imul
inc
and
push
jb
add
je
xor
mov
out
filds
and
xchg
push
inc
mov
mov
or
out
jnp
and
call
outsb
cmc
js
mov
movsb
lahf
loope
lea
mov
cmc
mov
mov
xchg
icebp
pop
in
jp
scas
aaa
jne
int
in
out
add
mov
pop
adc
mov
dec
adc
and
cmp
jmp
adc
push
fildl
inc
lods
xor
push
push
mov
jg
dec
aam
adc
jne
aas
fiaddl
test
pop
or
ret
aas
decl
inc
push
mov
dec
xor
pop
imul
push
jne
cmp
out
jmp
or
xchg
daa
test
pop
push
inc
call
and
inc
sti
sbb
cmp
pushl
jne
hlt
movsb
nop
xchg
mov
scas
xchg
movb
nop
xor
insb
mov
inc
iret
hlt
xor
lcall
pop
jne
jge
rcll
add
outsb
in
mov
rclb
and
pushl
xchg
mov
cltd
xchg
fdivl
call
sar
mov
int3
aaa
fmuls
decb
int
pop
or
jbe
ret
and
ja
cltd
add
pop
dec
loop
inc
or
mov
push
jne
data16
ljmp
sbb
or
dec
xlat
cmp
fimuls
shrl
jp
iret
jge
stos
ljmp
dec
lock
xlat
add
mov
add
movsb
test
movsb
in
test
ljmp
fcoml
nop
adc
push
data16
mov
xchg
or
call
or
addl
cltd
fcomip
xchg
insb
pop
cld
mov
and
incl
loope
or
push
pop
pop
pop
mov
sbbb
cmp
jge
add
nop
xor
adc
push
xchg
faddp
and
aam
sbb
repz
dec
push
std
fwait
in
fdiv
and
dec
mov
push
fsubs
pop
jmp
pop
loopne
pusha
mov
lcall
movsb
negl
push
cmp
mov
mov
movsl
push
daa
test
mov
pop
push
xchg
mov
lods
mov
aam
mov
ljmp
cs
adc
mov
out
pop
or
mov
cs
inc
repz
sbb
push
pop
daa
push
cmpsl
js
or
ljmp
jns
sub
jmp
adc
outsl
and
lret
sbb
data16
aad
or
sub
lcall
ja
iret
aam
jo
inc
scas
xor
mov
incl
fmull
dec
sub
push
out
icebp
pop
sub
pop
mov
push
mov
jbe
aam
pushl
dec
mov
cmc
fiadds
ljmp
jp
or
test
cmp
gs
mov
cmp
sahf
push
repz
add
add
or
call
mov
mov
inc
and
jecxz
xchg
mov
int3
cmp
jo
add
decl
in
push
pop
mov
push
mov
aam
shrb
mov
jmp
xchg
jo
test
xchg
xor
push
loopne
and
inc
inc
hlt
xor
xor
dec
cli
das
in
and
je
std
cmp
and
jp
inc
sub
rol
ljmp
test
sarl
mov
loopne
jnp
fnstcw
pop
mov
mov
mov
xchg
xor
stos
inc
adc
mov
mov
sub
jmp
aaa
mov
aas
movsb
jmp
in
adc
pop
lods
test
push
std
mov
frstor
sarl
push
inc
fsubrl
fs
hlt
push
es
fadd
call
jmp
mov
push
popa
inc
lea
jle
push
mov
dec
adc
rorb
decl
adc
cmpsl
leave
and
add
pop
sti
or
xchg
pop
loopne
lods
aaa
or
pushl
pop
imul
ret
adcl
fcoms
push
or
shl
fs
or
lret
nop
ret
push
dec
mov
dec
lcall
or
mov
enter
sub
shlb
lock
bound
clc
jg
nop
push
stc
jp
das
mov
mov
lret
mov
ljmp
jle
nop
sbb
xor
inc
push
nop
je
int3
pop
dec
js
push
repz
xor
mov
push
push
fs
dec
add
xor
xor
pop
add
or
push
in
imul
push
jmp
dec
mov
sbb
pusha
xlat
daa
push
sub
sti
adc
dec
lods
stos
ss
jg
fistpl
nop
xchg
mov
jns
cmpsb
cld
xor
loope
fidivl
cmp
add
decl
insl
loopne
add
ss
push
dec
scas
enter
decl
push
dec
mov
std
outsl
outsb
pop
or
dec
sub
xchg
cmp
pop
mov
push
add
les
scas
xchg
out
sub
incl
les
repz
xchg
cli
imul
int
pop
pushl
cmp
jge
mov
insb
dec
push
sub
adc
movsb
xchg
leave
jg
outsl
shlb
aas
dec
xchg
adc
pop
and
les
addb
push
jge,pt
mov
dec
add
ljmp
jnp
xchg
das
insb
cmp
adc
nop
adc
push
call
push
cs
dec
jmp
scas
pop
cmpsl
or
mov
aam
cli
or
inc
outsb
ret
sbb
cmp
mov
cmp
insl
ljmp
mov
inc
out
mov
and
sub
pusha
add
push
ljmp
push
popf
push
adc
scas
jbe
mov
mov
sbb
pusha
mov
shlb
repz
mov
hlt
adc
add
inc
mov
or
sub
stos
or
xor
sub
and
jb
xlat
pusha
push
cwtl
mov
decl
outsb
idivl
test
inc
cmpsb
adc
sub
leave
outsb
inc
scas
inc
lcall
xchg
fsubs
cmp
shlb
inc
dec
roll
push
cltd
ljmp
aam
dec
inc
ret
xor
call
rolb
sub
push
sub
hlt
inc
push
stos
and
shr
addb
xchg
ds
leave
push
mov
sub
ljmp
mov
push
cld
xchg
fistps
push
fs
les
add
pop
popf
and
outsl
add
mov
decl
leave
test
pop
sbb
and
xor
or
jno
enter
inc
aaa
pop
outsl
adc
add
enter
jb
dec
decl
in
clc
xor
inc
push
and
add
dec
sbb
std
push
popf
stos
cmp
or
xchg
sti
sbb
mov
and
inc
test
fcompl
jle
pcmpgtb
mov
shlb
aam
or
inc
outsb
test
sbb
dec
pusha
adc
inc
cld
stos
call
testb
enter
sbb
jne
xlat
dec
sti
or
push
scas
sbb
pushf
mov
in
xor
mov
fisubl
mov
adc
icebp
dec
insb
test
cmp
sub
stos
arpl
subl
jmp
cltd
push
imul
aaa
loope
ss
dec
add
fisttps
mov
sahf
cmp
enter
cli
icebp
xor
mulb
inc
cli
push
outsb
pop
sbb
cmp
ret
sub
add
rolb
sar
push
test
or
cld
aas
ljmp
pop
ret
scas
inc
mov
cmp
loope
test
imul
mov
pop
add
filds
pop
subl
mov
test
loopne
mov
push
hlt
fdivp
cmc
and
mov
add
lds
cmpsl
les
mov
push
fisubl
mov
sbb
pop
sbb
inc
scas
push
sub
arpl
movsl
jbe
enter
test
inc
push
data16
scas
fsub
lret
xor
add
cmp
xchg
in
sub
lock
in
sbb
sbb
inc
hlt
dec
fwait
loopne
insw
mov
cmp
incl
rclb
xchg
cld
mov
rorb
das
sbb
stos
pushf
cmp
in
jg
cmp
or
fs
mov
sbb
xchg
jno
cmc
in
cmp
data16
ljmp
mov
ds
and
pop
in
outsb
jb
enter
jo
aad
dec
test
loopne
out
mov
pop
or
clc
xor
fucom
jne
mov
jmp
pushl
lods
mov
outsb
div
sub
pusha
mov
or
out
sub
dec
and
or
enter
in
out
cmp
loopne
out
sbb
xor
inc
fs
inc
gs
push
clc
mov
push
mov
and
loopne
pop
cwtl
inc
or
jg
cmpl
and
pop
ficompl
enter
mov
mov
sbb
orl
loope
sub
or
and
mov
cmc
data16
enter
xchg
out
adc
dec
jb
sbb
add
sbb
cmpsb
lahf
jb
insb
ds
cmp
in
fwait
xchg
xchg
std
add
sub
dec
popa
out
test
dec
inc
ficoms
inc
mov
in
mov
popa
inc
repnz
subb
cmpsl
cmp
cwtl
jl
pushf
lds
mov
leave
and
stc
movsb
pusha
fiaddl
jl
sub
push
leave
sbb
fwait
sub
cmp
scas
jmp
in
mov
shrb
cli
adc
pop
repz
inc
in
pop
xor
fdivr
pop
cld
lcall
xchg
cmc
xchg
add
push
cmp
inc
mov
add
push
fsubl
sti
data16
and
in
and
add
pop
adc
mov
jg
dec
cmp
call
es
and
cmpsl
mov
jno
aaa
into
adc
xor
incb
jmp
lods
inc
sbb
push
aas
test
mov
push
and
jg
lcall
jg
movsb
cmp
dec
stc
pop
shrb
decl
dec
lea
pop
dec
shrb
call
lods
ds
lods
inc
pop
in
cwtl
xchg
add
pop
sub
call
push
xchg
nop
push
cmp
adc
pop
pusha
dec
push
pusha
adc
xchg
cltd
fdivrl
push
orb
ja
js
insb
mov
outsb
or
mov
jg
out
mov
int
push
pop
dec
or
adc
js
jae
pushl
adc
add
lret
mov
sar
jg
mov
sbb
mov
add
push
clc
bound
mov
sbb
lods
mov
ret
dec
jmp
and
add
dec
xchg
lahf
or
jmp
mov
lcall
fisttps
pop
jb
inc
mov
lea
mov
add
mov
fildll
mov
dec
mov
int3
push
jb
es
xor
shlb
inc
xchg
push
cmc
ljmp
sub
shlb
jp
push
cmp
pushf
jge
cs
outsb
ds
dec
and
push
dec
loope
xchg
ret
in
add
pusha
decl
jg
shr
add
pop
or
popa
mov
leave
rorb
clc
mov
push
fbstp
add
loope
shlb
pusha
std
jle
dec
pushf
push
aad
dec
cmp
inc
xor
pop
adc
cmpsb
js
push
and
mov
sub
pushl
pop
sub
adc
mov
sbb
das
xchg
pop
sbb
mov
mov
ja
cld
adc
fldl
in
enter
enter
das
mov
out
popf
fisttpll
cli
sbb
xchg
pop
es
stos
int
or
pop
mov
call
ret
int3
aaa
rcll
sbbb
sub
push
jne
adc
mov
sub
sub
lcall
mov
hlt
pop
pop
stos
pop
pusha
pop
xchg
sub
scas
ret
push
add
insl
lea
pushf
pop
dec
cmp
jmp
shll
xchg
sbb
pushf
dec
lcall
mov
xchg
pushf
mov
lods
mov
enter
bound
in
call
mov
push
pusha
sbb
pop
dec
fistpll
shrb
dec
dec
in
stos
insb
lahf
les
xchg
leave
loopne
mov
enter
inc
fimull
cld
fists
cld
pop
xorb
ud0
mov
aas
mov
scas
mov
pop
pushl
pop
sub
loopne
inc
int
sub
ret
loopne
mov
fwait
mov
add
out
in
ret
in
in
sbb
and
movsl
cmc
push
aam
push
pop
mov
inc
cmpsb
push
adc
dec
lea
cmp
add
mov
xchg
in
pop
xor
out
sbb
cmp
mov
mov
mov
adc
adc
ljmp
mov
fisubl
xchg
pop
xlat
mov
and
test
mov
mov
adc
aam
mov
outsl
mov
lret
jb
xchg
out
xchg
inc
pop
xchg
mov
enter
sbb
push
repnz
xor
stos
cmp
add
roll
pop
scas
fwait
gs
incl
inc
mov
scas
jl
fdivrp
incl
aas
fwait
addl
cmp
aas
add
lds
mov
test
sub
and
jmp
addb
cld
sarl
sub
sub
push
push
jno
repz
ret
lret
sub
fdivrs
ds
mov
ret
filds
adc
stc
stos
rolb
push
jge
add
in
aam
les
ret
adc
daa
add
in
fldcw
mov
cmp
loopne
repz
mov
sbb
add
decl
sbb
fsubr
pop
es
aam
xlat
xchg
xor
mov
mov
movsb
push
call
adc
jno
hlt
adc
pop
fs
lods
mov
pop
leave
pop
aaa
ret
pop
std
xor
repnz
cltd
sbb
pop
mov
and
ret
hlt
sbb
adc
pop
outsl
adc
sbb
wbinvd
dec
push
pop
idiv
sub
iret
xchg
inc
pop
les
sub
adc
call
add
leave
lods
fistpl
cmp
jg
inc
cld
mov
inc
stos
insb
xchg
lcall
decl
cmpsl
sub
push
mov
inc
pop
in
sbb
out
add
sbb
pop
into
push
adcl
dec
mov
and
clc
enter
or
push
lahf
sub
dec
fwait
subb
je
pop
adc
and
sub
nop
int3
lods
cltd
fdivrp
jmp
subl
insl
scas
adc
inc
xchg
pop
enter
pop
mov
sbb
sub
pop
fs
sbb
aam
push
int3
and
call
sbb
mov
mov
adc
lcall
arpl
adc
fsubrl
push
sbb
and
ret
jmp
mov
lock
inc
jg
adcb
dec
lds
aam
adc
add
js
cmp
xor
mov
lods
lcall
lret
add
ffreep
or
jmp
lcall
nop
lock
in
and
es
hlt
xchg
cwtl
push
push
dec
dec
pop
add
popa
lret
push
pop
jge
jmp
and
jl
aad
stos
arpl
lret
and
adcl
and
inc
leave
int
leave
lds
ljmp
in
add
cmp
lret
rcll
adc
xchg
sub
jno
mov
arpl
sar
pop
std
incl
clc
outsb
int
pop
mov
xchg
cmp
jo
pop
lcall
cltd
fdivr
decl
pushf
mov
adc
cmp
add
cmc
inc
add
fs
stos
mov
decl
pop
js
dec
jl
movsb
shll
ret
or
xchg
std
jbe
mov
xor
inc
push
pop
push
lods
iret
pop
and
in
test
xchg
in
pop
rclb
ljmp
popf
repnz
sub
or
adc
jbe
shrb
mov
call
cmpsb
shrb
sarl
pop
dec
and
clc
xor
mov
jmp
nop
and
ljmp
gs
jmp
push
mov
or
lea
jmp
insl
mov
fucompp
mov
cmp
fists
push
xchg
jp
fstpt
mov
jmp
cmp
add
dec
jbe
iret
andb
movsb
push
sub
cmp
mov
cmp
nop
or
and
xchg
mov
mov
and
mov
es
std
lcall
fisttpl
in
dec
mov
jns,pn
sub
les
inc
popa
jmp
push
sbb
ss
incl
mov
out
or
divb
lea
adc
ljmp
iret
pop
push
mov
jl
xor
popa
aam
mov
sub
std
dec
stc
xor
fcomip
mov
mov
mov
js
mov
dec
xchg
ljmp
loope
insb
nop
ror
movl
fdivr
inc
out
push
cld
or
add
push
or
add
call
int3
sti
dec
lea
xor
clc
in
mov
push
adc
add
inc
pop
jg
in
and
pop
sub
pushf
jmp
inc
icebp
das
inc
test
mov
popa
test
incl
sahf
jns
add
or
dec
lcall
subl
adcb
insb
mov
jne
inc
insl
cmp
mov
pop
mov
sbb
push
cmp
or
jne
push
pushf
sub
push
push
pushl
mov
rolb
in
sti
subb
daa
nop
out
push
pop
xlat
js
jg
movsb
push
out
xor
push
and
pop
xchg
push
inc
dec
push
cld
push
std
inc
mov
rcrl
mov
dec
fsubrs
in
add
std
lods
insl
pusha
and
dec
scas
push
int3
xlat
sub
jno
push
aas
fstps
add
mov
jb
inc
or
sbb
insl
or
nop
lahf
jne
jb
lock
fbld
inc
jae
dec
pushf
inc
pop
push
mov
pop
mov
notl
cmp
stc
imul
imul
divl
sub
jne
fcmovnu
fistpll
add
ret
fmull
push
or
cld
adc
adc
pushl
inc
jns
push
fmull
mov
push
fsubl
loopne
fcoml
push
sub
rcpps
in
lret
lds
inc
daa
outsl
sbb
xlat
xor
in
mov
nop
dec
pop
sbb
test
movsb
movsl
fs
pop
xchg
mov
test
out
fidivrs
ret
sub
test
decb
sub
mov
cltd
mov
rorb
sub
nop
jl
add
xchg
xchg
push
decl
mov
inc
cmpb
outsl
cmp
mov
adc
in
imul
test
decl
mov
cltd
sbb
mov
lea
outsl
push
repnz
call
adc
fs
imul
cmc
xlat
xchg
decl
jo
je
shll
inc
aaa
cli
dec
pop
dec
js
pop
pop
shrb
das
or
loope
scas
mov
popa
fnstcw
and
das
mov
scas
adc
sub
dec
mov
lods
mov
imul
xor
ljmp
loope
lcall
jns
xor
comiss
aaa
push
pextrw
sub
lcall
mov
ljmp
jp
jecxz
pushl
in
mov
outsl
jle
jo
rclb
lods
cwtl
cmp
pop
add
cmc
lahf
jecxz
mov
mov
shrl
or
ljmp
stos
nop
jmp
lahf
cmpb
or
into
xor
inc
mov
pop
pop
les
fwait
push
ja
call
subb
aas
add
imul
jg
xor
in
mov
lret
test
nop
cmp
lods
out
pop
adc
ss
loop
incl
pop
out
lahf
in
mov
aam
cwtl
pop
mov
pop
pop
adc
mov
pop
enter
mov
shrb
jecxz
mov
adc
mov
dec
inc
xchg
mov
mov
fistl
cmp
jp
mov
mov
test
pop
stos
and
add
aas
popa
pusha
xchg
decl
sti
and
iret
sbb
int3
int3
enter
bound
enter
ds
loope
aad
stos
sbbl
lds
decl
cwtl
add
sbb
push
inc
inc
add
aas
ret
push
cmp
outsb
popf
inc
out
dec
mov
or
dec
in
addb
loopne
xor
and
rorl
rclb
dec
push
jo
ljmp
push
xor
dec
rcl
rorb
rorl
lock
pop
lods
push
xor
cmp
fbld
dec
repnz
push
pop
insb
push
xor
pop
add
sub
jmp
mov
std
jg
cmp
scas
push
fwait
jg
es
adc
mov
aaa
das
fxch
pusha
fcmovnb
bound
mov
inc
daa
clc
lods
call
push
add
push
in
lods
or
mov
mov
js
xchg
cld
decl
mov
xor
repnz
fst
cmp
mov
sbb
popa
adc
add
icebp
shlb
cltd
mov
loop
mov
testb
pop
in
sbbb
imul
lea
ljmp
das
pushf
fwait
xchg
ss
aas
out
push
adc
fistl
and
scas
jle
or
movsb
sub
push
lods
test
jmp
dec
incl
sbb
lea
incb
mov
lea
fwait
mov
add
popa
jecxz
bound
das
iret
call
push
sub
out
xchg
aas
xor
leave
or
ficoml
idiv
dec
sbb
or
xchg
xlat
sbb
or
push
clc
sbb
out
pop
lcall
mov
pop
das
dec
dec
es
adc
orb
inc
or
jmp
add
movsb
pop
cli
pop
sbb
mov
sbb
xor
scas
xor
jo
pop
lcall
hlt
cmpsl
cmp
adc
in
sbb
outsl
push
stos
movsb
insb
add
adcb
int
rdtsc
xor
sub
fucomip
iret
cmpsl
scas
stos
pop
mov
pop
ret
les
mov
sti
dec
popf
mov
pop
mov
dec
xor
loop
pop
repz
rolb
movsl
and
sub
pop
test
dec
mov
loope
sbb
adc
mov
inc
ret
rep
and
fistpll
in
call
cltd
add
mov
dec
fsubrs
inc
mov
mov
ret
jge
iret
cwtl
mov
insb
pop
adc
sub
lahf
iret
test
add
dec
cld
jns
sub
jnp
lods
movsl
cmp
cltd
inc
aad
jg
or
adc
or
push
pop
test
rcrl
cmp
mov
jbe
pushw
decl
outsb
pop
mov
jl
jo
lea
cmp
cmp
cli
lcall
adc
scas
pusha
cwtl
jl
and
mov
inc
and
lcall
pop
push
or
out
mov
xor
div
pusha
pop
mov
pushl
lods
lods
sub
jbe
sub
xor
decl
lock
in
inc
sbb
sbb
or
fwait
scas
xor
decl
xchg
or
popa
dec
test
dec
das
push
adc
ljmp
ljmp
stc
or
popf
ret
sub
nop
add
jo
test
inc
scas
loope
es
mov
pop
push
cmp
dec
shrl
dec
divb
lret
lret
xor
lock
xchg
and
cmp
inc
popf
in
decl
push
lods
stos
mov
xor
aam
sub
dec
data16
insl
scas
pop
jge
les
std
sub
subl
cmp
outsb
xchg
inc
lcall
pop
loope
in
jmp
insl
push
mov
pop
sbb
fdecstp
mov
imul
ljmp
mov
add
sbb
aas
jmp
sub
mov
add
xchg
xor
cmp
and
test
cmp
out
or
mov
and
xor
push
nop
push
fisubs
push
pop
test
int3
xchg
mov
incl
int
and
sbb
jecxz
pop
dec
or
add
pusha
mov
fiadds
call
xchg
je
movsl
incl
mov
jo
cmc
call
pop
inc
ficompl
mov
outsl
clc
jmp
push
inc
and
stc
inc
jb
mov
in
in
lods
shrb
add
shrl
mov
repnz
fists
mov
cmp
addr16
jo
jecxz
inc
cmpsl
or
push
mov
repz
mov
sub
decl
dec
sbb
fs
fcoms
in
jg
decl
enter
inc
push
push
pusha
cmp
adc
dec
repz
sbb
fwait
popa
and
adc
shrl
ljmp
xor
divl
out
mov
sahf
fimuls
xadd
enter
popf
cli
pop
jp
ffreep
jmp
xchg
arpl
cmp
sbb
and
popa
stos
cmp
incl
and
mov
cmovg
add
imul
outsl
push
int
in
mov
imul
xor
movsb
jmp
pop
call
xlat
add
mov
adc
or
cmpsb
in
je
mov
cmpsl
sbb
push
mov
test
cld
lret
and
and
inc
lea
or
mov
jg
test
aas
subl
inc
jo
push
fcomip
ljmp
cli
adc
call
ljmp
xor
jle
sbb
call
in
dec
rclb
mov
add
mov
push
fs
decl
or
sub
hlt
or
popf
test
jno
mov
mov
test
faddl
mov
inc
pop
and
cli
mov
call
or
adc
shlb
cld
stos
jg
pop
loopne
roll
mov
ret
xchg
xchg
test
mov
call
add
loope
or
add
jne
pop
clc
or
lock
xchg
inc
cmpsb
outsl
or
ffreep
or
adc
inc
add
scas
or
pop
dec
push
sbb
add
dec
adc
stos
or
push
xor
dec
xchg
lcall
and
mov
imulb
ret
inc
adc
mov
loopne
fldt
clc
sahf
or
js
or
jg
adc
nop
and
mov
or
test
push
xchg
sub
mov
rcll
pop
hlt
mov
das
les
push
or
xchg
lock
fsts
inc
dec
inc
or
inc
mov
popa
dec
filds
call
cmp
mov
xor
scas
and
test
jmp
push
clc
fs
ret
cmp
and
adc
jmp
xchg
add
orl
stos
psrad
sbb
adc
out
add
sbbb
dec
clc
push
call
xor
repz
mov
out
ss
inc
fmull
dec
sub
adc
add
shr
and
xor
xor
dec
add
jg
call
and
repnz
or
or
popa
xchg
test
xlat
fdivrl
shll
cmc
shll
pop
mov
inc
scas
pop
mov
mov
jg
jg
fcmovnu
sti
cmp
cmpsl
ret
popf
aas
mov
adc
repnz
ljmp
or
mov
sub
xchg
xchg
jo
fstl
pop
xchg
pop
cwtl
fwait
sub
add
cs
jo
int
sbb
or
cmp
int3
aaa
ror
nop
jb
lcall
decb
fsqrt
push
mov
lods
xchg
nop
les
cmp
add
sub
and
les
orb
mov
clc
fsubl
jns
sub
js
loope
cmp
and
sbbl
lahf
mov
add
dec
call
sbb
hlt
mov
sub
add
inc
fistps
cmp
push
or
dec
movsl
pop
or
push
or
or
pusha
mov
ss
ret
mov
mov
or
lcall
inc
mov
dec
or
sbb
push
jnp
dec
out
movsb
mov
ljmp
sbb
inc
nop
dec
jle
cmp
dec
push
sbb
and
lcall
daa
xor
mov
fcomip
cmp
add
xchg
and
mov
cld
xchg
xchg
pop
shlb
lcall
pushl
mov
lea
pushf
jg
lcall
xchg
addb
in
lock
in
push
in
lock
or
sbb
fildl
adc
in
int
push
inc
mov
or
mov
shll
lcall
pop
stos
adc
int
ljmp
sbb
push
dec
sbb
cmp
loopne
mov
daa
icebp
mov
adc
fdivr
insl
incl
stos
lret
add
push
xchg
xorb
shlb
jge
dec
jb
fldl2t
adc
pushl
xor
mov
or
ret
xlat
repz
sbb
ret
ja
xchg
ljmp
dec
xor
mov
sub
fucomip
sti
mov
hlt
insl
mov
bound
decl
call
mov
pop
adc
mov
nop
lods
icebp
dec
dec
test
mov
shll
iret
in
incl
shlb
out
sub
imul
sbb
xor
repz
jg
push
cli
inc
add
xor
sbb
nop
mov
lods
cmp
cmp
mov
mov
pusha
inc
gs
cmp
insb
and
aaa
push
test
sbb
xchg
or
ljmp
pushl
pop
aam
ret
sbb
ljmp
mov
je
shll
scas
sti
rolb
push
sahf
or
inc
sbb
cmc
dec
stos
jge
fninit
mov
xchg
loope
lock
sbb
mov
push
and
ret
aas
sbb
xor
subb
shr
ret
cmp
mov
mov
adc
and
lods
sti
add
inc
mov
jbe
jae
std
xchg
sbb
incl
inc
daa
inc
shlb
scas
pop
cwtl
and
mov
xor
push
insl
in
mov
jg
inc
out
sub
adc
out
lcall
mov
push
scas
pusha
push
add
or
outsb
and
cmp
or
repnz
cli
mov
xchg
iret
adc
xor
mov
imul
jmp
stos
fists
test
dec
fdiv
mov
inc
fcmovne
stc
data16
cmc
dec
leave
mov
mov
mov
test
cmpsl
mov
lahf
dec
pushf
xor
mov
dec
push
jg
inc
pop
addb
mov
std
decl
data16
das
inc
jns
adc
cmp
adc
in
add
cmpb
jmp
nop
cmp
test
std
imul
jg
ja
cmp
pop
mov
and
push
sahf
mov
out
loopne
outsb
or
call
jnp
icebp
xchg
sub
xlat
aam
xchg
dec
mov
add
cltd
pop
pop
insl
pop
andl
decl
lcall
pop
sbb
mov
xchg
push
or
mov
dec
outsb
adc
lcall
mov
outsb
outsl
fs
das
incl
imul
data16
xor
cli
xor
fists
lcall
push
sbb
or
xor
outsl
dec
and
add
jbe
lcall
xchg
fs
out
mov
das
ret
imul
pushl
mov
push
fwait
sti
aas
add
xor
xor
out
in
cmp
arpl
mov
ja
sahf
push
cmp
pop
push
push
adc
mov
mov
jbe
divb
push
push
mul
mov
mov
fimull
pop
cmpsb
fs
testb
dec
inc
jnp
insl
sbb
decl
outsb
sahf
gs
xor
sub
lock
fbstp
jae
ljmp
cmp
cmc
inc
jo
cmp
pop
cmp
mov
jge
arpl
push
sbb
ja
fidivrs
je
jg
cmp
push
incl
outsb
xchg
dec
imul
jbe
out
push
mov
cmpsl
lahf
push
and
pop
ret
std
mov
lcall
inc
sbb
jge
aad
imul
inc
cld
inc
inc
or
and
adcb
int
fsubrs
and
mov
adcl
fistl
fcoml
xor
jne
inc
js,pt
mov
jo
mov
pop
jmp
cmpsb
sarb
cmp
and
int
sbb
in
jmp
jl
pop
lock
xchg
outsl
lea
push
mov
adc
xorl
ds
or
cmp
sbb
xchg
ljmp
or
popa
cwtl
jb
or
add
mov
dec
call
in
xchg
pop
add
or
std
subl
addr16
addb
test
jnp
cmp
inc
mov
mov
push
xchg
outsl
or
jne
dec
dec
mov
inc
movl
inc
cwtl
std
pop
aaa
push
pop
pushf
cld
mov
xor
sub
clc
add
mov
mov
pop
cld
jmp
imul
cwtl
sbb
lods
addr16
and
mov
inc
lods
shlb
out
pop
mov
cld
ljmp
out
ds
jne
push
add
mov
inc
mov
xor
push
cmp
ljmp
xchg
mov
fstpl
out
cmp
inc
push
inc
and
ja
ja,pn
dec
push
pop
icebp
lcall
pop
cmp
jns
and
jo
dec
insb
push
stc
pop
call
ss
decl
test
jae
pop
add
mov
pop
mov
inc
jne
adc
sbb
xor
sub
gs
dec
inc
shlb
push
shrl
mov
pop
jns
jge
cs
in
insb
sub
jl
sub
inc
mov
xor
xchg
mov
add
add
mov
mov
stc
sahf
das
call
das
mov
insb
jo
mov
popa
ret
loop
outsb
xchg
add
push
jns
adc
popf
adc
bound
lret
insl
mov
js
jge
sub
mov
xchg
lret
insb
hlt
imul
js
das
cmc
pop
push
adc
mov
mulb
sbb
incl
in
cmp
bound
fsubp
out
xchg
lods
push
cld
jns
mov
or
add
xor
clc
scas
lcall
pop
xor
xor
pop
sub
insb
xchg
sbb
call
enter
outsl
sahf
filds
movl
mov
push
push
pusha
mov
mov
stos
mov
xor
pushf
dec
js
push
cmp
jne
adc
jg
shll
das
js
in
xor
jg
jmp
xor
jmp
or
scas
pushf
es
fisttps
xchg
repnz
mov
bound
ss
pop
push
nop
imul
mov
xchg
xor
inc
or
in
incl
in
mov
or
sbb
out
inc
aas
jbe
pop
andb
dec
in
cmp
dec
das
sbb
rorb
mov
lods
shll
lods
mov
scas
repnz
mov
and
decl
push
pop
dec
mov
shr
inc
push
cmp
and
xor
aad
aas
add
push
push
add
and
xchg
and
inc
fsubrs
jnp
pop
inc
mov
sub
out
jle
sub
and
and
sub
in
cmp
xor
cmp
mull
jg
fisttps
jmp
cmp
ljmp
mov
icebp
jmp
jg
jp
imul
int3
dec
stos
fisttpl
push
jo
mov
mov
jns
jle
add
xor
pop
loopne
into
sub
push
dec
xchg
inc
mov
and
ss
jp
sbb
jg
decl
push
adc
mov
jle
push
dec
mov
dec
sbb
arpl
sbb
xor
cmp
mov
movhps
inc
into
cmp
pushl
movsb
mov
xor
pop
xchg
mov
in
jo
popf
jb
lock
pop
les
leave
seta
je
aam
insl
pop
dec
mov
push
movsb
jns
pop
int3
mov
das
je
incl
pop
jp
push
stc
sub
arpl
inc
and
cmp
inc
lahf
lock
jnp
lret
pushl
ja
popa
pop
mov
inc
in
int3
pop
push
add
mov
push
aas
inc
jge
sbb
pop
sbb
out
xchg
imul
jg
shrb
jecxz
xor
ljmp
inc
or
subb
and
adc
incl
sbb
xor
ror
test
popf
out
push
fimull
jb
std
ljmp
jo
sbb
gs
das
insl
inc
xor
decl
sub
inc
inc
inc
add
dec
dec
dec
sub
hlt
pushl
mov
lea
stos
repnz
dec
pop
xchg
in
hlt
pop
stos
pop
out
insl
pop
and
mov
add
js
jp
xor
lcall
lret
add
mov
div
js
cs
ljmp
js
dec
clc
dec
jmp
mov
pop
dec
and
jecxz
jecxz
insb
rol
fs
outsl
pop
fwait
sub
std
int
xor
inc
dec
lret
ds
push
out
pop
in
or
lret
call
jl
sahf
pushf
jno
jno
lret
lcall
nop
add
leave
in
dec
add
sub
mov
repz
jo
mov
jbe
xlat
bound
popa
mulb
mov
or
shlb
push
dec
mov
xor
xor
cmc
xor
out
clc
lret
xor
mov
call
lods
outsb
or
daa
dec
push
mov
push
outsl
fs
jno
scas
jnp
and
adc
jmp
cs
scas
movsl
xlat
mov
sub
and
push
aas
mov
ljmp
inc
aas
movsb
jo
jns
outsl
in
and
fistpll
pop
ljmp
or
enter
aaa
test
test
xor
xor
clc
aad
das
cli
lcall
dec
mov
add
int
lea
push
clc
jo
or
lods
jae
add
aad
adc
sub
aad
sub
pop
dec
sahf
cli
adc
xor
lret
xlat
pop
mov
sub
inc
inc
insl
push
lock
dec
jl
je
mov
mov
out
adc
jmp
pop
bound
cmp
push
jae
scas
cli
jmp
push
push
xor
imul
and
inc
nop
gs
mov
lock
lods
leave
or
bound
push
jb
clc
push
jecxz
mov
sbb
jo
out
pop
mov
pop
cmp
imul
imul
cmp
or
mov
jo
std
push
clc
or
xor
loop
mov
out
cli
pusha
incb
jns
cmp
and
dec
mov
pop
pusha
cmp
inc
repnz
ljmp
dec
jnp
cmp
inc
pop
xor
inc
xor
cmp
inc
fisttpll
into
push
sub
push
dec
pop
jge
dec
lcall
and
addb
inc
inc
push
hlt
dec
xor
pop
bound
or
jae
js
rclb
pop
add
jb
push
das
nop
and
push
and
lcall
ljmp
dec
push
jge
jp
sub
mov
jmp
cmp
repz
pop
adc
xchg
inc
dec
ja
mov
pusha
sub
decl
dec
fstps
push
mov
push
testl
in
int
cs
dec
push
repz
loope
in
add
out
inc
inc
inc
inc
rolb
add
and
push
call
cmp
or
repnz
or
pop
jmp
push
sbb
stos
mov
insl
std
jg
dec
dec
out
sbb
inc
data16
ss
aaa
xor
sahf
in
mov
xchg
pop
jbe
jg
stos
dec
dec
pop
adc
jg
mov
pop
add
mov
aas
dec
jge
dec
lahf
add
xchg
inc
sti
aaa
mov
pop
das
mov
out
int
pop
push
jg
call
shl
inc
inc
insl
add
pusha
outsb
pop
inc
sub
test
xchg
or
incl
lods
js
dec
dec
dec
pop
jno
sahf
fcomps
xor
push
enter
mov
inc
jb
mov
adc
or
je
dec
push
and
pop
popa
mov
xor
xchg
inc
xchg
cmp
testl
and
shll
and
cld
push
xchg
jnp
cs
mov
xlat
pop
dec
aas
mov
test
aaa
scas
aaa
popf
dec
pusha
dec
xor
add
dec
push
adc
mov
xor
push
inc
movsb
dec
clc
push
lods
mov
fcompl
lods
dec
push
xchg
cmp
or
call
mov
and
xlat
in
cmc
stos
sbb
adc
imul
cmp
call
inc
mov
cmp
inc
aam
pop
sbb
mov
push
and
pushf
or
sahf
leave
lret
add
out
xor
sub
pop
sub
dec
push
push
add
int3
bound
push
pop
insl
pushl
and
and
idiv
mov
in
or
dec
dec
jl
push
cmp
mov
aas
or
ss
rorl
in
sbb
mov
inc
cwtl
data16
rclb
adc
and
call
test
jecxz
adc
and
rolb
repz
ss
sbb
clc
lcall
cmp
cs
jge
loope
loope
xchg
movsb
mov
sbb
push
outsl
pusha
dec
iret
xchg
rcrb
mov
pop
fiaddl
mov
dec
popa
in
call
mov
das
cmpsb
gs
jnp
jbe
xchg
dec
inc
dec
stos
lea
sbb
shr
ja
ljmp
fnstcw
lds
rorb
clc
inc
sub
inc
jno
dec
pop
dec
incl
das
inc
push
insb
dec
movsl
or
pop
xchg
lods
bound
popl
lods
daa
push
xchg
xlat
xor
inc
push
nop
sbb
push
shrb
or
dec
loop
mov
push
jg
ljmp
dec
out
push
loop
xchg
dec
cmp
movl
decl
addr16
jbe
cmp
adc
fmul
data16
and
in
cmp
js
push
loop
clc
decl
adc
or
push
loopne
out
fisttps
cs
add
jg
ja
idiv
mov
imul
jbe
add
add
outsl
data16
ljmp
test
imul
bound
arpl
and
test
dec
je
sub
sbb
aam
adc
xor
jl
lock
sbb
mov
inc
aaa
sahf
test
loope
jb
addr16
sbb
arpl
pop
pusha
or
jae
add
insb
push
and
jg
aad
and
outsl
pop
lock
loopne
mov
and
fs
and
dec
shl
in
jg
out
adc
sbb
imul
push
inc
lods
lcall
aam
push
and
fwait
mov
jl
cmpsb
mov
and
mov
inc
mov
mov
lds
notb
push
ljmp
push
dec
jne
sbb
nop
arpl
fs
in
dec
adc
mov
mov
xchg
dec
xor
ss
inc
lcall
shrb
aas
cld
das
adc
cmpsb
cmpsb
icebp
in
push
loopnew
call
fisubs
test
rolb
ss
into
or
sub
adc
fwait
mov
dec
pop
insb
test
test
push
rorb
into
notb
call
inc
cmp
repz
mov
js
xchg
outsl
adc
or
bound
xor
or
aam
cmp
mov
ljmp
sub
sbb
jo
nop
mov
repz
aad
mov
gs
push
mov
mov
push
shl
jle
in
and
xor
xor
mov
dec
popa
mov
and
mov
mov
jge
inc
push
iret
dec
adc
adc
sub
dec
dec
jg
cmp
out
adc
jae
sub
dec
mov
mov
jl
dec
loopne
jle
mov
call
mov
mov
inc
pusha
inc
inc
inc
jo
cs
push
sbb
loopne
lock
and
xor
decl
lock
jns
adc
fisubrl
xor
sub
ficoml
push
fucomip
push
sub
dec
or
mov
shlb
adc
push
push
inc
std
inc
mov
dec
add
imul
outsl
fs
fisubl
lds
push
es
add
decb
cmpsl
mov
xchg
push
insb
fadd
add
cld
ljmp
mov
cmp
sub
stc
scas
jo
adc
enter
js
jp
inc
xchg
call
push
push
or
push
les
ljmp
ljmp
push
test
pop
mov
add
dec
xchg
addb
sahf
divb
mov
fs
sub
fcomip
dec
ljmp
jg
jp
test
mov
xchg
jb
inc
push
jmp
jae
xor
cwtl
xlat
scas
stos
push
mov
cmp
xor
das
sub
std
decl
bound
clc
test
push
cmpxchg
jl
insl
ljmp
mov
clc
push
sub
popf
imul
cmp
leave
div
xor
roll
dec
jmp
scas
mov
mov
cmp
test
sbb
fcom
pop
fnsave
add
out
push
das
or
fsubrs
pop
movsl
data16
arpl
sahf
pop
pop
lock
cld
ljmp
outsb
cmp
xchg
xor
xchg
cmpsl
rcrb
js
and
xor
incl
xor
xor
jne
syscall
fsubl
cmp
pop
pop
rcl
or
mov
push
jae
aam
xor
xchg
cmc
and
add
add
cmp
lods
pop
rcrl
xor
jo
cmp
pop
test
das
push
sbb
mov
lock
lds
rol
into
xchg
add
ljmp
add
sub
push
xor
popa
fdiv
mov
aaa
pop
ss
mov
adc
xor
lahf
les
adcl
jp
add
push
xchg
aas
jae
sbb
negb
jmp
lcall
inc
xchg
repnz
insl
mov
dec
sbb
jns
femms
cmp
in
call
lods
jo
dec
gs
arpl
adc
repz
sub
in
xchg
pop
in
sub
out
ljmp
add
inc
mov
lahf
enter
sub
and
subl
and
outsb
aaa
cs
jmp
icebp
jnp
lcall
int3
and
adc
addr16
mov
ljmp
ffree
popa
testb
pop
jnp
xor
mov
in
dec
daa
icebp
push
mov
incl
loope
ret
fistps
jae
mov
jnp
jne
aaa
adc
in
roll
fbld
out
jno
cmp
pop
and
jl
or
dec
mov
push
cmp
push
jmp
and
xor
mov
int3
add
fildll
push
xor
and
out
adc
rol
lds
imul
xor
jbe
mov
push
mov
cmc
dec
pop
lods
js
cld
cmp
je
xchg
lock
jl
call
xor
mov
cmp
dec
push
js
sti
inc
push
push
aaa
push
call
add
loope
cmp
sbb
or
mov
daa
push
outsl
cmpsb
movb
incl
int3
xchg
xor
xchg
xchg
xor
mov
cld
out
pop
fildl
ljmp
data16
out
scas
test
mov
inc
pusha
loope
pushl
sub
add
push
jb
cmp
sbb
and
popa
jbe
addr16
out
jg
shl
inc
inc
popa
fwait
mov
inc
outsl
mov
jg
fstpt
mov
outsl
xlat
aam
jb
movsb
pop
fidivrl
std
rolb
cmp
incl
push
inc
pop
sub
lea
pop
or
xchg
mov
fs
push
push
dec
outsb
mov
ljmp
das
add
sbb
int
lahf
jl
mov
mov
or
imul
dec
jle
daa
popa
out
jae
pop
dec
sbb
inc
outsl
aam
pop
adc
nop
mov
sub
test
jecxz
ja
push
inc
test
pop
sub
incl
inc
jo
insl
add
iret
add
in
aas
push
icebp
test
pop
out
movsb
fldl
cmp
ljmp
enter
dec
stos
sbb
cs
lcall
add
xchg
add
cmp
pop
outsl
push
inc
and
or
pop
push
inc
mov
lret
dec
push
adc
cmpsl
mov
xor
inc
inc
xchg
adc
ljmp
adc
loopne
jp
dec
adc
mov
jae
pop
out
xor
lcall
popa
dec
lock
dec
ret
jle
dec
andb
sub
hlt
ja
lods
xchg
jg
xchg
stos
jmp
fimull
dec
inc
push
adc
outsl
xchg
jbe
icebp
mov
jle
xchg
adc
loop
xor
orl
rcll
jae
neg
jae
clc
jl
dec
inc
adc
inc
push
or
push
push
push
fisubrl
cmp
lods
mov
xor
arpl
ja
cmp
arpl
movsb
fadds
ljmp
mov
pop
push
addr16
fcomps
outsb
arpl
xchg
fcoms
mov
push
add
push
dec
push
data16
xorb
outsl
sub
ljmp
dec
or
inc
shlb
pop
clc
dec
jae
nop
mov
adc
movsb
stos
or
dec
inc
sub
incl
mov
add
sub
pop
xchg
jb
jns
lret
pop
xor
push
and
cmc
sub
in
cli
decl
in
shlb
sub
jg
pop
cmpsb
xor
add
ljmp
movhlps
jo
test
xchg
test
andb
inc
mov
insb
out
decl
incl
fnstcw
push
add
add
sbb
loop
inc
fstl
fldl
outsb
das
sbb
ror
and
dec
and
and
decl
fs
inc
sbb
mov
jecxz
add
mov
pop
push
push
and
push
push
clc
mov
je
insb
filds
stos
test
std
notb
push
jns
and
or
mov
je
sbb
or
les
pop
mov
int
loope,pn
ja
aam
dec
and
sbb
lcall
lret
sub
call
mov
mov
scas
pop
push
or
mov
mov
in
pop
cltd
fcompl
adc
sahf
and
mov
push
js
idivl
push
popa
fs
ret
insb
fsts
mov
movsl
mov
mov
testb
push
testl
imul
aas
add
lea
fsubl
gs
outsb
mov
das
cmpsl
daa
imul
mov
push
jae
sbb
mov
xchg
mov
inc
out
data16
pushl
cld
lds
gs
sub
pop
lea
imul
xchg
cltd
pop
pop
sahf
das
or
mov
jmp
add
in
out
and
jg
lods
mov
jne
xchg
movsb
bound
stos
sbb
dec
cmp
xchg
in
adc
cmp
out
mov
dec
sub
or
pop
sub
push
cli
arpl
int
push
or
pop
adc
xlat
or
mov
mov
fcoms
outsl
aas
das
sub
mov
inc
push
mov
cld
insl
sub
cmpsl
add
dec
push
push
je
imul
add
adc
das
jle
or
fcmovne
pop
mov
xchg
inc
inc
jbe
sub
add
or
fwait
sar
push
insl
scas
gs
inc
cmp
adc
add
pop
popa
dec
ljmp
jge
add
fdivl
aad
imul
jo
loope
jne
jno
mov
jg
pop
aam
js
add
and
pop
jne
add
xchg
jg
neg
test
push
inc
pop
pop
xor
add
xlat
in
cmp
fidivrl
aas
mov
ljmp
mov
jmp
fisttpl
imul
loop
sub
daa
rorb
sar
or
nop
bound
inc
adc
icebp
jmp
fists
jnp
sub
stos
mov
jmp
add
daa
add
ret
and
sub
xchg
xor
cmp
adc
mov
ss
scas
push
mov
xchg
pusha
loopne
pop
popl
jg
aad
ljmp
add
arpl
push
xor
das
mov
or
dec
pop
jno
aad
enter
and
out
adc
xlat
pop
sbb
fcmovb
push
push
or
cmpsl
stos
push
push
sub
scas
test
lds
push
ljmp
push
cwtl
push
test
cmp
add
test
inc
incl
cld
xlat
pop
ss
adc
mov
mov
adc
shlb
lock
in
push
pusha
repz
out
dec
rcrb
push
incl
repz
jns
push
lret
pop
sbb
jle
out
iret
inc
iret
cmp
xchg
adc
adc
inc
repz
sbb
std
dec
lock
xchg
iret
push
adc
adc
xor
pop
sub
or
adc
inc
call
cld
repz
or
fiadds
push
jl
fmuls
sbb
xor
jg
sti
mov
fnstcw
mov
clc
add
sub
adc
sahf
les
in
and
add
adc
inc
push
jb
and
or
inc
jp
sahf
mov
sahf
aam
subb
push
mov
jle
dec
hlt
add
push
add
cld
int
mov
and
fiadds
or
xchg
or
push
arpl
or
mov
jnp
push
mov
push
mov
cld
or
repz
jno
jno
ror
lcall
mov
xchg
pushf
cmp
pop
sbb
imul
sub
fucomip
jmp
mov
mov
shll
daa
loopne
add
jne
iret
sub
mov
inc
add
int
and
in
jl
insl
sub
idiv
lea
cmp
push
adc
sahf
cmc
in
jae
ss
and
xorl
in
pop
cs
sub
ret
imul
cmpb
dec
in
or
push
fstpt
in
into
out
addr16
scas
pop
push
push
jns
inc
decl
sti
out
ljmp
aas
or
push
mov
mov
dec
decb
out
sti
repz
in
dec
or
icebp
leave
cmp
movsl
aaa
outsl
test
fnstcw
lds
in
aad
cmc
sub
fistps
inc
dec
in
popf
mov
dec
jno
jno
repz
jecxz
inc
push
shll
fdiv
lret
in
jmp
mov
repz
mov
jnp
and
cmpsl
in
out
cmpb
jg
hlt
test
lahf
lods
in
subl
jle
mov
push
jl
std
jle
pop
inc
lock
sbb
adc
xchg
mov
sbb
out
outsb
inc
ds
lcall
sbb
xchg
adc
lock
xchg
enter
jo
add
pop
sub
rep
add
sub
in
incl
sbbl
imul
xchg
cmpsb
shlb
xor
ljmp
das
xchg
subb
mov
das
sub
mov
dec
cmp
sub
push
mov
dec
mov
add
bound
xor
test
repnz
int3
inc
js
je
and
das
cli
jp
dec
out
sub
sbb
xchg
subb
out
arpl
popa
jb
gs
in
cs
mov
and
jecxz
pop
into
cmp
fsubr
ret
mov
cmp
into
ret
cld
dec
ret
or
mov
insl
scas
jae
inc
mov
mov
outsl
fistps
pop
dec
and
insl
xor
les
jns
bound
jae
push
sbb
sub
fcoms
loop
lret
mov
or
adc
fwait
pushf
aad
xor
fisttpl
sub
imul
ja
and
ljmp
popa
repnz
movsl
rcrb
std
cmp
mov
out
mov
jecxz
push
dec
or
add
pop
xor
jmp
pop
and
fstl
mov
mov
fcmovbe
cli
fidivrs
ljmp
add
stos
push
cmpsb
shrb
pop
in
inc
cs
mov
mull
and
out
out
clc
mov
clc
push
in
cmp
lcall
push
test
cmp
xorb
sbb
adc
adc
sub
jmp
and
jo
xor
cmp
faddl
xor
xchg
lcall
cmp
jl
add
push
movlps
lret
or
mov
call
shlb
loopne
test
jp
pop
push
pop
push
subb
xor
add
fistpll
add
inc
add
adc
fimull
adc
mov
pop
or
decl
inc
pop
adc
lret
stos
out
xchg
shrl
movsl
push
xor
test
add
ss
jb
xchg
out
sub
fcomip
push
add
sahf
push
jns
dec
sbb
push
movsl
pop
ja
adc
sbb
mov
or
hlt
push
xor
jb
fs
int
push
movsb
cld
ljmp
jmp
rclb
mov
sub
mov
insl
ljmp
repnz
mov
dec
inc
mov
jge
ficompl
jmp
fnstsw
adc
sub
mov
shl
adc
jp
out
in
jnp
mov
add
sbb
pop
bswap
cmc
or
sub
subb
adc
pusha
aad
add
shl
add
ljmp
add
std
mov
mov
movsl
cli
sbb
xor
ret
leave
mov
incl
decl
jne
iret
or
pop
cmp
aas
fsts
addb
sub
ss
cltd
lods
xchg
iret
lcall
lret
or
or
and
ds
jl
cli
inc
dec
push
out
xchg
movsl
pop
sub
fdivl
jno
xchg
mov
and
cwtl
jmp
aad
mov
mov
adc
out
clc
jmp
insl
lret
mov
js
adc
mov
cwtl
pop
repz
mov
les
fs
hlt
pop
in
lret
arpl
hlt
add
imul
mov
sbb
in
xchg
repz
add
fdivr
decl
cmova
fnstenv
adc
int
pop
jl
mov
bound
scas
lcall
clc
int
jl
sahf
gs
sti
pop
xor
pop
into
pop
cmp
mov
xor
orb
std
jmp
fadd
les
sti
hlt
sarl
fdivl
mov
aas
push
mov
mov
mov
add
jo
mov
decl
jl
fisttpll
add
daa
adc
jle
stos
das
sar
and
leave
and
negl
or
data16
mov
lea
insl
cld
mov
xlat
push
loop
mov
sbb
jg
cld
pop
lods
insb
mov
in
inc
sub
ljmp
or
mov
psrld
ljmp
fistl
adcl
jae
pop
arpl
stos
dec
test
fs
ds
insl
cmp
popf
push
in
ljmp
mov
pop
jge
mov
lock
shlb
add
inc
push
imul
xorb
sub
out
jbe
ljmp
jmp
sar
pop
jp
gs
pop
frstor
int
lods
stc
out
mov
fildl
mov
aad
mov
call
jle
shll
push
repnz
outsb
push
adc
mov
aas
dec
movsb
mov
fisubrl
ljmp
or
scas
mul
decl
push
pusha
jp
inc
ret
iret
pusha
fists
addr16
out
mov
jns
imul
jmp
sbb
outsl
jo
loop
add
push
or
das
je
push
mov
ljmp
mov
enter
cmpsl
insl
xlat
ret
ljmp
incl
pusha
mov
ficomps
cli
or
es
arpl
pushf
mov
xchg
inc
insl
add
ss
sahf
test
jb
inc
cs
sub
dec
mov
cld
clc
loop
sub
or
mov
xchg
or
out
fdivrl
xchg
ljmp
and
roll
clc
mov
push
aas
push
or
pop
es
notb
outsl
adc
fildll
out
mov
jae
enter
or
jge
outsl
mov
adc
pop
fistpll
out
lock
push
js
aas
or
push
addl
mov
cmp
mov
mov
mov
ja
ds
pop
adc
or
inc
push
cmp
aaa
dec
stos
call
outsb
test
ljmp
xor
mov
lret
lahf
decl
mov
loop
add
xlat
int
push
or
mov
pushf
jp
data16
dec
mov
sbb
popa
mov
cltd
inc
mov
stos
add
daa
cld
fistps
ljmp
clc
push
xor
sub
sub
sbb
loop
hlt
ja
xchg
pushl
sbb
enter
inc
mov
out
cli
stc
or
jle
or
mov
pop
jle
dec
ljmp
sahf
iret
sbb
adc
adc
dec
adc
sub
shll
or
popa
in
call
sti
cmpsb
out
aaa
in
sub
add
dec
test
cmp
aas
test
push
insb
insb
insl
fistpll
adc
sahf
fistpl
nop
and
daa
jecxz
stos
mov
repz
ljmp
mov
xor
in
sub
and
call
gs
fidivrl
in
imull
cwtl
xor
xchg
sub
imul
mov
jo
fwait
imul
out
ljmp
and
or
sahf
insl
cmp
repz
inc
pop
pop
mov
push
loop
mov
imul
incl
pushl
ret
xchg
into
mov
outsb
out
lahf
pop
mov
fisubrs
push
cmp
mov
mov
sbb
jae
ficomps
dec
dec
dec
std
decl
lret
ja
xchg
push
adc
push
lea
and
cli
cmp
dec
inc
out
and
xchg
lea
or
xlat
mov
cli
outsb
ljmp
add
das
out
mov
or
add
push
cwtl
xlat
fisubrs
xchg
ficoms
mov
loope
es
les
mov
dec
and
dec
int3
clc
outsl
jbe
test
pop
pop
addr16
push
lods
mov
or
and
adc
cmp
mov
mov
or
push
ss
dec
mov
fcomip
mov
pusha
enter
loope
lods
aaa
outsb
and
out
lds
popa
fcoml
lahf
push
mov
jg
decl
stos
and
leave
int
push
shrb
inc
jns
push
idivb
das
mov
and
ljmp
sbb
repnz
jg
push
jo
push
mov
fistpll
push
lret
pusha
cmpsb
mov
mov
xchg
rcl
cmp
ss
dec
pop
jg
xchg
lcall
cmpsl
test
cwtl
xor
or
mov
pop
lret
jl
decl
dec
pop
out
pop
cs
hlt
inc
int
stc
insl
mov
adc
add
inc
ljmp
insb
roll
ss
sub
movsl
test
test
mov
nop
xor
mov
ja
fldcw
sub
or
mov
mov
cmpsb
incl
adc
dec
or
xor
mov
push
and
or
hlt
lcall
mov
jmp
dec
adc
sbb
jne
pushf
sub
lret
hlt
sub
mov
lods
pop
jo
sbb
sub
pushw
lds
std
arpl
and
dec
inc
dec
in
mov
adc
test
xor
mov
fwait
or
stc
insl
fdivrp
dec
int3
movsb
jnp
inc
call
cmp
mov
ds
lahf
xchg
test
icebp
inc
pop
and
inc
sub
jae
pop
lea
pop
push
push
pushl
imul
inc
jp
mov
mov
lods
out
int3
cmp
sub
int3
insb
dec
xlat
xor
fs
or
mov
test
and
ljmp
cmp
les
add
push
push
sbb
dec
add
sar
pop
xorl
ljmp
pop
hlt
and
fcoml
push
in
push
dec
cld
cltd
bound
fcoms
into
pop
outsl
loope
lcall
push
xchg
int
jnp
sbb
adcb
lea
xchg
call
clc
pushl
enter
cmpsb
jle
lock
lods
ret
outsb
movsb
dec
insb
pop
mov
or
mov
adc
fdivrp
gs
in
jns
push
movsl
std
cs
sbb
mov
mov
shr
in
and
dec
in
out
mov
shlb
es
xchg
or
in
mov
inc
lret
mov
cmp
jo
mov
push
fdiv
scas
call
std
jle
or
loop
out
jbe
dec
div
or
xor
aas
add
cli
mov
std
and
dec
mov
decl
aam
add
inc
add
test
cmp
lret
push
mov
sbb
push
decl
sub
pushw
test
xor
incl
cld
inc
sub
sbb
cli
mov
es
leave
icebp
out
add
pop
sti
sbb
mov
cmpsb
xchg
in
sbb
fistpll
imul
repnz
adc
adcl
dec
out
and
adc
jp
int
ljmp
pop
repnz
dec
cmp
sub
cmp
ds
out
inc
aas
pop
test
incl
cmp
push
sarb
cli
jge
aaa
std
movsb
xor
xor
ss
incl
xchg
gs
xor
imul
cwtl
pop
push
jae
test
daa
fcompl
adc
decl
bound
jnp
inc
and
cltd
out
shl
mov
and
mov
pushf
jno
ds
daa
pushl
lret
shrl
cmc
fcompl
fcomip
mov
and
or
cltd
add
jb
nop
xchg
inc
sub
movsb
jb
fs
xchg
test
add
aad
or
mov
fwait
push
cwtl
movsb
and
xchg
push
inc
dec
js
mov
incl
xlat
xchg
add
std
lret
mov
mov
cli
cmp
xchg
shrb
stos
xchg
insb
xchg
jg
lcall
in
add
push
or
push
je
insl
arpl
sub
inc
jmp
gs
arpl
jb
and
xlat
pop
ret
test
loop
cli
hlt
adc
dec
push
jp
or
mov
scas
clc
mov
les
lock
dec
inc
adc
lret
hlt
inc
test
mov
mov
sbb
incl
mov
mov
mov
mov
mov
sub
push
scas
in
ret
call
jl
aad
insb
push
call
push
and
in
xchg
pop
mov
movsb
pop
test
ljmp
insb
lcall
sti
pop
or
outsl
pop
cwtl
sbb
cmpsl
aam
jno
loopne
popf
mov
fldenv
shl
sarl
inc
out
fldcw
xor
in
or
aam
mov
out
mov
mov
in
in
das
pop
inc
call
js
stos
jmp
pop
sbb
lock
jg
in
mov
test
mov
in
cli
sbb
imul
decl
clc
cmp
add
xorl
mov
icebp
xchg
add
hlt
mov
sub
pop
cli
and
and
pop
js
push
mov
cld
sbb
jecxz
repnz
jno
mov
cmc
fucom
pop
aaa
out
fmuls
movsl
out
push
test
lods
mov
aad
jno
mov
push
out
pop
scas
and
adc
pop
pop
daa
inc
pushf
les
cld
dec
mov
clc
xor
inc
sbb
xchg
push
mov
fcoms
call
shrb
addr16
enter
lods
lea
push
insl
xchg
sbb
cli
cmc
add
inc
fsubr
xchg
ja
insl
nop
push
inc
sub
pushf
cmpsb
xchg
lret
push
fs
cmp
xchg
repnz
lds
inc
pushf
lahf
iret
lods
jle
data16
jmp
adc
pushf
mov
outsl
mov
inc
add
add
add
jg
lea
pop
dec
mov
loope
mov
test
in
popf
orb
lcall
and
xchg
mov
or
mov
adc
imul
push
int3
mov
test
push
test
sbb
jne
jb
xchg
mov
mov
stc
out
stos
jl
inc
fisubrs
inc
lods
outsl
jmp
lcall
xor
cmpsb
jbe
andb
sub
ret
dec
adc
and
pushf
les
pop
dec
mov
int
inc
fildl
mov
mov
mov
cvtdq2ps
stos
fidivs
insl
dec
adc
mov
out
loop
and
test
sub
in
xor
inc
in
dec
pop
addr16
cmp
cmp
rorb
cs
mov
mov
es
push
test
jge
adc
call
add
mov
fsubrs
xor
loopne
and
lahf
push
sbb
and
adc
jno
lods
inc
enter
lods
cmpsl
xchg
inc
fnsave
es
into
jg
jg
inc
adc
outsl
sti
add
rcrb
xchg
cmp
aaa
fldenv
mov
mov
or
ljmp
enter
jne
or
out
mov
imul
in
mov
in
lcall
outsl
pusha
xchg
adc
mov
cmp
aas
fstpl
adc
decl
ljmp
cmp
sub
jg
call
mov
ljmp
push
sahf
dec
stos
ja
outsl
dec
jg
cli
cmc
jge
pop
push
aad
shlb
loop
lds
movsl
lock
lods
mov
mov
ljmp
std
call
xchg
lcall
rclb
aas
pop
and
mov
push
mov
iret
jbe
mov
pop
lret
pusha
ret
push
add
pop
mov
mov
imul
hlt
into
jg
fbstp
dec
test
ret
cmpb
das
in
jnp
dec
ja
enter
das
inc
gs
push
or
mov
outsl
inc
nop
cmp
or
push
sbb
mov
mov
arpl
ljmp
mov
mov
cmpl
sarb
incl
cmp
sbb
cmp
sub
pop
fisttps
xor
call
inc
test
push
mov
mov
daa
decb
pop
fwait
push
jo
mov
mov
mov
mov
xor
inc
arpl
andl
shll
mov
insb
mov
pop
in
mov
pop
cmp
clc
pop
jl
testb
movsl
inc
mov
cmp
adc
jmp
cltd
scas
xlat
loopne
fbstp
sub
pop
shl
or
inc
lret
add
ljmp
bound
push
cmpb
jo
sahf
in
inc
cli
mov
push
nop
dec
push
in
cmp
sub
cmpl
outsb
xor
insl
jg
repz
outsl
adc
add
sbb
scas
repz
xor
adc
decl
mov
bound
dec
leave
cmp
insl
push
js
scas
pop
call
add
rclb
data16
sbb
and
sub
sub
sbb
repnz
sbb
and
sbb
jle
cmc
imul
sbb
mov
ret
cmpsb
incl
inc
dec
flds
mov
ljmp
movsb
arpl
je
push
add
sbb
sub
mov
call
adc
dec
into
movsl
movsb
xchg
je
adc
xchg
cmp
push
subb
or
mov
aam
adc
jp
pushl
mov
and
jb
sbb
ljmp
incb
inc
push
out
aas
and
icebp
into
js
inc
fsubr
pusha
fs
stc
loope
sar
aas
nop
clc
hlt
fidivl
jmp
stc
xchg
mov
lock
imul
jecxz
mov
xchg
xor
stos
cs
mov
call
iret
incl
ja
loope
fsubrl
imulb
out
add
xorl
cli
call
negb
pop
sub
ds
icebp
loope
aaa
insb
inc
popa
lret
aam
into
mov
pop
mov
ja
cmp
sbb
mov
les
mov
mov
and
adc
cmpl
adc
push
ja
pop
mov
jle
int
jg
pop
ret
lret
pushf
in
inc
and
mov
cmpsl
push
data16
ret
decl
ds
outsl
or
and
out
mov
mov
mov
dec
ds
inc
mov
imulb
mov
adc
test
or
fildll
retw
push
add
jne
xchg
out
push
xor
cltd
or
adc
sar
das
xchg
dec
push
pop
jmp
xchg
mov
ljmp
xor
mov
mov
inc
dec
stc
jle
jl
out
sub
or
sbb
andb
repz
inc
fdivrp
dec
std
int
mov
jge
call
mov
sub
cwtl
push
imul
inc
std
xchg
stc
jp
gs
jle
add
dec
arpl
insb
cmp
cmc
scas
jmp
sbb
pop
aad
inc
in
addr16
cmp
not
dec
jno
inc
xchg
int
ljmp
mov
cli
inc
mov
insb
out
mov
stos
inc
xor
push
jecxz
fistps
jg
jg
pop
sarl
cmp
lods
push
pop
mov
xlat
push
orb
inc
addr16
incl
adc
mov
movsl
movaps
sahf
pop
outsb
ss
decl
mov
or
and
outsl
jl
pop
rcll
stc
mov
sub
test
cwtl
pop
rolb
dec
out
aad
sub
and
loop
mov
lret
in
mov
inc
pusha
pop
sbb
add
or
decl
push
mov
insb
sub
mov
imul
sbb
popa
ljmp
gs
fdiv
bound
in
dec
add
cmc
jnp
or
xor
pinsrw
das
clc
pushl
jmp
ljmp
or
pop
mov
sarl
push
dec
gs
mov
cmp
scas
add
jmp
aam
xor
dec
in
movsl
push
cmp
test
insl
roll
jg
pop
frndint
decl
addr16
fidivl
rcl
add
add
add
in
decl
or
les
pushl
xlat
inc
sbb
dec
sub
adc
leave
mov
mov
push
outsl
test
inc
decl
into
xor
lahf
lods
fdivrp
or
mov
xlat
std
out
sbb
cmpsb
cmp
repz
imul
cld
das
sub
push
mov
mov
lcall
aad
cmp
shl
xor
dec
decl
jecxz
or
fdivrs
test
push
iret
or
aaa
movsl
mov
scas
jge
jmp
jge
cltd
mov
setae
test
push
incb
repnz
imul
push
outsl
decl
sbb
and
imul
mov
sbb
add
loopne
std
pop
addr16
or
or
mov
pop
mov
inc
pusha
test
ljmp
xchg
call
xor
aaa
push
sub
xchg
dec
fcomip
daa
shrl
adc
aas
mov
fnsave
decl
xchg
dec
fmuls
sbb
ljmp
dec
dec
add
add
xchg
loopne
fbld
ret
test
fists
outsb
mov
inc
imul
cmp
mov
sbb
push
inc
xchg
mov
aas
shlb
add
push
add
cmp
sub
push
insl
push
ret
jb
ror
add
sahf
mov
scas
cli
fwait
fs
movsb
bnd
scas
xchg
pushf
cld
push
test
jb
std
les
clc
in
rolb
add
xchg
lea
loop
jp
jnp
sub
or
xchg
inc
mov
or
fsubrl
fcmovnu
push
std
insl
jmp
xchg
rcl
add
aam
inc
push
fiaddl
int
mov
lods
mov
es
outsl
mov
loope
mov
ja
pop
out
punpckhdq
adc
or
push
push
std
lcall
imul
iret
push
mov
jg
jnp
mov
cmpsb
int3
push
cmpsl
adc
popa
shlb
ljmp
mov
ljmp
jecxz
fisttps
xor
fmul
lock
test
mov
gs
jmp
sbb
outsl
ret
mov
push
lods
incl
mov
movsl
push
inc
push
ficoms
and
sub
data16
les
mov
cmp
xchg
mov
jmp
adc
mov
pushl
out
lea
loopne
xor
and
sub
mov
test
int
sbb
hlt
jo
pop
cmpsl
xchg
inc
enter
arpl
mov
mov
hlt
out
lret
jle
inc
fimull
subl
dec
ret
inc
fldenv
adc
pushl
xchg
out
scas
loop
aaa
mov
adc
cwtl
mov
pop
adcl
ljmp
test
fldt
ja
pop
ljmp
inc
aas
fistpll
add
mov
cmpsl
mov
cmc
mov
pop
jg
and
add
andl
jb
pop
scas
stos
inc
xchg
push
in
fisttps
imul
jne
sub
sub
cwtl
filds
mov
fiaddl
mov
jo
hlt
imul
or
repz
xor
mov
jne
pop
mov
lcall
jg
and
adc
jns
mov
cmp
int3
call
mov
push
negl
jge
fisubrs
or
jns
add
lock
sub
xchg
addr16
lods
pushl
addr16
lea
mov
icebp
mov
push
lds
or
cld
xchg
jl
push
add
xchg
pushf
inc
xlat
xor
or
ret
into
pop
push
mov
decl
pop
loope
add
adc
test
in
push
cltd
test
js
cli
rol
cli
lret
xchg
test
out
push
push
mov
pop
into
lea
call
pop
unpckhps
int3
mov
mov
and
gs
dec
ljmp
leave
rclb
or
add
sbb
insl
loop
cmpsl
int3
xor
mov
loope
loope
rcr
lahf
adc
xchg
decl
xchg
and
leave
call
push
adc
sub
gs
das
aas
jns
ss
mov
or
je
aaa
sub
call
cwtl
xor
std
lea
jns
fisubs
out
repz
ret
mov
jmp
lret
mov
sbbl
out
mov
data16
xchg
cmp
and
cwtl
ljmp
mov
adc
pop
dec
mov
insb
sti
insl
fldcw
jmp
pop
mov
add
je
ja
adcb
fbstp
add
test
mov
hlt
pop
cltd
clc
fistpl
fimull
insb
adc
mov
daa
mov
fnsave
pop
pushl
pop
adc
inc
push
mov
push
rorl
hlt
push
push
out
imul
addr16
neg
hlt
in
loope
aad
mov
pushf
jecxz
imul
incl
lret
and
lods
lods
pop
outsb
outsl
loope
sbb
je
ss
push
call
cld
push
dec
rep
loopne
lock
mov
in
test
sub
xchg
clc
out
call
scas
mov
repz
cmp
std
jnp
test
mov
std
daa
jmp
int3
stos
test
jg
imul
push
sub
cmc
fs
dec
jo
int
mov
pop
cli
dec
imul
jp
test
arpl
ja
cli
xlat
dec
shl
mov
decl
mov
scas
adcl
arpl
ret
dec
inc
mov
icebp
sub
ds
je
aas
les
enter
test
incl
bound
cmpl
sti
subl
inc
xchg
fsub
push
push
ljmp
xor
bound
into
jns
fmuls
dec
pop
add
inc
sub
jnp
sub
out
decl
sub
xchg
mov
xchg
push
mov
or
in
xor
sbb
call
das
cmp
add
and
pop
test
adc
aaa
pop
clc
cmp
imul
clc
decl
xchg
sbb
repnz
mov
je
mov
sar
push
pop
and
loope
fbld
push
aas
aas
xchg
mov
adc
mov
ljmp
mov
decl
out
outsb
pop
dec
ja
fcoml
cmpb
fistl
aaa
testl
pop
call
fcmovnb
mov
lret
and
pop
insl
add
scas
fwait
incb
pop
sbb
faddl
sbb
incb
push
test
loope
mov
outsl
insb
rolb
or
push
out
loope
test
das
and
fcoms
fisubrs
jg
inc
cmp
sbb
mov
sbb
ds
popa
fwait
dec
jle
ret
std
dec
add
int
sbb
mov
daa
xor
or
mov
cmpsb
pop
mov
addr16
adc
inc
and
mov
jp
dec
cmp
loopne
sub
mov
pop
loop
out
mov
in
push
out
cmp
xchg
decl
and
cmpsl
iret
add
ss
bound
pushf
jge
daa
fcmovb
ss
dec
stos
pushl
test
incl
test
es
imul
jecxz
frstor
lock
push
call
cmpsl
daa
aam
shrl
fisttps
daa
dec
cmc
out
and
jbe
adc
pushl
sub
xchg
inc
mov
jno
hlt
sub
mov
lcall
dec
lcall
pop
aad
jae
pop
scas
inc
fdivl
imul
sbb
and
sub
icebp
pusha
jg
std
jne
jmp
xor
js
dec
and
jge
or
test
ljmp
push
xchg
iret
add
aas
jnp
sbb
insb
cs
gs
jl
outsl
cmp
es
decl
jmp
in
ljmp
jns
push
sarl
bound
js
cmp
pushaw
jp
jmp
cmpsb
movsl
aam
push
mov
call
dec
ret
dec
push
pushf
adc
mov
jo
dec
fcom
sbb
arpl
fwait
into
or
dec
mov
mov
dec
push
movsl
inc
stos
in
inc
push
lock
push
ljmp
mov
divb
int
inc
inc
cmp
incl
inc
push
push
add
pop
mov
cld
push
in
jg
sar
test
mov
push
or
inc
pop
loop
pop
pop
cmc
push
fistps
in
xor
call
xchg
add
cld
mov
outsl
inc
test
mov
sbb
loopne
jno
loop
out
call
iret
out
jecxz
movsl
mov
loope
fldcw
jp
ja
cli
out
es
dec
out
adc
paddsb
in
pusha
hlt
sub
push
cmp
mov
jmp
test
add
decl
std
adc
cld
inc
rol
imul
ljmp
jle
cli
outsl
adc
sti
fdivrs
stc
lret
les
or
jp
testl
es
inc
push
adc
sbb
out
lret
sub
idivl
cli
idivb
pushf
dec
js
pusha
fsubrs
push
mov
faddp
cmc
outsb
ljmp
and
fdivl
dec
in
imul
test
fdivs
ljmp
movsb
add
mov
jo
shlb
pop
lds
adc
pushf
xchg
daa
fisubrl
jle
sbb
mov
pop
push
xchg
cmp
roll
mov
jb
call
test
cmp
lahf
sbb
stos
sub
pop
pop
or
fidivl
sbb
shlb
and
nop
mov
ja
sub
cs
jmp
ds
xchg
and
and
xchg
xchg
loopne
jo
or
call
clc
imul
dec
cmp
mov
std
add
sub
lcall
jnp
xor
loope
fisttpll
sub
scas
jle
and
dec
loop
and
sbbb
repz
mov
mov
and
call
cmpsb
arpl
aad
or
test
mov
into
stos
push
outsb
insb
scas
jmp
cld
or
sti
addr16
lods
outsl
lods
xchg
add
sbb
jne
jbe
movsl
or
std
clc
sub
mov
jl
lahf
sarb
xchg
mov
sbb
and
cmpsl
mov
repnz
add
fisttpl
popf
add
mov
jmp
push
cs
adc
testb
inc
pushf
xor
imul
mov
pop
scas
mov
mov
jmp
or
jle
scas
out
bound
xor
pop
fcompl
jmp
jp
mov
push
push
xlat
rorb
add
incl
insl
repnz
das
loopne
incl
std
sbb
pop
arpl
call
test
sbb
lret
jnp
enter
lods
jne
sbb
es
pushl
std
lods
mov
adc
add
cmp
sbb
sub
call
sahf
dec
jge
daa
mov
and
xor
pop
or
mov
mov
add
popf
inc
cmp
in
ljmp
pop
inc
cmp
xchg
shrl
cmp
mov
cmp
sub
cwtl
notb
xchg
orb
int
or
lock
mov
lahf
jno
and
aas
loop
push
dec
jg
outsl
arpl
cmc
or
nop
mov
jg
stc
jge
rcrb
pop
rorb
and
lds
lods
jg
lcall
inc
sbb
xchg
hlt
pusha
mov
popa
jle
add
pop
cmp
xor
cmp
mov
lods
ljmp
mov
ret
pusha
push
pop
mov
shl
push
lcall
aaa
hlt
test
fistpll
ret
imul
push
inc
ja
imul
pop
jg
mov
popa
add
test
inc
out
cwtl
cmc
cld
sahf
in
push
call
insl
jle
enter
mov
adc
inc
sub
mov
orl
js
xchg
sbb
hlt
cmp
div
in
incl
xchg
das
push
call
mov
xchg
pop
in
mov
popa
or
pop
xor
icebp
sbb
lcall
xchg
fucomip
inc
cs
or
jo
jno
mov
cmp
xorb
decl
arpl
push
mov
addl
shll
pop
sahf
mov
jb
pop
xor
pop
loope
in
ljmp
imul
or
sub
pop
push
push
addb
daa
mov
jmp
push
push
js
xor
inc
mov
xlat
cmp
in
mov
cmp
shr
push
push
in
decl
negb
andb
out
lret
dec
xchg
xor
adc
sub
stc
mov
cli
mov
pop
cmp
rolb
adc
xor
xchg
or
inc
loope
add
dec
jb
dec
push
dec
sub
scas
adc
and
pop
insb
adc
cli
sub
mov
leave
push
rorb
ror
add
popf
inc
push
adc
pop
js
jns
cld
ljmp
dec
imul
add
call
jle
out
inc
mov
mov
pop
or
mov
repz
xchg
mov
outsl
sbb
pushl
pop
movsl
arpl
and
popa
lcall
rcr
cmpsb
outsb
ss
fsubrl
jl
movsl
into
cmp
cmpb
pop
mov
xchg
adc
int
lods
mov
jle
dec
adc
movsl
jbe
fadd
hlt
jne
or
adc
jae
fwait
push
mov
fs
icebp
negl
xchg
inc
dec
sarb
decl
pop
int3
movsb
dec
sbb
into
icebp
sbb
test
cmpsb
sub
stc
pop
sub
inc
call
in
call
mov
jmp
in
cmp
mov
cltd
sbb
push
xor
jmp
fwait
push
cmp
cltd
xor
es
mov
fdivrp
decl
mov
adc
ss
pop
adc
out
mov
loopne
jbe
dec
call
inc
dec
jmp
ds
insb
xorb
ds
inc
repz
stos
jle
sti
fcmovbe
lcall
jg
cmp
push
test
jbe
mov
pop
out
pop
sbb
mov
cmpsb
push
mov
dec
test
xor
lret
imul
cmp
mov
lcall
or
test
cltd
in
sbb
xchg
xchg
ds
push
sub
fisubrs
cmpl
xchg
mov
mov
jmp
pushl
pop
sub
push
and
int3
mov
pop
sarl
inc
fiadds
pushl
out
sub
push
mov
jmp
ljmp
jo
imul
pop
adc
jle
or
flds
inc
popa
decl
pop
idivb
imul
xchg
add
aas
mov
out
outsl
fldl
mov
dec
mov
out
cmpsb
ja
scas
sub
dec
pop
dec
repnz
mov
or
testl
in
call
and
hlt
push
push
adc
jo
loope
and
cmp
mov
xor
pop
add
cmp
cmp
iret
cmc
insl
push
and
in
call
push
dec
and
lret
add
das
das
jmp
and
orb
jecxz
incl
mov
scas
loopne
mov
ja
jmp
mov
fldt
sbb
dec
fbstp
lahf
das
cmp
jo
cmpsb
jne
addr16
movsb
ja
aaa
lret
cs
out
outsb
mov
call
pop
imul
pop
popa
push
mov
bound
dec
cmp
jne
outsl
popa
add
add
pop
test
das
pop
lahf
sbb
pop
negl
fsubrs
push
iret
add
decl
jne
divb
scas
jne
cltd
dec
push
pop
inc
jae
inc
mov
jbe
pushf
push
ret
sub
and
decl
out
inc
xchg
insl
insb
imul
mov
jg
out
popl
pop
or
add
dec
jo
scas
jnp
adc
ljmp
push
jp
pop
jnp
ds
sub
jmp
out
jnp
sub
adc
add
sti
inc
jl
add
jno
cmc
add
push
push
scas
mov
pop
mov
add
mov
and
rorb
out
pusha
push
jo
xchg
cmp
sub
clc
in
lcall
push
inc
jns
test
or
and
daa
dec
dec
jmp
jp
inc
push
jmp
or
fistps
push
xor
rcr
add
int3
or
inc
sahf
xchg
iret
xchg
sub
loopne
and
inc
and
push
incl
mov
insb
jno
dec
fcmovnb
push
or
add
mov
lock
pusha
pushf
cmc
pop
mov
sbb
lret
sbb
insl
jbe
pop
xchg
and
and
sub
sub
sub
pop
inc
popf
loopne
cmp
jle
aas
inc
pop
mov
sarb
pop
loope
adc
pop
icebp
jbe
jmp
test
pop
jl
shrb
clc
dec
mov
inc
push
cmp
ljmp
jbe
cmp
and
mov
ljmp
jnp
xchg
cmpsl
add
pushf
and
jb
mov
cwtl
or
dec
aam
pusha
jnp
push
add
cmp
push
cmp
mov
mov
dec
call
aas
push
mov
dec
inc
and
sub
stos
dec
xchg
mov
pop
mov
and
inc
dec
ds
mov
jns
xchg
jno
scas
insl
lds
in
sarb
xchg
popa
mov
js
lahf
rcr
sahf
pop
cmp
dec
fstp
and
aas
jne
imul
or
push
sbb
subb
lock
jne
xor
ficompl
xchg
jmp
jmp
add
cli
push
add
jae
out
xor
jmp
pop
xchg
nop
loopne
push
imul
dec
cmp
filds
data16
shll
dec
in
lcall
pop
cmpsb
dec
sub
pop
out
and
add
sbb
jecxz
or
mov
cmp
popa
popa
outsb
inc
xlat
in
test
push
jae,pt
mov
add
sub
rolb
into
push
scas
loop
ffreep
and
out
ret
mov
ljmp
jbe
lock
mov
push
xchg
pop
push
lds
lcall
add
cmp
xchg
xor
decl
call
push
add
nop
rclb
cmp
jg
add
lcall
test
adc
mov
jmp
sahf
aaa
rcrl
iret
loopne
or
rorb
ss
or
mov
pop
mov
stc
jb
sar
xchg
jne
push
cmp
fsub
cmp
pop
fdivp
lret
pop
hlt
and
jae
mov
jno
mov
aad
inc
inc
cmp
outsl
lahf
sbb
mov
mov
aas
or
arpl
je
pusha
pop
ret
shlb
dec
dec
push
fisttps
mov
jb
rclb
mov
fwait
lret
sbb
sbb
imul
mov
inc
cmp
jmp
loope
loopne
pushl
sbb
outsb
adc
aas
inc
push
mov
lea
incl
cmp
into
ss
js
cmp
mov
fsubrl
xor
loope
cmp
out
imul
pop
add
enter
ja
push
cmp
mov
sbb
sub
pop
pop
inc
adcb
sbb
call
pop
scas
pop
clc
les
cmp
clc
mov
adc
mov
fdivrs
jns
ficompl
stos
ljmp
mov
mov
sub
data16
jl
fisttpll
imulb
sub
shll
mov
adcl
incl
addr16
insl
leave
lock
imul
ljmp
fidivrs
outsl
ret
mov
push
icebp
mov
fwait
cmp
addb
adc
add
cmc
adcb
push
test
mov
push
push
adcb
shrl
sub
mov
fucomip
adc
inc
pop
or
iret
addr16
and
rclb
xchg
clc
cmpsl
jl
fcomip
add
or
sbb
add
add
add
lcall
inc
lret
mov
mov
add
dec
add
mov
ljmp
xor
add
push
imul
ror
jl
and
fidivs
sbb
pop
jb
rorl
lcall
mov
notl
pop
inc
xchg
xchg
mov
adc
mov
test
lret
pop
pusha
sub
outsb
or
dec
jg
lcall
xor
xor
cmp
sub
sub
cmp
mov
ss
scas
popa
bound
pop
jno
insb
aas
into
js
push
add
sub
ja
insb
mov
mov
xchg
push
imul
xor
dec
mov
jnp
incl
inc
minps
dec
neg
rorb
sub
dec
les
fadd
les
jno
adc
decl
xor
add
dec
icebp
and
stos
push
push
cwtl
push
daa
aaa
xor
lcall
clc
inc
and
push
mov
jns
mov
cmp
xlat
in
in
xchg
mov
je
daa
xor
movsb
in
pop
pop
or
add
test
hlt
enter
cmp
filds
sbb
push
cmp
cwtl
je
dec
mov
jo
fisubrl
jne
out
clc
pushw
incl
lahf
arpl
jbe
call
push
lea
mov
sbb
xchg
xor
movsb
and
nop
test
pushw
popa
dec
aam
inc
inc
mov
cmp
push
add
shrl
mov
mov
adc
lcall
mov
inc
xchg
mov
xchg
adc
in
jae
cmp
lods
sar
jg
sub
inc
popf
push
repnz
sbbl
adc
xchg
jmp
dec
and
add
xchg
inc
aam
cli
dec
loop
dec
push
jne
sbb
mov
cld
pop
xor
mov
cmpsb
cmp
bound
or
lea
notl
mov
and
sub
adc
xor
fs
push
pop
subb
daa
xchg
jp
dec
imul
decl
mov
jno
addr16
movsb
mov
sbb
test
aaa
daa
xor
mov
pop
lcall
jl
dec
cmp
ds
popa
mov
aam
sub
jne
mov
pop
xchg
jle
sub
jmp
incl
pop
push
dec
ds
push
ja
adc
stc
mov
and
decl
and
xor
push
add
mov
jne
pop
addr16
push
jb
pop
addr16
imul
in
jecxz
push
gs
adc
sub
stos
mov
lret
aam
sbb
cmp
out
enter
cltd
sub
inc
jo
pop
aad
jo
dec
movsl
pop
mov
add
ljmp
push
mov
decl
sahf
out
cwtl
pop
jl
mov
or
mov
cmp
movsl
push
dec
dec
push
push
or
ljmp
in
sub
jmp
inc
insb
and
sbb
cld
ljmp
test
or
jns
mov
cmp
or
mov
clc
inc
lock
dec
sub
jns
les
insb
dec
sub
orl
mov
mov
cmp
adc
fdivs
ljmp
xor
test
add
and
fdivl
cmp
notl
sti
mov
jg
les
xchg
out
ljmp
pop
add
std
clc
sub
xor
es
xchg
iret
fpatan
or
jo
jl
dec
je
pop
ljmp
loop
aas
aas
movsl
jmp
sub
mov
jl
aad
das
or
cmpsl
add
loope
sbb
out
loope
pop
loop
xor
lahf
fdivs
idivb
xchg
jae
mov
mov
sub
jp
mov
push
in
fwait
fs
dec
inc
sbb
mov
dec
xchg
loop
and
adc
call
jl
out
ja
outsb
xor
fimuls
in
repz
es
jg
add
pop
popa
stos
pop
scas
out
das
mov
or
jns
outsl
jne
lcall
arpl
xchg
cmp
push
repz
mov
cmpsb
mov
shlb
loopne
fstl
pushf
jne
and
mov
xor
js
lcall
pop
pop
and
pop
out
pop
lahf
push
imul
imul
in
push
lock
ljmp
clc
scas
jmp
sbb
bound
xchg
cltd
dec
pop
jp
lds
in
incl
popa
lock
or
ret
push
insb
jle
lea
or
stos
js
inc
popa
xchg
push
test
call
cld
ljmp
jnp
push
pop
sbb
js
jge
outsb
lock
cmp
aad
inc
insb
aas
stc
incl
push
mov
xor
daa
das
insb
addr16
add
xor
outsl
mov
iret
push
out
out
cli
pushl
sbb
mov
mov
insl
sbb
ja
jno
dec
pop
xor
push
dec
loop
jecxz
dec
ss
cmp
sub
hlt
sbb
test
adc
dec
call
mov
add
cmp
push
push
xchg
and
dec
xor
xchg
adc
mov
nop
dec
jl
shlb
loopne
insb
dec
ja
xchg
dec
aad
mov
rolb
add
mov
add
push
add
push
mov
mov
jmp
sbb
repz
shrl
add
and
xchg
jecxz
das
or
jg
incb
mov
nop
add
xchg
xchg
xchg
ret
lcall
scas
sahf
lahf
push
mov
xor
test
test
scas
xchg
clc
dec
ljmp
mov
mov
mov
das
mov
push
decl
enter
lret
iret
rolb
rolb
fsubr
ja
fsubrl
loopne
loop
in
out
call
sahf
in
jg
sbb
mov
repz
addr16
stc
cli
cs
scas
push
adc
xorl
pushl
stos
and
ljmp
push
xor
shll
push
ret
dec
orb
or
jg
mov
es
xor
cmp
jbe
xchg
bound
js
jmp
popa
outsl
xchg
aam
les
stos
inc
test
pop
popa
inc
jo
xor
sbb
cmpsl
and
aas
push
outsl
clc
jg
jmp
or
iret
sbb
sub
push
and
movsl
in
push
pop
call
gs
mov
mov
fincstp
mov
inc
insb
daa
jb
je
bound
js
inc
popa
popa
adc
das
icebp
push
mov
es
call
mov
ds
inc
ja
icebp
push
add
lcall
adc
int
fmuls
outsb
or
insb
or
daa
inc
jb
in
jns
out
fadds
jmp
lahf
and
and
mov
ficomps
imul
or
sbb
popa
lea
arpl
inc
jmp
mulb
js
test
mov
cs
out
or
mov
jp
jl
decl
push
or
test
daa
arpl
loopne
mov
int3
iret
jg
mov
lods
ljmp
data16
daa
insb
shlb
cmpsb
popf
jno
and
push
rcr
insl
imul
inc
js
or
shrb
test
icebp
test
dec
inc
pop
xor
test
dec
lcall
inc
pop
sbb
jns
jae
daa
jg
mov
pop
ret
xor
dec
sub
int
xchg
and
ret
jbe
push
popl
in
or
scas
ret
fsubrl
daa
mov
jle
ljmp
popa
shrb
ljmpw
xor
pop
data16
daa
nop
mov
mov
sub
push
pop
add
int
or
adc
lcall
stc
jno
ljmp
shr
jle
jb
mov
loope
fidivrl
mov
jg
pop
xchg
or
sub
mov
je
cwtl
push
jns
out
test
mov
dec
shrl
fucom
shlb
loopne
cmpsb
imul
out
scas
jecxz
decl
mov
imul
xor
mov
adc
aaa
std
mov
push
mov
pop
sub
nop
cld
push
movsl
mov
aam
enter
or
dec
inc
mov
std
and
loopne
dec
lods
dec
das
mov
lcall
sbb
push
inc
movsb
repnz
adc
dec
pop
or
ja
ret
pushf
hlt
push
inc
or
imul
lcall
sbb
push
add
loope
push
push
inc
cmp
daa
cmp
loopne
push
call
clc
xor
lahf
shl
and
lods
std
incl
inc
sub
movsl
fwait
call
jl
xlat
pushf
je
out
sbb
push
cmpl
mov
push
inc
push
cmpsb
rolb
popf
dec
xor
movsl
stc
xchg
div
inc
ja
inc
cmp
pop
mov
mov
xchg
lret
stc
pop
cld
cmpsb
test
xchg
pusha
adc
push
scas
je
pop
sbb
xor
ljmp
add
clc
or
hlt
sbb
cs
rclb
repnz
push
push
les
cld
aam
add
pop
jo
in
outsb
cli
mov
inc
lahf
cmp
mov
sets
int
mov
je
lahf
insb
push
cmp
jns
lret
inc
jae
dec
mov
jg
jmp
mov
push
dec
clc
or
or
loopne
outsl
pop
ljmp
inc
call
test
or
mov
sbb
push
jb
hlt
ljmp
push
cwtl
cmp
gs
adc
addl
notl
imul
or
lods
jg
adc
jecxz
jbe
mov
daa
push
cmc
inc
orl
push
inc
cmp
jg
incl
and
sti
arpl
inc
fimuls
fwait
dec
adc
das
push
rol
cmpl
scas
and
out
decl
rcrb
dec
enter
fimuls
subl
add
cltd
cmc
out
push
sar
call
dec
sub
rcrb
push
cli
xchg
inc
mov
dec
decl
xchg
pushl
jbe
jae
cld
in
scas
incl
sub
push
xchg
rorb
ljmp
jl
lahf
inc
rorb
adc
cmp
or
cwtl
or
or
cvtps2pd
movsb
lahf
and
cmp
inc
test
inc
pop
xchg
sbb
pop
push
or
or
jg
add
inc
lcall
fs
sbb
push
fdivl
inc
sub
aam
add
and
pushl
pop
jbe
dec
outsl
or
pop
and
out
shrb
push
and
jmp
xor
bound
sbb
cwtl
decl
jnp
mov
iret
adc
jmp
lock
das
or
ss
lock
daa
adc
jg
subl
out
insb
popa
scas
lea
inc
xchg
jo
sub
push
sbb
iret
push
pushf
fisttpl
fs
pusha
in
push
mov
sub
into
jg
jmp
outsb
pop
sub
subb
movsl
imul
lods
mov
fidivrs
sub
lock
adc
xor
add
mov
jg
bound
and
outsb
xor
scas
fiadds
sbb
add
ficomps
das
loop
inc
jg
loopne
or
data16
or
jae
loopne
insl
call
fs
pop
mov
add
mov
and
fstl
xchg
cmp
push
xor
sbb
or
jle
jae
mov
xor
or
lods
mov
mov
sbbb
push
sub
sub
ljmp
xchg
and
incb
sbb
mov
aam
std
sub
ficoml
bts
scas
int3
mov
push
jns
sbb
scas
xor
or
mov
push
and
jne
adc
jp
out
mov
sub
cs
xchg
adcb
shrb
cmp
pop
mov
pop
decl
cli
or
lock
in
ret
mov
aaa
xor
pop
gs
dec
adc
shll
add
dec
sbb
mov
sub
mov
shr
inc
add
adc
lret
mov
inc
test
das
xor
daa
idiv
out
in
std
dec
lods
decl
stos
test
dec
dec
push
push
out
pop
ja
out
xchg
out
cmp
mov
mov
aas
repnz
mov
outsb
rorb
mov
inc
mov
mov
push
adc
aaa
push
ret
cmp
test
push
rcl
fcoms
je
mov
sahf
addr16
and
and
or
pop
or
fsubrp
lea
sub
dec
push
push
add
add
push
aaa
pop
xchg
xchg
or
sbb
ja
ljmp
fisubrl
dec
insl
xor
xor
leave
xchg
sub
addb
lock
dec
inc
add
lcall
cmpsb
pop
jg
cmpsl
lods
aam
xchg
in
lods
int
xchg
xor
ljmp
jns
sub
mov
inc
xchg
adc
decl
sbb
pop
mov
dec
mov
mov
scas
lahf
pop
nop
test
enter
add
sbb
sbb
mov
cltd
jne
pop
push
call
xor
xor
popf
cmpsl
pop
in
clc
stos
lock
js
dec
ja
jp
adcb
add
daa
mov
xor
fs
add
decl
loopne
or
pushf
pop
cmp
sub
cmp
dec
cmp
cwtl
outsl
push
mov
incl
dec
nop
sub
pop
fs
push
or
dec
or
js
imul
cmp
leave
shl
xor
sub
pop
ja
ret
xchg
mov
and
sbb
int3
adc
scas
lds
xchg
xchg
call
mov
daa
push
lock
mov
aam
or
call
mov
repz
jb
xchg
add
sbb
bound
jge
xor
and
mov
lcall
pop
nop
push
test
roll
ja
inc
and
and
leave
mov
jne
pop
adc
mov
pop
lret
call
notb
or
cs
movsb
push
xchg
xor
cld
push
movsb
add
jae
sub
or
pop
jb
outsb
adc
lock
outsb
test
cs
add
dec
testl
add
movsb
mov
scas
test
or
sub
aaa
xor
les
push
decl
fwait
test
xchg
fwait
pop
lea
mov
dec
add
jbe
push
jbe
pop
jecxz
mov
ljmp
fsubl
daa
or
fildl
mov
pop
push
gs
push
and
add
and
loopne
out
icebp
xor
cmp
pushl
xchg
fistl
inc
ficompl
xor
xchg
pushf
push
dec
adc
inc
pop
add
frstor
mov
pushf
sbb
jb
les
in
call
pop
jge
inc
nop
push
mov
pusha
cli
sub
jg
aaa
out
pop
mov
call
adc
cmp
cmp
sbb
push
add
and
mov
icebp
ja
addb
mov
mov
mov
aaa
pushl
or
xchg
and
push
inc
xchg
jecxz
mov
movsb
mov
or
dec
push
or
inc
adc
jmp
jg
leave
add
fistps
int3
test
in
ror
leave
clc
clc
pusha
push
push
pop
push
fcompl
and
cmp
add
pushl
inc
push
xor
inc
sbb
jno
jl
bound
ljmp
decl
lods
push
cmp
cmp
cmp
dec
inc
mov
mov
sbb
cmc
push
add
xor
inc
and
adc
jmp
push
pop
aaa
mov
jge
js
sbb
jns
jmp
add
aas
lcall
loop
ret
das
xor
bound
xchg
lods
inc
mov
mov
bound
pop
jb
bound
decl
pop
jb
and
mov
jns
push
mov
incl
lcall
dec
xlat
cmp
movsl
stos
movsl
sub
jg
sbb
pushf
out
aas
pop
faddp
jg
ljmp
in
push
xchg
loopne
mov
xchg
or
xchg
cmp
cmpsb
mov
stos
leave
and
pop
inc
xor
inc
inc
xor
push
xchg
pushf
mov
nop
push
cwtl
mov
fabs
xchg
cmp
sbb
jmp
fmull
sub
jl
aad
push
fdivrs
mov
jg
sarl
jecxz
les
imul
jb
add
lcall
inc
lock
ret
cmp
add
add
in
mov
add
int
mov
jb
sbb
fidivrs
pushl
or
push
or
push
sbb
daa
add
cmp
fnstcw
adc
inc
mov
pop
xor
fbld
fwait
xchg
cmpsl
pop
cwtl
leave
gs
xchg
mov
xor
leave
mov
and
int3
push
aam
pop
cmp
or
or
fsubl
loope
sbb
ds
jb
mov
in
jb
or
xchg
or
add
call
dec
inc
lea
ja
lcall
xchg
repnz
mov
mov
ss
add
push
add
or
pop
fwait
add
lcall
bswap
aad
call
or
cltd
or
js
fistps
call
push
sahf
movhps
ja
xor
adc
adc
push
test
adc
sbb
xchg
xchg
pop
lods
bound
jl
repnz
fwait
add
add
push
xor
sar
fadds
sbb
call
fisubl
sbb
stc
or
push
mov
push
xor
pop
mov
inc
aad
pop
aaa
andb
aaa
fwait
and
mov
decl
xchg
cwtl
add
adcb
leave
into
rolb
je
incl
jnp
xchg
sbb
cmc
daa
inc
outsl
or
test
pushf
mov
daa
cwtl
test
dec
dec
mov
inc
in
popf
or
daa
jb
push
xchg
enter
jg
sub
cmp
adc
cmp
pusha
icebp
in
pop
push
and
push
adcl
cmp
pushl
fcoml
mov
inc
sbb
or
push
imul
sub
xchg
outsl
shlb
push
pop
add
aas
adc
push
rcrl
in
pop
or
sbb
push
or
mov
push
add
mov
sub
int
mov
cmp
adc
push
push
andb
adc
pop
ds
sbb
ljmp
dec
dec
xchg
pop
sbb
sbb
subl
decl
je
adc
leave
jns
imul
clc
sti
fs
scas
or
sub
sub
xor
xchg
xchg
cmpsb
xchg
lcall
adc
sub
lods
or
push
adc
sbb
pop
cmc
in
mov
xlat
inc
insb
insb
sub
cmp
push
int3
vmovdqu64
aam
aad
icebp
clc
mov
sbb
out
iret
adc
and
rclb
add
call
or
cmp
sbb
fcomip
dec
or
movups
pusha
mov
decl
add
into
imul
jmp
xchg
jmp
lcall
push
outsb
mov
jno
push
or
fsubs
jbe
xor
mov
mov
decl
inc
cmp
pop
cmp
add
mov
les
repnz
icebp
sub
adc
or
in
pop
das
mov
cs
adc
and
test
into
mov
adc
mov
dec
popf
mov
lcall
add
push
and
and
and
ljmp
and
and
and
cli
jp
add
jg
push
inc
sub
sub
mov
inc
push
xor
sar
loope
dec
sahf
inc
sbb
xchg
cli
inc
lahf
stos
cmp
adc
mov
enter
loope
xchg
xchg
fucomi
jb
xor
fsubl
cmp
xchg
mull
pusha
sbb
loope
out
dec
pop
gs
dec
mov
or
mov
movsb
js
shr
cmpsl
fs
push
repnz
testb
xlat
or
pop
jg
push
pop
xchg
push
and
cli
sub
imul
or
out
xchg
jb
cmp
cmp
or
ja
insl
outsb
or
ficoml
adc
push
jno
sbb
insl
clc
cmpb
lea
xchg
popf
and
jbe
jo
dec
bsr
imul
fdiv
lds
loopne
sbb
cmp
add
sbb
mov
and
sub
decl
mov
dec
xor
cli
pop
xor
xor
dec
test
idivb
das
cmpsb
adc
cmp
sub
lds
fdivrp
call
enter
or
mov
inc
sub
dec
inc
dec
enter
dec
popa
mov
sub
insb
dec
ja
orb
adc
pushf
push
andl
popa
les
push
mov
pop
out
pop
mov
cmp
pop
jg
adc
daa
int3
xor
push
rcrb
mov
popa
repz
gs
jge
data16
xchg
mov
stos
push
decl
test
xlat
sbb
cmp
jo
lods
jg
mov
jb
jae
dec
je
jne
inc
das
ja
repz
lods
aaa
js
jns
outsl
xchg
leave
jnp
jl
jge
jle
xchg
mov
subb
iret
adcb
sbb
xchg
xchg
mov
je
mov
cltd
and
mov
mov
in
mov
outsb
ror
xorl
jg
insl
loop
mov
rorl
popf
out
inc
or
lahf
std
loopne
decb
sti
lcall
mov
cmp
aas
cmpsb
dec
cmpsl
xchg
test
test
ds
imul
mov
scas
cwtl
lds
dec
fisttps
into
mov
fnstenv
mov
jns
lret
sub
jmp
mov
xor
cmp
inc
int3
inc
push
mov
pop
jg
jne
ret
ret
pop
ss
lds
and
inc
jb
popf
sbb
fcmovne
out
jo
int
sti
cld
cmp
pushf
push
lcall
and
cmp
je
push
xlat
std
inc
lret
pop
fsubs
fidivl
inc
imul
ficomps
lret
mov
lret
fdivrl
lods
loope
xchg
or
clc
jmp
xor
stos
stos
fbstp
add
mov
add
lea
or
fsts
dec
sbb
jo
cmp
shr
and
fwait
jle
mov
add
repnz
jae
xor
or
cli
insl
pushl
mov
scas
or
mov
dec
add
jb
jl
mov
lods
lods
sbb
push
scas
mov
inc
fistpll
je
cmc
bndldx
add
lock
mov
lcall
sti
add
arpl
repnz
push
cmpsl
jae
or
andb
jbe
call
mov
negl
xor
enter
lock
scas
sbb
xlat
push
and
add
adc
xlat
scas
pop
fsubs
push
out
in
call
push
in
arpl
decl
insb
jb
scas
adc
and
xchg
push
dec
daa
scas
cmpsb
jge
push
out
mov
decl
pop
inc
jb
dec
push
pop
xchg
mov
fs
fcomi
movswl
ja
fucomi
and
push
aad
lcall
sbb
add
jns
jmp
inc
leave
dec
call
add
das
inc
jne
adc
ja
clc
fisttpll
in
or
mov
pop
inc
mov
dec
mov
loopne
cmp
inc
in
jg
and
xchg
fistps
inc
mov
mov
sarb
mov
lea
add
push
leave
add
pop
xchg
jmp
divl
add
adc
ss
add
loopne
ret
in
fcom
mov
pushl
sbbl
daa
pop
leave
pushf
mov
jo
and
mov
xchg
jl
lock
fists
dec
dec
cs
bound
sahf
mov
fidivrs
insb
lods
movsb
sub
mov
fldt
inc
push
fs
add
pusha
push
sub
into
mov
dec
adc
fs
daa
cmp
xor
lea
or
adcb
addr16
ss
mov
cwtl
loop
mov
inc
lcall
fildl
push
fwait
add
rorb
mov
adc
outsl
stc
jg
xor
stos
or
pop
or
imul
sub
ud0
fisttps
mov
adc
xchg
adc
cmpsl
outsl
test
setp
mov
decl
imul
subb
pop
or
mov
fimull
gs
pop
rolb
call
push
jno
sub
int
cld
sbb
aaa
add
pop
pop
mov
lahf
mov
sar
mull
push
sub
and
cmp
mov
hlt
dec
js
outsl
subb
stc
outsb
lock
clc
mov
out
and
xchg
or
outsl
xchg
std
ljmp
push
dec
add
xchg
xor
pusha
add
daa
fbld
daa
pushf
mov
adc
rclb
lods
xchg
mov
stc
lock
fnstsw
sbb
jg
lret
add
add
cmpsl
fdivp
add
cld
scas
pop
icebp
mov
push
mov
mov
jmp
add
mov
mov
int
xchg
mov
dec
rclb
test
clc
ljmp
jno
mov
ret
pushf
add
cmpsl
mov
ljmp
outsl
fwait
xlat
loopne
pop
mov
mov
mov
scas
mov
jle
mov
ret
imul
dec
jb
cmp
lcall
rorl
or
outsl
lods
cld
test
shrb
mov
mov
pushf
ret
lock
add
sarl
call
out
adc
ret
pop
jb
push
ljmp
add
adc
lods
scas
jo
idivb
leave
jnp
push
xchg
jno
pushf
push
jns
cmpsl
mov
mov
add
ljmp
jmp
dec
call
mov
mov
rorb
int
sub
or
mov
xchg
pushf
inc
fs
call
push
or
push
jb
fcoml
in
adc
and
jg
jmp
xor
in
stos
in
pop
insb
dec
push
adc
leave
and
shlb
mov
adc
mov
pop
pop
mov
sbb
ljmp
push
fstpt
add
inc
adc
test
pop
rcrb
lcall
mov
mov
loop
daa
enter
and
lods
jl
add
sbb
insb
in
incl
pop
inc
cli
pop
cmpsl
push
xchg
jbe
jno
subl
repz
jg
jae
adc
test
mov
cmp
push
sub
dec
daa
dec
pop
es
jne
mov
mov
adc
popa
xchg
movsb
push
nop
out
pop
add
mov
popf
ret
or
out
jg
jmp
jge
int
inc
je
ret
pop
outsl
mov
repz
cs
lcall
cmp
les
push
sbb
scas
push
sbb
hlt
fcmovnb
out
orl
addb
lods
push
pop
pusha
repnz
mov
in
xchg
call
decl
repnz
nop
push
or
push
daa
nop
nop
pop
call
sbb
xchg
les
daa
xor
pop
xor
enter
dec
push
lds
jle
push
add
dec
shlb
fs
pop
or
fwait
mov
add
int
fwait
mov
fdivl
add
push
dec
je
es
loop
pop
testb
lea
sahf
xlat
pop
and
jg
push
jmp
movsb
push
add
mov
inc
jne
adc
mov
std
adc
negb
dec
std
sti
aaa
pop
decb
jne
or
mov
loopne
test
lods
nop
addl
vmwrite
loop
sar
mov
aas
enter
sub
or
or
mov
xor
insb
adc
and
or
lret
and
ljmp
pop
aam
sahf
inc
xor
add
std
rcrl
ret
rdtsc
sub
fnstenv
das
dec
xor
mov
mov
jnp
push
scas
clc
mov
adc
es
mov
and
pop
sbb
xor
mov
sbb
repz
and
sub
outsl
push
jns
dec
xor
aad
xchg
mov
sbb
nop
mov
add
add
push
popa
mov
add
xchg
daa
xchg
sbb
mov
xchg
or
dec
int3
push
pop
sub
shr
jmp
pop
add
dec
daa
mov
cmp
push
add
and
mov
jbe
subl
mov
push
enter
dec
fbstp
pop
daa
jg
call
pop
fnstcw
fs
sbb
pop
clc
cld
setae
out
sbb
idiv
sar
jecxz,pn
xchg
inc
push
repnz
mov
push
push
xchg
fldt
cmpsb
in
dec
inc
leave
js
and
test
dec
ja
rolb
ja
or
int3
aad
ja
inc
imulb
mov
fsts
ljmp
pop
repnz
nop
jo
pop
je
test
add
dec
push
adc
or
dec
scas
jp
es
cltd
mov
lea
es
inc
leave
mov
mov
dec
clc
insl
jmp
pop
cmc
push
je
and
xchg
lret
adc
and
ja
push
aas
pop
aam
fcomi
adc
adc
scas
jp
cwtl
jge
dec
arpl
sahf
fstps
ja
inc
cmc
add
out
ds
inc
dec
pop
aas
roll
decb
mov
nop
lcall
sbb
adcb
cmp
stos
neg
addr16
insb
jns
int3
pop
int
jmp
scas
jae
int
adc
push
test
int
pop
cmc
scas
jecxz
stos
es
in
addr16
call
ljmp
int
out
and
push
jb
shrb
gs
sahf
scas
mov
jno
in
push
lahf
push
jo
cmp
pop
add
insl
jmp
push
add
jecxz
cwtl
jo
jnp
cwtl
xchg
daa
jg
pop
mov
popa
pop
jg
pushf
daa
or
or
insl
daa
jp
mov
fisubrs
dec
pusha
jo
push
cmp
xchg
enter
inc
gs
shlb
loop
rorl
cltd
pusha
insb
into
sub
xor
cmp
pusha
sbb
push
xchg
pop
insb
add
pop
shrl
xchg
pop
push
rorb
scas
fisttpl
rclb
xchg
daa
cmp
push
cltd
xchg
lret
xchg
xor
popa
movsb
add
add
pusha
pushf
push
std
lcall
int
pop
jg
mov
in
jbe
nop
jge
inc
cmpsb
mov
cmpsb
mov
movsl
jmp
mov
daa
inc
out
dec
into
popa
fs
sub
ljmp
mov
daa
fisttps
adc
jle
push
fs
mov
fnstsw
mov
fwait
pop
and
scas
xchg
sahf
pushf
add
mov
inc
hlt
incl
lcall
rcl
pop
in
push
and
mov
decl
cli
addr16
or
jo
das
jle
mov
hlt
inc
sub
call
mov
mov
jnp
jmp
adc
mov
int3
xor
pop
leave
addb
pop
lret
pavgb
in
leave
jmp
out
cld
mov
outsl
lock
adc
adc
pop
movsb
fs
shrl
sahf
push
lret
jne
pushf
montmul
cmpsb
inc
dec
mov
lcall
rcr
inc
mov
xlat
ds
pop
loope
push
mov
xor
mov
lods
sbb
test
out
testl
pop
hlt
pop
lea
insl
call
pushf
sti
idiv
popl
shrb
into
mov
dec
enter
or
add
push
add
add
add
adc
pop
cld
xchg
insb
hlt
or
push
mov
jmp
mov
in
push
leave
adc
movsb
cmpsb
and
adc
lea
adc
in
lea
call
adc
xchg
mov
xor
lahf
jg
ljmp
push
scas
pusha
push
test
xor
mov
mov
mov
popa
or
ret
jg
cmc
mov
sub
in
in
sub
mov
add
out
cli
cs
push
inc
ljmp
sub
xlat
push
repnz
in
add
mov
ljmp
xchg
fisttpll
data16
clc
mov
dec
mov
ja
or
scas
jno
pop
ljmp
pop
xchg
add
push
sbb
push
rcll
jne
add
pushf
xchg
fucomi
adc
mov
jo
mov
or
dec
dec
repnz
fbld
push
out
fiadds
sbb
mov
daa
dec
addb
lock
jo
data16
ja
mov
jle
xchg
pop
pushf
inc
lods
dec
cmp
jg
iret
or
xor
inc
mov
mov
dec
daa
cmpsl
add
add
adc
jbe
push
fcomip
cs
ja
hlt
dec
out
push
test
leave
loopne
decl
je
xchg
mov
call
and
or
adc
cld
lds
cs
daa
add
xor
mov
mov
xchg
xchg
pop
and
faddl
divb
lret
addr16
adc
add
push
ljmp
in
jbe
or
lds
aas
fdivl
cltd
mov
mov
repnz
icebp
clc
jns
icebp
pushl
dec
enter
fldl
push
mov
js
cmp
add
aaa
fs
std
sbb
pop
aad
push
loopne
mov
test
dec
fstpl
and
xacquire
pop
in
loopne
sbb
xchg
push
std
incl
push
sub
jmp
xchg
add
sti
jg
fimull
and
pop
add
mov
dec
lret
callw
and
das
push
ja
xchg
outsb
pop
mov
fbld
mov
decb
dec
adc
mov
and
insb
loopne
push
mov
rorl
cmpsl
push
inc
cmp
insb
jmp
xchg
or
jne
fists
mov
mov
or
repz
mov
adc
fcom
or
lods
dec
fstpt
add
xchg
sbb
mov
pop
in
fisubrl
xorb
cmp
cmp
rcr
xchg
push
and
xchg
repnz
inc
loope
adc
push
test
popf
mov
or
clc
lods
pop
xor
pusha
pop
sbb
add
testb
loop
std
dec
and
sbb
mov
mov
stos
xchg
push
stos
and
scas
add
loop
in
mov
mov
sbbb
lods
shll
fisubrs
loop
in
and
not
ja
and
add
ret
ja
lcall
mov
dec
mov
lahf
sahf
and
stos
cwtl
jecxz
sub
sbb
mov
xor
fsubrs
xor
jb
mov
jg
add
inc
or
sbb
nop
cwtl
jo
adc
pushl
jl
or
std
lock
pop
lods
lods
sti
pop
clc
fcmove
xor
imul
test
decl
fcoms
xchg
push
js
pusha
mov
std
sbb
insl
scas
add
mov
mov
jno
or
xchg
inc
scas
hlt
stos
lcall
cwtl
xchg
movsl
mov
sbb
mov
scas
push
xchg
xor
mov
call
adc
scas
bound
push
xor
rorb
sar
ljmp
dec
add
mov
out
aad
pop
inc
es
jge
mov
ljmp
or
in
mov
xlat
push
sbb
ret
call
pusha
jo
jnp
call
fidivrl
pop
mov
cmp
mov
mov
addr16
outsl
cli
out
jle
add
push
cmp
shll
ret
mov
in
divb
inc
mov
repnz
lock
jg
jp
xchg
sbb
xorb
mov
pop
xlat
xchg
mov
scas
and
lcall
mov
sar
ljmp
add
dec
push
ss
xchg
in
nop
add
out
in
push
or
pop
mov
push
sub
lcall
lods
cmp
cmpsb
mov
jl
mov
addb
or
bound
push
cmc
add
std
or
popf
cmp
lods
pop
rcrb
pushf
sub
hlt
arpl
addb
sahf
pusha
cld
jmp
lock
inc
xchg
mov
daa
pop
sbb
ds
rcr
fsubr
sarb
jecxz
lock
paddd
push
inc
mov
outsb
sbb
mov
sbb
in
les
add
jo
push
mov
fcmovnbe
cmp
ja
pop
mov
push
in
or
jns
xchg
cld
push
or
divl
loopne
dec
and
or
inc
vpandn
inc
add
xchg
mov
mov
das
jp
xchg
lods
jg
sbb
push
in
mov
lahf
mov
pop
cs
fadd
jne
jae
inc
sub
fnstenv
mov
int3
cmp
mov
roll
push
pop
xchg
aam
fucomip
lods
add
incl
retw
cmc
mov
pop
adc
or
hlt
or
aam
push
dec
in
cmovno
push
adc
repnz
push
mov
mov
mov
ds
mov
xchg
out
pop
aaa
xchg
cs
pop
aad
test
mov
repnz
fmull
mov
in
roll
mov
out
mov
inc
loope
inc
imul
push
div
dec
ja
jno
fidivl
mov
mov
adc
outsb
or
adc
mov
or
mov
mov
mov
in
iret
sbb
mov
and
pop
in
inc
out
jl
fs
test
mov
inc
sbb
inc
jg
stos
and
pop
cltd
inc
mov
xchg
ret
fimull
add
in
inc
push
repnz
dec
jb
aad
sbb
pop
adc
bound
js
jno
mov
clc
btc
xchg
sbb
add
fists
jg
fldenv
arpl
adc
sub
add
loope
mov
mov
aas
sbb
jns
shll
cmpsl
mov
icebp
fisttps
faddl
jns
cmpsl
xchg
mov
pop
pop
dec
repnz
sbb
jp
in
add
jb
jb
or
lcall
mov
inc
movsb
daa
add
hlt
mov
sbbb
std
pushl
add
mov
inc
and
add
or
or
icebp
inc
ljmp
push
or
or
push
sbb
cmc
fxam
push
mov
mov
mov
je
push
jns
add
add
mov
xchg
test
pop
xchg
js
or
jmp
jb
push
aam
or
pop
jl
or
lcall
in
jbe
mov
add
ljmp
jb
ja
jg
and
jbe
pop
jge
xchg
inc
roll
sbb
jnp
mov
movsb
clc
mov
int
rolb
cltd
sub
or
gs
and
sub
cmp
inc
fwait
cmp
ficoml
das
clc
outsl
lcall
mov
xchg
xchg
or
fistpll
adc
rcll
push
pop
sbb
cmp
jmp
sbb
push
sbb
pop
and
dec
dec
and
push
inc
adc
cmpsb
loop
ret
push
dec
xchg
movsl
push
cwtl
pop
and
pavgw
cmpsl
call
adc
je
xchg
sarl
push
rol
push
fidivs
incl
sbb
and
mov
incl
inc
and
stos
call
aaa
push
lret
movsb
cmp
pop
lock
mov
add
xchg
xor
stc
lods
jg
popa
repnz
call
mov
adc
popf
dec
ret
xchg
sbb
push
loopne
inc
cltd
int3
shlb
test
fs
cwtl
popf
or
mov
js
ficoml
pushl
in
inc
sti
cmovle
and
sbb
mov
pushl
push
xor
dec
das
push
pushf
int3
in
dec
out
punpcklbw
jbe
cli
incl
jg
lret
pop
mov
lods
nop
mov
shl
into
neg
in
dec
loop
shrb
inc
into
push
jle
lds
and
or
cmp
pop
out
ljmp
xchg
andl
lds
sbb
outsl
and
movsb
lds
not
sbb
or
hlt
or
fwait
inc
inc
jg
insl
mov
sub
sbb
daa
and
and
cmp
adc
push
push
mov
arpl
outsb
mov
fstpt
adcl
mov
pushf
and
mov
in
lock
ljmp
adc
push
clc
push
cli
movsb
jge
outsl
sti
xor
inc
mov
inc
add
aad
fnsave
or
fidivs
testb
cmpsl
scas
mov
push
nopl
iret
xchg
jno
icebp
ja
aad
xlat
jb
in
sahf
lods
and
cli
sbb
add
sbb
push
xlat
pop
mov
jb
dec
adc
pop
mov
push
and
add
dec
mov
movsb
std
sbb
in
sub
mov
sub
lods
testb
lods
jo
fdivrs
icebp
or
imulb
push
or
repz
loop
lcall
gs
xor
adc
push
adc
adc
jb
cmpb
sbb
cmp
jnp
sbb
or
jo
jmp
add
pop
cltd
and
lods
push
jb
xchg
xchg
mov
and
adc
pop
leave
lock
mov
pop
pop
lret
inc
push
shld
jo
movsb
mov
xor
push
fisttpll
jg
bound
cmp
jno
sbb
push
rcrb
fistpl
fdivl
daa
inc
lds
rclb
mov
push
sbb
sbb
cmp
sbb
sbb
incl
fwait
pop
ret
mov
pop
or
hlt
cmp
mov
data16
pop
loope
xlat
dec
jl
daa
mov
cmp
mov
cmpsb
xchg
pop
mov
cmpsb
mov
out
cwtl
inc
add
add
pop
ror
add
sub
lock
ljmp
mov
mov
jle
rclb
in
int
adc
mov
fbstp
push
loopne
pop
pushf
push
pop
lods
cmc
bound
dec
pusha
xchg
xchg
ds
jo
cmp
mov
sub
mov
cmp
mov
pop
and
out
or
dec
xchg
dec
into
mov
push
wrmsr
xchg
or
loope
mov
test
sti
jo
fbstp
add
movsb
outsb
mov
pop
mov
cmp
add
pop
call
jg
xor
or
pop
cmc
jne
or
or
fcmovb
jmp
subl
iret
iret
dec
mov
andl
es
movsl
mov
push
xor
ds
add
and
and
push
ljmp
scas
mov
push
in
hlt
add
pusha
or
pusha
push
jno
dec
adc
add
sbb
test
mov
jo
xchg
test
das
sarb
add
scas
dec
jb
mov
loopne
ljmp
clc
jo
adc
cmpsb
lahf
cmp
je
or
ror
jl
addr16
inc
pop
sar
nop
clc
xor
xlat
rorl
aad
loop
testb
or
ret
into
cli
sub
cmp
adc
ljmp
cmpb
mov
movsl
mov
out
js
mov
and
inc
add
push
cld
out
cli
or
js
push
push
jno
inc
cmpsl
out
repnz
ret
xchg
push
add
jl
lods
mov
pop
dec
ja
cmc
jb
pop
or
daa
xorl
cli
add
add
roll
mov
push
daa
ljmp
out
cli
cs
popa
enter
hlt
mov
mov
addr16
and
xchg
and
sahf
xchg
insb
inc
push
xchg
icebp
jg
pop
rorb
inc
add
jno
push
not
aad
fisttps
push
push
mov
xchg
clc
dec
js
jo
or
shll
cli
mov
in
mov
jle
jg
jg
dec
add
and
ss
das
push
or
pop
test
jo
push
ljmp
add
ljmp
or
or
add
or
jg
incl
mov
xchg
cmc
inc
pop
dec
fs
mov
jmp
scas
cmpsb
mov
pop
inc
push
insl
add
sti
scas
popf
sub
out
push
movsb
sbb
test
std
inc
or
cmp
pusha
in
fstpt
pop
push
mov
je
jl
es
lcall
jge
pop
mov
push
dec
fstpt
das
mov
sbb
sbb
out
call
or
dec
mov
add
xchg
pop
mov
jg
and
leave
int
bndstx
xchg
icebp
mov
mov
call
ds
sub
fcomps
add
sbb
int
cld
sub
cmp
pop
xor
jo
jle
sar
call
mov
outsl
outsl
mov
popa
in
mov
outsl
add
cmpsb
push
dec
shrb
fcomps
dec
fiaddl
add
add
push
enter
inc
or
pusha
or
xchg
aad
mov
jle
xchg
popa
pop
xor
lods
jg
movsl
stc
jne
mov
inc
roll
add
mov
loop
cltd
xor
in
scas
inc
aaa
pop
fisttpl
shrb
xor
aad
or
jb
mov
fs
mov
fcomi
add
xor
fstpt
add
fsubrl
movsl
mov
mov
sti
ljmp
roll
jge
adc
dec
aam
ret
xlat
bound
ficoml
xor
ret
sbb
or
adc
fs
add
pop
add
dec
sarl
arpl
add
jb
or
loope,pn
adc
pop
lret
cmp
jle
push
hlt
push
mov
rclb
scas
ja
decl
xchg
pop
fisubs
push
sub
xchg
hlt
lcall
ljmp
add
jg
fs
add
decl
fisttps
fsts
or
arpl
or
lcall
pop
cld
das
xchg
push
or
call
pop
xchg
push
jns
jecxz
aas
test
pushl
leave
fnstsw
in
test
jmp
cmpsb
in
lahf
add
decl
push
mov
loope
cld
xchg
push
fwait
loope
not
xchg
aaa
fcoml
das
adc
std
repnz
mov
jo
ljmp
leave
repz
and
push
enter
add
sbb
add
pop
xor
ss
popf
xor
addl
cli
adc
lret
mov
cld
jp
in
cmp
inc
daa
add
js
push
jl
in
push
test
or
shll
bound
or
or
sbb
inc
iret
or
add
js
or
sub
pop
pusha
repnz
aaa
sub
push
outsb
push
sub
push
sbb
mov
push
std
ja
and
test
pop
xchg
xchg
lahf
pusha
mulb
rorl
rclb
pop
rcr
xlat
es
hlt
das
stos
js
ljmp
ret
cmovg
sbb
pop
xor
and
outsl
das
xor
ds
pop
decl
out
cmp
into
xchg
jmp
fsubl
adc
cltd
cmpsl
add
pusha
lods
add
in
add
movsl
sbb
add
cli
outsl
cmpsl
pop
fisttpl
ja
iret
aad
mov
sbb
pop
cmpsl
lock
xchg
ljmp
imul
jl
stos
jae
or
adc
imul
pop
leave
dec
addb
in
pusha
pusha
mov
movsb
mov
hlt
pop
cvtps2pd
mov
mov
adc
jmp
lret
add
mov
xor
pop
daa
into
inc
dec
push
add
dec
dec
push
jo
mov
xchg
mov
inc
iret
pop
stc
popf
sbb
out
aam
pop
sbb
ljmp
push
aad
lods
int3
sbb
pop
pop
jge
inc
push
jg
mov
sar
lcall
es
repnz
aas
dec
sbb
mov
push
jge
notl
pop
push
mov
decl
lock
adc
cwtl
push
mov
push
ds
push
lret
daa
cmp
mov
stos
sbbl
sbb
xor
test
xchg
aas
mov
push
aad
sub
loope
imull
xchg
popf
pop
mov
pop
cmp
cmp
aas
out
or
loop
pop
lock
adc
movsb
mov
push
xchg
pop
mov
in
notb
pop
dec
clc
je
mov
aas
mov
dec
fists
daa
sub
cld
xor
jle
pop
iret
jg
icebp
push
in
fiaddl
adc
decl
sbb
int3
adc
jne
mov
fmuls
outsl
icebp
add
rorb
rcrb
jb
loopne
sub
xchg
rorb
out
jb
and
in
aas
daa
or
leave
dec
mov
stos
adc
add
fldt
clc
lret
jnp
push
dec
adc
pop
pop
jnp
cld
les
inc
adcb
sbb
sub
incb
inc
addr16
xchg
sets
push
mov
stos
adc
aas
inc
add
sub
inc
out
push
pop
mov
and
mov
mov
push
dec
lahf
ja
sbb
in
lock
or
cmp
lods
inc
js
ja
inc
in
add
loopne
xchg
sbb
in
test
sbb
out
pop
xchg
dec
mov
orb
or
jecxz
cmpsl
mov
pop
push
xor
jne
lcall
xor
jo
push
cmc
fbstp
imul
das
aad
pushl
sbb
ret
cmp
test
inc
jg
push
rorl
jbe
sti
enter
jg
addr16
inc
xor
add
jecxz
mov
sbb
clc
addr16
jo
sbb
or
cld
ljmp
mov
shl
stos
test
incl
inc
push
sub
push
push
pop
inc
push
mov
ffreep
inc
push
xchg
aaa
incb
sahf
sarb
iret
mov
or
adc
dec
pop
neg
or
dec
sahf
xchg
adc
lcall
jmp
push
loopne
push
xor
pop
mov
popa
lret
sbb
loopne
ljmp
push
cmp
fdivr
outsb
outsl
jo
pop
sahf
jae
jne
xchg
pop
and
sti
lret
jns
xchg
dec
and
aaa
xor
inc
xor
scas
clc
pop
lret
das
or
push
inc
ret
jb
mov
aaa
dec
inc
dec
pop
lds
xchg
incl
push
pop
mov
add
mov
sub
ljmp
pushf
xchg
mov
or
push
fnstcw
mov
or
jo
mov
ljmp
pop
mov
scas
and
cs
dec
push
mov
xor
xor
add
decl
flds
add
add
subl
add
sub
out
clc
out
jb
dec
scas
inc
push
add
shrl
lcall
pop
push
mov
cmp
idivl
and
sub
and
mov
pop
add
or
pop
leave
add
dec
data16
adc
out
insl
sub
mov
push
lock
dec
faddl
enter
scas
dec
pop
inc
testb
mov
inc
adc
pop
aam
xchg
cmp
ljmp
mov
jne
push
imul
dec
or
pop
cld
pop
sbb
movsl
jnp
or
cmp
fimuls
pop
cmc
repz
les
inc
cmp
out
sub
xchg
dec
xchg
sbb
mov
add
loopne
sub
clc
mov
rcll
sbb
push
ss
mov
adc
ljmp
insb
or
aas
push
pop
cmp
xchg
inc
dec
loopne
and
mov
mov
jge
inc
loopne
dec
fcoms
je
push
sbb
ja
inc
sbb
jmp
out
pop
xor
pushl
test
daa
mov
cmp
gs
testb
jg
jp
testl
pop
test
push
aaa
or
push
push
jle
nop
mov
ljmp
sbb
movsb
and
inc
inc
push
outsl
and
add
and
and
mov
push
push
ja
pushl
jg
jmp
add
mov
ret
add
add
sbb
lret
enter
add
sbb
insb
testb
push
cmc
and
dec
and
dec
or
cwtl
out
incb
call
inc
js
fistpll
sahf
sbb
adc
xor
mov
mov
adc
and
ljmp
dec
or
rcrb
sahf
imull
pop
in
push
cmpsb
and
push
cmp
adc
je
popa
mov
mov
add
imul
mov
test
stos
int3
mov
adc
adc
lods
dec
rorb
push
cmp
out
out
ss
and
inc
loopne
sahf
pop
mov
jl
push
fcmovb
jns
aad
jmp
aas
pop
mov
je
rclb
mov
mov
mov
pop
std
sub
and
dec
cld
add
rolb
xlat
or
sbb
mov
or
imul
adc
push
adc
adc
cmp
xor
jbe
mov
das
push
lcall
pop
and
mov
xor
data16
aas
addl
lcall
movsb
fs
mov
fwait
aas
movsl
mov
repnz
xor
sar
lret
sbb
jp
jg
pop
ss
mov
mov
jne
sahf
fsubs
push
or
aas
pop
nop
fsubrl
incl
adc
mov
sbb
add
or
cltd
test
adc
repz
mov
stos
pop
and
push
or
add
push
dec
mov
fs
and
mov
in
loopne
popa
xor
mov
shll
mov
sub
mov
add
mov
in
mov
pop
jle
loope
mov
or
fnstcw
lods
mov
push
addr16
mov
loopne
jb
dec
add
adc
daa
and
sbb
fadds
fs
pop
fimull
dec
pop
out
clc
loop
cmp
je
and
repnz
out
lahf
mov
bound
add
add
sub
xor
mov
push
hlt
loopne
stc
push
push
mov
push
movsb
sahf
out
dec
xor
incl
sbb
addb
xchg
data16
lcall
jae
jne
cmp
push
cmp
test
jo
push
aam
jo
andb
push
push
cmp
lcall
sbb
push
push
push
xor
mov
cmp
adc
imul
xchg
incl
pop
js
imul
inc
add
cmp
iret
repnz
insl
add
je
ljmp
ja
inc
push
xchg
es
adc
das
cwtl
mov
lock
imul
call
cmp
dec
or
fstps
jl
inc
sbb
pop
inc
adc
stos
cld
stos
andl
push
sbb
inc
ud2
adc
adc
lcall
push
hlt
and
or
push
sbb
addr16
rcrb
enter
jbe
rorb
loope
mov
xchg
mov
ds
mov
mov
sbb
add
mov
pop
add
pop
jecxz
call
out
fsubs
mov
pop
and
jo
das
cltd
data16
add
leave
insl
xchg
notb
fidivrs
add
pushl
and
aam
in
outsb
test
ret
xchg
cs
test
lcall
xor
rorl
ret
lea
in
add
and
int
mov
pop
fidivl
cli
or
pop
adc
inc
push
icebp
rdtsc
hlt
adc
movsb
jo
and
sbb
fildll
sbb
in
int3
mov
ret
inc
pop
lock
stos
lods
ljmp
lods
push
popf
imul
sbb
call
in
jmp
inc
jno
pop
xchg
inc
push
add
inc
stc
mov
adc
mov
ljmp
std
decl
js
jne
loopne
jnp
leave
inc
mov
test
xchg
dec
idiv
ljmp
movsl
jo
loopne
nop
mov
or
jle,pt
push
mov
push
jbe
scas
inc
and
lcall
pop
clc
jg
or
adc
lds
iret
inc
jmp
aam
movsl
jmp
dec
jp
fiaddl
int3
call
cmpsb
pop
mov
lahf
gs
or
rcll
jbe
dec
pop
ljmp
decl
xor
dec
cmpsl
jo
cmp
sahf
xchg
pop
out
shl
mov
jmp
das
mov
fsubs
stos
addr16
repz
ret
mov
enter
outsb
dec
leave
fwait
aaa
and
inc
add
cli
int3
int
mov
insl
jno
or
gs
aas
mov
ljmp
jbe
lea
aas
ret
cmpsb
sub
int3
loop
add
rcrb
test
sbb
stc
lods
lds
mov
insb
scas
idivl
inc
cmp
xchg
mov
jmp
lods
xchg
std
std
into
popa
push
and
stos
cmp
decb
loope
lcall
adc
out
in
xchg
les
cmp
int
dec
lcall
ficoms
sub
mov
es
jno
loop
mov
test
lret
jmp
or
jmp
push
jl
mov
pushf
das
lea
mov
inc
inc
push
xchg
cmc
fcomip
jmp
test
lea
mov
ljmp
idivb
mov
jmp
in
cmp
xor
lcall
repnz
mov
fmull
call
leave
movb
bnd
cltd
jne
fistpl
cmp
and
shlb
fdivr
nop
pop
cmp
scas
xchg
ja
cmpsb
mov
mov
cmpsl
push
mov
cld
ljmp
dec
in
ss
push
scas
sbb
mov
fdivp
jge
pop
push
mov
das
jge
push
add
icebp
mov
dec
dec
bound
scas
push
xchg
test
pop
ficomps
sub
lcall
or
mov
imul
sub
mov
cwtl
pop
jge
pop
les
mov
stos
sub
mov
divb
add
cmp
bnd
addr16
jmp
ljmp
jns
pop
inc
xor
pop
push
dec
pop
inc
sub
ja
lock
push
jmp
add
faddl
jle
out
mov
sar
fimull
jb
stos
adc
arpl
mov
decl
push
stos
and
dec
mov
or
sub
mov
add
inc
mov
insl
nop
cltd
mov
push
cs
loop
dec
insl
std
mov
ljmp
push
xor
outsl
adcl
repz
add
outsl
ja
lock
cli
mov
imul
insb
incl
fcompl
xor
cmp
push
dec
pop
xor
insb
sahf
xor
lret
inc
push
fisubs
xchg
insl
les
inc
xchg
cmp
je
bound
jg
cli
pop
inc
xchg
and
addb
and
add
ss
add
stos
lret
adc
add
pop
lea
outsb
inc
outsb
pop
decl
ja
sub
shll
adc
outsb
psraw
ljmp
push
push
or
xor
dec
dec
jbe
fwait
adc
cmp
call
into
pop
ja
inc
sbb
ja
adc
xchg
lret
lock
fists
adc
jns
cmp
pop
inc
xchg
xchg
rolb
push
xchg
test
dec
push
xchg
pop
mov
hlt
bound
push
popa
fidivs
cld
repz
ficomps
imul
mov
and
push
xlat
sbb
pop
sahf
push
int
inc
and
sub
or
int3
test
mov
bound
sar
xor
sub
add
mov
pop
arpl
mov
sbb
mov
aaa
ret
loopne
insb
mov
jo
push
clc
call
imul
ret
lret
in
sub
outsb
pop
and
xchg
push
ljmp
iret
nop
fcmovu
push
pop
sub
cmp
test
pop
and
push
lret
or
call
cmp
test
ret
xor
lock
ljmp
mov
push
xchg
push
into
push
ljmp
pop
lcall
lcall
mov
cld
push
xlat
push
and
cmpsl
add
or
jae
inc
dec
adc
sbb
dec
jo
js
push
hlt
daa
fwait
sbb
jmp
subl
jge
sub
cmp
test
sbb
fidivrl
dec
inc
cmp
loopne
mov
push
lods
sub
hlt
aam
ficompl
addr16
mov
xchg
sbb
cmp
or
inc
shr
pop
cld
mov
jo
dec
in
xor
dec
shl
sub
mov
insl
lcall
jmp
inc
repnz
cmpsb
pusha
lock
push
mov
cwtl
stos
cmp
dec
inc
jo
jae
jge
js
int
fs
xor
nop
jmp
add
mov
inc
xchg
repz
dec
jmp
pop
js
sahf
inc
mov
dec
fwait
ss
xor
push
inc
cltd
es
in
lcall
pop
inc
nop
fbstp
mov
les
push
test
lods
cltd
push
cmp
jg
lods
sub
mov
pop
or
pop
inc
mov
push
lret
call
jno
in
loop
mov
mov
frstor
jnp
les
imul
outsl
clc
pop
pop
xlat
mov
ffreep
inc
andb
clc
fwait
jl
push
cltd
hlt
cmp
ror
jg
sti
stos
in
inc
jo
jb
inc
cmp
nop
pop
adc
jg
pushl
lods
push
xchg
lds
insb
mov
out
push
scas
filds
mov
icebp
jo
test
xor
xor
fwait
dec
push
xchg
mov
xlat
pusha
xchg
push
popa
popa
movl
hlt
mov
xchg
cmpsl
cmp
dec
lcall
jmp
inc
fisttpll
pop
in
mov
and
adc
mov
rol
push
je
cli
incl
jns
mov
gs
mov
jb
movsl
lods
inc
inc
cmp
mov
outsb
add
pop
movsb
shlb
mov
data16
test
push
outsb
cld
xchg
out
into
jne
in
repz
inc
sub
lahf
flds
sub
and
sub
or
rcll
add
or
decl
mov
arpl
je
xlat
xor
imul
mov
outsl
dec
outsb
inc
ja
call
xchg
lods
and
add
cmp
ljmp
mulb
addr16
sbb
sub
in
in
lea
test
mov
ret
mov
or
enter
adc
daa
or
mov
add
jno
cmp
ljmp
xchg
outsl
jg
inc
or
dec
jne
loopne
mov
xor
push
dec
loopne
icebp
jg
and
push
fsts
or
push
push
cmp
mov
ljmp
in
mov
pushf
mov
cmp
dec
push
add
shrb
jle
fbld
bound
in
inc
jns
or
dec
push
jns
adcb
inc
scas
cmpsl
sar
jnp
fcompl
int
ret
and
inc
push
faddl
pop
les
xchg
pop
enter
and
mov
mov
ja
les
push
pop
aam
jne
mov
sahf
aaa
dec
and
out
xor
jo
test
pusha
in
jne
jge
sbb
inc
loope
push
cwtl
inc
ds
ljmp
ret
push
add
movsb
mov
mov
add
idiv
popa
fs
nop
add
sub
clc
adc
jge
push
or
clc
and
inc
and
ljmp
inc
sub
test
mov
ja
push
dec
je
inc
subl
adc
xor
push
dec
mov
and
or
shll
mov
or
push
push
jl
sub
xor
rclb
adc
in
fwait
cli
incl
jae
xchg
daa
lock
adc
push
sti
ds
sub
push
pop
aam
movsb
or
push
mov
push
dec
jecxz
xor
lock
pusha
std
ljmp
mov
lcall
push
aaa
lock
adc
push
jmp
add
xchg
inc
or
lods
xor
mov
inc
std
xor
and
inc
pop
or
jg
adc
add
inc
dec
mov
sti
or
sti
xchg
pushf
add
and
stc
pop
dec
or
dec
inc
getsec
cld
cmp
push
jnp
pop
lock
push
pop
or
sub
mov
shrd
call
add
sub
and
out
lcall
and
inc
adc
pop
adc
call
push
mov
outsl
cli
or
add
jle
out
gs
add
push
adc
fcomp
call
shlb
adc
cmp
jle
jg
cwtl
push
ja,pt
mov
leave
in
adc
xor
lea
pushl
push
mov
loop
mov
gs
popa
js
adc
push
sub
adc
or
and
and
adc
test
add
adc
dec
ljmp
sub
jmp
dec
js
lret
adc
icebp
and
lock
dec
cli
ret
arpl
lahf
sti
scas
clc
sub
push
fs
ljmp
aas
rorb
push
push
insb
adc
or
sbb
lock
add
xlat
lock
mov
jb
and
xor
jp
xchg
mov
aam
es
or
adc
mov
add
es
cwtl
or
or
outsl
sbb
xchg
push
lock
mov
xor
inc
sbb
add
dec
es
outsl
ljmp
push
filds
push
pop
mov
cmp
fwait
pop
inc
cmp
sbb
decl
pop
push
or
adc
xor
cmp
lock
push
pop
xchg
decl
dec
fwait
out
jmp
test
adc
sbb
outsb
insl
fistpl
dec
outsl
aam
das
xchg
push
mov
cltd
lock
add
rclb
arpl
ljmp
sub
cmp
outsb
jmp
mov
cmp
push
push
add
add
or
jecxz
lcall
std
ds
ss
or
imul
sarl
sbb
lock
sbb
aaa
or
lock
dec
cmpl
aad
add
mov
fisubl
lock
shlb
xor
pushf
jno
aaa
pop
incl
leave
adc
push
test
stos
test
jg
or
shrb
outsb
pop
pop
mov
lock
inc
notb
std
mov
push
add
ljmp
push
mov
pop
dec
push
sub
add
adc
cli
iret
lcall
lock
add
mov
int
xchg
push
mov
scas
mov
sbb
lock
out
jg
xor
popa
pop
sbb
adc
jne
sub
or
xchg
add
std
scas
or
and
or
rorl
push
lret
or
or
or
idiv
xchg
push
jb
pop
mov
sbb
loop
adc
decl
mov
jg
or
or
mov
mov
enter
pop
inc
int
adc
inc
pusha
dec
out
push
or
sbb
mov
and
lds
add
or
lock
mov
push
call
and
dec
jg
shrb
js
addl
pcmpeqd
shr
decl
adc
pop
cmc
in
push
mov
adc
adc
pop
pop
cmp
cmp
pop
push
cmp
pop
pushl
roll
loopne
setge
push
repz
mov
aaa
std
ljmp
cmp
push
add
fcomi
sbb
mov
sub
or
lret
jmp
cld
and
stc
sbb
outsb
lock
je
xchg
xchg
imul
fimull
adc
incl
push
les
popa
push
ret
and
push
subl
in
or
mov
mov
jg
mov
in
imul
nopl
call
jae
insl
or
idiv
cli
ja
or
mov
cld
clc
lcall
jg
xor
pop
or
sub
push
xchg
adc
pushl
lods
push
daa
test
mov
xor
ljmp
add
das
dec
lock
fst
pop
inc
or
dec
mov
ss
or
sub
inc
adc
out
xor
incl
cld
pop
xor
movsb
or
cmp
loopne
aaa
loopne
fcoml
ljmp
mov
ljmp
std
add
cs
inc
cmp
cmpsl
jo
and
mov
pop
aaa
push
inc
inc
or
xor
lcall
sbb
adcb
fldt
lock
test
lock
jne
fsubs
orb
nop
sub
icebp
outsl
insl
mov
or
loopne
fs
adc
or
pop
adc
ljmp
jnp
fs
mov
es
push
cmp
xor
sbb
sub
push
imul
add
hlt
aas
xchg
adc
xchg
jno
mov
mov
lcall
or
xor
xor
add
leave
ljmp
hlt
mov
push
push
mov
add
aas
mov
fcmovnu
ljmp
mov
cmp
mov
mov
or
jl
jg
adc
pop
push
lods
lock
lcall
adc
inc
ss
and
testb
push
jo
adc
cmp
pushl
movsl
cwtl
inc
js
cwtl
xor
or
mov
ds
adc
call
pusha
cmpsb
aaa
or
add
outsl
aam
clc
call
mov
inc
jne
cmp
lcall
lock
pop
cpuid
lmsw
cmp
inc
add
add
aaa
adc
sbb
push
sbb
sub
pop
jmp
and
movsb
subl
mov
and
icebp
mov
dec
sbb
fwait
sub
lods
pop
and
push
cmp
adc
iret
sub
ret
pop
pop
push
lock
mov
push
sar
cmp
aam
popa
push
sbb
or
addr16
cmc
adc
lock
push
adc
jg
lods
fisttps
fildl
inc
adc
push
adc
lcall
cmpsb
push
clc
and
lcallw
scas
jbe
adc
lock
nop
mov
sub
or
jne
sbb
les
adc
sbb
mov
adc
add
pop
add
push
jbe
add
ja
dec
add
es
sbb
sub
cwtl
push
lock
incl
cs
xor
xor
decl
lock
lock
xchg
jecxz
aaa
mov
add
in
fimull
adc
xchg
daa
push
adc
jg
push
mov
test
or
sarl
lea
xor
push
dec
adc
push
sbb
add
cmpsl
fmull
inc
sbb
push
lods
adc
sbb
ljmp
ret
cld
sub
add
or
lea
and
rol
movsl
out
pushl
mov
outsb
out
cli
aas
xchg
push
lret
push
iret
or
inc
call
stos
fsubs
lock
mov
popa
loope
cmp
lods
ds
movsl
movsb
mov
movsb
insb
jecxz
dec
cmc
std
jp
testl
into
sbb
sti
or
mov
add
fcomip
and
ja
jg
test
rcrb
subb
push
push
mov
outsb
adcl
pop
pop
dec
inc
decl
scas
push
mov
mov
mov
or
loop
rolb
sub
pop
add
ret
xor
add
dec
cmpsb
icebp
push
or
lods
add
nop
add
sub
lcall
mov
clc
call
add
outsb
sub
dec
jmp
sbb
dec
jo
dec
add
push
sbb
add
decl
xlat
jmp
rcrl
scas
dec
adc
stos
je
add
sbb
pop
inc
mov
sbb
or
jge
sahf
dec
dec
sbb
adc
pop
pop
add
je
add
lcall
cmp
notb
inc
pop
mov
push
xchg
pop
repnz
adc
jg
or
int3
ja
insl
push
and
sbb
jle
jg
repz
insb
negb
subl
dec
ja
rolb
nop
dec
pop
icebp
in
inc
test
in
in
mov
and
rclb
decl
inc
xchg
or
jg
and
xor
add
stos
decl
and
inc
jg
add
add
sbb
jge
das
fsubr
or
mov
in
push
pop
sbb
sbb
xor
sti
test
dec
or
inc
xchg
js
xchg
cwtl
sti
add
fucomip
sub
test
adc
xor
inc
push
cwtl
aas
jle
pop
dec
xor
imul
xchg
stc
rcrb
les
mov
mov
and
add
clc
cmpsl
ret
sub
ljmp
sbb
push
dec
mov
adc
sub
lock
add
sub
add
icebp
dec
mov
jg
lock
inc
push
stos
mov
push
cmp
pop
or
xor
leave
pop
cmp
mov
and
aad
inc
bound
sub
call
ljmp
pop
ficompl
shrb
lds
push
imull
push
or
call
dec
adc
mov
pop
data16
and
inc
sahf
out
fisttpl
aam
outsl
fiaddl
lods
stos
lret
or
inc
push
sub
sbb
inc
push
out
ljmp
clc
or
pop
aam
push
xchg
outsb
add
mov
cmpsl
pop
adc
call
sar
cli
add
or
andnps
orb
sbb
adc
fdivs
xchg
mov
mov
jae
push
or
ljmp
idiv
ljmp
sbb
pop
pop
ja
dec
lock
pop
pop
ljmp
imul
call
pop
sub
jge
fs
rcrl
dec
mov
test
dec
or
decl
sub
sub
pop
sbb
adc
shl
sub
aas
cmp
fdivl
das
rcr
xchg
mov
cmpsl
or
sarl
scas
and
inc
leave
xor
jnp
rcr
lret
sub
add
clc
pop
fisttpl
out
sbb
adc
nop
out
sti
jg
lret
cmp
dec
les
mov
mov
sub
add
cmp
xchg
jl
pop
cli
stos
pop
hlt
jg
pop
jae
mov
test
repz
mov
cld
incl
sub
jp
loop
push
pop
sub
mov
push
mov
in
mov
jg
xchg
les
mov
lock
mov
pop
sar
add
incl
mov
adc
xor
mov
dec
push
xchg
mov
aas
pop
add
xlat
cs
and
and
push
pop
pushaw
or
add
lahf
inc
call
loopne
inc
nop
idiv
stos
dec
mov
das
clc
push
adc
loopne
loopne
sbb
jno
fiadds
push
movsb
or
mov
mov
mov
popa
cwtl
mov
and
jle
pop
sbb
sbb
mov
aam
sub
js
pop
pop
cmp
sub
clc
ljmp
mov
inc
xchg
scas
incb
sub
add
cmpl
push
cmp
lahf
out
call
or
lock
sub
std
mov
cli
mov
out
jmp
mov
push
lock
dec
les
adc
addr16
das
or
or
orl
or
and
pop
adc
pop
fnsave
or
or
aam
aaa
popa
xor
outsb
add
push
adc
sub
gs
call
shrb
add
jecxz
mov
dec
ss
test
xor
call
dec
jb
adc
add
imul
in
mov
aas
test
decl
mov
cwtl
push
ds
aas
test
rorb
icebp
out
sbb
loopne
test
outsb
cmp
pop
std
sub
add
xor
loope
adc
mov
ljmp
ljmp
gs
inc
adc
sub
sbb
outsl
cli
cmp
pop
push
imul
int
or
pop
adc
outsl
and
sbb
mov
or
push
das
out
dec
jle
jecxz
cmpl
inc
add
pop
jle
xor
mov
movsl
insb
sub
decl
sbb
sbb
orl
jnp
adc
inc
push
dec
adc
addb
mov
adc
or
and
push
xchg
jg
pop
mov
dec
pop
movl
mov
in
pop
icebp
sahf
dec
sbb
push
push
xor
into
bound
fiaddl
fcomps
in
pushl
loop
mov
add
jno
fldt
dec
ret
mov
imul
push
dec
sub
movsb
icebp
mov
xchg
jg
push
sbb
xchg
sar
jbe
adc
dec
pop
es
pop
repnz
sbb
push
pop
dec
pop
data16
inc
or
or
mov
jmp
or
or
pop
lock
insb
imul
pop
push
testl
sbb
das
and
lea
pop
or
daa
stos
push
cmp
cs
lret
push
cld
or
xor
and
dec
call
call
movsl
push
adc
popf
dec
push
mov
or
lcall
ja
or
jg
insb
mov
cs
out
sub
pop
add
push
repz
cld
mov
aam
fcmovne
shll
jae
stos
add
cmp
jmp
push
inc
cmp
arpl
fimuls
jge
xchg
or
pusha
lds
popf
leave
pop
ss
aaa
mov
add
sbb
call
testb
call
ret
add
push
pop
notb
mov
les
ljmp
sahf
mov
and
xor
pop
add
xor
sub
lret
popf
or
pop
jle
sub
sbbb
cld
mov
je
or
mov
dec
xor
sbb
inc
or
ds
xor
cmp
cmp
fidivs
xchg
js
mov
and
adc
test
sub
out
addb
cld
sub
mov
adc
pushl
jg
or
pop
xchg
insb
lock
orps
mov
push
mov
sbb
dec
jge
cmp
dec
push
lret
in
pop
imul
add
shl
cmp
xor
or
decl
sbb
push
mov
or
sbb
lret
out
adc
jnp
and
sub
dec
dec
pop
cmp
mov
std
cmc
pop
pop
add
cmp
or
pop
adc
dec
pop
adc
int
loopne
or
es
or
decl
adc
push
mov
imul
pop
pop
xlat
or
add
leave
ud0
frstor
call
dec
jle
xlat
jbe
sarb
and
adc
pop
or
add
cld
pop
add
pushl
sbb
jno
cmp
push
mov
push
or
decl
shl
sbb
outsw
aaa
mov
bound
sbb
decl
movsb
adc
dec
fidivl
push
or
mov
xor
pop
mov
cmpsb
dec
or
jb
ljmp
pop
psubsb
jb
add
pop
jb
sub
sub
jmp
push
and
loop
cld
or
decl
push
jbe
je
mov
jo
aaa
lock
ja
shrl
pushf
adc
or
icebp
pop
shlb
ljmp
dec
jmp
repnz
or
or
sub
es
or
pop
sbb
call
das
xor
cmp
adc
inc
or
fistpl
fs
mov
ljmp
lock
inc
fldl
cs
cmpsl
add
ljmp
sub
shlb
in
sbb
movsb
add
fcomp
cld
sar
xor
add
or
call
int3
push
sub
or
inc
jae
jb
pop
or
cs
xor
push
push
gs
cmp
or
add
sub
cmp
je
out
xor
std
fidivrl
loopne
sbb
mov
jg
inc
add
fists
insl
lcall
mov
push
shlb
arpl
add
xorb
mov
sbb
das
push
and
push
adc
shll
add
mov
testl
sbb
and
pusha
and
mov
std
call
lret
dec
add
test
jp
push
scas
sub
push
add
jnp
add
sub
mov
mull
pop
sbb
popf
inc
push
and
adc
filds
cmp
decb
aad
inc
xor
mov
sub
popa
testb
addr16
mov
loopne
inc
mov
ljmp
in
decl
or
bound
adc
adc
add
mov
sbbb
xor
jb
fsubrp
nopl
les
push
add
fprem
ljmp
pop
mov
aaa
sub
lods
pop
lock
sub
xor
cmp
in
mov
stos
mov
scas
pop
push
mov
sbb
inc
mov
sub
adc
adc
rorb
jg
fdivs
pop
cli
aad
jne
and
test
sbb
sub
sbb
mov
and
inc
iret
and
and
sbb
mov
inc
inc
and
and
in
or
lock
pushl
fistl
mov
pop
add
and
jg
or
sbb
lea
in
sub
lds
inc
and
lcall
sub
and
pop
lret
dec
add
jmp
add
sbb
lock
pop
xor
and
stos
cmp
cmp
jl
into
jg
adc
imul
or
xchg
xor
ret
jns
fmull
adc
dec
jg
lds
push
jle
adc
adc
call
mov
cmp
aaa
lahf
xor
jb
nop
stos
mov
inc
inc
push
in
sub
in
push
dec
sbb
pop
dec
jnp
adc
mov
mov
cli
add
fiadds
daa
sub
xor
inc
fistpl
sbb
ljmp
xor
es
push
or
xor
xor
dec
mov
xor
call
jb
sub
xchg
jmp
or
ds
bound
adc
ljmp
cltd
lock
ljmp
push
cmpsl
imul
add
stc
or
decl
repz
adc
push
out
sub
pop
mov
lock
add
shlb
or
in
pop
popf
xor
jle
and
call
jg
aad
and
or
outsb
pop
push
and
cmpsb
ja
mov
test
in
cmp
fcomip
ljmp
or
cmp
sbb
lgs
adc
repnz
das
pop
ds
mov
cwtl
inc
je
mov
mov
in
pushl
outsb
shrl
push
mov
pop
ret
jne
pushf
or
dec
sbb
add
pusha
adc
test
adc
mov
outsb
sub
dec
mov
in
add
mov
or
or
and
push
jb
push
sub
repnz
sub
ljmp
cmp
or
xchg
mov
cwtl
and
cwtl
push
clc
dec
mov
adc
pop
lock
add
sub
or
arpl
insl
jmp
sbbl
pop
push
dec
call
jg
jo
test
push
cli
xor
pop
cmp
pop
lock
call
js
stc
fwait
add
add
and
mov
adc
jae
or
incl
mov
add
aam
mov
xchg
and
lock
push
mov
add
dec
cmpsb
sahf
sbbb
roll
es
adc
mov
fdivr
sub
or
and
cmp
pusha
push
mov
sub
inc
adc
pop
mov
insl
push
add
pop
and
mov
sahf
jp
sub
sub
fcomip
xor
mov
fsubr
fisttps
pop
mov
push
xor
call
inc
insl
cmc
sub
inc
pop
scas
ljmp
adc
cmp
mov
sub
cmp
push
fstpl
insl
loop
data16
sub
push
cmp
sbb
nop
out
sub
mov
int
add
mov
mov
xor
sub
das
lock
stos
fdiv
out
add
sub
inc
cs
ljmp
jmp
xor
js
and
lock
ja
repnz
push
faddl
decl
cmpsl
xor
pop
and
mov
sbb
cmp
call
mov
sarb
mov
cmp
leave
sub
xor
ss
sub
ljmp
inc
std
cmp
dec
dec
xor
fwait
ss
push
incl
inc
stos
aaa
std
pushl
cmp
xor
jge
jl
add
orl
sub
ss
call
pusha
push
nop
inc
sbbl
mov
bound
cmp
jbe
push
or
pop
xchg
sbb
sbb
xor
push
outsb
jae
fs
or
bound
lock
incl
xor
push
cmp
ja
imul
fsubs
jae
xchg
jbe
shlb
push
xchg
pusha
test
lret
cmp
mov
decl
mov
cwtl
xor
ss
sbb
and
sbb
aaa
or
mov
loop
add
sbb
clc
fldt
pop
or
loopne
or
aad
sahf
gs
stos
and
in
rclb
pop
add
mov
or
add
das
cli
pop
ss
vmovq
adc
mov
xlat
jns
adc
decl
sbb
in
stos
xor
and
mov
pop
mov
scas
mov
inc
popf
pop
loop
adc
arpl
lock
jl
lock
jg
insb
in
lock
inc
cmp
push
adc
popa
fimuls
ret
pop
lea
shlb
add
cltd
cmp
sbb
lcall
lahf
in
add
adc
mov
fnstsw
cld
mov
adc
prefetch
or
xor
push
ja
or
outsl
sub
and
or
or
out
and
push
sub
lods
jg
icebp
and
pop
push
cwtl
cmp
or
sahf
or
fisubl
fadds
insl
lcall
in
lds
sti
addr16
sahf
rcll
pop
adc
jo
lock
decl
jmp
mov
push
lds
sbb
sub
adc
subl
dec
xor
popa
int
sbb
mov
sub
pop
cmp
or
dec
and
mov
sahf
adcl
jmp
mov
dec
xchg
fdiv
adc
ljmp
add
fcomps
es
xor
decl
lea
int
xchg
push
rcrl
test
sar
pop
or
pop
dec
pop
int3
jmp
out
andl
cli
xlat
cmp
int
add
mov
fistl
or
insl
test
inc
sub
jge
lahf
pop
mov
inc
imul
push
aas
sbb
mov
fldl
or
inc
adcb
call
das
pop
mov
insl
insb
cmp
fidivl
mov
movsl
sub
sbb
ja
pop
or
call
mov
pop
adc
add
add
or
xor
push
loopne
call
addr16
lcall
repz
movd
push
sbb
movsb
out
sbb
fs
xchg
jge
fldt
imul
sbb
addr16
cltd
sbb
mov
inc
pop
and
ljmp
pop
das
addr16
loop
xor
sbb
imul
mov
sbb
adc
or
ljmp
or
pusha
mov
xchg
stos
inc
pop
inc
test
push
lds
cmp
mov
lahf
loopne
push
cld
lret
sub
movsl
push
stos
fsubrs
add
mov
lock
add
mov
adc
xchg
sbb
aam
add
push
xchg
xorl
jbe
or
cmp
mov
pushl
cmp
ljmp
cmp
outsb
jl
mov
add
add
clc
or
shr
sub
mov
mov
jbe
or
xlat
ljmp
sub
or
or
xchg
or
and
dec
lock
dec
jo
jle
and
ss
je
mov
test
add
push
movsl
js
aaa
mov
cmp
enter
inc
push
fsubr
shr
jle
and
sub
or
decl
add
test
pop
sbb
jae
fwait
imul
adc
push
cs
mov
jg
add
les
push
cwtl
adc
push
push
jo
xchg
fbstp
ret
nop
icebp
xchg
jbe
or
ss
imul
rcll
int3
xchg
bound
or
lock
fbld
out
mov
add
or
jns
jmp
inc
mov
out
pop
fbstp
or
cwtl
push
jmp
ret
add
inc
push
cmp
xor
ljmp
sbb
pop
sub
nop
sbb
jo
jne
je
inc
loopne
iret
mov
ljmp
and
not
add
cwtl
lods
mov
mov
jnp
sti
es
push
jl
mov
outsb
pop
dec
pop
cs
push
lahf
or
test
cmp
cmp
js
shrb
cmp
ja
mov
xlat
mov
push
lcall
mov
ss
mov
in
sbb
xor
dec
dec
or
mov
mov
adcb
add
incl
or
add
pusha
insb
add
pop
mov
ljmp
dec
push
or
sahf
fists
mov
inc
add
rolb
mov
sub
adc
jb
mov
adc
and
adc
add
xor
sub
and
dec
sbb
addr16
lret
sub
pop
dec
cmp
jne
in
aam
lea
cmp
jnp
push
icebp
pop
inc
add
shl
sub
je
or
in
sub
jmp
push
add
int3
clc
mov
sbb
push
adc
mov
jae
jne
mov
test
icebp
rorl
jg
push
lea
push
aas
add
fwait
jne
jmp
ja
mov
pop
push
fdiv
jmp
fucomp
sub
or
jbe
test
mov
fstl
mov
testl
add
mov
rol
xchg
fdivr
sub
jae
ja
pop
fcoms
f2xm1
dec
mov
mov
mov
adc
aas
test
mov
xor
push
repz
cld
pushl
cmp
mov
pop
pop
movzwl
inc
jo
mov
push
jg
fdivs
pop
test
jmp
popa
xor
ret
dec
mov
lcall
adc
cmp
lds
add
add
std
push
add
add
ja
mov
push
sarb
ja
scas
mov
mov
push
xor
push
incl
adc
aad
inc
push
push
andb
in
inc
push
sub
jg
add
sub
call
cmp
jne
mov
imul
or
lret
lods
mov
sub
lock
cwtl
movsl
push
jne
push
scas
xor
repnz
nop
or
or
sub
push
xchg
xchg
cmpsb
fisttpll
push
test
test
ja
add
dec
movsl
push
daa
jp
iret
repz
test
in
sub
movsl
mov
jg
xor
push
jb
push
sub
dec
pop
mov
mov
dec
movsl
push
test
test
arpl
inc
inc
addr16
movsl
push
jb
bound
cmp
rol
xor
dec
movsl
out
push
pop
cmp
xchg
aas
add
jecxz
shl
xchg
jg
push
adc
incl
je
std
xchg
lahf
add
xchg
or
xchg
or
mov
cmp
cmp
pop
push
es
and
shlb
lahf
fcmovne
push
mov
orb
test
xchg
jle
push
jne
sbb
xchg
pop
das
cld
aas
lods
xchg
mov
mov
fistps
add
mov
sarb
mov
lahf
lret
xchg
mov
or
cli
insl
cmp
xchg
push
jbe
dec
aad
dec
push
sbb
movsl
int
fwait
mov
je
pop
pusha
andb
orl
fcoml
dec
dec
xchg
or
push
xor
jl
add
movsl
mov
cmpsb
subb
outsl
or
les
fildl
push
push
imul
cs
ret
sahf
jnp
mov
inc
imul
sbb
mov
inc
dec
movsb
ja
xor
shlb
ja
pop
adcb
mov
xor
push
push
movb
cli
push
lods
cld
inc
inc
aas
sub
lret
dec
cld
xchg
xchg
mov
stos
adc
inc
push
incl
cmc
mov
lods
cs
insl
bnd
add
sub
push
jecxz
or
mov
ss
cltd
insb
add
xchg
leave
xor
cltd
dec
es
je
xlat
add
inc
push
add
test
add
inc
sbb
adc
and
adc
xor
fidivl
or
push
cmpl
call
pop
mov
loopne
xor
xor
sbb
pop
and
divb
xor
das
push
cmpl
std
xor
xor
popa
stc
adc
xor
inc
dec
pushl
mov
mov
xor
jecxz
cli
xor
sar
outsl
shlb
inc
ss
jecxz
ss
xchg
ss
pushl
ss
sbb
cmp
lds
int
and
fbstp
aad
mov
in
aaa
divl
xor
inc
cmp
cmp
lds
shlb
add
dec
xchg
or
pop
jns
repnz
push
cli
stc
mov
jo
or
movsb
add
dec
int
ljmp
add
rcrl
push
out
fidivs
clc
push
add
pop
test
imul
inc
add
dec
add
sbb
dec
or
std
mov
xor
incb
mov
lea
aas
push
jp
dec
jo
adc
mull
add
imul
outsl
nop
addr16
sbb
outsl
inc
xor
sbb
cs
shrb
mov
push
push
xchg
popf
jb
dec
jnp
xchg
cs
xor
and
cmp
jns
movsb
in
sbb
dec
sub
push
dec
fs
xor
bound
pop
add
inc
jb
mov
popa
gs
mov
dec
pop
ja
insb
mov
mov
push
aas
sbb
mov
jno
js
push
inc
fneni(8087
sbb
lret
inc
mul
mov
inc
mov
and
push
sbb
scas
jns
jbe
lret
xlat
adc
mulw
and
out
sub
scas
jmp
ja
outsb
ds
mov
dec
fwait
ss
shll
test
dec
or
mov
push
fimull
push
sub
js
cmp
sbb
js
out
adc
xlat
adc
mov
popf
add
sub
jmp
xchg
cmpsb
pop
and
iret
jecxz
ds
jbe
ret
popa
scas
pop
mov
dec
mov
test
mov
movhps
pop
nop
inc
jb
outsb
dec
mov
cmp
or
push
ss
push
add
xchg
mov
lahf
fidivrs
mov
jo
outsl
and
fadd
imul
dec
xor
dec
pop
imul
cmp
add
adc
rol
mov
add
mov
adc
daa
or
inc
dec
and
inc
xorl
inc
out
mov
pushf
sbbl
or
nop
int3
mov
fadds
nop
fsubrs
pop
in
mov
dec
test
mov
aas
add
add
lock
push
or
jae
xor
or
inc
and
add
mov
insb
fdivr
add
push
add
sbb
fwait
leave
inc
adc
idivb
aas
pop
sti
pop
xor
xor
wrmsr
and
pushf
mov
sbb
or
dec
xor
jmp
mov
mov
mov
add
cmpl
ret
pop
aam
inc
in
push
subb
inc
jae
sub
cwtl
lea
mov
xor
jge
xor
dec
add
push
inc
or
test
aaa
ret
or
or
push
mov
xor
push
jle
lock
push
imul
jb
jne
inc
leave
scas
adc
imul
sub
je
mov
xor
fistl
xchg
xor
jecxz
xor
pop
sbb
xor
xorb
sbbl
lea
sub
out
cmp
pop
push
dec
mov
aas
jg
insl
dec
dec
lock
test
fcoms
inc
jle
mov
ljmp
call
lods
incb
aaa
jne
mov
fucom
shl
sbb
pop
dec
ret
pop
cmpb
outsl
jmp
mov
sbb
add
outsb
lods
in
sub
fsts
pop
adc
lahf
popa
das
in
icebp
pushl
sub
lret
mov
mov
dec
lock
adc
mov
mov
push
add
cli
sbb
cwtl
into
std
out
dec
std
pusha
incl
arpl
adc
cmpsb
jl
fdivr
shlb
push
pop
mov
xor
addb
movsb
ss
cmpb
adc
add
xor
jae
das
call
popa
adc
sub
ljmp
xor
push
jo
mov
mov
dec
jmp
cmp
fists
and
push
adc
dec
mov
data16
cmp
mov
and
mov
sub
push
mov
inc
shlb
sub
push
mov
fs
ljmp
out
sbb
ret
xchg
and
aas
add
mov
push
lds
inc
movsb
hlt
iret
cmpsb
mov
aad
out
scas
xor
cmp
add
xor
add
mov
or
add
or
add
or
lea
dec
cmp
and
add
data16
mulb
icebp
mov
call
incl
cld
lret
pop
out
add
subb
call
mov
fsub
adc
jg
aas
dec
repnz
ficomps
mov
lret
mov
ljmp
imul
xor
adc
inc
xor
gs
loope
push
call
mov
in
out
cmc
mov
cmp
xorl
arpl
mov
xchg
test
cld
pushl
xchg
fcomps
or
pop
push
sub
sbb
cmpsb
mov
add
add
add
pusha
or
adc
add
push
and
add
test
mov
add
and
add
nop
push
add
inc
aaa
add
mov
or
add
and
xor
movsl
inc
add
push
test
or
mov
add
nop
push
add
inc
inc
add
add
or
adc
nop
push
xchg
push
and
add
test
add
add
orb
inc
add
nop
push
add
add
addl
repnz
add
nop
inc
xchg
push
and
push
adcl
adc
mov
sub
adc
inc
inc
add
add
add
ss
adc
nop
push
add
add
addl
orb
adc
addr16
sub
sub
mov
pop
mov
and
popa
xchg
xor
adc
and
dec
mov
or
sub
movsl
ljmp
and
adc
imul
cs
add
ret
sub
add
xchg
cmp
fs
imul
rolb
add
mov
fwait
xchg
cmpsb
push
add
rorb
add
add
mov
pop
dec
addl
popf
add
push
lcall
jno
ds
fsubl
popa
xchg
cmpsb
xchg
das
mov
and
adcb
adc
push
test
lahf
inc
dec
ja
imul
xchg
popa
mov
sbb
sbb
test
in
mov
addr16
mov
inc
push
xchg
inc
lcall
inc
and
jnp
cmp
movl
insl
imul
movsb
inc
pop
xchg
xchg
sbb
xchg
add
lods
decl
pop
or
adc
adc
mov
incl
sahf
ud2
sbb
pop
cld
xor
sbb
adc
push
xor
sbb
or
push
push
push
adc
adc
and
or
pop
cmp
fstl
and
adc
pop
syscall
pop
push
adc
inc
xor
xchg
fsubr
fbstp
sbb
push
or
lcall
add
adc
rorl
push
dec
adc
push
shlb
push
shlb
bound
adc
leave
jae
es
adc
mov
push
add
jnp
adcb
imul
fs
xchg
mov
push
testl
mov
and
cmp
testl
adc
pop
adc
loope
addb
out
pusha
fcmovu
gs
inc
lds
sub
xchg
and
adc
test
add
push
add
add
add
add
dec
add
incl
push
push
mov
inc
add
pop
pop
mov
sub
adc
jb
mov
add
mov
out
dec
adc
adc
add
or
mov
sub
adc
out
dec
add
jne
mov
sub
fistl
shr
adc
jne
mov
out
cld
adc
adc
jmp
xor
sbb
jb
shl
mov
inc
xor
je
sar
mov
jne
mov
sub
sbb
int3
inc
add
jne
mov
sbbl
jb
mov
jne
mov
push
out
cld
adc
adc
jae
jne
mov
sub
add
cmp
adc
lea
push
mov
inc
sbb
jmp
mov
add
mov
add
jbe
add
icebp
add
sub
decl
add
sub
cmp
ja
sub
jne
mov
pop
pop
add
shr
rol
xchg
pop
clc
sub
add
mov
add
fstp
loop
lea
mov
cmp
je
mov
lea
add
push
xorl
in
xchg
mov
inc
lcall
dec
repnz
push
jmp
mov
add
jne
pop
mov
adcl
jmp
call
add
lea
xor
incl
inc
or
je
cmp
ja
add
shl
xchg
add
mov
setae
adc
pop
xchg
movl
adc
add
mov
push
push
mov
aad
xchg
add
add
sub
push
ret
pop
popa
lea
cmp
cmp
gs
incl
push
add
add
add
add
add
add
add
add
add
adc
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
adc
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
adc
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
adc
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
sbb
adc
xorb
add
add
add
add
xchg
add
add
add
add
add
xorb
mov
add
add
rolb
add
or
add
add
in
add
adc
add
pop
addb
popa
jae
push
insl
bound
dec
insl
insb
outsb
jae
jo
jb
cmp
push
pop
insl
imul
je
arpl
insl
cmp
insl
sti
jbe
and
insl
shrl
data16
push
gs
imul
or
je
jne
add
outsw
and
insb
outsb
jae
ja
jb
cmp
push
sbb
arpl
and
je
arpl
cmp
insl
pop
jbe
and
or
and
arpl
imul
and
cmp
gs
gs
gs
jb
jecxz
insb
gs
and
and
jb,pn
jno
gs
fs
js
arpl
imul
insb
jb
gs
insb
sub
popa
jae
outsb
add
imul
aad
imul
cmp
jae
and
mov
jb
jno
shlb
gs
stos
arpl
imul
gs
ds
and
and
pusha
gs
gs
gs
jb
inc
imul
or
and
cmp
jae
jbe
jb
je
dec
or
fidivl
jae
fldt
outsl
ds
jae
xlat
insl
bound
in
add
add
rolb
add
add
xchg
add
adc
cli
ret
add
jne
add
add
adc
add
inc
ret
and
adc
xor
add
add
xor
add
adc
sub
add
add
add
add
cmc
add
add
add
ret
retw
xchg
movsl
add
adc
add
xchg
add
add
add
ret
add
add
pop
inc
push
dec
inc
dec
data16
inc
dec
dec
xor
push
inc
push
jl
xor
fs
add
inc
push
xor
fs
insb
jb
dec
outsl
popa
fs
jb
inc
add
inc
mov
inc
fs
jae
mov
push
imul
jb
loope
arpl
movsb
imul
insb
insb
outsl
arpl
add
jb
and
inc
jb
push
add
add
pop
je
jb
arpl
jae
add
add
outsb
push
jb
arpl
jae
lcall
jae
jb
outsb
mov
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
adc
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
adc
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
adc
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
xor
dec
xor
mov
lds
shlb
divb
insb
xor
xor
xor
xor
xor
xor
xor
xor
test
test
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cs
dec
xor
mov
xor
and
sub
jbe
stos
ss
fbstp
in
pushl
or
dec
aaa
bound
lea
int
aam
loope
or
adc
sbb
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
lea
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
push
cmp
cmp
insl
cmp
jns
jle
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
daa
cmp
cmp
dec
cmp
pop
cmp
imul
cmp
lea
sahf
cmp
scas
cmp
sarb
cmp
loop
out
in
cmp
cmp
adc
ds
xor
aaa
ds
ds
ds
ds
ds
ds
outsl
jne,pt
jnp
cmpl
xchg
ds
ds
mov
ds
mov
ds
sarb
aad
fstpt
loope
out
in
ds
std
add
or
adc
sbb
pop
aas
and
aas
ss
cmp
inc
aas
inc
aas
dec
aas
push
aas
pop
aas
pop
aas
arpl
imul
jp
jg
test
mov
xchg
aas
xchg
aas
pushf
aas
mov
aas
mov
mov
aas
leave
aas
iret
aas
aad
fstpt
loopne
in
jmp
icebp
aas
idivl
cld
aas
add
add
add
add
add
pop
xor
xor
xor
sub
das
xor
xor
dec
xor
push
xor
arpl
push
xor
jg
test
mov
nop
xor
