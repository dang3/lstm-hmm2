add
or
add
add
push
add
addb
add
mov
add
jo
add
mov
add
lock
add
lock
orb
add
add
add
or
addb
add
cld
push
xor
add
add
add
add
add
add
add
add
add
addb
add
call
add
add
add
addb
add
pusha
add
addb
add
mov
add
cld
push
xor
add
add
add
add
add
add
mov
add
cld
push
xor
add
add
add
add
add
add
add
add
or
xor
add
cld
push
xor
add
add
add
add
add
add
add
add
add
cld
push
xor
add
add
add
add
add
add
add
add
ret
xor
add
cld
push
xor
add
add
add
add
add
add
add
hlt
ret
or
xor
add
cld
push
xor
add
add
add
add
add
add
add
sub
or
xor
add
cld
push
xor
add
add
add
add
add
add
or
xor
add
cld
push
xor
add
add
add
add
or
add
mov
add
fadds
add
add
add
sub
add
push
add
orb
add
mov
or
add
lock
cmpb
add
inc
add
sbb
add
ljmp
cmp
add
or
add
sbb
add
sub
add
ss
add
inc
push
add
push
push
add
pop
push
add
jbe
add
mov
add
test
add
add
add
cld
push
xor
add
add
add
add
add
add
or
rolb
add
cld
push
xor
add
add
add
add
add
add
add
add
or
in
add
cld
push
xor
add
add
add
add
add
add
add
add
add
add
add
push
xor
add
add
add
add
add
add
add
add
add
cld
push
xor
add
add
add
add
add
add
add
in
or
rolb
add
cld
push
xor
add
add
add
add
add
add
add
mov
or
rolb
add
cld
push
xor
add
add
add
add
add
add
rorb
add
add
add
push
xor
add
add
add
add
add
add
aam
add
add
add
push
xor
add
add
add
add
add
add
add
add
or
rolb
add
cld
push
xor
add
add
add
add
add
add
add
add
xlat
or
rolb
add
cld
push
xor
add
add
add
add
add
add
add
add
add
add
add
push
xor
add
add
add
add
add
add
add
xchg
fisttpl
add
add
add
push
xor
add
add
add
add
add
add
fisttpll
add
add
push
xor
add
add
add
add
add
add
fisttpll
add
add
add
push
xor
add
add
add
add
add
add
add
add
add
cld
push
xor
add
add
add
add
add
add
add
add
add
cld
push
xor
add
add
add
add
add
add
add
or
rolb
add
cld
push
xor
add
add
add
add
add
add
add
sub
or
rolb
add
cld
push
xor
add
add
add
add
add
add
add
cld
out
add
add
add
push
xor
add
add
add
add
add
add
call
add
cld
push
xor
add
add
add
add
add
add
add
or
rolb
add
cld
push
xor
add
add
add
add
add
add
add
or
call
add
add
push
xor
add
add
add
add
add
add
push
add
push
in
or
mov
add
cld
push
xor
add
add
add
add
add
add
push
add
fsubr
or
mov
add
cld
push
xor
add
add
add
add
add
add
add
lock
mov
add
cld
push
xor
add
add
add
add
add
add
add
add
push
xor
add
add
add
add
add
add
fists
add
add
cld
push
xor
add
add
add
add
push
add
add
add
cld
push
xor
add
add
add
add
add
add
push
add
push
testl
add
push
xor
add
add
add
add
sldt
rolb
add
clc
pop
add
and
add
dec
or
xor
add
jo
add
cwtl
or
xor
add
rorb
xor
add
call
sldt
adc
add
cmp
add
pusha
or
cmp
add
mov
add
mov
add
fmuls
add
add
add
sub
add
push
or
cmp
add
js
add
mov
adc
add
or
addb
add
cld
push
xor
add
add
add
add
add
add
pop
add
test
or
mov
add
cld
push
xor
add
add
add
add
add
add
pop
add
pop
cli
or
test
add
push
xor
add
add
add
add
add
add
or
add
decb
add
add
add
push
xor
add
add
add
add
add
add
or
add
add
cld
push
xor
add
add
add
add
add
add
add
mov
add
cld
push
xor
add
add
add
add
add
add
or
add
add
cld
push
xor
add
add
add
add
add
add
or
add
add
cld
push
xor
add
add
add
add
add
add
or
add
ud2
add
add
add
push
xor
add
add
add
add
add
add
or
add
adc
add
add
cld
push
xor
add
add
add
add
add
add
or
add
push
or
fadds
add
cld
push
xor
add
add
add
add
add
add
add
aam
or
sbb
add
cld
push
xor
add
add
add
add
add
add
add
in
sbb
add
add
cld
push
xor
add
add
add
add
add
add
sbb
add
add
cld
push
xor
add
add
add
add
add
add
or
add
or
mov
add
cld
push
xor
add
add
add
add
add
add
or
add
and
add
add
cld
push
xor
add
add
add
add
add
add
or
add
or
addb
add
push
xor
add
add
add
add
add
add
add
clc
sub
add
add
add
push
xor
add
add
add
add
add
add
add
fsubrl
or
mov
add
add
push
xor
add
add
add
add
add
add
sub
add
add
add
push
xor
add
add
add
add
add
add
or
mov
add
cld
push
xor
add
add
add
add
add
add
or
add
or
les
add
cld
push
xor
add
add
add
add
push
add
ljmp
addb
add
add
add
cld
push
xor
add
add
add
add
add
add
or
add
xor
add
add
add
push
xor
add
add
add
add
add
add
add
or
add
cld
push
xor
add
add
add
add
add
add
cmp
add
push
or
cld
push
xor
add
add
add
add
jg
add
or
cmp
add
add
cmp
add
sub
cmp
add
push
or
cmp
add
js
add
mov
jg
add
or
addb
add
cld
push
xor
add
add
add
add
add
add
or
add
dec
adc
adc
add
cld
push
xor
add
add
add
add
add
add
or
add
push
adc
adc
add
cld
push
xor
add
add
add
add
add
add
add
sbb
adc
adc
add
cld
push
xor
add
add
add
add
add
add
add
xor
add
add
cld
push
xor
add
add
add
add
add
add
push
adc
adc
add
cld
push
xor
add
add
add
add
add
add
push
adc
adc
add
cld
push
xor
add
add
add
add
add
add
or
add
add
add
cld
push
xor
add
add
add
add
sldt
add
add
cld
push
xor
add
add
add
add
add
add
or
adc
adc
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
pop
add
add
inc
add
push
add
add
add
dec
add
add
add
push
add
dec
add
or
dec
add
inc
add
dec
add
inc
add
add
add
dec
add
push
add
push
add
add
inc
add
add
add
add
inc
add
dec
add
inc
add
dec
add
dec
add
add
dec
add
dec
add
pop
add
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
push
add
add
push
add
add
dec
add
add
add
push
add
inc
add
inc
add
push
add
add
dec
add
add
push
add
add
add
push
add
pop
add
add
add
push
add
dec
add
dec
add
push
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
push
add
add
push
add
xor
or
dec
add
dec
add
dec
add
dec
add
add
add
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
rol
rcr
add
lret
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
incl
xchg
add
add
in
int3
add
out
add
out
add
add
add
add
add
cltd
add
add
add
xor
add
xor
add
xor
add
cltd
add
xor
add
xor
add
data16
add
add
data16
cwtd
add
data16
add
incw
add
xor
add
cltd
add
cltd
int3
add
cltd
incl
add
add
add
xor
add
data16
int3
cltd
add
int3
int3
add
int3
incl
add
data16
lcall
add
add
add
add
add
add
xor
cltd
add
add
add
add
add
xor
add
xor
add
xor
xor
cltd
add
xor
add
xor
add
data16
xor
add
data16
cwtd
add
data16
add
incw
xor
xor
xor
cltd
add
cltd
int3
add
cltd
incl
xor
add
xor
xor
xor
data16
int3
cltd
add
int3
int3
add
int3
incl
xor
xor
xor
data16
lcall
add
incl
data16
add
xor
data16
data16
add
incl
xor
add
xor
xor
xor
add
incl
data16
data16
data16
cltd
add
int3
add
add
cwtd
xor
cwtd
data16
cltd
add
int3
add
incl
data16
add
data16
xor
data16
cltd
add
int3
add
incl
incw
add
xor
lcallw
add
add
add
add
add
xor
add
add
add
add
cltd
xor
add
data16
cltd
xor
cltd
xor
cltd
cwtd
add
xor
add
cltd
data16
cltd
int3
add
int3
add
cltd
int3
xor
data16
data16
int3
int3
add
incl
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cltd
data16
cwtd
add
data16
add
cltd
add
int3
cltd
xor
int3
cltd
data16
cltd
cltd
add
cltd
int3
add
cltd
incl
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cltd
add
int3
int3
add
int3
incl
int3
incl
add
pushl
add
lcall
add
incl
int3
add
add
add
incl
cltd
add
xor
add
xor
add
xor
pushl
cltd
add
xor
add
xor
add
data16
jmp
add
data16
cwtd
add
data16
add
incw
lcall
xor
lcall
cltd
add
cltd
int3
add
cltd
incl
dec
add
dec
xor
dec
data16
int3
cltd
add
int3
int3
add
int3
incl
pushl
add
jmp
lcall
add
incl
jmpw
data16
incl
jmp
add
incw
jmp
and
movsl
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
incl
movsb
mov
addb
add
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
or
or
or
or
or
or
or
or
or
or
adc
adc
adc
adc
adc
adc
or
or
mov
mov
adc
or
cmpsl
jmp
repz
repz
sbb
or
mov
sbb
mov
cmpsw
into
into
into
into
mov
sbb
sbb
into
into
pop
pop
cmpsl
into
mov
sbb
mov
lods
into
lods
div
hlt
div
sbb
sbb
into
lods
lods
lods
lods
lods
lods
repz
mov
jae
lods
div
cmpsl
fldcw
or
or
mov
hlt
div
mov
or
add
lods
lods
lods
test
mov
or
or
push
imulb
inc
inc
or
or
in
push
div
div
notb
or
or
call
or
or
in
in
in
in
in
in
in
in
or
or
jmp
add
jmp
add
inc
add
and
add
add
add
add
add
incl
add
inc
add
jmp
add
jmp
add
add
add
jmp
pop
jmp
ud0
add
int3
fstl
jl
jecxz
cmc
fwait
in
jbe
ljmp
jge
fs
aad
repz
and
ds
xor
inc
sahf
cmp
rcll
dec
xchg
pop
std
pop
jecxz
push
sbb
test
in
push
not
mov
xor
dec
fcomps
je
jmp
lods
popl
sub
fidivs
mov
addr16
lods
imul
adc
adc
adc
popf
jno
xor
adc
outsl
sub
dec
push
lds
xchg
xor
xor
push
mov
adc
add
out
les
negb
ja
and
pop
fwait
mov
call
mov
inc
leave
call
xchg
inc
andl
les
arpl
adc
ja
push
lea
or
xchg
push
ljmp
inc
sbb
daa
orl
mov
xchg
push
mov
sub
and
sub
push
mov
stc
xor
adc
scas
loope
stos
lock
popf
push
inc
fwait
xchg
int
nop
pop
mov
cmp
pop
sbb
sbb
inc
cmpsb
ja
inc
cmp
inc
mov
outsb
fwait
cmp
push
lds
scas
andb
lcall
pop
push
inc
xlat
mov
es
dec
into
addb
aas
pop
test
pop
cltd
push
sub
sbb
lock
shll
add
fmulp
aas
aaa
adc
pop
cld
xchg
pop
imul
popa
add
add
push
mov
mov
loop
adc
and
dec
clc
cs
xorb
push
cltd
bound
dec
aad
push
mov
mov
ret
lret
repnz
mov
jle
push
jno
dec
scas
jle
mov
rolb
sub
add
or
pop
mov
imul
or
push
push
inc
in
dec
xchg
loopne
push
icebp
jmp
and
in
sahf
inc
addr16
loope
shlb
repnz
and
loopne
dec
mov
mov
call
dec
outsb
xchg
enter
push
dec
push
dec
cmp
dec
cs
clc
cmpsl
scas
inc
mov
mov
jle
xor
fistl
movsl
int
mov
out
pop
mov
adc
push
lcall
movsb
iret
lret
into
cltd
mov
pusha
fs
sbb
xor
in
in
mov
imul
xchg
inc
outsb
test
addb
mov
cmpsb
inc
les
shlb
int
add
imul
aaa
xor
movsb
sub
or
mov
popa
and
outsl
ljmp
cs
cs
and
pop
add
das
mov
push
pop
jnp
gs
cwtl
pop
or
sbb
mov
sbb
jle
jl
xchg
push
outsb
dec
test
or
jno
xchg
stos
push
in
mov
jae
dec
mov
xor
pop
enter
notl
mov
and
jecxz
cmp
cmc
lods
jnp
ret
jg
push
cmp
sbbb
mov
jae
loop
sub
stc
in
or
push
cmpsb
adc
xchg
dec
mov
cmp
add
pop
cmp
pop
add
movsb
movsl
and
mov
or
test
mov
bound
stc
pop
xchg
fcomps
enter
scas
push
iret
jno
addl
scas
push
cmp
test
nop
loope
add
in
jp
jge
or
cmp
jp
les
jp
and
inc
ss
insl
repnz
scas
stos
xchg
add
sqrtps
mov
adc
jo
arpl
cmpb
push
push
in
jmp
sti
adc
or
xor
xor
sahf
cltd
repnz
iret
mov
scas
insl
fadds
sbb
fwait
cmp
mov
ret
movsl
and
cmpsl
lret
sbb
pop
js
fildl
inc
pcmpeqd
fsts
mov
add
insl
or
or
movsb
scas
aaa
call
loope
cld
xchg
movsl
out
cli
fbstp
jecxz
fdivl
push
aam
shlb
xlat
sub
mov
or
jae
mov
mov
xchg
js
mov
mov
jle
out
inc
xor
mov
insl
das
in
sti
adc
dec
push
jno
cmpsl
pushf
mov
or
jle
adc
dec
stos
mov
adc
pop
hlt
lcall
gs
rcrb
sbb
mov
jo
leave
cmp
sub
cmc
mov
and
into
in
stos
ficoms
shll
jb
and
aam
subb
inc
jns
lods
out
push
into
leave
insb
stc
cmp
xorl
fiaddl
jo
stos
daa
loop
in
mov
jmp
add
adcb
cmpsb
or
xchg
push
loop
cmp
cwtl
push
xchg
scas
push
mov
cmp
jle
shl
es
icebp
add
xchg
or
sbb
mov
sub
outsl
or
push
fsubl
test
das
cmpsb
hlt
pop
sbb
jl
mov
daa
mov
xchg
adc
pop
inc
into
add
xchg
icebp
adc
out
pop
dec
leave
call
and
mov
push
xor
sbbl
imul
sub
pop
inc
loope,pn
es
jg
iret
xorl
jl
pop
ret
mov
pushf
imul
cmp
shrl
dec
dec
iret
scas
in
dec
int3
mov
xor
adc
add
and
mov
sti
xchg
loope
gs
sarl
mov
dec
pop
jno
cmp
pop
push
xchg
push
pop
or
stos
or
fwait
in
or
or
push
inc
cmp
mov
aas
pushf
gs
shlb
cmp
in
push
pop
xor
call
out
mov
std
mov
jecxz
push
inc
mov
dec
stos
stos
cmp
xchg
xor
cmp
fistl
inc
and
pop
inc
mov
repz
pop
in
pop
scas
mov
addr16
imul
or
adcl
mov
push
pop
or
sub
sbb
sbb
add
jg
mov
sub
jl
std
imul
in
lea
mov
add
outsb
iret
and
pushl
cmp
xor
fwait
mov
ds
cwtl
aaa
and
xchg
mov
pushf
xchg
lret
popa
mov
daa
leave
test
mov
nop
div
xlat
mov
push
fsubs
sub
ja
adc
pusha
fidivl
mov
push
enter
jecxz
dec
outsb
dec
aaa
mov
adc
pop
sbb
fwait
mov
ljmp
cmp
push
or
mov
xor
mov
sbb
pop
xor
call
movsl
arpl
mov
jb
call
mov
push
int3
mov
in
inc
push
mov
push
shl
aam
jbe
aas
pusha
mov
push
repnz
mov
xchg
scas
mov
add
lods
bound
mov
add
mov
in
inc
cwtl
or
mov
cld
gs
cmpsb
push
std
fndisi(8087
pop
mov
lds
ds
jl
repz
imul
scas
xchg
cwtl
add
sub
push
cmp
pop
ret
xchg
lock
dec
push
subl
filds
aaa
pusha
xchg
jecxz
scas
fisubrl
shrb
inc
shl
sub
ljmp
and
fistpl
das
je
xchg
gs
xchg
jge
lock
mov
adc
adc
xor
imul
push
lahf
sub
sbb
push
jnp
sbb
mov
mov
pushl
repz
xor
xor
push
mov
out
pop
jecxz
movsb
in
out
or
sbb
lods
mov
push
mov
mov
leave
enter
cld
adc
sahf
out
aad
or
adc
jl
es
pop
rolb
mov
mov
jnp
scas
pop
imul
in
xchg
fdivr
js
mov
lcall
mov
adc
inc
int
xor
inc
cmp
cld
test
jmp
in
faddl
push
and
mov
rcrb
mov
sbb
jl
dec
sti
jl
xlat
add
push
fs
dec
leave
inc
or
les
cmp
mov
ret
pushf
inc
mov
jecxz
jno
pop
pop
mov
jge
movsb
dec
jno
dec
sub
inc
cmpl
cmp
cmpb
sub
xlat
std
mov
mov
sub
cli
xchg
insb
mov
leave
pop
lods
xchg
push
push
xchg
in
mov
bound
stos
out
add
xor
mov
jg
dec
lea
cld
test
push
std
push
xchg
xlat
pop
movsb
push
call
lea
insb
jb
inc
call
fstps
mov
push
rcr
shr
in
dec
dec
movsl
add
adc
test
mov
movsb
cmp
pop
stos
mov
lds
mov
adc
add
iret
mov
clc
aad
lods
add
fs
test
pop
mov
pop
push
pop
cmpsl
adc
push
test
sub
add
jmp
rclb
lahf
and
insl
mov
aaa
pop
dec
dec
sbb
popf
ret
mov
push
inc
add
insl
cli
js
mov
and
mov
loop
sbb
cli
cmp
nop
pop
inc
iret
movsl
loope
or
jle
mov
shrl
mulb
stos
mov
sub
pop
pop
xor
icebp
or
fwait
in
ret
mov
pop
stc
fnstenv
jmp
pop
mov
or
mov
into
adc
pop
andl
lods
mov
scas
dec
mov
xchg
hlt
push
fmul
fdivrl
fdivrl
cmp
mov
and
mov
es
stos
cmp
fisubl
add
ja
pop
dec
repnz
cmp
repz
mov
adc
sti
shrl
pop
mov
mov
popa
cmpsl
fbstp
fnsave
popa
sbbb
stc
mov
pop
pop
fsubrl
nop
push
cli
in
or
sbb
cmp
aaa
mov
std
jno
ret
add
mov
cmpsb
mov
mov
push
add
adc
sbb
mov
jo
ss
pop
std
xor
mov
data16
fcmovb
data16
or
cmp
xchg
enter
cld
stos
xor
mov
jg
decb
mov
aas
push
pop
fiadds
jb
iret
add
rorb
dec
mov
bound
movsb
adc
iret
popf
mov
popf
push
push
mov
lds
mov
movsb
or
subl
adc
or
or
out
js
add
mov
dec
ja
cwtl
add
call
lahf
movsl
mov
ljmp
sbb
sub
dec
clc
in
jbe
mov
cmp
or
sbb
pop
into
sbb
xchg
jno
add
dec
mov
xor
xchg
pop
ret
push
xor
cwtl
push
mull
and
in
add
mov
cmp
in
out
dec
push
push
insb
fwait
aam
int3
imul
jb
in
lds
sbb
or
pusha
mov
test
rorb
and
rcrl
inc
cmpsb
or
xor
ljmp
pushl
iret
jge
adc
popl
mov
shlb
arpl
ja
dec
pop
pop
or
pcmpeqb
rorb
pop
pusha
movsb
int3
push
fcmovbe
xchg
and
xor
sub
test
xchg
movntps
xor
pop
repnz
test
outsb
pop
jle
scas
inc
lea
push
pop
sub
xchg
outsl
in
sub
and
cmpsb
cmp
xchg
in
sahf
lret
repz
pusha
into
scas
and
cmp
lock
mov
mov
lods
stc
imul
mov
ror
sbb
or
and
push
xor
ja
cwtl
jp
mov
mov
inc
lock
xchg
imul
lods
subb
push
sbb
mov
in
outsl
sbb
test
adc
cmpsl
out
xorl
insl
adc
nop
dec
dec
push
gs
push
xchg
std
and
jo
cwtl
sbb
mov
fwait
xchg
leave
repz
int3
sbb
andb
inc
cmpsl
xchg
es
bnd
loop
lret
mov
stos
or
xlat
sbb
push
out
ret
pop
mov
xchg
lock
push
sub
lock
jg
jb
lcall
add
aam
dec
cmpb
mov
jne
push
xchg
sbbb
dec
out
jecxz
push
mov
mov
imul
mov
lods
sbbl
fcoms
imulb
int3
in
ret
xor
in
cmpb
and
inc
insl
adc
stc
mov
movsb
andb
push
mov
aas
mov
leave
mov
cmp
xchg
push
test
sbb
jbe
mov
lret
cmpsl
into
mov
scas
push
sub
mov
mov
stos
mov
or
mov
mov
pop
je
into
pop
shll
sub
jns
pop
fbld
add
push
dec
lcall
rcll
sub
int3
mov
xlat
mov
sbb
les
push
adc
inc
lea
sti
iret
in
push
test
jmp
fwait
adcb
les
cmp
xchg
lahf
imul
sub
jb
adc
xchg
xchg
shll
cmpsl
inc
js
call
push
jb
bound
cmpsl
stos
mov
stos
aas
xor
adc
dec
jb
lods
pop
push
mov
les
sub
int3
ss
std
fidivrl
dec
mov
arpl
movsl
scas
jecxz
push
xor
mov
ficompl
xchg
sub
nop
jb
lcall
xor
inc
icebp
icebp
mov
cmpsb
fs
jbe
cmp
push
pushf
in
inc
or
dec
pop
inc
popa
shl
xchg
mov
xchg
pop
pop
sub
xchg
xchg
clc
xchg
hlt
xchg
adc
into
scas
xchg
scas
and
mov
adc
pop
push
repnz
outsl
xchg
add
xor
ret
lods
push
mov
test
bound
adc
ret
sub
sbb
cmpsl
xor
out
jo
add
mov
es
xor
int
test
jp
pop
je
and
loop,pn
and
inc
pop
cmpb
push
test
pop
sub
push
and
inc
sub
pop
imul
mov
pop
pop
mov
xor
sti
out
pop
jge
xor
mov
scas
adc
out
add
jne
arpl
sbb
bound
outsl
sbb
inc
or
mov
xor
pop
and
and
aas
lock
and
inc
das
into
loope
iret
or
add
sbb
bound
loopne
arpl
adc
dec
fiaddl
sub
fwait
sti
imull
xor
insb
cmp
xor
clc
ret
xor
out
mov
add
ret
je
scas
xor
adc
popf
adc
jbe
adc
sar
inc
mov
sti
pop
or
inc
xchg
jmp
shlb
clc
movsb
inc
pop
lods
or
xchg
aas
aas
dec
xchg
inc
subb
popf
fsubr
fneni(8087
mov
fwait
test
sbb
jnp
fwait
mov
nop
mov
nop
or
inc
ds
test
mov
cmpsl
pop
and
cs
or
shrl
addr16
loop
fwait
int3
inc
and
xor
testb
mov
adc
roll
mov
aam
add
mov
subb
dec
inc
aas
adc
cli
cmp
adc
and
into
xor
push
out
mov
sbb
pop
dec
test
mov
mov
mov
testl
and
inc
or
push
faddl
pop
push
fstpl
jb
pop
dec
mov
cli
inc
test
inc
jp
push
adc
fwait
dec
inc
jecxz
mov
fs
push
mov
cmpsl
subb
popa
mov
lahf
nop
cltd
inc
cmp
mov
mov
xchg
adc
sbb
cmc
xor
aaa
je
cs
pop
inc
stos
mov
das
add
ret
push
lret
lcall
inc
decl
test
rolb
xchg
pusha
sub
iret
push
ds
jns
test
sub
std
xorb
mov
decl
and
push
cmc
faddl
push
mov
ficoml
or
mov
cmp
inc
inc
ss
hlt
sbb
xor
aaa
idiv
adc
popf
int3
dec
or
clc
aad
std
pop
cli
adc
into
nop
mov
cmc
insb
push
add
push
fwait
dec
cmpl
aas
xlat
push
mov
and
adc
pop
mov
cmp
lahf
mov
adc
hlt
mov
enter
stc
xor
popa
nop
movsl
lret
push
add
out
fwait
mov
xchg
pop
cld
in
fldenv
xorb
push
xor
repnz
push
sub
roll
dec
aam
imul
inc
add
xor
es
jb
sahf
les
adc
jnp
push
xor
lds
xor
dec
cli
adc
sub
push
repz
lock
lret
dec
sarl
mov
dec
test
xorb
dec
test
leave
pop
movapd
mov
imul
sbb
test
lods
mov
push
fdivrl
xor
inc
cmpl
movsb
test
pop
xor
or
add
ftst
lret
shl
into
jns
or
ds
jns
xlat
sbb
rorl
add
stos
and
imul
insl
mov
mov
roll
mov
mov
daa
adc
cmp
xchg
pop
repz
cs
jle
leave
jg
arpl
lea
adc
cmp
stos
pusha
pop
imul
jae
push
repz
mov
lds
adc
sbb
daa
inc
push
jecxz
pop
imul
inc
lcall
sahf
pop
shll
inc
cwtl
rorl
push
mov
int
mov
sub
mov
daa
pop
in
jmp
sbb
add
sbb
mov
xchg
xchg
pop
mov
mov
int3
add
pop
insb
cld
movsl
xchg
and
or
or
ljmp
jne
cmp
dec
lret
in
xchg
mov
addr16
into
push
jp
mov
jge
sub
testb
fdivp
rcrb
cmp
adc
cmpsb
std
dec
mov
test
in
cmpsl
dec
jbe
pop
and
cwtl
ret
dec
sbb
lds
out
subb
idivl
adcb
or
xor
push
jb
push
xchg
sbb
xchg
cmp
fcoms
iret
sub
inc
sbb
mov
or
or
test
sbb
cmp
rcrb
in
out
cmpsl
add
sahf
out
arpl
jmp
ficompl
clc
jno
pop
sub
sub
xchg
mov
cmp
test
pop
outsb
jne
or
sbb
inc
cmp
aam
push
mov
and
leave
xor
test
in
stos
int3
movsl
cli
repz
ds
insl
cmpsl
push
nop
je
xchg
cmp
adc
mov
mov
ror
out
fiadds
pop
enter
out
cmp
nop
out
mov
lock
mov
and
cwtl
xchg
sbb
fs
out
mov
shrl
into
inc
lahf
jl
out
test
lds
lods
dec
mov
popf
lods
out
pop
cmp
call
or
adcb
inc
outsb
scas
imul
sub
xlat
lahf
mov
and
pop
ret
fwait
sub
fstl
mov
push
ja
jae
xchg
addb
sub
sub
mov
mov
pusha
mov
add
inc
cmp
ja
xor
sahf
inc
cmpsb
out
mov
ja
xor
cld
call
sub
push
sub
push
mov
adc
cmc
js
jbe
and
jo
stc
dec
jno
sbb
sub
call
adc
insl
or
xor
pop
mov
jb
jecxz
cmp
cmc
push
dec
shl
push
in
push
daa
sbbb
sbb
mov
jmp
sbb
lret
fildll
xor
jne
cmp
loopne
jl
ljmp
ja
test
inc
add
lahf
hlt
mov
mov
int3
call
adc
cmc
fwait
aaa
aaa
inc
pop
enter
inc
aam
sbb
bound
mov
mov
cmpsb
mov
std
cwtl
pop
push
pusha
xchg
push
pop
sbb
sub
jl
push
jbe
bound
push
lahf
mov
test
mov
inc
push
mov
lret
xchg
into
test
outsl
mov
fimull
fisubs
mov
jecxz
lea
xchg
insb
je
rcrl
mov
xchg
gs
inc
ja
int3
xor
add
mov
adc
mov
sub
mov
fs
imul
insb
mov
pushf
in
sub
rcr
dec
cmpsb
dec
daa
movsl
jns
push
clc
xor
ljmp
sub
les
push
fwait
sub
jnp
fs
fwait
outsb
push
movsl
jmp
add
add
jne
in
sub
lock
in
out
mov
xchg
nop
jg
sub
pop
xchg
cwtl
sbb
ss
movsl
push
mov
or
dec
xor
push
inc
push
jp
outsb
dec
into
out
divl
daa
and
mov
xchg
dec
and
mov
cmp
js
push
jl
les
into
arpl
imul
push
mov
lock
dec
mov
pop
in
ljmp
xor
mov
adc
dec
cmp
cmc
in
push
nop
hlt
push
test
cmp
push
xchg
inc
lods
pop
fisubrl
addr16
or
or
jg
adc
xchg
push
xchg
adc
jge
inc
bnd
and
mov
sbb
or
and
scas
sbb
xchg
sbb
movsb
scas
adc
cld
sahf
push
aas
xchg
fistpll
or
das
xchg
cmp
insl
clc
sbb
loop
or
cmpsb
cltd
push
mov
imul
mov
in
xchg
fcompl
test
mov
xchg
xchg
test
pop
push
and
push
adc
outsl
and
rolb
mov
fldl
push
sub
mov
std
sub
lea
enter
inc
aaa
adc
out
jmp
nop
mov
int
ret
mov
fsubrl
repz
add
enter
stos
sub
lret
fwait
ds
stos
lods
sub
in
xchg
addb
in
popl
dec
adc
inc
jge
insb
or
loopne
sub
adc
xchg
mov
push
dec
and
pop
mov
sahf
test
cmp
mov
insl
test
sbb
iret
inc
sbb
cmpsb
mov
dec
int3
inc
int3
push
subl
jl
lcall
fcomps
int
cmp
jne
outsb
mov
into
lahf
sbb
push
aad
jne
xor
stc
cld
jge
push
scas
shl
adc
and
icebp
lods
pop
mov
out
and
inc
test
fsts
xchg
cmp
sub
lahf
in
lea
jo
popf
mov
inc
aad
dec
jnp
ss
in
rcrb
negl
pushl
xor
and
insl
dec
into
inc
lret
and
push
ljmp
jae
cmp
mov
sbb
addr16
aam
pop
pop
jnp
test
loopne
ret
loopne
lret
push
sbb
mov
insl
or
jae
pop
pop
xchg
mov
inc
lods
fdiv
inc
jb
out
pop
push
xorb
add
movsl
daa
das
mov
sbb
and
and
cld
cmp
imul
mov
push
add
iret
lea
cmp
mov
sbb
fdiv
inc
fists
sahf
into
mov
mov
mov
xchg
clc
and
cmpsl
cmp
sub
leave
and
dec
adc
rcrb
shll
fsubr
outsb
mov
mov
jp
sti
cmp
mov
cwtl
loope
push
adc
fcmovb
xorb
and
loope
jne
movsl
pop
cmpsl
fs
lret
std
arpl
mov
sti
cmpsl
mov
push
jae
movsl
mov
imul
sub
cmpsl
lods
xchg
loope
js
dec
sbb
mov
scas
pop
out
add
mov
or
movsl
ret
mov
enter
jae
xchg
out
loope
sbb
hlt
sub
xor
sbb
xchg
xchg
fsubl
mov
and
call
jo
xlat
mov
adc
mov
fnsave
add
push
and
imul
enter
mov
or
stos
push
jb
inc
mov
jle
std
xor
sbb
imul
inc
xor
mov
adc
cwtl
lods
into
xor
cwtl
dec
shl
lret
push
iret
push
pop
das
shlb
sarl
bound
ljmp
dec
test
push
push
jbe
jl
dec
insl
push
push
push
les
jle
jno
mov
cwtl
dec
sbb
repz
xchg
or
inc
sarl
push
and
incb
in
dec
fsubrs
xchg
add
gs
mov
repnz
xchg
mov
cmc
mov
mov
out
das
bound
lock
mov
add
mov
and
sub
xchg
addr16
imul
stc
lea
sbb
mov
pop
int3
mov
cli
sub
out
aaa
test
sub
pop
xor
in
or
xor
out
inc
aaa
and
xchg
inc
leave
xchg
notb
xor
stos
lods
insb
stos
aam
sub
jge
jp
pushf
das
add
xorb
jecxz
bound
insl
pop
pop
add
fsubrs
mov
push
lds
inc
push
adc
cmc
dec
popa
jb
ja
movsb
push
jecxz
push
push
mov
fmull
scas
push
es
inc
sbb
sub
filds
mov
ret
pop
rcrb
cmp
pop
test
je
dec
sbb
imul
in
pop
icebp
pop
pop
loop
bound
movlps
sbbl
cmp
and
or
mov
pop
push
jmp
mov
int3
shll
cltd
mov
ds
jg
sub
ja
dec
xor
les
arpl
cwtl
push
inc
dec
rcr
xchg
jns
mov
les
sub
out
sub
sbb
mov
and
sbb
add
hlt
test
and
int3
pusha
aam
add
std
iret
aas
cltd
push
pushf
pop
frstor
outsb
lahf
xchg
mov
mov
pop
xlat
adc
jne
sarl
mov
out
and
popa
fwait
lahf
stc
sbb
inc
push
outsb
push
repz
test
lret
in
lods
cmp
mov
sbb
aas
aas
packsswb
mov
and
xchg
xor
pushf
push
jae
add
pop
sub
jge
aam
push
and
adc
sub
lahf
lret
xor
mov
outsb
jno
mov
gs
ds
int
pop
fcmovu
sbb
cli
push
das
in
pop
outsb
dec
out
sub
repnz
cwtl
loopne
imul
dec
popa
mov
cmp
es
clc
push
loopne
adc
pop
adc
xchg
shlb
sub
stos
inc
in
push
ljmp
adc
gs
mul
dec
in
sbb
jo
add
mov
or
mov
jecxz
push
insb
inc
daa
out
ss
repnz
iret
mov
xchg
aam
scas
jle
dec
repnz
xchg
xchg
pop
rorl
push
stc
in
vminss
sbb
cmp
dec
neg
jg
lahf
mov
loope
and
loope
sub
shlb
mov
mov
lods
or
fisttpll
pushf
sub
and
adc
push
sub
sti
jecxz
add
push
mov
insl
sbb
sbb
jns
mov
mov
scas
sahf
dec
push
adcl
mov
jg
sbb
mov
mov
xchg
push
pop
movsl
lock
or
loop
push
push
rorl
mov
mov
inc
pop
dec
fdivr
lds
xorb
cmp
jmp
add
jno
sbb
mov
pop
jp
xchg
pop
ret
fs
cs
faddl
js
dec
and
in
inc
pushf
push
and
in
shl
jle
xor
pop
cli
mov
pop
fcoml
fldt
inc
shll
cmp
notb
mov
inc
mov
jae
add
push
incb
pop
aas
clc
mov
nop
lcall
or
das
pop
je
jl
cmpsb
xchg
sub
jecxz
cs
push
pop
shrl
mov
shrl
push
mov
inc
xchg
add
in
fisubs
adc
out
cmp
popa
cmp
imul
std
adc
xchg
aam
ja
pop
add
xchg
add
jae
xor
xor
jecxz
pop
cmovs
das
lea
cli
dec
xchg
push
or
js
cltd
jo
push
aas
int
push
cmp
sub
scas
stos
cmp
adc
lret
pop
lret
sub
jb
and
jns
cmpsb
push
stc
sub
push
dec
cmp
or
dec
or
mov
aas
imull
sbb
and
jecxz
jbe
jg
insb
sbb
jmp
lahf
test
xor
xchg
cmpl
xor
dec
mov
xchg
movsl
xchg
mov
nop
pop
jns
pop
out
outsl
mov
repz
movsl
test
insl
xlat
cld
mov
dec
mov
adc
clc
enter
cmpsl
mov
cmp
cmp
mov
dec
lods
cli
xor
addr16
adc
inc
loope
xlat
jbe
adc
sbb
sub
dec
mov
mov
pop
popf
sahf
subb
jecxz
xchg
sti
adc
cmp
fdivr
and
call
lods
jp
push
js
sub
dec
loope
mov
les
push
adcl
push
inc
clc
insb
jae
inc
xor
jb
into
pusha
push
pop
jae
aad
gs
scas
ret
fidivs
xor
dec
loop
jle
movsb
jle
enter
dec
xor
inc
pop
mov
jmp
adc
fistpll
loope
sbb
mov
test
mov
addl
inc
shlb
mov
push
push
and
les
xor
cli
mov
cmp
cs
adc
jae
dec
xchg
cs
ss
sub
dec
jg
ds
outsl
jnp
movsb
lret
jbe
loopne
jbe
aaa
fbld
pop
push
arpl
sbbb
xchg
loope
dec
fcmovnu
lds
ret
js
lcall
and
xchg
jne
mov
lock
rolb
mov
fcomps
mov
repnz
aad
cmp
xchg
stos
push
data16
aas
dec
xchg
sbbb
add
ret
jbe
mov
cmovne
in
xor
movsl
xor
scas
cmpsb
pusha
scas
mov
sub
outsb
and
inc
cmp
inc
inc
shll
aad
dec
sub
lods
add
xor
sub
mov
lods
xchg
push
lods
sbb
xchg
push
mov
lock
add
imul
dec
pop
cmp
loopne
outsl
dec
imul
dec
clc
iret
pop
hlt
rcll
call
fdivs
push
dec
xchg
cld
iret
jmp
pop
popa
or
mov
insb
insb
or
add
pop
or
xchg
int
pop
cmc
popa
add
inc
mov
aam
repz
sahf
ret
fs
xlat
mov
xchg
xlat
movsl
fiaddl
pop
inc
repnz
pop
jp
xchg
jmp
loope
cmp
fs
adc
jno
push
cmpsl
mov
insb
add
xchg
and
mov
in
pop
aas
leave
leave
xchg
pop
mov
mov
mov
movsl
rcrb
out
and
fisttpl
addl
push
xchg
xchg
push
xchg
enter
jge
orb
cmp
insb
add
mov
xchg
mov
cltd
or
or
sahf
or
cli
hlt
jb
and
mov
fs
cmc
inc
roll
lret
cltd
loope
pop
in
sub
sub
lock
lds
cmpsb
xorl
clc
loope
mov
xor
and
or
pop
int
or
and
or
and
jl
or
push
add
adc
xor
lea
inc
les
sti
insb
add
add
inc
or
ficoms
nop
sbb
xchg
xor
loopne
and
dec
jne
cmp
xor
ja
cli
data16
imul
scas
popf
out
fwait
rclb
out
in
and
xchg
shrl
jecxz
sbb
and
daa
cwtl
jb,pn
stos
xchg
sbb
mov
xchg
add
sbb
addb
rorl
sahf
out
xchg
ja
fdivr
aas
out
sbb
lods
fwait
xor
in
mov
lret
mov
push
js
sub
dec
stc
dec
inc
lahf
loop
stc
roll
add
mov
and
dec
inc
scas
mov
mov
mov
or
cld
iret
mov
inc
ljmp
mov
roll
mov
cld
jo
mov
jo
mov
aam
jecxz
scas
jge
mov
and
js
enter
rcr
and
push
mov
out
mov
std
jne
mov
mov
movsl
jge
add
icebp
cltd
cs
mov
outsl
lods
pop
or
inc
cmpsb
xor
hlt
int
or
ret
call
mov
aas
dec
movsbl
iret
test
repnz
pop
test
out
in
leave
je
push
jg
adc
cmp
inc
xor
shrl
popf
mov
cmp
push
jne
dec
ja
lahf
dec
inc
sbb
lods
std
jecxz
lahf
movsb
inc
test
lcall
lahf
mov
loopne
in
mov
aad
in
out
int3
inc
std
lret
bound
pop
dec
cmpsb
jbe
shlb
test
cmpb
xchg
dec
sbb
iret
and
sub
lgs
js
shlb
cld
push
aam
add
cwtl
scas
add
shll
xor
in
fadds
out
mov
push
imul
test
cmc
cmp
push
pushf
test
push
dec
jecxz
ret
inc
pop
sub
pop
xchg
insl
mov
and
adc
cli
aas
loope
sbb
xchg
les
inc
fisttpll
test
jecxz
dec
dec
dec
repz
repz
mov
movsl
push
inc
das
mov
mov
lods
jmp
rclb
testb
not
data16
pushf
mov
push
push
ret
inc
and
es
scas
mov
ljmp
sbb
test
mov
pop
add
and
pusha
sub
or
xor
lcall
outsl
clc
ret
dec
mov
rcr
adc
push
jge
inc
imul
sub
aad
sahf
xor
rorl
out
jb
in
push
pop
and
jnp
mov
add
enter
insb
push
das
mov
mov
adc
mov
inc
sbb
mulb
enter
add
mov
jecxz,pt
add
into
xor
jbe
jge
popa
repz
movsb
dec
push
cmp
ficoml
inc
rcrl
lods
sbb
addb
stos
mov
xor
jnp
popa
inc
int
mov
or
inc
mov
xchg
cs
icebp
push
cwtl
push
pop
pop
inc
mov
in
jmp
cmp
dec
xchg
sbb
outsl
mov
add
or
sub
mov
pop
insb
shll
out
sbb
jmp
pop
mov
jne
in
dec
lods
xor
cld
cltd
mov
xchg
lea
call
inc
mov
jg
test
sub
dec
mov
jb
sbb
mov
push
cmp
adc
hlt
test
xor
add
jg
add
cltd
shl
or
fwait
dec
xchg
fwait
stos
push
mov
mov
jle,pn
pusha
ret
sti
sbb
cltd
inc
out
xchg
js
cmp
out
das
add
call
outsl
rcr
ja
aam
add
mov
rcll
cltd
hlt
outsl
cmp
xor
outsl
stc
mov
push
daa
pop
mov
and
aas
in
iret
push
push
mov
inc
add
fpatan
mov
out
inc
xor
shr
dec
gs
jecxz
mov
push
loop
enter
repz
cmpsb
mov
stc
cmp
faddl
dec
jb
cwtl
leave
add
cmp
es
jae
insl
ja
sbb
sub
enter
add
push
sti
jnp
cmp
xlat
inc
push
push
dec
test
and
cmp
ret
je
inc
int3
mov
enter
int3
rorb
push
in
sub
jg
sti
loope
shlb
gs
mov
cmovp
les
stos
data16
sbb
mov
jge
adc
cltd
push
call
nop
mov
sub
push
lods
loop
xor
cmp
or
xchg
imulb
add
or
add
cmp
stos
mov
jb
lahf
mov
iret
popa
mov
inc
rcll
daa
adc
push
cmc
cmp
sub
push
xlat
jns
inc
loopne
das
icebp
lret
push
popa
lds
push
iret
xchg
cmp
testl
mov
call
clc
pop
xchg
mov
push
xor
sbb
roll
lea
sub
cmp
loopne
push
js
imul
mov
popa
in
divl
outsl
cs
popa
cs
and
inc
push
and
adc
jne
mov
xchg
stc
dec
mov
mov
pushf
mov
lea
neg
orl
add
pusha
push
cmp
xor
pop
jmp
js
cmc
enter
sbb
sbb
mov
insb
xchg
dec
daa
int3
shl
mov
insb
fnstenv
iret
loope
aad
js
aas
sbb
and
adc
pop
daa
dec
xor
gs
mov
fistl
notl
mov
cwtl
adc
fsubs
inc
push
push
fwait
out
std
cli
fld
add
mov
jmp
pusha
mov
loopne
sub
mov
ret
movsl
sbb
fidivrs
hlt
lds
repz
xchg
push
inc
adc
pusha
arpl
int3
dec
jb
push
inc
mov
xchg
and
add
and
jno
cmpsb
stc
dec
or
xchg
pop
retw
mov
ljmp
xchg
pop
iret
out
in
bound
pop
das
push
and
je
adc
cld
or
in
push
jg
push
inc
imul
inc
jle
cmp
movsl
push
adc
mov
pop
xchg
in
add
enter
push
pop
cli
roll
and
sbb
mov
adc
xchg
jne
sbb
jl
or
fldcw
aaa
cld
loop
dec
movsl
out
sub
fimull
mov
add
outsl
lahf
and
push
hlt
shlb
push
jb
xor
in
pop
sub
jne
jbe
and
cmp
cwtl
icebp
cmp
adc
call
sti
hlt
loope
xchg
or
sahf
cmp
inc
gs
xchg
xor
mov
fs
mov
shrd
sar
adc
xor
pop
xchg
jo
pop
inc
movsl
negl
shll
mov
mov
lahf
xchg
mov
call
leave
push
add
adc
test
lock
xor
loop
jge
insb
push
pop
pop
mov
add
pop
test
pop
sub
sbb
cs
imul
mov
mov
shll
xchg
mov
insb
sub
push
lock
xor
lret
repz
es
and
loopne
mov
aaa
fsub
std
cwtl
add
mov
pop
shll
add
into
addl
imul
mov
adc
mov
rorb
xchg
jmp
insl
pop
pop
subl
mov
xor
roll
mov
push
mov
mov
jnp
outsl
sub
hlt
scas
xlat
xchg
aam
mov
jno
adc
addr16
jmp
mov
test
popf
sbb
aam
jle
xor
adc
push
jbe
jbe
mov
rcl
fcoms
cmpsb
pop
xchg
in
cmp
pop
ja
mov
inc
jne
out
mov
cs
push
jnp
mov
lret
cli
xchg
cmp
adcl
lods
insl
or
fs
sbb
stos
sub
jo
scas
fsubrs
lock
sub
cmc
push
mov
xchg
cmp
mov
xchg
enter
bound
mov
xor
cmpsb
cs
insb
add
sub
jnp
fldl
mov
pop
repnz
jecxz
fucomp
pop
pop
cwtl
aas
mov
cld
js
mov
push
lods
shl
sub
mov
lods
xlat
shlb
test
repnz
xlat
push
dec
mov
mov
inc
and
cwtl
push
xchg
icebp
popa
mov
push
dec
jp,pt
stc
jnp
mov
std
xchg
test
cmpsl
leave
dec
jbe
and
mov
pop
mov
out
sub
aam
mov
lea
loopne
add
xor
inc
adc
xchg
push
pop
pop
push
lods
pop
xchg
jmp
test
stc
imul
int3
push
pop
pop
daa
das
mov
repnz
ljmp
dec
mov
stos
out
lret
std
cli
push
pushf
jnp
mov
aaa
test
or
jle
gs
pop
mov
gs
pop
rclb
cmp
sub
les
mov
lock
inc
ret
jl
mov
sub
inc
es
dec
outsl
mov
int3
xor
stos
push
pop
jecxz
ret
sbb
jae
jg
add
xchg
xor
adc
mov
lret
mov
xor
fisubs
dec
das
add
imul
gs
xchg
mov
cltd
das
das
add
xor
adc
bswap
adc
call
push
xor
xor
fisubrl
std
ja
lret
incb
cli
push
xor
mov
lods
fildll
std
pop
cmp
frstor
jne
loopne
in
in
lahf
lods
clc
sub
add
jae
inc
sbb
insb
rolb
outsb
icebp
stc
fwait
pop
shrl
push
dec
push
and
push
mov
and
decl
xchg
jo
fstl
repnz
jae
cmpsl
pop
pusha
xchg
repz
cwtl
mov
adc
sub
pop
add
pop
pusha
jb
dec
sbb
test
add
test
sub
fistpll
jns
js
out
fstpl
xchg
shr
inc
pusha
mov
lock
mov
movl
mov
cs
sub
mov
sbb
sub
lods
nop
dec
test
movsb
xor
push
test
push
jo
mov
mov
test
or
in
xchg
xchg
mov
mov
pop
pop
and
sub
es
daa
mov
ljmp
fxch
pop
jnp
test
pop
jl
lcall
sbb
jp
mov
aad
shrb
insb
sbb
cmpsb
jae
or
mov
xchg
inc
mov
xchg
lcall
dec
add
xchg
jl
push
push
jmp
push
lods
imull
push
pop
daa
pop
mov
jp
das
fcompl
pop
out
shll
popa
mov
iret
outsl
xchg
mov
and
fisubrs
mov
push
cmp
jns
pop
and
movsb
mov
or
pop
rcrb
push
cmpsl
push
cli
or
mov
sub
vsubpd
pop
mov
insb
pop
pop
rolb
clc
inc
fucomip
test
push
cwtl
mov
add
or
sub
dec
sub
dec
idiv
sbb
daa
fwait
in
daa
mov
cs
xchg
mov
repnz
insb
jl
aam
jle
lahf
fiadds
test
mov
idivb
xchg
cmpsl
mov
cmpsl
sbbb
adc
and
out
sbb
dec
pop
push
inc
in
pop
fistps
insb
mov
popf
inc
xor
in
adc
enter
or
xchg
push
adc
loop
daa
pushl
mov
add
std
mov
daa
fimull
enter
hlt
push
cmp
das
lock
jbe
clc
inc
jno
test
inc
sub
jmp
mov
cs
xchg
call
fs
popa
xchg
cmp
push
cmp
imul
push
ds
dec
mov
inc
push
sub
shlb
movsb
pushl
pop
sti
in
lret
and
das
xor
in
pop
mov
fld1
jl
notw
aad
imul
mov
add
sbb
adc
inc
xchg
sbb
push
fidivs
push
jle
icebp
fiadds
sub
xchg
arpl
test
push
mov
rclb
lret
xorl
fisttps
leave
mov
push
adc
nop
enter
enter
inc
mov
jp
fnsave
mov
push
mov
xchg
jns
push
ja
bound
imul
ror
mov
in
arpl
and
dec
sbb
cwtl
and
test
in
jecxz
mov
pop
jl
lods
leave
lods
in
hlt
cmp
addr16
adc
xchg
xor
shl
out
scas
jecxz
loop
push
cmp
cmp
mov
jecxz
mov
add
mov
sub
xchg
in
xlat
shll
or
scas
fwait
pusha
mov
shrl
xor
pop
add
cltd
mov
mov
pop
std
push
and
inc
aam
or
daa
int
andl
sbb
testl
shrb
ljmp
lahf
jbe
movswl
outsb
inc
and
fsubrl
scas
cmp
mov
popf
frstor
inc
out
shll
frndint
into
out
fldt
fistl
jne
xchg
sbb
adc
lret
mov
outsb
testl
adc
insb
aas
pop
mov
lods
aad
stos
mov
jo
xchg
xor
pusha
mov
test
mul
mov
pushf
out
sbb
mov
cmpsl
xchg
popf
ret
rolb
ja
inc
sub
out
mov
daa
add
mov
sbb
mov
push
mov
xchg
popf
pop
je
testb
jmp
out
in
jl
insb
jecxz
mov
loopne
xchg
sarl
cwtl
and
cmp
xchg
pop
jmp
cmpsb
mov
test
cmp
fcmovnb
sub
ret
out
adc
and
enter
inc
sub
out
sub
pop
das
mov
pop
fimuls
adc
jns
add
mov
aaa
rorl
mov
and
xor
cmpsb
popa
in
repnz
inc
xchg
cld
mov
mov
ss
fsts
mov
xchg
pop
pop
mov
in
sti
mov
cltd
xor
sub
push
mov
imul
sahf
pusha
xor
nop
aad
fstl
test
enter
lret
das
in
cld
push
pop
xchg
sarl
push
jecxz
fwait
sbb
les
dec
add
pop
push
mov
stos
push
mov
cmpsb
push
imul
pop
add
xchg
divb
call
inc
insb
aas
jb
nop
repz
movsl
insl
mov
mov
mov
sbb
in
stc
testb
cmp
xor
popa
ret
push
sti
push
push
mov
insb
lcall
or
cmp
mov
negl
fsubrs
fstp
mov
repz
mov
repnz
pop
aas
test
lahf
testl
mov
rcrl
cmp
jmp
fs
jp
sti
jecxz
stos
sar
mov
dec
dec
icebp
in
roll
pushf
jg
add
mov
and
push
push
lahf
push
popa
ja
bound
cmp
ret
push
test
fchs
sbb
cli
and
rcrl
js
mov
push
mov
into
xor
push
sub
lods
jmp
dec
pop
cld
jbe
xor
mov
mov
fstpt
hlt
mov
cltd
inc
mov
shrl
insb
outsl
xor
add
enter
or
mov
xor
inc
cmp
hlt
mov
cmpsl
das
pop
xorl
jle
and
je
les
iret
fs
cmp
mov
fdivl
sub
push
or
dec
mov
and
and
cmpsb
fisubl
and
inc
cmp
stos
push
outsl
dec
clc
jne
out
orb
push
in
outsb
addr16
and
xacquire
mov
lock
fidivl
mov
push
call
add
paddusw
ljmp
cmc
aad
bound
fidivl
addr16
pop
fisttpl
dec
jmp
push
dec
repz
sbb
imul
leave
or
mov
inc
cmp
in
cld
mov
mov
inc
or
mov
xor
xchg
sahf
push
mov
sti
je
int3
mov
push
jo
pop
dec
inc
dec
imul
into
pop
rorl
sub
sub
xor
adc
lea
cmp
notl
push
ficompl
ds
mov
xor
das
je
adc
or
and
add
pop
ss
aas
jg
xor
push
fcomip
mov
pushf
popf
call
mov
int
cwtl
scas
push
jo
pop
cmp
cmp
pop
in
test
jge
dec
sbb
daa
mov
icebp
push
cmpb
lock
andb
mov
rorb
sti
rorb
fwait
lods
xchg
add
repz
xchg
stos
or
aas
mov
jo
add
cltd
int
jp
jp
pop
pop
scas
iret
push
pop
mov
inc
test
push
icebp
cmp
iret
pop
mov
popa
jecxz
dec
sub
rorl
push
adc
arpl
repnz
sahf
sti
lods
inc
int
mov
dec
clc
push
jo
fiadds
js
inc
mov
lcall
ljmp
pushf
push
push
cmp
pop
movsl
lds
mov
cli
sub
sbbb
loop
mov
icebp
jp
dec
xchg
push
fisubs
adc
xor
ljmp
stos
sub
push
test
shrl
shl
mov
sti
test
and
gs
fwait
nop
and
fisttpl
dec
scas
inc
pop
and
scas
movb
mov
sbb
mov
mov
xor
stos
xor
mov
je
xchg
dec
jo
rcrl
and
int3
aaa
cmp
add
cmpsb
cmp
lods
rorb
mov
fcoms
mov
pushf
btr
inc
aam
in
out
push
fldenv
insb
add
mov
pop
lahf
les
cli
xchg
or
xchg
repnz
mov
inc
adc
jnp
insl
ds
push
or
cli
adc
jnp
movsl
stos
insb
dec
test
addl
adc
inc
ss
ss
adc
or
xor
inc
adc
stos
ds
jmp
jne
stos
add
xchg
iret
push
pop
jmp
sbb
es
pop
scas
push
push
movsl
push
aas
test
fldl
int3
movsl
add
xchg
dec
out
ss
rcl
mov
rclb
movsl
jbe
mov
hlt
add
mov
xor
inc
jbe
pop
mov
cs
jbe
mov
jmp
int
stc
mov
sti
jecxz
cmp
std
mov
jle
dec
pushf
out
adcb
adc
xchg
outsl
push
pop
roll
cltd
cmp
jl
test
jno
jns
out
not
repz
sti
sbb
not
aam
inc
sbb
shlb
jg
clc
insl
dec
lahf
shll
gs
sub
negb
in
mov
fsubl
mov
push
inc
es
cmpsl
daa
xchg
loop
cld
or
dec
push
das
ret
faddp
pop
pop
addr16
dec
sahf
pop
ljmp
iret
or
int
jmp
and
jnp
cwtl
in
hlt
int3
scas
clc
push
insl
js
mov
hlt
aaa
dec
jae
push
rorb
test
cmp
mov
insl
sti
or
pushf
inc
bound
hlt
push
je
in
jmp
je
adc
and
cmpb
scas
push
iret
jb
mov
jo
mov
push
mov
into
jle
sbb
lahf
divb
sbb
push
push
and
ret
cmp
jle
add
imul
inc
ss
aam
pop
jnp
decb
stos
xchg
sbb
cld
cli
add
mov
mov
stos
imul
fdivl
lahf
aam
cmp
add
rcr
les
lods
jb
cmpsb
or
lods
inc
subb
bound
ret
insl
sbb
lcall
arpl
xchg
inc
out
inc
gs
push
sbb
inc
roll
mov
lret
out
lret
bound
fs
ss
mov
and
sub
jl
aas
data16
sarb
mov
into
mov
jae
mov
or
loopne
cld
rcrl
pushf
inc
mov
je
ss
xchg
cmc
push
popa
inc
dec
or
pop
push
imul
pop
pop
inc
adc
cmp
xchg
dec
xchg
mov
adc
pop
cmpsb
xor
and
ljmp
jg
jmp
or
test
jb
iret
data16
sbb
jge
sahf
mov
mov
push
out
icebp
adc
mov
outsl
cmpsb
add
sti
or
cmp
jb
test
hlt
imul
shlb
sub
mov
sahf
ret
ljmp
add
idivl
ret
dec
cmp
inc
cmpsl
and
jb
das
into
in
push
sahf
aam
push
pop
jno
mov
jnp
into
dec
mov
push
xchg
sbb
mov
ljmp
scas
test
mov
sbb
pop
pop
dec
xchg
jne
int3
push
int3
mov
or
dec
dec
repnz
xor
sahf
jno
sbb
pop
push
push
movsb
fucomi
shll
cs
cmpb
push
icebp
mov
dec
pop
jle
xlat
orb
xchg
mov
enter
pop
cli
xchg
push
mov
cmp
jl
and
cmp
inc
xchg
inc
pop
xchg
add
mov
cmc
dec
test
pop
jp
add
jge
inc
mov
insb
loope
repz
loopne
decb
pop
incl
or
and
out
pmulhuw
add
sti
pop
cmpsb
add
mov
push
fbld
repz
leave
jge
push
mov
dec
nop
add
inc
push
mov
mov
hlt
dec
js
pop
scas
jne
adc
dec
xor
sbb
sbb
fists
xchg
ljmp
cmpsl
cmc
cmp
cmp
pop
pop
ret
pop
adc
mov
and
stos
nop
pop
sbb
lea
push
enter
mov
mov
jno
jge
loop
cmp
lea
adc
dec
sub
sub
xor
nop
push
repz
pop
cmc
cmp
push
dec
or
sbb
das
dec
dec
mov
jns
cmpsb
or
push
pop
jb
mov
xor
rep
cmc
mov
xchg
push
lret
adc
outsb
negb
and
sarl
repnz
or
mov
jmp
mov
fs
sub
lods
add
ljmp
jge
mov
lock
xchg
push
test
icebp
es
clc
fsubl
mov
ret
dec
movsl
mov
shrl
dec
loopne
ds
or
aam
mov
lods
test
movzbl
rorb
dec
or
clc
or
xor
lret
pop
pop
pop
lcall
iret
je
cltd
jno
jp
fimuls
loope
xchg
cmp
cmp
out
xor
sbb
mov
dec
push
sbb
int3
and
icebp
sub
xlat
mov
adc
jnp
mov
nop
xor
je
lock
cli
jmp
adc
call
imul
ds
add
jle
cmc
cmpsb
imul
pop
test
jp
sbb
mov
cmpsl
rcr
pusha
lahf
inc
hlt
lods
add
add
dec
out
mov
es
xchg
sbb
sbb
pop
ljmp
xchg
rcr
dec
shrb
pop
add
mov
pop
scas
push
lods
scas
cld
mov
push
xchg
shlb
push
jle
push
jne
notb
inc
aad
fistps
dec
jg
pop
pop
popa
jae
cmc
sbb
xchg
imul
outsb
lods
xor
pop
adc
add
bound
daa
ret
pop
pop
jecxz
xchg
das
mov
mov
xchg
inc
inc
xchg
enter
stos
xor
adc
stc
je
aam
inc
gs
into
fstpl
cmp
lods
sbb
fidivrs
jl
stc
xor
scas
call
mov
roll
sbb
inc
xchg
inc
cld
jbe
mov
test
bound
mov
cmpl
insb
mov
add
ja
int3
cwtl
test
push
sub
test
test
cld
loop
dec
xlat
pop
test
sub
lahf
jge
inc
adc
shrl
mov
dec
mov
mov
jae
mov
mov
and
sub
cmp
cmp
xchg
mov
sbb
xlat
nop
inc
cmp
and
sbb
pop
cli
xchg
push
fs
mov
shrl
dec
sub
add
inc
sbb
cmpsl
sbb
jo
cmp
int
into
jns
test
xor
dec
mov
fs
out
ljmp
push
rorl
push
cmp
test
xchg
sub
testl
inc
in
loop
dec
xchg
jno
mov
add
dec
fs
xor
lahf
jno
movsl
into
movsl
ret
inc
xchg
sahf
es
xor
mov
and
sub
lds
fildll
mov
lret
jns
cli
mov
cmc
js
mov
cli
das
cmp
mov
into
pushf
lret
mov
cmc
add
imul
mov
in
add
ljmp
cmovge
add
jns
mov
adc
call
pop
ljmp
in
mov
rcrl
xchg
enter
or
iret
orps
mov
jecxz
pop
call
sub
add
adc
leave
sahf
xchg
mov
lea
mov
std
dec
divb
out
pcmpeqd
sahf
push
and
dec
inc
jne
mov
jae
out
in
lods
dec
cld
xchg
and
loop
daa
iret
mov
out
xor
sahf
and
cltd
mov
push
xor
or
push
sahf
test
or
pop
popa
rcrl
xor
mov
xchg
mov
test
sub
jp
mov
or
adc
mov
add
test
cmp
lcall
outsl
aam
mov
push
mov
dec
sub
add
lods
jge
adc
jb
sbb
sbb
cmc
sub
adc
inc
mov
add
pop
mov
hlt
enter
pop
xchg
jge
mov
jb
lret
sub
jno
cld
add
pop
jmp
mov
jb
arpl
sti
push
mov
scas
mov
or
les
test
jge
fwait
das
mov
cmpsl
cmpsb
jno
inc
jns
sbb
xchg
sub
mov
push
sub
push
push
lods
or
add
jne
jge
fistpl
and
inc
lahf
shlb
xor
xor
repnz
jge
mov
insb
dec
xor
adc
push
jmp
mov
dec
mov
jg
or
dec
scas
or
xor
xchg
push
inc
and
dec
int
repz
test
insl
pop
xchg
jmp
xorl
imul
fidivs
std
push
scas
clc
gs
lock
es
cmpb
mov
cmpsb
push
mov
jmp
xchg
dec
cld
mov
add
mov
sbb
lea
mov
push
aaa
pop
shrl
lds
out
add
sbb
aas
fbstp
jge
or
frstor
mov
push
pop
sarl
lahf
repnz
pop
cmp
rcrl
insb
xorb
jbe
adc
mov
rorb
fistl
bound
enter
loopne
mov
roll
inc
jmp
mov
enter
jg
or
adc
jns
addr16
imul
inc
enter
js
cmc
test
jno
xchg
in
test
cmc
mov
xor
sbbb
cltd
out
jge
pop
in
adc
pop
subl
bound
and
pop
aam
cmp
inc
jae
add
jbe
pop
jg
xchg
cltd
pop
jno
shlb
add
shrl
sub
mov
in
test
iret
push
addr16
cltd
lcall
out
sbb
hlt
cmp
sbb
sbb
pop
xchg
pop
pop
je
mov
mov
aaa
sbbb
sbb
stos
mov
add
xchg
sbb
rorb
sbb
out
xchg
repnz
inc
sbb
orl
mov
arpl
jno,pt
pop
cmpsb
sarl
inc
sahf
fisubs
fsubs
xchg
push
enter
dec
pop
lahf
or
mov
outsb
pop
cmp
shrl
add
push
pop
gs
sub
fstl
jne
jns
aaa
movq
jb
jne
pop
adc
dec
sbb
das
xchg
sub
testb
out
xor
or
jge
stos
xor
sahf
add
xchg
mov
ror
out
sti
fstpl
out
xor
fsubl
xchg
pop
adc
jl
mov
cmc
pop
out
mov
adc
in
xchg
rol
xor
add
addr16
or
pop
into
sub
push
imul
mov
sarb
pop
lds
add
push
aas
xor
inc
inc
insb
cmp
das
jnp
dec
xchg
movsl
xor
cmp
or
pop
pop
stos
cmp
into
adcb
mov
mul
shl
cmp
bound
lret
loopne
dec
aas
mov
scas
lea
icebp
pop
sub
repnz
push
aaa
cmp
cs
je
push
nop
leave
cmpl
mov
and
mov
push
leave
js
aaa
adc
aaa
add
push
nop
ds
jg
xchg
addb
xchg
mov
mov
jecxz
mov
imul
lods
sahf
xchg
adcb
scas
mov
mov
xor
xor
loop
aas
push
push
inc
sti
je
xchg
adc
pop
fcmovb
jmp
arpl
xor
aad
and
out
fimull
inc
clc
lds
add
xor
add
pushf
shrb
or
fmull
in
push
cwtl
xchg
neg
adc
pop
inc
loop
mov
addb
subb
addb
dec
stc
mov
fbld
jne
cmpsl
pusha
outsl
scas
and
jmp
mov
mov
jb
scas
mov
test
insb
outsb
xor
in
cli
aam
fs
mov
insb
out
int3
clc
xor
pop
xchg
fiadds
rorl
jns
jne
xchg
inc
imul
sti
push
aaa
mov
add
sahf
pop
pop
push
cltd
call
push
jae
repnz
test
adc
fildl
mov
outsb
pop
clc
and
gs
addr16
xchg
mull
mov
mov
gs
mov
mov
clc
and
xlat
stos
inc
ss
xchg
or
push
sti
jg
cmp
nop
pop
icebp
mov
jno
sti
pop
pop
scas
testb
xor
insb
jecxz
aas
nop
mov
pusha
cltd
sub
mov
mov
outsb
dec
mov
or
push
jg
mov
das
xchg
xchg
jp
inc
push
cwtl
sub
rolb
lods
sub
loopne
mov
test
insl
imul
hlt
mov
mov
dec
rorl
sub
and
into
or
leave
pop
lret
push
jl
repnz
or
outsl
cmp
out
push
lcall
leave
mov
insb
das
and
dec
mov
stos
ds
adc
popl
xor
dec
data16
test
mov
jb
je
jb
cld
mov
sub
inc
in
rolb
add
mov
cmp
add
push
push
stc
fistps
fldcw
fsubrp
xchg
lret
jge
add
shll
xchg
mov
shl
rorb
or
mov
sub
ds
sbb
cmp
sub
xchg
dec
and
shlw
fwait
lds
mov
shlb
inc
push
jge
and
icebp
clc
inc
test
mov
xor
mov
mov
cmp
fsubrl
add
pushf
push
mov
xchg
daa
orb
push
lds
dec
lret
jae
xor
jb
mov
inc
cwtl
xor
mov
aaa
xor
inc
sub
and
pop
in
lods
sub
iret
mov
xchg
sbb
pushf
rcrl
inc
rol
loope
and
mov
adc
std
int3
sub
mov
ret
pop
movsb
adc
jecxz
sti
sbb
dec
mov
xor
lcall
add
push
enter
jmp
jae
test
jnp
sub
inc
js
fcom
xor
add
sbb
inc
pop
xor
lock
push
pop
aad
cmpsl
call
fidivrl
lods
mov
dec
add
jge
cmp
fsubr
ror
in
insl
cli
inc
and
stc
push
or
jecxz
shrl
scas
xor
add
enter
sarb
mov
inc
jmp
loopne
insb
arpl
cs
imul
sub
dec
xchg
fstpl
adc
pop
shlb
jmp
cmc
test
outsl
xchg
pop
rol
pop
cmp
push
sbb
js
mov
leave
sbb
pop
or
cs
cmp
mov
hlt
dec
push
jg
jns
popf
or
sarl
cmc
xchg
inc
jle
rorl
das
push
loope
cmp
mov
xor
ss
mov
les
pop
add
cli
stos
pushf
test
pop
push
arpl
inc
xchg
lods
sub
inc
test
movsb
aas
pop
sub
stc
hlt
loop
and
aaa
dec
xchg
fiadds
imul
mov
dec
rcrl
pusha
and
mov
je
push
jmp
lcall
cmp
and
aas
cli
mov
push
insb
repz
sbbb
dec
out
dec
movb
jno
or
bound
fdivp
outsb
fiadds
jge
jbe
sub
dec
dec
cli
out
xlat
xchg
lret
cltd
arpl
jno
iret
push
fwait
in
xor
aaa
add
setne
xchg
ljmp
outsl
insb
gs
jl
push
mov
mov
sarl
xchg
mov
adc
inc
cmp
fiaddl
enter
push
and
adc
mov
out
sub
jno
scas
or
sbb
mov
mov
dec
jl
imul
or
addl
add
out
dec
inc
pop
arpl
stc
pop
xor
arpl
dec
je
f2xm1
sbb
ljmp
dec
rcrb
jge
div
dec
add
mov
mov
jae
xor
icebp
outsb
mov
cmp
dec
mov
and
js
inc
jecxz
sti
repz
jno
push
sub
mov
addr16
dec
hlt
das
cmp
or
xchg
mov
into
mov
xchg
or
sbb
cmpsb
inc
mov
add
cmp
cmp
mov
jno
mov
push
xor
gs
insl
xor
cld
xor
sub
lea
mov
xor
pop
dec
inc
sbb
mov
les
xchg
mov
repz
inc
pop
stc
inc
int
xchg
mov
pop
sub
xchg
std
stos
pop
inc
lds
pushf
ret
pop
scas
scas
pop
lock
xor
fcomps
daa
lcall
test
pop
gs
jnp
insl
and
repz
add
mov
test
popf
mov
add
sahf
std
outsl
mov
jecxz
adc
sub
ret
sub
mov
fmul
xchg
pop
cmp
inc
orl
or
pushl
mov
ss
pop
pop
mov
add
mov
adc
call
cld
mov
data16
outsb
adc
mov
pop
cmp
dec
push
mov
pusha
push
cmp
daa
stos
stos
lret
add
ret
or
mov
push
gs
sti
add
inc
fs
mov
rcll
jmp
repz
push
aam
and
xchg
mov
and
fstp
adc
jecxz
aaa
bound
mov
mov
cmp
or
adc
adc
je
pop
repz
pop
push
mov
insb
sbb
push
sarl
cmp
stos
ds
cmp
mull
mov
xor
mov
inc
fisttps
in
sub
in
aaa
loopne
jle
push
mov
out
jl
pop
mov
call
jo
sbb
push
mov
sub
cmpsl
cli
jle
movsl
repnz
and
loop
mov
inc
arpl
ds
les
inc
add
repz
scas
or
jo
mov
push
pop
jp
bnd
repz
or
cmp
adc
enter
test
mov
xor
fistps
cmp
dec
inc
arpl
jne
cwtl
jg
add
mov
nop
aam
jg
sbb
daa
pop
aas
pop
cmp
scas
sbb
hlt
ret
pop
mov
jmp
jbe
and
lret
sub
les
scas
sub
int3
jmp
aas
push
jle
xchg
repz
les
icebp
out
icebp
jns
movl
fadd
pcmpgtb
xor
lret
push
sub
shrb
mov
push
movsb
cmp
dec
std
mov
mov
pusha
mov
jmp
cltd
mov
insl
cltd
test
cmp
mov
cltd
xor
insl
push
push
aam
jg
push
stos
lds
jnp
lret
push
inc
call
scas
adc
mov
pop
aad
jmp
adc
fs
jl
pop
push
popf
jb
outsl
add
xchg
test
rcrb
sahf
push
rcr
dec
fcom
push
jo
adc
push
loop
or
lret
mov
stos
sub
movsl
mov
pop
les
and
mov
iret
adc
ficomps
ret
out
and
mov
loop
push
push
mov
pop
movsb
cwtl
push
inc
nop
mov
push
jecxz
in
jle
push
mov
int3
inc
pop
nop
aas
mov
push
xchg
push
push
pop
sbb
fcoml
push
jno
xorl
loope
fiaddl
loopne
int
hlt
add
add
mov
mov
or
js
std
rorb
aad
popf
sahf
loopne
sarl
rclb
cltd
cli
nop
inc
cltd
jb
out
pop
mov
nop
outsb
add
popa
adc
fsts
inc
and
bound
mov
mov
inc
inc
scas
pop
xchg
sar
fadd
xchg
arpl
cs
repz
add
fistl
mov
call
inc
mov
push
fimuls
or
jo
mov
decb
push
pushaw
xchg
or
sub
hlt
decl
xchg
js
dec
jno
and
mov
cmpl
push
add
xchg
in
dec
fstpt
push
xor
jmp
enter
movsb
test
arpl
push
adc
cmpsb
jbe
lret
aas
aam
std
loope
testb
push
bound
ss
jns
xor
lods
or
inc
sub
cmp
add
sbb
lea
pushl
mov
inc
inc
int3
push
fstl
mov
jo
lods
push
add
and
lock
mov
mov
ret
cmpsb
xor
lods
in
and
mov
out
lret
dec
inc
mov
iret
add
in
mov
pop
insb
out
pusha
xor
dec
add
std
ret
nop
or
repz
fildl
mov
dec
add
lods
jmp
push
loop
inc
sub
daa
ficoms
mov
add
pop
hlt
into
cmp
sbb
or
add
fildll
dec
ljmp
test
and
nop
ljmp
pop
xchg
mov
sbb
in
mov
lea
stos
lds
subb
add
sbb
jo
jecxz
bound
insl
adcb
pop
movsb
lahf
jne
inc
rcl
xor
or
mov
fwait
xlat
jno
push
faddp
cmpsl
clc
arpl
dec
lock
test
and
iret
clc
in
adc
xor
add
inc
int3
xchg
xor
repz
daa
icebp
adc
push
jbe
popf
scas
testb
sbb
aam
add
int
popa
add
loopne
mov
ret
repz
jp
xchg
push
arpl
cmpsb
daa
lock
xor
int
jle
pop
add
xor
and
lods
sub
push
outsb
xor
mov
fwait
add
test
sarb
ror
xchg
xchg
leave
dec
lds
inc
lahf
xor
add
lods
xchg
fidivs
popa
xchg
lods
push
inc
add
leave
dec
fisttpll
pop
sbb
stos
pop
mov
xchg
adc
jbe
shl
sarl
mov
push
cmp
add
test
jns
push
shll
push
xchg
ja
in
stc
orl
mov
cmp
hlt
cmp
movb
xrelease
jl
scas
push
dec
or
jne
push
sbb
test
aad
inc
push
mov
mov
pop
mov
pop
add
mov
mov
inc
fistl
mov
mov
or
call
andl
push
jge
xor
push
jp
psubq
or
cwtl
lds
push
sub
cmp
and
mov
lret
aaa
je
icebp
ret
inc
cltd
lock
cmp
mov
sahf
mov
stos
pop
js
jno
push
xor
xor
xchg
dec
adc
mov
xor
jge
dec
nop
aad
dec
sti
xor
jmp
pusha
jecxz
int3
in
bound
or
lods
cs
pop
sub
imul
xor
fmull
fidivl
popf
lods
jmp
mov
mov
std
in
aam
xchg
dec
lods
cmp
sbb
jbe
adc
xchg
lahf
stc
push
imul
xor
inc
dec
xor
or
sbbb
mov
or
lods
or
fimuls
xor
xchg
or
stos
js
decb
push
fucomp
mov
dec
insb
enter
lret
xchg
push
dec
pop
cmpsl
cmp
cmp
dec
pop
push
jmp
adc
das
mov
jp
cmp
inc
test
in
ret
push
xchg
test
cmpsb
mov
cli
push
lcall
dec
into
in
dec
imul
adcl
repnz
push
add
jbe
add
rcrl
mov
outsb
push
jge
popf
or
xchg
pop
xchg
cmp
rcl
movsb
ss
mov
pop
add
rorl
add
ss
and
and
loopne
in
popf
les
dec
in
ret
xor
clc
das
sub
stos
rcll
dec
jb
pop
out
js
xchg
loopne
sbb
add
or
stc
mov
ja
xor
mov
push
push
cmp
cmp
mov
rcll
pop
mov
xchg
cmp
jle
popf
adc
dec
icebp
cmp
rcrb
mov
in
repz
adc
es
rclb
push
cmpsb
outsl
sub
ret
or
sbb
icebp
pop
dec
jnp
dec
xchg
mov
mov
pop
out
enter
mov
mov
jnp
es
int
ja
cld
shll
xchg
dec
arpl
dec
insl
dec
fs
movsb
daa
dec
xchg
cmp
js
sub
xor
lahf
pop
cmp
lcall
les
movsb
int3
inc
mov
mov
mov
out
xor
cmc
cmpsl
xor
and
fsubl
sbb
loopne
mov
popf
mov
and
in
jno
ret
push
cmp
stos
jae
js
mov
pop
mov
call
sub
jno
jae
xor
idivl
mov
mov
jnp
bound
icebp
jmp
enter
and
jb
outsl
es
imul
mov
aam
test
hlt
xor
mov
push
hlt
pushf
rcrl
sarb
cmp
dec
shlb
out
mov
cmp
dec
and
imul
sbb
add
inc
lahf
jle
mov
cwtl
fisubrs
inc
ret
jne
jno
xor
mov
and
fs
nop
add
xchg
xchg
xchg
sahf
or
jns
mov
mov
inc
mov
fstpt
mov
test
test
imul
add
mov
fbld
pop
sbb
mov
in
cmp
addr16
inc
adc
push
sub
in
mov
pop
shlb
add
sub
call
pop
push
sbb
dec
mov
add
les
int
insb
ror
pop
std
pop
mov
jns
jg
addr16
fisubl
xor
dec
push
cli
xor
inc
push
jg
cmp
xchg
lret
sub
shll
in
loope
add
cwtl
scas
cmpsl
rolb
push
lods
jle
iret
cli
inc
dec
adc
xchg
addr16
cmp
push
push
xchg
lret
test
cmp
adcl
or
les
lds
xchg
mov
or
push
stc
test
push
and
fwait
mov
fwait
pop
push
xor
sub
lds
and
push
jae
fbld
inc
insb
push
out
das
call
mov
inc
ss
or
arpl
sbb
test
out
test
movsl
jmp
xchg
cld
cmp
jno
clc
pop
cmp
mov
xor
stos
mov
mov
xor
cltd
push
dec
and
push
pop
rcl
jle
dec
push
mov
inc
imul
mov
mov
push
pop
es
mov
push
add
cltd
pop
cmpsl
mov
lds
or
add
pop
inc
add
and
sarb
sub
stos
icebp
xor
ds
push
jge
dec
roll
and
int3
ja
sbb
pop
mov
xor
dec
sbb
rorb
sbb
mov
in
push
pop
iret
aas
xchg
xor
pop
add
cmp
ds
cmpsl
or
in
and
movsl
std
iret
fidivrl
push
jns
jmp
cld
fsubrl
mov
push
dec
leave
mov
test
xchg
leave
test
pusha
ja
je
mov
pop
cmc
and
ljmp
mov
or
push
cmp
hlt
scas
imul
sbb
cli
leave
fisubrs
negb
jns
mov
or
in
adc
popa
and
hlt
in
fwait
jge
out
out
xchg
in
push
inc
dec
dec
andb
dec
mov
loopne
xor
mov
fwait
sahf
aaa
dec
dec
test
cmpsl
mov
insb
adc
in
ret
idivb
mov
xchg
bound
push
ss
jae
and
mov
adc
pushf
push
inc
orl
mov
push
fistl
sub
shr
inc
cli
test
adc
mov
loope
faddl
mov
xchg
xor
pop
add
mov
sub
push
dec
es
lock
mov
sbbb
in
shl
cmc
adc
jl
and
add
jno
xor
push
mov
sub
mov
movsl
jns
dec
adc
hlt
fsubs
sbb
inc
push
jp
dec
inc
add
pop
and
cli
orb
outsl
pushf
mov
mov
xor
push
and
dec
lret
cmc
popf
and
mov
fucomp
imul
mov
inc
pusha
fcom
xchg
ja
jl
jno
mov
push
in
insl
push
je
and
push
fdivs
sbb
pop
sub
repnz
cmpsl
ljmp
test
test
es
imul
cmp
movsl
push
inc
dec
popa
or
pushf
test
scas
in
enter
dec
xor
jl
cmp
test
enter
sti
sbb
add
xchg
fldt
and
sbb
push
xor
lods
fisubrs
outsl
xor
and
inc
sbb
sub
mov
add
rclb
mov
xor
cli
call
pop
sbb
out
dec
ret
outsl
jp
xor
push
add
js
mov
data16
arpl
mov
aad
inc
sub
pop
ja
subb
sti
cld
xchg
push
inc
bnd
out
push
sub
add
movsl
cmp
pusha
or
cmp
out
xchg
in
mov
push
in
cmp
sti
fld
nop
arpl
mov
lds
fwait
xchg
sarl
adc
xor
mov
push
jo
pop
mov
out
lahf
inc
mov
fsubrl
pop
nop
fwait
arpl
push
aam
adc
xlat
imul
adc
or
push
push
jp
into
ret
fstps
cmp
pop
cmpsb
inc
cmc
ss
mov
mov
clc
pop
outsl
cmp
popf
lock
loope
andl
mov
xlat
pop
cli
xchg
lods
xchg
push
adc
cmp
pop
cwtl
sbb
pop
mov
scas
aaa
pop
sub
arpl
pop
arpl
pop
xor
adc
or
jo
xchg
fisubs
and
mov
sbbl
inc
cs
lock
orb
mov
pop
xchg
or
mov
push
cmp
mov
pop
ret
repnz
inc
icebp
inc
loopne
les
or
and
and
mov
out
mov
dec
test
ljmp
cltd
jecxz
dec
and
mov
pop
cs
dec
or
test
inc
add
dec
in
sub
xlat
xchg
in
loopne
lahf
mov
xchg
leave
clc
gs
jo
mov
adc
sbb
push
xchg
int3
and
mov
adc
xlat
out
or
inc
pop
cmpsl
sahf
mov
xchg
cs
inc
test
and
test
pop
inc
or
or
insb
xchg
pushf
add
movsb
cmp
jmp
cwtl
xor
out
pop
sbb
lcall
addr16
movsb
roll
mov
popf
and
inc
sub
pop
mov
daa
xchg
adc
cmp
push
stos
mov
jno
xchg
movsl
xor
fwait
orb
shll
sub
iret
xchg
mov
xor
or
iret
inc
shrb
pop
repnz
xor
sub
test
fisubrs
pop
sub
pop
push
neg
out
sbb
cmp
rcrb
lods
repnz
and
mov
jnp
sub
mov
les
scas
imul
aas
and
in
popa
cld
xlat
or
lods
andb
lahf
vpcmpeqb
xchg
gs
cmp
int3
jecxz
outsb
ds
cmp
repz
and
nop
sub
sub
mov
mov
and
out
movsl
scas
jecxz
es
mov
ja
jmp
lods
dec
sub
xchg
scas
pushf
insl
mov
js
and
pop
hlt
fidivl
stos
xchg
add
or
dec
lea
sbb
push
cmp
jge
fimuls
xchg
adc
jge
push
or
pop
sbb
shl
pop
mov
les
xorl
mov
jae
dec
mov
dec
fsubl
into
mov
mov
mov
lods
stc
or
sbb
das
ret
and
inc
push
fidivs
in
sbb
leave
add
sub
xchg
inc
mov
add
inc
ss
push
ja
sub
in
push
aaa
lret
mov
out
and
pop
inc
stos
imul
add
outsl
cltd
pop
arpl
or
mov
dec
je
mov
imulb
mov
test
mov
and
sub
fwait
mov
xchg
aas
jecxz
jne
lods
lret
mov
xor
testb
cmpsl
push
bound
lret
cmpsb
sub
frstor
mov
sub
insb
das
hlt
mov
sub
lods
pusha
sub
shlb
fsubs
repz
jmp
pop
iret
mulb
jmp
adc
movsl
insb
push
or
ror
stc
sbb
xor
or
ficoms
xchg
shlb
lock
lea
mov
adc
cmpl
add
inc
xchg
jnp
test
movsl
pop
inc
hlt
imul
cmp
call
insb
sbb
inc
dec
pop
lahf
and
pop
rorl
loopne
leave
ljmp
aam
xchg
notl
pop
pusha
or
insb
jge
push
sub
jg
enterw
pop
dec
pop
mov
cmp
jnp
outsl
lods
pop
push
iret
das
fdivl
push
sub
pop
push
jecxz
nop
pop
mov
xor
dec
pop
jmp
bound
aam
cltd
cmp
ja
xchg
xchg
loop
outsl
mov
and
mov
sub
mov
and
jnp
lcall
push
or
or
repnz
sbb
pop
sbb
dec
loop
fcmovnu
pop
xchg
das
repz
out
and
add
add
stos
js
xchg
pop
xor
jo
cmpsl
and
mov
cs
mov
fldt
add
repz
xchg
sbb
es
xchg
cmp
pushf
in
movq
arpl
test
sub
stos
jno
push
push
cmp
jb
loope
mov
cmc
ret
or
sbb
pop
repnz
icebp
push
movsb
inc
jbe
lret
ds
jb
lret
push
jne
bnd
loopne
dec
daa
jge
pop
pop
push
jmp
test
jnp
insb
test
cmp
pop
jnp
daa
push
rorl
iret
cltd
mov
push
stc
or
adc
dec
shrb
shlb
jp
add
xchg
and
adc
pusha
dec
jmp
add
js
inc
clc
adc
inc
int
fists
xor
out
aad
mov
sbb
adc
in
jbe
dec
out
cld
or
and
fcmovnu
mov
stc
ret
leave
push
pop
fs
cmpsb
insb
push
orb
cmpl
imul
push
mov
leave
test
insl
xor
clc
bound
inc
xorb
mov
fsts
testb
lock
xchg
dec
in
orl
and
dec
jecxz
sbb
and
mov
xchg
jecxz
lret
jo
cmp
lods
ds
fsubrl
rcll
jp
lret
repz
push
add
cmp
addr16
add
sbb
popf
xchg
iret
movsb
mov
and
mov
leave
iret
sarb
sub
push
inc
mov
mov
fcomps
adc
adc
clc
dec
ds
fists
insb
jo
sarb
andb
pop
sub
and
repz
mov
cltd
in
add
adc
inc
movsl
int
imul
repnz
test
inc
aad
cmp
push
push
cmpsl
sbb
mov
lods
cmpsl
cmp
subl
cmp
outsb
daa
data16
adc
movsb
cli
cld
mov
in
cmp
test
cwtl
loopne
xchg
call
iret
jo
clc
xchg
mov
mov
mov
movsl
mov
xor
mov
cmpsl
add
cld
inc
in
sbb
icebp
decl
mov
cmp
fcomi
xor
mov
mov
inc
mov
clc
cmp
sbb
outsl
test
xchg
insl
sub
pop
mov
scas
clc
add
push
cld
int
insl
or
or
and
push
and
mov
test
jmp
adc
cmp
push
movsl
xchg
je
je
dec
mov
push
sbb
in
push
lock
xor
addr16
cmp
mov
xor
sbb
ret
cmp
mull
and
jbe
mov
lret
inc
or
rcl
inc
lret
fdivs
or
sbb
mov
mov
mov
xor
push
mov
jbe
cmp
repnz
push
push
mov
fildl
or
outsb
sbb
adc
xchg
cld
sbb
andb
mov
mov
cmp
cli
jmp
xchg
dec
dec
jmp
movsl
testb
jecxz
arpl
pop
mov
pop
cs
and
inc
or
out
fwait
mov
rol
out
push
xchg
pop
or
or
mov
cmpb
cltd
int3
lcall
push
cmp
shl
mov
enter
sbb
inc
pop
addr16
incb
push
cltd
icebp
notl
and
xor
ret
int3
hlt
or
es
daa
push
or
aam
xor
mov
sub
addr16
xchg
pop
and
mov
loope
xchg
jo
jl
sub
incb
adc
jge
loopnew
cmp
mov
out
ja
push
add
dec
les
jno
xchg
fimuls
mov
inc
nop
sbb
mov
das
lea
sub
cltd
dec
xor
jp
pop
cmc
sbb
jnp
cmpsl
repnz
sub
ret
ljmp
nop
loopne
pop
fimuls
imul
mov
pop
jae
int
mov
mov
mov
test
cs
xchg
inc
out
into
push
mov
stos
call
dec
add
mov
sbb
dec
movsb
xchg
insl
push
imul
mov
out
sahf
pop
lock
pop
jp
cli
mov
pop
sub
arpl
sarb
int3
inc
lods
fildll
imul
sarl
pushf
bound
or
dec
movsl
setnp
push
aad
loopne
cmp
mov
daa
push
adc
sub
jmp
push
fsubrs
movsl
lock
out
cmp
pop
lock
int
out
cmp
cltd
call
jae
mov
inc
incb
cli
mov
in
jmp
sub
add
mov
push
test
in
and
movsl
not
push
jge
dec
pop
aas
inc
es
xchg
rorb
fsubs
pushf
call
lea
sbb
mov
fnstenv
jns
sbb
cltd
pop
push
mov
cmp
movsl
sbb
xor
das
mov
aaa
jg
fldl
mov
jno
xor
add
cmc
scas
jmp
mov
xchg
notl
xlat
in
pop
lods
mov
shll
or
dec
mov
mov
xor
scas
cwtl
cwtl
push
das
jo
sahf
in
adc
movsb
mov
fnstsw
aaa
shll
stc
test
push
test
in
test
pop
dec
pop
outsl
adc
mov
int
fbld
pop
add
adcb
lahf
fdivs
ds
mov
mov
flds
cmp
inc
xlat
mov
aas
jno
pushf
bound
out
mov
dec
popf
cmp
xchg
xor
popf
push
bound
push
cmc
lcall
test
iret
mov
stc
bswap
dec
js
andl
lods
and
mov
lea
cmp
arpl
loop
xor
aas
push
sbb
repz
sbb
push
inc
insb
lods
cmp
cmp
push
popa
test
sub
stc
inc
xchg
jno
jns
cltd
rolb
aad
imul
inc
mov
add
rcrl
rolb
jg
jge
pop
xchg
mov
pop
inc
sahf
push
pushf
mov
sub
test
pop
push
and
arpl
push
scas
sub
inc
repnz
mov
int3
xor
clc
sbb
pop
mov
adc
jmp
pop
insb
jne
mov
or
and
mov
sub
xchg
fnstsw
jg
jb
jecxz
call
gs
jnp
fistpll
pop
mov
mov
jg
xlat
push
popf
and
cs
scas
pop
stc
push
ds
fildl
dec
mov
or
arpl
fisubl
aam
imul
sub
inc
sub
lret
mov
and
outsl
add
in
dec
xchg
push
inc
or
xor
and
sub
and
xor
les
ret
xchg
pusha
arpl
movsb
std
jae
adc
scas
leave
jnp
mov
mov
mov
mov
shlb
mov
js
pop
test
mov
repnz
outsl
out
fidivrl
js
cwtl
icebp
adc
lods
sub
and
xchg
push
cmpsb
adc
movsb
or
mov
xor
cmpb
sbbb
jle
sbb
cli
mov
inc
adcb
imulb
or
sub
add
mov
push
and
sbb
clc
stc
push
push
mov
push
outsl
sub
xor
jne
mov
js
mov
loopne
ret
cmpsb
outsb
pop
jne
popa
mov
sub
testb
mul
dec
sbb
iret
aad
std
iret
cmp
pop
or
jl
inc
fimuls
xchg
xchg
inc
mov
adc
sbb
fiadds
mov
cmp
data16
mov
add
push
dec
push
inc
mov
outsl
gs
pop
jno
into
push
mov
lock
dec
mov
pushf
or
les
inc
arpl
sub
in
xchg
lea
xchg
adc
cmp
cmc
insb
add
jp
daa
or
in
mov
out
sub
mov
shrb
xor
in
aaa
sbb
movsb
pushf
std
xor
fcoml
call
mov
test
xlat
pusha
or
shlb
or
push
mov
addr16
pop
push
test
andl
sbb
les
insb
pusha
daa
cmp
call
cmp
int
jmp
bound
push
lcall
and
jp
xor
jo
lods
shll
pop
lods
or
mov
cmp
imul
inc
push
jge
or
dec
pusha
mov
xor
test
dec
pop
fabs
xor
sub
xor
add
adc
dec
push
and
jp
jae
insb
js
sub
in
je
mov
fiaddl
xchg
call
add
mulb
push
shl
and
jo
pop
int3
repnz
stos
or
add
cmpsl
mov
or
mov
or
cvtdq2ps
stos
mov
pop
out
pusha
cmp
fidivrl
insl
clc
cli
cmpsb
imul
sbb
lahf
insl
sbb
cmp
xchg
adc
js
test
dec
wrmsr
lahf
xchg
mov
push
jno
and
rcl
xchg
and
pop
push
mov
fadd
repnz
je
cmp
mov
sub
inc
fnstenv
pusha
sarl
xchg
adcb
divl
test
rclb
gs
cmp
push
inc
not
int3
inc
dec
lahf
les
mov
dec
sbbl
xchg
lods
fidivl
add
std
data16
and
lret
dec
jo
push
in
jge
je
xor
xchg
mov
jge
pop
xor
fsubl
shrl
aas
xlat
jecxz
or
daa
mov
imul
jne
ja
mov
adc
test
ret
xchg
ret
xor
ljmp
sbb
mov
js
jns
mov
jl
dec
pop
xchg
adc
lcall
ja
addl
in
loope
arpl
mov
scas
and
dec
rcrl
pop
or
into
mov
dec
int3
jo
pop
mov
push
sbb
lods
cwtl
add
cmp
clc
popa
test
or
sub
scas
les
adc
pop
xchg
stos
std
pop
icebp
inc
scas
outsl
test
ljmp
int
xchg
xorb
mov
test
xchg
pop
mov
jno
mov
icebp
hlt
aaa
xor
stos
mov
pop
lahf
inc
xchg
mov
iret
out
in
sarl
pusha
pop
push
lahf
shlb
sub
leave
jmp
jo
aaa
push
test
rcll
push
push
test
fwait
nop
scas
mov
rcrb
test
iret
cmp
psrlw
or
xchg
clc
fcomps
pop
jl
jne
jp
enter
aam
cltd
fimull
cltd
lret
hlt
int
adc
jmp
and
mov
and
jns
psrlq
das
sti
jp
mov
xor
pop
arpl
cmc
cmp
test
iret
jg
int
jbe
mov
test
and
das
imul
outsw
adc
and
shrb
je
sbb
sbbb
dec
cmp
dec
sahf
daa
jae
jns
insl
ret
cmpsl
jle
jno
dec
xchg
jne
mov
ja
outsl
pushf
dec
push
dec
fdivr
outsl
jne
pop
sub
cmp
icebp
mov
pop
cmp
cli
and
xchg
fstl
sbb
cmp
in
call
cltd
dec
fidivrl
and
es
dec
sbb
lret
pop
fnstenv
xchg
adc
adc
mov
gs
ljmp
jne
icebp
call
ret
mov
lods
mov
adc
xor
shlb
jne
cmp
cmpl
ja
je
cmp
imul
add
inc
lds
shl
stos
int
or
mov
push
pop
add
sbb
xor
loop
mov
movsl
cmp
mov
sub
divl
pop
ds
ficoms
je
mov
mov
pop
pushf
dec
xchg
ret
jmp
aam
in
cwtl
push
push
mov
xchg
in
je
push
dec
add
out
fdivs
add
push
mov
xor
loop
dec
in
adc
jl
mov
mov
push
pushf
dec
mov
cwtl
add
xor
push
cmp
pusha
test
daa
dec
mov
fidivs
lods
inc
adc
pusha
pop
jne
jle
xor
lahf
ds
decl
ljmp
adc
sub
xor
mov
add
mov
adc
or
xchg
pop
pop
cmp
mov
cmp
pop
popf
sub
notb
rcr
pop
xchg
mov
es
outsb
xchg
ss
mov
gs
in
xchg
push
inc
push
add
mov
push
in
je
and
mov
inc
mov
mov
mov
cld
sub
das
mov
hlt
jns
add
push
cli
imul
in
mulb
les
das
sub
cmpsl
fistpl
ret
sti
push
repz
lock
cmc
jmp
or
pop
rorb
repz
jbe
int3
lods
push
push
out
adc
loop
rolb
jne
or
aaa
xchg
cwtl
lods
pushf
xchg
mov
andl
shrl
dec
cmp
out
loopne
mov
push
imul
int
pop
xor
into
push
add
push
idivb
in
cmpsl
pop
ror
cltd
pop
add
mov
enter
addr16
arpl
aad
adc
int
push
dec
mov
xchg
xor
rolb
or
rorl
gs
or
mov
inc
pop
dec
cmp
mov
fstpt
push
stc
aam
adc
fstl
imul
cmp
loopne
outsb
in
push
add
xchg
cmp
pop
pop
mov
and
jae
mov
fwait
movsl
mov
mov
xor
sub
shlb
and
imul
cld
push
or
addr16
or
add
cmp
pop
add
int
lahf
dec
xchg
mov
out
dec
xchg
notb
loope
xlat
test
push
arpl
insb
sbb
rcl
aam
insl
jo
out
xchg
add
inc
outsl
and
insl
adc
xchg
out
inc
repz
jmp
fs
or
cmp
nop
rorb
inc
adc
xlat
insl
iret
sub
popa
sbb
xchg
xchg
mov
inc
lock
jno
mov
adc
jle
adcl
pushf
mov
push
inc
inc
aas
push
pop
or
mov
nop
stos
shrl
and
dec
lea
leave
fs
or
dec
xor
popa
leave
add
insb
pop
push
popl
mov
mov
fstps
mov
imul
add
ret
mov
ret
ja
movl
push
stos
aaa
mov
adc
xor
push
pop
sub
xor
xchg
jl
sti
push
rcll
xchg
mov
mov
push
ljmp
sbb
into
mov
mov
in
jl
jecxz
cmp
cmp
push
outsl
repz
adc
xchg
popa
or
popf
push
stc
adc
lea
and
into
and
fistpl
mov
repnz
mov
test
xchg
andb
mov
push
popa
movsb
andb
sbb
out
jl
cwtl
das
mov
lret
mov
mov
dec
pushf
adc
popa
jb
mov
js
mov
lock
pop
ror
aad
pop
je
mov
sub
xor
cmp
decb
jno
jb
add
mov
rolb
ret
stc
test
shl
xchg
xchg
pop
sbb
and
mov
in
cltd
fwait
inc
test
xorb
mov
cltd
std
bound
mov
xchg
mov
pop
sbb
or
rclb
mov
sbb
std
mov
mov
outsl
bound
cltd
xlat
sbb
int
mov
pop
or
mov
stos
xchg
rcll
jg
aas
sub
sub
jle
pushf
jne
and
dec
stos
movsl
stos
adc
loopne
mov
insl
fsubp
lret
stos
push
divb
mov
movsl
enter
scas
and
jecxz
ficoml
sbb
adc
inc
psubw
fbld
scas
out
out
cmp
outsl
inc
loope
pop
hlt
pop
loope
push
push
xchg
sbb
nop
jecxz
adc
enter
mov
and
mov
sahf
in
cli
icebp
and
int
xor
test
iret
clc
bound
xor
into
add
or
cmp
test
int3
scas
int
sahf
neg
mov
xor
outsb
inc
fstps
mov
addr16
gs
outsb
add
lret
mov
addb
jge
mov
mov
int3
std
jno
fwait
repnz
fbstp
aad
ret
sub
notb
daa
adc
jnp
test
insl
out
dec
pop
hlt
das
push
adc
fisubrs
jnp
cli
add
stc
xchg
stos
mov
or
inc
or
mov
outsb
jne
lahf
movsb
xchg
mov
stos
lea
fwait
jg
jmp
ror
pop
mov
lock
in
js
adcl
mov
xlat
push
sbb
inc
sub
fstps
push
sbb
in
adc
nop
and
test
loope
pusha
mov
aas
roll
push
jnp
pop
pop
leave
inc
not
gs
push
sbb
mov
mov
xchg
pop
mov
add
mov
mov
dec
in
mov
dec
fdivr
or
sub
xchg
mov
mov
mov
mov
or
add
xchg
loope
jae
xchg
jle
ss
int
jge
dec
pop
mov
flds
xchg
dec
rcrl
subb
dec
sub
fldt
int3
and
loope
xchg
popf
pop
add
push
rcrl
mov
leave
imul
cmpsl
jne
jnp
dec
repz
inc
mov
or
loopne
pop
dec
sti
inc
addr16
and
int
or
xor
mov
test
add
pop
fucom
popa
pusha
xor
xor
popf
dec
pop
pop
pop
lock
adc
nop
mov
mov
in
jne
xor
fadds
sbb
arpl
sub
js
mov
sysenter
dec
xchg
lock
shll
inc
adc
adcl
adc
jne
fnstsw
loop
mov
mov
or
sub
sarl
movsb
fisubs
out
sub
roll
iret
push
jbe
leave
push
adc
in
inc
imul
xchg
jmp
inc
repnz
faddp
sbb
stos
mov
sbb
inc
pop
or
or
cmp
das
dec
pushf
pop
add
xor
fiaddl
std
stos
iret
pop
js
outsl
pushf
cmpsl
movsl
rcr
sbb
std
loop
and
fsubs
fnstsw
and
in
test
or
mov
jl
cltd
cmp
icebp
sub
scas
loop
cltd
xchg
inc
cltd
shrb
int3
div
in
shlb
inc
out
sbb
jmp
jnp
fs
fldcw
jmp
mov
adc
add
cmp
cmp
inc
pop
int
movsl
pop
insb
push
cltd
shlb
pop
mov
add
movsb
pop
jecxz
je
cmp
xchg
mov
pop
popa
dec
gs
dec
xchg
pop
jmp
mov
push
inc
xor
cmpsl
or
cltd
xchg
and
jno
or
add
push
pop
push
dec
lea
aad
adc
shlb
add
movsb
gs
imul
mov
push
pop
jmp
push
ret
cmpsb
adc
inc
sahf
cwtl
scas
mov
in
inc
jp
int3
pop
pusha
jp
sbb
in
bound
fistl
jns
mov
aam
xchg
addr16
adc
das
cs
adc
lahf
loop
daa
pop
cmp
or
stos
or
das
pop
and
xlat
xchg
movl
ret
add
inc
mov
in
sbb
cmp
fwait
in
push
xorl
lret
in
adc
filds
or
mov
xchg
sbb
xchg
aas
add
sahf
lods
int3
sub
les
cmpb
mov
into
and
xor
sub
popa
jl
push
mov
push
jo
cmc
or
push
sub
and
xor
jo
inc
fwait
and
out
cmp
lahf
loop
jmp
inc
push
fdivs
xor
into
insb
jg
pop
mov
ret
xlat
adc
enter
inc
insl
cmp
fwait
sub
jp
out
stos
adc
lret
scas
adc
jo
adc
popa
sbb
test
jnp
sbbl
mov
jno
notb
inc
mov
imul
mov
cmc
gs
add
xor
sub
and
ja,pt
enter
pop
cmp
jle
pop
xorl
lods
loope
or
add
mov
int
dec
flds
jns
or
aas
movsb
xchg
pop
in
dec
sbb
add
scas
push
fisubrs
mov
cltd
jb
lods
mov
pop
push
decb
xlat
xchg
fwait
jae
lret
repz
stos
push
mov
mov
xchg
cmp
xor
lds
xchg
sbb
in
jbe
pop
xor
mov
inc
dec
push
mov
enter
mov
jnp
mov
mov
movsb
loope
pop
ljmp
ja
mov
loopne
loop
jg
or
xor
pop
scas
cmp
int3
shll
aas
xchg
sbb
arpl
shlb
mov
cmp
mov
adc
mov
insl
pop
scas
test
mov
mov
sub
push
mov
and
jmp
inc
add
mov
xor
add
and
xor
adc
pop
cmpsl
jmp
in
pop
sub
scas
sahf
outsl
push
insl
push
iret
lcall
mov
mov
push
push
xchg
cmp
dec
data16
loop,pt
pop
int
lods
popf
dec
dec
mov
or
insl
add
loopne
adc
mov
xchg
and
cmpsl
scas
jecxz
int
sub
sbb
mov
inc
inc
test
mov
sub
jmp
stc
cs
aaa
mov
jo
or
sub
push
pop
push
inc
rorb
push
out
sti
jns
pop
push
push
movsl
jmp
out
xchg
loop
ja
jle
les
and
pushf
xor
and
ss
aam
push
xor
add
pop
xlat
ffreep
clc
sbb
pop
iret
sbb
jae
mov
xor
push
mov
jg
mov
and
cmp
push
adc
mov
popf
lret
mov
jmp
leave
jb
sti
push
ja
movsb
pop
xchg
pop
inc
adc
xchg
imul
dec
mov
xchg
pop
adc
mov
jmp
sbb
xchg
aam
pop
mov
stos
adc
mov
ret
ja
shll
test
ja
clc
lret
xor
xor
dec
mov
push
imul
out
nop
je
jge
ss
gs
in
test
das
insb
or
fbstp
mov
sbb
ljmp
sub
lea
imul
jb
imul
jno
mov
sub
push
xlat
lret
movsb
fyl2xp1
test
or
adc
andb
repz
push
xor
ss
insb
testb
pop
ret
push
and
xchg
pop
inc
mov
dec
mov
and
fiaddl
pop
sbb
fwait
mov
idivb
scas
lock
shl
mov
mov
mov
mov
jns
ficoms
xchg
push
imulb
sbb
sub
dec
jb
and
cmp
out
es
clc
xor
pop
mov
jo
movb
or
dec
dec
mov
sub
lret
cmpsl
mov
test
mov
stos
jp
dec
in
sbb
mov
or
adc
std
inc
push
or
add
orl
fbstp
sbb
sub
xchg
stos
push
mov
dec
inc
ret
adc
mov
enter
cwtl
push
adc
add
jne
std
mov
jno
rcl
push
pop
push
fcmovnb
sub
adc
aad
fldt
aas
aad
pop
push
repnz
out
bound
call
in
popf
jl
mov
imul
sbb
js
repnz
insl
mov
lds
jle
push
addr16
add
insl
into
incb
cmpb
mov
inc
mov
addr16
cld
xchg
imul
push
callw
ja
enter
push
sub
out
inc
aaa
mov
ret
xchg
adc
rclb
dec
into
cwtl
hlt
shll
xor
jle
in
adc
out
add
push
pop
xchg
pop
outsb
jp
fwait
or
pop
lods
cltd
or
lods
sti
sbbl
mov
fdivrs
in
pusha
stc
add
push
dec
inc
mov
rorb
mov
xchg
xchg
push
mov
pop
outsl
mov
lods
test
shll
rcrb
mov
mov
repnz
sbb
cmp
int
xchg
stos
stc
push
flds
jns
sbb
dec
inc
dec
push
jns
add
mov
adc
xor
lcall
jbe
js
test
jnp
and
sbbl
dec
cli
out
mov
cld
in
push
cmpsl
jbe
add
xor
out
xchg
xor
jge
ljmp
and
jb
mov
mov
scas
aas
push
sbb
add
push
sbb
xchg
add
mov
lcall
add
xchg
xchg
cmp
sub
xchg
sbb
adc
js
shrl
xchg
sub
and
mov
jnp
movsb
mov
out
ret
and
push
imul
test
mov
xchg
mov
cmc
cmp
mov
pop
mov
jge
mov
inc
jne
inc
mov
push
mov
adc
cmp
sbb
or
cmp
into
sbb
push
cmpsl
clc
notl
aas
hlt
ret
test
xchg
lock
xor
outsb
jg
pop
mov
leave
in
stc
lcall
out
icebp
lds
inc
jecxz
imul
sbbb
cmp
xchg
xor
pop
pop
xor
and
pop
das
xor
out
mov
out
sti
fsubr
leave
mov
add
mov
xor
inc
test
adc
dec
inc
push
cmp
jl
ss
push
mov
aaa
add
mov
adc
xchg
das
inc
dec
jnp
int3
sbb
mov
mov
stos
insl
inc
clc
scas
icebp
fistl
bound
push
push
ret
jle
mov
cmc
es
mov
sarb
adc
adc
add
cmp
push
insl
jae
sub
lret
xor
jp
inc
cld
or
aas
pop
out
jge
pop
fistl
inc
das
xchg
or
inc
jb
mov
imul
lea
pop
dec
gs
jmp
sbb
xchg
ret
test
push
push
mov
inc
repnz
lods
ret
add
xor
fs
fs
add
hlt
push
and
mov
icebp
sahf
jnp
or
xor
xchg
or
call
addr16
test
test
das
mov
xorb
jnp
cltd
stos
sub
stos
popa
shlb
nop
pop
ja
jp
mov
popf
mov
in
scas
pop
sbb
ds
xchg
addr16
cmp
xor
adc
aad
out
dec
inc
mov
sbb
dec
xchg
and
cmpsl
cmpsl
xor
xor
sub
in
jg
dec
cmc
push
and
je
adc
test
loop
xchg
inc
pop
test
pop
and
imul
add
testl
and
pop
into
jnp
fcmovne
jmp
push
decl
sub
ret
xor
popl
push
rolb
cmc
call
or
push
leave
push
push
fcmovbe
dec
int
sub
dec
sub
mov
mov
mov
mov
inc
cmp
xchg
popf
in
sub
lret
pop
inc
sahf
cmp
lret
divl
iret
jne
orb
cmp
aam
in
mov
cld
popa
lods
add
aam
pop
fldz
or
or
scas
outsl
leave
sub
pushf
out
loop
rcll
sar
fsubs
add
aas
mov
inc
jbe
fs
or
pop
ret
push
test
dec
inc
cmp
fisubs
in
in
xchg
mov
mov
mov
bound
aam
ret
mov
mov
cmp
je
clc
adc
scas
pop
pop
loopne
cli
rcrl
cmp
push
xchg
cmp
sbb
sub
sbbl
jge
sbb
fsubr
adc
sahf
jnp
ds
jmp
stos
mov
add
jo
jge
pop
xor
out
clc
mov
subl
push
dec
mov
int3
or
dec
mulps
andl
ds
mov
ror
lods
enter
cld
out
pop
cmp
icebp
sbbb
adc
pop
arpl
add
jecxz
shr
pushf
fimuls
hlt
jp
adc
pop
adc
movsl
jmp
aad
roll
lock
cmpsl
popf
lret
push
rcrb
stos
jmp
fldcw
nop
xor
pop
add
sahf
mov
pop
xchg
mov
je
mov
jb
fs
and
xor
ds
shll
dec
mov
test
mov
in
icebp
pop
scas
aam
jecxz
ds
push
sti
mov
in
mov
sti
outsl
shll
popf
xchg
mov
dec
mov
daa
push
mov
adc
lods
mov
in
mov
ret
jno
push
inc
insl
iret
xor
aaa
repz
loope
pop
dec
or
xchg
dec
fisttpl
lds
push
mov
pop
xor
dec
cmp
sbb
sbb
loope
outsb
fidivrl
ljmp
stos
pushf
jb
mov
in
punpckhdq
into
in
sarb
rcrl
mov
mov
mov
mov
pusha
xor
inc
mov
jl
repnz
movsl
mov
xlat
shr
iret
lds
or
pushf
fmuls
xor
cld
cmp
sbb
jl
jns
cli
pop
js
iret
or
imul
aad
pop
pop
xchg
cwtl
loope
gs
int
rcrl
jl
push
adc
dec
add
inc
sarl
enter
push
or
xchg
or
fwait
dec
lret
xor
pop
adc
lcall
ds
movl
xchg
aaa
dec
xchg
lcall
add
das
cmp
sub
mov
orl
rorb
mov
stos
fdivs
cmp
sarl
and
and
mov
pop
notb
sub
mov
pop
jecxz
xchg
add
jae
out
mov
repz
jecxz
dec
jne
sub
fwait
jne
pop
push
bound
inc
ret
and
pop
lea
push
cltd
cmp
fwait
ljmp
arpl
xchg
adc
aam
push
sbb
nop
fidivrs
mov
cwtl
ljmp
mov
aad
sbb
sti
or
xchg
xlat
jne
mov
jne
orb
or
xor
sub
push
aad
out
adc
pushf
push
inc
fidivrs
cmpsb
pop
xchg
jns
insl
sbb
mov
and
ljmp
jle
push
aad
js
in
mov
dec
xchg
aaa
into
mov
cmpsl
push
inc
xchg
xchg
and
sbb
out
lahf
popa
sub
jo
imul
dec
add
aas
enter
enter
lahf
adc
jge
out
out
pop
sbb
xchg
rcrl
or
out
mov
and
fcomip
cwtl
lret
xor
int3
and
and
push
pop
adcb
in
adcl
inc
ss
sub
jg
fmulp
xor
cmp
jno
inc
inc
fstps
mov
ss
insb
fidivrl
dec
out
cmp
inc
cmp
in
int3
subl
mov
or
in
sub
js
xor
sub
jle
xchg
stos
subb
in
inc
push
fwait
pop
push
repnz
cmp
inc
sub
shl
jle
leave
lret
es
sub
jg
dec
or
int3
outsl
outsb
rorl
iret
rorb
repnz
data16
fistpl
xor
in
popf
jnp
pop
cld
xor
out
mov
and
and
jmp
dec
fisubrs
pop
inc
pop
pop
xchg
aad
rclb
jns
aad
addb
std
fwait
inc
cmpsb
add
arpl
test
push
inc
aam
inc
inc
pushf
leave
sbb
fisttpl
or
mov
inc
jg
aam
lea
fsubl
lea
inc
in
sub
pop
xchg
xor
push
mov
xor
push
sti
ja
out
fsubr
jns
inc
hlt
cmp
cmpsb
sub
test
pop
std
push
xor
data16
ret
pushf
inc
lret
stos
push
out
inc
in
dec
ds
dec
pop
and
pop
inc
cld
sub
mov
mov
and
lcall
imul
inc
cwtl
mov
out
and
xchg
lds
dec
imul
push
les
mov
jecxz
fdivrl
xor
dec
out
out
int3
and
or
lods
outsl
mov
mov
add
jb
call
scas
test
or
jno
cmp
dec
fwait
mov
sub
jns
mov
jne,pn
ror
or
adc
mov
stos
test
cli
sti
xchg
mov
repz
cli
lcall
mov
push
sub
and
sbb
scas
scas
stc
gs
orl
inc
call
cltd
and
test
jb
lods
xchg
mov
clc
je
sub
xor
push
ds
inc
sarl
icebp
pop
cmpsl
rcll
out
push
xchg
cmp
clc
and
add
ja
mov
and
sti
fld
fcmovnb
xor
sbb
cmp
dec
mov
cltd
cltd
pushf
push
sbb
test
sti
sbb
setbe
pop
cmpl
mov
andb
sub
adcb
sbb
xlat
lock
mov
lret
pop
add
push
pop
mov
or
rcrl
mov
lcall
xor
aaa
jg
cld
mov
and
pop
sbb
lahf
out
shll
addl
testb
addr16
xorb
fildl
and
or
jg
in
fisubrs
pop
out
push
dec
test
xchg
icebp
ret
jns
ljmp
out
and
iret
rorl
cmp
mov
sub
xorps
sub
rorb
dec
and
dec
xchg
in
daa
das
aad
pop
ljmp
adc
add
xchg
arpl
pop
mov
mov
xor
add
negl
adc
andb
aaa
or
daa
mov
hlt
sub
repz
decb
pop
andl
xlat
arpl
push
push
sbb
adc
out
mov
bound
aas
push
cwtl
fsubrs
fbstp
nop
daa
jb
in
outsl
inc
xchg
jg
mov
loopne
sbb
mov
pop
ja
hlt
das
aas
jmp
fs
popa
jnp
scas
and
ret
push
jp
test
data16
jno
lock
inc
mov
jb
sub
mov
mov
pop
and
jno
sub
inc
ret
shlb
and
mov
dec
sbb
jnp
jb
ror
or
add
addr16
xor
mov
cwtl
pop
aam
daa
ror
xor
xlat
mov
cmp
jae
push
sub
xchg
mov
lahf
mov
dec
jne
pop
fs
jecxz
jno
mov
push
lock
into
sbb
cmp
lock
mov
in
inc
add
adc
cmp
outsl
sbb
aad
imull
in
test
fnsave
mov
push
ljmp
jmp
out
pop
insl
insb
frstor
pop
cmp
mov
jb
jo
mov
push
int
scas
clc
add
test
sbb
aam
popf
arpl
push
cli
mov
in
lds
dec
shlb
inc
add
adc
js
rcrb
jb
mov
cmpsl
js
repnz
pushf
outsl
fisubs
adc
cltd
jo
lret
rorb
in
pushl
shlb
mov
movsb
xchg
mov
cs
lahf
sbb
enter
xor
push
sub
rclb
pop
ret
and
cmp
mov
and
je
or
nop
insb
mov
or
xlat
fincstp
loop
adc
std
push
jecxz
imul
and
loop
mov
lcall
je
fcomi
shll
es
pop
mov
and
pop
ret
roll
mov
mov
inc
push
fwait
mul
inc
xor
insb
test
mov
dec
mov
mov
int
and
out
ficomps
pop
cmp
push
movsb
jns
inc
inc
pop
xor
int3
into
int
clc
int
xchg
pop
add
cs
insl
and
xchg
mov
nop
ffreep
fnop
push
insl
sbb
mov
add
cmpb
cmp
mov
stos
pop
lea
call
scas
fisttps
test
sub
mov
repz
xor
jmp
data16
jb
into
mov
mov
into
ljmp
enter
jecxz
popf
xchg
sub
out
dec
jne
insb
psubusw
adc
xor
repz
ss
cmpsb
leave
pop
scas
mov
test
jecxz
test
xor
mov
sub
rorb
dec
call
cmc
sub
lret
sbb
jmp
jl
sub
call
iret
mov
adcb
ss
cmp
xorb
fsubrl
cld
cmp
pop
popa
sbb
std
lea
pop
enter
fs
jp
test
imul
rcrl
dec
or
insl
fsubrl
inc
sbb
inc
push
push
test
pop
sbb
xlat
call
out
cmp
and
and
and
push
jg
test
xchg
out
pop
in
or
clc
cmp
xor
shlb
sbb
mov
scas
cmpsl
sbb
shl
sbb
les
cmpsb
movb
and
pop
aad
and
dec
fdivr
jp
push
cmp
jbe
cltd
sub
mov
lea
push
test
pop
loope
mov
ds
sbb
add
jl
sub
lods
dec
inc
fldcw
push
mov
cmp
or
jl
and
in
nop
cmp
adc
push
aad
insl
repnz
add
or
adc
dec
pushaw
mov
xor
ljmp
xor
pop
clc
xchg
dec
mov
cwtl
cmp
in
mov
adc
sbb
outsb
adc
xchg
js
test
sub
lcall
movsb
test
loopne
out
dec
mov
or
mov
adc
cs
cmp
xor
push
dec
push
push
push
ja
jmp
dec
mov
inc
enter
xchg
add
xchg
cmp
lds
outsl
repz
mov
ja
mov
cmpsl
mov
cwtl
ss
bound
rcrl
or
mov
add
mov
xchg
adc
aas
mov
in
mov
hlt
stc
cmp
bnd
and
adc
pop
repz
mov
adc
scas
cmp
jg
das
out
cs
mov
sbb
adc
adc
pop
inc
jge
cmpsb
shrb
add
shlb
xor
or
push
or
je
pop
xchg
inc
xchg
fabs
popa
pop
and
adc
jecxz
popa
and
testl
mov
sub
fstps
fcompl
lock
mov
imul
out
sub
mov
clc
or
xchg
lods
sti
inc
mov
cld
stos
cmpsb
test
pop
fprem1
dec
ret
pop
sub
xchg
and
inc
xchg
test
push
inc
cltd
push
daa
iret
jmp
lds
insl
in
pop
mov
leave
loop
repnz
lahf
dec
mov
lock
test
roll
adc
dec
adc
stos
into
mov
push
ds
pop
xorl
loopne
lds
and
push
rcr
inc
jbe
mov
pop
pop
fmul
fwait
lret
lret
aam
cli
repnz
mov
xchg
pushf
lods
ret
ret
pop
push
subl
imul
rcll
push
in
pop
sbb
imul
repz
iret
push
in
in
ss
cmp
sub
mov
xor
dec
adc
movsl
popf
es
nop
sti
sub
ds
mov
clc
dec
fisttpl
int3
dec
cld
sbb
jl
pop
scas
mov
sbb
test
sbb
andb
dec
push
add
push
add
push
je
push
aam
pop
xchg
mov
jl
ljmp
scas
xor
mov
push
test
ja
xchg
and
rolb
dec
aad
adc
xchg
addl
fwait
lock
nop
adc
jb
and
in
test
xchg
lods
sbb
shrl
in
ds
js
cmpsl
mov
sbb
mov
lret
dec
les
jo
mov
cmp
add
push
je
sub
jecxz
xchg
push
imul
cmpsl
sub
dec
outsl
add
cmp
and
pushf
xchg
dec
leave
lahf
adc
arpl
insb
mov
ljmp
jo
lcall
dec
and
inc
inc
ja
loope
pop
mov
dec
dec
ljmp
dec
iret
lret
xor
jl
outsl
xor
jo
adc
mov
loop
dec
and
or
mov
cld
orl
or
cs
std
pop
sbb
push
push
fsubrl
xor
cli
inc
sbb
pushf
aam
repz
xchg
daa
test
lock
test
mov
add
push
sbb
jg
mov
xchg
loopne
fwait
mov
pop
jg
into
add
shll
mov
adc
inc
mov
enter
push
add
adc
pop
adc
bound
das
push
and
and
fdivl
cmp
pop
arpl
inc
cmc
shlb
or
repz
shlb
xchg
test
inc
call
pusha
imul
pop
adc
cld
or
fadd
sbb
cmpsb
mov
push
loope
lret
mov
xchg
lret
lock
push
std
lret
int3
jl
out
movsb
sbb
xor
xchg
xorl
daa
cmp
lods
lods
jbe
lock
add
pop
pop
sbb
xchg
pop
sbb
lds
dec
xchg
test
jns
jp
test
sub
adc
sti
fsubl
jle
push
jl
lods
xor
jb
jle
inc
in
pop
dec
adc
out
scas
push
mov
push
sahf
jae
inc
jl
pop
rcrb
mov
cwtl
mov
xchg
jle
mov
push
mull
je
cmp
or
mov
jno
pop
andl
mov
pushf
inc
sbb
dec
cmpsb
xchg
push
xor
cmp
jb
jp
loope
out
add
sub
in
mov
das
mov
mov
sahf
mov
dec
loop
mov
sbb
xchg
fisubrl
sar
cs
or
mov
push
xchg
push
in
test
jg
mov
inc
or
imul
mov
cmpsb
add
jno
and
add
sbb
cli
or
push
pop
xor
jg
aam
cmpb
mov
movsb
ss
cmp
call
mov
ljmp
cmpsl
movsl
dec
cmp
fmulp
ja
pop
stos
daa
lahf
pop
lods
mov
sub
mov
ja
dec
pop
jno
inc
das
js
loop
jmp
jge
mov
inc
scas
les
and
mov
pop
js
adc
or
mov
out
movlhps
std
cmp
sbb
fcmovu
rcll
insb
and
jp
lret
popf
inc
stos
aaa
sarb
in
adc
out
fmul
popa
mov
das
jae
mov
adc
mov
insb
lock
jl
hlt
dec
scas
loop
inc
xor
call
outsl
out
mov
pushfw
mov
push
inc
fistpll
jecxz
mov
ret
push
repz
mov
cmp
and
and
loopne
mov
lods
xor
iret
add
fsubl
loope
or
in
and
xchg
lods
and
pop
jo
xor
lret
sbb
xor
in
add
adc
dec
test
push
pop
dec
sub
addb
fstl
xor
aad
cmp
fdivr
shrl
icebp
push
cmp
fs
test
dec
sbb
stc
aam
cld
inc
mov
movb
push
enter
mov
inc
pop
or
repnz
mov
repz
sar
jb
ret
fdivrl
push
roll
jae
pop
les
mov
jnp
inc
mov
aas
pop
mov
inc
sub
mov
or
mov
and
imul
mov
js
and
in
adc
xchg
and
mov
dec
mov
xchg
pop
jge
inc
fstps
subb
cs
addr16
inc
lcall
mov
test
or
cs
movsb
push
dec
sbb
or
dec
push
adc
inc
push
cmp
jbe
jbe
je
je
stos
xor
sbb
xchg
sbb
or
mov
ror
sahf
jns
mov
in
xor
mov
mov
and
mov
jp
pop
xor
cmp
addr16
jne
lret
call
xor
mull
out
popf
lods
add
push
xchg
scas
gs
movsb
aam
lods
mov
getsec
jp
jne
push
push
push
pop
clc
loop
mov
iret
or
popa
pop
xchg
popa
ret
inc
daa
or
mov
jnp
adc
popa
imul
mov
jo
inc
xchg
mov
xlat
xchg
test
stc
les
stos
dec
enter
cmp
mov
stos
ret
fsub
mov
mov
insl
push
inc
test
enter
cmpsl
sub
xchg
jmp
dec
sbb
xchg
dec
or
xchg
pop
add
pop
stos
fucom
inc
mov
xor
int3
cmp
pop
andb
dec
sub
xor
mov
pop
cmp
adc
inc
out
insb
inc
sbb
push
sbb
mov
xchg
push
add
popf
mov
jbe
scas
outsb
add
lret
les
movb
mov
stos
stc
xchg
xlat
adc
inc
xor
sbb
add
inc
dec
fnstcw
cmc
jp
mov
sbb
arpl
test
push
sub
pop
int3
push
aam
loopne
mov
xor
aad
aas
and
aaa
test
inc
scas
and
inc
scas
shrl
shlb
add
test
inc
stc
add
sbb
outsl
dec
sub
mov
stc
das
mov
out
jae
pop
mov
and
daa
push
or
cmp
push
push
xchg
adc
movsl
mov
js
out
js
dec
or
pop
inc
jl
cli
or
icebp
aas
into
lret
mov
notl
add
inc
rcr
fdivs
jg
cmc
mov
cmp
lods
xlat
xchg
in
and
jle
mov
test
nop
xchg
fwait
testb
loopne
in
cli
mov
mov
scas
ret
mov
std
inc
xchg
in
les
sbb
and
sti
mov
mov
movsl
icebp
hlt
push
add
out
out
rep
inc
in
in
mov
fidivrs
jne
je
stos
and
mov
mov
stos
jno
adcb
imul
shll
pop
fwait
xor
push
lods
mov
push
enter
fidivrs
ss
cwtl
dec
int3
ss
out
stc
and
cmp
dec
sbb
mov
add
into
push
xlat
or
or
call
mov
mov
mov
xchg
add
xor
cmc
fs
cmp
sahf
gs
inc
cmpl
inc
push
cmp
xchg
adc
mov
or
sbb
shrl
sbbb
stc
leave
outsl
mov
inc
xchg
mov
fisubrs
dec
sub
cld
shlb
xchg
js
ret
shl
pushf
push
or
data16
sub
negb
jmp
push
sub
es
imul
fsts
mov
fs
jmp
mov
pop
and
std
rorb
push
daa
idivl
mov
jge
fwait
xlat
je
rorb
push
and
add
aad
ret
stc
and
in
int
enter
xor
sbbb
adc
repnz
jecxz
sbb
push
push
or
sbbb
in
add
pop
mov
out
orb
lods
add
cld
or
lret
sbb
insl
aam
inc
je
cmpsb
dec
mov
stc
sbb
aaa
xor
push
das
pop
push
adc
add
xorb
call
mov
clc
rcl
xchg
lret
out
dec
xor
mov
mov
sub
aaa
dec
popa
push
fnstenv
inc
xchg
jmp
shrb
fwait
pop
notb
test
pusha
mov
shl
push
mov
jnp
mov
roll
mov
sbb
cmp
pop
dec
mov
iret
in
xor
mov
pop
repnz
mov
sbb
mov
testb
pop
cs
mov
jno
push
mov
imul
and
or
pop
cwtl
in
cmp
sahf
xchg
jb
mov
mov
mov
stos
dec
inc
sbb
pop
xchg
lds
push
xchg
push
and
test
sbb
pop
sub
push
ljmp
jmp
and
mov
and
test
inc
pop
xchg
inc
xchg
cs
xor
ja
ret
aaa
adc
cmc
add
dec
js
pop
pop
add
aad
mov
mov
pop
int3
iret
add
insb
push
mov
pop
test
or
push
jmp
ss
pop
mov
lods
stos
loope
pop
sahf
jg
mov
iret
mov
fnstcw
out
enter
or
sub
jno
scas
add
aam
cmp
roll
xor
cltd
pushf
loop
in
out
addr16
out
dec
add
jo
fimuls
pop
aad
dec
mov
and
and
lea
pop
xchg
jo
xchg
xchg
bnd
adc
cmpsb
cmp
pop
loopne
iret
and
movsb
cld
fadds
shll
sahf
icebp
test
fadds
in
xchg
or
movsl
adc
add
stc
subl
lahf
leave
mov
les
mov
add
sbb
or
ljmp
mov
jnp
scas
mov
neg
xchg
call
in
imul
lret
xlat
jns
bound
gs
fwait
push
jnp
cmpsb
jg
pop
icebp
jl
sub
js
les
in
inc
and
mov
std
cmpsb
cmpb
stos
loope
cmp
test
mov
jne
sarl
pushf
pop
adc
push
dec
pop
jb
in
pop
mov
in
xor
or
les
into
jge,pn
cmp
push
fnstsw
add
fsubp
enter
sub
add
sub
test
push
addr16
xlat
out
pop
call
lods
mov
pop
add
add
nop
xchg
jmp
xlat
xorb
sbb
outsl
xor
sbb
insl
sti
inc
cmp
mov
push
sub
add
cs
arpl
add
xchg
lock
pop
mov
adc
sbb
mov
pop
xchg
shl
mov
stc
cli
pop
pop
pop
loopne
push
jmp
mov
out
pop
mov
fistpl
or
jbe
das
es
cs
or
xchg
or
sahf
xchg
imul
rcrb
adc
lret
rcrl
xchg
ljmp
and
pop
and
xor
cmp
lret
enter
add
mov
fsqrt
in
xor
out
fnstcw
sti
test
sbb
sti
fldenv
mov
xchg
push
jo
jmp
in
xor
pop
mov
hlt
pop
sbb
push
mov
mov
xchg
lea
test
push
jmp
lods
xchg
push
in
mov
fnstcw
andl
insb
xor
pushl
lods
xlat
mov
ss
ficoml
or
insb
xchg
mov
lahf
cmpsl
dec
cs
pop
cmp
xor
and
push
fwait
sub
popf
adc
cmp
jecxz
int3
push
lea
push
ret
sbb
and
mov
addr16
dec
mov
xor
aaa
push
es
ret
jp
aad
jl
iret
mov
sahf
jnp
scas
dec
xchg
pusha
sahf
repz
shlb
imul
mov
aad
outsl
push
jo
imul
fidivrl
mov
xor
mov
scas
xorb
lock
inc
push
cmpsb
mov
aad
insb
xor
lahf
mov
mov
inc
mov
mov
push
jle
mov
cmp
xor
js
cmp
pop
shrb
cld
inc
addr16
lods
and
push
popf
mov
jle
mov
orl
enter
addl
add
fs
scas
adc
in
adc
xchg
pop
stc
cmp
push
inc
fisttpl
adcb
es
inc
ffreep
outsb
loopne
mov
jae
lret
xor
pop
mov
loop
fdivs
mov
push
or
sub
jmp
inc
jae
pop
jecxz
call
mov
in
mov
dec
inc
cld
sti
push
cmp
in
mov
mov
movsb
pop
imul
pusha
adc
imul
jl
xchg
sub
sbb
push
xchg
mov
sahf
mov
testl
sub
dec
mov
xchg
and
or
insb
mov
sbb
add
sub
shrl
out
fldcw
shl
sub
loop,pt
mov
pop
jmp
mov
xchg
push
cmp
xor
sbb
rclb
mov
push
into
and
fistpl
sub
xor
mov
or
loope
loopne
push
popf
ds
stos
imulb
mov
insb
popa
and
jl
cmc
pop
mov
sub
test
sbb
outsl
push
out
cmp
mov
sbb
pusha
subb
cmp
mov
nop
jmp
add
call
and
in
cmp
fnstsw
orl
addr16
inc
add
movsb
mov
sbb
cmpsl
fldl
cmp
xor
mov
testb
xor
xchg
adc
pop
push
push
inc
push
lods
scas
call
mov
mov
sti
xor
cmpl
sbb
stc
sub
call
sarb
inc
sub
sub
and
icebp
icebp
add
sub
sub
jnp
jle
pop
push
adc
mov
testb
mov
pop
jle
adc
fisubl
fmuls
pop
pop
mov
jecxz
int
fbld
and
mov
pop
push
push
in
push
into
bound
aad
inc
lcall
jle
addb
xchg
sti
cmp
adc
and
xchg
pop
jecxz
fisttpl
sub
stos
mov
addr16
lock
push
movsb
push
out
lret
inc
mov
jns
mov
gs
pop
movsl
nop
jo
jns
dec
es
pop
out
pop
inc
push
mov
fildll
js
mov
repz
sbb
cmpsl
ja
and
fcoms
cltd
jno
pop
in
jnp
stos
lods
adc
sbb
and
or
cmp
insb
or
iret
shrb
xor
pop
lock
nop
fstl
int3
fsqrt
pop
xor
faddl
inc
cmpsb
ror
cltd
mov
scas
jg
push
divl
mov
mov
xlat
adc
pop
xor
mov
jge
add
dec
into
jns
loop
lea
push
fldcw
nop
push
lods
sub
fnstenv
xor
repnz
sarl
fsin
stos
push
stos
mov
or
stc
xor
sbb
out
jno
fcompl
out
stos
mov
fbstp
mov
ud1
fstpt
pop
clc
fcom
mov
push
jns,pt
and
cmp
dec
in
xchg
mov
ss
mov
insl
aaa
int3
imul
sub
aas
cmp
mov
sbb
mov
inc
push
push
xchg
adc
pop
push
mov
loope
popf
pop
movsb
and
mov
xor
in
adc
push
cmp
rol
subl
push
xchg
pop
mov
dec
fsubr
cmc
aaa
sub
lea
or
lds
andb
test
pop
sbbb
dec
xchg
leave
subb
push
pop
inc
xor
jnp
scas
aam
dec
out
pop
mov
xchg
push
adc
or
add
and
loopne
loopne
sbb
ret
inc
and
sbb
lods
stos
dec
shl
rcrl
mov
out
inc
sub
xchg
int3
fmull
adc
push
lret
jg
xor
ss
jecxz
push
cmpsl
js
insl
mov
sub
das
jmp
push
dec
sbb
mov
iret
les
popf
mov
adc
inc
push
clc
jno
ret
sarb
aam
adc
adc
xor
jge
loopne
mov
int
pusha
loopne
fnstcw
pop
add
sti
sbb
mov
mov
stos
enter
cmc
pop
fwait
inc
mov
mov
pop
push
push
cmpb
push
mov
mov
xor
mov
inc
pop
cmp
inc
xchg
movhlps
push
hlt
test
jne
add
insb
cmpsl
scas
js
mov
pop
inc
or
and
sahf
out
mov
outsb
sbb
xor
and
dec
addr16
lods
jp
fists
xchg
in
xchg
push
xchg
push
fldcw
popa
shll
pushf
loope
sub
ds
dec
push
mov
or
lock
js
and
imul
fsubp
test
fbld
mov
rcll
lcall
sub
jg
or
jbe
cmc
test
pop
pand
stos
sub
mov
adc
sahf
lea
cli
add
dec
jmp
fnsave
or
adc
cld
nop
pop
loop
xchg
jg
lock
mov
cwtl
fwait
lods
mov
xor
lret
sub
ja
leave
sbb
pop
pop
mov
xor
xlat
fstl
jo
or
nop
pop
mov
sub
xchg
mov
aas
cli
cmp
inc
dec
enter
jp
inc
jecxz
pop
cld
sub
dec
ret
and
add
jl
xchg
jno
mov
mov
push
in
xorb
aaa
andb
adc
push
and
xchg
shll
add
lret
std
repnz
rorl
ret
sbb
push
sbb
or
mov
fisttpll
jae
and
rolb
pop
mov
test
mov
mov
sbb
pop
sbb
sub
jle
std
cli
leave
dec
or
call
dec
popa
jbe
push
xchg
jmp
sub
lods
jbe
leave
rorb
pop
shll
mov
add
or
add
sar
ljmp
add
cltd
mov
lret
into
es
inc
imul
nop
jmp
xlat
mov
or
push
xor
jecxz
xchg
popf
cmp
mov
xlat
loopne
mov
addr16
scas
repnz
mov
pop
ss
enter
and
out
or
jne
dec
cmpsb
sbb
xchg
das
in
adc
leave
aas
inc
iret
xchg
xchg
pop
push
jge
mov
aaa
inc
in
jge
cmpsb
arpl
inc
sbb
mov
arpl
mov
insl
cmpsl
iret
in
popf
daa
pop
lcall
ret
enter
or
je
xlat
aaa
lret
cwtl
inc
jb
sub
adc
mov
add
gs
xchg
stos
scas
arpl
dec
dec
xor
xor
imul
sub
mov
dec
xor
jp
sbb
jg
lds
xor
xchg
stos
inc
push
and
pop
mov
aad
dec
xor
scas
sub
movsl
mov
test
mov
mov
cmp
int
in
pusha
aaa
mov
inc
fisubrl
mov
sbb
repz
pop
loop
fnstsw
faddl
cmp
inc
pop
inc
test
jp
cmpsl
mov
push
ja
mov
mov
out
adcl
inc
enter
loope
cmp
decl
dec
add
rcll
jae
sbb
int
cmp
jo
outsl
leave
push
sub
sub
xchg
mov
js
and
lds
pop
mov
push
stos
jl
ds
testl
addr16
ds
dec
shr
add
add
sub
cmc
inc
sub
test
nop
jmp
push
dec
cmp
push
push
xor
sub
es
mov
jbe
popa
sbb
add
ret
mov
inc
mov
orl
sub
enter
jp
lahf
sub
mov
dec
gs
mov
imul
mov
popa
pop
into
cli
adc
add
rolb
xchg
adc
jl
xor
pop
xor
mov
addr16
lret
add
mov
or
gs
adc
dec
aam
fucom
ds
lods
pop
xor
imul
outsl
and
pop
fcompp
jp
mov
pop
es
shrd
lret
leave
outsb
leave
adc
mov
jle
sahf
or
int
in
fsubl
fmuls
jl
pushf
and
testl
jne
flds
fwait
adc
add
daa
dec
loop
stos
sahf
out
fdiv
jb
jecxz
jmp
pop
jne
cmpsb
and
test
dec
pop
lret
mov
inc
lea
pop
sub
add
subb
fucom
in
sti
mov
dec
cmc
push
cli
ficomps
dec
cmp
fmull
shll
hlt
div
lret
pop
std
dec
clc
mov
xchg
jno
sbb
sbb
aaa
je,pt
orl
lahf
add
cmp
push
pop
ja
lods
ljmp
cli
andb
imul
movsl
add
cld
addr16
sbb
or
xchg
sub
sar
aaa
mov
imulb
lds
lret
arpl
in
dec
mov
push
loope
ret
add
dec
adc
xchg
jno
sub
and
pop
adc
dec
sub
push
mov
jmp
sbb
ljmp
jnp,pn
out
icebp
arpl
in
fidivl
loope
dec
addr16
cmp
add
call
or
sub
inc
and
dec
aaa
fistpl
add
sbb
cmp
lea
shlb
add
mov
inc
mov
scas
mov
mov
lret
repnz
lods
jae
out
mov
fdivs
gs
push
xchg
cmpsb
pop
lods
stos
incl
faddl
pushf
xchg
cmp
push
lock
adc
mov
cltd
fisubrl
ss
jmp
mov
mov
gs
add
clc
cmp
mov
pop
cwtl
cmp
push
iret
dec
das
jo
lret
dec
adc
push
ss
cmp
push
inc
fistpl
imul
fsubs
sub
mov
or
frstor
addr16
mov
pop
mov
sbb
and
test
or
mov
stos
adc
mov
mov
in
xor
push
xchg
mov
addr16
test
cld
je
inc
xchg
mov
iret
pop
mov
xor
inc
repnz
dec
mov
cmp
test
jg
repnz
fidivrs
rcrl
mov
pusha
add
pop
and
roll
adc
or
jle
dec
mov
jle
popf
xchg
cli
movsl
jae
subl
jbe
rclb
imul
and
and
fmul
adc
mov
fwait
dec
and
je
sbb
pop
ror
or
and
test
insb
pop
xchg
mov
jle
jne
rcll
je
sbb
xchg
dec
adc
aaa
inc
ljmp
test
add
and
cmc
jp
ja
lea
ja
lds
insl
fimuls
fucomp
mov
movsl
push
push
and
adcl
and
or
addr16
jnp
aaa
pop
mov
xchg
or
loopne
jecxz
and
or
dec
add
fwait
adc
jp
dec
and
mov
repz
lret
fsub
out
cs
pushf
sbb
icebp
sbb
mov
xchg
pushf
gs
divb
pop
and
inc
movsb
sub
mov
loopne
sbb
and
jl
inc
or
xchg
ds
aaa
decl
jp
out
sub
push
mov
xor
push
adcb
add
fildl
pop
or
jecxz
lcall
mov
jnp
mov
cmp
stos
roll
mov
mov
repnz
fstps
test
test
hlt
in
or
in
sbb
mov
xchg
add
mov
inc
mov
and
mov
cmp
int3
push
jnp
cmc
pop
aam
aad
add
dec
ret
ror
data16
xchg
push
sbb
and
xchg
ret
jmp
fnstcw
lret
test
lahf
mov
ror
call
mov
mov
xchg
mov
rorb
in
cmp
fldcw
ficomps
testb
sahf
adc
stc
lock
jnp
jge
jp
and
dec
bound
sbb
xor
or
shll
adc
add
mov
pop
scas
and
xchg
cmpsb
ror
loopne
jae
adc
push
pusha
bound
inc
scas
les
hlt
pop
or
mov
shlb
das
loopne
rcl
dec
stos
dec
sub
jmp
and
xchg
mov
sbb
sbb
ljmp
leave
insl
cmc
enter
add
les
test
and
out
jmp
xchg
mov
sub
jno
aas
mov
dec
test
cld
pop
loop
cmp
mov
jbe
adc
or
mov
sahf
test
add
push
shlb
push
bound
cmp
fldcw
aaa
ret
mov
negl
cmpsb
xchg
jne
push
stos
jle
cli
pop
inc
sub
or
jmp
sub
cmpsl
out
lahf
mov
nop
adc
inc
sub
movl
and
xlat
data16
ret
hlt
lods
sbb
sub
adc
mov
lcall
push
mov
ret
lods
cmpsb
and
ds
mov
out
leave
push
xchg
and
push
daa
shl
mov
aam
std
shlb
mov
or
or
leave
out
fistps
xlat
pop
int
xchg
push
js
shr
loop
mov
xor
das
sbb
in
insb
scas
mov
daa
mov
adc
or
lahf
inc
xor
and
in
jnp
add
in
xlat
jb
push
mov
xchg
adc
mov
aam
lahf
xchg
pop
inc
fisttpl
mov
aad
lcall
fiaddl
jl
and
sub
aas
scas
cld
inc
negb
stc
push
sarl
xchg
sbb
imul
sub
cs
andl
jbe
jo
mov
push
pop
sub
mov
scas
push
loop
nop
fbld
cmp
mov
sub
dec
mov
repz
fidivl
lods
sbb
push
divb
mov
jb
out
scas
fcmovbe
in
pusha
mov
aaa
mov
repnz
sub
inc
cmp
ljmp
sub
clc
icebp
xchg
nopl
and
or
shll
rcll
add
mov
dec
dec
test
cmp
mov
or
loop
or
cli
mov
add
xchg
push
gs
stc
in
adc
shlb
add
sub
shll
into
add
add
jno
pop
out
ljmp
arpl
lret
mov
imul
jecxz
dec
cmp
je
xor
pop
pop
sub
mov
push
xchg
sub
pop
pop
xorl
lds
mov
sub
sbb
lods
fldl
aas
bound
popa
mov
popa
ret
gs
jg
jo
lods
or
push
stos
jbe
or
xchg
outsl
lods
ret
bound
std
inc
push
aad
mov
insl
mov
inc
and
gs
pop
push
scas
dec
push
fsubs
repz
lret
pop
loopne
adc
nop
fs
sub
insl
mov
fists
sbb
jge
push
push
mov
addr16
mov
lret
add
out
hlt
adc
aam
pop
imul
rorb
stc
and
jb
cs
xchg
test
je
add
or
ret
cmp
mov
sar
sti
xor
int3
jp
scas
lret
leave
add
mov
shrl
pop
xchg
popf
loope
imul
hlt
dec
pop
cld
push
xor
mov
push
addr16
stc
loope
shll
in
andl
pop
adcb
or
mov
dec
inc
shll
add
sub
pop
inc
dec
fcom
cmp
imul
mov
push
push
push
dec
or
inc
cmp
sbb
cs
cmpsb
stos
dec
das
cmpb
and
int3
add
lods
dec
jge
icebp
incb
les
inc
pop
lret
movsb
data16
in
push
scas
cli
pop
test
pusha
pop
jmp
mov
mov
iret
call
push
push
ret
and
mov
push
sti
push
je
and
test
testl
sub
icebp
xchg
hlt
jl
pop
jmp
mov
mov
xchg
insb
lcall
cmp
hlt
mov
sub
addr16
std
fnsave
or
mov
push
adc
sarb
push
xchg
add
xchg
jg
xorl
iret
mov
fwait
vxorps
fcoms
xchg
cld
mov
rol
lret
mov
cmp
jno
movsb
test
xor
jb
cmp
out
lcall
jb
cmpl
jmp
fcoms
xor
sub
ret
loope
lret
inc
and
mov
scas
int3
pop
fimull
cmp
dec
push
aad
push
xor
inc
or
orw
popa
dec
push
mov
ret
jns
jge
pop
mov
nop
andl
divl
divl
or
inc
add
add
aaa
sub
aaa
add
pop
sub
int3
dec
ficoml
arpl
sub
mov
pop
mov
das
in
cmpl
sub
mov
leave
fwait
mov
into
pop
sub
arpl
iret
push
sub
bound
lock
out
mov
seto
xchg
bound
xchg
cld
imul
and
shll
out
mov
push
mov
cmp
aam
negb
lret
or
stc
or
dec
pop
jmpw
call
lods
or
aad
jle
repnz
out
imulb
les
dec
mov
pop
movups
add
call
pusha
lods
leave
sub
aad
mov
sbb
sub
ficoms
push
add
pop
int3
xor
inc
sbb
outsl
mov
cmpsl
pusha
inc
push
adc
mov
push
stos
push
mov
fwait
repnz
jne
jnp
xchg
inc
mov
sbb
sbbb
mov
add
and
xor
incl
or
ret
fwait
nop
in
test
sub
addb
mov
aam
and
mov
andl
outsl
jns
or
xor
scas
sbb
xchg
outsl
fnstcw
sub
int
cmp
and
pop
lods
sti
fistps
outsl
jae
movb
loop
leave
and
cmpsl
popl
pop
fldl
inc
cltd
lahf
pop
imul
shll
jg
mov
insb
xor
lea
mov
loopne
mov
and
cmp
pop
cmpsb
sbb
push
scas
mov
ljmp
int
pop
push
jp
push
push
dec
xchg
xchg
xchg
and
std
push
mov
mov
add
cltd
xchg
xor
test
sbb
push
xchg
ss
pop
idivl
cmp
jo
das
js
sarb
xchg
inc
inc
out
out
or
lock
jbe
mov
imul
inc
sbb
xchg
bswap
ja
xor
out
mov
add
insb
fisttps
mov
das
subl
fstl
shlb
cmp
jmp
negl
sub
jb
popf
mov
lcall
outsb
lods
xor
nop
test
loop
inc
mov
mov
packssdw
pop
sar
mov
out
and
xchg
jne
pushf
sbb
cmp
jo
mov
fcmove
sahf
add
jb
enter
and
pusha
xchg
out
aam
popa
gs
mov
dec
pop
pop
clc
test
mov
adc
mov
adc
je
mov
clc
scas
dec
movsl
or
repz
sahf
inc
mov
lds
push
sbb
push
xor
sub
mov
mov
adc
mov
dec
icebp
jae
adc
pop
fiadds
nop
rorl
pusha
sbb
pop
dec
mov
sub
xchg
push
jecxz
les
pop
fs
sbb
push
lret
push
pushf
jae
jle
sarb
inc
and
mov
sbb
scas
pop
adc
lret
sub
stos
jmp
pop
xlat
nop
cld
mov
or
daa
sbb
leave
mov
cmp
mov
rolb
mov
push
sub
pop
dec
sbb
cmp
pop
stc
loop
fnstsw
gs
cmp
cltd
lock
fcompl
xor
inc
rorl
add
push
push
mov
scas
shll
push
jle
and
mov
leave
in
sbb
clc
arpl
test
fcoms
fdivs
sub
gs
pop
cmp
repz
adc
jbe
jno
daa
cli
movsb
mov
inc
ja
xchg
sub
jecxz
leave
mov
mov
pushf
pusha
divl
and
mov
in
or
push
adc
ja
mov
xchg
or
dec
add
andl
push
mov
xor
movl
inc
lods
adc
adc
mov
lret
push
push
pop
fisttpll
out
cmp
dec
and
outsb
lods
ljmp
sub
xchg
in
mov
je
rorl
cwtd
inc
fidivrs
jbe
and
out
addr16
shrl
repz
xchg
and
fcom
xchg
lods
inc
sti
push
std
aaa
inc
jno
aam
cmpsl
pop
jne
sbb
daa
inc
xor
xchg
out
add
adc
sbb
movsl
mov
mov
mov
adc
sarb
push
cmc
dec
les
inc
ss
ljmp
xchg
adc
pop
fisubrl
aam
iret
loope
adc
add
push
call
mov
push
loop
jns
insb
adc
enter
add
fnstsw
or
mov
ds
xchg
mov
bound
fs
cli
sbb
imul
test
fisubs
hlt
cmpsl
adc
sbb
push
out
lahf
cmp
ds
lds
cs
frstor
mov
mov
fcmovne
repnz
clc
out
fcomip
inc
cmp
inc
outsl
xlat
out
mov
push
pop
xchg
pop
mov
insb
jb
push
popf
pop
and
jnp
jg
shrb
popf
loopne
orb
gs
cld
sbb
sub
out
jle
ljmp
testl
jl
out
fadds
ja
jo
and
sahf
sub
pop
or
cmc
cmpsb
arpl
popf
jecxz
xchg
imul
adc
sbb
push
xlat
xchg
xor
scas
nop
std
mov
jns
pop
testb
cmpsl
adc
xor
pop
rcrb
idivb
mov
popa
sbb
mov
xchg
adc
push
scas
mov
cmp
add
mov
dec
lds
jecxz
lea
mov
lock
xchg
fadd
adc
stos
stos
mov
and
jae
jp
mov
sub
test
mov
sbb
fldl
mov
mov
sub
scas
push
nop
sti
repz
push
mov
cmp
inc
mov
sahf
and
push
cli
dec
scas
mov
rcrl
test
push
ret
and
test
or
cwtl
jmp
add
in
in
and
xor
and
pusha
pop
xchg
jns
mov
testb
arpl
lods
sub
lret
push
inc
add
ror
cmp
fwait
repnz
cwtl
inc
xor
cltd
push
scas
data16
stos
addr16
inc
mov
jno
in
sbb
pop
sub
cmc
jae
shlb
ss
pop
das
leave
adc
mov
loope
lcall
call
and
leave
dec
jp
xchg
rclb
outsl
mov
fcoml
xor
dec
add
sahf
cmpsl
add
xchg
sahf
fstpt
mov
fcmovnu
jne
fcoms
mov
xchg
lret
subb
xor
xlat
rcrl
lea
adc
aas
cmc
repz
js
loope
sub
sbb
mov
lret
imul
cmp
cltd
mov
mov
sub
call
rorb
insb
pusha
add
mov
ljmp
inc
xchg
inc
scas
sti
mov
mov
sbb
and
pop
inc
xchg
shlb
lds
int3
fwait
inc
pop
mov
into
outsl
cld
sub
push
mov
idiv
push
and
xor
in
jo
repz
movsl
dec
and
mov
and
jo
mov
push
add
lret
movsb
jp
int
mov
test
xchg
dec
ret
lahf
lret
lea
or
sub
add
andb
es
sbb
adc
mov
inc
pushf
insb
in
scas
insl
out
push
pusha
imul
iret
and
je
insb
push
add
pop
fists
cmp
sbb
cltd
sbb
rsm
jne
es
pop
out
xor
jmp
cmp
sbb
jle
push
clc
out
mov
outsl
add
insb
jle
dec
mov
int3
sbb
sub
jg
cli
add
pop
and
pop
mov
mov
cmpsl
mov
pop
mov
jb
inc
sbb
popl
pushf
dec
mov
in
xchg
push
mov
mull
gs
popf
stc
inc
add
je
add
jo
sarl
jbe
or
or
mov
adc
test
pop
lret
cmpsl
xchg
inc
repz
or
xchg
lcall
jmp
insl
mov
cmp
add
sbb
mov
idivl
mov
or
movsb
mov
fs
into
int3
sub
ret
orb
fwait
sbb
adc
fsubl
fdivrs
test
movsl
inc
fyl2xp1
add
pop
pop
out
lcall
xchg
xor
inc
lods
dec
xorb
inc
ucomiss
jmp
xor
fs
lods
push
aas
cmp
or
addr16
adc
fwait
cmp
enter
jb
sub
in
ror
cmc
mov
stos
xchg
xchg
rorb
push
pushf
arpl
jo
out
cs
fwait
mov
lods
pop
shl
sub
insb
or
xchg
and
cmp
jno
mov
arpl
sub
clc
dec
aad
pop
sbb
mov
stos
enter
ror
into
clc
add
jle
daa
mov
mov
push
shlb
call
jl
nop
stos
mov
aas
sbb
insb
pop
dec
mov
jl
push
xchg
popf
add
test
sar
test
enter
add
pop
mov
or
jo
cmpsb
fcomp
push
fwait
stos
mov
pop
add
mov
out
mov
aaa
and
dec
jp
push
fwait
jg
stc
xchg
daa
or
dec
jne
cltd
frstor
adc
pushf
mov
hlt
cld
dec
lret
or
mov
loopne
lods
dec
jb
and
inc
add
shl
pop
ja
stc
pop
call
cmovge
adc
push
adc
jge
dec
bound
mov
repz
outsb
adc
xchg
sub
push
xor
imul
popl
lds
shrb
and
cwtl
or
sbb
cmpsb
jge
push
and
hlt
scas
jp
lock
mov
pushf
movsl
dec
push
or
test
lret
lods
pop
push
imul
push
repnz
pop
shll
mov
loop
lret
push
ds
xchg
dec
clc
call
mov
hlt
pop
mov
out
nop
inc
or
push
adc
sti
mov
int
or
pusha
jne
test
cmc
rol
psubusb
arpl
pusha
mov
nop
and
lds
aad
insb
mov
sub
sbb
pop
jle
test
ret
insl
repnz
add
rorl
cmc
mov
mov
leave
stos
or
pop
fisttpll
decl
cmp
pop
movsl
add
xorl
cmpsb
stos
testb
rorb
enter
das
mov
ja
sarb
adc
push
js
leave
iret
jp
ljmp
and
rcll
mov
jmp
mov
bound
mov
icebp
mov
or
cmpsb
cltd
add
xchg
or
mov
xchg
repz
jg
bnd
inc
push
idivb
nop
xor
xlat
xor
popf
push
push
enter
pop
sub
pop
lds
iret
dec
mov
gs
fisubl
mov
sbb
stc
jp
push
pop
jbe
pop
push
pop
jp
xlat
out
decl
and
addl
xchg
or
movaps
xor
xlat
add
das
xchg
scas
iret
lahf
mov
das
and
pop
dec
inc
pop
xchg
jp
fwait
arpl
jae
ds
out
std
sbb
ja
movsl
stos
dec
cmp
xchg
cmp
pcmpgtd
jg
loop
rcrb
push
loopne
jb
daa
ss
jb
xlat
insl
adc
mov
sub
aaa
push
xor
fs
ret
push
loopne
inc
and
inc
and
rcl
lods
out
inc
shll
cmp
jne
cmp
pushf
data16
bound
test
xchg
das
data16
dec
or
cmp
cmp
pop
push
in
mov
repz
push
rcrl
div
xor
shll
xchg
mov
push
movsb
flds
xchg
clc
inc
fbld
fprem
mov
addl
ret
pushf
add
scas
cmp
push
cmp
inc
cwtl
jns
lods
fiaddl
mov
pop
in
notl
sahf
inc
mov
xchg
repz
dec
pop
jp
push
sbb
mov
sbb
push
jg
cmp
mov
inc
pop
inc
mov
fcmove
js
loop
andb
mov
daa
cmc
int
sub
mov
xlat
xor
mov
mov
push
xchg
into
cmp
sarl
flds
hlt
adc
cs
mov
stos
repnz
cmc
xlat
xorl
std
mov
pop
outsb
lds
ret
cld
push
sti
cmp
loop
cmpsb
xor
inc
xchg
or
dec
es
push
js
mov
cmp
xchg
outsl
xchg
mov
scas
clc
or
xor
sbb
cmp
push
add
or
cmp
fisttpll
push
ficoml
jne
movsl
mov
pop
movsb
notl
mov
adc
xchg
shlb
stc
das
push
lahf
std
fcmovb
int
push
mov
out
fcom
jge
xorb
ds
cmp
aas
fistpll
cli
test
mov
daa
popa
int
enter
mov
cmp
inc
movsb
and
cmc
das
cmpsb
mov
xor
or
daa
sbb
mov
cmp
aad
mov
xchg
ljmp
int3
xchg
jle
outsl
push
fcmovb
jl
mov
outsb
das
and
addr16
fwait
push
mov
loope
adc
jmp
pop
int3
movsb
mov
sahf
aaa
adcl
mov
pop
outsl
add
and
out
mov
mov
adc
imul
imul
mov
sbb
bound
mov
arpl
loope
insb
push
cmpsl
imulb
std
sbb
out
fcompl
scas
pop
pop
mov
pop
pop
xchg
jns
mov
or
fimuls
mov
into
push
xor
out
jbe
gs
add
test
jp
lock
lods
and
loop
push
jb
xchg
dec
dec
inc
jae
inc
push
sahf
jg
insl
mov
add
mov
mov
pop
pop
sti
clc
mov
fbld
negl
add
les
scas
sub
popf
adc
mov
jno
lahf
call
or
adc
lret
push
sahf
mov
out
or
sub
loopne
jbe
add
or
push
dec
scas
or
int3
sub
ds
or
xchg
fs
adc
aad
mov
cmc
and
shl
iret
ret
bound
mov
cld
cmpsl
cmp
scas
mov
inc
hlt
mov
xor
aad
inc
testl
icebp
push
ret
out
rcl
repnz
jns
addb
mov
inc
cs
stos
add
mov
adc
movsb
dec
mov
push
xchg
pop
jecxz
pop
adc
and
mov
lcall
ret
ja
repz
adc
inc
cmp
xchg
daa
cli
sub
pop
jbe
sti
movl
sub
sub
add
out
jle
add
insl
mov
cmpsb
mov
nop
std
cwtl
mov
push
mov
pop
push
loope
mov
adc
cwtl
fwait
xor
sbb
lret
mov
faddl
stos
fndisi(8087
cmp
xchg
adc
xor
sbb
movsb
lock
cld
mov
aas
in
cmp
ljmp
mov
das
jp
or
pop
aaa
ljmp
ret
das
add
loopne
adc
rcrb
fwait
addr16
call
loop
daa
mov
call
gs
cmpsl
push
pop
fists
in
in
aad
xor
pushf
mov
imul
sahf
addb
inc
mov
cli
add
or
pop
mov
add
mov
sahf
imul
rorl
add
in
sahf
int
add
or
dec
xchg
js
push
xor
stos
sub
mov
jnp
icebp
ficoms
in
mov
addl
add
iret
adc
sahf
jg
sub
pop
jmp
loopne
hlt
mov
andl
dec
inc
sub
andb
pusha
iret
mov
sub
push
push
ficoml
int
stc
clc
dec
and
xor
ds
fnsave
mov
mov
inc
push
pushf
mov
imul
cmovg
pop
mov
imul
pop
popa
push
jge
mov
mov
cli
in
test
adc
pushf
cmp
and
adc
jecxz
popa
push
leave
sub
pusha
mov
int3
mov
lret
das
pop
dec
mov
xchg
outsl
xor
out
push
into
pop
in
adc
movsb
test
addl
jnp
loopne
mov
or
scas
mov
sub
push
cmc
mov
pushf
push
and
imul
inc
loopne
jne
ffree
hlt
lds
ret
inc
ret
xor
gs
xlat
or
push
or
iret
adc
call
sahf
sbb
mov
mov
and
xchg
in
jo
out
pushf
rcll
ljmp
insb
push
sub
jmp
push
xchg
scas
lret
pop
cs
incb
dec
pushf
jae
push
lock
jne
lea
inc
loop
mov
xchg
or
lret
fs
mov
movsb
sbb
fstpt
fmuls
std
fwait
cs
jp
lock
jle
sub
scas
push
and
dec
in
je
xchg
sub
inc
mov
hlt
in
cli
mulb
mov
xchg
jb
jmp
xchg
adc
test
add
add
mov
push
cmp
or
lock
iret
jb
jbe
inc
out
mov
adc
and
outsb
push
cmp
adc
fstpt
fwait
xchg
dec
push
pop
jbe
vmovaps
jle
ss
mov
int3
dec
push
sub
inc
leave
out
add
scas
sti
es
inc
adc
push
inc
inc
dec
inc
call
xchg
gs
sarb
lret
cmp
dec
lret
rcrl
enter
cld
imul
stc
imulb
cmpsl
ss
repz
sbb
imul
loope
mov
inc
pop
xor
shll
xor
xchg
cmpsb
ja
lds
sahf
les
jg
int3
adc
adc
xchg
loope
cmp
ss
xor
pop
adc
jge
je
faddl
test
shrl
leave
or
cmp
scas
test
inc
nop
sub
jmp
mov
js
mov
push
repnz
push
xchg
push
addr16
lods
push
cli
shrl
mov
sbb
dec
adc
dec
leave
xlat
fidivrs
sub
mov
push
dec
outsb
and
xchg
pop
sbb
adc
jp
arpl
mov
adc
xor
pop
nop
ds
pushf
inc
jge
push
jb
out
mov
nop
in
inc
add
mov
jmp
daa
dec
ret
mov
arpl
fildl
add
in
cld
lcall
stos
pop
jae
ror
add
mov
aam
sbb
mov
sbb
cmpsl
or
in
sarl
in
fucomp
push
mov
xor
mov
sub
js
xchg
pop
in
or
xchg
dec
sar
jo
adcb
push
repz
or
fdivrs
repz
adc
fstl
jge
adc
xor
insl
push
popa
cmp
ja
cmp
add
imul
push
rclb
pop
push
cli
mov
pop
icebp
push
leave
hlt
es
aas
shl
or
ds
mov
daa
xor
dec
outsb
scas
sub
xchg
mov
test
cmpsl
aas
je
xor
imul
cmp
repnz
cmp
sub
lods
fs
cld
cli
xor
inc
push
popf
jp
or
fnstcw
call
cmpsb
add
out
test
xchg
leave
mov
mov
pop
xchg
xor
outsl
jns
jne
test
jg
into
loop
mov
pop
pop
adc
cmpsl
push
lret
inc
dec
sbb
data16
mov
mov
mov
pop
inc
pop
sub
cmpsb
pop
notb
fidivrs
xchg
or
sbb
add
repnz
shl
lret
xor
andb
out
cltd
jle
ds
mov
xor
and
lock
lret
leave
enter
ror
dec
mov
and
xor
nop
lock
movsb
add
les
and
clc
adc
mov
fimuls
jecxz
scas
aam
fisubrs
imul
and
xor
xor
pop
cld
jecxz
dec
cmp
xchg
cmp
mov
lcall
xor
hlt
in
pop
inc
mov
aad
mov
int
pop
cmpsb
push
add
sub
adc
inc
mov
hlt
addr16
mov
sti
cltd
mov
lret
xchg
scas
xchg
mov
push
or
jb
sub
testb
movsl
adc
adc
gs
push
and
jle
test
add
movsb
fisttps
mov
outsb
pop
sub
addb
sub
shll
push
inc
adc
lea
cmp
push
adc
daa
mov
inc
jae
jmp
ds
or
sbb
jno
lret
push
inc
and
ret
cmp
lret
out
xchg
pop
xchg
movsb
adc
pop
out
sub
ret
cli
in
jbe
sbb
das
adc
xchg
cmp
xchg
movsl
arpl
cmp
aaa
gs
sbb
jecxz
out
lahf
stos
inc
push
xor
push
int
xchg
push
ljmp
push
or
pop
pop
or
and
xor
cmc
push
cli
sub
aad
push
fxrstor
jge
jne
out
inc
in
jne
push
shrb
jp
or
pop
and
orl
mov
cld
push
xorl
or
cmc
dec
jle
imul
push
nop
fdecstp
cwtl
aad
push
movsl
ret
mov
sbb
lahf
jb
insl
jmp
rcll
lods
xor
jge
sbb
popf
inc
test
clc
loope,pt
testb
lock
std
insl
divl
jae
adc
sbb
mov
push
and
jl
cli
xor
jnp
jecxz
xor
jp
je
add
loop
in
stc
cld
xchg
sub
sbb
mov
repz
outsl
and
push
inc
sti
jmp
mov
dec
mov
lods
push
insl
jns
jecxz
jbe
les
mov
pop
mov
pop
js
loopne
adc
fcoml
jmp
cmpsb
out
mov
sub
xor
in
sbb
inc
sub
pop
inc
into
xchg
xchg
xchg
adc
mov
push
les
orb
adc
mov
inc
leave
cmp
sahf
sub
push
call
sbbl
pop
hlt
mov
cwtl
sahf
sar
jge
sbb
xchg
shll
stos
fidivrs
xchg
cwtl
lret
in
adc
jmp
and
mov
mov
cmpsb
sub
out
fimull
ds
lret
push
jae
jbe
sub
push
xchg
cmpsl
cmp
movsb
jb
and
lret
pop
iret
sub
aam
out
mov
mov
stos
aad
shrl
es
mov
mov
push
pop
lretw
push
xlat
xor
dec
mov
lcall
pop
or
add
mov
jnp
data16
loope
fimuls
mov
test
push
pop
mov
mov
cltd
fsubs
aad
ljmp
cmp
dec
adc
fs
push
loope
adc
ret
in
lea
rclb
enter
addl
enter
dec
clc
dec
out
stc
xchg
pop
inc
imulb
inc
cmp
bound
data16
loopne
pop
mov
xchg
scas
jns
repz
rcr
test
imulb
jg
mov
in
pop
scas
pushf
sbb
fldenv
jp
mov
xor
mov
mov
fmulp
add
push
add
jmp
shl
mov
jnp
les
call
cwtl
pop
fisubrs
xlat
rcrl
push
sub
and
rcrl
adc
add
xchg
mov
test
dec
dec
fsubs
push
adc
xor
cwtl
popa
jp
jne
mov
ds
cld
inc
push
pop
dec
and
lea
add
sbb
nop
arpl
inc
mov
jg
rorb
cmp
pop
mov
in
clc
aas
rcrl
mov
je
xchg
out
push
dec
push
add
xchg
pop
jmp
in
mov
add
arpl
jl
inc
pop
mov
jmp
jbe
pop
clc
and
pop
xchg
pop
mov
pop
dec
push
sbb
pop
lods
mov
or
dec
das
mov
and
mov
mov
mov
jns
sbbb
mov
outsl
clc
andb
push
in
mov
inc
lods
ja
push
into
aad
aaa
jb
rcrb
in
ljmp
sbb
dec
arpl
pop
fmuls
cs
aam
or
mov
xchg
dec
fcmovnbe
fwait
push
fists
repnz
sbb
and
fwait
rcl
sbb
daa
notb
and
outsl
xorl
adc
inc
or
movsl
xor
mov
cmp
jb
dec
cs
dec
repz
pop
fdivl
push
addl
clc
rorl
push
or
or
add
push
lea
push
sbb
aad
test
rcll
jne
jge
jmp
add
mov
mov
xchg
lods
mov
lea
pop
data16
jmp
fiadds
and
jne
mov
aam
mov
rcrb
mov
cmp
fisubl
adc
shlb
mov
sbb
sbb
cmpsl
lds
jns
mov
adc
insl
in
int
jae
cmpsl
inc
lea
mov
in
mov
cli
bound
in
sbb
xor
dec
idivl
adcb
mov
xchg
mov
aam
add
inc
sahf
cmp
sbb
and
icebp
sarb
shr
cltd
sub
arpl
fstpt
sbb
push
push
cwtl
mov
pop
lods
xor
cmpsb
or
aad
mov
dec
pop
lea
jge
loope
inc
jge
xchg
push
jae
jle,pn
pop
je
outsl
mov
sub
xchg
sar
push
test
lea
push
dec
mov
or
inc
int
repnz
cld
call
mov
dec
pop
mov
into
sub
cwtl
and
xchg
push
xor
sti
mov
and
xchg
mov
mov
push
pop
or
aam
mov
mov
cltd
pop
sub
ljmp
fwait
mov
shr
movsb
push
rcll
dec
lods
jle
pop
add
mov
jns
cmp
and
jae
shrb
test
rcr
jg
mov
sbb
addr16
add
div
inc
and
mov
sub
and
cmpsl
mov
jns
fwait
sti
test
mov
mov
lcall
sub
jno
cmp
data16
or
ret
idiv
dec
scas
and
and
cmp
xor
lock
insl
cmp
xchg
lds
add
jo
cmp
mov
xchg
int3
ja
out
scas
jmp
sub
adc
and
fucomp
inc
iret
sahf
pop
aas
add
mov
or
sub
clc
push
jbe
inc
push
push
and
bound
std
addr16
adc
mov
enter
mov
inc
je
mov
cmc
ficoms
iret
gs
stc
lcall
repnz
bound
out
sub
aad
or
push
cmp
fdivrl
cwtl
add
sbb
orl
clc
sub
insb
pushf
add
xchg
jnp
xchg
dec
fmuls
js
jo
mov
lods
rcll
sbb
mov
xchg
mov
add
mov
xchg
xchg
and
xor
push
fsubs
sub
mov
xor
ljmp
add
mov
into
jb
in
ss
imul
mov
pushf
xor
push
cmpsb
and
lods
jl
mov
sbb
and
sub
test
cmp
mov
lods
push
fwait
icebp
cmp
mov
aad
sbb
in
sub
in
jg
pop
aam
push
test
in
sub
aam
add
mov
fnclex
in
sub
sub
xor
test
test
add
data16
mov
shlb
jle
xchg
mov
loop
jns
adc
jbe
iret
dec
mov
in
repz
dec
jne
jne
cmpsl
dec
imulb
dec
inc
dec
sub
rorl
add
shlb
aam
jne
cwtl
xor
ret
pop
mov
dec
addr16
test
bnd
divb
inc
xor
jae
pop
xchg
xchg
cs
test
into
hlt
sbb
adc
jns
pop
mov
lods
sbb
enter
add
je
leave
mov
subb
icebp
out
mov
repz
in
sbb
clc
dec
add
out
xchg
pop
rorl
aam
lds
jbe
add
jmp
mov
push
ljmp
jb
dec
les
fnstcw
shrd
ret
lds
repz
loop
fwait
mov
les
adc
mulb
inc
dec
imul
xchg
call
jb
and
sub
adc
bound
movsl
sar
jge
push
lahf
mov
cbtw
push
jno
sub
insl
les
push
inc
and
adc
push
sbb
and
xchg
xchg
lret
cli
xchg
movsl
dec
mov
je
add
jp
lret
inc
out
xor
mov
jne
ds
lock
mov
mov
ss
jle
test
aad
lock
pop
cwtl
shrb
leave
pop
adc
cmp
xchg
stos
iret
xor
add
adc
and
cmp
or
inc
inc
sbbl
cltd
lret
mov
pop
pop
ror
repz
outsb
mov
loop
xchg
fstpt
rcll
push
nop
gs
popa
pop
outsl
push
repnz
cmpsb
bound
int
stc
leave
ljmp
fdivs
inc
inc
xchg
loopne
ja
sti
scas
rclb
and
ret
jmp
pop
nop
push
sub
sub
push
pop
cmp
pop
inc
xchg
out
push
shl
ljmp
jle
es
sub
xor
mov
shll
sahf
cmp
lock
mov
push
sti
or
roll
mov
dec
push
cmp
flds
push
add
repz
and
roll
push
and
cmp
test
rcrl
sub
and
pop
imul
arpl
or
mov
xchg
ret
pusha
mov
pop
subb
jmp
pop
dec
popw
push
es
bound
push
ret
add
popa
mov
shrb
sarb
mov
xorl
shrb
inc
push
mov
cmp
out
daa
xchg
cmpsl
sarb
call
xchg
fistps
movsl
jl
imul
mov
shll
roll
test
mov
rcll
rcrb
mov
rcr
xchg
pushl
add
xchg
jmp
shll
or
jbe
insb
lods
icebp
dec
mov
sbb
adc
cmp
mov
les
add
pop
adc
cmpsb
mov
out
and
iret
in
int
lea
jnp
int
xor
pop
cmp
jl
mov
jae
inc
sub
push
jmp
sub
cs
mov
insl
sbb
jae
jnp
sti
outsl
push
js
aaa
cs
daa
sbb
pop
cmp
leave
into
jnp
mov
pop
push
push
adc
sub
or
popa
xchg
cmp
roll
mov
pop
repnz
fdiv
lods
adc
mov
cmp
test
repz
push
mov
dec
movsb
jp
fnstenv
aas
sbb
pop
inc
ficompl
test
mov
mov
xor
jl
xchg
sbb
mov
out
lret
jmp
lds
loope
icebp
outsb
xchg
push
mov
insb
dec
cmp
jl
in
leave
repz
xor
lcall
iret
stos
insb
adc
cmp
ss
out
sahf
jns
stc
xchg
repz
cld
test
cmp
mov
mov
inc
mov
test
cmpsl
std
push
sub
push
sub
mov
lcall
ret
aas
mov
jno
xor
dec
stc
inc
mov
push
sub
arpl
js
out
and
ret
idiv
loope
jle
pop
stc
movsb
jo
pop
inc
jge
mov
shll
pop
loop
data16
je
inc
sbb
pop
fstpl
mov
and
orb
dec
inc
les
push
in
dec
in
vmread
pop
jle
bound
pop
push
iret
add
and
jp
mov
pop
push
int
lea
jl
jno
jecxz
or
fcompl
ficoml
pop
jmp
or
mov
cld
pop
into
mov
mov
nop
push
push
scas
push
in
rorb
test
imul
enter
mov
lea
cmp
fnstenv
sub
mov
sbb
ja
push
cmp
dec
mov
fld
sarl
repz
subb
adc
fstps
pop
sbb
mov
jg
adc
cmp
lods
addr16
sbbl
inc
or
ret
loopne
and
mov
jmp
adc
mov
xor
inc
outsl
mov
je
push
outsb
mov
shll
repz
notb
sbbb
mov
xchg
and
cmpsb
rcll
push
hlt
fcompl
xor
push
inc
cmp
in
icebp
cli
sarl
inc
roll
iret
inc
mov
out
jbe
out
adc
dec
test
pop
xor
pop
lret
cmp
adc
daa
cmp
fcmovnbe
cmpsl
inc
dec
push
pusha
mov
orb
decb
outsl
testb
lods
cli
call
ss
out
mov
mov
jp
icebp
pop
sbb
popl
out
add
push
cmc
mov
stos
fucomp
xchg
or
mov
iret
sub
pop
mov
sbb
add
outsl
adc
cmp
push
js
call
adc
aam
rol
sbb
loope
jp
cmp
push
lret
push
inc
jbe
sbb
cmp
movsb
jno
add
pop
push
ds
jmp
cmpsb
sub
lds
lret
mov
aam
bound
add
lret
insl
mov
mov
fnsave
cld
and
mov
enter
ret
je
cld
rcll
jae
iret
inc
fisttps
stos
packsswb
or
push
cwtl
ja
dec
loop
ds
cmp
cmpsb
in
xor
inc
roll
aas
push
dec
mov
or
sti
aaa
imul
test
push
gs
cmpsl
xor
cmp
push
dec
loopne
arpl
in
and
shll
push
xor
push
rcl
xchg
arpl
aad
sbbb
inc
push
mov
mov
adc
ja
xor
push
fistpll
mov
jae
push
fldcw
leave
cmp
jmp
aas
xor
push
ljmp
inc
cmp
aam
cmp
or
xchg
pusha
push
xchg
mov
sti
in
xchg
clc
fldenv
inc
fidivs
mov
iret
push
movsb
popa
cli
scas
push
aam
xchg
cmc
pop
lods
and
xor
pop
out
les
sbb
mov
push
pusha
ljmp
mov
mov
les
je
movl
scas
dec
cmp
aad
scas
lcall
test
inc
sbb
test
adcb
and
addr16
push
clc
in
cmp
and
sub
dec
cmp
lret
mov
daa
add
dec
xor
xor
cli
sub
adc
adc
xchg
shlb
sub
xchg
fldcw
lock
add
nop
xor
mov
divl
lock
push
pop
dec
or
dec
mov
xor
pop
testb
out
ljmp
std
int
xchg
in
sub
je
add
jp
adc
dec
int
outsb
pop
mov
outsl
mov
mov
sbb
cmp
imul
das
add
call
std
dec
sbb
sbb
cld
jbe
call
push
sbb
mov
mov
arpl
fimuls
rorb
dec
arpl
les
sbb
add
xor
popl
dec
adc
xchg
scas
or
and
mov
ret
fwait
test
inc
mov
daa
sub
xor
cltd
scas
push
cmp
pop
mov
test
stc
mov
idivl
into
stc
xchg
ljmp
mov
sbb
testl
insb
lock
xchg
or
pushf
mov
sub
lahf
lcall
lods
loop
loope
sbb
adc
jmp
lods
push
cmpsb
in
jl
jecxz
cmp
and
pusha
insl
mov
mov
cli
in
dec
sarb
jb
call
fwait
sbb
imul
jmp
mov
pop
push
xchg
das
jp
movsl
adc
bnd
mov
sub
mov
cmp
mov
adc
addr16
cmpl
pop
insl
in
pop
push
out
pusha
mov
push
inc
jge
test
jbe
mov
sub
rorl
xchg
sbb
ret
icebp
repnz
testl
adc
loope
sarb
mov
mov
aas
mov
jg
and
inc
push
fadd
pop
mov
sti
pushf
int
fwait
adc
pop
push
std
or
imul
jle
movsb
pop
jg
cmp
sub
js
outsb
push
xchg
inc
fcompl
mov
scas
lock
popa
mov
shlb
jo
sub
pop
xor
pop
jmp
call
dec
sbb
stc
fs
jbe
jmp
or
test
sub
push
ja
jl
iret
lcall
push
jecxz
or
jb
add
test
xor
jp
lahf
jae
int
lea
xchg
adcl
jae
xchg
imul
std
hlt
lcall
decl
pop
mov
arpl
pop
shl
xor
jae
mov
sti
imul
jae
sti
cwtl
inc
nop
movsl
mov
inc
ljmp
outsb
jne
sub
jnp
in
and
bound
adc
stc
cmp
cmpsl
add
cmp
std
push
fists
addb
cmp
aaa
mov
ret
pop
mov
pop
dec
push
out
xor
mov
hlt
fbld
dec
shrl
aaa
lods
mov
inc
push
pop
push
out
xchg
mov
lcall
adc
pop
push
push
add
fcmovnu
repnz
pushf
fldenv
xchg
mov
callw
cltd
ds
mov
xchg
xorb
sbb
dec
nop
stos
sub
or
mov
cmp
xchg
lods
sub
loop
hlt
cld
add
xor
sar
mov
repnz
inc
mov
jo
in
js
push
inc
call
scas
inc
pop
cmp
jecxz
add
jl
adc
aam
enter
sahf
imul
sub
adc
scas
jecxz
and
call
cmp
and
mov
xchg
cmp
fsubr
dec
jmp
in
jg
pop
push
mov
dec
cli
lock
jmp
push
push
test
adc
lahf
mov
lods
xchg
cmp
add
mov
cmp
outsb
decl
mov
push
into
adc
xor
jle
pop
roll
js
popf
loope
roll
pop
push
add
insb
add
fsubr
and
xor
mov
mov
inc
adcl
test
cmp
cmp
xor
rcrb
and
in
or
push
test
xor
sbb
movl
dec
pop
into
cmpsl
inc
push
xor
out
lock
xchg
mov
mov
std
jmp
push
lds
pop
subb
stos
in
imul
lcallw
sbb
lods
std
in
mov
lret
clc
push
in
pop
xor
push
adc
bnd
cmp
mov
xor
or
jne
stos
cli
ret
xchg
fcoms
push
ljmp
adc
je
xor
xor
add
cld
jne
les
cmpsl
jo
and
cmp
popa
ljmp
adc
sbb
pop
les
adc
cld
push
jmp
jnp
mov
pop
ja
loopne
ljmp
mov
bound
aas
dec
sbb
mov
cli
repz
scas
mov
fwait
inc
add
mov
sub
aaa
inc
jb
jmp
loope
inc
sarb
sti
ret
push
lock
push
sub
scas
mov
push
jo
repnz
push
push
addr16
xor
out
scas
out
pop
andl
lret
hlt
adc
mov
loop
mov
pop
pop
dec
stos
scas
in
gs
adc
inc
push
adc
test
into
cmp
and
cli
or
cmp
negl
test
jmp
hlt
push
loopne
loop
ljmp
and
sbb
fucomp
xchg
xchg
aaa
xchg
sbb
aad
lcall
push
in
movsb
insl
je
cs
divb
insb
pop
hlt
cmp
ficomps
and
stc
xchg
or
arpl
out
sbb
jecxz
sbb
int
pop
jmp
sub
fldenv
pusha
mov
or
rcll
sub
fcmove
dec
lcall
cwtl
lret
or
je
cmp
fidivrs
fiaddl
mov
out
jg
mov
or
call
sbb
jns
pop
adc
cs
mov
pop
sar
cmp
jbe
les
out
ret
and
pop
arpl
adc
push
imul
inc
pop
ret
movups
sbb
jns
repz
pop
jp
ds
lcall
mov
push
lods
cmc
aaa
int3
push
imull
cmp
mov
dec
int
outsb
push
sub
fmuls
jb
xor
adc
loope
lcall
les
add
setbe
fnstsw
je
cmp
popa
in
push
bound
pop
jo
cltd
movups
cwtl
psubsw
lods
add
cmp
mov
mov
push
lea
js
aad
int
ret
call
pushf
jle
orl
call
in
sub
es
push
ja
mov
mov
ds
mov
inc
mov
push
xchg
add
fwait
cli
lea
mov
out
movl
psubsb
or
push
mov
sahf
cltd
dec
pop
mov
mov
mov
dec
xor
and
icebp
leave
das
repnz
insl
pop
xlat
stos
andl
mov
push
mov
pop
rorb
scas
jne
push
fnstenv
cmp
dec
call
xchg
xor
xlat
or
out
lahf
add
mov
decl
ds
pop
mov
lods
cmpsl
xchg
fsubrs
sti
sub
pop
sub
add
push
inc
sub
push
mov
and
stc
add
cld
cmpsl
fsubl
leave
push
push
js
or
mov
nop
pop
je
adc
xchg
movsl
mov
inc
test
mov
jae
push
cs
adc
pop
orb
int3
fcomi
inc
scas
cmp
mov
clc
jmp
jo
mov
movsl
lcall
adc
jmp
ljmp
cmp
push
lods
psadbw
push
fsubrs
lahf
fidivrl
pop
jmp
inc
push
jge
sar
sbb
cmp
sbb
cmpsl
or
cs
and
test
aas
pop
xor
adcb
faddl
mov
les
in
test
jno
cmp
popf
bound
or
movsl
add
sahf
fwait
jle
in
out
jg
dec
pop
pop
icebp
lcall
movl
inc
sbb
mov
test
ss
inc
in
xchg
lahf
inc
in
dec
mov
mov
movsl
iret
inc
sahf
fabs
mov
mov
inc
jne
orb
loope
repnz
sbb
je
in
scas
aaa
dec
mov
xchg
sbb
mov
mov
inc
mov
fcmovnb
xchg
fcomps
xor
jo
int3
mov
ret
jecxz
cmp
jns
lods
xor
call
push
out
sbb
lods
sbb
insl
nop
sbb
jbe
and
cmp
popf
mov
movsl
and
cmpl
popf
ljmp
lock
in
and
std
jge
and
imul
sahf
xchg
lret
sub
arpl
push
rcrb
mov
jmp
lods
xor
pop
adc
fstpt
xlat
cmp
dec
and
cld
mov
pop
andl
push
sahf
fdivrs
adc
fadds
jg
mov
rorl
or
xchg
pop
repnz
out
aam
xchg
pusha
loopne
rolb
je
mov
cmp
int3
scas
cwtl
loop
jns
hlt
inc
aas
push
popf
mov
lret
clc
nop
enter
adcb
testl
mulb
jle
mov
cmp
sub
arpl
pop
cmp
lahf
cld
aas
pop
adc
nop
call
jne
xor
les
jae
shlb
mov
lahf
movsl
les
daa
cs
insb
push
incb
mov
cmp
inc
mov
sbb
xchg
dec
mov
or
or
add
in
lea
inc
pusha
xchg
inc
test
dec
mov
cltd
testl
pop
jno
ds
leave
int3
gs
push
push
es
mov
cmp
popf
mov
iret
das
mov
mov
dec
sahf
scas
ret
push
stos
xor
adc
es
addr16
push
lcall
push
inc
adc
mov
popf
inc
data16
or
shr
leave
xchg
push
xor
or
lock
lret
lcall
iret
jg
fldl2e
mov
lock
cmp
xlat
pushf
lds
sbb
cmc
xchg
aam
aas
das
cmc
xchg
pop
in
adc
push
sbb
test
fists
add
ret
test
addr16
xor
popa
repnz
sbb
mov
push
cld
repz
sbb
js
lock
xor
inc
lds
es
mov
jp
movsl
lods
in
or
cltd
push
push
jnp
lock
aaa
add
xchg
test
xor
pop
mov
lea
rcrb
sub
sub
cwtl
cmpb
ret
mov
jb
adc
jns
scas
popf
sbb
or
test
aaa
ds
xorl
out
outsb
sub
xchg
repnz
push
dec
arpl
dec
xor
ljmp
sub
gs
ret
jmp
sbb
and
cmp
sbb
pop
aaa
jo
push
addr16
pusha
loop
cmp
stos
les
xor
adc
in
push
add
cld
out
cmc
addr16
add
imul
xor
inc
rcr
mov
faddl
push
popa
lds
sub
jns
call
clc
adc
inc
adc
pop
push
and
push
addl
jecxz
ss
fs
imul
lret
nop
lea
add
hlt
pusha
nop
mov
les
sbb
jge
popf
inc
scas
mov
mov
add
sti
or
and
arpl
xor
jle
gs
fisttps
inc
daa
inc
mov
cmp
or
inc
sub
xor
and
cld
jmp
pop
rcll
push
pop
push
inc
rcr
into
ret
lret
in
movsl
popa
gs
shl
xchg
push
mov
jmp
jb
adc
and
sar
iret
xchg
pop
add
lret
or
ficoml
aas
push
in
push
mov
inc
adc
jae
inc
lcall
jbe
cli
sti
out
add
add
out
mov
movsb
popf
into
mov
jnp
movsb
or
sub
scas
in
test
in
sbb
xchg
lcall
sub
es
push
stc
in
int3
xor
inc
scas
xor
jae
mov
jmp
jmp
out
cmpb
fdivr
adcb
sub
mov
mov
xchg
xor
sub
lahf
arpl
mov
daa
test
fwait
or
inc
fwait
subb
sbb
outsl
test
pop
sbb
lods
xchg
aaa
sub
cmpsl
insb
sub
jl
jo
mov
mov
add
js
ficomps
jbe
es
neg
shr
jo
or
mov
and
rolb
dec
test
pop
xor
ss
mov
inc
add
dec
mov
and
cmp
addb
fwait
jae
or
pop
cld
add
sub
out
sbb
mov
insb
and
iret
fdivl
pop
ftst
sub
test
je
mov
mov
std
cmp
adc
add
ret
jbe
in
arpl
add
xchg
lods
cld
pop
push
nop
or
jge
repnz
jmp
xlat
adc
aad
mov
inc
add
lret
pop
out
cmc
mov
xor
clc
lahf
push
xchg
out
out
movsl
sub
adc
xchg
inc
push
adc
fwait
xchg
out
loope
lcall
adc
add
sbb
jmp
add
iret
jmp
hlt
data16
rcll
xorl
pop
fidivrl
clc
inc
add
add
ljmp
ds
dec
cmp
sub
mov
and
adc
ss
rcrl
pop
and
fildll
jnp
test
xchg
push
idivb
mov
int
xor
mov
stos
cmpsl
mov
xchg
cmp
fisttpl
dec
dec
std
jecxz
xor
cmpsl
jmp
ja
fistps
fadds
and
cltd
test
lahf
adc
lret
cli
xchg
sbb
aam
adc
jbe
or
dec
aam
mov
sbb
dec
insl
cmpsb
lahf
sbb
leave
push
add
mov
cmc
mov
push
mov
push
sub
pusha
clc
pop
in
jge
in
outsb
cmp
xchg
mov
mov
repnz
loop
clc
lods
mov
js
push
xor
or
push
icebp
std
sub
shll
dec
fnsave
cmp
push
fcom
fists
inc
shrd
inc
lods
ss
stc
pop
daa
loop
add
not
in
out
push
sub
lahf
into
data16
sub
mov
imul
push
push
jne
imul
fisubl
lret
sub
add
pop
bound
adc
popa
daa
push
mov
mov
pop
pop
dec
icebp
icebp
jp
ret
pop
cltd
lea
and
and
inc
test
mov
out
jge
xor
inc
lcall
pop
push
dec
mov
dec
xor
imul
aam
in
cwtl
cmp
or
inc
or
xor
sub
xchg
testl
ds
sbb
rcl
sbb
aam
adc
cmp
testl
rcl
call
adc
dec
xchg
xchg
pop
jns
stos
jnp
mov
xchg
int
sbb
test
sub
das
dec
or
jbe
sub
insl
aad
popa
xchg
fs
xlat
bound
jp
jp
xchg
push
xchg
cltd
jb
aas
add
adc
outsb
gs
pop
nop
dec
out
imul
fnstenv
jno
icebp
and
push
rorl
pop
loopne
dec
hlt
cmp
adc
cmp
std
xchg
out
cmpsl
xchg
ljmp
sahf
dec
jnp
jbe
pop
loopne
dec
hlt
and
mov
enter
mov
pop
push
mov
jbe
sbb
xor
add
xor
mulb
cmpsl
icebp
mov
xchg
sbb
lock
sbb
xchg
push
lock
movsl
mov
stos
jb
stos
xlat
sub
pop
and
or
sub
insb
push
sarl
lock
aad
add
jb
jecxz
xlat
arpl
lock
jae
push
push
clc
jp
daa
lret
lret
inc
mov
aad
movsl
push
mov
mov
ds
lods
xchg
cmp
mov
mov
push
inc
leave
out
cmp
cmp
sub
int
fcoms
mov
psllq
rcll
jge
in
fadds
shlb
dec
sub
or
or
in
jg
sbb
dec
cmc
sbb
loope
andb
inc
inc
in
pop
fstpl
cs
shlb
mov
jae
movsl
rolb
loop
out
mov
ds
and
mov
addr16
sbb
outsl
or
inc
test
jbe
inc
inc
cwtl
push
enter
rorb
shl
loope
cmc
inc
aad
jg
pop
cmpsb
int
jg
mov
sbbl
rclb
pop
adc
jl
lea
pop
movb
adc
sub
push
pop
cltd
ret
jb
stos
in
lret
insb
lcall
test
fdivrs
fsubp
mov
popa
add
jle
mov
mov
add
xor
int3
shll
iret
xor
into
icebp
outsb
jne
mov
fwait
push
sub
testl
push
mov
sub
jnp
movl
add
out
xor
lcall
xchg
ret
push
std
loope
pop
js
inc
leave
jle
fisubs
lea
xchg
push
fildll
fmull
sbb
push
ret
loopne
mov
movsl
pop
stos
xor
cmp
es
subb
inc
pop
sbb
dec
ret
cli
mov
pop
iret
jp
aaa
mov
push
add
mov
sub
xchg
push
das
lea
stc
cmp
mov
adc
sub
mov
in
imul
mov
mov
inc
loop
sbb
jb
sub
cmp
mov
push
outsb
pop
stos
outsl
into
nop
outsb
scas
stos
cwtl
rolb
popf
mov
jb
add
into
movsl
out
adc
inc
jmp
pop
rorb
mov
gs
movsl
and
mov
js
sub
popa
dec
outsb
sub
nop
add
out
push
add
lea
fwait
sbb
mov
pop
insb
jb
cmp
xchg
cmpsl
int3
lods
jne
fadds
mov
dec
ja
sub
lods
mov
call
cmp
push
push
notb
add
pop
xchg
add
cli
lds
pop
jbe
xchg
sub
shll
pop
roll
xchg
cmp
xchg
les
pop
in
aas
push
pushf
jp
pop
and
subb
lds
or
jno
icebp
adc
addr16
dec
jmp
das
push
dec
es
cli
lret
daa
mov
mov
and
mov
push
add
ret
loope
mov
jmp
rcrl
mov
add
rcrb
rcrl
sbb
cltd
pop
pop
sarb
test
push
loope
xor
loop
or
xlat
call
push
jl
jae
mov
pushl
imul
shll
push
out
push
test
or
xchg
subl
xlat
inc
pop
shll
out
les
push
fsubrs
sbb
lea
fwait
dec
inc
jbe
lret
mov
inc
loop
push
mov
push
pushf
aas
in
out
lds
mov
rorl
sbbl
jle
sbb
push
or
xor
and
ds
xor
lock
push
mov
fs
insl
decb
xor
mov
cld
in
jg
push
mov
xor
push
mov
push
es
shlb
fcoms
jbe
dec
lods
and
loopne
pop
cltd
outsb
test
fwait
mov
inc
mov
in
adc
out
dec
hlt
pop
ss
pop
sbb
aaa
imul
xchg
arpl
cwtl
loope
xor
movsb
fcompl
andb
sbb
xchg
add
fiaddl
scas
mov
inc
adc
fbld
lret
jl
aad
xchg
dec
inc
cmpb
mov
push
addl
push
outsb
int3
jns
test
std
mov
decb
nop
inc
sbb
cmp
in
jae
sbb
std
test
push
stc
lds
std
mov
adc
and
xchg
xlat
xor
fdivl
mov
mov
pop
sbb
dec
call
jmp
push
test
ljmp
gs
inc
xlat
pop
shrb
test
add
movsl
xor
inc
loopne
das
jbe
jl,pt
or
lock
loopne
mov
std
and
push
mov
lock
fisttps
jnp
enter
movsb
mov
inc
lcall
nop
adc
shl
mov
lds
out
aaa
cltd
mov
jbe
icebp
sti
add
inc
ficoml
cmc
mov
lods
sub
les
sbb
inc
adc
cmpsb
mov
nop
imul
mov
cmc
mov
lods
or
cmp
sbb
mov
adc
cmp
pop
mov
scas
adc
dec
aad
xchg
decb
insb
lds
pop
adc
fnstenv
xchg
in
fiadds
mov
sub
dec
leave
call
shll
xor
push
daa
mov
in
mov
xor
in
lret
xor
and
fsubr
in
or
hlt
cmp
out
dec
push
xchg
and
add
jns
popa
jns
dec
fadd
push
call
je
add
inc
pop
sahf
int
sub
cmp
mov
mov
outsb
std
mov
shl
push
test
mov
xchg
ja
outsb
aaa
cli
pop
aas
fs
inc
inc
mov
mov
mov
fldenv
int3
orl
xor
popf
lea
pop
gs
repz
aam
jecxz
jbe
pop
xlat
lahf
icebp
rcrl
lock
sbb
iret
jecxz
cld
mov
or
loop
adc
lret
adc
fists
loope
push
lds
push
mov
push
arpl
push
jae
mov
test
or
out
clc
sahf
or
push
clc
mov
les
flds
xor
mov
cmp
jo
sub
lahf
xor
stc
mov
fwait
scas
pop
out
dec
dec
popa
js
ja
inc
push
jg
push
repnz
push
in
cmp
pop
clc
insl
fmulp
cmp
mov
insb
mov
xchg
pop
adc
lahf
cmp
es
cmp
scas
leave
enter
sub
out
xchg
jb
pop
add
add
fildll
std
mov
loop
jmp
mov
jbe
inc
imulb
movsb
mov
adc
loopne
cmp
test
sub
fcoms
popa
sub
push
aaa
mov
add
int3
inc
push
pop
test
cmp
ss
mov
add
ds
adc
stos
jge
xchg
push
mov
sub
or
shl
xchg
cmc
loopne
fcompl
mov
cmpsb
adc
and
in
hlt
out
pop
divl
push
mov
js
add
out
and
icebp
push
or
ss
adc
int3
push
and
outsb
jl
repz
hlt
add
sub
cli
add
lcall
mov
je
shl
cmp
jns
fimuls
xor
popf
pop
mov
les
lea
inc
lahf
lret
jo
sbb
jl
lahf
push
pop
or
ja
rclb
cmp
xor
clc
and
push
or
inc
lds
push
sbb
sbb
add
push
sbb
cld
enter
repz
cmp
pop
add
jmp
xlat
mov
inc
dec
es
pop
fiaddl
pop
arpl
mov
ret
movsb
decl
out
and
add
mov
movsl
adc
sbb
mov
push
into
lahf
push
lea
pop
stc
jl
mov
pop
xchg
inc
cmp
pop
inc
push
sbb
hlt
pop
dec
push
test
pop
sahf
mov
and
in
in
popa
jmp
aas
lea
cmpl
jp
mov
dec
in
andb
xchg
adc
into
jle
inc
dec
jns
icebp
dec
mov
js
sbb
in
test
out
inc
in
sbb
and
push
dec
or
add
aas
pusha
je
fnstsw
inc
mov
xor
xchg
mov
fisubrs
lret
jbe
mov
scas
mov
into
outsb
mov
cmc
cmpb
xlat
xchg
insb
sub
push
pop
shl
and
add
pop
ficomps
cmpsb
mov
fldz
outsl
call
jl
mov
and
mov
xchg
add
dec
mov
adc
mov
movsb
dec
leave
dec
adc
popa
fldt
xor
mov
movsl
test
cmp
push
mov
fwait
dec
mov
hlt
bound
fbstp
cmp
push
xor
adc
xchg
xchg
mov
jecxz
bound
mov
mov
jmp
in
repz
jge
outsl
lahf
cltd
jbe
lret
push
jge
sbbb
or
insb
movsb
jbe
jecxz
into
dec
lret
mov
divl
pop
int
aas
inc
imul
add
in
mov
icebp
mov
and
sbb
jae
insb
icebp
adc
cmc
add
fmull
push
popf
cld
leave
lret
jno
mov
pop
stc
mov
jmp
push
jl
or
addr16
xchg
sahf
xor
mov
negl
xchg
mov
enter
mov
jo
iret
sbb
add
inc
push
xchg
test
dec
xchg
inc
jno
insb
fs
lds
cmp
fmul
xchg
push
pop
push
or
push
shl
cmp
add
cmp
repnz
or
pop
pop
dec
popa
pop
test
repnz
iret
push
mov
adc
mov
icebp
push
inc
jmp
popl
sub
test
and
lods
xor
das
jne,pn
xchg
cmpsb
dec
and
pop
inc
ja
adc
pop
cmc
cli
inc
dec
aaa
sub
repnz
inc
pusha
repnz
ss
pop
and
adc
xchg
dec
aas
and
in
cwtl
leave
andb
mov
mov
fst
adc
out
xchg
movsb
xlat
mov
fisubl
in
nop
outsl
sub
inc
test
test
pop
sub
in
jg
in
mov
jae
in
jle
lret
fldl
fisubl
mov
iret
nop
mov
hlt
aam
imul
mov
mov
sahf
inc
outsl
pop
adc
push
cmpsl
mov
shl
inc
or
aam
pop
les
push
gs
cltd
pop
rcll
inc
mov
call
or
inc
dec
and
pop
mov
push
mov
test
jns
cmc
push
jo
mov
inc
ja
pusha
andl
xor
insb
xor
mov
arpl
cwtl
fisubrs
test
cwtl
and
pop
inc
aas
add
jbe
cli
jmp
inc
sub
jp
mov
cmc
fsubs
pop
adc
inc
frstor
fsubrl
add
mov
pop
mov
aad
mov
inc
inc
in
pop
xchg
iret
xor
mov
xor
mov
scas
imul
mov
sub
divb
and
cli
in
and
cmp
sti
mov
dec
cmp
add
lea
xor
pushf
push
addr16
cltd
push
mov
mov
mov
ret
xor
mov
inc
dec
mov
inc
jge
mov
orl
pop
iret
xor
out
dec
sub
shlb
into
and
push
hlt
cld
mov
xlat
inc
jbe
xor
xchg
ficoml
mov
cmp
dec
je
fdivrs
rorl
das
aaa
fdivr
rorl
int3
or
cmp
out
sub
gs
and
ds
rep
xchg
adc
orl
jb
aam
sub
stos
mov
inc
pushf
fcompl
push
pop
and
ret
loopne
mov
iret
cmp
imul
rol
xchg
hlt
sbb
jecxz
lret
push
jle
fildl
xchg
push
insl
pop
jne
outsb
loop
data16
cmpl
dec
cwtl
mov
and
lret
and
ret
adc
jnp
and
imul
sbb
or
jmp
decb
cld
ds
mov
idiv
movsb
sarb
mov
aas
das
mov
repnz
cmp
icebp
dec
push
cli
jg
xchg
int
inc
add
les
jno
add
mov
jl
fbstp
sub
in
test
xchg
fprem1
pop
cltd
aam
jae
lret
mov
std
int
pop
fistps
out
jo
cmp
les
xchg
or
into
data16
aam
into
push
js
mov
mov
adc
or
iret
sub
inc
xchg
pop
and
nop
leave
sub
addr16
mov
pop
call
mov
pop
jmp
pop
mov
push
mov
mov
push
fwait
leave
out
cmp
cmpsl
push
sbb
xor
jmp
pushf
les
mov
call
sbb
jecxz
push
int
pop
ss
jb
mov
imul
fmull
lock
out
out
imul
jo
jns
outsb
jmp
pushf
pop
outsb
cli
sbb
add
repnz
jle
mov
ljmp
popf
dec
scas
mov
xor
add
out
adc
cmp
push
je
and
inc
mov
adc
flds
cltd
addb
jae
xor
rorl
ret
lret
mov
into
and
in
shrb
adcl
fmuls
sub
ret
sub
and
ja
mov
xchg
jp
test
shl
add
scas
inc
ret
jno
sbb
out
mov
or
push
mov
sub
mov
icebp
insb
rcl
ljmp
jle
cld
xchg
js
into
addb
lret
pop
in
cmpl
gs
pop
or
dec
scas
pop
push
add
ret
call
in
out
xor
and
jnp
dec
inc
jne
mov
push
xabort
insl
icebp
cmp
fimull
lretw
loop
hlt
cmpsb
push
push
enter
mov
pop
mov
outsb
lea
xchg
out
xchg
je
in
jecxz
pop
inc
xchg
inc
sbbl
dec
imul
jo
push
ljmp
fiaddl
jl
mov
jns
sahf
lahf
jne
sbb
push
dec
add
push
das
lret
and
inc
dec
data16
and
les
and
pop
jne
bound
add
mov
xor
or
and
push
test
into
mov
xchg
adc
pop
pop
xchg
sti
jb
test
and
out
aaa
push
cmp
and
incl
repz
jmp
sbb
notl
jbe
jae
jae
data16
add
jp
jne
fcomp
into
dec
pop
cltd
popf
cmp
movsl
cli
cwtl
popf
sbb
testl
jl
outsl
fidivrs
in
push
sbb
mov
xchg
mov
inc
or
fbld
test
mov
adc
mov
lock
ja
mov
in
pop
subb
pop
sti
call
jge
pop
push
push
cmp
or
push
js
andl
jmp
aad
out
iret
pushf
sub
pop
inc
pop
or
adc
andb
ds
push
shrb
sbbl
sahf
sub
test
insb
shlb
jmp
in
repz
xchg
fdivrs
mov
stc
shll
pop
jne
movsl
ret
adc
adc
pop
les
ja
das
push
inc
loopne
ja
mov
xor
lcall
fisttpll
ret
add
int
lret
push
fisubrl
rorl
mov
inc
clc
dec
cmc
cmp
fldcw
int3
fwait
ljmp
pop
cmp
mov
sbb
mov
sub
sti
inc
push
mov
ds
int3
into
mov
movsl
lods
or
shll
in
rorl
or
fucomp
mov
or
sub
aam
mov
pop
jns
add
xchg
loop
and
pushf
mov
imul
jp
mov
adc
sarb
mov
insl
out
push
lods
and
push
push
inc
and
pop
call
push
push
test
out
adc
idivb
inc
sub
les
adc
pop
shlb
and
je
mov
aas
cmpsb
arpl
pop
add
into
sahf
dec
addb
stos
xchg
mov
pop
xchg
clc
mov
out
lds
jae
scas
add
iret
xor
mov
cmp
mov
dec
cmp
dec
es
fdivs
push
jmp
cs
mov
std
mov
add
into
push
mov
or
sbb
mov
cwtl
mov
sbb
xchg
jl
scas
fisubrl
fistpl
inc
pushf
push
movsb
cmp
sbb
xchg
in
inc
dec
stos
mov
iret
leave
mov
jae
mov
ret
js
cmp
xchg
sub
or
arpl
sub
sbb
mov
addb
sahf
mov
xor
cmpsl
leave
mov
fistpll
outsl
or
cltd
ret
xchg
dec
pop
pusha
enter
out
mov
addb
dec
jmp
movsl
xchg
and
pop
xchg
inc
rclb
lds
pop
in
or
mov
or
sbb
hlt
xor
fcoml
outsb
shl
xor
jg
dec
ficoml
add
mov
cmp
push
mov
mov
xlat
mov
out
in
ficoml
es
inc
dec
push
ja
jmp
dec
pop
xor
push
adc
imul
and
loopne
loop
jmp
outsl
dec
popl
jbe
lds
jmp
popa
adcb
movsb
mov
icebp
call
mov
push
add
fwait
lahf
dec
xlat
daa
xchg
push
mov
aad
dec
mov
jge
movsl
pop
xor
or
loope
into
dec
adc
push
pop
outsl
push
push
mov
mov
xor
jb
push
or
ret
movsl
jne
data16
sarb
and
push
mov
sahf
cld
inc
out
call
aad
mov
adc
inc
or
int3
push
mov
sbb
ljmp
add
and
mov
or
aaa
and
xchg
inc
jge
loopne
ja
pop
movsl
push
jne
push
pop
cmp
mov
aam
ljmp
add
mov
in
fimuls
lea
int3
mov
cmp
mov
sub
push
inc
push
pop
xchg
nop
in
fisubl
lods
cld
and
fs
ss
lret
inc
rcrb
and
sahf
ss
mov
scas
mov
xor
in
push
and
push
add
stos
insb
mov
pop
sbb
pushf
dec
jne
sub
outsb
leave
mov
les
addr16
mov
push
or
xor
adc
mov
dec
inc
lcall
jmp
mov
arpl
les
dec
stos
mov
add
inc
leave
ficomps
and
fldl
scas
js
fnstsw
xor
pop
inc
in
xchg
xchg
xor
push
rolb
and
cli
fxtract
adc
xor
test
fwait
push
jmp
mov
fs
xor
push
scas
ffree
sbb
js
mov
add
adcl
jecxz
pop
push
shlb
add
push
shll
loope
dec
push
ljmp
mov
jae
pushf
cli
test
addr16
sub
dec
and
mov
addl
in
cmpsl
stos
adc
mov
mov
and
mov
xorb
sti
outsl
pusha
xlat
pusha
ljmp
jbe
into
sub
aam
push
inc
jl
mov
leave
adc
xor
jbe
repnz
push
push
mov
mov
aam
pop
test
mov
cwtl
sbb
popa
ja
xchg
pushf
imul
frstor
mov
inc
repz
mov
in
xchg
dec
sarb
mov
dec
orl
mov
mov
das
xchg
sub
push
out
mov
fcomps
lods
and
aad
fcom
bound
aad
aas
lcall
pop
cmp
sahf
jne
cli
repz
js
out
pusha
or
movsb
icebp
arpl
faddl
and
push
aas
push
push
jns
ss
insb
leave
jne
jae
nop
add
mov
lock
outsb
pop
push
movsb
clc
adc
pop
and
jg
cltd
int3
push
dec
jl
fwait
clc
bound
jbe,pt
ret
push
xchg
mov
and
sbb
ds
cmp
mov
movsb
and
push
ds
fs
and
xchg
jno
push
and
push
inc
stos
aas
daa
aaa
sub
mov
sbb
cwtl
cwtl
and
mov
nop
sub
jns
xchg
mov
stos
pavgw
cmp
popf
pop
movsl
pop
mov
addr16
and
lcall
je
ja
sahf
pop
in
shlb
jl
xchg
jae
jne
pop
fwait
out
out
add
into
test
lea
lods
and
ret
jns
scas
dec
mov
mov
push
ja
add
xor
add
xor
hlt
les
ret
addr16
imul
insb
jnp
dec
shlb
scas
loop
insb
pushf
jmp
movsl
pop
jecxz
scas
loopne
inc
mov
add
jmp
mov
mov
fprem1
push
adc
ficompl
pop
adc
gs
movsb
jb
push
rolb
ror
shlb
jp
in
js
push
or
aas
dec
inc
jl
cmp
popl
movsl
sbb
push
and
push
sbb
sti
mov
mov
outsl
popf
ljmp
daa
nop
dec
sbb
or
inc
mov
mov
push
aas
aas
inc
fistps
addr16
popf
jge
mov
dec
or
imul
mov
popf
mov
jg
mov
cld
add
test
add
mov
shrb
sub
hlt
cmp
loop
shlb
xor
in
enter
xor
mov
pop
into
mov
loope
inc
mov
adc
aas
inc
popf
cmp
mov
xchg
and
sub
push
repnz
dec
cmc
add
pop
and
mov
mov
push
divb
push
pop
sub
stos
sbb
xchg
xchg
xlat
stos
movsb
sar
and
cmpsl
xor
outsl
rcr
fadds
jp
cwtl
outsl
pop
rclb
adc
xchg
xor
jnp
test
cmp
adc
mov
nop
repz
inc
test
jno
inc
and
pop
fcom
gs
and
cltd
fs
mov
dec
jnp
pop
outsb
mov
and
xor
push
andb
fwait
int
mov
daa
push
shlb
ret
pop
jecxz
js
xchg
pop
in
xor
mov
loopne
mov
lret
daa
stc
push
sub
push
dec
imulb
stos
cwtl
addb
and
test
out
fnstenv
add
stos
xchg
scas
jnp
add
stos
xor
ds
sbb
pop
dec
faddl
xor
mov
jle
xor
inc
shrl
jge
les
lahf
sub
sar
xchg
pop
and
xchg
pop
inc
pop
movsl
stos
ret
sbb
mov
pop
loopne
cmp
xchg
fs
adc
in
dec
jae,pn
sub
jp
movsb
cltd
cs
mov
add
cmpsb
bound
std
dec
xor
add
femms
xor
mov
jno
pop
sbb
mov
cli
aaa
pop
int
xchg
jbe
leave
loope
jmp
xchg
mov
js
sbb
mov
scas
sbb
fldenv
addb
push
and
aas
or
or
cmpsb
loopne
push
subl
rcrb
mov
push
fdivs
or
jmp
adc
sbb
or
out
jg
inc
add
jne
fcmovu
test
pop
cmp
out
adc
inc
mov
test
jp
popf
jo
jae
imul
jecxz
xchg
pushf
xor
clc
cmp
jae
pop
repz
pop
xor
cmp
push
sbb
push
xchg
sub
mov
and
es
mov
xor
jmp
lock
xor
std
sbb
xorb
mov
and
mov
jbe
sub
cwtl
mov
loop
add
xchg
sbb
adcb
popf
pushf
jmp
aad
xor
je
xchg
int
out
icebp
fsubl
mov
sub
js
pop
push
mov
mov
lods
ret
fsubl
push
scas
xor
and
inc
pop
popa
xchg
sarl
pop
jge
push
push
xchg
cmp
adc
in
or
inc
fldt
jno
fistpl
adc
jl
repz
push
inc
pop
lahf
push
daa
mov
mov
jbe
inc
je
jmp
std
out
jmp
pop
shll
test
or
out
or
jmp
loop
pop
loope
xor
loope
push
mov
and
push
out
xchg
lret
jp
mov
xchg
jmp
dec
cmpsl
xchg
lock
in
pop
pop
mov
rcrb
les
das
lret
mov
mov
test
xchg
sahf
ds
lahf
andb
xlat
push
push
mov
dec
sbb
icebp
fdiv
out
and
jmp
or
push
divl
enter
cmp
stc
adc
dec
or
in
pop
push
dec
in
lret
lods
divb
and
or
jno
gs
sbb
test
jb
and
test
jne
cmp
in
or
jae
aas
jge
inc
in
add
dec
ret
bound
jo
int
mov
push
inc
xchg
lret
out
clc
pop
cmp
rorb
add
mov
cltd
call
cmp
pop
roll
add
sahf
dec
into
push
fldenv
or
mov
jno
inc
shrl
stc
loop
or
cmc
dec
and
mov
jg
push
mov
sbb
cltd
out
mov
hlt
xlat
dec
sub
lods
add
mov
add
jns
out
sbb
fsubs
xchg
fisubrl
xchg
adc
jge
clc
add
repz
mov
cmp
aaa
adc
movsb
iret
push
xchg
fwait
xor
mov
in
adc
cld
inc
cmp
repz
enter
rclb
loop
cmc
mov
pop
iret
sub
sbb
adcl
dec
pop
mov
inc
lods
decl
push
icebp
shlb
shlb
xchg
pop
push
sbb
pushf
add
lea
movsl
scas
push
dec
sub
mov
lcall
daa
es
xor
push
cmpsl
jne
pop
test
xchg
adcl
out
dec
test
mov
lahf
fidivrs
xor
in
scas
dec
fstpt
push
repnz
cmp
in
test
int3
negb
sub
mov
les
add
xor
mov
bound
ficompl
adc
push
and
gs
inc
cli
push
loop
or
push
movsl
fs
sbb
pop
mov
lret
shr
mov
out
pushf
mov
jg
sbb
cltd
leave
lock
cmp
ja
xchg
mov
jle
data16
stos
adc
repnz
xchg
stc
mov
out
sub
and
or
inc
and
sub
nop
outsb
and
stos
adc
jecxz
mov
or
mov
cmp
push
rcl
stos
sub
pop
cmp
andl
sub
mov
lcall
or
inc
sti
xchg
mov
add
pop
mov
jg
imul
add
shr
lahf
pop
inc
add
inc
std
cmc
and
fiaddl
lock
fsubs
fistpll
push
or
int
jno
sub
mov
ss
ss
sbb
clc
mov
xchg
sbb
push
pop
xor
push
mov
sbb
dec
ljmp
test
pop
test
xchg
or
adc
add
orb
shrb
and
cmp
mov
ret
and
dec
sbb
in
push
dec
mov
pop
mov
mov
outsb
dec
lret
std
mov
inc
ret
sbbl
sti
insl
cmp
cwtl
adc
cmp
pusha
mov
or
rolb
iret
mov
xor
mov
jecxz
or
jp
mov
mov
loopne
jg
mov
fisubrl
mov
mov
mov
inc
pop
mov
adc
lret
das
in
adc
mov
push
les
repnz
addb
push
aam
push
mov
testb
sbb
shlb
adc
adc
cwtl
arpl
adc
in
add
insb
pushf
or
movsb
pop
jg
cmp
lahf
dec
cmp
aas
shl
int
cmc
pop
cmp
jns
sbb
xchg
jmp
loop
mov
pop
icebp
and
and
lds
cmp
pop
dec
jge
add
ja
xor
hlt
inc
or
ds
sub
mov
push
rclb
cli
call
fisubrl
dec
dec
lock
and
mov
mov
and
ljmp
imul
add
sub
mov
sbb
mov
pop
scas
cmp
cmp
add
call
or
pusha
iret
xchg
cltd
popa
inc
cli
dec
outsb
sbb
and
ljmp
add
rcrb
popa
fbld
decb
mov
mov
xor
mov
jmp
leave
xor
rolb
cmp
sub
rclb
daa
and
mov
jnp
pop
sbb
sti
pop
ss
sarl
jmp
scas
insl
imul
dec
mov
cmp
inc
mov
aas
test
push
push
jns
movsb
lea
ss
push
xor
add
fnstsw
or
cmpsb
xchg
cmp
insl
and
call
insb
and
test
mov
daa
mov
cmpsb
dec
adc
sbb
cmpl
add
aas
cmp
cmpsl
nop
inc
xchg
aam
nop
mov
mov
jp
xchg
cmp
pop
idivb
sub
stc
xchg
out
repz
mov
sub
mov
sbbl
xor
jne
mov
mov
and
les
sub
push
aam
cmp
dec
rol
push
pop
pop
popf
push
scas
frstor
mov
lcall
stc
shrb
xor
pusha
cli
mov
das
cmp
xchg
pop
loop
push
cmp
push
cltd
push
leave
int
mov
mov
cmp
lcall
andb
sbb
mov
add
ret
mov
aam
push
jmp
inc
sbb
xchg
mov
inc
push
jecxz
aaa
in
dec
mov
or
pop
int
repz
inc
lret
mov
and
mov
mov
mov
mov
sahf
ret
fisubs
sti
int
jmp
outsl
scas
cmpsl
or
push
mov
xchg
add
mov
cltd
dec
ret
out
lods
mov
or
test
dec
pop
filds
fs
arpl
cmp
sarb
dec
cltd
jmp
push
call
arpl
in
mov
jge
xchg
sbb
sbb
daa
imul
das
scas
in
pop
in
jne
dec
sub
loop
lahf
das
pop
jbe
mov
mov
push
outsl
jmp
push
inc
pop
adc
insl
rcl
mov
dec
lcall
insl
inc
mov
mov
cmp
adc
xchg
out
mov
jns
cmp
add
sub
lcall
insl
stos
push
mov
aam
dec
push
push
shl
std
jbe
ljmp
loope
les
gs
xor
and
stos
rol
orps
testb
repz
in
test
stos
push
pop
iret
sti
faddl
mov
pop
mov
dec
xchg
jp
cmc
mov
xchg
adc
sahf
popa
push
cmc
fnstenv
pop
int
fldcw
int3
rcrb
fstpt
jno
mov
sub
mov
icebp
xchg
test
mov
sbb
mov
xchg
lret
loopne
jge
incb
pop
in
cli
or
int3
or
push
or
popa
jno
xchg
scas
or
shlb
fidivrl
xchg
mov
repnz
mov
jg
jle
in
lods
xchg
lcall
sarb
ds
lods
or
cmpsl
mov
cmc
and
pop
popw
push
cmp
pop
stos
imul
rcrb
pop
lea
pop
lahf
sbb
cmc
cltd
xlat
push
jle
mov
ret
sahf
pop
out
jae
ljmp
xchg
out
mov
jnp
incl
lea
aad
lret
les
jge
lret
xchg
stos
mov
jns
push
sub
dec
lcall
add
and
inc
rorb
fadds
adc
lea
push
pop
jl
cmpsb
adc
icebp
movsb
dec
into
iret
adc
xor
adc
mov
xchg
ja
xchg
imul
mov
in
lock
and
sahf
push
movsl
or
cmp
add
cmp
add
rcrl
xchg
outsb
dec
inc
aam
out
mov
btr
xchg
daa
mov
cld
xchg
mov
rorb
sbb
mov
loope
inc
jbe
sbb
mov
dec
mov
pusha
add
das
scas
data16
lods
arpl
testl
enter
sub
dec
mov
sahf
stos
jo
fimull
mov
cmp
sti
xchg
dec
mov
xchg
mov
xchg
xchg
rcll
ret
in
add
xlat
mov
stc
xor
xchg
loop
jns
cmpsl
mov
jl
or
add
adc
shrb
fwait
sub
mov
push
rcll
push
jns
or
jbe
ss
cmova
stos
ss
out
dec
dec
sahf
mov
mov
push
cmp
add
jmp
pop
addr16
mov
bswap
and
pop
cmpsb
add
xor
mov
mov
push
lret
xchg
mov
xor
pushf
ljmp
fmuls
fildl
sbb
sti
pop
cmp
jae
cmp
jle
inc
imul
lahf
or
pusha
mov
call
add
add
push
pop
xor
stos
inc
test
iret
xor
dec
pop
adc
das
sbb
pop
std
out
pop
adc
push
or
inc
push
and
xchg
cmp
push
and
mov
addr16
stos
nop
rcrl
subb
pop
xchg
mov
xchg
test
add
mov
mov
push
lock
pop
fidivl
xchg
rcrb
lahf
xlat
iret
sbb
std
and
mov
jmp
sti
jecxz
dec
mov
push
lods
cmp
call
and
mov
ds
inc
xchg
jnp
mov
and
or
mov
pop
repz
fsubrs
popa
cmp
and
sbb
fiadds
mov
cmpl
repz
sub
adc
stos
lods
sti
xchg
cltd
mov
pop
cmp
xchg
add
or
push
dec
repnz
fstl
ret
pusha
cmp
rorb
mov
in
mov
sahf
sbb
dec
out
rol
lret
add
ja
jle
or
repnz
mov
cmp
push
push
cmpsb
push
bound
and
mov
imul
popa
push
popf
cmp
inc
add
and
mov
pop
adc
shll
call
cwtl
fnsave
xlat
aam
sub
rcll
sub
mov
cld
jg
xor
inc
rorl
cmpsb
imulb
pop
in
pushf
aas
and
dec
enter
cmpsl
mov
gs
sahf
push
lahf
mov
jne
mov
outsb
stos
sbb
fdiv
aaa
call
jbe
gs
push
and
xchg
mov
cmp
iret
inc
adc
pop
ret
int3
cld
xchg
push
test
in
pop
mov
hlt
mov
insb
daa
cmp
mov
pop
sub
nop
imul
insl
mov
outsb
movsw
shll
aad
jnp
xchg
bound
xor
test
cmpsb
pop
lret
cmc
mov
arpl
mov
cmpsb
push
mov
negl
lock
xchg
bound
add
adc
cltd
out
scas
add
sub
sbb
dec
mov
xorb
or
out
dec
adc
pop
inc
sub
or
dec
dec
dec
cltd
cmpsl
test
push
enter
jmp
jmp
xchg
sub
imul
jnp
std
jl
mov
xor
add
addr16
xchg
push
or
push
out
mov
adcb
in
or
xchg
pop
dec
and
nop
jne
sahf
xor
push
push
enter
inc
sti
xchg
adc
popa
shlb
out
imul
sbbl
scas
fcmovnb
sbb
push
cmp
outsl
jo
fiadds
icebp
xor
adc
mov
mov
jne
xor
repnz
sti
xchg
pop
add
fsubs
or
inc
fadds
iret
lock
and
xchg
in
inc
pop
movsb
rorb
mov
xchg
nop
mov
icebp
mull
movsl
or
in
outsl
fldl
dec
repnz
cld
inc
test
or
xor
adc
rcr
mov
pusha
mov
cmp
fisttpll
jp
sarl
mov
pop
dec
fwait
rcll
jne
repnz
xchg
xchg
sub
popa
cli
dec
mov
pop
and
and
pop
mov
out
dec
inc
test
sbbb
lea
cmp
inc
pop
mov
movsl
mov
out
bnd
mov
or
xor
mov
dec
jb
xor
fisubl
dec
sti
dec
or
inc
fisttpl
imull
dec
addr16
jne
loop
jnp
sub
push
mov
dec
sbb
jge
cltd
mov
adc
sbb
xchg
inc
push
sub
ja
fwait
ljmp
dec
inc
push
sub
add
stos
test
lcall
xchg
add
add
int
jne
xchg
js
cmpsl
xor
inc
pop
xchg
push
adc
hlt
xchg
fwait
add
fisttpll
cmp
push
add
cwtl
jbe
fwait
push
insl
or
mov
inc
jae
mov
sahf
and
fwait
add
xchg
push
mov
cmp
lcall
out
adc
xor
fwait
sbb
push
ss
popa
lods
jbe
dec
or
imull
cmpsl
mov
xchg
adc
aaa
or
pop
es
mov
adc
lds
nop
xchg
cs
adc
call
arpl
xchg
sub
adc
lret
out
jp
push
and
jmp
inc
jecxz
cwtl
dec
pop
xor
adc
sub
mov
xor
inc
push
popf
js
push
loop
out
ss
outsb
lcall
mov
xor
outsl
sub
pop
xchg
mov
lcall
aam
rol
dec
xchg
fwait
test
pop
cmp
out
sarl
bound
sub
cmpl
and
or
xchg
xor
mov
cmp
ja
lock
push
cs
inc
dec
xchg
mov
test
mov
jp
inc
pop
cmp
arpl
movsl
xor
sub
jecxz
cmp
sub
push
out
cmp
sbb
je
test
sub
std
jmp
mov
jbe
add
das
mov
cmp
lahf
jns
imul
mov
pop
je
movsl
jnp
rorl
pop
push
jno
pop
faddl
sbb
push
push
lods
mov
iret
cmpsb
push
cmp
fs
push
scas
int
das
fmull
mov
inc
dec
dec
sub
lcall
adcb
cmp
ret
out
and
in
cmp
jb
arpl
mov
es
in
inc
inc
pushf
pop
inc
test
push
movsl
inc
shlb
repnz
dec
aaa
sub
out
ret
or
and
push
int3
pushf
ljmp
cmp
jae
mov
adc
hlt
cmp
xchg
jmp
jae
into
mov
bound
and
push
movsl
lcall
cmp
fdivrs
repz
mov
adc
leave
push
push
pop
in
lods
call
xchg
mov
xchg
std
pop
cmpsb
mov
fdivrs
mov
xor
pop
lods
sbb
ljmp
xchg
pop
lret
icebp
cmp
mov
cmp
inc
dec
xor
leave
test
out
sbb
rolb
xlat
test
pop
inc
xor
jo
jecxz
adc
push
movsl
repz
pop
ret
fwait
enter
sub
xor
clc
and
in
les
iret
pop
je
lret
mov
arpl
aas
into
pop
mov
sahf
pop
imul
xor
rcr
fldenv
cmp
add
pop
shlb
in
ffreep
or
cmp
add
out
adc
cld
xor
mov
popf
sub
stos
ret
ljmp
in
out
loope
out
shl
adc
mov
out
dec
mov
mov
mov
xchg
movsb
cmpsl
lahf
lods
ret
lahf
sbb
mov
clc
aaa
ds
lds
mov
jns
in
les
arpl
push
ljmp
mov
cld
jne
adc
or
jle
dec
loope
or
mov
or
xchg
fnstcw
sub
lahf
mov
inc
cmc
inc
push
add
sub
inc
int
lods
mov
hlt
cmp
js
pop
xorl
xchg
dec
xorb
mov
push
cmc
addb
adc
idiv
sub
xor
jmp
pop
cmp
pop
xchg
inc
sarb
popl
push
fs
mov
cmp
sub
aam
dec
jg
push
push
mov
adc
test
mov
xchg
push
jbe
icebp
cmp
cmp
les
js
xchg
sarl
movsb
pop
lahf
shll
pop
repz
popf
or
popf
or
xor
mov
and
mov
and
fadds
and
adc
sub
loop
in
lcall
insb
xchg
adc
std
push
xchg
addr16
mov
in
xchg
inc
out
add
and
insl
out
lea
add
jae
pop
push
cmp
stos
les
aas
mov
insb
sbb
lret
sti
sub
cmc
bound
insb
fiadds
aad
pop
push
push
lods
sub
std
lds
pop
and
pop
out
aas
das
mov
jmp
popl
cld
jb
ljmp
cmc
std
test
xor
inc
mov
sahf
fcomps
sti
adc
sub
xchg
pop
aas
scas
mov
sbb
testb
adc
inc
adc
ror
xchg
loop
dec
das
xchg
loope
mov
shlb
ss
rcrl
jo
orl
mov
mov
cmc
push
jnp,pn
fcomps
jnp
out
mov
push
repz
in
aam
cmp
inc
pop
sub
sbb
dec
pop
and
aaa
jne
add
add
arpl
or
ds
mov
sub
pushf
test
add
fstl
mov
inc
aad
jl
or
pop
xchg
pop
in
mov
inc
adc
push
sbb
outsl
xor
sub
cmp
inc
jmp
insb
mov
xor
xor
add
fs
xchg
push
push
outsl
or
cmc
outsb
sbb
movzbl
and
sbb
mov
or
fiadds
sub
out
fsubrl
addr16
sub
adc
add
adc
std
outsb
inc
nop
fstl
fbstp
cmp
incl
lahf
push
sbb
in
sub
rclb
loopne
and
ret
pop
dec
fnstenv
or
faddp
xchg
lock
adc
and
pop
lret
stc
iret
aas
add
int
pop
xchg
out
cmpsl
jnp
adc
cmp
push
add
cmc
xor
add
test
dec
shll
sarl
sbbb
adc
out
mov
loop
jbe
pop
lods
adc
sbb
push
stc
and
jp
dec
inc
xlat
shrb
inc
sub
mov
repnz
mov
dec
pop
or
push
pop
jbe
push
mov
adc
clc
insl
ds
sub
mov
dec
test
pushf
test
and
popa
jle
lret
xchg
enter
fwait
repz
mov
pop
fiaddl
cld
dec
cmp
lahf
mov
xor
cmpsl
cmp
dec
jo
xchg
sub
push
sbb
push
int3
repnz
add
shrl
aaa
sahf
stos
movsl
cwtl
fs
mov
sti
lock
or
stos
jl
push
data16
ret
sub
push
decb
mov
out
shrl
xchg
or
roll
push
insl
jnp
test
mov
pop
adc
cltd
or
mov
sub
ffreep
inc
push
mov
pusha
loop
mov
dec
shrb
push
sbb
mov
push
insb
sti
xor
fidivl
rolb
daa
iret
cmpsb
add
cmc
sbb
mov
jecxz
jg
jle
je
mov
imul
mov
mov
sub
xchg
in
imul
test
flds
pop
add
aad
dec
sbb
mov
scas
mov
repz
xor
sbb
clc
pop
mov
int
add
stos
imul
add
push
push
sbb
mov
push
aaa
loope
sahf
inc
or
dec
std
push
stos
and
cld
outsl
pop
cmp
jmp
fcoml
add
cltd
push
popf
sarb
and
outsb
mov
jl
jg
inc
pop
pusha
fbld
push
repnz
repz
fdivrp
dec
or
cmpsl
rcrb
mov
or
cli
daa
jae
cmc
loopne
pop
cmp
rorb
cmp
mov
jno
loope
cld
aad
fnstsw
addb
scas
mov
inc
xor
add
shl
nop
lock
jmp
sub
push
cmp
int
hlt
mov
pop
lea
add
mov
mov
cmpsb
mov
imul
test
aad
cmp
inc
in
pop
outsb
mov
repnz
imul
ja
xlat
pop
mov
outsb
xchg
pop
fbstp
dec
scas
mov
sbb
cmp
std
jl
shl
jno
xchg
stos
adc
push
shl
or
jae
ja
lds
push
pop
bound
cmc
pushf
pop
push
call
bound
and
sbb
loopne
adc
mov
xlat
pusha
push
mov
mov
inc
outsl
inc
ds
out
inc
cld
xchg
shll
fistl
in
cmc
sahf
cli
fs
and
push
adc
cmpsl
int3
dec
pushf
clc
xchg
inc
loop
jp
push
or
or
out
fistpl
addr16
push
push
jge
xor
inc
jl
xchg
dec
cmpsl
push
pop
jmp
in
jnp
adc
dec
mov
pop
or
and
mov
dec
sub
xchg
and
imul
cmpl
loope
sti
mov
or
das
xor
testl
je
push
out
js
fsubs
xchg
sub
mov
and
out
cmp
inc
push
je
dec
pop
pop
xchg
xchg
xor
movsl
mov
enter
pop
lods
loopne
add
mov
jo
and
cmc
cwtl
cmpsl
es
jns
adc
imul
pop
outsb
orl
rclb
in
add
or
loope
fisttpll
dec
scas
mov
test
jns
mov
add
jae
divb
insl
sub
das
pop
test
mov
sub
xor
fisttps
in
sub
loope
jmp
dec
fildl
inc
in
roll
xor
mov
jle
mov
xchg
das
stc
in
lret
mov
jmp
xchg
fsubs
jecxz
lret
sbb
xchg
clc
ljmp
jge
fnstsw
rolb
subb
jecxz
movsb
clc
daa
fwait
rol
xlat
mov
outsb
daa
negl
cmc
dec
jb
les
scas
mov
and
stos
mov
cmp
sti
sub
push
movb
rcl
or
jmp
cmp
iret
lret
push
mov
sub
das
add
and
jbe
add
lds
push
nop
popa
mov
stos
out
lret
movsl
jae
pop
out
mov
and
clc
jl
test
dec
lcall
outsb
or
ja
mov
rolb
jbe
iret
sub
rcrl
adc
mov
pop
sbb
add
sub
test
mov
sbb
or
dec
xchg
add
pop
adc
push
xchg
xor
sub
call
adc
stos
mov
adc
mov
dec
xor
loope
jb
fmuls
std
sub
inc
mov
xor
lods
xlat
push
add
mov
xchg
sub
xchg
xor
push
imul
cmp
and
sar
rorb
cli
mov
xor
add
loope
jge
add
cmp
sahf
shrl
test
in
dec
andl
out
xchg
xchg
aad
and
jnp
js
dec
addr16
dec
xchg
notb
xorb
mov
adc
fidivrs
add
add
xchg
add
xchg
inc
inc
shlb
or
jo
sub
mov
call
jbe
jne
xlat
xchg
sub
rcrb
cmp
pop
incl
stos
push
mov
mov
add
in
cmp
ja
fdivs
inc
scas
fisubs
push
push
mov
mov
cmp
cmc
add
notl
mov
clc
mov
push
xchg
jo
bound
in
aaa
xchg
or
xor
push
xlat
movsb
jae
sbb
add
mov
and
lea
dec
fcoml
xchg
testb
mov
lahf
icebp
out
inc
pushl
rcl
stos
mov
shrb
imul
mov
xchg
lret
mov
sbb
cmp
xchg
mov
loope
or
call
fsubrs
stc
jae
ds
into
imul
iret
call
lea
rorb
movsl
xchg
pop
sbb
cmp
in
mov
mov
xchg
pop
jno
cmp
fnsave
cmp
pop
lods
rcrb
push
mov
fadds
testl
jmp
push
aas
dec
addr16
xchg
scas
and
xchg
sbb
cmp
sti
xchg
inc
dec
bound
and
addb
cmp
inc
jmp
imul
inc
push
fcomps
push
repz
testl
pusha
in
or
lock
xlat
cmp
dec
xchg
or
dec
mov
das
sub
push
push
arpl
sti
fisubs
in
out
mov
icebp
pop
lahf
add
xchg
mov
mov
and
xchg
mov
jmp
sub
mov
imul
dec
adc
cli
ret
pop
jmp
adc
pusha
cld
dec
push
ficoml
xchg
pusha
aaa
pop
sahf
shrl
mov
push
mov
loop
mov
sbb
ss
je
into
pop
shll
adc
cmp
jge
imul
shrb
in
sti
pop
popl
pop
int
sub
adc
lcall
insl
dec
lods
mov
mov
sar
push
add
idivb
push
nop
adc
roll
lods
data16
pop
adc
push
cmp
xchg
imul
mov
mov
jnp
js
pop
rcll
cwtl
jae
add
addr16
cmc
xchg
ljmp
imulb
push
jge
push
popa
lds
xor
lds
xchg
adc
enter
clc
inc
sbb
loope
sahf
cmpsb
dec
sub
lcall
loopne
and
ljmp
pop
add
push
sbb
pop
sti
cmpsl
sarl
sbb
jne
jmp
or
pop
pop
inc
mov
sahf
addr16
jo
mov
es
std
mov
jbe
imul
icebp
pop
push
into
mov
mull
or
fldenv
je
movsb
and
mov
xlat
popf
jle
repz
cmc
popa
aad
mov
jnp
dec
dec
nop
test
enter
ds
xchg
mov
cmp
loope
add
or
mov
cmp
rcrb
fldcw
adc
sub
dec
stos
leave
jne
mov
hlt
mov
dec
and
popa
fstpt
adcl
sub
gs
data16
add
lcall
mov
mov
cmp
es
fbld
shrb
dec
imul
and
lret
adc
subl
xlat
fnsave
push
add
add
jp
inc
das
out
add
sub
cmp
jmp
lret
repz
int
push
rol
inc
cld
jnp
dec
divl
testl
sbb
and
ret
inc
xchg
inc
ret
mov
int3
fistl
mov
and
test
sbbl
sub
inc
xlat
jbe
addr16
andl
es
lcall
add
lock
or
pop
cld
jmp
sub
xor
and
xlat
clc
dec
fimuls
and
adc
mov
ljmp
xor
out
popf
clc
add
xor
lods
add
cmp
xor
mov
aas
jnp,pn
add
inc
inc
int
cmp
in
mov
push
and
dec
icebp
fstps
gs
xchg
dec
and
movsb
dec
fmul
sbbb
int3
arpl
dec
jmp
pushf
jl
xor
adc
xlat
xchg
orb
mov
sbb
push
scas
push
sub
add
cmp
and
sub
sub
push
lcall
mov
cltd
xor
hlt
rcrb
xchg
sbb
insl
mov
dec
insl
xor
pushf
mov
lret
imul
push
stos
sbb
push
stos
out
jg
add
mov
imul
or
mov
jns
test
fs
adc
mov
loopne
mov
sub
fwait
jge
cwtl
pop
push
scas
jle
in
mov
jnp
leave
daa
aad
in
sbb
inc
lret
mov
xchg
dec
inc
mov
inc
and
into
test
enter
addl
cmp
fisubs
add
das
mov
add
xchg
cmp
and
shll
shlb
rol
xor
push
lahf
int
lds
fsubs
push
jns
in
dec
cs
stos
mov
lahf
mov
xor
call
shlb
inc
inc
jns
pop
test
pop
lds
js
test
adc
in
mov
fwait
notl
add
andb
mov
and
cmp
inc
or
inc
and
out
mov
addr16
mov
lds
xorb
sti
pop
mov
popf
sbb
ljmp
cmc
mov
ret
dec
cwtl
ljmp
sti
xor
stos
gs
int3
xchg
sub
and
outsl
adc
xchg
add
push
dec
add
jne
test
xor
out
imul
ret
lock
cwtl
pop
fs
in
loopne
cmp
aas
inc
or
jecxz
mov
pop
jne
sbb
fcomip
cmpsl
in
pop
pop
loope
and
cwtl
pop
pop
add
or
cwtl
xor
add
and
mov
es
lods
sbb
xchg
bound
cmp
test
xchg
mov
imul
ret
movl
inc
sub
jmp
and
stos
rcl
out
dec
add
maskmovq
imull
push
arpl
mov
jno
xchg
mulb
mov
leave
lock
rorl
xor
mov
mov
rcl
jl
pop
fiadds
mov
xor
data16
sti
add
dec
pop
ljmp
test
mov
mov
inc
mov
dec
mov
aad
test
sub
cmpsl
iret
mov
push
push
dec
mov
data16
jo
scas
add
out
popa
xchg
mov
mov
adc
rclb
dec
lret
into
mov
pop
jecxz
sub
adc
cld
fs
or
repnz
pop
js
outsl
in
mov
js
push
add
leave
out
int
push
call
cs
xor
lock
fnsave
test
push
sbb
xchg
movsl
dec
orl
pop
push
cld
les
cli
add
testb
ja
pop
inc
aam
mov
inc
mov
inc
jno
cwtl
js
cmpb
push
iret
lcall
inc
pop
sub
sbb
roll
pop
add
fdivrs
inc
jnp
mov
adc
xchg
pushf
mov
push
xor
jl
repz
call
push
test
inc
icebp
fnstsw
inc
mov
fsubp
aam
pop
xor
mov
int
cmpsl
cmp
cmp
ficompl
mov
lret
dec
lea
adc
and
aad
lea
jp
loop
mov
sub
push
scas
jb
lret
movsl
add
cmp
iret
cmp
sub
mov
int3
jmp
xchg
jl
fs
fs
aam
stos
xor
add
scas
cwtl
jb
mov
sbb
add
mov
mov
mov
jge
into
cli
xlat
jnp
stos
scas
pushf
shl
in
xchg
xchg
dec
dec
jne
mov
bound
mov
fstps
scas
and
mov
xchg
aam
mov
stc
cmp
int3
mov
inc
push
sub
mov
insb
push
stc
insb
cmpsb
repz
xor
adc
mov
cmp
adc
push
andl
js
adcb
lret
xor
mov
scas
dec
in
stc
dec
into
ret
ret
ss
int3
stos
mov
into
jp
jge
pop
dec
cmpsl
cwtl
bound
cmp
xchg
jbe
mov
imul
arpl
jg
jg
icebp
xor
or
push
jecxz
imul
add
jae
jnp
sub
mov
mov
andb
mov
jmp
mov
and
aas
out
mov
les
bnd
loop
mov
push
push
jb
hlt
push
xchg
aaa
lret
icebp
xlat
imul
cwtl
inc
cs
mov
call
int
orb
cmc
out
fldt
into
cmc
inc
or
shr
adc
loope
arpl
or
pop
cmp
push
adc
cmp
nop
adc
insb
rcrb
or
adc
ljmp
mov
cmp
sbbb
dec
sbb
sbb
fstpt
pop
adc
cltd
pop
mov
ss
cld
xchg
test
aas
loop
cmpsl
sbb
mov
in
inc
mov
in
pop
sti
cmp
sqrtps
jb
ffree
sub
xor
xorl
adc
cwtl
cmc
mov
adc
cmp
insb
cmp
das
dec
and
jmp
std
mov
mov
outsb
or
ret
insl
out
xor
cmpl
ss
js
adc
inc
lahf
test
mov
xchg
mov
cltd
fidivs
pop
pop
mov
adc
movsb
add
sub
mov
cmp
into
std
mov
push
aad
rcrl
test
jle
scas
push
mov
xchg
cmp
sub
mov
push
push
call
shrb
jnp
xchg
lds
dec
std
cmp
iret
test
arpl
add
mov
push
or
jae
mov
out
sub
cwtl
cmp
xor
xor
loopne
daa
pusha
pop
rolb
or
aam
subb
jb
cmp
bound
idivb
xor
lret
scas
test
sarl
push
decb
cld
iret
xchg
cmp
test
dec
jge
and
adc
xor
jmp
push
les
xor
mov
xorb
aam
outsl
mov
int3
aas
pop
sti
and
ret
push
in
arpl
mov
rcl
sub
out
inc
jnp
shlb
pop
mov
in
xlat
cmp
pop
mov
testb
sub
dec
daa
push
div
adc
or
and
xor
repnz
sbb
sti
cs
adc
xchg
daa
push
ret
xchg
lret
xchg
test
xor
sub
in
cmp
popl
out
sti
pop
int3
das
std
mov
nop
wbinvd
stc
jp
ja
sbb
or
subb
sub
fidivl
popa
inc
adc
push
cmp
sti
jp
inc
dec
repz
xlat
ja
sub
pop
dec
sub
cwtl
sbb
scas
imul
cld
icebp
fs
pushf
jge
xor
lock
movsl
push
jg
jmp
xor
jno
mov
pop
pop
dec
adc
add
icebp
hlt
inc
incb
pusha
clc
psubw
push
jns
rcrl
sub
sub
in
fwait
xor
xlat
popf
pop
aaa
pusha
xchg
imul
scas
xchg
push
xchg
arpl
je
jmp
sahf
and
jecxz
dec
jnp
xchg
ret
mov
fwait
xchg
shlb
and
jl
sbb
mov
xchg
pushf
outsl
lret
pop
xchg
out
enter
hlt
insb
lods
xor
in
and
rclb
inc
and
pop
test
cmp
add
nop
loopne
jl
mov
mov
ds
movsb
insb
mov
in
pop
popf
test
cwtl
xchg
stos
movsb
fistps
push
ljmp
icebp
mov
shrb
ljmp
pop
shlb
mov
sbb
ljmp
inc
outsl
repz
xchg
xchg
in
xchg
fsubrl
push
sub
mov
mov
dec
dec
ss
jne
pop
or
jb
lcall
test
jne
xor
pop
and
jbe
lds
cltd
test
scas
jmp
pop
sub
cmpl
push
loopne
movsl
mov
lods
cltd
inc
inc
in
sbb
dec
fdivr
mov
out
xchg
push
xchg
push
xchg
sbb
jp
sub
cwtl
fisubrs
and
mov
test
std
outsl
mov
jae
mov
mov
dec
sahf
mov
mov
outsl
cld
mov
ret
mov
js
mov
or
daa
jp
imul
leave
xchg
movsb
mov
iret
push
mov
jge
xchg
jo
inc
xchg
imul
sub
out
mov
ret
and
and
push
xor
jg
and
push
cwtl
dec
jp
mov
in
pop
loop
js
imul
fisttps
clc
dec
fs
jmp
scas
ja
sub
loop
shll
or
jnp
inc
cmp
add
fnstenv
or
xchg
jns
mov
outsl
adc
push
cmp
cmp
push
jns
repnz
imul
sub
inc
pushf
adc
imul
adc
cmp
mov
je
inc
bound
icebp
fistl
test
xor
sti
sbb
push
or
add
arpl
adc
out
scas
mov
movd
and
cmp
sub
xor
push
sub
fidivrl
scas
scas
adc
mov
cltd
inc
ficoml
add
inc
add
jae
scas
jecxz
ja
jl
or
mov
or
and
jno
mov
fstl
iret
mov
in
fidivrs
cmp
hlt
mov
push
inc
mov
xchg
pop
xchg
add
cwtl
or
rcl
xchg
xor
jge
insb
mov
mov
pop
rcr
pop
sbb
or
jl
push
dec
pop
mov
cmp
pop
push
aas
mov
std
cwtl
sbb
and
sbb
imul
lahf
and
jno
and
stos
fs
push
lcall
inc
push
jge
mov
std
ret
hlt
cmp
rcll
ds
lods
pop
xor
sbb
add
outsl
repnz
mov
xchg
cmpb
pop
adc
lods
pusha
xor
fiaddl
dec
add
lret
test
jecxz
mov
ret
add
mov
ja
adc
movsb
mov
roll
push
test
int3
cmp
aaa
sub
mov
add
test
jnp
inc
popa
mov
frstor
xchg
into
lret
mov
xchg
dec
clc
mov
shl
push
fnstcw
push
shr
clc
andl
sub
imul
cmp
sahf
mov
jmp
movsl
es
cli
cs
nop
cmp
addr16
cmpsl
into
mov
es
cmc
pop
or
popa
lcall
scas
xor
push
inc
sub
call
gs
in
jle
pop
fnstsw
repz
lds
mov
sub
add
mov
push
and
push
sub
inc
test
push
push
cmp
movsb
adc
add
and
jecxz
pop
clc
cmc
cmp
sub
adc
xchg
imul
pusha
mov
cwtl
adc
or
inc
mov
add
int
loopne
pop
xchg
mov
lcall
aam
dec
arpl
push
mov
orb
daa
arpl
movsl
clc
or
loopne
rolb
jae
xchg
roll
and
cmp
lods
and
out
mov
push
mov
sarl
xor
mov
xchg
mov
add
imul
and
or
xchg
test
jno
sub
lret
mov
je
repnz
xor
mov
jg
xchg
icebp
cld
imul
xchg
outsl
nop
push
pop
fcom
jmp
adc
mov
out
out
mov
fdivrl
dec
sub
in
jne
clc
aaa
sahf
sbb
imulb
or
stc
pop
sbb
test
cmp
aam
jge
xor
add
stos
jg
dec
xchg
lock
cmc
int3
mov
hlt
adc
stos
aam
xchg
ret
je
jo
xchg
ss
push
popf
pop
dec
movb
lods
push
mov
pop
hlt
cld
and
push
sub
mov
fwait
sti
sbb
xor
sub
and
popa
sbb
sub
lock
xchg
jle
mov
push
loope
jns
pop
lock
mov
push
xchg
push
jg
mov
int
iret
cld
jb
push
lret
jge
jp
mov
aaa
push
ss
inc
dec
in
inc
add
fisubl
ret
push
outsb
and
scas
adc
shlb
out
mov
cltd
dec
pop
iret
dec
fbstp
mov
add
or
fnstsw
out
punpcklbw
js
roll
dec
cmpsb
mov
arpl
out
ljmp
mov
xchg
test
cmp
insl
sti
pusha
dec
adc
iret
ret
or
in
pop
mov
mov
dec
add
xor
dec
xchg
push
sbb
leave
test
xor
add
loope
mov
inc
cmp
aas
aad
stos
xor
andl
mov
xchg
adc
pusha
xor
jno
mov
push
mov
and
sbb
je
and
and
loopne
cld
ljmp
jecxz
sub
notb
jno
into
cmp
sbb
jmp
sbb
xchg
push
mov
movsb
xchg
pop
mov
int
daa
sbb
cmp
out
add
sub
test
out
sbb
lret
dec
cld
fwait
ss
das
mov
and
movsl
or
imul
dec
fisttpll
dec
push
push
inc
sub
int
mov
xor
adc
repz
pop
mov
push
loop
testl
outsb
xchg
inc
pusha
xchg
dec
arpl
sbb
dec
mov
cmpsl
mov
xor
sbb
testl
subb
and
into
push
inc
movsl
mov
push
ret
bound
mov
clc
cmp
mov
insb
out
jle
leave
cmp
xchg
scas
inc
jbe
dec
mov
push
ret
xchg
or
push
ficoml
es
xchg
testb
push
int3
inc
pop
push
scas
mov
xorl
adc
lret
inc
add
ja
fucom
ret
sti
push
or
js
jns
imul
adc
xor
cmp
sbb
xchg
and
dec
jmp
out
test
icebp
outsb
mov
inc
mov
mov
xor
lods
pop
xor
inc
lea
adc
test
lcall
mov
out
cmc
rol
and
ret
arpl
sub
insb
fst
adc
or
ficoms
jmp
pushf
mov
dec
and
add
lods
jg
and
lcall
jbe
add
sbb
push
push
es
mov
mov
jmp
aaa
mov
xor
fcomps
jbe
std
dec
stos
pop
sub
and
pop
adc
or
in
or
mov
pop
and
ljmp
or
sbbl
sub
hlt
ret
push
dec
jge
dec
mov
add
dec
or
xchg
xor
ja
je
mov
cs
and
ljmp
in
out
mov
std
dec
les
xchg
jae
ja
les
push
ja
repz
sub
mov
mov
cmpsl
fmull
jp
add
pop
adc
pop
into
shlb
cmp
mov
jbe
aad
pop
sti
xlat
jne
lret
int
jl
xchg
mov
cmp
icebp
insl
inc
jecxz
das
and
sbb
cmp
sar
enter
add
iret
scas
lods
adc
mov
lcall
loope
fistpll
push
jecxz
in
pop
and
jp
pop
call
outsb
pusha
mov
leave
mov
mov
outsl
in
mov
js
test
xchg
incl
pop
insb
divl
scas
movsl
mov
hlt
hlt
inc
xchg
fistl
dec
jg
push
lret
jmp
adc
inc
mov
mov
sub
inc
sarl
sub
cld
int
adc
cmp
and
lret
xor
mov
xchg
fwait
repnz
mov
out
pushf
fimuls
leave
sub
sbbb
cmp
sub
cltd
jecxz
ds
add
int3
jge
adc
adc
ljmp
sub
mov
cmc
jno
cmp
add
bound
iret
leave
divl
cmp
fisubrl
fildll
std
nop
lock
xchg
sub
aad
push
loope
fwait
imul
sbb
pushf
ss
mov
jb
fnstsw
adc
out
iret
add
and
jo
imul
jge
lods
or
push
fstpl
subl
aad
dec
mov
test
ljmp
fs
cmc
mov
sub
lret
mov
push
out
push
in
xor
es
lret
subl
ficomps
addb
and
es
jbe
std
and
fucomi
cmp
mov
pop
or
inc
mov
xchg
mulb
add
aas
or
sar
fildll
pop
mov
mov
mov
js
rorb
dec
aas
test
daa
pop
xchg
imul
dec
jae
mull
pusha
jmp
push
xchg
push
lret
xchg
sub
repz
rorb
pop
inc
mov
fisubrs
mov
jge
loopne
rcll
into
in
loopne
mov
xchg
popa
testl
jae
notb
fisubl
in
loopne
jecxz
xorb
scas
adc
dec
jmp
sub
into
jl
sub
cli
ds
push
imull
lret
add
jle
adc
ja
repnz
ljmp
or
fisttps
inc
scas
fwait
pop
or
push
mov
cmp
pusha
push
push
in
jnp
fcoml
cmpb
call
xchg
repz
jnp
rclb
pop
adc
cltd
and
or
add
aad
sub
notl
mov
add
inc
bound
sahf
xor
cmpsb
hlt
call
adc
pop
mov
mov
or
cmc
dec
pop
bound
mov
imul
scas
mov
xor
jmp
ds
cmp
inc
push
cmpsb
int
js
mov
mov
loopne
repnz
or
or
mov
mov
jg
xchg
lea
ljmp
push
adc
cmpsb
je
cmp
jns
xor
add
jge
mov
iret
jnp
dec
lret
cmp
dec
dec
mov
in
ljmp
mov
scas
hlt
mov
push
invd
outsb
jbe
pop
jbe
mov
jge
negb
add
jecxz
loope
js
nop
adc
and
lods
mov
xchg
sbb
adc
jno
aaa
shlb
xor
add
mov
add
outsb
mov
mov
or
and
add
pushf
push
dec
push
subb
ss
outsb
push
lock
pop
push
push
lock
push
data16
lock
and
mov
xor
stos
das
fucomp
jno
dec
or
das
in
xchg
xchg
scas
sub
mov
fnstcw
and
call
sahf
sbb
aam
mov
pop
mov
add
loope
test
cltd
fsub
add
inc
aaa
jp
jne
mov
mov
and
in
cmp
cwtl
jge
add
jae
sub
ss
aam
test
pop
subl
jecxz
into
aad
mov
or
xchg
movb
in
mov
and
push
sbb
add
orb
out
jbe
push
and
cmp
push
lahf
sub
inc
adc
shll
ror
mov
push
pushf
lcall
mov
ja
and
mov
dec
dec
movsb
and
call
sub
sub
imul
testb
dec
arpl
push
dec
pop
loope
xchg
cmc
xor
push
cmc
adc
cmp
movsb
ret
inc
inc
mov
popl
stos
les
sub
stos
mov
int
or
ror
xor
cmc
jae
dec
dec
mov
in
pop
fdivrl
push
out
jmp
sub
adc
pop
fldl
jae
repz
movsb
mov
sub
adc
xchg
sbb
jge
lea
adc
inc
iret
into
xor
push
leave
mov
insw
xchg
jne
mov
arpl
lret
scas
mov
sub
jb
and
jbe
xchg
sbb
dec
xchg
test
popa
jnp
cmp
adc
mov
shll
xchg
or
dec
repnz
push
mov
pop
add
lock
stos
mov
pop
jb
pop
push
shlb
je
repz
pop
int
lahf
and
lcall
sub
push
stc
je
rcll
sub
out
xchg
sarl
movsl
dec
ljmp
mov
fmuls
cmp
fnsave
jp
and
adc
sbb
insb
sbbb
jns
movsl
xor
jmp
loope
lods
std
das
sti
cld
xchg
jno
movsl
cs
cmpsb
or
mov
repnz
out
xchg
mov
hlt
jo
dec
mov
jge
aad
mov
mov
insl
pop
popf
fcmovne
popf
jge
out
inc
pusha
or
mov
sbbb
out
pop
cmp
mov
inc
mov
std
iret
cwtl
aaa
mov
cmp
inc
push
aaa
popf
outsb
into
dec
ds
fdivr
bound
pop
dec
mov
int3
add
scas
mov
es
mov
ja
inc
dec
inc
cmp
push
fwait
rclb
ljmp
xor
sub
mov
add
push
fwait
dec
jp
mov
sub
test
or
cmp
stc
inc
fists
jge
test
mov
outsl
loope
mov
xlat
outsb
rcl
jmp
fistl
cli
cmpl
jno
jp
stos
sbb
dec
data16
mov
push
stos
aad
xor
sub
shlb
pop
pop
push
roll
inc
push
push
aad
add
cld
out
cmp
mov
xchg
lea
sar
movsl
lock
xchg
iret
adc
cmpsl
lods
lahf
xor
adc
add
push
sahf
cmp
jl
jge
jns
xlat
push
jne
test
push
sbb
dec
sbb
mov
push
sbbb
gs
mov
push
pop
add
push
or
cmc
loopne
push
inc
dec
in
or
jo
jp
dec
inc
out
jnp
jne
lcall
in
add
cmpsl
mov
sub
xchg
xchg
mov
lea
jb
push
pusha
pop
das
sbb
push
or
mov
pop
mov
cmc
or
movsb
dec
loope
jle
jo
adc
insl
xor
int
mov
or
add
popw
nop
mov
or
js
pop
jecxz
popf
notl
mov
inc
jno
enter
xchg
cmp
std
ret
out
ficomps
cmp
cmp
testl
das
xchg
and
mov
sub
add
push
cmpsb
dec
arpl
xchg
xor
cs
mov
pop
fstl
les
nop
or
adc
into
aaa
fwait
inc
imul
jmp
add
movsl
and
daa
nop
and
inc
inc
pop
add
lock
stos
jle
movsb
cmpb
add
and
pop
inc
daa
push
lret
xor
enter
sahf
loopne
hlt
int3
xchg
les
mov
lahf
stos
mov
mov
fwait
sahf
xchg
psrad
cs
mov
push
sub
mov
pushf
sbb
sbb
xor
jo
pushl
sbb
mov
jb
lock
cli
pop
fists
popf
outsl
ret
pop
pop
fldenv
out
das
or
stc
data16
jmp
xchg
aad
lret
cmp
and
hlt
out
jecxz
inc
test
shll
adc
add
mov
inc
shlb
outsl
imul
icebp
sti
push
jg
idivb
lods
sti
jg
repz
jl
cmp
stos
mov
sbb
cmp
or
adc
icebp
and
jb
or
dec
lcall
or
mov
add
lcall
movsl
iret
shll
aaa
xor
pop
pop
shl
outsl
ljmp
push
imul
xchg
stos
lcall
inc
stos
test
and
loope
adc
call
dec
vpsubb
popf
jae
push
fwait
aad
daa
sarb
icebp
fnstcw
sub
push
loop
add
subl
fmuls
insl
fwait
leave
pop
inc
aaa
fdivs
sub
out
in
mov
xlat
xchg
das
sbb
inc
adc
mov
mov
adc
int
ds
mov
mov
leave
shlb
int3
in
movsl
xchg
bound
popf
js
out
push
cltd
std
or
movsb
mov
fidivrl
dec
pop
shll
dec
mov
xchg
add
imul
scas
out
lods
cwtl
std
sub
cltd
arpl
jo
pop
xchg
and
pop
push
mov
xor
dec
jge
add
cmp
lcall
add
xor
imul
cmpsb
icebp
int
insl
dec
pop
gs
pop
mov
inc
scas
repz
das
cvtps2pd
push
sub
ret
sub
pop
ds
fnstsw
pop
cmp
imul
ficompl
pushl
push
sbb
push
cmpsb
in
mov
xchg
notb
adc
icebp
jl
loopne
inc
pop
movsb
sub
and
arpl
jnp
bound
cmp
hlt
jmp
nop
cmp
stos
data16
test
repnz
pop
scas
outsb
lods
push
mov
out
jae
out
int
aas
test
jne,pn
ss
lock
lcall
mov
push
std
cmp
sub
xchg
into
ljmp
movsl
and
call
push
mov
test
push
mov
dec
inc
fbld
xchg
icebp
add
dec
aam
xlat
jecxz
hlt
ja
iret
inc
fdivrl
orb
dec
gs
cmc
jp
xchg
loopne
inc
clc
push
cmp
icebp
nop
mov
or
pushf
mov
aas
and
inc
fistps
push
mov
pop
stos
jb
mov
dec
popl
and
sbb
mov
fldl
popa
sbbl
inc
ds
test
lret
adc
insl
mov
sbbb
and
cmp
xchg
ret
xor
iret
addr16
outsb
outsb
ret
cltd
icebp
insb
lds
sub
les
out
jb
push
mov
cmpsb
les
jne
pop
stc
test
adc
xchg
pop
icebp
push
jmp
adc
push
rcr
inc
arpl
outsl
lds
mov
add
fisubs
test
cmp
jmp
out
mov
jg
lcall
insb
push
cld
pop
jae
sbb
add
or
adc
arpl
sub
mov
repnz
lods
test
inc
call
inc
mov
dec
mov
mov
xchg
test
out
cmp
cmp
xchg
push
xchg
xor
loop
or
test
popa
mov
pusha
xor
inc
xchg
push
cmp
insl
dec
dec
jmp
repnz
decl
into
mov
sbb
outsb
fs
push
fstl
aam
leave
outsl
orl
xor
rcll
push
pop
fnsave
sub
fsubs
mov
inc
daa
rorb
xchg
sahf
cli
xor
repnz
outsb
test
jmp
jb
hlt
pop
dec
or
test
negl
xor
jns
dec
bound
jnp
sbb
lcall
fsubrl
enter
repnz
out
dec
lea
dec
cld
add
pop
push
std
insb
jl
jnp
mov
mov
pop
push
jns
add
pusha
cmp
fs
push
arpl
add
mov
fldpi
push
lea
nop
les
or
outsb
sub
add
fwait
xchg
xchg
xor
pushf
inc
adc
pop
lock
push
mov
jae
imul
scas
xorl
pop
dec
add
mov
xor
sarl
stos
movsl
adc
gs
jns
jge
push
int3
sbb
jbe
xlat
mov
add
stos
into
aam
out
lock
sub
rcrb
sbb
mov
jbe
int3
bound
pop
push
jns
mov
sbb
decb
mov
mov
push
xchg
pop
adc
jle
ja
mov
adc
xchg
aam
sbbl
push
push
xor
cld
dec
aas
icebp
jecxz
jecxz
add
dec
xchg
adc
or
sti
cld
je
or
ljmp
icebp
sarl
fs
pop
adc
je
ja
jo
lods
xchg
cmp
mov
pop
loop
and
and
subl
add
popa
filds
mov
pop
int
mov
pop
jnp
inc
imul
movsb
ja
lds
xchg
int3
pop
lret
cmp
cmp
mov
jnp
mov
test
ds
lcall
shrl
aam
mov
push
xchg
cld
cmp
jb
add
ss
call
adc
pop
outsb
cmc
cmc
mov
pop
ss
test
and
test
sbb
packuswb
xchg
sbb
pop
dec
add
pop
adc
filds
je
cmc
in
sti
xchg
lahf
xor
push
out
mov
push
divl
out
stos
xchg
and
push
sar
xchg
add
sbb
sbb
inc
mov
mov
dec
repnz
das
popa
repnz
insb
jle
divb
mov
jno
and
add
nop
inc
iret
pusha
mov
popf
in
ljmp
rorl
lret
mov
push
int3
loop
lods
adcb
mov
push
cltd
fidivrs
insl
sarb
pop
inc
xchg
or
cmp
mov
mov
or
lods
inc
xlat
pop
outsl
and
sti
xor
adc
xchg
mov
test
mov
sbb
stos
std
and
jne
xor
loopne
mov
inc
rolb
mov
ret
lcall
cmp
ja
push
jmp
dec
dec
mov
std
and
loop
mov
and
adc
inc
jo
mov
dec
mov
fbstp
dec
mov
loop
jg
bound
enter
cmpsl
imul
mov
call
inc
mov
add
dec
cmpsb
dec
or
jb
mov
mov
jge
in
mov
sbb
mov
ja
sub
pop
mov
xor
sti
xchg
cmp
push
sub
dec
cmc
cltd
jp
fwait
iret
add
sub
add
gs
repnz
xor
jle
xor
push
mov
dec
popa
shlb
mov
jle
xchg
aas
mov
sub
push
mov
int
jle
dec
cmp
loop
push
stos
inc
dec
enter
arpl
ss
fisttpll
xor
scas
jbe
in
lods
pop
jmp
outsl
clc
out
shl
push
int3
sbbl
in
pop
xor
loop
insl
repnz
sbb
jp
pusha
mov
and
xchg
sarl
daa
mov
pop
out
cmp
xchg
xlat
packssdw
jnp
mov
loop
and
dec
je
xor
mov
and
out
imul
sbb
outsl
loop
fsub
inc
push
push
dec
lods
fs
insb
mov
dec
xor
movsl
cli
cmc
jmp
push
or
jae
test
pop
aad
fwait
and
xorb
cmpsb
mov
xor
jno
adcl
addl
mov
dec
pop
in
cmp
inc
aas
mov
or
add
lods
adc
repz
sbb
out
mov
push
sbb
das
dec
repz
mov
testl
popa
push
imul
lcall
pop
mov
fsubrs
mov
les
into
repnz
and
or
pop
mov
pop
dec
add
lods
in
mov
push
dec
ret
into
inc
jns
sbb
int3
clc
pop
test
lods
jmp
mov
push
testl
mov
jg
das
lock
shlb
jp
shll
les
mov
pop
out
mov
aaa
sub
jne
ds
push
arpl
addr16
push
adc
cmp
mov
push
add
mulb
push
rcll
pop
mov
mov
sbb
or
add
stos
leave
push
pusha
iret
cld
jns
sahf
jl
dec
push
xchg
add
cmpb
mov
call
xchg
enter
lods
ret
lea
popa
jmp
pop
jg
dec
jns
dec
in
testb
sub
outsb
mov
or
mov
lds
mov
stos
pop
and
stos
in
movsb
mov
test
xor
ds
adc
cmp
xchg
cli
shll
xchg
push
add
clc
faddl
cmpsb
xor
mov
jae
lahf
aad
bnd
les
shrb
daa
lock
mov
jno
jae
xor
cmp
mov
jbe
or
data16
sbb
xor
ret
jb
movsb
cmc
xchg
jmp
les
fbstp
das
push
fidivrl
lods
or
mov
dec
cmp
mov
outsl
mov
xorb
push
sub
xchg
dec
fstps
dec
cmp
loope
dec
or
mov
cld
clc
adc
lea
pop
std
loop
jbe
es
jecxz
jae
sub
lea
rcrl
push
lea
fmuls
jge
ret
sahf
aaa
add
shr
rorl
add
xchg
pop
xchg
jmp
loopne
ret
cmp
mov
mov
imul
xchg
mov
mov
adc
xlat
mov
add
xchg
prefetchwt1
inc
cmp
cli
dec
lret
sbb
lock
in
scas
ja
inc
inc
jle
imul
in
loope
mov
cmpsl
mov
lahf
gs
pop
pop
add
mov
lret
xor
cwtl
mov
mov
adc
sbb
mov
sub
stc
pop
cwtl
mov
loope
ljmp
pop
testb
daa
ja
stos
decl
xor
shll
cmp
outsl
push
fucomi
dec
lock
sub
test
nop
fildl
ret
movsl
subb
aaa
xor
adc
insb
scas
xor
sbb
lahf
mov
inc
cmp
adc
pop
fistpll
add
dec
mov
ret
add
sbb
dec
roll
out
loop
jmp
mov
popa
js
fs
xchg
and
mov
shr
mov
and
mov
enter
cmp
test
lods
repnz
std
adc
jno
mov
jmp
xor
dec
dec
call
push
int3
testl
outsl
jns
stc
clc
dec
orb
cmpsl
or
or
mov
ljmp
mov
cmp
int3
fwait
in
pop
adc
cmc
cmp
pop
jns
cld
mov
loopne
cvtdq2ps
and
push
jmp
and
popa
popl
cmp
and
inc
or
cmp
je
inc
in
xor
hlt
inc
not
dec
xchg
jae
imul
lahf
addr16
sub
imul
es
testl
push
xor
mov
cmp
inc
pop
roll
xchg
lock
std
stc
jp
cmp
call
in
outsb
imul
sbb
fisttps
xchg
repz
xchg
cmpsl
xchg
int3
or
cmc
bound
mov
fcomps
sub
ds
inc
xor
cmp
push
sbb
sbbb
cmpsb
lahf
xlat
xor
push
push
xor
sbb
int
mov
int3
movsl
js
xor
ja
pop
push
and
xor
fadd
or
add
imul
mov
xchg
mov
out
cmp
aad
pop
mov
pop
cmpb
call
int3
stos
sub
push
sub
ds
cmp
push
pop
mov
mov
and
xchg
inc
xchg
lcall
aam
fsubrl
or
int3
mov
jb
sub
fdivp
cwtl
divl
pop
mov
cmp
fisttps
mov
lret
repnz
out
bound
or
adc
mov
repnz
aam
mov
sbbl
les
ror
leave
sub
and
cmp
imul
call
pusha
push
adc
mov
out
test
sub
jb
mov
or
xor
leave
mov
rorl
lcall
inc
sub
in
cmp
test
test
les
or
faddl
mov
inc
fwait
xchg
lahf
fcomps
sti
add
insl
mov
mov
lahf
jo
mov
and
fsub
subl
sbb
cmp
xor
rcrl
sub
aam
mov
in
test
inc
jg
int
and
subl
das
popa
and
bnd
pushf
jecxz
jb
arpl
ja
shll
int3
add
inc
xchg
cmpsb
lods
adc
pop
inc
xchg
stos
or
punpckhbw
lds
stos
push
mov
call
mov
push
and
cmp
imul
pop
cmpsl
xor
cmp
out
shrb
mov
arpl
jnp
hlt
adc
dec
scas
xchg
push
pop
idivl
mov
lcall
jge
pop
push
xchg
aam
fcmovne
sub
rcr
pop
add
hlt
push
inc
sub
mov
cmp
add
or
aad
pop
adc
and
jae
insl
push
dec
aad
dec
movsb
cmp
and
adc
push
pushf
push
cmpsl
imul
cmp
or
or
pop
adc
pop
and
adc
sub
sbb
jno
mov
cmp
rorb
xorb
and
or
rorb
mov
mov
xchg
adc
lds
je
mov
cmc
add
push
imul
push
insl
imul
ret
add
add
sub
pop
and
pop
push
outsl
ror
icebp
xorl
in
lea
or
mov
imulb
lcall
shl
sbb
lret
test
xchg
mov
out
mov
pop
or
scas
push
mov
pop
arpl
bound
popf
popf
jle
jbe
ss
pop
dec
add
test
das
sti
sbb
les
movsl
dec
pop
and
bound
add
in
mov
mov
gs
loope
add
jge
mov
jge
xlat
push
xchg
addr16
or
cmp
push
loope
pop
sub
xor
in
cmpsl
or
es
gs
das
out
imul
mov
or
fisubrs
frstor
rol
inc
mov
mov
add
push
fidivrl
in
inc
adc
test
mov
out
inc
dec
and
test
ja,pn
mov
inc
inc
cmpsb
daa
pop
es
mov
or
outsb
and
xchg
xchg
fstps
add
mov
jae
mov
sbb
mov
sbb
lods
ja
in
out
mov
lods
outsl
adc
sbb
fidivs
mov
or
xor
inc
mov
mov
lret
icebp
shlb
imul
into
lea
gs
insl
adc
iret
mov
and
pop
jle
sbb
mov
test
inc
lds
jne
inc
gs
sub
loopne
int
rcll
outsb
mov
mov
enter
sub
inc
fwait
push
push
out
fisubs
inc
jle
sbb
ja
test
in
mov
sub
xchg
pop
mov
movb
test
dec
sub
lods
test
loope
insb
xchg
outsb
adc
sti
dec
pop
xchg
sbb
aaa
in
popl
fcompl
test
int3
mov
sti
mov
jp
mov
cmc
push
outsl
mov
outsl
mov
mov
xlat
pop
pop
outsl
pop
jns
fcomps
jbe
xor
adc
adc
inc
xchg
ja
jmp
nop
cmp
dec
in
sub
jnp
push
cmpb
xchg
push
inc
xor
jp
fimuls
movsb
cmova
xchg
mov
test
xchg
cld
sbb
mov
push
push
sbb
test
xor
sbb
mov
dec
clc
les
lods
and
daa
dec
mov
test
outsb
or
sub
lahf
fmuls
push
mov
mulb
mov
push
inc
add
jge
imul
mov
mov
mov
or
int3
add
or
xchg
jne
pop
iret
dec
lods
stos
cmpsl
mov
cs
fstl
jle
pop
das
or
pop
pop
mov
pop
daa
pop
jmp
pop
and
xor
subl
adc
push
inc
mov
cmp
jp
mov
out
lea
or
and
sbbl
imul
in
out
push
sub
or
xor
pop
jne
xchg
pop
ror
test
mov
rcrl
ficoml
mov
mov
mov
jge
aad
mov
inc
int
pop
cld
in
imulb
xchg
xor
jl
jae
mov
leave
cmp
nop
adc
jmp
cmp
and
sbb
inc
insb
mov
xchg
pop
out
fisubs
das
daa
mov
std
mov
sbb
shlb
ret
popf
mov
push
mov
mov
jne
sbb
push
sub
cmp
jne
adc
dec
popf
ds
push
mov
inc
jnp
cmc
out
mov
dec
ret
push
and
mov
bnd
pop
ds
mov
mov
outsb
and
sahf
in
jmp
aam
xor
es
mov
or
repnz
xchg
mov
cmp
ret
jb
mov
sbb
test
pop
and
sbb
outsb
testb
sub
hlt
fdivr
push
mov
call
insb
int
jmp
or
xchg
push
shrb
sti
ret
mov
mov
or
orb
shlb
cltd
ss
xor
aam
data16
add
outsl
jae
adc
pop
fldln2
xchg
in
jge
mov
jo
mov
jmp
xchg
cmp
test
std
mov
int3
or
sarl
jmp
sbb
dec
insl
push
adc
pop
pop
pusha
jge
jb
sbb
iret
inc
jnp
div
and
js
xor
pop
xor
dec
lods
mov
enter
imul
jl
stos
xchg
int
fistpl
mov
xchg
cld
out
sbb
xchg
fcoms
push
sub
or
das
fldl
in
lds
mov
xor
cli
mov
mov
movsl
xorb
into
inc
aas
and
dec
pop
lahf
test
daa
mov
mov
out
daa
xor
pop
gs
sub
add
cmpsb
jnp
popa
add
ja
cmp
xor
dec
push
aaa
ljmp
mull
ja
int
sub
xchg
fildll
lret
lods
lcall
fimull
jge
mov
imul
repnz
mov
rolb
sarb
in
std
insl
mov
sub
xchg
mov
mov
mov
push
jmp
shlb
fs
aaa
adc
add
inc
lcall
fadds
xlat
jbe
es
out
adc
push
mov
cmp
int3
jne
in
aam
std
mov
imul
xlat
leave
xchg
call
xchg
xor
xlat
and
enter
sbb
push
cpuid
rcll
sbb
xchg
adc
lea
rcrl
sbb
cmpsl
push
add
hlt
sub
sbb
mov
stc
cli
clc
cmc
add
xlat
cmp
or
test
adc
cld
pop
xor
xor
pushf
or
dec
mov
jmp
add
aam
adc
subl
call
lea
sbb
clc
pop
mov
add
fs
push
xchg
ret
push
mov
negl
xchg
call
fmuls
movsb
movsb
mov
jo
sbb
add
sub
outsl
push
imul
adc
cmp
outsl
adc
loopne
pop
dec
push
dec
inc
lret
fisttpll
sbb
shrb
inc
aaa
cmpb
jne
jg
mov
out
leave
push
mov
stos
aas
jb
jl
jecxz
incb
pushf
adc
push
adc
fnsetpm(287
fstpl
cld
and
cmp
int3
add
sbb
cwtl
mov
lods
xchg
dec
mov
mov
push
fldcw
xor
xor
fcmovbe
into
ljmp
loop
data16
mov
cmp
jle
jg
js
stos
rclb
inc
or
adc
xor
push
adc
push
inc
ljmp
xchg
sbb
mov
jbe
sbb
mov
adc
sbb
pop
or
fdiv
stos
sbb
mov
mov
popa
pop
leave
add
and
xor
push
stos
dec
cmpsb
loopne
pop
shrl
aas
test
jge
and
fiadds
adc
mov
mov
push
popa
cmp
add
mov
jmp
icebp
fistl
in
imul
push
sahf
xor
and
out
lock
xchg
jle
pusha
pop
stos
into
pop
dec
addb
and
inc
mov
in
xor
sub
or
mov
sub
inc
inc
ds
fldcw
je
js
inc
xchg
inc
inc
mov
clc
arpl
sub
xchg
jo
cmpsb
push
cmpsl
xlat
je
sbb
lods
pop
mov
and
jmp
inc
sub
xchg
loop
xor
pop
data16
xchg
jns
sbb
xor
stc
sahf
ror
push
and
push
xchg
rolb
pop
inc
mov
sbb
cltd
adc
mov
add
call
aaa
das
pop
into
jo
inc
movsl
fisubrl
dec
sbb
fwait
jb
add
inc
cmp
adc
jmp
arpl
mov
jp
fmul
sbb
enter
std
icebp
hlt
or
rorb
outsb
mov
icebp
xor
cmp
andb
push
call
into
pusha
mov
icebp
mov
repz
jne
loop
push
sub
pop
inc
clc
xor
std
ss
or
xchg
jae
addr16
pop
sub
inc
pop
fsts
and
fcmovnu
and
lods
stos
adcb
sbb
cwtl
sub
add
jmp
sbb
xor
shlb
nop
jbe
into
add
push
mov
and
imul
mov
sbb
jg
dec
inc
in
push
mov
push
pop
out
add
push
nop
rcrb
mov
mov
repz
pop
push
or
push
es
ja
testl
dec
and
outsl
lret
popa
sub
in
mov
push
pop
sti
mov
inc
mov
mov
fisttpll
sahf
adc
aas
push
add
loop
pop
push
fsubs
ror
in
mov
lea
push
iret
cmp
dec
xor
test
inc
pop
push
fstpt
xor
xor
mov
add
dec
adc
xchg
xlat
lock
xchg
roll
jle
out
lret
fsubs
xor
mov
out
cld
incl
cmpsl
imul
popf
push
ret
pushf
aas
std
lods
fsubl
inc
mov
and
lock
or
int
jecxz
scas
mov
xchg
ror
xchg
fwait
xor
nop
repz
sub
cmp
push
pop
sahf
fstpt
mov
push
out
cmp
repnz
rorl
cs
bound
push
cwtl
fimuls
inc
xchg
aad
fisubrs
pop
arpl
fnstcw
pop
mov
cltd
xchg
jnp
cmp
push
mov
test
mov
add
adc
mov
sti
dec
inc
push
jg
ljmp
xchg
notl
sub
lcall
pusha
cmp
and
cmc
xor
addr16
outsl
ret
fidivl
xor
addr16
inc
pop
mov
enter
stos
jl
test
fucom
push
push
pop
mov
insl
fmuls
add
nop
mov
decl
pop
loop
pop
push
xorl
cmp
inc
shl
jbe
mov
cmpsb
push
push
inc
icebp
je
outsb
lahf
xchg
xchg
iret
pop
lods
cmp
and
shr
test
popa
rclb
sbb
adc
mov
std
test
and
pushf
add
in
enter
lods
mov
int3
inc
jb
js
cmp
in
popf
ficompl
dec
movq
xchg
cli
or
sbb
xlat
std
cmc
jno
mov
int3
dec
test
add
aad
test
nop
inc
shlb
pop
ret
mov
xchg
into
dec
xlat
push
out
cmpsl
rep
lahf
addr16
jmp
imul
and
sub
push
push
add
pop
dec
cmp
add
ljmp
pop
gs
dec
jecxz,pn
mov
cli
add
mov
movsl
lds
sbb
cs
arpl
js
addr16
push
push
mov
mov
push
jae
cwtl
daa
mov
cmc
or
dec
pop
faddl
mov
in
aad
popf
ljmp
arpl
dec
cmc
dec
or
jbe
lock
fcomip
lret
std
dec
aad
push
add
adcl
ret
sub
lock
scas
adc
mov
xlat
mov
sbb
jge
xchg
es
cmc
and
movsl
or
dec
or
mov
aas
enter
and
test
sub
and
lea
ds
lds
pop
js
or
out
adc
stc
in
sub
movsl
push
dec
mov
into
lds
mov
sbb
outsb
cmpsb
enter
jp
call
rol
jae
popf
stc
lods
pop
aaa
and
daa
in
pop
mov
enter
jnp
mov
mov
das
lret
mov
mov
insl
inc
mov
or
mov
or
inc
hlt
xor
pop
call
add
adc
jle
data16
or
xchg
inc
aam
lcall
add
adc
mov
rorl
loopne
lret
push
in
popa
fildll
inc
and
leave
sar
mov
sbb
fiaddl
pop
int3
xchg
jo
xchg
test
rcrb
int
mov
dec
sub
int
fdivs
imul
out
rclb
adc
mov
mov
mov
jl
enter
hlt
insb
push
insb
sub
int3
addr16
and
sbb
push
test
fisubrl
add
ljmp
rcll
mov
outsb
add
sbb
jb
jae
push
and
mov
add
stos
icebp
lods
inc
ficompl
sub
or
fldt
stos
insb
jge
imul
fisubl
icebp
popl
add
jecxz
shlb
cmp
insl
popa
push
push
inc
jmp
loopne
mov
push
push
and
dec
lahf
stc
ja
push
fstpt
call
push
in
add
adc
jg
jbe
add
and
stos
pop
xchg
add
or
and
jg
dec
adc
cmp
mov
cmp
add
fistl
incl
push
sub
pop
xlat
iret
movsl
cmpsb
cli
in
jb
packssdw
test
push
push
push
imul
inc
mov
jmp
adc
sbb
std
push
push
mov
cmpl
sbb
sub
cld
push
inc
cmp
fs
and
loop
insl
dec
inc
iret
add
inc
mov
imul
fsubrl
sbb
adcl
rcrb
outsb
inc
into
pop
pop
mov
add
lahf
cli
xchg
sbb
push
movsb
push
popa
dec
aaa
pop
std
rclb
movsb
leave
test
aam
rorb
movsb
out
iret
pop
cmpsb
cmc
jge
mov
movsl
dec
xor
in
adc
sub
jnp
bound
dec
rorb
test
xchg
fisubrl
ret
push
imul
jne
inc
inc
inc
jae
rol
addl
rclb
adc
insb
mov
into
and
cmp
lods
imulb
stos
or
xchg
xchg
dec
inc
popa
dec
dec
mov
out
sbb
inc
xchg
out
xor
or
ss
xchg
xor
scas
dec
adc
movsl
dec
mov
lret
gs
and
mov
pop
fs
fmull
mov
xchg
and
mov
mov
lea
or
call
cwtl
sahf
cwtl
sahf
pop
ret
mov
xchg
pop
js
adc
ljmp
bound
aaa
popf
jbe
push
addr16
out
out
loope
hlt
orl
dec
mov
sbb
xchg
or
mov
les
and
pop
rclb
jmp
in
aas
xor
enter
pushf
sar
mov
mov
mov
xor
std
sub
psubw
in
adc
loop
add
push
or
xor
arpl
mov
mov
bswap
mov
mov
jae
sbb
pop
insb
sub
pushf
call
fidivrs
enter
sbb
fmuls
sbb
add
or
push
rclb
cmpsl
insl
mov
push
lcall
ss
xor
mov
mov
inc
jmp
pop
xchg
fcompp
push
rcll
mov
dec
sbb
jb
daa
jmp
xchg
dec
sbb
cmp
add
fisubl
lds
ss
or
xchg
or
ss
mov
inc
int
imul
mov
xchg
popa
js
dec
adc
je
js
xor
pop
sahf
push
mov
in
cltd
jmp
jbe
sub
add
sahf
cmp
in
gs
jne
mov
scas
add
and
cmp
xchg
mov
fmull
mov
push
sar
fsubrl
xor
adc
dec
into
imul
xor
xchg
xchg
mov
jle
xor
xchg
insl
les
push
mov
sub
jmp
sub
jecxz
in
int3
jne
xchg
ss
push
mov
or
call
incl
sbb
add
sti
jmp
sarl
sbb
gs
ret
cmpsb
sub
daa
and
stos
or
mov
add
jp
cmp
test
es
push
popa
test
mov
shr
lret
xor
mov
sub
icebp
mov
lds
roll
mov
and
push
sahf
fcmovbe
or
jne
lods
arpl
xchg
push
jne
xor
cmp
cmpsb
xor
xchg
dec
xor
and
movsl
or
or
push
imul
sub
jge
insb
scas
jns,pn
pop
scas
dec
int
sti
std
lret
jmp
loop
or
sbb
xor
mov
dec
and
addr16
js
loope
jp
icebp
xor
aam
jle
sbb
pop
ja
std
xlat
or
cmp
push
iret
das
into
sbb
push
aad
mov
outsb
clc
scas
push
dec
in
cs
lcall
push
aam
xchg
fsubrl
mov
cmp
rol
pop
push
jle
scas
pop
push
ret
sub
mov
popf
xchg
pop
xchg
les
jge
pop
cmp
cmp
add
icebp
mov
lods
xor
loopne
sbb
add
xchg
loop
add
cmp
inc
idivb
cmp
push
sbb
inc
fwait
jle
fwait
mov
push
mov
dec
leave
sbb
lret
fisttps
lret
cmp
jb
mov
call
fstl
mov
lds
test
out
jae
mov
cmp
pop
inc
out
adc
shl
jo
and
inc
ljmp
push
push
mov
jp
dec
fs
imul
dec
push
jmp
pop
addl
cmp
pop
inc
aaa
into
xor
cli
pop
adc
sub
pushf
pop
je
aam
adc
adc
in
mov
ret
xchg
lods
mov
pop
add
sbb
sbb
sub
inc
clc
sbb
or
pop
mov
cmpsb
and
mov
push
jl
push
outsl
test
mov
mov
adc
aad
int3
out
push
adc
or
aad
fidivl
sub
inc
jno
mov
cmp
in
xor
ja
insl
sub
pop
shll
sbb
sub
add
xchg
daa
pop
fisubs
test
cmp
into
imul
mov
mov
dec
pop
add
test
jg
cld
xchg
cltd
push
add
popf
pop
cmpsb
scas
clc
out
rcl
in
popf
inc
ds
aas
cmpsl
mov
mov
pop
adc
and
or
lahf
cli
mov
or
negl
jecxz
push
iret
nop
jae
mov
enter
and
fcomp
jmp
in
mov
cmc
jmp
mov
adc
jp
sahf
adc
jns
jle
dec
incb
fs
xor
rep
mov
sub
xor
out
and
xchg
jl
aas
push
jp
insb
xor
aam
push
rclb
les
das
ja
jb
rcrb
sub
enter
mov
xor
jecxz,pt
xchg
xlat
aam
sub
aad
aam
aad
out
push
mov
repz
fdivrs
int3
mov
cmp
ljmp
dec
mov
dec
rol
out
dec
jge
mov
sbb
cmp
or
add
sahf
sbb
aaa
les
xor
sarl
cmp
out
push
sub
stos
ret
mov
adc
shrb
shl
or
fwait
push
pop
xchg
loop
mov
xor
imul
cli
pop
std
push
sbb
cmp
jb
adc
push
incb
or
inc
sbb
xor
repnz
pusha
or
jbe
outsb
mov
out
xor
cmovs
sub
dec
imul
insl
test
cwtl
testb
fsubrp
test
dec
test
shrb
xchg
cld
jbe
xor
lods
out
insb
imul
incb
sub
jbe
ret
shlb
dec
dec
fcoms
jb
push
lea
sbb
push
mov
out
pop
push
jb
mov
push
add
push
xchg
outsb
aad
xchg
hlt
or
mov
mov
lds
cmp
add
sbb
jo
mov
sub
stos
and
pop
jle
scas
cmp
daa
mov
xorb
mov
fdivl
fstpl
push
push
sbb
and
push
jno
mov
inc
jno
insb
arpl
push
fimull
das
pop
push
ss
int
ret
cld
add
mov
cmp
jns
jb
loope
nop
pop
xor
insl
fcompl
sbb
ret
inc
lods
pop
push
or
mov
push
mov
out
pop
fadds
insb
inc
or
and
sbb
cltd
mov
inc
popa
jge
cmp
mov
pop
xchg
or
sub
jg
aaa
and
lret
cmpsb
mov
cmp
mov
push
mov
enter
inc
ja
push
out
xor
xchg
sarb
subb
movsl
fmull
xchg
fsubl
fists
sar
jl
lret
xchg
imull
lret
loope
data16
or
in
pop
test
mov
mov
repz
mov
daa
shl
out
enter
cmp
xchg
xor
lahf
pop
xor
push
sbb
enter
push
xor
addr16
adc
into
fldcw
mov
dec
inc
add
add
mov
fstpt
fisttpl
lahf
in
xor
cmp
push
bound
push
push
xor
jl
adc
out
test
xchg
cmp
xchg
cmp
push
cwtl
cmp
cmp
jp
outsl
daa
add
orl
mov
add
js
mov
cmp
adc
idivb
es
push
imul
gs
loop
push
pop
sti
pushf
push
aaa
test
xor
xor
push
and
pop
out
jb
out
add
jmp
jns
loop
dec
cmp
ljmp
adc
and
dec
leave
push
adc
jl
icebp
dec
xlat
stos
int
pop
rcrb
loop
mov
mov
into
cltd
sub
jbe
into
push
sahf
sbb
and
xchg
punpckldq
mov
jp
or
xlat
les
sbb
add
out
or
inc
xchg
andb
fwait
movsl
xor
xchg
loope
loopne
inc
mov
mov
leave
mov
pop
or
fisttpl
in
idivb
adc
sbb
sub
cs
pop
mov
sti
enter
andl
jb
xor
and
sub
adc
pop
xchg
push
or
sub
cs
cmp
mov
sti
negb
aad
mov
sbbl
out
and
jle
cmp
pop
outsb
mov
imul
mov
dec
adc
pop
mov
pushf
or
enter
lds
jg
inc
add
mov
flds
xor
ret
mov
es
jmp
jbe
jge
out
rcl
pop
sbb
jb
rcr
aas
mov
pop
mov
gs
xorl
pop
sbb
pop
cwtl
xchg
jae
rcl
xor
cmc
mov
das
pop
shlb
xchg
push
dec
pop
dec
mov
call
pop
add
call
adc
test
sub
dec
sbb
cmp
out
mov
pop
cmp
lods
shl
jo
add
cmc
shll
sahf
mov
inc
xchg
cltd
cltd
les
inc
jle
imul
pop
imul
pop
push
cmp
mov
mov
jecxz
push
push
mov
les
fmull
lds
iret
push
cwtl
in
ss
lret
sti
divl
sti
mov
jo
in
adcb
out
test
shl
or
mov
add
jle
inc
fsubr
jo
bound
add
dec
pusha
xor
aaa
lahf
mov
xorl
cltd
pop
ret
xor
xchg
mull
fcoms
add
jne
sub
jmp
adc
pop
gs
pop
push
xchg
fwait
xor
and
rol
adc
fucomi
or
mov
repnz
jl
sbb
lock
out
popf
push
cs
xor
lods
cmpsl
fs
repz
inc
or
mov
imul
jle
adcb
sbb
fiaddl
hlt
pop
cmp
and
orb
out
jno
cltd
daa
movsb
sub
stos
mov
inc
and
ret
ja
in
cs
test
imul
adc
jl
loopne
call
aas
pushf
inc
das
sub
xor
lcall
jmp
jl
xchg
inc
es
cwtl
mov
sbb
sahf
test
outsb
in
in
aam
push
aam
add
nop
iret
add
cmc
or
mov
imul
mov
ret
data16
stos
sub
pop
add
jae
add
ret
loop
les
adc
pop
pop
mov
or
test
les
adc
mov
fdivr
xlat
nop
sub
decl
cmp
aas
movnti
adc
mov
popl
out
xor
ljmp
stos
nop
repz
cmpsl
pop
das
repnz
dec
mov
xor
push
and
cmp
pop
pop
xchg
or
xor
push
sbb
mov
push
arpl
pop
stos
jge
sub
jecxz
insl
or
pushf
or
cmpl
jns
scas
mov
xor
or
jge
adc
pop
outsb
fwait
jecxz
aam
mov
fdiv
arpl
fdivrp
insl
outsl
fs
xor
mov
pusha
sub
popa
push
lods
insb
scas
sbb
sub
dec
dec
ljmp
push
inc
mov
out
cld
loope
dec
fldcw
fwait
int
sbb
decb
mov
or
je
sbb
in
lock
jno
ljmp
add
call
or
mov
inc
cmp
push
sarl
cmpsb
push
loop
add
xchg
adc
repnz
xchg
cmp
shll
mov
je
add
aas
xlat
cs
sbb
inc
and
movsb
pop
stos
out
inc
xchg
mov
shrb
xchg
sub
sbb
dec
mov
dec
mov
jne
dec
fsubrl
aam
adc
insb
stos
mov
loop
ds
push
loop
jmp
pop
aam
push
js
push
lahf
or
mov
js
gs
ret
add
jne
adc
mov
andb
mov
xorl
into
inc
xchg
dec
cli
and
je
fcomi
lahf
cmpsb
xchg
pop
fdivrs
leave
fnstsw
lock
adc
das
push
loope
inc
insb
xor
dec
outsl
push
mov
int
adc
push
inc
mov
push
dec
fcomps
xchg
pop
and
adc
xorl
pop
or
push
sub
aas
fs
dec
clc
les
mov
int
lcall
sub
mov
inc
imul
jne
iret
mov
xor
cmpsb
popa
ret
shll
lds
mov
add
daa
lahf
out
loopne
cmp
repnz
jl,pt
sub
decl
and
inc
data16
faddl
jno
inc
sbb
imul
lods
mov
cmp
popf
cltd
add
or
and
inc
dec
add
and
push
sbb
jp
fwait
movsl
sbb
xor
clc
fbstp
push
xchg
inc
popa
dec
or
ret
les
pop
pop
push
jae
aad
add
gs
aaa
and
lret
fwait
lods
repz
pushf
mov
mov
mov
mov
jmp
add
adc
dec
push
and
dec
cmp
rcl
pop
push
sbb
and
xchg
cltd
jbe
faddl
daa
add
and
fs
addr16
add
or
cltd
dec
popl
es
mov
stc
push
sbb
sbb
addl
add
mov
mov
mov
mov
shrl
out
mov
pop
mov
lcall
push
repz
jb
out
jmp
je
inc
push
xchg
arpl
arpl
cmpsb
cmp
out
pop
cld
loopne
mov
loope
pop
push
xchg
add
xor
xchg
pop
mov
aas
jmp
cs
test
lods
ret
dec
in
jecxz
mov
and
and
insb
dec
mov
std
sar
dec
mov
or
cli
dec
push
arpl
loop
cltd
or
pop
in
xchg
addb
test
pop
jb
or
pusha
test
mov
adc
inc
lahf
dec
std
pop
fucomp
pop
popf
xchg
sub
xlat
aam
xor
imul
lods
ss
mov
icebp
clc
push
jmp
pop
cmpsb
es
and
pop
leave
orl
push
dec
int3
repz
sub
dec
push
inc
loopne
das
sbb
xor
out
or
filds
or
data16
aad
sub
daa
xorb
ss
sbbb
and
sub
lods
cmpsb
fcmovnb
lcall
repnz
mov
sbb
into
addr16
dec
int
lret
test
push
sbb
clc
ret
or
and
cmpsb
test
pop
rclb
mov
js
mov
add
dec
int
addr16
mov
add
loope
and
inc
out
iret
test
push
sbb
fcmovne
dec
fsubr
inc
inc
push
pop
fidivs
cld
ficompl
mov
push
aam
sahf
cli
jne
or
adc
fnstsw
jmp
in
lret
cli
es
push
dec
into
lcall
adc
and
mov
leave
jecxz
out
jecxz
and
pop
push
jb
dec
mov
sbb
loope
jl
add
cmp
mov
fcoms
movb
pop
into
scas
mov
xor
mov
cmp
jbe
je
repnz
fs
sub
lret
lcall
or
push
rcll
in
push
loop
shll
jg
cmp
push
push
cmp
push
xchg
inc
lahf
outsb
push
adc
cmp
jg
and
loop
int3
adc
jg
jecxz
push
xchg
push
pop
outsb
pop
std
testl
ja
push
repz
jns
std
dec
mov
mov
jcxz
mov
mov
push
nop
jecxz
lahf
cli
jo
int
aam
jle
adc
enter
jbe
inc
xor
ret
jmp
jecxz
andb
lds
pop
mov
jecxz
sbb
les
fdivrl
jl
imul
inc
pop
insb
lahf
and
jmp
clc
popa
push
add
pop
push
cmp
daa
jle
cmp
mov
test
jmp
sub
xor
dec
dec
xor
cmpsl
mov
jp
mov
lcall
sbb
pop
icebp
jle
nop
or
dec
push
cmp
xor
out
inc
je
lods
xchg
fistl
or
out
sbb
data16
hlt
fdivs
xchg
adcl
or
pop
dec
fstp
xor
xchg
xchg
inc
rcrl
cmpsl
in
mov
sub
outsb
sub
mov
jne
jecxz
mov
dec
sar
ss
test
mov
jns
lea
sahf
push
dec
movsb
adc
and
test
sti
sub
ja
mov
jecxz
jns
imulb
sbb
cmpsb
in
loope
aaa
or
and
jne
cmp
xchg
movsb
scas
repnz
es
in
xchg
and
cmpsb
nop
and
addr16
lcall
fwait
and
mov
imul
jne
or
sub
test
jae
cmpb
xchg
xchg
jno
push
lds
xchg
push
add
push
shr
mov
cmp
xor
add
lahf
sub
mov
arpl
aas
push
fs
aam
dec
fwait
cmp
mov
mov
xor
outsl
jmp
sbb
fisubl
fwait
test
inc
xchg
sbb
negl
mov
push
pop
jae
faddl
sbb
cmp
test
fs
in
mov
or
add
xor
and
aam
jbe
outsl
call
mov
enter
popf
inc
lahf
loope
and
pop
inc
in
cs
rcrl
int3
lret
lret
jl
xchg
pop
in
cmpb
cmp
and
pop
push
xor
sub
dec
scas
mov
mov
push
mov
cld
mov
popa
xlat
mov
dec
mov
add
cltd
imul
xor
mov
cmp
insl
rolb
pop
cmp
in
mov
movsl
movsb
cwtl
daa
les
pop
jno
xchg
pop
mov
aad
jno
js
lret
int
pop
scas
or
add
data16
cli
lods
fisttps
jp
adc
int3
push
mov
xchg
push
jb
adc
adc
jo
fsubl
cli
in
mov
cmpsb
std
xor
add
adc
inc
lea
cltd
movsb
addr16
xchg
repz
movsb
cltd
and
cmpsl
cmp
jo
inc
in
out
loope
test
lret
cmp
push
and
xchg
stc
int3
inc
sub
push
or
add
or
xchg
dec
xchg
sub
pop
in
and
jb
push
sbb
push
decb
mov
ret
sbb
dec
jp
sub
or
pop
cmpsl
pop
and
push
and
rorl
not
lods
rorl
xchg
pusha
push
jg
sub
mull
jb
cwtl
mov
loope
les
sahf
mov
jns
adc
add
std
sbb
pushfw
jle
test
or
inc
push
xlat
push
mov
adc
int3
lods
cmc
insl
inc
cmc
adc
aad
sbb
push
cmp
loopne
xchg
jmp
sbbb
mov
mov
or
mov
push
mov
rcrb
adc
or
cs
fists
clc
ds
mov
stos
jl
imul
jg
adc
adc
fs
mov
mov
mov
push
rcr
and
test
sub
test
jne
pop
push
mov
mov
dec
xor
std
or
push
jbe
jbe
fimuls
arpl
xlat
or
imul
push
not
into
rclb
cli
push
xchg
in
adc
arpl
and
js
outsl
pushf
mov
out
xor
mov
adc
into
push
andl
cmp
add
dec
mulb
push
mov
call
pusha
adc
or
adc
aas
fnstsw
push
pop
das
mov
push
push
sbb
xchg
xor
xor
sub
cltd
inc
cmp
mov
ret
pop
xchg
mov
lcall
jnp
dec
or
add
sbb
lret
add
mov
jo
movsb
add
push
pop
add
loope
pop
mov
xorb
and
in
jbe
pushf
inc
xchg
pop
test
push
es
in
lods
js
mov
inc
pop
stc
lock
sub
jmp
lock
sbb
dec
enter
arpl
rclb
in
hlt
dec
jmp
jmp
jne
ficompl
dec
or
cmc
push
and
lods
iret
add
cs
stos
sbb
sti
mov
loope
popf
lret
dec
jle
jbe
call
pop
xchg
out
in
add
loopne
sbb
xchg
inc
jge
adc
ss
add
getsec
jl
lods
or
int
in
mov
enter
inc
fdivr
lret
mov
pop
pop
mov
mov
jb
xchg
pop
mov
ss
and
jbe
sarb
mov
adc
adc
fmuls
insl
out
ficoml
decb
push
add
out
movsl
mov
call
xlat
sahf
divl
cs
jo
shlb
addr16
call
xor
out
pop
outsb
orb
sub
push
test
xor
test
or
stos
cwtl
mov
push
lret
icebp
xorl
sbb
mov
inc
sbb
push
repnz
scas
mov
xor
mov
cltd
xchg
jnp
push
mov
sarl
clc
arpl
out
jne
jbe
cld
mov
pop
cmp
rclb
mov
cmp
fdivrs
out
jmp
push
aad
aaa
inc
sub
dec
jne
xchg
es
sbb
cmp
inc
jbe
sub
sub
and
imul
mov
outsb
mov
lods
jecxz
add
sub
aas
jae
icebp
inc
xchg
std
ja
mov
test
enter
cld
subb
sub
orl
in
mov
out
adc
or
pusha
mull
jne
sub
repnz
inc
mov
je
and
sahf
inc
scas
adc
test
push
adc
push
sub
shrl
jp
push
pop
ljmp
fadds
mov
cltd
xor
sbb
jle
mov
mov
out
fs
call
mov
mov
shl
sub
insl
outsl
xchg
ret
xchg
negb
push
insl
push
mov
mov
shlb
sti
sub
xchg
into
dec
mov
int
pop
xor
sti
sub
xor
push
shlb
jmp
dec
mov
inc
mov
int3
mov
cltd
shrl
or
xorl
pop
je
pop
call
mov
sbb
lds
push
or
mov
pop
scas
add
in
movsl
lcall
icebp
push
addb
jle
xchg
iret
orl
std
cmp
jge
fsubp
xlat
add
in
popa
data16
std
mov
in
inc
das
push
dec
xlat
mov
les
test
dec
outsl
jle
test
aad
xor
pop
mov
mov
jbe
cwtl
repnz
js
fdivr
cmp
dec
add
ja
inc
xor
out
les
gs
jb
fwait
pushf
lock
xor
jl
call
push
sahf
test
int3
adc
xchg
xchg
or
and
bound
mov
orl
inc
inc
jns
cmp
push
cmp
mov
ret
mov
mov
cmp
pop
cmpsl
cmp
add
gs
les
shl
movsl
dec
add
inc
lea
les
cmp
sbb
sub
icebp
jecxz
out
stos
cmp
cld
test
cmp
iret
sbb
rcrl
push
fs
jne
lahf
mov
dec
lahf
gs
mov
and
mov
add
and
xchg
ja
nop
scas
imul
movsl
push
sub
mov
cmp
inc
aaa
mov
cli
int3
push
jg
mov
clc
ds
cmp
test
jmp
loope
fcomps
jge
rol
cli
and
aam
aas
ss
sbb
cmp
xor
mov
adc
jle
pop
mov
pop
outsb
add
and
mov
and
mov
shrb
push
gs
call
jne
xor
imul
lcall
dec
inc
sbb
jecxz
ret
sub
jmp
cltd
lods
pop
dec
in
call
push
int
and
xchg
jb
pop
push
dec
cli
popa
sub
lds
repnz
cmp
sarl
xchg
icebp
bound
pop
jp
mov
xor
sbb
add
inc
into
inc
sbb
ja
aad
ljmp
lods
shll
cwtl
and
mov
movsb
sub
scas
lret
adc
mov
and
sub
in
add
xchg
jp
loop
mov
xchg
sub
fdivrp
outsl
fnstcw
sub
sbb
pushf
push
jbe
push
scas
loopne
mov
and
or
sti
xlat
inc
in
mov
inc
inc
mov
inc
repz
sub
jb
sbb
rol
mov
loopne
xchg
enter
cmp
sbb
icebp
icebp
cmpsl
int3
sti
add
ss
add
push
and
fmul
fcmovnu
sbb
cmc
rolb
mov
cmpsb
stos
pop
adc
push
pop
ficoml
sbb
mov
adc
dec
mov
stos
movsb
cmp
cmp
clc
paddsw
fistpll
inc
xchg
push
pop
push
pushf
add
pop
sarl
cmpsl
mov
sub
mov
sahf
cmp
fsubrp
mov
stos
sbb
jnp
shlb
dec
mov
test
inc
add
andb
mov
mov
dec
out
jge
sbb
jl
repnz
mov
icebp
or
mov
dec
mov
imul
loope
mov
loopne
pop
cli
dec
ss
fs
pop
and
popf
and
sbb
inc
xor
ret
aam
push
movsb
out
ljmp
fld
in
add
fs
iret
aad
and
pop
or
push
pop
in
pusha
lea
dec
jbe
xor
mov
or
jno
jmp
popf
cmc
out
dec
fdivl
lods
xchg
mov
int3
pop
jb
sbb
dec
imul
shl
fstl
and
ds
xchg
insb
jb
and
pop
adc
fsubs
jmp
imul
ljmp
or
fists
jno
pop
cmp
mov
clc
test
and
nop
cmpsl
push
mov
or
adc
sub
ret
jbe
repnz
pop
testb
lahf
sub
mov
pop
mov
fidivrl
cmp
ljmp
and
sbb
add
imul
cmpsl
das
mov
stc
jnp
fidivl
mov
gs
stos
loopne
cmp
sbb
jmp
mov
lahf
loope
stos
nop
mov
ja
jle
push
jnp
or
pop
jmp
sbb
repz
and
push
mov
push
call
fmul
jmp
add
stos
mov
enter
loop
test
out
lahf
lods
pop
inc
mov
pop
ja
push
stos
insb
roll
jnp
test
xchg
mov
iret
out
cmc
jle
jge
ret
pop
popa
or
enter
ret
stos
xchg
and
test
push
and
aaa
mov
pushf
jmp
pop
mov
xor
cltd
mov
call
mov
push
and
loop
cmp
ret
xchg
loop
pop
stos
cmp
int
push
ss
mov
cmp
popf
cmc
mov
iret
sub
rolb
adc
inc
stos
push
pop
rcll
addl
inc
inc
jge
mov
nop
dec
test
mov
cmp
mov
mov
vorpd
jns
test
lds
lahf
pushf
out
or
inc
or
cmp
mov
je
mov
fldl
mov
stc
int
push
aad
push
jmp
call
xrelease
xor
loopne
push
push
fdiv
xor
push
out
out
mov
xchg
sbb
aad
dec
dec
repnz
adc
push
inc
pop
push
frndint
das
and
cwtl
je
lcall
mov
mov
xor
xor
adc
mov
add
fwait
test
xor
push
push
cmc
scas
scas
test
pop
sbb
push
cmp
xor
cmp
outsb
or
pop
jbe
enter
xchg
fistps
pop
push
arpl
cmp
dec
mov
sub
push
lods
push
or
or
out
insl
sbb
mov
xor
test
jno
in
insl
subb
xor
mov
jbe
jecxz
sahf
adc
jbe
mov
pop
out
fisubl
setge
clc
inc
andl
jg
hlt
mov
out
and
shl
arpl
cmpb
repz
popl
push
jl
sub
out
ds
push
cld
jecxz
fmull
sbb
bound
mov
mov
outsl
imul
ds
inc
aam
lahf
cs
js
inc
sub
mov
sub
dec
leave
fmull
sbb
push
jmp
lods
mov
adc
call
sarb
pop
mov
sti
rorb
pop
sub
test
fidivrs
bound
shlb
and
fcmovne
sahf
sub
jnp
fs
ret
cltd
or
outsl
jecxz
push
fmuls
jb
addb
jae
idivl
sbbl
dec
pop
test
insl
sbb
fdivrl
pop
sbb
xor
ss
cmpsb
insb
xchg
pop
enter
es
movsl
cmpsl
loope
insl
and
mov
movsb
loop
inc
std
cmp
add
in
and
jae
jg
mov
in
das
or
mov
xchg
xor
cmp
dec
xchg
rcrl
mov
jne
push
pop
add
filds
sbb
scas
inc
add
std
pop
xchg
shl
push
mov
adc
fsubrl
xchg
decb
sbb
rclb
cmp
adc
inc
std
adc
pop
mov
mov
inc
sub
decb
sub
pop
xor
sub
rclb
xor
out
in
nop
or
dec
inc
pop
pushf
add
mov
mov
fsubp
scas
pop
or
sbb
mov
sti
into
insl
mov
push
and
mov
pop
xchg
push
push
xchg
xor
jmp
aam
sar
adc
mov
mov
and
inc
in
jge
mov
mov
jbe
rol
movhps
push
daa
icebp
cmp
ja
and
jmp
add
push
std
push
mull
lods
xchg
leave
mov
ljmp
bound
xchg
inc
into
js
ds
or
mov
sbb
jne
pop
fs
jae
push
xor
xchg
jns
fs
popa
mov
fs
fwait
mov
xlat
add
mov
loopne
cltd
imul
inc
xlat
fyl2xp1
inc
repnz
mov
mov
pusha
add
and
scas
jns
jbe
out
pop
inc
cmp
mov
stc
dec
pmaxub
jge
addr16
sbb
sub
dec
stos
adc
into
xchg
sarb
inc
in
or
xchg
adc
mulb
cltd
xor
push
daa
add
mov
or
inc
and
adc
popa
mov
stc
or
push
pop
push
jmp
mov
adc
rcrb
test
or
test
xchg
gs
cld
hlt
aam
sbb
jp
pop
les
ret
cmp
dec
and
dec
ds
xor
dec
mov
pop
xor
and
sub
fiaddl
push
cmc
mov
and
pop
les
cmpsl
movsl
sbb
mov
push
and
nop
or
test
xor
jge
mov
push
jne
xor
sbb
ja
xor
jecxz
inc
imul
adc
jge
add
fwait
push
popa
mov
xchg
lret
inc
push
ljmp
mov
adc
mov
daa
mov
adc
andl
enter
test
or
je
mov
cltd
in
sub
loope
dec
mov
pop
mov
pop
pop
loope
inc
sbbb
ret
imul
dec
test
jb
sub
sbb
sbb
and
aaa
mov
pop
xchg
adc
popa
mulb
aaa
jmp
pop
sbb
or
fists
jns
fildl
jp
icebp
ja
sahf
add
xchg
cmpsb
cmpsl
fdivrs
dec
je
stos
pop
push
sub
add
int
push
xor
mov
mov
sub
imul
mov
cmp
in
cmp
fisubl
push
fxch
add
gs
cmp
add
xchg
adcb
add
fnsave
ret
jo
lahf
push
scas
mov
cmp
sbb
fadds
lods
out
outsb
xchg
pop
imulb
in
and
jno
xorb
call
mov
dec
lahf
int
and
add
sub
add
aaa
inc
ret
dec
aas
and
mov
jg
fdivs
mov
call
or
xchg
cltd
inc
pushf
leave
adc
push
int3
insl
in
mov
frstor
insl
pop
loope
in
in
cmp
mov
pop
and
jno
dec
push
ret
push
push
jge
push
notb
inc
stc
stc
xlat
or
fwait
cmp
shrl
cmc
pop
jo
adc
jbe
and
jmp
cmc
and
stc
fsts
sbb
push
pop
insb
or
testb
pop
movb
mov
femms
sarl
sarl
pusha
jne
daa
cwtl
rol
sbbb
in
or
jae
mov
idiv
loope
mov
or
pusha
sub
inc
icebp
cmp
leave
xchg
xor
jno
push
adc
jg
xchg
sbb
repnz
add
lods
or
es
xchg
leave
push
sahf
push
in
lods
jle
mov
or
adc
or
js
xor
fldt
and
popa
push
imul
pop
push
inc
imul
sbb
movsl
mov
mov
sbb
jnp
lahf
fidivs
loop
scas
sub
jae
loopne
push
xor
and
jp
and
mov
std
movsl
out
lret
mov
cmpl
in
push
adc
test
movsb
nop
outsl
mov
outsl
data16
std
pop
aas
xlat
call
push
scas
ficoms
cmc
push
push
sbb
pop
js
mov
push
outsb
neg
test
mov
push
jb
pusha
aaa
fcoms
daa
mull
pop
fnstenv
push
pop
cld
pop
add
inc
sarb
test
sbb
mov
jb
jo
jae
cmp
xchg
pop
roll
test
pop
sub
push
jb
mov
rolb
jbe
mov
and
inc
xchg
sarl
ret
push
movsb
imul
lods
inc
xor
inc
mov
rorb
dec
pop
mov
cmc
je
clc
jnp
mov
cmpsb
add
inc
adc
shl
mov
adc
test
xchg
cld
daa
shl
pop
cmp
sbb
mov
xor
pop
add
ljmp
sbb
hlt
mov
mov
pop
mov
daa
push
fidivrl
rclb
inc
dec
add
pop
jmp
xor
faddl
lods
divb
or
jne
call
push
andl
lea
mov
daa
mov
xchg
fstpt
orl
inc
pop
jns
pop
div
sbb
push
mov
and
jnp
cmp
scas
mov
push
mov
jl
sub
into
inc
cmp
lods
insl
dec
fs
icebp
pop
lret
or
pop
mov
or
or
stos
sbb
bound
adc
das
ficompl
xor
pop
inc
mov
mov
lahf
clc
cmp
xor
mov
fcompl
dec
nop
pop
adc
mov
in
fdivrs
aam
sbb
jne
ljmp
out
mov
call
push
fs
cwtl
lret
push
imul
cltd
xchg
int
inc
pop
mov
ret
jnp
sub
sbbl
and
pinsrw
daa
aaa
mov
jmp
into
cld
sub
pop
lret
sbb
push
aas
sti
scas
insb
pop
pminub
mov
adc
loopne
adc
movsb
xchg
mov
arpl
jl
stc
scas
lret
out
push
or
into
cli
je
adc
mov
and
jge
add
bound
mov
push
adc
fwait
xor
ror
pop
xor
jnp
and
mov
loope
pop
xchg
sbb
nop
xor
rcrb
sbb
mov
sub
sub
in
inc
inc
call
mov
pusha
out
es
xchg
cmp
arpl
or
pop
add
sbb
cmpsl
leave
inc
dec
cmp
jo
xor
jp
jl
mov
dec
cwtl
inc
or
in
mov
sti
pop
mov
leave
sbb
int3
js
insb
pop
ljmp
stos
lea
push
imul
cmp
push
test
mov
or
jle
divl
fs
and
std
or
clc
adc
stc
cli
push
xor
aam
adcl
jge
insl
push
movsb
add
xor
or
in
mov
cld
mov
adc
mov
mov
sbb
sub
imul
mov
std
std
subb
mov
dec
mov
aas
aad
push
int3
getsec
xor
push
lahf
movsl
test
enter
test
jge
frstor
fisubl
sub
adc
lcall
jbe
add
int3
ss
mov
scas
jb
pop
jle
xchg
mov
rol
xor
push
js
mov
sbb
hlt
imul
lret
sbb
sub
addr16
fbstp
insb
les
or
lds
mov
jge
push
jp
jle
cli
stc
mov
jb
loopne
dec
add
addr16
sbb
mov
aaa
mov
push
divl
ss
insb
mov
stc
push
pushf
push
dec
stos
jp
js
test
mov
rclb
push
lret
mov
mov
or
mov
test
lahf
mov
rol
je
aas
jp
out
rcrl
jb
outsb
ja
cmpsb
jl
inc
inc
inc
rcrb
adc
jb
push
dec
mov
nop
push
aam
insl
stos
sbb
clc
ret
adc
lahf
fbld
addr16
add
xor
jnp
testb
jno
and
shlb
dec
adc
add
jb
imul
sub
lcall
or
and
vsqrtss
xchg
aas
mov
push
push
mov
push
add
loopne
pop
jmp
in
scas
iret
std
lcall
sbb
sub
xchg
mov
lahf
in
sub
ficoml
mov
add
mov
cltd
rorl
ficoml
sub
bound
repz
add
pop
inc
test
jecxz
adc
test
adc
mov
and
mov
dec
sbb
pop
int3
push
mov
shrl
das
cs
cmpsl
jge
dec
mov
mov
lea
movsl
mov
and
jns
scas
jecxz
xchg
icebp
xchg
push
mov
sub
gs
dec
aaa
out
mov
and
movsb
or
in
movsb
xor
call
roll
push
popa
ror
int
lods
mov
fiadds
in
pop
outsl
inc
mov
outsl
mov
ss
inc
inc
rcrb
into
out
push
dec
movsl
xor
pop
mov
in
sbb
mov
std
subb
fmul
xchg
movsb
xchg
fmuls
vcvtsd2si
cli
xor
sub
arpl
push
mov
insl
decl
xor
hlt
inc
fmull
jl
jp
idivb
movsb
aad
or
dec
cmpb
add
pop
fisttpl
inc
shr
cmp
jnp
pop
xor
shlb
pop
mov
add
cli
sub
add
int3
dec
cmp
je
mov
add
clc
inc
or
push
adc
jge
imul
fwait
adc
push
xchg
jge
pop
popf
xor
mov
rorb
test
in
lcall
push
pop
insl
jg
mov
mov
mov
jnp
or
aaa
loopne
insl
cmp
ja
mov
push
push
jbe
test
dec
aad
movsl
mov
or
cltd
arpl
clc
into
popa
or
push
xor
and
jno
roll
icebp
and
rorl
test
or
pop
xor
aas
xchg
jecxz
jmp
aaa
sbb
push
add
jb
and
ficomps
jb
aaa
mov
xor
push
adc
insl
iret
jnp
mov
arpl
sub
dec
lea
push
cltd
mov
mov
testl
jb
popf
in
xchg
push
in
pop
xchg
les
mov
shl
imul
mov
and
or
pop
jno
pop
mov
repnz
jae,pn
out
daa
xchg
iret
das
inc
addr16
dec
xor
fcoms
adc
mov
mov
add
out
mov
icebp
pop
jns
das
int
xlat
push
and
outsb
jnp
inc
movl
add
adc
inc
leave
aad
ficoml
nop
out
clc
sub
or
dec
in
sbb
mov
inc
lahf
dec
cmp
int
cmp
movsb
push
sbb
mov
fistpll
gs
cmp
sti
sbb
push
xchg
add
adc
andb
es
cld
xchg
xor
jecxz
mov
repz
push
dec
pop
dec
std
outsb
lret
pop
xchg
mov
xor
js
xor
lret
add
xchg
fimull
ds
out
add
xchg
incb
mov
inc
insb
add
adc
add
and
dec
decl
inc
sub
adc
inc
and
loopne
pop
mov
in
xor
sub
sbb
sub
and
out
inc
or
pop
or
mov
push
repz
and
imul
mov
in
mov
dec
jbe
push
jmp
stos
faddl
jmp
mov
jae
mov
fs
cmpsl
lret
mov
js
orl
adc
and
mov
sbb
and
mov
jb
shl
dec
mov
enter
testb
adc
in
push
fisubrl
pop
out
pop
aad
mov
mov
out
clc
test
add
jp
test
ret
movsl
xchg
stos
inc
insb
add
fs
outsb
mov
push
mov
push
outsl
outsb
cmp
orl
shl
xchg
cld
das
or
in
mov
popf
mov
das
add
rclb
out
xchg
xlat
xor
cmp
mov
pop
fwait
pop
aad
and
repz
mov
rcl
int3
sbb
les
ja
inc
cmpsb
fidivs
cld
movsl
xchg
in
xor
push
int
pushf
or
xchg
ds
les
mov
arpl
popf
mov
lods
stos
test
les
test
out
fdivrs
mov
inc
mov
sbbb
ljmp
lds
std
add
mov
in
cmp
mov
push
push
adc
pop
cs
movsl
mov
jno
scas
xlat
popf
unpckhps
outsb
or
cmpl
mov
mov
pop
cs
sbb
mov
mov
ret
rcll
cli
aam
sbbb
adc
dec
mov
jmp
add
add
loop
lret
ds
fldcw
dec
popf
out
and
cltd
sub
addb
inc
mov
sbb
decl
add
out
jg
ret
les
sbb
jmp
and
icebp
or
mov
cli
movsb
or
adc
mov
imul
out
rcll
add
xchg
mov
cld
sub
lcall
mov
mov
pop
push
movsb
and
mov
or
int
ret
inc
les
imul
or
push
adc
shl
dec
pop
leave
dec
jno
icebp
ret
xchg
mov
stos
jo
adc
call
outsb
add
jl
and
popa
popl
adc
scas
xchg
and
out
sbb
and
inc
ljmp
mov
gs
push
and
dec
dec
dec
add
inc
jo
xchg
pop
lods
jmp
sub
movsb
mov
pop
mov
sub
sub
call
or
dec
mov
faddl
pushl
or
test
test
mov
add
sti
repz
inc
fsincos
sbb
sub
or
fadds
cld
insb
cwtl
fsubrs
adc
dec
cwtl
push
adc
cli
mov
sub
mov
rcl
jle
jns
or
sub
incb
adc
or
dec
pop
push
les
xor
xchg
iret
sahf
xor
mov
sbb
cltd
data16
aaa
adc
fstps
mov
jns
mov
aad
sbb
hlt
mov
push
jl
mov
outsl
mov
pop
push
dec
add
into
pop
cmp
sub
aam
cmp
imul
cmp
addr16
mov
stc
das
xchg
pop
jl
mov
or
lret
movb
popa
jmp
aam
arpl
movb
stos
movsl
cmpl
in
xchg
inc
cli
xor
pushf
lret
mov
sub
movsl
movsl
pop
pop
out
push
ja
filds
push
adc
dec
xor
mov
pop
test
aad
mov
out
xchg
in
push
xor
cld
iret
pushf
pop
pop
bound
int
gs
push
cmp
and
es
sbb
out
or
inc
stos
stos
cmp
lock
jbe
cmp
adc
aam
xor
sarb
ljmp
aam
scas
dec
mov
cmp
push
sub
aad
sbb
daa
test
xchg
das
push
pop
jl
bound
cli
and
bound
sbb
stos
push
mov
lret
fnstcw
and
popa
int3
xchg
mov
daa
sti
push
sub
and
xchg
addl
push
pop
mov
pusha
fisttps
cmp
insl
add
cmc
push
sub
std
outsl
mov
icebp
inc
cmpsb
jge
cld
dec
ret
pop
xor
xchg
mov
sub
sbb
pop
shrb
push
test
sub
arpl
fiaddl
mov
lret
cmp
mov
enter
sbb
xor
lods
push
loopne
xor
adc
enter
mov
jb
mov
fwait
mov
mov
mov
sahf
push
xchg
orb
inc
adc
stos
ret
out
clc
and
jbe
addr16
push
fwait
lods
jae
dec
lea
pop
or
sub
mov
arpl
pop
push
popf
xchg
inc
insl
jne
repz
xchg
sbb
xor
dec
or
mov
aad
je
test
arpl
dec
jmp
xchg
cmp
xor
jbe
dec
cmp
ja
dec
push
insl
sub
mov
call
mov
gs
lea
lret
out
sbb
cmp
ret
pop
mov
xchg
in
lret
xchg
and
inc
popf
xor
jo
fbstp
push
add
or
ja
movsl
dec
pusha
cmp
cmp
loop
mov
scas
insl
adc
movsl
nop
fstps
lret
in
or
rorl
push
movsb
loope
jecxz
xchg
fdivrl
xor
arpl
gs
and
and
push
idivl
ljmp
dec
jle
and
cmp
int
xlat
push
pusha
ss
push
mov
pop
int
ja
xlat
movsl
ja
imul
das
out
faddl
and
dec
out
dec
push
stos
push
and
mov
mov
sub
in
xor
pop
jecxz
fists
or
mov
mov
ds
xchg
cmp
jmp
jecxz
inc
push
out
mov
push
int
test
adc
sbb
dec
inc
xor
repz
or
mov
loopne
and
adc
inc
push
mov
cmpsl
lods
pop
sbb
mov
insl
popf
add
ss
pop
sub
iret
push
push
sub
enter
sarl
call
repz
pop
jmp
sbb
aaa
and
je
jmp
lds
xlat
push
imul
and
jecxz
cld
out
cmp
push
aam
movb
cli
lods
cmpb
sub
cs
push
mov
cli
add
dec
je
push
scas
sub
aaa
mov
cmpsl
or
and
jne
testl
mov
jo
cmp
jo
jg
and
sahf
jb
sti
das
push
or
cmp
add
daa
lret
insl
pop
dec
jge
cmp
repnz
cmp
aad
das
lock
xor
stos
sub
sbb
popf
xor
xchg
pop
outsb
inc
adc
in
add
inc
cmp
lahf
mov
push
movsb
mov
call
xor
dec
inc
mov
pop
cs
adc
ss
stc
dec
iret
iret
jl
push
pusha
push
xchg
sub
mov
loop
arpl
int3
outsl
mov
ljmp
mov
jl
xchg
in
mov
imul
leave
dec
fs
push
shll
or
mov
in
mov
fistl
rcrl
in
dec
aam
mov
mov
or
cmp
divl
mov
xorb
outsb
add
adc
out
lea
daa
sbb
and
ja
xchg
mov
fbstp
mov
mov
sub
ss
mov
sbb
es
fstl
faddl
adc
jmp
adc
or
test
rorb
fldenv
sub
pushf
adc
pop
jge
mov
test
dec
pop
mov
push
repnz
ror
add
dec
int
popf
jge
push
in
dec
popf
rorl
sbb
in
dec
jns
sub
divl
adcl
int
jp
in
test
sbb
cmpsb
mov
and
js
int3
dec
mov
fwait
cs
stc
daa
pop
mov
or
or
shll
and
push
in
inc
call
gs
loop
psrad
dec
or
add
sbb
jmp
inc
mov
daa
xchg
sub
push
and
or
ret
mov
jg
sbb
inc
cmp
mov
xchg
lds
ret
adc
lds
fmuls
push
fstp
arpl
push
shrl
imul
out
pushf
pop
add
sti
ret
cs
jae
pushf
stos
pop
fstpl
jecxz
add
and
mov
cmc
sub
ljmp
pop
adc
aaa
and
or
push
adc
mov
lock
xchg
stc
sar
jnp
add
adc
pushf
xlat
pop
add
testb
inc
loope
mov
mov
nop
out
xor
mov
scas
loop
xchg
jp
xlat
cwtl
out
ret
popf
xchg
inc
mov
testb
xchg
popf
xlat
or
gs
sbb
xchg
fwait
jno
enter
or
loope
clc
cli
push
leave
cltd
pop
ss
or
mov
js
pop
call
mov
cmp
pushf
dec
paddw
lea
stc
jl
xchg
mov
movsl
adc
dec
push
loope,pn
cmpsl
fimull
xlat
icebp
fidivl
xchg
jb
push
adc
cli
jge
in
les
dec
jge
stos
nop
or
push
gs
mov
dec
popa
andb
lahf
cld
in
out
xchg
sbb
popf
jg
gs
push
jmp
add
pop
sub
call
pop
push
loope
xor
mov
negb
scas
adcb
cmp
adc
call
xlat
sbb
inc
cs
mov
or
jnp
out
or
lods
hlt
sbb
call
daa
jb
xchg
fwait
xor
movsb
outsb
jg
lds
les
ljmpw
mov
lcall
lcall
mov
dec
pop
das
enter
dec
test
cmp
sti
pusha
mov
cmpsl
test
push
rorb
push
lret
pop
in
out
scas
ret
lock
mov
mov
xchg
pop
mov
mov
testb
jae
mov
cmpsb
js
push
jno
push
iret
mov
enter
ss
inc
sbb
aas
dec
loopne
es
push
sbb
push
les
enter
fiadds
movsb
jp
pop
mov
mov
ljmp
adc
sarl
jg
jns
or
das
pop
std
mov
cmp
add
lahf
stc
xchg
setp
add
ret
cmc
popa
xor
mov
inc
push
jge
bnd
std
inc
rorb
add
je
roll
or
mov
mov
jl
jmp
out
cmc
movsb
add
push
fimuls
repnz
mov
aad
mov
js
pop
mov
jmp
cmp
jns
sbbb
cli
xor
in
mov
repz
sub
sub
sbb
push
ss
push
sub
js
cmp
dec
push
jmp
fiaddl
mov
mov
add
or
or
mov
xchg
into
pop
xchg
adc
lea
push
mov
fs
sahf
out
inc
and
stos
mov
inc
adcb
and
clc
push
jg
nop
cmpsl
xchg
push
stc
jb
gs
aaa
cmp
push
hlt
push
sbb
xchg
jl
out
movsb
adc
xchg
pusha
int
ret
in
push
shlb
cmpsl
sbb
fcmove
jg
call
xchg
mov
push
jb
mov
pop
jmp
push
sahf
insb
imul
clc
push
adc
dec
scas
or
jbe
lcall
or
sub
sbb
lods
hlt
pop
sub
adc
jge
fdivs
fisubrs
jno
push
test
mov
push
xor
or
sti
push
mov
bound
into
js
mov
dec
add
or
cmp
mov
mov
es
fldl
or
push
pop
data16
or
js
or
sub
mov
clc
vpclmulqdq
pop
adc
pop
cld
jb
xchg
dec
pop
push
dec
bound
push
jecxz
mov
ds
bound
adc
jle
jle
shlb
push
scas
cs
int
inc
fdivp
cmp
mov
mov
cs
jns
adc
push
shrl
or
cmpsl
ljmp
sbb
sub
ficoms
filds
cmpsb
pop
xor
loopne
enter
scas
loope
mov
mov
daa
lret
jne
xor
pop
popa
mov
sbb
xor
xor
repnz
lcall
decb
xchg
int3
inc
dec
adc
xor
test
push
bound
scas
mov
aaa
rorl
sbb
sub
jo
fs
test
xorl
push
or
mov
adcl
fbstp
in
mov
dec
xor
xor
dec
and
and
add
test
lret
jl
adcb
jecxz
rcll
arpl
mov
sbb
xor
mov
fwait
test
dec
daa
sbb
xor
out
jno
test
mov
loope
pop
xchg
push
jae
cmp
or
gs
imul
lret
sahf
test
add
jbe
pop
push
lahf
in
pop
push
cmp
std
sub
inc
xor
movd
and
push
icebp
push
xchg
mov
push
xor
xor
cmp
out
dec
ja
xchg
mov
mov
arpl
pop
sbb
adcb
fnop
fwait
pop
mov
mov
and
jbe
mov
add
sub
fnstenv
test
xchg
es
aad
movsl
andl
cltd
test
pop
movsl
mov
aam
inc
pop
mov
mov
fbld
push
xchg
outsb
cli
push
bound
repz
jp
jns
lds
sti
cli
rcrb
iret
or
lret
loope
push
sub
xor
jl
sub
xor
std
mov
mov
pusha
sbb
out
lret
stos
mov
adc
push
aam
test
push
leave
mov
outsb
test
std
add
andl
cmpb
loop
cld
es
pop
enter
inc
jmp
push
adc
jbe
inc
push
fcmovu
jns
cmp
mov
add
add
mov
xor
jg
imul
mov
arpl
bound
xor
clc
lods
fs
jo
mov
fcomps
fisttps
in
out
jno
cwtl
xchg
xchg
adc
mov
js
lds
xchg
mov
and
rcrl
out
insl
mov
in
push
hlt
nop
jg
call
sbb
popf
sbb
out
push
or
xor
sbb
sub
int3
adcb
or
push
xor
shlb
or
out
cmp
mov
js
addb
cmp
mov
or
adc
out
stos
insl
cmp
xchg
jae
jbe
mov
sbb
stos
and
and
adc
stos
push
daa
xor
js
push
adc
mov
arpl
add
cld
shlb
lods
jbe
pop
sub
jae
mov
fsubrl
push
sbbl
sub
mov
mov
push
cmp
jmp
lea
xchg
lret
lods
rcl
xor
pop
xor
or
push
insl
cli
xor
and
jbe
mov
dec
clc
repz
xorl
mov
lods
cs
jmp
add
sbb
pop
and
pusha
jo
mov
xchg
addr16
lcall
and
rol
hlt
pop
sbb
decb
jge
lret
lods
jbe
and
cmpsl
repnz
add
aaa
stos
jp
out
sbb
pop
pop
orb
or
or
sahf
mov
insl
cmp
mov
je
push
aam
and
sahf
insl
pop
mov
and
sbb
cmp
mov
jge
add
push
pop
aad
mov
clc
in
in
inc
aam
xor
xchg
out
or
push
out
sub
inc
imul
das
loopne
lea
push
pop
dec
iret
nop
mov
sbb
mov
fidivrs
pop
sub
pop
pop
jbe
add
cli
mov
jbe
cmc
ljmp
outsl
popf
rolb
in
lea
repz
test
or
and
cli
shll
stc
ljmp
js
scas
inc
jl
les
mov
cld
inc
mov
stc
jg
daa
fdivp
push
in
insl
out
adc
daa
cmp
out
push
ss
sbb
jg,pn
imul
mov
mov
hlt
aaa
test
push
mov
push
getsec
mov
inc
mov
cmp
and
jl
adc
ja
or
pop
add
clc
mov
jnp
mov
inc
aam
outsl
mov
mov
mov
clc
dec
xor
js
rclb
jns
or
cmpsb
pop
mov
pop
stos
dec
pop
and
mov
ljmp
xchg
stos
pop
mov
jmp
jmp
mov
lahf
inc
repz
clc
xlat
push
sbb
aam
fwait
pop
push
push
cmc
adc
jg
jp
dec
loopne
jnp
xchg
in
fwait
movsb
sub
sub
push
mov
mov
out
and
adc
pop
dec
cmp
mov
lea
out
pop
shll
mov
jl
adcl
icebp
jle
xor
pop
xchg
sbb
imul
mov
movb
mov
xchg
cs
stos
stc
or
pushf
and
incl
ror
repz
jle
xchg
test
mov
scas
push
jecxz
fnsave
dec
and
ret
or
jnp
xchg
xchg
jae
cli
roll
xor
loop
imul
push
jle
and
imul
mov
int3
mov
inc
aaa
orl
loopne
lea
cmp
pushf
pop
inc
stos
lea
imul
add
flds
xor
push
test
pop
mov
ret
bound
push
out
sbb
js
jmp
sahf
xor
mov
and
xor
dec
outsb
fmul
lcall
sbb
or
push
dec
je
adc
jle
inc
fadd
xchg
push
lock
or
stos
jbe
shlb
inc
outsl
hlt
push
and
stos
mov
mov
les
les
pop
fnsave
mov
jb
jp
test
push
pop
fldl
in
into
cmp
mov
leave
jecxz
xchg
lock
xor
stos
jnp
lock
xchg
cmp
push
in
dec
cmp
mov
add
aas
pop
cmp
cld
jb
imul
cmc
ret
adcl
or
and
push
push
cli
jecxz
mov
sbb
icebp
mov
std
cmp
ret
pop
loopne
int3
push
adc
cmpsb
mov
cltd
xor
loop
push
aad
pop
mov
imul
popa
and
push
dec
lods
rorl
adc
out
dec
jb
push
xchg
jmp
xchg
test
dec
mov
aam
cmp
cmpsb
jns
outsl
loop
leave
fidivrs
mov
enter
push
adc
sbb
fidivl
test
movsb
adc
sub
cmpsl
call
add
dec
and
push
ja
es
pusha
subl
xor
icebp
scas
ucomiss
or
out
push
inc
cli
clc
jecxz
js
loope
pushf
and
pop
mov
dec
mov
mov
mov
mov
cmpsl
neg
cmp
pop
mov
inc
push
mov
xchg
aaa
les
pop
mov
cwtl
lcall
daa
jmp
hlt
and
add
adc
jae
sub
xchg
fisubs
ja
xchg
jae
pop
mov
or
push
sbb
fincstp
mov
ljmp
sbb
cmpsl
int3
iret
jb
gs
loope
jns
sub
push
pop
inc
outsl
cmp
out
mov
adc
pop
loopne
cmp
xor
mov
sahf
ja
push
inc
jg
mov
cmc
sub
inc
mov
gs
dec
int
fucom
clc
dec
mov
sbb
or
loopne
adc
cmpsb
sub
ret
lldt
pop
loopne
pop
jae
xchg
lods
mov
mov
sbb
shr
mov
js
dec
push
pop
out
cmp
test
lock
out
loopne
shr
xor
movsb
data16
push
jge
fisubl
mov
adc
xchg
test
dec
leave
add
imul
test
and
das
lock
cli
daa
imul
jl
add
xor
lcall
sbb
out
lods
sub
mov
add
fwait
outsb
cmp
idivb
jle
leave
dec
inc
imul
add
push
sub
out
pop
jmp
push
popf
lock
dec
pop
xchg
or
jg
out
mov
mov
into
test
outsl
inc
mov
dec
sub
scas
addr16
sahf
lcall
into
frstor
jnp
lods
std
mov
sub
xor
add
xchg
aaa
sbb
jno
sbb
lods
and
out
negb
in
adc
ja
sub
repnz
jle
pop
pop
sahf
mull
jns
ja
ja
das
mov
iret
data16
call
mov
mov
sar
fldt
int3
popf
outsl
fsubl
add
pop
pop
shrb
mov
or
movsb
push
push
pop
imul
inc
fisttpll
mov
add
sub
sbb
xchg
lcall
out
mov
push
scas
cltd
adc
mov
sub
lret
gs
mov
in
push
xchg
icebp
fsubrl
adc
data16
inc
or
xor
imul
shll
ja
xor
cmc
mov
mov
add
mov
das
inc
xor
jo
stc
jp
jl
or
nop
sbb
in
mov
push
fdivl
and
test
cmpsb
jmp
cwtl
inc
rcrl
push
mov
inc
pop
ja
data16
pusha
push
xchg
mov
scas
cmp
inc
repnz
imul
adc
cmp
mov
xchg
dec
lods
das
sbb
dec
sarl
in
mov
jp
dec
outsl
jne
jo
incb
jno
int3
pop
pop
addr16
call
insb
mov
in
dec
cltd
push
movsl
jmp
mov
xor
out
adc
orl
ds
adc
pop
stos
jp
or
std
shl
xchg
inc
pop
into
jne
xchg
xor
shrl
iret
xor
sub
lock
xor
add
testb
jbe
nop
xchg
mov
pop
js
xchg
dec
xor
in
sbb
add
cmp
push
lock
and
pop
test
mov
sub
mov
fdivs
loopne
pusha
pusha
jae
iret
pop
imul
shll
push
push
xor
mov
and
aad
in
push
push
cmpsb
jmp
jle
test
outsb
mov
sbb
gs
xor
pop
test
rcrb
fldenv
and
push
jle
push
xchg
mov
mov
pop
adc
adc
inc
pop
cmp
stos
out
push
mov
inc
push
mov
sbb
mov
les
push
push
add
mov
shrb
or
push
lods
repnz
int3
inc
push
pop
cmpsl
das
mov
insb
adc
or
lahf
insb
sbb
js
cli
or
cltd
cmpsl
sbb
test
sahf
mov
jae
shll
xchg
dec
ret
jle
in
dec
call
xchg
repz
push
test
fisubrl
dec
rcrb
int
hlt
in
cmpsl
xchg
bound
insb
lahf
pop
sub
cs
insl
cmp
sbb
in
stc
lret
mov
pop
mov
and
sbb
pop
pushf
inc
sub
mov
or
xchg
outsb
into
insb
pusha
inc
xchg
ja
les
cmp
and
pop
lods
jge
arpl
jl
cmp
shlb
outsb
xor
aam
popf
pop
add
loopne
xlat
xchg
arpl
sbb
sti
adc
aaa
std
ret
int3
xor
xor
sub
sbb
mov
pop
jp
mov
test
cmpsl
xchg
data16
ss
xchg
scas
mov
xchg
add
sub
outsl
mov
or
push
mov
mov
js
mov
leave
aam
dec
inc
xchg
adc
popa
lret
jp
lret
jmp
add
nop
push
jl
in
adc
lret
xchg
inc
getsec
fsub
cmc
stos
fcoml
push
inc
pop
and
das
pop
int3
pop
inc
and
mov
ficompl
cmp
jl
jns
shl
fisubl
adcb
xchg
cmp
loopne
testl
sub
mov
and
daa
mov
mov
ja
cli
and
pop
jp
sub
sub
outsl
lods
adcl
pusha
test
je
out
push
adc
and
mov
xchg
andb
pop
xchg
scas
fisubs
push
add
stos
jo
insb
mov
jb
push
lock
jo
sbb
inc
in
cmp
out
sub
fisubs
notb
push
leave
lods
aad
mov
xchg
or
sub
cmc
inc
outsb
cli
loope
arpl
sbb
out
sti
jg
xor
push
mov
mov
adc
call
cs
repz
aad
aaa
test
adc
negb
mov
or
andb
sahf
sub
xchg
imul
popa
adc
dec
mov
and
sub
adc
je,pn
push
sbb
jb
popf
repnz
mov
adc
sbb
out
sub
aas
mov
mov
arpl
pop
sbb
add
je
cld
push
roll
outsl
and
pop
cmp
sub
call
jle
cmpsl
iret
xchg
dec
dec
jnp
dec
sub
and
jle
dec
cmp
cmpl
fisttpll
sub
in
les
call
pop
leave
inc
loop
sbb
pop
cmpsb
icebp
mov
mov
and
test
inc
es
mov
push
insb
xchg
jg
in
bound
dec
lock
aad
xor
xor
push
sub
mov
inc
sbb
pop
cmp
mov
orl
or
enter
jge
push
lahf
xchg
movsb
mov
scas
aas
fnsetpm(287
inc
decl
fdivs
pop
les
sahf
into
dec
fisubrl
adc
push
loope
mov
xor
jp
sar
push
enter
pop
xlat
shr
jecxz
push
lods
mov
aaa
lahf
lahf
imulb
mov
jl
inc
dec
sti
jl
adcb
popf
sub
inc
ss
je
sbb
out
adc
aad
xchg
jle
cmc
dec
adc
pop
pop
mov
jb
aam
out
cmpl
jp
mov
jo
lahf
mov
xor
jnp
hlt
imul
xchg
or
cmp
jb
xor
lret
mov
loopne
dec
popa
xor
jg
xchg
cmp
mov
mov
push
mov
jecxz
jle
xor
scas
and
pop
aas
jge
push
stc
daa
aas
fdivrl
out
xchg
out
rcrb
jnp
or
ret
inc
xor
mov
aas
mov
addr16
push
mov
push
xor
push
mov
cmp
je
pop
in
iret
jge
mov
or
sti
mov
xchg
push
outsb
lods
push
cmp
or
lret
stos
mov
pop
out
ret
std
xchg
mov
xchg
add
test
ja
cwtl
sbb
xor
push
sub
xchg
sbb
xorb
push
repnz
scas
rcrb
lea
xchg
aad
rolb
adc
cwtl
out
fldt
fbstp
inc
jnp
sbb
call
push
mulw
fwait
jg
inc
mov
mov
sbb
sbb
ror
mov
or
sub
sbb
ljmp
fiadds
rcr
jp
sbb
ret
imul
sub
les
xchg
xchg
cld
cmp
in
out
mov
mov
cld
stos
adc
sbb
loopne
jns
pushf
cmp
xor
dec
xchg
stos
aam
mov
sub
xchg
xchg
sbb
jae
xor
je
inc
xchg
ss
mov
push
mov
push
cmp
push
cmpl
mov
dec
sarb
and
xchg
loopne
xchg
andb
jg
fwait
xchg
push
iret
cwtl
mov
and
mov
sub
mov
arpl
sahf
adc
xor
test
mov
mov
pop
fdivrl
lret
xor
inc
lods
sbb
nop
cmp
test
jnp
icebp
mov
or
imul
dec
jmp
imul
and
mov
inc
or
into
dec
and
movsl
lahf
sub
pop
dec
or
addr16
cltd
test
popl
stc
add
lcall
js
xchg
mov
testl
stos
mov
stos
jno
push
dec
inc
mov
fwait
inc
stc
xchg
shlb
inc
into
mov
icebp
jns
push
mov
and
aad
das
fisttps
push
push
ljmp
pop
in
mov
rcll
ret
sar
addr16
jbe
pop
sbb
and
in
xchg
cmp
push
pop
pop
fdivp
and
outsb
mov
mov
iret
inc
mov
sbb
fmull
shl
iret
stos
or
pop
cli
outsb
cld
test
push
mov
shlb
mov
cmp
xchg
lcall
ret
mov
js
es
sub
add
sub
scas
mov
fistl
push
pop
xor
inc
sti
xchg
imul
lret
add
xor
add
shll
scas
add
jmp
lock
xor
imulb
pop
and
push
inc
adc
insl
pop
lahf
mov
rorb
test
sub
mov
pop
mov
push
inc
leave
sub
mov
out
xchg
push
cmpsb
xor
xchg
adc
lock
jnp
mov
stos
loopne
sub
mov
sarb
shl
push
mov
ja
sub
neg
js
and
gs
fwait
out
lcall
fiaddl
push
sub
call
or
sub
and
mov
repnz
and
in
div
pop
adc
ja
jg
pop
sti
ret
rolb
sub
jge
loopne
dec
pop
mov
lock
xchg
sub
mov
in
mov
shrl
shlb
testb
mov
lcall
imul
imul
dec
inc
repz
push
add
stos
dec
out
jo
int
aaa
and
sbb
cmpl
jg
pop
mov
adcb
popf
movb
nop
push
xor
jae
in
or
out
sub
mov
add
jbe
mov
and
aas
cmpsb
out
mov
movsb
shll
in
xor
push
xor
cs
xchg
lock
mov
pmulhw
ljmp
xor
negl
adc
jb
cs
add
sbb
cltd
sbb
icebp
push
test
push
push
pop
inc
sub
jbe
add
mov
mov
mov
loope
inc
dec
sbb
adc
and
stos
fwait
int3
fdivrp
jno
aas
fs
lds
insl
rorl
pop
adc
cmc
adc
aas
sbb
rcrl
adc
adc
xchg
xchg
fistps
add
cltd
or
sbb
dec
jmp
push
jne
xor
inc
xlat
out
sbb
leave
aas
rorl
sub
jp
xchg
inc
push
loop
hlt
in
into
fnstcw
shrl
lods
jecxz
mov
adc
fucomi
aad
pop
pop
aas
push
jo
mov
inc
cmp
test
lahf
les
mov
push
fucomp
and
mov
loop
push
lods
push
add
mov
ljmp
nop
dec
xchg
mov
popf
mov
jbe
mov
sbbl
mov
lea
dec
lock
mov
loop
imul
jno
data16
out
in
je
xor
aaa
dec
addb
xchg
mov
add
jp
mov
inc
dec
pushf
aaa
pop
jo
rcl
es
ret
adcl
push
int
or
ret
ds
xchg
jl
inc
xor
dec
data16
lock
into
sti
and
push
mov
jae
push
scas
push
rdpmc
es
outsl
fwait
pop
jae
push
xchg
ljmp
addr16
xor
adc
bound
lea
jno
and
push
movsl
scas
loope
lods
insb
test
fwait
rolb
out
into
sbb
mov
sbb
mov
call
outsb
mov
shl
ss
insl
insb
mov
or
mov
push
dec
sbb
add
nop
mov
dec
mov
cmpsl
repnz
inc
inc
es
into
out
jge
loopne
add
push
pop
pop
sbbl
xchg
mov
fmuls
dec
out
push
adc
xchg
pop
hlt
daa
test
aam
retw
and
fcompl
sub
sbb
jae
xor
sbb
sub
jae
add
std
ror
jno
jmp
pop
lea
sub
lret
pop
rcrl
push
mov
fimull
pop
add
add
cmc
fs
pop
std
je
cmp
loop
and
loopne
imul
sub
adc
xchg
insb
std
pop
and
or
adc
push
daa
sub
cmpb
push
repz
test
js
inc
jae
jecxz
rclb
sbb
adc
into
addl
jg
xchg
inc
adc
pop
std
data16
shll
ret
xchg
addl
mov
inc
repz
lret
jge
cli
jb
xchg
jns
mov
fstpt
mov
loop
mov
sbb
xchg
xorb
mov
and
sub
mov
xchg
push
mov
push
sub
scas
leave
inc
adc
mov
lcall
stos
cli
jae
jmp
rep
je
sub
dec
mov
sbb
sbb
daa
pushf
fs
cmp
mov
sti
shrb
loopne
and
mov
adc
aam
adc
out
or
dec
scas
or
mov
cmc
or
rcrb
in
sub
cltd
dec
sbb
sahf
pop
and
dec
filds
std
cmp
dec
or
xor
cmpl
inc
popf
or
cmp
cmp
jb
mov
add
cltd
jmp
dec
lods
call
insb
cs
shl
scas
mov
rclb
adc
xchg
xchg
push
mov
cmp
sub
sbb
lea
fldcw
fs
movsl
inc
pop
push
cltd
or
and
ret
jo
xor
adc
adc
sub
xchg
cwtl
fisubs
add
pop
dec
mov
cltd
jo
mov
faddl
and
inc
shrb
subb
cmpsl
inc
into
cwtl
adc
insb
enter
addr16
clc
pop
pop
in
repz
xchg
int
adc
mov
addr16
cwtl
dec
in
xor
jmp
mov
subl
mov
jecxz
sahf
jbe
jo
fdivl
push
xor
inc
and
mov
cmp
aam
sbb
in
sbb
bnd
movsl
fcoml
mov
jg
ret
adc
mov
stos
in
add
inc
imul
xor
mov
sub
xor
ja
dec
jno
mov
mov
pop
jno
es
jg
and
cmp
sbbl
adc
popf
jae
mov
adc
repz
ficompl
stos
arpl
aam
aaa
cmp
ret
imul
mov
jae
xchg
shl
iret
xor
xchg
add
stos
in
add
out
mov
push
mov
push
xor
mov
and
mov
xorl
sbb
sti
data16
int3
add
cltd
push
pop
mov
fucomi
dec
sti
ljmp
int3
jns
mov
in
call
mov
dec
cmp
fistps
mov
and
pushf
rcr
stos
leave
data16
push
movl
orb
cmpsl
xchg
sti
jmp
push
test
arpl
cli
andl
mov
pop
dec
push
push
rolb
mov
fsubl
outsb
inc
ret
out
add
fsubs
xchg
test
cli
aam
and
add
or
push
insb
and
push
or
pop
jmp
ljmp
ficoms
mov
xor
inc
dec
jl
les
rcrb
xor
pop
and
idiv
mov
test
push
shlb
pop
ljmp
sub
and
jae
mov
push
js
cld
jmp
movsb
clc
enter
enter
jb
push
mov
mov
jo
mov
int3
and
pop
cmp
push
inc
jg
jo
fidivrl
jbe
mov
push
addr16
daa
and
jge
jmp
jge
insl
jbe
jb
loope
test
call
popf
cmp
xchg
mull
mov
mov
dec
repz
push
fimull
out
imul
dec
cltd
sahf
hlt
sub
loopne
or
cmc
mov
loopne
sub
pop
mov
das
jp
and
push
pop
or
inc
rolb
jae
mov
and
adc
cs
jns
adc
push
adc
pop
rcrb
data16
adc
push
xchg
aaa
cmpsl
imul
ret
and
mov
xor
fiadds
pop
mov
mov
arpl
out
mov
les
out
mov
pop
daa
mov
xor
cmpsb
jge,pt
add
in
lock
push
faddl
cmp
jae
repz
fidivs
ljmp
sbb
dec
adc
clc
jbe
add
imul
pop
jae
aas
dec
stos
ss
mov
lahf
push
inc
or
arpl
jl
aam
add
repz
ds
or
jns
cvtdq2ps
mov
inc
sti
and
jmp
decb
pop
push
jae
add
movsl
xchg
push
inc
je
pop
and
arpl
push
std
fistl
pusha
xchg
push
js
clc
leave
cmp
add
pop
mov
ja
hlt
lea
inc
cltd
aad
xchg
xchg
test
mov
jmp
std
mov
ret
or
jle
push
imul
push
mov
pop
and
mov
hlt
push
lret
push
xchg
imull
movsl
jbe
cld
jmp
sahf
cmp
xchg
outsl
int3
mov
sbb
in
outsb
stos
mov
mov
xlat
mov
repz
cmp
dec
lret
or
hlt
std
mov
test
mov
adc
cli
dec
leave
pop
lret
xor
subl
pop
and
std
dec
out
jp
cmpsb
add
mov
push
adc
mov
loopne
jno
dec
loopne
fsubrs
or
xor
mov
push
cmp
jbe
test
push
xchg
and
test
jl
sbb
dec
dec
dec
dec
cmpsl
sub
jae
inc
cli
insb
pop
sbb
clc
sahf
int
iret
cld
mov
xchg
jne
shrb
sti
sub
int
jo
push
lret
inc
movsb
sahf
sub
jne
push
das
pop
xchg
jae
pslld
in
cmp
sub
leave
or
xchg
xchg
rcrb
mov
addr16
push
movsb
pusha
rorl
dec
push
jae
stos
ljmp
and
call
rcrl
fs
cmp
jmp
pop
std
xor
pop
cmp
std
cmp
inc
xor
je
lcall
in
lds
xor
push
ret
int3
push
shl
repz
ret
outsb
push
mov
out
adc
sub
sub
mov
shrb
mov
ror
movsb
aad
jecxz
add
fs
mov
cld
sbb
and
test
sti
loopne
jno
and
jle
mov
js
cmpsb
and
add
addl
fcoms
or
stos
sbb
ljmp
dec
push
mov
xchg
pop
scas
push
mov
xor
stos
add
loop
and
mov
sub
xchg
dec
xor
sbb
les
ret
cmp
add
popa
sar
stos
mov
mov
shlb
popf
jg
adc
inc
arpl
fisttps
xchg
pop
fistl
inc
or
data16
push
cmpsl
sub
andl
pop
dec
iret
cli
das
mov
adc
pop
iret
dec
sbb
mov
push
adc
jnp
xchg
jae
push
test
sub
loope
push
les
add
faddl
pop
cld
pop
call
inc
flds
addl
xor
movsl
daa
mov
mov
inc
and
adc
repnz
xchg
cmpl
mov
mov
fwait
aaa
ja
or
cli
mov
test
cmp
cmpsl
clc
add
jg
sub
xor
mov
test
sub
mov
sbb
xchg
movsl
fildll
xor
into
lahf
fwait
or
fildll
gs
test
fwait
or
and
in
xchg
xor
gs
clc
cli
test
and
mov
cmp
cmc
pop
daa
inc
ljmp
push
dec
rcr
stos
sub
cmpsl
call
inc
adcb
sbb
cli
test
inc
xor
sbb
lret
ss
add
rolb
gs
or
not
cmp
cli
inc
enter
int
add
aad
ljmp
movsl
sub
pop
int
addr16
xchg
jne
aas
aad
popf
push
rol
ljmp
ds
mov
mov
roll
mov
cs
pop
repnz
stos
mov
fwait
jne
test
pop
adc
cli
sbb
inc
pop
jle
inc
jae
mov
cwtl
dec
popf
inc
sub
sarl
inc
aas
sub
push
adc
or
adc
les
sahf
es
scas
cmpsb
mull
and
sti
lahf
repz
leave
inc
jle
lret
rorb
add
ljmp
xchg
xchg
mov
aaa
mov
out
cmp
and
pop
inc
xchg
leave
cmp
or
out
pop
mov
aaa
xchg
adc
pop
pop
sub
mov
scas
roll
dec
cld
mov
imul
sbb
jge
mov
stos
out
xchg
mov
iret
fbstp
or
sbb
outsl
cmc
in
and
imul
mov
ja
jp
lock
aam
or
imul
pop
sarl
xorb
xchg
mov
pop
mov
out
incb
fildll
cltd
push
mov
lea
push
or
aas
stos
pushf
and
idivb
ret
cs
das
add
xchg
int3
cltd
inc
cwtl
mov
fcmovnbe
mov
sbb
fidivs
add
mov
jmp
subl
xor
out
aas
mov
inc
push
frstor
arpl
mov
add
jb
sbb
jl
out
xchg
mov
jg
sti
mov
xchg
adc
dec
pop
rcll
add
inc
adc
popf
mov
mov
mov
call
fmul
mov
cmp
or
in
or
xchg
mul
adc
notb
addl
add
frstor
or
pop
xor
pop
enter
fcoms
mov
cltd
fcoms
inc
hlt
adc
xchg
out
sub
mov
leave
stos
dec
push
sbb
leave
rcll
xchg
mov
into
outsb
push
cmp
xchg
mov
pop
fisttps
out
sub
adc
and
and
mov
lods
shl
lahf
call
mov
lods
inc
mov
xchg
pop
in
mov
add
push
lret
jmp
push
inc
pop
pusha
dec
xchg
cmp
push
popa
lcall
inc
ja
dec
mov
mov
add
jge
ds
pop
pop
lahf
out
stos
adc
xchg
or
adc
scas
sarl
orl
jb
loop
repnz
in
adc
cmp
lret
adcl
cltd
flds
or
lds
mov
mov
lret
push
inc
fiaddl
sbb
ja
aaa
test
lcall
popf
aam
testl
cvtps2pi
cmc
outsb
fadd
xchg
sti
push
bound
xor
testb
js
adc
ja
lock
shr
outsl
mov
push
data16
push
inc
repz
js
jne
sbb
xchg
loop
mov
sub
pop
xor
arpl
mov
in
ffreep
data16
jbe
mov
mov
aam
test
mov
insb
bound
sbb
xchg
inc
sbb
rorb
dec
inc
fldt
jnp
mov
mov
not
test
ret
mov
pop
or
ret
movsb
fnstenv
lods
mov
repz
sahf
mov
jecxz
ror
xchg
and
cmpsl
sbb
add
lcall
xchg
jle
xor
mov
loopne
icebp
or
mov
das
push
cmp
addr16
nop
inc
out
aaa
dec
aaa
jl
or
bound
jge
nop
test
and
lahf
shlb
cmc
test
cltd
jmp
sbb
leave
fcoml
xor
mov
out
jmp
jl
add
push
inc
jg
js
adc
pop
sbbb
push
push
out
dec
imul
sub
mov
fldenv
sub
lods
xchg
mov
or
into
add
xchg
adc
cli
dec
fimuls
loope
lret
mov
fcoms
mov
sbb
jae
mov
sbb
mov
mov
dec
fdivp
cld
loopne
dec
pop
and
cmp
jne
sub
xor
dec
mov
mov
push
jmp
insb
std
lds
push
sti
xchg
and
adc
jbe
push
mov
dec
sub
lahf
mov
test
test
mov
sub
add
imul
in
mov
inc
sub
push
shlb
loope
ljmp
add
aaa
mov
lea
cmp
jl
jns
fildl
pop
movsl
push
mov
mov
or
pop
dec
cmp
int3
xchg
jecxz
inc
jne
xchg
xchg
jge
mov
mov
lahf
sub
xor
loope
xor
sub
imul
sub
add
icebp
sbb
fsts
xchg
leave
or
push
enter
mov
pop
cwtl
pop
js
lret
add
aad
ret
pop
push
dec
adc
jge
sbb
or
lods
aad
andb
mov
sbb
vpunpcklwd
sub
push
data16
faddl
addr16
arpl
outsl
and
xchg
add
adc
shlb
sub
jge
in
sbb
loop
aaa
sbb
cli
sbb
sbb
ljmp
push
add
xor
adc
stos
subl
cld
sbb
cmp
lret
fidivrl
bound
mov
push
insl
cmp
movb
xor
add
mov
push
shll
or
cmp
xor
rcl
rcl
pushf
inc
rcl
lock
xor
sub
xchg
and
cmc
or
pop
jle
jns
pop
xor
jbe
pop
bound
add
pop
xchg
je
add
push
mov
mov
mov
add
mov
push
outsb
add
inc
xor
mov
outsb
sbb
pop
inc
mov
cmp
mov
xchg
add
jb
mov
jg
jle
push
inc
pusha
fistps
push
push
and
cltd
out
cmpb
dec
fnstsw
dec
fwait
mov
jge
sub
sub
jbe
popa
jmp
and
shll
ljmp
mov
mov
outsl
sahf
jno
inc
jmp
scas
rorb
fistpll
jle
lcall
lret
mov
cltd
negb
imul
or
inc
push
and
lahf
cmp
pop
push
popa
jns
adc
jg
jecxz
jge
jg
insb
popa
cld
jg
or
mov
push
pushf
int3
or
pop
cs
daa
or
cmp
inc
cs
inc
push
popa
sub
popa
and
daa
add
in
cs
fwait
mov
jnp
aad
in
mov
out
insb
dec
sarb
fldcw
add
xor
adc
es
jne
xor
sub
stos
xchg
imul
mov
add
add
adc
adc
fcoms
test
loop
pop
es
loop
pop
xchg
xor
outsb
int3
dec
jg
xchg
orb
push
jl
jecxz
in
jl
das
cwtl
lods
push
cmc
iret
in
fwait
pop
mov
and
or
out
cld
add
je
popf
fsubrs
stc
out
inc
or
subb
stc
sub
aad
loopne,pn
mov
xor
mov
mov
or
mov
cmpb
test
sub
insl
lds
pushf
subl
mov
rolb
rcl
add
inc
arpl
lret
mov
jmp
dec
rclb
xchg
sbb
rorb
insw
add
ds
adc
aaa
test
mov
sbb
inc
mul
ficoml
test
push
insb
stos
mov
xchg
aaa
mov
pop
in
rorb
or
pop
or
lock
das
dec
fisubrs
fidivs
push
mov
and
lods
nop
push
mov
fdivp
push
pop
dec
loopne
dec
lret
iret
push
cmpsb
cld
or
je
mov
dec
pop
test
testb
pop
arpl
das
dec
in
dec
add
out
add
bound
aas
xchg
sub
repz
pop
mov
aam
cld
jmp
or
fadds
ds
and
pop
paddq
aaa
nop
push
and
jmp
imul
pop
add
jb
ss
jbe
pusha
sti
or
cmp
int
push
mov
cmp
test
cld
xchg
inc
sbb
xchg
push
lea
dec
andb
cmp
xchg
mov
or
and
dec
adc
push
shrb
cmp
jmp
cwtl
repnz
xor
shlb
aam
fnstsw
pop
xchg
in
inc
add
xchg
clc
aas
aam
pop
in
lea
and
lds
ds
cmp
mov
cmp
in
push
les
pop
mov
ljmp
pop
mov
loopne
jmp
mov
mov
sbb
leave
adc
push
mov
les
adc
out
xor
dec
pop
add
add
ret
mov
data16
xor
in
sbb
dec
daa
pop
stos
lret
cmpl
je
xor
dec
push
xchg
mov
pop
add
cs
xor
out
test
cmp
or
cmc
pop
jnp
in
sbb
or
es
add
test
movsl
popf
ds
xchg
xor
in
icebp
dec
gs
xchg
cmp
push
stos
or
call
movsb
jg
mov
lods
cld
or
jecxz
sbbb
xchg
fsts
aaa
mov
out
cltd
loop
or
jp
pop
ror
test
add
adc
lcall
js
xor
je
lret
or
jnp
adc
xlat
sub
or
rorb
lds
mov
shrl
jae
xchg
nop
and
fistpll
adc
fsubrl
mov
leave
out
or
in
test
dec
jae
lock
rorb
mov
sbb
hlt
add
adc
jns
orb
xor
into
adc
imul
dec
scas
mov
mov
xor
xchg
mov
out
fdivp
nop
push
cmp
stc
cmp
xchg
rep
in
rcrl
push
pop
stos
ret
ss
notl
push
ret
sub
imul
cwtl
bound
sub
xchg
stos
cltd
cli
mov
cltd
pop
ja
lods
xor
mov
cmp
andl
cmpsl
pop
or
lahf
mov
inc
mov
sub
das
cmc
iret
or
ret
aas
mov
repz
pop
bound
sub
lods
add
shll
and
xor
push
int
inc
repz
hlt
repz
xchg
js
adc
pop
push
out
ja
or
lock
pop
rcrl
test
pop
hlt
pop
aam
icebp
pop
ret
pushf
ss
iret
test
outsl
pop
je
dec
xchg
inc
loopne
mov
in
xchg
push
aaa
jl
mov
pavgusb
jp
imul
hlt
imul
leave
cmp
mov
jmp
out
fs
cltd
in
jne
cmp
insl
clts
sbb
push
dec
or
mov
adc
add
sbb
jb
xchg
js
and
inc
push
cltd
push
lcall
jle
nop
push
xor
jmp
sub
ja
sub
push
push
cmp
sbb
data16
imul
mov
stos
push
dec
xchg
out
xchg
pop
aad
mov
cmp
push
inc
mov
ss
jmp
stc
das
roll
inc
and
std
or
xor
popa
xor
jae
mov
imul
jg
dec
outsb
push
cmp
je
push
in
out
in
jle
ret
pop
xor
stc
cltd
cmp
aad
add
lods
mov
xor
data16
loopne
add
js
push
or
xor
dec
xor
sbb
scas
adc
leave
jg
jno
fwait
in
xor
gs
loop
in
xor
inc
and
repz
pop
fldl
mov
mov
test
gs
and
sbb
sbb
push
lods
data16
stos
pop
sahf
dec
push
xlat
push
movsl
inc
in
dec
mov
push
pop
sbb
das
mov
push
push
push
in
and
popa
adc
cmpb
xor
dec
add
divb
fcoms
jecxz
rclb
push
and
pop
lahf
and
xchg
add
hlt
outsl
xchg
jb
cmp
sbb
fdecstp
lea
push
sbb
jl
into
push
jg
push
out
and
or
mov
or
cmp
in
and
inc
insb
push
mov
add
js
sahf
mov
enter
xchg
hlt
lret
into
and
mov
lods
scas
push
int3
xchg
in
sub
mov
decb
sub
push
mov
sbbb
jne
in
push
xchg
gs
or
es
sbb
outsl
sub
mov
and
push
orl
sti
fidivrs
je
mov
pop
dec
lahf
xor
lret
stos
and
pop
shrl
scas
ret
dec
cmpsl
mov
jb
or
cs
stc
push
cmp
adc
lds
aad
cltd
pop
mov
mov
cmpl
testl
pop
adc
add
pop
or
and
in
add
xlat
int
fwait
out
cld
and
xor
loopne
or
dec
and
dec
rorl
out
jecxz
cwtl
xchg
dec
and
sti
xor
fs
mov
sub
cmp
push
cmpb
mov
mov
mov
push
mov
mov
pop
sub
sahf
adc
imul
mov
lods
adc
push
xchg
addr16
sub
ret
xchg
xor
rcrl
push
mov
cmp
andl
or
xor
inc
cmpsl
arpl
aas
std
add
outsl
push
stos
jge
and
pop
xor
lds
clc
xchg
js
fildll
mov
jns
pop
cmp
xchg
inc
dec
push
je
jle
insb
jmp
jl
mov
sbb
inc
dec
cmpsb
mov
data16
cmp
nop
jle
hlt
inc
add
xor
loope
pop
mull
pusha
cmp
out
dec
mov
scas
pop
pushf
sti
sti
imul
xor
ja
xchg
insb
or
jb
inc
xor
mov
fimuls
cmp
ret
stc
ljmp
xchg
fwait
inc
test
sub
repz
enter
mov
frndint
sbb
sbb
movb
ffree
adc
jp
mov
cmp
dec
add
aas
out
inc
test
lea
xchg
adc
mov
inc
or
push
mov
cmc
jp
adc
push
imul
outsb
stc
jl
in
push
push
or
loop
xchg
cmpsl
inc
add
loope
pop
xchg
cmpsb
adc
inc
pop
mov
push
inc
pop
push
cmc
mov
jg
movups
xor
xadd
mov
or
in
push
jecxz
jae
push
stos
and
cmpsl
repnz
inc
mov
cmp
in
xor
lcall
dec
dec
xlat
rorb
push
dec
movsb
out
sti
hlt
insb
dec
andl
add
fstpt
ror
pushf
repz
jns
arpl
mov
push
cmc
orl
addl
inc
iret
shll
pusha
bound
nop
jmp
in
xchg
pop
adc
loopne
cmp
fcmovne
xchg
shll
in
out
cmp
lock
test
ljmp
rcl
int
sub
ret
enter
rorl
mov
pop
out
jo
xlat
out
dec
mov
or
jae
and
jb
cmc
sbb
push
out
aaa
leave
enter
pop
stos
pushf
jns
sbb
sub
fcompl
mov
dec
cli
andl
mov
cmpb
mov
adc
sbb
or
jnp
sbb
das
cmp
mov
lret
cld
sahf
mov
adc
lods
imul
scas
mov
xchg
fwait
out
inc
out
faddl
popa
pushf
out
js
call
cmp
push
cmpsl
mov
jb
or
iret
mov
and
xchg
and
cmp
ret
stc
mov
int3
subl
inc
iret
pop
xor
xchg
add
iret
push
or
in
mov
sub
insl
jb
in
push
xorl
daa
adc
cli
dec
inc
and
push
jbe
mov
and
jbe
int3
pop
sub
pop
shll
pop
mov
test
adc
clc
lcall
xchg
pop
pop
mov
push
inc
mov
pop
pop
cmp
dec
pop
push
loop
push
aaa
stos
repz
shlb
push
inc
js
call
stos
cmpl
sub
jmp
sbb
adc
movsb
jns
mov
hlt
cmp
outsb
jno
pop
ret
test
scas
aam
repz
out
ffreep
cmp
test
xchg
into
xor
mov
loop
pop
cmp
lock
sub
cmp
jmp
jo
ret
test
xor
cmp
pushf
test
or
es
sbb
cmpl
jle
inc
das
ret
push
jae
or
cmpsl
cmp
pop
nop
sub
add
js
dec
test
cmpsb
ret
icebp
push
push
sbb
dec
mov
mov
sbb
dec
cmpsb
jp
dec
inc
popf
test
push
xchg
jg
push
fldl
push
push
cmpsb
jns
movsl
push
sub
mov
loope
cmpsl
in
xchg
mov
mov
add
movsl
mov
pushf
pusha
sarb
sti
frstor
sbb
cli
jno
das
adc
std
cmpsl
cmp
push
mov
cltd
insb
sbb
das
pop
xchg
jl
inc
xchg
mov
xor
sbb
sbb
aam
pop
mov
in
push
fldl
movb
jne
push
arpl
enter
rcll
pop
js
scas
add
mov
clc
cmpl
add
andb
push
aam
mov
dec
fcoml
scas
push
fcoml
and
and
pop
das
jb
lahf
inc
sbb
xchg
out
lea
add
incb
sti
es
rorb
xlat
call
lods
adc
nop
push
dec
lahf
add
jmp
into
test
imul
sbb
dec
clc
xchg
pop
and
into
mov
jmp
aaa
es
pop
mov
and
push
gs
clc
das
sub
lcall
loopne
sti
std
cmpsl
mov
adc
sarl
popl
enter
xchg
ljmp
mov
inc
pop
pusha
clc
add
xchg
rcll
fadd
fstps
mov
cmp
push
push
sar
inc
lret
cmc
shll
in
add
test
imul
rcl
inc
es
adc
aas
arpl
cli
or
xor
cmp
popa
dec
ficoms
out
pop
mov
pop
pop
out
cs
push
and
cmpsl
and
mov
sub
xchg
pop
lods
dec
test
and
hlt
mov
cli
daa
inc
dec
outsb
mov
out
add
fsubl
cmp
pop
jb
fs
insb
lret
sub
movsb
pushf
pop
xchg
pop
out
mov
insb
pop
lret
fldenv
test
sbb
rclb
daa
xor
push
jnp
scas
sti
aam
adc
icebp
push
mov
lods
insl
add
div
stc
push
dec
outsl
ljmp
movups
cmp
out
mov
lea
orb
cmp
fwait
out
sub
nop
repz
pop
nop
ss
orl
xchg
dec
cmp
inc
mov
bound
sbb
sub
lcall
lock
push
mov
hlt
les
inc
dec
mov
dec
inc
insb
jge
jns
lea
test
mov
push
jo
xchg
sbb
decl
scas
add
repz
insb
or
mov
fwait
dec
cmpsl
lods
je
pop
mov
sbb
scas
scas
js
nop
mov
sahf
test
xor
mov
sbb
xchg
lea
adc
daa
push
xchg
adc
daa
lret
popf
mov
ds
testb
push
pop
push
mov
divl
out
shl
inc
icebp
outsb
out
imul
ljmp
xor
fidivl
pop
jnp
jne
fsub
rcl
dec
xor
cmp
push
mov
xchg
inc
ret
cmpsb
mov
les
add
sbb
dec
push
gs
mov
mov
call
cld
add
inc
dec
pop
ja
ficomps
aas
jns
or
leave
notb
test
push
lods
xor
inc
add
pop
mov
fcomps
mov
add
test
mov
mov
jnp
dec
dec
leave
cmp
sarb
push
adc
enter
in
sub
fldt
in
sahf
push
lret
mov
loop
outsl
push
sbb
leave
insb
jbe
mov
movsb
icebp
adc
aaa
std
pop
xor
dec
fmuls
or
xchg
jns
divb
aad
sub
imull
aad
loope
rorl
aaa
inc
sbb
outsl
into
or
ss
lahf
or
insb
in
pop
push
leave
inc
add
mov
scas
dec
imul
fldenv
pop
das
lds
cld
xor
in
ret
clc
dec
or
pop
inc
sbb
cmp
clc
lock
gs
test
inc
push
dec
push
enter
outsl
sarb
sarb
jnp
inc
or
scas
adc
cmp
cmp
mov
jl
mov
xchg
stos
or
and
lock
or
fnstsw
cs
dec
push
lock
out
test
mov
jg
leave
hlt
sub
xor
xor
sub
xchg
int
test
and
in
sub
cmp
pop
push
add
test
xor
push
aam
push
popa
sub
fdivp
ret
cltd
push
push
mov
sbb
adc
sahf
and
lcall
daa
cmp
or
mov
xor
cmpsl
xor
leave
jo
out
leave
mov
hlt
push
jl,pt
ret
icebp
out
cmp
pop
int3
push
xchg
jle
out
jne
pop
fisttpll
cmp
mov
xor
neg
icebp
push
pop
lret
push
and
xchg
push
fstpt
lahf
xor
dec
insl
call
adc
inc
ficoms
insb
jnp
fcomi
inc
sbb
mov
shlb
pop
rolb
gs
xchg
insb
sub
push
cmc
mov
mov
pop
sbb
add
mov
imul
sub
lods
jle
bound
pop
sbb
imul
dec
jl
inc
stos
es
pop
inc
pop
js
cwtl
cld
adc
sbb
pop
mov
int
repnz
or
cmp
lods
xchg
stos
insl
add
sbbl
jb
rorl
xchg
divl
scas
pop
mov
or
sbb
iret
add
in
adc
and
int3
xor
out
jg
or
jno
fs
push
imul
push
stos
out
mov
loop
fcmovnbe
sahf
sbb
mov
sarl
inc
adc
icebp
jne
icebp
cmpsb
jecxz
dec
ret
call
jmp
jnp
stos
xchg
mov
jge
cmpsb
cwtl
mov
mov
pop
fcmovnu
or
imul
mov
cmp
add
ja
imul
iret
adc
adc
xor
sbb
adcl
roll
mov
mov
sti
add
push
cmp
les
push
aas
out
cmp
scas
cld
fbstp
and
or
sbb
xchg
int3
mov
insb
leave
add
sti
lahf
nop
mov
or
das
or
pop
mov
sbb
lds
movsl
and
mov
pop
or
adc
loop
mov
in
orb
inc
inc
test
outsb
test
aad
lret
jns
add
sar
or
fisttpll
sub
rol
hlt
mov
inc
sbb
lsl
cmp
dec
lock
rcrl
test
xor
xchg
bound
fistpl
fs
bnd
mov
movsb
jno
xor
in
xchg
in
stos
mov
mov
int
scas
xchg
push
outsb
mov
or
int3
fsubrs
jecxz
dec
and
dec
iret
sbb
pop
xlat
int
hlt
subl
xor
insl
mov
clc
dec
and
lea
cs
movsb
mov
xor
cs
loopne
and
out
xchg
pop
clc
mov
push
add
adc
push
and
add
sub
and
pop
lret
test
mov
lea
out
xchg
mov
lret
test
mov
inc
xor
repz
mov
faddl
out
xor
insl
adc
mov
outsl
add
arpl
sub
sbb
mov
shlb
imul
subb
arpl
jne
lea
sbb
notb
push
cld
in
sub
pushf
push
loopne
jae
push
lods
aam
mov
fdivs
push
cmp
mov
mov
daa
sbb
push
sub
dec
or
aam
ja
push
lock
dec
addr16
mov
pushf
je
push
cld
cmc
lods
jae
mov
pop
daa
sbb
jmp
outsl
sub
bound
lock
or
ljmp
or
adc
int3
add
loop
insb
test
inc
pop
cmpsl
ds
outsl
mov
mov
xchg
ljmp
pop
mov
dec
mov
mov
adc
ret
dec
jl
xor
adc
imul
dec
int3
xchg
insl
xor
or
enter
inc
cmpsb
pop
enter
dec
out
sti
les
adcb
jne
fwait
xchg
stos
cltd
xchg
fcmovb
cmp
mov
shlb
xlat
adc
xchg
out
ds
xorl
inc
repnz
add
lcall
dec
addr16
jns
mov
aam
adc
mov
test
lds
addr16
test
jg
or
nop
jp
xchg
add
frstor
add
scas
arpl
aad
les
call
imul
mov
lods
mov
or
pop
mov
xchg
aaa
push
in
cs
or
je
imul
or
scas
ja
sub
adc
inc
repz
jmp
ds
pushf
pop
add
adc
in
mov
lock
and
movq
cmpsl
sub
pop
cmpsl
movsl
dec
xchg
sub
loope
dec
mov
loopne
mov
jecxz
lods
mov
mov
aas
fistl
xchg
mov
roll
testl
inc
pavgw
jae
cmp
and
in
xchg
and
int3
iret
pushf
mov
rolb
test
or
push
out
insb
leave
lcall
mov
fs
sbb
inc
mov
idivb
inc
cmp
or
inc
ds
adc
leave
or
and
das
hlt
pop
pop
pop
adc
sub
and
pop
idiv
add
jle
xchg
push
inc
cli
aaa
mov
dec
xchg
out
and
leave
mov
pop
inc
popf
inc
cmp
mov
test
lods
and
or
pop
repz
aaa
insl
mov
jns
ret
jnp
fs
lods
ret
mov
jno
lea
and
mov
aad
inc
or
pusha
test
xor
cli
and
or
fidivrs
lea
mov
pop
jne
icebp
pop
pop
iret
outsb
sbb
aad
ds
pop
les
sbb
sbb
jl
mov
cmpsl
cmp
pushf
push
and
cltd
dec
mov
lret
mov
xor
testl
push
or
mov
in
and
pop
pop
inc
repz
fs
ja
popf
lret
outsb
or
or
iret
aad
push
repnz
frstor
rcll
sahf
mov
loop
stos
sahf
fisubl
rcr
jecxz
mov
jnp
push
adc
mov
xchg
aaa
repz
cli
xchg
mov
and
xchg
or
fwait
jns
aaa
ljmp
mov
push
insb
sub
call
inc
ret
popa
xchg
xchg
movsb
iret
mov
inc
dec
xor
aam
adc
pop
inc
sbbl
icebp
adc
pop
sbb
pusha
daa
pop
leave
push
cwtl
ret
lods
dec
test
andl
mov
mov
jmp
nop
subb
push
xor
or
xchg
fistpl
out
lock
pusha
jae
or
add
push
and
test
sbb
shll
dec
xchg
into
fsubs
cli
jbe
inc
mov
and
sahf
cs
stos
imul
sbb
inc
pop
mov
out
jo
jno
push
test
push
jnp
jl
cmpsb
mov
ss
ja
jae
cld
xchg
repnz
imul
jecxz
popf
jbe
mov
fmuls
add
push
sbb
cmp
stos
dec
pop
mov
mov
push
pop
rcrl
inc
cmp
pop
clc
out
sub
fistl
ljmp
jne
mov
mov
pushf
xor
es
in
insb
stos
clc
sub
pop
ds
jmp
push
hlt
loop
jo
gs
sub
popf
cmp
iret
or
pop
push
out
push
sub
shlb
mov
stos
mov
inc
sbb
add
js
or
mov
mov
sub
mov
cmpsl
xchg
mov
call
push
pop
fbld
dec
pushf
test
data16
icebp
insb
sub
out
xchg
sti
negl
cmp
ds
and
in
outsl
gs
out
xor
and
xchg
enter
jle
aas
jne
jl
bound
cmp
push
enter
shrb
data16
dec
addr16
cmp
mov
xlat
int3
cmp
xchg
inc
test
stc
test
mov
push
and
jle
pop
xchg
fsubrl
aam
mov
psadbw
jns
mov
add
cmp
daa
or
fcoml
daa
and
jae
cmc
or
xchg
adc
push
add
and
lea
xor
enter
test
jno
je
stos
cli
icebp
in
lods
fmuls
addr16
xor
push
pop
cmp
lcall
addb
cld
pop
xor
clc
shrb
and
fscale
out
addr16
fmull
insl
bound
pusha
add
rcll
cmp
cli
dec
mov
mov
imul
cmpsb
or
jge
lods
icebp
lods
nop
mov
in
popa
mov
mov
push
mov
outsb
xchg
mov
ljmp
out
popl
or
iret
shll
push
xor
sub
inc
orb
xchg
vunpcklps
mov
repz
stos
push
sub
ds
push
adc
je
add
in
push
arpl
imul
mov
fidivs
out
adc
cmp
lods
mov
and
les
mov
fisttpl
mov
push
mov
dec
fistpl
jl
sub
orl
enter
xlat
cwtl
loop
arpl
pop
mov
xchg
lcall
iret
ds
adc
xor
outsb
sbb
fstp
hlt
sub
daa
jecxz
mov
xor
sbbl
in
pop
dec
mov
xor
fs
fcomi
fldcw
aaa
inc
xor
xor
adc
cmp
dec
enter
in
fcoms
call
call
xchg
jo
aam
int
cmp
mov
int
adc
test
adcb
and
pop
leave
dec
sbb
mov
enter
int
test
lds
negl
xor
movsb
andb
das
sub
pop
sbb
sub
dec
sbb
xor
cmp
fnsave
mov
jmp
int
jp
push
out
mov
jecxz,pn
test
sarb
js
outsb
imul
in
pop
or
bound
lret
in
dec
into
sub
sub
mov
mov
ret
xchg
push
mov
cmp
or
popa
or
cmpsl
mov
pop
mov
ret
mov
mov
adc
clc
pop
sbb
shl
pop
les
popf
test
inc
repz
outsb
mov
out
insl
or
sbb
push
bound
mov
nop
inc
jbe
pusha
jle,pt
add
in
pop
roll
pop
jmp
leave
mov
sahf
ljmp
fwait
jmp
out
push
lock
int3
adc
xchg
sahf
mov
xor
sub
xchg
xchg
incb
loop
je
xchg
fdivl
pop
insb
cmp
mov
test
bound
cmpsl
and
xchg
aaa
mov
xor
scas
dec
jnp
add
iret
pop
dec
xor
xor
inc
test
addr16
enter
mov
sbb
pop
xor
xor
mov
inc
pushf
mov
push
movsl
cs
push
cli
rcr
mov
push
inc
jo
pop
dec
ljmp
shrb
xor
sbb
mov
mov
mov
shlb
inc
sbbb
fsubr
ja
sbb
jnp
push
test
test
mov
ss
inc
dec
lods
xchg
add
aaa
repnz
movsb
dec
sbb
aaa
or
sahf
insb
xchg
sbb
lds
jecxz
lret
adc
push
es
and
fidivrl
cmp
repz
push
sti
in
stos
addb
test
xlat
fcmovu
xor
or
cs
adc
out
push
repnz
lret
faddp
imul
sbb
jae
jmp
aas
inc
push
and
pop
xchg
push
insb
xorb
mov
add
push
stc
xchg
lahf
stos
aaa
sub
xorb
jmp
push
sub
pop
pop
sbb
mov
jg
repz
dec
enter
iret
popfw
out
mov
sub
scas
mov
lcall
mov
cmp
out
clc
push
push
mov
arpl
cmp
nop
xor
into
aam
call
adc
iret
mov
int
mov
mov
mov
loopne
push
leave
sbb
or
sbb
jge
push
sub
lods
sarl
mov
lds
test
fdivrs
int3
ja
mov
push
data16
or
gs
and
xchg
jl
aad
xlat
repz
mov
into
push
hlt
xchg
sbb
adc
jp
shl
idivl
and
xchg
xor
jmp
lahf
aam
push
pop
and
adc
jnp
mov
test
jb
in
sbb
and
sahf
mov
push
loop
ljmp
lods
push
enter
mov
add
xchg
or
or
inc
mull
and
icebp
les
test
mov
sbb
sub
xchg
pushf
sub
mov
lds
es
push
mov
mov
mov
mov
jns
pop
dec
cmp
mov
or
aas
push
aam
std
pop
cmp
push
outsb
or
jmp
or
sub
and
push
mov
repz
push
inc
cmp
icebp
xor
xchg
fadds
mov
stc
jge
loopne
sbb
cmp
jo
pop
xor
or
fucomip
mov
adc
lods
inc
cmp
adc
rcrb
daa
sub
cmp
lods
pushf
adc
dec
add
in
inc
pop
sub
data16
call
jo
mov
mov
jo
lea
jmp
aam
stos
in
jno
push
mov
ret
pusha
sarl
jbe
xor
xchg
mov
adc
sarl
out
jp
push
mov
xchg
xor
das
jg
dec
dec
notb
mov
cmpsl
into
push
adc
stc
repnz
xchg
sbb
sbb
cs
pop
xor
inc
adc
sub
dec
dec
ja
sub
leave
adc
jns
inc
shll
cmpsl
repnz
fdivs
hlt
xor
scas
dec
add
cmpsl
dec
gs
in
add
nop
mov
mov
cld
sbb
fmuls
test
daa
aam
mov
fsub
mov
les
ja
xorb
lock
jns
add
xor
or
adcb
and
loop
scas
xchg
ja
mov
push
adc
xchg
inc
xchg
push
xorb
dec
cmpsb
xor
js
adc
mov
shll
mov
adc
sahf
scas
or
lods
pop
mov
lahf
xorl
sbb
pop
mov
test
ret
shl
js
inc
or
sub
outsb
movsl
mov
scas
mov
xchg
popa
loop
hlt
mov
jnp
xchg
mov
lcall
dec
dec
push
adc
mov
bound
aad
push
loop
sahf
sbb
ret
xchg
cltd
sub
out
scas
ret
cld
int
rcrl
test
cltd
mov
sbb
clc
inc
aaa
jnp
push
lret
sahf
sbb
add
push
rcrb
andl
mov
jp
stos
sub
ret
jnp
mov
and
outsl
xchg
cwtl
adc
pop
xchg
mov
stos
cmp
dec
fs
bound
outsb
mov
push
shr
imul
ss
cmc
repz
pop
push
dec
ficoml
mov
sub
xchg
adcl
or
pop
aaa
dec
xchg
fdivl
inc
xchg
push
out
xor
mov
jnp
lods
hlt
hlt
pop
fadd
inc
sbbb
mov
jae
shrl
adc
mov
lahf
mov
dec
jmp
xchg
or
test
scas
jge
fidivrs
and
movsl
inc
out
mov
fnstenv
fwait
or
sbb
mov
fwait
xlat
dec
adc
cmp
xchg
mov
shl
scas
pop
adc
fiaddl
cmp
and
xor
mov
inc
jae
inc
add
push
mov
mull
pop
out
clc
mov
inc
dec
lret
lcall
je
mov
jmp
ljmp
nopl
iret
test
xchg
xor
loope
fsubrl
jbe
call
insb
xchg
adcl
leave
and
loopne
pop
test
xor
pop
cmp
sub
xchg
fldcw
mov
xchg
rcr
push
loop
xchg
mov
and
and
lock
sbb
cmc
mov
in
dec
pop
jecxz
sub
into
lgdtl
cmp
or
cmpl
adc
adc
pop
out
das
rclb
adc
adc
adc
shll
jo
sbb
enter
xor
push
jg
add
and
add
bound
in
test
dec
xor
push
les
lds
or
rcll
cli
dec
inc
rorl
push
xor
cld
mov
add
sbb
lods
mov
iret
adc
loope
test
cwtl
sbb
scas
les
pushf
rorl
push
mov
scas
or
imul
adc
cld
cmp
and
arpl
lods
adc
jnp
and
icebp
pop
out
jecxz
mov
mov
adc
add
fstpl
decb
push
jecxz
cmc
filds
xchg
pop
adc
addr16
mov
fsubr
xchg
data16
mov
jecxz
mov
dec
jbe
or
loopne
or
and
dec
enter
fiaddl
popa
jo
xor
test
push
dec
xor
xor
insb
mull
lods
push
int
inc
pop
jecxz
mov
cltd
shlb
xchg
outsb
or
jecxz
cmc
xchg
in
sub
jmp
mov
sbb
ret
nop
aas
mov
popf
aad
sbb
je
mov
push
sarb
into
jle
jge
sub
lahf
roll
sub
pop
dec
stos
int3
test
or
xor
add
scas
sub
pop
stc
int
pop
push
daa
in
pusha
xchg
inc
lret
and
jo
lods
scas
mov
aad
into
in
dec
cmp
movsb
push
xchg
cld
pop
mov
repnz
mov
int
scas
cld
push
clc
lahf
in
pop
sub
jb
and
mov
cmp
xchg
addb
sahf
adc
std
xchg
out
sti
and
inc
into
ret
dec
dec
and
stc
mov
adc
jge
popa
mov
xchg
testl
push
js
xchg
jge
out
mov
out
subl
or
mov
adc
push
push
negb
sbb
rolb
int
in
mov
xorb
adc
add
inc
xchg
xchg
and
sar
mov
scas
orb
aad
mov
sar
add
insl
lock
out
imul
pop
scas
popa
out
adc
scas
aad
inc
adc
cmc
iret
lahf
and
mov
mov
push
jmp
mov
mov
xchg
push
or
aas
cli
xchg
into
mov
call
mov
sbb
mov
pusha
mov
stc
sbb
shl
das
add
ja
imul
push
icebp
stos
outsb
cld
mov
popf
lock
cwtl
insl
stc
cli
sti
push
cmc
fs
mov
aaa
mov
push
jle
rclb
fwait
adc
int
cmp
bnd
pop
ja
inc
xchg
xchg
mov
mov
push
bnd
inc
jnp
cltd
and
movsl
jmp
cltd
bound
mov
xchg
dec
sti
inc
mov
and
stos
mov
pop
mov
aas
in
scas
jae
xor
mov
jl
ljmp
popf
push
mov
mov
pop
cmp
pushf
aad
xlat
loopne
lret
xchg
cmp
dec
mov
sbb
and
push
into
mov
fisttpll
out
inc
mov
pop
cmp
loop
mov
sub
subb
fwait
les
push
sbb
xor
rcrl
mov
enter
push
lea
cli
or
adcb
mov
jecxz
inc
insb
or
mov
mov
out
or
sbb
out
adc
add
mov
mov
pop
and
das
lahf
pop
mov
fwait
inc
aaa
stos
pop
dec
aas
lods
and
mov
nop
mov
cmpsl
mov
test
ret
jae
bound
insb
or
pop
fcoml
inc
stos
mov
in
mov
test
popf
add
das
shr
sub
sbb
push
daa
xchg
imul
loope
mov
pop
test
jbe
sub
fidivrl
ficompl
arpl
or
push
dec
push
outsb
or
sar
rolb
or
cmp
aaa
mov
xchg
lods
or
mov
add
insb
mov
out
and
lret
adc
scas
pop
mov
cmpsl
je
fstpt
scas
and
mov
inc
sbb
inc
popa
cmp
sbb
lock
enter
arpl
in
jp
popa
sti
adc
das
and
push
mov
adc
test
push
fiadds
inc
mov
lods
mov
movsl
jnp
incb
sub
mov
insl
sub
or
xchg
jp
scas
sarl
mov
sub
pop
cmp
xchg
in
sbb
jl
cmc
sahf
mov
mov
ss
in
int3
mov
leave
fnstsw
addr16
mov
pop
xor
fldl
cs
cwtl
push
int
adc
gs
scas
flds
pusha
int3
add
or
push
jns
adc
cs
push
cmp
mov
outsl
in
sub
add
bound
jno
and
pop
and
sbb
fildl
sti
adc
mov
xchg
pop
js
sarl
or
mov
das
aaa
notb
nop
or
mov
icebp
std
leave
pop
inc
dec
cld
jl
hlt
ss
xchg
and
aaa
popf
jo
mov
imul
push
push
test
xor
int
inc
mov
je
xchg
mov
in
cmp
in
outsb
push
cwtl
jno
push
lret
jo
roll
in
cmp
arpl
pop
in
dec
push
movl
push
xchg
mov
jle
mov
fstp
daa
out
dec
mov
push
mov
popa
lods
adc
xor
jge
mov
fcoml
adc
dec
xchg
push
xchg
sub
add
lock
xchg
test
int
mov
pop
daa
mov
cltd
mov
decl
mov
out
pop
lcall
push
shll
pushf
repnz
mov
add
adc
mov
xor
out
and
dec
into
shl
filds
icebp
lret
mov
jae
cmp
xchg
jmp
in
pop
inc
bound
lods
sbb
ret
clc
jo
call
cmp
jno
cs
jnp
and
lahf
adc
push
lods
int3
sub
inc
aad
lods
cwtl
sahf
xor
ljmp
dec
mov
xor
or
and
add
jg
sarb
mov
inc
mov
fucom
fwait
jbe
imul
pushf
dec
fld
cmp
sub
pop
aad
xlat
mov
push
daa
bswap
in
adc
xchg
out
xchg
push
lds
ret
or
jae
push
xchg
mov
mov
outsl
sbb
addb
mov
sub
mov
push
stos
lcall
jae
cmpsb
les
jge
push
adc
pop
xchg
sub
fiadds
and
add
xchg
jmp
push
int3
dec
push
enter
and
mov
mov
es
jg
pop
or
or
dec
mov
jge
sbb
mov
sbb
sbb
inc
nop
subb
jg
rcll
ljmp
add
dec
adc
loopne
pop
js
jmp
daa
dec
xchg
ds
movsl
xor
pop
sbbl
dec
sbb
adc
les
jns
pop
leave
notl
mov
lret
addr16
adc
xchg
xorl
aam
push
es
out
fs
inc
daa
call
mov
sbb
mov
imul
sub
into
inc
push
js
inc
add
fwait
pop
inc
aas
cmp
enter
loopne
xor
mov
fst
mov
pop
shl
push
jae
sbb
call
sbb
fistl
sbb
push
and
sub
popa
xor
je
dec
inc
dec
jle
cmp
and
fildl
pop
stc
leave
dec
xor
add
mov
rcrb
mov
pop
cmp
sub
fdecstp
inc
pop
jae
iret
and
cmp
movsb
pop
mov
sti
mov
mov
mov
mov
mov
fsubr
cld
and
test
das
aaa
call
or
mov
adc
push
call
stc
and
iret
adc
xor
push
test
jecxz
jecxz
jo
in
push
sbb
and
sbb
xchg
mov
inc
cmp
sbb
sahf
cmp
loop
rclb
adc
push
fisubs
stc
and
fwait
xor
pop
arpl
iret
mov
inc
sub
mov
inc
mov
or
hlt
lods
int3
sub
push
lea
jnp
add
dec
push
sbb
mov
rorl
xor
sbb
loop
test
daa
add
test
inc
xchg
or
mov
adc
mov
pop
push
sbb
push
fldenv
xorl
cwtl
add
ficoms
mov
pop
out
jmp
and
sbb
push
jmp
xchg
daa
fmull
sbb
sbb
push
sbb
gs
out
es
cmc
xchg
and
test
mov
adc
mov
icebp
out
sbb
pop
in
mov
mov
mov
jle
pop
fadds
adcb
nop
xchg
daa
aam
dec
call
ja
imul
xchg
lods
btr
lret
mov
xorl
shlb
xchg
leave
push
out
xchg
pop
jnp
repnz
or
jmp
push
mov
dec
sbb
adc
addr16
inc
or
mov
xchg
mov
pusha
jmp
call
inc
stos
inc
ja
jmp
lahf
divb
pop
cld
or
out
push
sub
idiv
fbstp
dec
and
sub
imul
loope
subb
pop
addr16
iret
cmp
aaa
cmp
jno
lret
divl
fwait
inc
sbb
adc
cwtl
sahf
cmp
jb
dec
push
sarb
push
fdivrl
test
cld
out
xor
out
pusha
out
faddl
cmp
ret
rorb
or
xor
rcl
pop
repz
or
lahf
and
cmpl
mov
mov
mov
cmp
mov
das
adc
popa
cli
fidivl
jp
cmp
mov
add
shlb
loope
ja
add
sti
sarl
cmp
adc
xlat
mov
sbb
mov
mov
fimuls
push
pushf
xchg
les
test
push
or
inc
push
pop
jecxz
xchg
inc
xchg
xor
fsubl
mov
add
hlt
xlat
cmp
rorl
std
shrl
arpl
repnz
cltd
adc
in
xchg
adc
xchg
lcall
jmp
inc
dec
sbb
iret
es
xchg
add
add
push
mov
mov
and
adc
lahf
cmp
jmp
cs
js
push
xchg
ja
ja
stos
clc
add
aad
rolb
mov
enter
pusha
fimuls
sbb
mov
pop
mov
add
adc
cmpb
add
xchg
loopne
jmp
push
decb
adc
xor
add
mov
mov
xchg
xchg
mov
test
aaa
inc
cmp
cs
pop
add
test
mov
fldt
dec
mov
or
ret
and
iret
push
jmp
adc
in
add
push
sbbl
hlt
bound
fsub
leave
icebp
daa
enter
add
fstl
push
mov
mov
or
jb
jle
sub
dec
mov
push
cmp
js
mov
frstor
sti
sbb
or
repnz
adc
adc
insl
or
sub
xchg
lds
lods
or
jle
pop
mov
int
enter
cmp
sub
xor
or
loopne
orb
sbb
aas
js
stos
or
in
cli
js
ret
pop
jb
lods
rorb
cmp
daa
imul
mov
in
cmpsl
enter
test
add
dec
inc
pop
cmp
out
popf
sub
scas
sub
movd
jns
cmp
mov
rorb
push
mov
inc
js
adc
insb
cmp
movsl
inc
jle
mov
idiv
scas
movsl
int
mov
ss
cs
in
pop
rclb
pusha
mov
sbb
jp
pop
adc
push
and
push
imul
pop
stc
in
out
mov
cld
xchg
hlt
ds
jmp
outsb
and
cmc
fistpl
push
mov
dec
or
arpl
mov
mov
and
adc
outsl
iret
cmpb
sub
into
mov
sub
loopne
adc
jnp
mov
fcom
mov
fisubs
sub
fistl
addb
dec
les
mov
lds
shlb
cs
cwtl
mov
shll
jbe
bound
mov
inc
and
insl
pop
add
les
jne
lods
je
mov
repnz
rcrb
andb
ljmp
cmp
cs
inc
je
mov
insl
push
mov
push
pushf
cmp
imul
sub
pop
mov
cli
mov
adc
bound
push
jae
dec
fwait
pop
sbb
jo
fstl
cli
push
sbb
scas
js
loop
mov
mov
nop
push
sub
lock
ljmp
lea
adc
xchg
mov
add
push
inc
mov
or
outsb
mov
aas
and
and
pop
clc
lahf
mov
mov
test
xchg
lods
scas
aaa
cmp
dec
lret
in
adc
add
mov
inc
cmpsb
incb
pop
sub
cmp
push
arpl
adc
in
shll
cmp
cmovo
sbbl
fcmovnu
xchg
sahf
inc
add
pushf
sbb
or
fbstp
rorb
jb
adc
in
nop
add
xor
gs
pop
mov
cld
add
ss
arpl
fcom
inc
mov
and
repz
loopne
add
cmc
xor
dec
sub
ja
ret
je
jae
jae
and
mov
push
in
pop
pop
call
mov
les
leave
push
sbb
in
rcll
cmp
movsl
fs
pop
cmp
pop
mov
scas
cmp
ss
scas
pop
hlt
nop
daa
pop
dec
push
cwtl
cli
adc
jae
andb
xchg
fwait
out
and
dec
testb
dec
xor
lret
cmp
xchg
dec
out
push
sub
andb
ret
imul
lahf
shrl
mov
test
and
test
jno
cld
or
xchg
xlat
xor
jb
add
mov
or
fsubl
inc
add
ficomps
shll
xchg
jg
subb
loope
mov
or
or
lret
cs
add
out
or
cmp
inc
mov
fmul
fildl
addr16
jle
cwtl
mov
jb
in
and
xor
push
xchg
loop
jns
popa
loop
lea
sbb
scas
js
mov
bound
in
out
mov
lea
inc
mov
or
xchg
das
xchg
rclb
imul
dec
pop
lcall
sub
mov
pop
aad
mov
inc
pop
and
pop
mov
xorl
test
lea
and
cmp
sar
pop
stos
je
cmp
mov
outsl
push
fiadds
jb
pop
outsb
mov
push
inc
push
out
adc
cmp
push
sub
add
pop
shll
or
push
shr
mov
jbe
sbb
movl
xchg
cwtl
xor
clc
pop
pop
cmp
inc
in
loop
adc
cli
sbb
add
inc
iret
push
aad
test
and
loopne
add
jge
pop
mov
clc
cmpsl
sub
gs
movl
or
fldcw
jno
insl
xchg
lea
push
dec
jg
shlb
push
test
mov
adc
push
outsb
mov
mov
cmp
xor
xor
inc
int3
testb
lret
in
rcl
rcll
test
mov
xchg
ficoml
jne
stc
lcall
insl
lahf
imul
mov
xchg
jnp
inc
xlat
out
add
inc
packuswb
int3
pop
in
and
rcrl
ret
ret
filds
cmp
repnz
pop
gs
inc
pop
mov
jo
adc
aam
out
ret
sub
dec
sub
adcl
sub
daa
mov
and
in
jle
repz
add
and
iret
insb
test
xor
aaa
icebp
lea
cld
jnp
in
or
jo
push
cmp
mov
lods
inc
out
loope
test
pusha
aas
xchg
xor
xchg
test
xor
and
dec
add
jmp
nop
xchg
adcl
xor
aaa
cmp
scas
inc
dec
sub
loope
sbb
sbb
adc
pop
cli
in
cli
setns
jle
xchg
adc
in
lret
add
sub
dec
out
lret
jge
and
mov
jno
push
sbb
stos
clc
mov
inc
sub
xor
lahf
les
pushf
lods
inc
or
clc
in
jp
pushf
adc
mov
push
arpl
test
xor
or
jne
pop
clc
sbb
jns
incl
adc
cli
out
jb
pop
aas
cs
or
jecxz
dec
bound
std
xchg
stos
adc
mov
pop
test
outsb
mov
out
stos
repz
out
in
sub
shl
xchg
cmp
mov
mov
inc
push
notb
pop
popa
mov
push
pop
pop
mov
xor
dec
sub
jbe
jbe
les
bound
loopne
mov
dec
fs
gs
insb
ret
fimull
imul
cmp
aaa
loopne
dec
jmp
mov
mov
cmpl
das
sbb
dec
pop
loopne
jle
fwait
or
xchg
stos
fnsave
iret
mov
dec
or
or
lds
xlat
pop
dec
cld
or
xchg
push
cltd
mov
mov
cwtl
adc
push
dec
adc
pop
jnp
je
push
sbb
pusha
cmp
cmp
cmp
lret
divl
cmp
adc
dec
adc
cmpsb
inc
jb
cli
jmp
jne
add
or
cmp
or
out
mov
sbbb
cli
jmp
fdivr
je
loopne
mov
insb
and
jge
inc
push
mov
les
or
stc
lret
sbb
xlat
sub
dec
cmp
scas
pop
dec
movsb
enter
std
idivb
icebp
lea
mov
std
cmp
or
mov
stc
xchg
mov
loopne
data16
notl
mov
xor
mov
enter
cmp
psubsw
iret
sub
inc
fadd
push
push
jb
jp
sub
jb
pop
mov
ret
pop
mov
lahf
dec
lret
dec
outsb
nop
cmp
repnz
andb
dec
or
inc
inc
insb
xchg
pop
aad
mov
cmpsb
loope
or
ret
pop
jne
mov
clc
dec
cli
mov
rcrl
movsl
rcrb
mov
cmp
out
cmpb
out
and
test
mov
mov
decb
es
mov
bound
mov
add
fsincos
sbb
lods
shrb
push
test
pop
cmpsl
sub
jg
fidivs
icebp
and
lods
mov
mov
adc
pushf
mov
push
les
jecxz
aaa
xchg
pop
fdivrl
scas
cwtl
adc
inc
orb
aad
mov
fcompl
add
or
push
arpl
daa
xor
sti
pop
sbb
push
fwait
js
push
add
pop
push
jae
call
int
xor
cmp
mov
shll
les
jmp
bound
add
addr16
pop
mov
fwait
mov
cmp
jae
movsb
and
ret
xor
pop
insb
jl
sarb
cmp
lods
or
notb
movsb
jge
jnp
imull
inc
icebp
lock
iret
jb
fisttpll
aaa
fsubp
pop
or
aas
cmp
aaa
xchg
cmpsb
push
mov
das
inc
xchg
cmc
das
jl
pusha
lahf
xchg
in
add
jle
aam
cmp
mov
filds
xor
mov
mov
push
push
enter
jmp
pop
sti
inc
lock
fstp
scas
mov
andl
pop
mov
mov
ss
enter
ficoml
pop
and
or
pop
imul
fsubl
leave
xor
pop
jno
hlt
enter
mov
push
jg
into
imul
xchg
fisttpll
mov
push
mov
out
testl
addr16
lods
sub
icebp
insb
mov
xchg
push
pop
iret
mov
loop
xor
in
lret
addr16
sbb
scas
arpl
lock
sbb
and
cmp
daa
adc
sub
into
add
push
inc
xchg
jmp
pop
mov
outsb
adc
sbb
mov
jne
les
movsb
pop
mov
adc
in
sbb
pop
ja
adc
xlat
fisubs
aas
jecxz
pop
popa
repnz
insb
iret
rcll
call
push
sub
and
push
cmp
ljmp
addr16
cmc
inc
repz
je,pt
scas
in
sti
js
xor
jmp
push
xchg
aas
inc
adc
stos
clc
xchg
imul
sub
mov
aam
arpl
pop
dec
xchg
push
cmp
mov
bound
ret
orl
mov
nop
pop
jno
dec
fimuls
jmp
mov
clc
pushf
imul
data16
pusha
jo
mov
mov
push
mov
jb
push
and
xchg
jae
dec
mulb
repz
icebp
aad
lods
pop
into
or
ljmp
fildll
mov
repz
or
loope
push
inc
jae
popf
in
lret
mov
lods
es
into
adc
cmp
push
adc
and
and
int3
sbb
push
sbb
push
rcll
sub
push
add
movl
mov
add
daa
sub
aam
fwait
insl
out
xor
je
adc
sub
push
inc
push
dec
test
in
es
xchg
imul
inc
jle
mov
dec
scas
cmpsb
add
push
push
jnp
fst
add
loop
adc
push
test
xchg
or
jle
mov
xor
nop
cmp
xchg
sbb
push
jnp
out
scas
lret
dec
mov
sti
sti
pushf
xor
fmull
inc
div
aam
mov
cmp
cmp
push
lds
dec
into
inc
adcb
mov
sbb
ja
add
push
mov
adc
cli
arpl
sbb
adc
loop
aas
cltd
mov
in
loope
decl
sub
cld
movsb
dec
test
or
pop
add
out
out
mov
js
lods
dec
ret
pop
xchg
push
push
push
xchg
inc
mov
lock
cmpsb
dec
dec
movq
in
mov
pop
mov
xchg
pop
rcr
dec
and
xor
jno
mov
push
jb
mov
enter
data16
loope
jmp
adc
mov
xchg
cli
and
mov
cmp
fstpl
pop
out
add
in
xor
and
cmp
pop
stos
and
push
push
stc
jb
xor
leave
shlb
nop
fnstenv
loop
adc
jnp
bound
aaa
pop
mov
je
cli
pop
push
aaa
sbb
or
mov
out
and
push
mov
dec
jle
test
xor
cmpl
push
fcmovnu
aad
scas
out
aam
xchg
into
pop
lds
xchg
sub
cmp
sub
adc
mov
jmp
and
pop
lods
xchg
fists
hlt
arpl
xchg
adc
inc
xor
sbb
enter
movsb
subb
fcomps
sub
aam
movsb
inc
outsl
into
mov
jne
in
fs
ret
ss
mov
sub
in
or
arpl
adc
sub
mov
in
or
inc
cmp
lds
mov
int
xor
mov
mov
ret
sub
jp
push
xchg
mov
dec
mov
cs
std
dec
hlt
mov
jl
pushf
es
loop
inc
pop
push
iret
inc
cltd
mov
mov
sub
pop
sahf
daa
out
rclb
xchg
sahf
mov
or
mov
push
lods
sbb
jle
push
mov
push
mov
xchg
ds
xchg
jno
mov
repz
ss
jecxz
in
cmp
movsb
inc
out
push
sbb
xchg
aas
in
mov
push
mov
aaa
cmp
adc
iret
mov
mov
sbb
cld
or
addr16
mov
popl
outsl
ficoms
mov
fsubrs
lods
fucomip
adc
aam
aam
out
inc
mov
push
jl
mov
je
mov
cwtl
addr16
and
push
xor
or
daa
add
and
xor
mov
add
mov
cltd
decb
xor
cmp
sbb
and
mov
pop
inc
cmp
jae
les
mov
pushf
and
or
or
mov
jbe
lahf
mov
sahf
roll
vmovhps
sub
xor
sub
jmp
push
add
inc
mov
push
roll
sub
aam
daa
rcl
test
notl
sahf
inc
les
frstor
movsl
cmpsb
sbb
dec
fyl2x
push
push
or
les
into
jl
sbb
into
cmc
or
outsb
or
and
push
fisttps
mov
shl
aas
pop
cmc
dec
negb
mov
pop
xchg
pusha
sbb
adc
pop
mov
fwait
xchg
mov
jnp
inc
rorb
cmp
inc
clc
cwtl
jecxz
dec
adc
pusha
ja
and
push
push
xchg
clc
lret
fistpll
and
and
or
push
lea
push
xor
outsl
mov
dec
dec
mov
mov
rcrl
js
pop
sbb
enter
and
xchg
scas
shlb
push
mov
incl
mov
popa
sub
mov
pop
dec
rcrl
loopne
cwtl
mov
add
out
mov
jb
lds
popa
std
adc
mov
es
push
repz
and
xor
aas
xlat
mov
lock
mov
add
std
jb
out
fwait
inc
mov
pop
cmp
movsl
mov
pop
xchg
lock
das
sub
gs
popa
out
cld
dec
sbb
lods
xchg
xchg
lock
imul
xor
mov
lret
or
lods
mov
pop
mov
dec
lods
arpl
jl
inc
lods
ret
shll
hlt
and
mov
push
add
cmp
std
je
pop
xchg
xchg
sbb
ljmp
daa
lds
mov
inc
data16
inc
loop
imul
movsb
or
inc
xchg
jae
mov
ret
sub
xchg
dec
xor
out
add
adc
hlt
leave
cmp
ljmp
inc
sbb
push
repz
xor
dec
lret
in
outsl
pop
add
int3
cmpsl
cmp
cmc
movsb
jo
testb
cmp
push
out
push
jb
enter
mov
ljmp
cmp
mov
mov
add
test
sub
adc
mov
mov
lret
leave
push
pushf
push
arpl
mov
in
mov
or
pushf
cmc
dec
repnz
add
pop
pop
loopne
adc
cmp
cwtl
sub
call
push
jb
pusha
in
mov
adc
push
inc
ret
aam
imul
and
dec
inc
mov
mov
in
mov
xor
mov
pop
dec
mov
jmp
aam
hlt
xor
and
ss
add
insb
fwait
dec
in
cwtl
jo
fnstsw
in
sbb
push
push
ss
cmp
pop
mov
cli
int3
mov
hlt
cmc
xchg
int3
xor
int3
ret
stos
popa
or
mov
test
mov
dec
add
sbbb
push
mov
mov
dec
icebp
mov
push
dec
imul
push
mov
pop
adc
jbe
ret
dec
or
xchg
push
jp
sbb
push
adcl
ja
or
test
sub
jp
mov
std
insb
jae
and
mov
mov
xchg
sub
sbb
gs
scas
std
jns
or
addl
sub
or
or
ljmp
insl
jo
adcl
push
aas
adc
lcall
jp
mov
mov
dec
pop
jg
mov
xchg
inc
inc
arpl
cmp
adc
lret
adc
xchg
pop
mov
pop
mov
push
push
xchg
cmc
test
stos
int3
adc
roll
cmp
push
jno
xchg
fs
shll
cld
inc
jl
mov
icebp
sub
dec
cmp
scas
add
out
das
sub
addr16
addr16
or
ret
sbb
jecxz
sahf
icebp
inc
or
fiadds
cli
push
inc
lret
mov
iret
jecxz
jecxz
jb
pop
mov
push
push
lock
mov
pop
sbb
imul
cld
mov
fwait
ds
les
add
fidivs
ja
loop
gs
notl
mov
or
std
scas
sbb
jge
imul
xchg
test
pop
sbb
comiss
in
dec
outsb
in
mov
lahf
jmp
sub
xor
or
sbb
push
jne
daa
repnz
nop
jb
push
cmc
dec
dec
mov
fisubs
sbb
js
xchg
clc
repz
mov
pop
mov
jg
pop
dec
adc
push
cmp
test
negb
sbb
jns
jae
inc
sub
out
and
and
sub
shl
mov
mul
orb
add
dec
inc
movsl
pop
aas
or
cmp
and
cmp
mov
icebp
div
sub
xchg
jns
sbb
cmpsb
pop
fdivs
cmp
adc
pop
test
mov
sub
incl
movsl
xchg
mov
movsb
xor
xchg
xchg
and
popf
loope
clc
add
jmp
test
jmp
mov
mov
xchg
mov
mov
mov
mov
fstpl
dec
sub
inc
add
mov
rcr
adc
arpl
xchg
mov
jmp
dec
loop
mov
stc
dec
mov
or
sub
insb
enter
cmp
sub
jp
lock
loopne
pop
mov
push
sbb
stos
nop
je
out
pushf
pop
jae
lods
mov
int3
cs
insb
push
pop
scas
adc
adc
leave
inc
cli
pop
sub
inc
outsb
sbb
adcb
or
xchg
push
les
rorb
jle
cmp
cmp
dec
cmc
push
rcrl
aas
cmp
push
jae
adc
xor
cli
mov
add
cmp
insb
mov
insl
pop
mov
mov
mov
sbb
in
pop
adc
pop
xchg
xchg
inc
movsl
jmp
imul
stos
rcll
stos
imul
xchg
fwait
xor
fildll
sub
out
jbe
call
jge
cmp
das
push
sbb
int
aaa
test
test
stos
mov
pop
mov
fstps
mov
sbb
das
pop
lods
or
jbe
sbb
pop
jnp
notl
and
pop
add
add
cmp
sbb
xchg
mov
mov
jae
into
adc
or
push
sub
in
add
mov
dec
and
sbb
jle
stos
or
std
lahf
fidivrl
lods
sub
pusha
pop
jp
jo
arpl
adc
gs
xor
aaa
shrl
pop
sti
repnz
test
vfmsubadd213pd
or
adc
cmc
mov
adc
rcrb
cs
mov
aad
cmp
pop
sti
xchg
add
mov
cwtl
dec
mov
insl
adc
clc
dec
cmp
mov
ss
icebp
and
add
cs
jl
push
cmp
loop
or
jl
lods
pusha
aaa
sbb
fdivr
stc
dec
int
addr16
push
mov
sub
pop
pop
loop
push
pop
or
test
fisttps
xchg
jge,pn
dec
xchg
lea
or
adc
pop
enter
imulb
xchg
dec
inc
adc
xchg
sbb
cmp
xchg
sbb
test
pop
jne
xchg
dec
pop
jmp
sahf
push
mov
loope
fldenv
inc
pop
subl
xchg
pop
ja
and
aaa
divl
and
adc
dec
sub
out
inc
mov
cmp
sbbl
out
add
mov
pop
dec
jb
xchg
mov
mov
or
sbb
jmp
scas
gs
mov
into
roll
into
popfw
icebp
cmp
divl
dec
arpl
scas
xor
dec
mov
and
or
or
movsb
inc
inc
add
addr16
mov
jmp
mov
dec
cs
out
lret
sub
push
jp
push
xchg
inc
int3
inc
cmp
and
test
xchg
push
mov
mov
mov
dec
divb
popf
dec
adc
xchg
je
arpl
push
dec
or
into
mov
pop
cmpsl
jmp
loop
sub
lock
iret
rcl
and
dec
scas
push
repz
adc
sbb
mov
popf
dec
jg
jl
cltd
sbb
push
les
mov
dec
push
in
sbb
femms
jge
rcll
loope
or
rcl
or
ret
enter
out
mov
adc
bound
mov
in
aaa
mov
inc
mov
lcall
rcrb
mull
cmp
jo
data16
inc
sub
cmp
sahf
push
mov
js
movsl
mov
call
or
dec
push
xchg
in
fimull
lods
dec
or
lret
adc
adc
mov
inc
adc
pop
ret
pop
or
bnd
repz
mov
dec
add
jbe
insl
js
movsb
jnp
pop
jne
test
xor
into
inc
xor
adc
xor
test
pop
dec
and
jnp
leave
inc
adc
cmp
lret
mov
lret
mov
movsl
scas
fiadds
jne
divb
xchg
sub
fs
inc
or
outsb
xchg
setge
repnz
push
data16
mov
loop
ja
ret
enter
bound
add
xor
ret
test
lcall
iret
pushf
jle
out
movsb
lret
je
mov
mov
sbb
lahf
dec
dec
lcall
or
lock
lret
sarb
sbb
aam
mov
push
jl
out
or
cmp
sbb
cmp
xchg
pop
mov
out
aam
aam
xor
push
add
mov
adc
cmp
out
inc
push
ret
call
cmp
scas
sbb
fistpll
add
and
add
or
inc
sti
in
add
sbb
and
or
mov
cli
jne
jo,pt
es
pop
dec
jno
fsub
stos
jg
and
add
shl
cmp
xchg
xor
flds
jno
gs
mov
push
xchg
inc
adc
add
push
push
dec
cmpsl
test
mov
adc
mov
mov
lods
adc
jl
pop
ljmp
xor
pop
mov
push
outsb
jl
fs
xor
push
cs
mov
push
into
aas
sbbl
fsts
invd
outsl
ljmp
push
push
inc
jnp
cmp
cmp
mov
pusha
xchg
xchg
outsb
cmpsb
xchg
xor
sub
dec
push
mov
roll
out
aad
push
mov
movsb
jecxz
sahf
scas
pop
push
dec
jp
mov
ljmp
out
adc
and
aas
in
fwait
xchg
push
lock
sar
fninit
sbbl
mov
pop
pop
cli
dec
lret
nop
roll
jp
mov
pop
mov
fisttpll
dec
or
fiaddl
cmpb
subb
out
xor
mov
mov
pop
sbb
insb
daa
xchg
out
mov
pushf
xchg
arpl
daa
insb
pop
and
adc
scas
cmp
test
mov
fidivs
pop
mov
mov
sub
adc
mov
sti
inc
xchg
xor
mov
push
call
pop
decl
lds
add
repz
dec
push
stos
scas
nop
sarb
sub
loopne
push
jmp
xchg
lods
mov
js
inc
adc
cmp
cmpsb
gs
aaa
mov
sub
or
test
jnp
xchg
dec
lret
in
out
addr16
cmp
sub
lock
xchg
add
sbb
aaa
or
xchg
pusha
call
push
lods
inc
fcompl
pop
fisubl
nop
pusha
jnp
jbe
mov
xor
stc
push
mov
punpckhbw
jno
ja
pop
test
add
push
out
and
lods
jl
inc
std
fnstcw
mov
mov
out
and
xchg
xchg
ja
sahf
ljmp
dec
jmp
pop
cmp
xorb
add
aas
pop
hlt
jbe
dec
sub
xor
adc
f2xm1
xchg
test
ja
sub
xor
cmp
pop
ret
mov
add
and
mov
or
clc
rol
cmp
test
add
pop
jmp
jae
jl
sti
mov
or
xchg
nop
imul
adc
scas
loope
inc
xor
ret
fs
cmp
vprotw
outsb
pop
push
mov
mov
iret
pop
adc
sbb
mov
loopne
and
in
mov
loop
ret
fldcw
mov
nop
pop
bound
inc
fcmovnb
xor
test
inc
lea
sahf
inc
addr16
pmaxub
into
push
cmc
ja
add
inc
cmp
jecxz
dec
icebp
sub
or
lahf
stos
dec
jnp
push
mov
pop
jle
xor
mov
ds
fprem1
int
dec
cmpsl
cmpsb
outsb
stc
mov
pop
mov
add
jle
aam
mov
pop
cmpsl
movsb
jbe
mov
stos
imul
test
out
push
sbb
and
popf
jecxz
sub
inc
lret
aas
mov
test
testl
rcrl
insb
fwait
stc
pop
mov
mov
mov
stos
adc
test
icebp
shrb
movsl
and
inc
cmpsl
movsb
mov
mov
out
mov
ja
std
cwtl
dec
je
stos
fdivl
insl
inc
mov
nopl
bound
popf
test
pop
dec
pop
jne
inc
dec
jns
cmp
push
push
push
fs
push
push
shl
cmp
xor
int
aaa
push
inc
lahf
loope
rolb
cli
pop
adc
imul
dec
cmp
mov
mov
daa
mov
fwait
push
out
pushf
push
cld
int
sub
cmpsl
pop
mov
mul
cld
cs
xchg
push
dec
xchg
loop
lock
mov
jmp
pop
mov
sbb
stc
in
pop
mov
add
sub
ss
dec
in
bound
lret
xor
sbbb
add
dec
scas
mov
add
js
mov
dec
mov
pop
push
stc
fsts
pop
dec
insb
divb
repnz
pop
or
call
xchg
addr16
pop
dec
adc
adc
pop
cmpsl
inc
mov
xor
pop
jecxz
dec
push
push
call
jo
or
loope
xor
push
dec
jo
mov
fstps
pushf
popa
repz
mov
mov
cli
popa
pop
mov
jg
sbb
jo
sub
adc
aaa
xchg
push
push
mov
cli
mov
push
xor
xor
mov
aad
ja
out
cmpsb
adc
add
jo
in
fbld
mov
cmp
call
fwait
push
scas
push
lea
inc
js
mov
mov
xor
arpl
and
pop
xchg
xchg
xchg
mov
pop
fimull
sbb
and
bound
lock
es
mov
fsubrs
aam
dec
push
iret
js
popa
mov
mov
push
push
xlat
out
pop
jb
mov
adc
cmp
test
insl
inc
leave
leave
pop
fistpl
outsl
mov
adc
pop
sub
xor
in
cwtl
xor
lock
dec
pop
jmp
mov
pop
adc
icebp
push
xchg
mov
push
js
xchg
icebp
pop
lret
jl
cmp
cmpl
sub
and
aaa
mov
imul
gs
out
xchg
xchg
add
and
mov
add
stc
pop
fnstsw
pop
outsl
ret
int
add
inc
fldt
xchg
push
mov
jne
or
xchg
movsl
push
and
js
outsb
lahf
cmp
add
jp
mov
pop
sbb
and
adc
add
subl
clc
getsec
lock
fucomip
into
imul
clc
sahf
aad
mov
pop
sub
outsl
les
in
pop
cmpsb
lret
bound
mov
outsl
push
cmp
adc
sub
adc
aas
jae
out
xchg
sbb
les
xchg
mov
mov
and
in
mov
cli
cmp
inc
pop
or
es
adc
sbb
sbb
jge
insb
cmp
pop
aaa
stos
cs
and
data16
lcall
xchg
lret
dec
jl
bsr
xchg
jg
pop
jno
addb
test
lahf
xor
xor
xor
fdivrl
jbe
incb
push
insl
into
lods
fnsave
in
clc
fdivl
sub
push
enter
sub
cmp
lock
pop
icebp
es
xlat
xlat
jnp
repnz
std
sbbl
sub
add
in
mulb
ja
mov
popf
cli
pop
dec
push
or
or
push
push
mov
jecxz
ret
test
mov
lea
mov
in
gs
add
push
push
sub
and
mov
cmp
test
push
jl
rclb
mov
sub
adc
cmpsb
and
pop
xchg
push
xor
mov
std
popf
xor
shlb
xor
test
add
push
leave
sahf
sbb
cmp
mov
mov
sub
push
int
inc
inc
fs
sub
rcl
mov
cld
cli
and
jne
sub
xchg
outsb
divl
les
cmpb
aam
and
pushf
xchg
pop
and
mov
jae
test
movsl
push
xor
xchg
testl
jge
xlat
inc
mov
out
push
cld
sub
xlat
aas
outsb
push
out
imul
cltd
sub
cmpsb
aas
popa
iret
add
prefetcht2
lret
dec
xchg
pop
lcall
mov
xchg
cmp
ss
aas
mov
xchg
xor
mov
cli
arpl
pushf
mov
insb
and
out
std
fwait
mov
les
pusha
add
pushf
leave
aaa
jb
sahf
pop
push
movsb
dec
in
pusha
xlat
in
bound
mov
movsl
or
cmp
mov
icebp
fst
sbb
fcmovnbe
push
lret
or
loop
cwtl
mov
mov
enter
cs
stos
push
gs
fisttpl
and
out
ds
clc
lret
fstl
mov
mov
std
loope
xchg
stos
push
das
sar
aam
xchg
dec
or
inc
or
loopne
jmp
pop
bound
sub
les
sub
insl
xor
ja
jae
ljmp
cmp
push
jne
mov
daa
sahf
or
cmc
push
rolb
adc
dec
jae
fwait
xchg
pusha
stc
cltd
sub
pushf
add
dec
sub
lret
lret
fwait
shl
xor
push
jae
mov
out
lods
pop
imul
cwtl
sahf
xchg
adc
mov
pop
mov
cmp
sbb
lret
ret
cmpsl
iret
inc
data16
fwait
jl
std
int3
sub
pop
pushf
jle
mov
icebp
cmp
xchg
pop
xchg
lock
add
jg
fmuls
mov
pop
sub
cli
lds
test
fists
sti
cmp
fwait
jo
fisttpl
pop
addr16
fcmovb
test
sub
mov
jmp
fs
mov
ss
cmp
add
std
or
mov
mov
inc
clc
call
cmp
push
xchg
push
ja
push
mov
test
mov
adcl
andl
and
scas
cld
addl
push
push
fldpi
out
push
mov
adc
data16
pop
int
pop
outsb
out
mov
jmp
push
jecxz
data16
cld
sub
fnstsw
repz
xchg
mov
andl
pusha
mov
or
jo
mov
mov
and
push
push
mov
lods
out
fsubrs
sub
xor
mov
fs
stc
sub
add
loop
imul
mov
adc
dec
lahf
adc
nop
adc
scas
mul
fs
and
add
cmc
sub
imul
push
loopne
add
pop
scas
popa
loop
pop
fwait
pop
fwait
add
or
mov
sbbl
inc
add
mov
cld
popf
cmp
jecxz
outsl
add
pop
or
and
xchg
push
push
mov
push
clc
jae
or
ja
div
and
pop
outsb
sahf
inc
ret
and
roll
fcomps
mov
push
leave
push
push
jg
add
pusha
imul
das
push
sub
mov
xchg
jp,pt
lret
fmul
xlat
sub
adc
cmp
sub
or
dec
in
jb
or
lods
addr16
jns
push
xchg
dec
mov
cmp
jae
es
push
push
test
mov
xor
cmpsl
pop
dec
in
jns
sbb
jbe
stos
adc
frstor
js
lock
xchg
push
and
cmp
xor
ss
enter
push
jns
jmp
adc
jbe
push
mov
inc
dec
dec
mov
enter
lock
aam
dec
pop
test
push
or
jl
fildll
imul
and
cmp
cmp
xchg
inc
jmp
test
scas
movsl
repnz
icebp
and
repz
jnp
sub
mov
mov
mov
in
jecxz
push
inc
sahf
pop
pop
scas
jge
dec
push
insl
test
pop
lret
lds
jns
test
adcl
ds
adc
out
mov
cmp
inc
lcall
xchg
hlt
pusha
cmpl
sub
and
ret
mov
pcmpeqw
std
xor
ret
cli
xchg
push
ret
xchg
popa
mov
jp
lret
pop
inc
and
js
andl
imul
data16
mov
les
fimuls
and
or
jmp
xor
xor
mov
push
xor
adc
out
insb
xor
ljmp
cli
jbe
xchg
jb
ret
ret
jne
int
lods
jnp,pn
testl
std
fcmovnb
fwait
or
clc
inc
xlat
stos
nop
ficoms
idivl
mov
movsb
or
iret
int
mov
add
test
pushf
outsb
negb
and
in
add
in
movsb
jle
add
mov
pop
mov
scas
inc
mov
enter
insl
mov
test
mov
pop
cmp
dec
mov
push
jl
cs
into
pop
in
hlt
adc
sub
inc
in
shr
fbld
or
xor
shl
jnp
jp
ret
and
cmp
dec
int
test
cltd
dec
arpl
icebp
in
add
shll
adc
adc
ret
fwait
and
pop
es
adc
inc
in
adc
xchg
add
or
pop
mov
dec
outsb
ss
sbb
addr16
test
xchg
add
loopne
cltd
jne
or
adc
push
adc
push
stc
push
xchg
mov
loope
js
test
bound
cmp
mov
pop
stos
xor
adc
out
xorl
dec
sti
insl
movsb
push
cltd
cmp
push
lcall
mov
lahf
xchg
lea
aaa
lcall
jmp
hlt
xchg
fs
sub
dec
sub
fs
xchg
cmp
fsubrs
and
lods
jbe
lret
les
jne
jo
cmpsb
push
mov
and
cmp
push
dec
cs
inc
dec
sub
clc
jmp
mov
sub
mov
cmpb
sub
add
pop
dec
mov
rcll
dec
cmp
xchg
lea
xchg
push
vpsubq
iret
cmovnp
adc
jo
je
mov
andb
leave
or
jb
fimull
jbe
push
pushf
mov
pop
pop
cmp
lahf
mov
gs
std
mov
mov
loop
or
lret
dec
jl
repz
adc
sub
push
sbbb
in
out
pusha
xchg
cmp
ficomps
in
lods
pop
scas
in
ja
mov
mov
jg
cwtl
dec
push
xchg
dec
cld
pop
add
mov
das
sub
data16
adc
ljmp
sbb
mov
movsb
push
push
pop
pop
mov
push
xlat
lds
sub
fwait
cld
jecxz
mov
shlb
and
sahf
sub
cmp
ficoml
dec
sahf
pop
jmp
test
stc
sbb
mov
mov
mov
leave
es
xor
movsb
push
lahf
sub
and
insb
jns
sub
test
jo
xor
sub
pusha
cmc
mov
pusha
lea
sti
xor
int
sbb
pusha
cmc
push
pushf
inc
sub
stos
clc
jg
jbe
insb
adc
test
pop
in
into
shrb
pop
loop
or
cwtl
pop
mov
test
adc
or
inc
mov
jp
in
stc
ds
clc
inc
push
adc
adc
jbe
dec
cli
xor
cmpsl
clc
mov
mov
xchg
pop
scas
xor
add
mul
sbb
sub
rorb
pop
adc
or
cmp
int3
inc
pop
mov
lret
pop
daa
aad
stos
xchg
shlb
pop
push
sbb
inc
ds
jnp
mov
out
pushf
test
movsl
and
sbb
xchg
jmp
cmpsb
xor
cmc
loope
ficompl
and
js
xor
sub
aas
push
xchg
pop
xchg
in
jg
inc
test
fs
xchg
mov
push
cltd
and
fsub
push
out
add
cmp
pop
insl
mov
push
dec
ss
lea
or
subb
push
jae
adc
aaa
aas
sub
dec
or
xchg
repz
test
sbb
or
fcompl
sahf
xorl
lock
dec
iret
mov
cwtl
cmp
mov
mov
push
adc
adc
dec
shll
xor
stc
aaa
pslld
xchg
adc
xchg
lock
mov
xor
mov
mov
push
inc
aad
mov
mov
ja
mov
mov
jns
stos
cld
push
int
mov
popf
rcr
loopne
push
xor
je
loope
mov
pop
fldcw
fstp
push
fists
xor
inc
push
mov
push
stos
mov
pinsrw
mov
test
xor
mov
loop
pause
jl
ss
adc
mov
push
mov
cmp
add
mov
adc
out
xor
mov
mov
test
mov
and
add
push
lods
xchg
cs
daa
setbe
shlb
adc
mov
test
inc
pop
mov
pop
and
jmp
int
xchg
xchg
cli
xor
or
lock
fsubl
lea
or
aas
loope
add
daa
push
aaa
leave
xor
sub
in
fsubp
dec
jmp
dec
popf
fbstp
add
divl
pop
pop
fwait
movsb
aad
pop
lea
mov
fimuls
push
push
cmp
adc
mov
movb
pop
pop
mov
pop
lcall
rorl
push
ss
std
daa
cwtl
xor
lods
push
cmp
pushf
les
pusha
xor
lea
ret
xchg
aad
lret
mov
inc
jns
and
push
jg
jmp
mov
mov
test
icebp
pop
push
int3
jg
fdivl
mov
sti
pop
sbbl
ja
pop
lret
sbb
cmp
vfmaddps
sub
or
dec
lcall
lods
jne
jb
pop
ds
andl
dec
inc
aas
cltd
lret
push
out
lret
or
and
jl
push
dec
sbb
jl
repz
inc
pop
nop
ss
dec
add
dec
jecxz
jmp
lret
icebp
out
decl
mov
mov
test
js
repnz
sbb
rcrl
add
imul
inc
frstor
push
es
mov
pop
outsl
jns
pop
mov
xor
and
in
mov
mov
es
test
dec
fcoms
or
xchg
jne
imul
stos
je
mov
jo
daa
shll
inc
or
mov
movntq
pop
rcll
outsl
cmc
out
sbb
pop
leave
mov
aad
fwait
dec
fs
mov
in
add
or
xchg
push
loopne
jbe
push
pop
fisubrs
out
dec
jl
xor
and
insl
js
ss
mov
adc
or
mov
fcoms
pop
mov
divb
test
icebp
aas
pusha
test
push
add
inc
and
inc
jg
je
movw
in
mov
push
stos
adc
mov
add
jg
test
pop
jne
cmpsb
data16
pop
mov
jne
adc
dec
add
test
and
push
jb
pop
dec
lahf
mov
pop
push
lea
xor
test
ret
les
and
dec
aaa
cmp
xor
jns
mov
mov
push
cmpsl
imul
aas
les
cmp
ds
ljmp
es
out
or
xchg
loopne
fisttps
xchg
adc
mov
or
add
jecxz
or
and
aad
cmp
jo
movsb
adc
testb
sti
add
add
adc
xchg
push
or
gs
movsb
push
imul
xor
adc
popf
pop
es
jnp
data16
pop
das
inc
test
pop
movsb
adc
mov
adc
adc
lea
dec
dec
xor
icebp
push
pushf
inc
cmc
jg
mov
sbb
mov
ficoml
cmp
ja
dec
xor
icebp
sbb
mov
cmc
in
loope
or
sti
mov
fmuls
into
lret
mov
mull
popf
cmpsl
push
fisttpl
pop
les
lcall
std
add
cmc
dec
or
push
loop
xchg
into
cmc
sub
sub
lea
or
push
out
and
adc
push
push
ret
movsb
fstps
mov
insl
cmp
pop
push
adc
sahf
scas
lock
xchg
push
mov
and
push
call
xor
inc
sbb
clc
dec
mov
cltd
idivl
jecxz
xchg
mov
aas
sbb
and
int
pusha
cltd
cltd
in
cmp
jne
ds
dec
test
pop
into
out
mov
loope
scas
sub
lods
shlb
or
es
pop
shrl
mov
das
jo
lods
test
mov
pop
enter
mov
arpl
mov
sti
push
mov
xchg
sub
daa
aaa
orb
in
jbe
insl
jl
arpl
mov
ret
or
imul
adc
xchg
cmp
xchg
repnz
jo
loope
mov
and
js
or
lahf
out
sbb
xchg
xchg
ret
or
mov
xor
loop
adc
cltd
std
sub
lods
insb
push
shlb
mov
mov
jmp
mov
cmp
or
jnp
xor
or
xor
pusha
andb
cs
outsl
mov
ss
fcmovnbe
fcomip
sarb
imull
adc
popf
dec
notl
push
lea
scas
lods
jecxz
add
dec
and
das
add
test
xchg
inc
jge
pop
aas
les
ja
push
outsl
rep
aaa
jp
mull
sti
ret
cltd
push
ficomps
sub
lahf
xchg
cmp
fnstcw
push
in
adc
sub
mov
repz
jno
xlat
fbld
adc
lret
int3
xchg
and
out
cmp
and
shrb
mov
cmp
loopne
aaa
lret
inc
sahf
push
fiaddl
pop
out
mov
int3
out
pop
or
scas
sbb
sbb
sub
push
or
in
or
std
sbb
aaa
jmp
jb
xchg
insb
push
xchg
pop
sub
jae
gs
mov
or
sub
push
mov
pusha
inc
add
and
inc
movsb
lahf
mov
in
out
fbstp
lods
repnz
in
aaa
test
jns
inc
jecxz
aam
adc
xchg
xchg
push
lcall
es
inc
sbb
jge
or
loope
adc
std
jb
xchg
sbb
xor
mov
test
outsl
dec
jge
fsubrs
int
into
ret
adc
pop
mov
ret
test
rcrb
mov
imul
stos
popf
ja
aam
xchg
sub
in
imul
inc
cmpsl
xchg
mov
insb
mov
loopne
fists
mov
out
inc
fisttpll
or
mov
movsl
mov
fdiv
and
ds
dec
fwait
mov
scas
aad
sub
and
mov
imul
int
pop
add
add
popf
mov
pop
les
stc
mov
mov
ja
add
pop
inc
imul
xchg
push
mov
dec
or
bound
mov
xchg
test
popf
pop
pop
fcoml
movb
fimull
mov
mov
xor
out
push
nop
mov
dec
push
jecxz
fistl
pop
cmp
cmpsb
mov
lock
cmpsb
adc
pusha
sbbl
xchg
cmc
mov
leave
dec
mov
or
sti
mov
cwtl
test
shlb
sbb
xchg
jo
mov
xor
rcl
rclb
test
mov
jns
out
jns
addr16
movsb
sub
and
cmp
gs
stos
mov
es
sub
scas
mov
pop
iret
mov
fisubrs
call
int3
das
ficompl
jo
mov
addr16
add
mov
dec
jmp
mov
jo
fmulp
add
js
pop
cmp
push
test
shr
xchg
rclb
or
or
int
mov
into
mov
jae
jo
adc
or
aaa
scas
or
push
dec
xchg
adc
cmc
cmp
repz
sbb
and
push
mov
out
inc
jb
ret
and
mov
js
fadds
arpl
test
fdivp
xchg
inc
lock
test
xchg
push
xchg
roll
pushf
mov
lret
push
fidivrs
loopne
outsb
mov
cmp
jmp
jb
or
adc
cmpsb
adc
rcrb
imul
mov
imul
jl
std
sti
mov
xor
clc
dec
testb
mov
xchg
sub
daa
les
mov
ret
sub
pusha
push
and
push
xor
adcl
clc
cmp
lcall
inc
fldcw
mov
add
inc
movsl
out
cmpsb
shr
push
sub
insb
cmp
push
dec
jmp
inc
insl
fmuls
ss
pusha
int
enter
scas
dec
popf
xchg
shll
xor
push
loopne
call
pop
cwtl
mov
int3
xlat
leave
sub
hlt
or
jns
sti
mov
stc
push
stc
shlb
mov
mov
fucomp
cmp
popa
push
jbe
mov
mov
lcall
jp
faddl
jae
fcomi
dec
imul
or
leave
mov
mov
xchg
push
lret
mov
xor
subl
add
test
cld
fisttpl
adc
push
jnp
in
das
lods
mov
cmp
cmpsb
clc
sbb
or
inc
jg
jmp
mov
shl
push
cltd
negl
sbb
adc
out
mov
jbe
xchg
lods
mov
lea
decl
jp
dec
mov
sbb
imul
jle
aaa
in
fcoms
or
cmpsl
leave
arpl
mov
xor
nop
mov
jne
xor
sbb
push
repnz
sarl
lahf
xchg
pop
idivb
popl
add
mov
nop
ror
mov
cltd
addr16
shlb
xchg
movsl
fistps
popf
inc
icebp
mov
xlat
mov
les
xchg
ror
fldt
mov
sub
cmp
lahf
pop
sbbb
in
xchg
add
push
xchg
js
inc
jg
lcallw
cltd
mov
jecxz
ret
inc
adc
xchg
lahf
aaa
aaa
ret
pusha
je
cmp
jns
shlb
hlt
jle
insb
insb
imulb
jg
xchg
sbb
sbb
in
adc
xor
add
cmp
ja
std
mov
cmp
and
or
mov
ficompl
sbb
or
inc
pop
dec
pop
cmp
xor
imulb
fisubrs
adc
mov
or
dec
ret
data16
add
mov
lock
icebp
xor
mov
movsl
call
pushf
jle
lock
bound
lods
push
shlb
stos
adcb
ret
xchg
add
pop
xor
mov
cs
push
and
repz
mov
dec
lcall
arpl
xor
adc
push
sbb
scas
mov
insl
lods
inc
test
addl
mov
pop
imul
cmp
xchg
mov
jp
add
fcoml
call
inc
jp
jmp
push
lcall
ret
cwtl
lods
pop
mov
loope
nop
push
cmpsb
frstor
and
mov
pop
mov
mov
cltd
push
mov
ret
imul
hlt
aam
out
or
test
bound
mov
sahf
lea
pop
mov
sub
jae
cs
and
fsubl
daa
add
ds
sbb
std
adc
cmpsb
sub
sti
mov
cli
lods
sbb
notl
adc
gs
movsb
imul
pop
cli
jl
in
pushf
jo
xor
int3
sub
mov
mov
imul
and
jle
insl
cmp
popa
dec
sub
cmp
insb
xchg
mov
xchg
and
mov
roll
insl
call
or
push
in
add
lret
cltd
mov
sub
shl
xchg
adc
ljmp
push
xor
pop
outsb
dec
sub
into
cmp
call
pop
or
mov
fists
fcoml
jge
and
add
push
psubw
sbb
mov
xchg
popf
jecxz
movsb
test
mov
xchg
jge
pop
sub
pop
ljmp
ds
loop
or
pop
xchg
icebp
mov
jecxz
les
leave
adc
xchg
xchg
rcll
sbb
lods
fst
loope
pop
adc
rorl
andb
in
jp
icebp
loope
mov
push
or
xor
dec
xlat
push
adc
fidivl
jge
push
or
or
adc
ja
push
cmpsl
sbbb
sub
mov
pop
mov
lods
repnz
dec
out
scas
fs
mov
and
cmp
lahf
cmp
outsl
sbb
adc
add
push
in
inc
fxch
push
mov
fiaddl
cmc
lret
loop
or
shlb
addr16
jns
mov
mov
mov
in
jo
leave
addr16
stc
int
xlat
andb
jns
out
stc
hlt
mov
fs
imul
mov
jbe
sbb
mov
lock
adc
and
jns
push
divb
imul
pop
mov
xchg
jmp
push
jae
imul
sub
adc
jne
cwtl
out
divl
sbb
or
fwait
scas
pop
and
movsb
cmpsl
xor
and
out
sbb
lahf
aam
setnp
hlt
and
xchg
dec
push
or
imul
lods
aam
flds
mov
enter
hlt
call
ja
test
jbe
movsl
ficomps
adc
pop
scas
inc
push
enter
or
test
inc
xor
je
adc
rep
adc
mov
xor
outsl
outsb
push
shrb
push
jnp
push
xchg
test
call
push
rcr
adc
cmc
fidivl
jno
popf
dec
sahf
out
sub
aam
jmp
sar
adcb
fdivrl
andl
pop
mov
fs
cwtl
xchg
fsubr
bound
arpl
or
xchg
xchg
jg
cld
or
jmp
shl
aas
sahf
or
push
jnp
jl
jmp
jecxz
adc
mov
sbb
mov
pop
sbb
inc
jb
dec
orb
sar
mov
mov
daa
mov
xchg
inc
jae
loop
jg
sbb
xchg
mov
xchg
mov
bound
jg
js
pusha
mov
dec
jg
or
pop
mov
jmp
xorb
ss
mov
pop
iret
scas
ja
push
dec
lock
movhps
push
adc
cmp
es
pop
and
stos
loope
cmp
das
jmp
xlat
arpl
test
in
push
rol
mov
cwtl
or
cs
jmp
pop
push
lret
mov
mov
sbb
inc
mov
shrl
das
int
in
pop
and
jge
inc
cmp
and
andl
sub
mov
das
out
xchg
mulb
jbe
adc
cmp
xchg
pop
jl
int
lea
jne
and
add
fidivrl
jae
inc
cld
nop
call
mov
scas
pop
sbb
cmovns
das
paddb
mov
data16
mov
in
bound
mov
pushf
stos
lock
push
pop
repnz
in
je
gs
mov
jmp
popf
fcomps
push
loop
imul
jnp
mov
sub
and
pop
xlat
fcmovne
data16
addb
out
imul
data16
ljmp
add
js
popf
div
les
or
rorb
je
jge
je
fs
test
pop
pop
imul
cwtl
shlb
outsb
adc
cmp
das
or
lea
add
mov
cmp
or
call
repz
xor
push
scas
loope
adc
mov
sub
pushf
aam
jnp
daa
cwtl
cmp
std
dec
stos
fcmovnbe
xor
in
pop
jae
xorl
andb
mov
pop
jp
rorb
enter
mov
jecxz
cltd
stos
iret
sub
in
xor
in
or
jnp
jne
add
repnz
lret
es
cltd
imul
inc
loopne
cli
and
int3
lds
fisubs
or
addr16
loopne
adc
leave
dec
jne
ror
cmp
out
cwtl
dec
xchg
ficoms
iret
push
sub
mov
dec
dec
into
fs
leave
xchg
push
pushf
out
or
addr16
mov
xor
mov
cmc
or
out
mov
lods
xchg
sbb
data16
mov
movsl
push
adc
jecxz
add
scas
daa
add
dec
pop
sbb
inc
cmp
sub
push
or
xor
pusha
js
sbbb
fnstenv
mov
popf
cwtl
pop
pop
dec
cvtdq2ps
add
pop
loop
into
cmp
xor
add
sahf
std
xor
in
or
xchg
or
or
dec
cli
std
fisttpl
js
enter
nop
lret
xor
out
aam
dec
fldt
outsl
aam
pop
mov
push
jge
mov
neg
iret
jle
and
push
out
cltd
or
xchg
sub
je
mov
add
pusha
mov
pop
xor
imul
xor
xchg
push
xor
mov
inc
iret
dec
flds
divb
aas
icebp
rorb
outsb
sub
lret
dec
push
jbe
data16
call
mov
loopne
cmp
loope
std
push
in
xchg
push
sub
mov
adc
rcr
in
lock
jge
xor
data16
mov
js
lods
xorl
fnstsw
lods
add
lds
sarb
cmp
cmp
sbb
stos
popa
xchg
push
push
and
adc
cli
movsl
repnz
xlat
faddl
xchg
js
out
lcall
mov
aam
and
fmull
jg
js
or
imul
in
jp
in
or
pop
mov
dec
xchg
jg
xor
xor
cmp
xchg
movsl
stos
pushf
or
mov
jno
pop
sbb
dec
cmp
jmp
cld
int3
mov
dec
xor
popa
addr16
jbe
outsb
xchg
cltd
sbb
xchg
lret
daa
test
aad
inc
shr
sbb
xchg
orb
fmul
insb
lret
sbb
adcb
jmp
jmp
xchg
mov
mov
inc
push
add
xchg
insl
cli
add
and
leave
mov
sub
test
push
or
lods
push
ret
inc
inc
addb
mov
push
jle
dec
inc
les
ret
pop
add
jmp
gs
or
ret
test
xor
lea
sbb
inc
incb
xor
mov
lahf
test
sbb
fdivr
stos
mov
leave
arpl
jae
lahf
mov
mov
je
and
shlb
cs
adc
jg
lock
sub
inc
lock
sbb
cmp
and
add
sbb
cmp
aaa
bound
cmpsl
mov
push
mov
jg
jp
pop
push
ljmp
rcrb
adc
push
lret
ret
sbb
push
xor
ss
inc
jno
or
mov
push
out
fcomps
cld
imul
pop
xor
sub
cwtl
pop
push
movsb
inc
adc
lods
repnz
out
xchg
pop
mov
enter
lods
inc
mov
push
jp
andl
cmp
pop
testb
pop
incb
sbb
icebp
adc
addr16
jne
or
inc
frstor
xchg
jmp
xchg
mov
mov
inc
push
insb
xchg
inc
push
fstpt
push
jp
sti
insl
aaa
inc
lea
jmp
arpl
leave
rol
and
lret
push
outsl
in
xchg
dec
jbe
stos
dec
push
popf
mov
div
xchg
or
mov
cmp
lock
stos
dec
cli
mov
push
xor
sub
cmovne
or
jbe
mov
and
scas
nop
xchg
data16
rol
test
push
shl
jge
xchg
xor
mov
test
fidivl
jmp
je
inc
or
dec
push
cs
xchg
inc
add
aad
inc
fsubrl
xorb
mov
mov
in
hlt
mov
cmc
cld
inc
xor
imul
popa
sbb
ljmp
sub
jg
loope
push
jle
jg
xchg
inc
cli
and
cmpsb
cmp
sub
call
shll
or
cmpsl
mov
xchg
adc
mov
test
pop
and
sub
or
cmc
das
jmp
push
mov
cld
movsl
xor
xchg
ret
jno
in
jnp
and
loope
out
jns
rorl
cmp
inc
es
xchg
xor
shr
inc
rol
adc
push
pop
push
es
leave
cwtl
jbe
cmpsl
test
pushf
adc
jb
dec
movsl
inc
jns
jmp
mov
out
push
push
pop
ja
lea
sub
rorb
call
jp
push
mov
ret
inc
out
sub
mov
pop
jnp
pop
dec
and
bound
xchg
lcall
shl
jnp
push
aaa
pop
es
or
sub
pop
or
in
xor
lret
imulb
cmp
pop
test
and
pusha
repnz
jb
sbb
fs
inc
cmpl
loop
aas
loope
mov
cmpsl
mov
jg
cmp
mov
push
cltd
xchg
mov
dec
adc
cld
std
sti
mov
add
xchg
sub
mov
orb
cmp
jp
or
jae
insl
pop
dec
mov
test
xchg
lds
dec
and
out
sti
insl
pop
mov
lock
es
xor
in
xchg
xor
jmp
xchg
in
addr16
inc
sub
xchg
push
xchg
cli
mov
in
xchg
xor
pop
ret
or
addl
inc
cli
and
push
cli
shll
adc
lea
adcl
daa
mull
nop
out
pop
sbb
pop
dec
jp
mov
pushf
cmp
cmp
stos
dec
xor
testl
insb
es
dec
insb
add
jae
ret
je
js
mov
ficoml
cmp
mov
stos
das
push
inc
adc
out
push
rcrl
lcall
or
xor
gs
xchg
sbb
popa
push
out
pop
je
jmp
xor
or
mov
loop
push
push
dec
mov
lods
popa
scas
jnp
push
push
or
movsb
xchg
pop
dec
movsb
repnz
or
cld
loopne
adc
push
pop
jecxz
roll
pop
data16
jecxz
int3
jbe
lret
shr
mov
sbb
rcrl
jae
push
mov
xchg
jmp
push
cmc
push
push
add
in
xlat
pop
or
in
sub
xor
outsl
inc
aas
push
cmp
roll
jb
daa
xor
je
popl
mov
pop
inc
adc
inc
jge
pushf
pop
push
mov
pop
push
lea
repz
fldl
outsb
fcomps
pop
ja
add
stos
add
cld
sbb
pusha
mov
jp
sahf
xchg
sahf
xchg
pop
sahf
fucom
ja
jmp
xlat
ret
aam
or
or
xor
dec
call
xlat
movsb
cld
jl
scas
addl
adc
outsb
sbb
sahf
xchg
pop
xchg
xchg
jmp
mov
xchg
xlat
and
cmp
fwait
dec
push
push
xor
and
pop
subb
mov
push
or
jns
out
into
test
lds
shll
outsl
mov
cmp
or
enter
xlat
sahf
cmc
fisubs
and
jp
popa
mov
mov
dec
xchg
push
mov
sub
mov
ret
mov
sub
xchg
dec
insb
push
push
sub
ljmp
sbb
or
xchg
xchg
xchg
push
outsb
adc
cltd
mov
sbb
add
movsb
or
lods
cmp
jbe,pt
cmp
adc
fisttpl
ljmp
fnsave
out
xor
out
cwtl
fstpl
or
mov
inc
inc
sbb
cmpl
adc
popf
leave
push
xchg
xor
scas
aaa
cmp
xchg
add
cmp
pusha
lds
das
mov
js
add
out
mov
int
les
and
mov
pop
into
rolb
mov
mov
es
or
lret
adc
repnz
pop
lret
hlt
scas
repz
xchg
call
in
or
scas
decl
mov
mov
std
and
jg
dec
jecxz
add
lret
dec
pop
push
imul
jae
or
hlt
jae
leave
test
pop
les
orb
sub
mov
jno
mov
aaa
sbb
push
aam
dec
mov
icebp
dec
mov
fadd
movsl
roll
mov
mov
pop
daa
shll
add
pop
jnp
mov
insl
inc
cmc
cmc
or
es
lock
bound
xchg
inc
shll
push
dec
mov
pop
call
insb
orb
xchg
mov
inc
sbb
pop
push
ds
cmp
scas
stos
sub
add
scas
mov
inc
je
jbe
gs
sub
std
loope
jmp
rcr
mov
test
cmpsl
dec
sbb
sbb
pop
test
clts
inc
xchg
lock
fsubs
push
out
fsubr
loop
pop
aaa
cli
addr16
loop
pop
aam
xor
adc
sbb
pop
mov
mov
negb
adc
js
std
inc
testl
cli
mov
aad
pushf
js
out
insl
mov
stc
hlt
inc
ljmp
and
cs
mov
jns
in
mov
divl
loopne
sbb
std
int
sub
bound
lret
add
mov
std
or
sbb
and
andl
push
ret
iret
stos
pop
fisubs
push
iret
xor
int3
fisubrl
sub
adc
out
aad
pop
pop
ja
int
loope
int
pop
or
iret
lods
xchg
popf
jae
dec
mov
aas
jmp
jb
cmp
aam
or
mov
jle
xchg
not
adc
pop
in
xor
in
fs
push
and
mov
test
xchg
fstpt
jns
sti
aaa
dec
xor
or
leave
mov
je
jmp
pop
mov
ljmp
dec
mov
clc
call
mov
sbb
push
fs
shlb
call
mov
xor
insb
push
push
dec
xchg
cld
imul
mov
push
dec
std
pop
cld
push
mov
sub
dec
and
cmp
pop
push
out
push
mov
adc
dec
orl
loop
fs
rcr
or
test
xchg
ret
negb
push
jmp
ljmp
mov
or
stc
mov
mov
add
lock
mov
mov
add
incl
adc
or
andl
imul
outsb
adc
jo
sbb
xchg
lcall
add
push
mov
adc
cli
xchg
aaa
push
cmpsl
mov
mov
js
jns
sbb
aad
movsb
adc
sub
movsl
into
iret
orb
adc
xor
jle
push
sbb
xor
sbb
ds
jge
lret
xor
push
xchg
jg
fisttpl
rcr
aaa
cmp
xor
subl
leave
sbb
push
lret
pop
add
ss
pop
into
pop
add
xchg
test
movsb
adc
lods
inc
add
out
shll
daa
je
lods
insb
and
clc
stc
add
inc
xlat
xchg
cmc
repz
in
push
aaa
insl
mov
in
push
and
outsb
aad
dec
pop
inc
imul
sbb
and
aad
mov
cmpsl
cmpsb
jbe
in
adc
xchg
pop
lods
rcrl
jbe
xchg
loope
jp
testb
fdivl
push
and
cmc
add
and
js
inc
or
sub
aaa
xor
popa
pop
cmc
icebp
jmp
xchg
shl
push
mull
pop
mov
and
jmp
dec
cmp
shlb
in
sub
sbb
push
pop
jle
add
jns
push
scas
pop
mov
adcl
xchg
fcoml
xchg
cmp
inc
jb
sub
sub
cmp
pop
pop
dec
ds
repnz
lret
mov
enter
popa
loop
cmpsb
iret
inc
iret
adc
jno
jmp
cmp
cwtl
xchg
push
mov
pop
stc
add
mov
push
adcl
data16
jp
and
imul
movsb
dec
mov
negl
sar
data16
cli
and
lock
inc
cltd
inc
arpl
in
dec
add
push
addr16
aaa
clc
jge
mov
or
or
ret
push
fistpl
push
mov
jne
aam
xchg
sub
dec
xor
insb
cmp
jl
cmp
lret
js
lea
shrb
shlb
xlat
in
mov
ret
inc
addr16
arpl
mov
pop
shlb
pcmpeqb
fcoml
mov
into
fisubl
inc
push
popf
push
mov
icebp
add
push
fimull
jne
jmp
ljmp
xchg
dec
ljmp
rorb
xor
outsb
sub
jle
push
andb
pusha
sbb
sub
jo
leave
push
mov
inc
push
sbb
dec
cmpsl
mov
int
mov
mov
pusha
xchg
adc
out
jle
add
aad
fstp
sbb
in
xchg
sbb
adc
jecxz
xor
pusha
cs
popf
xchg
in
arpl
jl
stos
mov
out
mov
xor
fs
push
scas
mov
in
shr
leave
loope
out
push
std
sarl
push
dec
pop
mov
loope
data16
and
sub
mov
js
cmp
test
xchg
icebp
dec
push
jle
mov
xchg
sbb
repnz
rcrb
push
mov
mov
adc
sahf
xchg
adc
push
addr16
adc
add
xchg
jne
sbb
pop
xchg
mov
outsl
xchg
mov
jae
jne
mov
pop
xchg
push
mov
gs
loope
inc
sbb
sub
sbb
cs
pop
enter
sub
aam
nop
mov
push
sbb
cmpsb
sbb
xchg
ja
rorl
push
scas
or
leave
jp
clc
xchg
emms
lock
dec
faddl
stc
lods
cmp
pop
jb
mov
iret
sti
bound
dec
aad
in
and
xor
shrb
mov
xor
jne
push
sbbl
ret
adc
xchg
jnp
addb
mov
stos
sub
xor
aas
out
cmp
mov
jnp
int
push
outsl
subl
push
mov
les
in
add
dec
adc
loope
jl
aaa
xchg
cmpsl
call
xlat
cs
jl
stos
decl
into
jl
push
aam
inc
imul
andb
ljmp
add
mov
test
fwait
mov
jp
rcl
inc
sbb
mov
int3
push
ret
scas
pop
dec
out
mov
add
xor
push
or
sub
fistpl
mov
test
pop
add
or
cmpsb
jbe
outsl
jbe
adc
nopl
call
jecxz
xchg
out
pop
iret
cmp
xor
adc
xchg
pop
ljmp
adc
je
ja
scas
and
repz
push
adc
xor
imul
xchg
cltd
xchg
adc
sub
push
cwtl
cmp
clc
adc
sbb
out
and
imul
imull
cmp
iret
enter
and
out
frstor
dec
push
xor
lods
cmp
lret
xchg
inc
and
mov
aad
xor
stos
lahf
in
mov
pop
mov
adc
xchg
fmuls
test
rclb
fcmovbe
mov
push
ljmp
scas
push
rcrb
fnstenv
mov
movsl
sub
jg
and
pop
rclb
jnp
jp
fwait
or
into
xor
pop
sbb
cmp
out
mov
jne
mov
mov
inc
xchg
dec
xchg
in
xchg
mov
sahf
dec
push
gs
mov
mov
nop
sbb
les
fsubrl
sub
stc
rolb
clc
dec
lahf
iret
scas
movsl
push
in
sub
shll
into
jle
lods
daa
jmp
ja
es
sub
mov
ficomps
jb
roll
sti
or
rolb
adc
push
mov
fadds
mov
clc
test
dec
aam
pop
fimuls
pop
lret
movsb
js
xor
insb
rolb
add
mov
stos
push
mov
and
aaa
sub
inc
cltd
pop
inc
out
pop
jmp
push
add
cmp
adc
dec
jns
mov
loopne
push
xchg
mov
faddl
mov
shll
jmp
and
jo
cmp
mov
lret
arpl
xchg
adc
adc
repnz
inc
inc
xchg
bound
stc
jns
call
xor
add
mov
mov
sbb
sub
and
push
mov
jb
mov
test
xor
push
push
test
lret
outsl
mov
mov
ret
arpl
jbe
testl
jge
repz
clc
pusha
out
out
inc
push
sbb
cmp
es
cld
outsb
and
add
je
cmp
sub
ret
loop
push
ret
sti
dec
push
iret
push
inc
or
ret
out
dec
sub
imulb
jbe
cmpsl
loopne
fisttpll
ja
sbb
xchg
cmovl
cmp
lahf
movsb
mov
popa
fildll
add
inc
outsl
lahf
mov
pop
xchg
push
inc
mov
aam
mov
daa
or
mov
push
jp
rolb
cmp
dec
notl
lahf
pushf
adc
cmp
and
mov
cmc
adc
subl
add
inc
iret
push
iret
sbb
xchg
jns
mov
jle
push
in
push
inc
cmpsb
maxps
sbb
scas
push
std
sbb
out
addr16
xor
negl
xor
and
rcrb
aas
push
inc
sbb
sub
ss
int
mulb
mov
shlb
pop
testl
cmpsb
pop
push
pop
xchg
in
and
sbb
ss
mov
pushf
sub
xchg
sbb
mov
subb
cld
jle
jbe
sti
mov
lock
xor
mov
fstl
mov
xor
and
es
pop
cmc
addr16
ja
jecxz
pop
and
adc
ljmp
xor
test
inc
sahf
inc
aaa
pop
leave
pop
ret
in
push
dec
test
and
movsl
pop
popa
push
push
and
sub
sti
jp
mov
xor
lcall
outsb
push
and
sbb
imul
adc
ds
adc
popa
outsb
in
ja
mov
mov
aam
add
ret
outsb
xor
test
ficomps
or
sbb
xor
rolb
fwait
xor
loop
pop
or
daa
and
outsb
test
and
mov
leave
loope
lods
or
and
jno
dec
clc
add
jb
add
test
test
stos
jno
mov
clc
imul
xor
xchg
cmpsb
inc
hlt
dec
pop
mov
or
xchg
cmc
push
lret
mov
jle
cmc
dec
sub
mov
cli
inc
push
inc
cmp
idivb
cmp
push
hlt
fadd
mov
lret
pop
push
inc
in
bound
mov
pop
fdivr
cmp
cmc
xchg
jmp
cmp
pop
push
sbb
or
arpl
aam
pop
sti
es
rclb
in
pop
fiadds
push
adc
cs
xor
cmp
sbb
lock
ficoml
xor
dec
sbb
xor
mov
or
sbb
xor
push
shlb
jmp
or
jne
mov
cmpsb
mov
adc
leave
mov
loope
mov
cmpsl
push
int3
neg
sub
mov
sahf
iret
mov
fwait
imul
xor
cmp
sbb
jo
cmp
adc
push
leave
daa
xchg
pop
jnp
into
and
jle
lea
add
popf
movsb
sub
mov
mov
or
adcl
xchg
scas
jns
jge
pusha
lds
imul
mov
scas
mov
shl
int
std
rorl
or
ret
sub
cld
movsb
dec
popf
lock
nop
ss
arpl
stos
in
jge
movsb
sti
or
lcall
cmc
lods
push
pop
std
or
sub
mov
xor
or
dec
mov
cmp
test
arpl
mov
pop
xor
lea
jae
mov
adc
lcall
pop
sbb
js
push
sbb
dec
sbb
xor
pop
cmc
cmp
out
jb
jge
cmp
addr16
test
xchg
cld
fsubs
pop
or
sbb
lahf
imul
cld
jmp
inc
icebp
xchg
xchg
or
and
adc
mov
sbb
pop
pop
pop
fcomi
sub
mov
scas
or
test
iret
jp
sub
mov
jne
adc
and
sub
lret
pop
add
insl
es
test
pop
jle
ja
inc
and
inc
iret
ret
pop
sub
repz
inc
loop
lret
cmpsb
sti
push
popa
adc
push
or
gs
add
and
mov
inc
sbbl
std
lds
cmp
shlb
sbb
mov
and
ds
fdivl
dec
aaa
dec
pop
jb
jge
loopne
popa
les
mov
test
mov
xor
mov
jecxz
push
dec
imul
aam
pop
fisubs
mov
or
xorl
inc
pushf
out
aad
loope
push
mov
xchg
cmpsl
add
jb
mov
sti
or
adc
js
mov
pop
jbe
mov
pop
int3
cmp
aas
call
cltd
adc
adc
popa
cmp
inc
push
cli
leave
aaa
nop
insl
aas
cmp
sub
jecxz
inc
pop
test
mov
dec
lods
mov
add
loope
xor
lahf
cwtl
jp
test
xor
inc
sub
xchg
scas
popa
shrd
ret
pop
andb
mov
and
xchg
pop
xor
rclb
push
mov
sbb
sbb
in
movsb
and
inc
testb
out
sbb
mov
inc
mov
xor
sarl
cmp
jmp
imul
lcall
fistps
push
sub
sbb
dec
mov
add
gs
mov
add
aas
loopne
test
movsl
adc
jb
pushf
outsl
jle
loopne
lods
cmp
sub
pop
loop
jnp
mov
ret
push
test
cli
loopne
enter
mov
fmull
cmpsb
inc
fiadds
xor
mov
push
mov
ffree
shrb
lea
jmp
push
cltd
push
ds
dec
fucomp
out
subb
adc
rol
xchg
dec
push
shrl
pop
sub
cmp
jle
cmp
loopne
mov
adc
sahf
mov
xor
pop
arpl
int3
mov
in
repnz
das
or
xchg
mov
rol
xor
imul
fldcw
repz
scas
mov
pop
scas
and
popa
mov
and
rcll
dec
jmp
xor
je
aam
daa
mov
xor
imul
outsl
xor
pop
fcmovnu
leave
and
outsl
mov
inc
sbb
adc
cltd
das
arpl
loope
es
ret
or
lahf
ficompl
add
out
arpl
ja
dec
inc
movsl
sub
xor
or
cmp
repz
hlt
jp
repnz
xchg
cmp
inc
push
sub
mov
sub
mov
int
cmp
dec
jb
lock
add
ret
jge
add
nop
shll
or
jecxz
mov
xchg
or
or
mov
mov
ret
repz
jge
push
mov
xchg
pop
sub
push
fisubs
fcomp
pop
pop
push
fucomi
and
aaa
cld
popf
ja
cli
inc
in
dec
repz
hlt
push
rcrl
inc
inc
jmp
sbb
mov
je
sub
cmp
jae
mov
fildll
push
push
dec
rol
adc
mov
stos
iret
lcall
out
jbe
sub
pop
popf
sbbl
adc
sub
leave
loop
rolb
inc
jge
das
lods
cmp
int3
or
negl
adc
dec
cld
mov
adc
cmp
and
jl
mov
mov
repz
addr16
xor
loopne
out
scas
add
mov
cmpsb
ljmp
paddusw
pop
inc
sub
add
jmp
or
inc
push
clc
inc
push
xor
ja
outsb
xor
outsb
cmp
xchg
arpl
lahf
decb
inc
mov
fwait
clc
push
or
and
and
clc
sti
or
shlb
sub
fisttps
les
and
fistpll
dec
sub
mov
int3
repnz
jns
loope
sbb
clc
xchg
outsb
inc
andl
lock
repz
mov
lods
repz
cmpl
rorl
xlat
and
iret
pop
imul
cwtd
cwtl
pop
call
push
inc
pop
into
sub
stc
sub
mov
xor
cmp
scas
sarl
pop
scas
mov
test
push
jne
pop
notb
andl
mov
cmp
in
or
call
add
mov
pop
loopne
mov
lahf
xor
icebp
adc
cli
cltd
imul
sbb
dec
mov
dec
jg
in
stos
lcall
ror
cmpsl
sbb
sahf
mov
incb
sbb
xchg
add
aad
lds
cmp
jmp
mov
outsb
stos
lock
push
ret
mov
mov
mov
adc
shrb
mov
testb
jns
jno
jmp
sbb
and
mov
push
shl
cmpsb
imul
cli
cs
push
clc
cmp
fs
ljmp
push
mov
push
dec
xchg
cli
pop
xlat
xor
imul
sub
scas
sbb
mov
xlat
jb
pop
loopne
adc
cmc
in
dec
mov
arpl
ds
call
popa
xor
adc
mov
dec
fmuls
pop
lret
pop
es
int3
ret
into
pop
dec
jmp
mov
aam
pop
mov
jns
pushf
sbb
outsb
add
add
stc
sbb
mov
jo
imul
xchg
adc
cmpsb
mov
daa
mov
xchg
mov
jae
jle
and
ljmp
xchg
mov
mov
fisttpll
push
call
imul
jnp
pop
xchg
in
jo
mov
jp
inc
cmp
and
ljmp
jg
pop
and
pop
sbb
ljmp
shlb
and
push
xchg
subl
push
xchg
sub
lahf
repz
aaa
stos
xchg
xchg
aas
repz
cmp
lcall
xchg
xchg
jmp
xchg
aaa
push
test
dec
inc
xor
sbb
jge
flds
pop
pop
out
cli
xor
and
sub
fs
mov
xchg
pop
es
into
and
fwait
lods
xchg
and
lods
xlat
or
push
jmp
aad
out
fcmovne
rcrb
scas
inc
pop
sbb
incb
or
insb
rclb
sub
cmp
adc
and
iret
mov
aam
lods
xchg
shl
fstpl
mov
jo
mov
dec
cs
outsl
or
adc
push
add
sub
sahf
mov
cmp
xor
sbb
shl
jo
jne
test
inc
roll
repz
xchg
xor
or
mov
arpl
adc
and
lahf
ret
cwtl
mov
outsl
cmp
push
mov
mov
and
pop
or
lods
mov
dec
and
out
push
or
lea
adc
shr
scas
push
insb
icebp
sub
stos
test
push
adc
scas
cmp
cmpsl
and
stos
jbe
push
jbe
mov
sbb
mulb
mov
test
fldl
inc
mov
pop
push
roll
iret
leave
push
dec
or
or
out
dec
rclb
push
in
xor
pop
mov
ja
add
pop
stc
cmpsl
dec
xchg
in
push
fwait
cmpsl
lret
mov
std
mov
ret
push
adc
test
rorb
inc
add
push
inc
imul
call
inc
sbb
add
fnstenv
add
xor
cmp
mov
scas
enter
out
jo
ret
in
push
rorl
imul
aaa
ret
jp
xlat
inc
sub
imul
push
add
sbb
jb
push
aad
pop
fidivrs
fstps
ja
and
cmp
push
or
les
push
push
fwait
mov
lods
mov
testl
xor
jae
inc
in
pop
rorl
shl
repz
push
mov
daa
inc
jae
pop
jecxz
test
mov
push
and
addr16
or
je
push
in
xchg
dec
dec
fwait
mov
shlb
and
lret
fstpt
loope
cld
xchg
mov
xlat
or
lcall
imul
inc
mov
aam
mov
mov
les
movsb
mov
sub
sub
ja
pop
pop
and
sub
jae
lret
xor
push
scas
dec
lahf
adc
lahf
mov
and
sub
mov
mov
enter
test
mov
jp
and
fistpll
cld
clc
adc
sub
leave
sahf
jge
jmp
sbb
mov
dec
repz
dec
and
push
test
dec
mov
aas
mov
jl
xchg
pop
add
test
repnz
js
call
or
adc
pop
sbbl
aaa
sti
xor
jecxz
push
int3
add
fsubrs
bound
jle
mov
mov
stos
mov
ret
sub
cwtl
adc
stos
out
insl
push
insl
fwait
neg
leave
xor
lods
bound
xchg
sbb
adc
and
adc
mov
ljmp
pop
outsl
push
notb
xor
icebp
sbb
jo
sub
fidivrl
mov
rep
cmp
icebp
cmp
mov
or
xor
int
stos
fcmovbe
pop
gs
enter
sbb
sbb
push
push
loop
fldcw
xchg
xchg
in
lock
out
mov
add
dec
int
shr
or
std
or
sar
adc
push
ja
xchg
or
push
push
fnstsw
mov
scas
mov
ss
lods
or
sahf
cmc
daa
lods
jle
and
sub
popa
inc
and
es
add
dec
sbb
xchg
cld
sbb
xchg
and
movsb
cmp
sti
and
das
cmc
lcall
bnd
jbe
add
lods
movsb
fs
pop
les
inc
push
sbbb
lahf
jmp
fisttps
jecxz
dec
cmp
jns
mov
adc
fiadds
jae
mov
sahf
popa
fdivl
sti
sahf
push
jl
lea
test
pop
add
call
sub
fisttpll
repnz
jmp
inc
clc
int
das
mov
gs
adc
sbb
xchg
sbb
movnti
lahf
das
mov
jge
pop
jmp
and
into
sub
mov
cmp
sub
arpl
push
sbb
inc
jo
lea
cwtl
xchg
js
scas
stos
xchg
cmp
cmc
xchg
xor
lods
imul
insl
imul
cmc
mov
push
pop
hlt
pop
lock
push
leave
aaa
mov
jp
cs
roll
pop
inc
mov
inc
je
in
lock
cmpsl
inc
or
imul
pop
jno
xchg
paddb
or
add
push
packuswb
dec
xchg
ret
rcll
repnz
mov
pop
mov
dec
in
and
xchg
mov
mov
pop
hlt
clc
dec
repnz
int3
ret
lahf
movsl
fistpl
xor
nop
idivl
out
fistl
and
imul
push
out
lcall
xchg
inc
into
pop
loopne
push
scas
mov
jmp
xchg
aad
popa
xor
arpl
daa
xchg
dec
pop
call
dec
adc
stos
sbb
cwtl
push
imul
cmc
fistps
int3
mov
xor
sub
jmp
sub
xchg
xchg
stos
jb,pt
aad
out
fisubrl
lea
scas
add
mov
sahf
test
loopne
sub
loopne
insl
adc
xor
push
rcrb
jmp
out
icebp
cltd
dec
inc
xchg
add
aam
inc
movsb
mov
lcall
outsl
into
cmc
sti
cmp
ret
in
cltd
inc
push
imul
jb
idivb
mov
inc
mov
jbe
fucomp
notl
push
pop
push
or
sbb
jbe
inc
dec
pop
int
rcrl
mov
mov
xor
int
jo
sbb
or
jg
fisubrs
aad
fcomps
out
fstpl
pop
ss
popa
pop
jecxz
mov
mov
adc
neg
fcomp
add
test
and
adc
in
xchg
jp
cmp
int3
mov
push
popa
lret
lea
imul
mov
test
mov
and
xchg
mov
mov
sbb
fmuls
sbb
clc
mov
mov
inc
mov
fidivl
lret
fnstsw
dec
imul
lods
sbb
fsubr
pop
adc
dec
sbb
cli
cs
adc
jo
hlt
ja
test
pop
test
in
adc
dec
dec
push
add
shrb
rorb
sub
scas
mov
and
pusha
out
loope
jo
fimuls
inc
mov
ss
sahf
in
add
mov
lds
adc
sub
cmpsl
jns
fistps
lret
jmp
fucom
pop
mov
inc
pop
cmpb
add
mov
push
jns
in
out
idivb
shlb
daa
pop
stc
popa
adc
adc
rcrb
stc
or
or
enter
mov
and
xor
aam
push
mov
dec
cwtl
lock
push
mov
ffreep
jge
push
repz
jg
or
daa
dec
test
push
push
jb
outsl
or
mov
mov
jbe
ja
mov
stos
inc
push
int3
dec
sub
mov
add
divb
mov
fwait
call
or
or
add
xchg
mov
xor
call
or
or
jecxz
mov
adc
lds
stc
in
jp
jne
jnp
data16
hlt
movsl
out
outsl
aad
xchg
inc
pop
push
inc
push
push
imul
test
adc
jecxz
clc
out
mov
inc
pop
loope
inc
outsb
lds
divl
or
or
lahf
mov
xchg
aad
clc
in
ja
jae
dec
inc
insb
cs
dec
sbb
mov
jno
pop
lcall
sub
push
js
ds
or
bswap
sbb
pop
fcmovu
js
hlt
pop
clc
adc
shll
and
ret
ror
mov
xchg
in
dec
call
pop
push
into
repnz
mov
cmp
lock
jne
aam
and
test
psubusw
mov
adc
imul
xchg
out
cmpsl
mov
jge
mov
sahf
inc
xor
push
inc
pop
jecxz
mov
int
call
or
cmpsl
sub
mov
adc
adc
push
mov
shlb
aaa
pushf
mov
push
jne
sbb
popf
test
sub
cmp
fcoml
fcomps
scas
xchg
pushl
iret
cmpsb
and
je
mov
sbb
adc
fdivs
jae
xor
push
mov
push
cmc
add
lock
mov
jmp
cs
jae
dec
bnd
les
test
sub
cltd
and
fs
jno
or
jg
add
inc
xor
lret
enter
cmpsb
and
iret
stc
movb
adc
lcall
dec
and
inc
popl
pop
fisubl
jb
pop
or
hlt
in
jae
xchg
out
ficompl
mov
adc
pusha
adc
sub
stos
sub
adc
jo
lret
cmpsl
mov
ja
js
rclb
add
xchg
inc
dec
insb
addr16
adc
inc
hlt
sub
fbstp
mov
fsts
fs
fldt
xor
push
adc
insb
aad
sub
fisubrl
ss
cmc
imul
je
mov
loope
dec
out
xor
inc
lahf
mov
add
mov
out
gs
pop
push
in
dec
cmpsl
jno
inc
xor
out
cltd
jne
rcrb
fisttps
lds
cmp
jnp
pop
seto
cmp
adc
fstpl
pop
rolb
xchg
loop
adc
into
sbb
ljmp
dec
and
or
pop
mov
ja
jp
mov
and
and
pop
movsb
pop
sub
call
add
cmp
mov
gs
daa
dec
test
pop
xchg
and
sbb
test
nop
lahf
dec
scas
cmp
cmp
add
cmp
sub
lods
jae
bound
xchg
mov
fdivl
mov
ret
enterw
jmp
sub
shlb
lret
push
sub
mov
xor
sub
cmp
or
stc
stos
insl
or
ss
fwait
mov
inc
adc
rcrb
jo
orb
mov
xlat
lret
inc
xlat
ficompl
mov
mov
imul
jne
push
and
add
pop
arpl
out
loop
imul
enter
lock
adc
aaa
push
mov
and
mov
jp
bound
mov
xacquire
mov
inc
add
fisubs
sbb
pop
xor
push
inc
push
loopne
pop
movsb
mov
in
dec
pop
dec
popa
mov
sub
push
es
cmp
cli
fwait
ds
and
subl
fxch
pop
pop
xor
inc
push
pushf
xor
es
insl
push
and
fwait
movb
inc
imul
or
fildl
xchg
add
pop
fs
ja
mov
fmulp
jo
das
xchg
fdivrs
fwait
jbe
lahf
pop
xor
and
ficomps
rol
jne
int3
stos
add
cmp
in
push
lret
pop
iret
mov
pop
and
mov
je
mov
rorl
sbb
push
lret
mov
adc
push
push
mov
imul
into
mov
jl
jg
mov
push
adc
jo
sub
mov
ret
icebp
sbb
pop
and
ret
andl
fcmovb
push
add
popa
scas
out
int
pop
stc
jp
or
subl
xchg
pop
lock
xchg
fsubr
cmp
add
pop
jecxz
call
iret
test
mov
pop
adc
subl
xor
jae
cld
lret
jns
mov
leave
int3
xor
mov
mov
mov
js
movsb
clc
lods
std
mov
rcll
push
xlat
xchg
xchg
std
shl
xor
ds
jge
test
push
mov
mov
dec
jl
fsubrp
hlt
lret
daa
mov
inc
addb
mov
cltd
fs
add
push
pop
and
push
in
dec
out
cmp
cwtl
xlat
lcall
and
or
or
xor
sbb
mov
sbb
jo
xchg
or
out
inc
aas
xor
ret
dec
inc
inc
movsb
out
inc
push
mov
std
xor
outsb
movsl
rcl
in
out
push
lods
pop
lock
out
mov
stc
inc
inc
pop
es
sbb
insl
jge
xchg
clc
icebp
popa
sets
pusha
inc
pop
cmp
pop
cmp
lods
or
imul
int3
pop
lods
dec
std
movsb
out
stc
add
loope
gs
lods
mov
push
cltd
inc
std
cmp
sub
cmp
repz
inc
incb
pcmpgtw
pop
fisttps
loop
xorb
imul
xorb
or
jg
addr16
js
sti
push
pop
lods
inc
add
jne
mov
andb
outsb
xchg
mov
pop
mov
mov
mov
bound
cs
fs
js
enter
dec
test
inc
sbb
aas
pop
lds
cmp
cltd
push
jg
inc
push
popa
inc
fabs
mov
and
push
mov
push
inc
inc
cmpsl
xchg
add
fildl
jle
es
lods
rcrl
and
sub
cmp
repz
jmp
adc
ret
xchg
dec
pop
sbb
and
inc
fdivrl
outsb
ds
xor
push
mov
inc
add
sbb
and
hlt
fmulp
jge
arpl
in
pop
es
les
pop
das
push
adc
or
and
int
cltd
sub
or
ficomps
sbb
push
orb
out
pop
jbe
sbb
ds
in
mov
inc
mov
jo
mov
fisubrl
lods
inc
aas
into
ret
sbb
xchg
xor
add
hlt
arpl
cmp
pop
pop
add
dec
adc
jg
clc
jnp
dec
cmp
testb
add
out
movb
xor
sti
fiadds
addr16
lods
jnp
pushf
jle
out
inc
inc
push
sub
push
xor
or
fst
push
or
sbb
push
lret
scas
cmp
or
je
ss
push
mov
mov
mov
inc
dec
jo
lea
jg
or
jmp
dec
notl
adc
fcom
push
sbb
jmp
test
jns
push
push
inc
mov
std
es
xchg
outsb
call
sbb
cli
xchg
mov
jb
jg
add
sbb
pop
or
add
outsl
cmp
data16
jge
loope
lea
cmc
jb
hlt
mov
in
mov
out
popf
inc
mov
int
lods
insl
mov
cmp
and
in
jecxz
sbb
movl
sub
jmp
fnstcw
lea
in
push
iret
nop
lret
dec
inc
out
sub
leave
mov
clc
inc
jno
cltd
push
sbb
enter
lods
dec
dec
rolb
dec
inc
fwait
dec
add
fs
ud0
sub
out
mov
push
push
and
push
dec
movsb
xchg
inc
clc
insl
int
aaa
cmp
push
js
mov
imulb
pop
pop
sub
aas
sub
lock
mov
lret
out
xchg
shll
mov
mov
or
stos
xor
outsb
test
in
scas
movsl
repz
xchg
or
inc
cmc
enter
mov
mov
sbb
mov
fnstenv
adc
adc
and
or
sbb
jmp
xchg
cwtl
jnp
out
pop
ficoms
mov
clc
out
maskmovq
mull
lock
ffree
test
loop
scas
fs
rcl
and
aam
popa
push
sub
pcmpeqb
mov
lods
push
dec
jae
or
out
pop
lcall
dec
sbb
push
inc
xchg
int3
imul
nop
outsb
loop
shlb
lds
popf
mov
jnp
pusha
cmp
clc
jbe
out
fstpl
ja
addl
sti
cld
sub
or
testl
xchg
ljmp
movsb
adc
jne
cs
xchg
xchg
out
push
push
insl
add
mov
rcll
fdivrl
xor
mov
addb
rcrb
push
lock
nopl
ds
push
daa
pushf
adc
mov
rcrl
inc
into
push
adc
movsl
shlb
out
dec
dec
mov
or
pop
cmpsb
orl
cltd
mov
jl
leave
sub
icebp
xor
cmpsb
xchg
inc
mov
mov
imul
inc
sub
and
mov
rcrl
inc
inc
sarb
mov
fstl
ret
in
sbb
sbbl
jg
adc
je
sahf
cli
popf
insl
mov
lret
outsl
add
and
adc
ljmp
pop
lods
sbb
les
pop
dec
adc
push
dec
and
pop
sub
adc
cmp
push
loope
push
scas
jmp
je
daa
adc
mov
in
loop
inc
cmp
mov
sub
in
gs
fcmovbe
outsl
push
xlat
push
aaa
cmpsb
mov
addr16
or
into
or
mov
push
add
imul
enter
shlb
dec
xchg
pop
mov
orl
outsb
pushf
je
pop
mov
push
adc
popf
sub
in
popa
mov
mov
adc
fldt
imul
jmp
lods
mov
and
mov
cmp
test
cmp
push
mov
mov
jbe
mov
inc
lea
ret
mov
lcall
push
push
adc
test
stos
push
rclb
mov
mov
xchg
jne
fs
cli
lods
xchg
push
leave
sub
mov
xor
lahf
pop
mov
mov
pop
insb
pop
push
les
cmp
pop
and
out
ret
les
pop
movsl
scas
xchg
aam
pop
xchg
mov
mov
dec
adc
adcl
popf
or
push
pop
rcrl
sub
or
jo
jno
in
add
test
gs
das
push
sub
xchg
daa
jp
hlt
mov
cwtl
pop
loop
sub
cltd
fsubr
nop
sub
mov
sub
xor
outsb
ljmp
lea
sahf
lds
sub
jp
pop
add
mov
adc
movsb
test
jge
testl
adcl
test
lock
test
sub
sbb
or
or
add
loop
xchg
pop
cmp
jb
xchg
pop
cmp
adc
sub
cmc
inc
push
mov
testl
and
sbb
adc
fnstenv
mov
idivb
mov
cld
jg
insb
xor
sbb
loop
repz
mov
leave
pusha
imul
clc
sahf
mov
popf
xchg
ret
mov
jg
mov
bound
push
inc
mov
clc
loope
xchg
leave
aas
lods
mov
xor
stos
cmpsl
push
outsl
int3
xchg
mov
imul
cmpsl
pop
mov
outsb
xchg
xlat
bound
lahf
hlt
sahf
cmc
loopne
xor
enter
cld
inc
xchg
cmpsl
push
repz
call
mov
cmp
stc
push
jo
stos
jl
rclb
popa
sub
lds
dec
sub
test
cmpsb
out
lea
mov
fwait
push
sub
sub
es
sub
outsl
jmp
aaa
sbb
sbb
cmp
sarb
jecxz
sbb
outsb
pop
dec
lods
pushf
stos
mov
repz
mov
mov
sti
cmp
xchg
dec
mov
pop
sti
fisttpl
gs
pop
dec
int
fstl
and
mov
sub
test
add
stc
jge
xor
scas
lahf
clc
sti
push
inc
data16
sti
sahf
clc
test
cltd
push
push
and
jle
movsl
insb
std
cmp
pop
ret
fdivrl
dec
popf
cmpsb
int3
fs
dec
call
fldcw
mov
mov
aas
adc
xchg
aas
decb
andb
cmpl
cli
iret
cltd
push
mov
inc
ficoms
out
xchg
fwait
xchg
cltd
mov
iret
mov
into
push
jg
cmp
loopne
mov
test
hlt
adc
sub
lcall
jae
jle
sarb
mov
aam
fwait
dec
sub
imul
mov
enter
xchg
add
inc
inc
mov
push
fwait
or
adcl
outsl
mov
push
cmp
pop
mov
orl
rcrl
lcall
jno
leave
dec
idivl
jo
inc
adc
scas
popa
cmp
push
mov
in
pop
inc
cmc
push
jno
jae
test
xor
xor
pusha
std
in
repnz
mov
jb
shrb
xor
push
icebp
mov
pusha
pop
mov
dec
leave
cmpsl
sbb
mov
daa
mov
jne
xchg
in
mov
inc
nop
cmp
sub
push
adc
jg
inc
outsl
std
into
leave
push
andb
leave
imul
pop
lods
sub
pop
push
insl
mov
pop
aas
std
les
arpl
sahf
mov
push
test
repz
cmc
lea
xor
dec
bound
push
adc
adc
out
cld
mov
sub
mov
test
jns
mov
xchg
sub
enter
and
mov
or
push
outsb
mov
sub
inc
dec
mov
cmp
pop
sub
jg
aam
imul
xlat
jle
lret
sbb
pushf
lods
std
out
dec
test
jo
out
lret
pop
inc
mov
enter
jmp
adc
sbb
jg
test
mov
repnz
sub
adc
cmpsl
dec
repnz
push
in
add
cmp
push
daa
lahf
mulb
add
jb
sbb
or
push
sub
outsb
cmp
xchg
sbb
jne
ss
test
push
sub
jg
pop
movl
mov
adc
or
push
mov
or
xlat
hlt
sub
cmpsb
xchg
sbb
jns
sbb
or
decl
or
jmp
sub
loopne
dec
imul
cmpsb
es
ja
nop
jp
pop
aam
rcrl
inc
bound
mov
mov
mov
add
std
xchg
scas
adc
mov
out
inc
out
out
movsb
fsincos
stos
repnz
imul
je
xorl
adc
push
fnstsw
and
add
int3
jl
mov
fnstenv
loop
ret
fimull
jle
sbb
daa
arpl
dec
popaw
add
enter
xchg
pop
scas
xor
xchg
sub
inc
xchg
xchg
inc
push
ficoms
call
mov
mov
enter
lcall
mov
out
adc
add
cmp
stos
and
jae
enter
add
pop
insl
pop
pop
test
add
adc
sub
xor
mov
push
cld
shlb
ja
fs
aad
lret
mov
aam
testl
mov
mov
insl
cld
or
movsl
hlt
sub
or
sub
cmp
frstor
sbb
cmp
insb
fcoml
ja
and
fldt
stc
jge
xor
popa
cmp
mov
mov
mov
inc
mov
jns
cmpsb
pop
in
cwtl
add
jne
xchg
nop
push
icebp
out
sahf
js
lock
adc
dec
xor
arpl
mov
gs
push
sub
and
pop
loopne
pop
dec
insb
inc
cmp
bound
or
inc
mov
mov
mov
cltd
cmp
add
push
rclb
jno
mov
push
sbb
inc
jmp
pop
push
sarb
inc
xor
mull
push
mov
movsl
in
adc
loopne
test
xchg
sahf
mov
clc
mov
jnp
mov
inc
mov
js
cmpsb
repz
and
dec
fiadds
ficoms
cmp
fidivrs
movsl
mov
cmp
inc
movsb
push
mov
xchg
mov
pause
xchg
mov
jb
ret
dec
jg
js
jne
cmpl
mov
andb
mov
sahf
mov
mov
div
arpl
and
fdiv
ljmp
imul
int3
sti
out
lea
int3
repz
jmp
jl,pt
dec
push
shll
popa
hlt
inc
shlb
pop
jp
push
loopne
jno
aaa
pop
pusha
mov
xor
xchg
test
inc
test
imul
xchg
int
jo
or
adc
or
jae
push
xor
es
dec
imul
cmp
lahf
pop
loope
sub
scas
cmpsl
in
jo
fidivrs
movsb
es
fdivr
lahf
xchg
pop
and
mov
mov
inc
adc
add
call
and
lea
xchg
jae
mov
mov
add
clc
js
push
inc
aas
sub
movsl
pop
cmc
stos
fldl
mov
inc
cmp
mov
pop
mov
je
sti
lds
test
mov
pop
test
inc
pop
pop
aas
repnz
divb
sbbl
sub
outsl
lret
jge
insb
inc
xchg
add
add
scas
add
lcall
pop
jnp
cmp
fsubrl
mov
and
add
dec
sbb
insl
dec
jmp
xor
rcll
cmp
data16
pop
aam
and
cs
test
in
mov
mov
in
mov
dec
jno
mov
stc
adc
xchg
mov
or
sahf
mov
lss
lods
dec
ljmp
dec
test
int3
mov
add
lcall
stc
xchg
xchg
mov
in
scas
push
fisttpll
mov
sbb
pusha
and
and
xchg
dec
inc
in
lock
ljmp
sub
aam
aam
daa
or
ss
ja
or
jae
movsl
inc
mov
dec
jo
push
negl
add
adc
daa
sub
aaa
ret
out
push
jae
mov
ret
push
inc
push
pop
add
push
lcall
fmul
das
push
inc
bswap
popf
leave
jae
arpl
cld
ja
repz
and
subb
lcall
xchg
dec
loopne
cwtl
sub
sub
movswl
and
aas
push
adc
jmp
mov
adc
arpl
sub
inc
aad
xchg
adc
scas
movsl
cld
cwtl
adc
and
xchg
add
xor
sub
mov
push
fld
dec
cmp
outsl
mov
and
sub
add
mov
ss
mov
mov
pop
nop
xor
lcall
xchg
pop
fbstp
or
shrl
xor
cmp
mov
faddl
inc
mov
and
cmp
enter
jnp
jo
enter
loope
ljmp
loope
jae
loope
or
loope
pop
dec
inc
push
cli
mov
xor
xor
cmp
jmp
dec
iret
and
in
movsl
inc
call
xor
mov
pop
out
mov
lcall
xor
adc
add
inc
iret
notb
mov
cli
xor
insl
cs
jmp
lret
sarb
inc
jne
mov
mov
negb
popf
inc
cmpsl
jg
test
fstpl
xchg
pop
push
pop
lds
xchg
push
mov
aam
adc
fsts
int
cmp
sub
daa
je
insb
inc
mov
into
dec
jns
in
cmpsl
dec
leave
add
mov
outsl
cmp
or
and
sbb
jge,pn
jns
xor
test
adc
int3
cs
mulb
inc
mov
or
ds
mov
pop
roll
pop
popf
push
xor
mov
dec
inc
mov
cld
call
or
cli
pop
fisubs
notl
sub
lret
negb
xor
inc
aam
add
out
xor
pop
repnz
ret
or
test
or
pop
adc
cmpsb
repnz
xor
pop
mov
insl
mov
sub
cmp
fs
sub
push
xor
sub
daa
push
scas
push
in
pop
ret
stos
push
lahf
or
stc
sbb
sub
xor
fmull
add
pop
data16
adc
fistpll
lock
decb
popf
repz
ds
xlat
outsw
xchg
aas
push
lods
xlat
cwtl
push
test
call
push
loopne
es
arpl
subb
xor
inc
and
mov
insl
sbb
inc
mov
cmp
or
out
mov
xlat
mov
stos
sub
jne
fbstp
xor
jmp
mov
sbb
cld
int3
xor
or
shrl
mov
jo
repnz
popf
int
mov
ret
lea
cmp
dec
in
jp
mov
cmp
lods
imul
xchg
sbb
mov
mov
in
shlb
arpl
insb
test
adc
inc
pushf
loopew
cld
cmp
xor
and
mov
clc
pop
push
pop
insl
push
outsl
adc
and
cmpsl
scas
nop
mov
xchg
add
adc
popf
imul
pop
mov
fsubr
adc
popf
setae
pusha
leave
ja
jg
mov
or
xor
and
cmc
jbe
add
aaa
repz
scas
sub
out
push
mov
fs
ds
mov
cmp
ret
rcl
cmp
dec
arpl
jge
test
out
bound
icebp
or
aad
or
cli
sbb
or
std
and
cltd
jo
xor
hlt
aam
stc
dec
sahf
xor
fs
pop
stos
int3
add
sbb
jl
mov
jno
arpl
int
push
mov
adc
dec
jle
mov
adc
aam
dec
js
jp
xor
dec
testl
cmp
fs
jno
nop
inc
mov
leave
fldenv
cmc
ud1
shrl
push
mov
test
mov
stos
loope
arpl
xchg
sub
push
clc
pop
shlb
outsb
insl
ja
je
or
stc
pop
xchg
mov
cmc
bound
or
pop
call
rcl
add
stos
in
pop
lds
dec
idiv
mov
fdivrl
xor
cmc
adc
data16
push
mov
aas
daa
push
and
or
stc
or
push
icebp
hlt
sbb
pop
lret
pop
testl
mov
sub
test
push
mov
jp
mov
add
xchg
lret
addb
sbb
inc
jl
fldl
ret
mov
mov
sahf
cmp
rclb
xchg
popa
fstpl
cltd
stos
fldenv
sar
mov
mov
cmc
add
data16
xchg
stos
push
xor
dec
xchg
lds
ds
arpl
fwait
inc
pusha
mov
jp
dec
xchg
data16
gs
repz
lea
imul
xchg
rolb
stc
xor
imul
dec
mov
push
sub
xor
outsl
test
aaa
cli
adc
pushf
jle
push
aaa
sti
lods
stos
scas
repnz
inc
cltd
out
push
fbstp
aad
lods
mov
mov
add
xor
cmpsb
push
jecxz
push
xchg
xor
adc
outsb
sbb
dec
lret
out
sub
sub
lock
xchg
dec
pop
push
jbe
xchg
push
push
cs
fisubrl
lret
mov
stc
xchg
icebp
outsl
imul
sub
movsb
sub
ja
sub
inc
cmc
mov
xchg
pop
pop
jns
xchg
mov
stos
mul
pop
xchg
das
dec
inc
test
jno
loopne
inc
call
pop
jge
data16
out
int
clc
or
push
mov
cwtl
or
jecxz
jo
ja
jg
addr16
mov
stos
lods
pop
adc
shrb
jo
jle
pop
dec
sbb
cmc
push
sub
sub
dec
repz
pop
and
xor
popa
sbb
mov
cwtl
sahf
outsb
sbb
repnz
stos
mov
push
fs
or
pop
stos
xchg
das
cld
jb
pop
sbbl
outsl
push
push
rol
pusha
out
add
fildl
add
mov
pop
jge
cmpsb
mov
in
push
xchg
adc
sub
dec
test
dec
jp
rcl
arpl
push
nop
mov
xchg
mov
lock
xor
sbb
adc
xor
in
jl
into
cmp
je
int
xchg
jg
sbb
mov
push
fnstsw
pop
repnz
xchg
fbld
jp
ret
push
fwait
xor
into
pop
jae
sub
xchg
mov
sbb
dec
out
mov
leave
sbb
xchg
icebp
out
das
pusha
xchg
push
adc
pop
leave
call
adcl
lret
mov
fsubs
sbb
cltd
jmp
out
add
sub
or
sub
xchg
aas
ja
jp
mov
adc
adc
jo
fidivrl
jae
lea
inc
movsb
out
adc
outsl
xor
xor
push
imul
inc
in
shll
mov
into
sbb
outsb
mov
decb
push
xchg
dec
and
mov
push
jo
and
fnstenv
add
cmp
or
pop
pop
insl
imul
push
add
xchg
test
jb
enter
sbb
rcrb
repz
shl
movsb
jne
mov
rcrb
cmp
xlat
cltd
dec
out
aas
push
nop
pop
dec
sbb
mov
fnstenv
mov
mov
push
dec
pop
hlt
xor
jo
out
push
cmpsl
fiadds
mov
or
jno
lods
mov
nop
lret
pushf
mov
cmp
add
xchg
mov
dec
adc
or
xor
ja
mov
dec
or
test
push
cwtl
mov
add
rcr
addr16
stos
mov
and
pop
pop
and
sbb
dec
arpl
test
mov
or
cmp
add
sbb
xchg
xchg
inc
push
adc
mov
lock
adc
shll
jo
popa
scas
js
fmull
jmp
xchg
aad
add
lret
cmp
les
aad
mov
int3
test
leave
insb
xor
loope
cmp
inc
mov
shll
in
xor
out
inc
insb
fcoms
lcall
sub
arpl
leave
fsts
xchg
stos
fildl
psadbw
jg,pn
addr16
push
jg
fmull
lds
lds
xor
jmp
pop
pop
and
jno
ret
mov
lods
xchg
in
push
aaa
lods
sbb
inc
adc
jmp
and
jge
sbb
lret
push
mov
clc
dec
sbb
pop
stc
inc
xchg
mov
jno
ret
sub
sahf
lods
sub
rcrb
movsb
pop
fiaddl
cld
loope
lods
subl
je
and
adc
icebp
leave
pop
sbb
adc
inc
xor
jbe
adc
loope
and
icebp
clc
outsl
push
mov
icebp
ljmp
fsubr
loopne
stos
and
in
adc
pop
mov
movsl
inc
out
jg
xchg
and
negb
and
add
pop
scas
dec
xchg
sti
push
andb
pop
int3
cmp
jl
cmp
scas
scas
loope
shrb
sub
mov
xchg
stos
adc
andb
cwtl
or
push
ds
sbb
ljmp
add
movsl
std
cmc
enter
xor
lock
jbe
cltd
push
outsl
dec
xor
lret
inc
or
xchg
lret
add
add
sbb
in
or
loop
push
divl
adc
arpl
xor
test
add
addb
rcr
loope
cmp
dec
sbb
std
enter
xlat
shl
or
fisubrl
fidivl
sbb
pop
or
popf
fs
loope
clc
dec
add
fdivs
outsl
fstps
fs
addr16
mov
insb
shlb
inc
cld
cmpsb
or
adcb
or
push
push
xchg
dec
aam
xchg
fildll
movb
loopne
lea
sbb
sti
lahf
pusha
push
push
nop
mov
jae
jle
jo
add
roll
pop
out
popa
out
xchg
hlt
mov
hlt
add
fs
mov
pusha
mov
pop
idivb
fs
cld
sbb
ja
mov
jo
lds
loop
mov
rsm
add
mov
sub
inc
lea
push
and
fisubl
or
stc
lcall
xchg
and
adc
dec
mov
cmp
inc
and
jbe
xchg
divb
pop
pop
mov
scas
jbe
lcall
push
cwtl
cltd
jecxz
idivb
nop
sub
loope
push
add
cld
cmp
inc
dec
test
test
or
pop
xorl
mov
pop
scas
dec
or
cmc
orb
cmpsb
xchg
and
add
push
aam
aam
pop
mov
pop
adc
pusha
push
aam
test
dec
iret
dec
in
mov
mov
js
mov
daa
and
sbb
dec
test
sub
jae
lcall
push
mov
lock
push
mov
mov
cmpsl
dec
and
or
jb
movb
dec
jns
xor
call
int3
push
push
icebp
ja
cld
push
out
out
sbb
mov
cmp
es
mov
fstpl
or
dec
shlw
cs
es
sub
lahf
fildll
fucomi
ja
pusha
push
shl
sbbb
fs
add
mov
sub
ja
sahf
push
int
mov
lcall
pop
outsl
notb
stos
cmc
fsubrs
cmpl
sbb
pop
xchg
xchg
test
sbb
sub
aad
xor
add
loop
aaa
inc
push
ficoms
inc
jbe
subb
mov
sbb
mov
pop
in
aas
inc
fmull
movsb
loope
adc
in
pusha
sar
add
iret
add
push
or
xlat
mov
pop
push
decb
mov
ffree
pop
lock
arpl
sub
out
pop
sbb
add
pop
ljmp
mov
hlt
lods
cmp
sbb
pop
roll
push
jmp
adc
aaa
mov
xor
cmp
mov
ja
pop
push
jge
out
xchg
dec
mov
sbb
push
mov
int
cmp
xor
mov
cmpb
and
adc
pop
fistps
inc
clc
add
push
push
mov
dec
mov
mov
dec
iret
sti
cmp
dec
pop
sti
pop
mov
test
inc
and
andb
pop
mov
xor
pop
iret
mov
sub
add
shll
fidivrs
scas
fbstp
mov
jl
dec
pop
fisubrl
adc
repz
cmpsl
loopne
push
mov
add
xor
inc
loop
xchg
jp
in
cmp
addb
popa
popw
sahf
mov
pop
lds
addr16
es
push
mov
lock
pop
sahf
jo
subb
pop
lret
xor
stos
inc
sbb
cmpsb
mov
stc
enter
enter
clc
xchg
hlt
loope,pt
out
sbb
sahf
lea
dec
add
sahf
mov
jno
stos
pushf
xchg
fistpll
xchg
dec
stos
mov
xchg
xor
fistl
adc
jne
adc
pop
repz
fld
loopne
mov
lds
mov
sub
shlb
lds
xchg
pop
or
jno
int3
stc
push
add
mov
pop
sbb
testb
mov
cmpsl
hlt
sub
bound
or
sbb
pop
mov
push
aaa
sbb
inc
bound
hlt
out
and
cmc
add
icebp
push
popf
add
push
mov
jo
xor
orb
scas
outsb
cltd
lret
ret
imul
gs
dec
imul
pop
sahf
pop
jg
test
mov
mov
rorl
mov
iret
xchg
pop
pop
xchg
mov
cmpsb
dec
xor
sahf
sub
cs
xchg
add
mov
and
das
cltd
scas
pop
lahf
rcr
inc
push
movsb
xchg
sbbb
in
push
cmove
push
xor
jae
cs
mov
mov
ror
pop
jge
cmpsb
sub
xchg
push
fcmovb
rclb
or
jge
fsubrp
mov
add
pop
pusha
sub
mov
inc
es
xor
aas
add
adc
rclb
and
sub
inc
aad
jge
and
lock
push
sbb
scas
pop
inc
test
imul
mov
mov
mov
inc
pop
or
jo
dec
clc
jae
pop
cltd
dec
aam
data16
jmp
adc
mov
pop
inc
cmp
pop
dec
icebp
adc
add
cmp
mov
pop
jle
fs
cmc
push
cmc
std
cmp
enter
sbb
pop
inc
js
testb
xchg
pop
mov
dec
daa
sbb
rolb
out
adc
mov
push
or
mov
cmp
dec
cmpl
lods
sub
test
dec
or
ljmp
push
mov
test
aad
icebp
sti
push
and
sub
pop
testb
push
lods
pushf
lret
les
xor
cmp
shrl
or
fisubrl
icebp
push
mov
ljmp
sahf
pop
lret
fistl
pop
dec
pusha
dec
imul
xor
cs
jnp
test
inc
fsts
and
dec
add
jmp
jnp
dec
inc
movsl
in
in
or
aam
jnp
xlat
pop
dec
xchg
xchg
pop
outsl
bound
fiadds
int
aam
lods
pop
loope
sti
add
in
adc
mov
or
or
jg
nop
xor
scas
adc
fiaddl
outsl
test
push
sti
test
and
out
imul
shl
movsb
adc
imul
bound
add
in
xlat
push
sbb
jge
test
xchg
cmp
jbe
icebp
or
push
jmp
sbb
lret
inc
inc
nop
push
mov
mov
cmp
out
test
add
sti
sub
cs
inc
pushl
jl
push
xor
aam
pop
js
adc
nop
push
fldl
test
mov
lahf
and
test
test
mov
out
rol
cs
fimuls
popf
stos
pop
sub
cmp
pop
imul
adc
jo
shll
into
and
jg
dec
cltd
jb
xchg
ret
insl
push
push
jecxz
mov
test
inc
cmp
fisubrl
cld
fisubl
out
jg
push
push
dec
push
jne
lock
rorl
mov
inc
fldl
dec
inc
loope
lock
popa
push
inc
xchg
sub
push
clc
xchg
adc
fisubs
movsb
and
or
shl
je
and
filds
push
and
popa
in
cltd
inc
sub
cmp
mov
add
ljmp
and
mov
jo
push
lods
lret
test
adc
add
sub
ja
leave
xlat
xchg
int
shr
mov
pop
imul
pushf
adc
dec
jl
sbb
imul
sarl
addr16
pop
mov
jae
fucomp
ds
push
out
fisttps
sahf
add
xor
sbb
cmp
movsb
dec
add
cmp
jl
push
mov
cmpsb
jle
push
or
cmp
push
imul
push
pop
loopne
lock
das
xor
push
push
push
jg
or
insb
pop
or
pop
and
and
xorb
add
addr16
das
pusha
shl
dec
pop
sti
ret
lock
mov
ficompl
pop
mov
mov
les
sbb
sarl
scas
orb
mov
inc
dec
push
into
mov
sarb
bound
in
mov
iret
xor
popa
jge
jmp
ret
mov
repnz
loopne
es
inc
jnp
and
mov
imul
fiadds
je
or
cld
and
outsb
inc
and
movsl
rolb
test
pushf
jb
sub
enter
xor
jne
pop
dec
dec
xchg
cmc
xchg
mov
inc
daa
outsb
fildl
div
fs
stc
cld
gs
mov
sbb
lahf
ficompl
add
push
sbb
insl
cmp
xor
mov
mov
fstpl
add
aam
dec
notl
icebp
icebp
das
dec
fwait
leave
xchg
pop
into
push
mov
jmp
roll
sub
lock
dec
push
addb
movsb
ljmp
mov
nop
cmp
mov
lcall
ja
push
in
mov
in
lds
push
lock
mov
dec
orb
xorl
push
test
jae
sbb
push
xchg
sbb
cmpsl
jge
enter
jecxz
ret
or
lods
mov
push
rcrl
mov
sbb
mov
sbbl
mov
mov
pop
cmp
je
stos
out
aas
stc
out
dec
ret
sub
scas
hlt
shr
inc
adc
lret
nop
das
sub
movsb
std
arpl
cld
int
pop
mov
dec
lock
sbb
or
adc
or
int
inc
cmp
mov
mov
pop
pusha
adcb
mov
lock
xlat
lods
add
cmc
push
andl
scas
lods
in
aaa
popf
outsl
cmc
adc
sbb
out
out
aaa
lcall
adc
xchg
mov
scas
aas
out
pop
insb
dec
sti
shl
pop
cld
ret
or
xchg
inc
mov
nop
fwait
subb
in
imul
sub
scas
movsb
stos
mov
lea
sbb
pop
insl
insl
mov
add
jae
pusha
repnz
jae
repz
or
inc
movl
adc
movsb
jmp
mov
xor
push
xor
and
test
out
insb
in
jmp
mov
das
xlat
outsl
loope
cmp
loopne
mov
mov
adcb
loopne
jnp
dec
inc
cmp
or
pop
insb
cmpsb
mov
jl
lods
scas
pop
jge
call
pop
sar
or
movsl
fwait
dec
fsubrl
cmp
mov
mov
rcll
pushf
pop
dec
aas
push
push
fsubp
lcall
cmp
in
mov
xor
clc
iret
mov
jb
pop
jmp
inc
pop
movsb
cltd
fsubrs
push
ss
adc
push
jg
inc
jl
cmp
jb
adc
add
adc
loopne
ret
add
rcrb
xchg
jb
push
mov
inc
repz
lods
lahf
dec
xor
icebp
push
jae
xor
rcrb
mov
adc
clc
out
lret
or
mov
add
inc
mov
imul
ret
inc
shll
jmp
gs
rorb
jne
xchg
mov
and
dec
jmp
jg
xor
mov
adc
inc
mov
mov
push
nop
or
fst
ljmp
mov
out
lds
push
sub
mov
mov
in
lret
sti
inc
mov
and
aam
out
sbb
fwait
inc
mov
orb
outsl
mov
xor
stos
scas
inc
imul
cld
lea
iret
sub
mov
repnz
int3
aaa
push
xchg
lahf
pop
pop
sti
and
cli
sub
mov
in
cmpsl
loopne
add
in
jl
or
lods
jae
mov
pushf
lahf
fsubs
push
sbb
ja
std
adc
xchg
jo
xor
shrb
push
movsb
and
lods
pop
cli
xor
or
mov
sbb
sub
push
xchg
inc
inc
fwait
negl
add
sub
pop
mov
add
sar
adc
jp
xchg
jmp
fmull
shlb
in
iret
stc
sbb
jg
adc
adc
das
inc
push
dec
jnp
lret
daa
pop
and
xchg
jp
mov
jl
pop
aas
pop
push
xchg
or
xchg
and
sbb
xchg
push
jns
and
sub
fwait
daa
aaa
mov
sbb
outsl
mov
pop
sbb
std
loop
bswap
xchg
sahf
testb
nop
sahf
aam
mov
xchg
mov
or
and
cs
fsubrl
jno
mov
sbb
mov
lahf
or
jnp
push
xchg
mov
imul
cmpsb
ror
xchg
cld
jns
shl
aas
lods
stos
xor
fsts
call
stos
pop
xor
outsb
aam
fiaddl
jae
neg
xor
test
mov
sbb
jge
in
jecxz
push
pop
sbb
mov
push
sarl
push
and
inc
ds
jecxz
js
scas
xor
xor
lcall
xchg
aad
or
pop
cmp
test
push
push
jge
in
cwtl
and
insb
pop
and
icebp
jmp
jae
cmc
pop
add
mov
pop
int
jp
aam
in
nop
test
das
int
cltd
call
jno
fiadds
scas
ds
cmp
mov
adc
sbb
adc
or
enter
clc
pop
inc
fidivrl
and
push
sbb
xor
lods
xor
std
outsb
insb
clc
ret
jle
fisttpll
adc
cmp
aas
or
mov
inc
push
and
xor
ret
movsl
gs
add
cs
and
insb
mov
inc
dec
shrl
decb
fwait
inc
add
jp
xchg
mov
lods
pop
in
jp
jecxz
mov
sub
mov
jle
mov
fistpl
jl
sbb
inc
dec
xchg
adc
inc
popa
test
mov
xchg
push
fisttps
pop
jl
lods
ret
out
inc
xlat
test
inc
iret
pushf
fidivl
out
into
fcomps
mov
adc
int3
imul
mov
inc
je
or
jnp
mov
popa
adcl
push
aad
mov
loope
aas
std
jns
lret
push
push
pop
sub
push
cmp
fcomip
ja
inc
mov
sbb
lds
clc
in
xchg
push
xchg
ds
addb
or
hlt
push
stos
into
sub
loope
btc
mov
mov
fcomp
nop
adc
xor
fdivs
sahf
mov
fwait
sarb
stos
loopne
nop
sub
insb
fs
sbb
jg
popa
mov
cli
fwait
cmp
push
sarl
mov
mov
lods
add
jg
inc
loope
lock
mov
je
call
cli
iret
je
add
mov
dec
js
enter
loope
movsb
mov
lea
test
or
pop
cmp
pop
outsb
mov
cmc
nop
or
pop
daa
jg
jp
xor
mov
inc
cmp
mov
fsubrp
scas
fstps
jno
push
pop
scas
jl
or
xor
mov
in
data16
jmp
lods
jne
sub
xchg
pusha
lea
out
mov
push
or
movb
repz
shrl
cs
jns
idivb
lods
test
mov
add
loope
cmp
jno
test
xor
or
add
dec
xchg
mov
pushf
sbbl
cmp
adc
popa
jg
or
out
les
pop
jmp
loope
lods
pop
bound
std
mov
in
push
mov
xchg
ja
fcompl
pop
inc
mov
repnz
int
push
arpl
notb
aas
add
das
pop
int3
xchg
decb
std
scas
clc
inc
mov
and
lret
or
mov
mov
fs
jecxz
sbb
jne
aam
mov
jo
into
xacquire
mov
lods
addl
adcb
aas
sbb
or
faddl
mov
sahf
dec
mov
dec
repnz
fcmovb
or
jecxz
int3
ret
repnz
imul
push
cmp
lods
mov
jecxz
repnz
add
inc
push
pusha
or
stc
mov
ljmp
mov
jl
inc
test
mov
mov
popf
xor
mov
loopne
rolb
mov
lea
cli
adc
xor
mov
fistl
inc
sub
cmp
mov
in
sub
aam
mov
pushl
outsb
jbe
iret
and
dec
pop
aaa
int
fimull
push
xchg
sub
jl
xchg
pop
shlb
inc
mov
pushf
xchg
sub
cli
fbld
jae
xor
lret
cmp
mov
mov
mov
mov
xchg
repnz
sub
and
dec
daa
arpl
std
adc
cs
pushf
pushl
insb
dec
mov
les
int
push
xchg
xchg
cmpsl
in
cli
push
mov
dec
sbb
xor
cmp
dec
jno
inc
dec
rorb
push
icebp
and
hlt
fwait
inc
in
hlt
cwtl
lret
popa
test
lock
dec
test
arpl
test
push
js
adc
and
adcl
sbbb
jle
in
push
int3
addr16
repz
dec
clc
mov
sub
lret
xchg
sub
hlt
jmp
int3
in
lahf
jbe
out
or
dec
cwtl
notb
and
mov
cmp
rol
or
mov
adc
shlb
mov
int3
mov
imul
test
lds
fdivrl
pop
push
inc
push
cmpsl
test
adc
adc
inc
cmp
cltd
roll
scas
outsl
mov
dec
and
mov
push
add
sub
inc
in
add
es
test
js
mov
pop
loop
in
mov
pop
jmp
inc
lea
and
pusha
dec
roll
test
mov
or
lock
sbb
xor
jle
rclb
mull
add
xlat
dec
jge
loope
mov
xor
push
xchg
cmpl
push
mov
and
stc
and
pop
add
shll
outsl
dec
mov
je
rcrb
lods
mov
scas
mov
push
repnz
vmovd
inc
mov
mov
fildll
xor
jbe
push
mov
pop
jb
xrelease
mov
andb
lcall
lea
push
lret
fs
mov
popa
std
mov
cmpsb
inc
sub
jg
mov
and
aad
xor
sub
mov
cmovs
decl
sbb
push
and
out
mov
shll
push
mov
stc
sti
mov
sbb
andw
inc
jno
cld
sub
inc
xchg
dec
mov
jecxz
aaa
or
fistpll
pop
mov
and
push
sahf
push
cmpsl
js
ficoms
mov
not
sbb
mov
or
add
iret
insb
inc
stos
sub
add
inc
and
xor
cli
inc
mov
xchg
fmull
mov
iret
into
test
into
and
popf
jb
call
jmp
push
jo
mov
loopne
fimuls
jb
repnz
les
cmpsl
xchg
cmp
mov
shll
xchg
enter
stos
test
jecxz
lock
je
mov
xorl
sub
pop
xor
inc
setns
push
mov
jg
pop
adc
sbb
stos
pusha
pop
inc
orb
rolb
jae
jns
dec
push
out
mov
jne
outsl
lcall
push
leave
xlat
push
jmp
ss
xchg
pop
insl
add
aaa
cmp
lcall
mov
shlb
fwait
xchg
sbbb
cmp
push
arpl
pop
fmul
xchg
cs
out
xlat
mov
push
mov
jle
cmc
gs
std
pop
cmp
movsl
loop
push
out
mov
and
inc
out
sbb
inc
je
mov
fs
sbb
add
push
cli
add
dec
inc
enter
xor
mov
mov
add
lods
mov
or
gs
nop
stc
xlat
das
mov
stc
mov
ljmp
fidivs
jecxz
mov
mov
cltd
loopne
pushw
mov
adc
iret
mov
add
jmp
cmp
cmp
jne
lods
nop
shlb
cmp
xchg
pop
adc
mov
or
jmp
scas
subb
xlat
inc
cmp
or
jg
gs
xchg
xchg
add
mov
sub
jns
jl
mov
pusha
jb
cmp
fiadds
enter
adcb
xchg
shrl
sbb
imull
jmp
add
test
test
xor
pusha
insl
in
lods
arpl
xorb
ds
xchg
insl
and
les
decb
mov
jp
and
jbe
pop
sub
xchg
lods
lods
icebp
push
je
outsb
call
aas
leave
orl
lock
mov
mov
mov
xchg
jns
mov
loopne
out
popa
mov
inc
shrb
enter
js
and
pop
into
ficoml
inc
test
push
dec
and
daa
loope
andl
stos
enter
mov
adc
les
movl
jnp
gs
cmp
mov
or
xchg
pop
jae
lods
or
mov
pop
inc
jno
mov
add
sub
shll
dec
rclb
cmp
jno
pop
pop
jmp
enter
cmp
sarb
icebp
cwtl
ret
hlt
popf
sbbl
xor
int
mov
cwtl
and
sbb
cmp
flds
call
mov
xchg
cmpsb
pop
xorb
rolb
insb
adc
in
movsl
inc
mov
sbb
dec
jmp
mov
gs
lock
into
add
or
inc
pop
xor
cmp
fdivl
test
test
ds
jbe
mov
mov
sub
xor
popf
movsb
xor
or
push
inc
sub
mov
fbld
sub
or
andb
orb
mov
fwait
rcrb
movsl
test
mov
cmpsl
mov
fmuls
aad
aaa
mov
insb
nop
lds
punpcklbw
lds
cwtl
sbb
sbb
je
push
icebp
mov
pop
daa
xchg
out
add
dec
sbb
stos
in
pop
or
lret
sti
pop
lcall
pop
repz
in
dec
js
or
jecxz
gs
das
imul
cmp
pop
push
mov
ret
inc
xor
or
shll
add
icebp
movsb
outsb
inc
push
mov
sub
jmp
mov
xchg
mov
jge
adc
fbstp
pop
adcl
push
pop
sbb
adc
push
add
ljmp
aam
pop
orl
ja
cmpsl
mov
out
lods
scas
mov
push
mov
imul
cmp
jp
mov
pop
jnp
fsubl
aas
xlat
jns
icebp
push
inc
stos
adc
mov
push
sbb
aas
mov
out
dec
frstor
xchg
push
jb
mov
xorl
cmp
or
mov
test
push
or
adc
sbb
rcr
or
mov
jnp
mov
das
fadds
repnz
outsl
movsb
popa
popf
mov
cmpsl
jne
xchg
pop
adc
and
cmp
or
push
scas
or
inc
ret
pop
ret
mov
jno
popa
xchg
xchg
popa
and
xchg
jae
adcb
movsl
jg
inc
dec
pop
out
xchg
jnp
ja
jns
cmp
push
lods
jo
sti
sarl
and
xchg
push
test
cmp
cltd
mov
mov
movsl
push
and
int
and
inc
repnz
pop
sbb
fisubrl
ret
mov
mov
cmc
mov
std
mov
xchg
jge
test
adc
es
jecxz
adcb
push
je
aaa
adc
cli
mov
loop
sbb
jne
dec
out
mov
pop
mov
shlb
pop
cmp
dec
fwait
scas
lods
xor
mov
out
pop
ja
aaa
out
pop
out
sub
sbb
inc
sti
repz
sub
jne
bound
das
push
cwtl
inc
push
sbb
add
xor
jnp
icebp
mov
xchg
mov
xchg
scas
sbb
mov
push
fs
rol
inc
je
mov
and
xchg
ds
movsl
or
je
call
movl
lods
lret
cwtl
out
dec
or
sar
and
std
fmul
out
pop
ds
mov
or
js
or
sbb
nop
int3
mov
mov
call
mov
fs
insl
in
jne
or
not
xchg
sub
nop
decb
dec
push
add
xor
out
inc
int
adc
cmp
enter
out
lds
sub
and
lea
inc
or
int3
aad
cltd
fstl
push
test
jp
cmp
xchg
pop
push
cmpsl
xor
dec
repz
fisubrs
jg
inc
and
pop
adc
mov
xchg
mov
cltd
dec
or
mov
jns
stos
aam
jno
in
mov
dec
rcl
inc
repnz
and
dec
popl
popf
repz
cmp
mov
sbb
subl
push
leave
in
data16
out
lods
jae
inc
pop
es
in
pop
in
lea
sbbb
pop
ljmp
mov
fbstp
repz
cli
popf
enter
mov
xor
jo
xor
mov
jae
sbb
in
or
cs
scas
stc
in
lods
lahf
lock
in
loop
cltd
mov
icebp
jg
mov
push
push
stc
pop
in
cltd
and
repnz
jl
shl
or
add
mov
pusha
in
loop
mov
sbb
shrb
xchg
shrb
sub
push
push
jno
popa
xchg
rcl
xchg
pop
and
add
subl
popa
popa
mov
shrl
add
popa
push
sbb
adc
dec
in
lret
stc
sub
iret
ret
mov
shl
add
or
pop
shll
movsb
stos
ret
inc
pop
inc
or
setno
scas
pop
push
in
sub
inc
and
in
rcrl
dec
mov
mov
adc
jle
lahf
int3
cmpsl
std
fwait
imul
mov
xor
repz
aas
mov
jne
out
cmpsl
test
inc
xchg
bound
stc
shlb
repz
addr16
fucomi
mov
into
and
test
aas
test
xchg
popf
push
ljmp
mov
and
push
mov
imul
sbb
xor
mov
mov
pop
fcoms
inc
add
out
mov
vmovhps
ret
xchg
insl
mov
popa
mov
pop
repz
and
add
ljmp
push
js
jmp
push
aam
popa
adc
data16
rcrb
fdivl
dec
shrb
inc
sub
push
test
cmpsl
jno
and
shrl
push
fisubs
jmp
es
aad
dec
xor
or
mov
sub
cmp
repnz
mov
sub
push
dec
xor
jle
stc
pop
inc
sahf
push
xchg
cmp
lods
inc
popa
cmp
scas
jl
adc
add
pop
flds
das
inc
add
or
mov
push
mov
lock
shll
push
dec
cmp
jp
repnz
jl
jl
pop
pop
or
gs
outsl
mov
jnp
std
cmp
push
push
std
jno
or
push
notl
aad
jmp
sub
or
dec
nop
pop
sub
or
mov
shl
loop
push
cmp
daa
sbb
rolb
mov
and
xchg
cld
cwtl
in
xchg
and
sti
fs
insl
pop
sub
aad
ds
aaa
cmp
inc
xchg
int3
rcrl
cld
sets
fs
xchg
inc
sbb
sub
cmpsl
sbbl
or
or
sub
xchg
out
rcrb
test
mov
mov
iret
stc
dec
xchg
fcomps
adc
adc
or
cmp
and
gs
outsb
sub
jmp
cli
or
and
ret
adc
pusha
scas
repz
mov
push
scas
sbb
ret
js
stos
xlat
jl
in
or
int3
jecxz
add
and
mov
mov
data16
ret
push
es
sub
push
sbb
mov
mov
arpl
add
fs
mov
dec
lahf
aam
aaa
xor
es
out
js
or
shl
push
fstl
add
pop
sbb
daa
ljmp
mov
sahf
les
push
inc
sub
jns
std
sub
mov
scas
call
jle
lds
cmp
sub
fisubrl
mov
jl
pop
jg
arpl
pop
jb
push
mov
sbb
cmpsl
push
pusha
push
fcompl
jae
int3
mov
loope
cmpsl
fistps
xor
pop
lods
mov
out
jnp
mov
mov
xor
test
loop
push
jge
call
repnz
dec
rol
es
mov
xlat
mov
dec
dec
cli
adc
push
bound
pop
je
mov
scas
add
pop
push
mov
lcall
jbe
jbe
insb
pop
dec
mov
push
insl
dec
cmpsl
xlat
fsubr
xchg
xchg
in
insb
addl
nop
cmp
xchg
or
movsb
mov
out
jp
aaa
in
fsubs
subl
sti
inc
add
das
sti
mov
mov
clc
call
mov
jbe
cmpb
fnstcw
and
das
jg
aam
rcrb
or
insb
jge
gs
bnd
fwait
lds
aad
inc
ror
lock
call
add
ret
mov
notl
dec
loopne
xchg
addl
add
hlt
xor
lds
pop
rol
jne
es
std
mov
add
imul
movl
jb
orl
sahf
daa
jne
add
mov
pop
xchg
jbe
inc
add
leave
out
aam
jl
int3
dec
jl
cmpsl
lcall
outsb
sbb
add
outsb
mov
xchg
cwtl
iret
push
xchg
ljmp
insl
sub
mov
mov
adc
daa
and
inc
and
sub
paddb
cs
das
dec
out
mov
add
and
lds
cmpsb
mov
mov
mov
pop
xor
jmp
push
mov
stc
xor
sub
std
lcall
push
pop
cmp
jge
out
fincstp
jmp
scas
imulb
lahf
cmp
push
sbb
mov
mov
pushf
call
sbb
xorb
and
outsb
mov
fwait
outsb
jbe
ret
adc
dec
fdivr
addr16
and
dec
xchg
int3
xchg
sti
push
inc
sub
jnp
xor
test
clc
cmpsl
cmp
lods
lock
int
mov
and
inc
ret
lods
mov
loopne
mov
jle
push
mov
mov
sbb
hlt
aaa
cmpsl
or
stos
dec
adc
pop
sub
mov
ja
push
jb
xchg
gs
inc
pop
fistps
xchg
push
cmp
cli
mov
and
movsl
pop
js
adcb
paddq
std
in
add
dec
pushf
adc
inc
aad
pop
and
test
pop
jo
cmp
stos
dec
xchg
popf
pop
jle
xorb
negl
std
adcl
pop
inc
ret
pop
shll
test
sub
inc
outsl
jp
xor
gs
fdivs
ss
push
sub
int3
pop
dec
addr16
aam
mov
repz
movsl
inc
jns
enter
mov
sbb
lods
cmp
unpckhps
icebp
clc
int3
outsl
popf
negb
div
notl
mov
add
adc
fwait
inc
sub
add
rcl
popf
int3
dec
mov
ljmp
imul
dec
cmc
lods
pushf
scas
clc
mov
jae
das
arpl
pop
andl
sub
push
movsb
pop
test
stos
out
dec
push
jns
mov
add
aaa
pop
sub
shrl
roll
dec
scas
fnop
lret
adc
in
stc
sbb
std
add
dec
jl
jne
popf
fisubrl
lea
hlt
mov
sub
pop
ja
or
outsl
arpl
adc
push
or
leave
lods
in
jae
repnz
push
xor
loop
inc
das
xorb
push
fsubrs
jge
pushf
sti
in
outsl
adc
inc
cmpsl
push
ja
xor
sahf
filds
sbb
jo
out
int
jae
push
sub
sub
add
fwait
push
ret
aas
sub
fnstenv
pop
incl
insl
jmp
fs
iret
in
and
addb
inc
or
leave
fistpl
mov
pop
cmp
cmpsl
cltd
lods
in
jle
jns
mov
push
lahf
inc
inc
shlb
rcll
mov
scas
cwtl
xchg
xchg
arpl
dec
sti
inc
and
sub
push
ret
rol
addr16
test
or
mov
repnz
add
sbb
xchg
loope
jno
clc
push
and
inc
dec
push
push
xor
insl
test
outsb
fisubrs
loopne
lret
inc
jno
in
inc
lret
mov
push
push
stc
cmp
int
jmp
popf
cmc
sub
movsb
mov
fldenv
scas
fbstp
test
mov
imul
jp
popf
cli
test
scas
lods
jle
in
dec
ja
cmpsl
loopne
mov
xchg
push
fnstcw
fistpll
lock
repnz
cmp
push
sub
decb
lcall
out
into
fcom
popa
xlat
adcl
dec
dec
ds
mov
call
xor
ds
cmpsl
sbb
cmpsb
pop
adc
inc
sub
push
mov
movsl
jge
and
or
inc
icebp
jle
roll
fnstsw
adc
fnstsw
enter
add
mov
mov
test
mov
in
out
loope
and
out
push
loop
mov
loope
add
cs
fcmovne
adc
mov
inc
outsb
js
mov
sub
add
jo
scas
outsl
orb
sbb
cmp
nop
pop
jno
mov
push
sub
mov
xor
mov
or
and
mov
std
push
arpl
jp
cld
sub
clc
mov
outsl
loopne
mov
add
aad
add
jno
inc
filds
mov
lock
jnp
mov
aas
or
das
mov
in
mov
lret
out
int
xlat
fs
inc
fimull
das
add
into
push
mov
and
in
mov
inc
sub
add
mov
test
fptan
repz
enter
push
xlat
pop
mov
xchg
pop
xor
jno
jb
and
jo
lea
mov
fsubrl
pop
jbe
cwtl
mov
xchg
mov
inc
xchg
sbbb
imul
cld
add
das
adc
cld
hlt
jmp
divl
or
push
mov
sahf
cmpsl
mov
or
out
movsl
adc
adc
jae
bound
mov
cmp
mov
xor
ss
sub
imul
xor
mov
jno
push
mov
jne
aas
mov
jbe
or
and
jnp
mov
sbb
negl
inc
adc
and
repz
mov
inc
in
mov
mov
dec
dec
icebp
and
jl
clc
add
scas
into
and
jle
lock
testl
repz
sbb
jl
jmp
mov
xchg
enter
outsl
and
pushf
pop
jmp
mov
stos
cmc
cmc
mov
mov
ror
int
mov
xor
pop
sahf
sbb
stos
es
pop
jno
or
clc
jae
das
rol
and
dec
shlb
jno
scas
mov
adc
add
inc
and
push
fadd
test
mov
out
mov
jp
bound
addl
jns
xchg
add
or
sub
test
mov
dec
adc
ficoml
mov
jnp
loop
test
int3
notl
adc
test
push
push
push
and
sarl
arpl
push
call
repnz
addr16
call
cli
xchg
xor
lcall
ret
aam
stos
or
mov
out
daa
cltd
popa
dec
add
inc
push
jl
push
mull
mov
incl
mov
pop
mov
jmp
mov
xchg
rcrl
pop
mov
hlt
or
pop
mov
in
aam
sbb
arpl
or
push
pop
jne
xchg
adc
sub
fwait
cmpsb
adc
mov
fwait
inc
cmp
sbb
popf
mov
test
or
jno
fdiv
push
pop
inc
pop
push
and
loopne,pt
sbb
add
lret
fstpt
sbb
and
pop
xchg
dec
inc
addr16
jge
pop
rcll
repz
lcall
aam
scas
adc
inc
pop
pop
push
xor
sbb
movsl
cwtl
mov
cmpsb
inc
fs
loope
inc
xor
or
repnz
xor
adc
cmpsl
aaa
pop
lcall
loop
xorb
orl
es
insl
add
inc
subl
scas
sbb
sub
dec
pop
xor
dec
pop
xchg
xchg
push
and
popa
out
imulb
shrl
imul
cmp
lret
pop
fimuls
pop
pop
xor
adc
addr16
sti
cld
mov
jmp
scas
push
dec
out
mov
fimuls
jo
jno
loope
pop
adc
mov
js
inc
filds
and
xor
loop
clc
push
imul
mov
fnstsw
mov
inc
mov
push
enter
or
subb
add
xor
mov
push
daa
sbb
sahf
or
and
xlat
and
inc
dec
lret
notl
push
sbb
popf
lods
add
or
jecxz
push
loopne
push
mov
or
sbb
pop
hlt
gs
dec
inc
scas
mov
and
pop
cld
fistpll
push
mov
and
repnz
mov
imull
jl
mov
arpl
and
out
xchg
jp
sbb
in
lock
mov
cmp
sbb
jge
aam
inc
pop
xlat
repnz
addr16
mov
out
jle
test
cmp
mov
jmp
jl
fiaddl
fldt
ret
shrb
mov
ret
bound
lea
aaa
xor
roll
aam
jmp
add
mov
push
sub
jg
sub
dec
jnp
sahf
scas
xchg
sahf
js
mov
call
mov
sbb
stos
dec
gs
and
xor
fstpt
je
rorb
call
js
cmp
sahf
mov
int3
adc
idivb
mov
lds
lods
and
pop
daa
or
cmp
pop
out
mov
sub
jae
push
clc
iret
pusha
jg
cmpsb
scas
sbb
roll
dec
adc
lock
jo
lahf
mov
out
loop
mov
jle
repnz
je
xchg
stos
adc
aam
or
in
clc
cwtl
push
add
in
mov
add
jne
ficoms
arpl
jmp
sti
dec
push
pop
cwtl
sbb
in
test
gs
mov
loop
stc
sbbl
sahf
dec
dec
mov
fmull
mov
push
gs
lods
out
mov
rcrb
push
xor
xor
pop
mov
fs
push
push
xor
cwtl
es
ficoml
jb
scas
fwait
pop
sahf
test
aam
sbb
cli
fimull
and
sti
clc
loop
jae
lods
add
fcmovnb
jo
ret
std
cmp
out
stos
push
dec
imul
std
mov
add
stc
jecxz
push
pop
daa
ds
add
ror
mov
mov
and
jne
push
cld
push
jg
inc
stc
fistl
bndldx
mov
dec
daa
bound
popf
xchg
movsb
adc
xor
cltd
mov
int3
lods
or
cmp
leave
in
pop
stc
add
inc
xor
mov
movsb
incb
xlat
inc
pop
jl
mov
adc
cmpsl
out
sbb
leave
or
or
or
in
scas
mov
ss
rol
sbb
mov
es
aad
lret
xchg
in
daa
push
cmc
jge
xchg
sahf
and
mov
sbb
aas
clc
mov
incl
xchg
cmp
jg
pop
sti
cmp
dec
mov
xlat
mov
or
cmp
jge
sbb
and
imul
sarl
mov
lcall
loopne
adc
jno
lret
jae
jns
sub
sbb
mov
inc
cmp
mov
fidivrs
push
jne
loope
inc
lock
mov
dec
cmp
ja
xor
nop
nop
iret
add
shll
aaa
inc
mov
sarl
hlt
clc
xor
and
sub
stc
xchg
jge
jnp
or
fistl
es
dec
pushf
scas
sarl
loope
lcall
and
orl
push
sub
insb
push
mov
lret
pop
mov
add
sub
add
cmp
mov
ljmp
cmp
cmp
ss
mov
mov
or
pop
push
sbb
pop
push
pop
nop
push
bound
or
mov
cmp
or
xchg
loop
add
and
out
movsb
stos
inc
je
aaa
sbbl
or
flds
pop
sub
test
outsl
call
lahf
scas
fnsave
cmp
fwait
sti
pop
adc
pop
nop
in
out
test
dec
subl
addr16
mov
lcall
cmp
aam
jo
test
hlt
sub
outsb
cmp
jo
cmpb
jne
dec
or
out
movsb
pop
push
pop
push
or
cwtl
ja
je
inc
xor
and
bound
jecxz
fbstp
push
add
fstpl
and
clc
in
pop
arpl
lds
cli
pop
add
pop
fwait
in
les
pop
cmp
push
adc
dec
mov
cmp
ljmp
cmc
arpl
stos
inc
pop
lcall
lds
loop
xchg
mov
ret
es
test
in
popf
imul
in
or
jb
test
fmul
add
lcall
ja
xchg
aam
pushf
ljmp
mov
mov
scas
rcl
adc
sbb
push
out
mov
and
push
pushf
add
insb
out
outsb
lock
in
in
push
dec
jno
xor
mov
mov
push
test
sahf
js
test
sbb
dec
push
inc
ss
xchg
fcomps
hlt
adc
add
daa
lock
jmp
sbb
cmpsl
pushf
push
lods
sbb
js
mov
xchg
jnp
or
and
lret
mov
popa
sbb
sysret
pop
sbb
lea
push
test
sahf
cmp
in
or
pop
popa
dec
stos
adc
les
data16
xchg
lods
aas
and
ss
push
cmp
mov
sbb
scas
push
stos
sahf
fists
out
mov
or
cmp
and
movb
aas
jnp
dec
inc
jae
das
xchg
pop
inc
aas
jle
loope
cltd
pop
mov
icebp
cld
imul
fwait
push
pop
jb
pop
push
cmpsb
mov
cmp
cmp
inc
pop
test
pusha
xchg
sub
ljmp
sub
cmp
cmp
fildl
lods
mov
jl
in
jle
dec
add
subb
scas
insl
pop
jecxz
xlat
or
or
mov
out
popf
jge
mov
or
sbb
test
std
cwtl
gs
pop
icebp
xor
dec
mov
in
es
mov
and
or
movsb
fidivs
or
addr16
in
xchg
ds
lret
xor
mov
insl
cmp
push
fldenv
pop
cmpsl
jno
xchg
int3
lods
sub
mov
push
aad
ret
dec
cltd
mov
insb
pop
lods
mov
dec
mov
jbe
into
push
cmp
je
sarb
xlat
inc
fnstsw
std
testb
push
adc
adc
rorl
sbb
fcom
std
xchg
das
cmp
rolb
dec
mov
sbb
test
inc
fists
sub
int
and
dec
mov
jg
out
jle
lret
call
mov
inc
mov
and
out
adcb
repz
push
ror
mov
dec
jp
daa
jmp
lret
in
shlb
pop
xlat
mov
hlt
arpl
cmp
sbb
push
mov
lods
idivb
fcmovbe
std
aam
bound
mov
pop
xchg
inc
mov
push
xlat
inc
sub
inc
lods
sub
jl
cmp
aas
cli
adc
sub
mov
mov
lret
popf
pop
push
das
sub
in
pop
xchg
ljmp
push
push
hlt
adc
and
inc
pushf
jl
imul
cmp
imul
movsl
add
pop
stos
cltd
pusha
mov
sti
roll
scas
xlat
pop
inc
and
pushf
repz
cltd
mov
aaa
lret
rclb
or
aaa
imul
adcl
sub
pop
fwait
mov
cli
insl
add
clc
je
popa
and
xor
pop
out
pop
add
int3
lret
inc
data16
sbb
jecxz
rcrl
push
sub
mulw
cmpsb
fsubl
jns
loopne
mov
loopne
adc
ja
leave
xchg
ss
out
scas
outsb
mov
cmp
inc
pop
push
pop
fcoml
fstpl
xchg
loopne
sbb
movsb
pop
cltd
outsl
into
push
hlt
jne,pn
loop
or
loopne
shrb
cmp
rcl
arpl
ss
shl
shl
fdivrl
jecxz
adc
insb
js
aam
mov
mov
fdiv
push
adcb
das
pushf
mov
outsb
add
xor
pop
mov
leave
jns
mov
lahf
aaa
inc
test
icebp
mov
or
scas
sbb
dec
sub
or
mov
add
inc
repz
stos
add
add
sbb
movsl
fadds
rep
jne
lahf
jno
bound
fbld
bound
mov
inc
inc
inc
movsl
dec
mov
jno
cmp
pop
and
mov
sbb
mov
mov
data16
fmuls
shlb
fwait
mov
ds
sbbb
stos
js
xor
mov
daa
mov
sbb
std
mov
popa
shrl
popf
fisubrs
inc
jbe
mov
xchg
daa
xchg
cmp
addl
cmp
out
push
call
lods
outsl
and
jo
das
pop
sbb
ja
mov
xor
lcall
iret
and
jecxz
in
rolb
push
fcoml
jno
or
push
bound
jge
sub
sub
in
mov
cmp
pushf
lds
outsb
adc
fdivrl
filds
jbe
dec
pop
xchg
repz
je
or
stc
in
inc
or
sub
outsb
das
mov
sbb
faddl
xor
sub
dec
shll
pop
lcall
inc
mov
lods
arpl
cli
lea
push
lods
scas
ficompl
adc
push
inc
fldenv
dec
dec
js
dec
lcall
inc
mov
lea
int
cmp
mov
enter
negl
inc
mov
mov
mov
mov
aad
xchg
fmuls
lret
imull
cmp
mov
inc
cld
mov
inc
ffreep
sub
add
mov
out
cli
jge
add
push
loope
jle
mov
lods
jae
push
jecxz
mov
xor
lods
mov
xor
xor
push
insl
jmp
repz
mov
subl
idiv
sub
push
cmpb
test
jp
loope
cmp
pop
xor
xchg
imul
push
jp
setne
sub
sbb
arpl
aas
dec
pop
aam
mov
sbb
xchg
sbbb
adc
pop
out
aad
pop
adc
outsb
aad
iret
test
xchg
mov
add
aas
lods
xchg
add
push
add
or
shll
lock
or
cmpsb
sahf
xlat
sbb
in
lret
cmp
dec
pop
data16
dec
cmpsl
outsl
xchg
add
mov
hlt
xchg
es
sub
subl
jle
addr16
fsubp
dec
adc
mov
xchg
repnz
add
push
xchg
idiv
pop
cmp
cmpsl
les
mov
outsl
jecxz
jb
xchg
xchg
pushf
push
repz
je
fucomip
ds
andl
mov
jns
push
cmp
mov
mov
fs
test
test
push
out
or
arpl
dec
mov
xor
cmpl
outsb
push
imul
addb
xor
pop
xor
sbbl
andb
je
xor
cmp
stos
pop
xlat
xchg
xchg
stc
call
scas
mov
dec
xchg
mov
mov
dec
cmp
xorl
xor
fisubrl
repnz
mov
add
clc
fstps
add
mov
loope
adc
jnp
xchg
jl
sahf
scas
rclb
fldl
fwait
test
xchg
push
ja
int3
pop
pop
loope
jecxz
sbb
mov
gs
in
ja
aam
jmp
mov
xor
push
cwtl
aaa
cmpsl
test
out
fldcw
or
lods
frstor
add
cmpsb
mov
sub
sub
mov
jnp
pop
roll
fwait
lock
fcom
sbb
dec
jl
inc
aad
ss
pushf
adc
dec
outsl
orl
dec
dec
cmc
loope
pop
jne
xchg
out
mov
in
jge
das
int3
jb
or
pop
loopne
out
test
scas
int3
test
xlat
cmp
and
add
ret
int3
adc
push
movsb
lds
int3
and
pop
xor
or
stos
pop
jle
mov
out
pop
pop
out
xor
out
sub
rcll
adc
push
ljmp
lds
add
bound
insl
aaa
jmp
adc
fcoml
inc
decl
shl
jmp
xor
sub
mov
pop
das
cli
jl
insb
fstps
cmp
jmp
outsl
lds
push
xchg
imul
imul
cmp
das
popa
mov
pop
jle
lods
xchg
adc
cmpsl
mov
test
sub
push
sub
mov
push
out
stc
in
add
sbb
je
mov
push
and
loop
cmc
xchg
aas
daa
daa
dec
cmp
adc
pop
xadd
and
jnp
jge
cmp
sub
push
xchg
add
dec
sti
lahf
push
test
add
pop
in
out
sbb
sti
insl
loop
adc
add
in
mov
mov
sbb
cs
mov
lock
ss
mov
aam
or
dec
cmp
popf
sub
adc
insb
shrb
dec
and
mov
int3
test
sti
sbb
dec
sbb
lods
aas
jle
xlat
xlat
mov
iret
adc
in
mov
add
jg
insb
mov
js
in
cmpsb
mov
jecxz
popw
loope
fnstcw
xchg
mov
dec
sub
ljmp
xchg
in
and
adc
pop
stc
jnp
mov
and
cld
lcall
push
lret
push
fsts
add
and
mov
mov
sub
or
andl
sub
or
aas
aad
dec
cs
pop
or
ja
lret
xchg
movsb
popf
ss
insl
xor
mov
lea
std
mov
data16
push
mov
fstl
dec
sbb
adc
xor
jbe
roll
stc
xchg
movsl
test
sbb
les
dec
in
mov
jl
sti
jns
push
sti
mov
fistpl
pop
mov
les
aad
cmp
loope
mov
jecxz
repz
and
jp
xchg
mov
jae
sbb
jo
data16
jno
sbb
pop
aam
jl
add
add
insb
call
fwait
in
jo
dec
imul
stos
mov
lahf
jo
inc
lds
xchg
fimull
mov
cmpsl
and
icebp
loopne
pop
pop
test
mov
dec
rcrl
mov
mov
dec
out
gs
pop
add
sub
mov
dec
cli
pop
jge
lsl
or
or
or
inc
adc
push
mov
sarl
sbb
pop
repz
jb
jp
jns
ja
aas
sti
cmpsl
mov
movsb
ret
lea
cmp
or
rorl
cltd
hlt
lods
adc
jl
pop
aam
jb
aaa
mov
in
mov
jl
roll
dec
out
sahf
mov
movsl
sub
sbb
mov
and
xchg
inc
add
push
cmpsl
mov
fdivl
addr16
adc
imul
iret
sub
clc
xchg
mov
xchg
jecxz
shll
adc
jae
insb
out
gs
int3
pop
pop
test
into
push
popa
mov
pop
push
cmc
cmpsb
pop
mov
stos
movsb
ja
or
dec
inc
push
xor
shlb
sub
dec
cmpsl
cmp
push
shr
jmp
ret
mov
repz
fwait
scas
addl
jo
dec
mov
dec
or
sbb
lds
sub
mov
xchg
insb
or
nop
fst
jbe
sbb
xchg
push
jmp
sub
xchg
into
jns
xor
mov
cmova
repz
xor
xor
lea
cmpsl
xor
in
fidivrl
les
pop
fs
or
pushl
sti
fsubs
shrl
les
dec
or
mov
pop
mov
mov
into
loop
loopne
jecxz
push
add
dec
cs
daa
fwait
lea
and
adc
mov
mov
jle
lret
add
insl
int3
or
xchg
xchg
sbb
idiv
add
int3
sar
xchg
aad
dec
mov
mov
mov
sti
es
lret
pop
and
lret
inc
adc
xchg
fcomp
stos
mov
adc
jae
rcr
jge
push
popf
fdivrs
nop
pop
cmc
xorl
dec
sahf
or
lcall
push
aam
cli
arpl
lret
jbe
les
sbb
bound
mov
cmpsb
int3
push
les
mov
dec
das
jae
arpl
mov
mov
enter
pop
arpl
dec
inc
add
adc
sbb
mov
ljmp
lods
mov
pop
movsl
mov
cmp
insl
mov
inc
cmp
jne
mov
jbe
push
and
bound
stos
cmp
add
adc
push
mov
movd
fwait
aaa
mov
or
std
xchg
cmp
pop
scas
fnsave
jns
pop
inc
dec
daa
xlat
pop
push
repz
insl
sbb
aas
cmpsl
mov
shrl
jle
jno
inc
mov
cmp
ret
sahf
add
iret
je
add
fisubl
adc
lock
arpl
sbb
clc
dec
int
jmp
jno
out
cmp
movb
fldenv
fildll
hlt
lcall
loopne,pt
push
daa
xor
mov
loope
jecxz
dec
shll
mov
mov
xchg
push
and
jnp
add
subb
dec
rolb
sbb
add
push
rcr
call
push
cmpsl
movsb
fldl
mov
mov
xchg
sub
xchg
jg
fisubrs
and
or
orb
rol
adc
test
das
adc
int
sub
outsl
ret
mov
xchg
call
jecxz
gs
ss
mov
fcmovu
insb
sub
sub
jge
cmp
stc
ss
pusha
pusha
xor
xchg
adc
fsubrs
push
dec
pop
jae
es
xlat
lods
dec
clc
cltd
dec
rorl
stos
bound
scas
dec
bound
and
aas
push
adc
and
je
mov
or
xlat
jbe
test
bound
lcall
mov
insb
bnd
dec
mov
adc
lods
inc
out
jnp
pop
or
mov
add
xor
mov
test
xor
push
sbb
inc
outsb
repz
fwait
dec
sub
cltd
cmpsl
add
push
sbb
data16
test
nop
add
arpl
fdiv
es
pop
rorb
cs
mov
cmp
fmuls
or
lret
push
inc
xlat
ret
and
or
dec
ret
xor
adc
sbb
push
jb
and
mov
insb
add
jecxz
subps
pop
mov
mov
push
ljmp
pop
paddw
je
cmp
cwtl
sub
iret
and
loop
icebp
push
jno
pop
sbb
inc
push
enter
sub
in
lcall
inc
xlat
in
in
mov
loope
push
mov
sbb
sbb
movsb
inc
inc
add
jg
in
and
jb
andb
xchg
fsubs
cltd
push
sub
xchg
arpl
mov
mov
scas
push
notb
xchg
lods
mov
jecxz
pop
repz
loop
aas
cmp
roll
pop
gs
push
inc
jecxz
out
sub
rorb
jne
mov
mov
out
mov
mov
jge
jecxz
test
es
dec
pop
mov
mov
sub
push
mov
xchg
dec
jmp
jbe
das
sub
popa
cli
cmp
ljmp
jb
mov
sub
jno
cmp
or
in
nop
mov
out
cmp
outsl
add
dec
jecxz
call
xchg
arpl
fs
shlb
addr16
sub
cmp
test
pop
les
mov
sub
es
mov
mov
jno
xchg
lcall
add
int3
fidivs
cmp
cld
call
scas
test
pop
enter
ret
cwtl
mov
loope
mov
div
lcall
xor
inc
pop
lods
add
repz
pop
and
fst
js
pop
add
repz
cmpsl
movb
adc
mov
mov
and
nop
scas
aas
jb
cld
push
jmp
test
test
pop
adc
pusha
push
inc
push
sub
cmp
hlt
mov
aam
into
or
cli
aaa
lock
push
ja
jo
push
xchg
stos
mov
pushf
pop
lock
sbb
js
das
mov
pop
mov
xchg
lds
sbb
pop
mov
jne
lcall
pusha
inc
std
lods
add
inc
cmpsb
sbb
out
gs
movsl
ljmp
rorl
mov
pop
mov
sbb
lea
inc
jle
test
or
and
mov
lcall
movsb
fnstsw
dec
test
and
pop
ret
repnz
mov
xor
ret
stc
in
in
inc
xchg
jle
lds
cli
xchg
lahf
pop
push
pusha
jne
add
push
es
addr16
push
dec
in
dec
test
clc
sbb
xor
xor
cmp
sub
enter
cmpsl
or
daa
push
jno
nop
dec
mov
bnd
dec
add
std
cmpl
xor
popf
adc
mov
jp
popa
movsb
mov
jg
testl
fwait
nop
jmp
or
orb
sub
pop
or
sbb
mov
mov
or
or
xchg
fidivl
cs
pushf
data16
mull
cld
cmc
push
add
pop
sbb
movsb
insl
repz
pop
add
das
pop
lret
in
les
cmpsb
pop
jl
cltd
arpl
mov
in
pop
bound
sub
ja
into
push
lds
xor
inc
cli
stos
sarb
mov
cmp
jae
push
aad
jecxz
and
xchg
mov
mov
push
or
adc
mov
dec
adc
mov
loop
loope
mov
in
jne
jae
jl
push
push
and
xor
outsb
jl
or
xchg
adc
clc
sarb
jg
pop
aam
push
adc
mov
int
sbb
ret
iret
mov
outsl
movl
test
xchg
pop
mov
cmpsb
mov
pmuludq
scas
cmpsb
sbb
cmp
cmpsl
pushl
sub
scas
icebp
and
xor
adc
lcall
push
lcall
lea
sub
js
insl
pop
sbb
inc
inc
cmc
mov
int3
sbb
or
test
inc
jae
lock
repnz
in
ja
scas
js
xchg
adc
jle
cmp
adc
insb
adc
pop
xchg
jecxz
sti
jo
or
out
add
pop
mov
pop
xchg
xchg
das
jnp
js
leave
scas
int
jno
inc
nop
je
xor
bound
jg
rcl
push
xchg
dec
notl
cmp
fidivrs
and
repz
jbe
dec
sub
lods
sub
xor
pop
xlat
aas
mov
inc
or
lret
mov
lock
mov
lds
sub
jmp
sbb
cltd
sbb
inc
sbb
or
or
enter
push
push
or
adc
cmp
inc
cmp
or
hlt
fdivr
add
dec
in
mov
mov
out
enter
jbe
cs
jns
loop
add
stos
clc
insl
adc
loopne
dec
mov
push
pop
dec
leave
push
sub
mov
and
dec
out
xlat
dec
std
sbb
pop
mov
xor
aaa
sbbl
sbb
fisubrl
movsl
orb
das
cmp
lods
push
push
sahf
add
xchg
ror
sbb
xor
sar
repnz
xor
dec
repz
shll
cltd
xor
testl
push
lcall
dec
mov
xor
push
sub
mov
lds
stc
add
mov
and
xor
test
inc
outsl
or
xchg
jge
mov
or
xchg
addl
cwtl
movsb
jne
jp
cwtl
into
or
jb
inc
scas
call
lds
arpl
pop
adc
lret
dec
mov
fwait
shlb
adc
inc
movsl
pop
adc
pushf
mov
inc
out
nop
js
fsubs
in
lods
pop
mov
cmp
push
sbb
aas
loop
xchg
jo
adc
adc
test
or
push
out
idivb
fldcw
sti
out
lcall
stos
push
cmp
sarb
push
push
add
pushf
je
popf
inc
shlb
dec
inc
or
outsb
add
je
cld
addl
scas
sbb
pop
pop
and
xorb
jno
divb
inc
das
mov
jb
out
sbb
and
pop
es
jb
rclw
icebp
sub
dec
pop
adcl
fwait
mov
add
scas
bound
cmpb
mov
xchg
sbbl
cmp
lahf
mov
xchg
out
ret
inc
ret
faddl
sbb
in
fmul
lods
les
and
pop
mov
dec
stos
jb
mov
scas
fdivrs
mov
push
test
fdivrs
adc
dec
fs
scas
or
loopne
fildll
xchg
push
nopl
clc
dec
sub
inc
aas
js
es
push
dec
repnz
sarb
sahf
daa
and
repnz
out
cmpsb
cs
inc
jb
cmpsl
test
mov
mov
std
jnp
in
mov
mov
inc
cwtl
addr16
push
bound
mov
cs
cmc
pop
lea
cld
or
push
pop
push
test
push
movsb
fcomp
xor
push
and
sahf
lods
xchg
jb
inc
stos
adc
dec
dec
push
rcll
dec
sub
aas
mov
cs
das
test
popa
out
pop
xor
mov
mov
or
and
mov
mov
dec
jo
jecxz
push
fwait
outsb
adc
or
mov
movb
shll
addr16
cld
jp
test
out
cmpsl
pop
pop
scas
loop
xor
inc
adc
in
or
jp
pop
cmpsl
dec
dec
add
inc
mov
jmp
adc
rcrb
add
cld
cmp
push
dec
or
pop
inc
jle
inc
imull
aas
mov
adc
ds
cmp
outsb
cmc
cltd
pop
dec
mov
repz
mov
call
mov
cmp
cmc
icebp
add
enter
pop
adc
and
mov
orb
data16
add
jmp
cmpsl
sub
pop
je
sbb
jns
cld
enter
xchg
addr16
pop
add
in
out
and
xor
xor
movsl
imul
add
jecxz
icebp
cwtl
adc
sub
mov
sub
hlt
icebp
enter
dec
pop
call
dec
aaa
push
and
pop
cs
adc
fld
cmc
xchg
or
sbb
fs
out
fisttpl
mov
fwait
dec
adc
out
push
add
xchg
pop
add
mov
sub
lahf
stos
adc
xorl
sub
sub
mov
and
add
adc
add
sub
int
pop
aaa
fldt
inc
mov
inc
rcrb
loope
mov
push
daa
mov
and
imul
or
lcall
in
mov
movsb
cltd
subl
add
and
stos
and
cld
sub
mov
mov
inc
add
insl
pop
rorb
js
adc
dec
dec
mov
scas
ljmp
in
test
aad
fisubs
sub
jl
in
push
xchg
mov
sub
adc
xor
xor
fcoml
enter
movsl
and
mov
mov
inc
icebp
inc
repnz
inc
testb
mov
inc
sbb
xchg
test
mov
je
shll
movsl
mov
stos
jle
bound
mov
sbb
lcall
xlat
negb
ss
shl
push
loopne
mov
sub
pushf
xor
mov
call
jmp
fmull
jne
jg
mov
push
imul
aas
aad
mov
sbb
shll
sahf
pop
sub
es
pop
repnz
add
mov
jae
mov
nop
cmp
repnz
movsl
out
daa
adc
inc
jle
inc
cmp
lahf
cmp
movsb
dec
ret
scas
icebp
mov
sbb
add
inc
jae
dec
scas
sbbl
adc
lock
scas
mov
dec
push
pop
dec
or
cmpsb
sbb
inc
lock
pop
push
sbbb
mov
ret
or
addr16
test
mov
lahf
mov
insb
jl
nop
cltd
mov
mov
bound
setb
mov
or
sbb
sbb
adc
scas
or
xchg
rcr
cmpsl
dec
cmp
out
xchg
or
test
inc
cmp
std
enter
sbb
mov
mov
jb
xor
mov
addl
mov
mov
fdivl
pop
dec
pop
mov
adc
loope
inc
hlt
xchg
je
or
and
push
mov
sti
cwtl
pop
lret
pushf
pop
iret
mov
test
popf
cmp
dec
sarb
iret
pop
ljmp
or
jl
mov
repz
cmc
adc
lahf
negb
push
push
gs
dec
clc
loop
xlat
dec
sbb
jmp
xor
jp
jg
sbb
xchg
loopne
rclb
and
adc
imul
mov
imul
roll
sub
fabs
fiadds
xchg
cmpsl
dec
add
adc
jno
cli
movsb
loop,pn
dec
push
push
dec
es
pusha
cmp
daa
xchg
testb
scas
arpl
cltd
sub
cmp
add
ffree
adc
data16
stc
mov
fnstsw
and
pop
ss
popf
pop
or
jl
sub
dec
mov
in
mov
inc
mov
fisubrs
in
icebp
xchg
orl
or
or
ja
shl
sbb
jl
pop
push
je
mov
pop
filds
xchg
mov
push
test
sarb
xlat
imul
stos
out
lret
jne
cmp
scas
jbe
test
pop
mov
push
adc
cmp
jb
mov
insb
stos
loopne
hlt
inc
mov
adcl
stc
dec
int
loope
push
sbb
mov
inc
jbe
push
dec
addb
int3
xor
addr16
in
xchg
imul
lcall
push
or
inc
add
adcl
cs
mov
divl
jl
and
lds
xlat
in
ss
dec
pop
jle
movsl
adc
cmp
mov
dec
repz
movsl
pusha
cmpsb
add
mov
lahf
lds
mov
in
xor
iret
xor
in
dec
sbb
pop
xlat
test
lds
insl
sub
icebp
fucomi
popf
xor
inc
mov
test
lret
insl
xchg
out
jne
lods
cmp
jg
cs
into
nop
mov
movsb
fimull
lahf
jmp
jl
pop
jp
adc
rcll
mov
or
xchg
shll
mov
push
aas
imul
adc
pop
ret
xchg
loope
dec
jno
push
or
jbe
and
cli
popa
mov
aaa
cmpb
jecxz
aad
sub
xchg
insb
sub
pushf
mov
push
add
and
in
addr16
jmp
and
adc
and
push
les
and
repz
mov
mov
les
inc
decl
mov
cwtl
xchg
cld
sub
sbb
and
stos
cmp
addr16
fxam
inc
into
xor
in
ss
pop
mov
pop
out
cmp
lods
cli
addr16
xchg
leave
xchg
xlat
clc
sub
fldcw
and
dec
mov
hlt
xor
push
les
lods
adc
cmp
pop
mov
adc
inc
inc
int3
aas
roll
jmp
xlat
or
mov
mov
sbb
jno
adc
push
cmc
and
cmc
and
out
mov
lock
sbb
lret
adc
adc
imul
add
test
xsha1
cmpsb
movaps
jg
pop
std
scas
push
popf
icebp
cmp
movsl
ja
xchg
cmp
jg
sub
sahf
aas
inc
out
push
push
es
jnp
mov
xor
je
pop
pop
sbb
ficoms
stc
stos
je
add
js
adc
iret
addr16
cmp
cmp
shlb
test
scas
mov
inc
fwait
movsl
mov
cltd
or
in
inc
fwait
dec
add
fsts
lahf
sbb
cld
fidivrs
mov
xorb
sbb
adc
cs
or
test
or
mov
out
mov
loopne
sub
and
jp
xlat
out
push
dec
jl
jl
dec
stos
loope
mov
push
int
xchg
jecxz
xchg
enter
out
lahf
pop
scas
push
mov
add
loop
cmpsb
clc
cs
out
lret
xchg
lods
mov
mov
adc
or
cmp
xor
lods
sub
dec
sbb
inc
ret
aam
sub
jl
xchg
dec
add
mov
cld
inc
sbb
dec
popf
push
and
rclb
enter
xor
cs
mov
out
lea
inc
and
or
rcl
and
inc
fistl
lea
mov
cmp
mov
test
or
mov
pop
xchg
inc
ret
xchg
pushf
pop
dec
lods
push
int
out
xchg
sbb
sub
in
xor
aaa
roll
jne
lahf
mov
and
out
hlt
jae
mov
aas
mov
fistl
scas
jmp
jmp
mov
push
stc
xor
mov
mov
subb
sub
fidivrs
aam
jmp
add
sahf
adc
sbb
pop
sub
mov
scas
and
xchg
mov
data16
inc
cmpsl
add
pop
scas
sbb
pop
fadd
mov
mov
cmc
push
lods
cmp
testl
int3
call
and
xchg
out
or
sbb
mov
stos
stc
sbb
insl
popa
jo
xor
cmp
pop
sti
scas
cmc
mov
icebp
stos
pop
in
gs
mov
mov
fisttpl
jle
xor
mov
push
adc
jb
cld
push
mov
and
adc
push
mov
jae
pop
mov
sbb
sub
xsavec
mov
nop
hlt
lcall
sahf
mov
stos
pop
jne
add
dec
test
adc
outsb
push
and
xor
add
outsb
movsb
imul
or
xchg
lods
in
and
mov
mov
add
or
xchg
pop
incl
sbb
fbld
dec
call
mov
adc
pop
mov
cltd
mov
push
rcrb
adc
pop
lods
andb
pop
mov
adc
mov
mov
imulb
xchg
mov
repz
mov
movsl
sub
fildll
mull
outsb
cmp
mov
adc
jecxz
jge
dec
fdivs
fwait
std
mov
or
adc
pop
dec
jecxz
cmp
inc
data16
fisttpl
cmp
pop
jae
shrl
dec
sbb
in
fstpt
mov
stos
faddl
out
or
in
cmp
sbb
lods
xchg
arpl
mov
cs
push
imull
pop
xor
cmp
jp
add
mov
xchg
int3
push
cmp
scas
int3
jp
mov
cmp
fs
and
and
push
mov
cmp
add
or
add
inc
aaa
xchg
xor
add
mov
fdivrs
int
out
push
outsl
ds
mov
pop
push
cmp
push
fwait
mov
lcall
lea
mov
jb
pop
push
lahf
aas
or
pop
lretw
dec
stc
mov
add
testl
test
shr
repnz
inc
insb
mov
dec
into
sub
push
jae
push
pusha
hlt
popa
jnp
push
xchg
fcmovbe
out
dec
xchg
movsl
cmp
sbb
cmpsb
rorb
mov
lods
mov
clc
loopne
imul
mov
push
sub
popa
mov
sub
push
mov
dec
or
cmpl
xchg
mov
fisttpll
add
mov
cmp
in
push
fstpt
cmp
iret
rclb
ret
hlt
pop
push
mov
movsl
fmull
popf
stos
pushl
ja
mov
decl
icebp
sbb
jbe
lcall
xchg
popa
mov
repnz
fstps
repnz
fwait
imul
sti
or
loopne
adc
lods
cmp
addl
pop
aad
mov
push
sub
mov
in
imul
jnp
sbb
mov
lea
inc
call
mov
push
and
mov
mov
scas
es
clc
into
sbb
jecxz
insl
mov
aam
js
or
cmp
push
test
xchg
add
dec
cmpsb
push
pop
dec
lea
push
pop
sbb
or
test
pop
mov
nop
push
add
xchg
or
sarb
push
mov
cs
mov
and
mov
lcall
lds
mov
in
lds
lahf
xchg
outsb
sub
lahf
mov
sbb
sub
pop
or
mov
pusha
jae
imul
add
add
adc
cs
jp
arpl
mov
xchg
xor
push
or
in
scas
mov
dec
and
cs
push
rcrl
inc
push
mov
imul
rcll
fs
lods
sbb
ja
xchg
pop
push
fistpl
mov
enter
pop
icebp
xchg
iretw
cmp
es
or
cmp
ljmp
mov
ljmp
cmp
mov
incl
repnz
imul
xor
sbb
or
sub
mov
adc
ret
movsb
push
inc
inc
fs
mov
sub
xchg
sbb
sub
insb
hlt
movb
jl
sub
lock
leave
call
xchg
xlat
fidivrs
or
mov
insl
lock
and
pop
mov
bound
jae
cmpsb
mov
out
cmp
data16
subl
mov
rcr
popa
std
das
into
push
mov
shr
cmp
and
adc
sub
xor
and
xor
dec
adcl
stos
in
out
fcompl
and
test
jmp
pop
cmp
sub
jnp
sub
adc
jnp
in
xor
popf
int3
fisubl
sub
cli
fldl
ds
add
imul
mov
push
shlb
pusha
jb
dec
add
adc
int
mov
mov
imul
mov
mov
std
adc
or
sbb
mov
mov
sbb
popf
jb
int
sbb
bound
in
incb
jbe
pop
outsl
add
stos
popf
fcmovbe
xchg
repz
dec
xor
push
aaa
pop
ret
adc
out
mov
jecxz
mov
scas
cmp
ret
adc
mov
scas
lods
add
rcrb
aas
mov
inc
int
pop
dec
dec
mov
dec
addr16
fisttpl
sbb
sub
push
int
shrl
jo
jle
lea
fbstp
jns
aaa
cwtl
xchg
imul
xor
adc
outsl
sub
xor
dec
subl
mov
push
sbb
rolb
mov
outsl
rcrl
inc
or
pop
sbbl
mov
jge
jl
mov
or
enter
je
mov
mov
xchg
fsubl
cmp
in
fstpl
mov
icebp
imul
xchg
test
arpl
mov
push
mov
mov
xchg
stc
add
push
push
aad
out
pushf
jo
rcrl
int
loopne
shlb
pop
mov
aam
push
ja
shlb
lods
test
scas
dec
xchg
mov
fwait
push
cmpl
fcoms
pop
loope
cld
jno
pop
jno
frstor
fldenv
mov
insl
out
push
out
jno
in
jnp
push
inc
and
mov
push
lahf
repz
adc
pop
adc
xor
jmp
cwtl
scas
in
cli
xchg
sti
aas
pop
jmp
or
add
inc
stc
add
aam
xchg
lock
scas
dec
mov
insb
add
popa
shl
xchg
outsl
das
mov
mov
cmp
mov
jnp
dec
add
ja
mov
loope
xor
xchg
add
fidivrs
in
cli
cmp
rcl
jg
lods
mov
in
stos
xchg
xlat
leave
cmp
push
lcall
push
js
xorb
int
nop
jge
jp
jg
addb
push
sti
jae
sbb
add
sub
mov
jge
push
ret
popa
fmuls
xlat
inc
wrmsr
pop
mov
imulb
pop
pop
mov
mov
dec
pop
call
dec
xor
mov
mov
xchg
dec
out
fnstsw
or
add
fstp
inc
dec
cli
sub
lds
inc
jg
es
mov
decb
sub
cmp
js
xchg
loope
insb
cmp
rcrb
ds
into
mov
sbb
mov
shrb
jo
inc
lods
fmulp
ret
lods
cmp
imul
sti
data16
mov
iret
xchg
loope
or
mov
cmp
dec
adc
add
test
pop
out
cmp
pusha
pop
pop
int
jo
cmpsl
jae
lcall
sar
sub
test
xchg
xor
out
sbb
mov
test
push
jecxz
int
xor
pop
or
sub
mov
int
jl
pop
sub
sub
mov
cmp
stos
pop
lods
sti
out
loop
test
sarl
fstl
int3
push
pop
pop
imul
es
xor
sub
movb
sub
sub
xchg
cmp
xor
add
and
push
es
out
cltd
xchg
faddl
lret
mov
xchg
xor
aam
dec
ret
jne
es
std
sbb
arpl
cld
and
jo
pop
scas
shlb
stc
xor
cmp
xor
xor
cli
sbb
dec
ficompl
std
lock
mulb
nop
xor
ret
push
loop
out
push
add
or
fstps
inc
add
in
jmp
pop
sarb
sub
pop
lcall
into
jne
movsl
paddd
repz
jbe
int
hlt
jb
loopne
test
aam
xlat
ficoml
bound
pop
out
lret
fldcw
sub
dec
sub
js
jecxz
add
test
rorb
sarb
pop
fidivrl
pusha
std
push
push
mov
repnz
popa
xor
nop
sub
ficompl
mov
leave
jg
test
std
jg
in
fwait
sbb
notl
or
xchg
ss
jb
add
int
add
sbb
adc
imul
push
mov
mov
or
popf
lret
outsl
test
mov
test
xchg
sbb
sbbl
rcrl
adc
add
mov
in
xchg
ror
lcall
lea
xor
scas
cli
sub
stos
repnz
or
aad
mov
push
and
cmp
fmuls
cli
jnp
lret
jne
sbb
mov
arpl
icebp
daa
int
add
inc
xor
mov
xchg
movsb
push
jnp
mov
jns
sti
push
arpl
mov
pushf
cmpsl
adc
or
js
push
xor
xchg
insl
dec
scas
or
lret
ljmp
push
sbb
mov
loop
jbe
cltd
bnd
iret
mov
inc
mov
mov
cld
aas
test
rorl
add
lods
lcall
loop
in
and
mov
mov
jge
lods
pushf
mov
arpl
cmpsl
push
jmp
cmp
sub
add
orb
mov
pop
ficoml
and
jl
sahf
mov
shll
outsb
mov
inc
mov
mov
ljmp
sbbl
aad
aaa
pop
fwait
and
outsl
pop
or
jecxz
pop
idivl
iret
gs
mov
add
push
sbb
vpavgb
ret
dec
call
iret
sbb
iret
pusha
lock
jmp
push
inc
xor
lcall
jl
push
lahf
leave
dec
cmp
push
loopne
add
and
std
push
mov
scas
mov
mov
mov
jmp
outsl
dec
mov
lahf
outsl
out
jae
and
fwait
out
mov
popf
xchg
stos
imul
mov
xrelease
iret
int3
imul
pop
dec
pop
adc
dec
inc
insb
dec
mov
lret
mov
cmp
aaa
or
call
sbb
mov
pop
das
hlt
movsb
ds
xchg
aaa
scas
or
cmp
xor
inc
mov
jmp
xchg
leave
mov
mov
sbb
push
loope
stc
fldcw
mov
rcr
or
cmc
push
xchg
mov
mov
add
pop
mov
lret
dec
push
in
pop
fisubl
pop
push
daa
pushf
pop
in
inc
fisubl
dec
xor
arpl
and
or
mov
fldcw
or
adc
add
mov
imul
dec
fcmove
xor
cmp
sub
sbb
xchg
and
cmpsl
fisubs
pop
test
pop
jmp
jmp
and
or
cld
dec
pusha
ror
in
stc
ja
ret
sub
aad
dec
sbb
xor
aam
sbb
mov
pop
dec
jnp
inc
sbb
add
adc
add
cmp
cmpsb
scas
fabs
cmpsb
std
cmp
gs
pop
lods
cmp
fdivrs
add
dec
test
push
xchg
sbb
mov
outsb
or
fnstsw
loopne
movsb
mov
add
dec
repnz
xlat
adc
xor
pop
lret
sub
inc
pop
mov
cmp
jle
mov
inc
test
adc
movsl
xor
pusha
fucomp
xchg
mov
xchg
xchg
ds
jmp
mov
mov
fcmovnbe
outsb
mov
push
sbb
dec
std
add
sbb
imul
pusha
imul
push
in
jnp
adc
out
sbb
or
fwait
incb
fcomip
cmp
pop
inc
adcl
dec
cld
cmp
xchg
arpl
xor
stos
xchg
or
lret
mov
inc
mov
fdivrl
imul
fldenv
xor
movsl
shl
negb
fnsave
in
jge
repz
add
jns
inc
sbb
dec
mov
aas
or
mov
jmp
and
mov
jecxz
xchg
inc
cs
cmp
inc
sar
cmpsl
clc
mov
xchg
flds
imul
loope
dec
into
dec
mov
sti
dec
cmp
shll
enter
pop
or
ror
les
and
push
or
xchg
cwtl
and
nop
fisttpl
xor
faddp
outsl
push
lds
dec
js
pop
shrb
scas
xchg
int
es
iret
push
test
iret
xlat
int3
test
aad
or
sbb
rcrb
sbb
inc
test
test
push
and
dec
dec
jl
push
cmp
ljmp
inc
push
lret
je
inc
into
mov
lcall
inc
lret
fcmovne
push
dec
pop
or
pop
xchg
sbb
in
outsl
inc
lds
in
mov
test
jns
inc
adcb
ja
or
dec
leave
mov
jne
jmp
ss
push
imul
inc
push
shrl
pop
enter
mov
xchg
xlat
aas
sbb
push
inc
mov
xor
out
cmpsb
add
shlb
cmp
push
or
mov
lock
rcl
or
jbe
cli
jmp
mov
jae
sbb
inc
mov
fisttps
lods
mov
jp
sub
fistps
stc
test
mov
cs
test
fldenv
cmp
xchg
or
xchg
cld
es
pop
jae
imul
push
mov
pop
je
rorb
int3
insb
sub
and
cltd
cmp
adc
aam
test
add
dec
xor
ss
bound
cmpsl
lock
aam
xor
push
sub
adc
dec
outsl
add
add
mov
loopne
push
lock
xchg
mov
pop
xchg
test
movsb
pop
mov
mov
cmp
jmp
loope
sbb
inc
cmp
ds
sub
enter
jb
hlt
or
leave
add
iret
flds
mov
mov
sahf
xchg
push
xchg
add
sbb
xchg
mov
into
add
xchg
pop
cli
fmuls
jle
movnti
aaa
mull
mov
sub
mov
iret
pop
mov
cld
sub
and
or
loope
idivl
rcll
fistpl
scas
hlt
add
cwtl
inc
sub
lcall
mov
and
std
cltd
sub
and
fidivs
xchg
pop
dec
jg
dec
lods
xchg
into
mov
cmc
hlt
xor
lods
mov
fwait
xchg
pop
add
xchg
adc
push
sub
lods
sahf
jmp
inc
add
mov
div
fwait
mov
pushw
lahf
aaa
sub
enter
xchg
ja
xor
mov
push
add
loopne
std
xchg
orb
or
mov
fwait
ja,pn
aad
cmp
mov
xor
sbb
push
mov
aam
or
lock
adc
inc
xchg
ljmp
or
adc
mov
sbb
and
sub
shl
cmpl
daa
cmp
sahf
scas
mov
roll
jnp
mov
mov
xor
mov
dec
mov
lock
flds
xor
in
pop
cmpsb
jae
push
xor
cmp
cmp
movsl
insl
je
push
cltd
enter
cmp
pop
sbb
inc
jo
addr16
adc
imul
xor
cmc
push
insl
mov
dec
imul
and
shlb
cmc
aaa
sub
adc
inc
stos
popa
push
hlt
das
rcll
mov
pop
sub
push
xor
jg
sbb
mov
out
and
dec
divb
aaa
jmp
pop
pop
sub
fwait
dec
cmp
and
pop
lcall
pop
inc
push
in
pop
aam
cli
js
jge
mov
xor
dec
push
pusha
repz
push
int
jns
or
std
push
adc
mov
into
out
insl
aas
jecxz
daa
aas
paddsw
mov
pushf
lea
lahf
inc
ret
add
push
loope
cs
mov
cmp
cmp
and
mov
pop
jno
in
push
je
jno
sti
mov
jbe
fsubrs
or
das
and
sub
daa
out
or
neg
jns
inc
cmp
jo
cmp
scas
mov
xchg
and
repnz
pop
dec
mov
sub
movsl
mov
ljmp
mov
inc
cs
int3
and
push
wbinvd
adc
cld
int
jo
mov
in
sbb
jo
pop
es
push
mov
data16
jb
ret
fcoml
push
adc
xor
sub
or
dec
fsubr
enter
push
lcall
das
ret
cmp
mov
push
add
add
xchg
pop
jmp
xor
addr16
shrb
adc
fmull
mov
jae
cmpsb
clc
sub
pop
or
ret
push
in
add
push
adc
out
jo
xor
cwtl
mov
nop
dec
movups
ret
fldt
mov
outsb
or
jns
xor
adc
fldl
jmp
rclb
sbb
sbb
push
das
clc
icebp
or
imul
fs
aas
pop
test
and
cmp
test
andl
xchg
dec
sahf
dec
xchg
repz
fiaddl
jnp
sub
outsl
bound
inc
push
and
out
cwtl
jns
out
sbb
cmp
cmp
jne
jo
dec
les
xor
jg
mov
int3
fwait
mov
leave
add
sbb
cmp
mov
pop
pusha
lret
int3
js
bound
sbbb
fistl
hlt
pushf
mov
js
pop
push
shlb
stos
pop
jae
fwait
jge
loope
shlb
ljmp
sbb
fiadds
xor
jne
cmp
push
cmp
fistpll
jae
cmp
fidivrl
arpl
jmp
in
out
pop
mov
in
sub
lea
cmpb
push
cld
dec
fcoms
fsts
sar
xchg
pop
sub
pusha
scas
xchg
mov
hlt
jne
popf
push
repz
jge
cmp
pop
mov
xor
arpl
pusha
jnp
cmpl
jge
outsb
push
dec
pusha
cli
and
lret
add
js
cmc
and
sub
push
fisubl
ret
repnz
adc
adc
mov
mov
repz
nop
mov
xlat
les
inc
scas
clc
pop
mov
sub
adc
mov
es
lods
nop
adc
add
push
push
push
dec
movsb
aas
add
lock
rclb
and
pop
add
idivl
sti
fisttps
cmp
ljmp
insl
into
sahf
mov
outsl
jge
hlt
mov
xchg
xor
push
jge
pop
adc
xchg
scas
daa
test
add
cmpsl
add
loope
sbb
int3
iret
xchg
negb
into
xchg
sub
jo
jb
movsl
xchg
imul
push
and
mov
sbb
push
mov
aas
mov
dec
jg
aam
jle
push
cs
into
dec
bound
sbb
mov
lret
das
js
cmc
inc
sub
add
adc
dec
stos
jle
clc
movsl
pop
pop
rorl
dec
bound
dec
fidivs
sbb
mov
mov
rol
cmc
mov
outsb
loop
mov
mov
out
push
add
jne
adc
jp
jb
mov
xchg
ret
clc
push
je
add
shll
pushf
out
mov
lcall
aas
mov
imul
ja
jo
jle
mov
inc
mov
lds
nop
xchg
test
push
inc
adc
sub
jmp
sub
int
call
ficoml
dec
pushf
mov
jmp
inc
test
mov
adc
psubsw
pop
adc
push
sub
mov
xchg
icebp
fnstenv
dec
xor
outsl
test
dec
sar
out
das
pop
mov
adcl
xchg
mov
or
notb
push
pop
sub
jmp
lcall
test
pushf
adcb
jbe
call
std
test
jmp
mov
out
dec
mov
or
push
add
adc
mov
mov
iret
sti
test
pop
outsl
fucomi
dec
shr
pop
out
push
bound
mov
nop
ss
fistps
gs
or
cmc
jle
xor
in
addb
pop
inc
jecxz
andb
xor
add
test
inc
shrb
adc
inc
div
and
fstps
sub
xor
sub
cmpb
cltd
pop
lcall
cwtl
fildll
or
jb
stos
pop
movsl
mov
cld
nop
pop
inc
cmp
daa
push
xchg
movsb
ja
movsb
mov
jnp
cmpsl
mov
push
loopne
push
add
xchg
outsl
addb
leave
pop
lods
int3
iret
cli
mov
sbb
les
or
mov
aas
loopne
clc
sbb
adc
jns
mov
repnz
mov
mov
sub
jno
push
movsl
bsr
mov
leave
idivb
inc
icebp
and
jo
xlat
jnp
test
push
inc
pop
or
push
lods
gs
cmp
mov
lods
popl
test
add
mov
sub
jno
or
push
adc
xor
push
insl
or
push
or
mov
popa
pop
icebp
dec
add
mov
insb
fistl
scas
and
xor
nop
mov
add
inc
es
stc
iret
push
xchg
xor
push
xor
jo
mov
enter
jae
pop
cwtl
cmp
sub
ret
add
nop
cld
dec
cmpl
into
cmp
and
lret
in
mov
fimull
les
xchg
or
push
testb
sbb
out
scas
psrlw
and
push
push
push
rol
jp
fadd
jl
rorl
dec
inc
sub
insl
xchg
enter
fmull
xchg
mov
sbb
popa
shrb
fadds
or
mov
loop
sub
mov
push
jne
pusha
xchg
add
push
xchg
ss
push
leave
push
pop
xchg
jp
mov
popf
movsl
push
push
adcl
or
repnz
lds
loopne
jle
dec
inc
lods
mov
mov
jnp,pn
xchg
inc
dec
icebp
dec
mov
push
outsl
in
es
xor
inc
sbb
shl
in
mov
ss
sahf
repz
jnp
or
loopne
pop
ret
jns
daa
aaa
popf
lret
sbbl
clc
popa
mov
dec
xor
cwtl
lahf
aam
adc
fisttps
popa
xchg
stos
out
mov
shlb
popa
into
push
loop
mov
out
fldl
imul
pop
int
mov
lahf
insl
sti
xchg
sbb
pop
dec
cwtl
ja
cmp
mov
loope
mov
dec
daa
insl
leave
sub
xlat
in
cmpsl
jge
cmp
mov
pusha
pop
adc
cmp
xchg
mov
dec
and
mov
adc
push
mov
aad
call
xor
repz
fbld
inc
mov
cmpsb
mov
lock
jnp
push
inc
mov
in
aaa
push
mov
xor
ja
adc
mov
aas
repnz
lds
les
aas
or
and
adc
jmp
jle
shll
cmp
fdivl
fs
mov
and
jae
pop
in
out
push
inc
add
mov
cmp
adc
lahf
xchg
imul
and
insb
rorb
mov
sahf
mov
cmp
adc
or
aas
imull
aaa
jg
lret
rcpps
and
xor
adc
inc
incl
jge
andb
xchg
jle
push
xor
ficoml
lock
push
sbb
cmp
movsl
xchg
shll
inc
jo
jg
outsb
into
mov
mov
es
scas
sbb
sub
and
test
push
pop
lods
out
xor
flds
push
sbb
pop
mov
int3
in
pop
lods
add
fbstp
into
jmp
cmp
scas
lret
mov
scas
stc
pop
mov
imul
ret
cld
xor
fisttpl
mov
pop
add
inc
lret
cltd
rolb
inc
lcall
in
iret
ja
fbld
cli
cmpsl
into
mov
inc
test
or
adc
xor
and
cld
in
inc
mov
adc
pushl
xor
sub
and
mov
inc
cwtl
out
lret
and
stos
insb
add
fisubrl
sbb
sub
jo
mov
sahf
outsl
adc
xor
fisubs
mov
aas
out
aam
pop
xlat
pusha
inc
lahf
dec
icebp
xor
dec
fadds
movsb
pand
sub
stos
or
and
ljmp
div
scas
stc
inc
rcl
lods
mov
aam
out
inc
scas
movsl
mov
std
pop
nop
outsb
call
fdivp
dec
sbb
mov
push
dec
in
lods
xor
xchg
or
and
mov
dec
cmp
les
cmp
or
push
or
arpl
mov
jle
mov
sbb
lret
mov
adc
xchg
shlb
pop
ud2
add
add
shll
sub
adc
icebp
inc
paddusw
subb
sbb
jl
push
cltd
cs
stc
rorb
add
movsb
pop
mov
mov
fldt
imul
mov
cmp
push
cmc
jle
ret
and
push
hlt
adc
mov
dec
mov
pop
add
push
mov
xchg
dec
or
test
lcall
jmp
fstpt
jg
or
aaa
shrb
push
mov
add
stos
dec
push
inc
hlt
and
inc
mov
insb
int
loop
clc
call
or
aam
into
and
dec
dec
je
ljmp
loope
jbe
inc
ljmp
dec
fcmovne
frstor
push
jns
stos
sbb
cmc
add
sub
imul
mov
add
rolb
stos
out
es
and
fxch
test
adc
aaa
push
or
push
mov
aam
in
shll
jp
sub
cmpsb
lock
add
cli
xchg
mov
dec
out
fbld
loope
xchg
scas
aam
lds
add
les
xor
dec
incb
inc
push
bound
mov
adc
cli
adc
mov
xchg
add
pushf
add
cld
lods
das
into
push
ljmp
out
mov
xchg
pop
and
ds
push
jp
and
sbb
mov
jns
push
in
mov
lock
inc
movsb
mov
test
adc
sti
in
lock
adc
xchg
in
lahf
add
popf
add
xor
push
add
pop
mov
fisttpll
adcl
inc
mov
cmc
push
fdivrl
mov
or
insl
in
xchg
jge
and
mov
jmp
pop
hlt
out
jg
push
add
push
aas
popa
dec
xor
sbb
cmpsb
scas
bound
fdivp
or
xchg
pop
mov
pop
data16
push
cltd
mov
repz
fistpl
je
dec
stc
mov
jge
push
loop
insb
cmp
add
xor
pop
cmpsl
xchg
fstps
jg
inc
and
gs
sbb
push
les
sub
enter
mov
pop
dec
inc
lahf
test
sub
repz
rorl
cmp
and
fcmovnu
sub
sbb
and
imul
push
fldt
adc
ss
fimull
aam
cmp
add
addr16
rcl
and
test
mov
pop
imul
pop
mov
shrb
inc
pop
jge
imul
stos
pushf
push
xchg
call
jmp
push
mov
leave
jae
in
push
lahf
pop
mov
dec
std
data16
in
push
pusha
push
and
call
lret
jecxz
inc
mov
out
imul
inc
xlat
out
popa
je
xchg
out
fcoms
mov
mov
loopne
cmp
adc
mov
fistpl
fcmovne
flds
dec
cmp
icebp
jbe
icebp
cmp
xchg
sbb
sub
fisubs
cmp
les
xorl
aaa
mov
or
or
sbb
xchg
pop
les
and
or
pop
cmp
dec
fneni(8087
pop
jg
imul
in
cmp
jl
insl
dec
into
xchg
sub
nop
pop
sub
in
cld
push
push
add
es
adc
push
mov
cli
movsb
push
dec
notb
ja
out
scas
ret
or
push
das
cmc
cmp
or
loope
and
decl
dec
addb
outsl
pop
or
or
sti
add
je
enter
cld
out
inc
fcompl
into
std
push
or
mov
lds
ss
pop
add
sbb
imul
sub
inc
pop
jo
mov
mov
test
ret
scas
ds
adc
lods
cwtl
sbbb
xchg
adc
xchg
nop
loopne
fstl
out
xor
adc
enter
mov
sbb
jecxz
movb
push
mov
bound
imul
sbb
mov
xchg
pop
lahf
icebp
dec
mul
xor
sub
jge
mov
xchg
mov
cmp
mov
jns
dec
popa
pop
std
sbb
inc
adc
repz
jnp
xchg
shrb
sub
das
sub
dec
fmull
push
clc
dec
fimull
pop
into
ljmp
and
pop
dec
mov
cwtl
je
cmp
mov
xchg
add
scas
mov
sub
clc
push
jnp
xchg
and
and
test
or
loope
mov
or
sarl
int3
and
or
cwtl
scas
sbb
add
shr
cltd
jl
add
je
mov
aas
test
test
sahf
jmp
lods
xor
mov
dec
cmp
add
and
cltd
push
xor
adc
aaa
rorb
sub
scas
cwtl
adc
lcall
mov
pmaxub
repnz
dec
cmp
cmp
andl
sub
enter
leave
int
or
stos
xor
or
xchg
orl
cld
mov
das
dec
and
add
push
sahf
fildll
sub
insl
push
mov
push
fiaddl
repnz
or
addb
addl
stos
push
pop
je
sbb
add
mov
lods
and
mov
jp
frstor
sub
loope
inc
addr16
jle
lea
and
inc
dec
xchg
adc
mov
loop
daa
mov
add
aad
inc
roll
cmp
test
addb
test
loope
add
insb
sub
sub
mov
and
or
add
mov
mov
ds
mov
pop
mov
dec
inc
inc
out
jl
jnp
jns
je
and
loopne
lds
test
movsb
push
jns
mov
cmp
adc
add
sti
fidivl
mov
xchg
sbb
aaa
cmpsl
rol
jmp
add
cmpl
add
pop
ljmp
mov
insl
xor
sti
cs
std
xchg
mov
add
insb
loop
mov
lcall
fucomp
jnp
lods
dec
inc
repnz
leave
dec
pop
dec
add
dec
ljmp
sbb
adc
cli
push
scas
data16
dec
mov
lea
arpl
cmc
hlt
stos
adc
mov
sub
fcmovu
fs
icebp
insb
sub
int
pop
jge
push
inc
xchg
lds
dec
mov
shrl
aaa
out
movd
inc
out
shrl
and
imul
jnp
je
push
ljmp
or
popa
and
mov
xchg
or
mov
cmp
test
mov
aaa
push
mov
insb
xchg
mov
orl
xchg
test
xchg
add
mov
xchg
jl
imul
jmp
ret
nop
imul
inc
sbb
cmp
leave
clc
lahf
pop
jmp
stos
sti
or
sub
or
add
mov
dec
and
or
sbb
jo
dec
cmp
into
lcall
out
push
jb
test
pop
push
es
cli
subl
push
sub
add
inc
negb
sbb
pop
js
nop
jo
repz
out
outsb
dec
in
bound
ret
adc
mov
pusha
lods
push
xor
push
cmc
insl
xor
push
arpl
pop
jnp
data16
js
in
fisubrl
cmp
out
lods
mov
mov
ja
call
sahf
rorl
lahf
fsubs
in
rcrb
shrl
mov
mov
ja
leave
clc
and
mov
xchg
and
push
movsb
or
sub
sbb
add
and
push
mov
rorb
cmpsb
cli
sbb
and
insb
xchg
jl
cmp
fiaddl
sar
test
popa
mov
popf
push
mov
inc
mov
mov
xchg
jle
in
dec
cmp
pop
xor
jle
inc
shl
cmp
xor
inc
jbe
pop
fcmovnbe
xchg
dec
adc
fstpt
out
in
lcall
xchg
cmp
mov
shrd
or
insl
pop
mov
sub
and
into
dec
loope
sub
scas
jae
sbb
pop
jge
fwait
push
out
mov
aad
lock
mov
fisttpl
push
sti
pop
stos
dec
pop
sbb
ret
ljmp
ja
mov
pop
inc
mov
mov
jnp
in
dec
int3
pop
inc
aaa
insb
sbb
dec
imul
sub
cmp
inc
std
out
mov
sbb
or
dec
int3
jp
rol
in
mov
xor
test
xchg
aas
mov
push
in
ret
cmp
lret
dec
xchg
rorl
in
xor
mov
loopne
jno
cmc
fisttps
addr16
fisttpl
pop
push
or
clc
mov
add
push
sbb
aam
push
cwtl
sub
fcoml
xchg
mov
mov
mov
add
cmp
cs
scas
fcompl
jae
jno
xchg
cmc
mov
shlb
jns
jge
push
sarb
mov
and
mov
mov
mov
shrb
ret
sbb
sub
lret
pop
scas
push
sti
shrb
dec
jnp
loope
mov
stos
jns
lock
inc
xchg
das
mov
sahf
hlt
add
mov
fcmovb
push
dec
into
fs
lock
adc
inc
and
hlt
sub
mov
gs
xchg
mov
push
jecxz
sbb
ret
and
inc
sub
int3
and
mov
xchg
xchg
scas
std
jmp
mov
ss
sbb
fucomip
adc
push
aas
jl
mov
push
push
and
cwtl
aam
mov
daa
cmp
sub
icebp
shll
pop
icebp
lods
movsb
mov
lods
scas
popa
dec
fcoms
ja
filds
sub
mov
sub
scas
cmpsb
movsb
mov
outsl
add
lret
fs
fs
add
dec
pop
add
fwait
movsl
mov
sub
ret
xchg
fsubr
sub
mov
data16
xchg
xchg
fcoml
pop
leave
xor
dec
inc
mov
mov
adc
imul
stc
add
push
jg
out
shll
or
leave
or
lcall
mov
das
dec
mov
xor
pop
push
dec
movsb
movl
or
mov
add
aaa
adc
test
mov
arpl
mov
mov
cmc
xchg
push
lahf
adc
fidivrs
rorl
and
sub
mov
inc
xchg
push
lock
outsl
stos
test
ss
popw
adc
and
cmc
icebp
adc
jge
test
add
jnp
push
inc
lahf
flds
sub
dec
mov
jb
jge
push
in
mov
sbbb
push
dec
gs
pop
outsb
xchg
push
adcl
stos
ret
scas
push
dec
daa
repnz
mov
int
jae
inc
xchg
cmp
push
sti
sbb
mov
je
and
cld
fimuls
das
pusha
js
jge
addl
xor
mov
inc
lds
sub
pushf
dec
push
popa
push
cmp
lds
lahf
jecxz
cmpsl
outsb
mov
add
int
xchg
int
sub
push
xchg
pop
sbb
popf
cmp
xchg
enter
inc
fbld
jp
aas
lods
adc
mov
aam
popf
test
shlb
mov
inc
mov
jo
jb
je
sbb
sar
xor
hlt
xor
or
dec
sbb
xor
or
add
je
and
mov
adc
enter
shl
mov
loope
ja
sbb
or
xchg
mov
repnz
in
sbb
and
enter
jbe
xchg
into
lcall
rcr
lock
add
movsb
jns
and
mov
cltd
test
fistpl
pop
shll
push
mov
pop
pop
add
jl
cmp
cmp
ds
stos
xor
cmp
jl
nop
jns
jmp
sub
mov
popf
imul
and
jg
scas
idiv
and
pop
adc
sbb
pop
xor
lret
out
ds
pop
sbb
lock
push
dec
adc
sarb
xlat
pop
test
negl
sub
push
jbe
sahf
xor
adc
mov
cmp
rclb
mov
mov
bound
out
sarb
add
inc
fxch
push
push
subl
aam
rcrb
sub
sbb
add
cmc
mov
ljmp
stos
ss
arpl
push
loopne
lods
pop
dec
jns
pop
ffreep
inc
inc
xchg
pop
push
jns
mov
push
rcrb
fcmovnbe
scas
call
aam
ja
fcmovne
sti
push
mov
popl
adc
mov
mov
pushl
repz
mov
fdivrs
jnp
mov
fmull
xchg
daa
cmp
rol
sahf
jbe
arpl
movsb
in
fnstsw
clc
imul
mov
test
fcoml
mov
faddl
fwait
inc
dec
shl
xchg
movsb
or
jp
sub
dec
and
jge
out
fidivrl
fld
in
cmp
mov
cmc
mov
arpl
adc
pop
lods
xor
mov
and
sub
sbb
arpl
in
test
loop
imul
lods
or
push
dec
testb
fnstenv
jb
pop
arpl
lods
pop
inc
cmp
sbb
lods
int
sub
ljmp
andl
mov
loope
cmp
cli
push
cmp
loopne
jl
fnsetpm(287
fcompl
add
sub
mov
clc
xor
mov
push
and
aas
adc
movsl
mov
repnz
imul
test
scas
shl
sbb
add
lock
xchg
stc
out
or
leave
out
pop
cwtl
xchg
dec
cmpsb
cmpb
cmp
push
jno
arpl
iret
push
mov
mov
pop
test
loope
test
jle
popf
out
imul
sub
cmpsl
aam
in
lock
daa
jae
sar
bnd
push
sub
cmovne
scas
adc
mov
jmp
scas
testb
es
shl
mov
pop
adc
dec
adc
mov
pop
popf
icebp
imul
pop
adcb
les
data16
sbb
lods
or
dec
in
stc
cmpsl
mov
jnp
jbe
mov
push
push
lods
popf
js
xchg
fsts
and
mov
xlat
ffree
aam
xor
mov
xchg
sti
stos
mov
jo
push
outsb
mov
cmp
fsts
andl
push
popf
inc
pushl
add
or
enter
addb
mov
jecxz
xchg
push
jle
insb
push
loop
pop
lods
push
xchg
dec
fwait
popf
sbb
xchg
lods
clc
jo
and
mov
aam
icebp
push
insl
push
xlat
cmp
shll
sbb
cmp
addr16
cmpsb
in
orl
pop
pop
sahf
add
lea
dec
inc
add
psubq
movsb
in
pop
jg
jne
pop
cmp
xchg
jae
out
push
ljmp
stos
mov
icebp
test
in
or
subb
lcall
or
fistpl
mov
lock
or
jecxz
sti
jle
movsl
out
mov
or
dec
sbb
pop
jg
aad
loop
movsl
js
mov
add
xchg
dec
mov
mov
movsb
es
cld
mov
imul
loopne
xchg
cmp
inc
jg
sbb
or
or
push
jns
fs
inc
addr16
inc
push
adc
sahf
pusha
fcoml
inc
pop
mov
and
cmc
inc
cwtl
loop
cmp
jle
es
mov
int3
adc
pop
lods
adc
imul
push
les
adc
iret
jl
stos
sbb
hlt
les
inc
aas
mov
cs
cmp
inc
pop
movsb
arpl
lea
pop
popf
scas
jmp
xchg
mov
pop
xor
iret
add
fwait
and
mov
jnp
add
xor
push
add
xchg
lret
cmp
fiaddl
xor
test
sub
push
inc
xor
sti
mov
mov
mov
imul
lret
lret
push
sti
pop
inc
subb
fdivs
mov
mov
out
inc
sbb
jne
dec
aas
adc
or
inc
or
sbb
push
fisttpl
or
or
mov
aad
mov
cmp
xchg
and
mov
push
ret
sub
or
or
adc
repnz
fcmovne
xchg
push
pop
add
in
mov
lods
pusha
sub
cmp
fildl
lahf
leave
std
sub
pop
aad
push
push
or
mov
dec
or
xchg
and
jae
inc
sbb
rdtsc
add
stos
aam
push
adc
shll
push
ret
cld
in
into
dec
pop
shrl
add
outsl
mov
cmp
mov
arpl
mov
ret
es
or
cmp
jb
push
ret
pop
lret
repz
push
clc
dec
rcrb
cmp
dec
add
pop
jmp
icebp
popf
push
daa
push
push
cmp
aaa
xor
out
ret
sbb
mov
and
or
outsb
adc
and
loope
fimuls
add
fcom
mov
daa
pop
stos
lret
mov
mov
dec
push
and
mov
repnz
scas
jns
jmp
mov
inc
fisttpll
popf
and
mov
out
jl
rsm
push
faddl
or
inc
mov
shr
and
inc
aam
jmp
insb
mov
xor
out
lds
sbb
test
fstpt
cltd
cmc
mov
rcrb
jge
aaa
les
subl
inc
inc
dec
jecxz
fstl
clc
lcall
aaa
icebp
cmc
lods
dec
pusha
ds
pop
ret
add
or
mov
sub
mov
mov
mov
popa
jg
inc
sub
inc
dec
adc
test
les
inc
mov
sbb
sub
pop
aaa
data16
cmp
pop
inc
nop
rorb
in
es
sbb
pusha
stc
add
aam
cmpb
cmp
ljmp
ja
jne
pop
cmp
std
and
imul
add
or
and
clc
sbb
dec
push
insl
cs
shll
sbb
mov
insl
push
scas
in
mov
leave
loope
xlat
aad
idivb
sub
imul
and
xor
mov
dec
dec
clc
mov
push
shlb
inc
dec
loop
inc
inc
xor
shlb
aad
rcrb
repnz
dec
jmp
ds
pop
push
aad
cwtl
dec
imul
ret
pop
add
iret
or
cld
sbb
movsb
inc
fwait
dec
out
push
mov
pop
arpl
dec
test
imul
insl
aam
jecxz
and
icebp
and
stos
xor
and
shl
clc
fwait
xor
and
in
pop
pusha
xchg
push
into
xchg
push
pop
ret
pcmpeqw
data16
push
sub
ljmp
addr16
pop
loop
fstpl
shll
fistpll
adc
lret
mov
add
add
mov
jmp
ds
and
and
mov
movsl
push
add
push
lret
nop
test
xor
and
pop
inc
iret
mov
data16
pop
outsl
adc
mov
js
mov
xchg
repnz
and
test
mov
out
sbb
xchg
divb
inc
lret
xchg
adc
ss
push
adc
nop
mov
ss
add
dec
or
repz
loope
inc
mov
and
cltd
outsl
hlt
push
cmc
ljmp
inc
xor
imul
pop
leave
stos
insb
addr16
dec
les
pop
cld
stos
aaa
addl
cmp
jae
mulb
pop
cmc
mov
stc
aas
les
cmp
and
inc
jmp
call
lcall
fisubrs
ret
js
push
les
sbb
mov
das
mov
mov
stos
pop
stos
stos
outsb
lock
sbb
push
imull
mov
cld
int3
xor
add
jmp
mov
nop
cmp
add
mov
push
fwait
sub
fwait
mov
nop
and
push
add
push
jmp
inc
dec
xor
jo
push
loop
jle
xchg
or
xor
xor
cmp
mov
ljmp
xchg
iret
pop
jecxz
popf
dec
adc
lcall
lahf
mov
call
mov
fs
lea
ret
icebp
ss
addps
adc
or
adc
fs
push
sub
test
push
out
mov
dec
cld
rcll
ss
sets
popf
pop
dec
mov
sub
sbb
pop
mov
aaa
xchg
push
mov
mov
jo
movsl
icebp
mov
jmp
cmp
adc
pop
mov
inc
dec
in
push
stc
add
sub
pop
loope
nop
in
fldt
movsl
inc
stc
push
push
adc
xor
adc
loope
test
xor
jno
add
fdivl
pop
lret
lods
push
aaa
push
cmp
inc
cmp
jecxz
xchg
jg
push
repz
enter
mov
inc
push
mov
or
cmp
leave
fildl
or
push
ret
cltd
inc
lret
add
xchg
call
int
sub
test
push
adc
adc
cmpsl
mov
iret
add
mov
stos
adc
mov
loopne
fmull
out
dec
mov
add
jne
xchg
xor
xchg
sbb
shll
cwtl
sbb
push
pop
push
lahf
out
stc
in
jb
cs
das
imul
aam
add
fistpl
lock
cmp
outsl
roll
dec
rclb
movsb
cmp
push
fsubs
es
enter
mov
std
jge
fs
fstps
aaa
iret
dec
xchg
scas
jle
mov
xchg
testb
adc
mov
dec
sahf
pop
mov
clc
testl
iret
push
lcall
pcmpeqw
ret
outsb
sti
and
test
scas
repnz
clc
bound
mov
xchg
sub
sti
jno
push
aad
pop
outsb
popa
sbbb
mov
sarl
and
sbb
adc
cmp
ss
cli
push
or
lock
gs
and
lret
push
push
jns
shrb
icebp
xor
push
bound
ja
outsl
in
or
adc
pushf
icebp
sub
mov
stos
jbe
cltd
daa
js
jle
cmp
popa
inc
push
or
jecxz
jle
cmp
es
pop
in
sbb
dec
movsl
insb
clc
addl
mov
es
mov
sbb
jle
jmp
adcb
inc
js
pushf
imull
bound
xor
dec
lcall
add
lods
lods
push
cmp
add
mov
cmp
mov
jmp
mov
in
and
imul
fimuls
mov
pop
out
ss
lahf
push
cmp
into
test
bnd
xchg
pop
cwtl
popa
out
or
or
pop
and
or
call
adc
test
in
fmull
lcall
mov
fs
pop
call
dec
imul
addr16
inc
mov
insl
rclb
ljmp
mov
mov
inc
mov
std
xor
jl
cmc
push
sbb
ret
add
lea
fnstenv
mov
or
scas
mov
repz
scas
mov
lret
or
pop
push
inc
sub
int
test
inc
fcompl
aam
mov
leave
jge
fistpl
and
out
pushf
xchg
sub
sub
lock
add
js
imul
lret
mov
mov
pop
gs
js
add
pop
imul
xor
enter
in
and
data16
mov
cmpsb
xchg
cmp
dec
jecxz
pop
add
xchg
add
push
mov
outsl
lret
aaa
mov
insl
xchg
cmp
pusha
inc
imul
call
stos
and
stos
stos
dec
push
push
push
mov
jae
and
repnz
xor
pop
testb
xchg
dec
dec
mov
lcall
pop
imul
or
lret
test
xchg
xchg
jmp
inc
or
popf
xlat
jl
mov
andl
call
insb
fstl
jbe
mov
mov
xlat
jp
neg
mov
fbld
imul
lods
je
mov
sahf
xchg
das
xchg
mov
xchg
push
sub
movsl
fwait
add
bsf
or
push
outsl
cmp
jecxz
jle
in
jae
xorl
cld
pop
mov
push
inc
or
lods
popf
inc
lods
pop
mov
enter
movsl
shll
push
push
je
in
inc
dec
call
xor
sarb
cmp
add
lcall
dec
pusha
mov
jle
int3
int3
dec
add
scas
xchg
ss
xchg
pusha
ret
loop
nop
scas
shlb
jmp
fscale
notl
push
inc
sbb
dec
cmp
xor
sti
popl
cli
ljmp
mov
mov
jbe
jb
fwait
jmp
loope
jnp
mov
sbb
mov
cmpsb
push
daa
stos
mov
mov
xchg
xchg
lret
xor
push
test
pop
or
xor
push
cltd
mov
mov
pushf
outsl
xlat
dec
and
adc
mov
push
sbbl
push
cli
mov
inc
es
add
hlt
mov
pop
jns
int3
push
mov
fnstsw
mov
jge
je
push
cmp
outsl
ret
push
inc
mov
adc
xchg
popa
pop
or
push
adc
adc
lds
sub
out
push
popa
in
das
xchg
push
pop
dec
inc
sub
orl
mov
in
inc
mov
jp
or
xchg
shlb
lcall
std
in
lods
mov
dec
mov
jecxz
or
cmp
pop
lock
cmp
sbb
inc
jno
frstor
ret
xor
out
imul
test
sbb
pop
adc
es
inc
adc
xor
mov
adc
xor
mov
xchg
aad
xlat
imul
and
pop
cmc
inc
roll
aad
push
pop
aad
push
dec
lret
inc
arpl
lcall
ds
inc
and
mov
lea
out
pop
ret
push
add
jecxz
enter
cmovg
rcrb
cmpsb
push
loopne
inc
or
out
test
aaa
pop
and
add
inc
inc
nop
mov
push
subb
mov
inc
adcl
mov
fldt
les
gs
les
xor
push
sub
int3
fcmovnb
inc
adc
add
mov
jno
mov
adc
pop
fwait
cs
pop
xchg
popf
test
pop
dec
cmp
in
add
cmp
jno
test
add
outsl
clc
mov
bndstx
jmp
xor
fadds
ds
and
pop
mov
push
lods
mov
aad
push
mov
push
sahf
push
sbbl
cld
jnp
ret
xchg
shrb
add
add
jbe
mov
push
mov
sub
dec
adc
mov
sub
mov
test
mov
test
sti
or
xchg
dec
and
js
jg
cmp
push
pop
les
test
insl
in
lods
mov
cmpsl
cmpsb
adc
and
jno
pop
inc
mov
jb
cmc
sub
or
inc
jmp
xchg
dec
inc
mov
add
insl
enter
xor
scas
outsb
pop
je
jle
cmp
test
cs
aam
xor
ret
pop
mulb
mov
out
aam
push
push
cwtl
inc
cmp
push
inc
repz
outsb
leave
rclb
xor
or
loope
jge
pop
xor
add
test
stos
dec
add
sbb
or
xchg
fwait
mov
jns
jnp
mov
mov
clc
and
push
lods
in
xor
mov
xchg
dec
mov
push
jge
mov
xor
pop
xor
dec
subb
or
sbb
pusha
in
mov
adc
les
jns
cmp
dec
les
loop
and
mov
fiadds
fists
frstor
ljmp
fidivs
call
ss
push
scas
mov
mov
sub
and
hlt
imul
xor
out
push
adc
iret
push
icebp
or
adc
mulps
mov
mov
mov
push
push
dec
lds
vcvttss2si
subl
repz
sub
pop
jge
es
ljmp
or
pop
pop
add
test
mov
or
test
mov
jns
or
xchg
mov
push
mov
hlt
push
lods
insb
mov
add
jo
mov
bound
mov
sbb
xor
inc
mov
sub
dec
movsl
stc
jbe
pop
loop
scas
cmp
pop
sub
sub
jne
in
add
mov
fcmovnb
or
mov
loop
cwtl
pop
out
sbb
push
xor
xchg
mov
jecxz
jns
mov
or
pop
stos
in
test
imul
push
int
aad
leave
lret
in
lahf
fistpll
sti
xchg
jo
mov
jl
jl
aam
loopne
ror
inc
mov
clc
mov
dec
les
cmp
mov
out
add
lahf
out
andl
xor
imul
test
mov
xlat
loop
fwait
or
stos
outsl
mov
outsl
cmp
adc
aad
adc
push
mov
sbb
xchg
fdivl
mov
pop
loopne
jmp
lock
enter
xchg
iret
scas
fldl
mul
insl
mov
dec
xor
sub
pop
in
popa
sub
pop
mov
and
dec
scas
js
adc
cmp
adc
mov
addl
sarl
inc
jne
xchg
rcll
inc
int
mov
push
and
int3
insb
lods
pusha
jl
pop
add
ss
push
inc
lods
mov
lock
pop
std
scas
call
and
scas
xor
stos
ljmp
mov
jno
fldt
xor
and
pop
inc
xor
stc
test
ljmp
in
pushf
xor
push
cmc
scas
rcrl
ljmp
aas
inc
xchg
call
repz
adc
mov
mov
adc
inc
or
cmp
xlat
jo
cmp
inc
stos
popl
ja
js
repz
bound
xor
adc
sub
cmpsb
inc
mov
cmp
sbb
jge
adc
xor
out
mov
xchg
sub
lahf
sub
push
sub
repnz
leave
jmp
jnp
lock
outsl
mov
inc
sbb
inc
sbb
in
lods
movsl
xchg
xor
lcall
ljmp
scas
jne
mov
xchg
inc
and
shl
or
mov
wrmsr
fldl
ret
daa
mov
push
adc
adc
jae
clc
jnp
roll
iret
push
push
scas
es
outsb
dec
jle
rcrl
mov
cmpsl
push
push
cld
sbb
and
mov
xor
sahf
mov
or
dec
xchg
rorl
ljmp
scas
jmp
push
lahf
mov
and
push
inc
pop
xor
lods
mov
loop
or
daa
dec
dec
ss
jmp
jecxz
fsub
ja
xor
sub
sub
popf
mov
add
gs
mov
in
test
cmp
add
xlat
lahf
xor
psubusw
sub
mov
ja
rorb
gs
shrb
dec
mov
adc
push
sub
xor
scas
xor
add
and
cmpsb
sbb
mov
test
sub
fwait
xchg
out
movsl
adc
sub
mov
ja
jl
cmp
inc
clc
repnz
sub
dec
sarl
enter
hlt
das
outsl
inc
sbb
test
imulb
or
dec
mov
mov
pop
lahf
mov
enter
mov
mov
aas
hlt
xchg
jno
movsl
sub
rclb
inc
jmp
adc
shll
push
jge
into
sbb
inc
adc
add
or
bound
inc
hlt
iret
cwtl
int3
cli
xchg
jae
shr
dec
xchg
int
push
in
outsl
popa
fistpll
pusha
in
fdivr
cmp
ljmp
xor
jae
and
sbb
fcom
into
xchg
test
mov
add
pop
xor
dec
ds
loopne
insb
pusha
loope
btr
out
lahf
data16
repz
lock
rcrl
aaa
and
mov
daa
cmp
sbb
push
push
icebp
loopne
or
lcall
mov
sahf
dec
fstl
xchg
sahf
mov
jae
sub
dec
sar
sub
cs
jo
in
mov
xor
fcoml
outsb
sarb
lds
lea
mov
scas
add
lcall
fwait
es
es
xor
push
ror
sub
sbb
aas
out
sbb
jae
push
pop
fnstenv
sbb
xchg
insl
ss
mov
and
adc
sub
push
sti
in
xchg
and
xor
push
outsb
or
dec
jo
divb
jb
xchg
cld
xchg
dec
inc
into
mov
pop
in
pop
add
out
loope
movsl
clc
mov
pop
xchg
arpl
push
or
dec
iret
rclb
jg
adc
add
popf
xchg
xchg
xor
mov
aas
fwait
je
inc
pushf
mov
adc
sub
cld
xor
and
cmp
mov
and
lret
jp
adc
sub
jg
into
repz
std
mov
sbbb
es
shrl
xchg
xor
outsb
sub
testl
imul
mov
pop
inc
lods
repz
add
enter
loopne
js
lcall
imul
std
inc
cld
mov
inc
pop
dec
sarl
fwait
jne
mov
iret
xrelease
add
cmp
cs
cs
add
je
mov
sbb
jmp
xchg
enter
sub
push
push
fsubr
cltd
cwtl
xlat
jb,pt
cmp
inc
rcr
test
leave
mov
rcr
and
popa
cld
enter
adc
pop
lcall
inc
push
cmp
mov
mov
insb
xchg
repnz
cmc
negb
add
bound
xchg
push
xchg
mov
dec
mov
sub
xchg
cmp
arpl
dec
or
xchg
xor
sub
ljmp
ret
add
aaa
push
je
repnz
inc
cmc
imul
stos
pop
xchg
adc
jecxz
lea
das
xchg
sbb
es
inc
mov
xor
mov
js
insl
or
jno
sbb
push
rolb
add
cli
sti
jb
push
push
arpl
lea
xchg
xchg
jae
mov
adc
add
outsl
add
das
add
lret
fucomp
stc
xchg
loopw
pop
xchg
notb
inc
add
lahf
add
add
notl
movsb
daa
pushf
cmpb
fninit
lods
xchg
call
scas
les
mov
or
test
fldcw
dec
shrb
popf
pop
mov
outsb
push
outsl
inc
pusha
jnp
dec
nop
sub
pop
test
or
sbb
or
stos
inc
fdivr
cmpsb
or
sbb
cltd
fistps
sbb
lcall
rorl
adc
add
push
lahf
neg
movsb
dec
pop
fstps
push
jae
inc
push
dec
sti
pop
inc
xor
not
lea
or
and
arpl
mov
adc
stc
xor
lahf
notl
push
mov
lcall
in
rcr
inc
arpl
mov
add
rclb
lds
jmp
in
xchg
xchg
sub
das
ret
cmp
enter
mov
lret
add
gs
xor
sub
push
outsb
or
in
fwait
sti
dec
inc
mov
pop
dec
xor
fcomi
push
cltd
lahf
shl
pop
push
in
push
mov
mov
out
nop
adc
js
mov
pop
xor
loope
or
and
and
xor
inc
push
rcrl
cmp
outsb
and
imul
push
and
sahf
mov
xor
inc
mov
xlat
mov
ljmp
test
and
pop
jnp
add
jge
clc
outsl
xor
cmc
lea
sub
push
mov
lret
rcr
inc
adc
fcmovnu
mov
cmpsb
and
pusha
inc
xchg
out
faddp
dec
cmp
leave
sahf
push
xchg
and
stos
in
mov
dec
or
into
xchg
adc
xor
pop
jge
aad
test
sbb
inc
dec
mov
out
push
int3
add
cmp
pop
xchg
imul
imul
jo
jge
cmpsl
addr16
addb
in
jl
and
lds
sbb
jmp
int3
cs
mov
lods
pop
mov
push
push
loopw
mov
sub
scas
xchg
cmp
cmpsb
sbb
mov
testl
pop
xor
sub
sub
inc
cmp
sti
jge
add
mov
inc
mov
add
pop
cwtl
cmp
push
xor
addl
leave
ljmp
inc
add
mov
mov
adc
jmp
dec
xchg
icebp
pop
stc
cltd
scas
xor
add
in
jg
js
call
mov
orl
jecxz
hlt
mov
lea
test
mov
imul
repnz
out
fs
mov
jns
aam
sub
rclb
sbb
push
or
jo
lret
punpckhdq
lret
cs
ss
shlb
jl
sbb
cmpsl
lods
stos
cmp
stos
and
outsl
js
incl
test
stos
in
aaa
mov
sbbl
sbb
arpl
pop
fistps
and
mov
dec
ds
js
pop
out
shlb
clc
sbb
push
jge
fisttpll
sbb
or
stos
mov
rcrl
int
fs
test
sbb
test
adc
dec
lret
mov
fcomps
xchg
dec
test
repnz
je
jmp
mov
mov
fmull
dec
sub
pop
int3
sbb
mov
mov
dec
imul
pop
cmpsb
pop
sub
push
mov
mov
sti
pop
es
scas
xor
jns
sti
sti
lcall
push
xorl
hlt
xor
sahf
shl
push
pop
leave
jge
xchg
inc
dec
push
jecxz
mov
xchg
shl
push
roll
in
lods
sbb
repnz
cmpsl
mov
inc
sbb
add
jecxz
pop
clc
rolb
push
in
cmpsb
lret
test
sbb
aad
xor
push
clc
mov
stos
in
loope
mov
sbb
sbb
add
std
add
mov
out
lods
fdivr
lea
and
movsb
les
or
sub
movsl
mov
jne
mov
ljmp
xchg
mov
pusha
cltd
mov
mov
push
lods
daa
push
dec
and
ror
push
orl
jae
pop
rcll
mov
dec
leave
pop
pop
cmp
test
mov
push
aam
fwait
loop
testl
stos
push
lods
jns
mov
repnz
arpl
jl
fsubrp
push
stos
pop
mov
les
mov
leave
lcall
ljmpw
xchg
push
mov
out
nop
cmpsb
popa
adc
stos
cmc
mov
aas
imul
sbb
les
inc
rclb
fistl
adc
or
cmp
in
dec
addb
daa
cli
inc
dec
adc
popa
jl
jns
fwait
xchg
mov
and
or
jae
adc
sub
pop
gs
in
mov
adc
int
mov
sbb
inc
mov
xor
dec
ja
test
sbb
lock
in
stos
es
pop
jo
add
cmc
ja
dec
into
in
repnz
ret
outsb
mov
fisubs
xchg
call
cmp
mov
push
jg
dec
subb
adc
lret
mov
loope
mov
push
pop
lds
arpl
push
scas
out
clc
lret
add
lahf
sub
push
sub
xor
movsl
shrb
add
and
mov
movsb
dec
inc
outsb
cmp
lods
fiaddl
jmp
call
in
cmp
xor
idivl
arpl
adc
popf
mov
adc
cmp
mov
pop
xchg
lock
pushf
pop
pop
and
dec
arpl
popa
xchg
popf
push
sbb
rol
cli
shlb
outsl
sub
iret
sbbb
jg
pop
iret
lret
inc
add
fs
inc
pop
into
and
sub
cmp
dec
jo
js
popa
mov
xchg
pop
mov
int3
mov
bound
fidivl
jl
xchg
iret
pop
mov
mov
mov
aam
mov
jns
cmp
ficoms
cmp
test
pop
adc
pop
adc
dec
insb
mov
fmuls
and
int
mov
jbe
fstpl
pop
mov
adc
xchg
xchg
pmulhuw
js
or
pop
in
and
add
mov
fisubrs
clc
int
jp
pushf
cmp
mov
sbb
pop
mov
test
fistl
mov
xor
push
push
inc
cmp
cmc
and
std
outsb
movsl
add
add
ja
and
mov
repz
inc
sti
clc
mov
scas
jnp
out
cmpsb
mov
mov
cwtl
push
add
or
ss
cmp
and
shlb
call
clc
std
cmp
xchg
insl
fwait
mov
mov
push
inc
insl
and
in
dec
mov
lcall
mov
hlt
mov
mov
mov
sbb
xlat
cmc
jno
bound
add
mov
jae
imull
lret
adc
jne
lods
xchg
push
in
pop
push
clc
test
imul
pushf
sbb
or
mov
sub
mov
popf
ss
icebp
div
push
mov
jnp
lea
lret
sub
jbe
xor
push
popa
rclb
rcr
enter
pop
arpl
or
push
test
xor
sbb
adc
testb
jmp
test
mov
push
dec
dec
or
popf
jecxz
leave
mov
mov
in
jg
push
pusha
adc
push
out
andb
mov
je
aaa
incl
push
and
fstl
das
push
cltd
sbb
int
cs
mov
mov
out
inc
clc
jg
sbb
fidivrs
insw
adc
dec
movsl
xor
movsl
jne
push
adc
ja
lahf
jp
scas
dec
orb
fsubp
adc
mov
mov
mov
adc
cmpsl
sbb
es
lret
int3
stos
fldt
in
mov
sub
dec
dec
idivb
cmp
hlt
add
pushf
clc
pop
sarb
ss
loopne
inc
stc
pop
inc
inc
adc
cmp
iret
push
sbb
sbb
add
mov
mov
lods
and
adc
cld
sub
aam
jl
or
add
inc
addr16
adc
cmp
ja
pop
mov
ss
adc
and
aam
push
les
flds
mov
push
scas
out
mov
mov
push
add
outsl
push
lahf
and
dec
fmuls
ljmp
fdivp
in
sbb
inc
push
dec
leave
pop
imul
push
or
flds
xlat
dec
clc
scas
jmp
aas
lods
insb
test
jp
and
inc
sub
xchg
fisubrl
aam
data16
adc
or
stc
notb
fwait
jb
enter
add
dec
xor
fcoml
fmuls
shlb
pop
sub
add
jmp
lret
stos
pusha
pop
jge
loope
rcl
test
cmpsb
and
roll
mov
sbb
jnp
mov
push
inc
mov
adc
mov
cs
or
nop
jo
mov
mov
fidivs
addr16
outsb
aam
int3
hlt
xchg
lock
sub
adc
jb
push
gs
cli
into
mov
stos
bound
fadd
inc
push
sub
fisubrl
mov
jg
mov
rcr
jns
les
incb
jno
loopne
shrb
pop
push
lea
lods
aaa
loopne
and
roll
leave
and
push
xchg
mov
jg
push
or
add
inc
pushf
push
cmp
adc
fisttpll
lods
add
data16
fistps
cmp
imul
jp
and
xchg
sub
lret
sbb
in
adc
bound
add
rcl
jae
mov
sti
push
add
int3
dec
mov
insb
pop
jl
adc
fimull
adc
insb
dec
imull
mov
mov
insb
inc
arpl
push
fidivs
cltd
and
pop
lock
sub
scas
add
jp,pn
lods
sub
iret
xor
fdivl
jae
mov
push
sub
pusha
push
les
hlt
xor
inc
frstor
fsubrl
mov
mov
xor
lods
shlb
adc
push
fdivrl
pop
subl
stos
cmc
add
call
adc
inc
push
cld
je
lds
aas
imul
cmpsl
pop
dec
push
enter
aas
push
xor
sbbb
imul
xor
pop
test
push
das
sbbl
imul
cmpsl
sbb
lsl
ficomps
outsl
mov
push
std
xlat
xchg
pop
push
pop
mov
sbb
out
loop
xor
pop
adc
sub
loopne
pop
bound
pop
add
shrb
shr
sti
mov
imul
std
sub
mov
cli
test
jge
into
xor
dec
mov
jmp
xchg
test
add
or
jno
xchg
push
test
mov
enter
xor
jno
and
js
adc
insb
add
mov
sti
cmpsb
jmp
daa
mov
dec
xchg
scas
mov
add
mov
aaa
insl
dec
jo
mov
pop
jno
xlat
js
add
cld
sub
es
and
in
jg
inc
cmc
mov
popf
mov
imul
incl
ja
ret
lret
adc
gs
pop
daa
xor
add
mov
xchg
cmpsl
lcall
or
xchg
cwtl
xchg
repz
xchg
loopne
jmp
push
mov
xchg
xor
pop
loope
mov
nop
lret
xor
mov
pop
dec
insl
pop
subl
cmpsb
enter
pop
stc
jae
dec
jns
hlt
cld
enter
mov
loop
aas
or
or
add
in
mov
xchg
sbb
mov
add
push
add
inc
sbb
dec
pop
sbb
dec
call
jb
push
add
cmp
mov
and
subb
jp
mov
cmp
les
insb
sbb
xor
repnz
dec
repz
jno
pop
sti
pop
mov
sub
push
push
dec
jl
outsl
stc
fildll
std
add
mov
sub
xchg
int
stos
out
jg
ljmp
fld
pcmpgtw
dec
lods
sub
xor
mov
push
sbb
iret
popf
mov
mov
push
or
or
mov
int3
mov
adc
sub
ss
and
dec
addb
in
xchg
jbe
xchg
scas
fcom
add
outsl
std
fs
dec
pop
lcall
cmpsb
inc
icebp
shll
test
test
mov
cmp
sub
push
push
mov
popa
cmp
jne
fsubl
mov
repnz
mov
out
xor
mov
and
push
mov
int3
repnz
inc
aas
jnp
sahf
jb
push
ljmp
push
pop
inc
push
mov
sub
mov
fdivrl
or
dec
fstps
aad
mov
leave
xchg
sub
fistps
jnp
mov
ds
lahf
lret
fcompl
out
repz
mov
frstor
out
mov
jnp
inc
movsb
jno
inc
mov
scas
stc
pop
adc
jecxz
sbb
movsb
sahf
imul
js
jae
xchg
push
out
out
test
test
ret
mov
push
test
xor
sub
lock
inc
cltd
adc
add
outsl
and
out
pop
rorb
push
mov
push
mov
ss
mov
lods
mov
push
push
shrl
or
pop
out
xchg
shrb
or
xor
rorl
fimuls
and
add
movsb
or
shr
lods
push
outsl
sub
test
push
jns
mov
inc
push
xchg
sbb
shll
mov
push
mull
int
mov
inc
mov
xor
and
add
sbb
mov
arpl
insl
mov
sbb
test
stos
xor
icebp
sbb
pop
mov
mov
push
add
adc
sbb
lods
fcoml
lret
mov
jne
fisubrs
jmp
fwait
sub
add
xor
lds
fbld
test
xchg
add
dec
xchg
dec
mov
push
scas
fwait
mov
inc
popf
jge
jne
cwtl
fwait
scas
out
into
mov
adcb
or
and
std
cmpsl
jnp
fucompp
out
lock
cmpsb
mov
dec
pop
in
pop
std
iret
xchg
cltd
jecxz
pusha
inc
aas
outsl
out
mov
into
jo
lahf
ret
ficoml
decl
aam
sub
xchg
js
bound
push
cltd
pop
mov
notb
cmp
mov
shrb
mov
mov
cmp
arpl
stc
bound
popa
mov
aaa
stos
add
test
popf
loope
push
or
hlt
adc
cltd
test
cli
lods
leave
sbb
xchg
xor
popf
gs
or
adc
popf
cmp
jg
mov
mov
mov
in
iret
lret
loop
cmp
jmp
lcall
popa
fstpl
lahf
xor
inc
cld
xor
mov
push
adc
and
lods
sahf
insl
fs
jae
lds
pop
rcrb
daa
push
int3
lea
outsb
mov
sub
nop
mov
add
jno
clc
mov
sub
dec
daa
insl
loopne
dec
int
mov
mov
mov
cmpsb
sahf
xchg
push
gs
xor
mov
mov
hlt
pop
mov
add
mov
pusha
xchg
lret
xor
outsl
ja
clc
sbb
inc
mov
dec
xchg
vmovd
movsl
sub
pop
int3
push
mov
xor
mov
stc
push
subb
bound
clc
mov
jle
loopne
mov
push
dec
jg
lea
add
mov
jl
adc
sub
pusha
cmp
imul
adc
bound
push
imul
enter
scas
xchg
dec
xchg
dec
adc
jae
sbb
scas
ljmp
dec
cmpb
jno
sti
testb
sub
inc
sar
mov
adc
dec
lods
add
xor
movsl
push
scas
and
sub
mul
xchg
xchg
lret
and
and
enter
mov
or
mov
xchg
test
shlb
xchg
out
pop
aam
sub
insl
or
addl
sbb
and
test
nop
adc
xchg
cld
shlb
adcl
pop
movsb
xchg
push
mov
stos
mov
scas
adc
outsb
adc
adc
cmp
dec
aaa
add
mov
dec
movsb
in
leave
push
mov
fstpt
cs
mov
std
popf
jecxz
cld
adc
mov
and
into
aas
adc
nopl
cmpl
mov
jae
mov
push
jecxz
in
sub
xchg
inc
mov
pop
jecxz
ljmp
dec
mov
pop
cwtl
inc
movsl
lret
testb
out
fadd
enter
or
mov
movl
xchg
lock
pop
sub
mov
fsubl
jp
pop
insl
inc
dec
inc
dec
popf
push
out
int
xchg
loop
je
into
fsubs
test
mov
repz
imulb
lods
bound
sbb
pop
test
mov
shrl
mov
repnz
cmc
aam
subb
xor
and
das
and
sub
add
aaa
stos
push
sbb
mov
sub
add
jge
adc
cmp
push
mov
cltd
inc
jge
mov
jb
push
ljmp
ret
cli
jg
sbb
ja
jb
sub
test
test
sbb
fnstsw
sahf
jo
push
mov
idiv
pop
cmpsb
add
mov
adc
add
std
dec
jns
xchg
xor
mov
sbb
mov
jo
pop
sahf
jmp
fmuls
jp
out
mov
fs
mov
sub
ja
cs
mov
cld
or
ret
adc
lcall
cli
jo
jmp
xor
adc
call
lea
lds
nop
add
inc
mov
or
push
pop
div
mov
adc
inc
mov
sub
pop
sbb
pop
pop
inc
jle
notb
je
ljmp
jecxz
pop
or
enter
pop
and
shll
mov
mov
mov
jecxz
pop
stos
cmp
mov
sbb
cmpsl
fs
mov
repnz
dec
stos
jo
insl
xchg
popa
jecxz
popf
and
cmp
fldl
adc
mov
mov
fwait
lods
inc
push
cmc
leave
mov
jnp
jbe
mov
sbb
and
cmpsb
insb
cmp
add
jl
dec
pop
cmpsl
mov
xchg
xchg
add
cmp
cmp
je
push
xchg
pop
imul
adc
push
lcall
rcll
and
cld
clc
call
xchg
sub
adc
and
stc
imul
sub
icebp
mov
aad
mov
stos
test
xchg
pop
xor
adc
mov
or
fwait
mov
pop
or
orl
loope
add
mov
mov
jl
pushf
test
imull
or
test
pushf
fs
push
sbb
int3
xor
movsb
lds
mov
es
movsb
shl
fisttpll
dec
or
mov
sti
sbb
hlt
cmpsb
dec
cmp
push
push
sahf
jae
repz
push
inc
fiadds
enter
hlt
les
or
or
inc
adc
ret
dec
js
mov
decl
add
ret
jge
lock
add
mov
inc
pop
hlt
shlb
into
push
insb
call
cmp
test
pop
sbbl
cwtl
sbb
pusha
mov
insl
out
pop
inc
fcoms
scas
ljmp
mov
adc
jae
sbb
push
jecxz
adc
mov
xlat
push
xchg
dec
addr16
test
dec
fdivrs
or
jb
or
mov
imul
xchg
imull
es
outsl
pusha
adc
inc
jns
outsb
scas
sbb
repnz
scas
sbb
pop
mov
pop
repz
cmp
loopne
imul
xchg
pop
pop
mov
out
ss
cmp
aas
ja
mov
pop
addl
scas
popa
das
not
sti
icebp
gs
mov
dec
dec
and
jne
movsb
daa
inc
fistps
cmp
movsl
mov
cvttps2pi
in
or
ljmp
std
xor
sub
into
imul
xchg
sbb
ret
dec
push
jnp
xlat
fildll
dec
dec
orl
mov
icebp
pop
and
in
jecxz
daa
in
jo
add
int
bound
scas
dec
push
push
jge
inc
sbb
pushf
test
mov
pusha
aam
jge
adc
inc
cltd
inc
mov
pop
pop
in
add
lret
imul
lea
inc
push
jb
push
icebp
xor
jae
xor
xor
jnp
jae
mov
loop
sbb
pop
add
iret
fldenv
mov
mov
repnz
inc
mov
rcl
xor
fbld
outsb
xor
shll
lret
js
jg
loopne
and
mov
push
inc
ss
mov
test
mov
movsl
or
mov
and
lret
pop
and
add
shll
mov
xor
xor
mov
xlat
addb
pop
fwait
push
jnp
test
and
or
lea
cld
push
cmp
jmp
repnz
lcall
imull
jecxz
jle
daa
bound
jns
mov
mov
shr
push
mov
jmp
sbb
pop
add
clc
sub
mov
ss
xor
fcomp
xchg
ja
and
pop
mov
or
and
ror
imul
in
test
mov
push
icebp
dec
popf
mov
mov
or
jo
out
lods
je
dec
fwait
sbb
inc
cmpsl
dec
insb
push
push
mov
insl
je
mov
xor
mov
push
or
arpl
in
lret
jg
outsb
js
jno
lcall
lods
adc
pop
push
lods
es
xchg
jp
mov
inc
fnstcw
mov
xor
xchg
pop
cmp
in
je
cld
test
ljmp
dec
jle
add
push
insl
push
add
cwtl
insl
adc
fldt
jae
aaa
sbb
xor
sub
and
sub
mov
jno
adc
jle
out
xchg
lahf
lock
imul
xor
lea
jle
xchg
aad
or
mov
lods
dec
push
movsl
sub
push
xor
dec
cmp
ds
sbb
cli
inc
js
movsb
idivb
movsb
mov
dec
jl
orb
rorb
shll
clc
cmpsb
je
mov
into
cwtl
push
test
aas
jno
insb
sub
adc
scas
add
dec
icebp
push
or
dec
push
movl
and
push
lret
xchg
xor
outsb
cmc
push
notl
push
fisttps
in
fnsave
pop
push
inc
leave
xor
lret
sub
das
push
xor
cmc
shlb
into
lods
xor
cmp
sarl
movsb
std
aad
imul
cmpsb
pop
ss
add
push
imul
adc
loop
fisubl
mov
mov
cmp
jge
in
out
and
dec
sbb
dec
or
dec
and
hlt
add
pop
jb
arpl
dec
out
and
in
sbb
and
scas
shrl
and
inc
mov
sbb
dec
cmc
int
rorb
and
int3
sbb
xor
loopne
push
pop
fbstp
fs
lods
xchg
outsb
jo
dec
pop
cld
pop
ret
jne
std
gs
sahf
xchg
rcr
outsb
imul
xor
loop
push
fwait
xor
jb
loop
push
lret
mov
dec
xorl
outsl
push
stc
test
pop
out
popf
popf
ret
orb
pop
inc
push
orl
arpl
add
lods
fnstcw
push
sbb
mov
iret
mov
or
mov
aas
add
repz
jmp
sbb
xor
xor
aas
xor
pushf
sbb
jecxz
inc
add
lea
ja
push
pushf
ficoml
push
cmp
test
mov
repnz
lret
jg
aam
in
xchg
ret
jl
mov
cmc
imul
in
mov
add
mov
nop
sbb
mov
or
inc
rcrb
fisubrs
stc
stos
add
out
divb
or
lods
and
push
mov
bound
mov
ds
dec
sarl
js
andl
mov
call
popa
aam
out
jne
inc
xchg
and
mov
movsb
dec
stos
mov
adc
test
sub
cmp
pop
insl
xchg
push
push
xlat
push
out
outsl
add
cs
nop
lods
jno
scas
jmp
dec
fwait
ds
push
dec
pop
pop
les
mov
out
shl
push
mov
outsl
or
mov
xorl
sbb
add
shll
jae
adc
add
aad
jno
push
subl
adc
and
jg
vcvttps2dq
add
mov
js
mov
pop
fisubrl
xchg
outsb
das
push
outsl
cmpsb
pop
xor
adc
inc
fisubrl
jbe
jl
stos
fwait
xor
ret
push
sub
mov
daa
loope
popa
cmp
xchg
sbb
lds
loop
sarb
adcb
mov
int3
mov
jmp
cld
cmpsb
mov
dec
and
xchg
sahf
int3
add
int
dec
adc
xchg
sub
or
lret
jbe
cli
cmpsl
lods
popa
inc
jle
and
push
pushf
orb
mov
dec
mov
mov
mov
cmc
aaa
push
js
push
sahf
dec
jno
repnz
cmp
mov
mov
add
adc
mov
cwtl
cwtl
jnp
push
jnp
mov
outsb
cmp
shll
push
lods
mov
rolb
test
xchg
popf
xor
dec
dec
std
add
test
push
pop
pop
sub
jl
cld
out
shl
test
dec
leave
in
in
mov
hlt
popf
in
movsb
pop
lcall
loop
mov
icebp
stos
mov
and
fbld
out
pop
push
cmp
sub
mov
aam
mov
pop
dec
jbe
jbe
pop
lock
cmp
push
int3
cmp
or
pushf
and
stos
dec
push
jmp
repnz
jae
scas
int
pop
divl
lods
push
push
and
rcr
xor
adc
mov
out
push
or
push
cmp
cmc
push
adcl
jnp
scas
mov
shrl
add
cmp
dec
sub
add
mov
push
in
std
mov
addr16
subl
sub
xchg
dec
add
xchg
cmp
insb
cmp
sub
add
jns
data16
push
sub
jne
ficompl
mov
mov
hlt
mov
cmp
xchg
pop
fdivrs
leave
test
jl
jbe
stos
add
xor
mov
inc
sbbl
outsb
or
les
lret
fdivrs
inc
mov
movsl
jle
outsl
ret
and
xchg
aad
cmp
cmp
dec
ja
shlb
popa
std
sahf
lahf
xchg
or
xchg
push
stos
push
hlt
scas
jo
and
and
add
shl
dec
pop
mov
sub
lods
mov
in
int
je
add
sub
sbb
push
jge
or
sub
jae
xor
dec
gs
lea
popf
mov
cmc
sub
or
sbb
shll
pop
mov
add
ljmp
dec
faddl
sahf
inc
sub
loop
sub
lcall
je
jne
jl
cmpsl
xchg
popf
jmp
bound
and
pop
in
xchg
dec
int
jecxz
imul
aaa
sub
xor
jo
repnz
mov
pop
pop
fdivrl
jns
inc
std
mov
fsts
les
push
push
icebp
add
pop
stos
xchg
je
mov
ss
sbb
fnsave
aad
or
jno
rol
ret
test
and
sbb
sahf
mov
add
xchg
push
mov
pop
scas
mov
mov
mov
mov
rcrl
int
adc
xlat
lfs
mov
cmpl
sub
mov
adc
insb
dec
loope
pop
xor
pop
sahf
pop
sub
fistpl
xchg
push
es
add
stc
add
dec
lcall
mov
fcmovnb
sbb
mov
cs
inc
aad
sbbb
orl
jle
pop
scas
leave
pushl
mov
pop
push
xor
in
or
arpl
popf
sbbb
or
pop
test
mov
or
mov
mov
loope
jecxz
cmp
scas
aam
out
push
adc
jo
jbe
xor
mov
loopne
pop
mov
push
jae
stos
decl
pop
call
cmp
xor
push
cmp
jecxz
jnp
jl
nop
icebp
pop
bound
movsb
inc
jmp
shlb
push
imul
push
mov
inc
fisubrs
dec
aad
mov
ljmp
aas
add
mov
push
dec
jbe
jle
movsb
dec
xchg
sub
push
xchg
cmp
cmp
out
or
pop
xorl
leave
push
mov
pusha
adc
push
cmp
inc
add
mov
jg
jge
test
sub
int
pop
mov
shll
jle
loopne
mov
int3
push
stc
lahf
jno
jg
repnz
xor
sbb
and
push
xchg
dec
inc
dec
xor
or
sub
inc
mov
xchg
lret
push
push
xchg
call
cmp
loop
xor
xchg
outsl
cld
out
and
push
push
mov
insl
shrb
bound
in
sbb
sub
lock
xchg
pop
sbb
push
mov
inc
into
movsb
repz
repnz
cmpsl
outsl
pop
sub
push
inc
fwait
push
mov
mull
ret
shrl
pop
inc
hlt
push
lcall
jle
and
and
adc
sbbl
cmp
adc
adc
out
sbb
dec
test
fucomip
add
dec
les
sub
loopne
pop
xor
mov
scas
xor
inc
pop
and
sbb
sahf
sbb
lods
fidivrs
addb
in
mov
enter
rol
lock
iret
jge
fs
push
lock
shr
jbe
add
aad
xor
mov
inc
mov
jb
sbb
mov
test
sti
add
adc
ja
std
ret
lret
xchg
sbb
pop
dec
fs
aas
psubsw
jmp
sar
or
out
bound
push
shl
cs
insl
int3
add
movsl
dec
daa
rcll
mov
pop
cwtl
imul
and
cmp
and
push
xor
lahf
jmp
fwait
cld
mov
pop
jb
add
mov
cs
lcall
outsl
mov
jg
lahf
ror
addr16
pop
in
mov
int
jae
xchg
mov
jb
lds
sub
inc
test
aad
pop
add
fdiv
sahf
andb
out
inc
ja
pop
push
pop
enter
flds
dec
out
mov
or
jge
pop
xor
mov
ds
pop
shrb
xchg
xchg
mov
repnz
icebp
xchg
repz
dec
fwait
pop
push
sbbb
dec
or
inc
mov
xchg
pop
and
or
sub
cltd
rcrl
pop
loopne
pusha
lods
mov
ja
or
mov
out
or
fnstcw
or
sub
push
jbe
mov
xor
ror
dec
jno
dec
inc
sete
shll
xor
dec
pop
shrb
pop
jmp
push
dec
pop
loop
loop
popa
daa
xchg
add
jg
sbb
iret
jmp
dec
lea
enter
cmp
mov
sub
out
movsl
jmp
push
pop
xchg
sahf
xchg
cmc
cmp
sub
mul
and
loope
fldenv
lods
rcl
shl
jle
lret
add
ret
data16
loop
adc
adc
ret
adc
add
xor
std
xor
mov
cld
repnz
xor
xor
mov
aaa
fsubrl
push
dec
xchg
push
out
pop
ficomps
mov
enter
aas
and
sub
test
cmp
xor
jbe
cmpsl
cmp
mov
sahf
call
jl
dec
jmp
mov
or
hlt
bound
pop
xor
jmp
pushf
fdivrs
push
je
ret
lret
cmp
cwtl
add
push
mov
xor
mov
jo
xchg
adc
arpl
movsb
in
sti
stos
test
insl
or
mov
pusha
fucom
orb
jbe
hlt
decl
sub
mov
lahf
inc
push
out
loop
test
sub
fnsave
imul
popa
shl
jae
mov
mov
xorb
lret
dec
sbb
inc
clc
pop
add
and
inc
sbb
lds
inc
xchg
loope
xlat
push
push
pushf
test
pop
cmp
push
sbb
and
xchg
push
hlt
loopne
or
mov
adc
cmpsb
rcrb
leave
sub
pop
xchg
call
sahf
ja
mov
insb
push
cmp
cmp
je
imul
sbb
insl
push
xor
out
nop
arpl
push
out
sub
push
pop
inc
ret
stos
inc
inc
dec
fucompp
adc
pop
push
sbb
in
add
aad
rorb
push
add
sti
sbb
inc
daa
enter
in
cmpsl
mov
lea
or
lods
rcl
push
mov
xor
daa
cltd
mov
push
xchg
add
aas
decl
sbb
mov
clc
flds
orl
iret
out
int
sub
aaa
mov
dec
cmp
inc
cmp
push
xchg
pop
lret
cmp
sbb
add
daa
mov
fstpt
cmp
rcr
mov
mov
jg
and
gs
cmpb
jmp
xchg
pop
cmp
jp
ds
fwait
mov
lcall
mov
jb
aas
in
inc
sub
push
push
xor
cmp
outsl
test
inc
aad
aaa
mov
add
jbe
mov
xor
xchg
test
mov
sbb
lahf
sti
ljmp
cs
add
sub
adc
cmp
add
adc
sahf
sbb
loope
es
sub
add
fidivl
ucomiss
inc
inc
mov
into
cmp
shlb
mov
lret
scas
mov
sbb
pop
dec
rorl
mov
arpl
hlt
divl
sub
mov
iret
or
or
iret
xor
or
cmp
lcall
push
mov
cmp
bnd
pop
adc
aam
pop
in
add
dec
in
mov
cld
jmp
loop
gs
cmpsb
cmp
adc
and
ret
enter
nop
mov
test
out
scas
or
mov
sahf
push
in
pop
sub
and
dec
lods
dec
push
sbb
inc
hlt
aad
repnz
cmpl
inc
js
cli
sub
pop
add
dec
mov
stos
in
sahf
mov
mov
xchg
xchg
insl
jge
sbbl
cmpsb
rorb
out
mov
ret
fldenv
sbb
inc
fistpl
cmp
sub
outsl
aaa
js
and
mov
push
js
mov
sbb
mov
xchg
movsl
dec
lahf
loop
jl
cltd
mov
push
leave
xchg
sub
dec
jbe
add
mov
push
loopne
jns
mov
or
pusha
ret
ljmp
cmpb
ret
cmpxchg
insb
mov
test
dec
mov
and
stc
arpl
sub
es
imul
stc
jnp
add
out
mov
out
add
cmp
lcall
fs
gs
outsl
pop
cmpl
mov
adc
dec
lock
js
cwtl
popf
aas
and
nop
sbb
test
push
pusha
sbb
out
div
sub
xchg
fmull
dec
faddp
popa
outsb
data16
mov
add
xor
jae
fimull
or
lea
les
jae
ljmp
daa
adc
subb
shl
incb
inc
add
mov
adc
mov
clc
and
xor
inc
loopne
add
adc
enter
xchg
fucomp
sbb
fiaddl
rcl
jl
scas
and
adcb
jge
js
jnp
inc
lcall
das
sbb
or
es
fistpl
inc
imul
pop
push
movsl
jb
sbb
fsts
fimull
dec
icebp
mov
daa
xchg
cs
das
mov
orb
sub
call
mov
pusha
repnz
jae
cmp
xor
repz
mov
push
inc
mov
xchg
lahf
scas
pop
push
xor
adc
cmpsl
inc
pop
loope
push
loopne
int
jb
lock
mov
sub
add
xor
xlat
xchg
and
rcll
jp
mov
xchg
scas
fsts
pop
cli
xor
or
xor
das
cmpsb
ret
xor
cmp
ljmp
sbb
jge
cmp
movsl
jge
hlt
adc
ret
mov
and
ror
inc
std
xlat
pop
aas
cmpsb
aam
inc
jg
or
negb
push
push
mov
test
xchg
adc
cwtl
sahf
xor
jge
dec
mov
cmp
mov
in
dec
imul
loop
int
in
clc
decb
arpl
insb
push
mov
jb
repz
xchg
push
dec
loope
pop
fnstsw
jg
scas
dec
inc
sub
dec
dec
xor
iret
loope
adc
ja
sub
ffreep
testb
push
aam
sahf
movsl
pop
push
imul
fnstcw
cmp
clc
lret
popa
inc
in
mov
mov
cmp
pop
xchg
fildll
ror
test
dec
std
xchg
mov
add
lret
push
incb
inc
push
fildl
cmp
xor
mov
lahf
inc
jae
movb
jg
inc
push
fucomi
ret
leave
cmp
repz
adc
mov
pop
xchg
add
push
outsl
xchg
inc
sub
test
inc
jno
outsl
or
fsub
mov
lret
and
repnz
xor
jb
jmp
cmp
jb
mov
jmp
mov
add
pop
mov
inc
rorl
cmpsb
leave
ss
mov
add
xchg
push
popf
add
xchg
sbb
pop
mov
mov
lret
outsl
lcall
cwtl
cmpsl
sbb
sbb
push
lret
mov
ljmp
test
pop
adcb
cmpsl
out
jg
push
jns
dec
lea
int
rcr
pop
cwtl
push
stc
pushf
into
xchg
fs
cli
int3
clc
pushl
aam
dec
ret
mov
pop
mov
fidivrl
repz
mov
fidivs
push
enter
loop
pop
jl
inc
mov
call
dec
push
push
mov
es
cmc
nop
mov
cmp
addr16
ds
lcall
out
leave
or
iret
mov
mov
popa
scas
addr16
ja
jle
fstl
mov
jns
fldcw
mov
cvttps2pi
je
daa
scas
inc
sbb
pop
mov
add
imul
mov
shlb
ret
popf
jmp
jmp
movsl
pop
push
pop
pinsrw
sub
cmp
pop
xchg
pop
ss
pop
push
je
push
xchg
add
sbb
mov
mov
movnti
stos
lock
loope
or
adc
repnz
dec
sub
add
mov
insb
fs
jecxz
outsb
pop
xchg
lea
shlb
sbb
or
mov
jb
pop
test
xor
aam
jmp
push
in
dec
sbb
pop
pop
movsb
pop
ja
loope
jns
sub
stos
mov
out
pop
jne
xor
sbb
testl
sub
cwtl
xor
outsl
rclb
xor
es
mov
cli
adc
std
jmp
jno
inc
js
mov
jnp
dec
cmpl
fidivrs
jae
cmp
mov
pushf
xor
stos
sbb
movsb
cltd
ds
sub
pop
frstor
push
xor
jne
sbb
mov
mov
or
inc
in
bound
scas
bound
lahf
out
ss
and
fs
push
cmpsb
stc
rorb
imul
jge
int
adc
dec
roll
mov
or
adc
and
jmp
jmp
sar
addb
sub
xchg
out
and
mov
xor
push
mov
and
idivl
loope
push
adc
push
inc
out
mov
ficomps
pop
mov
adc
jl
shll
mov
pop
lods
or
sbb
out
scas
lock
outsb
pushf
movsl
push
dec
mov
cmp
push
daa
xor
cltd
push
pop
enter
adc
in
or
ss
ja
mov
push
cmpsb
test
pop
out
pop
xchg
adc
jecxz
leave
shlb
xor
dec
jns
xchg
das
xor
xchg
fwait
pop
pop
sbb
cwtl
imul
addl
xor
repz
fidivrs
push
fidivl
call
imul
aaa
pusha
cmp
test
inc
in
xchg
gs
andl
mov
mov
sub
cmpsb
mov
cmp
jbe
cmp
xchg
in
shrl
test
inc
dec
mov
fimull
add
fsts
rclb
icebp
push
jge
xor
dec
out
jo
pop
mov
pop
icebp
cmpsl
push
mov
mov
xor
xchg
scas
cmp
mov
int
dec
cltd
add
jb
enter
add
cltd
push
adc
mov
ds
and
mov
dec
sti
out
mov
mov
mov
fwait
rcrb
push
push
dec
xor
fsubs
mov
mov
lcall
pop
sbb
sbb
fldl
cmpsl
mov
sbb
mov
in
push
loope
add
jle
xor
inc
jmp
add
aaa
xchg
in
lods
mov
pop
rcll
inc
movl
inc
subb
loop
xorl
dec
inc
clc
or
cld
out
test
mov
sbb
or
leave
mov
scas
mov
movsl
adc
cld
out
adc
push
addb
push
adc
loop
lods
cmpsb
ljmp
data16
mov
shrb
test
sbb
xlat
pop
jge
fwait
xchg
mov
fdivrl
or
iret
leave
dec
mov
mov
je
lea
mov
inc
push
in
imul
sub
jle
sbb
ficoml
in
ljmp
dec
lret
adc
cmp
ret
es
inc
aam
xchg
mov
cmp
jb
mov
fcoms
jno
arpl
dec
cld
ss
mov
inc
inc
fcomp
xor
ret
mov
xchg
sub
subb
mov
nop
xor
or
and
xor
or
lcall
popf
ficoml
mov
nop
sti
dec
sbb
lock
cmp
and
cmp
insb
adc
imul
cld
mov
roll
xchg
mov
adc
mov
mov
mov
inc
mov
and
jle
cmp
fldl
loop
in
xor
inc
dec
loop
jbe
insb
dec
jp
xchg
ja
adc
cmpsb
mov
pop
aam
je
cmpsb
mov
cs
jae
jp
sbb
mov
cld
xor
mov
orb
rorb
add
xor
pusha
jbe
push
aaa
pop
pop
rorl
imul
pusha
std
mov
sub
repz
mov
jp
pushf
lea
in
xor
and
sub
jns
sti
andl
lcall
add
and
and
shrl
rcr
jne
cmp
shrb
cwtl
and
ss
xor
sub
shrb
js,pn
ss
in
xchg
sub
lret
adc
int
push
addr16
into
ljmp
xor
pop
testb
in
mov
cmp
movsb
pop
aaa
dec
sti
mov
add
imul
push
mov
add
cmc
test
cld
outsl
jmp
inc
xchg
sub
cmp
push
std
ja
pop
cmp
jb
cmp
mov
or
jb
push
sub
jmp
test
dec
pop
in
shll
sahf
out
lock
pop
aad
add
movsl
mov
mov
mov
mov
mov
lods
icebp
adcl
add
mov
xchg
loope
mov
data16
ss
dec
call
loope
cmp
xchg
add
imul
or
scas
mov
icebp
sub
mov
movsb
mov
cmc
jecxz
in
adc
push
stos
dec
rolb
or
shl
adc
filds
jmp
mov
xor
stc
mov
xor
mov
and
xor
mov
sbb
or
rcll
xor
mov
jo
mov
shrb
and
inc
push
inc
pushf
imul
popf
enter
outsb
hlt
mov
cmp
mov
jo
leave
xlat
mov
out
ret
inc
js
ficoml
mov
xchg
popf
popf
sub
in
nop
adc
jne
jge
shl
divb
call
xorl
jae
add
pop
xchg
xor
pop
fcomps
inc
mov
sub
nop
bndstx
sahf
cmpsl
inc
add
mov
sbbl
std
and
pop
test
sub
adc
mov
push
mov
fcmove
sub
xorb
and
call
or
sete
ja
pop
mov
inc
dec
das
aaa
sbb
mov
sub
outsl
sbb
fistps
push
jnp
shll
rcll
insl
or
test
xchg
jp
dec
fisttpl
xor
or
loop
nop
pop
cltd
loop
mov
add
add
add
inc
xchg
cmp
fisubrs
mov
mov
mov
or
sub
mov
lock
mov
and
rorb
xchg
cmpsl
mov
dec
pop
jmp
push
shlb
imul
scas
jne
leave
and
fwait
movsl
xor
stc
insb
cli
sarb
clc
ljmp
aaa
movsl
push
mov
cli
mov
subb
mov
arpl
fstpt
addl
cwtl
sbb
mov
mov
cmp
mov
mov
into
mov
and
mov
shr
pop
dec
lds
stos
cmpsl
test
int
inc
xchg
push
dec
jg
in
pop
lcall
leave
stos
frstor
aaa
in
jmp
sub
xchg
out
and
jmp
scas
in
xchg
cld
jl
mov
mov
andl
aam
insb
rclb
inc
jg
mov
out
lea
pop
mov
cwtl
sahf
out
sbb
popf
clc
jl
pop
pop
ss
push
popl
pop
lods
jne
clc
dec
in
mov
adc
out
push
mov
dec
xchg
xlat
jg
in
adc
mov
arpl
jmp
mov
mov
sub
jecxz
lods
inc
xor
inc
mov
sub
inc
adc
js
in
jg
insl
neg
mov
outsl
popa
xchg
ja
dec
cmp
xchg
clc
cmp
dec
outsb
fwait
in
je
loop
ja
stos
jae
cmc
sbb
pop
or
aas
es
dec
icebp
out
pop
loop
pop
loope
mov
loope
in
stos
mov
inc
dec
scas
mov
or
add
ss
outsb
mov
cmpsl
adc
aaa
shrl
push
movsb
into
mov
lock
mov
inc
dec
icebp
push
outsb
inc
mov
pop
negl
mov
iret
dec
mov
popa
mov
in
mov
pop
testl
dec
and
and
gs
push
scas
std
ljmp
pop
xor
hlt
mov
cmpsb
dec
cld
divl
ss
je
xchg
into
push
pop
xchg
sub
push
arpl
jb
out
jp
dec
xchg
jno
repz
dec
jl
cmp
clc
cmc
rcrb
xor
or
cmp
aaa
sti
push
sub
not
cmp
ret
sahf
bound
and
dec
lahf
pop
jno
or
mov
movsl
daa
push
cmp
push
sbb
dec
and
xor
jb
nop
pop
fadds
clc
leave
push
gs
hlt
movsb
jne
xchg
pushf
call
scas
jge
cmp
shlb
jecxz,pn
cmp
mov
hlt
sbb
xor
into
sbb
popf
enter
sbb
sbb
push
pop
js
mov
add
rclb
aas
mov
jg
add
dec
aas
sbb
je
loope
addb
mov
out
add
dec
sar
mov
gs
dec
leave
test
daa
jmp
out
sarl
js
stos
cld
and
mov
push
sbb
out
aaa
cltd
or
or
inc
in
addb
data16
int
paddsb
xchg
leave
pushf
dec
fimull
sbb
test
into
call
pop
xchg
bound
mov
jne
or
mov
pop
pop
call
icebp
loopne
xchg
mov
fdivr
stc
into
and
cltd
mov
jae
pop
sub
mov
pop
test
inc
or
mov
adc
js
dec
xor
data16
lret
lcall
nop
cmp
pop
xchg
xchg
movsb
mov
test
cli
js
sbb
out
pop
xchg
adc
jne
lock
pusha
cltd
mov
test
push
mov
mov
inc
mov
lods
dec
cmp
cli
xor
mov
jp
add
call
stos
pop
push
sbb
mov
or
xchg
lds
jbe
mov
add
dec
cli
sbb
test
test
cmp
push
lods
mov
jecxz
pop
dec
bound
cli
lret
jge
jae
outsl
pop
mov
or
lods
xor
mov
xchg
pushf
push
add
lods
mov
in
and
mov
mov
or
mov
mov
pushl
adc
xchg
neg
aad
int3
push
jno
dec
ljmp
cmp
clc
jo
popf
aas
shr
fisttpll
out
mov
or
cmc
mov
gs
mov
cmp
mov
add
xchg
insl
sahf
in
popa
and
xor
mov
cld
pop
dec
jecxz
clc
je
and
mov
jo
xchg
mov
dec
je
or
addb
movsl
sbb
sub
rclb
ds
xchg
cli
aaa
or
clc
bound
cmp
shrl
scas
inc
xchg
xchg
and
stos
mull
into
fdivrp
sbb
and
pop
jb
fcompl
and
sub
jl
leave
mov
mov
or
cs
leave
mov
repnz
in
xchg
pop
push
jne
pop
and
add
sbb
ja
and
je
and
rcl
int
shrb
jb
cmp
sti
lcall
or
add
fstps
dec
aad
xchg
icebp
cltd
dec
out
data16
popf
ds
cmp
lods
adc
adc
mov
hlt
mov
ds
mov
jecxz
jnp
out
cmp
pop
faddl
cmpb
cmp
pop
mov
loope
lods
push
and
mov
fisttpll
bound
rolb
aas
andl
xor
mov
sti
lods
ljmp
fcompl
fsts
gs
xchg
mov
cld
mov
fistpll
sbb
dec
mov
ret
mov
rcrl
inc
int3
outsl
test
jle
das
xchg
push
rolb
cli
sbb
xor
inc
cmp
xchg
mov
idivl
call
in
mov
out
jnp
mov
xor
or
test
pop
sbb
mov
push
ja
push
enter
aam
gs
xor
ljmp
test
push
shlb
mov
mov
ret
mov
mul
das
filds
aam
dec
sahf
out
stos
adc
push
dec
inc
jne
mov
pop
mov
push
rolb
movsb
pop
dec
cwtl
or
xchg
cmp
lahf
cwtl
mov
mov
cmp
gs
pop
lods
scas
jnp
pop
add
and
subb
imul
les
mov
push
movsl
jae
shl
clc
add
or
sbb
jge
xor
mov
mov
sbb
and
lock
mov
mov
es
je
shlb
icebp
out
jg
and
aaa
xor
jl
xchg
cmp
in
inc
sub
jb
or
cmpb
insb
repz
or
inc
clc
icebp
jp
push
push
test
shrb
push
clc
mov
hlt
imul
lock
add
pushf
push
dec
mov
xchg
jp
insb
cmc
mov
push
mov
insb
mov
cmp
cmp
ret
lods
mul
clc
mov
outsb
xor
push
pop
out
pop
sub
jp
sbb
mov
or
adc
ss
call
jp
aas
adc
ja
aaa
add
sub
cli
arpl
negl
idiv
pop
insb
xor
movsb
sub
mov
fadds
push
cltd
decb
fidivrl
mov
push
outsb
lahf
push
and
sub
push
push
mov
mov
clc
popf
mov
jo
sub
add
fcomi
addr16
dec
xor
popa
jle
push
call
mov
adc
or
jecxz
jb
daa
fxch
cld
std
fdivrs
test
and
cs
rcrb
adc
sbb
mov
xchg
xchg
loope
or
cmp
lea
push
mov
je
cmc
js
pushf
cmpsl
sbb
fldl
sub
and
imul
push
xchg
sub
or
pop
lock
cli
jne
in
cmp
sub
push
push
lahf
dec
jne
jb
xchg
xchg
pop
out
test
jnp
jne
push
and
jbe
mov
lcall
or
fwait
add
loopne
mov
adc
or
jb
jle
xchg
cwtl
test
sbb
rol
movsb
inc
add
or
mov
in
lods
or
and
mov
ret
test
pop
arpl
dec
leave
pusha
xchg
fdivl
mov
push
dec
sub
mov
jnp
push
fbstp
adc
mov
pop
int
jg
mov
jp
ret
xchg
inc
mov
adc
sbb
repz
hlt
sbbl
rorl
pushf
test
lret
ret
ja
sub
or
pusha
insl
xchg
add
xor
mov
dec
pop
cmp
fwait
popf
js
mov
cmc
pop
xchg
inc
js
pop
fsubs
arpl
and
cmp
movsl
lahf
adc
cld
movsb
into
into
cmc
in
ret
dec
psubsb
popf
shll
adc
xor
jle
and
mov
cmpb
xor
int3
fs
adc
fistpll
in
arpl
scas
call
es
cmpsb
imul
ss
outsb
fstpl
rcrb
inc
int
sub
outsb
jg
inc
data16
popf
aaa
jns
pop
mov
mov
push
inc
fwait
pop
xor
sbb
in
movsb
test
imul
popf
les
xchg
ret
fdivp
inc
mov
push
cwtl
mov
mov
into
cmp
cmc
in
movsb
sarl
push
xchg
push
adc
imul
sub
dec
sub
dec
fldt
jb
xlat
mov
lods
xchg
je
cwtl
sbb
bnd
push
loopne
lret
ds
mov
pop
push
dec
sbb
sub
out
mov
inc
sbb
xor
clc
pop
xor
arpl
push
mov
rorl
xchg
pop
loope
adc
jecxz
or
jbe
lds
sarl
cmp
data16
fidivrs
jne
and
and
stos
and
leave
inc
loopne
out
call
xchg
or
shlb
mov
xchg
popa
jbe
shll
inc
sbb
leave
and
out
mov
punpckhdq
daa
xchg
lock
push
hlt
enter
pusha
mov
xchg
jmp
jp
aad
pop
pop
call
mov
push
pop
ret
xchg
lret
fsts
jbe
jg
imul
mov
push
movsb
lock
test
imul
scas
jmp
inc
sahf
jno
les
das
es
mov
mov
clc
mov
fidivrs
mov
xchg
xor
mov
ficomps
jbe
mov
add
sbb
and
add
pop
cmp
call
outsl
std
jo
xchg
pop
sub
lea
stos
pusha
in
or
bound
xchg
jno
push
push
es
sbb
dec
xchg
iret
adc
jno
ljmp
push
call
jo
call
outsb
lret
pop
dec
inc
pop
mov
leave
movsl
call
inc
sub
sti
mov
jp
call
mov
inc
jmp
sbb
push
fisubrl
repz
fs
andb
hlt
jbe
gs
jae
leave
dec
fs
mov
cmc
mov
mov
xchg
loope
push
cmp
pop
in
fs
inc
test
ja
scas
int3
sbb
add
jmp
dec
add
pusha
pop
mov
push
add
test
mov
test
inc
push
das
sub
or
xchg
gs
loopne
inc
mov
mov
dec
mov
stos
sbb
lret
sub
or
xchg
pop
inc
sub
popf
ret
cmp
push
mov
gs
jl
adc
dec
ficomps
jp
insb
pop
lea
imul
adc
fisubl
push
insl
xchg
push
sbb
adc
enter
dec
aaa
das
es
and
xor
and
jp
inc
xchg
xchg
mov
sbb
dec
pop
fsubrl
cmp
rcl
js
jns
je
sbb
outsl
fs
push
cmp
xor
fbstp
clc
in
clc
sbb
rcll
add
scas
dec
mov
adc
add
test
xchg
aam
jo
jecxz
cltd
pop
cltd
cmpsl
mov
outsl
or
rorb
push
xchg
adcb
and
pop
inc
and
add
lods
xchg
push
mov
shlb
and
adc
inc
jmp
sub
pop
repnz
add
jbe
shll
je
cld
cmp
sbb
mov
mov
fdivl
sub
and
push
cmp
popa
sbb
stos
and
mov
in
test
sub
ret
ficoms
inc
das
stos
arpl
xchg
and
push
push
lods
mov
es
pop
lret
add
push
mov
xchg
push
xchg
dec
dec
fsubs
and
fbld
sub
dec
push
addr16
mov
push
xchg
jecxz
jnp
and
cmp
ljmp
shlb
out
sti
jo
pop
and
mov
add
loope
movzbl
stc
mov
jl
jp
pop
stos
movsb
loopne
dec
sub
test
out
arpl
mov
stos
xlat
sbbb
std
mov
lea
rcrb
sub
clc
lods
or
int
dec
in
pop
and
out
sub
icebp
ret
and
or
or
mov
mov
mov
das
dec
aad
adc
and
cmpb
cmp
adc
dec
ss
dec
inc
push
lahf
mov
leave
fdiv
test
mov
ds
mov
push
test
mov
int
inc
xor
and
mov
jbe
jge
mov
sbbb
pop
call
adc
adc
outsb
jecxz
sahf
ds
cmc
add
pop
insl
loopne
rcl
push
inc
push
dec
mov
xchg
adc
and
and
bound
pop
cs
addl
lock
push
push
jae
shl
and
dec
xor
xchg
sahf
data16
aas
cmp
and
and
jae
outsl
ss
and
out
in
std
jmp
in
movsb
aaa
iret
loope
jp
insb
lods
imul
div
mov
stos
pop
push
sub
cmp
jno
pop
xor
cld
pushf
lret
jnp
add
cmp
addl
mov
cmpsb
popf
xchg
aas
push
and
mov
hlt
imul
fistpl
fwait
cld
movl
pop
push
das
shlb
popl
add
mov
out
inc
sbb
scas
push
mov
sbb
js
out
mov
sbb
jne
pop
push
insb
shrl
nop
out
dec
loop
adc
jg
push
mov
lods
sti
inc
jecxz
sbb
mov
pop
ss
cli
dec
sub
adc
js
or
sbb
popa
add
pop
adc
mov
xchg
sub
cwtl
jle
jnp
mov
mov
or
add
insb
incl
rorl
sti
push
mov
xchg
mov
cmp
je
das
adc
add
jo
mov
cmp
leave
or
insb
push
test
fwait
xor
mov
je
mov
sub
lea
mov
testb
cmp
pop
arpl
lods
inc
push
fistpll
pop
outsl
cmp
test
pusha
pop
mov
push
cmp
adc
scas
xor
or
jns
js
dec
outsl
ljmp
mov
leave
push
outsl
andb
lahf
mov
int3
cltd
in
xchg
mov
fildll
inc
int
sub
inc
in
sarb
xchg
push
push
pop
xchg
xor
lds
mov
mov
jge
xchg
sbbl
xchg
jb
or
pop
mov
rorl
mov
cltd
add
lahf
mov
pop
cmp
into
xchg
push
and
mov
lea
out
inc
jno
sbb
das
hlt
xchg
out
add
push
push
mov
mov
dec
sub
aam
test
cmpsb
dec
hlt
lcall
out
pop
sub
mov
insl
push
xor
mov
inc
push
ret
or
jbe
cli
scas
cmp
cmp
and
faddp
fmull
mov
cltd
cmc
cs
push
xor
xor
notb
jb
ret
daa
ljmp
je
and
push
bound
lea
inc
and
and
mov
shll
add
aaa
jns
shll
sbb
pushf
mov
push
jno
incl
mov
mov
stos
dec
fcompl
xchg
gs
fnstcw
cmpsl
pop
push
mov
clc
pop
loop
jmp
clc
pusha
jp
pop
or
popf
popl
js
jmp
sub
mov
add
xor
cmp
iret
sbb
jo
dec
inc
hlt
sub
inc
adc
out
pusha
fisttps
cli
mov
orb
dec
inc
arpl
sti
in
out
stos
adc
cld
mov
cwtl
frstor
cmpsb
leave
or
test
sbb
add
and
adc
or
fnstsw
add
sbb
aaa
imul
shrl
adc
in
cmp
loopne
mov
mov
leave
cmc
imul
imulb
stc
and
mov
mov
shll
loop,pt
pop
jb
jb
ss
pushf
test
inc
lahf
xor
pop
pop
out
pusha
mov
dec
nop
cmp
out
xor
int3
sub
movsl
rcrb
xchg
clc
sub
xchg
jns
xchg
and
aaa
fwait
pop
inc
add
les
inc
sbb
je
lods
jns
jns
jg
xchg
add
mov
das
insb
fdivrs
xchg
in
imul
mov
lods
loopne
dec
cmp
addr16
jno
cmp
sub
mov
pop
or
stc
mov
push
cmp
std
in
int
scas
jbe
aam
and
inc
out
sahf
js
push
adc
sbb
inc
fildl
popf
mov
push
mov
idivb
xor
adc
insl
lds
in
fwait
orl
adc
jnp
xchg
call
pop
pop
pop
push
lahf
popf
fdivl
lcall
inc
adc
imul
dec
add
dec
add
xchg
adc
push
rcl
mov
mov
ret
pop
aaa
adc
or
loop
pop
sbb
sub
push
xchg
sbb
push
cs
push
mov
pop
cli
in
cmpb
xor
dec
clc
fimuls
mov
das
mov
push
shll
xchg
or
dec
push
adc
inc
lret
jno
jo,pn
mov
xchg
sub
adc
inc
in
cmpl
mov
js
lret
lret
add
repz
mov
push
push
or
movb
sub
adc
jns
enter
cmp
xchg
push
imul
les
bound
lret
dec
outsb
ss
xchg
int3
daa
std
sub
ss
push
jg
push
pop
dec
aam
pop
push
pop
std
sarl
es
dec
lret
xchg
xor
es
pop
inc
nop
xor
out
incb
dec
xor
mulb
pop
fdivs
movsl
mov
fcoms
mov
mov
or
ffreep
ret
andb
test
stos
stos
insl
popf
hlt
out
test
add
fucomip
mov
repz
mov
enter
sarl
fprem1
pop
insl
pop
mov
jo
sub
mov
mov
pushf
enter
add
fists
inc
idivl
sub
jo
cltd
or
mov
jns
pop
cmp
and
movsl
test
sub
nop
push
push
subb
jp
mov
sbb
sbb
cmp
inc
cmpsl
les
clc
shl
loope
bound
orl
dec
lret
dec
pop
mov
aas
and
pop
pop
movl
aaa
popf
clc
jno
pusha
call
mov
and
cwtl
loopne
in
icebp
loope
std
push
push
aas
push
xchg
sub
add
call
clc
pusha
cli
cmp
scas
push
rorl
or
mov
movb
dec
jb
or
gs
bound
popf
shlb
ds
sbb
outsb
out
imul
movsl
into
pop
out
testb
ficompl
orl
fmul
push
inc
inc
xor
mov
stc
jb
sub
push
jno
xlat
clc
pushf
inc
aad
out
mov
and
mov
jg
dec
aad
scas
sbb
test
xlat
movsb
sbb
aaa
sub
sub
lret
jp
dec
jmp
sub
jne
repnz
mov
adc
leave
jmp
in
pop
mov
dec
outsl
jecxz
and
pop
loopne
and
lock
negb
aas
lret
into
sub
sbb
jl
sarb
pop
or
subl
xchg
sub
int
stos
addl
nop
cmp
fists
rolb
ficomps
sub
scas
fwait
adc
lea
sar
adc
das
mov
xchg
xchg
scas
ret
sbb
cmp
push
inc
dec
idivb
insb
sbb
inc
sbb
lcall
push
dec
mov
mov
mov
pop
fsubl
add
mov
sbb
pop
push
xchg
das
cli
or
adc
and
int
out
cmp
add
clc
fstps
in
movsl
sub
sbb
xchg
jmp
push
add
lock
jno
pop
pop
pop
xchg
fstl
leave
xchg
mov
je
hlt
arpl
jl
inc
push
in
xor
lea
pop
lret
inc
mov
xchg
xchg
mov
and
add
into
sarl
lret
and
lcall
lret
scas
pop
jle
cwtl
or
or
pop
xlat
mov
mov
xor
dec
xor
pop
leave
das
mov
dec
sub
in
cmp
inc
xchg
ss
dec
xor
and
inc
clc
pop
js
fcmovne
xor
dec
repnz
xchg
subl
dec
adc
sub
clc
push
mov
mov
movsb
add
stos
sub
cmp
inc
pushf
and
pusha
adc
push
jle
lea
nop
inc
xchg
dec
xor
ss
scas
cmp
sbb
xchg
je
or
dec
adc
dec
adc
jl
pop
push
movsb
into
subl
add
shl
les
pop
xor
push
pop
mov
stos
stos
inc
mov
cltd
mov
xchg
movb
je
xchg
push
or
mov
mov
imul
cmp
test
jno
sub
jle
fmuls
jmp
les
dec
movsb
pop
icebp
inc
loope
jp,pn
xchg
dec
movsl
fcoms
pop
repz
or
ret
or
mov
fcmovu
or
iret
mov
cld
pusha
jb
addr16
xchg
pop
xchg
mov
repnz
pop
cmp
push
cwtl
mov
mov
or
add
xchg
mov
adc
or
jg
jb
es
lcall
lea
mov
rclb
sti
int
jmp
test
shll
mov
outsl
jp
cmpsb
outsb
xor
fdivrs
inc
pop
xchg
icebp
dec
rclb
cli
pop
add
fnstsw
add
mov
xchg
adc
xor
rcll
test
outsl
xrelease
push
xchg
lret
stos
push
rcll
pop
fisubs
test
sbb
dec
mov
xor
jno
lods
jns
out
push
lret
xchg
inc
pop
lcall
pop
fistpl
xlat
fwait
imul
and
scas
xor
xchg
aad
daa
mov
xchg
mov
push
dec
enter
or
push
fdivrl
test
mov
mov
jmp
fcomip
lret
pop
icebp
mov
outsl
add
inc
std
in
movsb
push
sarb
push
or
ds
gs
xchg
sub
push
inc
mov
insb
mov
push
push
ds
jp
or
pop
sbb
inc
imul
push
mov
sarb
jle
pop
cmc
jo
out
mov
push
divl
cmp
jbe
pop
insb
lahf
xorl
fdivrp
es
test
les
negl
loopne
mov
jmp
adc
cmp
push
push
push
aam
push
jecxz
aam
xchg
add
sahf
outsb
adc
pop
sub
lret
jl
jl
mov
add
cmp
pop
adc
aad
or
pop
sahf
adc
xchg
mov
mov
cmp
mov
mov
mov
pop
leave
cmpsl
sbb
loop
sahf
sbb
push
ss
mov
or
pop
pcmpeqb
dec
lahf
jno
in
int3
cmpsl
add
loop
fnsave
dec
push
repnz
cld
lret
xchg
sub
stos
sub
in
adc
and
inc
pop
push
ja
roll
addr16
icebp
jmp
jp
mov
test
test
les
fcmove
mov
mov
loopne
lods
scas
test
xchg
jo
or
push
sahf
dec
test
insl
pop
arpl
mov
jl
cld
je
je
je
mov
jg
stc
add
jbe
pop
cmp
lods
cwtl
jmp
mov
popa
stos
mov
pop
xor
jecxz
testb
das
adc
xor
cmp
cmpsl
xchg
add
push
sbb
cmp
idivl
mov
rcll
push
cmp
out
pushf
cmovge
cmp
jg
out
pop
mov
pop
inc
xor
test
mov
pop
enter
cmpsb
cmp
rolb
lret
test
sub
dec
std
push
jmp
aas
int3
mov
scas
jno
xor
adc
mov
out
push
aad
push
sbb
aad
lds
imull
inc
xor
adcl
loope
int
sub
push
push
xchg
nop
jno
and
mov
adc
dec
sub
adc
xchg
adc
ret
and
xorl
mov
pop
clc
dec
aas
mov
das
lea
in
test
sahf
lock
subl
sub
or
bound
jmp
sbbb
test
add
xchg
int3
cmp
xchg
cmp
pop
jae
or
int3
scas
mov
or
sub
add
mov
pop
fs
push
nop
pop
jbe
pop
cltd
cwtl
jb
push
and
bound
loopne
loop
addr16
cs
jns
mov
incb
je
cltd
mov
mov
lods
dec
dec
in
movsl
popf
push
sbb
aam
xor
jnp
fcmovbe
arpl
sub
mov
mov
push
and
je
mov
xchg
cltd
mov
popa
jmp
push
aas
jnp
cmc
in
xchg
fnstsw
jecxz
xor
mov
sub
inc
psraw
outsl
sarl
pushf
push
rcll
adc
inc
es
cwtl
adc
xchg
mov
xor
loope
aas
out
repnz
sub
mov
xchg
stos
sbb
lock
fisubrl
clc
clc
imul
cwtl
test
dec
jnp
cli
mov
sub
lea
dec
cltd
test
loope
nop
adc
add
jo
push
and
dec
add
pop
pop
stos
pop
xchg
das
ficoml
adc
test
pushf
movsb
lods
pusha
pop
icebp
notb
push
sahf
jbe
adc
mov
pop
push
dec
pop
xor
iret
and
ja
pop
jns
aam
jle
mov
mov
rolb
int3
cs
cmp
or
movsb
shrl
pop
pop
mov
sub
push
xchg
movsl
xlat
sbb
movsb
lret
hlt
push
fcoml
push
loope
or
inc
subb
push
dec
repz
inc
stc
pushf
mov
cmp
mov
push
add
test
ficoms
pop
or
pop
dec
fcomp
inc
pop
push
push
imul
test
add
pop
sub
repz
sub
push
dec
aad
mov
insl
mov
clc
call
push
and
cmp
fidivl
mov
sub
pop
repnz
sti
jp
jae
pop
jo
std
ret
ds
and
dec
mov
or
js
sub
mov
rol
sub
sbb
or
sbb
xor
mov
xlat
cmp
jno
pop
xchg
lcall
inc
jmp
sub
jle
jle
xor
push
fbld
lods
sahf
jbe
inc
push
fistl
mov
or
jmp
cld
jl
mov
in
pop
sub
adcb
xchg
call
mov
jno
push
mov
pop
sub
mov
add
test
adc
push
push
add
lds
push
icebp
fcomi
pop
subl
mov
xchg
inc
push
mov
jl
jp
out
fmul
enter
comiss
lahf
mov
das
sbbb
sub
ret
jecxz
sbb
repz
pop
out
fs
sahf
pop
aam
inc
int
push
out
lahf
ljmp
scas
pop
ss
add
or
mov
jo
sbb
sbb
shlb
xor
in
loope
sub
xchg
add
sbb
fstpl
and
loopne
flds
mov
lcall
mov
sub
rclb
pusha
add
popa
leave
shl
mov
insl
dec
mov
mov
inc
sbbl
negb
mov
lock
pop
dec
mov
mov
cs
jo
sub
xchg
loope
aas
push
enter
mov
or
sub
rorl
push
fdivrs
xchg
mov
ljmp
jge
fs
jp
into
out
aad
iret
add
jmp
sub
rorl
testl
jle
mov
je
dec
and
mov
pop
dec
jge
add
in
shrl
sbb
sahf
into
ljmp
shlb
sbb
push
mov
sahf
add
inc
inc
push
sbbl
xor
xchg
repz
sub
repz
adc
xor
sub
mov
fsubr
cmpsl
mov
or
pushf
fidivrl
sub
sarl
mov
sub
jg
aaa
lret
jp
dec
dec
lods
fcoml
in
enter
nop
add
cmp
adc
adc
pop
adc
icebp
mov
add
test
inc
je
out
cs
jne
mov
xor
loop
cld
pop
into
cwtl
mov
add
xor
sbb
cmp
push
mov
mov
or
scas
ror
and
das
les
rcr
lret
leave
fwait
inc
sub
call
dec
jg
jge
fwait
jbe
icebp
xchg
lret
xor
aad
jge
cmp
bound
and
addr16
call
push
into
cmp
add
push
movsl
sti
xchg
adc
inc
cmc
insl
push
call
roll
idivl
sbbb
sbb
mov
aam
imul
mov
or
pushf
movsl
fidivs
popa
sbb
dec
lock
andl
test
mov
push
mov
sub
out
xor
fs
cmp
jg
jns
sbb
and
mov
inc
xchg
enter
daa
dec
add
ss
mov
mov
mov
xor
and
pop
or
jle
gs
dec
mov
xchg
push
daa
push
test
shll
or
int3
sbb
lcall
into
nop
cmpsb
test
lods
inc
fdivrp
stos
cmpl
add
pop
and
insb
mov
std
push
ret
decb
in
ret
sub
aad
mov
rcrl
popa
repz
repnz
mov
jno
inc
fisttps
inc
outsl
xor
or
xor
dec
iret
stc
mov
in
sub
into
cmpsl
js
xchg
fsub
daa
les
push
mov
insb
push
xchg
frstor
adc
xchg
xor
int
cwtl
and
jae
popa
xchg
push
insb
jl
fstpl
in
test
popf
popl
cwtl
es
das
test
xlat
or
push
sti
cmp
mov
dec
xchg
mov
ss
sbb
sarb
insl
cwtl
lock
jns
mov
loope
sub
xchg
mov
lea
out
pop
dec
outsl
in
iret
div
ss
les
ret
fnstenv
sbb
cmpsb
mov
js
dec
and
scas
testb
hlt
jmp
ss
jns
sub
into
dec
sub
dec
sti
adc
jl,pt
add
cmp
int3
lahf
movsl
into
leave
sbb
out
ja
into
sub
movb
rol
test
ret
adc
jno
push
lahf
addr16
cli
cltd
test
movsb
test
xchg
in
clc
and
xchg
add
adc
xlat
divl
pop
jg
aas
popf
mov
adc
pop
aad
aaa
fiadds
dec
xchg
pop
lret
pusha
fisubrl
or
pusha
loop
adcl
dec
inc
mulb
sbb
imul
test
gs
mov
jns
lods
mov
ljmp
mov
ret
cmp
push
es
adc
xchg
and
leave
mov
mov
sbb
scas
test
mov
push
andb
add
push
xor
in
cltd
imul
add
push
test
mov
stos
push
stos
stos
xor
dec
mov
cs
mov
frstor
ret
gs
pop
out
add
repnz
pop
cmp
fistpl
mov
in
fnstsw
jno
push
daa
add
leave
xchg
subb
inc
rcrl
pop
pushf
or
sub
dec
int3
dec
xlat
adc
dec
ret
in
sub
push
movsl
xlat
and
pushf
gs
push
inc
les
push
jb
jnp
sahf
xor
sub
mov
arpl
pop
xlat
das
shrl
out
mov
orb
es
push
jp
mov
jecxz
dec
sbb
xor
push
xlat
aaa
mov
test
xor
hlt
das
std
inc
cmpsl
in
inc
push
pop
and
xor
push
sbb
mov
bound
dec
movsl
xchg
dec
orb
push
xchg
retw
xor
cmpsb
test
jecxz
test
jb
ret
out
mov
adc
sbb
add
mov
dec
test
ss
fisubs
aad
push
orb
ds
sbb
int
pop
fwait
jp
mov
pusha
scas
cmp
cwtl
mov
js
adc
test
sti
or
jne
rcr
pop
inc
cmp
jae
sti
aad
pop
es
mov
sbb
mov
imul
mov
loope
sbb
adc
scas
movsb
lret
in
mov
xchg
or
mov
fucomp
mov
dec
dec
mov
pop
pop
les
sub
push
and
or
pushf
test
les
popa
cmp
out
add
popf
add
xchg
decb
insb
out
xchg
stos
xchg
xchg
cmc
adc
cmpb
sbb
lock
pop
iret
loopne
mov
jp
and
inc
add
bound
fwait
mov
mov
iret
in
adcb
cmpsl
and
adc
xchg
out
add
stc
jb
adc
lock
ja
inc
xor
enter
jne
dec
or
frstor
dec
repz
or
inc
test
adc
inc
inc
mov
mov
std
xchg
dec
nop
les
mov
leave
cld
jbe
sub
inc
rcll
mov
mov
in
insb
inc
pop
std
pop
lock
dec
mov
mov
add
adc
daa
ds
fldl
loope,pn
push
movsl
push
cmpsb
xor
mov
cmp
imul
jae
sbb
out
dec
push
jo
push
ret
imull
nop
dec
rolb
xor
and
bound
in
inc
jbe
fistpll
rcrb
xor
mov
mov
test
cld
mov
xor
sbbl
cmp
bound
jp
mov
movsl
jmp
popf
lret
and
jae
xchg
jle
or
fiaddl
cwtl
out
add
mulb
push
dec
ja
rorb
int
movsb
push
push
nop
mov
mov
int3
xchg
push
outsl
mov
lret
adc
jge
mov
jo
ret
lods
and
hlt
mov
xchg
mov
imul
jmp
icebp
lods
or
nop
es
or
loope
outsl
nop
lea
std
push
push
xchg
add
lcall
ja
lods
ss
ljmp
frstor
adc
popa
push
scas
lret
aas
mov
sti
loop
gs
les
adc
jg
mov
pop
mov
mov
dec
inc
or
sub
xchg
adcl
je
lcall
mov
dec
xor
pop
nop
sub
jl
mov
rcrb
dec
mov
or
dec
and
lods
mov
push
addr16
fs
push
dec
test
adc
ja
xchg
or
lock
and
pop
insb
lock
cmp
cmp
sbb
sub
lahf
cmp
ret
cmp
dec
lea
inc
mov
push
arpl
filds
aas
dec
shrb
rcl
arpl
pop
xor
mov
rcrb
sbb
cmpsl
cmpsl
aad
add
int3
sbb
cmpsl
outsl
or
push
shll
lods
xchg
cmpsl
iret
out
pop
movsl
add
add
popfw
and
xlat
and
jmp
push
adc
out
popf
into
imul
push
and
test
inc
stc
pop
shrb
dec
lods
sub
rcll
enter
cmp
cli
outsb
dec
pop
add
scas
test
jnp
xchg
sbb
xchg
mov
push
lcall
add
jo
mov
lret
pop
clc
mov
push
add
and
testl
test
test
sub
inc
mov
push
aas
pop
ret
jecxz
lret
sbb
lret
mov
lret
inc
shr
out
jb
mov
adc
dec
nop
push
ficomps
pop
jmp
shr
jbe
in
fdivr
cmp
ja
mov
cmp
test
adc
ret
in
jnp
cmp
mov
xchg
es
jg
sbb
mov
cmp
popa
cltd
and
sarl
xchg
sub
pop
dec
imul
sbb
sub
shll
test
insb
lret
repz
mov
ds
mov
es
aaa
adc
push
jne
movsl
jae
popa
dec
sub
aas
jnp
push
mov
sub
pop
cmp
add
js
lds
inc
jb
push
popf
gs
iret
pop
xchg
lea
and
das
aam
jmp
scas
add
loop
insb
out
adc
adc
pop
push
lret
sbb
adc
adc
push
inc
ret
pushf
mov
mov
ret
sbb
ja
ret
mov
movsb
inc
mov
push
aaa
bnd
inc
inc
xlat
shlb
push
add
mov
mov
mov
xchg
movsb
mov
sub
popf
insb
adc
ljmp
nop
jnp
int3
push
sub
cs
push
jmp
inc
sbb
insb
icebp
cmc
cmc
stos
jbe
push
adc
xchg
jno
sub
xchg
aad
dec
loopne
jle
mov
inc
hlt
pop
out
xchg
dec
repz
out
outsl
aam
mov
sub
mov
rcrb
cli
dec
or
test
pop
icebp
jmp
and
mov
cmp
cmp
test
jae
jae
xchg
mov
cmpsb
push
pop
hlt
fimull
sbb
dec
ret
cmp
inc
and
push
xchg
jno
loope
lret
aas
mov
pop
inc
mov
dec
pop
and
add
xchg
movsl
add
fcomp
push
sahf
push
int
loope
jmp
in
lret
push
icebp
mov
mov
inc
push
push
adc
mov
adc
aad
jl
mov
xchg
lods
sub
in
add
and
dec
dec
dec
repz
push
sub
mov
push
mov
js
int
dec
dec
push
cmpsl
push
inc
and
vmovntpd
imul
and
pop
push
jno
jbe
orb
stc
mov
aaa
dec
dec
adc
sbb
sbb
jns
dec
lcall
cmpb
mov
pop
dec
out
jbe
xchg
das
mov
sub
lcall
mov
or
dec
nop
es
pop
cmpsl
push
inc
pop
icebp
notb
lcall
jo
push
arpl
jbe
xchg
scas
ljmp
sbbb
test
push
mov
rorb
xchg
js
mov
imul
xor
push
and
outsl
push
xor
dec
cmc
mov
and
adc
adc
ljmp
mov
jecxz
movsb
adc
sub
mov
fisubrl
or
rolb
cltd
mov
test
jp
out
clc
movsl
sub
mov
scas
or
push
push
cmp
sti
lcall
in
mov
sub
sbb
cmp
cmp
adc
dec
inc
xchg
hlt
jne
or
lret
cs
aas
pop
testb
nopl
mov
lcall
repz
fists
sub
sbb
fwait
xor
xor
out
int3
movsb
out
mov
cmp
push
mov
mull
jmp
in
push
sbb
pusha
iret
xchg
rcl
push
das
cld
jae
test
iret
test
pop
daa
mov
test
into
push
mov
mov
mov
pavgw
pop
fstpl
sub
adc
or
ss
jne
cmp
and
xchg
insb
xchg
ljmp
insb
sbb
jne
xchg
sub
jns
movsl
dec
push
pop
xor
dec
sbb
pop
cmpsl
mov
daa
xchg
sbb
mov
loope
scas
mov
pop
fld
out
rolb
scas
lea
movsl
arpl
mull
jge
xchg
decl
repnz
push
inc
lods
jnp
aas
mov
jns
pop
dec
imulb
fmul
lea
mov
stos
and
imul
movsl
decb
jl
adc
aam
or
jns
aas
lret
push
ud0
scas
aas
push
pop
mov
push
cli
jbe
xor
pop
ret
mov
lcall
in
mov
xor
mov
sub
sbb
cmp
dec
adc
xchg
pop
out
sti
sub
mov
push
adc
sub
sbb
adc
dec
int
into
aaa
mov
xchg
jge
mov
fdivs
cmp
std
mov
mov
mov
mov
and
ss
mov
aam
call
subl
xor
jmp
adc
mov
popf
inc
add
std
xchg
int
mov
gs
stc
mov
cmp
mov
and
lret
dec
adc
or
addr16
mov
gs
hlt
or
mov
jl
jae
mov
jle
sbb
mull
js
adc
cmp
sbb
gs
test
pop
and
ficomps
test
pop
hlt
jo
pop
iret
sub
adc
fdivp
or
mov
push
subl
jbe
add
aaa
push
rclb
repnz
xchg
dec
or
pop
shlb
and
add
pop
mov
add
fdivl
mov
push
repnz
mov
repz
mov
mov
jle
movsb
pop
jg
add
dec
pop
cmp
lock
rcrl
sahf
and
sbb
adc
scas
inc
xchg
shrb
aam
push
repnz
mov
lea
pop
aas
pop
pop
mov
repnz
fstps
lret
sbb
inc
mov
and
lcall
dec
inc
xchg
mov
mov
mov
ja
xor
lods
lods
sti
jecxz
jmp
call
pop
push
xchg
imul
jmp
lea
cmp
pop
call
pusha
ds
mov
rclb
push
test
or
inc
sbb
mull
fcmovu
in
add
shlb
xchg
lret
bound
cli
cmp
in
into
push
data16
imul
ja
jns
sub
fldl
or
scas
jmp
in
add
jae
loop
shlb
ds
pushf
jl
sbb
push
js
push
adcb
sub
add
scas
xchg
ss
pop
ret
sahf
in
pushf
jmp
mov
mov
pusha
pop
mov
jne
js
pop
and
aam
and
enter
insb
sysret
jbe
sub
jno
fdivl
loop
xchg
pop
and
cmpb
sbb
or
mov
out
popa
cmp
inc
push
dec
lods
arpl
and
jb
pop
push
cltd
out
sub
or
push
loope
scas
out
jge
dec
loop
test
pop
cmpsl
lcall
mov
ds
arpl
cmc
outsl
sarl
adc
cmpl
movsb
dec
add
sub
xchg
push
lock
sub
mov
mov
inc
repz
pop
hlt
adcb
jl
insl
ret
adc
loope
jg
or
cltd
or
mov
dec
fimull
adc
inc
es
and
and
xor
test
mov
je
int
test
sbb
xchg
test
xchg
rol
xchg
push
sub
and
sub
xchg
gs
les
pop
addr16
cwtl
and
das
movsb
mov
mov
or
cltd
or
mov
jge,pt
mov
sub
and
mov
lret
xlat
fsubrp
sub
xchg
sbb
pop
into
fwait
je
jmp
les
aaa
jecxz,pn
out
cmpsl
les
inc
inc
sahf
lods
lods
and
push
aaa
or
add
xchg
out
int
sub
mov
fdivs
push
mov
pushf
stos
orb
xrelease
testb
out
in
jg
jns
mov
pop
push
sbb
loope
jae
adc
movsl
mov
mov
dec
xor
sbb
pop
xor
adc
aaa
icebp
mov
lock
jnp
loope
pop
pop
stc
inc
dec
ljmp
or
xor
lods
popa
es
jnp
sub
mov
xchg
adc
mov
xor
js
inc
div
fcoms
cmp
arpl
sub
ficoms
shl
stc
add
andb
inc
data16
pop
add
scas
cwtl
aam
addb
add
out
lock
cmp
cmp
outsl
out
mov
pop
jp
adc
cltd
test
dec
loope
inc
xlat
testl
fwait
mov
sbb
add
dec
fdivs
cltd
or
idivl
jo
iret
je
mov
es
int
sbbl
sti
xchg
cmp
ret
fisubrs
lret
lods
jge
mov
add
pop
repnz
and
lods
jecxz
cwtl
int3
gs
fistpl
xchg
mov
insb
aad
insb
xchg
sti
sbbl
out
test
test
mov
jae
push
out
push
mov
stc
mov
nop
push
fldt
dec
in
jb
cwtl
or
gs
dec
sub
dec
test
idivl
ret
xlat
push
push
mov
and
outsb
cmc
and
fnstcw
pop
loope
dec
mov
mov
push
fsubrs
cmp
ja
mov
icebp
or
or
mov
test
dec
jne
pop
imul
mov
mov
jg
pop
fwait
adc
dec
aas
push
push
lock
insb
aad
mov
das
dec
sbbb
sub
mov
lds
pusha
mov
sbb
cs
dec
push
mov
cmc
push
xchg
adc
push
leave
fs
loope
jl
inc
cmp
jmp
xor
mov
pop
pop
mov
xchg
mov
rolb
adc
loopne
rolb
arpl
pop
pop
cs
adc
push
cmp
push
push
sbb
push
fistps
lret
inc
xor
pop
setl
shl
mov
inc
mov
pop
cmp
repnz
out
jge
hlt
lods
inc
outsb
arpl
bound
imul
aaa
mov
cmc
out
cltd
loope
shll
lret
add
es
popf
fiadds
cmp
cwtl
sbb
imul
enter
aad
and
sbb
hlt
mov
dec
loopne
cmp
inc
lcall
dec
fiadds
and
sbb
mov
pop
es
test
adc
leave
les
ja
add
and
mov
mov
fnstsw
stc
xchg
ret
mov
dec
add
and
push
into
push
ss
inc
cmp
call
cmp
test
lods
inc
jo
mov
pop
pop
adc
rep
xchg
repz
xchg
inc
sbb
push
mov
icebp
movsb
inc
and
in
repnz
xor
jne
push
movsl
aas
movsl
lock
inc
xchg
imul
dec
mov
xchg
jg
mov
push
xor
push
fs
mov
inc
mov
cli
enter
je
les
add
test
cmp
stos
xor
pushf
ficomps
adc
mov
push
mov
loop
lret
mov
cmp
cmpsl
xchg
test
jae
icebp
xor
push
sbb
lcall
outsl
jb
push
rcll
cmp
jmp
loopne
mov
cli
fistl
add
test
out
out
push
enter
adc
pop
or
addr16
or
lret
mulb
lahf
xor
pop
cld
mov
es
test
adc
cmp
adc
push
sbb
jbe
lods
test
cs
cmp
or
les
ds
mov
int
insl
adc
push
sub
xchg
jae
inc
xor
dec
in
xchg
popa
int3
or
pushf
mov
gs
mov
or
mov
pop
pop
ljmp
imul
pop
fdivl
cmp
add
ss
cmc
xor
mov
das
pop
shrl
lea
xor
xor
jbe
cmp
les
jmp
cmp
icebp
lds
je
insl
jns
cmpsb
adc
sub
gs
inc
movsb
xchg
aam
cmp
mov
mov
cld
in
mov
fwait
jno
jbe
aam
ds
xlat
test
repz
enter
push
mov
push
in
sbb
inc
out
clc
xchg
repz
push
pop
jecxz
iret
lds
add
and
rol
lock
rcrl
ret
ds
aas
push
pop
movsl
pushw
sahf
adc
cmp
ror
movsb
mov
push
inc
push
lods
mov
xchg
cmp
jb
sbbl
insb
sahf
xor
pop
mov
or
shrb
mov
scas
cs
sar
push
mov
push
sub
push
jecxz
add
into
inc
mov
movl
mov
lods
test
adc
inc
jmp
and
sbb
fcomps
loopne
jbe
jg
in
mov
jmp
inc
jge
imul
mov
add
int
in
jmp
das
cmp
stos
fsubs
rorl
jae
mov
cmpsb
pushf
xchg
mov
dec
push
cmp
adc
inc
jns
xor
adc
jecxz
fisubrs
std
ds
jg
mov
mov
decl
mov
lea
cmpsb
daa
stos
iret
mov
cmpsl
insb
repnz
mov
cmpsb
xchg
rcrl
mov
push
arpl
arpl
popf
push
bound
push
out
xor
add
mov
clc
leave
jge
cld
sahf
insl
int
xchg
movsb
shrl
out
cmp
in
pop
jp
fwait
out
sbb
stos
mov
arpl
push
xchg
xchg
jo
test
jns
or
addb
inc
stc
pop
gs
dec
add
mov
sub
rcrb
or
scas
inc
fisttpl
adc
test
rcrl
pop
cmpsl
sti
mov
stc
cwtl
xchg
loopne
mov
in
movsb
sub
sub
mov
xchg
xchg
push
js
dec
cltd
iret
sahf
mov
xor
movsb
stc
out
push
scas
ja
or
mov
or
inc
inc
fsubr
mov
mov
loope
aam
sub
dec
ds
push
mov
xor
into
inc
addr16
insl
cmc
std
stos
fldt
les
xchg
je
xlat
xor
aad
out
or
mov
sub
insl
and
or
jle
mov
dec
lret
orb
adc
pop
push
cli
push
mov
jge
clc
xchg
xor
rcrb
pextrw
movsl
mov
jns
lock
pop
std
pop
cs
out
cmp
xchg
hlt
sub
sbb
mov
push
lods
jns
sub
mov
shrl
jp
mov
mov
insl
jecxz
call
fldt
mov
jae
pop
enter
loope
ret
pop
or
pop
lahf
sub
sub
je
or
in
data16
mov
sbb
ror
mov
pushf
pop
cmp
mov
jmp
cmpb
inc
xchg
cld
enter
xchg
jb
xor
lds
inc
sub
shrl
or
mov
mov
fstl
pop
dec
jae
test
lret
pop
ljmp
push
jbe
jmp
inc
push
push
xchg
jo
mov
pusha
dec
in
adc
aad
in
fistps
mov
fiadds
imul
mov
xchg
mov
or
fwait
mov
mov
and
fdivp
and
pop
pop
mov
xchg
std
cmp
btc
sbb
push
pop
push
dec
add
xor
dec
mov
nop
inc
scas
push
jle
push
cltd
mov
pop
jae
movsl
enter
jge
or
dec
stos
or
into
ds
dec
scas
mov
adc
cmp
scas
jbe
out
movsl
cmpsl
pop
pusha
sbb
dec
in
xor
xlat
cmp
dec
inc
and
pop
inc
adc
jo
mov
fisubrs
xchg
add
sub
out
add
push
mov
jecxz
popf
loope
inc
dec
jmp
adc
inc
pop
daa
ret
sti
xorb
nop
fstpt
out
jge
sub
jl
and
cli
lods
xorb
hlt
loop
popa
gs
pop
adc
pop
push
popa
aas
or
lock
les
repnz
push
lcall
cmp
fstps
xor
insb
push
cmc
push
roll
mov
fsts
xor
jno
test
mov
jp
pop
xorb
cli
cld
insl
and
out
imul
add
pop
and
call
int3
mov
or
enter
sarl
xlat
scas
mov
cs
inc
xor
dec
lock
push
inc
jns
adc
and
test
adc
je
xor
out
aaa
clc
cmp
lahf
pop
andl
outsw
push
loope
addl
je
pop
cld
fcompl
sbb
cmp
push
lods
popa
sahf
pop
push
jecxz
call
inc
xor
leave
xchg
aam
sbb
mulb
cmc
mov
mov
add
sahf
scas
dec
jnp
dec
xor
push
outsb
cmpsl
sbb
adc
sub
pop
mov
fwait
pop
int3
xor
nop
popf
push
cmp
xor
sbb
inc
addr16
sub
les
xchg
jo
cmp
xor
fs
out
rcl
push
ficoml
into
loop
inc
lods
rolb
out
popf
push
js
pop
sub
mov
pop
pop
dec
mov
gs
lds
cmp
sub
mov
xchg
popf
add
xchg
xor
mov
add
insb
es
loopne
and
xchg
xchg
xchg
insl
dec
and
adc
or
je
or
mov
dec
jae
loopne
mov
sub
mov
frstor
lret
xchg
pop
loope
int
inc
cmc
lock
out
sbb
push
or
bound
jne
xor
jle
xor
test
or
test
xchg
sub
or
adc
aam
adc
fdivrl
xchg
outsb
into
daa
fmul
xor
icebp
ret
jno
jmp
cmp
insb
in
push
jnp
sub
mov
xchg
push
cli
adc
outsb
fcomip
adc
dec
or
movsl
stc
das
or
mov
lret
and
int3
aaa
xor
lea
mov
pop
daa
fstpl
pop
lea
jp
xchg
call
sbb
popa
das
xchg
adc
adc
repz
pop
sbb
mov
mov
lahf
jmp
ret
push
fcmovbe
adc
les
sbb
es
mov
jl
jge
aam
or
xor
sub
lcall
cmc
hlt
sub
lods
or
inc
outsb
fmul
andl
add
cwtl
fwait
add
cmp
enter
mov
cmp
sbb
jnp
into
fucom
outsl
aam
xchg
sbb
sbb
push
cmc
cmp
insl
popa
push
jg
in
push
adc
xor
inc
movsb
sbb
lret
daa
inc
jae,pn
xor
lds
test
or
pop
sahf
in
sbb
or
movl
and
insl
jns
xchg
in
mov
nop
mov
cmp
mov
and
scas
das
dec
pop
enter
pop
mov
inc
repnz
loopne
xor
pop
mov
mov
mov
mov
dec
mov
push
dec
leave
pop
inc
popf
sbbb
push
xchg
shlb
mov
and
inc
movsl
mov
popa
rorb
aaa
adc
rcll
sbb
scas
jae
in
cmp
mov
nop
sbb
loopw
adc
sub
cmp
pop
aam
mov
std
dec
outsl
or
adc
xchg
push
jl
push
ror
xchg
leave
pop
jp
add
fs
out
mov
cmpsb
ret
sub
sbb
cmp
jnp
sbb
idivb
les
sbb
dec
adc
sub
adc
lods
mov
push
sbb
and
inc
mov
pop
xchg
xor
repz
js
shl
and
ret
fstp
dec
les
mov
stos
push
std
rcrl
mov
ss
aaa
cmp
popf
les
mov
ret
pusha
xchg
lock
mov
sub
test
sbb
push
or
xchg
inc
mov
or
cmc
mov
cmpsl
daa
je
push
gs
mov
mov
cli
sbb
das
imul
cmp
pop
push
test
ljmp
aaa
inc
jno
xchg
cmp
bound
fiadds
lea
repz
jge
mov
out
xchg
sti
push
in
xor
sub
and
push
fisubl
bound
sub
lret
lret
push
lds
or
xchg
test
mov
dec
jo
xchg
mov
out
cmpsb
inc
outsl
push
mov
ret
cld
popf
mov
jmp
mov
outsb
outsl
mov
out
xchg
inc
dec
mov
mov
jge
andl
jg
xchg
mov
cs
xlat
mov
mov
mov
pop
adc
sub
pop
loop
adc
mov
mov
or
mov
fidivrs
addr16
or
es
add
xchg
sarl
xor
clc
mov
outsl
dec
aaa
vaddpd
mov
pop
adc
movl
icebp
sbb
cmc
cmc
gs
fldt
inc
lds
sbb
lods
or
repz
jecxz,pt
out
out
inc
push
cmpsb
aaa
mov
imulb
inc
jecxz
add
mov
cltd
xor
sar
mov
aad
lock
lods
mov
cmp
pop
push
rolb
inc
cmp
int3
shlb
repnz
les
shl
xadd
adc
sbb
dec
lods
add
mov
xchg
arpl
push
xchg
out
or
sahf
jns
mov
xchg
add
fistps
sbb
dec
pop
add
arpl
adcb
cmpl
nop
stos
push
incb
adc
mov
or
sti
enter
subl
shlb
in
pop
cmp
fdivl
pop
loope
jno
out
stc
pop
addr16
push
add
xor
xchg
jmp
push
mov
jae
test
dec
das
cmc
jp
in
adc
int3
or
fcomps
push
repz
hlt
out
pop
test
inc
inc
xor
fdivr
hlt
sti
nop
cmp
outsl
push
jbe
cmpsl
mov
leave
insb
sub
adc
shlb
fidivs
jbe
enter
fisubl
mov
pop
out
clc
pushf
push
ja
jmp
loope
push
inc
cs
scas
xor
in
loop
lret
leave
sub
mov
pop
dec
stos
dec
inc
gs
call
gs
jg
shrb
cli
sub
icebp
or
push
arpl
sub
lcall
orl
xor
mov
jae
xor
insl
out
add
cmpsl
fimuls
push
xchg
or
add
mov
mov
andb
jg
arpl
mov
std
das
insb
xchg
shl
fstpl
scas
lods
lea
in
or
insl
add
shrl
fsubl
or
lcall
repz
stc
xchg
int3
pusha
stos
shr
push
pop
jbe
lret
scas
pop
mov
dec
lea
pop
lcall
dec
rcr
out
mov
testb
xor
lea
push
icebp
out
xchg
mov
push
add
mov
inc
sarl
enter
popa
dec
shrb
jge
mov
sahf
mov
loopne
add
lds
cmp
push
icebp
sub
in
cmpsb
xor
addb
pop
mov
dec
sub
cmpsb
or
mov
outsb
lret
ret
adc
or
ss
je
mov
pop
inc
sub
cs
movsb
mov
sbb
ret
cli
add
or
pop
repnz
call
and
lods
loopne
imul
pop
imull
mov
adc
ret
mov
push
bound
push
sti
mov
ss
xchg
inc
mov
sbb
xchg
jp
jb
mov
push
mov
jo
dec
pusha
dec
shl
pop
xlat
cmp
lret
enter
add
add
ret
out
mov
repz
xchg
insl
nop
ljmp
sbb
xor
or
cltd
inc
push
call
mov
movsl
inc
dec
lret
mov
insb
imul
scas
cmpsb
enter
imul
insl
fcoml
jp
dec
daa
es
popf
cmpb
lahf
cmp
fimull
sbb
jb
sbb
pop
adc
testb
jl
push
add
and
shrb
xchg
mov
sbb
pusha
and
xchg
jno
push
jnp
mov
leave
dec
dec
je
mov
arpl
arpl
sub
out
out
inc
stc
test
call
dec
test
aad
out
mov
ficoml
xor
js
scas
inc
mov
and
add
and
outsl
add
or
and
lcall
cs
imul
into
xor
hlt
inc
jbe
bound
dec
insl
xchg
in
mov
add
cmpsl
cli
stos
repnz
jle
out
jno
bsr
lret
std
or
mov
cld
stos
lods
pop
and
push
fstpt
imul
sbb
mov
int
ret
mov
out
sbb
fstpt
jno
xor
pop
mov
push
xchg
adc
arpl
jbe
and
add
pop
int
xchg
xchg
data16
fisttpl
mov
addr16
xchg
jns
xchg
sbb
sbb
jp
cmp
sbb
mov
rolb
lret
mov
pushf
aaa
stos
lods
lret
ret
mov
jns
arpl
pop
gs
dec
fidivs
mov
shrb
sahf
cmpsl
lds
ret
insl
in
cmp
loop
popf
js
mov
mov
push
jb
hlt
or
int3
mov
push
lret
jg
sbb
iret
pop
sub
xchg
inc
fcomps
test
mov
out
repz
into
jl
mov
iret
pop
jae
jns
cmp
nop
in
push
xor
pushf
jg
out
gs
xchg
jmp
jo
lcall
ljmp
test
xor
arpl
and
lret
mov
lret
xor
inc
fadd
sbb
icebp
clc
outsb
cwtl
lods
out
les
xchg
inc
insb
hlt
andl
rclb
mov
xchg
aaa
xchg
pop
outsl
xchg
daa
xchg
lret
mov
das
push
sbb
loopne
dec
leave
inc
mov
sbb
out
insl
adc
xor
imul
cmp
mov
mov
cmpb
popa
push
sbb
pop
gs
pop
in
lock
jl
xor
sbb
fs
data16
and
in
jne
mov
cli
add
cmp
fidivl
dec
cltd
mov
cmp
bnd
cmp
insl
jb
popa
mov
pop
imul
pop
sub
sbb
mov
fnstenv
push
xchg
cmc
jmp
movsb
lret
shrl
mov
mov
stos
insl
mov
aam
je
add
mov
add
jmp
dec
lods
lahf
cmp
inc
arpl
mov
flds
pop
psubw
xorb
std
dec
adc
sub
fstpl
or
scas
dec
mov
sbb
push
push
mov
or
pushf
stos
cmpsl
xlat
fs
sti
mov
cmpsl
cwtl
jg
je
adc
push
ja
cs
pushf
jecxz,pn
pop
cmp
xor
xchg
enter
lods
jl
sti
jmp
mov
repnz
cwtl
ja
pop
mov
or
sub
hlt
or
jp
adc
dec
inc
sub
andb
inc
cwtl
test
popa
adc
cmpsl
icebp
or
imul
loop
pop
adc
sti
es
push
adc
xchg
sub
rcr
test
stc
cs
frstor
and
or
js
add
push
fadds
mov
mov
push
ret
js
cwtl
imul
sbb
pop
sti
test
aad
xor
sbb
pop
jl
out
shrb
mov
insb
inc
outsl
mov
daa
aad
push
rorl
adc
or
add
and
and
inc
adc
jbe
ds
adc
mov
enter
mov
std
cltd
repnz
test
les
cli
loope
push
out
mov
pop
jnp
leave
jbe
pushf
jmp
fcmovb
fistl
mov
adcb
jl
repz
mov
mov
cmpsl
xor
inc
xchg
mov
push
enter
xchg
sub
ret
and
sbb
in
pop
out
fs
sub
adc
xor
add
das
cmp
jmp
xchg
sbb
shrl
mov
push
mov
daa
cltd
jnp
mov
adc
cmp
pop
pusha
icebp
push
add
pop
fists
add
sub
loope
shl
adc
subb
fistl
dec
and
addr16
cs
iret
push
mov
push
adc
mov
adc
loopne
xchg
xor
mov
call
push
cwtl
adc
cmp
daa
cmpsb
sahf
xchg
mov
fdivs
pop
cltd
mov
adc
and
mov
std
cltd
packuswb
jle
negb
xchg
es
fisttps
test
adc
or
je
xchg
inc
sbb
mov
mov
xor
jl
push
stc
aam
mov
movsb
rol
mov
mov
fs
scas
jp
leave
out
push
lods
fistpll
adcl
imul
mov
sub
push
cmpsb
or
ljmp
in
dec
insb
inc
mov
cmc
xchg
test
das
lods
notl
xchg
insb
adcl
loopne
movsb
adc
aam
imul
push
das
jp
xlat
sub
sub
bnd
cmp
push
fidivs
jmp
dec
xchg
or
insb
xchg
jnp
ljmp
and
push
popa
mov
cs
pushf
imul
scas
imul
lahf
mov
test
enter
add
sbb
into
pop
pop
mov
lods
sbb
daa
ja
xchg
mov
inc
cmpsl
cmp
jo
push
ss
mov
or
or
mov
fidivrl
movb
push
repnz
outsb
loop
mov
inc
mov
inc
mov
repz
pop
or
lock
lahf
push
mov
xor
dec
fcoml
inc
mov
repnz
insl
test
aaa
jl
push
mov
pushf
sub
adc
sbb
inc
icebp
mov
nop
cmp
mov
add
sbb
mov
addr16
sbb
push
pop
jne
and
xorl
aas
mov
push
lret
push
call
sbb
nop
adc
cmp
ljmp
or
sbb
or
or
pop
enter
cmpsb
push
aam
mov
outsb
xchg
jo
pop
pop
fstl
lods
inc
outsb
mov
outsl
rcrb
xor
sahf
cs
inc
cld
hlt
lahf
mov
jg
adc
cmp
push
inc
les
push
fnstsw
cmp
cmp
fisubrs
out
xor
cmp
sbbl
inc
dec
subb
pop
test
dec
sbb
push
push
push
push
dec
or
sub
into
jo
outsl
mov
mov
cs
test
loope
mov
mov
sti
jle
stc
and
mov
lock
in
inc
or
scas
push
xlat
rolb
cltd
movsl
cs
add
fwait
mov
pop
fnstcw
jo
test
cmc
or
pop
out
inc
div
sbb
ret
add
loope
mov
loope
jno
add
xor
push
jae
mov
loop
inc
insl
sub
pop
xchg
mov
shlb
push
adc
movsl
mov
sarl
loope
pop
jl
and
in
mov
pop
daa
idiv
imul
popf
xchg
sti
push
adc
imul
mov
xchg
sbb
mov
fcoml
sbb
mov
fstpt
xchg
cmpsb
push
xchg
and
mov
sbb
in
pop
xlat
mov
divb
xor
out
mov
sub
pushl
adcl
divl
int3
fists
test
mov
ljmp
fisttpl
and
cmpb
int3
and
fisubs
sbb
push
lds
fisttps
dec
add
xchg
aad
aam
shl
les
dec
push
jne
jle
mov
jb
mov
in
cs
xor
popf
insl
dec
cmp
movsb
xchg
jecxz
add
lds
lds
mov
into
imul
movsl
cwtl
xchg
imulb
stc
jecxz
xchg
pop
jle
cmp
dec
frstor
sahf
clc
push
int3
jo
cmpsl
jg
jp
int3
icebp
dec
dec
jo
xchg
stos
push
or
daa
pop
sub
out
int3
mov
dec
mov
push
arpl
pop
pop
lods
dec
mov
not
aas
movsl
push
ljmp
loop
pop
mov
dec
adc
jecxz
jne
out
jb
inc
ds
adcb
adc
jb
add
imul
ret
push
hlt
loope
dec
hlt
sar
push
jmp
pop
ljmp
xchg
stos
xchg
sub
mov
jo
nopl
test
lcall
enter
test
jns
push
lea
jne
into
scas
aaa
dec
divl
mov
test
xchg
aaa
mov
adc
mov
mov
add
std
leave
inc
pop
mov
dec
cwtl
sbbl
cmp
aad
jnp
cwtl
stc
loopne
mov
or
mov
aaa
or
sub
jno
pop
cmp
lret
sbb
fisubrs
ss
les
jg
cmpsl
movsl
xor
aas
mov
arpl
out
test
ss
test
adc
adc
test
hlt
sbb
stc
sub
pop
pushl
adc
out
cld
int
sub
ret
mov
inc
sbb
pop
fdivrs
sbb
sub
add
inc
rclb
into
mov
bnd
dec
cmpb
cs
nop
jg
and
jne
cltd
dec
add
insb
jns
out
scas
lret
ret
adc
lds
cmp
test
push
ss
or
pop
addr16
fisttps
gs
addr16
loopne
out
lcall
inc
mov
jl
push
icebp
fisubl
les
ficoms
les
jp
pop
out
and
loop
xchg
mov
pusha
int3
fcoms
pop
rol
jae
jl
ret
push
xchg
cvtpi2ps
mov
lcall
bound
dec
leave
mov
fcmovnbe
mov
movsl
pushf
jne
lods
ja
mov
adc
inc
cmpsb
cltd
out
cmp
dec
mov
into
fdivrl
jl
cs
outsb
iret
out
sub
test
inc
fcmovu
push
fdiv
sub
out
push
jecxz
ret
sbb
loop
js
int3
inc
mov
hlt
flds
inc
mov
sbb
inc
cld
insb
sub
xchg
clc
stos
add
sub
imull
cmpsl
aad
xchg
jo
scas
stos
or
push
xchg
inc
jg
in
push
pop
out
or
and
scas
jnp
mov
xor
jo
sarl
dec
lock
add
xchg
jmp
xchg
insl
pop
push
dec
aam
mov
pushf
sub
sarb
rcl
add
ret
mov
push
test
inc
icebp
sahf
add
ss
cmc
xchg
jns
jns
xchg
lcall
mov
aam
pop
jb
ficomps
push
sub
dec
cmp
jmp
pop
data16
outsb
jg
sbb
aaa
xchg
push
xchg
xchg
or
mov
insl
cmp
or
mov
xchg
sub
iret
sub
xchg
cmpsb
or
ljmp
pop
movsl
orb
shll
data16
ljmp
call
fwait
mov
push
lock
out
stos
jmp
pusha
and
lret
aaa
push
mov
int3
push
addl
cwtl
pop
pop
lret
lcall
popa
std
inc
mov
mov
imul
mov
xchg
lahf
popf
movl
stos
mov
insl
push
mov
lahf
jnp
mov
and
inc
push
dec
xor
in
daa
xchg
cmpsb
enter
lods
jbe
push
aad
mov
sub
pushf
rcrl
dec
sub
and
xor
push
inc
pop
test
jmp
sbbb
adc
push
pushf
sbb
popf
adc
ljmp
jne
pop
mov
mov
xchg
scas
sarb
sub
sar
mov
lcall
pop
add
cmp
aas
popa
mov
popa
push
testl
cli
sbb
push
mov
jne
insl
rorb
push
sbb
mov
sbb
scas
int3
cmc
faddl
cmp
mov
pop
imul
add
add
jp
push
cmp
lret
dec
adc
and
fistps
std
test
sub
sbb
leave
or
lea
adc
xchg
xchg
clc
das
insb
sbb
dec
mov
aas
mov
dec
mov
xchg
cmp
push
lock
sbb
out
xchg
xorb
push
out
imul
fldl2e
sub
clc
add
pop
stos
push
call
and
mov
lret
fwait
adc
push
push
les
les
out
xchg
or
pop
mov
jmp
pop
cmp
mov
fs
pop
mov
adc
dec
mov
popf
pop
js
mov
clc
cmp
adc
xchg
push
xchg
jg
mov
pop
idivb
inc
or
jnp
insl
sub
push
xchg
hlt
mull
inc
shlb
lahf
jecxz
ljmp
pop
in
lea
popf
cltd
std
xchg
in
bound
dec
faddp
outsl
mov
out
mov
xor
xchg
inc
inc
dec
push
imul
cmp
pop
jmp
or
fmull
nop
xor
jae
mov
test
pop
mov
in
dec
pop
fidivs
adc
jecxz
xlat
ja
mov
mov
ds
enter
jmp
mov
popa
dec
jecxz
mov
and
jnp
and
xor
mov
cmp
or
cs
shl
inc
div
pop
repz
push
xlat
and
xchg
daa
pop
jnp
int3
popl
bound
jg
or
shlb
les
out
xchg
pop
scas
dec
mull
cmp
rcrb
mov
aad
pop
cmpsb
mov
jns
icebp
arpl
inc
inc
sub
leave
pop
push
scas
mov
and
dec
inc
jmp
loopne
mov
dec
xchg
pushf
mov
mov
push
xchg
lahf
pop
push
lcall
adc
xchg
stos
scas
or
sbb
movsl
decl
mov
inc
mov
pop
mov
adc
push
ror
testb
js
jmp
or
cmp
lds
mov
js
repz
or
xor
cmp
xor
mov
imul
mov
xchg
sub
divl
cmp
mov
xor
aaa
add
cmp
movb
test
jne
and
add
mov
mov
and
bound
movsl
in
mov
loope
or
std
cld
pop
mov
add
jecxz
in
add
call
ljmp
or
xor
xchg
cmp
mov
mov
fisttpl
pop
arpl
cli
ret
in
pusha
ljmp
fisubrs
testl
imul
adc
lret
or
cmpsl
das
mov
nop
jge
push
xchg
pop
pop
xor
nop
stos
sti
mov
outsb
fcomp
jge
add
inc
jo
jnp
push
rolb
sbb
stos
je
test
imul
and
inc
mov
xlat
cmpl
daa
inc
movsb
mov
jb
in
ds
mov
scas
jmp
scas
pop
hlt
sub
out
xchg
cmc
and
js
shll
std
and
dec
sbb
push
cmp
xor
es
jge
aaa
in
cld
mov
sub
mov
lods
lock
loope
pushf
fs
loopne
pop
imul
lahf
mov
xchg
adc
mov
xchg
xor
aas
outsl
arpl
dec
xor
enter
mov
sub
xchg
fwait
stc
cmp
outsl
repz
ficompl
xor
pop
rorb
test
mov
mov
addl
adc
inc
sub
neg
xchg
xchg
cmp
and
push
dec
daa
sahf
sub
repz
cmc
xor
xor
iret
jae
call
and
dec
and
pop
xor
add
push
ss
sti
cmp
xor
pop
mov
fmul
out
rcrb
jnp
int
jle
pop
fidivl
push
sahf
mov
and
int3
jg
sub
hlt
ds
rclb
inc
ja
jmp
mov
lret
sub
inc
nop
xor
out
leave
lcall
cwtl
mov
fcompl
xchg
sbb
xchg
mov
mov
repz
cltd
jne
daa
xor
xor
inc
call
movzbl
mov
loopne
insb
inc
sub
aad
cmpsb
fwait
out
cmpsb
repz
sbbl
lahf
xor
xor
cmp
arpl
and
mov
cld
cmp
jno
bound
mov
adc
inc
insl
mov
scas
add
jmp
xchg
mov
pop
xorb
and
out
mov
inc
cmp
inc
shll
push
xchg
cmpsl
loop
mov
sub
push
push
mov
or
xor
jns
sub
push
aas
jo
fidivs
scas
jmp
mov
iret
and
add
mov
ret
sub
iret
in
lret
sbb
ret
dec
adc
mov
mov
fildll
pop
fs
lret
insl
sub
and
add
sbb
inc
fidivrl
adc
push
shlb
lock
movsl
jno
and
sbb
lock
xchg
movsl
jmp
fcmove
jge
mov
addr16
in
jb
mov
sar
pop
aad
in
sbbb
mov
cmp
mov
adc
mov
negb
jmp
out
xlat
sbb
jp
stos
movsb
cmc
fwait
and
cmp
inc
in
aad
pop
movsl
jg
in
sbb
jecxz
push
daa
in
daa
xor
pop
cli
test
push
cmp
mov
lods
pushl
xor
pop
mov
sub
xchg
fs
xlat
add
aam
or
dec
jmp
adc
sub
mov
mov
or
push
pusha
jae
in
adc
out
lock
addr16
push
out
jge
mov
lock
xchg
cld
xchg
inc
rorl
loop
mov
push
mov
cmp
shrb
inc
or
xor
inc
sbbl
cli
int3
add
mov
cmp
fidivl
roll
pop
cmp
stc
mov
adc
mov
mov
dec
xchg
cltd
adc
gs
test
jle
push
add
pop
mov
pusha
mov
jmp
mov
pop
push
outsb
cmpsl
aam
in
fwait
aas
jnp
rcll
cmp
rorl
scas
mov
sbb
fs
dec
int3
push
int
jno
enter
ja
xchg
int3
incl
loope
mov
and
pop
xor
iret
scas
sub
out
aam
push
jb
and
or
push
xchg
and
jae
stos
lock
es
cltd
jb
mov
pop
add
add
xchg
rcrb
push
mov
rcl
xor
and
adc
shl
in
sub
inc
mov
cli
pop
loopne
xchg
adc
lods
mov
repnz
sbb
das
pop
push
jnp
bound
std
pop
push
cmp
loop
mov
add
or
xchg
lret
adc
imul
addb
sub
xchg
outsb
aaa
loope
xor
and
rolb
mov
in
mov
ret
lods
xchg
cmp
imul
mov
icebp
adc
pop
int
rcll
loope
popf
mov
out
adc
and
jno
loope
xor
test
pusha
into
dec
mov
scas
jl
out
adc
xchg
jge
push
mov
mov
adc
jp
mov
jge
sub
ds
dec
aam
push
mov
mov
jl
repz
dec
or
cli
fisubrl
clc
mov
jmp
mov
fwait
cmp
lret
xchg
mov
sbb
xchg
or
stos
mov
imul
sub
fimull
xlat
dec
lds
shlb
mov
out
jns
dec
stos
or
mov
push
call
addr16
add
mov
mov
pop
pop
push
inc
jo
sub
push
dec
xchg
lret
pop
xchg
jmp
lcall
nop
addr16
ret
jo
sbb
gs
and
cmpsl
icebp
imul
xlat
xor
ss
dec
roll
adc
jns
push
outsb
ret
mov
fsubl
or
inc
pop
movsb
rcl
aaa
or
inc
sbb
daa
mov
addr16
add
ja
adc
scas
in
mov
in
xor
sahf
push
and
mov
lods
jno
xchg
and
and
aaa
jg
pop
dec
adc
fsubp
flds
mov
push
dec
mov
jns
cmp
popa
pushf
bound
shll
xchg
andb
mov
cmp
jg
aas
pop
mov
mov
jae
dec
mov
jg
inc
enter
aam
xchg
push
movsl
movsl
jno
jno
cmpl
sbb
stos
mov
push
cmpsb
sub
jp
out
out
fs
pop
mov
nop
in
aas
jl
pop
setns
sub
xlat
jg
adc
dec
lret
mov
cmc
xchg
xchg
mov
insb
jmp
push
xlat
test
cld
je
popf
cmp
les
nop
cli
in
or
mov
and
mov
popa
add
dec
es
cld
out
bound
mov
imul
and
and
das
and
and
sub
cmp
and
adc
cli
dec
sarl
int
and
test
ror
cmp
sbb
push
jecxz
into
cmc
jnp
out
ja
hlt
mov
test
cs
gs
adc
and
sbb
push
ds
mov
push
loopne
mov
push
hlt
int
adc
inc
mov
outsb
js
sub
dec
jp
and
daa
int3
lret
shrl
push
adc
jle
dec
insb
add
dec
mov
test
xor
fmulp
popf
mov
pop
sub
xlat
jns
popaw
mov
adc
inc
jns
adc
icebp
xchg
lret
enter
arpl
lods
lds
and
cmp
inc
sub
pop
repnz
clc
push
mov
aaa
adc
das
arpl
add
xor
mov
or
jmp
shrb
xchg
insl
and
xchg
adc
pop
loopne
iret
icebp
pusha
pop
fsubs
je
or
jae
aam
in
cltd
pop
loopne
mov
sti
sahf
call
addl
scas
pop
cmp
dec
and
push
and
inc
imul
mov
loop
mov
mov
adc
ficomps
lret
xchg
push
and
xchg
push
jg
lods
cmp
negl
inc
cltd
cld
sti
bound
xor
popa
inc
pop
rcrb
icebp
xchg
sub
pop
inc
mov
aaa
arpl
lret
aam
xor
das
jae
lret
pop
push
aas
das
in
adcb
cmp
xchg
mov
push
lret
push
lods
add
inc
fsubrs
add
dec
dec
test
loop
or
cli
test
inc
or
mov
popf
bound
push
xor
scas
clc
push
adc
jno
mov
mov
sub
les
ds
negl
rclb
scas
push
and
inc
insb
inc
xor
push
leave
push
jo
arpl
mov
ret
adc
cmp
nop
mov
add
mov
iret
rcrl
rolb
sarb
dec
inc
repnz
insl
mov
imul
jle
add
sti
cmpsb
cmp
xchg
inc
lcall
addr16
adc
pop
push
test
divl
daa
ret
jmp
fsubrl
mov
pop
jecxz
and
dec
push
xor
loope
jmp
and
inc
cmp
popa
adc
xor
lret
mov
jle
in
inc
jl
das
mov
adc
cltd
add
xlat
cmpsl
adc
sbb
dec
sub
add
mov
cmp
xchg
cmpsl
mov
iret
dec
xorb
out
push
movsb
pop
inc
cmp
ds
lret
ret
sbb
shll
sbb
ror
lock
sbb
aad
add
lret
mov
scas
xlat
push
test
in
stos
push
jmp
mov
xlat
mov
rcll
sbb
push
xchg
test
sbb
lret
daa
xchg
iret
stos
mov
push
fstl
xchg
lretw
pop
rcll
repz
jecxz,pn
lock
pop
xchg
loopne
daa
fs
dec
jae
pop
mov
add
push
mov
pop
jbe
push
jns
loope
mov
in
aaa
mov
pushf
mov
sub
ss
add
cmp
leave
mov
mov
push
in
jp
adc
cs
dec
or
test
lods
mov
pop
gs
mov
or
loop
sub
icebp
xor
lcall
repz
mov
stc
fsubrs
mov
pushf
mov
mov
aam
loopne
sbb
cmp
inc
cld
test
adc
inc
adc
fistpl
je
imul
pushf
jl
adc
insl
inc
stos
insl
fwait
sub
pop
add
pop
fnstenv
lock
jb
inc
cmp
sbbb
pop
jmp
insb
scas
pop
fisubrs
in
push
cmp
mov
pop
loope
movsb
sarl
xlat
cli
paddw
fdivl
mov
loope
adc
mov
ss
aam
jbe
add
sbb
add
dec
push
jb
pop
lock
xor
sti
mov
or
and
je
sbb
lret
jmp
pop
cld
repnz
add
call
pop
or
cmp
mov
mov
cli
xchg
outsb
fstps
pop
outsl
lock
out
aas
and
icebp
pop
jne
inc
jle
pop
jnp
jo
pusha
add
dec
push
sahf
cmpb
jo
loope
sbb
jmp
sub
enter
imul
dec
popa
fldcw
fimull
mov
push
je
push
leave
in
inc
out
add
dec
rorl
icebp
insb
loopne
sub
push
int3
jbe
aaa
pop
mov
gs
dec
xor
pusha
xchg
repnz
add
stos
cmp
imul
movsb
and
aad
ss
loop
jns
sub
ss
mov
push
data16
push
mov
add
adcb
mov
jmp
fistpll
jmp
mov
xchg
lea
adc
jecxz
loope
scas
cmc
dec
dec
fdivs
out
mov
jns
mov
ljmp
and
cltd
lret
fistpl
pop
cmc
ret
adcb
push
xchg
and
sub
aad
add
xor
mov
addr16
fcmovb
jno
mov
imul
ljmp
sti
sub
lods
das
jmp
mov
data16
adcb
xor
sahf
addr16
add
xchg
bound
aas
test
sbb
dec
and
in
xchg
fistl
inc
add
fs
jle
inc
mov
test
cmp
inc
dec
or
push
fldz
aas
jb
stos
cmc
sbb
ret
jmp
dec
jecxz
cmpsl
adc
push
push
jne
sbb
adc
mov
dec
mov
xlat
js
add
xor
xchg
push
mov
sbb
scas
push
push
adc
inc
xchg
xlat
sub
cmpsl
rcr
outsl
fnstcw
mov
test
movsl
push
mov
ficoms
mov
dec
mov
mov
out
mov
jns
mov
data16
aas
test
inc
pop
movsl
imull
cmp
adc
cmpsl
mov
sbb
test
sbb
jle
jae
push
push
das
mov
adc
into
mov
jns
notl
aam
test
push
cli
dec
out
fdivrl
ucomiss
pusha
ja
mov
andb
in
mov
enter
decl
daa
xor
pop
lcall
and
lock
or
inc
nop
aas
mov
adc
jbe
lret
repnz
and
or
insl
xchg
pop
mov
xchg
out
mov
stc
es
and
aaa
sub
cmpsb
sub
xchg
jg
test
pop
xor
mov
enter
aas
xchg
shlb
jb
leave
mov
and
jle
cmpb
jecxz
inc
and
and
inc
popf
jge
jae
mov
imul
sti
dec
push
loop
mov
test
fistps
lods
xchg
lds
add
jge
lret
xor
xchg
lock
insl
pushf
dec
fists
jnp
sub
mov
ret
mov
cli
inc
xchg
xchg
stos
fldt
or
add
gs
push
or
push
dec
mov
adc
adc
jecxz
or
xor
mov
fidivs
ljmp
adc
and
xlat
jecxz
mov
rolb
jnp
xchg
mov
mov
cmp
mov
addr16
mov
or
movsl
or
cmp
int
outsb
inc
and
int3
sub
cmp
or
xchg
outsb
pop
pusha
xor
decb
sahf
sbb
std
dec
xchg
push
lret
pop
add
sarl
sub
xchg
xor
fsincos
andb
cmp
inc
inc
cltd
pop
add
gs
xchg
and
popl
push
arpl
mov
cs
std
xchg
mov
mov
push
dec
add
mov
cmpsl
lret
pop
pop
fstl
cli
mov
pop
fwait
mov
cmp
jo
fs
lcall
loope
sbb
out
or
sbb
xchg
jae
stos
jbe
add
outsb
or
fists
fs
xor
push
data16
rcrl
adc
aaa
daa
pop
loop
push
test
bound
mov
repnz
inc
gs
out
sbb
bound
subl
test
adc
cmp
dec
push
xchg
xor
jo
mov
pushf
xchg
jecxz
push
jno
inc
int
ss
jl
ja
enter
lahf
xor
insl
sub
sbb
dec
icebp
mov
loop
push
sub
rcll
repz
pop
rcll
adc
test
fsts
xchg
fwait
xor
in
pop
rolb
ret
cmpsl
mov
mov
rclb
es
mov
dec
jnp
inc
in
cmc
add
dec
sbb
adc
inc
xor
clc
imul
movsl
push
push
inc
aaa
pop
arpl
fwait
add
sub
loope
rcll
lods
adcl
mov
xchg
cld
cmp
sbb
push
mov
push
jae
arpl
aad
enter
outsl
enter
sub
cmp
xchg
mov
mov
jno
mov
push
dec
or
iret
mov
pusha
hlt
sub
xor
je
cs
insl
mov
fstpt
push
lret
cli
sub
add
test
dec
inc
pop
push
mov
and
xor
push
es
lahf
repz
xchg
stos
rcll
lret
loop
lods
sub
or
mov
mov
jno,pt
adcb
mov
and
adc
rcll
adc
xlat
jg
jae
xchg
lods
ffree
dec
cmp
pop
jg
and
sub
div
sub
mov
sub
adc
bnd
lods
push
into
mov
pop
ljmp
movsb
inc
mov
push
popf
sti
pop
pop
dec
sub
dec
mov
mov
in
movsl
test
dec
dec
inc
leave
clc
mov
inc
mov
adc
aam
sub
iret
in
cmp
mov
adc
add
ret
dec
pop
dec
mov
xor
dec
inc
xchg
jns
xchg
hlt
pop
mov
adc
or
rcl
push
mov
pop
sbb
scas
fcmovnu
sbb
icebp
mov
outsl
push
push
orb
xorl
cmp
xchg
addr16
jne
inc
push
pop
xchg
sti
cmp
fisttpl
jmp
and
jmp
dec
mov
push
cmpsb
lret
and
das
jl
mov
cmpsl
and
gs
jl
loopne
add
ljmp
imul
jmp
repnz
and
pop
jecxz
or
fldcw
fiadds
pop
mov
push
daa
jo
inc
jecxz
sar
and
and
aam
sub
cmp
cmp
xlat
jb
fldcw
xor
mov
shl
repz
sbb
sti
sti
mov
and
xor
mov
aas
add
jno
xchg
add
pop
cmc
leave
mov
add
das
js
push
movsl
jl
lcall
xchg
jp
leave
std
js
data16
mov
andl
inc
xchg
inc
insl
push
fistpll
mov
dec
test
lahf
out
mov
sarb
ds
jb
call
push
pop
mov
bound
notb
dec
aad
lcall
inc
cltd
xchg
aaa
rclb
mov
dec
fmuls
loope
pop
addr16
popa
inc
call
lock
sarl
cmp
xlat
mov
ljmp
dec
jg
nop
test
push
lods
lret
and
test
clc
test
or
mov
addb
and
test
ds
cmpsb
rol
pop
es
es
sub
inc
out
inc
cmp
mov
imul
mov
call
mov
sbb
push
js
enter
or
cmpsl
inc
test
in
insl
mov
mov
jmp
inc
push
mov
cmp
in
cmpsb
jb
pop
fadds
enter
inc
jno
or
stos
pop
hlt
in
xor
shll
mov
fmul
push
aad
or
fcoms
orb
inc
movsb
lahf
jmp
xorb
pop
mov
dec
das
pop
insb
and
pop
sub
or
inc
sub
outsb
pop
adc
insl
aam
adc
adc
gs
inc
jge
adc
jg
and
and
jbe
mov
and
ret
mov
gs
pop
jmp
dec
fbstp
xor
sti
sub
push
fists
sbbl
repnz
jo
jno
adc
aad
jl
sbb
fistps
jp
mov
jno
push
shrb
cmpsb
in
jp
out
scas
pop
and
rorl
imul
jne
movb
in
jecxz
call
js
test
jg
fmuls
outsl
lock
or
mov
ret
push
and
mov
or
or
adcb
pop
scas
dec
mov
add
aad
mov
aam
adc
imul
pop
xchg
stc
pop
lcall
in
rol
test
cmp
icebp
jecxz
cmp
xchg
jno
lahf
or
addb
gs
cmp
leave
insl
push
mov
nop
xor
jno
pop
rol
das
popa
outsl
xchg
xor
mov
cmp
mov
jno
sub
fisubs
inc
lea
out
mov
je
push
pop
mov
sbb
xchg
into
cltd
mov
shlb
xchg
push
xor
cld
fiaddl
pop
push
shlb
sbb
push
pushf
push
int
add
add
and
or
lret
fwait
pop
loopne
loopne
mov
jne
adc
mov
inc
mov
divb
in
leave
mov
dec
jne
jg
push
fwait
ss
in
outsb
mov
pusha
mov
cwtl
rcrl
movl
xor
xchg
gs
sahf
inc
popf
xchg
dec
stos
nop
jp
dec
sbb
test
aam
cld
imul
lods
cli
test
ljmp
cmp
fs
xchg
daa
hlt
xchg
sub
imul
push
mov
inc
jle
cltd
jns
out
je
movb
push
mov
mov
add
movsl
leave
mov
xor
pushf
jo
adc
lods
fdiv
jmp
xchg
les
aam
adc
xor
adc
inc
sbb
pop
adc
push
insb
scas
fistpll
dec
jecxz
cmp
cmp
stos
loop
jecxz
inc
fisubl
in
inc
les
in
jbe
iret
les
rcrl
adc
and
jmp
out
xchg
jb
push
cmpsb
mov
jmp
jge
subl
mov
mov
push
daa
push
lahf
push
movsb
shrw
cld
dec
add
push
jg
pop
jg
or
subb
sbb
leave
push
mov
jns
mov
pop
mov
add
repnz
jne
orl
lahf
jg
push
sbbb
xchg
sti
or
inc
div
or
pop
xor
in
nop
fsubl
or
mov
scas
adcb
mov
mov
aad
aad
push
xor
push
jb
ficoms
push
jnp
pop
ss
jo
mov
lea
and
cmpsb
or
and
push
scas
and
or
jmp
push
repz
jp
jp
sub
xchg
push
repz
mov
imul
adcl
or
dec
pop
stos
jns
push
jnp
xor
push
fwait
sbbb
lods
cmp
mov
dec
cld
das
pop
mov
in
lahf
stos
popl
pop
push
sbb
nop
add
testb
in
sub
ret
adc
mov
lcall
frstor
mov
jnp
mov
xchg
clc
subb
mov
mov
das
stos
xor
xchg
ret
loop
and
and
pop
test
dec
mov
dec
cmp
push
les
lret
scas
adc
adc
add
outsl
xchg
fwait
fwait
add
sarb
inc
imul
outsb
fidivl
push
adc
xor
pop
pop
popa
lret
cmp
shrb
testb
mov
test
lcall
xchg
fdivrl
dec
mov
mov
sahf
jb
sbb
add
mov
pushf
and
jne
pop
addr16
xor
xor
inc
push
push
pop
cmp
xchg
xor
cmp
push
mov
call
pop
xlat
lret
jno
pop
pop
in
in
mov
dec
movsl
mov
pop
clc
in
mov
jnp
dec
adcl
add
push
movsb
outsl
adc
data16
ss
mov
cltd
mov
pushf
mov
cmpsl
insl
cmp
dec
outsl
mov
ljmp
insl
sbbl
sti
inc
dec
cmp
inc
inc
shlb
xchg
and
and
xchg
out
cmp
lods
aas
and
loopne
mov
roll
icebp
pop
call
mov
test
rolb
std
pop
shrl
inc
xchg
jp
mov
push
dec
add
dec
adc
lock
mov
mov
je
add
loop
adc
popf
inc
aaa
cmpsl
mov
nop
popa
stos
aad
jbe
fldcw
dec
mov
inc
sbb
xchg
jle
dec
adc
ret
dec
lods
xchg
xlat
add
test
push
jns
enter
xchg
movsb
mov
pop
jmp
cmp
jle
add
or
and
mov
and
mov
mov
mov
out
push
fisubrs
clc
cwtl
je
cmp
sub
jecxz
push
dec
cmp
sbb
mov
clc
mov
stc
lods
add
gs
jne
inc
pop
popf
popf
lods
dec
sarl
inc
cmp
lahf
mov
xor
ret
lods
outsl
imul
mov
add
out
push
clc
pop
jge
push
loop
movaps
mov
jl
out
mov
mov
xor
in
or
jb
sub
sub
ja
sbb
in
or
lods
fiaddl
stos
outsl
mov
jbe
aaa
lods
xor
out
ret
pusha
jo
adc
inc
push
jnp
jp
or
out
jg
xor
dec
stos
in
xor
push
or
sub
hlt
mov
loope
mov
pop
js
ficoms
out
and
adc
enterw
pop
mov
rcrb
xor
addr16
pop
dec
ds
addr16
cmpsb
jp
sarb
fcmovnbe
test
ds
and
mov
test
adc
jo
movsb
add
jp
mov
xchg
sahf
dec
xchg
ret
ja
lds
je
in
pop
jns
push
sahf
ret
int3
sub
lods
inc
jge
mov
or
aam
mov
movsl
push
movsl
popf
and
cmp
cmp
xor
push
sbb
pop
jl
sbb
xchg
mov
testb
xor
jmp
dec
push
pop
xchg
aaa
or
sub
sbb
in
movsb
lret
mov
rcrl
ret
mov
mov
pop
sub
stc
dec
cmpsb
out
dec
cmpsl
cmp
in
stos
and
cmp
movsb
sbb
mov
and
sub
test
into
xor
fsubrl
testb
adc
inc
paddsw
scas
inc
inc
in
popf
fsts
dec
nop
sbb
adc
mov
fs
je
rorl
sub
mov
pop
addr16
leave
mov
repz
js
in
push
sbb
pop
xchg
iret
inc
add
jecxz
shll
mov
into
xor
bound
sub
or
daa
ja
arpl
dec
out
dec
sub
scas
sub
jno
repnz
and
mov
lret
in
jo
cmp
pop
insb
enter
scas
pop
sub
xor
lds
xor
pop
push
and
call
add
test
cmp
dec
push
ja
and
mov
rclb
test
rcrl
adc
pop
mov
dec
sti
in
stc
aaa
jmp
mov
pushl
fwait
mov
pop
dec
mov
dec
popa
and
sub
out
inc
add
test
or
stc
out
push
pop
xchg
call
mov
mov
inc
in
xorb
push
pop
fmul
mov
pop
ret
lods
pop
cld
iret
fmull
cmp
push
in
mov
mov
sub
cmp
jb
fs
lds
shll
rcll
push
xchg
fidivrl
bound
cmpsb
jae
pusha
xor
mov
bound
push
fcomip
push
adc
fs
cwtl
sarl
aas
push
les
jns
push
cmp
adc
or
out
add
sti
mov
xchg
ret
cmp
sarb
jcxz
fwait
push
push
loopne
in
daa
bound
or
add
sahf
pop
and
mov
movsl
dec
cmp
fnsave
xor
xor
cmp
nop/reserved
dec
icebp
int
stos
fildll
outsl
pop
out
fwait
pop
and
sbb
pop
sahf
push
dec
rorb
sub
lds
xor
fwait
mov
loopne
mov
mov
aad
aam
adc
addr16
js
and
popa
cs
insb
lock
mov
aas
inc
aas
mov
pop
test
scas
gs
push
mov
popf
adc
mov
lods
jge
xchg
lods
xor
cmp
sbb
sbb
sbb
jnp
imull
neg
adc
dec
fstpt
bsf
push
jecxz
call
fildll
or
sub
mov
clc
push
test
inc
cmp
jecxz
fidivrs
testl
stos
lds
push
in
cmp
xor
bound
mov
add
jecxz
mov
adc
std
lcall
int
lret
xor
outsb
push
or
jo
and
lahf
inc
xchg
int
mov
sahf
sbb
xchg
pop
and
shrl
dec
add
xor
add
mov
pop
mov
and
insl
push
out
fstl
icebp
xchg
adc
loop
dec
outsl
cmpb
mov
mov
ret
ret
pushf
push
jp
dec
jo
fisubs
mov
ss
pop
fs
lds
iret
pop
outsb
inc
cmp
push
div
bound
fwait
mov
outsb
loop
sbb
mov
jecxz
pop
imul
and
adc
pop
push
pop
ss
cmp
hlt
ja
subl
pop
sub
push
adc
in
jns
std
jae
sbb
addr16
imul
in
xchg
and
repz
jecxz
xlat
cld
in
sub
js
iret
lahf
mov
pop
jno
fldenv
mov
jmp
clc
rcrb
into
mov
dec
lcall
mov
jbe
push
scas
fsts
icebp
clc
add
push
mov
pop
jnp
pop
cwtl
mov
cli
sub
fsubr
inc
jecxz
test
add
push
popf
jnp
frstor
and
push
dec
fcos
hlt
loopne
test
and
dec
add
pop
xor
scas
rcl
shrl
dec
push
fimuls
push
stos
xor
xchg
das
out
aad
repz
ljmp
add
fidivs
fadds
scas
push
add
mov
adc
outsl
jno
push
mov
add
mov
xor
jo
test
in
and
ja
out
mov
pop
hlt
sahf
cmp
mov
cmp
lea
insl
ja
sahf
popa
push
mov
jbe
cwtl
xchg
mov
or
push
shl
mov
hlt
cmp
aad
xchg
jmp
sub
mov
or
add
xor
xor
or
sub
dec
jns
push
pop
jbe
jne
in
stc
pop
call
insl
cmp
fsubrs
xlat
xlat
sbb
jb
fmull
or
pop
test
je
pushf
lret
or
xchg
hlt
push
arpl
pop
mov
neg
cmp
nop
add
repz
ss
daa
push
sub
mov
sbb
cmpsl
ljmp
xor
jmp
out
js
bound
sub
sbb
mov
data16
movsl
xor
pop
jno
pslld
pushf
xchg
dec
xchg
dec
xor
jno
push
mov
xchg
add
add
popf
and
fdivl
fwait
imul
and
ds
out
dec
lret
xchg
jl
push
dec
les
mov
mov
push
pop
es
shll
cmp
mov
cmc
je
sbb
mov
jp
insl
xor
inc
dec
mov
pop
xchg
jns
push
negl
lret
stc
mov
ret
mov
pop
aam
loopne
xlat
aaa
and
pop
movsb
xlat
xlat
insb
gs
cmp
and
fsub
data16
sbb
je
fists
sarl
fs
jge
pop
fsubrp
add
push
clc
scas
stos
lods
ljmp
cwtl
cmpl
fwait
cmp
roll
leave
add
loopne
stos
sbb
lods
test
popa
and
leave
test
stos
mov
movsb
imul
mov
lods
cmp
call
pop
sub
push
xor
jns
shll
jp
rcrb
lahf
xor
imul
ror
push
fisubl
xchg
ret
repz
mov
mov
sub
fwait
aad
xchg
adc
and
jne
jp
xlat
inc
jl
je
stos
mov
sub
sub
nop
sbb
int
sub
loope
scas
iret
jle
lods
jns
jge
xlat
lds
stos
jae
xor
mov
pop
dec
addl
outsl
xchg
rcl
sub
or
mov
jecxz
jnp
sub
mov
enter
fs
test
add
sbbl
jge
add
adc
mov
sbb
aad
jmp
int3
add
pop
insl
xchg
lcall
xchg
mov
or
or
hlt
xlat
call
dec
push
call
and
and
nop
xchg
sbb
push
push
aam
mov
push
popa
dec
subb
rcr
jle
aas
pop
test
loop
mov
and
inc
jb
lret
mov
push
push
out
push
xor
aad
repz
mov
xchg
fwait
sbb
add
adc
pushl
adc
fidivrl
dec
scas
jno
test
movsb
or
xchg
and
xchg
mov
cmc
mov
cli
mov
sbb
xchg
addr16
inc
movsb
dec
movsb
popa
adc
xor
dec
cmp
lret
jno
xchg
mov
jmp
and
sub
dec
jns
test
and
imul
xchg
dec
pop
scas
jp
cmpsl
and
ret
subl
pop
jb
sbb
shll
mov
gs
in
sbb
and
xchg
or
scas
sub
xor
imul
cmp
rorl
adc
jbe
mov
push
sarl
frstor
stc
outsb
cmpl
pop
or
les
fwait
mov
inc
insb
jmp
push
mov
lahf
mov
pop
inc
mov
lret
arpl
and
mov
pop
pop
out
fsubl
xchg
loope
cmpsl
jnp
rcrl
push
inc
lea
pushf
sbb
pop
or
push
mov
push
xchg
cmp
mov
lret
sub
mov
rorb
adc
jns
xor
fmuls
mov
arpl
mov
mov
into
popf
or
mov
insl
or
inc
lcall
cmp
fstpt
das
popf
testl
int
scas
outsl
enter
inc
adc
lahf
jmp
fdivrl
shrb
and
movsl
jae
jne
daa
push
inc
out
push
stos
jl
enter
mov
std
mull
lds
cwtl
imul
inc
rcr
or
mov
mov
xor
lret
mov
jmp
cs
loopne
push
out
lea
out
or
enter
mov
negb
pusha
repnz
call
outsl
mov
sbb
in
jmp
js
pop
mov
pop
je
sbb
mov
xor
mov
xabort
jnp
sbb
mov
add
push
mov
iret
mov
fcmovne
sbb
movsl
or
test
inc
in
cmpsb
std
mov
mov
test
int3
push
fsubp
test
inc
lods
push
xor
loope
mov
lock
es
sub
negl
cmp
lock
mov
dec
rcrb
repz
fildll
dec
push
cmpsb
pop
fdiv
pop
js
fs
nop
xchg
sub
xchg
dec
cmp
shll
out
push
pop
sub
ret
outsl
add
scas
push
xchg
mov
dec
pop
push
icebp
or
mov
cmp
loop
mov
loopne
inc
bound
addb
pop
add
popf
outsb
gs
xchg
fildll
fwait
mov
loopne
into
inc
mov
xchg
push
das
lock
mov
stc
fisttpll
push
and
test
test
mov
push
cmpl
or
mov
mov
stc
push
shll
inc
jno
lods
clc
mov
je
ljmp
mov
xor
into
fcmovu
inc
xlat
and
scas
mov
int
dec
add
push
nop
ret
ror
gs
fisubrl
ljmp
sbb
jno
push
shll
lahf
jmp
pop
sbb
scas
int
jne
lret
es
adc
xlat
inc
int3
loop
imul
mov
and
mov
mov
movsb
clc
nop
and
incb
sahf
in
mov
lods
imul
adc
adc
cmc
arpl
cmp
loop
and
sub
jno
stos
mov
dec
xchg
mov
nop
push
in
and
sub
mov
incb
xlat
int3
push
fadds
daa
cmp
push
jo
aaa
les
dec
mov
insl
shl
andl
adc
dec
out
popa
cmp
push
sbb
orl
imul
mov
imul
fsubs
xor
jl
add
pop
cmp
call
push
xchg
sbb
add
xchg
div
cmc
mov
xchg
cld
sbb
and
cmp
inc
daa
and
push
add
ljmp
mov
add
dec
cmp
xchg
mov
movsl
or
les
push
adc
adc
inc
push
xor
fildl
push
cli
clc
call
pushf
pop
gs
push
popf
lret
pushf
es
xor
movl
jge
lret
mov
popf
mov
mov
sahf
scas
pop
and
lret
sub
mov
in
loop
jbe
pusha
movsb
test
cmp
jecxz
push
inc
int3
sub
les
sbb
xlat
adc
arpl
cmp
in
push
and
pop
xchg
push
and
shr
out
popa
mov
cmp
lahf
inc
mov
or
mov
jmp
xchg
insb
movb
add
ss
mov
sbb
adc
push
dec
jo
inc
add
add
add
repnz
ss
cli
pop
add
xlat
jl
cmc
stos
aaa
jmp
xor
dec
add
and
mov
loope
jb
daa
mov
push
stc
or
test
add
loopne
mov
cmp
add
mov
cmp
sti
xchg
shlb
mov
dec
mov
fistl
or
mov
test
sub
fnstcw
jmp
and
mov
push
xchg
xor
cmp
sahf
aaa
in
cld
sbb
lea
xor
adc
xor
and
push
adc
mov
sub
mov
test
xor
stos
lods
cmc
stc
add
inc
sub
mov
add
dec
xor
push
movsl
cmp
and
aas
fcmovnb
pushf
js
scas
lret
dec
add
cmp
and
outsl
sbb
dec
mov
or
adc
cmpl
mov
mov
test
or
out
adc
pusha
mov
push
call
pop
xchg
insl
shll
or
mov
mov
push
inc
cld
push
xchg
jp
fstpl
sbb
inc
jno
fwait
mov
xor
jno
jb
mov
dec
add
xor
jge
repz
cmp
mov
jb
adc
and
and
orl
add
fwait
inc
add
lahf
inc
gs
outsb
mov
jl
push
cmp
xchg
mov
das
fmuls
jns
mov
sahf
les
mov
ror
cmp
in
std
add
stc
das
mov
outsl
clc
dec
sti
das
and
mov
push
add
jge
dec
xchg
cmp
insb
sub
fcom
push
scas
adcl
fnstsw
jmp
push
fcoml
add
jae
call
or
test
cmp
xchg
rclb
fisubs
rcl
inc
jbe
mov
orl
push
lods
or
mov
jns
hlt
lahf
sbb
cmp
xor
or
pop
adc
mov
imul
pop
pop
test
popf
sbb
into
insb
sti
mov
stos
dec
icebp
xor
sti
push
cmpb
pop
or
mov
mov
lods
aas
lahf
scas
rorb
sbb
cmp
outsb
pop
push
jg
mov
push
push
sub
in
adc
ret
rcrb
ficoml
loopne
pusha
sahf
call
inc
pushf
das
cmp
sub
mov
int
dec
mov
fwait
loop
inc
int
fisubl
sub
push
pushf
add
push
roll
pop
das
push
push
sub
jle
arpl
xchg
int3
or
cmp
xor
adc
lea
mov
movsb
or
shrl
xchg
mov
cmc
into
cmp
jae
sahf
dec
nop
pop
aas
pop
ret
jle
push
bound
mov
sub
jg
imul
in
pop
xor
xchg
jg
cmp
test
out
sbb
imul
lods
cmp
fs
pusha
mov
loop
mov
test
lock
push
and
arpl
inc
cmpsb
nop
dec
aam
sbb
ret
cmp
call
jl
cmc
inc
push
jle
and
arpl
mov
sbb
jmp
and
les
mov
xor
insl
outsb
inc
xchg
shll
movsl
jmp
mov
xchg
add
pop
sub
aaa
jnp
loope
xchg
inc
xchg
xor
push
out
out
andl
daa
mov
mov
cmp
lods
das
sub
jmp
sahf
cmp
sbb
sub
push
jno
cmpsl
arpl
pop
cltd
lahf
mov
fdiv
xchg
jnp
js
sub
inc
mov
repz
jo
inc
jnp
mov
movsl
cld
imul
sahf
cld
dec
jo
ss
sub
ds
add
outsb
xor
push
pop
ljmp
loop
push
mov
sbb
clc
jno
jecxz
cli
sbb
lds
insl
xchg
inc
ds
test
or
pop
mov
push
or
push
cld
int
mov
xor
sbb
sbb
shll
loope
add
rcrl
test
cli
xchg
sbb
push
push
sbb
xor
inc
sbb
xor
dec
enter
aas
add
scas
inc
sahf
sbb
mov
add
test
pop
pop
inc
or
test
int3
int3
mov
sbb
adc
cmp
int
ret
and
cld
cmpsl
insl
ja
push
mov
jg
arpl
rcrb
xchg
ret
call
test
or
inc
push
push
ret
push
cli
or
mov
jo
aam
pop
jbe
std
adc
mov
xor
pop
out
add
sbb
adc
push
jnp
jns
jb
sahf
or
pop
adc
xorl
pop
pop
ss
xchg
sub
jl
sahf
ljmp
testl
pop
roll
out
mov
pop
mov
inc
add
jb
pop
in
push
pop
lcall
sbb
and
stos
xlat
dec
js
outsl
es
dec
test
jge
out
leave
sub
out
or
packuswb
inc
andl
jns
fsubrl
cld
fwait
shlb
imul
inc
lods
xor
mov
movsl
std
daa
dec
ror
iret
cmp
pop
adc
inc
aam
mov
mov
push
shlb
add
sub
sti
xchg
sub
lahf
ss
mov
cmp
fadds
into
adc
cmp
jmp
cmp
push
test
cmp
jp
xchg
stos
pop
mov
in
adc
ss
fdivs
orb
leave
pop
int
scas
mov
stos
pop
xchg
cmp
push
stc
or
mov
negb
dec
jge
xchg
mov
inc
fbld
add
dec
cwtl
xchg
sbb
or
mov
insl
rsqrtps
cmp
repz
scas
xchg
repnz
lds
in
fnstsw
push
and
or
pop
mov
lods
mov
mov
sbb
mov
out
adc
pop
add
icebp
lock
lahf
lds
hlt
add
pop
cmpsl
stos
cmc
aad
mov
inc
dec
sbb
lods
repz
in
jno
faddl
or
mov
mov
dec
xor
cmpsb
lods
sub
in
mov
repz
hlt
xchg
outsl
sub
into
adc
and
xchg
adc
xchg
sub
sbb
out
scas
and
test
psrlw
xchg
iret
push
lock
adc
icebp
or
aad
pop
cmc
and
and
xor
lods
push
test
and
inc
mov
or
jle
fdivrs
fstpt
xor
dec
sub
xchg
mov
or
mov
stc
sbb
ret
push
daa
jnp
lods
orl
ret
test
dec
popa
dec
es
cmp
fcmovne
jl
push
sub
pop
jge
aad
cmp
dec
xchg
fwait
dec
cmp
jno
pop
pop
es
clc
xchg
icebp
fndisi(8087
sub
dec
inc
rcrl
shrl
ds
rclb
pop
shll
jp
aad
mov
and
outsb
fists
sbb
fs
xchg
lock
xchg
movsl
ljmp
fwait
lret
add
cmp
push
gs
and
stc
jo
jecxz
loopne
pop
insl
or
dec
mov
mov
ljmp
call
mov
mov
xchg
popa
test
mov
xchg
jo
adc
jb
loope
inc
pusha
jae
cltd
es
mov
xchg
push
inc
aad
sub
xchg
pop
jbe
dec
test
enter
pop
xor
jg
aaa
cwtl
sub
xlat
lahf
std
add
xchg
adc
push
test
adc
clc
arpl
push
dec
insb
mov
adc
outsl
push
in
mov
inc
xlat
inc
test
into
insl
icebp
out
adc
jo
jb
ret
mull
inc
inc
lds
int
jbe
jmp
xlat
sarl
sar
pushf
jbe
sub
xor
mov
ss
icebp
pop
sarb
mov
mov
fcmovnb
sbb
stos
mov
mov
roll
mov
pushf
sbb
bound
lea
stos
test
mov
xor
outsl
daa
xchg
mov
adc
jecxz
call
mov
pop
out
hlt
mov
jb
pop
push
ljmp
data16
and
cmp
lods
inc
sahf
movsb
adc
int
mov
arpl
jmp
mov
arpl
add
xchg
clc
inc
std
mov
mov
adc
rorb
shrl
jo
xor
imul
xor
inc
jb
sub
mov
adc
in
xor
sbb
sbb
pushf
movsl
ret
aas
inc
in
pop
cmpb
adcb
sbb
and
scas
inc
stos
mov
push
lock
add
rcr
add
lcall
les
lea
lcall
pop
sub
out
loopne
das
insb
fidivrs
xchg
xchg
loop
mov
out
cmpsl
add
icebp
lds
adc
sahf
cwtl
lds
pop
xor
xchg
aaa
mulb
or
push
out
mov
inc
jo
lock
das
mov
push
aam
jae
pop
pop
bound
js
insb
pop
rorb
repz
stos
push
xchg
out
sbb
gs
jno
push
pushf
imul
adc
inc
or
es
sbb
lods
mov
das
lock
ss
fcmovu
mov
scas
mov
jl
mov
incl
add
xor
or
outsl
les
pop
xchg
dec
and
add
daa
test
outsb
dec
into
xchg
jmp
xor
and
xchg
or
ds
mov
movsl
jg
mov
or
xor
jmp
adc
enter
cltd
icebp
test
gs
ja
mov
xor
push
pop
sub
push
pushf
add
popf
pop
pop
cmp
sub
js
mov
lcallw
loop
sub
lods
jmp
je
adc
or
sahf
fstps
jne
mov
pop
sub
mov
cmpsb
cmp
repz
loopne
jp
repnz
iret
sahf
inc
sbb
inc
jge
lock
adc
mov
aas
imul
popf
pop
mov
or
fcompl
out
push
lahf
xor
mov
cmp
mov
pop
sbb
pop
mov
stc
mov
stc
sbb
pop
mov
and
jmp
xchg
or
mov
hlt
insb
sbb
fldcw
stc
stc
jle
cmc
sub
inc
out
push
xor
frstor
das
inc
pop
adc
jle
and
neg
fidivs
push
movsb
into
leave
push
scas
sbb
loop
and
rcrl
sti
xchg
dec
ret
repnz
inc
rorb
bound
inc
pop
call
push
test
mov
je
cli
or
out
sbb
dec
pushl
popf
mov
negl
stc
push
std
scas
push
dec
scas
sub
bound
movsl
jl
xchg
mov
repnz
adc
push
push
push
test
sbb
push
rdpmc
mov
inc
int3
inc
cmc
xor
ficoml
mov
loop
push
cmove
lock
xlat
fsubl
rorl
fisubs
xor
or
in
mov
push
mov
adc
in
jge
and
test
stc
dec
jecxz,pn
dec
jmp
sbb
and
neg
movsl
fidivs
pop
loopne
adcl
inc
xor
fstps
imul
xchg
adc
jbe
sub
mov
fcompl
ret
and
ljmp
or
jae
lahf
repnz
lods
dec
cld
add
cli
dec
mov
rol
test
sub
outsb
add
and
cwtl
mov
int
jecxz
jns
aad
xchg
bound
test
pushf
push
sub
test
std
lock
loop
lods
inc
int3
dec
jecxz
clc
push
outsl
pushf
and
arpl
xor
dec
test
popa
push
mov
pop
outsl
arpl
subb
xor
movsl
les
xchg
fdivl
mov
clc
push
xchg
sarb
mov
inc
out
dec
stos
xchg
and
cmp
lds
stos
ljmp
or
aas
mov
push
sbb
xor
data16
scas
je
xchg
xchg
repnz
fistps
lods
ret
aad
incl
sub
jge
sbb
cmp
add
das
push
imul
movsb
popl
lock
std
jae
pop
pop
xor
cmp
sub
adc
inc
stc
push
cmp
push
jge
es
call
mov
push
hlt
cmovs
push
sbb
lods
bound
shrl
aaa
mov
mov
xchg
xor
jns
mov
lahf
dec
xchg
pop
aaa
xor
inc
adcb
insl
and
shlb
mov
lock
out
sbb
xchg
pop
gs
xchg
out
adc
rcrb
sub
das
clc
and
sti
scas
icebp
pop
es
and
xor
sahf
pop
popf
mov
scas
xchg
fnop
xchg
xor
dec
es
aas
or
icebp
rcll
jns
mov
adc
test
dec
movsl
lret
mov
jl
lahf
scas
jmp
movl
mov
mov
push
in
psubsb
stos
fisttps
fisubrl
fsts
xchg
cmp
nop
push
jo
and
fsubl
mov
add
mov
dec
push
test
jns
dec
pushf
inc
mov
xor
mov
fst
push
scas
mov
in
jmp
xchg
imul
clc
out
mul
mov
xchg
dec
int3
pop
mov
movsl
push
aam
jmp
es
test
adc
mov
push
lods
popf
sahf
xchg
lods
sub
mov
inc
aas
jmp
adcl
xchg
cmp
je
push
ret
dec
and
outsl
popf
movsl
imulb
xchg
in
mov
and
sub
test
inc
jb
mov
sub
dec
stos
in
inc
jmp
fst
pop
xor
ficompl
sbb
sub
jbe
xchg
je
daa
sub
or
ret
scas
mov
dec
mov
fdivl
fldt
sub
pop
push
jp
jns
xlat
aas
inc
jmp
xchg
loopne
dec
push
sbb
jle
mov
shll
xor
inc
dec
std
or
jns
fidivs
inc
js
aad
aad
push
push
test
xlat
int
repnz
loop
push
loop
shll
mov
mov
xchg
aad
adc
xor
out
mov
js
dec
rcrl
int3
cmp
test
cmp
ret
cmpsl
sub
cmp
fmul
loope
and
into
fdivs
aaa
mov
in
push
xor
test
repz
sub
sarl
inc
jbe
mov
push
jle
lcall
and
adc
cmp
xor
fcoms
ret
push
mov
sub
and
cld
stos
jae
mov
inc
mov
arpl
push
jae
in
mov
adc
je
lods
mov
mov
adc
sti
and
mov
or
mov
lahf
mov
arpl
les
xchg
mov
or
cltd
sidtl
les
les
shl
pop
shll
xchg
xor
in
test
mov
dec
dec
mov
decl
push
jmp
xchg
jb
cmpsb
dec
mov
fidivrs
add
push
repz
sub
inc
jo
add
or
pop
sbb
es
mov
loop
enter
jb
aam
mov
aaa
push
repnz
sbb
in
movsb
shlb
pop
push
mov
test
jl
xchg
imul
cmp
insl
cmc
out
pop
mov
adc
jnp
sub
int3
dec
pop
xor
fisubl
jg
ficompl
xchg
lcall
popa
mov
push
mov
xor
in
mov
adc
xor
pop
es
testb
mov
insl
cld
out
inc
rorb
pop
add
leave
enter
in
sbb
xchg
sbb
int3
jg
stos
insl
jg
jns
jge
adc
leave
xchg
mov
xor
fbld
in
xchg
and
jecxz
sbb
fimull
in
push
les
dec
ljmp
xchg
pop
xorb
fwait
jge
jne
sbb
or
mov
cld
xchg
xor
out
movsl
mov
lcall
aad
fisubrs
pop
jl
aaa
cwtl
lcall
push
cltd
dec
dec
add
or
shl
outsw
popf
push
fadds
sub
push
jbe
mov
cmp
arpl
sbb
inc
push
fs
xchg
and
pop
ret
inc
stos
xchg
adc
imul
pop
stc
lret
inc
das
popf
push
inc
lock
icebp
jnp
inc
xchg
out
enter
push
imul
lds
mov
pop
cmp
add
fistpll
and
ss
or
dec
mov
fs
cmp
jmp
push
dec
pusha
cmpsb
xchg
pop
xchg
test
cmp
jb
adc
inc
pop
hlt
popf
sub
or
dec
mov
ret
or
das
pop
push
repz
das
sahf
mov
arpl
push
loop
xchg
pop
mov
xchg
and
lock
out
mov
out
jo
jo
dec
fistpl
sub
in
dec
stos
cmp
dec
jge
cli
mov
fwait
sti
divb
pop
imul
dec
clc
adc
lods
lahf
mov
push
shlb
fs
imul
ftst
xchg
sbb
xor
jno
mov
loopew
loop
push
jle
pop
outsl
inc
add
in
stc
nop
xchg
sbb
xchg
add
int
mov
frstor
fistpll
cmp
push
mov
xor
and
pop
xchg
sbb
cmp
jmp
mov
les
xchg
or
push
dec
jp
aaa
jl
dec
inc
xor
lds
mov
mov
insb
stos
jne
je
out
roll
sub
insb
js
fcmovnbe
jo
lcall
jnp
push
push
fidivl
in
push
int
test
xchg
insl
jp
and
idiv
or
or
push
loopne
test
loope
inc
lcall
test
adc
pop
int3
out
or
aam
sbb
cmpsl
out
dec
pop
js
sbb
sar
sub
xchg
cltd
mov
add
adc
jmp
insl
sub
mov
icebp
sahf
cmp
or
or
sbb
pop
popa
cmpsb
or
fistl
jmp
aam
add
sarl
rcrl
add
bound
add
mov
lds
sbb
mov
ret
in
xchg
push
cmp
push
lret
mov
cmp
and
mov
les
push
sahf
sbb
inc
pop
mov
xlat
xchg
test
test
push
repz
push
sbb
sbb
aaa
adc
arpl
jbe
ds
mov
push
pop
inc
int3
aam
dec
lds
push
push
jno
in
cmp
int3
shrb
imul
cmp
adc
mov
wbinvd
jge
adc
insb
push
xchg
mov
mov
adc
add
push
xlat
xor
fs
xchg
dec
jg
xchg
and
rol
mov
out
mov
sbb
repnz
movsl
jbe
fwait
aad
in
cmp
aaa
nop
scas
push
push
sbb
aad
das
std
mov
mov
jne
jge
cmp
dec
lahf
adc
ret
dec
popa
cmp
xor
es
cltd
ljmp
jo
mov
fists
es
push
dec
ss
jecxz
dec
jp
and
in
enter
repnz
sbb
jecxz
sbb
jo
int
je
xchg
mov
add
lods
addr16
xor
jb
addr16
xchg
sbb
push
nop
sbb
cmp
fidivrs
pusha
shll
fs
cmpsl
jge
rcll
push
pop
dec
or
aas
arpl
dec
adc
mov
test
fidivrs
ficoms
dec
int3
flds
or
adc
jle
shlb
sbb
insb
pop
and
pusha
fwait
jp
mov
mov
int
icebp
popf
fstp
or
add
cmp
sbb
mov
cwtl
xor
les
stc
mov
inc
push
jle
pop
jmp
cli
repz
lds
aad
in
fs
inc
pop
dec
stc
or
faddl
adc
and
movsl
mov
dec
sub
ret
jmp
rclb
aad
cltd
inc
jae
into
int3
call
and
or
pop
mov
scas
jmp
aas
es
repz
and
loope
pop
cmp
inc
int
mov
fs
lret
stos
jns
sub
mov
imul
daa
mov
insl
lret
xchg
cmp
jg
jb
out
xchg
cld
lea
mov
rorb
iret
adc
push
push
cld
loopne
mov
cmpsl
cmpsl
cmc
arpl
or
lds
into
in
adc
xchg
mov
adc
jne
test
nop
repz
push
xchg
adc
shlb
mov
add
adc
adc
mov
push
inc
mov
cmp
clc
rcrb
dec
mov
hlt
cmp
fnstcw
push
jnp
fbstp
and
push
stc
frstor
std
fmull
lret
inc
ret
in
jno
or
out
mov
jb
adc
ja
xor
jnp
jg
adc
pop
in
popf
sbb
ds
in
insb
std
repz
pop
insl
jp
loope
mulb
popa
jl
xorb
push
cmp
push
pop
mov
test
ret
xchg
push
andl
mov
ror
jbe
js
or
mov
fnstenv
mov
hlt
hlt
aaa
jl
call
and
xchg
clc
in
mov
rcrb
in
pop
testb
jns
imul
jae
bound
fildl
out
das
out
ret
roll
push
mov
adc
test
mov
or
shlb
fstpt
dec
lods
cld
int
scas
sbb
xor
cmp
xchg
outsb
ret
ret
mov
clc
leave
ja
pusha
test
lock
xchg
arpl
jnp
shrb
movsb
subl
mov
ret
adc
xchg
ret
jbe
fldl
and
mov
pop
popa
mov
repz
ds
lahf
sbb
in
jnp
mov
sbb
pushf
lcall
or
fisttpll
mov
loope
aad
ja
cmpsl
pop
lret
insb
mov
inc
fwait
xlat
stos
xor
loope
xchg
lret
jo
xor
js
sti
cmc
pop
imul
pusha
test
mov
dec
push
jo
loopne
lcall
add
sub
jmp
data16
or
loop
and
int3
lods
push
sti
dec
cmp
mov
jo
mov
fidivs
fwait
sub
mov
out
xchg
out
push
push
mov
push
scas
adc
xchg
mov
cli
cltd
jecxz
addr16
pop
mov
sub
gs
cmpsb
cmpsb
in
push
leave
push
loope
dec
aas
fstpl
push
pop
lcall
pop
mov
aad
push
pop
jp
sti
push
or
xchg
orb
fdivp
in
sub
dec
cmp
lods
jecxz
sahf
fnstsw
popf
fdivs
xlat
push
gs
cli
adc
notb
stos
cs
or
int
cld
enter
xchg
adc
out
xor
or
or
and
mov
mov
cs
mov
xor
jnp
ss
adc
mov
in
mov
xchg
xor
jb
sti
xchg
mov
cwtl
push
shl
ja
insb
dec
ret
mov
mov
aam
popf
mov
ss
add
mov
inc
mov
inc
rdpmc
xlat
cmp
mov
movsb
outsb
push
cmp
mov
jnp
xchg
es
repnz
popa
pop
clc
movsl
and
sahf
mov
inc
int3
outsl
xor
pusha
ret
xchg
ret
mov
aam
dec
mov
inc
mov
sub
add
add
pop
xor
add
repnz
out
and
lea
xchg
clc
shrb
fbstp
inc
loopne
and
cmp
ds
movsb
cmpsl
lods
arpl
mov
repnz
imul
xor
pop
addr16
xor
fldlg2
mov
ret
inc
mov
mov
repz
pop
aaa
or
cmpl
ficomps
xchg
in
jo
pushf
lds
cmc
negb
rclb
push
or
xor
xor
xchg
mov
push
sahf
sarb
push
pop
mov
xchg
xchg
push
push
fisttpll
mov
inc
xor
cmovae
rcll
or
insb
inc
enter
jb
js
dec
scas
nop
hlt
jns
std
rclb
push
aas
roll
dec
cmp
loop
repnz
out
cmp
mov
add
lods
imul
ret
pop
in
mov
xlat
add
cmp
cmpsl
ja
mov
ja
jecxz
or
dec
pop
pop
daa
xor
xor
mov
lret
inc
or
pop
loop
sbb
aad
and
test
push
sub
cmpsb
sbbl
and
xchg
stos
push
sar
lods
ss
xor
mov
repz
cmp
push
nop
subl
jg
mov
outsb
imul
pop
push
jle
push
xlat
rcll
inc
fcompl
ja
xlat
test
push
lds
rolb
inc
imul
insb
cmp
mov
xor
sbb
mov
leave
push
jo
loope
pop
popf
xchg
out
mov
or
fldt
push
pop
inc
loope
add
mov
arpl
add
enter
jge
mov
les
cltd
sub
lods
rcl
inc
dec
rolb
sbb
incb
xchg
inc
sub
lods
insl
jmp
push
lret
psubd
add
mov
jae
outsl
xchg
out
lret
mov
sub
test
sbb
xchg
nop
adc
pminsw
adc
push
andl
out
sbb
mov
call
out
mov
xor
sbb
jne
inc
lea
sbb
shrl
mov
out
jmp
sub
scas
push
and
cmpsb
pop
test
xchg
in
push
repz
cmpsb
mov
add
pop
add
inc
push
data16
ds
mov
mov
out
lock
jmp
cmpsl
in
mov
mov
rol
scas
and
movsl
push
xchg
fnstenv
js
xchg
repnz
and
outsb
pop
dec
mov
dec
lahf
cmp
dec
out
in
iret
in
cmp
xchg
iret
sub
lock
xor
js
cmp
sub
movsl
or
xchg
imul
inc
out
aad
push
and
add
xchg
jb
fwait
pop
sub
aad
int
arpl
jl
xchg
cmpsb
jecxz
pavgw
xchg
loopne
movsl
sbb
mov
and
fnsave
xchg
lcall
sub
jl
pop
and
ja
xchg
stos
test
jle
into
jns
sahf
jl
xchg
jno
arpl
adc
push
pop
sbb
adc
test
push
mov
push
mov
jae
push
test
push
mov
sbb
jno
add
movsb
mov
lods
xor
mov
sub
movsl
or
inc
call
arpl
rcll
fwait
mov
jle
out
jge
push
jecxz
mov
pop
lahf
movl
adc
or
pop
in
pop
rcl
sbb
jno
xchg
out
sarb
ds
cmp
adc
fistpl
jmp
insl
cwtl
push
std
jb
lock
leave
sbb
jb
stc
cmc
aad
mov
or
inc
or
sbb
js
push
xor
jle
mov
inc
dec
ret
mov
jge
out
xchg
xor
push
fadd
addr16
jge
bound
pop
cs
sbb
add
inc
jnp
outsl
mov
lea
jne
andl
xchg
repnz
sub
jo
jl
imull
pop
cmc
xchg
hlt
adc
xchg
mov
fists
push
lock
ljmp
mov
lods
sahf
sub
je
mov
push
call
mulb
popf
and
dec
xchg
fisttps
insb
scas
ret
sti
adc
bound
adc
les
test
or
sub
in
sbb
mov
xchg
pusha
pop
pop
jbe
xor
daa
imul
sbb
sbb
insb
movsl
clc
repz
jb
clc
dec
movsb
mov
pop
jge
lcall
dec
pop
inc
pop
divl
mov
push
fcmovbe
xchg
popa
or
loope
push
ljmp
inc
mov
push
lcall
mov
pop
jg
mov
adc
sbb
jmp
xlat
and
sbb
cli
dec
inc
fmull
frstor
sbb
cmp
sbb
push
dec
xchg
pop
inc
and
hlt
adc
mov
pushf
mov
cmpsl
dec
and
dec
sbb
or
push
cmp
repz
mov
addr16
jno
cmp
psrld
sub
out
test
in
push
or
jo
jmp
xchg
sbb
xchg
out
dec
out
adc
xchg
rol
mov
xchg
jno
or
cld
fsubs
add
dec
xchg
add
das
sub
or
xor
or
mov
roll
sbb
scas
hlt
sub
lret
ss
data16
mov
cs
orb
cmp
cmp
push
ljmp
cmp
jb
jmp
movsb
arpl
data16
fwait
lahf
mov
mov
push
push
jmp
nop
jg
and
add
int3
je
and
cmpsb
cmp
push
ss
sbb
insb
add
cmovae
inc
iret
fwait
pop
xchg
and
ss
xchg
pop
cld
jecxz
add
sub
into
inc
fistpll
loopne
notl
ss
scas
cmp
and
push
xlat
mov
sbb
test
push
loopne
repnz
fs
mov
js
stos
fucomi
aas
or
dec
les
add
lock
jnp
adc
and
mov
push
push
add
jb
das
xor
repz
int3
jle
xchg
arpl
rorl
dec
data16
scas
xor
lahf
test
xor
lret
pusha
or
in
add
int3
ljmp
cmpl
outsb
pop
ja
call
mov
pop
jg
mov
pop
cmp
lds
push
enter
jle
mov
push
xor
js
hlt
mov
inc
cltd
ret
push
dec
imul
push
xchg
test
cmovne
add
and
lret
rcl
adc
test
push
xchg
xor
loop
cs
arpl
cmpb
push
lock
jmp
pop
and
push
xchg
enter
or
pop
push
je
mov
repz
pop
idivb
lea
loopne
cmp
jae
je
scas
test
or
pop
icebp
cmpsb
addl
cmp
jmp
insb
push
and
mov
test
stc
jns
andl
pop
jle
jno
add
daa
sti
jno
ret
push
cwtl
rcrl
es
adc
xchg
int3
aam
ds
jg
xor
xor
bound
out
lahf
mov
jecxz
loop
cs
xor
fdiv
insb
fprem1
sbb
mov
push
cmp
mov
int
or
sti
sub
cli
push
ret
js
sahf
xlat
stos
push
fmul
adc
pushl
popa
cmpsb
and
in
rcl
aaa
jb
lahf
lret
shll
cld
push
aaa
rcrl
push
cwtl
outsb
imul
imul
bound
adc
sbb
cmpl
mov
cmpsb
mov
gs
sbb
or
pop
mov
xor
xchg
data16
ret
pop
adc
aam
test
inc
mov
inc
subl
sbb
inc
mov
movsb
clc
in
pop
mov
sbbb
in
cltd
pmaddwd
and
mov
dec
jmp
mov
mov
lahf
sbb
insl
jmp
push
lock
sbb
mov
leave
push
hlt
lret
or
inc
xchg
movsb
xor
push
mov
lret
aaa
pushf
imul
fisttpll
loop
cmpb
inc
mov
sbb
add
add
stc
pop
rorl
adc
or
dec
add
dec
cmp
jle
and
push
fs
xorb
dec
ficompl
fs
jne
xor
dec
cmp
cmpsl
mov
lahf
sti
and
dec
inc
repnz
xor
cmp
clc
cmc
xor
and
xchg
pop
mov
cltd
popf
add
dec
xchg
mov
ret
dec
jb
dec
push
sub
jno
fstps
shrb
mov
insl
dec
jne
out
jg
es
rcl
iret
jge
in
jne
call
xchg
push
lods
fisttps
popa
or
add
push
add
adc
fisttps
shll
xor
jge
cmpsl
xor
sub
jne
frstor
lods
test
jnp
cwtl
and
ret
outsl
insl
aad
lea
movsb
mov
std
pop
cmpsb
pop
js
xor
xor
sub
pop
out
sar
fidivrl
push
out
push
inc
int3
fmul
or
ds
sahf
xlat
xchg
js
mov
ret
fnstsw
stos
add
jmp
adc
cmp
push
jle
cmp
icebp
add
cmpsl
jne
xor
sbb
arpl
call
mov
popa
mov
push
cmp
out
cmp
adc
aas
sbb
imul
std
or
xor
dec
xchg
ret
mov
sub
or
inc
lods
push
filds
push
dec
fistps
pop
add
or
hlt
xor
sbb
mov
insb
jl
in
jp
add
fildl
cmp
and
daa
lldt
into
popf
out
das
fidivl
mov
mov
fcomip
outsb
and
and
and
dec
add
or
lcall
lret
sbb
pop
testb
push
pop
add
ret
call
adc
fcmovnbe
ret
push
push
mov
mov
lds
repnz
data16
xchg
sbb
sbb
xor
js
dec
test
fbld
das
mov
in
add
add
je
in
inc
cmp
lods
sahf
push
inc
mov
out
pop
fimull
inc
pop
or
push
scas
mov
xchg
push
inc
lcall
stos
xchg
push
pop
movsb
xchg
movsb
mov
xor
iret
sbb
and
out
stos
pop
mov
mov
dec
or
and
mov
jecxz
lahf
fidivrs
or
jno
jae
pop
mov
xchg
mov
or
pop
ljmp
out
popa
adc
sbb
ret
cmp
loopne
xor
or
sub
add
out
sti
xchg
jg
sub
lret
cmp
mov
es
int
test
add
hlt
lcall
sub
test
push
mov
jl
mov
mov
jbe
mov
mov
clc
mov
repnz
out
mov
pop
rolb
mov
test
imulb
cmp
mov
imul
mov
movsl
scas
add
lea
push
xor
movsb
in
xchg
test
montmul
cmpsb
ret
addb
cli
out
jmp
into
dec
test
mov
mov
ret
or
ds
std
pop
cmpsb
mov
les
les
push
inc
and
cmp
push
lret
into
ss
or
xor
daa
mov
push
xchg
adc
push
mov
add
and
pop
lahf
mov
out
cltd
adc
push
xlat
sub
or
es
sbb
cli
sbb
sub
dec
nop
les
mov
sub
shll
clc
es
data16
sub
push
add
mov
repz
and
cmpsl
test
nopl
lods
aas
mov
std
ljmp
loop
pop
imul
out
mov
push
ljmp
mov
test
jecxz
inc
adc
scas
scas
mov
andl
pop
dec
pop
mov
xchg
add
sub
shrb
adc
add
cli
cwtl
lods
inc
out
sti
popf
xor
sub
jmp
cli
xchg
leave
jl
xchg
mov
daa
call
jecxz
xor
sahf
xor
xor
and
jne
sub
dec
push
mov
jg
sbb
negl
stos
daa
fmuls
lods
fwait
in
xchg
stos
cmp
arpl
push
lock
hlt
andb
jno
jl
and
mov
sbb
mov
jmp
lahf
jne
dec
leave
pop
mov
arpl
ret
or
dec
adc
es
pop
pusha
pop
hlt
test
clc
xchg
inc
mov
inc
sbb
inc
data16
add
shrl
neg
aaa
xchg
js
ss
pop
mov
or
mov
lods
leave
scas
mov
frstor
popf
subb
xchg
xor
shll
mov
push
and
adc
cli
or
dec
mov
data16
decl
and
sbb
mov
mov
push
ret
mov
lods
jmp
imul
jnp
jno
stos
in
ud0
leave
ret
fneni(8087
scas
imul
repnz
cld
fistpl
mov
jle
imul
xor
cmp
xchg
in
inc
add
jns
lcall
cmpsb
jge
pop
sarb
sahf
les
cmpsl
insb
or
fcoml
outsl
aaa
test
fimull
mov
pusha
leave
mov
jne
xchg
ja
imul
hlt
enter
jae
mov
scas
mov
fsubr
mov
shlb
cmp
push
dec
and
cld
mov
lds
mov
pop
out
pop
mov
mov
fildl
setns
dec
sbb
jge
jno
or
or
cmp
loope
std
jns
jo
incb
or
mov
popf
shl
js
mov
or
xchg
and
out
mov
jbe
dec
mov
push
js
lret
daa
inc
in
mov
scas
bound
cmc
push
pop
xchg
mov
and
shll
and
cltd
jno
rclb
rcr
jge
hlt
pop
mov
orl
lcall
int3
xchg
popa
into
cld
jns
lcall
xor
movsl
and
ret
fs
xor
ret
mov
add
mov
es
movsl
test
aad
jg
lods
lahf
xor
es
scas
mov
xchg
xor
and
movsl
xchg
add
mov
enter
mov
jl
sbb
leave
pop
sub
push
push
push
jbe
lods
sbb
pushf
xor
adc
je
aam
je
das
mov
in
mov
in
pop
sbb
jle
popa
jb
pop
lea
and
mov
jl
pop
in
addl
mov
fucomp
in
popf
sbb
adc
fcoms
and
xchg
nop
xchg
and
xor
sub
enter
in
std
adc
xor
mov
lret
or
outsb
orl
mov
inc
mov
ficomps
dec
incb
jae
stc
shlb
shrl
sbb
fdivs
jmp
xchg
mov
pop
subl
xor
sub
or
cmp
outsb
push
pushf
imul
mov
movsl
xchg
rolb
in
or
and
arpl
and
testb
mov
roll
sub
leave
adc
rorl
jmp
dec
xchg
aas
jne
inc
and
push
fcomp
mov
clc
insl
jae
leavew
fbld
outsb
scas
mov
adc
daa
fsub
mov
adc
lret
es
scas
xor
mov
mov
pop
les
mov
dec
fstl
pop
jecxz
inc
sbb
ficomps
orl
or
nop
leave
pop
pop
into
push
jl
jo
gs
mov
mov
mov
fadd
data16
std
ljmp
pop
dec
or
or
sub
mov
ret
fnstsw
cmp
pop
dec
mov
fidivs
mov
aaa
inc
test
mov
loop
lahf
jp
call
loop
mov
adc
add
pop
jne
fcomps
and
sbb
sub
adc
mov
hlt
mov
lret
fcomps
jge
and
rcll
dec
cmp
inc
mov
cmp
inc
dec
sahf
jo
repz
xchg
fmull
aam
sub
fldt
xchg
outsl
sbb
scas
mov
ss
cmp
xor
pop
mulb
scas
mov
and
rcrl
jmp
inc
sahf
add
scas
loopne
inc
leave
push
jg
push
sbbb
pop
push
inc
icebp
adc
adcb
push
out
outsl
xchg
outsl
sahf
popa
adc
in
mov
push
lcall
push
jns
repz
mov
push
movsl
sbb
mov
pop
call
in
and
bound
dec
popl
dec
or
loopne
jmp
out
sbb
addr16
sbb
cltd
andl
pusha
cmp
dec
gs
mov
lods
movsl
mov
mov
pop
pop
js
popl
push
decl
sahf
sbb
repnz
pop
or
cs
imul
sub
pushf
sahf
pop
outsl
or
stos
repz
jmp
cmpsl
push
pop
loope
mov
repnz
xor
sahf
push
pop
fcomi
imul
sarl
loop
mov
in
out
in
jmp
push
mov
sub
and
leave
test
jg
in
lea
or
in
ds
adc
insb
leave
and
into
adc
imul
adc
fstpl
mov
mov
lretw
and
out
pop
lods
push
dec
and
and
in
movsb
add
adc
xchg
je
lea
int
sbb
fcmovu
inc
dec
jne
ret
movsl
stc
call
xor
stos
test
push
sub
pop
or
adc
dec
bound
sbb
push
outsl
pop
sbb
cwtl
dec
xor
dec
push
mov
and
fs
aas
mov
inc
stos
stos
mov
pushf
int3
faddl
in
test
cmp
add
xor
dec
xchg
jmp
popf
pop
ds
stos
pop
xchg
mov
add
in
cwtl
push
in
or
xlat
sahf
repnz
cmp
lods
int3
testl
cs
rcll
sbb
add
sub
movzbl
stos
sub
jb
cmp
inc
cld
mov
fwait
or
push
in
outsb
mov
cmp
int3
xlat
idivb
loop
ljmp
pop
inc
and
clc
jne
lcall
add
arpl
enter
mov
pop
pop
flds
pop
jbe
dec
bound
or
fldl
xor
inc
xor
mov
pop
bswap
push
push
push
pop
ret
gs
sbb
add
pop
fsts
loop
mul
sahf
rcrl
push
loopne
ret
mov
gs
cmp
jp
fwait
dec
and
jecxz
mov
in
leave
data16
fs
add
xchg
mov
rclb
movsl
les
push
dec
sub
sub
mov
insl
jg,pn
lods
or
xchg
xchg
xchg
lods
jae
jl
add
mov
sbb
xor
pop
cmc
xor
xchg
adc
into
mov
inc
mov
repz
push
std
xchg
pop
arpl
enter
xor
fsubr
dec
xor
cmpsb
push
inc
lock
insb
add
and
in
loope
sub
mov
pop
jle
cmp
sti
dec
stc
push
lcall
je
push
js
or
mov
lock
pop
dec
mov
mov
fbstp
sbbl
sti
call
xor
or
cmp
leave
stos
shrl
jnp
call
stos
add
popa
push
rcr
mov
sbb
add
inc
mov
add
and
outsl
cwtl
sti
leave
in
inc
fldlg2
pop
mov
sbb
adc
adc
xchg
and
pop
xchg
div
stos
xchg
mov
in
jle
xor
add
lock
das
popf
cmp
xor
mov
adc
cld
mov
or
mov
sub
dec
or
aad
pop
push
in
mov
push
cmp
cmp
aad
sbb
imul
adc
or
xlat
sahf
adc
push
mov
dec
fiaddl
xorb
inc
or
lret
fmuls
or
out
fmuls
testb
ljmp
pusha
add
cmp
fidivrl
lods
cmp
repnz
out
pop
sti
sbb
mov
outsl
sti
ljmp
ret
jno
rorb
cld
pop
xlat
cmp
mov
mov
mov
inc
cli
mov
mov
daa
push
lods
cmp
pop
lret
sub
fidivrs
push
add
inc
cmp
jp
cld
test
jp
or
or
leave
fildl
pop
pop
test
out
repnz
call
mov
dec
cmp
pop
std
ja
xchg
jmp
lahf
inc
popf
mov
xchg
xlat
push
adc
icebp
in
mov
imul
pop
or
lea
inc
mov
mov
mov
outsl
mov
mov
lock
mov
cmp
sbb
ds
dec
decl
adc
stc
mov
jecxz
imul
sub
icebp
push
lods
insl
push
adc
int3
xchg
mov
vshufps
icebp
xor
push
cmp
jle
mov
ss
mov
push
add
xchg
xlat
xor
jmp
gs
stc
idivb
jg
imull
mov
sub
lret
sub
ds
enter
pop
jae
jp
pop
add
xor
and
xchg
push
xor
hlt
sbb
or
xchg
call
jmp
or
sbb
es
mov
jno
mov
inc
push
jns
or
jmp
insb
jne
ss
cmp
fwait
scas
std
cli
outsl
scas
es
fmulp
in
shr
xchg
sar
clc
insb
pop
fistl
adc
push
fmul
fld
out
int
lds
cs
leave
mov
orl
pop
or
push
rclb
out
xchg
push
sti
mov
fdivl
fcoms
and
arpl
je
cmpps
lock
jae
popf
pusha
sarb
das
mov
out
imul
push
nop
sub
daa
mov
pushf
pop
fcompl
testl
push
add
enter
dec
pop
hlt
push
sbb
adc
mov
sbb
in
dec
add
xlat
ret
mov
int3
cmpsl
sub
add
mov
icebp
imul
jno
cmc
inc
inc
xchg
cmp
add
in
dec
mov
sub
push
movsb
jl
out
xor
adc
and
std
out
mov
fwait
and
mov
sub
dec
mov
js
push
sahf
jg
cmp
test
push
fcomip
pop
adc
pop
xchg
loop
lahf
mov
inc
xor
mov
repz
xchg
pop
mov
jbe
test
loopne
push
jae
or
and
loopne
jnp
pop
pop
adc
test
mov
jecxz
testb
jmp
inc
xor
in
aas
dec
and
xchg
gs
out
sub
sub
adc
into
jge
nop
mov
push
fdivr
pop
cmp
push
xchg
mov
add
sub
pop
clc
dec
or
shlb
cltd
test
jge
or
outsb
mov
adc
lods
add
sub
mov
mov
adc
mov
into
les
je
pop
sub
push
lds
dec
fcoml
inc
mov
dec
imul
je
jp
cmp
adc
js
add
jno
aam
das
ss
inc
or
xchg
jb
mov
cwtl
in
add
bound
and
adc
xlat
or
mov
in
scas
fstpl
jne
stc
cmc
rol
jg
leave
and
sbb
cmp
aad
pop
jo
jnp
or
mov
cmp
test
pop
inc
lret
sub
mov
aaa
inc
dec
or
jecxz
mov
pushf
pop
outsb
inc
ret
test
sarl
lods
mov
aaa
insb
out
sbb
into
cld
imul
xor
in
lock
jmp
and
stos
push
mov
pop
fstps
popf
lret
xchg
add
rep
xchg
push
aad
repnz
cmp
repz
cmp
pop
xor
not
sbb
and
inc
pushf
and
in
mov
arpl
or
mov
xchg
aad
imul
cld
les
lods
mov
insb
fdivrp
sub
fsts
or
cli
mov
rorl
dec
ficompl
adc
filds
cmc
sarl
push
jle
fmull
pusha
push
mov
cmpsb
cmp
test
push
test
in
inc
loopne
mov
out
cmpsl
mov
mov
pop
rcrb
jl
push
sub
cs
and
aas
test
pop
addr16
lahf
inc
pmulhw
push
ds
repnz
cmp
ret
sub
cmpsb
jg
js
in
js
ret
inc
loop
or
xrelease
les
imul
pop
add
das
das
mov
mov
nop
add
adc
js
imul
inc
ss
cmp
outsb
pop
test
insl
lods
adc
icebp
push
mov
sub
add
sbb
aaa
sbb
mov
xor
int
aad
inc
jl
mov
or
adc
ja
pop
js
sub
adc
xor
jle
cmc
fs
aas
or
pop
in
out
mov
adc
dec
lret
sarl
clc
adc
pop
ficoms
and
mov
sbb
sub
lahf
pushl
ficoms
dec
lret
sbb
xchg
mov
stos
out
inc
mov
pop
xchg
loope
jno
and
outsl
shl
repnz
sbb
into
rcll
add
stc
testl
inc
sub
test
push
inc
xchg
mov
subl
inc
push
ja
adc
testb
pop
push
push
add
and
shl
adc
cmp
scas
aam
stos
pop
inc
mov
sti
jnp
stc
lret
xor
adcl
inc
push
xchg
jae
loop
out
test
in
mov
mov
bound
into
stc
jl
jmp
int3
stos
and
mov
out
je
xchg
pop
dec
sbb
push
add
jne
movsb
shrl
sub
jecxz
and
mov
movb
ret
mov
xchg
out
pop
iret
inc
into
mov
adc
pop
sbb
in
cmpsl
sbb
xor
popa
inc
insl
rclb
fsubs
xchg
cmp
shrb
int
adc
xor
xchg
xor
inc
adc
jp
stos
idivb
dec
imul
ljmp
pop
fstps
pop
int3
cwtl
pop
test
pop
mov
out
push
data16
xlat
int
pop
imul
or
das
xchg
and
push
adc
push
sbb
adc
jb
or
cs
xor
push
xchg
hlt
push
jg
xor
add
repz
mov
out
mov
mov
paddusw
push
outsl
dec
push
dec
cmc
push
adc
inc
adc
jnp
cs
mov
leave
xchg
push
rcll
and
sub
add
aam
aas
inc
test
and
call
mov
roll
test
loope
icebp
aas
imul
ja
jbe
mov
rcrb
gs
shlb
rorl
dec
mov
lea
xor
mov
sbb
pop
ret
mov
popa
xchg
inc
outsb
xchg
sbb
rorl
mov
arpl
pop
push
adc
push
rolb
imul
jno
jp
sbbl
push
stos
cmc
shll
movsb
and
int3
ljmp
adcb
add
mov
xchg
popl
ljmp
repnz
adc
or
or
xchg
mov
xlat
sub
mov
call
bound
sbb
nop
inc
jle
cmp
sub
aaa
pop
mov
test
mov
ja
push
ret
test
inc
xchg
xor
repnz
fmulp
lds
fbstp
pop
rcrl
fildl
lret
pop
and
cwtl
adcl
sub
int
sbb
inc
jo
aam
pop
or
push
outsb
sub
pop
mov
and
fdivr
test
inc
popa
call
fmulp
pushf
or
out
enter
ret
lret
mov
sbb
inc
push
and
jecxz
sbb
xlat
lea
sub
jo
push
pop
jp
sbbl
xchg
ret
jge
inc
adc
sbb
cmp
and
fwait
rcrb
aaa
adc
jmp
sub
sbb
out
mov
push
and
or
addl
inc
mov
jb
movsb
mov
jnp
mov
scas
test
call
xor
clc
inc
jg
out
inc
fsts
cmp
xor
jnp
sbb
xchg
sbb
mov
shrb
or
pop
cmp
jge
pop
ss
idiv
loop
pop
stc
out
sahf
nop
jo
lahf
sub
fcoml
mov
push
push
fsts
push
push
into
mov
out
fdivr
hlt
jns
lret
inc
jne
faddp
and
repnz
jb
xchg
lods
push
fistps
pop
or
mov
dec
push
test
test
pop
outsl
jl
das
mov
dec
and
add
insl
out
mov
or
insb
lret
das
aad
in
push
pop
test
push
cmp
sbb
mov
rol
cmc
mov
call
repnz
mov
mov
sub
cli
push
pop
sub
shll
push
sub
cld
dec
xchg
sub
xorb
stc
pusha
and
sbb
scas
xor
cli
popf
push
mov
mov
int3
sbb
ret
xchg
pop
push
pop
cmp
push
fwait
dec
xchg
pop
push
mov
mov
fs
inc
pushf
int3
rcll
into
cmp
jmp
push
xor
and
sub
jp
jne
stc
inc
daa
jnp
add
fbstp
lcall
fs
push
test
pop
pop
fiadds
rorl
add
rolb
cwtl
cwtl
cld
pop
call
and
xor
cwtl
pop
cmp
mov
mov
fadd
adc
shlb
sti
mov
push
ret
andl
shll
jo
mov
sahf
lcall
mov
sbb
bound
bound
jbe
and
mov
imul
ret
cmp
loopne
out
stos
cmp
lcall
jmp
inc
addr16
pop
mov
or
or
mov
add
mov
cmc
repz
lods
daa
push
mov
lds
push
cmp
into
xbegin
test
cs
mov
xchg
mov
js
xor
pop
das
pop
pop
imul
jmp
cwtl
rcrl
daa
cmp
arpl
mov
dec
icebp
test
daa
int3
cmc
xchg
bound
jmp
je
clc
jns
cmp
jp
jge
out
repnz
adc
push
pop
xchg
daa
sbb
aad
mov
or
sub
dec
push
cmpsb
or
pushf
jmp
push
jmp
cli
fdivrp
push
aas
or
sarb
jbe
jmp
dec
xchg
jne
mov
sbb
movsb
add
popf
adc
cmpsb
jg
out
mov
cmpsb
pop
xchg
cmp
jecxz
int3
cmpsl
sub
or
inc
shlb
imul
lds
inc
aad
fdivl
or
mov
sbb
jae
mov
dec
mul
fidivrl
jne
leave
mov
ror
fsubl
jo
out
sub
outsb
test
mov
jmp
movsl
daa
sahf
daa
outsl
xor
xor
inc
hlt
scas
sbb
cmc
mov
arpl
push
push
mov
xor
stos
add
nop
inc
xor
sub
pop
addr16
orl
pop
shr
sbb
inc
jg
xchg
add
das
test
sarl
sub
pop
and
mov
lods
lea
mov
cli
pop
addr16
mov
je
and
xor
cs
jbe
xor
leave
sbb
invd
retw
out
bound
xchg
popa
dec
mov
insl
jle
add
dec
stos
mov
clc
add
mov
in
pop
pop
dec
sti
subb
pop
or
xor
xchg
mov
pop
das
loope
sub
insl
shl
jne
adc
ja
test
mov
daa
xor
and
fcmovnb
enterw
pop
dec
loop
or
mov
xor
sub
sub
cmpsl
mov
cmp
mov
stc
jge
sbbb
adc
push
mov
dec
call
jb
in
out
rorl
sub
loope
push
aaa
mov
and
add
in
inc
jp
lcall
out
sbb
inc
sbb
adc
rolb
andb
sbb
lcall
fmuls
cwtl
jg
sbb
jp
push
sbb
fsubr
cmc
sbb
mov
daa
iret
adc
push
inc
adc
jb
and
sub
lods
xchg
loope
xchg
fcmovb
fs
or
cltd
insb
add
jno
cmpsl
and
lods
ret
cmpsb
jl
out
inc
adc
in
and
push
xchg
sbb
leave
mov
shrl
ja
data16
les
sbb
int
outsl
push
jmp
xlat
lods
xor
jne
xor
adc
dec
pop
arpl
lret
xchg
add
imul
clc
lcall
movsl
jae
imul
pop
xchg
adc
imull
mov
mov
mov
sub
jecxz
sbb
popf
lret
cmp
clc
rorl
sti
sub
sub
cmp
lods
repz
loopne
in
out
fwait
lods
scas
jmp
cmpsb
adc
or
push
out
sub
inc
cmpsb
mov
ss
testl
push
and
mov
clc
int3
pop
add
notb
push
mov
in
icebp
jmp
rcrb
mov
mov
cmpsl
in
mov
cmp
mov
shrb
out
cli
xchg
mov
cld
cwtl
repz
inc
leave
jp
mov
adcl
xor
inc
xchg
xchg
into
and
int
cwtl
sub
push
fsubrl
xchg
daa
pushf
push
sarl
jl
ror
popa
push
cmp
adcb
inc
ds
outsl
cmp
lret
push
je
or
ja
inc
pushf
clc
dec
out
mov
push
add
out
roll
repz
and
clc
xor
repnz
sqrtps
out
out
call
dec
or
push
xor
insb
dec
push
dec
or
sti
pushf
ljmp
pop
ljmp
sbb
mov
sarb
pop
jne
dec
out
cmc
bound
sti
jne
hlt
sub
aam
sbb
push
in
adc
lods
dec
repnz
or
stc
scas
mov
div
stc
jl
inc
fnsave
out
xor
pop
adc
insl
jbe
daa
push
xchg
ret
popa
push
leave
cmp
mov
push
sbb
rclb
ss
pop
test
adc
jb
movsb
rcrb
pop
xchg
loop
xchg
push
pop
je
icebp
sub
push
jge
jbe
xchg
rcr
jg
lock
in
mov
sbb
les
lds
sbb
dec
fstpt
das
xchg
test
imul
jmp
pop
push
test
into
cmp
xchg
adc
xchg
lahf
xor
iret
in
outsb
sub
daa
and
cli
push
and
pop
ficompl
adc
into
and
loope
jge
adc
jecxz
nop
std
pop
add
mov
popf
adc
sub
jle
push
mov
push
mov
lods
inc
dec
popa
mov
data16
aam
push
mov
and
ret
xchg
push
jno
movsb
rcrl
es
jmp
adc
daa
mov
inc
cmp
aad
sbb
mov
mov
test
mov
or
inc
imul
sbb
stos
mov
mov
fldl
jno
iret
insl
xchg
aam
jb
sub
fmul
ds
pop
movsb
sbb
cmp
das
andb
into
add
loop
dec
jb
mov
push
mov
push
daa
sub
outsl
lret
sub
jp
inc
vmulpd
or
ja
mov
loop
fstl
flds
pop
xchg
adc
inc
pop
jmp
lods
push
cld
fcoml
ret
mov
adc
inc
or
gs
xor
pop
xorb
js
out
addr16
rcrl
mov
xchg
push
push
mov
int3
push
repnz
sti
xor
daa
xchg
xor
cmc
push
adc
mov
out
int
notl
js
stc
xor
mov
sbb
sti
sbb
in
xchg
out
cmp
popf
ljmp
ret
roll
ficoml
xor
subl
int3
add
mov
lods
pop
mov
jne
push
lahf
add
ss
rcr
xlat
ja
sub
jge
jno
pop
inc
dec
mov
and
push
push
or
cmp
fiaddl
ljmp
clc
jg
fistpl
lock
sarl
mov
dec
inc
shll
mov
stos
shlb
push
jg
fidivrl
pop
jnp
mov
adc
shrb
sbb
pusha
sub
push
filds
mov
push
or
lret
cmpsb
sub
push
mov
inc
fistpll
jmp
icebp
lcall
popa
icebp
and
fucompp
xor
aam
xchg
mov
mov
out
inc
das
fisubrl
enter
jae
mov
mov
rorl
add
sub
stc
faddp
add
xchg
aad
sub
cmpsl
dec
aaa
rcl
pop
inc
or
ss
push
adc
dec
mov
xchg
in
pop
loopne
popf
repnz
aaa
mov
mov
mov
pop
out
xor
mov
sarl
mov
adc
insl
push
imull
push
mov
push
jnp
inc
adc
stos
jge
add
mov
and
sbb
lret
inc
jb
out
mov
lock
fs
popa
movsl
xlat
cmp
adc
lret
or
cld
xchg
pop
dec
arpl
rclb
ss
jo
out
lcall
push
icebp
lcall
xchg
push
cmp
pusha
lds
sti
imul
cld
pop
push
mov
sbb
sub
call
cmovbe
pop
movsb
or
test
push
dec
xchg
in
sub
sub
jbe
outsl
cltd
push
je
push
xor
ret
push
outsb
mov
sub
inc
aas
stos
out
sub
mov
jp
fiaddl
lcall
into
pop
fwait
add
sub
or
outsb
sti
jle
jge
arpl
adcl
sahf
pop
push
mov
fistps
hlt
add
pop
fbld
mov
adc
into
lock
cmp
adc
push
adc
das
dec
stc
adc
jl
adc
jo
add
frstor
rcrb
adc
rorl
int3
addr16
xor
xor
scas
and
add
sub
and
sbb
sub
cmp
mov
sarl
fmull
clc
stos
sbb
aad
js
mov
aam
xchg
dec
out
xchg
imul
push
push
cmp
jb
imul
scas
leave
popa
pop
lcall
add
mov
inc
in
adc
add
leave
mov
cld
mov
rorl
jo
ds
ljmp
daa
sbb
xor
lcall
mov
push
mov
popa
pop
jmp
adc
sub
jae
mov
in
and
jb
aad
jno
mov
mov
pusha
fdecstp
lods
jno
aaa
inc
fimull
xchg
sbb
mov
add
pop
or
addb
inc
cs
xor
jmp
test
mov
jbe
fldcw
cmp
rep
jle
fwait
sub
add
mov
sbb
pushf
mov
cmpl
outsb
es
or
arpl
in
mov
mov
inc
shrb
pop
scas
dec
push
outsb
icebp
std
outsl
xlat
in
sarb
and
cmc
xor
mov
incb
arpl
mov
mov
test
add
aam
xchg
lock
mov
in
lods
sub
pop
out
mov
gs
fsubl
mov
adc
xor
push
cltd
mov
leave
movsl
repz
push
rolb
push
add
mov
ret
mov
mov
jno
xor
mov
fnstsw
mov
mov
push
add
adc
lcall
and
int
mov
arpl
ret
mov
fs
pop
jb
mov
xchg
test
adc
or
lods
sub
fsubrs
jno
add
shrb
or
or
xor
jle
push
stos
loopne
or
je
fistps
dec
add
xchg
not
sahf
test
jg
and
loope,pt
orl
mov
xor
std
mov
mov
cld
mov
pop
cltd
push
sbbb
stos
dec
loopne
es
push
dec
inc
ret
into
pop
push
cmpsb
ljmp
xor
or
push
cli
cmp
scas
ja
cwtl
bnd
mov
mov
fisubrl
mov
fcoms
lret
ss
in
lods
dec
in
ret
sbb
mov
push
mov
insl
ja
xchg
xchg
std
ds
mov
sub
fcompl
sbb
in
lods
sub
xchg
fsts
arpl
xchg
leave
mov
or
imul
mov
adc
int3
popf
mov
adc
push
adc
fcompl
ss
dec
sbb
push
lahf
mov
jl
push
mov
jbe
hlt
mov
xor
ja
incb
mov
inc
sub
fldl
dec
mov
and
outsb
mov
loop
stos
xchg
das
hlt
cmc
out
jl
iret
mov
inc
adc
cmp
ja
lods
pop
mov
add
add
fnstsw
jecxz
and
stos
adc
pop
out
test
lret
arpl
mov
addps
insl
mov
ret
lret
lds
pop
in
into
pop
add
imul
cmc
mov
xchg
mov
sub
gs
shrb
lea
pop
fisubrs
repnz
shl
rol
dec
cs
aad
push
sub
add
std
popa
cs
sti
outsl
xchg
pop
das
jbe
and
test
and
xchg
xor
dec
int
sbb
jp
pop
cltd
fucomi
pop
inc
cmpsl
orb
add
cs
lcall
stos
in
jno
sbb
int3
icebp
xor
mov
rorb
inc
lods
mov
lsl
adc
js
out
jmp
mov
dec
adc
and
sub
adc
push
loop
and
push
mov
sub
xchg
movsb
aas
dec
dec
jge
jnp
out
push
repnz
out
hlt
xchg
fistps
vpcomub
nop
pop
push
add
mov
iret
loope
out
lret
mov
add
in
inc
mov
and
jg
filds
stos
cltd
les
ret
push
popf
xor
or
jne
sub
sbb
pop
dec
mov
or
jns
pop
or
jne
stos
mov
js
decb
lcall
ja
cmp
clc
xlat
js
mov
lcall
leave
cwtl
and
dec
jo
outsb
in
shl
mov
add
movsb
dec
dec
and
icebp
cmp
sub
pop
pushf
inc
xchg
std
push
inc
dec
loop
dec
push
arpl
xchg
xchg
xchg
dec
mov
jle
inc
std
shll
repnz
sub
std
xor
sbb
push
push
and
push
dec
dec
push
jge
push
mov
arpl
cmpb
pop
mov
cmp
xor
xchg
cvtdq2ps
push
movsb
xor
and
fisttps
push
into
ss
leave
inc
xorl
icebp
int3
or
jne
sbb
sub
pop
aaa
jbe
lcall
cmp
pop
xchg
xchg
imul
jecxz
xchg
faddp
outsb
push
push
je
mov
push
in
xchg
mov
leave
fwait
mov
cwtl
ss
je
adc
aad
cmp
daa
subl
push
icebp
dec
push
stos
dec
cmpsb
xchg
cmc
popf
lret
outsb
aam
adc
leave
les
mov
gs
loopne
rclb
mov
sbb
mov
xlat
fisubrl
stos
cmpsl
adc
adc
jp
shlb
dec
cmpsb
inc
dec
push
out
leave
mov
pop
dec
jmp
pusha
jmp
jb
jp
cmp
mov
data16
sbb
or
cmp
dec
cmp
enter
loopne
pop
sub
xchg
lcall
shl
outsb
aaa
mov
lds
ret
sub
repz
cmp
sbb
mov
pop
add
test
test
movl
ljmp
or
push
mov
cmc
jno
xchg
lea
imul
stos
mov
test
push
mov
test
call
sub
or
mov
xchg
iret
pop
jno
inc
test
pop
test
sbb
int
adc
aaa
push
inc
call
sub
in
cli
in
pop
jp
mov
int
sub
test
inc
repz
call
jmp
sti
into
adc
aam
daa
cmpsl
jg
and
cmp
inc
adc
adc
adc
jge
jmp
mov
jmp
clc
jle
xor
jno
jp
mov
add
int3
leave
xchg
call
dec
add
pop
stc
aam
mov
shll
sub
icebp
add
jp
fisubrl
call
xor
lret
sub
mov
inc
or
and
or
js
jp
mov
pop
inc
dec
and
jle
adc
add
inc
andl
push
mov
sbb
aam
int
lods
inc
xor
mov
negb
pop
mov
fidivs
pop
xchg
xchg
xor
cmp
shll
loope
xchg
add
lret
pop
test
sarb
cwtl
icebp
shll
jmp
cwtl
lcall
add
or
and
inc
fisubrs
pop
ds
or
push
outsl
lret
fs
insl
shrl
push
bound
fcoml
inc
lea
pop
lcall
dec
pop
ret
inc
jbe
cmc
xor
nop
and
pusha
sbb
mov
data16
mov
xor
mov
cltd
jne
sbb
ret
add
daa
cmp
add
movsl
mov
push
shrl
fbld
xor
cmpsl
je
lods
xlat
mov
mov
adc
lods
mov
or
push
loop
out
mov
mov
inc
inc
and
inc
sbb
sbb
insl
inc
add
enter
mov
fcompl
xchg
shlb
push
or
mov
and
loope
add
jb
jne
js
mov
mov
mov
enter
or
adc
cmp
inc
faddl
ret
insl
adc
cwtl
data16
xchg
in
mov
push
sub
jp
xchg
bound
pop
add
or
sbb
mov
add
shll
in
test
sbbl
adc
aaa
shll
sbb
lock
hlt
out
xor
aaa
fs
ss
mov
orl
mov
stos
cltd
scas
sbb
daa
push
mov
dec
stc
xor
aad
fwait
mov
cltd
leave
or
fistpll
sub
je
outsl
add
lods
dec
popa
cmp
dec
popf
push
sub
clc
aam
nop
sbbl
add
jns
addr16
jg
pushf
xchg
xchg
cmc
movl
inc
lahf
or
pop
and
aam
in
jle
not
adc
or
push
cmp
mov
jmp
push
aad
push
shl
lahf
adc
sbb
pop
mov
rep
xor
xor
shlb
dec
imul
jge
xchg
xor
xchg
sbb
les
popf
cmp
movsl
jge
push
and
popa
xorl
int
inc
xchg
test
xor
push
stos
push
lds
cmp
lea
push
push
jae
and
inc
dec
fs
clc
out
dec
adc
sbb
jae
rcl
sti
mov
subb
xchg
js
pop
push
push
add
jbe
mov
ljmp
and
or
xchg
test
loope
sub
call
jb
mov
mov
cmpsl
fcoms
dec
push
lods
imul
push
xor
test
inc
rolb
loope
pusha
sub
jmp
fcoms
adc
adc
leave
clc
push
outsl
push
xor
shlb
jecxz
mov
negl
push
cmpsl
mov
push
xchg
jne
mov
xchg
cmp
mov
cmp
or
mov
addr16
ret
inc
cmpsl
push
in
test
sbb
adc
fstl
aas
loopne
push
repz
ret
mov
sbb
loopne
mov
adc
out
mov
xchg
add
adc
jno
test
lods
pop
sub
pop
arpl
push
jbe
inc
cwtl
mov
and
pop
adc
push
outsl
cwtl
out
and
fs
mov
lods
movsb
faddl
lcall
push
hlt
push
push
or
jns
jno
add
cmpb
jg
mov
notl
test
bound
mov
mov
mov
adc
jge
push
lahf
test
lea
mov
mov
es
insb
or
or
pop
jbe
cmpsb
sub
movsb
sbb
and
lods
mov
idivl
test
mov
loopne
inc
lods
ret
sbb
add
sbb
dec
jns
or
push
cltd
push
fisubs
jp
xlat
ja
ja
std
xchg
or
ret
xlat
pusha
sbb
fisubs
lods
push
and
push
dec
mov
add
repnz
jmp
push
and
push
out
int3
sub
ret
pextrw
inc
xchg
loopne
or
jp
popa
jno
pop
es
mov
clc
inc
cmpsb
pop
scas
aaa
imul
sbb
pop
scas
negl
rcrl
imul
mov
cltd
dec
sbbl
into
lea
or
aaa
adc
xlat
out
jb
add
or
jl
mov
lods
and
leave
aas
insb
xor
dec
xor
inc
mov
add
sbb
and
mov
sub
xlat
mov
insb
flds
and
mov
lea
dec
inc
fwait
jmp
push
not
xchg
xor
jnp
xchg
pop
inc
aaa
in
mov
jl
push
repnz
or
mov
jae
mov
mov
loope
out
int3
sbb
int3
inc
rcrb
dec
sub
ret
push
pop
in
push
hlt
cli
arpl
ss
sub
mov
cs
or
add
and
popf
mov
in
xchg
xrelease
push
cmp
imul
jno
mov
push
mov
xchg
dec
loopne
mov
push
shrl
loop
and
scas
cmpsb
add
fdivrl
mov
sti
xchg
aaa
dec
lret
sahf
out
pop
cld
jecxz
jo
pop
sbb
or
jl
dec
clc
stc
jge
rclb
in
call
mov
insb
in
mov
nop
aam
sbb
mov
insb
mov
rclb
adc
movsl
fldt
mov
xchg
sbbl
mov
push
xchg
cmp
and
cmp
shl
test
jp
add
out
js
mov
out
pop
pop
outsb
xor
push
loopne
cmp
xor
hlt
inc
sbb
push
stos
xchg
aad
inc
testl
sub
jle
pop
push
pop
decl
std
xor
aad
sbb
out
push
lahf
imul
ficomps
jg
scas
popa
sbb
imull
clc
sub
add
scas
movsb
fadds
inc
pusha
cli
mov
push
cmpl
xchg
flds
insl
cmp
cmp
mov
dec
cld
dec
mov
xchg
fs
mov
lret
jge
push
loopne
in
lea
imul
mov
inc
inc
enter
scas
and
mov
imul
cmp
and
push
cmp
pop
adc
sub
inc
cmp
adc
out
push
push
aas
sbb
pop
push
adc
cwtl
push
xchg
xor
mov
ljmp
mov
cwtl
js
xor
in
sbb
jp
icebp
and
sahf
mov
cltd
add
cs
pop
cmp
ficoml
ds
cmp
xchg
mov
mov
dec
mov
push
sahf
mov
ja
stos
popa
lcall
push
stos
jle
rcrl
jo
jp
xorl
dec
inc
pop
mov
mov
scas
ss
adc
ss
loop
fcmovb
int
mov
pop
push
aaa
jp
pop
pop
out
aas
int3
mov
xor
sbb
push
sub
mov
mov
jge
imul
lea
xchg
idivl
jecxz
pop
int
jg
dec
stos
add
movsl
loop
mov
pop
jp
mov
das
call
mov
pop
aam
xorb
jl
cmpsl
je
adcl
inc
mov
or
add
sbb
pop
inc
inc
shl
loop
sbb
pop
aad
fdivrs
cli
add
in
push
jl
stc
xchg
out
sub
cltd
int
int
out
cmp
jb
movd
xchg
gs
mov
lahf
shll
imulb
mov
mov
clc
push
stc
in
fldt
pop
fcmovu
scas
fisubl
dec
and
je
xchg
ret
and
negl
push
pop
mov
ljmp
adc
leave
push
add
pop
sahf
pop
std
cmc
hlt
gs
mov
jle
cli
out
mov
sub
mov
cmp
inc
daa
mov
dec
cmc
xchg
cmp
test
push
push
cmp
repnz
popa
pop
jle
mov
mov
js
shlb
sbb
imul
pop
gs
mov
jmp
mov
inc
or
enter
mov
pop
or
cmpsl
je
es
push
lcall
pushf
fiadds
adc
xchg
int
inc
pop
ja
cmp
cli
cmp
lods
mov
testb
jno
xchg
es
mov
pop
mov
jmp
das
repnz
sar
jmp
xchg
and
push
hlt
push
fistpll
or
das
icebp
into
xchg
sub
lods
addr16
mov
filds
dec
mov
hlt
xor
movsb
in
xchg
clc
loope
add
repnz
js
mov
or
sarl
sub
ror
sub
push
add
arpl
cli
movsl
xor
pop
test
add
jno
rcll
dec
loop
in
loope
lret
adc
and
lock
std
mov
test
popa
aas
lret
sub
in
push
aam
sub
xor
mov
cmp
mov
or
or
or
jecxz
lods
inc
mov
rcll
fdivl
sbb
mov
pop
adc
sbb
xchg
pop
lret
xor
push
adc
out
fisttpll
repz
sbb
push
fucom
mov
jl
jns
imul
shll
cmc
lods
push
pop
andb
shrb
fisubl
mov
sbb
dec
pop
je
rolb
and
pop
xlat
into
or
loopne
fsubrs
insb
sbb
and
mov
push
roll
mov
das
pusha
jge
aam
add
fdivrl
out
loop
pop
push
mov
xor
or
addr16
pop
roll
lock
adc
pop
stos
jae
mov
sub
sub
push
xor
fwait
mov
sbb
ss
roll
stc
aam
xchg
mov
mov
ja
cmp
out
or
insb
cmpsb
ds
cltd
in
cmp
popa
test
lods
dec
pusha
aam
and
test
leave
or
mov
cwtl
sbb
in
jae
test
orb
movsl
dec
pop
sub
fidivl
fbld
jge
inc
and
stos
adc
mov
inc
mov
lcall
fisubs
pop
insl
and
outsb
pop
test
inc
icebp
add
imul
xchg
dec
sbb
scas
lds
mov
mov
inc
adc
jns
scas
stos
loop
sub
mov
ja
mov
push
mov
cld
adc
adc
test
mov
popa
xlat
push
loop
cli
jo
sbb
fdivl
nop
mov
jae
dec
mov
std
inc
movsb
daa
icebp
ret
lahf
mov
lock
les
xchg
xchg
cld
test
notl
push
mov
cmp
jo
dec
lret
scas
fdivrl
and
loop,pn
mov
in
loopne
add
stc
dec
add
sarb
push
push
bound
cmc
fsubrs
jmp
xchg
mov
std
or
out
cmp
call
xor
mov
sub
test
push
stos
scas
inc
shr
dec
push
sub
jns
and
sub
jle
sub
test
sahf
mov
repnz
and
cld
lods
lods
mov
lea
xor
scas
mov
fldt
test
mov
mov
call
loopne
xchg
dec
xchg
sbb
xor
mov
ds
push
jbe
scas
lds
xchg
popf
out
movsb
in
mov
push
ret
adc
sbb
pop
imull
mov
jae
sbb
movsl
cmc
mov
fstl
push
insb
jns
ret
shrl
bound
orb
in
and
add
push
or
rorl
iret
push
ja
jo
daa
stos
sahf
inc
mov
rcrb
gs
cmc
lods
jle
in
mov
pop
jg
dec
push
shrb
jnp
xchg
imulb
push
js
addb
push
jbe
lock
stos
fcmovb
and
std
xor
inc
push
push
dec
inc
sub
icebp
dec
rorb
pop
lret
pop
mov
cmp
sub
xor
repnz
out
mov
add
mov
call
ss
imul
test
punpckhwd
sub
pop
movb
mov
movsb
inc
sub
xchg
cmc
loop
add
xchg
and
xor
lods
xor
add
xchg
mov
cld
rcr
ret
insl
mulb
sbb
add
out
push
enter
xlat
divl
sbb
sti
lret
mov
subb
adc
push
cmp
enter
call
call
push
lods
mov
add
pop
gs
sbbb
aas
fchs
pop
lock
stos
je
pop
mov
jmp
jo
mov
aas
rorb
sub
dec
movsl
jb
shrb
jecxz
and
sti
mov
fcoms
jne
js
mov
or
inc
sbb
push
orb
loop
xor
in
mov
mov
push
loope
mov
xor
sarb
push
and
mov
imul
sub
or
sbbl
clc
cmpb
push
into
pop
mov
lods
and
jbe
lods
push
mov
xchg
cmp
pop
jbe
lcall
add
sub
int
sbb
sbb
addl
out
sbb
mov
fisubs
addb
jge
add
sub
push
sbb
ja
movsl
out
lods
rcr
jecxz
inc
repz
rcll
movsl
mov
insb
push
xchg
loop
adc
mov
sub
sub
adc
xor
push
adc
mov
sub
addb
imul
test
inc
xor
sti
leave
mov
jl
ja
fstpl
nop
mov
xor
mov
sahf
outsl
jae
pop
xchg
mov
or
mov
repnz
dec
repz
mov
inc
xchg
add
hlt
pop
loopne
out
cltd
enter
dec
pop
push
jno
mov
push
iret
xchg
imul
sub
imul
test
xchg
hlt
out
xchg
inc
xchg
and
inc
or
ror
jge
xor
cld
out
adc
jl
test
adc
pop
push
mov
js
xchg
hlt
or
mov
dec
jmp
clc
jmp
stos
clc
mov
xchg
sbb
js
mov
xchg
leave
push
pop
aas
testb
hlt
mov
pop
push
inc
arpl
mov
bound
jl
push
push
adc
es
jp
sbb
aam
xchg
ds
ror
sar
and
loope
arpl
cld
mov
xchg
ret
pop
lds
aaa
mov
sub
and
pop
mov
push
jl
xor
add
adc
sub
sub
cmp
mov
or
enter
das
sub
cmp
test
pop
push
xlat
and
dec
iret
cwtl
xor
lret
adc
mov
push
fscale
xorb
and
inc
mov
popf
add
sahf
mov
lock
lods
je
xchg
xor
mov
test
cmp
and
js
jge
pop
push
lods
add
call
cmp
addb
cmp
push
push
mov
pop
xor
lcall
jo
fucom
int
arpl
sbb
adc
xor
sbb
stc
cs
adc
mov
cmpsb
mov
jge
cli
jno
mov
movsb
jae
outsl
or
out
sub
or
add
jb
mov
mov
js
int3
jp
ljmp
push
mov
loopne
stos
cwtl
lret
or
subb
inc
dec
sub
into
jge
mov
mov
loopne
pusha
lahf
xchg
push
xor
ds
sub
shrb
cmp
and
aad
out
jnp
out
or
out
clc
aas
lahf
rol
add
jecxz
adc
cmp
sbb
mov
jl
in
into
xor
cmp
fcomps
inc
adc
push
out
rol
jmp
dec
lods
mov
jmp
icebp
std
push
sub
add
dec
mov
push
popa
adc
inc
pop
xchg
daa
in
or
cmp
in
push
daa
negl
pop
dec
sub
xlat
and
mov
popf
and
aaa
sub
scas
mov
notl
xor
fwait
pop
push
xchg
push
sub
inc
lods
int3
fsubrs
adc
shlb
inc
sbb
adc
mov
add
clc
mov
and
jbe
imul
sub
pop
xor
jb
das
pop
les
movsb
jno
jmp
push
iret
and
sub
add
and
add
mov
out
imul
scas
push
xchg
sbb
sbb
ret
cmp
jnp
fdivr
jl
or
int3
mov
and
adc
adc
sub
jmp
pop
mov
xchg
repz
rdmsr
mov
outsb
ja
jb
push
mov
movsb
testl
fimuls
cwtl
lds
jb
ss
mov
jne
ljmp
dec
sbb
or
xchg
and
mov
dec
inc
sbb
mov
les
pop
lret
sub
test
rclb
int
xchg
mov
rolb
das
inc
mov
mov
mov
aad
fbstp
int
xchg
hlt
call
aad
int3
xchg
roll
dec
aad
pop
inc
xor
int3
das
scas
xchg
outsb
aaa
push
ret
push
xchg
shl
outsb
call
push
dec
jg
adc
outsl
push
mov
xchg
pop
inc
rcrl
jno
into
in
repnz
rcrl
neg
sbb
and
ds
lea
out
andb
loope
or
popa
dec
sti
adc
jae
pop
mov
pop
ret
adc
adc
ficoms
in
shll
mov
enter
pop
mov
sub
test
call
loop
loopne
pop
xor
adcl
out
and
inc
push
xor
addr16
cs
dec
jecxz
inc
mov
and
je
rclb
out
push
ja
iret
xchg
loope
icebp
inc
es
sbb
pop
fstpt
and
lea
out
rolb
je
dec
sbb
popf
mov
and
inc
shl
fwait
add
in
pusha
mov
out
lcall
int
sbb
xchg
mov
cmpsl
imul
push
dec
dec
xor
xchg
pop
fadds
stos
inc
mov
push
dec
cmpsl
into
or
test
inc
jge
inc
push
loope
stos
lahf
in
xchg
and
jne
out
mov
xor
cld
popa
inc
mov
mov
fs
aaa
sbb
mov
loope
pop
push
mov
nop
imul
repz
movsl
inc
dec
lret
mov
test
data16
mov
inc
lock
fdivrp
jnp
iret
iret
inc
jnp
loop
and
movsl
call
in
int
aaa
add
push
test
stos
push
test
filds
testb
sub
out
out
xor
sbb
pushl
pop
notb
lret
lret
into
lock
movsl
icebp
mov
xor
lods
push
or
fldl
jmp
addb
push
sub
aam
stc
push
mov
scas
movb
aam
movsl
pop
andl
outsb
push
pop
outsl
lock
fwait
lods
xchg
leave
and
xchg
jge
push
imul
xchg
mov
jle
xor
xor
push
jae
mov
mov
sub
mov
bound
scas
fistpl
push
sbb
push
cmpb
and
add
movsb
or
lods
cwtl
mov
ficoml
mov
dec
or
test
test
add
and
iret
mov
cld
jecxz
insb
sbb
cwtl
enter
mov
dec
dec
cmp
inc
push
imul
stc
pop
xor
gs
loopne
xchg
pop
inc
mov
jecxz
mov
cmc
aaa
fmuls
pop
push
ss
mov
cwtl
pop
scas
ljmp
test
jl
pop
sti
imul
push
add
lds
lods
repnz
frstor
test
add
dec
sub
mov
pop
enter
aad
loopne
test
inc
xchg
daa
int3
das
mov
dec
les
mov
movsb
sbb
mov
mov
out
push
fstpt
fcomp
data16
ja
test
adc
pop
mov
bound
mov
lods
sub
pushf
cli
lret
add
test
and
mov
mov
out
outsl
ret
lock
scas
aad
repnz
xchg
outsb
xchg
es
mov
fcomi
pop
push
aaa
xchg
arpl
mov
lds
fadds
imul
push
les
stos
pusha
sahf
cmp
shll
lea
and
sbb
adc
push
xor
fbstp
push
inc
fidivrl
inc
push
mov
pop
fbstp
xor
cwtl
aam
rclb
jmp
add
mov
ja
xchg
adcl
push
fisubrs
lock
decb
mov
sti
mov
std
mov
xchg
xchg
aad
adc
mull
je
mov
stos
subl
loope
outsl
inc
cmc
test
mov
dec
xor
mov
sti
or
popf
leave
call
fidivrs
push
or
sbb
fbstp
mov
and
jo
sbb
test
fldt
call
pop
sbb
inc
push
xor
xchg
fsubs
mov
aad
and
mov
jl
sbb
inc
fnstcw
xchg
adc
ja
jno
pop
imul
xchg
xchg
push
scas
ret
pop
xchg
and
cli
dec
and
in
cmp
add
inc
adc
mov
fcomi
ds
adc
jns
push
mov
pop
and
xlat
or
and
std
ret
pusha
outsb
mov
ret
call
dec
jbe
ret
in
pushf
and
jo
mov
mov
or
pop
push
or
inc
jo
lods
fsubl
divl
add
push
jmp
out
inc
add
daa
pushf
lea
std
mov
pop
in
and
mov
sarl
inc
lds
nop
fsubr
pop
cwtl
int3
arpl
icebp
lods
fs
dec
adc
sub
dec
cmp
out
std
data16
das
std
insb
cmp
xchg
insl
hlt
add
add
popa
pop
es
xlat
xchg
test
loopne
test
imul
outsl
hlt
cs
fs
cmp
leave
xchg
imul
inc
arpl
roll
mov
out
je
outsl
jns
iret
je
jge
lcall
jp
mov
add
mov
sub
pop
sub
je
or
inc
jg
das
jae
cs
cmp
mov
inc
out
xlat
adc
inc
loope
adc
xchg
cwtl
add
lret
outsl
jg
pop
movsl
push
sbb
inc
jb
repz
mov
jb
push
xchg
leave
ss
into
sub
lods
fs
jno
aaa
inc
adc
jo
imul
pushf
mov
hlt
jno
mov
pushf
cld
sar
movsb
adc
paddb
dec
fnstenv
jae
cmpb
add
gs
call
push
daa
cmp
cwtl
and
mov
test
dec
cmp
shll
leave
scas
cli
cmc
add
dec
mov
mov
test
inc
xlat
fmuls
stos
into
xor
sub
add
xor
or
incb
sbb
lods
shll
push
adc
and
cmpsb
and
jns
mov
push
jg
call
dec
cmp
test
or
xchg
pop
hlt
cld
popf
insl
jb
adc
xchg
out
pop
jle
insb
loope
push
sub
and
or
or
ret
fistps
dec
and
xchg
sbb
jg
mov
repnz
fwait
hlt
aaa
pop
pop
loopne
clc
pushf
adc
aaa
mov
insl
xor
xchg
jno
sub
add
test
imul
popf
mov
push
push
aas
cld
adc
or
add
add
aaa
lods
nop
jbe
lds
push
add
and
xchg
inc
lret
movsl
pop
outsl
mull
out
and
pop
int
testb
jecxz
sbb
mov
sahf
mov
mov
xchg
mov
test
lret
add
adcb
xlat
mov
cmp
and
sbbl
push
mov
aas
dec
sbb
iret
sbb
xchg
cmc
or
mov
call
or
pop
dec
std
std
popf
xchg
lahf
int
inc
jno
fistpll
push
jb
xchg
in
sbbl
loope
inc
and
jle
mov
and
push
xor
mov
xchg
push
ljmp
pushf
pushf
and
lret
dec
mov
inc
xchg
std
xchg
cmp
mov
push
pop
mov
jae
movsl
in
or
mov
testl
jge
repz
pushf
push
cltd
jge
mov
out
mov
xchg
mov
fnstsw
cli
stos
pop
and
enter
iret
mov
lods
aad
inc
ss
mov
fsubrl
pusha
and
dec
add
mov
les
mov
out
cli
leave
and
mov
int
decb
divl
xor
popa
fldcw
sub
mov
cmpsl
rcrb
sbb
cmp
stos
flds
dec
xor
aam
lahf
jae
sbb
lds
arpl
cmp
jecxz
sbbl
aad
cmp
dec
sbb
xchg
into
int
mov
cmpsl
insb
cli
mov
jnp
in
popf
sbb
jmp
mov
fstpl
adc
sbb
lret
imul
mov
js
cli
and
cwtl
xchg
int3
nop
jae
mov
push
movsl
xor
cmc
ret
jg
clc
mov
lds
mov
dec
and
icebp
loope
out
movsb
pop
fisubl
test
lods
lret
inc
loope
lcall
lahf
mov
rcrl
cmp
js
or
sbb
add
fistps
xor
leave
inc
sub
mov
je
fsubl
insb
sbb
lods
add
xchg
setl
cmp
push
add
cli
movsl
mov
pushf
jmp
mov
mov
cmpsl
in
lods
fldl
aas
mov
hlt
push
sbb
psubusb
cmpsb
std
inc
aas
std
push
or
ret
lcall
sbb
inc
sbb
mov
nop
std
inc
int
les
repnz
and
jle
dec
and
lcall
mov
or
das
sti
mov
xor
push
fsubp
mov
or
aaa
scas
and
nop
mov
xchg
pop
mov
repz
sub
ss
sbb
and
mov
lahf
das
cmp
push
jg
call
dec
out
pop
and
dec
inc
ljmp
fldl
nopl
test
ret
jecxz
enter
and
xchg
cli
out
fdivl
rorb
xchg
add
aas
pop
jg
jmp
in
or
pop
jecxz
add
mov
pop
fidivrs
out
mov
adc
shl
fnstenv
jbe
add
cmp
test
xchg
int3
jmp
sub
loopne
rclb
or
mov
hlt
cmp
xorb
dec
mov
dec
arpl
lcall
stos
sub
fwait
in
dec
rcr
xlat
js
xchg
fwait
mov
push
int3
xor
jns
rorl
shll
daa
stc
and
and
movsb
jmp
aas
dec
mov
push
stc
add
sbb
dec
insb
lahf
hlt
fbld
cwtl
shl
sbb
xor
enter
xchg
cli
imul
dec
fmull
dec
mov
fistps
push
imul
subb
daa
mov
sub
inc
mov
test
scas
sub
arpl
scas
or
sbb
push
addr16
mov
jge
xchg
xchg
dec
es
push
mov
jl
daa
jae
out
out
loope
fildl
jo
jbe
jo
ss
rorb
inc
xor
or
push
imul
movsb
out
mov
sub
mov
push
je
icebp
mov
inc
pop
ja
movsb
xchg
lock
mov
mov
jbe
int3
push
pop
and
adc
inc
stc
and
ljmp
into
push
jle
mov
xor
imul
push
pop
and
jmp
lcall
pusha
ds
test
xchg
inc
push
add
jns
js
jns
mov
inc
scas
mov
cld
insl
enter
pop
std
pop
push
pop
gs
addr16
cmp
mov
pop
xor
xchg
ja
jbe
rcl
lcall
cmpsl
arpl
jbe
dec
ja
xchg
mov
adc
dec
rcll
gs
fwait
mov
in
xor
mov
fwait
push
and
mov
ds
orb
push
clc
iret
cmpsl
das
adc
int
cmp
movsb
or
push
cld
fists
or
scas
mov
push
insb
imulb
outsb
jnp
mov
push
pop
mov
out
push
outsl
push
fbld
xchg
iret
dec
cld
mov
add
loope
inc
adc
xor
and
adc
adc
xor
sub
int
and
cmp
mov
inc
xchg
sub
in
loop
and
add
repnz
ret
leave
mov
jb
jno,pn
ret
ja
dec
mov
push
inc
test
inc
iret
mov
out
test
aam
push
and
ljmp
lods
scas
fst
dec
dec
inc
cmpsl
ficompl
ja
mov
push
lcall
pop
mov
ljmp
and
pop
push
iret
cmp
jle
out
mov
jns
lds
scas
sbb
ss
std
push
loop
push
ret
inc
aad
outsl
cs
inc
test
mov
leave
movsb
sbb
cmpsl
dec
dec
adc
push
or
inc
loopne
divb
aaa
sbbb
sbb
cmp
pop
mov
fldl
push
lahf
repnz
movsb
xchg
cmpsl
mov
add
rcr
push
lds
out
push
bound
mov
mov
cs
popf
sub
cmp
adc
mov
sub
into
fwait
scas
xchg
scas
shlb
pop
in
cmp
mov
xor
or
popa
push
adc
fildll
xchg
pop
push
std
and
xchg
dec
cmp
popf
insb
sbb
add
pop
fldenv
das
cmp
and
inc
pop
pop
out
mov
push
inc
movsl
adc
loope
pushl
jecxz
dec
dec
jp
outsb
mov
inc
xor
inc
mov
push
push
jae
lods
xor
bound
ss
cmpsl
sahf
popa
add
cmpb
aas
sahf
dec
insb
icebp
ret
sti
fstpt
push
inc
in
cmp
lret
mov
mov
adc
push
pop
xchg
insl
mov
or
dec
das
incl
mov
insb
adc
xchg
rolb
sub
das
jno
inc
adcb
cld
ret
pop
push
cwtl
inc
adc
inc
jne
test
cltd
into
cmp
js
movsl
into
push
lret
sbb
rcr
std
jl
or
jmp
mov
stos
push
push
aam
lahf
cmp
in
int3
sub
popf
pop
in
xor
fisubl
cmc
sub
and
adc
xchg
push
mov
dec
stos
movsb
lea
sti
or
out
pop
repnz
xor
cmpsl
or
stos
in
jmp
lds
insb
incl
testl
xor
sub
add
and
add
pushf
dec
push
cltd
cmp
loope
loope
pusha
stos
jo
leave
call
in
pop
mov
lcall
sub
adc
movsl
pop
repnz
push
ss
pop
push
xchg
xor
loop
cs
add
push
add
and
out
dec
fstl
sbb
cmp
mov
sbb
in
sub
ds
in
int3
in
mov
push
push
decb
jg
cmp
mov
gs
push
nop
dec
mov
lcall
test
out
test
push
push
inc
mov
sbb
lcall
dec
or
sub
pushf
add
adc
or
xchg
mov
sub
nop
or
adc
jno
out
pop
and
fistpll
sub
les
iret
inc
pusha
add
test
pop
mov
repz
les
out
mov
inc
and
sbb
aam
sub
lds
sub
sub
nop
stc
sbb
or
mov
shrb
lahf
xorl
add
xor
int3
pop
xor
ljmp
loope
adc
adc
out
in
mov
je
add
enter
mov
adc
stos
push
ret
jmp
out
testl
sarl
std
scas
adc
imul
dec
inc
popf
xchg
xlat
jp
xor
loopne
jle
lods
xor
mov
push
pop
test
pop
stos
lods
movsl
and
sbb
aas
pshufw
jle
fdivrl
stos
pop
push
push
push
les
xchg
das
sub
sbb
adc
mov
mov
nop
and
sub
popa
fmuls
outsl
stos
repnz
aas
aas
sbb
mov
xlat
inc
loope
bound
imul
mov
scas
loop
push
cmp
lea
dec
mov
push
shlb
lea
mov
out
sub
sbb
or
pop
or
fstl
push
mov
ljmp
mov
jno
fdivl
insl
sahf
jbe
inc
les
stos
add
adc
inc
lahf
fcompl
nop
or
mov
adc
ljmp
lods
repnz
and
dec
fists
sbb
and
jbe
pop
es
mov
lds
mov
push
lret
sub
stos
test
stos
das
int3
push
mov
mov
dec
sti
sbb
xor
or
push
push
notl
mov
enter
xchg
dec
scas
mov
push
and
cld
shll
mov
pop
lock
xor
mov
scas
push
push
sbb
add
movsl
das
rclb
mov
cmp
icebp
add
or
lahf
pop
mov
jp
push
js
mov
xor
cld
adc
fdivrs
enter
jno
fsubl
inc
insl
jmp
fmulp
xchg
pop
fmuls
mov
out
xchg
xor
pop
xchg
ficomps
rcr
js
and
pushf
sbb
push
popa
sbb
sbb
rolb
cli
and
jbe
xchg
xchg
into
cmpsb
dec
fistps
dec
add
add
and
jp
mov
aas
cs
hlt
cmp
sbb
inc
and
mov
add
dec
iret
inc
jl
inc
add
leave
pop
out
addr16
lods
add
js
loop
mov
xor
movsb
and
xorb
ss
andb
sahf
lock
testb
jnp
aad
ljmp
push
pop
lods
adc
popa
or
cmp
cmp
and
repz
ds
not
mov
add
push
std
cmc
test
ds
adc
ljmp
pop
sbb
popf
sbb
dec
insl
mov
cmpsb
push
add
es
mov
imulb
add
shlb
adc
cltd
icebp
sub
mov
dec
stos
adc
dec
insb
mov
mov
testl
lds
mov
clc
mov
sub
mov
and
loopne
push
roll
test
lahf
xchg
pop
rcrl
jb
dec
xlat
jb
fs
dec
mov
lea
sbb
loopne
xor
push
clc
push
js
jge
or
sti
dec
sub
imul
in
hlt
pushf
pop
xchg
clc
lods
fs
in
out
and
jbe
out
stc
mov
mov
fs
out
ret
mov
mov
dec
fstpl
xchg
jb
push
sbb
dec
rorl
fisttpl
sbb
popa
adc
mov
mov
les
jbe
fwait
mov
pushf
jmp
mov
lods
sbb
leave
inc
pop
std
divb
push
mov
int3
sbb
int
push
ret
leave
xchg
dec
xor
pop
sub
into
cmpsl
xor
sbb
sbb
fidivrl
cmp
out
ja
sti
or
inc
mov
inc
int3
mov
loopne
xchg
aaa
incb
adc
icebp
iret
mov
jns
mov
lcall
addb
sub
fwait
test
gs
test
shlb
or
inc
aas
cmpsb
in
addr16
pop
fsubs
or
push
cmpsb
inc
inc
mov
cs
xchg
push
push
popa
lock
daa
sub
dec
call
mov
imul
rolb
and
lret
lcall
dec
mov
cmp
lcall
xchg
and
push
popa
mov
stos
mov
mov
stc
push
mov
ja
dec
xchg
add
out
sarl
repz
int
aaa
jmp
adcb
mov
notb
loope
mov
xchg
push
xchg
lds
inc
ror
scas
ljmp
xor
adc
push
scas
inc
and
cmp
bound
pop
mov
ja
es
dec
movsb
scas
mov
sti
mov
xor
imulb
xchg
xor
insl
test
xchg
jb
int3
out
push
push
leave
add
fldcw
xor
or
mov
repnz
call
mov
or
mov
hlt
xchg
cmp
and
cli
mov
adc
jl
rcr
jno
or
xor
fstpl
shl
icebp
fstps
dec
cmc
add
and
jmp
dec
and
and
shll
push
mov
jg
add
add
fwait
insb
jge
outsl
scas
or
pop
cmp
addr16
and
xor
cmp
push
shrl
jae
mov
or
scas
sub
dec
cmp
xor
scas
cmp
push
push
mov
test
jmp
xchg
hlt
dec
arpl
ret
negb
push
fiadds
loopne
pop
in
mov
and
mov
movsl
sbb
insb
cmc
dec
std
and
sahf
push
dec
or
pop
mov
pushf
cltd
push
imul
outsb
xchg
sbb
jmp
sbb
mov
fistpll
xlat
jmp
pop
pop
call
mov
push
enter
icebp
inc
mov
loopne
data16
pop
cmp
xchg
cmp
loop
cli
scas
pop
out
movsb
imul
mov
mov
pop
cs
test
jns
fdivrs
mov
decl
sti
je
sbb
cmp
int
push
mov
xlat
adc
pop
jb
addb
adc
lods
ret
ljmp
inc
adc
cltd
mov
push
je
imul
pop
movsb
aam
inc
pop
sub
sub
in
mov
jo
sbb
jle
fisubl
inc
jne
or
fs
call
cli
xchg
mov
rclb
test
sbb
xor
mov
jbe
mov
sbb
push
or
outsb
xchg
gs
fcomp
incl
and
mull
scas
enter
mov
mov
and
imul
push
cmp
add
cltd
daa
jle,pn
mov
sub
pop
add
bound
pop
sub
sbb
xchg
mov
mov
les
mov
cli
cmpsb
jmp
sub
pop
xor
cwtl
mov
sti
inc
push
out
into
ficompl
mov
xchg
fcmovnb
jae
push
fnstcw
cmp
popf
fisubl
sbbl
outsl
mov
xchg
pop
pop
mov
sub
and
cmp
insb
lahf
clc
inc
adc
dec
pop
dec
ficompl
movsl
stos
push
dec
popa
sar
hlt
rorb
mov
lea
pusha
fists
cmp
inc
adc
sbb
orb
ds
and
sub
xchg
shrl
fstpt
lahf
cmp
ret
xchg
pop
in
in
arpl
popa
inc
cmpsb
mov
cmp
js
xor
ds
subb
and
dec
add
adc
into
dec
out
sahf
and
xchg
enter
and
cltd
cmp
cltd
ficoml
popa
sbb
add
pop
xor
mov
gs
rcrl
ja
adc
and
jno
fwait
and
mov
add
ljmp
pop
mov
scas
call
mov
hlt
ret
inc
into
push
jmp
jno
cld
and
dec
sbb
mov
mov
sub
xor
inc
adc
fistpl
daa
sarb
sti
sub
dec
mov
cmp
cmp
jne
lods
cld
cli
decb
ljmp
push
call
cmpsl
mov
inc
lahf
jne
cmc
jno
xchg
test
pop
out
out
inc
mov
repz
cmc
test
test
fld
fsubs
mov
in
mov
jl
pop
paddusb
mov
xorb
cmp
mov
add
xchg
ss
cld
fidivl
pop
out
das
pushf
mov
add
mov
sarb
jne
mov
popa
sbb
mov
adc
push
and
cmp
test
dec
mov
addr16
roll
jbe
xchg
and
add
sub
or
imul
outsl
jle
loop
pop
test
in
inc
push
stc
jl
les
scas
mov
movsb
xor
dec
ret
nop
cmp
jmp
adc
rcl
sub
xor
sub
insb
scas
shlb
pop
jbe
outsl
xor
push
lods
mov
add
dec
scas
enter
mov
cmp
add
rclb
leave
cmpsl
imul
xchg
sub
sub
xchg
jno
pushf
je
stos
aad
cmp
stos
or
pop
adcl
es
mov
test
into
cmpsl
mov
sbb
adc
in
iret
insl
mov
jge
in
clc
pop
push
bswap
jbe
aam
fidivl
nop
outsl
add
hlt
xor
pushf
call
scas
ja
push
scas
or
lock
ja
in
dec
mov
test
add
test
jno
in
loopne
inc
jmp
les
lds
cltd
pusha
rcll
push
inc
mov
hlt
adc
add
mov
fbstp
dec
sbb
and
mov
es
push
daa
sti
lcall
rolb
add
js
jg
lahf
hlt
sti
xorb
gs
push
roll
push
sbb
aas
xlat
pop
pop
inc
aas
xchg
pop
xchg
sub
xor
mov
dec
daa
jmp
jb
mov
pop
into
push
loopne
xchg
jno
aam
ja
mov
sbb
or
int
movsb
or
sbb
xchg
aam
insb
cmp
fsubrp
addr16
inc
clc
jne
leave
jge
stos
inc
and
imul
insl
adc
mov
jecxz
push
clc
outsb
fs
push
ljmp
xchg
mov
xchg
sub
sub
jb
lods
cmp
sarl
cwtl
ja
push
andl
test
jle
xor
sar
xchg
mov
jb
insb
inc
mov
int3
lret
cmp
cmp
cmpsl
and
pop
shll
sbb
push
jecxz
inc
in
imul
std
addr16
xor
sarl
mov
movsb
test
add
or
push
iret
std
addr16
adc
sbb
mov
out
cmp
or
jg
aam
lods
push
test
xlat
icebp
mov
xorb
cmp
pusha
bound
scas
add
scas
cmp
ljmp
or
scas
mov
push
mov
mov
mov
ss
dec
pop
mov
loopne
mov
lahf
mov
mov
stos
sbb
inc
mov
popa
mov
adc
xor
pop
daa
add
je
andb
mov
out
vpslld
or
jg
sub
and
sub
xchg
call
call
into
pop
test
daa
push
mov
sahf
xor
cmp
movsb
in
mov
fsubrp
add
mov
push
out
or
sahf
cltd
fidivl
xor
aas
adc
dec
ret
ret
jl
stos
stos
aad
clc
in
xor
jl
outsb
insb
cmc
bound
ss
pushf
mov
cmp
pop
cmp
mov
movsl
jmp
and
jns
jl
adc
xchg
rcr
aaa
xor
loope
in
cltd
add
lret
gs
pop
jmp
adc
xor
xchg
out
adc
push
push
and
pop
repz
cmp
imul
push
push
push
das
xchg
adc
insl
test
fdivl
mov
push
pusha
and
icebp
std
fisubrl
xorb
insl
sbb
scas
out
pop
loop
push
mov
fdivl
cli
out
inc
fsubs
jo
lods
je
movb
fildll
add
fisttpl
push
pop
loop
ret
mov
xor
lret
adc
sbb
stos
push
mov
test
xchg
xchg
inc
rclb
fdivrp
mov
cmp
es
lcall
leave
push
add
lcall
cmp
adc
xor
cmp
or
cmp
cmp
icebp
cmp
fistpll
xor
clc
mov
movsl
cmp
aam
loop,pn
fld
pusha
popf
shlb
cli
pushf
mov
lcall
add
jbe
cmc
xor
cmp
sub
nop
push
xchg
cmc
xchg
or
stos
push
fmul
sbb
iret
add
push
push
les
rclb
decl
popa
ret
lahf
ret
lahf
in
andb
inc
jl
sbb
movsl
shlb
bound
xchg
shl
sub
add
lahf
cmpsb
call
jbe
in
jae
xchg
jge
sub
lds
cmp
sbb
cwtl
pop
inc
jns
dec
subl
inc
mov
mov
bound
mov
and
xorb
fdivl
xlat
pop
fisttpll
stos
pusha
push
pusha
lods
icebp
jnp
cs
int3
xor
daa
nop
jo
lds
out
sbb
pop
pusha
push
lods
mov
lahf
push
aas
mov
xchg
in
inc
and
mov
xlat
fnstsw
pushf
mov
bound
pop
fildll
add
ret
jbe
popf
dec
aaa
adcl
dec
pop
jmp
aam
stc
add
je
xchg
jno,pt
inc
mov
pop
fistps
ret
mov
lea
pop
ret
into
sub
das
fwait
sarb
movsb
subl
jne
pop
or
mov
ljmp
nop
pop
test
sbb
lods
lret
nop
xchg
orl
xlat
in
aas
lahf
add
cli
lahf
jl
and
adc
mov
xchg
pop
mov
dec
mov
popf
adc
mov
loop
and
adc
cmp
out
dec
sub
out
rcrl
push
dec
popf
iret
jp
xor
pusha
xlat
andl
je
lcall
popa
cltd
ret
mov
push
das
sahf
addr16
cwtl
jl
sub
push
sbbl
and
dec
div
pusha
xor
mov
add
insb
push
mov
sbb
cmp
repz
rcll
cli
cmpl
and
add
dec
add
cmpsl
aam
mov
mov
out
aas
mov
add
inc
xchg
cmc
xor
in
pop
dec
mov
fiadds
fidivl
pusha
scas
cmpsl
scas
sbb
and
aam
insl
mov
es
sbb
lods
pop
movsl
push
push
sbb
mov
push
jl
jnp
popa
andb
xchg
fdivrl
js
xor
addb
aad
jle
dec
stos
rorb
mov
test
cli
jle
sbb
cmp
psubusw
pop
mov
adc
test
push
xor
sub
ret
push
pop
jno
push
out
les
cli
aam
hlt
aaa
imul
or
sbb
mov
lock
jmp
inc
xchg
cli
mov
mov
sbb
lahf
pop
cmp
mov
xorl
movsl
out
mov
push
push
mov
inc
repnz
in
jecxz
xorb
int3
xor
jnp
xchg
push
ljmp
mov
fdivrl
lods
stos
pop
sub
push
inc
and
sub
ret
cmpsb
ljmp
mov
hlt
mov
xor
les
test
sub
xchg
in
in
ljmp
outsl
or
fnstsw
loop
pushf
xor
jo
cmp
ljmp
or
fs
and
mov
jbe
xchg
xchg
adc
push
sti
mov
mov
fs
sub
push
movsl
call
push
loopne
sbb
out
mov
push
mov
out
repz
xor
cmp
jp
dec
jne
fisubrs
jnp
xor
mov
stos
inc
incb
mov
sbb
lret
cmp
xchg
push
mov
dec
mov
and
out
cmp
daa
call
test
mov
dec
in
add
fwait
push
es
pusha
jbe
stos
leave
xor
repnz
mov
pop
ja
or
push
fisttpll
and
adc
out
xor
mov
in
nop
add
f2xm1
movsl
xor
pushf
mov
xchg
add
roll
dec
sub
sub
movsl
lds
ficoml
fs
pop
scas
pop
fwait
cmp
mov
mov
iret
std
imul
lock
clc
aaa
jmp
gs
sbb
mov
mov
arpl
adc
dec
enter
test
lret
push
and
insl
cwtl
push
mov
popa
je
popa
jnp
imul
pop
jb
xchg
push
xchg
and
mov
cmp
nop
pop
loop
addr16
subl
dec
ja
addr16
aam
or
inc
mov
lret
rcr
pop
pushf
jle
pop
addr16
mov
mov
loope
sbb
inc
stos
int3
xor
fwait
leave
xchg
lea
push
push
stos
cld
xchg
push
mov
scas
call
jo
push
out
enter
movsb
mov
jb
mov
or
popf
gs
push
test
subb
insl
pop
pop
popa
stos
inc
or
cld
scas
cmpsb
jle
mov
jl
jno
pop
adc
mul
mov
push
imulb
sub
incl
das
fsubr
lds
inc
shrd
hlt
adc
mov
dec
add
adcl
cmpsl
insl
mov
and
mov
jp
mov
mov
adc
mov
or
sti
cmpsb
push
adc
fimull
adc
fbld
xchg
lods
jmp
add
pop
jmp
and
cmp
and
pop
cld
mov
xchg
pop
dec
fsubrp
movsl
imul
jp
mov
mov
enter
xor
das
addr16
call
dec
cmc
pop
enter
dec
aas
pop
loope
insl
insl
mov
push
add
sbb
fidivs
xor
insb
fcmovu
test
pushf
sbbl
arpl
jne
lods
stos
or
rorb
mov
addb
pusha
popf
lods
loop
sub
pop
and
movsl
pushf
sub
fdivr
push
mov
mov
xor
insl
fldenv
ja
or
enter
es
js
mov
cmpsb
outsl
fdivl
lock
dec
or
xchg
dec
int3
pop
sarl
lcall
xlat
sbb
xchg
xchg
daa
xchg
pop
mov
dec
outsl
pop
add
mov
punpckhbw
sub
mov
cmpb
push
or
add
pop
sbb
mov
push
jbe
mov
jb
pop
flds
or
add
pop
fmul
xor
enter
out
imul
shl
pop
cmpsl
repz
cmp
in
nop
xchg
add
roll
dec
std
xor
pop
and
cmp
add
jne
xor
stc
mov
fildll
sbb
insl
mov
mov
lret
xor
xchg
mov
jae
jae
inc
movsb
fwait
cmpsb
in
dec
push
loop
sub
xchg
inc
out
sub
pop
divb
fldl
push
push
out
pop
stos
cmpsb
repz
mov
into
in
aad
cmpsb
cmc
negl
stos
repz
pushl
idivb
push
fidivs
mov
cmp
jnp
lahf
adcb
stos
pusha
add
aas
out
test
xor
fcmovb
in
cmp
ljmp
add
lods
jne
inc
and
lret
ds
outsb
sarb
mov
mov
loop
dec
xor
push
ds
dec
std
mov
xchg
cmp
ficompl
xchg
or
test
jg
xchg
mov
out
push
fistl
rolb
mov
nop
xor
push
or
mov
js
mov
call
inc
bound
fdivp
cltd
call
loopne
adc
inc
push
nop
out
cmpsl
xchg
push
mov
je
jl
inc
sbb
cmp
outsb
mov
test
xchg
iret
cmp
dec
adc
inc
div
insl
inc
fldenv
enter
rcrb
add
jns
pusha
push
ret
sub
sbb
call
mov
insl
mov
in
jl
imul
movsb
gs
jg
pushf
insb
leave
test
dec
fwait
out
mov
dec
cmpsb
push
xchg
insb
ss
push
clc
pop
xor
ljmp
cs
xorb
iret
sahf
sub
mov
sbb
lahf
push
xlat
outsl
roll
aam
mov
cmp
mov
inc
jno
xchg
push
jmp
lea
xchg
aad
cmp
adc
popa
mov
dec
addl
jp
xor
sub
or
xchg
jns
addr16
jbe
dec
inc
sub
popa
and
scas
sbb
inc
movsb
in
in
mov
call
insl
or
int3
and
mov
mov
ss
mov
fldt
push
push
cmc
mov
fildll
mov
jae
jo
scas
xor
punpckhbw
imul
dec
nop
cmp
cmp
push
rol
and
hlt
aas
daa
inc
xchg
sbb
sub
push
lds
push
fs
imul
insl
int
mov
or
ret
rorl
psrad
repnz
push
pusha
mov
add
mov
jge
pop
addb
push
les
mov
pusha
add
notb
lret
je
inc
aaa
aaa
es
es
ljmp
xchg
jl
jp
out
add
or
cltd
lcall
mov
clc
popf
in
loop
faddl
push
adc
lock
mov
jg
pusha
push
and
xchg
jmp
movsb
loopne
cs
nop
mov
dec
hlt
popf
mov
in
push
adc
push
mov
adc
adc
stc
mov
pop
jae
testb
pop
iret
add
inc
xchg
icebp
add
or
xor
scas
mov
adc
fidivrl
sub
xchg
testl
xchg
or
cmp
mov
stos
add
sub
adc
jbe
inc
lcall
xor
mov
fisubrs
or
sahf
adc
ljmp
js
jecxz
xchg
jle
push
inc
lock
stc
xchg
push
or
mov
out
push
jge
cs
mov
aaa
push
ss
adc
jbe
je
sbb
xor
dec
xorb
mov
mov
aam
mov
xchg
sarl
loopne
lahf
popa
add
or
xlat
inc
in
gs
adc
xlat
sbb
push
jno
push
shrb
bound
addr16
loop
test
ja
xchg
les
and
fstpl
xor
inc
add
cs
enter
mov
jg
jl
divb
jae
aas
mov
into
xor
jb
loop
sbbb
sarb
xchg
pop
ja
lds
sbb
fnstcw
mov
sub
xlat
fldcw
adc
hlt
jg
mov
push
aaa
cmp
pushf
dec
inc
idivl
push
sub
mov
jg
lods
stc
ret
addr16
cld
dec
popa
or
and
mov
movsb
pop
inc
dec
jo
fst
jae
or
mov
xchg
sub
fcomps
jg
mov
jl
pop
mov
adcb
or
pop
lret
stos
jmp
imul
adc
xchg
adc
push
inc
and
or
test
sub
mov
mov
jmp
dec
pop
scas
push
cmp
cwtl
lahf
mov
rolb
push
test
add
test
jmp
pop
push
iret
test
cmpb
and
dec
jno
fstl
rcll
rcll
leave
pop
mov
imul
std
jl
fisttpll
mov
sti
js
sub
pusha
pop
inc
scas
sahf
stc
sbb
and
sti
outsl
mov
arpl
jae
fisubs
add
int3
lea
jnp
adc
lcall
mov
xor
roll
xchg
mov
addr16
mov
push
aad
sub
cmovne
insb
or
pusha
mov
cmp
jns
iret
stos
fdivrs
push
and
pop
add
insl
in
jecxz
mov
test
inc
stc
clc
arpl
xchg
repnz
mov
lods
mov
inc
ja
popa
jecxz
push
addr16
cmp
sbb
sub
jmp
lret
mov
fadds
adc
rol
loop
sbb
pusha
xchg
push
jae
daa
sub
inc
add
mov
in
les
shrb
aaa
push
jo,pt
sti
icebp
mov
inc
mov
push
jmp
call
ss
sbb
sub
add
xor
nop
mov
inc
dec
sub
clc
mov
push
pop
lds
mov
popf
pop
mov
rolb
dec
sbb
inc
mov
test
mov
and
inc
sub
gs
jnp
ret
xlat
xor
or
mov
jp
fbstp
scas
and
sub
mov
push
and
mov
cltd
movsb
pop
adc
lods
mov
icebp
xlat
pop
and
lcall
aad
stos
inc
fidivl
mov
mov
jae
ret
mov
iret
mov
push
inc
bound
bound
imul
cmp
dec
dec
sti
add
outsl
pop
sub
xor
lods
ret
dec
sub
pop
bound
lahf
out
jb
mov
or
movsl
outsb
xchg
xchg
lods
cmp
not
loope
and
inc
jno
mov
fwait
push
rclb
push
push
xor
int
adc
gs
inc
mov
das
inc
pushf
lods
pop
aas
addr16
mov
inc
xchg
mov
stc
jge
imull
stos
outsl
sti
jl
sbb
xchg
xlat
jbe
cld
loope
mov
push
lret
pop
ret
sbb
pop
mov
mov
pop
push
scas
mov
movsb
cmp
jmp
pop
sub
jnp
inc
sbb
daa
sub
stos
call
jno
and
shlb
rorb
shl
sbb
js
cmpsl
insb
mov
and
ficoml
lret
add
scas
dec
sbbb
sub
les
int3
andl
cmp
push
cmp
lcall
push
xchg
and
pushf
xchg
outsl
sahf
sti
bnd
ficomps
jo
push
fcmovnbe
les
mov
cmpsb
mov
test
fsubl
xchg
xor
sbb
and
cs
sbb
mov
int
loope
cmp
cmc
mov
int3
aam
sub
bound
lods
push
pusha
or
stos
dec
dec
and
test
dec
dec
insl
aaa
call
push
sbb
jb
lods
mov
out
jns
clc
sti
xchg
mov
dec
or
aas
mov
dec
push
mov
sub
cli
ja
and
in
outsl
out
test
popf
cmp
sub
or
sbb
test
jge
bound
xorl
out
pop
arpl
loopne
stc
adc
shrl
sbb
pop
rol
pop
in
mov
add
mov
pop
mov
loop
mov
xor
push
or
loop
scas
sbb
imul
hlt
and
sub
fcoms
decl
sub
and
xchg
out
push
pop
and
pushf
mov
clc
and
aam
xchg
ret
pusha
mov
insb
lret
aad
into
and
push
mov
in
cwtl
nop
or
or
push
xorb
sub
xor
mov
push
fwait
jae
xchg
push
testl
out
or
dec
xchg
lret
lcall
mov
xchg
and
xchg
add
pop
mov
inc
sahf
movsb
decl
mov
jle
push
inc
sbb
test
dec
sbb
aaa
out
fxch
inc
lea
xor
aas
inc
enter
or
mov
mov
gs
arpl
push
js
pop
mov
rclb
into
imul
jno
pop
xchg
rcl
daa
mov
xchg
lock
pop
daa
mov
lock
cwtl
inc
sahf
push
adc
stos
lods
shrl
pop
and
adc
push
pop
xchg
mov
imul
ret
adc
test
jge
cld
shll
fwait
loop
xchg
or
and
loopne
add
push
pop
xchg
jo
iret
sub
pop
sarl
xchg
fisttpl
pop
pop
sahf
or
loope
testb
ljmp
lret
jno
into
es
or
add
aad
mov
jg
mov
sbb
and
fldcw
movsb
test
hlt
cmp
xor
push
push
mov
mov
roll
cwtl
jp
lods
nop
xchg
enter
cmp
fcmovnbe
xor
iret
cmp
rdpmc
call
lcall
cmpb
mov
adc
mov
stc
rclb
inc
inc
jne
lods
sub
mov
mov
lea
mov
lahf
push
loope
outsb
mov
mov
imul
cmc
outsl
scas
jmp
mov
mov
or
in
shl
push
cwtl
xchg
mov
stos
cli
lds
mov
pushf
mov
mov
hlt
or
xor
ret
sub
xor
adc
iret
sti
in
xor
inc
mov
dec
outsb
imul
testl
sub
addr16
rcll
gs
inc
xchg
and
addl
std
mov
mov
push
fsubl
and
loopne
es
fidivs
cmp
lcall
mov
pop
sbbb
fstps
push
std
fwait
adc
sbb
scas
ja
mov
cli
jne
icebp
mov
mov
mov
out
inc
inc
cld
mov
addr16
imull
addr16
mov
sti
adc
add
lock
fistpll
fldcw
push
repnz
rolb
pop
jg
or
in
cmc
lret
sti
fcomp
ds
loope
mov
aad
in
ss
outsb
adc
push
ret
or
repnz
inc
or
enter
dec
in
bound
push
je
mov
arpl
xchg
sbb
mov
mov
jle
outsl
cmp
je
sbb
addl
mov
mov
sub
cld
loope
mov
dec
add
je
push
sbb
jg
xchg
dec
xor
movsl
shr
addr16
xchg
or
sub
and
loope
or
xor
jo
outsl
sub
std
jmp
jbe
and
aad
jo
mov
in
jmp
dec
mov
out
aad
outsl
les
push
imull
sbb
outsl
dec
outsb
inc
push
in
ret
adc
jnp
mov
inc
push
pop
lods
pop
leave
add
or
jg
daa
es
cmp
cmp
nop
jno
push
push
sbb
outsl
pop
dec
mov
dec
aas
iret
mov
jnp
ss
xor
pop
push
mov
pop
shr
out
cltd
ds
fcoms
and
push
adc
and
outsl
loopne
lods
rorl
bound
movsl
sbb
inc
rcll
sub
mov
or
push
add
imul
out
mov
cwtl
or
scas
inc
inc
xchg
imul
scas
psraw
sub
ljmp
test
push
push
scas
xchg
dec
inc
outsb
mov
fsub
daa
fs
jbe
and
loopne
add
daa
pop
xchg
pop
mov
mov
pop
das
xor
loopne
enter
jne
mov
pop
cmp
push
mov
dec
and
lods
mov
scas
jecxz
push
jnp
xchg
cwtl
subl
fistpl
bound
sbb
pop
push
imul
sub
mov
or
rorb
cltd
push
jae
call
popa
loopne
shrl
xchg
jl
sub
scas
dec
insl
jl
mov
inc
sub
sub
cmpsl
dec
scas
sub
lds
inc
pop
shr
in
jbe
imul
test
mov
add
xchg
mul
popf
imul
sub
hlt
shl
dec
adc
push
fadds
mov
inc
jae
mov
fcompl
xchg
rcll
jp
cmp
sub
fnsetpm(287
test
test
jmp
push
cmp
push
mov
cld
dec
add
mov
in
jae
inc
push
cltd
test
sbb
mov
popa
lods
lret
sub
xor
fldenv
add
dec
push
mov
movsl
sub
xchg
andl
popf
clc
scas
xchg
mov
jge
into
les
mov
dec
repnz
jp
lret
jl
pop
rorl
jg
lahf
fstpl
addl
inc
int
pusha
push
jno
push
push
into
inc
pop
shl
pop
leave
lods
rolb
ss
fwait
cld
pop
hlt
cmpsb
pop
jl
mov
mov
mov
and
jbe
adc
or
add
add
adc
mov
jnp
cmp
imul
in
shll
icebp
push
jge
push
test
sbbb
imull
lea
inc
mov
xchg
ret
dec
xchg
sub
into
lea
lock
push
jbe
xor
pushf
ja
loopne
int3
mov
fdivl
jae
sub
and
mov
pop
packuswb
scas
insl
mov
test
lods
pop
jecxz
jl
dec
shrl
mov
sub
lret
mov
in
cmp
outsl
ret
aaa
ljmp
outsb
xchg
cwtl
loope
test
jnp
test
loop
cmpsl
call
push
cmpsb
push
mov
cwtl
jecxz
mov
jg
mov
pusha
aaa
frstor
roll
pushf
ror
mov
fistpll
xor
xor
dec
cmpsb
fs
outsl
scas
lahf
clc
fcom
es
inc
cld
jno
imul
fldl
nop
ljmp
flds
mov
leave
adc
mov
inc
es
jnp
hlt
mov
repz
xchg
xor
or
and
dec
xchg
inc
popa
outsl
test
pop
popa
xchg
sbb
dec
lcall
cltd
cli
jmp
or
aaa
fwait
pop
decb
out
ja
jmp
mov
jecxz
out
stos
mov
outsl
and
add
adc
out
cmp
test
in
data16
fwait
jo
outsb
sub
mov
add
pop
jno
outsl
movsl
mov
dec
scas
cmc
notl
sub
mov
fsts
jmp
imul
mov
out
ret
push
push
mov
gs
lea
lcall
xchg
movsl
stos
ja
or
arpl
idivb
fsubrs
and
jo
and
sub
jp
ja
dec
and
in
sti
popf
addr16
fdivrs
jb
pop
adc
inc
fcmovnu
loope
fisubrs
dec
fldcw
stos
fs
pop
lcall
and
dec
int
stc
outsb
inc
icebp
dec
xlat
cltd
ljmp
mov
enter
testb
push
loope
dec
stos
jno
ss
or
xchg
js
cli
test
enter
call
cmp
iret
inc
imul
mov
cmp
jge
xchg
push
sbb
jns
push
xor
pushf
add
jae
push
sbb
arpl
lods
cmpb
sub
adc
xorb
or
daa
sub
or
sar
cmc
add
movsb
xchg
cli
jp
sub
jo
push
jle
sbb
adc
jne
stos
and
icebp
cltd
mov
pop
fwait
jno
jne
mov
loopne
insb
push
fidivl
test
es
cmp
pop
les
sbb
adc
dec
pop
jne
pop
sub
jae
icebp
cltd
inc
mov
sub
insb
xor
xor
jle
aas
je
data16
jb
jbe
inc
or
xchg
mov
stos
mov
mov
cmpsb
ret
gs
xor
aaa
fdivr
sub
aaa
mov
out
push
jnp
mov
rorl
and
stc
daa
insb
in
mov
nop
in
mov
pop
sbb
mov
bound
ficomps
fwait
rorl
in
fimuls
cltd
insb
inc
and
jecxz
push
sub
mov
mov
xor
sub
add
ljmp
xorl
jo
mov
out
or
scas
cmp
neg
mov
cmpsb
out
fisttps
adc
mov
dec
aaa
cmp
mov
ds
lock
xchg
inc
pop
mov
and
out
ret
xchg
sbb
jnp
add
ficoms
iret
or
mov
push
movsb
xchg
mov
mov
aas
fstpl
mov
mov
icebp
dec
cli
mov
lahf
xor
inc
cli
sub
pop
mov
cld
int
jmp
jns
fsts
sbb
or
push
add
fisttpl
mov
xchg
imul
insb
insb
nop
push
cltd
jno
out
pop
aaa
leave
int
icebp
inc
mov
mov
lods
rcll
sub
movsl
pushf
arpl
popa
jbe
xchg
test
push
test
adc
lods
inc
cmp
insb
jno
mov
pop
sbb
or
cmp
sar
sub
ds
stc
push
int
lret
mov
out
dec
pusha
xchg
fisttpl
jbe
lahf
add
enter
dec
push
nop
jbe
faddl
jns
sub
arpl
js
sbb
cli
pop
rclb
lahf
test
flds
dec
and
and
mov
leave
loop
std
int
mov
imul
adc
lods
pusha
or
into
insb
push
lcall
mov
mov
subl
test
pushf
xor
xlat
dec
push
int3
testl
adc
loop
sub
cmpsl
mov
cwtl
les
push
roll
xor
dec
cmp
subb
das
mov
in
mov
adc
data16
ja
in
es
movsl
iret
shlb
rorl
and
push
jo
inc
dec
das
lcall
adc
ss
shlb
dec
je
fdiv
jo
jb
enter
out
fisttpll
push
inc
jno
xchg
pop
jnp
mov
cmp
std
ret
dec
scas
sbb
aas
sub
fsts
std
and
ret
test
movsl
sbb
or
nop
adc
and
pop
rcl
push
mov
iret
ja
adc
loope
mov
and
int
adc
sub
iret
cmp
frstor
mov
in
dec
pushf
and
mov
pop
jmp
sub
add
insl
ja
sub
loop
pop
pavgw
movsb
hlt
jl
or
fldt
mov
scas
mov
ss
test
dec
and
ficoml
test
mov
mov
push
mov
add
mov
ds
and
pop
add
adc
in
nop
fnstsw
out
adcb
jge
lods
stos
adc
pop
adc
xor
stos
jecxz
adcl
or
add
cmp
cmc
stos
les
orb
sbb
inc
cmp
incl
adc
jle
movb
and
mov
mov
adc
dec
pop
repz
or
imul
lret
dec
mov
cs
nop
imul
push
scas
adc
dec
and
push
fdivr
pop
push
clc
add
sub
fiaddl
and
imul
dec
cwtl
pop
subb
andb
pop
pop
xor
aaa
outsb
adc
pop
test
js
jbe
or
or
andb
xor
push
aaa
lahf
cmpl
aad
pop
sub
adc
jp
or
push
pusha
sbb
and
lods
fists
enter
adc
xor
daa
mov
xchg
inc
push
jne
pushf
mov
decl
lock
adc
arpl
and
loope
mov
jae
xchg
inc
dec
jae
mov
mov
xchg
xchg
outsb
in
and
mov
orl
jle
mov
cmp
jecxz
inc
and
mov
push
int3
out
and
popf
aad
mov
pop
push
mov
adc
mov
rep
daa
jle
jne
fs
pop
data16
sarb
popf
sti
dec
clc
and
add
inc
xor
ljmp
sbb
push
daa
adc
mov
lods
mov
sbb
inc
xchg
loop
mov
mov
push
rcrl
stc
xchg
repz
push
pushf
dec
cmp
mov
or
sub
ret
mov
addr16
or
or
aaa
ljmp
mov
fsubrs
pushf
inc
lcall
sbb
push
pop
xor
rorl
cmp
movsl
sub
loope
in
cmp
aaa
pop
dec
inc
xchg
adc
mov
or
xor
cmp
push
andl
loop
or
aad
jg
mov
jae
mov
pop
or
cmp
mov
add
push
adcl
test
pop
add
push
jo
icebp
adc
lcall
popf
sti
jnp
cmpxchg
in
jg
jbe
pop
add
add
inc
aad
dec
inc
xchg
xchg
mov
sub
fwait
xlat
xchg
xchg
inc
das
fsubrp
xchg
jge
test
jmp
call
popf
in
addr16
jmp
mov
xor
xorl
pop
ds
sub
mov
xchg
in
ffree
xchg
lcall
sbb
mov
imul
pop
inc
rolb
stos
icebp
ds
sbb
xchg
ja
add
or
add
dec
jge
and
lds
jo
xchg
xchg
lods
test
mov
lret
aad
adc
xchg
fisubl
fidivrs
lock
scas
fidivrs
enter
push
mov
mov
cli
std
push
into
sti
push
inc
mov
and
push
jnp
xor
test
jnp
cltd
xlat
or
pop
hlt
lock
mov
dec
mov
mov
xchg
pop
data16
popa
add
out
pop
call
jecxz
repz
dec
sub
std
lcall
aam
add
into
out
inc
fbstp
sbbb
bound
lret
adc
rorb
cwtl
hlt
xchg
jmp
movsb
pop
and
push
shr
push
leave
xchg
mov
cmc
jno
movsb
adc
pop
lret
lods
cmovle
add
loop
pop
or
xchg
bound
mov
pop
push
je
test
jbe
push
je
ret
cltd
mov
push
sbb
push
lock
lea
jmp
mov
sbb
sbb
fwait
sub
out
xchg
fcoml
jbe
push
mov
out
adc
and
xchg
and
in
jne
xchg
scas
shr
dec
cs
push
xchg
push
adc
jge
mov
frstor
mov
insl
inc
cmc
cwtl
xchg
push
mov
cld
dec
loop,pt
and
cwtl
dec
ficoms
iret
xor
mov
jb
push
sbb
andl
clc
mov
pop
sub
push
in
pop
ret
ret
decl
jns
pusha
cmp
ja
push
neg
int
lcall
cmp
ret
xor
scas
push
push
mov
mov
push
cmp
mul
mov
mov
jecxz
cmc
mov
mov
ss
cmc
cmp
mov
ror
inc
rcr
movntq
stos
cmpsl
dec
sbb
lock
mov
pop
inc
sub
push
adc
mov
sub
leave
push
in
and
mov
mov
scas
inc
nop
mov
dec
out
xor
rcrl
dec
enter
testb
cmp
mov
xor
jecxz
jo
sub
inc
mov
cmp
sub
or
fstpl
adc
push
push
adc
adc
rcr
sbbb
dec
or
jg
repnz
ret
push
stos
or
mov
pop
sub
xor
dec
or
pop
push
and
and
fcmovnbe
fisttpl
xor
jbe
and
stc
mov
add
xor
rcll
out
std
sub
ljmp
or
lret
leave
fwait
daa
jmp
cmpb
imul
and
inc
daa
nop
call
fnstsw
mov
inc
inc
icebp
xor
arpl
cmp
push
out
test
fs
inc
sub
add
adc
adcl
jo
jp
out
or
and
sbb
stos
fstps
aaa
mov
popf
xchg
imul
push
cmp
fistps
icebp
fsubrl
insl
mov
adc
dec
push
and
int
movsb
cs
int3
int
stos
lcall
dec
fwait
mov
les
insb
mov
inc
sbb
outsb
adc
adc
aas
in
imul
fldl
psubb
sti
xorb
xchg
push
cmp
dec
jae
fimuls
or
jnp
fld1
cmp
aas
js
mov
ss
clc
pop
mov
rorb
and
mov
enter
cmp
gs
push
pop
or
jg
push
push
inc
sbb
aaa
stos
imul
xor
sbb
lods
push
push
dec
pop
jb
leave
push
outsl
jg
sbb
scas
int3
insl
push
add
fdivs
lahf
cmpsb
ss
fs
lret
into
jbe
mov
ss
fucomi
xchg
inc
pusha
push
and
and
cld
xchg
or
xor
xor
sub
jno
subl
repz
mov
sub
loop
in
xor
loope
stos
testl
xor
lret
cld
das
adc
fmull
lret
je
stc
xor
add
int3
sbb
jbe
test
mov
sbb
lods
mov
fs
out
mov
mov
scas
sub
push
xchg
add
or
cwtl
push
or
dec
inc
rcrl
sbb
pop
shll
pop
in
cmp
push
jb
dec
add
movsb
je
mov
xor
cltd
push
ss
push
inc
jo
mov
push
jle
cwtl
sbb
dec
pop
dec
xchg
testl
loop
aad
repz
fs
cltd
popa
movsb
inc
add
xor
xchg
push
jb
pop
out
push
andl
sti
sub
outsl
cmc
es
shll
mov
mov
das
push
sahf
fisttpl
lret
cmpb
or
mov
int3
fldl
aaa
and
cwtl
mov
fistl
mov
es
or
pop
pop
dec
jae
in
cwtl
jno
dec
adc
xchg
mov
or
lds
xor
mov
jo
ds
iret
mov
mov
ud0
sbb
pop
notb
add
cltd
pop
sbb
test
cmp
xor
inc
loopne
sub
and
push
ret
inc
shlb
jnp
lods
xchg
dec
pop
xchg
add
cmpsb
xchg
mov
add
add
pop
dec
scas
in
call
test
inc
jg
push
out
adcb
test
push
aam
sbb
inc
not
lock
push
inc
adc
jbe
jmp
adc
add
nop
jmp
clc
jmp
ret
out
shl
sbb
shll
ret
lea
out
inc
and
jg
shrl
jno
mov
punpckldq
or
pop
xor
dec
push
les
sbb
lret
jnp
rorl
in
adc
pop
pop
cs
dec
aas
mov
jle
xorl
out
mov
jg
sbb
xchg
and
pop
outsl
push
cltd
je
lods
add
jnp
out
push
pop
es
bound
dec
in
aad
ret
aam
pop
ljmp
insb
sbb
lock
xor
test
ss
pop
push
and
xchg
negb
inc
pop
movb
fnsave
pop
popf
mov
xchg
mov
popa
rclb
and
ja
clc
jne
sub
movups
jge
js
adc
aad
popf
insl
pop
mov
and
jae
inc
or
roll
mov
nop
mov
loopne
les
pop
sbb
stos
fisttpl
cli
inc
cmp
mov
cs
ss
mov
out
mov
or
leave
push
mov
fs
sub
fsubrl
cmp
lcall
pop
xor
jge
push
lret
and
pop
popf
and
xor
mov
packsswb
pop
jg
xchg
add
push
or
pusha
sbb
and
fisttpll
pop
and
sub
nopl
mov
add
sbb
ss
clc
dec
fisttps
das
and
mov
fcoms
loope
xchg
cmp
sti
adc
aas
push
adc
xor
jo
call
mov
sbb
std
les
xchg
jmp
repnz
inc
daa
and
and
lcall
sub
push
pop
stos
adc
adc
enter
xchg
mov
fiaddl
and
clc
mov
aad
dec
push
jae
test
ret
les
lea
pop
mov
adc
leave
popa
xor
cmp
fldl
mov
fcoms
es
add
enter
arpl
in
dec
inc
fucomip
loop
out
sbb
mov
xor
sbb
adc
pop
or
cwtl
movsl
cmpsl
lret
push
push
lds
jb
rcl
push
jecxz
sub
mov
xchg
scas
adc
inc
insb
test
add
xor
jmp
sub
jmp
xchg
pop
imul
xchg
push
xor
mov
push
pop
enter
std
mov
cli
adc
add
cltd
pop
cmp
ss
jne
xor
mov
pop
jle
jmp
dec
bndstx
rclb
js
dec
jmp
pusha
inc
mov
sub
daa
xchg
pop
pop
cmp
pop
xchg
xchg
subb
jl
or
lea
rcl
inc
data16
mulb
jno
inc
jne
loope
in
xorb
call
mov
mov
inc
cmp
sahf
mov
sub
push
sbb
pusha
ja
jl
xchg
sbb
loope
xchg
loope
xor
insl
mov
sub
and
pop
jo
inc
dec
stc
out
into
pop
pop
sub
dec
mov
push
jb
ffreep
pop
pop
jp
and
mov
pop
std
popl
jl
sti
fsubs
cli
ljmp
xor
mov
mov
int
dec
xchg
aas
mov
xchg
sub
push
add
cmpsl
sub
or
loop
ljmp
push
addr16
adc
jo
aam
fs
enter
aaa
sti
es
ss
sbb
iret
repnz
repz
data16
sub
shlb
add
test
mov
lcall
stc
and
mov
mov
scas
push
mov
xor
sbb
add
mov
cli
mov
jmp
dec
int
inc
cmp
xchg
push
sbb
test
jae
push
lret
cmp
out
repz
leave
sub
inc
pop
gs
mov
mov
xorb
jne
ss
add
out
cmc
pop
xor
push
clc
mov
add
mov
popa
movsl
lods
mov
into
jle
xor
sbbl
push
push
push
hlt
into
dec
sarl
jbe
xchg
or
sahf
pop
mov
cmova
mov
sub
jae
pop
mov
add
cmovo
jo
popa
mov
mov
clc
in
cmpsb
and
mov
ds
leave
ljmp
and
inc
arpl
dec
push
outsl
sub
lock
xchg
pop
jb
nop
rorb
mov
cmp
mov
lea
rolb
rorl
std
pop
hlt
ds
in
xor
mov
ds
enter
push
in
rorb
and
jae
pushf
lock
aaa
cli
add
in
mov
push
out
lret
mov
xor
jbe
shll
pop
stos
jl
fs
jae
jl
loopne
and
pop
adc
mov
adc
outsb
or
mov
add
mov
ret
divl
in
notb
and
mov
cmp
repz
int3
mov
xlat
ljmp
repz
pop
sub
pop
xor
add
cltd
ljmp
add
repnz
push
jge
insb
mov
mov
xor
pop
das
es
mov
lcall
mov
fnstenv
lcall
mov
stc
or
inc
shl
mov
rol
in
call
sub
aam
xchg
sbb
xchg
cmp
pop
je
fwait
aas
mov
xchg
xor
sar
loopne
sub
outsb
push
add
add
mov
mov
das
inc
sbb
imul
or
icebp
js
xchg
sbb
cmp
test
xchg
aas
sbb
adc
jg
sbbl
sbb
dec
testl
ss
xor
mov
pop
mov
das
fnsave
nop
cmp
mov
lcall
shrl
aam
cli
jecxz
clc
lds
popf
gs
or
add
out
jbe
in
push
dec
pop
std
xchg
add
stos
add
insb
jge
ror
and
push
pop
int
mov
xchg
cmp
pushf
out
mov
jg
mov
mov
jmp
aaa
dec
lds
rcll
jp
adc
jl
cld
fiadds
es
sbb
lds
lahf
cltd
mov
test
mov
in
jmp
les
repz
ss
idivl
dec
jmp
push
xor
sub
cmp
push
ljmp
cmpsb
cltd
mov
shl
ja
mov
aaa
aaa
lcall
mov
cmpsb
mov
adcb
imul
iret
cs
dec
jae
push
sub
iret
repnz
sahf
adc
test
jmp
push
dec
sbb
sub
jl
aaa
and
cmp
pop
mov
xchg
mov
insl
jo
xorl
int3
bound
lods
mov
sahf
mov
inc
mov
sbb
jne
jl
push
test
lcall
jno
mov
arpl
cmp
push
xchg
sarl
push
int
ds
mov
popa
inc
clc
inc
add
dec
pushf
dec
test
lock
call
loopne
mov
dec
call
lret
jmp
push
lds
fs
jnp
jg
aad
jle
xlat
and
mov
pusha
jmp
xlat
pop
sub
mov
fcmove
mov
data16
mov
lahf
es
mov
lret
imul
pop
mov
pushf
inc
into
aad
pop
test
cltd
testl
xchg
pop
scas
imul
enter
cmp
lods
loopne
push
xlat
gs
aam
sub
in
jae
mov
jno
stc
jle
movsl
gs
leave
sbb
cli
addr16
sti
mov
xchg
mov
xor
xor
iret
push
out
jae
aas
rcrb
into
lcall
add
mov
stos
push
iret
push
gs
adc
fwait
aas
and
fsubrp
fs
xor
daa
lret
jp
lret
xlat
cmp
js
shrl
pop
sti
mov
cld
enter
xchg
dec
jmp
ss
jge
stc
pushf
in
aaa
mov
stos
es
lock
movsb
les
dec
pop
stc
fcomps
push
xchg
stos
pop
xchg
dec
cs
dec
loopne
imul
mov
jmp
bound
mov
add
xor
fsts
push
lods
or
aaa
jbe
xchg
fistps
hlt
negl
cmp
cmp
cmp
pop
and
jg
in
mov
lea
jl
or
ja
jecxz
stos
arpl
call
add
inc
aaa
sahf
adc
xchg
movsb
in
jecxz
aas
jge,pt
scas
ss
dec
add
mov
push
mov
aam
mov
out
mov
push
sarb
stos
lds
sub
mov
fcoms
testb
pop
xchg
js
inc
xchg
cs
mov
outsb
xchg
pop
divb
jg
xor
jecxz
sarb
xchg
add
mov
xchg
cmc
mov
mov
fimull
in
loop
int3
test
mov
int
gs
mov
cli
and
je
int3
add
sbb
aaa
xor
jmp
call
mov
sbb
sub
cmpsl
insl
mov
clc
std
cmpsb
sub
hlt
into
in
lret
adc
mov
dec
push
pop
aas
mov
mov
xor
shl
lock
xor
push
pusha
cmp
xchg
pop
cmc
sbb
out
scas
insb
mov
mov
loopne
mov
inc
inc
mov
inc
movsb
sbb
sub
test
cmp
out
mov
pop
xchg
push
das
or
mov
jo
push
es
add
xchg
add
push
xchg
nopl
dec
addr16
outsb
mov
jmp
dec
xor
mov
aam
movsb
daa
aaa
aad
pop
js
sub
imul
mov
stos
test
and
sub
mov
add
xchg
pop
push
xlat
pop
vphadduwd
mov
xor
xor
in
inc
movsb
sub
idivb
pop
mov
frstor
fstl
jnp
frstor
iret
pusha
bound
into
std
or
fisttpll
aad
or
sub
fnsave
dec
leave
jl
push
insb
push
jle
dec
shr
mov
lods
lods
jnp
aam
sarb
js
fbstp
sbb
sub
and
dec
mov
adc
adc
out
jae
cmp
pop
outsb
dec
test
iret
mov
outsb
push
push
test
xchg
in
nop
int3
cmpsl
add
mov
inc
mov
adc
jnp
pop
and
push
xor
lds
sarb
mov
inc
cmp
xlat
xor
cmpl
fs
lock
inc
or
in
jb
dec
mulb
push
mov
test
or
sbb
and
aaa
mov
xchg
mov
sub
push
and
fldl2t
and
xchg
inc
xchg
add
into
insl
ret
xlat
push
insb
pop
repz
mov
jge
xchg
mov
sub
adc
cmp
jmp
enter
aaa
mov
in
pop
fdivs
cld
mov
inc
pop
push
test
sti
mov
scas
pop
iret
jo
adc
mov
or
ret
mov
cmpsl
xchg
cmp
xor
mov
cmp
cs
arpl
cmp
or
sahf
jno
mov
mov
adc
pop
jne
xor
hlt
in
test
push
dec
and
sub
lahf
mov
paddsw
rorl
inc
or
aaa
arpl
mov
insl
push
or
outsb
xchg
add
push
mov
pop
or
repz
jbe
iret
inc
stc
and
int3
push
pop
popf
mov
gs
stos
mov
out
stos
out
jl
icebp
mov
or
out
and
push
xor
push
pop
pop
push
jl
xchg
sbb
dec
popf
aad
fucomi
cs
loopne
ljmp
push
or
lret
dec
arpl
jbe
or
outsl
popf
xor
add
pop
mov
stos
xor
xchg
add
lea
sbb
popf
das
xor
fimuls
cmp
scas
sub
js
cmp
xchg
fmuls
out
cmpb
inc
out
mov
sbb
lahf
pop
shl
or
push
and
xor
in
sbb
mov
or
inc
dec
icebp
fcoms
mov
fbstp
mov
mov
mov
jne
or
into
mulb
lods
add
mov
loop
daa
cmp
inc
jns
mov
stc
mov
fisttps
subl
aaa
xchg
push
dec
scas
push
push
dec
pop
push
jl
test
test
pop
mov
xor
repz
sub
stos
fcmove
cmpsl
pop
cmc
movsb
push
and
into
pop
push
icebp
xchg
mov
cltd
lods
cmp
fistpl
out
test
cmpsl
in
lods
mov
arpl
in
xchg
aam
mov
je
adc
mulb
scas
xor
jbe
pop
xor
lret
push
loopne
xchg
xor
adc
mov
sub
aam
popf
and
test
xorb
mov
cmp
je
jbe
mulb
shl
pop
cmpsb
dec
xor
adc
arpl
mov
add
jns
leave
mov
mov
add
jnp
inc
inc
imul
mov
inc
xchg
dec
push
outsb
data16
lods
push
cld
mov
or
pop
lods
addb
mov
dec
lods
test
jmp
test
pop
mov
int
lcall
xor
inc
push
xorb
add
mov
and
mov
cli
xchg
movsl
jo
pop
jns
and
leave
add
jbe
imul
outsb
test
adc
sub
dec
fidivrl
fcomps
jo
mov
jb
ret
add
sbb
das
jecxz
pusha
or
clc
sbb
cmpsl
enter
add
push
int3
lods
pop
add
push
out
cmp
push
sub
dec
loop
rcl
mov
pop
ret
jecxz
daa
mov
imul
mov
mov
cmc
mov
pop
jno
jle
sub
mov
mov
xchg
add
and
pop
fidivs
je
and
nop
dec
inc
out
push
push
aad
jmp
adc
pop
loopne
push
subl
fimuls
adc
mov
repnz
iret
dec
push
push
leave
add
xchg
cwtl
xchg
rcr
and
in
aad
stc
stc
sub
add
adc
mov
lods
or
xor
mov
or
pushf
add
lods
push
add
fwait
pop
loope
xchg
lds
dec
mov
adc
adc
adc
jae
es
and
push
test
leave
jne
filds
mov
scas
lcall
movsb
cld
jns
pop
or
mov
cmp
fisubrl
loop
fs
dec
push
inc
xor
mov
pop
cmpb
pop
push
sub
sahf
pop
jge
mov
or
imul
sub
sbb
jnp
and
je
jbe
daa
inc
out
mov
xchg
pop
pusha
in
aad
inc
jb
adc
sub
je
cmc
mov
xchg
jle
inc
sbb
pop
popf
jle
jp
mov
mov
jmp
push
xor
sub
sti
gs
nop
lcall
test
scas
xchg
xor
shrl
sub
scas
outsb
xchg
repz
mov
sti
jp
mov
mov
add
inc
out
push
lods
adc
stos
scas
arpl
cmpsl
adcl
mov
sbbl
rorl
pop
dec
jo
lret
mov
jo
cmp
cld
pushl
popa
negl
fnstsw
shlb
mov
cmp
js
inc
dec
xchg
fsubl
fadd
int3
inc
jmp
test
ret
inc
js
test
nop
xchg
outsl
mov
jae
enter
imul
pop
xor
mov
addr16
mov
mov
fidivrl
pop
jno
ficomps
out
or
sbb
mov
sbb
sub
enter
test
lods
dec
jp
test
xchg
push
inc
outsl
jbe
jne
and
test
out
pop
xchg
stc
ficomps
addb
ja
mov
mov
dec
mov
cmp
pop
test
std
aas
dec
leave
call
add
adc
xor
or
mov
mov
pop
inc
fldenv
mov
scas
cmp
negl
dec
sbb
dec
xchg
lret
pop
rcl
cmp
push
repnz
pushf
fwait
fwait
jge
add
js
bound
scas
cli
movsl
mov
stos
or
jno
pop
dec
push
shl
dec
push
xor
das
and
mov
mov
and
sbb
mov
mov
scas
mov
pop
inc
pop
test
xchg
in
fdivrl
xor
adc
jge
outsb
rcl
lahf
lea
sti
les
mov
mov
int3
xchg
pop
in
rol
aad
lret
repz
and
inc
in
sahf
and
jmp
cmpsb
fnsave
sysenter
mov
cmp
and
mov
int
xor
rcl
and
adc
loopne
fcoml
cltd
inc
out
test
jle
insb
mov
adc
sbb
leave
dec
fadds
or
aad
cmp
pop
dec
call
out
mov
jno
xor
dec
or
cli
pop
or
gs
dec
sarl
lea
and
jns
mov
push
dec
std
clc
arpl
dec
mov
shrl
jns
push
xor
xchg
pop
ficoml
push
xor
in
lahf
pop
xor
pop
fildl
jmp
fistpll
xor
idiv
sbb
or
cmp
out
fldcw
mov
imul
jo
lods
and
mov
cmp
push
ret
cmpl
xor
aad
hlt
push
ret
xchg
xchg
imul
test
sub
lcall
pcmpgtd
mov
scas
push
fwait
test
jns
pop
inc
test
das
inc
mov
xor
lods
adc
les
push
cmpsb
rcll
or
dec
mov
in
cmc
shlb
loope
dec
mov
or
movsl
pop
mov
iret
jae
hlt
push
xlat
xor
in
es
imul
jge
fcompl
dec
lods
pop
movsl
insl
inc
mov
test
rolb
inc
out
push
sti
or
aaa
neg
es
js
cli
mov
sub
cld
push
add
dec
test
jns
push
stos
and
or
out
mov
in
int
lcall
mov
or
pop
lret
lret
jbe
mov
xorl
jmp
xchg
cltd
imul
and
in
lock
rcrb
subps
fidivrs
iret
pop
imul
cmc
popaw
mov
in
push
mov
mov
inc
mov
stos
mov
add
mov
xchg
cmpsb
and
mov
push
imul
add
adc
push
pop
add
aad
rorl
fs
push
popl
js
jl
aas
inc
cmp
and
xchg
nop
cmp
xchg
push
mov
inc
adcl
ja
mov
fwait
push
add
ja
call
stc
div
jp
outsb
jg
add
shrl
push
xor
inc
fcoms
fisttps
sldt
fisttpll
lock
mov
push
das
in
test
inc
out
mov
push
mov
push
or
outsb
dec
les
ja
sub
xor
int
test
mov
pop
dec
insw
lods
sub
mov
add
fildl
in
adc
outsl
push
xchg
rcrb
xchg
fbld
addr16
dec
mov
pop
xchg
stc
das
sub
jle
addl
sub
mov
bound
repz
inc
dec
loop
test
dec
shll
push
push
mulb
jecxz
cmpsb
shr
rolb
test
out
jb
push
in
jne
cli
jp
hlt
lods
inc
in
wrmsr
arpl
stos
out
push
pop
push
mov
push
hlt
cltd
mov
cmp
sub
sahf
or
in
test
sub
push
jg
push
adc
xchg
ja
lret
xor
out
sbb
mull
fucom
lods
ret
ja
mov
and
pop
inc
jle
sti
stos
scas
lret
rcrl
xchg
fwait
push
out
jecxz
or
jnp
push
or
dec
rorl
mov
cmp
xchg
sbb
arpl
jbe
mov
or
outsl
adcb
or
rol
gs
inc
pop
push
das
sbb
mov
push
mov
mov
lea
jbe
fistps
in
mov
sbb
mov
aas
ss
in
dec
ss
xchg
pop
ss
xor
mov
rorb
pop
lds
cmpsl
jb
fiaddl
mov
xlat
push
mov
test
test
cmp
push
cmp
lods
or
enter
aam
mov
cltd
and
or
or
inc
ret
fidivl
add
out
adc
mov
mov
adc
and
aad
jnp
or
push
xor
or
dec
xchg
scas
in
sub
add
fildl
arpl
lcall
jae
mov
sbb
shl
jmp
and
in
fs
dec
clc
test
scas
int
adc
cmp
jo
js
add
mov
dec
leave
adc
fstpl
in
xchg
mov
rcrl
add
mov
push
movsb
mov
les
mov
jg
scas
sub
adc
or
mov
and
shrl
xor
sub
aaa
je
outsb
mov
daa
sbb
imul
popl
pop
mov
dec
jbe
fildll
xor
pop
nop
out
cmpsl
mov
stc
sti
into
fmul
jbe
pop
jp
xchg
stos
or
push
pop
inc
cmpsb
cmp
xchg
pop
fldt
movsb
pushf
and
mov
jg
lods
punpckhwd
cmp
aam
pop
lods
out
xchg
out
clc
rorl
push
dec
daa
ret
and
jo
fnstcw
dec
inc
jmp
and
cld
sbb
fadd
xchg
leave
and
add
adcl
xchg
test
lahf
in
xor
inc
sub
xor
inc
daa
pop
dec
dec
adc
cmp
pop
xchg
pusha
sti
aad
out
cmc
mov
lret
sbb
std
jae
scas
lods
imul
inc
sahf
les
fimuls
mov
jo
out
lods
movsb
xchg
mov
out
push
xchg
cmp
ss
cs
xor
dec
repnz
and
pop
fdivrs
fsubs
addr16
xor
out
and
pusha
in
jecxz
test
lock
mov
mov
iret
fisubrs
mov
push
xchg
adc
xor
dec
in
xchg
dec
cmc
mov
or
sbb
pop
or
in
clc
dec
lcall
into
cmp
addr16
mov
xor
daa
and
loopne
lret
xor
in
dec
mov
mov
pop
ret
push
pop
jecxz
sub
xchg
inc
cmp
xor
and
xor
popf
pusha
adc
shll
shll
aam
cwtl
and
jne
cmp
in
sub
in
add
test
sub
xchg
fsubp
pop
cli
dec
repz
idiv
xor
sar
or
or
cs
aas
push
sbb
repz
stos
jae
test
sbb
dec
dec
out
imul
sub
mov
sub
rclb
add
xchg
inc
dec
cmp
lcall
mul
mov
int
mov
xchg
or
movsb
sbb
out
adc
or
xchg
iret
push
mov
push
dec
fildl
pushf
out
xchg
ret
jmp
push
sub
loop
sbbb
xchg
cs
push
cmpsb
inc
or
cmp
sub
jne
enterw
dec
mov
fs
xor
lock
sbb
pop
cmpl
jle
or
outsl
mov
sub
jge
loop
shrl
mov
lahf
inc
test
repz
pop
int3
adc
mov
ret
popl
insl
stc
xchg
and
sti
pop
popa
mov
jl
push
aaa
out
xchg
cmp
fs
test
das
sub
push
pop
mov
and
dec
push
ret
imul
sub
mov
jmp
daa
or
lcall
or
lea
pushf
mov
lea
mov
pop
add
stc
jns
jo
and
test
sbb
jle
xor
ljmp
mov
leave
mov
add
push
out
jnp
push
popf
mov
xchg
fisubl
pusha
addr16
mov
adc
insl
nop
mov
dec
pop
dec
jle
pop
cmp
fs
or
scas
pop
lcall
jl
mov
sub
push
fsubs
ss
movb
pop
add
mov
xor
xor
dec
xchg
pop
sub
pop
or
mov
loopne
sub
ret
addr16
adc
adc
in
or
aad
add
ss
inc
psubusw
xorl
sbb
roll
in
outsb
push
xchg
inc
xor
in
fistpl
sbb
xor
pop
push
push
mov
xor
es
xchg
xor
ror
orb
fdivs
outsb
lock
enter
pop
inc
pcmpeqw
imul
xor
loope
push
mov
ds
cli
imulw
jno
adc
xchg
call
popf
xchg
adc
test
mov
repz
idiv
push
ficompl
sub
popf
data16
mov
outsb
int
fildll
or
add
testl
push
icebp
cmp
push
movsl
dec
mov
pop
mov
ficomps
fadds
or
in
ret
ds
pop
testl
lcall
and
stos
pop
and
mov
inc
nop
xchg
pop
sbb
pop
jno,pt
scas
dec
sbb
sub
pop
mov
decl
subb
add
pop
lcall
add
pop
mov
rorb
loop
test
hlt
xchg
in
lods
out
sbb
jle
repz
outsl
negl
dec
daa
lock
mov
das
or
cli
in
shlb
fsubrl
and
loopne
nop
fucomi
or
scas
outsl
push
movsb
or
mov
outsl
repnz
sti
mov
iret
push
stos
mov
mov
mov
mov
test
push
icebp
xchg
pop
outsl
pop
mov
nop
sub
and
xchg
sub
aad
xchg
scas
sub
push
sub
cltd
pusha
mov
or
add
lds
jo
mov
stc
inc
imul
loop
js
inc
rcr
cmp
add
pop
xchg
roll
fidivrs
dec
xchg
gs
xchg
jns
mov
sbbb
cmpl
ret
subb
cmc
inc
mov
pop
mov
das
out
xchg
mov
sbb
sub
mulb
inc
inc
dec
xor
or
insb
loopne
mov
or
sub
fdivrs
jl
scas
cmpsl
lods
or
pop
fisttpll
int
and
jb
mov
push
roll
and
ret
adc
mov
or
sbb
mov
daa
cmp
out
test
xlat
testl
ss
jae,pn
jp
sahf
divl
gs
sahf
dec
jns
hlt
rol
js
fiaddl
xchg
mov
sub
aas
sbb
mov
mov
cmc
stc
mov
jmp
adc
out
das
inc
rcl
cmpsb
stos
jmp
nop
push
mov
gs
dec
mov
cmp
push
jne
xchg
xchg
lret
push
sub
in
mov
inc
adc
sbb
adc
pop
mov
or
lcall
ss
aaa
adcb
addb
jo
dec
xor
addr16
imul
dec
dec
jge
dec
mov
sub
stc
xor
push
cmp
hlt
push
adc
subl
lods
push
fneni(8087
lods
into
test
push
dec
dec
jns
icebp
xchg
pop
jbe
fsubp
sub
jo
lret
cmp
xchg
sub
cmp
jle
xlat
ljmp
out
outsl
incl
ret
push
adc
fs
mov
loopne
fcoml
mov
xlat
or
pushf
lret
xlat
jns
stc
mov
xchg
fisubrl
loop
fnstenv
in
dec
cs
loope
out
or
sub
sahf
outsb
mov
xor
pop
cmp
jbe
cmp
pop
mov
mov
cwtl
and
lahf
lahf
mov
jnp
xor
sbb
pushf
pop
or
mov
mov
or
roll
and
test
inc
xor
xor
dec
and
xor
cmpsb
cmc
cwtl
aas
int
xor
fisttps
fstl
mov
pop
dec
sti
cs
push
movsb
inc
test
inc
pop
jne
aad
adc
xchg
rolw
mov
aaa
ds
jge
aas
lds
movsb
pop
xor
inc
dec
hlt
pop
dec
push
add
cmp
mov
je
rcl
and
pusha
mov
dec
ss
dec
orb
imul
dec
fisttps
in
dec
cmp
scas
lds
mov
ljmp
xor
inc
cld
cld
pop
inc
lods
or
jge
pop
fstp
popf
mov
or
fdivl
xchg
jb
or
mov
roll
cmc
pop
fsubs
dec
popf
fisubl
add
sar
into
pop
loop
dec
outsl
push
hlt
jp
jle
les
xor
fwait
hlt
bound
and
mov
inc
adc
aam
add
mov
popf
mov
aam
fs
cmpsl
pop
sbb
adc
push
outsl
jne
sarb
jmp
adc
loop
push
fcoml
das
in
hlt
sub
add
mov
and
aas
repnz
push
adc
int3
add
lret
icebp
jbe
add
xor
aaa
mov
repnz
orl
dec
jnp
dec
mov
stc
mov
test
pushl
xor
push
ficomps
imulb
fwait
in
dec
inc
push
push
mov
fdivp
les
test
leave
mov
pushf
xchg
xor
fdivrs
outsb
dec
dec
mov
mov
cltd
in
add
push
loope
sbb
mov
xchg
mov
movsb
cmpsl
imul
inc
cmp
xor
sahf
or
pop
add
out
nop
push
pop
add
clc
cltd
insl
and
adc
dec
jl
pushf
mov
aas
cmpl
outsl
mov
aaa
adc
les
dec
pusha
add
mov
das
lcall
cmp
inc
jne
int
adc
clc
and
scas
sbb
stc
xchg
shlb
fprem
shll
sub
add
aaa
test
pop
jmp
inc
cmpsl
adc
adc
mov
out
mul
les
shrb
in
ss
shrl
sub
and
cmpb
dec
pop
sub
dec
outsl
mov
enter
mov
inc
rorb
scas
cmp
nop
enter
xor
xchg
enter
ss
or
dec
and
aad
es
pop
and
ficomps
rcr
adc
loope
lahf
add
shlb
xor
mov
pop
dec
out
lods
rcr
pop
cmp
rcrb
repz
lock
stos
aam
cld
xor
mov
pop
aaa
mov
inc
addb
mov
add
ret
and
sarb
je
push
jbe
test
cmp
std
movsl
and
inc
sub
out
dec
or
fs
ljmp
in
mov
push
nop
in
xchg
inc
xchg
xor
xchg
push
fcomi
push
shlb
mov
fstpl
dec
pop
popf
je
dec
mov
adc
xchg
sti
adc
shr
lret
loope
xchg
enter
push
jl
cld
mov
jp
push
fistpll
adc
mov
out
adc
jns
mov
dec
or
loopne
mov
data16
fistpll
cmp
mov
fsubl
xlat
mov
mov
lret
inc
insl
pinsrw
mov
sub
or
insb
xor
mov
dec
xor
ficomps
cwtl
out
push
jae
add
shll
pop
sub
lahf
add
in
ss
push
jle
sub
popa
xor
jl
ljmp
jecxz
cmp
in
mov
jmp
mov
mov
xor
insl
imul
push
daa
stc
xchg
dec
popf
inc
rcrl
mov
pushf
push
iret
pop
or
mov
scas
sub
dec
inc
jne
pop
lods
sbb
aam
add
and
cmpsb
decb
xor
mov
sub
xchg
mov
out
stos
out
int
inc
xchg
sub
daa
sbb
dec
push
aam
push
add
faddl
pop
pop
pop
xchg
mov
movsb
imul
adc
adc
add
lahf
lahf
repnz
daa
test
dec
cmpsl
call
popf
or
xchg
push
test
adc
inc
fcoml
push
dec
pop
int
jne
das
stc
pop
sub
sub
ret
sub
ss
jle
out
testl
fistps
add
imul
inc
cmpsl
or
jmp
or
imul
cmp
push
hlt
roll
stos
and
inc
xor
divl
ret
in
sub
imul
or
ret
pop
push
int
hlt
ret
out
mov
and
leave
push
ja
mov
jmp
in
xor
lods
sbb
test
mov
jecxz
fsubrl
pop
stos
adc
repnz
test
mov
stos
cmpb
stc
insb
xchg
jnp
sarb
das
pop
cmp
les
or
add
movb
out
decb
xrelease
sti
add
ss
loop
lods
movsb
dec
int
test
shlb
mov
cli
stc
rcrb
sub
outsl
pop
pop
sbb
lea
lds
mov
out
in
pop
test
rorl
xchg
sarl
cmp
idiv
popa
push
jo
pop
mov
imul
imul
das
ja
inc
cmp
mov
adc
daa
ret
fcomi
adc
mov
jbe
adc
dec
mov
sti
loope
jle
fsubl
mov
push
inc
xor
mov
mov
push
cli
and
inc
pushf
into
or
mov
push
sbb
ljmp
int
sub
lods
lds
and
sub
fs
movsb
jmp
cmp
lahf
decl
gs
mov
out
pusha
xchg
stos
pop
mov
dec
mov
ljmp
mov
sti
stc
mov
xchg
jl
mov
sub
mov
xchg
lock
mov
imul
fisttpl
mov
sahf
out
fdivs
movsl
xchg
xchg
mov
cmp
adc
lea
jge
adc
call
mov
pop
aaa
fidivs
cwtl
cmp
cmp
daa
sub
rcr
insb
int
mov
hlt
mov
out
loope
cmp
js
push
inc
popa
xchg
xchg
mov
adc
inc
repz
pop
int3
sub
daa
jno
mov
xchg
sbb
jmp
loop
sbb
push
adc
and
insl
mov
pop
push
jl,pn
sbb
dec
and
fldl2t
lds
lods
fisttps
fbstp
or
imul
dec
jle
je
lret
orb
arpl
mov
or
inc
sbb
push
mov
push
imul
dec
xchg
clc
lahf
mov
push
dec
inc
jns
std
mov
sahf
inc
add
aaa
das
mov
ss
sti
into
and
out
sahf
dec
mov
jmp
in
rol
out
or
jnp
mov
call
cmpb
es
or
mov
fcompl
cmp
sub
mov
das
enter
in
mov
in
fimull
mov
popl
cs
sbb
lret
lahf
push
or
cld
lahf
mov
adc
es
mov
adc
sbb
inc
imull
hlt
mov
lcall
std
addr16
xorps
arpl
cmp
cli
dec
divl
aas
out
shl
das
aad
sub
push
inc
jb
cmp
xchg
in
xor
mov
in
imul
fildl
fidivrs
inc
and
iret
push
xchg
or
cmp
daa
pop
out
pop
mov
add
out
mov
jecxz
mov
inc
popl
lcall
xor
or
sar
jb
pop
loopne
mov
dec
mov
xor
or
dec
pop
cmovne
repz
push
adc
sub
fcoml
mov
jl
cli
push
and
pop
fsubp
adc
xchg
pushf
sbb
ret
sbb
imulb
mov
loop
and
les
out
sbb
mov
mov
test
out
lcall
bound
mov
loop
dec
inc
xorl
loopne
rcrb
pop
sbb
fcoms
cmp
rcll
add
mov
popl
bound
mov
xlat
mov
push
sbb
lds
push
scas
mov
and
adcb
arpl
pop
dec
mov
dec
fadd
push
int3
daa
pop
lcall
cs
adc
jnp
xchg
jb
sub
out
bound
pop
std
mov
mov
push
push
lods
in
pop
aam
hlt
or
loopne
imul
sbb
sbb
fdivrl
add
scas
cmc
jle
clc
shrl
ja
push
mov
cmp
dec
fcomps
mov
out
dec
es
idivb
arpl
das
sbb
xchg
outsb
stos
jge
xchg
fstpl
hlt
fcoml
jb
inc
mov
adc
cmp
andl
stc
mov
pop
shl
xor
mov
push
call
outsl
cli
dec
push
loopne
int3
fmul
lea
shll
inc
inc
adc
jmp
popa
in
iret
adc
mov
push
lods
xchg
or
fnsetpm(287
xor
adc
pop
in
jnp
imul
test
mov
fnstenv
inc
fwait
mov
rolb
adc
mov
jo
movsb
push
sub
aam
inc
dec
push
jg
xchg
imul
call
call
lcall
cwtl
outsb
outsb
dec
ljmp
mov
xchg
jmp
xchg
add
outsb
jle
jle
or
ds
out
sub
repnz
fstpl
sbb
and
jecxz
clc
push
mov
call
notl
xchg
mov
and
jle
cmp
mov
xorl
fwait
push
popf
push
dec
xchg
xchg
sbb
fldl
lock
jb
ljmp
sub
pop
cmp
cli
or
aaa
mov
add
mov
or
cwtl
sbb
and
xor
in
or
cwtl
mov
xor
idivb
pop
cmp
cltd
xchg
cmp
dec
dec
inc
sub
sbb
mov
lods
cmp
movsb
ds
lcall
pop
pop
mov
aas
pop
cmp
sub
jns
test
push
test
cmp
push
xor
aad
jg
jns
aam
cmp
adc
push
sbb
lods
dec
and
fisttpll
cmp
das
movsl
lods
mov
inc
xor
bound
pop
fs
pop
push
or
or
data16
adc
cltd
aaa
xor
movsb
xchg
mov
rolb
jne
fs
mov
or
repnz
mov
jae
mov
and
movsl
xlat
sub
mov
jbe
mov
jp,pt
addr16
push
std
test
cmc
dec
outsb
enter
cmp
inc
and
icebp
test
and
bound
cltd
and
dec
ds
mov
outsl
mov
jle
push
mov
add
cmc
les
mov
mov
or
fnstsw
mov
add
push
ljmp
popf
push
adc
mov
iret
fisubrl
inc
addr16
stos
ja
arpl
movsl
mov
adc
sub
imul
cltd
xchg
add
seta
mov
cmp
stc
pop
adcb
inc
jbe
mov
sbb
add
loop
insb
inc
jb
outsl
lahf
jo
jnp
inc
jnp
jp
xchg
or
mov
dec
outsl
sub
ljmp
dec
stos
lahf
sarl
lret
pop
push
aaa
fisubs
sbb
adc
push
mov
inc
insb
mov
or
adc
inc
scas
repnz
xor
jle
jne
pop
lret
subl
daa
and
andl
push
xor
adc
iret
pop
mul
mov
xchg
orl
cld
jo
sbb
jb
mov
test
add
ds
test
pop
mov
pop
mov
bound
les
sub
push
or
cli
int
outsb
cltd
leave
add
mov
cld
dec
cld
out
dec
push
or
cltd
daa
cmp
aam
xor
mov
andl
scas
push
mov
jmp
loopne
mov
inc
and
mov
insl
cmp
mov
in
call
aaa
lahf
dec
pop
xorl
adc
cld
jne
jno
inc
sub
sbb
inc
sbb
or
iret
mov
and
adc
add
xor
dec
out
and
popf
lods
out
add
imul
rcll
popa
add
test
imul
mov
xor
or
pop
cld
xchg
lds
sub
testl
loope
jp
rorb
cli
mov
sti
imul
and
repz
pop
xor
mov
test
inc
insl
fisubl
jge
ud1
in
insl
or
xchg
sbb
adc
cmp
loop
add
cld
sub
adc
adc
mov
daa
ret
scas
out
insb
inc
lock
aaa
mov
xchg
xor
pop
testl
xor
shrl
mov
add
cltd
cmc
fidivrl
pop
jne
sub
dec
mov
add
loope
lea
push
pop
fisubs
sub
ss
gs
call
inc
rsm
sti
jp
movsb
popa
cmp
fistpl
sub
pop
out
mov
fs
bound
mov
add
mov
insl
rcrl
int
and
scas
mov
js
icebp
leave
mov
outsb
movsl
hlt
or
lcall
pop
add
rcrl
push
fwait
xchg
icebp
mov
rcll
mov
push
loopne
out
or
test
test
cs
icebp
mov
inc
loopne
leave
dec
mov
mov
dec
lahf
test
cmc
dec
std
in
repz
xchg
in
aaa
sub
cmp
pop
xor
pop
adc
cmc
jo
ret
pop
ror
and
call
daa
daa
sub
sbb
ss
fcomps
xchg
lcall
xchg
ss
add
call
lcall
das
add
insl
push
add
lret
mov
pop
jmp
jl
push
lods
out
dec
popa
jl
jmp
cmpl
mov
daa
mov
outsb
mov
or
repnz
popa
xchg
aad
movb
out
mov
movsl
xor
mov
bnd
scas
hlt
popa
stos
xchg
pop
lahf
shlb
cmpsb
fs
add
gs
sti
cs
and
mov
test
xor
mov
xchg
and
pop
pop
sbb
xor
jne
lods
cmp
std
ja
add
dec
pop
decl
pop
add
adc
push
cmp
mov
dec
rcrb
add
ljmp
add
cmp
sbb
dec
rcl
jae
add
insb
lcall
push
in
cli
mov
stos
andl
loop
lahf
jbe
jns
dec
in
clc
jne
add
rcrl
popf
add
cmpl
and
xchg
add
adcb
in
adc
jp
sub
leave
push
daa
shr
out
or
cmpsb
push
clc
pop
btr
imul
cli
sbb
cli
outsb
popf
sub
in
fwait
pop
cmpsb
sarl
stc
enter
dec
pop
and
cltd
les
add
incl
aas
daa
xor
shlb
lcall
mov
jno
sub
jbe
and
testl
ds
out
lret
cmp
cmc
out
in
pop
add
jg
pop
xor
fstpl
pop
arpl
cmpb
xchg
arpl
push
pop
cli
sub
pop
mov
jae
rorl
rcrl
aam
leave
push
sub
icebp
sbb
jae
adc
mov
in
bound
pop
fwait
mov
lock
test
push
push
sub
or
clc
shrb
ss
jl
fs
outsl
out
inc
inc
mov
jo
xchg
movsb
scas
xlat
or
fs
lcall
add
pop
sub
hlt
jns
pushf
pop
lret
stos
jg
mov
das
add
xor
mov
jno
ret
dec
arpl
movsl
or
sub
fimull
mov
scas
stos
lods
stos
xchg
sbb
cli
das
test
push
cmpsl
push
test
or
dec
ret
outsl
pop
icebp
or
sub
mov
sbb
dec
cmp
aam
push
pop
dec
loope
cmp
mov
cmp
repnz
movsb
cld
mov
xchg
stos
lea
repnz
stos
ja
sub
test
add
push
movsb
jmp
cmp
fdivs
test
cmpl
roll
xchg
mov
add
lock
adc
cmp
cmc
cmp
inc
and
aaa
jmp
gs
and
sub
mov
jl
mov
jmp
push
mov
int
jns
in
mov
ja
cli
test
jp
cmpsl
cli
mov
lcall
mov
xchg
push
push
in
lret
pop
bound
xor
cmc
les
mov
pop
cmpsb
out
js
fdivs
xchg
xchg
mov
sbb
das
pop
ret
mov
xchg
ret
dec
adcb
inc
std
inc
dec
xor
dec
inc
bound
mov
hlt
dec
aaa
dec
js
push
test
dec
fldl2e
push
repnz
cld
cmp
out
cwtl
int3
push
push
cli
cmp
outsl
movsb
push
nop
mov
out
jno
xchg
lgs
ret
mov
movsl
add
mov
insb
lea
loopne
idivl
loop
dec
out
mov
mov
add
or
dec
sub
inc
dec
aad
sti
jo
mov
out
ljmp
and
cltd
lret
cld
xorl
daa
rolb
pushf
xchg
ja
sahf
into
xchg
inc
mov
inc
or
xor
jge
cmp
ljmp
cmp
cmc
pop
ljmp
mov
pop
leave
and
sub
bound
into
xlat
pop
xlat
mov
add
xchg
add
stos
add
nop
imul
movsl
jge
xor
inc
into
dec
out
and
mov
dec
std
sub
mov
sbb
mov
and
push
mov
cmp
lock
mov
fdivs
outsl
mov
cmp
inc
fwait
test
mov
jb
pop
sbbb
xchg
je
imul
xchg
cmp
xchg
sub
inc
test
fsubr
inc
inc
dec
dec
in
dec
in
xor
fwait
xchg
sub
pop
cmp
ret
call
adc
mov
scas
push
mov
mov
add
dec
lock
cmp
xor
popa
sbb
dec
cmc
inc
sbbl
stos
push
out
leave
fisubl
xor
and
adc
cmp
test
sti
test
inc
adc
pop
jno
add
in
lret
dec
lret
xchg
outsb
mov
add
cmp
push
dec
in
push
ja
divb
les
std
xor
mov
shrb
movsl
push
sub
dec
or
in
cltd
lock
pop
and
mov
jne
sti
inc
mov
popf
gs
sub
sbb
neg
cmpsl
std
push
fdivrl
cmp
jg
dec
test
xor
mov
jae
adc
lret
mov
lods
lret
dec
pop
ficompl
mov
shrb
cli
out
ret
sub
lods
sub
mov
stos
leave
and
pop
sahf
and
xor
xchg
add
dec
leave
xchg
jg
loopne
sbb
filds
sub
lods
and
lret
xchg
and
and
push
inc
loop
xor
inc
stos
mov
movsb
fiadds
push
inc
repnz
adcl
pusha
push
das
sbb
push
pop
dec
outsb
ret
jae
repnz
mov
or
jbe
cmpsb
push
fs
inc
and
fisttpll
lret
xor
popf
sbb
and
dec
adcb
ret
scas
cwtl
cmpsb
mov
lret
xor
inc
mov
ja
and
into
jae
stos
es
lods
mov
xor
ljmp
es
rorl
mov
rorl
inc
dec
mov
dec
dec
cmpb
ja
repnz
lret
or
jo
arpl
dec
jno
add
addr16
cmp
in
jmp
mov
pop
inc
add
sub
fwait
add
adc
push
test
pop
imul
scas
in
jge
and
mov
sbb
clc
sub
and
stos
mov
sbbl
hlt
fs
lock
ret
jnp
xchg
xor
mov
aas
and
push
shll
inc
or
stos
jg
and
xchg
test
mov
sbb
mov
cmpsl
jno
push
and
sahf
jbe
add
in
pushf
sub
fildl
pop
add
inc
stc
bound
lds
push
adc
repz
adc
lods
int
sarb
lcall
jle
xor
push
xor
ds
stc
inc
mov
sbb
js
dec
push
fiaddl
imul
mov
push
inc
sbb
adc
pop
fildl
mov
adc
inc
test
bnd
daa
push
sbb
push
add
xchg
gs
jge
or
mov
ret
rcrl
lock
cmp
xlat
jle
adc
outsl
out
xchg
mov
insl
jmp
fisttps
in
icebp
add
mov
shrl
mov
fmull
pop
mov
add
in
mov
cmp
inc
xchg
arpl
xor
push
imul
lods
push
or
inc
insl
cmc
jne
sub
mov
cwtl
js
call
das
test
lret
inc
incl
pmulhw
fwait
loope
icebp
cs
or
out
cli
xor
add
pop
push
enter
mov
scas
out
sub
insl
inc
sub
mov
mov
cmpb
jecxz
stc
xor
and
or
sbb
or
mov
lahf
fucomip
jge
jbe
iret
push
popa
inc
je
cmp
mov
cmp
add
out
fistps
add
xor
pop
pop
repz
xor
xor
rcll
mov
fildl
sarl
shl
ljmp
or
mov
mov
insb
mov
data16
ret
xor
jne
or
mov
fwait
fwait
testl
sahf
push
aad
xorb
jno
repnz
int3
jmp
fbstp
pop
add
mov
mov
test
pop
test
loop
mov
pop
loop
cmp
nop
pop
or
mov
jl
insb
imul
jo
push
aaa
dec
and
lcall
mov
or
mov
fsubp
mov
outsb
int
fidivrs
ss
mov
shr
hlt
nop
adc
stc
sti
cld
inc
add
repnz
jmp
xchg
mov
loop
insb
rcll
push
out
dec
andb
inc
and
int
xor
lret
push
call
stos
cmp
xchg
mov
inc
add
sbb
push
or
lds
cmpsl
add
cmp
dec
mov
in
sbb
xor
mov
repnz
push
mov
lahf
pop
push
icebp
lea
aas
add
xor
into
adc
sbb
and
ljmp
push
adc
in
fucomp
fnstcw
jno
repnz
ds
mov
fcompl
out
sbb
xchg
adc
sahf
ret
push
mov
mov
sbb
call
xchg
pop
lret
jbe
stc
test
nop
push
pop
dec
dec
ss
mov
sbb
rdpmc
test
mov
movb
mov
push
lods
mov
nop
loop
push
ja
jbe
addr16
icebp
push
cmp
jle
cmc
mov
dec
loop
jns
jae
xchg
addr16
push
and
adc
addr16
loop
cmpsb
jmp
mov
push
std
dec
jo
aad
cmpsb
push
sarb
jmp
push
dec
ss
sbb
xchg
and
nop
loope
push
xchg
cmp
xchg
mov
mov
and
sahf
addr16
into
adc
mov
mov
pop
or
jp
fistpl
nop
lret
or
sub
mov
push
enter
cmc
cltd
stos
outsb
sbb
popa
nop
lret
mov
imul
in
in
popl
and
in
cmp
xchg
cmpsl
call
ret
dec
xor
mov
int
push
xor
fsubrl
std
sbb
adc
int3
sbb
insl
xchg
mov
jo
stc
mov
xchg
arpl
pop
mov
inc
fstpt
push
xor
movsl
cmc
mov
jne
dec
ret
incb
lahf
push
mov
cltd
sub
add
xchg
jl
movsl
sbbb
subb
sbb
inc
jge
aam
adcl
jge
enter
push
mov
rclb
and
push
inc
cmp
fsubs
std
mov
jge
test
dec
add
pop
adc
loopne
addr16
inc
int3
lret
out
ret
nop
sbbl
pop
jbe
mov
jne
std
ret
insl
cli
aas
mov
out
adc
xchg
mov
aas
inc
fstpt
mov
test
add
testl
xchg
cmpb
jo
mov
mov
pop
aam
aas
mov
sti
jmp
inc
in
mov
inc
sub
aad
ds
stos
mov
sbb
mov
repz
mov
fld
inc
add
fs
out
fmuls
mov
sahf
call
dec
fistpl
shlb
cs
cmc
int
cmp
ret
inc
xchg
push
leave
int
dec
mov
ljmp
clc
xchg
xor
sub
dec
inc
jb
or
lods
loop
cmp
pushf
cmp
adc
fsubrs
aad
imul
outsl
pusha
jo
mov
cmp
push
icebp
rclb
movsb
movsl
fiaddl
pop
lock
push
shll
xor
xchg
sbb
shrl
sub
xchg
lods
out
inc
inc
and
out
ss
sub
imul
pop
pop
nop
fildl
jle
pop
dec
cmp
sbb
call
lret
and
test
mov
shr
jle
push
sti
testb
repnz
push
xchg
test
xlat
cwtl
sbb
inc
cmp
stos
pop
mov
in
int
cwtl
inc
dec
push
push
cmp
fcomps
mov
add
jge
lahf
dec
adc
add
or
in
leave
test
adcl
fwait
rolb
daa
push
add
cmc
inc
mov
xor
mov
fwait
push
fwait
stos
in
daa
adc
inc
ss
mov
in
test
lods
int
jecxz
lea
jmp
popa
gs
stc
or
push
adc
push
imul
adc
lretw
aas
in
add
cmp
popa
dec
jnp
jns,pt
sub
dec
into
push
mov
out
cmpsl
pop
aas
lods
pushf
out
les
dec
and
dec
movsb
mov
jp
inc
dec
sub
rorb
adc
lret
xchg
push
and
shl
outsb
or
mov
call
add
add
sub
out
lcall
push
popf
es
lahf
aam
inc
and
ret
rorl
xor
icebp
adc
stos
popa
out
dec
mov
pop
adc
jp
xchg
leave
flds
fistps
xor
and
adc
mov
in
icebp
outsb
push
inc
jecxz
jae
adc
cltd
rcrl
out
cmp
mov
mov
pop
inc
jno
mov
push
pop
push
lds
cli
out
and
ds
lds
test
sub
xchg
test
mov
inc
pop
and
xlat
les
jecxz
je
mov
adc
cmc
ja
push
and
shrl
cmpsl
xor
int3
shll
hlt
int3
rorl
push
scas
xor
jo
dec
push
pop
in
dec
xor
idivl
imul
dec
xchg
fidivl
inc
int
outsb
pop
in
or
adc
jecxz
es
add
inc
inc
leave
cmp
jecxz
pop
cld
out
leave
insb
push
test
sbbl
sbb
xor
lds
inc
outsl
lods
fsts
sbb
or
and
mov
xor
add
lahf
mov
inc
sbb
push
fidivl
mov
insb
cmpsb
cmp
push
mov
js
call
or
ret
mov
leave
ds
push
mov
mov
sarb
or
push
and
or
popa
mov
jmp
or
pop
mov
stos
movsb
mov
xor
xor
or
sbb
push
clc
repz
mov
in
stos
pop
int3
adc
mov
and
and
inc
sub
adc
push
xorb
xorb
std
pusha
lods
dec
scas
mov
ret
jae
sbb
jecxz
push
add
push
and
or
leave
outsb
icebp
push
daa
pop
xor
adc
icebp
xlat
mov
rclb
xor
jmp
es
popa
ljmp
mov
cmp
inc
cmc
or
pop
pop
mov
xchg
fcmovu
fsubl
inc
push
mov
pop
in
popf
fdivl
cmpsb
xor
cs
outsb
pop
mov
sbb
sub
dec
inc
lock
push
call
sbb
fwait
adc
iret
dec
pop
pop
ss
mov
inc
lds
cmp
scas
and
ja
xor
out
insb
and
jo
addr16
stos
aad
lock
dec
inc
xor
pop
je
jo
flds
pop
lods
push
aam
roll
xchg
pop
or
insl
mov
cmpsb
aad
cmp
cmc
cltd
nop
xor
push
cmpsl
stos
mov
or
jbe
stc
ja
jae
dec
sbb
pop
push
jae
sbb
mov
cmpsl
inc
out
cmpsl
or
or
inc
jnp
push
hlt
cmp
cltd
lods
cmp
test
mov
xor
ljmp
cmpsl
xchg
aam
dec
dec
push
push
scas
test
lock
mov
inc
add
sahf
das
test
adc
pop
lret
xchg
mov
mov
xchg
inc
out
test
sub
ret
out
test
loope
in
jmp
jnp
mov
inc
sub
dec
mov
mov
ds
rolb
in
mov
mov
loope
push
xchg
pop
idivb
jno
insl
push
pop
lcall
push
jb
or
jns
jbe
inc
iret
mov
cmpb
insl
fisttpl
lods
xchg
repnz
divl
jl
sub
adc
in
push
dec
test
xor
sti
pop
je
or
sbb
xchg
cs
out
dec
fldenv
insl
in
mov
and
ljmp
es
cmpsb
dec
mov
inc
pop
pop
ja
lods
hlt
in
jbe
fsubr
jge
jl
pop
out
shr
inc
adc
xchg
hlt
xchg
push
pop
inc
pop
mov
sbb
cmp
stos
stc
insb
cmp
aas
cmp
xor
or
mov
cmp
shl
bound
stc
insb
fadd
rolb
jno
sbb
pop
or
adc
jae
mov
sub
lret
push
xchg
or
xchg
inc
insb
pusha
sbb
push
movsb
push
icebp
aam
lret
testl
add
int
shll
dec
mov
out
lds
repnz
add
sbbb
inc
sbb
pop
faddl
data16
in
enter
cmp
xchg
cwtl
cmp
mov
push
mov
fcoml
aam
push
push
xor
adc
lret
mov
call
jl
bound
cmp
or
and
loope
cmpsl
repz
mov
gs
pusha
out
les
cmp
or
xor
arpl
js
add
pop
shll
pusha
add
neg
push
rclb
lea
cmp
orl
lea
xchg
adcl
mov
cmp
ljmp
xor
mov
stc
in
dec
les
sahf
inc
gs
xor
and
push
xchg
add
mov
aas
sub
add
pop
xchg
mov
out
jae
nop
jno
ret
clc
adc
addr16
les
pushf
push
insb
scas
out
mov
hlt
dec
cmp
inc
or
pop
es
out
add
out
push
xor
mov
into
andl
fwait
mov
leave
iret
and
xchg
xor
jmp
fsubrs
pop
pop
leave
out
sub
mov
xchg
sub
cmp
jecxz
mov
ss
push
and
push
test
jo
push
outsl
pop
mov
add
imul
dec
xchg
mov
fwait
test
xor
dec
fidivrl
cld
cmpsb
inc
dec
stc
cli
insl
cmp
adc
pop
fs
dec
lods
out
out
push
pop
mov
sub
iret
jb
dec
rcll
subb
testb
cmc
push
lcall
sub
dec
das
ficompl
pusha
adc
aaa
movl
nop
sbb
jp
xor
in
dec
pushf
scas
out
lahf
sub
leave
cli
icebp
sti
out
pop
xchg
pop
and
pushf
out
arpl
push
mov
mov
and
or
out
xchg
xlat
mov
data16
insl
push
clc
inc
mov
pop
out
or
mov
and
out
add
push
or
in
xchg
or
pop
insl
into
in
pop
bound
xchg
lock
mov
jb
add
imul
xor
lret
aaa
ss
test
lcall
pop
sbb
mov
dec
jne
mov
ret
xor
jp
and
jle
jmp
cmp
adc
push
lret
cmc
into
test
lods
icebp
fisttps
sahf
cmp
pop
or
add
popa
popf
push
xchg
lret
and
and
xor
sub
test
mov
gs
or
fcom
pop
inc
insl
imul
mov
mov
into
lock
inc
and
stos
popf
pop
out
jl
shll
jp
test
shlb
mov
jle
push
cmp
cwtl
lods
cld
leave
addr16
dec
lahf
push
xchg
xchg
sub
fwait
xorb
mov
repnz
xor
add
lret
push
pop
jg
daa
clc
scas
cmp
loop
std
mov
mov
je
xchg
xchg
mov
xchg
cmpsb
gs
pop
jmp
mov
nop
out
mov
jl
mov
push
cli
xlat
push
arpl
clc
rorl
sbbb
dec
mov
ficompl
arpl
rcrl
out
lcall
shrb
lds
jmp
adc
repz
shll
insl
add
js
and
pop
dec
and
jb
cli
shr
sahf
loop
fisttps
inc
push
jp
xchg
lahf
jle
or
iret
pusha
push
push
mov
outsl
shlb
shrl
adc
jle
cli
sbb
scas
jecxz
push
daa
inc
movsb
insl
inc
inc
imul
dec
lods
dec
andl
cmp
dec
xor
lock
inc
xchg
jbe
sahf
bound
cltd
cld
add
push
loope
movsl
scas
bound
stc
dec
cltd
sbb
dec
adc
and
fdivrp
push
push
mov
inc
bnd
jl
pop
xchg
jb
movsb
lcall
ret
sbb
hlt
or
and
sbb
sbb
xchg
popf
lods
test
push
test
aas
inc
lcall
test
es
inc
fwait
jbe
hlt
and
and
fs
mov
rcrl
dec
pop
push
loop
sbb
icebp
or
adc
mov
je
add
js
pop
jmp
mov
pop
sub
lods
sbb
outsb
xchg
mov
fwait
cmp
daa
rcll
xchg
xor
pushf
fsub
or
in
fs
dec
add
mov
test
sub
in
ret
xchg
sub
or
test
cli
mov
call
push
xor
mul
pop
jp
imul
lcall
stc
or
pop
mov
sub
dec
push
mov
test
mov
mov
jbe
pop
xchg
ljmp
outsb
sbb
mov
sarb
mov
or
mov
fcmovnu
mov
cmp
insl
jns
into
adc
mov
das
fcom
inc
insb
jle
jo
mov
imul
dec
xchg
push
add
sub
cmp
push
dec
inc
push
inc
xor
ss
cmpsl
repz
hlt
jns
jae
xchg
mov
jno
sti
fisubs
push
ljmp
xor
inc
lahf
adc
add
or
push
mov
lea
xorl
jle
sahf
sub
xchg
pop
movsb
or
pop
push
fildll
pop
inc
mov
lea
xchg
inc
sahf
mov
or
ljmp
xchg
jl
cmpb
mov
fadds
stc
xor
popa
shll
dec
inc
cmpsb
pop
movsl
mov
mov
stos
mov
popa
data16
div
cltd
mov
xor
lcall
push
in
jns
insl
adc
cmpsb
imul
push
mov
mov
inc
enter
lret
testb
mov
std
mov
int3
xchg
mov
mov
fsts
ficompl
sub
xor
aas
push
insl
push
mov
in
push
mov
fld1
outsb
mov
ljmp
addb
add
push
pop
insb
and
dec
ret
adc
xchg
mov
enter
cmp
mov
adc
js
mov
nop
flds
or
adc
mov
sbb
push
sbb
ds
mov
pop
hlt
sbb
push
sbb
push
loopne
jo
mov
pop
je
repnz
sub
std
popa
mov
cmp
adc
push
mov
mov
mov
ja
cmc
fwait
sub
repz
aad
repz
cmp
lea
mov
lock
mov
jbe
popa
rorb
pop
push
into
iret
pushf
mov
pop
dec
sbb
mov
out
scas
js
repnz
inc
push
cmp
popa
or
xchg
ret
add
jmp
add
adc
jno
dec
add
push
int
mov
jae
mov
mov
or
in
es
and
mov
sahf
mov
and
and
inc
pop
push
xor
sub
out
fdivp
mov
sub
add
xchg
dec
inc
mov
aas
xchg
adc
jl
cs
and
jae
or
fs
add
mov
fstl
mov
fs
mov
stos
in
mov
push
adc
sbbb
xchg
jmp
rclb
dec
lds
push
add
call
push
add
push
adcl
jmp
cmp
fwait
adc
lea
imul
pusha
sub
icebp
daa
add
xchg
dec
ss
nop
xor
jnp
mov
int3
rolb
aad
add
add
movsl
xchg
xlat
mov
and
mov
mov
insl
icebp
mov
stc
cwtl
dec
and
jl
movsb
add
sar
data16
pushf
mov
stos
pushf
lea
cmp
cld
xor
or
ret
dec
out
in
rclb
sarb
dec
push
xor
mov
mov
dec
enter
aad
xchg
sub
and
or
stc
push
push
and
inc
xchg
fcmovnb
mov
es
scas
push
aas
cmpsl
mov
push
pusha
ja
and
out
movsb
mov
mov
in
and
sbb
pop
mov
jnp
and
sbbl
push
scas
jmp
hlt
dec
pop
in
cmp
test
mov
adc
loopne
pop
scas
in
mov
andb
push
cld
pop
fwait
daa
sbb
mov
mov
leave
movsl
inc
cwtl
inc
leave
adc
popf
movsb
mov
addl
test
jno
movsl
and
mov
pop
sub
fdivrl
int3
xlat
xchg
lea
pop
xchg
dec
xor
lock
dec
xor
lock
sbb
out
mov
sbb
xor
sub
mov
pop
lahf
loop
cli
jmp
ret
mov
fadds
test
adc
pushf
rol
insb
sub
mov
xchg
cwtl
xchg
movsl
cmpsb
lock
inc
sbb
jae
pop
jbe
xlat
sahf
lahf
xchg
inc
mov
cmpl
ja
mov
movsb
stos
outsb
inc
inc
xchg
lret
push
jb
lock
sub
iret
push
or
shrb
nop
add
fucomi
mov
lret
mov
jg
setle
sub
stc
lods
filds
xchg
test
rolb
es
out
cmc
into
and
xor
je
lds
push
cmpsl
pop
jo
cltd
mov
outsl
jne
jp
aas
jmp
mov
mov
pop
and
jbe
fisttpll
in
adc
insl
gs
enter
sbbl
xor
sbb
sbb
pop
sub
inc
pop
fildll
das
ret
inc
mov
popf
inc
inc
push
insl
mov
out
add
xchg
lcall
pop
rcll
push
cmpsl
cmp
int3
cmpsb
pop
shl
and
daa
push
shrb
clc
notl
fcmovbe
subl
push
pop
lahf
dec
fcmovnb
repnz
inc
jo
test
mov
je
sbb
pop
dec
jbe
xchg
stos
adc
lret
xchg
cmp
out
ja
fnstcw
cld
xor
test
enter
lcall
mov
jmp
sub
mov
jmp
adc
mov
cmp
in
pop
sti
or
movsl
cmp
fstpt
jns
aad
sub
pop
clc
pop
leave
sahf
inc
lcall
mov
or
sub
dec
pop
cmp
pop
mov
lds
jp
or
mov
xchg
add
adc
insl
popf
mov
movsb
cltd
hlt
xchg
test
mov
xchg
jbe
mov
dec
and
pop
mov
fldl
dec
lods
push
lar
jns
adc
mov
in
jae
fchs
push
call
out
mov
push
push
sub
inc
test
pop
push
lea
xchg
sbb
adc
add
in
sbb
cmpsl
rorb
mov
xchg
xor
mov
into
int
rorl
push
repnz
jb
dec
fstps
add
loopne
xchg
jb
js
xchg
loope
stos
xchg
xor
inc
and
or
lea
pop
cmp
mov
clc
mov
push
rorb
sarl
mov
xor
adc
inc
xlat
sub
gs
fwait
testw
mov
repz
imul
sbb
and
int3
or
xlat
jge
jo
call
mov
fcomp
mov
int
mov
and
psrlq
dec
pop
sahf
dec
mov
xor
dec
jo
adc
nop
jno
xor
jb
scas
pop
jbe
popf
jl
arpl
popa
stc
mov
daa
adc
mov
xor
sub
jb
in
cmp
stos
mov
dec
mov
gs
fildl
sub
pop
mull
cmp
es
and
jne
inc
lahf
loopne
out
jl
insb
stos
lods
push
xchg
cmp
bound
in
movsb
bound
push
je
cmpsb
inc
insl
jl
cmp
rolb
jmp
cmp
das
stc
bound
xor
xor
cmp
mov
arpl
sub
pop
decl
arpl
cmc
sbb
popf
dec
in
xchg
lcall
push
cmp
loop
mov
inc
mov
or
xchg
lods
ror
popa
lcall
mov
mov
xlat
push
cmpsl
cmp
out
arpl
f2xm1
shlb
pop
imul
or
adc
sbb
cld
outsb
xor
enter
daa
mov
aas
xchg
lods
mov
mov
inc
jbe
mov
or
gs
push
inc
sub
icebp
out
add
mov
xchg
shl
ret
int
push
mov
out
ffreep
sbb
push
sub
out
lock
fiaddl
fcomps
add
xchg
push
scas
lock
inc
inc
jbe
int
sbb
cmpsl
xor
lock
xor
fildl
adc
ljmp
mov
fiaddl
jns
fidivl
enter
or
es
fisttps
xchg
out
lahf
xchg
lea
fidivs
cmp
xor
xor
cmp
and
pop
pop
push
gs
int3
and
mov
cltd
jne
xor
imul
shrb
fimull
mov
jbe
sub
rcll
stos
push
int
push
mov
mov
xchg
or
in
sbb
and
mov
aam
mov
push
and
xor
jecxz
iret
sbb
pop
jns
add
int3
shll
outsb
and
xchg
jmp
push
cmc
push
add
jge
ljmp
pop
mov
imul
mov
fisubrs
cmp
add
loop
jno
and
inc
subb
call
fldl
cmp
mov
mov
fcompl
stos
shl
js
icebp
add
pop
inc
xor
xchg
or
cmp
pop
dec
ljmp
jne
mov
lock
in
scas
inc
scas
addr16
and
subb
fistl
or
les
mov
sti
dec
mov
mov
xchg
cmp
cmp
repnz
inc
aas
inc
andb
gs
jmp
xchg
add
mov
mov
pop
lret
xlat
sbb
push
pop
addr16
xor
xor
mov
sub
imul
jne
repz
add
cltd
fistpll
cmp
sarl
mov
lea
or
hlt
ja
js
fstl
das
mov
and
xchg
mov
repz
cld
movsb
orl
test
ss
nop
std
loop
push
cmp
push
xchg
xchg
shr
cmp
jno
enter
jecxz
sub
jl
dec
fistpl
faddl
mov
sub
nop
aam
xchg
adc
movsl
fdivrp
mov
pop
xchg
inc
lds
dec
out
mov
inc
dec
rorl
pop
sub
add
hlt
xchg
push
insl
xchg
or
lods
mov
pop
repz
ret
cmpsb
mov
jo
insb
es
aaa
and
das
scas
sahf
test
jecxz,pt
pop
addr16
add
pop
mull
jge
shlb
ret
popf
mov
mov
jne
and
cltd
mov
lods
inc
enter
sbb
lods
repz
cmp
cmpsl
dec
aam
rcr
push
popf
in
loopne
outsb
inc
cmp
insl
aaa
dec
and
fisttpl
cs
inc
sub
shll
ds
loopne
adc
mov
dec
adc
in
push
and
pop
into
pop
push
fwait
adc
pushf
xor
inc
add
sbb
push
rorb
xor
dec
and
or
xor
push
aam
fucomi
jmp
dec
sbb
loopne
into
mov
or
std
ret
add
hlt
repz
test
inc
inc
xchg
cmpsb
sub
sub
mov
popf
pop
scas
push
sbb
into
repz
xlat
movsb
xchg
pop
notl
shl
in
mov
pop
xchg
ficoml
sbb
adc
pop
lock
xchg
or
or
add
adc
pop
cli
jo
add
je
jle
sub
push
fidivrs
inc
or
jns
or
rorl
fsubrl
testb
pop
mov
pop
aad
sbbl
repz
fstl
cmc
aam
mov
jne
pop
popa
dec
dec
xor
jge
lahf
hlt
cs
rcll
cmp
lods
sarb
test
fidivs
cmpsb
enter
xchg
add
pop
mov
movsl
push
jns
mov
iret
mul
movsl
xor
cmpsl
pop
insb
inc
mov
and
adc
or
add
sti
seta
and
cmc
inc
test
pop
mov
dec
cmp
les
pop
dec
test
aaa
xor
rcrl
call
or
sti
sub
in
jae
int
mov
in
add
and
js
mov
icebp
mov
mov
pop
xchg
adc
test
and
fwait
subb
mull
sbb
and
dec
ret
aam
les
xchg
add
pushf
movsl
push
clc
mov
jp
mov
lds
sahf
mov
jg
pop
decl
das
cwtl
sub
push
arpl
add
lds
es
js
clc
jmp
ret
jae
inc
or
js
adc
stos
scas
das
lea
adc
fidivl
dec
pop
outsb
or
fisubrl
imul
ljmp
cmp
stc
inc
mov
stc
repz
js
gs
pop
dec
bound
jp
ret
cmp
sbb
lret
mov
popf
jp
das
sub
mov
lcall
mov
or
jecxz
adc
sub
inc
xlat
into
add
cs
cmpsb
and
pop
mov
or
xor
testb
xchg
sbb
xchg
jmp
aas
and
test
and
mov
push
not
and
sti
fistpll
xchg
rcr
sub
xchg
add
mov
dec
and
pop
stc
xor
jmp
std
mov
xchg
in
xchg
xchg
sbb
cmpb
cld
adc
jg
pop
pop
fisttpl
add
inc
or
stos
cmpb
dec
dec
sbbb
and
mov
lods
sti
jg
roll
mov
fildll
loopne
mov
fiadds
lods
jnp
pxor
or
lds
push
mov
lret
xchg
fwait
stc
jmp
notl
cmpsl
dec
pushf
xor
into
cwtl
inc
sub
lahf
jge
loopne
push
dec
dec
jns
xchg
cwtl
mov
mov
gs
xor
loope
into
js
popf
inc
test
rcll
inc
jp
jno
daa
lea
xor
mov
xor
or
sub
mov
lret
cmp
pop
push
pop
sub
int3
adc
js
in
fldcw
cli
mov
idivl
push
adc
and
pop
xchg
dec
mov
jg
cmp
push
sbb
and
mov
ret
enter
mov
cmp
ljmp
jp
cs
adc
mov
jg
cli
mov
aad
jge
and
stos
ss
rcll
fstps
lret
sub
xchg
shrl
scas
inc
pop
addr16
xor
mov
xchg
bound
aad
inc
add
lahf
lods
cmp
jns
dec
pop
inc
inc
scas
bound
cwtl
sbb
cmp
jle
movsl
sahf
jp
fistpl
or
lcall
xchg
xchg
sub
fisttpll
js
cld
cmp
jecxz
xor
dec
je
roll
nop
mov
int
pop
xor
pop
mov
cmpsl
sub
fcmovnb
hlt
ret
int
jmp
outsl
insb
repnz
daa
je
or
or
cld
loopne
movsb
lret
fsubr
xchg
jecxz
test
sub
add
stos
fstps
xchg
ret
cmp
inc
sbb
loope
lods
jp
js
and
sarb
xlat
add
jbe
cmp
inc
outsl
cs
xchg
fnstenv
mov
nop
cltd
test
pop
mov
int3
xorl
idivl
stos
scas
decl
mov
push
loope
stc
pop
jns
add
cmp
jmp
aam
rorb
std
pop
mov
sbb
clc
mov
dec
out
add
bswap
mov
mov
xchg
mov
sub
into
repz
sbb
ja
xchg
xor
xchg
push
xor
jb
je
jbe
or
sub
jmp
pushf
insl
aaa
in
xor
sub
popa
cli
cmp
les
pop
cmp
adc
add
mov
mov
daa
cmc
fisubl
stos
push
mov
dec
add
cld
loop
pusha
pop
mov
or
lcall
jne
push
out
xchg
fwait
xor
movsl
mov
inc
loopne
ljmp
decl
cmpsb
iret
daa
jmp
ret
xchg
xchg
adc
jle
push
mov
add
cmpsl
in
cltd
jp
push
xchg
mov
jbe
dec
sbb
sub
sub
stos
iret
mov
outsl
pop
xlat
mov
mov
push
js
gs
inc
cs
jecxz
adc
ss
push
cmpsl
mov
add
cli
movsb
sub
test
or
in
mov
jecxz
in
pop
test
inc
pop
sub
inc
hlt
int3
out
fldcw
clc
cmc
test
mov
mov
rclb
jo
in
mov
mov
leave
in
ljmp
mov
mov
sub
cmp
aaa
cmp
cltd
jb
int3
outsb
cmpsl
lret
roll
inc
scas
add
std
mov
sarb
xchg
fwait
jb
scas
xchg
jl
aam
ret
into
aad
shrl
bound
aam
sti
out
lock
dec
aad
sub
jp
mov
jg
push
xor
popa
repnz
popf
fsubrs
andb
icebp
adc
mov
dec
rolb
stos
add
ljmp
jle
pop
ret
out
loopne
dec
notl
push
mov
and
movsl
dec
cli
or
dec
shrl
fsubrl
mov
pop
add
push
fwait
or
adc
dec
icebp
sbb
add
stc
repz
fldcw
movsl
mov
pop
stc
jno
enter
inc
add
nop
dec
call
mov
repz
jo
mov
cld
insb
sub
push
cld
push
dec
out
jl
ds
bound
inc
call
aam
outsb
fs
and
mov
mov
pop
enter
and
xchg
pusha
jns
leave
into
add
insb
mov
and
lds
stos
sub
jo
sbb
je
insl
clc
jle
and
stc
push
filds
mov
jg
ficompl
xor
and
mov
mov
jg
or
jbe
pop
and
dec
adc
push
sbb
insl
pop
mov
dec
testl
lret
das
lods
rcll
mov
xor
push
inc
xchg
adc
cmpsb
jmp
or
test
rorl
push
jle
push
dec
push
push
jg
insl
sub
xor
xor
sub
adc
movsl
dec
pop
addr16
push
and
push
sbb
arpl
inc
cmp
or
in
sti
popw
into
test
add
aas
stos
xor
mov
xchg
mov
xor
jl
mov
js
ret
jae
xchg
out
rcll
popf
dec
fmulp
ret
icebp
cmc
fists
sub
sti
inc
adc
stc
gs
fidivrl
or
mov
inc
repz
fldenv
leave
mov
add
imul
lahf
pop
cmpsl
loopne
call
xchg
shll
insb
ficompl
aam
movsb
pushf
mov
add
sahf
in
mov
adc
cmp
cwtl
pop
iret
jp
cmp
mov
enter
loope
mov
mov
flds
xchg
dec
mov
jmp
dec
and
out
dec
xchg
mov
xchg
or
jge
fucomip
and
mov
aad
sub
adc
mov
add
sub
subb
mov
daa
fsubrs
inc
gs
mov
adc
dec
mov
lock
repnz
and
in
dec
push
insl
lock
push
orl
pushf
popa
into
sarb
pop
dec
xchg
stos
out
pop
stc
into
mov
mov
std
ficompl
inc
rolb
lret
scas
add
dec
cli
xor
pop
fdiv
push
or
sub
mov
es
jg
loop
xor
jl
shrl
or
inc
cmp
push
and
jns
inc
outsl
insl
out
sub
fwait
xchg
or
jle
dec
sar
dec
push
test
outsb
subl
in
iret
mov
sub
and
mov
sbb
cmp
ret
cwtl
lods
cmp
rclb
jl
jmp
ja
fisttpll
xor
mov
pusha
push
mov
out
sbb
xor
setb
lret
and
mov
push
icebp
mov
xchg
add
ss
jecxz
dec
mov
int3
sarb
jg
movsl
fistl
movlps
xchg
icebp
mov
cs
bound
and
shrb
xchg
leave
push
rorl
rorl
push
aam
jo
enter
lock
push
sbb
out
pushf
js
mov
icebp
sbbl
sbb
lcall
lcall
sbb
loopne
hlt
sahf
adc
lret
mov
sub
pop
xlat
adc
pop
aas
mov
adc
je
push
mov
rolb
jno
mov
xchg
mov
dec
lret
push
imul
jo
test
out
adc
loope
dec
jl
push
call
repnz
popf
pop
mov
outsl
out
pusha
gs
adc
in
shl
shlb
rcl
mov
adcb
outsb
xchg
pop
in
fldenv
lods
mov
sub
in
mov
std
out
std
cmpsb
aaa
das
xchg
das
imul
aad
lcall
jae
add
movsb
pop
movsb
push
imul
xchg
mov
dec
lret
xchg
sub
push
and
xor
enter
and
jne
stc
cmp
andb
ja
mov
pop
fisubl
xchg
cltd
pop
ret
into
roll
xor
sbbb
call
aaa
xchg
mov
xchg
div
jmp
das
mov
test
dec
sbb
push
dec
mov
pop
aaa
jg
push
pop
xor
sub
scas
addr16
adc
mov
lret
sub
mov
xor
mov
addl
fcmovne
push
cwtl
and
cmp
and
out
ja
out
adc
xchg
ds
mov
dec
inc
adc
push
mov
push
mov
sbb
and
js
jmp
sarb
scas
push
sbb
adc
hlt
add
test
je
fstpt
lret
nop
fildl
out
push
aas
xor
hlt
dec
and
sbb
sbb
or
pop
add
dec
jb
lret
leave
mov
stos
out
lods
adc
leave
cmc
lods
sbb
inc
xchg
in
int3
xchg
xchg
jbe
inc
mov
adc
aaa
fs
cmp
dec
jae
mov
pop
and
lds
mov
aam
mov
sbb
jnp
mov
movsb
cmp
lea
outsl
jno
push
sbb
mov
add
pop
cmp
jp
adc
mov
mov
iret
push
int3
enter
sbb
pop
cmp
enter
jae
cmpsl
inc
pop
mov
decl
fcom
stc
leave
fldl
sbb
fsubrs
mov
fwait
pop
or
out
or
ret
fwait
or
xchg
sbb
mov
and
jp
arpl
adc
inc
jne
dec
cwtl
jnp
push
aam
in
mov
mov
mov
loope
jmp
push
rcl
mov
jle
mov
mov
inc
data16
test
xchg
push
sbb
push
inc
mov
test
stos
mov
cmpsb
insb
pop
aam
add
lret
cmpsl
pop
push
dec
xlat
adcl
call
sarl
popa
movsb
sub
cwtl
lock
push
cmp
ss
pushf
lock
xchg
gs
mov
out
daa
ret
mov
and
mov
daa
pop
repz
enter
hlt
dec
dec
or
inc
push
adc
dec
cmpsb
icebp
cmp
dec
mov
jmp
shrl
jnp
int3
cmp
ret
add
pushf
pop
dec
fucom
push
push
adc
out
and
das
fldl2e
and
movsb
cmp
scas
call
mov
sub
sub
xchg
sbb
stos
inc
mov
jp
mov
lea
leave
adc
lret
xchg
sbb
clc
jge
add
dec
push
lret
inc
mov
jge
imul
push
push
mov
shrb
repz
xor
fadds
shlb
cmc
call
mov
jns
ret
xor
lea
int
dec
lods
mov
fwait
in
iret
xchg
out
mov
mov
mov
hlt
push
rolb
cmovp
xor
pop
mov
pusha
movsl
aad
mov
pop
and
repnz
pusha
andl
fidivl
jge
jg
mov
data16
notb
mov
in
call
dec
loopne
push
in
mov
lds
data16
fadd
rcrl
fisttpll
scas
cltd
in
out
in
ret
in
bound
cltd
xor
jmp
xchg
xchg
movsb
clc
mov
mov
push
xchg
out
ss
das
push
push
push
sbb
dec
jo
aad
fnstcw
std
mov
faddl
or
pop
add
ret
daa
xchg
xchg
mov
xchg
pusha
lds
daa
xchg
icebp
test
mov
push
addr16
movl
lahf
adcw
cmpsb
sbb
mov
add
push
fstpl
in
adc
cmc
adc
inc
cmp
adc
and
mov
pop
jp
mov
push
fnstsw
imul
insb
push
test
mov
repz
jmp
fimuls
cmp
cli
jg
push
jp
inc
xbegin
push
std
outsb
add
mov
lock
lret
int3
addr16
rorl
sbb
lret
xchg
jo
xchg
mov
popa
xchg
sbb
loop
dec
push
inc
test
and
adc
mov
into
daa
popf
inc
gs
sti
subb
or
out
aam
sbb
mov
add
test
sti
xchg
and
mov
mov
lods
fdivl
lds
and
aas
push
inc
mov
pop
out
aaa
mov
xchg
xchg
bound
clc
jns
mov
cmc
in
out
cmpsl
sub
cmp
cmp
or
cmp
pop
iret
sub
cmp
pop
cmp
xchg
jns
mov
stos
push
data16
jo
mov
adc
loope
inc
jbe
fstpt
cmpsb
aaa
mov
xchg
or
jb
shrl
insb
pop
adc
dec
pop
or
pop
out
aam
pop
in
movsb
pop
mov
push
and
inc
in
cld
ja
lahf
mov
pop
pop
jg
loop
inc
cli
outsb
mov
sbb
mov
inc
sbb
dec
sub
mov
int3
jmp
enter
std
and
sbb
mov
add
mov
inc
pop
cmp
dec
in
dec
cmpsb
adc
xor
lods
daa
adcb
cmp
cs
cld
fmull
scas
mov
and
inc
mov
xchg
mov
pop
fimuls
push
into
bound
and
int3
lock
xor
adcb
cmp
lods
fs
mov
and
sbb
fstl
cwtl
xchg
stos
dec
mov
iret
xchg
mov
sbb
adc
mov
jle
xor
or
fyl2xp1
pop
mov
cmpsb
inc
or
sub
mov
jne
adc
shll
mov
push
scas
ja
negb
push
mov
out
mov
xlat
mov
add
shrb
mov
sbb
fimuls
inc
scas
out
jns
test
jnp
jge
in
repnz
push
sbb
sub
enter
and
std
pop
call
cs
pop
mov
pusha
mov
js
pop
mov
shrl
shlb
std
adc
dec
and
or
subb
sub
jbe
cltd
cli
fisttpll
push
cmp
or
nop
mov
jmp
inc
jecxz
xor
jne
push
dec
jl
in
mov
xchg
out
add
mulb
dec
jp
xchg
stos
inc
cmp
in
pop
stos
aas
adc
xchg
nop
call
in
xchg
arpl
lea
mov
mov
jl
adc
cmc
jl
inc
out
or
jp
jge
jae
sbb
mov
mov
shrl
push
ss
push
ret
in
insl
mov
int3
and
adc
and
xchg
sub
jb
add
or
mov
sub
mov
mov
test
sub
fprem1
bound
insb
or
and
cmp
and
decl
sub
repz
stos
adc
cmp
lods
pop
xchg
xor
inc
xchg
out
shr
out
test
sbb
mov
pop
in
dec
add
dec
mov
movsb
push
jnp
das
rclb
sub
aas
mov
jne
add
lret
jecxz
push
stc
pop
mov
and
cmpb
push
adc
jmp
pop
ficompl
dec
mov
mov
ljmp
out
adc
and
xor
gs
loop
faddl
push
add
xor
out
hlt
and
fdivs
mov
lret
mov
mov
fwait
push
dec
adc
add
xlat
pusha
fdivrl
addb
in
pop
push
ljmp
mov
xchg
mov
pop
scas
mov
sahf
out
sbb
fildll
inc
sbb
out
divb
or
test
repnz
jne
mov
fidivrs
push
adc
fcompl
xor
and
orb
scas
mov
leavew
mov
push
int3
cld
push
cmpl
mov
push
push
imul
mov
jl
cld
outsb
mov
add
jge
xchg
push
mov
lods
sbb
xchg
mov
jmp
fdivrp
inc
inc
ds
fidivrs
out
mov
mov
iret
lret
sbb
cwtl
repnz
cs
dec
pop
push
pop
sub
adc
or
xor
mov
rcrl
push
andl
sub
push
jle
enter
sub
clc
lea
push
sbb
shll
adcb
or
dec
jno
movsb
or
mov
call
mov
popa
push
sysenter
aam
test
pop
out
and
jp
xlat
loopne
sbb
dec
xchg
push
xchg
sbb
lahf
push
or
popa
popf
xor
mov
iret
add
sub
cmp
loope
dec
sbb
pop
mov
inc
out
in
inc
mov
push
sbbb
pusha
lret
push
xor
jecxz
fmulp
push
pushf
aas
pop
adc
mov
fwait
je
or
xchg
daa
or
jp
jbe
mov
cmpsl
ret
dec
xchg
xchg
bound
popf
add
dec
push
jbe
cltd
push
popa
subb
sub
pop
outsb
or
gs
out
aaa
adc
mov
dec
aas
and
inc
int3
xor
test
dec
fistps
fdivrl
adc
jae
adcb
aad
ret
outsb
adc
clc
adc
mov
mov
sub
push
testl
mov
imul
cmp
imul
test
pop
jmp
pop
sub
mov
stos
sub
inc
lret
call
sub
mov
stos
popa
pop
in
sub
mov
scas
out
jnp
mov
imul
cmp
sub
dec
pop
xor
jmp
ss
add
xor
ljmp
sbb
sub
pop
add
inc
mov
fldenv
mov
imul
mov
jb
popf
xchg
push
jge
leave
mov
shlb
sbb
loopne
jl
icebp
repnz
jecxz
pop
int
sti
stc
adc
add
test
mov
add
loop
out
and
and
inc
sub
adc
or
mov
add
cwtl
lcall
mov
cmp
shl
jnp
fbld
add
call
xor
sub
or
lods
or
and
outsb
push
fs
cmc
push
xor
enter
mov
inc
inc
incl
lea
push
mov
or
popa
pop
std
dec
add
clc
mov
adc
dec
push
ss
sbb
xchg
daa
in
fisubs
mov
mov
insl
les
ret
jmp
push
mov
add
ret
xchg
scas
mov
mov
lret
daa
es
cli
dec
mov
mov
xor
or
pop
push
scas
scas
jmp
push
cli
adc
xor
or
mov
std
push
mov
mov
mov
lods
dec
xchg
out
adc
dec
icebp
or
adc
popa
jnp
out
fiadds
and
fs
push
add
push
mov
jg
scas
and
mov
fisttps
fdivl
and
dec
scas
cwtl
mov
aad
loop,pn
test
cmpsl
jl
mov
pop
adc
jmp
das
js
daa
pop
mov
xchg
inc
cmpsl
cmp
sahf
push
push
test
xchg
inc
iret
aam
xchg
ljmp
in
cmp
jge
dec
push
xchg
dec
cmp
mov
pusha
mov
and
and
mov
jae
inc
aaa
push
mov
scas
mov
xor
push
push
sub
push
outsl
mov
mov
imul
sbb
bound
sub
xchg
mov
shlb
lds
jno
mov
sub
or
pop
aaa
in
in
out
inc
pusha
lret
lret
daa
lods
jnp
mov
mov
xor
pop
in
jmp
cs
mov
mov
sbb
pusha
fstpl
inc
outsl
pop
loopne
or
sbb
dec
xor
loopne
mov
adc
test
pop
jl
jge
arpl
fldt
pop
popa
jnp
xor
mov
push
sub
push
popf
stc
mov
jecxz
stos
sahf
pop
je
adc
sub
cmp
stc
mov
mov
pop
loop
mov
dec
js
sub
es
pop
mov
jp
or
jae
loope
lods
lods
scas
popf
mov
insl
fstpt
mov
dec
testl
or
inc
add
push
das
xor
outsb
adc
mov
cmpsl
repz
imul
mov
adc
pop
inc
loope
lock
pop
cli
in
sub
xor
xchg
xchg
pop
sbb
cmp
test
sbb
mov
faddl
push
pop
icebp
add
jge
loopne
mulps
pushf
inc
push
sub
xchg
inc
pop
outsb
pop
movsl
sub
xor
gs
sub
je
cmp
sbb
or
sarl
jnp
scas
in
icebp
int3
xchg
add
fs
test
jmp
test
sbb
imul
add
cmpl
push
pop
sub
lcall
xor
sbb
loop
dec
and
and
inc
jbe
mov
pusha
xchg
inc
shr
sti
adc
cmc
lret
cmp
xchg
mov
and
fwait
mov
pop
mov
xor
pop
jne
inc
push
jbe
mov
jnp
mov
fidivrl
or
push
mov
enter
outsl
adc
scas
test
jle
rol
pop
add
mov
cltd
std
xchg
jb
repz
dec
test
add
out
int3
and
xlat
adcl
cmc
outsb
sub
jecxz
adc
dec
jnp
lret
dec
mov
jp
mov
dec
push
imul
fidivs
sub
and
fwait
imul
add
or
sub
mov
pop
addr16
xchg
mov
mov
je
std
or
movb
xchg
xchg
push
incb
stos
jp
in
sub
jmp
stos
andl
insl
jne
bound
or
sub
jp
lret
ss
inc
pusha
push
xlat
sub
je
aad
mov
add
out
loope
pop
in
lds
fsubrs
daa
mov
arpl
sbb
test
fnsave
out
xchg
push
add
add
jg
js
cmpl
ret
dec
mov
shrl
dec
test
adc
insb
mov
pop
outsl
addb
jno
data16
xchg
test
out
or
arpl
lods
std
push
mov
mov
ret
out
sbb
aaa
push
inc
jg
test
mov
sarl
or
test
jp
xchg
jl
xchg
adc
ret
inc
jae
mov
dec
cmpsb
fldcw
int3
es
jg
mov
inc
or
addr16
mov
dec
dec
inc
dec
mov
and
sahf
bound
jg
cld
cmpsl
sub
push
add
push
in
jo
push
sub
inc
int
jp
mov
and
std
pop
rorb
out
or
inc
pop
in
cmp
js
adc
dec
insl
or
mov
fstpl
test
mov
data16
and
mov
fsubrs
xchg
cmp
outsl
loopne
fcoml
cli
fdivs
rcrl
pushf
scas
xor
jbe
push
into
out
mov
pop
aas
or
jp
icebp
mov
fstpt
hlt
js
loopne
bound
sub
cmc
stos
mov
js
adc
loop
push
dec
movsl
gs
xchg
jmp
cmp
push
or
xchg
mov
lcall
cli
jo
test
sar
adc
pop
push
cmc
lds
sbbl
cmpsl
lods
std
inc
test
shl
test
jmp
pusha
mov
and
sar
test
add
dec
sbbl
movsb
dec
ret
bound
adc
std
scas
not
roll
rclb
mov
and
cli
sbb
pop
adc
fldl2t
lahf
jl
test
out
sub
and
ljmp
jg
mov
xchg
mov
xchg
cwtl
and
sub
push
fsubrl
xlat
notl
push
aad
lret
test
inc
popf
mov
or
mov
sub
rclb
into
and
arpl
mov
lods
jbe
dec
int3
jb
sbb
fs
add
sbb
stc
and
add
mov
in
leave
out
sbb
fisttps
pop
sbb
in
adc
imul
sahf
inc
loop
cmp
or
and
or
xchg
mov
outsl
hlt
sub
loope
jno
js
mov
jmp
das
jmp
inc
movsb
cli
pusha
dec
cli
lea
je
inc
roll
arpl
dec
pop
xor
movsl
pop
dec
mul
adc
mov
lods
scas
movsl
sub
loopne
xor
out
sbb
or
mov
or
adc
mov
cmp
mov
cld
cmp
xchg
inc
mov
mov
mov
pop
and
jnp
mov
adc
jne
adc
cmpsb
or
pushw
int
push
jl
aaa
fwait
sub
sub
dec
ss
adcb
or
mov
aam
add
lods
hlt
xor
stc
push
adc
mov
xchg
popa
jnp
jae
int
rolb
inc
xor
pop
call
adc
call
add
mov
out
movsl
shll
inc
push
jo
mov
xlat
ret
ret
lods
sub
shll
scas
sbb
imul
out
xor
fdivrs
adc
xchg
mov
int3
and
sbb
mov
and
mov
pop
xor
out
imul
pushf
push
push
mov
iret
loop
jmp
jge
aad
xor
inc
repnz
lods
jno
mov
mov
imul
cmp
pop
outsb
ljmp
ret
cmp
lret
imul
cmp
mov
mov
fiadds
mov
adcl
or
das
sbb
xor
iret
or
insl
inc
jle
cwtl
fs
cmp
or
push
jo
and
lea
dec
xor
test
xor
in
jbe
lods
cmpsl
mov
in
out
outsl
lahf
sub
mov
jae
loopne
inc
inc
nop
push
lret
ds
shll
cmc
mov
push
fistpll
arpl
scas
stos
decl
adcb
sub
bound
dec
jl
mov
add
loope
push
inc
js
rcrl
loop
ret
mov
int
inc
call
mov
xchg
jno
or
out
inc
add
out
popf
cmp
lret
xchg
jns
inc
or
pop
pop
xchg
mov
sub
jb
rcrl
loope
mov
lret
mov
jecxz
je
mov
ret
hlt
sub
lret
out
iret
icebp
fimull
out
push
xor
or
lret
lcall
aaa
int3
sti
dec
mov
xor
testb
mov
pop
std
sbb
mov
cwtl
inc
fmull
cmp
enter
xchg
adc
cltd
repz
xor
test
addr16
out
test
cmc
mov
repz
ret
pop
xchg
test
pop
aam
pusha
iret
push
cwtl
and
adc
gs
out
add
les
or
lock
and
out
roll
jne
xor
mov
jl
jbe
mov
push
je,pt
add
shl
movsb
aas
add
pop
sbb
xchg
popa
mov
mov
adc
test
rcrl
mov
mov
popf
jbe
test
mov
mov
pop
test
push
mov
in
stc
aad
mov
inc
je
cmc
or
push
int3
rcll
daa
push
int3
stos
cmp
xchg
add
xchg
unpcklps
xor
fcoms
pop
sbb
mov
outsl
xchg
adc
jmp
arpl
cltd
cmp
sbb
sub
pop
cmc
inc
and
lahf
jg
rorl
es
negb
andb
test
xor
test
movb
icebp
cmp
and
repnz
in
pop
data16
aam
js
mov
dec
pop
or
ret
aaa
clc
pop
gs
inc
ds
repz
data16
aad
mov
jge
jbe
pusha
enter
fnstcw
in
sbb
jbe
mov
fstp
adc
add
popf
mov
es
pop
jmp
push
clc
flds
neg
push
enter
cs
pop
test
dec
test
stos
dec
dec
out
out
test
aas
pushf
sub
icebp
stc
les
sbb
jecxz
lock
add
push
cmp
add
sbb
add
add
xchg
add
aad
dec
inc
jecxz
mov
xchg
push
or
add
add
push
xchg
lahf
out
mov
inc
xlat
lahf
shl
test
scas
push
jb
stos
xchg
push
and
fstp
sahf
scas
out
dec
sub
adc
xorb
fistpl
mov
mov
sub
jmp
xchg
lock
push
ret
shlb
mov
ret
ret
mov
nop
jle
into
lret
inc
dec
xor
jg
jb
mov
jbe
les
xchg
xor
inc
mov
shl
int
jb
sbb
push
or
mov
gs
test
dec
cmp
ljmp
mov
iret
mov
test
popf
xorl
adc
ds
pop
push
mov
imul
in
mov
pop
pop
sub
imul
mov
xchg
add
sahf
push
mov
cmp
push
frstor
and
sub
rclb
mov
stc
add
adc
sahf
sub
mov
xlat
fildl
lods
scas
jo
movlhps
sub
mov
iret
pushw
cmpsb
lds
cmp
out
in
andb
lods
or
les
mov
xor
add
adc
cmp
and
xchg
sub
clc
scas
xor
cmpsb
push
fwait
mov
inc
xchg
nop
pop
fbstp
cmc
mov
fists
jno
pop
or
sub
pop
clc
movsl
dec
mov
imul
sbb
dec
inc
rolb
popf
sahf
cli
pop
les
inc
xor
mov
cmp
test
jecxz
sarb
loopne
fucom
sar
pop
std
push
jmp
mov
xchg
ret
call
pop
or
fildl
lods
lahf
lahf
rcll
sti
iret
cmp
add
xchg
stc
je
lods
fdivrl
dec
push
xchg
add
fidivl
sarb
push
imul
sub
lcall
mov
ret
sub
int
xchg
add
push
adc
cld
sbb
cli
sbb
xchg
ljmp
fldcw
scas
jae
repnz
mov
jns
shrl
sbb
jecxz
inc
outsl
jle
pushf
jle
or
aam
sub
xor
add
nop
repz
cmc
das
dec
lock
adc
adc
movsb
sbb
in
push
loopne
into
mov
outsl
test
push
les
aam
or
daa
lahf
movsb
mov
bound
sub
pushf
xchg
sbb
lret
imul
mov
mov
sahf
cmpsb
dec
hlt
xchg
jnp
in
movsl
orb
mov
gs
fnstenv
dec
mov
mov
xchg
dec
and
xor
fs
or
xor
xchg
dec
out
inc
push
enter
cmp
xor
dec
mov
iret
leave
xlat
sbb
mov
mov
lock
js
out
jle
iret
es
jg
test
add
pusha
imul
into
push
repnz
adc
std
sbb
sysret
adc
sarb
repnz
lds
sub
fisubs
xlat
fsub
loop
push
test
cmp
repnz
aam
bound
popa
inc
scas
sub
sbb
subl
xor
mov
jge
pop
push
addr16
cmp
xchg
out
add
add
mov
mov
sbb
leave
jle
adc
dec
jmp
sub
inc
mov
sub
mov
testb
xor
shl
dec
call
and
popa
lods
lret
es
or
jno
movsl
dec
shl
lods
xor
mov
and
dec
dec
int3
mov
pop
or
sbb
icebp
es
mov
cmp
adc
addr16
dec
sub
addl
or
add
mov
repnz
aam
pop
inc
sbb
cwtl
cmp
negl
adc
pop
mov
mov
mov
andb
loopne
popf
xchg
mov
jns
jo
not
ficoms
sub
aaa
cmp
jge
into
pop
xchg
ja
popf
mov
outsb
cmp
push
movsb
push
movsb
cmpsb
cmp
mov
loope
or
and
mov
pop
sub
xchg
fmull
pop
pop
pop
mov
inc
mov
sub
pop
pop
cmpsb
das
lret
sti
lock
ret
or
pop
leave
push
andl
adc
pop
aaa
lods
pusha
pusha
in
mov
mov
andl
sbb
and
lods
xchg
xor
jp
leave
cmc
mov
movsb
enter
jge
shrl
jge
data16
cmp
scas
push
mov
adc
test
jns
and
mov
aad
sbb
xor
xchg
or
in
sub
test
sbb
jo
or
cmp
inc
xor
pop
pop
int3
pop
or
cmpsb
fistpll
inc
fwait
adc
jmp
scas
mov
inc
lds
jo
loopne
popf
add
jb
ljmp
arpl
jnp
adc
mov
inc
pop
movsb
and
pop
out
outsl
or
out
or
add
loopne
mov
ss
pop
outsb
in
fists
add
pop
cmp
jns
pop
stos
fistps
sti
and
cmpsb
nop
xchg
pop
push
ds
jmp
in
and
lods
or
xchg
inc
bound
das
rorl
cmp
jae
int
mov
roll
nop
sarb
inc
push
pushf
pop
mov
jl
push
push
je
scas
pop
test
xor
pop
test
iret
aaa
sbb
push
adc
imul
push
nop
ja
das
and
sub
popf
jnp
fnstenv
lods
pop
or
sbb
xchg
bound
jo
mov
loopne
jmp
add
inc
jmp
pop
mov
sti
movsb
movsb
cld
mov
fiadds
out
fistpll
pop
cmp
pusha
or
xchg
clc
adc
mov
jns
adc
xor
in
cmp
in
call
loop
mov
ficompl
cld
inc
push
sub
push
mov
ret
js
pop
stos
mov
adc
mov
repz
in
mov
and
rcrb
cltd
pop
int3
movsl
inc
mov
push
in
or
roll
push
or
jnp
inc
int3
sub
popa
cltd
out
stc
dec
push
imul
mov
cmp
sub
stos
es
test
popf
lret
cmp
sub
neg
cmp
inc
rcrl
sti
or
outsb
cmpsl
scas
mov
dec
lea
or
pusha
push
int3
push
decl
mov
loope
negb
aad
cltd
pop
cmpb
stos
jmp
adc
pop
mov
mov
cmovs
jnp
jmp
xor
push
fsub
push
sahf
pop
sbb
lea
push
negb
jae
lods
std
flds
push
dec
gs
sub
mov
fsub
adc
and
cmp
push
out
mov
sub
add
cli
cltd
adc
mov
pop
cltd
push
dec
xchg
cmp
ds
movsb
lret
adcb
rolb
xor
ret
ds
loopne
getsec
cltd
lock
or
pop
mov
sti
xchg
xor
xchg
mov
xor
scas
pop
fstp
hlt
sbb
mov
mov
cli
lods
xchg
fsubs
cmp
sbb
mov
sbb
jo
bndstx
jge
jne
shlb
mov
xlat
mov
push
cmp
rcrl
arpl
insb
pop
mov
fmuls
xchg
xchg
fsubl
inc
push
cmp
add
or
adc
aas
xchg
data16
sub
popl
shlb
ljmp
lock
out
lods
dec
fadd
and
jne
ret
add
rcl
xchg
ficoms
addr16
push
dec
rolb
repnz
sbb
cmpsb
sbb
pop
std
jb
pop
sbb
lret
test
call
lea
nop
movsl
xor
test
push
jbe
mov
pop
cwtl
scas
or
pop
lret
xor
scas
cs
push
push
sbb
notl
dec
fsubrs
sbb
lcall
mov
aaa
xlat
pop
out
es
pop
popf
ds
aas
pushf
xchg
insb
cmp
cmp
test
icebp
popf
out
fcoml
scas
dec
add
add
jge
popf
iret
jg
jno
cld
cmp
and
mov
jecxz
movsb
in
dec
cwtl
aam
push
dec
sbb
and
sahf
testl
adc
pop
push
xchg
sbb
mov
pusha
jmp
fmuls
mov
adc
push
mov
sahf
mov
or
stos
fiaddl
push
xchg
outsl
pushf
push
xchg
aaa
lods
ret
and
push
jnp
xor
sbb
inc
pop
dec
gs
stos
imul
das
dec
pop
sbbl
and
add
rcr
or
xor
daa
clc
mov
outsb
pop
ljmp
flds
imul
popa
popf
fsubrl
pop
arpl
xchg
xlat
jns
insb
push
inc
sub
popa
mov
sub
jbe
pusha
dec
nop
xchg
popa
addr16
imul
sub
in
dec
arpl
cmp
adc
mov
daa
cld
stc
and
add
fiadds
int
jge
gs
mov
testb
fdiv
cmova
cwtl
lea
outsb
aaa
call
push
pop
sbb
clc
push
xchg
scas
sub
popa
pusha
push
push
stc
inc
push
adc
inc
sbb
lahf
add
cmc
fwait
leave
sub
hlt
inc
xor
jmp
cli
fcomp
roll
jno
inc
jns
ud1
into
jge
test
leave
movsb
mov
adc
and
cs
xchg
mov
mov
fdivl
push
sbb
test
insl
lret
es
jl
mov
cmp
pop
andb
outsb
lret
repnz
dec
andl
add
or
and
das
lret
insb
ds
sbb
xchg
mov
mov
subl
ljmp
mov
ds
aam
mov
mov
cmpsl
out
xchg
pop
mov
dec
addl
and
insb
popf
or
adc
loope
sbb
rol
sbb
popf
imull
scas
pop
push
into
repz
mov
mov
pop
leave
push
xlat
adc
add
push
dec
or
xchg
pop
xor
push
xchg
pop
add
push
xor
bound
dec
jle
popf
cli
and
fdivs
dec
dec
mov
xchg
fistpll
in
sbb
sbb
nop
xchg
sahf
ss
jne
xchg
push
xchg
sub
jecxz
ljmp
movsl
mov
in
lock
jns
les
sbb
nop
sbb
mov
hlt
pop
pop
stos
add
dec
add
or
imul
or
dec
xchg
mov
xchg
mov
mov
push
and
das
dec
fsubrs
mov
sbb
and
mov
push
out
das
lods
dec
outsb
in
xchg
xor
shll
movsl
lret
sub
ret
cmp
lahf
mov
mov
push
sub
add
js
cmp
dec
lea
push
lret
outsb
mov
std
mov
dec
adc
jno
ret
and
inc
movsl
add
jbe
repnz
ds
dec
loope
dec
lea
dec
mov
inc
pop
sub
mov
sub
pusha
mov
ss
loopne
js
inc
jle
sbb
mov
iret
sub
popl
xchg
out
sarl
jno
stos
xchg
mov
sub
shrl
fidivrl
insl
push
out
xlat
push
jg
das
jbe
sbb
dec
ss
mov
lret
add
int
push
or
pop
sbb
in
popa
or
pop
hlt
mov
ret
addr16
mov
fldenv
insb
out
es
jl
test
push
inc
pop
ja
mov
loop
cmp
cmpsb
orb
push
cmp
dec
sub
add
test
pop
test
sbb
jo
mov
mov
imul
int
insl
or
out
jo
loopne
pop
fcomi
push
fnstcw
cli
jmp
pop
or
sbb
ficompl
pop
xor
jnp
xchg
jecxz
aaa
pop
shr
mov
xchg
and
in
mov
hlt
sub
mov
imul
sub
cli
mov
xchg
push
fld
push
push
scas
push
movsb
pop
test
cld
out
gs
push
ss
idivl
push
fs
in
jnp
imul
test
xchg
jecxz
jae
scas
mov
inc
mov
fwait
cmpsb
jmp
insb
pop
sub
mov
rolb
jl
hlt
arpl
xchg
in
add
lock
loop
push
insl
dec
dec
sbb
shlb
ficoml
mov
jns
cmc
xor
xchg
enter
pop
jge
jbe
inc
shrl
addr16
xor
adc
push
mov
jnp
jo
arpl
xchg
xchg
sbb
dec
daa
movsl
adc
mov
cmp
lds
dec
idivb
or
sbb
loop
es
mov
and
dec
rclb
mov
nop
cmpsb
nop
mov
sbb
loopne
xchg
leave
sub
mov
in
inc
mov
rorl
push
daa
push
ljmp
inc
cwtl
bound
mov
mov
mov
push
outsb
push
bound
out
mov
pushf
shl
nop
mov
mov
adcb
sub
dec
rcrb
and
jae
fdivrl
or
lea
push
orb
cmp
cmp
out
fbld
out
mov
lods
mov
dec
pop
sub
lahf
int3
fiadds
cmp
pop
pop
inc
pop
mov
cltd
xchg
mov
sbb
sub
ds
pop
in
gs
push
fsub
xchg
mov
xor
fcomi
ja
arpl
inc
popf
sub
xchg
aad
jg
sbb
mov
pop
push
dec
cmp
fistpll
xor
mov
jbe
fwait
out
xchg
sbb
notb
cltd
hlt
add
test
insl
jbe
sbb
iret
pop
rol
pop
test
imull
cwtl
add
fs
int
in
cmp
sbb
mov
cmpl
or
dec
enter
mov
sbb
add
cmp
xchg
xchg
fisttpll
popf
scas
pop
icebp
dec
xor
test
shr
sarl
lods
jo
fldl
lods
ja
and
aas
leave
ret
pop
sub
jno
shl
cmp
mov
inc
aas
les
cli
jecxz
inc
or
xor
aas
xlat
test
and
scas
enter
arpl
lahf
ss
clc
icebp
adc
lods
cwtl
popa
mov
jmp
js
movsl
dec
shll
push
stc
jge
sbb
mov
cld
adc
mov
pop
loopne
or
and
and
out
dec
adc
ficompl
xor
movsl
addr16
aad
ret
pop
test
popa
ss
push
pop
and
and
add
andl
out
push
dec
push
stos
cltd
dec
jbe
mov
jnp
push
push
pop
addr16
cs
pop
jb
imul
push
loop
gs
pop
dec
je
mov
adc
out
in
jge
jecxz
cmpsl
or
insl
les
mov
mov
shll
jbe
sub
leave
movsb
insl
xchg
into
adc
scas
cmpsb
add
in
repz
lcall
cmp
fldcw
out
sahf
xchg
popf
sbb
ffreep
jg
or
enter
pop
mov
push
sti
ds
stos
jb
lret
sub
lods
nop
jo
add
jae
add
xchg
mov
sti
out
out
jo
adc
mov
mov
sub
push
xor
jne
or
pushf
movsl
cmc
cmp
leave
rcr
sbb
insl
add
jmp
stos
dec
and
xchg
adc
fisttps
sbb
push
out
fistpl
test
lret
push
adc
sbb
inc
fmuls
lea
jmp
rolb
push
mov
in
jmp
and
lock
jo
idivb
bound
stos
ret
inc
out
jl
sahf
xlat
adc
cmp
xor
stos
arpl
insl
mov
imul
arpl
jne
mov
mov
dec
outsl
out
stos
xor
adc
mov
add
int3
lret
aam
jmp
cmp
add
out
int3
add
popa
sub
adc
mov
xchg
jg
mov
jge
pop
fstp
push
fcomps
mov
pop
push
mov
inc
arpl
das
pop
mov
pop
add
outsl
jnp
cmove
mov
sub
sti
shlb
arpl
sti
lods
sub
jecxz
loop
rorb
or
bound
inc
iret
xchg
or
sti
push
repnz
int
aaa
or
mov
daa
xor
pusha
jae
mov
out
cwtl
shll
iret
rolb
imul
flds
jmp
shll
jbe
movsl
add
push
adc
out
inc
adc
dec
inc
cmpsl
test
insl
fwait
push
lea
push
sbb
push
and
jne
int3
bound
mov
pop
mov
mov
lods
insb
dec
shl
jns
or
pop
or
pop
jg
movsb
push
xchg
fcompl
xlat
loop
mov
in
jnp
mov
lahf
adc
jg
push
insl
aam
repnz
jl
xchg
ds
sbb
mov
xor
xor
scas
push
int3
mov
cmp
popf
stc
pop
sti
mov
lcall
out
push
ja
add
in
cmpsb
repz
pop
sub
movsb
and
shl
and
repnz
aaa
sarb
in
sahf
mov
push
push
shll
adc
sub
push
cltd
sahf
sahf
out
push
add
mov
arpl
inc
sub
je
inc
lahf
ficoms
or
mov
cmp
xchg
mov
mov
or
cmp
lret
xchg
ret
xchg
add
shlb
mov
cmp
sbb
call
pop
pushf
adc
or
mov
inc
jge
fsubrs
ss
push
mov
aad
jp
out
data16
xchg
sbb
jmp
inc
inc
mov
mov
int
outsb
idiv
mov
xlat
xchg
dec
adcb
xchg
xor
scas
dec
dec
dec
pop
orl
push
push
jno
xorb
xchg
out
fs
xchg
xchg
cmpsb
mov
iret
sub
push
pop
shll
cmp
mov
test
andb
xchg
xchg
ljmp
adc
mov
jbe
cmpsb
adc
nop
mov
add
dec
pop
push
cmpsb
inc
jns
ffree
ja
sbb
and
pop
xor
add
sahf
inc
lods
push
mov
xor
jl
icebp
push
scas
sahf
lret
in
scas
cwtl
mov
dec
lea
and
sbb
sti
sub
jge
pusha
adc
xor
push
jb
dec
or
mov
scas
rclb
dec
dec
inc
jecxz
or
and
lods
mov
aaa
int
inc
add
fdivp
faddp
mov
cli
nop
inc
jnp
mov
mov
std
xchg
push
sub
mov
dec
sti
std
data16
jecxz
daa
ja
cmpsl
cld
lds
and
ret
cli
leave
mov
sti
and
jmp
cmp
stc
push
jo
inc
and
dec
movsb
popa
das
inc
sub
pusha
lret
mov
adc
push
add
push
scas
pop
cmp
mov
push
jl
daa
mov
ret
sub
lret
xor
sbb
add
mov
dec
mov
push
bound
icebp
in
out
arpl
aam
jno
add
push
es
add
dec
daa
arpl
addr16
icebp
loop
stos
mov
jge
jge
scas
pop
jno
and
push
inc
imul
mov
out
add
lret
pushl
test
sbb
dec
or
insb
push
in
mov
into
mov
add
stos
notl
shrb
lahf
add
ret
stc
mov
push
mov
jns
pop
pop
jne
xchg
call
mov
stc
jp
pop
or
xchg
jge
or
das
bound
add
push
fcoml
add
sbb
stos
pushf
jge
outsb
out
loop
fmulp
or
add
ss
aas
sub
inc
xchg
out
in
mov
mov
test
shlb
adc
xchg
loopne
shrb
insl
add
not
loopne
int3
ss
lcall
paddsw
in
in
jnp
popa
jp
pop
pop
mov
xchg
dec
pop
insb
cmpsl
adc
xor
xchg
in
inc
fldl
shll
outsl
je
out
rcll
inc
add
mov
ror
mov
stos
lock
aas
testl
sbb
in
sbb
sbb
pop
ss
arpl
cs
popf
and
add
mov
sbb
pushf
pop
repnz
gs
jno
fildl
xchg
sub
jb
imul
jb
insb
repz
rol
or
jle
je
into
push
pop
roll
mov
pop
shr
shlb
add
sbb
push
xchg
andl
andb
xor
cli
or
cmpsb
pop
xor
sbb
shrl
push
mov
sub
das
push
jo
ljmp
mov
cmpsl
out
popf
inc
sbb
imul
sub
mov
ficoms
mov
sbbl
std
pop
dec
or
and
lock
xchg
fldt
dec
pop
insb
cmp
mov
pushf
xor
push
orl
lea
xchg
arpl
mov
adc
divb
inc
insb
mov
pop
sbb
jg
sbb
fmulp
and
lret
int
int3
cmp
sahf
js
inc
not
or
stc
outsb
xchg
and
xchg
outsl
lret
scas
insb
movsl
pmulhuw
nop
sbb
adc
push
fdivrl
je
sub
cld
xchg
inc
fs
mov
mov
repz
and
shl
adc
pusha
aas
add
push
inc
cli
scas
sti
xchg
mov
adc
xchg
push
mov
sub
and
dec
jle
fbstp
push
mov
inc
daa
push
mov
insl
scas
xor
push
in
das
jbe
xchg
xchg
pop
adc
jg
dec
mov
loop
jne
mov
push
stos
adcl
sahf
test
sub
or
daa
int3
and
push
jne
sbbl
pop
out
dec
xchg
movsl
sub
cli
mov
cmp
aad
pop
fstpl
sub
adc
lea
jo
mov
aam
mov
clc
push
stos
out
pop
inc
cmp
dec
dec
push
mov
movsl
push
and
sbb
mov
pop
mov
cmp
jle,pt
shr
cmp
xlat
shlb
or
mov
mov
lret
jo
in
fcompl
pop
pop
xor
movsb
jne
adc
inc
rorb
push
aaa
popa
push
dec
jae
or
sbb
and
jb
stos
xchg
int3
push
arpl
insl
and
and
insb
push
cmp
hlt
lret
jns
mov
stos
inc
dec
dec
ss
push
inc
fidivrs
push
leave
mov
pop
adc
xchg
loope
or
data16
xor
pop
push
cmp
pop
ljmp
hlt
mov
mov
cld
icebp
test
jnp
xchg
mov
cmp
cmpsl
enter
out
inc
mov
sub
cmc
mov
cwtl
or
aad
dec
pop
loopne
push
outsb
pop
je
jge
cmp
fldenv
cmpsl
pushf
lret
xor
xor
sbb
aam
push
clc
mov
pop
adc
insb
add
pop
ljmp
pusha
inc
int3
inc
les
lret
pushf
push
mov
int3
ret
lcall
jecxz
das
orl
int
jnp
pop
mov
stos
xchg
jnp
leave
fldl
pop
mov
fldenv
subl
xchg
jp
sbb
sbb
pusha
dec
jmp
out
jg
fcom
pop
sbb
mov
xor
xchg
shrb
fdivr
adc
lahf
orl
push
sarb
enter
pushf
std
xchg
and
cmp
rcll
sbb
and
fcoms
or
fwait
loopne
lea
sti
sub
lcall
xchg
pand
popf
or
and
lret
mov
mov
jns
test
add
addb
std
lret
imul
inc
mov
pop
out
cli
mov
or
rcrb
add
xchg
sub
repnz
adc
or
or
movsl
cmp
mov
jo
mov
in
mov
or
and
sahf
orb
sub
push
push
mov
dec
add
scas
mov
mov
data16
jne
jecxz
mov
insw
loope
xlat
shr
lea
shll
push
dec
aam
mov
mov
scas
test
inc
push
jbe
testb
out
push
and
lods
cld
stos
dec
push
and
xor
jno
jmp
jl
add
xor
mov
js
mov
sti
push
leave
xchg
push
cli
into
addr16
shrb
sbb
jns
mov
ret
rolb
cltd
je
or
cmp
jo
mov
dec
pop
fdivl
aas
xchg
and
scas
mov
inc
jg
imul
dec
pop
xchg
add
dec
mov
or
fs
lods
mov
mov
add
ljmp
mov
adc
insb
data16
in
xchg
xchg
imul
jns
lcall
jge
xchg
xchg
sub
add
adc
pop
dec
into
shll
sbb
lahf
lret
inc
lret
mov
push
lret
add
pop
mov
lahf
mov
sbb
cmpl
xchg
loope
imul
and
jl
andl
icebp
out
push
xchg
mov
scas
and
mov
push
rclb
testb
je
inc
xor
pop
push
adc
imul
dec
idivb
jecxz
and
sarb
call
mov
mov
aad
or
mov
and
scas
insb
jnp
cmp
cmp
mov
outsl
lret
and
pop
iret
repz
push
out
cmpsl
movsl
sbb
stos
mov
dec
dec
cld
xchg
jno
shl
cltd
andb
mov
aam
aaa
add
popf
sub
outsl
repnz
lods
js
fwait
lods
xchg
sub
mov
or
jge
test
mov
test
sub
shl
aas
jb
push
sub
and
xor
imul
xchg
xchg
sub
or
jb
dec
outsl
pop
cmp
push
mov
sti
aad
pop
sarb
sbb
ljmp
pop
cmc
adcb
lcall
lcall
iret
push
jmp
cs
adc
imul
jl
sti
cmc
sbb
inc
mov
subl
outsb
shr
stos
pop
or
popa
mov
fisubrs
ja
push
pop
and
mov
sbb
addr16
jecxz
lock
scas
push
femms
add
gs
pop
mov
int
mov
out
cli
sbb
adc
in
mov
iret
rep
inc
das
add
or
and
mov
scas
ss
mov
add
mull
push
jne
inc
jo
mov
dec
iret
pop
push
sbb
movsl
iret
lret
xor
pop
test
mov
pop
mov
jo
into
add
sbbb
cmpsb
scas
xchg
mov
es
pop
dec
fnstenv
mov
stc
dec
fucomp
fadds
ret
jbe
inc
sbb
cmp
add
mov
mov
adcb
insl
and
jge
sbb
xchg
add
jge
shrl
shrl
dec
sbb
inc
ds
int
mov
dec
clc
push
xor
adc
cmc
int
dec
jle
fnstcw
movsl
pop
imul
mov
xchg
mov
pushf
out
cltd
sahf
xchg
scas
mov
das
xchg
xor
adc
jle
out
daa
and
jns
cmp
push
lcall
movsl
lahf
in
dec
arpl
mov
jbe
xchg
mov
mov
cld
push
inc
ljmp
shrl
push
cmp
cmp
cwtl
arpl
inc
or
test
notrack
ss
jmp
shr
dec
add
lods
mov
test
or
jns
adc
cmc
je
stc
mov
int3
arpl
mov
xor
jne
add
dec
mov
lret
in
stos
loope
or
and
sub
adc
push
push
mov
stos
in
cmp
dec
cmp
pop
scas
cmp
scas
jnp
jns
ss
pop
adc
xchg
imul
cs
and
test
add
mov
popf
shl
sarl
sbb
jbe
loope
sub
adc
xor
addr16
jno,pn
dec
mov
push
aam
mov
push
push
jmp
test
mov
jb
mov
sbb
loop
jl
jno
cwtl
imul
icebp
mov
jl
add
pop
adc
jle
ss
mov
fs
mov
arpl
or
or
xchg
fucomip
mov
add
jg
mov
scas
push
into
sbb
and
int3
rcl
outsb
pusha
adc
adc
pushl
insl
roll
pushf
and
in
notb
jge
call
xchg
adc
enter
or
aam
mov
fiaddl
out
loopne
xor
test
iret
sub
mov
lds
cmpsb
and
sub
rcll
je
mov
pop
repz
das
jmp
add
push
sub
lds
lret
add
xchg
lahf
mov
out
cltd
sbb
cs
test
add
mov
push
push
jne
or
ret
xchg
or
adc
jecxz
xchg
arpl
cmc
int
movsl
push
pop
xor
inc
xchg
pop
inc
mov
popf
inc
adc
cmpsb
pop
dec
mov
push
mov
lea
mov
bound
or
xchg
movsl
daa
mov
repnz
scas
jge
rcll
cmpsb
xor
popl
out
push
subb
rcrb
ja
mov
xor
repnz
cmp
js
mov
xor
lret
enter
add
pop
jno
mov
hlt
cmpsl
sbb
sub
mov
pop
push
in
iret
cli
leave
add
dec
sti
daa
mov
or
daa
lret
mov
inc
add
xor
sbb
add
or
xchg
cmc
jo
mov
mov
idivl
mov
cli
test
call
cld
sub
sbb
inc
sti
std
adc
leave
xchg
mov
and
jns
gs
sub
fidivl
sbb
inc
mov
sub
pop
jle
adc
sti
push
rolb
scas
jl
and
scas
mov
out
xchg
lds
mov
adc
and
and
pop
dec
push
int3
pop
cs
and
add
fisttpll
mov
and
pop
pushf
ja
mov
mov
lahf
inc
dec
aam
push
ds
mov
xchg
movsl
cli
imul
cli
test
pop
inc
and
cmpb
mov
pop
dec
xor
inc
xchg
mov
jno
sub
pop
cltd
incl
push
mov
mov
stos
xor
aam
sub
aaa
push
add
mov
sahf
imul
add
lret
das
sbb
or
push
adc
pop
jp
in
mov
dec
scas
out
pop
test
jbe
imul
mov
sub
push
sahf
sub
dec
push
loopne
repnz
mov
inc
scas
dec
aaa
aaa
xor
pop
push
loopne
mov
mov
dec
pusha
shl
mov
mov
cmp
repz
aaa
cmc
setg
fisttpll
xchg
fistl
icebp
scas
in
cmovg
xlat
lods
fnstsw
sub
jl
cld
inc
stc
push
filds
test
mov
or
or
mov
dec
mov
dec
insb
push
xchg
push
push
call
dec
cmc
jo
mov
push
jge
pop
mov
sbb
rorb
add
es
in
pop
mov
clc
mov
and
inc
pusha
nop
insb
int
jp
push
mov
mov
pop
add
xor
fdivs
inc
jae
push
mov
xor
and
xchg
xchg
movsb
sub
sub
sub
add
mov
cmpsb
shrb
push
call
fisttpll
ja
nop
mov
movsl
ret
out
xchg
pop
shlb
adc
lahf
jl
xchg
adc
ds
pusha
or
mov
gs
cmp
cmp
xchg
pop
pop
pop
iret
je
out
popf
repz
mov
mov
add
ljmp
testb
xor
inc
mov
fldl
xchg
popa
add
repnz
sarb
mov
adc
das
test
fnsave
in
pop
cmp
mov
mov
jo
adc
incl
jmp
or
jae
in
push
or
and
aas
mov
arpl
bound
add
cmc
cmp
mov
xor
jo
lea
xchg
pushf
stc
push
lods
push
mov
dec
xchg
sbb
and
jmp
inc
into
inc
ds
mov
xor
fadds
add
test
mov
push
fcomp
mov
shrl
mov
dec
xor
xor
cmp
xor
and
jge
mov
jecxz
pop
mov
dec
push
xchg
ljmp
jbe
pop
mov
cmpsl
std
fsubrl
push
sbb
gs
jmp
imul
push
lret
lods
int3
mov
adc
insb
mov
scas
into
in
xchg
fs
or
add
mov
push
insl
mov
fsubp
push
repnz
sti
filds
jb
mov
test
xor
mov
xor
sbb
add
inc
push
inc
addb
js
out
mov
nop
dec
mov
cld
leave
jb
mov
pop
jp
scas
scas
fistpll
lcall
add
jp,pt
in
jge
iret
jge
lods
icebp
incl
dec
xchg
xchg
mov
jmp
stos
loopne
stos
test
enter
ss
push
out
aas
inc
mov
sti
xor
je
fdiv
mov
in
pusha
mov
icebp
lret
scas
push
outsb
xor
mov
pop
ljmp
ret
mov
add
nop
mov
xor
push
test
xor
repnz
lods
lods
fwait
ret
inc
subb
mov
xchg
stos
dec
add
xchg
out
bound
stos
jp
pop
mov
in
rcll
sbb
push
jp
mov
lret
decl
push
xchg
and
int
fcoml
pusha
mov
int3
fldt
mov
pusha
or
rclb
addl
fdivrl
sbb
xor
mov
popf
outsb
cld
xchg
psrld
int3
mov
mull
das
fs
jle
popf
popf
test
stos
jp
adc
xor
sti
movsb
xor
or
sub
inc
jl
mov
sbb
lcall
sub
push
dec
lock
jge
mov
mov
mov
jae
adc
add
jae
repnz
loop
push
add
sbb
push
mov
jno
xchg
dec
jmp
pop
sbb
mov
out
adc
fdivs
repnz
in
push
fildl
mov
add
in
ret
xorb
aaa
add
ds
cld
into
cmpsb
add
fsubl
mov
sbb
in
mov
aam
dec
test
mov
test
adc
adc
pop
cs
push
in
cli
fwait
jle
cld
ss
js
sbb
call
push
sbb
mov
or
xchg
push
cltd
jmp
sarl
cmpsb
sti
incl
dec
push
movsl
xchg
lcall
mov
sbb
fadd
xor
lcall
and
in
cwtl
addr16
push
push
jnp
push
in
xchg
out
shlb
fadd
push
and
jge
std
xchg
add
add
into
movsl
mov
in
jp
inc
arpl
negb
xchg
shlb
xchg
add
pop
sub
scas
mov
gs
cld
mov
mov
xchg
fucom
push
ret
mov
mov
loope
mov
mov
xor
rcrl
aas
jg
clc
ds
movsl
repnz
imul
ds
xor
mov
mov
xor
pop
sub
xchg
out
mov
sbb
jbe
sbb
js
push
bound
mov
ret
add
loop
outsl
test
push
or
fwait
xchg
hlt
and
in
and
movsl
and
sub
mov
clc
es
push
aad
inc
pusha
frstor
and
ja
xor
mov
jo
std
or
dec
ret
dec
or
mov
mov
lods
and
dec
pop
add
sub
scas
and
jmp
inc
shl
mov
sarb
mov
sbb
test
cmp
add
dec
stos
repz
xor
mov
js
jmp
push
out
cmpsl
fisubrl
icebp
mov
out
add
pop
add
test
mov
xor
cmp
cmp
xchg
outsb
push
test
out
sub
fs
aaa
jne
push
cmp
push
inc
add
push
lret
popf
rolb
inc
sbb
mov
out
push
es
or
in
push
jno
ljmp
gs
xchg
pop
inc
adc
data16
push
outsb
test
xchg
mov
loope
adc
jl
insl
pusha
cmp
xchg
dec
and
adc
mov
call
outsl
cs
mov
dec
jg
les
or
lock
mov
mov
cs
ss
add
fidivl
inc
mov
in
sbb
pop
stos
js
and
mov
sbb
sbb
orl
mov
stos
sbb
mov
push
adc
inc
push
les
rcll
and
cmc
xor
inc
loope
and
xor
sub
xchg
and
nop
cmp
test
sti
or
stos
xor
cmp
sbb
ljmp
leave
xchg
xchg
sti
sub
jo
dec
hlt
pop
popf
sub
push
mov
flds
push
mov
adc
enter
mov
stc
clc
xor
push
cmp
add
mov
fmulp
mov
lods
mov
xchg
int
iret
push
jbe
mov
and
xchg
mov
sub
ja
xchg
xor
pop
std
push
mov
or
jl
clc
pop
lds
adc
adc
lret
je
sbb
mov
xor
inc
or
addr16
or
mov
in
pop
cmc
mov
repz
xchg
push
cmp
adc
enter
adc
stos
mov
xor
or
add
dec
xchg
rorb
jno
mov
repz
cmc
aas
jge
ss
xchg
movsb
jo
lea
sarb
pop
jge
jb
lret
std
lea
pop
das
dec
iret
movb
jmp
mov
imul
pshufw
cmp
xor
jae
dec
jecxz
and
js
mov
inc
xchg
cmp
sar
pop
jecxz
movaps
fucomp
mov
jecxz
adc
add
mov
jp
lds
rclb
xchg
insb
xchg
ss
mov
mov
xchg
mov
fidivrl
es
cvttps2pi
xchg
pusha
adc
push
insb
jno
shrl
scas
lds
daa
insb
dec
hlt
or
int
or
lret
icebp
pop
sub
jne
and
enter
dec
in
dec
ret
cli
push
cmp
xor
out
push
or
imul
and
mov
js
jb
adc
lcall
lret
je
andb
lds
dec
cmp
leave
xchg
out
jecxz
lret
loope
addr16
in
cltd
std
cmpsb
mov
das
cmp
xchg
sar
xchg
inc
pop
jle
jp
rolb
pop
push
scas
jle
rclb
rolb
fcomi
aaa
loope
je
int3
sbb
imull
testl
xor
sub
mov
sbb
lods
incl
mov
call
ds
sub
sbb
mov
add
lods
or
and
adc
sbb
add
adc
test
popa
fdivs
add
xor
test
and
xchg
addr16
fdivrl
lea
out
leave
and
loop
sti
sub
cmp
int3
mov
test
mov
pop
and
dec
int3
cld
adcl
out
loop
popf
movsb
arpl
jle
sbb
mov
pop
xor
sahf
mov
cmp
adc
add
lret
ds
test
add
mov
std
movsl
adc
inc
adc
mov
sar
mov
inc
jbe
add
cmc
push
and
sub
inc
xorb
sub
leave
ficoml
cmpsb
add
and
data16
mov
adc
or
jne
aad
repnz
mov
mov
cmp
daa
jno
les
cltd
aad
or
jb
sbb
ret
repz
or
call
adc
or
add
addr16
aaa
rcr
sbb
lea
xor
push
in
nop
mov
insl
testb
rcl
push
insb
cmc
bound
outsl
ss
js
out
push
adc
jbe
aam
xor
pop
fldcw
or
jae
mov
in
push
lock
addb
or
stos
xlat
or
mov
cmp
rcrb
clc
aas
xchg
pop
mov
push
mov
lods
mov
and
fbld
jns
jns
cmovg
testb
xlat
and
mov
sub
jo
cs
aas
fistps
lret
sub
daa
inc
add
jno
inc
mov
mov
imul
lds
jnp
mov
jl
aam
int3
xchg
xor
push
call
mov
and
ret
cli
jb
dec
mov
loopne
enter
mov
ds
mov
stc
mov
sbb
insb
fpatan
sahf
pop
sbb
inc
in
add
jmp
das
negl
xchg
dec
imul
imul
xor
pop
sub
cmp
inc
mov
or
pop
xor
das
jnp
fidivrs
pop
faddl
pop
xor
shlb
inc
adcl
or
dec
je
xchg
mov
insl
jbe
add
shrl
sub
hlt
sbb
fmuls
enter
ror
cmc
mov
repz
repnz
dec
in
xlat
inc
sbb
rcl
cmp
lds
shlb
dec
fstp
jns
arpl
mov
ret
pop
fdivl
hlt
and
int
xor
xlat
cwtl
cs
mov
fistps
movsb
lret
sbb
and
push
test
cwtl
add
leave
sub
mov
xchg
orl
ficoml
nop
jns
ret
pop
xor
xchg
gs
xor
sub
insl
sahf
mov
xchg
decb
adc
cmp
xor
ja,pt
dec
dec
jb
int
cltd
jno
add
sbbb
pop
mov
xlat
test
jb
leave
stos
into
lods
pop
jmp
push
rcrw
xor
mov
outsb
cmp
push
hlt
sbb
repz
and
cmp
jno
or
mov
and
cwtl
out
loopne
outsl
push
popf
lcall
ds
out
inc
jo
cmp
das
popf
cmp
inc
pusha
in
jl
xor
mov
jecxz
add
add
jmp
jb
ds
xor
stos
or
mov
int
popa
cmp
js
inc
pop
popf
outsb
adcb
or
cmp
sbb
jge
inc
inc
push
insb
cmp
xchg
mov
and
jl
fimull
mov
sti
pop
insl
arpl
fnstsw
sub
fisubs
xor
push
adc
orb
sub
shlb
add
sub
pop
jecxz
out
aad
sub
lods
pop
inc
stos
clc
stos
popf
filds
stos
outsb
in
jle
in
pop
inc
frndint
aas
sub
in
adc
rcrb
xorb
cs
icebp
cltd
test
jp
scas
pop
popf
mov
frstor
mov
lods
sub
out
mov
sar
ds
ret
aam
nop
xchg
sbb
ljmp
xchg
in
adc
mov
and
addr16
mov
sub
nop
es
loop
xchg
xor
aas
and
jmp
sbb
cs
popa
dec
dec
mov
pop
adc
sub
and
or
inc
rcr
imul
xor
rol
pop
test
or
adc
aad
xchg
inc
imul
sbbl
mov
shrd
stos
push
iret
btl
jb
test
mov
mov
int
dec
fmull
xchg
cmc
call
mov
enter
loop
cld
sbb
ja
jge
out
adc
imul
lret
je
loope
xor
sub
xor
movsl
enter
push
ss
test
inc
shlb
cmp
jecxz
xchg
out
rorb
cwtl
push
jo
out
cltd
push
inc
or
dec
mov
out
jp
repnz
out
inc
xchg
push
fcmove
xchg
or
pop
cmp
mov
mov
outsb
pop
push
jae
push
mov
and
jae
add
xchg
inc
and
dec
mov
jge
in
xlat
sub
inc
jae
sub
lods
in
pop
imul
push
mov
add
cwtl
sbb
adc
decl
subl
movsb
sti
xchg
stos
push
incb
fsubrl
nop
fisubrl
ss
cmp
jno
push
fcomip
cmp
lahf
push
mov
mov
push
loope
lods
or
mov
push
imul
mov
addr16
cmp
gs
insb
test
rep
xor
inc
add
jecxz
fildll
push
mov
dec
and
or
arpl
test
int3
jb
adcb
cmc
cld
cmp
out
mov
pop
loope
lock
test
sub
or
es
clc
stc
xchg
ja
sub
into
repnz
fildl
jne
cmc
pop
mov
lret
push
int
inc
adc
add
int3
jnp
adc
inc
push
outsb
pop
mov
test
inc
loop
ja
dec
nop
lahf
mov
adc
ficoml
arpl
jle
and
adc
lret
lret
lret
mov
and
mov
repnz
or
jmp
pusha
mov
cmp
bound
inc
cmp
pop
test
inc
bound
jecxz
xchg
push
mov
inc
pop
jb
mov
jmp
outsl
insl
mov
sbb
imul
mov
sub
test
push
sub
imul
jp
inc
sub
stos
nop
div
jb
fsubr
fbstp
xchg
and
mov
int
cld
rcrb
leave
or
mov
inc
loope
clc
lea
sub
cmpsl
rcrl
scas
mov
pop
push
jge
lock
imul
push
insl
sbb
add
pop
dec
xlat
cmp
ss
adc
pop
into
mov
xorl
mov
in
xor
mov
loope
and
dec
sbb
mov
es
adc
dec
ss
les
js
and
mov
aad
jb
sbb
popa
dec
iret
stc
pop
adc
jge
mov
rol
add
inc
pushf
and
pop
movsb
lea
inc
xchg
stos
mov
imul
test
add
cmp
int3
scas
stos
lcall
fcomip
popa
daa
xor
mov
frstor
lock
inc
xor
nop
std
cmp
out
and
mov
cld
mov
outsl
inc
add
test
jecxz
rorl
hlt
pop
in
jne
pop
pop
sti
fstl
cmpsl
jnp
xor
imul
fucomip
es
push
mov
dec
lods
xlat
ret
mov
insl
mov
mov
orl
jo
pop
sub
adc
mov
pop
cli
pop
pop
xchg
adc
push
out
mov
cmp
jbe
mov
xor
jns
inc
add
sbb
add
mov
adc
inc
pop
sub
adc
cmp
fwait
xchg
stos
repz
int3
outsb
lret
sub
es
xchg
clc
mov
orl
xchg
in
push
mov
xor
shlb
scas
ja
fwait
push
xchg
daa
jle
xchg
insl
bound
aad
mov
xchg
cmp
xchg
dec
test
rorl
pop
sub
push
xchg
ror
mov
ljmp
push
lret
lcall
or
cmpsl
add
cmpsb
syscall
negb
push
sbb
adc
inc
jbe
cmpsl
adc
mov
jecxz
sbb
cmp
insb
sti
mov
cwtl
cltd
rclb
addr16
fwait
divb
jbe
scas
dec
sti
call
pushf
pop
push
mov
mov
iret
sbb
jns
cltd
pushf
lret
mov
xor
hlt
mov
xor
in
insl
out
mov
jle
mov
cli
movsb
push
xchg
pop
pop
adc
prefetchwt1
or
notl
dec
cmp
cwtl
icebp
xor
mov
cli
cs
imul
daa
xor
push
sub
loop
adc
idivl
lret
push
das
jl
fsubrl
push
and
gs
sub
sbb
push
mov
incl
push
jns
mov
sahf
notb
or
popl
or
sti
testl
push
cmpsl
sbb
dec
mov
rcrb
adc
add
call
push
icebp
in
iret
xchg
mov
daa
imul
fs
fwait
mov
lcall
jmp
orl
lock
fwait
mov
cltd
xchg
jo
loop
jg
add
fisttps
lahf
out
cs
stc
adc
pop
mov
mov
das
pop
movsb
push
dec
mov
cmp
cwtl
ret
dec
or
mov
out
les
mov
dec
mov
sbb
fs
jmp
xlat
inc
sbb
mov
outsl
das
out
bound
frstor
inc
int
rclb
mov
pop
jb
push
les
mov
test
je
imul
xor
popa
cmp
push
inc
jae
add
shll
add
mov
test
mov
pusha
rolb
sti
ret
add
cmp
test
cmp
jle
mov
addb
sahf
arpl
mov
rorl
push
lds
cld
sarl
add
jb
les
popa
into
push
mov
adc
push
mov
aad
pop
imul
lds
incb
pop
mov
lods
or
cltd
shlb
adc
mov
sub
inc
mov
inc
out
inc
xor
das
in
into
cli
pop
decl
test
jp
inc
adc
fnsave
stc
fnstsw
shlb
sub
and
imul
adc
pop
cmc
gs
loope
enter
stos
inc
push
fdiv
or
cmp
call
fsubs
inc
ljmp
cs
shlb
fsubr
xor
jne
push
pop
dec
loop
pop
mov
bound
shl
scas
call
xor
push
imul
mov
inc
loop
movsb
cmp
mov
sti
fisttpl
xlat
mull
or
mov
clc
jmp
pushf
es
daa
popf
cmp
jp
jo
ja
icebp
xor
icebp
or
adc
repz
mov
sbb
inc
outsl
addr16
cmc
cmp
push
fistl
ljmp
es
and
lcall
addr16
jl
sti
adc
push
andb
lea
add
lret
jne
sbb
fwait
inc
cmpsl
fidivs
imul
sub
sbb
mov
in
jbe
jmp
into
pop
xchg
or
pop
pop
test
xorb
sbb
xchg
test
outsl
mov
dec
lret
sub
mov
mov
mov
jle
and
mov
enter
das
lret
xor
in
add
xchg
jo
inc
inc
pop
jnp
mov
rcl
add
dec
lds
pop
sar
int
out
xlat
dec
xchg
xchg
insb
out
jae
pop
gs
ret
rorb
pop
mov
lret
push
add
pushf
repnz
inc
pop
rorl
mov
and
mov
dec
cmp
cs
and
arpl
or
pusha
sub
or
cmp
sub
out
mov
sti
mov
push
and
xchg
cmp
pop
loope
enter
jge
icebp
add
pop
add
shlb
rorl
pop
adc
shll
xor
dec
std
cmc
sbb
js
faddl
orl
enter
repz
xchg
sbb
pop
pop
sub
lcall
push
jo
xor
pop
popa
cmp
je
pop
or
test
in
and
lods
xchg
mov
icebp
push
xchg
pop
enter
xor
shl
popf
xchg
fwait
xor
test
sub
sbb
jle
fwait
mov
pmulhuw
mov
fs
cmp
cld
pop
jle
insl
push
cmp
push
adc
inc
jp
adc
stos
pop
mov
cmp
out
ret
sbb
std
pop
push
pop
push
lret
repnz
xchg
daa
xor
add
stos
mov
arpl
cwtl
pop
outsb
emms
nop
dec
lcall
and
jb
mov
xor
cld
push
cmpsb
ficoms
adc
int3
int
sarb
mov
pop
xchg
cli
sub
mov
jbe
dec
xor
sub
xchg
push
fldt
mov
rcr
sbb
pushf
sub
dec
inc
adc
mov
dec
ljmp
cmpsl
dec
out
mov
xor
aas
pop
inc
inc
lret
aas
loopne
push
enter
xlat
jmp
hlt
popf
and
mov
mov
jle
leave
pop
pusha
jp
xor
inc
push
cmp
call
movsl
pushf
out
lcall
lods
aam
shl
rolb
mov
enter
andl
mov
pop
xchg
mov
cld
xor
stos
jg
int3
push
outsb
lea
xchg
in
adc
idivl
jp
lret
jl
xor
cmp
pop
mov
aas
call
mov
xchg
popa
inc
leave
mov
mov
arpl
mov
push
mov
xchg
test
outsb
sub
sub
lods
outsl
addr16
iret
xlat
subb
jnp
insb
pusha
push
mov
mov
mov
pushl
popf
push
and
cmp
test
in
stos
daa
push
setl
shll
mov
inc
or
push
cmp
inc
and
mov
cmp
pop
out
xchg
fstpl
xor
mov
in
outsb
sbb
mov
mov
cmc
jb
cmc
testl
lcall
sarb
out
les
repnz
jp
cwtl
inc
inc
jp
fs
pop
ret
xor
or
fldt
add
push
loope
mov
stc
jbe
outsb
mov
mov
loopne
popl
push
dec
mov
xchg
out
dec
mov
cmp
or
sub
jbe
int
jbe
xchg
ficoms
add
or
xor
outsb
ljmp
aaa
fdivrs
mov
and
cmpsl
xor
lret
xor
stc
sub
or
mov
jbe
pop
inc
add
shrb
data16
les
int
cmc
or
lret
jle
sbb
push
nop
jcxz
iret
gs
push
inc
inc
out
addr16
push
mov
adc
sbb
orb
fnsave
cmp
xor
mov
cwtl
or
xchg
xchg
out
pop
sbb
ds
and
out
xlat
addr16
xor
movsl
push
adc
or
ret
mov
or
ds
daa
or
rol
xchg
pusha
shrl
icebp
cmp
mov
push
aad
pop
test
test
dec
test
push
lea
adc
jno
mov
fiadds
mov
or
mov
dec
icebp
sar
pop
push
ss
rorl
push
call
mov
add
test
cmpsl
jp
fildl
lock
lret
jmp
sbb
in
lcall
int3
adc
xchg
cmp
or
cli
das
jbe
xchg
inc
rol
or
jge
mov
cmp
or
or
xchg
mov
stc
adc
fdivp
repz
stos
or
xchg
pop
loopne
cmp
xchg
and
lahf
sub
mov
jae
cmpsb
mov
loop
pop
sub
dec
cmp
jnp
xor
in
xor
imul
jp
jmp
enter
sub
inc
cmpsb
lret
pop
bound
jno
xchg
dec
icebp
subl
loop
push
jb
jne
adc
mov
xor
sbb
and
mov
in
idivl
sub
jecxz
pop
clc
mov
jnp
rcl
inc
out
pusha
pop
aas
pop
and
scas
mov
push
dec
jne
xchg
add
inc
popa
loopne
xchg
cmp
adc
xor
dec
push
cmp
pop
les
enter
jp
xor
jae
lcall
loop
pop
out
fs
pop
cmc
mov
adc
loope
add
xchg
stos
loopne
pop
aaa
stc
pop
mov
adc
negb
sti
jle
pop
sbb
jp
fs
lock
pop
repnz
fidivrl
push
nop
add
push
cs
or
pop
aaa
pop
subb
bound
or
inc
xchg
push
jno
pop
dec
inc
dec
jno
aas
mov
bound
popa
jp
shlb
pop
cmp
jmp
stc
mov
jnp
pop
jnp
insl
pop
rcrb
cmp
mov
jmp
xor
mov
and
adc
stc
lods
out
das
pop
flds
imul
shl
loopne
xchg
mov
in
jno
sbb
push
lret
jbe
inc
cmpsb
cmp
jno
mov
mov
jge
or
adc
je
daa
test
jae
sbb
ficoms
xrelease
jb
push
cmpsl
adc
xchg
dec
and
ror
call
xchg
jo
cmpsb
jo
xchg
xchg
mov
xchg
movsl
dec
pop
fldenv
cmp
dec
cmp
je
ja
xchg
push
pop
imul
cmpsb
add
into
insb
sub
aas
jecxz
test
enter
cwtl
push
push
jl
sub
and
sarb
mov
mov
fdivrl
mov
loope
cwtl
jo
ljmp
mov
xor
xor
clc
push
clc
jl
push
or
jmp
or
arpl
pushf
stc
fldt
pop
das
aas
or
lods
cmp
add
je,pn
sub
jge
out
bswap
cmpsb
loopne
or
rorl
int
pop
sub
loope
pop
or
rcrl
inc
and
int3
loopne
rolb
popf
mov
xchg
sbb
ficoml
outsb
ljmp
out
insl
push
inc
jb
addr16
mov
jo
cli
leave
or
fadds
sbb
inc
sbb
rol
and
sbb
add
fistpll
inc
dec
jmp
dec
insb
lret
dec
mov
sbb
lahf
gs
cmpsb
push
iret
inc
je
sarl
test
pop
jo
push
sub
fisubrs
jns
pop
lds
jnp
mov
pop
nop
iret
and
mov
repnz
mov
daa
sub
shrl
xor
rolb
dec
push
mov
jmp
or
repz
fstpl
ds
xchg
jo
jmp
repz
sub
fimuls
lea
scas
fs
lcall
pop
or
iret
nop
in
xchg
and
mov
cmp
clc
jno
ljmp
aad
cmpsl
add
fimull
push
fstl
pop
xchg
push
push
ret
xor
jnp
adc
adc
push
sub
and
divl
xor
xor
in
nop
mov
loop
sbbl
scas
int3
mov
pusha
add
dec
les
mov
xchg
mov
inc
inc
mov
dec
fisubrs
push
push
ret
sub
xchg
sbb
pop
dec
sbb
mov
sbb
shrl
mov
movsb
push
hlt
sti
push
pop
or
adc
xor
pop
fsubrs
and
arpl
push
add
popf
ss
ret
inc
jae
pop
add
fs
into
jge
out
popa
inc
push
dec
rcll
dec
mov
mov
mov
or
fcomps
sub
enter
aad
xchg
xchg
ds
aad
jl
into
push
in
fistpl
ss
stc
int
sub
adc
inc
and
rol
jl
into
outsb
arpl
jge
xchg
dec
mov
xor
out
cmp
push
add
fsubl
mov
in
fxam
push
mov
xor
addr16
sub
adc
in
movsl
mov
in
lds
xor
jp
fisubs
gs
xchg
sub
jnp
xchg
cmp
pop
push
add
jb
xchg
lea
sub
insl
lret
inc
xor
fnstsw
sbb
icebp
xchg
fcomip
xchg
pop
fisubrl
pop
sub
daa
xchg
or
sub
xchg
arpl
in
jb
xchg
stos
mov
pop
ret
dec
pop
and
repz
andb
dec
mov
xor
pop
cmp
cli
in
push
testl
inc
sub
mov
aad
into
and
push
jns
scas
and
jno
test
sub
loope
mov
cmp
aad
icebp
xchg
loop
xchg
mov
mov
test
pop
and
sbb
roll
or
or
movsb
or
dec
insl
push
cltd
push
lret
mov
es
mov
mov
loop
out
sub
out
mov
mov
test
fadd
mov
cltd
mov
nop
dec
aam
mov
pop
ja
ljmp
pop
addr16
jge
cwtl
shr
iret
add
aam
add
test
jecxz
and
lret
dec
notb
cmp
fwait
sbb
stc
jmp
imul
stc
xchg
sub
lcall
pop
mov
inc
push
cmp
outsb
sarb
adc
pop
icebp
sahf
push
decb
scas
scas
mov
pop
dec
or
mov
jmp
outsl
adc
aas
test
push
out
xchg
rolb
cmp
adc
test
and
xor
insb
pop
push
hlt
loop
dec
cmp
popf
ds
mov
mov
outsl
test
imul
jnp
inc
mov
icebp
push
lods
out
out
lods
add
les
pop
lea
sub
bound
pusha
scas
out
ds
cltd
pop
dec
dec
daa
and
sub
push
andb
jo
mov
mov
rcr
and
cmpb
mov
jle
xor
sbb
cwtl
fsubl
pop
aas
pop
xchg
push
sbb
loopne
insl
fcoms
dec
sub
cmp
shlb
add
ss
fildl
out
cmpsl
mov
jle
xchg
insl
add
out
sub
add
mov
outsb
popf
call
and
sub
int3
pusha
aam
imulb
fwait
loop
mull
ret
loope
dec
fwait
or
sarl
stos
shr
dec
push
mov
cmpsb
or
gs
lcall
dec
hlt
jecxz
push
jle
or
mov
dec
int
sbb
stos
xor
iret
dec
push
mov
xchg
int
mov
data16
or
pop
add
cwtl
mov
mov
jno
outsl
xchg
idiv
pop
xlat
loop
loope
mov
cmc
inc
call
out
or
js
test
and
movsb
jge
shll
pusha
call
sub
adc
inc
inc
mov
loopne
and
add
xor
push
xchg
jae
cwtl
mov
sub
lahf
fistl
push
add
jbe
cmp
add
int3
dec
inc
test
lea
out
popa
mov
inc
lcall
sti
jbe
mov
stos
mov
loop
and
ret
int
sub
mov
xor
in
cmp
subl
jb
es
sbb
pushf
in
fs
orl
cwtl
sbb
xor
cmp
xor
xchg
cltd
cmp
scas
jmp
sbb
jns
jne
mov
cmc
stc
insl
push
cmpsb
leave
xor
pop
fstpt
stos
cmp
lret
mov
push
sub
in
sbb
jl
sub
sbb
rcll
fwait
ret
stc
or
push
stos
cmc
stos
push
mov
inc
adc
cmp
mov
pop
mov
aad
mov
fsubr
dec
ret
push
cltd
add
imul
imulb
cmpsb
dec
cli
movsl
inc
pop
int
std
inc
add
hlt
jmp
jnp
push
mov
test
cld
xor
mov
or
loope
mov
es
add
fdivrs
jmp
int3
jl
shrb
fisubl
fwait
add
ja
les
shll
xchg
out
mov
pop
shrl
cmp
ja
jp
fisubrl
mov
or
push
repz
out
sub
scas
ja
and
dec
push
sub
add
mov
fisubrl
push
adc
int
mov
push
bound
push
sbb
and
sub
cmp
test
jae
das
fildll
inc
in
repnz
testl
pop
nop
xchg
stc
cmc
movsb
adc
dec
xlat
mov
repnz
outsb
addr16
xor
scas
or
add
fdivs
inc
ljmp
addr16
in
in
aad
shlb
mov
pushf
push
dec
cmpsl
insl
xor
testl
fcmove
outsb
dec
or
imul
insl
inc
mov
inc
sbb
jb
inc
insb
imul
pop
inc
mov
mov
scas
xchg
jae
add
xlat
imul
cmp
xlat
cmp
push
adc
fiadds
outsl
ret
loope
push
jmp
mov
jecxz
xor
mov
mov
jne
push
into
add
sub
sub
mov
mov
nop
loop
shl
ljmp
call
inc
shr
or
int3
sub
mov
mov
mov
dec
sub
rcll
cmpsb
cmp
and
adc
add
pushf
jecxz
adc
mov
in
inc
es
lods
add
insl
test
mov
sub
push
pop
movsl
push
fisubrs
inc
mov
cmp
fidivrl
cmp
mov
mov
or
lods
adc
mov
and
dec
adc
xor
fcompp
cmp
in
or
add
sbb
mov
out
ret
pop
pop
jmp
movsl
aas
insb
in
mov
clc
repz
push
lock
mov
xchg
mov
and
inc
pop
push
rorb
jmp
test
and
add
cltd
xchg
cmp
xchg
movsb
out
arpl
out
jae
ret
push
jae
push
mov
add
pop
sub
mov
dec
push
int3
jb
pop
push
js
sbbb
jge
and
ret
test
iret
xlat
cwtl
das
xor
adc
enter
sarb
sub
xor
aas
bnd
adc
dec
rorl
gs
ss
insl
jbe
repz
inc
push
dec
pop
aad
enter
push
mov
ljmp
inc
inc
adc
cmp
cmpsb
xor
repz
ds
add
dec
jl
cmpsb
pushf
movsb
cltd
jp
mov
jae
lret
lcall
cmp
ret
pop
orb
push
outsl
mov
daa
xor
add
subl
push
dec
js
lahf
cmp
dec
pushf
daa
jne
xchg
sub
int3
jg
dec
xor
add
lods
test
mov
shll
jl
clc
jmp
add
and
out
scas
mov
jne
inc
adc
xchg
jbe
mov
xlat
gs
scas
fdivs
in
or
fucomip
pop
sub
inc
xchg
inc
ja
inc
pop
lret
cmp
or
into
cmp
xor
enter
lret
or
divb
jg
sub
adc
inc
xor
jl
dec
jno
add
push
fwait
outsl
mov
xlat
mov
rcl
cmp
popa
icebp
mov
paddsb
inc
call
inc
jecxz
scas
xchg
cmp
cmp
jb
mov
push
push
push
pop
sbb
cmpl
sub
jne
pop
out
and
ss
adc
repnz
testb
out
cwtl
pop
mov
les
jne
aas
stc
inc
arpl
stc
scas
cld
adc
fcmovnb
xchg
daa
pop
jb
dec
fidivrs
aas
sahf
cmp
imul
mov
pop
fcoml
push
shll
sti
rorl
dec
xor
stos
imul
pusha
xchg
push
or
in
mov
insl
xor
mov
shrb
xchg
loop
sti
js
push
shrl
push
sbb
dec
mov
jmp
mov
xor
cli
movsb
aas
mov
add
iret
subl
or
in
add
dec
pop
scas
in
xor
ljmp
jno
xchg
xchg
xor
push
mov
je
aaa
fcomip
fdivr
scas
fiaddl
xchg
cmp
movb
in
sbb
jecxz
rorl
ret
faddl
pop
dec
test
adc
sbbb
js
out
xor
fstpl
sti
push
pop
stos
cld
add
ljmp
outsl
jo
mov
mov
pop
mov
jae
xlat
ljmp
scas
imul
hlt
test
hlt
mov
dec
aas
add
mov
enter
xor
jecxz
cmp
inc
scas
lods
inc
mov
inc
int
xor
mov
mov
xchg
xchg
adc
imul
and
mov
mov
xchg
movsl
sub
loop
pusha
cmpl
lds
cmovge
sub
inc
shll
inc
in
ja
mov
xchg
ret
xor
nop
js
mov
cmpsb
push
or
fucomp
mov
in
jl
adc
int
int3
pop
cmp
outsl
pop
ja
hlt
lods
hlt
hlt
test
daa
test
sbb
lods
lock
sub
test
pop
repz
arpl
in
cld
push
imulb
inc
out
add
scas
out
fucomip
xchg
repz
out
xchg
stos
jecxz
xchg
add
rcl
iret
add
fwait
sbb
cmpsb
fwait
orps
rorl
pop
mov
jo,pt
pusha
sbb
std
hlt
subl
shlb
daa
pop
ret
mov
shlb
bound
jmp
adc
mov
ljmp
jo
push
xchg
mov
cmp
jno
mov
jnp
mov
lahf
addr16
xor
loop
xor
xchg
popa
ds
xor
xchg
fwait
out
fcoms
inc
push
pop
pop
enter
dec
popa
shlb
hlt
pop
xor
pop
rcrb
jmp
inc
mov
int3
inc
xor
out
inc
mov
test
mov
sub
mov
or
pop
push
adc
call
add
daa
rorb
pop
daa
sbb
sbb
in
lds
cltd
add
inc
adc
dec
ret
lea
dec
fwait
and
lcall
cmc
pusha
arpl
jp
movsl
inc
mov
mov
mov
lods
mov
out
scas
aas
dec
lret
mov
or
lock
mov
xchg
jae
rcrl
sti
mov
xlat
cmpsb
enter
neg
inc
sbb
lods
pop
add
dec
inc
mov
insl
xlat
xor
cmp
into
popa
movsb
cmp
xchg
dec
negb
mov
or
dec
push
sbb
mov
addr16
jbe
pop
lret
lock
int3
mov
sbb
popf
pop
mov
test
mov
orl
gs
add
subl
stc
add
test
mov
ret
add
jecxz
sub
popf
subb
es
and
clc
sub
xchg
dec
mov
cmp
loopne
mov
das
movsl
sbbl
stos
dec
pop
sub
andl
mov
xchg
iret
add
adcl
test
lret
or
mov
gs
xchg
fnclex
outsl
xchg
iret
test
cmpsb
in
daa
mov
movl
pusha
sub
fmul
push
add
jg
adc
arpl
popa
bound
out
clc
les
push
das
ret
dec
or
imul
mov
not
data16
dec
arpl
jp
mov
idivl
mov
add
popa
xchg
cmp
mov
xor
test
dec
pop
fisubrs
pop
push
sahf
nop
mov
fwait
adc
xchg
adc
cmp
hlt
xor
push
pop
mov
stos
sub
add
incl
xchg
int
movsb
sbb
imul
pop
rcl
push
dec
lods
ss
and
in
jns
bound
repz
dec
hlt
test
push
and
pop
aas
jg
orb
cmp
jo
test
push
outsb
inc
lods
jae
mov
fldenv
call
subb
xchg
sub
jle
xchg
ficompl
clc
jp
xchg
jge
je
rolw
push
js
ja
push
pop
js
mov
cmpsb
repnz
fldt
mov
sub
or
xor
aas
lds
sbb
movsb
sti
ss
mov
lods
mov
leave
xchg
scas
add
pop
ja
mov
or
lea
pop
mov
lea
stos
push
cmp
mov
cmp
addb
mov
sbb
cmc
jmp
movsb
lods
jns
adc
std
arpl
mov
sbb
jecxz
adc
xor
jp
addr16
ja
mov
dec
fstps
or
test
pushf
fcmovu
mov
inc
loopne
or
hlt
into
clc
inc
mov
popa
cmp
cmc
enter
sbb
cmpsb
repz
pop
or
xchg
sbb
sarl
nop
mull
jp
push
or
pop
loop
ds
push
mov
jae
icebp
lock
mov
popf
mov
cld
mov
ds
fucomp
daa
pusha
insl
lock
out
imul
aam
jae
shrl
in
je
push
int3
xor
push
add
cmpsl
cmc
mov
and
outsb
cs
aas
imul
sbb
mov
fdivrs
out
idivb
mov
int3
cmp
imul
push
mov
jge
adc
loope
rorl
ret
test
xor
rcrl
rorb
adc
sbb
xchg
popa
aas
mov
jp
je
jne
loope
and
lcall
pop
mov
push
int
std
jbe
xor
xor
mov
fiadds
xor
sub
pop
jmp
jecxz
inc
scas
cltd
mov
push
mov
lea
mov
sbb
sahf
das
imul
cmp
sbb
in
xchg
mov
pusha
xorl
int
jae
pop
lcall
jb
mov
xor
push
ret
fwait
xchg
sbb
xchg
pop
mov
add
add
popa
and
xchg
scas
stc
fimuls
push
in
dec
adc
pop
imul
xchg
mov
test
push
pop
aas
xor
das
fildll
sub
pushf
fimuls
cltd
fs
ficomps
sbb
ret
push
pop
mov
sbb
dec
lea
add
mov
push
cmp
fstl
jne
jecxz
or
out
ljmp
push
fdivr
aad
xor
cli
or
xchg
add
iret
push
mov
dec
jne
mov
lcall
xchg
pop
sub
daa
xchg
sbb
scas
xor
xor
imul
insl
dec
test
es
jle
loop
stc
cmp
mov
or
sahf
bound
or
in
push
adc
in
pop
test
clc
aas
test
cmp
jb
pusha
xor
add
js
add
xchg
inc
push
cmp
adc
inc
stos
push
out
daa
pop
or
pushf
inc
mov
add
icebp
aad
xchg
push
or
movaps
mov
popf
imul
in
nop
daa
mov
stc
inc
inc
movzwl
push
push
jns
arpl
sbb
loope
sub
ss
test
mov
lods
jmp
shr
sbb
shl
pop
imul
nop
repz
out
inc
pop
xchg
insl
or
lods
xor
out
jle
lcall
aad
addr16
inc
push
andl
and
ficoml
mov
in
mov
mov
xor
cmp
int
sub
in
ljmp
popf
int
xor
push
mov
ret
cs
add
add
fadd
rorb
daa
push
test
hlt
xor
popa
ja
mov
fsubl
ret
xchg
push
fs
js
fucomip
mov
push
mov
sub
xchg
xlat
ffree
pop
cmp
adc
rcrb
stc
jno
cmp
inc
jecxz
jb
or
mov
inc
movsb
jb
cli
in
adc
cmp
loopne
and
lcall
jmp
ljmp
inc
scas
mov
mov
popa
inc
lcall
mov
pop
cmp
cli
mov
push
mov
xchg
xchg
in
sub
int3
jmp
fsubrs
insl
jns
scas
pushf
mov
xlat
push
out
sbb
push
mov
es
dec
cltd
xor
push
cld
dec
cli
shll
mov
mov
jne
mov
mov
cmc
sub
mov
and
dec
repz
xor
xor
xchg
cmpsb
aas
rcrl
test
shrb
add
pop
mov
cmp
and
lahf
les
push
xchg
ds
mov
dec
sbb
xor
xchg
fstps
add
adc
mov
jb
rcll
xchg
lahf
push
push
mov
repnz
or
xor
stos
movsl
cwtl
cwtl
mov
dec
jo
test
ljmp
pusha
imul
inc
mov
ss
mov
jbe
jmp
push
test
cmp
sbb
add
repz
push
mov
mov
adc
std
aad
cs
std
push
jp
mov
out
pop
add
stos
test
loop
pop
or
push
das
jge
mov
adc
out
cmc
out
jne
ret
aam
cs
xchg
xor
sti
push
push
lea
xchg
in
add
xchg
outsl
mov
test
js
lods
xchg
cld
xchg
pop
fldt
adc
or
pop
cmp
insb
xchg
jp
mov
mov
fnstsw
xor
or
outsb
xor
shll
pop
push
inc
xor
clc
or
jle
fs
mul
dec
sub
icebp
frstor
sbb
divl
gs
pusha
leave
repnz
mov
stos
mov
cld
scas
mov
movsb
js
addb
xchg
lods
sub
aaa
mov
arpl
gs
or
pop
mov
jb
xor
std
out
mov
mov
cmpsl
and
ds
mov
mov
xchg
mov
mov
pop
popf
cmp
enter
jmp
mov
fldenv
das
jo
ret
jg
jecxz
sub
aas
std
je
repnz
aad
pop
roll
cld
cmpsb
xchg
sbb
mov
push
push
pop
sub
or
mov
push
in
aam
and
jnp
mov
ljmp
arpl
and
pusha
pop
sub
ret
or
cld
fcompl
fmul
pushf
xchg
push
in
inc
and
repz
xchg
out
dec
xor
push
add
mov
insb
loopne
sub
mov
add
sub
ret
and
cmpb
and
sbb
scas
inc
cmpsb
xchg
ret
ret
stc
shl
dec
push
mov
dec
bound
pushf
mov
inc
sub
incl
outsb
sub
xchg
lcall
xchg
ret
adc
lahf
popf
stc
jne
ds
aad
mov
cmp
int
sbb
insl
pushf
mov
dec
mov
and
stos
lcall
mov
jnp
cmp
sbb
orl
jns
mov
push
testl
inc
cwtl
das
push
sbb
orb
in
popf
pop
iret
stos
pushf
repnz
jmp
mov
daa
das
push
push
aas
xor
inc
movsl
mov
pop
outsb
mov
bound
mov
jg
sbb
cmpsl
ret
mov
pop
push
je
repnz
daa
enter
xchg
dec
adc
insl
stos
hlt
stos
cmpsl
add
lahf
lock
pusha
cmp
adc
aam
js
sub
outsl
jo
mov
xlat
cltd
adc
rcrb
xchg
insl
sbb
and
mov
divb
mov
cld
pop
and
inc
pop
xor
enter
dec
jmp
mov
cmp
ds
add
xchg
loopne
aaa
in
push
sub
jne
test
fistps
mov
mov
xor
mov
nop
pop
xor
add
sbb
js
mov
dec
sarb
cs
push
mov
mov
dec
cmpb
mov
ret
lcall
out
xchg
les
iret
mov
loop
xchg
cld
test
pop
cmp
mov
ljmp
test
pop
sub
das
scas
shr
in
pop
mov
xor
xlat
gs
scas
dec
imul
push
fadd
shll
gs
lret
popf
mov
and
xlat
cwtl
fisubrs
and
cmp
adc
push
loope
lea
xor
lds
push
sbb
xchg
and
and
mov
sbb
sbb
and
cmp
cmpsb
loopne
add
xor
out
stos
js
test
repnz
xchg
add
pop
push
stos
sub
sub
push
jns
div
jge
adc
pop
ss
pop
mov
jnp
push
mov
jbe
sahf
add
fs
push
scas
lock
jge
shll
push
mov
stos
inc
or
jecxz
and
inc
jbe
orl
sbb
adc
into
enter
and
inc
jmp
xchg
and
cmp
xor
mov
mov
cmp
xchg
jae
cmp
repz
push
ja
mov
inc
popaw
cmpsb
iret
negb
pop
mov
inc
pop
sub
je
out
cmp
sarl
ret
mov
adc
hlt
cs
sarb
xor
pop
pop
stc
js
stos
mov
add
fs
mov
inc
mov
mov
addr16
adc
pushf
push
mov
add
xor
cmp
adc
jp
jge
cmpsl
pop
and
mov
xor
pop
iret
xor
leave
mov
xchg
fs
repz
lcall
push
dec
les
popf
sub
cltd
dec
pop
flds
mov
dec
cmpsl
std
in
scas
test
mov
or
imul
bound
bound
mov
mov
sbb
and
push
mov
cwtl
jo
sarb
jle
dec
out
xchg
neg
add
movsl
minps
into
cltd
jecxz
pop
lock
add
mov
jle
leave
jle
or
stos
out
adc
mov
mov
js
jbe
notl
inc
mov
xor
enter
addr16
push
add
not
cmp
sti
js
je
jmp
jae
ja
in
adc
pushf
pop
jle
daa
cmc
mov
sub
clc
leave
xchg
in
adc
mov
jb
mov
test
mov
push
cmp
and
and
test
lods
fisubrl
call
lods
aaa
sbb
pushf
xor
fistl
dec
cmp
into
dec
sbb
popa
dec
sub
jp
outsl
lret
or
pop
push
mov
jo
inc
jb
jmp
inc
test
lret
scas
mov
mov
jb
fwait
das
das
pop
dec
add
das
mov
sub
and
iret
mov
inc
mov
dec
pop
inc
aas
mov
cmp
inc
sbb
je
pop
lcall
ret
mov
icebp
adcb
jg
pop
fs
clc
jae
adc
mov
in
call
fld
or
loopne
inc
sub
pop
jle
je
fs
std
mov
sbbb
in
mov
pop
inc
loope
loopne
cli
rcr
mov
shll
sti
sti
mov
cltd
cmp
mov
loop
pushw
xchg
mov
jne
sub
mov
popf
fcomps
xor
push
cld
popf
repz
pop
mov
push
ret
ss
sbb
in
cltd
cmp
jnp
pop
xchg
cmpsl
imul
mov
iret
xchg
push
jbe
hlt
xchg
mov
loope
stos
dec
sbb
cmpsb
lcall
pop
enter
xchg
add
stos
ja
mov
push
hlt
add
repz
repz
xor
daa
pop
enter
xchg
loope
adc
les
sbb
dec
xchg
sub
aas
pop
push
adc
inc
fsts
es
fimuls
test
outsb
fsubl
xchg
mov
ja
jae
sub
cmp
push
mov
test
and
mov
roll
mov
cmp
mov
add
and
mov
xor
inc
pop
test
push
push
loopne
data16
inc
popa
add
and
repnz
cmp
xor
inc
in
mov
jo
mov
rorl
pop
lods
int3
xorl
pop
and
mov
mov
into
xchg
cmp
dec
imul
mov
mov
addr16
mov
add
sbb
fisttpl
incl
pop
push
mov
or
jp
adc
cmp
push
js
or
dec
jecxz
aas
inc
push
and
cmp
loop
cmp
xor
lods
sub
mov
into
aad
mov
fisttpl
inc
lock
inc
cmc
or
je
pop
sti
clc
popf
push
out
aas
sbb
ja
adc
int3
fldl
jbe
sub
pusha
adc
jbe
inc
cmp
push
in
stc
leave
leave
sbb
jae
test
cmp
jle
mov
add
add
insb
lock
ret
ja
mov
loopne
jae
mov
jmp
xchg
push
out
mov
pop
adc
lods
bound
xchg
insb
adc
fidivrl
adcb
or
inc
insb
jno
add
aas
sbbl
mov
and
test
sbb
xchg
pusha
lret
jb
stos
and
push
fiadds
movsl
fstps
notl
ret
mov
or
test
lret
dec
push
adcb
lds
cld
sarl
in
cmp
cmp
enter
or
dec
cmp
fbstp
aas
lea
or
push
es
out
adcb
inc
test
pop
and
outsb
jg
push
je
mov
jno
rcrb
cmp
pop
adc
jmp
imul
dec
dec
sbb
cli
repz
notl
xor
sub
mov
push
lods
xrelease
inc
push
shr
aam
mov
repnz
loope
shll
xor
lock
and
add
cmpsb
xor
push
scas
add
pop
mov
insl
inc
es
pop
inc
lcall
test
cmp
imul
sbb
xor
sub
push
insb
adc
inc
or
lods
jg
xchg
rorb
insl
js
roll
pop
add
mov
outsl
mov
xor
cltd
mov
pushf
mov
stos
push
or
add
jle
dec
popa
inc
rol
stc
jmp
pop
dec
int3
test
xchg
mov
enter
push
fsubl
es
jno
cmp
sub
lahf
hlt
pop
xor
arpl
outsb
xlat
dec
aas
or
mov
mov
lock
sub
hlt
into
dec
popl
les
sub
sbb
cltd
imul
inc
mov
repz
movsl
imul
pop
dec
js
aaa
in
sbbl
inc
add
test
and
aad
imul
xchg
push
lods
fwait
and
pushf
mov
pop
and
adc
xchg
popa
imul
pop
adc
movsb
adc
inc
repz
dec
cmp
sahf
out
cmp
xchg
push
andb
inc
xchg
repz
and
icebp
jb
aad
or
xchg
call
mov
loopne
cmpsl
mov
xchg
sarl
stos
fs
loope
ljmp
es
jnp
jo
push
dec
push
out
mov
jmp
cmp
mov
out
mov
movsl
mov
imul
jnp
jmp
add
xor
xor
out
sbb
das
inc
pop
pop
or
or
and
inc
adc
popf
push
ss
das
mov
adc
adc
jmp
push
mov
dec
cmp
mov
cmp
icebp
mov
jnp
into
stc
call
stos
call
lock
cmc
clc
aaa
push
mov
sub
add
mov
xchg
sbb
add
aaa
xlat
xchg
shr
cltd
insl
icebp
inc
jl
outsl
out
int
or
filds
test
and
jo
or
sbb
pop
xor
arpl
cmp
clc
repnz
add
stos
cmp
mov
loopne
mov
push
lret
pop
sti
xchg
push
adc
mov
lds
aad
xchg
mov
or
jno
pop
sub
lret
sbb
lea
push
shrl
sbb
push
scas
mov
leave
xchg
shrl
int3
mov
imul
movlps
adc
test
pop
cmpsl
mov
repnz
bnd
jp
mov
jb
int
call
pop
jle
pcmpgtb
push
cli
cmp
out
jns
mov
xchg
mov
cmp
adc
scas
inc
lock
push
sub
movlps
leave
cmpl
pop
out
add
ficomps
in
pop
push
push
inc
je
xchg
inc
pusha
push
pushl
mov
jbe
cmp
ret
out
sbb
scas
add
cmp
test
mov
lods
xlat
adc
jmp
xchg
push
mov
mov
dec
adc
push
ja
cltd
rorb
popl
xchg
mov
or
pop
lock
dec
pop
sub
xchg
pop
or
inc
push
pushf
loope
push
add
jge
mov
adc
mov
cmpb
inc
push
mov
push
add
dec
andb
xchg
lods
jg
sahf
pop
scas
out
fbstp
in
or
xchg
addr16
loope
push
fidivl
xor
cmp
cmpsb
lret
jo
mov
shr
push
sub
pushf
xchg
sbb
pop
sbb
or
mov
bound
xchg
lcall
paddd
in
or
push
test
cltd
aaa
and
dec
add
inc
mov
jae
out
ficomps
ss
jnp
fildl
mov
mov
inc
into
dec
insl
out
filds
add
sti
adc
sbb
pop
jle
mov
daa
loopne
insb
outsl
andb
cmc
jns
dec
sbb
mov
rolb
and
inc
adc
mov
push
mov
add
test
pusha
jle
addr16
add
push
jno
push
out
pop
insl
sbb
add
and
cld
add
frstor
icebp
xor
and
in
sahf
scas
movsl
cwtl
push
arpl
sub
imul
out
sahf
sub
lcall
adc
ds
xchg
mov
daa
cs
das
mov
ja
cmp
fsubr
nop
outsb
test
test
xchg
mov
into
cs
fldt
aad
cmp
xor
sbb
call
jmp
xor
pusha
addr16
adc
cmpsb
aas
fsubs
fsubrl
js
push
mov
js
cmp
nop
add
mov
or
cmp
jb
sbb
mull
xlat
xor
sar
mov
add
lods
adc
repz
aas
in
fisubs
or
adc
inc
in
and
inc
fstpl
mov
pop
divl
das
and
repz
arpl
cmp
cli
kmovw
sbb
jns
roll
sub
aam
nop
jbe
and
frstor
loop
rcrl
test
jp
aad
sar
movsl
push
mov
stos
mov
fistps
lret
imul
in
ret
inc
daa
adc
inc
cmp
test
dec
mov
inc
and
inc
cmpb
xor
scas
sbb
ss
loope
stc
jns
cmp
cltd
outsl
cld
pop
mov
cmp
or
or
test
ret
sbbl
fcompl
gs
mov
mov
loop
cmp
shl
lahf
mov
lahf
push
dec
je
cmp
xor
jno
out
nop
in
xlat
cmpsb
loope
mov
jno
sbb
add
sbb
push
test
test
inc
mov
sbb
inc
mov
jb,pt
jge
pop
or
xor
add
pusha
inc
inc
xchg
adc
xlat
sbb
out
or
mov
cmp
pop
mov
cs
stc
test
lods
push
enter
stos
loop
sbbb
test
inc
iret
out
pushf
push
inc
jnp
mov
xchg
pusha
pop
pop
scas
stos
ss
jecxz
pusha
dec
int
int
or
push
loop
xor
mov
stc
sbb
sub
fwait
mov
fucomip
add
sub
jo
xor
fsubrl
xor
jns
cmp
sub
or
dec
out
mov
stos
sbb
in
movsl
push
sahf
push
pop
jmp
mov
into
fadd
pop
cltd
xor
inc
icebp
dec
pop
mov
imul
mov
ficoml
mov
icebp
dec
test
lock
ds
dec
mov
adcb
adc
ret
sub
jmp
icebp
out
xorl
outsl
dec
xor
dec
xor
mov
pop
rol
or
mov
mov
push
sub
mov
pop
test
push
or
xchg
std
adc
int3
sub
push
inc
rorl
and
dec
test
or
add
lahf
aam
push
push
xchg
sbb
repnz
shlb
xchg
test
repnz
pop
dec
pop
or
and
mov
lds
rcll
inc
cmpsl
lock
int3
repnz
shlb
pop
lods
mov
lcall
sub
outsl
or
lcall
mov
adc
pop
xorl
mov
add
push
xchg
or
mov
cmp
outsb
xchg
jnp
popf
fsub
shrb
in
js
push
sbb
dec
neg
in
sbb
test
aaa
fiaddl
xlat
shlb
and
aaa
insb
sub
stc
in
mov
stc
fbld
fadds
jb
aas
sarb
out
jg
xchg
add
js
push
cmp
rcl
fcmovb
rcr
into
xor
cmp
dec
out
jg
test
push
jg
ret
fldenv
pop
add
pop
addr16
mov
in
jmp
orl
je
mov
imul
jle
sar
pop
jp
pop
xchg
leave
cli
dec
out
mov
xor
or
sbb
popf
dec
sub
lea
dec
add
and
mov
xchg
cmp
pushf
cwtl
sub
mov
push
fdivs
addr16
jns
repnz
or
inc
in
cld
mov
sahf
andb
pop
lea
push
mov
repz
jae
pop
mov
sub
mov
cs
test
repz
leave
sbb
mov
subl
fildll
or
mov
adc
adc
cmp
cmp
mov
jle
fnstenv
je
jge
adc
aam
mov
fs
loope
mov
jg,pn
js
stos
cmp
or
adc
or
push
dec
sarl
xchg
imul
shll
outsb
cli
xchg
push
mov
jo
jnp
in
and
mov
push
shll
sahf
into
mov
fldt
lahf
std
sub
or
scas
out
pop
mov
fidivs
push
dec
mov
sub
call
iret
jecxz
lea
cli
push
test
jmp
roll
xchg
add
jmp
bound
decb
or
pop
test
mov
pusha
sub
mulb
mov
xor
loop
lds
les
lea
cwtl
das
fldl
dec
icebp
dec
and
pop
pop
das
outsl
cmp
in
mov
mov
mov
out
mov
lods
pop
outsb
xor
cmp
push
iret
shll
lds
jl
push
shr
mov
or
icebp
xor
xchg
cmc
inc
sub
loopne
mov
icebp
inc
pop
sbb
mov
xorl
enter
mov
enter
repz
cmp
add
jp
flds
fwait
mov
das
scas
pop
out
xchg
mov
shl
jecxz
divb
jbe
out
mov
stos
lods
fdivrl
and
jp
inc
pop
les
mov
add
sub
sub
push
dec
xchg
cmpsl
arpl
fs
leave
ja
fsubl
mov
xchg
or
sbb
pop
inc
push
xlat
adc
aaa
shlb
add
pop
outsb
sub
xor
jmp
test
aas
ljmp
shlb
mov
sbb
dec
sub
stos
or
mov
pop
sbb
xchg
push
clc
inc
sbb
pop
test
pusha
dec
ret
xchg
addr16
lret
ss
or
movsl
cmp
and
test
in
mov
and
mov
jne
sti
mov
or
and
movsl
data16
adc
cmp
mov
rcl
fcoml
dec
movsb
cmp
sbb
test
dec
sub
xor
out
mov
adc
icebp
es
ror
pop
xor
fists
popa
mov
leave
jno
pop
int3
sbb
js
lds
aaa
sbb
repz
jl
call
cmpb
jecxz
xor
jae
lret
in
fisubrl
cmpsl
xor
mov
mov
loop
loop
mov
fwait
mov
lds
rclb
sbbb
lock
das
sbb
enter
in
mov
fwait
jb
cld
and
dec
stc
add
mov
xchg
mov
in
sbb
data16
xorl
sub
ss
adc
sahf
js
and
mov
and
into
cmp
js
jl
in
cwtl
fisubl
dec
loope
repz
xchg
repz
jmp
push
mov
cmp
loop
jo
mov
cmpsl
push
mov
cmpsl
mov
push
out
stos
add
push
fsts
movsb
jmp
fucomip
btl
daa
popa
pop
enter
sub
imul
popl
dec
push
push
mov
cmp
loop
leave
in
ret
imul
mov
and
dec
jb
mov
xor
sub
sti
pop
pop
shl
lods
push
lock
hlt
int
jnp
js
mov
rcrb
add
xchg
out
ds
mov
jmp
mov
aad
aas
inc
pop
cmp
mov
sub
int
inc
jo
jmp
sub
rclb
lock
push
sbb
jle
add
mov
aam
imul
subb
dec
mov
xorb
imulb
fdivrs
scas
mov
jo
scas
mov
fbld
push
clc
xchg
daa
dec
fwait
test
ljmp
stc
in
mov
xrstor
fcom
cmp
pop
iret
xor
insl
mov
mov
into
inc
push
repz
jns
mov
es
rolb
ds
and
data16
adc
cmpsl
adc
sbb
daa
fdivs
hlt
call
and
inc
lods
mov
lahf
lahf
dec
pop
xchg
dec
cltd
jp
push
dec
scas
aam
add
adc
les
loopne
and
je
sub
rcl
dec
stc
loope
fnstsw
jmp
mov
add
add
mov
xorb
movsl
ret
lds
shll
xchg
xchg
lcall
pop
int3
xor
outsl
daa
ret
inc
mov
push
sbb
xchg
jp
push
shlb
inc
pop
mov
pop
jb
mov
mov
dec
stc
lock
fwait
imull
in
jp
adc
adc
lahf
mull
ret
mov
pop
daa
bound
pop
lret
jecxz
test
add
loopne
mov
ja
scas
add
pop
add
aas
inc
cmp
js
ds
mov
inc
movsl
pop
adc
pop
das
jle
xchg
orb
rolb
nop
js
cld
cmpsl
sti
cltd
push
mov
mov
jo
out
push
push
test
cld
xchg
fs
gs
lea
les
or
xchg
lock
in
push
cmpsb
pop
jno
lock
pop
cmpsb
loop
andb
add
xor
loop
push
pop
ljmp
cmc
push
adc
cs
jge
mov
push
stc
fsubrs
xchg
repz
dec
lret
loope
mov
aaa
lds
into
mov
mov
inc
dec
stos
xor
repnz
mov
mov
lock
stc
repz
cmp
xchg
push
ja
fbstp
movsl
jg
dec
pushf
jmp
add
subl
in
sbb
je
mov
repz
or
pop
stos
insb
fbstp
cmp
dec
dec
je
jl
mov
fwait
cmp
xchg
mov
and
test
imul
jge
aam
or
xor
test
mov
ljmp
gs
dec
mov
ja
mov
or
push
aas
xchg
out
sub
mov
xor
outsb
mov
lcall
xor
adc
pushf
outsb
aas
fisttpll
jl
mov
fiadds
push
repz
sub
andb
push
jno
call
les
dec
fcompl
jp
or
push
out
scas
popf
fwait
pop
cld
sahf
lock
xchg
cmp
test
rcl
test
sbb
testb
cmp
push
call
jne
inc
xchg
mov
sub
push
mov
fsub
cli
sub
mov
adc
inc
movsl
fwait
xor
xor
nop
loopne
dec
sbb
sahf
aam
dec
pop
pop
pop
jp
aad
pop
cmp
sbb
push
dec
sbbl
mov
jle
repz
xor
out
mov
roll
inc
aas
std
sbb
pop
aas
mov
mov
dec
mov
mov
adc
call
ljmp
adc
pop
mov
and
dec
mov
sbb
roll
pop
shrb
repz
jecxz
xor
xor
sbb
inc
dec
shr
jae
hlt
iret
call
sarl
aas
js
mov
xor
mov
mov
push
imul
js
sbb
mov
out
adc
dec
and
lods
adcl
in
pushf
iret
inc
push
mov
in
cli
sub
mov
jp
popf
jp
insb
jns
xorb
dec
test
out
movsl
xchg
mov
dec
cld
mov
popa
fstpl
outsl
jecxz
cmp
dec
cmp
scas
fisubl
fsubs
xchg
mov
inc
or
push
xchg
xor
shrb
jnp
mov
int
ja
sub
daa
or
inc
mov
fwait
dec
jmp
popf
jecxz
cmp
pop
repz
ret
mov
mov
xor
dec
xorb
and
push
je
or
pop
in
xchg
jmp
stc
mov
sahf
and
popf
shll
add
stos
or
loop
test
ret
inc
mov
mov
test
das
fnstenv
add
fucomip
cmp
push
jmp
lret
mov
mov
add
sbb
call
xchg
loop
lret
cmp
jg
test
cmp
cmc
cld
div
and
pop
jmp
mov
dec
sbb
lcall
outsl
xlat
mov
mov
pop
hlt
push
cmp
pushf
sbb
and
outsl
sbb
lock
add
cltd
fbstp
xchg
dec
jge
mov
add
out
mov
das
popa
sub
aaa
movsb
pop
push
enter
sahf
scas
daa
sub
add
and
fwait
add
push
cmp
jg
xchg
fldt
lods
fcmovbe
pop
les
jecxz
mov
rorb
or
mov
sti
mov
stos
lods
jae
and
cltd
cmpsl
adc
iret
pop
sub
dec
mov
xor
or
mov
je
mov
sub
js
daa
adc
xor
rcll
inc
pop
mov
adcb
cwtl
jbe
mov
pusha
es
aaa
lcall
push
inc
js
loop
cmp
cmc
jmp
cmpsb
jge
jno
mov
loop
inc
movsb
dec
mov
icebp
lock
dec
lret
fucomp
pop
stos
out
jge
lock
sbb
xlat
fadds
dec
out
sbb
mov
ss
ljmp
jg
lret
xchg
push
push
jecxz
or
daa
push
pop
xor
lret
sub
inc
sub
inc
pop
popf
shr
adc
pop
popl
xchg
test
inc
push
mov
xchg
sbb
cmp
cli
fs
shrb
xlat
cmpsb
xchg
inc
scas
mov
hlt
push
sbb
inc
imul
xchg
mov
pop
fdivl
test
xchg
or
js
fcompl
loopne
lods
sbb
ret
ljmp
adc
push
je
mov
daa
dec
popa
repz
xor
add
test
cmp
sbb
mov
adc
or
jge,pn
and
push
jae
pop
xor
push
jl
testl
pop
mov
mov
loop
cmc
imul
jg
divl
sarb
sub
jne
xchg
mov
das
cmp
push
pop
aas
xlat
rorb
push
pop
ja
ficoml
cmpsl
lods
jg
icebp
ret
fisubrs
inc
inc
xlat
loopne
test
jbe
dec
nop
mov
cmp
lret
mov
insl
leave
pop
add
loopne
dec
dec
cmp
dec
and
test
push
mov
and
out
mov
xlat
adc
dec
das
icebp
cmp
or
mov
inc
sti
lret
jge
ss
sbb
cs
aad
mov
pusha
or
push
inc
dec
je
mov
enter
cmp
or
push
mov
jp
xchg
cwtl
repz
sahf
ds
out
add
add
movsb
xlat
fs
mov
rcrb
xchg
add
pop
push
fcomps
ret
fistl
cmp
jo
scas
cmp
lods
jge
fimuls
stos
mov
lds
dec
add
repnz
and
int3
stc
dec
mov
arpl
ljmp
in
mov
add
in
cli
pop
pop
into
mov
sub
dec
cltd
fsubrs
lahf
cli
adc
hlt
push
adc
push
in
pop
mov
dec
aam
pop
adc
mov
cmpsb
cmp
mov
push
nop
dec
pop
mov
out
mov
addl
addr16
mov
push
aad
cmp
mov
xor
xor
sbb
or
push
in
mov
push
addb
shll
imul
xchg
xor
or
or
cmp
inc
fidivrl
cmpsb
mov
fstps
arpl
in
cmpsb
pusha
mov
in
cltd
pop
adc
inc
scas
aaa
outsl
movsl
lcall
push
or
xchg
les
lret
cmp
jmp
fadd
and
mov
jo
insb
icebp
call
mov
inc
push
and
int3
stc
dec
filds
cltd
repz
shrb
insl
outsl
push
mov
jl
outsb
add
imul
nop
stc
dec
rol
mov
adcb
jo
push
iret
jg
pusha
popf
lret
xchg
stos
push
stos
pop
mov
cld
movsb
jae
into
mov
lds
jne
add
push
xor
stos
adc
jl
mov
rol
aaa
aas
and
pop
cmp
inc
mov
mov
repz
and
sbb
cli
sbb
mov
xchg
jmp
movsb
outsb
xchg
test
daa
xchg
sub
sub
push
xor
cld
repnz
jg
jns
popa
push
mov
lcall
push
sub
inc
bound
jge
xchg
loopne
imul
adc
add
std
in
pop
jns
rcll
xor
add
idivb
fwait
call
inc
pop
arpl
dec
or
sbb
int3
xchg
add
mov
sub
andl
test
pop
out
jecxz
gs
pop
add
pop
call
and
sbb
sbb
adc
stos
div
outsb
enter
pop
mov
lods
jae,pn
fiaddl
jns
sub
test
xchg
bound
xchg
movsb
or
mov
or
inc
pop
clc
cmpsl
pop
cmp
into
push
jecxz
ja
out
cltd
mov
mov
sbb
jo
dec
call
cmp
xor
hlt
push
and
push
jbe
mov
xorl
hlt
or
inc
bound
adc
shll
outsl
subl
cmpsb
add
mov
popf
mov
lret
sub
mov
lahf
push
ret
ffreep
dec
into
sub
cmp
or
fs
and
lcall
sub
loope
push
adc
outsb
cmp
mov
push
test
sub
dec
fwait
xchg
movsl
mov
std
and
adc
xor
xor
xor
mov
or
dec
jp
cltd
clc
cmc
icebp
push
cmp
clc
mov
cli
jmp
sbb
fimuls
mov
adc
sbb
loopne
cli
arpl
je
cmpsb
mov
es
fstl
out
or
adc
aad
jg
mov
jo
es
fldenv
enter
ds
aaa
or
pop
cld
je
adc
ljmp
jo
fldlg2
add
mov
and
lret
popl
imul
mov
xchg
dec
push
jge
test
sub
in
xchg
or
push
faddl
movsb
jne
into
push
adc
ret
popa
and
adc
adc
jns
in
mov
sbb
adc
sub
fmulp
les
pop
test
bswap
aas
xchg
xchg
push
pop
sub
pop
mov
mov
fdivs
shrl
repz
fistl
or
mov
add
hlt
sbb
outsb
leave
ret
jecxz
repnz
fimuls
lock
mov
in
flds
mov
in
jae
push
loop
cmc
push
cmp
jns
call
je
cld
fxch
pop
fildll
sub
lods
movsl
fidivrs
fld
and
andb
int
sbb
jb
jmp
mov
notb
cmp
rcrb
jl
popa
fistpll
sbb
and
cmp
push
incb
movq
sbb
mov
rorb
xor
stos
fcompl
xchg
jl
push
inc
dec
xchg
cmp
fsubr
fiadds
mov
faddl
mov
cmp
jle
pop
jns
mov
imul
add
cli
fcompl
add
fmul
outsb
call
test
fbstp
mov
jo
or
out
and
sbb
fucomp
and
fbstp
enter
fsubrs
fwait
std
jb
mov
mov
movl
in
lahf
push
dec
jp
adc
vpcmpgtw
jle
fadd
or
xor
push
inc
dec
dec
mov
push
inc
repnz
fwait
rcl
test
mov
pop
push
mov
xor
add
lods
cmpsl
pushf
mov
imul
mov
lock
outsb
push
and
int
mov
hlt
int3
mov
fcoms
imulb
pusha
hlt
pop
andl
stos
mov
fsts
out
mov
jmp
imul
pop
xchg
cmp
inc
sub
xor
test
or
cmp
cli
pop
in
repz
js
sbb
repnz
mov
outsb
popa
loopne
lahf
dec
aad
pop
ret
mov
or
push
push
ror
je
cmp
les
cwtl
xor
cld
shr
ljmp
adc
shll
mov
iret
and
sub
in
pusha
push
cmpps
dec
scas
movsl
sub
lea
into
xorb
or
cmpsl
jecxz
pop
stc
in
mov
lock
sub
pushf
add
lods
push
xchg
scas
mov
and
xor
test
hlt
fcompl
lods
push
or
ja
and
ss
jp
pop
pop
out
sbb
popf
sbb
lods
sbb
add
pop
pop
sub
rorb
dec
idiv
push
xchg
jae
pop
or
jp
sub
negl
repnz
mov
xor
sbb
xchg
out
jb
push
mov
sub
mov
movsl
mov
xor
scas
repnz
mov
pop
fsubl
pushf
std
mov
sahf
movsl
cmc
xchg
jle
xor
jae
adc
clc
ljmp
gs
xchg
mov
sbbb
or
add
shlb
inc
arpl
xor
aaa
lods
and
hlt
cld
push
mov
cmp
adc
ds
inc
or
push
mov
mov
aaa
ret
add
dec
pop
jmp
aad
das
mov
outsl
sbb
sbbb
dec
and
inc
fstpt
jae
xchg
push
ret
mov
cmp
cmpsb
sbb
inc
testl
mov
add
out
adc
rclb
cmpsl
mov
and
sahf
pop
dec
push
test
xor
push
rcrb
fldcw
cmp
mov
sub
stc
in
add
pop
mov
ljmp
aas
clc
inc
adcb
pop
mov
lea
mov
das
mov
es
mov
pop
sbbl
add
mov
fwait
inc
pop
mov
es
or
iret
or
adc
stc
push
dec
pop
push
lods
lds
je
mov
mov
shll
sti
int
xchg
jg
adc
cltd
xlat
cld
mov
push
add
add
lret
jnp
addr16
push
pop
loop
or
cwtl
fmul
jmp
iret
repnz
cmp
imul
and
stos
adcl
dec
scas
frstor
xchg
xchg
adc
lods
pushf
imul
xchg
rcrl
aas
out
sbb
cmc
inc
cmp
add
pop
div
push
mov
lret
pop
mov
into
xlat
cmpl
fwait
mov
and
mov
outsb
sub
cs
push
pop
in
pushf
repnz
pop
movsw
mov
icebp
daa
inc
aaa
inc
inc
arpl
lret
loopne
dec
and
pop
jo
popa
aad
dec
scas
popl
sub
addr16
cli
movsb
push
daa
in
jae
adc
mov
push
mov
faddl
and
lock
lock
push
leave
mov
cld
faddl
out
and
mov
bound
mov
iret
iret
ret
sbb
push
push
jmp
hlt
inc
cmp
push
and
aas
cmp
gs
nop
cmp
sub
push
xor
mov
icebp
lds
cmpsl
daa
xor
jnp
das
dec
clc
addr16
out
push
push
in
xchg
cld
gs
jb
das
xchg
js
mov
sub
mov
mov
mov
jl
lods
scas
jle
sbb
lret
popa
xlat
je
ficoml
cmpsb
push
push
fwait
cmc
movsl
leave
sbb
push
ret
in
std
dec
push
sbb
jae
mov
cltd
cmc
das
and
nop
pop
and
xor
daa
mov
fadd
pop
fimuls
adc
push
movsb
es
or
mov
addl
in
cmpsl
jne
aaa
adcl
shlb
push
xchg
aaa
outsl
pushf
sti
inc
bound
lahf
das
sarl
add
pop
xchg
aad
lret
sbb
imull
outsl
jns
icebp
je
insl
test
lcall
das
shlb
xchg
rorl
push
mov
xor
push
sub
std
pop
pop
es
push
flds
addr16
int
cld
ret
inc
and
push
pop
cmp
mov
fidivrs
sub
popa
loopne
leave
sub
lcall
sub
push
sub
cs
push
cmp
test
and
loope
in
xchg
mov
into
mov
arpl
sbb
push
mov
cltd
push
jns
mov
mov
fimull
inc
jge
movl
pop
xchg
and
repnz
mov
lock
sti
sbb
sbb
ret
cmp
sbb
cmp
stos
outsl
aam
cmp
add
cli
adc
mov
xlat
mov
pop
test
or
and
gs
mov
leave
jmp
sti
scas
jnp
aas
fisubs
xchg
cli
jmp
sub
stc
shrb
orb
scas
and
orl
cmp
cmp
mov
aas
or
xor
fcoml
stos
stos
jge
out
ds
mov
popf
cmp
add
pop
test
inc
cmpsb
mov
mov
mov
sub
cmp
lock
fsubl
loop
push
add
test
pop
adc
mov
xor
mull
jns
mov
jno
sbb
mov
aaa
pop
clc
lret
shll
sbb
test
jbe
and
outsl
cmp
lcall
lret
sbb
dec
pop
in
cs
es
out
test
pop
loop
xor
test
mov
jl
cwtl
adc
fs
jp
sub
xchg
jge
bound
mov
out
cmp
rol
or
in
adc
pop
adcb
pop
scas
push
aam
xchg
and
aas
leave
cmp
ja
cmp
jp
in
cwtl
xlat
xchg
cmp
sbb
add
cmp
push
out
sysexit
aad
sbb
fsub
lods
dec
mov
gs
inc
stos
std
mov
mov
pop
fadd
or
stos
in
add
insl
cltd
sarb
test
ds
xor
sti
out
adc
push
int
test
jne
push
iret
xchg
fdiv
fildll
cli
dec
xchg
and
push
mov
xor
das
push
lahf
es
cmpsb
xchg
mov
push
loop
cmp
mov
out
push
lret
push
icebp
jae
repnz
inc
sub
ljmp
cmp
mov
pop
lret
or
inc
sub
inc
stos
fcmovne
mov
xchg
adc
lret
add
inc
cmpsb
inc
repz
cli
fwait
repnz
mov
cwtl
cmpsl
subb
add
in
inc
outsb
loop
adcb
ja
mov
xor
lods
stos
xorl
push
icebp
mov
out
push
leave
inc
loop
mov
std
movsb
cmp
add
and
popf
jns
repnz
in
fildl
ljmp
xchg
int3
mov
fsubrs
push
in
push
add
mov
cmc
pcmpgtw
push
mov
push
and
jle
sbb
inc
pusha
xor
leave
in
cmpsb
outsl
out
adc
cmp
mov
bound
call
fiadds
je
xor
pusha
ss
mov
cmp
in
cltd
inc
push
loope
pop
adc
lret
adc
rorb
std
inc
xor
lds
stos
es
stos
mov
ss
sbb
loop
loope
dec
ss
jecxz
popf
jecxz,pn
cltd
adc
sahf
lea
jo
popf
mov
loopne
in
xchg
fs
pop
scas
leave
and
scas
fwait
push
les
sub
push
push
cmp
inc
out
cmp
dec
dec
push
dec
jne
mov
scas
rolb
pop
adc
enter
into
bound
sub
dec
in
das
in
xor
adc
jne
mov
arpl
and
iret
mov
outsl
xchg
dec
sub
ds
out
lret
imul
ss
ret
loop
mov
js
into
out
inc
adc
repnz
pop
test
lret
jno
aas
clc
pop
cmpl
ss
push
push
push
addl
mov
mov
xlat
pop
dec
push
xchg
dec
mov
sar
mov
out
leave
jge
subb
in
shrl
fwait
int
mov
inc
mov
and
in
mov
psubusw
adc
sub
sub
gs
mov
imul
push
dec
outsb
mov
fwait
mov
pop
mov
mov
pop
push
or
aad
adc
or
sub
mov
roll
cmp
mov
popf
sbb
fiadds
adc
mov
mov
jne
or
enter
and
dec
loop
lods
or
adc
jecxz
outsb
shll
lcall
pop
lods
add
imul
in
xchg
xchg
dec
push
xchg
pushw
mov
pop
mov
push
mov
mov
test
loope
orb
xorb
js
das
xor
inc
ret
cmp
push
xchg
fucomi
pop
dec
addps
cmp
bnd
jbe
add
cmp
adc
mov
test
lock
sbb
lods
and
xchg
sahf
lea
cmc
insl
repz
pushf
scas
push
sub
and
sbb
faddl
mov
jno
fwait
sbb
lock
push
xchg
sub
sbb
cld
cltd
aam
adcb
sbb
aas
push
and
add
shr
jae
arpl
inc
arpl
pop
mov
inc
inc
inc
jl
lret
mov
xchg
out
nop
daa
jb
adc
repz
mov
mov
and
push
xlat
and
xlat
stos
sbb
push
es
fstl
sub
adc
aaa
xchg
push
and
jb
mov
jns
add
mov
mov
test
sar
inc
das
add
subb
and
jno
jo
loope
jnp
das
loop
lcall
xchg
jns
fisttps
in
in
popf
aam
aaa
dec
sub
cmp
in
cwtl
jle
sub
xlat
repnz
jnp
std
test
xchg
push
or
dec
xor
test
add
out
xor
add
inc
pop
imul
enter
fbld
cmp
aad
fisubs
jnp
mov
and
dec
sbb
push
lock
ficompl
sti
dec
and
cmpsb
cmp
mov
jnp
popf
adc
mov
jmp
inc
jo
inc
sbb
iret
push
imul
adc
or
xchg
mov
faddl
mov
int
mov
dec
mov
sub
pop
call
cmovno
cwtl
jae
ror
rcll
popa
cmp
mov
fldenv
rorl
mov
addb
push
mov
cmc
fidivrl
add
inc
adc
add
jg
ds
fcomps
sub
stos
pop
pushf
mov
cmp
mov
imul
daa
jp
sub
push
push
ljmp
icebp
sub
and
pop
xchg
icebp
pop
push
das
sarl
js
mov
mull
lods
rolb
xchg
xlat
fsubs
lcall
jle
and
test
icebp
daa
sarb
das
icebp
sub
cmp
jae
das
jl
addr16
lock
lds
xchg
or
arpl
outsb
jno
mov
mov
xchg
mov
nop
pop
lock
out
out
idivl
sbb
out
fisttpll
xchg
push
jb
mov
pushf
mov
cmp
cmp
ds
mov
in
xchg
lods
inc
jns
sbb
sbb
mov
popf
dec
mov
sbb
in
adc
push
mov
lcall
mov
sub
mov
cli
addr16
cwtl
adc
mov
das
repz
movsl
sbb
js
lods
add
sbb
push
xlat
popf
inc
repnz
push
cmp
lock
adc
xor
lods
and
js
rorb
loope
push
or
int
stc
insb
sub
rorl
test
stos
cmp
mov
fbld
mov
pop
jecxz
inc
mov
xor
xchg
insl
jmp
in
jge
dec
insl
pushf
jmp
adc
pop
loope
int3
cmp
adc
cmp
push
pushl
pop
add
mov
pusha
aam
push
jecxz
cmp
mov
test
mov
movsb
jmp
mov
mov
jns
bound
dec
mov
movsb
out
ficomps
inc
mov
cmp
popf
cwtl
mov
shl
pop
sbb
mov
and
das
lret
mov
stos
fisubs
jae
idiv
or
cmp
movsb
rcll
cmp
out
pop
xchg
pop
out
mov
in
iret
add
sub
jb
inc
dec
and
adc
and
jl
or
loope
pop
jnp
je
mov
pop
push
sbb
mov
dec
jge
push
pop
adc
jae
jno
imul
jns
or
adc
je
jbe
pop
aas
mov
jo
or
shrl
mov
mov
mov
enter
push
sub
cmp
pop
lods
mov
xor
int
dec
popa
dec
frstpm(287
mov
dec
pop
in
xlat
mov
push
std
push
mov
out
cmpsb
popf
and
ja
xchg
inc
test
sahf
adc
ficompl
pop
and
and
pop
fwait
jne
cmp
mov
stos
insb
mov
nop
andb
adc
js
cli
xchg
call
bound
in
pop
push
jb
push
call
ja
inc
sub
call
lret
or
fsubrp
push
xchg
sub
repz
iret
sbb
ljmp
xor
in
ljmp
xchg
loopne
push
mov
or
sar
sbb
xchg
or
ret
dec
scas
lret
das
test
mov
push
or
dec
lcall
movsl
shlb
sub
loopne
rcll
ret
mov
imul
push
mov
shrb
aaa
xchg
loopne
pop
pextrw
or
jmp
mov
mov
call
in
hlt
push
es
push
adc
mov
in
jb
loopne
dec
push
dec
push
fildl
leave
loopne
xor
sub
inc
and
je
mov
cmp
cmpsb
push
imul
sbb
ret
inc
mov
aaa
rolb
push
test
pop
sbbl
in
push
jnp
cs
xchg
shll
dec
push
mov
testb
push
xor
lea
inc
out
test
js
pop
cwtl
cltd
adc
dec
mov
and
imul
sar
push
adc
push
decl
fstl
mov
andb
or
incl
inc
movsb
cltd
push
clc
push
inc
or
or
in
sbb
mov
or
lcall
icebp
mov
add
mov
push
mov
and
outsb
adc
push
bound
push
push
jnp
ljmp
mov
out
stc
pop
jb
dec
lods
push
out
test
iret
jmp
pop
div
rcrl
test
push
push
pop
or
cmc
xlat
pop
leave
push
lock
and
scas
fdivl
pop
fdivl
push
pushl
dec
pop
add
int3
cmc
push
dec
ja
or
popa
xor
inc
loope
xor
stos
or
pop
vpshad
sub
ja
rcrl
ja
daa
mov
adc
or
outsl
test
inc
xchg
jb
mov
cmp
lcall
stc
xor
dec
call
mov
aas
insl
les
mov
xor
cmp
mov
sbb
cmp
pop
cltd
jns
or
mov
mov
cld
xor
data16
mov
cmpl
dec
outsl
mov
xchg
scas
add
pop
icebp
les
push
cmc
pop
mov
jne
rolb
pop
add
loope
mov
sbbl
pop
mov
or
add
adc
rcrl
cmp
or
cmpsb
mov
xchg
bound
lcall
lods
cmc
loop
jnp
jnp
xchg
add
loope
add
mov
jmp
cmp
jno
popa
in
sahf
ljmp
sub
out
pop
loope
or
pusha
test
fbld
xor
rcll
js
fldenv
clc
mov
mov
imul
faddl
jb
mov
sbb
cmp
adcl
xlat
loop
adc
insb
mov
lds
lret
pop
mov
stos
and
out
hlt
xor
mov
jl
and
or
jbe
imul
repnz
repnz
adc
rcr
and
lret
rcrb
cmpsb
cmpsb
dec
sahf
ror
push
pop
pop
mov
in
mov
sbb
cwtl
mov
adc
push
mov
ss
sub
or
mov
lds
mov
lock
push
or
and
clc
stos
jo
test
cmc
pushl
inc
lea
and
repz
call
pop
sbbl
in
stos
push
jecxz
out
dec
jp
das
mov
pop
xor
adc
fiadds
jbe
lea
int3
jg
mov
subl
mov
pop
sti
push
pop
mov
imul
aaa
or
enterw
fildll
push
out
dec
sbb
push
cmp
mov
pushf
bound
push
inc
ss
testb
imul
pop
pop
addl
sbb
imul
aaa
fwait
sbb
ja
push
sub
ljmp
sub
dec
mov
lret
rep
adc
jge
in
leave
push
jns
lock
xchg
adc
pusha
movsb
and
push
imul
cmp
repz
inc
pop
mov
jle
ss
test
xor
xchg
and
insb
bound
mov
mov
inc
in
sub
inc
add
or
dec
rclb
pop
loope
imulb
sbb
mov
dec
repz
jb
dec
jbe
es
pop
dec
jmp
jno
cmpsb
mov
sbb
jb
sub
jno
mov
lret
inc
xchg
enter
arpl
fldt
mov
add
push
std
sbb
ss
mov
and
das
outsl
test
xor
sti
xor
xchg
ja
adc
and
fbld
jns
add
xchg
clc
pop
sub
push
cwtl
test
mov
imul
adc
insl
sti
jb
push
pop
paddd
cmc
pop
and
roll
adc
dec
arpl
and
inc
sbb
push
bsr
xchg
or
repnz
add
jg
les
inc
std
mov
stc
pop
mov
and
xchg
shrb
aaa
lods
mov
xchg
pop
dec
push
leave
movsl
scas
jle
add
cld
mov
xor
pushf
dec
mov
imul
sbb
jnp
xchg
call
jp
push
sub
push
out
arpl
out
add
push
add
insl
push
jns
sti
movsl
push
adcb
ret
mov
ja
sahf
pop
push
repz
mov
jmp
lock
mov
adc
or
mov
or
adc
hlt
les
sub
test
iret
clc
pushf
sub
test
repnz
push
xchg
iret
inc
test
push
ret
fldcw
aam
mov
push
lods
pop
test
and
push
stos
fisubs
adc
xorb
xchg
push
or
test
clc
rcrl
test
fists
jb
inc
call
lds
cmpsl
decb
mov
jae
mov
je
nop
rol
out
add
pop
dec
mov
repnz
push
out
push
adc
xor
std
inc
pusha
test
addr16
pop
outsl
sub
dec
ds
scas
cmp
ficomps
mov
pusha
push
ficoml
sti
mov
and
xor
jns
ja
dec
movsb
push
xchg
pusha
xchg
and
cmpsl
adc
insl
sub
int
jmp
pop
or
mov
lea
pop
pushf
inc
repnz
dec
fsub
and
xchg
cmpsl
hlt
mov
fs
or
mov
jg
jno
dec
adc
rolb
ds
cmp
pop
inc
bound
cld
mov
cltd
xor
lahf
popf
pushf
mov
stos
dec
cltd
test
push
dec
jg
fisttps
sub
lock
mov
std
lea
sbb
imul
test
rolb
test
ja
pmullw
and
cmpsb
mov
lds
leave
clc
ss
push
negl
jns
push
mov
lea
push
jl
mov
adc
es
push
stos
in
pusha
jns
push
jge
push
fcoms
mov
xor
js
or
sub
stos
dec
cli
sbb
sbb
cmp
movsl
mov
xchg
cld
or
loopne
in
lods
daa
fldt
add
fdivrl
rcl
xchg
xor
dec
loope
mov
push
lcall
or
xchg
mov
repz
je
and
or
pop
push
or
dec
add
fists
and
mov
mov
sbb
inc
shlb
bnd
mov
or
jb
ret
dec
pop
lods
xlat
ljmp
mov
mov
es
push
das
push
pop
and
mov
cmp
sub
pop
or
push
movsb
test
xor
mov
sub
ss
ret
push
lret
lods
es
scas
mov
or
fsubl
scas
sahf
pop
mov
or
ficomps
out
pop
movsb
jmp
sbb
aam
and
cmpsl
mov
jg
in
rolb
sub
sbb
sub
aaa
cmpsb
dec
fstpl
ds
mov
or
les
pushf
repz
mov
aaa
stc
aad
xchg
xchg
jo
clc
inc
fbld
stos
data16
sbb
dec
sub
test
mov
xchg
pushf
ss
rol
sarl
mov
xchg
jp
sbb
jle
in
jno
popf
push
lods
sahf
int
gs
movsb
push
add
popa
mov
frstor
add
pop
mov
rclb
dec
dec
rcrl
pushf
cmpsl
enter
mov
push
mov
sbb
in
hlt
add
int3
jne
clc
xor
jbe
xchg
hlt
inc
add
or
fldt
jae
orl
add
fwait
pop
push
into
fidivs
xchg
iret
rorb
mov
subl
mov
sub
ljmp
pusha
adc
into
sbb
sub
jp
and
jb
es
test
notb
lahf
sti
xchg
inc
cwtl
pop
fimuls
jae
jno
out
inc
repnz
mov
imul
rclb
push
rcl
jecxz
add
les
dec
add
cwtl
lods
sbb
mov
lock
xchg
add
icebp
in
inc
push
shlb
lea
jns
jne
dec
fst
sub
xchg
push
divl
rclb
add
adc
cld
xchg
mov
jnp
je
lcall
or
adc
scas
adc
pop
mov
stos
lret
lds
mov
cmpsb
push
jno
sub
and
mov
jecxz
das
pop
xchg
addr16
pop
loope
push
cmovno
aaa
movsl
std
add
jmp
mov
popf
shll
pusha
mov
pop
cmp
xor
rclb
test
fistpll
mov
jmp
xlat
cmp
jno
adc
mov
lret
dec
call
nop
mov
push
inc
sub
leave
dec
mov
xlat
fdivrl
cmp
lea
cmp
ljmp
cmpb
jns
jbe
and
dec
ret
and
div
sbb
mov
rorb
push
sbb
pop
pusha
ds
movsb
or
ret
out
xchg
dec
lds
push
mov
adc
cmpsb
xchg
push
adc
ret
outsb
ljmp
jge
pop
xor
jnp
or
add
lret
push
iret
insl
lock
add
in
or
lret
mov
dec
loop
xlat
fnstcw
pop
mov
inc
sub
pop
mov
pop
cwtl
aam
adc
xor
rcpps
add
ret
cwtl
xor
js
jl
fldenv
cmp
push
cmp
ds
stc
dec
insl
mov
mov
push
and
test
mov
cmp
cmp
lea
mov
into
jmp
sarb
mov
aas
les
add
ret
mov
push
or
xchg
dec
dec
jbe
sbb
add
test
dec
leave
mov
out
adc
inc
lock
xchg
pop
push
lock
mov
sbbb
aas
insb
dec
shll
adc
inc
or
dec
in
mov
ret
add
ret
fsts
in
int3
dec
push
inc
mov
and
jne
mov
jo
and
mov
push
xchg
xchg
rolb
push
loop
sbb
fbld
sahf
aas
scas
sub
arpl
mov
cmp
jno
shlb
xlat
out
dec
or
mov
xchg
popa
sbb
xor
sbbb
jg
xchg
mulb
ljmp
xlat
addr16
shlb
in
sahf
inc
cltd
sbb
pushl
mov
int3
mov
sub
and
cmpsl
in
add
fnstsw
shlb
pusha
cmp
scas
mov
imul
push
into
xchg
clc
iret
dec
push
sub
mov
push
inc
sub
fstl
dec
or
sbb
jg
dec
mov
in
mov
orl
mov
jno
xchg
xor
aaa
lods
inc
and
icebp
lret
xchg
orl
test
lcall
or
out
or
jae
mov
addb
mov
push
lds
and
sub
cld
pusha
fimull
cmpsl
mov
push
stos
es
mov
dec
jae
xor
mov
insl
sub
cs
ficompl
mov
lods
mov
clc
shlb
je
fstpt
lea
inc
xor
cld
xchg
fiaddl
cld
push
pop
ss
jmp
cli
jecxz
testl
stos
repz
out
test
inc
push
insl
test
loopne
and
sbb
xchg
lret
xor
adc
std
pop
mov
pop
inc
fstl
movsl
lods
inc
test
stos
insb
int
mov
inc
pop
mov
aad
pushf
adc
inc
inc
popl
adc
xor
lods
mov
xor
add
cwtl
imul
xor
fisubrs
dec
mov
push
int
outsl
and
adc
in
movsl
push
sub
add
ret
cmpl
clc
notl
cli
xor
ds
es
rcrb
in
outsb
xchg
mov
and
dec
fs
es
adc
je
popf
sarb
movsb
xlat
adc
sbb
out
hlt
mov
mov
mov
or
popf
lea
cmc
jo,pn
mov
outsl
lea
inc
mov
loope
insb
stos
imul
mov
outsb
push
push
pop
mov
xor
inc
sub
aaa
mov
cmp
cmc
add
aam
and
js
je
cmp
shll
out
fistpl
mov
loop
mov
out
pop
sbb
ljmp
adc
and
cmp
mov
aaa
sub
pop
adc
pop
jnp
jg
push
jbe
mov
mov
test
outsb
stc
add
or
push
mov
cwtl
std
mov
push
mov
cmp
and
and
clc
out
inc
cmpsb
fs
dec
pop
inc
int
mov
add
push
adc
add
dec
or
xchg
pop
xor
std
or
xchg
repz
push
ds
cmp
jle
stos
inc
xchg
cmpsb
and
xchg
mov
ret
push
rcrl
in
ss
frstor
int
pop
xor
xchg
cmpsb
int
pushl
call
test
popl
fadds
push
lret
iret
pop
mov
pop
mov
sub
xor
xor
sbb
push
in
hlt
loop
aam
fcoms
fidivrs
add
lcall
pushf
push
andb
in
dec
and
pop
and
in
dec
fs
cmc
pushf
push
mov
repz
dec
ret
insb
lcall
pop
das
pop
int3
cltd
mov
push
jb
push
mov
cmp
iret
jne
call
repz
pop
jno
in
xor
dec
insb
sbb
jnp
cmp
mov
xor
test
inc
aam
ficoms
orb
mov
pop
cmp
xor
mull
ja
add
and
xchg
movsb
sbb
fwait
in
inc
and
cmpsl
insl
mov
aas
cmpsl
jae
shlb
loop
arpl
mov
push
popf
sarl
push
cld
sub
pop
paddusw
mov
jae
sub
mov
sbb
jmp
test
addb
stc
cltd
cmpsb
and
cltd
pop
fnstenv
push
sbb
aam
std
aaa
repnz
lods
push
pop
hlt
lds
test
jb
sub
negb
mov
push
les
xchg
aam
push
cld
lods
jno
pop
push
nop
xchg
aad
aad
call
jnp,pn
aam
sbb
jmp
adc
mov
mov
or
mov
sahf
jns
jp
sub
mov
loope
dec
sub
cmpsb
jle
outsl
hlt
mov
push
xor
pop
mov
cmc
imul
int3
jae
and
test
cmpsl
mov
hlt
mov
mov
out
sti
jle
test
rorl
jecxz
mov
cmp
push
adc
in
mov
shrl
outsl
aas
pusha
jmp
xor
int
enter
dec
and
mov
cmp
fidivrs
add
mov
cmp
xchg
pop
insl
shl
dec
xor
cmp
mov
leave
lret
add
dec
cmp
test
aam
repz
out
ljmp
addb
pop
les
icebp
and
outsb
jl
push
ljmp
adc
data16
xchg
dec
sbb
scas
sbb
or
lock
leave
mov
mov
notl
add
loopne
adc
icebp
rcrb
adcl
rcl
dec
fcompl
sahf
mov
xorl
call
jp
iret
outsl
mov
xchg
aam
push
xor
gs
es
xchg
xchg
out
or
xchg
sbb
insl
cmp
sub
loopne
push
negl
dec
lret
xor
jmp
out
xorl
enter
shll
adc
xchg
or
cwtl
sub
push
add
cld
mov
mov
mov
cmp
jl
sbb
pop
arpl
bound
scas
test
mov
jno
int3
xchg
mov
fisubrs
mov
lret
bound
popf
xlat
in
or
pop
into
shrb
add
xchg
push
mov
jno
mov
lea
push
jbe
lds
inc
sbb
push
jmp
rcr
ljmp
mov
fbstp
push
test
jle
push
and
hlt
pop
mov
push
loope
ret
cmp
cmp
icebp
bound
ss
sarb
addr16
jg
rcrb
lock
popa
mov
es
jl
mov
mov
add
pop
cmp
jmp
jb
mov
mov
inc
fnstcw
nopl
fcmovb
jns
imul
shr
int
fwait
and
into
lock
out
adc
sarb
add
ss
les
and
dec
xchg
inc
xor
jp
into
ret
int3
mov
push
xchg
addr16
xchg
or
jp
push
xor
cwtl
cld
and
aad
cmc
ret
xchg
xchg
aas
and
sahf
jb
xchg
adc
or
por
mov
popa
mov
dec
adc
aam
pop
jp
or
jb
scas
dec
inc
cmpsl
subb
out
fdivrs
gs
push
push
pop
mov
cmpsl
sub
mov
jl
jns
lret
cmc
scas
lret
dec
int
lods
sbb
dec
negl
xchg
push
fucom
mov
mov
push
stos
adc
add
neg
and
adc
cmpb
or
cmpsl
lret
jno
loope
xor
int
push
jle
lcall
out
mov
mov
int
inc
gs
imul
clc
sbb
jg
sbb
sub
ljmp
leave
ds
popf
jae
push
pop
arpl
sbb
add
ss
ret
lret
adc
shlb
pop
and
mov
mov
or
gs
pop
rorb
mov
adc
mov
push
in
pop
sbb
and
pop
sbb
aaa
jg
dec
push
clc
mov
cmpb
test
imul
std
insb
ds
inc
jmp
test
lea
test
xor
mov
leave
jae
push
lea
popa
or
icebp
js
mov
and
jp
xchg
js
test
sub
xor
xor
in
cwtl
imul
int3
addr16
push
sbb
scas
adc
sub
sbb
ja
mov
adc
jmp
xchg
test
lret
jge
mov
jecxz
movl
pop
dec
pop
mov
mov
adc
js
stos
push
pop
mov
ret
adc
scas
ret
mov
mov
mov
pop
fnsave
xchg
fisttps
fwait
pop
mov
jne
and
sbb
lcall
jmp
push
scas
or
adc
das
xor
mov
int
ret
mov
mov
outsl
or
mov
loope
jle
lods
and
imul
push
jnp
das
adc
mov
mov
cmp
lret
push
mov
mov
jp
adc
push
cmp
dec
jns
sarb
lret
cmpsl
loopne
lods
out
lahf
jb
mov
andb
div
pop
cmp
mov
pop
popf
mov
push
cmp
sbb
sbb
push
xchg
xchg
fisttps
pop
and
ficoms
mov
xor
sahf
mov
sbb
xchg
mov
mov
stos
cld
popa
lea
stos
pop
cmc
lds
mov
mov
xor
orb
mov
jno
popl
and
test
scas
dec
sbb
dec
dec
inc
daa
pop
fldlg2
ss
mov
arpl
pop
xor
cmpl
inc
outsb
dec
xor
and
mov
mov
cmc
mov
scas
or
mov
jl
xchg
mov
test
aaa
cmp
stos
dec
loop
sbb
pop
sbb
fistpll
dec
icebp
mov
pop
ret
test
scas
lcall
add
sub
jl
push
add
cmp
xchg
adc
popa
push
imul
out
cmp
in
adc
jns
out
mov
lret
xor
or
and
sbb
call
pop
ficompl
xor
cli
movsl
add
push
mov
rorl
add
inc
push
mov
outsl
insl
out
in
aad
test
jmp
rorl
xor
loopne
mov
jl
fcompp
ss
mov
and
imul
inc
addr16
outsb
out
js
xor
add
aam
inc
std
cmp
ds
out
arpl
scas
sub
subb
mov
cmp
loope
imul
sbb
lret
adc
jne
push
and
clc
xor
xor
frstpm(287
arpl
je
insl
ficompl
jnp
xor
sub
mov
xor
dec
repnz
lock
and
mov
adc
das
aaa
das
sub
mov
and
or
sub
repz
stos
mov
adc
iret
pop
je
cmpsb
or
in
fnstenv
pushf
mov
imul
sahf
arpl
xchg
mov
mov
movsl
fisubrs
nop
in
pusha
ror
sbb
or
push
push
and
mov
cmp
or
sbb
xor
ljmp
and
and
pop
insl
and
addr16
xchg
push
cmpsb
push
adc
jle
push
pop
mov
jbe
pop
mov
sub
rclb
xor
fwait
cmpsb
loop
sub
mov
mov
es
ret
adc
ljmp
adc
lcall
mov
xchg
inc
or
cmp
sahf
aas
add
xchg
stos
mov
enter
xor
pop
sti
and
lock
sub
iret
jecxz
xor
sbb
sub
sti
pop
lods
mov
imul
cmp
push
sbb
mov
aaa
push
ret
std
aas
inc
mov
sbb
pop
and
ficompl
stc
cmp
cmp
mov
push
subl
and
jmp
mov
mov
nop
sbb
push
insb
jo
in
imull
or
es
lods
jb
in
mov
sbb
mov
lret
psadbw
dec
mov
mov
dec
cmc
sub
mov
fistps
sub
lcall
dec
mov
xlat
sub
pop
pop
and
mov
arpl
and
iret
or
or
call
fbld
mov
in
jle
subl
call
ja
and
adc
cmpb
mov
in
cmc
loope
push
cld
sbb
adc
push
mov
ss
sub
push
js
in
sti
mov
pop
cli
dec
cld
popa
daa
jbe
cs
imul
repz
test
aam
cld
shl
into
in
sub
mov
insl
mov
adc
push
cmp
xchg
pop
clc
pop
movsb
push
out
loop
ficomps
xor
or
ret
jae
or
xor
mov
mov
inc
pop
sti
ljmp
sbb
mov
shlb
adc
out
add
cwtl
jb
pop
in
lock
arpl
xchg
jg
nop
mov
or
mov
inc
outsl
and
ret
xor
test
mov
gs
pushf
push
xchg
mov
or
mov
ja
incl
mov
stos
test
lock
pop
into
shrl
cmp
dec
outsl
inc
rcrl
push
adc
inc
movsl
dec
repnz
mov
outsb
mov
mov
jl
dec
lret
hlt
adc
aam
cltd
lock
cmpsl
into
push
dec
xchg
in
jbe
pop
dec
arpl
mov
cmp
push
dec
dec
inc
xchg
push
mov
rorb
xchg
dec
adc
cmp
fwait
mov
inc
imul
andb
andl
popa
ds
xchg
fisubrs
rcrb
and
aas
pop
movsl
mov
mov
cltd
mov
jns
push
jb
out
aad
lea
decl
or
sbb
shrb
pop
cld
lret
xchg
or
inc
orl
xchg
sbb
popa
xchg
hlt
clc
lds
add
into
jnp
mov
loope
push
sub
std
repz
jmp
ffree
pop
adc
paddusw
add
dec
mov
mov
and
mov
lds
cmp
mov
sbb
push
cmc
xor
out
mov
call
xchg
sarl
jge
lock
pop
cmp
test
in
push
push
not
xor
xor
rcrl
int3
fstps
push
sub
outsb
push
rorl
cmpb
add
cmpsb
addr16
dec
or
pop
dec
and
jl
mov
aad
xchg
add
add
int3
call
xor
mov
or
or
arpl
arpl
sub
das
loop
fcmovbe
loope
cmp
push
mov
and
sub
add
mov
cmpsl
mov
push
mov
je
jae
cli
or
int3
shlb
out
orb
inc
mov
mov
fisubs
jmp
clc
jbe
mov
rolb
mov
push
hlt
cmp
mov
jbe
shl
xchg
xlat
mov
arpl
das
out
xchg
cli
mov
and
add
inc
test
adc
loopne
dec
jae
ljmp
and
ss
push
gs
inc
ret
adc
in
sar
insb
test
cld
push
add
push
push
pushf
mov
sbb
out
inc
fcmovu
xchg
out
dec
push
jb
popa
pop
addr16
cs
inc
test
sarl
in
dec
loop
or
xchg
test
subl
ret
mov
and
loop
inc
mov
call
out
pop
imul
or
jae
mov
out
dec
nop
fdivp
test
inc
fcomps
lret
inc
lock
fiaddl
pop
mov
dec
daa
lods
inc
lret
mov
mov
insb
cli
push
gs
movsb
faddl
dec
dec
pop
ss
call
inc
std
rcrb
lea
loop
xor
jle
ss
fcomps
jno
push
pusha
call
dec
dec
inc
xchg
cwtl
lret
or
push
xor
insl
stos
inc
subb
mov
cld
dec
mov
push
inc
push
mov
mov
shrb
mov
das
xor
push
daa
arpl
lods
js
inc
leave
fwait
jmp
xchg
fstpt
xchg
in
imul
xlat
xor
test
mov
cltd
sbb
aad
in
repnz
jg
pushl
shlb
xlat
test
out
cltd
inc
mov
jecxz
cmc
bound
adc
cwtl
stc
or
push
cs
rcr
mov
and
ja
fildll
das
push
xor
sti
add
mov
hlt
pop
hlt
inc
xchg
pop
out
pop
sub
and
test
fisttpll
into
ljmp
push
jp
rcr
push
xchg
sti
dec
fwait
mov
inc
mov
lret
sub
test
scas
mov
sub
shlb
add
imul
push
mov
imul
push
nop
rcr
jns
xor
xchg
add
cmpsb
test
mov
adc
cmp
ret
popf
test
out
les
les
fcompl
mov
jle
mov
push
jge
xor
xor
and
dec
hlt
jnp,pn
pop
fwait
insb
addl
movaps
cltd
jae
lea
jg
inc
roll
lretw
xor
push
insl
stos
fs
repz
jmp
mov
clc
and
dec
lods
lock
pop
ret
filds
lahf
stos
sarl
or
sarl
out
adc
ret
or
push
out
mov
popa
xchg
lods
ficoms
popf
cli
xchg
and
push
adc
pop
daa
inc
push
pushf
inc
xchg
aas
divl
cmpl
test
mov
jb
push
loop
xor
rcrb
inc
sub
daa
rorl
push
lea
push
mov
sbb
lods
mov
out
les
in
cmpsl
pop
neg
imul
and
pop
jle
inc
xor
dec
fs
jns
xor
mov
aam
jne
bnd
adc
jle
pop
xorl
xchg
inc
pop
mov
scas
push
cmpsl
jne
xchg
push
call
icebp
push
imul
pusha
mov
push
jo
ret
add
out
loopne
adc
out
stc
mov
push
adcb
mov
jno
lea
cld
and
mov
mov
movb
cltd
das
std
pusha
cli
ret
push
loopne
cmp
mov
jne
cmp
dec
clc
movups
push
add
jmp
aam
movsb
pop
dec
add
icebp
pushf
sub
and
divb
jp
ljmp
push
or
sbb
out
add
dec
add
loop
jnp
loop
xor
out
fldln2
inc
inc
cs
or
mov
cmp
dec
push
clc
push
fistpll
subl
mov
enter
inc
outsl
ljmp
mov
inc
push
push
adc
lcall
in
adc
fs
sbb
adc
jb
add
or
ja
add
in
aaa
idivb
and
andl
bound
cmpl
mov
mov
xor
lret
inc
jl
sbbb
cld
push
sub
dec
call
push
popa
inc
in
into
or
xor
fdivrp
push
test
adc
mov
popf
in
mov
test
mov
fwait
push
das
mov
or
adc
mov
movsb
in
out
inc
inc
fsubp
test
mov
scas
repz
cmc
lods
aas
loop
insl
mov
aam
xchg
fsubrs
shrl
shrb
or
dec
cmpl
add
adc
pop
loop
xor
push
mov
xchg
in
in
iret
pushf
repnz
out
pop
inc
testl
cmp
bts
xor
test
pop
cmp
hlt
mov
cli
mov
or
into
cli
mov
test
dec
sub
cld
jo
xor
cmp
inc
inc
arpl
popf
push
les
loopne
push
adc
loop
loopne
ds
stos
sbb
int
sub
mov
lods
push
xchg
and
push
lahf
inc
push
jl
xor
xchg
insl
mov
sbb
lret
dec
mov
cs
in
mov
xchg
cmc
sarl
cwtl
mov
add
or
and
jbe
outsb
mov
stos
cmc
rcl
incb
xor
xlat
mov
jo
repnz
mov
mov
call
in
imul
pop
push
leave
pop
mov
data16
xchg
mov
mov
hlt
push
lret
xchg
jns
lret
fadd
mov
clc
frstor
test
jno
arpl
mov
pop
lds
mov
inc
int
fdivs
iret
xchg
cs
pop
out
xchg
insl
shlb
outsb
lds
fcomps
addb
mov
out
jae
xor
push
inc
shrl
inc
sub
arpl
cltd
imulb
movmskps
stc
adc
sub
sbb
ja
xor
popf
in
fnstcw
fidivl
rol
sbb
test
cmp
sbb
add
clc
clc
rorl
inc
lock
xchg
push
mov
pop
cmc
jp
fstpl
xor
fwait
stos
enter
fisubl
rcll
sbb
popa
or
popf
sub
ja
mov
stos
adc
or
inc
les
xchg
test
fbld
push
pop
rorl
in
fnstcw
ds
je
cmp
push
daa
out
movsl
inc
xchg
fwait
sub
aad
lods
les
pop
shrb
adc
nop
inc
sub
sub
cmp
sub
pop
adc
lea
popa
pop
mov
andl
add
sbb
stos
adc
pop
jns
pop
inc
in
loop
fstp
shll
push
insl
mov
mov
test
and
lods
pop
pop
cmp
das
adc
bound
fidivrs
frstor
pop
dec
imul
xor
testl
shr
pop
sub
insb
xchg
or
daa
and
leave
dec
int
cltd
push
aas
pop
fsub
rcrl
loope
inc
dec
add
jge
imul
xlat
jnp
jbe
negb
mov
lret
sti
test
push
insl
stos
das
mov
or
inc
sub
jecxz
mov
rcrb
loop
mov
sub
xchg
cmc
jge
adc
testl
pop
aas
lret
sbb
jle
push
bound
sub
in
int3
bound
cmp
fiadds
mov
les
jne
adc
inc
cmp
imul
pop
in
jl
mov
bound
ljmp
cmovno
ror
push
shrb
in
cmp
mov
sahf
push
ret
leave
movsb
sbb
data16
push
fldcw
pop
mov
xor
gs
fstl
cmpsl
mov
adc
repz
jg
je
push
and
mov
rcrl
test
mov
stos
cmp
mov
shr
cmp
test
cmp
cmp
imul
gs
loop
insb
sbb
and
jp
bnd
jp
xchg
enter
mov
push
push
fmuls
cs
cmc
push
sub
or
popf
inc
lahf
ret
or
mov
or
daa
arpl
add
out
out
xor
cmovnp
ljmp
add
jne
sbb
mov
ds
ffree
ret
sbb
pop
cs
pop
xchg
adc
xchg
cmp
jg
nop
test
cmp
cmp
push
dec
jnp
insb
int
sub
popa
shlb
test
dec
leave
sarb
dec
mov
arpl
daa
aaa
aaa
out
inc
xchg
outsb
int
cmpsl
push
mov
cmp
lods
ret
xlat
scas
inc
mov
stos
dec
imul
cmp
jnp
scas
dec
cltd
fadds
loopne
in
jp
iret
aas
out
mov
test
adc
fiadds
fscale
sub
es
pop
pop
push
jle
jl
insl
mov
mov
icebp
test
iret
push
fs
pop
inc
pop
mov
out
dec
or
push
inc
std
rcll
xor
or
pusha
pop
jle
outsb
leave
adc
dec
adc
stos
leave
push
int3
cld
adc
jge
lock
rcll
pop
xchg
cmp
sub
pop
movsl
les
and
mov
jp
sbbl
and
repz
inc
lea
fmull
cmp
xchg
rolb
aam
mov
popa
dec
pop
mov
insb
sbb
and
loop
mov
fldt
sbb
fidivs
push
push
out
in
xor
pop
out
bound
pop
lods
icebp
adc
xor
jo
xchg
or
mov
lods
dec
sti
outsl
out
pop
xchg
popa
cmc
leave
enter
sub
cmp
addr16
lock
mov
int
push
int3
icebp
sub
lock
dec
test
fdivl
inc
and
add
rclb
call
mov
dec
fwait
sub
pop
fidivrl
sub
pop
popf
out
call
push
mov
pop
nop
adc
mov
adc
call
test
jmp
dec
ds
in
inc
fcompl
inc
adc
loope
xchg
ja
cli
cmp
in
out
or
mov
cmp
mov
cmp
inc
nop
fs
std
mov
sbb
lods
push
pop
mov
adc
jno
cmp
xor
pop
aaa
inc
lds
xor
dec
jae
outsb
repnz
jb
fstpl
rorb
sub
mov
xor
jo
pop
and
fisttpll
mov
cmp
ret
xchg
mov
out
xor
mov
adc
pop
into
dec
ret
adc
xlat
mov
scas
sahf
mov
ja
push
mov
inc
sahf
mov
jbe
mov
fistps
je
push
adc
imul
xchg
and
cmp
aam
inc
sbb
mov
popa
bound
lea
shlb
loopne
mov
push
xor
nop
lret
hlt
inc
mov
mov
es
stc
xchg
xchg
mov
dec
je
sbb
insb
arpl
sub
cmp
or
scas
add
addr16
mov
xlat
and
cmp
movsb
sbb
cmp
xchg
cld
ret
in
lods
pushf
imul
out
cmpb
mov
pop
addps
orb
cs
cmpsb
xchg
or
mov
clc
sub
aam
inc
loope
jmp
out
inc
pop
aas
push
cwtl
and
xlat
push
cmp
lahf
dec
sbb
aaa
inc
and
sbb
mov
push
pop
push
mov
mov
jl
shlb
outsl
negl
dec
xor
mov
data16
jo
lcall
sbb
mov
arpl
sbb
int3
ss
repnz
or
jmp
lds
cwtl
pop
testl
cmp
xlat
pop
jno
jmp
sbb
fists
or
ljmp
mov
cwtl
mov
imul
push
mov
mov
mov
jg
test
mov
imul
xor
imul
sbbl
in
lea
mov
push
fs
leave
cmc
mov
cli
clc
shr
loopne
xlat
int
pushf
ljmp
out
sbb
call
rcrl
inc
cli
jg
dec
stos
pushl
imul
int3
jnp
imul
lods
cmp
fwait
test
gs
mov
into
in
orb
pop
shrb
xor
js
mov
mov
enter
cs
data16
int3
cmpsb
push
repnz
insl
jl
fnstenv
inc
xor
and
push
jmp
cli
je
push
pop
push
mov
inc
fstl
bound
push
out
cmp
push
shrb
outsl
cmp
cmpsb
jno
ror
inc
aam
rorl
jo
ja
mov
pop
jmp
aaa
nop
leave
mov
shll
test
mov
inc
pop
cmpsl
pop
xchg
int
sbb
imul
es
or
ja
sahf
jae
jmp
jae
jb
loope
clc
insb
enter
mov
pop
lods
ffreep
pusha
sbb
xor
sbb
jg
ja
imul
pop
xchg
and
and
jl
adc
ds
into
push
jo
push
fs
or
es
inc
xor
lods
insb
jne
push
popa
cltd
ja
ror
outsl
test
sbb
bound
or
sub
push
sub
xchg
pop
mov
sub
pushf
outsl
sbb
dec
inc
fwait
add
shrb
je
and
movsb
pop
jp
dec
lcall
sbb
lods
jae
xchg
fsubs
xchg
jne
lds
mov
add
lock
xchg
bound
sbb
out
add
adcl
daa
popa
cli
jns
adc
jg
shr
stos
cmp
cmpb
push
pop
push
int
bound
mov
mov
idiv
adc
sbb
inc
xlat
jae
movsl
dec
mov
int
shrl
mov
stos
mov
stc
inc
mov
sarl
fwait
sbb
xor
aam
inc
dec
inc
xor
mov
dec
xchg
lods
and
imul
ret
dec
mov
rol
adc
sbb
jmp
aam
add
push
xchg
bound
in
xchg
std
std
repnz
scas
xchg
mov
nop
xchg
cmpsb
mov
mov
and
inc
mov
rolb
xorb
push
jb
addr16
mov
adc
mov
push
cmpb
adc
dec
shlb
dec
jmp
cmpsb
push
lds
jnp
add
cmp
xchg
pop
cwtl
loope
scas
fnsave
into
sti
jno
daa
imul
dec
dec
xchg
cmp
or
xor
rcrb
sbb
jb
filds
push
dec
mov
cmp
or
push
stos
js
fcoms
js
xor
inc
pushl
sbb
push
lds
or
cmc
fisttpll
dec
add
loopne
ja
incl
mov
adcl
int3
and
addr16
cwtl
fsubr
sahf
inc
sub
push
xchg
mov
adc
pop
xor
xor
xchg
push
xchg
lahf
das
repz
popl
cwtl
jnp
push
sbb
icebp
loopne
jecxz
cwtl
shl
decl
push
jmp
and
in
insl
lahf
hlt
xchg
in
fnstsw
cmp
jbe
pop
aam
lock
sbb
xchg
test
inc
jl
dec
clc
cli
sub
xlat
shl
mov
les
outsb
ja
adc
pop
in
and
inc
insb
loope
loop
jmp
ss
jmp
pusha
mov
xchg
es
mov
xchg
adc
inc
and
and
bound
sub
and
test
xor
sbb
leave
sbb
mul
push
out
jmp
sti
iret
sarb
or
in
cmp
cmp
in
jno
push
sbb
rcrl
pop
mov
lds
xchg
mov
lock
hlt
movsb
dec
gs
inc
in
sub
mov
dec
mov
mov
call
aad
adc
xchg
or
arpl
sti
hlt
dec
jg
fistl
xor
je
add
jo
leave
mov
cmp
and
in
lea
jp
clc
xor
nop
push
mov
stc
add
hlt
jnp
pusha
or
hlt
lret
lea
in
sub
pusha
dec
repz
stos
xchg
subb
fisttps
xchg
mov
sti
sub
icebp
and
stc
dec
sub
cmp
jmp
in
and
mov
or
mov
hlt
mov
push
sbbl
sub
iret
es
adc
mov
nop
mov
and
fucomi
xor
pop
mov
insb
stos
mov
iret
or
adc
mov
sbb
cmp
icebp
inc
jno
mov
and
mov
cmp
shl
xchg
jmp
mov
add
jp
lock
cmpsb
sti
cld
cmp
push
push
outsb
inc
mov
pop
aad
sub
and
iret
aas
test
cmpl
push
dec
lock
add
data16
mov
das
add
inc
pop
in
mov
bound
rcrb
add
mov
ret
sti
inc
icebp
pop
inc
xchg
inc
push
sbb
mov
dec
push
lds
or
loopne
popa
pop
cmp
in
aam
mov
lods
imul
ja
js
arpl
insl
insl
fadds
xor
dec
adc
cmpsl
hlt
into
xchg
and
inc
sahf
xchg
mov
mov
lods
outsl
imul
cli
dec
xor
iret
sub
sub
arpl
es
pop
cmp
xchg
or
std
in
in
jmp
xchg
push
inc
add
jo
scas
xor
mov
sbb
push
cmp
mov
jge
jno
rcr
sbb
jo
mov
cmc
push
sti
sbbl
dec
and
movsb
movsl
adc
jmp
clc
ja
dec
repz
mov
pop
ljmp
push
pushf
dec
enter
popa
pop
das
jne
and
gs
in
sub
aam
lahf
fwait
orb
das
in
push
loope
cmpsl
imul
gs
pop
ret
jbe
sub
mov
cltd
das
xor
mov
xchg
jns
ret
ds
lock
jbe
int
xor
mov
cli
aam
inc
imul
jnp
cmpsl
sar
cmp
mov
ds
jnp
dec
and
in
cmp
pop
scas
ret
movsb
sbbb
cli
inc
pop
jb
push
jge
popf
ja
mov
mov
inc
outsb
xchg
pop
or
push
ss
fnstenv
imul
push
ss
cmp
mov
adc
imull
pop
outsl
loopne
enter
loope
adc
adc
push
xor
enter
test
push
call
test
dec
pop
lret
cmp
imul
mov
and
loop
pop
lods
pop
lcall
push
adc
cwtl
mov
push
loop
sub
sub
mov
outsl
mov
mov
test
mov
data16
inc
push
imul
mov
xchg
test
mov
aad
in
mov
pushf
xchg
loope
dec
push
cld
sbb
stc
jae
cmc
ljmp
push
loop
mov
mov
aaa
jne
mov
data16
jno
xchg
add
and
push
shll
in
jle
dec
push
fcoml
stc
orb
mov
dec
jg
mov
xorl
loope
ljmp
sti
arpl
rcrl
inc
mov
jge
icebp
mov
jnp
and
mov
lret
pop
cmp
in
pop
add
sti
das
je
jno
aad
jl
in
test
mov
jnp
int
adc
push
rolb
mov
lds
sahf
push
lea
fmuls
sbb
sub
out
sub
fmul
iret
stc
icebp
add
jno
cmp
inc
pop
fidivrl
or
ja
mov
sbb
repnz
sbb
push
inc
dec
stos
sbb
jbe
imul
stos
das
lds
sbb
roll
sub
pop
mov
fisttpl
fsubs
mov
jg
mov
sub
mov
jecxz
pop
inc
icebp
icebp
xchg
dec
imull
les
jo
mov
dec
cmc
or
inc
sahf
sbb
push
adc
sub
inc
fcoms
int
sbb
push
jo
mov
dec
sub
pop
cld
jnp
ret
sbb
fs
cmp
imulb
hlt
jecxz
and
loop
repnz
xor
popa
add
mulb
pop
jl
movsl
loope
rcr
mov
inc
sub
stc
shrb
sbb
pop
imul
sbb
sarl
mov
ja
les
push
subb
mov
pusha
dec
data16
shlb
fwait
je
and
aad
xor
mov
std
iret
add
rclb
push
xor
pop
cmp
push
jbe
cld
push
push
vmwrite
fwait
inc
cmp
cld
scas
jnp
roll
xlat
jno
push
cmp
mov
cmp
xchg
cmp
clc
test
iret
sub
into
fbstp
dec
dec
sbb
cmp
bound
std
mov
and
xchg
jmp
adc
or
loopne
in
push
sahf
repnz
in
cltd
cmpsl
cltd
sub
mov
jno
pop
xchg
sub
inc
xchg
push
out
stos
sub
bound
mov
icebp
cwtl
lock
sti
pop
pushf
mov
dec
jmp
lods
xchg
adc
sbb
mov
lods
push
popa
and
sbb
aas
pop
testb
adc
insb
pop
test
rcll
sbb
mov
jmp
pusha
mov
jae
clc
mov
dec
insb
cwtl
clc
jle
mov
sub
pop
or
data16
xchg
mov
mov
pop
aad
mov
mov
xchg
mov
les
ss
dec
mov
or
sbb
loopne
loopne
push
and
pop
or
jp
fdivrs
decb
xor
push
int
test
lcall
cltd
fwait
pop
out
xorb
int3
xor
mulb
mov
pop
or
xchg
iret
lods
jo
xchg
jns
lea
nop
jbe
fisubrs
jo
pop
adc
clc
aam
shll
mov
in
mov
addr16
dec
imul
mov
test
jo
cmpb
sub
pop
adc
test
cmp
inc
sub
pop
hlt
fildll
rcr
cmp
xor
fisubrs
aas
aaa
xchg
imul
push
scas
dec
fiadds
mov
xlat
aad
mov
in
and
adc
jns
add
in
inc
jmp
les
xchg
xchg
out
and
iret
jbe
mov
scas
xor
mov
push
mov
xchg
mov
mov
loop
adcb
mov
adc
fnstsw
lcall
clc
clc
loope
test
sub
test
inc
testl
push
adc
push
repnz
mov
pop
sbb
push
push
and
adc
outsl
repz
push
loope
add
sub
push
fisttpl
sbb
repz
pop
ljmp
iret
xor
sub
icebp
mov
packuswb
pop
in
out
adc
cwtl
jmp
mov
dec
push
rolb
stos
out
inc
int
dec
push
pop
mov
jecxz
push
pop
inc
repnz
stos
pop
xor
inc
xchg
xor
mov
fyl2x
mov
push
pop
pop
shr
das
xchg
cltd
imul
dec
dec
loopne
outsl
mov
push
cmpsl
dec
push
mov
aas
inc
and
nop
sub
xor
push
repnz
rolb
in
sbb
test
jge
sub
or
clc
pop
lea
lock
iret
or
pop
inc
insb
ja
inc
push
test
sub
rol
inc
mov
push
mov
xor
andb
das
inc
iret
leave
or
fdivp
push
add
testb
gs
and
in
and
shrb
and
div
sbb
stos
int3
outsb
push
cmpsl
sbb
ss
mov
mov
in
sub
or
jge
xor
jae
ss
inc
or
call
lret
jns
dec
outsb
movsl
rcrl
jbe
xor
push
bound
cmc
sbb
cs
in
push
jno
inc
into
fistl
sti
fistpl
je
ljmp
push
jno
sbb
and
lds
aaa
test
mov
or
jns
fwait
mov
repz
push
arpl
pusha
mov
adc
lahf
subb
scas
or
movsl
and
push
loop
fidivrs
aad
jmp
add
inc
mov
cmp
in
mov
hlt
jb
mov
repnz
push
push
push
aam
dec
lret
loope
std
push
out
push
mov
mov
in
pusha
adc
inc
fcoms
mov
xchg
fdivrs
cmp
ljmp
add
lahf
cmc
xor
pop
cmp
insl
jg
push
dec
int
imul
push
bnd
dec
daa
xchg
dec
push
mov
rorb
mov
adc
push
pop
sub
or
pushf
or
or
out
icebp
and
sbb
push
cli
sti
xchg
rolb
sti
xchg
sub
stc
nop
mov
push
pushf
cmp
xchg
inc
pop
or
sub
jb
adc
push
jo
test
pop
fcomps
out
push
int3
and
movsb
xchg
cmp
or
jne
xor
cltd
mov
jp
adc
pop
or
and
in
int
dec
push
lahf
mov
nop
dec
sub
jmp
fucomip
pop
push
cmpsl
push
bound
iret
mov
ja
dec
push
push
pop
sbb
inc
push
xchg
push
loope
mov
inc
lods
lret
cmp
lahf
push
fsubs
xchg
in
and
in
mov
jae
rep
xchg
pop
ja
cld
aad
jmp
stos
cmpsl
scas
sbb
in
sub
dec
loop
in
add
test
mov
and
loopne
pop
jb
inc
or
ret
and
inc
mov
das
adc
sbb
dec
call
out
adc
inc
out
xchg
data16
sbb
int3
stc
sti
jg
inc
pop
xor
aas
jb
imul
jnp
push
dec
mov
add
cmp
xor
jmp
gs
ss
xorb
push
sar
pop
fsubl
xchg
fucomi
addr16
inc
xchg
shlb
sbb
sub
dec
insb
sub
mov
mov
or
lret
cmpsb
jbe
aad
inc
shrb
add
mov
insb
inc
sub
insl
jno
in
dec
loope
xor
loop
sbb
adc
mov
loope
push
inc
and
ds
sub
push
les
inc
add
add
clc
sbb
xchg
fidivs
cs
cld
jno
es
fsubr
cmp
mov
movsb
jb
stos
mov
sbb
dec
push
jmp
jne
data16
mov
repz
mov
lret
loopne
or
and
jno
inc
inc
shr
adc
cmp
enter
dec
out
rcll
push
sub
or
mov
js
xchg
out
shlb
xor
cld
and
fdiv
je
pushf
push
pop
dec
cmp
repz
int3
xchg
into
jo
testl
pop
repnz
ret
xlat
loope
pop
push
mov
in
pop
or
jne
inc
or
out
jle
in
jecxz
cld
mov
adc
mov
mov
into
cltd
pop
jbe
cwtl
in
adc
cmp
mov
jnp
sub
scas
xlat
add
mov
aaa
mov
out
cmp
jle
dec
filds
sti
xchg
xor
mov
and
fsubrs
dec
pop
jl
out
lret
adc
cmpsl
or
mov
sbb
stos
sub
xchg
jmp
hlt
push
cmp
sub
push
hlt
jecxz
mov
pop
lods
push
cmp
dec
ret
es
dec
jbe
fisubrs
shl
loopne
mov
push
sbbb
push
xor
movb
mov
adc
fmul
out
fldcw
mov
cmp
cli
test
cmp
cs
jge
repnz
adc
jl
dec
xchg
aam
cld
pop
dec
ljmp
daa
sub
jne
fidivs
and
sbb
outsb
cmp
inc
popf
cmp
ret
xchg
mov
int3
lods
cmp
adc
add
mov
aas
mov
or
movsl
lods
pop
pop
stc
in
mov
jl
and
ljmp
ljmp
sbb
sar
jne
sbb
nop
xor
mov
jmp
add
nop
ror
or
sub
jnp
addb
jb
es
in
fs
filds
cld
push
push
mov
adc
cld
inc
sub
into
scas
mov
or
enter
stos
and
inc
jae
call
pop
pop
or
ss
sarl
cmp
test
int3
fstl
inc
jle
cmpsl
popa
and
loop
mov
add
cmp
bsr
gs
mov
adc
mov
aam
xor
rclb
cmp
fsts
out
scas
andl
push
ds
jbe
sbb
popf
insl
sti
xor
or
push
push
push
rorb
das
xchg
je
add
sti
jno
mov
inc
enter
xor
dec
dec
lret
pop
lods
inc
jl
pushf
add
outsb
jp
push
mov
jnp
or
lock
mov
xchg
pop
push
jg
jmp
pop
imul
imul
inc
jbe
cltd
mov
loop
sbb
icebp
nop
pop
pop
mov
and
jo
loopne
inc
test
xchg
add
in
testb
adc
test
inc
ljmp
jno
jl
mov
jmp
sub
fs
out
je
jp
jge
sbb
and
jl
ja
outsb
in
in
jbe
jbe
icebp
mov
lea
xor
push
fdivs
sbb
lods
std
dec
push
mov
mov
aaa
leave
ja
lret
repnz
xchg
into
xchg
lods
shlb
xchg
testl
mov
cmp
movsl
push
clc
leave
out
ret
cwtl
push
fisttpll
mov
ficomps
rcrb
mov
data16
mov
xorb
inc
dec
je
aaa
leave
jo
dec
pop
mov
insl
cs
mov
fmul
jmp
out
cwtl
push
xchg
jno
mov
sbb
pusha
mov
sub
push
fcompl
jg
idivl
mov
out
clc
loope
or
pusha
repnz
xor
push
dec
in
jno
cwtl
cmpsl
addl
inc
sbb
xor
sbb
cltd
stos
out
xor
aas
fmul
inc
aad
test
mov
ljmp
or
dec
aam
int3
mov
mov
sbb
movsb
movsl
mov
data16
js
bound
imul
jge
shrb
out
repnz
xchg
sar
je
pop
lods
lret
mov
idivl
adc
push
sbb
adc
jae,pt
jns
es
xor
or
movsl
loop
and
cld
test
push
jp
cmp
push
aad
addr16
sbbb
jmp
imull
fstpt
out
xchg
push
aas
xor
push
add
add
ret
push
sub
push
inc
lods
scas
mov
pop
int
jle
sbb
andb
rcll
imul
loope
bound
mov
inc
test
nop
and
repz
sbb
add
cmp
xor
jb
ds
push
loop
inc
iret
js
lods
xor
aad
daa
movsl
lahf
imul
enter
pusha
movsl
jae
test
mov
rcrl
jno
mov
nop
adc
dec
xor
jae
cs
sub
jns
jne
repz
in
dec
lods
jne
sub
dec
dec
adc
mov
jl
jmp
and
dec
mov
mov
jg
repz
mov
pop
add
and
mov
mov
cli
mov
fisubl
push
sahf
jmp
aad
and
jnp
mov
mov
adc
jbe
gs
dec
xchg
mov
testl
mov
je
movsb
adc
fmuls
enter
inc
mov
out
loop
push
dec
mov
arpl
mov
out
or
scas
lods
inc
cmpsl
pop
shrb
fwait
movsb
idivb
inc
imul
scas
scas
loope
scas
pop
inc
cld
loope
push
loop
mov
mov
sub
lahf
repnz
cmp
cmpsl
icebp
mov
fildl
lds
je
xchg
push
enter
mov
mov
inc
inc
pushf
jge
xchg
lcall
sub
ss
subb
sub
mov
call
pushf
mov
dec
popa
daa
adc
cltd
shll
inc
cli
lds
cmc
fidivs
add
jns
outsl
lods
aas
and
jns
movsl
or
je
repnz
or
dec
cmpsb
leave
in
mov
inc
aad
lret
xor
sub
neg
cli
dec
jnp
cmc
lods
add
sub
xchg
sbb
pop
pop
push
insb
cli
add
nop
les
in
xchg
push
mov
xchg
mov
in
xchg
push
lea
movsl
loopne
adcb
cmp
frstor
cmova
cmp
xchg
pop
mov
jle
fwait
xchg
jmp
icebp
push
jge
lds
jmp
dec
dec
out
test
xchg
and
push
adc
jbe
repz
pop
in
pop
xor
sub
es
addl
nop
sbb
xchg
popa
jno
aas
pop
jnp
movsb
xchg
xchg
das
pop
fsubrl
add
sub
in
adc
sub
add
mov
pop
fcmovnu
das
jg
jle
inc
flds
sub
loop
movsb
dec
je
ss
jle
sbb
into
cmpxchg
pop
aaa
lea
imul
pop
mov
mov
popf
jg
mull
pop
sbb
je
sbb
mov
xor
adc
cmpsl
js
jno
adc
jge
cmpsl
enter
ss
out
mov
fisubrl
mov
push
cmp
ja
stos
xchg
mov
jns
xchg
sbb
jnp
movb
pop
and
gs
shrb
pop
xlat
sti
sub
imul
push
aas
inc
ja
imul
jb
mov
iret
dec
out
adcl
dec
aad
outsl
sub
mov
xchg
lock
push
fadds
lahf
in
mov
mov
add
loopne
add
es
cmp
sbb
out
popf
rorl
pop
ja
stos
into
ljmp
and
adc
out
push
or
clc
sarb
jmp
mov
imul
lahf
stos
pop
jp
inc
inc
pop
dec
lahf
loop
ret
mov
orl
js
aad
mov
xor
ljmp
adc
jge
outsl
dec
inc
xlat
outsb
adc
sbb
mov
add
jmp
pop
mov
outsl
popa
mull
dec
cli
pusha
lret
loope
lcall
enter
pop
xor
fsqrt
ss
ljmp
sub
movsb
lcall
fcmovne
jmp
jnp
ficompl
mov
sbb
cmp
jo
and
outsl
cltd
mov
gs
push
fsubrp
in
mov
and
jg
sub
andb
add
pop
fdivrl
mov
jge
out
or
inc
faddl
les
pusha
push
jmp
movsl
vorps
push
mov
push
rorl
and
das
in
in
mov
jne
xchg
pusha
enter
divb
test
pushf
xchg
movsb
addb
insb
inc
das
mov
xor
mov
or
inc
mov
cmovl
xlat
dec
xbegin
hlt
jg
cmpl
jg
shll
cwtl
mov
les
jae
jae
inc
enter
xor
xchg
mov
decl
stc
xor
fiaddl
and
shll
jp
aaa
mov
xor
mov
cwtl
mov
test
call
orl
push
stc
cmpsb
mov
jg
push
fists
decb
sbb
pop
ja
add
enter
cmpsl
adc
push
dec
mov
cmp
outsb
adc
cmp
pop
add
subl
cltd
push
mov
adc
mov
pusha
scas
xorl
cmpl
jp
cmp
dec
add
pop
shrl
flds
cmp
dec
fisttps
repz
fs
ss
mov
inc
popl
push
in
imul
mov
fists
movsb
lods
mov
or
xor
pop
xlat
xchg
fisttpl
mov
cmp
cmp
arpl
push
loope
or
andb
jae
aad
dec
in
sbb
xlat
test
into
mov
dec
cltd
sub
dec
dec
cltd
and
add
icebp
je
xchg
test
rol
inc
dec
andl
sbb
cmp
loope
xchg
imul
das
addr16
sub
cmp
lahf
jbe
cmpsl
test
cli
lock
cmp
rorl
and
sbb
das
addl
loopne
mov
add
xchg
int
sub
mov
movsb
xchg
jo
in
push
xchg
pop
movsb
push
fisubrs
movsl
inc
mov
fwait
cmpsl
sbb
adcb
push
sub
test
out
scas
inc
call
push
adc
fsubr
aaa
ja
xor
sub
dec
fldenv
fprem
dec
ljmp
gs
xlat
sbbl
outsb
xchg
test
dec
sbb
jo
dec
mov
fildl
cmpsl
xchg
xor
hlt
push
push
push
jnp
dec
call
mul
jmp
in
cmp
sahf
daa
cmp
xchg
paddsb
mov
fs
pop
xor
mov
cmc
aam
add
rol
pop
mov
lods
sub
dec
rcl
push
xchg
mov
loop
or
subb
mov
addl
cltd
cmp
out
ret
sahf
in
mov
sub
rcrl
cmpsb
dec
in
dec
dec
popa
sbb
fstps
add
outsb
daa
pusha
test
xchg
in
and
xchg
sbb
scas
orb
pop
and
lret
sub
mov
push
mov
push
pop
adc
mov
mov
stos
inc
push
pusha
fcomps
mov
sub
imul
mov
ret
pop
insb
cmp
jbe
mov
popa
test
lret
dec
shrb
rcll
add
dec
jge
push
mov
mov
lret
mov
sub
sti
mov
pop
in
cmp
xchg
movsb
lods
sub
sbb
fnsave
lock
pop
nop
in
insb
negl
or
pushf
mov
xchg
sbb
jp
fwait
aad
cld
fidivrs
mov
mov
push
jbe
sti
ja
cmpsl
jnp
adc
das
lock
loope
rorl
bound
ss
sub
push
xchg
icebp
mov
call
cmp
out
jp
and
adc
test
cld
sub
loopne
arpl
jno
nop
xor
outsb
jb
and
xchg
mov
ror
ffree
mov
mov
add
mov
mov
xlat
dec
cmpsb
cmp
daa
mov
pop
push
pop
movsb
fwait
pop
icebp
mov
push
lds
mov
out
scas
sub
xchg
pop
scas
test
xchg
addr16
jno
jmp
rol
movsl
or
in
push
fdivrl
in
push
mov
stc
mov
mov
shll
mov
pop
adc
cs
dec
push
sbbb
insl
in
movsl
dec
cmp
mov
sub
mov
mov
xor
push
cmp
popa
xchg
call
orb
repnz
ds
xor
pop
fdivrl
shrl
call
repnz
mov
adc
cwtl
lods
or
mov
into
mov
jmp
das
sub
arpl
test
inc
test
push
add
repnz
iret
jnp
mov
jae
out
leave
mov
pop
imul
add
lods
jo
jmp
repz
inc
pop
loope
jne
stos
sbb
shll
negl
adc
pop
js
rclb
loopne
aad
mov
ljmp
pop
test
xchg
aad
test
jle
jecxz
add
sub
cmp
ss
mov
sub
fisubrl
cmpsl
fucom
push
movsb
pop
in
add
xchg
or
cmp
nop
dec
pop
add
push
lds
jge
push
add
daa
mov
test
test
cltd
push
rcrl
iret
mov
adc
pop
sub
cmp
dec
je
xchg
sti
jae
sahf
xchg
pop
jecxz
shrl
rclb
bound
or
cmpsl
lahf
ds
mov
cmpsl
stos
or
mov
mov
aad
add
cmp
jl
inc
idivb
cmpsl
xchg
mov
xor
push
scas
sbb
and
cmp
mov
or
or
pop
fdiv
dec
inc
jae
out
inc
push
adc
mov
add
push
aam
pop
rorl
repnz
shl
pop
mov
xor
jl
xchg
hlt
repz
hlt
add
inc
test
xchg
add
pop
movsl
scas
add
xchg
xchg
shr
dec
push
inc
in
mov
addl
arpl
xor
insb
fisubrs
push
jmp
popf
push
pop
mov
cmp
jbe
data16
jbe
push
and
mov
mov
into
rorb
sbb
test
ficomps
mov
jg
fsubrp
movsb
ss
xor
fistpl
sbb
ds
in
adc
mov
add
ja
mov
mov
ret
movsb
notl
rcrb
scas
vmovaps
mov
or
leave
mov
fwait
mov
cmp
mov
push
insb
mov
in
xorl
andb
ljmp
xchg
addr16
fwait
sahf
pop
jle
sbb
xchg
cmp
mov
sti
es
cltd
add
push
and
push
adc
adc
push
addl
popa
inc
movsl
aas
sub
push
jae
mov
in
add
stc
push
jecxz
lcall
xchg
mov
cmp
scas
hlt
pop
add
pop
rcl
cmp
fiadds
fidivs
mov
bound
xchg
sub
jmp
or
adc
subb
in
add
in
loope
sahf
lret
into
cmp
shl
pop
ret
mov
and
pop
scas
or
push
into
or
fwait
push
mov
dec
dec
lds
inc
ljmp
test
dec
ljmp
out
int3
dec
inc
mov
mov
test
lret
rcll
jns
lret
fnstenv
sbb
movsb
xchg
std
cmp
xor
xor
lcall
xor
jo
ret
jnp
xlat
push
clc
loope
mov
xchg
jns
aam
push
xchg
xor
imul
mov
dec
mov
xchg
xchg
icebp
aad
inc
outsb
lock
push
xor
xchg
jge
int3
push
cld
xor
mov
mov
or
cmp
push
mov
fmuls
les
sub
mov
lahf
sub
mov
xchg
cmp
or
xlat
in
arpl
push
cmpsl
dec
int
and
sub
xor
sbb
pop
add
and
add
rolb
pop
lret
add
sbb
mov
sub
mov
mov
leave
addr16
cmp
jnp
pop
xlat
jecxz
popf
mov
jne
sbb
push
pop
push
or
push
lods
push
jg
jno
sub
mov
arpl
fldpi
mov
cmp
mov
cmpsb
cmp
dec
andl
xchg
xchg
dec
mov
clc
push
pop
cmpsb
jnp
adc
pop
sahf
sbb
or
add
or
aaa
out
inc
xchg
imul
test
mov
int3
pop
and
stc
or
das
xor
rolb
mov
xchg
test
cmc
sub
les
mov
xchg
out
arpl
stos
sbb
es
adc
divb
leave
divb
or
movsb
loop
mov
pop
mov
scas
jge
add
adc
enter
cs
scas
fimuls
test
pushf
cs
mov
test
sub
push
bound
icebp
leave
addl
addb
adc
js
lds
inc
mov
cmp
cli
popf
mov
inc
int3
cmp
je
negb
cwtl
rcrl
mov
js
test
sbbl
and
xchg
mov
or
and
jo
adc
add
mov
clc
mov
sub
sbb
ret
inc
mov
sbb
push
lcall
fistpll
xchg
sub
mov
insl
xchg
in
add
orl
daa
pop
xlat
jmp
add
lcall
jbe
mov
pop
jne
sbb
jo
hlt
push
dec
popa
pop
scas
rorb
fistl
ja
push
imul
test
xchg
lods
push
add
aaa
fidivrs
sti
and
loopne
enter
inc
mov
push
popa
arpl
lods
pop
adc
outsb
imul
mov
negb
repnz
add
gs
inc
lret
dec
inc
inc
movsl
push
ret
in
fdivrl
jge
jmp
adc
xchg
lret
imul
xchg
inc
xor
sahf
stos
insb
fsubrl
loope
xor
dec
xchg
inc
push
neg
imul
pop
mov
mov
es
loopne
arpl
stos
mov
pop
in
sbb
outsb
jnp
inc
orb
fwait
mov
or
jl
test
xor
dec
lods
pusha
jne
sbb
scas
or
das
xchg
xor
jne
cltd
das
cwtl
or
adc
pop
iret
mov
pop
nop
pop
cmp
sbb
outsl
pop
cmp
cmp
rcl
out
jmp
sub
pop
imul
push
adc
aaa
and
enter
lea
jnp
adc
add
sub
push
xor
mov
sbb
or
or
and
lcall
repz
lods
cli
mulps
cmp
filds
mov
ljmp
movsl
ds
cmpsb
popa
into
xchg
push
inc
sti
xchg
mov
imul
lret
jno
inc
into
das
inc
xor
mov
push
inc
dec
fninit
iret
loop
fs
insl
in
mov
repnz
js
clc
mov
sub
sbb
pushf
sbb
lods
jmp
fcom
in
sub
fs
fs
rol
push
int
jbe
mov
dec
movsb
cwtl
das
test
mov
pop
cmpsb
and
cmpl
sub
sbb
xchg
jno
loope
xor
inc
mov
addl
push
and
shr
popf
rorl
outsl
int3
pop
out
lea
cli
les
das
fisubl
movsl
ret
push
mov
mulb
push
daa
or
cltd
adc
aaa
ljmp
bswap
pop
sbb
test
inc
pushl
fisttps
punpckhbw
idivb
repnz
mov
cmp
sbb
lds
rolb
mov
hlt
add
mov
jne
lahf
sub
out
add
cltd
adc
mov
dec
xchg
addr16
mov
pop
ljmp
and
dec
cmpsl
and
jl
dec
mov
push
add
sbb
mov
lods
aaa
fists
lcall
and
and
add
hlt
test
movsl
or
adc
cmpsl
lret
enter
jmp
lret
cs
stc
xor
push
push
scas
out
sbb
aad
pop
xchg
mov
cmp
enter
fsubrs
cmc
sbb
mov
jo
pop
fnstsw
inc
das
lods
hlt
fsts
movsb
pop
and
mov
ljmp
pop
xchg
inc
insl
cmp
notl
xchg
arpl
mov
pop
lea
sbb
xchg
dec
jmp
nop
xor
cltd
xchg
sbb
ljmp
xchg
push
dec
sbb
nop
xor
sbb
push
jbe
or
pop
test
inc
frstor
fucom
jbe
sti
in
ds
sub
cmpsl
or
mov
shll
mov
pop
dec
and
mov
jmp
fbld
cs
mov
inc
divb
xchg
in
or
mov
scas
jmp
pop
je
cwtl
shrl
sbb
test
data16
loopne
hlt
mov
jb
sbb
notb
fnstsw
push
sbb
xor
cmp
mov
jmp
mov
push
cmp
or
lea
sti
fwait
test
pop
cmpsl
inc
xchg
xor
je
lcall
cmovns
pop
enter
aam
scas
inc
bound
sbb
out
mov
jmp
pop
jecxz
movsb
pop
out
cmpsb
xchg
jns
inc
outsl
jns
mov
jp
cld
popf
popa
movsb
push
lock
addr16
mov
movb
or
imul
aam
es
jl
mov
cmp
jecxz
add
pop
lret
xor
shrl
xchg
inc
cmp
push
ret
mov
pop
mov
cli
sbb
inc
sbb
dec
fs
or
popf
je
push
add
sbb
pop
xor
push
lea
ret
ds
imul
mov
push
mov
cli
push
pop
and
cmp
ja
cmpsb
jae
jg
sbb
mov
mov
loopne
add
lcall
fisubrs
enter
mov
and
lret
push
push
push
bound
mov
popl
add
dec
lcall
inc
jge
nop
sub
shlb
les
out
in
mov
cmc
fstps
fistps
jg
xor
mov
jmp
roll
nop
es
push
jns
sub
cmp
iret
xchg
ss
repnz
and
mov
lahf
xorb
iret
fs
lods
jne
pop
pop
push
pop
outsb
inc
flds
adc
inc
push
bound
insb
repz
mov
cld
mov
dec
mov
sub
std
or
shl
mov
insl
test
out
arpl
jne
jo
xchg
mov
jns
push
mov
out
dec
and
test
rcl
out
lcall
mov
test
mov
mov
clc
xchg
nop
das
push
mov
call
jbe
roll
inc
pusha
lret
jbe
mulb
mov
xchg
imul
ja
cwtl
out
push
aaa
push
insl
rclb
adc
fimuls
outsb
insb
adc
sti
jb
lods
outsl
push
mov
cld
jbe
popf
xchg
mov
inc
fadd
mov
lds
jmp
adc
pand
ds
fdivp
mov
push
mov
ss
cs
je
fisubl
push
cmc
pop
lret
imul
jo
mov
adc
cld
fpatan
jo
xchg
dec
test
adc
and
pop
xchg
movsl
pop
push
outsb
fs
mov
fmull
add
bound
add
adc
icebp
outsb
sbb
enter
xchg
mov
cmp
enter
insl
in
ja
incb
xchg
outsb
inc
nop
shlb
adc
cmp
mov
cld
jns
dec
pusha
ret
sar
xacquire
dec
cld
call
mov
jecxz
scas
pop
xchg
pop
inc
repz
popf
pop
sbb
notb
addl
mov
repz
daa
fs
cs
add
jecxz
pop
arpl
push
sbb
xlat
hlt
js
pop
xor
sbb
pop
and
cmp
imul
repnz
ret
bound
push
and
les
or
out
pop
movsl
add
orb
cmc
fisubrs
pop
ret
cmpsl
rorl
les
call
pop
mov
add
ds
repz
push
mov
in
scas
pusha
mov
test
repz
xchg
sub
mov
fisubrl
es
jne
inc
js
test
xchg
jbe
adc
int
fwait
shlb
cmpsl
xor
xchg
mov
out
mov
pop
xchg
les
xor
adc
insb
inc
inc
in
adc
xor
sub
add
cmp
sub
cmpsb
pop
sbb
sbb
rcrl
fmull
adc
lds
inc
popf
mov
mov
push
test
xor
loopne
int3
xor
mov
jb
test
outsb
and
rorl
cmp
sbb
das
test
cmp
cmp
stos
dec
mov
add
xor
cwtl
push
loope
mov
push
inc
pop
push
movb
and
pop
outsl
js
imul
xor
sub
mov
lcall
pop
ret
cmp
ret
testl
jmp
shll
dec
test
mov
inc
xor
insb
mov
jle
daa
xor
adc
and
cmp
add
xchg
pop
push
mov
mov
pop
aaa
daa
lods
sarb
mov
mov
sub
pop
and
jecxz
or
scas
push
mov
inc
shrl
push
jg
push
inc
call
mov
test
cmp
add
iret
cltd
das
cmp
cmp
lret
push
jo
and
jp
pop
sarb
or
pop
pop
lods
addr16
mov
das
in
icebp
repz
and
sub
mov
cmp
test
dec
shr
adc
lret
or
push
ficompl
push
add
mov
mov
adc
es
or
pop
stos
or
mov
and
mov
jns
loop
jnp
ss
or
jae
sub
and
xlat
xchg
jo
add
js
int
mov
insb
add
inc
dec
rcrb
mov
jno
pop
mov
scas
std
pop
jl
and
bound
adc
pop
dec
out
xor
imul
mov
adc
xor
lret
sub
data16
jb
fadd
dec
enter
cs
cmovns
inc
mov
sbb
clc
xchg
sti
jae
cmc
stos
mov
faddl
dec
push
bound
xchg
mov
fiaddl
inc
cwtl
addb
shlb
xchg
arpl
mov
and
jnp
or
andb
and
inc
add
jmp
pop
mov
mov
xlat
repnz
in
call
out
push
rcrb
pop
lret
fmulp
stos
push
jb
xchg
xor
in
dec
pop
ret
mov
or
scas
mov
mov
hlt
mov
mov
lret
int
push
gs
cmp
xchg
in
addr16
sub
int
int
xchg
jae
mov
push
dec
jnp
push
hlt
fwait
inc
jmp
jmp
lods
js
push
jle
jmp
seto
out
inc
jnp
mov
jmp
arpl
add
mov
adc
shll
ficoml
sbbb
xchg
das
outsb
xor
fisubrl
adc
lea
pop
dec
sti
js
or
test
pop
push
pop
jecxz
aaa
idiv
or
or
push
call
sbbb
sub
mov
scas
inc
mov
lods
out
in
xor
pop
pop
ljmp
and
sbb
or
daa
jns
jb
imul
outsl
push
or
mov
ror
repnz
jl
add
ljmp
pop
loop
mov
call
out
push
xor
mov
push
shrb
inc
test
movsl
add
and
aas
mov
clc
pop
outsb
mov
and
push
fwait
pop
rolb
adc
cltd
pop
insl
ljmp
jl
xchg
add
pop
inc
hlt
ss
adc
jl
rcrb
cmpsl
sti
scas
mov
pop
std
cmp
xchg
daa
fcoms
and
and
inc
popf
jmp
lock
lahf
outsb
adc
scas
add
dec
and
mov
sbb
jbe
cltd
imull
rolb
push
adc
out
or
jno
aad
sbb
push
sub
dec
leave
movl
mov
mov
icebp
sub
les
add
sarb
push
mov
es
dec
jmp
fdivrl
outsl
lret
mov
inc
jnp
sbb
cmp
xchg
cmp
fdivp
cs
adc
push
rcrl
lods
sbb
add
or
dec
push
cmpsl
cmp
out
fidivrs
mov
ss
cmp
repz
sub
leave
shll
jb
push
addr16
sub
inc
inc
iret
stos
jg
or
cmp
fcmovbe
lock
test
gs
cmp
stc
in
or
cmp
mov
inc
xchg
aas
push
ret
cmp
or
shr
cs
xor
push
sbb
jp
rcrb
sub
lods
shl
jnp
popa
cmp
gs
or
aaa
mov
rep
push
outsb
out
fdiv
sub
sub
pop
pusha
jbe
and
cmc
cmp
push
bound
mov
push
xor
daa
xor
repnz
jl
out
test
std
jne
repz
jp
jne
int
pusha
mov
lea
adc
mov
jno
xchg
mov
enter
cmp
hlt
pop
pop
aad
icebp
mov
add
ret
inc
fldcw
mov
lret
inc
repz
es
das
out
movsb
repz
jl
jo
loope
or
push
gs
mov
or
xchg
test
inc
ljmp
in
push
pop
dec
repz
idivb
push
xchg
pop
inc
or
mov
sub
shl
popf
outsl
fadd
sub
xor
mov
leave
in
mov
add
idivl
and
call
pop
push
and
or
icebp
pop
push
pop
sbb
push
rorb
xchg
add
bound
and
inc
sub
mov
jg
mov
mov
sbb
incl
movsl
push
sbb
or
test
loope
push
int
pusha
sbbl
lods
push
sahf
cld
xchg
stc
pop
rcr
mov
and
xchg
arpl
push
adc
mov
roll
sbb
data16
jno
stc
cmp
fldcw
sti
add
std
mov
popa
and
pop
fs
aam
es
mov
test
aas
adc
popa
rcrb
jne
data16
cltd
xchg
es
add
inc
inc
pop
sbb
insl
xor
mov
ret
insb
push
pushl
mov
pop
xlat
push
stos
adc
ja
adc
cmp
lods
cs
decb
push
push
pusha
lock
ret
data16
negl
roll
jge
insb
outsb
loope
repz
xor
adc
hlt
js
jle
or
cmp
fisubrl
out
fisubrl
mov
cmp
cmc
adc
xchg
mov
stos
popf
sahf
inc
dec
sub
cmpsl
and
sbb
jno
cmp
mov
outsb
or
add
push
lea
push
xchg
adc
add
stc
jp
push
inc
cmp
jae
into
xchg
sbb
leave
or
add
hlt
mov
das
and
in
cmpsb
jge
out
xchg
lea
insb
lea
lea
mov
cmpb
insb
adc
add
aam
imul
jl
and
jbe
push
inc
int3
mov
lret
pop
dec
mulb
mov
mov
icebp
mov
rol
sahf
inc
cmp
push
mov
push
sub
sbb
mov
lds
mov
lds
test
push
and
xor
sbb
stos
cmp
iret
push
repz
xchg
dec
decl
clc
ret
bound
fidivrl
xlat
push
add
dec
adc
push
xchg
mov
mov
inc
add
int3
jmp
insb
add
jae
mov
and
jne
movb
add
rclb
or
push
add
pusha
jecxz
lods
outsb
pop
imul
lea
in
cmp
jne
leave
mov
insl
stc
xchg
aam
bnd
cld
sbb
jne
or
cmp
and
jmp
fcmovnb
sub
or
push
cmc
add
push
mov
cwtl
test
in
and
adc
xor
add
fnstsw
jp
xchg
adcl
cld
enter
or
and
push
clc
dec
aaa
cmp
inc
imul
stos
lahf
fiadds
into
sahf
in
fwait
inc
mov
lods
in
mov
js
sbb
inc
pop
pusha
lods
stos
mov
adc
in
test
aas
inc
mov
jg
and
push
lock
cmp
adc
cmpsl
dec
imul
rclb
push
and
adcb
jmp
rclb
dec
inc
add
arpl
mov
mov
adc
dec
stos
xchg
sbb
push
insl
or
pop
inc
stos
mov
ret
push
pop
mov
out
sbb
in
pop
and
rcll
aad
ja
pushl
fmull
loope
mov
popf
ret
mov
fimuls
in
pop
sbb
jmp
dec
fnstcw
fdivrs
jb
scas
enter
push
xchg
jle
ja
fsubrl
xchg
sti
in
rcrb
dec
ljmp
ds
jecxz
jo
ljmp
cwtl
pop
dec
insb
ficoms
push
fwait
mov
es
inc
gs
scas
pop
scas
sbb
or
inc
inc
pop
mov
jno
aas
xorb
pop
sub
mov
rcrb
jae
std
jnp
testb
xchg
and
ss
fidivrs
xchg
cmpsb
jne
neg
mov
xor
add
lods
mov
es
or
daa
sbbl
xchg
pop
cmp
dec
cmp
or
mov
jno
lret
push
add
mov
add
push
sbb
mov
shll
xchg
mov
popa
pop
into
test
adc
adc
rolb
sbb
in
cmp
jae
and
subl
push
test
xor
cmpl
jp
xor
icebp
sub
loopne
repnz
out
pop
cmp
inc
test
jbe
mov
popa
or
stos
les
adc
pushf
sub
cmp
jl
pop
stc
dec
push
stos
mov
imull
sarl
xor
pop
leave
mov
mov
xchg
mov
lahf
fnstsw
ret
cmp
or
xor
out
sub
in
mov
jmp
lret
dec
mov
lock
sarb
sahf
push
js
je
fdivrl
stos
sub
orb
lea
add
sbb
rol
ficoms
add
jb
test
pushf
pusha
or
adc
sbb
mov
xchg
mov
lahf
mov
pop
inc
mov
jnp
adc
insl
mov
inc
jne
mov
mov
pop
lret
pop
gs
and
daa
push
shll
xchg
xchg
loope
repz
pop
lret
and
popf
adc
push
push
pop
xor
outsb
mov
cmpsl
or
mov
test
js
int3
push
pop
loopne
add
mov
in
rorl
scas
hlt
shll
into
mov
fimull
mov
aam
lahf
pop
adc
in
into
xor
fcompp
clc
pop
int3
or
fldl
add
loopne
mov
xchg
int
mov
mov
xor
mov
mov
inc
movsl
loop
btr
or
xor
ss
loopne
dec
ss
or
jne
rolb
aas
cmp
insl
lock
gs
hlt
or
dec
dec
pusha
sti
adc
std
xchg
sbb
jne
sbb
jle
scas
out
sub
xchg
xchg
push
inc
add
sar
inc
xchg
jnp
sarb
imul
mov
pop
sub
cmc
movsl
jl
mov
pusha
repnz
mov
mov
inc
sahf
cltd
cmp
push
cmp
inc
shlb
jns
dec
imulb
sbb
push
mov
cmc
mov
js
hlt
jne
jl
int3
insb
and
lods
push
movsl
popf
xchg
loop
mov
push
cmp
push
clc
gs
loopne
xchg
mov
movb
fcoms
fildll
lea
mov
cmpxchg
test
or
mov
cmpsl
add
cwtl
out
jmp
movsb
pop
xor
test
out
shll
sub
mov
test
daa
icebp
or
sub
lret
sub
mov
ja
int
sbb
aas
lods
xor
jl
dec
sahf
stos
insl
sub
scas
xchg
pushf
test
call
mov
add
aam
xchg
mov
push
push
mov
pop
inc
scas
ret
jecxz
fistpll
das
jnp
sub
fwait
push
adc
jns
cltd
cs
sbb
sub
ret
mov
inc
pop
push
push
test
push
loope
fwait
leave
lods
fdivr
pop
stos
sub
xchg
ret
pop
sbb
sub
ljmp
adc
dec
and
inc
jae
cltd
dec
pop
mov
lcall
aad
xor
mov
inc
or
jmp
fidivrs
inc
sbb
lock
mov
test
es
test
loope
sub
pop
or
and
xchg
xor
stc
aad
fnstsw
and
daa
or
ret
out
imul
ja
jnp
pop
ret
mov
lods
pop
push
int3
mov
sbbb
mov
sbb
lret
push
dec
mov
repz
jnp
push
out
cmp
cmpsb
aas
xchg
xchg
loope
jle
lea
inc
shlb
jo
je
or
popa
test
adc
or
in
scas
out
inc
fwait
xor
cwtl
mov
push
mov
loopne
int
mov
adc
je
mov
clc
jg
scas
and
jecxz
jnp
in
imul
ja
pop
sub
cmp
inc
cmpl
lret
mov
pop
movsb
lretw
mov
adc
jnp
mov
dec
inc
int
mov
loope
gs
ret
inc
int3
jns
cmp
lock
or
adc
sub
mov
fidivl
mov
ret
arpl
mov
les
cmp
cmp
sbb
cltd
pushf
mov
xchg
sbb
add
fwait
ljmp
lods
jl
lret
sbb
mov
mov
inc
xor
bound
sub
je
fimull
dec
insl
pop
pandn
fsubs
adc
jae
enter
or
mov
aas
sub
movsb
xchg
xchg
xchg
aaa
loopne
jl
inc
mov
std
pop
and
mov
in
cmpsl
mov
repnz
loope
icebp
or
dec
pop
out
push
mov
dec
fsub
repz
jge
jge
mul
mov
out
iret
cmp
mov
testb
lahf
and
and
movsl
daa
enter
std
sub
xchg
xchg
dec
dec
aaa
cmpsl
mov
push
or
xchg
cmp
fdivrl
stc
or
fsubr
push
fnstsw
fwait
sti
sub
cmp
movl
std
pop
loop
ret
lret
dec
negl
mov
dec
sbb
out
pop
adc
jecxz
pop
andb
jb
daa
sbb
int3
dec
js
bound
xchg
mov
add
mov
in
jl
cmpsl
mov
add
pop
mov
repnz
in
jb
xchg
adc
or
push
jecxz
loope
jp
fimull
sub
fisttpll
mov
in
loop
fsubrl
inc
imulb
arpl
mov
add
or
popf
idivl
cmp
int
cwtl
cmp
sbb
mov
sub
pop
xor
add
dec
shll
push
jmp
out
popf
bound
scas
mov
sbb
push
jno
int
mov
int3
nop
adc
daa
mov
int3
rclb
iret
jge
mov
inc
inc
push
pop
call
ja
out
aas
pop
cmp
dec
cmpsl
inc
scas
mov
xchg
jbe
xchg
gs
push
cmpsl
dec
imul
pop
shrb
xchg
sub
insl
loopne
cmp
cmp
test
out
in
and
mov
mov
negb
jbe
aaa
jnp
je
inc
sbb
aaa
mov
aam
mov
lcall
faddl
icebp
mov
adc
adc
popa
push
push
jecxz
sbb
clc
testl
aam
scas
sub
push
cmp
loope
popa
out
dec
push
dec
scas
pop
int
mov
push
bound
cli
jne
cmc
pop
ffreep
and
sub
mov
push
and
addb
cmpsb
xchg
sub
mov
int3
push
movsl
dec
sbb
sbb
ficompl
sub
dec
pop
gs
sbb
fwait
stos
adc
lcall
cs
dec
in
inc
into
xlat
push
les
push
cmp
cmp
sub
mov
inc
sbb
lcall
aaa
inc
test
inc
sahf
lock
into
inc
js
lods
cld
fstp
pop
iret
loopne
adc
fisubl
fwait
dec
ret
push
out
adc
mov
add
xor
dec
pop
stos
cmp
idiv
cli
outsl
xchg
push
in
lea
pusha
or
and
outsl
enter
jp
cmp
and
das
and
jae
lock
inc
pop
ret
pop
mov
pop
mov
pushf
stos
rcrb
ret
stos
sub
sub
cmp
xlat
lcall
pop
test
out
outsl
mov
mov
pop
cmpb
lea
xchg
mov
mov
iret
daa
call
jns
push
xchg
jns
ss
cs
mov
sub
iret
int
cmp
not
aaa
int3
xchg
bound
jns
or
imul
xchg
gs
test
pop
pop
fldcw
popa
xchg
xlat
or
lds
ds
jb
mov
int3
mov
mov
loop
sub
pop
push
adc
push
lret
dec
cmc
xchg
outsl
lret
daa
scas
dec
xchg
sub
sahf
xchg
div
test
pop
out
gs
je
jnp
cmp
inc
sub
xor
faddl
mov
repnz
jo
lcall
je
or
shrl
mov
in
xchg
push
test
xor
pop
fisubrs
aam
lahf
push
out
outsb
test
mov
mov
xchg
mov
fisttps
int
mov
mov
xor
mov
or
fldenv
xchg
dec
or
add
aad
out
outsl
mov
add
mov
iret
push
pop
sbb
mov
mov
xchg
jge
pop
aas
into
loop
add
jl
push
dec
push
sbb
add
inc
repz
cmpsl
adc
xor
stos
and
jge
fcmovbe
outsl
mov
jmp
outsb
leave
insl
js
or
pop
mov
cmpsb
mov
sbb
sbb
out
fbld
mov
nop
adc
iret
arpl
scas
jbe
cmpsb
mov
jp
cmp
inc
lds
cli
inc
xchg
xchg
movsl
and
scas
pop
mov
cmpb
outsb
mov
lods
aad
mov
sbb
aas
cmp
rclb
mov
sub
call
push
xchg
imul
pop
adc
cmp
jne
outsb
addr16
es
daa
arpl
daa
cmp
cltd
xor
iret
stos
ljmp
repz
xchg
imul
bound
pop
xlat
cltd
or
cmp
and
push
adc
hlt
in
xor
es
cltd
repz
cmp
push
enter
addl
or
or
stos
adc
dec
and
scas
fdivrl
sub
aaa
imul
int
mov
push
cmp
inc
stos
xchg
jno
pop
dec
arpl
imulb
sub
or
out
adc
lods
addr16
lods
std
jmp
xor
loope
cltd
or
pop
stos
lds
or
stos
scas
mov
in
or
cmc
popf
or
lods
add
bound
pop
push
and
and
xchg
rcrl
cs
jno
mov
lods
int
mov
adc
aad
xchg
jg
in
jno
shr
or
push
je
ss
cmpsl
fmull
insb
lock
push
mov
dec
test
das
sub
cltd
aas
xchg
jle
imul
dec
jne
push
sbb
pop
fists
push
mov
out
lea
daa
mov
cld
pop
mov
or
lods
mov
int
loop
xor
ja
in
cmpsl
gs
fbstp
cld
jge
mov
mov
push
cmp
mov
rcrb
inc
scas
lock
imul
in
iret
mov
std
push
sahf
bound
in
jnp
push
gs
sbb
les
cmpsl
mov
out
adc
in
adc
out
inc
sbb
pop
sub
cltd
cli
pop
fs
sti
mov
sbb
push
xor
in
dec
mov
stos
outsl
lea
mov
les
in
and
mov
pop
ja
xchg
jae
push
daa
pop
push
and
ja
bound
pop
jne
jb
pop
call
popf
fs
jmp
mov
test
clc
jbe
cmpsl
nop
jns
mov
incl
xlat
mov
andb
fistl
enter
push
jae
mov
cli
push
inc
pop
jno
xor
or
or
mov
inc
mov
push
add
negb
pop
xchg
out
cld
adc
popl
cli
pop
nop
je
dec
xchg
xchg
push
mul
sti
les
push
mov
fstl
aaa
fistps
inc
fists
jecxz
mov
mov
ja
addr16
or
adc
adc
roll
pop
cmpsl
repz
int3
fld
add
fdivrs
or
xor
f2xm1
int
or
add
idivb
cmp
jge
int3
out
mov
rorb
in
ss
outsb
popa
sub
push
int3
cmc
jmp
adc
push
sub
call
xor
xchg
jge
lods
cwtl
test
lds
mov
data16
dec
ss
jge
jae
or
jmp
mov
pop
dec
and
add
mov
lea
pop
mov
inc
in
sahf
xor
out
dec
sbb
fmull
cmc
sub
call
icebp
repz
cs
rcrl
dec
mov
cmp
jge
inc
cmp
nop
sbb
xchg
repz
into
mov
repz
xchg
or
je
test
add
cli
inc
mov
rcrb
aaa
repz
fcompl
jg
pop
ret
ret
clc
push
xchg
lea
mov
jae
add
push
inc
sbb
cmc
xor
xorb
ret
insl
sbb
mov
aaa
fwait
ss
mov
jmp
pop
push
stc
mov
mov
fadd
add
jo
sbb
cli
inc
mov
or
adc
sbb
mov
dec
xchg
out
test
xor
mov
and
pusha
sub
lods
aad
push
cmp
pop
inc
and
popf
cmp
mov
rcr
les
mov
sub
push
clc
fstpt
rol
add
inc
add
inc
ret
sub
and
add
mov
repz
mov
jno
pusha
pop
leave
push
xlat
mov
dec
fimull
int
mov
out
cmpsb
je
push
bound
mov
push
dec
adc
xchg
mov
rdmsr
jne
sbb
add
sbb
mov
call
dec
dec
aaa
mov
loope
lea
xor
in
fmulp
jg
fsubrs
or
pop
dec
xor
adc
out
or
adc
into
cli
call
or
lods
mov
cmp
inc
clc
std
mov
out
movsb
imul
mov
lahf
add
rorl
orl
ja
bnd
outsb
clc
push
xor
mov
nop
ficompl
aad
insl
lret
jmp
cld
in
sub
push
add
imul
xchg
mov
mov
mov
or
add
lret
jne
call
inc
movsl
popf
dec
dec
adc
mov
popf
mov
push
lea
pop
fwait
dec
jp
cli
dec
xor
mov
or
sahf
pop
stos
loop
loopne
pop
push
mov
outsl
adc
or
scas
mov
and
outsb
jo
cmp
sbb
out
dec
push
gs
adc
dec
push
pushf
lret
xor
sub
xor
fcoml
lret
fwait
inc
mov
lret
mov
ret
je
ret
std
push
pop
sahf
test
add
std
bound
mov
addr16
ret
mov
fsubl
dec
add
lret
call
scas
fstl
aaa
iret
pop
das
jmp
jmp
cltd
cmpsl
pop
js
push
xchg
rol
sub
movsl
nop
into
fnsave
fmul
push
mov
xchg
adc
jl
or
pop
rorb
imul
aam
and
jge
push
mov
mov
xchg
adc
push
clc
xchg
imul
ss
sbb
rcrb
shl
or
xor
lods
inc
scas
ljmp
xchg
add
shll
jmp
imul
stc
sub
adc
lock
xchg
outsb
inc
push
and
and
outsb
sti
jo
stc
orl
jo
fadd
out
xor
pop
dec
xor
std
int3
inc
divl
xor
shlb
ffreep
cmpsb
outsb
rol
loop
pcmpgtw
inc
imul
pop
repz
outsb
mov
cli
mov
fcmovbe
aam
jmp
icebp
cmp
rcrl
fsubrs
cwtl
pop
or
inc
mov
or
addr16
push
fiadds
loopne
cltd
inc
mov
add
inc
mov
inc
pop
mov
in
scas
mov
cmp
or
test
jo
insl
jae
lret
aad
cmp
inc
sbb
insb
jb
adc
xchg
andb
sbb
orl
or
lcall
add
out
fcmovbe
js
cmp
sub
jnp
mov
icebp
cmp
out
scas
jb
mov
mov
sbb
icebp
inc
mov
xorl
loope
sbb
adc
lea
inc
pop
sbb
dec
lea
popf
in
jge
je
sbb
shll
xchg
push
or
dec
test
test
push
loope
hlt
xor
xor
out
mov
mov
pop
cltd
negb
cmpsl
cmp
jp,pt
movsl
fisubl
arpl
ds
mov
pop
mov
loope
add
dec
jb
or
divb
mov
lea
pusha
xor
dec
jmp
scas
push
and
dec
adc
add
out
adc
bound
cli
add
xlat
sti
jge
pop
lods
jnp
fnstsw
push
imul
addb
mov
out
mov
mov
cmpsb
and
pop
mov
lcall
dec
xor
popf
std
jp
or
push
mov
inc
dec
fwait
js
lds
add
test
or
sbb
inc
arpl
in
aas
jnp
cld
mov
jnp
roll
inc
jae
dec
repz
pop
imull
fldenv
popf
lahf
adc
and
scas
inc
push
sub
xlat
test
pop
dec
arpl
add
out
dec
in
dec
adc
push
jnp
sbb
jae
ret
or
in
lds
in
mov
loope
int
out
xchg
gs
xor
adc
add
js
mov
push
cltd
push
fstp
and
movsb
pop
cmpsb
std
jns
dec
out
xor
movsb
lcall
call
adc
arpl
test
lock
loop
cld
xchg
fisubl
mov
dec
sub
sub
lcall
out
ds
les
sahf
jle
in
cmp
mov
sbb
hlt
lahf
sub
sub
std
test
nop
inc
push
in
lea
inc
fs
mov
popf
cmp
ja
fisttpl
cld
jmp
mov
xchg
push
sub
dec
je
inc
sbb
pop
or
mov
imulb
mov
mov
fldl
xchg
mov
out
lds
fistps
das
and
out
push
add
sub
mov
lcall
ja
xchg
imul
push
xor
jge
pop
sbb
ss
in
daa
xchg
data16
mov
pop
je
push
inc
mov
inc
test
addl
cltd
or
outsb
pop
insl
roll
aas
lret
mov
adc
push
jne
nop
sbb
mov
bound
push
jbe
pushf
mov
data16
or
scas
test
pop
test
jbe
movsl
xor
cli
addr16
das
push
adc
lret
sub
loopne
push
mov
push
das
movsb
neg
xor
adc
loope
notb
mov
pop
lock
mov
mov
jae
cmp
aad
fcoms
in
les
push
bound
cltd
push
push
cli
and
movsb
orl
push
lods
jnp
call
in
test
xchg
nop
cmp
gs
xchg
ror
pushf
push
inc
aad
lods
cmpb
and
jle
and
test
and
adc
movsl
repnz
sbb
inc
aaa
outsb
add
pop
mov
ret
dec
cld
orb
jns
mov
dec
and
mov
xlat
push
ret
pop
stos
filds
dec
inc
jo
xor
stos
pop
ficoml
mov
nop
lock
lock
cld
xchg
shll
pop
sbb
sbb
add
dec
inc
testb
jnp
fisttpll
xor
mov
roll
add
loop
or
pop
adc
jns
inc
cmp
adc
mov
push
rol
insl
push
mov
cmp
wrmsr
outsb
out
mov
lock
lret
jne
fisubrl
push
daa
nop
xchg
xor
xor
inc
das
sub
into
pop
push
and
pop
lock
sahf
cli
inc
pop
aad
jb
mov
scas
cmpsl
stc
adc
enter
test
inc
sbb
jno
mov
dec
pop
loop
imul
aad
cmp
xor
push
movsl
cmp
cmp
ffreep
scas
and
mov
push
dec
scas
sub
push
mov
loopne
sub
fistpl
or
lds
lods
stos
scas
jecxz
sub
push
lahf
mov
sbb
cmp
call
leave
sub
fcompl
arpl
xor
inc
pusha
shl
addr16
ds
dec
jg
xchg
out
add
lret
insl
inc
dec
flds
leave
lea
sahf
mov
jecxz
lcall
pop
in
push
out
out
fisubrs
pushl
adc
jmp
push
pop
push
push
mov
cmpsb
and
dec
test
rorl
or
lret
xchg
fdivl
test
in
inc
xchg
dec
xchg
out
mov
inc
jmp
mov
inc
xor
or
sub
jnp
mov
add
call
icebp
mov
lret
pmuludq
out
xor
dec
stos
mov
xor
cmpsb
fidivrs
cmp
pop
pop
pop
inc
les
mov
dec
jecxz
pop
mov
enter
mov
dec
pop
cmp
cli
movsl
js
and
sbb
jmp
stos
jl
cmpb
dec
inc
inc
add
gs
mov
icebp
ss
push
fsubl
mov
dec
cmp
add
test
pushf
test
and
xor
cmp
xchg
loop
lds
adc
cmp
loope
popa
sbb
out
mov
pop
test
pop
test
arpl
mov
roll
icebp
xchg
out
sub
leave
and
insl
in
fadds
fidivl
or
xor
mov
cmpsl
mov
mov
mov
sbb
or
cmp
stos
outsb
inc
mov
mov
loopne
push
jae
cltd
push
fcmovu
lcall
and
push
inc
divb
idivl
sbb
mov
roll
push
lret
into
stos
jo
mov
cs
push
pusha
lock
inc
insb
mov
shlb
sbb
hlt
sbb
jno
dec
ror
adc
popa
jo
push
cmp
mov
nop
or
pop
testb
mov
das
sbb
jge
mov
adc
das
ss
data16
lods
adc
std
pop
es
cmp
xchg
arpl
or
arpl
shrb
jno
and
and
lea
jge
movsb
jp
adc
or
inc
cs
leave
gs
nop
cmp
icebp
fisubs
jns
fdivrs
sahf
push
xor
sub
fldenv
stos
pop
jmp
rcr
out
js
les
popa
add
inc
and
mov
dec
sbb
fcomps
lods
sub
and
shll
xor
push
movsl
movsb
out
xor
subb
movsl
fmuls
sbb
in
jle
mov
xchg
fsubl
data16
fisubrl
xor
mov
lock
inc
mov
adcb
mov
cmp
decl
jl
mov
jmp
sbb
mov
icebp
nop
xor
out
in
or
pop
cld
dec
jns
es
stc
mov
loopne
dec
mov
or
xor
and
xor
js
ret
or
push
cltd
out
addr16
dec
arpl
cmc
xchg
jmp
mov
ds
cmp
sub
ss
cmpsl
js
imul
out
mov
test
je
or
mov
scas
mov
cmpsl
fcomps
sub
xchg
cmp
adc
aad
test
and
adc
daa
jns
add
dec
test
stos
inc
pop
jmp
cld
xchg
lahf
push
lcall
repz
push
inc
sbb
jle
mov
in
fs
dec
inc
adc
pusha
pop
sarb
cmp
push
frstor
hlt
jno
xchg
sbb
mov
loop
fistpl
pop
adc
inc
xchg
enter
or
fldenv
repnz
push
into
gs
pop
push
jno
in
lret
movsb
hlt
inc
rcr
fs
andb
push
adc
in
ljmp
insl
inc
dec
ret
int
ljmp
mov
lds
mov
mov
pop
pop
jmp
pop
fwait
push
imul
repnz
push
inc
cmp
mov
adcb
mov
fsts
sub
push
fsubs
fnstsw
cltd
inc
adc
pop
decl
pop
in
mov
xchg
sub
sub
cli
mov
mov
lea
inc
mov
icebp
sub
dec
push
out
jne
ret
sbb
pusha
xor
mov
imul
mov
sbb
inc
jne
pushf
or
pop
sar
xchg
sbb
cmp
aas
dec
pusha
add
jge
rclb
add
inc
subl
leave
xchg
stc
push
xchg
adc
fcmove
inc
dec
xchg
subb
mov
into
xor
cmp
cs
mov
mov
icebp
cli
and
xchg
iret
xchg
inc
insb
xor
push
jbe
jnp
scas
pop
je
in
sub
es
dec
popa
or
and
gs
scas
cld
push
jbe
xchg
and
sbb
push
jns
ret
mov
push
pop
outsb
add
icebp
mov
sub
cmc
sbb
mov
cmp
in
and
imul
jno
mov
and
out
jg
fildll
lret
xchg
xor
jp
xchg
push
or
leave
in
addr16
stos
int3
push
xor
fdiv
test
pop
jno
divl
cmp
rorl
cmp
repnz
loop
cmp
adc
dec
jp
jecxz
inc
lret
pop
push
rcrb
cltd
cmp
pop
mov
mov
jb
insl
sub
out
jecxz
int3
mov
and
fs
cmp
movsb
addr16
sub
je
sub
fwait
enter
or
push
stos
inc
in
lahf
mov
push
adc
push
add
inc
fs
in
dec
nop
mov
jg
cmp
push
repnz
inc
icebp
lods
fs
cltd
out
dec
call
punpcklbw
add
lods
xor
das
mov
lock
lcall
push
jl,pn
cmpsb
pushf
loopne
aas
test
icebp
pop
hlt
and
lcall
test
imul
mov
sub
ret
mov
mov
inc
addr16
out
pop
loop
xchg
hlt
inc
mov
mov
fsub
add
outsl
push
mov
adc
mov
shlb
icebp
data16
insl
xor
sbb
pop
push
cli
jg
jns
sub
icebp
push
xchg
inc
mov
xor
stc
and
mov
sbb
fwait
pop
test
xchg
adc
push
add
xchg
dec
sarl
xchg
mov
add
mov
xor
jnp
mov
inc
mov
scas
ret
dec
mov
in
sub
fucomi
jns
dec
push
add
inc
sbb
pop
jo
or
xchg
or
aad
cli
push
push
sbb
mov
cmpsl
addr16
push
mov
stos
cmp
add
in
pop
mov
mov
push
scas
xchg
cmpsl
jne
scas
jo
hlt
mov
add
repz
adc
add
movsb
cmc
call
cld
sub
adc
sti
incb
mov
jg
enter
clc
xchg
ret
pop
into
or
mov
mov
mov
sub
out
xchg
imul
lds
cmp
jb
inc
jbe
decl
cmp
outsl
and
or
dec
dec
pushf
jno
out
movsb
sub
test
adc
stos
cmpsb
out
adc
or
int
fldl
sbb
mov
mov
cs
jl
insl
cmpsl
xlat
mov
dec
jp
mov
test
sbb
popl
ret
xor
or
mov
les
jb
inc
pop
iret
adc
cmpsl
fdivr
push
xchg
loop
enter
fsubrl
cli
mov
shr
mov
neg
movsb
add
and
inc
mov
daa
dec
xlat
ficoml
lret
adcl
ds
ds
pop
add
or
fstps
sbb
out
mov
mov
lods
xchg
push
inc
mov
jnp
dec
hlt
or
call
xchg
es
mov
js
dec
out
sub
in
cmp
xchg
push
sbb
or
inc
int
and
xor
inc
mov
xorb
mov
push
jge
mulb
insb
adc
icebp
lret
cmp
pop
mov
jno
or
aas
xor
test
mov
xchg
int3
rolb
pop
add
dec
and
sbb
or
jmp
ds
and
xchg
xor
lcall
mov
xor
sbb
pop
or
insl
movsl
js
mov
movsb
sti
fdivrl
cli
cmpsl
int
jecxz
mov
aad
lret
and
fidivrs
lods
repnz
add
adc
fimull
ss
fcomps
xchg
add
pop
in
loop
adc
mov
or
pop
fisubrs
int
mov
sub
and
popa
or
add
test
sbbb
aam
xchg
adc
mov
rcr
iret
test
out
adcb
pusha
push
lods
sub
inc
or
push
jecxz
mov
out
outsl
test
hlt
cmp
inc
test
xchg
add
sahf
add
inc
test
mov
shl
pop
cmp
cmpsb
jns
adc
dec
aas
fcomip
jmp
mov
sahf
ftst
sbb
fs
and
fwait
add
dec
les
jnp
add
or
imul
loopne
popf
push
mov
cmpsl
mov
sbb
mov
inc
jecxz
jg
repnz
sbb
sub
jo
xor
inc
sub
mov
pop
arpl
xchg
leave
add
and
sarl
test
daa
inc
push
fsts
imul
xlat
dec
dec
cmpsb
into
dec
sbb
stos
adc
mov
xchg
push
and
outsl
xor
sub
jb
aaa
xor
or
jle
add
mov
xchg
in
cld
lret
or
iret
pop
dec
loope
xchg
in
out
inc
loope
mov
outsl
push
push
sub
dec
leave
push
test
mov
sbb
mov
icebp
lcall
push
sbb
sub
in
fnstenv
repz
inc
mov
or
bound
add
test
stos
std
or
nop
dec
test
and
jbe
and
cmc
cs
add
les
fs
jb
sbb
cmpsb
mov
dec
arpl
or
fstpl
xchg
jle
cmp
jge
fisubl
call
icebp
adc
mov
cmpl
adc
adc
cli
incb
lahf
xor
xchg
jbe
mov
sub
and
or
inc
imul
clc
es
sub
cmp
lods
ds
leave
hlt
inc
add
inc
gs
jns
jg
jne
movsb
mov
xchg
jae
sub
mov
xorl
jg
fidivrl
dec
insl
add
pop
gs
fs
sub
f2xm1
hlt
and
xchg
mov
sub
adc
lods
xchg
jbe
call
jo
pop
int3
jb
shlb
daa
cmp
or
mov
jne
push
shrl
push
lods
sub
shr
cmp
jbe
lcall
scas
fdivrl
xor
lds
aaa
sbb
pop
js
pop
xchg
cmp
add
call
pop
xlat
aad
mov
inc
into
push
in
mov
les
or
push
sbb
jle
inc
mov
pusha
cld
mov
mov
jbe
rcrl
dec
xchg
mov
lock
bound
push
lea
aas
sbb
add
je
imul
aaa
add
pop
in
cmp
out
fdivl
repnz
ss
testb
outsb
scas
loope
in
jne
xor
test
jp
lret
dec
popf
fistpll
pshufw
jno
jecxz
adc
and
mov
mov
mov
xchg
add
xchg
inc
loop
aad
pushf
xor
andb
lea
cmp
flds
in
inc
cmp
mov
addr16
rcrb
mov
cmp
subl
out
xchg
add
add
cli
mov
jae
pop
pushf
neg
in
pop
movsl
and
out
sbb
xchg
jb
mov
pop
pop
enter
sahf
and
int
lods
pusha
add
and
gs
mov
mov
aam
xchg
test
mov
push
fisubrl
xchg
test
popa
out
xor
movl
or
test
add
mov
jmp
popa
ja
rcrl
outsl
js
xchg
mov
jbe,pt
rol
push
mov
cmp
dec
imul
add
pop
mov
sub
jo
dec
pop
mov
add
scas
xchg
shlb
pop
xor
add
fwait
pop
inc
loope
jne
ror
outsl
lods
cld
jo
or
outsb
push
dec
out
insl
pop
add
push
mov
mov
xchg
push
stc
jns
or
scas
call
pop
jmp
xlat
mov
mov
and
stc
push
stc
jns
xchg
lea
push
inc
jge
jle
dec
bound
push
push
mov
fstpl
jmp
and
shlb
or
pop
jnp
sub
jl
xchg
pop
jge
ret
in
loop
inc
cld
mov
daa
mov
sub
dec
and
pop
ss
jge
aas
jb
or
mov
pop
mov
and
inc
or
out
pop
cld
jo
pop
loop
mov
in
fs
loop
mov
jno
mov
mov
hlt
fcomip
js
and
scas
repnz
or
pop
fsubr
enter
push
lea
dec
cmp
adc
adc
lods
clc
int3
push
scas
add
cwtl
cmp
addr16
dec
sti
xchg
push
sub
daa
out
cmpb
ss
imul
cli
out
test
jl
mov
mov
adc
out
loopne
jae
mov
or
xor
xchg
push
push
add
repz
dec
movsl
jb
pushf
lret
or
fs
jecxz
jp
sti
arpl
inc
fdivl
scas
xchg
fistpll
sbb
push
xchg
lds
inc
inc
cli
xor
cmpsl
push
mov
xchg
sub
insb
cltd
jae
pop
stc
cwtl
push
push
mov
push
fstp
loope
fisttpll
fwait
loop
std
pushf
mov
in
mov
and
push
outsb
jo
imull
aam
sub
xor
xchg
xchg
out
cld
push
adc
lds
sbb
imul
push
xor
push
adc
jp
aad
xorl
push
mov
cmc
sub
addl
shll
sahf
mov
or
test
and
push
loop
adc
lods
das
aad
sub
stos
cmp
lcall
aas
dec
add
dec
clc
sbb
pop
and
push
fmul
mov
out
cmpsl
xlat
pop
pop
loopne
mov
daa
es
leave
jno
inc
push
jb
jmp
mov
push
mov
jb
std
mov
jns
lcall
dec
push
pop
sub
movsl
pop
movsb
mov
movsl
jp
das
mov
add
push
ljmp
jge
sub
das
mov
lea
adc
sbb
push
fnstenv
fwait
outsb
cltd
shrl
sub
cmp
aas
and
and
xor
add
lock
pop
outsb
gs
jle
mov
mov
incb
insb
rcrb
mov
mov
out
lret
test
ja
push
cmpsl
and
fstpl
data16
fildll
aaa
out
cmp
sahf
pop
mov
inc
in
push
flds
rclb
adc
adc
shll
cmp
xor
packsswb
or
int3
xchg
or
fdivrl
inc
scas
sarb
mul
hlt
ja
or
repnz
lret
sbbb
test
test
in
in
mov
xchg
test
lret
xchg
pop
and
or
and
clc
test
sbb
mov
jl
adc
shlb
jmp
ret
cmp
fwait
pop
xchg
scas
fs
icebp
pop
xchg
data16
sbb
repz
xchg
adc
outsb
pushf
clc
sbb
jbe
sti
inc
mov
out
mov
jae
seta
cmp
lret
imulb
sti
add
jae
pusha
insl
mov
pop
daa
mov
push
mov
cld
popa
mov
fucomi
fstl
aam
lds
sahf
cld
add
and
std
out
mov
jl
je
mov
mov
out
lds
mov
cmc
stos
iret
pop
sub
xor
add
arpl
push
sub
or
xchg
sub
test
mov
out
sub
leave
adc
ret
xchg
subl
and
mov
cli
and
popf
cld
fldl
bound
js
movsl
cmp
aad
lods
pop
hlt
push
pop
and
inc
popf
rorl
lock
into
push
and
ret
mov
jmp
adc
sbb
ret
aam
mov
jge
sbb
scas
mov
xor
dec
rorb
cmp
idivb
mov
pop
jno
push
jnp
cs
pop
mov
or
enter
sbb
mov
iret
out
fstps
sub
ss
jmp
mov
scas
test
push
fisttpl
pop
inc
jno
enter
jns
in
mov
fcmovne
cwtl
sahf
sbb
das
push
pop
or
jbe,pt
mov
adc
mov
jnp
lods
insl
inc
shl
push
add
outsl
std
push
sub
popa
lea
ja
loopne
std
jns
outsl
push
dec
mov
into
cmpsb
pop
pop
xor
xchg
test
pusha
ds
out
std
adc
mov
lcall
stos
mov
mov
mov
call
test
scas
dec
mov
mov
int
pushf
sub
cmpsl
xchg
enter
insl
repz
mov
inc
pop
sbb
add
cmp
dec
push
inc
das
je
outsb
pop
or
jne
jg
data16
or
jmp
clc
pop
hlt
in
push
sbb
add
insl
sbb
in
pop
repnz
mov
fisubs
jecxz
jl
xlat
push
test
xor
aaa
clc
inc
push
jae
es
test
cltd
stos
fidivl
dec
jnp
and
fsubrl
outsb
ss
fwait
xchg
scas
sub
lahf
in
das
or
insb
jecxz
mov
sahf
loope
add
int3
cmpl
ret
mull
mov
mov
ja
push
push
sub
dec
scas
cmp
adc
and
and
repz
test
lcall
push
and
inc
mov
scas
das
scas
add
subl
or
dec
cs
add
xlat
fwait
adc
inc
push
loop
jle
add
fiadds
stos
lods
mov
fbld
call
cld
mov
adc
cmp
loope
lret
mov
pop
adc
sti
aas
hlt
xchg
mov
sub
cli
sub
mov
xchg
stos
add
hlt
ss
or
rcrl
and
popf
pop
xchg
call
dec
imul
mov
fidivl
add
test
scas
cmpsb
iret
xchg
dec
ss
cmp
add
std
loopne
lods
mov
pop
loopne
cltd
mov
adc
jbe
adc
adc
hlt
jbe
sbb
jbe
jnp
cmc
outsb
cmp
faddl
xor
ds
int3
addl
pop
adc
test
lea
and
sbb
push
push
ljmp
jns
fmull
dec
push
mov
xchg
lahf
int3
shll
cmp
xchg
ret
loopne
lahf
ss
clc
jnp
pop
or
fwait
lock
adc
xchg
out
push
aam
and
std
stos
sub
insl
sub
sbb
inc
lret
ss
aaa
cmp
sbb
out
rclb
in
jns
or
pop
ss
shr
push
and
nop
cmc
push
xchg
sbb
push
outsb
xor
xor
mov
jecxz
add
pop
add
jns
repnz
push
mov
out
dec
repnz
mov
push
mov
pop
stc
out
stos
shr
add
clc
sbb
aam
call
sbb
loopne
arpl
sbb
test
push
in
lock
sbb
sub
mov
clc
cld
cmp
xor
dec
arpl
sub
fmull
mov
mov
movsb
lods
into
ret
and
cmc
popa
test
inc
or
xchg
dec
or
pop
mov
adc
stos
icebp
xor
dec
aas
sarl
les
cmp
sti
sub
pop
xchg
xchg
or
inc
or
fwait
jg
jne
in
jne
cmp
adc
addr16
pushf
push
imul
pop
adc
cmp
icebp
mov
fisttps
insb
cmp
and
inc
notb
hlt
aaa
sub
cmc
mov
and
mov
cmp
and
jecxz
sub
scas
xchg
push
dec
sahf
ret
pop
push
adc
inc
cmp
add
add
movlps
arpl
push
mov
clc
lods
cmp
cmp
mov
mov
fbstp
int3
or
lds
and
sub
push
into
bound
push
mov
in
push
leave
test
fildll
int3
or
nop
outsb
mov
add
lcall
ds
mov
inc
das
cmpsl
call
mov
jmp
push
sbb
pop
js
inc
test
sarb
call
dec
inc
inc
pop
scas
xchg
mov
cmp
mov
sub
inc
testl
push
mov
fs
ret
ja
mov
sarl
lea
cmpsl
into
rcrb
arpl
cmc
ret
xor
sarb
cmc
and
cwtl
clc
xchg
inc
outsb
lds
pushf
mov
rcrl
inc
dec
mov
jg
stos
inc
stc
mov
adc
out
mov
jle
outsb
cmp
into
test
out
hlt
mov
ljmp
jno
adc
outsb
push
jbe
cmp
mov
data16
aam
fimull
jne
xchg
mov
icebp
push
lea
ljmp
cmc
stos
sub
sahf
adc
xchg
out
ja
fwait
pop
in
fld
sar
push
sub
add
sub
xchg
xor
pop
clc
ss
xchg
fistps
fists
cltd
jae
xor
cmp
adc
pushf
rolb
inc
pop
in
shlb
cmc
mov
stc
lret
xchg
mov
cwtl
lods
ret
inc
push
adc
mov
pop
mov
ljmp
fld1
sarb
pop
jp
mov
rclb
push
inc
mov
adc
and
lods
jl
loopne
xchg
inc
sbb
loopne
adc
ljmp
popf
push
repnz
cmc
cmp
test
push
mov
ficoml
sbb
pop
xchg
inc
lock
jle
adc
xor
pop
inc
and
lods
cmp
clc
insl
xchg
push
mov
enter
adcb
and
push
push
popf
cld
hlt
mov
andl
pop
pop
pop
sarl
mov
mov
mov
adcl
insb
inc
xor
adc
out
fists
pop
dec
adc
shr
jle
movsb
emms
mov
aam
push
and
aad
sub
mov
push
outsb
sahf
loop
fists
inc
iret
xor
jne
daa
inc
outsb
dec
or
adc
pop
dec
mov
xchg
sub
push
repz
sbbb
mov
cld
dec
mov
fmul
cld
add
jne
xchg
and
sub
divb
sub
jne
add
ret
out
push
fwait
or
xor
les
into
xchg
aas
sbb
xchg
filds
or
mov
out
mov
pop
imul
or
out
aam
adc
xor
ja
arpl
lcall
pop
cmp
pop
and
cmp
mov
push
jno
lahf
add
lret
cli
idivb
push
lods
lock
pop
dec
xchg
repz
pop
fimull
sbb
add
imul
cmc
aaa
sub
mov
ret
out
mov
lret
test
fsubrl
sub
adc
arpl
out
enter
popa
and
sub
ret
pop
pop
add
jp
sbb
in
arpl
pusha
push
inc
cmp
js
div
sub
pop
xchg
and
xor
arpl
or
jns
daa
pop
test
mov
lret
popa
hlt
fwait
and
bound
aas
add
iret
std
add
inc
aaa
lahf
inc
push
popa
mull
push
lock
jno
test
aad
rol
xchg
je
fsts
mov
gs
out
std
jbe
push
and
rclb
scas
push
je
sub
mov
stos
mov
call
jg
dec
repz
xor
pop
ret
cmpsl
stc
xchg
test
sbb
dec
cmp
sbb
mov
xor
sub
cmp
fisubl
cmp
sbb
mov
subb
jmp
add
mov
mov
dec
sbb
pop
bound
dec
sbb
jl
out
ljmp
mov
jns
imul
jbe
xor
jge
bnd
das
xlat
lds
cwtl
std
push
lcall
rol
imul
and
pop
test
shrl
test
scas
mov
andl
dec
shlb
mov
loope
mov
mov
sbb
pushf
xchg
dec
jmp
sub
cmp
dec
test
cwtl
stos
in
xchg
in
mov
jmp
push
and
and
out
push
inc
jbe
jg
dec
xchg
jnp
add
daa
ret
dec
outsb
jne
insb
add
mov
dec
in
jecxz
push
out
aam
push
subb
dec
push
aas
jmp
lock
arpl
cmc
imul
mov
pop
test
or
xchg
addr16
xor
mov
or
subl
lret
je
xchg
mov
add
mov
sbb
insl
cmpl
xchg
mov
mov
shll
pop
rclb
je
push
push
icebp
add
xchg
ficoms
mov
pushf
test
push
test
in
movsb
out
inc
push
daa
mov
clc
stc
xchg
out
fldcw
scas
push
push
pop
movsl
les
loope
jnp
add
cmp
les
repz
scas
rolb
adc
jmp
cmp
push
mov
xchg
nop
mov
fistpll
push
je
and
mov
jnp
mov
out
cmp
inc
pushl
add
fdivrs
xchg
cmp
lcall
int
or
mov
sahf
aam
jno
cld
mov
sbb
push
pop
pop
stc
xchg
dec
fadds
fnsave
cwtl
and
sub
call
jp
lds
pop
inc
push
movsb
mov
dec
xchg
imul
xchg
fsubp
or
jg
lcall
andl
or
adc
push
cmpsl
iret
add
xor
dec
add
test
mov
cmp
dec
loope
jp
add
xchg
pop
add
aam
movsb
add
fmuls
inc
inc
insl
ret
mov
ds
jo
inc
dec
mov
mov
push
push
cmpsl
sbb
mov
outsb
scas
mov
ljmp
leave
sbb
inc
cmp
jae
arpl
fidivl
outsl
cmp
xlat
mov
jns
repnz
in
jmp
dec
imul
push
mov
add
int3
cmp
cld
add
es
das
movsl
adcl
mov
std
adc
fdiv
dec
fadds
pop
mov
sub
cmp
mov
xor
and
lods
dec
or
push
adc
dec
adcl
jmp
int
jne
adc
xor
mov
push
sahf
in
jnp
push
or
inc
mov
mov
test
les
roll
mov
test
scas
lods
sbb
sub
cmp
push
cmp
imul
jbe
ficompl
cmp
mov
sbb
stc
cmpsl
inc
cmp
les
in
push
mov
dec
loop
pop
xlat
je
jb
jmp
stos
test
lock
jle
xchg
mov
iret
test
xor
xor
ret
sbb
add
cli
stos
jp
mov
ror
sahf
mov
sahf
dec
sbbl
push
out
ds
ret
push
and
adc
push
sub
mov
fwait
cltd
lods
adc
lcall
inc
loopne
push
lahf
add
cmpsb
jae
or
adc
cmpsl
mov
add
mov
out
mov
mov
addr16
pushf
jl
xchg
push
push
jb
xorb
bound
in
inc
outsl
cmpsl
push
ret
fsub
mov
xchg
mov
jbe
push
sar
push
fdivp
in
outsb
adc
jns
cmp
aam
fcmovb
test
mov
pop
mov
jno
fdivr
divl
shrb
cmpl
sti
roll
rorb
jo
call
mov
fists
das
ds
pop
mov
adc
cmpsl
cmpsl
stos
js
xchg
in
bound
iret
cmp
add
andl
mov
loope
popa
ja
imul
inc
lea
dec
stos
push
stos
mov
xor
xchg
push
or
push
lret
dec
out
sbb
mov
pop
push
int3
sarl
fldenv
xchg
mov
lods
add
loope
gs
fs
jge
pop
jbe
jle
leave
push
xor
push
js
jge
pop
jg
cmp
les
out
shlb
imul
cli
mov
xchg
jp
data16
jl
adc
stos
or
inc
inc
sbb
jno
lret
adc
fdivrl
xor
xor
pop
xlat
adc
jae
jae
pop
std
mov
jmp
repz
call
lods
dec
fbld
ficompl
mov
mov
xchg
lods
push
dec
out
add
inc
div
or
adc
mov
mov
adc
aad
jl
dec
scas
pop
xchg
jp
lret
fucomip
jb
and
dec
scas
rcrb
lret
imul
dec
dec
pop
jle
inc
push
xchg
add
ret
adc
push
mov
aas
cmpl
clc
ss
jp
loope
or
popf
stos
xchg
sarb
nop
call
cmc
add
jle
popl
push
imul
cmp
lret
shlb
enter
mov
mov
push
iret
lock
add
mov
jb
enter
out
and
and
xchg
push
xor
jmp
mov
push
sub
cwtl
mov
adc
cld
add
orl
sub
push
icebp
loopne
scas
or
lret
movsl
xchg
inc
ja
aam
xchg
cmpsb
mov
cmp
fldt
ja
xchg
mov
mov
mov
push
repz
xchg
cmp
and
mov
imul
xchg
adc
xchg
inc
dec
mov
xchg
outsb
hlt
xorl
sub
leave
in
outsb
into
push
imul
fcomi
add
cwtl
add
xor
xor
outsb
jge
cwtl
fcom
add
push
mov
xor
jbe
and
fucomi
jle
daa
hlt
add
pushf
dec
cmp
mov
fisubs
cwtl
call
mov
push
inc
outsb
divb
loopne
arpl
or
std
or
cmp
cmpsl
mov
dec
in
jnp
inc
adc
xchg
xchg
dec
mov
xor
xchg
mov
call
xchg
fdivrs
mov
test
into
push
in
sub
and
aas
xchg
ja
cmpsb
out
ss
inc
lods
pop
push
enter
sub
jae
xor
dec
xchg
ret
fidivrl
mov
lcall
lock
dec
in
or
xor
inc
mov
dec
fs
push
jbe
aam
sub
jmp
push
mov
pusha
jne
mov
inc
pusha
dec
cld
test
adcb
add
dec
insl
sti
lds
pop
mov
es
bound
add
mov
addl
mov
out
inc
test
divl
mov
xchg
inc
xchg
cmpb
and
adc
sub
cmp
rcrl
mov
cmp
cltd
add
or
test
cmc
adc
sbb
inc
cltd
gs
push
jae
ret
mov
pusha
out
adc
xchg
dec
addr16
sahf
sbb
cwtl
mov
jp
and
idivb
adc
sbb
dec
test
lret
cwtl
pop
push
addr16
jecxz
fs
ret
stos
mov
push
and
adc
daa
xchg
sub
loope
mov
cmp
cmp
das
sub
pop
icebp
and
cmp
rcrb
repz
test
pop
push
pop
call
sub
dec
xchg
mov
mov
pop
ja
xchg
or
adc
unpcklps
or
push
add
pop
out
rcrl
and
cwtl
mov
insb
mov
cli
aas
pop
pop
mov
cmpb
clc
jmp
push
pop
test
in
mov
js
fsubr
arpl
mov
adc
xchg
mov
arpl
aaa
mov
pop
jp
xorb
jmp
and
js
mov
inc
xor
ret
xchg
test
ja
in
arpl
mov
in
push
sub
mov
or
into
pop
aam
out
ret
addr16
or
cld
xchg
inc
xor
cmpsb
dec
sub
fcomi
ror
pushf
add
and
fdivs
iret
mov
stos
inc
scas
cmp
mov
sti
push
jecxz
clc
dec
test
mov
mov
xchg
xor
mov
mov
xchg
jns
jmp
imul
test
cmp
mov
add
or
popf
cmp
fldcw
push
lods
ret
xor
daa
add
pop
scas
sbb
repz
xchg
xor
iret
js
aas
mov
lods
lahf
mov
lods
lcall
jecxz
data16
pop
or
cltd
inc
dec
and
pop
clc
adc
stos
test
out
mov
pushf
push
and
xchg
xbegin
sub
imul
mov
sarb
push
mov
test
adc
fwait
adc
out
in
dec
out
xor
ror
in
push
sub
jp
fimull
xor
sbb
adc
dec
mov
lretw
fwait
pop
bound
stos
xchg
in
test
shll
out
lahf
mov
lahf
mov
and
iret
inc
pop
imul
or
das
dec
pop
jnp
mov
scas
xchg
test
mov
xchg
movsl
xchg
sti
push
jp
inc
nop
loopne
leave
aas
das
cmp
fbstp
inc
push
ja
inc
aam
es
int3
icebp
mov
or
imul
sub
les
jae
fs
clc
push
jns
mov
inc
inc
sbb
and
in
fistpll
nop
xor
scas
dec
or
scas
mov
mov
mov
ljmp
add
arpl
add
mov
pop
pop
cmp
push
mov
mov
pop
lock
mov
mov
or
scas
sbb
repnz
aad
cmp
js
ret
xchg
lahf
daa
xor
or
dec
jecxz
pop
inc
xorl
and
xchg
mov
sub
push
mov
iret
cmp
push
sub
or
lock
pop
jp
inc
pop
pop
xor
test
inc
adc
push
pop
pop
aaa
jns
icebp
leave
sub
dec
cmpsl
lods
scas
mov
xor
and
scas
and
pop
in
dec
test
out
push
orb
xchg
jns
push
faddl
push
adc
mov
mov
insb
inc
sbb
pop
insb
push
push
scas
xor
push
mov
mov
es
pop
sub
inc
out
and
inc
cltd
pop
in
roll
cld
outsl
cmp
and
or
in
xchg
and
int3
mov
cli
mov
cltd
pop
xor
dec
and
adc
mov
popa
icebp
cld
test
mov
flds
int
stc
cmp
sbb
mov
sub
jmp
jmp
mov
mov
test
xchg
fnstsw
ljmp
test
mov
adc
jmp
jmp
cmp
xchg
fwait
pushf
dec
int
hlt
push
lahf
cmp
xor
jle
sub
pop
outsb
aas
lods
test
mov
inc
mov
test
jecxz
mov
mov
dec
inc
xchg
and
inc
mov
aas
mov
or
outsl
inc
into
mov
rcrl
mov
sub
mov
push
or
data16
xor
sbb
int3
fcomi
or
or
jmp
in
and
mov
lret
inc
in
pop
mov
cmp
dec
hlt
leave
mov
bound
jl
add
sub
cmpsb
aam
push
or
sbb
in
into
cmpsl
js
xchg
mov
stos
test
cli
loope
frstor
lock
fistpll
or
or
jb
jbe
inc
addr16
test
insl
loop
xor
std
fwait
xchg
sub
sub
gs
or
sar
repz
test
mov
add
dec
push
push
daa
fdivrl
jb
in
mov
push
mov
jg
inc
jno
shll
inc
lret
xchg
jecxz
adc
dec
mulb
aam
aam
sbb
iret
adc
jl
xchg
mov
adc
addr16
in
push
pop
addl
ret
shlb
test
xor
sahf
mov
mov
jg
cs
pushf
dec
repz
mov
mov
jnp
dec
xchg
js
icebp
fldcw
push
test
sarl
outsb
hlt
cmp
sbb
repz
cmp
adc
mov
mov
push
inc
cmp
inc
pop
xchg
mov
test
jmp
xlat
pop
xchg
lret
lods
movsb
and
or
xchg
in
adc
ds
orl
mov
push
pop
shll
jl
loope
dec
jle
aam
adc
cld
mov
or
jno
pop
inc
jns
pop
adcb
cmp
adc
mov
jmp
outsb
inc
fsubrl
lret
pusha
pop
pop
es
push
dec
negl
pusha
or
sub
push
pop
jecxz
adc
leave
sub
add
pop
cmp
push
xor
ret
mov
pop
adc
pop
jns
dec
out
scas
icebp
scas
cmpsl
icebp
stos
shrl
inc
push
pop
sahf
enter
sbb
pop
dec
or
jae
sub
pop
popf
adc
pop
in
idivb
outsb
jle
mov
push
aam
enter
sbb
adc
sub
inc
lret
and
fucomi
or
sbb
decl
and
js
lcall
test
arpl
fcom
cli
push
mov
or
clc
imul
add
mov
xor
or
sbb
loopne
lock
inc
inc
adc
inc
jno
lahf
or
jp
popf
xlat
sbb
xchg
das
not
in
daa
out
mov
ds
sub
dec
insl
inc
push
ja
mov
push
adc
pop
adc
negb
and
xchg
jg
xor
lcall
shrb
repnz
xor
mov
pop
push
adc
inc
or
sbb
lret
mov
dec
or
icebp
outsb
adc
imul
js
mov
push
xchg
add
mov
sub
mov
inc
push
or
imul
loop
sbb
inc
in
inc
mov
push
push
out
mov
sbb
call
mov
fs
sbb
lea
aaa
push
dec
nop
in
rcrb
push
add
sbb
sub
pop
out
leave
cmpsl
add
or
gs
dec
inc
push
lds
fsubs
sarb
add
add
lea
sbb
push
nop
fimull
lret
out
mul
into
cmp
adc
jg
jo
stos
sub
mov
ret
aam
jecxz
pop
push
ret
adc
in
jle
mov
addr16
mov
cmp
scas
int
out
out
adc
xor
lods
xor
pushf
adc
jb
push
adc
dec
movsl
add
cmc
aad
inc
popa
aad
mov
cmpsl
adc
and
leave
sbb
sbb
in
jge
hlt
sbb
pop
dec
out
es
pop
out
sbb
aas
jae
jmp
out
subb
push
sub
sbb
or
sahf
pop
or
ss
arpl
fldl
loop
adc
xchg
lret
pop
adc
inc
das
std
mov
xchg
sbb
rcl
pop
and
mov
mov
sahf
ud2
sub
lock
ss
jae
adc
sub
jmp
and
gs
lea
adc
arpl
nop
negb
jae
movsl
pop
int3
inc
int
daa
pop
das
sub
xor
movl
into
add
and
dec
sarl
lock
aam
lea
mov
dec
mov
lea
sarb
inc
xchg
push
gs
arpl
insb
cmp
inc
or
imul
xor
hlt
xorb
cmc
xlat
cmp
mov
jae
aaa
dec
insb
lods
into
push
cmp
push
cwtl
add
pusha
dec
jae
jmp
jne
dec
or
repnz
fcmovb
mov
cld
rclb
jo
es
js
fimull
adc
repz
js
add
das
ja
outsl
pop
les
cmp
std
inc
sbb
mov
dec
sub
push
fldt
fadds
nop
or
xlat
adc
divb
insl
pop
movsl
sahf
adc
ss
mov
les
pop
push
mov
insb
push
push
lea
icebp
lret
das
les
pop
lods
pop
pop
cmp
add
repz
or
push
push
lret
bound
int
sarb
mov
push
pop
mov
xchg
lods
orl
or
jne
sbb
pop
fcmovb
dec
xchg
jno
sub
jo
out
push
arpl
xchg
hlt
rolb
sub
add
cli
jae
pop
adc
pop
or
movsb
push
aaa
pop
das
sbb
mov
pop
dec
sahf
xchg
mov
addr16
add
xchg
fists
lock
pop
outsb
fdivl
gs
iret
clc
xchg
cmp
dec
repz
mov
xor
jb
andb
jle
dec
and
lock
xor
rcl
inc
mov
lea
mov
or
xchg
lods
push
xor
add
dec
insb
cmp
xchg
into
ja
in
fists
int
adc
mov
mov
xchg
subl
add
les
clc
inc
pop
ljmp
aaa
lods
cld
icebp
or
paddd
imul
pop
jge
cmpsl
fildl
pop
lock
stos
call
jo
push
cwtl
cmp
fldt
imul
jnp
xchg
or
ja
xchg
outsb
movsl
cmp
push
sub
mov
incb
sub
pop
mov
jecxz
sub
pop
in
aad
or
jb
imul
add
xor
popa
sub
sub
ror
sub
lods
mov
and
scas
mov
fdivrl
mov
stc
push
jle
int
adc
stos
cltd
imul
pop
adc
adc
mov
idivl
cmpsl
pusha
clc
xchg
pop
sti
sti
cli
aaa
xchg
push
mov
rcr
test
mov
xchg
test
cmp
int3
pop
or
mov
pop
dec
add
xor
mov
daa
xor
leave
sbb
xchg
or
pushf
cmp
dec
pop
mov
lret
lahf
clc
add
cmc
lahf
and
mov
in
inc
mov
scas
xlat
pop
xor
dec
int3
arpl
jae
add
in
fldenv
insl
push
lahf
mov
dec
push
push
adc
sub
dec
mov
push
call
out
jae
incb
out
sbb
xor
js
mov
mov
leave
lock
loop
fs
aas
cmp
shrl
mov
adc
xchg
add
jp
push
int3
jmp
repz
xchg
push
dec
pop
jl
outsb
adc
mov
xchg
loopne
ljmp
movsb
out
cld
jp
xor
rclb
in
ds
es
mov
inc
add
mov
adc
add
repnz
push
scas
sbb
inc
mov
mov
adc
lods
pop
push
das
call
inc
sub
enter
mov
in
or
jo
xchg
insl
xor
aaa
loop
push
cmp
stos
out
cmp
out
pop
or
xchg
insb
mov
add
push
cmpsl
mov
arpl
cmp
inc
lods
mov
or
and
cmpsb
lret
sub
pop
mov
insl
or
outsl
push
or
out
ds
push
mov
lods
jne
test
mov
or
aaa
mov
sub
pop
and
stos
test
fldenv
sbb
jno
pop
cmp
movsb
orl
add
sti
shrl
mov
inc
arpl
adc
leave
stos
jmp
fnsave
lds
sub
cmpb
xor
mov
xorl
mov
mov
fstpt
inc
xor
decl
lods
aad
sub
ljmp
xor
je
cmpsb
ljmp
hlt
sbb
rorl
ja
insl
adc
mov
sub
cld
loop
decb
dec
outsb
leave
cmp
ja
mov
icebp
stos
push
add
mov
in
lods
out
sub
jp
inc
ffree
mov
mov
shrb
jae
aam
mov
mov
int
int
xor
pop
push
cli
xor
test
cmp
scas
out
gs
int3
push
std
push
push
data16
dec
inc
popf
cltd
push
stc
hlt
dec
frstor
jno
mov
inc
push
xchg
scas
jp
xchg
add
add
mov
push
js
pop
call
stos
jb
jmp
add
sub
call
lea
out
and
data16
idivb
outsl
in
mov
xor
mov
push
lret
mov
adc
push
mov
test
jle
jbe
push
fisttpll
insb
xchg
aas
add
and
std
sub
push
outsl
test
out
xchg
xchg
inc
inc
sahf
lock
sbb
mov
mov
cmovno
inc
add
push
lea
push
xor
out
lea
popa
mov
leave
jg
mov
xlat
inc
jp
fldl
pop
jge
nop
jl
addb
jl
push
or
sub
sub
insl
xor
test
jecxz
fwait
stc
or
and
mov
ss
insl
das
xchg
cwtl
js
add
mov
lss
push
jo
repnz
push
lods
mov
push
sti
int
repz
sub
and
mov
and
xchg
xchg
movsl
push
jp
ljmp
rep
jge
call
sbb
mov
pop
fists
int3
jbe
lret
mov
mov
inc
mov
fs
fwait
out
inc
pop
cli
mov
les
mov
dec
adc
and
sub
shll
gs
push
sarl
movsl
xchg
test
loope
mov
jns
inc
or
daa
ja
orl
adcl
jmp
out
arpl
je
add
jo,pn
test
in
xor
pop
pusha
stc
fnstsw
loopne
call
loopne
sub
xor
je
mov
shrb
and
imul
stos
das
rep
mov
ljmp
icebp
movsb
pop
jnp
loopne
sti
add
out
jo
mov
lahf
insl
test
pop
sbb
adc
or
lea
in
sbb
test
ret
int3
pop
pop
jb
or
mov
mov
push
push
dec
jb
xchg
cld
outsb
jns
pop
sub
jmp
sbb
sbb
mov
xchg
aas
jb
jo
loope
icebp
int
push
sarb
cs
sbbb
rorl
xchg
cmp
bound
sbb
shrb
imul
mov
cltd
xor
outsl
jnp
cmp
in
mov
into
adc
cli
imulb
bound
add
loopne
or
or
popa
jmp
repnz
xchg
cmc
pop
scas
dec
mov
and
shll
repnz
xchg
push
pop
or
insl
fcomi
adc
es
cwtl
hlt
mov
inc
hlt
adc
push
push
jae
out
int
push
add
jbe
lcall
out
int
sbbb
adc
pop
ljmp
int
push
xor
adc
cmpsb
enter
out
lods
or
mov
popf
stos
cmp
cs
lods
stos
mov
iret
cmp
mov
xlat
mov
inc
in
sbb
add
pop
cmp
inc
push
jno
lcall
lcall
and
in
jns
pop
test
jge
mov
leave
jle
push
popf
fwait
pushaw
xchg
xor
mov
sti
mov
pusha
int3
ret
dec
dec
es
mov
stos
xor
push
add
movsb
andb
cmp
cmp
int
je
roll
sti
xor
pop
push
sar
out
sbb
jecxz
xchg
cmp
push
out
mov
das
mov
or
pop
aaa
pop
test
movsl
cmpsb
cltd
hlt
xchg
pop
nop
cwtl
dec
xchg
mov
mov
or
stos
push
push
add
std
sarl
mov
sub
scas
daa
ret
rorb
cmp
shlb
and
nop
adc
pop
bound
test
mov
mov
add
in
cmpsl
mov
mov
jecxz
adc
jne
push
mov
pop
mov
stos
cld
pop
or
mov
lret
pop
push
cmc
jp
inc
mov
push
call
cmpsb
addr16
in
mov
stos
adc
jns,pt
mov
call
inc
add
test
shr
std
push
dec
mov
outsb
sbb
sbb
xchg
add
lret
notl
push
fmull
xor
xor
movsb
iret
xlat
push
cmp
idivl
call
imul
add
sbb
adc
dec
imul
dec
ds
mov
jns
dec
sbbl
repnz
add
in
insl
push
pop
stc
and
push
pop
xchg
shrl
mov
add
push
and
gs
stc
sub
sub
mov
scas
inc
outsb
cld
mov
imul
ret
and
dec
push
std
push
test
mov
pop
and
ficoms
ret
pop
add
jno
es
nop
xchg
mov
std
in
xchg
sti
in
xchg
into
repz
and
pop
shr
mov
push
xchg
cs
lea
icebp
jnp
or
sarl
jo
add
or
cli
jg
ret
push
data16
and
dec
xor
xchg
cmc
push
pop
hlt
clc
adc
gs
inc
mov
insl
gs
inc
lea
mov
mov
in
shrb
sbb
and
ljmp
mov
jp
cwtl
daa
repz
mov
icebp
sbb
jl
popa
mov
ficomps
add
pop
mov
adc
das
stos
mov
or
sbb
inc
stos
inc
sahf
test
adc
lds
mov
dec
nop
ficoml
jbe
jbe
sub
jb
jne
loope
hlt
push
test
cmp
xor
leave
cmp
data16
xchg
sub
pop
fisubl
popf
int3
dec
jnp
pop
cmpsb
out
rol
xchg
in
int3
fs
mov
int
dec
adc
adc
test
clc
lret
jb
inc
outsl
or
adc
inc
xchg
cmpl
or
mov
nop
cmp
rclb
adc
cld
imul
aaa
xchg
repz
xchg
stos
dec
sbb
test
cli
jae
xorl
and
jmp
push
out
dec
sub
imul
xchg
sbb
xorb
loopne
inc
push
sub
xchg
xchg
push
mov
sbb
add
jmp
call
fisubrl
pop
jne
add
jae
inc
adc
xchg
mov
mov
ds
push
pusha
loopne
addr16
push
aaa
cltd
mov
fisubrs
mov
out
aas
les
fnstsw
aam
rclb
das
jp
call
fdivrl
sub
push
adc
pop
inc
mov
adc
mov
pop
movsb
nop
idivl
adc
jge
cld
sbb
push
lcall
sub
pop
je
lock
and
insb
shll
mov
mov
add
mov
shll
add
sub
shll
push
imulb
lret
or
and
mov
dec
dec
shl
sbb
fildl
scas
loope
test
jbe
lcall
mov
out
xchg
mov
adc
mov
out
and
cmp
dec
push
mov
and
sbbl
movsb
lds
xor
loope
xchg
adc
mov
out
pop
xchg
or
mov
mov
insb
add
jg
addr16
sub
popa
push
mov
js
mov
xchg
pop
aaa
pop
in
push
pop
sbb
and
pop
or
call
push
mov
mov
shld
int3
xor
jo
rorb
shr
add
inc
jne
inc
jmp
loope
xor
or
aas
mov
rol
push
or
dec
stos
mov
insl
sub
and
jge
je
or
jnp,pt
pop
mov
or
addb
repnz
cmp
push
adc
mov
shrb
pop
adc
jg
jne
inc
sti
int
mov
jns
mov
nop
push
cmpsl
jne
xchg
dec
in
rcrl
pop
mov
shll
into
pop
sbb
xor
stos
sbb
js
cmp
lds
mov
mov
std
pop
cmp
in
outsl
lods
dec
jnp
and
test
or
jne
adc
add
fadd
loop
pushf
lahf
jmp
pop
popa
cmp
and
dec
outsl
jmp
in
mov
and
jnp
inc
add
and
adc
pop
fcomp
test
dec
les
test
icebp
lahf
mov
lret
in
out
jnp
scas
call
pop
pop
shll
std
pop
in
inc
pop
sbb
sub
daa
fisubs
sub
mov
mov
mov
mov
dec
test
nop
repnz
into
push
lods
pop
inc
negl
hlt
push
jbe
out
push
cmp
test
mov
outsb
or
gs
dec
or
dec
js
aad
hlt
movsb
sbb
dec
ljmp
jp
in
xchg
dec
dec
lcall
aad
jo
cmp
dec
in
fldt
sbb
inc
in
xlat
push
jae
inc
mov
test
xchg
aam
rcrb
mov
cmp
pushf
cmpsb
icebp
mov
adc
lahf
jecxz
iret
fdiv
jb
ja
dec
in
loope
ret
sbb
scas
dec
jecxz
dec
dec
int
add
leave
jp
imulb
icebp
inc
sbb
push
cmpsl
clc
movsl
cmp
call
xor
mov
lock
adc
es
call
ficoml
in
sbb
filds
jecxz
ret
stc
notl
js
cmp
push
xchg
or
jne
mov
stc
inc
push
int
mov
xchg
repnz
inc
mov
push
xchg
xor
and
fdivs
cmp
push
mov
mov
jmp
xchg
popl
insl
aaa
fsubr
adc
and
movsl
loope
sub
or
sbb
lret
lods
repz
lea
jp
std
xchg
xor
cmp
in
pop
fistpll
and
xor
dec
push
fs
mov
dec
cmp
add
dec
and
pop
insl
fisttpl
test
xchg
push
cltd
out
ds
lahf
pop
mov
mov
lcall
push
or
xor
pop
push
in
or
or
push
aaa
or
push
incb
mov
aam
sbb
jl
adc
subl
sub
xchg
xor
xor
loopne
cs
std
popf
sbb
aam
gs
or
dec
jae
int
fcomps
xor
and
fwait
inc
adcl
jl
popa
add
mov
pop
stc
dec
pop
mov
movsl
into
push
arpl
jnp
or
pop
mov
inc
mov
mov
lret
insl
inc
call
adc
pop
pop
inc
push
xlat
movsb
ret
xlat
push
inc
pop
addb
jne
xchg
cld
stos
xchg
sar
add
pop
incb
cmp
stos
pop
xor
dec
ljmp
mov
sbb
fmuls
std
pop
call
xor
inc
push
sub
xor
and
fsubrl
repnz
sarl
xchg
pop
std
xlat
shrl
sub
mov
push
inc
adc
mov
mov
add
stos
lret
pop
in
adcl
and
std
idivb
cld
mov
jge
pop
or
xchg
mov
mov
sbb
fbld
push
das
inc
sub
pushl
int
adc
push
mov
mov
xor
inc
lahf
dec
outsb
icebp
add
mov
test
lds
mov
cmp
xor
push
xor
fnstcw
insl
and
and
push
add
insl
ret
pop
push
sbb
imul
insb
pop
add
jbe
mov
out
push
mov
or
fwait
imull
imul
jp
add
mov
or
xchg
mov
leave
and
sub
lret
cmpsb
jle
movsb
filds
jl
xor
inc
cltd
out
add
mov
inc
xchg
pop
ds
jl
and
xchg
jecxz
popa
xorl
aam
xor
inc
stos
and
mov
cld
lds
jecxz
clc
stc
insb
cmp
loope
sub
push
rcr
and
rorl
jp
inc
dec
mov
sbb
jb
fistpl
repz
int3
or
adc
addb
cmp
sbb
sbb
jne
call
pop
in
hlt
mov
outsb
adc
xor
lock
fwait
outsl
popa
lods
fbstp
jb
int
dec
loop
aas
jp
sub
inc
xchg
aam
push
xorb
sbb
lret
das
pop
loopne
hlt
push
jbe
mov
and
dec
pushf
jg
sahf
imul
into
fisubrl
test
mov
aam
dec
arpl
sbb
dec
and
ret
ret
jg
call
jge
inc
out
cs
test
dec
jae
pop
inc
add
std
hlt
xabort
cmp
test
cmpsb
push
sbb
or
add
sbb
mov
fidivs
push
inc
out
jno
push
mov
cltd
mov
and
xchg
jb
add
lret
dec
fiaddl
stos
pop
mov
aas
sbb
sub
push
xor
mov
test
incl
test
xor
icebp
mov
add
adc
int3
icebp
das
push
rcrb
inc
ds
movsl
sub
inc
push
dec
sahf
or
dec
cs
cltd
test
out
jmp
rolb
outsl
xchg
in
cmp
hlt
xlat
push
xor
mov
icebp
jg
cmp
addr16
call
aad
xchg
dec
test
imul
pop
gs
nop
mov
cltd
pop
gs
std
scas
mov
test
xchg
push
push
stc
clc
mov
jg
orb
loopne
cmpsl
ret
icebp
mov
or
or
shr
movsl
fcmovu
aas
and
push
ficoml
add
enter
data16
mov
mov
es
cld
icebp
testl
faddl
das
mov
call
push
adc
in
rcll
and
loope
dec
push
lock
add
jge
jg
dec
ficompl
ljmp
xor
lods
xor
and
cli
outsb
cmpsb
push
lea
or
pop
cmpsl
push
ficoms
jmp
repz
shr
js
rcrb
nop
sti
sbb
sub
fimuls
gs
leave
insb
add
pop
pusha
xchg
push
xorb
xor
mov
xchg
inc
test
mov
pop
lret
xor
mov
enter
aad
cmpsb
add
cwtl
mov
mov
cmp
imul
aam
fimuls
jae,pn
aaa
mov
fs
dec
hlt
mov
jle
sub
or
and
fmull
xor
icebp
pop
add
test
push
incb
dec
pop
out
sahf
mov
mov
inc
fs
mov
roll
sub
sbb
in
or
stos
out
inc
jno
nop
or
xor
fisttpll
pop
in
fadd
adc
or
icebp
push
iret
dec
aam
and
leave
popa
sub
scas
push
push
js
ja
into
or
ss
rcrl
or
ret
add
cltd
pop
push
mov
shl
mov
mov
push
cmp
movsl
pop
inc
aad
xchg
les
lahf
cld
lods
pop
stos
rol
dec
int3
pop
push
dec
sbb
movsl
mov
repnz
mov
sub
movsl
and
xchg
retw
dec
pop
imulb
or
mov
enter
pop
cmc
pop
loopne
shrb
pop
jp,pt
fldcw
add
xor
into
popa
movntq
sbb
mov
sbb
mov
pushf
push
inc
mov
mov
jmp
leave
pop
lds
xor
and
imul
jae
rcrl
sti
popa
push
jge
fld
dec
lock
fwait
in
fs
stos
ljmp
scas
stc
loope
xor
ljmp
adc
les
lahf
xor
in
clc
mov
xchg
imul
fistpl
addb
jmp
das
jns
mov
xchg
js
xchg
in
add
sbb
inc
sub
lret
adc
push
leave
cmp
jp
rol
and
imulb
test
cld
mov
sbb
push
cmp
out
xor
xchg
jle
mov
fld
lret
sahf
xor
outsb
jmp
arpl
mov
scas
jecxz
dec
imul
stc
sahf
add
std
cmp
dec
outsl
sub
push
or
push
jecxz
mov
sbb
push
inc
mov
push
fnstcw
int
mov
call
test
pop
loope
cmp
xchg
adc
pushl
test
cmpsb
cltd
outsb
lea
mov
push
insl
dec
mov
imul
xorb
fsubr
or
inc
xor
lods
mov
test
aam
mov
lds
js
xor
xlat
adc
out
xor
mov
xor
loope
ljmp
xor
xor
mov
std
cmp
mov
clc
dec
lret
fcoms
cs
ljmp
mov
mov
mov
dec
mov
es
jbe
shl
xchg
jb
mov
push
pop
loop
mov
dec
fwait
add
cmp
cmp
push
lock
lret
mov
sub
aad
push
pop
mov
sbb
fstpt
clc
lods
xchg
pop
cmp
sbbb
xor
cmpsb
icebp
and
lods
add
pop
xchg
dec
not
mov
test
jecxz
jp
mov
fadds
cmp
outsb
sub
xchg
frstor
add
dec
mov
add
and
scas
cs
sti
in
mov
arpl
push
pop
inc
ljmp
cmpsl
fnstsw
out
mov
adc
fldcw
xchg
xor
int
fmull
cmp
iret
sub
dec
nop
in
dec
xchg
mov
repz
mov
push
cmp
cltd
movsl
add
mov
out
inc
sub
frndint
or
mov
cmp
xor
xor
in
pop
add
imul
push
movsb
mov
lcall
or
pusha
leave
movsb
shlb
ss
out
jo
xchg
push
mov
shl
jb
mov
cwtl
mov
adc
pop
push
pop
jl
xor
cmpsb
cmpsb
mov
fistpll
inc
dec
push
pusha
pop
mov
scas
shr
in
shrb
in
loopne
dec
and
scas
cmp
dec
leave
ja
lret
jg
cwtl
mov
xor
scas
pop
sbb
aam
cmc
call
test
shll
idiv
sub
loopne
je
sbb
mov
out
aaa
add
dec
pop
push
mov
shlb
pop
in
dec
ja
notl
dec
inc
cmp
pushf
push
bound
inc
cwtl
xchg
pushf
push
and
sbb
dec
dec
or
nop
shrl
sbb
add
mov
aad
add
mov
outsl
jbe
jmp
mov
ljmp
push
ss
adc
sti
xor
loope
xchg
stc
stc
jnp
mov
loope
inc
push
je
lcall
pop
xchg
dec
das
in
js
ret
jg
outsb
mov
mov
jb
mov
dec
sbb
jle
orl
cmp
fisttpl
mov
in
or
cld
inc
aaa
jae
jae
adc
jno
repnz
add
push
cmp
jmp
mov
push
and
sar
inc
pushf
je
jns
rcr
insl
cltd
ja
out
pop
ficoms
js
pop
lods
adc
je
pop
mov
mov
push
add
inc
cmp
push
fcoms
dec
stos
xchg
jp
cwtl
test
stc
xorb
ret
inc
adc
push
and
ffree
daa
mov
jbe
notl
sub
inc
mov
mov
out
xchg
push
or
lods
cmpsb
xor
scas
lret
aaa
inc
mov
pusha
insl
inc
stc
sahf
rcll
push
inc
fmuls
push
fwait
xor
sub
inc
jne
loope
jg
jmp
dec
cli
sub
andl
movb
mov
mov
stos
and
loope
dec
cld
push
test
hlt
mov
cmp
lahf
neg
ret
pop
and
call
push
mov
jne
adc
add
call
mov
int
add
push
push
movsb
ja
jnp
sar
xor
push
jae
xchg
jno
imul
jl
in
xor
xchg
sub
in
pop
mov
loop
cmp
mov
sarb
movsl
mov
sbb
in
jge
xor
addr16
mov
jbe
lea
int3
cld
popa
sbb
cmp
pusha
daa
pop
cmpsb
xor
or
fdivrl
sbb
lea
lds
dec
mov
lret
jp
or
in
es
sub
clc
inc
pop
jns
jb
push
ret
les
mov
xor
adc
xchg
mov
aad
pop
flds
pop
mov
sbb
push
pop
fs
adcl
and
hlt
in
push
jnp
mov
pop
int3
stc
push
push
out
fs
je
sbb
jns
sub
test
hlt
cmpsl
dec
push
mov
or
cmpsb
xlat
push
xchg
nop
imulb
mov
add
popa
jno
pop
xchg
jp
gs
jb
or
inc
cmc
test
jns
dec
pop
roll
subb
inc
outsl
dec
xchg
lea
or
cwtl
jo
pop
sub
or
ror
add
addl
std
arpl
lahf
jb
shl
imul
push
pop
aam
jo
xor
fnstcw
cmpsb
xchg
pop
push
or
adc
cmc
sub
dec
mov
cmp
jbe
xor
mov
dec
sbb
mov
inc
lods
add
cmp
and
mov
sar
dec
daa
jge
jl
in
jae
cltd
dec
sbb
jnp
ss
jo
xchg
add
in
dec
cmp
in
mov
shrl
outsb
aaa
push
out
mov
xchg
jae
std
and
cmp
mov
or
orb
ljmp
iret
cmp
mov
sub
ret
sub
mov
repz
jecxz
mov
push
pop
jmp
mov
mov
adc
jns
aad
sbb
lock
imul
gs
mov
sahf
xor
push
push
pop
pop
add
cmp
sub
cli
je
aad
outsl
mov
in
add
ljmp
xchg
adc
dec
mov
sub
fcmovnu
or
cld
mov
das
and
fsubrp
or
movsb
lods
adc
inc
mov
jns
cmpb
mov
sbb
ds
mov
sub
out
ja
mov
in
pop
dec
xchg
and
mov
dec
lods
repz
xor
popf
faddl
imul
mov
jg
dec
nop
jo
test
xchg
jo
mov
rcrb
sar
sub
add
daa
and
mov
xchg
dec
xor
int
ret
nop
and
mov
cld
nop
cmc
pop
jne
std
mov
lds
ja
cmp
adc
shrb
mov
ja
loope
js
int
pushf
popa
pop
dec
sub
sbb
sahf
andl
jl
cmp
mov
jecxz
cmp
or
outsl
bound
enter
dec
mov
mov
test
in
xchg
mull
sbb
jno
xor
pop
mov
xor
movsl
and
lds
ss
iret
ss
sti
lods
xchg
fnstcw
add
mov
fcomps
jae
mov
mov
in
mov
add
fistpl
rolb
jg
stc
jae
in
sub
fnstcw
mov
and
inc
cmp
xchg
jbe
xchg
leave
mov
pop
mov
fidivl
xor
push
in
cmp
bound
push
sub
mov
dec
jbe
into
test
jge
outsl
push
pop
pop
rcl
cmp
jnp
or
into
loope
add
mov
lret
mov
je
ss
mov
mov
imul
filds
pop
iret
pop
cs
mov
inc
xchg
out
adcl
and
or
or
leave
sub
insb
cmpsb
jp
xor
in
shlw
jmp
movsb
jmp
shrb
mov
std
or
jae
loopne
repnz
out
pop
fsubrp
and
push
cmp
lret
roll
add
inc
inc
hlt
shll
mov
ret
mov
cmp
mov
xlat
add
sub
notl
out
das
and
cmp
jae
dec
repz
addr16
andb
aas
clc
push
mov
popa
sbb
mov
dec
rorb
movsl
adc
lret
add
xchg
test
xchg
shll
dec
or
sbb
sahf
mov
mov
movsb
jmp
in
fmuls
adc
pusha
jno
sbb
xor
jg
push
cmp
sbbb
cmpsb
mov
fildl
xchg
jnp
aad
pop
lret
sub
rorb
mov
enter
push
push
cmp
addr16
test
les
xchg
loopne
jmp
mov
mov
sub
sti
push
dec
or
test
test
insl
push
shrl
cwtl
pushf
cld
cli
add
int3
je
loope
adc
imul
jnp
sti
popf
addr16
inc
sbb
push
arpl
pusha
movsl
jno
stos
fmuls
cmp
shrl
int3
fcompl
loopne
or
lret
jb
stos
mov
mov
jne
scas
cmp
push
jmp
or
fidivrl
mov
lcall
mov
jp
cli
ja
cmp
test
mov
inc
into
xchg
push
add
and
add
das
xor
cld
test
cwtl
rorl
not
cmp
dec
sub
shlb
ja
dec
xor
pop
lock
or
jg
push
mov
repz
adcb
imul
rep
jmp
in
mov
sahf
mov
jmp
mov
test
inc
add
pop
nop
inc
sub
push
jbe
cltd
add
clc
ljmp
sbb
mov
lret
mov
sbb
lcall
pop
mov
xor
inc
push
push
and
pop
pop
test
lret
scas
cli
push
mov
ret
cli
fnstcw
in
ss
fisubl
and
repz
xchg
xchg
stc
xor
ss
xor
dec
dec
adc
push
inc
pop
aam
push
push
sub
jbe
and
cltd
push
jbe
add
jbe
mov
cmc
mov
push
inc
stos
loope
mov
je
lds
add
insb
pop
inc
jb
lock
enter
int
adcb
sbb
jnp
inc
sub
xor
in
icebp
and
cs
shl
and
loope
add
movq
int
sub
clc
test
xor
imul
cld
add
xor
shr
push
iret
test
clc
mov
xchg
pushf
add
mov
fstpt
jno
xchg
xor
pop
divl
or
push
pop
mov
pop
push
inc
rcrb
mov
pop
in
int3
adc
mov
dec
or
push
xor
fs
addr16
das
mov
sbb
call
jae
insb
dec
fldt
cmp
lds
pop
and
jae
sub
cwtl
imul
pop
mov
cmp
test
insl
pop
movsb
fnstsw
lret
adc
negl
mov
cmp
sahf
or
dec
roll
leave
loope
dec
xor
mov
and
push
mov
xchg
outsb
sub
hlt
pavgb
andb
xchg
out
shrb
push
lds
and
pop
add
jecxz
icebp
cmpsb
add
jmp
pop
movsl
mov
rorw
fbstp
jg
dec
insb
add
jno
cmpsl
gs
sbb
mov
das
cld
mov
js
movsb
das
mov
popa
sub
mov
shl
sbb
add
lock
stos
scas
push
int3
jno
or
mov
mov
pop
lods
fs
outsl
subl
xchg
mov
divb
arpl
dec
dec
aaa
and
loopw
lock
mov
cwtl
mov
jp
push
jge
adc
sti
cmc
cmpl
jmp
scas
xchg
adc
xor
dec
shl
cltd
mov
cmp
push
cmpsl
loope
xchg
xor
std
mov
flds
pushf
jne
outsl
jo
mov
addr16
sub
cli
pop
cs
sarb
mov
insl
xchg
mov
aaa
push
inc
sub
jae
ss
cmp
xchg
or
leave
and
adc
jp
mov
enter
popa
inc
jecxz
xor
mov
hlt
or
lds
push
mov
cwtl
outsl
clc
adcl
mov
and
test
jb
push
cmpl
inc
je
cs
fldz
sub
jp
clc
xor
jecxz
scas
lds
push
les
aaa
shr
jnp
xchg
and
dec
adc
sbbl
push
scas
push
idivl
ret
or
cmp
lret
mov
jo
out
aaa
sbb
xor
mov
xchg
je
jecxz
jl
stos
push
stos
insb
push
sbb
sbb
cmp
lahf
adc
fwait
int
ret
sbb
lods
xchg
test
push
sbb
ret
xchg
stos
lahf
out
mov
cli
cltd
lds
sub
fs
or
add
repz
gs
pop
add
aas
xchg
pop
mov
aaa
je
inc
cmp
mov
inc
inc
cmp
cli
push
fisubrl
popf
mov
mov
mov
dec
jge
jg
mov
mov
jmp
std
inc
inc
and
and
push
ljmp
out
arpl
dec
in
lds
dec
gs
mov
mov
rcrb
and
movsl
fldenv
dec
dec
xor
aas
aaa
dec
jb
mov
lret
sub
adc
mov
arpl
sarb
add
sahf
pop
pushf
addr16
cmp
stos
repnz
mov
push
mov
call
idivl
insl
mov
inc
repnz
in
sbb
xchg
lds
and
roll
push
mov
fimuls
les
or
adc
scas
fsubrs
jae
inc
add
or
adc
xor
mov
addr16
mov
add
push
fxch
loop
inc
xchg
dec
cmc
insl
pop
sub
mov
loopne
out
lahf
lcall
cmp
sbb
loop
add
dec
pop
fsts
into
insl
shlb
dec
xor
loope
rcll
cmp
jno
dec
add
inc
repz
and
cli
and
ret
lea
push
pop
loop
movsl
jb
repz
push
addr16
sbb
ljmp
jecxz
lret
rorb
shrl
dec
nopl
jecxz
lcall
call
rolb
mov
xchg
push
add
fidivrs
xchg
push
out
mov
pop
mov
ret
and
xchg
stos
int
mov
inc
lods
mov
pop
insl
pop
dec
loop
sbb
adc
adc
push
aas
nop
fwait
push
inc
lret
cmpsl
addr16
repnz
sar
mov
outsb
jge
arpl
stc
leave
test
out
xor
js
push
push
pusha
xor
fstl
pop
ficomps
push
push
popf
js
fcmovne
adc
adcl
int3
rcr
popa
jae
sbb
rcll
cmp
or
inc
sbb
rcrb
scas
insl
sub
jecxz
hlt
cmpsb
cltd
aaa
movsb
out
rcrl
pushf
insb
insb
xor
sub
mov
push
push
jge
clc
lds
fldt
test
divl
mov
xsave
mov
or
test
inc
shrl
shrb
lahf
scas
test
shl
int3
inc
adc
jns
adc
cmpsb
movsb
js
dec
adc
dec
int3
inc
adcb
and
mov
dec
leave
flds
shl
rorb
scas
add
or
out
xchg
sub
fsubrs
fwait
mull
inc
pop
hlt
lcall
lahf
out
inc
rorb
aaa
and
xchg
test
push
adc
cld
pop
adc
adc
rcr
rcll
lret
xor
repnz
mov
call
mov
movsb
push
fcmovne
into
out
repnz
lret
negl
cld
outsl
jle
iret
pusha
loope
xchg
adc
aaa
into
fsubrs
leave
outsl
dec
jo
lea
rcr
cli
mov
lods
adc
mov
pop
pushf
repnz
xor
mov
imul
mov
ss
rorl
sbb
adc
in
insb
xlat
daa
lock
dec
sub
imul
dec
gs
ret
pusha
xlat
mull
sbb
fidivrl
cmc
inc
xchg
inc
dec
cmova
jp
mov
jbe
mov
jmp
loopne
pop
inc
sti
inc
stc
dec
inc
pop
push
push
cmp
mov
pusha
testl
int3
fs
int
popa
adc
or
mov
pushf
std
shl
xor
rcl
mov
mov
push
inc
sbb
jecxz
enter
adc
repnz
cmpsb
xchg
dec
ja
mov
lret
out
das
sub
clc
push
mov
pushl
movsl
outsb
or
lahf
jl
andl
xor
pop
fiaddl
out
adc
movsb
popf
add
outsb
ficomps
into
test
and
stos
dec
imul
xchg
daa
ja
daa
cld
scas
ret
cmc
xchg
mov
mov
dec
xchg
mov
sub
xor
push
imul
push
mov
mov
loopne
jecxz
dec
lret
xor
cs
in
xor
and
pop
cwtl
repz
xchg
scas
jb
andb
add
sub
jle
repz
push
sbb
cmpsb
scas
xor
test
cmpb
sbb
dec
insl
jp
push
das
fst
fnstcw
int
add
jmp
sbb
cmp
and
clc
dec
cmc
push
notb
sub
or
sub
pop
push
fistl
cmc
arpl
outsb
int
in
addr16
jo
mov
pop
adc
adc
repnz
cmpsl
cmpsb
andl
push
adc
fsub
pushf
add
jmp
inc
ficoms
sar
ret
fdivrl
lds
mov
clc
movsl
xchg
dec
xor
pop
jp
mov
push
out
subb
pop
push
or
and
cld
xor
loopne
add
sub
mov
aas
add
scas
outsb
hlt
sbb
push
mov
mov
jmp
insl
ss
pop
in
lcall
lods
out
popa
mov
or
outsb
jg
popa
cmp
and
sti
aam
jg
rcll
pop
push
aam
mov
std
push
cmp
push
pushf
sub
dec
xchg
test
in
data16
add
mov
cmp
dec
in
or
inc
inc
dec
sub
sub
ret
jne
mov
insl
insl
loopne
jge
mov
mov
dec
dec
ljmp
jnp
in
xchg
jo
sbb
xchg
xor
inc
dec
xchg
xorb
xchg
xchg
lods
popf
call
sub
jnp
jmp
cmp
cli
fsubr
sbb
and
cmpsl
in
test
dec
int
sarb
scas
cmp
orl
imul
stc
jecxz
adc
std
pop
pop
insl
pop
insl
jbe
jl,pt
lods
fdiv
pusha
enter
jo
mov
mov
or
jecxz
out
sub
pop
sbb
adc
out
aaa
movsl
orl
xlat
loope
fildl
mov
mov
cmc
xor
mov
call
or
daa
adc
out
lret
cmpsl
in
add
mov
pop
dec
mov
test
int3
les
xchg
pop
outsb
in
int
les
stc
out
xchg
repnz
imul
lods
cli
xor
mov
and
movsl
int3
sbb
les
mov
pushf
mov
jno
daa
les
push
es
jmp
loop
fwait
jg
jp
adc
adc
xor
test
stos
push
outsb
mov
loop
mov
bound
les
dec
mov
dec
mov
push
repnz
test
or
imul
xchg
shll
and
jno
clc
pop
pop
jnp
mov
sub
iret
sbb
setb
aas
mov
dec
out
filds
sbb
aas
pusha
leave
jl
fldcw
adc
xchg
imul
loop
inc
dec
aas
fs
leave
cmc
or
pushf
data16
test
movsl
cmc
out
jbe
repz
add
cld
mov
aas
test
jae
sarb
lcall
sti
lods
cmp
cli
inc
stc
mov
mov
data16
adc
mov
jecxz
pop
xorb
xor
loope
inc
sub
sub
mov
xor
data16
push
pop
xor
push
mov
outsb
xchg
jl
outsl
ds
das
sbb
jge
mov
cmp
stc
fcomps
insb
sub
mov
add
loopne
xor
gs
cmp
jle
add
fstl
xchg
or
jno
test
inc
and
stos
mov
mov
jmp
ja
jp
ret
shll
add
add
lcall
xlat
stos
popa
pusha
hlt
fnsave
xchg
add
inc
addr16
aad
jmp
stos
fwait
cmpsl
pop
jnp
push
inc
loopne
cli
stos
ret
mov
lock
aad
dec
cmc
stc
cwtl
mov
and
pop
xchg
shll
adc
push
inc
popf
hlt
andl
mov
shr
jmp
xchg
pusha
adc
mov
fwait
xchg
xchg
and
push
mov
xor
adc
int3
test
or
cld
imul
jb
and
in
shrb
test
shrb
fsubl
cltd
movsl
pop
cwtl
jne
push
scas
mov
sub
aaa
sub
lods
xorl
adc
lret
fcomps
lods
scas
jb
mov
movsl
fucomp
mov
pop
sarl
cld
ret
sti
not
rolb
mov
loop
ljmp
pop
out
dec
cwtl
jno
mov
pop
or
sbb
inc
int3
push
outsl
mov
xchg
lahf
dec
lods
or
push
jae
insb
ret
and
sub
add
and
sarl
xor
pop
push
add
ret
insl
adc
loopne
mov
sub
in
mov
add
aas
popa
mov
mov
mov
inc
cmp
out
cmp
ljmp
aas
lods
aas
je
sbb
dec
bound
dec
clc
jns
pop
cwtl
cmpsl
inc
rcrb
in
add
adc
jmp
xorl
ret
sbb
cli
dec
pop
adc
cmp
scas
shl
or
enter
inc
test
notl
or
mov
pop
int3
repnz
movsl
jle
movsl
pop
xor
call
rcrl
mov
out
imul
mov
icebp
xlat
pop
pop
dec
lret
adc
inc
cmpsb
hlt
xchg
icebp
cmpsb
js
mov
ror
testb
push
cmp
jge
cmpsl
lods
data16
jne
repz
call
scas
mov
ficompl
orb
addw
in
repz
mov
fcomps
inc
pushf
pop
pop
mov
scas
gs
sahf
lret
jbe
aas
xchg
fisubrs
out
push
pop
pop
subl
mov
lret
xchg
mov
push
sbb
adcl
pop
in
daa
arpl
sbb
cmc
es
pop
and
add
mov
shll
je
push
or
scas
sub
adc
mov
cmpsl
gs
push
out
insb
idivb
mov
mov
shlb
push
xchg
scas
sub
nop
mov
dec
dec
shlb
lock
mov
std
xchg
jle
push
mov
sub
lret
cmc
jne
test
pop
inc
out
das
pop
push
jb
imul
insl
insb
push
mov
in
sbb
cmpsl
push
xchg
xor
xor
jle
das
lret
hlt
rcrb
lds
inc
loope
outsl
sti
push
sbb
xchg
jl
or
xchg
jbe
dec
jbe
pop
dec
jl
pop
cmpsb
arpl
mov
es
mov
pop
mov
xchg
sahf
push
cltd
xor
sub
add
test
cmp
or
inc
pop
jb
fcoml
sub
in
mov
and
sub
cmp
in
lods
mov
out
pop
jl
or
rcll
pop
data16
pop
push
and
or
decl
pop
and
scas
jne
or
cld
pop
dec
shll
maxps
gs
mov
xor
shr
movsl
cwtl
jns
mov
repnz
fsub
in
notb
jno
xchg
jecxz
add
subb
mov
fwait
in
cli
jno
scas
add
push
inc
faddl
imul
lock
scas
and
aam
fcomip
pop
sbb
mov
adc
xor
pop
hlt
mov
arpl
out
lea
push
stos
pushf
ljmp
insl
aas
pop
jno
dec
dec
xor
mov
cld
inc
lods
push
stc
addl
mov
notl
and
decl
mov
push
mov
stos
push
push
mul
and
scas
scas
pop
stc
or
fs
fs
imul
sub
dec
psubw
clc
adc
insl
movsb
adc
dec
add
adc
push
sbb
sti
push
or
mov
sub
and
push
iret
push
lock
fisubs
jp
lcall
push
jo
mov
add
pop
xchg
adc
lcall
mov
pop
decl
imul
shlb
test
cmp
adc
push
cmp
inc
inc
shll
adc
xor
mov
cltd
cmp
js
pop
sub
inc
push
add
inc
filds
or
jl
insl
jno
jo
or
pop
cmc
jmp
out
adc
test
icebp
shrb
in
push
adcb
pop
sbb
test
mov
lock
jo
sbb
bsr
dec
jnp
pop
and
ficoms
sahf
dec
in
cld
repz
into
xor
pushf
lds
cwtl
arpl
add
mov
cmp
add
sub
dec
pop
mov
xchg
xchg
sub
subb
cmp
adc
and
dec
outsl
mov
or
jecxz
jns
inc
inc
popa
xor
sbb
out
std
fwait
orl
shll
in
mov
pop
and
jmp
jb
rclb
jbe
xor
pop
inc
insl
pop
or
cmp
mov
and
xchg
popa
cs
pop
dec
pop
in
fs
outsl
push
in
adc
cmpsb
jmp
popa
xchg
dec
call
mov
test
iret
aam
sub
imul
push
adc
pop
sarl
xor
mov
pop
fnstcw
sbb
mov
shr
pop
inc
jg
ljmp
popf
add
popa
pop
push
cmp
sub
mov
in
out
jecxz
lret
out
inc
lods
jp
insb
pushf
pop
test
xchg
push
sub
cmp
jmp
pushf
adc
loop
ljmp
adc
movsb
pop
mov
mov
jl
seta
cmp
lods
clc
dec
clc
sub
sti
add
cs
dec
pop
fcomps
lahf
xor
js
add
out
inc
ljmp
lret
cmpsb
ljmp
dec
andl
std
sbb
mov
mov
xor
inc
cmp
xor
repz
xor
cmpsb
sub
inc
dec
das
xchg
sarl
out
or
inc
cmpl
fwait
sub
repnz
pop
mov
in
dec
pop
aad
dec
cmp
inc
loopne
and
and
dec
sub
pushf
mov
out
loopne
sbb
outsl
mov
add
outsb
jmp
pop
dec
int
insb
pop
xor
jo
xor
adc
sbb
sbb
jbe
xchg
jl
mov
dec
or
shrl
std
cmc
addr16
frstor
push
aas
dec
sti
cmpsl
pop
cmp
push
movsl
xchg
and
mov
xor
lds
bnd
pop
sub
add
mov
push
or
les
inc
in
mov
push
inc
mov
lock
cmp
dec
aam
out
xor
push
cld
cs
dec
int3
xchg
out
pop
orl
ret
mov
mov
leave
faddl
int
ror
test
adc
cmp
mov
mov
imul
fisubs
icebp
jae
jp
sbb
jae
int
jge
pop
inc
jae
inc
sarb
ret
lods
shrb
lea
fs
xchg
or
mov
rcrl
add
das
lahf
push
xor
xchg
pop
push
inc
negl
xor
scas
cld
pop
leave
mov
dec
xor
xchg
repz
lods
mov
fimuls
mov
in
and
dec
sbb
mov
das
pop
lods
test
sbb
xchg
mov
mov
clc
jno
lock
push
mov
jnp
daa
jno
stos
sbb
sbbl
mov
mov
ja
std
je
repnz
sub
cmp
rorb
nop
repnz
insl
shll
pop
xchg
or
xor
fisubs
test
stos
rcrb
test
cs
jo
std
ret
aaa
lret
cltd
adc
es
femms
clc
mov
out
mov
in
mov
cwtl
xor
push
jae
adc
jle
int3
fwait
ret
sub
push
fisttpll
pop
test
andl
xchg
mov
add
push
inc
nop
push
push
or
bound
or
addl
mov
jno
xor
xchg
jb
pop
dec
int3
xchg
stos
sub
lldt
fwait
imulb
jmp
sahf
sub
aas
cmp
fidivrl
or
popa
int
ret
dec
cltd
xchg
xor
es
push
adc
mov
arpl
pop
int
leave
pop
cwtl
lret
fs
rclb
out
jb
push
dec
shrb
dec
cld
mov
lret
ret
sub
insb
insb
ret
pusha
rol
enter
shll
mov
jb
lret
push
in
pop
mov
insl
jg
lds
jae
xchg
popa
sub
aam
cmp
lods
pop
shl
push
cmp
jno
jmp
mov
fsubs
ja
pop
ror
popf
je
fidivl
mov
lcall
mov
mov
adc
add
sbb
jnp
inc
rcrb
jnp
fildll
or
sahf
cmpsb
mov
push
dec
not
lods
mov
and
jo
lea
add
inc
out
jl
and
lods
jmp
push
push
les
adc
shrl
jbe
cwtl
jmp
or
push
mov
call
pop
lea
xchg
add
inc
arpl
popa
and
adc
outsb
popa
daa
in
in
ja
in
into
pop
out
leave
push
aaa
cmpsl
xchg
jp
push
sahf
xchg
cmp
test
aaa
je
cwtl
xchg
fucomip
cld
fnstcw
sbb
addl
xor
mov
add
or
lret
add
cltd
or
xchg
shrl
push
jecxz
and
popa
aaa
mov
std
int
lea
les
pushf
enter
sbb
aam
inc
sbb
mov
cli
notb
push
jge
repz
scas
cs
jne
and
pushf
fstl
jns
sub
pushf
adc
sub
and
icebp
cs
out
push
cmp
sahf
rolb
pop
addl
cmp
jle
xlat
jge
scas
shlb
insb
cld
adc
mov
mov
or
jno
jmp
rclb
cmp
jmp
aad
sahf
sti
jo
gs
jno
ret
or
jmp
sbb
mov
adc
mov
std
and
and
mov
aaa
mov
cwtl
and
in
cmpsb
push
ficoml
out
repnz
mov
bound
stos
add
dec
fs
or
push
mov
dec
ja
cmpsl
push
push
nop
cmp
es
mov
xor
test
insl
sub
pop
lea
scas
pop
adc
push
jne
fisubrl
mov
faddp
test
in
sub
pop
test
lret
jne
lods
test
xor
sub
add
imul
test
sbb
xchg
stos
dec
push
stc
sti
dec
icebp
or
push
fstl
push
add
mov
call
sub
int3
sub
adc
jns
dec
xchg
jge
mov
inc
mov
sti
pushf
cli
pop
jg
adc
sub
sahf
inc
mov
lods
inc
mov
lods
adc
ror
and
cmpsl
mov
pop
push
xchg
jmp
add
lcall
mov
sub
jle
sub
fcmovne
rolb
xlat
mov
fsubs
xor
cs
inc
sbbl
mov
jg
shll
jbe
int
dec
repnz
and
je
add
clc
stos
inc
xor
movsb
clc
das
pop
or
jecxz
or
dec
aam
mov
or
push
sub
imul
loopne
push
addr16
and
cwtl
mov
add
and
sbb
aam
lcall
lock
mov
sbb
pop
lcall
xor
push
dec
jmp
pop
and
loopne
inc
jo
push
js
arpl
out
aas
jns
rcl
push
xor
cmc
aad
rol
lods
repnz
rcll
mov
out
mov
mov
int
xchg
andl
into
push
jp
stc
xchg
pop
fmuls
jno
push
clc
or
fwait
sbb
xchg
xchg
mov
mov
jmp
sbb
rcrb
add
mov
mov
xor
gs
lahf
inc
test
and
mov
daa
mov
test
sbb
inc
jns
mov
xchg
lret
enter
fwait
mov
add
jp
out
xor
scas
lcall
sub
mov
inc
inc
xchg
push
nop
cltd
push
es
inc
mov
loope
dec
push
dec
mov
pop
xchg
xor
in
test
cwtl
xor
sti
clc
xchg
stc
add
ds
pop
add
jp
mov
repz
hlt
notb
aad
xor
addr16
jns
adcl
jne
adc
push
stos
push
cmp
jg
adc
xlat
pop
jmp
mov
fsubrs
mov
push
add
xchg
popa
cmp
mov
adc
test
mov
lahf
add
mov
bound
aam
rclb
leave
adcl
lea
std
mov
stc
and
in
int3
xor
int3
xor
lods
scas
jl
std
fptan
clc
je
or
lea
fildl
or
pop
jp
and
mov
add
xchg
subb
popa
dec
out
fsubs
test
fisubs
sub
mov
shlb
jp
icebp
sbb
ss
push
and
sbb
cmp
dec
lret
rolb
add
addr16
test
sub
fst
jno
cwtl
pop
adc
xchg
sbb
movsl
sbb
cmp
or
aaa
cmp
adc
xchg
pop
loope
jnp
cmp
sbb
jecxz
pop
clc
jne
addr16
xlat
pop
rcrl
in
add
popa
test
jo
adc
add
push
out
cmpsb
ret
jne
jmp
mov
push
out
imul
xchg
xor
inc
xchg
popf
and
or
mov
pop
cmp
push
xor
sub
stc
arpl
adc
dec
enter
pop
xchg
push
jmp
inc
ljmp
cmp
jns
jo
andb
push
ret
xchg
mov
dec
xchg
jns
aas
xor
xor
mov
sti
insb
mov
mov
pop
cmp
dec
cmc
jb
xor
js
stos
sub
fldt
dec
inc
or
adc
jge
fwait
mov
incl
popa
or
dec
add
cmp
pop
push
jmp
mov
add
lret
repz
in
mov
push
xchg
xchg
rcrl
dec
insl
loop
movsb
push
pushw
push
sbb
sub
mov
adc
fimull
xor
adc
cld
lret
aas
fsub
paddsb
push
into
arpl
ret
clc
adc
test
mov
push
mov
jp
mov
jg
enter
mov
aad
adc
scas
add
sbb
cmpl
jmp
pop
jns
push
xchg
pop
dec
pop
and
xlat
hlt
iret
into
addr16
push
fdiv
sahf
in
lea
lea
cld
imul
ss
idivb
pop
into
leave
dec
icebp
aas
jae
arpl
and
mov
mov
cmp
das
call
push
testb
hlt
mov
popf
inc
sahf
test
mov
les
cmp
scas
xor
inc
cmpsw
ret
xor
ss
mov
or
lds
scas
cmp
mov
jbe
push
in
sub
jb
ficoms
or
in
cs
in
cmc
repnz
and
add
pop
fwait
dec
inc
sbb
jno
repnz
jle
cltd
push
mov
cltd
out
add
cmc
out
jo
mov
pop
mov
or
mov
idivb
cld
movsl
adc
aam
into
pop
std
gs
in
jg
and
jle
pop
xchg
sti
dec
es
fists
div
cmp
cli
cmp
adc
cs
iret
out
xchg
lcall
cmp
repz
mov
xor
add
mov
pop
dec
jo
mov
stc
imul
mov
cs
and
and
adc
xchg
dec
scas
sti
pop
xorb
pushf
or
push
jl
pop
mov
cwtl
jle
inc
arpl
or
add
adc
push
inc
fdivrs
outsb
sahf
les
jns
icebp
test
pop
xor
dec
inc
es
sub
fwait
xchg
shrb
inc
fidivrl
or
mov
lea
stc
nop
rol
push
mov
cs
adc
out
sbb
js
lret
mov
xchg
ss
sbb
rcr
je
out
in
mov
in
outsl
jmp
pop
mov
icebp
or
push
das
push
subps
scas
je
xchg
pusha
enter
in
js
or
xchg
es
pop
push
or
ja
gs
xor
cmp
loope
mov
jae
jl
std
jecxz
jmp
punpckhwd
and
inc
push
in
or
or
mov
mov
imul
aam
leave
xor
mov
test
jns
push
pop
fstl
dec
sbbb
cltd
add
cwtl
popf
mov
insb
popf
xchg
fs
mov
stos
cmp
je
pushf
outsl
push
jno
jb
std
push
mov
xor
mov
inc
pop
cmp
xor
push
pop
addr16
scas
ficoms
add
xchg
push
pop
leave
push
dec
stc
xor
lods
mov
rcll
push
dec
push
jns
loope
cld
pop
decb
sarb
mov
xor
cmp
sub
enter
cmp
and
dec
pusha
pop
cltd
popa
movsl
push
add
push
divl
pop
xchg
scas
cmovl
cmc
lods
xor
in
insb
jnp
les
ljmp
es
add
leave
jbe
ret
sbb
xchg
push
fmull
movsl
sub
lret
dec
add
mov
sbb
ljmp
test
pop
pop
or
inc
mov
movsl
dec
xor
xorb
hlt
inc
mov
lock
mov
mov
outsl
sub
cmpsl
in
sbb
push
push
cltd
ss
jmp
stc
arpl
je
mov
cmp
arpl
dec
and
or
push
sahf
mov
jecxz
movsl
sub
xchg
xchg
xchg
shll
iret
pop
mov
popa
in
adc
and
xor
clc
or
or
add
mov
das
mov
ds
xor
sbb
aad
lcall
test
mov
pushf
adc
jno
insb
loope
fmuls
fdivrs
cltd
andl
mov
xchg
push
push
cld
shll
mov
or
iret
lods
in
aaa
dec
inc
cmp
xor
add
inc
lret
jne
xor
pop
mov
push
arpl
adc
icebp
addr16
test
or
ljmp
frstor
out
xchg
mov
iret
popf
adc
fsts
dec
cmp
mov
jp
dec
add
loope
setl
push
xchg
lcall
sbb
in
jle
int3
mov
mov
mov
lret
jecxz
xlat
je,pt
jo
cmp
jp
mov
loopne
repnz
xor
mov
mov
out
push
ret
mov
mov
push
push
jo
out
and
jl
mov
insl
clc
or
ljmp
iret
xor
sbb
leave
lds
imul
mov
ror
int
sbb
enter
aad
sarw
and
loopne
jae
push
jae
int
jb
sti
mov
pushf
inc
movsb
mov
stos
mov
insb
iret
shll
jno
cmc
iret
cmp
mov
xor
xchg
and
outsl
sub
out
mov
mov
into
jne
int3
inc
mulb
sbb
xchg
sub
jmp
cmp
inc
or
cltd
fxam
lock
push
push
imul
or
testb
dec
jge
fsincos
pop
push
and
pop
inc
in
call
out
cmpsl
popf
xchg
sbbl
stos
dec
out
or
sbb
cmpsb
mov
out
inc
addr16
popf
rorl
or
dec
movl
movb
xlat
pop
test
enter
sbb
mov
aaa
cmc
push
push
ds
aad
sub
mov
mov
xor
fstp
lds
fists
leave
icebp
dec
or
lahf
addl
push
pop
push
sbb
mov
mov
hlt
popf
in
dec
or
jmp
addr16
scas
fstpl
xor
cld
inc
cmp
inc
adc
std
mov
aad
in
movsl
inc
cmc
shll
shrl
icebp
mov
popa
out
xchg
xor
adc
push
and
cmp
data16
mov
inc
stc
hlt
mov
fiaddl
out
sbb
addr16
icebp
dec
jo
or
cmc
fwait
decl
jne
out
enter
push
bts
xchg
xchg
and
cltd
das
jge
mov
movsl
daa
push
fadd
jge
jmp
push
inc
shrl
jge
cwtl
into
mov
mov
jl
lret
mov
push
jno
mov
mov
or
icebp
xchg
sti
imul
push
sub
jl
icebp
pop
out
jbe
dec
xor
shl
je
lcall
add
insb
lret
push
test
outsb
mov
add
in
jbe
into
jb
xlat
mov
loopne
in
sbb
lret
mov
mov
ss
out
xchg
int3
ror
enter
push
inc
push
lcall
fdivs
sub
sahf
popa
je
sub
in
mov
cmp
push
fwait
jns
mov
pop
cmp
imul
rcr
in
pop
adc
xor
js
pop
jge
pop
shl
jl
leave
adc
loope
xlat
mov
lods
push
push
xchg
ret
inc
sub
cld
mov
lcall
jo
loope
jl
cmp
sbb
stc
mov
push
rclb
jno
add
bound
test
xchg
adc
faddp
push
test
popa
pushf
ja
cmp
scas
sbb
mov
scas
idivl
inc
jb
or
call
fs
mulb
mov
rorb
mov
fnstsw
jecxz
or
xor
jns
adc
and
dec
sahf
ss
xor
adc
mov
sbb
negb
mov
and
jns
or
ret
pop
cli
pop
js
data16
int3
xchg
dec
pop
lods
test
or
bound
mov
call
jnp
in
cmpsb
cmp
rcrb
push
orl
jo
enter
mov
mov
jbe
xchg
test
testb
sub
mov
add
jnp
nop
div
adc
cmp
add
out
cltd
or
inc
mov
inc
daa
sub
nop
push
or
add
sbb
adc
dec
mov
in
jl
fsubrs
and
fildl
xor
nop
and
pop
jo
int3
sbb
iret
xchg
xor
adc
pop
in
jmp
data16
jno
lret
adcl
bound
sbb
inc
lret
loopne
iret
je
mov
popa
push
jbe
fisubrl
pop
stos
fimuls
push
pop
adc
mov
dec
jo
push
jp
out
jp
popf
rclb
lahf
cmp
xor
inc
mov
dec
fwait
cmp
imul
adc
and
push
xchg
mov
mov
pop
pop
dec
mov
out
aad
jmp
mov
inc
mov
or
insb
dec
dec
or
testb
sub
pop
mov
dec
out
or
mov
mov
mov
jbe
ret
dec
inc
inc
mov
std
mov
xchg
adc
inc
push
inc
sarb
inc
es
jg
push
imul
or
addb
test
scas
lds
jns
call
lds
icebp
cltd
gs
call
out
pop
xor
cmpl
pop
inc
int
jb
cmp
fs
aaa
sub
xchg
dec
add
jno
pop
xchg
loope
sub
scas
test
and
dec
and
shr
fdivrl
test
mov
repnz
add
jp
xchg
fsub
push
inc
insl
rcr
xor
arpl
cmp
rclb
inc
mov
pop
jb
cmp
outsl
cld
enter
mov
jb
inc
push
aas
insb
call
mov
inc
lods
cwtl
imul
inc
es
shll
dec
cwtl
cmp
sub
adc
push
cmp
loopne
fisubl
or
push
sarl
jmp
into
shl
sbb
pop
mull
rolb
shlb
jmp
lds
mov
pop
or
outsb
or
mov
cs
cmp
rorl
ljmp
test
nop
inc
test
ljmp
mov
adc
pop
xchg
outsl
mov
cwtl
lret
add
mov
or
rcll
and
outsl
stc
add
push
jnp
xor
adc
arpl
inc
in
xor
movb
xor
adc
nop
ret
es
inc
fisubrl
and
sbb
mov
add
sbb
jmp
aas
ret
into
adc
mov
or
orb
out
daa
inc
xor
inc
cli
sub
pusha
mov
lea
pop
xchg
dec
sti
push
je
sahf
cmp
push
cwtl
rolb
aad
pusha
dec
icebp
cmpsb
mov
jge
adc
adc
xor
enter
cmp
mov
movsb
inc
mov
sub
adc
jecxz
mov
jbe
mov
cmc
xor
xchg
mov
call
push
and
fdivs
cmp
pop
or
xlat
leave
cwtl
jecxz
jmp
std
sar
ret
sbb
mov
scas
cmp
adc
cmp
cmpsl
nop
xlat
mov
push
sub
in
movsl
or
fisubrs
mov
mov
pop
setge
mov
loope
ds
xchg
ret
lret
cmp
popf
push
imul
fbld
or
loop
adc
mov
ror
jno
sahf
inc
sub
push
or
or
cmp
loope
cmpb
jmp
out
test
jmp
inc
push
and
mov
cmpl
fldcw
inc
das
arpl
leave
test
imul
pop
rorl
int
rcll
cmp
sbb
push
shr
jmp
mov
ss
xchg
sub
push
movsb
mov
inc
pushf
add
jo
xchg
jmp
push
rclb
arpl
out
sti
lods
or
or
push
std
and
std
sbb
dec
or
aam
jb
pop
sub
test
loopne
daa
shlb
dec
test
push
xor
push
add
and
rclb
xchg
ret
notb
or
lret
xchg
adc
call
inc
outsb
mov
ds
jne
and
nop
jns
mov
push
jle
sahf
loop
cltd
clc
pushf
xchg
and
jle
lock
cmovbe
push
mov
mov
and
or
loop
mov
call
push
dec
or
stc
aad
cs
mov
jecxz
scas
lock
inc
test
inc
jns
inc
mov
inc
fsubr
and
xchg
xchg
stc
sar
outsb
sbb
xchg
mov
xor
mov
sbb
int
cld
pop
inc
stos
sub
loopne
daa
jl
ss
or
fcomip
push
loop
cli
out
lret
mov
pop
dec
sbb
int3
into
mov
jne
cmpsb
cli
mov
mov
out
or
test
jns
add
push
out
lds
lret
jmp
jp
imul
shll
mov
fisttpll
int3
cmpb
or
cmp
jecxz
js
mov
movq
arpl
add
inc
xor
cmc
xchg
insl
mov
lods
mov
aaa
dec
fwait
push
ret
jnp
test
xor
ja
rolb
xor
adc
int
inc
sub
fmul
xor
jp
push
cld
sarb
mov
nop
xor
pusha
inc
mov
jae
out
mov
xor
xchg
mov
push
data16
xchg
int
dec
xor
dec
mov
aad
enter
push
incb
fisttpll
mov
test
adc
pop
cmp
jl
int
cli
jge
imul
cld
das
push
push
rorl
scas
pop
sub
and
dec
xor
movb
push
pop
imul
mov
inc
fdivs
sbb
sbb
pop
ret
js
fisubrl
in
test
cld
pop
into
lds
sub
cmp
inc
cltd
in
mov
scas
cwtl
fstps
jno
mov
in
sbb
fdiv
arpl
inc
ss
mov
enter
dec
xchg
popf
int3
pop
movsl
fsubrs
cmp
sbbb
stos
xchg
sub
jbe
xchg
pushf
jmp
inc
es
mov
pop
jae
sbb
notl
rolb
dec
arpl
aad
imul
lret
scas
jmp
test
out
mov
push
cld
cmp
in
fsubl
iret
lds
in
mov
repz
jbe
movsl
shl
cmp
sahf
jg
or
insb
in
sub
sub
pop
push
aad
xor
push
sbb
pop
xchg
jno
cld
mov
out
in
sub
cmp
fs
bound
mov
js
push
aam
mov
or
mov
cmp
xor
fsubs
mov
jnp
rcrb
mov
push
pusha
xor
push
ljmp
lods
jp
sbb
jmp
cmp
iret
lret
shr
sbb
add
sub
repz
sub
loop
add
fisubs
lahf
lds
mov
inc
das
jnp
rorb
xorb
mov
mov
aad
jge
pop
shlb
mov
pop
sbb
ss
pushf
out
cld
mov
popa
out
or
and
ret
movsl
fists
fwait
mov
lods
xor
pusha
push
test
sbb
mov
or
pop
adc
and
out
cmp
adc
cmp
jae
mov
aaa
push
ja
leave
inc
push
mov
stc
sbb
inc
xchg
xor
shrl
int
sub
jae
xchg
xchg
xchg
mov
cmp
mov
rcrb
adc
test
cwtl
test
add
bound
pop
lahf
dec
mov
add
shlb
add
pusha
daa
push
mov
mov
out
adc
cld
cmp
orb
jbe
xchg
xchg
fs
clc
data16
lods
push
cs
in
in
addr16
xchg
je
mov
sub
lcall
pusha
sbb
pop
loopne
and
inc
mov
hlt
call
insb
popa
movsl
inc
loop
stc
pusha
pop
lods
push
dec
clc
mov
scas
and
cld
xor
jb
sbb
testb
test
and
sub
dec
addb
cli
pop
add
cmc
fnstenv
jle
mov
int
or
sub
mov
test
jg
out
cmp
xchg
test
cmp
jg
mov
xchg
lods
paddd
repnz
pop
das
and
adc
loopne
inc
inc
xchg
mov
dec
fwait
pop
ret
movsl
adc
xchg
push
sub
xchg
jge
adc
push
shlb
or
mov
push
sub
cmpsb
add
std
push
jns
inc
push
mov
cmp
dec
popa
lret
mov
outsb
mov
jb
pop
and
fstpt
sbb
push
outsb
mov
add
mov
bound
pop
imul
fldenv
inc
push
adcb
daa
or
rcl
shll
mov
sbb
cmp
pop
addr16
pop
pop
push
stos
cltd
pop
adc
pop
mov
sub
lret
pusha
mov
jns
push
cmp
out
xchg
pop
mov
in
add
dec
pop
fwait
adc
stc
push
sub
into
fwait
testb
bound
pop
cwtl
sbb
cmp
mov
pushf
dec
jmp
hlt
add
and
xor
xchg
repz
jnp
push
cmp
xchg
dec
stos
mov
rolb
and
movsb
or
nop
dec
mov
insl
loop
xchg
test
add
inc
into
ja
lds
jb
xor
sub
gs
hlt
loope
sar
dec
lock
rcrb
jge
dec
int3
mov
xchg
and
aaa
sbb
push
xlat
or
clc
int
aaa
mov
mov
arpl
jo
in
ret
fdivr
subb
mov
cmp
inc
stc
pop
jge
cmp
cmp
mov
in
xor
sub
jge
pop
fs
jecxz
jg
mov
mov
das
outsb
lcall
or
sub
cmpsb
mov
stos
jp
ds
mov
popa
test
lea
add
stos
push
arpl
daa
jno
adc
and
dec
cmp
ficoml
jb
int3
mov
ljmp
repnz
popf
push
lods
push
or
ja
jmp
mov
jge
push
cli
dec
std
repnz
push
pop
or
ljmp
sbb
push
adc
js
push
cmp
fistpl
aaa
inc
ss
sub
cs
test
push
cmp
pop
stos
mov
xor
and
or
xor
sarl
push
sar
fidivrl
icebp
btr
ret
dec
test
xor
stos
or
cmp
adc
sub
pop
lods
cmpsl
sub
incb
aaa
adc
mov
nop
xor
fs
push
push
pop
ljmp
sti
pusha
lahf
je
inc
jmp
mov
nop
cmpb
cmpsb
mov
mov
jmp
insl
ret
xchg
adc
pop
addb
icebp
aad
out
add
or
je
push
test
stc
jbe
add
fisubl
js
aaa
mov
mov
rcll
stc
xchg
mov
in
fsubs
push
pop
xchg
and
int
std
cmp
adc
rorb
repz
sub
pop
xor
push
aas
mov
cltd
mov
add
ret
inc
xor
arpl
rclb
xchg
mov
fs
loope
mov
arpl
inc
fwait
pop
pop
adc
sub
dec
dec
inc
loope
push
mov
pop
movsb
jle
ljmp
push
outsb
mov
adc
push
pop
push
sbb
mov
mov
jl
cwtl
fdivrs
xchg
mov
aam
pop
fiadds
cwtl
adc
arpl
pop
cmpsb
adc
insl
push
mov
outsb
jo
imul
out
xor
ret
fs
push
stc
test
inc
dec
sbb
xchg
sti
int
mov
dec
jno
in
out
repz
sarl
adc
lret
rcrl
sbb
mov
mov
in
inc
sub
subb
mov
imul
cmp
movsb
into
into
jnp
cmp
sbb
or
sbb
sarl
sub
xor
sub
call
dec
push
addr16
iret
out
cmp
pop
or
fstpt
mov
push
inc
mov
jb,pn
ds
das
dec
clc
cltd
fstpt
nop
and
outsb
dec
dec
mov
jne
push
js
ja
mov
or
mov
add
icebp
inc
insl
sbbb
pop
mov
fadd
outsl
mov
loopne
scas
cmpsb
int3
pop
cmp
pop
inc
dec
loop
dec
mov
jecxz
cmp
clc
pusha
inc
out
adc
push
adc
lret
dec
mov
mov
adc
mov
mov
or
ret
xchg
sbb
mov
push
loop
mov
sub
arpl
add
andb
int3
loope
iret
aad
adc
ret
test
shlb
fwait
pop
xchg
loopne
mov
lods
adc
fcmovb
xchg
aaa
aas
dec
jp
cmp
mov
add
jb
fs
mov
pop
push
adc
and
aad
fisubrs
mul
or
mov
out
and
imul
add
jne
out
das
or
ss
inc
cmpsl
push
clc
add
mov
or
std
sub
jecxz
incl
ljmp
mov
or
jge
das
cmc
push
lahf
mov
insl
loopne
cmp
negl
cs
pop
lret
sbb
movsl
push
hlt
dec
dec
cmp
push
jnp
mov
add
jnp
fildl
aam
and
xor
into
inc
bound
lds
add
xor
xchg
sbbb
xchg
mov
push
jg
pop
or
inc
mov
aam
cmp
testl
inc
rep
mov
addr16
adc
push
arpl
rcr
pop
push
bnd
mov
mov
inc
je
test
int3
mov
sbb
outsl
push
repz
jo
sbb
je
repnz
fbstp
jl
in
daa
out
andb
mulb
jle
mov
sub
jge
pop
cmpsb
pop
pop
xor
shl
addr16
mov
iret
cmpb
enter
or
fnstenv
iret
lock
outsl
es
sub
stos
pop
pushf
or
sbb
cld
mov
stos
pop
fsub
pusha
mov
adc
out
call
dec
in
push
ret
out
adc
js
stos
scas
enter
or
xor
or
push
daa
dec
int3
sub
mov
mov
psubsb
pop
lret
inc
test
push
out
pop
in
xchg
cmp
mov
dec
imul
stc
scas
sti
or
xchg
cmp
jbe
jns
notl
nop
push
aas
rcrb
in
test
inc
pop
add
mov
xchg
mov
xchg
lcall
or
adc
adc
inc
and
nop
fwait
sbb
xchg
and
push
mov
repz
add
bound
lahf
js
adc
dec
loop
scas
add
cmp
push
arpl
leave
push
sbb
xchg
cmp
std
jns
jl
add
pop
je
pop
and
and
dec
cmp
xor
cld
inc
jmp
jmp
pushf
mov
insl
or
ret
mov
sub
shl
test
stos
jns
stos
push
hlt
aaa
lahf
cmpsl
mov
in
mov
xchg
scas
xchg
in
aam
jbe
sbb
mov
xchg
and
mov
loope
adc
push
imul
andl
jns
enter
pop
fidivl
fsubl
loope
sahf
sbbb
sub
scas
sub
mov
shr
ja
push
mov
mov
bound
mov
mov
inc
loopne
sub
dec
mov
out
ret
subb
fbld
adc
xor
test
cmp
and
popf
jp
mov
mov
int3
in
cmp
stc
aam
pop
cmpsl
aaa
in
dec
aas
sbb
sbb
pop
xor
add
cmpsl
adc
divl
xchg
fs
fs
sbb
dec
mov
or
movsb
loopne
test
mov
mov
xor
lods
inc
mov
decb
sub
xchg
ds
or
inc
mov
xchg
mov
call
sbb
out
pusha
fisubrl
cmp
adc
jl
sar
mov
adc
dec
push
mov
mov
lret
daa
sub
sbb
xchg
or
jne
es
adc
xor
sbb
arpl
sahf
enter
mov
enter
fwait
mov
aad
xchg
cmp
pushf
xchg
js
mov
movsb
mov
in
pop
pop
dec
test
dec
js
leave
aas
adc
push
test
bound
fnstsw
dec
stc
mov
negb
js
jg
lds
sub
shlb
push
adc
add
pop
push
lret
jo
mov
cli
xchg
xchg
and
out
pop
dec
stos
leave
push
and
xchg
outsl
mov
adc
addr16
xchg
xor
add
inc
cmp
xchg
xor
lcall
nop
das
sub
mov
push
int3
push
cmp
add
lcall
movsb
filds
inc
dec
in
dec
cs
push
jl
or
fs
inc
ljmp
enter
in
fadds
cmpsl
inc
jo
mov
push
fldcw
pop
adc
mov
mov
xchg
mov
push
xor
sbb
mov
fdivrp
rcrl
dec
out
push
sbb
nop
xor
xchg
imul
add
xchg
dec
xor
sub
adc
andb
push
xchg
fstpt
scas
or
adc
sub
dec
sbb
insl
xor
leave
out
mov
add
inc
test
fldenv
lahf
and
push
loopne
ljmp
mov
jl
arpl
inc
scas
dec
mov
imul
shlb
mov
add
pop
jno
push
push
or
add
xor
dec
push
cld
std
sub
push
fs
cmp
popf
and
xchg
faddl
out
mov
outsb
sti
xlat
inc
les
add
push
cmp
jge
mov
mov
outsb
mov
test
call
testb
loop
dec
testb
jae
fstpl
ja
popl
sub
xchg
fiaddl
fldcw
aad
adc
sbb
out
ljmp
pop
sarb
adc
mov
mov
adc
movsl
mov
add
add
jae
and
sub
xlat
add
inc
andb
cmp
mov
dec
sub
fnstcw
test
push
mov
out
cltd
enter
lods
iret
inc
bound
mov
push
rcl
int
sbb
mov
push
jecxz
lret
push
jnp
faddp
inc
sahf
repz
outsl
xchg
xchg
lods
loope
dec
mov
jp
inc
test
sbb
jmp
cmp
sti
fsubs
inc
or
icebp
adc
mov
sbb
loopne
sbb
or
mov
int3
cmp
lret
in
int
rclb
outsl
aam
sarb
xchg
lds
push
push
mov
push
push
dec
outsb
lock
pop
mov
out
dec
in
sbb
out
pushf
stc
ja
fwait
or
loope
pop
repnz
jp
or
pop
xor
push
stos
adc
sub
jg
xchg
jns
sub
pop
ja
dec
inc
mov
outsb
jle
pop
cmp
mov
cmpsb
sbb
rcrl
notl
rcrl
xlat
fwait
mov
lret
es
in
sub
rcl
cmp
into
ljmp
stc
jl
fnsave
cmp
int3
mov
xor
pop
push
in
insl
jns
vmaxps
xor
and
inc
icebp
lods
int3
and
cmp
and
xchg
data16
test
insb
xor
and
push
mov
pop
cmp
fistps
lods
je
push
mov
xchg
out
pop
ljmp
pop
movsb
add
repz
dec
jmp
mov
mov
or
nop
mov
cs
pop
mov
mov
cwtl
filds
push
in
push
into
data16
or
jmp
sbb
xchg
das
ja
xchg
adc
cmp
dec
xchg
and
emms
scas
outsl
cmp
int
adcl
mov
loop
xchg
fsubl
push
xchg
inc
cs
call
inc
mov
cs
loope,pt
hlt
push
add
cli
jle
and
sbb
and
inc
nop
sub
adc
in
es
pop
shlb
mov
mov
daa
inc
lret
xlat
cs
loop
xchg
sbb
dec
in
cmp
mov
cs
jo
lcall
or
mov
inc
sarb
aaa
arpl
mov
inc
add
fldt
mov
mov
cs
and
xchg
sub
jae
mov
jg
mov
movsb
mov
and
jge
fdivl
aam
cmp
out
out
add
lret
mov
ret
cwtl
jmp
pop
or
hlt
out
inc
cwtl
pop
stos
mov
push
dec
jno
jp
cmp
out
inc
repnz
sbb
jmp
mov
push
push
popf
xchg
sub
ret
jp
pop
add
sub
lds
dec
stos
sti
je
xchg
sbbb
movsb
mov
clc
mov
adc
sub
mov
sbb
xchg
jb
inc
jl
add
in
jne
mov
dec
pusha
mov
sbb
xor
adc
cwtl
cmpl
fsubl
dec
pop
ret
aam
add
fndisi(8087
push
add
pop
cmp
mov
in
clc
imul
aam
cmp
xchg
in
cmc
mov
mov
sbb
cmp
pushf
addb
add
int3
test
push
sub
insb
adc
jbe
mov
add
dec
fsincos
mov
shl
mov
mov
jle
arpl
jae
lods
xor
call
jb
fcmovbe
jmp
jl
and
repz
lea
movsl
test
data16
mov
jl
incb
add
cmp
mov
jle
test
sub
rsqrtps
popf
cld
sbb
or
das
mov
in
cld
ds
mov
fists
xchg
arpl
les
xor
sbb
fldt
mov
mul
stos
mov
ret
lds
push
pop
jecxz
cmpsl
dec
jae
cltd
shlb
cmp
sti
dec
loopne
xor
loope
inc
adc
xchg
cld
and
addr16
lret
mov
mov
insl
rol
loopne
sub
or
jae
adc
or
cmp
fcoms
enter
sub
idiv
fdivp
out
gs
dec
sub
and
dec
dec
xchg
push
adc
mov
fs
jmp
lods
fmull
push
xlat
add
rcrb
gs
sbb
fnsave
ficompl
in
mov
xlat
movsb
adc
mov
jb
sbb
lock
mov
outsb
sub
fwait
dec
repnz
cmp
adcb
mov
repnz
adcl
xor
xchg
sbb
jae
push
ret
test
dec
movsl
data16
adc
push
out
mov
inc
loop
int
int3
scas
loope
mov
cmp
cmp
cwtl
add
idivl
jnp
rcr
aas
cs
and
nop
aam
sbb
arpl
or
sbb
mov
insl
insl
jge
scas
scas
adc
sahf
sub
pop
xor
fimuls
mov
fbld
ss
mov
out
sbb
js
lret
les
lret
and
jnp
incb
andb
sub
mov
xor
cmp
test
push
aad
push
stos
jns
dec
or
out
fildl
shl
leave
outsl
movsl
jbe
or
mov
les
andl
stc
push
adc
cwtl
mov
pop
repnz
jecxz
dec
pop
mov
sbb
imul
mov
mov
shl
or
lret
dec
mov
mov
mov
call
xorl
fdivrs
scas
add
jo
jmp
mov
cmpsl
lret
mov
xchg
mov
push
jp
fcmovbe
out
mov
cli
xchg
daa
dec
mov
outsb
or
ficoml
fiaddl
and
jecxz
adc
loopne
mov
addr16
dec
mov
or
pcmpgtw
out
in
push
cmp
popa
or
and
mov
cltd
sbb
pop
cmp
pop
call
bound
pop
orb
into
cltd
in
hlt
jbe
out
jbe
mov
movsb
fmulp
and
adc
mov
cwtl
faddp
push
add
inc
into
push
jbe
add
jns
es
and
inc
ret
aad
mov
push
xor
sbb
dec
xlat
xor
or
cwtl
les
sbb
and
test
div
call
scas
aad
in
xor
or
pop
aaa
dec
gs
cmpsl
rcr
sbb
push
scas
mov
ljmp
aad
jl
ret
xchg
push
mov
xchg
jg
sub
pop
lock
into
shlb
dec
hlt
and
cmp
lds
dec
cmp
rclb
push
cmp
xchg
insb
pop
pop
cmpsl
push
stc
cmp
mov
es
movsb
cmp
mov
add
daa
mov
aad
popf
xor
add
cmp
out
mov
insb
mov
or
mov
sub
iret
dec
mov
xor
or
mov
mov
xlat
test
dec
mov
stos
xor
popa
adc
outsb
stos
call
fmuls
mov
lret
or
push
aas
dec
call
jae
inc
dec
jecxz
push
inc
push
dec
lcall
push
shlb
fsubrl
pop
gs
or
mov
into
loope
rorl
sbb
lods
pop
leave
mov
mov
mov
pop
mov
fsubrp
or
ja
xor
mov
popa
xor
add
sahf
arpl
es
xchg
movsl
movsb
sub
pop
stos
imul
iret
or
push
les
mov
aad
xorb
xor
punpckhwd
sti
add
mov
inc
pop
inc
sub
or
inc
mov
lcall
jg
add
mov
push
into
test
push
mull
testl
xor
pop
jno
pop
mov
jmp
test
or
lretw
push
ss
mov
imul
in
push
cmp
xchg
or
insl
or
push
in
add
xchg
lea
into
negl
lea
add
or
dec
and
and
lret
enter
lods
cmpsl
cmp
cs
lock
inc
scas
xor
pop
das
shrl
add
pushf
inc
insl
pop
xchg
mov
add
dec
pop
mov
and
xchg
push
aas
xchg
or
push
iret
mov
out
xor
xchg
cli
and
fchs
frstor
inc
jo
mov
clc
push
lea
aam
das
das
mov
cmp
push
jno
rorl
fisttpl
idivl
push
mov
mov
xorb
xchg
mov
mov
sub
fcoms
mov
sti
rcrl
sbb
movsl
pop
mov
xchg
es
xchg
xchg
jbe
inc
jmp
adc
sub
in
dec
adc
dec
movsl
mov
jp
mov
push
mov
and
add
jp
int3
iret
sbb
sub
lcall
mull
lds
inc
push
xlat
xor
or
lcall
adc
sub
mov
out
adc
and
mov
or
push
add
into
sbbb
sahf
mov
dec
or
lds
sub
clc
mov
test
and
outsl
fcmovbe
js
add
push
xchg
xor
pop
cmp
push
out
fists
dec
push
pop
shlb
jge
rcrb
sbb
xchg
mov
out
inc
push
das
ret
jmp
pop
mov
mulb
shlb
xchg
mov
fs
xor
fnsave
movb
xchg
mov
je
jecxz
int3
hlt
inc
shl
mov
sbb
jmp
pop
add
jge
int3
adc
insb
rcrb
dec
je
jns
lahf
imul
lcall
pop
dec
adc
rclb
mov
pop
clc
fisubs
data16
movsl
adc
mov
xor
xor
push
dec
ja
test
daa
sbb
cmp
subl
jmp
arpl
js
mov
dec
sub
or
rclb
push
push
add
aas
jo
jbe
lods
inc
mov
add
in
adc
pop
cmp
or
adc
mov
jp
data16
lret
sub
cmc
mov
or
xchg
mov
sahf
scas
aam
push
in
outsl
pop
imul
cmp
jge
mov
fwait
adc
icebp
pop
mov
cs
arpl
mulb
inc
add
jo
add
cmc
sub
mov
out
pop
jae
ret
dec
clc
xchg
in
jnp
mov
fmuls
shll
inc
sahf
dec
xor
fidivl
mov
lea
in
std
lcall
sub
inc
adc
gs
ja
test
inc
mov
fs
jo
add
arpl
and
pop
lds
xor
lahf
fimuls
adc
daa
adc
fs
inc
aad
mov
test
mov
in
cld
lcall
aaa
dec
lods
out
mov
xchg
lea
adc
or
mov
xchg
adc
lret
lahf
adc
ret
push
les
inc
xor
movsl
cld
inc
jae
arpl
cmp
jmp
cwtl
test
dec
and
test
lret
jmp
xor
in
dec
dec
mov
mov
xor
inc
dec
jnp
fwait
mov
xor
je
pop
sbb
es
lds
movsl
jne
insb
pop
int
mov
push
aas
aad
cmp
aam
insb
or
out
test
xchg
out
sub
push
outsb
lock
repnz
fcomps
and
in
test
mov
ret
loope
movsb
fiadds
in
ret
inc
mov
xchg
adc
sbbl
popf
or
jnp
xor
mov
inc
cltd
stos
test
jp
dec
negb
dec
mov
stc
cmp
test
mov
push
dec
fwait
addl
sub
push
adc
in
xor
mov
out
cmc
cmp
movzwl
or
out
rol
mov
mov
dec
xchg
jp
outsl
jnp
ret
stc
shrl
inc
and
pop
jbe
pop
nop
fdivs
xchg
jge
clc
inc
adc
fldt
cmpsl
nop
popf
mov
mov
inc
iret
inc
std
push
push
call
sbb
mov
mov
and
xchg
cmp
sbb
ret
pop
rolb
mov
shl
cwtl
xchg
shrb
or
adc
cmp
dec
mov
rcl
dec
pop
push
adc
pop
xchg
mov
inc
sub
fwait
stc
in
sti
adc
xlat
sub
imul
dec
push
popf
imul
mov
outsb
loope
inc
daa
jl
aaa
flds
ficomps
adc
lock
dec
popf
repnz
xchg
in
jecxz
and
mov
aad
xlat
hlt
into
push
push
push
jp
sarb
jae
jg
lret
mov
ss
enter
mov
mov
pop
jg
lock
in
push
mov
mov
mov
push
test
pop
add
push
push
scas
movl
mov
jl
inc
imul
sub
imul
ja
fistpl
pop
pushf
add
dec
data16
pop
in
xchg
mov
inc
adc
xchg
lret
sbb
dec
inc
das
xchg
mulb
push
lds
shlb
sub
je
lods
mov
pop
fsubrs
jbe
jge
xchg
decl
mov
cmp
sub
mov
jne
push
aam
shlb
pop
jns
fsubl
aas
imul
push
fwait
push
test
fimuls
and
xlat
clc
and
lahf
lods
repz
adc
adc
iret
mov
sub
ss
aaa
push
aas
inc
push
outsl
aaa
sbb
popa
sub
jmp
jo
sub
int3
xchg
imul
mov
lahf
std
adc
andb
cmp
out
test
imul
xchg
into
jmp
loopne
jecxz
movsb
lds
nop
fmuls
fisubs
inc
iret
jns
dec
nop
and
gs
int3
pop
sahf
dec
ja
and
mov
decl
dec
inc
lcall
push
mov
jae
lret
mov
pop
lcall
aam
fnstcw
fucomi
xchg
lss
je
je
pop
xchg
les
inc
mov
dec
outsl
mov
lods
popa
add
pop
xchg
jg
jnp
faddl
testl
test
cltd
adc
in
lret
iret
ja
mov
push
mov
fimull
cmp
int3
cmp
push
or
dec
pop
xor
repz
out
mov
jbe
jl
roll
push
mov
stc
fwait
aas
enter
arpl
ffree
add
ss
pop
lock
xor
jg,pt
popa
leave
pop
in
out
pushf
pop
jmp
pop
dec
push
test
mov
lahf
std
mov
aas
fdivp
repnz
mov
inc
jp
cld
sbb
pop
dec
stos
fs
test
mov
xchg
movsb
or
jns
clc
dec
and
push
jg
cmp
test
loope
and
mov
movsl
pushf
and
jge
and
aam
les
dec
or
lcall
or
das
adcb
push
fdiv
sti
mov
cwtl
jo
test
jbe
or
sub
inc
js
sbb
adc
xchg
cmp
aaa
sub
add
xchg
enter
push
aam
pusha
rclb
inc
inc
adc
fs
fs
xchg
nop
ret
inc
push
cs
or
and
dec
add
ret
xor
or
lahf
pop
fstps
shl
add
addb
sub
mov
out
stos
cmp
lds
jmp
mov
add
fwait
mov
mov
fcomps
into
pop
mov
ficomps
enter
xchg
movsb
aaa
sarl
mov
loopne
or
shrb
xchg
push
test
fld
js
pop
push
clc
in
jbe
jp
cltd
pop
jns
rorb
idiv
in
lahf
pop
lahf
jno
pop
cli
bound
enter
sbb
jb
loop
mov
and
aaa
mov
xchg
aas
repnz
mov
lea
insb
cmpsb
inc
add
and
mov
add
sbbl
lahf
sbb
call
call
iret
jae
lret
rcl
fldl
loope
leave
ja
or
cs
testl
popf
scas
xlat
loope
dec
jbe
mov
repnz
lock
lea
mov
cli
scas
cli
add
repz
jnp
mov
ret
mov
andl
stos
jmp
or
sarl
mov
add
xor
out
je
sub
call
out
shlb
cmp
sbbb
cmp
jo
cld
sbb
fidivrl
mov
pop
insl
push
add
mov
jbe
push
mov
call
ret
pop
test
cmp
pop
dec
movsb
mov
pop
jp
mov
xchg
inc
fdiv
mov
stos
jne
iret
and
inc
mov
adcl
ret
aad
cltd
aaa
fcmovnu
push
lret
cli
jnp
jne
push
xor
flds
cmp
inc
loop
out
mov
cli
mov
pop
mov
adc
mov
xchg
pop
clc
hlt
jb
ret
jne
dec
mov
stos
xchg
xchg
lcall
in
sbb
lcall
adc
psubw
or
movsl
jae
push
add
xor
cmp
mov
push
cmpsl
out
jnp
out
mov
jmp
mov
pop
sbb
imul
add
xor
mov
mov
ret
mov
out
fisttpll
xchg
jbe
dec
or
sahf
sbb
leave
int3
sub
ds
movsb
je
jl
stos
fs
xor
and
xchg
cmp
inc
dec
add
cmp
jns
cli
setbe
sti
jae
int
int3
adcl
fcmovnu
push
fwait
mov
hlt
sbb
sub
lock
push
scas
cli
out
adc
inc
xlat
xor
data16
movsl
push
mov
push
lret
enter
aas
std
adcl
push
mov
jbe
dec
shll
insl
jb
sti
jns
dec
call
pmaxsw
adc
into
push
adc
mov
fst
mov
mov
lods
mov
jl
bnd
fprem
in
adc
stos
or
insb
add
mov
dec
popf
mov
or
movsl
ljmp
mov
adc
add
aas
xchg
ret
mov
pop
sub
sti
stos
and
ljmp
push
jg
push
pop
lea
divl
cmp
xor
jl
cmp
leave
or
daa
adc
push
push
into
add
push
and
and
int3
mov
mov
xlat
jecxz
dec
movsb
dec
inc
add
ret
xchg
fildl
in
scas
rol
mov
fcompl
cmpsl
jecxz
or
push
in
dec
icebp
loope
cmpb
xchg
push
popa
and
cmc
dec
jo
xchg
test
movsl
pop
mov
out
add
sbb
addb
les
in
mov
ljmp
popa
hlt
cld
pop
in
mov
sub
adc
and
cmp
mov
mov
adc
lock
cltd
bound
sub
jmp
mov
mov
sbb
rorb
and
flds
mov
imul
enter
cmp
cmp
jp
enter
jecxz
aaa
mov
pop
mov
and
insb
popf
mov
cli
test
out
jmp
push
stc
call
imul
arpl
adc
rcrl
push
mov
sbb
mov
pop
fmul
inc
test
in
cmp
lods
mov
imul
pop
ja
pop
test
scas
mulps
pop
sbb
adc
loop
mov
pop
fmul
dec
cmp
out
pop
mov
movsb
or
aad
mov
mov
imul
jo
jp
dec
test
inc
add
and
nop
aas
dec
cli
std
add
mov
daa
adc
adc
xor
test
outsl
pop
sub
cmpl
movsl
inc
add
movsb
dec
rcl
sti
out
popf
fimull
xor
lret
loop
pop
mov
push
cltd
mov
mov
fimull
mov
jnp
insb
inc
and
andb
data16
and
addb
fsin
or
jecxz
fwait
xor
dec
js
imul
sub
enter
cmpsb
lcall
fs
mov
inc
jmp
jbe
cmp
ficoms
mov
je
sub
or
movsl
xchg
or
orb
cmp
sti
or
mov
lea
imul
add
std
enter
push
dec
outsl
adc
mov
icebp
adc
lods
add
les
mov
mul
pushf
xchg
fsub
in
push
add
jp
mov
scas
cmp
clc
jmp
dec
xchg
scas
lcall
jae
jl
divl
pop
aas
inc
push
fdivp
int
push
popf
addr16
mov
cmp
inc
fldcw
jle
sub
pop
movsb
push
inc
sarl
pushl
xchg
inc
mov
adc
leave
jns
xor
xor
sbb
aas
dec
int
xchg
sbb
out
xor
pushf
mov
ljmp
xchg
stos
int
das
lahf
push
decb
out
outsb
cmpsl
cld
sub
dec
inc
jb
inc
xchg
outsb
mov
mov
shlb
loope
sub
push
cmp
sub
cmpsl
sub
repz
jle
iret
cmp
popa
ret
aas
dec
lcall
adc
pop
push
xchg
add
jno
pop
enter
mov
jbe
add
enter
mov
loopne
jl
xor
neg
fadds
cli
sub
js
out
out
cmp
mov
push
jo
inc
or
lods
sub
pop
fisubrs
loop
xchg
notb
dec
jbe
add
in
push
fldt
sbb
pushf
pop
subl
push
dec
xor
push
lods
pop
mov
sti
or
add
nop
arpl
fidivs
push
jp
sub
xor
mov
inc
lcall
lods
or
pop
push
fwait
xor
inc
xchg
test
mov
mov
mov
shlb
xacquire
sub
sbb
mov
xor
adc
push
sub
stc
ret
or
pop
int3
jo
mov
movsb
add
sub
repnz
jae
cltd
sbb
jb
insl
and
repnz
jno
inc
mov
lcall
or
stc
xchg
fcompl
cli
pmovmskb
sbb
out
lcall
jno
mov
sub
dec
xor
rcrb
cmpsl
movsb
cmc
adc
les
sbb
int3
mov
xor
popf
stos
cmpsl
push
xchg
test
or
mov
mov
or
gs
stos
fnstcw
jnp
pop
je
cli
cli
dec
pusha
loop
sti
adc
xor
and
mov
out
jae
sub
jbe
sub
dec
pop
mov
ret
mov
jo
sbb
xor
cmp
dec
dec
test
dec
mov
mov
jmp
cmpsl
add
or
xchg
pop
bound
les
add
loop
aam
mov
jne
mov
sahf
rorb
fwait
pop
mov
addl
push
test
sub
into
jge
inc
testb
lret
xor
inc
dec
rcrb
add
xor
imul
xchg
dec
cmp
test
mov
dec
pop
adc
ret
xor
mov
pop
stc
dec
xchg
sbb
clc
or
mov
xor
ljmp
rclb
stos
push
mov
adc
adc
in
dec
push
add
pop
addb
lcall
test
mov
mov
push
mov
mov
push
out
push
cmp
or
cmp
int3
jbe
outsl
mov
in
push
mov
rcll
add
xchg
sbb
dec
adc
mov
push
cmc
dec
es
mov
js
mov
dec
xchg
mov
cmpl
inc
cwtl
dec
rclb
shrl
push
push
clc
cmp
jmp
jb
lods
jl
push
mov
add
adc
push
xor
aad
jns
scas
mov
push
je
lock
xchg
sub
ret
inc
stos
jno
cmp
push
jle
loope
filds
add
push
bnd
imul
or
xor
stc
jo
or
dec
xchg
pop
adc
pop
xor
inc
mov
lret
xor
call
roll
rol
movsl
inc
out
mov
and
out
jno
pop
cmpsl
cli
xlat
pop
pop
sbb
fistl
shr
dec
test
push
dec
sbb
inc
or
scas
mov
xchg
xchg
leave
sbb
inc
sub
or
jg
xor
jbe
enter
repz
outsl
add
dec
xchg
fldenv
ds
mov
repnz
xor
cld
out
xor
imul
rol
lcall
cmp
sub
dec
data16
sti
pop
inc
xchg
enter
ret
out
sub
movl
inc
mov
jo
enter
xchg
xchg
xor
pusha
ret
inc
std
xchg
dec
push
addr16
jbe
and
call
dec
push
jge
icebp
sti
mov
stc
jmp
adc
pop
pop
pushf
mov
ljmp
fbstp
jecxz
mov
adc
sbb
mov
inc
into
mov
mov
fnstcw
and
lret
int
sbb
xchg
lds
lock
pop
fisttpll
push
push
sbb
loop
dec
xchg
pusha
push
push
xchg
mov
inc
inc
jno
mov
in
mov
stos
add
repz
xchg
cltd
pusha
sbb
shrl
mov
adc
add
aam
lahf
mov
pusha
mov
sbb
adc
or
mov
inc
adc
jmp
sbb
jno
fists
int
inc
xor
add
icebp
mov
xchg
mov
sbb
jp
inc
mov
pop
mov
jb
jb
xchg
cltd
arpl
sbb
js
lock
fisubl
js
mov
into
clc
ret
dec
xchg
push
dec
dec
push
insb
adc
daa
sahf
movsl
cmpsb
push
es
jb
xchg
pop
lock
dec
aam
mov
imul
popf
mov
or
int
push
push
out
addr16
mov
ret
iret
inc
add
push
shlb
scas
out
int
arpl
aam
dec
rorl
xchg
jmp
dec
pop
add
push
push
sbb
xchg
int
pop
dec
jns
dec
rcrb
fcompl
mov
mov
sub
jmp
outsb
sbb
outsb
int
mov
pop
xchg
adc
stos
adc
mov
adc
add
or
sti
jle
mov
xchg
in
iret
jmp
push
mov
push
aaa
in
popl
fs
cmp
fwait
incl
fucomp
dec
stos
jns
dec
mov
mov
sar
stos
pop
cld
or
pop
add
lahf
sub
popa
out
and
push
push
jecxz
xor
lods
popa
cmc
cli
in
xchg
shrl
sub
arpl
pop
inc
inc
sub
jns
and
sbb
mov
std
push
stos
dec
cltd
sti
das
hlt
shll
in
int3
js
inc
es
iret
mov
jb
and
cltd
cmp
push
jno
cmpb
add
stos
sti
adcb
cmpsl
xor
popf
mov
lret
bnd
std
mov
pusha
mov
data16
add
jns
sub
cmp
sahf
fisttpl
xor
gs
lock
ss
cmp
sbbb
daa
mov
mov
loop
dec
fsubrs
xchg
aaa
pop
inc
inc
lods
outsl
sub
gs
pop
xchg
lods
aaa
in
jmp
scas
pop
adc
inc
sahf
fldcw
aam
fstpt
jns
jnp
add
roll
popa
outsl
push
xlat
mov
scas
jae
mov
or
xor
inc
xor
xor
loopnew
jmp
add
loopne
aad
repnz
stos
dec
fucomp
mov
inc
adc
cmpsb
mov
mov
es
hlt
pop
out
mov
shll
sub
out
sbb
xlat
push
mov
mov
je
sbb
js
xchg
setp
xchg
fldl
leave
scas
in
push
mov
scas
inc
testb
ja
sbb
add
cmp
mov
mov
inc
mov
fbstp
lcall
push
push
lret
or
lcall
loopne
inc
mov
jb
mov
sbbl
pusha
cmp
repnz
rcll
test
sub
cmp
and
cwtl
cltd
outsb
sbb
popl
mov
jmp
dec
roll
or
and
mov
in
dec
fwait
xchg
mov
and
inc
pop
and
das
incb
aaa
adc
or
xor
sub
mov
cmpsb
sti
add
inc
out
fildl
push
push
sub
pop
fldt
arpl
mov
push
adc
push
mov
push
sbb
jo
and
mov
aaa
dec
shlb
psubb
rcr
cli
int3
dec
mov
jne
arpl
dec
mov
pop
icebp
lahf
mov
pop
xchg
or
mov
pop
xchg
add
or
es
lods
pop
sub
cmc
dec
not
push
jns
das
lods
icebp
orl
mov
cmpsl
and
mov
lock
jb
pop
pop
inc
movsl
cmp
stc
jbe
aas
ds
and
mov
sbb
ret
in
or
sbb
insl
sbb
jno
ds
aad
or
xor
outsl
mov
fdivrs
jne
popf
mov
imul
rol
loopne
jecxz
mov
cmpsl
sub
sti
mov
mov
adc
sbb
mov
pop
pop
add
ror
icebp
xchg
cmpsl
mov
jbe
push
loope
mov
or
in
sti
hlt
js
in
lds
mov
add
dec
push
sbb
xchg
arpl
mov
jne
mov
dec
xchg
adc
ja
and
mov
adc
fcoms
ret
test
mov
je
aad
mov
mov
cs
and
stos
test
ret
dec
mov
xor
test
ss
ret
pop
pop
shl
mov
lahf
daa
icebp
ljmp
or
shll
fwait
imul
movsl
mov
xor
in
xchg
ss
jge
lods
pushf
fadd
lods
mov
cwtl
pop
out
or
jae
mov
std
mov
aaa
repz
shl
mov
dec
sub
fstpl
xlat
cmp
test
inc
xor
in
insl
ret
loope
int
clc
repz
sub
iret
pushf
mov
daa
shr
pushf
or
shrl
fwait
jns
dec
jns
jne
fidivs
dec
add
sub
mov
int
imul
sub
jecxz
xlat
int
lea
pop
add
insl
fdivrs
add
lea
jmp
popf
xchg
dec
mov
inc
sub
dec
mov
int
jbe
lods
movsl
js
add
cmp
mov
mov
push
stos
jmp
jbe
cmp
fcoml
notl
pop
push
pop
pop
in
fadds
sub
push
inc
dec
push
ss
clc
in
dec
ret
xchg
dec
shlb
xor
outsb
in
jns
mov
push
decb
cs
jge
inc
mov
or
lock
sub
xchg
outsb
push
addr16
fistpl
adc
xchg
pop
stos
adc
test
stos
push
ja
mov
inc
inc
lods
jbe
fdivp
in
subl
fadd
movsb
adc
mov
test
adc
jecxz
les
pop
nop
outsb
insl
mov
mov
and
es
ret
loopne
pop
dec
cmpsl
jb
fistl
fiaddl
xor
das
icebp
sub
hlt
xor
pop
push
xchg
dec
nop
aaa
stos
pusha
mov
movsl
jmp
mov
cmpsb
cmp
mov
fldcw
cmp
ss
push
xlat
add
add
push
sbb
lds
and
pop
pop
je
mov
icebp
add
ret
and
dec
xchg
xchg
clc
cmp
popf
jnp
lods
mov
mov
push
push
sbb
repz
xor
cmpsb
cltd
or
ljmp
dec
mov
mov
mov
jle
jb
cld
test
pop
leave
pop
or
gs
fdivrp
shl
mov
pop
ds
movsl
std
subl
xchg
add
lret
lcall
shll
mov
imul
rorb
add
stos
repz
out
cmp
pop
cmp
pop
gs
sub
push
sub
loope
test
mov
jl
fimull
mov
dec
fists
adc
xor
out
add
out
adc
dec
mov
js
adc
pop
xor
mov
lea
cli
dec
dec
xor
inc
roll
push
in
sub
dec
bound
ljmp
adc
sbb
shlb
and
cld
add
je
movsl
xor
fcomps
inc
sbb
in
and
cld
and
cmp
xchg
stos
adc
enter
xor
daa
adc
dec
push
mov
les
cwtl
ror
sbb
hlt
pushf
xchg
in
std
popf
cwtl
aaa
out
or
sbb
test
imul
test
inc
inc
fwait
mov
es
aad
mov
xlat
sub
popf
out
gs
inc
mov
sbb
pop
das
stos
fmuls
cmp
or
adc
jo
pop
cmp
cmp
jae
push
xchg
xchg
pop
mov
add
push
mov
xchg
jbe
lcall
aad
dec
xchg
mov
jae
sbb
mov
add
cmc
jg
sub
dec
outsb
ja
cli
mov
imul
sub
test
dec
jmp
nop
sbb
push
into
out
roll
inc
outsb
mov
cld
lret
xchg
cwtl
outsb
repz
push
into
sti
fnsave
pop
xchg
cli
aad
je
shrb
jmp
and
pop
hlt
add
sbb
xchg
out
dec
sbb
mov
cmp
aad
adc
andl
and
mov
cltd
scas
dec
push
ret
mov
lea
cmp
pushf
stos
stc
stos
incb
mov
mov
jp
mov
pop
in
shrb
mov
dec
and
xchg
push
int3
out
stc
ficoml
cmpsl
dec
adc
inc
add
in
xchg
add
decb
jae
inc
xorb
mov
push
loope
dec
inc
jecxz
js
fwait
xchg
or
aas
std
pop
test
in
push
in
jo
in
mov
cmpsb
inc
mov
mov
dec
pop
inc
aad
push
sbb
arpl
add
test
shlb
or
shll
ret
fbld
and
insb
cld
dec
jnp,pt
push
sbb
mov
jge
add
dec
scas
adc
lods
stos
dec
xchg
repz
adc
lds
and
xor
push
scas
sub
popf
jp
flds
in
rcrl
sub
sar
xor
mov
jp
das
mov
and
mov
jo
or
cmc
and
lahf
and
cmc
push
lcall
pop
call
gs
jb
sti
mov
xor
add
insl
pop
mov
lock
outsb
xchg
adc
call
pop
mov
mov
xchg
icebp
mov
pop
es
pop
ss
test
addb
inc
hlt
int3
std
push
js
mov
jno
aam
xor
mov
mov
pop
ret
cmp
push
iret
mov
pop
mov
ss
test
cltd
inc
and
cli
mov
jle
push
sti
fisttpll
jg
sub
cmpb
sarb
xchg
stos
sub
jecxz
mov
or
push
push
add
jp
xor
mov
mov
in
xor
xchg
dec
jmp
insb
mov
in
xchg
sbb
mov
mov
sbb
lcall
sti
sbb
shll
cmp
aad
in
enter
dec
add
and
movsl
fld
xchg
test
fisttps
lods
push
sti
pop
hlt
or
xchg
shlb
cmc
les
jnp
test
imul
or
ret
mov
jp
lret
repz
and
repnz
popf
into
pop
and
and
movsb
mov
cmp
pop
jne
push
jbe
enter
stos
pop
pop
aam
in
jmp
mov
pop
addr16
fmuls
xorb
cmp
lcall
inc
in
lret
faddl
mov
sar
or
xor
daa
loop
xchg
pop
bnd
mov
ficoml
insb
and
movsb
dec
or
popa
addb
adc
imul
and
loop
mov
mov
call
gs
or
cmp
ljmp
shlb
and
out
or
xchg
add
cltd
stos
mov
ret
into
lahf
push
add
or
jle
cmpb
jb
addb
popa
pop
sbb
jne
inc
cmc
pushw
popa
xchg
and
ret
jbe
push
sub
das
jmp
lds
rcrl
fwait
jmp
dec
push
imul
adc
cmc
jp
cmp
jae
aas
adc
outsl
popa
clc
mov
insb
mov
dec
sarl
leave
cmc
push
test
ficomps
clc
test
cmp
ljmp
lds
enter
cld
in
mov
xchg
jg
mov
mov
add
mov
stos
dec
testl
adc
fwait
insl
repz
dec
mov
js
push
rolb
mov
jb
sahf
pop
shl
fwait
jmp
or
testl
mov
ja
mov
adc
fdivl
xchg
faddp
pop
lret
adc
lods
sbb
sti
lahf
ret
ret
mov
jecxz
inc
jmp
push
out
inc
mov
mov
ljmp
fwait
mov
pop
mov
fists
dec
ja
push
je
pop
xchg
or
leave
dec
mov
int
fimuls
xchg
std
dec
add
sbb
cmp
aad
sbb
rolb
xchg
ds
lds
push
jge
ds
xchg
shr
add
aam
or
dec
cmp
push
nop
xchg
pop
mov
das
shlb
inc
inc
jecxz
xor
xchg
iret
fstps
push
jns
dec
shl
loopnew
or
lods
je
stos
dec
pop
sti
sub
xchg
es
mov
xor
or
xor
rolb
xor
lret
cltd
push
jae
std
mov
int
int3
pop
sti
loopne
xchg
mov
rcll
and
mov
push
mov
jne
scas
shl
mov
xchg
mov
adc
fwait
push
fwait
mov
xchg
jp
fldln2
pop
pop
sub
in
jmp
dec
in
pop
hlt
and
test
sub
cltd
mov
sbb
mov
inc
dec
adc
pop
or
adc
push
sbb
popf
xor
stos
xchg
movsb
xchg
add
enter
cli
aam
pop
dec
out
xchg
and
mov
inc
xchg
jno
aas
sti
xor
inc
ret
mov
rorb
cmc
sbb
push
shlb
inc
dec
and
push
cwtl
in
and
mov
stc
xchg
and
std
mov
xor
decb
jbe
loopne
inc
ja
xchg
adc
aam
adcb
sbb
out
roll
jmp
sub
fwait
lahf
stos
bound
scas
xor
mov
xchg
iret
and
mov
imul
push
xchg
sub
icebp
lock
bound
cmp
pop
jnp
aas
ss
lahf
jbe
add
jo
mov
jp
in
into
mov
adc
adc
dec
stos
ljmp
movsb
mov
call
pop
stos
and
addr16
or
inc
cwtl
repz
mov
push
movsl
sub
gs
cli
push
xchg
stos
into
mov
xor
cmp
or
shlb
mov
popf
lock
inc
xchg
jmp
lahf
mov
xor
pop
jo
and
jg
jmp
jne
push
mov
push
test
jne
ret
dec
lds
xor
sub
jo
push
lods
nop
mov
int3
sbb
lret
sub
daa
cli
jbe
shlb
fdivrp
sbb
icebp
dec
sub
fdivl
xor
lcall
mov
clc
sar
sbb
int
shlb
loopne
out
hlt
aas
ss
cld
xchg
and
fdiv
vxorps
repnz
sbbl
xchg
dec
sub
jno
inc
mov
push
pop
scas
das
mov
fwait
mov
ret
jle
sbb
jb
or
das
je
mov
jl
rclb
les
cmpsb
mov
pop
push
jg
mov
mov
xchg
gs
rcrl
xchg
mov
cmc
add
lret
dec
cld
test
enter
add
cmp
in
and
add
cmp
popa
test
pop
cmpsb
imul
jl
imul
sub
push
mov
ret
fisttpl
out
lea
ret
xchg
inc
dec
xchg
mov
jae
subl
in
jne
jl
push
add
push
rorl
mov
xchg
cltd
das
mov
into
xchg
sbb
push
test
jg
mov
fists
mov
pop
movsb
int3
xchg
aam
rcrl
or
addr16
inc
or
mov
sub
xchg
frstor
inc
xor
stos
xor
in
out
push
add
sahf
adc
jnp
dec
xor
int3
jb
fcompl
das
scas
adc
sahf
mov
add
sub
dec
push
addr16
popf
sbb
jg
xchg
cmp
and
push
movsb
in
adc
jne
mov
fwait
sbb
dec
add
and
rcrl
insl
mov
lcall
lea
xchg
jae
jecxz
aas
jne
add
xchg
sub
push
das
or
rolb
jns
clc
in
jp
test
addr16
pop
into
scas
stos
inc
and
adc
mov
xchg
lods
xchg
cwtl
push
orb
sub
hlt
daa
push
add
mov
mov
mov
sbb
je
cltd
loope
mov
sbb
test
iret
lods
xchg
adc
mov
mov
jmp
shll
or
xchg
out
lahf
cld
sub
push
lods
sahf
mov
scas
mov
pop
outsb
xchg
mov
repz
push
mov
dec
lods
sbbb
bound
ret
ss
sbbb
fnsave
shll
mov
sahf
lret
shlb
js
push
pop
push
out
add
sarl
out
xor
pop
lock
sbb
out
stos
dec
out
or
icebp
adc
lret
insl
pushf
insb
cltd
jecxz
in
xchg
in
stos
or
and
iret
pop
shrb
cwtl
dec
xor
scas
push
js
imul
dec
push
pop
out
lock
cli
push
sub
cmpl
push
nop
xchg
rorb
daa
sbb
loopne
lret
out
cld
sub
stos
cmp
outsb
or
push
mov
adc
sahf
rcr
pop
sub
cmc
xor
dec
push
cmp
ljmp
cmp
insl
xor
or
mov
mov
leave
push
or
ja
inc
cmp
xor
push
sbb
sub
fsubrs
adc
cs
push
push
test
jmp
shrb
mov
mov
sahf
lods
scas
sbb
push
xlat
adc
rcll
sbb
mov
jae
popa
pop
adc
mov
or
mov
enter
inc
xchg
or
jge
cmpsb
cmp
dec
sub
cmp
pop
sbb
pop
inc
je
mov
pop
in
and
jnp
add
push
ficomps
push
add
mov
shrb
insb
push
inc
jg
jl
loopne
mov
push
push
and
or
ss
adc
gs
add
xchg
ret
cmp
inc
gs
mov
push
sarl
xor
sub
mov
pop
sbb
sub
lret
hlt
stos
or
fs
mov
inc
out
mov
cltd
adc
cli
xor
adc
das
call
push
cmp
int3
out
adc
ds
pop
and
ss
and
pop
inc
xor
int
xor
pop
fimuls
mov
mov
scas
popf
shl
dec
mov
push
mov
pusha
inc
and
outsb
fucomip
pop
sbb
mov
and
int3
inc
jl
jne
push
mov
scas
negl
jl
call
adc
lret
lcall
mov
or
xchg
sbb
sub
xchg
push
in
mov
lcall
inc
cltd
fdivrp
and
jb
jmp
cmp
int3
push
jb
je
outsb
xchg
add
lock
mov
fucomip
jle
xchg
jb
lcall
inc
xchg
adc
sub
add
add
or
test
lock
sub
fists
enter
mov
test
or
movsb
sbb
cmc
movsb
dec
mov
xor
leave
aam
insl
push
dec
inc
rcrl
mov
test
mov
fisubl
xor
leave
out
xor
insb
pop
or
mov
mov
inc
jle
push
sub
paddsw
in
sti
jne
fcoms
mov
fmuls
out
es
mov
ss
repz
mov
dec
cltd
dec
shlb
xor
jl
ss
dec
xchg
mov
add
pop
jns
lock
lcall
rcll
dec
popa
xor
in
scas
push
cwtl
mov
dec
cmp
in
enter
mov
sub
xchg
arpl
sbb
rcr
sub
cs
dec
dec
stc
loop
mov
cmc
ds
test
jo
imull
push
mov
adc
sbb
push
mov
jp
adc
imul
mov
shll
adc
loopne
and
les
cmp
or
cmp
or
int3
stos
int
idivl
stos
mov
inc
jl
jmp
push
jle
xor
or
push
inc
mov
add
dec
js
aaa
or
xchg
clc
dec
cmc
incl
repnz
push
lds
add
sti
add
pop
dec
jp
inc
or
lods
stc
push
mov
mov
into
cmp
sbb
and
push
add
idivl
xor
addb
xor
mov
or
pusha
sbb
scas
push
cmp
rcl
imul
stos
icebp
ljmp
fwait
add
mov
lds
rcl
jge
sti
addr16
dec
sub
mov
lret
xor
push
xor
lahf
aas
adc
mov
mov
popl
js
mov
xchg
cmpsl
daa
insl
mov
cs
gs
mov
daa
jb
test
push
xchg
xor
movsb
pop
dec
cmp
mov
dec
imul
jae
cmp
out
loop
xchg
cmp
push
cmc
add
xchg
ret
dec
inc
cmpsb
enter
xchg
sub
aas
ds
mov
mov
mov
lret
cmpsb
or
in
jecxz
in
xorb
fidivl
xchg
mov
xchg
stos
pop
push
jmp
dec
or
dec
pusha
lods
out
icebp
pop
sub
xchg
dec
mov
in
cmc
int3
add
mov
popa
lea
sub
or
mov
push
dec
or
or
pop
push
fmull
fisubrs
arpl
out
shrl
loopne
mov
jno
sbb
clc
jo
cmpsl
mov
into
sbb
push
enter
mov
inc
mov
and
cmpsl
pop
scas
insl
outsb
in
push
jne
in
movnti
incb
jo
push
mov
mov
lret
jb
cld
insl
gs
or
mov
es
sub
adc
pushf
adc
rcrb
push
test
sbb
push
mov
ja
loope
arpl
movsb
stos
push
push
add
mov
add
adc
stos
das
adc
pop
sub
addr16
cltd
addr16
sbb
sub
or
pop
loope
push
xor
sub
and
jae
adc
cwtl
mov
repnz
gs
iret
pushl
fsts
dec
popa
ret
out
enter
ret
daa
and
fildl
adc
cld
mov
orb
pop
jae,pn
mov
test
jp
mov
shll
inc
pushf
daa
adc
inc
lods
jge
inc
or
lahf
mov
lds
push
icebp
imul
cmp
outsl
aas
stos
pop
mov
repnz
push
push
shlb
aad
lahf
jl
jl
sti
jecxz
insb
lods
in
into
dec
jp
mov
xor
mov
sbbb
mov
fidivl
filds
mov
push
es
hlt
mov
jmp
push
cld
in
gs
dec
or
fs
outsl
xchg
movsb
popa
test
adc
aad
ret
fs
rcr
aad
xchg
add
aam
dec
inc
out
mov
xor
stos
sub
cltd
aad
jno
dec
iret
loopne
lods
sub
sbb
adc
in
cli
orl
stc
std
mov
pop
push
xchg
jbe
xor
mov
or
dec
xor
or
testb
sub
xor
jl
sbb
or
out
push
adc
fisttpl
pop
jne
incb
adc
out
aaa
push
in
into
loope
lea
repnz
outsl
mov
pop
int
scas
js
hlt
mov
mov
stos
inc
mov
inc
lods
les
negl
dec
in
and
cmpsb
hlt
and
fsubs
addr16
xlat
add
aaa
or
cmp
and
xchg
cmp
inc
xchg
push
jecxz
repz
inc
cmp
or
adc
cmpb
sub
js
fs
sbb
daa
movsl
jne
lods
jp
inc
shrl
jl
jecxz
das
xlat
jmp
mov
xchg
test
shl
and
imul
mov
mov
je
je
mov
lea
aas
nop
pop
mov
cmp
movsb
nop
pop
sub
nop
aad
sub
rorl
pop
shrl
enter
call
ljmp
pusha
and
scas
jns
mov
popf
nop
sub
test
out
mov
push
lahf
mov
adc
xor
mov
adc
push
sub
stc
push
push
ret
adc
xor
add
jno
sbb
ljmp
outsl
mov
jo
lret
fwait
pop
xlat
xchg
cltd
adc
mov
mov
xchg
mov
pop
adcb
cltd
pusha
pop
out
push
dec
leave
push
and
pop
aaa
shrl
shll
inc
fstpt
pop
adc
mov
sbb
dec
stos
mov
scas
sbb
aas
aam
outsb
mov
pop
sub
xchg
sbb
jo
xor
ljmp
fldt
dec
ret
add
stos
pusha
pop
fiadds
mov
stc
in
ljmp
mov
inc
inc
jo
and
aam
mov
test
out
fcoms
and
test
outsb
mov
cmp
adc
clc
inc
jle
movl
mov
mov
xchg
aaa
int3
inc
push
xchg
pop
mov
stos
cwtl
inc
mov
xchg
jmp
sub
jo
loopne
das
xchg
xchg
ds
and
rcll
xchg
cs
pop
adc
sbbl
pop
mov
ljmp
lods
mov
push
jmp
repz
cs
pop
push
test
fstps
iret
fsubrs
inc
and
xchg
add
add
mov
adc
pop
lcall
jmp
mov
mov
xor
daa
bndstx
pop
ds
out
mov
imull
mov
cmpb
push
bound
cli
dec
fcompl
lret
ret
inc
nop
lahf
lret
fucomi
aam
xchg
test
and
orb
adc
pop
xchg
inc
lret
mov
es
leave
aad
ret
notb
lea
mov
aaa
push
fcomps
std
dec
insb
addr16
adc
dec
shlb
sbb
ret
movsl
or
jg
arpl
bnd
rcrb
pop
xchg
adc
inc
inc
insl
inc
ret
call
imul
xchg
daa
dec
mov
mov
int3
mov
jbe
mov
mov
jmp
call
push
add
pop
js
cmp
jg
outsl
inc
js
dec
gs
gs
pop
jge
stos
lods
lds
xchg
pop
xchg
inc
test
das
repnz
mov
test
cmp
mov
xorl
cs
fstps
popa
mov
ljmp
dec
outsb
cmpsb
sbb
lock
loopne
sbb
loope
mov
shlb
stos
add
loop
mov
cmp
ret
mov
inc
fs
and
mov
out
push
aad
jnp
sub
stc
icebp
mov
into
push
outsl
pop
repz
cld
jp
inc
sub
orl
mov
add
adc
ret
rorb
popa
movsb
imul
add
popa
sbb
ljmp
hlt
cld
mov
push
clc
jge
shll
jg
in
lock
jns
lds
cmpsb
pop
int
repz
roll
adc
rep
add
mov
mov
in
pop
jg
arpl
cmpsl
lret
std
adc
scas
dec
inc
bound
call
add
pop
mov
test
xchg
fs
and
jge
sbb
mul
push
dec
aad
sbb
mov
into
mov
xlat
into
hlt
adc
dec
xlat
lret
mov
loopne
push
jg
sub
sbb
push
push
inc
movsb
fnstcw
mov
popf
sti
ret
bound
in
jnp
lretw
sbb
test
mov
cld
xlat
inc
dec
popa
lea
dec
mov
sub
mov
dec
lods
mov
ja
sbb
mov
xchg
test
push
jns
iret
gs
fidivrs
lret
mov
and
mov
movsl
jg
dec
jmp
leave
popf
mov
shl
dec
fcomip
xchg
faddl
mov
jae
int3
and
mov
mov
cmp
repz
push
sub
jp
pop
imul
outsb
imul
cmpsb
mov
in
sub
aas
imul
cmpsb
dec
cmp
mov
out
mov
lds
xchg
cwtl
mov
pusha
sbb
dec
dec
mov
cmp
xchg
pop
cmc
dec
mov
xchg
push
mov
xorb
and
je
cmp
fnstsw
mov
cmp
cltd
lcall
test
loop
bound
xor
sbb
lcall
pop
mov
pop
call
aad
out
mov
dec
mov
cmp
adc
fidivrs
dec
bsr
lods
push
jnp,pt
sub
pop
sub
mov
fscale
fucomi
sub
push
test
lahf
daa
cmc
sub
in
or
sarl
out
loop
mov
jb
inc
inc
pusha
pop
mov
into
lods
std
pop
movzbl
sbb
cmc
loope
dec
fcomps
call
imulb
out
in
dec
into
pmulhuw
gs
inc
dec
xor
sbb
push
cwtl
enter
out
rol
int3
inc
jne
ja
cmp
xor
jge
adc
int3
and
or
call
ret
es
lret
hlt
push
mov
ret
lahf
jbe
xchg
js
lcall
pop
std
and
jp
mov
pop
adc
jecxz
ljmp
std
loop
stos
les
fildl
pushf
std
pop
in
dec
inc
ss
pop
out
sbb
jo
sahf
out
movsl
pop
into
inc
in
push
aaa
push
add
lea
das
mov
mov
scas
xor
mov
sbb
pop
cmp
sbb
and
mov
aas
aaa
cmp
or
lahf
push
les
xor
jbe
movsl
and
and
adc
add
cld
test
cwtl
jne
mov
movsb
dec
lds
inc
nop
push
add
in
imul
movsl
fstpt
repnz
xor
dec
sbb
leave
inc
js
mov
int
cmp
or
sub
xor
push
adc
cld
lret
shl
ss
add
ror
xchg
dec
int3
mov
or
int3
and
mov
or
popf
xchg
ljmp
dec
jns
mov
xchg
hlt
scas
sti
push
jb
fidivl
sbb
xchg
sbb
outsb
sub
or
stos
push
lret
or
jb
ljmp
insl
or
or
mov
lods
aam
out
xchg
and
andl
inc
push
faddl
cld
pop
aad
pop
cwtl
cmp
dec
or
fsubrs
mov
movsb
arpl
pop
and
sbb
aad
inc
shrb
stos
jb
mov
stos
pop
loopne
and
or
sbb
adc
ret
aad
andl
mov
adc
ret
imul
cmp
lods
or
flds
jo
xchg
dec
inc
xlat
push
out
sarl
or
daa
call
push
adc
cmp
xchg
adc
or
jecxz
pusha
push
mov
mov
push
fsubrl
pop
pop
mov
mov
mov
xlat
fisubrl
mov
cmc
push
daa
clc
lock
xchg
repz
add
shrl
inc
out
loop
xor
adc
and
cli
sbb
sbbb
mov
pop
dec
sahf
and
and
jl
mov
out
in
push
inc
mov
xor
or
test
sbb
push
push
xor
pop
adc
xchg
jne
mov
mov
repnz
xor
je
adcb
mov
sub
add
adc
sub
clc
rorl
pxor
jle
in
sbbl
cltd
mov
inc
fnstsw
pop
mov
pop
cltd
fnstsw
rorb
mov
cmovg
xchg
sub
lock
push
push
pop
jnp
push
imul
pop
mov
jns
pop
dec
xor
jne
push
and
icebp
ljmp
mov
in
movsl
mov
insb
mov
enter
mov
les
lahf
ret
fstl
fstpt
fistpl
xor
inc
inc
scas
sahf
outsl
movsb
stos
lds
cmp
inc
fldl
xor
arpl
push
jl
insb
fiadds
or
stc
add
pop
lahf
sbb
dec
repnz
fcoml
inc
mov
es
lret
and
jo
pushf
push
mov
mov
add
mov
push
inc
arpl
mov
push
jecxz
pop
imul
cmp
aaa
and
dec
inc
pop
adcl
jnp
shlb
sub
xor
int
cli
xor
shl
push
or
push
adc
pusha
xchg
frstor
hlt
cmp
or
and
lods
jbe
adc
jp
arpl
sarb
lret
mov
mov
push
mov
aaa
cmp
popa
imul
hlt
subb
cmp
jmp
lcall
ljmp
fsts
shl
pop
cmpsl
mov
dec
loopne
jl
lahf
imul
aad
clc
iret
call
pop
add
xchg
dec
mov
lock
ficoms
insb
jb
lds
loope
sbb
jl
cmp
jl
xlat
imul
sub
fnstenv
lea
mov
call
daa
adc
add
addr16
mov
insl
jp
mov
pop
add
test
test
clc
fcomps
call
pop
jb
call
out
push
aam
enter
lret
xlat
les
and
arpl
in
mov
ss
fsts
xchg
out
adc
test
std
int3
aas
cmp
out
vsqrtps
jg
mov
stos
and
mov
xlat
call
ret
ret
arpl
into
aaa
sbb
incl
mov
mov
movb
fisubl
or
adc
sub
ret
in
push
jbe
outsl
divb
clc
loopew
fdiv
push
fcmovnb
push
push
scas
mov
call
test
adc
stc
fsubs
and
xchg
or
mov
out
push
shlb
rorl
push
int
mov
movsl
je
in
in
rclb
adc
xchg
cmp
dec
lods
aad
out
into
mov
push
jae
je
mov
stc
or
jnp
hlt
sub
imul
cmc
push
jns
adc
insl
jnp
ja
add
jl
mov
in
sub
inc
push
inc
or
aad
cmp
stos
lock
aaa
mov
push
std
aam
push
adc
popa
or
fsubrs
movsb
xor
pop
rcrb
insl
stos
mov
rcrl
and
sub
or
pop
xor
mov
or
pop
bound
dec
or
imul
mov
mov
jp
xchg
mov
pop
inc
cmp
cmpsb
repz
xchg
adc
subl
aad
dec
std
and
gs
inc
arpl
push
adc
mov
pop
cli
add
xchg
movsb
xchg
cmpsb
inc
out
jmp
stos
imulb
and
push
push
aad
adc
mov
daa
add
or
mov
movsl
or
in
mov
xchg
mov
pop
mov
cld
lcall
adc
push
clc
lods
cmp
sub
and
mov
shr
lock
adc
bt
jge
push
insl
inc
inc
fwait
xlat
adc
xor
icebp
and
cmp
jp
leave
cltd
cmpsl
and
movsl
int
jge
lea
jbe
sbb
xor
jp
push
out
cli
lea
push
pop
adc
ds
xchg
imul
jmp
rorb
cmpsl
push
and
scas
lahf
xchg
jp
and
fsubl
lahf
push
ret
mov
das
stc
inc
push
divb
insl
cmpl
sub
cmpb
clc
inc
inc
pop
cmp
scas
int
or
int3
pop
and
mov
jno
clc
push
push
inc
cld
rcl
or
test
sub
cmpsb
cmp
pushf
sahf
cwtl
sub
mov
data16
lds
nop
jp
pop
aaa
ret
inc
sbb
push
adc
call
jnp
iret
lcall
insl
jne
nop
sahf
xor
mov
in
or
sbb
rcrb
jnp
mov
mov
inc
dec
cmp
subl
orb
fwait
imul
rcll
outsl
aam
and
in
icebp
mov
fcomps
cmp
push
add
mov
push
fisubl
hlt
lret
mov
inc
nop
sbb
lock
xor
mov
or
mov
push
mov
inc
fcoms
push
pop
pop
popa
mov
cmpsb
enter
into
rcll
out
and
outsl
xor
xchg
sets
movb
fsub
aas
pop
xor
rorl
mov
push
cmpsb
icebp
or
mov
lods
int
sbb
aas
jg
frstor
fisubrl
mov
lods
push
fbstp
push
push
popf
pop
mov
mov
fsubrl
mov
pusha
loope
shlb
xlat
insb
test
mov
nop
adc
popa
pushf
dec
enter
inc
mov
cli
adc
je
mov
or
sbb
stos
inc
jge
popf
out
outsb
cmp
cli
jne
cmp
xchg
xchg
jbe
subb
cmpsl
cmp
dec
mov
cli
xlat
stc
fwait
jmp
push
notb
xor
add
and
insb
in
inc
pop
mov
ficoml
inc
hlt
and
add
stos
test
cli
push
pop
or
and
cmc
stc
aaa
xchg
or
xchg
lahf
adc
pop
inc
mov
xlat
mov
fwait
push
jo
ss
xchg
mov
mov
into
hlt
das
jbe
js
xchg
mov
int3
leave
les
std
add
or
mov
sub
cmpsl
xchg
add
cs
jae
mov
inc
and
mov
bound
sub
andl
scas
fiaddl
mov
adc
rolb
rcl
fucomp
or
leave
mov
pop
adc
pop
sbb
sub
sbb
arpl
gs
push
rep
and
int
mov
push
jl
out
leave
mull
xchg
das
test
or
iret
lahf
pop
inc
or
out
pop
je
sar
xchg
lret
pop
sub
mov
mov
loope
notl
add
mov
sbb
pop
or
repz
dec
inc
push
pushf
cltd
lret
loop
mov
adc
outsb
mov
lahf
test
fwait
cld
xor
dec
jecxz
mov
stc
stos
cmp
pop
stos
push
add
and
jl
out
stos
dec
call
test
lahf
push
and
cmpsb
mov
shlb
xlat
clc
lahf
and
xor
ss
mov
mov
aas
out
cmp
jo
jne
jp
pop
push
pop
pop
or
test
stos
movsb
jo
mov
adc
push
xchg
jnp
out
lcall
insb
and
sbb
loopne
ror
pop
add
sbb
xchg
outsl
ds
loope
jo
mov
sub
sub
imul
adc
jp
je
jl
push
mov
or
lahf
dec
push
mull
popa
push
cmpsl
insb
shlb
jb
xchg
repz
call
xor
iret
inc
je
aaa
adc
lock
mov
mov
cmp
movsl
fstps
jne
xlat
scas
jmp
xchg
mov
daa
jno
test
lret
jns
stos
sbb
mov
dec
jmp
sarl
push
adc
jb
add
push
cmp
std
mov
icebp
nop
add
loop
dec
inc
pop
pop
adc
popf
cmpl
pop
cld
push
adc
pop
add
adc
sbb
and
xorb
push
aaa
ss
les
call
pop
cmp
in
or
pop
orl
ret
loope
pop
insl
push
jo
rcrb
stos
pop
add
js
setne
fwait
call
js
xchg
movsb
outsb
pop
stc
jae
cli
mov
in
jo
cld
mov
push
xor
dec
fcomps
mov
repz
lock
pop
jae
sub
mov
aad
aam
pop
or
pop
or
int
mov
test
xorl
test
mov
int3
dec
and
inc
pop
mov
and
pop
and
int3
dec
mov
dec
sub
shl
fs
pushf
imul
addl
scas
mov
aam
les
scas
mov
les
jg
xchg
xor
and
sub
pusha
aad
imul
pop
mov
xor
stc
pop
lret
enter
mov
lock
xchg
loope
add
cmc
or
xchg
in
push
mov
cwtl
xor
ret
in
mov
xchg
jne
hlt
mov
inc
sbb
xchg
and
popa
dec
aas
jp
jae
or
xchg
add
out
mov
dec
adc
and
add
insl
test
and
cwtl
xchg
mov
xor
add
xchg
icebp
jno
pop
sbb
inc
cmp
outsl
lcall
fidivl
loop
int
pop
adc
loope
add
pop
in
jecxz
and
push
cmc
push
aam
pop
leave
sbb
daa
push
mov
push
pop
repz
insl
icebp
inc
out
fs
mov
cs
jae
mov
push
mov
nop
dec
xor
push
insl
sbb
mov
mov
sahf
out
jle
jmp
push
pop
pop
aas
ja
and
out
sarl
cmpsb
mov
mov
dec
fnstcw
pop
jae
sub
mov
and
and
mov
test
xchg
int
lods
rcl
lcall
mov
rcr
in
and
xchg
push
fwait
and
pop
jecxz
cld
ficoms
pop
and
adc
push
or
xor
mov
aas
std
inc
lret
inc
sbb
and
hlt
jp
arpl
push
imul
push
xor
xchg
into
sbb
xchg
inc
test
aad
mov
pushf
mov
gs
out
mov
sub
sub
pop
nop
jbe
scas
outsb
jg
stc
push
inc
ja
cmpsb
loop
into
in
mov
add
jl
icebp
sbb
push
and
js
jmp
pushf
jnp
aas
or
cmpsb
xchg
sbb
sbb
add
in
dec
sbb
shrl
xchg
cld
aam
hlt
imul
pusha
or
je
push
fucom
sbb
sti
dec
aad
out
sub
jnp
xlat
xchg
js
cltd
scas
xchg
daa
imul
test
xor
imul
push
out
push
in
mov
nop
sbb
imul
scas
inc
pop
inc
and
jo
daa
xor
iret
repnz
ds
movb
imul
pusha
push
pop
inc
cmp
xchg
lahf
pop
sub
add
cmc
mov
mov
sub
jg
sub
stc
loopne
lds
loope
imul
sbb
jb
jl
lock
pop
xchg
mov
addr16
push
bound
int3
loop
lods
in
lea
cmc
nop
mov
scas
jnp
jp
aas
cmp
dec
jmp
push
andl
enter
inc
push
mov
or
cmpsl
pop
imul
stos
outsl
add
xor
jle
pop
mov
dec
sahf
or
dec
mov
and
clc
mov
jne
out
lods
push
jnp
aad
cwtl
loopne
insl
jno
pop
mov
inc
popf
and
int
idivb
mov
push
rcr
test
movl
xor
mov
outsl
js
mov
add
fwait
xchg
add
insl
xchg
mov
cmp
pop
ja
out
insb
xor
sbb
sub
and
sahf
pop
jb
pop
pop
call
stc
mov
jb
xchg
ret
das
adc
cltd
jno
mov
aaa
nop
mov
sub
add
sbb
pop
jmp
sti
pop
out
shl
test
jl
insb
js
movsl
xor
mov
mov
sub
add
push
inc
mov
test
push
mov
stos
and
mov
fsubr
mov
not
loope
notb
cmp
ds
push
orl
push
out
rclb
adc
xchg
iret
xor
inc
adc
out
loope
cld
leave
mov
cmp
xor
cmp
rolb
push
stos
call
cmc
add
jbe
js
sti
sub
add
ljmp
lret
mov
stos
pusha
sbb
dec
fnstsw
movsb
negb
inc
js
cmp
adc
jo
dec
pop
mov
pop
or
or
test
add
adc
jl
xor
jmp
lea
push
xor
dec
mov
and
test
insb
cmpsb
addl
enter
dec
and
xchg
and
sub
mov
fmul
jmp
ret
fdivl
jno
sbb
aad
cmp
or
mov
sbb
mov
outsb
es
push
int
inc
inc
or
js
jmp
mov
jo
add
mov
mov
mov
mov
mov
xchg
dec
and
xlat
push
fstps
sub
mov
xchg
cmp
imul
pop
mov
jp
mov
rcrl
adc
gs
pop
mov
push
mov
push
and
push
daa
jp
bnd
mov
lcall
iret
popa
loope
icebp
cmc
loop
cmpsb
and
inc
mov
sub
ds
dec
lret
int3
lea
pop
shll
jo
inc
sahf
hlt
cmp
insb
out
insl
orb
iret
pop
icebp
pop
jp
dec
and
cmpsb
fadds
test
jl
mul
into
jl
int3
xor
ljmp
cmpsl
es
pop
adc
add
mov
mov
daa
leave
gs
sub
mov
jecxz
fildl
dec
std
mov
insb
and
cmp
int
cs
jl
cmpsb
dec
push
cltd
mov
les
stc
leave
fstpl
out
stc
xor
in
cwtl
inc
lahf
sar
sub
xor
repnz
inc
loopne
out
ficoml
jmp
and
test
es
mov
sub
sub
insl
loope
test
std
mov
add
cmp
pop
aaa
jae
aaa
jae
iret
shrb
cs
sbb
jge
push
jle
shlb
js
popa
mov
cmp
or
adc
mov
dec
adc
xor
shlb
jno
ds
dec
sarl
xchg
js
loop
clc
lret
push
push
in
loop
lods
mov
rclb
or
xor
outsb
dec
pop
mov
push
jle
rorb
fldln2
daa
pushf
adc
or
fbld
int
arpl
sti
out
jp
cmp
in
jb
mov
sahf
loopne
mov
aad
movsb
mov
in
pop
push
push
pop
fmull
pop
fidivrl
push
push
mov
push
push
ds
ret
sub
lret
shll
lret
into
xchg
loopne
cmp
test
xchg
cmc
xchg
call
lock
mov
mov
inc
push
out
mov
mov
mov
lods
add
es
out
sarb
dec
sub
adcl
sub
cwtl
addr16
nop
jb
in
mov
in
pause
add
hlt
sti
xchg
shll
add
xlat
rcrl
orl
mov
push
sbb
pusha
inc
shlb
adcb
dec
pop
loopne
cs
ficoms
mov
ds
xchg
std
in
imul
ret
ret
mov
imul
lock
push
xchg
jecxz
fdivr
xor
mov
cmp
xor
out
mov
xor
int3
cli
repz
mov
sbb
dec
add
dec
jle
inc
adc
shl
inc
outsb
xor
out
pop
xchg
inc
pop
push
xchg
out
sarl
test
pushl
popw
cmp
mov
sbb
push
test
jne
dec
fiadds
lock
push
pusha
adc
or
mov
testb
shll
mov
xchg
sbb
test
mov
fwait
popa
add
add
cmp
ljmp
addl
fsubl
ja
cmp
pop
cld
pop
sub
push
or
jns
mov
nop
shr
sbb
out
icebp
cmp
add
out
xor
cmp
inc
sar
ds
pop
cmp
jmp
jae
test
outsl
les
push
into
arpl
das
aad
in
mov
add
sbb
outsb
fmulp
out
add
scas
mov
ss
and
add
fmuls
cmp
adc
mov
mov
mov
xor
out
xchg
rcl
mov
jnp
jno
xchg
fnsave
push
jnp
mov
in
and
push
jle
pusha
xchg
inc
lea
add
mov
call
mov
mov
fcmovnbe
push
xor
mov
cli
xchg
inc
imul
pop
mov
iret
aam
testb
or
or
jno
pusha
sub
dec
into
sub
cmpsl
mov
mov
bound
movsl
jb
or
and
insb
lods
pop
cwtl
stos
adc
jmp
or
pop
shlb
pushl
dec
cmpb
lahf
nop
push
int
jb
in
insl
mov
dec
inc
test
cltd
dec
repz
dec
push
das
inc
inc
daa
loope
int3
xchg
push
popa
adc
out
dec
inc
xchg
in
cmc
and
imul
xchg
mov
cs
push
stc
xchg
div
jmp
mov
gs
test
pop
pop
xor
push
in
nopl
ret
push
xchg
outsb
loopne
push
flds
cmp
and
mov
movsb
icebp
sbb
or
ret
cmpsl
mov
inc
clc
psubsw
xor
das
movsl
gs
mov
add
jg
jno
mov
xchg
popf
shr
xchg
xor
icebp
mov
fiaddl
fsubr
and
xchg
mov
std
imul
cmp
bound
cld
mov
out
loopne
lcall
test
sbbb
mov
imull
mov
jno
and
cmp
or
mov
scas
cmp
pop
hlt
repnz
or
xor
xor
mov
adc
pop
or
dec
in
xchg
add
out
mov
mov
adcl
in
je
in
xchg
cmp
dec
stos
xlat
into
filds
jbe
mov
cmp
push
inc
dec
test
in
hlt
fstpt
xchg
or
movsb
stos
popa
and
pop
mov
lcall
fs
or
mov
sbb
dec
dec
mov
cltd
mov
mov
ret
and
jne
sbb
mov
or
fnstcw
rcll
scas
mov
fadds
push
sbb
shll
cs
xor
lods
loopne
out
es
mov
lret
jmp
cmp
xchg
repnz
add
fmull
les
sbb
push
mov
aaa
jne
ret
popa
lahf
xchg
in
xchg
pop
pop
in
cmp
lret
popa
pop
cmp
push
cwtl
push
cmp
inc
adc
sti
lcall
and
add
testl
pop
fisttpll
ds
pop
mov
fidivrl
stc
xor
push
nop
mov
cmp
icebp
psubsw
or
mov
rorb
jge
xchg
fnstcw
xor
ljmp
sbb
jne
or
sub
xor
xchg
pushf
jnp
jne
in
in
cmp
inc
inc
cmp
clc
sbb
stos
iret
sbb
jno
dec
lahf
pop
loop
ja
fldcw
lds
out
adc
cli
fldcw
mov
or
ja
and
je
aaa
aaa
cmp
pop
push
mov
jo
xlat
cmpb
mov
insl
cli
jb
icebp
stos
cwtl
movsl
add
push
lahf
insl
mov
lret
cwtl
add
push
shr
push
mov
and
cmp
mov
ret
jmp
xor
movsl
sti
notb
add
push
mov
lods
mov
jmp
cld
pop
adc
int3
add
pop
mov
fisttps
rcrb
xchg
sub
enter
lods
mov
aam
std
cltd
cmp
out
adc
lds
pop
jae
mov
push
adc
sbb
pop
push
add
out
adc
sub
pop
iret
add
inc
sbb
fstps
clc
cmpsl
sbb
outsl
mov
mov
fldcw
xor
jle
loop
add
and
fadd
out
jge
fadds
sti
imul
les
hlt
jmp
and
int3
inc
sbb
dec
xchg
push
icebp
cmp
int3
loopne
pop
sub
cmp
dec
in
outsb
jnp
pop
mov
div
out
add
xor
mov
inc
sbb
ja
outsb
enter
pop
shl
pop
pop
lcall
or
push
dec
aas
pop
test
adc
testb
jmp
repz
xchg
cmp
inc
scas
lea
lcall
sbb
mov
lods
dec
divl
sti
imul
in
push
jle
aas
push
jg
push
adc
test
push
leave
mov
jmp
gs
mov
inc
pop
loope
push
or
mov
clc
aad
data16
sbb
das
dec
xchg
jmp
jge
setnp
in
push
fisttpll
or
lods
outsb
add
pop
pop
frstor
mov
lret
ret
cmc
xchg
sub
cwtl
outsb
add
xor
nop
jae
iret
out
mov
fsubs
pop
ja
repnz
add
enter
or
js
iret
push
cmp
pop
dec
pop
sbbl
inc
aad
sub
les
pop
arpl
or
shll
lds
ja
mov
movsl
sti
jg
in
xchg
dec
xchg
mov
scas
lret
fcompl
test
cmp
lret
and
mov
fcomps
mov
mov
rorl
mov
cmp
icebp
je
pop
dec
dec
test
mov
cmp
mov
rcl
mov
in
outsl
mov
jg
sbb
or
test
xchg
clc
int3
mov
hlt
dec
mov
add
lods
sbb
adc
adc
out
pop
inc
in
mov
fiadds
dec
int
mov
mov
out
sbb
je
cltd
pop
xchg
mov
push
je
fldcw
xchg
jns
dec
jl
and
cltd
popf
mov
not
jle
cmp
cmp
mov
jle
mov
lcall
idivl
push
imul
jmp
or
fisubs
jmp
and
and
sbb
orb
sub
push
mov
icebp
mov
xor
xor
cmp
scas
movl
addr16
fbld
inc
pop
mov
shll
add
call
adc
nop
mov
add
clc
dec
andl
lds
cmpsb
ss
dec
ss
enter
mov
mov
push
cli
loop
mov
ss
out
jne
movsb
shld
fisubs
cmpsb
test
mov
sub
sub
je
inc
insb
addr16
and
imull
pop
fildl
pop
xchg
lods
xchg
lcall
cmpsl
adc
sub
dec
repnz
sbb
mov
xchg
gs
sti
jmp
xor
sub
sub
mov
add
fiadds
mov
jb
cmc
jb
inc
add
xor
aam
xchg
insl
mov
mov
andl
lods
shll
into
stos
xor
mov
mov
push
mov
js
mov
sbb
es
add
push
out
lds
push
mov
int3
pop
inc
push
sbb
leave
fnsave
sbb
shlb
sbb
jb
test
icebp
mov
nop
dec
gs
in
jnp
dec
insl
call
adc
and
shll
push
push
xor
int3
dec
mov
sub
inc
or
nop
rorl
clc
je
cmpsl
mov
int3
jnp
pop
push
xchg
jecxz
in
mov
ret
push
ja
daa
mov
push
jns
lock
es
push
pop
inc
xlat
fs
jmp
push
cmp
popa
fldt
cmpsb
push
pop
dec
mov
inc
xor
and
push
xlat
jg
dec
dec
call
fildll
lea
add
jl
fwait
outsb
xor
cwtl
popf
cld
xor
popf
jno
test
stc
icebp
out
add
das
pop
cmpsl
inc
xor
outsl
and
mov
and
push
popf
dec
sti
subb
dec
xor
pop
push
lods
jno
jp
xor
cmc
dec
pop
xlat
xchg
dec
push
inc
movsb
push
dec
mov
cld
stos
sbb
popa
sub
pop
xor
adc
aas
push
or
aad
roll
out
xor
push
jge
jne
mov
jecxz
cs
inc
les
roll
dec
insb
jno
or
aam
es
rcrb
mov
repz
ret
out
shrb
clc
sub
ret
push
mov
xchg
call
xchg
pop
inc
pop
outsl
cmpl
push
mov
xor
dec
fdivr
inc
and
add
sbb
dec
pop
stos
xchg
push
clc
ret
cld
aaa
shlb
inc
stos
addr16
inc
lcall
cwtl
imul
ds
pop
xchg
scas
xlat
into
jbe
inc
sub
mov
daa
adc
shll
inc
es
push
push
xor
jo
lret
das
fisubrs
pushf
aas
sar
adc
jae
fisubrs
inc
repnz
js
icebp
sub
sub
lods
push
push
in
xor
sti
mov
rclb
adc
ficompl
and
sub
test
clc
dec
in
mov
icebp
pop
pop
xchg
mov
sbb
push
cmpsl
sub
sub
in
sbb
push
add
hlt
jl
test
jno
xchg
outsl
push
out
xchg
mov
mov
pop
xchg
pushf
mov
jl
cld
inc
mov
data16
sub
cwtl
clc
dec
xor
xor
xchg
and
leave
push
loope
std
inc
dec
sarb
insl
shl
rclb
mov
mov
pop
jmp
call
add
mov
fdivp
fldt
aas
mov
and
inc
shr
jmp
mov
ss
imul
test
sbb
xor
mov
call
in
hlt
mov
or
mov
je
jo
stos
dec
aam
jnp
addr16
test
movsl
dec
adc
jae
push
rcll
shr
cmc
ficomps
ljmp
xlat
mov
insb
into
dec
add
dec
fs
cmpsb
push
sub
arpl
xchg
pop
xor
fdivs
pop
xchg
mov
sti
sub
dec
pop
fdivrl
pop
test
ds
or
mov
inc
cmp
hlt
xchg
sbb
or
dec
xor
sub
hlt
cmpsl
xchg
sti
jp
mov
repz
pusha
xlat
cmp
jl
inc
xor
clc
aas
pop
mov
inc
and
sarb
and
lods
lret
shll
xor
inc
insb
add
popa
in
lea
mov
iret
xor
and
in
push
lret
repz
push
mov
sbb
add
sbb
mov
imul
scas
popa
push
dec
inc
or
mov
cmp
cltd
sub
shll
push
aam
dec
lea
inc
fsubrl
dec
mov
pusha
and
mov
loope
fists
sub
adc
xor
inc
std
pop
adc
mov
mov
cld
mov
mov
dec
repnz
insb
dec
dec
aas
mov
xchg
in
push
push
inc
negb
loopne
add
in
data16
ljmp
mov
stos
iret
je
xor
aaa
jo
scas
in
jno
int
xchg
leave
xchg
mov
inc
je
popf
cmpsb
aaa
or
mov
mov
in
enter
xor
fists
aas
and
jns
rclb
xor
or
arpl
lahf
aas
jl
testb
ja
push
push
jp
inc
cmp
stos
mov
popf
setno
testl
enter
sarb
xchg
push
sub
xor
cmp
adc
int
add
jmp
adc
pop
mov
jge
arpl
pop
negl
jmp
int3
movsb
xchg
add
sbb
sti
mov
or
movsb
fwait
ret
jmp
xchg
jne
loopne
jl
and
fidivrl
sub
pop
pop
loopne
cmpsl
lods
xchg
test
xor
test
cmc
dec
nop
cmp
inc
cmp
inc
fcoms
pop
jmp
addr16
out
imul
sub
addr16
inc
mov
push
mov
cld
xchg
inc
test
jae
pop
js
sbb
insb
lock
int
add
orb
fldlg2
inc
ret
rolb
sbb
mov
sahf
jns
in
sbb
cmp
jge
sti
jge
int3
pusha
add
popa
mov
jbe
adc
mov
cli
lds
lea
sub
in
add
rcrb
nop
sbb
sti
rcll
sub
nop
adc
lret
pop
pusha
cmc
pop
popf
stos
mov
clc
lret
lcall
sti
cmpsb
in
adc
in
mov
ret
xor
dec
js
ret
xchg
fidivrs
or
or
and
orb
lahf
cmp
jae
xchg
jg
add
mov
or
push
add
outsl
mov
cmp
sahf
mov
test
test
cltd
lret
jnp
push
adc
outsb
and
idiv
or
mov
sub
nop
and
sbb
lds
sarl
adc
dec
inc
mov
mov
pop
sub
mov
cmp
popf
jle
sub
cmpsl
jmp
mov
in
pop
jnp
testl
and
icebp
pop
andb
fmuls
mov
jecxz
mov
je
mov
lret
fbstp
cs
stc
dec
das
es
in
fnstsw
push
pop
or
mov
add
sbb
ja
push
out
stos
scas
aaa
addl
mov
test
lea
and
mulb
push
ljmp
pusha
mov
sbb
fwait
aam
js
cmpsl
dec
mov
sub
and
mov
test
mov
in
sti
or
sub
xchg
or
jge
adc
push
push
shl
loopne
popf
cmpsl
pop
iret
sub
pop
pushf
xor
test
out
add
lods
stos
cmpsl
cli
mov
pop
pop
nop
cmp
ret
incl
mov
test
mov
mov
jle
ljmp
mov
sbb
mov
insl
icebp
imull
add
lds
adc
popf
xor
mov
pop
dec
push
inc
push
insb
jno
inc
lcall
jnp
xchg
ljmp
mov
sahf
in
out
or
aam
call
pop
cmp
rclb
dec
jne
or
data16
imulb
fidivl
xchg
nop
jecxz
inc
mov
pop
mov
cmp
mov
jecxz
ret
push
cs
movb
inc
mov
cmp
pop
mov
test
fidivrs
mov
int
inc
cmpxchg
xorb
push
pop
sbb
popf
orb
dec
pop
dec
mov
test
pinsrw
outsl
push
call
loopne
outsb
int
push
xchg
xor
jmp
insl
sub
and
out
adc
cmp
or
xor
mov
add
mov
lea
jno
scas
cmp
dec
pop
pop
pop
repz
lods
les
lcall
mov
nop
mov
push
lcall
jnp
sub
ret
dec
sarl
arpl
loop
or
push
xor
popa
repz
ret
ret
xchg
jp
jg
adc
imul
int3
fninit
mov
mov
sbbb
sub
mov
iret
in
push
xchg
fisubrs
jecxz
add
jge
mov
in
push
and
popf
or
pop
pop
dec
in
push
cmp
popa
add
mov
es
mov
mov
cmc
test
popa
loop
sbb
xchg
sbb
ret
sub
lcall
lret
aaa
pop
xchg
imul
movhlps
xchg
and
daa
loope
mov
gs
sub
xor
mov
fwait
mov
pop
dec
stos
mov
mov
jns
test
inc
addr16
xor
dec
jle
testl
or
test
popa
ret
mov
fldl
mov
gs
rolb
pushf
pop
stc
push
je
or
dec
or
jecxz
dec
lods
ss
testb
repz
inc
push
imul
sub
cmc
aaa
mov
popf
push
movsl
xor
arpl
mov
cwtl
sbb
mov
addr16
sub
inc
inc
out
pop
inc
pop
pop
mov
out
pop
aam
lahf
ficompl
je
into
fistpl
cld
aaa
inc
jecxz
inc
inc
call
and
testb
adc
hlt
incl
cmp
mov
pop
dec
aas
test
dec
scas
incb
scas
cld
aas
loope
and
outsb
add
fcoms
xor
mov
out
push
xor
fbld
mov
fnstenv
jo
adc
sub
lds
in
lods
dec
sti
into
gs
jle
subps
and
test
cwtl
pop
mulb
xchg
mov
fsubrs
xchg
sub
add
sub
or
cli
fiadds
ficomps
je
mov
add
cmpsl
pushf
xlat
push
frstor
test
sub
negl
xlat
sbb
sbb
push
jbe
cld
daa
jns
cmp
xchg
out
lea
fstl
test
aad
xor
lock
inc
jp
pop
enter
dec
adc
or
test
je
cmp
lods
push
or
jmp
fcoml
push
ret
adc
sbb
sub
sbb
mov
ljmp
push
fs
leave
shlb
xchg
lret
mov
xor
and
std
lea
jecxz
push
fcomip
dec
jbe
jge
mov
push
inc
leave
test
jle
aas
and
add
jecxz
mov
aas
sbb
jnp
lds
xchg
es
gs
sub
imul
mov
insb
mov
imul
adc
leave
mov
jp
mov
iret
xchg
fdivrl
cltd
xchg
xchg
dec
fcmove
fisubrs
fists
xchg
lds
aad
leave
sbb
leave
lret
subl
mov
mov
lock
lret
sbb
sbb
mov
stos
mov
aas
mov
mov
in
or
jmp
jmp
xchg
add
rcrb
insl
rcrl
faddp
movsl
push
cwtl
add
mov
mov
fadds
sbb
jne
pop
je
cmc
js
in
packuswb
scas
mov
into
ja
mov
push
inc
loope
icebp
adc
inc
and
vpmacsww
sti
rol
pextrw
outsb
int3
mov
shl
pushf
cmp
pop
fidivl
bound
mov
loop
jle
sbb
mov
leave
jl
jno
xchg
maskmovq
notl
xchg
int3
mov
outsl
aad
fcmovnu
lods
rcl
aaa
mov
and
or
out
push
cmp
scas
jb
jae
movsb
inc
push
addr16
add
imul
mov
ja
jp
shlb
mov
out
add
pop
xchg
mov
xchg
pusha
adc
iret
movsl
nop
xorb
popf
leave
es
bound
adc
test
stc
shlb
and
pushf
pop
je
lods
icebp
add
pop
cmp
popf
iret
fistl
ja
and
cmpsl
das
push
pop
test
sub
test
ja
loope
mov
orb
xchg
lods
flds
dec
push
mov
mov
add
jmp
jecxz
clc
jno
fsubp
pop
cs
popf
sub
std
xchg
rorb
leave
test
cmp
push
pop
in
andb
in
scas
div
pop
push
xchg
ret
loope
aad
shll
push
xor
lock
insb
mov
in
jbe
push
sti
iret
push
ljmp
push
ljmp
xchg
movsl
cmp
push
mov
imul
test
jg
mov
inc
stos
les
jnp
xchg
in
out
pop
shll
mov
loopne
scas
jl
fdivrs
scas
testb
lods
inc
pop
loop
xchg
push
data16
lgs
icebp
xchg
or
inc
int
pop
in
adc
aaa
sbb
aas
ljmp
cmp
iret
ficomps
cmc
les
jl
pop
fsts
fsubs
sti
sub
or
clc
sub
mov
adc
and
pop
jmp
jmp
ret
leave
popf
mov
negl
shrl
xchg
fdivrs
inc
jo
jp
pushf
mov
sbb
cmp
fistl
pushf
test
in
loope
xchg
out
dec
fidivs
rcr
std
aam
inc
adcb
cltd
xrelease
pop
mov
push
mov
mov
outsb
pop
lret
push
lea
in
push
ljmp
dec
pop
inc
lods
inc
mov
dec
xchg
push
push
fs
mov
add
stc
sahf
andb
jl
imull
mov
inc
pop
movsb
lods
mov
dec
fisubl
xchg
mov
fscale
movsl
pop
fimuls
jmp
cmp
xlat
imul
jae
xchg
ljmp
mov
insb
mov
orl
pop
add
cmp
mov
mov
pop
daa
sub
jno
cmc
loope
movsb
icebp
paddw
jbe
rcrb
mov
popa
adc
xchg
pop
lahf
out
rcr
push
in
pop
lods
shll
sub
push
dec
dec
lcall
sbb
insl
inc
shr
xor
ljmp
lds
push
pop
add
cmp
inc
mov
xchg
xchg
mov
add
mov
jmp
xchg
lea
stos
test
xchg
movsb
orb
jae
cld
lea
pop
push
in
jl
jns
or
aaa
cmp
in
popf
jl
aam
cmp
mov
cmc
jg
or
in
xor
and
dec
sbb
mov
jno
and
mov
mov
jae
add
mov
cli
icebp
lods
shrb
scas
js
mov
jp
xchg
out
jg
arpl
pusha
fldcw
mov
loopne
mov
loopne
lret
pop
inc
adcl
mov
lcall
mov
ret
ss
jne
cmc
aas
pop
sbb
test
lods
adc
bound
pop
arpl
cmpsl
xchg
fisubrs
adc
dec
xchg
rclb
jmp
add
jg
push
xchg
fwait
pop
jo
test
lahf
xlat
push
out
ret
push
test
mov
mov
subb
sbb
pop
inc
pop
mov
das
mov
mov
das
int
sbb
push
fld
js
jae
mov
rol
imul
into
xchg
aad
lret
and
or
ficoml
fwait
sub
pushw
adc
enter
lret
ret
adc
sbb
filds
les
add
insb
pop
aam
popa
mov
sub
ret
in
sbb
or
sbb
sbbl
or
inc
or
jbe
sti
add
popf
xlat
int3
sub
mov
imul
add
push
adc
lea
or
cmc
xor
push
lahf
push
xchg
push
mov
pop
test
and
adc
dec
aaa
xchg
sahf
aaa
aad
and
iret
divl
pop
adc
arpl
push
dec
or
push
scas
ss
ss
movl
cmpsl
or
inc
jl
int3
dec
ss
rorl
dec
mov
or
cli
aaa
imul
cmpsl
push
aam
call
pop
test
dec
cmp
in
mov
ret
mov
mov
adc
stos
jne
inc
cmp
insb
outsb
gs
adc
cmp
adc
shrl
les
mov
test
insl
cli
dec
cld
and
xchg
dec
dec
pop
and
sbb
dec
lods
mov
mov
or
jp
or
lods
insl
inc
sub
sub
push
jb
rcl
sub
loop
in
dec
in
jle
xor
adc
xchg
jecxz
mov
scas
mov
fcmovu
outsb
add
adc
xor
leave
dec
in
test
sbb
dec
lret
pop
mov
jmp
push
push
gs
xor
les
xor
test
fcmove
mov
sub
and
rcrb
stc
cltd
inc
outsl
test
sub
call
test
xor
xorb
xchg
iret
out
lahf
nop
add
sbb
dec
test
movsb
dec
or
push
or
pop
rolb
push
cmp
adc
addr16
mov
adc
push
adc
inc
xchg
or
mov
fistpll
imul
ret
cld
pause
inc
dec
push
leave
aaa
push
mov
les
test
add
ret
xor
sub
mov
rcll
or
xchg
mov
xchg
repnz
jmp
aad
sar
lret
jge
cmpsb
mov
adc
mov
pop
cmp
pusha
jne
leave
fs
out
arpl
xchg
stc
lea
fcompl
adc
or
loop
out
ret
xchg
mov
mov
je
in
clc
test
xor
popa
pop
pop
push
dec
add
outsl
xchg
gs
mov
pop
dec
les
add
orb
xchg
aaa
lds
int3
push
loop
test
sbb
adc
repz
sbb
xchg
fwait
in
jp
xor
dec
cmp
in
arpl
int3
int
inc
loope
movsb
mov
leave
push
out
insb
or
iret
scas
sub
sahf
jle
cs
ja
insl
cld
dec
add
icebp
push
into
daa
mov
sbb
lods
and
dec
and
inc
adc
mov
mov
mov
push
cwtl
inc
pop
cmpsl
xor
sub
arpl
jle
mov
pushf
vpsubq
dec
lret
jle
imull
popa
cmp
inc
jle
mov
or
jg
add
mov
loope
mov
xchg
mov
xor
add
sbb
lret
cmp
sarb
movsb
inc
mov
inc
fcmovnb
mov
or
or
call
iret
and
lcall
push
test
lds
xchg
sub
or
jl
cmc
jg
inc
ret
mov
icebp
clc
enter
sub
xor
jnp
adc
sub
outsl
int
push
test
mov
jbe
cltd
ja
jge
jmp
or
adc
push
dec
pop
clc
fmull
xor
into
scas
jae
pop
or
cmp
es
cmpsl
imul
adc
sti
je
pop
xchg
mov
or
cli
add
mov
add
fsub
push
jbe
jb
push
adc
dec
add
andl
mov
mov
daa
nop
sarl
cmp
imul
xchg
jmp
dec
mov
cmp
fdivp
mov
cmp
shll
sahf
xlat
cltd
add
xchg
push
insb
aad
push
cmpsl
data16
adc
pop
pop
in
les
in
jp
dec
jnp
js
adc
pop
inc
int3
je
mov
jge
xor
scas
xchg
popl
imul
xor
add
push
loop
aaa
arpl
lret
xor
ret
or
and
ret
outsw
dec
loope
pushf
dec
xor
cmp
test
outsb
jl
in
inc
nopl
and
or
repz
mov
je
mov
in
lods
popa
sbb
inc
fsubs
jne
dec
mov
dec
in
out
test
ja
fisubl
mov
xlat
out
sbb
lcall
hlt
rclb
std
lds
enter
fwait
mov
mov
and
mov
add
loopne
jb
andb
or
scas
push
xchg
pop
push
aas
fisubl
push
aad
iret
iret
jb
call
loop
mov
ror
sub
cwtl
shll
jl
adc
out
adc
insl
jne
aaa
and
test
fdivrl
shrb
ffree
sub
fmull
sub
or
fcomi
clc
mov
clc
sub
mov
xor
aaa
out
scas
jnp
ja
xchg
xor
xchg
push
rol
push
fnstenv
xchg
xchg
inc
psubsw
xor
or
int
mov
dec
loopne
dec
pop
ja
stc
aas
xchg
xor
addr16
cmp
aas
insl
cmp
or
mov
mov
sbbl
xor
mov
sbb
pop
xchg
lock
test
repz
ds
cmp
or
or
mov
popa
loope
leave
pop
mov
inc
cmp
imul
sbb
and
mov
sbb
out
scas
cld
mov
jp
std
iret
in
or
xchg
ret
out
rorl
cs
push
xchg
nop
sbb
jae
hlt
jg
dec
jns
inc
daa
bound
ret
and
pop
sbb
mov
lahf
push
dec
jl
lcall
loop
pop
iret
roll
sub
push
or
xorl
dec
cld
leave
rcrl
mov
mov
stc
movsl
andb
test
mov
fnstsw
enter
sbb
pop
mov
sbb
rcr
shll
or
dec
ret
add
addb
mov
xchg
rolb
insb
popf
pop
add
cmc
push
mov
fwait
rorl
pop
pop
adc
pop
add
stc
jmp
xchg
xchg
mov
pop
dec
and
adcb
shrb
addl
pop
scas
in
ja
push
mov
scas
sbb
or
les
insl
in
fisubl
fimull
dec
pop
mov
and
adc
outsb
push
mov
inc
lods
shrl
enter
add
push
int
imul
aad
mov
mov
inc
cmpsl
dec
sub
inc
inc
aas
xchg
pop
mov
stos
jb
pop
push
jo
or
cs
jns
sbb
fmulp
outsb
dec
leave
mov
mov
std
dec
add
gs
mov
mov
inc
mov
insl
adcl
loope
mov
fidivrl
sti
cmp
iret
in
sub
cmpsb
fmuls
cmc
js
push
not
loopne
inc
lds
fisubs
cmpsb
cmpb
cmp
loop
stc
stos
xor
popa
in
aaa
push
inc
pop
lahf
mov
and
insb
jmp
call
mov
divb
sahf
ret
cmc
pop
mov
cwtl
sub
addr16
imul
jle
inc
mov
jg
mov
movsl
cmp
dec
fwait
xor
xchg
push
mov
in
mov
data16
cmp
shlb
add
mov
aad
das
xchg
popf
fwait
pushf
lcall
mov
fcmovu
push
jbe
andl
dec
icebp
xchg
inc
or
xchg
pop
popa
outsl
sbb
jno
call
ss
mov
mov
mov
dec
mov
push
lea
popa
cmp
add
push
mov
fwait
jno
mov
jno
jp
dec
xchg
mov
add
int3
and
dec
aad
mov
lods
sbb
and
mov
imul
sti
add
outsl
test
ja
imul
xchg
mov
es
pop
repnz
sub
leave
in
xchg
hlt
cwtl
popa
add
imull
mov
xlat
sub
push
in
pusha
call
outsb
fsubl
stos
mov
pop
push
stos
dec
dec
in
sbb
inc
push
popf
movsl
loop
push
inc
dec
dec
pop
pop
nop
inc
jne
xor
daa
imul
and
ret
sub
pop
cs
jbe
insl
push
pop
mov
test
das
lret
inc
movsl
cli
jnp
mov
add
pop
cwtl
lods
fildl
enter
outsb
into
call
mov
pop
mov
clc
and
cmp
mov
bound
pushf
dec
inc
pushf
push
cmc
lahf
jae
int3
fidivl
sti
mov
xor
frstor
or
xchg
ds
loope
das
cltd
clc
fwait
rclb
out
pop
ret
add
imul
insb
in
ret
or
pop
mov
aam
cmpsl
xchg
adc
jbe
fisubl
or
add
dec
adc
loopne
ljmp
push
insb
pop
mov
call
mov
stc
push
test
leave
dec
mov
mov
dec
out
out
ret
inc
fstps
fcoml
or
jo
idivl
stos
xchg
pop
fdivrl
and
dec
lret
add
sbb
push
inc
in
push
xchg
xchg
mov
imul
push
push
xor
in
jle
adc
add
sbb
lret
cld
and
cmpb
sbb
fdivrl
xchg
xchg
popa
out
stos
cmp
mov
mov
mov
cmp
dec
inc
dec
ds
push
insb
pop
test
sbbl
jo
push
icebp
and
aas
repz
xor
das
cmp
fwait
push
stos
inc
in
or
mov
fstp
pop
mov
lea
lahf
lods
cld
insl
inc
cmp
aam
pop
fstpl
ret
cwtl
aaa
mov
mov
fisubs
lcall
hlt
push
scas
dec
lock
pushf
push
mov
mov
cli
adc
icebp
mov
test
push
xor
cmp
add
out
jge
add
das
inc
or
add
adcb
cmc
scas
xchg
jmp
jnp
insl
mov
pop
dec
icebp
sub
into
call
xlat
test
testl
add
lcall
addr16
imul
loopne
xor
and
cld
in
jl
jo
popa
sbb
dec
gs
daa
test
pusha
into
add
inc
jge
pop
mov
popf
arpl
sub
xchg
orl
jecxz
or
mov
add
or
xchg
mov
jnp
sub
addr16
jecxz
cmp
lea
insl
rcrl
inc
mov
shrl
jnp
mov
mov
push
push
in
loope
adc
sbb
pop
outsl
jae
mov
xchg
mov
cmp
clc
loopne
mov
repnz
push
orl
sbb
cmpsl
mov
inc
jge
push
stos
dec
adc
pop
or
inc
stos
and
shlb
jge
aam
int
sarb
lock
sbb
mov
int
pop
sbb
jg
mov
subl
inc
out
xchg
dec
cmp
sbb
mov
cmpsb
inc
xchg
jge
stc
insl
push
adc
adc
xchg
clc
ficoml
mov
addl
jl
push
sahf
inc
mov
push
add
lods
push
arpl
xchg
sbb
mov
lock
cmc
in
pop
push
fcmovnb
sbb
pushf
std
subb
ret
popa
cmp
inc
xchg
shll
jbe
xor
loop
aas
mov
mov
inc
inc
data16
ret
addr16
nop
dec
fimull
scas
mov
sahf
dec
or
or
jle
or
push
mov
out
stos
nop
xor
js
lock
sub
fwait
xchg
pop
clc
test
mov
dec
out
cmp
inc
inc
push
dec
pop
push
dec
xchg
xor
stc
sbb
fisttpll
or
gs
adc
daa
rcll
pop
push
mov
int
pop
fucomi
repz
xchg
push
inc
xor
push
idivb
adc
insl
add
cs
fistpl
mov
cmp
xor
insb
pop
inc
fiaddl
rolb
sub
nop
or
in
cmp
xor
sbb
jl
push
mov
scas
xchg
mov
and
dec
dec
inc
or
xchg
in
rorl
or
daa
sbb
or
inc
mov
loope
push
rorl
xchg
loopne
mov
gs
add
aad
ret
movsl
mov
jbe
pop
sub
dec
sub
lret
xchg
push
dec
stos
xor
pop
stos
mov
movsl
int3
sbb
stos
xlat
lea
pop
mov
mov
daa
pop
jbe
repnz
fwait
es
sbb
jae
sbb
lods
loop
jns
lea
xchg
pop
add
cmp
or
xchg
inc
inc
mov
dec
sti
aaa
stos
xor
jge
jne
ret
sub
test
lea
jmp
lds
out
icebp
or
nop
xchg
xchg
repz
xlat
ucomiss
or
xchg
test
xchg
and
push
insb
sub
in
lods
jbe
xor
insb
bnd
lds
jmp
dec
fists
scas
or
xor
pop
xchg
adc
nop
and
inc
rcl
xchg
ja
push
xor
push
sti
lret
dec
daa
sti
outsl
add
xchg
sub
fistpl
fisttps
inc
mov
test
mov
test
bound
pop
mov
adc
xchg
inc
mov
sbb
popa
inc
loopne
inc
inc
lock
or
popf
mov
roll
sub
pop
inc
cld
std
adc
js
out
xchg
ret
or
sbb
cmp
xchg
test
aam
xor
xchg
clc
jmp
popa
mov
sbb
push
and
fcmovne
outsb
jne
gs
repz
mov
ss
pop
push
fidivl
nop
and
jecxz
pop
inc
js
movsb
jp,pn
leave
or
out
shlb
call
enter
pop
popf
aad
movsl
pop
dec
je
gs
pop
arpl
mov
loop
ss
ror
dec
fisttpll
push
dec
lret
pop
imul
rcll
mov
cltd
stos
cmpsb
jno
mov
cmp
push
sub
or
jp
mov
jecxz
pop
inc
jns
shrl
sarb
rcr
sbb
loope
dec
dec
mov
mov
jb
pop
popa
adc
jbe
xor
icebp
cmp
mov
mull
mov
shrb
in
lea
push
addr16
rorb
dec
sahf
lods
jg
pop
cmc
stc
and
sub
aad
sahf
lds
out
dec
push
pop
cmpsl
or
bound
jge
inc
repnz
out
call
jp
push
xchg
out
test
cmp
fldt
jno
in
int
js
inc
pusha
fsubrl
popf
xchg
push
arpl
inc
dec
sti
daa
outsb
enter
inc
shrb
mov
and
sbb
inc
push
sub
rcll
enter
out
int3
adc
stc
hlt
or
jbe
sbb
fisttps
ret
mov
cli
mov
sbb
into
or
cs
loop
push
imul
inc
mov
ret
jmp
test
outsl
adc
stos
js
fdivrl
xchg
aas
es
jmp
mov
out
cs
cmp
and
xchg
dec
pop
cmpsl
or
cld
or
mov
push
cmp
adcb
aas
cmp
enter
cmp
int
or
push
xor
sub
sbb
out
aas
add
jmp
std
jno
or
sbb
ficoml
sub
enter
cltd
outsl
fs
pop
and
nop
mov
sbb
pop
sbb
pop
sbb
sub
dec
icebp
add
pop
mul
inc
jne
cltd
ficompl
fs
shr
xorb
pop
xor
cmp
xlat
addr16
inc
and
sbb
pop
jno
aas
or
into
in
mov
pusha
xor
adc
movsl
add
xchg
leave
aam
leave
addr16
and
std
jg
jb
inc
imul
pop
jno
xor
dec
mov
repz
hlt
sbb
cmp
aaa
shlb
mov
stos
fnsave
xchg
mov
add
lahf
scas
js
fisubrl
arpl
popf
les
pop
inc
jp
subb
mov
mov
xchg
add
inc
insl
sub
out
xchg
and
in
xor
jbe
sbb
mov
stos
adc
cmp
dec
mov
fisttps
aas
push
lds
nop
enter
repz
and
out
xchg
pop
xor
dec
lods
dec
inc
pop
rclb
clc
and
mov
and
adc
inc
xor
jbe
lea
insb
ret
cld
push
push
sbb
lock
in
int
mov
sbb
stc
inc
roll
test
push
hlt
in
std
inc
and
xchg
insb
addr16
jle
jne
pop
mov
scas
add
push
out
jg
mov
xor
push
sarl
cli
ja
adcl
movsb
cmp
sub
mov
cmp
jg
loope
sahf
outsb
outsb
in
in
cs
jle
mov
mov
aad
mov
cld
xchg
adc
inc
xchg
pop
mov
mov
aas
ret
ret
sub
out
rolb
mov
lcall
dec
adc
gs
inc
mov
lods
push
shr
popf
popa
popa
pusha
aaa
lods
xchg
inc
pop
imul
mov
push
mov
sbb
hlt
push
dec
stos
mov
shll
add
jns
jg
mov
repnz
push
mov
pop
sbb
fdivs
insb
inc
xchg
lea
stos
and
fcomps
rcl
jg
pop
fisubs
mov
adc
jns
mov
aas
xchg
pop
pop
aam
mov
pusha
mov
jns
fsubl
pop
addr16
mov
test
sbb
pop
test
iret
xchg
daa
adc
stos
pop
or
mov
andb
lods
mov
xchg
mov
jecxz
mov
push
push
inc
sbb
sub
rol
mov
insb
pop
fstps
jle,pn
in
test
loopne
and
mov
xor
mov
fnstenv
mov
xlat
xchg
cmp
repz
jbe
out
les
inc
pop
lea
rclb
pop
test
push
hlt
in
mov
fbstp
aam
mov
outsb
dec
sub
or
dec
daa
loopne
and
or
call
mov
sub
insb
inc
mov
cmp
int3
fadd
cmp
adc
inc
adc
fidivl
ljmp
pop
xchg
pand
pop
dec
xchg
pusha
call
movsl
nop
or
cwtl
push
jno
xchg
inc
and
mov
pop
fcomps
test
hlt
mov
lods
rcr
inc
cmc
sti
das
scas
or
inc
out
adc
es
jp
mov
xchg
js
xor
push
stos
dec
repz
dec
lahf
jo
jne
add
sub
sub
jge
rorb
fnstcw
loopne
dec
fcmovnbe
mov
cwtl
ret
xchg
idivb
and
inc
insb
or
xor
repnz
adc
mov
mov
lret
mov
sbb
into
add
jne
movsl
xchg
mov
jo
call
loope
jo
push
dec
pop
xchg
andl
dec
out
sbb
prefetcht0
or
inc
dec
in
cli
adc
pop
cmpsb
push
out
jle
jae
pop
das
pop
in
mov
call
mov
stos
push
sbb
xor
in
add
orl
add
data16
cmp
mov
lret
fs
lods
pop
test
and
sbb
push
or
dec
mov
mov
xchg
pop
add
in
jae
add
insb
or
lods
jb
push
insl
lret
push
jno
inc
cltd
lods
xlat
and
sbb
stos
dec
mov
movsb
inc
test
shlb
sahf
mov
ret
mov
test
lcall
push
pop
jle
in
aaa
pop
xlat
fisubs
aad
cld
jmp
icebp
subl
stc
push
sub
js
mov
mov
pop
repnz
cmp
jle
std
cmp
bsf
cmova
xor
pushf
int3
xor
adcl
xchg
dec
xor
lock
inc
jge
cmp
divb
arpl
or
in
inc
mov
fcoml
in
pop
outsl
cmpsb
jle
dec
fadds
insb
jbe
or
movl
mov
xor
sub
and
in
push
mov
popf
jno
dec
cmpb
sbb
xor
daa
inc
mov
or
xchg
dec
add
ret
pause
addl
adc
inc
pop
lcall
jne
sbb
out
fcomps
jae
mov
add
ja
stos
inc
cmp
jns
lcall
test
decl
out
stos
xor
push
in
aad
icebp
mov
inc
jp
dec
pop
in
adc
push
movsb
call
cltd
dec
push
ljmp
pop
push
or
fs
idiv
jo
mov
xor
lock
xor
add
mov
pop
dec
xchg
cmp
les
lcall
je
add
stos
insb
int3
lcall
inc
jg
mov
dec
jge
fldcw
sbb
adc
push
clc
jmp
movsl
arpl
mov
jo
iret
and
inc
cmp
sbb
or
mov
ds
add
subl
pop
aas
cmpsb
std
ret
popaw
mov
mov
cmp
sbb
mov
xlat
lods
cmp
cmc
dec
fadds
mov
fdecstp
xchg
adc
fs
xchg
pop
ljmp
pop
movsb
in
test
push
mov
aad
jl
pushf
push
int
lods
insb
adc
push
fstl
insb
mov
shrl
mov
and
les
mov
adc
in
sbb
inc
or
cs
sub
sbb
jg
mov
jne
or
push
js
leave
sub
dec
popf
or
lods
mov
mov
add
pop
std
sbb
test
imul
leave
jns
fildll
cmp
out
cmc
sbb
cmc
and
shll
jg
pop
xchg
adc
test
pop
jle
pusha
or
or
in
cli
sahf
push
mov
push
rcl
out
sub
cmp
jecxz
jmp
jl
out
mov
and
pop
mov
cmpl
adc
cmc
pop
jnp
stc
pop
mov
adc
outsb
lock
out
jbe
insb
das
jno
push
data16
sbb
jl
je
inc
add
dec
mov
push
test
out
cmpsl
movsl
out
mov
decl
push
js
pop
stos
xchg
mov
addr16
sbb
push
shll
jnp
push
mov
add
out
mov
and
call
mov
add
push
lock
scas
pop
pop
mov
jecxz
cmp
sti
xchg
pushf
dec
sti
adc
and
fwait
sbb
jp
add
es
int3
ss
jg
rolb
mov
or
jae
das
and
aam
dec
leave
push
jb
into
push
lea
imull
lock
cmp
jns
mov
addr16
and
hlt
xor
add
imul
nop
nop
or
xchg
xchg
ret
orl
mov
out
in
aas
dec
data16
aad
and
and
fcompl
mov
sbb
mov
pop
sub
sub
mov
sub
add
repnz
mov
aas
cli
fstp
fwait
jbe
dec
ljmp
pushf
in
leave
pop
leave
mov
jb
data16
fidivs
int3
je
inc
cmp
push
dec
jne
popf
xor
jg
xlat
fdivl
popa
xchg
mov
mov
into
pop
mov
cmpl
and
sbb
iretw
dec
mov
pop
nop
push
mov
and
rcll
jle
shll
push
cltd
es
jbe
repz
push
lea
mov
das
mov
insl
add
fsubrl
sbb
cmp
xor
add
sbb
insb
test
ret
loopne
or
jecxz
lret
xor
mov
sbb
sub
pushf
jns
and
mov
mov
mov
pop
imul
sbbb
and
xchg
adcl
mov
test
out
push
mov
sub
or
pop
inc
in
dec
xchg
orl
push
ja
pop
mov
xor
loope
dec
ret
outsl
inc
out
cmp
movsb
jns
stc
sub
lea
rcll
and
adc
imul
test
xlat
cmp
loop
adc
cli
mov
mov
cld
push
push
sbb
jl
ljmp
xor
test
rcrb
xchg
jae
cmp
leave
or
dec
addl
sbb
xchg
add
test
loop
mov
ss
or
test
adc
pusha
xchg
xchg
sahf
jns
into
xchg
dec
mov
cmpsb
add
enter
inc
mov
adc
add
pop
cs
sbb
hlt
push
orb
pop
int3
inc
pushf
out
repz
mov
and
mov
sti
and
xor
insb
inc
mov
inc
xchg
mov
mov
pushf
jbe
lds
test
fisttpll
repz
xor
cmpsb
sbb
std
call
jp
adc
js
stc
fsubp
xor
add
int3
fst
nop
sbb
clc
iret
and
stos
aam
push
mov
pop
js
test
in
xchg
inc
mov
pop
in
sbb
jo
pop
lcall
movsl
dec
dec
push
shr
lods
xlat
jno
jnp
add
lea
cs
add
insl
dec
dec
imul
mov
loope
shlb
push
cmp
mov
mov
xchg
sarb
pop
mov
fdivr
clc
lahf
repnz
mov
repz
fstl
movsl
lock
fdivl
fdivs
push
lret
adc
pop
call
dec
and
pop
es
push
fcoms
sub
pop
mov
mov
jnp
pusha
and
push
mov
push
and
push
add
movsb
jb
pop
imul
jb
mov
jmp
lds
js
stos
fdivl
pop
cwtl
lods
push
orl
lods
push
mov
clc
ja
mov
lret
push
call
mov
xchg
xchg
movsl
mov
enter
icebp
cmpsl
movsb
shll
push
loopne
mov
mov
adc
cmp
xor
daa
lods
in
test
mov
or
sbb
mov
pop
jne
lea
ja
loopne
addr16
lahf
fwait
ret
and
or
xor
dec
add
repz
lret
mov
sub
and
sbb
cmp
adc
sub
fiadds
jno
int
repnz
jo
add
leave
mov
in
out
mov
mov
notb
lea
jle
pusha
outsb
test
push
mov
sbb
das
jnp
adc
insb
xchg
pop
fsts
inc
xchg
jne
push
jns
fnstcw
inc
push
lea
push
insb
insb
sub
cltd
xchg
jmp
cmpsl
push
cltd
push
in
rorl
xor
cltd
add
jae
mov
inc
lock
lds
cmp
sarb
lahf
imul
mov
cmp
enter
enter
sub
nop
movsb
cmpsb
push
dec
push
mov
pop
inc
jo
shrl
ss
aam
xchg
cmp
or
pop
jmp
mov
gs
addr16
xchg
mov
or
sub
popa
lds
mov
mov
xlat
mov
inc
leave
idivb
jmp
pop
mov
push
xchg
shrb
pushf
pop
adc
aaa
adc
mov
aad
ret
test
inc
sahf
imul
cli
outsl
jb
adc
lds
sub
in
xor
jno
pop
andb
mov
xor
pop
int3
add
fsubr
mov
in
sub
pop
push
fnsetpm(287
loopne
cltd
hlt
dec
xor
fstp
outsb
enter
pop
daa
repnz
out
dec
mov
lahf
push
das
repnz
popf
cs
jmp
and
cltd
adc
adc
pop
jae
addr16
cmp
pusha
sbb
je
popa
mov
call
es
adc
mov
pushf
add
add
ret
xchg
ret
jo
inc
adcb
sbb
xor
int
inc
adc
and
push
add
jg
into
fbstp
inc
repz
mov
mov
sub
xlat
mov
addr16
out
insl
les
xchg
pop
incb
xchg
cmp
add
test
jle
xor
sar
push
stos
pop
mov
mov
in
insl
push
std
adc
cwtl
pop
xor
cmp
mov
dec
sub
cmpb
and
cmp
cs
scas
cwtl
mov
push
lods
mul
dec
aad
or
jno
ss
mov
mov
or
sti
les
mov
cmp
mov
mov
jg
ret
icebp
sub
mov
cmp
testb
loop
mov
into
mov
xor
leave
lods
push
sbb
pusha
outsl
fcmovb
in
data16
repz
sub
iret
insb
icebp
pop
pop
test
push
and
or
xor
ret
and
xor
pop
adc
cmp
add
mov
repz
mov
or
add
shl
fadds
loop
or
fistps
push
int3
lds
push
mov
pushf
fcomi
lods
push
loop
cmc
imul
rcr
lahf
adc
mov
outsl
and
dec
jbe
out
mov
out
or
push
shll
mov
setge
insb
push
push
cmp
cmp
xchg
push
sti
inc
pop
cltd
insl
dec
push
inc
sub
mov
push
dec
sbb
imul
les
mov
cmp
repnz
rcll
xchg
addr16
std
mov
in
mov
ret
jnp
sbb
sbb
dec
mov
mov
sub
xlat
loopne
cmp
sbb
in
stos
dec
jp
jno
sti
jae
lret
mov
in
roll
jae
ja
pop
fimuls
aad
sub
imul
insl
xchg
and
je
shll
jle
out
lods
shrb
cmp
mov
and
ret
sbb
pop
xchg
jne
popa
sbb
dec
pop
in
das
cmpsl
dec
call
sub
nop
adc
inc
pop
cmp
cs
jle
mov
ret
push
hlt
add
jbe
movsl
jmp
push
je
ss
es
xchg
jns
add
popa
fwait
push
sbb
fcoml
lcall
inc
inc
dec
fwait
and
and
xchg
stos
xor
mov
and
out
jl
sbb
pop
push
outsb
or
shrl
xchg
sbb
push
test
mov
push
into
jl
or
cld
es
mov
aam
lds
fisubl
addr16
je
jb
xor
dec
daa
rclb
mov
lret
jge
add
je
icebp
push
loopne
pop
negl
repnz
xor
pop
mov
and
clc
pop
repnz
iret
push
sub
scas
rcrl
adc
jne
cmp
add
cmp
mov
push
jg
std
jbe
loopne
dec
arpl
jmp
mov
icebp
leave
bnd
sbb
xchg
add
sbb
dec
add
popa
ja
adc
sbb
pop
cmp
jns
and
cs
mov
insb
aam
pushf
fisttps
iret
xchg
inc
sahf
popa
mov
inc
dec
push
int
adc
jo
cld
fisttpll
xor
cmp
sub
or
popa
not
or
push
sbb
insb
inc
enter
mov
mov
fnstsw
leave
out
dec
mov
mov
rcrb
xchg
imul
aas
xlat
call
in
pxor
jmp
sbb
dec
lea
adc
fwait
push
and
scas
inc
fisttpll
xchg
jg
pop
jmp
inc
int
cmp
xchg
into
cld
push
pop
repz
inc
mov
mov
mov
insb
mov
mov
maskmovq
notl
sbb
stos
jbe
fmuls
jns
cmpb
repz
arpl
add
pop
aam
cltd
mov
push
sbb
lock
ja
ljmp
rclb
mov
push
in
loopne
sahf
mov
adc
arpl
fisubrs
add
imul
shl
repnz
mov
or
inc
icebp
sbb
mov
jae
mov
shll
or
mulb
jecxz
push
adc
inc
xor
sub
sbb
cmpl
jno
loop
iret
fwait
arpl
xor
mov
jle
std
push
insb
pop
mov
or
dec
sub
adc
scas
jbe
inc
popa
out
lcall
sub
mov
mov
mov
xor
out
mov
xchg
and
insb
mov
inc
pop
test
add
inc
jmp
or
out
scas
xchg
or
push
pop
ret
jl
mov
mov
fdivs
mov
and
call
es
mov
and
push
int3
mov
add
mov
push
xchg
cwtl
stc
cmc
shrb
push
and
or
cs
iret
or
xlat
push
xor
adc
jo
into
mov
add
xchg
je
dec
lret
scas
cmpsb
cmp
push
add
loope
push
mov
das
xchg
fdivs
out
leave
lcall
push
dec
inc
cli
cmpsb
push
pop
sbb
and
cmpsl
jnp
adc
in
jge
dec
popa
mov
xor
pop
enter
sbb
enter
add
jl
testb
lcall
ds
jle
hlt
icebp
mov
xorb
xchg
cld
mov
sub
mov
mov
and
lret
loope
movsb
or
scas
ffreep
out
divl
add
mov
mov
pop
pusha
xor
cltd
dec
movb
shlb
mov
cld
mov
inc
pop
test
mov
ds
pop
outsl
aam
jge
arpl
cmp
fimuls
xchg
add
call
fisubrl
flds
cwtl
cltd
loopne
mov
push
mov
daa
iret
testl
fsubs
push
fsubl
popf
push
mov
or
int
in
enter
dec
push
xchg
pop
xchg
mov
push
inc
in
mov
pop
test
sub
cltd
dec
xchg
mov
xchg
dec
bound
cmc
leave
sub
in
inc
dec
xchg
dec
ss
adc
cmpsl
sub
arpl
and
sbb
mov
andl
into
and
out
lea
stc
out
rcl
lods
sbbb
cmp
daa
mov
in
add
cwtl
dec
loopne
sbb
sti
add
jmp
stos
xor
mov
sub
fimull
dec
dec
mov
lcall
adc
sbb
dec
pop
pop
mov
in
lock
outsl
sbbb
inc
xchg
fdivl
xor
dec
sbb
jno
repnz
inc
jnp
lds
add
add
out
dec
add
jmpw
mov
pushf
fwait
fdivrl
stos
stos
ret
aam
push
arpl
sub
aaa
jle
andl
mov
xchg
lahf
sub
xchg
arpl
jae
arpl
dec
in
cmp
and
out
inc
loopne
cmp
sbb
ljmp
ficoms
lods
jecxz
or
push
insb
jno
push
or
stc
pop
adc
ja
inc
repz
aas
rcll
mov
xchg
push
dec
sahf
pop
push
sahf
mull
fcmovbe
mov
adc
loope
adc
lea
xor
cmp
scas
movsl
rcrb
xor
sbb
loop
arpl
mov
fcompl
gs
cmp
imul
popa
sbb
mov
jecxz,pt
jge
mov
lahf
mov
shll
jge
fists
ljmp
repnz
fchs
jnp
mov
es
dec
push
testb
push
lods
adc
mov
cld
cmp
in
push
fmuls
mov
mov
or
push
fiadds
hlt
xchg
fiadds
pop
ret
pusha
popa
xchg
xchg
adcl
shll
lods
sbb
adc
cmp
fiaddl
or
fdivrl
pushf
mov
add
cmp
xchg
flds
sbb
loope
pop
popa
add
pusha
xchg
xor
fists
cwtl
xor
and
cmc
sub
call
push
ds
mov
pop
mov
pop
push
insb
mov
push
popa
lret
call
fnstsw
fbstp
fdivrl
fimuls
dec
sub
xor
outsb
lahf
incb
xchg
cwtl
addr16
stos
and
adc
sub
lock
cwtl
test
ror
scas
andl
into
shrl
and
mov
out
sub
mov
sti
and
aaa
loop
and
in
aas
mov
lock
jmp
sub
mov
shrb
rcl
das
movsl
mov
adc
mov
cmp
lcall
mov
xchg
nop
push
js
int
mov
movsl
add
arpl
fisttps
sub
mov
add
js
and
out
or
ret
cmc
movsl
pop
mov
fcmovu
sbb
sbb
mov
push
xchg
or
dec
arpl
cs
andl
movsl
sahf
sub
sub
adc
insl
jmp
mov
xchg
subl
mov
inc
out
xor
and
and
push
mov
or
shr
lahf
lock
push
xchg
sub
push
outsl
int
jecxz
fwait
cmc
ds
or
sub
fstpt
mov
out
xchg
mov
jl
not
lcall
sbb
xchg
jne
dec
inc
dec
sbb
ds
stc
aaa
aaa
adc
mov
jge
gs
sbb
jmp
mov
movsl
sbb
dec
test
leave
jns
push
mov
pusha
fistpl
push
rcrl
sbb
sub
movsb
mov
cld
and
mov
orl
xor
mov
or
cld
mov
movsl
lods
ret
pop
xchg
inc
pop
jbe
scas
inc
and
daa
aam
dec
pop
pop
nop
imul
jl
clc
sbb
push
mov
pop
push
roll
rcl
pushf
mov
lret
pop
sbb
dec
sti
stos
call
cmp
xor
sbb
scas
lods
push
dec
in
push
lcall
pop
pop
loope
pop
xor
cmp
xchg
sub
mov
jle
mov
jbe
cwtl
jbe
cmp
hlt
push
push
adc
in
cmp
int3
dec
shrl
sbb
or
vpor
jg
jge
cmpsb
xor
mov
mov
mov
add
inc
dec
fistpll
inc
loope
mov
clc
pop
add
fnstenv
divl
aad
mov
xor
xchg
xor
out
out
cld
inc
inc
data16
cmpb
add
movsb
xchg
ret
push
rclb
adc
mov
outsl
test
jp
insb
dec
cmp
xor
xorl
cs
insb
ds
repnz
pop
and
bound
inc
xor
jl
sub
or
stc
jae
pop
mov
xor
push
cmp
jmp
xor
push
xor
icebp
or
sub
fs
cmp
xchg
and
pop
mov
divl
mov
inc
add
cltd
mov
lods
lea
push
bound
mov
add
stc
fildll
push
stos
jmp
loop
sbb
rolb
xor
aas
scas
sbb
rcrl
xor
pop
in
add
cmp
sub
push
add
les
mov
es
mov
out
fcoml
jo
jns
ret
push
jle
mov
push
pop
lret
mov
jne
gs
lret
jo
xchg
rolb
xchg
inc
and
movsl
or
nop
pop
add
sub
popf
mov
jns
pop
pop
cs
push
gs
jecxz
sub
fwait
lahf
lds
rorl
dec
fdivrs
push
std
cmp
pusha
pop
and
pop
dec
jl
add
mov
movsb
inc
sbb
inc
push
shll
xchg
cmp
pusha
sti
fildll
xchg
mov
lock
lcall
adc
je
mov
sub
cmpsb
inc
or
pop
cwtl
mov
sbb
jl
pop
arpl
mov
push
fwait
and
fidivl
mov
loopne
scas
nopl
fisubrl
lcall
dec
sbb
cmpsl
adc
or
int
lods
popa
jge
movsl
jb
fcomps
lods
sub
xchg
les
pop
cld
addl
nop
into
jae
cmp
pop
cwtl
cmp
adcl
push
xor
hlt
sub
mov
data16
mov
popa
out
push
xchg
imul
or
adc
loope
jne
ljmp
mov
xor
dec
dec
mov
scas
jb
and
inc
in
scas
in
fsubl
ret
fistpl
mov
xchg
xchg
lret
inc
push
imul
push
ljmp
pop
lret
incb
rorl
clc
mov
mov
mov
popa
inc
imul
je
dec
xchg
or
xor
jmp
fsubs
mov
or
or
cld
inc
lret
xchg
push
cli
cli
pop
xchg
jnp
xchg
jl
fsub
jp
loop
jmp
inc
cld
sbb
inc
cmpsb
lods
xor
lods
adc
push
inc
pop
push
les
insb
inc
pushl
mov
out
pusha
xor
orl
call
and
stc
jp
mov
addr16
fbstp
sarl
jl
fcmovbe
popa
inc
xchg
gs
fbld
clc
push
push
aam
xchg
mov
jo
ss
cmpsb
sbb
stc
xor
outsl
movsb
push
dec
or
add
add
ret
aad
mov
imul
cs
mov
clc
cld
cli
pushf
xchg
pop
add
ds
sub
and
or
pop
push
pop
dec
xor
pop
xchg
inc
popf
out
sub
xchg
mov
mov
fldl
int3
pop
pop
pop
push
jmp
test
rorb
imul
inc
enter
jbe
push
and
nop
mov
enter
pop
daa
cmpsl
cmc
push
mov
ret
xchg
inc
into
dec
xchg
icebp
xlat
nop
sbb
pop
lahf
pop
and
push
mov
std
imul
sub
test
push
and
into
cmp
mov
hlt
xchg
or
lods
in
xor
jb
data16
negb
jne
xchg
pop
mov
add
cmp
push
mov
lret
xor
mov
ret
push
pop
cli
inc
sbb
insl
xor
sbb
jge
divb
insb
lods
and
push
ljmp
shll
out
jno
fisubs
xor
mov
adc
dec
mov
mov
and
mov
insb
jns
xchg
adc
adc
push
fdivr
pop
xchg
xor
cmp
add
sbb
sbb
cmc
fmul
jns
jle
or
sti
mov
inc
loope
fcmovbe
and
dec
jg
idivb
fwait
push
xchg
pop
es
leave
mull
add
outsl
jmp
dec
loopne
and
mov
sub
push
mov
xor
or
jp
mov
repnz
dec
enter
mov
dec
arpl
in
pusha
in
cs
or
in
mov
push
pop
aam
loopne
jmp
fadd
xor
leave
pop
pushf
repz
push
scas
daa
xchg
push
dec
xchg
test
push
add
shr
or
jne
xchg
sbb
and
lcall
test
sbb
fdiv
sub
sub
sbb
sbb
das
out
scas
jns
cld
cwtl
dec
sti
sti
jmp
dec
int3
rcrb
jmp
jo
sub
mov
in
stc
push
jmp
pusha
sub
scas
xor
lea
rcrl
lahf
or
jne
add
movsl
ja
jnp
jge
xchg
mov
and
filds
and
mov
stos
lret
dec
mov
jbe
mov
add
shr
js
push
push
sahf
xchg
cmc
mov
decb
or
pop
pop
lock
loop
sub
cmp
stos
scas
stos
sbb
or
mov
lahf
fsts
and
and
xchg
nop
cld
test
xor
or
and
pushf
mov
adc
aad
pop
mov
dec
movsb
fsts
mov
push
xchg
cmpb
or
and
or
jno
adc
pop
ja
test
js
aaa
add
mov
pop
fwait
outsb
add
aas
sub
mov
std
pop
lods
and
and
pop
mov
dec
sub
scas
int
pop
and
aaa
ss
ret
adc
jnp
leave
hlt
fstpt
sti
mov
sbb
pop
mov
cmpsl
xor
mov
sbb
lds
aam
test
fidivrl
ds
orb
xor
mov
incl
jle
mov
cmp
ret
aaa
repz
cwtl
add
push
jge
lods
subb
adcb
mov
push
movsl
push
adc
cmpsb
sub
mov
mov
push
cmc
cmp
fldcw
xor
nop
mov
cwtl
add
inc
xor
cmpl
dec
lods
mov
cld
xchg
call
cmp
fmull
outsl
aad
fs
lret
mov
jle
imul
es
movsb
jno
out
jmp
addr16
push
iret
hlt
mov
fldcw
push
jns
adc
adc
xchg
fwait
jno
mov
mov
jae
mov
xor
adc
and
ret
out
iret
lods
xlat
fcoml
pop
sub
adc
bound
inc
das
sub
adc
mov
jp
leave
pop
adc
xchg
push
jo
inc
div
in
mov
je
in
ds
dec
add
insb
mov
or
aaa
mov
sarb
sahf
call
adc
jns
and
dec
mov
sbb
dec
sub
stc
jge
in
in
sahf
push
and
pop
imul
mov
jnp
xlat
in
cmpsl
in
jbe
loop
xchg
inc
cld
or
mov
push
in
mov
add
movsb
cmp
iret
ss
cmpsl
xlat
daa
leave
negl
jnp
mov
cmp
sbb
pop
popf
pop
lcall
dec
out
xor
or
cli
mov
andnps
dec
lret
xor
xchg
clc
xor
cmp
out
outsl
das
mov
and
arpl
ret
leave
outsb
mov
or
sbb
imulb
outsl
mov
or
inc
aad
ret
fsubs
mov
lret
dec
mov
dec
add
adc
lods
or
adc
lret
add
les
ficompl
cs
or
int
fadd
ret
mov
push
lret
push
cmpsb
add
jg
out
das
pushf
fcompl
jo
pop
notl
jae
cmp
lret
adc
js
testb
dec
mov
scas
mov
outsb
call
fisttps
xor
inc
and
testb
sub
adc
ret
sub
cli
icebp
inc
adc
mov
push
add
add
inc
mov
mov
es
pusha
mov
mov
cmpsl
mov
pop
or
and
cmovns
add
andb
xchg
das
jg
mov
scas
flds
sbb
adc
lods
movsl
outsb
outsb
div
jb
mov
xor
sub
pop
cmp
push
xchg
int
cld
imul
mov
sti
dec
enter
xchg
or
loop
addl
jg
test
inc
add
stos
notl
push
gs
or
mov
ja
mov
das
jecxz
add
add
mov
pop
ja
mov
mov
or
cmp
adc
or
mov
sbb
inc
xor
or
orb
dec
popf
sbb
add
adc
inc
cmp
mov
jb
ret
pop
sub
push
and
push
push
xor
xor
fimuls
arpl
fdivl
aas
ljmp
sub
daa
pop
inc
sahf
dec
shl
mov
outsl
pop
rorb
stc
jb
xchg
jmp
mov
je
nop
add
out
mov
aam
cwtl
dec
aam
mov
mov
in
pop
fcomps
adc
pop
jno
leave
or
jl
xor
mov
dec
xchg
sbb
dec
ljmp
ja
fldt
cmpsb
jo
into
jo
outsl
xor
rcr
lock
clc
int
or
cmp
adc
and
rclb
in
sub
pushf
movsl
cmp
inc
xor
push
cmp
xor
fistpl
inc
loop
lods
xchg
pop
cmp
insl
and
bound
or
push
xchg
add
pop
nop
ja
push
xlat
sbb
push
jge
sub
xchg
jle
mov
lret
xchg
and
or
out
pop
stos
fbstp
loop
sti
out
mov
pop
jnp
mov
mov
lret
andl
push
jmp
in
or
and
mov
cmp
aad
idivl
dec
shrb
mov
cli
push
xchg
imul
push
dec
xchg
adc
adc
aaa
scas
and
jbe
int
lret
fisttps
loope
mov
xchg
sub
jne
jns
daa
in
adc
mov
mov
movsl
mov
and
add
cs
fisubs
fsubrs
je
inc
dec
and
cmp
add
insb
testl
pushf
daa
subl
or
sbb
aam
inc
fwait
bound
test
sti
add
es
pop
rcl
ror
loope
insl
mov
nop
popa
add
lahf
mov
and
sub
or
into
mov
push
and
jne
jbe
insl
repz
push
mov
lock
fimull
or
cli
cmp
test
loope
imul
push
cmp
lret
mov
mov
xlat
adc
pusha
scas
int
push
lcall
outsl
adc
or
push
popf
stos
and
aaa
mov
in
nop
arpl
cmc
mov
inc
lds
mov
pushl
ret
sbb
mov
fildll
fcoml
fsubs
pop
out
push
jne
pop
push
and
sbb
cli
mov
and
pop
lret
cltd
ss
xchg
call
pop
push
mov
testl
test
xchg
inc
mov
lret
lahf
add
out
inc
and
inc
add
enter
lods
mov
imul
jl
sbb
xlat
mov
pop
dec
xor
hlt
call
mov
push
adc
dec
imul
cmp
xor
inc
dec
and
cwtl
adc
xor
mov
lcall
aam
sbb
mov
push
fmuls
sub
test
cltd
xchg
jbe
push
stos
mov
divb
fidivrs
sub
bnd
test
jnp
pop
shl
add
push
dec
sar
out
mov
cmp
daa
add
cmp
test
jno
mov
popa
push
jmp
cmp
push
push
mov
out
inc
mov
jg
aaa
xlat
push
pop
jecxz
fbstp
out
divb
mov
das
cmp
es
mov
xlat
adc
stos
sub
pop
push
addr16
in
jne
sahf
sub
jl
lods
in
push
outsb
dec
mov
jl
mov
mov
and
in
adc
mov
xor
push
adc
lret
push
sub
fs
inc
dec
and
popl
push
mov
shll
mov
jle
sub
call
adcl
jmp
dec
mov
cwtl
loopne
pop
lahf
mov
mov
scas
xchg
pop
sub
and
mov
cs
mov
fdivl
imul
mov
jnp
fidivrs
loop
mov
adc
pop
pop
cmp
mov
dec
sbb
enter
xor
push
and
inc
mov
jp
mov
shl
test
pop
and
mov
sbb
iret
jmp
pushf
sar
dec
mov
dec
mov
or
leave
sub
mov
iret
pop
sahf
aad
sbb
adcl
mov
or
mov
or
xchg
in
mov
push
dec
cmpsl
xchg
js
lds
mov
adc
outsb
jns
and
imul
aaa
mov
xchg
mov
mov
fists
call
jns
inc
enter
inc
xchg
mov
mov
xchg
rclb
mov
pop
cwtl
sbb
add
lcall
cmpsl
mov
lods
cmp
dec
mov
mov
clc
mov
xchg
bound
jle
add
loope
dec
ljmp
push
xor
shr
pop
jns
mov
and
mov
mov
fsubs
aaa
dec
ret
push
cmp
sbb
fldcw
cltd
cmp
hlt
mov
mov
add
adc
in
dec
mov
xlat
addr16
xchg
add
rcr
xchg
fldt
cwtl
sbb
fwait
out
sbb
pop
push
xor
in
inc
and
cmp
jo
dec
push
hlt
mov
or
xchg
in
mov
outsb
loope
ds
ds
popf
cwtl
stos
insl
std
in
je
jb
lods
cmc
jno
sbb
inc
sub
into
test
stc
mov
pop
pop
stos
dec
lret
fisubrs
pop
aad
std
push
xchg
loop
daa
scas
gs
aaa
int3
pop
lret
fwait
push
insb
add
int3
je
stos
in
push
and
fs
clc
pop
sub
fildl
pop
out
jne
push
int
jne
je
popa
push
loope
aaa
or
jl
mov
adc
loope
cmpsb
and
fsubrp
sub
sahf
stos
push
sub
mov
or
in
xchg
pop
inc
sarb
cmp
push
cmp
inc
adc
xor
fucomi
rorl
ljmp
sbb
add
enter
or
fdiv
add
push
leave
aam
mov
leave
fadds
je
push
sbb
cmp
pop
movsb
mov
popf
mov
xor
ja
nop
xchg
add
mov
rcr
lahf
lods
fcmovnbe
ss
rcrl
xchg
ljmp
adc
inc
dec
out
fsts
dec
sar
sbb
test
mov
into
enter
lods
jl
loope
cli
loopne
test
xchg
scas
fdivl
scas
dec
imul
dec
addr16
cmp
inc
fidivl
insl
push
cmp
pop
int
xchg
mov
mov
arpl
out
test
jno
es
mov
dec
sbb
in
test
mov
in
inc
in
mov
jno
jmp
repnz
out
sbb
push
mov
test
gs
cmp
jecxz,pt
movsb
cmpsb
mov
sti
bound
les
lret
mov
ljmp
das
mov
movsl
in
aaa
scas
mov
push
dec
pusha
jmpw
or
sahf
mov
sub
jmp
mov
aas
leave
xchg
daa
jmp
add
pop
mov
xchg
pop
in
sbb
mov
into
xor
fmuls
mov
push
xchg
sbb
fnstenv
fcomip
in
mov
add
movsb
int3
bound
or
sub
mov
push
jl
in
stos
and
fidivrl
push
jo
stc
shlb
sub
shlb
pushf
jle
pop
mov
sbb
insl
cld
push
pushf
add
popf
inc
xchg
shl
in
mov
daa
bound
lea
push
cli
ljmp
or
sub
pusha
pop
fs
mov
mov
dec
sub
fwait
dec
daa
and
mull
cmp
movsl
pushf
cmp
pop
or
leave
dec
shlb
xchg
addb
pushf
push
ret
xlat
in
lea
pop
jle
std
xchg
mov
fstps
imul
lcall
nop
lds
sbb
in
jmp
ljmp
je
jbe
mov
xor
outsl
xchg
push
addr16
or
mov
push
mov
aas
push
jle
cmp
cmp
push
dec
ljmp
mov
jp
xchg
in
lods
mov
test
adc
cmp
ja
addb
bound
xor
xchg
sahf
sbb
dec
sbb
stos
add
loop
int
fcoms
insl
sbb
mov
push
pop
pop
fimull
inc
stos
xchg
adc
enter
test
jbe
mov
mov
cmpb
push
jnp
in
mov
shlb
ret
pop
in
pushf
push
movsb
imul
add
in
pop
sbb
repz
daa
adc
andl
adc
out
push
push
dec
stos
and
negl
roll
pusha
dec
jge
cmp
pop
or
sub
mov
out
jmp
pop
pop
in
xor
mov
rclb
fisubl
decl
jae
sbb
aaa
loope
iret
jb
in
cmp
loope
popf
fimull
cmp
aaa
and
xorl
xchg
mov
std
mov
sbb
add
fimuls
aas
js
push
dec
push
jns
mov
xor
ss
shrb
popa
pusha
jne
faddl
add
les
je
je
and
lods
dec
ja
insl
inc
leave
sbb
pop
mov
sahf
sbb
xlat
pop
rolb
and
push
pop
push
std
test
cmp
imul
ret
int
test
pop
add
inc
pop
cmp
test
adc
pop
ret
push
cmp
orl
dec
or
sub
and
add
xchg
gs
mov
stc
cmc
call
insb
jno
int
mov
mov
je
push
addr16
divb
push
jbe
es
loopne
inc
or
into
out
adc
and
adc
hlt
xor
sub
push
out
adc
or
cmp
cli
stos
dec
dec
je
ljmp
popa
clc
out
js
push
daa
push
mov
outsb
ljmp
pop
mov
enter
notb
lcall
cmp
push
or
das
pushf
add
dec
cs
or
mov
dec
pop
sbb
mov
repz
imul
mov
jge
push
xchg
xor
clc
sahf
fisubs
pusha
aaa
pop
dec
stos
insb
push
mov
bound
pop
addr16
adc
and
cli
xchg
sbb
pop
sbbb
aam
mov
jns
add
in
inc
icebp
cs
das
jns
fs
cmp
iret
pop
xchg
jmp
loopne
fmuls
adc
add
push
xor
les
loop
bound
arpl
repnz
xchg
push
gs
addl
mov
mov
imul
sub
aas
cs
add
lods
push
repz
lods
call
sbb
loope
subl
fdivl
cs
loope
inc
lcall
sbb
out
jmp
pushf
pop
mov
enter
pop
pop
insb
xlat
add
loopne
cmp
loop
and
push
mov
scas
outsl
adc
pop
add
inc
adc
and
sub
repz
or
xor
dec
or
push
sbb
add
xchg
cld
inc
and
inc
mov
fcmove
dec
shl
add
pop
sbb
and
neg
sub
bound
pop
sbb
xchg
movsl
cmpsl
cltd
inc
inc
addb
inc
icebp
incl
and
cmpsl
xlat
cmp
add
nop
cmp
clc
loope
lock
xlat
pop
mov
fsts
aam
popf
incb
ljmp
jmp
ret
mov
xchg
add
ret
sbb
movsl
leave
sbb
in
testl
test
call
repz
mov
into
inc
mov
shlb
adc
adc
fbstp
xchg
jno
mov
fxch
icebp
ljmp
inc
daa
stos
inc
rcrl
jge
imul
scas
xchg
dec
enter
mov
xchg
in
notb
xor
sahf
movsl
flds
xchg
jns
stos
sahf
out
xchg
dec
insl
mov
cmp
mov
ja
sbb
pop
xor
xor
xor
mov
data16
cmp
in
adc
jnp
adc
testb
sub
inc
add
inc
xorl
aad
sbb
fs
in
mov
push
iret
adc
mov
aas
adc
ficomps
cmp
iret
bound
sub
jo
and
dec
fcomip
popf
test
test
mov
movsl
aam
stos
and
enter
mov
jno
mov
loop
cli
dec
inc
cmp
repnz
inc
js
sahf
cmp
inc
jl
andb
cmpsl
jp
scas
pop
aad
scas
negl
push
in
repz
test
sbb
sahf
push
dec
adc
and
sahf
fwait
mov
or
cltd
cmc
sbb
fwait
arpl
cmp
mov
icebp
xor
das
inc
test
and
nop
test
cld
xchg
iret
mov
mul
scas
scas
and
aas
mov
mov
cmp
jle
xor
enter
add
mov
mov
mov
cmp
mov
pop
rclb
add
inc
dec
sub
pop
cltd
aam
push
repnz
push
sub
cmc
sahf
pop
lock
addr16
rorb
mov
push
xor
mov
mov
pop
jb
mov
out
jle
popf
gs
sub
scas
xchg
aaa
aaa
test
xor
sub
fiaddl
mov
jnp
mov
pop
mov
popa
mov
inc
pop
shl
sub
and
adc
pop
in
mov
sar
fcoms
mov
in
pop
mov
jmp
adc
dec
popa
shlb
inc
scas
fcom
out
call
adc
jge
sbb
stos
out
xchg
enter
jp
inc
mov
repnz
xor
lods
jnp
ret
loopne
pop
in
jns
clc
adc
xchg
pop
repnz
xchg
and
jge
fcoms
repnz
lahf
ret
sahf
adc
clc
mov
scas
aas
je
push
mov
push
sub
ficomps
hlt
dec
pop
dec
sti
push
and
sub
push
and
popa
and
push
lds
movsl
jp
fs
aam
lock
lret
fidivrl
shlb
mov
les
sub
pop
xchg
mov
mov
add
pusha
pop
es
gs
mov
cmc
jmp
push
jle
fildll
mov
and
iret
and
sahf
pop
adc
rcl
xchg
leave
out
stc
sbb
fists
jns
and
pop
inc
dec
jo
ret
out
mov
push
les
out
xchg
inc
sbb
lds
adc
pop
cs
insb
ret
pop
inc
cmp
addb
in
jns
sarl
jle
pusha
das
sar
stos
mov
outsb
fildll
fsubrp
inc
out
dec
mov
dec
mov
dec
ja
notl
test
jp
mov
lea
cld
ds
test
jnp
leave
lcall
mov
mov
sti
enter
cmc
cmp
push
push
mov
xchg
jb
lds
lret
in
fsubl
scas
sub
scas
adc
jmp
pop
aaa
add
inc
sub
lretw
sbb
ret
mov
cs
ficoms
sub
ret
xchg
pop
insl
mov
mov
cmpsl
and
push
das
pop
sub
popf
and
mov
aaa
nop
movb
in
pop
sbb
jle
popa
rcll
addr16
adc
xchg
jne
aas
outsb
xlat
fists
sub
push
mov
inc
inc
jbe
pusha
into
xlat
inc
imul
out
cmp
stos
pop
cmp
or
jo
sbb
test
testb
pop
cmc
icebp
jp
cwtl
in
jno
jmp
clc
dec
jns
add
xchg
inc
and
fdivs
or
cwtl
inc
test
dec
xor
sbb
mov
push
insl
fldt
cmp
lods
mov
adc
idiv
stos
cltd
imul
push
cmp
mov
adc
jl
enter
inc
and
movsl
mov
cld
in
jmp
es
dec
mov
shufps
inc
mov
ret
roll
pop
xor
orb
pop
push
stos
pop
neg
cmpsl
popa
push
stos
leave
in
jp
lcall
ret
sbb
icebp
mov
dec
stos
push
jbe
xchg
xchg
jb
mov
push
lret
sub
cmp
mov
aam
in
dec
mov
and
loopne
mov
fidivs
or
inc
je
push
nop
add
dec
call
fcomps
jns
icebp
add
xchg
xchg
jae
test
mov
add
stos
fwait
cmpsb
sbb
mulb
lods
fucomip
jbe
pushf
xlat
sub
sub
inc
dec
jmp
lcall
nop
stc
daa
shrl
ljmp
jnp
dec
or
lret
in
pop
mov
mov
pushf
mov
adc
sahf
arpl
in
xor
dec
into
fisubrs
lret
movsl
pop
push
orb
lds
push
or
or
and
in
sbb
dec
cltd
mov
aaa
add
scas
add
out
inc
aad
popa
or
stos
in
jns
clc
loope
fdivrl
lock
cmp
loopne
mov
dec
imul
loop
fimuls
pop
addb
sub
jbe
fwait
sahf
decl
jp
add
in
pop
daa
sub
jnp
cmc
pop
pop
scas
cli
cmp
movsl
fldt
call
mov
insb
jecxz
xlat
and
out
out
lahf
pop
scas
ret
xor
ljmp
dec
pop
xchg
push
jnp
cmp
push
mull
sbb
mov
sub
pop
out
or
push
popf
aad
in
in
lock
dec
ss
add
in
dec
cli
xor
push
add
mov
out
push
and
fimuls
jp
cmp
shl
pop
mov
outsb
mov
subl
inc
lea
mov
lods
mov
xchg
shrb
in
add
enter
imull
mov
add
pop
sti
or
jecxz
in
in
pop
mov
xor
lods
fisubrl
dec
in
fidivl
bound
mov
xchg
jmp
cli
push
fs
hlt
push
icebp
pop
and
in
and
shl
dec
pushf
inc
in
arpl
int3
sub
or
xor
push
adc
aas
in
push
jae
add
xor
inc
jbe
movsl
cmp
mov
ret
push
iret
out
roll
add
repz
ds
adc
daa
mov
icebp
repz
sti
inc
in
sbb
pushf
or
lahf
mov
add
dec
cld
decb
aaa
push
fldl
xor
aad
dec
cmp
mov
enter
and
in
jne
mov
in
pop
aam
fistps
mov
xlat
xor
push
dec
pop
incb
or
push
sti
test
xor
rcrb
cmp
push
jmp
inc
fldenv
inc
dec
sbb
sub
jge
and
push
fisttpl
push
ja
gs
push
cltd
dec
xor
jg
add
cwtl
ja
shlb
lahf
stc
xchg
dec
test
jb
in
mov
int
mov
dec
or
ljmp
fwait
sub
pop
mov
lret
dec
sahf
inc
aam
cltd
add
jmp
push
and
or
mov
popa
or
flds
pop
or
stos
fdivrl
cmc
call
and
js
or
in
jno
test
scas
inc
mov
into
cwtl
cmpsb
push
roll
lods
pop
xchg
add
adc
xor
js
or
or
test
jb
sub
fxch
cmp
inc
mov
repz
sub
jno
lret
pop
stc
mov
in
outsl
sub
or
je
mov
mov
and
jae
mov
mov
test
mov
pop
jae
ret
cli
test
jnp
btl
sbb
mov
leave
mov
in
and
add
push
xor
mov
int3
cmp
mov
fldenv
test
ret
movsb
pop
mov
rcrl
dec
hlt
fs
je
pop
push
xchg
lock
fs
xor
stc
mov
jbe
push
push
daa
pop
jl
fcompl
in
inc
push
insb
scas
or
pop
out
cmp
lea
add
aas
rcll
or
sub
mov
mov
ret
pusha
push
mov
add
mov
int3
int3
das
jne
adc
dec
dec
inc
pop
mov
les
out
popl
mov
fnstsw
mov
xor
inc
jb
sub
movsl
jle
mov
out
add
inc
insl
insb
out
sbb
addr16
or
adc
mov
aad
or
add
ret
mov
dec
cwtl
dec
jnp
adc
xchg
fstps
add
or
or
push
sub
pop
adc
adc
mov
mov
aas
add
les
sarl
xlat
int3
fmuls
icebp
cs
push
shrl
mov
inc
inc
inc
sbb
mov
cmpsl
xor
or
test
mov
mov
inc
insl
cmp
cltd
pop
dec
jo
int
loope
into
mov
lret
mov
cmc
mov
ss
test
es
xchg
mov
mov
fcoms
cs
push
xchg
decl
lret
jp
sub
loop
cmpl
fistps
rcrl
loope
mov
lret
adc
inc
popa
sub
lret
les
fs
sub
sub
pushf
loop
iret
inc
je
mov
negl
mov
test
mov
xchg
call
loopne
inc
invd
mov
cld
jge
int3
mov
push
sub
stos
outsl
dec
repz
inc
aad
mov
in
adc
lods
xchg
ja
pop
pop
out
into
sbb
stos
inc
and
call
cli
dec
imul
xor
aas
xor
int
mov
mov
imul
pop
shrl
lds
mov
mov
fmull
dec
push
jmp
push
sbb
mov
addr16
add
jl
xchg
das
popf
jnp
jmp
push
mov
sub
jle
inc
jns
inc
movsl
sub
xchg
out
cmpsb
stc
popf
pop
mov
test
pop
cs
call
add
outsl
lods
das
push
sti
mov
outsb
orl
cwtl
or
lods
pushf
mov
ja
jns
jno
sti
and
dec
xchg
push
pop
mov
xchg
in
imul
sub
and
rolb
and
inc
fmull
popa
xlat
add
jge
lods
mov
movsl
push
xchg
enter
cmp
in
push
adc
cltd
int3
js
xor
sahf
lret
out
mov
jge
pop
inc
add
test
push
mov
xchg
or
add
and
or
repz
jp
lods
jnp
leave
or
pop
repz
hlt
pop
cmp
push
addr16
push
xchg
xor
nop
pop
pop
or
pop
aas
lret
clc
fcmovb
hlt
js
jl
aad
ret
pop
dec
fucom
sti
push
inc
cmpsl
leave
dec
shr
jg
mov
sub
inc
movsb
and
std
jnp
test
push
jge
test
fcoml
xchg
xchg
lods
cmp
push
push
and
in
mov
mov
dec
jne
fmul
push
mov
mul
xchg
fidivrs
repnz
jge
jl
and
xchg
mov
jne
shl
cmp
ja
stc
cwtl
or
xchg
sbb
cwtl
jb
stc
dec
pop
adc
mov
ss
and
stc
and
push
mov
inc
in
pop
cmc
je
nop
popf
fwait
lahf
divl
imul
cmp
pop
pop
rcrb
pop
mov
sub
cmp
push
fwait
jle
dec
sub
js
pop
leave
pop
xor
pop
les
and
push
jo
add
arpl
in
ja
and
lret
popf
dec
out
sub
inc
cmovg
stos
add
xchg
in
inc
insl
or
cmp
roll
mov
les
lea
mov
call
or
out
pusha
mov
push
subb
lahf
sub
mov
int
adc
imul
mov
mov
mov
pop
sbb
push
or
mov
adcb
ss
testl
add
add
in
popa
add
lcall
jmp
scas
shll
jb
es
repz
clc
cmp
mov
dec
xor
sahf
test
jo
push
leave
pushf
sbb
mov
lock
pop
ret
pop
pop
inc
mov
cmpl
test
jecxz
call
cli
leave
xor
jne
int
xchg
daa
xlat
push
jo
shlb
mov
xchg
aad
xor
lret
pushf
push
std
or
mov
pop
movsl
psubusw
fs
data16
pop
xchg
popa
mov
lock
dec
or
out
mov
xchg
inc
nop
inc
fdivrs
push
mov
dec
xchg
js
int3
jg
cmc
mov
cli
insb
mov
cltd
jnp
test
das
mov
jecxz
popf
xchg
fnstenv
mov
sarl
movsb
daa
mov
jns
lret
mov
adc
jl
test
orl
gs
xor
insl
mov
add
push
aaa
jmp
add
mov
mov
imul
pop
cmc
mov
bound
scas
cmp
add
and
xor
repnz
add
push
cmp
enter
ljmp
test
pop
flds
fnstcw
lds
add
add
pcmpeqd
lds
jmp
fbstp
outsl
ret
imul
aaa
std
mov
mov
mov
mov
mov
js
add
jle
mov
or
outsl
pop
and
pop
dec
fmul
inc
mov
loopne
jl
iret
xlat
jl
adc
push
mov
mov
repz
das
ljmp
jl
add
ret
inc
push
or
cmp
mov
jmp
xor
adc
mov
movsl
in
enter
cmp
push
xchg
iret
cli
das
mov
jo
sub
xor
shl
repnz
fnsave
fsubs
jo
mov
inc
xor
push
dec
aaa
xor
or
lret
or
filds
sarb
add
in
jne
mov
subl
iret
arpl
es
std
add
or
rolb
or
inc
in
stos
push
bound
pop
cmp
jg
mov
or
int
sbb
pop
inc
imull
sbb
cmp
sahf
sub
fadd
movsb
xor
and
movsl
popa
jb
fnstenv
imul
lret
add
or
mov
jbe,pn
loope
outsb
xor
loop
mov
cmp
icebp
insb
mov
incb
in
loop
dec
mov
mov
push
sub
sub
fsubrl
or
outsl
flds
cmpsl
addr16
xchg
xchg
mov
jl
mov
sahf
cs
lock
popa
sub
into
pop
xchg
icebp
or
loop
mov
cld
imul
mov
sahf
xchg
cmc
dec
in
mov
jge
adc
xor
imul
push
mov
sub
mov
pop
sahf
in
mov
jp
jmp
pop
lock
and
sbb
jg
push
xorb
mov
inc
dec
cmp
cmc
cmpsb
pop
mov
or
test
dec
rcrl
jecxz
inc
ds
icebp
pop
pop
pop
loopne
xor
ja
jge
adc
in
out
hlt
ret
fisttps
imul
or
or
fs
in
bound
mov
push
mov
fwait
mov
fcom
loopne
jg
and
inc
dec
into
shll
icebp
xchg
hlt
cmp
lret
loop
xor
xchg
adc
iret
movsb
sahf
or
sbb
loope
push
xchg
lea
out
dec
stos
mov
xchg
push
mov
pop
or
jae
mov
jbe
lcall
lcall
xor
xor
inc
in
repnz
or
outsb
or
lret
imul
pusha
push
test
lock
push
in
fdivrl
jb
add
cmp
xchg
xchg
mov
or
das
insb
into
nop
dec
das
stos
sub
pop
add
adc
fldl
out
jle
mov
mov
jne
xchg
push
sub
push
and
or
lods
mov
out
rcr
xchg
push
sbb
and
xor
jle
cmp
sbb
push
sbb
les
scas
sbb
ss
sbb
mov
push
fs
and
cli
ficoms
and
cmp
inc
push
inc
cmp
xchg
jle
jne
sbb
das
pop
mov
mov
cmp
mov
in
mov
jb
mov
mov
fisubrs
les
xchg
movsb
leave
xchg
push
push
inc
mov
addr16
pop
adc
fldenv
iret
push
movl
stc
pop
incb
popf
push
sbb
jns
out
jge
lret
dec
xor
repnz
lods
daa
ja
stos
test
bound
lods
mov
pusha
in
jns
adc
lcall
adc
mov
mov
jbe
sahf
jb
shll
jb
pop
inc
push
and
iret
cmp
add
sbb
xchg
pop
roll
inc
divl
cltd
dec
xchg
jmp
sub
das
ja
sbb
out
scas
outsl
cmpsb
rorl
ret
sbb
sbb
shufps
pushw
add
mov
xchg
cmp
jns
sar
mov
in
sbb
push
dec
inc
in
test
fisttpll
jmp
enter
dec
xor
xor
lea
mov
outsl
pop
insl
dec
mov
ret
cs
dec
ja
movsl
insl
mov
outsb
sahf
std
jmp
dec
jo
mov
xor
ret
out
sbb
aad
imul
pop
call
or
fxtract
mov
and
and
mov
push
mov
mov
aas
adc
out
in
shl
add
fiaddl
lods
mov
or
shl
movsb
xchg
mov
push
mov
adc
mov
into
aaa
xchg
dec
add
es
iret
sbb
add
jmp
sbb
sti
ljmp
enter
sbb
xchg
fsubrl
lea
outsb
stos
inc
sub
enterw
push
fiadds
fsts
sarl
jp
test
outsl
mov
jno
cmpsl
mov
idiv
push
and
in
adc
out
in
inc
jge
subl
cmp
in
iret
mov
repnz
loope
push
test
xor
push
sbb
pop
unpckhps
mov
int
mov
pop
mov
push
add
ss
sbb
lods
and
lahf
xlat
cli
mov
stc
mov
and
pusha
pop
popf
jecxz
imul
and
adc
sbb
imul
inc
jo
mov
das
loop
xor
adc
stc
bound
iret
dec
pop
cmp
and
push
sbb
int3
sub
push
cltd
sahf
mov
jmp
dec
jb
das
adc
movsb
jnp
ficomps
fbstp
fcomi
push
in
sub
pop
mov
push
sub
bound
xchg
adc
push
sub
outsb
dec
and
cmpsl
dec
xchg
mov
cmpsl
inc
pop
stos
int3
and
subl
push
daa
xchg
out
sub
inc
pop
mov
fndisi(8087
xor
lret
insl
sub
movsb
or
xor
xchg
outsb
push
push
call
push
dec
cmp
and
push
lcall
jmp
push
xchg
xor
push
inc
enter
popa
jg
int3
add
cmpsl
scas
inc
and
neg
inc
jne
and
pop
cmp
mov
rorl
into
push
sbb
adc
call
sub
adc
push
xor
pusha
dec
jmp
fbstp
push
out
jno
insb
xor
xchg
cmp
outsb
push
push
js
popf
mov
movsb
mov
cld
mov
sti
ljmp
inc
push
push
stc
sbb
rclb
sarb
mov
dec
cltd
inc
cmp
mov
mov
xchg
xor
in
dec
cmp
aaa
mov
ret
mov
add
lods
mov
cmp
nop
and
jne
insb
push
movsl
rclb
or
insb
fmulp
cmp
dec
fwait
ret
add
or
push
jae
mov
loope
push
adc
sbb
and
test
sbb
sub
aad
cmp
push
jne
pushf
mov
out
js
stc
test
lea
hlt
and
pop
out
xor
sbb
imul
mov
mov
stc
test
rclb
jnp
pop
push
sahf
dec
push
aaa
hlt
subl
js
sub
mov
mov
or
xor
addr16
inc
mov
in
fcmovnbe
test
js
xchg
cmp
and
std
in
add
cwtl
inc
sbb
xchg
lret
ss
pop
fisubrl
cmp
fmuls
xchg
cmp
add
xor
loopne
outsb
negb
cmc
sarl
pop
xor
cli
push
popf
shlb
fwait
out
cmp
les
pop
into
pop
cmp
repz
push
addr16
out
mov
pop
je
push
jl
xor
cmc
pushl
mov
dec
mov
pop
dec
je
loop
add
cmp
insb
pop
mov
loopne
xorl
inc
lcall
pop
push
and
ja
or
fdivs
push
or
out
movsl
jge
cmc
sti
je
fs
sub
mov
fwait
mov
dec
lods
jae
aad
outsb
andb
stos
pop
mov
jecxz
imul
dec
cmpb
pop
out
loope
push
mov
push
adc
and
fiaddl
imul
sysret
cltd
shld
lock
dec
or
jnp
es
das
inc
cmpsb
sbb
xchg
imul
scas
xlat
in
jo
mov
mov
push
sahf
je
cmp
adc
jo
sbbb
mov
movsl
aaa
imul
xchg
int3
inc
mov
or
shlb
je
mov
mov
adc
fs
lret
sbb
push
adc
fists
cwtl
xor
adc
psadbw
shrb
or
mull
clc
sub
inc
cmp
lods
lret
fsubl
bound
out
jns
ret
loopne
push
and
addr16
jle
ret
mov
mov
pop
inc
add
mov
ljmp
mov
clc
cltd
and
cmp
mov
mov
cmp
mov
push
inc
jg
ficomps
cs
lock
into
lods
in
mov
jne
mov
dec
mov
sarl
jnp
xor
add
mov
daa
mov
adc
scas
lret
jmp
test
pushf
popl
out
out
ret
jl
js
daa
push
adc
loopne
loopne
pop
popa
shr
ds
sub
cs
cs
sahf
mov
push
test
repnz
movups
std
add
or
test
data16
mov
xor
inc
scas
arpl
imul
add
jg
sahf
enter
lock
std
push
test
mov
das
sub
pop
mov
pop
or
aas
adc
jne
fcmovb
data16
call
icebp
xchg
inc
out
movsl
int
inc
fiadds
sbb
cmpb
cmp
mull
addr16
push
fnstsw
sbb
or
jcxz
mov
xchg
push
lods
dec
xchg
adc
cmpsl
inc
adc
sub
cmp
lcall
das
add
fnstcw
ss
mov
pop
data16
inc
jl
add
inc
int3
loopne
push
in
adc
inc
add
dec
shll
jle
orl
push
scas
aam
cltd
xor
shlb
jbe
test
out
add
sbb
dec
nop
fldt
lods
addr16
je
jns
mov
fisttps
pushf
shrl
cld
shlb
movsb
scas
sbb
or
sti
mov
call
pop
aaa
shlb
mov
scas
mov
and
jns
adc
jne
lahf
mov
lret
call
mov
ja
jmp
shlb
scas
loopne
hlt
or
mov
sub
std
pushf
ljmp
pop
ror
in
dec
jge
popa
int3
mov
test
push
popa
stc
mov
mov
jne
aad
adc
aam
je
push
bound
mov
inc
icebp
mov
scas
cmp
pop
mov
cwtl
pop
push
mov
pop
xor
add
jnp
push
jecxz
adc
mov
adc
fiaddl
cmp
addr16
lods
inc
jmp
push
scas
adc
sti
incl
iret
sbb
movsl
xchg
jo
sub
cmp
or
inc
js
les
lret
pop
adc
gs
xchg
lcall
mov
cmp
inc
sub
nop
and
mov
pop
dec
sub
popf
mov
roll
gs
outsb
cmpsb
inc
jo
dec
push
pop
cmpsb
xchg
bnd
outsb
pusha
fisttpll
mov
test
pop
xchg
push
ja
mov
jl
xor
fcmove
lahf
cmp
pusha
mov
out
mov
int3
shrl
xor
xor
iret
jnp
inc
cmpb
ljmp
mov
push
outsb
adc
inc
out
andl
insl
dec
rclb
xchg
mov
pop
testb
movsb
clc
mov
jecxz
sbb
push
dec
push
mov
dec
mov
cmp
pushf
insb
mov
mov
pop
or
xor
and
lret
and
mov
adc
fsts
fnsave
xor
dec
pop
and
jecxz
xchg
fnstcw
shll
or
or
jne
jbe
mov
fstpl
nop
cmpsl
xchg
loop
push
hlt
inc
loopne
movups
pop
das
scas
jae
mov
imul
repz
loop
lea
nop
aas
pusha
imul
add
mov
push
bound
sahf
hlt
inc
add
mov
cli
push
mov
jmp
push
iret
mov
shlb
das
out
hlt
pusha
ja
fcmovu
push
add
inc
adc
xchg
add
push
outsb
dec
es
sbb
std
xchg
imulb
lret
fcompl
int3
ss
mov
push
pop
adc
jmp
sahf
shrb
xchg
dec
cld
out
push
ret
jbe
insb
sub
sbb
in
addl
lods
push
xchg
fmull
neg
lahf
sbb
xchg
mov
test
mov
ja
sub
or
inc
xchg
lods
mov
xchg
cmp
dec
in
pop
in
fisubs
scas
sarb
mov
mov
mov
dec
scas
popf
pushf
push
jns
dec
int
mov
aaa
pop
dec
sarb
mov
arpl
mov
movsb
sbbb
pop
cmp
insl
mov
lods
sbb
repz
aaa
sub
addl
repnz
mov
out
dec
push
mov
lds
sarb
mov
xor
xchg
bound
jnp
ds
lods
ds
push
mov
mov
ret
mov
test
push
or
jl
push
adc
shll
adc
push
push
sbb
mov
or
sti
popf
add
dec
dec
xor
inc
in
sub
jae
pop
in
mov
out
sbb
jmp
xchg
push
sub
stc
xchg
pop
mov
imul
xor
xchg
xchg
pusha
pop
pop
cmp
cmp
jmp
rclb
incb
mov
push
sahf
insl
push
out
dec
mov
pop
les
add
movsl
scas
loope
ljmp
mov
cmpsb
mov
dec
aad
and
xchg
dec
mov
loope
aaa
insb
imul
mov
pop
xchg
outsb
mov
sarb
pop
pop
fs
leave
push
gs
sahf
unpckhps
dec
push
sahf
jnp
lret
enter
and
orl
jne
xchg
push
pop
mov
leave
jle
adc
xorb
subl
nop
test
push
pushf
and
dec
sbb
push
push
jge
fcomps
in
dec
jmp
xor
popf
aaa
dec
jnp
dec
dec
in
iret
clc
mov
lahf
aam
mov
fistl
aad
jecxz
cmp
add
fistpll
out
adc
or
pop
mov
fidivs
jle
fwait
xchg
loop
je
test
cmp
hlt
xor
stos
lcall
mov
mov
jmp
xchg
or
pop
lods
sarl
in
mov
testb
cmp
mov
push
movsb
je
ss
sbb
ljmp
pop
lcall
jp
jg
add
js
mov
mov
pop
out
and
xor
arpl
pusha
jno
push
dec
cmp
or
rclb
lret
push
cltd
lods
push
shlb
pop
sti
aas
cmp
cmp
pop
push
call
push
push
mov
imul
lret
pop
dec
test
adc
pop
push
add
out
sahf
cli
out
inc
inc
xchg
xchg
imul
mov
pop
inc
das
stos
ret
or
mov
xchg
not
inc
mov
popf
jne
pop
push
arpl
inc
in
and
sub
push
mov
jg
addl
out
outsl
xor
jg
sub
push
pop
sbb
mov
pandn
pop
xor
mov
imul
popf
aas
jno
sub
or
stos
xchg
clc
lcall
or
pushf
nop
adc
cmpl
lcall
lock
mov
jne
iret
in
mov
movsl
adc
sub
arpl
lods
pop
idivl
adc
dec
pusha
ljmp
sub
fsub
sbb
pop
lods
cmp
mov
xchg
and
ja
icebp
inc
pop
fsubs
ud0
cmpsb
push
or
mov
mov
lock
mov
fwait
mov
ret
mov
push
xchg
movsl
cmc
cmpsl
mov
aas
jnp
dec
push
and
xchg
cmp
xor
pop
xorl
jp
nop
pop
xchg
pop
test
mov
dec
xor
cmpsb
popa
and
lods
cld
sbb
sbb
mov
push
jb
pop
mov
in
and
push
insl
aad
int3
fimull
or
in
dec
ficoml
sbb
xor
jb
lahf
add
mov
push
jbe
adc
inc
ds
out
mov
sbb
xchg
incl
pop
fs
xlat
add
ds
cmpsb
sar
cmp
rorb
das
cmp
out
adc
sub
ja
outsb
cld
xor
loopne
add
cmpl
mov
aad
mov
pop
cltd
inc
push
jo
enter
ja
xor
sbb
fistpl
popf
mov
mov
sbb
dec
fdivrl
outsl
add
pushf
in
sbbl
jae
inc
aam
or
dec
rcl
fs
add
add
sbb
in
nop
sbb
mov
in
roll
mov
ficoms
imul
ja
mov
xor
mov
cwtl
mov
test
jo
ffreep
cmp
or
test
scas
cmp
fldenv
stos
orl
pop
push
push
mov
mov
testl
jp
jge
cmp
jg
mov
mov
mov
jg
jo
mov
shrb
repnz
cld
xchg
pop
ds
movsl
in
pop
lret
es
adc
daa
lcall
adc
jmp
out
pop
test
iret
inc
inc
popa
mul
lods
cmpsb
push
popa
and
sub
adc
leave
jb
lret
fbld
push
mov
mov
jp
rorb
adc
add
imul
sub
jae
orb
fnsave
jae
mov
mov
repz
mov
xchg
fdivrs
ret
test
outsl
fiadds
mov
mov
jnp
test
pop
add
push
push
in
inc
leave
out
ja
insl
pop
push
adc
inc
mov
and
xor
push
hlt
cmp
out
mov
push
mov
aaa
xor
and
aad
je
popf
icebp
dec
add
xchg
movb
push
shr
adc
bound
pop
cltd
mov
add
fbld
push
xchg
outsl
push
insl
adc
mov
lret
enter
inc
mov
push
loope
enter
imul
test
loop
test
cwtl
and
xlat
push
rcr
or
xchg
xor
cmp
lods
out
neg
imul
jo
add
aad
mov
and
xor
ja
stos
push
jmp
jecxz
sub
add
jne
mov
xchg
xchg
cli
scas
cmpsl
jl
cs
out
add
insb
mov
xchg
or
add
jo
movsb
cs
xchg
jl
data16
int
push
cmpsl
pop
mov
arpl
cmovo
in
std
ret
jmp
rcll
xor
xlat
jne
and
lret
call
loop
lock
sbb
mov
inc
mov
inc
inc
loopne
stos
mov
inc
mov
cmp
int3
inc
cmpsl
aad
mov
inc
insb
pushf
testb
lds
add
les
push
pop
sub
or
in
pop
pop
mov
fmul
add
inc
cmp
xor
jns
int3
mov
sbbl
stos
inc
xor
stos
scas
shlb
cld
cltd
clc
ret
push
std
call
xchg
xchg
aas
xchg
lahf
mov
mov
testl
negb
xchg
stc
out
cmpl
lods
xchg
sub
add
sbb
jge
adc
jecxz
cvtps2pd
push
mov
ss
mov
pop
pop
int
adc
jno
and
repnz
rol
imul
fimull
push
ljmp
inc
cmp
jbe
cmp
sbb
sub
xor
mov
insl
add
jo
or
mov
and
mov
xor
in
fsubrl
pop
loop
adc
scas
adc
popf
ret
stos
pop
xor
in
xchg
aam
inc
lds
push
in
sbb
xchg
clc
push
into
push
shlb
add
inc
mov
mov
lret
in
ja
or
and
test
sysenter
mov
pop
fmull
xchg
push
sub
push
dec
in
lret
add
push
mov
xorb
int3
adc
adc
das
loop
xchg
jg
in
mov
stos
or
addl
mov
mov
cmpsb
sub
adc
loope
jne
adc
filds
and
xchg
dec
or
cmp
popa
pusha
xchg
loop
int
jae
in
sbb
pop
aad
call
mov
movsl
or
jl
jnp
or
insl
mov
ds
fmul
mov
pop
cmpsl
jb
or
push
cwtl
js
loope
sarb
in
mov
pop
pop
cmp
cmp
push
icebp
xchg
das
lds
repnz
xor
or
sub
pushf
icebp
outsl
pop
pop
jne
dec
arpl
ljmp
jne
aaa
jge
or
mov
sub
add
test
adc
push
scas
add
js
int
xorb
pop
arpl
fs
adc
nop
or
lods
out
outsb
dec
dec
cmp
and
cmp
ret
jle
sbb
pop
inc
insb
adc
mov
out
fsubs
sub
adc
out
imul
dec
cli
sahf
fisttpl
pop
mov
sub
mov
mov
inc
ror
popa
mov
push
faddp
and
pop
inc
iret
repnz
shl
push
cmp
xlat
arpl
cmp
fildll
add
adc
xchg
iret
mov
lock
fcomps
mov
xchg
mov
push
jle
sub
add
sbb
pop
add
jae
jne
cmp
cmp
lock
mov
stos
loopne
out
in
push
jae
adc
loope
rorl
ljmp
and
add
mov
outsl
stos
movsl
dec
scas
jbe
les
mov
pop
adc
push
std
fistl
jge
add
ror
mov
pop
mov
bound
xor
adc
inc
xor
ss
mov
xor
or
push
je
pop
lods
lcall
fsubrl
scas
mov
adc
cltd
stos
push
clc
cmc
fistpll
xor
push
inc
and
xchg
inc
divb
cmpl
imul
jecxz
lret
ljmp
jno
into
mov
insb
xor
dec
adc
lea
dec
mov
and
adc
xchg
stc
pop
cmpsl
fldcw
add
test
shlb
sub
loop
inc
adc
repz
std
adc
jg
out
sub
movsl
pop
jne
cltd
push
mov
sbb
shll
push
pop
scas
sub
mov
pop
jb
mov
lcall
xor
jmp
adc
xchg
xor
push
loop
dec
stos
test
es
ds
int3
pop
xor
cmp
cltd
dec
orl
popa
push
xlat
movsb
add
sub
dec
cmp
and
jl
xchg
push
mov
jge
inc
push
mov
dec
outsb
cmp
adc
addr16
jnp
xor
mov
imul
rcl
push
loopne
rolb
and
int3
rep
addb
frstor
mov
or
lret
mov
sbb
xlat
rorl
jge
mov
stos
adc
push
imul
push
movsl
std
sub
mov
or
mov
fwait
jl
fimull
lcall
push
rcrl
xchg
pop
sbb
pop
push
mov
pop
adc
lahf
dec
sub
and
inc
in
out
daa
outsb
xor
mov
ss
lods
lret
mov
lret
add
push
cmp
test
push
mov
mov
inc
test
fcomps
out
sub
cmp
fwait
jg
addl
inc
xchg
cmp
cmc
aad
push
add
inc
mov
jp
pop
xor
fistps
in
dec
fiadds
repz
jmp
pusha
clc
test
out
dec
xchg
cld
mov
rolb
mov
inc
or
scas
lods
insl
inc
inc
ret
dec
data16
dec
jo
int3
add
or
movsl
fs
fnstenv
lahf
jge
mov
out
jmp
lds
mov
sub
xor
lret
imul
lahf
adc
xor
test
dec
nop
aaa
cmovno
mov
push
xor
inc
cmc
jge
cwtl
pop
and
out
in
mov
adc
rorb
cltd
imul
inc
sub
stos
test
sub
int3
sbb
out
mov
insb
int
out
xchg
sbb
mov
out
out
mov
in
dec
push
rorb
rclb
push
push
shlb
mov
cmp
mov
xchg
loope
popa
sbb
mov
into
sbbb
xchg
mov
setge
ja
shr
mov
push
sahf
lods
aas
iret
arpl
xchg
insl
movsb
sbb
lahf
es
hlt
mov
cmp
mov
cmp
jae
test
loop
xor
sti
das
mov
popa
cmp
dec
into
clc
xchg
pop
pop
xor
cmp
ret
cltd
dec
push
dec
pop
cs
inc
mov
mov
mov
pop
jno
std
sbbl
andl
adc
fbld
push
xchg
and
sbb
inc
sub
lahf
mov
cmp
adc
das
jg
or
mov
lret
gs
cmp
xor
sub
jmp
push
sti
pop
jecxz
jmp
scas
sub
jb
test
lds
cmp
gs
jno
testb
mov
iret
insl
mov
sbb
jg
lds
std
dec
mov
adc
push
push
adc
sti
cmp
mov
xor
fidivrs
ret
inc
jmp
mov
int3
inc
fidivrl
sub
ljmp
jne
fimull
pop
add
xor
sub
xor
jmp
aad
movsb
fbstp
das
push
lcall
nop
mov
out
idivl
add
mov
xchg
pop
data16
sarl
jo
jo
insb
fdivp
lcall
adc
subl
fs
adc
jb,pt
dec
push
adc
mov
mov
lea
test
xor
mov
jb
or
arpl
push
jbe
popf
push
pushf
je
sbb
pop
mov
sub
push
jb
jge
stc
insl
xchg
out
and
ret
mov
mov
mov
mov
inc
inc
push
fadd
ss
addr16
dec
data16
lcall
repnz
sbb
jmp
fcomip
fistpl
fnstcw
adc
pop
lods
insl
adc
xor
out
push
inc
lcall
fistpll
es
scas
add
push
icebp
mov
inc
or
mov
xchg
pop
lcall
or
mov
loop
or
and
cmp
cmp
mov
je
popf
test
xor
aaa
outsl
xor
sub
push
mov
mov
inc
int3
sbb
dec
inc
shll
pop
and
out
push
xchg
jae
test
pop
and
test
jecxz
mov
adc
call
dec
int3
repz
lret
cmp
jne
roll
adc
sbb
and
pushl
pop
push
imul
nop
pop
mov
iret
sub
mov
ds
pop
inc
add
xor
or
push
ljmp
cmp
inc
mov
cmp
sarl
cld
iret
imul
mov
mov
hlt
cmp
call
imul
push
jnp
out
call
addr16
outsb
pop
adc
loope
pushf
sub
icebp
sti
inc
shrb
test
stos
jle
out
lock
mov
jb
cmpsb
sbb
fistpll
xchg
int3
idivb
scas
rorl
movsl
insb
pop
mov
rolb
push
add
cmp
int3
lret
cmp
data16
test
or
out
sub
mov
mov
js
mov
iret
push
and
inc
cltd
dec
nop
ss
repnz
mov
push
fcmovnu
dec
lds
into
jbe
pop
or
mov
out
and
dec
in
mov
das
fmulp
shrl
cmp
mov
mov
mov
sub
nop
push
scas
rolb
stc
xchg
and
lcall
push
rcrl
push
fs
jns
repnz
lods
popf
cmp
sbb
fildll
lods
xchg
mov
imul
pop
mov
lahf
fisubs
dec
fstpt
cmp
xchg
bound
cmp
ds
xchg
cli
sbb
dec
arpl
or
mov
out
inc
insb
test
add
negb
cmp
mov
cmp
add
mov
adcb
sub
xlat
and
int3
sbb
pop
pop
cmp
mov
clc
mov
cmpl
sbb
push
mov
movl
cmpb
std
mov
push
xlat
xlat
cmp
js
pop
sub
stos
cmp
push
lock
xor
xlat
add
push
ret
imul
or
icebp
imul
daa
sub
in
pop
je
test
xchg
mov
popf
jno
jnp
sub
imul
jns
mov
xor
fs
popa
mov
scas
xchg
fs
pop
mov
inc
mov
sbb
hlt
mov
ret
sahf
cmp
in
lods
int
ljmp
enter
pop
insl
adc
jno
mov
mov
mov
test
jg
mov
pop
mov
mov
pop
in
in
call
add
pusha
cld
and
insb
subl
pusha
cmp
in
mov
jae
mov
shr
in
cwtl
sar
mov
dec
outsb
les
jle
sbb
mov
mov
sbb
xlat
ljmp
or
and
mov
ja
es
or
aad
jne
and
outsb
scas
sub
push
cli
push
or
ffreep
clc
bswap
mov
inc
mov
cmp
adc
xor
jnp
cmp
rcrl
add
and
mov
mov
enter
mov
in
inc
pop
pop
insl
xor
iret
push
lahf
inc
out
mov
or
mov
cmp
add
inc
pop
in
sbb
mov
fiadds
mov
outsb
add
adc
jge
das
orl
popa
sub
mov
mov
adc
leave
loope
cs
cmp
cs
xchg
dec
loopne
out
pushf
shlb
aaa
sub
xchg
iret
add
xorl
sbb
xor
lahf
scas
int
popa
lods
jae
cld
cltd
iret
insb
inc
xchg
mov
mov
outsl
gs
cmp
jl
or
cmp
mov
push
add
ficomps
adc
daa
mov
mov
jo
insl
jmp
mov
lahf
scas
cmpb
push
outsb
arpl
cmpsl
out
pusha
int
or
mov
stos
xchg
xor
int
push
push
dec
enter
mov
pop
mov
push
push
inc
insl
sbb
push
sbb
outsl
jmp
arpl
push
movsb
inc
jmp
add
and
cmpsb
add
jb
hlt
cmp
jecxz
or
in
push
xlat
mov
notl
fdivs
xchg
inc
and
jo
and
add
jns
or
cld
push
inc
test
sbb
mov
fmul
mov
push
jb
mov
mov
inc
lock
sub
lods
jp
sbb
pushf
xor
pop
push
jns
jnp
push
mov
adc
dec
sti
jbe
fisttpl
mov
mov
aaa
mov
pop
sbb
das
cmpsb
lret
cmp
pop
and
xchg
jne
loop
pop
lds
leave
or
cmp
mov
mov
or
cmp
inc
test
into
stos
cmp
idivb
ret
js
cmp
dec
shrl
mov
aas
pop
xchg
js
push
in
dec
mov
mov
mov
imul
sbb
out
lret
xchg
mov
fnsave
jb
cltd
adc
sbb
sahf
sub
pop
mov
xchg
test
mov
adc
cmpsl
lret
push
mov
into
add
pop
cmp
lds
sbb
lea
je
out
add
dec
pop
fiaddl
dec
es
push
sub
push
movsb
add
in
xchg
xchg
mov
int
cmp
pop
dec
push
sub
push
jbe
in
and
mov
push
decl
sbb
ja
scas
into
aas
lret
roll
test
add
mov
ja
mov
or
or
mov
add
stos
push
out
or
add
push
add
or
xchg
mov
xchg
lahf
and
ret
pop
xor
lcall
xor
out
shl
dec
sub
loopne
jp
xchg
test
jne
cli
push
cltd
mov
outsl
or
mov
push
filds
lock
mov
ficomps
aad
pushf
push
or
cmpsb
stos
lds
sbb
lret
inc
jge
hlt
lahf
dec
rorl
xor
sub
nop
cmp
test
jo
mov
fidivrs
scas
sbb
sub
mov
dec
popf
into
jmp
fidivs
lret
out
and
movsb
es
add
les
scas
fdivrl
mov
cmpsl
lcall
es
lret
int
dec
inc
xor
stos
pop
in
lods
fwait
push
jmp
xor
push
add
inc
add
shl
mov
xor
dec
jp
adc
xchg
pop
imul
shlb
xchg
mov
fcoms
jno
in
push
mov
lret
aad
cmpsl
push
mov
in
adc
loope
and
out
aas
lea
negb
daa
mov
popf
xchg
mov
xchg
cwtl
adc
pop
ds
or
sbb
clc
xor
movsl
xchg
adc
call
push
jnp
ljmp
xor
pop
jno
mov
sbb
cmc
scas
int3
shr
push
es
stc
or
cmpb
xor
push
mov
jno
jmp
jecxz
in
popa
or
insl
or
xchg
and
mov
je
loope
insb
cmp
push
rorl
leave
inc
dec
dec
sbb
sub
movsb
adc
repz
out
cmpsl
out
pop
insl
jg
mov
in
in
pop
xor
add
testl
mov
fidivrs
cmp
cld
in
das
sarb
adc
inc
xchg
jmp
mov
jecxz
sub
cmp
das
mov
xchg
xor
mov
test
movsl
cs
sub
imul
xchg
cmp
cmp
aaa
gs
inc
sbb
inc
stos
negb
xchg
mov
fnstenv
dec
notb
add
clc
jns
push
pop
ret
xchg
mov
iret
xor
mov
xchg
sbb
jmp
dec
dec
std
xchg
ja
pop
and
add
int3
push
icebp
dec
loop
push
cwtl
inc
outsb
add
sbb
cmp
and
outsb
xor
pop
pop
xlat
and
cmpl
jmp
jo
sub
out
xor
rol
push
repnz
pusha
jno
sub
dec
jecxz
xor
mov
aad
pop
mov
cmp
cmp
and
movl
cmp
mov
sub
jnp
mov
and
hlt
or
cmp
iret
and
push
push
fs
dec
movsl
out
into
push
lock
stos
ljmp
inc
mov
out
scas
sub
aaa
or
jns
and
aaa
and
add
sarl
add
hlt
out
lahf
test
jo
jno
mov
shrl
mov
addr16
nop
repz
ret
sub
fs
mov
lea
aad
in
lcall
shrb
hlt
mov
pushl
loope
mov
adc
sbb
push
pop
jg
inc
cmp
xchg
inc
dec
cmp
inc
cmpsb
mov
cmc
addb
data16
mov
imul
rcrb
repz
aas
sbb
add
imul
mov
sub
xchg
cltd
cli
sbb
fisubl
mov
dec
lahf
xchg
jle
loope
sbb
into
leave
xchg
lds
lcall
cltd
stc
adc
imul
adc
jno
xchg
push
adc
dec
xchg
xor
shrb
pop
push
adc
add
repz
push
cli
pop
lret
lret
pop
icebp
pop
add
pusha
sub
cmpsl
push
add
lods
rorl
inc
sti
jae
ja
sub
cwtl
out
pusha
orb
inc
ror
mov
inc
dec
mov
repnz
movb
lret
cld
pop
rcll
mov
mov
lds
shrb
stos
idivb
es
stc
dec
push
cmp
jle
push
sbb
mov
je
popf
mov
cmp
mov
jl
push
std
cmpsl
jmp
cmp
clc
popa
sbb
sub
jmp
aas
or
aas
xor
scas
push
sbb
aas
cmpl
test
stos
cld
je
std
scas
mov
shl
jnp
repz
bound
sub
mov
and
popl
int3
pop
cmp
scas
mov
pop
lds
jmp
rorb
mov
inc
and
pop
push
sbb
cmp
in
movsb
jne
dec
xchg
mov
mov
jno
iret
andb
jge
mov
mov
pusha
inc
rcr
pop
jno
testl
and
push
xchg
and
call
sbb
flds
inc
adc
test
fisubl
repnz
lret
pop
or
push
xchg
js
loope
mov
push
mov
insb
add
mov
lea
in
mov
in
pop
xor
int3
mov
push
and
or
inc
es
sub
pop
into
movd
mov
mov
jg
add
scas
sahf
stc
out
fwait
mov
mov
std
sub
sarb
xlat
mov
dec
cmpsl
pop
or
add
bound
jbe
mov
fsubrs
cwtl
sti
xor
mov
cmpsl
lcall
inc
aad
enter
sbb
or
shl
mov
filds
cmpb
sti
inc
shll
sub
popa
and
movsl
es
push
jbe
or
add
andb
mov
xchg
int3
scas
xor
outsb
xor
push
les
lcall
cmp
les
mov
cmp
iret
dec
mov
je
jb
sub
jo
das
les
pop
mov
mov
ret
jg
sub
xchg
or
push
add
cmpsl
push
or
lahf
or
and
sbb
adc
inc
outsb
push
loop
dec
jo
sbb
in
lods
xchg
xor
adc
mov
xor
and
cld
push
sbb
cmpsl
test
inc
push
popa
shl
mov
notb
inc
loope
insl
xor
fdivl
mov
scas
mov
mov
jmp
ja
std
mov
pop
cwtl
or
jl
inc
cs
les
gs
mov
xchg
data16
insl
and
ss
pop
shll
lods
inc
jp
cli
stc
nop
fsts
andb
jne
js
xchg
mov
stos
inc
repnz
and
jmp
push
fdivrs
mov
pop
jbe
loop
mov
sbb
mov
pop
mov
imulb
or
xorb
xchg
nop
adc
mov
jo
xorb
pop
cmp
repz
adc
scas
hlt
mov
outsl
pop
call
jne
in
sub
lea
pop
lahf
pusha
push
jl
int
pop
mov
and
push
pop
sbb
mov
push
cmp
push
sub
mov
fistl
daa
mov
stc
lods
push
ret
fmul
call
and
push
cmp
sarl
xor
pop
test
sub
mov
sub
mov
lret
xor
divl
jmp
pop
pop
cmpsb
cmc
xor
stc
inc
subl
aaa
xchg
adc
xchg
outsb
jae
adc
xor
es
cwtl
xchg
lret
mov
aas
je
ljmp
or
add
arpl
ffree
mov
xor
jecxz
test
insl
ljmp
xchg
and
mov
xor
and
fwait
stos
shll
imul
push
xor
mov
int3
loop
leave
rcl
add
and
jle
push
add
jne
fwait
push
sbb
divb
pop
push
push
lahf
xlat
or
cmp
fnstcw
jmp
fwait
sbb
push
clc
push
nop
roll
and
aas
ret
aad
cs
out
push
jge
cmp
dec
mov
sti
and
shll
es
pop
imul
adcb
jno
sarb
mov
adc
xchg
dec
or
stos
mov
mov
pusha
mov
ljmp
test
ja
repnz
mov
mov
mov
mov
mov
and
xchg
jb
xor
xor
icebp
mov
lcall
mov
push
xor
pop
imul
es
cmpsb
pop
out
mov
inc
inc
dec
sarb
fstpt
leave
je
sarl
dec
pop
insl
xchg
dec
mov
jg
pop
jmp
jl
test
cmp
or
mov
rclb
and
xchg
cmpsl
cmpsb
sub
roll
fwait
mov
pop
daa
mov
sub
rol
adc
mov
ret
pop
xchg
sarl
push
push
hlt
cmp
pop
imul
addb
sub
mov
popa
push
lds
xchg
test
mov
mov
xor
cvtps2pi
jl
mov
jmp
and
jmp
loopne
xor
out
shlb
adc
mov
adc
mov
popa
in
repz
mov
fwait
mov
bound
inc
nop
xchg
mov
out
mov
dec
and
inc
je
pusha
jo
sub
xor
dec
and
xlat
pop
and
jb
in
sub
imul
mov
repz
nop
add
stc
aam
jnp
loopne
ja
rclb
ret
imul
in
and
cmp
jmp
push
rcl
test
cld
inc
outsb
or
test
sub
repnz
sub
mov
repnz
or
adc
lods
sub
inc
add
arpl
scas
xchg
mov
pop
dec
sbb
stos
int3
sbb
addb
cmp
in
xor
lret
fstps
sub
sub
dec
out
push
ds
loopne
and
inc
mov
or
jbe
fistpl
mov
jl
insb
mov
in
and
stos
fwait
or
mov
popa
xchg
cmp
movsl
sub
in
shlb
out
jg
mov
fidivrs
jle
pop
or
mov
adc
cli
nop
sbb
cmp
test
jo
inc
divb
sub
test
cmp
sbb
add
pop
add
push
add
jecxz
mov
add
or
in
lods
loopne
or
shrb
jno
or
outsb
cmc
sbb
or
mov
jmp
xchg
pop
lods
pop
loopne
xchg
scas
and
push
lock
int3
test
inc
xor
subb
dec
jno
or
jg
arpl
sbb
push
fisubl
in
ret
ss
xchg
mov
fwait
jmp
mov
and
pop
cmp
cld
sub
add
cmc
dec
jno
or
inc
mov
push
add
movsl
in
xor
test
mov
stos
or
frstor
ljmp
outsb
xchg
imul
xlat
inc
stos
sahf
push
movsl
or
dec
inc
dec
arpl
inc
sti
mov
sahf
andl
dec
dec
sbb
js
push
push
add
cld
mov
in
xchg
sub
push
movsl
add
cmpsl
xor
inc
or
fisubrs
adc
in
insl
scas
dec
xor
lret
and
push
mov
xchg
mov
or
insl
sti
aas
pop
iret
dec
faddl
out
negb
mov
shl
fsubrl
ds
xchg
xor
push
sbb
loopne
mov
and
scas
or
pop
pop
mov
pop
and
lahf
gs
rolb
gs
lret
inc
inc
int
and
lret
xor
jns
fs
scas
loop
jo
push
pop
ret
repz
or
enter
mov
rol
mov
mov
mov
das
stos
sbb
in
faddl
repnz
mov
leave
in
xchg
stos
mov
jnp
insl
pop
je
adc
mov
rol
inc
pop
es
enter
ja
pop
repnz
inc
push
iret
xor
and
dec
dec
rcrl
sarl
loope
mov
mov
ja
inc
sub
sbb
loope
movsb
bound
fidivrl
mov
stc
mov
test
movsb
jb
jg
movsb
jp
inc
stc
aas
rclb
fcmovne
xchg
stos
enter
les
mov
stos
lret
mov
adc
call
add
adcb
mov
cmp
mov
mov
jae
mov
jae
inc
xchg
dec
fstp
lods
inc
lods
xchg
jno
ja
cmp
cmpsb
inc
push
pop
cmp
sbb
mov
dec
shlb
sbb
inc
ss
insb
sbb
movsb
incb
loopne
insb
jle
inc
outsl
cs
imul
imul
pushf
mov
clc
fcompp
pushf
mov
inc
and
frndint
adcl
adc
and
dec
sub
xchg
out
sbbl
pop
mov
cmp
outsl
ret
and
cs
notb
sub
scas
cmpsl
cmp
arpl
lea
inc
fsqrt
insl
pop
pop
std
inc
addr16
mov
or
adc
cmp
es
push
mov
jge
addr16
and
inc
mov
cmpsl
pop
pushl
dec
cmpps
cmpsl
inc
sub
movsb
xchg
mov
cmp
mov
fistpl
insl
push
data16
in
and
outsb
out
les
pop
int3
mov
movsb
hlt
popf
addr16
mov
mov
leave
ret
movsl
out
mov
mov
cmp
or
cmp
fsincos
and
jmp
arpl
xchg
movb
stc
xchg
mov
in
sub
cld
aaa
test
fcompp
sbb
pop
sahf
inc
mov
pop
cli
xlat
nop
mov
inc
or
out
jbe
decb
mov
lahf
pop
and
test
lret
test
iret
in
std
loope
dec
aam
mov
jne
lahf
sbb
push
sub
scas
push
and
sti
and
adc
in
xchg
in
adc
cmp
mov
mov
inc
hlt
push
xor
xchg
daa
lret
out
gs
pop
inc
fistpl
in
adc
fiaddl
int3
cs
fidivs
adc
repz
sbb
pop
cmp
int
jo
hlt
mov
out
shll
movsl
ss
shrb
lods
sub
mov
mov
rclb
adcl
in
xchg
fdivl
mov
imul
dec
dec
pop
movsl
sarl
cmp
mov
jb
shrb
pop
lcall
ljmp
icebp
rclb
cmc
push
push
sahf
outsl
mov
test
pop
lods
jl
nop
sub
iret
or
fisttps
dec
sub
xchg
inc
or
std
int
push
mov
fsubs
into
and
xor
push
sub
sbb
mov
pop
test
shrl
sbb
cld
in
pop
xchg
inc
aad
mov
jg
mov
mov
scas
add
stos
xchg
dec
xchg
idivl
sahf
lods
mov
mov
into
in
cs
dec
xor
stos
shll
out
inc
test
mov
pop
ds
cmc
jnp
shlb
sbb
outsb
add
sub
fisubl
adcl
cwtl
push
and
xor
dec
cld
in
loope
andb
pushf
xor
pop
out
add
sbb
out
ljmp
xor
pop
add
xor
adc
fistps
dec
cmpsl
in
adc
jg
mov
lea
jnp
sarb
sub
mov
pusha
push
lods
cs
add
mov
mov
test
fstpl
out
pop
in
dec
jle
insb
cmpsb
push
inc
fs
pushf
pop
cli
sub
fimuls
jno
mov
je
xchg
repz
xchg
aas
pop
push
fisttpll
int3
adc
std
mov
cmp
and
sahf
add
movsl
mov
fcoml
jae
mov
sub
cmpsb
add
cmp
add
sbb
imul
jno
sahf
cmpsl
xchg
mov
and
xlat
or
or
int3
pop
cmp
sub
adc
data16
and
mov
or
aas
push
mov
dec
pop
fnsave
or
and
sub
jmp
jns
lret
sub
test
insl
ds
xchg
out
jb
das
xchg
push
ss
insl
inc
dec
jecxz
xor
or
inc
ja
les
nop
stos
xchg
call
or
add
cmpsl
cmc
sbb
fmulp
sub
cs
sbb
call
jno
movsb
cmp
sbb
sbb
decb
xor
adc
cmc
bound
jns
push
xor
test
outsb
aad
daa
pop
inc
cs
jl
test
adc
ja
iret
cld
mov
mov
jne
bound
inc
mov
bound
xor
jl
push
inc
icebp
test
js
jns
dec
inc
stos
aam
mov
push
xor
scas
in
jb
shrl
in
cmp
jg
sahf
inc
in
adcl
or
imul
sbb
loop
pop
gs
cli
jle
repz
test
inc
lds
mov
inc
pushl
addr16
test
mov
jmp
out
jo
jg
js
mov
lcall
push
xchg
push
mov
xchg
cwtl
cmc
push
inc
sti
insb
bound
iret
xchg
lock
jns
lcall
push
shlb
insl
lods
cmp
stos
stos
aam
inc
push
push
fsts
cmpsl
sub
jmp
icebp
icebp
xor
jb
sahf
xchg
rolb
cmc
xchg
add
test
pop
loope
pop
notb
add
pop
mov
scas
cmp
popf
mov
call
sbb
lea
lea
sbb
push
xchg
mov
jmp
in
lret
test
xchg
std
cli
mov
ds
lods
inc
in
es
call
lahf
or
insb
mov
mov
sbb
xor
and
test
adc
fsubr
sahf
sti
pop
jecxz
ficoml
adc
into
xchg
mov
lea
xchg
or
pop
sub
or
push
cmc
mov
shll
leave
sahf
lahf
sub
jnp
xchg
movsl
inc
cmp
cmp
cmp
sbbb
push
sub
xor
cmp
xor
sub
popa
mov
shlb
sub
addb
nop
sahf
jmp
pop
popf
ret
cmp
mov
dec
pop
cmc
aas
push
cmpsb
xor
aad
pop
insb
jp
mov
pushf
sub
int3
or
jae
call
pop
inc
pop
jle
jle
scas
xor
sub
xchg
xchg
scas
push
cmp
fcompl
sub
jno
xor
lea
and
iret
adc
mov
mov
mov
mov
mov
stos
and
push
push
dec
push
pop
jmp
sar
je
dec
into
out
in
adc
out
cs
in
mov
xor
aam
clc
loope
roll
dec
jnp
ficoml
sub
mov
jne
fistps
std
movnti
sub
sub
jbe
pop
push
call
mov
scas
sub
push
sbb
xchg
out
inc
movsb
sub
mov
pop
or
daa
fsubrl
sub
jnp
int3
fs
imul
out
pop
jns
lret
or
lea
rolb
int3
aas
cmc
loope
scas
sbb
in
cmc
aaa
mov
int
lock
mov
in
int
mov
daa
test
xchg
sub
les
aas
cli
jae
addr16
or
mov
ss
add
push
iret
mov
sarb
stos
cmpsb
and
or
pop
sub
mov
push
enter
mov
mov
pop
or
mov
add
mov
ret
xchg
cwtl
mov
mov
xchg
dec
inc
repz
jecxz
inc
mov
out
popf
and
add
ret
nop
insb
sbb
xchg
and
lods
clc
xor
ret
fneni(8087
xor
mov
int3
lahf
ja
daa
sbb
js
repz
das
imull
add
push
rcll
pop
stos
rorl
arpl
scas
push
cmp
xlat
push
cmp
or
sbb
lock
insl
sbb
jae
fidivs
popf
xchg
sbbl
pop
mov
dec
icebp
sarb
sahf
sbb
inc
int
in
and
push
cmc
dec
push
mov
pop
lock
ss
lret
insl
and
lea
mov
adc
stos
pop
into
jmp
mov
in
push
gs
cmpsl
repnz
movsb
sbb
cli
in
popa
xrelease
mov
sub
mov
or
sbb
or
jle
mov
jno
sbb
jle
je
dec
sahf
sub
sbbb
cli
dec
outsl
fdivr
cmc
push
cs
aam
popa
test
mov
or
lods
fbstp
mov
push
xor
movsl
push
xchg
cmp
enter
jnp
shlb
sbbb
imul
orw
pop
addr16
xor
ja
jae
mov
cld
sub
dec
arpl
ss
cmp
xor
pop
jae
ret
dec
cmpl
and
xor
cmp
sbb
addl
enter
mov
mov
push
out
fdivrl
or
adc
mov
nop
sarl
push
dec
pop
sbb
addr16
pop
mov
push
fstps
push
rcrb
addr16
pop
sub
test
pop
push
pop
adc
fwait
xchg
pushf
pop
cmp
js
jb
jae
mov
xchg
jl
adc
loop
mov
jae
push
test
dec
cmovae
es
xchg
jg
or
adcl
loope
adc
xor
inc
ljmp
inc
cmpsl
movsb
mov
push
movsb
and
mov
mov
mov
cmpsl
pop
hlt
testl
fs
jl
xchg
mov
sti
shll
cmp
and
xor
test
clc
loopne
push
jecxz
repz
xchg
mov
sahf
fs
movsb
xchg
or
shlb
in
fwait
stc
ret
adc
or
mov
movsl
pop
pushf
int3
fs
rcrb
push
imul
mov
movsb
outsl
mov
imul
fcomi
cmc
cmp
lods
adcl
test
pop
shll
outsl
inc
mov
or
dec
dec
adc
mov
int3
pop
xchg
cmp
mov
cmpsl
scas
cld
jl
hlt
xor
mov
sahf
mov
jnp
xor
movsl
leave
xor
sub
xchg
push
push
in
pop
xchg
or
lods
push
and
mov
jo
xor
ja
push
mov
xor
aam
imul
out
pop
sbb
int3
xchg
pop
xor
movsl
lods
lcall
iret
in
fwait
xchg
in
sub
rcr
cmp
sbb
adc
jb
and
or
in
shlb
adc
mov
scas
das
dec
dec
cmc
notb
mov
and
xchg
sti
pop
inc
sbb
cwtl
leave
loopne
push
push
inc
les
lea
lea
sbb
sbbl
adc
push
jmp
or
test
mov
mov
cmp
inc
mov
popa
cs
xchg
dec
arpl
mov
testb
xchg
mov
js
lret
mov
fstpt
aas
cmpsl
mov
aaa
or
and
aad
and
lods
jg
loopne
popa
and
jmp
jmp
push
xchg
iret
stos
and
inc
fildll
imulb
int
out
xchg
fsub
jl
into
mov
loop
xlat
fcompl
notb
mov
js
sub
mov
pop
lea
nop
sub
pop
pop
jnp
push
and
and
and
clc
push
js
call
in
lahf
subb
mov
inc
addb
shlb
cmp
sbb
jnp
lret
into
lea
or
in
dec
shlb
inc
test
xor
adc
scas
push
popf
je
mov
cs
lods
repnz
insl
idivl
xor
and
jl
lods
xor
fsubrs
jo
cmp
inc
mov
cmp
cmc
test
out
je
jle
sub
lret
call
aam
cs
and
or
mov
cmp
in
and
dec
xchg
push
mov
or
push
mov
add
fcompp
test
push
outsl
lret
cmp
sbbb
ja
dec
fimull
not
outsb
rol
and
pop
leave
push
sub
test
xchg
rcrl
call
mov
sbb
jb
lcall
jne
sub
mov
enter
adc
jns
jne
loope
dec
in
mov
sub
into
les
jle
jne
out
ja
push
insb
pop
loop
shlb
outsl
sbb
inc
and
adc
dec
or
mov
or
repnz
outsl
mov
sahf
mov
sahf
cltd
idivl
insl
xchg
lcall
hlt
es
fimuls
adc
xor
sub
dec
xchg
aaa
pop
shl
pop
imul
gs
lret
inc
popa
mov
push
cs
jp
in
imul
sarb
push
sub
pop
test
lods
insl
std
cmp
lcall
mov
push
call
outsb
add
push
mov
ret
aad
push
gs
mov
aas
sti
outsb
or
mov
pop
into
dec
dec
add
xchg
push
aam
lds
mov
push
push
xor
cmp
pop
mov
ss
pop
push
add
xchg
lds
jb
adc
sub
jne
sahf
pop
jbe
xchg
dec
out
ljmp
repnz
es
xor
mov
stc
lods
test
pop
and
mov
add
insb
inc
das
lea
bound
push
test
lds
mov
rorb
or
std
cmpsl
stc
xchg
xor
aaa
mov
mov
jp
mov
testb
jg
sub
cmpsb
mov
test
dec
push
shr
pushf
popa
shrl
es
pop
and
int
imul
jbe
shlb
or
divb
adc
lret
cmpsb
inc
outsb
fbstp
in
imul
pop
xchg
pop
pop
pop
hlt
fstl
mov
add
cmp
add
and
sbb
xchg
out
mov
xorb
jp
cmp
mov
mov
adc
ret
mov
js
jle
fstp
insl
jecxz
jle
lock
xchg
loopne
outsl
jmp
lods
mov
mov
xchg
stos
inc
cmpb
bound
cli
aas
jnp,pn
bound
mov
mov
pusha
jp
mov
data16
lods
xor
pop
in
shrb
sbb
jecxz
push
add
out
pop
repz
sbb
push
mov
jns
outsb
mov
roll
mov
xor
cs
sbb
jb
test
or
and
lock
add
xor
pextrw
js
mov
or
sbb
cli
lods
add
xchg
or
adc
xorl
leave
sbb
sub
adc
xlat
mov
mov
jl
out
push
sti
jns
inc
and
cmp
inc
decl
add
hlt
and
mov
idivl
xchg
push
repz
xchg
mov
out
out
add
in
ljmp
loop
mov
mov
jo
mov
ds
or
bound
addl
mov
pop
lods
out
enter
cs
sbb
and
or
xchg
xchg
iret
fmulp
cmp
push
dec
out
push
and
and
sti
sbb
int3
cli
pop
jbe
sti
push
dec
shlb
scas
mul
sub
add
clc
jmp
andb
popl
jae
lods
test
loopne
jno
push
xlat
add
xchg
xor
fistpl
jge
aam
inc
sub
push
cmp
insb
stos
dec
lds
lds
clc
or
or
insl
test
xchg
xlat
lcall
jle
insb
mov
and
add
or
jle
imul
inc
jns
or
sti
shrb
out
sub
add
out
push
cli
or
mov
jl
fwait
mov
ja
jae
cmpsl
and
sub
popa
or
mov
lahf
jbe
push
insb
loop
jb
pushf
data16
aas
mov
inc
mov
pushf
insb
push
popf
pop
add
cmp
add
dec
dec
arpl
inc
add
mov
jmp
cld
and
js
cmp
nop
inc
sbb
popa
out
pop
add
pop
mov
repnz
push
ss
cmp
add
sti
mov
mov
fwait
into
insb
jne
cs
enter
fldenv
mov
icebp
xor
or
jl
js
dec
lock
jge
mov
data16
cs
pop
push
adc
jge
jb
mov
aaa
scas
shr
push
mov
rorl
or
arpl
ljmp
push
ss
lret
shl
ficoml
sbb
cmp
data16
sarb
xchg
test
fs
leave
xchg
pop
sahf
stos
mov
or
mov
imul
fistpl
in
or
fidivl
push
rcr
cmp
sbb
mov
outsb
dec
add
inc
mov
jne
mov
mov
loope
sar
ss
jnp
pop
inc
sbb
aaa
mov
lret
pop
mov
fldt
and
cltd
aam
loope
rorl
or
pop
std
popa
mov
xchg
pop
ret
xlat
jle
cld
dec
std
adc
enter
enter
js
cmpsb
mov
or
push
pop
mov
pop
cmp
orl
out
and
shr
test
add
out
jo
pop
and
aaa
es
scas
lock
adc
cltd
sbb
cmpsb
rorb
jp
mov
fsubrl
jns
or
int3
sahf
cltd
jl
lahf
imul
jb
clc
push
sarl
sub
int3
call
das
and
pop
mov
push
mov
inc
fnclex
sub
mov
sahf
or
add
pop
cmpsl
inc
in
sub
mov
sub
ret
das
jmp
mov
loop
or
lods
and
jmp
sbb
sub
movl
adc
add
in
inc
jge
push
insl
inc
inc
jae
iret
rorl
xchg
sbb
addr16
jne
es
jae
and
or
fs
mov
pop
cli
mov
lret
lods
mov
xor
in
loopne
push
stos
mov
sub
push
popf
fcompl
icebp
js
sbb
cmpsb
insl
push
aam
lea
in
jns
jmp
in
stc
cmp
testl
mov
lods
add
xor
pushl
in
adc
cld
inc
mov
fwait
sub
frstor
lret
mov
pop
and
test
ja
or
dec
mov
in
ja
xlat
sbb
pop
xlat
sub
jge
xor
sub
jmp
aas
test
push
jno
mov
push
push
cli
aam
jp
inc
mov
in
bound
push
insb
pop
test
push
add
scas
or
rcl
pop
mov
pop
addb
jb
int3
mov
iret
pop
and
xor
xchg
fimuls
cmp
inc
dec
mov
xchg
push
cmp
movsb
mov
in
cld
scas
std
ret
stos
rcll
lds
push
sbb
jmp
shll
ja
stos
xchg
out
mov
aad
pop
fdiv
lcall
xchg
mov
stos
mov
ret
mov
arpl
inc
bound
push
loop
dec
dec
fnstenv
cmp
jb
scas
bound
push
dec
rep
pop
in
jge
das
rcll
js
mov
cmp
fimuls
insl
lcall
pop
cmp
shlb
aas
jb
mov
sub
dec
and
jl
inc
sub
popf
out
or
and
por
and
lds
push
mov
mov
and
mov
addl
cmp
test
adc
shrl
in
dec
frstor
outsl
push
jmp
and
mov
inc
xlat
cwtl
cld
dec
setl
out
nop
int3
pusha
test
in
scas
jecxz
stc
push
popa
mov
mov
dec
pop
in
or
ud1
push
in
pop
cmp
cmp
les
xchg
push
rcll
scas
sbb
test
ret
in
adcl
xchg
mov
sbb
sbb
mov
out
mov
push
loop
mov
push
cmpsl
jns
add
in
jbe
cmp
adc
push
and
mov
adc
adc
sub
push
jecxz
adc
cmp
lods
inc
lds
jns
movsb
xor
add
fisubs
fadd
inc
xor
scas
lea
sub
mov
inc
sbb
inc
push
fdivrl
rcrl
cld
test
dec
mov
sbb
imul
popf
xor
test
std
adc
js
sub
cmp
dec
sbb
xchg
fidivl
pop
roll
movsl
imul
shll
jnp
mov
scas
push
mov
mov
mov
sub
push
jg
and
pop
dec
add
pop
mov
stos
dec
xor
and
in
in
int
pop
mov
into
lds
adc
mov
out
inc
arpl
xchg
faddl
movsl
pop
cld
test
imul
sbb
movsb
mov
lcall
test
mov
pop
sbb
sbb
sbb
pop
sub
push
loopne
sbb
add
imul
iret
aam
xor
xor
push
in
lahf
xchg
inc
mov
leave
sbb
inc
sub
ret
and
int3
xchg
imul
or
stc
mov
adc
mov
add
push
sbb
dec
pop
pmullw
lcall
lret
mov
jb
or
ret
fcoml
int3
in
mov
and
adcb
testl
ljmp
push
clc
xor
enter
pop
mov
loope
or
mov
sahf
or
mov
cwtl
fldt
sub
jl
pop
jp
sbb
mov
jecxz
jbe
cmp
jo
pop
pop
jecxz
loopne
in
xor
cmpsb
insl
sti
leave
push
push
jg
iret
lods
sub
jp
add
negb
xor
clc
cmpsb
jbe
xlat
and
testb
xchg
negb
inc
enter
aad
in
add
sub
mov
jl
xchg
das
aad
push
mov
iret
add
lea
inc
jne
stos
test
decl
pop
mov
jo
cmp
dec
cmp
mov
int
in
movsl
jae
shl
jecxz
and
mov
pop
imul
dec
dec
loope
lret
loope
test
arpl
dec
jmp
lahf
leave
sahf
sub
sahf
aad
mov
out
gs
std
mov
lods
ret
int
in
call
xchg
push
rcl
in
dec
and
add
mov
notl
test
dec
insl
hlt
jbe
pop
leave
jecxz
pop
mov
jecxz
dec
mov
call
sbbl
adcl
aas
inc
sbb
xchg
push
test
adcb
adc
shll
loope
and
sahf
mov
xor
pop
popa
push
cltd
shr
sarb
push
icebp
add
inc
jl
leave
add
cmp
mov
push
or
mov
pop
adc
das
popl
push
pop
mov
jae
daa
cli
shrb
xor
add
iret
daa
cmp
loope
inc
xchg
stos
and
je
in
inc
pop
nop
xchg
imul
push
je
and
inc
lret
fidivs
pop
rclb
inc
fildll
and
lcall
stos
imul
aam
lahf
mov
int3
sti
push
push
inc
imul
sti
ret
sub
test
test
jno
iret
or
iret
push
push
inc
test
ret
xlat
add
les
popa
out
cmp
cmc
data16
imul
add
movsl
aad
sarb
mov
push
add
sbb
xor
mov
xor
lret
imul
xor
dec
xor
cmpsl
mov
push
in
mov
enter
add
jno
push
stos
enter
dec
sub
mov
lcall
test
data16
inc
ljmp
dec
loope
adc
rorb
cwtl
add
add
outsl
cmpxchg
cs
stos
xchg
in
inc
dec
and
jbe
inc
fmuls
push
popf
shl
jle
jae
stos
clc
xchg
daa
xor
adc
xor
hlt
popa
sbb
stos
jne
aad
in
dec
lret
adc
int
cmpsb
xchg
sub
push
shrb
cmp
fistpl
test
lds
mov
xlat
pop
lods
mov
jne
mov
adc
dec
lea
mov
insb
lods
sbb
xor
dec
clc
mov
nop
and
adc
inc
sub
adc
pop
in
out
lcall
aad
mov
cmp
xchg
rclb
dec
out
sub
es
daa
cmpsb
aam
cld
xchg
xchg
out
ret
les
fistpll
int
andb
adc
sub
xor
stc
cmc
mov
mov
aad
pop
into
push
sbb
push
out
fnop
push
mov
mov
cmpsl
mov
inc
push
adc
mov
jp
out
mov
ljmp
xchg
clc
les
das
icebp
repz
jb
popf
lea
in
popa
dec
adcl
adc
mov
xchg
iret
xor
mov
cmp
jae
pushf
xlat
fadds
mov
loop
jne
sahf
and
mov
cmpsl
ffreep
cld
inc
push
push
and
or
push
jmp
subb
shlb
clc
lret
xor
nop
testl
test
lods
xor
icebp
rorl
inc
cmpsb
stc
lcall
dec
fdivp
add
jl
cmp
mov
or
mov
scas
test
and
ret
sahf
push
lds
out
or
add
enter
jge
imul
mov
push
dec
cld
fsts
pop
cld
lea
out
test
cmp
jns
jg
outsb
popa
data16
es
das
xchg
pusha
insb
test
xchg
fildl
sub
adc
cmp
out
pushaw
pop
pop
jae
test
xor
out
xor
in
stc
xlat
repnz
push
inc
mov
notl
mov
movsl
mov
sbb
pop
sarl
scas
fisubrl
inc
cltd
push
scas
push
xchg
jo
jge
mov
lock
pop
ffreep
sbb
in
popa
xlat
insb
lods
xchg
fwait
nop
or
lea
icebp
repz
and
jmp
loopne
stc
xchg
hlt
jo
or
fidivs
or
xchg
jnp
fprem
cmpxchg
xchg
mov
test
inc
dec
dec
dec
ss
insb
adcb
inc
mov
cmp
or
and
mov
bnd
mov
sbb
popf
add
dec
dec
cld
sub
push
xor
test
jae
sbb
cmp
jne
sub
cmp
addr16
inc
mov
out
mov
lods
pushfw
push
mov
in
sbb
mov
aad
mov
sub
repz
je
jle
popf
les
out
fs
or
adc
mov
aam
mov
dec
pop
leave
jo
cmp
fdivrs
sub
jg
adc
les
add
insl
xchg
xchg
sub
add
repz
and
fdivs
sbb
sbb
enter
aas
int
sarl
pop
sbb
xor
testb
pop
cs
xor
clc
outsb
outsb
or
add
stos
ss
mov
enter
leave
mov
sbb
notb
loopne
scas
jmp
jge
dec
jg
cmovs
test
dec
or
imul
mov
lcall
sub
push
cld
mov
sbb
outsb
test
cltd
in
int3
cmp
jb
push
movsl
mov
popa
jp
imul
push
sbb
fiadds
jp
clc
iret
pop
mov
add
cltd
add
in
pop
xchg
lret
in
adc
scas
cmp
sub
push
inc
lahf
pop
add
iretw
testl
cmc
add
push
pop
in
std
insl
push
pop
clc
add
fisubrs
pop
and
test
sahf
adcl
pop
stos
and
and
xor
sarb
xorl
cmp
push
cmp
popf
and
rcl
hlt
loopne
out
xchg
pop
pop
and
xchg
scas
into
or
lret
mov
adc
cltd
mov
fdivrs
mov
rorl
sahf
imul
and
stos
stos
inc
std
sub
inc
sarb
das
cmp
roll
stos
jl
dec
fists
cwtl
mov
jbe
xchg
mov
mov
xchg
push
mov
and
pop
dec
fisttpl
aam
rcll
add
aaa
mov
cmp
dec
and
lods
push
sbb
addl
add
pop
lea
fists
or
mov
cmp
add
movsb
pop
popf
mov
jge
stc
mov
stc
mov
fsubrs
mov
lods
adc
inc
outsl
pushf
scas
outsb
jmp
test
push
pop
xchg
xor
cmp
pop
fmuls
pop
xor
fcompl
jae
out
arpl
jb
cmp
or
insl
mov
mov
loope
in
jbe
jmp
test
push
testb
iret
mov
sbb
out
test
adc
test
mov
mov
outsb
outsb
adc
or
andb
jnp
xor
and
sub
arpl
cmp
ljmp
repz
out
ja
pop
xor
bound
pop
sub
in
xorl
push
fdivrs
dec
bound
pop
mov
daa
sub
data16
je
pop
lods
in
mov
inc
data16
aad
leave
add
jle
scas
jmp
sbb
adc
adc
xor
sahf
in
push
int
out
or
push
scas
xchg
adc
push
shlb
push
mov
pushf
movsl
lahf
hlt
shl
outsb
test
mov
fsubl
sbb
sub
fisttpl
ret
cmp
mov
jecxz
adc
cmp
in
or
xchg
sub
dec
lea
or
push
sub
popfw
pop
sbb
icebp
fildl
sbb
adc
out
dec
bound
adc
xchg
cmp
in
xchg
stc
lods
add
ret
lds
cwtl
jge
mov
jg
stc
pop
xchg
in
or
aad
sub
dec
in
shlb
add
xchg
jae
dec
cmpsl
cmp
stos
pop
and
stos
cmp
ds
cmp
inc
push
adc
pop
cmpb
addr16
fisttpl
sbb
fstl
jno
add
sub
scas
lcall
xchg
xchg
cwtl
movsl
adc
push
outsl
and
cs
cld
cld
sahf
mov
add
out
fwait
xchg
mov
pop
mov
and
rolb
inc
into
push
mov
out
dec
xlat
fs
push
xchg
mov
out
sbb
adc
mov
cmp
mov
jne
mov
cwtl
adc
popa
jl
xor
xchg
js
pushf
insb
and
jno
jmp
dec
lcall
sbbl
enter
aam
inc
lds
es
cmpsb
out
adc
cmp
out
xchg
push
icebp
mov
loope
lcall
mov
fwait
je
pop
push
out
test
jmp
cmpsb
cmp
push
pop
push
xorb
adc
js
add
cmpsb
hlt
push
aam
lock
mov
dec
mov
mov
mov
rol
rcll
shlb
sbb
pop
aas
xor
mov
sub
fstl
insl
xor
lods
cwtl
jle
add
mov
xorb
jbe
xor
les
push
rol
aad
mov
or
mov
out
pop
lea
and
test
jmp
dec
subb
mov
aad
mov
popa
aas
dec
in
xchg
mov
clc
mov
jae
push
in
push
jle
inc
push
lods
adc
cmp
call
stc
cmp
push
data16
and
dec
sahf
js
cltd
pushf
out
cli
xchg
ja
cld
push
push
mov
xchg
arpl
mov
jno
je
ds
rcl
inc
mov
icebp
inc
or
and
inc
cltd
aaa
lret
push
and
popa
icebp
push
fistps
scas
leave
or
dec
xor
fists
and
enter
aaa
int3
cmp
adc
aas
push
movsl
mov
inc
rclb
loop
lods
jne
cmp
mov
dec
adc
fimuls
shlb
xchg
push
xchg
sub
fs
pminub
or
add
enter
adc
and
rorb
fwait
lods
mov
jne
cmp
js
aas
jge
cmp
push
loop
ss
int3
cmp
sbb
ja
dec
das
cmp
incb
stos
mov
clc
xor
xchg
xor
push
dec
dec
push
push
test
roll
cs
add
ds
xor
adc
loopne
cmpsb
ret
sti
test
xor
bswap
mov
shrb
pop
inc
movsb
shrb
adc
sarl
mov
fxam
inc
faddl
add
mov
in
mov
enter
outsb
js
jmp
dec
ficomps
mov
pop
pop
lods
in
scas
cmpl
mov
xchg
aas
jle
and
adc
push
adc
and
das
sub
mov
int
xor
loopne
gs
push
and
lret
out
or
add
mov
out
imul
daa
and
cltd
lcall
mov
jge
gs
leave
loopne
popf
jl
pop
icebp
jmp
jmp
jg
mov
repnz
pop
sbb
lcall
test
mov
popa
sbb
test
lret
push
sub
dec
adc
lcall
sub
imul
flds
out
mov
push
aaa
loop
sub
ds
xchg
fisttps
and
jo
pop
cltd
shll
nop
test
mov
fistpl
mov
push
inc
pop
aam
push
sub
xchg
pop
sbb
add
xchg
xchg
cltd
ret
and
cwtl
xchg
ret
test
push
jb
add
add
dec
filds
mov
push
jmp
and
sarb
cwtl
jl
xor
xor
cmp
and
adc
mov
adc
or
add
pop
fdivrl
adc
sbb
mov
fst
lcall
rolb
xor
pop
rclb
sbb
ret
sub
mov
js
pop
mov
pusha
and
fiaddl
mov
repz
add
frstor
adc
repnz
or
inc
mov
dec
or
xor
mov
xchg
xchg
adc
xor
mov
fldl2e
aaa
push
jge
subb
jmp
mov
jp
imulb
or
push
mov
pop
andb
pop
in
enter
pop
xchg
jbe
mov
mov
mov
addr16
pop
jae
cmp
in
pop
inc
cld
cmp
add
adc
mov
inc
int3
subb
pushf
mov
scas
ret
jmp
dec
shll
push
outsl
gs
iret
mov
jl
out
vminps
and
andl
and
inc
bound
or
jne
or
inc
stos
loop
cmpsb
xchg
lret
xchg
mov
fidivrs
dec
repnz
pop
sbb
ss
or
mov
pop
andb
push
add
mov
mov
nop
dec
test
mov
bound
test
xor
jnp
sub
out
jmp
cli
cs
int
test
mov
mov
dec
jns
cmp
stos
pop
cmp
lahf
lcall
push
scas
leave
divl
idivl
imul
adc
cmp
cmpb
pop
shll
bnd
xchg
jbe
rcr
sub
xchg
dec
cli
cmc
hlt
jge
xchg
cmp
jmp
test
push
out
dec
push
insl
inc
test
data16
jge
mov
rcl
stos
pop
aam
xor
test
das
les
xor
scas
xor
mov
adc
ss
cmpl
imul
push
and
outsl
mov
stos
out
aas
jo
loopne
jmp
hlt
out
and
mov
insl
dec
fmul
xchg
lahf
xchg
and
lock
std
mov
xchg
insl
aas
out
cli
enter
jbe
clc
mov
clc
mov
sbb
das
sub
lret
inc
js
and
inc
fiaddl
out
into
push
test
into
int3
lock
inc
mov
dec
push
test
adc
add
xchg
lret
insb
in
push
ds
cmp
dec
test
jns
pop
mov
testl
jne
bound
jg
in
ret
test
fstpl
out
loop
rcll
sbb
push
cmp
insl
pop
dec
mov
gs
clc
mov
pop
das
cmpsb
dec
cli
dec
or
pop
sahf
call
fsts
dec
dec
jae
int
aas
push
push
pop
add
ret
in
pop
cmc
stos
iret
movsb
cmpsl
les
lock
add
mov
adc
jecxz
push
lret
sub
cmp
mov
push
or
xchg
cmp
ljmp
mov
push
scas
inc
enter
dec
mov
dec
popa
mov
jg
into
xor
je
cmc
bound
in
dec
push
adc
jno
repnz
xor
je
cltd
push
push
dec
addr16
out
outsb
ret
stc
xlat
gs
sbb
stos
add
xchg
test
les
pushf
scas
mov
cmp
test
push
jmp
xor
in
xor
ret
jbe
popa
xchg
inc
push
cs
mov
cmp
arpl
fistpl
repnz
inc
popa
imul
push
jns
sub
movsl
xchg
arpl
push
gs
icebp
jns
sbb
leave
pop
es
mov
xor
mov
test
cmp
incb
outsl
imul
push
popa
fcoms
jl
xchg
push
dec
movsl
xchg
dec
mov
je
rorl
pushf
sub
dec
imul
sub
in
repnz
mov
sub
popf
and
or
mov
push
cmp
xor
scas
mov
pushl
add
jnp
test
mov
push
jmp
jle
mov
ficoms
subl
inc
adc
cmpsl
out
mov
iret
daa
outsl
push
push
mov
test
lock
pushf
aaa
and
add
cmp
andb
xchg
sub
cmpsb
cs
adc
ret
lock
mov
pop
rorl
test
fs
cs
in
xlat
sub
pop
ficoms
cmp
aaa
sub
enter
out
cs
cmp
ds
leave
jae
hlt
shr
and
mov
push
pop
fldl
jmp
dec
xor
lret
inc
and
sbb
faddl
ret
lcall
xchg
lea
xchg
pop
idivl
loop
mov
dec
fwait
xor
dec
dec
jp
mov
lds
mov
add
lcall
test
call
mov
out
je
xchg
inc
outsb
mov
repz
add
mov
add
inc
xor
jne
loop
sub
ret
les
cmc
inc
lock
test
sti
adc
mov
fucomp
sub
pop
test
mov
jno
lods
mov
js
add
fildl
adc
lock
push
std
shl
enter
inc
push
mov
cmpsb
jnp
stos
inc
lea
add
mov
inc
ficoml
frndint
in
les
andb
daa
push
imul
jecxz
popa
leave
fnstcw
scas
fsub
ror
std
daa
mov
push
lcall
or
and
or
or
in
mov
es
movsl
inc
aas
add
movsl
dec
mov
sbb
in
arpl
xchg
mov
sub
xchg
scas
sahf
adc
fnstsw
imul
fists
sbb
or
aaa
in
xlat
es
out
das
imul
aaa
call
dec
ja
or
int3
inc
cmc
js
call
lcall
mov
test
push
cltd
mov
pmullw
es
scas
aam
fcoms
aas
cmpl
adc
pop
dec
cmp
fnstcw
pop
dec
icebp
shll
aam
pop
add
ljmp
lret
sub
sub
cli
sbb
jns
cmp
and
les
leave
lret
adc
or
mov
psrlw
ja
jns
push
mov
jb
lahf
pop
icebp
push
xlat
pop
outsb
mov
xchg
int3
cmp
insb
mov
in
fs
mov
adc
sbb
cmp
pop
inc
inc
sbb
inc
cld
mov
into
inc
lds
mov
pop
movsl
les
push
lret
xchg
push
push
and
jg
mov
in
mov
cmp
fs
loope
push
les
jle
enter
sahf
cmp
mov
adc
dec
lcall
je
mov
sub
push
roll
stos
mov
out
das
pop
xchg
sti
in
xchg
push
rorb
mov
adc
divb
sahf
scas
scas
mov
addr16
sahf
sub
pop
pop
push
mov
cli
scas
dec
sbbb
push
xor
mov
dec
sbb
repz
xacquire
rcrl
loope
std
adcb
dec
sub
and
pop
mov
xor
xchg
icebp
fiaddl
sbb
jo
stos
arpl
inc
pop
pop
lods
imul
stos
cltd
push
xchg
outsb
out
cltd
adc
js
imul
sub
sldt
mov
ret
or
pop
lds
sub
adc
mov
mov
dec
xor
mov
mov
jbe
sub
cmp
aam
or
int
push
xchg
pop
inc
inc
insb
pop
int3
add
cmpsb
ds
jae
adc
cmpsb
inc
shll
lea
mov
push
je
sahf
nop
sbb
mov
mov
test
cmc
dec
xchg
aas
xor
dec
rorl
into
sub
into
mov
shrb
lea
iret
lock
pushf
add
jp
and
inc
push
inc
in
int3
xlat
mov
lret
pop
fcomi
jle
mov
mov
xchg
add
cmpb
int
pop
inc
mov
and
mov
mov
jle
adc
jge
adc
xor
lret
mov
arpl
hlt
movsb
xor
aas
pop
jl
dec
mov
fmull
push
not
push
sbb
data16
test
jno
or
bound
ret
mov
jle
mov
lock
insb
fwait
xor
sti
leave
or
les
push
mov
test
test
pop
dec
rcrb
mov
test
addl
shrb
loopne
add
mov
or
sbb
fisttps
jo
add
ljmp
lcall
je
cs
notl
jbe
sbb
repnz
mov
loope
mov
push
mov
adc
sbb
jno
mov
scas
loope
cltd
aad
push
inc
add
mov
mov
loope
shrl
mov
sbb
cmc
adc
inc
xor
or
sub
sbb
movsb
mov
call
jo
pusha
mov
cmp
xlat
imull
fsubrs
and
mov
xor
in
sbbb
gs
std
lcall
adc
add
lret
sub
mov
cs
push
clc
mov
out
ret
sar
mov
xchg
ljmp
es
pusha
mov
sbb
cs
inc
push
movsb
ret
jbe
mov
xor
mov
sub
fcomp
lcall
ret
lock
hlt
inc
popa
ss
push
movsl
call
or
addr16
cmp
sub
or
inc
cmp
sub
and
lahf
sbb
xor
xor
rcl
pop
sbb
mov
int3
scas
mov
and
movsl
insl
rclb
jl
into
out
jmp
mov
popa
daa
mov
test
add
out
orl
jle
pop
fdivrs
in
insb
xchg
add
mov
mov
mov
cmpsb
sub
add
push
sub
ss
xlat
out
dec
xor
push
and
or
inc
fcmovb
icebp
cmp
inc
popf
pop
cmp
adc
dec
imul
test
sbb
push
into
shl
mov
cmp
sub
rcl
jecxz
push
pop
out
mov
mov
movsb
inc
pop
add
aas
scas
xchg
movsb
sub
sub
rolb
add
dec
lret
push
cmpsl
stos
pushf
rcl
jmp
inc
lock
inc
sbb
push
movsb
cltd
mov
or
pop
cmpsl
mov
jne
sbb
sahf
hlt
add
mov
aad
mov
cmp
lods
adc
loopne
adc
dec
pop
aam
sub
out
lods
inc
lods
xor
xchg
imul
filds
and
jg
mov
ljmp
pop
into
push
mov
cmp
fcompl
loope
push
incl
mov
push
xor
sbb
cmpsb
ss
in
xchg
add
imul
data16
adc
cmpsb
push
and
adc
test
sbb
cmp
ja
inc
fdivp
cmpsl
insl
sub
cltd
ljmp
sub
xchg
fidivl
sbb
add
mov
addr16
stos
test
pop
xor
insl
xchg
add
lds
xchg
iret
pop
movsl
in
or
and
getsec
cmp
rcrb
pop
mov
xor
stos
xor
dec
subl
adc
fidivrs
lods
cmp
adcl
pop
fwait
aaa
jae
shl
rcl
or
dec
add
add
push
dec
add
inc
sub
inc
jne
xchg
lock
fcompl
cmc
sti
lea
dec
popa
inc
inc
xchg
les
cmp
pop
add
sbb
mov
push
adc
cmpsl
dec
ret
test
sbb
je
scas
rcl
notb
xchg
or
adc
or
adc
xor
lcall
int
xchg
repnz
inc
out
imul
andb
shll
sub
add
cmpsl
xchg
pop
gs
mov
push
mov
or
cli
insl
or
fldcw
sbb
add
sub
roll
jnp
and
pop
fbstp
jp
cmp
imul
ds
dec
arpl
inc
cmp
outsl
mov
pop
mov
fmul
cwtl
call
jge
out
add
pop
nop
dec
cmp
sahf
pusha
dec
mov
adc
cli
mov
int3
push
mov
xorl
sbb
cmp
shr
inc
vcvtps2dq
jnp
jno
in
pop
pop
aaa
icebp
imul
outsb
divl
jmp
mov
icebp
push
jae
lock
dec
pop
js
es
jg
pop
lock
insb
in
inc
insl
insl
cwtl
lods
xchg
mov
fdiv
add
mov
sub
lcall
shl
adc
sti
mov
pusha
ss
aad
shrb
lods
lock
call
xor
in
xchg
aam
sbb
aaa
outsl
jecxz
pop
sub
jl
pop
repnz
arpl
mov
xchg
fwait
push
stc
popf
sub
pushl
cmp
and
loope
fst
out
adc
mov
mov
sub
jns
inc
pop
jecxz
pusha
scas
and
or
jp
movsl
repz
call
rcll
sbb
pop
add
inc
add
xchg
mov
push
movsb
sarb
pop
pop
sbb
js
repz
adc
stos
and
cmp
mov
sub
pop
pop
cmp
cmpsb
in
sbb
dec
dec
xchg
or
push
add
dec
pop
push
add
in
popf
inc
aaa
fwait
int
loope
idiv
scas
adc
pop
icebp
out
loope
out
mov
xor
inc
push
inc
mov
jb
imul
cli
xor
aas
in
jns
andb
lret
sbb
add
push
nop
mov
int
daa
inc
fistpl
nop
mov
adc
cmp
add
stos
nop
out
add
mov
addl
and
cli
cmp
adc
xchg
icebp
jmp
fprem1
std
mov
jp
ret
xchg
movb
into
and
mov
ds
loope
mov
das
imul
mov
out
ss
fbld
div
outsb
and
je
popf
sahf
movsl
adcb
fs
or
adc
mov
xchg
cwtl
js
inc
adc
incl
pusha
stc
data16
push
nop
std
pop
push
mov
mov
push
or
jne
fmull
xchg
push
lock
mov
add
push
push
rcl
push
cmpsl
lret
int3
push
sbb
in
inc
out
add
jns
xorl
iret
or
inc
push
movsl
test
shrb
popf
jo
mov
out
jmp
cmp
push
push
pop
push
or
cmpsb
dec
dec
mov
int3
loope
mov
mov
sub
mov
jg
pop
popa
mov
loope
xchg
aam
xchg
out
inc
aam
nop
jp
nop
pop
jp
xchg
dec
and
iret
sub
cs
icebp
xorb
mov
int
call
inc
mov
jp
dec
push
xchg
mov
sub
fs
or
sub
rcll
insb
fisubs
js
aas
fstl
lret
and
add
xchg
repnz
or
lret
mov
dec
jmp
stos
cld
daa
cmp
enter
cmpsb
cltd
xor
sub
xchg
sahf
in
xchg
pop
sub
and
and
dec
std
repnz
xchg
rcl
lret
mov
pop
adc
push
mov
push
mov
push
orb
push
adcb
stos
xchg
sbb
aad
or
jge
in
lcall
sbb
lahf
push
adc
mov
aas
loope
test
xchg
leave
rorl
dec
jl
sbb
and
jno
pop
dec
or
cmp
lahf
cmpsb
sti
pop
or
xchg
adc
mov
rcl
int3
popl
sub
cmp
ds
pop
mov
je
mov
pop
fildll
adc
shlb
xchg
pusha
mov
ds
sub
pop
repnz
push
sub
inc
mov
in
lret
in
repnz
adc
mov
cltd
inc
popa
outsb
mov
lods
and
pop
and
les
jge
and
shrb
cltd
jecxz
cmc
rolb
test
jne
ss
sbbl
popa
mov
jg
data16
sbb
cltd
out
cmp
testb
lahf
outsb
in
sahf
mov
pop
sbb
daa
push
jmp
push
xchg
inc
sub
xor
hlt
insl
add
pop
mov
sbb
or
pop
mov
cmp
movsl
jne
in
orl
dec
inc
cld
xchg
mov
push
repz
cmp
xor
jmp
jbe
ljmp
ljmp
fdivrp
dec
jno
gs
push
jae
push
xorb
cltd
mov
pop
xor
mov
mov
test
enter
or
fnstcw
mov
fisubrl
xchg
scas
dec
xchg
pop
inc
ljmp
fiadds
jne
lret
out
iret
mov
fbld
mov
sub
jge
lods
jne
xor
subb
and
sub
scas
mov
fbld
xlat
icebp
and
fdivs
push
scas
daa
sbb
pushf
pop
jns
push
pop
out
ss
sbb
pop
cli
mov
pop
scas
push
xchg
fcomps
repz
sbb
mov
test
call
imul
in
lods
in
shlb
int3
test
lds
call
and
pop
xlat
mov
push
xor
roll
mov
sbb
cmp
cs
xor
inc
enter
jmp
or
aam
adc
jno
xchg
xor
jmp
lahf
lea
cltd
scas
cmp
in
movsb
xchg
cmp
xchg
shrl
lret
cmpsl
and
xchg
jp
mov
cmp
shll
pop
push
fstp
jns
fsubs
aam
cmc
stos
addr16
jge
dec
mov
mov
push
out
dec
shll
push
in
adc
into
push
jmp
jbe
xor
nop
fstps
mov
push
push
cmpsl
mov
out
lcall
cmp
mov
pop
jae
daa
lods
inc
add
mov
or
sub
xor
dec
jbe
and
jle
shlb
mov
in
adc
out
or
xor
sbb
dec
aad
scas
loopne
xchg
pop
jle
mov
out
jo
jb
xor
nop
xor
je
sub
and
shll
sbbb
les
stos
stc
in
mov
popa
mov
lds
cltd
pop
pop
addl
push
xor
sbb
adc
sbb
xchg
cmp
pop
jl
sbb
je
dec
out
jmp
push
mov
adc
loopne
mov
daa
push
call
out
or
cltd
add
in
and
data16
push
in
into
dec
pushf
mov
cmc
mov
lahf
sub
lods
arpl
mov
sbb
adc
pop
popa
ret
orb
pop
adc
mov
pop
int
mov
bound
push
adc
icebp
roll
push
js
mov
cs
sbb
jbe
fcoms
pop
js
cmc
in
decl
cmp
push
add
ret
icebp
mov
adc
xor
mov
stos
push
sarb
mov
xor
enter
sbb
mov
xor
in
cli
jb
lods
jae
mov
imul
adcl
sbb
push
movsl
aam
stc
lods
xor
pushf
rorl
add
add
mov
insb
scas
push
inc
enter
lcall
or
ficoml
jg
xchg
mov
aad
ficomps
mov
dec
int
adc
sbb
andl
lret
ja
pop
inc
mov
or
and
mov
in
aam
inc
test
fwait
insb
addb
add
dec
sbb
les
dec
jp
test
adc
adc
jae
sbb
xchg
push
inc
mov
out
inc
xchg
cmp
cmp
mov
adc
pop
andl
xchg
ljmp
imul
mov
icebp
fsubrs
sub
mov
or
test
shlb
pop
mov
stos
sahf
or
pusha
int3
push
mov
gs
jnp
lret
dec
mov
mov
push
lret
mov
inc
mov
mov
sbb
pop
fildl
stos
cwtl
push
jae
ret
sbb
in
lret
andl
xchg
aad
inc
loop
dec
push
outsb
mov
ja
cmp
adc
and
jno
fists
iret
cmc
push
jbe
pop
stc
jg
mov
pop
hlt
or
pop
inc
push
push
lcall
sahf
xchg
mov
jne
mov
mov
push
hlt
xchg
ljmp
iret
dec
pop
fwait
mov
lea
xchg
jae
xchg
or
shl
jnp
cltd
push
rcrl
iret
aad
enter
popa
movsb
cltd
mov
call
out
adc
data16
lret
pop
addb
mov
pop
jbe
ss
cltd
sbb
int3
inc
mov
dec
lcall
sub
sarl
push
jge
out
add
sub
or
or
in
cmp
and
xchg
stos
movsl
loope
jns
pushf
sbb
push
shll
mov
lcall
cmp
movl
ja
pop
sbb
loope
mov
jne
movb
mov
movsb
sbb
jmp
mov
adc
jle
js
inc
dec
addb
out
scas
mov
sti
xchg
clc
jbe
call
fdivrp
mov
mov
pop
cmp
adc
xlat
mov
dec
dec
inc
cli
in
add
daa
ja
cmp
mov
push
or
jge
lods
jp
sbb
mov
or
pop
outsb
xor
or
and
xchg
ret
mov
mov
sub
mov
mov
decb
js
xchg
or
inc
push
out
cwtl
dec
gs
std
mov
or
in
sub
jmp
cmp
or
dec
lcall
gs
mov
xchg
mov
mov
mov
dec
pop
mov
ficoml
jns
adc
cmp
xor
or
faddl
pop
xor
leave
out
jns
pop
int3
in
ret
clc
push
mov
bound
add
mov
repnz
test
cwtl
fstpl
xchg
loopne
loope
xchg
jb
and
jns
xchg
out
jecxz
stc
xchg
nop
xor
jmp
das
cmc
repz
out
fldl2t
jl
and
sub
cmc
sub
cwtl
test
shr
adc
addr16
inc
lcall
cmp
leave
pop
int
pop
lcall
push
add
out
icebp
jne
sub
ljmp
add
pop
xchg
lds
xchg
daa
pop
ret
popa
jp
mov
or
cmp
sbb
les
pop
pop
inc
push
cmp
jg
test
ret
imul
ss
das
rcl
xchg
cld
pop
push
and
lods
sahf
xchg
sbb
pop
test
int3
xor
je
in
sub
roll
stos
adc
xchg
and
pop
mov
movsb
sbb
cltd
pop
xchg
mov
mov
pop
push
add
xchg
add
int
ljmp
mov
push
rorl
out
aad
pop
jecxz
popf
out
add
bound
pop
push
push
push
std
int3
fnstenv
rol
lods
mov
jae
std
rcll
clc
mull
fs
mov
fwait
leave
push
xor
sbb
test
mov
adc
cmp
lret
mov
cld
mov
add
fwait
sti
mov
jo
rorl
lcall
pop
sbb
movsl
faddl
mov
into
mov
decb
xchg
mov
nop
pop
stc
jmp
jp
cmp
sbb
sub
sub
pushf
dec
mov
loope
fbld
loope
in
icebp
push
xchg
faddl
test
push
iret
leave
pop
stos
and
adc
inc
jecxz
xor
sub
xor
pop
cs
inc
shlb
adc
popf
mov
pusha
movsb
add
inc
enter
adc
shll
ret
pop
adc
lods
push
shlb
fldt
ficompl
fadd
push
inc
fs
loope
xchg
push
fdivs
outsb
orb
and
popa
fcomps
out
push
popl
fcoml
mov
gs
xchg
push
and
pop
inc
add
jecxz
mov
cmp
repnz
sbb
sahf
test
mov
test
out
inc
ss
test
scas
jecxz
cli
dec
mov
mov
pop
mov
mov
inc
frstor
mov
arpl
dec
inc
adcb
imul
push
xchg
jecxz
push
xor
push
add
xchg
adc
push
jecxz
stos
add
sarb
iret
imul
jmp
paddd
test
lea
insl
loope
add
inc
mull
repz
mov
xchg
push
xor
jne
stos
jmp
add
lret
inc
sub
mov
mov
je
cmc
hlt
add
cs
das
testb
aam
sub
jb
adc
dec
pcmpgtd
push
cmpsl
jbe
call
imul
cmp
mov
mov
dec
pop
pop
neg
fldcw
orl
jecxz
jnp
mov
fsubrl
sbb
scas
psubsw
leave
ljmp
push
and
in
xchg
outsl
xchg
push
lea
push
push
or
xor
sub
jecxz
xchg
push
or
pusha
outsl
sub
lds
loopne
xchg
mov
mov
lcall
aas
gs
mov
pop
loop
fwait
adc
sbb
xor
sub
mov
inc
add
adc
sbb
cld
scas
lock
scas
gs
add
popf
icebp
jns
ret
sub
ja
out
dec
imul
jmp
arpl
out
mov
and
shlb
jo
stos
or
dec
lods
sub
sbb
adc
push
or
cld
mov
mov
ja
jge
cmpsb
out
sub
mov
pop
and
pop
cvttps2pi
adc
int3
or
cwtl
add
dec
push
lock
adc
jns
mov
sti
stc
loopne
stos
lea
lahf
sub
cmp
pushf
adc
inc
in
jl
cwtl
mov
bound
hlt
mov
cli
loopne
out
js
flds
pop
rolb
in
stos
mov
and
adc
jns
mov
in
pop
push
mov
andl
sbb
push
mov
and
or
shl
jge
sarb
sub
les
xchg
dec
jmp
jns
adc
or
psrlw
movsb
stc
aad
adc
xchg
adc
js
psrlq
pop
pop
outsl
popa
in
subl
lcall
xor
fs
push
insb
fcmovnb
aad
pushf
mov
xor
out
mov
pop
mov
aam
jno
add
js
dec
and
xchg
sub
pop
cmp
sbb
iret
das
mov
xchg
xchg
pop
pop
cli
mov
jae
mov
and
and
pop
push
inc
mov
fstpl
adc
add
jmp
mov
adc
mov
aad
adc
imul
test
jg
pop
mov
or
sub
cmp
nop
sbb
aaa
pop
jb
sahf
jae
fnstcw
das
adc
mov
cmpsl
mov
mov
iret
xchg
rcr
aaa
jno
mov
xor
adcl
in
out
stc
mov
xor
sbbl
or
jns
jecxz
jo
sub
rcll
mov
clc
das
jb
add
shll
push
test
loop
and
mov
cwtl
ja
xchg
push
adc
mov
fcmovbe
ljmp
add
fisttpll
outsb
pop
incl
push
loopne
int3
add
pop
cmp
inc
addr16
mov
mov
mov
stos
xor
inc
pop
lock
cmpsl
inc
and
jo
repz
in
movsl
int
jno
mov
push
pop
mov
hlt
push
cwtl
inc
add
test
loope
push
mov
cmc
push
ret
or
imul
adc
aaa
sbb
inc
inc
cwtl
cli
mov
pop
pop
std
cmpsb
mov
or
nop
ret
insb
sbb
sub
lret
mov
jle
std
out
or
mov
into
lods
fdivs
ss
cmp
out
fiadds
xor
lcall
jle
push
adc
xchg
cmc
in
jle
sbb
mov
sbb
mov
popa
mov
dec
push
sbb
push
out
mov
pop
js
jo
sub
sub
faddp
push
cmp
jnp
loope
pop
scas
sub
addl
aaa
jecxz,pt
cld
dec
out
pop
inc
sbb
loopne
in
jns
inc
lods
jo
shll
cmp
stos
adc
and
mov
jns
ret
cmp
out
xor
jne
sub
test
ret
adc
jae
mov
mov
dec
xor
sbb
int3
lods
jae
mov
fadds
inc
mov
pop
adc
xchg
pop
outsl
jg
mov
in
xchg
sub
mov
mov
out
data16
pop
out
mov
push
and
lock
sbb
insb
ret
cli
fwait
mov
pop
movsb
data16
imul
jno
lret
lods
push
or
test
jb
xchg
and
stc
out
sbb
mov
add
dec
inc
mov
sub
dec
xchg
rclb
push
jbe
jb
pop
adc
add
loopne
in
aam
fwait
shll
sarb
cmpsb
xchg
xor
lods
cmp
sub
incb
arpl
in
and
imul
cmc
mov
pushf
pop
insl
shlb
pop
lret
arpl
imul
leave
xor
insb
dec
rorb
fnsave
pop
cmp
dec
pop
jp
aaa
sbb
or
ja
pop
movsl
jb
test
add
xchg
pushf
sbb
clc
and
ret
and
and
in
mov
cmpsb
cmp
ret
cld
jo
stos
jecxz
out
clc
les
jae
push
dec
lcall
xor
xor
aas
outsl
leave
push
sbbl
or
and
repz
jns
aaa
stos
push
out
jmp
jne
jb
or
aad
pop
sub
pop
dec
mov
imul
sbb
pop
enter
sbb
jns
mov
cmpsb
cmpsl
es
loope
rorl
ds
and
jecxz
imul
sbb
scas
cmpb
addl
pop
popf
subl
into
jne
dec
xor
or
sahf
movsl
lods
repz
mov
andb
aas
test
popf
xor
cld
mov
data16
lds
xor
es
stos
mov
pushf
aam
call
xchg
xor
push
std
leave
dec
cmc
int3
pop
mov
imul
in
xlat
lret
lds
js
pushf
sbb
lods
repz
dec
insb
ret
sbb
and
mov
dec
add
sti
lret
into
pop
fmulp
call
stc
popf
loopne
jl
fmuls
pop
icebp
adc
into
inc
mov
pop
cmpsb
addr16
iret
mov
or
cmp
fsts
jge
insb
or
ret
enter
xchg
pushf
imul
and
jns
sar
pop
push
sub
xchg
cwtl
nop
xchg
mov
adc
cld
es
xchg
mov
arpl
mov
pop
lret
mov
dec
cmpsb
loopne
jmp
xchg
enter
pop
ret
stos
dec
leave
and
and
mov
jne
loop
add
or
xor
cmp
js
cmc
lahf
mov
out
mov
sub
inc
dec
test
std
jp
fisttps
das
mov
lcall
repz
xor
les
cmp
and
out
inc
pop
cwtl
cmp
mov
sbb
call
sub
leave
data16
xor
add
dec
lds
push
lcall
xchg
sbb
ja
cltd
xor
pop
xchg
xchg
insb
int3
sub
push
cmpsl
lods
mov
jmp
leave
push
testl
jg,pt
mov
add
mov
jmp
lcall
mov
movsb
adc
xor
cwtl
ja
gs
mov
inc
dec
mov
or
icebp
and
inc
icebp
aaa
sbb
popf
and
jns
cmpsl
pop
scas
jo
push
mov
jge
mov
lret
cwtl
or
jle
enter
dec
xchg
cli
cmp
mov
lret
in
clc
jb
sub
and
sub
movsb
add
fsts
lcall
ret
mov
jb
or
xlat
jl
jnp
out
add
loope
sub
scas
pop
and
sbb
pop
pop
push
mov
jo
xchg
inc
cmp
dec
add
lahf
jg
push
mov
aad
push
dec
subb
andl
hlt
outsl
cmp
ljmp
not
add
xchg
jbe
ficoml
dec
in
push
hlt
stos
mov
xor
jecxz
jno
sbb
mov
mov
cmpsb
jne
cmp
sub
pop
mov
loopne
ret
dec
leave
dec
jmp
cli
pop
adc
sbb
jnp
shlb
fcoml
push
fiaddl
inc
jae
mov
cwtl
mov
popf
jns
aam
mov
pop
cmc
ljmp
xlat
stc
inc
data16
out
mov
mov
inc
fisttps
pop
jg
mov
test
cs
jp
arpl
into
dec
adc
enter
outsb
pop
adc
sarl
iret
int3
and
fistpll
sub
outsl
daa
sub
inc
xchg
mov
pop
shlb
adc
sub
lea
lock
mov
fnstcw
inc
sti
iret
sub
fildll
and
into
push
int3
dec
pop
sub
lahf
sbb
adc
jge
xor
jns
cmp
insl
stos
jg
and
jle
mov
mov
mov
scas
movsl
mov
fistps
scas
push
push
fstpt
dec
sbb
xor
ss
aaa
jae
or
mov
or
loopne
pop
add
xor
std
ljmp
cmpsl
mov
iret
mov
int3
fbstp
push
jb
not
mov
adc
cmpsb
push
jle
fiadds
notl
jae
les
mull
sub
movsl
mov
mov
inc
pop
xchg
sahf
push
insb
mov
xchg
sbb
fsubrs
fnsave
sub
cmp
pop
ret
jnp
mov
adc
cld
add
mov
push
outsb
pushf
aam
aas
cmp
lret
dec
mov
inc
cmp
mov
popf
fsubr
mov
outsl
fucom
or
pushf
push
cmp
add
adc
adc
loope
sub
mov
ja
xor
push
mov
addr16
dec
and
mov
arpl
xor
in
mov
mov
mov
mov
lea
insl
adc
jbe
rorl
cwtl
push
sub
add
push
nop
fs
adc
push
push
mov
mov
push
ja
xchg
sarl
mov
test
loopne
sub
inc
out
mov
mov
push
in
and
scas
push
lock
jb
jns
push
arpl
pop
std
fcoms
mov
pop
shll
xor
mov
jmp
aad
leave
push
nop
xchg
jecxz
rorb
out
cli
xchg
xchg
into
xchg
xchg
mov
aas
repnz
inc
jmp
das
xor
cmp
cmc
shl
add
mov
enter
or
push
imul
loop
fdivs
movsl
xchg
cmp
pop
mov
or
xchg
gs
movl
cltd
int3
imul
call
cltd
xchg
push
sahf
cmp
lock
push
inc
and
add
test
lods
std
push
mov
lcall
int3
stos
ds
shrl
movsb
js
xchg
pusha
test
xor
cmp
stos
cmp
jmp
loop
fcomi
lret
add
xor
mov
sub
sub
les
repz
rorl
mov
sub
cmp
shll
test
pop
sub
cld
icebp
adc
aad
dec
jle
nop
cmp
mov
fdivrs
fcmovu
hlt
mov
les
xchg
leave
ret
lods
xor
cmpsb
test
sub
mov
outsl
test
jecxz
or
add
int3
ds
cmpsl
pop
jmp
cmpsb
call
jae
gs
cltd
pushf
es
push
push
sbb
push
mov
int3
push
cwtl
fistps
push
rorb
xor
jb
mov
mov
push
icebp
outsb
adc
sbb
mov
dec
sbb
mov
mov
insl
int
clc
xchg
popf
mov
dec
test
add
mov
mov
lock
loope,pt
add
loop
test
cmovno
ljmp
cmpsb
pushf
mov
pop
pop
mov
cmpsb
sub
mov
stos
xchg
mov
shl
rcl
sti
and
leave
inc
call
test
sub
lret
push
subps
add
pop
cltd
aam
or
rolb
cmpsb
and
stos
mov
xor
pop
cmpsl
pop
and
mov
loopne
mov
mov
orl
aaa
mov
or
push
push
mov
lods
dec
and
leave
and
outsb
push
xchg
cs
jg
call
das
mov
js
out
pop
pop
mov
popa
mov
cs
adc
mov
in
dec
pop
dec
and
cmc
inc
movsb
dec
xchg
jl
inc
mov
fwait
push
bound
outsl
cmp
lret
enter
arpl
rclb
scas
jae
sub
and
push
scas
jb,pn
in
lods
jp
or
push
push
cmpl
lahf
enter
or
aaa
cwtl
dec
mov
xor
inc
les
aaa
outsb
shrb
test
pop
adc
and
insb
mov
push
ljmp
lret
ja
jo
jnp
jmp
push
push
je
mov
inc
inc
push
iret
scas
xchg
cld
xor
inc
mov
aaa
ret
sbb
push
sub
or
sub
cmp
ljmp
lcall
pusha
mov
js
sarl
stc
fadds
mov
scas
jmp
mov
movsl
pop
pop
push
or
mov
inc
mov
dec
rcrb
mov
and
xchg
or
in
sbb
and
fs
sahf
mov
pop
arpl
daa
fidivl
fs
test
adc
dec
cld
push
call
add
pop
mov
icebp
sti
fildll
xchg
test
inc
cli
push
push
xlat
ret
and
fsubrl
test
outsl
addr16
mov
clc
bound
stos
cli
xchg
adc
dec
or
outsl
les
cld
jecxz
loop
out
add
aad
adc
inc
icebp
stos
pop
adc
iret
mov
in
cmp
cli
push
das
out
sub
loop
insl
icebp
sub
out
scas
pop
enter
push
mov
aaa
mov
or
notb
sub
loopne
dec
out
aas
fnsave
dec
sub
adc
cli
iret
test
scas
mov
jno
adc
cli
dec
imul
imul
mov
lcall
jecxz
xchg
mov
cli
cmp
or
inc
jo
aas
nop
shll
jl
mov
mov
insb
xor
shl
lcall
xchg
jns
mov
add
ss
cmp
dec
out
inc
mov
rorb
aaa
sbb
dec
out
dec
sbb
pop
pop
inc
fists
out
outsl
dec
pop
cmp
xchg
scas
sub
sub
cmp
addr16
insl
jns
cmp
jae
jg
clc
dec
fcmovbe
arpl
add
sub
lods
mov
sub
aam
and
jl
or
popf
aas
clc
adc
std
sbb
inc
sbb
fimull
test
outsb
dec
mov
test
arpl
sbb
xchg
xchg
dec
adc
xchg
push
inc
inc
sbb
fldenv
js
mov
pop
and
dec
xchg
inc
movsl
fsub
pushf
jl
cmp
popa
mov
and
cmpsl
sub
cmp
call
inc
cmp
jp
pop
jge
call
and
addr16
inc
dec
mov
sbb
and
les
jmp
mov
fldenv
sub
les
inc
stc
cmp
les
daa
fnstcw
out
mov
mov
call
leave
jns
fidivrs
aad
fld
test
insb
rcl
sub
xor
or
pop
jmp
shlb
flds
adc
loop
mov
add
pushf
xorb
dec
mov
fildl
in
cmpb
inc
cmp
divl
incl
iret
mov
nop
pop
lock
mov
dec
fcomps
cli
out
mov
gs
xor
sbb
popf
mov
xchg
dec
inc
roll
jecxz
mov
stos
lcall
lods
push
add
cmc
jge
out
adc
add
dec
into
fsubr
cmpsl
inc
and
mov
pop
xorl
jno
fs
lods
pushf
jge
sti
and
int
bnd
add
and
aad
push
popf
add
ds
in
les
or
scas
cmpsb
xor
ret
mov
bound
pop
incl
push
int
or
push
mov
shlb
pop
lahf
or
pop
mov
test
mov
std
sub
mov
add
pusha
xchg
jne
lods
movups
stc
and
loop
and
push
sub
ret
scas
mov
mov
jle
pop
int
push
data16
fldlg2
subb
jne
mov
add
ret
bound
mov
mov
int
xor
add
loop
test
movl
cmpsb
pop
out
aaa
pop
das
ljmp
std
sbb
mov
mov
into
insl
ret
push
cs
pop
dec
push
sbb
mov
pop
jge
dec
push
mov
test
loope
add
sub
jo
adc
xchg
roll
es
adc
shll
cli
cmp
xor
movsb
or
mov
xchg
stc
enter
scas
xchg
push
inc
inc
daa
scas
push
adc
loop
imul
mov
cmp
jno
aam
xorl
outsb
sbb
jb
mov
stos
hlt
addl
das
and
arpl
and
div
mov
jae
mov
imul
pop
mov
out
jp
orb
or
popa
hlt
push
adc
jg
aas
mov
movsb
in
inc
sbb
fldcw
pop
add
arpl
lods
lea
icebp
cmc
arpl
mov
cmc
jns,pn
push
mov
sti
mov
lahf
js
push
mov
adc
cwtl
jno
mov
pop
hlt
or
xchg
test
stos
iret
dec
mov
bndstx
push
push
xchg
test
outsl
adc
shr
lods
push
stos
push
in
lcall
jmp
std
je
xchg
push
jecxz
ss
xor
mov
cli
in
cmp
pop
dec
push
imul
fs
push
xorl
mov
and
xchg
arpl
lea
cld
mov
sbb
jge
fadds
jnp
sub
sbb
repz
jno
and
or
mov
pop
dec
ljmp
out
push
out
fsub
mov
adc
cs
pop
inc
push
stos
bound
rcll
sub
loop
nop
mov
call
sub
lahf
sbb
imul
into
mov
sub
mov
shlb
dec
fimuls
fdivs
or
push
or
scas
mov
out
jl
lcall
imul
movsb
fistl
repz
adcl
loope
icebp
mov
dec
loope
insl
in
addr16
push
outsb
or
les
out
xchg
mov
pop
adc
jecxz
sahf
and
rcr
and
cmp
sub
xorl
out
mov
fldcw
xor
out
push
fsubl
sbb
movsl
gs
cmpsb
sti
fsubp
fwait
loopne
and
jg
sbb
sub
pushf
test
clc
sub
cmp
rcr
adc
mov
mov
jb
outsl
push
ficompl
xchg
sub
hlt
add
xchg
mov
inc
cmp
jmp
gs
xor
push
sbbb
mov
jp
inc
in
mov
push
jo
in
add
sbb
imul
divl
fxch
es
idivb
mov
jecxz
pop
mov
rcll
xchg
inc
mov
sub
pop
pop
xchg
inc
es
mov
fadd
rcll
add
adc
iret
lret
imul
cmp
jb
jns
xchg
xchg
lock
shll
data16
cltd
inc
add
and
nop
lods
lret
add
mov
xchg
cmpsl
shrb
xchg
add
dec
pop
add
xchg
scas
push
inc
insl
and
fcompl
iretw
daa
mov
add
pop
movsb
nop
cwtl
push
cwtl
test
sub
adc
outsb
outsl
imul
cld
in
jp
sti
mov
add
cwtl
mov
jle
xchg
repnz
dec
mov
jmp
sub
cli
testb
fbld
fcompl
nop
pop
es
cli
lds
add
lret
in
hlt
mov
jne
stos
and
inc
or
cmpb
mov
std
jae
lahf
shll
push
iret
mov
outsb
xor
jnp
cmpsl
sti
fmul
jnp
cltd
and
mov
out
mov
outsb
leave
xchg
adc
pop
adc
jns
add
fistl
mov
cs
sbb
cmpsl
adc
pop
icebp
repz
cmp
aad
int
orb
push
out
loop
jns
xor
push
insb
mov
test
in
in
cltd
stos
enter
sbb
gs
rol
add
dec
fcom
daa
lahf
jp
inc
jle
rcl
int3
push
cltd
fcoms
cmp
std
mov
fcmovnbe
ret
lret
sbb
fistpll
mov
xor
loopew
sbb
stos
imul
sbb
jno
jge
std
fs
ss
pop
sub
cwtl
or
call
push
test
pminsw
adc
mov
scas
js
lret
shll
ds
xchg
mov
int3
sbb
stc
pop
test
aaa
mov
orl
pushf
and
jae
sub
cld
adc
fisubrl
lock
imul
or
cmpl
xor
push
jl
pop
pop
shll
adc
mov
cwtl
dec
push
lods
mov
jge
inc
out
mov
add
xchg
sbb
scas
fcmovnu
mov
les
adc
mov
fcoms
loope
push
stos
shlb
sbb
mov
mov
cmpsb
mov
lcall
sti
push
mov
in
cwtl
dec
xor
adc
or
fcoml
mov
imul
pushl
mov
daa
pop
in
mov
sub
jp
jb
cmp
pop
xor
push
sub
cld
push
push
fldcw
rorl
xchg
stc
cs
sahf
enter
insl
fcmovnb
add
inc
dec
mov
jns
dec
daa
lcall
or
push
fadds
out
icebp
add
or
and
call
stos
xchg
mov
ret
es
or
js
and
bound
outsl
xlat
jg
popf
or
mov
or
xor
sti
loop
push
lock
pusha
push
lock
add
mov
or
movsl
xchg
cli
fdivrp
pop
push
add
into
pusha
or
outsb
pop
add
jecxz
sbb
cmp
lahf
mov
sub
scas
sub
jbe
sub
lds
scas
xchg
int
fidivl
cwtl
cmc
leave
jle
jl
pop
push
mov
adc
adc
add
js
adc
lret
jne
push
outsl
jb
cli
sub
mov
xor
or
shrb
pop
aas
ljmp
pop
inc
cmp
divl
fcmovbe
pop
push
out
jnp
sub
enter
pop
stos
arpl
or
mov
jb,pn
aam
inc
sti
jg
bound
inc
fstl
daa
sbb
mov
aam
adc
aas
sub
iret
sbb
pop
jns
jnp
push
sahf
out
mov
leave
sbbb
mov
xchg
jne
mov
mov
push
fimull
xor
sub
gs
mov
cwtl
jg
ret
ret
sub
adc
pop
jmp
sbb
push
and
xorl
cmp
test
cmc
mov
scas
lea
inc
and
into
mov
ret
cmp
cmp
push
dec
ret
fbstp
add
xchg
jp
rol
and
not
or
test
fcmovne
stos
adcb
gs
sub
inc
mov
lods
and
and
fiaddl
add
lcall
and
mov
scas
fidivl
sub
mov
add
sbb
out
inc
outsl
loop
lret
out
mov
cmc
mov
cmpsl
dec
cmp
adc
xor
add
mov
stos
stos
js
xchg
rcl
jge
cltd
pop
pop
mov
xchg
xor
js
icebp
mov
fistpl
scas
lods
jge
jge
test
cmpsb
xchg
adc
nop
mov
mov
clc
sti
sbb
mov
jmp
push
loope
fwait
jnp
jno
push
pop
andb
lds
subl
cmp
sahf
or
mov
clc
inc
pop
repnz
fldcw
xchg
mov
sbb
fnstsw
cld
xchg
in
xor
cmp
js
mov
fcoml
push
iret
das
stc
jl
iret
fwait
pop
pop
sub
ret
addr16
mov
push
popa
iret
adcb
cmp
andb
repz
scas
lock
cmp
es
sub
out
pop
popa
push
leave
cmpsl
bnd
lret
push
push
push
jge
shll
jle
out
fsub
rorl
pop
pop
outsb
sbb
lea
gs
ss
icebp
xchg
fmuls
mov
rorb
dec
mov
dec
loop
sub
fmul
add
test
pop
ficomps
mov
loopne
in
mov
mov
push
das
dec
repz
mov
cwtl
adc
mov
push
mov
loop
rclb
call
push
punpckhwd
xor
enter
push
aam
mov
int3
push
mov
cmpsl
scas
je
ret
xchg
lds
nop
cmp
cmpsl
mov
roll
lods
jl
mov
jmp
inc
xor
mov
sbb
out
pop
out
fsubr
jne
fstp
pushl
mov
or
fwait
mov
ss
and
mov
sahf
insl
adc
cltd
jle
ss
pushf
pop
jmp
mov
sbbb
xchg
gs
int3
and
mov
mov
aad
and
push
mov
push
aas
int
push
jns
movsl
jle
loopne
out
jmp
add
js
adcl
push
push
popa
add
popf
mov
aad
popa
mov
cld
cmp
les
mov
push
inc
push
rcrb
push
and
add
push
rcll
bound
and
sub
je
mov
jne
mov
add
add
adc
inc
inc
les
xor
mov
ljmp
ds
push
cmpsl
enter
ret
fldcw
or
xor
aas
adc
lret
shlb
cwtl
sub
lock
test
push
pop
rorl
jno
enter
cltd
cwtl
xlat
test
push
fs
mov
test
jno
sub
insl
mov
gs
sub
test
cwtl
insl
stc
lahf
mov
jns
fisubs
cmp
dec
adc
clc
mov
movsb
mov
ffree
outsb
js
cmp
cmpb
ret
imul
dec
push
pop
adc
mov
xchg
and
jge
sub
dec
loop
pop
adc
lret
imul
xlat
jp
faddl
inc
test
and
push
jmp
gs
cwtl
pop
dec
lds
sbb
sbbb
lret
push
addb
and
call
iret
dec
push
adc
inc
aad
shrl
arpl
mov
or
mov
in
addr16
sti
aam
mov
std
mov
aad
sbb
jno
das
add
or
sbb
push
test
push
xchg
and
add
mov
arpl
ja
nop
mov
lea
push
adc
mov
cmpsl
xlat
adc
dec
mov
jns
rclb
into
movsl
aaa
cmp
adc
xchg
push
repz
mov
mov
cmp
sbb
pop
add
int3
les
cmpb
insb
lods
xchg
jo
imul
nop
addr16
shrl
mov
sar
loope
repnz
jbe
sbb
xor
cs
fists
pop
cmp
mov
xchg
jmp
xchg
pop
flds
jmp
mov
ret
cwtl
sbb
out
into
clc
pop
out
inc
orl
adc
cmp
push
cli
mov
lcall
add
or
push
xor
fsubs
scas
sub
ja
pop
sbb
push
shrl
loope
push
jnp
fstpl
out
or
add
add
or
fiaddl
mov
pop
lcall
cs
sub
xchg
inc
sbb
movsb
xchg
stc
push
jo
xchg
dec
jbe
js
outsl
inc
cmp
adc
nop
outsb
xor
jae
push
jno
int
jecxz
and
addr16
sub
xchg
les
inc
cmpsb
xchg
adcb
mov
pop
pop
xchg
jae
fwait
stos
mov
cli
dec
loope
out
cmpsl
movsb
pop
imul
push
int
or
addb
dec
loop,pt
cmp
movsl
cmpsb
int
and
dec
pop
lds
pushf
je
xchg
push
sub
mov
or
loopne
imul
ds
xchg
and
push
pop
xchg
test
add
xor
aas
adc
mov
jle
xchg
xor
jns
cmp
test
mov
daa
pop
imul
and
pusha
mov
adc
addw
add
mov
adc
je
xor
jae
push
mov
add
ljmp
mov
sbb
xor
das
notl
pop
mov
cmpsl
call
push
inc
test
and
dec
fisubrs
repz
in
fisubs
push
add
inc
or
adc
ljmp
in
mov
add
cmc
pop
out
rorl
inc
mov
daa
push
pop
push
pop
cwtl
xchg
sub
jb
mov
fistpl
mov
mov
pop
sbb
das
and
pop
dec
pop
and
inc
imul
popf
pop
fimuls
lcall
pop
jecxz
jae
push
mov
dec
insb
cli
hlt
pop
cmp
fildll
push
testb
pop
rcll
cli
inc
arpl
jbe
push
inc
lods
pop
arpl
pushf
push
loop
popf
jb
lods
cvtps2pd
xor
cli
lea
pop
movsl
int
mov
movsl
mov
outsl
ljmp
cmpsb
mov
mov
movsb
pop
cli
xchg
js
mov
jmp
dec
inc
pop
mov
jo
nop
faddl
loope
pop
bound
mov
in
icebp
popf
cmpsl
stos
jbe
push
inc
push
pop
test
cmp
in
outsl
test
pop
fs
pop
or
cwtl
dec
popa
fistl
leave
push
insl
sub
sti
pop
xchg
lock
fwait
aas
scas
xchg
inc
lret
daa
fsubrs
es
xor
dec
sub
push
ret
mov
sub
pop
test
pop
mov
xor
dec
ja
gs
loop
js
sbb
imul
push
jno
mov
jns
ds
push
jmp
fs
andb
cmp
cmp
mov
ja
stos
cltd
dec
jmp
mov
lret
cmp
xchg
movsl
stos
js
sarl
xchg
or
in
ret
aas
leave
xor
cmpsl
and
cmpsl
sub
or
divl
out
fiaddl
sarl
inc
sub
mov
fistpll
ja
leave
xor
fidivs
adc
xchg
mov
out
jp
dec
adc
mov
notb
shr
jge
pop
sbb
inc
and
pushf
mov
std
pushf
out
ret
dec
out
xchg
sub
push
repnz
xor
movsl
cmp
cmpsl
inc
aam
lret
mov
sub
jo
es
xor
jb
mov
or
cmc
sbbl
push
pop
cmp
stos
fadds
mov
rolb
sub
mov
fdivs
aaa
fsts
push
icebp
ss
gs
pop
push
test
xor
pop
xor
sbbl
lret
jecxz
clc
jl
push
pusha
mov
and
iret
repnz
imul
xor
out
adc
mov
jae
xchg
dec
dec
jno
scas
imul
and
scas
roll
daa
mov
hlt
call
les
lret
shrb
out
out
adc
ljmp
mov
lret
xchg
xlat
xor
cmpsl
lock
push
nop
push
sbb
push
mov
and
xchg
fisubrl
fstpl
adc
xchg
ss
popf
lcall
xchg
sbb
stc
mov
mov
xchg
ret
adc
rcrb
jnp
ret
movsb
push
add
aaa
mov
push
jmp
icebp
dec
int
in
add
std
popa
sbb
es
imul
in
pop
pop
mov
std
cmp
lea
push
add
push
ds
mov
sbb
add
mov
xlat
ds
movsb
addl
int
xchg
mov
cmp
imul
adc
jmp
imul
xor
push
fstpl
int
cltd
add
ds
or
sub
push
adc
fcmovnbe
mov
add
rcrl
fisubl
je
repnz
ret
lds
out
xchg
mov
fdiv
mov
fsub
push
pop
jge
jmp
leave
adc
movsl
push
jbe
shlb
shlb
testb
test
pop
mov
xchg
or
daa
xor
js
pop
lea
imul
out
jne
inc
in
add
std
push
call
jmp
inc
in
in
lret
test
fildl
daa
pop
xchg
inc
insl
das
adc
ret
xchg
fdiv
out
inc
mov
xchg
mov
ds
add
out
cmpsb
test
lret
xchg
insb
dec
loope
jne
std
mov
ja
dec
je
loop
mov
daa
daa
add
dec
test
fmull
je
sub
fcoms
mov
les
dec
pop
ljmp
adc
cmp
inc
rorl
adc
dec
sbb
push
xchg
xchg
cmp
or
add
inc
movsl
data16
push
or
jns
sub
inc
fsts
les
mov
stc
popa
adc
stc
je
shl
sub
xsavec
add
jae
stc
xchg
outsl
in
sahf
outsb
xchg
mov
pop
add
xchg
mov
xchg
jae
inc
je
cmp
pop
xor
pusha
jb
lahf
mov
or
inc
es
or
shlb
push
jns
jge
addl
or
xchg
rorl
and
in
mov
icebp
pop
inc
inc
dec
aam
jl
pop
fmuls
add
lret
jmp
loope
inc
xor
push
cmp
repnz
cli
lea
jns
pop
fwait
aam
and
insl
inc
cwtl
push
cmp
mov
mov
std
dec
sub
adc
mov
push
dec
jnp
stc
jnp
ljmp
mov
imul
loope
cmpsl
outsb
mov
mov
imul
mov
jbe
es
pushl
ret
add
xchg
ret
dec
dec
push
sbb
inc
neg
je
inc
xlat
sbb
xor
dec
aaa
mov
orl
and
xchg
imulb
aam
in
push
mov
jo
and
call
lds
adc
sti
dec
in
xchg
lods
movsl
sbb
xchg
push
add
call
adc
cmp
pop
dec
cltd
out
test
enter
mov
das
pop
ret
in
roll
jne
test
cwtl
adc
add
xchg
inc
lahf
imul
xchg
or
adc
push
inc
stos
xor
std
dec
fidivrl
ret
imul
dec
adc
and
sub
mov
xor
xchg
sbb
sti
adc
sbb
xchg
sbb
and
fistpl
push
lret
or
mov
sub
pusha
aas
ss
dec
clc
jp
fcoms
outsb
push
and
xor
out
imul
fstpt
add
test
in
or
test
pop
sahf
les
push
push
adc
jne
dec
cmp
mov
insl
ljmp
mov
xor
adc
subb
ficoml
fwait
pop
jnp
xchg
pop
push
jge
jecxz
xor
push
pop
dec
jns
std
jge
in
dec
cmpsb
std
cmp
push
lods
push
fnstcw
sbb
xor
xchg
out
sub
repnz
sbb
or
decb
add
mov
icebp
xchg
mov
mov
imul
pop
jae
and
iret
pop
sub
lahf
fisubrl
add
fldcw
ret
add
iret
mov
xchg
call
xchg
dec
mov
hlt
data16
xchg
or
xchg
fwait
sub
das
and
fmull
dec
inc
push
cmpsl
popf
or
ds
adc
outsb
imul
mov
jns
iret
in
pop
fucomi
leave
movsl
icebp
adc
add
je
mov
ljmp
loop
js
mov
dec
std
mov
sub
ljmp
mov
hlt
insb
pusha
out
mov
mov
xchg
add
repnz
cltd
dec
imul
or
mov
into
pusha
push
jno
mov
lcall
pop
cmpsb
push
push
cmpsl
cmpsb
adc
inc
out
adc
mov
dec
jb
pop
mov
repnz
inc
cmp
jb
call
add
mov
push
mov
push
push
add
mov
nop
mov
and
call
pop
enter
inc
push
mov
stc
mov
jb
mov
subb
les
clc
daa
and
sahf
add
hlt
lods
lds
cltd
pop
fs
sbb
cwtl
xchg
shlb
mov
pop
xor
out
mov
add
pop
loop
fdivs
and
pop
sbb
sahf
sub
inc
mov
loop
int3
movsb
hlt
xlat
jns
ljmp
jae
cmc
cmp
mov
cld
sub
or
fs
icebp
and
sbb
imul
or
jmp
inc
xor
scas
xor
cmp
mov
fwait
lahf
mov
inc
lcall
push
xor
xchg
inc
jnp
adc
shlb
lock
sbb
mov
pop
jge
cs
sub
hlt
hlt
cwtl
mov
pusha
sahf
fwait
mov
pop
lods
xor
aaa
xor
clc
or
sub
dec
mov
push
inc
mov
fisttpll
clc
lds
push
inc
imul
loope
adc
xchg
inc
fsubs
clc
xchg
mov
movsl
mov
mov
movsb
jle
clc
lock
pop
sub
sahf
arpl
movsb
push
inc
adc
insb
cltd
or
sbb
push
or
rcrl
ja
cmp
call
dec
cmp
dec
pusha
and
dec
mov
add
lds
xchg
pop
xchg
shl
mov
xchg
cmp
jmp
scas
add
and
and
pop
xchg
shl
addr16
test
and
fimull
pop
push
pusha
cmc
dec
loop
xchg
lods
stos
push
data16
mov
add
xor
ja
sub
pusha
and
leave
push
lret
sarl
lret
scas
ss
lds
mov
or
lahf
add
sub
lds
xor
lea
sub
into
and
fistl
ret
cld
lcall
mov
adc
movsb
movsl
mov
jmp
xor
in
mov
mov
push
mov
dec
iret
rorl
movsb
es
jnp
cmc
and
pushf
jmp
pop
fmull
lahf
xor
jp
leave
jnp
or
imul
mov
loope
cmpb
outsb
mov
cmp
rorb
rcl
push
ds
dec
cmp
dec
adc
add
jecxz
movsb
lcall
lods
stos
ret
fistps
jnp
add
js
fnsave
pusha
insl
scas
cmpb
sub
xor
sub
mov
je
adc
arpl
pop
insb
adc
cltd
push
popf
xchg
dec
sti
push
inc
mov
cmp
cwtl
add
dec
jne
push
adc
notl
add
adc
jmp
mov
popf
pop
push
adc
or
pop
outsb
movsb
lret
push
cmpsb
sbb
pop
xchg
pushf
in
pop
lahf
push
mov
cmc
push
mov
bound
xchg
fnstenv
in
movsb
fistl
fsubrs
pop
mov
cmp
jge
popa
std
cmp
enter
les
iret
xor
test
sbb
xchg
xchg
cmp
mov
push
cli
pop
jno
mov
push
cmc
out
iret
pop
jnp
ljmp
jnp
enter
mov
rorb
das
int
repnz
and
push
pop
aad
pop
and
out
loop
cmp
jge
and
jae
ret
imul
adc
push
out
test
rcr
mov
xchg
dec
and
ds
jl
cmp
push
repnz
scas
jge
je
push
xchg
mov
sti
je
sti
test
imul
gs
push
fisubrs
stos
in
movsb
pop
sbb
fs
test
dec
pop
lcall
jl
mov
jmp
xor
mov
insl
pop
or
pop
daa
addr16
jb
in
hlt
push
dec
das
ljmp
mov
and
sub
jle
xchg
push
aaa
dec
jmp
bound
in
rcll
enter
cmp
cli
dec
repz
xor
movsl
inc
pushf
fsubr
jle
ljmp
inc
push
adc
test
pushl
cmpl
lret
push
push
jge
sub
inc
jle
and
and
sbb
and
mov
ja
mov
popa
fsubrs
xchg
cmp
cmovb
cmovb
dec
in
scas
sbb
stos
adc
xchg
fisttpl
rcrl
jbe
pop
xor
push
xlat
mulb
les
in
and
es
inc
cmp
sbb
daa
hlt
mov
mov
pop
or
xor
rorl
jnp
dec
pop
fwait
sti
push
popf
in
mov
lret
add
adc
pop
fldcw
mov
fucom
push
cmpsl
dec
insl
cmc
cmp
xor
lea
pushf
xchg
jg
inc
mov
mov
jno
fnstsw
clc
push
mov
pop
iret
push
inc
mov
mov
aad
into
adc
ja
sub
rolb
imul
into
fdivrl
insb
push
stos
adc
push
adc
outsl
lcall
in
js
jg
jl
push
mov
and
mov
or
out
fcoml
mov
sahf
push
inc
push
lret
or
pop
mov
fcompl
ret
adc
add
add
sub
bound
adc
stos
inc
mov
mov
stos
adc
out
mov
and
inc
mov
cli
pop
lds
repz
mov
cmp
outsb
jl
add
ljmp
test
nop
and
mov
push
aam
mov
ret
fs
daa
mov
out
stos
div
shrl
jl
icebp
lds
sub
insb
cmp
cwtl
out
cld
sub
das
in
loop
nop
xchg
sbb
pop
orl
fiadds
fadds
mov
popf
je
sub
cmpsl
push
fdivrs
adc
lret
lcall
lods
out
xlat
or
fwait
mov
push
sub
bts
or
push
popf
cltd
adc
push
int
mov
xchg
or
bound
cmpsb
mov
lds
xchg
or
int
mov
aad
push
mov
pop
dec
outsl
sbb
mov
adc
orb
or
lods
aam
lahf
adc
pop
dec
lahf
lret
gs
das
inc
aad
sbb
jo
cmp
adc
or
mov
xchg
out
pop
xor
mov
mov
clc
roll
push
out
cs
lods
push
lcall
pop
jle
fidivl
xor
test
test
dec
rcr
add
push
outsl
adc
mov
lods
push
or
xchg
negb
pusha
mov
mov
xlat
sub
repnz
inc
dec
add
mov
jno
sub
xlat
sub
adc
mulb
push
jmp
ret
cmp
dec
add
mov
dec
out
and
mov
js
ret
cmp
jae
call
dec
jg
sbb
mov
rcrl
or
add
adc
cmp
xchg
mov
stc
mov
and
xor
xor
mulb
ljmp
cmc
pop
or
out
cmpsb
xor
dec
or
push
push
fisubrs
push
jl
lcall
xlat
fwait
mov
xor
mov
dec
mov
mov
xor
jecxz
inc
test
pop
pop
pcmpeqb
test
push
adc
xor
xor
popf
push
xchg
mov
push
pextrw
sbb
enter
fildll
out
stc
mov
stos
das
lret
mov
cmc
mov
stos
mov
ror
nop
jno
xchg
add
xor
pop
mov
lret
xchg
inc
mov
lret
sbb
idiv
stos
xchg
inc
lcall
xor
lea
jl
sub
mov
push
mov
nop
nop
call
jmp
fs
hlt
nop
mov
out
cmp
cmc
add
pop
pop
jmp
ds
or
inc
and
lods
or
pop
data16
cmp
or
enter
xchg
cmp
xcrypt-ecb
cmpsl
lret
adc
int
push
sub
icebp
mov
add
push
aas
jns
push
insb
xor
sub
sub
cmpsb
ja
xor
mov
xchg
dec
int3
fldenv
and
xchg
and
inc
lcall
xchg
in
jnp
insb
dec
sub
or
and
scas
stc
mov
stos
cmp
or
adc
testb
dec
bound
add
xor
fwait
or
dec
adc
lods
sbb
outsb
hlt
loopne
ljmp
fisubrs
mov
lret
lahf
outsl
leave
fidivrs
js
pop
cmp
test
xchg
push
push
mov
inc
int3
xchg
sub
push
aad
pop
or
out
xchg
push
imul
int3
popf
jae
ret
push
repnz
fmuls
jmp
ss
aas
jg
adc
test
lea
pop
push
loope
push
sub
add
in
xchg
test
mov
rcr
pop
mov
dec
mov
fsubs
outsb
test
das
xor
out
push
icebp
subb
dec
add
xor
mov
xchg
dec
mov
mov
inc
sbb
test
inc
fstpl
addl
jno
push
lock
nop
test
pop
mov
mov
push
push
sub
and
cwtl
and
inc
inc
hlt
mov
dec
ss
shrl
clc
push
cmp
push
mov
mov
movsb
in
pop
inc
aas
adc
test
mov
mov
ficompl
xor
in
and
adc
cmp
rcl
mov
test
int3
xchg
lahf
pop
addr16
into
lock
xchg
nop
je
mov
and
and
sub
inc
mov
jns
ss
adc
xorl
cmp
jp
leave
sbb
movsb
and
sbbl
add
mov
push
push
pop
loope
push
mov
cmpsl
out
loopne
hlt
test
xor
outsb
xlat
std
push
in
add
inc
pop
pop
pushf
dec
push
or
xchg
xchg
mov
mov
daa
dec
mov
sbb
movsb
and
jmp
mov
mov
jl
aaa
shrb
rcr
pop
pop
bound
sub
imulb
cmc
xchg
cmp
pop
fstpl
movsl
stc
aad
sbb
jl
int
push
push
add
mov
adc
sbb
inc
imul
push
lds
xchg
xchg
roll
mov
inc
add
xchg
xchg
sub
or
in
imul
add
pop
imul
stos
mov
test
mov
adc
aam
xchg
int
mov
jbe
mov
loope
lea
imul
inc
pop
xchg
mov
push
cmc
rcrw
push
mov
lcall
mov
cld
lcall
nop
daa
mov
mov
jg
jl
outsb
out
xor
mov
ss
out
xlat
sahf
or
popa
inc
mov
aad
test
outsl
sbb
and
sub
mov
cmpsl
pop
dec
std
or
cmp
push
or
sbb
mov
push
mov
inc
aad
je
leave
jne
dec
lds
mov
fnstenv
std
push
push
mov
repnz
repz
sbb
adc
mov
addl
movsl
jnp
add
sbb
adc
int
jge
insb
inc
orb
and
fdivl
mov
push
xor
push
addl
fs
add
xchg
sub
cmp
lea
shll
stc
addr16
loopne
sbbl
mov
adc
movsl
mov
js
mov
cmpsb
gs
stos
lock
std
je
xchg
xchg
mull
mull
add
fcoms
sbb
jl
inc
mov
daa
push
inc
pop
repz
nopl
jb
or
insl
repz
adc
aas
jge
ret
outsb
in
mov
dec
jmp
adc
add
loope
sub
jle
movsb
popa
lods
sub
jl
jecxz
lods
rcrl
mov
test
fildll
lret
inc
pop
or
pop
push
jge
and
ret
cmc
jmp
push
sahf
imul
imul
stos
xor
loop
mov
imul
sbb
lds
push
daa
daa
jno
mov
ret
mov
iret
stos
es
sbb
jbe
xchg
lret
cwtl
jae
mov
aaa
ficoml
pop
add
xchg
add
adcb
clc
mov
ds
idiv
jne
es
mov
lods
xchg
sti
cmpsb
gs
mov
negl
pop
sti
lahf
mov
pusha
arpl
out
jbe
popa
out
sbb
dec
push
cmp
aaa
inc
mov
mov
insl
pop
rep
jge
popf
inc
xchg
loopne
mov
sbbb
jl
mov
cmpsb
mov
jo
mov
rorb
jb
aam
pop
mov
sbbb
into
inc
loop
idivl
jg
mov
mov
das
sbb
leave
push
mov
mov
lahf
cmp
mov
adcl
aas
xchg
mov
inc
xchg
ficomps
testb
lret
in
sahf
test
jae
shl
in
mov
dec
repnz
ret
out
pop
pop
ja
adc
mov
lret
add
add
shll
outsb
ljmp
or
lods
insl
cmp
scas
and
fcompl
jae
jnp
xchg
mov
sbb
xchg
cmp
dec
mov
movsb
js
mov
mov
mov
jns
sbb
fcoms
mov
mov
cmp
dec
stc
cmpsb
jne
xor
fdivl
sub
fsubl
dec
enter
lods
cltd
and
push
pop
shl
xchg
inc
repz
or
hlt
sub
mov
push
xlat
int3
pop
in
sarl
int
pusha
and
pushf
sbb
cmp
mov
in
mov
mov
cld
shrb
lcall
test
dec
sub
mov
xor
cmc
mov
mov
lea
icebp
andl
movsl
adc
hlt
cmc
jmp
es
sub
push
xorb
pop
sub
sbb
int
pop
mov
xchg
shll
outsl
out
push
push
fs
pop
out
pop
lds
xor
test
ljmp
jo
xor
jbe
ljmp
aaa
cltd
aam
sub
out
pop
pop
lds
xchg
stc
pop
mov
mov
push
rcrb
xchg
mov
enter
cmp
lods
repz
outsb
mov
inc
push
subl
hlt
jge
inc
and
or
jmp
xchg
pop
inc
mov
loope
xchg
pushl
inc
fcmovb
je
xor
clc
pop
jecxz
push
scas
pop
dec
jge
pop
dec
mov
lock
jae
outsb
inc
mov
addr16
mov
push
ror
sub
dec
xchg
repnz
jbe
sahf
les
add
sbb
call
xor
out
pop
addr16
cmp
les
add
js
adc
push
bound
inc
jno
adc
rol
mov
dec
lret
and
enter
push
es
sahf
xchg
lret
xchg
push
mov
aam
gs
cmp
adc
or
dec
sbb
out
mov
jno
pusha
inc
lret
in
dec
xlat
fwait
sub
jne
hlt
xor
and
paddusb
ret
xchg
ret
mov
xor
dec
or
jge
loopne
movsb
leave
fadd
pusha
jge
andb
pop
jbe
mov
sub
popa
cltd
mov
sbb
data16
in
and
inc
cmp
xchg
mov
adc
decb
cmpsl
xchg
psubd
shll
jns
push
mov
xor
sahf
dec
sub
or
sbb
cwtl
imul
cmp
lea
js
lcall
jno
movsl
xchg
jbe
fnsave
ret
or
aam
fisttpl
adc
jno
push
jae
inc
pop
xor
pop
test
insl
or
pushl
cld
fisubrs
ds
xchg
in
adcl
add
lods
stos
cwtl
and
insb
mov
mov
xchg
mov
enter
xchg
cmp
dec
out
mov
test
adc
outsb
leave
xor
sbb
add
out
jns
gs
inc
or
add
sbb
inc
jl
icebp
push
imul
jg
push
xchg
add
xor
cmp
mov
mov
lds
ret
out
rclb
pop
pop
jmp
jge
sbb
sub
les
lret
mov
adc
sti
mov
xchg
arpl
jg
ds
cwtl
push
cmp
jnp
test
fiadds
lock
shll
jecxz
pop
xorl
mov
sbb
pop
aaa
sbb
dec
pushf
jbe
les
pop
outsb
mov
jge
xorb
xchg
add
call
adc
and
xor
and
xchg
test
jge
and
mov
data16
lea
icebp
xor
inc
out
and
aas
lret
xchg
pop
pusha
repnz
cltd
pop
mov
mov
push
pop
call
inc
adc
inc
imul
mov
or
hlt
cmp
xchg
inc
add
mov
add
xchg
sbb
adc
stc
ret
cli
jecxz
xchg
stc
or
pop
cmp
lods
jmp
cmpsb
out
pop
xor
mov
pop
in
add
mov
arpl
dec
fsubl
jp
cmpsb
sub
add
pop
jl
cmp
lock
daa
add
cmpsl
push
mov
enter
add
and
stos
jne
and
paddusw
or
xorb
loope
loopne
jl
mov
jnp
xlat
jmp
mov
adc
mov
pop
sar
mov
jo
pusha
sub
lea
mov
xor
jnp
jecxz
mov
push
push
xchg
lret
push
sbb
in
sub
cmpsb
dec
lock
cltd
in
inc
in
mul
dec
sbb
repz
add
dec
xchg
lahf
imul
fisubs
jle
cmpsb
push
inc
mov
enter
aam
xchg
pop
mov
rcr
push
push
hlt
aad
jl
daa
stc
aaa
dec
shlb
or
cmp
shlb
std
bnd
adc
stos
mov
imul
icebp
jmp
das
mov
mov
fucompp
lods
inc
pop
repnz
insb
add
inc
test
imul
inc
fisubrs
sbb
int3
fbstp
lods
fsubrs
sbb
xchg
test
clc
mov
std
sbb
ja
inc
mov
xchg
inc
fwait
mov
xchg
pusha
xor
imul
adc
ret
call
add
or
mov
inc
and
shrl
mov
cmp
in
pusha
push
cltd
aad
dec
insl
and
je
and
sarb
push
std
push
inc
xorl
insl
repz
xor
fucom
fcomps
push
call
push
in
fisubs
mov
ss
fsub
rorl
mov
push
in
inc
outsl
pusha
in
repnz
arpl
push
aaa
dec
das
jecxz
sbb
cwtl
ja
or
jecxz
jae
pop
outsb
out
ljmp
lret
cmp
lock
inc
cld
push
cmc
inc
adc
adc
ljmp
lds
decl
cwtl
xor
movsb
adc
cmpsl
jbe
inc
jne
idivb
fs
lret
rcrl
mov
in
cmp
shr
les
add
movsl
ret
mov
and
inc
xchg
fs
jns
test
adc
cmp
and
daa
adc
xchg
jmp
mov
sahf
sub
cltd
out
ljmp
addr16
lods
add
fcompl
cld
fwait
adc
jmp
fcomp
fucomip
push
mov
loop
fnsave
or
jae
jle
mov
enterw
out
ja
das
pop
int
dec
jno
push
pop
hlt
inc
rorb
xchg
sbb
clc
sarb
xor
cmp
fwait
stos
adc
dec
mov
cwtl
mov
inc
loop
fstl
mov
cs
jl
or
mov
jg
dec
mov
pusha
mov
js
mov
stos
in
shr
inc
lea
push
xchg
jl
push
sbb
or
or
mov
xchg
sbb
and
push
stc
packssdw
imul
dec
xchg
arpl
pop
sti
and
cmp
ficompl
aaa
test
fmul
and
xchg
insl
shl
adc
or
add
adc
enter
xchg
xchg
and
mov
andb
loop
iret
out
int
mov
mov
loopne
rorl
fcmove
enter
clc
push
mov
test
jle
inc
sbb
or
cmpsb
rorl
das
push
mov
cmp
inc
clc
rcrb
fisubs
outsl
push
inc
es
es
jge
subb
jmp
push
addr16
loope
fld
cmp
nop
push
mov
push
or
repz
adc
cmp
sub
mov
rcrb
sbb
or
fwait
xchg
sbb
call
mov
mov
jge
fs
jbe
sbbl
nop
ljmp
mov
int3
clc
stos
repz
mov
lcall
adc
cmpsb
scas
cmpsl
out
cmp
insb
xor
js
mov
xchg
fdivl
movsb
movsb
outsb
sbb
lods
push
and
cmc
mov
dec
out
ffree
inc
jl
addb
sbb
add
jp
data16
mov
add
xchg
enter
outsb
iret
sub
js
inc
fimuls
test
out
out
inc
addb
lea
xchg
shl
movsl
int
es
jle
mov
pop
push
add
inc
dec
rol
xor
add
addr16
fs
jns
out
adc
pop
mov
lret
mov
int3
xor
cltd
in
ss
imul
jo
jg
inc
ds
out
xlat
int
xor
or
cld
ja
popa
mov
enter
jecxz
loopne
push
cmp
pop
xchg
lds
jle
push
cmp
jne
int3
jae
ljmp
movsb
lods
sub
je
sahf
push
scas
xor
movsl
imul
call
push
jno
mov
ret
test
aas
bound
mov
dec
stos
cmc
imul
ret
stos
fisubs
arpl
enter
jge
cmpb
jg
sub
roll
cmpsb
movsb
inc
insb
sub
arpl
imul
fucomp
mov
xchg
lea
inc
out
in
jecxz
pop
loope
in
pop
dec
mov
jo
jmp
daa
inc
cmp
mov
rcrb
push
dec
mov
cmc
cmc
int
dec
stos
or
mov
subl
or
aas
mov
sbb
rorl
inc
ljmp
jbe
push
aaa
mov
call
adc
inc
xor
inc
cmp
push
sti
lds
sbb
stos
lret
adc
popa
jne
inc
in
rcr
in
mov
orb
adc
fidivs
repz
clc
push
adc
inc
cmpsb
xor
into
sub
sbb
das
fwait
xchg
push
repnz
dec
sti
repz
adc
cmpsb
pop
cmp
jle
sbb
xor
mov
call
dec
or
dec
nop
mov
ret
jno
mov
jg
out
inc
mov
pop
add
inc
cmp
fiadds
dec
cmp
ds
out
xor
adc
pop
sub
cmpsb
dec
cmp
addb
push
scas
imul
das
movsb
jb
adc
enter
sbb
iret
es
cmp
sbbb
je
fs
or
mov
in
scas
and
aas
and
pop
push
out
xchg
jmp
cmp
int
insb
mov
rorb
xor
mov
jge
pop
pop
fldt
mov
and
or
lods
sbb
fwait
roll
and
js
loopne
cmp
pop
sbb
rorl
cmp
addr16
push
ja
cwtl
jne
xchg
push
sub
movsb
lret
jns
push
jge
sbb
inc
js
cmp
add
dec
dec
lcall
pop
daa
in
jg
push
jo
jle
pop
dec
mov
fnstenv
cli
addb
pop
xor
insl
jmp
outsb
pop
iret
fs
or
shll
ret
dec
aaa
pop
xchg
xor
lcall
adc
ljmp
leave
xor
nop
stos
sti
mov
dec
sub
add
in
lret
data16
rolb
adc
pop
jmp
ds
test
rcl
and
lea
jbe
mulb
test
xor
call
sbb
lods
insl
cmp
fiadds
ja
fucomi
movq
cmp
out
sub
sub
lahf
inc
aad
pop
std
cmpsl
repz
mov
es
adc
outsb
add
cmpsl
imul
andl
lret
mov
dec
lcall
hlt
lahf
div
xchg
popa
mov
xchg
sbb
inc
and
scas
adc
fcomps
cmc
mov
loopne
data16
ss
mov
xor
pop
ljmp
push
adcb
jb
fwait
jle
mov
push
es
adc
xchg
imul
scas
adc
sti
notb
mov
sub
cmc
out
adc
add
mov
sahf
lods
add
adc
mov
cmpsb
cmp
mov
and
test
mov
dec
inc
scas
into
mov
pushf
xchg
push
jo
jp
pop
push
jmp
xchg
mov
ffreep
je
add
in
scas
nop
sbb
dec
aam
xchg
mov
lahf
xchg
xor
insb
push
fwait
push
mov
mov
ss
ficomps
les
mov
mov
inc
mov
imul
dec
and
lods
push
and
lea
sub
lea
and
cmpsl
aas
inc
movsl
xchg
cmp
cmpsl
mov
dec
popf
outsl
aad
aad
sti
mov
cld
mov
push
pop
hlt
outsl
sub
mov
mov
gs
jle
pslld
rcll
mov
outsl
addr16
sbb
call
push
jno
sub
outsl
push
push
dec
push
scas
add
xor
into
fs
pusha
inc
into
fildll
jae
pop
cmp
cmpsb
or
cmpsl
inc
fsubl
jmp
or
flds
fsubrl
push
inc
mov
aad
adcl
xchg
inc
fisubl
sbb
bound
jnp
movsl
shrl
ror
aaa
xor
mov
insl
xchg
push
mov
fiaddl
outsb
lds
pop
pushf
xor
movsb
into
add
in
mov
js
dec
iret
dec
push
or
call
out
pop
sbb
and
lods
movsb
inc
repnz
mov
bound
dec
jno
fldenv
fisttpll
dec
push
test
add
push
aas
sahf
enter
iret
stos
sahf
xchg
jns
cmp
sub
aaa
les
cmp
mov
inc
dec
sti
lea
push
imul
dec
add
pop
fmul
push
imul
cwtl
mov
ss
inc
into
mov
sbb
mov
mov
mov
mov
scas
mov
jp
xchg
lea
add
loop
out
or
insb
cltd
lods
mov
daa
in
mov
icebp
jbe
popa
jae
mov
mov
fcmove
js
xchg
adc
mov
pop
into
push
jp
push
fbstp
pop
ret
adc
mov
sti
daa
mov
fcompl
adc
sahf
push
in
pop
cli
repz
sbb
xchg
test
leave
repnz
mov
dec
gs
scas
enter
add
push
leave
pop
lret
cmp
push
push
fs
stc
push
imul
repnz
add
adc
add
in
stos
int3
leave
push
cmp
dec
inc
or
xchg
imul
shll
push
and
mov
jbe
mov
stos
hlt
out
rcl
call
fnstsw
lods
sub
imul
stc
mov
sub
out
mov
mov
loop
sarl
leave
xchg
push
xchg
push
push
push
adc
icebp
cmpsb
jl
cld
insb
cwtl
mov
insl
pushf
insb
arpl
roll
xchg
sub
push
pop
ret
pop
jp
js
dec
dec
mov
and
cmp
xor
xorl
outsb
mov
adc
rcr
xchg
add
cltd
adc
sub
fisubrl
push
je
and
lock
inc
mov
sahf
movsb
dec
xchg
inc
ljmp
jnp
jp
cs
aam
dec
xchg
jecxz
test
clc
mov
mov
xchg
out
xor
mov
loop
and
fs
mov
test
arpl
adcl
or
fcoml
arpl
pop
cwtl
iret
outsb
stos
mov
mov
push
add
mov
out
cmp
mul
les
and
scas
setne
outsb
addr16
and
xor
adc
inc
sub
adc
cltd
add
cs
outsl
jo
mov
inc
addr16
xor
push
inc
pop
sbb
add
scas
aaa
shrl
push
cltd
ljmp
lahf
test
nop
fwait
xchg
cmp
mov
push
lods
sub
dec
enter
pop
push
loopne
fldcw
xchg
popf
push
sbb
xchg
scas
push
sub
stos
sbb
dec
shlb
addr16
push
test
mov
insb
bound
and
sub
xor
mov
mov
icebp
rcl
add
cmp
inc
mov
jbe
fucomi
cmp
jne
adc
cmc
sub
mov
ret
dec
xor
negb
adc
adc
or
lds
aas
dec
sbb
push
jb
leave
das
mov
dec
shlb
inc
pop
xlat
sti
cmpsb
xchg
and
and
xor
pop
xchg
or
mov
mov
pushf
inc
cmp
adc
lahf
int
sub
sbb
inc
fisttpl
inc
cld
jno
adc
dec
mov
testb
sub
data16
mov
scas
push
pop
cmp
call
lea
add
inc
mov
inc
data16
lds
test
cmpsb
add
adc
xchg
inc
mov
or
dec
adc
std
or
and
out
inc
jg
mov
cltd
mov
jle
shrl
and
in
pop
orl
dec
mov
dec
inc
js
or
or
mov
sub
icebp
fdivs
aaa
outsl
mov
test
pop
cltd
loope
mov
cmp
in
inc
test
rcl
movsb
lock
daa
mov
arpl
sbb
sub
mov
int
rorl
jae
frstor
cmp
insl
sarl
shl
fldenv
push
push
jecxz
mov
jle
subl
push
ljmp
push
fdivrl
push
cmp
shl
mov
mov
or
cmp
lods
mov
addr16
mov
and
xchg
mov
pop
adc
mov
lret
pusha
cltd
inc
loope
sub
add
mov
cmp
mov
pop
jmp
outsl
int
xchg
xor
push
xor
dec
mov
mov
mov
jno
sub
movsb
loope
outsl
push
int3
and
movsb
mov
inc
sub
je
repz
push
jnp
inc
adc
pusha
popf
add
movsl
cmp
or
test
push
decb
daa
adc
dec
aam
xor
shrb
lret
cmpsb
push
cmp
notl
jno
sti
xor
sub
lcall
push
movsb
aaa
in
lods
pop
jg
push
out
inc
dec
ret
or
and
std
hlt
or
jnp
and
aaa
pop
xor
andb
into
ja
inc
cmpsl
and
xor
enter
or
xor
jno
xor
or
sahf
add
xor
movsb
mov
dec
in
inc
insl
into
mov
push
mov
push
les
fnsave
fs
imul
mov
repz
mov
mov
andl
mov
xor
fsubr
ljmp
hlt
fldl
jb
dec
mov
or
std
test
clc
sbb
and
jmp
scas
pusha
in
jns
call
lea
out
or
or
adc
inc
lock
push
dec
mov
sbb
jl
aas
cmp
add
mov
jecxz
imul
movsw
out
pushf
sbb
sbb
jl
cpuid
test
int3
dec
orl
mov
pop
out
mov
jae
aas
or
pop
aad
pop
inc
push
pop
mov
sbb
fildl
lcall
and
inc
mov
test
push
sub
inc
xchg
lds
pusha
mov
movsl
cmpl
xorl
in
push
insb
sbbl
stos
rol
xchg
movsl
xor
fld
rclb
mov
icebp
fsubrl
xor
cmp
ja
mov
cmc
mov
inc
push
mov
sub
pop
sub
fisttps
jge
jnp
jle
mov
pop
ds
or
lahf
dec
fcoml
xor
jmp
cltd
mov
cltd
adc
cmpsl
inc
into
push
rcrb
fcoms
mov
je
xchg
dec
hlt
fwait
aaa
cmp
pop
leave
stos
and
pop
or
dec
lea
inc
mov
mov
cld
push
cwtl
jp
pop
mov
dec
xlat
nop
lret
cmp
xor
adc
sbb
jmp
sub
mov
adc
sbb
sarb
xchg
in
decl
pop
and
addl
dec
loop
lcall
sub
fimull
push
jecxz
push
xchg
int
addb
cmpl
cltd
push
cld
push
test
pop
decb
push
movsb
pop
loopne
imul
call
xor
loope
loop
in
adc
push
and
and
inc
push
test
imul
push
dec
cmp
imul
adc
push
jle
xor
mov
cwtl
pop
jno
mov
adc
pushf
adc
arpl
jbe
lods
fmuls
sahf
xchg
push
dec
cmp
cmp
mov
xchg
inc
pusha
sbb
jno
mov
in
push
jmp
in
test
xchg
push
in
sub
cmp
rclb
jge,pt
push
inc
pop
stos
sti
mov
cmp
jl
add
test
cs
cs
out
mov
sbb
push
jae
jno
cmpsl
lret
orb
arpl
arpl
test
mov
xchg
call
hlt
hlt
call
popf
inc
cs
jo
pop
and
inc
xchg
imulb
test
add
or
xor
fsubrl
inc
ds
xlat
icebp
and
ret
in
ds
rcr
add
fwait
lret
repnz
dec
add
std
jmp
jle
outsl
or
loop
push
xchg
inc
ds
dec
roll
adc
sub
push
in
dec
adc
or
dec
pop
lahf
test
sub
or
ret
mov
insb
push
stc
subl
cmp
dec
inc
mov
jo
mov
cmp
and
dec
addb
fwait
out
add
iret
repz
loope
ljmp
cmp
aas
mov
adc
movsb
mov
add
es
stos
jne
sub
cwtl
cli
cmp
sbb
ret
dec
movsl
fwait
push
or
and
movsl
sub
ss
xor
insl
xor
dec
sub
and
xchg
in
sbb
in
cmp
loope
imul
imul
gs
inc
lcall
loope
mov
mov
mov
or
movl
repnz
gs
xor
loopne
mov
push
mov
sub
xor
adc
inc
ljmp
jmp
push
rcrl
lods
jno
mov
inc
dec
jne
cmpsb
mov
mov
xor
enter
push
push
dec
xchg
faddl
inc
outsl
scas
pop
jmp
scas
adc
int3
mov
pop
jae
mov
mov
dec
pop
xchg
test
xchg
popf
aad
lahf
xor
mov
jnp
imul
jb
mov
jo
cwtl
jle
push
cmpl
andl
out
xorb
xchg
lds
add
adcb
cmp
mov
push
test
fiaddl
add
mov
mov
xor
jle
into
repnz
adc
in
in
imul
fbstp
sbb
shlb
stos
nop
les
or
mov
sub
shll
in
or
les
ss
adc
mov
fs
cmp
lea
jg
mov
out
fildll
push
jb
out
aad
cmpsl
jo
jno
inc
mov
cmpsl
ror
mov
rolb
mov
sbb
aam
lcall
jb
mov
in
inc
xchg
sbbl
pop
ds
stos
sbb
iret
loopne
lods
adc
lods
hlt
mov
jno
dec
popa
aas
mov
cmpsl
sbb
std
scas
pop
or
jp
add
push
repz
imul
push
lret
aad
jg
loop
int3
xchg
pushf
and
das
jmp
cmp
xor
cmp
repnz
iret
and
adc
push
and
inc
xlat
jg
inc
pusha
mov
ror
mov
push
mov
inc
call
int3
stc
push
mov
out
lahf
dec
ja
out
les
lock
test
xchg
pop
test
out
sub
add
pop
cltd
les
jle
test
hlt
mov
push
lret
lods
popa
je
fldl2t
cmpsb
mov
test
scas
mov
pop
mov
pop
scas
jne
mov
aas
mov
xchg
shrl
lods
test
mov
scas
imul
push
or
xchg
adc
nop
mov
mov
cmp
in
cs
icebp
ret
fcompl
pop
pop
arpl
jae
mov
sahf
and
rcrl
sbb
cmp
and
pop
and
mov
push
push
fnstsw
and
adc
cmc
jne
les
push
movsl
jle
mov
negb
sahf
cmp
sub
add
fisttpll
push
sub
pop
sub
inc
ret
outsl
outsl
mov
mov
or
popa
fldl
dec
test
sbbb
xor
arpl
mov
icebp
xchg
rolb
cli
rclb
popf
mov
and
inc
pop
adc
or
popa
inc
cwtl
jl
sub
dec
rclb
jno
mov
push
cmp
mov
pop
out
orb
pop
fisttps
xchg
jg
push
rcll
scas
fwait
ss
jge
es
and
sti
ja
cld
mov
pusha
adc
lret
repnz
inc
and
mov
sub
xchg
in
mov
or
leave
daa
fstpl
das
movsb
mov
in
add
cwtl
xor
dec
insb
xchg
xor
adc
or
adc
rorl
mov
mov
mov
xchg
and
jb
push
insl
sub
in
mov
push
jne
mov
cmp
jns
push
pusha
sub
aam
inc
adc
mov
outsl
push
push
cs
sbb
adc
mov
mov
adc
fisubs
cmp
sbb
cwtl
adc
in
sarb
es
or
or
sbb
icebp
push
jnp
mov
or
aad
push
inc
mov
test
xor
jbe
rorl
cmc
bswap
mov
mov
sbb
xor
cmpsb
cmp
out
roll
iret
xchg
out
xchg
push
push
mov
and
call
mov
adc
push
xor
in
push
and
mov
mov
pop
in
gs
and
sub
mov
imul
scas
mov
pop
fmull
push
lods
xlat
frstor
xor
sub
sub
mov
in
mov
pop
push
les
or
imul
push
and
sbb
in
enter
addr16
inc
cmpsl
and
sbb
out
jne
imul
xor
dec
out
mov
outsb
int3
std
movsl
inc
xor
inc
push
push
lret
les
sahf
and
shll
loope
jecxz
cmpsl
pop
sarb
mov
xor
adc
jge
mov
add
sub
jbe
sub
outsb
ljmp
cmp
add
es
shrb
or
jmp
cmp
lods
out
adc
shlb
add
mov
adcl
aas
jg
ret
cs
stc
into
inc
cwtl
lret
rol
cs
sti
fmulp
jbe
cld
cmp
cmp
inc
push
loopne
out
cmp
loop
mov
outsl
in
dec
or
xor
jno
cmp
hlt
or
lods
sub
rcrl
pop
js
xor
cltd
xor
cmp
adc
xchg
test
iret
loopne
jp
push
sbb
pop
and
ud1
sub
mov
lahf
pop
sbb
mov
ja
mov
fcomp
xchg
mov
in
lea
in
sbb
push
add
ds
movsl
add
lahf
rorl
icebp
insl
add
fdivrl
sub
in
jns
add
out
cmc
cld
mov
cli
or
negl
fbstp
push
decb
clc
inc
lcall
mov
sbb
inc
outsl
lock
cmp
sbb
mov
mov
sbbb
mov
sbb
mov
push
mov
push
xor
mov
je
add
sub
stos
mov
xor
test
aaa
pop
sahf
lret
movsb
int3
popa
lock
cmpsl
arpl
cmc
cmp
mov
imul
push
arpl
mov
mull
jg
cmpsl
mov
subb
push
inc
into
cli
mov
test
push
fsubrs
cmpsb
push
in
mov
popa
cmpsl
push
cmp
ljmp
mov
sbb
mov
in
shrb
lods
dec
sub
sbb
lea
fcmovb
xchg
pusha
test
into
scas
inc
push
enter
ret
in
and
xchg
sbb
adc
push
outsl
pop
sbb
jl
insb
adc
nop
xchg
cs
xchg
call
mov
jmp
jge
xor
mov
push
rcrb
or
dec
mov
aad
jnp
add
stos
scas
popf
mov
and
pop
das
cmpsb
jl
sub
scas
mov
push
lock
paddd
mov
or
insb
mov
aam
gs
test
or
sbb
xchg
cmp
mov
inc
lret
sub
out
jecxz
cld
push
movsl
mov
mov
mov
mov
std
push
mov
test
in
inc
aam
pop
in
cmp
xchg
test
add
inc
sub
mov
dec
jle
jo
int3
int
mov
push
push
sub
sahf
popf
test
pop
mov
std
stos
sbb
push
dec
stc
jno
mov
adc
imul
adc
stc
sti
cwtl
test
cmpsb
icebp
push
adc
sub
mov
or
or
add
mov
mov
sub
pop
fistpll
xor
fsts
xchg
xchg
rol
or
int
xchg
in
cmp
test
jecxz
sbb
or
xchg
mov
jne
and
sbb
lock
ficoml
push
xchg
dec
in
ss
jno
loop
and
imul
in
xor
sbb
scas
bound
push
mov
dec
and
stc
ja
into
jb
push
pop
adc
dec
jl
int3
jmp
jmp
sahf
lahf
scas
das
xor
clc
xor
stos
nop
and
mov
repz
xor
mov
push
stc
mov
leave
out
scas
add
jmp
sub
das
not
rolb
sub
mov
pop
sbb
xchg
lock
insb
jmp
loope
jno
push
jne
cmp
and
ja
xchg
dec
inc
jp
push
ljmp
mov
out
pop
pop
jge
mov
adc
pop
stos
pop
push
mov
or
sarl
addr16
push
daa
ljmp
xchg
out
adcl
imul
cmp
jmp
aaa
dec
pop
iret
inc
xchg
arpl
mov
adc
out
jge
inc
test
pop
cmp
and
jl
ret
mov
push
xchg
pop
xlat
aam
adcl
in
adc
inc
stos
inc
and
sub
and
lret
shll
adc
mov
lcall
aas
mov
inc
ds
xchg
adc
pop
mov
xor
js
int3
test
roll
push
fbld
pop
xor
sbb
mov
lock
and
mulb
mov
pop
sbb
shll
pop
jo
inc
lahf
xor
outsb
jae
shrl
dec
loope
ret
in
leave
pop
in
fprem
out
push
jb
loope
sbb
jle
push
sbb
dec
sbb
add
mov
mov
in
cmp
xor
cmp
mov
jae
jmp
lahf
stc
mov
ret
mov
xchg
inc
pop
adc
fstpt
lock
or
jns
jne
inc
cld
pusha
lahf
cli
or
fldt
loope
outsl
push
aad
jl
bswap
stc
sbb
adc
dec
cmp
in
mov
or
push
jp
push
mov
or
jle
add
fisttps
xor
ds
inc
and
xchg
xchg
ret
loopne
or
xchg
icebp
mov
and
pop
in
sub
add
into
ss
out
fisubs
hlt
ret
add
in
push
jmp
or
mov
popa
loopne
out
cmpsl
jo
lea
inc
and
in
inc
push
fistpll
jo
fistpll
mov
jg
cmp
in
das
aas
mov
clc
les
int3
or
add
mov
jbe
lcall
adc
add
ljmp
repnz
das
and
daa
ficoms
push
daa
test
or
out
fwait
inc
mov
shr
and
nop
jmp
mov
jnp
shrb
cmp
xor
pop
jns
jge
jl
xchg
sub
aam
push
push
and
add
push
pavgw
push
into
push
mov
cltd
cs
pop
jmp
ret
movsl
jle
xchg
lcall
outsb
popf
test
jecxz
cs
stc
stc
enter
adc
daa
cwtl
mov
mov
sarl
arpl
sbb
xor
jp
les
mov
mov
adc
insb
adc
js
xchg
push
pop
test
scas
fisubs
je
mov
jg
push
xchg
mov
rorl
cmp
popa
pop
dec
mov
push
push
scas
andb
cmp
xor
jbe
inc
xlat
dec
add
or
adc
scas
cmp
icebp
out
cmp
pop
mov
push
xor
cli
xlat
sub
cmp
inc
sbb
test
movsb
mov
pop
in
pop
pop
lock
out
mov
sbb
out
lods
pushw
les
push
pop
test
xor
cmp
xor
lods
fiaddl
jbe
imul
andl
arpl
xor
je
sub
int3
mov
sahf
loopne
les
adc
shl
dec
into
outsb
insb
ja
icebp
push
and
xor
push
mov
add
push
jl
insl
mov
in
fs
add
imul
lcall
scas
cmp
sbb
inc
push
jo
out
pop
push
ss
daa
imul
cld
or
fmull
mov
sub
je
mov
mov
stc
pop
outsl
or
push
fisubl
outsl
addl
js
cltd
cmpsl
sbb
cmp
push
sbb
sahf
and
std
sub
fistpll
jno
add
xchg
mov
add
and
cwtl
pop
andb
insb
sub
mov
mov
fdivs
ficoml
jbe
mov
aaa
clc
testb
xorl
lds
sub
neg
sbb
pop
jo
shrb
inc
loopne
gs
lods
andl
mov
jge
push
dec
test
rcrb
dec
adc
mov
ret
arpl
pop
pusha
or
add
xor
pop
loopne
pusha
gs
mov
out
cmpsl
out
mov
pop
mov
mov
mov
mov
xor
hlt
repz
sub
cmp
stos
pop
imulb
xor
gs
inc
xchg
lods
fwait
out
insl
cmp
rclb
fiadds
scas
in
inc
jne
in
inc
jne
xchg
sub
and
push
mov
jbe
test
mov
les
adc
add
pop
fdivl
cmp
icebp
ja
test
sti
leave
jge
xchg
inc
mov
and
jo
or
fcmove
imul
dec
icebp
mov
mov
push
iret
scas
and
mov
sbb
dec
out
lock
jle
push
addb
mov
sbb
lods
outsl
inc
or
inc
scas
dec
and
aaa
dec
xor
dec
int
sbb
sub
mov
outsb
rclb
mov
test
lock
daa
sub
mov
loopne
test
inc
jl
test
pop
cmp
sub
pop
sbbb
and
mov
jle
sahf
mov
xor
mov
fdiv
pop
push
scas
loop
and
es
sar
cmp
lret
adc
jnp
sbb
loopne
out
pop
and
xchg
fmul
ficoml
rolb
call
in
and
or
jae
and
adc
mov
xor
flds
cli
sbb
sbb
icebp
sub
pop
je
fnstsw
insl
mov
jle
or
pop
and
xor
fistps
clc
adc
mov
push
and
sbb
xchg
fs
dec
and
iret
sub
mov
in
rcll
cmp
jno
xchg
mov
dec
ds
sub
sub
out
loope
add
pop
xchg
fsubs
ljmp
xchg
aad
cmp
pop
cltd
or
pop
rcr
mov
sbb
pusha
add
sbb
push
mov
or
mov
xor
cltd
cwtl
aaa
xor
stc
sahf
mov
dec
mov
loopne
dec
xchg
std
outsb
sti
or
pusha
xchg
inc
rorb
pop
pusha
mov
int3
aas
scas
xchg
std
aam
xchg
out
in
adc
cmpsl
push
lret
fwait
push
movsb
mov
lock
roll
add
add
loope
add
lea
enter
pop
daa
dec
mov
lds
dec
mov
jno
sub
add
and
out
xchg
jmp
and
ret
outsb
mov
out
or
mov
jge
and
xor
hlt
cmp
push
inc
scas
jae
movsl
dec
outsb
push
outsl
or
out
pop
ret
imul
lret
inc
dec
add
shlb
jp
cmp
cmp
pop
mov
push
sbb
rcl
adc
testl
xchg
mov
xchg
xchg
xchg
enter
repnz
pop
push
ret
xlat
shrb
movsb
outsl
adc
jle
fiaddl
roll
and
imul
pop
movsl
cmp
add
or
fdivrl
fisubs
icebp
pop
loope
sbb
stos
roll
pop
dec
xchg
mov
add
cli
lea
ret
pushf
pop
push
stos
mov
add
jmp
cmp
push
mov
test
pop
jmp
mov
fwait
and
xchg
lcall
cmp
adc
mov
xor
aad
push
adc
jecxz
and
out
scas
movsl
jge
mov
leave
dec
mov
jle
mov
adc
shll
jb
add
inc
hlt
enter
jmp
es
mov
jmp
stos
pop
imul
lods
sbb
lahf
sahf
in
insb
push
lcall
inc
xor
cmpsb
xor
sub
sbb
push
push
stc
nop
mov
aad
jbe
push
lea
loope
out
into
movl
int
dec
insb
cmp
notl
push
pop
lret
sub
subb
mov
xorl
dec
push
mov
scas
in
sbb
popa
in
leave
adc
push
jne
mov
outsb
and
aaa
pop
mov
pop
xchg
adc
es
pop
jmp
pop
clc
xor
call
cmp
sub
or
aad
cmp
hlt
jg
xchg
out
ret
lods
aas
push
pop
add
cmovae
outsb
loopne
popa
fwait
push
jecxz
sti
sub
adc
mov
inc
call
lods
inc
push
shlb
idivb
in
push
mov
dec
sbb
cmpsl
test
xchg
bound
xchg
xchg
sub
xchg
mov
stos
in
fisubrl
push
push
mov
mov
jl
push
xchg
push
loope
mov
loop
xor
cmp
push
push
push
fsubrl
mov
sub
cmpsl
decl
xchg
in
push
pop
jl
dec
jmp
xor
int3
test
jne
sbb
or
movb
gs
in
fisubrl
xchg
stos
fsubr
dec
pop
mov
ret
adc
and
add
and
mul
lds
mov
mov
push
imul
es
data16
adcb
mov
or
dec
testb
push
int3
push
pcmpgtw
jb
cmp
sbb
pop
xchg
jbe
sbb
fiadds
dec
data16
and
push
and
xchg
jle
dec
push
jnp
insl
sub
dec
jo
pop
push
repz
aas
test
sub
jp
inc
push
lock
data16
push
insl
push
int3
pop
mov
mov
lock
cmovle
dec
rcr
dec
xchg
dec
adc
out
mov
leave
adc
pop
inc
sbb
aad
repnz
je
lret
push
shrb
lret
pusha
cmp
inc
xor
icebp
mov
and
adc
movl
cmp
cmp
iret
pop
mov
mov
fwait
pop
xchg
push
sbb
sub
in
xchg
jg
add
lods
std
imul
dec
adc
call
testl
aas
outsb
pop
enter
fbstp
clc
int
out
rorb
es
ds
push
or
sbb
daa
insl
cmpsb
and
outsb
ds
int
fs
popf
out
inc
testl
push
cltd
nop
pop
sub
pop
mov
and
fwait
insb
fnstenv
std
and
aad
call
push
inc
clc
jnp
pop
inc
inc
int3
pop
add
ret
insl
inc
cmp
lret
repnz
cmc
faddl
into
mov
pop
and
xchg
xchg
daa
fsubl
xchg
pop
add
lahf
adc
sbb
jl
ja
fwait
mov
mov
xchg
sub
adc
pop
shll
in
mov
dec
test
cli
mov
inc
dec
mov
imul
or
xor
add
inc
lods
lret
adc
cmp
int
movsb
test
fs
inc
popf
jbe
add
xor
fmull
insb
mov
shlb
daa
jp
add
shrb
in
test
sbb
push
mov
xchg
movsb
sub
scas
arpl
adc
lret
add
sbb
mov
mov
rcr
add
xor
mov
fcmovnbe
enter
repnz
mov
sub
rolb
lret
enter
mov
mov
imul
cmp
jecxz
xchg
mov
push
mov
inc
test
dec
test
dec
loopne
jae
pop
sub
adc
pop
lock
push
sbb
cmpsb
dec
gs
out
cli
and
flds
cmp
adc
push
mov
jecxz
dec
push
and
inc
je
fwait
dec
sub
loop
and
jne
dec
movsl
fwait
sbb
pop
add
xor
mov
sub
sbb
arpl
in
stc
jge
sbb
andb
bound
jmp
xchg
icebp
pop
out
inc
mov
mull
xor
dec
cwtl
jns
cltd
mov
or
cmp
pop
call
sar
adc
lds
adc
and
jne
sbb
or
sub
bnd
adcb
inc
loopne
jae
adc
rcrl
adc
sahf
cmpsl
dec
rcr
popa
mov
imull
add
cmc
in
testl
fxtract
push
push
sbb
test
push
mov
scas
rcrl
and
test
adc
add
jae
daa
dec
push
insl
loopne
and
jle
push
vpunpcklbw
inc
stos
xor
arpl
xor
jno
ljmp
jle
jns
mov
xchg
sti
into
jecxz
in
fdivs
pop
fidivs
push
test
inc
pop
mov
and
dec
push
inc
xchg
repnz
mov
sub
scas
loop
fdivl
outsl
push
dec
imul
jo
jg
rorl
ja
fneni(8087
je
cmpsl
icebp
fnsave
xchg
inc
dec
nop
stos
in
lcall
xchg
daa
scas
and
mov
and
psubd
fbstp
or
rcrb
dec
ljmp
pop
xlat
jmp
push
aas
xor
sub
pop
adc
aas
stos
mov
adcb
repz
enter
lea
inc
lds
jge
and
cmp
and
jb
lods
int
adc
xchg
xchg
push
jp
sahf
push
jne
mov
push
das
cmp
sub
adc
cmp
mov
pop
sub
and
xchg
pop
and
push
popf
daa
adc
xchg
mov
mov
cli
inc
ret
fs
add
xchg
test
movsb
pop
test
xor
jo
dec
add
fisubrs
dec
out
mov
add
xchg
shlb
xor
in
lcall
jecxz
imul
add
test
mov
or
jge
popa
xor
lds
mov
dec
inc
sbb
das
outsb
lcall
iret
adc
add
out
notb
and
sub
scas
outsl
subl
push
js
xor
ja
cmpsb
rclb
ds
sub
push
dec
mov
daa
jo
les
rolb
mov
push
sub
mov
ljmp
add
negb
jmp
addr16
dec
lods
pop
cwtl
shll
pop
jge
mov
insl
sbb
lcall
sbb
mov
jb
and
adc
dec
les
les
sub
mov
nop
dec
out
fistpll
fstpl
push
out
or
dec
push
add
cmp
out
cmp
les
jge
aad
pop
push
pushf
cmp
add
jbe
mov
xchg
cmpsl
adc
mov
iret
sti
ret
shrb
fildll
mov
sbb
mov
pop
xchg
mov
fnsave
sahf
loopne
ret
push
xor
out
mov
add
jns
xchg
int
jge
fyl2x
jg
adc
and
mov
push
push
push
lret
adc
push
push
popf
push
lea
dec
push
push
sbb
cmp
data16
cmp
adc
dec
icebp
setne
frstor
sub
jle
cmp
shrl
lea
call
mov
sub
jno
ret
mov
mov
loopne
hlt
fidivrl
xchg
pop
jmp
popf
pusha
bt
and
mov
mov
xchg
xlat
mov
popa
jns
clc
inc
fstpl
and
movsb
xor
dec
repnz
sub
push
lret
push
mov
and
jnp
outsl
adc
xlat
mov
mov
data16
into
xor
sbb
push
xor
jae
bound
adc
sub
mov
out
mov
xchg
sbb
mov
and
fidivs
push
cwtl
jl
mov
fimull
add
push
sbb
scas
xchg
aam
mov
mov
inc
cmpsb
rcrb
fimull
jge
loopne
pop
pop
addl
call
pop
cltd
pop
xchg
bound
sbb
xchg
mov
les
test
aaa
pushf
subb
cmp
fsts
jns
cmp
loope
cmpxchg
jge
inc
xor
xchg
hlt
cmp
fimuls
daa
out
jns
and
test
movsb
int
iret
icebp
adc
mov
pushl
fimuls
aam
test
negb
aaa
das
test
adc
push
inc
sahf
fs
fimull
cltd
loope
stos
scas
xor
sbb
cmc
test
xor
outsl
xlat
jecxz
pushf
stos
cmc
pop
int
lret
in
mov
add
mov
push
or
addr16
xor
and
shrl
inc
mov
cmpsl
pop
xor
ret
inc
ficoml
lea
push
pusha
mov
pop
pusha
fs
mov
fistl
fs
in
call
mov
cwtl
out
iret
out
jle
push
jne
inc
fs
push
outsl
sbb
cmpsl
fmull
push
dec
jns
xlat
lock
mov
ds
sub
pop
mov
rcll
add
sahf
in
and
jne
mov
xchg
cli
fstpl
movsb
rcrl
xor
stc
xchg
sub
mov
push
ret
or
ds
push
gs
roll
xchg
mov
cmpsl
shrl
pusha
aas
push
or
xor
out
sub
dec
scas
test
je
push
xchg
adc
rcll
scas
sub
aas
dec
shrl
ss
aaa
roll
or
addr16
movsl
in
and
sub
xchg
imul
mov
repnz
lret
dec
mov
fwait
repz
jnp
push
sub
fdivrp
xchg
xlat
scas
repz
hlt
xorb
jns
inc
mov
xor
mov
dec
repz
rcl
push
mov
lret
cltd
pop
push
mov
dec
mov
test
jmp
movsl
ja
push
jnp
and
insb
mov
pop
and
xorb
jmp
mov
out
clc
outsl
aaa
stos
popf
inc
imul
mov
sbb
out
insl
movsb
mov
imul
sub
into
and
sahf
fidivrs
clc
cmp
mov
out
aad
shl
jmp
into
cmp
push
fcmovne
pop
fsubl
jo
xor
mov
ret
push
shl
and
lret
mov
ret
rol
leave
xor
inc
lock
xchg
and
outsb
hlt
dec
dec
xor
movlps
out
push
stos
rcrb
lret
insl
fcomip
mov
fwait
pop
mov
lret
or
push
mov
pop
nop
pop
pop
daa
nop
aaa
inc
loop
sbb
dec
hlt
cli
test
push
adc
jle
cmp
outsl
adc
fists
or
jle
fmul
call
bound
pop
jno
dec
mov
jno
adc
push
push
or
imull
and
gs
jno
cmp
imul
mov
iret
subb
loopne
adc
dec
jp
xchg
push
stos
subl
jnp
push
pushf
popf
push
push
lock
sub
fsubrl
ficompl
dec
out
in
inc
cmp
pop
jo
fisubrl
into
inc
or
popa
sbb
push
cmp
aad
pop
das
or
lods
nop
inc
mov
sbb
push
or
imul
loope
insb
inc
mov
fmuls
push
xchg
stos
push
pop
mov
or
mov
xchg
jbe
mov
insl
out
mov
lods
in
fisttpl
mov
jo
xchg
add
jle
mov
into
filds
inc
and
xchg
nop
fwait
pusha
xchg
iret
fdivrp
in
insb
dec
push
and
shll
stos
ljmp
adc
outsb
inc
xor
les
in
lcall
fldl
cs
test
sub
je,pn
das
cli
sbb
jecxz
mov
adc
mov
push
je
pop
or
or
lds
sub
das
pop
pop
mov
ss
mov
sti
add
testl
pop
cmp
mov
in
push
aaa
addr16
or
int3
fs
jno
test
sbb
cmp
mov
jle
mov
lretw
je
test
jle
add
loop
scas
out
lea
ret
mov
pop
and
sahf
repnz
and
in
js
jp
pop
jns
push
mulb
cmp
push
mov
cli
jg
jo
dec
mov
adc
std
and
outsb
or
iret
in
mul
pop
inc
imul
outsb
xchg
aaa
adc
jle
mov
pusha
dec
cld
add
xchg
ss
cmp
jno
outsl
xchg
insl
cmp
daa
bound
loopne
jecxz
dec
adc
xor
cmp
and
test
fisttpll
shl
pop
clc
mov
fistpll
test
inc
dec
xchg
pop
jmp
dec
adc
lahf
lea
cli
push
xlat
in
cwtl
push
jle
cwtl
xor
insb
lock
imul
hlt
in
mov
mov
xchg
add
testl
dec
outsb
into
test
jnp
ror
sbb
jne
xchg
mov
adc
pusha
cmpsl
mov
and
in
movsb
or
adc
scas
fidivl
mov
imul
xor
movsb
bound
add
enter
nop
and
js
addr16
punpckhdq
adc
dec
stos
clc
add
pop
lds
call
rol
mov
add
cmp
sub
add
mov
and
scas
fs
pop
mov
stc
push
ljmp
test
enter
rorb
daa
arpl
xchg
jae
out
mov
repz
jo
or
inc
scas
lahf
jns
pushf
dec
iret
inc
bound
jge
push
repz
daa
sub
rorl
inc
scas
adc
das
push
loopne
xor
mov
loope
pop
mov
fisubl
jl
mov
fidivl
mov
inc
sbb
or
daa
inc
push
jmp
adc
js
mov
les
in
mov
hlt
cmp
out
gs
lock
push
mov
xchg
cs
adc
xchg
cmpb
xor
test
pop
push
ret
les
push
jns
int3
dec
dec
lock
leave
inc
loop
ret
lret
fistpll
daa
sub
out
nop
shll
jno
sbb
push
mov
push
stc
jecxz
pop
push
out
stos
pushf
aaa
sub
inc
pop
jbe
hlt
pop
fnstcw
mov
je
pop
jl
sbb
test
cwtl
stc
fcmovne
dec
mov
lods
jmp
addr16
aad
xorb
out
pushf
sbb
mov
mov
ljmp
jmp
pop
imul
cmp
mov
or
jl
dec
into
cmp
ljmp
xchg
mov
and
inc
cmp
pop
subl
cwtl
ret
lock
fwait
adc
test
jae
mov
das
pop
loop
mul
repnz
faddp
ljmp
andl
xlat
dec
and
sub
and
mov
scas
push
mov
jae
insl
inc
daa
push
pop
push
aaa
mov
sub
mov
out
and
mov
push
adc
nop
add
adc
aaa
js
xor
mov
test
lea
cmp
dec
mov
push
addr16
cmp
mov
hlt
mov
pop
sbb
cld
xchg
adc
je
jp
cs
xchg
aaa
or
push
jne
adc
cmc
fidivs
sbb
pop
sub
push
jmp
rcl
sub
sub
les
test
ret
xchg
lock
jb
pop
fidivrs
call
clc
sub
add
jno
cli
xor
push
imul
jle
lds
insl
test
dec
adc
xchg
jne
inc
mov
or
lds
mov
inc
jns
or
sub
add
jge
push
leave
inc
xor
fbstp
and
nop
xchg
pop
outsb
sbb
mov
sbb
mov
iret
xchg
xchg
mov
xlat
in
into
xchg
push
repz
nop
or
mov
inc
out
inc
fstpt
mov
repnz
dec
mov
loop
hlt
in
dec
scas
ja
sub
cwtl
xchg
cmp
sbb
in
pop
sbb
mov
inc
pusha
mov
mov
xchg
xchg
test
dec
rcrl
or
pop
lods
lahf
popa
cwtl
pop
orb
stos
mov
mov
jmp
mov
es
xchg
sub
xor
cli
in
je
sub
shrb
fwait
jno
pusha
out
push
sub
adc
out
sub
loopne
jge
pop
popf
loopne
lods
sbb
mov
sub
add
cwtl
xchg
fisttpl
fsubl
mov
or
ret
inc
and
pop
imul
jl
movsb
std
add
mov
rorl
jbe
sbbl
inc
or
push
jl
popf
ret
xor
sub
xchg
loopne
push
addr16
dec
lahf
dec
pop
push
jnp
mov
test
add
mov
xchg
mov
fimuls
jnp
xor
scas
call
jg
pop
mov
je
scas
push
aaa
mov
lods
nop
xor
pop
jo
cmp
or
loopne
cltd
lret
jno
stc
ja
xchg
nop
sub
dec
jns
jl
and
in
jne
xor
sub
xchg
addr16
test
mov
outsl
aad
fwait
std
add
xchg
push
call
jo
mov
inc
dec
pop
les
fcompl
mov
sub
lcall
das
movsl
fimuls
and
mov
call
fmull
push
jno
das
fmuls
push
sti
jb
out
shll
mov
mov
movsb
push
aad
ret
mov
dec
jns
mov
fsts
daa
mov
push
or
outsl
repnz
in
hlt
bnd
push
jmp
inc
scas
pop
xchg
jb
xchg
sahf
cld
jp
cs
xor
insb
nop
jnp
push
inc
aaa
dec
or
into
lods
cmp
fldcw
or
cli
int3
popa
ficoms
nop
test
sbb
jbe
fldt
cli
xchg
mov
xchg
push
xchg
add
lods
cmp
sub
sbb
cmp
mov
mov
cmpl
test
sub
mov
jle
push
jp
sti
and
aad
jp
xlat
testl
fs
loop
pop
mov
icebp
push
xchg
dec
cmpb
rorb
aam
ss
mov
outsb
sti
and
adc
mov
into
aad
sbb
push
mov
pop
jbe
inc
lods
or
mov
push
in
jle
loopne
or
pop
jns
lods
fcompl
jmp
adc
sbb
addr16
mov
les
enter
stc
or
xlat
lock
sbb
inc
test
jae
aad
mov
int3
cmpl
push
into
scas
frndint
sar
xchg
iret
rcrb
mov
mov
mov
vorpd
push
jae
pusha
xor
loopne
ds
aam
dec
push
cmp
sbb
sbb
pop
data16
dec
mov
mov
add
add
mov
or
lods
xor
mov
push
push
stos
dec
fnsave
dec
pop
mov
bound
test
sbb
pop
cmp
mov
push
xlat
aam
loopne
out
lods
jbe
inc
flds
imul
cld
mov
mov
pop
sub
inc
in
mov
test
push
jle
push
incb
adc
jb
out
fsub
jae
dec
mov
and
mov
sbb
and
ljmp
cli
push
insb
cmp
nop
in
fs
jnp
aas
inc
jge
sbbl
mov
ds
movsl
cli
loopne
js,pn
jp
sub
bnd
subl
lods
nop
js
mov
rcrl
bound
fwait
mov
pop
dec
mov
jae
cmp
adc
mov
pop
arpl
pop
mov
cmp
imul
and
leave
mov
aaa
aas
lcall
cmp
test
cwtl
adc
lock
insb
hlt
inc
lods
inc
fnsave
dec
inc
inc
xor
mov
push
cmp
push
xchg
or
cmp
mov
push
shrl
add
rol
insb
sbb
movsl
cmp
pop
mov
adc
xlat
jae
lods
dec
xchg
int3
fcompl
mov
lret
or
inc
mov
lret
fcmovnu
pop
xor
test
in
pop
das
dec
jbe
movsl
push
aam
cmp
leave
loopne
test
jbe
and
sbb
xchg
mov
ret
sbb
insb
xor
inc
pop
inc
pop
mov
fs
pop
pop
aad
cmpsl
or
cmp
sbb
mov
sti
xor
lds
xlat
mov
movsb
xor
add
test
xorb
stc
cmpsl
mov
or
and
xor
jge
push
pop
sti
add
in
test
pop
test
stos
sub
inc
mov
inc
out
jmp
cmp
fnstenv
dec
test
ret
sbb
ffree
fists
das
add
jg
negl
mov
sub
flds
and
arpl
jge
out
aas
repnz
xor
add
movsl
mov
sbb
fidivl
into
pushf
into
pushl
pop
jecxz
popf
clc
popf
sahf
dec
pusha
sub
inc
and
mov
xor
pop
pop
mov
aad
movsl
in
mov
iret
je,pt
fisubrl
pop
cmpb
jge
bound
push
stos
shll
dec
test
out
dec
mov
jbe
mov
das
xor
cld
add
jecxz
xchg
jb
jle
sbb
mov
mov
aaa
fcmovne
mov
sbb
dec
xor
jae
in
mov
sbb
sahf
sbb
adc
sahf
out
jo
test
xchg
lock
bound
pop
inc
xor
jb
dec
lea
test
pop
test
enter
addr16
mov
loope
jns
fisubrl
std
das
push
jb
inc
adc
mov
cs
loop
mov
hlt
cmp
movsb
push
xchg
sub
or
loopne
sbb
je
mov
cmp
cli
ss
repnz
outsb
mov
pop
xchg
shrb
notl
cmpsb
sub
filds
fwait
xor
inc
jno
mov
mov
or
pop
push
jnp
xchg
lds
mov
cld
push
fstl
inc
jbe
minps
insb
jp
in
movsb
and
push
in
sbb
je
sub
sub
stos
mov
mov
push
mov
cmp
dec
dec
jns
rcrl
movsl
imull
cmc
adc
xchg
repz
popf
pop
add
in
adc
aas
leave
test
mov
leave
in
jl
test
or
out
push
pop
xor
ljmp
dec
adc
pop
add
mov
mov
repnz
repz
mov
xor
lret
test
mov
repz
cwtl
outsl
ficompl
mov
flds
aas
bnd
iret
es
in
lods
mov
sub
mov
popa
cmp
stos
push
out
aam
leave
jae
xor
mov
inc
outsb
mov
dec
and
outsb
scas
jbe
dec
test
ret
bound
push
sbb
mov
ficompl
adcl
xor
sbb
bound
and
outsl
iret
push
sarb
dec
mov
pop
mov
mov
jmp
mov
xor
test
dec
lods
jae
rcrb
cmp
mov
ret
jl
jne
rorb
out
int3
mov
and
cmp
inc
out
pop
xchg
dec
fdivrl
cmpsb
sti
adc
adc
sbb
insb
pushf
dec
and
jbe
std
push
add
arpl
sti
xchg
in
sub
iret
or
hlt
enter
inc
arpl
mov
or
iret
jge
xchg
mov
sub
mov
pop
in
andl
xor
sbb
gs
mov
inc
mov
mov
arpl
and
sub
fsub
or
inc
pop
sub
mov
xor
cmc
inc
icebp
jns
lock
test
gs
inc
inc
hlt
packssdw
jb
ljmp
sbb
das
fdivs
aas
pop
shr
mov
and
in
insb
cmp
repnz
mov
shll
sbb
xchg
sbb
mov
sbbb
in
daa
aaa
ss
mov
insb
add
mov
jb
mov
push
scas
xor
lock
pushf
shlb
mov
pusha
and
push
stc
addr16
or
mov
popa
xor
inc
cli
lds
insl
sub
cmpb
push
sub
rcrl
stc
rclb
pop
mov
nopl
mov
mov
lcall
pop
adc
arpl
and
les
fadd
out
arpl
into
inc
pop
add
rcl
jle
cmc
dec
add
mov
in
js
sub
jns
adc
pop
mov
pushf
mov
pop
ds
nop
add
aaa
jo
ficomps
aaa
sbbb
out
jp
rolb
scas
popa
mov
les
aas
cmp
cmp
cmpsl
xor
jl
out
mov
enter
cmp
icebp
push
test
push
daa
pop
lods
stc
push
xor
inc
sub
cwtl
mov
dec
sbb
mov
and
xorb
addb
dec
or
cmpsl
movsl
or
in
inc
sbb
cli
repz
sti
rclb
arpl
cwtl
lds
dec
int3
lds
pop
add
or
xchg
cmpsl
or
lret
into
daa
xor
inc
jp
push
out
das
cli
pop
call
and
in
bound
lret
leave
add
push
push
bound
add
mov
insl
insl
adc
pop
loop
jle
out
iret
fcoml
cmpsb
icebp
mov
xchg
mov
fisubrl
cli
push
add
mov
stos
mov
inc
push
xchg
lock
inc
fmuls
cmp
push
aas
dec
jge
int
mov
and
aad
mov
xchg
decb
dec
enter
mov
sub
out
fists
push
mov
mov
cmp
int3
je
popa
fwait
mov
xchg
xor
jb
mov
imul
sbb
rolb
adc
test
mov
inc
fimuls
push
sbb
cmp
lret
jns
sbb
inc
mov
push
outsl
dec
daa
jno
lret
pop
sahf
mov
and
clc
xor
sbb
pop
mov
les
mov
push
jl
aas
mov
jl
inc
flds
pop
adc
loope
fildll
mov
sbb
dec
out
in
jg
mov
dec
lret
xchg
dec
cmp
xchg
inc
mov
rcrb
add
outsb
jne
xlat
in
mov
stc
xchg
cmp
sub
cs
cmpsb
sub
call
sub
add
sbb
dec
adc
test
dec
scas
xchg
bound
xchg
out
je
arpl
rorb
ljmp
mov
cmp
push
sub
mov
pop
rcl
lock
inc
push
mov
mov
lret
jb
arpl
xchg
jb
out
mov
ljmp
mov
std
xor
hlt
mov
in
mov
ljmp
lret
out
decb
dec
ljmp
cmp
loop
and
xchg
jl
ret
clc
int3
shrl
lods
or
stos
push
inc
push
fisttpll
jmp
ljmp
mov
cmpl
pop
add
lcall
orps
popf
push
jmp
mov
je
jl
cli
sbb
sbb
popa
int
add
in
aas
push
or
inc
xor
stos
push
dec
adc
inc
inc
add
pushf
lret
std
dec
daa
add
and
or
jecxz
clc
sbb
pop
cli
inc
pop
sub
push
iret
add
outsl
cmpsb
xor
mov
loope
ljmp
mov
mov
test
stos
ficompl
out
out
mov
sub
mov
push
add
jbe
sahf
jge
test
ds
sub
push
sbb
push
or
adc
mov
sbb
testb
lret
mov
ret
add
pop
and
std
pop
popa
xchg
fists
sti
push
adcl
cmp
xchg
and
shll
rep
ficomps
xchg
sub
cmpsb
loope
fsubs
ret
and
mov
mov
test
cmc
inc
xlat
inc
jmp
lcall
insl
shll
push
lahf
addl
sbb
adc
incl
push
pminsw
adc
cwtl
pop
fdivrl
lods
and
add
adc
inc
lret
nop
daa
push
es
lret
sbb
or
or
ds
cmp
or
outsb
out
pusha
xchg
push
add
jg
mov
hlt
scas
shrb
lret
dec
shr
das
mov
shll
je
xchg
mov
xchg
pop
loope
push
test
cld
in
jl
xor
dec
aad
jmp
call
testl
std
fldl
cmpsb
push
mov
das
sbb
inc
push
lar
push
outsb
pop
sbb
adc
jbe
xchg
dec
dec
negl
xlat
adc
inc
rcr
movsl
push
aad
insl
test
out
es
push
fisttps
jmp
mov
adc
mov
aad
xchg
imul
xor
dec
aad
xor
insb
clc
stos
cmp
lods
cwtl
adc
adc
mov
or
hlt
fbld
lods
jnp
fmuls
rcr
imul
xchg
xchg
xchg
fildll
lods
aad
push
adc
out
mov
call
pop
into
lea
xor
es
test
adcl
hlt
push
ret
cmp
mov
cmpsl
sub
adc
out
jnp
mov
mov
loop
out
mov
lret
and
popa
sub
cwtl
repnz
andb
popa
mov
ret
sbb
dec
or
lods
mov
pop
mov
ret
xchg
inc
pop
push
fldcw
push
dec
mov
les
mov
cli
add
or
jg
adcl
fsubr
daa
cltd
sub
adc
mov
adc
mov
push
pop
sub
jbe
sar
xor
ja
cmp
jle
or
pusha
jp
les
jg
and
mov
cmp
inc
aas
mov
ss
pop
mov
cmp
push
inc
leave
addb
lds
jmp
add
jbe
cs
pop
test
add
cmpsb
test
push
inc
mov
xor
mov
cmpsb
not
negl
xchg
sbb
out
sti
ss
inc
mov
fmull
dec
fiadds
pop
inc
mov
xor
push
lods
add
decl
pop
aas
inc
pop
arpl
fsubrs
insb
mov
fnstsw
popa
loopne
subb
ret
out
loopne
sbb
mov
mov
mov
into
aad
adc
cmpsl
int3
sbb
adc
gs
mov
jne
inc
push
insb
out
cli
and
rcrl
aaa
and
fidivl
xchg
dec
mov
movsb
pop
pop
or
inc
movups
fs
fwait
mov
imul
je
mov
pop
nop
mov
inc
mov
mov
movsl
sub
push
popa
add
outsb
jno
call
lahf
xchg
sahf
movsl
test
test
pop
pop
mov
adc
int
xchg
xor
test
shrl
dec
xor
or
call
mov
xor
popf
add
test
roll
sbb
mov
push
jno
pop
push
sbb
pushf
mov
dec
aad
cmpsb
test
mov
out
scas
outsl
xor
push
sbb
call
inc
jbe
mov
rcr
lods
in
push
and
pop
pop
cmc
je
jb
popa
cmp
stc
cltd
daa
xchg
mov
scas
in
cmc
dec
pop
cltd
cmp
inc
pop
lahf
adc
cli
ds
jbe
iret
mov
mov
nop
repz
bound
ret
shl
cmpsb
dec
subl
or
xchg
ret
fldenv
das
testb
outsl
cmpsb
cwtl
cs
fs
cmc
add
xchg
aas
push
lcall
daa
xor
into
in
shl
mov
and
cwtl
test
xchg
sub
test
mov
sti
mov
aas
das
daa
adc
jb
leave
ret
xlat
and
pop
pop
pop
mov
fs
mov
cmp
icebp
xchg
dec
rorl
lds
out
xchg
andl
int
scas
cmp
xchg
leave
fnstcw
in
mov
cmp
xor
cmp
outsb
adc
xlat
xchg
sbb
dec
je
inc
lods
ror
aam
pop
rcl
rcrb
dec
push
repz
sbb
movsb
push
mov
aas
push
aad
cld
clc
sub
pop
insb
mov
sub
addl
cmp
rcrb
test
mov
rolb
push
push
fisubl
nop
sbb
and
outsl
sbb
inc
fwait
enter
adc
mov
or
leave
and
cmc
lahf
push
and
push
fisubs
jnp
dec
pusha
icebp
iret
sbb
rclb
inc
mov
pop
xor
cmp
fcmovbe
dec
sub
decl
mov
push
js
mov
in
jnp
cwtl
movsb
add
data16
xchg
or
mov
cmc
stos
mov
mov
mov
jmp
repnz
mov
push
clc
test
pop
or
inc
call
mov
mov
jecxz
aad
ss
mov
clc
mov
push
dec
lret
adc
cltd
rcl
mov
xor
xor
jge
scas
arpl
cmp
push
jmp
dec
cmp
cmc
dec
adc
bound
int3
lock
das
lods
xchg
shlb
xchg
mov
outsl
cmp
or
push
push
jae
inc
stos
add
mov
es
fsubs
or
lea
adc
dec
pusha
dec
das
enter
push
jns
mov
into
ljmp
xor
sbb
hlt
shll
enter
jge
test
sub
sbb
push
cmc
and
loop
test
push
xor
ss
movsb
adc
rcll
jle
jb
pushf
adc
mov
jg
jmp
jo
negb
imul
mov
dec
loopne
sbbl
xchg
jmp
push
loopne
mov
mov
mov
pop
fistl
pop
add
out
xor
sub
into
lret
mov
repz
xchg
xchg
and
pop
pop
or
insb
int
bound
push
stc
idivb
movsl
imul
lods
xchg
xlat
jg
mov
sub
lods
pop
enter
pop
or
fnstenv
rcr
in
xchg
xor
loope
mov
movsb
ficomps
je
test
aas
cli
bound
push
pop
aas
ret
cmp
addb
sub
rcrl
inc
test
fdiv
cwtl
xor
lods
rcr
into
xor
push
js
push
lea
out
rorb
je
push
push
push
or
xchg
mov
fs
shl
loop
imul
cmp
int3
icebp
int
test
out
cmpsb
imull
push
mov
pusha
sbb
cmpsb
int
ffree
mov
lea
inc
rcl
lods
or
xorb
sub
push
inc
jge
or
jmp
mov
rclb
in
cmpsl
inc
cmpsb
xor
push
subl
and
insl
add
add
xchg
xor
push
mov
aas
scas
dec
xchg
xor
push
ret
rorb
in
xlat
subl
lahf
push
sbb
ljmp
sbb
and
inc
loop
pop
test
scas
jle
lcall
ret
and
test
inc
xor
pop
mov
mov
clc
mov
lcall
shrl
sahf
mov
add
and
movsl
pop
push
inc
add
xchg
stos
adc
jg
aaa
ss
in
and
ret
add
push
scas
inc
or
add
lods
movsl
xor
ja
dec
ss
push
mov
cs
outsl
into
jle
jg
bound
fwait
pushf
mov
pop
mov
cs
dec
push
xor
pusha
dec
add
mov
xchg
push
pusha
in
popf
and
popf
rolb
or
xchg
mov
and
inc
aad
ds
negl
add
inc
imul
xor
mov
leave
sub
push
lahf
add
in
fdivrs
mov
insl
loope
arpl
add
enter
add
xchg
lock
hlt
mov
or
loopne
dec
dec
push
xchg
xlat
ret
or
insb
sahf
lods
addl
push
mov
mov
inc
xor
stos
movsl
adc
mov
dec
in
mov
aaa
es
push
cmpsb
or
daa
jge
jp
dec
icebp
or
sbbb
test
fisttpl
fmull
fiadds
clc
movsl
xor
sbb
int
dec
xorb
out
xor
in
mov
dec
in
xorl
ss
or
push
dec
outsl
mov
sub
hlt
or
jecxz
pop
addb
add
pop
lret
push
ja
aaa
xor
hlt
cmp
pushf
imul
sub
push
cmpsl
xchg
adc
cltd
and
lahf
inc
lods
cmp
cmpsl
mov
jl
outsl
fwait
hlt
adc
icebp
data16
mov
sahf
inc
mov
gs
jl
popa
dec
shrl
sbb
jns
mov
aam
insl
andl
xchg
movsb
enter
or
cmc
addr16
fdivrs
repz
xchg
pop
pop
or
pop
sahf
xor
loope
scas
xbegin
rol
jle,pn
loop
fcmovne
xchg
rcl
in
sbb
mov
rcll
xchg
hlt
ror
test
outsb
pop
push
push
imul
mov
mov
or
xlat
lcall
jo
sbb
jl
out
push
jle
into
out
jns
aam
mov
jo
enter
adc
jl
mov
xor
ds
jbe
xor
sbb
ret
into
mov
enter
adc
fstpl
sub
xor
gs
jle
xchg
arpl
cli
or
or
and
mov
pop
pop
in
xchg
add
addr16
fistl
mov
loop
pop
stc
xor
pop
mov
ffreep
inc
push
fucomip
jbe
sub
lret
jbe
jo
adc
hlt
or
pop
out
cmp
xor
outsl
sub
sub
add
sub
and
outsl
shlb
push
movsl
mov
ret
add
fs
es
mov
sti
in
aad
adc
jb
mov
cmp
aaa
out
sti
dec
das
dec
lret
inc
push
es
add
push
addr16
ljmp
mov
insl
cld
arpl
adc
jmp
in
fnsave
jle
sbb
mov
fs
mov
mov
rolb
divb
jb
add
icebp
dec
shr
sub
jmp
mull
and
scas
testl
and
or
cmp
sbb
test
and
das
lahf
in
push
push
adc
xchg
test
jge
ret
inc
iret
mov
adc
scas
mov
pushf
test
pushf
add
xor
insl
daa
jne
popa
enter
cmpsl
popl
rcll
lret
dec
in
pop
xor
and
cmp
xor
aam
xor
and
xchg
mov
scas
lahf
jge
push
pushf
rorb
in
dec
jno
neg
lcall
nop
mov
insl
adc
cmp
fcmove
adc
cltd
and
setl
lahf
imul
adc
xor
xor
fimuls
push
cwtl
or
dec
punpcklbw
mov
lods
imul
mov
mov
insl
dec
cmovle
in
or
pop
mov
dec
gs
sbb
cmc
dec
fwait
es
in
pop
leave
or
enter
cmp
repnz
jge
addl
mov
cmp
pop
jge,pn
nop
out
pop
xor
lret
mov
ret
push
lret
out
out
sbb
xchg
pop
aam
xlat
sbb
test
push
and
mov
adcl
cld
inc
adc
pusha
ljmp
cmc
insb
imul
jo
xorl
outsl
cmp
and
cmp
or
push
jae
insb
cmp
scas
or
cld
sub
pop
in
div
leave
inc
inc
fisttps
push
dec
and
adc
push
jmp
popa
cmp
dec
es
les
adc
imul
or
mov
js
mov
repnz
xor
push
jb
int
xchg
inc
repz
rcrl
or
arpl
popf
pop
adc
popa
dec
xor
imul
dec
push
divl
add
out
dec
mov
jnp
push
in
movsl
pop
jno
bound
lret
mov
js
scas
fwait
nop
andl
add
or
cld
dec
xchg
movsl
sbb
sub
and
inc
imul
sbb
xor
fnstcw
out
in
mov
push
in
adc
jbe
mov
adc
loope
imul
scas
mov
push
in
mov
loopne
jl
dec
pop
in
sbb
mov
inc
adc
movsl
shl
adc
push
int
mov
cwtl
cmc
jns
push
inc
or
clc
paddsb
icebp
sbb
xchg
notl
jp
pusha
in
xchg
add
push
das
fnsave
clc
arpl
test
dec
lods
sahf
mov
not
xchg
aaa
adc
imul
leave
and
pop
xchg
sub
lods
rclb
notb
mov
test
xchg
xor
push
testb
xorb
and
and
rcl
nop
pop
call
jmp
mov
xchg
jmp
imul
clc
punpckldq
sub
test
in
add
mov
pop
mov
lret
movsl
mov
sub
lea
mov
int
pop
pop
xchg
fs
xchg
adc
xor
rclb
push
jmp
pop
dec
int
sub
inc
pop
shl
jns
add
mov
pop
cmp
pop
inc
dec
mov
dec
fldenv
mov
js
mov
push
mov
fiaddl
push
xor
adc
and
aas
mov
outsb
mov
insb
mov
pop
push
dec
mov
push
sub
jbe
and
out
ret
xchg
in
or
dec
nop
daa
mov
ds
leave
mov
pop
mov
inc
ljmp
gs
bnd
mov
aad
fwait
dec
dec
das
jg
inc
mov
dec
repz
push
hlt
mov
test
addl
idiv
jmp
daa
inc
and
mov
negl
jl
dec
inc
adc
sub
inc
or
xchg
imul
mov
popa
pop
movsl
addr16
out
xlat
push
js
push
mov
cmp
push
push
iret
inc
mov
inc
jbe
lahf
jno
jecxz
popf
push
sbb
faddl
ret
jle
test
jno
mov
enter
lods
shll
xchg
push
pop
imul
popf
sbb
dec
enter
ret
ja
shlb
sbb
enter
push
movsb
je
push
imul
mov
or
std
lret
mov
mov
and
push
and
jle
sub
movsl
cltd
dec
xlat
mov
jmp
jmp
je
fsubrs
or
into
aad
sahf
sub
in
pushf
inc
mov
mov
int3
repnz
inc
jns
push
mov
jge
dec
jp
call
mov
add
jne
sub
jae
push
sub
into
les
push
ss
or
repz
int3
dec
push
mov
sub
lret
xchg
pop
pop
cmp
ds
xor
cmp
loop
je
fiadds
and
scas
push
xor
mov
mov
fdivrl
cmp
stos
add
mov
lods
sbb
clc
subl
fdivl
push
jne
mul
xchg
in
inc
jecxz
xorl
or
adc
mov
in
aad
mov
or
jg
pushf
cmp
jns
add
fdivrp
mov
outsb
mov
ret
mov
mov
in
jo
sarl
xchg
add
add
hlt
loope
loope
decb
mov
xor
add
mov
lds
jmp
in
test
aad
fisttps
pop
std
jge
ss
icebp
push
sub
daa
pop
je
cld
xchg
stos
test
data16
insl
or
pop
dec
scas
testb
mov
adc
pop
mov
leave
sub
addl
das
and
jne
sub
je
or
adc
xchg
ret
cmp
adc
add
loop
jl
fiaddl
push
lcall
imulb
sbb
repnz
out
xchg
push
jge
and
jge
inc
rep
ret
enter
call
push
push
cmp
in
in
add
jnp
mov
or
cli
dec
aad
sub
fwait
jns
push
popf
stc
jp
lods
clc
jge
jecxz
and
push
cmp
out
rclb
mov
lods
movsb
dec
lds
sub
arpl
mov
jne
pop
test
mov
adc
adc
lahf
add
leave
faddl
inc
jne
cltd
dec
fs
inc
sahf
xor
das
inc
in
stc
iret
out
lods
mov
mov
jns
dec
aas
and
xor
das
push
rcrl
cli
jns
fcompl
ss
inc
fnstenv
dec
adc
xchg
dec
jmp
es
hlt
in
andl
mov
cwtl
cmp
add
vmulss
add
jno
dec
cmpl
test
jne
push
xchg
push
sbb
adc
inc
sbb
in
xchg
out
popa
das
dec
icebp
shll
xchg
dec
jp
ljmp
fcomps
dec
sbb
insl
test
sbb
fldenv
lock
test
es
shll
fndisi(8087
test
push
ja
psadbw
std
mov
ljmp
adc
add
adc
mov
xchg
fldl
sbb
lret
dec
cmp
iret
mov
lods
lret
mov
jb
mov
insb
or
mov
loope
cld
fsub
dec
add
add
push
xchg
lcall
mov
and
jns
das
mov
add
pop
mov
cmp
and
push
scas
xor
and
sbb
ret
jnp
inc
stc
add
aad
jns
call
and
imul
push
push
jge
pop
mov
cmc
add
and
cmp
popa
mov
jbe
cs
cmp
pop
adc
ljmp
mov
test
cmc
dec
aas
dec
sti
mov
cli
loope
in
pmuludq
xchg
addr16
imul
ret
call
adc
roll
lods
and
or
cmp
mov
sbb
mov
lods
jp
xchg
mov
stos
call
pop
sbb
fimuls
pushf
and
outsb
mov
sbbl
or
fstl
push
cmp
lods
lods
inc
shl
daa
das
and
daa
cmp
shl
add
pop
mov
add
fwait
xchg
mov
xorl
ret
xchg
jge
mov
mov
jg
dec
stos
outsl
cld
pop
jecxz
bound
ret
xchg
xor
pshufw
cmp
push
loopne
popa
xchg
mov
int
lcall
mov
xor
mov
and
sbb
xor
inc
inc
inc
xor
xchg
cmp
jne
ss
cwtl
movsb
setns
jl
movsb
insb
sar
jle
aad
pop
mov
gs
into
cltd
pop
ja
or
movsb
jl
mov
jne
jl
cwtl
jp
push
add
xor
std
cmc
loope
dec
test
sub
jnp
mov
aam
pop
inc
inc
adc
xchg
popa
sbb
mov
cli
leave
adc
adc
hlt
adc
stos
enter
adc
xor
clc
arpl
xor
aad
sarb
cmp
xchg
adc
inc
cmp
push
ret
icebp
out
test
pop
xchg
cmp
mov
lcall
pop
test
faddl
push
sub
mov
stos
sbb
shll
in
xchg
popa
stos
xchg
stos
and
or
jne
mov
mov
pop
dec
add
ljmp
xchg
lahf
xchg
mov
das
and
lcall
enter
or
movsb
mov
gs
adc
add
lcall
sahf
xchg
inc
inc
pop
loopne
xor
adc
sbb
lret
pushf
mov
cmpsl
shrb
jg
cmp
pop
xor
push
sahf
cltd
mov
and
orb
mov
xchg
int
xorb
and
popa
push
out
xchg
dec
sub
pop
add
xor
popf
bound
inc
jb
mov
or
jg
dec
pusha
or
sahf
push
or
jl
push
data16
push
in
mov
adc
sbb
xchg
and
icebp
xor
xlat
jge
jbe
shrl
adc
mov
sbb
imul
push
decl
sub
test
push
lock
out
je
push
in
loop
mov
sbb
std
add
jo
push
popf
or
decb
lcall
pop
inc
xchg
pop
call
leave
call
jnp
mov
pushf
enter
xchg
ss
mov
push
int
popf
add
mov
adc
ja
std
sbb
mov
mov
pop
jbe
push
aaa
in
clc
mov
dec
enter
stos
pop
sub
rclb
sbb
xchg
pusha
push
fwait
pushf
scas
stc
xchg
fwait
ljmp
pop
out
jne
test
lret
xor
jp
dec
call
add
push
push
rol
rolb
scas
sbb
pop
clc
iret
out
sbb
dec
iret
adc
xor
push
fwait
int
aam
push
pop
pop
mov
ds
mov
out
sbb
leave
imul
std
int3
ljmp
sbb
divl
fcmovnb
push
push
daa
in
iret
popa
dec
pop
scas
rcrb
push
pushf
mov
cld
movsb
push
fidivl
movsb
or
jae
out
pop
adc
dec
sbb
lret
adc
jnp
inc
imul
mov
mov
addb
loop
jle
outsl
je
sub
fneni(8087
adc
cwtl
outsl
ss
les
pop
xor
stos
pushl
sti
dec
mov
mov
inc
inc
aas
imul
inc
xchg
mov
cwtl
push
sarl
cld
pop
loop
das
mov
sahf
scas
and
dec
insl
mov
pusha
mov
and
mov
lret
popa
stos
xchg
sbb
mov
nop
popl
dec
cmp
mov
arpl
movsb
adc
adc
std
cltd
sbb
sub
xor
test
mov
cmp
in
fldl
jge,pt
pop
cmpsl
pop
xchg
and
into
inc
or
xor
rorb
push
aaa
sbb
sub
aad
out
xchg
aad
fwait
aam
enter
cmpsb
xchg
xchg
jne
popa
mov
out
sbb
mov
in
and
mov
cmp
pushf
add
js
fisttpll
xchg
inc
lock
ret
gs
jle
push
dec
jae
xchg
sbb
or
mov
pushf
mov
push
icebp
mov
lahf
pusha
mov
cltd
cld
loopne
mov
in
adc
xchg
pop
dec
repz
jno
sti
cmc
fldl2t
cmpsl
imull
jo
lds
pusha
in
and
repz
jae
sbb
icebp
or
imul
dec
pop
cmpsb
lods
cltd
mov
jmp
test
ja
add
test
lcall
movsb
int3
test
dec
subl
adc
xor
jecxz
rcr
lock
xor
sub
or
out
arpl
fldl
enter
mov
iret
inc
push
mov
cltd
lds
fdivrs
inc
mov
icebp
popa
lret
mov
pop
inc
add
mov
je
outsb
dec
jl
xor
add
adc
jbe
or
and
mov
jmp
lret
into
mov
mov
aam
stos
scas
repz
out
adc
enter
mov
inc
mov
mov
test
insl
push
test
sbb
ficompl
lea
mov
in
or
push
aaa
sub
mov
mov
sahf
adc
popf
pushf
popl
inc
sbb
inc
out
in
loop
call
pop
dec
fdivrl
and
pop
xchg
mov
pop
clc
mov
dec
faddp
lea
scas
out
sub
pop
cmp
adc
mov
sbb
addl
pop
sub
addr16
fwait
xchg
xor
or
pop
sbb
sti
lret
lahf
mov
loopne
loopne
xchg
push
daa
out
sub
test
mov
mov
enter
jnp
std
and
outsb
fs
sub
dec
aam
jp
push
sbb
int
and
jg
mov
outsb
add
popl
mov
in
or
sbb
hlt
sbb
pop
cmp
sbb
fwait
xchg
adc
push
enter
fidivrs
pop
or
dec
lret
sub
mov
adc
cld
mov
and
sub
inc
addr16
andb
faddl
xchg
mov
ret
inc
out
push
and
xchg
movsl
mov
stos
and
mov
leave
push
in
pop
cmp
shl
lds
enter
or
mov
repz
jecxz
jle
xchg
fcomip
movsb
jg
cmp
out
mov
dec
in
sub
add
negl
push
push
cmp
or
popf
jecxz
jl
ja
or
test
into
dec
sar
xchg
and
pop
je
xchg
repz
dec
sbb
imul
sarb
lods
cltd
mov
jp
lds
aam
out
push
adc
xlat
cmp
shl
cmp
xlat
lock
leave
shl
nop
add
dec
push
or
cmp
jmp
sahf
adc
pop
imul
fldz
movsb
test
stos
repnz
mov
and
mov
push
test
cld
stos
adc
loop
jns
push
subl
or
push
mov
shl
daa
loope
sub
jae
add
data16
mov
imul
push
and
cmp
rcrb
xchg
lods
ss
pushf
repnz
leave
inc
xchg
outsb
sub
gs
cmpxchg
or
imul
fstl
clc
imul
cmp
ss
enter
aaa
test
mov
sub
mov
xor
bound
jns
in
cmp
push
pop
ret
sbb
jnp
cmp
pop
and
sbb
sub
cmp
and
popa
es
jecxz
data16
sub
repz
jne
fdivrl
mov
xlat
es
aam
out
xchg
movsl
imul
pop
cmp
mov
fs
loope
push
xchg
push
ja
std
pop
inc
lock
sbb
xchg
stos
inc
addb
mov
popf
fistps
sbb
dec
fildll
decl
adc
lcall
orl
jns
fs
jne
in
js
xor
push
repnz
push
call
sub
mov
imul
pop
dec
sub
fwait
shlb
mov
movups
and
adc
out
inc
scas
imul
mov
daa
pop
xor
mov
mov
dec
and
push
jnp
fnstcw
add
js
push
xchg
add
sarl
add
push
xchg
stos
or
jns
fs
inc
jo
xor
dec
imul
mov
adc
xchg
in
push
or
repnz
in
insl
pop
aad
and
pop
sub
mov
sbb
into
jg
cmp
xchg
rcrl
fs
mov
and
dec
xchg
xchg
push
lcall
jl
dec
and
lock
push
pop
mov
jp
mov
jecxz
mov
sub
push
in
outsl
and
les
ljmp
addb
jno
mov
cmpsl
adc
xchg
dec
xlat
stos
and
std
hlt
or
sahf
out
imul
test
or
jge
add
sub
imul
das
pop
cs
sub
inc
stos
mov
ljmp
push
adc
and
pop
stos
dec
inc
or
mov
or
xchg
mov
inc
mov
jno
insl
xchg
mov
jp
cltd
test
ret
pop
add
pop
xchg
clc
sarb
adc
stc
push
aad
dec
stc
rcll
xchg
in
ljmp
sarb
cmp
shl
ja
and
lock
icebp
fldenv
shlb
xchg
gs
pop
lret
adc
ds
out
fsts
call
dec
test
xchg
mov
sbb
lds
mov
push
pop
int3
dec
add
ds
mov
mov
xchg
jl
fimull
mov
imul
mov
and
iret
int3
and
dec
mov
add
push
xor
stos
push
out
into
movsl
test
lock
fisubrs
cltd
jle,pt
in
out
rorb
icebp
jg
jle
push
mov
cmp
leave
insb
mov
fildl
movsl
cmp
in
inc
arpl
scas
nop
test
xor
cmc
inc
mov
add
mov
dec
sub
pop
fidivrs
fsubrs
lods
int
and
std
dec
stc
ljmp
or
inc
mov
mov
mov
and
jp
or
cmp
xchg
sti
dec
or
scas
mov
jge
adc
pop
jno
test
test
mov
inc
movsl
jae
ret
jg
out
fldlg2
rolb
xchg
xor
or
clc
lds
lret
jmp
xlat
mov
les
mov
repz
cmp
add
push
es
mov
andb
inc
and
outsl
sub
rcrl
adc
cmp
popa
cmp
insl
fwait
cmpsl
inc
pop
lret
test
jecxz
pop
sub
mov
jp
lock
in
outsl
div
lret
and
and
xchg
mov
outsl
popa
inc
ds
ss
outsl
inc
add
std
cwtl
and
cld
pmullw
ja
pop
pusha
push
cmc
loopne
les
sub
inc
xchg
xchg
sbb
movhps
adc
or
xchg
sbb
mov
ljmp
testl
xchg
movb
ds
aad
xchg
mov
fnstcw
mov
jge
aas
and
sbb
inc
pop
ficoml
or
sti
push
out
push
cltd
loope
pop
cwtl
push
call
outsl
xor
jge
pop
sahf
mov
popa
mov
int3
xchg
inc
xchg
out
or
sub
adc
mov
and
jmp
xor
aas
mov
insb
rorl
lret
mov
push
mov
sub
mov
push
mov
imul
cmpsb
or
xchg
insl
xchg
pop
js
pushf
jne
sub
cld
or
in
sahf
jnp
aaa
test
aaa
lods
sbb
cmpsb
pop
xchg
inc
faddl
xchg
icebp
push
dec
lods
lea
stos
mov
dec
enter
or
dec
test
mov
mov
scas
cmc
in
jo
clc
mov
movb
jmp
inc
and
add
pushf
jmp
xorl
mov
cltd
jo
pop
repz
adc
outsb
sub
lods
adc
js,pt
lock
lods
popf
sar
inc
stos
mov
push
mov
xchg
dec
xchg
arpl
push
lock
adc
enter
jmp
fdivrs
pop
add
cmp
scas
loope
xchg
cwtl
mov
idivb
scas
out
and
call
or
xchg
xlat
lret
sbb
mov
jg
mov
dec
jns
mov
mov
sbbl
cmp
lcall
outsb
lahf
xor
mov
dec
stc
sbb
ja
insb
xchg
xorl
scas
sub
insb
sbb
lods
cmp
fwait
xor
movsb
jl
fwait
pop
dec
nop
dec
insl
cmp
or
inc
fistps
adc
jg
clc
xor
ret
sahf
xor
outsb
xchg
addr16
or
push
dec
mov
mov
mov
jecxz
lds
jbe
cwtl
push
std
mov
es
cld
jae
mov
xor
xor
fidivl
mov
xchg
imul
dec
xchg
ds
mov
aad
test
mov
stos
in
mov
loopne
scas
adc
stos
pop
dec
sub
jl
jl
fcompl
xchg
les
adc
mov
dec
fmuls
cmp
insl
jno
out
jae
jg
lcall
icebp
xor
shl
sahf
test
inc
fsubrs
mov
out
and
xchg
jo
fmuls
or
sbb
cmp
je
push
imul
push
mov
or
xchg
sbb
mov
ds
aad
aad
insb
xchg
or
jl
sub
dec
add
jmp
mov
xor
pop
out
mov
mov
xchg
scas
jbe
loope
adc
jecxz
xor
popf
imul
dec
bound
lods
icebp
push
repnz
and
das
add
mov
and
inc
stc
es
loop
rclb
and
in
std
dec
mov
inc
xchg
scas
sarl
loop
jmp
xlat
loope
in
add
push
insl
mov
inc
mov
push
cmpsb
addr16
or
dec
dec
or
xor
roll
loope
lcall
jae
adc
and
push
lock
jecxz
add
pushf
mov
jmp
xchg
add
ja
aam
cmp
bound
and
out
mov
cwtl
data16
arpl
ret
mov
push
xor
cmp
jmp
imul
and
lret
divl
dec
adc
push
sbb
std
addr16
rorl
xor
sub
out
icebp
xorb
cli
fwait
test
or
cmpsb
xor
push
addr16
mov
arpl
mov
add
inc
lret
movsl
mov
mov
in
cmp
daa
sbb
and
xor
add
aad
jmp
xor
aam
mov
scas
mov
mov
lcall
stos
pop
pop
add
fwait
mov
js
mov
push
nop
pop
out
subb
mov
movsl
mov
pop
pop
into
mov
sub
xorl
push
insl
bswap
hlt
stos
bound
add
daa
jmp
pop
mov
in
mov
shll
jecxz
fs
jb
test
imul
movsb
sbb
cld
mov
jb
cmp
pop
ljmp
movsb
sub
fstps
or
ljmp
jns
shl
ret
out
xor
lahf
adc
loope
sahf
mov
out
inc
lea
lods
mov
sbb
rcl
rorl
push
jbe
test
push
cmp
xor
xchg
iret
xchg
jp
shll
sbb
push
mov
orl
or
cld
gs
cmpsb
pop
mov
cmp
adc
in
push
icebp
ss
sbb
xor
mov
pop
add
push
add
adc
mov
sub
push
xor
icebp
out
pop
xchg
xchg
adc
fs
mov
scas
lahf
dec
inc
imul
jno
negl
mov
shlb
inc
mov
lock
mov
leave
mov
sahf
add
ret
fsubrs
mov
cmp
pop
vmwrite
mov
push
xchg
les
ljmp
mov
gs
inc
fld
daa
hlt
andb
clc
shrl
insl
push
fstps
cmp
lea
jl
in
xor
pop
mov
mov
loop
ret
daa
mov
push
mov
pcmpeqb
cmp
cmp
and
sti
and
dec
cli
lret
or
fmul
imulb
fisubrl
imul
inc
fcmovnbe
aam
pop
and
nop
pop
push
adc
push
mov
stc
pop
dec
sarl
add
pusha
mov
ljmp
aas
xor
out
sbb
pop
and
icebp
xlat
sbb
pop
adc
addr16
mov
push
in
or
mov
fwait
in
int
test
pop
xchg
xchg
imul
decl
mov
mov
shrb
cmc
jp
aad
bound
imul
outsb
xchg
sbb
dec
es
xor
xlat
pop
bound
add
cmp
scas
sbb
fildl
or
push
jg
daa
pop
sub
fstps
jbe
insb
popa
inc
dec
mov
ror
add
cmc
inc
add
push
cmpsb
mov
mov
movl
inc
es
shr
push
add
adc
dec
adc
mov
sbb
pop
repnz
mov
iret
decl
addb
fnsave
mov
push
or
xor
outsl
mov
mov
xchg
cmp
sahf
fmull
icebp
sbb
xor
jle
lret
imul
and
sbb
xchg
mov
in
imul
add
dec
sbb
clc
dec
js
in
imul
call
sbb
sbb
call
das
mov
loope
cltd
icebp
popa
mov
adcl
rcrb
and
ret
xor
and
jns
sti
add
cmpsl
mov
or
mov
sub
sarl
aad
test
mov
fnsave
fs
shl
xlat
adc
scas
mov
pop
mov
jg
lods
push
mov
pop
leave
jae
inc
dec
in
lods
clc
bound
ror
insb
cltd
cmpsl
pop
scas
pop
dec
rcrl
imul
dec
pusha
sbb
inc
cmc
aas
xchg
out
dec
ret
ds
mov
psadbw
sbbb
les
pop
push
push
or
mov
scas
ja
mov
out
test
jecxz
sbbb
arpl
std
dec
in
rcpps
loopne
mov
mov
sub
in
lods
scas
pop
push
inc
cmp
mov
sub
jmp
cltd
addr16
cwtl
cmp
mov
mov
add
jmp
fnstenv
mov
push
pop
and
xchg
push
xor
mul
xchg
mov
xchg
mov
sub
dec
out
arpl
jmp
xor
and
xchg
cmc
inc
dec
ret
cmp
fs
push
out
sahf
add
adc
notl
test
mov
dec
sahf
mov
push
xchg
testl
jns
lods
inc
mov
test
pop
xor
cmpsl
pusha
movsb
dec
fisttpl
cli
js
sub
int
inc
adc
andl
das
icebp
mov
lcall
loopne
mov
push
lcall
cmp
mov
jbe
xchg
aas
ss
mov
stos
pop
jnp
jb
dec
outsl
jmp
inc
pop
sbb
das
nop
mov
jae
imulb
test
mov
adc
scas
push
mov
ja
movsb
cmp
test
jae
mov
stc
mov
je
xchg
in
shr
jge
sahf
bound
cmpsl
inc
daa
cmp
mov
add
cs
add
rorb
mov
mov
cwtl
ror
es
inc
cli
jmp
shll
add
push
or
and
loopne
pushf
sbb
xor
push
mov
notl
fidivl
add
jle
popf
jge
push
sbb
mov
sbb
xchg
cli
mov
mov
xorb
add
stc
out
fisubrs
sub
push
test
jmp
and
aam
cmc
mov
pop
and
sub
int3
cmp
shlb
push
stos
leave
xor
fisubs
mov
inc
ss
popa
test
stos
sub
and
loopne
mov
enter
adc
dec
xchg
shll
mov
jnp
add
loop
lock
ljmp
outsb
sbbl
cli
push
mov
mov
cwtl
je
aaa
arpl
jl
xchg
add
fstpt
stc
rol
mov
add
push
stc
mov
ja
add
in
psrlw
addb
insb
outsb
inc
std
shr
push
addr16
sub
dec
rorl
int3
pushf
and
in
xchg
clc
ret
cmpsl
sub
out
mov
pop
mov
cltd
cmp
out
dec
fildll
inc
mov
and
jecxz
sub
aam
fists
flds
xchg
gs
ljmp
pop
repz
dec
push
testb
and
sahf
xor
pop
cltd
pusha
in
adc
inc
push
mov
mov
movsb
mov
jo
lcall
in
pusha
push
pop
hlt
fsts
or
mov
inc
ret
push
cltd
pop
push
add
dec
ljmp
ja
adc
push
mov
ret
inc
mov
or
enter
in
and
sbb
mov
push
fildl
sti
fdivrp
pop
fadds
clc
add
and
adc
jns
ret
ret
sub
lret
mov
jge
add
mov
leave
imul
jo
mov
fs
xchg
in
fs
xchg
movsl
add
in
lds
lcall
inc
xchg
inc
rclb
sub
call
stos
mov
push
or
stc
repnz
sbb
cmp
add
inc
jecxz
sbb
imul
xchg
ljmp
jp
aam
dec
dec
mov
xor
lds
subb
or
pop
sbb
sbb
loopne
sbb
push
mov
xchg
mov
xchg
xlat
sbb
sbb
lds
adcb
mov
cmp
mov
or
xor
in
sub
hlt
mov
arpl
repnz
jge
push
jmp
mov
in
fldenv
in
sbb
lea
sahf
lock
xor
movsl
add
mov
jp
or
jmp
mov
andb
xchg
adc
jge
or
adc
cltd
jg
sarl
sbbl
ret
jmp
push
inc
mov
lret
or
insb
mov
loopne
dec
xchg
insl
xchg
in
pop
and
push
mov
int3
inc
jae
insb
lods
and
jne
lds
aad
jo
addl
aas
jmp
test
inc
or
cwtl
mov
fsubrl
push
pop
or
push
ret
push
enter
jg
outsl
mov
dec
data16
sub
pop
sbb
pop
pop
cmp
and
mov
adc
mov
inc
mov
imul
dec
sbb
and
sub
inc
call
jae
jo
dec
ja
in
shl
push
inc
fcompp
add
xchg
sub
stc
mov
or
subl
jecxz
movsl
scas
jl
ficomps
and
loope
or
adc
call
mov
mov
repnz
jg
insl
dec
stos
nop
std
stos
fldl
insl
xor
rorb
popf
sbbb
pusha
xchg
in
jmp
push
movsb
mov
mov
push
push
lea
test
jl
dec
movsb
mov
je
xor
mov
pop
movsl
sub
mov
mov
dec
movsb
xor
and
jne
in
test
aad
mov
jmp
mov
pop
sub
sub
int3
mov
insb
out
sub
jl
inc
cld
xor
dec
mov
add
ret
addr16
push
dec
loop
arpl
bnd
jg
mov
imul
cmc
lds
movsl
ds
mov
jno
and
add
sarl
ds
cmpsl
lock
jo
std
dec
add
jno
ds
push
or
mov
sub
mov
push
adc
shrb
data16
lret
jle
pushf
insl
loop
mov
sti
arpl
fdivs
imulb
mov
loope
hlt
push
cmpsl
sarb
fs
mov
mov
rcrl
bound
jbe
scas
xor
daa
mov
repz
les
fstps
cmpsb
mov
and
pop
je
shlb
dec
cmp
fcompl
xor
jmp
cmp
imul
test
mov
pushf
add
jae
test
add
daa
movsl
lahf
loope
fistl
je
cwtl
ljmp
mov
outsl
in
ret
fcomp
stos
cmpsl
rcrb
loope
mov
arpl
sbb
jnp
sub
jmp
pop
xchg
hlt
daa
into
mov
push
je
lahf
and
in
aaa
cmpsb
xor
cli
imul
or
ret
cwtl
pop
cwtl
ss
inc
lret
dec
mov
movsb
clc
sbb
adc
fbld
fwait
in
or
or
insb
insb
lret
sbb
mov
dec
pop
repnz
push
xor
xor
add
repz
sbb
pop
je
pop
repz
xchg
sbb
insl
dec
aam
adc
aaa
nop
imulb
jnp
rorb
lods
cs
mov
jne
sub
jne
and
mov
sbb
fadds
out
or
jbe
mov
push
mov
sahf
repnz
lds
inc
rcrb
xor
popf
sbb
cmp
lds
or
and
popf
jle
pop
outsl
xchg
xchg
pop
xchg
or
xchg
or
sti
es
stc
sbb
xchg
xor
testb
mov
jbe
xor
sub
add
and
push
mov
xchg
pusha
xchg
jg
out
and
ret
add
bound
or
cli
mov
mov
add
mov
xchg
mov
mov
aam
mov
mov
ret
cmpsl
jae
push
pop
out
or
stos
lret
call
push
or
pushf
lods
sub
push
lock
call
jl
in
push
out
sti
push
cmp
mov
pop
leave
and
pushf
jge
sahf
mov
fbstp
or
bound
mov
lock
jg
jns
imul
mov
ret
test
lahf
sbb
sti
pop
adc
push
fstps
negl
xchg
repnz
mov
jle
js
jae
mov
inc
mov
pusha
push
cmp
outsl
imul
in
xor
xor
movl
and
push
sub
push
rorl
call
xchg
mov
sbb
mov
push
cmp
pop
sub
ljmp
mov
addr16
pop
jo
push
sbbb
jle
jmp
add
push
loop
dec
es
or
mov
pop
pop
sbb
fld
loopne
dec
aas
shl
mov
rclb
lods
dec
out
push
add
ret
jb
cmp
add
pop
sbb
subb
imul
and
cmp
jae
pop
cwtl
dec
shl
inc
ret
je
adc
mov
cmp
cli
arpl
stos
rolb
inc
fs
sbb
les
in
dec
and
jg
js
jne
or
xchg
out
push
mov
jmp
sarl
ret
jno
scas
push
xchg
xor
jns
jl
mov
or
testb
mov
out
or
out
sbb
stc
lods
xchg
push
shll
dec
cmpsl
sub
popf
push
xchg
inc
int
ds
or
fisubrs
pop
cmp
inc
jle
push
sbb
lock
popa
push
jmp
lret
in
out
ja
cmp
mov
aad
das
int
dec
dec
and
fmull
xchg
push
jns
add
push
int3
fimull
fsub
mov
data16
je
subb
dec
and
jl
dec
outsb
sbb
pop
fldl
cmp
xchg
dec
pushf
fdivrp
inc
cmpsl
test
es
ds
mov
xchg
lret
stc
sub
inc
push
mov
dec
lahf
jno
xor
repz
mov
shll
pop
adc
fists
mov
mov
adc
data16
push
xchg
push
sbb
ljmp
pusha
pop
idivb
jo
mov
lcall
lods
lret
js
insl
adc
push
adcb
repz
cmp
mov
jmp
pop
daa
lock
xor
cmp
inc
addr16
add
cmpsb
pop
dec
std
jp
test
jns
gs
and
inc
push
pop
push
sub
jnp
and
out
or
adc
jne
mov
jns
movsl
pop
cmp
push
sbbb
pop
push
mov
cmc
ljmp
test
jb
push
in
or
push
mov
mov
das
xlat
inc
jmp
aas
shlb
push
insb
fildl
sbb
pop
push
adc
popa
cwtl
fdivl
stos
out
adc
movsl
jns
sub
sub
cmp
aas
mov
mov
mov
mov
lods
jecxz
fdivrl
and
inc
pop
cld
sub
xchg
fnstcw
jne
or
lss
in
xchg
lods
xor
bound
mov
adc
test
xor
xchg
jbe
outsb
xchg
pushf
into
bound
out
rclb
fnstenv
push
xor
and
mov
push
call
inc
mov
dec
sahf
repz
out
xchg
lret
cmpsl
test
cmp
or
scas
mov
fnsave
mov
push
ret
inc
subl
mov
pop
leave
cmp
jno
mov
adc
stos
insl
sbb
cs
xchg
xchg
rclb
dec
decb
mov
xor
outsb
iret
std
mov
push
addl
sarb
cltd
mov
scas
xor
in
jne
add
pop
loop
push
pushf
xor
leave
mov
hlt
repz
test
insb
sub
iret
push
sbb
inc
loop
push
mov
imul
jae
jnp
pop
pop
dec
mov
shl
ljmp
ljmp
adc
sbb
insb
mov
and
iret
cwtl
inc
popa
loope
stc
pop
aam
iret
or
pop
stos
jb
mov
add
repnz
lods
dec
mov
push
jmp
je
mov
sub
dec
call
ljmp
mov
nop
loope
pushf
ljmp
cmp
push
adc
cwtl
cs
mov
dec
das
cld
adcb
popa
pop
rcrl
and
jmp
jg
push
pushf
xchg
ret
jl
xchg
jecxz
pop
push
int
clc
mov
out
in
cmp
sti
sar
sbb
sti
leave
add
outsl
push
adc
pop
adc
pop
ja
mov
int
scas
outsl
sub
lods
repz
push
and
sub
mov
cmpsl
add
cwtl
xchg
pop
push
dec
mov
xchg
icebp
inc
pushf
fwait
ljmp
push
jmp
lea
fnsave
pop
std
push
test
movsl
pushf
sub
stos
and
jae
push
rorb
cmp
popf
cmpsb
or
xor
pop
adc
fdivr
imul
movsb
sub
insb
loopne
xlat
adc
dec
sahf
int
das
mov
test
stos
stos
mov
adc
jo
jae
mov
xchg
jmp
fidivs
jle
pop
das
popa
inc
in
jo
cli
jp
dec
push
je
mov
adcb
xor
jbe
fbstp
mov
cmp
mov
cmp
stos
xchg
push
pop
adc
mov
cli
pop
push
jecxz
mov
sahf
fs
inc
xchg
mov
cwtl
sub
cmp
popw
adcb
mov
ficomps
pop
dec
push
add
clc
ss
movsl
test
xchg
lea
fldcw
sbb
ret
and
das
cli
xlat
sub
or
pop
fnstcw
stos
insl
pop
loope
sbb
repnz
mov
jg
lods
cmpsb
fildl
in
mov
fwait
mov
dec
and
insb
into
int3
push
fstpt
xchg
daa
mov
ja
subl
aaa
xchg
gs
xchg
and
std
out
idiv
test
or
xchg
mov
push
arpl
xlat
jp
pusha
xor
test
arpl
sub
mov
mov
cmp
jecxz
mov
sarb
mov
and
lretw
mov
push
dec
add
mov
add
add
test
lret
mov
pop
enter
ljmp
and
pop
or
iret
or
inc
out
lock
push
inc
or
jecxz
cmpl
dec
repnz
inc
mov
faddl
out
inc
xlat
xchg
in
outsb
push
imul
mov
dec
lods
push
stc
xor
push
inc
std
inc
or
and
test
pop
test
call
fisubs
test
repz
fldt
mov
add
popa
mov
push
xor
pop
add
stos
dec
dec
cltd
loope
dec
jge
je
pop
cltd
pusha
push
pop
dec
adcl
fadds
sbb
sub
aad
test
sub
cmp
mov
repnz
lret
or
arpl
dec
idivb
xchg
ja
jg
mov
or
or
mov
mov
push
cmp
mov
fldenv
aam
inc
gs
fmuls
cmp
pop
jo
into
aas
sbb
stc
dec
sub
repz
popf
pop
repz
mov
sbb
jge
test
out
jg
outsl
and
pop
lcall
or
xor
repnz
lock
dec
push
xor
push
mov
repz
dec
xor
outsl
mov
or
nop
push
adc
xor
dec
mulb
jmp
adc
inc
push
pusha
shrb
aaa
test
sbb
imul
lds
mulb
shrb
roll
mov
pushf
pop
pusha
ret
add
mov
jle
add
cld
out
add
aam
shll
sbb
test
fstpt
pop
es
push
les
jns
in
inc
xchg
pop
or
movsl
sti
sbb
add
test
and
ljmp
repnz
pop
movsb
push
int
lods
push
pushf
add
sarl
sub
hlt
adc
or
icebp
push
mov
cmpsb
subl
inc
pop
ds
add
or
mov
mov
xlat
out
test
or
mov
arpl
je
in
pushl
and
es
and
negb
std
jmp
push
enter
mov
insb
fisubrs
test
push
xor
pop
iret
imul
stos
xor
out
inc
sub
cli
std
sub
loopne
int
loop
push
adc
outsb
sub
cmc
shlb
xchg
mov
mov
or
mov
fdivl
out
dec
cmp
scas
ljmp
loope
inc
outsb
sub
rclb
cmpb
inc
sarb
sbb
sbb
mov
push
popf
inc
xchg
adc
and
movsb
enter
push
shll
jb
in
cmpsb
outsb
adc
fwait
mov
sub
add
das
rclb
scas
outsl
mov
cwtl
pop
lcall
out
arpl
xchg
dec
lods
rcll
push
ds
mov
daa
jp
cltd
adc
sub
in
push
add
xor
mov
jns
enter
stos
jbe
add
xor
stc
mov
jge
fdivrs
out
cs
cmc
or
xchg
aad
rcll
cmp
repnz
rorl
dec
les
sub
sub
movsl
inc
pushl
add
xor
test
aaa
lcall
pop
cmp
arpl
pusha
bound
xchg
pop
and
int3
outsl
insl
ss
dec
xchg
jnp
lret
lea
fwait
mov
mov
xchg
loopne
test
lods
pushf
add
fnsave
aas
mov
cwtl
pop
lcall
movsl
frstor
out
orl
jmp
push
ret
out
mov
cmp
pop
shl
sub
xchg
hlt
bound
sub
lcall
jle
out
xor
arpl
push
pushf
push
les
loopne
dec
pop
repz
xchg
outsb
aad
dec
test
push
jnp
lock
push
sbb
xor
pushf
shll
cmpsl
repnz
adc
sub
addb
inc
mov
ds
nop
loop
jmp
jle
pop
push
rorl
mov
sub
iret
lahf
xlat
xchg
mov
cmp
lret
pushf
jne
push
lds
mov
loope
lret
dec
leave
fisubrl
pop
fs
fimuls
add
mov
ret
mov
jecxz
mov
sarl
dec
mov
ljmp
das
sub
pop
xor
movsl
jle
aad
push
add
push
fs
test
mov
mov
insb
lret
scas
and
lock
loop
sbb
or
loopne
mov
adcl
cmp
pop
lcall
outsb
mov
enter
cltd
cmp
pop
mov
push
cltd
adc
pop
xadd
sub
in
sbb
add
xchg
jle
push
gs
sub
sbb
into
add
int
push
clc
aas
addr16
pop
gs
push
mov
add
mov
jne
mov
jne
cld
mov
cmp
test
popa
in
test
lret
push
sbb
cmp
sbb
call
push
lock
jnp
cmovge
jmp
jae
rcll
push
aad
dec
jg
sub
inc
mov
sub
mov
imul
xor
jbe
jmp
inc
aam
dec
xor
aaa
mov
in
add
add
mov
mov
xchg
sub
cld
jbe
pop
daa
wrmsr
push
in
scas
jmp
lret
mov
repz
or
lret
mov
fs
push
and
outsl
xor
mov
and
gs
addr16
jno
insl
inc
les
daa
int
orb
mov
pop
pop
mov
hlt
cmp
aad
repz
pop
mov
push
dec
mov
ret
push
dec
mov
lahf
and
pop
cmp
cmpsl
inc
mov
cltd
xchg
jg
out
xor
and
lret
xor
adc
mov
pop
vpxor
sahf
jno
cltd
cmp
sbb
clc
lods
sub
xor
sub
dec
mov
sub
add
or
aad
das
mov
cmp
test
adcl
fdivl
cwtl
mov
or
xor
aaa
pop
mov
cli
ljmp
xor
insb
xchg
dec
pop
fwait
jne
add
mov
mov
mov
int3
add
or
dec
push
cmpsl
mov
out
adc
arpl
add
decl
sbb
cmp
mov
in
imul
outsb
ret
sub
xchg
mov
aaa
and
pop
cltd
jge
add
and
adc
je
or
pop
aaa
outsl
xchg
ret
xor
out
and
repnz
xor
and
movsb
out
adc
in
sbb
add
pop
dec
mov
je
dec
fisttps
push
mov
dec
ret
idivb
inc
push
jmp
popl
mov
adc
insb
adc
sub
shlb
xchg
insb
daa
xor
xchg
xor
add
arpl
mov
dec
xor
imul
sub
cmp
adcb
jp
push
stos
push
jo
xlat
mov
inc
cmp
js
xor
loop
dec
movsl
test
ret
mov
sbb
imul
movsl
push
lea
jle
mov
test
or
push
mov
mov
pop
mov
pushf
mov
ss
idivl
testl
push
fidivl
mov
push
add
pop
mov
jne
cli
nop
into
sub
jp
out
imull
test
or
ja
inc
movb
fstpl
mov
sbb
addr16
movsl
in
shl
push
or
jmp
outsb
loop
imul
pop
movsl
inc
inc
jmp
stos
les
add
aad
rclb
divb
insl
mov
and
pushf
fildl
fprem
inc
hlt
cld
imul
or
pusha
jg
sub
jne
les
int3
jne
popf
mov
aam
jns
xchg
sub
hlt
cmp
movsl
cltd
add
setle
mov
mov
xor
or
inc
scas
mov
addb
sbb
jl
lret
mov
add
in
xchg
cli
rcrl
or
push
sbb
xchg
addr16
push
sub
sbbl
loop
popa
stos
daa
mov
and
int
add
pop
jne
out
jl
pop
adc
outsb
lret
dec
loop
adc
mov
hlt
sub
mov
testl
dec
test
sahf
ret
adc
leave
sub
fwait
mov
jnp
lea
push
lret
lock
xor
out
stc
pushf
dec
test
dec
mov
pop
hlt
cld
mov
sbb
in
push
pusha
lret
xlat
popf
mov
popf
std
sbb
lret
fmull
add
sub
push
mov
and
push
ret
imul
out
call
sub
cmp
inc
stc
call
repnz
hlt
dec
leave
xchg
push
int
jge
aad
call
rcrl
and
test
out
mov
aas
stc
pop
and
pop
jg
mov
adc
mov
and
lea
aas
push
pop
pop
inc
sbb
lea
and
cmp
test
xor
jg
shrb
add
repnz
adc
lock
inc
mull
dec
mov
sahf
dec
sbb
ret
lcall
les
push
inc
mov
hlt
sti
stos
dec
pop
shlb
dec
mov
jno
push
add
repz
sbb
sbb
orb
xor
push
aas
xchg
jbe
mov
xor
enter
insl
ret
push
lods
neg
pop
jge
sub
sub
xor
ljmp
repz
hlt
inc
mov
and
insb
add
jle
add
pop
cmpsl
xor
jo
pop
test
fs
sti
jae
and
lods
pushf
cmp
jle
inc
in
and
xchg
ljmp
inc
into
test
jg
stos
loop
add
push
cs
push
dec
ror
dec
xchg
jg
daa
inc
adc
cmc
sbb
or
mov
es
clc
bound
dec
xchg
mov
cmp
xor
pop
pop
ljmp
into
sub
sbb
pop
cmp
addr16
cmp
rclb
loop
out
adc
mov
dec
pop
ret
sbb
pop
inc
cmpsl
fdivrl
cmpsb
out
outsl
int3
fstl
js
scas
inc
push
dec
add
cs
enter
push
jae
xchg
jne
sub
add
lods
es
test
mov
clc
mov
cltd
mov
test
jne
fcmovbe
adc
inc
xchg
outsb
inc
sub
xor
test
ret
sub
dec
shl
pop
sti
add
push
inc
inc
cmpsb
lock
or
xchg
push
sbb
loop
or
cmp
adc
dec
mov
dec
and
add
ret
jl
ficomps
push
stc
loope
lret
repz
aam
repz
test
mov
mov
push
mov
push
mov
or
insb
loop
adc
dec
or
push
jmp
mov
adc
lahf
cmpsl
add
dec
inc
popa
leave
movsl
or
add
push
mov
xchg
pop
push
ret
push
je
repnz
cmpsb
popa
jno
popa
sarl
inc
jmp
out
in
xlat
or
test
stc
push
and
xchg
mov
outsl
cmpsb
dec
ret
or
lcall
and
out
loop
or
or
fbstp
bound
jae
fwait
mov
ljmp
mov
hlt
mov
cmp
and
roll
aam
mov
out
adc
cmpsl
sub
bound
jp
loope
in
jnp
enter
dec
fistl
aas
cmpl
dec
mov
pop
push
xor
xcrypt-cbc
cmpsl
xchg
adc
add
mov
fildll
push
xsavec
mov
mov
movsl
xchg
mov
jae
loop
push
xchg
inc
dec
xor
xor
mov
pop
scas
inc
sti
lods
loope
int
leave
shrb
lods
push
sbb
lods
arpl
inc
add
ljmp
and
push
jo
adc
mov
sbb
sbb
sbb
dec
movsl
mov
lahf
dec
movsb
mov
sbb
loopne
in
movb
inc
mov
adc
dec
push
dec
mov
jnp
mov
mov
sbb
mov
xchg
jp
mov
ja
jle
pop
shlb
xor
mov
fimuls
jae
sub
insl
lahf
jge
xchg
dec
repz
push
movsl
fs
lret
nop
mov
or
jge
pop
loopne
div
into
xchg
push
inc
fstpl
in
gs
mov
testl
icebp
mull
cmpb
xchg
lret
add
out
mov
sbb
in
or
enter
sbb
cwtl
mov
and
popf
leave
cltd
enter
mov
mov
in
dec
xchg
int3
fsubrp
jg
insl
jl
cmp
and
pop
xor
adc
sti
xchg
clc
std
call
iret
je
ret
rep
cmp
shlb
xchg
repz
lock
pop
stc
sbb
jb
sarb
jecxz
popa
cmp
sbb
fbstp
in
adc
je
or
sbbb
adc
adc
add
scas
jo
sub
mov
dec
lcall
jl
js
fidivrl
jl
mov
dec
lret
inc
outsl
popf
mov
add
lret
ss
push
mov
int3
push
inc
cli
mov
or
jge
adc
sarl
pop
push
or
repz
push
fucom
or
lea
pusha
jno
popa
fcompl
sub
sub
rclb
sbb
mov
or
popf
testb
loopne
mov
call
mov
lcall
mov
adc
xchg
dec
jge
mov
cld
pusha
clc
in
hlt
xchg
jo
and
sbb
sbb
cmpsl
iret
or
add
adc
ficomps
cmc
push
andl
andl
push
dec
nop
pusha
loope
int3
add
or
scas
jns
pop
adc
sbb
jae
popf
xor
insl
inc
ret
fisttpl
adc
and
mov
or
fcomps
clc
sub
lea
mov
fildll
inc
aas
icebp
mov
pop
das
jnp
in
add
add
push
dec
cs
sbb
add
inc
pushf
out
pusha
and
iret
shrb
xor
lcall
xchg
fidivrs
dec
shlb
sbb
and
pop
mov
insl
stc
fwait
xchg
es
mov
xor
jp
jmp
cld
xchg
mov
mov
clc
stc
sub
xlat
std
int
cs
dec
je
mull
scas
sbb
add
sbb
cmp
out
xchg
push
lods
and
mov
xor
outsb
add
mov
xor
cmp
or
mov
push
push
repnz
cli
mov
in
out
scas
pop
push
mov
sbb
xchg
data16
inc
loopne
movsl
movsl
insb
fisttps
push
add
pop
and
mov
cmpsb
mov
and
pop
cwtl
jle
adc
in
mov
xor
fldt
fstps
idivb
sbb
xchg
dec
mov
push
xor
inc
les
outsb
fcoms
lea
cmp
test
and
sbb
mov
aaa
adc
ret
xchg
dec
cs
jg
xor
jne
xor
iret
repz
xchg
test
mov
loope
add
inc
push
in
push
movsl
lock
dec
push
jp
scas
outsb
out
mov
cmpsl
jno
lret
ja
inc
sub
rolb
ds
adc
aaa
in
pop
lcall
in
leave
sti
aad
pop
sub
jne
jb
sahf
add
popa
pop
pop
jo
incl
rcrb
addr16
push
cli
clc
xchg
xor
inc
dec
leave
scas
or
mov
lcall
push
xchg
dec
xor
aad
cmpsl
cli
xchg
xchg
mov
cld
subb
sbb
fdiv
xchg
iret
iret
nop
loope
mov
cmp
flds
fisttpl
jg
xchg
or
add
in
xchg
test
jne
mov
adc
cmp
je
adc
mov
lahf
daa
shr
push
push
lock
add
jmp
jge
fcompl
cmp
sbb
sub
loopne
inc
ljmp
or
jg
dec
xchg
int
rcrb
mov
lds
push
divb
aam
xor
jo
loope
lret
pop
xor
scas
orb
cmp
aam
push
clc
jo
in
mov
int
push
inc
orb
adc
lods
imul
pop
add
xchg
out
xor
jbe
hlt
jp
or
xchg
pop
mov
movsl
push
loop
or
and
aam
xchg
sarb
outsl
outsl
push
or
nop
push
in
mov
fwait
pusha
inc
pop
add
sub
sbb
add
mov
and
push
sti
loop
test
mov
ljmp
imul
lods
in
dec
sub
xor
push
stos
sarb
mov
or
cmpb
mov
xlat
mov
jge
pop
jl
lea
xchg
pop
push
sub
fstps
testb
daa
sarl
sub
in
jne
jl
xor
fbld
bound
xchg
and
ret
aad
das
fsubrp
mov
dec
cwtl
lret
sbb
fadd
lret
sti
push
les
xchg
add
stos
inc
push
mov
das
mov
adc
or
into
adc
xor
lods
mov
push
push
in
mov
pop
mov
stos
js
fidivrl
mov
mov
jmp
sbb
in
push
jl
shl
inc
idiv
lcall
pop
mov
ljmp
std
mov
jl
dec
pop
mull
stos
push
mov
pop
adc
mov
popa
pop
push
fisubrs
out
pop
mov
pushf
xor
fwait
xor
out
xor
jp
lret
call
cmp
sub
lahf
enter
lock
out
cli
cltd
xchg
jae
adc
orb
adc
add
xor
pop
in
cmc
pop
cmp
inc
mov
iret
xchg
sbb
inc
push
add
in
pushf
cwtl
cli
xchg
cmp
mov
outsb
cld
stc
enter
sbb
adc
dec
out
sub
lea
into
fidivl
rorb
pop
ret
pop
movsb
cld
pop
adc
je
insl
pop
test
adc
jno
cmp
lds
test
into
addr16
gs
js
insl
adc
cld
or
cmc
rcr
xchg
pop
shll
mov
pop
aam
or
fs
jb
mov
lock
push
xchg
lds
jnp
mov
daa
push
adc
sarl
xchg
sar
fsubr
fmuls
out
adc
dec
push
insl
insl
ljmp
out
int
stos
mov
addr16
loop
jns
lret
cmpsl
sahf
mov
cld
mov
xorb
inc
and
mov
mov
mov
out
cmp
repz
push
das
push
add
inc
scas
sbb
or
fcmovnb
mov
repz
mov
std
add
jge
add
mov
cmp
sub
and
inc
lahf
jl
jne
cmpsb
jo
sbb
jbe
push
inc
rcll
inc
fiaddl
pop
jno
push
rcrl
sub
repz
lds
jnp
loopne
andb
dec
popa
xlat
dec
xlat
jecxz,pn
sub
out
and
mov
mov
mov
push
adc
pop
jge
and
mov
pop
jmp
sub
jp
pop
sbb
push
clc
loopne
call
int3
or
in
popa
jo
jge
pusha
testl
inc
mov
stos
cmpsb
push
sub
sub
mov
icebp
push
mov
dec
repnz
arpl
xchg
sub
not
testb
add
jl
xor
imul
lock
pop
dec
stos
out
out
in
adc
movsl
mov
rcl
mov
mov
pushf
cmpsl
jecxz
mov
repnz
clc
and
dec
rcrb
fisubrs
cmp
repnz
sbb
inc
pop
arpl
xchg
sbb
lds
cmp
inc
adc
push
sbb
imul
stos
or
pop
fidivs
dec
cltd
inc
push
scas
jp
sub
shrl
and
dec
and
mov
mov
notb
call
mulb
jl
addr16
push
stos
mov
clc
sbb
out
scas
es
inc
jb
int3
hlt
inc
or
sbb
jnp
mov
outsb
mov
add
testb
int
dec
cltd
cld
lret
in
divb
sbb
sbb
je
test
jne
aas
divl
mov
push
ss
fadds
xchg
lds
xor
iret
sbb
ja
sub
push
adc
jae
jbe
adc
mov
dec
add
stos
xchg
xchg
mov
fnstenv
lea
fmull
test
sbb
sbb
xchg
xchg
sbb
or
xchg
cmp
shrl
popa
insb
lods
add
jae
push
dec
mov
fidivs
mov
push
inc
inc
dec
sbb
mov
lret
dec
dec
xchg
inc
addl
arpl
dec
mov
ret
xor
dec
adc
or
movsl
mov
addr16
shll
test
inc
je
mov
iret
inc
and
shrb
xor
loopne
jge
imul
inc
call
stos
movsl
loopne
jmp
inc
adc
nop
push
pop
push
inc
aad
push
testl
icebp
loop
inc
push
xchg
enter
and
add
cmpsb
bound
frstor
push
jmp
insl
movsl
outsb
or
mov
fnstenv
mov
fnstsw
sbb
fwait
xor
es
cmc
dec
xchg
push
pop
jne
inc
xor
mov
jg
roll
cmp
icebp
cmpb
mov
mov
into
dec
fmull
inc
int3
push
lds
scas
or
jae
pop
lcall
push
xchg
cmp
shr
mov
or
xor
in
icebp
inc
rclb
jno
add
decb
pop
cmp
ja
inc
push
mov
dec
inc
test
lret
add
sub
mov
mov
jecxz
popa
loop
stc
rcrb
loopne
cmp
outsb
inc
fbstp
cmp
mov
jnp
adc
mov
and
inc
cltd
outsl
adc
out
int3
stc
and
pop
jle
das
pop
int3
fiadds
xor
aaa
pop
je
inc
je
push
imul
jmp
mov
push
cmpsl
test
mov
xchg
int3
andb
xchg
pop
out
and
add
or
adc
sub
dec
or
jo
xchg
jb
popa
mov
pop
push
paddusw
mov
cmpsl
shlb
imul
xor
rcll
jnp
je
mov
fidivs
jl
inc
imul
sub
inc
jns,pt
cmp
dec
scas
sub
insl
or
fmul
popa
mov
adc
rorl
and
fcomps
jl
idiv
ret
scas
std
out
fmuls
mov
mov
repnz
arpl
jl
xchg
subps
ds
in
or
pop
fidivs
and
lahf
inc
mov
xor
sbb
push
es
aaa
iret
and
mov
lods
sahf
and
pop
sbb
movsb
xor
cltd
jo
ja
outsb
jbe
cmpsl
pop
test
jbe
push
mov
push
inc
add
cmp
jp
repnz
mov
jp
enter
fisubrl
lock
lahf
hlt
lret
cmp
int
mov
pusha
les
addr16
sub
push
jno
shl
mov
sbb
sarb
mov
repz
es
outsl
ds
push
cmp
mov
pop
xchg
xchg
popa
or
hlt
sub
mov
stos
xor
push
jne
inc
xchg
and
pusha
jg
pop
pop
nop
scas
stos
lret
int3
testl
push
xchg
push
lret
shll
xor
ljmp
js
or
stos
sbb
pop
or
stos
hlt
dec
shrb
sbb
jns
lods
insb
orl
cmp
jge
daa
sub
mov
jae
inc
test
sbb
mov
mov
and
dec
or
sub
rorb
push
ret
dec
mov
adc
push
push
rcrb
xor
lods
adc
sub
fdivp
js
jae
lods
in
mov
test
jb
daa
xchg
aad
nop
cld
pop
fwait
xor
add
jg
xor
repnz
sub
inc
ja
pop
rcr
dec
mov
dec
pusha
pop
and
pusha
mov
xadd
fwait
imul
les
out
outsb
adc
ffree
fs
inc
mov
int3
jge,pn
inc
icebp
das
loop
cmc
pop
push
or
imulb
movsl
fsubr
loop
in
mov
inc
jno
or
and
fiadds
adc
cmp
xor
std
mov
cld
pop
fsubr
cmpl
sub
imul
std
fs
inc
pusha
cmpsl
mov
xor
faddp
cmpsb
int
xchg
andl
dec
and
cmc
in
movsb
stos
mov
push
adc
nop
jne
les
mov
xor
mov
cmp
add
insb
aam
push
cld
icebp
ret
jp
lods
pop
sbb
jnp
inc
mov
ja
xchg
sub
xchg
jae
rcrl
pop
adc
loopne
rorb
inc
gs
mov
xor
not
mov
lret
sbb
and
pop
push
idiv
fisubrs
adc
sahf
lret
shr
frstor
and
or
sbb
xor
leave
inc
pop
lret
xor
adc
push
xchg
sbb
mov
mov
pushf
call
pop
ja
xchg
lret
movb
jnp
jbe
jge
jl
js
out
push
cli
sub
jo
lcall
orl
lret
je
adc
sub
fistl
dec
mov
es
leave
data16
stc
jmp
insb
adc
adc
pusha
xchg
xchg
pusha
and
xchg
out
lock
hlt
and
shlb
add
fs
je
fst
test
xchg
jecxz
jmp
mov
inc
gs
inc
cmp
adc
jns
hlt
mov
outsb
pop
lods
jnp
sub
xchg
ljmp
loopne
jge
aad
inc
and
sti
xor
adc
arpl
xor
xchg
sbb
cmp
adc
lods
arpl
repnz
mov
xor
rclb
jp
int
inc
mov
pop
pop
pushl
stos
cltd
xchg
push
jp
push
sub
in
test
ret
scas
pop
inc
call
dec
mov
push
jmp
mov
leave
xchg
push
cmp
les
sbb
xchg
xchg
ss
inc
out
hlt
mov
je
test
mov
push
fcoml
in
and
loopne
push
out
insl
pop
ret
outsb
loope
push
movsb
inc
mov
mov
pop
mov
rorl
fs
mov
push
mov
scas
jp
sbb
popf
cli
ljmp
mov
mov
sbb
push
mov
pop
ret
mov
jae
mov
jno
inc
movsl
mov
and
lcall
out
mov
jbe
stos
lcall
jo
pusha
jge
cmp
shlb
sbb
push
or
cs
cwtl
inc
jp
pop
das
push
sub
addr16
ss
pop
sub
push
mov
std
movsl
lcall
jmp
ret
jae
adc
mov
jo
popf
stc
cs
push
or
adcb
test
mov
and
loope
pop
pushf
dec
pusha
pop
js
or
push
cmp
or
jnp
aaa
test
push
inc
sub
rcrl
fidivrl
cmp
dec
out
push
insb
into
push
sub
mov
inc
fsubl
loopne
inc
pushf
arpl
fists
pop
push
xor
dec
push
mov
fwait
punpckhbw
xchg
icebp
sar
sti
scas
sub
sbb
js
jbe
jno
add
sub
jg
jmp
dec
hlt
push
test
in
mov
dec
or
cltd
pop
cmpsl
cmp
outsb
pop
call
xchg
imul
add
mov
loop
je
cmpsl
add
sahf
sbb
inc
add
test
cld
aad
fcmovbe
aas
sbb
mov
mov
shrb
jge
stc
rcrl
mov
adc
push
lock
jno
loope
orl
outsl
mov
xchg
stos
mov
fdivs
jg
int3
test
cmp
mov
mov
jle
fbstp
ljmp
push
sbb
add
es
or
aaa
aaa
sarl
xchg
dec
inc
mov
mov
sarb
push
cmp
dec
sbb
rorb
jb
data16
icebp
push
insb
jb
adc
sub
out
sbb
xchg
je
dec
sbb
ret
mov
jp
inc
scas
addr16
sti
imul
cmp
xor
or
jns
in
sbb
jno
aam
jmp
push
cmp
add
jno
sub
sbb
jb
in
addr16
jmp
je
mov
mov
js
outsl
sbb
cmp
insb
in
fimull
pop
je
arpl
inc
jnp
fwait
nop
addb
dec
push
shl
insl
lret
stos
in
add
enter
stos
xor
pop
jle
in
pop
lcall
pop
aam
adc
es
sbb
pop
sbb
test
xor
jnp
ret
mov
sbb
xor
std
xchg
orl
pop
fwait
sub
add
out
std
xchg
repnz
loope
mov
xchg
dec
push
shr
xor
addb
cmp
mov
mov
out
es
xlat
cld
jl
xor
fidivl
sbb
das
dec
push
dec
sbb
pusha
repz
lcall
test
mov
enter
push
fnstenv
int3
push
adc
xchg
mov
pushf
ljmp
test
sbb
pop
hlt
shll
shrl
xor
push
push
cmp
jb
je
ss
int3
cmpsb
dec
in
mov
push
andb
pop
jns
push
mov
lcall
lcall
xchg
push
xchg
lock
pop
std
mov
aas
test
pop
or
xor
adc
test
cs
insb
fmull
insb
into
cmpsl
push
jmp
movsl
xor
add
cmp
in
fs
xor
jg
and
push
sub
in
insb
jg
ret
out
stc
lret
jo
ret
jle
shr
outsl
movsl
pop
in
jp
push
or
in
cmp
call
xchg
test
jecxz
mov
fmulp
xchg
test
xlat
popf
add
pusha
and
dec
mov
add
jbe
pop
lds
pop
sub
add
pop
in
mov
lods
rorb
test
inc
dec
mov
pop
pop
insb
lods
or
or
and
adc
pusha
add
push
insl
mov
gs
jae
stc
mov
into
xor
mov
dec
inc
je
jbe
dec
xchg
add
mov
pop
outsb
xchg
add
mov
xchg
jmp
mov
mov
jnp
movsb
pop
jb
js
enter
ljmp
fcmove
push
enter
nop
mov
dec
xor
push
adc
dec
out
dec
xorb
mov
xor
lea
das
lods
inc
test
leave
fcompl
dec
fstp
fcomps
push
add
xchg
popf
cmp
pop
scas
inc
pop
push
negb
iret
pop
push
pop
enter
out
adc
xorb
push
fstpt
push
pushf
aam
ss
in
xor
outsl
jge
daa
subb
lock
rcl
dec
ficoms
xor
lods
pop
inc
cwtl
test
das
sahf
lock
pushl
sbb
add
add
ss
xchg
mov
mov
add
pop
sub
cmpsb
dec
cli
and
add
dec
dec
push
add
out
jl
xor
push
int3
je
sti
das
int
mov
jo
in
sub
mov
scas
mov
or
sub
int
jb
adc
lods
shl
sbb
jl
or
lahf
dec
cli
scas
imul
adc
pop
mov
cli
pop
cld
add
pop
jecxz
enter
sub
mov
subb
lea
rclb
mov
std
pushf
jo
js
out
test
es
les
inc
and
in
fiadds
bound
shrb
or
push
xor
cmc
rcrl
and
test
adc
aaa
mov
shll
int
jae
in
adc
leave
add
xor
iret
sub
mov
pop
test
mov
push
and
cmpsl
stc
adc
jecxz
enter
mulb
pop
loop
shrb
sub
lret
aas
out
mov
ljmp
sbb
mov
pop
clc
push
mov
pop
or
lret
in
mov
inc
inc
xchg
xchg
fiaddl
push
or
push
ljmp
fcoml
fidivrl
inc
test
jns
test
dec
in
add
jno
push
loope
jp
notl
lods
mov
loope
pushf
xchg
aas
loop
stos
repz
xlat
fiadds
pop
pmaxsw
mov
test
jp
mov
dec
pop
ficomps
inc
shll
hlt
inc
icebp
enter
push
repz
pop
lcall
dec
xor
stos
pusha
adc
sub
xchg
push
hlt
ret
std
into
sub
xor
mov
push
sbbl
dec
sbb
scas
cmp
ret
mov
jg
outsb
sub
mov
xchg
pop
jg
sbb
out
insl
cli
add
lds
outsl
leave
jnp
inc
add
lahf
inc
cwtl
or
and
xor
add
outsb
adc
xchg
mov
fwait
pop
mov
sub
pushf
jmp
repnz
xchg
hlt
aas
imul
les
gs
adc
mov
sbb
inc
fsts
adc
mov
sub
pop
sub
inc
das
fldenv
xor
push
and
int
push
paddd
xchg
mov
fwait
cmp
stos
adc
sbb
insl
sbbb
loopne
jg
dec
insl
ja
popf
sbb
push
shlb
into
adc
lcall
jo
adc
dec
stc
stos
jns
mov
sbb
clc
int3
cmp
shl
negb
out
aad
or
lcall
pop
mov
in
test
lods
lret
xchg
hlt
jg
mov
es
jno
sbb
cmp
dec
and
movnti
inc
xchg
cmp
adc
jp
loope
aas
iret
push
xor
xchg
test
rcl
adc
icebp
inc
sub
mov
aad
mov
xorl
xchg
incb
mov
sbb
sbb
lret
insl
mov
sub
sub
mov
xchg
xchg
lock
lret
testl
pop
mov
xor
fildll
mov
andl
jl
arpl
push
pushf
nop
xchg
int
jecxz
cmc
fisubs
adc
call
sbb
arpl
dec
cmc
insb
xorb
mov
lods
jge
mov
std
and
iret
lcall
or
repz
add
cmp
xor
in
dec
cmp
std
dec
and
aad
sbb
cmp
cmp
setae
mov
sbb
xchg
call
cmc
push
sahf
stc
call
js
inc
pop
aas
cmp
sub
push
inc
xchg
lea
or
mov
test
in
sbb
adc
lods
lods
xchg
ja
out
daa
xor
clc
sbb
jp
lods
fnstcw
repz
mov
idivb
dec
mov
push
cmp
es
mov
out
or
dec
in
pop
pusha
and
repnz
std
jno
icebp
mov
push
add
cmc
adc
jge
mov
bound
lret
movsl
cmpxchg
lret
int
orps
pop
inc
jp
cmc
scas
sub
cwtl
jb
fldenv
lret
push
and
cmp
xchg
bsr
push
mov
xor
arpl
cmp
imul
mov
cmpsb
aas
lds
and
push
sub
or
in
addr16
movsb
movsb
mov
in
jge
pushf
cs
pop
add
cmc
push
jle
arpl
mov
xchg
movl
or
pushf
mov
add
ljmp
inc
test
push
jmp
xor
int
insl
out
sbb
pushl
dec
xchg
lret
cmpsb
stos
pop
popa
jno
mov
es
outsb
xor
test
out
out
adc
push
ss
mov
in
pop
mov
and
ljmp
dec
xchg
or
lret
inc
fsub
or
sub
fnstenv
jno
lret
pushf
and
xchg
pop
sarb
lcall
mov
imul
in
inc
adc
adc
mov
in
mov
ja
mov
sti
aaa
inc
ja
cmpsb
jbe
insb
mov
cwtl
imul
adc
sbb
sahf
sub
inc
out
repz
mov
dec
push
and
cmp
pop
clc
pop
ja
cmp
out
push
fildll
sub
mov
pop
lret
pop
push
test
adc
mov
add
xor
inc
loope
bound
sub
dec
mul
test
lods
rcrb
dec
scas
push
leave
xor
in
mov
shlb
cmpsb
inc
lea
pop
pusha
das
mov
cmp
jmp
sahf
push
xor
mov
jno
les
sar
popa
leave
data16
cmp
mov
or
fs
fcmovnb
cmc
popf
daa
jne
in
xchg
mov
fnstenv
popf
pop
nop
mov
push
push
popa
cmp
sub
add
loop
pop
movsl
xor
lea
out
push
rcrl
jnp
ds
adc
xchg
clc
push
push
push
shll
out
adcb
sbb
mov
fcomps
mov
divl
sbb
lods
orl
lret
push
movsl
add
pop
add
ljmp
lock
ret
mov
aaa
subl
outsb
mov
lds
push
cmp
push
mov
das
or
repnz
stos
push
rcrb
sbb
out
les
fidivl
dec
das
lods
xor
xchg
cs
xlat
push
pop
and
inc
jmp
sarb
rclb
mov
xor
sub
enter
or
fiaddl
push
into
cmp
mov
out
int3
jg
imul
push
in
adcl
hlt
or
jecxz
out
in
loopne
shlb
push
dec
dec
out
inc
cmpb
sarb
add
data16
xchg
mov
dec
bswap
lea
pop
fwait
icebp
popf
pop
mov
rol
pushf
sahf
dec
data16
mov
in
and
xor
ficompl
call
mov
lret
push
add
das
lret
fcoml
shlb
fdiv
dec
cwtl
enter
cs
pop
mov
sbbb
ss
cld
inc
sahf
ss
mov
addb
arpl
cwtl
mov
pop
nop
into
addl
arpl
mov
jb
inc
loope
lret
dec
arpl
xchg
das
inc
int
add
in
mov
rol
aad
or
mov
loop
adc
xorl
popf
popf
pusha
adc
clc
adc
or
jge
sbb
icebp
or
and
movsl
lods
sub
dec
sbb
lret
sub
mov
xor
test
repz
leave
lcall
mov
pop
js
aam
adc
or
inc
neg
out
out
sbb
push
xchg
cmp
mov
mov
popa
insb
mov
rcrb
cmp
mov
clc
inc
add
sbb
jbe
cli
mov
sbb
imul
movsl
mov
inc
mov
jmp
int3
mov
adc
ja
cli
out
mov
adc
xchg
stos
popf
sbb
mov
inc
stos
pop
xchg
add
sti
dec
lcall
rorl
or
add
out
adc
dec
rol
or
jb
sub
pop
xor
enter
movsb
loope
imul
pop
cltd
sbb
jb
les
adc
outsb
push
std
sub
pop
pop
fisttps
jno
or
in
andnps
dec
xchg
pop
push
pushf
cltd
fbld
dec
add
mov
xchg
stos
mov
adc
push
stc
sbbb
in
int3
test
pop
call
cltd
pop
scas
scas
push
pop
icebp
cwtl
int
add
xchg
jg
in
inc
pop
hlt
pop
pushf
inc
or
push
icebp
lret
sbb
in
and
cmp
push
xlat
and
pop
cmp
pop
sbb
nop
mov
mov
and
mov
jne
add
xor
iret
imulb
jle
cmp
scas
icebp
push
in
dec
rclb
bound
mov
pop
and
lock
inc
out
fldenv
nop
pop
inc
push
stc
repnz
aam
lods
mov
pusha
mov
xlat
adc
push
mov
mov
mov
sbb
mov
out
outsb
add
mov
hlt
mov
mov
jb
popf
push
sbb
pminub
or
cmp
fs
mov
xor
xor
lds
shr
enter
push
cwtl
inc
or
repz
jne
dec
mov
or
jecxz
push
xchg
inc
inc
mov
cs
push
push
sarl
aas
sub
pop
call
mov
pop
insb
test
sub
and
or
push
push
dec
mov
imul
xor
jno
aaa
ret
mov
fiaddl
inc
push
xor
insl
repnz
push
loopne
sub
loope
mov
jns
add
test
loope
adcl
cmp
xchg
add
movsb
adc
mov
xchg
push
dec
ret
insl
xor
sub
inc
lea
inc
call
movups
cmp
in
sbbl
push
rcl
call
lret
out
adc
pop
fstpt
mov
ret
or
pusha
jo
push
jge
dec
lock
push
cmpsl
idiv
adcl
int
inc
mov
mov
add
jle
scas
clc
sbb
mov
mov
stos
ja
mov
pushf
pop
jecxz
ret
adc
lds
mov
js
jmp
add
mov
fmuls
push
jg
sub
mov
sbb
xorl
fimuls
cmc
pop
cs
mov
or
pop
enter
jl
movsl
into
in
sbb
loopne
sbb
dec
orb
pop
adc
dec
xchg
aam
cli
movntq
into
test
stos
jge
daa
jno
fisubl
jle
mov
je
sbb
xor
cs
scas
mov
mov
dec
xor
sti
mov
ret
push
leave
cmpb
push
jl
mov
int3
sbb
add
mov
rcr
fisubrl
or
addr16
call
das
ret
stos
add
shr
fwait
scas
repz
inc
test
das
xchg
push
dec
xor
jb
jecxz
mov
cmp
int3
adc
jo
mov
push
xor
mov
mov
aad
mov
cs
outsb
sub
cmp
mov
sbb
push
test
inc
or
cmp
mov
jecxz
lret
cmp
jp
jns
scas
push
adc
lods
rcl
out
into
in
loop
aad
out
je
outsb
inc
mov
aaa
rorl
jecxz
insb
mov
jg
bound
scas
jmp
sub
out
gs
pop
pop
pushf
inc
rcll
xchg
push
add
cli
adc
lds
sub
xchg
cmpsl
mov
scas
loope
and
jg
mov
xchg
xchg
mov
loop
sub
cmp
push
mov
dec
add
mov
pusha
add
mov
adc
adc
xor
out
clc
sbb
push
clc
mov
mov
xor
pushf
cld
mov
daa
loope
fsub
mov
push
mov
dec
push
and
mov
cmpsb
shl
js
ret
sarl
lcall
mov
fwait
mov
inc
inc
mov
xchg
push
inc
icebp
jl
fists
xchg
arpl
dec
inc
xchg
mov
and
sbb
shll
push
jg
push
xor
aas
push
cmp
ss
cmpsb
clc
jae
adc
sub
aad
imul
loopne
xlat
push
arpl
push
int
push
mov
cmpsl
and
or
push
jge
rcll
jae
stos
sub
movsb
fcmovnu
and
and
loope
insl
std
mov
or
adc
aas
les
in
test
push
adc
pop
xor
add
movsb
xchg
je
mov
ficoml
or
pop
jo
jp
movsb
sbb
jecxz
daa
sub
or
repnz
mov
push
shr
push
cltd
inc
push
test
or
lods
popf
jp
repz
adc
inc
std
dec
rcrb
cmp
enter
ds
adc
out
out
xchg
lcall
cmpsb
loope
ss
ret
jg
cli
movsl
push
mov
mov
mov
or
add
add
outsl
popa
or
inc
inc
sbb
mov
enter
leave
mov
insl
mov
inc
jne
aas
fwait
pusha
popf
lea
shl
pop
mov
push
xor
dec
test
sub
mov
scas
and
faddp
or
add
dec
mov
cs
or
xor
mov
pop
mov
or
pop
movsl
ds
xor
adc
andl
loope
aad
or
leave
pop
mov
xor
adcl
hlt
movsl
jb
movsl
fldcw
daa
out
iret
add
in
sub
mov
fs
add
aas
sub
orb
mov
popf
fcoml
clc
sub
mov
mov
dec
xchg
sub
jns
stos
mov
test
out
out
insl
mov
push
push
addb
push
mov
mov
jmp
mov
popf
lds
push
mov
hlt
mov
shr
nop
lret
cmp
mov
xchg
repz
sub
mov
cmp
lds
push
push
stos
loop
cltd
or
hlt
or
fiadds
cmpsl
jle
out
push
jno
jmp
and
mov
gs
push
lods
add
lea
mov
mov
mov
cmp
mov
je
cld
repnz
in
outsl
es
adc
cmpsl
mov
pop
mov
aas
mov
andb
xor
pop
movsb
lods
mov
iret
test
sbbl
xchg
cmp
xor
ret
pop
xor
in
lahf
js
mov
push
xor
sti
xchg
andb
outsb
shlb
mov
ret
hlt
mov
not
mov
sub
mov
adc
js
mov
or
daa
adc
adc
out
iret
sub
orl
fdivrs
das
mov
mov
mov
fwait
test
sub
dec
jmp
jne
rorl
adc
daa
xor
out
and
xor
outsl
pop
cld
mov
push
cwtl
lods
loopne
pop
shll
loop
movsb
lahf
cmpsb
cld
pop
ret
movsb
pop
ds
xchg
and
sbb
mov
in
pop
push
sub
int3
fldcw
push
sub
and
push
test
fimuls
aam
fidivrl
cmc
shrb
mov
adc
pop
or
iret
in
adc
lret
inc
lret
jns
mul
cmp
pop
pop
clc
loope
and
fs
mov
xchg
inc
mov
into
mov
cmp
fcompl
dec
lret
cld
or
inc
subl
jecxz
jne
xchg
idivb
or
mov
leave
int
xor
test
xor
push
adc
mov
jnp
repnz
push
cmpsl
xlat
inc
fnstenv
ret
aaa
lcallw
aaa
dec
xchg
push
or
jae
and
shl
roll
jo
and
pop
popa
leave
lcall
out
pop
fwait
mov
add
inc
xchg
ljmp
outsl
add
outsb
in
mov
es
out
or
sub
mov
sub
or
mov
jbe
jns
jb
mov
filds
mov
and
arpl
in
mov
add
cmp
xchg
and
shrl
mov
lahf
xor
jbe
push
outsl
or
fdivr
stc
mov
mov
xchg
shrl
ds
fs
dec
pop
outsb
adc
or
add
mov
out
stos
mov
and
dec
dec
mov
leave
mov
adc
insb
hlt
fstpt
fisubrs
test
pusha
mov
mov
jecxz
push
xor
scas
iret
mov
adc
inc
mov
jnp
or
stos
adc
call
pop
cmp
cmp
incb
jp
xchg
mov
int
testb
aam
add
outsb
push
add
sbb
bound
pusha
sbb
lahf
add
sbb
rcrl
mov
lret
mov
jnp
cli
mov
mov
dec
aam
or
or
fadd
stos
jbe
cmp
or
sub
stc
mov
mov
jb
mov
xchg
lahf
sub
shll
std
fstl
inc
mov
jae
nop
push
les
mov
popf
into
adc
aam
outsl
mov
mov
fistps
das
pop
and
fpatan
shl
push
in
divb
xor
jb
test
cltd
add
jno
cmp
shr
aad
sub
and
rcl
insb
pop
rclb
adcl
jp
xchg
inc
loop
xor
andl
xor
mov
mov
ja
ficoml
jle
mov
lds
out
inc
jl
addr16
pushf
xchg
in
int
call
inc
mov
sarl
mov
pop
cs
dec
push
xor
mov
jb
and
testl
push
jmp
add
fs
inc
xchg
push
dec
pop
pop
movsb
mov
insb
xchg
mov
ret
shlb
mov
mov
jbe
adc
inc
pop
add
sbb
mov
int3
aaa
inc
popa
js
aad
int3
int3
cmc
scas
pushf
push
pop
sbb
add
out
lods
adc
xchg
addb
pop
mov
inc
mov
mov
adc
sub
mov
add
dec
lret
lcall
int3
repnz
in
sbb
sahf
in
and
sbb
aaa
lcall
sub
cmp
daa
push
fdivrp
lahf
pop
repz
out
sbb
imull
mov
lds
movsb
movsb
int3
insb
jle
adc
faddl
or
mov
add
hlt
pop
xchg
sub
orb
outsl
aam
test
push
dec
sti
mov
push
loopne
and
sti
out
sbb
ja
xchg
vpcmpeqw
xchg
sbb
xchg
sbbl
adc
pinsrw
cli
dec
sub
out
js
repz
add
cvtdq2ps
and
js
mov
fdivl
mov
mov
xchg
daa
movsb
add
inc
decb
scas
mov
mov
cmp
push
subl
cbtw
mov
stc
ljmp
jle
dec
in
aam
sub
inc
lahf
lret
mov
jp
movsb
int3
pop
or
cltd
mov
adc
in
mov
lcall
int
dec
jno
stc
cmpsl
nop
cltd
data16
xor
sub
xor
adcl
rorl
subl
push
xor
add
scas
inc
add
repnz
xchg
cmp
pop
inc
xchg
mov
xchg
mov
test
inc
lds
cmp
add
lods
push
loope
mov
xchg
xchg
xor
popf
cmp
shlb
mov
ficompl
arpl
jns
scas
sbb
lret
sarl
out
jno
cli
mov
sbb
cmpsl
cmc
stos
sub
out
movsb
lock
or
fsubrl
push
dec
movsl
popa
jg
mov
cmpsl
rcrl
mov
sbb
ljmp
sbb
out
cmp
mov
cs
clc
sub
mov
xlat
fsub
push
mov
mov
aad
xchg
daa
mov
add
jbe
lods
pop
xchg
sub
rcrb
movsb
aas
jo
mov
add
call
lea
mov
scas
xor
pop
push
pop
test
es
dec
and
arpl
cmpsb
inc
xchg
loopne
jb
cmp
and
cmp
push
mov
push
cmp
in
inc
out
faddl
sbb
fs
push
add
mov
sbb
fdivrl
pushf
dec
shr
cmp
jmp
ret
jns
jl
lods
mov
jne
sbb
mov
and
xor
mov
adc
cmpsl
gs
fucomi
and
ja
pop
sub
in
pop
out
jecxz
jecxz
jecxz
shl
mov
test
jnp
lahf
sbb
pushl
pop
inc
gs
xchg
fistps
movsl
mov
mov
lret
stos
lock
and
pop
int
and
rol
movl
pop
loope
pop
mov
fidivrl
lret
fwait
or
jb
add
adc
je
xor
mov
ret
int3
mov
je
jmp
btc
mov
or
loopne
fsts
mov
jbe
dec
mov
pop
rorb
mov
popa
lret
lock
ret
xchg
sarl
mov
aad
push
inc
mov
bndstx
adc
pusha
push
lret
cmp
dec
inc
jo
fistpll
adc
data16
inc
sub
mov
loop
push
inc
pop
pop
int
mov
dec
mov
gs
or
or
je
dec
enter
adc
dec
sub
movsl
pop
icebp
call
xor
cmc
mov
push
aad
movsb
sahf
pop
push
jae
ror
jb
xor
int3
in
ret
cmp
dec
lock
xor
mov
pop
cmp
in
imul
fst
addl
shlb
rcll
cltd
notl
icebp
cmpsl
dec
sbb
cltd
and
and
bnd
dec
pop
sbb
push
sub
pusha
mov
sbb
inc
sbb
push
cmc
gs
cmpsb
jg
lock
and
jns
les
movsl
jge
mov
lcall
mov
jno
push
ds
adc
inc
das
cli
cwtl
xlat
xchg
xor
and
mov
dec
jno
jo
jp
cwtl
int
adc
jo
mov
push
xchg
or
insl
test
call
xchg
dec
adc
push
jno
jecxz
mov
pushf
add
adc
mov
dec
or
adc
jle
inc
mov
push
push
inc
mov
idivb
mov
jp
in
mov
pop
dec
fistpl
xchg
fistl
aaa
sti
fisubs
stos
into
mov
out
pop
inc
imul
mov
pop
fidivrl
leave
gs
add
lods
out
fs
imul
mov
pushf
and
jge
scas
jle
fistl
mov
iret
mov
mov
inc
and
shll
mov
push
es
mov
mov
sti
repnz
popf
out
push
push
mov
xchg
bound
cli
pusha
repz
xchg
pop
mov
cltd
ljmp
pop
pushf
repnz
jecxz
pop
push
addb
leave
jnp
cli
push
jp
fnstenv
cmp
xor
fistl
dec
popa
mov
test
leave
fnstenv
fbstp
jmp
fstpt
dec
scas
out
lea
fidivs
inc
in
adc
mov
in
xor
xor
or
xlat
push
in
popf
xchg
xchg
mov
popa
mov
lcall
cmp
pushf
xchg
or
js
jo
in
repz
cmp
out
decb
popf
lea
ret
and
add
and
mov
and
outsb
or
lcall
jge
ret
xchg
aad
dec
inc
sti
in
jmp
clc
pop
jbe
pop
jl
inc
arpl
pusha
mov
ds
sub
cltd
fnsave
shrb
adc
and
jg
mov
or
xchg
jecxz
mov
jg
repz
jb
fnsave
movsl
inc
sub
sub
inc
fimuls
add
out
not
lock
jns
loop
push
js
das
cmp
add
bound
pop
aas
adc
mov
ja
mov
movsb
lahf
hlt
sub
pop
sub
notb
jp
push
cmp
subl
ret
mov
xchg
lret
loop
mov
loop
mov
xor
movsl
push
test
ret
push
adc
cmp
lret
sbb
adc
mov
into
int3
movsb
sub
int
lcall
rcrl
cmp
push
sbb
insb
inc
mov
stos
mov
lea
loop
and
mov
and
mov
out
loopne
adc
aad
push
inc
add
jecxz
repnz
cmc
or
push
dec
and
cwtl
in
push
fmull
insl
lahf
scas
or
in
out
sbb
or
dec
icebp
sub
xor
sbb
and
shll
inc
pop
add
mov
lcall
mov
rcl
push
mov
jns
mov
cli
out
divl
pop
loopne
testb
cmpl
stc
mov
shrl
imul
inc
popf
mov
xor
js
insb
dec
jecxz
push
add
fists
in
fiadds
xor
push
or
pop
pop
pop
add
mov
ds
fisttpl
insb
aad
shll
adc
fcmovbe
jns
or
pop
pop
pop
icebp
cmp
xor
and
les
push
cmpsb
xor
neg
sbb
cmp
into
out
icebp
out
cwtl
test
lock
pop
aas
jmp
push
adcb
and
popa
mov
mov
and
pop
call
mov
mov
sub
adc
lock
mov
pop
ret
xor
test
hlt
movsl
jl
dec
pop
lea
xchg
mov
loopne
lock
push
add
arpl
pop
and
xchg
dec
pop
test
push
leave
inc
xchg
sahf
jnp
jl
cs
mov
ss
mov
inc
xor
cmpsl
test
jmp
and
mov
out
jo
sub
stos
fsubrp
cmp
mov
and
push
mov
xchg
jp
dec
stos
rcll
xor
dec
push
add
lahf
repnz
dec
mov
jno
pop
scas
add
xchg
lahf
xchg
cmp
vandps
mov
scas
jmp
push
mov
imul
cli
cmp
loopne
sub
fisubrl
jno
es
and
push
adc
sarb
mov
inc
scas
test
push
cmp
cmpsb
popa
lds
xor
and
bound
cmc
loope
mov
mov
xlat
cmp
jecxz
fcmovnu
andb
and
in
aas
push
bound
cmp
mov
cli
ja
cli
mov
int3
inc
mov
xchg
xor
sbb
dec
pop
xor
jns
fadd
es
mov
popa
add
cwtl
cmp
xor
adc
leave
mov
push
push
or
loop
mov
adc
and
or
or
sbbl
cld
bound
imul
mov
lock
mov
sub
rep
pop
mov
lods
xchg
int
aas
arpl
add
sbb
fadds
scas
jmp
dec
jo
pop
cmpsb
call
sbb
add
sub
fwait
xchg
cmc
insb
or
mov
xor
adc
inc
sub
lods
loop
add
js
or
jno
xlat
leave
out
lea
jno
adc
out
adc
fcompl
sub
rorl
mov
sub
dec
je
pf2iw
cld
lods
sbb
sbb
scas
ds
ja
inc
pop
aas
cmp
mov
xor
mov
shlb
pushf
popa
call
sub
loopne
xchg
test
inc
mul
xor
and
ja
xor
dec
shlb
div
cmp
fisubs
ret
int
mov
mov
xlat
movb
fidivl
test
aaa
xor
sub
mov
and
mov
fldcw
cmp
xchg
idiv
sti
and
sub
out
adc
add
inc
dec
inc
movsb
dec
int3
nop
xchg
mov
lcall
dec
movsl
inc
xchg
add
adc
outsb
aam
scas
imul
into
leave
adc
out
lods
sub
xor
call
push
add
mov
push
xchg
loope
hlt
out
leave
dec
jle
ficompl
dec
popf
sub
mov
aam
mov
add
xchg
sub
push
shrb
bound
jle
xchg
sub
sub
test
add
and
mov
xor
pop
cmp
lea
or
out
inc
xlat
stc
dec
dec
js
and
sbb
adc
inc
mov
fldl
and
int
js
int3
in
add
xorl
shlb
sahf
fists
add
jle
mov
int
dec
fisubl
pop
clc
push
test
mov
xor
iret
daa
push
daa
mov
pop
jo
inc
mov
push
lds
push
pop
dec
sub
loopne
xor
cld
les
fmulp
sarl
leave
xor
and
xchg
mov
les
sub
mov
xor
sub
xor
pop
xchg
adc
push
and
lea
mov
in
mov
in
push
dec
inc
in
or
pop
ja
cmp
jb
lock
dec
pop
std
sub
xlat
gs
cmp
addr16
gs
lods
inc
enter
sarb
pop
nop
das
sbb
adc
cmpsb
pop
xchg
lret
imul
stc
lret
aaa
popl
xlat
mov
pop
xlat
loop
repz
adc
push
xchg
js
add
cmp
lock
repnz
pop
inc
lods
xor
pushl
and
aaa
xchg
and
ljmp
pop
adc
addl
jp
adc
pushf
or
xor
dec
std
sub
fwait
dec
add
inc
rorl
cmp
nop
dec
sbb
insl
jecxz,pt
jno
mov
daa
rcll
es
aaa
push
adc
mov
xor
jb
std
xlat
adcb
mov
cmp
es
filds
add
test
stos
and
xchg
push
jnp
and
shl
jecxz
ret
push
cwtl
repnz
insl
stc
jb
dec
lods
pop
mov
add
out
mov
sahf
mov
mov
jb
stos
push
add
fildll
push
mov
out
gs
add
rorl
outsl
push
lock
sbb
outsl
sub
movsb
jecxz
insl
pop
mov
xchg
sub
mov
cs
push
imul
xchg
dec
push
cli
aam
fucom
cltd
pop
adc
iret
mov
std
repz
mov
mov
adc
cltd
lcall
dec
jae
adc
test
or
push
mov
hlt
add
push
das
mov
jo
jp
test
fdivrl
call
inc
sbbb
mov
cli
cld
aad
cli
shl
nop
xor
cwtl
hlt
mov
cmp
add
cli
sub
mov
sub
cmp
cld
xlat
ret
daa
mov
mov
sti
sub
das
in
ret
mov
pop
xchg
mov
and
sub
pushf
rcr
add
adc
loop
idiv
xor
in
arpl
pop
or
mov
mov
pop
imul
add
dec
cmp
pop
and
je
int
mov
fwait
xor
lret
pop
imul
inc
push
sarb
sahf
imul
jns
loopne
aam
in
mov
push
clc
rolb
sub
xor
in
nop
or
sbb
gs
loope
fsubp
jmp
hlt
jnp
jg
push
daa
shll
ss
xchg
out
leavew
mov
push
lcall
jp
icebp
gs
adc
int
mov
test
out
rcll
cld
inc
ljmp
fs
movsb
pop
fildll
push
leave
das
imul
mov
fisttps
aas
sub
inc
es
inc
adc
cmp
push
mov
dec
mov
adc
test
sub
pop
cmp
ficompl
clc
shl
in
pushf
xchg
mov
cmp
lahf
mov
mov
test
filds
fsubrl
or
sbb
fs
or
or
inc
mov
or
add
xchg
sahf
cmpsl
mov
movsb
stos
or
arpl
scas
and
shr
push
dec
aaa
mov
movsl
dec
add
psadbw
mov
fidivrl
enter
and
lcall
fwait
mov
lock
add
mov
js
mov
cwtl
mov
test
push
adc
xchg
mov
mov
int
test
jne
add
xor
push
or
je
mov
mov
add
fwait
cmp
dec
in
xchg
mov
push
movsb
iret
mov
enter
mov
adc
cmp
sbb
hlt
lods
sbb
xchg
in
test
clc
test
cmovo
inc
lods
xchg
mov
ss
inc
mov
daa
mov
roll
mov
addr16
add
stos
mov
cmc
mov
test
mov
mov
lock
xchg
dec
repz
rolb
mov
cmp
mov
imul
ret
nop
or
adc
mov
add
jb
into
sbb
inc
cmp
jo
rorl
cmpl
call
mov
adc
sti
in
push
inc
mov
aad
insw
jbe
ss
cmpsb
iret
dec
inc
mov
lcall
adc
jecxz
mov
lock
mov
mov
pop
and
pushl
ret
xchg
fistpll
pop
sbb
cwtl
stc
push
mov
push
dec
xchg
sbb
jne
xchg
mov
pop
or
mov
lret
adc
fistpll
pop
test
outsb
mov
sbb
xchg
fiaddl
xchg
and
repz
jge
add
imul
dec
or
mov
bound
call
pop
sbb
adc
popf
sub
sub
aaa
gs
aaa
jno
dec
inc
rorl
cmp
or
int
xor
inc
adc
sub
scas
int3
mov
or
fabs
dec
loop
stc
out
mov
scas
xchg
xor
and
cmp
xchg
out
sbb
push
gs
hlt
sub
data16
push
adc
rcll
fs
xchg
cmpb
jns
gs
xor
push
push
dec
repnz
int
orb
rolb
mov
mov
rcll
rcrl
aam
and
or
cmpsl
inc
fldenv
cltd
sahf
lcall
lods
sub
or
rolb
jae
xlat
rcrb
lcall
push
dec
in
mov
mov
in
repz
add
icebp
pop
push
pop
xor
and
sbb
pushf
adc
ss
mov
mov
xor
xor
xor
push
adc
stc
mov
fcom
cmp
xor
mov
shll
inc
enter
into
ljmp
pusha
das
stc
sahf
jge
je
test
mov
icebp
pushf
sahf
ds
lock
jnp
mov
jg
pop
movsl
sti
std
test
insl
push
sahf
jg
les
std
jae
sahf
lock
into
dec
jno
mov
xchg
rolb
mov
sti
pop
outsl
scas
mov
inc
push
fimuls
or
rolb
stc
outsl
or
xchg
mov
inc
jmp
jae
adc
decb
leave
aaa
icebp
adc
sahf
pusha
test
pop
lods
push
clc
movsb
std
adc
xor
dec
xchg
test
pusha
fwait
ljmp
lcall
imul
test
jl
xchg
fisttps
pop
into
sub
sub
fcmovnbe
add
test
subl
inc
mov
push
movsl
rcrb
es
shlb
nop
jne
cmp
aas
add
pusha
js
jb
dec
push
add
mov
push
scas
hlt
mov
cmp
push
icebp
aaa
sbb
test
nop
imulb
and
mov
cmc
inc
lods
fldenv
pop
xchg
sbb
pusha
inc
push
ret
mov
sarl
jb
push
in
fdivl
or
lock
les
add
sbb
xchg
aam
test
imul
mov
cmp
pop
fcomip
push
es
in
mov
mov
loopne
dec
fistpl
movsl
mov
shrb
mov
jl
es
cmp
outsb
fists
cmp
jle
js
or
cmp
inc
sti
ret
or
xor
leave
cmp
scas
jl
xchg
in
sub
idivb
negl
or
cli
xorb
adc
call
rolb
jmp
dec
es
xor
jmp
mov
in
subl
movsl
test
fidivrl
xchg
mov
enter
iret
int
test
pop
imul
test
leave
cli
or
mov
sbb
xor
or
and
jmp
cmp
pop
mov
or
mov
shlb
or
or
int3
adc
fsubr
pop
out
hlt
push
add
xor
jnp
out
aaa
cmp
mov
mov
fs
popa
xchg
add
movsl
enter
lcall
push
into
outsb
or
jl
and
and
adc
call
pop
pusha
into
fcos
dec
mov
lock
cmp
movsb
and
xor
cmp
xchg
mov
iret
mov
test
adc
xor
xor
inc
mov
das
inc
push
mov
adc
dec
jae
repz
mov
dec
cmp
pop
cmp
mov
mov
mov
aas
jg
lcall
sbb
or
pop
ret
push
aaa
jp
icebp
rorb
mov
movsl
jecxz
jbe
movsb
les
mov
dec
xchg
sub
xor
dec
jnp
jbe
add
subl
outsl
add
xchg
cmp
adc
iret
test
mov
or
fimuls
jmp
lahf
js
std
dec
pop
scas
xchg
pop
jp
jle
mov
out
and
adc
sbb
mov
out
fisubrl
mov
push
xchg
or
mov
cs
push
mov
mov
dec
rcr
rolb
pop
jns
pop
and
jmp
xor
mov
ja
or
mov
nop
roll
and
inc
mov
dec
stc
stos
cld
in
adc
and
nop
fisttpll
cwtl
mov
cmp
adc
cltd
sub
aad
dec
mov
cmp
sti
in
mov
jp
jl
imulb
jnp
fsubp
dec
test
pop
push
xchg
cmp
dec
jp
repnz
scas
adc
aam
or
in
outsb
in
shlb
int
add
out
adc
addr16
mov
and
in
mov
pusha
fcoms
movsb
iret
cmp
shrb
imul
xchg
cmp
scas
ficompl
int
inc
dec
mov
pop
mov
scas
push
lods
cmp
out
leave
xchg
das
movb
mov
add
outsb
fidivl
test
rcrl
inc
loop
lods
xchg
mov
lods
mov
in
aam
inc
ja
and
mov
fnsave
cs
das
jo
cltd
mov
bound
notl
add
sub
cmp
push
sbb
jb
push
pop
sar
sbbl
jns
fildl
push
push
mov
sub
mov
sbb
add
push
and
leave
pushl
and
jnp
arpl
cltd
test
sub
fs
mov
lret
aad
out
shrl
pop
insl
ror
sub
adc
push
stos
icebp
sub
test
and
lret
add
dec
cmp
leave
mov
xor
bound
xchg
fmul
mov
ljmpw
nop
pop
xchg
imul
xchg
xchg
fldt
imul
ds
mov
pop
fwait
iret
jnp
mov
mov
push
lds
addr16
adc
insb
dec
imul
mov
fsts
les
mov
push
inc
fwait
mov
mov
xor
clc
mov
xor
out
repz
and
or
fisubs
inc
inc
mov
es
sbb
pop
push
movsl
pop
pop
dec
xchg
int
xor
stc
xchg
mov
cmp
orl
xor
movsb
scas
hlt
xchg
xor
out
cmpsb
icebp
xchg
int
xor
mov
shrl
pop
dec
imul
movl
xor
insb
add
dec
sbbl
sub
shll
stos
std
mov
adc
dec
mov
in
int
clc
pushl
popf
mov
ror
into
shl
popf
ljmp
fwait
push
lds
push
fisubrs
addr16
sub
jl
movsb
es
negb
lret
jno
xorb
shrl
sub
xchg
mul
mov
mov
xchg
cli
or
pop
xor
jns
jae
pop
loope
in
push
jae
das
inc
mov
push
aaa
in
jl
push
pop
xor
pusha
sahf
enter
jno
cltd
mov
sbb
pop
lock
add
dec
daa
cltd
dec
out
scas
pop
jp
add
mov
js
fmull
cmc
scas
daa
outsb
sub
ss
fisttpll
dec
stos
cmc
mov
inc
add
sti
push
aas
push
loop
test
lock
aad
push
repnz
mov
push
je
adc
jge
xlat
sub
push
mov
int3
clc
cmp
mov
shll
repnz
lock
dec
mov
pminub
mov
mov
xchg
in
pop
sub
repz
mov
out
add
mov
inc
jo
push
popa
and
enter
and
add
pop
sbb
pop
out
jae
cmpsl
testb
cmp
mov
jns
jo
lea
mul
xchg
call
out
out
lods
cmpsb
sbbb
adc
je
push
in
sub
pop
xchg
mov
sub
pusha
movsb
adc
addr16
std
scas
push
lods
inc
mov
enter
xacquire
jp
nop
enter
repz
outsb
hlt
lret
ret
push
lret
rcr
cs
mov
cmpsb
pusha
cli
lcall
pop
es
insl
push
pop
jle
jmp
js
jae
sbb
adc
cmp
adc
mov
enter
inc
fnstsw
sbbl
add
dec
mov
dec
movsb
xor
push
mov
pop
cmp
popa
add
into
xor
hlt
ret
xchg
clc
sbb
call
or
add
cmp
cmc
hlt
inc
mov
stos
out
fcmovnb
arpl
push
xor
cmpsb
fdivl
fcoml
xchg
rorl
je
aam
xor
and
sahf
rclb
clc
add
cs
push
scas
mov
cmp
scas
fbld
cmpl
clc
lahf
cmpsb
das
out
sub
das
jle
sahf
dec
ror
xor
es
mov
popf
cmpsl
mov
rorl
adc
sub
lods
sti
pop
xchg
sub
adc
adc
sarl
jnp
es
dec
sbb
xor
es
stos
push
arpl
or
cmp
xor
sbb
test
or
cmc
sarb
dec
bound
mov
in
mov
add
stc
jbe
pop
and
jns
clc
cmp
mov
sete
or
dec
sub
cmp
in
or
out
push
scas
pushf
mov
outsb
test
xlat
push
cmp
mov
pop
cmp
and
hlt
imul
jge
insl
or
jmp
rclb
mov
cmpsl
ficoms
aam
flds
xor
push
fcompl
cmc
imul
fcmovnu
lock
sub
stos
std
lods
pop
addr16
pop
mov
adc
arpl
mov
mov
adc
mul
xchg
pop
ds
ss
xor
xor
stc
in
push
cmp
jae
pop
stos
mov
jle
outsb
popa
mov
lahf
iret
push
sbb
adc
push
stos
mov
stos
mov
imul
hlt
fstl
insb
xor
insb
xchg
test
xchg
dec
jo
hlt
loope
push
jnp
push
test
fisttpll
xor
dec
jns
add
loop
and
xor
jno
xchg
ret
push
enter
lahf
loopne
xor
mov
repnz
inc
addr16
mov
movsl
aaa
push
fistpl
scas
cmc
dec
in
mov
pop
xchg
jge
mov
mov
cs
sbb
pop
cmp
enter
jmp
mov
add
cmp
inc
xor
dec
cmp
fidivrs
hlt
push
out
cmpsb
stc
jge
rclb
adc
stos
xor
inc
push
fldenv
out
mov
popa
inc
mov
and
xchg
sbb
loope
lds
fldl2t
pop
mov
imul
jmp
mov
jge
into
sub
inc
fists
adc
test
outsl
rol
stos
cmpsb
pushf
push
jne
add
es
scas
aam
xchg
lea
adc
inc
das
lods
pop
add
jecxz
xchg
in
pop
shll
sub
mov
in
shll
mov
in
ret
mov
cmp
inc
mov
inc
and
sbbb
cmc
pop
aaa
xchg
cmpl
aad
mov
xor
sub
mov
cmpsl
movsl
test
add
aad
push
dec
jmp
mov
pop
hlt
and
dec
push
push
ljmp
es
stos
or
jo
insl
push
dec
decb
adc
in
sub
iret
inc
or
data16
loop
pusha
xlat
mov
test
jmp
fnstsw
int
pop
aam
mov
aaa
fbstp
push
sbb
adc
popf
push
pop
popf
aam
dec
loope
in
cltd
mov
ds
xchg
lea
imul
cmpb
mov
push
inc
push
aaa
call
sbb
fcomps
or
and
insb
leave
mov
fnstsw
pop
popa
mov
pushf
imul
imul
pusha
imul
aad
pop
mov
mov
ja
and
loope
mov
faddl
sub
and
sub
btr
add
test
cltd
dec
xchg
mov
inc
and
mov
adc
mov
jns
push
sbb
ds
call
rol
repz
sub
hlt
into
xor
testl
dec
rcrb
inc
pop
rolb
cli
bound
sub
inc
fmulp
mov
test
sbb
insl
xchg
xlat
mov
mov
cmp
mov
outsl
adc
inc
mov
cwtl
pushf
out
arpl
sub
lods
ror
jb
xor
iret
push
xor
movsl
fldt
inc
cmpsl
jecxz
mov
and
bound
and
std
test
fsubrs
adc
cmp
mov
dec
popa
jbe
lret
movsb
jns
stos
jb,pt
xor
inc
adc
push
jns
pop
and
sub
pop
leave
int3
iret
ljmp
gs
icebp
sbb
or
ror
imul
cwtl
lods
push
sahf
add
clc
lds
loope
rcll
adc
jno
lods
mov
repnz
adc
and
sub
enter
cmc
loope
test
cmpb
enter
movsb
cmp
ret
outsl
xchg
jns
leave
and
and
rorl
cmpb
dec
inc
xor
and
cld
gs
cmp
out
lock
repz
mov
jo
and
pop
cmp
sbb
mov
adc
cltd
test
pop
mov
sub
jle
pop
pop
inc
push
or
jbe
sbb
popf
data16
mov
cmp
mov
add
test
bound
aas
sub
movsl
and
push
and
pop
push
ss
jg
inc
aam
or
jns
push
adc
dec
sbb
cmc
imul
jb
sbb
loop
xor
ficompl
cmpl
add
movsb
or
mov
stos
sbb
iret
xor
setae
and
fs
idivb
or
mov
das
xlat
mov
into
adc
cmp
je
pop
mov
lret
mov
test
push
pop
std
sbb
mov
jmp
mov
test
xchg
adc
sub
ret
and
xchg
dec
mov
scas
aaa
call
jmp
xor
mov
loope
stos
push
jno
add
or
cwtl
or
mov
aad
outsl
adc
jbe
sbb
lods
or
mov
stos
cltd
mov
mov
cmpsb
fsts
mov
sbb
dec
insb
subb
scas
mov
ret
inc
xorps
xchg
int3
cmpsb
arpl
addl
aas
push
popf
insl
mov
lds
in
push
jo
aas
test
fiaddl
movsb
inc
pop
ret
xchg
pop
add
jg
sub
sub
jle
insb
in
xchg
movsb
mov
inc
or
and
push
dec
or
ss
add
adc
in
push
stos
push
push
cmpsl
in
and
push
andl
nop
push
and
dec
outsl
jne
inc
cmp
inc
outsl
fcoms
scas
out
inc
ja
sub
ret
iret
hlt
pop
push
outsl
add
push
sbb
loop
lods
dec
pop
in
pop
sbb
fnstenv
mov
mov
dec
add
jge
scas
xlat
xchg
xor
push
mov
inc
jp
xor
sbb
jno
inc
adc
sbb
pushf
xchg
pop
jg
stos
ror
mov
adc
sbb
imul
aaa
pop
fists
or
addr16
repz
repz
jno
push
repnz
sbbl
xchg
mov
fisttpl
clc
and
or
dec
adc
push
and
xor
jg
fldl
cmp
cmpl
add
les
mov
mov
xchg
xchg
xchg
mov
mov
sbb
inc
pusha
insb
das
clc
pop
fldenv
iret
xchg
jge
xchg
mov
ljmp
mov
pushf
cs
addr16
mov
xlat
or
mov
fidivs
mov
inc
pushl
or
mov
stos
bound
fstpl
sahf
jns
rcll
and
cmp
lea
cmpb
out
ret
or
push
cld
xor
in
or
xchg
push
mov
push
hlt
es
subl
push
bound
gs
dec
out
jmp
shl
jo
push
inc
push
adc
lock
mov
mov
mov
cld
pop
cli
mov
fistpll
adc
scas
in
jo
scas
and
mov
or
cli
sbb
mov
jns
add
repz
imul
fldt
cmc
mov
imul
or
push
xchg
mov
adc
loop
pop
and
add
adc
sbb
inc
shl
xchg
daa
xchg
repnz
je
xor
cmp
mov
dec
out
std
and
fsubrs
loope
stos
mov
sbb
cli
mov
xchg
inc
push
push
call
popa
jae
xlat
pop
sbb
bound
mov
stos
orb
lods
cmp
cmpsb
push
popf
lret
add
dec
cmpsb
inc
stos
push
or
mov
mov
xor
jb
es
sbb
ja
mov
mov
inc
in
std
and
leave
out
sti
lds
inc
jnp
enter
or
sarl
out
or
adc
outsb
push
dec
adc
cwtl
sar
test
mov
loope
push
xchg
mov
or
xor
mov
stos
add
inc
mov
adc
mov
in
insb
cmp
add
mov
pusha
adc
jp
sub
and
movsl
in
jl
insl
test
pushf
or
hlt
insl
or
imul
push
jbe
lcall
xlat
aam
inc
xchg
fwait
sbb
jge
mov
cmp
inc
adc
push
xchg
jbe
mov
lret
mov
cwtl
movsl
test
dec
mov
xchg
jecxz
icebp
xor
mov
mov
adc
sbb
test
movsb
rcrb
ficompl
gs
daa
in
imul
mov
mov
fcoms
jge
sub
bound
jno
popf
insl
sbb
loopne
sbbb
dec
and
add
mov
mov
jmp
data16
testl
rorb
adc
loope
sbb
movsl
clc
into
push
in
mov
iret
jb
out
test
shrd
mov
mov
inc
fdivl
lds
dec
or
add
sbb
je
or
std
and
adc
mov
lds
push
dec
mov
mov
pop
add
test
xor
mov
mov
or
nop
fmul
jmp
shrb
jg
iret
fwait
loopne
and
fdiv
jge
inc
inc
in
int
pop
ret
out
pop
lahf
out
lods
mov
xor
mov
loop
jnp
neg
clc
clc
clc
sbb
divb
push
pop
xchg
sbb
add
repnz
popf
pop
sbbl
lret
mov
pop
popf
mov
jbe
push
aas
test
sbb
lcall
enter
sub
jg
sahf
repz
out
and
dec
cmp
push
mov
stos
ja
or
mov
aas
jo
test
ljmp
subb
pop
push
int3
sbb
push
adc
clc
jno
lds
fs
imul
scas
xchg
adc
push
andl
inc
cli
jge
push
push
pop
sbbl
push
outsl
push
clc
push
jmp
or
mov
mov
dec
xor
stos
fcom
test
psadbw
repz
lods
push
bound
adc
addr16
ja
icebp
scas
jecxz
into
icebp
sub
pop
hlt
mov
fiaddl
push
lahf
mov
movsl
dec
sbb
jecxz
xor
jbe
cmp
dec
mov
jp
jmp
sub
out
xorb
fs
cld
fisubrs
sub
mov
lcall
xor
fs
pop
nop
mov
jmp
leave
adc
cmp
aaa
addb
pop
lods
sbb
test
xchg
pop
fildll
outsl
lock
lock
clc
test
rcl
or
sub
adc
xor
or
dec
imul
mov
test
pop
adc
mov
mov
xor
bnd
lret
orb
cld
xor
shlb
iret
decl
mov
fidivrs
and
into
iret
jnp
xor
pop
fs
xor
xor
or
dec
jl
negl
repnz
jnp
ss
loop
in
sbb
mov
dec
xlat
iret
dec
push
push
xchg
jns
test
js
negb
mov
dec
inc
sub
das
cs
leave
jle
int3
filds
xor
js
adc
ljmp
dec
jle
loopne
dec
movsl
aam
stos
adc
mov
xchg
leave
cmp
xchg
ds
cmp
lock
aaa
dec
int3
xchg
hlt
stos
loope
cmp
bts
mov
test
cmp
pop
push
pop
das
aam
fildll
scas
sbb
in
push
inc
aaa
in
lds
mov
fbstp
sub
ljmp
imul
inc
stos
outsb
lods
into
cmp
clc
jo
fmulp
repnz
fnstcw
mov
cld
lret
pop
mov
xor
mov
test
int
ljmp
dec
add
sub
pop
and
jne
test
cmp
imull
or
aas
lcall
mov
pop
shlb
and
mov
mov
xor
sbb
negb
xor
loop
sbb
pop
push
rcrb
mov
cmp
sub
and
aad
test
sbb
mov
sbb
je
mov
or
jmp
ffree
test
lgs
cmp
jg
fsubrs
fwait
lcall
dec
or
jae
sbb
dec
lods
adc
es
dec
aam
into
mov
mov
push
sub
fdivrl
orb
xorl
dec
cmp
jmp
mov
mov
in
pop
cmc
jnp
jmp
mov
vcomisd
pop
orb
in
pop
inc
es
push
fs
sbb
and
out
addb
cmp
imul
xor
cmpsb
xor
and
xlat
or
or
lret
mov
pushf
push
and
sub
out
add
repnz
push
mov
insb
mov
into
push
adc
inc
cmpsb
xchg
data16
shlb
xor
cmpsl
leave
mov
adc
sbb
jb
jecxz
ja
imulb
jbe
mov
out
adc
cmp
inc
aaa
ljmp
pop
xchg
inc
stc
push
insb
cwtl
popa
xchg
out
adc
stc
call
push
cwtl
sub
mov
mov
xrelease
pop
dec
xor
aas
pop
lret
bound
jg
jp
imul
jbe
jb
xor
push
inc
cltd
test
test
pop
in
or
aam
add
cmc
mov
cmp
bswap
bound
inc
mov
mov
dec
in
inc
bound
int
cwtl
pop
mov
cs
aaa
add
cwtl
jecxz
add
out
xchg
xchg
or
xor
mov
in
lcall
adc
add
mov
dec
cmp
cmp
jg
sbb
dec
add
mov
lcall
adc
xor
aaa
fistpl
push
push
shrl
hlt
dec
mov
sbb
jnp
jno
add
cmpsb
cwtl
jge
pushf
sarl
inc
jnp
cli
movzbl
addb
and
jmp
roll
push
cs
loope
push
les
sub
std
das
cmp
cwtl
jne
fwait
xchg
movsb
sahf
push
sbb
shrl
sub
lock
mov
and
push
nop
stos
sbb
outsb
cmpl
inc
jns
pop
push
test
popf
repz
dec
in
sub
sub
cmp
push
test
ljmp
stos
add
loope
xlat
arpl
outsl
bswap
xchg
cmc
and
xchg
mov
shrl
or
cmp
aad
or
sub
lds
xorl
dec
inc
inc
add
dec
ds
jae
cmp
outsb
pop
xchg
xchg
inc
or
push
mov
sbb
aam
jne
sbb
jle
scas
cmpsl
sbb
xor
out
dec
mov
mov
int
mov
scas
jle
jae
xchg
pop
push
insl
fucomp
xlat
ficomps
pop
push
cmp
bound
push
pop
int3
add
jne
das
std
scas
mov
dec
push
cmc
pop
hlt
mov
outsb
rorl
stos
sub
out
mov
call
and
mov
lret
jne
movsl
data16
sahf
dec
out
inc
shlb
jne
cmp
incb
cmp
mov
xchg
push
pop
sti
xchg
addr16
inc
lahf
vmovups
in
cmp
pop
pop
mov
in
jp
ja
pop
xor
jmp
and
pop
push
mov
dec
lret
insb
sbb
inc
jne
out
or
pop
ret
xchg
lock
mov
sarb
push
jo
mov
int3
in
cmpl
out
cmpsb
rorl
fdivs
in
loope
xchg
xchg
inc
loop
xchg
pop
sbbl
mov
jl
push
addr16
adc
sub
imul
into
push
inc
dec
pushf
dec
lea
mov
adc
ret
cld
daa
out
push
and
jmp
cmp
sarl
mov
xchg
adc
lock
lea
pop
mov
movsb
and
or
cmp
pop
dec
pop
iret
jnp
mov
stos
pop
pop
adc
pop
xchg
xchg
das
fisubrl
and
clc
aad
test
dec
xor
in
fcmovbe
ljmp
xor
inc
xor
mov
xchg
push
insl
sbbb
mov
test
jmp
xchg
cmp
ret
mov
out
mov
xor
jge
xchg
sahf
insl
jb
lahf
sbb
inc
fwait
jg
adc
into
dec
les
in
cwtl
mov
pop
aaa
out
imulb
cltd
adc
ljmp
sbb
icebp
sub
mov
push
jnp
jno
jge
setbe
pminsw
xor
push
push
add
fisttpll
jecxz
ja
inc
out
test
sub
and
adc
inc
inc
mov
pop
and
sub
pop
mov
cmp
shll
cs
mov
inc
mov
mov
sub
std
scas
adc
cmp
dec
mov
mov
pop
push
inc
shl
movsb
ret
push
iret
ds
xor
inc
adc
jl
loopne
in
imul
pop
pop
pop
stos
lods
frstor
int
adc
inc
ljmp
les
and
adc
pop
cmpsb
adc
lret
loope
mov
sti
stc
insb
mov
pcmpeqb
int3
not
jo
shl
push
scas
dec
fsincos
xor
dec
push
notb
data16
bnd
add
mov
sti
repz
jbe
or
jmp
jge
inc
movsb
cmpsb
mov
pushf
jns
adc
push
sub
or
fsubrl
jp
inc
je
aas
mov
dec
jo
dec
push
mov
cmp
loope
fstl
add
int3
inc
inc
cld
fstpl
add
pop
stos
insb
push
shr
fs
rorl
pop
cmpsb
mov
in
or
daa
les
pusha
jae
fcmovu
mov
xor
fistps
mov
psadbw
test
mov
sbb
pop
shlb
mov
push
mov
xchg
mov
imul
out
cmp
mov
fsubrs
push
jmp
inc
and
push
add
jg
insl
jge
aam
cld
jl
mov
sub
inc
mov
dec
push
dec
jecxz
xchg
adc
or
or
data16
lea
xor
aam
pusha
add
in
out
inc
mov
sahf
pop
aam
dec
imul
lock
int
out
jb
into
nop
xor
sarl
add
ud0
ds
sarl
mov
inc
mov
add
add
or
xchg
mov
adc
in
mov
push
xchg
xlat
sbb
scas
inc
push
call
sbb
adc
das
pushf
test
adc
cmpsb
fstpt
scas
xlat
into
cmp
fidivrl
testb
adc
daa
mov
mov
mov
lods
rcrb
and
je
xor
sbb
test
dec
dec
xchg
jge
or
jge
mov
xchg
add
pop
sbb
and
mov
or
pop
cmp
mov
and
push
cmp
clc
fnstenv
jecxz
in
stos
ljmp
movsl
lods
aam
and
mov
or
mov
aam
in
inc
fldt
push
mov
pop
pop
push
fisttps
xchg
and
and
cmovns
loop
fists
and
in
cmp
mov
cmp
push
and
push
and
xchg
xor
mov
fwait
loop
jmp
bsr
or
je
jno
fstpt
inc
xchg
xor
mov
cmp
add
or
arpl
jns
and
das
imul
lret
subl
repz
cmpl
fwait
mov
in
xlat
fistps
sbb
push
cltd
lds
jno
and
mov
xchg
sbb
int3
push
inc
fucomp
jmp
cwtl
xchg
test
ja
and
cmpsb
ret
imul
je
add
inc
clc
out
call
daa
movsb
dec
test
mov
mov
fsubs
mov
in
movsl
add
push
xchg
mov
sbbb
enter
icebp
push
jns
or
cli
pop
pslld
mov
and
sbb
mov
push
xchg
mov
jo,pn
lret
mul
inc
movsb
xlat
lret
mov
dec
jmp
lods
jmp
ror
cmc
dec
popa
mov
mov
jb
mov
mov
sub
mov
mov
or
dec
stc
push
rcrb
fildl
pop
pop
addb
mov
inc
lock
test
sbb
sbb
leave
mov
mov
and
fs
test
pop
iret
insl
sub
push
lods
lahf
dec
and
xor
add
sub
inc
add
incb
sub
mov
push
bound
dec
in
negl
negl
mov
addr16
add
mov
popf
jecxz
movb
sbb
ffreep
in
push
in
int
or
movsb
or
xor
aas
adc
push
ja
and
xor
sarb
pop
mov
add
sub
push
punpcklwd
xorb
mov
dec
mov
sahf
mov
das
adc
sti
je
cwtl
jecxz
pop
mov
lahf
push
mov
inc
jb
cmp
sbb
out
shrb
mov
gs
add
xor
rcrl
pop
push
sarl
mov
test
adcb
mov
insl
push
icebp
jo
out
stos
fwait
push
ds
adc
outsl
adc
adc
xor
sbb
shl
jge
pop
shlb
fistpl
push
add
jbe
and
mov
movsl
into
dec
subl
test
rol
xchg
stc
mov
shl
popa
cmp
ret
jns
lds
dec
sub
xchg
shrl
or
mov
and
test
xchg
addr16
movsl
out
in
lahf
aam
xor
sbb
and
jecxz
out
mov
lock
call
sti
es
mov
daa
clc
push
xlat
push
mov
hlt
and
orl
int3
push
inc
ret
mov
push
subb
mov
aas
popa
cmc
cld
rclb
cmp
sbb
mov
pop
mov
mov
mov
sub
stos
std
ds
testl
insl
xchg
xor
imul
mov
and
fstpt
xchg
cmp
int3
xor
inc
add
aas
ret
je
data16
fnsave
lock
xor
sub
mov
out
fildl
sub
and
push
pop
fdivrs
dec
or
clc
inc
jl
popa
sub
and
aam
mov
dec
outsb
in
cmpsb
push
lcall
pop
cmc
fisttps
xor
mov
sub
or
dec
insl
sbb
lods
mov
ja
mov
xor
push
pop
adc
inc
fcompl
fsubp
push
lock
jnp
cld
push
ret
aaa
pop
mov
int3
xchg
push
inc
jle
pop
popf
cmpsl
push
dec
jecxz
pop
imul
lret
and
cmp
dec
out
pop
lcall
popa
pusha
jne
popa
mov
ja
sti
jae
inc
out
jae
stc
test
xchg
xchg
clc
sarl
mov
push
std
mov
aad
jge
pop
xchg
cmpsl
inc
push
mov
cmpsl
das
rcrb
fsubl
scas
bound
mov
mov
jae
jl
addr16
mov
rcrb
stc
mov
inc
jbe
popa
mov
ss
add
xor
cmpsl
lret
inc
rcr
and
xchg
push
and
mov
rol
lahf
mov
sub
lock
mov
push
inc
cmpsl
popf
jns
adc
rcrb
mov
stos
adc
sbb
sarb
mov
push
mov
dec
adcb
sahf
sub
shll
xor
scas
cld
lea
xchg
mov
mov
mov
inc
loope
imul
inc
dec
lods
cmc
xor
mov
mov
or
xchg
jmp
rorl
adc
xchg
scas
jns
push
xor
push
mov
mov
inc
popa
popa
addr16
push
push
fdivrl
sub
sahf
loop
mov
push
jecxz
test
rcr
repz
inc
ja
ja
inc
xor
push
mov
xchg
or
push
mov
cmc
push
ret
gs
inc
add
fidivrs
out
mov
mov
fistpl
pusha
dec
pop
repz
or
adc
test
js
testb
and
mov
push
int
aaa
pop
ljmp
xor
add
sub
inc
mov
jl
jne
out
rcll
and
dec
pop
cmovs
push
and
cltd
decb
loop
mov
adc
xchg
mov
scas
rolb
push
insb
sbb
push
jmp
shlb
cmp
mov
sub
stos
xchg
movsl
dec
jl
sbb
fldt
jb
lock
and
loop
jl
bnd
and
or
shll
cmp
pop
and
call
mov
idiv
js
jb
into
xor
test
sbb
pop
add
jecxz
mov
addb
pop
sbb
int3
xchg
add
add
jg
mov
inc
push
dec
adc
pop
lret
adc
sub
dec
hlt
lcall
adc
rcll
fs
dec
jo
int3
leave
jp
jmp
and
inc
adc
xor
imul
push
adc
dec
mov
test
js
andb
adc
mov
addl
push
adc
int
cmp
aam
repnz
psubsb
adc
jmp
rcr
sbb
add
xor
mov
xchg
bound
call
pop
ret
mov
sbbl
inc
add
jmp
mov
mov
loope,pn
dec
andl
inc
nop
pop
jo
mov
lahf
and
shrl
inc
cmp
xchg
jae
aas
xchg
jmp
pop
mov
loope
jno
pop
test
test
xor
cld
sahf
imul
mov
jmp
push
jl
jge
cltd
fwait
ret
jecxz
and
repnz
sub
mov
data16
out
or
xchg
fs
mov
fiadds
int3
sti
mov
inc
push
mov
fwait
pop
mov
js
mov
inc
cmpsl
mov
fists
inc
jne
aaa
xchg
pop
jb
cltd
fstl
cmpsl
popf
mov
roll
insl
aad
daa
adc
icebp
xchg
leave
inc
ja
pushf
mov
push
push
rorb
ret
je
mov
ret
xor
mov
jle
shll
add
push
ds
out
or
orb
outsb
lahf
and
and
int3
push
lods
cmc
in
and
pop
enter
or
rcll
cmpsl
pop
mov
aaa
lods
test
pop
xor
or
push
jo
nop
add
mov
fwait
sbb
mov
dec
and
xor
jl
mov
sbb
int3
mov
cmpsl
and
adc
das
fsub
jge
repnz
cs
clc
xor
cltd
into
pop
lods
aad
cmp
int3
cs
cmp
loopne
mov
add
lret
call
cmc
mov
fnstenv
loope
std
xchg
in
pop
xchg
push
cmp
cmp
call
add
cmp
or
out
pop
jne
pop
or
sbb
dec
mov
xchg
std
fmuls
sbb
sbbb
andl
outsl
fnstsw
out
cmp
and
movsb
fsubp
es
leave
sub
popa
stc
inc
inc
jp
xor
ja
aaa
add
in
aad
cli
mov
lods
cmpsb
and
jg
neg
pop
mov
test
dec
adc
sub
inc
xchg
mov
mov
popa
flds
mov
adc
loopne
lock
xchg
ret
std
arpl
add
cmp
cmc
jl
jecxz
pop
rclb
call
lods
add
cmp
mov
jb
mov
cli
lock
ret
sub
dec
pop
xchg
inc
insb
adcl
push
add
dec
inc
push
sub
iret
clc
mov
hlt
out
inc
subl
bound
mov
cmc
stos
ljmp
xchg
pop
faddp
mov
and
enter
ret
pop
lock
aam
call
push
jle
pop
ret
cld
aad
pop
inc
loopne
sbb
cmp
scas
push
adc
push
gs
mov
idivb
dec
and
testl
jle
push
in
arpl
push
pop
and
ja
loopne
test
add
daa
out
pop
loop
in
pop
jge
or
adc
jns
inc
idivb
clc
pop
or
loop
and
aad
or
pop
mov
pop
mov
jmp
sarb
pop
cwtl
ret
jns
dec
inc
fwait
dec
xor
mov
cmp
dec
pop
enter
inc
dec
jge
mov
fs
sbb
adc
out
lock
andl
adc
adc
pop
lahf
test
sbb
ror
ret
aas
std
scas
adc
ss
lock
je
in
int
push
ds
mov
nop
sarl
mov
push
lret
repnz
rorw
push
aas
mov
mov
mov
hlt
dec
enter
and
pop
push
test
push
mov
mov
scas
add
mov
fdivrl
add
or
sahf
fdivp
mov
rcll
pop
lea
scas
in
jmp
into
in
jo
clc
test
std
aad
xor
and
cli
pop
xchg
pop
jl
cwtl
pop
jmp
jnp
mov
pop
lods
in
mov
cmp
push
xchg
arpl
jg
cmp
mov
jnp
mov
int3
rorl
es
in
mov
push
lods
or
or
pop
sbb
lock
adc
fadds
movsb
into
cli
inc
sbb
lcall
fisttps
push
stc
pop
in
or
dec
mov
adc
sub
sub
daa
mov
jnp
std
adc
mov
mov
rclb
int3
jl
push
push
add
push
incb
and
js
out
push
mov
leave
aaa
dec
adc
jecxz
dec
in
inc
mov
icebp
adc
js
mov
fisttps
mov
and
xchg
imul
or
cmp
loop
pop
mov
dec
or
and
mov
setg
scas
mov
jle
shr
pop
mov
stos
jo
push
lcall
xchg
stc
lahf
pop
lret
arpl
jae
mov
adc
push
fldcw
gs
in
shrb
pop
add
dec
xlat
xor
or
jae
aad
fs
dec
push
cli
into
jno
mov
aad
pop
lcall
jmp
nop
mov
dec
xor
push
add
xor
push
sti
dec
mov
jno
sub
inc
out
pop
jle
sbb
rol
cmp
imul
ds
lods
mov
inc
mov
cmp
scas
mov
cltd
mov
push
scas
jl
push
xchg
fs
repz
mov
bound
push
and
int
cltd
xor
inc
or
scas
sub
xor
xchg
repz
clc
fnop
fidivs
xchg
mov
imul
or
mov
and
jno
jp
mov
adc
mov
sub
notb
jae
test
rcr
sbb
mov
shlb
pop
mov
aad
rclb
std
mov
sbb
push
xchg
fadd
pop
lahf
test
mov
add
jns
or
in
mov
rolb
jl
fdivr
sbb
xchg
or
ds
cmp
jmp
movsl
lret
push
or
or
fs
adc
cmpsl
insl
mov
scas
popa
push
loop
push
push
inc
fistl
leave
add
rolb
insb
es
sub
nop
xlat
dec
jmp
imul
mulb
jl
fdivrl
xlat
jecxz
lret
pop
and
and
movsb
dec
xchg
cmc
test
adc
cmpsl
psubb
addr16
push
xchg
outsl
push
cld
mov
test
lret
mov
lea
out
fs
dec
jecxz
rcl
jecxz
or
fs
inc
ret
or
and
jecxz
rcll
inc
push
mov
sub
add
fldenv
fstpl
leave
cmp
xor
dec
inc
sahf
mov
inc
rolb
cmp
jns
call
xor
test
outsb
lahf
lods
lods
push
jns
daa
adc
add
mov
xor
movsl
jge
or
outsl
pop
push
pop
and
mov
pusha
pop
mov
cmp
adc
mov
mov
push
pop
xchg
aad
clc
es
push
movsb
outsl
out
pushf
xchg
orl
cmp
cli
lds
jo
dec
push
gs
xchg
xchg
pop
pusha
imul
stos
and
mov
addr16
rorb
pop
movsb
popa
sbb
mov
adc
mov
xchg
imul
roll
ljmp
fcmovu
jecxz,pt
sub
aad
int3
sbb
jo
jmp
xchg
das
lods
push
pop
iret
inc
sbb
pusha
xchg
adc
sub
mov
mov
pop
cmp
mov
jbe
jp
popf
and
pop
andl
in
setno
dec
mov
xor
lret
or
sub
xor
sahf
jmp
cmp
add
xchg
and
mov
mov
cmp
mul
pushf
mov
add
pop
dec
insb
imul
inc
jnp
inc
push
scas
nop
dec
jge
int3
add
sti
loop
mov
push
dec
mov
fs
rolb
dec
mov
sub
idivb
pop
sbbb
lods
into
loopne
outsb
das
push
lcall
cmp
inc
mov
cmp
mov
mov
add
adc
stos
adc
or
inc
hlt
outsl
data16
imul
mov
inc
jns
mov
in
rcl
xchg
mov
ret
sub
iret
xchg
je
mov
pop
fs
dec
nop
jae
jno
loop
add
cmp
cmp
push
jg
fbld
mov
mov
stos
pop
pop
mov
and
inc
lcall
sub
push
lods
fcmovnbe
jmp
pop
mov
push
inc
dec
in
dec
cltd
sbb
addr16
and
adc
and
test
adc
notl
xor
push
aam
cmc
inc
fs
pop
sti
add
cs
push
sub
sub
sbbb
fnstenv
mov
scas
lods
push
out
inc
pop
popa
scas
or
outsl
add
or
xor
push
inc
ljmp
nop
pop
arpl
aam
fcomps
add
bound
insb
js
jg
pop
jbe
fimull
jmp
xchg
pop
xchg
movsl
loopne
cmp
mov
daa
pop
xchg
sbb
xor
lret
push
adc
mov
arpl
and
jmp
dec
lea
std
out
cmp
enter
orb
sti
clc
aaa
outsb
xor
movb
lock
out
loope
cmp
xor
fcmovb
mov
cmp
test
mov
rcrl
add
push
ret
xchg
arpl
inc
xchg
dec
xchg
into
dec
jae
rorl
adc
stos
xchg
lds
push
ret
cwtl
or
xchg
inc
xor
mov
lret
mov
jns
aad
pop
inc
loopne
inc
shlb
lcall
push
inc
or
stc
ss
hlt
enter
fldl2t
inc
cmpsb
ss
cmpsl
mov
aam
and
sub
repnz
mov
mov
ret
shll
shlb
movsb
sbb
xlat
mov
mov
subb
sub
add
cli
rorb
cmc
hlt
outsb
lods
pop
popl
rol
and
jge
mov
cmpl
sbb
stc
add
cld
imulb
inc
mov
inc
cmpsb
pop
mov
cmp
int
push
xorb
inc
lret
pop
scas
jae
loopne
add
or
jb
pop
mov
das
mov
adc
push
and
xor
fwait
cmp
gs
mov
xchg
fldt
stos
bound
jl
inc
or
fsubr
in
fdivr
mov
or
mov
jl
das
movsl
outsl
movsl
jecxz
mov
dec
mov
inc
les
xlat
into
cmpsl
call
cmpsl
add
rol
jns
jo
out
lahf
ds
inc
jecxz
mov
xchg
stos
xor
lds
jo
mov
pop
stos
cmp
int
cmp
mov
xor
loope
gs
sub
inc
jns
jecxz
xchg
mov
popf
pusha
daa
jecxz
sub
sti
insb
adcl
pop
mov
cmp
clc
cmp
ficoml
cmpsb
gs
sub
int3
je
in
imul
loope
mov
inc
pop
dec
repz
sti
les
xor
js
xor
test
push
fidivl
sub
rcll
jg
adc
dec
in
int
cmp
cltd
sub
jb
push
jmp
leave
cld
data16
les
mov
ret
sub
pop
xchg
dec
sub
push
pusha
adc
xchg
pushf
das
scas
not
cmpsb
lods
popf
inc
lods
inc
or
stos
mov
test
mov
mov
pop
js
dec
sub
fidivrl
rcrb
adc
pop
insl
ror
addr16
movsl
push
push
and
ja
mov
movntq
mov
fwait
inc
shll
sbb
sub
pop
xchg
loope
loop
fimuls
scas
dec
pop
fucomi
adc
jbe
sbb
in
loope
fldl
aad
int
sbb
pusha
jp
mov
adc
pushf
mov
out
and
stos
insl
push
fadds
cwtl
or
push
aad
mov
push
lods
loope
sahf
mov
sbb
push
jne
data16
dec
sub
int
daa
inc
or
stos
and
dec
pop
dec
xchg
dec
test
out
shlb
dec
sub
mov
push
pop
mov
sbb
push
int
pop
cmp
jmp
mov
dec
mov
and
aad
inc
int3
jmp
xchg
or
les
clc
int
mov
dec
imul
and
xor
call
mov
mov
outsl
pop
sbb
xor
or
fbstp
rep
inc
pop
xor
add
jnp
sbb
sub
jo
sbb
and
lret
add
jno
cmp
mov
xchg
sahf
je
adc
inc
inc
lds
dec
jns
jmp
mov
cmp
add
mov
fldl
fwait
loope
adc
push
mov
les
mov
movsb
fcomps
add
negl
rcr
cmp
sub
cmp
pop
mov
stos
repnz
xchg
adc
pop
inc
das
nop
in
dec
jp
in
cld
pop
sahf
loop
dec
mov
aas
sarl
incb
loopne
in
lahf
cwtl
xchg
push
push
sub
in
fsubp
cmp
pushf
lret
fwait
dec
aaa
fisttps
call
adc
cwtl
xlat
pop
movsb
faddl
mov
cld
inc
adc
mov
daa
ror
movsl
push
das
popa
push
stc
mov
iret
sahf
test
cmp
out
mov
xchg
leave
push
enter
mov
sbb
lods
adc
int
push
jl
jnp
in
pop
push
repz
add
cmp
ficompl
jecxz
sar
mov
adcb
push
cltd
sub
sbbb
bound
daa
divl
ds
lret
cmc
js
push
jae
sbb
and
cmp
pop
pop
and
ret
into
icebp
int3
inc
mov
stos
mov
and
jo
jne
push
inc
int3
push
add
push
mov
test
mov
scas
loopne
idiv
dec
xchg
push
lcall
mov
pop
dec
in
cli
insl
push
fwait
lock
or
pop
jnp
push
xchg
insb
fldt
arpl
pusha
and
popa
and
push
adc
sub
scas
push
stos
push
mov
push
fimuls
icebp
jbe
add
or
test
fistpll
icebp
lds
xchg
imul
xchg
lock
dec
inc
and
in
insl
mov
inc
clc
xchg
ljmp
add
pop
add
out
dec
inc
and
shlb
or
xor
loopne
pop
movsl
mov
scas
lret
xchg
and
adc
test
sub
jbe
push
sbb
popf
inc
or
cld
scas
cmp
dec
sysexit
dec
test
outsb
sbb
dec
and
scas
call
xor
sti
lods
add
outsl
cwtl
js
and
jmp
lods
cmp
xor
mov
mov
push
jl
insl
int3
loopne
pop
adc
pop
and
fistpl
cwtl
scas
rclb
xchg
mov
lahf
clc
xchg
cmp
xor
test
int3
in
out
test
cmp
ljmp
xchg
int
mov
fnsetpm(287
dec
pop
call
jge
xor
dec
pusha
or
fisttps
jmp
jl
aaa
cmp
popf
pop
out
ret
testb
xor
lret
in
in
push
insb
add
pop
imul
mov
icebp
pop
test
aam
mov
mov
lret
adc
adc
xlat
test
xor
ja
gs
sub
cltd
std
inc
pop
adcl
sarl
cwtl
mov
fwait
mov
insl
jle
mov
sub
test
notb
addb
jae
cmp
or
cltd
fsubp
movsl
push
dec
pop
dec
es
ljmp
aas
or
inc
or
dec
testb
mov
xchg
sbb
cmp
and
arpl
dec
pusha
test
mov
xchg
mov
push
popf
out
adc
hlt
mov
and
addr16
out
mov
ljmp
outsb
cmp
outsb
add
inc
mov
mov
sti
mov
in
cmp
into
xor
dec
call
fiadds
pop
ret
dec
shrd
xor
mov
ficomps
lea
mov
mov
push
or
outsb
mov
hlt
clc
pop
in
js
out
mov
testl
scas
cs
lods
add
shl
fdivl
cmp
andb
push
jle
ljmp
into
clc
outsl
into
test
stos
inc
pop
hlt
ret
js
xlat
popa
sub
test
mov
mov
push
inc
jae
mov
adc
lret
pop
insl
pop
push
xor
imul
fiadds
push
adc
mov
andl
lcall
lea
inc
lret
into
adc
stos
lods
out
push
pop
mov
xchg
jge
mov
mov
add
mov
sub
mov
mov
add
push
add
cmp
inc
add
xlat
sbb
inc
enter
icebp
lds
push
repnz
inc
jae,pn
sub
push
inc
dec
movsb
mov
dec
jb
out
ret
test
push
sub
inc
sub
cmp
and
adc
add
rcl
aam
js
or
out
mov
jl
add
mov
les
and
pop
fists
or
lock
mov
hlt
or
ret
add
sub
xor
jo
in
fwait
repz
inc
out
jl
pushf
fmuls
or
mov
mov
jmp
mov
or
fwait
imul
es
xchg
sti
mov
lret
int3
movsb
das
fbstp
imul
imul
xor
popa
test
les
incl
icebp
mov
xor
mov
cmp
mov
fsubr
jns
aaa
sub
std
inc
push
sahf
inc
cld
outsb
test
add
pop
ds
sbb
mov
stc
sahf
cld
clc
cli
add
ds
arpl
insl
int3
pop
or
inc
cld
or
pop
std
sbb
jg
jb
jg
jmp
push
leave
push
jmp
inc
fdivp
push
sub
jnp
sub
inc
adc
daa
mov
pop
rorl
repz
pop
or
call
int3
scas
out
pop
sbb
cmp
aad
adc
test
ja
xchg
loopne
cmp
idiv
inc
in
push
mov
or
fisttps
out
jl
out
jns
nop
sbb
into
in
jge
aas
xlat
outsl
loopne
dec
out
mov
jb
push
and
insb
fildl
pusha
leave
mov
push
jmp
jecxz
mov
jns
pop
cli
adc
mov
mov
dec
inc
cmp
jo
xor
sub
test
inc
jle
add
cmpsb
adc
mov
jge
inc
mov
shrb
jns
data16
cmp
and
xchg
fs
xor
xchg
mov
scas
mov
enter
or
mov
mov
mov
sub
sbb
shll
add
rcrb
cltd
shrl
inc
mov
cmp
imul
pop
cltd
mov
mov
xlat
in
mov
outsb
out
scas
sbb
clc
xor
or
stos
inc
inc
sbbl
rcr
out
cmp
leave
sbb
cmp
js
gs
add
xlat
jmp
repnz
lds
lea
cld
mov
in
int3
push
outsb
pop
or
push
inc
push
add
cs
jecxz
ja
and
mov
inc
mov
sbb
into
fisttpl
sub
stc
clc
adc
fmull
dec
and
mov
sub
enter
pop
jo
dec
sbb
pop
popa
pop
jnp
sti
mov
int
mov
movsb
jmp
je
clc
dec
scas
hlt
add
push
inc
jg
jmp
push
jns
insl
or
int3
ret
cmc
cwtl
lds
dec
xor
jmp
inc
dec
xchg
lods
dec
clc
mov
insl
adc
pop
lock
sub
xor
mov
xor
inc
cmpsl
lods
xchg
cmp
cmp
cmp
test
fisubs
mov
arpl
and
push
lods
icebp
pop
movsb
xchg
dec
imul
jl
std
xchg
rcrb
out
sbb
shrb
push
arpl
jno
shrl
out
dec
xor
dec
adc
fucomip
mov
mov
adc
xchg
lods
mov
cmpsb
je
sub
sahf
cli
pop
and
daa
push
repz
dec
pop
xchg
loop
jbe
adc
test
daa
mov
jno
outsb
shl
mov
jg
cmp
repz
ret
add
jmp
inc
hlt
scas
xlat
push
lock
loopne
rcl
call
jle
push
or
test
mov
pop
mov
mov
push
sbb
nop
xchg
fucomip
push
mov
out
jg
mov
into
imul
inc
sbb
js
in
mov
or
adcb
out
sarb
mov
jmp
add
push
les
dec
stc
pushf
lods
push
push
dec
adc
int
xorb
cmp
ficoms
add
mov
movsl
aad
jno
lds
cli
out
lcall
pmulhw
xchg
daa
subl
sub
movsb
roll
test
jmp
hlt
add
dec
push
lods
push
addl
add
adc
adc
jbe
lods
pop
movsb
mov
jno
push
gs
xor
or
push
mov
pop
repnz
and
mov
adc
clc
and
scas
insb
sub
cmovnp
in
cmp
rorb
lcall
sub
xor
fmuls
fprem1
push
jp
mov
fisubrs
pop
roll
and
imul
dec
test
imul
daa
sub
aas
xchg
mov
cmp
stos
call
jmp
sar
mov
sub
scas
sub
xlat
sbb
out
jg
add
dec
ljmp
or
and
and
mov
rcll
dec
clc
push
pop
gs
push
cmp
jns
mov
test
mov
mov
ret
call
dec
scas
jmp
mov
adc
fdivs
cs
push
mov
rcrb
in
push
jle
sbbb
or
mov
sbbb
adc
leave
pop
inc
dec
les
pop
out
cmp
pop
test
rolb
cmp
xchg
loope
push
jmp
mov
ljmp
adcl
pop
pop
imull
jnp
aas
or
jl
notb
sbb
data16
fxch
sbb
and
pop
add
xchg
das
repz
stc
testl
loop
jnp
imul
fists
lret
inc
pop
cltd
out
sub
mov
outsl
mov
xchg
lret
sbb
mov
inc
jle
xor
or
daa
or
rorb
loopne
xchg
jns
ja
scas
sub
push
and
ret
sub
pop
inc
sub
bound
adc
imul
in
cmp
add
sahf
jo
cs
rclb
inc
out
pop
pop
loope
adcb
aam
jmp
sbb
cltd
rorb
aaa
leave
int
popa
loop
fwait
insb
mov
mov
nop
jge
jg
mov
scas
aaa
iret
in
pop
mov
out
cs
fstpl
ljmp
adc
mov
xchg
cmpsb
outsl
sub
push
cmp
jo
popf
mov
gs
fldcw
add
xor
in
std
mov
sbb
push
bnd
xor
push
jae
jo
inc
jg
arpl
mov
dec
aas
jno
insl
insl
dec
lea
hlt
sub
jb
cli
or
pop
dec
mov
mov
test
mov
xor
dec
movb
sbb
das
mov
mov
pop
faddl
and
in
in
idivb
dec
in
jmp
and
dec
daa
pop
out
xchg
mov
dec
dec
popa
and
xchg
pop
pop
lods
xchg
loope
inc
pop
divb
add
loop
pop
sti
jmp
and
adc
mov
scas
jl
lea
ss
jnp
xor
in
dec
cltd
leave
nop
iret
fxrstor
sahf
iret
jns
iret
aad
lods
push
mov
sbb
cmp
ds
decl
mov
aaa
fldl
mov
add
rorb
scas
cld
sub
fs
inc
sbb
icebp
push
rorl
cli
jb
imul
daa
cwtl
add
cli
xor
xchg
xor
add
mov
fmull
add
pop
sbb
inc
mov
rclb
int
hlt
bound
repnz
cmc
aam
pop
in
cwtl
testl
inc
dec
bound
outsl
dec
mov
or
jnp
sub
sbb
xchg
dec
cmpsb
xlat
bound
dec
shlb
fsubrp
cmp
sbb
xchg
ds
outsb
out
dec
xchg
test
or
aam
inc
xor
mov
jbe
js
jbe
jns
hlt
fmuls
sub
xorl
dec
imul
es
movsl
adc
jecxz
fisubs
add
movsl
push
push
dec
sub
in
push
mov
test
mov
and
jmp
faddp
jge
mov
cmp
arpl
mov
mov
gs
jb
sub
push
shr
jno
and
add
lret
xchg
sbb
rorb
popa
testb
xchg
xchg
inc
outsl
test
inc
xchg
stos
dec
out
test
ss
lds
jo
pop
cld
repz
jns
out
inc
popf
push
loope
outsl
sahf
or
lods
cmpsb
test
or
ljmp
push
push
push
repz
rolb
fbstp
dec
cmp
pop
sub
push
repz
icebp
push
jne
dec
std
xor
push
div
ja
lock
loope
xorl
mov
pop
mov
in
fstps
lock
jno
ret
lret
jne
add
pop
cmp
xor
cmp
fiadds
add
aas
and
add
and
enter
imul
jb
jge
mov
or
lods
mov
testb
sbb
ja
call
test
and
lret
jno
dec
in
or
stos
inc
jp
loope
mov
push
add
sub
sbb
and
lret
xor
push
popf
pusha
mov
xchg
and
fmull
sbb
dec
test
imulb
hlt
sub
add
stos
in
popf
cmp
lcall
xchg
shlb
ds
comiss
lret
jnp
cmpb
imul
mov
add
das
lock
or
enter
add
insl
cmpsl
jmp
xchg
ret
aas
jg
add
or
scas
mov
mov
xchg
xchg
out
xchg
mov
lea
in
add
xlat
sti
push
and
sahf
mov
stc
insl
jp
and
cmpsl
add
cmp
sbb
add
outsl
jo
push
mov
jmp
mull
mov
dec
insb
pop
sbb
roll
popa
clc
push
add
sub
sbb
test
in
xor
std
cs
sub
pop
mov
push
movsb
loope
pop
sbb
out
scas
das
fldl
mov
fdivrs
setl
xor
jne
adc
mov
std
ret
pop
dec
sub
and
fwait
jnp
and
sbb
sub
or
cmp
sbb
or
dec
add
movsl
push
cmp
adc
pop
dec
sub
jno
movsl
jecxz
cltd
cmp
leave
add
and
mov
jo
into
loope
mov
stos
sub
jl
and
sub
aas
ds
sub
pop
aaa
outsl
sbb
movsb
in
xchg
movsb
cmp
gs
mov
dec
or
out
int3
lret
dec
bound
js
loope
jp
in
lahf
rclb
leave
mov
inc
or
repnz
lret
lcall
lea
xor
in
jmp
mov
frstor
ret
mov
sbb
fimull
clc
ficoml
lret
mov
inc
jnp
fdivp
cs
mov
cwtl
pop
jecxz
mov
lahf
popf
pop
daa
ja
adc
lods
jle
jnp
mov
clc
fldcw
sub
sub
mov
or
push
cwtl
cld
push
fisttpl
add
xchg
jnp
popf
orl
jmp
ret
or
or
jge
repz
stos
jne
cmp
mov
mov
movsl
push
daa
cli
in
push
inc
or
mov
shll
aaa
cld
dec
sbb
mov
cltd
scas
or
sbb
sbb
loope
clc
add
mov
outsb
in
out
jno
xor
jmp
out
dec
enter
pushf
inc
fisubl
jo
mov
adc
in
or
fsubl
incl
imul
shrl
push
nop
es
or
and
mov
dec
je
dec
mov
mov
lock
xchg
test
mov
in
push
test
adc
mov
sbb
in
stc
cli
cld
cs
test
or
test
insb
nop
xlat
idivb
mov
in
pop
int
lahf
das
sbb
jnp
sti
or
bsf
sub
fidivs
push
xchg
les
js
inc
inc
fcmovnbe
pop
fcmovnb
rclb
push
and
pop
or
mov
stos
fstps
push
mov
in
xchg
dec
jne
cld
push
test
dec
sub
xor
push
cld
push
filds
adc
adc
xlat
mov
cmpsb
outsl
sbb
enter
dec
stos
sti
dec
mov
xor
xchg
imul
leave
rol
test
mov
ret
dec
movsl
add
add
jns
lea
testb
sbb
push
push
lahf
xor
jmp
push
pop
mov
es
int
add
leave
fwait
in
aam
in
int
pop
jno
mov
push
pop
jne
pop
and
cmp
andl
sbb
jbe
xor
pop
inc
jnp
mov
popf
in
sahf
ret
pop
in
inc
jge
aaa
roll
mov
cmp
adcb
ljmp
mov
scas
into
push
add
cwtl
inc
dec
loop
push
mov
hlt
pop
adc
push
or
mov
lods
cmp
into
add
insb
lahf
add
mov
lcall
cld
jbe
mov
inc
cmpsl
pop
and
push
mov
push
add
dec
inc
in
push
pop
not
outsb
jmp
adc
xchg
das
push
nop
add
adc
xlat
pop
push
gs
and
enter
pusha
fmul
inc
fstps
pop
cs
dec
jne
cwtl
cmp
sub
jmp
in
les
or
fwait
roll
xchg
pop
jp
sti
int
sub
sbb
push
fisttpll
sub
filds
cli
daa
cmp
dec
ret
arpl
repnz
sub
cmp
pusha
xor
ffreep
pusha
mov
mov
jmp
stos
adc
pop
cli
movsb
cwtl
mov
jo
jb
lcall
sbb
xchg
xchg
cmc
mov
mov
imul
shll
add
insb
mov
dec
sbb
inc
lret
sbb
xchg
or
dec
push
pop
add
fabs
xchg
jp
jg
ljmp
scas
repz
stos
cmc
push
jnp
aaa
xor
rcrl
lcall
test
in
pop
mov
pop
and
pop
sti
sub
sbb
clc
je
push
dec
xchg
sbb
rclb
fbld
mov
jl
les
mov
aaa
ss
inc
mov
insb
sub
adc
aas
add
pop
cmp
sub
jmp
mov
mov
add
push
shll
and
jns
mov
pop
and
jae
ffreep
aad
les
sbb
or
sbb
mov
ljmp
mov
clc
nop
lods
jmp
adc
mov
int3
mov
fstpl
hlt
or
pop
sbbl
dec
inc
cmp
push
push
mov
jle
popa
int3
dec
fldln2
loope
imul
mov
daa
mov
inc
outsb
mov
sarl
and
push
adc
mov
mov
ss
imul
adc
pop
pop
mov
mov
jecxz
fistpll
xchg
inc
and
mov
mov
std
pop
in
sbb
dec
jno
xlat
xor
sbb
jmp
pop
out
ds
insl
cs
mov
cwtl
out
ja
xor
and
ret
lret
push
das
fimuls
in
insb
fmuls
out
jae
popa
fdivs
mov
lods
cmp
sarl
vpunpckhdq
jns
pusha
test
mov
ret
ffreep
add
adc
xor
add
fxch
aaa
add
sub
mov
aas
and
in
lds
pop
inc
dec
fcomps
dec
cmp
inc
decb
xchg
dec
mov
xor
push
fildl
bound
xor
inc
popf
ret
rcrl
imul
pusha
mov
sbb
xor
or
inc
cmc
in
repz
add
xadd
xor
lods
mov
lds
jo
pop
or
jle
mov
sahf
sub
negl
cltd
mov
lods
ja
add
xchg
nop
dec
push
hlt
icebp
ud2
jmp
sbb
cld
cmp
adc
xchg
in
les
xorb
pop
int3
addr16
stos
inc
jo
out
lea
mov
mov
pop
in
bound
bnd
mul
push
jg
pop
loopne
mov
out
jmp
mov
cmp
test
scas
mov
scas
test
stc
loope
outsl
xchg
imul
and
aaa
popf
xchg
ljmp
test
xchg
add
cmc
jmp
test
fwait
inc
imul
int
jns
movl
aas
jp
adc
cmp
rorb
and
mov
dec
shll
std
loop
xchg
cwtl
cmp
and
inc
jnp
fisubrl
jg
insb
mov
test
or
clc
mov
mov
pop
lds
fistpl
mov
mov
dec
addl
scas
inc
jg
xor
jp
out
push
int
jp
call
cmp
adc
ds
cmp
push
xchg
pop
insl
call
cmpb
loopne
sub
fwait
roll
xchg
test
pop
loop
nop
jp
js
cmp
lcall
icebp
or
popf
sub
adc
pop
js
enter
ds
mov
adc
push
jmp
xlat
subl
dec
jnp
icebp
fwait
dec
fimull
xchg
jb
fcomp
mov
clc
sub
je
sbb
xchg
push
inc
jge
out
imul
inc
and
and
or
movsb
out
fwait
mov
out
cmp
mov
in
sub
fidivrs
and
mov
jg
jp
faddl
mov
push
out
popf
xchg
adc
inc
jg
fisttpl
mov
stos
mov
shlb
sahf
or
push
fmull
icebp
out
ficomps
sub
sub
in
push
inc
pop
test
lret
sti
hlt
into
xchg
push
push
imul
loopne
xchg
rcrl
hlt
sub
pop
xchg
fdivl
add
gs
test
inc
insl
mov
mov
mov
cmp
mov
aaa
xor
mov
and
inc
mov
push
push
jo
movsb
fbld
sub
dec
cmp
outsl
sarb
cmp
cmp
dec
in
les
sub
addl
ja
mov
adc
outsl
into
repnz
xchg
xor
bswap
pop
or
jnp
pusha
mov
or
pop
jp
cmp
mov
pop
xor
or
shrl
sbb
push
xor
adc
push
aas
loopne
mov
outsb
xchg
cmpsl
std
stos
sbb
mov
xchg
cmovae
mov
cmpsl
out
jecxz
and
fsubs
and
lods
push
jle
xor
ret
inc
sahf
mov
xlat
jle
pop
dec
scas
add
stos
mov
push
scas
pop
xchg
adc
sarb
or
xchg
jne
xchg
jmp
pop
xor
mov
jmp
int
mov
jg
roll
ds
stos
cmpsb
in
xchg
icebp
adc
push
xor
push
fsub
push
insl
or
inc
sub
ffree
add
or
stos
cld
rcll
fists
or
push
mov
adc
mov
mov
adc
inc
shlb
xor
adc
loope
les
cmp
aad
cmp
out
jb
cltd
and
out
ja
push
adc
sbb
sbb
enter
xor
add
popa
mov
orl
shr
fnstcw
out
shlb
xlat
imul
mov
push
mov
xchg
popa
loopne
xchg
xchg
dec
popf
ja
movsl
popa
pop
outsb
pop
and
push
cltd
mov
daa
mov
outsl
fs
lock
rol
daa
mov
fisubrs
cmpsb
mov
out
pop
and
xchg
call
inc
ficoml
movl
push
xor
pop
xchg
dec
mov
xor
imul
in
cmpsb
add
adc
and
inc
aad
jmp
pop
sbb
clc
mov
mov
sbb
xlat
ficomps
sub
idivl
xchg
push
sbb
jp
adc
test
jp
jno
pop
mov
jp
cmp
xchg
push
jg
cmp
dec
mov
rolb
and
ffreep
test
rcrb
push
inc
jns
jl
mov
rolb
es
cmp
sub
in
daa
push
add
dec
mov
ret
test
jnp
testl
xchg
shll
test
jae
pop
sub
in
push
incb
and
es
jecxz
adc
les
mov
push
xchg
sbb
shll
cmc
add
lds
jmp
sbb
xor
mov
sbb
mov
rol
rorb
mov
stos
push
jns
jnp
cmp
push
outsb
mov
addr16
je
call
add
movsl
rcll
scas
jb
dec
testl
lcall
ds
pop
dec
mov
xor
xor
adc
std
jo
data16
push
pusha
shrb
jge
rolb
fbld
movl
popa
ror
ficoms
push
xor
hlt
jle
or
cwtl
inc
or
cltd
subl
popf
mov
mov
and
stos
dec
bnd
aas
jo
or
push
ja
push
stos
push
adc
dec
cwtl
xor
aas
mov
adc
jno
out
out
mov
jb
mov
test
cmpsl
push
mov
pop
mov
mov
pop
mov
dec
xchg
cmpsb
sti
daa
add
or
dec
pop
repz
or
aam
mov
mov
xor
or
jae
int3
and
fcoms
lret
pop
sbb
inc
fiaddl
dec
pop
add
mov
fiaddl
pop
shll
adc
decl
mov
add
movsb
scas
sahf
mov
pop
mov
inc
sbb
dec
cmpsl
aas
dec
pop
mov
or
xchg
sahf
mov
mov
cmp
mov
mov
in
ret
and
mov
and
lock
loop
jmp
jmp
sbb
lds
mov
dec
pop
jo
xchg
and
repnz
mov
dec
dec
cmp
int
push
aam
ljmp
dec
xchg
mov
movl
jne
jg
stos
xor
int3
adc
mov
jo
or
and
xchg
sbb
jo
daa
aaa
mov
adc
push
add
in
mov
mov
jp
movsb
inc
outsb
stc
into
or
cmp
shll
mov
xchg
gs
adc
mov
clc
dec
cmc
mov
jnp
sarl
inc
push
movsl
psubsw
dec
sbb
fwait
pusha
scas
lds
sahf
or
divb
push
adc
hlt
std
fnstsw
das
mov
in
jge
cmp
pop
and
stos
call
arpl
fidivs
xchg
xor
fldenv
sbb
mov
sbb
mov
jno
xchg
adc
les
pop
jge
div
daa
insl
nop
outsl
fdiv
ss
ja
subb
les
ret
mov
ficoml
push
mov
in
lds
ds
fldcw
in
xor
lret
mov
dec
sbbl
mov
lcall
push
mov
sub
into
cmp
sti
cmpsb
addl
dec
cmp
xor
mov
cmp
sub
adc
mov
mov
frstor
cmpsl
push
mov
mov
scas
mov
jb
mov
pusha
add
fcomps
mov
imul
and
insl
gs
filds
and
cli
sub
js
loop
cld
add
gs
pop
fwait
mov
iret
push
lods
stos
orb
jns
lods
bound
sbb
lret
pop
test
push
lea
adc
stc
xchg
inc
sahf
imul
push
push
or
pop
mov
fildll
daa
icebp
and
dec
mov
or
out
es
mov
stc
add
and
cmc
decb
adc
and
adc
or
mov
dec
push
jno
cltd
fisubs
add
decl
xchg
sub
enter
mov
in
stc
aaa
dec
mov
mov
push
or
pop
daa
in
push
js
sahf
push
xor
lods
stos
loop
mov
and
mov
out
movsl
dec
mov
adc
jnp
inc
sub
fnstsw
pop
xlat
and
jmp
lods
icebp
push
mov
gs
arpl
idivb
call
xor
add
leave
aad
and
stos
lcall
mov
xlat
nop
mov
repz
fwait
loope
jo
sahf
js
ja
jmp
sahf
pop
test
jbe
ljmp
jmp
add
cmp
fsub
insb
imul
push
pop
fs
cmp
aaa
cld
xor
push
lds
sub
xor
dec
sub
add
call
mov
sub
mov
cltd
jl
shrb
jp
cwtl
or
pop
popf
push
inc
inc
loop
outsb
jo
mov
rcrb
jmp
jge
xor
out
lods
lock
inc
mov
int3
fdivl
pop
inc
mov
stos
and
jno
xor
repnz
in
rorl
mov
imul
mov
and
hlt
sbb
and
repz
je
mull
inc
pop
jge
push
out
pushf
in
push
or
inc
out
jp
jg
cmc
outsb
sbb
sub
sub
decb
subl
sub
sbb
call
popf
mov
xor
mov
std
jo
call
in
mov
mov
call
mov
roll
scas
stos
sbb
add
pop
cmp
mov
and
dec
aas
sti
movsl
sub
dec
lret
imul
punpcklwd
add
cwtl
inc
cltd
mov
sub
adc
shll
ds
lcall
rcrb
cmp
sbb
stos
mov
xor
jle
jae
leave
bound
cltd
fildl
push
sbb
cmp
mov
or
add
cmp
ret
dec
xchg
adc
aaa
xchg
mov
ja
jecxz
dec
mov
mov
mov
cs
jmp
mov
les
repz
cmp
test
mov
adc
mov
sbb
mov
adc
xchg
shll
scas
jmp
cmpb
leave
xchg
fsubl
mov
data16
push
fisubs
mov
cmp
inc
fiadds
xlat
push
out
cltd
das
or
movb
fisttps
mov
pop
xorb
movsl
pusha
sahf
mov
jl
jg
outsl
popl
bound
int3
iret
pop
jb
out
jge
mov
shlb
shrb
test
pop
mov
imul
push
aas
and
daa
inc
subl
sub
inc
sub
jb
lock
push
adc
scas
in
inc
shlb
ja
notb
lret
pop
pop
insl
push
fs
xchg
cmp
scas
and
out
pusha
inc
jle
cli
out
data16
pop
xchg
push
push
adc
add
cld
inc
cmp
inc
mov
test
nop
mov
aas
lahf
push
pop
scas
outsl
fcomps
mov
cltd
fcoms
loop
pusha
push
fwait
sbb
repz
rep
sub
inc
jno
add
mov
cmpsl
popf
lods
mov
mov
mov
lahf
ret
push
pop
or
scas
int
imul
shll
jl
inc
aad
sbb
hlt
lock
popf
cmp
pop
jbe
xchg
movsl
mov
fisubl
xchg
jp
mov
pop
into
and
arpl
dec
rcr
pop
mov
mov
push
sbb
cmpsb
push
inc
mov
scas
loope
aaa
xor
pop
mov
mov
bound
ja
push
stc
and
sbb
pop
inc
pop
loope
repz
inc
push
das
and
gs
pop
shrb
data16
adc
mov
push
std
xor
das
adcb
mov
sub
es
add
pop
rcll
nop
jle
inc
mov
cwtl
jnp
lods
or
pop
lret
test
and
xor
sbb
adc
outsl
stc
jecxz
popa
hlt
push
jl
sbbb
pop
inc
fsubl
and
int3
mov
mov
movsb
mov
jns
pusha
jbe
mov
cmc
push
stos
pop
add
pop
mov
cmp
daa
bound
dec
adc
add
push
jle
push
pop
imul
in
and
jns
sub
aas
cwtl
mov
repnz
lahf
sub
adc
sbb
stos
nop
test
xor
inc
hlt
in
stos
insb
mov
dec
jae
in
and
xchg
test
mov
push
divb
or
out
mov
std
dec
cwtl
arpl
jae
cmpsb
andb
ljmp
rcrb
jne
fs
or
std
js
das
dec
cmp
ret
loopne
mov
and
or
jns
dec
and
add
cmpsb
lods
inc
inc
xorb
pop
mov
cmp
gs
lods
xchg
sub
mov
mov
mov
pop
sbb
inc
rcll
fadds
mov
hlt
push
stos
sahf
jge
cltd
xor
cmp
jl
shll
xchg
add
inc
les
lret
mov
aad
jg
pop
lock
cs
in
hlt
iret
mov
je
dec
xchg
push
dec
push
int
or
mov
add
test
lret
or
lods
push
dec
xor
sub
xor
movsb
shll
pop
xchg
cltd
jp
sbb
jge
sub
pop
dec
sub
and
sbb
adc
jg
addb
lahf
loopne
ljmp
push
outsb
xchg
sbb
pop
sahf
and
mov
or
mov
aaa
cmc
gs
repz
dec
xchg
bound
out
into
mov
jne
mov
mov
lret
and
sbb
cmp
shrl
pop
mov
inc
inc
and
cmp
pop
aaa
mov
popa
dec
lea
push
adc
jg
inc
jl
push
mov
adc
addb
and
cmp
pop
scas
xchg
push
andl
shrl
nop
jge
or
icebp
fwait
sbb
cmp
mov
adc
in
or
xor
add
cmp
outsl
xor
sbb
testb
fsubl
mov
lea
out
mov
dec
cmpsb
adc
cmp
cli
jnp
or
gs
mov
push
aam
pop
je
pushf
jge
xchg
stos
jns
std
popa
pushf
fcompl
jp
xor
into
mov
scas
subb
or
sbb
in
dec
jae
in
nop
sub
mov
fiaddl
es
push
cld
add
arpl
insb
cmp
int3
incl
dec
mov
scas
into
rcl
cs
fdivrl
xlat
out
into
add
lods
loopne
mov
in
xor
push
aam
aaa
sbb
std
mov
bound
scas
mov
pop
mov
shrb
mov
jbe
dec
std
data16
pop
jne
jae
pop
andl
xchg
repnz
out
out
jno
xor
mov
sub
in
or
imul
mov
mov
xor
lahf
dec
sbb
ljmp
cwtl
cmp
jo
inc
xlat
dec
cld
movsb
mov
xor
outsb
lea
xor
ss
xor
cs
dec
or
into
insl
cld
adc
pop
push
fldenv
stos
aad
add
out
cwtl
pop
jle
and
pop
cmp
std
ljmp
maxps
dec
mov
ss
lcall
test
cmp
addb
sub
sbb
mov
dec
pop
in
add
cmp
mov
shr
push
jg
mov
inc
sbb
xchg
icebp
pusha
data16
ficoms
aaa
xchg
pop
jmp
push
pusha
clc
push
xor
lahf
aas
adc
mov
mov
inc
imul
mov
cmpsl
data16
lret
fnstcw
jne
bound
cmp
dec
std
add
mov
mov
je
daa
mov
dec
das
ret
and
dec
mov
lds
jns
adc
and
or
mov
mov
cwtl
insb
test
loopne
fdivp
fs
mov
push
rcrb
leave
and
pushf
decb
push
sbb
je
jmp
addps
inc
sub
pop
in
jo
sbb
add
mov
jecxz
add
stos
es
xor
mov
jno
pushf
cmpsb
xor
push
repz
aam
pop
cmp
or
push
ljmp
adc
aaa
dec
mov
push
fisttpl
xor
xor
repz
cli
dec
jbe
mov
pop
inc
push
pop
mov
xchg
ficomps
sarl
mov
rolb
mov
and
cvtpi2ps
pop
and
sbb
out
idivl
pop
mov
push
pushf
data16
pop
mov
repnz
pop
and
xor
das
sub
jbe,pt
insb
xchg
sbb
lods
fsts
outsl
xlat
inc
cli
mov
mov
inc
sbb
jbe
xchg
fldcw
faddl
cs
push
loopne
or
test
cmp
fmuls
data16
bswap
out
mov
div
adc
mov
pushf
ss
aad
push
push
popf
jmp
and
xchg
std
loopne
test
mov
xorl
js
dec
pop
sub
or
stos
cli
shll
cmp
mov
lcall
or
jbe,pt
iret
sub
out
dec
cs
pop
jbe
dec
mov
fmuls
mov
mov
lahf
aad
loope,pn
popa
faddl
push
push
jo
inc
push
and
mov
xlat
and
stos
lcall
or
test
pop
gs
imul
and
ss
loopne
lea
ds
mov
or
cmp
cld
lahf
or
inc
repz
in
sbb
dec
sub
out
out
data16
xchg
dec
lcall
sub
loop
xchg
push
jmp
jge
jg
push
int3
and
adc
xchg
aaa
jecxz
popf
lock
xchg
jae
pop
mov
jne
std
pusha
inc
push
xchg
icebp
fisttpll
push
in
test
ds
shl
or
sbb
and
and
push
lahf
xchg
fiadds
push
mov
cltd
cmp
leave
cli
mov
inc
mov
fmul
sub
jne
or
jecxz
push
or
push
xchg
das
pop
std
scas
imul
lock
cwtl
mov
rol
pop
mov
in
mov
lds
xor
mull
mov
xchg
adc
arpl
movsl
out
adc
aad
fimuls
mov
pushf
dec
out
jg
cmp
arpl
lcall
movsb
mov
jae
aad
test
enter
push
mov
push
scas
or
icebp
sbb
sub
xchg
add
cmpsb
add
popa
lahf
rcrb
ficoms
pop
mov
jae
in
or
pop
pop
roll
in
or
icebp
xchg
mov
cmpsl
add
in
leave
data16
aas
cld
mov
lock
inc
ret
mov
stos
in
xchg
cmp
cs
fistl
xor
sbb
mov
jae
mov
les
fwait
xor
add
cmpl
outsb
out
pushl
test
insl
xlat
scas
pop
jnp
xchg
or
mov
xchg
or
test
aad
scas
jnp
jmp
scas
lcall
imul
xor
inc
fs
jp
fcompl
cmp
lock
aad
inc
push
jne
pushf
ret
jne
and
shlb
and
fldl
add
pusha
aas
addr16
rcrb
dec
dec
cld
and
and
inc
jg
movsl
xor
adc
xchg
sbb
sub
cwtl
fiaddl
data16
inc
pop
mov
into
mov
push
push
enter
lahf
pop
jg
xchg
orl
lds
mov
jmp
je
adcl
pusha
sarl
fists
adc
sbb
shlb
stc
aam
in
or
pushf
xchg
sbb
ret
push
mov
mov
cltd
sub
xchg
push
xor
jno
mov
pop
jns
cmp
push
and
aad
cld
pop
sbb
pop
mov
dec
pop
lcall
fs
ljmp
jp
es
loopne
pop
jle
sub
outsb
cwtl
ret
enter
pop
mov
int3
adc
cmp
mov
mov
mov
and
mov
pop
testb
je
fnstsw
jne
loope
and
mov
lea
out
ds
dec
mov
pop
cmp
or
pop
mov
mov
cmp
inc
add
cmp
out
push
xor
ret
outsb
rorb
push
cmp
add
jp
fldt
mov
cmp
jp
mov
add
es
in
sahf
ljmp
divl
clc
hlt
test
sub
lret
imulb
rcrb
jle
cmpsl
xchg
sbb
lahf
orl
xchg
pop
daa
out
push
sub
and
in
mov
das
xor
mov
mov
push
xchg
insl
pop
mov
sub
sbb
jbe
fildll
push
and
and
stos
dec
or
mov
xchg
pop
xchg
sub
pop
xchg
data16
jae
int3
inc
mov
cmp
mov
add
mov
mov
incl
int3
xlat
popfw
jns
cmc
pop
aaa
cmp
xlat
fdivrs
iret
mov
dec
imul
in
test
cmp
aam
jbe
pop
xor
xchg
adc
or
push
jae
add
jl
fs
int
in
adc
push
jne
daa
mov
mov
js
push
movsb
xor
daa
mov
lock
or
insl
lods
leave
scas
lock
loopne
popa
mov
and
xor
bound
xlat
add
adc
les
dec
aas
push
mov
push
pop
inc
iret
das
popf
pop
jnp
adc
lock
and
scas
inc
or
sub
cmp
test
sbb
repz
cmp
jbe
rolb
sti
xchg
cmc
inc
add
sbb
inc
les
or
hlt
mov
mov
jmp
cwtl
lahf
xchg
insl
cmp
or
stos
mov
add
iret
add
sbb
xchg
divb
sbb
outsb
adcb
imul
sbb
dec
add
push
fdivl
mov
lea
gs
xchg
mov
popf
push
dec
imul
data16
adc
lret
jp
pop
in
in
out
call
arpl
add
jl
outsb
in
adc
test
test
test
outsl
aam
outsl
mov
or
mov
cmp
pop
into
enter
arpl
test
out
jo
out
push
mov
cmpsb
pusha
shrb
cmp
push
aas
cld
outsb
push
mov
repnz
push
sub
mov
pop
and
mov
shl
outsl
out
stc
push
inc
pushl
aad
add
xchg
ret
lock
xor
push
shll
test
cmp
pop
aad
jbe
shll
mov
cwtl
mov
jp
dec
pop
dec
push
leave
dec
dec
in
cmp
pop
xchg
adc
enter
out
movsb
hlt
mov
xor
shll
sarb
dec
lds
dec
xchg
pop
inc
sbb
cwtl
xor
pop
mov
imul
adc
mov
push
aas
dec
fdivrs
addr16
adc
cmp
int
inc
idivl
imul
dec
add
adcl
sbb
lea
out
andb
fidivl
gs
inc
gs
mov
push
sub
pop
xchg
cli
lcall
adc
arpl
mov
int
data16
inc
jno
outsl
jp
add
lea
pop
add
out
add
inc
add
scas
orb
push
push
leave
imul
repz
sbb
inc
sbb
mov
push
push
mov
loope
jne
loope
push
data16
jae
jo
in
loop
cwtl
lcall
mov
out
jo
imul
scas
jg
or
in
dec
adc
push
fcoml
cmp
in
cs
aad
cmp
push
pop
add
scas
arpl
icebp
dec
inc
lods
jl
xlat
stos
cmp
add
mov
dec
mov
sub
clc
icebp
push
ja
and
cmp
es
inc
movsl
xchg
ljmp
popa
insl
push
jae
and
std
mov
jp
outsb
xor
mov
vpaddsb
dec
dec
imull
lahf
in
jnp
imul
rorb
push
sbb
testb
call
std
gs
cltd
jle
or
cmp
pop
mov
xor
cld
js
jmp
and
insl
dec
jmp
pop
dec
scas
mov
jo
sbb
jg
adc
adc
mov
mov
enter
dec
jp
pop
ret
inc
sub
jnp
pop
outsl
aaa
push
pop
xchg
aaa
int
incb
pop
aad
ljmp
cltd
push
ret
in
inc
je
shrb
inc
mov
sub
xchg
insl
lods
adc
shrb
cmp
fwait
repnz
aas
lcall
mov
mov
ret
divl
out
bound
in
xor
xchg
sbb
imul
rcrl
test
in
test
sarl
fnstsw
jno
rcrb
ss
or
in
iret
pop
xchg
fists
jno
xor
adc
sub
out
lcall
mov
popa
pop
lcall
out
mov
divb
cmp
or
pop
clc
pop
int
std
push
cmp
and
xchg
push
add
nop
sub
dec
push
repnz
inc
push
imul
scas
mov
sahf
out
imul
mov
jg
orl
jmp
mov
mov
jno
inc
sub
adc
mov
cmp
push
mov
out
fwait
add
push
and
xor
jae
fdivrp
add
outsl
pop
stc
dec
xchg
push
lret
lea
lods
out
je
sysexit
cmpsb
jb
ja
jo
cmp
dec
ret
addr16
jnp
xor
mov
add
jb
icebp
mov
or
mov
mov
insb
and
rcr
cmp
mov
sar
inc
mov
sub
in
mov
adc
cmp
enter
dec
push
les
ret
setp
xchg
and
and
cmp
sub
sub
lahf
cmp
icebp
jnp
hlt
pop
aas
cmc
lods
add
jae
aas
adc
mov
sbb
dec
and
call
in
xchg
mov
ljmp
push
inc
adc
sub
xor
xor
mov
add
dec
in
cmpsl
int
jmp
push
dec
inc
mov
sub
xor
mov
jns
fstl
mov
stc
inc
rcrb
inc
adc
out
outsl
add
push
cs
pop
adc
mov
movsl
imul
or
movb
jbe
ret
xchg
xchg
push
xchg
lods
inc
mov
cmp
add
mull
cmpb
push
add
xchg
xor
mov
push
xchg
adc
pop
das
mov
lret
stos
mov
bound
ljmp
fwait
inc
das
jo
loopne
sbb
mov
push
shl
sbb
pop
push
icebp
jno
jmp
enter
or
cmpb
aad
aad
pop
pushf
popf
shlb
lea
pop
cmp
pop
jno
ljmp
cmp
mov
fildl
mov
out
fildl
xorl
loopne
add
pop
pop
push
sub
adc
fldenv
fxch
popf
jge
aaa
add
dec
xlat
xchg
mov
mov
sbb
cmp
andb
sti
aam
adc
imul
negl
jg
sbb
and
sti
clc
out
arpl
loope
mov
int3
push
xor
pop
mov
or
nop
push
adc
clc
int
je
sahf
jmp
jns
xchg
pop
shrb
notb
mov
scas
clc
outsb
dec
jne
jl
leave
insl
or
cmpsb
mov
mov
push
aam
jmp
inc
mov
jmp
pop
bound
in
hlt
inc
dec
sti
mov
jle
cmp
pop
push
fcoms
imul
add
xchg
pop
jb
sahf
jo
sub
stc
bnd
inc
add
adc
pop
mov
and
addl
ffree
adc
mov
ljmp
mov
xchg
adc
xchg
xor
sbb
jno
or
dec
call
in
inc
xchg
cli
andl
jns
sub
ja
clc
mov
cmpsl
or
iret
fnsave
in
mov
imul
mov
lods
and
lods
pop
sahf
or
shl
testl
pop
aas
pop
sbb
aas
cmp
dec
sub
push
mov
es
iret
ret
into
push
pusha
pop
ffree
iret
xchg
mulb
or
dec
mov
jns
out
adc
cmp
in
push
daa
mov
push
bnd
test
js
jbe
mov
lock
jno
cmpsl
pop
mov
sarb
mov
aam
xchg
cmp
int3
mov
ds
pop
adc
push
lret
fnstenv
or
push
or
fsubs
in
pop
mov
mov
push
push
add
scas
push
cmp
pop
scas
push
jne
or
stc
cmp
mov
stc
loope
mov
scas
inc
pop
mov
sub
mov
lock
ds
daa
aaa
cmpsl
aad
in
push
loopne
mov
out
fxsave
and
xchg
test
fisttps
xchg
dec
loop
cmpsl
jp
dec
fisubs
cmp
jmp
add
stos
es
jmp
jae
and
movsl
repnz
mov
dec
icebp
stos
push
or
test
xchg
xor
into
push
cmp
jl
popf
adc
je
pop
ljmp
mov
jmp
sbb
loopne
inc
pop
cltd
loopne,pn
pop
test
and
or
and
pop
inc
int3
xor
ret
shlb
popf
pop
xchg
xor
sahf
jge
faddl
in
enter
mov
mov
dec
push
jecxz
jne
jo
inc
aad
stos
mov
lods
pop
push
ss
sbb
mov
xchg
jnp
sbb
jle
xchg
sub
test
ret
rcrb
sbb
hlt
movsl
fisubs
pop
aam
out
jbe
cmp
pop
int
loopne,pn
sub
lds
push
testb
test
dec
sar
cmpsl
icebp
mov
int
adc
lahf
pop
pop
xor
inc
push
outsb
inc
push
fidivs
mov
jmp
cli
mov
fwait
fucomp
loopne
loop
dec
mov
std
mov
push
outsb
cmpb
xchg
sub
or
cli
push
shrb
insl
mov
fcoms
xchg
insl
aas
and
iret
lret
clc
clc
aad
out
add
call
push
sub
push
into
ljmp
popf
aas
push
xchg
std
nop
xchg
daa
sub
cmp
sub
xor
rorb
jg
fsub
jae
push
xchg
xchg
xchg
int3
shll
jg
imul
dec
xchg
push
stc
fldcw
adc
dec
cmp
mov
movsl
sub
xchg
xchg
sbb
mov
pusha
push
mov
or
imul
add
xor
pop
sti
adc
fisttpll
sbb
add
test
push
mov
ret
arpl
hlt
sahf
leave
into
push
add
loopne
pop
popa
subb
ja
mov
pop
pop
add
cli
out
mov
insb
cld
pushf
and
mov
xor
ja
push
ljmp
subb
mov
inc
mov
push
daa
sbbb
mov
jns
imul
sbb
push
mov
pop
sahf
mov
movsb
jb
sub
pop
cld
mov
xchg
pop
popa
and
mov
shrb
fstpl
push
inc
in
sub
sub
ss
aad
jns
fdivrs
mov
fdivs
enter
hlt
addb
shlb
adc
rorb
mov
ss
or
or
xchg
in
cmp
jge
cmc
iret
inc
xor
lcall
loop
in
out
fstps
add
xorb
cmp
cmp
cmp
mov
push
mov
cwtl
cltd
int3
insb
and
aam
pop
jmp
push
cmp
rcrb
test
inc
cmc
xor
push
xchg
xor
test
jecxz
lds
push
push
add
xor
xor
push
shrb
push
and
pop
mov
pop
aas
and
fstl
into
aam
cmpsb
pusha
mov
sbb
push
test
mov
mov
cmpsb
or
adc
add
cmp
fiadds
dec
or
pusha
inc
rolb
fs
xor
nop
and
mov
cmpsb
ja
stos
mov
cltd
jmp
cld
dec
sub
data16
lods
pop
push
push
cmp
jle
stos
inc
iret
sbb
lock
bound
shll
inc
ret
test
push
repz
das
mov
fwait
loopne
iret
jl
lret
notl
mov
dec
repnz
subl
dec
sub
or
sbb
insl
mov
push
imul
xchg
xchg
into
mov
xor
and
jne
or
push
je
add
lods
inc
shlb
add
sbb
insl
sbb
movsl
xor
push
test
fstpt
xor
sbb
sub
test
and
mov
popf
popa
sbb
push
inc
ljmp
adcb
jnp
push
cmp
mov
jg
xchg
popa
lea
lea
push
aam
pop
das
add
add
or
int
or
in
and
shlb
dec
cmpsb
push
lcall
jns
das
and
xchg
jne
test
cltd
push
dec
outsl
pop
ss
push
test
loopne
inc
mov
push
jge
cmpsl
nop
or
mov
iret
ljmp
pushf
outsb
popf
cltd
jecxz
lret
lods
inc
out
leave
lods
sbb
sub
pslld
push
jg
jae
rorl
in
gs
xchg
xor
popa
idiv
xor
lods
loop
fmul
int
lea
fwait
adc
lock
cmpsb
imul
shll
mov
out
je
jmp
lods
mov
jo
inc
movsl
jno
mov
add
sbb
addl
xlat
xchg
dec
and
negb
test
cmp
sahf
push
sub
jmp
sub
dec
aam
and
inc
adc
cmp
mov
xor
negb
mov
xchg
mov
insl
cmp
dec
cmp
scas
pop
fldl
arpl
mov
xlat
jnp
adc
and
cmpsb
into
push
add
testb
cmpsb
test
loopw
inc
add
jge
lods
xchg
daa
adc
pusha
repz
xchg
pop
jg
icebp
lcall
or
les
das
insb
aam
jno
xchg
and
enter
ret
mov
xor
add
jnp
rcl
movsb
cmp
mov
mov
lret
or
fdivr
arpl
or
aaa
cmp
or
sahf
mov
addl
mov
inc
outsl
movsb
and
lods
out
in
sti
cmp
je
mov
pop
aaa
sub
or
jo
retw
rcrl
lahf
lret
adc
xchg
sub
jno
stc
and
ret
inc
out
call
dec
and
sbb
les
test
jg
std
cmc
rcll
sbb
dec
in
or
test
cmp
mov
mov
sti
mov
scas
lods
sbb
push
mov
push
stc
inc
data16
xor
hlt
and
repz
fcoms
rclb
adc
mov
pop
xchg
sbb
popf
cli
into
add
orb
cmc
insl
mov
out
mov
inc
pop
xor
stos
mov
mov
xchg
enter
aas
add
inc
pop
bound
rolb
sbb
mov
cmpsb
shlb
es
test
adc
lahf
out
sub
sbb
rclb
out
icebp
or
outsb
lea
jl
leave
adc
outsl
sbb
jae
mov
mov
push
xchg
and
jp
mov
ljmp
push
inc
cld
mov
cs
insl
nop
movsb
call
sub
test
xchg
in
ret
das
mov
mov
xchg
mov
mov
in
call
arpl
fadd
insl
stos
int
out
fdivrs
test
sub
lret
mov
insl
and
push
add
dec
gs
cli
mulb
fcom
shrb
mov
sti
sbb
mov
clc
lock
leave
xor
pop
call
pop
sbb
lret
mov
movsl
lods
movlps
pop
push
ja
dec
push
rcrb
add
jo
or
mov
mov
and
enter
lar
pop
cmpsl
lock
loopne
mov
loop
jle
scas
sti
add
insb
fs
mov
jl
sbb
sbb
and
lret
pop
adc
push
or
sarl
adc
push
and
notb
inc
sbb
out
push
fwait
inc
and
or
movsl
xchg
test
sub
arpl
jns
popl
cmp
insb
outsl
and
repnz
jns
pop
push
jp
cwtl
xchg
jecxz
stos
push
cmp
xor
popf
insb
xchg
inc
int3
gs
decl
ja
enter
out
mov
adc
in
sti
mov
addr16
push
pop
fwait
ja
stos
scas
es
jg
lods
push
xchg
stos
push
rcrb
fcmovb
jle
adc
mov
ja
xchg
icebp
sbb
sahf
push
fisubs
or
popa
jne,pn
sub
mov
in
rolb
mov
notb
and
and
aaa
dec
dec
test
mov
xor
sub
sub
push
leave
lret
pushf
dec
sub
imul
mov
mov
aad
mov
fnstsw
mov
mov
dec
adc
pop
arpl
negl
ficompl
popl
mov
mov
sbb
push
push
and
cmp
test
and
outsb
lahf
insb
sbb
out
xchg
mov
cwtl
insl
xchg
mov
mov
mov
dec
fiadds
insb
mov
insb
cwtl
imul
or
mov
add
lcall
jns
cltd
in
shll
push
iret
push
push
or
lock
outsb
add
jnp
ja
xor
or
mov
adc
stc
mov
dec
push
or
mov
test
pop
mov
les
xlat
test
dec
out
out
fcmovu
and
hlt
rcll
scas
inc
mov
sbb
and
paddw
leave
test
cltd
out
decb
int
addr16
mov
adc
add
push
or
or
and
cmp
dec
push
sbb
pushf
or
test
pop
leave
jne
repnz
outsl
insb
leave
jae
lcall
push
jmp
fadd
pop
and
dec
xor
add
stos
pushl
repz
sbb
mov
icebp
into
and
or
mov
sub
mov
aaa
mov
jge
imull
stos
or
adc
scas
xchg
mov
in
lock
cmp
xchg
enter
ret
xchg
add
sbb
loope
adc
repz
push
jbe
or
stos
dec
jp
push
xor
cmp
sahf
add
scas
fisttpll
sbb
inc
or
inc
sub
mov
lcall
mul
xchg
lahf
add
xor
popa
ds
pushf
ljmp
inc
mov
jge
adc
int3
xchg
mov
les
loopne
in
xchg
push
pop
push
mov
sbb
or
subl
lock
shlb
inc
clc
sti
data16
cmpsb
add
cli
mov
fsubs
push
out
out
pop
lcall
push
ret
dec
mov
jle
jnp
sbb
jnp
mov
add
cmpsl
sbb
cwtl
insb
lods
rolb
outsl
addb
adc
pop
xchg
cli
pop
or
bound
dec
xchg
push
enter
pop
inc
cs
dec
addr16
popa
outsb
loope
data16
push
jle
sbb
inc
shrb
xchg
loope
outsb
insl
aaa
ret
mov
push
xchg
les
inc
testb
ret
pop
xor
mov
lcall
jg
roll
fcoml
test
imul
fs
out
xchg
jns
inc
daa
and
inc
int3
mov
add
lods
sbb
mov
daa
jae
popl
xor
jmp
fmull
add
or
repz
imul
adc
test
ffree
lock
pop
xchg
jle
shrb
mov
and
mov
shrb
std
fucomi
cmp
inc
hlt
rcrl
dec
mov
fsubrl
pop
jg
pop
pop
add
jmp
cmp
dec
push
inc
push
stos
pop
mov
or
inc
cli
mov
jl,pt
cs
fadds
jb
xor
sub
mov
sub
andb
lods
and
fdivrl
fdivrs
pop
sbb
jp
cmpsl
stc
pop
push
push
lods
mov
xor
shrb
jno
pop
adc
mov
jno
and
sbb
stc
push
lds
mov
lds
mov
je
add
cmp
mov
mov
and
sarl
lea
lods
cmp
jge
mov
xor
pop
fsub
xchg
mov
jmp
popf
mov
xor
push
in
out
insl
repz
cwtl
ljmp
sub
data16
popa
and
cld
repz
int3
lock
out
cmc
aad
mov
sub
sub
or
sti
inc
push
es
sub
mov
jmp
inc
cmp
mov
pop
jne
es
pop
dec
je
outsl
sbb
lds
int
xor
cld
divl
fsubl
shl
mov
cli
add
scas
dec
xchg
push
lock
dec
sbbb
ret
fwait
aas
inc
cmp
orl
mov
mov
movsl
repz
jl
xlat
pop
sub
or
es
xchg
hlt
xlat
stos
jns
dec
push
mov
es
jle
lret
jecxz
es
daa
aad
xchg
jmp
fisttpl
xor
dec
xorl
shrl
fistps
cli
std
xor
jno
pushf
xchg
cld
dec
mov
add
outsl
xor
cmpsb
mov
stos
mov
les
mov
imul
outsb
or
sbb
cltd
pop
cmc
xchg
xor
es
dec
xchg
subl
ljmp
out
stc
or
stos
testb
mov
repz
arpl
push
lahf
cld
cmp
inc
mov
jae
call
jg
sbb
push
out
push
xchg
sub
addr16
icebp
mov
xor
sub
mov
test
add
sahf
dec
test
iret
pop
dec
ds
xchg
call
rcrb
xchg
nop
daa
loope
in
xlat
daa
mov
adc
gs
xchg
fcoml
mov
test
aad
xor
das
cmp
lods
sti
mov
push
push
loope
dec
ljmp
xor
mov
mov
xchg
inc
loopne
hlt
or
jge
push
xchg
lds
push
jnp
sub
and
xchg
inc
add
arpl
push
fcompl
sub
outsl
into
cmp
adc
sub
dec
mov
mov
subl
icebp
ljmp
inc
test
sahf
xlat
xlat
sbbl
into
dec
std
mov
add
push
or
adc
loop
mov
inc
popa
call
out
ror
ds
pop
iret
test
sub
and
or
data16
repz
test
ficomps
iret
iret
xor
dec
pop
pop
or
movsl
and
insb
lea
jno
cld
inc
jp
push
adc
lock
push
mov
jecxz
fdivrp
das
imul
bound
fstl
fldl
dec
sbb
das
clc
aad
ror
mov
mov
stos
lds
addr16
xchg
inc
fwait
aaa
and
mov
icebp
push
test
mov
loope
stos
or
push
sub
das
mov
jb
mov
dec
scas
cmp
adc
sbb
aad
mov
pop
jmp
adc
fists
jmp
push
adc
pop
cltd
icebp
or
outsl
imul
lcall
sahf
fucomi
mov
add
adc
pop
test
ret
mov
adc
in
mov
aaa
mov
cwtl
sahf
movsb
and
mov
lcall
mov
and
std
fnstenv
cmp
mov
inc
daa
mov
stos
sub
inc
and
or
push
pop
mov
push
sbb
cmc
mov
mov
dec
pop
cmp
aam
popa
mov
xchg
fwait
dec
in
adc
and
dec
pop
cli
scas
sub
pop
fstps
dec
add
pop
sbb
mov
mov
adc
ljmp
pop
jmp
call
and
lea
and
ficoms
syscall
out
push
jae
jae
dec
xchg
rolb
dec
mov
dec
inc
jle
into
xchg
xchg
pop
dec
cmp
adc
mov
push
mov
mov
dec
leave
xchg
imul
sbbl
inc
lahf
in
mov
out
xchg
fimuls
daa
mov
push
or
iret
mov
sarb
adc
ret
shll
fnstsw
pop
loop
lds
inc
iret
cmpsb
into
jae,pt
and
dec
lds
call
mov
add
mov
sub
xchg
out
sub
xchg
sbb
push
cmpsb
lret
push
out
push
insl
fistpll
cmpsb
cli
xchg
push
push
out
push
or
jno
enter
lods
mov
mov
test
test
adc
cmpsl
loope
daa
repz
xor
faddl
adc
mov
arpl
aas
jg
jecxz
leave
sahf
sub
das
cmpsb
shr
out
rolb
adc
mov
aad
jo
or
repnz
mov
inc
fwait
jmp
xchg
xor
loope
mov
rorl
jb
ret
negl
call
inc
addr16
inc
xor
sbb
cmp
stos
jp
inc
lret
hlt
cs
cmp
mov
push
pop
lea
push
or
fxch
mov
pop
mov
mov
inc
xchg
xrelease
mov
test
dec
cmp
mov
and
in
fcomps
or
dec
adc
in
mov
inc
cmpsb
fwait
push
and
out
fadd
shll
dec
sub
mov
jbe
mov
gs
test
jnp
ljmp
out
out
push
sub
outsb
enter
jp
mov
lret
xchg
scas
or
addr16
adc
imul
mov
sub
mov
movsl
sbb
lods
jg
imul
vmread
lret
nop
cmpsb
mov
outsb
mov
or
andb
rcrl
xchg
mov
pop
fs
rorb
mov
push
pop
sarb
loope
addb
push
mov
sarl
add
push
sbb
nop
icebp
pop
mov
outsl
sarb
mov
fcmove
sub
scas
sahf
xchg
rorb
cli
in
ficoml
pop
sub
or
in
xor
mov
mov
and
int
xchg
mov
dec
in
data16
jns
cmpsl
dec
inc
xor
mov
test
adc
sahf
or
add
xchg
aad
sahf
add
ja
sub
rol
out
lds
cs
repnz
shrb
and
mov
out
hlt
test
flds
shr
in
and
mov
sbb
inc
mov
push
aas
sub
mov
and
call
cmp
loopne
dec
sub
cwtl
sub
xchg
test
mov
mov
mov
dec
inc
mov
or
rclb
mul
jle
jp
inc
movsb
xor
call
lods
mov
ror
imul
sbbb
push
test
fwait
arpl
mov
add
and
or
add
jb
dec
xchg
jne
sbb
dec
cmp
or
pusha
sbb
pop
std
mov
inc
pop
fs
daa
mov
dec
pop
push
dec
cmpsb
mov
xchg
mov
push
adc
movsb
xchg
jae
cmpsb
addr16
sub
jl
pop
incl
testl
or
pop
lret
icebp
pop
iret
jl
out
gs
jb
mov
mov
fsubs
xor
mov
sub
jns
in
or
push
js
add
lahf
cli
cs
outsb
shll
adc
enter
mov
mov
enter
cs
jmp
out
inc
xlat
hlt
jg
xor
jl
add
fs
mov
and
mov
adc
std
test
test
dec
dec
push
pushf
subb
mov
cs
push
pushf
or
or
inc
stc
jmp
insb
stc
add
mov
or
inc
stos
adc
out
cmp
inc
pushf
movb
ja
ficoml
push
pop
lret
add
gs
loopne
pop
popf
push
mov
adc
cld
stos
dec
cltd
jge
popf
xlat
mov
rol
call
sub
aam
in
push
mov
aad
sarl
push
cmp
push
cld
cmpsl
mov
inc
mov
fwait
outsb
or
xchg
sbb
pop
pusha
add
jp
insl
push
add
pop
mov
mov
in
adc
jecxz
or
je
mov
xor
sub
push
sub
aam
in
jle
pop
fcom
ds
cmp
lods
adc
mov
jecxz
sbb
jo
fwait
pop
mov
sbb
pop
ljmp
pop
pop
out
dec
mov
sahf
push
movsl
ret
divl
into
cmp
enter
and
push
fbld
dec
inc
dec
cmpsl
and
loop
loopne
sub
push
pop
dec
adc
mov
sbb
ljmp
pop
fsubrp
repz
daa
orb
movsl
out
dec
cmpsl
mulb
imul
gs
cmp
mov
push
mov
xchg
xor
cmp
repz
dec
ret
sub
negl
addr16
lret
mov
aam
out
pushf
sub
jle
jno
imul
orl
xchg
movups
push
negl
lret
sahf
xchg
pop
fwait
out
mov
aad
inc
jecxz
mov
insl
and
pop
mov
insb
divb
paddusb
negl
push
aad
pusha
loope
cltd
stc
cli
jle
sub
xchg
int3
lock
inc
xchg
adc
in
stos
dec
pop
and
into
jge
das
stos
jbe
xor
xchg
out
fs
push
fwait
insb
or
cli
into
std
mov
mov
mov
dec
das
or
dec
lds
cmp
adc
mov
mov
push
jmp
out
fcoml
rcrb
dec
xchg
in
loopne
xchg
jle
cmp
cs
mov
sbb
js
mov
loopne
leave
jecxz
and
xor
mov
and
arpl
ja
imul
adc
dec
out
test
jmp
mov
insb
out
in
stos
enter
gs
aam
mov
and
fs
cmpsl
fcmovnbe
pop
or
push
outsb
pushf
sbb
cmpsl
xchg
jle
dec
aam
xchg
test
in
icebp
push
sbb
pusha
mov
cmp
inc
cld
mov
adc
hlt
sbb
xor
pop
out
test
xchg
lds
ror
and
insb
outsl
cmp
mov
dec
lret
pop
dec
pop
fistpll
pop
jl
out
aam
jne
enter
dec
jmp
stos
jl
adc
fs
jae
sarb
inc
push
push
jl
nop
mov
jge
dec
lds
lds
cli
inc
jb
mov
stos
sbb
sbb
data16
xor
jno
js
mov
add
cmpb
hlt
xchg
movd
mov
jne
inc
mov
test
mov
lock
leave
pop
aam
fcmovnbe
cmc
cmp
add
and
add
pop
sbbl
mov
pushf
cwtl
or
loop
xchg
pop
sbb
dec
dec
pop
ret
sahf
fildl
iret
addl
push
movsb
push
add
inc
insb
xchg
pop
fmulp
aaa
or
test
mov
mov
gs
or
aaa
stc
pushf
pop
push
cmp
mov
xchg
lret
dec
mov
lahf
cmp
xor
fidivrs
xchg
push
fsqrt
in
sub
mov
dec
pop
sbb
pop
movl
pop
movsl
dec
xor
cmp
in
mov
xchg
push
lea
loope
imul
ja
jbe
lcall
hlt
add
and
into
orb
loop
push
ljmp
scas
inc
and
sarb
stos
and
cs
dec
push
mov
cmp
push
sub
imul
adc
enter
jb
in
adc
lds
pop
mov
sbb
sbb
mov
daa
or
jmp
aad
mov
lret
fdivr
sub
test
and
mov
jae
fwait
mov
inc
xlat
aam
ss
jge
jae
jp
adc
dec
jp
jbe
stc
dec
sub
insl
add
dec
mov
in
subl
out
xchg
sub
mov
sbb
xchg
in
mov
sbb
js
push
inc
jmp
mov
xor
arpl
gs
sub
adcl
icebp
sub
sub
call
add
push
mov
mov
sbb
jbe
repz
adc
xchg
mov
mov
aam
outsb
pusha
or
cltd
fistpl
lahf
dec
sti
add
adc
je
xchg
mov
fs
mov
imul
loope
orb
in
push
out
sarl
jb
xchg
enter
mov
cmpsb
popa
mov
mov
push
imul
xchg
or
jnp
cwtl
out
popa
lahf
cmpsb
pop
aaa
pop
aaa
fdivs
xchg
popa
mov
movb
sub
popf
jp
jmp
cld
ds
jnp
add
cld
cs
idivl
je
pop
jnp
fisttps
imul
imul
mov
jnp
and
sub
push
xor
push
add
das
add
pop
push
iret
cmp
push
lcall
nop
imul
test
cmp
push
sub
and
aam
shlb
jge
shrb
sbb
fidivl
and
sti
push
out
daa
rclb
cmp
fwait
pop
rcrl
or
xor
imul
icebp
mov
push
mov
push
pop
loop
and
push
int3
inc
imul
jno
adc
jns
mov
out
idivl
loop
xchg
insb
and
rcr
ret
and
adc
mov
cmc
addr16
loopne
jae
ds
mov
jae
stos
jl
out
jo
pop
pop
int3
repnz
into
stc
cmp
pop
add
hlt
cmp
xor
fwait
arpl
outsb
xlat
in
or
fldl
pop
loope
mov
fistpl
xor
shll
outsl
jbe
sub
jmp
arpl
jl
test
rclb
mulb
mov
xor
add
fisubs
outsb
iret
fucomp
mov
ss
mov
sbb
jb
dec
jge
sti
enter
fsub
cltd
dec
inc
and
or
das
adc
jmp
scas
imul
lcallw
mov
xchg
call
ret
pop
and
repnz
cmp
fidivl
pushf
lods
movsl
push
sub
movsb
adc
mov
mov
popf
cmpsl
push
push
call
inc
shll
in
lea
mov
mov
rcrb
push
and
daa
mov
fbld
aaa
mov
and
xor
cmpl
fs
cmpsl
jb
jb
add
mov
dec
cmp
cmp
fs
scas
orl
fbstp
mov
jno
mov
xor
and
call
dec
mov
xor
mov
mov
lcall
xor
inc
adc
push
push
mov
arpl
mov
lods
mov
xor
test
cmp
adc
adc
in
jp
rolb
pop
cwtl
inc
cmpsb
ret
pop
sub
ret
into
lock
repz
mov
fidivrs
xor
add
xor
xor
sbb
cltd
xchg
cltd
mov
and
fmuls
add
pop
sbb
jmp
mov
add
sbb
pop
test
jno
out
sub
mov
popf
pop
pop
mov
jnp
inc
jae
mov
pop
loopne
xor
jno
xchg
jbe
int3
xchg
xor
ret
into
sub
xchg
clc
insb
lcall
push
add
mov
insb
test
fcomps
and
test
mov
inc
aad
lret
repnz
mov
jmp
je
cmpb
xor
dec
push
pop
push
test
or
aam
xchg
mov
inc
scas
scas
dec
repnz
in
xor
jmp
movsb
cmp
lds
xchg
in
bound
add
sbbb
jae
mov
imul
sbb
orl
cmp
mov
in
repnz
mov
lods
shlb
xor
punpcklbw
or
cmp
xchg
jbe
leave
sbb
fld
xchg
pushf
jmp
pop
lcall
xchg
push
jmp
imul
hlt
lods
add
mov
lahf
lret
fs
dec
mov
testb
jecxz
je
pop
mov
or
add
iret
shr
das
mov
jne
int
imul
leave
push
xchg
pusha
ja
pop
outsl
pop
add
pop
inc
in
adc
in
outsb
lods
xchg
sub
xchg
dec
dec
nop
fdivs
hlt
ja
jmp
or
inc
fsubrs
mov
lea
sbb
rolb
jae
orb
in
or
jne
cmp
xor
mov
mov
and
pop
jl
fmulp
ficompl
dec
or
cltd
mov
cmp
xchg
repz
adc
stos
jecxz
rorb
movsb
xor
add
push
leave
aam
daa
push
ja
rolb
mov
push
data16
xor
xchg
fisubrl
lret
dec
xor
je
jp
push
and
aad
ss
aam
push
mov
jae
xlat
test
dec
insl
shlb
dec
cmp
dec
fwait
sbb
jb
mov
and
push
test
add
sarl
inc
cld
mov
xchg
mov
adcl
xorl
xchg
mov
jmp
lret
enter
push
adc
sarl
xchg
jecxz
sbb
mov
xchg
cmp
repz
arpl
fnstenv
in
les
insb
xchg
dec
mov
and
jg
sub
fsts
xlat
stos
or
iret
xchg
jecxz
pushf
adc
inc
loop
sbbb
mov
mov
std
jnp
pushf
cmp
jmp
es
hlt
fistps
push
inc
sbb
xlat
rorl
push
jle
scas
add
push
and
dec
jecxz
sbb
jmp
cmp
pop
aaa
mov
pop
sub
movl
add
orb
fmull
imul
scas
lods
nop
cmp
add
xor
xor
std
sti
xchg
jns
xchg
mov
pop
jl
cmp
push
pop
fisttpll
repnz
ret
adc
cmp
xor
sub
pushf
xchg
xchg
lahf
sbb
or
push
adc
mov
mov
mov
rclb
mov
out
mov
sbbl
in
cmp
mov
add
jb
dec
lds
out
and
stos
leave
clc
icebp
cmp
test
movsl
lea
jns
inc
xchg
mov
es
dec
addr16
loop
fiadds
xchg
in
dec
xor
mov
call
push
xor
fsubl
cwtl
xchg
inc
dec
push
push
xchg
pop
jg
shl
and
jge
lds
jecxz
out
add
and
lds
xor
mov
cmp
cmp
repz
pop
das
ds
mov
cli
mov
and
test
pop
fcmovbe
push
add
push
sahf
and
sub
inc
push
movl
into
xchg
jnp
ficomps
xor
dec
movsb
aaa
cmpl
jmp
xorl
inc
mov
shlb
fisubl
jp
mov
push
pop
lods
add
aas
cmp
mov
ficoml
xor
xchg
or
jmp
jecxz
test
add
dec
dec
adc
push
mov
ds
loop
add
cmp
jae
dec
loopne
xchg
movsb
sub
mov
repnz
push
cmp
dec
aas
xor
jle
clc
push
iret
jmp
cmpsb
nop
sbb
cmp
fwait
push
pusha
jmp
dec
ds
aam
fists
call
jecxz
jns
jb
inc
jbe
out
sti
cmpsl
sbb
cltd
push
xchg
mov
sbb
shrb
mov
mov
cmp
ja
jmp
aas
adc
insb
mov
mov
insb
ds
test
xchg
daa
sbb
ljmp
inc
mov
sub
fwait
iret
pop
mov
sub
jbe
imul
aas
out
jle
jg
push
lds
push
jecxz
lods
cmp
out
push
popf
out
popa
dec
mov
xor
ja
push
xor
ja
mov
cli
sarw
cmp
mov
or
jns
push
push
addb
lahf
adc
fldcw
aad
pop
in
mov
xlat
sbb
sbb
xchg
xor
loope
dec
adc
dec
add
xchg
sbb
xor
js
jbe
scas
inc
push
push
adc
addr16
lahf
popf
int
sarl
aas
sub
popa
das
in
dec
push
pop
mov
cmpsb
mov
popf
nop
cmpl
rorl
xor
addl
mov
mov
xor
mov
push
xchg
inc
sbb
or
lds
pop
jge
inc
test
cmp
pop
inc
jmp
int3
js
enter
pop
call
aad
mov
pop
lods
bound
aas
repnz
jecxz
iret
jge
sub
popf
shll
popa
cmpsl
xchg
add
pop
xchg
stos
call
sub
call
jae
push
lret
in
js
fldcw
enter
and
mov
sbb
cli
adc
cmp
pop
inc
pop
ret
jne
jle
jmp
mov
jecxz
push
into
cmp
mov
sbb
or
test
out
xchg
lret
push
mov
jg
out
push
add
int3
mov
or
xchg
mov
add
shlb
fnstsw
test
sub
adc
clc
or
iret
xor
mov
mov
inc
leave
daa
xchg
dec
cs
mov
scas
outsl
loopne
pop
int3
shll
in
pop
pop
sbb
ret
into
pop
outsl
add
pop
std
std
out
mov
loopne,pt
mov
pop
enter
adc
and
loop
icebp
pop
mov
pause
dec
mov
dec
fdivs
data16
inc
lods
push
xor
test
mov
imul
gs
push
fdivrs
and
pop
push
push
cmpsl
cmp
rcll
rcrb
das
xchg
lods
mov
sbb
cmpsb
movsb
sbb
or
call
mov
fldcw
push
push
cmpsl
movaps
jb
push
sti
push
enter
mov
or
nop
adc
pop
cmp
je
sti
imul
fnsave
adc
pop
push
out
sub
imul
adc
jle
std
and
and
pop
imul
daa
in
pop
ret
rcrb
fdivrl
cmpsb
dec
pop
call
lahf
jle
add
fadd
lock
and
aam
pusha
popf
pusha
sar
call
lods
dec
rclb
cld
fmull
add
ret
xchg
cltd
xor
andl
add
data16
adc
int
xchg
arpl
push
pop
lret
lods
mov
repz
xchg
lea
scas
push
shll
xchg
jmp
jo
flds
push
or
sbb
mov
pop
negl
fwait
cld
loopne
jle
aam
dec
dec
hlt
mov
cs
aad
or
lcall
xor
enter
mov
sub
cmpsb
rorl
hlt
jae
mov
andb
mov
sub
xor
sub
gs
ret
jmp
jge
std
and
jle
loop
push
in
insb
adcb
imul
or
mov
out
pusha
int3
push
call
sub
fcompl
pop
push
addr16
xchg
ret
jns
fcos
pop
mov
and
mov
aad
xchg
push
add
sarl
sbb
pop
repz
xchg
dec
dec
pop
pop
jle
sarl
imul
and
rcrb
pushf
inc
in
mov
pop
add
lahf
dec
lret
popf
mov
and
arpl
mov
mov
fsubrs
insl
js
jne
xchg
add
adc
pop
imul
adc
cltd
in
imul
jp
mov
movsb
rorb
mov
lahf
xor
cmp
jns
or
mov
push
sahf
mov
xor
out
pop
dec
cmp
bound
xor
sti
fwait
push
jl
stos
inc
js
jne
sbb
xor
clc
jns
scas
in
cs
jecxz
mov
fisubrl
mov
into
add
push
dec
add
sbb
shrl
popa
mov
push
adc
and
dec
jmp
js
xchg
mov
sbbl
add
jb
sbb
test
loope
lret
das
stos
mov
pop
sub
adc
sub
push
push
in
into
sahf
idivl
rcrb
inc
sub
add
daa
xor
inc
push
cli
push
cmp
movsl
add
rorb
mov
jge
out
popa
test
leave
inc
shrl
or
mov
cmp
mov
lret
repnz
sti
mov
test
pop
inc
jge
subl
cmpsb
fadd
in
iret
inc
das
cmc
fidivs
xchg
cld
inc
mov
stos
test
xchg
jge,pn
shr
sub
loopne
add
pusha
mov
jmp
ja
adc
out
scas
lods
fnstsw
bound
mov
icebp
fs
mov
push
sbb
dec
sti
jge
jge
add
rolb
adc
mov
mov
out
dec
xchg
js
notrack
rcrl
sbb
add
add
stc
mov
into
push
jmp
inc
mov
sub
inc
outsl
fidivl
fistl
push
ret
jmp
mov
or
outsb
es
or
data16
cltd
jbe
pop
call
jmp
arpl
sti
jbe
out
mov
sub
scas
jne
popf
fistpll
fbstp
add
pop
pop
je
pushf
push
xchg
jl
int3
add
and
notb
sub
js
insb
cmp
stos
mov
jo
dec
outsb
popa
inc
add
or
aad
sub
int
or
jns
inc
ljmp
sub
dec
and
mov
scas
pop
mov
dec
ret
add
push
or
pop
and
cltd
mov
lods
add
fs
les
ljmp
mov
push
inc
pop
les
dec
in
shll
in
pop
cli
push
cld
adc
lcall
xor
mov
xchg
pop
mov
or
testl
and
jmp
add
mov
cmp
xor
jb
adc
cld
shl
inc
sub
cmp
andb
jle
stos
sub
sub
dec
or
fnstenv
mov
mov
jp
in
arpl
es
movsl
loop
sub
pop
stc
dec
pop
inc
jge
xchg
push
sub
dec
fwait
cs
or
lcall
pop
add
out
sbb
adc
scas
sbb
xchg
enter
cmp
adc
push
inc
daa
cmp
push
mov
mov
xorb
clc
mov
push
adc
cmp
clc
rcrl
imul
xchg
je
in
imul
scas
pop
mov
adcl
mov
pushf
cltd
fidivrs
call
mov
inc
xchg
pop
imul
mov
pop
xchg
lods
inc
lret
xor
mov
dec
sahf
icebp
or
popa
dec
dec
and
or
xchg
loop
adc
cmp
or
cmp
jno
add
jno
or
das
mov
je
out
lret
push
sbb
bound
mov
fadd
popf
rcll
movsl
dec
mov
lcall
cli
mov
cmp
add
outsb
xlat
out
cli
movsb
and
out
sarb
cld
cmc
jecxz
inc
lahf
xor
pop
mov
push
sub
push
push
jecxz
data16
int
ror
pop
pop
mov
sub
rcll
in
enter
rclb
add
mov
mov
mov
pop
pushf
daa
loop
xchg
push
xlat
sbb
sarl
push
pop
cmp
hlt
push
imul
adc
fcompl
shrl
dec
repz
mov
sub
std
mov
aad
inc
lahf
imul
push
loop
mov
inc
xor
fldt
mov
sbb
xchg
pop
xor
dec
mov
lods
mov
out
jge
pusha
mov
addr16
pop
cmpsb
dec
dec
icebp
sbb
sub
push
sbb
cwtl
inc
sti
in
ss
jae
mov
cmp
xchg
in
adc
ucomiss
cltd
pushf
sub
cwtl
jl
lcall
jg
sub
es
and
mov
jg
imul
arpl
mov
jo
or
mov
mov
push
xchg
pop
jp
cld
inc
inc
vcmpss
addr16
dec
in
xlat
add
mov
les
jbe
pop
int
jmp
add
fyl2x
or
and
xchg
loop
xchg
ss
mov
and
mul
fists
pop
je
fwait
arpl
inc
xor
arpl
repnz
mov
push
sbb
mov
xchg
rcll
xlat
sbb
cwtl
clc
inc
paddb
cmp
je
or
jl
popa
cmpsb
scas
imul
sub
ret
popa
outsb
inc
push
cmpsl
fiaddl
fstpt
iret
lret
jl
ret
push
outsb
dec
sub
fisttpll
lods
aas
mov
mov
sub
lret
push
xchg
xchg
fwait
mov
lahf
fstps
pop
mov
movsb
sarl
jle
sub
loope
loop
mov
mov
xchg
xor
cltd
cld
ja
orb
xchg
loop
pop
push
nop
push
mov
mov
pop
fiadds
mov
cmpsl
sbb
mov
rolb
and
in
pop
adc
ss
inc
jb
pop
repz
jno
fcmovnb
inc
pop
das
adc
aam
daa
fs
pushf
cmp
mov
lea
pop
push
dec
push
movsb
test
inc
mov
sbb
pop
cmp
jo
mov
pop
jne
scas
out
push
jge
test
pop
sub
cli
rcrl
jns
js
cs
xchg
mov
xor
ljmp
js
xchg
push
or
dec
enter
adc
cwtl
aas
fcomps
into
fwait
or
pop
je
xor
sbb
aas
movsb
popf
push
aas
push
int
lcall
call
aad
pusha
out
leave
loope
call
andl
mov
mov
lcall
ret
mov
mov
xor
cwtl
push
mov
pop
out
add
in
push
ja
lcall
mov
sbb
mov
jae
dec
and
push
shrb
mul
push
push
mov
adc
sbb
mov
or
icebp
mov
ja
mov
aad
jp
test
mov
jmp
dec
mov
mov
jge
xor
push
aaa
and
xchg
insb
scas
inc
push
pop
sub
lea
lcall
dec
cltd
sub
movsl
mov
popf
jecxz
add
mov
mov
lods
cmp
cmp
rolb
sub
add
cmpb
and
rcl
jno
fwait
push
out
stos
mov
mov
xlat
test
fidivl
mov
imul
adc
pop
sbbl
fldenv
imul
sbb
inc
jb
cld
dec
push
jmp
stos
loope
into
stc
xor
inc
lock
inc
int
adc
mov
test
push
mov
mov
insb
cmp
push
cmp
les
fsubs
cmpb
les
cmpsb
push
mov
ret
inc
jbe
xchg
cmp
xor
mov
jl
int
and
inc
cltd
divl
dec
iret
mov
sar
jle
popa
into
fstl
lret
or
mov
mov
and
push
ds
cmpsb
sub
xchg
xchg
mov
fmuls
stc
mov
loop
cmp
in
inc
mov
sub
dec
or
jmp
fisttpl
outsb
movsl
add
dec
lahf
push
adc
mov
mov
fimull
loope
int
jmp
push
test
push
test
test
xor
cmp
cwtl
insb
cmp
and
lret
sbbb
jl
lcall
aaa
popa
mov
add
je
insl
mov
mov
and
push
mov
push
jne
sbbb
mov
mov
push
add
loope
nop
div
sbb
in
negb
aaa
dec
push
movsl
negb
xchg
add
jns
pop
imul
xor
and
push
xchg
jae
sarb
imul
xchg
xor
cld
cmp
sbb
mov
mov
adc
inc
popf
sub
loopne
jo
pusha
fidivrs
jp
push
cs
mov
push
imul
xchg
cmp
ret
xchg
jecxz
cmp
pushf
int
and
aas
sub
push
das
mov
xchg
aas
xchg
mov
iret
sti
add
inc
paddusb
pop
cmc
shrb
dec
int3
ficompl
stos
in
adc
jl
test
mov
jecxz
sbb
jecxz
imul
into
test
sub
imul
sbb
mov
data16
mov
xchg
jbe
outsl
enter
cmp
or
mov
popl
xor
insl
or
imul
inc
aaa
mov
out
divl
js
xor
lahf
dec
lods
test
sahf
roll
cmp
rolb
cmc
popa
js
xchg
je
sub
pop
push
loope
js
push
scas
sahf
lods
test
sub
pop
lods
lahf
and
mov
fistpll
mov
ja
dec
movsb
add
jne
repnz
mov
add
stos
xchg
pop
inc
les
pop
subl
mov
xor
std
fs
pop
cmovge
xchg
xor
popf
outsb
and
inc
mov
xchg
icebp
sub
fnstcw
int
jg
aam
aas
aas
lods
lcall
imul
jnp
movb
clc
mov
push
adc
cmpsb
jns
xchg
outsl
mov
movsb
mov
stos
aam
sbb
adc
pop
adc
lret
aad
insl
sub
or
sbb
data16
add
add
leave
scas
lcall
mov
repz
cmpsl
movsl
cld
sbb
ret
cmp
mov
leave
sbb
xor
inc
insl
inc
cmpsl
aaa
ret
sbb
lock
mov
mov
out
ja
xchg
aas
mov
mov
pop
adc
ss
pop
inc
bound
out
sub
mov
stos
fiadds
push
test
adc
sbb
jbe
out
pop
mov
cmp
and
mov
int3
ja
mov
and
lret
movsb
lods
pop
loopne
mov
in
inc
jnp
push
xchg
lock
cmp
sahf
addb
aam
subb
inc
or
push
pop
les
aam
add
out
pushl
inc
stos
add
or
out
pushf
sbb
pop
xchg
push
push
outsl
ds
jl
mov
mov
xor
clc
out
inc
pop
mov
std
xor
xchg
jnp
test
adc
mov
push
int
xor
out
push
mov
gs
push
jmp
mov
cltd
cmp
jb
sub
inc
jle
fidivrl
push
in
add
insb
insl
lret
sub
pop
mov
in
push
dec
and
sbb
dec
fnstenv
jmp
into
pop
filds
jb
fwait
lcall
sbb
jecxz
rorl
sbb
mov
sarl
mov
fistl
div
xor
insb
mov
cmp
iret
data16
adc
inc
pop
pusha
aam
mov
inc
mov
xchg
popa
push
sbb
xchg
push
push
faddl
lcall
push
or
pop
fmuls
jg
loop
pop
cs
mov
sub
pop
mov
jmp
or
gs
or
fcomi
push
rcl
pop
js
iret
dec
je
es
jge
pop
jo
ficoms
jae
sbb
lds
int3
negl
push
sarl
loope
sub
sahf
aas
sub
enter
dec
add
sub
sbb
int3
inc
xchg
in
je
cmp
xchg
xlat
adc
rcll
aad
aam
dec
or
popf
fsub
addl
js
or
dec
dec
jp
pop
fwait
push
pop
or
cld
mov
movsl
inc
inc
stc
stos
adc
sbb
pop
xchg
push
pop
jge
js
dec
popa
sarb
hlt
test
add
xor
jmp
xchg
addb
js
ret
cmp
mov
cmc
mov
mov
ret
xchg
sbb
and
jmp
push
inc
pop
addr16
cmp
data16
nop
mov
ljmp
xchg
cmc
pop
sbb
shl
adc
ret
jno
xor
xor
test
jns
mov
iret
adc
cmc
pop
pop
sbb
push
cwtl
bound
xchg
in
js
in
and
je
sbbb
cmpsb
mov
notb
sub
mull
loopne
cli
das
xchg
hlt
inc
and
dec
cmp
enter
mov
jo
adc
xchg
xor
adc
stos
push
cmp
dec
gs
int
pushf
jmp
std
pop
outsb
or
pushf
push
or
repnz
and
lods
xchg
mov
cmp
cmpsl
arpl
jmp
or
stos
aam
int
movsl
mov
add
inc
mov
rcl
lods
jl
jg
mov
enter
or
out
cmp
js
mov
popf
mov
divb
mov
or
mov
sti
cmp
inc
bound
addr16
lock
mov
sahf
mov
mov
std
call
mov
pop
loopne
sub
jo
in
stc
test
add
notl
sarl
xchg
mov
adc
stos
test
jbe
idivb
lret
push
sbb
xchg
out
movsl
out
frstor
loopne
pop
jle
clc
test
mov
sbb
dec
sub
mov
adc
mov
and
cltd
add
imul
mov
fld
xchg
or
pop
mov
push
inc
lahf
pop
and
es
mul
pop
rcrb
fwait
stos
inc
lea
les
push
cmpl
stos
cmp
cmp
test
dec
stos
inc
jbe
cmp
sbb
jmp
xchg
or
mov
stos
cmp
stos
testl
lock
addb
inc
mov
popf
jp
in
js
dec
mov
std
loopne
xor
ss
loopne
jecxz
push
dec
shr
pop
sarl
outsl
aad
shll
inc
jbe
outsb
sub
jbe
or
sbb
jae
aas
add
pushf
daa
cmc
scas
or
adc
mov
outsb
test
gs
loope
adc
dec
into
daa
loopne
js
in
mov
push
xor
xlat
shlb
push
jno
adc
fcmovu
fcmovu
sub
gs
das
ficompl
lahf
cltd
adc
mov
or
stos
stos
adc
dec
jl
mov
adc
cmp
in
imul
out
jae
lock
cmp
pusha
lret
xor
mov
dec
mov
mov
adc
cmp
jge
mov
cmp
xor
add
sahf
push
pop
push
les
or
jecxz
inc
in
gs
cli
cmp
add
pop
pop
jl
vmovapd
loope
mov
scas
xor
out
fs
in
call
flds
fiaddl
or
inc
push
aaa
cmpsb
sbb
fstl
icebp
add
sub
cmp
rcrl
lds
sbb
ja
test
dec
aam
pop
dec
daa
mov
adc
and
in
test
xor
push
shl
jae
shl
add
sbb
mov
fyl2x
and
mov
cmpsl
ljmp
jbe
mov
fidivrl
adc
es
jmp
xchg
addb
adc
call
sbb
sub
shlb
xor
dec
mov
and
pop
push
std
jae
nop
stos
or
jae
fisubrs
sub
adc
mov
int3
popa
repnz
stc
or
dec
nop
popf
std
cmpl
cmpsb
xchg
jmp
mov
pop
outsl
jmp
cmc
jp
mov
icebp
popf
cmpsl
icebp
data16
push
leave
push
fsts
rorb
movsl
and
mov
cli
out
sbb
or
push
es
push
inc
dec
into
sbb
into
sub
sub
je
cmp
adc
xor
jecxz
xor
ljmp
cmp
aas
imul
ljmp
addr16
or
xor
adc
stos
into
dec
out
es
xchg
xchg
ficoms
sarl
dec
jmp
pop
or
xchg
cwtl
inc
sbb
cs
inc
repnz
es
xchg
add
int
xchg
sub
sbb
inc
lods
lods
iret
je
xor
and
loope
adc
add
call
out
xchg
xchg
jne
in
leave
adc
adc
sub
pop
scas
xchg
and
push
loop
mov
inc
dec
dec
mov
mov
jo
test
jle
outsb
push
fadd
mov
pop
insl
xchg
dec
mov
and
gs
fwait
jno
test
out
mov
or
daa
adcb
pusha
inc
jo
mov
or
mov
lahf
dec
sub
into
pop
xchg
adc
lret
test
xchg
xchg
lods
jno
xor
ja
std
roll
js
mov
dec
push
ret
or
in
je
jbe
hlt
mov
in
dec
dec
jmp
ja
sub
jo
repz
xor
push
jno
adc
dec
add
jae
or
mov
add
insl
sbb
mov
cmp
mul
test
or
dec
inc
cld
into
pop
ja
sti
sbb
sbb
inc
push
sbb
xor
shrb
push
ficoml
xor
xor
pop
negb
loope
pusha
inc
cs
sbb
cmpsb
xor
sub
loopne
pop
movsb
jecxz
add
int
mov
mov
out
lds
sub
lret
mov
jo
mov
gs
test
or
jle
imul
nop
jmp
add
sbb
fsubrp
xchg
mov
or
das
scas
stos
ja
and
lods
test
call
iret
add
mov
imulb
jno
mov
jbe
pop
fnstsw
inc
inc
and
cld
add
cmp
mov
fwait
mov
inc
fadds
ja
cmpl
lahf
and
popa
or
or
inc
sbb
ss
fldcw
call
dec
mov
iret
add
fst
cmp
or
jnp
out
ret
sub
out
inc
and
xchg
test
mov
cmp
dec
xor
scas
rcl
jecxz
rcl
cmpsb
jp
xchg
outsb
into
nop
dec
xor
and
call
xchg
pop
decb
push
test
xor
jb
aaa
and
cmp
xchg
das
or
lods
je
pop
das
mov
mov
push
aas
push
inc
cmpsl
xchg
ss
test
cmp
hlt
subb
enter
mov
xorl
push
int3
stos
loop
and
sub
sbb
push
pusha
mov
int
sub
mov
sti
sbb
cmp
loope
mov
xchg
popa
ret
es
jg
shll
pop
nop
and
test
push
xor
jle
push
cmp
cltd
inc
aas
std
jg
adc
in
rcrl
fidivrl
mov
dec
test
mov
xchg
jno
sbb
aam
std
fcom
negl
lods
xorl
push
ljmp
adc
mov
sub
shll
ljmp
int
js
and
mov
pop
mov
inc
jle
and
add
pusha
pop
or
cld
sub
clc
inc
lds
sbb
data16
test
sbb
test
cmp
scas
out
lods
in
cld
xchg
push
jb
mov
push
fnstsw
test
fcmovnu
sbb
mov
fdivrl
mov
into
adc
sub
lock
mov
dec
in
lahf
lcall
scas
push
adc
mov
lcall
lcall
clc
pop
out
repnz
pop
or
aam
test
jl
push
add
aaa
arpl
pop
mov
add
push
cmp
push
push
mov
add
mov
xor
js
shl
jg
and
ret
mov
xchg
aaa
add
xchg
cmp
or
sub
xor
push
sub
cwtl
xchg
jnp
cmp
mov
and
lods
pop
into
daa
xor
popf
icebp
inc
or
stc
dec
adc
pusha
jbe
and
outsb
int3
push
sahf
imul
mov
stos
repnz
enter
adc
mov
or
ficompl
lahf
push
adc
rcrb
xchg
jbe
mov
jmp
sbb
data16
cmp
bound
ds
and
adc
fwait
lret
mov
cmp
jb
pop
cli
mov
les
pop
out
adc
sbb
orl
loopne
clc
add
cmp
sub
and
mov
in
or
and
das
mov
dec
push
mov
int3
or
mov
shrb
stos
sbb
mov
movsb
mov
cmpl
mov
pop
mov
stos
lahf
lahf
and
hlt
dec
fstl
inc
mov
adc
loope
xchg
out
nop
add
in
mov
arpl
shl
scas
push
repnz
sti
dec
adc
inc
jb
push
cmp
cld
pop
fdivrs
adc
ficoml
lods
fiadds
std
movsb
xorb
jmp
leave
les
mov
insb
fstps
add
jb
xchg
mov
and
jge
cmp
ds
mov
dec
addb
popf
adc
sbb
xor
arpl
sub
insl
arpl
inc
jnp
mov
mov
es
xor
lock
inc
jns
jle
cmp
inc
fbstp
push
or
xchg
popf
xor
or
lods
outsb
inc
repz
cmpsl
mov
jo
insb
stos
addl
pop
cmp
fwait
imul
fildl
sahf
mov
sbb
and
dec
clc
xchg
iret
and
cmpsl
popa
std
mov
mov
insl
cmc
in
pusha
pop
imul
sar
cmp
gs
xchg
and
fdivrs
jno
push
or
es
lret
les
test
jno
xchg
mov
test
mov
fiadds
dec
xchg
inc
cmp
out
popf
push
mov
push
mov
dec
mov
xchg
or
data16
pop
jl
xchg
arpl
pushf
xor
jp
dec
imul
add
adc
jl
cmpsb
inc
pop
fstps
popf
inc
out
addl
sub
inc
cmp
shrl
orb
xor
jl
inc
mov
popa
cmpsl
gs
inc
add
ret
dec
imul
movsb
out
out
icebp
mov
leave
sbb
mov
ret
and
lea
es
faddl
xchg
stc
xchg
mov
outsl
out
and
cmc
jns
push
adc
outsl
jb
sub
push
push
stc
testl
call
jge
push
into
dec
lahf
pop
leave
sub
lcall
cli
sub
pop
xchg
gs
mov
fdivr
stc
dec
imul
jg
cmp
shl
imul
in
cmp
dec
sti
cmp
arpl
loope
sti
sbb
mov
mov
pop
mov
sub
lret
imul
pop
mov
and
mov
repz
in
add
int3
xchg
inc
neg
push
int3
xchg
adc
ret
pop
outsb
pop
scas
and
divl
push
inc
imul
push
ret
or
jns
test
push
ljmp
ljmp
xchg
xchg
in
rcrb
jl
add
into
inc
xchg
pop
xchg
notl
insl
sbbb
adcl
xchg
lahf
mov
cli
mov
inc
ja
dec
mov
sti
dec
push
xor
inc
pusha
ret
int3
push
xor
mov
iret
xchg
dec
inc
sub
pop
sub
ret
jae
adc
dec
sbb
sub
xchg
adc
shlb
cld
or
sbb
loopne
pop
std
or
fsts
jmp
outsl
aaa
into
xchg
xchg
and
sahf
and
push
dec
fstpl
xor
lds
jno
push
ret
pusha
fdivl
add
sbb
into
dec
or
out
and
inc
inc
in
jmp
inc
pusha
cwtl
mov
lods
aas
je
cld
scas
rol
add
int3
lods
xor
and
dec
stc
xchg
push
out
sub
mov
fimuls
stos
sub
jmp
scas
fs
adcl
mov
icebp
insl
aas
mov
jg
add
xor
add
in
adc
loope
ret
gs
jae
dec
ret
or
or
repnz
cmpl
xchg
or
hlt
std
outsl
lods
mov
pop
les
mov
fisubs
hlt
cmp
aam
es
popf
push
lret
scas
stos
clc
cmp
sub
xor
and
mov
mov
stos
mov
lds
xor
loopne
mov
jno
push
adc
dec
cmp
xchg
mov
dec
rclb
dec
mov
and
sbb
jmp
mov
outsl
imul
ljmp
xchg
jecxz
repz
rcll
mov
cmpsb
rclb
aam
lea
loope
jae
dec
imul
dec
xor
dec
stc
popf
movb
fidivs
stos
sub
lods
xchg
mov
jp
fwait
cmpsl
push
out
cmc
xor
mov
add
push
dec
dec
sarb
xchg
mov
jo
imul
pop
and
or
and
inc
cmpb
xchg
jae
and
dec
mov
xchg
sub
pop
addr16
jbe
mov
add
mov
or
inc
push
add
jle
sti
adc
jl
scas
mov
xchg
outsb
or
xchg
pop
and
int3
sti
rol
dec
ljmp
das
mov
sub
xor
add
mov
movsb
cltd
out
mov
std
out
adc
jmp
ja
jbe
out
sti
xchg
or
mov
cmp
ror
sahf
mov
sbb
lcall
pop
add
cmp
pop
pop
dec
sub
aaa
aam
and
call
ja
xchg
imul
sub
in
sar
cmpb
imul
lahf
cli
sub
inc
sarb
xchg
sub
punpckhwd
push
inc
stos
fiadds
in
mov
inc
adc
cmp
inc
test
into
xchg
dec
in
insb
push
jmp
push
xor
adc
gs
pusha
xchg
xor
cmp
sub
std
dec
fwait
xchg
mov
jbe
mov
pop
push
cmpsl
pop
fdivl
mov
fdiv
inc
iret
pop
scas
pop
lcall
shll
repnz
dec
dec
scas
mov
out
mov
add
push
mov
dec
rclb
in
movsl
add
jo
or
cmpsb
mov
xchg
cmp
sub
pushl
add
and
repnz
dec
sbb
loopne
ljmp
sub
pop
jb
pusha
xchg
imul
push
shlw
mov
insl
sub
inc
or
cld
not
dec
sub
das
cmp
adc
popa
jns
cmp
in
adc
daa
inc
repnz
bound
cs
outsl
push
addr16
sub
mov
cmpsl
cwtl
lret
dec
and
adc
dec
enter
mov
xlat
test
mov
sub
mov
lea
mov
test
rcll
ds
jae
dec
fistl
inc
popf
ret
inc
divb
sub
mov
popf
xchg
daa
jge
mov
arpl
imull
ja
sbb
sahf
in
ret
daa
and
push
ja
inc
rolb
ljmp
sbb
cmc
cmp
xchg
stos
and
fisubrl
xchg
popa
push
cmp
pop
and
out
xchg
jne
inc
mov
mov
loop
mov
mov
outsb
fs
in
aad
movsb
xchg
jle
and
inc
pop
xor
or
inc
mov
in
cmp
jecxz
es
pop
inc
inc
inc
in
stc
mov
pusha
adc
push
xchg
jbe
arpl
add
incl
lock
pop
xor
fcomps
xchg
rclb
imul
mov
pop
into
jecxz
enter
cld
call
ja
xor
icebp
inc
popf
pavgb
and
xor
rcll
jo
inc
and
jbe
sbb
dec
popf
movsl
dec
fstl
inc
sbb
mov
sbb
push
adcb
shll
sub
and
push
cs
xchg
icebp
adc
mov
std
pop
lods
adc
fistpl
ret
cmp
or
mov
mov
pop
test
push
call
mov
pop
lret
or
fcoms
pop
xchg
repnz
add
xchg
out
or
orb
push
daa
icebp
addr16
ja
mov
in
pop
sub
jno
dec
push
aaa
lods
icebp
clc
push
inc
dec
out
sub
or
or
inc
dec
fidivrs
add
xor
out
push
jnp
mov
xor
push
sbb
ss
xor
loope
mov
imul
jb
sti
jae
xor
js
mov
jae
cltd
dec
add
inc
popf
adc
and
push
inc
mov
xchg
cltd
cmp
adc
std
push
fidivrs
icebp
mov
call
ds
in
notb
push
adc
stos
pop
inc
loopne
rolb
nop
pushl
jmp
push
lods
dec
cltd
sbb
sbb
push
je
xor
shlb
mov
stc
arpl
pusha
mov
in
test
mov
fcomp
cmp
cmp
imul
sub
lock
mov
inc
sbb
sub
sti
and
js
jnp
dec
xchg
ror
js
pop
add
add
xor
pop
ret
daa
or
aad
xchg
dec
cmp
std
outsl
std
imul
or
add
fwait
pop
movsb
inc
into
or
mov
and
loopne
daa
pop
adc
inc
insl
and
and
outsb
inc
xor
out
adc
sbb
mov
fmull
xor
cmpsb
add
sbb
imul
mov
stos
mov
lret
lsl
pop
push
push
mov
jecxz
sbb
lret
outsl
loopne
jno
xchg
loope
push
adcb
cld
ss
loope
lods
dec
out
scas
arpl
or
xchg
push
dec
movsb
ljmp
imul
insb
int
adc
mov
imul
and
shrb
xchg
jmp
add
pop
push
jp
pusha
lock
stc
shrl
cmp
lret
rcr
fsubrl
ret
cwtl
jns
in
pop
push
xorl
sub
lods
jle
out
insl
xchg
mov
push
and
mov
popa
lret
jno
hlt
mov
lods
jnp
sub
cmp
test
inc
mov
push
pop
icebp
xchg
in
movsb
xchg
aam
push
xor
cmpsl
mov
inc
xor
inc
faddp
out
lahf
fmull
fnstcw
out
push
sbb
outsb
jb
lahf
adc
push
lret
xchg
lea
dec
and
add
fnstenv
int3
dec
pushf
push
mov
pushf
out
shl
pop
jmp
push
stc
xorb
mov
cmpsl
jl
sbb
xlat
fs
lea
add
lcall
adc
fldt
adc
movsb
sbb
orb
fwait
imul
inc
xchg
xchg
subb
lret
push
pop
out
or
cld
and
pusha
pop
ret
bound
fdivrp
lock
jp
mov
mov
sbb
cmp
jmp
adc
adcb
adc
or
fstpt
or
lds
or
lahf
out
mov
fcoml
enter
orb
aas
sub
push
gs
mov
out
in
mov
cmc
das
aaa
mov
sbb
cs
pop
je
lea
xor
decl
leave
outsb
sbb
jo
ljmp
movsl
push
lds
inc
push
dec
lds
lock
push
push
mov
outsl
mov
xchg
add
cmp
test
xchg
outsl
or
insl
mov
adc
fsubrl
and
xchg
mov
mov
xchg
test
and
inc
and
je
mov
push
repnz
fwait
sbb
jnp
loopne
punpcklbw
push
add
scas
and
lcall
gs
movsb
mov
add
jge
xor
repz
jo
push
and
or
stos
jle
jle
inc
cmpb
pop
jge
sub
or
inc
inc
leave
push
ljmp
xor
add
icebp
iret
mov
jo
les
add
arpl
gs
dec
and
lods
insl
push
inc
xor
inc
xor
push
dec
add
lods
mov
jle
xchg
cmpsl
adc
fildl
mov
fimuls
loop
mov
fistpll
icebp
and
pusha
testb
adc
jmp
movsl
bound
rclb
mov
xchg
cmp
dec
and
dec
adc
sbb
mov
xor
and
lahf
xchg
test
jo
push
enter
popf
rclb
repz
imul
jmp
in
xlat
out
mov
rorb
dec
jl
sub
mov
in
push
jmp
call
dec
push
pop
call
js
jp
rcll
shrb
push
iret
pop
xchg
and
sti
cmp
adc
mov
xor
fistpll
pop
hlt
imul
inc
sbb
pop
and
shlb
mov
or
xchg
jbe
aaa
hlt
push
test
mov
inc
push
cmovge
mov
mov
add
mov
mov
clc
scas
pushf
repz
fwait
sub
test
lret
into
and
je
jecxz
mov
lcall
psllw
xchg
push
addr16
dec
inc
sub
out
rorl
pop
sbb
cs
mov
inc
hlt
jbe
push
xchg
jmp
sub
jmp
movsb
pop
sub
add
mov
pop
out
or
scas
pusha
mov
ljmp
shr
pop
sbb
fwait
add
cmp
out
xor
add
sarb
test
mov
je
cld
jecxz
mov
nop
out
push
push
subl
inc
jge
pushf
out
jmp
clc
or
cmp
dec
insb
ja
jl
sahf
xlat
lret
fmull
or
xor
fnstenv
fldcw
xor
mov
push
ret
hlt
adc
jbe
addr16
jecxz
incb
inc
and
jo
adc
sub
loope
xlat
clc
push
cltd
lock
leave
jbe
xchg
cmp
jge
and
outsb
push
push
sub
xor
xchg
test
sub
dec
inc
popf
incl
lea
ret
rolb
rorb
jge
xor
xchg
jno
scas
mov
cs
loope
sub
loop
dec
lret
ja
repnz
subb
pop
rorl
scas
icebp
xor
scas
or
ds
icebp
daa
jbe
addl
mov
add
mov
sbb
mov
int
aaa
xor
lods
sub
mov
mov
mov
xchg
add
cmpsl
out
sbb
sahf
fisubrs
cmpsl
inc
ds
cmp
fldcw
andl
rolb
lods
mov
nop
jae
push
fs
call
sub
lret
pop
out
sub
clc
pop
jecxz
or
mov
test
push
inc
dec
aas
in
mov
out
in
xchg
popa
mov
lahf
add
orb
repnz
ljmp
pop
js
loopne
sub
jb
inc
mov
out
call
sub
fiadds
jl
cli
stos
cmp
adc
out
das
popf
mov
pop
lods
or
popa
stos
lods
cmp
xor
mov
stc
pop
push
and
add
pop
sahf
and
jns
std
mov
or
inc
pop
jo
ret
test
adc
arpl
xchg
add
mov
subl
xchg
mov
es
dec
push
aad
sub
sarl
jl
sub
lods
cmp
mov
scas
cmp
test
cs
xchg
cs
push
stos
mov
cltd
or
insl
add
adc
dec
push
mov
scas
insl
xchg
jo
push
inc
repnz
in
or
add
cmp
sahf
lret
in
scas
or
subb
mov
dec
iret
aaa
mov
and
or
mov
fiaddl
jbe
mov
fisttpll
sub
cli
xor
popl
ljmp
cmp
outsl
fdivl
jne
sub
lea
jl
xchg
jns
sub
cltd
or
jbe
add
mov
stos
fsub
shll
je
cmp
fidivs
loopne
push
inc
inc
dec
out
xor
hlt
dec
and
call
add
mov
clc
jg
adc
outsb
adc
test
xor
or
mov
cmp
in
xchg
cmp
adc
adc
xor
inc
dec
pushf
mov
xchg
mov
push
cmc
push
sbb
jp
and
jle
push
out
std
insb
test
mov
rorb
push
fcomps
jp
test
jae
popa
fsubl
gs
sbbl
mov
push
or
into
push
pop
cmp
pop
xlat
lret
add
xchg
jno
mov
arpl
inc
push
hlt
lock
pop
jecxz
cltd
mov
jle
into
sbb
cmp
cwtl
jle
insl
push
fadds
xor
dec
fmul
mov
lds
aad
jne
aaa
stos
jb
das
loope
jbe
dec
bound
jne
andb
gs
js
push
xchg
lods
lret
cwtl
out
and
repz
daa
or
xchg
lret
mov
or
cli
pusha
es
in
sub
push
insl
xchg
push
and
push
push
xor
stos
das
repz
js
cmc
enter
and
mov
movsl
add
out
ss
jnp
inc
jmp
pop
cmpsb
dec
cmp
stc
or
arpl
ds
dec
outsb
pushw
cli
pop
in
cmp
sub
dec
mov
inc
data16
inc
subb
mov
nop
sub
inc
mov
test
cmpsb
inc
mov
out
xor
adc
mov
or
jmp
sub
and
lret
loop
insl
cmp
and
in
inc
daa
or
test
mov
inc
aam
inc
lcall
jle
fbstp
dec
xor
lods
pop
mov
jge
shld
mov
rolb
push
mov
arpl
and
jmp
add
push
aad
sbb
xchg
jnp
aad
rclb
sbb
pop
movsl
jmp
ss
and
xor
push
fcmovnu
mov
xchg
mov
mov
lea
insl
sub
add
pop
mov
scas
xor
clc
xor
mov
dec
repnz
jnp
and
fxch
out
lock
cmc
iret
ret
int
test
lahf
mov
jge
ljmp
xchg
jb
and
inc
rclb
mov
clc
push
aas
mov
mov
pop
out
push
cmp
lods
cmc
hlt
addl
cwtl
jg
or
or
add
sub
and
insb
xor
inc
lods
shlb
add
ds
xor
sub
mov
dec
adc
dec
and
pop
out
dec
test
sub
mov
out
push
rol
mov
add
sbb
push
push
mov
xchg
rcrl
orb
ljmp
out
mov
pop
sub
xchg
push
shll
lods
shlb
in
stos
and
movsb
out
lods
sar
int3
movsb
mov
push
lret
movsl
adc
rcr
cmp
mov
gs
mov
lcall
sub
fbld
test
jnp
into
push
nop
int3
jg
out
pushf
sbb
out
add
insb
jne
xchg
inc
push
jp
jbe
in
in
repnz
into
mov
mov
outsb
add
aad
mov
imul
das
addr16
ds
mov
lea
dec
pop
mov
rcrb
lds
or
xchg
pop
fimull
push
xor
adc
fs
fildl
add
mov
add
inc
cmp
dec
bound
mov
xor
std
sub
and
movsb
mov
cmp
xchg
dec
add
add
pop
nop
int3
cmp
outsb
pop
inc
jno
ds
movsl
push
rcrb
sbb
lahf
cmp
xorl
mov
addr16
sub
jg
and
jns
loope
pop
xor
adc
mov
lea
jne
mov
pop
fld
rolb
xchg
jno
fisttpll
jae
mov
mov
test
mov
subl
fistpl
int3
lds
fldl
sub
inc
fcompl
dec
xchg
jmp
cmp
mov
inc
pop
imul
ljmp
jecxz
mov
xor
addb
loopne
push
movsl
fisubrs
icebp
iret
fwait
pop
out
cmpsb
lds
push
adc
shrl
mov
mov
pop
mov
add
push
stc
pop
pusha
jae
push
jecxz
lcall
lods
pushf
dec
or
add
data16
mov
ret
or
sbb
out
inc
mov
lock
or
stos
in
pop
popf
shufps
stos
dec
inc
jnp
popa
jp
cld
inc
leave
push
push
add
loopne
mov
sbb
push
divl
jp
loopne
push
push
mov
xchg
das
arpl
cmpsb
xchg
shl
jns
arpl
fldenv
jle
bnd
shrb
and
cmp
in
or
sbb
in
cwtl
xchg
clc
cltd
dec
mov
adc
mov
or
mov
in
cmp
shrl
lods
inc
das
loopne
jb
mov
es
sbb
insb
pop
adc
je
mov
lods
imul
push
rcll
es
lods
es
push
out
out
sbb
pop
jno
push
les
lahf
xor
arpl
sbb
jne
sbb
ret
dec
cmp
pushf
pop
das
cltd
cmpsl
cli
cltd
xor
pop
xchg
mov
cmp
and
push
loope
cmpsb
add
xor
push
dec
cmp
sbbl
mov
les
fstl
cmp
iret
imul
sbb
fwait
jbe
lahf
negl
xchg
jge
mov
into
sub
push
mov
cmp
dec
adc
mov
sbb
jae
inc
fisubrl
pop
jl
rcrb
pop
repz
je
sbb
jge
and
movsb
jnp
lock
loope
xor
mov
nop
insl
jns
imul
dec
cmpsl
jae
insl
ret
aas
jmp
je
mov
inc
xchg
push
push
into
dec
ret
dec
ds
cmp
ds
out
mov
gs
xor
movsl
dec
in
xor
mov
xor
cmp
xor
pop
xor
dec
jg
in
adc
and
xor
xor
ss
pop
cmp
mov
mov
je
divb
gs
inc
jecxz
aad
sbb
pushf
shrb
sahf
xor
cmp
xchg
insb
cli
sbb
stos
iret
sbb
cmp
or
xchg
dec
in
fs
pusha
fwait
push
subb
imul
xchg
and
icebp
or
add
cmp
sbb
dec
jg
les
xor
popa
mov
sbb
icebp
xor
ficoms
pushf
pop
fsub
daa
cmp
iret
sbb
add
not
inc
enter
xchg
xchg
inc
fs
jp
mov
pop
jnp
subl
in
mov
xlat
cltd
hlt
jp
sti
jo
and
push
push
popf
lea
aad
call
jo
test
nop
stc
inc
xchg
lcall
frstor
inc
cwtl
jp
loope
sub
jl
nop
aad
or
inc
add
es
mov
lods
mov
mov
dec
dec
and
outsl
and
rorb
fstpt
mov
popf
mov
jmp
add
sub
gs
loopne
or
jge
xchg
icebp
mov
pop
lock
xlat
or
mov
ss
repz
inc
test
inc
xchg
mov
pop
sbb
pop
jmp
mov
cmp
jmp
jecxz
leave
cmpsl
clc
pop
jb
rcr
gs
jl
roll
push
pop
inc
mov
cmpsb
in
ljmp
inc
xchg
dec
mov
jl
mov
jbe
mov
roll
cmp
jle
icebp
das
dec
icebp
or
jae
subl
pop
adc
out
mov
movsb
bound
mov
add
addb
fadd
dec
cs
cmp
das
ret
xor
or
mov
adc
push
pop
or
pop
dec
mull
jne
fildl
pusha
test
popa
test
scas
lds
inc
sbb
xor
movsb
adc
add
rcll
out
loope
push
cmp
push
xor
push
cmp
cmp
push
inc
inc
cmpsl
scas
repnz
sti
jp
xchg
cmp
ja
lahf
pop
inc
div
sbb
push
and
loopne
mov
pusha
pop
in
sti
push
push
shrb
cmp
cmpsb
stos
pop
daa
outsl
rorb
insl
mov
add
movsb
mov
add
leave
js
jae
andl
int
sub
inc
and
loop
ret
fisttpl
sub
jns
pop
mov
sbb
notb
sub
xlat
xor
jno
adc
pop
rolb
lea
pusha
rorl
xor
lods
add
push
add
iret
notb
xchg
pop
fdivr
stc
out
push
and
push
sarb
push
test
mov
sbb
and
mov
lahf
cli
aas
jle
sbb
nop
xor
ret
pop
lods
cmp
orb
pop
mov
jns
xchg
repnz
testb
jb
js
and
cltd
mov
add
imul
pop
mov
cmp
ror
inc
pop
xchg
fs
mov
push
push
push
addl
add
adc
arpl
sbbl
dec
mov
pop
or
fildl
and
cltd
in
mov
add
popf
pop
inc
push
sub
mov
fs
cmc
dec
hlt
fs
jg
ds
shl
arpl
sub
mov
lea
mov
xor
dec
inc
loop
stc
int3
or
scas
xchg
pop
inc
call
xchg
aam
and
repnz
fwait
iret
fldenv
sbb
xorl
aam
daa
push
xchg
lock
mov
ss
xchg
cmp
clc
mov
iret
push
in
add
inc
data16
cwtl
jmp
dec
sbb
lcall
lret
insb
loopne
sbb
outsl
out
cmpsl
pop
xor
mov
arpl
push
test
pop
and
arpl
cmp
scas
shlb
lea
push
popf
std
xor
insl
ss
sub
push
mov
push
push
test
sub
and
jo
test
lods
pop
inc
sbbb
push
xchg
lret
push
and
cld
add
push
lock
cmp
outsl
xor
add
stos
jle
or
lret
push
pop
mov
mov
test
or
mov
pop
jecxz
pop
lcall
jne
and
cmp
aaa
sub
mov
mov
xlat
in
ja
xlat
jbe
mov
and
lahf
sub
jle
xchg
in
pop
lock
pop
dec
or
cmp
iret
jb
out
dec
mov
cwtl
xor
cmp
mov
lds
jno
mov
sub
scas
jp
clc
mov
insl
mov
fimull
repnz
pop
pop
push
test
push
xchg
outsb
fdivrp
jmp
lods
cmp
adc
adcl
imul
das
or
loope
sbb
jne
mov
fimull
fnstenv
stos
in
sub
cmpsl
and
push
mov
or
scas
pusha
xchg
xchg
fsubrp
ljmp
xchg
cli
jne
mov
mov
bound
adc
fisubl
push
xchg
lods
subb
js
stc
xchg
xchg
pop
imul
cmp
pop
scas
pop
or
lds
stos
fimull
jb
or
fsubl
xchg
mov
test
cmp
push
xchg
js
sub
addr16
add
aaa
cmp
jns
out
js
mov
push
outsb
jl
or
out
push
sbb
adc
pop
jno
lds
xor
pop
imul
fidivrl
icebp
pop
and
push
mov
into
xchg
xchg
push
adc
out
dec
adc
push
and
loope
jl
cltd
and
cmp
mov
cltd
push
dec
or
add
mov
call
call
jge
push
rorl
in
js
cmp
pop
scas
popf
or
cwtl
iret
loop
xchg
or
mov
mov
sbb
cmpsl
pop
sbb
sbb
cltd
cmc
add
mov
rcr
imul
inc
popf
mov
aas
jns
jno
into
cmpsl
jne
mov
in
pop
push
jne
xchg
lds
je
push
fldl
scas
leave
repnz
sub
push
jecxz
mov
sti
outsl
mov
in
inc
mov
add
stos
cmp
fists
xor
dec
xor
fistps
imul
dec
dec
daa
inc
lahf
and
outsl
sub
fisttps
cmp
pop
mov
outsl
or
cmp
mov
ror
sbb
lods
pmuludq
lahf
das
and
xor
jge
push
add
push
shlb
inc
test
into
sub
out
cmp
adc
cmp
mov
ja
mov
fs
jne
das
or
adc
cmp
and
stos
pushf
aas
sub
add
je
int3
inc
or
add
cmpsb
sbb
notb
stos
daa
dec
pop
cltd
jne
push
out
push
idivl
nop
gs
adc
outsl
dec
sub
pushf
sbb
push
jns
loop
push
pop
nop
dec
or
and
dec
fdivrs
nop
inc
flds
jo
dec
outsb
mov
add
stos
and
lret
push
adcl
mov
imul
js
leave
testb
loope
cltd
xchg
je
or
mov
out
jnp
test
stos
xor
xchg
insb
gs
pop
out
mov
add
lret
ret
sbb
outsb
pop
or
xor
aad
mov
lahf
xlat
pop
fistpll
repz
and
cwtl
jo
pop
lret
cli
xchg
jnp
push
bound
xor
sbb
cli
sbb
das
add
addb
ljmp
loopne
cwtl
mov
in
push
stc
andb
sub
test
pop
xchg
jmp
ficomps
inc
lea
sbb
aam
sahf
popa
adc
fidivl
cmp
xchg
adc
int
mov
arpl
jmp
mov
sahf
or
aaa
ret
fwait
inc
mov
movl
ja
pinsrw
aad
sbb
jb
ja
roll
js
ret
jg
clc
pop
ret
sbb
divps
notb
dec
in
pop
jp
fwait
mov
ljmp
jge
scas
les
int3
jecxz
mov
sahf
and
or
es
mov
mov
int
fsubp
mov
inc
ret
xor
or
movsb
fwait
adc
inc
rol
fadds
mov
mov
push
add
jae
mov
repnz
orb
subb
xor
repz
decl
or
adc
xor
and
sbb
push
adcl
insl
ja
movsb
sbb
adc
jno
jb
test
into
mov
jbe
jb
andb
mov
icebp
dec
mov
mov
shl
inc
sbb
movl
jne
pop
mov
sbb
xchg
movsl
insb
add
cmp
push
stos
clc
xchg
push
dec
xchg
sub
pop
dec
in
mov
testl
fdivp
or
hlt
adcb
mov
lahf
push
inc
push
xchg
pop
or
sahf
cmp
mov
ret
mov
imul
mov
aaa
neg
aaa
cmp
call
sub
out
xchg
neg
inc
dec
les
push
push
scas
mov
icebp
ss
movsl
in
gs
or
xor
adc
cmp
or
imul
inc
outsl
add
lea
or
mov
xchg
daa
movsl
std
pop
sub
and
pop
out
andb
imul
shlb
scas
mov
push
add
cmpsl
jne
add
stos
or
fidivrs
mov
jmp
test
sti
pop
xchg
stc
fwait
mov
std
and
clc
mov
loopne
dec
out
or
add
and
dec
xchg
jmp
out
ja
js
cmp
fwait
xlat
dec
std
or
insb
dec
mov
jbe
jge
mov
xor
cs
pop
jmp
fistpll
imulb
mov
cs
fstl
ret
sbb
inc
jge
scas
cmpsl
test
mov
ja
push
sub
mov
mov
rol
mov
flds
xor
shl
and
cmp
pop
jae
inc
mov
js
or
hlt
cmp
pushf
mov
xor
sub
js
pop
mov
mov
cmpsb
dec
sub
add
push
jbe
cltd
jecxz
dec
lea
clc
dec
lods
ret
cli
mov
push
test
xchg
xchg
xchg
pop
data16
push
sbb
repz
ss
mov
push
repz
gs
xchg
xor
insl
cs
jno
out
mov
or
lret
xchg
cltd
mov
inc
out
stos
mov
pop
fisubrs
adc
and
or
or
add
shlb
jno
mov
mov
out
adc
into
imul
dec
out
adc
xor
imul
jo
pop
cmp
sub
jl
push
mov
xchg
sahf
add
or
inc
add
icebp
pusha
pop
push
push
mov
stos
aam
inc
jbe
les
clc
mov
inc
jo
sbbb
jae
cmp
lods
test
cmp
mov
and
mov
sub
mov
or
pop
scas
lea
sbb
fisubl
cmp
rclb
shl
rcl
adc
call
xor
xor
shlb
mov
in
push
adc
je
jge
xor
stos
in
xchg
and
ljmp
add
xor
adc
std
divb
lret
sbb
mov
loope
push
cwtl
in
call
pop
xor
jo
cs
aad
xchg
test
int3
xchg
iret
push
dec
pop
int
xor
push
orb
adc
lcall
test
ret
push
lret
and
sbbb
push
lcall
fiadds
sahf
mov
out
stc
cmp
out
sub
sbb
and
std
push
jecxz
adc
adc
les
cmpsb
cmp
mov
xchg
adc
nop
and
ret
xor
adc
push
das
movsb
fildl
dec
inc
fmuls
lock
adc
lock
push
insl
push
iret
imul
iret
mov
push
pop
xchg
xchg
aad
pop
js
in
add
aas
mov
xchg
scas
hlt
fisubl
fstpl
add
stos
popa
mov
bound
cmp
mov
in
jge
sbb
dec
xor
jmp
xor
insb
push
jns
sub
fiaddl
pop
jae
and
pop
cli
add
dec
or
popa
rcl
add
push
pushf
sbb
dec
sub
cmp
aas
repnz
call
xor
push
std
lock
mov
mov
sbb
cmp
mov
scas
sub
icebp
jo
frstor
inc
mov
arpl
mov
sub
cmp
jns
push
jle
pop
movsl
adc
push
stc
dec
repnz
jp
stos
in
enter
addr16
mov
in
dec
add
int3
ja
fdivrl
cmp
or
pop
mov
scas
push
dec
popf
cmpsb
and
jp
jo
sbb
push
ret
lahf
mov
push
andb
aaa
dec
jbe
jno
jno
std
fisttpl
test
fbld
push
pop
cmp
ja
ljmp
es
out
sbb
lods
pop
xor
and
xchg
xchg
xchg
adc
lcall
and
push
mov
mov
scas
add
sbb
cmp
push
shrl
out
sbb
jnp
stos
in
add
mov
mov
pop
jp
inc
fbstp
sbb
dec
add
sub
push
outsb
call
push
xchg
cmpsl
lods
cmc
pop
adc
scas
inc
add
push
stos
mulb
xchg
jns
lret
cld
lret
push
push
xor
inc
repz
cmp
and
js
ljmp
jb
gs
ss
jnp
inc
mov
xor
shrl
mov
rorl
test
movsb
sub
outsb
or
push
jge
cld
adc
pop
pop
idivl
sbb
mov
dec
mov
jbe
sbb
test
in
adc
xor
fbstp
xchg
push
fsubs
jecxz
push
mov
lock
fldenv
lds
bound
bound
into
loope
arpl
mov
repz
das
fmuls
mov
out
out
ret
sub
nop
sbbl
sarl
and
jbe
mov
fwait
jmp
fst
leave
stos
or
pusha
nop
inc
je
sbb
roll
ja
inc
push
pop
push
pop
ret
add
jp
ja
mov
insl
sub
sub
jns
test
mov
jle
xchg
dec
sbb
pop
and
out
pop
js
mov
nop
or
jne
ret
fisttps
stc
das
push
je
sarl
ret
int
push
test
cmp
jo
pop
aad
inc
imul
sub
cmp
js
jnp
push
push
aad
dec
in
pop
pop
faddl
mov
mov
xchg
rclb
cli
mov
pop
cmp
mov
mov
out
pop
pop
outsl
mull
mov
cmpsl
and
push
xor
fs
pop
ret
adc
insl
xchg
sub
jo
stos
push
psubb
lods
or
dec
mov
pop
movsl
je
sbb
jg
das
mov
dec
mov
jbe
adc
xchg
cmp
mov
popa
rcll
jg
mov
jbe
mov
or
jge
icebp
test
inc
add
loopne
jnp
mov
inc
jmp
fs
and
push
enter
lret
mov
sarl
or
stos
mov
add
sub
in
scas
es
xchg
inc
or
xor
call
ret
in
sbb
fildl
into
into
inc
gs
or
dec
mov
ret
inc
iret
fsubrl
dec
aad
int
and
xchg
and
data16
ja
mov
mov
call
mov
or
repnz
imul
ja
adc
cmc
adcl
sbb
rorl
leave
cmc
sahf
imul
cmc
idivb
test
lods
fisttpl
add
cmpsb
imul
arpl
rcr
lods
repnz
cmp
cmp
loopne
sbb
sub
movsb
scas
xchg
cmpl
mov
daa
repz
scas
or
mov
je
jmp
xor
dec
aas
push
bswap
dec
pop
adc
lea
cmc
daa
lahf
cmpsl
pop
pusha
insl
jo
xchg
mov
sbb
sbb
loope
pop
shll
xor
cwtl
xor
xchg
addr16
aam
sub
fs
jbe
in
insl
sbb
cmp
rol
inc
pushf
stos
mov
cmpsl
out
mov
jmp
xchg
xlat
nop
repnz
mov
add
pushf
loopne
sub
icebp
shrl
adc
mov
pop
lods
xor
mov
test
fisubrs
push
lcall
cmc
sbb
dec
and
lcall
lds
and
push
stos
movsb
push
cmc
and
fcomps
cmc
int
mov
cmp
sbb
mov
mov
jge
pusha
jmp
dec
lds
jg
fwait
pop
movsb
aam
sbb
dec
add
push
int3
push
nop
lods
cld
rcrl
pop
rcrb
ret
and
pop
xchg
adc
aam
cmpsl
out
ficoms
mov
int3
mov
inc
rcrl
sub
pop
bound
jle
jns
jb
in
mov
mov
call
sbbl
cmp
rcrb
mov
das
pusha
cmpsb
test
and
je
loope
sbb
out
pusha
loop
sbb
dec
inc
cmp
xchg
inc
mov
aaa
aam
test
push
out
cmpsl
dec
or
nop
xchg
or
loope
push
push
bound
add
xchg
sub
out
add
aaa
adc
sub
leave
push
orl
test
mov
or
std
cwtl
pop
sub
dec
pop
lods
and
icebp
and
push
stos
and
fwait
push
div
sub
pop
mov
lea
push
dec
xor
pop
pusha
xchg
hlt
fs
stos
stos
cld
inc
mov
sahf
push
xchg
imul
nop
stos
jg
idivl
cmpsb
hlt
popf
addr16
cmc
imul
call
int3
or
push
mov
push
sub
inc
xchg
mov
xor
push
out
aas
jle
and
aas
or
jg
out
mov
cld
inc
clc
push
ret
fildl
repz
pushf
cmp
jg
mov
inc
ss
sbb
sub
aam
mov
fs
jnp
sub
dec
in
xchg
lods
pusha
imul
std
sub
stc
push
push
adcb
inc
push
fldcw
mov
aam
sub
inc
test
pop
inc
cmc
and
and
unpckhps
cmpsl
test
xor
dec
xchg
dec
test
imul
mov
dec
es
sahf
push
mov
or
bound
aaa
test
cmp
loope
or
cmp
incl
outsl
xchg
jbe
push
jmp
xchg
jmp
mov
mov
insb
icebp
push
jecxz
call
aaa
push
mov
bound
xchg
test
mov
and
xor
jmp
dec
mov
add
mov
lcall
pop
je
push
mov
das
mov
lret
lock
push
sbb
aas
cmp
popa
push
test
repnz
jno
loopne
push
xor
cmp
gs
pop
push
cwtl
gs
xor
xlat
and
sub
pop
push
lahf
xor
cwtl
ret
xchg
clc
jae
jp
arpl
clc
or
es
sub
test
sub
dec
call
popl
mov
outsl
test
cmp
push
into
xchg
add
adc
jbe
jge
cwtl
inc
movsb
aam
je
cmp
icebp
arpl
scas
cli
push
test
adc
inc
mov
dec
stos
mov
sbb
xchg
sub
push
pop
sbb
xor
and
sbb
fiadds
shl
xchg
imulb
xor
jne
or
fbld
ret
mov
je
pop
or
xchg
pop
lret
das
push
push
mov
data16
ljmp
jecxz
jp
lret
rcrl
push
jmp
in
xor
inc
test
test
ljmp
dec
push
push
pop
bound
outsb
jnp
sar
mov
inc
stc
adc
jb
mov
call
xchg
dec
pop
std
push
loop
jnp
rcll
jl
xor
movsl
mov
into
cmp
scas
mov
les
lods
mov
adc
sti
mov
adc
dec
ret
xchg
test
imul
out
add
mov
sbb
inc
ret
faddl
ss
cmp
sub
or
shll
inc
add
mov
mov
inc
out
iret
gs
testb
mov
inc
lcall
cmc
out
jp
shrb
lods
cld
lahf
sub
xchg
xchg
mov
mov
inc
add
push
xchg
das
mov
rorb
mov
inc
mov
mov
inc
adc
lcall
dec
imul
dec
out
jmp
push
imul
pop
imul
insl
and
imul
xor
sbb
mov
ja
outsb
mov
jo
cwtl
leave
imul
ja
sbb
popa
sbb
mov
xchg
leave
cmp
ds
dec
in
dec
and
push
add
test
jo
xchg
sbb
shlb
jle
stos
imul
push
jecxz
fnstsw
or
in
insl
sub
inc
test
aad
jmp
xchg
insl
loop
add
mov
les
add
adc
push
aaa
lods
negb
xchg
pop
addr16
jo
mov
jne
popa
dec
mov
pop
mov
pusha
adc
orl
jne
mov
cmpsl
stc
mov
xlat
push
dec
mov
mov
movsl
test
inc
mov
push
sub
sahf
test
pop
dec
std
jae
or
lds
dec
jno
jp
scas
cmp
test
cmc
adc
push
cs
andl
test
and
lods
into
int
lcall
into
movsb
sub
popf
or
mov
push
sarb
test
fisubs
jnp
imul
out
ja
std
jle
sbb
xor
shl
scas
or
mov
cmpsl
dec
orl
loopne
out
fidivs
inc
pop
es
sub
imul
fidivrl
insl
pop
xcrypt-cfb
cmpsl
and
adc
sub
icebp
arpl
pop
xchg
pop
adc
jo
fadds
sti
ljmp
inc
cwtl
sub
push
sarl
dec
insb
jecxz
push
add
xor
xor
std
and
dec
or
sub
fiaddl
or
into
xchg
sbb
jbe
or
es
dec
mov
repnz
loope
aad
pop
and
xlat
stc
test
push
bound
les
add
xor
pop
push
lods
add
or
fisttpll
push
or
fisttpl
mov
fs
lahf
sub
les
mov
lock
jmp
fs
shll
mov
lcall
cmp
stos
pop
mov
clc
in
xor
add
outsb
xchg
outsb
insb
cmpb
test
stc
rclb
mov
mov
mov
xchg
into
pop
xor
or
lds
and
lcall
or
add
adc
test
cli
sahf
ret
loopne
int
cmc
push
test
idivl
and
sub
pop
mov
cmp
inc
rolb
addb
pop
inc
mov
in
stos
sub
outsb
sub
dec
loopne
in
pop
nop
mov
imul
idiv
in
lea
stos
xchg
mov
add
jno
fstps
inc
cwtl
cltd
les
fcomps
pop
loope
xor
sahf
fidivrl
jns
shll
push
xchg
jecxz
sub
out
push
add
es
daa
shlb
xchg
sahf
sbb
fiaddl
pop
adc
adc
in
clc
fcoms
subl
outsl
outsb
out
call
add
jne
jecxz
loope
or
test
or
mov
pop
pusha
mov
cmpsl
sarl
loope
add
call
xchg
xlat
inc
popf
scas
add
lea
cmpsl
adc
pop
cmp
push
xchg
mov
pop
cwtl
mov
xor
jb
mov
cmc
jnp
xchg
inc
push
jl
xchg
jo
int3
test
test
xchg
outsb
jb
xorl
xor
adc
out
pop
cwtl
in
rorb
imul
xchg
pop
mov
rorb
data16
xchg
hlt
mov
loopne
arpl
add
clc
arpl
mov
lods
in
xchg
loop
or
pusha
xchg
aaa
div
and
jbe
outsb
sbbl
js
push
push
sti
scas
fsubrs
inc
sbb
popf
sub
pop
cmp
adc
test
mov
pop
iret
cmp
cmpsl
push
mov
inc
aaa
sbb
enter
test
dec
xor
sub
test
call
push
pop
sub
cmp
or
adc
stc
rorl
and
jns
int
shl
sti
inc
rorl
insl
leave
adc
sahf
mov
fucomi
aas
jge
add
xchg
lds
lods
or
sub
or
inc
xchg
sub
ds
shl
jle
gs
icebp
cmp
xchg
push
jl
sub
dec
dec
dec
inc
addb
dec
pop
mov
addr16
loop
sub
pop
dec
sbb
ret
sub
aad
mov
insl
pop
stc
clc
popf
arpl
cli
out
mov
mov
or
dec
push
cmc
cli
mov
dec
lds
jae
loopne
push
push
mov
aas
mov
xor
jns
pushf
adc
push
mov
lods
cmp
sub
fdivs
nop
jmp
jl
insl
adc
mov
loop
in
adc
jns
subl
movsl
pop
jae
scas
dec
mov
push
arpl
stos
xor
sbb
ljmp
ret
mov
movsb
in
fisubrl
add
fcoms
or
or
shll
push
mov
andb
xchg
lds
inc
aam
leave
std
sbb
mov
adc
in
movsl
mov
loop
aad
mov
lret
xchg
add
imulb
xchg
mov
jg
orb
cli
movsb
clc
jo
div
sbb
lcall
push
xorl
push
ret
xchg
jmp
or
xchg
mov
incl
push
nop
subb
adc
aas
lock
les
sahf
sub
out
xchg
outsl
data16
xchg
jnp
icebp
cmp
test
dec
push
sbb
loopne
xchg
popf
cmpb
add
push
pop
jle
stos
inc
inc
adc
mov
cmp
mov
cmp
jge
mov
hlt
std
lcall
jmp
lods
inc
jmp
shll
shlb
sbb
fsubrl
jecxz
loope
sub
shll
out
fucomp
mov
pop
cld
add
add
or
push
jmp
dec
ja
ret
mov
in
fistpll
ret
lret
fnstsw
cmpsl
cmp
mov
pushf
cmp
pop
inc
adc
lcall
adc
push
adc
add
fimull
mov
dec
mov
pushf
inc
pop
pushf
test
inc
mov
rolb
inc
daa
jne
cmp
les
lret
add
fistps
stos
daa
mov
push
and
or
orb
dec
mov
sub
xchg
hlt
mov
pop
inc
arpl
mov
mov
aam
lods
addr16
imul
sub
adc
xchg
loopne
ret
or
xor
jl
xchg
repz
lods
mov
jae
inc
ss
or
sbb
dec
add
ljmp
xchg
mov
add
std
repz
jmp
sub
push
stc
ds
stc
pop
push
and
inc
xchg
js
sub
cmp
fwait
test
fdiv
xchg
or
out
push
ffreep
adc
std
mov
fldl
ds
cmpsb
scas
jge
decb
enter
mov
mov
jae
mov
fs
cmp
lret
rorl
out
xchg
cmp
pop
adc
inc
pusha
push
pop
sbb
mov
pop
sbb
add
pop
pop
bound
loope
add
jno
loope
and
cmp
enter
push
lret
sub
cmp
xor
aas
pop
sbb
or
fdivs
jne
dec
test
sbb
sub
aas
ja
test
test
mov
gs
mov
push
ret
rclb
add
jbe
call
adc
mov
xorb
xlat
repz
sti
movsb
mov
jno
inc
lds
xor
sub
jle
cmpsb
fmul
aad
dec
or
jmp
stc
sub
test
sbb
xchg
scas
hlt
push
enter
dec
flds
cs
push
cltd
xchg
adc
jbe
mov
scas
jg
test
sahf
shll
lcall
mov
cld
into
jno
test
dec
push
andl
and
rorb
arpl
dec
clc
in
insl
clc
push
add
xor
jb
xchg
jl
mov
xor
js
sbb
test
add
daa
gs
int
mov
call
push
jle
sarb
and
push
popf
adc
inc
rol
cmp
xchg
das
push
les
outsl
pop
mov
dec
mov
inc
lods
ret
notl
lahf
out
in
cli
fisttpl
pop
mov
xor
pop
movsb
sti
dec
push
sbb
ret
jbe
adc
push
push
cmp
sub
stos
call
stc
jno
cmp
rcrl
gs
movsb
inc
outsb
or
andb
xor
repz
adc
sub
xchg
dec
dec
push
mov
mov
cmp
lea
into
dec
icebp
dec
sub
gs
sub
push
ljmp
mov
xor
aad
mov
pusha
inc
sub
shl
mov
add
sbb
lahf
push
xorl
cltd
xchg
outsb
addr16
lret
ja
cmc
fidivrs
addb
negl
loopne
push
add
cmc
aad
in
cs
fstps
rolb
jp
pop
and
out
or
fisubl
adc
or
addr16
mov
add
mov
pop
cmp
roll
mov
cld
push
pushf
adc
mov
movsl
mov
jecxz
int3
outsb
fwait
inc
in
and
add
addr16
sub
sub
ja
dec
and
out
xchg
lcall
cmpsb
out
adc
adc
inc
pop
xchg
icebp
add
insb
mov
test
push
pop
adc
xchg
mov
or
cmp
divl
das
insl
push
mov
ljmp
inc
push
in
enter
aaa
xor
movsb
arpl
lods
insb
iret
mov
mov
pop
out
mov
lock
push
cltd
in
scas
mov
lcall
mov
ss
push
jo
clc
in
xchg
nop
push
rcll
fs
add
pop
add
pop
mov
negl
stos
data16
ret
addb
and
cld
push
incl
fcompl
mov
ljmp
ja
movsb
jge,pn
dec
mov
xchg
mov
sub
sbb
or
aas
mov
or
mov
clc
lods
rorl
push
or
sbb
and
sarb
adc
xadd
call
sub
scas
lea
hlt
pushf
mov
scas
outsl
mov
ja
insb
bound
ret
sbb
xchg
nop
mov
test
inc
hlt
push
mov
add
test
pop
and
jmp
cmp
xchg
cmp
aaa
push
inc
dec
stc
xchg
test
xor
fwait
cld
inc
adc
lret
roll
jp
inc
mov
jg
push
inc
pop
mov
or
stc
loope
inc
mov
dec
pushf
xchg
xchg
adc
lret
and
mov
mov
pop
rcrb
xor
in
add
jae
jae
sbb
enter
push
cld
out
aas
or
xchg
aaa
jecxz
iret
insl
sarb
andl
add
push
int
je
mov
aad
daa
mov
adcl
mov
xlat
dec
test
adc
sub
jbe
sarb
das
xchg
dec
call
iret
add
iret
hlt
cmpsb
stc
add
and
rclb
jbe
movsb
cmp
addr16
ljmp
adc
jb
sbb
mov
in
in
xor
iret
sbb
inc
jae
into
fnstsw
jb
xchg
add
inc
imul
jg
fstl
xchg
stos
mov
in
cmp
adc
mov
mov
imul
pop
xor
mov
jb
sub
stos
lahf
loopne
xchg
xchg
cwtl
adc
arpl
or
leave
bsf
pop
loopne
call
mov
sbb
sub
clc
add
aas
inc
mov
gs
repz
fmull
out
sub
jbe
repnz
lock
or
mov
decb
mov
rol
cltd
push
aad
add
repnz
lds
mov
or
shr
cmp
lods
subb
sahf
lcall
or
cmp
lods
push
mov
fs
scas
add
mov
mov
out
repz
mov
rclb
enter
adc
in
mov
lea
cmpsl
mov
inc
out
pop
mov
icebp
inc
xchg
jle
repz
imul
dec
mov
add
insl
and
cmp
push
aad
inc
stos
and
or
fstpl
xchg
clc
fwait
sbb
rcrl
adc
mov
push
int3
and
jo
fwait
mov
test
dec
xchg
sub
lods
adc
test
xchg
lods
push
call
push
imul
lret
sahf
pop
pop
mov
mov
lahf
xchg
test
cli
frstor
pop
adc
aam
cmp
stos
mov
mov
loop
cmp
ja
mov
fsubr
pushf
push
push
or
mov
push
fnstenv
push
arpl
dec
xor
repnz
mov
test
mov
cli
cwtl
pushf
inc
aad
mov
pop
cwtl
and
loop
rcrb
fs
dec
es
add
leave
and
pop
pop
push
lods
aad
pop
dec
mov
add
stos
cli
iret
popa
mov
int3
mov
jne
pop
in
mov
iret
dec
mov
fs
stos
scas
sub
repnz
jecxz
loop
pop
push
or
fisubs
sub
push
movsl
add
loop
ret
ljmp
movsl
or
adc
lahf
jb
mov
std
ja
inc
insb
dec
adc
xor
sahf
push
push
mov
clc
and
ja
jle
cmpsl
incl
dec
add
lret
mov
jl
add
jb
push
and
nop
fsts
pushf
push
mov
int3
adc
push
repnz
mov
fdivr
dec
inc
lret
in
ret
outsb
add
sbb
out
xor
cmp
hlt
ret
jg
xchg
leave
cmpsl
dec
mov
fwait
stc
sti
stc
lods
sub
fisttpl
loop
pushf
lahf
xchg
movsb
sub
mov
lret
pmullw
jns
adc
cmp
lods
test
enter
sbb
in
pop
pop
cmc
pop
addr16
push
mov
test
xchg
push
inc
bound
sub
mov
adc
test
mov
fdiv
cmp
mov
fstps
and
rolb
data16
pop
daa
mov
aam
ror
mov
add
inc
enter
jno
outsl
mov
bound
xor
cmp
fs
xor
das
fwait
movsb
mov
jg
sbb
xor
cmpsl
int
arpl
lods
mov
add
leave
xorb
push
out
jns
les
je
test
adc
sahf
bound
and
or
aas
push
je
cmp
insb
movhps
push
or
imul
pop
cmp
mov
pop
mov
fdivrs
pop
lock
loope,pn
test
adc
fs
adc
bound
sbb
outsb
data16
adc
addr16
fisubs
sbb
test
mov
mov
mov
push
test
inc
and
setae
dec
sahf
loopne
dec
cmpsb
loope
lods
lock
xchg
dec
push
mov
repnz
push
push
nop
ret
stos
sub
jne
add
dec
imulb
jbe
sti
leave
cmp
cmpsb
mov
push
sbb
insb
jp
pushf
cmpsb
lock
mov
push
hlt
pop
mov
cmp
decb
xchg
cmpsb
mov
cmp
ja
sbb
inc
push
movsb
loopne
out
xor
leave
jb
sub
fxch
inc
push
lahf
stos
stos
add
iret
jno
lcall
fsubs
fwait
imul
lock
out
ljmp
mov
push
cli
jecxz
clc
fnstcw
fwait
push
inc
les
adc
aaa
and
sub
scas
mov
mov
sbb
mov
ljmp
out
loopne
pop
sbb
dec
cmp
jecxz
test
mov
imul
push
sti
call
mov
lahf
and
lret
clc
fidivrs
sti
add
add
push
xor
mov
ret
es
lahf
sarb
call
push
int3
mov
inc
pop
scas
pop
bound
add
push
dec
push
xchg
push
out
cli
jge
and
fiadds
syscall
inc
mov
and
cli
inc
fimull
aaa
sub
jbe
push
mov
imul
inc
adc
sub
push
or
xor
popa
xchg
mov
mov
jp
sbb
hlt
jae
sub
rorb
sti
cltd
push
inc
rcl
sub
inc
ja
inc
in
stos
pushf
out
imul
out
dec
fwait
inc
sbb
lret
jbe
add
adc
inc
or
xchg
add
mov
mov
jge
leave
fs
outsl
hlt
push
fists
loop
aam
mov
add
add
shll
add
js
insb
test
stos
jno
mov
mov
xchg
jbe
dec
out
inc
mov
cld
stos
cmc
sbb
push
mov
popf
lods
into
incb
push
mov
xlat
das
mov
in
or
adc
fidivl
and
lret
gs
or
loope
bound
pop
pop
pop
sub
jae
mov
mov
iret
cmc
subl
and
daa
ret
jecxz
jns
fdivs
mov
lea
lods
dec
and
jge
mov
push
xchg
fsub
sbb
fwait
test
add
scas
cld
jmp
or
inc
lock
xor
leave
adc
push
jno
nop
xor
das
push
adc
aam
mov
mov
adc
aas
xor
dec
loop
cli
mov
and
mov
leave
jns
or
and
jp
and
sbb
mov
inc
adc
stc
add
fdiv
cmp
lods
loopne
mov
sub
mov
pop
daa
inc
mov
add
jbe
cmp
pop
les
out
pop
jnp
mov
pop
push
loopne
shlb
loopne
and
sahf
mov
mov
mov
dec
jno
adc
sarl
cltd
or
xor
mov
out
or
shll
push
clc
mov
shll
cli
outsl
pop
cli
or
and
testb
sbb
lock
dec
fwait
inc
add
cmp
lods
sub
divl
bound
jnp
loop
out
scas
and
popa
xor
jns
inc
out
es
and
and
call
in
mov
fcomps
push
ret
xchg
jno
inc
pop
in
popf
lods
jecxz
aas
bound
lods
xor
pop
mov
xchg
adc
daa
push
jo
xor
imul
fsubrl
pusha
mov
lret
or
xchg
jne
inc
lahf
inc
dec
test
idiv
test
or
sbb
out
lahf
mov
sbb
and
rolb
push
add
inc
xchg
and
and
lods
lods
arpl
push
aas
lods
rcll
sahf
mov
add
push
mov
loop
aas
and
rep
jg
xor
fwait
sahf
popf
mov
rcll
push
push
andb
pushf
xchg
push
dec
cwtl
push
test
and
pop
cld
in
pop
aas
rcrb
fwait
add
mov
push
test
fs
mov
sbb
and
adc
mov
dec
cmp
es
xor
cmp
dec
sbb
outsl
cmp
pop
xchg
xor
jne
push
mov
jae
outsl
sti
push
imul
test
sub
pop
das
jo
es
cmp
call
cmp
or
xchg
lock
test
iret
pop
pop
movsl
add
in
outsb
mov
sar
iret
clc
daa
cmpsl
fsubl
mov
ds
dec
xchg
in
into
jecxz
enter
xchg
push
sbb
dec
add
sarl
pop
outsb
xor
enter
insb
stc
mov
ficompl
mov
jl
and
hlt
adc
cmp
xchg
cmp
hlt
aam
mov
pop
insb
dec
inc
pusha
loopne
jmp
gs
sub
and
or
xchg
fcmovnu
dec
mov
fcomip
sbb
or
sub
int3
lds
hlt
rcl
ret
cmp
test
inc
and
add
js
ljmp
aaa
mov
mov
mov
into
push
loope
pushw
jmp
sbb
push
inc
cmp
push
insb
fdivs
je
ds
das
enter
and
cmp
iret
mov
incl
dec
or
hlt
std
loopne
add
push
xor
jae
cwtl
cmp
mov
into
ss
sbb
loop
adc
sbb
mull
pop
fistps
pop
cwtl
sub
xchg
jle
pop
add
and
out
lcall
lods
stc
sbb
dec
xor
or
in
fwait
in
add
fisttps
jns
fistps
xchg
cmpsb
aad
xchg
out
or
push
and
sub
test
sub
aad
xchg
sbbl
xchg
adc
insl
adc
mov
pop
pop
loop
sub
fcompl
dec
int3
xlat
insl
push
das
sbb
pop
xchg
push
cmp
subb
inc
jbe
sub
sbb
addr16
fistps
sbb
sbb
mov
sub
das
push
fists
and
jae
mov
mov
fisttps
aaa
or
out
dec
push
stos
insb
out
cli
movsl
out
sti
adc
cmc
arpl
outsl
ja
into
inc
aas
or
scas
loope
stos
rcl
mov
aam
jno
mov
mov
mov
pop
test
clc
inc
popf
xor
lret
pop
icebp
lret
movsb
cmp
inc
xor
hlt
pop
xchg
jp
das
dec
push
xchg
jns
inc
push
jnp
lock
inc
bound
aaa
push
arpl
pop
repz
outsl
sub
fisttpl
ss
pop
xchg
xor
inc
add
adc
mov
xchg
lock
or
pop
push
push
fwait
push
mov
sub
mov
js
push
adc
push
xchg
push
dec
std
inc
fldl
mov
mov
es
cli
fldcw
xor
xchg
dec
adc
mov
repnz
cli
add
out
mov
movsb
or
jne
mov
sub
out
or
push
mov
mov
pusha
or
xor
jmp
loope
pop
sub
xchg
outsl
sbb
adc
mov
stos
movhps
cwtl
sub
and
addl
loopne
setae
push
dec
sub
mov
incb
xor
sbb
out
xor
pmaddwd
std
andl
mov
ficompl
aam
ret
push
dec
add
mov
lods
mov
mov
mov
xlat
add
fstps
inc
in
test
lret
dec
andb
push
add
push
pop
stos
pop
sub
bound
dec
mov
sbb
and
loopne
mov
enter
lret
sahf
pop
adc
ror
pop
nop
lods
lcall
stos
cltd
shlb
scas
jg
lcall
notl
lret
sub
inc
sub
ficomps
pop
in
cwtl
negl
cmpsb
sub
mov
loopne
sarb
leave
insl
icebp
jmp
cmp
lods
mov
cmp
mov
sahf
and
pop
fs
lcall
add
cmp
pop
mov
xchg
lret
mov
mov
pop
cmp
sti
push
adc
insb
push
pushf
ret
pop
push
rcrb
mov
mov
cli
or
popa
test
xchg
les
dec
pop
jge
mov
test
inc
iret
jns
push
pop
xor
ficompl
js
stc
les
fmuls
cmp
fstpl
dec
in
dec
xchg
in
stc
jle
mov
push
arpl
or
jns
daa
jne
adc
les
pop
xor
mov
lock
pop
jl
and
jno
push
data16
jp
adc
daa
ret
inc
dec
or
mov
lods
stos
xchg
pop
pop
std
outsl
mov
out
mov
imul
cmc
cmp
dec
xor
popl
mov
dec
mov
jl
mov
sti
sbb
cmp
xchg
xchg
mov
mov
pop
pminsw
cmp
push
out
shll
mov
fwait
int
xchg
push
cmpsb
jno
and
jp
loop
fnsave
mulb
pop
nop
addr16
aam
sbb
mov
scas
push
fsts
push
int
leave
mov
xor
loop
cmp
je
aas
lock
adc
dec
mov
in
mov
jle
mov
call
cmp
push
test
cmp
pop
dec
xlat
and
sbb
pop
repnz
nop
pop
ja
mov
cmp
xchg
push
mov
adc
dec
pop
or
inc
outsb
cmp
xchg
xchg
sub
mov
inc
and
sub
pop
xor
enter
call
bound
mov
jno
adc
mov
fdivrs
in
adc
cmpsl
aam
push
insb
jge
clc
adc
mov
add
inc
mov
imul
jno
aam
addr16
sub
inc
in
inc
jp
out
push
pop
jns
lret
arpl
sub
push
jbe
inc
mov
in
lods
in
in
fmuls
idiv
in
fsubrl
dec
call
mov
push
cmp
sahf
loop
mov
test
inc
shrl
pop
push
bound
inc
adc
jp
mov
out
xor
pop
cmp
push
cmp
mov
in
scas
test
cli
in
sbb
lods
mov
mov
pop
mov
cmp
and
outsl
or
ja
fdivs
outsl
scas
iret
dec
sub
cmpl
ss
popf
lods
push
xchg
mov
fnstenv
popa
inc
adc
movb
dec
mov
dec
es
adc
jmp
js
mov
test
push
sub
or
stc
push
jnp
push
shlb
rep
out
stos
sbb
mov
add
rcll
rcl
sbb
dec
or
iret
or
je
sub
cli
inc
negb
add
mov
xchg
test
in
out
and
lret
fdivrl
cmp
mov
push
and
sbb
call
add
cmc
and
push
dec
in
cmc
loop
sub
out
jl
xlat
cmp
insl
xlat
clc
or
xchg
sub
cltd
mov
push
sbb
cs
xor
push
fwait
aam
lods
insl
rorb
fdivs
jb
jne
push
mov
jle
jns
cmpsb
mov
xchg
pop
jne
out
push
sbb
mov
jns
xchg
cld
pop
lea
cs
inc
push
loopne
adc
rcl
cltd
inc
lea
icebp
aam
das
push
mov
imul
ret
xchg
sub
mov
loop
adc
out
and
inc
xchg
ret
pop
out
stos
dec
or
push
sub
sbb
sbb
subl
les
or
mov
push
mov
lcall
or
movsb
push
mov
loope
jne
push
jmp
enter
and
cs
lcall
jo
sbbl
pop
cmpsl
mov
cmpsl
inc
cmp
xchg
daa
loopne
or
push
imul
movsb
and
mov
lcall
pop
fistpll
xchg
lods
sub
je
xchg
mov
push
xchg
lcall
inc
hlt
mov
les
icebp
lahf
pop
loope
mov
jl
dec
add
pop
inc
adc
sbb
and
sub
push
fisttpll
mov
out
enter
push
test
mov
in
ja
push
dec
bound
and
adc
ficoms
movsb
das
imul
cmp
ud0
mov
sti
mov
jbe
mov
or
in
loope
sub
out
cmc
fsubrl
mov
out
xchg
rcrl
pop
adc
dec
or
aad
movsl
cmpsl
sbb
int
push
add
xchg
je
fisttpll
sub
imul
cmp
inc
push
adc
ret
aad
into
fwait
xor
add
test
add
sysret
inc
and
dec
lcall
inc
jl
aas
lds
popa
movsb
add
cmp
outsb
add
stos
mov
ret
push
lcall
loop
jbe
out
fs
jb
rcl
add
fbld
leave
insb
sub
ror
add
enter
xor
pushf
iret
push
inc
push
fcmovbe
daa
jl
scas
aad
mov
shr
xchg
sbb
mov
mov
jbe
xor
mov
xor
aas
and
sti
daa
inc
jbe
clc
rol
pop
or
inc
xor
das
sub
push
mov
mov
push
sub
insb
mov
inc
insl
rcl
push
out
js
mov
push
call
sbbb
xor
mov
mov
jmp
dec
rcr
sbbl
sbb
mov
sub
pop
cmp
push
push
or
in
dec
sbb
roll
mov
es
and
pop
mov
xchg
in
stc
out
mov
das
mull
adc
xchg
mov
fyl2x
daa
mov
movsl
xor
roll
mov
dec
fsubl
xor
mov
pop
mov
shrl
in
andb
xchg
loop
lahf
adc
push
sbb
fidivl
jb
xchg
std
cld
sub
sbbl
into
dec
push
test
leave
xchg
rorb
scas
adc
pop
jae
mov
and
push
xchg
jl
stos
cmp
aaa
dec
inc
enter
mov
or
hlt
pop
push
sub
pop
lahf
jle
ss
lock
xchg
rsqrtps
fcom
pop
out
cltd
loop
ret
inc
jae
in
repnz
mov
xchg
jne
sbb
dec
das
je
push
add
in
push
cmc
adc
xchg
call
xchg
ror
sarl
mov
test
lds
loopne
fcomip
cmpsb
sbb
mov
outsb
dec
or
call
mov
ljmp
data16
sub
rcrl
repz
shrb
scas
data16
mov
xchg
scas
pop
pop
lds
shlb
push
cmpsb
mov
ret
imul
leave
movsb
dec
das
add
xor
xor
movsl
aaa
push
clc
xor
xor
or
popf
add
aaa
dec
sahf
lret
push
mov
outsb
test
mov
out
mov
cmp
sub
aaa
mov
pop
int3
js
fidivrl
mov
lahf
call
pop
jno
arpl
cmpps
mov
add
pop
jge
add
jle
xor
xor
jo
int
jmp
push
push
in
xor
cmp
xchg
cwtl
fucom
imul
mov
lods
fcoml
andl
hlt
repz
inc
add
cmp
call
cmp
fistl
or
out
fwait
push
adc
push
call
scas
addr16
mov
jecxz
vpaddusb
outsl
sbb
dec
mov
gs
loope
fcom
inc
inc
pop
sbb
cpuid
inc
testl
sbb
outsl
or
inc
xchg
outsb
dec
cmp
add
pop
mov
mov
inc
and
es
sub
adc
call
bound
mov
mov
ja
pop
cltd
jle
lret
outsb
int
pusha
inc
or
cmp
pop
or
scas
lods
pop
sahf
or
add
xchg
sti
ret
fs
add
ficomps
cs
fld
es
loop
push
fistpl
cmp
test
comiss
adc
xor
int3
sub
data16
in
lods
jbe
or
adc
clc
cmp
add
push
sarb
jmp
mov
jne
jae
repz
ljmp
and
pop
fs
popa
adc
push
sbb
and
add
xor
pop
mov
fwait
push
sub
xor
jecxz
jecxz
in
test
sub
in
shl
push
cwtl
lods
add
adc
push
xchg
shl
xchg
mov
pop
mov
or
dec
int
dec
int
adc
push
in
mov
in
adc
sub
mov
mov
pop
ja
xchg
mov
cmp
and
push
leave
or
arpl
jl
decl
ja
mov
mov
push
jg
lds
push
cmp
pop
pop
xlat
cltd
push
aam
ljmp
int3
cmp
sbb
cmp
dec
mov
xor
clc
mov
jl
lret
mov
sbb
out
inc
mov
popf
dec
adc
push
pusha
test
or
pusha
movsb
test
sbb
xchg
bound
jg
mov
ret
mov
std
call
push
pusha
mov
iret
cmpsl
mov
pop
lock
and
push
push
sbb
test
shrl
xchg
mov
mov
mov
gs
shll
mov
jnp
mov
jb
xor
cld
fwait
sub
push
rclb
jne
addb
daa
imul
or
in
int
dec
outsb
jns
pop
push
aas
aaa
mov
push
idivb
rcrb
push
insl
xchg
xchg
andl
js
push
into
outsb
insb
push
leave
loope
fistpll
pop
lea
jmp
and
and
movsb
mov
call
jae
push
js
movl
xchg
jb
add
dec
push
xor
fiaddl
mov
cmp
push
scas
decb
or
mov
or
jo
es
test
pop
sbb
ljmp
sbb
pop
sahf
fsubl
and
aas
fs
into
ret
inc
or
fsubr
pop
jl
adcl
mov
mov
sub
inc
dec
inc
xchg
mov
std
inc
mov
mov
arpl
mov
xchg
imul
in
add
adcl
xor
jno
pop
jns
out
das
imul
inc
push
lahf
sti
xchg
cld
leave
and
adc
test
pop
fs
xchg
cmp
jo
xchg
dec
and
or
scas
lret
out
adc
jnp
negl
mov
pop
movsl
cli
mov
ja
pushf
jae
mov
dec
mov
bound
rclb
out
lea
add
or
or
inc
and
xchg
daa
jmp
mov
pop
les
pushf
lret
and
stos
sbb
jns
in
xchg
xchg
pusha
ret
inc
mov
lahf
sbb
adc
jnp
sarl
test
cs
add
and
jno
mov
insl
push
out
or
mov
add
dec
sub
xor
fisubrs
call
dec
fbld
mov
cmpsb
mov
add
loop
or
das
mov
push
insb
daa
pop
ss
xchg
push
and
jge
cs
jle
ret
sub
push
test
pop
inc
xor
push
sub
jae
and
add
add
push
or
adc
push
test
adc
ret
xor
jnp
outsl
xor
jle
jg
pusha
aad
call
pop
sbb
add
or
push
dec
add
and
mov
jmp
ficomps
cwtl
shll
inc
daa
cmp
sbbl
pop
add
sbb
dec
pop
addl
cmpb
in
inc
push
xchg
fstpl
push
aaa
es
add
into
das
daa
es
dec
or
into
jns
rorb
outsb
jno,pn
aaa
and
adc
mov
repz
inc
inc
lret
cmp
push
push
jle
push
and
add
sbbb
pushf
shlb
cmpsb
and
xchg
xchg
mov
pusha
push
fcmove
aas
test
jo
push
stc
mov
lahf
push
int
mov
loope
cmpsb
dec
aam
add
mov
inc
insb
fcomp
sbb
dec
data16
dec
aas
inc
iret
sub
in
scas
into
sub
out
shll
cmpsb
aas
jns
sbb
inc
cld
pop
roll
xchg
push
sti
adc
lret
stos
cmp
pop
in
loop
lds
mov
scas
ret
js
loope
push
popf
test
lds
popf
stos
jp
scas
pop
pop
pop
outsb
mov
popa
das
pop
jo
mov
out
repz
scas
pushf
mov
mov
mov
popf
outsl
cwtl
scas
hlt
jnp
pop
leave
inc
shlb
and
icebp
adc
cwtl
jg
cmp
mov
sub
popf
popf
hlt
cld
xor
imul
mov
adc
bnd
lods
cld
leave
sbb
push
aad
xor
or
mov
xchg
xchg
or
call
loope
mov
idivl
dec
in
cmp
pop
and
push
mov
les
js
das
xchg
or
push
imul
test
adc
or
cmp
add
pop
push
inc
add
aam
inc
stos
cmp
repz
mov
cld
fs
enter
lods
testb
insl
adcb
or
ret
jb
push
lret
push
pop
daa
clc
pop
mov
mov
movsl
icebp
fcoms
xchg
insl
icebp
mov
inc
dec
test
add
xor
jns
pusha
lods
in
js
push
mov
add
clc
ret
mov
repnz
jmp
fsub
inc
or
popf
mov
xor
cmp
sub
xor
sbb
mov
and
mov
or
fadd
cli
sbb
xor
sub
sub
scas
in
clc
insb
mov
fnsave
outsb
loopne
cmp
lret
cmpsb
addb
into
adc
hlt
mov
or
call
test
pop
dec
inc
pop
xor
sti
pop
clc
inc
push
fnsave
dec
int3
scas
xchg
xchg
xor
call
jo
hlt
xor
jns
sbb
adc
inc
cmp
xchg
mov
jmp
dec
mov
sti
xchg
mov
mov
xlat
into
mov
in
sbb
and
pop
push
jns
aad
xor
out
xlat
dec
jnp
cmp
popf
mov
fimuls
jne
jmp
in
xor
sbb
jle
cmc
add
mov
mov
stos
jnp
or
jb
adc
ss
fmuls
xchg
sbb
ds
inc
mov
out
data16
imul
pop
dec
stc
and
add
lret
outsb
push
lods
rorb
sub
mov
or
and
fsubrs
mov
fstl
mul
push
repnz
je
add
push
fmull
pop
xchg
fistpl
mov
inc
mov
or
sarb
adc
sar
rcrb
and
dec
adc
push
iret
push
dec
and
cmc
fstl
push
mov
ja
imulb
inc
mov
sub
cld
xchg
and
aas
jge
cmc
icebp
mov
ss
inc
dec
add
adc
xor
pop
je
push
xchg
push
pop
mulb
int3
xchg
cmp
dec
cmpsl
stos
js
test
lea
dec
dec
fs
add
jae
fsubl
push
mov
out
fwait
loopne
or
pop
dec
sub
jae
fsubrs
xlat
mov
xchg
loopne
push
add
mov
xor
xchg
shll
je
or
jecxz
inc
jnp
add
imulb
gs
push
pushf
mov
mov
daa
or
mov
shll
fwait
scas
sub
and
adc
outsb
xor
call
adc
aaa
ljmp
outsb
pop
xor
pop
sbbb
pop
into
mov
mov
mov
mov
xchg
ret
xor
push
mov
add
ss
int3
fdivrl
insb
lds
pop
arpl
jne
leave
sbb
push
pushf
or
lock
les
insb
jecxz
sarb
push
repz
pop
cmpsl
adc
addr16
pushf
clc
fistpll
mov
sbb
dec
cltd
adc
mov
jne
dec
adc
lret
outsl
movsl
jbe
stos
mov
ret
int3
fs
fcomps
lret
mov
mov
mov
pop
outsl
xlat
push
and
rclb
ret
icebp
repz
rol
xorb
movsl
rcll
or
loopne
or
add
xchg
add
lock
mov
sub
xor
push
lahf
xchg
add
jae,pt
shl
sbb
and
ja
mov
pop
stos
enter
lret
mov
scas
jp
add
and
int
xchg
lock
test
sub
add
movsb
jae
inc
adc
cld
xor
jl
pop
jne
lds
call
rolb
push
repz
shrb
mov
aas
daa
sub
js
roll
inc
imul
ret
cmp
sub
int3
add
push
mov
imul
xchg
add
int3
xor
xor
imul
push
mov
shll
hlt
xorb
jb
es
loop
mov
and
in
add
hlt
push
sahf
sbb
push
movsb
mov
xchg
ret
xchg
shl
subb
pop
nop
mov
jno
sti
sub
sub
into
sbb
test
mov
xchg
xlat
inc
xchg
jecxz
mov
sub
sar
pop
shrb
mov
jae
xchg
jp
lods
adc
repz
sub
push
es
pop
sbb
sub
out
stos
loopne
stos
mov
push
mov
adc
in
adc
addl
or
clc
sbb
ss
sub
mov
outsb
jae
adc
push
inc
out
mov
movsb
outsl
fdivrp
shrl
sbb
jb
fadd
test
je
pop
push
cld
dec
testb
hlt
adcb
xchg
xor
jns
inc
mov
push
daa
popf
rcrl
int
xchg
call
mov
mov
push
lock
and
test
gs
fisubrl
sbb
decb
adc
mov
lcall
dec
in
xchg
xchg
push
push
stc
aaa
cmp
call
sar
pop
outsl
mov
and
push
jbe
dec
fcomi
fimuls
inc
cmp
mov
or
push
cmp
sti
sbb
mov
cmp
xchg
ret
movsl
xchg
sbb
sar
insl
mov
mov
rcl
les
sub
dec
inc
into
jmp
inc
xchg
xchg
imul
cmp
jg
nop
cmpsl
in
sahf
xor
cld
mov
ljmp
dec
mov
push
popf
rorl
add
cwtl
mov
adc
movsb
loop
xchg
sbbl
in
xor
aam
insl
fnsave
xchg
xchg
xchg
dec
mov
lds
mov
sub
xchg
or
sub
mov
add
jne
ret
icebp
pop
xor
push
xor
lcall
pop
aam
push
movsl
aam
in
push
icebp
scas
pop
or
insl
mov
fsubl
out
sub
mov
xchg
in
faddp
or
push
insl
dec
push
orl
adc
and
mov
fimuls
daa
iret
add
shrb
mov
adcb
push
xchg
cltd
in
and
mov
sub
aad
sub
out
jg
mov
or
mov
mov
sbb
nop
xchg
int
ret
mov
addr16
arpl
adc
daa
jg
jmp
xchg
xor
pop
cli
sbb
dec
inc
stos
pop
jl
or
dec
cmp
jp
bound
cmp
xor
add
ljmp
pop
dec
shl
mov
shl
insl
stos
cmp
push
das
xor
mov
outsl
jo
flds
into
flds
xor
mov
fcomip
xchg
aad
lds
mov
nop
movsb
jbe
push
les
jge
arpl
inc
mov
or
add
jae
xchg
mov
jb
adc
or
outsb
jle
pop
les
fsubp
jmp
lea
xchg
fcomps
xor
or
cld
adc
cltd
adcb
cmpsl
jle
xchg
nop
push
shll
sub
sbb
mov
lods
mov
or
xchg
mov
lea
pushl
adcb
sub
cmp
and
xlat
inc
cmp
dec
adc
hlt
daa
or
sub
pop
mov
je
adc
lock
xor
mov
dec
lcall
or
pop
ljmp
in
adc
jmp
mov
lock
push
dec
enter
mov
and
push
cmc
sub
jb
pop
fistps
cmc
or
mov
jns
and
mov
add
mov
inc
lahf
cltd
arpl
cmp
or
aad
cmp
dec
pop
bound
lea
insl
popf
in
andb
daa
subb
push
push
ret
sbb
int
fdivrl
in
push
lock
out
popf
leave
dec
xor
test
shr
rcrl
pop
or
push
fnsetpm(287
cli
ss
mov
dec
adc
pop
cld
sub
jbe
push
or
int3
pop
addl
and
mov
push
sub
pusha
cld
push
inc
mov
in
xchg
xor
jl
xor
push
aad
setle
xorb
cmp
dec
push
mov
pushf
fmuls
and
cmpsl
or
leave
dec
movsl
pushf
or
dec
lock
pop
fstl
and
or
or
cld
cmp
ja
ret
mov
push
add
pop
push
sarb
loope
xor
mov
idivl
push
int3
lret
jl
fbstp
ds
mov
sbb
cmpsb
aaa
mov
hlt
adc
and
sub
and
jmp
into
lods
hlt
ja
dec
divb
push
in
out
push
jl
movsb
xchg
lret
fnstenv
aaa
jp
mov
cltd
fcompl
mov
imul
jb
and
aas
into
dec
mov
xchg
xchg
cmp
xlat
in
inc
dec
ret
sbb
hlt
xchg
lock
jp
inc
xchg
dec
popa
sbb
lcall
inc
aam
sti
insb
mull
xchg
arpl
mov
pop
cmp
lds
imul
std
hlt
jmp
jb
hlt
sarb
push
popa
sahf
movsl
fldenv
dec
xchg
or
pop
dec
add
mov
sub
aam
mov
xchg
add
fisubs
adcb
orl
and
add
dec
and
test
sbb
addr16
in
test
adcb
ja
push
inc
filds
lock
scas
mov
out
mov
xchg
dec
rcrl
jns
js
sbb
or
pop
mov
cmp
fbstp
pushf
mov
push
mov
cmpsl
fisttps
leave
push
pop
popf
push
xchg
push
rcrb
xchg
xchg
nop
scas
pop
orl
inc
out
cmp
stos
pop
push
jae
ss
es
imul
xor
pop
jbe
repnz
dec
nop
mov
xor
lock
push
test
xorl
lcall
add
and
add
sahf
xor
mov
pop
insl
fcompl
js
repnz
sub
rorb
add
aam
into
or
ja
sub
adc
jne
scas
ftst
mov
arpl
sbb
cmpsb
sub
lds
rol
lret
mov
inc
xor
inc
call
fbld
dec
inc
in
mov
mov
xor
dec
loop
mov
sub
sub
dec
lock
mov
add
adc
or
sub
out
daa
aas
or
lahf
adc
in
jg
orl
xchg
sub
jecxz
xchg
sub
and
pop
dec
popf
enter
data16
xchg
mov
mov
push
icebp
insb
je
mov
aam
and
xchg
out
mov
ret
push
insl
insb
lea
jg
icebp
shr
jg
and
and
cmp
pop
xor
insb
jnp
into
jle
cwtl
cltd
mov
das
and
insl
data16
add
movsl
insb
in
outsb
push
adc
lahf
pop
jbe
shll
lret
out
mov
cmp
out
lret
leave
push
mov
out
subb
jmp
or
movsl
cmp
cmp
adc
shrl
inc
mov
out
or
or
test
std
jle
and
push
inc
movsl
jmp
sbb
jo
mov
jle
fisttpl
lods
insl
sbb
sarb
dec
mov
test
pop
mov
adc
xchg
adc
lea
jne
or
sahf
test
mov
idivl
shlb
dec
xchg
jg
call
jmp
xchg
bound
push
pop
push
xchg
pushf
bound
dec
mov
mov
inc
push
jne
inc
push
push
adc
lods
mov
mov
imul
pop
bound
pop
mov
rorl
sub
outsb
adc
lods
ss
or
imul
mov
mov
idivl
fadds
adc
dec
cmp
push
mov
mov
jo
push
aaa
inc
jae
fldcw
iret
mov
sarb
call
jmp
dec
popa
sahf
push
add
mov
add
cmp
jb
or
xor
xor
sti
add
call
cmp
sbb
popf
cmp
mov
movsl
mov
pop
mov
arpl
outsb
mov
xor
mov
adc
hlt
dec
mov
jae
xchg
push
or
add
xchg
testb
push
imul
clc
icebp
lret
in
sbb
pushf
cli
add
xor
push
stc
fadds
sub
jecxz
or
cmc
fprem1
mov
sub
push
cmp
jbe
inc
scas
dec
mov
mov
std
addr16
sbb
arpl
mov
mov
mov
aad
mov
mov
adc
and
lds
inc
into
mov
dec
cmpsb
addr16
popf
mov
dec
aad
imul
rcrb
mov
jne
mov
mov
outsl
pop
clc
loopne
mov
stos
pop
sbb
xchg
sbb
mov
aam
ficoml
rorb
push
or
inc
je
addr16
mov
fs
inc
loop
xor
lahf
jne
cmp
pop
inc
roll
daa
daa
fcomps
jne
in
js
lea
ror
out
jecxz
xchg
ljmp
test
jp
in
jb
stos
outsl
repz
jge
jge
pop
stc
dec
js
in
ret
lcall
pop
add
fcoml
mov
jo
jle
stos
mov
xor
mov
cwtl
jge
xchg
mov
xchg
shlb
loope
mov
mov
shlb
rcrl
xchg
and
imulb
mov
pop
mov
cmpsl
dec
clc
imul
jne
cmp
mov
fdiv
and
subb
inc
in
dec
and
push
shrb
ret
adc
scas
pop
jae
in
mov
lock
mov
aam
imul
jnp
fisubrl
adc
insl
lods
lret
lcall
mov
mov
inc
popf
or
jl
add
mov
mov
mov
push
inc
pop
mov
xor
and
fistps
and
addr16
fildl
jb
jne
cmp
cltd
sub
clc
adc
in
cmp
fidivrs
scas
out
push
xchg
int
jnp
rorl
jo
popa
inc
mov
xor
sub
dec
xor
dec
daa
imul
cmp
je
fnstsw
mov
std
jmp
bound
adc
adc
subl
jge
mov
rcrb
pop
xchg
jle
test
pushf
sbb
repnz
rclb
subl
jg
adc
arpl
mov
mov
pop
pop
cltd
sbb
adcl
movsb
shl
in
cmpsb
mov
inc
dec
xchg
dec
sub
mov
push
shll
out
fnsave
add
ljmp
dec
in
pop
cmpsl
pushf
adc
dec
je
sbb
std
dec
ljmp
shlb
push
out
or
lods
sbb
jmp
dec
rorl
icebp
stos
cmp
mov
daa
fsubr
xchg
sbb
inc
xchg
daa
mov
out
pop
mov
aaa
cmp
test
mov
cld
shrl
popf
xlat
cli
in
inc
pop
rclb
adc
hlt
xchg
aas
add
sub
sti
and
gs
jbe
out
xor
repz
mov
inc
lret
das
stc
decb
add
notb
inc
arpl
dec
lret
pop
ljmp
pop
xchg
cltd
xchg
add
lea
sarl
scas
lret
pop
aaa
sbb
int3
push
cld
push
mov
mov
push
std
loop
pop
xchg
ds
push
movsl
in
xchg
pop
sbb
cmc
movsl
int
stos
jecxz
jne
mov
movsb
sub
add
dec
pop
push
sbb
xor
dec
in
insb
lcall
sbb
sub
mov
ja
cmp
mov
add
mov
and
mov
in
test
int
clc
rcr
ss
or
jl
add
cmp
or
test
xchg
test
jb
xchg
xchg
lods
cltd
mov
adc
jl
jb
iret
lea
or
dec
cmp
cmp
fs
mov
pop
pushf
fcmovne
mov
mov
cmp
cmp
jl
icebp
mov
jns
leave
fldenv
push
div
in
pop
mov
jp
push
daa
call
jnp
adc
cmp
push
pop
in
cld
inc
mov
lret
sub
add
ret
lods
xor
add
sbb
in
insb
shlb
jno
mov
pop
jecxz
xor
mov
loop
cmp
aaa
and
test
jbe
fmulp
addb
sarl
push
addps
in
stos
divb
loope
cmpsl
xor
and
cli
xchg
mov
mov
mov
rclb
jmp
fnstcw
sub
scas
mov
push
sbb
jmp
xchg
inc
pop
test
push
ret
lods
ss
cs
dec
lods
lcall
mov
pop
jle
cld
sub
adc
adc
cwtl
sbb
aad
out
js
xor
and
ret
mov
and
iret
test
test
or
add
pop
movsb
pop
ret
fmuls
mov
or
dec
into
push
push
icebp
sbb
jnp
push
push
rorl
cmp
test
stc
or
xor
dec
scas
jp
push
call
jmp
add
push
and
push
movsl
cmpsl
imul
testl
cmp
lock
mov
sub
cmpsb
and
inc
adcl
sbb
je
or
xchg
sub
mov
xor
cmp
adc
xor
and
or
stos
stos
jmp
dec
add
sbb
cs
aam
stos
xor
mov
sub
dec
int3
sbb
enter
jp
adc
sub
out
mov
sub
test
lds
jnp
xor
pop
and
mov
xchg
push
sbb
mov
pop
xchg
test
xchg
ret
sahf
xchg
lea
mov
cs
les
jnp
jge
lock
ds
dec
mov
repz
jl
xor
push
mov
xor
lahf
fs
lock
dec
dec
fxch
pop
push
xchg
push
in
mov
subb
sub
mov
cltd
hlt
adc
push
pop
gs
ret
loop
inc
mov
pop
fcomps
sbb
sub
sub
sub
jne
jno
xchg
imul
push
in
int
push
clc
dec
subl
enter
add
xchg
in
inc
loop
les
jbe
cli
add
pop
add
sbb
aam
arpl
lds
in
into
scas
insb
lret
add
les
rcl
cs
push
loopne
mul
outsl
inc
aad
cmp
andb
fcomip
xor
mov
sti
and
pop
and
jg
in
add
incl
sbb
or
sarb
pop
mov
lock
push
or
jl
aad
addr16
adc
in
scas
xchg
jo
js
sub
or
mov
ret
lcall
xor
jg
jno
mov
xchg
stos
dec
or
jg
dec
mov
mov
movd
xchg
cld
jns
sub
in
jno
mov
jmp
mov
sbb
data16
jne
addr16
or
stc
push
cmp
movsl
mov
aaa
fdivrs
call
in
pushf
mov
jb
daa
inc
mov
cmp
inc
js
dec
dec
fsubl
and
inc
mov
jg
rolb
es
pop
mov
in
out
ja
aam
jp
lea
jno
add
jae
sarb
outsb
addr16
mov
xchg
fiadds
mov
mov
dec
rcll
dec
sbb
push
mov
pop
repnz
adc
or
subl
mov
inc
aaa
pop
mov
push
and
ss
lret
into
add
fdivrs
fsts
dec
or
jl
pop
mov
in
enter
push
adc
popa
inc
push
and
sti
dec
mov
dec
movsb
dec
int3
repnz
jg
rorl
ret
dec
int3
push
xor
pop
int3
insl
fcmovb
sahf
les
and
test
sbb
rorl
stos
inc
test
sbb
xchg
pop
xchg
aam
fucomip
cmpsb
mov
or
sti
mov
mov
les
out
int3
mov
mov
add
mov
cmc
push
outsb
mov
ret
aaa
and
jmp
xchg
outsl
xchg
xchg
out
pop
or
mov
les
hlt
jge
out
or
insl
mov
cltd
test
pop
and
andb
jle
mov
sub
adc
mov
dec
jp
mov
or
mov
enter
push
pop
dec
cs
aam
sbb
popa
movsl
int
mov
rcrl
xchg
push
sbb
jg
repnz
jns
test
das
fidivl
push
add
test
cld
mov
mov
jo
sub
cwtl
mov
ljmp
adc
sub
daa
repnz
mov
xchg
clc
je
iret
mov
mov
clc
xchg
andl
in
dec
xor
jae
lret
nop
call
sti
jl
jae
lahf
out
insl
ret
sahf
enter
xor
mov
lock
and
fiadds
insb
lcall
enter
lret
inc
insb
cmc
mov
test
sub
mov
rcl
or
dec
and
mov
inc
sub
adc
or
bound
addl
pop
push
or
push
testb
fiadds
jl
fnstenvs
push
gs
popf
sbb
xor
add
cmp
mov
or
sbb
aas
ljmp
jp
fs
push
insb
sub
and
mov
add
mov
scas
pop
notb
insb
scas
test
mov
fwait
xor
fcompl
lea
pusha
leave
dec
xchg
aaa
iret
popa
cmc
shl
adc
add
mov
es
sbb
out
fs
mov
aad
cmp
mov
jnp
ds
push
lock
loope
mov
jp
xchg
pusha
or
mov
test
jno
inc
testb
dec
add
adc
mov
mov
hlt
add
adc
xor
mov
and
xchg
sub
cmp
ss
sbb
or
mov
push
popa
aam
jmp
push
jg
loope
adc
sub
daa
xor
mov
sti
in
cmpsb
and
inc
mov
rolb
popa
mov
inc
test
popf
aam
cwtl
fnsave
inc
scas
push
jl
rol
dec
inc
cmp
cld
add
add
mov
ss
rcrb
fimuls
sbb
mov
xlat
sub
xor
movsl
push
pop
shrl
fs
jno
mov
cmc
adc
test
test
jmp
and
cs
adc
inc
xchg
loop
mov
sbb
dec
test
aam
lods
nop
testl
fstl
imul
dec
push
sahf
icebp
icebp
cmpsb
in
js
lods
movsb
mov
ljmp
jmp
lds
ss
xor
add
int3
imul
sub
aad
push
dec
cmc
call
xchg
rcrb
sub
sbb
and
lret
scas
rclb
push
enter
sub
dec
jp
mov
sbb
fistps
subl
mov
adc
mov
sti
add
push
xchg
std
pop
cmp
sbb
lret
jmp
push
orl
cltd
cmpl
mov
sbb
loop
lcall
xchg
ljmp
sub
hlt
shlb
in
jle
leave
fcmove
xor
aad
ljmp
mov
shll
and
push
cmp
mov
sbb
pop
aaa
jae
xor
jno
jecxz
fdivr
shll
sahf
movsl
mov
cmpsb
push
xchg
ds
push
add
orb
or
popf
pop
es
jecxz
div
push
test
mov
xor
sar
push
pop
push
rorl
shufps
pop
pop
repnz
jno
inc
mov
jl
je
inc
popf
mov
out
jae
mov
inc
cmp
jbe
adc
sti
pop
js
pusha
pushw
jle
jae
popf
pop
rcrl
int3
loopne
inc
sub
aaa
mov
aaa
dec
std
stc
outsb
fstl
xchg
or
mov
cwtl
pop
pop
inc
movsl
or
mov
sahf
test
fstl
add
test
mov
sti
ror
shll
dec
repz
or
arpl
stos
inc
inc
pusha
movsl
mov
cmp
gs
adc
insl
fdivrl
cmp
add
testl
stos
dec
in
hlt
inc
loop
test
imul
adc
push
ret
pop
ret
shrb
loope
out
lods
fadd
xchg
ljmp
mov
sti
sbb
push
xchg
decb
cmp
inc
jne
cmove
imul
mov
ss
inc
rclb
push
push
in
and
add
scas
mov
jmp
dec
repz
dec
mov
outsl
out
jge
push
imul
cs
dec
inc
stos
sub
cwtl
insb
xchg
inc
sub
xor
mov
xchg
mov
cmp
fstp
lds
fcoml
loopne
pop
std
nop
or
and
xchg
test
add
iret
fsubr
ljmp
in
popa
xlat
jnp
add
sub
xchg
popf
mov
add
cmp
push
dec
mov
stos
push
mov
adc
xchg
ds
popf
sbb
insl
sub
cmp
lret
mov
ss
xlat
test
lods
dec
out
in
or
dec
insb
mov
das
scas
fcoml
pop
inc
adc
ror
xchg
add
xchg
cmp
push
ret
ret
stos
mov
xchg
push
rolb
mov
jo
ret
icebp
sti
loope
sbb
sbb
xor
jnp
mov
or
and
pop
xor
inc
mov
es
mov
mov
sub
add
insl
sub
inc
test
stc
fwait
mov
pop
leave
inc
fldlg2
loope
in
push
fbld
and
aaa
sbb
popf
mov
pop
mov
cmp
pop
mov
dec
arpl
xor
sbb
mov
fdivrp
arpl
jl
sub
push
jno
mov
xlat
xchg
push
lcall
cli
sbbb
dec
xchg
add
sub
shrl
cltd
test
push
int
mov
les
rclb
addb
and
mov
mov
mov
mov
inc
sbb
jecxz
mov
mov
mov
cmp
scas
push
or
daa
adc
mov
in
ret
inc
push
inc
jp
mov
or
repnz
scas
dec
push
fisubrl
jne
xchg
daa
mov
fldt
fsubrl
imulb
int3
scas
jne
mov
aaa
xor
insb
push
pop
cmp
and
push
lock
and
pop
stos
movsl
sahf
das
loope
or
add
jne
repz
dec
lahf
push
movsl
jo
je
popf
scas
jge
or
shll
outsl
sub
xchg
cs
nop
pushf
rcr
or
shlb
xchg
daa
leave
movsb
imul
inc
cmpsb
flds
stos
add
cmp
add
movsb
or
jnp
cld
push
insb
hlt
rcll
into
nop
mov
mov
add
or
push
pop
ret
inc
incb
out
push
mov
gs
lea
leave
jl
mov
and
aad
jle
and
movsl
mov
out
xchg
lret
ror
jne
or
jmp
and
jns
push
mov
test
call
jbe
rol
imull
xor
cwtl
test
ja
dec
rcr
add
mov
cmp
adc
stos
mov
ror
subb
and
dec
addl
mov
cmp
sub
sbb
cmp
and
push
and
xor
ret
out
cltd
mov
test
add
and
xchg
push
repz
addr16
fdivrp
les
ss
push
into
or
jns
jl
pusha
in
and
sub
xchg
les
pushf
popf
sub
movsb
mov
or
dec
pop
inc
mov
lcall
iret
add
fmuls
in
jp
inc
sbb
inc
arpl
mov
or
pop
mov
xor
fcoms
jne
in
fst
imul
mov
mov
frstor
adcb
xchg
addr16
cli
xor
xorb
loope
mov
in
add
adc
mov
push
sbb
mov
shlb
xor
call
daa
mov
xor
push
xchg
add
scas
mov
cmpl
stc
outsb
pushf
ljmp
call
mov
cmp
stos
mov
cs
xchg
into
xor
mov
sub
mov
dec
jo
sahf
data16
mov
mov
test
xchg
mov
loope
dec
cs
jmp
mov
lea
inc
jle
ret
pop
xchg
mov
pop
adc
adc
cmp
lcall
or
xor
mov
mov
add
pusha
test
jae
push
mov
xchg
scas
push
push
out
pop
xchg
fdivr
aaa
hlt
mov
inc
dec
dec
test
inc
adc
lock
or
lods
mov
push
jmp
out
jecxz
pop
xor
jl
dec
mov
pop
ficoms
jl
ds
pop
and
mov
sub
movsb
or
jns
stc
imul
pushf
aad
mov
mov
shrb
pop
inc
cmp
fistpl
or
and
lods
stos
popa
adc
push
aas
adcb
fisttps
add
cmp
clc
sub
add
or
ret
cmpsb
testb
lods
test
add
xlat
cmp
int3
in
mov
pop
stos
pop
mov
jmp
fcmovb
test
push
int3
fldt
notb
or
in
lahf
jbe
std
or
js
stos
adc
push
jecxz
popa
into
aas
mov
ja
sbb
push
cmp
shll
stos
sub
jl
jg
decl
cmp
jg
push
lahf
xchg
and
imul
jno
leave
mov
jl
jae
lahf
sub
ds
push
adc
cmp
andb
stos
in
xor
stos
cmp
xchg
push
or
in
pop
pushf
out
iret
dec
mov
nop
xchg
or
push
sub
fcoml
test
adcb
stos
int
out
shrl
ret
xchg
rclb
js
push
adc
les
inc
neg
push
pop
call
add
cld
xorl
fs
imul
or
gs
loop
mov
or
jg
js
inc
push
shrb
out
or
mov
repnz
loope
mov
loope
cmpsb
aam
lcall
xchg
pop
test
shlb
fsubs
push
push
add
lods
inc
fdiv
lods
popa
jne
in
add
push
in
sbb
sahf
fwait
popf
xor
xor
mov
loop
lea
jns
push
cwtl
aaa
jmp
arpl
or
xlat
mov
or
insl
shll
sub
mov
arpl
adc
push
sub
push
mov
or
lods
push
add
sub
stos
popf
lcall
push
xchg
out
sbb
movsb
in
pop
dec
and
imul
popf
add
lahf
into
ds
fcomps
scas
out
mov
loop
std
cmc
pop
xchg
pop
xchg
xlat
sbb
test
mov
mov
orl
pop
mov
cmp
mov
leave
popl
ljmp
mov
sub
mov
frstor
add
add
cmp
scas
out
dec
in
stos
imull
icebp
push
cmp
sub
jmp
pop
push
lret
popa
fwait
xchg
clc
mov
into
sbb
movsl
mov
mov
mov
lods
sbb
popf
and
or
ficoml
mov
mov
std
enter
out
sbb
dec
inc
cmp
jl
int3
mov
rolb
mov
adc
scas
repnz
out
out
mov
lods
test
in
lea
das
pop
frndint
mov
jo
pop
xchg
adc
icebp
rorb
inc
loop
push
loope
std
insl
cmp
mov
xchg
rcrl
mov
icebp
test
sub
push
es
lret
sub
mov
mov
inc
mov
inc
pusha
fsubs
sub
add
inc
test
dec
fcomip
sub
lds
pop
xchg
data16
jmp
call
jo
xchg
addb
sub
and
xchg
xchg
lds
pop
icebp
inc
testb
xchg
faddl
lods
dec
cmc
aad
mov
sbb
add
mov
in
fwait
ja
movsb
mov
jne
sbb
aaa
cmp
pushf
fucomp
or
loopne
xor
cmp
cmp
xor
add
insb
add
ljmp
cmc
jns
mov
push
in
std
lcall
push
mov
nop
scas
bound
mov
cltd
sbb
in
add
les
fnsave
add
cmpsl
sub
mov
fbld
jp
and
insl
or
sub
push
cs
dec
imul
jecxz
jge
out
fsubrl
shl
out
nop
xor
pop
xor
mov
cmpsb
and
repz
test
inc
add
and
jmp
fdivrp
sbb
inc
cmc
adc
cld
repnz
sub
jecxz
fisubrl
jns
js
mov
mov
mov
std
shl
mov
xchg
push
pop
push
mov
inc
rcrb
or
testl
ljmp
nop
inc
test
pop
sbb
push
cltd
fcmovnb
push
and
cmp
out
jmp
add
push
mov
sub
mov
stos
or
aaa
push
scas
pusha
pushf
mov
sub
mov
insl
arpl
fstpt
jnp
scas
xorb
shll
mov
jecxz
xchg
push
mov
sub
outsb
mov
pop
mov
arpl
xor
mov
scas
cmp
dec
popf
add
insb
inc
mov
mov
push
lcall
ss
xor
xor
ret
ja
sub
lret
mov
and
sahf
lock
fucomp
clc
out
les
lods
mov
add
sub
pop
cs
fs
and
jp
incl
mov
adcb
add
mov
mov
cwtl
pop
xchg
xchg
jb
adc
push
xor
sbb
adc
lcall
jmp
sub
popf
cltd
mov
add
subl
mov
lcall
push
push
pop
idivb
dec
fcomps
loop
or
add
sub
pop
cmpl
add
pushf
ljmp
shll
xchg
aas
xorl
lock
shr
sub
mov
or
in
sub
mov
push
jmp
cmp
or
ss
scas
mov
stos
add
lods
gs
xchg
fs
outsl
bound
jnp
sahf
in
cmp
movl
pushf
add
sub
push
jae
inc
sti
sarl
std
popa
in
and
adc
repz
jnp
mov
sub
ljmp
rorl
push
mov
sbb
push
in
xor
imul
movsb
adc
pusha
sbb
pop
insl
sub
or
jge
jl
lods
inc
dec
fwait
popf
push
sbb
inc
pop
ret
mov
std
mov
jle
jo
outsb
add
mov
aad
xor
popa
lods
lea
out
cltd
test
mov
in
cmp
aas
mov
and
ja,pn
test
lret
jmp
neg
inc
decb
mov
mov
adcl
adc
fstpt
pop
loopne
cwtl
out
hlt
test
ret
jo
adc
mov
incl
cmp
popa
sbb
fistl
xchg
in
cs
lods
hlt
lock
adc
test
daa
adc
data16
push
and
or
fisubl
in
lock
inc
es
push
cltd
scas
pop
adc
mov
cmp
xor
xchg
mov
pop
jecxz
jle
jns
fists
add
hlt
stc
mov
mov
popa
cmp
push
mov
push
cmc
sub
pop
dec
cltd
mov
jbe
ljmp
lcall
pop
enter
cltd
sub
stos
add
hlt
dec
pop
xor
out
mov
lcall
add
js
sar
ret
xchg
pusha
loopne
out
repz
bnd
mov
xor
or
mov
add
push
dec
cmp
push
imul
xor
xchg
orb
pushf
fcmove
add
sbb
and
cltd
mov
and
mov
addl
in
mov
in
test
daa
xchg
sbb
pop
mov
dec
push
sub
scas
sbb
push
xchg
and
add
scas
xchg
xchg
push
mov
xchg
cmc
jb
dec
sbb
xchg
clc
jp
or
dec
repz
imul
enter
sbb
jecxz
fisttpl
cmp
stc
inc
dec
sti
mov
dec
imul
push
xchg
sahf
movsb
outsl
test
pop
fisttpl
sti
shll
mov
add
out
into
fisubl
xor
js
dec
pop
mov
push
xor
enter
arpl
mov
jo
xor
pop
imul
adc
sub
fs
sbb
dec
roll
lret
loope
adc
imul
loopne
push
jno
enter
pop
sahf
call
pop
and
adc
sbb
and
leave
addl
pop
add
into
mov
adc
sub
inc
ror
in
push
or
inc
sbb
cmp
arpl
repz
mulb
pop
ficomps
xchg
mov
xor
add
stos
mov
xchg
jne
lret
cmp
in
or
pop
adc
adc
gs
mov
mov
add
sbb
lea
mov
or
int3
push
or
adc
adc
lcall
aad
loopne
rcll
mov
cmp
cmp
jmp
jmp
sbb
cmp
sub
das
push
pop
sti
fldt
pop
movsl
lcall
in
xor
mov
xchg
sub
push
pop
pop
mov
loop
imul
mov
add
movsb
fwait
mov
add
mov
pop
hlt
mov
rol
sbb
dec
shrl
cmp
mov
add
stos
out
inc
push
popf
jecxz
cmp
in
repnz
pop
out
in
and
out
dec
and
xor
and
mov
lahf
push
arpl
test
mov
jecxz
fcomip
cmp
add
mov
sti
mov
test
in
int
push
out
aaa
test
shl
mov
paddb
fsubr
dec
cmpsl
mulb
cmp
fldcw
cltd
or
jmp
mov
imul
lds
lcall
xchg
scas
cmp
imul
stos
test
ss
mov
ret
xchg
lds
inc
test
call
test
out
adc
xchg
fs
pop
sub
push
dec
mov
sahf
and
fnstsw
fcoms
stos
pop
sbb
push
test
pop
xlat
loope
add
cmp
icebp
add
push
lds
das
jne
xor
cmp
add
push
or
loop
in
fwait
mov
inc
mov
fcomps
sub
mov
cli
ja
in
cltd
jb
pop
mull
sub
cmp
xchg
sub
insb
xor
nop
inc
jge
hlt
popa
outsl
movsl
rcrb
mov
sbb
cltd
inc
dec
inc
scas
jae
adc
mov
xor
inc
and
ss
adc
adc
lahf
xchg
mov
mov
push
jp
das
sbb
daa
sbb
test
sbb
leave
add
fbstp
lods
mov
inc
lea
and
add
sub
arpl
shr
jns
xor
mov
test
sbb
out
movsb
sarl
jle
test
cmp
jnp
sbb
aas
inc
loopne
test
ss
loop
mov
cmpsl
test
fdivl
jo
mov
andl
test
stos
mov
push
bound
sub
sub
fidivrl
xchg
sbb
fs
inc
addb
insl
ja
mov
inc
mov
push
cmc
jecxz
inc
insl
scas
incl
clc
lret
sub
or
xchg
pusha
in
aam
ja
popf
jl
sbbb
mov
jg
sbb
push
add
out
cmp
pop
aam
pop
xor
and
sub
out
aad
cmp
add
insl
call
push
push
test
mov
mov
sbb
xchg
mov
jmp
cmp
push
jno
and
lret
push
mov
test
setno
ja
dec
add
movsl
pop
or
mov
push
add
xchg
mov
lock
cmp
dec
lahf
aad
int3
lods
add
or
sahf
push
into
movsl
mov
xchg
dec
xchg
sub
xor
enter
mov
push
sti
ljmp
daa
and
sub
mov
test
ret
ret
jg
fstpt
std
jl
push
dec
imul
xchg
test
imul
int3
push
xchg
fs
push
inc
dec
sbb
push
xorl
shll
xchg
rcl
add
or
data16
inc
arpl
xor
mov
notb
cmpb
xlat
adc
hlt
das
cli
sbb
fstl
iret
loopne
mov
xchg
jne
out
push
mov
xchg
dec
movntps
and
pusha
xchg
adc
fs
dec
inc
xchg
out
sub
scas
mov
ljmp
leave
imulb
jb
iret
std
mov
xchg
and
rol
xor
mov
inc
cmp
pop
enter
iret
je
in
pushf
mov
test
dec
imul
push
shlb
mov
pusha
and
imul
mov
push
adc
inc
and
or
insb
pop
mov
aam
bound
dec
call
mov
sbb
mov
add
mov
rcrb
cmp
test
loopne
sub
ja
xchg
flds
int3
sbb
push
add
insl
xor
mov
pop
adcl
sub
push
rclb
nop
lea
negb
rcrl
xor
xchg
xchg
jl
or
outsl
popa
ret
mov
add
dec
xchg
mov
addr16
jne
aas
mov
divb
mov
push
lods
call
fimull
add
jbe
lods
les
cmp
int3
xor
fildll
ljmp
jne
les
fwait
ss
add
or
push
sbbl
int3
call
pmaddwd
mov
mov
popf
push
xchg
xchg
scas
xor
mov
push
mov
xor
push
xchg
or
jmp
scas
cmp
lock
push
mov
and
outsb
sub
sbb
testb
popa
push
mov
and
in
mov
xor
xlat
mov
fnstcw
aam
js
les
add
mov
and
in
or
add
incl
sahf
pop
add
lock
inc
xor
repnz
out
pop
enter
lds
les
lret
rcrb
or
or
inc
repnz
mov
sub
pusha
daa
ljmp
and
and
or
sub
lret
ficomps
add
mov
mov
addr16
bnd
dec
adcl
xor
push
or
inc
scas
and
test
dec
outsb
aam
mov
movb
lods
cmp
into
mov
in
jmp
mov
cmp
cmpsb
mov
or
jp
sub
dec
jl
and
jl
ret
pop
mov
mov
fwait
cmp
lds
mov
je
mov
mov
mov
fsubrl
out
mov
pop
clc
push
or
xchg
fmul
rcrl
mov
ss
jo
test
aad
in
mov
push
mov
mov
or
push
lea
cmp
add
fsubrs
fadds
inc
decl
pop
mov
dec
test
aaa
xchg
mov
add
push
into
pop
stos
cltd
dec
cltd
loopne
add
cmp
xor
fsubrl
cmp
push
and
loopne
dec
aaa
subl
xchg
sbb
xchg
dec
cmp
inc
pop
repnz
enter
aad
xchg
sbb
xchg
sbb
pop
mov
cmp
loop
das
mov
mov
mov
cmpsl
add
mov
das
fdivrs
pop
xchg
andl
add
pushf
adc
neg
sarl
lds
mov
rcr
jo
mov
sbb
leave
scas
shll
inc
lods
into
xchg
iret
push
mov
mov
inc
clc
xlat
pop
push
jbe
sahf
xor
adc
fs
test
jle
das
mov
or
mov
pop
mov
sarl
ss
shll
jbe
subb
int
pop
mov
xlat
cmc
sbb
mov
xchg
push
arpl
mov
aas
xchg
mov
mov
je
jnp
pop
stos
scas
mov
dec
cmp
sub
mov
sub
mov
sbb
xor
xchg
lahf
jle
cltd
pusha
xor
fcom
lea
inc
fildl
xchg
stos
sti
inc
cmc
xor
sahf
mov
repz
add
jns
dec
cmpl
jecxz
mov
jl
mov
sbb
jecxz
mov
and
mov
bound
shl
into
mov
mov
arpl
dec
jbe
mov
dec
xchg
pop
sub
movl
dec
jno
jne
jl
repnz
add
aas
test
mov
fcoms
cmpsl
adc
jp
call
popf
mov
call
push
sahf
pop
mov
sarb
xor
jbe
jl
dec
outsl
pop
mov
jb
cld
cmp
std
jecxz
lods
pop
movsb
aas
xor
inc
loop
cmp
addl
fidivrs
loop
bound
lock
or
inc
sub
xchg
xlat
sub
jnp
inc
xor
test
sub
fwait
insl
sbb
adc
xchg
inc
sub
dec
add
in
cmp
cmp
lcall
push
push
mov
shlb
or
std
pusha
aaa
xor
dec
loopne
or
stos
mov
mov
mov
sub
sti
mov
push
sub
pop
in
jns
xchg
cmp
packssdw
or
inc
cmpb
mov
sbb
int
xlat
dec
orl
fldt
xor
sub
int
and
inc
pushf
push
inc
pop
lods
mov
imul
sbb
pop
out
sahf
cmp
inc
scas
std
jle
dec
mov
aam
mov
mov
xchg
clc
and
jbe
lea
jmp
mov
sub
and
call
aaa
divb
or
dec
pop
cmp
test
mov
xchg
dec
push
int
mov
push
jge
ret
xor
pop
add
pop
daa
repz
movsb
and
sub
push
lahf
ret
xchg
push
xor
popa
inc
sbb
inc
fwait
test
lods
stc
fldt
xchg
stc
jl
adc
cli
std
fisttpl
jno
mov
lods
xchg
jle
ja
out
adc
sbb
xchg
addr16
fs
jl
lods
pop
mov
push
jge
daa
repz
fisubl
rorb
pusha
mov
lret
and
mov
jg
shlb
enter
pop
mov
out
dec
mov
push
pop
scas
push
fisttpl
mov
les
mov
add
mov
daa
or
cmpsb
pop
popl
scas
test
or
adc
out
loopne
push
ss
or
cltd
outsl
xchg
dec
adc
jae
stos
push
mov
ret
adc
out
mov
cmpb
mov
add
inc
in
aas
xchg
repz
out
shrl
lods
in
orb
adc
test
icebp
dec
push
cli
cmp
add
sub
mov
fiaddl
push
xor
in
lahf
fsubrs
xor
push
pop
aas
pusha
arpl
mov
stos
movsb
pop
jno
cmp
and
jno
rorl
scas
jle
and
orl
outsb
movsl
and
repz
xcrypt-ofb
cmpsl
sub
mov
test
imul
adc
inc
lcall
cmp
test
or
pop
jmp
pop
leave
pop
cmp
xchg
jecxz
dec
add
insl
add
pop
cmp
sbb
xchg
clc
ret
sbb
pop
jbe
cli
andb
mov
push
jecxz
stos
push
das
push
je
add
xor
out
push
adc
sub
xchg
leave
xchg
or
loop
xor
jp
mov
mov
mov
ds
cmp
adc
loope
add
mov
mov
fsubs
sub
fistpl
mov
addr16
out
jnp
sub
mulb
xchg
mov
rorb
mov
jne
pop
mov
es
test
jmp
fildl
lret
popa
enter
fdivrl
shrl
mov
sbb
sub
cmc
jle
flds
cmpsb
xor
mov
xchg
adcl
ss
adc
adc
lods
cld
push
inc
subb
movsb
hlt
decl
scas
inc
test
sub
popf
push
das
arpl
mov
stos
loop
jecxz
enter
cld
into
test
adc
cltd
xor
pop
mov
cmp
cld
int3
ljmp
test
pop
les
xor
mov
and
and
adc
add
jecxz
dec
push
sbb
xlat
mov
scas
insb
popf
mov
inc
int3
and
out
fidivrl
jne
and
notb
popa
sub
scas
and
int3
repnz
xor
add
pop
stos
sahf
test
or
insl
or
mov
outsb
sbb
sub
fidivrs
stc
insb
into
xchg
sbb
call
ss
dec
and
inc
adc
xchg
bound
mov
or
loopne
movsb
cmc
xor
sub
push
loope
adc
stos
insb
pop
es
adc
mov
shll
mov
loope
adc
fsubl
lock
jl
mov
and
adc
popf
clc
add
test
testl
lret
mov
and
sub
inc
outsb
sbb
stc
ret
pop
je
movsl
sub
ret
rorb
mov
adc
bnd
leave
jle
or
xor
ficoms
add
or
sub
jle
clc
xchg
dec
adc
lea
sub
loope
divl
pop
rcl
sub
dec
imul
pop
mov
jl
mov
cmp
push
stos
sub
ds
loope
mov
cmpsl
inc
stos
pop
jg
icebp
inc
enter
inc
mov
inc
pop
clc
or
mov
iret
lahf
test
and
data16
mov
nop
push
sub
mov
incl
les
rcrl
dec
mov
mov
ds
gs
cwtl
cmpsl
xorl
inc
push
push
in
psrlw
inc
notb
pop
into
push
mov
pop
adc
cmp
sbb
mov
test
pop
dec
cs
js
and
ja
or
insl
mov
cs
jb
rcrl
sub
jno
sbb
push
xchg
aaa
mov
cmp
jnp
add
inc
sti
dec
div
jne
divl
popa
in
inc
test
push
jl
sbb
test
lock
fistps
mov
data16
add
mov
dec
inc
leave
push
repz
ret
cmp
std
loope
pop
rorb
call
inc
cmpl
int3
sbb
int
arpl
adc
fldl
pop
sbb
int3
aam
fs
push
push
data16
int
add
je
xchg
mov
cmp
paddsb
xchg
xchg
movups
xchg
or
aam
stos
xchg
dec
mov
xor
ret
lcall
sub
or
pop
push
jge
fsubrl
mov
push
pop
ja
aas
adc
mov
jnp
dec
in
test
stc
stos
xchg
ljmp
sar
movsb
out
data16
or
jp
stc
fisttpl
jnp
push
mov
inc
add
pop
xchg
popa
sub
movsb
cmpsl
cmp
push
push
mov
cmp
or
fwait
xchg
mov
push
inc
cmpsb
subl
iret
pushf
lret
jmp
bswap
movsb
inc
pop
nop
jbe
inc
push
jbe
sub
jns
adc
sbb
dec
data16
add
inc
inc
add
xchg
add
mov
loop
lahf
data16
push
out
cmp
xchg
mov
fistps
imul
push
push
aaa
push
cmp
mov
ljmp
aaa
mov
mov
push
sub
dec
mov
test
movsl
stos
scas
sahf
test
or
push
pop
imul
mov
or
es
pop
jbe
pop
push
cmp
sti
andl
icebp
xchg
sti
add
std
and
jmp
je
mov
bound
mov
sub
inc
movsl
cmpsb
push
cltd
lea
movb
xchg
aam
roll
mov
daa
cmp
cmc
scas
mov
das
fisubrs
add
pop
adc
push
and
jecxz
inc
mov
in
fs
pusha
insl
mov
mov
enter
push
enter
mov
mov
jnp
mov
and
lahf
sub
fmul
ljmp
call
adc
add
std
out
xchg
stos
mov
movsl
cmp
mov
mov
and
out
jb
push
adcl
ljmp
das
pop
jmp
stos
lock
sub
mov
mov
int3
inc
mov
pop
adc
xor
imul
mov
mov
mov
testb
fstl
sti
cli
push
imul
cmc
mov
pop
dec
ret
or
or
cmp
inc
mov
mov
popf
push
xor
mov
pop
mov
mov
or
push
std
adc
stos
out
lea
ljmp
mov
fwait
xadd
sahf
add
fidivs
and
adc
inc
jne
jle
inc
mov
imul
push
addl
rcr
lds
add
mov
xlat
sbb
loopne
movsl
in
sub
test
cmpsl
fs
mov
int
mov
repz
dec
fs
mov
scas
or
xchg
gs
shll
std
imul
fs
mov
clc
popl
xor
dec
dec
addr16
mov
rorl
es
mov
icebp
shl
lcall
outsb
lods
js
add
inc
or
sarb
jbe
xchg
scas
jle
cwtl
adc
das
cmp
aad
cmp
jnp
pop
inc
mov
in
cmp
fldenv
sub
aas
div
ljmp
push
loope
xchg
jno
mov
mov
jle
popf
movsb
lods
repz
notb
fimull
aas
add
xor
lods
cmpsb
mov
push
adc
mov
dec
lahf
leave
inc
jmp
lods
nop
and
sub
insb
sarb
in
xor
es
pop
icebp
push
pop
or
loop
xorl
jo
mov
jmp
xorl
mov
call
int
adc
stc
lods
push
popa
stos
xchg
enter
pop
mov
mov
sbb
repz
daa
xchg
in
mov
repz
mov
jo
test
dec
xchg
nop
jbe
xchg
loope
into
xor
out
lods
jnp
test
jo
push
and
adc
mov
mov
adc
cmpsb
sbb
mov
imul
xor
imul
out
pop
aaa
mov
mov
shl
loopne
inc
inc
jb
mov
hlt
add
aaa
xor
aaa
test
imul
jno
int3
nop
sarl
orl
in
enter
leave
decl
clc
addr16
pop
jns
and
jns
cmp
push
out
xlat
push
jne
shrl
scas
dec
or
pop
mov
xor
repnz
sti
jl
shlb
test
andl
cwtl
sub
aas
and
outsl
mov
cld
pusha
lret
pushl
gs
std
xchg
add
mov
sahf
gs
insl
lcall
cmp
sub
cwtl
adc
mov
mov
mov
pop
add
xor
sbb
add
pop
dec
and
test
test
cmpsb
jl
add
daa
xchg
mov
mov
lea
aad
popf
xor
sbb
sbb
nop
jmp
outsl
stc
jp
xlat
mov
jl
sub
mov
push
cmp
mov
fcompl
lods
xchg
sbb
lods
enter
mov
lods
push
cmc
push
mov
je
jle
ljmp
sub
daa
test
cmp
sub
lods
lods
aad
sub
sub
nop
push
sub
loope
xchg
add
fmul
in
int
aas
bnd
or
movsl
adc
lret
stos
jmp
jl
loopne
adc
mov
paddw
pop
in
sti
stos
mov
jle
push
cmpsl
pop
stc
sbb
or
xor
cli
cwtl
add
subl
in
sub
lea
xchg
dec
lock
sub
mov
or
adc
fcomi
cmp
stos
cltd
icebp
cmp
mov
jae
lods
ja
push
or
xor
in
sbb
mov
outsl
mov
sti
sub
sub
rorb
add
ret
adc
dec
int
mov
test
fwait
pushf
xchg
mov
in
ret
mov
cmp
pop
inc
cmp
frstor
pushf
mov
sbb
outsb
test
mov
loopne
pop
bound
sub
adc
xor
pop
xchg
cmpsb
sbb
cmpsb
cmp
xchg
es
pop
pushl
imul
repz
negl
stos
mov
cmp
and
adc
mov
inc
mov
clc
cld
fsub
push
or
lods
xlat
lds
cltd
and
push
pop
stc
pop
das
jecxz
cli
lea
push
jge
arpl
sahf
adc
xchg
jmp
add
ret
mov
out
std
sbb
add
daa
and
or
mov
insb
out
fistpll
into
pop
pushf
mov
ret
mov
test
loope
xchg
xchg
pop
adc
sbb
fwait
test
xchg
les
mov
mov
dec
mov
ret
pop
out
lods
dec
loop
icebp
mov
mov
inc
addl
jo
inc
mov
xlat
dec
jne
xor
fs
int3
or
js
pop
shlb
xor
jne
sub
xchg
or
xchg
lds
rcr
xor
aam
sub
dec
adc
pop
inc
pop
loopne
add
movsb
daa
fdivs
mov
jle
rclb
cmp
fldenv
sub
xor
mov
hlt
pop
gs
add
mov
xchg
inc
mov
sti
es
das
or
das
gs
sub
dec
or
pusha
push
sbbl
sub
mov
hlt
jne
push
dec
test
mov
daa
lods
loop
push
cmc
out
ucomiss
sbb
pushf
jp
cltd
insl
sti
add
sub
pop
loopne
shlb
lods
adc
repz
and
jl
pop
mov
push
faddp
fisttpll
push
shr
in
bound
xor
pop
ja
mov
movsb
cmp
push
inc
and
pop
andl
and
mov
sbb
add
mov
scas
ret
mov
add
aam
or
movsl
imul
xchg
cmp
sar
out
ficompl
sub
stos
hlt
cmc
data16
add
loope
repnz
jecxz
je
adc
xor
into
pushw
cmp
cld
pop
repnz
add
push
xlat
push
mov
jl
pusha
rorl
mov
cmp
test
and
or
jne
jp
das
jne
cltd
lods
hlt
inc
adc
fldl2e
pop
xchg
lret
fiadds
cmpsl
fdivrs
jns
leave
mov
inc
xchg
movsb
sahf
push
popa
popa
add
xlat
xor
mov
sbb
out
adc
xor
clc
scas
mov
shll
inc
cmp
inc
push
insl
add
inc
adc
and
cmpsb
push
aad
dec
es
jg
cmc
das
cmp
call
mov
dec
and
cmc
movsl
add
pushf
adc
sbb
xor
pop
and
pop
movsb
mov
jnp
pop
nop
pop
cmp
sbb
and
push
sbb
mov
or
cmpsb
jae
les
mov
push
lea
outsl
addr16
add
adc
call
mov
cmpsb
pop
jno
lds
ljmp
pushf
or
ret
mov
mov
stos
dec
mov
push
adc
push
push
and
outsl
xchg
push
out
imul
pop
mov
pop
nop
fiadds
jmp
dec
cs
sub
test
xor
xchg
ds
push
shl
iret
stos
mov
stos
xor
out
inc
sbb
repz
and
movsl
dec
cmc
enter
mov
push
cmp
mov
dec
jmp
push
or
mov
sub
xchg
xor
cmc
lea
gs
fwait
mov
lahf
ljmp
push
sub
adc
out
fisttpl
adc
ret
cmpsb
xchg
aad
sbb
jge
mov
push
pop
mov
lcall
inc
cmp
dec
fnstcw
icebp
or
jl
movsb
cld
lahf
cmp
dec
outsl
sti
js
or
mov
xchg
sub
xchg
mov
cmp
mov
adc
sbb
adc
jle
ret
pop
mov
jno
movsb
stos
aad
inc
int
jbe
cmp
test
and
stos
fadds
hlt
sbb
pop
jo
int
cmp
mov
jl
push
mov
rolb
or
es
jl
shll
sarb
leave
bswap
ret
jl
mov
fnstcw
adc
call
adc
fcmovbe
movsb
cmp
scas
fstps
enter
insb
lock
add
adc
pushf
movsl
fiadds
xor
in
and
xchg
and
add
or
loopne
pop
pop
sbbb
cmpsb
or
inc
lea
out
jmp
scas
pop
icebp
cmp
and
addb
jne
and
popa
sbb
inc
arpl
mov
cmc
loope
orl
out
subb
cmp
jbe
adc
mov
sbb
popa
inc
sbb
mov
ret
jmp
pop
movsb
add
jmp
cmp
mov
fmull
lock
inc
in
aam
and
call
addr16
rorl
repz
adc
xchg
lea
in
xlat
mov
out
cmpsb
test
popa
repnz
lods
sbb
fnstcw
call
fsts
aad
sti
mov
hlt
scas
sahf
jmp
sti
fsubl
push
arpl
add
imul
mov
das
out
push
lcall
inc
fimull
aas
or
inc
mov
ja
decb
cli
push
cmp
ljmp
mov
adc
and
add
mov
jne
data16
and
test
iret
mov
adcl
xor
mov
dec
fwait
inc
loopne
loopne
inc
data16
andb
pop
pop
xchg
ret
sbb
icebp
loopne
mov
imul
lods
or
aad
sti
mov
mov
push
mov
jge
sub
mov
or
add
jnp
ret
xchg
mov
inc
test
push
pop
mov
repnz
sbb
xchg
aad
cli
cwtl
popa
push
pop
insb
cs
test
jnp
adc
es
pop
cmp
ljmp
pop
add
test
or
and
out
in
xchg
or
fsubs
scas
adcb
fdivl
and
pop
add
aad
outsb
loopne
and
fdivrs
test
xchg
lar
push
in
jae
cmc
cs
mov
mov
pushf
jg
ss
cwtl
xchg
orb
cmp
outsb
mov
hlt
mov
pop
js
ror
into
stc
pop
lea
pop
lcall
out
xchg
sbb
subb
xor
inc
xorl
dec
int
cltd
pop
in
lcall
aam
addb
repz
cmp
leave
xchg
mov
movsl
xchg
movsl
adc
add
scas
out
divb
xchg
and
test
shr
mov
fnstsw
xor
add
jle
cmpsl
inc
dec
jp
and
fmull
dec
fcomps
push
shl
adc
hlt
adc
jbe
xchg
loope
ja
pop
mov
clc
repnz
cmpsl
es
mov
cltd
fsubrs
inc
es
aam
std
ret
lods
xlat
push
cld
cwtl
aaa
fiadds
out
xor
scas
inc
fcomps
stc
lret
sub
js
inc
repnz
or
adc
mov
nop
call
push
add
pop
xor
popf
mov
out
cwtl
pop
cmp
mov
mov
jns
popa
sub
gs
fiadds
scas
pusha
rcrl
sar
cmp
scas
int
inc
xor
jmp
and
xor
cltd
aaa
and
in
aad
aas
sti
or
or
mov
push
xlat
cmp
mov
cmpsl
sbb
std
sbb
in
cmpb
mov
sub
and
inc
dec
inc
cs
push
rclb
int
pop
fcomp
cmp
push
fistpll
scas
push
in
jp
cwtl
sbb
dec
sub
setg
cmp
adc
jo
movsl
mov
insl
sub
scas
adc
out
repz
jge
xor
clc
mov
jnp
pop
scas
add
mul
fxrstor
dec
loopne
movsl
sub
cmc
ja
lcall
pop
fidivs
cld
scas
mov
mov
sbb
xor
cld
insl
scas
popf
into
addr16
adc
jo
pushf
jo
jp
mov
sub
inc
dec
loope
lret
push
std
jmp
cmpsl
call
and
fdivl
imul
mov
pop
mov
insl
push
xchg
lods
mov
jecxz
pop
test
clc
jmp
fwait
in
mov
push
mov
enter
lret
push
cli
stos
pusha
mov
lea
mov
mov
pop
xchg
popa
jns
or
cmpsl
jmp
xor
mov
xor
mov
cmp
repz
idivb
imul
cmp
insb
pop
push
movsl
inc
mov
sub
or
mov
mov
inc
ficompl
out
inc
fdivp
inc
out
pop
adc
cmp
stos
jae
xchg
nop
lret
xor
mov
mov
or
mov
loopne
sahf
lea
mov
mov
fsub
mov
sub
jne
cmp
cwtl
loope
stos
mov
mov
jne
pop
cmpsl
xor
lahf
push
mov
cmp
std
cmpb
sub
sub
pop
nop
cmc
imul
cli
cli
mov
cs
push
int3
adc
dec
dec
imul
add
and
stos
jae
mov
loop
cwtl
int3
ljmp
aad
push
mov
cs
cmp
jg
jg
shlb
push
dec
inc
rcrb
scas
jmp
or
call
lret
xor
dec
add
int
in
xlat
and
add
cmp
pushf
sbb
js
cmp
std
adc
xchg
jae
pop
mov
ljmp
mov
mov
jecxz
jl
and
push
push
sub
sbbl
into
test
out
sub
loope
push
mov
mov
inc
pop
enter
or
adc
fstpl
icebp
jg
sub
test
mov
outsl
outsb
pop
adc
iret
je
or
lcall
hlt
mov
add
pop
lock
jle
mov
lea
fwait
inc
pop
jne
xchg
cmp
in
repnz
mov
dec
or
pop
dec
fs
loop
mov
mov
mov
repz
ret
xchg
aad
mov
dec
loop
adc
js
arpl
cmp
pop
loop
dec
pushf
fistpll
adcl
imul
gs
xor
sbb
js
add
dec
xchg
cmp
repz
mov
mov
jmp
mov
lret
fildll
pop
sbb
insl
lret
movsb
sub
and
sub
loop
incb
inc
mov
sbb
push
clc
cmp
loopne
mov
push
or
fs
pop
notb
mov
pop
cmp
sbb
mov
mov
movsb
xor
lock
sub
fisttpll
cmp
pop
jnp
pop
sti
jmp
push
push
pop
mov
fwait
mov
das
out
and
cmp
test
push
and
or
movsl
jmp
sub
and
roll
inc
in
test
dec
push
addr16
xchg
addr16
xor
jl
fs
jno
mov
sti
fmuls
leave
popa
ja
jp
cmc
test
in
xchg
mov
lds
cmpl
xorb
pop
push
sahf
fcomps
adcl
fwait
test
push
xchg
jno
clc
push
pusha
lods
test
rcl
mov
xchg
cmc
xchg
push
bound
notb
mov
dec
rcrl
sub
mov
rcr
push
dec
loopne
lret
lret
loopne
sub
push
xchg
dec
push
pushf
or
repnz
fmull
inc
insl
xchg
push
stos
shll
xlat
pop
cmc
push
mov
xchg
adc
lahf
jmp
dec
pushf
movsl
xlat
lea
loopne
pop
xor
std
add
xchg
jmp
aas
adc
sahf
add
aas
into
or
movsl
mov
jge
jno
ja
mov
movsb
sahf
leave
inc
add
das
shrl
mov
pop
xlat
stos
inc
ror
mov
mov
movsl
cmp
or
sti
add
mov
or
push
xchg
sbb
add
imull
or
js
out
pop
pop
lods
and
dec
insb
cmp
mov
frstor
js
jecxz
lds
sub
or
jnp
out
shl
sbb
push
mov
movsb
xchg
lock
sar
mov
jecxz
ret
mov
sbb
imul
out
and
inc
test
pop
out
xlat
and
xchg
cmp
mov
jae
ret
push
into
sbb
into
xchg
leave
push
in
test
cs
test
sub
add
int3
and
cwtl
test
mov
mov
popa
cltd
adcl
xchg
mov
leave
sbb
aaa
xchg
mov
mov
push
or
inc
mov
ds
cmpsb
inc
xchg
adc
push
add
or
jnp
sarl
sub
mov
aas
jge
xchg
je
or
add
xor
mov
dec
ss
aad
xchg
xchg
inc
fcompl
or
push
mov
into
shll
jge
inc
les
int3
pop
mov
xor
sub
cmp
out
push
cmp
dec
imul
add
ss
adc
ds
bound
movsb
sbb
inc
int
lods
jg
pop
pop
dec
pop
pop
inc
dec
lahf
add
call
mov
jne
leave
mov
jno
int3
add
loop
jae
mov
cmp
dec
jo
mov
xchg
aam
sbb
and
aas
and
nop
sub
std
outsb
shrb
mov
adc
cmc
scas
and
das
cmp
dec
pushf
test
jae
xchg
mov
int
lock
xchg
jae
fnstenv
mov
dec
inc
xchg
das
lock
inc
pop
ds
icebp
adc
data16
pop
inc
sbb
lods
stos
repz
lahf
mov
leave
jmp
xchg
insl
insb
push
lods
or
js
lock
inc
cmp
mov
popa
sti
push
push
pop
mov
lahf
fcomp
outsl
les
inc
ret
xchg
loopne
shll
xchg
sub
imul
or
lahf
and
sbb
mov
jnp
hlt
je
push
insb
sub
mov
iret
cmp
sub
pop
mov
out
mov
out
out
jnp
and
dec
mov
inc
movsb
aam
out
dec
rcl
mov
inc
pushf
xlat
add
jp
stos
mov
xchg
pop
das
push
push
mov
mov
jmp
lcall
push
or
inc
outsb
and
jbe
jg
inc
iret
js
sbb
dec
fcomps
xchg
movaps
scas
or
jecxz
testb
das
sarl
jle
push
jmp
cmp
stos
pop
mov
and
inc
push
js
movsb
mov
sbb
dec
sahf
cld
mov
add
loopne
xchg
push
mov
sbb
fimull
jp
sarl
jno
adc
lahf
xor
push
call
jge
adc
push
lea
out
cmp
lcall
sub
iret
rolb
out
in
xchg
and
push
jmp
dec
dec
jb
add
xor
inc
xchg
cmp
sbb
sub
mov
add
add
sub
dec
test
imul
mov
test
fdiv
adc
sbb
xchg
in
stos
pop
out
mov
sbb
cmp
push
andb
mov
jo
xor
cmpps
xchg
mov
pop
scas
push
arpl
icebp
mov
andb
inc
ja
test
pop
push
div
or
movsb
int3
sarb
push
mov
push
sub
push
sub
outsl
loopw
dec
arpl
fnstsw
or
sti
lds
inc
and
push
and
dec
lods
mov
pop
lcall
fwait
xchg
mov
cwtl
inc
arpl
lods
or
sbb
mov
sub
fistpl
imul
insb
mov
xchg
out
mov
outsb
das
inc
pop
fisttpll
xor
mov
cmpsb
sarb
adc
ficoms
fxtract
jne
pop
scas
ljmp
mov
lds
mov
add
in
push
cli
aas
push
jl
adcl
fbld
pop
imulb
in
popa
iret
adcl
repz
and
or
pop
jne
mov
inc
jbe
repnz
or
out
or
stos
scas
lock
dec
popf
push
dec
adc
in
lea
sub
inc
jmp
and
loopne
ljmp
outsb
xchg
xchg
pop
mov
enter
or
cltd
jae
push
cmp
xor
enter
sub
mov
popa
js
push
jb
add
lcall
adc
or
push
imull
movsl
lret
mov
imul
push
hlt
loopne
lock
loop
aad
xchg
xchg
das
push
adc
in
imul
adc
adc
mov
mov
daa
xchg
dec
pop
mov
out
inc
stos
cld
test
fidivs
jb
out
adc
aad
or
sbb
mov
mov
mov
inc
daa
adc
push
mov
sti
jmp
movsb
lods
mov
pushf
sbb
in
sub
mov
and
andl
mov
xlat
insl
sub
out
sbbb
mov
xchg
push
pushf
push
pop
scas
cmp
mov
sbb
out
push
stc
xor
or
pop
pop
fst
fdivrl
jg
and
add
loope
out
sbb
scas
dec
js
daa
mov
ficoml
das
ljmp
mov
add
mov
repz
push
jne
jle
mov
bound
and
dec
aaa
ret
dec
pop
jo
jb
or
push
pop
rorl
xlat
adc
cwtl
fs
jae
xchg
cmp
mov
mov
nop
push
dec
enter
inc
stc
popa
push
out
lea
mov
out
add
test
icebp
rolb
rolb
xchg
or
cmpsl
push
std
aaa
js
loope
xor
imul
sbb
xor
sub
je
xor
aaa
sti
lret
push
sti
sub
daa
fldenv
add
pop
xchg
iret
lods
sbb
push
pop
nop
pusha
sbb
mov
lods
pop
push
shr
inc
fcompl
and
mov
out
int3
xor
dec
xor
dec
pop
mov
push
lahf
inc
adc
in
roll
xor
jae
notl
pop
aad
adcl
pop
xchg
movsl
mov
mov
flds
dec
xchg
hlt
add
jno
nop
or
popa
cs
lds
aaa
jb
xlat
pushf
push
lcall
dec
dec
mov
in
jbe
pop
std
xor
std
std
addb
dec
pop
jae
lds
push
test
or
sarb
pop
popf
inc
cltd
jne
inc
adc
cmp
sarl
mov
outsb
aad
insl
pop
inc
shr
movsb
jg
push
dec
inc
icebp
cmp
movsb
adc
pop
int
push
loopne
push
scas
fisubrl
mov
js
aas
push
out
bound
arpl
or
pop
and
push
dec
cmpsb
pop
sbb
add
and
faddl
stc
xchg
sub
std
dec
cli
mov
mov
loopne
xor
cmp
jmp
test
lcall
dec
mov
mov
dec
mov
mov
xor
jo
fucomp
cmp
pop
xlat
test
aas
pop
add
rolb
mov
pop
test
shll
xchg
mov
pushf
adc
pop
inc
fistpl
lea
adc
sbb
push
dec
or
cmc
xchg
pop
xor
ja
enter
xor
inc
xchg
xchg
lods
dec
loop
and
hlt
fmull
aaa
mov
add
xchg
test
inc
dec
sub
pusha
adc
fmul
leave
cli
sti
pusha
adc
mov
daa
pop
aas
sbb
inc
inc
lcall
or
push
mov
out
in
cmp
shl
sub
lcall
jge
outsl
lods
shrl
jns
lcall
xchg
xor
fnstenv
inc
jg
fistps
leave
pop
js
and
inc
or
and
mov
adc
pop
dec
sbbl
mov
sbb
and
icebp
cs
sbb
mov
jge
scas
mov
lret
sahf
lahf
stos
lea
mov
adc
jno
inc
ret
cmpsl
es
cltd
sbb
mov
repnz
xchg
lods
dec
insl
mov
sub
dec
test
or
jo
xor
push
jl
addr16
sub
push
out
call
mov
push
test
jle
push
and
nop
sahf
test
mov
insl
push
inc
fsts
mov
mov
cmp
scas
jg
js
loop
cmp
mov
xor
inc
cltd
lea
sbb
leave
xorb
adc
out
std
leave
adc
dec
jbe
lods
dec
imul
cmc
test
aaa
imul
or
shll
mov
test
loop
iret
arpl
stc
fmul
daa
mov
jae
jne
bound
lds
je
sub
sbb
aaa
int3
cmp
in
and
xchg
stc
insb
xchg
cmpl
cmp
andl
and
andl
mov
lods
jnp
lcall
fs
inc
xchg
mov
lods
mov
dec
cwtl
push
repnz
cmp
mov
push
fdivs
push
inc
into
nop
xchg
mov
cmpsb
mov
shlb
sbb
sub
pop
dec
lock
jg
les
fildl
push
cmpsb
push
add
loopne
mov
mov
dec
sub
jecxz
inc
ds
mov
cs
push
scas
fnstcw
push
dec
imul
imul
je
iret
sbb
int
aaa
push
jl
insl
or
jae
aam
rep
inc
loopne
cwtl
xchg
outsb
mov
int
pop
xchg
xor
lock
sarb
sub
mov
mov
or
leave
push
and
or
inc
sbb
sub
mov
jno
icebp
dec
dec
leave
fiaddl
mov
push
pushf
push
adc
or
mov
push
movsl
adc
movsl
xchg
movsl
scas
std
lock
aam
adc
pusha
sbb
mov
sahf
jbe
leave
int
repz
lea
jbe
adc
sbb
and
jg
roll
aas
test
std
popw
fistpl
leave
sahf
fistps
xchg
fcmovne
ffreep
bnd
mov
and
or
or
or
jmp
add
push
std
or
jb
sub
sbb
and
lcall
xor
lods
and
xor
mov
outsl
or
inc
jg
xor
test
cld
inc
out
and
in
xchg
daa
mov
and
cli
fldcw
shrb
repnz
dec
arpl
xor
imul
push
popf
push
add
je
add
fiaddl
jg
xor
ljmp
pop
mov
lahf
mov
mov
push
daa
idivb
mov
iret
push
jb
jp
cmp
mov
js
andl
cmp
dec
imul
sbb
and
incl
or
loope
sarb
push
les
out
xchg
and
sbb
insb
fstpt
mov
in
add
mov
jbe
pop
lea
sub
loop
add
add
loopne
sahf
test
arpl
fwait
gs
add
mov
sbb
cli
xor
jae
xchg
push
push
mov
sbb
cwtl
push
xchg
mov
fdivl
cltd
scas
cmpsb
sub
lret
pop
pushf
xchg
cli
ja
jg
test
push
fstl
negl
fdivr
test
repz
nop
arpl
mov
mov
cmp
jb
lret
mov
inc
xchg
mov
jle
add
xchg
sub
movsb
push
rcrl
add
mov
int3
movsl
and
mov
sub
test
xor
sub
out
push
mov
mov
shrl
xor
jo
push
xchg
notl
inc
subb
adc
js
xchg
call
push
xchg
insl
inc
inc
push
cmp
pop
xchg
add
mov
outsl
aad
dec
fwait
jl
push
sub
mov
dec
cmpsl
sbb
sbb
jno
mov
xor
rcll
pop
jnp
ljmp
add
cld
outsl
push
add
add
mov
in
xchg
mov
adc
and
and
in
call
mov
sti
loop
or
jnp
outsl
sub
mov
movsl
jno
nop
push
or
push
pop
push
fs
iret
xchg
arpl
cld
inc
xor
and
mov
xlat
cmpb
or
je
push
dec
leave
aas
jmp
jns
push
imul
push
data16
pop
aad
imul
cli
std
dec
dec
hlt
out
in
xchg
rcrl
adc
dec
xor
mov
lock
fsubrp
stc
ret
cmp
enter
aas
cmp
xor
inc
lret
aaa
xlat
inc
sbb
xlat
sbb
and
xchg
lcall
sti
inc
or
mov
mov
and
cmp
fstpl
cmc
pop
push
andl
lock
sti
and
out
push
sti
popa
xchg
push
push
hlt
mov
mov
les
aas
sub
in
stos
addb
mov
out
push
inc
pop
cltd
test
lcall
cmp
ficomps
pop
lods
add
les
adc
sub
mov
xlat
and
popa
insl
add
pop
adc
mov
jo
xchg
fisubrl
cltd
fildll
es
fsubrl
sub
xchg
or
sbb
ss
mov
mov
lods
mov
cld
movsb
out
pop
sub
mov
push
xchg
jnp
push
inc
aaa
sbb
pop
sahf
hlt
sbb
sub
xor
pop
movsl
xchg
leave
cmp
mov
mov
dec
les
jne
cld
xchg
aaa
mov
mov
add
std
pop
mov
loopne
lcall
mov
test
sbb
inc
cld
mov
lock
in
mov
out
cmp
push
das
or
dec
cmp
push
mov
inc
mov
jo
sahf
adc
out
inc
scas
shl
inc
sbb
or
or
imul
ret
cmp
pop
xor
orl
cmp
ja
jecxz
in
test
sti
push
add
mov
call
and
sub
adc
fwait
push
fnstenv
lahf
sbb
cmp
and
xchg
sub
cmc
repnz
insl
mov
pop
adc
ja
jmp
cwtl
pop
jmp
mov
mov
xchg
sbb
pop
stos
decl
fcomps
push
in
sbb
sbb
add
mov
addb
jbe
xchg
imul
fwait
je
sub
fstps
pop
mov
and
cltd
bnd
cli
in
xchg
xorb
arpl
ret
fstpt
dec
imul
fnsave
movsl
or
in
or
push
lcall
dec
imul
int3
pop
into
je
cmp
sar
dec
sarl
fidivs
lret
adc
dec
xor
lds
aaa
int3
add
cwtl
dec
loope
cwtl
test
and
mov
lret
push
mov
mov
jecxz
fdivp
pushf
mov
pop
sti
dec
arpl
pcmpgtb
icebp
cmp
xchg
sub
movsb
aad
mov
xchg
subb
aam
fs
mov
jecxz
jae
jo
dec
mov
rorl
mov
and
nop
xor
add
pop
scas
repz
ja
jnp
in
sahf
je
jne
mov
ret
xchg
shll
fmuls
shr
data16
imul
inc
cwtl
in
jno
xlat
mov
loope
testb
lods
add
mov
fwait
test
jecxz
adc
ret
push
subl
loope
push
jb
jnp
setle
mov
xlat
mov
xorb
jmp
sub
call
decl
repz
test
inc
dec
mov
lods
call
ja
xchg
push
repz
insl
clc
into
xchg
test
pop
xchg
mov
pop
out
lds
aad
js
enter
add
aaa
incl
jae
hlt
add
orb
or
test
pop
iret
inc
push
in
cmp
adc
xor
std
lcall
cltd
ja
dec
add
pop
js
fcomp
lea
stos
ds
or
in
mov
mov
int
sub
inc
inc
jmp
scas
test
dec
xchg
add
cmp
fwait
push
push
cmp
sbb
fstpl
mov
push
fs
xor
push
clc
in
outsl
adc
in
mov
sbb
cmpl
push
imul
mov
outsb
or
cmc
popf
aam
xchg
hlt
out
lods
ret
or
bound
pop
aad
adc
dec
in
mov
daa
push
sbb
adc
and
mov
add
pop
in
push
ret
movsl
sub
pop
leave
pop
mov
mov
aas
cwtl
lret
push
mov
push
push
mov
es
nop
loop
xchg
mov
lahf
mov
sbb
or
or
inc
gs
ret
jp
xor
mov
enter
mov
nop
cmp
mov
pop
xlat
xor
movsl
and
xchg
pop
nop
cmpsl
mov
add
cwtl
adc
insl
in
int3
and
insl
mov
sub
mov
mov
and
ja
lods
cmp
jp
jae
jp
shrl
add
gs
dec
sbb
and
enter
js
fisttpl
aaa
cmp
ljmp
imul
inc
out
insb
dec
pop
dec
testb
std
lods
clc
dec
push
jge
fstl
gs
pop
sub
jnp
imul
jecxz
sbb
xchg
inc
cmc
test
jle
jle
adc
fidivl
fdivrl
push
fcomps
xchg
dec
dec
lock
int
adcb
call
inc
ljmp
sbb
out
mov
popa
ret
rorb
stos
mov
ljmp
in
movsl
push
ss
dec
popf
icebp
aad
aas
xlat
xchg
push
mov
fstpt
scas
pop
pop
push
and
dec
adc
int
jmp
pop
inc
pop
mov
jmp
aam
ffree
sbb
sub
add
lods
fs
xchg
out
mov
push
or
in
outsb
test
iret
cmpsb
orb
pushf
loope
mov
test
mov
outsb
fisubrs
jge
sti
sbb
mov
adc
stos
aas
popa
mov
or
and
sub
out
out
mov
clc
mov
xchg
jge
xchg
sbb
mov
shl
int
adc
lock
mov
push
dec
mov
mov
test
jecxz
addl
cwtl
in
out
dec
stos
in
pop
jns
mov
lea
pop
and
sbb
push
mov
ja
push
popf
shr
orl
adc
subl
cmp
xchg
enter
adc
mov
das
loopne
pop
xchg
xchg
mov
mov
stos
lcall
adc
pop
aas
xor
inc
xchg
mov
scas
and
mov
frndint
mov
testl
cmp
repz
inc
outsl
in
mov
jg
sub
add
add
xchg
push
sbb
fdecstp
shlb
dec
cmp
loop
xchg
ljmp
jl
cld
mov
movsl
inc
addb
movsl
les
cmpsb
fnsave
cmp
ss
xor
shrl
add
adc
out
cmp
into
ret
push
lock
dec
mov
rcll
stc
mov
insl
adc
cmp
add
outsl
ret
mov
add
repnz
stos
mov
sub
mov
mov
mov
es
and
mov
dec
test
pushf
loopne
test
iret
xlat
test
adc
fsubrl
mov
dec
movsb
loop
xlat
xchg
aas
sbb
shl
pop
and
rcrl
sub
lock
rcll
dec
add
jp
inc
and
sub
sti
sbb
pop
outsb
add
xor
mov
or
mov
rdtsc
adc
mov
dec
popl
sub
lods
mov
sarl
cmp
mov
rclb
outsl
icebp
xor
mov
and
inc
lahf
xorl
add
cwtl
or
mov
mov
xchg
sub
out
and
out
fcomps
scas
and
mov
xchg
fisubl
mov
enter
cmc
pop
jp
int3
out
scas
adc
mov
mov
js
cwtl
les
jle
jbe
mov
lahf
popa
sbb
cld
and
scas
push
out
repz
push
lahf
std
mov
test
imul
mov
sub
nop
sub
pop
icebp
cmp
mov
cmpsl
sub
in
or
mov
call
in
adc
push
cmp
mov
inc
mov
mov
or
pop
es
orb
mov
lds
in
lea
pop
js
call
mov
das
pop
in
fnstcw
add
outsl
dec
outsl
icebp
push
sbb
cmp
adc
es
xor
pop
xchg
dec
mov
xor
xor
inc
cmp
and
sbb
cmc
jnp
and
orl
xor
inc
ret
sbb
cmp
loope
sub
cmp
into
sub
ds
mull
lcall
adc
sub
insb
add
push
outsl
inc
dec
jo
rol
std
jecxz
push
dec
lret
pop
sbb
repz
lods
repnz
aaa
out
fwait
xchg
mov
rcrl
rorb
sbb
inc
add
push
sbb
ja
ja
test
in
fs
mov
mov
xchg
push
int3
pop
inc
jbe
test
push
lods
push
dec
cmp
lahf
lret
in
push
sti
cmc
cmp
add
and
mov
daa
xchg
push
xor
push
xor
pop
icebp
adc
mov
lea
pushf
mov
jmp
adc
fwait
pusha
enter
es
in
push
les
ror
cs
lcall
enter
enter
aas
call
mov
lahf
fnclex
fsubrl
jg
dec
xchg
insb
repz
addr16
js
push
push
fwait
bound
pop
mov
sti
xorl
pop
outsl
ljmp
sbb
xchg
dec
stc
cmp
xchg
push
out
stos
outsb
stos
aad
fmull
push
hlt
xor
jecxz
or
add
jecxz
sbb
sub
aad
xchg
fnstcw
in
cmp
sub
clc
je
loopne
out
cmp
push
sbb
mov
enter
fs
aas
push
or
aas
iret
iret
shl
push
inc
clc
insb
xchg
mov
jae
sbb
bound
lock
lds
xchg
xor
sbb
mov
lods
repz
xor
xlat
push
inc
bound
dec
mov
mov
sub
lea
mov
mul
sub
lds
pushf
xor
mov
lods
shrb
mov
mov
dec
jno
mov
xchg
test
jecxz
xor
std
pop
scas
dec
mov
out
shll
jbe
hlt
lods
dec
mov
call
dec
mov
test
xor
cwtl
cli
jmp
lahf
pop
out
pop
movsl
mov
les
sar
out
add
repnz
iret
add
pop
mov
push
clc
ficompl
adc
arpl
sub
ret
call
mov
movsl
xor
dec
ljmp
mov
add
push
xor
mov
lods
in
ljmp
ljmp
cmpsl
movsl
jg
sti
mov
pop
and
push
mov
mov
pusha
mov
test
imul
call
xchg
out
add
mov
sti
xchg
shlb
out
xor
dec
jg
divl
mov
push
mov
sub
insl
sub
mov
adc
ja
jg
std
ljmp
divl
pop
adc
ss
bound
lods
jne
int
mov
adc
mov
push
rclb
jnp
sti
outsl
dec
out
mov
data16
lods
adc
mov
sub
pop
data16
andl
fiaddl
mov
test
hlt
jl
jnp
inc
pop
in
and
sbb
dec
mov
inc
xor
jno
mov
lods
jg
imul
xchg
sbb
jnp
jmp
cltd
std
enter
or
incb
mov
rclb
push
cli
lea
cmpsl
adc
cld
mov
repz
mov
pop
adc
aam
mov
movsb
mov
jg
fwait
add
push
inc
or
in
jg
mov
ret
xor
icebp
xor
clc
es
arpl
inc
jno
push
test
pushf
inc
ja
fmuls
fistl
xor
cmp
test
aas
lret
xor
fnstenv
pop
insl
mov
push
lock
cld
outsl
xchg
lret
mov
and
jg
dec
dec
mov
int3
les
outsb
xchg
shrl
mov
fistl
push
stc
stos
mov
jl
lock
icebp
xor
pop
fs
ds
test
cmp
insb
icebp
mov
lret
push
xor
test
cltd
lock
pop
cwtl
and
jo
js
test
or
dec
addr16
movsb
jbe
iret
push
inc
out
sbb
mov
push
dec
icebp
xchg
pop
negb
inc
int3
cmpb
sbb
xlat
test
jge
and
sub
add
addr16
jge
popf
fsubl
xchg
fs
popa
push
outsl
push
fdivrl
xchg
lock
out
adc
xchg
and
dec
test
les
dec
faddl
push
pop
push
sbbl
mov
insb
psubusw
lcall
xlat
addr16
out
mov
push
lret
and
mov
cmp
inc
add
lcall
mov
cmovp
bnd
scas
inc
add
mov
pop
push
xchg
inc
jle,pn
pop
test
push
sbb
mov
ja
pushf
sbb
cmp
adc
inc
mov
and
repnz
andb
bound
arpl
dec
fisubrs
add
mov
sub
jmp
and
stos
sub
xor
out
jg
dec
addl
lret
pop
pop
pushl
jbe
clc
test
rorb
leave
xchg
inc
xlat
push
adc
loope
add
lods
xchg
inc
inc
pop
popf
insb
xor
add
xchg
addr16
xor
std
lods
sahf
or
out
fucom
inc
mov
sub
inc
dec
add
and
push
mov
pop
xchg
inc
mov
aaa
ss
andl
fimuls
jns
stos
bound
cmp
or
and
push
and
insb
sub
push
xor
pushf
in
out
repnz
in
push
mov
xchg
cmp
mov
test
xor
hlt
push
add
sbb
mov
fmulp
ffreep
fnstcw
sbbb
pop
and
enter
and
jo
js
jg
test
jns
scas
pop
adc
les
mov
popf
movsb
out
fsubs
inc
push
sti
adc
rcll
jo
aas
out
jge
rcll
dec
sub
mov
ss
and
cmpb
push
stc
jecxz
add
jmp
movl
pusha
jmp
das
arpl
add
cmp
rolb
in
outsl
pop
xor
xorl
or
clc
ficoml
add
stos
jl,pn
fldl
subb
sbb
stc
sub
repnz
lcall
jecxz
mov
push
loope
ds
jle
push
insb
or
aas
cmp
fisubrl
push
pop
insl
inc
mov
cmp
in
cmp
mov
xor
jns
inc
adcl
cmp
xchg
push
and
leave
mov
jo
push
and
rorl
cli
push
jne
pop
adc
out
pusha
cmpsl
ret
cs
add
mov
lods
std
lret
data16
fwait
mov
pop
sub
jle
test
ss
test
aas
fwait
xor
add
cmp
cmc
sbb
pop
jbe
roll
shrb
cmp
lock
das
xor
dec
mov
sub
or
jne
xchg
sarl
sahf
idivb
loopne
push
fwait
shrl
push
ss
dec
add
ficompl
push
push
movsb
xchg
popa
outsl
cmp
mov
mov
sbb
test
and
xlat
pop
repz
cld
mov
fwait
dec
pop
sub
jo
pop
jae
or
out
xlat
popa
test
fisubrl
push
xor
mov
outsl
push
jecxz
ds
inc
and
enter
push
test
sarb
adc
paddq
popa
mov
push
ret
or
stos
mov
cmp
fisubs
push
int
iret
les
push
xor
popf
ja
mov
adc
cmpsl
iret
aas
pop
fcomi
aas
and
sbb
jmp
aam
and
ljmp
xlat
loop
test
les
mov
loopne
mov
stos
sub
dec
pop
dec
pusha
mov
call
cmp
je
ljmp
out
mov
data16
mov
jp
gs
in
push
cmp
inc
adc
sub
jb
jmp
dec
cli
out
sub
xor
call
inc
push
jmp
and
cs
mov
adcb
stc
rorb
jo
cmp
mov
jne
push
pop
inc
sub
dec
stc
or
std
cmc
mov
jae
jne
fisttpll
data16
mov
jmp
xchg
or
mov
int
mov
in
and
push
iret
xchg
popf
lock
lea
xchg
lods
jno
push
aad
in
rcrb
mov
sub
jge
pusha
cmpsb
repnz
in
cltd
popf
sbb
dec
out
adc
mov
sbb
push
mov
mov
pop
add
inc
cmpsl
cmp
lret
hlt
xchg
mov
sahf
test
mov
or
mov
shrb
pop
outsl
inc
iret
push
mov
add
push
jg
mov
outsl
aas
notl
inc
ds
in
cwtl
push
lods
dec
popf
push
orl
sbb
push
mov
daa
mov
jb
enter
std
mov
movsb
add
sbb
movsb
shll
fildll
mov
fcoms
cli
popa
ret
pop
adcl
jno
movsl
mov
gs
int3
push
aaa
mov
scas
cltd
add
imul
cmpsb
fdivrs
add
sbb
lret
mov
inc
pop
mov
jnp
mov
imul
or
shrb
and
rcrl
sub
ja
in
inc
push
fsub
out
mov
test
push
lods
arpl
sub
pop
jne
cwtl
sar
xchg
fnsave
xchg
popf
loop
subl
das
mov
pop
cltd
cmpsb
popf
xchg
pop
adc
push
or
sahf
push
adc
jno
leave
pop
into
aam
loopne
out
jo
xor
sub
sbb
outsb
movsb
movsb
xchg
xor
adc
jle
ja
int3
shll
pop
and
test
arpl
dec
ljmp
in
int3
jb
add
sub
mov
add
mov
outsb
notl
push
add
notl
and
mov
stos
or
push
mov
mov
mov
mov
subb
xchg
push
cmpsl
adc
mov
repz
cmpsl
xchg
push
clc
jle
popa
jbe
xchg
ds
inc
fs
fnstenv
xchg
loope
mov
add
lds
sbb
lahf
pop
push
pop
sub
outsb
loop
jecxz
inc
nop
xor
xchg
lea
fisubrs
rorb
mov
int
jge
inc
movsb
jo
mov
into
jle
adcb
cmc
dec
ljmp
mov
jp
jnp
fwait
dec
test
std
test
les
and
rcrb
loopne
mov
cmp
xor
pop
push
add
mov
das
dec
ja
xlat
dec
xchg
lds
iret
inc
inc
add
cwtl
or
dec
xorb
or
ds
andb
cli
pop
mov
inc
clc
aad
add
repnz
push
sar
mov
xchg
lods
call
cmc
mov
mov
inc
outsl
xlat
push
andb
das
scas
inc
sub
flds
dec
mov
pop
push
dec
imul
mov
lahf
xor
nop
jmp
fcompl
lea
push
mov
loopne
shrl
add
mov
jne
jb
or
mov
in
adc
loope
lods
mov
icebp
sti
arpl
cmp
int3
mov
cmp
lahf
sbb
jmp
inc
cs
test
ret
sbb
pop
out
fwait
jp
sub
out
xor
sub
fsubrs
push
arpl
and
dec
xor
shl
mov
xchg
adc
shlb
sbb
test
in
and
sti
adc
inc
jae
push
adc
or
cmpsl
cli
xchg
leave
sub
mov
mov
test
fld
das
int
lret
dec
lcall
sub
and
jo
mov
mov
mov
cs
or
mov
and
out
test
add
lds
xchg
pop
lcall
xchg
mov
jnp
xor
dec
scas
push
scas
aas
cmp
in
lods
data16
jp
in
and
std
push
dec
cltd
stc
movsb
repnz
xor
pop
aad
adc
adc
mov
inc
popa
ds
xchg
adc
mov
mov
in
stos
inc
mov
fnstenv
jp
test
mov
jns
cvtps2pi
pop
ds
mov
repz
loop
stos
cmpsb
jno
in
cs
add
mov
push
inc
mov
loop
sbb
mov
cmp
es
push
insb
aam
insb
push
mov
xchg
ret
dec
push
cmp
dec
fs
xor
or
add
cmp
sub
jmp
fldt
lret
or
push
push
rorl
popf
mov
fstpl
xor
jne
and
popa
inc
pop
mov
xor
jecxz
mov
mov
ds
sbb
sarb
in
lahf
cwtl
stos
gs
lret
jl
mov
xchg
movzbl
adc
mov
xchg
cmp
sti
scas
mov
xchg
xchg
xor
rcrb
cmp
inc
xor
outsb
ficoms
les
jg
and
push
ljmp
fdivl
pop
adc
in
xchg
jns
inc
pop
sbb
push
lcall
mov
ficompl
in
inc
iret
inc
ret
xor
mov
stc
mov
and
dec
push
cwtl
dec
icebp
cli
adcl
xchg
stos
imul
pusha
jecxz
stos
cmpb
in
int
dec
test
jp
stos
out
loope
decl
jge
mov
enter
int3
lahf
imul
addr16
sbb
mov
mov
sbb
xor
mov
aas
out
mov
pop
or
inc
lcall
add
lock
out
mov
fst
add
mov
popf
jp
out
pop
push
enter
out
jo
adc
add
lods
in
cmpsb
test
gs
inc
pop
sub
imul
out
pop
cmp
repz
sbb
xor
inc
aas
sub
iret
repnz
adc
ja
inc
and
push
cmp
xlat
cltd
lret
cmp
loope
shl
cmpsb
leave
add
or
cmc
iret
inc
xchg
push
adc
inc
nop
jb
inc
sbb
or
push
sub
std
pop
insb
fbstp
cmpsb
push
ljmp
fldln2
xchg
popa
xor
das
add
mov
or
and
pop
test
loopne
mov
in
cmp
sub
and
rorb
xchg
or
imul
ss
cmp
dec
lret
rorl
mul
imul
fimull
push
les
adc
dec
inc
das
insb
xor
std
or
imul
mov
lcall
in
lea
mov
cld
jnp
mov
int
xor
sbb
xchg
push
sbb
ret
xor
push
loope
or
or
dec
es
or
xor
fldt
in
dec
cmp
leave
std
xor
xlat
aad
and
pop
mov
add
xor
clc
in
je
in
in
xchg
pop
xor
cs
xlat
in
push
fbld
pop
push
adc
js
mov
pop
imul
pop
inc
mov
iret
ja
popf
sarb
insb
adc
popf
in
mov
jmp
cwtl
mov
in
das
inc
pop
scas
fists
jmp
stc
dec
mov
cmpsb
in
pop
jo
test
lcall
js
rcrl
stc
add
jl
and
mov
inc
xchg
pop
mov
mov
shrl
popf
stos
pop
sahf
faddl
in
enter
jl
push
pop
cmp
addb
icebp
xchg
popf
cmp
scas
push
or
scas
adc
lea
sbb
iret
popa
sbb
or
xchg
loopne
sub
sub
xchg
das
sarb
imulb
addb
jecxz
cwtl
pop
in
sbb
push
ret
add
mov
add
lea
mov
mov
dec
subl
loope
fldt
pop
cmp
pop
in
mov
pop
hlt
inc
leave
pop
xchg
adc
pop
in
inc
sub
add
inc
xor
jl
and
inc
adc
jae
dec
ja
jno
in
notl
scas
add
imull
loop
mov
cmp
mov
out
imul
pop
sbb
std
repnz
mov
pop
pop
mov
adc
adc
cmp
fistps
mov
and
sarl
jecxz
dec
adc
lahf
lock
pop
cmp
jnp
mov
and
sub
cmp
lret
or
push
loope
sub
jae
or
cmp
cwtl
loope
mov
repnz
mov
and
push
adc
sarl
and
aaa
ds
adc
lds
fstps
pop
cmp
stos
stos
enter
sub
mov
mov
dec
es
loope
push
mov
test
loope
xchg
xchg
jge
jne
xor
fbstp
stos
inc
push
fnstenv
in
pusha
test
pop
sbb
dec
and
in
push
popa
push
fs
push
lods
daa
xor
inc
pop
xchg
mov
and
ds
test
movsb
adc
out
jge
mov
lcall
in
adc
lea
mov
xchg
in
aas
pop
fimuls
pop
xlat
sbb
pushf
stc
sub
push
js
pop
lret
push
lds
mov
aam
dec
dec
jne
cmp
push
sub
mov
jnp
testb
lret
imul
test
mov
sbb
push
jne
hlt
cmp
notb
adc
dec
mov
out
int3
lods
and
ss
int
aaa
dec
movsb
shlb
mov
cmpsb
pop
and
hlt
les
jae
rcll
fucomip
mov
push
push
fs
push
das
cli
xor
push
jae
cld
mov
scas
popa
ret
icebp
sub
xlat
cmpsb
js
int3
mov
fwait
mov
aam
jne
fimull
mov
sbb
movsb
dec
fisubl
iret
xor
dec
mov
movsb
push
xchg
bound
out
sub
inc
cs
sub
mov
adc
inc
jae
lods
jmp
jbe
inc
xlat
push
push
insl
dec
aad
adcl
jl
cmovb
lahf
fmul
push
mov
inc
cmpb
cwtl
mov
sahf
andb
mov
arpl
pop
in
arpl
mov
jns
fildll
mov
dec
lods
mov
sbb
in
inc
cmp
loopne
mov
mov
test
mulb
mov
dec
dec
das
int3
jae
push
popa
addl
push
adc
lret
pushf
in
jbe
test
popf
aam
int3
rorb
scas
bound
fisubl
arpl
ljmp
in
push
js
andb
jne
into
and
xchg
enter
inc
cmpl
fisttpll
aaa
in
and
mov
pusha
mov
mov
stc
xor
xor
add
mov
inc
mov
lret
push
cli
nop
loop
dec
bound
adc
jle
xchg
xlat
pop
into
sbb
and
adc
add
icebp
imulb
sbb
adc
add
xchg
fisubrs
ds
bound
dec
cmp
pop
xlat
sbb
shrb
iret
cmp
push
pop
leave
xchg
loope
lcall
adc
xor
cwtl
cltd
int3
je
notl
push
std
jno
dec
cld
fdivl
sti
outsb
scas
pop
into
mov
js
mov
je
int
loopne
jbe
jne
and
mov
in
inc
push
lods
scas
into
push
sub
jp
std
icebp
ljmp
and
fmulp
jge
cmp
xlat
bound
cltd
lcall
mov
aam
xor
lgs
aad
stos
mul
call
shlb
or
mov
push
popa
jnp
or
and
jno
fsubrs
jne
mulps
xor
jo
add
ret
bnd
mov
pop
sub
aaa
sbb
pushf
dec
or
xor
pop
xchg
sub
mov
push
xchg
pop
xor
das
sub
add
sub
cmp
and
cld
movsl
cmpsb
push
lcall
inc
rcll
jnp
int3
mov
xor
mov
jecxz
les
push
notl
out
and
pop
jns
imul
inc
and
mov
cs
add
dec
aaa
sbb
pop
in
mov
mov
sahf
fst
out
pop
xor
inc
push
and
pop
jmp
sub
outsl
push
xchg
aad
push
sbb
ja
dec
filds
and
test
loopne
push
pop
cmp
bound
stos
mov
mov
repz
or
dec
sarl
mov
adc
je
or
push
sbb
jge
inc
adcl
lock
cli
mov
pop
arpl
lret
mov
jb
mov
cwtl
pop
pop
enter
mov
lods
adc
cld
push
xchg
mov
out
xor
xor
and
sbb
jecxz
shlb
movsl
jne
mov
dec
inc
aad
cmp
addl
cli
std
pop
adc
test
cmp
mov
pop
pop
jg
pop
and
push
xchg
cmp
mov
into
mov
push
and
dec
and
fbld
dec
lret
in
or
push
inc
js
push
xor
push
pop
cwtl
out
ss
icebp
xchg
mov
lret
dec
pushf
sahf
pop
mov
and
push
mov
movsl
mov
stos
xchg
mov
test
jecxz
push
sbb
fdivrs
jo
sahf
lret
imul
pop
xor
sub
cmp
loopne
push
xchg
and
mov
cltd
xor
sub
xchg
sbb
pop
jl
scas
push
xchg
xor
push
pop
and
and
xor
popa
sahf
xchg
add
lahf
jnp,pt
pusha
inc
fldl2e
lret
adc
out
fcoms
pmullw
and
cld
fstpt
out
enter
cld
jo
cmpl
cmpsl
xchg
cmpsb
icebp
mov
mov
sbb
stc
imul
cmp
pop
or
xchg
pop
lods
xor
pop
push
dec
mov
sbb
inc
loopne
mov
mov
mov
leave
cli
inc
dec
outsb
xchg
jmp
or
mov
mov
adc
fisubl
aad
mov
movsb
clc
pop
loop
leave
mov
call
add
mov
inc
lahf
sub
icebp
repnz
pop
mov
mov
mov
scas
jp
sbb
xor
int3
fidivrl
fwait
jmp
aas
mov
xchg
mov
push
in
or
jnp
jae
movsb
jmp
int3
out
nop
test
dec
iret
cbtw
out
push
int3
pop
pop
lcall
cs
data16
and
jns
loopne
popa
jge
mov
cld
dec
stc
xchg
sub
mov
mov
scas
xor
mov
int3
push
add
rcr
cmpsl
cmp
test
mov
push
cmp
sti
jb
jecxz
inc
fucomip
push
cwtl
xchg
push
dec
test
lea
leave
adc
xor
mov
in
push
ret
ret
push
mov
inc
cltd
test
testb
cmc
add
pop
test
adc
iret
xchg
mov
mov
inc
sbbl
push
and
adc
xchg
xchg
stos
cld
and
pop
mov
lret
sbb
into
pop
cwtl
test
test
jb
jecxz
imul
sbbb
mov
jp
pop
mov
je
popa
and
mov
scas
daa
imul
dec
xor
cli
leave
mov
ljmp
dec
inc
mov
test
pop
inc
movsb
stos
add
rolb
pop
divl
int3
bound
inc
inc
jecxz
push
into
push
push
into
push
out
pop
stc
jae
jo
sbb
cmp
jle
hlt
lds
mov
movsb
pop
xchg
push
lods
xchg
shll
cltd
add
push
pop
pushf
dec
cmp
mov
pusha
cltd
iret
or
mov
mov
imul
pusha
imul
xor
into
ret
xlat
pop
push
jmp
xlat
cmp
popa
andb
and
stc
outsl
out
sbb
mov
ljmp
shlb
inc
mov
xor
and
pop
pusha
xchg
push
das
xchg
loopne
rol
jbe
or
fistpl
pop
stos
fcompl
jnp
cltd
add
mov
mov
add
jl
lock
or
subb
mov
lea
ror
or
insl
pushf
adc
push
mov
jo
jp
out
xor
fmul
ds
hlt
ds
adc
and
test
shlb
icebp
mov
fmull
lcall
rolb
jmp
movsl
js
frndint
imul
jp
or
lahf
jnp
addr16
adc
stos
aaa
dec
xchg
in
sahf
in
push
lcall
into
call
test
sbb
mov
leave
lds
lods
pop
and
aad
dec
imul
jae
dec
adc
push
jl
xor
cmpsb
repz
adc
mov
or
mov
lods
adcl
popa
pusha
addr16
arpl
pop
or
inc
stc
enter
lret
fcomps
mov
aam
push
lret
cltd
imul
sub
std
sarb
inc
test
arpl
mov
in
dec
aad
and
aas
push
mov
jno
pop
aaa
jle
mov
pop
mov
outsl
xchg
rclb
push
jno
jle
sbb
or
adc
xchg
out
cmp
loopne
aaa
sub
loopne
lods
jp
es
push
ficompl
or
arpl
imul
lcall
jecxz
repz
mov
std
jb
sbb
push
aad
push
dec
fsubl
pushf
inc
arpl
pop
aaa
jecxz
fsubrp
cld
jg
sub
sbb
mov
mov
jle
std
outsl
mov
jns
pusha
js
inc
xor
sub
jns
push
jge
xchg
lahf
jo
dec
leave
push
stos
aaa
fisubrl
adc
jmp
sbbl
mov
push
ss
pushf
dec
movsb
adc
fwait
in
loope
daa
nopw
je
mov
cli
addr16
mov
dec
sahf
xchg
sub
push
push
lods
pop
add
mov
into
les
bound
dec
push
mov
in
packssdw
add
and
pop
call
fcompl
into
mov
fdivr
fst
fwait
insb
pop
mov
mov
testl
xchg
push
dec
or
test
test
push
sbb
push
mov
test
sub
ret
mov
lret
pushl
mov
inc
or
call
imul
adc
test
jmp
adc
push
sub
push
cmp
icebp
lret
std
in
into
imul
jecxz
mov
xlat
jnp
pop
xor
fiadds
mov
jp
in
loopne
hlt
mov
cmp
bound
add
pop
push
gs
lret
xor
scas
mov
aaa
scas
dec
cmc
sub
pop
in
xor
jno
mov
xor
add
rol
jge
mov
sti
dec
jo
lds
stc
inc
sbb
push
mov
jns
mov
hlt
inc
inc
pop
icebp
fnstenv
outsl
pop
jge
push
mov
push
sahf
mov
jns
mov
or
les
xchg
cmpsl
pop
sub
adc
fisttpl
mov
js
dec
sub
or
repnz
push
cmp
data16
ja
subl
xor
imul
negl
jg
addl
jbe
or
in
repnz
push
push
add
jne
cmc
add
mov
inc
lret
out
mov
pop
add
inc
and
popf
inc
insl
sahf
jno
sub
lret
cli
xor
inc
out
cltd
or
pop
push
inc
pop
jae
mov
lret
sub
addl
dec
xchg
imul
fdivs
xor
xor
pop
jg
orb
cmp
mov
jmp
in
or
lret
jb
mov
or
dec
imul
sbb
xchg
add
call
js
loop
iret
push
cld
cwtl
jne
mov
cmp
sarb
ret
sbb
imul
pushl
into
add
lret
movsl
mov
imul
insb
pop
dec
sbb
mov
and
es
fiadds
dec
fsubr
inc
adc
jb
sbb
rcrl
stos
data16
push
pop
clc
fdiv
insb
bound
mov
cmp
imul
ss
ds
inc
push
adc
mov
aas
inc
cmpsb
enter
fldcw
fdivl
xlat
or
xchg
cmp
lret
mov
jg
cmpsl
sbb
cwtl
mov
fcompl
mov
fstpt
cltd
adc
push
popa
mov
fsubr
les
xchg
lods
mov
mov
mov
mov
aad
call
sti
leave
mov
push
bound
dec
jns
popa
or
mov
ret
ljmp
andb
xor
jl
nop
insl
adc
shrl
push
pop
mov
ror
scas
jbe
sbb
mov
push
mov
inc
mov
inc
inc
push
dec
mov
fwait
lret
inc
inc
cld
test
jbe
movsb
mov
xorl
pushf
stos
jae
scas
push
sub
cwtl
imul
lret
cs
add
ss
popa
hlt
pop
hlt
xlat
and
pop
push
and
mov
xchg
test
mov
pop
xor
jmp
mov
sbb
icebp
sbb
sbb
or
repnz
adc
jmp
push
mov
adc
pushf
fsubs
sti
lock
fsubs
cmp
movsl
cmp
push
push
loop
jae
jle
and
sbb
mov
mov
lahf
xchg
mov
fld
js
add
loopne
icebp
nop
imul
jp
inc
cmp
lret
cmpsb
dec
cmp
mov
mov
sbb
pop
shrb
jle
in
push
xchg
into
xchg
pop
push
jno
mov
test
inc
dec
cmp
scas
shrb
pop
scas
sub
lods
cmpsl
aad
lods
mov
pop
pop
pop
iret
adc
inc
in
push
xchg
std
dec
adc
inc
sbb
repz
push
das
xor
inc
mov
jnp
sbb
jg,pt
mov
sbb
orb
xchg
test
push
mov
cli
xor
clc
push
stos
sub
dec
pop
or
lds
push
xor
and
fadds
inc
in
pushf
sbb
inc
sub
inc
jecxz
call
rorl
pop
and
movsb
enter
test
mov
cmpsb
pop
pop
push
push
sbb
and
mov
add
or
sub
cmc
jmp
or
dec
jg
fwait
pop
aas
inc
int
sbb
in
mov
or
and
mov
push
push
ljmp
sbb
push
mov
mov
outsl
sbb
push
js
loope
scas
mov
push
mov
push
and
xor
mov
xchg
call
sbb
xchg
je
test
cmpsb
inc
mov
je
push
push
imulb
sub
cmp
call
mov
cmpsl
sub
pop
aam
mov
in
sub
sub
in
adc
inc
push
sbb
add
popf
popf
cmp
mov
mov
and
jb
jmp
sub
je
jle
xchg
clc
call
mov
mov
and
addr16
rorb
jae
testl
dec
inc
out
jge
cmp
callw
mov
pop
mov
mov
sub
sahf
sub
rcll
pop
xchg
lods
jg
fadds
testb
inc
pop
mov
fmull
addl
mov
mov
testb
insb
dec
xchg
push
loopne
out
jno
cmpsb
sbb
pop
sbb
loopne
mov
sub
icebp
mov
loopne
inc
in
popf
and
sti
push
out
ja
push
dec
test
in
insb
in
pusha
rcl
and
jbe
arpl
push
arpl
repz
js
add
lods
push
bound
adcb
dec
ret
pop
adc
or
sarl
cltd
jb
imul
vdivps
lds
or
mov
xchg
or
pop
mov
and
jae
jle
insl
scas
pop
sbb
mov
outsb
dec
or
in
mov
fsubrl
scas
pop
out
rcll
data16
sub
cmp
roll
sbb
fdivs
xor
in
sti
xor
xor
cmp
jne
in
clc
push
adcb
mov
int3
iret
or
icebp
push
pusha
sub
jae
pushf
repz
mov
cmpsb
sahf
gs
sbb
inc
pop
int
inc
sti
mov
dec
add
imul
lds
sub
sbb
add
stos
push
ljmp
in
mov
cmp
jb
add
scas
cmpsb
push
addr16
imul
xorb
xchg
mov
inc
xor
mov
jp
js
repz
pusha
stos
stos
test
mov
stos
popf
jle
push
mov
add
pop
xchg
ss
mov
jg
test
lods
cld
addr16
and
pop
aaa
mov
fnstsw
aaa
dec
out
mov
mov
or
push
and
dec
in
xor
mov
mov
insb
sub
je
and
pop
xchg
mov
insl
inc
mov
outsb
mov
in
add
lods
sbb
rorb
push
push
jo
dec
xchg
cli
mov
push
inc
sub
adc
jecxz
mov
movsb
int3
fsts
test
nop
out
in
mov
cmp
jg
call
inc
push
das
lret
pushf
jno
add
jnp
out
fs
repnz
pop
imul
mov
insl
testl
adc
mov
enter
cli
adc
jmp
sub
sbbl
subl
push
aad
movsl
cmpl
daa
mov
dec
jnp
jnp
scas
inc
test
mov
cmpsl
sbb
and
add
fcmovu
int
repz
pop
out
outsl
push
push
cld
jo
adc
push
dec
push
shl
movsb
mov
mov
mov
fistps
dec
adc
xchg
outsb
xor
out
add
cs
push
das
lcall
cwtl
gs
inc
pop
adc
adc
fistps
mov
fbld
mov
jno
jmp
adc
imul
sbb
in
xchg
mov
add
xor
fnstenv
mov
data16
jno
in
bound
pop
xlat
aas
or
shl
add
aas
mov
cmpxchg
out
push
lods
dec
mov
xor
cmc
dec
mov
add
add
or
aad
cmpsl
call
ja
dec
outsb
mov
std
mov
mov
inc
imul
or
icebp
ret
neg
xor
out
mov
sarb
xor
xchg
dec
adc
xor
pop
lds
test
lock
sub
adc
jmp
dec
push
mov
jge
les
loopne
fnstcw
inc
adcb
adc
jle
movsl
scas
mov
int3
js
jne
sub
mov
mov
out
mov
inc
mov
pop
ss
jbe
loope
inc
in
leave
arpl
pop
jnp
fimull
mov
pop
call
popf
int3
and
sbb
adc
adc
scas
sbb
push
sahf
mov
in
imulb
lahf
lcall
mov
ret
mov
lea
pop
fstps
mov
mov
movsb
cmp
xorb
jge
sti
mov
pop
loope
or
jns
jo
out
inc
jmp
dec
sbb
xor
cmp
or
xlat
enter
xchg
call
in
je
jo
test
jno
cmp
arpl
aaa
repz
lcall
lret
test
push
dec
mov
andl
rorb
and
adc
sub
xchg
fadds
jne
icebp
mov
cmp
clc
mov
add
outsl
aaa
sub
jl
sbb
rcll
int3
xlat
stos
sub
stc
sub
pusha
sbb
add
std
aad
fs
je
xor
or
loop
sbb
ljmp
mov
mov
arpl
or
add
cwtl
decb
pop
mov
mov
popf
push
nop
xor
push
mov
out
hlt
mov
lret
aaa
adc
sub
clc
mov
fwait
dec
push
arpl
ror
cmp
cli
add
loop
insl
xchg
out
add
call
in
shll
mov
sbb
rolb
xor
inc
bound
mov
mov
das
dec
adc
cmpsl
stos
cmp
dec
cs
pusha
jne
testl
inc
inc
inc
loope
add
mull
cli
sub
fdivrl
add
mov
mov
push
out
fidivs
arpl
add
or
xor
sub
jbe
gs
sbb
stc
data16
inc
mov
inc
arpl
fstp
sub
push
push
nop
aam
or
sbb
fistps
push
outsl
rcrl
adc
in
xor
out
fs
icebp
sub
es
into
in
repz
sub
sub
mov
lds
stos
int3
in
popf
fidivs
dec
mov
movsb
adc
cmp
int3
xor
inc
rclb
movl
int
arpl
inc
test
lea
int3
cli
iret
mov
in
adc
mov
pusha
lcall
and
pop
nop
fcoml
push
scas
rcl
loopne
mov
pop
outsb
adc
outsl
testl
imul
sub
lea
jmp
and
scas
sub
sbb
push
mov
fistps
ret
jmp
add
mov
enter
jcxz
dec
pop
leave
mov
cmpsb
shlb
in
sbb
clc
adc
adc
mov
nop
test
out
mov
pop
sub
lea
mov
jnp
imul
jmp
inc
push
in
in
aaa
cmpl
sbb
add
daa
mov
arpl
fwait
jl
push
mov
addr16
pusha
add
sub
jne
rclb
daa
inc
and
adc
negb
inc
pop
jp
aas
and
mov
pop
cwtl
clc
mov
adc
insb
xchg
jne
ret
lahf
sub
addr16
nop
or
mov
xchg
stos
out
cltd
push
lret
imul
jle
shll
xchg
push
test
in
or
mov
into
jle
push
mov
push
cmp
fdivrp
stos
dec
lret
cmp
shrl
cwtl
or
cli
lods
je
push
jnp
push
sbb
lcall
and
pop
lret
add
fldt
ss
cli
cmp
js
lret
inc
repz
push
add
and
ljmp
jne
stos
push
push
stc
stc
lcall
sub
ljmp
loop
cwtl
into
dec
aad
fsubl
lods
fs
sub
push
shrl
lahf
lods
push
mov
dec
orb
push
imul
cmp
popl
leave
lds
and
push
xchg
cmpsb
adc
sub
scas
cmp
push
and
repz
cltd
add
inc
pushf
xor
into
inc
ds
sub
dec
adc
and
lret
or
rol
fbld
jl
pop
dec
repnz
loopne
jmp
xchg
stc
xchg
arpl
and
adc
inc
call
jecxz
aas
push
jns
and
xchg
leave
aad
push
sarb
insb
into
clc
push
pop
in
hlt
xchg
rolb
cwtl
gs
cs
mov
in
cmc
sub
push
sub
cld
sub
mov
adc
jp
push
cmp
stc
mov
jmp
les
mov
cmpsl
push
add
xchg
mov
mov
pop
xchg
ds
sbb
cmc
mov
lret
inc
sub
push
not
rolb
xchg
push
fs
cmpsl
inc
xor
hlt
cltd
mov
inc
clc
adc
pop
int
das
jge
sbb
sub
lock
mov
mov
ficoms
test
inc
cmp
xor
pop
xor
pop
jge
pop
dec
inc
pop
lahf
lcall
adc
je
adc
outsb
jno
iret
out
inc
hlt
sahf
rolb
xor
sbb
xchg
fsubs
hlt
pop
mov
add
leave
mov
xlat
int
sbb
inc
ss
xchg
xor
push
movsl
xor
je
rcr
lahf
or
xor
jge
cld
xor
or
loop
repz
das
jb
sar
mov
xor
bound
sahf
or
cmpsl
dec
cld
xchg
addr16
mov
inc
loop
pop
and
aaa
rolb
push
ficomps
jb
scas
or
or
mov
sub
inc
xchg
cmp
jnp
jmp
mov
xor
push
jp
jno
mov
iret
mov
dec
push
imul
sahf
dec
xchg
xchg
test
mov
lahf
mov
lcall
inc
add
lods
scas
divl
loopne
out
push
sbb
daa
jns
cli
dec
negb
and
mov
sub
orb
inc
lods
lods
lods
push
sub
rcl
rcrl
pop
fidivrs
test
arpl
daa
out
mov
push
bound
ret
or
mov
pop
push
cmp
lret
cltd
aam
xor
loopne
mov
inc
addr16
nop
xlat
icebp
add
lcall
inc
push
or
pop
pop
jo,pn
sahf
adc
ret
jg
lods
sub
mov
mov
cld
jae
or
sub
pusha
add
xor
dec
movsl
adc
pop
mov
addr16
in
cmc
push
push
cmpl
rep
daa
cwtl
cmova
xor
mov
in
inc
push
jae
xor
mov
sbb
push
mov
scas
data16
ds
cld
testb
xchg
push
push
add
mov
insb
iret
movb
mov
xchg
insb
inc
mov
or
arpl
sub
pop
gs
mov
leave
in
stos
jae
mov
mov
filds
cwtl
adc
fsts
jns
jb
movsb
cld
jbe
push
and
test
loopne
mov
mov
shll
jae
shrl
icebp
jnp
xor
push
test
shl
enter
and
and
push
pop
stos
add
xchg
fimull
inc
ljmp
and
stos
pop
leave
xchg
inc
gs
jl
lods
in
mov
lret
pop
dec
add
and
out
jmp
bound
pop
mov
pop
stc
stc
icebp
push
and
aam
dec
push
pop
mov
xchg
push
mov
js
arpl
mov
sub
jle
lcall
fmull
push
rol
mov
shll
push
sbb
mov
sti
dec
cs
lea
mov
xor
and
xchg
sbb
and
lret
rcll
leave
in
jb
push
orl
add
std
sub
pop
mov
aad
or
lds
inc
xchg
mov
xchg
movsb
je
mov
mov
sti
jne
jmp
inc
loope
sbb
clc
sub
and
fsubs
bound
jl
fldenv
push
mov
cmp
or
ja
sahf
aam
insb
fildl
mov
repz
test
pushf
jge
mov
jne
lock
sbb
xor
out
and
mov
cs
mov
xchg
addb
lret
xchg
repnz
mov
std
test
es
and
das
aas
lods
jg
sub
int
aam
mov
xchg
xchg
cli
negl
xchg
xlat
add
or
add
and
outsb
ror
pop
push
shrb
test
add
pushf
call
addl
stos
nop
add
inc
push
iret
out
xorb
daa
mov
hlt
cmpsl
jb
sub
int
xor
sbb
pop
sbb
shrl
loope
arpl
stos
mov
xchg
push
lock
pushf
outsb
xchg
mov
stos
out
mov
gs
aas
lretw
and
std
mov
cmc
cmpsb
mov
and
les
xlat
in
lret
jecxz
sub
arpl
xchg
loop
inc
pop
sbb
test
out
inc
iret
sbb
stos
pushf
mov
lea
sbbl
push
rcll
cli
rorb
mov
xchg
xor
pop
pop
pcmpeqb
les
mov
mov
xchg
cmc
mov
dec
aam
push
jge
cli
cld
sbb
mov
dec
imul
dec
jmp
data16
int
arpl
dec
movsl
lret
std
cwtl
sub
jbe
sbbl
fisubrs
or
sbb
sbb
fnstcw
push
daa
imul
sub
pop
push
ss
mov
sub
mov
stc
adc
sub
ret
mov
mov
rolb
out
rorb
add
inc
pop
std
or
repnz
cmp
stos
incl
mov
sub
xchg
icebp
leave
adc
xor
stc
jo
sbb
push
mov
shlb
sar
push
andb
stos
push
cmc
inc
cmp
mov
or
dec
dec
ret
daa
sub
jl
pop
mov
mov
mov
cmp
cmp
pop
xchg
push
lcall
call
cwtl
lods
mov
mov
cli
scas
jle
or
inc
das
or
int
mov
or
xor
addr16
xor
mov
lret
cmpsb
arpl
aam
jmp
je
nop
fbstp
mov
dec
bound
out
mov
rcrl
pop
in
push
inc
enter
xchg
or
xchg
stc
rcl
stos
fsubrs
test
ljmp
inc
cmpl
stc
lret
push
xchg
sahf
mov
push
fwait
js
xchg
push
bound
xor
cmp
rorl
push
std
push
jl
jp
cmp
mov
push
fistpl
adcl
dec
cmp
jecxz
lock
jo
and
pushf
mov
sbb
stos
loope
inc
xchg
hlt
subb
sub
subl
inc
pushf
push
lods
mulb
mov
xchg
outsl
add
enter
fsubl
xchg
cmpsl
test
sbb
xchg
mov
dec
in
mov
mov
and
fnstenv
and
inc
cmp
enter
aam
ljmp
das
loope
pop
outsb
shll
cs
cmpl
leave
bound
mov
mov
sysenter
movsb
mov
test
frstor
imul
adc
jo
xor
mov
shll
shrl
mov
fbld
jge
ja
xor
insb
mov
fmuls
loop
inc
inc
push
jnp
pop
cmp
scas
xchg
inc
mov
rclb
and
adc
fcoml
mov
inc
xor
or
jl
sahf
mov
rcpps
push
enter
and
stos
jecxz
inc
dec
jg
lahf
jno
mov
sbb
mov
inc
dec
scas
test
int
mov
outsl
addb
shll
mov
xchg
lods
pop
imul
test
and
xchg
rorl
or
sub
mov
jp
push
mov
cmp
mov
xor
mov
iret
push
jge
lea
or
inc
add
push
mov
xor
add
js
cmp
stos
lods
shll
fcompl
nop
shrl
or
js
lea
pop
mov
jno
int
adc
cmp
xor
repz
push
fdivrs
mov
adc
ret
cmp
jmp
adc
cmpb
shll
stc
xchg
iret
mov
pusha
pop
push
xor
insl
mov
add
mov
lds
decb
and
sub
pop
idiv
push
data16
push
insb
fwait
inc
or
sub
sbb
or
adcb
mov
mov
aas
scas
fldl
pop
and
fisubrs
or
stos
jnp
sbb
sub
ret
add
aas
inc
push
stc
cld
mov
ds
push
test
jmp
cmpsl
aam
jne
jbe
pop
mov
jp
push
int
enter
add
pop
xchg
mov
cwtl
inc
enterw
and
mov
cwtl
adc
jb
and
pop
in
ja
pop
xor
push
xchg
dec
out
inc
mov
sub
lods
pusha
fwait
jle
iret
scas
cmp
leave
andl
icebp
imul
cmp
nop
jbe
test
ret
lret
jb
inc
in
mov
mov
pop
cwtl
or
add
outsl
xor
and
mov
fwait
iret
mov
loopne
inc
jbe
sarl
aad
or
adc
repz
and
xor
into
fldcw
iret
add
xorl
inc
jp
mov
ljmp
icebp
stc
movsb
mov
pop
sbb
pop
pavgw
lahf
cmp
jle
push
das
fnstcw
enter
int3
scas
mov
stc
insl
enter
movsl
ja
sbbl
mov
outsl
pusha
rcll
sbb
cmpsl
cmc
push
imul
pushl
and
pop
cmpsb
lods
jae
adc
loop
jb
jno
inc
int3
aaa
decb
shlb
int3
push
pop
xor
lds
xchg
xchg
stos
xor
and
mov
int
xchg
adc
cli
movsl
dec
test
ja
jns
and
in
lods
test
jmp
std
bound
adc
icebp
pop
mov
inc
mov
pop
pop
push
cmp
test
fnsetpm(287
aad
sbb
pop
add
cmp
lds
push
sahf
inc
xchg
xchg
cmp
mov
pop
push
xor
jo
mov
pop
jp
int
testl
or
movsl
scas
pop
xchg
xor
push
mov
icebp
and
jbe
mov
pop
mov
clc
adc
fadd
mov
scas
inc
test
mov
inc
mov
sbb
xchg
mov
cli
mov
xchg
inc
shrb
jecxz
inc
pop
push
mov
or
bnd
xor
and
fidivrs
dec
ja
pop
aam
jnp
lods
add
sub
stos
addl
dec
gs
adc
out
jbe
inc
stos
jbe
inc
push
jns,pt
add
loop
bound
and
or
cld
and
jl
inc
stos
cli
fstpt
ficoml
addr16
jp
cmp
fcmovb
pushf
inc
xchg
stos
cli
clc
mov
mov
mov
push
outsb
lret
repz
iret
push
push
push
mov
daa
ficompl
or
test
and
in
jg
cmp
jno
or
lahf
adc
gs
xchg
fs
cmp
outsl
pop
ret
fadd
sahf
jmp
je
aaa
shl
adc
sbb
push
popf
push
jge
mov
mov
lds
int3
test
aad
jmp
cmp
in
cmc
push
cmc
cmpsb
push
mov
fwait
adc
jne
sti
movsl
lods
push
stos
int
btr
mov
insl
inc
insl
xor
push
arpl
scas
dec
rcr
rorb
inc
mov
outsb
pop
out
inc
mov
mov
adc
iret
scas
cmp
dec
ret
divl
lods
sub
fisttpl
fbstp
daa
loopne
outsb
lock
in
jp
sahf
jbe
mov
fs
rcll
aad
test
add
sbb
out
test
jmp
inc
or
call
lcall
jns
aam
dec
xor
ret
push
xchg
cld
push
ret
fildll
pop
mov
mov
add
andb
and
in
in
bound
mov
ljmp
sub
data16
mov
cmp
ret
out
je
andb
aaa
stos
pop
test
sarl
and
cmp
std
aad
out
in
in
and
cmp
xchg
enter
or
push
and
out
sub
xorb
push
test
popf
mov
mov
fisubrl
mov
fimull
mov
cmpb
subb
sti
push
sbb
mov
xchg
enter
enter
sbb
out
adc
add
movsb
lods
pop
jno
sbb
out
insb
and
in
out
jbe
push
adc
fwait
in
dec
adc
xor
insb
push
mov
push
sbb
mov
inc
adc
leave
mov
in
sbb
push
mov
call
out
mov
ret
xchg
dec
or
iret
dec
and
hlt
mov
push
adc
sub
icebp
pop
xor
ret
push
ficoms
sbb
and
cmp
mov
mov
ror
call
sahf
add
mov
inc
and
adc
cmp
cltd
or
adc
xchg
lods
icebp
xor
nop
or
mov
lods
stos
or
push
btr
sub
inc
adcb
push
and
scas
mov
mov
xchg
pushf
ss
sbbb
push
loopne
add
in
push
out
lods
lret
inc
xchg
inc
shrl
cmp
push
cmp
clc
sbb
sbb
pop
sub
dec
and
cmp
or
mov
pop
inc
mov
loope
test
cmp
xchg
dec
adc
xchg
cmp
inc
punpckldq
cwtl
arpl
cmp
nop
mov
mov
adc
sarb
out
mov
mov
sti
mov
subl
dec
jnp
movsl
mov
out
imul
adc
pop
cltd
cmpl
in
and
mov
es
lea
jnp
xchg
and
negl
cmp
or
movsl
add
sbb
inc
and
cmc
sub
push
jp
in
sub
lret
sbb
push
xchg
movsl
mov
lcall
push
popa
and
shl
sbb
mov
lahf
fnstsw
fs
inc
call
cwtl
xor
dec
adc
ffreep
scas
nop
aam
and
insl
push
sub
add
setle
aad
iret
or
lea
push
sbb
push
sbb
xlat
pop
adc
jge
add
sbb
pushf
dec
sub
push
ljmp
dec
sti
mov
insb
xchg
jae
mov
in
xor
sub
loopne
jo
cmp
into
jge
int
push
lret
pusha
lods
testl
dec
outsl
ret
push
fdivp
lret
fisubl
int
and
ficoms
out
cmp
mov
mov
cmpsl
hlt
icebp
jbe
imul
ja
mov
xchg
xor
adc
push
lock
in
push
imul
int
mov
inc
imul
fcoml
fldenv
xchg
pop
pop
lcall
daa
nop
push
repz
in
std
cmpsl
push
cmp
cmpb
push
jmp
jns
mov
stos
cmp
popf
xchg
mov
lods
xchg
lret
lahf
pop
fdiv
jnp
mov
mov
pop
dec
out
out
inc
pop
mov
aaa
mov
inc
mov
mov
dec
lea
pop
push
or
adc
jo
mov
jg
shlb
repz
xor
inc
xchg
cmpsl
rorl
outsb
mov
add
enter
out
sub
push
pop
mov
xor
or
or
sub
mov
xchg
xchg
ljmp
ljmp
cwtl
mov
mov
cmp
pop
mov
fcomps
push
sbb
arpl
jg
negb
movsb
out
sbb
sbb
push
mov
mov
pop
jmp
lea
xchg
xchg
stos
addb
push
cmc
scas
xchg
mov
lahf
iret
in
out
inc
lcall
loope
dec
test
pop
jnp
ja
les
repnz
std
inc
out
mov
lods
orb
in
pop
adc
xchg
push
xchg
in
xor
sarb
mov
push
arpl
push
pop
jecxz
pop
ret
pop
ds
testl
and
push
xchg
push
mov
nop
dec
pop
push
cwtl
inc
fadds
shlb
shlb
test
stos
loope
xchg
pop
clc
dec
jl
add
push
loope
fs
adc
adc
add
pop
nop
mov
jl
jne
add
xorb
in
aaa
test
fxtract
imul
xchg
jmp
cmpsl
xchg
xchg
fiadds
aas
cs
fs
lock
and
pusha
mov
jne
rclb
roll
cltd
mov
mov
stc
mov
lds
popf
in
push
in
inc
and
and
cltd
icebp
cmp
cmp
je
cli
cltd
shl
lret
adc
ret
adc
mov
mov
out
xchg
add
mov
daa
scas
mov
cli
push
mov
lea
mov
push
push
sbb
sahf
cmp
lret
xor
or
jecxz
cmp
int3
and
je
stos
int3
push
lock
push
mov
cmp
xchg
rcrb
add
or
test
or
push
inc
je
xor
dec
testl
push
fcmovnb
lcall
out
push
sbb
pavgb
xchg
dec
xchg
adc
and
xchg
fs
out
or
test
adc
ljmp
out
pop
xchg
pop
mov
fwait
jno
and
or
mov
cmpsl
xchg
cmp
aas
pop
cltd
enter
pop
xchg
in
pop
ret
stos
inc
inc
fwait
test
sarb
push
cli
mov
bound
movsl
cs
push
rol
mov
call
pusha
mov
stos
imul
inc
stc
das
mov
jecxz
inc
mov
cmp
ds
xchg
call
jns
aas
mov
push
cmpsb
xor
fimull
pop
xchg
adc
pop
enter
call
fistps
fistl
push
aas
lods
pop
mov
stc
cli
inc
add
sbb
dec
sbb
inc
and
mov
or
sub
daa
daa
or
out
sub
push
mov
loope
dec
sub
pop
in
push
pop
scas
mov
js
inc
test
sti
push
and
aam
jle
push
stc
fisttpll
xor
jbe
cmp
mov
inc
inc
aaa
dec
ja
add
das
xor
xchg
out
inc
mov
hlt
nop
xor
movsl
mov
mov
push
rorl
sub
aaa
scas
and
mov
lcall
leave
imul
ret
inc
stc
lock
sbb
ljmp
push
and
jmp
das
lret
scas
mov
or
fcoml
into
rorl
les
mov
xchg
mov
cmp
mov
stc
dec
mov
xchg
xchg
or
shlb
push
adc
dec
clc
jmp
sub
jo
xchg
lods
add
mov
jb
leave
in
pop
repnz
mov
cmpb
les
sti
pop
inc
js
stc
icebp
movsb
aaa
mov
pop
loope
pop
mov
js
and
mov
pop
mov
adc
into
rclb
cli
clc
pop
fxch
sbb
insb
test
pop
xor
aad
mov
ret
out
fisubs
cmp
add
and
stc
push
cmp
adc
sarb
inc
mov
push
sbb
mov
mov
imul
push
outsb
movsb
and
mov
stc
ret
sti
xchg
stos
cmpsl
fsubp
sbb
std
popf
gs
add
pop
pop
jno
std
aaa
fldenv
mov
shll
jle
xchg
mov
mov
xchg
inc
mov
std
jns
cmp
scas
xchg
jo
mov
mov
inc
insl
bound
dec
lock
pop
jge
jmp
icebp
movsb
mov
rcll
jne
xchg
sarb
in
mov
aaa
rcl
imul
int
sbb
ret
adc
icebp
out
inc
add
outsb
pop
mov
les
nop
test
push
jb
movsl
inc
sub
iret
xchg
out
adc
push
and
adc
insb
add
mov
pop
or
call
push
inc
dec
sub
adc
xor
loop
ljmp
push
aas
pop
das
jns
xchg
sarl
mov
jae
lds
mov
loope
dec
fld
push
outsl
or
mov
push
adc
dec
loop
jg
movb
iret
rorl
in
mov
xchg
scas
out
xchg
dec
adc
ss
clc
xor
fwait
rcrl
mov
lea
repz
sub
arpl
mov
mov
mov
xchg
xchg
imul
push
loopne
pop
cmpsl
and
outsl
mov
rol
test
sbb
cmpsb
lret
or
pop
push
sub
cmp
xchg
sti
aaa
or
sahf
cltd
jne
lds
lret
inc
xor
mov
inc
std
ror
mov
add
push
pop
cld
adc
push
data16
jb
outsb
sub
mov
enter
mov
xchg
mov
lret
lret
iret
cmpsb
jae
jmp
cmp
inc
push
pusha
xchg
dec
jo
cmp
pop
xlat
mov
ss
jl
cs
nop
sub
ficoml
test
jg
pusha
imul
and
push
addb
xchg
movl
dec
test
sarl
xor
sub
hlt
cli
ret
add
xchg
push
pop
test
pop
or
mov
push
mov
cmpsb
fsubs
sbb
xor
loope
adc
aam
fidivrs
hlt
ffree
inc
mov
dec
repnz
xor
xchg
inc
stos
add
mov
inc
and
decl
pop
iret
addr16
arpl
sub
lock
fistpll
lret
hlt
inc
outsb
in
lea
aad
loop
je
inc
cmp
sbb
fisttps
pop
ret
inc
xor
mov
stc
sti
test
jecxz
mov
ljmp
shll
inc
sbbl
rclb
xchg
sahf
lcall
dec
sub
lods
pusha
pop
dec
dec
cmp
jmp
add
sub
mov
fwait
add
add
daa
mov
lret
ret
push
stc
fsts
jle
add
aad
int3
inc
in
xchg
cltd
movsb
mulb
push
dec
ret
xor
push
inc
inc
inc
jge
ret
repz
icebp
mov
mov
mov
aad
bound
aas
ret
dec
sarl
dec
divl
loop
loope
jbe
loopne,pt
xor
mov
mov
clc
jb
inc
push
mov
sub
inc
in
dec
jle
lods
imul
dec
xlat
cli
sub
pop
xchg
mov
es
cmp
push
push
inc
push
sub
das
insb
mov
repnz
sarl
int
mov
fwait
lea
pop
cmpsl
xchg
stos
jbe
clc
or
fistl
and
mov
and
adc
lods
je
jmp
cmc
shr
cmp
xchg
mov
jbe
repz
mov
mov
iret
adc
xchg
add
ljmp
aam
pop
out
icebp
pusha
jl
xlat
fwait
push
inc
push
imul
mov
fidivl
aas
imul
jle
mov
xor
iret
mov
scas
sbb
mov
mov
daa
rolb
fildl
push
mov
testb
xchg
mov
jge
adc
clc
push
inc
push
int
inc
mov
dec
or
mov
loope
jb
das
outsl
fcmovnb
int3
pop
mov
xor
dec
or
mov
xchg
outsb
dec
mov
fidivs
xchg
mov
add
pop
adc
mov
pop
mov
add
inc
test
add
cs
movsb
outsl
gs
ret
sbb
push
push
bound
imul
icebp
push
mov
sbb
mov
or
insb
loope
test
cld
jp
cmp
mov
test
adc
jmp
cmp
and
mov
cmp
in
repnz
mov
mov
in
inc
cli
xor
fiadds
enter
push
out
xlat
outsb
fdivr
mov
out
leave
les
adc
js
dec
insb
shll
dec
shl
xor
mov
xor
scas
sub
xlat
insb
add
adc
push
adc
push
loop
jecxz
xchg
dec
xchg
cmp
popa
or
push
pop
bound
inc
mov
fwait
sub
push
sub
les
cmp
xor
mov
out
in
pop
je
mull
cli
pop
popa
lahf
jmp
dec
or
inc
cld
sub
adc
cmc
fwait
test
andl
subl
pop
or
insb
mov
pop
leave
pop
mov
negb
or
mov
fmuls
aaa
jo,pt
mov
bound
stc
and
mov
push
loopne
test
stos
fwait
push
pusha
jge
or
cmp
jne
fsubs
xor
dec
in
loopne
push
out
dec
rcrb
test
push
adc
scas
add
pop
mov
adc
push
cmp
xchg
inc
scas
mov
push
mov
in
aaa
sub
dec
rcll
pushf
adc
call
pushl
jl
rcll
mov
lds
jo
lea
push
push
sbb
inc
push
xchg
mov
add
jmp
mov
dec
push
mov
push
out
mov
fisttps
lock
push
aad
popf
jns
jmp
outsb
aam
mull
mov
add
xchg
imul
push
std
xchg
push
push
pop
mov
cltd
sti
xchg
mov
xor
mov
dec
xchg
ss
jle
out
sahf
divb
push
dec
leave
push
icebp
popf
jbe
cmc
insl
sub
popa
mov
dec
dec
sub
adc
jne
bnd
pop
mov
dec
jle
loop
ds
dec
mov
mov
add
mov
scas
mov
idivl
dec
mov
sahf
jnp
stos
add
dec
test
inc
cld
xchg
test
les
ds
sub
pop
pop
sub
sbb
enter
loope
push
scas
mov
dec
mov
std
pop
rcrb
data16
repz
ret
lahf
outsb
sub
jo
ret
inc
jle
ja
sbb
and
sbb
enter
or
scas
mov
neg
lahf
in
cmp
test
call
xor
ffree
adc
xchg
jbe
hlt
push
cmp
shll
push
gs
or
outsl
movaps
cmp
dec
pop
dec
sub
movsb
nop
xchg
in
jnp
adc
pop
sbb
outsb
cmp
xor
pop
mov
dec
mov
and
imul
addr16
imul
fmull
jnp
in
mov
sub
ljmp
jno
or
lahf
out
sbb
testb
xor
ror
xchg
aad
and
pop
adc
test
mull
mov
sbb
xor
sbb
pop
in
call
sub
inc
cli
jbe
mov
loopne
sbb
int3
int3
xor
xchg
add
sub
cmp
xchg
lcall
ja
sarl
dec
pushf
fstpt
jmp
xor
mov
pop
shll
loopne
ss
pop
cmp
hlt
clc
and
xlat
sbb
movb
sbb
fcoml
gs
cmp
pop
mov
jg
push
decb
and
mov
lock
push
push
and
cmovg
aas
mov
js
pop
pop
xor
mov
lock
mov
push
dec
pop
ljmp
dec
mov
and
pushf
movsl
or
mov
mov
scas
cli
call
jmp
jnp
dec
xchg
iret
sub
sbb
and
mov
ds
lret
mov
orl
mov
fmull
xchg
or
add
xor
bound
mov
test
jmp
and
push
jnp
and
orl
jmp
sub
xor
int
cs
ficomps
fs
into
insl
popa
and
xchg
sbb
out
xchg
lcall
adc
loop
fidivrs
repnz
fidivs
filds
ss
xchg
add
xchg
mov
dec
mov
mov
pop
mov
das
fcoms
sbb
std
pushf
mov
mov
inc
xor
push
mov
xor
dec
repz
leave
xor
xchg
in
mov
push
push
fcom
ljmp
sahf
or
sbb
mov
call
and
data16
leave
mov
mov
add
aam
mov
jp
ss
sub
shrl
ja
imul
inc
addr16
scas
imul
fs
fldcw
push
insb
fcmovb
or
xor
mulb
or
sub
and
pop
mov
fs
fisttpll
add
ds
or
jmp
fidivrl
push
sub
pop
arpl
in
es
out
das
ret
sub
mov
mov
adc
push
shl
or
cmp
xchg
adcb
je
sub
popa
aad
imul
cli
xor
inc
and
dec
gs
adc
cwtl
or
test
imul
ja
les
sbb
mov
and
sti
outsl
push
inc
sub
ror
and
fcoms
sahf
mov
jnp
inc
fdivr
xor
les
stos
mov
into
sahf
or
shr
lds
call
add
fs
or
sub
jecxz
cmpb
icebp
ljmp
inc
jle
hlt
les
inc
push
cmp
pushf
add
leave
xchg
jle
lcall
les
or
and
pop
sub
inc
cmp
mulb
shr
test
mov
leave
xlat
mov
sub
pop
fs
mov
cmp
les
out
lret
fisttps
mov
mov
mov
shlb
std
sub
mov
xchg
outsl
pop
jne
pop
sbb
adc
sbb
jl
pop
sub
sub
js
outsb
or
inc
inc
mov
vmovd
roll
pusha
xor
push
or
mov
sbb
lods
mov
sbb
push
fidivrs
cs
sti
add
jmp
cmpsb
xchg
lea
sub
mov
fldl
pop
cltd
loopne
inc
enter
movsb
mov
add
adc
gs
jl
ret
xor
popf
stos
mov
mov
sarb
outsl
orb
enter
shr
pop
test
ret
push
jnp
enter
rolb
scas
mov
dec
adc
arpl
sbb
xchg
fbstp
and
pop
xor
jmp
int
push
jl
aam
cmpsb
nop
mov
jecxz
inc
mov
or
imul
sbb
je
xor
addr16
das
insb
or
ljmp
add
push
daa
dec
lea
fidivs
and
xchg
dec
lods
xor
mov
jp
inc
cwtl
push
aam
jno
and
popf
xor
cmp
dec
shl
pop
rcrb
xor
js
and
sahf
or
or
xor
adc
in
pop
xor
mov
addr16
sbb
push
out
lret
out
sbb
les
pop
mov
jno
mov
mov
dec
clc
ret
pop
in
xchg
int
cmp
xor
push
sbb
mov
sbb
loop
push
mov
stos
and
push
dec
imul
adc
or
cld
lcall
lock
pop
hlt
mov
push
jle
inc
cmp
cltd
jl
mov
cwtl
jno
loop
sahf
sub
jbe
adc
and
cmpl
xchg
rcl
mov
or
xor
ds
out
adc
push
mov
sub
out
mov
out
jmp
pop
lahf
add
push
int3
fdivs
cld
xor
lret
xor
sub
xchg
cs
into
fbstp
add
lcall
inc
adc
leave
mov
mov
loope
das
mov
add
loope
arpl
or
push
fdivr
adc
ds
sarl
jbe
mov
push
adc
sub
push
sbb
popa
xchg
lea
cmp
cmpsb
hlt
out
and
inc
push
lock
cli
mov
xor
xlat
adc
jne
adc
cld
pop
das
push
shl
push
push
test
and
xchg
mov
icebp
loope
xor
dec
sbb
popf
mov
pusha
inc
xchg
pop
or
in
push
aad
stos
add
cltd
movsl
daa
xchg
call
dec
xor
cmpsl
pop
add
inc
xchg
mov
mov
scas
aam
outsb
in
push
mov
insl
push
push
insl
clc
sub
xor
jg
dec
add
inc
lods
jl
jno
repz
out
stos
xchg
or
mov
mov
sub
inc
sbb
add
cmp
lcall
xchg
imul
xchg
mov
mull
fmulp
xchg
imulb
js
aad
jnp
stos
push
sub
and
adc
lock
xchg
aas
push
pop
mov
xchg
push
ss
xor
inc
mov
lods
rcrl
lods
xchg
jecxz
mov
std
mov
mov
inc
inc
cmpsl
aaa
jp
imul
clc
test
mov
ljmp
imul
push
xchg
mov
xchg
and
or
sub
ss
add
mov
pop
outsl
js
inc
inc
sbb
jns
inc
mov
jp
xor
icebp
or
or
and
popa
les
adc
out
push
push
inc
gs
fiadds
loop
push
dec
in
dec
pop
stos
pusha
das
xchg
out
mov
adc
int3
dec
aad
bound
scas
jp
inc
mov
push
ret
push
lret
clc
loope
or
lds
rcrl
dec
and
fidivrl
jbe
xchg
gs
shl
push
mov
mov
cmc
pop
shrl
cmp
ret
cwtl
in
or
xor
push
dec
mov
mov
imul
lret
jmp
cwtl
sub
aad
cmp
push
repnz
jg
dec
lahf
movsb
nop
inc
sti
out
sti
mov
mov
out
push
inc
dec
aas
fwait
sub
sbb
push
inc
scas
aad
and
cmp
xchg
cmp
data16
sahf
sbb
iret
ret
test
int3
xor
lea
addr16
cmpsb
insl
or
cmpsl
scas
add
or
fidivrs
push
addl
frstor
push
ror
gs
in
mov
aam
dec
and
enter
sub
inc
jns
push
movzbl
adc
mov
jecxz
addr16
and
pop
test
out
pop
sbbb
pop
lock
jmp
lds
mov
lcall
nop
popf
out
inc
out
mov
std
or
lahf
cmc
jl
xchg
ror
int3
nop
or
add
mov
mov
inc
dec
test
xchg
sub
js
into
dec
xchg
mov
iret
mov
movb
mov
cmp
outsb
or
insl
mov
xor
pusha
call
bound
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
add
dec
add
lock
add
dec
add
add
push
add
add
add
add
add
add
