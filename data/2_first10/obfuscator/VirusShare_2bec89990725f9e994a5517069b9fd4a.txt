add
pusha
or
xor
orps
movw
sub
adc
decl
jmp
mov
cmp
sbb
push
stc
pop
sub
jmp
cmp
in
rolb
cwtl
movb
adc
psubd
or
paddd
add
push
xchg
pop
psraw
sbb
jg
punpcklbw
sbb
xor
movb
push
sahf
pop
xor
jmp
add
ret
or
jmp
jnp
movups
adc
shl
adc
jg
xchg
movl
pminsw
sub
jnp
jmp
xor
stos
or
adc
add
jne
movb
and
xor
adc
jb
or
psrlq
add
jmp
jmp
dec
jge
jmp
adc
or
push
lahf
pop
sbb
adc
jns
movb
push
xchg
pop
add
push
inc
pop
add
and
xorps
add
jmp
sub
pop
cmp
xor
push
cmc
pop
add
movl
push
xchg
pop
pcmpgtb
jmp
and
pop
mov
mov
sbb
jl
add
imul
xor
ror
je
pmaxsw
or
sbb
and
jbe
push
inc
pop
and
ja
xchg
movw
psrad
ja
cvtpi2ps
xor
jg
and
adc
or
adc
paddw
imul
psubd
shr
or
js
movl
and
punpckhdq
adc
push
xchg
pop
sbb
sub
push
dec
pop
jae
sahf
movb
jmp
or
xchg
pop
jns
pand
shl
and
sub
jmp
imul
xor
pavgw
push
xchg
pop
dec
cmpl
jne
or
mov
jmp
add
shlb
push
out
lock
ds
mov
negl
int3
les
push
and
ljmp
leave
cmp
leave
cmp
pop
xchg
cld
xor
out
xor
scas
lods
sub
in
fisubl
ret
mov
jb
cmp
sar
xor
sub
and
and
mov
aaa
push
sar
xor
jnp
or
cld
xor
cmp
pop
xor
pop
xor
aam
xchg
ss
sub
add
xchg
pop
ret
out
pop
xor
mov
and
cmp
cmp
xor
movl
ss
xor
test
inc
sarb
xor
cmp
xor
mov
je
xchg
inc
sbb
andb
mov
xor
stos
jb
xchg
push
push
xor
scas
mov
xor
mov
and
mov
pushf
and
jmp
ss
cmpsb
jb
xor
xchg
data16
cltd
xor
movl
or
mov
pushf
mov
ss
dec
adc
stc
aaa
dec
adc
inc
rcr
xlat
addr16
push
movsb
and
leave
cmp
or
mov
mov
mov
xchg
icebp
inc
jl
mov
dec
jge
div
aaa
cmp
dec
scas
mov
mov
mov
ss
in
int
dec
je
xchg
fistpll
mov
fistpll
mov
lret
aaa
xor
inc
jle
mov
data16
ss
aaa
jb
dec
cld
ds
inc
jle
mov
mov
mov
push
push
sub
cmpsb
push
sub
cmpsb
push
sub
cmpsb
push
sub
cmpsb
push
sub
cmpsb
dec
jge
addr16
jge
mov
aas
ljmp
jecxz
add
mov
jnp
ss
mov
in
aas
jmp
dec
lret
aaa
js
into
es
or
mov
push
xor
enter
xchg
or
sti
cwtl
or
mov
cmp
push
cmpb
mov
and
dec
mov
xor
aaa
cmp
inc
mov
mov
cmp
enter
mov
jmp
out
int
sahf
cmp
inc
lods
aaa
ljmp
aaa
arpl
les
mov
std
mov
mov
leave
sub
cmp
loop,pt
int
in
fsts
jns
test
fldcw
mov
xor
cmp
loop,pt
int
in
fnstenv
les
test
popa
leave
adc
imul
aas
lock
mov
lret
mov
cli
mov
cmpb
out
aaa
xor
xchg
aas
divb
dec
jge
idiv
aaa
xor
pop
mov
mov
enter
aaa
sbb
iret
fcoms
mov
nop
mov
mov
dec
les
push
stc
inc
inc
adc
jg
or
pop
ja
jb
das
mov
ss
aaa
lret
stos
jb
nop
push
ss
mov
ss
push
stos
jb
nop
push
xlat
ss
mov
ss
adc
out
mov
ss
pop
and
repnz
mov
hlt
xor
mov
xor
xchg
ss
mov
icebp
pop
mov
popl
sbb
aad
inc
mov
pop
jo
fsts
xchg
aad
inc
mov
pop
ja
rcrb
lock
push
mov
fldl
xchg
pop
movsb
std
push
push
mov
inc
inc
rolb
stos
rcrb
stos
shlb
js
jmp
fs
mov
fsts
scas
rcrl
leave
inc
inc
mov
jbe
movsl
leave
push
gs
pop
pop
mov
in
inc
push
mov
jnp
mov
enter
in
inc
pop
movsb
flds
mov
xor
mov
and
mov
shlb
inc
pop
es
std
xor
mov
add
add
add
mov
add
add
add
add
add
add
lret
add
jmp
jg
adc
mov
fsubl
xlat
leave
lds
popa
inc
mov
push
push
shrb
mov
popf
movsb
inc
jecxz
cmpsl
and
mov
cmpl
add
add
add
push
pushf
ljmp
push
aaa
inc
repnz
sbb
mov
cmpsl
movsl
xchg
sub
push
clc
sbb
shl
mov
repnz
ljmp
in
outsl
cmpsb
incb
scas
aas
pop
das
mov
dec
mov
sbb
ret
dec
mov
add
add
mov
add
imul
add
add
add
push
add
cwtl
lds
movl
add
add
mov
inc
add
add
add
add
add
add
sbb
add
add
add
xchg
out
add
popl
add
add
add
add
add
in
add
add
add
add
fadds
add
adc
sti
add
add
and
add
add
add
add
add
dec
in
vcvtpd2dqx
add
imul
add
inc
add
add
add
ret
add
mov
test
add
add
clc
add
cmpsb
add
add
add
add
mul
adc
add
aam
add
add
xor
add
cld
add
add
push
xor
adc
popf
xchg
xchg
pop
add
cld
pop
add
add
ss
scas
jp
imul
stos
test
adc
or
mov
push
or
sbb
or
mov
inc
out
popa
lahf
or
arpl
stc
in
lret
in
cmpsl
repz
lahf
add
and
sbb
adc
push
cmp
xchg
xor
sub
dec
mov
in
aaa
and
leave
jecxz
int3
mov
cmpsb
jnp
mov
bnd
lods
push
or
sahf
out
jns
push
test
loope
fidivrs
jo
scas
scas
je
dec
pop
or
xchg
test
xchg
fcoms
int
or
loop
dec
mov
test
sidtl
loopne
push
outsl
dec
test
jae
lret
call
mov
inc
xor
jb
fisubl
lcall
xor
jl
lret
and
sub
lret
mov
push
in
cmp
add
test
imul
xor
std
cmp
pop
mov
in
or
xchg
sub
rolb
popf
call
dec
mov
push
dec
dec
pop
sub
jg
xchg
iret
stos
lds
insb
aam
notb
fidivrs
xchg
call
inc
leave
push
pop
dec
int3
ret
push
cmp
and
adc
push
add
popa
mov
das
fwait
push
adc
repz
int3
mov
mov
inc
or
das
lcall
dec
clc
add
push
lret
lahf
add
std
xchg
xchg
cltd
mov
sahf
add
aam
out
mov
or
pop
cmpsl
add
inc
xlat
nop
in
dec
clc
sbb
push
shrl
loopne
jb
fucomip
jb
ficoml
addr16
sub
idiv
sarl
mov
mov
pop
add
fxtract
cmp
dec
lods
and
pusha
push
in
test
out
repnz
jnp
loopne
xor
inc
cltd
out
jl
leave
mov
lods
and
pop
repnz
xor
dec
rol
out
aaa
insl
xor
push
lret
lods
jae
bound
hlt
adc
arpl
test
ljmp
insl
pop
dec
lret
cmp
xchg
ljmp
sub
push
sub
sbb
mov
pop
subl
es
sbb
js
cmp
xor
roll
movsl
mov
xchg
add
out
mov
out
fadd
inc
iret
mov
mov
push
or
pushf
loopne
jmp
push
dec
mov
mov
rcll
test
in
dec
jmp
push
bound
std
out
and
in
xor
sti
leave
aas
or
js
add
sbb
and
ffreep
dec
pop
sbb
mov
orl
out
mov
mov
jae
mov
xchg
mov
test
and
mov
mov
xchg
shrb
popa
mov
cmpsb
and
sub
or
or
jle
faddl
add
les
lods
sti
in
sub
adc
xchg
shrl
bound
scas
cltd
inc
cmp
sub
xchg
and
ss
pushf
sbb
out
mov
insl
mov
test
mov
ficoms
or
loope
iret
lret
mov
xor
data16
je
sbb
gs
adc
aam
stos
mov
cmpsb
adc
stos
clc
inc
mov
or
and
and
mov
jns
and
out
push
rcrl
in
aaa
daa
pop
loope
in
xchg
dec
addr16
stc
inc
mov
sbb
lcall
sbb
mov
nop
nop
aad
pop
and
push
idivb
push
pop
lods
in
xor
fmull
sarl
or
pop
ret
ds
jmp
jge
lret
inc
mov
and
jb
dec
stos
fidivrl
xchg
jg
inc
ror
jne
push
mov
jp
pop
adc
mov
outsl
adc
lret
add
ret
fcmovb
pop
test
cli
pop
popa
and
aad
in
add
sbbb
cmp
dec
xor
pop
xor
adcl
mov
push
shr
test
ja
mov
inc
push
sbb
dec
pop
fnstsw
mov
movsl
loopne
pusha
divl
jmp
or
cmp
dec
mov
fnsave
fistl
push
jno
iretw
jg
lods
cmc
inc
mov
cltd
adc
add
cwtl
scas
adc
aaa
test
rclb
movsl
std
sub
push
mov
dec
movsl
out
mov
cld
mov
outsb
xchg
ljmp
adc
sarb
ds
movb
adc
mov
dec
leave
adc
mov
jmp
push
es
jbe
jbe
or
push
jg
xor
lsl
jle
popa
add
pop
mov
fstpl
jmp
sub
daa
aad
pop
xor
push
sbb
aaa
pushf
subb
stos
dec
and
jle
je
insl
outsb
push
ja
andb
mov
mov
hlt
aad
lea
flds
out
arpl
nop
test
outsl
popf
push
push
aas
enter
fbld
adc
je
es
push
stos
dec
stc
ret
or
cmp
pusha
xorb
or
inc
sub
adc
sbb
rorb
ret
mov
sbbb
outsl
gs
loopne
adc
in
test
mov
xchg
push
pushf
out
sahf
inc
test
xchg
xchg
enter
decl
repz
push
in
sub
aaa
push
pop
cmp
outsl
repnz
ss
js
push
cmc
sub
arpl
mov
test
insl
test
adc
mov
jge
dec
mov
shl
xor
dec
xor
push
pop
sub
fscale
popf
clc
aaa
jge
cmpsb
lods
jb,pn
mov
adc
and
nop
mull
sub
mov
btc
clc
stos
pop
pushf
int
daa
mov
popf
dec
in
stc
and
jmp
in
fiaddl
les
sbb
mov
fldcw
sub
daa
shrl
mov
sub
adc
pushf
dec
jmp
cli
push
cmc
fcmovb
in
push
jl
cmp
aas
js
jno
daa
in
or
insb
push
adc
mov
xchg
sbb
dec
repnz
mov
outsb
or
mov
repnz
call
pop
stc
lcall
jecxz
bnd
lahf
sbb
push
scas
pop
into
shlb
xor
out
out
ss
dec
in
pop
cmp
pop
fmull
and
insl
aaa
sub
adc
sbb
in
sub
dec
mov
hlt
add
pusha
popl
loope
cld
dec
sbb
mov
push
add
pop
mov
test
out
dec
pop
mov
cmp
and
mov
xor
roll
xchg
pusha
jb
clc
movsl
lock
cmpsl
sbb
or
mov
shrl
push
leave
cmp
aas
aam
scas
push
xchg
in
sahf
fisubrs
rcrl
stos
out
insb
filds
lret
fistl
push
lea
xchg
test
pushf
xchg
scas
push
loop
jo
cmp
cs
jle
and
int
lahf
sti
sbb
pop
das
pop
sbb
add
xchg
imulb
iret
cltd
addl
sbb
mov
mov
fsubrs
cmc
or
pop
pusha
xor
fsubrp
lock
push
adc
inc
cmp
or
push
xchg
xchg
dec
bound
mov
inc
xor
cmpsb
fistpll
sub
mov
push
ret
fcmovu
stc
sub
or
adc
aad
mov
mull
lods
inc
out
sub
out
pop
dec
fidivl
ljmp
or
xchg
lds
pop
std
frstor
in
fiaddl
iret
sbb
nop
loopne
and
mov
sbb
mov
fists
pop
movsb
pop
mov
mov
lods
xchg
shr
mov
sbb
mov
pop
lret
mov
push
jg
outsb
jae
dec
es
call
data16
into
iret
mov
mov
dec
jge
xchg
sbb
jne
sub
cmp
lods
lock
fwait
sbb
add
and
out
and
ljmp
dec
jmp
fistpl
stos
mov
les
push
cmpsl
out
sbb
push
insl
or
add
dec
push
divl
or
pop
in
lods
ficoms
test
cmp
xchg
and
test
push
ss
lods
inc
dec
out
dec
mov
or
pop
inc
call
movsb
sbb
add
jnp
xchg
dec
scas
ja
fwait
mov
data16
lahf
pusha
inc
sbb
xchg
mov
mov
add
sub
in
addl
test
lahf
cmp
fwait
add
dec
adc
repnz
fdivs
mov
dec
lea
inc
mov
pop
push
fwait
push
pop
iret
into
push
jl
icebp
dec
fcmovne
jns
jae
test
push
inc
jbe
cmp
jne
sub
movsl
or
jno
mov
xor
jnp
mov
pop
testw
pop
dec
or
bound
popf
fdivl
jno
sub
inc
cmp
lods
mov
mov
cwtl
jmp
call
sub
sbb
jns
fmuls
jbe
psubsw
mov
dec
mov
fs
repnz
push
scas
dec
pop
jge
push
and
bound
and
shr
or
dec
sbb
popa
mov
dec
xor
mov
lcall
in
ret
lods
fbstp
insl
shrb
test
in
in
rcrb
insl
push
push
pop
data16
push
gs
adcb
push
pusha
inc
mov
hlt
pop
xchg
mov
push
imul
add
push
ja
push
aad
cmc
mov
pop
push
stos
push
aam
lock
enter
cmp
cmpsb
or
call
lea
fwait
orl
dec
arpl
xor
aas
cli
xchg
sub
jle
push
out
ss
xorl
popa
mov
lret
push
mov
xchg
pop
es
cld
stos
push
mov
inc
test
sahf
and
sbb
adc
dec
add
mov
and
rcll
loope
test
mov
popf
outsl
xchg
aam
xchg
jge
cmp
sbb
pop
mov
sbb
test
sarl
data16
into
pop
inc
cli
mov
out
cmpsb
sbb
cmp
and
push
push
sbb
add
mov
xor
mov
xchg
push
out
insb
nop
hlt
push
sahf
adc
push
xor
adc
cltd
sbb
xlat
bound
or
fwait
push
sti
jmp
jp
mov
push
push
and
ss
or
mov
mov
dec
aad
dec
js
push
push
or
or
sbb
pop
js
xchg
jecxz
ficoml
or
mull
lret
add
frstor
sbb
dec
xor
or
sbb
or
adc
adc
dec
jmp
add
sub
repz
outsb
rcl
jns
scas
nop
bound
bound
mov
jecxz
sub
out
or
sbb
arpl
cmp
je
out
inc
movsb
je
mov
scas
lahf
in
inc
fstcw
aaa
add
mov
pop
cs
cld
jge
xchg
sbb
lcall
add
ljmp
stos
hlt
pop
sahf
xlat
xlat
out
or
jp
mov
pop
and
aam
jp
fdivl
les
jl
mov
xor
mov
addr16
mov
cmp
xor
mov
adc
daa
bound
sub
adcb
pop
imul
mov
imul
xchg
xchg
aaa
xchg
and
jnp
mov
stc
adc
fnstsw
popf
pop
dec
xor
xor
gs
xchg
test
sbb
xor
dec
mov
or
imul
push
hlt
xchg
cmpsl
pop
jecxz
dec
loope
cs
and
lret
fisubrl
pop
stos
add
int
fmulp
idiv
pop
dec
shll
addl
or
out
jns
scas
mov
in
mov
nop
loopne
jp
lods
dec
mov
cmc
pop
add
mov
adc
xchg
add
fistl
or
int
repz
lea
or
xor
sahf
push
sub
mov
repnz
pop
sarl
mov
stc
push
cmpl
dec
sub
xchg
cs
inc
fimuls
and
pop
jmp
xchg
stos
push
cltd
in
into
out
lret
dec
jb
xlat
cmpsl
aad
imul
jecxz
add
or
mov
cmpsl
add
shll
incl
pop
dec
sbb
daa
xor
add
add
sbb
addr16
fimull
cmp
adc
xchg
add
xchg
mov
test
repz
jmp
inc
aad
test
jge
push
xor
les
test
cmpl
add
lea
lret
stc
icebp
cltd
sahf
xchg
mov
inc
mov
mov
xchg
ds
aad
sbb
dec
lahf
jno
mov
std
adc
jl
pop
jmp
jge
jbe
rolb
mov
loopne
mov
arpl
mov
or
hlt
pop
shlb
cmpsl
cmc
push
out
sbb
loope
inc
hlt
icebp
stc
jecxz
scas
xor
mov
adc
call
mov
sbb
fwait
push
jp
add
rcrb
and
in
test
mov
incb
add
fwait
in
es
mov
mov
int
pop
adc
push
sub
mov
mov
enter
mov
sbb
pop
pop
movsl
push
test
jp
jno
int
test
movsb
or
jmp
int3
cmc
imul
jno
xchg
xor
leave
xorb
loop
cmp
cmpl
sbb
cmp
out
movb
orl
push
int
rorl
shl
mov
repz
divb
jecxz
xchg
cld
aam
dec
pop
inc
lret
push
aas
or
aas
jg
fdivl
sub
xchg
outsl
bound
push
sbb
cli
movsl
out
arpl
push
imul
ret
test
cmp
push
outsb
mov
cld
test
mov
mov
sbb
aas
xchg
cwtl
pushaw
in
pop
pand
xchg
add
cmp
icebp
or
xchg
cmc
pop
repnz
sbb
or
push
push
mov
cmp
pusha
daa
lods
xchg
xlat
aaa
jge
ret
ljmp
lcall
popl
adc
push
lcall
inc
clc
mov
push
sbb
inc
push
mov
scas
or
in
ret
std
cmc
xor
dec
gs
test
testl
cs
sbb
and
lret
adc
int
mov
fiaddl
pushf
stos
inc
mov
arpl
lahf
cld
xchg
dec
jbe
shl
leave
jnp
fcoml
or
ljmp
hlt
cmpsl
dec
adc
mov
mov
dec
xchg
mov
unpcklps
xchg
or
cli
test
mov
xor
jle
enter
cld
pop
sub
push
dec
cmc
fsincos
popa
mov
cwtl
inc
dec
add
stc
mov
jae
repnz
repz
dec
pop
outsb
iret
das
lods
pop
inc
push
mov
mov
cmp
mov
test
scas
stc
lock
adc
jno
jns
ror
sub
jecxz
dec
inc
out
and
cmp
roll
mov
fistps
mov
flds
xor
stos
stos
shr
lahf
mov
mov
gs
lock
xchg
jge
mov
aaa
leave
mov
mov
das
and
push
dec
adc
test
imull
aam
or
mov
aaa
cld
cld
xchg
movsb
xor
cmp
fistps
mulb
jno
aaa
jbe
mov
mov
aaa
push
popf
sub
loope
push
lods
mov
push
outsw
add
adc
stos
lcall
repnz
cmp
sarb
jae
icebp
xor
out
pop
ret
movsl
cmpl
pop
sub
outsb
sub
pop
daa
testb
fisttpl
mov
or
push
and
negl
clc
pop
mov
leave
out
pop
ret
or
sub
push
out
add
and
jbe
mov
jge
xchg
pop
out
clc
insb
adc
ds
lea
mov
push
fucomp
mov
mov
call
adcl
or
imul
test
sub
cmp
mov
mov
add
test
dec
or
xchg
lret
xor
negb
xchg
pop
std
shll
lds
std
outsl
pop
fwait
aas
and
hlt
outsl
mov
sbb
mov
int3
sbb
pop
fs
idivb
xchg
and
loope
sbb
push
push
in
jnp
pop
popa
cmp
adc
pop
movb
pop
mov
push
lret
sbb
out
sbb
push
mov
xor
xor
fadds
insl
xchg
jns
jbe
mov
adc
addr16
sub
decb
cmc
cmp
or
insl
ljmp
cmc
fisubs
or
mov
arpl
jns
mov
sub
add
in
ja
pop
pop
rcrb
push
scas
mov
out
test
cmpsb
mov
cmpsl
cwtl
xchg
xchg
inc
int3
dec
xchg
push
pop
dec
mov
xchg
sbb
fbld
int3
dec
les
pop
cmp
xor
or
dec
mov
pop
icebp
cwtl
sahf
xchg
in
push
hlt
ret
mov
mov
in
in
out
mov
add
les
inc
and
and
xor
cwtl
lcall
loop
sbb
lods
pop
sahf
pusha
in
cmpsl
out
inc
and
cltd
sub
imul
lds
lgs
sahf
shl
sbb
js
ja
mov
xchg
xchg
in
int3
lret
dec
or
mov
aaa
push
xchg
imul
popa
adc
cmp
clc
sarb
mov
adcl
lcall
cmpsb
cmp
pop
mov
mov
test
aam
pop
lds
fisubl
pop
jb
mov
sub
aam
add
faddl
lret
in
xchg
mov
cmp
fisubrs
lods
ljmp
dec
or
scas
xor
dec
jns
or
jo
cmp
jb
sbb
dec
repnz
cmc
add
dec
mov
sbb
sbb
hlt
ret
fwait
sbb
inc
push
mov
dec
loopne
shlb
sbb
mov
mov
cltd
gs
inc
call
xchg
std
dec
lods
dec
xor
mov
inc
insb
lds
dec
push
xor
in
add
rol
push
fsub
outsl
dec
fdivr
jne
cwtl
pusha
xchg
push
or
jecxz
mov
jo
fldl
adc
int3
movsb
test
cltd
fisttps
lods
dec
push
stos
jne
movsl
scas
lods
test
mov
xchg
push
lahf
movsl
lock
aaa
push
dec
popf
dec
mov
in
stc
jmp
fstps
or
ss
cmc
lods
stc
pop
movsb
cltd
je
shl
data16
imul
mov
inc
xor
or
je
lods
cwtl
add
or
xor
jle
sbb
add
or
jmp
insl
imul
es
lock
xchg
jle
push
mov
mov
sahf
sti
fsubrp
icebp
sbb
add
dec
lea
add
outsb
adc
or
fs
push
or
idivl
in
dec
mov
pop
aaa
movsb
adc
clc
push
pushf
cmpsb
dec
mov
movsb
lret
ss
imul
icebp
jge
push
pop
xchg
add
pop
dec
popf
inc
roll
ja
icebp
test
mov
fwait
mov
test
adc
add
pop
xor
and
and
hlt
xor
mov
mov
daa
sbbl
out
shrb
push
pop
ljmp
sbbl
add
push
in
int
dec
and
stos
std
movsl
dec
xchg
in
icebp
sbb
clc
jnp
sbbb
loopne
imul
lock
add
dec
add
lret
mov
push
push
or
in
divb
and
lock
sbb
fdivrs
mov
and
rcrl
sahf
push
outsb
dec
cmc
ret
xchg
pop
in
mov
movsb
cmp
int3
and
mov
movsb
xchg
std
mov
cmovp
call
dec
mov
lods
stc
add
jle
fcompl
inc
cmpsl
lea
dec
cmp
cmpsb
loop
popf
xor
and
mov
das
adc
or
ljmp
ror
jp
and
test
push
lret
loop
jmp
shl
repnz
imul
fwait
xchg
sti
scas
inc
xlat
rcrl
mov
mov
inc
mov
push
jle
mov
cmp
mov
outsb
scas
push
pop
pop
jecxz
scas
mov
sbb
cmpsl
in
mov
mov
popf
xor
insb
outsl
push
mov
dec
call
movsb
mov
mov
mov
jae
sarl
in
subl
das
add
sbb
imul
icebp
int3
add
ret
mov
sbb
fisttps
mov
mov
stc
push
mov
xchg
or
jg
sub
jmp
jno
add
xor
sbb
xchg
cmpsb
lds
jp
iret
out
cmpb
mov
shlb
sbb
into
icebp
adc
std
stc
mov
sub
xlat
fisttpl
int
adcl
in
cli
inc
cmpsl
pushf
add
popf
adc
inc
js
lods
xlat
outsl
into
adc
adc
pop
clc
cmp
xchg
adc
insb
mov
push
and
jg
imul
cld
out
jnp
fwait
sub
ror
icebp
call
xor
or
int3
aaa
jmp
movsb
mov
jle
fisubrl
les
aaa
xor
aam
clc
adc
ss
aas
adc
popa
jb
jmp
jne
jecxz
cmp
push
sbb
insl
fdivl
jmp
sarl
and
sbb
and
loope
jp
inc
dec
push
in
cmp
push
test
mov
xor
pop
mull
xor
popa
dec
sbb
hlt
pop
push
jecxz
sub
dec
dec
pop
mov
mov
dec
push
and
xor
xchg
aad
jbe
gs
mov
iret
add
loop
inc
add
sbb
or
fdivs
xchg
lock
movsb
cltd
fwait
sti
lret
cli
cli
leave
leave
cmpb
mov
jmp
into
mov
ret
xchg
test
mov
scas
addl
ljmp
xor
push
arpl
int
add
adc
pop
jecxz
xor
mov
loop
xchg
mov
stos
xchg
and
push
mov
sub
fsubl
daa
inc
jns
mov
mov
jle
cwtl
jmp
mov
hlt
fisubrs
stos
jl
insb
sub
and
mov
das
repnz
aaa
test
shll
test
push
aam
fiadds
jge
jg
adc
mov
leave
xorl
mov
outsb
xor
es
jge
pop
int
pop
out
out
ljmp
leave
or
jl
inc
inc
push
and
push
dec
repnz
pop
xchg
sub
mov
cmc
pusha
leave
mov
insl
sti
cmpl
loopne
push
mov
inc
inc
sbb
sbb
lds
jnp
sti
xchg
lret
jmp
sub
jmp
jmp
and
cmc
mov
subb
hlt
jecxz
xchg
sub
test
push
les
pop
jg
insl
and
js
xlat
mov
mov
fidivrl
loop
repnz
nop
out
pop
xchg
fiadds
mov
xchg
mov
shll
xorl
xchg
addr16
adc
xor
dec
lds
fsts
aad
out
mov
je
data16
pop
test
mov
jge
and
call
cmp
push
adc
jmp
je
pop
xor
xor
dec
js
add
rcl
insl
in
sbb
push
inc
inc
pop
inc
pop
jp
loopne
out
jae
sub
mov
xchg
aaa
mov
addr16
out
scas
sub
sbb
xorb
xor
and
mov
movsl
lahf
sub
imulb
dec
sbb
pop
outsl
mov
cld
jnp
jno
mov
push
mov
push
jle
mov
xor
ror
push
and
mov
and
adc
pop
loopne
add
mov
add
in
add
test
jno
add
js
lods
lods
xchg
adc
shll
cmp
adc
lret
mov
mov
cltd
mov
jne
sub
jp
pop
xchg
push
test
incl
sub
pop
rolb
jae
jmp
fildll
jo
dec
gs
shrl
push
fs
sbb
push
inc
inc
pop
dec
and
cmp
fldl2t
jae
pop
and
int
xor
xor
mov
and
mov
cmc
dec
push
ljmp
movsl
sbb
sbb
xchg
cmpsl
adcb
push
mov
xor
pushf
jne
inc
sbb
and
dec
push
push
jnp
push
stos
push
ja
mov
in
test
xchg
and
sbb
jnp
pop
mov
lea
fisubl
addr16
jge
mov
cmp
push
mov
pop
in
ret
add
test
jno
xchg
inc
push
adc
xchg
xor
mov
inc
jge
cmp
dec
ljmp
jge
mov
xor
ret
add
sub
lods
lea
lods
mov
mov
inc
mov
dec
adc
cmp
push
clc
dec
int
push
and
push
iret
push
mov
inc
add
stc
jno
fildll
in
dec
xor
push
hlt
mov
push
fwait
push
cli
jb
pushf
enter
mov
or
hlt
cmpsl
dec
mov
cmc
jne
out
inc
mov
sbb
xchg
mov
xchg
lock
jmp
jns
ror
inc
outsb
sbb
out
pop
push
dec
adc
jbe
ss
sub
xchg
sub
out
frstor
lock
shlb
filds
xor
lea
icebp
mov
lods
pushf
bound
aam
inc
shll
or
test
rol
add
ds
movsb
xchg
mov
scas
dec
fnstenv
cmp
out
dec
dec
mov
dec
cmp
mov
cld
lock
mov
jo
es
mov
xor
daa
sub
loop
inc
xor
push
mov
xlat
lret
stos
arpl
test
fisubrs
xchg
enter
xor
inc
add
loopne
xchg
fildll
in
xchg
aaa
push
cmp
sbb
bound
lock
shr
jo
pop
push
aas
int
xor
outsb
cmp
and
fsubrl
cmc
je
imul
ret
sbb
xchg
inc
lods
push
aam
xchg
jb
and
shr
xor
push
test
inc
sbb
sbb
add
push
sbb
aaa
scas
lods
and
jp
add
imul
repnz
sbb
jle
mov
dec
jge
mov
cmpsb
and
sub
sub
dec
rcll
das
xchg
adc
push
std
cmp
xchg
jp
jl
add
shll
mov
or
lods
fsubl
xchg
ds
add
add
and
lret
filds
mov
mov
mov
xchg
xchg
mov
mov
ss
mov
push
ret
cli
sub
cmp
leave
test
cltd
cmp
pop
mov
int3
sahf
mov
popa
imul
cmp
cmp
cld
scas
enter
imul
shlb
cwtl
iret
fildll
xchg
emms
jl
adc
jge
cmc
icebp
je
mov
leave
sbb
mov
sahf
jmp
inc
in
aad
xor
je
inc
pop
shrb
jge
push
sbb
inc
or
and
addr16
xchg
sub
xorl
fbstp
xlat
outsl
cmp
inc
mov
out
push
lods
mov
shlb
push
scas
fs
pop
test
sub
and
jmp
adc
xor
test
dec
mov
cmp
mov
jp
mov
dec
mov
sbb
fnstsw
adc
add
push
xchg
hlt
ja
sub
mov
push
sti
pop
ret
inc
movsl
je
push
jl
cmp
and
jbe
int3
push
fwait
xchg
movsl
mov
ds
dec
dec
scas
dec
lcall
je
lret
lcall
stos
nop
pmuludq
mov
repnz
mov
mov
es
mov
sahf
ja
adc
faddl
ror
aas
insl
sub
es
out
sbb
or
and
xchg
sub
pop
sbb
mov
filds
push
aad
pop
mov
mov
hlt
js
adc
scas
sti
stos
add
pop
cmp
dec
cwtl
jecxz
mov
std
hlt
jl
pop
shll
mov
mov
pop
push
jle
fdivrs
sbb
sbb
sbb
loop
stos
sub
popa
aam
push
push
pop
dec
aas
mov
push
or
sti
or
inc
adcl
cmp
aad
scas
mov
mov
test
mov
or
xor
or
ds
dec
sahf
xor
and
shl
mov
push
lret
xchg
cli
push
stos
cmp
or
lcall
cmc
int
test
push
cmp
out
out
adc
mov
ror
inc
adc
outsb
add
pushf
mulps
insb
jns
sub
cmpsb
xor
push
mov
mov
xchg
jo
fmulp
rolb
mov
subb
cmp
cmp
mov
xchg
inc
fisttps
and
outsl
sbbb
mov
jp
pop
test
jnp
push
fisubrs
dec
adc
pop
jns
cmp
pop
test
lret
cmpsl
and
movb
cmp
cltd
fcmovbe
int
pop
notb
movswl
pop
xchg
bound
adc
dec
sbb
and
test
inc
inc
adc
add
xchg
and
dec
or
and
mov
xor
popa
out
inc
and
in
pop
test
rcl
bound
daa
daa
lcall
out
mov
daa
shlb
xor
popf
lcall
aam
dec
mov
ficoms
iret
repz
gs
cmp
int
cmpsl
mov
sub
loopne
jae
lods
fxch
and
shlb
das
dec
movsb
stos
mov
enter
loop
andl
jo
stos
aad
pop
sub
in
inc
and
mov
std
cmp
dec
call
leave
push
inc
dec
negl
jae
xchg
out
jmp
stc
cmp
add
daa
rorl
leave
add
je
mov
sub
jae
mov
rcr
xor
jecxz
mov
out
mov
fistpll
mov
or
movsb
push
lcall
or
dec
test
je
rcl
ret
cmc
data16
aaa
xchg
jne
lods
adc
jge
orb
std
int
gs
jge
repz
adc
fsubrl
loope
dec
adc
xlat
aam
dec
or
lret
pusha
and
call
mov
inc
outsb
push
fsubrl
fwait
cs
adc
inc
movsl
pushf
jns
mov
movsb
dec
mov
jg
mov
lea
mov
or
stc
scas
fcoms
mov
gs
sti
icebp
sub
jne
jg
jmp
insl
cmp
inc
lock
mov
bound
lret
stc
jo
lods
jb
pop
sbbb
mov
xchg
int
sarl
stos
int
lahf
insb
xor
pop
mov
insb
sbb
sub
rorb
push
lahf
out
mov
aam
divl
lods
mov
mov
int3
les
pusha
mov
jae
inc
jne
stc
xor
stos
sti
jmp
pop
mov
sub
nop
nop
ret
nop
jnp
sbb
repz
sar
mov
aaa
jp
jns
lahf
and
sbb
fst
dec
enter
jo
sbb
daa
gs
loopne
hlt
push
aad
outsl
std
sub
lahf
sub
inc
movsl
repz
jle
das
int
pop
xchg
movsb
dec
mov
and
dec
and
push
lods
addl
mov
jbe
out
cs
xor
and
cli
mov
push
cwtl
rclb
cmp
dec
out
cmp
int
jnp
xor
subl
jp
sbb
pop
cmove
push
ficompl
fiaddl
mov
into
xchg
mov
sub
fsub
push
adc
inc
in
imul
mov
sub
push
mov
or
adc
jg
cld
mov
stc
lods
cli
pop
mov
lret
addr16
aad
sbb
cmp
xor
adc
sahf
imul
ret
xlat
lret
loopne
xorb
daa
pop
jb
cmpsl
fimull
cmp
jb
sbb
adc
xchg
sbb
les
xlat
outsl
push
pushf
dec
mov
les
mov
pusha
inc
lcall
dec
jb
int3
test
dec
adc
lods
sub
cltd
mov
lock
dec
pop
jns
mov
mov
dec
shll
lcall
scas
dec
mov
add
sub
mov
xor
inc
inc
in
jmp
mov
subl
lds
into
or
fstpt
add
xchg
nop
mov
dec
push
fidivs
aad
fstl
pop
xorb
pop
xor
jae
xchg
xor
test
xchg
mov
add
inc
push
pop
sub
ret
cld
popa
aad
dec
into
pop
icebp
out
or
jle
xchg
sub
xor
mov
jo
sub
lods
add
sub
dec
cmc
jns
push
pop
test
jo
out
leave
jns
jl
rcl
gs
jmp
adc
mov
rcl
aad
loopne
cwtl
adc
jb
jle
es
mov
mov
jno
aam
push
mov
mov
lcall
cmpsl
ficomps
cmpsl
cmp
lds
popa
jmp
adc
cmp
mov
mov
lds
outsb
enter
adc
roll
mov
xchg
lret
les
inc
inc
gs
mov
xchg
mov
or
and
pop
mov
out
sbb
ror
mov
sbb
les
cli
mov
mov
sti
subl
mov
and
inc
in
mov
inc
push
push
add
push
in
adc
cmp
cmc
mov
stos
inc
out
push
scas
jle
mov
push
cld
mov
fadd
lods
add
out
mov
jle
push
cltd
stc
mov
lods
dec
ret
dec
xchg
jne
mov
dec
jnp
sahf
lods
and
sbb
loop
cs
xchg
dec
sub
rorb
shlb
inc
xchg
test
ret
push
fdivl
rclb
sbb
test
mov
data16
add
sub
mov
inc
dec
mov
cmovl
inc
insl
inc
inc
sub
mov
add
cmp
jno
mov
repnz
add
xchg
sub
or
dec
cmp
push
addr16
aad
idivb
cmp
popa
push
push
jnp
mov
movsl
pop
mov
xor
inc
cmpsb
dec
fidivl
dec
out
sub
mov
sbb
ret
shr
shl
mov
cmp
xchg
ljmp
mov
shrb
aam
loope
mov
nop
push
push
lcall
mov
sbb
pop
jmp
jne
mov
adc
jp
jmp
xor
or
pop
ret
and
xor
outsl
push
cmpsl
add
xor
stc
or
out
fisubrs
mov
sub
lahf
rorb
mov
mov
bswap
mov
xchg
mov
pushf
les
dec
icebp
mov
mov
push
test
nop
int
adcl
cltd
sbb
fildll
push
pop
ja
das
pushf
rcrl
mov
stos
sbb
push
push
xchg
cli
scas
mov
cmp
mov
sub
mov
adc
cmp
mov
mov
fistpl
leave
ljmp
inc
test
mov
jo
imul
rorl
inc
adc
loop
ja
mov
scas
xchg
hlt
jne
and
rcll
loopne
cmp
iret
add
xchg
jbe
add
sub
xchg
out
filds
inc
jnp
ret
test
repz
jle
xchg
dec
pushl
inc
xor
int
sub
ds
sbb
sub
sbb
push
out
xchg
push
dec
inc
cmp
push
out
mov
and
lds
cmc
sub
subb
sbb
or
ret
stc
fdivrs
cmp
xlat
out
ret
ret
mov
mov
mov
inc
xor
in
mov
pop
das
xlat
leave
lods
jae
pop
or
lcall
sub
jp
add
pop
sbb
negb
xchg
sbb
pop
mov
inc
iret
pushf
sub
out
add
mov
fiadds
mov
mov
mov
std
in
movsl
hlt
cmpsl
repz
or
sbb
stc
xor
insl
es
rorl
inc
cwtl
inc
inc
fdivrp
sub
jb
out
push
mov
xchg
push
int
jl
jns
xor
jo
jo
push
sbb
jge
dec
int
push
ret
scas
and
add
je
daa
ss
scas
in
stos
ret
mov
lds
inc
jl
fs
mov
sbb
cmp
pop
and
push
into
lods
iret
xchg
ja
rclb
out
sub
stc
xor
lods
and
inc
dec
push
ss
cs
lcall
lcall
xor
xchg
subl
and
rcrl
nop
scas
arpl
ljmp
cmp
or
jbe
cmp
clc
loop
sbb
dec
and
and
mov
divb
rcl
out
or
ss
dec
in
daa
decb
push
fdivrl
or
jp
mov
imul
repnz
aas
dec
mov
adc
fisttpl
add
out
push
pop
add
jg
cld
out
fsubrs
test
cmp
popf
xor
enter
sub
cmp
xor
lods
cmp
inc
xlat
add
inc
js
mov
mov
xchg
adc
in
push
inc
cmp
or
sahf
popf
and
inc
fcoml
shll
xchg
jnp
jmp
in
inc
or
add
in
jae
pop
xlat
push
xor
mov
and
jmp
test
movsb
inc
xchg
lock
out
imul
psrld
cltd
addb
lock
subb
mov
ja
xchg
outsl
sub
xchg
lahf
pop
push
hlt
fs
cld
pop
pushf
dec
stc
lret
mov
mov
mov
rolb
push
jno
pop
stc
arpl
add
std
and
dec
fs
sahf
sbb
xchg
test
add
int
push
xchg
rcl
ret
in
ret
call
lods
insl
hlt
pop
dec
pop
mov
dec
sub
xlat
inc
mov
mov
push
inc
inc
and
cmpsb
add
stos
add
bound
jbe
lret
cmpsl
fstps
pop
ds
dec
or
sbb
cmc
sarl
mov
xor
out
ret
cld
imul
adc
or
ja
fbld
adc
and
xor
ds
inc
into
xchg
ljmp
push
ja
mov
pop
and
enter
icebp
adc
test
cmp
mov
ljmp
sub
push
cwtl
push
sbb
dec
lcall
dec
stc
into
push
push
leave
sbb
out
test
cmpl
xchg
add
outsb
add
inc
cli
and
sbb
jb
sbb
xchg
psrlw
push
in
shll
repnz
sub
sub
loope
add
mov
psubsb
shll
test
scas
aad
mov
mov
jb
stc
gs
mov
xchg
push
mov
fnsave
into
xchg
icebp
dec
jno
fisttpll
mov
pop
out
jne
pop
mov
pop
mov
je
ja
cmp
sti
xor
adc
loop
dec
test
jle
lds
stos
mov
call
dec
xchg
adc
or
repz
push
xor
mov
sbb
push
test
inc
cmpsb
ret
cmc
push
cli
lds
cwtl
std
mov
fsubr
scas
xchg
pop
add
addr16
fld
pop
fmull
shlb
dec
mov
inc
fidivl
cmp
in
jge
loop
mov
loopne
ret
inc
jb
aaa
aam
xor
xchg
daa
movsl
and
mov
dec
loope
pop
jg
push
jnp
or
aas
pop
adc
lock
repz
pop
sarb
add
push
add
push
mov
mov
inc
push
mov
cvttps2pi
push
and
pop
rcl
call
icebp
insl
jne
dec
outsl
jl
xchg
in
daa
test
cmp
cli
imul
repz
lahf
dec
outsl
jne
in
fmuls
push
shll
aad
test
cmp
cmpsb
adc
fisubl
fidivl
adc
stos
movsb
mov
movsl
inc
inc
cld
mov
ljmp
jnp
stos
cld
aam
addr16
add
dec
cmp
pushf
shrb
fiaddl
in
cmp
xor
jb
xchg
dec
cli
mov
pop
or
jmp
js
mov
and
fsubr
adc
or
jmp
push
dec
enter
add
test
negl
xchg
dec
lret
sti
enter
dec
enter
test
cmp
push
adc
out
cwtl
and
daa
ror
add
inc
adcl
mov
jmp
pop
sub
dec
xor
push
lret
nop
leave
setno
es
aad
out
push
sbb
adc
popa
or
in
aad
stos
movl
mov
sub
push
mov
ret
and
xchg
mov
xor
xor
sahf
addr16
xchg
int
adc
adcb
cmc
pop
sti
xor
mov
mov
mov
icebp
xchg
jmp
fldl
cmpsl
xor
cmp
xor
out
lcall
sub
mov
popf
adc
fcoms
cmp
out
sbb
pop
fdivrl
repz
pop
xorl
sarl
enter
rcrl
inc
mov
sbb
test
cmp
pop
mov
pop
idivl
push
mov
mov
sub
loope
rcl
addl
push
push
add
aam
mov
push
mov
xchg
fsts
stc
loop
xlat
les
movsb
mov
xor
add
push
loopne
rol
ret
cmp
je
xchg
dec
lret
push
mov
aas
cmpsb
jbe
or
sbb
jns
jo
xor
inc
adc
leave
mov
xor
int
mov
in
leave
mov
mov
cli
cmp
mov
loopne
stc
bound
mov
sarl
dec
jmp
sbb
pop
lcall
enter
mov
push
insb
icebp
dec
lcall
stc
pop
mov
and
scas
in
dec
jno
in
jb
inc
cmc
shll
mov
push
shll
inc
mov
jmp
sahf
shl
subb
insb
daa
lret
or
in
push
xor
mov
ljmp
push
xchg
jno
lcall
push
ficompl
cs
stos
les
inc
cmp
jae
cwtl
dec
push
in
movsl
push
sbb
fisttps
insl
mov
push
cwtl
ret
cwtl
js
sbb
cwtl
testl
jecxz
movsb
pop
jmp
lahf
mov
sbb
mov
ret
sub
jg
or
cmpsl
mov
mov
jae
jle
xchg
inc
pop
pop
ljmp
push
iret
aaa
aaa
push
ljmp
jecxz
sub
dec
rolb
fwait
jge
and
ret
aas
subb
jg
sbb
shll
in
adc
cmp
mov
mov
cmp
inc
and
inc
bound
ds
mov
cli
or
dec
add
jno
or
lea
pop
sbb
xor
lahf
testb
sub
aam
popf
lret
sub
inc
mov
xor
mov
lea
pop
out
jno
enter
andl
fnstcw
fildll
dec
pusha
ret
mov
jge
jb
jno
add
fimull
or
push
pop
xchg
cwtl
repnz
xchg
adc
mov
mov
xor
int3
adc
fmuls
fwait
cmc
mov
aaa
rorb
add
fnstsw
jecxz
shrb
outsl
cmp
sub
mov
jbe
roll
push
ret
jmp
jle
loope
ret
push
sti
lods
les
inc
into
cmp
inc
out
negb
cmp
or
jne
push
arpl
lcall
push
mov
mov
pusha
lds
mov
shrb
adcl
dec
jb
fstpt
xor
inc
push
inc
and
jb
pop
loop
lret
jbe
btc
mov
cmp
and
and
xlat
mov
int
stc
divb
ret
lods
loopne
dec
mov
xchg
pop
gs
sahf
adc
in
pop
push
jp
or
in
imul
add
mov
adc
or
jge
inc
clc
xor
scas
dec
pop
push
xchg
pop
sti
add
xchg
sub
lahf
imul
outsl
sti
fmuls
fwait
sti
mov
notl
loopne
mov
lods
xor
jl
push
and
movsl
ljmp
pop
xchg
dec
out
loop
popa
imul
hlt
test
xor
scas
cmp
jecxz
and
or
and
call
cmp
sbb
popa
outsl
aam
push
jbe
add
mov
pop
sub
adc
mov
idivl
cli
xchg
xor
xor
and
or
pop
popa
and
addl
push
and
call
cmpsl
mov
shrl
pop
dec
out
sti
stc
mov
sbb
add
cltd
jle
aad
loopne
add
or
jae
fisubl
pop
and
in
insb
xor
js
in
jl
fsts
pop
mov
incl
and
aas
aam
mov
pop
call
shl
sarl
dec
ret
fwait
ret
rcrb
add
mov
or
leave
jns
in
jno
fsubs
add
daa
aas
loope
push
and
movntps
mov
sahf
es
push
push
mov
pop
pop
pop
mov
sbb
inc
lret
mov
mov
aas
out
outsb
fwait
xlat
pop
adc
sbb
pop
pop
jbe
movsb
lods
adc
mov
js
mov
cld
insl
push
mov
sti
add
es
adc
in
dec
sahf
jbe
mov
jnp
xor
ljmp
and
dec
icebp
lds
mov
cmovb
mov
xchg
xlat
pop
and
std
xor
inc
addr16
adc
and
insl
pop
mov
cmp
popf
into
push
ss
lods
xor
jecxz
jb
mov
enter
or
jne
js
mov
inc
xor
fmul
cmp
subb
mov
fwait
ret
cmp
shrl
das
icebp
mov
or
xchg
jns
jecxz
inc
mov
pusha
mov
push
fdivl
or
call
xchg
out
cs
cmpb
add
mov
cmp
scas
mov
jae
out
cmpsl
push
or
jl
test
scas
push
pop
cld
push
sbb
ret
inc
lods
es
cmp
rorb
sub
mov
cmp
xchg
sbb
orb
hlt
add
mov
push
jmp
cmp
cs
jae
rorb
test
push
dec
jp
stos
mov
jge
dec
movsb
cmpsl
jmp
sahf
scas
xor
imul
test
stos
mov
lods
mov
pushl
mov
mov
mov
pop
or
ret
jp
roll
js
pop
je
inc
sub
das
out
mov
add
dec
cmp
test
lcall
cmp
or
loope
cmpsb
mov
pop
mov
out
add
xor
push
lret
or
outsb
stos
leave
lock
out
and
mov
cmp
scas
add
pushf
repnz
pop
shlb
lods
mov
ret
int
sbb
aaa
mov
lds
mov
mov
pusha
push
dec
mov
add
mov
in
clc
and
xchg
aaa
arpl
mov
imul
dec
cwtl
les
and
imul
dec
mov
xor
in
lcall
sbb
std
mov
in
sbb
mov
pushf
pop
jg
push
stos
sbb
outsl
fidivrs
push
adc
dec
push
xor
mov
xor
repnz
insl
mov
cmp
sub
cmpsb
jbe
inc
sbb
movsb
mov
mov
push
jl
push
push
jns
pop
xchg
xchg
aas
cmp
movsl
into
ds
cmp
negl
ret
jne
dec
les
push
rcr
jns
ljmp
iret
fmull
pop
push
and
arpl
adc
shrb
jp
sbb
mov
test
and
pusha
decb
pop
inc
adc
inc
ret
scas
and
and
scas
shr
cli
test
dec
subl
jle
les
outsl
repz
popf
dec
in
sbb
jecxz
xchg
inc
fnstcw
call
hlt
icebp
push
inc
bound
hlt
ret
xor
lcall
insl
scas
lahf
sti
adc
aam
cmp
daa
arpl
push
cmp
pop
fstl
lahf
push
scas
xchg
pop
sub
xlat
out
frstor
and
pop
aas
dec
cs
xor
dec
dec
movsb
mov
js
mov
and
jmp
xchg
popa
or
push
fnstcw
ds
insl
xchg
fdivrs
les
push
dec
shll
inc
jl
cld
punpckhdq
jmp
lock
clc
pop
or
sub
addr16
or
aaa
jb
inc
pop
lcall
sub
jp
mov
out
push
outsl
into
dec
test
mov
test
repz
jns
xchg
fsubr
in
out
popf
lret
lock
push
jge
mov
xchg
sub
bound
pop
mov
push
test
sub
hlt
inc
loopne
add
dec
scas
mov
mov
pop
or
stos
js
mov
lcall
stc
fs
fadds
nop
hlt
xor
lods
cwtl
pop
sub
ret
pop
jg
rdtsc
aas
adcl
lret
cmp
mov
lret
movsl
jo
adcb
jge
daa
jnp
sbb
sub
inc
xor
roll
mov
pusha
jo
sbb
cmp
enter
inc
add
lret
jecxz
sti
data16
xchg
sahf
dec
ds
lods
inc
ret
insl
cld
sbb
or
loopne
das
adc
test
das
cmpsl
sbb
or
adc
icebp
xor
push
pop
stos
psllw
xchg
jge
fadds
shrl
pop
in
adc
scas
stos
ret
aad
mov
push
popa
loop
jge
or
or
inc
or
test
adc
call
jmp
and
outsb
and
sub
ljmp
xlat
ja
cmp
mov
inc
aam
movsl
cmp
push
sbb
inc
sbb
xor
xor
sbb
movsb
cmp
sbb
push
mov
inc
cmpsb
dec
cmpsb
cmp
fsubs
cmpsb
insl
add
pop
inc
mov
xchg
inc
mov
pop
test
pop
vxorps
cmp
mov
sbb
ret
lods
and
jno
cmp
mov
test
movsl
xor
mov
ret
cld
inc
lea
mov
insl
js
dec
cmpsl
pop
ja
xchg
push
sub
or
icebp
xchg
insl
mov
or
cmpl
sbb
pop
push
add
in
aam
mov
inc
inc
adc
and
addr16
sbb
and
cmp
mov
xor
jno
imul
mov
lods
jmp
and
pop
movsb
or
sbb
fwait
sub
cmp
push
popf
out
jcxz
and
jmp
mov
out
dec
or
scas
fcmovnu
xor
xor
mov
iret
sbb
insl
lock
pop
push
add
adc
dec
inc
xor
jl
ss
mov
loop
and
cmp
mov
add
push
stc
test
gs
data16
fwait
test
push
test
movsl
push
dec
mov
stos
stc
div
and
subl
cli
mov
mov
clc
in
jne
push
nop
repz
xchg
popf
imul
fimull
out
xor
out
enter
add
push
push
sbb
mov
fnstenv
mov
mov
push
jbe
xchg
test
xchg
mov
aad
scas
push
pop
and
aad
sbb
aaa
sbb
inc
push
and
jae
imul
fbstp
xor
pop
mov
inc
jb
cli
adc
sti
jp
jl
sti
bound
lods
mov
outsl
push
pusha
sbb
enter
mov
jne
pop
test
sub
pop
xor
gs
call
imul
imul
ds
push
cmp
enter
in
ljmp
jne
shrb
or
push
adc
test
and
xor
stos
stc
mov
out
repnz
jl
adc
loop
lea
mov
in
push
enter
clc
jbe
in
cmpsb
arpl
jne
sbb
mov
outsl
mov
push
xor
mov
push
inc
xor
ret
mov
sub
add
daa
pop
popa
fmulp
push
repnz
in
jo
mov
aad
push
sbb
mov
add
bound
pop
movsb
fistpll
shrl
ja
cmp
mov
fisubs
lods
ja
gs
and
test
sti
jp
cmp
add
jmp
lods
mov
daa
stc
in
popa
sub
dec
insl
cmp
jns
mov
jnp
ss
inc
in
mov
jae
mov
dec
adc
int
imul
adc
sar
push
shlb
cmp
mov
and
jg
into
or
ja
popa
adc
ret
dec
sarb
aaa
shrb
pop
out
mov
gs
dec
xor
mov
push
or
push
jmp
test
sarb
adc
in
cs
rclb
iret
lods
push
cltd
outsl
push
lret
in
sbb
mov
popf
sbb
jmp
or
mov
mov
dec
out
lds
jns
sarl
add
cmp
scas
jecxz
sbb
sub
cs
arpl
cmp
outsl
cmc
mov
pop
je
pusha
sbb
ja
and
push
push
add
xchg
mov
mov
in
scas
stc
sbb
out
fs
dec
xor
insb
aas
fwait
das
cwtl
ret
adc
rcrl
sub
pop
int3
lods
xchg
cmp
xchg
fldcw
leave
pop
dec
mov
aam
shlb
leave
js
jb
stc
sarb
fstpl
push
stc
imul
dec
add
mov
addr16
out
cltd
jbe
in
push
flds
sub
rorl
loope
mov
or
jb
addl
lret
pushf
lahf
imul
ret
cmp
subl
iret
inc
iret
or
mov
fsubrl
lds
sub
hlt
std
scas
and
pop
das
mov
add
mov
insb
cwtl
inc
sub
mov
pop
or
out
mov
jle
push
pop
mov
xchg
outsb
add
sbb
das
idivl
add
or
pushf
mov
mov
clc
adc
sub
dec
arpl
ljmp
cmp
push
xchg
mov
add
ds
test
mov
xchg
aad
icebp
add
out
pop
in
cwtl
out
enter
xor
mov
movsl
push
jns
mov
jl
inc
mov
into
mov
das
lock
les
sub
push
cld
mov
arpl
adc
push
xchg
inc
cmpsb
push
movl
out
fstpl
mov
jnp
rcrb
orl
lcall
jae
dec
fldcw
pop
jp
daa
repz
cmp
xor
nop
push
mov
ljmp
lods
fstpt
sub
in
arpl
push
and
fisubrl
pop
das
insl
jmp
imul
insl
xor
jl
in
ror
scas
xchg
stos
inc
imul
sbb
or
ljmp
lods
push
sub
push
fnstsw
xchg
sub
cli
out
call
inc
imul
hlt
mov
mov
incb
mov
cld
sbb
inc
ror
daa
divb
jns
cmp
cmp
push
adc
or
xchg
loope
dec
pop
enter
inc
int
and
mov
cwtl
mov
jnp
mov
jnp
or
repnz
mov
add
jno
mov
sub
pop
add
imul
out
xchg
ja
and
cmpsb
jl
xchg
leave
push
push
shlb
loopne
repz
cmp
cmp
aam
movsl
push
loope
dec
inc
in
xchg
hlt
push
fld
dec
movsl
mov
dec
lods
pop
pop
pop
push
sub
dec
and
scas
xor
xchg
out
jge
fadds
lcall
fdiv
add
fnstsw
sbb
dec
out
dec
xchg
add
test
nop
insb
or
insb
outsb
sub
push
dec
movsl
jb
clc
adc
test
push
mov
or
cmp
call
mov
cwtl
xor
call
je
mov
or
out
bound
push
sub
aad
lock
rclb
and
dec
rcrb
mov
xorb
scas
jl
push
cwtl
shll
and
test
jns
add
push
into
and
loopne
jne
call
rcr
and
push
or
hlt
mov
mov
test
add
mov
push
nop
jl
pop
test
jmp
mov
jno
pop
int3
push
cmpsb
add
std
inc
jecxz
scas
push
push
lret
xor
pop
aad
pop
xchg
adc
mov
push
and
or
neg
mov
loope
out
lock
sarb
loopne
adc
sbb
dec
mov
add
sbb
jns
scas
xchg
les
xchg
pop
lcall
ja
arpl
arpl
mov
fs
cmp
mov
xor
and
mov
or
addr16
and
sub
or
sbb
pop
sub
es
mov
pop
mov
test
inc
outsl
dec
bound
adc
fwait
sarl
data16
pop
andl
stc
adc
lcall
lahf
jae
std
inc
xchg
pop
repnz
test
scas
imul
jmp
adc
cs
push
mov
inc
xchg
dec
imul
pop
addr16
push
insb
les
gs
or
adc
lahf
jle
subl
lods
mov
ss
icebp
mov
cmp
sbb
aam
xchg
add
push
mov
fwait
andb
call
push
gs
sbb
pusha
adc
nop
negb
jl
sub
int
pop
add
loope
cld
jne
ja
push
movsl
jmp
fwait
test
mov
out
fists
and
mov
fmuls
in
push
scas
hlt
rolb
push
addb
cmp
adc
repnz
scas
aad
cmp
or
cld
fistpl
fstpl
das
sahf
pop
pop
adcb
xorl
roll
jecxz
rcll
out
adc
call
ss
jno
mov
adc
aam
mov
in
or
jge
in
nop
xchg
mov
mov
adc
xchg
fstpt
mov
and
lods
and
rcrb
push
dec
insl
inc
lahf
mov
mov
fidivrl
ret
mov
insl
xlat
shll
xor
mov
mov
iret
movsl
cmpb
imul
addr16
pop
and
fs
xchg
ret
in
mov
bound
push
imul
hlt
adc
fs
cwtl
inc
shrb
push
add
rcr
jp
addr16
pop
out
push
mov
cmc
sbb
fistps
test
std
ljmp
or
and
test
xor
adcb
and
lret
mov
dec
jge
push
iret
jo
pushf
dec
loope
mov
aaa
repnz
das
pusha
popf
cmpsb
insb
loop
cltd
js
jno
repz
push
rcll
popf
jno
cmpsb
push
push
ret
jbe
xor
ret
dec
sub
push
jp
ret
adc
sub
loop
add
and
xchg
loopne
mov
jb
call
mov
insb
dec
int3
xchg
push
ja
insl
or
stos
jnp
in
gs
stos
push
insl
repnz
int
mov
mov
push
mov
loope
xor
fwait
push
rorb
in
jl
jno
push
shl
loopne
add
popa
dec
clc
mov
adc
popf
loop
push
mov
or
iret
mov
aam
lock
mov
sbb
aad
adc
push
ret
ret
add
jge
stos
sbbb
inc
out
pop
stos
or
sbb
xor
add
lea
rcr
stc
cmp
cvtdq2ps
out
ret
cmpsl
into
aad
loop
loopne
daa
lock
xchg
lret
mov
dec
adc
jl
push
mov
mov
or
push
inc
jns
dec
imul
inc
push
data16
stos
pop
addr16
jmp
mov
ret
cwtl
adcl
sub
shll
mov
test
scas
in
insl
dec
test
and
aas
sbb
cmp
push
mov
inc
test
ljmp
cltd
lret
cmp
pop
or
pop
sbb
push
xchg
xlat
adc
in
inc
mov
add
data16
ss
in
mov
ficoml
popf
stc
sbb
test
push
roll
inc
xor
ljmp
inc
push
mov
sbb
sub
mov
jge
mov
add
push
aaa
decl
add
pop
pop
sub
cmp
cmc
cmp
test
scas
sub
outsb
dec
shll
push
sbb
lret
icebp
iret
mov
xchg
imul
sbb
bound
mov
xor
fdivr
adcl
add
cmp
cmp
fwait
test
ljmp
inc
jl
push
sbb
cmp
loope
jmp
pop
sarb
mov
cmp
xor
sti
push
sub
inc
sbb
pushf
fisttpll
push
scas
pop
mov
shlb
xor
push
fistl
jb
adc
jbe
mov
popf
std
mov
sub
in
add
push
push
ljmp
mov
jne
or
scas
pop
mov
in
testl
inc
mov
xchg
fprem
mov
mov
ss
paddsw
push
test
adc
fnstsw
and
jno
repz
pushf
in
dec
lret
xchg
ds
lods
lods
ds
test
enter
sbb
mov
sbb
stc
lods
cmp
ss
js
or
lods
fisttpll
pcmpeqd
push
jecxz
dec
or
js
mov
hlt
and
ret
xor
inc
fdiv
mov
jns
leave
bound
push
jl
lea
mov
bsf
in
mov
pop
mov
je
mov
add
cmp
mov
push
jg
xor
pop
data16
gs
ficomps
popa
fneni(8087
int
xchg
xchg
rolb
in
jmp
loope
bound
fwait
incb
push
pop
adc
jecxz
hlt
jge
loop
notl
sar
sbb
addl
mov
inc
mov
xchg
adc
in
stos
enter
xchg
or
mov
clc
lods
pop
lret
mov
sub
inc
stos
pop
imul
dec
in
ljmp
pop
push
xchg
inc
xor
cmc
cmp
dec
fdiv
lea
or
or
dec
xor
cmpsl
push
xor
push
aam
pop
sbb
loop
push
std
fwait
pushf
inc
adc
xchg
pop
lds
or
aaa
daa
inc
out
std
mov
or
imul
adc
add
push
xor
stos
ss
sub
ret
xchg
sbb
mov
inc
xor
add
adc
adc
lods
sbb
enter
imul
sbb
ds
push
data16
jb
cli
jae
lods
lahf
pop
cwtl
lahf
jne
pop
pop
ret
sahf
subb
jo
or
lock
push
mov
scas
pusha
push
mov
popf
rol
lret
or
aaa
sbb
pop
pop
pop
out
or
pop
sub
jg
les
mov
sbbb
mov
or
jae
rol
addl
call
rcrb
cmp
int3
mov
ljmp
adc
mov
movsl
bound
jge
cld
andl
fcmovne
mov
sbb
inc
insl
mov
xchg
pushf
mov
sub
push
add
cmpsb
push
daa
inc
loop
mov
int3
dec
scas
push
dec
jl
dec
cwtl
lock
dec
lcall
ss
mov
call
test
nop
sbb
xchg
mov
lds
xchg
push
mov
enter
push
cwtl
test
inc
loop
popl
push
fisubrs
insl
ja
jo
jne
add
dec
pop
mov
or
push
popa
out
or
mov
xchg
daa
inc
lods
xor
jnp
pop
cmpsb
inc
mov
lods
adc
out
cld
fisttpll
push
sbb
or
and
scas
cmp
mov
test
inc
fidivs
jp
sub
roll
jb
sub
in
add
cli
sub
cmp
test
negl
mov
mov
jns
movsl
stos
aas
outsl
dec
adc
jmp
jne
mov
push
arpl
test
insl
or
mov
cmpsb
mov
sbb
clc
jnp
cmp
iret
mov
push
ja
lahf
dec
repz
add
adc
and
in
sub
xchg
mov
add
sbb
nop
lods
jmp
daa
les
imul
pop
dec
adc
cmpl
push
psrld
cmp
test
jl
imul
or
push
scas
jl
push
sbb
or
dec
jl
jae
rorl
cmc
push
push
lcall
dec
ds
dec
xlat
xchg
daa
je
sub
call
push
pshufw
outsl
inc
popa
fstpl
push
dec
fwait
pop
fimull
lcall
mov
loop
hlt
mov
jmp
mov
nop
es
mov
mov
jne
mov
adc
loope
dec
cmpsb
mov
popf
lret
xor
inc
out
mov
outsl
in
jmp
mov
cltd
sbb
xchg
sub
stos
cmp
lock
sub
movsl
sub
dec
je
mov
dec
sub
imul
mov
sbb
fwait
mov
in
or
sub
push
fwait
aaa
jbe
cmp
pop
mov
push
int3
pop
loop
or
xchg
ja
lods
or
jno
add
push
sbb
mov
mov
cmp
push
lock
pop
fisttps
cmovo
or
fsubrp
inc
out
pop
jge
cmpsl
and
arpl
mov
je
mov
adc
cld
fisttps
and
pop
jae
adc
lcall
aad
jmp
add
pop
fisttps
inc
stos
and
in
mov
push
jg
movl
push
mov
cmp
mov
push
aas
jg
inc
imul
inc
sbb
nop
sahf
xor
inc
mov
mov
loop
xchg
insb
inc
aad
mov
xchg
push
aaa
fidivl
dec
in
xor
jo
pop
mov
xchg
pop
mov
pop
cmp
and
nop
lods
xchg
push
fisttps
adc
lock
xchg
sar
xchg
xchg
ret
iret
xor
hlt
insb
std
sbb
nop
adc
push
pop
movhps
out
mov
or
jle
cmp
mov
lds
aaa
xchg
popf
loop
sarl
data16
scas
jge
arpl
xchg
stc
fistl
callw
js
jns
dec
cmpsl
cmp
pop
divb
movsb
aas
xchg
leave
or
ss
stos
push
cmp
faddl
out
in
imul
lret
out
test
insb
sti
test
lcall
pushf
mov
pop
sub
call
push
mov
jnp
inc
imul
xchg
mov
dec
sbb
sub
test
xlat
jle
cli
rorl
push
pop
rcrl
fsts
adc
sbb
inc
jl
dec
inc
sarb
jne
mov
mov
sbb
dec
vpslld
aas
int
rcrb
lret
les
subl
lock
ret
xlat
pop
pop
sarl
jne
pop
jp
adc
sbb
xchg
insb
sbb
dec
jo
hlt
lret
dec
sub
sbb
sub
xor
iret
mov
dec
imul
fdivrl
jae
add
cmpsl
in
fiadds
cli
mul
adc
test
and
cmp
push
out
stc
lret
ja
test
pop
jp
in
jbe
add
pop
sub
sub
cmp
jnp
pop
push
jae
out
cmp
sub
push
jne
aaa
add
js
pop
cmp
mov
fsubl
js
mov
and
and
out
sbb
mov
pop
add
mov
xor
inc
push
data16
sbb
xchg
inc
les
sbb
in
mov
inc
popl
and
lret
mov
mov
mov
pop
mov
aaa
mov
push
jno
dec
jnp
clc
sbb
mov
outsl
cmp
pop
or
cwtl
cmp
sbb
les
int
je
push
sub
pop
aas
push
add
adc
sub
pop
or
adc
and
or
add
add
sub
sti
cmp
and
mov
arpl
ljmp
mov
adc
std
dec
repnz
fcompl
fxtract
mov
mov
mov
add
gs
mov
or
jns
sub
pop
pop
repnz
push
andb
scas
mov
dec
push
push
adc
add
mov
mov
xor
or
push
flds
pop
fcoml
movsb
xor
mov
es
mov
cs
jae
or
and
jmp
inc
enter
popf
lea
out
int3
cmp
mov
add
sub
cld
jl
adc
cmp
add
iret
sub
ja
jg
pop
cltd
dec
pop
push
dec
js
push
mov
push
sbb
inc
mov
xchg
jge
add
outsb
loop
enter
xchg
scas
out
add
mov
mov
mov
out
ds
mov
popf
mov
int3
jne
push
sbb
xchg
mov
push
std
shrl
movsl
mov
dec
aam
and
mov
imul
sbb
icebp
lret
and
mov
mov
fs
hlt
and
mov
dec
xchg
mov
imul
push
push
ss
push
mov
shlb
nop
mov
mov
js
repnz
fildl
out
daa
cmpl
sub
inc
sbbb
out
xchg
orb
cwtl
out
add
cld
fmuls
jl
dec
movsb
fdivr
add
iret
xchg
dec
dec
rcl
adc
xor
stc
dec
mov
add
push
das
ljmp
push
out
icebp
mov
jo
sub
scas
je
add
mov
sub
pop
subb
lock
lods
xor
hlt
mov
pop
xor
xlat
xor
leave
xor
insl
pop
ja
je
mov
mov
mov
pop
adc
daa
add
push
jl
out
push
sub
lahf
out
cmp
in
es
jae
incl
jle
push
and
xor
lret
cmpsl
sub
mov
mov
and
jmp
int
hlt
sub
xchg
mov
push
and
mov
mov
lds
cmp
adc
adc
leave
mov
sbb
addb
aam
push
aad
pop
xor
ja
push
dec
push
clc
pop
add
add
in
lock
dec
orl
popa
fiaddl
xlat
cmp
repnz
push
rcr
and
testl
pushf
adc
xchg
in
add
popa
mov
shl
adc
ficoms
jl
and
mov
push
mov
mov
and
or
and
js
lds
lds
insb
xchg
push
mov
cmpsl
xor
lock
bound
jecxz
jge
or
fdivr
cmpb
and
sti
mov
and
call
add
mov
mov
push
call
sub
cmp
lods
lahf
aad
mov
mov
adc
xor
cwtl
jns
nop
scas
inc
pusha
ficoms
dec
sbb
enter
stos
stos
scas
xchg
mov
out
cmpl
int3
ficompl
lret
inc
mov
test
lcall
adc
cs
shl
fwait
lret
mov
repz
mov
filds
dec
cmpsl
jne
mov
into
cmp
outsb
arpl
jnp
fistl
dec
pusha
sahf
fwait
sbb
push
imul
mov
pushf
inc
pusha
scas
hlt
mov
mov
sbb
pop
cmp
lahf
sbb
push
ss
cmc
rolb
andb
mov
bnd
popa
sti
aad
mov
ficoms
and
or
in
mov
xor
mov
lea
ret
das
js
in
sbb
cmp
xchg
xchg
cmp
ja
int3
cmpsb
mov
mov
call
mov
push
fwait
inc
dec
push
das
cs
dec
dec
mov
add
mov
push
ret
lods
mov
pop
lods
aas
enter
xor
xchg
pop
inc
jle
cmpsb
mov
mov
imul
sub
cmp
mov
jle
xchg
sub
add
jns
jnp
jno
jmp
jbe
imulb
sub
addb
into
push
jno
aas
cmp
repz
xor
fdivr
and
inc
cmp
scas
loope
int3
mov
xchg
movl
sub
mov
mov
sahf
mov
mov
negl
test
lret
out
mov
cmc
inc
ud1
je
stc
mov
pop
aam
jne
mov
jns
loopne
jns
mov
push
imul
ret
test
and
or
pusha
cmpsl
psubw
aam
and
aaa
jmp
rcll
outsl
std
je
call
mov
js
dec
cmpb
ljmp
ds
sub
imulb
loop
cmp
xor
xlat
pop
js
jecxz
cmp
cmp
js
lea
into
in
fsubs
cmp
sub
cmp
dec
mov
stc
orb
mul
or
sbb
and
aaa
cwtl
cmp
adc
pop
addr16
dec
push
mov
out
sbb
ja
dec
jg
push
imul
call
imul
and
cmp
scas
sbb
mov
inc
cmpsb
mov
add
lret
daa
or
inc
xchg
jecxz
pop
xor
xchg
cmpsb
stos
test
sub
cmc
cmc
sub
inc
cld
cli
dec
jge
jb
pop
in
pop
cwtl
jmp
int
inc
or
lods
jecxz
sub
xor
pop
lds
xor
sti
fistps
mov
xchg
std
jbe
mov
jae
movl
cmpb
sbb
or
or
add
lods
xor
mov
je
dec
in
stos
test
cmc
mov
xor
cmp
mov
mov
dec
jo
call
dec
mov
inc
xchg
js
lea
mov
orl
xchg
push
dec
inc
les
jp
arpl
xchg
inc
push
and
shll
popf
call
mov
sahf
push
out
xchg
in
and
insb
lock
jae
pop
xchg
sti
popf
and
in
daa
repnz
int
jnp
dec
xor
mov
int
inc
movsb
cli
out
sti
mov
hlt
bswap
pop
cmpl
std
dec
push
test
jmp
sbb
adcl
mov
dec
add
pop
inc
outsb
dec
jae
sahf
add
jo
fists
cmp
push
mov
mov
pop
push
aas
push
cs
outsb
arpl
cmp
sbb
out
xchg
mov
xchg
jo
leave
bound
lcall
js
pop
sub
mov
push
jge
inc
rcll
and
dec
mov
dec
push
inc
in
sbb
pop
lds
call
test
xchg
inc
out
xor
je
adc
sbbl
adc
fucom
xor
mov
jl
mov
outsb
xor
sub
int3
in
xchg
lret
mov
sarl
cmpsb
aad
rolb
dec
dec
imul
fcmovnb
cmpl
xchg
iret
test
pop
lock
movsb
mov
loop
dec
mov
cmp
test
rorb
and
ja
loope
cmpsl
mov
or
test
lcall
or
mov
pop
fwait
loope
push
int
stos
xor
xor
cmp
les
lds
xchg
or
mov
xor
ss
xchg
js
lods
mov
push
mov
fadd
ret
sub
mov
out
mov
test
adc
xor
fstpl
into
jbe
test
mov
call
inc
in
jmp
nop
or
cmpsl
out
inc
jg
adc
inc
sub
mov
push
mov
in
push
cmpsb
sarl
imul
int
mov
jo
jmp
fwait
inc
pop
push
andl
lret
push
loop
add
cmp
lea
sti
in
pop
aam
pushl
mov
test
int3
push
xor
test
pop
and
in
popa
cli
jno
pop
repz
sbb
fnstsw
sub
xchg
popl
in
dec
pushf
mov
jle
data16
jnp
adc
jnp
and
lea
cmp
imul
xchg
int3
mov
xor
nop
xor
call
mov
ljmp
jg
and
mov
inc
dec
xor
sub
xor
and
pop
xor
rcrl
int
xchg
movb
mov
xor
test
icebp
flds
xchg
fdivrl
outsb
sub
push
shlb
mov
sahf
mov
and
push
adc
xchg
outsb
test
enter
cmp
je
test
dec
pop
dec
fs
fistps
movsb
dec
shl
sahf
movsb
push
imul
mov
pop
xchg
ja
out
dec
mov
xor
mov
dec
sbb
jl
push
lods
push
inc
scas
dec
in
sub
mov
inc
ret
int
jmp
repnz
xchg
in
insb
pop
sti
cmpsl
fwait
arpl
push
sbb
sti
outsl
rcll
test
ficoms
aam
add
hlt
xchg
mov
and
int
iret
stos
sub
hlt
dec
mov
cmp
dec
fnstcw
cmp
in
jge
lods
pop
movsb
sbb
pop
popa
cld
pop
cwtl
adc
insb
lcall
jp
jb
push
test
iret
test
pop
jl
adc
adc
lahf
cmc
jmp
sahf
mov
pushf
pop
sti
mov
daa
adc
add
lock
fwait
sti
or
mov
loope
iret
aaa
loop
or
dec
fimuls
loopne
notl
cmp
shlb
movsl
gs
ficomps
fucomip
xchg
pop
cmpsl
loope
push
movsb
dec
cmp
jnp
mov
int3
jecxz
js
pop
gs
out
push
fcmovnb
or
and
cmp
fwait
xor
daa
lock
pop
das
adc
mov
xchg
mov
lea
jnp
test
cmp
cltd
in
jecxz
fldt
mov
mov
jns
bound
sub
lcall
xor
dec
cs
push
dec
sub
sub
js
push
loop
mov
pop
in
fcmovnu
jmp
aad
lea
adc
push
jmp
lret
out
aad
cld
jnp
sahf
mov
xchg
xchg
pushf
push
mov
xchg
mov
and
insb
xor
rorb
movsb
fdivl
sbb
sub
or
outsl
movsl
mov
in
pop
lahf
lahf
inc
fistpl
and
push
sub
push
leave
pop
negb
call
jge
in
aad
movsb
cmp
adc
les
movzwl
aaa
sbb
dec
xor
in
outsl
add
and
add
xorb
jbe
dec
stos
into
dec
testl
test
cmp
insb
loope
fs
push
cld
and
out
mov
popa
xchg
mov
arpl
cwtl
or
and
fld
mov
mov
stos
pusha
movsb
and
adc
data16
sbb
lods
int3
inc
fsubl
lret
jmp
icebp
shr
cmp
das
loop
pop
jmp
cmp
or
and
jmp
mov
cltd
mov
mov
mov
aad
push
and
cwtl
out
scas
inc
cltd
pop
mov
mov
cld
mov
jns
dec
mov
add
std
lods
jl
push
inc
cmc
hlt
popf
sti
pop
adc
cmp
pop
cmc
lret
pop
sub
xchg
add
clc
jg
adcb
fimull
jg
movb
mov
push
lock
dec
mov
mov
dec
mov
inc
sub
pop
mov
push
lret
or
sbb
add
lea
lahf
inc
jns
sub
xor
dec
cwtl
js
not
xchg
add
repz
dec
les
xlat
xchg
jno
jecxz
or
movsl
fsincos
fs
stc
adc
sub
mov
adc
push
scas
pop
and
pop
repnz
jnp
push
jbe
cmp
mov
adc
iret
sbb
dec
imul
enter
push
inc
outsl
jbe
pop
push
add
stc
mov
mov
and
cld
jl
mov
in
push
or
dec
sti
fwait
push
mov
decb
xchg
add
addl
push
pop
add
test
incl
lock
test
sub
or
imul
in
mov
mov
jp
cltd
sarl
pop
mov
orl
lahf
mov
fmulp
jns
ja
mov
xor
shll
mov
lret
push
mov
adc
in
js
xchg
imul
cmpsl
push
dec
loopne
xor
fisubl
jb
aas
jns
loopne
addr16
cmc
cmp
push
mov
push
cmpsl
sti
add
inc
fisttps
cmpsl
ret
mov
stos
test
jae
mov
lcall
sub
lds
mov
into
push
jmp
push
divb
and
ja
push
inc
add
daa
inc
cmp
mov
mov
push
popf
and
insb
pop
add
fwait
lea
xchg
inc
inc
adc
pop
das
cld
or
or
or
outsb
inc
movl
add
push
push
pop
aas
shrl
cltd
adc
sbb
adc
mov
lcall
in
roll
mov
jno
mov
mov
push
insl
jns
xchg
inc
sbb
sub
jg
sub
cmp
jb
cmp
push
cmp
int
enter
wrmsr
or
fs
hlt
dec
and
xor
and
pop
loop
jge
push
test
sub
mov
les
push
aad
mov
in
cs
or
aam
ret
cmp
push
bnd
test
push
adc
nop
pusha
xor
rcll
clc
sub
inc
fstpl
testb
loopne
pop
mov
das
add
mov
dec
xchg
fldenv
adc
popa
mov
xchg
adc
add
cld
pushf
lret
popf
adc
idivl
adc
xadd
and
jbe
add
inc
xchg
out
inc
rcrb
jecxz
ret
sub
aad
into
js
std
pushf
adcb
nop
mov
fs
mov
gs
dec
jmp
int3
in
inc
dec
mov
add
jl
into
jle
dec
jno
ss
xor
inc
shrb
inc
add
out
lock
aam
fistl
sbb
popf
shlb
add
inc
test
repnz
jmp
loopne
ret
div
add
cmpsb
sub
je
pop
out
pop
sub
mov
dec
scas
and
aam
push
xor
jl
notb
cmp
or
popa
xchg
iret
mov
jnp
ficoms
sbb
repz
add
sbb
inc
stos
mov
mov
es
fdivrl
cli
addr16
push
or
pop
jle
nop
loope
adc
cli
mov
adc
pushf
adc
push
xor
cld
cmp
jns
jmp
push
fadds
ljmp
clc
pop
lret
mov
sub
pusha
scas
arpl
xchg
movsl
xor
mov
fdivrl
fidivs
xlat
xor
clc
inc
clc
adc
cli
cmpsb
adc
mov
clc
out
cmp
emms
cli
jp
jo
adc
fwait
or
xlat
ss
stos
cli
xlat
push
les
and
popa
mov
loope
push
pop
stos
sub
or
imul
sarl
cmp
pop
hlt
cld
cwtl
js
sub
iret
mov
and
mov
push
in
mov
and
xor
sti
cmp
mov
mov
cmp
push
dec
test
push
adc
xchg
cmp
inc
cmp
sbb
pop
xchg
imul
dec
lcall
lret
add
and
and
push
int
mov
jo
test
setne
dec
xor
in
push
mov
cltd
or
pop
int
mov
pop
imull
repnz
in
sbb
sbb
inc
xor
add
popl
in
in
outsl
ret
mov
mov
xchg
stos
lahf
push
es
cld
repnz
adc
xlat
imul
rcrl
fistl
addb
and
pop
sub
xchg
jg
imul
lods
into
lcall
cmp
ret
pop
in
or
push
mov
xchg
iret
xor
stos
inc
in
in
push
repnz
push
mov
jno
daa
push
nop
inc
in
daa
sub
mov
int3
mov
frstor
insb
pop
les
cmc
outsb
mov
fistpl
rcll
loope
cmp
or
pop
dec
adc
dec
mov
ja
xchg
ret
imulb
dec
es
jmp
into
loope
mov
mov
bsf
out
notb
inc
mov
push
push
int
mov
mov
sti
scas
imul
int3
push
jae
inc
sbb
adc
and
mov
fs
aam
jl
les
push
or
subl
int
push
mov
int
and
sub
sbb
mov
popa
sub
cld
jmp
rcr
repz
sbb
push
cmp
dec
sub
dec
add
pop
inc
adc
repnz
mov
jg
mov
sbb
mov
mov
or
mov
ffree
or
mov
cli
insl
inc
les
mov
push
stos
aad
mov
fwait
and
cld
sub
pop
add
xlat
xchg
call
pop
push
jo
test
inc
push
push
adc
xor
sarl
sbb
add
or
into
cmp
pop
xchg
je
sbb
adc
scas
mov
add
in
mov
inc
dec
adc
dec
jns
dec
test
rcl
pop
pop
nop
test
jb
pop
lahf
ds
cmp
into
icebp
and
xor
push
pop
test
cmpsb
lahf
jmp
or
adc
lea
int
pusha
xchg
insb
sub
hlt
stos
outsb
pop
sbb
pop
sub
inc
push
subb
div
out
lods
popf
rcrb
xor
loope
imul
mov
inc
xlat
pop
dec
xchg
push
or
pop
lret
push
sbb
cmpsb
push
andl
mov
and
sbb
inc
and
xor
scas
hlt
aas
test
mov
dec
push
popf
mov
mov
movsl
mov
mov
faddl
pop
dec
cmp
mov
mov
xchg
or
ss
sub
daa
lock
and
sub
adc
push
adc
out
lret
jecxz
inc
sub
push
pop
sub
mov
cmp
jmp
int3
jecxz
or
add
lock
sti
pop
push
mov
daa
movsl
mov
dec
xlat
sbb
push
cmc
clc
or
call
in
sahf
out
mov
daa
test
or
or
js
mov
xchg
aad
jmp
inc
iret
out
inc
cwtl
pop
or
ds
aam
and
or
push
inc
or
push
jbe
pop
imul
and
les
loope
call
inc
shlb
or
in
mov
jae
add
gs
data16
cwtl
lret
mov
lahf
pop
adc
jae
cli
and
pop
aam
cmpsl
push
and
repnz
cmp
mov
adc
xcrypt-ofb
cmpsl
out
ucomiss
sbb
jg
add
cltd
ds
cli
adc
pop
xor
popf
add
aam
je
aam
mov
sti
or
minps
addps
jp
pop
cmpsb
and
movsb
adc
sbbl
std
push
mov
and
dec
push
ret
out
cmp
pop
shrb
add
cmp
jg
xchg
aaa
sub
and
mov
xchg
jne
push
popa
adc
push
loopne
dec
gs
negl
jle
ss
dec
icebp
xchg
xlat
or
mov
pop
shlb
dec
inc
jmp
lds
sti
call
roll
inc
push
fwait
jns
movsl
sbb
jg
loopne
add
aaa
in
test
mov
lcall
mov
mov
push
mov
dec
push
xor
out
es
cmp
adc
lock
arpl
dec
push
mov
ret
fcmovnu
imul
andb
cmp
jne
or
fcmove
xchg
nop
inc
or
or
movsl
jbe
mov
int
adc
jo
inc
pop
jmp
loop
xchg
inc
inc
popa
push
test
dec
add
fmull
into
pusha
add
loop
aad
and
js
add
pop
mov
aad
movsb
rorb
sub
inc
scas
cwtl
out
mov
and
insl
or
ss
adc
shl
sub
jecxz
int
lock
push
fwait
jae
fiaddl
mov
jbe
ss
mov
dec
adc
clc
out
shr
xor
rcr
and
das
loop
adc
mov
add
insl
cmp
aas
mov
test
stos
jmp
fadds
shlb
dec
and
push
les
shll
icebp
jne
pushf
adc
and
push
push
imul
int3
fcmovnu
cmp
js
mov
stos
gs
dec
push
cmp
jecxz
fs
inc
cltd
fnstsw
fistpl
dec
add
push
adc
dec
push
fucomi
mov
sti
mov
mov
push
cld
inc
or
incb
hlt
mov
in
shrl
sarl
popa
ja
pop
fistpl
fists
mov
gs
xchg
add
fdivrl
lahf
jae
dec
fmull
pop
jecxz
cmpsl
je
or
push
mov
lods
daa
mov
mov
mov
test
stos
stos
sar
cld
push
push
inc
sbb
int
and
mov
inc
pop
add
inc
mov
pop
sub
imul
movsb
addl
mov
stos
pop
loope
in
in
push
sbb
and
add
aam
xchg
or
maxps
imul
lret
cmp
ret
jmp
sub
ret
leave
mov
fldl
push
repz
dec
divb
jns
in
shlb
imul
iret
inc
mov
xchg
push
flds
push
ficomps
idiv
lds
xor
pop
popa
pop
cmp
loop
xlat
je
ja
dec
dec
not
xor
mov
scas
test
sub
push
std
push
push
pop
xchg
adc
or
mov
sub
sarb
iret
mov
push
hlt
mov
sub
cmp
dec
aad
ror
mov
es
cltd
enter
inc
mov
mov
ret
cld
jno
xor
mov
int
mov
cmp
pcmpgtb
xchg
or
xor
daa
or
out
fisttps
pop
mov
mov
mov
jo
inc
ljmp
mov
ss
jl
std
sub
dec
add
cmpsb
add
sub
sub
fwait
scas
clc
push
adc
push
idivb
inc
popa
movb
fucomp
decb
out
jne
shl
cmp
insl
xor
pop
shlb
push
add
adc
add
dec
mov
push
or
lods
out
loopne
leave
add
ret
add
pop
sbb
pop
sbb
cmp
sahf
or
ja
dec
int
nop
test
icebp
sub
push
mov
mov
out
push
mov
or
lcall
add
sbb
xor
add
pushf
mov
cmp
fsubl
mov
dec
xchg
cltd
mov
hlt
mov
push
xchg
or
imul
in
nop
dec
cli
in
in
adc
dec
mov
push
sub
fsub
jo
jl
in
sbb
mov
enter
xchg
cli
sbb
mov
int
xchg
dec
outsb
in
cmp
in
xchg
int
ja
stos
jmp
mov
cmp
shrb
insb
push
inc
mov
int3
daa
jge
clc
lret
xor
fcoml
xor
dec
insl
pop
mov
mov
pop
fsubl
cmp
inc
data16
inc
mov
nop
or
cmp
pop
adc
adc
inc
mov
sbb
stos
imul
add
sub
xchg
imul
int
add
pop
lret
cwtl
sub
sbb
fwait
xor
sti
push
xchg
inc
dec
lods
pop
push
and
mov
xor
jp
divb
or
mov
js
cmpsl
scas
enter
push
in
fdivrs
pop
cmp
lret
insl
cmp
mov
fucom
jne
imul
paddsb
test
sub
icebp
jl
jg
test
and
mov
sbb
fnsave
nop
add
sub
aam
testb
leave
testl
test
inc
inc
insb
hlt
mov
or
fdivrl
push
andb
cmp
mov
outsb
jno
das
inc
test
or
push
loopne
test
cmp
cmp
xor
nop
outsl
jno
xor
orl
mov
in
jnp
cmpsb
dec
add
ret
lcall
loope
cmpsl
pop
jg
xor
mov
or
shrb
pop
sub
cli
test
lds
ret
dec
call
pop
fisttps
jl
xor
xchg
xor
dec
push
in
mov
mov
js
mov
and
pop
scas
inc
and
imul
mov
mov
int3
jp,pt
or
and
int
lock
mov
daa
icebp
cmpsl
mov
fwait
cmp
and
movsb
popa
mov
jbe
inc
pop
sbb
in
jmp
jge
int3
push
mov
xor
push
pop
addl
dec
lods
shl
jecxz
rorl
fadds
fnstenv
repz
mov
test
fdivrs
loop
scas
dec
cmp
dec
int3
and
lock
inc
mov
cs
cmc
sub
or
or
pop
adc
sbb
push
popf
pop
mov
cmp
clc
out
cmp
fistps
aaa
imul
bound
rcrb
cmp
lret
sahf
xchg
xchg
pop
rcrl
lds
mov
mov
cmp
pop
push
fs
jge
lahf
cmp
out
cmp
or
cmpsb
mov
xor
dec
or
cmc
push
aas
cli
pop
rcrb
pushf
mov
in
cltd
xchg
and
insb
adcb
xchg
arpl
pusha
jno
cmp
sub
pop
xchg
push
je
inc
fcmovnu
addr16
loop
jle
mov
inc
mov
in
int3
jne
or
leave
inc
shl
xlat
rorb
fistpll
fwait
jbe
mov
dec
nop
lea
idivb
ja
in
movsb
fisubrl
add
dec
outsl
mov
cltd
scas
xor
or
fmull
das
jnp
sbb
mov
sub
rcr
rorl
test
adc
int
fbld
push
fildll
or
mov
xchg
sahf
ret
pusha
daa
inc
xchg
pop
inc
mov
and
pushf
sbb
sbb
insl
ss
push
xor
repnz
pop
sti
es
jmp
pusha
dec
jp
iret
hlt
fidivl
cmp
cld
imul
scas
ljmp
ret
daa
pop
and
and
mov
ds
mov
lcall
push
lret
xchg
jl
fistl
popf
sbb
add
imul
frstor
lods
dec
fsubrs
jns
sbb
cmc
popa
orl
rcll
mov
lock
repz
lods
ret
aam
testb
ret
push
out
jbe
cmp
push
push
mov
fwait
inc
pop
mov
cmpsl
push
movsb
rolb
arpl
pushf
push
addl
ss
mov
lods
xchg
lock
cmp
jae
mov
lcall
xchg
dec
push
loopne
lea
inc
scas
and
or
les
sub
out
adc
inc
cmp
dec
jp
xor
pop
xchg
hlt
andb
leave
inc
xchg
push
aad
ds
mov
js
xor
sub
mov
fcompl
inc
cli
cmc
in
jo
in
pushl
adcl
adc
hlt
ret
lea
bound
mov
or
sub
sbb
adc
xchg
dec
cltd
scas
les
insl
cmp
inc
es
lods
xchg
arpl
pop
jmp
adc
rcl
daa
mov
add
and
cmp
dec
lds
repz
inc
cmp
ret
outsl
jl
mov
iret
and
mov
mov
lds
js
test
iret
and
pusha
insb
pop
push
mov
int
aas
push
add
and
js
ret
and
popf
xchg
dec
insl
cld
xchg
mov
fldcw
fcoms
or
out
mov
add
cmc
mov
aas
xchg
stc
test
xchg
inc
cli
jecxz
clc
cmp
daa
int
fs
aas
outsl
mov
aas
in
ja
sbb
psubd
nop
xor
xchg
popaw
stc
imul
imul
fbld
or
in
mov
mov
and
mov
aam
icebp
sbb
repz
imul
jb
imul
lods
std
add
cmpb
gs
xlat
jmp
push
mov
inc
mov
xchg
dec
fisttpll
dec
or
das
icebp
aaa
add
lret
add
shlb
lock
pusha
or
loop
ss
dec
dec
inc
es
lock
push
loopne,pn
push
mov
mov
push
and
push
jle
sbb
xchg
push
adcl
fsubrl
imulb
jno
or
ret
add
jmp
js
arpl
test
arpl
add
int
add
out
out
pop
lcall
leave
cmc
out
out
mov
ljmp
mov
out
arpl
adc
outsb
mov
cltd
hlt
xor
inc
sub
out
hlt
xlat
ret
and
fldenv
roll
scas
scas
leave
lahf
data16
test
jmp
in
xchg
push
cmpsb
xchg
dec
sbb
or
fidivrs
arpl
mov
push
cs
lret
popl
addr16
lods
and
dec
int
mov
addr16
mov
sbb
pop
jl
xor
iret
shll
xor
bound
inc
jecxz
mov
ja
imul
mov
and
gs
pushf
outsl
push
xchg
jl
dec
mov
stos
cltd
dec
and
cld
data16
push
gs
pop
inc
fdivp
mov
lods
cmpsb
cltd
xor
pop
hlt
out
sbb
sahf
je
aad
inc
test
lods
cmp
ja
and
ds
std
cmp
jno
xchg
xchg
jb
pop
sbbl
rcrl
fisubrs
pop
and
dec
jae
or
dec
or
inc
jno
loop
aas
jle
out
outsl
test
fidivl
push
xchg
stos
mov
jg
adc
fdivrl
sbbl
sub
cmpsb
pop
out
fidivrs
sub
das
movsb
dec
cmp
test
loope
push
aaa
dec
lret
sub
mov
jmp
mov
stc
mov
mov
jne
arpl
jg
cwtl
push
lret
xor
sbb
mov
cld
and
fwait
push
mov
out
lahf
adcl
add
sub
roll
sub
jmp
jmp
and
mov
mov
stc
mov
mov
popa
ret
or
pop
daa
stos
flds
inc
inc
mov
sbb
and
mov
mov
mov
mov
adc
lods
adc
xchg
cmp
dec
ret
pop
aad
jnp
jb
aas
je
sbb
jae
fisubl
aas
ret
movsl
lods
sahf
adc
aad
clc
ret
pop
inc
sub
lds
rcl
mov
xorb
push
mov
mov
pop
mov
int3
das
push
movsb
mov
or
jnp
shll
out
fxam
sub
xor
jns
shlb
or
stos
jbe
inc
cld
sub
movsl
dec
loop
fsubl
clc
aam
sbb
xchg
in
lret
jno
and
js
clc
mov
imul
push
in
jp
push
mov
push
mov
fadds
test
shrl
in
sub
out
test
cmp
popa
adc
rcrb
mov
cld
icebp
aas
push
movsl
jp
popf
ret
and
pop
and
lock
mov
popf
in
dec
int
sub
enter
cmp
jl
jo
sub
sbb
fpatan
les
adcl
mov
jg
pop
ljmp
sbb
data16
mov
arpl
shrb
dec
int3
das
push
xor
cltd
mov
jnp
scas
fidivl
mov
push
sarb
rorb
or
popa
cmp
shrb
jo
cmp
mov
dec
jle
stos
test
push
lcall
xor
sub
in
mov
in
and
add
jns
xchg
out
sarl
fdiv
mov
sub
shrb
notl
sub
adc
add
mov
gs
test
je
and
out
mov
sub
rcll
outsl
sbb
filds
fsub
aas
jg
sub
xor
cs
push
pop
ljmp
jbe
dec
xchg
add
jae
adc
adc
cld
clc
dec
rcll
and
lahf
leave
nop
mov
clc
fstl
ljmp
stos
lret
test
mov
fadd
xlat
ljmp
inc
xchg
cltd
mov
ja
or
loope
mov
cmpsl
xor
sarb
rorb
into
subl
stos
out
into
test
jnp
xchg
bound
add
lcall
je,pt
cli
rcll
mov
and
inc
xor
out
jo
movsl
push
push
pop
addr16
faddl
shrb
stos
rcll
aam
hlt
ror
mov
decl
ret
push
scas
pop
aad
push
inc
mov
xor
sbb
cmp
push
mov
push
ds
movsb
in
dec
xchg
lret
push
mov
mov
jg
bnd
std
call
xchg
xchg
adc
in
inc
test
imul
add
loop
clc
xor
jecxz
inc
sbb
cmp
cltd
mov
pop
jo
test
lret
mov
fimuls
push
lret
or
mov
pop
std
popa
aad
aaa
imul
fsubs
std
iret
ljmp
imull
aas
into
jno
cmp
in
addr16
ds
test
adc
add
add
lds
lahf
mov
stos
sti
or
and
mov
sub
push
stos
cmp
add
sarl
jae
mov
sbbb
and
leave
in
pop
push
repnz
imul
and
sub
into
ja
or
jo
test
adcl
loopne
enter
into
mov
out
or
jg
or
js
dec
pop
bnd
cwtl
movsl
inc
iret
xchg
xchg
ret
pushf
inc
sbb
rol
sbb
cmpsb
jmp
lret
mov
lods
dec
loopne
xor
add
ljmp
inc
popa
xorl
das
sub
lahf
push
xchg
rcr
subl
push
mov
adc
and
dec
test
sub
fdivs
outsb
lods
and
stos
jmp
dec
mov
in
mov
xor
mov
mov
xchg
iret
aas
jmp
rcrl
scas
js
ljmp
js
mov
dec
and
xorb
pusha
scas
sahf
ss
lret
scas
int
inc
xchg
out
cs
and
add
inc
enter
ficomps
andb
popw
sub
inc
repnz
xor
fcoml
dec
fimuls
jo
sbb
cmp
bound
js,pt
repz
movsl
push
pcmpeqb
cmp
or
xor
pop
es
mov
jae
sahf
xchg
and
mov
xor
adc
mov
mov
aas
xchg
lods
dec
lods
decb
out
push
fidivs
or
cmc
push
lods
xchg
pushf
fistpll
xchg
pop
xor
jecxz
out
adc
and
adc
fs
popl
jbe
jg
ds
jb
xchg
imulb
sub
dec
cmp
mov
aaa
in
push
stc
inc
mov
mull
mov
cmp
xchg
xlat
dec
jl
sbb
and
ss
push
add
cmc
stos
outsl
mov
cmp
rcrl
xchg
sbb
jp
or
jl
and
inc
aad
xor
into
lret
movsl
js
jae
insl
or
rol
adc
mov
bound
add
int
add
clc
iret
or
aad
xor
cmpsl
and
das
movsb
adc
enter
mov
or
sbb
add
cmpl
mov
decl
cltd
jae
push
or
repz
cmc
fcmovne
scas
jl
enter
jb
pop
push
divl
pop
sub
ss
mov
lock
js
mul
inc
arpl
mov
mov
pop
incb
clc
sahf
inc
and
fs
xchg
cld
repnz
orb
pop
mov
out
inc
xor
ss
sub
dec
ljmp
adc
mov
js
cmpl
hlt
sub
mov
xor
in
inc
mov
push
jg
daa
add
aam
cwtl
lds
out
lcall
ret
test
jnp
xor
lods
push
add
mov
fs
dec
adc
negl
imul
sbbl
in
push
es
cmp
orl
mov
aaa
fmuls
test
jl
lea
mov
jne
push
or
icebp
lret
mov
mov
lea
pop
lods
add
ret
xchg
scas
and
mov
mov
mov
and
aad
inc
sbb
lds
in
sbb
leave
xor
mov
and
xchg
xchg
ror
fbld
lds
adc
outsl
lds
enter
rol
sbb
imul
mov
std
xor
lock
scas
jl
sti
mov
jl
jle
cltd
insb
mov
jno
into
lret
sub
xchg
pop
cmp
add
sar
in
lcall
jle
rorl
in
pop
adc
pop
scas
mov
mov
fsubrs
test
mov
stos
adc
shr
and
fsts
sub
xor
ljmp
dec
xchg
mov
dec
push
addr16
popf
into
imul
scas
push
pop
and
jecxz
inc
fsts
or
xchg
xchg
xchg
mov
fcoms
in
xchg
mov
mov
jne
repz
arpl
cmp
mov
dec
dec
hlt
decb
jp
jo
jnp
mov
aas
fs
sub
les
push
jns
push
mov
and
stos
outsl
add
ss
addb
inc
insl
sbbb
orl
dec
fcmovbe
sbb
push
xchg
jo
in
push
mov
mov
pop
cmp
cmp
cmpsl
jae
rolb
jl
roll
xor
xor
adc
sbb
adcb
xor
je
mov
push
and
ja
ret
mov
xchg
mov
pop
cld
jns
inc
mov
in
jne
pop
sub
xchg
in
mov
adc
jno
jb
inc
pop
mov
push
ja
out
rorb
mov
mov
aaa
or
push
mov
pop
adc
aam
daa
mov
cmpsb
notb
rorl
jp
xchg
scas
and
jbe
pop
out
fs
push
add
into
rcll
sbb
mov
mov
xchg
inc
cmpsl
push
or
xor
out
push
sbb
lods
call
nop
nop
test
loop
cli
das
arpl
push
sbb
ss
lods
cld
imul
cs
out
mov
jbe
shrl
dec
push
xlat
mov
jge
cmp
lods
mov
aad
mov
scas
push
loop
fidivs
insb
mov
jge
fldl
lds
push
xor
add
mov
sbb
mov
push
ds
in
dec
mov
ficoml
pop
sbb
cmc
mov
sti
xor
out
out
push
mov
xor
mov
xchg
aas
pusha
lock
mov
pushf
data16
in
jae
jmp
pop
ss
cmp
or
push
sub
mov
and
les
test
xchg
sbb
movsl
aad
push
mov
xor
add
jb
pop
ds
push
sub
pop
ret
add
xchg
push
jbe
shlb
inc
push
mov
xchg
out
pusha
fdivp
ret
decb
push
fidivrl
push
inc
cs
xor
repnz
mov
push
sbb
movsb
clc
lcall
sub
cmp
or
sub
adc
push
cld
mov
push
adc
ud1
pusha
sbb
inc
or
js
mov
sti
les
jge
xor
inc
or
ljmp
inc
fdivrs
fsubl
clc
mov
out
movsb
es
orb
add
dec
scas
or
sub
sbb
cmp
cs
push
lahf
sahf
xchg
jl
ds
testl
push
push
leave
push
xlat
sub
cwtl
fcomps
loopne
jns
mov
push
mov
pushf
and
ds
cmp
in
push
sub
mov
lods
in
outsb
int
movsb
dec
in
lock
xchg
inc
jnp
outsl
fistps
lret
leave
cld
and
test
mov
hlt
adc
cmp
cmpsb
lret
repz
popa
jns
shlb
or
in
adc
out
out
insl
insl
add
cltd
dec
insb
cwtl
mov
dec
repnz
mov
dec
je
ds
jecxz
outsl
roll
sbb
adc
popa
push
inc
push
sub
faddp
push
inc
or
push
xchg
mov
add
xchg
popf
lods
lret
mov
add
xchg
les
daa
aaa
fwait
xchg
into
mov
mov
scas
iret
aad
dec
cmpsl
jl
mov
and
push
xor
mov
cmp
xchg
jl
cmpb
adc
shl
cmc
repnz
mov
cmpsb
movsb
inc
lret
movsb
xchg
jge
and
xchg
aam
insl
addl
jge
pusha
imul
sahf
xorb
adc
shl
or
lods
imul
push
out
int3
dec
or
loopne
shll
sub
in
pop
add
lods
mov
ds
xor
js
cmp
push
inc
gs
sbb
pusha
xchg
movsb
mov
mov
mov
shll
cmp
jne
inc
cltd
adc
sbb
imul
pop
test
repz
add
push
mov
adc
out
in
imul
xor
sbb
dec
lods
adc
jp
mov
adcl
frndint
mov
add
jae
dec
arpl
adc
js
dec
jmp
test
rcrb
repnz
xor
fs
fisttps
subb
dec
cmp
push
insl
sbb
scas
mov
loop
mov
lcall
cmpsb
mov
std
push
and
push
and
jge
cmp
push
pop
shr
nop
pop
mov
and
lea
pusha
int3
push
das
pusha
loopne
ret
es
cltd
ffree
insl
pop
sub
mov
push
insl
dec
mov
push
mov
jae
adcl
adc
mov
inc
fdivrl
scas
jle
lcall
mov
stos
jmp
enter
cmp
pop
mov
and
push
ljmp
outsb
or
andb
sbb
dec
mov
mov
shlb
daa
es
ret
xchg
sub
fisttpl
xchg
dec
inc
sbb
push
mov
into
xor
jp
xor
mov
adc
repnz
xchg
lds
out
jb
daa
mov
daa
inc
push
mov
mov
push
lods
jno
ds
xor
mov
loop
cld
shrl
fcoms
fisubrl
xor
repz
shlb
fs
add
arpl
xchg
adc
pushf
in
and
ret
rorl
outsb
insl
dec
addr16
jle
insb
jne
and
mov
dec
loope
jecxz
mov
adc
jns
enter
test
sub
cld
sarb
lods
jl
leave
mov
mov
and
jns
mov
mov
inc
push
jno
mov
fcomps
jno
int3
jp
adc
fdivrs
lods
xlat
arpl
movsb
cwtl
stc
test
fsubp
mov
andb
xchg
or
pop
adc
xchg
pop
out
push
sub
push
push
push
jmp
push
roll
mov
mov
mov
testl
int3
movsb
and
scas
lds
cmp
mov
xor
iret
test
in
mov
sub
mov
out
loope
pop
in
add
pop
jp
repz
cmp
push
fs
xchg
add
in
xchg
push
or
es
adc
inc
orb
push
sub
cmp
sbb
test
jno
fdivrs
sub
movsb
or
or
enter
push
cld
orb
xor
mov
dec
cwtl
sbb
cmpsl
test
jl
dec
or
inc
mov
insb
mov
mov
mov
stos
test
inc
push
push
xchg
pop
js
cltd
xchg
in
dec
pop
jg
fwait
push
add
push
int
arpl
clc
sub
std
xchg
dec
add
xchg
lret
mov
dec
out
add
add
mov
imul
mov
mov
out
xlat
dec
popl
jae
test
rol
or
shr
imul
push
jle
mov
mov
push
popf
stc
rcrb
and
fcoml
pop
arpl
adc
adc
push
out
xchg
jmp
cmpsl
mov
int
jne
imul
pop
adc
mov
insb
cld
sbb
fxch
loop
loop
mov
das
dec
cmpsb
jp
inc
rcrl
jge
jecxz
dec
inc
jg
ss
mov
fistpl
leave
sub
cltd
ljmp
inc
mov
fadds
pop
fistpl
test
cmp
mov
loopne
fiaddl
popl
sbb
mov
shlb
scas
xchg
xlat
cmovo
int3
lods
test
sub
push
mov
pop
cmp
mov
adc
aam
pop
mov
mov
loope
mov
daa
mov
out
out
mov
mov
sbb
and
call
push
fwait
mov
mov
push
xor
sbb
adcl
adc
xchg
insb
repz
add
push
enter
adc
mov
fcmovne
cmp
ret
mov
scas
pushf
fistpll
shlb
mov
adc
add
fisubl
xchg
in
add
pop
mov
lret
xor
jle
insl
cltd
popa
inc
iret
fcomps
fists
into
fstpl
sbb
cmpsb
loopne
sarl
js
sbb
cltd
push
xchg
jp
pop
pop
dec
sub
mov
stc
mov
aaa
sub
inc
aad
push
shlb
add
lea
fnstsw
xor
leave
cmc
mov
ljmp
cwtl
int
stc
shlb
jae
fsubrs
sbb
push
jl
push
dec
les
test
push
sub
xor
jmp
sub
loopne
push
daa
sbb
in
push
pop
lock
or
mov
jmp
jmp
add
jno
nop
cli
pusha
jp
sahf
cs
xchg
addl
jb
daa
data16
stos
push
push
sbb
pop
jo
adc
or
fs
xchg
or
icebp
push
dec
xchg
mov
lret
jbe
fs
mov
movsl
imull
aad
in
pop
dec
xchg
incb
andl
int3
fsubl
mov
push
or
add
stc
adc
inc
sub
js
outsb
mov
or
stos
jmp
or
xchg
sub
lods
cmp
sbb
mov
dec
pop
ss
loop
pop
inc
lret
shlb
popf
inc
fldcw
outsb
mov
mov
sub
leave
out
sti
insb
mov
sbb
scas
pop
scas
mov
mov
cwtl
or
mov
aad
mov
addr16
in
adc
out
jecxz
pushf
sbb
adc
arpl
fsts
pop
jo
cmp
jg
push
jbe
dec
mov
xor
mov
mov
xlat
jb
fwait
pop
icebp
andl
popa
cltd
sti
int3
test
xchg
adc
sub
cmp
call
movsb
outsb
inc
pusha
pop
jb
pusha
out
pusha
test
bound
rcrb
push
add
xchg
icebp
fwait
jbe
pop
aad
movb
hlt
jle
sub
test
aaa
jl
test
dec
popf
xchg
jge
lods
cmp
call
mov
shll
xor
std
pusha
and
cs
mov
inc
fdivrs
fs
call
add
fwait
pop
bound
sbb
sub
test
cmpsb
pop
icebp
xchg
mov
insb
jb
pusha
sub
push
mov
pop
and
pop
mov
jp
insl
xchg
scas
cwtl
fucomip
pushf
cli
loopne
push
and
loope
add
push
sbb
test
in
jp
pop
adc
shrl
addr16
adc
addr16
das
std
arpl
cwtl
lcall
adc
pop
call
xchg
xchg
lahf
bound
fisubrl
pop
dec
pop
lds
fbld
jecxz
xchg
cmpsl
jne
sbb
cmc
cmc
cs
arpl
loopne
in
imul
fcmovne
loopne
xchg
mov
sarb
sub
ret
sbb
mov
pop
sbb
cmp
pop
adc
nop
lea
mov
dec
in
loope
push
das
gs
fxch
mov
pusha
mov
push
shll
inc
lds
bound
leave
aas
pop
fs
ret
mov
xchg
adc
or
and
ret
ljmp
push
mov
xor
push
mov
push
std
adcb
adc
dec
loop
sahf
jge
sbb
add
int
insl
push
cmp
xchg
out
int
insb
shlb
dec
sbb
daa
pop
fldenv
mov
push
icebp
cltd
jae
fs
cmc
sti
push
cmpsb
xor
sub
xor
cmp
shll
iret
sbb
mov
insb
outsb
or
je
adc
sarl
arpl
sbb
add
push
sub
pop
push
cltd
pop
mov
or
ds
fnstcw
sahf
jbe
add
xchg
arpl
lods
adc
push
pop
sub
out
mov
les
test
iret
rcrb
cld
test
push
cld
xorb
pop
push
in
in
enter
dec
test
movsl
out
outsb
dec
outsb
xchg
repz
cmp
popf
notb
ja
test
cld
fisubl
loopne
bound
cmp
xor
and
xchg
adc
push
adc
push
adc
std
inc
push
gs
lock
cmp
fisttpl
sbb
mov
push
icebp
popa
iret
mov
lods
bnd
sti
sub
adc
or
pop
or
std
pop
movsb
jns
inc
adc
pop
lods
mov
mov
lahf
loope
pop
lret
outsl
fcompl
ret
add
xor
xor
add
test
adc
sub
shlb
push
hlt
mov
pop
aam
repz
push
xor
or
fistl
rolb
push
jo
mov
mov
arpl
in
jmp
and
and
pop
movsl
movsl
lea
mov
mov
pushf
mov
lahf
std
pusha
xchg
pop
fldt
pop
mov
or
out
pslld
xlat
in
push
and
loop
pop
fidivs
sub
es
ljmp
sbb
mov
rcrb
sub
adc
dec
fwait
inc
mov
nop
push
and
jg
sbb
cltd
xchg
mov
jnp
jl
movsl
in
scas
mov
mov
mov
cli
addr16
mov
les
pop
lcall
nop
imul
push
in
push
or
out
push
adc
daa
xchg
xchg
mov
call
cmc
and
jne
cwtl
push
call
inc
popf
mov
mov
cs
inc
shll
stos
mov
and
call
mov
cmp
movsl
loop
icebp
xchg
cmp
cli
lahf
ret
js
jmp
push
xchg
aas
and
or
ss
cmpl
stos
int3
iret
cmp
outsl
orb
add
cmp
xchg
daa
aam
push
pop
cmp
xchg
cmp
jo
je
stos
pop
push
dec
jge
cmpsl
movsb
xlat
and
xor
int3
xchg
subb
and
pop
cmp
sahf
sub
mov
stos
decb
sahf
push
or
add
adc
leave
loopne
nop
push
repz
les
push
mov
mov
ds
pop
jg
xchg
ret
andb
mov
xchg
ret
in
pop
adc
pop
push
pop
mov
out
clc
or
mov
sbb
aaa
adc
sbb
daa
int
add
push
mov
test
sahf
sbb
mov
and
jnp
push
cltd
cmp
sub
test
leave
and
movsl
push
sub
xchg
inc
outsb
xlat
push
lods
xor
mov
out
ja
mov
pop
stos
mov
mov
lahf
xchg
test
hlt
xor
in
cmovnp
lods
test
fwait
jb
dec
cwtl
int
or
xor
inc
jno
jnp
sub
jge
mov
int
je
jo
pop
adc
xor
rcrb
ss
nop
std
xor
les
outsl
xor
push
and
insb
mov
mov
xchg
fidivs
out
scas
or
lods
inc
fistpll
push
lea
into
sarl
insb
lock
orl
es
pop
bound
dec
ja
jge
imul
mov
inc
nop
jecxz
in
hlt
fwait
xlat
cmc
test
es
lret
imul
jo
xor
out
mov
fsubs
jnp
push
fwait
js
or
jne
cltd
std
aaa
mov
inc
cmpsl
push
test
xchg
push
cmpsl
push
aad
push
xor
outsb
cmp
pop
icebp
mov
sbb
mov
shrb
adc
mov
mov
inc
loop
cmp
sbb
mov
mov
add
jo
jb
adc
mov
add
sbb
popa
int3
inc
xchg
or
sarb
mov
dec
lds
arpl
leave
push
xor
sbb
mov
inc
or
out
jo
mov
mov
mov
mov
das
push
mov
inc
outsl
push
jns
dec
pushf
lret
jl
data16
jae
jns
cmp
inc
and
jae
imul
mov
loop
es
push
aaa
lret
or
in
fists
std
sbb
fstl
mov
lret
cld
popa
notl
mov
test
pop
mov
fists
xor
push
lcall
iret
xchg
pop
rcl
loope
lock
jbe
loopne
or
sbb
xor
add
adc
inc
cwtl
lret
mov
sbb
outsl
xchg
mov
jnp
cli
add
jne
arpl
jno
shl
test
bound
test
fcmove
pop
inc
aaa
lea
add
cmp
pop
test
inc
inc
mov
mov
iret
pop
xchg
sbb
pop
jp
je
jbe
data16
adc
mov
push
inc
popf
mov
add
push
mov
fsubrs
mov
push
mov
fiadds
sbb
mov
jl
ret
mov
rcl
mov
lods
jno
xor
or
jecxz
aaa
dec
fidivs
and
push
mov
das
sub
loopne
imul
jo
mov
jbe
dec
inc
arpl
mov
leave
notb
gs
aas
dec
repnz
xchg
and
shll
cmp
xorl
mov
inc
jne
xchg
or
cwtl
inc
xchg
ret
cwtl
inc
enter
mov
in
push
dec
mov
lret
sarl
icebp
sbb
cmp
mov
mov
lret
inc
mov
dec
push
stos
xchg
lods
adc
cld
or
jae
int
mov
fdivl
pop
nop
jl
out
inc
loop
mov
lds
addl
jnp
or
scas
cld
and
pop
add
mov
jae
ljmp
mull
and
into
or
ss
pop
mov
xor
xchg
insl
or
or
test
xor
push
mov
sub
sahf
push
insb
ret
push
scas
mov
sub
daa
jmp
mov
andb
adc
cmp
mov
cltd
cmpsb
xchg
out
mulb
out
popf
mov
cmpsb
pop
mov
lds
cmp
cmp
inc
or
subl
lock
mov
xchg
mov
mov
and
ja
push
xchg
cmpsl
cmpl
xor
lods
mov
imul
push
imul
lcall
out
or
xchg
popa
adcb
inc
cli
js
jmp
inc
xor
push
ficomps
or
popa
mov
inc
sbb
cwtl
ret
in
fdivl
lods
in
mov
lret
add
push
dec
stc
ror
or
divb
xor
and
add
cmp
scas
sarl
adc
loope
movsl
aaa
inc
push
mov
incb
or
jne
in
cmp
mov
sub
enter
jp
xor
or
push
fcom
push
jle
push
out
inc
in
nop
mov
movsb
push
lock
sbb
mov
jne
fisttps
mov
xchg
ud0
test
sbb
repnz
ret
aaa
repnz
sbb
cld
mov
test
and
sub
imul
enter
inc
jmp
iret
out
insl
sbb
movsl
cld
in
add
leave
fistps
mov
cmp
shlb
jbe
xor
and
call
pop
jmp
ljmp
imul
cwtl
movsl
jmp
ret
bound
dec
or
mov
mov
mov
xchg
add
les
pop
fimuls
mov
jb
sti
out
jbe
inc
sahf
stc
cmp
pop
insl
repnz
mov
mov
add
dec
and
lods
mov
xor
jnp
mov
jo
out
cmpsl
and
dec
dec
js
mov
rcrl
int
xchg
das
mov
xchg
cs
icebp
cwtl
mov
mov
fcomps
xor
push
ss
pusha
roll
or
pop
cmc
popa
mov
mov
outsl
lds
push
ret
das
mov
loopne
sub
add
roll
cmp
and
jle
inc
dec
add
daa
imul
and
mov
mov
adc
jecxz
popf
cmp
out
adc
sbb
out
xchg
imul
sub
push
sbb
jecxz
push
loop
js
add
push
cltd
xor
xor
divl
xchg
in
ja
insl
mov
sub
int3
loop
mov
add
inc
push
or
daa
dec
stos
loop
sti
jb
push
mov
add
mov
test
adc
push
mov
inc
jecxz
loop
fnsave
sub
nop
sub
andb
inc
ret
cli
mov
fidivrl
push
nop
sbb
popf
int3
inc
sub
and
cmp
jl
pop
loopne
xor
ret
cmp
mov
hlt
jb
jecxz
cmc
mov
xor
out
push
and
mov
or
lcall
call
or
push
into
xlat
and
sbb
dec
cli
jae
into
es
mul
mov
push
dec
mov
xchg
scas
stos
and
ss
fwait
inc
cmp
outsl
sbb
lds
jp
or
es
fimuls
mov
xchg
xor
rolb
pop
xor
cltd
cmp
mov
xor
in
mov
je
imul
jae
xor
jo
out
cmpsl
loope
mov
inc
xchg
into
dec
mov
mov
inc
dec
popf
push
fdivs
sahf
out
subl
dec
call
sbb
fprem1
data16
stc
aad
dec
xlat
xchg
mov
xchg
xor
mov
cwtl
cmp
arpl
adc
cmp
pop
test
sahf
pop
cmp
jbe
dec
mul
pop
xor
stc
fsubr
out
sbb
dec
push
mov
mov
or
rcll
add
test
outsl
icebp
icebp
les
addl
push
gs
adc
rcrl
cmpsl
xlat
cmpb
sbb
jp
cmp
shrb
stc
mov
popf
add
clc
sub
mov
into
mov
cs
popa
add
call
jmp
mov
push
push
test
adc
mov
mov
and
movsl
xchg
repz
xchg
into
hlt
and
shlb
lods
fwait
sub
mov
inc
or
mov
push
dec
movsl
cmp
sahf
aaa
xchg
inc
out
or
int
jae
sbb
lret
xchg
adc
leave
push
adc
jp
add
mov
xchg
icebp
mov
pushf
daa
sbb
jp
mov
imul
mov
xor
in
and
fnstcw
ljmp
pmuludq
xchg
test
jo
push
daa
dec
mov
repz
inc
cmp
jecxz
imul
lods
jbe
aaa
int
jnp
push
or
filds
pop
gs
decb
cmc
push
mov
xchg
ja
lds
jecxz
jns
xor
pop
jl
jge
icebp
mov
std
nop
push
ljmp
js
mov
in
les
jle
push
inc
push
xor
cwtl
loopne
xchg
ret
mov
jmp
xor
lods
push
pop
aad
xlat
out
and
jnp
ret
and
and
inc
and
or
into
les
daa
lretw
fidivrl
push
and
test
ds
movb
stc
jecxz
jmp
sbb
ljmp
push
push
and
dec
jecxz
push
pop
jb
cmp
cmp
xchg
and
jns
lds
in
cltd
mov
mov
je
lret
jl
mov
and
mov
iret
flds
fwait
idiv
jbe
mov
mov
mov
dec
xor
xchg
lea
jno
cltd
sub
jg
and
fsubrl
out
test
and
lea
push
inc
cmp
stos
js
jle
test
and
mov
add
and
mov
mov
out
mov
out
mov
dec
xor
adc
xchg
xorl
adc
shrl
xlat
push
mov
xlat
loopne
arpl
pushf
shrl
jecxz
testl
xchg
and
mov
adc
imul
popa
cli
push
int
ret
aaa
adc
inc
dec
out
jo
mov
push
mov
ret
mov
ja
xor
dec
xchg
cmp
stc
insb
pop
test
in
push
mov
mov
xchg
fsubl
sbb
movsb
sub
paddusw
dec
pushf
les
sbb
dec
in
xor
fcompl
loop
pop
mov
lret
adc
insl
cltd
sbb
push
sti
nop
es
sbbb
adcl
xorb
inc
jnp
rcrb
pop
iret
and
stos
jg
jge
xchg
js
call
test
fldcw
pop
das
jg
imul
in
mov
shlb
mov
cmp
fcmovb
add
fsub
mov
xchg
pop
mov
mov
test
sub
ss
aam
jne
sub
xor
daa
dec
jne
and
push
cltd
jl
call
cld
push
addr16
mov
lcall
or
mov
movsb
xor
pushf
mov
test
sub
sbb
inc
dec
mov
aas
jns
test
jmp
mov
hlt
jbe
fimuls
xchg
insb
les
pop
add
cltd
xlat
insb
jns
push
mov
pushf
jno
popf
cmp
icebp
stos
ljmp
aam
sbb
imul
andl
adc
inc
or
lret
lds
xor
xchg
cmp
sbb
aad
leave
arpl
stos
out
lock
ljmp
jp
or
mov
lea
bound
stos
adc
insb
jp
jmp
add
and
xchg
orb
lods
rorb
lds
xor
sub
stos
fcmovbe
inc
dec
enter
lock
out
adc
lahf
inc
cmpsb
push
dec
repnz
bound
inc
pop
in
xor
mov
ja
cmp
je
mov
jb
sbb
and
jbe
pop
call
addr16
mov
icebp
repnz
andl
jmp
push
fcoml
xor
cmpsl
cwtl
in
pop
divl
outsl
pop
mov
sbb
jecxz
ljmp
shlb
scas
sbb
movsb
xchg
cmp
pusha
scas
jnp
push
mov
and
in
cmc
mov
inc
test
std
das
nop
dec
mov
mov
dec
test
lret
pop
pusha
cltd
jg
pop
es
and
adc
setp
xchg
shl
jne
adc
and
data16
sbb
call
push
scas
push
sub
mov
mov
lret
jae
mov
add
stos
xchg
xchg
or
or
imul
adc
lods
fstpt
pop
pop
sbb
push
sbb
roll
mov
fstl
inc
add
fidivs
in
loopne
cmpb
pop
call
pop
cmp
xor
enter
inc
aas
dec
insb
testb
sub
in
movsl
out
daa
or
push
sbb
stos
test
xchg
mov
sbb
pop
ljmp
sub
mov
into
fcoml
mov
mov
mov
push
mov
xchg
in
jmp
mov
ja
or
dec
xor
mov
mov
popf
pop
int
cmpb
repnz
lret
notb
jb
sbb
cltd
jge
pop
test
test
and
shll
pop
sarl
inc
mov
inc
push
fcmovne
stos
loope
fs
imul
addr16
jmp
jbe
shrb
push
insl
push
xchg
ljmp
mov
inc
or
sub
adc
in
in
jne
push
repnz
cmp
in
jae
fs
cmp
lret
addr16
jae
bound
call
jae
shll
mov
test
loop
mov
ljmp
jne
pop
out
mov
mov
pop
icebp
aas
pop
xor
outsb
imul
adc
cld
ret
dec
sbb
xlat
movsl
or
pushf
xchg
adc
xlat
mov
mov
xchg
into
clc
loop
push
js
inc
mov
aas
mov
jle
in
jl
lret
pop
dec
add
adc
push
js
in
shufps
or
mov
xchg
jg
adc
es
or
mov
mov
repz
jge
fcompl
dec
xchg
pop
into
xchg
add
xor
jns
pop
es
mov
cmp
xchg
xor
cwtl
jp
out
mov
ljmp
cmpl
pusha
out
and
push
cs
add
lahf
das
pop
out
push
test
pop
aaa
popf
cwtl
mov
sbb
loop
outsb
push
dec
js
fnstenv
and
cmpsl
and
adc
out
or
clc
cmp
xchg
mov
enter
cmp
pop
ret
test
arpl
rorb
sub
xchg
adc
push
int3
xchg
jb
inc
pop
out
popf
dec
in
repz
mov
int3
ja
aas
out
sub
inc
mov
mov
pusha
and
call
jp
jg
push
nop
jo
mov
daa
in
add
aaa
dec
idivb
sub
xchg
cmp
stos
pop
icebp
mov
aaa
ret
push
cwtl
enter
in
ret
sti
dec
mov
outsl
adc
push
push
pop
jb
pop
add
icebp
fldenv
loopne
fsubrl
lea
and
in
movb
in
in
pop
sahf
int3
jp
inc
divb
movsb
add
and
ds
mov
dec
flds
dec
cwtl
addl
cmpsb
es
sub
repz
lea
push
es
lea
in
test
roll
shl
adc
cld
add
stos
fucomp
or
ljmp
lods
lods
sbb
ss
adc
add
cmp
pop
inc
inc
ds
xchg
sub
push
ret
and
sbb
mov
popf
mov
cld
ja
pop
dec
mov
sahf
data16
and
sbb
js
jo
stos
testl
vpavgw
pop
into
ljmp
mov
mov
cwtl
xchg
xchg
sbb
mov
adc
sbb
push
fwait
adc
mov
test
pop
adc
shll
cmp
je
hlt
nop
sub
lods
xchg
daa
push
mov
mov
jge
xor
mov
or
pop
push
and
xor
mov
ss
inc
out
or
sbb
testl
stc
movsb
lcall
mov
dec
xor
sbb
sbb
sub
dec
or
cmpsl
insl
shlb
cmpb
xor
jae
sub
mov
xor
push
roll
enter
into
test
inc
fwait
dec
ds
sub
decl
fisubrl
mov
inc
mov
in
mov
or
aam
jb
ja
lods
sbb
jne
mov
jecxz,pt
or
cmpsb
stos
xchg
jae
sub
jle
sbb
fst
in
mov
inc
push
ret
fstpl
cld
mov
jle
jp
mov
lea
pop
push
xchg
or
repnz
mov
mov
movsl
sahf
pop
jl
mov
addr16
sub
cmpsl
je
jg
push
lahf
jg
jmp
popf
mov
sti
hlt
cwtl
cmp
mov
popa
aas
call
fcmove
jmp
xor
in
lcall
xchg
add
andb
ds
inc
xor
addl
stos
clc
jmp
enter
push
adc
jb
addl
xchg
push
fisttpll
xchg
lahf
mov
imul
push
test
pop
add
jno
ljmp
mov
dec
cwtl
into
shrb
das
ja
jbe
jl
addb
scas
pop
es
sub
pop
lret
sbb
ja
sbb
fidivrs
or
pop
add
xorb
and
out
lret
jp
sub
cld
aaa
arpl
nop
push
enter
pop
jmp
fisubs
loopne
mov
cmc
shl
lods
jbe
lcall
fstpt
mov
lret
push
or
jmp
cli
insb
add
test
sub
dec
fsubrl
test
je
xchg
scas
jnp
or
mov
dec
test
popf
std
shr
sti
mov
loopne
dec
push
aaa
pop
ret
clc
jo
das
out
mov
lds
sub
rep
outsl
jl
shlb
lea
adc
dec
cmp
popf
mov
lock
sbb
ds
jae
enter
out
outsl
out
push
iret
ret
adc
das
mov
jg
jg
adc
pop
xchg
popa
lret
mov
mov
adc
and
ficompl
add
dec
adc
aam
push
inc
shlb
shrb
in
jns
test
int
adc
fdivs
push
mov
mov
iret
push
fdivrs
jae
mov
xchg
mov
sbb
jae
inc
int3
pop
cmpb
mov
decl
aam
jecxz
adc
rorl
jp
cs
mull
cs
addb
sbb
shr
dec
cmp
jne
adc
dec
adc
jbe
sbb
push
inc
adc
fwait
dec
pop
outsb
dec
push
fidivs
push
sbb
adc
cmp
iret
pop
ljmp
xor
mov
ret
inc
cmpsb
pop
dec
dec
sbb
das
andb
add
xchg
lds
rol
xchg
scas
mov
xor
jb
jp
xchg
xor
stc
pop
jmp
lock
sbb
and
adc
jge
mov
loopne
out
gs
mov
js
pop
jl
imul
xchg
fcmovnb
push
adc
aam
cmp
pushf
mov
test
in
pop
mov
adcb
and
stc
xlat
pop
adc
jge
pop
outsb
in
mov
in
mov
std
cmp
ds
mov
pop
loopne
xor
fistpl
or
push
inc
data16
mov
outsb
jbe
xor
movsb
mov
add
in
push
movsl
in
stos
outsl
shll
mov
inc
cmp
je
and
repz
inc
or
pusha
in
dec
nopl
test
mov
cmp
xor
stc
inc
dec
loop
loopne
push
int
in
mov
inc
sqrtps
ret
test
xor
fistps
rol
lret
addr16
mov
mov
mov
mov
outsl
call
cmp
outsl
loop
clc
subb
bound
adc
jg
inc
lods
pmaxub
repnz
imul
dec
pop
pop
mov
test
adc
jo
push
fcmovu
fwait
push
ds
push
push
sub
scas
inc
push
jg
mov
inc
adc
int
pusha
or
jbe
daa
cmp
dec
ror
inc
movsb
aad
into
shlb
or
sahf
cmp
sub
loopne
out
sbb
fwait
xlat
xor
xor
dec
hlt
xchg
inc
psrad
and
push
ficoml
inc
aam
ss
add
fldenv
xchg
adc
mov
dec
punpcklwd
jns
mov
pop
aaa
int3
pop
push
pop
dec
jmp
imul
push
sbb
ds
xlat
add
mov
sub
xchg
lret
ss
jns
xchg
pop
repz
shll
nop
mov
ljmp
bound
adc
ret
dec
pop
mov
in
xchg
cmp
lret
fs
mov
loopne
push
bound
jp
jo
jle
mov
cmp
lds
bound
aam
and
arpl
pop
mov
outsb
mov
cmpsl
inc
cltd
insl
repz
mov
int3
sub
scas
cmp
hlt
inc
aaa
mov
out
or
mov
mov
ja
je
or
dec
xor
xor
xlat
add
mov
neg
xor
mov
sub
lahf
cmp
mov
loop
mov
out
mov
fidivs
push
dec
inc
iret
inc
or
imul
iret
adc
mov
loop
mov
xchg
sbb
mov
cmpsl
das
sub
cmp
mov
fs
or
mov
or
or
arpl
mov
sbb
dec
push
in
or
ror
loopne
bound
insb
jecxz
and
sbbb
mov
icebp
test
popf
xor
fisttpl
movsb
adc
insb
or
fcmovnu
movb
xchg
aas
mov
mov
mov
mov
movsl
jnp
stos
mov
je
call
xchg
push
into
int
mov
sub
setg
cmp
xor
push
imul
fs
xchg
mov
nop
and
mov
cmp
rcl
loopne
fcoms
movsl
fidivl
sbb
xlat
mov
or
mov
push
fdivs
adc
outsl
jg
adc
sti
les
add
sub
int3
js
mov
pop
in
addr16
jmp
inc
add
es
nop
adc
add
pop
xchg
push
cmpsb
roll
nop
insb
dec
test
lahf
test
fsubl
jle
inc
jmp
jae
add
pop
sub
into
fcom
and
and
jb
inc
daa
push
mov
test
call
subb
inc
xorb
mov
and
imul
dec
inc
dec
mov
mov
add
in
fcoml
dec
and
popf
mov
ds
mov
pop
jbe
ljmp
ja
mov
sbb
insl
lods
hlt
mov
dec
xlat
jecxz
xchg
adc
dec
push
inc
fidivl
xor
pop
mov
push
andl
popa
repz
aaa
ret
inc
into
add
mov
mov
sub
mov
les
xlat
add
aam
add
mov
and
sarl
inc
fimull
fs
jecxz
sbb
xchg
and
and
test
fldl
lods
js
and
mov
in
pushf
pop
mov
xlat
adc
push
push
adc
pop
sahf
repz
sbb
scas
mov
jecxz
and
sti
push
mov
push
or
mov
hlt
jns
mov
push
test
mov
inc
sbb
pop
outsl
mov
pop
and
inc
lea
pop
cwtl
pop
pop
jg
mov
mov
mov
add
mov
mov
mov
xor
lcall
push
or
jp
mov
fistps
xorb
fcmovb
stos
push
mov
jmp
cmpsl
mov
dec
ljmp
jns
mov
dec
xor
inc
movsl
push
add
scas
ljmp
ja
mov
sbb
mov
mov
test
mov
sbb
jmp
dec
jle
sbb
es
pop
dec
lret
insl
pop
add
sti
pop
jae
dec
mov
inc
jns
adc
nop
pop
lods
xchg
fcmovb
or
cmp
dec
or
mov
pop
push
push
xor
stos
shll
cltd
fcoms
iret
imul
sbbl
push
js
mov
xchg
mov
adc
enter
push
push
mov
sub
lcall
mov
sub
sub
jecxz
pop
sub
and
das
or
sbb
push
or
sarl
adc
xorl
xor
push
hlt
add
dec
in
enter
push
test
inc
mov
orb
in
imul
mov
push
jo
inc
loop
movsl
mov
xor
cmc
push
and
cmp
add
in
sbb
sub
sbb
inc
call
data16
mov
ror
xchg
add
fcoms
pop
sbb
mov
fdivrl
push
fwait
shll
sbb
mov
shl
cld
lock
push
dec
xor
shrb
sub
popl
fsub
adc
dec
pop
data16
cmp
adc
dec
cmc
fldpi
cld
and
dec
mov
ljmp
mov
xchg
cmpsl
mov
lods
jnp
pop
mov
outsl
cmp
sahf
test
fisttps
sbb
test
dec
fists
cmpsl
lods
stos
mov
hlt
cltd
fdivl
cmp
sbb
xchg
iret
xor
out
add
mov
aad
inc
mov
jge
jns
jns
jns
jmp
inc
xor
out
push
sbb
pushf
mov
clc
je
jg
dec
cld
lds
dec
cmp
js,pn
jp
imul
sbb
cltd
fwait
mov
and
icebp
xor
negb
fisubrs
mov
outsl
push
sub
insb
std
jge
movsb
push
aad
cmpsl
inc
push
or
cltd
jo
sub
xor
push
sub
fsubrp
pop
aad
testb
ret
repz
cmpsl
and
lods
dec
push
and
xor
lahf
pusha
and
lea
loope
loopne
and
pop
aad
pop
daa
pop
lret
das
test
jge
mov
or
loop
popa
clc
pop
sub
mov
sub
sub
xchg
or
or
pop
call
cmpsl
sbb
mov
rcll
mov
dec
mov
jmp
jl
inc
popa
add
movsl
cwtl
fldt
inc
xchg
pop
pop
mov
testl
mulb
or
nop
push
cli
gs
mov
cmp
das
insl
aas
dec
xor
in
outsl
mov
jo
addr16
adc
out
mov
cmc
jle
inc
add
and
and
call
cmpsb
sbb
imul
and
aaa
or
sub
xor
push
push
inc
cmp
fstp
jle
or
fcmovnb
roll
mov
call
inc
je
and
adc
data16
cmp
mov
aad
into
push
adc
bnd
lret
xchg
push
aad
pop
in
loope
dec
cli
pop
sub
int3
leave
es
subl
sbb
push
in
dec
sbb
insl
cmpsb
add
out
and
cwtl
sbb
lret
adc
test
mov
add
imul
fwait
imul
sbb
or
sbb
xchg
ja
ret
pop
imul
adc
arpl
cld
stos
jno
jmp
dec
push
jp
adc
and
aas
inc
incl
js
out
insb
mov
call
fsts
pop
inc
repnz
imul
sbb
bound
inc
inc
cli
pushf
sub
xor
int3
dec
shl
stos
jne
adcb
fdivrl
sahf
mov
scas
pop
sub
pop
aad
jge
mov
ret
push
andl
dec
pop
pushl
push
mov
xchg
sub
fldenv
cld
push
push
cmp
imul
lods
mov
cmc
push
dec
mov
mov
cmpsl
mov
add
xor
pop
daa
dec
fiaddl
cmpsb
push
stos
mov
ds
jle
and
in
aas
lea
pop
inc
pop
into
movsl
pop
cli
xlat
adc
pop
dec
subb
cmp
popf
and
shl
push
lret
pop
pop
mov
inc
sti
jg
push
mov
jbe
test
jbe
std
subl
sbb
jb
ret
gs
cs
testl
adc
aad
dec
hlt
dec
inc
leave
jle
push
jb
mov
push
adc
pusha
ffreep
adc
pop
iret
push
stos
inc
test
lret
or
movsl
es
in
mov
sar
inc
mov
sahf
rol
push
xchg
nop
mov
xchg
lods
sbb
sahf
jo
imul
incl
or
xchg
jbe
rorl
push
in
sub
iret
movsl
mov
pop
xchg
mov
dec
pusha
xor
repz
push
ds
dec
shlb
sti
fnsave
cmpsl
or
mov
ljmp
jecxz
pop
ror
add
shll
xchg
mov
call
pop
daa
pop
aas
mov
movsl
lea
pushf
test
pop
icebp
cmpsb
std
ret
or
sub
popa
icebp
popf
in
mov
mov
pop
cmp
adc
das
jp
cltd
jae
les
nop
inc
adc
jmp
mov
cli
and
insb
and
dec
cmp
aas
xor
test
push
xor
roll
enter
roll
xor
out
dec
fimuls
sbb
cmp
dec
mov
and
int3
cmp
mov
das
mov
dec
dec
mov
adc
js
add
cmp
cwtl
jae
outsb
jnp
inc
cmp
or
push
in
das
std
fistpll
and
push
fcmovnu
fdivl
inc
cmp
xchg
lret
cwtl
inc
xchg
outsl
add
push
loop
push
and
or
pop
and
aad
adc
mov
jle
insl
jle
stos
lret
cmp
and
lock
add
lahf
scas
ret
loop
add
mov
fwait
bound
xlat
inc
arpl
adc
adc
inc
inc
jnp
fidivrl
sbbb
test
outsb
test
or
inc
add
es
xchg
jmp
mov
fwait
hlt
sbb
fimuls
jge
push
je
pusha
xchg
in
jo
push
xor
cmp
lret
sbb
mov
inc
add
test
pop
adc
mov
rcrl
cwtl
jo
fucomp
nop
iret
dec
xchg
into
push
rol
seta
into
sub
inc
cmp
pop
sbb
cwtl
jmp
cwtl
into
fwait
jmp
xchg
aaa
push
mov
sbb
pushl
fs
dec
int
neg
jp
movsb
or
shlb
pushf
and
adc
lea
push
iret
push
and
mov
cmpsb
push
psrlq
pop
mov
in
out
outsb
popf
lahf
test
out
or
and
adc
mov
js
scas
in
mov
scas
push
std
sub
cwtl
mov
imul
arpl
shll
mul
inc
shrb
fnstsw
add
pop
fistpll
jl
dec
je
and
adc
out
mov
dec
faddl
aas
cs
iret
fidivrl
cmp
into
push
pop
in
fldcw
movsb
fcom
mov
scas
pop
roll
clc
test
loopne
xor
test
inc
inc
cmp
dec
sbb
jae
inc
push
and
add
aaa
push
ss
xor
sbb
out
sbb
dec
ja
rolb
and
xchg
cmp
daa
mov
or
xchg
jnp
inc
jl
js
test
inc
mov
add
dec
push
and
test
repnz
icebp
mov
jo
jnp
mov
int
cmc
push
subb
out
xor
mull
sarl
in
pop
cmpb
fisttpll
mov
andl
cli
ret
jne
stos
mov
sbb
fmull
test
mov
cld
dec
push
cmp
dec
movsb
dec
jg
push
dec
mov
pop
push
mov
xlat
inc
ret
fnstenv
out
and
ljmp
and
jge
jmp
pop
nop
mov
add
mov
test
mov
mov
mov
mov
push
add
not
xor
pop
mov
add
push
cwtl
outsb
push
add
mov
dec
push
out
popf
mov
cli
jg
sbb
pushf
mov
scas
sub
or
nop
jno
sub
jp
xor
scas
lret
mov
fdivl
aam
push
enter
push
jg
jne
pcmpgtd
push
and
cmp
sbb
hlt
push
pop
sub
inc
adc
mov
sbb
and
pushf
push
xchg
stos
jne
pop
std
outsl
in
mov
pop
mov
push
divl
xchg
mov
push
aam
testl
std
jns
xor
sti
pop
fistl
test
int
pop
mov
dec
xor
push
rolb
icebp
pop
loop
and
pop
push
ror
rol
fsubrp
lea
lods
mov
ja
ficomps
iret
dec
sbbb
dec
sbb
in
popa
shlb
fistps
xor
mov
jge
into
dec
out
dec
movl
or
pop
js
and
test
mov
push
cmpsl
adc
pop
repz
scas
fs
jp
ss
fcoms
mov
and
lock
decl
clc
out
es
mov
pop
in
push
insl
jbe
or
xchg
push
push
movsl
loop
into
push
test
mov
mov
js
pop
pop
mov
cltd
push
xchg
out
jb
pop
xchg
inc
js
pushf
sub
imul
test
xor
ret
int3
push
outsb
mov
mov
pop
jp
nop
loopne
xchg
mov
ss
pop
pop
orb
inc
enter
rcrl
stos
scas
shrb
cwtl
fiaddl
int
fwait
pop
mov
fsubs
mov
repz
cmc
dec
inc
add
lods
dec
out
pusha
dec
roll
sub
mov
mov
repnz
push
and
stc
imul
rol
pop
sahf
push
test
mov
ret
out
pop
add
and
adc
mov
pop
fistl
in
insb
dec
ja
push
lret
xchg
nop
xor
lods
repnz
inc
sub
rolb
cltd
cld
mov
out
jl
pop
je
add
sub
ret
mov
idivb
jge
push
jp
fimuls
push
xlat
ja
addb
cmpb
fisubrl
cld
and
push
inc
jmp
loop
pop
fimuls
inc
jne
xorb
cmp
in
pushf
mov
jno
xchg
mov
repz
test
popa
or
xor
dec
stos
pop
mov
out
inc
daa
sahf
js
les
testb
faddl
movsl
and
shll
je
ret
lea
addl
pop
mov
icebp
sbb
xorb
stc
or
sbb
fcmovnu
stc
das
test
cmpb
mov
mov
lods
mov
rorl
push
xor
sti
ja
into
clc
add
mov
xchg
f2xm1
pop
sti
sub
ret
rcrb
lods
add
lret
popa
push
iret
outsb
movsb
stos
in
rorl
mov
ret
rorb
int3
loop
xchg
insl
push
push
jbe
pop
repz
inc
mov
xorl
popa
or
jp
cmp
push
pop
loop
xchg
adc
mov
ja
xor
dec
dec
push
push
into
leave
push
mov
stc
pop
in
or
pop
sub
sahf
ja
xor
inc
push
or
sub
mov
xchg
jge
xor
xchg
scas
in
cmp
notb
dec
lds
dec
and
inc
dec
mov
data16
rcl
jmp
inc
sbb
lds
dec
lret
push
cmovns
mov
or
jle
push
cmp
test
sahf
add
inc
in
push
mov
xchg
xlat
repnz
inc
inc
cwtl
push
xor
mov
lcall
xor
push
js
add
mov
lock
mov
inc
jp
lret
loop
fwait
mov
xchg
pushf
sub
insl
aaa
dec
pop
addr16
jle
adc
sub
cmp
popa
test
pop
dec
les
outsb
pop
lcall
cs
mov
inc
and
daa
mov
mov
lods
dec
xor
adc
stc
int
push
and
mov
pop
cmpsb
dec
lret
aas
lds
cwtl
mov
into
cmc
jle
xchg
ret
into
push
sub
push
pop
add
fdivrs
push
pandn
cmpsl
push
pop
push
inc
cmp
sbb
jae
outsb
push
jns
push
inc
iret
push
add
leave
in
sbb
jg
jle
mov
sub
or
cltd
out
stc
mov
sarl
push
mov
pop
mov
jmp
cmp
and
repz
movl
ss
pop
push
testb
cmc
dec
ret
stos
outsl
jae
or
mov
sarl
pop
out
jnp
sbb
and
ja
jo
jle
popa
push
sbb
cmp
mov
into
in
daa
inc
sti
xchg
out
cmp
fptan
imul
push
enter
pop
lcall
mov
loop
jno
sbb
xor
mov
call
ljmp
pusha
rcrb
aam
dec
loop
xor
sub
popl
xor
pop
ret
leave
pop
sub
or
leave
inc
push
pop
in
lret
pop
mov
and
xor
out
xor
xchg
cmpsb
sub
adcb
fwait
xor
sub
mov
dec
inc
out
movsb
repnz
dec
ss
lahf
push
mov
jg
pusha
cmpsl
test
ja
pop
cs
repz
mov
inc
loope
sahf
and
push
sti
mov
imul
ds
imul
jg
add
sahf
sbb
push
ljmp
out
test
addr16
stc
jnp
add
aaa
jmp
pop
ss
jo
scas
xor
int
xor
fnsave
pop
add
jo
inc
mov
stos
mov
mov
and
mov
aam
sbb
in
jno
test
push
jmp
dec
dec
ret
mov
shrl
xchg
popa
jge
stos
je
out
pop
or
jo
leave
outsb
leave
loope
das
inc
movsl
adc
es
cmp
add
fimull
dec
lods
push
xor
lods
ss
sbb
adcb
fwait
jg
or
int
adc
pop
sub
xor
dec
mov
call
or
jle
mov
jge
addr16
sbb
jl
decb
adc
xor
outsb
fs
arpl
push
jmp
dec
ret
stos
loopne
loop
sbb
push
std
push
aad
pushf
add
fwait
addr16
inc
jg
dec
mov
mov
insl
shlb
idiv
aad
pushf
jge
push
getsec
sbb
out
ret
les
xchg
cwtl
push
xor
shl
aas
decl
sti
es
push
test
call
imul
dec
sub
leave
mov
repz
xor
cs
leave
dec
jno
iret
gs
and
sub
xchg
add
lea
push
sub
cmp
sub
fwait
xchg
lods
sti
sub
xchg
inc
pushl
dec
adc
lock
adc
arpl
add
das
mov
mov
dec
sti
sarl
into
xchg
xchg
cmpsl
mov
pop
fldcw
push
inc
mov
cmpl
inc
hlt
and
iret
jnp
push
out
inc
sbb
cmp
hlt
repz
aam
and
push
xchg
sbb
sbb
clc
push
jnp
xchg
dec
pop
jge
lds
mov
in
dec
jmp
jg
push
outsb
das
stos
outsb
sub
shll
and
jp
iret
jp
jae
xchg
inc
movsb
nop
jp
cltd
loope
dec
fsubs
sub
mov
cli
jbe
pop
mov
add
jp
scas
xor
xchg
fmull
pushf
jns
in
cs
jo
ja
jne
bound
icebp
jecxz
xor
mov
xlat
pop
jle
xchg
paddusw
daa
xlat
out
jne
add
std
sub
gs
leave
mov
add
xchg
es
ret
dec
mov
sub
arpl
gs
xor
sarb
adc
jbe
xlat
adc
xor
sbb
lret
enter
pop
jbe
iret
mov
jo
push
call
clc
and
xchg
popa
popa
mov
into
xchg
loopne
sbb
hlt
add
stos
mov
aad
in
test
sbb
add
imul
roll
add
or
into
or
rorb
cmpsl
mov
addr16
shlb
lret
jl
mov
push
mov
dec
mov
push
mov
xor
dec
not
jb
cmp
js
dec
notl
pusha
cmpsl
cmpsl
jmp
add
aad
mov
cmp
rcrb
inc
fs
add
push
jb
test
mov
loope
sbb
xor
scas
inc
or
out
out
loope
cmp
add
push
stos
or
mov
inc
push
xchg
movsl
daa
dec
xchg
lea
jmp
mov
pop
jno,pt
in
pop
jmp
jns
push
leave
repz
push
push
dec
cmp
inc
imul
inc
xor
mov
pop
adc
jmp
jno
pop
icebp
sub
loopne
movsb
out
add
adc
sbb
pop
fsubl
shl
jo
pop
leave
test
rclb
inc
push
xlat
cmp
rcrl
pop
and
test
aaa
bound
imul
cmpsb
adc
mov
mov
pop
xor
sbb
test
enter
add
pushf
fs
pushl
dec
icebp
jge
sbb
cmp
sub
movsb
scas
push
mov
or
sbb
sub
jo
jno
stos
pop
jae
fld
pop
pusha
out
xor
push
inc
lret
aaa
cmp
mov
pusha
mov
and
or
loop
fsubs
jo
movsb
bound
sbb
mov
nop
nop
popa
push
and
pop
movsl
jg
lods
cmp
ret
cmp
cmp
dec
insb
dec
fwait
cmp
mov
je
fidivs
push
jne
jp
jnp
loopne
addr16
movsl
incb
loope
cmpsl
xor
dec
das
push
jl
outsb
cmp
or
les
mov
insb
and
mov
int3
adc
mov
imull
in
pop
in
xchg
jecxz
mov
xor
and
shl
mov
mov
and
dec
mov
fnsave
add
popa
clc
jns
daa
aaa
clc
xchg
lret
js
inc
mov
cmpsb
sub
cltd
or
cmp
mov
mov
and
push
aas
fnstcw
or
push
sub
add
hlt
outsl
mov
mov
aam
popa
push
ds
ret
xchg
jp
jb
adc
jbe
cmp
xchg
sbb
pop
movsb
ljmp
ret
pushl
fmuls
popa
repz
sahf
inc
fimull
push
xchg
popa
lods
sbb
adc
jns
in
out
jp
pusha
mov
sbb
dec
jp
inc
adc
mov
cs
xchg
xchg
dec
inc
jmp
fs
comiss
mov
outsb
push
cmc
in
and
ret
shrl
lret
and
lods
stos
mov
rcll
push
cmpsl
int
daa
mov
repz
adc
test
xor
push
mov
loop
stc
push
daa
int
inc
jne
mov
or
aas
addr16
mov
in
sbb
or
fidivs
lods
adc
xor
outsl
arpl
push
lret
enter
jg
cmp
loopne
scas
mov
inc
test
xchg
addr16
ljmp
push
shll
divb
and
push
iret
jl
in
mov
add
int
add
xor
lods
mov
test
loop
fistpll
shll
xlat
mov
mov
stos
adcl
adc
lods
jmp
cmpsl
or
mov
sub
pop
fwait
mov
rcrl
icebp
mov
test
scas
sub
outsl
fdivl
push
cmp
xchg
repz
push
stos
sbb
sub
xor
jns
sub
xor
clc
cmp
pop
mov
loope
mov
aad
int
xor
mov
cmpsl
call
and
inc
out
jmp
rolb
inc
xor
sbbl
mov
or
test
jae
mov
insl
push
sbb
stos
add
sti
push
xchg
cmpsb
insb
mov
and
jns
add
mov
xchg
mov
xchg
mov
je
test
xchg
nop
push
adc
xlat
jle
jb
addl
lock
insl
loopne
mov
nop
dec
mov
mov
xchg
mov
add
adc
scas
arpl
adc
or
insl
xor
popa
mov
addl
fimuls
ja
mov
decl
add
mov
lods
lahf
imul
add
mov
mov
addr16
mov
stos
cmp
pop
mov
dec
inc
xor
push
xor
jno
testb
jl
cmc
sub
pusha
pushf
mov
mov
fists
and
cwtl
bound
cmp
push
cwtl
mov
arpl
mov
pop
inc
push
inc
movsb
cmp
lds
inc
mov
shll
movsb
loop
iret
pop
test
pushf
inc
jp
dec
les
repnz
cmp
jecxz
and
mov
lds
cmpsb
nop
jnp
outsb
mov
pop
push
and
mov
mov
mov
imul
mov
sbb
mov
cwtl
sbb
dec
repz
shrl
sti
test
lret
sbb
mov
sub
out
cmp
sti
shrb
inc
sarl
cli
lcall
and
sbb
mov
pop
scas
sub
test
mov
sub
sbb
insb
enter
fnstsw
popf
mov
out
in
loope
loope
mov
sti
pusha
mov
mov
mov
int
mov
stos
sub
sti
mov
out
add
mov
out
adc
ljmp
add
add
lahf
imul
adc
aas
jbe
adc
scas
and
dec
inc
mov
cmp
and
adcl
jmp
or
ret
mov
inc
push
and
pop
cmp
mov
insl
mov
testb
add
mov
cmp
xchg
jno
push
cmp
mov
mov
dec
jne
lret
inc
jge
daa
mov
dec
out
jae
mov
pop
adc
sbb
and
xchg
cmp
sbb
fistpl
adc
and
jnp
jbe
or
in
adc
hlt
inc
pusha
sbb
out
add
bound
incl
lods
xlat
jl
push
out
out
sub
cmp
add
ret
arpl
jmp
pop
icebp
loope
test
lea
out
push
adc
pusha
insb
inc
pushf
mov
push
xor
sub
mul
push
cmpsl
out
push
adc
scas
ljmp
cmp
or
sti
movsb
mov
inc
jmp
int3
and
xchg
rorl
div
adc
cmp
push
jo
cmpsl
rclb
imul
jmp
push
jb
jle
mov
inc
xchg
and
cmpsl
cmp
xchg
push
leave
ds
lea
push
mov
dec
jo
dec
mov
dec
jns
push
in
or
loop
test
sbb
mov
loope
loope
cmp
push
cmp
jne
popa
jmp
cli
pop
jge
mov
pop
and
mov
cmp
hlt
mov
mov
pop
mov
xchg
aas
loop
in
mov
push
stc
outsb
int3
shl
mov
divb
sub
mov
hlt
leave
ret
lock
mov
mov
nop
mov
jns
shlb
aad
push
xor
dec
jno
mov
int3
and
mov
ret
rcr
call
mov
xchg
inc
ja
dec
dec
dec
sarb
lock
in
push
fildl
aas
xor
lahf
cmp
cmpsl
mov
dec
add
leave
lods
add
stos
and
pop
flds
out
out
repnz
add
sub
cltd
mov
repz
push
push
mov
rcll
movsb
out
mov
pop
mov
mov
sbb
mov
jge
mov
sbb
out
loopne
pop
scas
adc
sar
sti
sub
imulb
mov
mov
fwait
sbb
cltd
loopne
loope
out
jp
xchg
sbb
gs
out
adc
lcall
mov
pop
push
lds
add
pop
and
add
mov
es
out
jbe
pop
loope
sbb
sarl
sbb
or
in
addr16
or
push
shlb
hlt
or
ret
sub
and
xor
xchg
xor
inc
inc
mov
mov
sub
mov
inc
mov
mov
or
cmp
lret
mov
lahf
movsl
jns
outsl
pop
add
sti
pop
cmp
in
stc
in
pop
mov
xor
xchg
jecxz
les
out
inc
or
incb
dec
mov
in
icebp
addr16
lods
lds
xchg
mov
movsb
lahf
setle
cmpsl
dec
mov
imul
and
mov
daa
movsb
shll
call
or
jl
out
lahf
pop
or
icebp
add
ja
sbb
cld
adc
sub
sub
jb
lahf
jne
and
pop
adc
cmc
mov
adc
and
pop
adc
mov
and
insl
iret
insl
lea
adc
jle
fstps
imul
rolb
jle
xor
dec
or
adc
roll
je
ljmp
out
iret
into
mov
adc
out
jle
push
dec
pop
das
out
push
push
cmp
cmpsl
jg
rolb
fcompl
adc
aam
pushl
lods
and
cwtl
lea
adc
mov
loop
mov
or
adc
cli
dec
push
jns
popf
or
dec
jle
ret
aas
xor
daa
xchg
nop
sti
mov
daa
je
in
das
push
sub
mov
repz
dec
outsb
pop
daa
notb
pop
cmp
push
repz
js
dec
rclb
les
sbbl
fiadds
dec
add
out
loope
loope
test
sub
es
push
mov
aaa
movsl
idivl
in
icebp
insb
jecxz
or
je
sbb
push
es
out
xchg
adc
arpl
sbb
jmp
aas
ficomps
or
int
sbb
aam
push
add
stc
stc
push
addl
pusha
jl
sub
fwait
lahf
add
sub
or
out
or
push
mov
popa
ljmp
jbe
icebp
test
pusha
ds
sub
lods
or
add
adc
movsb
enter
pop
mov
mov
push
push
xchg
aad
and
push
jbe
jmp
xchg
and
pop
push
mov
fsubrs
push
adcb
jae
lcall
cld
out
xor
movsb
cmp
dec
mov
ds
inc
xchg
or
xor
test
jnp
xchg
sub
lcall
cwtl
std
push
loope
stos
pop
adc
and
lock
or
cs
and
lret
sub
push
call
mov
pop
mov
iret
imul
iret
fldcw
mov
lcall
sub
inc
aam
scas
incb
fcmovu
mov
sub
fidivl
lahf
out
insb
ret
leave
add
sbb
dec
xor
cwtl
shrb
jecxz
dec
gs
pop
cmpsl
data16
pop
icebp
loop
repnz
mov
mov
mov
push
outsb
repnz
or
mov
pop
test
push
cmpsl
push
sbb
icebp
xor
mov
pop
cltd
frstor
add
xchg
in
cwtl
sub
cmp
adc
add
cmp
sbb
mov
jecxz
ljmp
out
in
jns
xchg
popf
xchg
dec
dec
add
push
int
fiaddl
cmp
sti
hlt
push
leave
repnz
repz
xchg
clc
pop
mov
repnz
push
andl
sbb
jg
push
mov
xorb
insb
int3
fisubl
or
test
sti
sar
test
nop
jmp
cmc
loop
orl
cwtl
rorl
or
adc
lcall
arpl
in
or
sub
es
cmp
xlat
popf
add
fs
mov
das
xchg
in
movsb
sub
sub
data16
xchg
imul
mov
jns
mov
xor
jno
jns
push
mov
push
pop
sub
daa
mov
push
mov
adc
fwait
out
stos
addr16
and
hlt
arpl
inc
push
xchg
ljmp
xchg
mov
sub
dec
pusha
push
mov
imul
rorl
shll
inc
xchg
insb
and
or
pop
gs
lock
pop
movsl
and
xchg
cli
inc
dec
ljmp
nop
fsubl
push
xor
pop
or
mov
loopne
push
cmpsb
lea
shr
test
repz
fildl
mov
add
jg
push
in
int3
arpl
xchg
or
outsl
xchg
bound
out
aaa
xchg
addb
rcll
cs
ret
xor
insl
pop
jo
mov
insl
mov
fucomi
mov
inc
loopne
ljmp
push
inc
xchg
xlat
push
xor
shl
inc
jge
bound
inc
mov
lahf
loop
pop
pop
int3
inc
ss
rorl
shlb
push
stos
adc
mov
adc
cmp
or
sbb
in
mov
cmc
mov
scas
add
add
jmp
jnp
lea
sub
arpl
insb
adc
pushf
je
jp
xchg
verr
stos
ficoms
shrl
inc
pusha
push
xchg
push
cmp
mov
adc
gs
mov
out
sarl
popa
add
pop
test
mov
je
cmpsb
outsb
jg
push
es
xlat
adc
sti
xor
in
js
sub
outsb
dec
push
push
movsb
jae
sub
xor
das
fdivrs
add
cs
cld
cwtl
or
pop
stos
jb
jne
push
xchg
hlt
mov
ror
rcrb
xchg
jle
or
cmc
or
mov
xchg
jne
xor
and
jmp
ret
gs
stc
push
pushf
jb
hlt
insb
cmpsl
in
lods
xlat
jl
iret
xchg
add
sbb
mov
push
mov
push
in
inc
xor
lahf
or
jle
or
adc
out
lods
rcrb
xchg
add
in
in
jg
cld
data16
cmp
or
aas
push
and
jo
mov
or
jp
loope
rcll
aam
adc
mov
leavew
pop
inc
fimuls
jbe
push
push
dec
in
dec
cmpsb
mov
mov
repnz
add
into
in
clc
dec
adc
lahf
in
aad
aas
xchg
sub
pop
mov
jmp
jb
cbtw
outsb
pop
and
scas
gs
je
rcll
bound
icebp
mov
mov
mov
pop
add
xchg
sub
dec
jmp
inc
sbb
ret
idivl
pop
outsl
cltd
hlt
mov
movsb
ds
addr16
pop
repnz
push
or
or
push
lret
mov
pop
mov
mov
add
or
call
push
mov
cmp
les
sbb
push
cmpsb
pop
add
mov
movsb
daa
dec
mov
orl
jae
push
xor
or
adc
addr16
cmpsb
sub
pop
filds
out
xlat
push
mov
adc
mov
sbb
xchg
test
inc
add
imul
jl
xlat
sbb
leave
lods
cmp
fistps
add
and
jns
push
xor
jnp
out
dec
fisubrs
jbe
push
xchg
into
inc
jne
jle
movlps
push
nop
pop
lret
orb
pusha
test
push
sub
inc
mov
xchg
sti
mov
cltd
and
xchg
fs
lea
cmpsl
ret
push
lods
jge
rcl
insl
mov
daa
or
repz
ljmp
int
repnz
xchg
jge
mov
clc
cmpsl
es
pmuludq
push
rcrb
mull
insl
cmp
xchg
pop
add
mov
aad
jg
cmp
iret
shrl
or
testl
or
dec
sub
lcall
cld
cmpsl
fnstenv
jmp
out
arpl
movsl
nop
or
inc
mov
adc
ljmp
shr
inc
xchg
jbe
push
inc
lcall
ja
mov
aad
lahf
add
mov
push
dec
cltd
inc
scas
jno
push
in
aad
mov
adc
les
sahf
ds
jp
std
cmp
mov
sub
insl
pop
subl
inc
xor
or
push
mov
sbb
cld
sub
nop
sub
pop
lea
js
ljmp
aas
jae
xor
cmpsb
mulb
outsb
cltd
aam
addl
jg
sub
mov
adc
cmp
sub
daa
test
push
fidivs
repnz
and
push
cmc
js
mov
fwait
ret
cmp
mov
lods
push
insb
data16
dec
nop
or
sbb
cmpsb
or
xchg
pop
or
or
pop
fs
repz
xchg
xchg
adcl
jle
adc
ljmp
xlat
hlt
sbb
adc
jp
ljmp
cmp
pop
dec
jmp
jo
xor
and
mov
in
mov
xchg
loopne
std
ja
insb
dec
lock
out
pop
das
les
mov
cmp
adc
ret
jns
push
dec
xlat
fimuls
pop
inc
or
repz
in
call
lcall
sbb
xchg
mov
imul
pop
mov
stos
pop
sbb
dec
push
xchg
lahf
fwait
jle
mov
mov
inc
orb
notl
xchg
sbb
movsb
popa
lods
je
jl
jl
rorl
mov
and
inc
sahf
fsubs
push
xlat
add
xchg
subl
sub
test
pop
and
std
pop
xchg
push
adcb
inc
mov
sbb
inc
xchg
rclb
in
and
leave
rcrb
add
pop
cld
inc
bnd
xchg
add
roll
subb
cld
sbb
pop
pop
fimull
in
jle
sbb
lcall
out
movsl
std
or
lcall
sbb
ret
les
movsl
and
xlat
leave
mov
or
scas
push
push
cmp
jecxz
imul
and
pop
dec
pop
pop
or
out
push
stos
add
xchg
clc
mov
xchg
push
sub
mov
addl
jge
mov
repnz
fildl
fsin
push
shr
bound
dec
cmp
in
add
testl
mov
push
aad
add
cmp
out
cmp
sub
cltd
xlat
sbb
push
sub
test
lock
mov
or
shll
dec
cli
push
in
jle
lahf
mov
pushf
mov
int
mov
adc
fcmovne
idivl
repnz
out
inc
cmpsl
cmpl
xchg
das
ljmp
mov
in
js
jb
jle
mov
test
and
imul
mov
fnstsw
jp
add
pop
out
in
push
xchg
mov
adc
mov
hlt
and
inc
push
sbb
and
jno
repz
cmp
test
dec
xchg
cmc
ljmp
leave
jno
lahf
dec
popa
mov
add
pop
pop
push
in
sub
fildl
mov
xchg
mov
outsb
pop
jg
dec
dec
xlat
sub
jns
mov
sarl
dec
shll
rolb
fstl
pop
fidivrs
mov
lock
xchg
loop
sub
test
ret
push
xchg
jmp
mov
pop
jno
lods
xchg
sbb
notl
fadds
push
push
cltd
icebp
adc
subl
push
and
adc
xchg
dec
cmp
sbb
jmp
cmpsb
and
lds
jo
add
cwtl
aaa
lods
mov
adc
dec
sbb
popf
fstps
mov
les
imul
ss
fsubl
mov
xchg
aam
mov
adc
rcrl
or
push
repnz
adc
ja
cld
add
test
xchg
bound
iret
adcl
stos
jb
rcr
inc
cmp
mov
mov
repnz
pusha
lahf
ja
out
test
xorb
cltd
int
cs
adc
iret
idivl
mov
leave
je
jo
inc
imul
scas
fisttpl
ror
in
or
dec
insl
lcall
mov
sbb
fwait
add
test
add
or
dec
push
ja
aad
mov
lods
adc
and
fdivrs
jg
mov
cmp
pop
pop
cmp
push
nop
je
mov
sub
add
mov
pop
aas
inc
scas
adc
rol
push
popa
test
and
out
sub
adc
xchg
iret
jbe
add
aas
lods
cmp
rol
xchg
xchg
testl
mov
add
mov
push
xor
sbb
sbb
push
fadd
jb
sbb
xchg
sbb
inc
loopne
mov
fcoml
cmpsl
mov
and
inc
mov
add
xor
lock
xchg
pop
cmp
xchg
testb
pop
sti
xchg
pop
lea
clc
shll
repz
adc
jb
and
adc
jmp
ljmp
aam
sub
or
pop
pop
or
sub
xchg
push
xor
out
lock
bound
xor
mov
sub
mov
pop
push
xchg
mov
ja
mov
mov
or
cltd
out
insb
pop
gs
mov
xchg
scas
push
inc
push
jb
push
sbb
pop
pop
add
mov
sub
jp
rcll
sbb
test
in
repz
aam
aad
in
mov
test
das
push
xor
sbb
xchg
shr
lcall
pop
sbb
sahf
mov
sub
into
push
dec
and
sub
push
or
mov
or
pusha
sbb
adc
fs
pop
mov
xchg
pop
cmp
dec
jb
inc
xchg
pop
adc
xchg
pop
stos
jbe
cmp
in
jne
into
mov
mov
adc
pusha
data16
jae
pusha
popf
sbb
add
add
inc
push
mov
dec
jl
cmp
mov
xchg
or
mov
jns
dec
test
mov
bnd
pusha
ljmp
mov
mov
lea
or
shlb
mov
out
mov
call
out
push
adc
out
cmp
cmpsb
clc
repnz
repnz
js
sbb
or
fcmovnbe
xor
aas
outsl
mov
inc
sub
add
jge,pt
lods
mov
or
adc
inc
sbb
xchg
add
mov
sub
jno
and
push
xchg
and
push
push
rcrl
xor
xor
lcall
in
mov
xor
daa
ret
jl
mov
dec
ds
xchg
mov
outsb
fisubs
repz
xchg
jne
mov
aad
cmpb
jno
push
sbb
push
pop
minps
push
push
sbb
jle
jb
xchg
imul
push
enter
sahf
jbe
shrb
mov
aas
cwtl
xor
mov
call
in
mov
adc
in
pop
or
adc
lahf
dec
aas
aam
cmp
jb
ret
stc
pop
jle
mov
pop
sbb
int
mov
xor
mov
jl
mov
or
lret
sarl
outsb
add
jg
add
pop
cmp
call
pushl
mov
sbb
imul
ret
cltd
ja
inc
fwait
xchg
frstor
pop
mov
pop
hlt
or
adc
xor
lahf
bnd
ja
xchg
jne
add
sub
repnz
lahf
and
push
ret
or
pop
daa
sbb
inc
mov
iret
cmp
test
stos
fldcw
xor
xchg
sub
jo
push
dec
stc
dec
sub
in
mov
xchg
and
popa
dec
mov
nop
push
mov
and
aas
sub
lahf
sbb
or
in
lret
pop
or
sub
jge
sub
inc
mov
adc
and
inc
jp
out
bound
hlt
je
jb
out
xor
jbe
out
push
cli
cwtl
sbb
jns
fnclex
and
movsb
xor
mov
lea
xchg
sbb
jl
mov
push
dec
out
adc
xchg
pop
mov
push
movl
in
xchg
mov
mov
jno
scas
adc
outsl
mov
sub
jne
xor
pop
fidivrl
mov
in
cmp
in
js
rcl
mov
pushf
push
ret
jb
mov
cmp
popa
or
fsubrl
mov
sub
sbb
xchg
arpl
pop
addr16
mov
jbe
outsl
pushf
push
cli
mov
sbb
test
push
int3
jno
xor
fadd
outsb
cmp
sarb
adc
not
push
add
cld
pusha
jae
pop
xlat
inc
adc
js
mov
mov
aad
or
mov
xor
sbb
or
negl
insb
pop
or
pop
dec
lea
and
vunpcklpd
fxch
jo
subb
mov
stc
shl
sbb
ljmp
sahf
cmp
test
or
rcrb
call
gs
test
sub
fwait
dec
jno
out
inc
insb
data16
lcall
dec
mov
push
mov
lock
push
outsl
mov
adc
add
and
ja
xor
cmp
ja
or
mov
push
sbb
dec
test
dec
cli
inc
pop
aad
pop
pushf
pop
xchg
and
sbb
jle
sub
sub
fcomps
mov
xlat
lcall
push
mov
mov
add
pusha
add
sub
repz
nop
lret
fistpll
mov
add
cmpb
dec
pop
xchg
ds
mov
incl
ljmp
popf
outsl
gs
imul
cmc
cmc
mov
call
decl
jb
jo
in
out
das
test
mov
sbb
adc
xchg
movnti
mov
mov
shl
popf
push
mov
xchg
ds
push
mov
imul
and
xchg
pop
iret
setae
insb
cmp
imul
nop
inc
jae
jne
pop
neg
mov
jecxz
mov
jp
dec
loop
mov
xchg
mov
push
jl
inc
mov
xor
arpl
das
fidivrs
cmp
shrl
cmc
mov
mov
data16
mov
in
iret
in
add
push
and
stc
mov
cmp
insl
nop
add
inc
cmpsl
lds
dec
outsb
mov
hlt
cmc
push
push
hlt
cld
mov
bound
xchg
test
jno
repnz
shlb
add
cli
or
pop
js
jg
loop
icebp
pop
or
neg
setnp
fldenv
mov
je
out
or
add
add
jp
mov
push
mov
js
mov
int
push
xorb
lods
les
mov
pop
pop
imul
sbb
ret
cwtl
neg
sbb
sbb
push
inc
jb
and
fsubs
dec
xchg
xor
in
xchg
cmc
xorb
lds
adc
cs
pushf
adc
mov
xor
jbe
jl
mov
mov
fwait
imul
or
mov
add
sbbl
push
and
popa
popa
fnstcw
add
dec
mov
jne
popf
xchg
jmp
ret
pop
xchg
test
lcall
xchg
div
lds
jle
cmp
push
inc
lea
lock
jb
lret
mov
push
xchg
and
inc
lret
lret
fwait
pop
push
scas
subl
mov
jo
das
test
nop
mov
cmc
dec
xchg
test
add
clc
in
mov
pop
push
cmpsb
aas
in
movsb
pusha
mov
lods
push
outsl
jecxz
insb
jnp
jmp
popa
test
iret
pop
iret
cmp
cmp
sbb
insb
push
fstpl
rol
mov
bound
mov
push
adc
mov
data16
dec
push
fnstcw
cli
mov
orb
mov
fwait
mov
xor
rolb
sub
fldcw
pop
mov
jle
ret
or
mov
push
or
js
lods
jp
dec
fstpl
dec
mov
mov
inc
add
inc
movsb
mov
lahf
dec
insl
mov
js
loopne
fdiv
frstor
sbb
inc
shrl
push
stos
loop
xchg
pop
mov
push
jb
xchg
es
mov
sahf
data16
stc
in
mov
xchg
xchg
dec
add
sbbb
cmc
lret
ljmp
out
adc
sbb
ret
gs
jbe
and
or
sub
js
sub
jae
jmp
sub
shrl
mov
sbb
add
loopne
daa
aaa
push
mov
xchg
roll
pop
fcompl
daa
dec
mov
mov
les
cmp
xor
push
es
ss
ds
mov
loope
mov
pop
inc
push
inc
adc
adc
aas
adc
or
mov
std
adc
icebp
repz
mov
push
sahf
xor
jmp
sbb
leave
shrb
mov
and
mov
mov
into
or
push
mov
lods
xor
cwtl
imul
rorb
insb
xchg
sub
test
dec
jg
cmc
sub
fwait
sahf
xchg
or
andl
push
ja
mov
xor
or
in
fsincos
imul
dec
lret
ror
scas
xchg
sbb
sar
jp
test
sbb
jb
mov
mov
in
mov
orl
sti
inc
inc
aam
aaa
dec
fsubl
push
pushf
push
xor
dec
and
rcrb
pop
outsb
aam
pop
mov
adc
stos
lret
cmp
add
xor
jae
push
sbb
and
loopne
decl
cmc
xor
or
adc
outsb
xorb
pop
dec
add
sbbl
add
mov
js
das
mov
mulb
pop
cmc
std
mov
cmpsb
lea
mov
lds
repnz
sub
lea
call
dec
push
mov
jmp
fcompl
pop
std
call
loopne
lods
cmp
clc
lahf
xor
out
ret
mov
xchg
mov
mov
cli
out
cmp
ljmp
jo
or
pop
pop
sbb
xlat
lret
test
xchg
xchg
xorl
sub
and
sbb
xchg
pop
xor
push
mov
cmpsl
inc
cs
pushf
adc
cmc
lahf
and
push
out
pushf
pop
dec
cmpsl
std
jle
xor
pop
roll
adc
ja
sub
shlb
cld
push
mov
jno
xor
das
call
imull
adc
adc
ret
dec
inc
dec
negb
xor
ja
out
jnp
idivl
imul
xor
jo
repnz
mov
cmp
insl
scas
daa
cmp
pusha
jnp
imulb
push
adc
cmp
inc
fcoms
in
imul
and
adc
jns
push
or
mov
xor
ljmp
dec
mov
out
cmp
cmpb
in
or
xor
fcmovnb
out
insb
outsl
js
add
adc
and
fisubrs
sub
jno
test
push
adc
jbe
test
daa
jae
sub
pop
cmp
decl
dec
mov
cmp
scas
jae
mov
addr16
lcall
or
mov
add
pop
int3
inc
pop
iret
inc
repnz
dec
lods
rclb
in
lea
mul
fs
and
sub
and
sbbl
into
stc
popf
cmpsb
loop
fdivl
and
movsl
cmc
xor
cmc
mov
aaa
pop
xacquire
aam
dec
jne
inc
xor
mov
and
stc
in
outsb
not
ficoml
mov
sub
loope
xchg
lret
and
movsl
jmp
sbb
sbb
jne
shl
outsl
ss
jmp
xchg
push
in
lds
gs
fldcw
test
imulb
xchg
inc
jno
imul
cs
outsl
jnp
lods
mov
adc
push
dec
or
sub
push
arpl
xor
inc
pop
jno
cmp
stos
movsb
stos
rorb
out
push
xor
jecxz
cmp
pop
or
mov
std
inc
xchg
enter
or
dec
iret
xchg
subl
int
rolb
pop
inc
add
adc
insb
loope
jne
xor
sub
adc
sub
xchg
and
add
mov
push
xor
push
cmp
jmp
jl
xlat
and
inc
rcr
repnz
fnstenv
cmp
push
jg
gs
and
cmpsb
inc
mov
inc
lods
outsl
fistl
and
pop
es
mov
xchg
es
pop
mov
add
ret
or
sub
out
lahf
mov
inc
mov
cld
or
lcall
inc
js
stos
inc
dec
lret
outsl
push
xchg
jecxz
out
clc
or
out
pop
ret
nop
adc
ret
push
out
pop
arpl
stc
sar
pop
jo
cmp
aad
cmc
push
rcll
mov
jne
cltd
mov
in
xor
mov
jbe
jbe
adcl
popa
int3
push
inc
mov
push
stos
nop
popa
or
subl
repnz
pop
fldenv
dec
stos
mov
out
sbb
or
adc
scas
jmp
popa
addr16
lret
cmpsl
push
add
xchg
enter
aaa
andb
dec
sbb
mov
xor
pop
xchg
repnz
pusha
inc
sbb
idivb
mov
cmp
cmpsl
and
add
lock
and
push
sbb
jp
pop
adc
rcll
xchg
xor
test
mov
push
mov
mov
imul
cld
test
mov
inc
mov
mov
add
push
lahf
push
sub
jge
fsubrl
push
mov
cmp
dec
aas
aad
out
inc
jae
stos
cwtl
lods
mov
mov
mov
sti
jb
movsb
sub
sbb
enter
jl
cmp
sub
aas
dec
out
xchg
dec
sbb
adc
sub
and
jmp
testb
inc
test
pop
or
cmp
in
jne
jmp
push
xchg
scas
push
stos
sbb
das
in
aam
or
imul
mov
mov
mov
gs
rcl
rcll
ret
xor
sbbb
cmpsb
testb
in
sub
push
notl
imul
push
repnz
push
mov
adc
shll
stc
jno
mov
jmp
mov
add
mov
fildll
xor
xchg
add
push
mov
pop
mov
scas
add
int3
adc
push
mov
and
test
inc
mov
lock
sbb
sbb
push
lret
sbb
sti
pop
lahf
das
mov
dec
lret
pminub
ss
add
call
ss
out
mov
cltd
in
or
push
pop
fs
cmp
xchg
add
fwait
ret
stos
gs
jnp
mov
fmuls
cmpsb
insb
cmc
or
pop
movsb
mov
insb
mov
push
mov
test
out
fldenv
inc
dec
aaa
sub
mov
cmp
mov
mov
incl
subb
xchg
out
inc
xchg
bound
jmp
mov
cmp
cli
repnz
pop
push
in
sbb
out
sbb
or
and
or
add
aam
xchg
cmp
add
jle
jo
cmc
je
xchg
les
sub
imul
xchg
mov
pusha
jnp
mov
sub
adc
push
cmp
xor
imul
ret
push
aad
pop
movsb
cli
hlt
jg
fdiv
lret
inc
mov
and
test
and
inc
adc
dec
leave
mov
mov
popf
mov
jle
fsub
inc
ret
and
in
out
push
scas
mov
and
movsl
cltd
out
cltd
notb
addl
addr16
hlt
jp
icebp
pop
aas
mov
pusha
test
outsb
mov
sbb
inc
les
shrl
and
call
clc
xlat
lahf
clc
stos
and
es
mov
out
jo
in
mov
int
pop
jb
rorb
insl
xor
cmp
jmp
jns
movsb
pop
inc
cmp
das
cmp
out
bound
orl
jno
add
or
outsl
mov
pop
inc
daa
insb
fwait
push
jge
imul
cltd
les
jae
shlb
xchg
inc
je
out
movsb
data16
xchg
or
adc
and
pusha
into
arpl
jecxz
fisttpl
int
or
sbb
xchg
ss
jbe
orb
and
out
test
cltd
imul
push
pop
push
out
inc
mov
dec
adc
lods
addr16
cmc
mov
jns
mov
insl
leave
mov
sub
push
lock
movsl
and
sub
inc
cmp
lahf
cmc
cmp
mov
cmpsl
aam
ja
jmp
cmp
test
sub
push
fs
sub
stos
cmp
scas
push
ffree
out
sub
daa
int3
flds
call
sub
aaa
sub
and
data16
outsb
dec
sahf
xor
and
clc
aaa
scas
movb
add
or
jl
jno
test
mov
inc
mov
in
notb
push
lds
into
lret
std
and
pop
mov
es
push
sbb
adc
pop
cmp
aaa
mov
cmp
mov
jb
outsl
lock
adc
lds
inc
movsb
lods
mov
jne
inc
xorl
lea
sub
mov
addl
sbb
jl
mov
popa
mov
outsl
ret
imull
lea
sahf
fs
xchg
cmp
add
xor
or
mov
push
dec
scas
sub
clc
sub
jbe
sub
out
sub
subb
jge
lcall
cs
xor
inc
addl
loop
push
pop
std
stos
or
shr
xchg
int
and
lods
mov
cmp
bound
cmp
cs
mov
fimull
xchg
stos
and
loop
adc
and
push
sar
xchg
mov
and
clc
lods
mov
mov
mov
sarb
pop
loop
xor
dec
sbb
jl
sub
lea
jbe
les
insb
f2xm1
xchg
xchg
cmp
or
jbe
in
mov
xchg
sbb
jecxz
mov
jno
jno
and
mov
std
xchg
adc
dec
fistps
ds
mov
push
sarl
xchg
pop
aad
in
and
bound
ja
push
jbe
dec
bound
add
inc
adc
ds
and
sbb
xchg
push
fmul
jbe
push
loop
insl
cmp
or
mov
test
clc
mov
sub
dec
dec
add
mov
add
add
in
insl
scas
icebp
cmpsb
test
add
leave
or
fisubl
stos
xor
rorb
jae
insl
push
and
popa
pop
inc
sahf
sahf
adc
inc
jns
mov
fsubs
loope
sub
repnz
pop
test
push
popf
inc
aam
sbb
in
fcomi
xor
into
xchg
xchg
or
add
or
sub
mov
and
lcall
or
aas
ljmp
sti
ljmp
xchg
or
sti
fiaddl
popf
xor
push
xor
mov
movsb
enter
fists
inc
push
movsb
mov
test
arpl
xor
js
bound
inc
test
repnz
dec
jae
pop
add
mov
sbb
push
test
pop
fs
jmp
sub
jbe
mov
mov
inc
cwtl
xchg
sbb
mov
data16
fucomi
and
dec
push
dec
sbb
fists
sbb
mov
in
or
lds
into
lret
pop
int
neg
in
dec
popw
dec
sbb
inc
ret
sbb
pushf
pop
cld
jno
jp
mov
lods
rclb
aaa
call
sbb
arpl
test
dec
push
sub
xlat
nop
loope
arpl
out
cmp
push
mov
nop
adc
fcmovnbe
mov
scas
rorl
or
or
cmpsl
and
in
nop
sbb
cli
pop
push
adc
sub
lds
jl
xor
outsl
movsl
mov
mov
mov
or
inc
das
xor
mov
decb
sqrtps
jbe
psllw
pushf
stos
jmp
lcall
mov
les
cmp
xchg
jnp
in
ret
fmul
dec
adc
and
pushf
push
or
cmpsl
loop
mov
daa
mov
push
fimull
xchg
jb
into
sub
add
cmpsb
and
push
inc
push
mov
push
xchg
fs
inc
add
cmp
pop
jecxz
mov
ror
xor
xor
popf
movsl
ja
sahf
dec
enter
shr
ljmp
popf
out
ss
jecxz
dec
std
sub
pop
mov
adc
in
add
sbb
test
dec
mov
outsb
jmp
test
inc
test
or
es
add
mov
xor
lret
aaa
ret
cmpl
es
and
jle
sbb
ret
pop
mov
xlat
adc
adc
xor
scas
jp
ss
jno
int3
ljmp
mov
js
or
cwtl
mov
fsubl
int
add
scas
call
outsl
adc
int
inc
adc
ret
adc
cld
sbb
sbb
pop
rcrl
fs
dec
mov
pop
push
fcmove
sub
pop
xchg
notl
inc
adc
push
mov
iret
mov
dec
lahf
xor
ret
gs
mov
mul
dec
cmp
mov
dec
adcb
cmp
pop
lret
psubsb
sarl
add
mov
loopne
lds
dec
lock
push
and
arpl
or
mov
push
dec
pop
mov
movsb
jp
sub
push
xchg
push
out
cli
xor
cmpsl
movsb
pop
sbb
scas
mov
es
mov
mov
sub
les
push
shrb
pop
dec
ret
and
mov
mov
scas
fsubrs
and
or
insb
int
pop
pop
push
and
adc
mov
mov
pop
in
jns
scas
push
sbb
aaa
outsl
imulb
rol
xchg
ja
push
mov
outsl
lret
bound
gs
mov
mov
nop
push
adc
nop
lock
cmp
add
xor
stc
mov
adc
cmp
jg
jbe
daa
mov
imul
xchg
jmp
scas
xchg
dec
cli
addr16
inc
int
push
jmp
pop
das
mov
ja
sbb
fsubs
aam
push
dec
inc
aad
in
xor
pop
dec
iret
push
int3
push
das
scas
int
lods
xchg
stos
cmpsb
pop
repnz
pop
test
mov
sub
mov
xor
sahf
imul
jle
insb
xchg
lds
es
sub
mov
scas
cmp
and
hlt
out
insb
mov
loop
push
and
outsl
push
mov
xchg
adc
data16
into
mov
jmp
jae
inc
and
mov
or
ss
sub
in
add
xor
inc
inc
mov
pop
push
das
shlb
popa
hlt
pop
xchg
lock
jb
out
adc
sbb
inc
leave
sub
bnd
xor
cwtl
shlb
daa
pushf
mov
adc
cmpsl
lods
xchg
addl
inc
out
rclb
aas
hlt
out
mov
scas
add
add
adc
rclb
stc
push
aas
movl
xor
pop
mov
stos
lret
push
mov
and
test
sub
mov
cmp
fldl
jne
jp
lds
adc
inc
cmpsl
mov
dec
rolb
loopne
aas
or
imulb
out
push
cmp
adcl
mov
in
stos
scas
es
adc
jae
or
sbbl
into
mov
call
pop
mov
pop
jmp
lahf
daa
pop
inc
stos
nop
pop
cmp
in
sahf
xchg
scas
adc
test
leave
lock
xchg
gs
sbb
enter
mov
sbb
int
xchg
cld
shll
lahf
mov
andl
adc
jae
jmp
dec
and
or
dec
xor
mov
mov
cmp
gs
icebp
add
mov
jo
inc
loop
enter
lret
out
pusha
add
in
mov
push
or
popf
and
pop
movsb
push
mov
mov
or
out
iret
xor
imul
push
mov
xor
idivl
jg
gs
push
lods
pop
cmp
inc
mov
pop
popf
fimuls
movsb
xor
clc
outsl
ds
dec
jle
sbb
add
or
popaw
cwtl
loope
cmp
push
push
dec
cmp
jecxz
sbbl
out
pusha
mov
into
add
repz
pop
adc
lods
rcr
and
fistl
sub
adc
popa
and
mulb
pop
mov
xchg
rcl
or
icebp
pop
pushf
aam
jnp
imul
pop
adc
lret
mov
cmpsl
rcrb
xor
stc
les
add
mov
std
inc
pop
dec
pop
fwait
push
sbb
jae
adc
ljmp
xchg
cli
pop
int3
mov
stc
sub
repz
ret
inc
aaa
int
adc
cwtl
cwtl
scas
xlat
add
pop
lret
clc
sti
xchg
mov
adc
dec
aas
fiaddl
addr16
push
and
mov
mov
push
push
fstpt
sbb
sbb
pop
outsb
xor
mov
or
and
cmpsb
lcall
sbb
cmc
cmp
xchg
cmp
adc
ljmp
mov
pop
fs
cmp
cmpsl
stc
sub
cmp
loope
sarl
jae
push
push
outsl
divb
test
or
ret
mov
divl
lahf
clc
inc
scas
push
jge
jl
cmp
adc
sbb
or
gs
dec
das
push
decb
stc
ret
sbb
adc
mov
in
mov
adc
sbb
push
aaa
push
js
xchg
and
pop
into
mov
jecxz
lods
lods
sahf
insl
rcrb
sub
rol
xchg
rol
lods
and
orl
or
xchg
cmpsb
fiaddl
pop
mov
mov
nop
rolb
ja
mov
push
fdivrs
mov
sbb
adc
ja
mov
push
scas
hlt
out
cltd
test
xor
and
and
jle
sbb
ds
add
testl
pop
adc
cmp
inc
push
xchg
xchg
in
push
leave
pushf
stos
fdivl
out
test
cmp
mov
push
pop
dec
push
les
push
or
mov
jl
add
pusha
cltd
test
add
shr
loop
lods
mov
xor
sbb
shrl
out
stc
mov
pop
les
cli
cmp
les
fildl
cs
out
into
loope
nop
icebp
dec
add
push
mov
sbb
lea
jp
sub
sub
mov
and
add
sbb
or
es
and
and
cmp
jns
enter
sub
test
repnz
push
enter
stc
jmp
or
ret
push
lods
cmc
popf
movsl
sbb
fldcw
aad
xchg
cmp
adc
out
cmc
pop
add
jne
mov
inc
pop
lret
push
insl
push
xchg
xchg
mov
jae
and
push
adc
sbb
adc
lods
pop
or
cmp
lret
fcoml
mov
mov
outsb
pusha
cmp
pop
iret
xchg
jo
out
popa
loopne
loopne
sub
add
call
push
jne
icebp
mov
pop
nop
daa
sti
pop
insl
jne
cmpb
lahf
adc
add
jge
iret
adc
push
sbb
mov
push
sub
insb
jb
mov
push
mov
pop
xlat
sbb
stos
mov
nop
push
push
add
inc
mov
inc
rclb
scas
enter
or
adc
in
mov
mov
push
push
cmpsb
fmul
out
dec
scas
mov
jns
pop
shlb
inc
stc
push
lods
repnz
insl
mov
push
or
movsl
xchg
daa
push
stos
pop
xchg
cltd
and
daa
sahf
pop
add
je
mov
jmp
dec
cmpsb
daa
xchg
xchg
add
xchg
fidivrl
mov
jmp
pop
in
cmc
push
outsb
add
push
test
inc
mov
cmp
push
fwait
les
adc
mov
lea
pop
pmulhuw
in
rorl
lcall
push
lret
mov
popf
in
jbe
sbbl
dec
les
lea
sti
lock
out
jp
jmp
sbb
std
and
jne
xchg
push
dec
int
subl
jns
lods
cmp
and
mov
arpl
into
sub
add
loop
das
sbb
pusha
cli
mov
jae
or
xlat
test
cld
add
cmp
push
adc
jmp
jns
dec
mov
add
test
add
sub
movsl
enter
pusha
sbb
sub
into
scas
and
aaa
pop
sti
addr16
movsl
fiaddl
dec
and
cmp
lcall
in
int3
cmp
xchg
jno
rclb
xor
cwtl
dec
test
cmp
mov
jge
addr16
arpl
enter
mov
and
xor
test
test
iret
fidivs
cld
and
in
or
sbb
jmp
dec
inc
ret
jae
cmpsl
pop
fcoml
daa
add
repnz
lret
adc
xchg
loop
xor
mov
push
dec
xlat
leave
aaa
shrb
push
cmpsb
xorb
dec
cmp
ficoms
add
sbb
fadds
mov
ja
rorb
xchg
add
ret
mov
call
into
xchg
repz
jle
push
adc
mov
and
xchg
aam
dec
dec
rclb
test
movb
add
aaa
dec
aam
scas
mov
pop
cwtl
or
fsts
daa
nop
icebp
jae
mov
inc
push
pop
cmpsb
dec
push
xor
xor
sub
jge
jno
pop
mov
mov
jbe
push
mov
pop
dec
push
inc
adc
cmp
fsts
ja
inc
fnop
hlt
js
stc
fbld
push
call
or
sti
xchg
arpl
or
adc
cmp
pop
fs
jne
mov
inc
mov
ficoml
test
loop
jae
fs
jl
lods
shll
push
pop
lahf
pusha
rolb
sarl
xchg
xlat
sahf
mov
fcomps
sahf
jl
xlat
imul
mov
inc
add
mov
jge
popf
popa
adc
mov
or
daa
pop
loop
inc
or
lret
cltd
xlat
stc
icebp
push
or
pop
rcll
inc
adc
pusha
seto
dec
int3
xor
push
test
jg
das
jp
inc
xor
xchg
xchg
mov
das
xchg
adcb
pop
aaa
mov
xor
pop
or
cmpsl
aad
aaa
dec
and
out
js
lret
das
xor
mov
shl
cs
cmpsl
int3
sbb
push
mov
insl
cmpsl
jl
cmpsl
fistl
jae
stc
das
xchg
movsl
rclb
aas
mov
jo
out
mov
inc
sub
pop
mov
push
inc
test
shr
mov
add
leave
pop
cltd
cld
fldl
cld
div
mov
mov
pop
adc
push
cs
inc
js
dec
or
sahf
ret
jg
shrb
lret
inc
and
xor
ds
shrb
dec
or
and
sub
add
mov
lds
loop
dec
daa
lods
xor
cmp
mov
imul
jb
xlat
or
and
sbb
dec
data16
lcall
lahf
sub
xor
inc
xchg
aaa
cmp
pop
xchg
push
or
mov
mov
add
mov
sub
push
sbb
call
fs
sbb
mov
mov
pop
sub
dec
lods
ds
mov
cs
in
clc
push
cld
arpl
rcll
push
sti
add
mov
sub
stos
mov
mov
ret
je
rolb
jmp
rcll
fisttpll
sar
icebp
cmp
pop
cmpsl
aad
in
pop
lcall
mov
mov
jmp
dec
out
xlat
daa
dec
fucomip
into
sub
inc
es
sub
or
test
xchg
pusha
dec
or
aaa
push
std
cmp
push
sbb
mov
into
and
mov
iret
pushf
shl
out
push
movsb
mov
pop
mov
mov
mov
popa
ret
mov
inc
leave
dec
mov
xlat
outsl
ret
inc
mov
add
xor
sbb
loope
mov
clc
or
mov
into
pop
xor
jmp
sbbb
sub
mov
push
jb
mov
in
outsb
int3
mov
loop
push
movsb
push
cmp
push
mov
ja
aad
ds
and
xchg
scas
scas
xchg
ret
ds
loop
movsb
and
mov
lret
ds
das
cmp
loop
and
loop
mov
mov
inc
roll
xchg
inc
xor
lods
stc
rcll
pop
inc
mov
mov
aas
arpl
inc
and
jnp
xchg
sbb
inc
mov
mov
es
test
ret
adc
fimull
cld
pop
sub
or
cmp
data16
arpl
mov
push
xchg
aam
cmp
jle
jno
push
inc
cli
loopne
sbb
xlat
sbb
andb
mov
cmp
rcrl
into
filds
sti
push
adc
jns
repnz
fstl
xor
lods
adc
adc
sub
mov
addr16
xchg
std
jmp
and
push
mov
sub
jg
stos
inc
mov
in
ja,pt
jnp
int3
cmp
mov
pop
in
mov
es
cmp
das
cmp
inc
popa
xchg
pushf
jo
mov
jno
fisttpl
fsincos
mov
out
push
mov
iret
stos
xchg
inc
rclb
mov
das
xor
add
push
daa
mov
dec
pop
and
push
adc
bound
lcall
movsb
mov
pop
insl
mov
push
push
or
mov
pushf
rcrb
loope
shrl
sbb
xchg
sbb
mov
outsl
test
push
or
inc
test
jo
lret
jne
cmpsl
adc
aas
pop
mov
pop
cmp
loop
mov
and
mov
or
mov
mov
sub
movsb
mov
sub
jmp
lret
gs
dec
jmp
mov
fiadds
sub
mov
aad
scas
iret
jae
push
xchg
push
insl
jl
adc
stc
js
rolb
lea
xlat
sbb
pop
xchg
or
pop
call
jo
mov
je,pn
in
jp
rolb
mov
js
push
movsl
mov
xor
testb
fidivs
mov
or
mov
mov
cmpl
mov
fs
inc
mov
stos
sub
test
scas
pop
dec
sbb
mov
dec
pop
cmpsb
dec
push
or
fbld
jne
mov
mov
push
mov
mov
mov
popf
push
xor
add
inc
mov
jnp
loopne
sub
mov
add
mov
sub
fimuls
mov
and
aam
ret
aaa
pop
mov
in
pushf
push
mov
mov
in
fidivl
scas
out
pop
in
xor
add
dec
pop
jle
addr16
pop
pop
push
into
inc
jae
nop
sbb
in
mov
dec
arpl
cmp
sbb
dec
stc
sub
dec
pop
ds
in
rcrl
jge
sub
push
mov
adc
cmc
int
mov
ret
dec
push
xor
repz
scas
or
sub
mov
add
data16
lods
xor
cmp
mov
aaa
inc
cltd
aad
jbe
sub
or
or
fiadds
cmc
push
sbb
or
xor
cmpsb
jno
fsts
movsl
movsl
aas
sub
pop
leave
arpl
mov
pop
lret
loop
mov
enter
sub
inc
mov
sbb
xor
mov
push
push
push
rorb
mov
mov
xchg
mov
iret
fsubrs
and
push
clc
sbb
fildll
mov
mov
jmp
sbbl
push
out
inc
jae
lret
outsb
push
repnz
outsb
scas
insb
mov
push
push
xor
pop
xlat
sbb
xchg
dec
xorb
fisubs
cmp
enter
cld
mov
sbb
xchg
push
gs
iret
inc
repz
addb
lods
jae
fimuls
movsb
aaa
repz
test
fiaddl
xorb
sar
jmp
not
cmp
xor
sahf
int3
arpl
sub
mov
adc
add
or
inc
sub
fisttps
dec
add
ss
imul
push
rcr
call
insl
cmp
push
gs
test
xchg
mov
out
lret
or
and
xor
cmp
test
pop
test
jmp
shrb
test
cmc
shll
adc
popa
lret
dec
mov
cltd
cmp
lea
aam
push
ss
mov
cwtl
mov
jl
sbb
jmp
movsb
hlt
jnp
ss
sbb
or
push
jbe
inc
ja
add
test
cmp
test
sti
iret
or
sbb
xchg
pop
lcall
jle
repnz
mov
add
ret
mov
dec
cmp
pop
int3
popa
jb
test
adc
or
cmp
in
mov
cld
mov
jnp
arpl
and
mov
leave
sbb
ss
popf
mov
mov
mov
sbb
test
xchg
mov
cmp
sbb
and
cmp
popa
xor
xchg
push
js
loop
rorl
and
outsl
dec
test
repz
fsubrs
adc
scas
jmp
jle
mov
adc
mov
xchg
fcoml
lret
int
lods
fnstenv
int3
int
repnz
addb
inc
add
pop
nop
xchg
cwtl
pushf
cmp
pusha
add
popa
mov
push
mov
pop
xor
aad
imull
out
cmp
inc
and
cli
push
sub
sti
incl
shlb
scas
jp
push
cwtl
cld
cmp
pushf
cli
imul
add
inc
negl
push
leave
fimuls
cltd
divl
or
data16
inc
adc
sbb
push
sbbb
stos
popf
xchg
out
sti
mov
sbb
xchg
in
sbb
repnz
adc
dec
xor
sub
bound
rclb
addr16
push
repnz
les
out
jns
fistl
shl
ror
enter
push
lret
and
add
fildll
cmp
inc
ljmp
idiv
push
mov
ret
pusha
in
cmp
dec
adc
cs
lods
and
test
fcomp
aad
aad
jb
sbb
push
int3
repnz
cmp
mov
xchg
jge
stos
cmp
mov
dec
out
dec
or
adc
sbb
into
add
pop
ds
outsl
test
test
data16
adc
mov
out
jmp
dec
mov
sbb
and
dec
mov
mov
pop
mov
testl
push
fsubrp
shrl
ljmp
inc
pop
fisubs
ret
outsb
lods
add
arpl
test
pop
shl
add
jno
aam
xchg
cltd
ja
aam
std
cmc
mov
or
std
shrb
in
sbb
divl
xchg
scas
dec
aas
aad
sub
mov
movsl
lret
faddl
jecxz
pop
push
or
icebp
in
push
mov
lock
pop
pop
sbb
int
jb
sbb
dec
aaa
mov
adc
loope
pusha
std
lret
ljmp
aam
adc
arpl
sbb
cmp
pop
out
sbb
inc
mov
mov
insb
icebp
inc
mov
int3
js
and
shl
shll
pop
cmp
imul
pop
cli
les
movsl
dec
test
fcoml
jnp
sahf
out
cmpsb
lods
cld
pop
int3
sbb
pop
mov
ja
sbbb
sub
jp
sti
repz
bound
xor
inc
dec
orl
adc
xor
imul
sbbb
pop
xchg
out
add
xor
sub
cmc
fbld
stos
leave
sbb
clc
mov
jmp
inc
pop
pusha
fs
int3
shll
and
pusha
jnp
mov
fsubs
movsb
ljmp
ficoml
jo
cmp
aam
mov
aas
test
imul
xchg
fsubrs
cs
pop
push
or
and
lods
and
dec
fdivs
jns
and
mov
mov
fmul
cltd
mov
cmpsl
cli
dec
es
push
cld
dec
rcrl
roll
dec
push
sbbb
or
jo
push
in
and
dec
cmp
roll
ret
enter
xchg
cmp
cmp
pop
pcmpeqd
mov
mov
and
out
shrb
adc
inc
pop
mov
adc
mov
dec
ja
push
cltd
pop
and
stos
int
cli
sahf
div
xchg
jecxz
fiadds
hlt
das
hlt
repnz
adc
adc
push
les
test
dec
flds
jle
out
sub
popa
enter
jl
adc
jl
mov
sub
stos
scas
pushf
sub
dec
jg
add
jne
pop
adcl
leave
push
add
inc
push
jb
jbe
call
mov
adc
popf
push
stc
arpl
add
imull
inc
mov
les
pop
cmp
test
cmp
ja
mov
or
addb
add
adc
sbb
hlt
call
mov
dec
mov
pop
shrb
stos
out
hlt
imul
add
or
int3
push
fisubrl
mov
sbb
testl
push
out
adc
outsl
add
mov
pop
stos
add
add
mov
lds
or
push
jne
mov
sbb
pop
sub
ja
pop
cs
sahf
aad
into
fldcw
addr16
mov
jns
cmp
inc
cmp
ljmp
loopne
xlat
sub
shr
inc
add
subl
bound
pop
js
sub
lea
or
testb
leave
imul
jecxz
sbb
lock
aam
pop
or
lahf
call
cmp
cmp
pop
hlt
cli
stos
inc
mov
and
lock
movsl
xor
in
dec
mov
xor
mov
mov
pop
lret
popf
mov
les
jmp
add
sub
sar
push
fidivs
dec
mov
xor
lcall
gs
les
add
push
and
arpl
inc
push
add
push
test
aas
and
test
push
mov
jmp
out
stc
jp
push
pop
jle
dec
leave
loope
stos
and
sbb
adc
mov
aas
int3
int3
adc
cmp
adc
in
fdivrl
jae
int
cmp
dec
ja
cmp
xchg
xchg
xor
ret
pop
mov
inc
bswap
in
and
mov
std
sbb
fsubrp
adc
mull
or
xor
dec
sub
ficomps
xor
jge
and
xchg
out
inc
dec
push
loop
mov
and
mov
hlt
xor
pusha
lea
cmp
jo
fdivs
jae
cmp
jl
test
lods
jnp
gs
jb
lods
lods
xchg
insl
or
das
xlat
jb
std
add
and
mov
cltd
push
pop
or
cli
data16
mov
outsb
sbb
cltd
cmpsl
inc
pop
jne,pt
mov
pusha
ret
jl
push
mov
pop
sbb
sub
mov
in
cmp
jmp
mov
cmp
inc
pop
in
sub
stc
xor
outsl
movsl
inc
cmp
pop
mov
cmp
int3
ds
aam
lcall
jae
jns
ja
and
push
mov
dec
add
sbb
mov
rolb
push
jmp
xchg
mov
dec
popf
xor
cld
or
jg
adc
jl
mov
add
call
push
inc
ja
xlat
popa
dec
aaa
lret
mov
icebp
mov
pop
aas
rcll
cmovnp
pop
cmp
scas
jp
gs
jno
and
jbe
push
jl
or
add
es
mov
pop
movsl
or
xor
add
pop
mov
lcall
faddl
mov
daa
jo
cli
adc
shr
push
sbb
nop
jl
adc
lret
xor
pop
push
test
mov
mov
int
sbb
into
inc
add
out
xlat
arpl
xor
pop
inc
je
xchg
imul
ds
out
xor
dec
sub
mov
mov
fwait
mov
test
cmpl
cmpsb
jge
jae
test
sbb
into
arpl
inc
sub
jle
fsub
pop
loope
adc
mov
xchg
and
ja
mov
movsl
lret
inc
ds
push
jb
fidivs
daa
lods
jb
xor
lods
jle
popf
shrb
ja
xor
jbe
push
jns
or
lret
cmp
mov
add
xchg
je
and
push
xbegin
das
xchg
and
dec
add
stos
cmpsl
inc
sbb
jbe
and
in
cmpsb
jmp
jge
xlat
mov
in
ds
rcrl
xorl
mov
test
bound
and
xchg
mov
daa
pusha
clc
sub
mov
subl
je
xchg
imul
xchg
daa
or
xor
scas
in
imul
dec
ret
addr16
fldt
cld
pop
jns
jg
ja
test
aam
loope,pn
mov
sbb
jg
in
inc
mov
mov
out
push
aam
jge
mov
ljmp
cs
jae
mov
jno
inc
jno
icebp
cmp
sub
lock
flds
and
scas
fldenv
mov
mov
push
clc
and
adc
lock
cmpsb
dec
mov
push
mov
sub
pop
loopne
shlb
cmpsl
sbb
lods
nop
stos
dec
insb
je
sub
in
test
leave
cli
js
adc
jo
scas
adcl
dec
aaa
cmpl
inc
dec
sbb
xchg
or
inc
mov
and
std
popa
in
and
rorb
push
call
cli
or
stos
pop
mov
mov
sub
push
xlat
mov
shlb
bound
push
aam
mov
sub
gs
outsb
lea
push
dec
iret
add
in
fisubs
ljmp
cltd
mov
scas
int
and
lret
mov
gs
fs
pop
xor
out
mull
orb
xor
insl
idivl
sub
inc
sub
insl
mov
cmpsl
xor
ror
ljmp
ja
ljmp
insb
sub
mov
sub
mov
sub
ja
pop
je
mov
and
sub
out
inc
xchg
mov
inc
int
in
dec
xor
pop
pop
test
xchg
leave
dec
es
mov
sbb
arpl
push
idivl
hlt
dec
or
mov
lea
jp
cmp
dec
fdivrp
mov
repz
add
mov
negb
and
cmc
mov
lret
xchg
sub
sti
pop
and
xchg
lret
jecxz
into
sub
test
nop
call
int
adc
jecxz
fs
cmp
scas
jne
movsb
sar
loopne
mov
jnp
xor
fisubrl
sti
push
addr16
and
mov
arpl
nop
icebp
out
ds
es
cmp
sbb
popa
sub
je
add
push
lock
mov
push
lods
lods
lret
ja
mov
in
jmp
push
push
mov
rolb
out
out
scas
lock
jne
sbb
jecxz
in
daa
out
pop
iret
lcall
pop
cmp
ret
jmp
mov
pop
cli
aas
pop
mov
hlt
jge
mov
icebp
xchg
insl
or
xchg
aam
cs
or
rcl
je
mov
call
fdivs
mov
pushf
enter
lret
stc
pop
enter
adc
add
mov
push
mov
or
cmpsb
das
sub
in
or
gs
icebp
xor
aaa
push
or
int
push
icebp
not
cld
cmpl
out
dec
jg
push
fildll
pop
dec
mov
movsl
mov
dec
ljmp
cmp
push
aas
adc
mov
fwait
cmpsb
scas
clc
sbb
add
push
and
xchg
lods
dec
fwait
mov
mov
xchg
xor
stos
jb
das
insb
push
ret
fdivrl
push
adc
leave
inc
mov
std
lret
mov
or
iret
dec
sti
inc
ret
inc
mov
sub
outsl
adc
dec
into
pop
mov
sub
fbstp
jae
mov
xchg
inc
dec
ljmp
push
loope
pushf
xchg
jge
inc
ja
adc
in
sahf
addb
lea
xchg
and
push
sub
sbb
inc
sub
flds
jo
lcall
inc
out
mov
sahf
out
out
cmp
fisttpl
lret
inc
ss
cmpsl
jns
dec
cmp
movsb
int
lret
mov
outsb
and
int3
mov
hlt
test
stc
cmp
push
push
jmp
clc
inc
pop
cmpsb
jecxz
mov
mov
pop
hlt
mov
cltd
data16
or
sbb
sub
sbb
dec
or
and
js
cltd
mov
aad
or
std
mov
out
mov
pop
mov
sub
sti
add
inc
int3
orb
mov
dec
loopne
fmull
xor
adc
fsubs
xor
icebp
mov
enter
mov
rorl
cmp
xor
shlb
lods
int3
pop
jge
cmpb
adc
add
xchg
stos
aaa
mov
push
inc
leave
ret
mov
imul
bswap
add
or
in
jns
pushf
out
pop
xor
pusha
jmp
mov
add
or
and
fs
xchg
mov
ss
pushf
and
jecxz
fidivl
cmpsb
jmp
pop
pop
pop
mov
out
cmp
xchg
add
clc
sahf
ja
ds
adc
ljmp
xchg
xchg
vunpcklps
pcmpgtw
xor
adc
sti
in
mov
mov
dec
shlb
mov
pushf
inc
adc
popa
pop
adc
fdivrp
pop
adc
xlat
js
fmul
movsb
aad
push
dec
and
mov
dec
incb
jecxz
ss
xchg
inc
movb
ds
stc
ss
sub
xchg
iret
int
and
push
pop
in
jp
adc
push
mov
xchg
je
js
fs
push
jecxz
and
sar
stos
xor
out
adc
scas
sbb
popf
ret
shlb
mov
pop
xor
jmp
dec
mov
xor
mov
xchg
ficomps
add
jl
shll
mov
mov
jg
xchg
fdivl
mov
cs
mov
icebp
dec
or
push
idivb
jbe
mov
add
subb
xchg
sahf
sti
adc
aaa
dec
sbb
cmp
jge
or
fwait
mov
inc
jp
and
lcall
dec
jecxz
psubd
jnp
inc
int
aad
mov
shl
lods
in
mov
xor
xor
jnp
sub
orl
cmc
daa
jp
ss
cmpsb
xlat
ljmp
insb
or
loopne
int
and
mov
in
cwtl
mov
push
cld
popa
notl
mov
fiadds
fstl
call
les
out
into
push
pop
test
mov
mov
mov
jmp
inc
out
push
xlat
out
ror
xchg
stos
loope
add
xchg
pop
ficomps
xchg
cmp
ss
jle,pt
lret
or
mov
mov
mov
cmp
test
testb
das
sti
dec
pop
lock
ret
mov
or
popa
pop
mov
in
pop
sbb
in
ss
cmp
jecxz
sbbl
mov
test
lret
incb
jg
addl
mov
fneni(8087
in
out
imul
out
mov
inc
int3
dec
test
jmp
push
testb
mov
sub
push
add
bound
jg
push
sub
inc
sbb
lret
pop
or
xchg
xchg
leave
std
filds
popa
pop
xor
ret
adc
adc
cwtl
dec
cs
sbb
mov
jecxz
mov
loopne
push
xor
imul
cmp
lock
iret
mov
jle
adc
in
push
mov
xor
jnp
ret
ret
xor
cmpsb
mov
jecxz
fwait
scas
mov
mov
sti
cmp
in
fwait
mov
and
mov
out
xchg
dec
enter
or
out
mov
xor
push
xor
jl
in
inc
push
lret
loope
test
add
xor
mov
add
aas
test
sbb
push
dec
in
push
addb
cwtl
jns
dec
arpl
cmp
es
stos
fdivrs
and
push
outsl
or
repz
clc
jmp
cmp
sub
pop
or
stos
subb
jge
mov
push
insl
xchg
outsb
dec
cltd
add
pop
sub
mov
or
mov
adc
push
cld
fnstcw
lods
xor
ja
sub
stos
outsl
lahf
out
cmp
push
into
cmp
lods
lret
outsl
jp
cmc
push
rorl
lret
xor
xchg
scas
jno
fwait
push
jae
movsl
fwait
mov
popf
test
lea
loop
mov
out
daa
ds
mov
push
sub
std
inc
pop
mov
jle
ja
cmpsl
mov
lods
fnstsw
insb
movsl
mov
and
in
loop
ret
lahf
cmp
cmp
dec
pop
inc
cmp
outsl
in
sbb
pushf
xchg
cmp
and
es
stos
nop
test
ds
fnstcw
xchg
push
mov
mov
jp
xor
xchg
adc
add
push
sub
lcall
leave
push
mov
aad
pop
clc
pop
gs
xor
jl
add
add
jge
lahf
or
adc
xchg
mov
out
add
mov
out
fdivl
orl
cmpsb
push
lret
cmp
adc
pop
int3
lock
dec
mov
pop
mov
push
loope
fisubs
mov
test
xor
push
rcll
lret
loope
fisttpll
jge
push
dec
hlt
mov
or
shr
mov
loop
pusha
xor
pusha
std
aaa
xor
out
test
out
flds
push
rorb
pop
adcb
cmp
jo
fldt
jo
push
lret
outsb
je
jo
jo
js
das
cli
cmp
mov
jmp
lds
mov
dec
cmpsl
mov
cmpsb
enter
add
mov
out
lahf
pop
inc
xchg
add
outsb
adc
cmp
mov
push
xor
pop
jmp
scas
pop
sbb
mov
xchg
jge
ret
mov
sub
movsl
rcr
sbb
addr16
push
or
mov
sbb
cld
push
lret
mov
shrb
iret
lock
shrb
and
ret
cmpsl
adc
lods
and
xor
push
cs
push
call
xchg
sub
dec
sbb
jbe,pt
adc
add
dec
xchg
ret
iret
imul
adcl
in
adc
add
sldt
add
ja
add
int3
xor
insl
dec
jnp
jmp
add
push
fcomip
in
mov
mov
inc
jg
adc
xor
add
add
or
adc
add
mov
add
les
add
add
movsl
jl
cmpsl
add
add
inc
pop
sahf
or
push
add
jnp
addb
ja
popf
add
cmp
jae
inc
and
lret
or
mov
xor
adc
sbb
or
pop
rorl
movsb
icebp
xchg
repz
js
add
jmp
add
xchg
xchg
fstps
add
push
add
add
jbe
xor
dec
popl
jno
imul
inc
pusha
jae
cmpsl
pop
adc
cmp
nop
add
xchg
popf
divb
mov
inc
sbb
add
rol
arpl
add
dec
notb
and
dec
leave
cs
adc
test
mov
jecxz
add
fs
inc
xor
add
push
push
call
test
and
sbb
repnz
out
stc
test
scas
aad
add
xor
adc
in
and
int
or
add
insb
inc
cmpsb
add
imul
jecxz
xor
setne
jmp
lret
int3
push
add
add
ret
sub
xor
and
loopne
inc
mov
or
ljmp
cmpsl
cli
mov
dec
dec
out
pop
in
or
pop
or
mov
adc
mov
outsb
add
cmp
adc
pop
lcall
dec
mov
pop
inc
dec
bnd
fwait
ljmp
fdivrs
add
xchg
xor
leave
pop
into
add
rolb
xlat
pushf
push
arpl
sbb
pushf
push
incb
add
in
add
mov
inc
xchg
add
sbb
add
lods
lahf
inc
pop
out
andb
and
jp
mov
mov
or
add
xchg
cs
adc
cmp
arpl
jmp
inc
mov
xor
lahf
aam
xor
stc
push
adc
sbb
mov
clc
sbb
int
add
or
xchg
lret
lret
outsl
aaa
or
mov
icebp
lods
xor
and
cmpsl
lret
and
jle
repnz
rorb
dec
mov
stos
cs
rorl
sub
xchg
pop
bound
dec
cmp
jae
add
jbe
cmp
and
fcoml
stc
add
pop
xchg
lahf
cmp
add
xchg
add
mov
out
int
dec
xchg
push
xchg
jbe
add
fsubs
add
lods
mov
add
fdivrs
out
pop
pop
bound
int
out
stos
jecxz
jnp
add
and
or
add
mov
mov
push
and
negb
add
leave
int3
adc
lock
add
add
mov
push
in
cltd
lea
add
xchg
and
movsl
add
popf
add
mov
test
inc
xor
mov
add
jbe
outsb
xlat
add
shr
mov
arpl
jae
insl
add
add
pop
fnsave
lock
add
int3
loope
ret
jp
xchg
scas
cmp
subl
pop
roll
add
nop
or
out
sbb
pop
mov
cmp
add
sbb
inc
cwtl
or
jbe
add
into
xorps
test
add
test
test
mov
adc
push
dec
jno
jo
dec
xor
add
ret
or
std
fwait
fwait
mov
inc
push
xor
jns
mov
mov
mov
in
mov
xor
add
add
sub
fisubrs
add
push
enter
movsl
out
stc
pop
and
fnstenv
and
add
aaa
scas
mov
mov
jbe
add
add
movsl
ljmp
inc
in
movsb
xchg
fadds
je
ret
out
add
lahf
cmpsl
push
pop
lahf
add
movsl
adc
sbb
lods
cmp
jno
and
xchg
pop
pop
std
mov
cmc
je
xor
xchg
add
mov
add
rorl
dec
test
cld
addr16
add
push
cmpsl
lcall
xchg
jmp
inc
les
push
add
dec
sbb
dec
lea
add
add
lock
mov
fldl
jnp
add
dec
xor
add
cltd
cmp
jmp
add
cmc
adc
std
add
in
ss
inc
inc
incb
adc
and
std
xor
cmp
xor
enter
dec
push
dec
jmp
and
push
xor
add
and
gs
stos
mov
jo
divb
xchg
add
mov
mov
add
adc
inc
out
int3
add
das
mov
es
mov
add
mov
or
dec
shlb
and
out
sbb
fadds
fisttps
lea
rcl
fdiv
inc
test
inc
mov
test
repz
leave
add
lret
pop
add
nop
add
ret
stc
xor
add
mov
hlt
ret
cmp
es
add
aaa
add
add
push
and
cmp
ds
pop
out
and
add
stc
notl
add
fnstsw
testl
add
out
aaa
imul
repz
add
fistl
mov
inc
jbe,pn
mov
rorb
cli
cmp
imul
add
xchg
add
xor
aas
add
sub
inc
fbld
lods
daa
lods
add
leave
dec
dec
push
arpl
pop
or
imul
add
jno
mov
clc
xor
test
xchg
jmp
add
sbb
clc
dec
add
sub
fistpl
sub
push
fadds
dec
xchg
jae
add
rcll
fisubrl
fwait
or
mov
push
add
xor
add
adc
test
shll
cmp
arpl
pop
in
add
jg
shrb
jge
arpl
ror
xlat
notl
dec
rorb
add
add
cmpsl
cwtl
addr16
ret
insl
add
add
lahf
shlb
outsl
xchg
mov
repz
add
cmc
mov
pop
out
xor
add
xor
add
and
cld
vpshld
and
mov
add
sub
lahf
data16
xor
inc
insb
scas
daa
mov
xrelease
rcrl
call
add
push
mov
lret
into
inc
add
call
fidivrl
add
add
sbb
add
mov
movsl
push
imul
jmp
jae
shrb
roll
add
xchg
icebp
cmpsl
int
mov
ret
add
cmp
cltd
or
xchg
jecxz
mov
push
imul
sahf
clc
add
mov
lea
xchg
mov
sub
ja
jnp
add
repnz
add
pop
fisubl
add
in
dec
jecxz
mov
popf
movsb
pop
add
pop
std
push
add
add
outsl
cmp
add
fcmovu
shll
add
add
ljmp
rdmsr
lret
js
add
mov
dec
add
movsb
xchg
or
add
add
jb
add
and
xchg
add
sbb
mov
daa
add
xlat
lds
and
call
mov
imul
pop
sbbl
mov
cmc
lock
add
push
pop
xchg
stos
inc
add
fstl
add
das
inc
mov
jo,pt
lock
sbb
lea
setnp
inc
sub
sarl
lret
hlt
push
add
insl
mov
and
jmp
mov
out
in
add
push
cmp
add
or
ja
xor
add
mov
inc
push
xor
test
stos
dec
sbb
add
test
lea
add
aas
stc
in
das
movsb
mov
adc
adc
add
andb
add
jbe
dec
shlb
jecxz
int
int3
push
mov
nop
sbb
movsb
rcll
and
icebp
movsl
pushf
aam
push
arpl
fucomp
xchg
cmp
sub
sub
push
xor
push
fidivs
jo
mov
xchg
xchg
dec
lds
jecxz
xchg
shlb
stos
mov
movsl
add
cmp
dec
testb
dec
push
add
ds
jmp
add
xor
fnstenv
mov
movsb
sti
mov
aad
or
add
add
mov
call
rorl
bound
nop
mov
cmc
add
add
adc
movsl
pop
arpl
mov
push
dec
dec
jmp
adc
enter
inc
aaa
and
push
aas
scas
lret
inc
dec
or
stos
cs
pop
jmp
sub
mov
ja
or
add
mov
stc
stos
inc
hlt
add
aam
xlat
inc
push
dec
repz
jecxz
mov
fdivrp
adc
popf
outsb
cmc
pop
mov
enter
rorl
mov
pop
mov
stos
icebp
loop
jbe
cli
jecxz
add
pop
add
add
cmpsb
add
jnp
sub
ret
add
add
sbbl
fistpll
add
je
insl
adcl
mov
in
pop
sub
in
cld
pop
cltd
xchg
add
mov
iret
xor
inc
and
xchg
stos
je
push
insl
jge
mov
sbb
repnz
sub
xchg
jne
bound
sbb
inc
rolb
shll
add
xchg
or
adc
popf
jle
in
xor
pop
test
cmp
cmp
sub
add
xchg
push
mov
mov
and
sarl
pop
mulb
jno
dec
or
xor
scas
jg
outsb
popa
push
add
adc
xchg
xor
out
aad
add
mov
cwtl
add
push
sbb
divl
es
push
in
or
enter
cmp
shl
pop
add
stos
pop
adc
iret
je
sub
pop
call
fiadds
xchg
icebp
inc
add
pop
test
and
insl
xchg
add
popf
adc
icebp
loop
sarl
add
add
xor
mov
pop
rorl
and
clc
rol
adc
push
mov
in
sbb
je
inc
dec
mov
dec
movsl
orl
and
mov
cmpsl
test
and
mov
add
test
pop
out
adcb
out
adcb
std
push
sarl
xor
add
test
cmp
test
push
ljmp
sbb
in
inc
jne
inc
ljmp
sti
xor
cltd
idivb
incb
sbb
inc
rclb
cmpsl
xchg
aas
rol
fs
jmp
add
mov
imul
aam
cwtl
adc
in
mov
push
outsb
sub
jbe
subb
add
adc
fdiv
icebp
xchg
insb
cmpsb
jno
loope
sldt
add
jne
ljmp
or
cmpsl
lock
mov
push
insb
sub
addb
popf
lret
add
fisttps
lea
lods
sti
scas
pushf
xchg
in
push
in
mov
orl
xchg
and
push
ret
adc
pop
and
shll
sub
add
ljmp
repnz
lock
inc
xchg
adc
push
add
lock
jmp
out
out
call
aas
or
or
sbb
out
rcll
or
add
cs
mov
push
mov
dec
dec
add
mov
mov
inc
push
sbb
outsl
mov
add
pop
jmp
mov
xor
add
jae
or
shr
xchg
add
out
push
lock
adc
adc
jl
pop
and
sub
out
xor
add
mov
into
pop
imul
lea
hlt
add
enter
sbb
jle
add
adc
sbb
xor
lock
push
inc
daa
add
lock
xchg
sub
adc
dec
and
into
pop
mov
sarb
add
mov
inc
mov
jo
add
lcall
mov
add
jno
jmp
pop
adc
dec
sub
inc
add
mov
addr16
add
add
add
fwait
xchg
mov
adc
pop
ja
daa
outsb
jbe
test
add
arpl
insb
add
mov
add
add
cmc
inc
mov
pusha
ljmp
bound
leave
sub
xchg
aad
insb
data16
or
add
jbe
add
inc
pop
cs
mov
jecxz
loop
lcall
es
sti
aam
add
push
xor
jb
lock
inc
mov
mov
popf
std
cmp
xchg
mov
xchg
add
xchg
pusha
call
add
mov
adc
lea
xchg
pop
mov
into
ljmp
push
xor
scas
lret
xor
xchg
or
add
jbe
add
dec
xchg
mov
jns
sbb
inc
pop
repz
lret
cmpsl
enter
adc
and
mov
sub
jecxz
fidivs
mov
dec
lahf
fnstsw
dec
jnp
mov
rorb
mov
adc
sub
add
or
inc
inc
mov
mov
repnz
and
add
test
jnp
add
jnp
leave
dec
xchg
stos
push
imul
loopne
cwtl
pop
aam
add
inc
add
mov
mov
cwtl
mov
jmp
cld
mov
stc
jl
pop
inc
push
in
and
inc
fists
push
stos
jne
rolb
dec
stc
shlb
decl
cmp
popf
jbe
push
enter
mov
ds
scas
dec
lcall
add
clc
ret
lods
pop
adc
lea
inc
mov
or
xchg
shlb
sub
xchg
add
mov
call
repz
cmp
ret
sbb
adc
iret
xor
cmp
jle
aad
cmp
pop
in
lret
das
test
mov
sub
mov
cli
outsb
adc
push
xchg
add
movsb
cmpsb
pop
fadds
call
xor
into
jmp
lea
test
xchg
sti
mov
mov
pop
ret
ret
pop
mull
clc
push
xor
lahf
call
sar
cwtl
mov
pop
and
mov
add
mov
fcom
lea
lret
fiaddl
jnp
push
rorb
mov
pop
cwtl
imul
aaa
pop
mov
testb
mov
add
mov
push
dec
addr16
rcll
cmpb
test
mov
sbb
sar
xchg
outsb
imul
scas
out
inc
daa
popf
test
mov
ss
jp
add
mov
icebp
dec
sbb
arpl
add
in
out
mov
stc
cld
sbb
scas
jg
fldt
sub
lcall
arpl
jns
add
dec
push
add
inc
sbb
inc
xchg
mov
push
pop
dec
xchg
fwait
inc
adc
daa
add
pop
push
out
rcrl
inc
pop
push
fadds
pusha
shl
fcomps
jecxz
add
xchg
adcb
add
iret
jno
cmpsb
add
outsl
aas
adc
add
jecxz
rclb
mov
xchg
sub
push
leave
clc
push
add
push
shlb
shll
stos
add
mov
add
mov
sahf
pop
lods
add
mov
pop
iret
or
into
add
pop
xor
jns
jmp
add
in
lea
jo
mov
outsb
mov
push
jns
add
add
inc
addb
adc
stos
lret
add
push
xchg
into
pushl
mov
xchg
jns
add
fwait
pop
adc
mov
int3
test
add
mov
cltd
sti
xchg
add
add
add
repnz
push
push
add
push
add
push
xchg
sbb
sub
test
dec
lds
pop
aam
add
sbb
jecxz
mov
or
add
add
adc
add
sub
inc
pushf
lods
push
dec
mov
add
mov
add
ret
or
pop
into
pop
sahf
cmp
add
jcxz
fadds
or
push
add
jmp
rolb
addr16
pop
dec
xor
xlat
ljmp
pop
pusha
outsl
icebp
jnp
inc
lea
add
fwait
sub
add
jnp
dec
adc
xchg
pop
mov
ret
aaa
lahf
push
outsb
jns
lahf
fstl
jb
cwtl
sbb
add
test
push
mov
add
test
outsl
mov
loopne
sbbb
xchg
add
dec
dec
add
cmp
popa
or
add
add
cwtl
lea
scas
add
mov
jb
and
sub
add
mov
mov
add
aad
lods
iret
jo
adc
add
add
movsl
inc
std
leave
ficoms
add
or
mov
add
mov
outsb
xchg
or
add
ljmp
cmpsl
sti
pop
add
in
xchg
cmp
aam
xchg
sub
and
add
mov
aas
loope
add
dec
jl
mov
mov
add
push
ljmp
addr16
outsb
dec
add
add
fwait
ds
rorb
lret
lret
scas
mov
out
and
add
xchg
pmulhuw
xor
std
push
jnp
shlb
and
add
rol
je
add
add
adc
jge
dec
add
adc
cltd
pop
and
out
out
add
cmp
cmc
outsb
mov
hlt
adc
repz
les
ljmp
dec
xor
xor
adc
mov
add
push
addr16
repnz
add
mov
dec
add
mov
push
sub
push
popf
push
inc
or
jo
call
ret
pop
test
mov
cmpsl
call
xchg
in
sti
int
push
pop
push
mov
in
jo
xlat
xchg
clc
add
cs
jmp
add
xlat
repz
ja
jmp
push
add
inc
add
and
sbb
xlat
add
mov
push
in
add
adc
add
xchg
xor
push
fchs
mov
fcompl
call
add
sbb
or
inc
add
add
sbb
sub
mov
sbb
sbb
add
sub
aaa
pushf
or
sbb
add
mov
cltd
push
rcrl
dec
dec
sbbl
pop
adc
daa
add
xor
adc
push
into
int3
mov
push
add
adc
insb
jb
inc
push
or
mov
mov
adc
mov
cmp
scas
xor
xchg
shl
mov
icebp
stc
push
inc
mov
push
jae
and
push
jmp
jne
shlb
test
cmp
scas
inc
lcall
inc
mov
push
mov
shll
iret
jmp
adc
xchg
shrl
and
iret
jnp
ds
sbb
dec
int3
fsubrl
add
mov
add
in
sbb
jmp
xor
lods
jno
movsb
xchg
mov
mov
and
cltd
movl
nop
sbb
add
fldt
sub
ret
adc
test
fsubrl
in
push
add
xchg
cmp
mov
mov
jno
fstpl
xlat
mov
add
xchg
les
add
add
xor
fwait
test
std
xor
add
cmp
xor
push
jae
ret
push
mov
sub
test
ljmp
add
pop
out
jp
mov
pushw
fiaddl
push
adc
mov
lods
scas
push
or
rolb
sub
lret
mov
loop
and
add
jl
orl
inc
lods
jle
cmpsb
or
sub
add
mov
jbe
mov
jmp
add
mov
das
dec
ljmp
dec
mov
les
repz
into
or
rcrb
fcmove
sbb
jp
subb
mov
sbb
mov
add
out
mov
mov
push
add
aas
xchg
insl
xchg
shr
and
int
mov
adc
pop
fistpl
pop
mov
sub
ss
xchg
mov
mov
inc
or
sbb
dec
mov
outsl
xor
add
hlt
sub
dec
cmc
pusha
dec
ret
jb
xlat
loopne
xor
pop
roll
add
out
xor
jnp
jmp
imul
jns
sub
ds
add
out
int
xor
jge
out
cmp
mov
xor
add
jmp
jae
add
add
popa
icebp
aad
sub
mov
cmpsl
cld
mov
sar
imul
rcr
add
jbe
and
call
es
add
sbb
add
jmp
fildll
dec
xor
add
movb
sbb
leave
sbb
add
dec
stos
add
iret
jmp
adc
lods
fisubs
cmc
cltd
loop
mov
xchg
pop
in
lret
xchg
mov
add
xchg
inc
add
inc
test
mov
popa
mov
and
add
mov
and
xchg
dec
cmp
mov
enter
rcrb
jg
jae
mov
xchg
xchg
xor
add
int
dec
cmp
adc
add
and
cmp
jno
pop
ja
addr16
sbb
mull
xor
stos
mov
aas
push
loope
mov
add
sbb
jo
out
aam
andb
icebp
mov
add
popa
popf
jg
mov
lds
fwait
cltd
pop
cmc
cmp
lcall
mov
and
mov
add
adc
cmp
add
iret
add
cmc
in
out
dec
cmp
sbb
fiadds
add
imul
and
daa
inc
or
outsb
pop
mov
pop
mov
es
mov
or
loopne
jae
popl
scas
stos
mov
loop
add
insb
adc
or
sbbb
push
sbb
dec
dec
movsl
pusha
loop
cmc
add
ljmp
repnz
enter
add
dec
add
jnp
mov
mov
push
cmp
in
cwtl
dec
jbe
push
mov
add
xchg
and
out
cmp
xchg
je
ror
add
add
sbbb
mov
testl
add
or
stc
inc
push
test
add
test
test
in
xchg
add
lods
add
add
jns
stc
inc
cmp
add
add
cwtl
arpl
aad
rorb
add
and
icebp
testl
add
add
mov
fcom
mov
add
jbe
and
ja
add
lcall
jne
mov
xchg
popf
pusha
into
call
cli
adc
fs
insb
imul
js
pop
leave
je
data16
or
pop
rorl
out
out
div
push
ret
test
stc
mov
or
bnd
push
mov
fbld
mov
pop
sti
lcall
add
xchg
cld
add
add
push
inc
sub
xor
add
jg
mov
cmp
arpl
cltd
addr16
sbb
mov
adc
sbb
sbb
add
inc
in
sbb
cmp
out
xchg
add
and
sbbb
xchg
sbb
gs
xchg
ljmp
xchg
mov
mov
cmp
cmpsb
aam
outsb
mov
out
lret
popw
inc
jne
lcall
arpl
insl
daa
imul
roll
testb
or
ds
mov
lahf
mov
adc
lds
add
xor
pop
cli
jl
incl
add
mov
scas
gs
inc
fisttpll
lcall
sbb
rcl
jmp
cmp
mov
fcomip
jmp
pop
scas
movsl
nop
add
lods
dec
nop
lea
mov
inc
add
add
ret
lods
add
test
sub
mov
in
leave
xchg
add
jge
mov
xchg
adc
aaa
xchg
sbb
movzbl
sub
les
pop
inc
cmc
push
fcomp
sub
insl
fiadds
test
movsl
std
jb
enter
pop
dec
mov
dec
jmp
inc
loopne
jne
aam
add
aam
pop
jb
lret
les
mov
fwait
xlat
fmul
test
in
aam
sbb
inc
shrl
mov
jmp
dec
cs
subb
pop
and
add
fidivs
sub
add
fisttpl
xor
test
add
lods
mov
in
enter
stos
cld
xchg
push
mov
add
pop
mov
add
add
cltd
and
lret
jg
andl
pushf
add
mov
stos
jns
mov
insl
in
es
push
scas
sub
dec
xchg
repz
mov
jg
push
jl
fcmovnb
add
push
xchg
add
xchg
pusha
or
sarb
stos
std
mov
push
cmp
insb
push
mov
lahf
lods
leave
sahf
pop
movsb
popf
lods
and
movsb
shll
fnstcw
sbb
sub
lret
jle
mov
je
and
add
push
xor
shl
xchg
xchg
ficoml
or
out
fdivrs
mov
clc
dec
lcall
popf
cmpl
mov
insb
loopne
push
cs
xchg
push
sbb
and
mov
push
xchg
fcoml
ret
out
repz
ret
dec
mov
shrb
int
add
jne
sbb
call
fnsave
sub
add
inc
mov
loop
add
pop
cmp
outsl
adc
cmp
movsb
add
cmp
add
xor
dec
aaa
scas
inc
aam
dec
xchg
fmul
iret
sub
mov
adc
adc
mov
out
sti
stos
sbb
and
fdivl
xchg
jb
xchg
dec
mov
ret
mov
pop
pop
jbe
in
shrb
pop
or
xor
aaa
lods
xor
jbe
xor
add
jg
int3
aad
adc
push
add
jp
add
add
sub
sbb
cmp
push
loopne
xchg
add
sahf
adc
or
add
add
dec
insl
add
add
mov
add
sbb
jnp
pop
das
adc
out
add
jp
add
xchg
add
cmp
push
inc
jmp
sub
daa
cmp
mov
pushf
jbe
movsb
mov
add
add
dec
dec
mov
ljmp
lahf
fildl
add
into
xor
push
xor
jb
out
movsl
hlt
stos
shrl
add
add
and
int3
pop
xchg
insl
loop
cmp
insb
call
sub
popf
movsl
movl
add
into
add
add
jecxz
arpl
data16
adc
test
cli
add
mov
xlat
insl
cwtl
pushf
lods
loopne
fstpt
sbb
or
cmp
movsb
xchg
punpckhbw
dec
xchg
mov
shl
es
cmc
pop
mov
inc
mov
cmp
repnz
mov
add
push
decb
int3
or
sbb
jmp
shld
push
sbb
xor
dec
mov
push
push
inc
popa
data16
mov
sbb
loop
sbbl
add
sarb
cltd
mov
ret
lcall
cmpsl
pop
inc
push
jg
cwtl
fsubl
int3
sub
lret
into
icebp
push
adc
sahf
pop
into
jno
pop
or
jmp
inc
es
pusha
into
rolb
lcall
shll
scas
js
sbb
mov
cmpsb
mov
add
push
mov
jb
xor
repnz
add
inc
imul
xlat
adc
adc
add
add
add
add
xchg
push
lock
xor
xor
inc
sub
jp
add
pop
icebp
xor
leave
repz
hlt
adc
fdivr
inc
cmp
insl
call
repz
fcomi
fnsave
decl
repnz
int3
xor
or
sub
pop
test
mov
popa
mov
daa
mov
pop
loopne
jl
daa
add
in
in
jnp
add
jmp
cmp
xchg
jecxz
pop
paddsw
mov
popf
notl
jnp
pop
inc
les
add
mov
push
sarl
lock
mov
and
xlat
add
mov
mov
mov
cwtl
sbbl
jmp
sub
leave
in
or
repnz
fwait
adcb
mov
sahf
jae
sub
push
scas
lea
int
idiv
sbb
std
jne
lock
jnp
add
jle
rolb
xchg
or
cmp
add
cs
mov
cmp
loop
pop
add
add
mov
pop
add
push
mov
or
xor
xchg
jne
add
push
imul
cmpsl
pop
sub
jp
cld
add
mov
mov
sbb
mov
push
sbbl
je
push
and
lret
cmp
std
sahf
lds
sbb
dec
out
fwait
lds
mov
add
imul
das
int3
out
mov
or
pop
mov
add
sub
sub
push
popf
imul
inc
inc
data16
cs
jnp
std
cmc
dec
mov
lret
mov
fcmovu
add
add
pop
jmp
jb
add
add
inc
pop
add
or
push
fdivrp
out
insb
or
rorb
setl
ret
cmp
call
pop
incl
add
rorb
pop
dec
cld
jns
mov
out
enter
add
mov
pop
xchg
ret
xchg
cmp
pop
or
getsec
add
testl
in
sbb
and
pop
enter
adc
inc
add
xor
int
test
in
fadds
dec
pop
cld
jne
dec
cltd
mov
lcall
out
dec
inc
popa
xchg
add
stos
int
add
mov
mov
push
stos
sbb
mov
mov
mov
add
or
or
sbb
jge
xchg
mov
mov
dec
incb
addr16
jp
out
stc
jge
ljmp
add
sbb
add
aaa
add
lods
lret
or
shlb
pop
popf
daa
adc
inc
rcrl
push
decb
xchg
xor
jnp
lahf
cmp
jp
mov
imul
mov
push
aas
mov
add
cmp
popf
pop
and
jne
ljmp
push
cmpsb
stc
pop
xchg
adc
std
arpl
les
frstor
movsl
push
mov
dec
xchg
adc
sub
es
cmc
hlt
mov
lea
jns
aam
mov
pop
sbb
xor
push
dec
mov
andl
push
push
out
cmpsl
negl
xchg
inc
sub
mov
movsl
cmp
sahf
jbe
addr16
mov
movsb
jae
and
jp
mov
stos
in
mov
fsubl
jge
inc
shl
in
adc
int3
jbe
push
adc
xchg
or
int
mov
insl
add
fdivrs
push
xchg
mov
and
ja
nop
xchg
arpl
pop
daa
lea
test
out
lahf
adc
mov
or
xor
sbbl
cmp
fs
bound
inc
mov
fistps
jle
mov
int
negb
mov
lods
lea
stc
repz
mov
sbb
xchg
iret
fidivrs
out
outsb
sbb
iret
add
fmul
iret
sub
iret
push
rolb
add
in
ljmp
aaa
mov
add
add
sbb
add
add
mov
add
add
push
sbb
add
add
icebp
out
inc
ss
stc
mov
or
push
and
dec
bound
add
outsb
adc
pusha
lea
add
add
into
xor
cmp
cwtl
mov
xor
inc
adc
or
pop
pusha
fcmovne
stos
cwtl
aam
xchg
pop
hlt
xchg
inc
mov
movsl
out
leave
mov
out
andb
test
jae
dec
push
pop
jne
push
mov
in
jae
add
test
dec
xor
test
xchg
lret
call
cmp
push
in
ret
cmc
push
or
iret
iret
pop
pop
mov
ret
vshufps
jns
dec
test
shrb
movsl
ret
mov
fs
cmc
leave
and
stos
loope
iret
pop
cmp
insl
jae
dec
aad
add
sub
xchg
add
adc
aaa
nop
test
loope
add
and
xchg
pop
or
loopne
icebp
sbb
ljmp
push
add
mov
mov
push
outsl
and
jo
hlt
push
mov
jl
andl
mov
add
pusha
movsbl
lock
push
mov
jecxz
test
add
mov
lcall
and
in
mov
adc
aad
adc
xor
sub
lret
pop
mov
loop
daa
add
mov
out
sti
sbb
pop
push
sub
mov
outsl
add
sbb
mov
push
add
into
xorl
notl
enter
js
dec
sub
xor
add
xor
dec
pusha
outsl
or
arpl
gs
mov
in
stos
std
dec
add
xchg
xchg
ret
jae
sub
add
and
mov
mov
test
xchg
cmp
clc
adc
add
mov
sahf
xor
pop
adc
mov
lods
aad
xchg
add
aad
add
test
sti
jp
lcall
push
push
push
fldcw
jb
sbb
fstp
dec
nop
pop
call
testl
add
xchg
mov
pop
sub
dec
add
add
popf
les
addr16
pop
scas
ds
shll
add
cmp
pop
jnp
enter
dec
in
lock
mov
mov
add
add
cmp
or
add
push
dec
lcall
sbb
jmp
lds
push
xchg
mov
clc
push
or
xlat
ss
push
out
ja
cmp
fstpt
fdivrl
xchg
addr16
jb
push
jl
jge
add
pusha
lret
and
scas
add
pop
push
jo
jge
xchg
adc
push
push
fnstenv
fcmovne
enter
cmp
add
stos
push
xor
or
lods
pop
push
add
dec
sbb
sub
inc
cmp
xorb
jb
jmp
pop
push
insl
mov
mov
ret
sbb
add
call
add
mov
mov
mov
hlt
dec
test
jbe
cld
int3
cwtl
out
xor
mov
loop,pn
sbbl
test
imul
mov
aad
in
jg
add
xchg
cltd
sbb
add
pop
sahf
imul
hlt
cmpsl
add
fcomps
shlb
sub
cwtl
inc
fists
bound
int3
sub
cmp
jp
inc
xchg
pop
add
fdiv
repz
inc
or
rcl
mov
aas
dec
mov
lods
rorl
es
adc
test
xor
add
push
cmpsl
shlb
xchg
out
or
add
imul
adc
sub
sbb
or
cmpsb
add
sbb
les
mov
test
xlat
and
dec
pop
fistpll
mov
inc
adc
ljmp
mov
mov
rcl
mov
icebp
add
add
jno
pop
pop
cmpb
test
test
or
mov
rcl
xor
and
jmp
movntq
out
aad
add
jle
ret
js
mov
mov
mov
ja
xchg
dec
xchg
ja
mov
imul
adc
jle
xchg
add
cltd
inc
push
cmp
aad
xor
add
sub
add
sbb
lret
lar
daa
movsl
pop
popa
sahf
bound
mov
decl
fiadds
xor
add
call
add
jge
lds
cwtl
dec
lret
cmc
in
mov
add
add
add
das
mov
adc
cmp
push
test
mov
mov
es
add
lea
out
cli
dec
jae
mov
sub
ss
jle
mov
pop
jno
adc
das
out
and
bound
add
repz
cmc
mov
dec
pop
ljmp
add
add
inc
push
pop
nop
xchg
bound
add
cmp
cmp
add
add
and
add
fisubs
mov
add
or
jns
movsb
add
xor
add
cltd
xchg
push
mov
and
pop
jge
add
or
mov
add
pop
fwait
or
aam
out
jl
sahf
pop
into
add
add
add
and
add
pop
dec
xchg
adc
and
add
mov
scas
push
xchg
add
dec
scas
dec
add
mov
pop
add
add
mov
inc
insl
push
push
sahf
pushf
shrb
dec
outsb
je
and
mov
icebp
arpl
ds
sub
ficompl
inc
pusha
or
add
xorl
lods
mov
popa
push
lcall
sbb
sub
shlb
repz
sti
nop
or
and
sub
lods
inc
gs
rcr
adc
sub
add
jg
daa
sbb
std
popf
unpcklps
add
fwait
sbb
test
or
sbb
shlb
and
pop
cmpsl
pusha
xor
add
add
cmp
mov
loopne
or
pop
xor
dec
lahf
sbb
lret
lods
jnp
test
lcall
mov
sbb
into
outsl
cmp
subl
in
repnz
and
scas
add
and
iret
addr16
imul
sub
or
dec
cmp
push
xchg
jne
and
arpl
ds
jne
push
out
jno
fdivl
add
outsb
mov
cmp
add
inc
pop
or
add
add
sti
lahf
pusha
jo
cmp
scas
add
or
repz
xchg
xchg
mov
pop
inc
pop
add
add
or
jbe
out
lret
push
add
leave
sub
jle
jg
rcl
es
add
cmp
data16
inc
insb
cmpsb
cmp
shll
test
cmp
loop
add
addl
add
imull
xchg
sti
jno
sbb
push
add
or
inc
ss
xchg
adc
fiadds
jp
call
add
aas
adc
sub
sbb
icebp
jg
jnp
xor
add
in
or
imul
push
bswap
sbb
add
cli
bound
add
add
push
cs
nop
lods
sbb
pop
loope
pop
add
inc
pop
xchg
add
cmpsl
lret
cmpsb
repz
add
add
add
add
mov
mov
test
push
mov
bound
fwait
adc
fld
push
lea
cltd
add
or
add
pop
add
mov
add
sub
cmpsb
out
nop
or
sub
mov
lahf
and
add
xchg
add
jns
xlat
add
push
icebp
add
add
mov
push
cmp
fadds
or
cmp
jnp
dec
cmpsl
mov
jg
jg
add
enter
and
sub
mov
arpl
add
pusha
fistps
dec
add
lahf
shlb
xchg
and
cmp
add
add
negb
mov
rorl
dec
test
cmp
rcrb
add
fimuls
push
fwait
lods
or
dec
xchg
push
call
or
sbb
loop
scas
mov
pop
cwtl
add
roll
pmuludq
sti
loop
test
lock
sarb
scas
xor
out
add
ret
add
xchg
sub
add
mov
test
add
push
push
insb
es
repnz
jae
or
aad
int
push
add
xlat
shrb
adc
add
call
cmpb
add
inc
jecxz
sbb
jmp
sbb
xor
add
push
mov
cmpsb
add
jbe
js
mov
insb
ja
rcrl
out
pop
imul
iret
cltd
stos
jle
mov
icebp
add
xchg
mov
call
jbe
ss
jae
add
push
lods
cmp
xchg
iret
add
push
dec
test
add
add
lds
sub
outsl
cltd
pop
addr16
movsb
and
insb
cmp
cmp
es
xchg
add
aaa
and
push
cmc
xor
push
sti
jmp
ret
loope
and
or
add
in
sbb
adc
shrb
pop
xlat
and
test
stos
aas
fyl2x
cmp
jns
add
out
in
jnp
jmp
std
fmuls
sbb
pop
cmp
jle
add
adc
add
cmp
mov
fstps
jnp
sub
push
outsl
mov
leave
pushf
add
xchg
add
and
lods
jecxz
std
adcl
mov
jecxz
mulb
negl
bound
cmp
push
lahf
mov
loope
jecxz
lahf
add
add
mov
jno
int3
arpl
pop
int3
sbb
mov
std
push
xor
lods
stos
push
add
inc
popf
pop
add
push
lret
sti
fnsave
mov
std
roll
ret
push
pop
push
add
int3
mov
add
lret
add
sti
add
stos
fildl
sets
add
imul
loopne
ss
shlb
jns
xchg
sub
mov
out
sbb
xchg
out
shl
mov
fimull
in
shl
aad
lret
or
sub
add
sahf
jl
dec
lcall
add
popa
add
clc
or
or
add
fcmovnb
push
iret
icebp
aaa
dec
add
xlat
js
fsubs
cmp
in
js
fidivrl
dec
shl
inc
mov
add
clc
mov
fcomp
dec
push
or
js
imul
push
movsl
sbb
xlat
leave
into
test
divl
movsb
fs
jp
xor
mov
jo
std
popa
xchg
inc
rolb
add
add
sub
clc
shrl
fsubrs
jmp
add
xor
or
and
inc
add
fwait
cmpl
andb
pop
jo
pop
or
data16
mov
inc
into
fisttpl
pop
lcall
dec
mov
loop
sub
xor
fs
adc
inc
jp
test
outsl
decl
out
in
jne
xchg
insl
fbld
ret
sub
cmp
outsb
jge
fwait
xor
daa
xchg
js
mov
pop
loopne
dec
sub
push
mov
int3
xor
sub
addb
mov
add
mov
sbb
add
cmp
add
insl
lret
add
mov
add
loop
add
les
and
adc
push
push
xchg
lahf
jle
call
test
icebp
dec
and
sub
subl
and
int
adc
mov
add
add
repz
fisubrl
add
add
fbld
add
testl
jno
hlt
dec
mov
push
xchg
int
pop
cmp
sub
xor
and
mov
gs
test
pop
inc
cwtl
sub
je
cltd
pushf
jns
out
int
xor
adc
int3
stc
mov
and
dec
test
inc
ret
in
push
lahf
mov
add
cmpsl
aaa
stos
popa
cli
int
lods
xchg
add
add
int3
mov
add
sub
and
mov
scas
movb
add
pushf
insl
mov
cmp
andb
sbb
add
imull
add
jae
pop
lret
add
test
push
mov
arpl
cmp
dec
add
add
xchg
add
add
fxch
mov
cmp
push
mov
cmp
add
add
push
add
add
and
add
add
add
add
jae
insl
inc
add
add
add
add
mov
dec
push
add
insl
cmp
lret
cmp
daa
add
add
orl
js
mov
add
add
add
cmpsb
mov
add
rcr
es
add
sahf
icebp
dec
cmp
jno
sbb
pop
pop
add
add
ret
pop
push
add
fcos
test
popf
cmp
jl
add
mov
mov
adc
enter
fistl
inc
enter
sbb
mov
xchg
fdivrs
add
leave
cmp
movsl
out
inc
ret
repnz
lds
push
add
jnp
pop
xchg
ret
add
add
mov
add
add
push
test
xchg
and
add
add
cwtl
test
aas
sub
add
cwtl
imul
add
push
add
dec
sub
jbe
loopne
xchg
add
pop
imul
sti
nop
stc
into
jns
mov
jbe
add
fnsetpm(287
add
add
mov
adc
in
pop
or
sbb
flds
add
out
test
cmp
add
add
add
daa
frstor
add
add
add
shlb
push
sbb
or
add
add
sub
inc
push
dec
add
add
push
aam
cmpsl
xor
xchg
adc
es
outsb
cmp
xchg
sbb
lret
icebp
outsl
mov
add
add
insb
adc
scas
pop
cmc
out
mov
sbb
int
and
ljmp
add
ljmp
mov
push
add
stos
mov
fidivrl
test
nop
arpl
mov
test
dec
and
in
mov
pop
jns
xor
inc
imul
in
mov
dec
add
fbstp
cwtl
push
and
push
mov
iret
xor
loop
bound
add
inc
aaa
lret
pushf
add
test
int3
call
push
into
call
mov
xchg
scas
ss
jg
daa
adc
xchg
inc
add
lret
mov
and
add
rcl
inc
shl
pop
leave
cmp
mov
and
add
mov
adc
js
repnz
cmp
add
mov
jecxz
lahf
and
fadds
movsl
push
pushf
bound
dec
pop
jl
pop
sar
lock
sub
add
add
push
fimuls
in
mov
sub
sbb
adc
sub
or
enter
sbb
ds
inc
nop
jae
std
add
pop
cmp
xor
stos
clc
cmp
add
mov
leave
add
outsb
sbb
das
out
in
movsl
clc
jecxz
imul
rclb
in
push
cmp
pushf
cmp
sub
sahf
pop
ficoms
jb
mov
imul
xor
mov
xchg
or
xor
lcall
insb
sahf
ret
daa
jmp
int
mov
add
dec
xchg
inc
adc
jne
daa
fidivl
jne
jae
fcmovnb
dec
push
dec
mov
mov
pusha
fdivrp
adc
popa
jl
xor
mov
jnp
sub
mov
jns
scas
scas
fidivl
gs
cltd
pop
imul
xor
movsb
xor
adc
popf
movsb
cmpsb
add
jmp
int3
adc
clc
and
push
sahf
loope
pushf
jno
popf
rep
in
sbbb
lods
jno
jae
mov
insl
dec
sub
movsb
nop
jecxz
hlt
fsubrp
add
add
inc
adc
pop
xor
inc
dec
mov
mov
push
outsb
jbe
sub
sbb
fstps
add
sbb
inc
pusha
xor
hlt
xchg
pop
fcompl
sbb
dec
push
lcall
adc
mov
inc
shlb
sbb
aad
dec
push
add
add
sub
das
jg
insl
cmp
mov
dec
mov
push
push
push
push
mov
jbe
fwait
push
out
dec
pop
mov
cld
mov
testl
testl
out
cmc
arpl
add
jle
mov
addr16
std
push
lods
or
clc
je
add
ret
sti
jp
call
je
cwtl
xchg
std
sub
mov
xchg
or
add
add
pop
lahf
inc
fnstsw
or
pop
jg
add
add
addps
adc
push
pcmpgtw
add
pop
ja
icebp
cli
add
fildll
add
add
jmp
add
add
clc
ret
mov
outsb
pop
jmp
fadds
inc
inc
cmp
add
add
pop
and
in
sbbl
mov
cli
call
xor
mov
add
gs
add
call
mov
sub
imull
mov
push
add
stc
fwait
ja
imul
xchg
inc
add
cmp
jb
or
out
mov
das
and
add
mov
dec
dec
add
add
mov
std
sub
es
pop
add
push
sbb
push
xchg
add
loopne
inc
mov
jmp
adc
roll
xchg
xchg
and
add
sarb
or
xchg
stos
add
enter
add
adc
out
cmp
pop
and
jbe
cmp
xchg
loop
xchg
or
xor
jo
nop
inc
jecxz
shll
dec
adc
xchg
into
sbb
sar
or
add
xchg
mov
push
inc
lcall
lcall
and
jno
sub
ljmp
add
orb
fwait
cltd
add
add
mov
add
faddl
scas
lea
add
mov
cld
xchg
sbb
xlat
xchg
enter
add
pop
pop
jl
jl
popf
and
xor
imul
add
cvtps2pd
add
popa
popf
jl
jge
addr16
mov
icebp
ljmp
or
mov
sbb
loopne
mov
cmp
loop
data16
in
dec
inc
mov
aam
and
shrl
push
sbb
mov
mov
nop
xor
push
add
xchg
int
imul
rcll
xor
add
add
add
shlb
inc
shl
push
push
cmp
sub
mov
cmp
ja
roll
add
sbb
inc
sbb
add
push
adc
pop
and
mov
add
lret
add
or
adc
lods
add
add
pop
push
fwait
sahf
adc
push
mov
cmp
jae
dec
jns
cli
mov
adc
fadds
outsl
sub
pop
mov
cmpl
fwait
adc
pop
mov
cmpsb
jno
in
jnp
cmpsb
daa
mov
je
mov
cmp
test
inc
pop
call
inc
pop
rorb
jmp
xor
add
test
add
add
orps
cmpsl
mov
mov
mov
imul
add
xchg
dec
adc
shlb
data16
icebp
sub
add
es
push
out
ss
popa
mov
pop
or
mov
pop
out
packsswb
add
int
or
pusha
or
fscale
cwtl
push
and
mov
jle
cmp
or
hlt
lret
icebp
rol
sub
dec
add
add
stc
fstpt
into
sub
inc
or
and
sahf
and
ss
sub
mov
add
add
fwait
clc
add
xchg
dec
ret
scas
int3
cmp
adcb
imul
shll
sbb
and
or
stc
xor
bound
xchg
adc
or
jp
outsl
adc
sbb
in
xor
push
in
and
add
add
add
pop
jmp
adc
jae
add
pop
fistps
xchg
add
mov
aaa
popf
push
jp
push
add
add
pop
add
pop
mov
ss
inc
outsl
add
adc
push
mov
cld
mov
or
aaa
jmp
bound
in
add
aas
xor
lea
add
data16
hlt
add
adc
add
mov
inc
test
xor
cmp
int3
jne
js
add
out
ror
mov
add
add
cmpsb
packuswb
into
cmp
divb
xlat
and
pop
sub
push
add
add
sbb
enter
sub
adc
scas
cmp
in
pushf
cmp
orb
imul
test
push
imul
add
xor
cmp
push
loopne
mov
sub
das
xchg
sbb
or
fs
jnp
pop
shl
xchg
sarb
shr
push
pop
out
mov
inc
iret
push
jnp
jns
jne
fsubrl
cmpl
cs
mov
and
in
inc
push
out
ret
sbb
dec
fisubs
push
or
add
add
pop
js
sarb
push
mov
les
sbb
roll
and
mov
add
jo
test
mov
jmp
jp
add
add
add
arpl
xchg
or
and
ret
pushl
test
fstpl
rcrl
mov
out
fs
xor
aam
filds
sub
mov
cmc
es
lea
fcmovbe
sbb
pop
and
outsb
adc
ret
pop
mov
mov
popa
add
pushf
sbb
and
inc
sub
mov
andl
add
movq
fmul
dec
out
out
in
xchg
add
mov
orl
ret
cmc
mov
lea
cmp
push
lret
cmp
mov
inc
popf
jb
nop
xchg
pop
in
push
cli
xor
roll
insl
pop
insb
pop
arpl
mov
popf
test
jge
mov
mov
add
dec
sbb
test
or
sub
push
andb
dec
rorl
cltd
rol
pop
sti
push
sbb
loopne
push
jae
push
add
add
insl
xor
mov
sti
repz
jecxz
std
mov
add
ja
std
mov
dec
cmp
mov
add
add
insb
fisubrl
pop
xchg
xchg
xorl
mov
fisubrl
add
add
xlat
bnd
or
sbb
add
inc
clc
scas
mov
mov
out
stos
xchg
lret
andl
or
mov
add
in
sbb
repnz
mov
mov
mov
and
mov
fsub
jp
movsb
xchg
jmp
pop
pop
add
adc
add
jnp
adc
fbld
push
test
xor
add
add
adc
and
and
jbe
mov
pop
jo
pusha
cli
xchg
lahf
icebp
and
push
stos
jle
push
aam
mov
cltd
mov
add
add
mov
test
pop
inc
mov
jae
mov
pop
pusha
sbb
add
jne
xor
es
rolb
or
outsl
pop
mov
adc
test
stos
mov
pop
inc
outsb
add
cmp
test
shrl
pop
push
mov
or
out
lds
or
lcall
addr16
mov
xchg
add
add
mov
icebp
sub
sbb
xchg
or
add
cmpsb
pop
add
add
add
pushf
sub
and
dec
pop
and
add
repz
add
add
mov
je
cli
cli
test
mov
mov
push
xchg
xor
icebp
sub
test
fld
in
movsl
popa
loope
jle
lcall
jg
mov
jg
js
test
xor
setl
jno
pop
add
push
inc
inc
ffree
and
xor
cltd
lret
imul
sub
add
jae
inc
push
mov
inc
inc
cltd
loopne
outsl
cs
stc
mov
out
pusha
inc
in
out
add
mov
add
add
mov
inc
jecxz
in
xchg
adc
cld
inc
push
add
loopne
rcr
mov
std
adc
test
sub
xchg
sbb
push
add
test
sub
or
mov
push
mov
cmp
pop
lcall
add
inc
fiaddl
add
inc
adc
inc
sub
add
cmp
add
add
jns
and
cmp
rolb
add
out
add
jo
in
faddl
lcall
loop
xchg
mov
inc
inc
jmp
mov
mov
mov
ja
arpl
mov
or
add
inc
mov
fpatan
sbb
push
sbb
data16
jge
mov
clc
xchg
xlat
pop
adc
pop
add
out
test
mov
xchg
pop
loop
test
in
sti
fcoml
mov
mov
add
or
xor
loope
push
jno
and
fisttps
mov
dec
add
ss
add
add
xchg
mov
test
stc
notl
rorb
inc
test
ds
sbb
fstpl
push
outsl
add
clc
jge
mov
add
pop
sub
lods
int3
add
xchg
shlb
lea
popa
sti
enter
fadds
int3
xchg
or
add
add
out
or
scas
jae
and
sub
push
addb
lds
mov
dec
mov
enter
daa
pop
mov
sbb
and
xchg
mov
xorl
xor
imul
inc
imul
sbb
mov
loope
popa
or
pop
mov
clc
adc
adc
fdivr
test
cmp
mov
pop
and
fs
rolb
mov
add
repnz
mov
jnp
stos
sub
shrb
lcall
addr16
mov
mull
mov
xchg
add
scas
xlat
sub
xor
mov
repz
call
add
ss
stos
inc
es
jne
jns
ret
data16
push
cmp
pop
loope
stos
pushf
pop
inc
add
jbe
xor
add
sbb
add
in
lret
jo
ja
add
push
mov
xchg
arpl
insb
pop
jge
mov
test
xor
test
pop
dec
in
push
popa
dec
orb
int3
and
and
sbb
or
fwait
xor
jo
int
dec
xchg
jb
inc
loopne
pushf
xchg
movsl
out
call
add
aam
sbbl
ret
out
setp
mov
addr16
mov
sub
add
mov
aaa
pop
out
das
adc
push
mov
imul
mov
idivb
lret
sbb
movsb
push
jecxz
mov
data16
lcall
jnp
test
sarb
jo
jg
jl
fildl
add
adc
into
add
mov
stc
mov
inc
jle
stos
add
pop
cmp
sarl
dec
push
jae
jb
addb
test
add
cld
mov
leave
add
sub
bound
push
jno
sbb
aad
cmpsl
and
dec
mov
sbb
or
inc
jmp
push
sbb
add
dec
push
add
fldl
sbb
data16
mov
add
add
mov
sahf
and
jo
jp
ret
cmpsl
cmp
pop
outsl
int3
xchg
push
insl
stc
add
or
or
pop
add
add
inc
cmp
jb
sahf
fsub
xchg
push
rcr
push
rsqrtps
lcall
insb
push
sbb
iret
and
pop
jnp
cmp
add
xchg
add
out
and
add
call
add
jle
jbe
sahf
xorb
notl
pop
cmp
pop
in
pop
out
into
bound
add
movsl
cmp
add
fwait
xchg
adcl
add
cld
jbe
lods
sbb
ds
shr
jle
add
dec
cmpsl
add
pop
inc
std
gs
add
adc
add
jae
push
inc
add
dec
pop
sub
push
in
inc
or
xchg
mov
push
add
or
test
cmp
les
add
sahf
dec
ffreep
add
pop
and
cs
inc
jo
leave
les
dec
mov
add
adc
add
add
push
or
ja
cmp
add
add
in
inc
lcall
xchg
or
sbb
call
mov
sub
das
or
mov
adc
pop
lods
movsb
in
add
add
or
add
sub
movsl
adc
jae
add
outsl
jl
add
scas
pop
dec
lretw
sub
add
dec
push
push
xchg
adc
push
sbb
jnp
ljmp
call
mov
add
push
and
pop
mov
int
fbld
cltd
clc
repnz
or
sbb
pop
idivb
mov
pop
out
and
jge
cld
lea
in
stc
cld
insb
cmc
fst
lods
jge
add
sub
pop
les
mov
test
inc
adc
and
bound
lea
xchg
jle
push
fwait
aaa
add
add
jbe
in
cmpsl
cwtl
push
cmpsb
mov
or
xchg
addr16
add
add
sbbb
fwait
test
xchg
fadds
add
and
outsb
dec
inc
inc
lock
mov
lds
stos
jle
dec
cmpl
jo
test
ret
sbb
loopne
adc
insl
jp
out
movsl
add
add
lret
mov
loope
jbe
add
add
inc
loop
out
or
add
push
ljmp
push
add
movsb
sub
aas
cmp
add
push
aaa
outsl
add
inc
jno
sub
or
xor
sbbl
jne
sbb
call
ja
mov
lea
and
test
addb
mov
pop
neg
jnp
pop
and
add
nop
sbb
rcrl
movsl
cs
fidivl
iret
test
test
in
data16
jne
aad
or
ljmp
jnp
mov
addb
mov
lahf
out
mov
lods
xchg
xlat
push
cmc
loop
cmpsl
sbb
mov
xor
int
push
pop
dec
mov
les
lret
cmp
push
xchg
int
lret
ret
xchg
sbbl
xor
loopne
mov
sbb
dec
mov
dec
ds
jb
or
jnp
popa
mov
xchg
out
pushl
movsb
pop
pushf
mov
cwtl
ljmp
sub
out
lret
out
in
incb
sbb
outsb
add
cmc
call
jg
iret
out
pop
aas
jecxz
rorl
adc
mov
stos
push
cmp
shrd
mov
push
out
jbe
sbb
fldcw
mov
xlat
or
add
pushf
and
pop
xor
add
cmpsl
jg
jbe
mov
add
cltd
pop
sti
fsubrp
cmp
sub
pop
adc
cmp
sti
scas
ljmp
enter
aam
add
add
sahf
jno
pop
sbb
add
out
sub
jle
sub
loop
push
add
add
call
add
mov
jns
jecxz
add
add
lcall
add
or
hlt
jg
dec
mov
and
push
icebp
pusha
iret
pop
add
inc
jge
loope
das
push
scas
inc
sbb
mov
push
stos
jmp
pop
data16
or
sarb
lock
cld
inc
lcall
scas
inc
and
inc
loope
pop
rorl
mov
jl
ror
push
arpl
ds
push
loope
cmp
cmp
pusha
inc
or
add
pop
cmpl
sub
cmp
imul
lods
push
pop
mov
adc
stc
leave
cltd
clc
repnz
arpl
pusha
lret
pop
jecxz
incl
lods
mov
sbb
or
jbe
mov
mov
add
fsubl
jno
jp
sahf
lahf
sub
jp
mov
sahf
in
fidivl
shlb
aaa
and
frstor
ret
xchg
jo
jo
mov
nop
jbe
mov
test
xchg
stos
orl
cld
cmp
gs
repz
divl
mov
add
jnp
mov
popa
adc
push
dec
add
xchg
mov
add
cmp
cmp
mov
stos
out
mov
outsb
and
add
pushf
and
test
jno
or
aad
sub
movl
mov
cmp
scas
jl
jbe
push
lret
push
sub
add
add
mov
xor
ret
add
shl
pop
and
test
xchg
add
add
je
sarb
inc
into
outsl
add
mov
mov
sbb
popf
xor
xchg
test
or
pop
or
outsb
or
stc
cld
mov
mov
push
pop
rcrl
xchg
nop
lret
ret
mov
or
mov
frstor
je
push
push
mov
pop
or
inc
push
jno
or
xchg
push
scas
sbb
mov
pop
in
es
inc
fimuls
push
mov
add
in
xchg
pusha
push
inc
adc
in
fildll
xchg
pop
fsubs
cmp
mov
pop
sbb
jb
sbb
in
push
cs
add
add
int3
scas
in
mov
aad
push
mov
loopne
jnp
add
inc
fwait
jb
mov
sub
hlt
mov
cmc
loopne
mov
cmp
aam
roll
add
mov
enter
scas
jp
hlt
push
mov
jl
lcall
dec
sbb
icebp
dec
dec
push
xchg
mov
fisubrs
add
std
push
push
bsr
jo
cmpsl
pop
scas
add
repz
xor
mov
dec
bound
mov
sbb
sahf
pushf
adc
mov
jmp
pop
and
pop
mov
data16
and
add
add
fimull
sbb
jb
cmp
mov
mov
test
mov
movl
ret
sub
data16
mov
xor
rcrl
mov
mov
subl
sbb
xchg
shlb
stos
push
lret
inc
loopne
push
ret
js
add
iret
pop
adc
bound
lods
inc
mov
xchg
add
xor
pop
mov
jo
dec
add
jecxz
aaa
stc
mov
pushf
shl
xchg
mov
bound
push
xchg
push
je
mov
popl
dec
lret
mov
mov
leave
sbb
test
cmova
dec
sti
outsb
dec
sbbl
icebp
xchg
shlb
dec
notl
dec
in
pop
in
push
test
mov
out
mov
jbe
dec
sub
mov
xor
sbb
ds
push
stos
mov
into
imull
push
fstps
add
add
pop
out
sbb
lods
inc
dec
mov
xor
rcrl
dec
test
push
sbb
pop
scas
movaps
loop
sbbl
add
es
arpl
dec
or
aam
shrb
xor
adc
outsb
call
jnp
gs
add
pushf
stos
xchg
xchg
inc
lret
cmp
jp
rorb
int3
fnsave
add
add
add
data16
cmp
out
call
ljmp
cmc
push
addl
add
mov
jns
adc
adc
jo
add
add
andb
xchg
mov
add
add
push
addb
xchg
hlt
lea
in
jmp
inc
add
inc
lret
push
add
fnstcw
push
jge
add
out
xor
cmp
mov
mov
arpl
dec
jg
mov
xchg
aaa
mov
mov
sahf
mov
imul
xor
lods
lret
cmc
xor
jp
sbb
imul
jp
mov
xorl
loopne
cmp
or
outsl
mov
clc
xchg
cld
sbb
add
add
das
inc
push
and
in
jg
not
pop
stos
push
loop
fisubrl
call
sti
imul
sub
mov
or
jb
dec
cwtl
sarl
push
mov
testb
xor
jbe
loopne
lcall
mov
cmp
push
sub
iret
movsl
xor
mov
clc
adc
out
test
xor
adc
rol
out
lods
inc
loopne
mov
xor
xorb
pop
mov
fmuls
roll
adc
sub
je
jae,pn
adc
and
cmp
fucomp
xchg
imull
aad
repnz
sub
addl
aam
push
pushf
in
dec
push
or
mov
pop
mov
xor
cli
and
or
loopne
cld
cmc
pop
or
cmpsl
xchg
jno
das
mov
daa
xchg
adc
call
adc
add
neg
or
jbe
push
xor
jns
leave
or
xchg
ss
xorl
test
pop
popf
cmpsb
push
and
or
mov
in
lret
sbb
or
jno
mov
dec
add
and
fiadds
xor
mov
jo
pop
cs
mov
int3
cmp
add
adc
add
jo
add
xor
popa
mov
add
sub
imulb
outsb
jp
rorb
lea
das
mov
fisubrs
xor
js
bnd
fwait
ljmp
lods
fistpl
icebp
daa
adc
sub
ret
in
add
addr16
add
inc
sarb
dec
inc
sub
or
add
add
sbb
jns
movsl
or
add
add
and
push
and
mov
jp
adc
test
xchg
dec
test
and
sbb
inc
jae
sahf
mov
jge
sbb
add
xchg
xchg
add
movd
cmp
mov
clc
sbb
adc
add
or
or
scas
add
and
aad
int
lods
arpl
fcoml
fdivr
dec
int3
sub
jg
or
jns
xchg
mov
shll
setns
lret
jae
jg
mov
hlt
movb
test
jb
add
repz
ja
jnp
je
data16
movsl
dec
xchg
xor
cmc
hlt
popa
lods
mov
punpckldq
or
js
cmp
cld
sbb
insl
addr16
ret
xchg
inc
ja
cmp
pop
pop
pushf
lea
icebp
fmulp
mov
addr16
mov
add
sti
clc
push
jo
ja
mov
xchg
cmpsl
out
inc
sbb
sbb
mov
rorb
inc
dec
xor
outsl
test
jg
mov
mov
inc
jg
ret
fwait
xchg
in
dec
movntq
add
add
stc
enter
jmp
add
add
xor
outsb
and
mov
pop
push
cs
add
add
popa
push
pop
loopne
lahf
add
add
jo
mov
inc
xchg
mov
add
inc
out
shrb
outsl
add
add
or
add
add
add
sub
add
pusha
imul
add
xchg
cmp
mov
add
add
stos
add
mov
pop
daa
sbb
ljmp
subl
in
nop
push
jno
sub
mov
add
xlat
popa
xor
out
pop
mov
sahf
filds
cmp
cmp
cwtl
std
int
xor
inc
stos
sahf
cmpsb
adc
loope
cmc
ss
jbe
adc
jb
add
std
push
mov
pop
add
cmc
rolb
push
pop
cs
cmp
sbb
push
fxam
ljmp
ss
jb
pop
mov
bound
inc
ss
mov
insb
divl
into
mov
or
sub
popa
xchg
mov
xchg
adc
inc
xor
push
add
sub
mov
jg
mov
jg
push
pushf
scas
push
inc
jl
and
je
push
xorb
int3
jne
mov
arpl
xchg
dec
jp
add
mov
push
ja
mov
push
popa
outsb
push
fidivs
push
into
lcall
ja
call
push
xchg
out
fsubrl
push
xor
cmp
stos
inc
es
jne
jns
ret
mov
movsb
pop
movsb
add
add
xchg
push
mov
mov
stos
dec
shr
lcall
fwait
std
js
pusha
jp
divl
stc
fucomp
xchg
adc
pop
mov
or
sbb
out
jns
cltd
add
add
mov
dec
add
push
jne
in
add
and
or
add
lea
push
je
xor
jae
cmp
inc
push
pushf
mov
pop
jbe
push
sub
in
test
shlb
ret
pop
mov
push
inc
inc
add
cmp
dec
mov
sbb
cmp
adc
fwait
lods
ficoms
mov
mov
in
inc
xchg
cmp
jno
pop
gs
xor
lcall
notl
pushf
imull
dec
mov
cmp
add
add
add
and
mov
add
jge
mov
addb
mov
and
sub
out
add
add
jbe
test
orb
xchg
mov
aas
add
sub
push
rolb
add
sbb
popf
cli
insl
inc
inc
or
sub
out
lcall
ret
pushf
adc
and
add
jle
add
sub
push
movl
xchg
out
dec
cli
cmp
cld
sbb
add
enter
out
daa
sti
sub
jo
add
int3
mov
sub
test
mov
jmp
xchg
jae
adc
in
hlt
mov
jne
js
addb
inc
clc
hlt
xchg
push
xor
test
dec
scas
push
stc
jnp
add
lock
pop
shll
add
imul
int3
inc
aad
ret
test
add
aas
mov
addr16
add
imul
add
scas
mov
adc
and
add
or
popf
ja
mov
sub
ret
cld
in
jle
add
adc
add
cmpsl
push
mov
sub
das
sti
xor
add
add
push
xor
pusha
xor
enter
jg
inc
add
pushf
icebp
add
in
add
push
dec
icebp
dec
cmpsb
xchg
inc
adc
mulb
adc
mov
xchg
jnp
push
mov
add
insb
add
popa
adc
stos
sbb
subb
dec
fsubp
push
mov
adc
enter
mov
add
add
leave
pop
js
bound
inc
sahf
adc
add
jnp
out
psubq
imul
lea
nop
test
push
push
inc
or
mov
stc
mov
sbb
add
andl
or
test
dec
fs
or
stos
jmp
repnz
in
adc
dec
clc
je
jp
xorl
mov
pushf
jp
repnz
mov
add
ss
stos
xlat
cli
and
push
sbb
dec
into
jo
iret
push
inc
in
add
mov
test
xchg
je
addr16
add
in
cltd
hlt
cmpsl
imul
jae
mov
dec
sub
pop
sub
and
dec
jmp
add
imul
add
cmpsb
add
sarl
mov
cs
or
std
dec
lea
imul
jg
insl
cmp
xor
xchg
ds
jmp
repz
arpl
sbb
mov
cmpsb
add
add
sbb
sub
movsl
jmp
adc
sub
xorl
adc
movsl
adc
dec
scas
push
and
cmpsb
jle
xchg
jb
cmpsl
jae
sub
push
dec
sub
dec
in
stc
and
pushf
insl
lea
movsb
push
cwtl
test
clc
dec
add
push
or
add
aad
es
mov
xchg
std
add
mov
pop
ss
cltd
add
sbb
sub
add
add
push
sub
test
push
sbb
dec
xchg
add
mov
add
movb
cmc
or
inc
add
xchg
mov
add
mov
xchg
add
xchg
sub
push
jns
mov
jo
dec
push
add
into
mov
mov
dec
xchg
push
add
sbb
add
fiadds
add
es
rolb
push
out
fadds
ljmp
sub
add
fbstp
sti
add
mov
dec
add
out
jl
add
cli
adc
add
inc
pop
test
mov
repz
push
adc
jmp
add
pop
mov
or
out
pusha
cmp
and
add
nop
mov
cld
fdivrs
add
out
dec
and
mov
movsb
jae
test
sbb
rcrl
add
cmp
call
addb
pop
add
dec
loopne
outsl
jge,pt
fldcw
mov
add
jmp
pushf
enter
lret
int
shrl
and
xchg
iret
fstps
in
loop
movsl
std
jle
push
xchg
imul
add
jb
xchg
sub
aaa
into
mov
stos
and
rolb
add
add
fnsave
add
mov
negl
add
add
movsb
jg
sub
lods
xchg
and
sub
in
pop
sarl
push
xchg
sub
sahf
int3
std
push
push
add
shl
loop
add
outsl
sub
add
add
cmp
push
outsb
add
add
pop
outsb
add
xor
jnp
cmpsb
loopne
and
add
add
xchg
pop
pusha
sub
or
fs
cld
and
loopne
icebp
dec
add
add
inc
inc
ljmp
xor
mov
ja
jg
mov
mov
lahf
jno
in
dec
mov
xchg
mov
movsl
mov
push
mov
jle
jb
mov
dec
mov
inc
jno
mov
push
add
add
sbb
rcl
jle
nop
dec
push
pushf
pop
jns
push
cwtl
daa
inc
mov
or
cmp
clc
xchg
int3
xchg
ljmp
lods
pop
mov
add
xchg
fdivp
je
sbb
sub
je
sub
add
fmuls
jno
shr
xor
push
les
sub
repnz
jno
jno
adc
fbld
fistl
test
out
cmp
and
push
ret
scas
xor
xor
lret
fnsave
sbb
sbb
popf
sub
jp
in
xchg
movsl
push
gs
mov
mov
sti
insb
jne
icebp
jle
cwtl
push
xor
xchg
lgs
inc
lods
ss
out
adc
loope
inc
mov
fisubrl
mov
cmpsl
lahf
icebp
or
loope
imul
sti
pop
push
dec
sub
add
add
cmp
gs
and
add
and
mov
pop
dec
lret
test
aaa
jbe
push
imul
popf
mov
add
test
mov
test
mov
mov
sarb
and
or
jmp
test
add
addr16
cmp
leave
pop
cmp
shrb
es
mov
jns
fstpt
mov
adc
cmc
sar
inc
scas
fistl
aam
fs
pop
arpl
pop
dec
or
adc
sub
sbb
lods
or
cmpsl
xchg
ss
test
or
push
insb
cli
pop
add
js
fisubs
mov
test
jge
xchg
pushf
add
leave
test
cmp
adc
xchg
add
in
jnp
cmpsb
daa
mov
lds
push
imul
add
in
pop
ljmp
sbb
out
cmpsb
pop
jnp
lret
adc
add
call
aaa
addl
insl
ror
pop
fists
push
das
ljmp
int3
mov
cs
loop
xchg
mov
mov
add
leave
in
inc
mov
int
mov
outsb
push
sub
aaa
mov
or
mov
rolb
jle
mov
dec
add
push
cmpsl
sub
mov
js
jne
lea
pop
addr16
push
fldt
dec
push
add
add
lahf
cmp
add
mov
ljmp
dec
test
aaa
mov
lea
fildl
add
add
mov
insl
les
xchg
cmp
pop
add
adc
add
inc
mov
push
movsb
cmp
decl
adc
cmpb
cmp
mov
in
add
mov
add
movsb
clc
test
push
lods
pop
lods
fistps
mov
cwtl
outsb
and
rorb
dec
cmpsb
lea
cmpsl
loopne
pop
aad
push
mov
shrb
mov
adc
pop
sbb
imul
aas
pop
add
cmp
add
std
shl
gs
and
or
and
fwait
mov
adc
lahf
cwtl
mov
add
out
inc
into
fidivrs
cmp
add
sub
inc
inc
cs
stc
jbe
pop
sbb
mov
push
cmp
mov
test
mov
cmp
ss
lcall
jno
mov
or
arpl
insl
sbb
or
mov
imul
addl
add
add
or
pop
add
xchg
add
jnp
mov
xchg
sub
sbb
bound
push
adc
mov
lea
rcr
popf
test
in
sbb
adc
dec
dec
add
add
add
pop
loopne
pop
lds
sub
notl
add
push
in
jno
dec
test
or
push
jbe
cs
jne
cwtl
mov
call
or
fisttps
int
gs
sbb
out
lods
add
jo
or
dec
scas
push
inc
add
mov
dec
mov
lock
add
cmpsl
cli
popf
jnp
xchg
xchg
jnp
ret
iret
out
or
int
and
mov
jg
add
add
mov
fdivrl
pop
or
sbb
divb
add
add
mov
imul
mov
cmp
adc
lcall
loop
loope
sbb
out
clc
dec
cmp
daa
add
add
pop
clc
stc
and
xchg
add
test
dec
jae
leave
or
loopne
cwtl
in
loopne
arpl
add
clc
gs
imul
outsl
adc
mov
mov
add
repz
sub
add
jo
cmp
mov
enter
mov
pop
fimull
loopew
xchg
jge
leave
cltd
jb
add
add
mov
mov
ja
frstor
inc
lea
rcll
ss
stc
add
out
ficoml
xor
or
mov
inc
push
sub
adc
lea
mov
rcrl
cli
sti
dec
add
mov
push
mov
cmpsl
lcall
add
lods
inc
or
cmpsl
push
dec
sbb
pop
mov
insb
scas
inc
aaa
mov
push
pop
cmp
cmp
adc
jge
add
gs
neg
sbb
jmp
je
dec
je
fwait
jo
out
add
add
dec
xchg
cmp
cs
cld
add
mov
enter
loop
cmp
sbb
sbb
out
push
enter
mov
mov
sbb
scas
xchg
stos
push
loope
mov
xchg
loopne
push
decb
cltd
jno
imul
mov
iret
fstl
outsb
adc
pop
lock
or
add
inc
aas
cltd
mov
imul
lcall
add
fs
jge
jl
cmp
cmp
pushf
push
adcb
cmp
cmpsl
fnstcw
mov
and
xchg
push
repz
and
dec
out
add
aam
scas
cmp
mov
mov
dec
inc
push
jns
cmp
outsb
pop
add
or
push
es
stos
cmp
xor
mov
enter
sub
jge
add
adc
add
pop
mov
sahf
orl
das
adc
movsl
adc
sbb
inc
cmp
xchg
jbe
loope
lcall
fidivrl
mov
mov
loopne
mov
xor
xchg
mov
cwtl
or
into
outsb
mov
sbb
jge
xor
sbb
fistpl
in
sti
add
pop
lods
aaa
out
out
jmp
lret
aaa
clc
test
lods
push
test
lods
jnp
pop
push
sahf
lods
push
cmpb
xor
fdivl
repnz
inc
adc
lret
jnp
inc
cmp
inc
cmp
inc
es
xor
xchg
jmp
xor
mov
add
push
cli
icebp
shll
imul
fldt
xchg
insb
pop
fucomp
xchg
jg
lds
xor
fs
pop
aad
fistl
sbb
inc
rorb
ja
insb
add
push
out
mov
js
jb
or
loopne
add
test
xor
fidivs
mov
inc
add
add
icebp
lock
mov
out
popf
mov
ret
imul
imul
or
mov
enter
mov
and
jmp
test
clc
add
cmc
loope
lret
addb
sarb
setae
add
add
fildl
in
std
fcompl
insl
aas
add
test
xor
mov
in
or
dec
pop
xor
pop
dec
or
shll
jae
cmpsb
std
test
push
stos
jnp
into
or
test
mov
add
int
mov
gs
add
shlb
add
cmc
les
jne
adc
cmp
add
js
js
adc
or
add
lahf
add
cltd
mov
mov
das
pusha
add
sldt
push
add
paddw
lds
jg
pop
add
add
adc
stos
pusha
jne
mov
pop
add
movl
into
cltd
add
add
add
out
add
dec
faddl
push
rcr
pop
pop
rolb
cmp
mov
or
xor
cmc
xor
add
shll
add
ret
ret
add
push
sub
jns
xchg
add
int
add
rcll
pop
sbb
in
xchg
add
dec
add
mov
insl
add
jmp
pop
cmpl
ja
add
lods
add
jnp
cmp
sti
add
cmc
pop
add
jns
add
repnz
add
push
data16
and
out
mov
adc
add
jg
mov
add
add
add
mov
add
add
out
andb
stos
cli
scas
fsts
mov
add
fdivs
rclb
pop
dec
xchg
rcl
pop
add
add
add
lret
test
addl
sub
mov
mov
add
add
add
clc
mov
pop
test
jb
test
ljmp
rcll
sub
push
aad
mov
stos
sarb
mov
je
cmp
jg
stos
testl
sbb
fidivl
and
scas
psadbw
loopne
in
and
or
in
xchg
icebp
xchg
in
fistl
mov
pop
xchg
js
adc
pop
xchg
xlat
clc
inc
neg
pop
mov
sbb
insl
add
aaa
mov
outsb
jl
cmp
cmp
orl
add
add
add
mov
test
cld
push
cmp
mov
test
imul
inc
out
mov
jo
pop
adc
sti
push
mov
add
jge
gs
cli
jge
push
or
nop
imul
mov
push
xchg
icebp
push
arpl
dec
in
loopne
lcall
repz
int3
add
cltd
loope
popf
lock
sarb
aam
imul
lret
mov
add
cmp
xchg
stc
or
xor
ja
fisttps
fs
ljmp
ljmp
mov
jo
imul
sub
leave
notl
sbb
xchg
xor
fisubl
das
aam
enter
mov
sub
add
xchg
adc
rcrl
mov
sbb
jmp
or
mov
dec
hlt
pop
jno
pop
or
popf
cmp
stc
daa
sub
imul
pop
insl
repnz
push
mov
pop
addb
lret
push
pop
call
aas
mov
and
dec
inc
mov
pop
pop
sti
inc
mov
lods
dec
std
add
add
add
in
jl
outsb
out
sub
enter
push
cli
jmp
fists
xchg
negb
clc
push
loope
ljmp
adc
sbb
and
fisttpll
lahf
mov
aad
or
cs
shll
mov
push
insl
ret
hlt
mov
push
push
jae
xchg
jmp
sub
addr16
fmull
push
test
add
pushf
scas
mov
adc
insl
mov
xor
leave
mov
lods
adc
jle
hlt
pop
jmp
mov
lock
lds
and
lock
mov
cmp
add
add
enter
shlb
in
and
dec
cwtl
stc
adc
nop
or
jnp
sbb
subb
loop
ja
mov
data16
sub
sbb
test
add
add
sub
in
add
insl
mov
pop
xchg
aad
shll
pop
scas
mov
inc
mov
inc
pop
std
pop
repnz
or
data16
and
xor
sub
add
add
fistpl
jns
xchg
in
push
aaa
cli
push
bnd
adc
mov
insl
outsl
xchg
aam
cmp
mov
loopne
push
xlat
xor
data16
mov
cmpsb
ret
mov
add
out
jecxz
jns
sub
les
sub
mov
add
add
push
notb
fcmovu
xchg
je
jne
aaa
sub
popf
mov
stos
sbb
mov
and
out
add
stos
add
add
stc
movsb
jg
fstpl
jmp
xchg
mov
adc
sbb
mov
dec
ljmp
dec
add
inc
icebp
xchg
dec
mov
repnz
push
sbb
add
cld
test
mov
push
imul
sub
das
scas
cwtl
outsl
and
add
add
in
pop
ret
xor
pop
xchg
aad
shll
pop
scas
mov
inc
mov
pop
dec
icebp
push
mov
add
data16
inc
fnsave
adc
pop
subb
divb
inc
aaa
pop
icebp
jae
add
mov
mov
cltd
aad
lods
addl
inc
dec
int
xchg
mov
pusha
les
cmp
mov
push
out
push
mov
jl
bound
ljmp
cld
test
adc
and
mov
sti
shlb
test
cmp
stos
or
loopne
loopne
cmp
test
out
xlat
add
add
fsubr
push
stos
xchg
aad
fldenv
jnp
sbb
dec
fwait
xlat
in
loope
pop
mov
or
adc
push
add
and
mov
xor
sbb
test
repnz
cmp
fidivs
into
lcall
cmp
jmp
inc
insl
xchg
and
shrl
push
cli
push
xacquire
out
mov
test
cmp
xor
std
dec
test
out
cli
mov
add
clc
notb
jecxz
out
pusha
notl
inc
dec
ret
mov
fldenv
insl
pop
test
pop
in
mov
mov
add
add
int
add
clc
mov
push
dec
jae
mov
orb
push
icebp
xor
jbe
les
add
rorb
mov
test
imul
add
add
add
lods
add
cmp
add
add
add
add
add
fsts
add
add
add
add
add
add
add
pop
jb
add
add
add
imul
add
add
add
inc
add
mov
add
add
add
add
add
add
add
imul
push
insb
add
add
add
add
les
add
add
add
pop
test
add
out
cld
sub
xorl
test
add
lahf
add
add
add
add
add
add
test
mov
pop
fcoml
pop
hlt
push
popl
add
cli
adc
add
pop
dec
or
xor
rcrl
sub
jb
add
cmp
add
add
outsb
sbb
lea
loope
sti
mov
jmp
pusha
inc
add
inc
push
loope
pop
pop
testl
scas
and
and
add
cli
pop
test
dec
jecxz
mov
inc
add
push
jmp
sbb
mov
mov
push
into
cwtl
xchg
lret
lret
fstps
push
push
add
add
add
mov
or
fstpt
sub
test
aaa
xchg
pushf
outsl
xchg
inc
or
sti
lods
cmp
sbb
mov
fdivr
pusha
enter
in
scas
cs
ljmp
jmp
sbb
mov
lods
dec
ret
sub
lock
rcrb
mov
rclb
fcoml
repz
js
or
push
mov
out
pop
incb
add
add
add
pop
add
add
dec
add
add
add
add
add
add
daa
add
add
add
imul
loope
lret
add
add
mov
std
add
in
jo
xchg
add
add
add
add
mov
call
add
add
add
enter
cmp
movsb
add
add
das
add
jbe
out
lldt
add
add
add
add
add
adc
bound
mov
push
call
add
add
add
add
test
add
repz
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
sub
mov
mov
repz
add
add
add
in
add
add
add
add
cmpsl
add
add
xor
add
add
add
add
xor
mov
mov
add
fiadds
mov
cwtl
add
add
add
aad
jle
sub
js
xchg
add
popf
add
add
add
add
add
add
leave
cmc
scas
jnp
leave
sti
inc
gs
stos
xchg
dec
and
dec
cwtl
loop
in
ficomps
mov
mov
int3
jo
cmp
or
add
add
add
adc
gs
push
xchg
icebp
sbb
rclb
adc
outsb
pop
ret
jmp
sub
aaa
mulb
sbb
lcall
lret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
mov
add
add
out
ja
sahf
add
add
add
out
scas
add
popf
add
iret
add
add
add
jae
popf
add
stc
add
sub
lcall
mov
xor
lea
addl
cmp
mov
mov
mov
cwtl
addr16
das
das
mov
jns
mov
xor
push
les
and
pop
adc
add
mov
lea
lahf
mov
iret
fwait
mov
mov
sti
stos
std
pop
rcrb
xchg
adc
jnp
adc
add
out
fs
mov
in
dec
add
add
inc
sbb
pusha
in
pop
sbb
outsb
cmc
pop
je
mov
in
lods
jo
sub
test
mulb
ss
es
mov
xor
pop
mov
stos
mov
repz
rcrl
in
mov
stos
dec
aad
arpl
out
test
sub
aas
jno
add
icebp
adc
xchg
mov
scas
rcr
jae
cmp
stos
pop
dec
mov
mov
lcall
add
cltd
ss
test
mov
mov
cmp
ljmp
push
push
jmp
jbe
call
inc
test
or
nop
jo
iret
and
lcall
repnz
fisubrs
in
sbb
jae
adc
cs
repnz
push
adc
xlat
jbe
mov
cmpsb
cmc
mov
je
out
movsb
sbb
xchg
cmp
stc
push
loope
shr
xor
lcall
out
push
push
jnp
push
mov
out
mov
scas
push
hlt
pop
sbb
xchg
xorl
inc
lods
mov
icebp
mov
lods
lahf
add
cmpsl
out
mov
lods
dec
push
roll
in
scas
dec
cs
xor
fildl
shl
adc
dec
lods
jle
sbb
add
mov
test
lahf
je
push
lret
mov
pushl
pop
mov
mov
outsl
mov
movl
insl
es
sub
dec
sub
shrb
xchg
enter
addr16
xchg
scas
arpl
inc
dec
mov
les
jns
inc
mov
push
insl
out
add
dec
pop
mov
jns
sub
mov
sbb
xor
jae
mov
or
push
es
pop
or
cld
ja
arpl
mov
and
dec
ret
lahf
in
in
arpl
xchg
cld
fucomip
outsb
lcall
aad
jmp
sti
adc
dec
ficomps
loope
mov
push
ret
and
scas
push
je
cmp
adc
sub
xchg
xchg
jnp
das
aam
idiv
test
int3
mov
xchg
scas
xchg
push
and
gs
jg
mov
push
mov
xchg
push
notl
lret
sbb
cmp
add
insl
mov
leave
lcall
sbb
das
push
dec
sub
inc
addb
lret
mov
mov
lods
push
xor
inc
dec
mov
leave
sub
call
jo
pusha
push
dec
sbb
mov
adc
pushl
mov
push
cmp
xchg
mov
pushl
pop
jecxz
jne
mov
mov
add
add
xchg
mov
popf
xchg
adc
cmp
adc
insb
pushf
add
add
add
add
mov
add
popf
inc
test
add
gs
sbb
xchg
imul
pop
testb
sub
jae
jle
sub
add
add
lea
pop
or
add
test
lea
add
add
icebp
jbe
add
add
in
mov
add
mov
fwait
lds
add
popf
push
mov
add
add
push
sarb
dec
in
add
xchg
add
loope
add
stc
add
inc
add
sldt
push
xchg
push
pop
repz
lods
flds
xor
in
add
out
add
push
pop
dec
pushf
ret
cmpsl
add
add
push
call
add
movsb
rcrb
incb
add
into
add
test
fnstsw
int3
add
add
imulb
aaa
movsb
fiadds
add
add
ficompl
repnz
pop
add
and
jo
movl
lret
add
mov
dec
add
inc
cmpsb
jl
jb
mov
test
ds
xchg
sbb
inc
adc
rcl
cmp
scas
daa
and
sbb
or
pushf
flds
add
add
add
add
add
pop
and
add
movsb
add
add
add
xor
add
push
addl
push
add
add
add
add
loope
cmp
dec
add
xor
add
out
das
lret
dec
or
cmp
push
add
scas
mov
add
add
xchg
ds
add
subl
movsl
fisubs
add
add
add
pop
push
add
add
pop
roll
push
inc
push
pop
xchg
out
dec
add
add
add
add
add
push
mov
add
add
shrl
add
add
rcrb
add
cmp
or
add
add
and
addl
pushf
jbe
add
add
pop
mov
jne
add
add
ljmp
add
add
mov
add
jl
add
add
xlat
movb
add
add
gs
add
stc
add
add
add
add
add
cwtd
add
add
jae
rcl
add
add
inc
gs
add
add
add
add
add
sub
add
add
into
fisubrs
test
add
add
or
js
add
add
jns
add
add
out
stc
cld
sbb
popa
into
add
pusha
filds
add
add
pop
rorl
add
add
data16
add
add
add
add
add
add
add
add
add
add
push
add
mov
xor
add
mov
add
cmp
add
jno
add
add
pop
in
add
add
add
add
add
add
add
sbb
add
nop
add
add
add
xorl
into
incl
add
add
gs
xor
add
add
mov
add
add
add
testl
jg
add
add
add
cltd
jnp
add
add
jbe
add
add
add
push
add
mov
add
add
xchg
ljmp
jno
add
add
add
push
mov
add
add
add
add
add
add
test
add
add
add
subl
loop
lahf
jnp
add
add
pop
push
add
add
xchg
or
add
add
add
inc
push
pop
add
add
iret
and
aad
add
add
sub
add
add
add
lret
rolb
add
inc
int3
sub
add
cmp
sbb
push
cmpl
add
add
add
add
sti
call
add
pushf
mov
sbb
add
adc
add
es
add
incl
int3
lahf
stc
add
push
add
add
icebp
add
mov
mov
dec
das
add
inc
str
scas
stos
add
ja
loopne
push
add
mov
add
mov
add
pop
add
dec
mov
addr16
inc
add
add
rolb
out
cwtl
add
movl
jg
sti
add
adc
or
mov
mov
jnp
lds
scas
add
outsl
add
mov
add
dec
push
add
je
add
js
add
add
sbb
cmp
frstor
addl
out
test
jp
lret
add
add
insb
jnp
aas
or
mov
add
or
sub
sub
pushf
add
lock
insb
lock
adc
xchg
fisttps
pop
mov
dec
dec
fisubrl
inc
add
xchg
je
subl
jbe
sub
mov
sub
add
fiaddl
mov
dec
add
in
pop
je
pop
in
out
lea
add
mov
ds
imul
cld
and
xchg
adc
pop
or
loop
mov
add
xchg
lcall
jl
dec
xchg
inc
into
add
push
and
xchg
idivl
int
cltd
mov
jnp
push
add
aas
mov
mov
mov
add
add
stos
aam
in
pop
and
add
icebp
test
fldl
add
mov
sbb
or
es
loop
movb
insb
jnp
xor
out
push
add
rcl
punpckhwd
add
movsb
test
jp
jecxz
pop
xchg
adc
add
lock
pushl
test
pop
mov
inc
mov
and
push
gs
daa
push
imul
mov
dec
add
jmp
cmpsb
xor
mov
pop
jge
in
or
stos
fcos
adc
ficompl
jae
add
jl
mov
mov
cmc
das
add
in
dec
pop
pushf
lret
cmp
cmpl
mov
sbb
xchg
mov
adc
cmp
int3
xorb
inc
cmc
in
adc
xor
add
les
aaa
push
fcmovnbe
dec
fsubrp
adc
test
mov
xchg
addr16
repz
cmp
add
mov
leave
movsb
sbb
xchg
cmp
mov
add
aam
add
pop
in
and
cld
subb
leave
cwtl
mov
cld
inc
lcall
pop
xchg
dec
rcrl
add
aam
lods
int
adc
test
mov
or
pop
xchg
dec
pop
pusha
sti
test
add
push
jnp
cmp
add
scas
sahf
add
enter
test
jge
fadds
leave
lcall
stos
mov
inc
ret
pop
pop
push
icebp
jb
mov
loop
xchg
sub
fiaddl
movsl
mov
mov
sti
add
mov
sbb
negb
add
push
add
jb
add
mov
js,pn
xlat
add
mov
jecxz
pop
dec
jmp
or
add
xchg
xchg
adc
mov
cmpb
push
call
add
add
fadds
dec
sti
jnp
mov
mov
out
fwait
mov
jns
pop
mov
in
fidivl
mov
scas
dec
mov
add
ljmp
xor
sbb
scas
in
mov
cmpl
bound
mov
insb
loopne
pop
out
sub
push
dec
aam
push
add
or
mov
mov
inc
add
ret
xchg
sub
pop
adc
add
mov
mov
mov
dec
lret
mov
mov
cltd
out
mov
dec
add
push
push
iret
daa
jne
clc
pop
mov
add
ja
xor
xor
xor
pop
mov
mov
cli
push
fists
arpl
add
mov
mov
and
stc
add
mov
jmp
inc
ficomps
add
scas
loopne
or
cmove
lock
mov
out
add
bound
dec
stc
cmc
add
add
cld
adc
and
pop
xchg
jl
inc
sub
aam
sbb
and
add
mov
push
aam
ljmp
mov
mov
add
xchg
les
add
add
add
jne
add
add
add
fiadds
sti
add
add
aas
add
das
jo
out
add
add
add
add
jo
add
add
add
daa
cmp
sub
add
sbb
mov
add
repnz
loop
add
adc
add
sub
pusha
add
add
add
add
add
add
aam
dec
add
add
inc
add
add
add
ret
or
dec
add
add
push
stos
add
add
add
rolb
movsb
add
add
and
incb
add
dec
xor
add
jmp
add
add
add
js
add
add
faddl
add
ja
add
and
add
xor
mov
aas
sub
add
push
mov
shrb
out
add
data16
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
bound
add
lahf
add
add
add
jmp
add
dec
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
test
add
jp
add
testb
add
add
das
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
jge
add
mov
add
or
add
add
add
add
add
add
add
movl
add
mov
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
mov
add
addl
add
jecxz
add
sub
add
sub
add
mov
add
lock
add
add
add
sahf
add
test
add
insl
add
add
add
add
cmp
add
add
mov
cli
add
out
add
or
ja
and
add
add
adc
jbe
mov
sbbb
inc
pop
mov
int
jns
loope
hlt
outsb
fwait
add
add
add
fstps
in
push
lds
sub
fstpl
or
testb
sbb
xchg
add
pushf
jne
mov
jae
gs
add
add
xlat
lcall
loop
outsb
sub
stos
out
mov
jo
add
lds
xor
mov
and
out
sahf
add
push
out
pop
cltd
dec
iret
add
add
add
push
pop
xor
dec
leave
imul
mov
mov
mov
or
pop
lcall
and
fwait
aam
loop
fwait
cli
xchg
adc
pushf
pop
push
shlb
add
add
add
mov
rcrb
mov
test
cmpsl
ja
fsubrl
roll
dec
pop
add
push
icebp
add
add
pop
ss
sbb
add
add
add
add
push
add
add
add
shlb
add
add
and
add
adc
add
add
mov
add
or
add
add
add
add
add
add
jp
scas
or
add
add
mov
add
add
add
add
add
in
add
sub
cmp
and
add
mov
add
add
add
add
add
inc
scas
or
add
push
xchg
pusha
add
jle
outsl
adc
cltd
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
test
add
cmpsl
sub
je
mov
or
add
add
das
mov
lock
add
jmp
add
add
add
add
aas
add
ja
mov
mov
jp
add
add
inc
push
dec
xchg
add
add
add
out
add
jmp
jb
ficoml
add
out
add
enter
add
add
test
fwait
fwait
lret
add
ljmp
mov
add
mov
add
jg
add
in
cltd
add
lods
mov
and
int
outsl
dec
lret
cmp
add
sbb
add
inc
dec
add
dec
add
ss
add
xchg
pusha
add
fs
xchg
movb
fadd
add
mov
add
inc
icebp
add
test
add
cmp
add
mov
mov
pop
incb
add
add
add
scas
xchg
add
add
add
sbb
das
popa
xchg
add
cmp
pop
adc
add
es
add
xchg
sarb
add
mov
roll
jmp
movsb
add
mov
mov
rolb
add
lret
add
add
stos
cld
sub
jg
add
mov
add
cmp
add
add
add
add
ja
add
inc
stc
add
ffree
add
shlb
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
add
jp
add
pop
adc
add
add
xchg
mov
add
adc
add
daa
add
add
add
add
add
addb
add
add
add
sbb
add
aas
add
push
lcall
add
add
add
adcl
stos
data16
add
mov
add
pushl
movsl
ds
imul
jnp
outsb
jmp
dec
es
mov
shlb
mov
adc
push
inc
rcll
jo
dec
enter
jbe
repz
into
sbb
xor
stos
mov
or
jns
mov
ljmp
bnd
xor
loop
jge
xor
sub
inc
shlb
movsl
cltd
sbb
test
jmp
xor
shlb
sahf
fsubrs
pop
push
hlt
loopne
movsb
dec
cmc
orb
adc
mov
and
inc
lret
hlt
cmc
fimull
jne
pop
lcall
push
cmp
das
mov
aaa
jne
cs
sbb
mov
pop
ja
addr16
sub
xchg
in
add
loop
bound
out
scas
mov
insl
pop
ret
das
jns
aam
ljmp
stos
mov
in
lods
mov
ror
push
inc
sahf
add
pop
mov
pop
mov
mov
mov
imul
inc
sub
push
xlat
je
lret
fstpl
jns
jae
dec
int
scas
jns
stos
testb
push
lods
in
rcll
add
lea
shll
in
add
and
ficomps
clc
or
add
xchg
addl
test
sub
and
or
sbb
insl
push
int
arpl
clc
sub
mov
pop
dec
in
sti
dec
jae
push
mov
push
sub
inc
and
mov
pop
and
push
cmp
sub
sub
sbb
outsb
movsb
in
pusha
mov
pop
jb
bound
lds
xlat
jl
repz
pusha
push
out
out
sub
mov
stc
in
add
push
dec
push
and
cmp
outsl
xchg
or
mov
mov
adc
fwait
add
adc
dec
mov
mov
out
inc
sub
or
fistpl
jnp
shlb
shll
lods
jnp
lods
hlt
mov
ret
push
adcl
scas
xchg
and
mov
inc
lret
scas
pop
daa
popa
fucomi
push
cli
fs
stos
repnz
or
daa
loope
imul
mov
gs
es
push
movsb
pop
gs
pop
push
pop
mov
mov
push
adc
and
add
shrl
mov
jo
and
aaa
cmpsl
push
jne
aaa
hlt
aaa
dec
hlt
jno
push
sbb
shrl
pop
pop
push
ret
jae
xor
orl
or
push
sub
rolb
lds
add
xchg
sub
test
cld
icebp
data16
test
adc
or
jb
popa
lret
inc
or
dec
scas
xor
stos
lret
xchg
sub
cmp
cmc
out
ja
sbbl
mov
or
nop
jb
inc
shll
mov
data16
roll
jb
pop
call
inc
push
xchg
shrb
cmp
rcll
mov
punpckhwd
imul
cli
mov
jb
inc
insb
mov
rorb
jecxz
aaa
or
xor
mov
adc
outsb
movsb
sub
popf
dec
add
mov
mov
xor
pop
mov
jae
dec
xchg
pop
cmp
aas
cmp
or
fcoml
jbe
cmp
adc
adc
dec
or
xchg
std
add
add
int3
cmp
imul
and
jae
push
sbb
dec
imul
push
mov
test
adc
into
mov
sahf
and
out
jo
std
arpl
push
jae
fnstsw
mov
adc
or
aad
mov
fcmovu
jge
dec
sbb
clc
fnstcw
jae
pop
in
push
mov
stos
stos
es
mov
push
or
xchg
shll
mov
es
mov
cmp
subl
cmpsb
push
lret
pop
cmp
mov
incl
mov
mov
or
cli
sub
idiv
or
cmp
adc
jne
mov
pop
push
push
sub
faddl
and
jbe
nop
popa
add
mov
mov
je
or
mov
or
ret
sarl
or
sbb
dec
test
add
cmp
loopne
lock
sbb
nop
sub
loop
jl
add
mov
mov
xor
jb
jns
out
jnp
jne
lock
sti
push
movsl
sub
mov
mov
in
sbb
addr16
sbbl
cmpsl
ss
and
add
add
inc
cmp
pop
aam
mov
adc
repz
jno
push
icebp
insb
lock
aad
sub
xor
adc
jb
hlt
jge
in
movsw
mov
test
lcall
mov
mov
outsb
andb
fisubs
cld
mov
test
jmp
sub
and
cmp
jge
mov
push
rcll
push
fstpl
aaa
shrb
jl
mov
fstps
inc
jg
jno
cmp
or
or
push
lea
dec
enter
xor
dec
jle
xchg
cmc
sub
sub
imul
in
add
mov
imul
inc
jg
rorb
mov
mov
xchg
lcall
out
loope
push
imulb
loop
or
cltd
mov
adc
andl
lods
jb
cmc
ss
adc
jo
out
lret
cmc
pop
xchg
inc
cmp
cs
pop
iret
xchg
mov
add
cmc
imul
mov
jbe
outsl
xchg
mov
dec
ljmp
mov
push
andb
push
sub
pushf
sub
cmp
adc
adc
or
ss
push
loope
xor
push
fcompl
push
pop
pop
xchg
inc
or
out
push
and
mov
mov
jp
into
je
dec
mov
mov
cwtl
sub
mov
add
andb
out
jecxz
mov
cmp
popa
divl
fldcw
test
xchg
je
mov
mov
outsl
insb
das
cmp
jp
inc
jae
fcmovbe
sbb
ss
adc
ds
cmp
cmp
pusha
test
subl
sbb
ret
scas
cmp
test
sub
ds
call
cmpsb
lock
ret
in
inc
popa
sti
inc
stc
cmp
or
fistpl
mov
loopne
jb
add
or
push
jle
jp
int
jns
in
hlt
or
nop
xor
roll
lahf
sub
sub
mov
push
cmp
xchg
out
test
outsl
es
and
mov
add
fcomps
pop
fimuls
xor
bound
je
adcb
imul
inc
inc
js
insl
or
adc
test
add
incb
cltd
mov
mov
xor
sarb
mov
jne
in
cmp
and
imul
idivl
aaa
jle
inc
insl
repnz
dec
test
mov
jl
fdivrs
roll
fwait
add
out
jb
cli
push
and
bound
mov
js
inc
push
js
rolb
add
enter
push
das
mov
sti
jp
jno
lcall
mov
loop
jnp
or
sbb
mov
ss
xchg
inc
cmc
push
iret
dec
cltd
jne
mov
es
jmp
pop
popf
decb
adc
insb
pop
dec
movsb
jno
xchg
inc
test
lret
inc
or
push
jecxz
lret
lret
mov
out
in
daa
lods
jae
push
jl
xor
xor
je
sub
addl
cli
jl
lds
shrb
mov
insb
inc
nop
xchg
and
shll
mov
loopne
pushf
test
das
mov
xchg
xlat
xor
cli
mov
inc
sbb
and
cwtl
push
fs
add
pop
xchg
call
mov
mov
cmp
out
xor
push
notb
je
outsb
in
test
iret
jo
and
mov
out
cwtl
cmp
ljmp
arpl
inc
std
jle
lods
pop
jle
push
fsts
lds
jge
cli
push
fs
addr16
hlt
jl
mov
scas
out
adc
cwtl
test
outsb
add
jae
xchg
sub
int
jmp
or
add
pop
dec
test
imul
sbb
les
int3
inc
rolb
iret
sub
sbb
mov
out
xorb
jp
outsl
adc
lcall
and
sub
add
xor
add
xor
imul
jge
test
jl
in
rcl
and
inc
shrb
dec
sbb
cli
mov
es
fs
rcll
inc
scas
popf
ja
and
pop
cmp
mov
mov
addl
notl
or
arpl
movsl
and
mov
adc
jmp
lea
pop
mov
leave
loop
sub
mov
jge
push
sub
ret
xorl
add
adc
mov
daa
subb
in
pop
mov
mov
aas
push
ds
mov
pop
aas
test
pop
data16
jb
push
pop
push
add
sbb
sub
inc
roll
xchg
or
aaa
int3
pop
sub
pop
sbb
cmp
pusha
leave
push
jo
movsl
cmpsl
aas
arpl
sbb
and
jp
jge
mulb
sarl
testl
jl
hlt
xor
and
inc
out
inc
xor
mov
ss
inc
fs
pop
adc
outsb
in
or
and
jnp
nop
mull
cmp
jns
cmc
pop
insl
jno
outsb
xchg
push
test
and
add
push
jle
loope
test
dec
out
add
cmp
or
lcall
fstpl
cld
dec
int
gs
mov
jae
push
mov
inc
mov
push
adc
xchg
nop
xchg
bound
pop
mov
and
mov
dec
push
add
loope
sbb
arpl
mov
cmp
sbb
cmp
inc
leave
mov
mov
lods
jbe
addl
test
adc
fs
pop
mov
test
out
data16
loope
xor
jmp
sbb
jb
xchg
jb
cmp
fstps
mov
cmp
dec
xlat
es
test
fidivrl
es
mov
dec
mov
jae
pop
clc
fbld
pop
push
ret
mov
int3
inc
cltd
in
pushf
jb
fistl
popl
inc
pop
push
xor
loope
lock
pusha
xchg
loop
jae
les
push
inc
or
clc
adc
jle
fisttps
or
jo
mov
sub
das
mov
das
ficoms
data16
push
in
sbb
adc
enter
aas
jne
icebp
iret
ja
and
pop
aas
int
jns
mov
and
lock
hlt
loop
inc
cmpl
cmpsl
adc
mov
pop
xor
or
leave
lea
xor
lods
loope
mov
cmc
and
xchg
push
inc
gs
test
fstps
jp
arpl
mov
inc
cmp
jg
aaa
out
dec
cli
push
cmp
lock
in
xor
inc
ss
out
adc
rcl
aas
and
mov
and
dec
sub
fnsave
inc
xlat
cwtl
push
int
fcompl
xchg
in
insb
xor
mov
mov
push
orl
negb
pop
loope
mov
sbb
or
ja
lock
adcl
ret
js
popa
cli
inc
or
inc
xchg
dec
in
and
xchg
arpl
rcrl
inc
adc
ljmp
mov
sbb
jge
nop
and
jg
lret
je
cltd
sub
mov
ljmp
dec
repz
pop
push
hlt
jnp
stos
cs
pop
mov
cwtl
clc
aas
sbb
sbb
ja
mov
shlb
in
arpl
cltd
jae
push
test
and
jb
push
push
movsb
insl
or
sub
imul
into
jbe
testl
lcall
mov
popf
dec
in
scas
subb
outsb
in
and
push
jnp
xor
mov
xor
dec
int3
inc
jo
sub
inc
pusha
jl
sbb
fisttps
sbbl
in
mov
int3
pop
loope
cltd
outsl
xor
fwait
jecxz
cmc
inc
xchg
pop
xor
out
pop
jnp
pop
push
adc
pushf
add
adcl
xchg
lret
cli
cmp
out
hlt
or
inc
cli
push
pop
roll
sub
inc
xchg
and
sub
minps
pusha
jmp
daa
data16
push
cmp
out
repz
mov
mov
mov
pop
mov
cwtl
cmp
scas
inc
loop
ret
or
mov
mull
dec
and
mov
ja
imull
cs
or
outsl
rolb
sbb
sbb
push
xchg
push
pop
outsl
sub
add
dec
mov
nop
sbb
rolb
fisubrs
adc
cmp
jg
mov
and
in
rcl
lock
cs
fldcw
pop
aaa
mov
dec
cs
fsts
je
push
inc
adc
sbb
xlat
pop
inc
aas
lods
loop
inc
add
xorb
mov
mov
scas
cmpsl
adc
fisttpl
bound
pop
arpl
push
mov
mov
cs
cs
stos
dec
add
cltd
into
inc
adc
mov
movsb
outsb
adc
jbe
mov
and
inc
ret
sbb
fs
push
imul
and
mov
data16
test
push
dec
xchg
push
dec
lds
sahf
divb
inc
stos
jecxz
pusha
out
pop
rcll
mov
sbb
sarb
adc
fistl
lock
cmp
jecxz
pop
cmp
cld
stos
mov
loop
add
imul
fs
fisubrl
rcrl
mov
xchg
mov
adc
fsubrs
add
mov
aas
pop
dec
push
lds
and
inc
jl
xor
es
inc
pop
bound
lods
nop
je
sub
dec
call
aam
out
mov
faddl
sbb
inc
dec
hlt
test
lret
xchg
add
cltd
enter
mov
or
xchg
enter
mov
dec
popf
or
push
mov
pop
rcr
xchg
imul
sbb
cmp
addb
sbb
mov
mov
fistps
push
mov
pop
mov
leave
pop
jae
dec
mov
push
jae
lea
push
les
insb
aam
fsubs
mov
ud0
andl
sub
negl
xchg
inc
push
mov
in
ljmp
dec
ja
push
mov
out
inc
into
lcall
mov
pop
stc
sbb
ss
pusha
adc
sub
scas
mov
movsb
shlb
test
pop
dec
test
cmp
mov
mov
push
push
fs
cmp
rcrb
aas
fcompl
dec
jecxz
stos
orb
mov
xchg
dec
mov
sub
call
push
xchg
hlt
out
test
xlat
int3
push
lret
or
pop
or
jl
inc
lcall
movsb
shr
pop
aaa
dec
imul
xlat
push
mov
add
aad
fwait
push
sub
dec
aas
int3
sub
mov
call
adc
and
or
xor
pop
stos
clc
adc
inc
xchg
std
mov
xor
inc
sbb
imul
inc
fistpll
scas
sbb
fwait
std
mov
push
or
jge
btr
and
and
inc
insl
push
pop
addr16
scas
dec
inc
cmp
icebp
mov
repnz
xchg
push
shlb
jns
dec
xor
jbe
mov
in
pop
cmpsl
add
dec
push
ret
aas
pop
and
andl
jle
push
sub
push
adc
sub
xchg
jg
jmp
andb
lods
call
inc
dec
pop
mov
fadds
stc
jmp
mov
mov
sbb
push
sub
pop
setb
or
mov
shl
lret
loope
cltd
or
sbb
lds
pop
into
or
dec
in
jmp
bound
add
subl
cmp
xchg
lcall
cmp
inc
lods
call
repnz
clc
out
jne
popa
fimuls
inc
mov
pop
jo
mov
inc
jecxz
in
iret
or
mov
mov
paddw
fwait
pop
adc
sbb
gs
pusha
push
scas
xchg
daa
js
lods
add
gs
shl
xchg
shlb
das
repz
cmpsb
cmc
mov
dec
xor
push
pop
xchg
jl
lcall
test
push
push
fstpt
sub
ja
in
sbb
cmp
in
push
mov
fmuls
cmpsb
sub
sbbb
fwait
outsb
sub
mov
mov
sbb
loop
dec
leave
sub
mov
psubsw
cmp
xor
repnz
xor
inc
jb
aaa
xchg
sbb
adc
mov
xor
lret
dec
fisubrl
pop
dec
sub
pushf
dec
mov
pop
mov
dec
push
stos
in
and
xor
jp
addb
adc
leave
sub
jl
repz
gs
jp
push
sub
mov
cmc
pushf
jmp
pop
mov
jns
sahf
lret
pop
into
aaa
xchg
loopne
sbb
push
aam
lods
push
scas
xchg
mov
and
mov
and
add
add
fiaddl
ret
push
test
iret
xorb
dec
fisubrs
cmp
sub
in
mov
das
push
outsl
push
sub
jo
xor
fmuls
dec
hlt
outsb
insb
xor
push
adc
cmpsl
dec
rorl
sub
ss
aaa
adc
pop
add
sbb
sbb
inc
aaa
sub
pushl
imul
or
xor
cmp
or
imul
or
test
inc
jae
mov
xchg
call
adc
xchg
dec
xor
fs
sarl
dec
mov
pop
jge
pusha
pop
inc
adc
inc
je
insl
out
sbb
mov
ja
in
jl
stos
jnp
aas
xchg
adc
dec
xchg
outsb
inc
pop
lods
mov
adc
enter
mov
push
dec
ret
mov
repz
rcrl
sub
mov
clc
orl
lcall
sub
loopne
fstpt
push
cmpsb
lds
mov
cmpsb
pop
jl
pop
dec
dec
push
das
cs
sbb
daa
fcoml
std
adc
or
xchg
les
push
jge
mov
pop
imul
pop
js
and
ret
vmovaps
xor
inc
shlb
add
push
mov
mov
ss
fs
dec
fcoms
pop
and
sub
lcall
ret
jl
rclb
pop
scas
dec
call
push
lods
ss
jecxz
mov
insl
insl
in
sbb
imul
push
mov
cld
jno
dec
push
cmp
inc
mov
testb
mov
and
mov
shl
addr16
repz
lods
fsubrl
sbb
frstor
or
push
mov
pop
outsl
push
inc
cmp
sarb
sub
outsb
sub
push
push
arpl
fstps
push
call
mov
and
out
cmpsl
decb
gs
pop
and
iret
repnz
pop
push
pop
add
in
dec
cmp
stos
dec
push
lds
adc
dec
sub
inc
sub
push
adc
pusha
movsl
movsl
inc
ss
sarl
dec
inc
mov
sbb
xor
cmp
out
adc
aam
outsb
inc
push
adcb
cmp
popf
dec
xor
dec
in
jmp
dec
xchg
in
jle
out
jg
dec
sbb
mov
jp
sbb
xchg
jae
std
cmp
lds
mov
mov
inc
mov
lahf
xlat
push
sub
add
xchg
add
add
lods
fwait
mov
out
inc
fsubrp
aam
adc
mov
cli
lret
ret
rcrb
imulb
adc
mov
pushf
inc
fsts
out
scas
adc
pop
dec
push
jno
sub
xchg
mov
dec
pop
add
and
sub
xchg
mov
pushl
jb
std
jp
pop
inc
xchg
mov
inc
sub
dec
inc
pop
hlt
jl
xor
cmp
cs
scas
push
xchg
repz
sbb
push
sub
xor
mov
mov
out
jno
sahf
dec
aas
jnp
cmp
dec
out
dec
push
lds
pop
pop
adc
mov
dec
test
adc
mov
jecxz
or
dec
in
cmp
test
xchg
leave
in
aad
push
inc
jl
dec
roll
dec
cs
pop
sub
jnp
das
sbb
xor
xor
addl
push
repnz
cltd
outsl
pop
jmp
dec
test
ljmp
arpl
test
adc
and
shrl
dec
mov
jmp
and
lds
mov
push
sahf
lret
sub
jbe
das
push
sbb
mov
mov
inc
icebp
jecxz
pop
cs
cmpsl
loopne
leave
push
mov
test
sbb
fwait
out
jge
mov
aad
pop
fisubrs
pop
pop
popa
enter
push
aas
lock
mov
lds
cmp
repz
movsl
dec
pop
hlt
and
daa
pop
sub
adc
add
jno
xor
inc
cmp
pop
mov
fcomip
or
clc
js
xlat
gs
cmp
daa
mov
mov
and
adc
add
pop
out
jo
test
frndint
push
cmp
add
lahf
sbb
sbbb
add
mov
lret
cltd
push
rorb
pushf
fstps
lahf
sbb
add
shrb
test
adc
or
dec
pushf
into
inc
pop
xor
pushf
mov
fbld
fdivs
les
rolb
or
jecxz
or
imul
lcall
dec
push
ljmp
add
hlt
xchg
movsl
pop
lock
push
add
push
sahf
int3
or
mov
sbb
pop
mov
outsb
xor
int3
pop
in
pop
loopne
add
cmp
shlb
or
aam
mov
push
and
mov
dec
xor
das
adc
insb
mov
loopne
adc
scas
push
push
fstl
mov
mov
out
mov
fisttps
lret
xor
loope
arpl
add
