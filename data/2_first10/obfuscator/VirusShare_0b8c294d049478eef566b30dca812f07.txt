mov
ret
mov
ret
push
mov
push
call
movl
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
jmp
call
jmp
mov
jmp
push
call
pop
ret
mov
jmp
mov
call
sub
push
mov
push
lea
call
andl
lea
lea
mov
call
orl
lea
call
mov
xor
pop
mov
leave
ret
jmp
ret
ret
mov
call
push
push
mov
pushl
mov
push
call
andl
movl
call
mov
push
push
push
call
push
call
mov
mov
mov
pop
mov
leave
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
ret
mov
ret
mov
ret
push
mov
lea
push
pushl
pushl
call
test
jne
pushl
call
pop
inc
push
pushl
push
push
pushl
pushl
call
pushl
call
pop
ret
push
mov
sub
push
push
mov
push
lea
push
xor
push
push
call
test
je
lea
push
push
lea
push
call
test
je
lea
push
push
push
call
test
je
lea
push
push
call
mov
lea
push
lea
push
call
lea
push
push
call
lea
push
lea
push
call
push
xor
pop
lea
rep
lea
mov
stos
stos
stos
mov
movl
movl
mov
call
push
call
mov
push
call
lea
push
lea
push
push
push
push
push
push
lea
push
push
push
call
test
je
push
pushl
call
push
pushl
call
pushl
call
push
pop
jmp
call
push
call
push
call
xor
pop
pop
pop
leave
ret
jmp
push
call
mov
ret
jmp
push
pushl
call
mov
ret
jmp
push
pushl
call
mov
ret
jmp
push
pushl
call
mov
ret
jmp
push
pushl
call
mov
ret
jmp
push
pushl
call
mov
ret
push
mov
sub
push
push
push
call
mov
push
lea
push
push
call
lea
push
lea
push
push
call
xor
lea
push
push
lea
push
push
call
add
lea
push
push
push
push
push
push
push
call
mov
mov
xor
cmp
jbe
xorb
inc
cmp
jb
mov
xor
cmp
jbe
xorb
inc
cmp
jb
mov
push
call
push
push
push
mov
call
add
lea
push
push
pushl
push
push
call
lea
push
push
pushl
push
push
call
lea
push
push
lea
push
push
push
call
push
pop
lea
push
push
pushl
call
push
pushl
push
call
dec
jne
push
call
push
push
mov
push
push
call
add
lea
movb
movb
push
push
lea
push
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
test
lea
push
push
jne
call
jmp
call
lea
movb
push
lea
push
push
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
add
call
push
call
pop
pop
pop
push
push
push
mov
call
call
pushl
mov
mov
push
push
pushl
call
pushl
push
push
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
push
mov
pushl
call
test
je
push
push
push
lea
call
lea
push
neg
sbb
and
push
push
pushl
call
mov
push
call
push
mov
call
mov
lea
push
pushl
call
mov
pushl
sub
sub
inc
cltd
sub
sar
push
mov
sub
sub
inc
cltd
sub
sar
push
pushl
call
lea
call
pop
pop
jmp
mov
call
pop
leave
ret
mov
ret
push
pushl
call
ret
push
pushl
call
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
mov
mov
lea
push
ret
int3
jmp
jmp
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
jmp
jmp
jmp
push
push
call
pop
pop
ret
xor
ret
ret
jmp
jmp
pushl
pushl
pushl
pushl
call
ret
call
mov
mov
test
mov
mov
jne
push
call
pop
push
pop
ret
jmp
push
push
call
mov
ret
jmp
lea
jmp
mov
jmp
int3
int3
mov
jmp
mov
jmp
push
lock
std
std
mov
xchg
imul
daa
ret
jo
mov
rol
sub
mov
pop
test
xor
push
lahf
lods
dec
jge
mov
inc
fbld
aam
push
rolb
shll
adc
test
adc
add
ss
push
xchg
mov
imul
enter
fisttpl
pop
std
std
mov
pusha
lfs
ret
jns
inc
mov
decl
mov
pop
jb
xor
mov
jns
in
pop
dec
inc
jecxz
out
aam
pop
ret
out
frstor
adc
test
push
xchg
and
add
inc
mov
out
xor
nop
mov
int3
ret
enter
fldl
nop
ret
and
xchg
jg
or
push
out
xorl
cltd
cmp
pop
gs
enter
mov
shr
mov
add
mov
pop
stos
shll
inc
iret
insl
shll
js
test
xchg
xchg
rcl
mov
jns
outsl
push
jge
lea
gs
je
adc
push
lcall
xor
rclb
ret
popf
test
bound
pop
testl
push
jmp
jnp
and
xor
out
xor
clc
ficoml
cs
ds
sti
sub
and
addl
cmp
scas
xor
xchg
sbb
gs
adcl
push
lock
std
std
test
xchg
gs
and
fisubl
mov
rcrl
xor
add
or
jge
sub
loope
dec
inc
fldenv
add
out
aam
adc
test
and
aam
push
adcl
je
sub
mov
push
push
nop
enter
xlat
inc
adc
and
cld
jg
pop
sti
push
pop
mov
and
int3
mov
testb
sub
ja
sbb
mov
add
cmp
xchg
jns
push
jns
and
or
push
test
mov
push
stos
gs
jo
in
jno
aad
push
aam
movsb
add
aad
dec
jne
inc
in
cmpsl
sbbb
cmp
xlat
gs
cmp
push
in
dec
push
xchg
mov
outsb
push
das
fistl
and
lock
stc
and
xor
in
xor
clc
rcll
push
sarl
adc
mull
push
xlat
jl
push
cmp
je
xor
in
push
push
push
mov
adc
adc
cld
jg
push
push
and
int3
test
sti
add
pop
jecxz
gs
enter
mov
push
jmp
lods
pop
sub
push
or
mov
sub
inc
iret
fs
js
test
xchg
push
loop
mov
mov
insl
push
jl
int
adc
fs
hlt
xor
subb
xor
add
fxch
sbb
mov
cmp
dec
push
xchg
add
outsb
push
iret
rcll
sub
loopne
das
es
or
in
adc
shll
pop
mov
sub
pusha
cld
addl
cmp
je
xor
xchg
sbb
push
push
cmp
push
lock
std
std
mov
fcmovb
adc
and
sub
mov
pop
push
ss
fdivrl
popa
clc
dec
dec
push
and
aam
push
lds
loope
es
test
clc
sbb
add
mov
fs
mov
in
xchg
push
imulb
inc
ds
cmp
mov
enter
fildl
lock
std
std
mov
jae
loopne
js
mov
jge
push
pushf
mov
pop
jbe
xor
call
jbe
in
or
pusha
and
aam
push
leave
add
out
das
adc
test
or
push
add
lock
in
xchg
push
out
aam
pop
imulb
int3
mov
jmp
sbb
inc
adc
in
sbbb
jg
push
scas
push
scas
mov
and
int3
pop
cmp
jae
push
dec
pop
add
push
sub
jmp
mov
or
mov
pop
stos
xor
and
shl
call
mov
cmp
push
js
std
adcl
xor
ret
fs
loopne
cmpsl
inc
ja
leave
dec
sbb
pop
scas
cmp
push
inc
pop
dec
push
xchg
movsb
jge
push
add
adc
ret
cmp
cmp
aaa
hlt
jmp
push
ds
outsb
mull
sub
and
flds
push
push
cmp
inc
ja
je
xor
jmp
lds
xor
out
push
mov
lock
std
std
xchg
popa
sub
dec
inc
faddp
lret
sub
or
ss
push
out
mov
in
mov
cli
and
aam
pop
lds
in
shll
test
popa
outsb
stos
add
and
inc
arpl
xchg
push
lods
xor
dec
push
inc
sbb
bound
enter
aad
push
lock
std
std
mov
xchg
bound
xlat
ret
jp
inc
in
leave
pop
addr16
mov
pop
in
ss
adc
jo
in
enter
and
aam
pop
enter
aad
adc
test
popa
and
movsl
or
es
add
xchg
push
mov
test
jmp
iret
cmp
shll
dec
adc
jne
xchg
jg
pop
adcb
xor
pusha
addr16
xor
dec
or
pop
nop
pop
mov
jg
xchg
xor
jmp
lods
push
pop
mov
push
xchg
mov
fldcw
inc
iret
aam
mov
js
test
bound
rcl
mov
sbb
sbb
test
out
roll
loop
xor
xchg
adc
and
mov
rcll
mov
pop
testl
push
jp
adc
ret
cltd
xchg
mov
cmp
in
nop
pop
clc
fcoml
jle
shll
adc
divl
movb
push
cmp
inc
jo
je
xor
jmp
dec
pusha
dec
inc
adc
push
pusha
rclb
ret
add
cld
jg
or
push
mov
int3
lcall
sbb
gs
enter
cwtl
and
jmp
test
add
fildl
inc
xchg
mov
dec
iret
fst
cmp
js
test
push
push
adc
mov
push
lea
jno
sbb
adc
mov
shlb
daa
in
dec
dec
cmp
inc
sbb
sbb
mov
cwtl
and
outsb
push
sbb
adc
ret
pop
sahf
cs
popf
or
hlt
in
pop
clc
fstl
scas
sarl
sbb
xor
pusha
lds
push
push
aaa
xchg
inc
jo
je
xor
out
pop
bound
adc
push
dec
xchg
push
lock
std
std
andb
ret
jns
pop
mov
and
pushf
mov
pop
mov
mov
pop
jg
lea
mov
inc
pop
and
aam
push
int3
add
loopne
and
test
loope
sub
inc
xchg
test
out
push
add
mov
enter
loopne
jmp
adc
ret
adcl
jg
add
xor
addr16
cmpsl
cmp
add
pop
dec
pop
addl
je
cmp
call
sub
pop
xchg
sbb
inc
iret
dec
shll
js
test
repnz
mov
sti
sub
jbe
pop
add
aad
inc
jmp
sahf
shlb
and
scas
xor
jmp
ret
lea
dec
push
xchg
inc
je
push
je
adc
ret
call
orl
hlt
loop
sbb
fists
ds
sbb
testl
sub
xchg
push
push
xor
inc
jge
je
xor
sbb
add
pop
xor
loope
loopne
cmpsl
push
lock
std
std
mov
jnp
add
jge
and
int
push
cltd
adc
lret
add
je
in
cmp
sbb
pop
enter
sub
test
hlt
std
fwait
mov
xchg
push
fs
push
mov
mov
movsb
sub
xor
sbb
inc
push
lock
std
std
mov
addr16
pusha
jno
lds
leave
rcrb
sub
pushf
mov
pop
pop
ss
cltd
iret
jl
jge
stc
in
cmp
mov
aam
pop
enter
shlb
xchg
test
adc
and
mov
in
xchg
push
mulb
xchg
cld
leave
dec
out
inc
and
jmp
adc
inc
adc
pop
frndint
jg
push
sbb
xchg
and
int3
pop
cmp
add
push
pop
clc
pop
and
adc
jmp
test
push
sbb
sub
sarl
jg
and
imul
cmpb
ljmp
mov
mov
subl
sbb
insb
test
push
xor
and
add
ret
push
movsl
ret
jmp
rcl
or
mov
mov
push
xchg
and
outsb
push
pushf
rclb
das
ret
jns
add
mov
and
clc
fists
sarl
sbb
divl
sub
mov
xor
je
xor
sbb
fs
icebp
adc
push
fstpl
adc
add
cld
jg
add
and
int3
cmp
add
push
xchg
pop
gs
andl
jg
and
or
mov
or
ret
pop
mov
mov
jmp
and
jb
jnp
js
test
rolb
mov
xchg
mov
jne
ffree
adc
arpl
xor
xor
jle
ret
les
lret
mov
ret
sbb
int3
fbld
push
pop
mov
push
lahf
and
outsb
push
push
fcoms
sub
and
cmp
jmp
push
scas
shll
adc
mov
sub
cs
sbb
push
push
cmp
and
ficompl
adc
outsl
dec
loope
in
push
insl
mov
and
cmc
je
pop
cld
jg
add
push
in
test
and
int3
cmp
or
xchg
pop
jnp
gs
and
enter
ss
int3
loope
popl
add
sarl
jns
and
inc
roll
ret
js
test
adcb
mov
mov
push
jp
or
push
fsubs
ror
fldenv
gs
popa
andb
sbb
dec
mov
frstor
push
xchg
fs
push
mov
fwait
xchg
scas
daa
popf
jae
loopne
adc
ficoml
out
sarl
adc
notl
bound
sub
aad
push
aas
push
inc
jb
je
xor
in
and
adc
push
push
sti
and
in
jae
push
or
push
cmp
lods
push
repz
loopne
xchg
mov
pop
sbb
dec
cmp
rcrl
loope
rclb
pop
lods
jg
or
dec
scas
cmp
cmp
cmp
xchg
mov
jne
scas
dec
cltd
sbb
aas
and
mov
adc
mov
pop
test
pop
mov
xor
inc
into
pop
gs
jb
dec
xchg
add
mov
pop
pop
and
adc
jb
dec
sub
js
test
xor
jns
dec
mov
lods
xor
or
push
das
out
imull
les
adc
popa
or
insb
pushf
stos
adc
xchg
bound
mov
cld
lcall
ja
jl
jl
test
les
addb
ljmp
mov
mov
ds
arpl
in
add
dec
sub
repz
push
cmp
mov
pop
cld
dec
or
out
arpl
mov
dec
loope
sti
insb
jbe
dec
xchg
adc
out
loopne
std
loope
add
testl
mov
out
int
jae
sbb
lds
leave
rolb
dec
testl
scas
and
xchg
jae
adcl
sub
mov
mov
add
xchg
stc
int
mov
cmc
inc
cmpsb
fwait
pop
fisubrs
pop
and
sbb
jae
mov
int3
pop
lcall
cmp
imul
es
push
pop
adc
cltd
inc
cmp
lret
lock
inc
and
je
addr16
push
push
mov
push
scas
dec
cld
popf
loop
shl
or
xchg
sub
cmp
cmc
mov
cmpl
imul
push
jo
ret
jnp
push
clc
js
pushf
mov
xchg
or
cltd
and
leave
lods
mov
js
push
or
stos
xorl
xchg
repnz
dec
mov
imul
or
test
aad
cmp
sahf
fcomip
cld
fstl
negb
cmp
inc
icebp
lea
sub
mov
mov
cmp
push
cwtl
cmp
lea
out
nop
adc
sbb
or
xor
adc
cmp
lods
mov
arpl
outsl
fwait
adc
mov
xchg
je
push
scas
lock
mov
sbb
test
cli
push
mov
out
outsl
fisubs
sbb
pushf
mov
sbb
sbbb
adc
enter
dec
xor
jb
lret
cmp
or
int
repnz
pop
jp
and
mov
add
cmp
aaa
push
hlt
sbb
es
bound
cli
jecxz
enter
dec
out
inc
dec
adc
clc
mov
insl
pop
ret
xor
cmpsl
les
imul
cmp
cmpsl
scas
sub
aam
inc
push
inc
cwtl
ret
cmp
xlat
cmpsl
or
and
aas
pop
push
mov
into
shlb
outsl
mov
xor
dec
cmp
pop
mov
inc
int
mov
pop
dec
jnp
inc
cltd
stos
idiv
mov
cmp
scas
xchg
das
dec
aaa
pop
fsave
stc
add
dec
popa
enter
mov
push
leave
in
addb
shrb
shlb
dec
mov
pusha
sub
jmp
mov
jbe
dec
or
adc
mov
push
es
test
in
and
inc
imul
lret
inc
cmp
out
cmp
mov
cmp
je
shlb
arpl
pop
pop
aad
jne
out
cmp
jae
js
in
mov
out
mov
jmp
adc
notb
pop
call
lods
enter
push
xor
sbb
pushl
decl
iret
lods
xchg
jbe
insb
test
or
jl
xacquire
xchg
mov
scas
jbe
shrb
cwtl
xchg
jno
mov
movsb
jb
push
fnstsw
.byte
pop
