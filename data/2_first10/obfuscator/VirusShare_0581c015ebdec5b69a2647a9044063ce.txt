dec
inc
push
dec
pop
push
xchg
pusha
call
pop
mov
add
add
mov
mov
add
shr
je
mov
xor
sub
stos
rcl
loop
cmp
je
add
add
jmp
popa
pop
cltd
sarb
mov
pusha
pop
pop
sbb
and
jg
pop
jmp
enter
pop
and
or
dec
sub
and
es
lret
pop
adc
lahf
xor
cs
aas
decb
sbb
in
or
imul
xchg
jne
pop
push
fmulp
mov
clc
pop
and
jb
sbb
push
add
bound
add
subb
pushf
sub
sub
add
repnz
dec
lret
roll
add
add
pushf
push
test
mov
and
dec
jo
push
out
cltd
dec
push
jmp
and
ja
lahf
inc
loopne
in
scas
pop
mov
sub
ret
dec
dec
adc
mov
push
or
add
test
repz
sbb
pop
sub
rolb
in
test
push
add
or
sub
fstl
call
dec
mov
fs
mov
leave
test
push
mov
mov
adc
icebp
lea
cld
mov
or
sbb
add
rorl
cmp
add
fcmovb
ret
add
sub
cld
pop
out
push
out
jecxz
xchg
outsl
dec
fbstp
sti
adc
into
mov
jp
out
test
jle
xor
in
push
and
stos
icebp
dec
dec
lods
sub
cmp
mov
fstp
pushf
push
xchg
mov
xlat
popa
and
pop
xchg
add
jne
inc
outsl
lcall
cwtl
imul
leave
mov
orb
fsubl
fnstsw
jp
push
add
pop
sahf
stc
jb
adc
les
loope
sub
cwtl
fcmovnb
sbb
push
or
mov
out
xchg
mov
leave
jnp
repz
and
fstps
push
in
and
in
jle
in
int
pop
push
cmp
out
or
push
lock
cmpsb
sti
add
mulb
mov
fdivrs
lcall
bound
push
dec
xchg
mov
xchg
rcl
roll
mov
push
in
je
sbb
jge
mov
inc
popf
enter
push
rcl
push
pmaxub
movsl
mov
movsb
data16
popf
movsl
dec
pop
lahf
lahf
pop
push
out
inc
mov
mov
jp
fs
cs
shr
pusha
jl,pn
jmp
movsb
cmc
inc
sub
and
mov
and
hlt
fadds
out
dec
inc
adc
mov
or
dec
xlat
mov
mov
jmp
ret
in
fstpt
xorl
arpl
fstpt
push
jb
and
push
fldt
xchg
and
call
xorb
shll
repnz
xor
push
jle
call
push
ret
inc
divl
push
and
lea
mov
je
lcall
add
add
cwtl
lret
adc
hlt
adc
sbb
jmp
leave
or
insb
mov
dec
nop
pop
cmpsl
loop
pop
push
and
cmpsl
mov
std
pop
jnp
jno
outsl
lds
pop
pop
incb
iret
frstor
or
xchg
add
adc
inc
addr16
xchg
mov
leave
nop
lret
test
sbb
test
or
lret
or
jo
sub
into
in
push
xchg
mov
dec
jle
mov
mov
pop
fdivrl
sbbb
adc
lcall
inc
inc
movsl
push
stos
or
scas
mov
mov
or
mov
ret
stc
test
ss
in
push
and
or
popf
pushf
imul
xor
xchg
adc
pop
mov
andl
mov
push
jae
xor
in
pop
xor
jae
fs
nop
mov
jecxz
jo
mov
mov
lahf
test
and
mov
cwtl
add
cld
jnp
imul
repz
mov
and
dec
xor
cmp
dec
mov
dec
pop
popa
out
mov
insb
or
inc
xor
fs
adc
mov
imul
cmp
loopne
pslld
lods
mov
xchg
lcall
outsl
es
cmpsb
sub
loop
adc
push
testb
outsl
mov
mov
mov
dec
in
scas
fbld
test
add
cs
lahf
sbb
and
lock
mov
icebp
dec
call
pop
int3
xorl
ljmp
repz
mov
lods
mov
jno,pn
sub
or
inc
dec
or
aas
sub
jmp
jecxz
insl
in
fs
lret
jl
dec
xor
shlb
rcll
jmp
sbb
sbb
pop
inc
ret
dec
inc
xlat
jns
lea
in
jbe
jle
js
cmp
jno
popf
arpl
mov
out
and
mov
scas
mov
loopne
dec
xor
ucomiss
push
inc
das
sub
mov
mov
orl
iret
pop
mov
jecxz
inc
xchg
cltd
add
add
out
arpl
mov
adc
scas
outsl
pop
add
push
mov
cld
mov
mov
cmpsb
push
stc
pop
and
xchg
push
mov
sbb
rclb
lret
xchg
inc
add
push
push
lret
mov
lds
cmp
pop
jnp
dec
xlat
movsl
adc
int
fsubp
fnsave
lods
xor
cld
movsb
nop
lret
xor
les
and
push
adc
push
push
push
clc
pop
out
insl
test
pusha
inc
fldcw
subl
bound
jmp
jg
scas
insb
in
movsb
xchg
sbb
push
data16
push
leave
fldl2e
xor
lret
ja
push
outsb
ljmp
mov
dec
or
xchg
test
adc
jae
inc
call
add
popl
push
stc
stos
fs
xchg
mov
fisttpl
push
mov
stos
fnstsw
sub
mov
xchg
ficoml
in
fdivl
xor
jno
mov
dec
xchg
mov
dec
add
loop
mov
aaa
lds
lret
fcomps
ljmp
dec
repnz
jnp
dec
mov
jp
incb
ja
cli
mov
idivl
push
cmp
inc
push
sbb
addr16
inc
pusha
mov
adc
and
int3
sbb
cmpsl
push
es
gs
lock
adc
add
sar
enter
fistpl
or
lds
adc
push
test
push
into
nop
mov
mov
xor
andl
jnp
mov
xchg
data16
sub
mov
ret
stos
fimuls
push
push
inc
dec
cld
jo
ret
push
into
mov
scas
push
inc
out
mov
dec
push
inc
stos
cwtl
xor
inc
ja
push
out
xchg
inc
dec
fnsave
bound
sarl
in
mov
jl
dec
jle
push
push
pop
mov
push
or
repnz
inc
sub
daa
fmull
lcall
push
xor
xlat
dec
mov
mov
arpl
push
cwtl
xchg
mov
mov
push
fisubrs
pushf
mov
xchg
mov
xchg
outsb
not
and
sar
aad
bound
clc
daa
test
mov
jp
arpl
dec
push
movsb
sub
cmc
fsts
iret
pcmpgtb
jo
xlat
cmc
sahf
mov
popa
shrb
iret
cli
adc
stos
out
mov
pop
shr
es
jl
in
push
or
xchg
dec
inc
adc
jecxz
sub
or
fucomi
push
ficoms
jle
push
out
cmp
jg
inc
and
and
popa
data16
mov
fwait
pop
testl
mov
frstor
sbb
sbb
and
sti
jge
js
fldl
mov
xchg
imul
addl
stos
dec
ret
dec
test
jo
loope
repnz
mov
dec
push
sub
test
in
xchg
jecxz
dec
aaa
subb
xor
data16
inc
fnstenv
sbb
pop
movsl
mov
and
mov
push
icebp
jg
imul
sahf
test
inc
adc
jnp
jnp
neg
dec
push
pop
sbb
pop
push
orl
subb
bnd
mov
xchg
cltd
lods
push
jg
mov
xchg
cli
push
mov
out
pushf
imul
jg
pop
mov
sbb
test
incb
rol
cmpb
jbe
add
or
insl
imul
sbb
lods
mov
lret
in
loop
out
imul
xor
inc
pusha
rcrl
andb
aaa
mov
sub
rcl
loop
xchg
pop
push
inc
or
clc
and
shlb
inc
mov
stos
push
mov
inc
cmp
fnstcw
dec
gs
lahf
add
jb
jnp
bound
into
ficoms
imul
fs
repz
mov
clc
mov
pop
scas
jne
cli
push
pop
call
cmpsb
into
call
push
ljmpw
inc
lds
xchg
cmp
stos
psrlw
mov
shlb
xchg
push
sbb
xor
loop
mov
mov
pop
inc
or
outsl
cmp
je
dec
lahf
fsubr
mov
into
jno
pop
int
and
xor
xor
aad
or
pop
pop
sbb
rcrl
popa
jl
lret
jmp
out
repnz
push
adc
movsl
push
sub
jno
call
jno
mov
adc
adc
movsl
aad
dec
sbb
dec
mov
mov
icebp
cmp
and
adc
inc
fst
xor
jne
add
pop
jbe
loop
loope
add
xchg
push
pop
stc
push
test
or
in
hlt
js
lcall
scas
call
lahf
push
mov
mov
mov
adc
jmp
andl
outsl
mov
popf
push
dec
std
aad
mov
jmp
pushf
inc
scas
push
xchg
push
ret
sub
nop
xchg
xchg
push
push
and
mov
xchg
pushf
dec
mov
repnz
lahf
subl
aaa
mov
in
jmp
sub
push
mov
seta
outsl
pop
sahf
push
mov
mov
imul
idivl
inc
and
and
std
jbe
loope
repnz
mov
ljmp
dec
mov
das
lret
scas
jge
stos
movsb
pushf
xchg
adc
insl
fistpll
add
sbb
mov
sbb
test
mov
pusha
pusha
xchg
jmp
movsb
push
inc
dec
lcall
ljmp
sbb
inc
jl
mov
jp
lods
sub
pusha
out
sbb
dec
fdivp
pop
xchg
mov
es
imull
fsubs
or
mov
inc
shrl
pop
movsl
lahf
dec
sub
add
hlt
sarl
loope
jmp
mov
aas
jbe
adc
movsb
mov
and
push
mov
cmpsb
jl
iret
add
pmullw
arpl
sbb
cmp
dec
adc
call
arpl
cwtl
dec
mov
sbb
jno
or
shll
xorb
hlt
push
pop
cmc
adc
fdiv
cli
cld
jno
in
rcrl
adc
mov
adc
jle
loop
or
mov
xchg
inc
insl
shlb
mov
xchg
xchg
ficomps
or
xor
lds
gs
int3
fmull
pop
mov
add
jb
or
sub
das
fimuls
shll
ret
inc
les
adc
sub
sbbb
mov
xchg
out
scas
xchg
clc
sub
dec
inc
mov
jnp
inc
mul
jae
mov
dec
rcrb
stos
aam
mov
scas
and
popa
fisubrs
repz
ds
loop
je
in
int3
into
andb
or
adc
sub
fidivs
pop
push
add
fmuls
outsl
mov
mov
test
push
add
mov
fsubrl
mov
xchg
fdivrl
lea
das
mov
rorb
cmp
scas
xchg
sbb
jl
jecxz
pop
in
shr
ss
xor
test
xor
sahf
add
outsl
mov
int3
dec
sbb
mov
leave
rol
inc
repnz
aas
jl
cli
adc
jbe
fldt
in
ja
add
scas
sub
xor
not
sti
in
int3
xor
clc
mov
dec
xchg
fidivl
in
ret
mov
int3
jo
mov
cld
lea
sbb
sbb
sub
sbb
jns
xchg
jecxz
les
jbe
aam
imul
jbe
lret
sbb
mov
aaa
or
test
outsl
test
ja
push
das
mov
out
xchg
cwtl
sbb
fnstsw
rorb
aaa
sub
subl
shll
push
loope
pop
inc
out
loopne
cltd
ret
arpl
lods
cld
je
test
pop
out
rcl
mov
scas
test
xlat
sub
sbb
mov
cli
leave
test
jns
mov
in
iret
scas
test
push
sbb
jmp
pop
push
scas
mov
mov
pop
daa
sti
test
ljmp
xor
adc
int
subb
mov
xchg
push
push
inc
cmpb
aad
add
pop
pop
or
iret
or
hlt
mov
repnz
lds
addl
jae
mov
or
int
in
outsb
add
xchg
not
daa
inc
jle
add
mov
inc
mov
rcrl
in
lret
xchg
or
loop
ja
test
mov
xchg
mov
mov
mov
pop
idiv
inc
repz
pop
data16
push
movsl
inc
cmp
lret
dec
bound
push
lods
pop
jle
repz
movsb
dec
enter
xor
or
out
cmp
xchg
jbe
lretw
cmp
mov
xor
loope
xor
cmpsb
test
xchg
es
cmp
sbb
pushf
insl
in
jle
push
stos
xor
and
cld
cmp
jno,pn
adc
push
pop
add
cmp
jge
xchg
and
push
add
adcb
and
cs
sub
stc
stos
imul
das
int3
aad
cmp
out
and
stos
push
out
das
movsb
and
jo
push
sbb
mov
sbb
jne
arpl
gs
sub
and
lods
pop
cmpsl
cmp
pop
sub
dec
inc
mov
or
sarb
inc
pop
add
dec
mov
sahf
movsl
lea
cltd
dec
mov
ljmp
in
and
cmp
rorl
push
jo
out
mov
call
inc
xchg
test
or
dec
stc
mov
fwait
inc
sbb
push
jmp
xor
xor
out
lret
sub
ja
cmp
add
imul
mov
in
inc
dec
sbb
fimuls
mov
dec
mov
jl
stos
out
xor
icebp
mov
imul
xor
cmp
scas
loopne
jg
dec
js
add
leave
sbb
pop
adc
xor
sahf
ret
rclb
out
out
test
shlb
pop
fwait
sub
or
test
mov
adc
fs
dec
pop
loope
sahf
insb
std
jle
mov
daa
ss
mov
mov
or
gs
out
repnz
test
inc
sbb
int3
lds
adc
jae
cmpsl
in
jmp
or
push
int3
mov
mov
fwait
inc
daa
xor
movsl
mov
pop
jne
lds
or
lds
fdiv
repnz
push
mov
aas
cmp
mov
test
icebp
into
in
mov
je
andl
and
les
mov
mov
add
cmp
icebp
mov
sbb
fstps
cmp
jge
mov
xchg
add
shll
add
lods
mov
outsl
push
pop
xor
fisubl
pop
xchg
or
out
xor
pop
inc
or
xor
dec
add
jb
adc
mov
sub
pushf
test
inc
xor
pop
shlb
ds
divl
pop
sbb
pop
ror
xchg
popf
jbe
xorb
fnstcw
dec
outsl
cmp
out
jbe
out
push
push
es
int
jg
adcl
push
jns
push
lock
sbb
pop
outsl
xchg
out
mov
pusha
aas
fdivrs
inc
cwtl
js
stc
dec
ds
push
adc
fists
scas
xor
out
jns
push
inc
pop
jge
sbb
arpl
sbb
xor
jmp
out
arpl
jb
mov
pop
test
call
and
add
daa
mov
fiadds
loope
xchg
es
add
outsl
cmc
aas
or
mov
sub
push
add
fidivrs
sub
negb
cs
mov
jo
add
aaa
mov
push
aas
je
aad
and
fsubrl
test
fisubrl
lahf
sub
xchg
pop
inc
pop
adc
mov
add
leave
out
inc
dec
jnp
push
sbb
or
push
jmp
fdiv
andl
mov
leave
mov
lods
cmpsl
cld
fsubr
xor
or
xchg
mov
pushf
movsl
xor
pop
mov
jo
pop
push
mov
mov
sub
push
leave
stos
testb
jo
sub
adcb
jae
add
push
sbb
popl
mov
ficoms
lds
jns
xor
hlt
mov
scas
daa
ja
and
comiss
ljmp
jo
repz
fwait
rclb
sbb
bound
pop
xchg
daa
das
sbb
lret
xor
mov
sbb
pop
sub
rorb
pushf
es
xchg
in
push
mov
mov
scas
iret
or
xchg
adc
inc
lret
fsubs
cmpb
stos
cs
test
inc
in
dec
subl
cmc
mov
aas
cmp
enter
push
xchg
mov
cltd
test
pop
xorl
cmp
test
repz
fbld
xchg
dec
pop
sti
in
xchg
sti
jecxz
adc
xor
test
ds
int
and
filds
or
movsl
cs
push
inc
aad
or
in
idivb
mov
push
jp
xchg
and
sbb
in
lods
lahf
lret
aaa
push
shll
test
cltd
sar
xchg
jmp
adc
adc
adc
push
cltd
xor
rcl
adc
jns
out
mov
ss
lret
jo
add
mov
pop
aam
mov
mov
leave
jmp
push
cwtl
jae
inc
mov
mov
pop
les
jmp
rolb
popf
ja
mov
test
lret
out
int3
pop
and
jecxz
xor
js
inc
mov
fsubrs
dec
clc
arpl
iret
mov
bound
dec
inc
jae
popf
pop
dec
lret
cmp
sub
iret
jmp
test
pop
mov
es
popf
mov
mov
mov
mov
add
or
movsb
rcl
arpl
cmp
cmpsb
inc
and
xor
pop
out
and
in
sbb
scas
repnz
add
test
sbb
sub
xchg
aas
dec
jge
std
test
sub
fldcw
idiv
push
insl
test
test
dec
ja
fistl
sub
inc
inc
push
push
xchg
les
test
fwait
xlat
add
sbb
stos
leave
jle
sbb
sbb
scas
xchg
loopne
into
mov
mov
stc
lea
pop
or
fldenv
rcrb
jae
fnsave
ja
sbb
jne
ret
les
out
nop
scas
lea
shll
sub
dec
push
int3
cmp
push
cmp
xor
pop
push
stc
jl
mov
jmp
push
xor
cld
cmpl
inc
jae
pop
nop
imul
cli
sbb
pop
mov
iret
sub
or
shll
dec
mov
cmp
lret
xchg
xchg
lock
jae
call
push
int3
clc
xor
out
shl
pushf
cmp
jns
ret
mov
xor
scas
shlb
fiaddl
cmp
in
push
adc
decl
int3
insb
cmp
repnz
ss
fstl
push
imul
add
es
lea
mov
mov
push
sbb
cmp
das
hlt
stos
ja
int3
and
cmp
imull
sub
pop
xlat
mov
inc
mov
and
cs
call
and
mov
ds
shl
mov
gs
repnz
cmp
icebp
cmp
sahf
imul
mov
loop
stos
je
adc
lret
lock
xchg
push
orb
mov
pop
xchg
jecxz
lcall
inc
addb
fidivrl
xchg
call
lret
push
rcll
addr16
mov
jns
insl
mov
pop
into
je
adc
neg
leave
orl
sbb
icebp
jg
adc
scas
loopne
xchg
jecxz
cmc
fimull
ret
add
push
shrb
fcomi
xchg
je
inc
sub
out
pushf
std
mov
pusha
test
call
and
add
cmpl
out
fistps
gs
mov
outsb
data16
xor
sbb
jl
mov
lahf
sub
inc
je
icebp
pop
xchg
outsb
es
jb
pop
test
inc
outsb
ss
and
popf
ja
es
std
cmc
pop
lods
xchg
pusha
es
adc
imul
lock
fcoms
fadds
lock
loope
cmp
aam
data16
mov
fprem1
test
dec
pop
mov
xor
add
icebp
jno
mov
outsb
pop
and
mov
enter
mov
xor
shrb
cli
xor
stos
popa
push
pop
enter
adc
xlat
xor
shlb
in
xor
pop
inc
push
stos
adc
jl
addb
dec
into
xchg
pop
sbb
inc
daa
mov
daa
inc
lods
push
fidivrl
int3
cmp
dec
call
testb
sub
mov
xlat
gs
cmpsl
popf
add
bound
ljmp
inc
mov
dec
mov
popa
add
stc
add
popl
sub
bound
es
pop
dec
sbb
or
dec
fmuls
cmp
fs
adc
outsl
das
loop
fcmovnbe
sqrtps
cmp
pop
xor
pusha
movhps
push
test
ja
mov
sbb
mov
out
mov
nop
add
lcall
jg
lea
out
sbb
dec
sub
loopne
pop
add
scas
loope
mov
in
jns
jbe
and
gs
out
inc
cs
adcb
outsl
xor
rcl
sbb
outsl
lea
subb
or
mov
dec
mov
repnz
inc
sbb
pop
xor
int
cmova
cmp
ljmp
xor
cs
leave
orb
cs
idivl
mul
and
xchg
jo
xor
sub
jno
scas
into
pop
movsl
push
pop
xchg
pushf
popf
shld
and
nop
int3
inc
pop
lods
inc
sub
and
mov
mov
decl
cmp
mov
insl
push
jo
mov
cld
xor
pop
leave
js
leave
je
jb
mov
ja
jnp
aas
xchg
aas
pop
aas
loope
cmp
sub
popa
js
xchg
sahf
xchg
repnz
sub
test
test
mov
into
les
and
or
push
sbb
movsl
sub
enter
std
pop
inc
dec
addr16
iret
popf
dec
call
pop
dec
xor
sbb
cs
push
xor
sarb
push
fsubs
mul
outsb
xchg
pop
sub
fs
unpcklps
mov
push
mov
ss
cli
jns
fidivrl
mov
seta
clc
mov
repnz
mov
ss
loope
fidivl
cmp
push
sub
bound
stos
mov
cmp
mov
js
push
mov
int3
dec
out
dec
nop
or
scas
pop
fcmovnu
add
mov
and
mov
out
movsl
lret
std
sub
and
or
shlb
and
roll
jno
sbb
adc
test
xchg
aam
jns
and
inc
jo
pop
pop
xor
cli
lock
dec
sbb
sub
jns
in
call
push
xchg
mov
iret
xchg
xchg
pushf
jmp
xor
mov
sbb
inc
or
sub
xchg
add
scas
adc
fs
imul
adc
pop
cmp
out
and
fisubrs
out
rcll
sub
and
ljmp
cmp
loopne
sbb
scas
mov
mov
mov
test
ja
pop
das
cli
outsb
lcall
clc
xchg
or
dec
and
mov
cmp
xchg
or
jl
arpl
in
adc
rcll
jnp
push
shr
inc
pop
cmpsl
movsb
inc
dec
aaa
adc
mov
gs
jnp
pop
inc
mov
daa
inc
sbb
arpl
inc
dec
int
xchg
cli
add
outsl
jl
imul
pop
outsl
adc
push
icebp
in
repz
js
leave
pop
jl
dec
add
sbb
jmp
popf
mov
fwait
jmp
and
inc
mov
pop
push
push
pusha
ret
dec
jno
stos
notb
xchg
and
sub
xchg
sbbl
lods
adc
adc
mov
aad
popf
mov
adc
je
aad
lock
mov
add
stc
add
pop
xor
les
xchg
stos
xchg
push
add
push
push
cmp
adc
jle
movsb
xor
mov
je
orl
stos
lea
popf
jmp
rcr
cmp
ffreep
test
test
jo
and
stos
pop
insb
ss
pop
stc
shll
shl
or
cmp
pop
jmp
loopne
jno
mov
hlt
adc
das
mov
push
addb
add
std
or
ret
mov
jmp
cmp
dec
mov
lahf
push
out
cmc
cli
fcmove
mov
out
cmp
fwait
mov
cmpsl
jae
jge
movsl
aaa
adc
xorb
push
xor
jns
subb
add
sti
fdivrp
mov
arpl
js
and
cmp
gs
sti
sbb
aaa
dec
xlat
pop
rorb
ljmp
xor
or
jns
add
cmp
sub
sub
das
out
dec
push
out
xchg
shl
std
pop
jge
xor
mov
pop
ror
mov
in
dec
add
xchg
out
push
negb
pop
mov
push
ret
aad
cmp
or
ds
sub
sub
pop
out
mov
inc
fwait
nop
popf
or
jle
inc
ss
aam
lcall
fcom
jns
pop
sub
jp
fcompl
adc
aad
popa
mov
mov
push
xor
sbb
daa
lea
pop
and
mov
das
fmulp
ss
jb
jmp
test
jmp
jmp
adc
fisubrl
test
push
mov
clc
fistl
dec
pop
mov
lcall
pop
mov
cs
mov
push
aas
jle
lcall
fstpl
sahf
sub
xchg
sbb
mov
mov
or
fsubl
mov
xchg
popa
cmpsb
sub
push
ljmp
cwtl
cli
or
mov
lods
loop
or
lods
stos
mov
sbb
sbb
lea
ficomps
dec
add
addr16
jo
push
adc
orl
jnp
fsubs
aas
aaa
fcomps
adc
fsubp
sub
cmp
test
or
mov
jnp
sub
dec
sub
push
insb
xor
push
mov
loop
inc
sbb
mov
mov
jb
jae
push
and
sbb
xlat
iret
movsb
mov
lock
push
xchg
icebp
test
sub
pop
andb
lds
sub
xor
cmp
jecxz
xchg
into
movsb
insl
mov
repnz
or
push
mov
mov
jge
xor
cmc
jne,pt
ss
xlat
imul
sbb
pushf
cli
in
ss
pop
mov
add
sbb
cmpsb
dec
jle
and
mov
lea
jmp
xor
adc
adc
xchg
mov
sbb
add
pop
mov
xor
test
sbb
jno
hlt
add
decb
pop
shlb
repz
adc
icebp
jmp
outsl
insb
in
cli
push
xor
inc
aam
sbb
xchg
and
andb
adc
cmpsl
push
int
shl
aam
adc
fld
sub
or
xchg
dec
push
add
dec
mov
pop
or
push
in
mov
ds
mov
lds
fcoml
or
mov
xor
stos
je
xor
imul
sub
out
dec
sbb
push
es
insl
lcall
mov
gs
cmpsb
cltd
xor
ds
imul
mov
int3
out
inc
daa
add
xchg
clc
jmp
frstor
imul
es
hlt
sub
cli
mov
and
repnz
jbe
out
dec
sbb
jg
stos
mov
lcall
or
je
mov
mov
nop
dec
mov
jge
mov
cmp
imul
mov
adc
or
jbe
push
cmp
aam
adc
leave
in
push
or
push
push
jg
lods
outsl
insl
stos
mov
test
xchg
sbb
sbb
push
into
sub
or
xchg
mov
pop
into
das
sahf
mov
ret
xchg
aam
mov
ss
dec
idivl
movsl
leave
leave
mov
out
ss
outsl
pop
popf
lahf
cltd
push
rorb
sahf
fsubs
imul
stc
xor
mov
ret
imul
sub
jg
mov
sarb
pop
mov
jne
in
int
pop
cltd
je
lock
push
mov
mov
sub
add
xchg
jno
xor
pop
out
ds
and
jg
out
and
ss
cmpsb
fcmovnu
adc
clc
ret
pusha
iret
push
xlat
movsb
faddl
shr
jle
jl
sub
rorl
xor
in
movsl
fucomp
iret
jmp
in
xchg
sbb
popa
lock
and
cmpsl
mov
lods
adc
cmpsl
aaa
jb
jo
lcall
inc
lods
dec
clc
insb
stos
or
rcl
sbbl
mov
xchg
jp
addr16
inc
outsl
jb
scas
es
test
arpl
or
outsl
jge
and
lret
jb
dec
adc
inc
dec
lret
fs
repz
cmp
cmp
aam
inc
jo
in
jb
out
sub
pop
sbb
sub
enter
rcll
pusha
xchg
fimull
cmp
adc
xchg
adc
arpl
mov
inc
push
sub
in
or
and
inc
loopne
sbbl
or
insl
and
xor
jae
add
test
jmp
lcall
cltd
fbld
test
out
pop
insl
lcall
push
mov
cmpsl
mov
pop
dec
insb
adc
inc
xlat
testb
loopne
pop
mov
or
test
add
push
mov
andl
sub
popa
xor
cli
mov
push
inc
push
dec
inc
gs
sti
movsb
shrl
push
pop
jg
cmp
div
jns
pop
scas
dec
xor
cmpsb
mov
pop
cwtl
sbb
and
dec
movsl
jnp
xchg
mov
enter
and
jp
pop
mov
mov
arpl
cmp
scas
inc
imul
cmovo
push
jae
mov
push
pop
rorb
jae
mov
dec
xchg
mov
mov
lods
push
xchg
int
jo
es
loop
push
adc
add
in
dec
dec
repnz
dec
ja
scas
adc
or
loopne
int
mov
pop
test
mov
pop
stos
mov
xchg
push
mov
daa
cmp
adc
roll
pop
nop
enter
mov
add
lods
shrl
jle
add
pop
mov
sbb
mov
push
pop
ror
das
fildl
jns
or
lahf
fnsave
addr16
mov
mov
add
pop
clc
mov
pop
fs
mov
add
cmpsl
and
pop
inc
hlt
pop
lds
ja
je
inc
and
ja
fimull
add
popf
jne
dec
in
loop
xchg
inc
movb
adc
and
cmpl
lcall
test
or
test
pusha
lret
mov
jge
mov
add
imul
xchg
dec
mov
jmp
test
sub
leave
adc
pop
lahf
xlat
sub
sarl
hlt
fincstp
sub
sub
paddd
ret
lds
xor
xor
cmpsl
orb
jbe
dec
sbb
ljmp
mov
push
je
fldcw
jg
fmul
cltd
les
ljmp
icebp
mov
and
xchg
ret
jbe
mov
call
xchg
pop
dec
jmp
adc
mov
jle
adc
aaa
mov
add
lock
mov
jl
jo
or
or
push
dec
out
sub
mov
push
stc
aas
xor
lahf
fsubl
sbb
sarb
and
ret
cld
mov
shrb
jno
popf
popf
add
mov
push
and
in
lock
xor
adc
jge
or
cmp
mov
jb
dec
sbb
incb
mov
rcl
ss
fldenv
xchg
xorb
or
jmp
cmpsl
mov
pop
jecxz
sbb
inc
sub
stc
pushf
shll
nop
lods
je
xor
ficoml
nop
sbb
cwtl
and
push
cmp
loopne
fisubs
mov
or
push
int3
pushw
js
mov
push
xor
and
dec
jb
sub
pushf
xchg
repnz
lods
aas
mov
jbe
xor
and
ds
mov
lds
xor
pop
fdivs
mov
xlat
xor
sbbl
jl
inc
out
push
arpl
push
pushf
sbb
pop
into
mov
mov
hlt
push
divb
loopne
mov
fsubrs
in
dec
adc
jno
and
adc
adc
xor
xor
jnp
dec
sub
jp
mov
ljmp
cmp
adc
std
and
inc
xchg
inc
xor
jl
inc
pop
sbb
sub
add
sub
xor
adc
jge
jno
divb
sub
add
aad
ss
xchg
shll
mov
sub
and
mov
cmp
xchg
mov
repz
outsl
dec
das
outsb
mov
enter
ucomiss
ds
fsubs
xchg
in
cmpl
adc
pushf
sub
je
inc
mov
cltd
dec
fdivr
mov
loop
push
mov
xchg
aam
dec
pop
out
clc
sub
dec
mov
dec
and
or
nop
fiaddl
cmp
insb
mov
jne
mov
sbb
test
bound
arpl
in
pop
in
inc
xchg
inc
scas
xlat
cmp
scas
mov
popa
in
lods
cmp
fldenv
inc
loop
nop
pop
call
mov
test
jmp
mov
pop
je
inc
loop
sub
adc
push
jae
test
mov
lret
or
shrb
shrl
xor
cmc
sub
jg
cwtl
dec
cmp
sbb
add
rol
cmp
cmc
sbb
jbe
ljmp
sarb
push
add
pop
insb
adc
das
sub
push
jmp
mov
hlt
loopne
fmuls
push
in
loopne
mov
sbb
push
hlt
cmc
pop
push
or
xchg
mov
lock
dec
pop
push
inc
fwait
lods
pushf
scas
cmc
outsl
xchg
jg
mov
ja
sbb
push
sar
out
and
loop
jmp
add
fwait
inc
mov
push
pop
pop
push
cmpsb
pop
cmp
push
rcrb
sub
negb
cld
xchg
aas
fs
rolb
xorb
sub
mov
out
adc
sti
sub
hlt
sbb
test
mov
dec
addr16
fcoml
dec
ja
ljmp
xchg
xlat
push
les
scas
jno
push
mov
test
mov
pop
adc
das
mov
je
mov
loopne
stc
jnp
sub
mov
push
test
adc
movsb
fs
add
cmp
adc
push
into
rcr
jge
jo
sti
aad
outsb
push
shr
or
pop
or
push
aaa
sti
pop
sbb
pop
sub
mov
mov
inc
xor
xchg
mov
lock
xchg
xchg
es
stos
daa
divl
add
adc
inc
stos
test
push
leave
cltd
std
outsl
sti
ds
mov
popa
jbe
cld
je
xchg
gs
push
adc
sub
xchg
not
xor
pop
xchg
sbb
shrl
cld
mov
test
stos
cwtl
pop
pop
cmp
push
popa
and
adc
aas
push
push
int3
mov
rclb
adc
lods
push
insl
ljmp
pop
faddp
pop
movsb
xchg
adc
mov
fcompl
pop
inc
outsb
popa
ljmp
jae
mov
sbb
aas
push
in
cli
xor
std
std
gs
sbb
sub
mov
xor
test
loopne
in
push
scas
fcoms
sub
jge
xor
sti
sub
add
xor
cltd
in
push
insb
pop
or
cmc
pop
mov
or
adc
out
out
and
shr
addl
pop
mov
sub
and
cmpsl
inc
inc
daa
dec
arpl
pushf
sbb
loope
sbb
out
inc
lret
xchg
cmc
fcoms
inc
cmp
add
push
inc
subb
add
jle
dec
sub
int3
cmp
leave
mov
int
jecxz
cmp
fcompl
inc
inc
ljmp
aaa
adc
in
lret
lret
lret
sbbl
add
jns
push
in
insb
fbstp
shl
cmp
fadds
out
or
arpl
js
or
push
xor
std
add
mov
mov
cmpsl
fidivrl
popl
std
psrlq
push
int
inc
lds
js
test
imul
mov
in
sub
movhps
aaa
inc
mov
in
sti
xchg
mov
dec
mov
stc
push
mov
jge
lahf
ljmp
test
mov
add
insl
inc
test
pop
lahf
jge
adc
push
mov
test
mov
pop
mov
clc
add
enter
mov
mov
rorb
sahf
pop
add
jg
rcr
push
test
lcall
jp
outsb
adc
hlt
or
xor
or
ficoml
movsb
pop
pop
out
cmp
mov
rol
mov
adc
sbb
cmp
pop
xchg
jno
pushf
adc
fcompl
iret
jge
pop
icebp
lcall
xchg
inc
adc
stos
adc
inc
pop
and
bound
test
mov
lcall
ljmp
das
inc
add
dec
repz
mov
dec
adc
icebp
pushf
arpl
push
adc
cmp
les
test
jnp
mov
jnp
mov
or
mov
idivb
xchg
fisubrs
pop
dec
xchg
pop
pushf
xchg
mov
lock
inc
xchg
ret
out
ret
pop
fs
push
in
xor
pushf
xchg
dec
outsl
scas
add
dec
cs
mov
inc
and
cmp
loopne
pop
xor
and
movsl
aas
faddl
sbb
movsb
dec
sub
arpl
pop
roll
lahf
sub
and
jl
mov
or
testb
int3
mov
sub
jl
ret
iret
cmc
hlt
or
dec
or
loopne
test
dec
repz
lock
lret
mov
and
mov
insb
lods
add
imul
rorb
mov
sbb
ss
out
in
ljmp
loop
popa
jne
aad
dec
mov
xlat
mov
lret
rol
cmpsl
xchg
sub
enter
mov
or
in
pop
pop
test
popl
rclb
mov
lods
xchg
jae
inc
mov
pop
aam
sbb
pop
or
ret
or
stc
xchg
add
insl
mov
das
hlt
jnp
mov
fistl
bound
jp
add
add
rol
push
out
pop
out
lea
imul
testb
jmp
ret
or
aad
insb
mov
shll
and
push
pop
dec
mov
es
int
cmp
movsb
sbb
xor
iret
fidivs
test
mov
bound
mov
fsub
pop
jmp
fistpl
pop
lock
rorl
mov
ljmp
mov
fbld
inc
or
push
mov
push
mov
push
sti
add
ficompl
mov
movsb
les
repz
repz
int
loop
cli
xor
test
jmp
mov
jle
std
loop
jl
cmp
sbb
enter
cmpsl
jge
ret
nopl
addb
imul
subl
lds
in
int
dec
aaa
mov
push
jle
mov
and
test
sub
int3
and
lahf
inc
mov
push
and
int3
mov
inc
push
sub
sbb
pop
fidivrs
mov
call
cld
dec
and
leave
test
push
in
mov
je
lock
loop
jg
mov
sahf
jmp
outsl
cltd
inc
in
das
leave
xchg
inc
jp
cmp
aas
shr
pop
push
dec
xchg
gs
inc
adc
jecxz
testb
cmp
add
in
or
push
inc
cmp
push
inc
ja
js
jge
aad
orb
inc
popf
lcall
addb
hlt
mov
add
fwait
pop
mov
jle
xor
out
push
ds
inc
pop
popf
cli
cwtl
test
aad
mov
adc
or
orb
xchg
cmp
adc
and
adc
aam
sub
lret
loopne
rorl
mov
cmpsl
mov
je
mov
adc
mov
xchg
mov
call
inc
test
cli
xor
loope
cmp
sub
test
lret
push
push
loopne
jb
lods
lcall
inc
cmc
dec
or
dec
add
xchg
lea
out
mov
jle
test
cmpsb
cmp
add
fdivs
lock
pop
negb
mov
out
dec
daa
push
hlt
sbb
roll
push
xor
inc
xchg
ss
loope
sbb
pop
mov
xor
fiadds
lahf
daa
int
sar
adc
jno
mov
mov
mov
add
fs
mov
and
stc
or
add
push
push
cmp
gs
addr16
movsb
adc
sub
and
xchg
inc
mov
insl
sbb
jp
jg
add
cmp
loopne
add
inc
xchg
inc
lds
sarl
xor
lahf
mov
jmp
push
xchg
ljmp
inc
mov
mov
in
mov
jp
push
cmp
dec
adc
xor
sub
sub
xorl
out
mov
inc
fs
adc
push
popf
xor
sbb
inc
aas
pop
test
loopne
xchg
and
and
mov
add
mov
shl
fcmovnb
aaa
bound
je,pn
fs
ret
ficompl
rcrb
bound
test
mov
lcall
mov
mov
lret
jno
xor
jno
xor
stos
ret
and
dec
adc
fcmovne
lds
addr16
mov
cmpsl
stos
ficompl
push
pop
rorb
inc
int
or
or
dec
lret
dec
lahf
fildll
and
in
imul
dec
ss
pop
gs
jle
rolb
andl
fisubl
mov
arpl
pop
ds
inc
mov
inc
rcrb
imull
cltd
pop
insl
movsb
sbb
or
icebp
clc
or
scas
insb
ss
stos
push
cmp
iret
push
mov
scas
pop
pop
movsl
sbb
aad
negl
lahf
inc
lret
inc
sbb
lcall
xlat
jle
xchg
movsl
ret
in
rclb
loope
jmp
pop
loope
push
movsl
stos
shll
push
mov
adc
repnz
enter
mov
xchg
es
push
push
dec
cmp
mov
xchg
or
xchg
flds
popf
cmp
shlb
xchg
mov
scas
stc
cli
cld
adc
push
ja
xchg
ds
test
out
cmp
add
bound
push
xorb
jbe
popa
sbb
js
mov
or
xor
or
test
lods
sbb
add
push
mov
and
xor
jne
in
ljmp
push
clc
dec
out
ret
out
push
add
push
jae
xchg
lret
dec
mov
mov
mov
adc
jle
fdivr
or
xlat
nop
rcr
fsts
cmp
jg
adc
fbstp
pop
addr16
adc
xor
mov
cltd
inc
arpl
lahf
wbinvd
jnp
xor
shrb
jne
orb
sbbl
push
in
sbb
scas
jo
jle
das
lds
fildll
mov
arpl
push
leave
in
push
scas
adc
cmp
in
int
xchg
xchg
jae
sub
fmuls
paddusb
bound
in
testl
fcmovbe
gs
stos
push
sub
inc
xor
inc
sub
leave
jb
in
push
mov
and
push
sbb
pop
mov
filds
cld
mov
pop
xchg
inc
mov
sbb
repz
and
stc
std
sub
xchg
testb
test
outsb
pop
sbb
or
add
fnsave
in
bound
sub
iret
cmp
into
push
vhaddpd
pop
je
in
mov
mov
mov
inc
in
out
subb
aaa
loopne
xorb
dec
addr16
add
aas
pop
mov
test
repnz
adc
aaa
mov
push
and
mov
fdivl
push
cmp
mov
aam
dec
mov
pusha
fidivs
jbe
scas
cmpsl
std
push
rolb
pop
std
inc
mov
mov
xor
testl
mov
dec
insl
call
pushf
xchg
pushl
jmp
mov
or
mov
inc
mov
gs
rorl
mov
ja
rorb
xchg
mov
test
cli
pusha
scas
sahf
ss
dec
mov
jecxz
cmpsl
xchg
push
or
jno
adc
jns
subb
pop
push
dec
aam
lock
outsb
pop
xchg
add
repz
mov
sbbb
xchg
dec
stos
out
jl
or
or
das
orb
mov
arpl
idivb
rcr
call
imul
mov
stc
cs
or
rcr
mov
xchg
lock
out
outsb
dec
mov
inc
movsb
mov
dec
xchg
sbb
adc
incb
mov
mov
sub
pop
pop
mov
and
push
adc
jp
xchg
jb
jbe
mov
mov
mov
and
add
sub
cwtl
movsb
cli
inc
test
scas
les
fmull
push
popa
movsb
imul
xor
dec
mov
and
fwait
rolb
cmpl
mov
add
in
cmp
add
je
fucomip
xchg
xor
daa
mov
add
cmpsb
cli
sbb
and
cmpsl
and
or
aas
adc
add
ucomiss
xor
sub
ffreep
mov
jle,pn
lahf
inc
dec
incl
adc
fcomip
xlat
push
xchg
push
add
shlb
jns
out
xlat
leave
fnstenv
mov
out
xchg
addb
ret
mov
mov
dec
pop
jb
shrl
pop
push
mov
sub
fwait
mov
push
push
gs
jb
stos
int3
lock
shll
mov
cld
aad
dec
aaa
popf
inc
push
out
imul
repz
roll
scas
dec
sub
iret
and
bound
cmp
mov
ret
mov
imul
pop
jns
mov
pop
es
jmp
lods
shl
cmpsb
insb
mov
loop
mov
dec
popf
in
sahf
xchg
sub
lods
ret
and
rcr
xchg
cmpsb
insb
jg
loopne
dec
mov
sbb
mov
pop
ss
mov
mov
pop
shll
jo
xor
dec
or
jo
inc
and
in
test
inc
xor
and
in
rorb
push
mov
ljmp
jns
js
bound
jb
sbb
and
xor
cmpsl
gs
push
mov
in
and
push
sub
push
aad
lret
mov
adc
scas
add
daa
aas
test
or
and
int
adc
addr16
imulb
adcl
gs
lock
ds
outsb
sbb
es
cmpsb
ljmp
xchg
push
addr16
shlb
lods
cmp
insl
lea
sbb
lock
cli
imul
bound
lcall
mov
push
std
cmc
mov
gs
hlt
cli
in
push
sti
data16
arpl
push
sti
popf
dec
sbb
and
imul
push
rorb
pop
popa
iret
mov
pop
cmp
push
std
fiaddl
out
inc
in
loope
stos
jge
pop
and
dec
mov
add
xchg
inc
push
xor
mov
dec
js
mov
cmp
and
cs
mov
pop
xlat
shlb
daa
andl
add
ficoml
gs
adc
jg
add
repz
push
out
icebp
mov
repz
push
jp
shl
sbb
sti
shlb
into
xor
in
sar
inc
pop
inc
sbb
mov
dec
mov
xchg
mov
ja
maxps
pushf
inc
scas
lds
ja
fidivl
xchg
cmp
jnp
jl
pop
pop
sarb
mov
or
popf
mov
xor
stc
mov
jmp
sub
pop
mov
and
out
sub
cmp
inc
int
pusha
in
out
sub
stos
imul
in
mov
lahf
scas
stos
enter
pop
fadd
outsl
loop
mov
mov
fs
lods
mov
mov
pop
or
adc
insb
mov
lea
insb
ljmp
mov
dec
jmp
fldt
in
movsl
add
sbb
int
and
mov
sbbb
les
lahf
adc
cmp
lock
sub
and
mov
fcoml
dec
nop
jl
mov
loop
ljmp
scas
push
test
xor
pop
sti
or
sbb
fsubrl
add
lret
out
dec
mov
jno
dec
mov
popf
fwait
out
out
push
testl
aad
loop
push
jnp
lock
ja
in
out
pop
dec
push
outsl
nop
sbb
cltd
jnp
dec
dec
push
add
lock
mov
push
mov
fsubr
jo
fsubrs
cmp
ret
pop
sub
ret
das
cmpsb
jp
lea
cwtl
push
push
lods
out
pop
mov
mov
cmp
xor
test
popf
nop
jmp
inc
push
mov
out
ljmp
fisttpl
outsb
cltd
xor
pop
mov
fisttpll
sbb
sbb
fmull
insb
cmpsl
push
adc
dec
outsb
xchg
cmp
lret
fnstcw
mov
cmc
jns
out
in
repnz
sbb
insb
orb
lret
sub
cmp
flds
inc
pop
mov
mov
and
mov
pop
inc
xchg
adc
iret
mov
rorb
mov
ret
pop
call
pop
mov
sub
jecxz
pop
imul
xchg
shlb
aad
or
out
cwtl
cmp
cmp
jo
add
mov
xchg
int
fwait
xchg
mov
shrl
shrb
mov
sbb
jg
sbb
dec
pop
mov
repnz
ss
cmp
int
sub
xchg
arpl
xchg
xlat
cwtl
in
jns
pop
call
loop
dec
adc
adc
test
fsubs
int3
and
mov
cltd
popa
cmpsl
or
pop
mov
lods
push
cmp
loopne
or
push
inc
inc
xchg
daa
pop
mov
fisttps
dec
inc
dec
dec
clc
lods
sbb
fcmovb
adc
outsb
mov
aas
lods
mov
enter
fwait
cmp
push
and
fbstp
xchg
out
sbb
mov
inc
xchg
inc
inc
daa
shrl
jne
jae
ja
stos
xor
incb
into
add
jl
sbb
std
addb
das
dec
jmp
mov
and
clc
mov
lahf
mov
jg
cmp
mov
sahf
or
imul
ret
jbe
jl
push
shll
xchg
sbb
fcoms
or
adc
std
jb
pop
psrad
rcr
cmp
dec
mov
ds
adcb
int3
int3
pop
pop
mov
push
rcl
xchg
call
enter
mov
add
cli
testl
or
insb
mov
mov
ret
sub
jnp
fsub
inc
nop
fildl
add
aas
ds
call
les
xor
jne
mov
xor
aad
in
dec
iret
sub
repz
sub
std
cmp
in
aas
pop
mov
lods
clc
andl
add
stos
or
mov
mov
das
pop
outsb
dec
repz
sub
lods
adc
add
push
add
sub
fstpt
int
jbe
imul
push
mov
jmp
or
imul
sub
pop
push
lahf
inc
mov
popa
pop
jecxz
imul
adc
jb
sahf
ret
cmp
cmp
andb
or
pushl
push
and
js
add
mov
pop
and
repnz
lock
popa
mov
mov
jge
and
sbb
and
out
mov
push
jo
shrb
mov
mov
or
lret
xor
ja
lods
sub
shrl
out
inc
cmp
dec
or
push
xchg
jno
mov
fimuls
push
inc
mov
xchg
in
and
mov
stc
mov
xor
mov
fistps
test
and
xor
fld
mov
or
mov
dec
sub
mov
out
xor
pusha
andb
ss
push
lcall
mov
push
adc
inc
dec
mov
and
push
mov
enter
das
adc
call
repnz
jp
push
sub
mov
pop
jae
repz
push
lahf
add
pushf
lods
push
adc
stos
pop
jg
mov
push
imul
or
test
push
xor
jmp
pop
leave
pop
movsb
test
in
sub
sbb
add
inc
mov
fisubs
cmpsb
mov
sub
adc
inc
or
jecxz
lds
out
insb
push
xor
cli
aaa
lcall
popa
mov
in
repnz
xchg
cmpsb
push
jns
lret
mov
lret
inc
jae
push
sub
clc
or
gs
jg
roll
mov
push
sti
in
push
aas
jge
pusha
ja
sub
je
add
in
je
sbb
repnz
ror
xor
imul
pop
repnz
mov
jmp
fdivl
iret
inc
and
aad
popf
add
js
lds
mov
and
ss
dec
sar
icebp
jno
lods
push
sub
scas
or
sbb
adcl
jbe
sahf
push
mov
insb
std
dec
sbb
leave
adcb
cmp
hlt
daa
movsl
xchg
cmpl
js
bound
xlat
frstor
cmc
in
test
cli
orb
call
adc
outsl
in
testb
dec
fbstp
cmp
fsubrl
fcomp
pop
cmp
arpl
ljmp
call
add
push
lods
pop
pop
jo
idivb
xorl
push
shlb
icebp
int3
xchg
call
test
dec
sub
pushf
leave
sub
int3
repz
rorb
bswap
add
mov
mov
ret
inc
fdivrp
add
fildl
xchg
inc
sub
scas
into
addr16
push
or
and
in
add
shrl
movsb
xchg
into
lods
int
ds
and
xchg
int3
and
orl
push
push
sarb
xchg
outsb
ficoms
push
mov
push
test
shrl
sub
push
rcrl
imul
jecxz
in
jecxz
stc
lcall
lret
xchg
int3
jmp
imul
mov
mov
stc
jns
pushf
add
dec
mov
jo
fwait
add
mov
adc
xchg
adc
add
xor
ret
mov
dec
hlt
aas
push
dec
or
fnstenv
into
lea
movsb
std
mov
cltd
xor
and
int3
in
aam
xor
outsl
ja
ja
mov
inc
pop
bts
out
adc
mov
push
lds
jnp
aad
inc
mov
xlat
addr16
xchg
inc
cli
std
pop
leave
pop
movsl
test
inc
lock
roll
sbb
jmp
nop
lods
imul
and
and
mov
push
xlat
pusha
mov
loope
jecxz
in
inc
jecxz
test
xchg
push
aas
mov
imul
testb
aas
xor
shl
lods
pushf
cli
das
xor
aaa
das
scas
pop
xor
sti
ret
inc
mov
cs
daa
jge
iret
pop
and
inc
fstps
ljmp
push
aad
fwait
push
data16
push
pop
sub
test
stos
dec
dec
mov
fcoml
xchg
negb
rorl
cmpl
aam
jl
push
lods
shll
lock
xlat
loope
loop
push
pop
lock
xor
shlb
xchg
dec
mov
inc
pop
mov
xor
test
xor
das
add
xor
add
lret
aas
cwtl
sbb
mov
mov
loope
aas
leave
movsl
dec
es
imul
repz
fbld
dec
bound
adc
pop
mov
cwtl
ljmp
stc
adc
in
mov
sbb
fisttpl
data16
lods
mov
adc
xor
jae
jb
dec
lahf
xchg
mov
pop
pop
adc
test
cmpsl
mov
or
rolb
pop
loop
push
mov
inc
movsl
add
push
inc
jo
mov
mov
aas
lret
sub
mov
jne
and
xor
xor
sub
out
jmp
rclb
test
or
orl
mov
loopne
push
idivb
jmp
lcall
xchg
mov
add
aas
cwtl
jnp
sahf
ljmp
mov
cli
jle
addb
das
mov
iret
push
xchg
adc
inc
repnz
arpl
jne
fisubl
int3
fmuls
mov
subb
lcall
ss
movsl
jle
outsb
test
xor
pop
xchg
out
test
cmpsl
hlt
das
paddusb
jb
movb
icebp
sbb
and
sub
rorl
aad
mov
fsubrs
fildl
mov
jmp
inc
jns
fisubl
repz
in
dec
add
lret
sbb
stc
inc
adc
xchg
data16
mov
dec
mov
adc
stos
cwtl
cmp
das
adc
sbb
sub
or
mov
push
out
xchg
pop
cli
bound
fimuls
call
js
jmp
fimuls
lahf
and
aad
sub
test
test
lret
pop
outsl
aam
mov
decl
jl
push
jmp
push
xor
push
rol
mov
sbb
faddl
xchg
adc
imul
mov
mov
mov
icebp
pushf
sbb
and
addb
dec
fs
inc
nop
dec
insl
xchg
dec
sub
fldt
inc
das
std
jle
sti
sub
cwtl
or
inc
fisubs
or
add
mov
shll
cs
push
into
inc
shlb
sbb
aad
jmp
sahf
jle
jecxz
mov
arpl
or
adc
pop
imul
out
les
sahf
fisubrl
ljmp
leave
out
mov
ljmp
mov
in
jae
add
aam
inc
inc
mov
leave
and
xchg
pop
ja
loope
inc
hlt
xlat
jle
mov
rclb
or
xorl
insb
daa
xlat
pushf
mov
bound
xlat
push
in
mov
sbb
jg
gs
jae
push
out
sahf
adc
daa
arpl
pop
ss
mov
cs
loopne
scas
insb
cmpsb
jne
and
call
mov
add
out
mov
ljmp
push
dec
int3
and
pop
repnz
sahf
scas
mov
and
jle
test
sub
test
ret
addr16
mov
mov
pushf
xor
xchg
xchg
ret
cmp
cmp
sar
dec
repnz
dec
daa
mov
sbb
sub
push
add
popf
adc
stc
sti
fcoml
outsl
push
mov
iret
daa
lea
jne
or
mov
in
xchg
and
fldl
push
shl
int3
sti
adc
and
ret
mov
imul
jo
cmp
sub
insb
sub
sbb
lret
pop
in
push
sub
sbb
adc
dec
pop
je
mov
lahf
in
or
mov
enter
or
sbb
iret
sub
pop
or
mov
mov
push
xor
outsl
pop
push
jae
les
mov
lcall
filds
gs
dec
add
sbb
adc
sbb
sub
push
jae
add
pop
aas
es
test
cmc
lea
jae
push
cmp
push
or
movsl
fstpt
add
xchg
jne,pt
lock
cli
in
insb
mov
sarl
roll
shlb
aad
sbbl
ljmp
insl
scas
loopne
mov
push
daa
jp
into
out
mov
mov
pop
jne
add
daa
xor
sub
pop
or
or
mov
mov
mov
mov
sub
in
or
cmpsl
orb
idivl
pop
cwtl
sbb
aad
add
fistpll
dec
and
fildl
mov
mov
mov
scas
es
sbbb
adc
mov
dec
pop
and
js
sbb
test
loope
xchg
push
sub
mov
cmpsb
mov
cmpsb
xchg
cli
mov
pop
mov
arpl
pop
mov
mov
jg
add
adc
jle
rcrb
popf
inc
lahf
push
cmp
out
xchg
jp
shll
cld
repz
or
xchg
pop
xor
jge
cmp
jo
imul
dec
repnz
fwait
int
xchg
jae
inc
mov
bound
jne
hlt
dec
mov
shlb
loope
fcoms
add
sahf
test
or
idivl
mov
push
pop
pop
cmp
adc
loope
mov
xchg
ja
and
adc
pop
mov
mov
scas
mov
xchg
stc
xor
push
imul
scas
cmp
das
adc
loopne
mov
mov
pushf
jecxz
mov
push
mov
fcoms
daa
dec
shll
pop
push
or
dec
out
xchg
or
call
cmp
push
xor
and
dec
mov
add
push
and
imul
icebp
mov
add
sub
xchg
aaa
jl
arpl
icebp
mov
pop
jae
fucom
xchg
pop
adc
cs
jg
in
stc
out
xor
std
add
fstps
cmp
xor
jns
leave
repz
push
push
mov
cltd
pop
cmp
add
in
xchg
push
pop
jecxz,pn
das
xor
pop
ja
clc
or
push
lcall
fcompl
gs
cld
adc
jne
and
fwait
loop
xchg
xor
inc
or
mov
gs
out
enter
jmp
and
int
xor
cmp
enter
inc
out
dec
loopne
out
clc
cmc
mov
or
mov
mov
ret
sub
mov
mov
jmp
aas
out
popl
sbb
dec
mov
push
dec
loope
push
out
sbbl
test
push
mov
imul
outsl
pop
mov
cs
leave
dec
push
push
xor
rclb
es
adc
mov
or
hlt
and
lret
stc
inc
int
fidivrl
mov
mov
pop
sbb
push
repz
mov
mov
icebp
add
call
rclb
and
nop
ret
cmp
adc
dec
outsl
scas
add
lods
repz
or
add
push
mov
iret
loope
inc
pusha
sub
mov
pop
jle
lahf
inc
lock
ss
adc
and
dec
mov
aas
adc
add
shll
scas
mov
roll
add
mov
test
sahf
insl
jge
out
rorl
out
xchg
xchg
lea
inc
sub
clc
xchg
mov
xchg
cmp
dec
adc
out
test
adc
aaa
lret
xor
push
and
pop
pop
sahf
je
dec
jno
ja
jle
dec
pop
lcall
lret
in
jo
pop
clc
imul
pop
stc
pop
lahf
lahf
inc
xlat
mov
cmp
and
mov
mov
dec
mov
cld
push
xchg
daa
int
pop
cmp
or
fwait
mov
dec
out
lcall
or
movsl
adc
jae
sub
xor
pop
test
cmpl
test
mov
xor
xor
fdivrp
fidivs
jnp
les
push
adc
xchg
push
or
mov
inc
mov
push
cltd
jns
mov
inc
pop
cmp
mov
or
fxtract
push
sbb
in
pop
and
xchg
enter
pop
ret
negb
das
lea
mov
jo
dec
sbb
fstpl
addr16
shll
pop
lock
int
sbb
arpl
mov
pop
push
cld
jge
inc
arpl
negb
mov
ret
rorb
and
popa
in
adc
out
dec
mov
push
mov
arpl
mov
adc
xchg
punpcklwd
mov
pop
jge
add
in
pop
push
add
and
movsl
aaa
inc
and
add
jnp
pop
and
sbb
dec
addr16
and
jbe
test
cmc
cltd
xchg
push
fsubrp
add
aad
fcomip
inc
addr16
xchg
mov
or
and
rorl
mov
sbb
inc
dec
lahf
mov
push
ss
xchg
shr
lods
inc
lahf
dec
scas
pop
sbb
dec
and
sub
push
repz
jp
jmp
inc
ss
scas
xor
loope
shr
sbb
mov
fldln2
sti
pop
fcomps
ss
les
js
cmc
repz
and
dec
mov
and
popf
adc
arpl
mov
mov
dec
push
sub
xor
push
dec
pop
cs
enter
cmpsb
xchg
dec
fstl
jo
push
popf
repz
es
mov
and
mov
cld
xchg
lods
jge
push
add
mov
sarl
pop
jno
jbe
fldt
xorl
dec
jecxz
mov
popl
sub
pusha
imul
push
pop
push
lds
push
pminub
cmp
in
aam
out
popf
adc
pop
stos
in
xor
adc
insb
jns
fdivr
xchg
into
scas
test
call
push
add
push
sbb
dec
jp
subl
daa
dec
imul
sbb
sahf
outsl
push
pushf
pop
or
je
xchg
in
fistps
inc
dec
test
popf
loopne
loopne
pop
jle
and
add
repnz
mov
ds
mov
cmp
dec
jae
inc
xor
ret
and
arpl
push
adc
into
or
push
aam
sti
push
mov
popf
mov
push
loope
rclb
lahf
dec
orl
push
pop
in
pushf
xor
iret
sbb
dec
out
movsl
xor
jge
cmpsl
fcomp
cld
lods
sbb
pcmpgtb
push
mov
loope,pn
cmpl
sbb
loop
mov
dec
adc
sbb
adc
push
pop
add
mov
pop
clc
xor
sub
pop
jle
insb
sbb
test
call
jno
pop
sub
or
call
out
push
xor
cmp
popa
push
imul
pop
fnsave
into
mov
fnsave
mov
das
mov
loop
mov
mov
cmp
mov
sub
cmp
cltd
fdivrs
adc
mov
sti
xor
sbb
imul
pop
arpl
cmp
into
sub
and
cmp
stc
add
cltd
inc
mull
out
sti
and
cmpsb
mov
in
pop
jbe
pop
push
jae
or
adc
sub
mov
push
xchg
lahf
out
mov
adc
cmp
pop
mov
mov
mov
mov
lock
xchg
movsb
push
ja
lds
aam
ja
jle
jp
psrlq
xchg
addr16
jg
pop
or
inc
insl
pop
mov
lahf
or
xor
aam
add
imul
xor
outsl
sar
cmp
fnsave
adc
push
loopne
test
inc
sbb
clc
jg
es
adc
loop
mov
andl
or
mov
fcoml
dec
loop
pop
bound
lret
push
dec
dec
cmp
mov
inc
mov
or
call
jne
mov
add
std
cmpsb
add
pop
cs
or
cmp
das
push
lods
aam
adc
sbb
or
imul
push
push
ret
fcomp
gs
and
xor
add
mov
and
test
adc
mov
nop
cli
dec
xchg
imul
test
and
cs
push
int
repz
jmp
mov
cmpsb
into
mov
ficoms
call
xor
or
pop
lea
shl
ds
aas
mov
out
shr
cs
dec
ljmp
imul
jnp
fs
and
cmp
dec
push
xchg
daa
fists
sar
or
xor
sub
imul
jns
call
out
push
adc
or
js
lock
push
pop
in
ja
mov
bsf
clc
stos
sbb
ja
mov
push
es
push
pop
shll
mov
jne
loopne
movsb
scas
pop
inc
xchg
fdivr
clc
lods
ljmp
nop
add
push
ds
out
push
sbb
out
mov
adc
add
jge
lret
fildll
orb
lds
insl
loope
mov
adc
in
mov
mov
inc
dec
addb
xchg
jge
and
sarl
cmp
addr16
push
lcall
xor
mov
loop
and
mov
jle
push
adc
into
fwait
outsb
pusha
pop
fcomi
mov
push
ljmp
xlat
sbb
and
lcall
add
mov
lea
cli
mov
pushf
cmp
xorl
xchg
jne
in
or
adc
in
aam
xchg
pop
or
out
jmp
into
pop
lock
fdivs
lahf
idiv
fwait
jmp
mov
mov
lds
ds
fadds
xchg
rcrb
push
jae
or
dec
scas
xchg
pop
jmp
fildl
mov
inc
jo
loope
je
outsb
mov
rep
jne
sub
cmp
push
in
cmp
or
jbe
mov
jb
inc
xchg
mov
pushf
pop
cmpsb
cltd
fxtract
adc
retw
divl
call
adc
cld
pop
aad
sbb
pop
filds
std
popa
loope
scas
dec
pop
test
sbb
sub
imulb
mov
out
jo
addr16
sbb
sbb
test
les
add
jge
sahf
std
jle
adc
movb
jmp
adc
movaps
ss
lock
stc
or
sbb
roll
and
sub
sub
aaa
adc
idiv
pusha
mov
or
pop
push
cmp
mov
pop
dec
movsb
mov
movsb
sbb
lea
cmpsl
test
popa
or
mov
shr
fcoms
les
mov
pusha
cmp
inc
push
inc
dec
inc
push
xchg
pop
sub
pop
std
pop
aas
dec
nop
mov
sbb
shll
xchg
rorb
or
fwait
cmp
test
das
adc
inc
adc
lahf
xchg
mov
pop
jg
mov
adc
adc
leave
inc
jecxz
jo
add
nop
out
lods
ja
adc
inc
jge
test
mov
adc
pop
cmpsl
int3
icebp
in
cmp
add
cmc
std
out
mov
ror
jge
add
add
mov
gs
lds
pop
or
lock
pop
sbb
xor
hlt
cs
fnstsw
test
ud2
lods
imul
sub
repz
and
xor
add
test
xor
lret
daa
pusha
push
mov
cmp
out
lea
cmp
push
je
xchg
scas
inc
or
shrb
sub
movsl
pop
lahf
mov
dec
idiv
lods
sbb
cld
test
stos
ljmp
jle
and
mov
xor
add
and
add
add
orb
test
inc
int
les
jb
adc
xchg
js
inc
je
daa
outsl
pop
pop
repz
aas
addl
insl
ret
xchg
push
cmpsb
mov
push
xor
ret
inc
data16
enter
mov
mov
lds
or
xchg
cmp
repnz
loop
bnd
pop
pop
sti
sub
imul
push
daa
repz
push
mov
std
daa
enter
inc
stos
xor
xchg
mov
test
dec
xlat
xchg
xor
and
cmp
stos
in
lret
add
xchg
hlt
cmp
cmp
and
in
inc
aas
nop
rcll
push
aam
lret
inc
mov
push
shl
inc
pop
add
int3
pop
mov
pop
ljmp
jae
dec
xchg
and
push
lea
mov
or
and
pop
xchg
push
test
and
jl
loopne
inc
and
and
leave
xor
and
out
pop
movsb
test
test
adc
add
addb
hlt
and
mov
pop
adc
and
ss
dec
cmp
lret
sbb
gs
in
pop
or
arpl
sti
sbb
test
mov
adc
push
xlat
push
dec
xchg
xor
xchg
outsb
scas
pop
cltd
incb
in
dec
xor
leave
sbb
xchg
push
andnps
fidivs
dec
ja
imul
pop
inc
mov
loop
xchg
dec
jg
cld
dec
cld
movsl
mov
fldl
pop
loope
icebp
rorl
mov
popa
shrl
push
data16
mov
pop
hlt
shrb
call
in
ljmp
mov
aaa
gs
mov
cmp
mov
xchg
ret
test
ja
adc
sarb
mov
add
dec
mov
sub
and
and
sub
or
stos
lds
mov
test
mov
pop
int
loopne
pusha
xchg
pop
das
mov
or
cltd
adc
leave
movsl
loopne
and
xor
mov
jbe
repnz
cmp
insl
inc
jbe
xchg
imul
ljmp
test
lea
dec
mov
fdivs
pop
inc
dec
inc
and
addl
aad
dec
shl
inc
aaa
xchg
aaa
or
decb
sbb
lret
fadd
mov
sbb
nop
test
ss
outsb
sahf
mov
adc
sbb
aad
outsb
test
add
lcall
daa
and
jle
orb
adc
stc
mov
scas
xor
jmp
pop
add
mov
xor
mov
in
stos
push
mov
mov
mov
stc
popa
stos
adc
add
stc
mov
sbb
sbb
xor
int
in
pop
repnz
int3
aaa
fwait
loope
sbb
add
or
out
jnp
pop
lahf
data16
int
jbe
jle
sti
fists
in
test
popa
out
add
pop
jmp
mov
in
mov
mov
test
sbb
and
mov
subl
cmp
mov
xchg
pusha
dec
dec
sbb
lahf
jne
in
or
data16
dec
in
das
ljmp
divl
out
or
push
xchg
shl
ret
inc
popa
je
sub
push
pop
cs
jbe
dec
popf
leave
sub
sub
xor
cmpsb
push
push
lea
test
mov
xlat
icebp
pop
or
jl
or
ret
push
pop
hlt
jp
pop
and
std
fnstsw
in
ds
jbe
xchg
jge
cmp
fdivl
sti
testb
mov
jg
fsubp
dec
inc
outsl
in
out
addr16
and
add
int3
jns,pn
hlt
and
jns
stos
hlt
outsb
jmp
inc
sbb
or
jnp
adc
ss
out
pop
lahf
les
adc
stos
jne
pop
jb
sbb
outsl
aam
dec
cld
pop
xchg
mov
and
das
and
dec
pop
icebp
test
lahf
cmp
or
mov
xchg
repnz
in
std
ret
repnz
add
mov
add
bound
fs
mov
lahf
and
cmp
das
mov
loop
lret
mov
adc
push
dec
mov
jl
ficoms
adc
adc
lea
add
in
repnz
repnz
adc
xchg
dec
adc
inc
fdivs
jns
xlat
or
decl
pop
mov
mov
repz
jae
mov
adc
sahf
cmp
scas
jmp
jge
xor
push
push
adc
add
data16
pop
ficoms
rorb
push
outsb
popf
jg
lea
jle
mov
sbb
insl
lock
sbb
stc
xchg
lds
mov
and
xchg
sub
cmpsl
inc
scas
cmp
add
inc
add
shlb
and
dec
out
pop
test
mov
filds
aam
es
ror
roll
pushf
pop
xchg
sub
dec
xchg
push
cli
xchg
cmp
inc
mov
popa
aad
add
out
mov
lcall
mov
push
fimuls
xchg
xor
inc
arpl
inc
mov
cmp
outsb
sbb
or
gs
lret
repz
xchg
xlat
test
jbe
jl
in
shll
cmpl
pop
mov
mov
inc
sahf
sub
inc
mov
cmp
int
pop
cmpsb
push
sub
pop
arpl
movsb
ja
cmpsb
xor
xlat
clc
xor
sarl
sahf
xchg
mov
mov
mov
jbe
pop
mov
xor
mov
push
sub
add
js
mov
sub
ja
push
rorl
cs
or
orb
inc
test
gs
push
incb
or
outsl
inc
mov
mov
rolb
sbb
jno
shl
push
fcoms
dec
movsl
out
inc
movsb
cmp
or
cmp
hlt
cltd
jmp
lods
aas
mov
ja
pop
sbb
inc
hlt
in
mov
call
add
pop
mov
shlb
imul
jns
or
cmc
dec
pop
jno
jo
icebp
pop
shll
mov
fidivl
insl
repz
adc
inc
dec
mov
jns
cli
sbb
fs
mov
out
notb
or
jne
lret
out
sarl
out
std
into
ret
fld
jecxz
xchg
xchg
push
jbe
nop
or
pop
cmc
mov
or
push
adc
pop
outsl
repz
in
xchg
mov
js
push
xor
push
jle
fsts
lods
int
fiaddl
mov
insl
psubusb
repz
ret
fisttpll
les
in
xchg
repz
cmp
ja
sub
call
insb
outsl
push
lret
sub
loopne
sti
xchg
and
xlat
sbb
sahf
cmp
and
xchg
sti
pop
enter
mov
out
adc
push
out
mov
dec
filds
je
insb
dec
test
mov
sbb
adc
mov
xor
and
mov
fwait
gs
adc
xchg
fistpl
mov
mov
cltd
lahf
jecxz
fcomps
push
jno
xor
leave
sub
addl
xor
mov
xchg
add
sub
xchg
aas
and
sbb
sarl
add
push
test
ficoml
out
shll
movsb
add
push
pop
add
loopne
cmp
fdivs
imulb
adcl
jecxz
ret
cmp
push
adc
pop
aad
into
push
sbb
xchg
in
inc
cmc
sbb
adcl
fmull
lods
ss
inc
std
insb
stc
sbb
mov
out
sub
mov
push
and
adc
xchg
xchg
mov
and
and
test
push
pop
push
out
mov
add
push
ljmp
push
fisubl
fcmovnbe
stos
dec
and
rorl
stc
adcb
add
jg
mov
mov
push
sahf
jmp
lret
jecxz
andl
mov
nop
pusha
push
movl
add
aam
adc
pusha
jle
popa
jbe
xlat
out
cmc
cmp
cmpsb
sub
inc
xorl
scas
insb
sar
inc
insl
jbe
pop
pop
dec
addr16
lcall
inc
test
pushf
rcrl
cltd
mov
mov
in
int
cmpsb
test
mov
cmp
clc
adc
pop
jmp
jnp
call
inc
ret
adcb
jmp
sarb
mov
push
sarb
test
ret
hlt
push
mov
fisubrs
jp
mov
add
addb
in
jle
popa
lock
or
jns
call
jb
cs
imul
movlps
pop
push
add
inc
mov
rorb
nop
xchg
cld
add
sub
sub
mov
push
mov
movsl
cld
jne
cmpsb
into
loope
fiaddl
cmc
lds
fstps
inc
or
xor
xchg
daa
dec
cmc
mov
lret
rcll
sbb
sbb
ret
rorb
mov
add
or
arpl
mov
and
or
dec
push
daa
lods
mov
jmp
movsb
add
xchg
adc
xorl
int
movsb
sbb
insb
sbb
xchg
lods
jge
push
outsb
jb
inc
mov
sti
sahf
fcoml
cmp
xchg
mov
add
xor
cmp
lcall
adc
push
jbe
cmp
jecxz
push
test
aaa
pusha
inc
adc
insl
movsl
xchg
adc
cmp
mov
ljmp
or
icebp
inc
or
and
popf
shrb
outsl
mov
aad
sub
stc
int3
loopne
ret
in
jnp
adc
rorb
add
jle
leave
ja
data16
sbb
or
ret
adc
divb
mov
jnp
enter
call
sub
xchg
loopne
xchg
sbb
adc
mov
push
and
pop
fstpl
mov
xchg
and
scas
jbe
xor
lea
mov
repnz
jmp
add
cmc
addr16
push
leave
repz
fwait
and
rcrl
daa
add
out
ja
in
dec
mov
aad
ja
stc
lds
inc
jl
inc
js
mov
and
insl
jg
xor
push
pop
lahf
rcrl
mov
out
test
adc
mov
adc
pushf
ret
xor
daa
movsl
mov
jns
es
mov
popa
sub
jge
lret
jle
mov
das
pushf
scas
mov
outsl
fsubs
lret
push
pop
sub
add
xchg
pop
cli
fadd
test
sbb
out
push
sub
lds
push
dec
and
jno
int3
insb
out
cs
loopne
jmp
add
shrl
ja
push
cwtl
jb
sub
add
xor
data16
adc
dec
dec
lea
lods
mov
dec
xchg
push
xchg
mov
jecxz
push
jg
mov
sub
rcll
cld
std
fwait
push
das
scas
aaa
jp
test
test
xchg
sbb
fdivrl
push
add
and
lahf
addr16
push
jb
pusha
pop
fs
mov
inc
cmc
stos
mov
outsl
clc
mov
fst
in
movsb
movsl
aas
mov
and
dec
adc
jmp
movsb
je
or
mov
jl
into
inc
ror
or
incl
jl
cwtl
jns
shrl
cltd
out
jne
pop
jne
push
inc
adc
cwtl
decb
push
aas
iret
out
es
mov
xchg
int
in
sbb
push
add
out
jecxz
cmpsl
sub
and
pusha
or
cwtl
inc
sbb
vmwrite
icebp
mov
stos
jge
add
push
lods
dec
dec
mov
arpl
sub
lea
pop
repnz
adc
cmpsl
xchg
xchg
scas
out
mov
mov
cld
sub
pop
push
add
mov
aaa
aas
cmp
mov
adc
or
imul
je
jbe
mov
pop
sbb
pop
xchg
insl
add
sbb
add
les
xchg
or
lods
dec
fdivr
jo
movsb
out
cmpsb
mov
add
mov
adcl
dec
fs
clc
dec
push
in
xorl
cli
ljmp
push
shrb
sti
add
cmp
and
jecxz
dec
push
insl
pop
je
subb
ja
repnz
inc
stos
sahf
push
mov
testb
imul
repnz
xor
fs
add
repz
mov
push
cmp
or
jno
jge
pop
mov
movsb
clc
push
cmp
sti
in
les
inc
call
xorb
jo
dec
fs
and
jl
lock
dec
in
fisttpll
loop
sahf
mov
push
jnp
cmp
cmp
cmp
ret
in
out
fs
jmp
adc
adc
loope
xor
add
cmp
ds
in
mov
sbb
add
mov
punpckhbw
push
flds
pop
mov
sarb
push
loope
and
loopne
jmp
cmp
in
jbe
add
rclb
cmpsb
xor
es
daa
and
jle
lret
pop
iret
push
lret
ret
jne
push
jecxz
daa
stos
test
sub
outsb
test
movsl
in
cli
lock
stos
fiaddl
stos
add
push
cwtl
mov
ret
inc
hlt
lods
cmp
fisubs
push
pop
test
inc
add
adc
adc
sub
mov
lret
add
mov
mov
sub
test
jno
mov
xchg
inc
jns
ja
xor
mov
dec
jae
lea
pop
fmul
pushf
in
lea
js
cmpsl
sbb
out
push
add
or
mov
dec
paddsw
hlt
cltd
xor
hlt
lcall
cmpl
adc
ss
data16
popf
inc
repz
mov
push
sub
or
mov
adc
addr16
ret
psrad
cltd
stos
popa
imul
outsb
jo
jae
jbe
push
mov
cwtl
jmp
mov
push
ds
or
or
jo
dec
pushl
pop
shlb
cmp
bound
iret
mov
mov
sahf
sub
cmp
lret
add
jns
or
mov
sbb
sub
pop
pusha
int3
xchg
imul
dec
cltd
cmp
arpl
sbb
mov
into
sbb
or
jge
call
adc
loop
inc
push
int
xlat
andb
jp
jb
subb
jl
push
jle
and
aas
xchg
insl
mov
vmwrite
out
inc
jp
adc
aad
mov
mov
cli
js
jle
xor
ds
push
adc
mov
lods
mov
inc
insl
xor
pop
mov
pop
sti
call
mov
gs
out
mov
sbb
dec
test
out
clc
decl
xor
or
inc
and
pop
jp
fs
test
jmp
ret
and
mov
dec
push
push
pop
cmc
pop
ret
mov
js
inc
xor
pop
rol
mov
cmp
cwtl
loope
add
mov
movsb
data16
int3
data16
cmp
inc
cmpsb
lret
in
loop
dec
and
sbb
sbb
icebp
in
fs
jbe
out
jg
cld
dec
shrl
mov
pop
xchg
jp
in
js
shl
dec
lcall
push
dec
mov
sbb
aas
xor
mov
push
jnp
inc
imul
xchg
jbe
cli
pop
sub
push
fs
dec
xor
inc
cmp
fs
xchg
stc
imul
imul
sbb
inc
pop
mov
in
sub
push
mov
sub
inc
push
push
icebp
out
jecxz
and
and
mov
xorl
xchg
push
jb
inc
jl
outsb
outsb
xorl
test
imul
sbb
mov
mov
jmp
and
sahf
xchg
les
pop
test
or
inc
add
jb
sbb
ja
sti
repnz
push
cmp
aam
sub
movsb
aam
xor
in
push
ret
push
mov
loop
int
inc
scas
xchg
push
adc
lock
sub
lret
out
mov
loope
jp
aam
xlat
jae
sbb
push
mov
movsl
mov
adc
sub
xchg
fbld
aaa
xor
hlt
or
push
movsb
jb
test
cwtl
stc
push
adc
sub
mov
push
xlat
inc
mov
pop
fbld
cmp
insl
sahf
out
rorl
int3
pop
pushf
and
add
lock
mov
jb
mov
and
test
gs
push
int
iret
repz
xor
rep
lret
pop
pop
jb
mov
sub
inc
test
dec
or
xor
adc
popf
adc
mov
rcrl
inc
xlat
mov
in
mov
repz
test
pop
cmp
push
mov
jl
jno
sub
frstor
jnp
fistpll
enter
and
add
xchg
sub
adc
cmp
mov
test
movsb
lret
mov
ljmp
test
push
pop
xor
stc
or
cmp
pop
mov
cwtl
ficoms
jecxz
and
sub
fistps
xchg
ficomps
test
loop
pop
in
sub
push
cmp
cwtl
fsubrl
insl
stos
xlat
mov
push
arpl
incb
popa
ficoms
mov
mov
adc
jl
fucomp
mov
cwtl
ds
pop
lods
mov
data16
andl
mov
rcll
stc
sbb
jno
lods
fnstenv
adc
pop
add
cwtl
add
push
cmp
jmp
adc
xchg
imul
inc
into
add
fs
dec
pop
cmp
fldt
mov
sahf
pop
pop
push
xchg
sbb
cmc
mov
jae
arpl
xor
inc
repnz
and
mov
iret
dec
push
push
arpl
dec
in
or
not
xor
cmpsb
arpl
cmp
jp
add
cmp
cmp
push
mov
mov
gs
es
loope
cltd
jae
std
repz
adc
adc
mov
stos
stos
and
mov
adcb
mov
mov
rolb
inc
clc
mov
inc
push
xor
push
sub
jns
or
shrl
fstpt
lds
pop
push
imul
dec
inc
jl
mov
cmpsl
adc
clc
mov
push
mov
inc
dec
fstl
inc
pop
inc
dec
pushf
testb
ret
cmp
pusha
iret
sub
adc
jecxz
out
inc
ljmp
dec
adc
fwait
mov
push
xchg
orb
xchg
inc
mov
xor
dec
pop
jmp
cld
xor
out
dec
ss
cmpsl
xchg
into
shrb
mov
xor
cmp
dec
int3
pop
divl
aam
fcmove
leave
inc
shlb
test
sub
push
xor
jle
cmp
mov
lods
lret
dec
dec
pop
xchg
push
dec
xchg
imul
jbe
xchg
shrb
mov
push
mov
dec
repz
inc
lods
push
push
fcomip
les
or
jns
pop
js
and
sbb
cmp
test
jp
cmp
cld
in
mov
aaa
pop
js
dec
test
push
mov
jbe
inc
fs
out
sbb
jl
add
push
imul
inc
addr16
imul
outsl
jnp
or
outsb
cmp
inc
dec
movsb
imul
xor
push
xchg
pop
cwtl
lds
js
sub
cld
xchg
inc
or
hlt
sub
and
es
dec
dec
add
xor
add
jno
subl
jmp
je
out
adc
add
into
dec
dec
dec
inc
inc
cmp
adc
cmp
ss
pop
dec
adc
data16
ficomps
and
cmp
xlat
mov
xchg
cld
movl
jl
cmpsb
pop
cmpsl
or
imul
and
bound
inc
jecxz
push
inc
cmp
or
nop
stos
pop
mov
in
pop
push
or
sahf
add
pusha
loopne
stos
cmc
inc
dec
incl
test
mov
das
icebp
mov
ds
repnz
test
fsubp
jb
mov
dec
inc
gs
jmp
xor
push
lods
lret
dec
shl
test
mov
adc
inc
lods
push
lods
ret
fnstsw
lods
inc
ret
in
mov
in
push
sub
aam
dec
les
xchg
imul
mov
sti
jmp
cli
cmp
push
or
add
push
pop
aam
mov
adc
mov
cmp
fsub
xchg
clc
loop
loope
cli
push
rolb
je
lret
jnp
pop
insl
lcall
and
jg
inc
and
inc
dec
stos
roll
into
xor
push
addb
mov
mov
dec
push
jnp
adc
sbb
mov
mov
repnz
jecxz
insl
add
es
add
or
ljmp
inc
shll
ffree
push
ja
and
add
and
ds
inc
pop
aam
cmp
out
cld
imul
imul
arpl
cmp
sarb
add
stos
stos
jmp
cmp
loopne
test
orl
hlt
xchg
adc
mov
sarb
clc
scas
ret
push
pop
popf
mov
fwait
inc
ja
and
xor
add
js
add
xor
push
repnz
inc
aad
mov
dec
sbb
inc
enter
pop
ljmp
jnp
inc
inc
pusha
xchg
push
push
dec
jo
add
xchg
pushf
push
or
cmp
aam
cmp
inc
inc
cltd
ror
sub
cs
cmpb
sbbl
xor
sar
pop
pusha
in
addl
add
sbb
jnp
adc
cmpsl
lahf
add
xor
mov
pop
imul
sar
dec
mov
ljmp
test
pop
sbb
loope
test
adc
pop
xchg
ss
ret
outsb
aaa
inc
daa
xchg
loop
enter
inc
add
leave
enter
xor
xor
shlb
xchg
push
mov
jge
movsb
das
flds
mov
loope
mov
fwait
imulb
xchg
sub
mov
push
cmp
adcb
stos
aam
iret
add
orb
push
aam
lret
das
inc
insl
clc
dec
ret
and
lcall
mov
movsb
jbe
incb
dec
jbe
imul
cmp
lret
test
cwtl
vpshld
jg
imul
mov
dec
scas
loopne
scas
getsec
inc
xlat
or
mov
inc
cmovb
mov
shr
jns
jae
push
xor
and
add
push
loope
bound
out
inc
ret
mov
pop
int3
xchg
mov
fsts
pop
ret
cltd
addb
out
fcompl
shlb
mov
popf
sbbl
pushf
ds
mov
fdivrp
enter
or
xor
jb
idivb
mov
sbb
and
test
syscall
sbb
dec
ret
inc
lahf
mov
sub
popf
jb,pn
icebp
jp
jle
jno
dec
mov
xchg
outsb
stos
das
mov
mov
xor
dec
mov
pop
test
add
mull
inc
cmpsb
testb
and
in
iret
jo
add
xchg
imul
out
cmp
pop
mov
push
icebp
inc
js
adc
ret
mov
loopne
das
test
shr
jbe
pop
popa
sub
movsb
add
repnz
and
int
dec
dec
jae
xor
pushf
pop
pop
push
cld
movsl
jmp
ss
pop
lahf
mov
cmovge
sbb
inc
mov
mov
cmp
add
rorl
and
or
mov
mov
out
mov
mov
xor
sti
int3
sahf
inc
mov
or
fadds
jbe
daa
cli
cmpsb
lcall
stos
jmp
pop
push
sub
stc
sub
sbb
int3
xchg
scas
out
dec
push
push
dec
movsb
stos
mov
cmpsb
in
cs
inc
xchg
xor
test
sbb
dec
iret
xchg
sbb
push
mulb
mov
dec
je
adc
les
dec
sarb
jbe
es
add
data16
mov
iret
icebp
push
shrl
xlat
mov
or
mov
cmpsb
add
cmp
mov
and
fucomp
stc
pop
mov
push
push
notb
jb
xor
clc
pusha
jecxz
xor
clc
testb
jp
ds
and
and
cmp
popa
jns
enter
repz
cwtl
sbb
je
cmp
or
push
push
push
or
xor
xlat
movsb
inc
add
in
fisttpl
cmp
or
repz
adc
jno
jne
stos
push
sub
into
notb
pop
rcl
xchg
fisubrl
inc
jl
ret
push
or
jnp
stos
shl
adc
es
out
inc
push
push
rclb
sar
push
or
nop
sub
xchg
lock
jbe
shll
sub
xchg
fmuls
or
adc
push
je
lahf
mov
push
lods
inc
inc
sbb
and
adc
insl
pop
mov
xchg
outsl
pop
add
sahf
push
add
sahf
out
call
mov
negl
mov
out
jo
mov
mov
aaa
xor
arpl
movb
mov
jmp
push
test
adc
inc
mov
add
adc
xor
push
movsl
mov
xchg
sub
mov
cltd
mov
and
inc
adc
mov
cli
cld
in
scas
syscall
mov
addr16
rcr
inc
ja
and
push
cmc
add
adc
loope
dec
push
or
arpl
cmp
adc
int3
out
jno
push
or
fsubr
jl
js
lret
pop
pop
xchg
lcall
pusha
movsl
jbe
mov
push
adc
pusha
add
jno
lds
mov
repz
xlat
sbb
mov
inc
lea
cltd
push
jno
jl
mov
ficoml
jne
cmpsb
in
aaa
outsb
adc
pop
and
lcall
cmp
cli
mov
sbb
sub
lods
into
pop
stos
lods
cwtl
inc
xchg
stos
pop
dec
sti
out
ja
popf
mov
and
adc
pop
lret
sarl
add
mov
daa
mov
push
bound
xchg
mov
push
idiv
pop
adc
mov
mov
or
lcall
les
popl
cmc
xor
ret
xchg
mov
add
cmpsl
rcrl
push
pop
or
inc
ds
loop
jbe
push
jno
sbb
imul
out
sub
push
aaa
cmp
sub
out
sbb
stos
jo
add
mov
sbb
ljmp
pop
rclb
jl
or
scas
or
arpl
mov
std
mov
cmp
scas
xor
push
cmp
mov
imul
or
mov
bound
xor
pop
das
jecxz
stos
mov
sbb
roll
dec
pop
cmp
imulb
cmp
inc
xchg
stc
fwait
js
sbb
add
push
mov
mov
scas
pop
xchg
stos
lret
test
cmp
add
adc
leave
cwtl
mov
jle
pop
in
jge
push
jo
arpl
and
daa
cmp
mov
cmpsl
xchg
inc
push
lret
push
data16
sbb
outsl
shrl
es
dec
jo
int
imul
in
or
addr16
adc
ss
cwtl
or
jns
mov
pop
jnp
xchg
lea
loope
mov
fnsave
mov
lods
in
sarl
ja
or
push
test
sub
imul
mov
mov
pop
jbe
xchg
lea
dec
adc
pop
sbb
shrl
cmpsb
loopne
mov
test
scas
adc
hlt
mov
outsl
push
test
je
fdivs
mov
xchg
and
mov
cmp
jg
xor
pop
loopne
sbb
jne
mov
popf
es
xchg
adc
cmp
call
clc
leave
jae
cltd
add
xchg
mov
mov
loope
inc
in
ja
sbb
jns
cld
add
in
stos
push
inc
dec
rolb
arpl
add
pop
xchg
pop
outsb
xor
aas
sahf
push
mov
sahf
jg
fmuls
add
int3
andb
mov
fs
outsl
int3
cmpsl
sub
jns
adc
testl
test
push
mov
adcl
in
sub
int3
movb
cld
sahf
pop
mov
sbb
inc
leave
lret
lock
mov
pop
je
pop
or
filds
cmp
aaa
dec
aad
mov
mov
push
aaa
xorl
and
sbb
arpl
je
in
mov
mov
imul
rorl
stos
and
fwait
int3
dec
rcr
add
or
sbb
or
sbb
addr16
fptan
jle
out
shl
pop
or
sub
jae
and
std
dec
xchg
fidivrl
pusha
shlb
and
inc
jb
sbb
lods
into
out
pop
push
xorl
jl
inc
xlat
test
les
adc
mov
jmp
sub
or
pushf
fisubrs
mov
mov
outsb
cld
lea
xchg
stos
xchg
or
fwait
and
imul
inc
and
xlat
test
xchg
mov
leave
mov
mov
jnp
addr16
fcomps
mov
mov
sub
and
addr16
fstpl
mov
scas
mov
cmp
nop
testl
sbb
jg
mov
in
push
inc
fidivrl
dec
out
or
imul
cwtl
unpckhps
xor
dec
pop
out
push
or
out
icebp
imul
shl
imul
fsubs
fwait
and
ja
adc
adc
adc
dec
in
addr16
ss
and
in
mov
leave
int
cmp
and
add
cmp
movsb
int3
dec
dec
cmpsl
or
add
je
fisttpl
outsl
les
adc
xor
sbb
in
and
scas
or
scas
cmp
pop
xchg
or
rolb
jge
xorl
dec
add
rcrl
arpl
hlt
mov
addl
lods
push
loopne
push
jno
lcall
or
ljmp
mov
xchg
mov
pusha
popa
mov
or
cmc
jne
stos
adc
sahf
pushf
inc
scas
shll
or
inc
mov
arpl
test
or
icebp
in
jle
push
arpl
and
rclb
movsb
mov
pop
push
adc
dec
xor
add
mov
shl
movsl
add
cmp
fiadds
and
insb
movsb
sbb
hlt
sbb
push
xchg
xor
mov
leave
sbb
lods
lods
sbb
lret
pop
mov
mov
jp
ljmp
out
mov
jl
jnp
jae
sbb
loope
xlat
sahf
outsb
jnp
call
fcmovne
cld
mov
test
sub
sub
mov
sbb
decl
push
mov
sti
jnp
sti
jo
fidivl
scas
push
lcall
cmp
fisttps
lret
nop
sub
faddl
cwtl
xchg
push
sub
mov
push
fcoms
int3
mov
pop
aam
or
jnp
mov
in
mov
push
mov
mov
cs
out
cld
sbb
or
into
jg
aad
das
add
xchg
stc
scas
pop
push
enter
neg
imul
lret
insb
cltd
movsl
xor
nop
push
inc
ds
pop
push
push
sti
dec
xlat
mul
shr
divl
dec
xchg
fmul
adc
in
out
jno
cwtl
addb
mov
daa
push
inc
cmp
lahf
jb
shl
pop
fisubl
test
push
loop
pop
adc
mov
pusha
stos
sub
fstpl
das
aaa
movsb
lret
mov
mov
shrb
pop
and
inc
pop
mov
adc
jae
mov
cmpsb
nop
mov
pop
or
and
aam
clc
adc
jle
test
xchg
add
nop
outsb
sbb
pop
icebp
dec
lret
mov
icebp
add
ss
lods
pop
movsb
out
loop
pop
or
jp
pop
jecxz
dec
or
sub
cwtl
scas
cmp
ret
lret
cmpsb
movsb
int
fwait
lods
movsb
jnp
or
repz
int
out
jp
inc
cs
xchg
adc
mov
lcall
mov
push
push
data16
inc
std
shl
js
push
and
popa
iret
adc
mov
dec
stc
mov
sbb
mov
dec
stos
fidivs
aad
arpl
push
cmp
test
loop
scas
xchg
es
and
ds
inc
dec
sub
jmp
cmc
fisttpll
sub
and
and
jge
loopne
xchg
pop
xlat
inc
movsb
adc
jo
sahf
mov
lea
sbb
adc
andl
dec
add
movsl
push
xor
xor
fcoml
sub
jae
insb
popa
pop
push
daa
push
fcoms
stos
mov
arpl
push
adc
xchg
mov
cli
cmp
int3
push
cmp
fistpl
mov
dec
mov
ljmp
outsb
ds
jbe
subb
movsl
icebp
ret
mov
aas
mov
insl
xor
bswap
lret
lods
mov
nop
aad
dec
scas
xorb
mov
cli
or
add
repz
out
adc
lock
ret
fwait
adc
orl
adc
jge
or
push
sbb
cmp
data16
mov
vmwrite
jle
add
jne
popf
pop
lods
push
lret
jl
outsl
repz
insb
cmpsl
call
addb
sahf
fstl
cld
cld
sub
pop
push
cmp
push
dec
decb
pop
fstps
rorb
mov
mov
dec
ret
dec
mov
adc
mov
icebp
std
cmpsb
push
addl
in
and
or
push
stc
and
or
jp
inc
xor
cmc
cmp
push
mov
in
repz
or
sbb
movsl
rcrl
adc
dec
push
dec
dec
fsubr
fisttps
inc
add
xor
lods
cmp
ret
testb
cmp
jo
push
ja
dec
or
popf
mov
inc
sbb
adc
cld
mov
xlat
adc
mov
mov
inc
push
jle
mov
pop
and
std
lea
jbe
outsl
xorl
mov
sti
and
mov
pop
test
jmp
rcll
adc
xor
or
add
add
stos
push
push
testl
test
das
or
xchg
push
sahf
mov
or
push
xorl
pop
jle
sbb
xchg
mov
dec
or
lret
mov
push
cmp
pop
js
js
fstpl
sub
ss
pop
js
daa
stos
pop
sbb
push
and
lods
fwait
imul
cmp
fucomi
dec
cmc
ja
xor
jne
dec
xchg
xor
out
repnz
insb
rorl
inc
mov
ret
or
repz
sub
mov
xor
das
cmp
in
lods
adc
cmp
xchg
das
std
punpckhdq
rcrb
xor
pop
or
dec
aaa
and
or
bound
cltd
in
xchg
mov
jle
movsl
xchg
mov
xor
pop
or
push
dec
mov
lea
pop
mov
xor
pop
clc
sub
fsubs
into
iret
mov
xor
rolb
jnp
dec
dec
inc
fcoml
test
pushf
and
jb
mov
cmp
mov
cli
in
out
jle
add
aam
lcall
loope
sub
sbb
pop
out
push
pop
jb
aas
insl
enter
hlt
or
aad
mov
rorb
adcl
cli
inc
jne
out
lcall
cmp
lds
inc
xor
stos
mov
ja
and
outsl
lods
rorb
cmp
fdivs
gs
flds
push
addr16
mov
mov
xor
or
cmp
cmpsb
jle
sti
das
ljmp
sub
popf
lahf
and
sub
aaa
inc
inc
aas
cmp
lods
mov
fwait
ljmp
mov
inc
and
adc
jno
dec
pop
pop
scas
jmp
mov
add
inc
mov
loope
mulb
mov
jbe
scas
inc
push
adc
adc
xor
xchg
and
push
inc
jo
jne
xor
stos
cmp
cmp
cwtl
mov
jno
xor
mov
data16
dec
aas
js
cmp
nop
xchg
sub
fldl
sar
pop
inc
mov
dec
ret
jp
sub
cmp
push
or
stos
inc
inc
sbb
loope
dec
ja
lret
pop
sbb
inc
sahf
mov
mov
gs
imul
push
movsb
pop
lret
pop
and
xor
mov
imul
cmpsl
fsubrl
xor
stos
mov
dec
fstpl
incl
cld
inc
mov
int
lock
lahf
jg
sub
jne
out
add
dec
and
cli
jle
cwtl
pop
sub
mov
jl
cmp
and
jmp
cld
sub
imul
in
enter
jns
lcall
mov
dec
adc
or
jnp
in
mov
lea
les
fisttpll
inc
xchg
popa
mov
inc
push
rorl
adc
inc
or
inc
xlat
xchg
js
stos
pop
pop
out
sbb
cmp
adc
jecxz
jmp
sbb
xor
jp
in
jle
fcom
xchg
data16
ja
in
adc
sar
outsb
fisttpl
cmpsb
or
dec
or
stos
pop
push
xchg
fdiv
mov
imul
enter
push
jb
inc
mov
out
jle
mov
les
shll
inc
mov
mov
les
into
push
mov
fidivl
mov
inc
icebp
cld
fs
jno
lock
cld
out
pop
jae
and
leave
sub
les
outsb
gs
xchg
jne
or
inc
in
ss
leave
test
xor
inc
in
mov
dec
aaa
adc
loopne
bound
jbe
jge
inc
test
jno
fs
lret
cmp
int
shlb
mov
adc
pop
data16
imul
test
std
and
rdpmc
iret
and
mov
sub
popa
pop
pop
call
inc
repnz
xor
data16
fmull
outsb
push
jae
negb
pop
sbb
sbb
pop
loopne
xorb
cli
call
bound
divb
mov
sahf
xchg
cli
iret
mov
les
pop
shll
jno
sub
push
push
int
mov
lahf
sbb
lods
int3
mov
gs
les
sub
pop
or
jno
add
and
push
push
cmc
loop
les
mov
fdivl
addl
xchg
gs
movsl
les
or
jns
mov
jp
inc
xor
push
clc
jns
leave
ret
ss
and
jo
in
jmp
mov
daa
test
mov
and
sbb
mov
or
cmp
add
ss
or
mov
idivl
and
lock
ds
and
stos
sbb
adc
add
arpl
fisttps
push
sub
mov
jmp
mov
lods
shrl
sbb
popa
lahf
enter
or
jns
adc
inc
add
jns
add
mov
inc
sub
pop
mov
notl
testl
sti
add
xorb
add
iret
bound
lea
cmp
jb
mov
les
jne
adcb
mov
push
push
and
negl
xchg
ror
sub
push
xor
lds
mov
movsl
jb
popa
push
sub
dec
in
adc
call
mov
inc
stos
jns
xchg
sub
fidivrl
nop
popl
ss
mov
sarl
imul
fcmovu
scas
xor
xchg
push
psubq
dec
mov
dec
mov
movsl
jmp
adc
or
bound
inc
aad
jp
cmp
adc
movsl
add
fiaddl
scas
xor
mov
rorb
sub
xor
je
mov
dec
std
jne
hlt
lods
fildl
cmp
mov
mov
lcall
fiadds
lock
lods
push
lea
cmp
lds
and
xchg
rcll
lds
sti
dec
mov
cltd
or
stos
xchg
jne
sbb
sub
jno
add
mov
daa
ficoms
dec
insl
in
push
data16
popa
and
in
or
imul
mov
scas
xor
push
inc
xor
pop
pop
rep
or
xlat
mov
lahf
add
fldt
lock
fists
in
jno
gs
push
popa
fdivr
jg
xor
fsubrs
aam
addl
adc
jnp
jns
mov
movsl
ret
dec
std
jmp
xchg
inc
adc
rorl
xchg
jne
mov
insb
inc
mov
in
inc
push
jg
leave
addb
jnp
cmp
mov
or
stos
add
add
fildll
int
cltd
test
mov
push
fsubrl
cld
adc
leave
or
ret
cld
add
pop
xchg
fdivrl
enter
sub
fcoms
and
fstp
lea
or
jge
popf
inc
fadds
mov
cwtl
add
sub
je
pop
int3
jb
cmp
fcoms
inc
jg
aaa
aas
sub
cmp
ret
in
mov
int3
inc
test
push
mov
push
and
adc
xchg
mov
sbb
dec
outsb
out
outsb
mov
adc
cmpl
les
or
mov
jl,pn
iret
in
push
and
div
and
dec
popf
dec
popf
out
jl
stos
xchg
out
sub
std
or
lds
subb
dec
mov
int3
pop
mov
adc
movsb
add
fnstenv
stos
mov
pop
loopne
mov
mov
adc
ja
xor
test
insl
add
jno
cmp
mov
sub
sub
or
pushf
cmp
jbe
dec
rorb
sub
jbe
push
add
and
jmp
pop
test
mov
int3
mov
pop
stos
mov
loope
lea
repz
pop
gs
nop
sub
call
ret
or
lret
mov
adc
add
jle
mov
mov
lods
cli
adcl
repz
inc
popf
test
js
mov
adc
mov
mov
and
xchg
imul
cwtl
adc
gs
stos
je
popf
xor
mov
mov
lock
mov
jle
sarl
xor
mov
js
adc
dec
inc
and
loop
add
mov
sub
out
out
dec
inc
imul
sbb
arpl
mov
lods
enter
add
ret
loop
jge
or
pminub
push
sarl
xchg
mov
cmpsl
insb
sub
icebp
add
fwait
scas
or
clc
and
cmp
mov
mov
lock
mov
and
adc
adc
je
mov
cmp
loop
sbb
sbb
fs
cmp
aas
xchg
in
push
xchg
rcrb
cwtl
into
add
imul
jmp
xchg
mov
ljmp
add
mov
jno
cmp
xor
or
cltd
add
or
xlat
test
adc
ds
inc
sub
add
pop
in
push
mov
cmp
pop
clc
aaa
and
mov
loopne
cmp
mov
jp
pop
push
add
cmp
pop
cmc
and
loop
jge
sbb
pusha
cmpsl
aam
outsb
mov
lahf
mov
mov
xor
mov
push
jne
int
cmp
mov
xchg
pop
cmp
cmp
push
xor
sub
add
in
leave
or
or
dec
cmpsl
push
stc
jnp
mov
les
cmp
loope
lds
mov
mov
mov
push
or
and
sbbl
testb
xor
ljmp
jno
std
out
cmp
jns
jp
cltd
loop
ret
cmp
int3
std
cmp
adc
iret
subb
icebp
or
je
andb
mov
les
pop
inc
jnp
pop
out
pop
ja
mov
jp
popf
dec
sub
pop
inc
fistpl
jo
ret
xchg
les
pop
pop
or
nop
push
add
sbb
sub
mov
pop
call
repz
xor
cmp
mov
mov
inc
and
mov
std
dec
mov
adc
stc
into
mov
or
xchg
mov
push
and
adc
mov
mov
fstl
cmpl
rclb
cli
inc
jg
push
sti
cmc
and
or
flds
call
mov
add
and
scas
cmc
shll
mov
test
dec
imul
pextrw
in
cmpsl
xor
data16
push
adc
xlat
mov
xor
push
inc
ja
pushf
xor
xor
mull
pop
das
ja
les
fisubl
mov
add
icebp
mov
sbb
push
in
pop
mov
enter
test
xchg
fsubrl
mov
push
lret
mov
js
loopne
push
daa
pop
repz
pop
insl
out
xchg
adc
idivl
aad
lahf
sub
or
xchg
add
jecxz
inc
iret
sub
in
fldl
xchg
lahf
std
mov
xor
cs
pop
jg
inc
or
pop
outsb
sbb
push
mov
sti
and
ret
cmp
les
jnp
icebp
mov
inc
adc
inc
insl
aas
sahf
adc
sbb
or
pop
lods
out
paddb
dec
aaa
pushf
in
popf
or
out
addr16
push
rcrb
mov
lods
jl
call
fwait
xchg
xchg
jns
into
jle
test
fldl
mov
adc
push
xchg
mov
cmp
add
xchg
xchg
xchg
xchg
adc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
pop
popa
into
pop
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
